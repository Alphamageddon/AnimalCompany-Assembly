Type: System.Collections.Concurrent.ConcurrentDictionary`2

Method: System.Boolean IsValueWriteAtomic()

Disassembly:
	0x02961710 LDR X28, [X8 + 0x20]
	0x02961714 BL 0x1C16D44
	0x02961718 CBZ X28, 0x29617C4
	0x0296171C LDR W8, [X28 + 0x30]
	0x02961720 CMP W8, W21
	0x02961724 B.NE 0x29617BC
	0x02961728 LDR X25, [X23 + 0x18]
	0x0296172C CBZ X25, 0x29617F8
	0x02961730 LDR X8, [X20 + 0x20]
	0x02961734 LDP X27, X26, [X28 + 0x10]
	0x02961738 LDR X8, [X8 + 0xC0]
	0x0296173C LDR X1, [X8 + 0x20]
	0x02961740 LDRB W8, [X1 + 0x135]
	0x02961744 TBNZ X8, 0x0, 0x2961754
	0x02961748 MOV X0, X1
	0x0296174C BL 0x1C5C684
	0x02961750 MOV X1, X0
	0x02961754 LDR X8, [X25]
	0x02961758 LDRH W9, [X8 + 0x12E]
	0x0296175C CBZ X9, 0x2961780
	0x02961760 LDR X10, [X8 + 0xB0]
	0x02961764 ADD X10, X10, 0x8
	0x02961768 LDUR X11, [X10 - 0x8]
	0x0296176C CMP X11, X1
	0x02961770 B.EQ 0x2961790
	0x02961774 SUBS X9, X9, 0x1
	0x02961778 ADD X10, X10, 0x10
	0x0296177C B.NE 0x2961768
	0x02961780 MOV X0, X25
	0x02961784 MOV W2, W31
	0x02961788 BL 0x1C5C788
	0x0296178C B 0x296179C
	0x02961790 LDRSW X9, [X10]
	0x02961794 ADD X8, X8, X9, 0x4, LSL
	0x02961798 ADD X0, X8, 0x138
	0x0296179C LDP X8, X5, [X0]
	0x029617A0 MOV X0, X25
	0x029617A4 MOV X1, X27
	0x029617A8 MOV X2, X26
	0x029617AC MOV X3, X24
	0x029617B0 MOV X4, X22
	0x029617B4 BLR X8
	0x029617B8 TBNZ X0, 0x0, 0x29617D0
	0x029617BC LDR X28, [X28 + 0x28]
	0x029617C0 B 0x2961714
	0x029617C4 MOV W0, W31
	0x029617C8 STR X31, [X19]
	0x029617CC B 0x29617DC
	0x029617D0 LDR X8, [X28 + 0x20]
	0x029617D4 MOVZ W0, 0x1
	0x029617D8 STR X8, [X19]
	0x029617DC LDP X20, X19, [X31 + 0x50]
	0x029617E0 LDP X22, X21, [X31 + 0x40]
	0x029617E4 LDP X24, X23, [X31 + 0x30]
	0x029617E8 LDP X26, X25, [X31 + 0x20]
	0x029617EC LDP X28, X27, [X31 + 0x10]
	0x029617F0 LDR X30, [X31], #0x60
	0x029617F4 RET
	0x029617F8 BL 0x1C16F20
	0x029617FC BL 0x1C16F28
	0x02961800 STR X30, [X31 - 0x40]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1A7A000
	005 Move W8, [X20+3665]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x1793000
	012 Move X0, [X0+1728]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3665], W8
	016 Move X0, [X19+32]
	017 Move X20, 0x1793000
	018 Move W8, [X0+309]
	019 Move X20, [X20+1728]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {25}
	024 Call 0x1C5D684
	025 Move X8, [X20]
	026 Move X9, [X0+192]
	027 Move W10, [X8+224]
	028 Move X19, [X9]
	029 Compare W10, 0
	030 JumpIfNotEqual {33}
	031 Move X0, X8
	032 Call 0x1C17DFC
	033 Move X0, X19
	034 Move X1, X31
	035 Call Type.GetTypeFromHandle, X0
	036 Compare X0, 0
	037 JumpIfEqual {71}
	038 Move X1, X31
	039 Move X19, X0
	040 Call Type.get_IsValueType, X0
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {60}
	045 Move X0, [X20]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, X19
	051 Move X1, X31
	052 Call Type.GetTypeCode, X0
	053 Move W8, W0
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move W0, W31
	056 Move W9, 1
	057 NotImplemented "Instruction LSLV not yet implemented."
	058 Move W9, 0x27F8
	059 And W31, W8, W9
	060 Move W0, 1
	061 Move X20, [X31+16]
	062 Move X19, [X31+24]
	063 Move X30, [X31+32]
	064 Return X0
	065 Move W9, 0x5800
	066 And W31, W8, W9
	067 Move X0, X31
	068 Call IntPtr.get_Size
	069 NotImplemented "Instruction CMP not yet implemented."
	070 NotImplemented "Instruction CSET not yet implemented."
	071 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x02961804 STP X24, X23, [X31 + 0x10]
	0x02961808 STP X22, X21, [X31 + 0x20]
	0x0296180C STP X20, X19, [X31 + 0x30]
	0x02961810 ADRP X21, 0x1A79000
	0x02961814 LDRB W8, [X21 + 0xE54]
	0x02961818 MOV X20, X1
	0x0296181C MOV X19, X0
	0x02961820 TBNZ X8, 0x0, 0x2961844
	0x02961824 ADRP X0, 0x1793000
	0x02961828 LDR X0, [X0 + 0xE58]
	0x0296182C BL 0x1C16CF4
	0x02961830 ADRP X0, 0x1792000
	0x02961834 LDR X0, [X0 + 0x5A8]
	0x02961838 BL 0x1C16CF4
	0x0296183C MOVZ W8, 0x1
	0x02961840 STRB W8, [X21 + 0xE54]
	0x02961844 STR W31, [X31 + 0xC]
	0x02961848 LDR X8, [X20 + 0x20]
	0x0296184C LDR X8, [X8 + 0xC0]
	0x02961850 LDR X2, [X8 + 0x158]
	0x02961854 ADD X1, X31, 0xC
	0x02961858 MOV X0, X19
	0x0296185C BL 0x2964398
	0x02961860 LDR X8, [X20 + 0x20]
	0x02961864 LDR X8, [X8 + 0xC0]
	0x02961868 LDR X0, [X8 + 0xB8]
	0x0296186C LDRB W8, [X0 + 0x135]
	0x02961870 TBNZ X8, 0x0, 0x2961878

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+32]
	005 Move X20, X1
	006 Move X19, X0
	007 Move X8, [X8+192]
	008 Move X8, [X8+16]
	009 Move W9, [X8+309]
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X8
	015 Call 0x1C5D684
	016 Move X8, X0
	017 Move W9, [X8+224]
	018 Compare W9, 0
	019 JumpIfNotEqual {22}
	020 Move X0, X8
	021 Call 0x1C17DFC
	022 Call 0x2965348
	023 Move X8, [X20+32]
	024 Move W1, W0
	025 Move X0, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X8, [X8+192]
	029 Move W2, 31
	030 Move W3, 1
	031 Move X4, X31
	032 Move X5, [X8+24]
	033 Move X30, [X31+32]
	034 Call 0x2961D44, X0, X1, X2, X3, X4
	035 Return 

Method: System.Void .ctor(System.Collections.Generic.IEqualityComparer`1<TKey> comparer)

Disassembly:
	0x02961874 BL 0x1C5C684
	0x02961878 MOVZ W1, 0x1F
	0x0296187C BL 0x1C16D6C
	0x02961880 LDR X22, [X19 + 0x10]
	0x02961884 MOV X21, X0
	0x02961888 BL 0x1C16D44
	0x0296188C CBZ X22, 0x2961974
	0x02961890 LDR X22, [X22 + 0x18]
	0x02961894 LDR X23, [X19 + 0x10]
	0x02961898 BL 0x1C16D44
	0x0296189C CBZ X23, 0x2961978
	0x029618A0 LDR X23, [X23 + 0x20]
	0x029618A4 BL 0x1C16D44
	0x029618A8 CBZ X23, 0x296197C
	0x029618AC ADRP X8, 0x1793000
	0x029618B0 LDR X8, [X8 + 0xE58]
	0x029618B4 LDR W1, [X23 + 0x18]
	0x029618B8 LDR X0, [X8]
	0x029618BC BL 0x1C16D6C
	0x029618C0 LDR X8, [X20 + 0x20]
	0x029618C4 MOV X23, X0
	0x029618C8 LDR X8, [X8 + 0xC0]
	0x029618CC LDR X0, [X8 + 0xA8]
	0x029618D0 LDRB W8, [X0 + 0x135]
	0x029618D4 TBNZ X8, 0x0, 0x29618DC
	0x029618D8 BL 0x1C5C684
	0x029618DC BL 0x1C16F10
	0x029618E0 LDR X8, [X20 + 0x20]
	0x029618E4 MOV X24, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X21, X2
	007 Move X19, X1
	008 Move X20, X0
	009 Move X8, [X8+192]
	010 Move X8, [X8+16]
	011 Move W9, [X8+309]
	012 Move TEMP, X9
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {19}
	016 Move X0, X8
	017 Call 0x1C5D684
	018 Move X8, X0
	019 Move W9, [X8+224]
	020 Compare W9, 0
	021 JumpIfNotEqual {24}
	022 Move X0, X8
	023 Call 0x1C17DFC
	024 Call 0x2965348
	025 Move X8, [X21+32]
	026 Move W1, W0
	027 Move X0, X20
	028 Move X4, X19
	029 Move X8, [X8+192]
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move W2, 31
	033 Move W3, 1
	034 Move X5, [X8+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Call 0x2961D44, X0, X1, X2, X3, X4
	038 Return 

Method: System.Void InitializeFromCollection(System.Collections.Generic.IEnumerable`1<System.Collections.Generic.KeyValuePair`2<TKey, TValue>> collection)

Disassembly:
	0x029618E8 LDR X8, [X8 + 0xC0]
	0x029618EC LDR X4, [X8 + 0xC0]
	0x029618F0 MOV X1, X21
	0x029618F4 MOV X2, X22
	0x029618F8 MOV X3, X23
	0x029618FC BL 0x2676894
	0x02961900 BL 0x1C16D44
	0x02961904 STR X24, [X19 + 0x10]
	0x02961908 CBZ X24, 0x2961980
	0x0296190C LDR X20, [X24 + 0x10]
	0x02961910 CBZ X20, 0x2961984
	0x02961914 LDR X21, [X24 + 0x18]
	0x02961918 CBZ X21, 0x2961988
	0x0296191C ADRP X8, 0x1792000
	0x02961920 LDR X8, [X8 + 0x5A8]
	0x02961924 LDR X0, [X8]
	0x02961928 LDR W8, [X0 + 0xE0]
	0x0296192C CBNZ W8, 0x2961934
	0x02961930 BL 0x1C16DFC
	0x02961934 LDR W8, [X20 + 0x18]
	0x02961938 LDR W9, [X21 + 0x18]
	0x0296193C SDIV W1, W8, W9
	0x02961940 MOVZ W0, 0x1
	0x02961944 MOV X2, X31
	0x02961948 BL 0x337EDF0
	0x0296194C STR W0, [X19 + 0x24]
	0x02961950 LDR W2, [X31 + 0xC]
	0x02961954 MOV X0, X19
	0x02961958 MOV W1, W31
	0x0296195C BL 0x29645AC
	0x02961960 LDP X20, X19, [X31 + 0x30]
	0x02961964 LDP X22, X21, [X31 + 0x20]
	0x02961968 LDP X24, X23, [X31 + 0x10]
	0x0296196C LDR X30, [X31], #0x40
	0x02961970 RET
	0x02961974 BL 0x1C16F20
	0x02961978 BL 0x1C16F20
	0x0296197C BL 0x1C16F20
	0x02961980 BL 0x1C16F20
	0x02961984 BL 0x1C16F20
	0x02961988 BL 0x1C16F20
	0x0296198C B 0x29619B8
	0x02961990 B 0x29619B8
	0x02961994 B 0x29619B8
	0x02961998 B 0x29619B8
	0x0296199C B 0x29619B8
	0x029619A0 B 0x29619B8
	0x029619A4 B 0x29619B8
	0x029619A8 B 0x29619B8
	0x029619AC B 0x29619B8
	0x029619B0 B 0x29619B8
	0x029619B4 B 0x29619B8
	0x029619B8 MOV X20, X0
	0x029619BC CMP W1, 0x1
	0x029619C0 B.NE 0x29619F0
	0x029619C4 MOV X0, X20
	0x029619C8 BL 0x3EB1AD0
	0x029619CC LDR X21, [X0]
	0x029619D0 BL 0x3EB1AE0
	0x029619D4 LDR W2, [X31 + 0xC]
	0x029619D8 MOV X0, X19
	0x029619DC MOV W1, W31
	0x029619E0 BL 0x29645AC
	0x029619E4 CBZ X21, 0x2961960
	0x029619E8 MOV X0, X21
	0x029619EC BL 0x1C16F18
	0x029619F0 MOV X21, X31
	0x029619F4 B 0x29619FC
	0x029619F8 MOV X20, X0
	0x029619FC LDR W2, [X31 + 0xC]
	0x02961A00 MOV X0, X19
	0x02961A04 MOV W1, W31
	0x02961A08 BL 0x29645AC
	0x02961A0C CBNZ X21, 0x2961A18
	0x02961A10 MOV X0, X20
	0x02961A14 BL 0x1D2C690
	0x02961A18 MOV X0, X21
	0x02961A1C BL 0x1C16F18
	0x02961A20 BL 0x1990590
	0x02961A24 SUB X31, X31, 0x50
	0x02961A28 STP X30, X25, [X31 + 0x10]
	0x02961A2C STP X24, X23, [X31 + 0x20]
	0x02961A30 STP X22, X21, [X31 + 0x30]
	0x02961A34 STP X20, X19, [X31 + 0x40]
	0x02961A38 MOV X20, X3
	0x02961A3C CBZ X1, 0x2961B38
	0x02961A40 MOV W21, W2
	0x02961A44 TBNZ X2, 0x1F, 0x2961B6C
	0x02961A48 STR W31, [X31 + 0xC]
	0x02961A4C LDR X8, [X20 + 0x20]
	0x02961A50 MOV X22, X1
	0x02961A54 MOV X19, X0
	0x02961A58 LDR X8, [X8 + 0xC0]
	0x02961A5C LDR X2, [X8 + 0x158]
	0x02961A60 ADD X1, X31, 0xC
	0x02961A64 BL 0x2964398
	0x02961A68 MOV X24, X31
	0x02961A6C MOV W23, W31
	0x02961A70 LDR X25, [X19 + 0x10]
	0x02961A74 BL 0x1C16D44
	0x02961A78 CBZ X25, 0x2961B24
	0x02961A7C LDR X8, [X25 + 0x18]
	0x02961A80 CBZ X8, 0x2961B28
	0x02961A84 TBNZ X23, 0x1F, 0x2961ACC
	0x02961A88 LDRSW X8, [X8 + 0x18]
	0x02961A8C CMP X24, X8
	0x02961A90 B.GE 0x2961ACC
	0x02961A94 LDR X25, [X19 + 0x10]
	0x02961A98 BL 0x1C16D44
	0x02961A9C CBZ X25, 0x2961B30
	0x02961AA0 LDR X25, [X25 + 0x20]
	0x02961AA4 BL 0x1C16D44
	0x02961AA8 CBZ X25, 0x2961B34
	0x02961AAC LDR W8, [X25 + 0x18]
	0x02961AB0 CMP X24, X8
	0x02961AB4 B.CS 0x2961B2C
	0x02961AB8 ADD X8, X25, X24, 0x2, LSL
	0x02961ABC LDR W8, [X8 + 0x20]
	0x02961AC0 ADD X24, X24, 0x1
	0x02961AC4 ADD W23, W8, W23
	0x02961AC8 B 0x2961A70
	0x02961ACC TBNZ X23, 0x1F, 0x2961BBC
	0x02961AD0 LDR W8, [X22 + 0x18]
	0x02961AD4 SUB W8, W8, W23
	0x02961AD8 CMP W8, W21
	0x02961ADC B.LT 0x2961BBC
	0x02961AE0 LDR X8, [X20 + 0x20]
	0x02961AE4 LDR X8, [X8 + 0xC0]
	0x02961AE8 LDR X3, [X8 + 0x170]
	0x02961AEC MOV X0, X19
	0x02961AF0 MOV X1, X22
	0x02961AF4 MOV W2, W21
	0x02961AF8 BL 0x2961E9C
	0x02961AFC LDR W2, [X31 + 0xC]
	0x02961B00 MOV X0, X19
	0x02961B04 MOV W1, W31
	0x02961B08 BL 0x29645AC
	0x02961B0C LDP X20, X19, [X31 + 0x40]
	0x02961B10 LDP X22, X21, [X31 + 0x30]
	0x02961B14 LDP X24, X23, [X31 + 0x20]
	0x02961B18 LDP X30, X25, [X31 + 0x10]
	0x02961B1C ADD X31, X31, 0x50
	0x02961B20 RET
	0x02961B24 BL 0x1C16F20
	0x02961B28 BL 0x1C16F20
	0x02961B2C BL 0x1C16F28
	0x02961B30 BL 0x1C16F20
	0x02961B34 BL 0x1C16F20
	0x02961B38 ADRP X0, 0x1797000
	0x02961B3C LDR X0, [X0 + 0x528]
	0x02961B40 BL 0x1C16D08
	0x02961B44 BL 0x1C16F10
	0x02961B48 MOV X19, X0
	0x02961B4C ADRP X0, 0x17BA000
	0x02961B50 LDR X0, [X0 + 0x640]
	0x02961B54 BL 0x1C16D08
	0x02961B58 MOV X1, X0
	0x02961B5C MOV X0, X19
	0x02961B60 MOV X2, X31
	0x02961B64 BL 0x330E100
	0x02961B68 B 0x2961BB0
	0x02961B6C ADRP X0, 0x179A000
	0x02961B70 LDR X0, [X0 + 0x760]
	0x02961B74 BL 0x1C16D08
	0x02961B78 BL 0x1C16F10
	0x02961B7C MOV X19, X0
	0x02961B80 ADRP X0, 0x179D000
	0x02961B84 LDR X0, [X0 + 0x130]
	0x02961B88 BL 0x1C16D08
	0x02961B8C MOV X21, X0
	0x02961B90 ADRP X0, 0x17BD000
	0x02961B94 LDR X0, [X0 + 0x268]
	0x02961B98 BL 0x1C16D08
	0x02961B9C MOV X2, X0
	0x02961BA0 MOV X0, X19
	0x02961BA4 MOV X1, X21
	0x02961BA8 MOV X3, X31
	0x02961BAC BL 0x3311888
	0x02961BB0 MOV X0, X19
	0x02961BB4 MOV X1, X20
	0x02961BB8 BL 0x1C16DEC
	0x02961BBC ADRP X0, 0x179A000
	0x02961BC0 LDR X0, [X0 + 0x578]
	0x02961BC4 BL 0x1C16D08
	0x02961BC8 BL 0x1C16F10
	0x02961BCC MOV X21, X0
	0x02961BD0 ADRP X0, 0x17BD000
	0x02961BD4 LDR X0, [X0 + 0x270]
	0x02961BD8 BL 0x1C16D08
	0x02961BDC MOV X1, X0
	0x02961BE0 MOV X0, X21
	0x02961BE4 MOV X2, X31
	0x02961BE8 BL 0x3314A68
	0x02961BEC MOV X0, X21
	0x02961BF0 MOV X1, X20
	0x02961BF4 BL 0x1C16DEC
	0x02961BF8 B 0x2961C20
	0x02961BFC B 0x2961C20
	0x02961C00 B 0x2961C20
	0x02961C04 B 0x2961C20
	0x02961C08 B 0x2961C20
	0x02961C0C B 0x2961C20
	0x02961C10 B 0x2961C20
	0x02961C14 B 0x2961C20
	0x02961C18 B 0x2961C20
	0x02961C1C B 0x2961C20
	0x02961C20 MOV X20, X0
	0x02961C24 CMP W1, 0x1
	0x02961C28 B.NE 0x2961C58
	0x02961C2C MOV X0, X20
	0x02961C30 BL 0x3EB1AD0
	0x02961C34 LDR X21, [X0]
	0x02961C38 BL 0x3EB1AE0
	0x02961C3C LDR W2, [X31 + 0xC]
	0x02961C40 MOV X0, X19
	0x02961C44 MOV W1, W31
	0x02961C48 BL 0x29645AC
	0x02961C4C CBZ X21, 0x2961B0C
	0x02961C50 MOV X0, X21
	0x02961C54 BL 0x1C16F18
	0x02961C58 MOV X21, X31
	0x02961C5C B 0x2961C64
	0x02961C60 MOV X20, X0
	0x02961C64 LDR W2, [X31 + 0xC]
	0x02961C68 MOV X0, X19
	0x02961C6C MOV W1, W31
	0x02961C70 BL 0x29645AC
	0x02961C74 CBNZ X21, 0x2961C80
	0x02961C78 MOV X0, X20
	0x02961C7C BL 0x1D2C690
	0x02961C80 MOV X0, X21
	0x02961C84 BL 0x1C16F18
	0x02961C88 BL 0x1990590
	0x02961C8C SUB X31, X31, 0x40
	0x02961C90 STP X30, X23, [X31 + 0x10]
	0x02961C94 STP X22, X21, [X31 + 0x20]
	0x02961C98 STP X20, X19, [X31 + 0x30]
	0x02961C9C STR W31, [X31 + 0xC]
	0x02961CA0 LDR X8, [X1 + 0x20]
	0x02961CA4 MOV X20, X1
	0x02961CA8 MOV X19, X0
	0x02961CAC LDR X8, [X8 + 0xC0]
	0x02961CB0 LDR X2, [X8 + 0x158]
	0x02961CB4 ADD X1, X31, 0xC
	0x02961CB8 BL 0x2964398
	0x02961CBC MOV X22, X31
	0x02961CC0 MOV W21, W31
	0x02961CC4 LDR X23, [X19 + 0x10]
	0x02961CC8 BL 0x1C16D44
	0x02961CCC CBZ X23, 0x2961DE4
	0x02961CD0 LDR X8, [X23 + 0x18]
	0x02961CD4 CBZ X8, 0x2961DE8
	0x02961CD8 LDRSW X8, [X8 + 0x18]
	0x02961CDC CMP X22, X8
	0x02961CE0 B.GE 0x2961D24
	0x02961CE4 LDR X23, [X19 + 0x10]
	0x02961CE8 BL 0x1C16D44
	0x02961CEC CBZ X23, 0x2961DF8
	0x02961CF0 LDR X23, [X23 + 0x20]
	0x02961CF4 BL 0x1C16D44
	0x02961CF8 CBZ X23, 0x2961E00
	0x02961CFC LDR W8, [X23 + 0x18]
	0x02961D00 CMP X22, X8
	0x02961D04 B.CS 0x2961DFC
	0x02961D08 ADD X8, X23, X22, 0x2, LSL
	0x02961D0C LDR W8, [X8 + 0x20]
	0x02961D10 ADDS W31, W21, W8
	0x02961D14 B.VS 0x2961DEC
	0x02961D18 ADD W21, W8, W21
	0x02961D1C ADD X22, X22, 0x1
	0x02961D20 B 0x2961CC4
	0x02961D24 LDR X8, [X20 + 0x20]
	0x02961D28 LDR X8, [X8 + 0xC0]
	0x02961D2C CBZ W21, 0x2961D6C
	0x02961D30 LDR X0, [X8 + 0x180]
	0x02961D34 LDRB W8, [X0 + 0x135]
	0x02961D38 TBNZ X8, 0x0, 0x2961D40
	0x02961D3C BL 0x1C5C684
	0x02961D40 MOV W1, W21

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+48], X30
	003 Move [X31+56], X27
	004 Move [X31+64], X26
	005 Move [X31+72], X25
	006 Move [X31+80], X24
	007 Move [X31+88], X23
	008 Move [X31+96], X22
	009 Move [X31+104], X21
	010 Move [X31+112], X20
	011 Move [X31+120], X19
	012 Move X22, 0x1A7A000
	013 Move W8, [X22+3666]
	014 Move X21, X2
	015 Move X20, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0x1793000
	022 Move X0, [X0+3584]
	023 Call 0x1C17CF4
	024 Move X0, 0x1793000
	025 Move X0, [X0+3608]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+3666], W8
	029 Move [X31+40], X31
	030 Compare X20, 0
	031 JumpIfEqual {263}
	032 Move X8, [X21+32]
	033 Move X8, [X8+192]
	034 Move X1, [X8+40]
	035 Move W8, [X1+309]
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {43}
	040 Move X0, X1
	041 Call 0x1C5D684
	042 Move X1, X0
	043 Move X8, [X20]
	044 NotImplemented "Instruction LDRH not yet implemented."
	045 Compare X9, 0
	046 JumpIfEqual {53}
	047 Move X10, [X8+176]
	048 Add X10, X10, 8
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Subtract X9, X9, 1
	052 Add X10, X10, 16
	053 Move X0, X20
	054 Move W2, W31
	055 Call 0x1C5D788
	056 NotImplemented "Instruction LDRSW not yet implemented."
	057 Add X8, X8, X9
	058 Add X0, X8, 312
	059 Move X8, [X0]
	060 Move X1, [X0+8]
	061 Move X26, 0x1793000
	062 Move X26, [X26+3584]
	063 Move X0, X20
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Move X20, X0
	066 Compare X0, 0
	067 JumpIfEqual {264}
	068 Move X27, 0x1793000
	069 Move X27, [X27+3608]
	070 Move X8, [X20]
	071 Move X1, [X27]
	072 NotImplemented "Instruction LDRH not yet implemented."
	073 Compare X9, 0
	074 JumpIfEqual {81}
	075 Move X10, [X8+176]
	076 Add X10, X10, 8
	077 NotImplemented "Instruction LDUR not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Subtract X9, X9, 1
	080 Add X10, X10, 16
	081 Move X0, X20
	082 Move W2, W31
	083 Call 0x1C5D788
	084 NotImplemented "Instruction LDRSW not yet implemented."
	085 Add X8, X8, X9
	086 Add X0, X8, 312
	087 Move X8, [X0]
	088 Move X1, [X0+8]
	089 Move X0, X20
	090 NotImplemented "Instruction BLR not yet implemented."
	091 Move TEMP, X0
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfNotEqual {199}
	095 Move X8, [X21+32]
	096 Move X8, [X8+192]
	097 Move X1, [X8+56]
	098 Move W8, [X1+309]
	099 Move TEMP, X8
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfEqual {106}
	103 Move X0, X1
	104 Call 0x1C5D684
	105 Move X1, X0
	106 Move X8, [X20]
	107 NotImplemented "Instruction LDRH not yet implemented."
	108 Compare X9, 0
	109 JumpIfEqual {116}
	110 Move X10, [X8+176]
	111 Add X10, X10, 8
	112 NotImplemented "Instruction LDUR not yet implemented."
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Subtract X9, X9, 1
	115 Add X10, X10, 16
	116 Move X0, X20
	117 Move W2, W31
	118 Call 0x1C5D788
	119 NotImplemented "Instruction LDRSW not yet implemented."
	120 Add X8, X8, X9
	121 Add X0, X8, 312
	122 Move X9, [X0]
	123 Move X1, [X0+8]
	124 Add X8, X31, 16
	125 Move X0, X20
	126 NotImplemented "Instruction BLR not yet implemented."
	127 Move X25, [X19+24]
	128 Compare X25, 0
	129 JumpIfEqual {262}
	130 Move X8, [X21+32]
	131 Move X23, [X31+16]
	132 Move X22, [X31+24]
	133 Move X24, [X31+32]
	134 Move X8, [X8+192]
	135 Move X1, [X8+32]
	136 Move W8, [X1+309]
	137 Move TEMP, X8
	138 And TEMP, TEMP, 1
	139 Compare TEMP, 1
	140 JumpIfEqual {144}
	141 Move X0, X1
	142 Call 0x1C5D684
	143 Move X1, X0
	144 Move X8, [X25]
	145 NotImplemented "Instruction LDRH not yet implemented."
	146 Compare X9, 0
	147 JumpIfEqual {154}
	148 Move X10, [X8+176]
	149 Add X10, X10, 8
	150 NotImplemented "Instruction LDUR not yet implemented."
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Subtract X9, X9, 1
	153 Add X10, X10, 16
	154 Move W2, 1
	155 Move X0, X25
	156 Call 0x1C5D788
	157 Move W9, [X10]
	158 Add W9, W9, 1
	159 Add X8, X8, W9
	160 Add X0, X8, 312
	161 Move X8, [X0]
	162 Move X3, [X0+8]
	163 Move X0, X25
	164 Move X1, X23
	165 Move X2, X22
	166 NotImplemented "Instruction BLR not yet implemented."
	167 Move X8, [X21+32]
	168 Move W3, W0
	169 Move X8, [X8+192]
	170 Move X8, [X8+144]
	171 Add X7, X31, 40
	172 Move X0, X19
	173 Move X1, X23
	174 Move X2, X22
	175 Move X4, X24
	176 Move W5, W31
	177 Move W6, W31
	178 Move [X31], X8
	179 Call 0x2963214, X0, X1, X2, X3, X4, X5, X6
	180 Move TEMP, X0
	181 And TEMP, TEMP, 1
	182 Compare TEMP, 1
	183 JumpIfEqual {70}
	184 Move X0, 0x179B000
	185 Move X0, [X0+1400]
	186 Call 0x1C17D08
	187 Call 0x1C17F10
	188 Move X22, X0
	189 Move X0, 0x17BE000
	190 Move X0, [X0+584]
	191 Call 0x1C17D08
	192 Move X1, X0
	193 Move X0, X22
	194 Move X2, X31
	195 Call ArgumentException..ctor, X0, X1
	196 Move X0, X22
	197 Move X1, X21
	198 Call 0x1C17DEC
	199 Move X21, X31
	200 Move W22, 7
	201 Compare X20, 0
	202 JumpIfEqual {224}
	203 Move X8, [X20]
	204 Move X1, [X26]
	205 NotImplemented "Instruction LDRH not yet implemented."
	206 Compare X9, 0
	207 JumpIfEqual {214}
	208 Move X10, [X8+176]
	209 Add X10, X10, 8
	210 NotImplemented "Instruction LDUR not yet implemented."
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Subtract X9, X9, 1
	213 Add X10, X10, 16
	214 Move X0, X20
	215 Move W2, W31
	216 Call 0x1C5D788
	217 NotImplemented "Instruction LDRSW not yet implemented."
	218 Add X8, X8, X9
	219 Add X0, X8, 312
	220 Move X8, [X0]
	221 Move X1, [X0+8]
	222 Move X0, X20
	223 NotImplemented "Instruction BLR not yet implemented."
	224 Compare X21, 0
	225 JumpIfNotEqual {265}
	226 NotImplemented "Instruction CMP not yet implemented."
	227 Compare W22, 0
	228 JumpIfNotEqual {250}
	229 Move W8, [X19+36]
	230 Compare W8, 0
	231 JumpIfNotEqual {250}
	232 Move X20, [X19+16]
	233 Call 0x1C17D44
	234 Compare X20, 0
	235 JumpIfEqual {263}
	236 Move X20, [X20+16]
	237 Compare X20, 0
	238 JumpIfEqual {263}
	239 Move X21, [X19+16]
	240 Call 0x1C17D44
	241 Compare X21, 0
	242 JumpIfEqual {263}
	243 Move X8, [X21+24]
	244 Compare X8, 0
	245 JumpIfEqual {263}
	246 Move W9, [X20+24]
	247 Move W8, [X8+24]
	248 NotImplemented "Instruction SDIV not yet implemented."
	249 Move [X19+36], W8
	250 Move X20, [X31+112]
	251 Move X19, [X31+120]
	252 Move X22, [X31+96]
	253 Move X21, [X31+104]
	254 Move X24, [X31+80]
	255 Move X23, [X31+88]
	256 Move X26, [X31+64]
	257 Move X25, [X31+72]
	258 Move X30, [X31+48]
	259 Move X27, [X31+56]
	260 Add X31, X31, 128
	261 Return 
	262 Call 0x1C17F20
	263 Call 0x1C17F20
	264 Call 0x1C17F20
	265 Move X0, X21
	266 Call 0x1C17F18
	267 NotImplemented "Instruction CMP not yet implemented."
	268 Call 0x3EB2AD0
	269 Move X21, [X0]
	270 Call 0x3EB2AE0
	271 Move W22, W31
	272 Compare X20, 0
	273 JumpIfNotEqual {203}
	274 Move X19, X0
	275 Move X21, X31
	276 Move X19, X0
	277 Compare X20, 0
	278 JumpIfEqual {300}
	279 Move X8, [X20]
	280 Move X1, [X26]
	281 NotImplemented "Instruction LDRH not yet implemented."
	282 Compare X9, 0
	283 JumpIfEqual {290}
	284 Move X10, [X8+176]
	285 Add X10, X10, 8
	286 NotImplemented "Instruction LDUR not yet implemented."
	287 NotImplemented "Instruction CMP not yet implemented."
	288 Subtract X9, X9, 1
	289 Add X10, X10, 16
	290 Move X0, X20
	291 Move W2, W31
	292 Call 0x1C5D788
	293 NotImplemented "Instruction LDRSW not yet implemented."
	294 Add X8, X8, X9
	295 Add X0, X8, 312
	296 Move X8, [X0]
	297 Move X1, [X0+8]
	298 Move X0, X20
	299 NotImplemented "Instruction BLR not yet implemented."
	300 Compare X21, 0
	301 JumpIfNotEqual {304}
	302 Move X0, X19
	303 Call 0x1D2D690
	304 Move X0, X21
	305 Call 0x1C17F18
	306 Call 0x1991590

Method: System.Void .ctor(System.Int32 concurrencyLevel, System.Int32 capacity, System.Boolean growLockArray, System.Collections.Generic.IEqualityComparer`1<TKey> comparer)

Disassembly:
	0x02961D44 BL 0x1C16D6C
	0x02961D48 LDR X8, [X20 + 0x20]
	0x02961D4C MOV X21, X0
	0x02961D50 LDR X8, [X8 + 0xC0]
	0x02961D54 LDR X3, [X8 + 0x170]
	0x02961D58 MOV X0, X19
	0x02961D5C MOV X1, X21
	0x02961D60 MOV W2, W31
	0x02961D64 BL 0x2961E9C
	0x02961D68 B 0x2961DBC
	0x02961D6C LDR X20, [X8 + 0x178]
	0x02961D70 LDR X8, [X20 + 0x38]
	0x02961D74 CBNZ X8, 0x2961D84
	0x02961D78 MOV X0, X20
	0x02961D7C BL 0x1C5C6E0
	0x02961D80 LDR X8, [X20 + 0x38]
	0x02961D84 LDR X0, [X8 + 0x10]
	0x02961D88 LDRB W8, [X0 + 0x135]
	0x02961D8C TBNZ X8, 0x0, 0x2961D94
	0x02961D90 BL 0x1C5C684
	0x02961D94 LDR W8, [X0 + 0xE0]
	0x02961D98 CBNZ W8, 0x2961DA0
	0x02961D9C BL 0x1C16DFC
	0x02961DA0 LDR X8, [X20 + 0x38]
	0x02961DA4 LDR X0, [X8 + 0x10]
	0x02961DA8 LDRB W8, [X0 + 0x135]
	0x02961DAC TBNZ X8, 0x0, 0x2961DB4
	0x02961DB0 BL 0x1C5C684
	0x02961DB4 LDR X8, [X0 + 0xB8]
	0x02961DB8 LDR X21, [X8]
	0x02961DBC LDR W2, [X31 + 0xC]
	0x02961DC0 MOV X0, X19
	0x02961DC4 MOV W1, W31
	0x02961DC8 BL 0x29645AC
	0x02961DCC MOV X0, X21
	0x02961DD0 LDP X20, X19, [X31 + 0x30]
	0x02961DD4 LDP X22, X21, [X31 + 0x20]
	0x02961DD8 LDP X30, X23, [X31 + 0x10]
	0x02961DDC ADD X31, X31, 0x40
	0x02961DE0 RET
	0x02961DE4 BL 0x1C16F20
	0x02961DE8 BL 0x1C16F20
	0x02961DEC BL 0x1C16F30
	0x02961DF0 MOV X1, X20
	0x02961DF4 BL 0x1C16DEC
	0x02961DF8 BL 0x1C16F20
	0x02961DFC BL 0x1C16F28
	0x02961E00 BL 0x1C16F20
	0x02961E04 B 0x2961E30
	0x02961E08 B 0x2961E30
	0x02961E0C B 0x2961E30
	0x02961E10 B 0x2961E30
	0x02961E14 B 0x2961E30
	0x02961E18 B 0x2961E30
	0x02961E1C B 0x2961E30
	0x02961E20 B 0x2961E30
	0x02961E24 B 0x2961E30
	0x02961E28 B 0x2961E30
	0x02961E2C B 0x2961E30
	0x02961E30 MOV X20, X0
	0x02961E34 CMP W1, 0x1
	0x02961E38 B.NE 0x2961E68
	0x02961E3C MOV X0, X20
	0x02961E40 BL 0x3EB1AD0
	0x02961E44 LDR X21, [X0]
	0x02961E48 BL 0x3EB1AE0
	0x02961E4C LDR W2, [X31 + 0xC]
	0x02961E50 MOV X0, X19
	0x02961E54 MOV W1, W31
	0x02961E58 BL 0x29645AC
	0x02961E5C CBZ X21, 0x2961DCC
	0x02961E60 MOV X0, X21
	0x02961E64 BL 0x1C16F18
	0x02961E68 MOV X21, X31
	0x02961E6C B 0x2961E74
	0x02961E70 MOV X20, X0
	0x02961E74 LDR W2, [X31 + 0xC]
	0x02961E78 MOV X0, X19
	0x02961E7C MOV W1, W31
	0x02961E80 BL 0x29645AC
	0x02961E84 CBNZ X21, 0x2961E90
	0x02961E88 MOV X0, X20
	0x02961E8C BL 0x1D2C690
	0x02961E90 MOV X0, X21
	0x02961E94 BL 0x1C16F18
	0x02961E98 BL 0x1990590
	0x02961E9C SUB X31, X31, 0x70
	0x02961EA0 STP X30, X25, [X31 + 0x30]
	0x02961EA4 STP X24, X23, [X31 + 0x40]
	0x02961EA8 STP X22, X21, [X31 + 0x50]
	0x02961EAC STP X20, X19, [X31 + 0x60]
	0x02961EB0 LDR X22, [X0 + 0x10]
	0x02961EB4 MOV X19, X3
	0x02961EB8 MOV W20, W2
	0x02961EBC MOV X21, X1
	0x02961EC0 BL 0x1C16D44
	0x02961EC4 CBZ X22, 0x2961F90
	0x02961EC8 LDR X22, [X22 + 0x10]
	0x02961ECC CBZ X22, 0x2961F90
	0x02961ED0 LDR X8, [X22 + 0x18]
	0x02961ED4 CMP W8, 0x1
	0x02961ED8 B.LT 0x2961F78
	0x02961EDC MOV X23, X31
	0x02961EE0 AND X8, X8, 0x0
	0x02961EE4 MOVZ W24, 0x18
	0x02961EE8 CMP X23, W8, UXTW
	0x02961EEC B.CS 0x2961F94
	0x02961EF0 ADD X8, X22, X23, 0x3, LSL
	0x02961EF4 LDR X25, [X8 + 0x20]
	0x02961EF8 CBZ X25, 0x2961F68
	0x02961EFC LDP X1, X2, [X25 + 0x10]
	0x02961F00 LDR X3, [X25 + 0x20]
	0x02961F04 STP X31, X31, [X31 + 0x18]
	0x02961F08 STR X31, [X31 + 0x28]
	0x02961F0C LDR X8, [X19 + 0x20]
	0x02961F10 ADD X0, X31, 0x18
	0x02961F14 LDR X8, [X8 + 0xC0]
	0x02961F18 LDR X4, [X8 + 0x188]
	0x02961F1C BL 0x2EDDE50
	0x02961F20 CBZ X21, 0x2961F90
	0x02961F24 LDUR V0, [X31 + 0x18]
	0x02961F28 LDR X8, [X31 + 0x28]
	0x02961F2C STR V0, [X31]
	0x02961F30 STR X8, [X31 + 0x10]
	0x02961F34 LDR W8, [X21 + 0x18]
	0x02961F38 CMP W20, W8
	0x02961F3C B.CS 0x2961F94
	0x02961F40 LDR X8, [X31 + 0x10]
	0x02961F44 LDR V0, [X31]
	0x02961F48 NOP
	0x02961F4C SMADDL X9, X20, X24, X21
	0x02961F50 ADD W20, W20, 0x1
	0x02961F54 STR X8, [X9 + 0x30]
	0x02961F58 STR V0, [X9 + 0x2]
	0x02961F5C LDR X25, [X25 + 0x28]
	0x02961F60 BL 0x1C16D44
	0x02961F64 CBNZ X25, 0x2961EFC
	0x02961F68 LDR W8, [X22 + 0x18]
	0x02961F6C ADD X23, X23, 0x1
	0x02961F70 CMP X23, W8, SXTW
	0x02961F74 B.LT 0x2961EE8
	0x02961F78 LDP X20, X19, [X31 + 0x60]
	0x02961F7C LDP X22, X21, [X31 + 0x50]
	0x02961F80 LDP X24, X23, [X31 + 0x40]
	0x02961F84 LDP X30, X25, [X31 + 0x30]
	0x02961F88 ADD X31, X31, 0x70
	0x02961F8C RET
	0x02961F90 BL 0x1C16F20
	0x02961F94 BL 0x1C16F28
	0x02961F98 SUB X31, X31, 0x60
	0x02961F9C STR X30, [X31 + 0x20]
	0x02961FA0 STP X24, X23, [X31 + 0x30]
	0x02961FA4 STP X22, X21, [X31 + 0x40]
	0x02961FA8 STP X20, X19, [X31 + 0x50]
	0x02961FAC LDR X22, [X0 + 0x10]
	0x02961FB0 MOV X19, X3
	0x02961FB4 MOV W20, W2
	0x02961FB8 MOV X21, X1
	0x02961FBC BL 0x1C16D44
	0x02961FC0 CBZ X22, 0x296207C
	0x02961FC4 LDR X22, [X22 + 0x10]

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X25, 0x1A7A000
	013 Move W8, [X25+3667]
	014 Move X19, X5
	015 Move X21, X4
	016 Move W23, W3
	017 Move W24, W2
	018 Move W22, W1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {35}
	024 Move X0, 0x1794000
	025 Move X0, [X0+3672]
	026 Call 0x1C17CF4
	027 Move X0, 0x1793000
	028 Move X0, [X0+2512]
	029 Call 0x1C17CF4
	030 Move X0, 0x1799000
	031 Move X0, [X0+3264]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X25+3667], W8
	035 Move X0, X20
	036 Move X1, X31
	037 Call Object..ctor, X0
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move TEMP, X24
	040 And TEMP, TEMP, -2147483648
	041 Compare TEMP, -2147483648
	042 JumpIfEqual {164}
	043 Move X8, 0x1793000
	044 Move X8, [X8+2512]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move W1, W22
	047 NotImplemented "Instruction CSEL not yet implemented."
	048 Move X0, [X8]
	049 Call 0x1C17D6C
	050 Compare X0, 0
	051 JumpIfEqual {152}
	052 Move X1, [X0+24]
	053 Move X22, X0
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X27, 0x1799000
	056 Move X27, [X27+3264]
	057 Move X26, X31
	058 Add X28, X22, 32
	059 Move X0, [X27]
	060 Call 0x1C17F10
	061 Move X1, X31
	062 Move X25, X0
	063 Call Object..ctor, X0
	064 Compare X25, 0
	065 JumpIfEqual {72}
	066 Move X8, [X22]
	067 Move X0, X25
	068 Move X1, [X8+64]
	069 Call 0x1C17E00
	070 Compare X0, 0
	071 JumpIfEqual {149}
	072 Move W1, [X22+24]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move [X28], X25
	075 Add X26, X26, 1
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X8, 0x1794000
	078 Move X8, [X8+3672]
	079 Move X0, [X8]
	080 Call 0x1C17D6C
	081 Move X8, [X19+32]
	082 Move X25, X0
	083 Move X8, [X8+192]
	084 Move X8, [X8+184]
	085 Move W9, [X8+309]
	086 Move TEMP, X9
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfEqual {93}
	090 Move X0, X8
	091 Call 0x1C5D684
	092 Move X8, X0
	093 Move X0, X8
	094 Move W1, W24
	095 And W26, W23, 1
	096 Call 0x1C17D6C
	097 Move X8, [X19+32]
	098 Move X23, X0
	099 Move X8, [X8+192]
	100 Move X8, [X8+168]
	101 Move W9, [X8+309]
	102 Move TEMP, X9
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfEqual {109}
	106 Move X0, X8
	107 Call 0x1C5D684
	108 Move X8, X0
	109 Move X0, X8
	110 Call 0x1C17F10
	111 Move X8, [X19+32]
	112 Move X1, X23
	113 Move X2, X22
	114 Move X3, X25
	115 Move X8, [X8+192]
	116 Move X24, X0
	117 Move X4, [X8+192]
	118 Call 0x2677894, X0, X1, X2, X3
	119 Call 0x1C17D44
	120 Move [X20+16], X24
	121 Compare X21, 0
	122 JumpIfNotEqual {128}
	123 Move X8, [X19+32]
	124 Move X8, [X8+192]
	125 Move X0, [X8+200]
	126 Call 0x211AAB4
	127 Move X21, X0
	128 Move [X20+24], X21
	129 Move [X20+32], W26
	130 Compare X23, 0
	131 JumpIfEqual {152}
	132 Move W8, [X23+24]
	133 Move W9, [X22+24]
	134 Move X22, [X31+64]
	135 Move X21, [X31+72]
	136 Move X24, [X31+48]
	137 Move X23, [X31+56]
	138 Move X26, [X31+32]
	139 Move X25, [X31+40]
	140 NotImplemented "Instruction SDIV not yet implemented."
	141 Move [X20+36], W8
	142 Move X20, [X31+80]
	143 Move X19, [X31+88]
	144 Move X28, [X31+16]
	145 Move X27, [X31+24]
	146 Move X30, [X31+96]
	147 Return 
	148 Call 0x1C17F28
	149 Call 0x1C17F44
	150 Move X1, X31
	151 Call 0x1C17DEC
	152 Call 0x1C17F20
	153 Move X0, 0x179B000
	154 Move X0, [X0+1888]
	155 Call 0x1C17D08
	156 Call 0x1C17F10
	157 Move X20, X0
	158 Move X0, 0x17BE000
	159 Move X0, [X0+592]
	160 Call 0x1C17D08
	161 Move X21, X0
	162 Move X0, 0x17BE000
	163 Move X0, [X0+600]
	164 Move X0, 0x179B000
	165 Move X0, [X0+1888]
	166 Call 0x1C17D08
	167 Call 0x1C17F10
	168 Move X20, X0
	169 Move X0, 0x17BD000
	170 Move X0, [X0+88]
	171 Call 0x1C17D08
	172 Move X21, X0
	173 Move X0, 0x17BE000
	174 Move X0, [X0+608]
	175 Call 0x1C17D08
	176 Move X2, X0
	177 Move X0, X20
	178 Move X1, X21
	179 Move X3, X31
	180 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	181 Move X0, X20
	182 Move X1, X19
	183 Call 0x1C17DEC

Method: System.Boolean TryAdd(TKey key, TValue value)

Disassembly:
	0x02961FC8 CBZ X22, 0x296207C
	0x02961FCC LDR X8, [X22 + 0x18]
	0x02961FD0 CMP W8, 0x1
	0x02961FD4 B.LT 0x2962064
	0x02961FD8 MOV X23, X31
	0x02961FDC AND X8, X8, 0x0
	0x02961FE0 CMP X23, W8, UXTW
	0x02961FE4 B.CS 0x2962080
	0x02961FE8 ADD X8, X22, X23, 0x3, LSL
	0x02961FEC LDR X24, [X8 + 0x20]
	0x02961FF0 CBZ X24, 0x2962054
	0x02961FF4 LDR V0, [X24 + 0x1]
	0x02961FF8 ADD X1, X31, 0x10
	0x02961FFC STR V0, [X31 + 0x1]
	0x02962000 LDR X8, [X19 + 0x20]
	0x02962004 LDR X8, [X8 + 0xC0]
	0x02962008 LDR X0, [X8 + 0x60]
	0x0296200C BL 0x1C16E04
	0x02962010 LDR X2, [X24 + 0x20]
	0x02962014 MOV X1, X0
	0x02962018 ADD X0, X31, 0x0
	0x0296201C MOV X3, X31
	0x02962020 STP X31, X31, [X31]
	0x02962024 BL 0x335035C
	0x02962028 CBZ X21, 0x296207C
	0x0296202C LDR W8, [X21 + 0x18]
	0x02962030 CMP W20, W8
	0x02962034 B.CS 0x2962080
	0x02962038 LDR V0, [X31]
	0x0296203C ADD X8, X21, W20, 0x4, SXTW
	0x02962040 ADD W20, W20, 0x1
	0x02962044 STR V0, [X8 + 0x2]
	0x02962048 LDR X24, [X24 + 0x28]
	0x0296204C BL 0x1C16D44
	0x02962050 CBNZ X24, 0x2961FF4
	0x02962054 LDR W8, [X22 + 0x18]
	0x02962058 ADD X23, X23, 0x1
	0x0296205C CMP X23, W8, SXTW
	0x02962060 B.LT 0x2961FE0
	0x02962064 LDP X20, X19, [X31 + 0x50]
	0x02962068 LDP X22, X21, [X31 + 0x40]
	0x0296206C LDP X24, X23, [X31 + 0x30]
	0x02962070 LDR X30, [X31 + 0x20]
	0x02962074 ADD X31, X31, 0x60
	0x02962078 RET
	0x0296207C BL 0x1C16F20
	0x02962080 BL 0x1C16F28
	0x02962084 SUB X31, X31, 0x70
	0x02962088 STP X30, X25, [X31 + 0x30]
	0x0296208C STP X24, X23, [X31 + 0x40]
	0x02962090 STP X22, X21, [X31 + 0x50]
	0x02962094 STP X20, X19, [X31 + 0x60]
	0x02962098 LDR X22, [X0 + 0x10]
	0x0296209C MOV X19, X3
	0x029620A0 MOV W20, W2
	0x029620A4 MOV X21, X1
	0x029620A8 BL 0x1C16D44
	0x029620AC CBZ X22, 0x2962198
	0x029620B0 LDR X23, [X22 + 0x10]
	0x029620B4 CBZ X23, 0x2962198
	0x029620B8 LDR X8, [X23 + 0x18]
	0x029620BC CMP W8, 0x1
	0x029620C0 B.LT 0x296217C
	0x029620C4 MOV X24, X31
	0x029620C8 AND X8, X8, 0x0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X31
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X24, [X0+24]
	011 Compare X24, 0
	012 JumpIfEqual {75}
	013 Move X8, [X4+32]
	014 Move X22, X1
	015 Move X23, X4
	016 Move X19, X3
	017 Move X8, [X8+192]
	018 Move X20, X2
	019 Move X21, X0
	020 Move X1, [X8+32]
	021 Move W8, [X1+309]
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {29}
	026 Move X0, X1
	027 Call 0x1C5D684
	028 Move X1, X0
	029 Move X8, [X24]
	030 NotImplemented "Instruction LDRH not yet implemented."
	031 Compare X9, 0
	032 JumpIfEqual {39}
	033 Move X10, [X8+176]
	034 Add X10, X10, 8
	035 NotImplemented "Instruction LDUR not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Subtract X9, X9, 1
	038 Add X10, X10, 16
	039 Move W2, 1
	040 Move X0, X24
	041 Call 0x1C5D788
	042 Move W9, [X10]
	043 Add W9, W9, 1
	044 Add X8, X8, W9
	045 Add X0, X8, 312
	046 Move X8, [X0]
	047 Move X3, [X0+8]
	048 Move X0, X24
	049 Move X1, X22
	050 Move X2, X20
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move X8, [X23+32]
	053 Move W3, W0
	054 Add X7, X31, 24
	055 Move W6, 1
	056 Move X8, [X8+192]
	057 Move X0, X21
	058 Move X1, X22
	059 Move X2, X20
	060 Move X8, [X8+144]
	061 Move X4, X19
	062 Move W5, W31
	063 Move [X31], X8
	064 Call 0x2963214, X0, X1, X2, X3, X4, X5, X6
	065 Move X20, [X31+64]
	066 Move X19, [X31+72]
	067 Move X22, [X31+48]
	068 Move X21, [X31+56]
	069 Move X24, [X31+32]
	070 Move X23, [X31+40]
	071 Move X30, [X31+16]
	072 And W0, W0, 1
	073 Add X31, X31, 80
	074 Return X0
	075 Call 0x1C17F20

Method: System.Boolean ContainsKey(TKey key)

Disassembly:
	0x029620CC CMP X24, W8, UXTW
	0x029620D0 B.CS 0x2962194
	0x029620D4 ADD X8, X23, X24, 0x3, LSL
	0x029620D8 LDR X25, [X8 + 0x20]
	0x029620DC CBZ X25, 0x296216C
	0x029620E0 LDP X1, X2, [X25 + 0x10]
	0x029620E4 LDR X3, [X25 + 0x20]
	0x029620E8 STP X31, X31, [X31 + 0x18]
	0x029620EC STR X31, [X31 + 0x28]
	0x029620F0 LDR X8, [X19 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31+8], X31
	003 Move X8, [X3+32]
	004 Add X3, X31, 8
	005 Move X8, [X8+192]
	006 Move X4, [X8+224]
	007 Call 0x296259C, X0, X1, X2
	008 And W0, W0, 1
	009 Move X30, [X31+16]
	010 Return X0

Method: System.Boolean TryRemove(TKey key, out TValue value)

Disassembly:
	0x029620F4 ADD X0, X31, 0x18
	0x029620F8 LDR X8, [X8 + 0xC0]
	0x029620FC LDR X4, [X8 + 0x188]
	0x02962100 BL 0x2EDDE50
	0x02962104 LDUR V0, [X31 + 0x18]
	0x02962108 LDR X8, [X31 + 0x28]

ISIL:
	001 Move X8, [X4+32]
	002 Move W4, W31
	003 Move X5, X31
	004 Move X8, [X8+192]
	005 Move X6, [X8+232]

Method: System.Boolean TryRemoveInternal(TKey key, out TValue value, System.Boolean matchValue, TValue oldValue)

Disassembly:
	0x0296210C ADD X1, X31, 0x0
	0x02962110 STR V0, [X31]
	0x02962114 STR X8, [X31 + 0x10]
	0x02962118 LDR X8, [X19 + 0x20]
	0x0296211C LDR X8, [X8 + 0xC0]
	0x02962120 LDR X0, [X8 + 0x48]
	0x02962124 BL 0x1C16E04
	0x02962128 CBZ X21, 0x2962198
	0x0296212C MOV X22, X0
	0x02962130 CBZ X0, 0x2962148
	0x02962134 LDR X8, [X21]
	0x02962138 MOV X0, X22
	0x0296213C LDR X1, [X8 + 0x40]
	0x02962140 BL 0x1C16E00
	0x02962144 CBZ X0, 0x296219C
	0x02962148 LDR W8, [X21 + 0x18]
	0x0296214C CMP W20, W8
	0x02962150 B.CS 0x2962194
	0x02962154 ADD X8, X21, W20, 0x3, SXTW
	0x02962158 STR X22, [X8 + 0x20]
	0x0296215C LDR X25, [X25 + 0x28]
	0x02962160 ADD W20, W20, 0x1
	0x02962164 BL 0x1C16D44
	0x02962168 CBNZ X25, 0x29620E0
	0x0296216C LDR W8, [X23 + 0x18]
	0x02962170 ADD X24, X24, 0x1
	0x02962174 CMP X24, W8, SXTW
	0x02962178 B.LT 0x29620CC
	0x0296217C LDP X20, X19, [X31 + 0x60]
	0x02962180 LDP X22, X21, [X31 + 0x50]
	0x02962184 LDP X24, X23, [X31 + 0x40]
	0x02962188 LDP X30, X25, [X31 + 0x30]
	0x0296218C ADD X31, X31, 0x70
	0x02962190 RET
	0x02962194 BL 0x1C16F28
	0x02962198 BL 0x1C16F20
	0x0296219C BL 0x1C16F44
	0x029621A0 MOV X1, X31
	0x029621A4 BL 0x1C16DEC
	0x029621A8 STR X30, [X31 - 0x20]!
	0x029621AC STP X20, X19, [X31 + 0x10]
	0x029621B0 LDR X8, [X1 + 0x20]
	0x029621B4 MOV X20, X1
	0x029621B8 MOV X19, X0
	0x029621BC LDR X8, [X8 + 0xC0]
	0x029621C0 LDR X8, [X8 + 0x190]
	0x029621C4 LDRB W9, [X8 + 0x135]
	0x029621C8 TBNZ X9, 0x0, 0x29621D8
	0x029621CC MOV X0, X8
	0x029621D0 BL 0x1C5C684
	0x029621D4 MOV X8, X0
	0x029621D8 MOV X0, X8
	0x029621DC BL 0x1C16F10
	0x029621E0 LDR X8, [X20 + 0x20]
	0x029621E4 MOV W1, W31
	0x029621E8 MOV X20, X0
	0x029621EC LDR X8, [X8 + 0xC0]
	0x029621F0 LDR X2, [X8 + 0x198]
	0x029621F4 BL 0x239B090
	0x029621F8 CBZ X20, 0x2962210
	0x029621FC STR X19, [X20 + 0x30]
	0x02962200 MOV X0, X20
	0x02962204 LDP X20, X19, [X31 + 0x10]
	0x02962208 LDR X30, [X31], #0x20
	0x0296220C RET
	0x02962210 BL 0x1C16F20
	0x02962214 SUB X31, X31, 0xB0
	0x02962218 STP X29, X30, [X31 + 0x50]
	0x0296221C STP X28, X27, [X31 + 0x60]
	0x02962220 STP X26, X25, [X31 + 0x70]
	0x02962224 STP X24, X23, [X31 + 0x80]
	0x02962228 STP X22, X21, [X31 + 0x90]
	0x0296222C STP X20, X19, [X31 + 0xA0]
	0x02962230 LDR X23, [X31 + 0xB0]
	0x02962234 MOV W26, W3
	0x02962238 MOV X28, X1
	0x0296223C MOV X22, X0
	0x02962240 AND W8, W3, 0x7FFFFFFF
	0x02962244 STP X7, X4, [X31 + 0x18]
	0x02962248 STR W5, [X31 + 0x14]
	0x0296224C STR X2, [X31 + 0x40]
	0x02962250 STRB W31, [X31 + 0x4C]
	0x02962254 STP W8, W6, [X31 + 0x34]
	0x02962258 LDR X21, [X22 + 0x10]
	0x0296225C BL 0x1C16D44
	0x02962260 CBZ X21, 0x2962798
	0x02962264 LDR X19, [X21 + 0x10]
	0x02962268 CBZ X19, 0x2962798
	0x0296226C LDR X20, [X21 + 0x18]
	0x02962270 CBZ X20, 0x2962798
	0x02962274 LDR X8, [X23 + 0x20]
	0x02962278 LDR X8, [X8 + 0xC0]
	0x0296227C LDR X0, [X8 + 0x10]
	0x02962280 LDRB W8, [X0 + 0x135]
	0x02962284 TBNZ X8, 0x0, 0x296228C
	0x02962288 BL 0x1C5C684
	0x0296228C LDR W8, [X0 + 0xE0]
	0x02962290 CBNZ W8, 0x2962298
	0x02962294 BL 0x1C16DFC
	0x02962298 LDR W8, [X19 + 0x18]
	0x0296229C LDR W11, [X31 + 0x34]
	0x029622A0 LDR W9, [X20 + 0x18]
	0x029622A4 STRB W31, [X31 + 0x4C]
	0x029622A8 SDIV W10, W11, W8
	0x029622AC MSUB W24, W10, W8, W11
	0x029622B0 SDIV W8, W24, W9
	0x029622B4 MSUB W10, W8, W9, W24
	0x029622B8 LDR W8, [X31 + 0x38]
	0x029622BC STR W10, [X31 + 0x3C]
	0x029622C0 TBZ X8, 0x0, 0x29622EC
	0x029622C4 LDR X8, [X21 + 0x18]
	0x029622C8 CBZ X8, 0x2962644
	0x029622CC LDR W9, [X8 + 0x18]
	0x029622D0 CMP W10, W9
	0x029622D4 B.CS 0x296264C
	0x029622D8 ADD X8, X8, W10, 0x3, UXTW
	0x029622DC LDR X0, [X8 + 0x20]
	0x029622E0 ADD X1, X31, 0x4C
	0x029622E4 MOV X2, X31
	0x029622E8 BL 0x33DE64C
	0x029622EC LDR X19, [X22 + 0x10]
	0x029622F0 BL 0x1C16D44
	0x029622F4 CMP X21, X19
	0x029622F8 B.EQ 0x296230C
	0x029622FC MOV X29, X31
	0x02962300 MOV W19, W31
	0x02962304 MOVZ W20, 0x2
	0x02962308 B 0x29624D8
	0x0296230C LDR X8, [X21 + 0x10]
	0x02962310 CBZ X8, 0x2962654
	0x02962314 LDR W9, [X8 + 0x18]
	0x02962318 CMP W24, W9
	0x0296231C B.CS 0x296265C
	0x02962320 MOV W9, W24
	0x02962324 ADD X8, X8, X9, 0x3, LSL
	0x02962328 LDR X19, [X8 + 0x20]
	0x0296232C STR X9, [X31 + 0x28]
	0x02962330 MOV X20, X31
	0x02962334 CBZ X19, 0x29623EC
	0x02962338 LDR W8, [X19 + 0x30]
	0x0296233C MOV X27, X20
	0x02962340 MOV X20, X19
	0x02962344 CMP W8, W26
	0x02962348 B.NE 0x29623E0
	0x0296234C LDR X29, [X22 + 0x18]
	0x02962350 CBZ X29, 0x296263C
	0x02962354 LDR X8, [X23 + 0x20]
	0x02962358 LDP X19, X25, [X20 + 0x10]
	0x0296235C LDR X8, [X8 + 0xC0]
	0x02962360 LDR X1, [X8 + 0x20]
	0x02962364 LDRB W8, [X1 + 0x135]
	0x02962368 TBNZ X8, 0x0, 0x2962378
	0x0296236C MOV X0, X1
	0x02962370 BL 0x1C5C684
	0x02962374 MOV X1, X0
	0x02962378 LDR X8, [X29]
	0x0296237C LDRH W9, [X8 + 0x12E]
	0x02962380 CBZ X9, 0x29623A4
	0x02962384 LDR X10, [X8 + 0xB0]
	0x02962388 ADD X10, X10, 0x8
	0x0296238C LDUR X11, [X10 - 0x8]
	0x02962390 CMP X11, X1
	0x02962394 B.EQ 0x29623B4
	0x02962398 SUBS X9, X9, 0x1
	0x0296239C ADD X10, X10, 0x10
	0x029623A0 B.NE 0x296238C
	0x029623A4 MOV X0, X29
	0x029623A8 MOV W2, W31
	0x029623AC BL 0x1C5C788
	0x029623B0 B 0x29623C0
	0x029623B4 LDRSW X9, [X10]
	0x029623B8 ADD X8, X8, X9, 0x4, LSL
	0x029623BC ADD X0, X8, 0x138
	0x029623C0 LDP X8, X5, [X0]
	0x029623C4 LDR X4, [X31 + 0x40]
	0x029623C8 MOV X0, X29
	0x029623CC MOV X1, X19
	0x029623D0 MOV X2, X25
	0x029623D4 MOV X3, X28
	0x029623D8 BLR X8
	0x029623DC TBNZ X0, 0x0, 0x2962518
	0x029623E0 LDR X19, [X20 + 0x28]
	0x029623E4 BL 0x1C16D44
	0x029623E8 B 0x2962334
	0x029623EC LDR X27, [X21 + 0x10]
	0x029623F0 CBZ X27, 0x2962664
	0x029623F4 LDR W8, [X27 + 0x18]
	0x029623F8 CMP W24, W8
	0x029623FC B.CS 0x296266C
	0x02962400 LDR X8, [X31 + 0x28]
	0x02962404 ADD X25, X27, X8, 0x3, LSL
	0x02962408 LDR X19, [X25 + 0x20]!
	0x0296240C LDR X8, [X23 + 0x20]
	0x02962410 LDR X8, [X8 + 0xC0]
	0x02962414 LDR X0, [X8 + 0xF8]
	0x02962418 LDRB W8, [X0 + 0x135]
	0x0296241C TBNZ X8, 0x0, 0x2962424
	0x02962420 BL 0x1C5C684
	0x02962424 BL 0x1C16F10
	0x02962428 LDR X8, [X23 + 0x20]
	0x0296242C MOV X20, X0
	0x02962430 LDR X8, [X8 + 0xC0]
	0x02962434 LDR X6, [X8 + 0x1A0]
	0x02962438 LDR X2, [X31 + 0x40]
	0x0296243C LDR X3, [X31 + 0x20]
	0x02962440 MOV X1, X28
	0x02962444 MOV W4, W26
	0x02962448 MOV X5, X19
	0x0296244C BL 0x2425134
	0x02962450 LDR W8, [X27 + 0x18]
	0x02962454 CMP W24, W8
	0x02962458 B.CS 0x2962674
	0x0296245C BL 0x1C16D44
	0x02962460 STR X20, [X25]
	0x02962464 LDR X20, [X21 + 0x20]
	0x02962468 BL 0x1C16D44
	0x0296246C CBZ X20, 0x296267C
	0x02962470 LDR W8, [X20 + 0x18]
	0x02962474 LDR W9, [X31 + 0x3C]
	0x02962478 CMP W9, W8
	0x0296247C B.CS 0x2962684
	0x02962480 MOV W19, W9
	0x02962484 ADD X8, X20, X19, 0x2, LSL
	0x02962488 LDR W9, [X8 + 0x20]!
	0x0296248C MOVN W10, 0x80000000
	0x02962490 CMP W9, W10
	0x02962494 B.EQ 0x296268C
	0x02962498 ADD W9, W9, 0x1
	0x0296249C STR W9, [X8]
	0x029624A0 LDR X20, [X21 + 0x20]
	0x029624A4 BL 0x1C16D44
	0x029624A8 CBZ X20, 0x296269C
	0x029624AC LDR W8, [X20 + 0x18]
	0x029624B0 LDR W9, [X31 + 0x3C]
	0x029624B4 CMP W9, W8
	0x029624B8 B.CS 0x29626A4
	0x029624BC ADD X8, X20, X19, 0x2, LSL
	0x029624C0 LDR W9, [X22 + 0x24]
	0x029624C4 LDR W8, [X8 + 0x20]
	0x029624C8 MOV X29, X31
	0x029624CC MOVZ W20, 0x11
	0x029624D0 CMP W8, W9
	0x029624D4 CSET W19, GT
	0x029624D8 LDRB W8, [X31 + 0x4C]
	0x029624DC CBZ W8, 0x2962508
	0x029624E0 LDR X8, [X21 + 0x18]
	0x029624E4 CBZ X8, 0x2962798
	0x029624E8 LDR W9, [X8 + 0x18]
	0x029624EC LDR W10, [X31 + 0x3C]
	0x029624F0 CMP W10, W9
	0x029624F4 B.CS 0x29627A4
	0x029624F8 ADD X8, X8, W10, 0x3, UXTW
	0x029624FC LDR X0, [X8 + 0x20]
	0x02962500 MOV X1, X31
	0x02962504 BL 0x33E14E4
	0x02962508 CBNZ X29, 0x296279C
	0x0296250C CMP W20, 0x2
	0x02962510 B.EQ 0x2962258
	0x02962514 B 0x296273C
	0x02962518 LDR W8, [X31 + 0x14]
	0x0296251C TBZ X8, 0x0, 0x2962578
	0x02962520 LDR X8, [X23 + 0x20]
	0x02962524 LDR X8, [X8 + 0xC0]
	0x02962528 LDR X0, [X8 + 0x10]
	0x0296252C LDRB W8, [X0 + 0x135]
	0x02962530 TBNZ X8, 0x0, 0x2962538
	0x02962534 BL 0x1C5C684
	0x02962538 LDR W8, [X0 + 0xE0]
	0x0296253C CBNZ W8, 0x2962544
	0x02962540 BL 0x1C16DFC
	0x02962544 LDR X8, [X23 + 0x20]
	0x02962548 LDR X8, [X8 + 0xC0]
	0x0296254C LDR X0, [X8 + 0x10]
	0x02962550 LDRB W8, [X0 + 0x135]
	0x02962554 TBNZ X8, 0x0, 0x296255C
	0x02962558 BL 0x1C5C684
	0x0296255C LDR X8, [X0 + 0xB8]
	0x02962560 LDRB W8, [X8]
	0x02962564 CBZ W8, 0x2962594
	0x02962568 LDR X8, [X31 + 0x20]
	0x0296256C STR X8, [X20 + 0x20]
	0x02962570 MOV X20, X8
	0x02962574 B 0x2962624
	0x02962578 LDR X8, [X20 + 0x20]
	0x0296257C LDR X9, [X31 + 0x18]
	0x02962580 MOV X29, X31
	0x02962584 MOV W19, W31
	0x02962588 MOVZ W20, 0xD
	0x0296258C STR X8, [X9]
	0x02962590 B 0x29624D8
	0x02962594 LDP X29, X25, [X20 + 0x10]
	0x02962598 LDR X8, [X20 + 0x28]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+80], X29
	003 Move [X31+88], X30
	004 Move [X31+96], X28
	005 Move [X31+104], X27
	006 Move [X31+112], X26
	007 Move [X31+120], X25
	008 Move [X31+128], X24
	009 Move [X31+136], X23
	010 Move [X31+144], X22
	011 Move [X31+152], X21
	012 Move [X31+160], X20
	013 Move [X31+168], X19
	014 Move [X31+76], W31
	015 Move X26, [X0+24]
	016 Move [X31], X5
	017 Move [X31+8], W4
	018 Move [X31+16], X3
	019 Move [X31+56], X1
	020 Move [X31+64], X2
	021 Compare X26, 0
	022 JumpIfEqual {283}
	023 Move X8, [X6+32]
	024 Move X20, X6
	025 Move X24, X0
	026 Move X8, [X8+192]
	027 Move X1, [X8+32]
	028 Move W8, [X1+309]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {36}
	033 Move X0, X1
	034 Call 0x1C5D684
	035 Move X1, X0
	036 Move X8, [X26]
	037 NotImplemented "Instruction LDRH not yet implemented."
	038 Compare X9, 0
	039 JumpIfEqual {46}
	040 Move X10, [X8+176]
	041 Add X10, X10, 8
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Subtract X9, X9, 1
	045 Add X10, X10, 16
	046 Move W2, 1
	047 Move X0, X26
	048 Call 0x1C5D788
	049 Move W9, [X10]
	050 Add W9, W9, 1
	051 Add X8, X8, W9
	052 Add X0, X8, 312
	053 Move X8, [X0]
	054 Move X3, [X0+8]
	055 Move X1, [X31+56]
	056 Move X2, [X31+64]
	057 Move X0, X26
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move W26, W0
	060 And W25, W0, 0x7FFFFFFF
	061 Move [X31+12], W31
	062 Move [X31+36], W25
	063 Move X22, [X24+16]
	064 Call 0x1C17D44
	065 Compare X22, 0
	066 JumpIfEqual {283}
	067 Move X19, [X22+16]
	068 Compare X19, 0
	069 JumpIfEqual {283}
	070 Move X21, [X22+24]
	071 Compare X21, 0
	072 JumpIfEqual {283}
	073 Move X8, [X20+32]
	074 Move X8, [X8+192]
	075 Move X0, [X8+16]
	076 Move W8, [X0+309]
	077 Move TEMP, X8
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfEqual {82}
	081 Call 0x1C5D684
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {86}
	085 Call 0x1C17DFC
	086 Move X8, [X22+24]
	087 Compare X8, 0
	088 JumpIfEqual {283}
	089 Move W9, [X19+24]
	090 Move W10, [X21+24]
	091 Move W12, [X8+24]
	092 NotImplemented "Instruction SDIV not yet implemented."
	093 NotImplemented "Instruction MSUB not yet implemented."
	094 NotImplemented "Instruction SDIV not yet implemented."
	095 NotImplemented "Instruction MSUB not yet implemented."
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move W21, W27
	098 Add X8, X8, X21
	099 Move X0, [X8+32]
	100 Move [X31+76], W31
	101 Add X1, X31, 76
	102 Move X2, X31
	103 Move [X31+48], X0
	104 Call Monitor.Enter, X0, X1
	105 Move X19, [X24+16]
	106 Call 0x1C17D44
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move X28, X31
	109 Move W19, 2
	110 Move X8, [X22+16]
	111 Compare X8, 0
	112 JumpIfEqual {248}
	113 Move W9, [X8+24]
	114 Move [X31+40], X21
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move W9, W23
	117 Add X8, X8, X9
	118 Move X21, [X8+32]
	119 Move [X31+24], X9
	120 Move X25, X31
	121 Compare X21, 0
	122 JumpIfEqual {173}
	123 Move W8, [X21+48]
	124 Move X19, X25
	125 Move X25, X21
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move X28, [X24+24]
	128 Compare X28, 0
	129 JumpIfEqual {247}
	130 Move X8, [X20+32]
	131 Move X21, [X25+16]
	132 Move X29, [X25+24]
	133 Move X8, [X8+192]
	134 Move X1, [X8+32]
	135 Move W8, [X1+309]
	136 Move TEMP, X8
	137 And TEMP, TEMP, 1
	138 Compare TEMP, 1
	139 JumpIfEqual {143}
	140 Move X0, X1
	141 Call 0x1C5D684
	142 Move X1, X0
	143 Move X8, [X28]
	144 NotImplemented "Instruction LDRH not yet implemented."
	145 Compare X9, 0
	146 JumpIfEqual {153}
	147 Move X10, [X8+176]
	148 Add X10, X10, 8
	149 NotImplemented "Instruction LDUR not yet implemented."
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Subtract X9, X9, 1
	152 Add X10, X10, 16
	153 Move X0, X28
	154 Move W2, W31
	155 Call 0x1C5D788
	156 NotImplemented "Instruction LDRSW not yet implemented."
	157 Add X8, X8, X9
	158 Add X0, X8, 312
	159 Move X8, [X0]
	160 Move X5, [X0+8]
	161 Move X3, [X31+56]
	162 Move X4, [X31+64]
	163 Move X0, X28
	164 Move X1, X21
	165 Move X2, X29
	166 NotImplemented "Instruction BLR not yet implemented."
	167 Move TEMP, X0
	168 And TEMP, TEMP, 1
	169 Compare TEMP, 1
	170 JumpIfEqual {176}
	171 Move X21, [X25+40]
	172 Call 0x1C17D44
	173 Move W25, [X31+36]
	174 Move X28, X31
	175 Move W19, 11
	176 Move W8, [X31+8]
	177 Move TEMP, X8
	178 And TEMP, TEMP, 1
	179 Compare TEMP, 1
	180 JumpIfNotEqual {197}
	181 Move X8, [X20+32]
	182 Move X8, [X8+192]
	183 Move X0, [X8+264]
	184 Call 0x211C0E8
	185 Compare X0, 0
	186 JumpIfEqual {252}
	187 Move X8, [X0]
	188 Move X2, [X25+32]
	189 Move X9, [X8+440]
	190 Move X3, [X8+448]
	191 Move X1, [X31]
	192 NotImplemented "Instruction BLR not yet implemented."
	193 Move TEMP, X0
	194 And TEMP, TEMP, 1
	195 Compare TEMP, 1
	196 JumpIfNotEqual {232}
	197 Compare X19, 0
	198 JumpIfEqual {203}
	199 Move X21, [X25+40]
	200 Call 0x1C17D44
	201 Call 0x1C17D44
	202 Move [X19+40], X21
	203 Move X19, [X22+16]
	204 Compare X19, 0
	205 JumpIfEqual {253}
	206 Move X21, [X25+40]
	207 Call 0x1C17D44
	208 Move W8, [X19+24]
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Call 0x1C17D44
	211 Move X8, [X31+24]
	212 Add X8, X19, X8
	213 Move [X8+32], X21
	214 Move X8, [X25+32]
	215 Move X9, [X31+16]
	216 Move [X9], X8
	217 Move X19, [X22+32]
	218 Call 0x1C17D44
	219 Move X9, [X31+40]
	220 Move W25, [X31+36]
	221 Compare X19, 0
	222 JumpIfEqual {250}
	223 Move W8, [X19+24]
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Add X8, X19, X9
	226 Move W9, [X8+32]
	227 Move W10, 1
	228 Move X28, X31
	229 Move [X31+12], W10
	230 Subtract W9, W9, 1
	231 Move [X8+32], W9
	232 Move X8, [X31+16]
	233 Move W25, [X31+36]
	234 Move X28, X31
	235 Move [X31+12], W31
	236 Move [X8], X31
	237 Move W19, 8
	238 Move W8, [X31+76]
	239 Compare W8, 0
	240 JumpIfEqual {244}
	241 Move X0, [X31+48]
	242 Move X1, X31
	243 Call Monitor.Exit, X0
	244 Compare X28, 0
	245 JumpIfNotEqual {284}
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Call 0x1C17F20
	248 Call 0x1C17F20
	249 Call 0x1C17F28
	250 Call 0x1C17F20
	251 Call 0x1C17F28
	252 Call 0x1C17F20
	253 Call 0x1C17F20
	254 Call 0x1C17F28
	255 Move W25, [X31+36]
	256 NotImplemented "Instruction CMP not yet implemented."
	257 Call 0x3EB2AD0
	258 Move X28, [X0]
	259 Call 0x3EB2AE0
	260 Move W19, W31
	261 NotImplemented "Instruction CMP not yet implemented."
	262 Compare W19, 0
	263 JumpIfNotEqual {267}
	264 Move X8, [X31+16]
	265 Move W9, W31
	266 Move [X8], X31
	267 Move W9, [X31+12]
	268 Move X20, [X31+160]
	269 Move X19, [X31+168]
	270 Move X22, [X31+144]
	271 Move X21, [X31+152]
	272 Move X24, [X31+128]
	273 Move X23, [X31+136]
	274 Move X26, [X31+112]
	275 Move X25, [X31+120]
	276 Move X28, [X31+96]
	277 Move X27, [X31+104]
	278 Move X29, [X31+80]
	279 Move X30, [X31+88]
	280 And W0, W9, 1
	281 Add X31, X31, 176
	282 Return X0
	283 Call 0x1C17F20
	284 Move X0, X28
	285 Call 0x1C17F18
	286 Call 0x1C17F28
	287 Move X19, X0
	288 Move X28, X31
	289 Move X19, X0
	290 Move W8, [X31+76]
	291 Compare W8, 0
	292 JumpIfEqual {296}
	293 Move X0, [X31+48]
	294 Move X1, X31
	295 Call Monitor.Exit, X0
	296 Compare X28, 0
	297 JumpIfNotEqual {300}
	298 Move X0, X19
	299 Call 0x1D2D690
	300 Move X0, X28
	301 Call 0x1C17F18
	302 Call 0x1991590

Method: System.Boolean TryGetValue(TKey key, out TValue value)

Disassembly:
	0x0296259C STR X8, [X31 + 0x8]
	0x029625A0 BL 0x1C16D44
	0x029625A4 LDR X8, [X23 + 0x20]
	0x029625A8 LDR X20, [X31 + 0x20]
	0x029625AC LDR X8, [X8 + 0xC0]
	0x029625B0 LDR X0, [X8 + 0xF8]
	0x029625B4 LDRB W8, [X0 + 0x135]
	0x029625B8 TBNZ X8, 0x0, 0x29625C0
	0x029625BC BL 0x1C5C684
	0x029625C0 BL 0x1C16F10
	0x029625C4 LDR X8, [X23 + 0x20]
	0x029625C8 MOV X19, X0
	0x029625CC LDR X8, [X8 + 0xC0]
	0x029625D0 LDR X6, [X8 + 0x1A0]
	0x029625D4 LDR X5, [X31 + 0x8]
	0x029625D8 MOV X1, X29
	0x029625DC MOV X2, X25
	0x029625E0 MOV X3, X20
	0x029625E4 MOV W4, W26
	0x029625E8 BL 0x2425134
	0x029625EC CBZ X27, 0x29625FC
	0x029625F0 BL 0x1C16D44
	0x029625F4 STR X19, [X27 + 0x28]
	0x029625F8 B 0x2962624
	0x029625FC LDR X20, [X21 + 0x10]
	0x02962600 CBZ X20, 0x29626AC
	0x02962604 LDR W8, [X20 + 0x18]
	0x02962608 CMP W24, W8
	0x0296260C B.CS 0x29626B4
	0x02962610 BL 0x1C16D44
	0x02962614 LDR X8, [X31 + 0x28]
	0x02962618 ADD X8, X20, X8, 0x3, LSL
	0x0296261C LDR X20, [X31 + 0x20]
	0x02962620 STR X19, [X8 + 0x20]
	0x02962624 LDR X8, [X31 + 0x18]
	0x02962628 MOV X29, X31
	0x0296262C MOV W19, W31
	0x02962630 STR X20, [X8]
	0x02962634 MOVZ W20, 0xD
	0x02962638 B 0x29624D8
	0x0296263C BL 0x1C16F20
	0x02962640 B 0x29627A8
	0x02962644 BL 0x1C16F20
	0x02962648 B 0x29627A8
	0x0296264C BL 0x1C16F28
	0x02962650 B 0x29627A8
	0x02962654 BL 0x1C16F20
	0x02962658 B 0x29627A8
	0x0296265C BL 0x1C16F28
	0x02962660 B 0x29627A8
	0x02962664 BL 0x1C16F20
	0x02962668 B 0x29627A8
	0x0296266C BL 0x1C16F28
	0x02962670 B 0x29627A8
	0x02962674 BL 0x1C16F28
	0x02962678 B 0x29627A8
	0x0296267C BL 0x1C16F20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, [X0+24]
	009 Compare X24, 0
	010 JumpIfEqual {65}
	011 Move X8, [X4+32]
	012 Move X23, X1
	013 Move X21, X4
	014 Move X19, X3
	015 Move X8, [X8+192]
	016 Move X20, X2
	017 Move X22, X0
	018 Move X1, [X8+32]
	019 Move W8, [X1+309]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {27}
	024 Move X0, X1
	025 Call 0x1C5D684
	026 Move X1, X0
	027 Move X8, [X24]
	028 NotImplemented "Instruction LDRH not yet implemented."
	029 Compare X9, 0
	030 JumpIfEqual {37}
	031 Move X10, [X8+176]
	032 Add X10, X10, 8
	033 NotImplemented "Instruction LDUR not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Subtract X9, X9, 1
	036 Add X10, X10, 16
	037 Move W2, 1
	038 Move X0, X24
	039 Call 0x1C5D788
	040 Move W9, [X10]
	041 Add W9, W9, 1
	042 Add X8, X8, W9
	043 Add X0, X8, 312
	044 Move X8, [X0]
	045 Move X3, [X0+8]
	046 Move X0, X24
	047 Move X1, X23
	048 Move X2, X20
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move X8, [X21+32]
	051 Move W3, W0
	052 Move X0, X22
	053 Move X1, X23
	054 Move X8, [X8+192]
	055 Move X2, X20
	056 Move X4, X19
	057 Move X20, [X31+48]
	058 Move X19, [X31+56]
	059 Move X5, [X8+320]
	060 Move X22, [X31+32]
	061 Move X21, [X31+40]
	062 Move X24, [X31+16]
	063 Move X23, [X31+24]
	064 Move X30, [X31+64]
	065 Call 0x1C17F20

Method: System.Boolean TryGetValueInternal(TKey key, System.Int32 hashcode, out TValue value)

Disassembly:
	0x02962680 B 0x29627A8
	0x02962684 BL 0x1C16F28
	0x02962688 B 0x29627A8
	0x0296268C BL 0x1C16F30
	0x02962690 MOV X1, X23
	0x02962694 BL 0x1C16DEC
	0x02962698 B 0x29627A8
	0x0296269C BL 0x1C16F20
	0x029626A0 B 0x29627A8
	0x029626A4 BL 0x1C16F28
	0x029626A8 B 0x29627A8
	0x029626AC BL 0x1C16F20
	0x029626B0 B 0x29627A8
	0x029626B4 BL 0x1C16F28
	0x029626B8 B 0x29627A8
	0x029626BC B 0x296271C
	0x029626C0 B 0x296271C
	0x029626C4 B 0x296271C
	0x029626C8 B 0x296271C
	0x029626CC B 0x296271C
	0x029626D0 B 0x296271C
	0x029626D4 B 0x296271C
	0x029626D8 B 0x296271C
	0x029626DC B 0x296271C
	0x029626E0 B 0x296271C
	0x029626E4 B 0x296271C
	0x029626E8 B 0x296271C
	0x029626EC B 0x296271C
	0x029626F0 B 0x296271C
	0x029626F4 B 0x296271C
	0x029626F8 B 0x296271C
	0x029626FC B 0x296271C
	0x02962700 B 0x296271C
	0x02962704 B 0x296271C
	0x02962708 B 0x296271C
	0x0296270C B 0x296271C
	0x02962710 B 0x296271C
	0x02962714 B 0x296271C
	0x02962718 B 0x296271C
	0x0296271C CMP W1, 0x1
	0x02962720 B.NE 0x29627A8
	0x02962724 BL 0x3EB1AD0
	0x02962728 LDR X29, [X0]
	0x0296272C BL 0x3EB1AE0
	0x02962730 MOV W20, W31
	0x02962734 MOV W19, W31
	0x02962738 B 0x29624D8
	0x0296273C CMP W20, 0x11
	0x02962740 B.EQ 0x2962748
	0x02962744 CBNZ W20, 0x2962774
	0x02962748 TBZ X19, 0x0, 0x2962764
	0x0296274C LDR X8, [X23 + 0x20]
	0x02962750 MOV X0, X22
	0x02962754 MOV X1, X21
	0x02962758 LDR X8, [X8 + 0xC0]
	0x0296275C LDR X2, [X8 + 0x1A8]
	0x02962760 BL 0x2963BE0
	0x02962764 LDP X8, X9, [X31 + 0x18]
	0x02962768 MOVZ W0, 0x1
	0x0296276C STR X9, [X8]
	0x02962770 B 0x2962778
	0x02962774 MOV W0, W31
	0x02962778 LDP X20, X19, [X31 + 0xA0]
	0x0296277C LDP X22, X21, [X31 + 0x90]
	0x02962780 LDP X24, X23, [X31 + 0x80]
	0x02962784 LDP X26, X25, [X31 + 0x70]
	0x02962788 LDP X28, X27, [X31 + 0x60]
	0x0296278C LDP X29, X30, [X31 + 0x50]
	0x02962790 ADD X31, X31, 0xB0
	0x02962794 RET
	0x02962798 BL 0x1C16F20
	0x0296279C MOV X0, X29
	0x029627A0 BL 0x1C16F18
	0x029627A4 BL 0x1C16F28
	0x029627A8 MOV X19, X0
	0x029627AC MOV X29, X31
	0x029627B0 B 0x29627B8
	0x029627B4 MOV X19, X0
	0x029627B8 LDRB W8, [X31 + 0x4C]
	0x029627BC CBNZ W8, 0x29627CC
	0x029627C0 CBNZ X29, 0x29627D8
	0x029627C4 MOV X0, X19
	0x029627C8 BL 0x1D2C690
	0x029627CC LDR X8, [X21 + 0x18]
	0x029627D0 CBNZ X8, 0x29627E0
	0x029627D4 BL 0x1C16F20
	0x029627D8 MOV X0, X29
	0x029627DC BL 0x1C16F18
	0x029627E0 LDR W9, [X8 + 0x18]
	0x029627E4 LDR W10, [X31 + 0x3C]
	0x029627E8 CMP W10, W9
	0x029627EC B.CS 0x2962808
	0x029627F0 LDR W9, [X31 + 0x3C]
	0x029627F4 ADD X8, X8, W9, 0x3, UXTW
	0x029627F8 LDR X0, [X8 + 0x20]
	0x029627FC MOV X1, X31

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X25, [X0+16]
	013 Move X20, X5
	014 Move X19, X4
	015 Move W21, W3
	016 Move X22, X2
	017 Move X23, X0
	018 Move X24, X1
	019 Call 0x1C17D44
	020 Compare X25, 0
	021 JumpIfEqual {116}
	022 Move X26, [X25+16]
	023 Compare X26, 0
	024 JumpIfEqual {116}
	025 Move X8, [X20+32]
	026 Move X8, [X8+192]
	027 Move X0, [X8+16]
	028 Move W8, [X0+309]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {34}
	033 Call 0x1C5D684
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X8, [X25+16]
	039 Compare X8, 0
	040 JumpIfEqual {116}
	041 Move W9, [X26+24]
	042 Move W10, [X8+24]
	043 And W11, W21, 0x7FFFFFFF
	044 NotImplemented "Instruction SDIV not yet implemented."
	045 NotImplemented "Instruction MSUB not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Add X8, X8, W9
	048 Move X28, [X8+32]
	049 Call 0x1C17D44
	050 Compare X28, 0
	051 JumpIfEqual {99}
	052 Move W8, [X28+48]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X25, [X23+24]
	055 Compare X25, 0
	056 JumpIfEqual {116}
	057 Move X8, [X20+32]
	058 Move X27, [X28+16]
	059 Move X26, [X28+24]
	060 Move X8, [X8+192]
	061 Move X1, [X8+32]
	062 Move W8, [X1+309]
	063 Move TEMP, X8
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfEqual {70}
	067 Move X0, X1
	068 Call 0x1C5D684
	069 Move X1, X0
	070 Move X8, [X25]
	071 NotImplemented "Instruction LDRH not yet implemented."
	072 Compare X9, 0
	073 JumpIfEqual {80}
	074 Move X10, [X8+176]
	075 Add X10, X10, 8
	076 NotImplemented "Instruction LDUR not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Subtract X9, X9, 1
	079 Add X10, X10, 16
	080 Move X0, X25
	081 Move W2, W31
	082 Call 0x1C5D788
	083 NotImplemented "Instruction LDRSW not yet implemented."
	084 Add X8, X8, X9
	085 Add X0, X8, 312
	086 Move X8, [X0]
	087 Move X5, [X0+8]
	088 Move X0, X25
	089 Move X1, X27
	090 Move X2, X26
	091 Move X3, X24
	092 Move X4, X22
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Move TEMP, X0
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfEqual {101}
	098 Move X28, [X28+40]
	099 Move W0, W31
	100 Move [X19], X31
	101 Move X8, [X28+32]
	102 Move W0, 1
	103 Move [X19], X8
	104 Move X20, [X31+80]
	105 Move X19, [X31+88]
	106 Move X22, [X31+64]
	107 Move X21, [X31+72]
	108 Move X24, [X31+48]
	109 Move X23, [X31+56]
	110 Move X26, [X31+32]
	111 Move X25, [X31+40]
	112 Move X28, [X31+16]
	113 Move X27, [X31+24]
	114 Move X30, [X31+96]
	115 Return X0
	116 Call 0x1C17F20
	117 Call 0x1C17F28

Method: System.Void Clear()

Disassembly:
	0x02962800 BL 0x33E14E4
	0x02962804 B 0x29627C0
	0x02962808 BL 0x1C16F28
	0x0296280C BL 0x1990590
	0x02962810 SUB X31, X31, 0x40
	0x02962814 STP X30, X21, [X31 + 0x20]
	0x02962818 STP X20, X19, [X31 + 0x30]
	0x0296281C STR X31, [X31 + 0x18]
	0x02962820 LDR X8, [X3 + 0x20]
	0x02962824 MOV X19, X3
	0x02962828 ADD X3, X31, 0x18
	0x0296282C MOV X20, X2
	0x02962830 LDR X8, [X8 + 0xC0]
	0x02962834 MOV X21, X1
	0x02962838 LDR X4, [X8 + 0xE0]
	0x0296283C BL 0x296159C
	0x02962840 TBZ X0, 0x0, 0x2962858
	0x02962844 LDR X0, [X31 + 0x18]
	0x02962848 LDP X20, X19, [X31 + 0x30]
	0x0296284C LDP X30, X21, [X31 + 0x20]
	0x02962850 ADD X31, X31, 0x40
	0x02962854 RET
	0x02962858 STP X21, X20, [X31 + 0x8]
	0x0296285C LDR X8, [X19 + 0x20]
	0x02962860 ADD X1, X31, 0x8
	0x02962864 LDR X8, [X8 + 0xC0]
	0x02962868 LDR X0, [X8 + 0x60]
	0x0296286C BL 0x1C16E04
	0x02962870 LDR X8, [X19 + 0x20]
	0x02962874 MOV X20, X0
	0x02962878 MOVZ W1, 0x2
	0x0296287C LDR X8, [X8 + 0xC0]
	0x02962880 MOV X0, X8
	0x02962884 BL 0x199B988
	0x02962888 BL 0x19903D0
	0x0296288C LDR X8, [X19 + 0x20]
	0x02962890 MOV X0, X20
	0x02962894 LDR X8, [X8 + 0xC0]
	0x02962898 LDR X1, [X8 + 0x1B0]
	0x0296289C BL 0x29629A0
	0x029628A0 SUB X31, X31, 0x50
	0x029628A4 STP X30, X31, [X31 + 0x10]
	0x029628A8 STP X24, X23, [X31 + 0x20]
	0x029628AC STP X22, X21, [X31 + 0x30]
	0x029628B0 STP X20, X19, [X31 + 0x40]
	0x029628B4 LDR X24, [X0 + 0x18]
	0x029628B8 CBZ X24, 0x296299C
	0x029628BC LDR X8, [X4 + 0x20]
	0x029628C0 MOV X22, X1
	0x029628C4 MOV X23, X4
	0x029628C8 MOV X19, X3
	0x029628CC LDR X8, [X8 + 0xC0]
	0x029628D0 MOV X20, X2
	0x029628D4 MOV X21, X0
	0x029628D8 LDR X1, [X8 + 0x20]
	0x029628DC LDRB W8, [X1 + 0x135]
	0x029628E0 TBNZ X8, 0x0, 0x29628F0
	0x029628E4 MOV X0, X1
	0x029628E8 BL 0x1C5C684
	0x029628EC MOV X1, X0
	0x029628F0 LDR X8, [X24]
	0x029628F4 LDRH W9, [X8 + 0x12E]
	0x029628F8 CBZ X9, 0x296291C
	0x029628FC LDR X10, [X8 + 0xB0]
	0x02962900 ADD X10, X10, 0x8
	0x02962904 LDUR X11, [X10 - 0x8]
	0x02962908 CMP X11, X1
	0x0296290C B.EQ 0x296292C
	0x02962910 SUBS X9, X9, 0x1
	0x02962914 ADD X10, X10, 0x10
	0x02962918 B.NE 0x2962904
	0x0296291C MOVZ W2, 0x1
	0x02962920 MOV X0, X24
	0x02962924 BL 0x1C5C788
	0x02962928 B 0x296293C
	0x0296292C LDR W9, [X10]
	0x02962930 ADD W9, W9, 0x1
	0x02962934 ADD X8, X8, W9, 0x4, SXTW
	0x02962938 ADD X0, X8, 0x138
	0x0296293C LDP X8, X3, [X0]
	0x02962940 MOV X0, X24
	0x02962944 MOV X1, X22
	0x02962948 MOV X2, X20
	0x0296294C BLR X8
	0x02962950 LDR X8, [X23 + 0x20]
	0x02962954 MOV W3, W0
	0x02962958 ADD X7, X31, 0x18
	0x0296295C MOVZ W5, 0x1
	0x02962960 LDR X8, [X8 + 0xC0]
	0x02962964 MOVZ W6, 0x1
	0x02962968 MOV X0, X21
	0x0296296C MOV X1, X22
	0x02962970 LDR X8, [X8 + 0x90]
	0x02962974 MOV X2, X20
	0x02962978 MOV X4, X19
	0x0296297C STR X8, [X31]
	0x02962980 BL 0x2962214
	0x02962984 LDP X20, X19, [X31 + 0x40]
	0x02962988 LDP X22, X21, [X31 + 0x30]
	0x0296298C LDP X24, X23, [X31 + 0x20]
	0x02962990 LDR X30, [X31 + 0x10]
	0x02962994 ADD X31, X31, 0x50
	0x02962998 RET
	0x0296299C BL 0x1C16F20
	0x029629A0 STP X30, X21, [X31 - 0x20]!
	0x029629A4 STP X20, X19, [X31 + 0x10]
	0x029629A8 MOV X19, X1
	0x029629AC MOV X20, X0
	0x029629B0 BL 0x19903C0
	0x029629B4 LDR X8, [X20]
	0x029629B8 MOV X0, X20
	0x029629BC LDP X9, X1, [X8 + 0x168]
	0x029629C0 BLR X9
	0x029629C4 MOV X20, X0
	0x029629C8 ADRP X0, 0x17BB000
	0x029629CC LDR X0, [X0 + 0x2B8]
	0x029629D0 BL 0x1C16D08
	0x029629D4 MOV X1, X20
	0x029629D8 MOV X2, X31
	0x029629DC BL 0x32094D4
	0x029629E0 MOV X20, X0
	0x029629E4 ADRP X0, 0x1794000
	0x029629E8 LDR X0, [X0 + 0x78]
	0x029629EC BL 0x1C16D08
	0x029629F0 BL 0x1C16F10
	0x029629F4 MOV X1, X20
	0x029629F8 MOV X2, X31
	0x029629FC MOV X21, X0
	0x02962A00 BL 0x335DC08
	0x02962A04 MOV X0, X21
	0x02962A08 MOV X1, X19
	0x02962A0C BL 0x1C16DEC
	0x02962A10 STR X30, [X31 - 0x20]!
	0x02962A14 STP X20, X19, [X31 + 0x10]
	0x02962A18 MOV X19, X0
	0x02962A1C ADRP X0, 0x1796000
	0x02962A20 LDR X0, [X0 + 0x528]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x1A79000
	009 Move W8, [X21+3668]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x1793000
	017 Move X0, [X0+3672]
	018 Call 0x1C17CF4
	019 Move X0, 0x1792000
	020 Move X0, [X0+1448]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+3668], W8
	024 Move [X31+12], W31
	025 Move X8, [X20+32]
	026 Move X8, [X8+192]
	027 Move X2, [X8+344]
	028 Add X1, X31, 12
	029 Move X0, X19
	030 Call 0x2965398, X0, X1
	031 Move X8, [X20+32]
	032 Move X8, [X8+192]
	033 Move X0, [X8+184]
	034 Move W8, [X0+309]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {40}
	039 Call 0x1C5D684
	040 Move W1, 31
	041 Call 0x1C17D6C
	042 Move X22, [X19+16]
	043 Move X21, X0
	044 Call 0x1C17D44
	045 Compare X22, 0
	046 JumpIfEqual {116}
	047 Move X22, [X22+24]
	048 Move X23, [X19+16]
	049 Call 0x1C17D44
	050 Compare X23, 0
	051 JumpIfEqual {117}
	052 Move X23, [X23+32]
	053 Call 0x1C17D44
	054 Compare X23, 0
	055 JumpIfEqual {118}
	056 Move X8, 0x1793000
	057 Move X8, [X8+3672]
	058 Move W1, [X23+24]
	059 Move X0, [X8]
	060 Call 0x1C17D6C
	061 Move X8, [X20+32]
	062 Move X23, X0
	063 Move X8, [X8+192]
	064 Move X0, [X8+168]
	065 Move W8, [X0+309]
	066 Move TEMP, X8
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfEqual {71}
	070 Call 0x1C5D684
	071 Call 0x1C17F10
	072 Move X8, [X20+32]
	073 Move X24, X0
	074 Move X8, [X8+192]
	075 Move X4, [X8+192]
	076 Move X1, X21
	077 Move X2, X22
	078 Move X3, X23
	079 Call 0x2677894, X0, X1, X2, X3
	080 Call 0x1C17D44
	081 Move [X19+16], X24
	082 Compare X24, 0
	083 JumpIfEqual {119}
	084 Move X20, [X24+16]
	085 Compare X20, 0
	086 JumpIfEqual {120}
	087 Move X21, [X24+24]
	088 Compare X21, 0
	089 JumpIfEqual {121}
	090 Move X8, 0x1792000
	091 Move X8, [X8+1448]
	092 Move X0, [X8]
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {97}
	096 Call 0x1C17DFC
	097 Move W8, [X20+24]
	098 Move W9, [X21+24]
	099 NotImplemented "Instruction SDIV not yet implemented."
	100 Move W0, 1
	101 Move X2, X31
	102 Call Math.Max, X0, X1
	103 Move [X19+36], W0
	104 Move W2, [X31+12]
	105 Move X0, X19
	106 Move W1, W31
	107 Call 0x29655AC, X0, X1, X2
	108 Move X20, [X31+48]
	109 Move X19, [X31+56]
	110 Move X22, [X31+32]
	111 Move X21, [X31+40]
	112 Move X24, [X31+16]
	113 Move X23, [X31+24]
	114 Move X30, [X31+64]
	115 Return 
	116 Call 0x1C17F20
	117 Call 0x1C17F20
	118 Call 0x1C17F20
	119 Call 0x1C17F20
	120 Call 0x1C17F20
	121 Call 0x1C17F20
	122 Move X20, X0
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move X0, X20
	125 Call 0x3EB2AD0
	126 Move X21, [X0]
	127 Call 0x3EB2AE0
	128 Move W2, [X31+12]
	129 Move X0, X19
	130 Move W1, W31
	131 Call 0x29655AC, X0, X1, X2
	132 Compare X21, 0
	133 JumpIfEqual {108}
	134 Move X0, X21
	135 Call 0x1C17F18
	136 Move X21, X31
	137 Move X20, X0
	138 Move W2, [X31+12]
	139 Move X0, X19
	140 Move W1, W31
	141 Call 0x29655AC, X0, X1, X2
	142 Compare X21, 0
	143 JumpIfNotEqual {146}
	144 Move X0, X20
	145 Call 0x1D2D690
	146 Move X0, X21
	147 Call 0x1C17F18
	148 Call 0x1991590

Method: System.Void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(System.Collections.Generic.KeyValuePair`2<TKey, TValue>[] array, System.Int32 index)

Disassembly:
	0x02962A24 BL 0x1C16D08
	0x02962A28 BL 0x1C16F10
	0x02962A2C MOV X20, X0
	0x02962A30 ADRP X0, 0x17BB000
	0x02962A34 LDR X0, [X0 + 0x70]
	0x02962A38 BL 0x1C16D08
	0x02962A3C MOV X1, X0
	0x02962A40 MOV X0, X20
	0x02962A44 MOV X2, X31
	0x02962A48 BL 0x330E100
	0x02962A4C MOV X0, X20
	0x02962A50 MOV X1, X19
	0x02962A54 BL 0x1C16DEC
	0x02962A58 SUB X31, X31, 0x30
	0x02962A5C STP X30, X21, [X31 + 0x10]
	0x02962A60 STP X20, X19, [X31 + 0x20]
	0x02962A64 STR W31, [X31 + 0xC]
	0x02962A68 LDR X8, [X1 + 0x20]
	0x02962A6C MOV X19, X0
	0x02962A70 LDR X8, [X8 + 0xC0]
	0x02962A74 LDR X2, [X8 + 0x158]
	0x02962A78 ADD X1, X31, 0xC
	0x02962A7C BL 0x2964398
	0x02962A80 MOV X0, X19
	0x02962A84 BL 0x2962B24
	0x02962A88 LDR W2, [X31 + 0xC]
	0x02962A8C MOV W21, W0
	0x02962A90 MOV X0, X19
	0x02962A94 MOV W1, W31
	0x02962A98 BL 0x29645AC
	0x02962A9C MOV W0, W21
	0x02962AA0 LDP X20, X19, [X31 + 0x20]
	0x02962AA4 LDP X30, X21, [X31 + 0x10]
	0x02962AA8 ADD X31, X31, 0x30
	0x02962AAC RET
	0x02962AB0 B 0x2962AB4
	0x02962AB4 MOV X21, X0
	0x02962AB8 CMP W1, 0x1
	0x02962ABC B.NE 0x2962AF0
	0x02962AC0 MOV X0, X21
	0x02962AC4 BL 0x3EB1AD0
	0x02962AC8 LDR X20, [X0]
	0x02962ACC BL 0x3EB1AE0
	0x02962AD0 LDR W2, [X31 + 0xC]
	0x02962AD4 MOV X0, X19
	0x02962AD8 MOV W1, W31
	0x02962ADC BL 0x29645AC
	0x02962AE0 MOV W21, W31
	0x02962AE4 CBZ X20, 0x2962A9C
	0x02962AE8 MOV X0, X20
	0x02962AEC BL 0x1C16F18
	0x02962AF0 MOV X20, X31
	0x02962AF4 B 0x2962AFC
	0x02962AF8 MOV X21, X0
	0x02962AFC LDR W2, [X31 + 0xC]
	0x02962B00 MOV X0, X19
	0x02962B04 MOV W1, W31
	0x02962B08 BL 0x29645AC
	0x02962B0C CBNZ X20, 0x2962B18
	0x02962B10 MOV X0, X21
	0x02962B14 BL 0x1D2C690
	0x02962B18 MOV X0, X20
	0x02962B1C BL 0x1C16F18
	0x02962B20 BL 0x1990590
	0x02962B24 STR X30, [X31 - 0x30]!
	0x02962B28 STP X22, X21, [X31 + 0x10]
	0x02962B2C STP X20, X19, [X31 + 0x20]
	0x02962B30 LDR X22, [X0 + 0x10]
	0x02962B34 MOV X19, X0
	0x02962B38 BL 0x1C16D44
	0x02962B3C CBZ X22, 0x2962BA0
	0x02962B40 MOV X21, X31
	0x02962B44 MOV W20, W31
	0x02962B48 LDR X22, [X22 + 0x20]
	0x02962B4C BL 0x1C16D44
	0x02962B50 CBZ X22, 0x2962BA0
	0x02962B54 LDRSW X8, [X22 + 0x18]
	0x02962B58 CMP X21, X8
	0x02962B5C B.GE 0x2962BA4
	0x02962B60 LDR X22, [X19 + 0x10]
	0x02962B64 BL 0x1C16D44
	0x02962B68 CBZ X22, 0x2962BA0
	0x02962B6C LDR X22, [X22 + 0x20]
	0x02962B70 BL 0x1C16D44
	0x02962B74 CBZ X22, 0x2962BA0
	0x02962B78 LDR W8, [X22 + 0x18]
	0x02962B7C CMP X21, X8
	0x02962B80 B.CS 0x2962BB8
	0x02962B84 ADD X8, X22, X21, 0x2, LSL
	0x02962B88 LDR W8, [X8 + 0x20]
	0x02962B8C LDR X22, [X19 + 0x10]
	0x02962B90 ADD X21, X21, 0x1
	0x02962B94 ADD W20, W8, W20
	0x02962B98 BL 0x1C16D44
	0x02962B9C CBNZ X22, 0x2962B48
	0x02962BA0 BL 0x1C16F20
	0x02962BA4 MOV W0, W20
	0x02962BA8 LDP X20, X19, [X31 + 0x20]
	0x02962BAC LDP X22, X21, [X31 + 0x10]
	0x02962BB0 LDR X30, [X31], #0x30
	0x02962BB4 RET
	0x02962BB8 BL 0x1C16F28
	0x02962BBC SUB X31, X31, 0x50
	0x02962BC0 STP X30, X31, [X31 + 0x10]
	0x02962BC4 STP X24, X23, [X31 + 0x20]
	0x02962BC8 STP X22, X21, [X31 + 0x30]
	0x02962BCC STP X20, X19, [X31 + 0x40]
	0x02962BD0 MOV X19, X4
	0x02962BD4 CBZ X3, 0x2962D00
	0x02962BD8 LDR X24, [X0 + 0x18]
	0x02962BDC MOV X22, X0
	0x02962BE0 CBZ X24, 0x2962D3C
	0x02962BE4 LDR X8, [X19 + 0x20]
	0x02962BE8 MOV X21, X1
	0x02962BEC MOV X23, X3
	0x02962BF0 MOV X20, X2
	0x02962BF4 LDR X8, [X8 + 0xC0]
	0x02962BF8 LDR X1, [X8 + 0x20]
	0x02962BFC LDRB W8, [X1 + 0x135]
	0x02962C00 TBNZ X8, 0x0, 0x2962C10
	0x02962C04 MOV X0, X1
	0x02962C08 BL 0x1C5C684
	0x02962C0C MOV X1, X0
	0x02962C10 LDR X8, [X24]
	0x02962C14 LDRH W9, [X8 + 0x12E]
	0x02962C18 CBZ X9, 0x2962C3C
	0x02962C1C LDR X10, [X8 + 0xB0]
	0x02962C20 ADD X10, X10, 0x8
	0x02962C24 LDUR X11, [X10 - 0x8]
	0x02962C28 CMP X11, X1
	0x02962C2C B.EQ 0x2962C4C
	0x02962C30 SUBS X9, X9, 0x1
	0x02962C34 ADD X10, X10, 0x10
	0x02962C38 B.NE 0x2962C24
	0x02962C3C MOVZ W2, 0x1
	0x02962C40 MOV X0, X24
	0x02962C44 BL 0x1C5C788
	0x02962C48 B 0x2962C5C
	0x02962C4C LDR W9, [X10]
	0x02962C50 ADD W9, W9, 0x1
	0x02962C54 ADD X8, X8, W9, 0x4, SXTW
	0x02962C58 ADD X0, X8, 0x138
	0x02962C5C LDP X8, X3, [X0]
	0x02962C60 MOV X0, X24
	0x02962C64 MOV X1, X21
	0x02962C68 MOV X2, X20
	0x02962C6C BLR X8
	0x02962C70 LDR X8, [X19 + 0x20]
	0x02962C74 MOV W24, W0
	0x02962C78 ADD X4, X31, 0x18
	0x02962C7C MOV X0, X22
	0x02962C80 LDR X8, [X8 + 0xC0]
	0x02962C84 MOV X1, X21
	0x02962C88 MOV X2, X20

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, X3
	011 Compare X1, 0
	012 JumpIfEqual {88}
	013 Move W21, W2
	014 Move TEMP, X2
	015 And TEMP, TEMP, -2147483648
	016 Compare TEMP, -2147483648
	017 JumpIfEqual {100}
	018 Move [X31+12], W31
	019 Move X8, [X20+32]
	020 Move X22, X1
	021 Move X19, X0
	022 Move X8, [X8+192]
	023 Move X2, [X8+344]
	024 Add X1, X31, 12
	025 Call 0x2965398, X0, X1
	026 Move X24, X31
	027 Move W23, W31
	028 Move X25, [X19+16]
	029 Call 0x1C17D44
	030 Compare X25, 0
	031 JumpIfEqual {83}
	032 Move X8, [X25+24]
	033 Compare X8, 0
	034 JumpIfEqual {84}
	035 Move TEMP, X23
	036 And TEMP, TEMP, -2147483648
	037 Compare TEMP, -2147483648
	038 JumpIfEqual {55}
	039 NotImplemented "Instruction LDRSW not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X25, [X19+16]
	042 Call 0x1C17D44
	043 Compare X25, 0
	044 JumpIfEqual {86}
	045 Move X25, [X25+32]
	046 Call 0x1C17D44
	047 Compare X25, 0
	048 JumpIfEqual {87}
	049 Move W8, [X25+24]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Add X8, X25, X24
	052 Move W8, [X8+32]
	053 Add X24, X24, 1
	054 Add W23, W8, W23
	055 Move TEMP, X23
	056 And TEMP, TEMP, -2147483648
	057 Compare TEMP, -2147483648
	058 JumpIfEqual {120}
	059 Move W8, [X22+24]
	060 Subtract W8, W8, W23
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X8, [X20+32]
	063 Move X8, [X8+192]
	064 Move X3, [X8+368]
	065 Move X0, X19
	066 Move X1, X22
	067 Move W2, W21
	068 Call 0x2962E9C, X0, X1, X2
	069 Move W2, [X31+12]
	070 Move X0, X19
	071 Move W1, W31
	072 Call 0x29655AC, X0, X1, X2
	073 Move X20, [X31+64]
	074 Move X19, [X31+72]
	075 Move X22, [X31+48]
	076 Move X21, [X31+56]
	077 Move X24, [X31+32]
	078 Move X23, [X31+40]
	079 Move X30, [X31+16]
	080 Move X25, [X31+24]
	081 Add X31, X31, 80
	082 Return 
	083 Call 0x1C17F20
	084 Call 0x1C17F20
	085 Call 0x1C17F28
	086 Call 0x1C17F20
	087 Call 0x1C17F20
	088 Move X0, 0x1797000
	089 Move X0, [X0+1320]
	090 Call 0x1C17D08
	091 Call 0x1C17F10
	092 Move X19, X0
	093 Move X0, 0x17BA000
	094 Move X0, [X0+1600]
	095 Call 0x1C17D08
	096 Move X1, X0
	097 Move X0, X19
	098 Move X2, X31
	099 Call ArgumentNullException..ctor, X0, X1
	100 Move X0, 0x179A000
	101 Move X0, [X0+1888]
	102 Call 0x1C17D08
	103 Call 0x1C17F10
	104 Move X19, X0
	105 Move X0, 0x179D000
	106 Move X0, [X0+304]
	107 Call 0x1C17D08
	108 Move X21, X0
	109 Move X0, 0x17BD000
	110 Move X0, [X0+616]
	111 Call 0x1C17D08
	112 Move X2, X0
	113 Move X0, X19
	114 Move X1, X21
	115 Move X3, X31
	116 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	117 Move X0, X19
	118 Move X1, X20
	119 Call 0x1C17DEC
	120 Move X0, 0x179A000
	121 Move X0, [X0+1400]
	122 Call 0x1C17D08
	123 Call 0x1C17F10
	124 Move X21, X0
	125 Move X0, 0x17BD000
	126 Move X0, [X0+624]
	127 Call 0x1C17D08
	128 Move X1, X0
	129 Move X0, X21
	130 Move X2, X31
	131 Call ArgumentException..ctor, X0, X1
	132 Move X0, X21
	133 Move X1, X20
	134 Call 0x1C17DEC
	135 Move X20, X0
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move X0, X20
	138 Call 0x3EB2AD0
	139 Move X21, [X0]
	140 Call 0x3EB2AE0
	141 Move W2, [X31+12]
	142 Move X0, X19
	143 Move W1, W31
	144 Call 0x29655AC, X0, X1, X2
	145 Compare X21, 0
	146 JumpIfEqual {73}
	147 Move X0, X21
	148 Call 0x1C17F18
	149 Move X21, X31
	150 Move X20, X0
	151 Move W2, [X31+12]
	152 Move X0, X19
	153 Move W1, W31
	154 Call 0x29655AC, X0, X1, X2
	155 Compare X21, 0
	156 JumpIfNotEqual {159}
	157 Move X0, X20
	158 Call 0x1D2D690
	159 Move X0, X21
	160 Call 0x1C17F18
	161 Call 0x1991590

Method: System.Collections.Generic.KeyValuePair`2<TKey, TValue>[] ToArray()

Disassembly:
	0x02962C8C MOV W3, W24
	0x02962C90 LDR X5, [X8 + 0x140]
	0x02962C94 BL 0x2961680
	0x02962C98 TBNZ X0, 0x0, 0x2962CE8
	0x02962C9C LDR X8, [X23 + 0x18]
	0x02962CA0 LDR X0, [X23 + 0x40]
	0x02962CA4 LDR X3, [X23 + 0x28]
	0x02962CA8 MOV X1, X21
	0x02962CAC MOV X2, X20
	0x02962CB0 BLR X8
	0x02962CB4 LDR X8, [X19 + 0x20]
	0x02962CB8 MOV X4, X0
	0x02962CBC ADD X7, X31, 0x18
	0x02962CC0 MOVZ W6, 0x1
	0x02962CC4 LDR X8, [X8 + 0xC0]
	0x02962CC8 MOV X0, X22
	0x02962CCC MOV X1, X21
	0x02962CD0 MOV X2, X20
	0x02962CD4 LDR X8, [X8 + 0x90]
	0x02962CD8 MOV W3, W24
	0x02962CDC MOV W5, W31
	0x02962CE0 STR X8, [X31]
	0x02962CE4 BL 0x2962214
	0x02962CE8 LDP X30, X0, [X31 + 0x10]
	0x02962CEC LDP X20, X19, [X31 + 0x40]
	0x02962CF0 LDP X22, X21, [X31 + 0x30]
	0x02962CF4 LDP X24, X23, [X31 + 0x20]
	0x02962CF8 ADD X31, X31, 0x50
	0x02962CFC RET
	0x02962D00 ADRP X0, 0x1796000
	0x02962D04 LDR X0, [X0 + 0x528]
	0x02962D08 BL 0x1C16D08
	0x02962D0C BL 0x1C16F10
	0x02962D10 MOV X20, X0
	0x02962D14 ADRP X0, 0x17BC000
	0x02962D18 LDR X0, [X0 + 0x278]
	0x02962D1C BL 0x1C16D08
	0x02962D20 MOV X1, X0
	0x02962D24 MOV X0, X20
	0x02962D28 MOV X2, X31
	0x02962D2C BL 0x330E100
	0x02962D30 MOV X0, X20
	0x02962D34 MOV X1, X19
	0x02962D38 BL 0x1C16DEC
	0x02962D3C BL 0x1C16F20
	0x02962D40 SUB X31, X31, 0x50
	0x02962D44 STP X30, X31, [X31 + 0x10]
	0x02962D48 STP X24, X23, [X31 + 0x20]
	0x02962D4C STP X22, X21, [X31 + 0x30]
	0x02962D50 STP X20, X19, [X31 + 0x40]
	0x02962D54 LDR X24, [X0 + 0x18]
	0x02962D58 CBZ X24, 0x2962E68
	0x02962D5C LDR X8, [X4 + 0x20]
	0x02962D60 MOV X22, X1
	0x02962D64 MOV X23, X4
	0x02962D68 MOV X19, X3
	0x02962D6C LDR X8, [X8 + 0xC0]
	0x02962D70 MOV X20, X2
	0x02962D74 MOV X21, X0
	0x02962D78 LDR X1, [X8 + 0x20]
	0x02962D7C LDRB W8, [X1 + 0x135]
	0x02962D80 TBNZ X8, 0x0, 0x2962D90
	0x02962D84 MOV X0, X1
	0x02962D88 BL 0x1C5C684
	0x02962D8C MOV X1, X0
	0x02962D90 LDR X8, [X24]
	0x02962D94 LDRH W9, [X8 + 0x12E]
	0x02962D98 CBZ X9, 0x2962DBC
	0x02962D9C LDR X10, [X8 + 0xB0]
	0x02962DA0 ADD X10, X10, 0x8
	0x02962DA4 LDUR X11, [X10 - 0x8]
	0x02962DA8 CMP X11, X1
	0x02962DAC B.EQ 0x2962DCC
	0x02962DB0 SUBS X9, X9, 0x1
	0x02962DB4 ADD X10, X10, 0x10
	0x02962DB8 B.NE 0x2962DA4
	0x02962DBC MOVZ W2, 0x1
	0x02962DC0 MOV X0, X24
	0x02962DC4 BL 0x1C5C788
	0x02962DC8 B 0x2962DDC
	0x02962DCC LDR W9, [X10]
	0x02962DD0 ADD W9, W9, 0x1
	0x02962DD4 ADD X8, X8, W9, 0x4, SXTW
	0x02962DD8 ADD X0, X8, 0x138
	0x02962DDC LDP X8, X3, [X0]
	0x02962DE0 MOV X0, X24
	0x02962DE4 MOV X1, X22
	0x02962DE8 MOV X2, X20
	0x02962DEC BLR X8
	0x02962DF0 LDR X8, [X23 + 0x20]
	0x02962DF4 MOV W24, W0
	0x02962DF8 ADD X4, X31, 0x18
	0x02962DFC MOV X0, X21
	0x02962E00 LDR X8, [X8 + 0xC0]
	0x02962E04 MOV X1, X22
	0x02962E08 MOV X2, X20
	0x02962E0C MOV W3, W24
	0x02962E10 LDR X5, [X8 + 0x140]
	0x02962E14 BL 0x2961680
	0x02962E18 TBNZ X0, 0x0, 0x2962E50
	0x02962E1C LDR X8, [X23 + 0x20]
	0x02962E20 ADD X7, X31, 0x18
	0x02962E24 MOVZ W6, 0x1
	0x02962E28 MOV X0, X21
	0x02962E2C LDR X8, [X8 + 0xC0]
	0x02962E30 MOV X1, X22
	0x02962E34 MOV X2, X20
	0x02962E38 MOV W3, W24
	0x02962E3C LDR X8, [X8 + 0x90]
	0x02962E40 MOV X4, X19
	0x02962E44 MOV W5, W31
	0x02962E48 STR X8, [X31]
	0x02962E4C BL 0x2962214
	0x02962E50 LDP X30, X0, [X31 + 0x10]
	0x02962E54 LDP X20, X19, [X31 + 0x40]
	0x02962E58 LDP X22, X21, [X31 + 0x30]
	0x02962E5C LDP X24, X23, [X31 + 0x20]
	0x02962E60 ADD X31, X31, 0x50
	0x02962E64 RET
	0x02962E68 BL 0x1C16F20
	0x02962E6C STR X30, [X31 - 0x20]!
	0x02962E70 STP X20, X19, [X31 + 0x10]
	0x02962E74 LDR X8, [X4 + 0x20]
	0x02962E78 MOV X19, X4
	0x02962E7C LDR X8, [X8 + 0xC0]
	0x02962E80 LDR X4, [X8 + 0x1D0]
	0x02962E84 BL 0x2960FC8
	0x02962E88 TBZ X0, 0x0, 0x2962E98
	0x02962E8C LDP X20, X19, [X31 + 0x10]
	0x02962E90 LDR X30, [X31], #0x20
	0x02962E94 RET
	0x02962E98 ADRP X0, 0x1799000

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move [X31+12], W31
	009 Move X8, [X1+32]
	010 Move X20, X1
	011 Move X19, X0
	012 Move X8, [X8+192]
	013 Move X2, [X8+344]
	014 Add X1, X31, 12
	015 Call 0x2965398, X0, X1
	016 Move X22, X31
	017 Move W21, W31
	018 Move X23, [X19+16]
	019 Call 0x1C17D44
	020 Compare X23, 0
	021 JumpIfEqual {104}
	022 Move X8, [X23+24]
	023 Compare X8, 0
	024 JumpIfEqual {105}
	025 NotImplemented "Instruction LDRSW not yet implemented."
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X23, [X19+16]
	028 Call 0x1C17D44
	029 Compare X23, 0
	030 JumpIfEqual {109}
	031 Move X23, [X23+32]
	032 Call 0x1C17D44
	033 Compare X23, 0
	034 JumpIfEqual {111}
	035 Move W8, [X23+24]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Add X8, X23, X22
	038 Move W8, [X8+32]
	039 Add W31, W21, W8
	040 Add W21, W8, W21
	041 Add X22, X22, 1
	042 Move X8, [X20+32]
	043 Move X8, [X8+192]
	044 Compare W21, 0
	045 JumpIfEqual {63}
	046 Move X0, [X8+384]
	047 Move W8, [X0+309]
	048 Move TEMP, X8
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {53}
	052 Call 0x1C5D684
	053 Move W1, W21
	054 Call 0x1C17D6C
	055 Move X8, [X20+32]
	056 Move X21, X0
	057 Move X8, [X8+192]
	058 Move X3, [X8+368]
	059 Move X0, X19
	060 Move X1, X21
	061 Move W2, W31
	062 Call 0x2962E9C, X0, X1, X2
	063 Move X20, [X8+376]
	064 Move X8, [X20+56]
	065 Compare X8, 0
	066 JumpIfNotEqual {70}
	067 Move X0, X20
	068 Call 0x1C5D6E0
	069 Move X8, [X20+56]
	070 Move X0, [X8+16]
	071 Move W8, [X0+309]
	072 Move TEMP, X8
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfEqual {77}
	076 Call 0x1C5D684
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Move X8, [X20+56]
	082 Move X0, [X8+16]
	083 Move W8, [X0+309]
	084 Move TEMP, X8
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfEqual {89}
	088 Call 0x1C5D684
	089 Move X8, [X0+184]
	090 Move X21, [X8]
	091 Move W2, [X31+12]
	092 Move X0, X19
	093 Move W1, W31
	094 Call 0x29655AC, X0, X1, X2
	095 Move X0, X21
	096 Move X20, [X31+48]
	097 Move X19, [X31+56]
	098 Move X22, [X31+32]
	099 Move X21, [X31+40]
	100 Move X30, [X31+16]
	101 Move X23, [X31+24]
	102 Add X31, X31, 64
	103 Return X0
	104 Call 0x1C17F20
	105 Call 0x1C17F20
	106 Call 0x1C17F30
	107 Move X1, X20
	108 Call 0x1C17DEC
	109 Call 0x1C17F20
	110 Call 0x1C17F28
	111 Call 0x1C17F20
	112 Move X20, X0
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move X0, X20
	115 Call 0x3EB2AD0
	116 Move X21, [X0]
	117 Call 0x3EB2AE0
	118 Move W2, [X31+12]
	119 Move X0, X19
	120 Move W1, W31
	121 Call 0x29655AC, X0, X1, X2
	122 Compare X21, 0
	123 JumpIfEqual {95}
	124 Move X0, X21
	125 Call 0x1C17F18
	126 Move X21, X31
	127 Move X20, X0
	128 Move W2, [X31+12]
	129 Move X0, X19
	130 Move W1, W31
	131 Call 0x29655AC, X0, X1, X2
	132 Compare X21, 0
	133 JumpIfNotEqual {136}
	134 Move X0, X20
	135 Call 0x1D2D690
	136 Move X0, X21
	137 Call 0x1C17F18
	138 Call 0x1991590

Method: System.Void CopyToPairs(System.Collections.Generic.KeyValuePair`2<TKey, TValue>[] array, System.Int32 index)

Disassembly:
	0x02962E9C LDR X0, [X0 + 0x578]
	0x02962EA0 BL 0x1C16D08
	0x02962EA4 BL 0x1C16F10
	0x02962EA8 MOV X20, X0
	0x02962EAC ADRP X0, 0x17BC000
	0x02962EB0 LDR X0, [X0 + 0x280]
	0x02962EB4 BL 0x1C16D08
	0x02962EB8 MOV X1, X0
	0x02962EBC MOV X0, X20
	0x02962EC0 MOV X2, X31
	0x02962EC4 BL 0x3314A68
	0x02962EC8 MOV X0, X20
	0x02962ECC MOV X1, X19
	0x02962ED0 BL 0x1C16DEC
	0x02962ED4 LDR X8, [X1 + 0x20]
	0x02962ED8 LDR X8, [X8 + 0xC0]
	0x02962EDC LDR X1, [X8 + 0x1D8]
	0x02962EE0 B 0x2964620
	0x02962EE4 LDR X8, [X1 + 0x20]
	0x02962EE8 LDR X8, [X8 + 0xC0]
	0x02962EEC LDR X1, [X8 + 0x1F0]
	0x02962EF0 B 0x29648A4
	0x02962EF4 STR X30, [X31 - 0x30]!
	0x02962EF8 STP X22, X21, [X31 + 0x10]
	0x02962EFC STP X20, X19, [X31 + 0x20]
	0x02962F00 CBZ X0, 0x2962FA4
	0x02962F04 LDR X8, [X2 + 0x20]
	0x02962F08 LDP X21, X20, [X1]
	0x02962F0C LDR X22, [X1 + 0x10]
	0x02962F10 MOV X19, X0
	0x02962F14 LDR X8, [X8 + 0xC0]
	0x02962F18 LDR X8, [X8 + 0x208]
	0x02962F1C LDRB W9, [X8 + 0x135]
	0x02962F20 TBNZ X9, 0x0, 0x2962F30
	0x02962F24 MOV X0, X8
	0x02962F28 BL 0x1C5C684
	0x02962F2C MOV X8, X0
	0x02962F30 LDR X9, [X19]
	0x02962F34 LDRH W10, [X9 + 0x12E]
	0x02962F38 CBZ X10, 0x2962F5C
	0x02962F3C LDR X11, [X9 + 0xB0]
	0x02962F40 ADD X11, X11, 0x8
	0x02962F44 LDUR X12, [X11 - 0x8]
	0x02962F48 CMP X12, X8
	0x02962F4C B.EQ 0x2962F70
	0x02962F50 SUBS X10, X10, 0x1
	0x02962F54 ADD X11, X11, 0x10
	0x02962F58 B.NE 0x2962F44
	0x02962F5C MOVZ W2, 0x5
	0x02962F60 MOV X0, X19
	0x02962F64 MOV X1, X8
	0x02962F68 BL 0x1C5C788
	0x02962F6C B 0x2962F80
	0x02962F70 LDR W8, [X11]
	0x02962F74 ADD W8, W8, 0x5
	0x02962F78 ADD X8, X9, W8, 0x4, SXTW
	0x02962F7C ADD X0, X8, 0x138
	0x02962F80 LDP X5, X4, [X0]
	0x02962F84 MOV X0, X19
	0x02962F88 MOV X1, X21
	0x02962F8C MOV X2, X20
	0x02962F90 MOV X3, X22
	0x02962F94 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X22, [X0+16]
	011 Move X19, X3
	012 Move W20, W2
	013 Move X21, X1
	014 Call 0x1C17D44
	015 Compare X22, 0
	016 JumpIfEqual {73}
	017 Move X22, [X22+16]
	018 Compare X22, 0
	019 JumpIfEqual {73}
	020 Move X8, [X22+24]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X23, X31
	023 And X8, X8, 0
	024 Move W24, 24
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Add X8, X22, X23
	027 Move X25, [X8+32]
	028 Compare X25, 0
	029 JumpIfEqual {60}
	030 Move X1, [X25+16]
	031 Move X2, [X25+24]
	032 Move X3, [X25+32]
	033 Move [X31+24], X31
	034 Move [X31+32], X31
	035 Move [X31+40], X31
	036 Move X8, [X19+32]
	037 Add X0, X31, 24
	038 Move X8, [X8+192]
	039 Move X4, [X8+392]
	040 Call KeyValuePair`2<Guid, Object>..ctor, X0, X1, X2
	041 Compare X21, 0
	042 JumpIfEqual {73}
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 Move X8, [X31+40]
	045 Move [X31], V0
	046 Move [X31+16], X8
	047 Move W8, [X21+24]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X8, [X31+16]
	050 Move V0, [X31]
	051 NotImplemented "Instruction NOP not yet implemented."
	052 NotImplemented "Instruction SMADDL not yet implemented."
	053 Add W20, W20, 1
	054 Move [X9+48], X8
	055 Move [X9+2], V0
	056 Move X25, [X25+40]
	057 Call 0x1C17D44
	058 Compare X25, 0
	059 JumpIfNotEqual {30}
	060 Move W8, [X22+24]
	061 Add X23, X23, 1
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X20, [X31+96]
	064 Move X19, [X31+104]
	065 Move X22, [X31+80]
	066 Move X21, [X31+88]
	067 Move X24, [X31+64]
	068 Move X23, [X31+72]
	069 Move X30, [X31+48]
	070 Move X25, [X31+56]
	071 Add X31, X31, 112
	072 Return 
	073 Call 0x1C17F20
	074 Call 0x1C17F28

Method: System.Void CopyToEntries(System.Collections.DictionaryEntry[] array, System.Int32 index)

Disassembly:
	0x02962F98 LDP X22, X21, [X31 + 0x10]
	0x02962F9C LDR X30, [X31], #0x30
	0x02962FA0 BR X5
	0x02962FA4 BL 0x1C16F20
	0x02962FA8 STR X30, [X31 - 0x20]!
	0x02962FAC STP X20, X19, [X31 + 0x10]
	0x02962FB0 STR X31, [X31 + 0x8]
	0x02962FB4 LDR X8, [X2 + 0x20]
	0x02962FB8 MOV X19, X1
	0x02962FBC MOV X20, X2
	0x02962FC0 LDR X1, [X1]
	0x02962FC4 LDR X8, [X8 + 0xC0]
	0x02962FC8 LDR X2, [X19 + 0x8]
	0x02962FCC ADD X3, X31, 0x8
	0x02962FD0 LDR X4, [X8 + 0xE0]
	0x02962FD4 BL 0x296159C
	0x02962FD8 TBZ X0, 0x0, 0x2963008
	0x02962FDC LDR X8, [X20 + 0x20]
	0x02962FE0 LDR X8, [X8 + 0xC0]
	0x02962FE4 LDR X0, [X8 + 0x108]
	0x02962FE8 BL 0x211B0E8
	0x02962FEC CBZ X0, 0x296301C
	0x02962FF0 LDR X8, [X0]
	0x02962FF4 LDR X2, [X19 + 0x10]
	0x02962FF8 LDR X1, [X31 + 0x8]
	0x02962FFC LDP X9, X3, [X8 + 0x1B8]
	0x02963000 BLR X9
	0x02963004 B 0x296300C
	0x02963008 MOV W0, W31
	0x0296300C LDP X20, X19, [X31 + 0x10]
	0x02963010 AND W0, W0, 0x1
	0x02963014 LDR X30, [X31], #0x20
	0x02963018 RET
	0x0296301C BL 0x1C16F20
	0x02963020 MOV W0, W31
	0x02963024 RET
	0x02963028 STR X30, [X31 - 0x10]!
	0x0296302C STR X31, [X31 + 0x8]
	0x02963030 LDR X8, [X2 + 0x20]
	0x02963034 LDR X5, [X1 + 0x10]
	0x02963038 ADD X3, X31, 0x8
	0x0296303C MOVZ W4, 0x1
	0x02963040 LDR X9, [X8 + 0xC0]
	0x02963044 LDP X8, X2, [X1]
	0x02963048 LDR X6, [X9 + 0xE8]
	0x0296304C MOV X1, X8
	0x02963050 BL 0x296110C
	0x02963054 AND W0, W0, 0x1
	0x02963058 LDR X30, [X31], #0x10
	0x0296305C RET
	0x02963060 LDR X8, [X1 + 0x20]
	0x02963064 LDR X8, [X8 + 0xC0]
	0x02963068 LDR X1, [X8 + 0x218]
	0x0296306C B 0x29621A8
	0x02963070 STR X30, [X31 - 0x40]!
	0x02963074 STP X24, X23, [X31 + 0x10]
	0x02963078 STP X22, X21, [X31 + 0x20]
	0x0296307C STP X20, X19, [X31 + 0x30]
	0x02963080 LDR X8, [X3 + 0x20]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X22, [X0+16]
	010 Move X19, X3
	011 Move W20, W2
	012 Move X21, X1
	013 Call 0x1C17D44
	014 Compare X22, 0
	015 JumpIfEqual {66}
	016 Move X22, [X22+16]
	017 Compare X22, 0
	018 JumpIfEqual {66}
	019 Move X8, [X22+24]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X23, X31
	022 And X8, X8, 0
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Add X8, X22, X23
	025 Move X24, [X8+32]
	026 Compare X24, 0
	027 JumpIfEqual {54}
	028 Move V0, [X24+1]
	029 Add X1, X31, 16
	030 Move [X31+1], V0
	031 Move X8, [X19+32]
	032 Move X8, [X8+192]
	033 Move X0, [X8+96]
	034 Call 0x1C17E04
	035 Move X2, [X24+32]
	036 Move X1, X0
	037 Add X0, X31, 0
	038 Move X3, X31
	039 Move [X31], X31
	040 Move [X31+8], X31
	041 Call DictionaryEntry..ctor, X0, X1, X2
	042 Compare X21, 0
	043 JumpIfEqual {66}
	044 Move W8, [X21+24]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move V0, [X31]
	047 Add X8, X21, W20
	048 Add W20, W20, 1
	049 Move [X8+2], V0
	050 Move X24, [X24+40]
	051 Call 0x1C17D44
	052 Compare X24, 0
	053 JumpIfNotEqual {28}
	054 Move W8, [X22+24]
	055 Add X23, X23, 1
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X20, [X31+80]
	058 Move X19, [X31+88]
	059 Move X22, [X31+64]
	060 Move X21, [X31+72]
	061 Move X24, [X31+48]
	062 Move X23, [X31+56]
	063 Move X30, [X31+32]
	064 Add X31, X31, 96
	065 Return 
	066 Call 0x1C17F20
	067 Call 0x1C17F28

Method: System.Void CopyToObjects(System.Object[] array, System.Int32 index)

Disassembly:
	0x02963084 MOV X19, X3
	0x02963088 LDR X8, [X8 + 0xC0]
	0x0296308C CBZ X1, 0x29631E0
	0x02963090 MOV X21, X1
	0x02963094 LDR X1, [X8 + 0x60]
	0x02963098 MOV X23, X2
	0x0296309C MOV X20, X0
	0x029630A0 LDRB W8, [X1 + 0x135]
	0x029630A4 TBNZ X8, 0x0, 0x29630B4
	0x029630A8 MOV X0, X1
	0x029630AC BL 0x1C5C684
	0x029630B0 MOV X1, X0
	0x029630B4 MOV X0, X21
	0x029630B8 BL 0x1C16E00
	0x029630BC CBZ X0, 0x296320C
	0x029630C0 LDR X8, [X19 + 0x20]
	0x029630C4 LDR X8, [X8 + 0xC0]
	0x029630C8 LDR X24, [X8 + 0x88]
	0x029630CC LDRB W8, [X24 + 0x135]
	0x029630D0 TBNZ X8, 0x0, 0x29630E0
	0x029630D4 MOV X0, X24
	0x029630D8 BL 0x1C5C684
	0x029630DC MOV X24, X0
	0x029630E0 CBZ X23, 0x296319C
	0x029630E4 MOV X0, X23
	0x029630E8 MOV X1, X24
	0x029630EC BL 0x1C16E00
	0x029630F0 MOV X22, X0
	0x029630F4 CBZ X0, 0x296324C
	0x029630F8 CBZ X20, 0x29631A4
	0x029630FC LDR X8, [X19 + 0x20]
	0x02963100 LDR X8, [X8 + 0xC0]
	0x02963104 LDR X23, [X8 + 0x208]
	0x02963108 LDRB W9, [X23 + 0x135]
	0x0296310C TBNZ X9, 0x0, 0x2963124
	0x02963110 MOV X0, X23
	0x02963114 BL 0x1C5C684
	0x02963118 LDR X8, [X19 + 0x20]
	0x0296311C MOV X23, X0
	0x02963120 LDR X8, [X8 + 0xC0]
	0x02963124 LDR X1, [X8 + 0x60]
	0x02963128 LDRB W8, [X1 + 0x135]
	0x0296312C TBNZ X8, 0x0, 0x296313C
	0x02963130 MOV X0, X1
	0x02963134 BL 0x1C5C684
	0x02963138 MOV X1, X0
	0x0296313C LDR X8, [X21]
	0x02963140 LDR X9, [X1 + 0x40]
	0x02963144 MOV X0, X21
	0x02963148 LDR X8, [X8 + 0x40]
	0x0296314C CMP X8, X9
	0x02963150 B.NE 0x2963248
	0x02963154 BL 0x1C16E08
	0x02963158 LDR X8, [X20]
	0x0296315C LDP X21, X19, [X0]
	0x02963160 LDRH W9, [X8 + 0x12E]
	0x02963164 CBZ X9, 0x2963188
	0x02963168 LDR X10, [X8 + 0xB0]
	0x0296316C ADD X10, X10, 0x8
	0x02963170 LDUR X11, [X10 - 0x8]
	0x02963174 CMP X11, X23
	0x02963178 B.EQ 0x29631A8
	0x0296317C SUBS X9, X9, 0x1
	0x02963180 ADD X10, X10, 0x10
	0x02963184 B.NE 0x2963170
	0x02963188 MOVZ W2, 0x5
	0x0296318C MOV X0, X20
	0x02963190 MOV X1, X23
	0x02963194 BL 0x1C5C788
	0x02963198 B 0x29631B8
	0x0296319C MOV X22, X31
	0x029631A0 CBNZ X20, 0x29630FC
	0x029631A4 BL 0x1C16F20

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X22, [X0+16]
	011 Move X19, X3
	012 Move W20, W2
	013 Move X21, X1
	014 Call 0x1C17D44
	015 Compare X22, 0
	016 JumpIfEqual {83}
	017 Move X23, [X22+16]
	018 Compare X23, 0
	019 JumpIfEqual {83}
	020 Move X8, [X23+24]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X24, X31
	023 And X8, X8, 0
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Add X8, X23, X24
	026 Move X25, [X8+32]
	027 Compare X25, 0
	028 JumpIfEqual {69}
	029 Move X1, [X25+16]
	030 Move X2, [X25+24]
	031 Move X3, [X25+32]
	032 Move [X31+24], X31
	033 Move [X31+32], X31
	034 Move [X31+40], X31
	035 Move X8, [X19+32]
	036 Add X0, X31, 24
	037 Move X8, [X8+192]
	038 Move X4, [X8+392]
	039 Call KeyValuePair`2<Guid, Object>..ctor, X0, X1, X2
	040 NotImplemented "Instruction LDUR not yet implemented."
	041 Move X8, [X31+40]
	042 Add X1, X31, 0
	043 Move [X31], V0
	044 Move [X31+16], X8
	045 Move X8, [X19+32]
	046 Move X8, [X8+192]
	047 Move X0, [X8+72]
	048 Call 0x1C17E04
	049 Compare X21, 0
	050 JumpIfEqual {83}
	051 Move X22, X0
	052 Compare X0, 0
	053 JumpIfEqual {60}
	054 Move X8, [X21]
	055 Move X0, X22
	056 Move X1, [X8+64]
	057 Call 0x1C17E00
	058 Compare X0, 0
	059 JumpIfEqual {84}
	060 Move W8, [X21+24]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Add X8, X21, W20
	063 Move [X8+32], X22
	064 Move X25, [X25+40]
	065 Add W20, W20, 1
	066 Call 0x1C17D44
	067 Compare X25, 0
	068 JumpIfNotEqual {29}
	069 Move W8, [X23+24]
	070 Add X24, X24, 1
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X20, [X31+96]
	073 Move X19, [X31+104]
	074 Move X22, [X31+80]
	075 Move X21, [X31+88]
	076 Move X24, [X31+64]
	077 Move X23, [X31+72]
	078 Move X30, [X31+48]
	079 Move X25, [X31+56]
	080 Add X31, X31, 112
	081 Return 
	082 Call 0x1C17F28
	083 Call 0x1C17F20
	084 Call 0x1C17F44
	085 Move X1, X31
	086 Call 0x1C17DEC

Method: System.Collections.Generic.IEnumerator`1<System.Collections.Generic.KeyValuePair`2<TKey, TValue>> GetEnumerator()

Disassembly:
	0x029631A8 LDR W9, [X10]
	0x029631AC ADD W9, W9, 0x5
	0x029631B0 ADD X8, X8, W9, 0x4, SXTW
	0x029631B4 ADD X0, X8, 0x138
	0x029631B8 LDP X5, X4, [X0]
	0x029631BC MOV X0, X20
	0x029631C0 MOV X1, X21
	0x029631C4 MOV X2, X19
	0x029631C8 MOV X3, X22
	0x029631CC LDP X20, X19, [X31 + 0x30]
	0x029631D0 LDP X22, X21, [X31 + 0x20]
	0x029631D4 LDP X24, X23, [X31 + 0x10]
	0x029631D8 LDR X30, [X31], #0x40
	0x029631DC BR X5
	0x029631E0 LDR X0, [X8 + 0x10]
	0x029631E4 LDRB W8, [X0 + 0x135]
	0x029631E8 TBNZ X8, 0x0, 0x29631F0
	0x029631EC BL 0x1C5C684
	0x029631F0 LDR W8, [X0 + 0xE0]
	0x029631F4 CBNZ W8, 0x29631FC
	0x029631F8 BL 0x1C16DFC
	0x029631FC LDR X8, [X19 + 0x20]
	0x02963200 LDR X8, [X8 + 0xC0]
	0x02963204 LDR X0, [X8 + 0x68]
	0x02963208 BL 0x2962A10
	0x0296320C ADRP X0, 0x1798000
	0x02963210 LDR X0, [X0 + 0x578]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+32]
	005 Move X20, X1
	006 Move X19, X0
	007 Move X8, [X8+192]
	008 Move X8, [X8+400]
	009 Move W9, [X8+309]
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X8
	015 Call 0x1C5D684
	016 Move X8, X0
	017 Move X0, X8
	018 Call 0x1C17F10
	019 Move X8, [X20+32]
	020 Move W1, W31
	021 Move X20, X0
	022 Move X8, [X8+192]
	023 Move X2, [X8+408]
	024 Call 0x239C090, X0, X1
	025 Compare X20, 0
	026 JumpIfEqual {33}
	027 Move [X20+48], X19
	028 Move X0, X20
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Return X0
	033 Call 0x1C17F20

Method: System.Boolean TryAddInternal(TKey key, System.Int32 hashcode, TValue value, System.Boolean updateIfExists, System.Boolean acquireLock, out TValue resultingValue)

Disassembly:
	0x02963214 BL 0x1C16D08
	0x02963218 BL 0x1C16F10
	0x0296321C MOV X20, X0
	0x02963220 ADRP X0, 0x17BB000
	0x02963224 LDR X0, [X0 + 0x288]
	0x02963228 BL 0x1C16D08
	0x0296322C MOV X1, X0
	0x02963230 MOV X0, X20
	0x02963234 MOV X2, X31
	0x02963238 BL 0x3314A68
	0x0296323C MOV X0, X20
	0x02963240 MOV X1, X19
	0x02963244 BL 0x1C16DEC
	0x02963248 BL 0x1C171E0
	0x0296324C MOV X0, X23
	0x02963250 MOV X1, X24
	0x02963254 BL 0x1C171E0
	0x02963258 CMP W1, 0x1
	0x0296325C MOV X20, X0
	0x02963260 B.NE 0x29632D8
	0x02963264 MOV X0, X20
	0x02963268 BL 0x3EB1AD0
	0x0296326C MOV X20, X0
	0x02963270 ADRP X0, 0x1798000
	0x02963274 LDR X0, [X0 + 0xC08]
	0x02963278 BL 0x1C16D08
	0x0296327C LDR X8, [X20]
	0x02963280 LDR X1, [X8]
	0x02963284 BL 0x1C17270
	0x02963288 TBZ X0, 0x0, 0x29632B0
	0x0296328C BL 0x3EB1AE0
	0x02963290 ADRP X0, 0x1798000
	0x02963294 LDR X0, [X0 + 0x578]
	0x02963298 BL 0x1C16D08
	0x0296329C BL 0x1C16F10
	0x029632A0 MOV X20, X0
	0x029632A4 ADRP X0, 0x17BB000
	0x029632A8 LDR X0, [X0 + 0x290]
	0x029632AC B 0x2963228
	0x029632B0 MOVZ W0, 0x8
	0x029632B4 BL 0x3EB1AF0
	0x029632B8 LDR X8, [X20]
	0x029632BC STR X8, [X0]
	0x029632C0 ADRP X1, 0x1551000
	0x029632C4 ADD X1, X1, 0xE58
	0x029632C8 MOV X2, X31
	0x029632CC BL 0x3EB1B00
	0x029632D0 MOV X20, X0
	0x029632D4 BL 0x3EB1AE0
	0x029632D8 MOV X0, X20
	0x029632DC BL 0x1D2C690
	0x029632E0 BL 0x1990590
	0x029632E4 SUB X31, X31, 0x30
	0x029632E8 STP X30, X21, [X31 + 0x10]
	0x029632EC STP X20, X19, [X31 + 0x20]
	0x029632F0 LDR X8, [X2 + 0x20]
	0x029632F4 MOV X19, X2
	0x029632F8 LDR X8, [X8 + 0xC0]
	0x029632FC CBZ X1, 0x29633A8
	0x02963300 MOV X21, X1
	0x02963304 LDR X1, [X8 + 0x60]
	0x02963308 MOV X20, X0
	0x0296330C LDRB W8, [X1 + 0x135]
	0x02963310 TBNZ X8, 0x0, 0x2963320
	0x02963314 MOV X0, X1
	0x02963318 BL 0x1C5C684
	0x0296331C MOV X1, X0
	0x02963320 MOV X0, X21
	0x02963324 BL 0x1C16E00
	0x02963328 CBZ X0, 0x2963394
	0x0296332C LDR X8, [X19 + 0x20]
	0x02963330 LDR X8, [X8 + 0xC0]
	0x02963334 LDR X1, [X8 + 0x60]
	0x02963338 LDRB W8, [X1 + 0x135]
	0x0296333C TBNZ X8, 0x0, 0x296334C
	0x02963340 MOV X0, X1
	0x02963344 BL 0x1C5C684
	0x02963348 MOV X1, X0
	0x0296334C LDR X8, [X21]
	0x02963350 LDR X9, [X1 + 0x40]
	0x02963354 MOV X0, X21
	0x02963358 LDR X8, [X8 + 0x40]
	0x0296335C CMP X8, X9
	0x02963360 B.NE 0x29633D4
	0x02963364 BL 0x1C16E08
	0x02963368 LDR X8, [X19 + 0x20]
	0x0296336C LDP X1, X2, [X0]
	0x02963370 ADD X3, X31, 0x8
	0x02963374 MOV X0, X20
	0x02963378 LDR X8, [X8 + 0xC0]
	0x0296337C LDR X8, [X8 + 0x220]
	0x02963380 STR X31, [X31 + 0x8]
	0x02963384 LDR X8, [X8 + 0x20]
	0x02963388 LDR X8, [X8 + 0xC0]
	0x0296338C LDR X4, [X8 + 0xE0]
	0x02963390 BL 0x296159C
	0x02963394 LDP X20, X19, [X31 + 0x20]
	0x02963398 LDP X30, X21, [X31 + 0x10]
	0x0296339C AND W0, W0, 0x1
	0x029633A0 ADD X31, X31, 0x30
	0x029633A4 RET
	0x029633A8 LDR X0, [X8 + 0x10]
	0x029633AC LDRB W8, [X0 + 0x135]
	0x029633B0 TBNZ X8, 0x0, 0x29633B8
	0x029633B4 BL 0x1C5C684
	0x029633B8 LDR W8, [X0 + 0xE0]
	0x029633BC CBNZ W8, 0x29633C4
	0x029633C0 BL 0x1C16DFC
	0x029633C4 LDR X8, [X19 + 0x20]
	0x029633C8 LDR X8, [X8 + 0xC0]
	0x029633CC LDR X0, [X8 + 0x68]
	0x029633D0 BL 0x2962A10
	0x029633D4 BL 0x1C171E0
	0x029633D8 STR X30, [X31 - 0x20]!
	0x029633DC STP X20, X19, [X31 + 0x10]
	0x029633E0 LDR X8, [X1 + 0x20]
	0x029633E4 MOV X19, X1
	0x029633E8 MOV X20, X0
	0x029633EC LDR X8, [X8 + 0xC0]
	0x029633F0 LDR X8, [X8 + 0x228]
	0x029633F4 LDRB W9, [X8 + 0x135]
	0x029633F8 TBNZ X9, 0x0, 0x2963408
	0x029633FC MOV X0, X8
	0x02963400 BL 0x1C5C684
	0x02963404 MOV X8, X0
	0x02963408 MOV X0, X8
	0x0296340C BL 0x1C16F10
	0x02963410 LDR X8, [X19 + 0x20]
	0x02963414 MOV X1, X20
	0x02963418 MOV X19, X0
	0x0296341C LDR X8, [X8 + 0xC0]
	0x02963420 LDR X2, [X8 + 0x230]
	0x02963424 BL 0x29B531C
	0x02963428 MOV X0, X19
	0x0296342C LDP X20, X19, [X31 + 0x10]
	0x02963430 LDR X30, [X31], #0x20
	0x02963434 RET
	0x02963438 LDR X8, [X1 + 0x20]
	0x0296343C LDR X8, [X8 + 0xC0]
	0x02963440 LDR X1, [X8 + 0x1D8]
	0x02963444 B 0x2964620
	0x02963448 SUB X31, X31, 0x30
	0x0296344C STP X30, X21, [X31 + 0x10]
	0x02963450 STP X20, X19, [X31 + 0x20]
	0x02963454 STR X31, [X31 + 0x8]
	0x02963458 LDR X8, [X2 + 0x20]
	0x0296345C MOV X19, X2
	0x02963460 LDR X8, [X8 + 0xC0]
	0x02963464 CBZ X1, 0x2963510
	0x02963468 MOV X21, X1
	0x0296346C LDR X1, [X8 + 0x60]
	0x02963470 MOV X20, X0
	0x02963474 LDRB W8, [X1 + 0x135]
	0x02963478 TBNZ X8, 0x0, 0x2963488
	0x0296347C MOV X0, X1
	0x02963480 BL 0x1C5C684
	0x02963484 MOV X1, X0
	0x02963488 MOV X0, X21
	0x0296348C BL 0x1C16E00
	0x02963490 CBZ X0, 0x2963500
	0x02963494 LDR X8, [X19 + 0x20]
	0x02963498 LDR X8, [X8 + 0xC0]
	0x0296349C LDR X1, [X8 + 0x60]
	0x029634A0 LDRB W8, [X1 + 0x135]
	0x029634A4 TBNZ X8, 0x0, 0x29634B4
	0x029634A8 MOV X0, X1
	0x029634AC BL 0x1C5C684
	0x029634B0 MOV X1, X0
	0x029634B4 LDR X8, [X21]
	0x029634B8 LDR X9, [X1 + 0x40]
	0x029634BC MOV X0, X21
	0x029634C0 LDR X8, [X8 + 0x40]
	0x029634C4 CMP X8, X9
	0x029634C8 B.NE 0x296353C
	0x029634CC BL 0x1C16E08
	0x029634D0 LDR X8, [X19 + 0x20]
	0x029634D4 LDP X1, X2, [X0]
	0x029634D8 ADD X3, X31, 0x8
	0x029634DC MOV X0, X20
	0x029634E0 LDR X8, [X8 + 0xC0]
	0x029634E4 MOV W4, W31
	0x029634E8 MOV X5, X31
	0x029634EC LDR X8, [X8 + 0x238]
	0x029634F0 LDR X8, [X8 + 0x20]
	0x029634F4 LDR X8, [X8 + 0xC0]
	0x029634F8 LDR X6, [X8 + 0xE8]
	0x029634FC BL 0x296110C
	0x02963500 LDP X20, X19, [X31 + 0x20]
	0x02963504 LDP X30, X21, [X31 + 0x10]
	0x02963508 ADD X31, X31, 0x30
	0x0296350C RET
	0x02963510 LDR X0, [X8 + 0x10]
	0x02963514 LDRB W8, [X0 + 0x135]
	0x02963518 TBNZ X8, 0x0, 0x2963520
	0x0296351C BL 0x1C5C684
	0x02963520 LDR W8, [X0 + 0xE0]
	0x02963524 CBNZ W8, 0x296352C
	0x02963528 BL 0x1C16DFC
	0x0296352C LDR X8, [X19 + 0x20]
	0x02963530 LDR X8, [X8 + 0xC0]
	0x02963534 LDR X0, [X8 + 0x68]
	0x02963538 BL 0x2962A10
	0x0296353C BL 0x1C171E0
	0x02963540 LDR X8, [X1 + 0x20]
	0x02963544 LDR X8, [X8 + 0xC0]
	0x02963548 LDR X1, [X8 + 0x1F0]
	0x0296354C B 0x29648A4
	0x02963550 SUB X31, X31, 0x30
	0x02963554 STP X30, X21, [X31 + 0x10]
	0x02963558 STP X20, X19, [X31 + 0x20]
	0x0296355C STR X31, [X31 + 0x8]
	0x02963560 LDR X8, [X2 + 0x20]
	0x02963564 MOV X19, X2
	0x02963568 LDR X8, [X8 + 0xC0]
	0x0296356C CBZ X1, 0x2963610
	0x02963570 MOV X21, X1
	0x02963574 LDR X1, [X8 + 0x60]
	0x02963578 MOV X20, X0
	0x0296357C LDRB W8, [X1 + 0x135]
	0x02963580 TBNZ X8, 0x0, 0x2963590
	0x02963584 MOV X0, X1
	0x02963588 BL 0x1C5C684
	0x0296358C MOV X1, X0
	0x02963590 MOV X0, X21
	0x02963594 BL 0x1C16E00
	0x02963598 CBZ X0, 0x2963600
	0x0296359C LDR X8, [X19 + 0x20]
	0x029635A0 LDR X8, [X8 + 0xC0]
	0x029635A4 LDR X1, [X8 + 0x60]
	0x029635A8 LDRB W8, [X1 + 0x135]
	0x029635AC TBNZ X8, 0x0, 0x29635BC
	0x029635B0 MOV X0, X1
	0x029635B4 BL 0x1C5C684
	0x029635B8 MOV X1, X0
	0x029635BC LDR X8, [X21]
	0x029635C0 LDR X9, [X1 + 0x40]
	0x029635C4 MOV X0, X21
	0x029635C8 LDR X8, [X8 + 0x40]
	0x029635CC CMP X8, X9
	0x029635D0 B.NE 0x296363C
	0x029635D4 BL 0x1C16E08
	0x029635D8 LDR X8, [X19 + 0x20]
	0x029635DC LDP X1, X2, [X0]
	0x029635E0 ADD X3, X31, 0x8
	0x029635E4 MOV X0, X20
	0x029635E8 LDR X8, [X8 + 0xC0]
	0x029635EC LDR X4, [X8 + 0xE0]
	0x029635F0 BL 0x296159C
	0x029635F4 LDR X8, [X31 + 0x8]
	0x029635F8 ANDS W31, W0, 0x1
	0x029635FC CSEL X0, X8, X31, NE
	0x02963600 LDP X20, X19, [X31 + 0x20]
	0x02963604 LDP X30, X21, [X31 + 0x10]
	0x02963608 ADD X31, X31, 0x30
	0x0296360C RET
	0x02963610 LDR X0, [X8 + 0x10]
	0x02963614 LDRB W8, [X0 + 0x135]
	0x02963618 TBNZ X8, 0x0, 0x2963620
	0x0296361C BL 0x1C5C684
	0x02963620 LDR W8, [X0 + 0xE0]
	0x02963624 CBNZ W8, 0x296362C
	0x02963628 BL 0x1C16DFC
	0x0296362C LDR X8, [X19 + 0x20]
	0x02963630 LDR X8, [X8 + 0xC0]
	0x02963634 LDR X0, [X8 + 0x68]
	0x02963638 BL 0x2962A10
	0x0296363C BL 0x1C171E0
	0x02963640 STR X30, [X31 - 0x40]!
	0x02963644 STP X24, X23, [X31 + 0x10]
	0x02963648 STP X22, X21, [X31 + 0x20]
	0x0296364C STP X20, X19, [X31 + 0x30]
	0x02963650 LDR X8, [X3 + 0x20]
	0x02963654 MOV X19, X3
	0x02963658 LDR X8, [X8 + 0xC0]
	0x0296365C CBZ X1, 0x2963770
	0x02963660 MOV X22, X1
	0x02963664 LDR X1, [X8 + 0x60]
	0x02963668 MOV X21, X2
	0x0296366C MOV X20, X0
	0x02963670 LDRB W8, [X1 + 0x135]
	0x02963674 TBNZ X8, 0x0, 0x2963684
	0x02963678 MOV X0, X1
	0x0296367C BL 0x1C5C684
	0x02963680 MOV X1, X0
	0x02963684 MOV X0, X22
	0x02963688 BL 0x1C16E00
	0x0296368C CBZ X0, 0x296379C
	0x02963690 LDR X8, [X19 + 0x20]
	0x02963694 LDR X8, [X8 + 0xC0]
	0x02963698 LDR X1, [X8 + 0x88]
	0x0296369C LDRB W8, [X1 + 0x135]
	0x029636A0 TBNZ X8, 0x0, 0x29636B0
	0x029636A4 MOV X0, X1
	0x029636A8 BL 0x1C5C684
	0x029636AC MOV X1, X0
	0x029636B0 MOV X0, X21
	0x029636B4 BL 0x1C16E00
	0x029636B8 CBZ X0, 0x29637BC
	0x029636BC LDR X8, [X19 + 0x20]
	0x029636C0 LDR X8, [X8 + 0xC0]
	0x029636C4 LDR X1, [X8 + 0x60]
	0x029636C8 LDRB W8, [X1 + 0x135]
	0x029636CC TBNZ X8, 0x0, 0x29636DC
	0x029636D0 MOV X0, X1
	0x029636D4 BL 0x1C5C684
	0x029636D8 MOV X1, X0
	0x029636DC LDR X8, [X22]
	0x029636E0 LDR X9, [X1 + 0x40]
	0x029636E4 MOV X0, X22
	0x029636E8 LDR X8, [X8 + 0x40]
	0x029636EC CMP X8, X9
	0x029636F0 B.NE 0x29637F8
	0x029636F4 BL 0x1C16E08
	0x029636F8 LDR X8, [X19 + 0x20]
	0x029636FC LDP X23, X22, [X0]
	0x02963700 LDR X8, [X8 + 0xC0]
	0x02963704 LDR X24, [X8 + 0x88]
	0x02963708 LDRB W8, [X24 + 0x135]
	0x0296370C TBNZ X8, 0x0, 0x296371C
	0x02963710 MOV X0, X24
	0x02963714 BL 0x1C5C684
	0x02963718 MOV X24, X0
	0x0296371C CBZ X21, 0x2963740
	0x02963720 MOV X0, X21
	0x02963724 MOV X1, X24
	0x02963728 BL 0x1C16E00
	0x0296372C MOV X3, X0
	0x02963730 CBNZ X0, 0x2963744
	0x02963734 MOV X0, X21
	0x02963738 MOV X1, X24
	0x0296373C BL 0x1C171E0
	0x02963740 MOV X3, X31
	0x02963744 LDR X8, [X19 + 0x20]
	0x02963748 MOV X0, X20
	0x0296374C MOV X1, X23
	0x02963750 MOV X2, X22
	0x02963754 LDR X8, [X8 + 0xC0]
	0x02963758 LDP X20, X19, [X31 + 0x30]
	0x0296375C LDP X22, X21, [X31 + 0x20]
	0x02963760 LDP X24, X23, [X31 + 0x10]
	0x02963764 LDR X4, [X8 + 0x240]
	0x02963768 LDR X30, [X31], #0x40
	0x0296376C B 0x29628A0
	0x02963770 LDR X0, [X8 + 0x10]
	0x02963774 LDRB W8, [X0 + 0x135]
	0x02963778 TBNZ X8, 0x0, 0x2963780
	0x0296377C BL 0x1C5C684
	0x02963780 LDR W8, [X0 + 0xE0]
	0x02963784 CBNZ W8, 0x296378C
	0x02963788 BL 0x1C16DFC
	0x0296378C LDR X8, [X19 + 0x20]
	0x02963790 LDR X8, [X8 + 0xC0]
	0x02963794 LDR X0, [X8 + 0x68]
	0x02963798 BL 0x2962A10
	0x0296379C ADRP X0, 0x1798000
	0x029637A0 LDR X0, [X0 + 0x578]
	0x029637A4 BL 0x1C16D08
	0x029637A8 BL 0x1C16F10
	0x029637AC MOV X20, X0
	0x029637B0 ADRP X0, 0x17BB000
	0x029637B4 LDR X0, [X0 + 0x288]
	0x029637B8 B 0x29637D8
	0x029637BC ADRP X0, 0x1798000
	0x029637C0 LDR X0, [X0 + 0x578]
	0x029637C4 BL 0x1C16D08
	0x029637C8 BL 0x1C16F10
	0x029637CC MOV X20, X0
	0x029637D0 ADRP X0, 0x17BB000
	0x029637D4 LDR X0, [X0 + 0x290]
	0x029637D8 BL 0x1C16D08
	0x029637DC MOV X1, X0
	0x029637E0 MOV X0, X20
	0x029637E4 MOV X2, X31
	0x029637E8 BL 0x3314A68
	0x029637EC MOV X0, X20
	0x029637F0 MOV X1, X19
	0x029637F4 BL 0x1C16DEC
	0x029637F8 BL 0x1C171E0
	0x029637FC STR X30, [X31 - 0x50]!
	0x02963800 STP X26, X25, [X31 + 0x10]
	0x02963804 STP X24, X23, [X31 + 0x20]
	0x02963808 STP X22, X21, [X31 + 0x30]
	0x0296380C STP X20, X19, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+80], X29
	003 Move [X31+88], X30
	004 Move [X31+96], X28
	005 Move [X31+104], X27
	006 Move [X31+112], X26
	007 Move [X31+120], X25
	008 Move [X31+128], X24
	009 Move [X31+136], X23
	010 Move [X31+144], X22
	011 Move [X31+152], X21
	012 Move [X31+160], X20
	013 Move [X31+168], X19
	014 Move X23, [X31+176]
	015 Move W26, W3
	016 Move X28, X1
	017 Move X22, X0
	018 And W8, W3, 0x7FFFFFFF
	019 Move [X31+24], X7
	020 Move [X31+32], X4
	021 Move [X31+20], W5
	022 Move [X31+64], X2
	023 Move [X31+76], W31
	024 Move [X31+52], W8
	025 Move [X31+56], W6
	026 Move X21, [X22+16]
	027 Call 0x1C17D44
	028 Compare X21, 0
	029 JumpIfEqual {361}
	030 Move X19, [X21+16]
	031 Compare X19, 0
	032 JumpIfEqual {361}
	033 Move X20, [X21+24]
	034 Compare X20, 0
	035 JumpIfEqual {361}
	036 Move X8, [X23+32]
	037 Move X8, [X8+192]
	038 Move X0, [X8+16]
	039 Move W8, [X0+309]
	040 Move TEMP, X8
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {45}
	044 Call 0x1C5D684
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Move W8, [X19+24]
	050 Move W11, [X31+52]
	051 Move W9, [X20+24]
	052 Move [X31+76], W31
	053 NotImplemented "Instruction SDIV not yet implemented."
	054 NotImplemented "Instruction MSUB not yet implemented."
	055 NotImplemented "Instruction SDIV not yet implemented."
	056 NotImplemented "Instruction MSUB not yet implemented."
	057 Move W8, [X31+56]
	058 Move [X31+60], W10
	059 Move TEMP, X8
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {73}
	063 Move X8, [X21+24]
	064 Compare X8, 0
	065 JumpIfEqual {307}
	066 Move W9, [X8+24]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Add X8, X8, W10
	069 Move X0, [X8+32]
	070 Add X1, X31, 76
	071 Move X2, X31
	072 Call Monitor.Enter, X0, X1
	073 Move X19, [X22+16]
	074 Call 0x1C17D44
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X29, X31
	077 Move W19, W31
	078 Move W20, 2
	079 Move X8, [X21+16]
	080 Compare X8, 0
	081 JumpIfEqual {309}
	082 Move W9, [X8+24]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move W9, W24
	085 Add X8, X8, X9
	086 Move X19, [X8+32]
	087 Move [X31+40], X9
	088 Move X20, X31
	089 Compare X19, 0
	090 JumpIfEqual {141}
	091 Move W8, [X19+48]
	092 Move X27, X20
	093 Move X20, X19
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X29, [X22+24]
	096 Compare X29, 0
	097 JumpIfEqual {306}
	098 Move X8, [X23+32]
	099 Move X19, [X20+16]
	100 Move X25, [X20+24]
	101 Move X8, [X8+192]
	102 Move X1, [X8+32]
	103 Move W8, [X1+309]
	104 Move TEMP, X8
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfEqual {111}
	108 Move X0, X1
	109 Call 0x1C5D684
	110 Move X1, X0
	111 Move X8, [X29]
	112 NotImplemented "Instruction LDRH not yet implemented."
	113 Compare X9, 0
	114 JumpIfEqual {121}
	115 Move X10, [X8+176]
	116 Add X10, X10, 8
	117 NotImplemented "Instruction LDUR not yet implemented."
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Subtract X9, X9, 1
	120 Add X10, X10, 16
	121 Move X0, X29
	122 Move W2, W31
	123 Call 0x1C5D788
	124 NotImplemented "Instruction LDRSW not yet implemented."
	125 Add X8, X8, X9
	126 Add X0, X8, 312
	127 Move X8, [X0]
	128 Move X5, [X0+8]
	129 Move X4, [X31+64]
	130 Move X0, X29
	131 Move X1, X19
	132 Move X2, X25
	133 Move X3, X28
	134 NotImplemented "Instruction BLR not yet implemented."
	135 Move TEMP, X0
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfEqual {221}
	139 Move X19, [X20+40]
	140 Call 0x1C17D44
	141 Move X27, [X21+16]
	142 Compare X27, 0
	143 JumpIfEqual {311}
	144 Move W8, [X27+24]
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move X8, [X31+40]
	147 Add X25, X27, X8
	148 Add X25, X25, 32
	149 Move X19, [X25]
	150 Move X8, [X23+32]
	151 Move X8, [X8+192]
	152 Move X0, [X8+248]
	153 Move W8, [X0+309]
	154 Move TEMP, X8
	155 And TEMP, TEMP, 1
	156 Compare TEMP, 1
	157 JumpIfEqual {159}
	158 Call 0x1C5D684
	159 Call 0x1C17F10
	160 Move X8, [X23+32]
	161 Move X20, X0
	162 Move X8, [X8+192]
	163 Move X6, [X8+416]
	164 Move X2, [X31+64]
	165 Move X3, [X31+32]
	166 Move X1, X28
	167 Move W4, W26
	168 Move X5, X19
	169 Call 0x2426134, X0, X1, X2, X3, X4
	170 Move W8, [X27+24]
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Call 0x1C17D44
	173 Move [X25], X20
	174 Move X20, [X21+32]
	175 Call 0x1C17D44
	176 Compare X20, 0
	177 JumpIfEqual {314}
	178 Move W8, [X20+24]
	179 Move W9, [X31+60]
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Move W19, W9
	182 Add X8, X20, X19
	183 Add X8, X8, 32
	184 Move W9, [X8]
	185 Move TEMP, 0x80000000
	186 Not TEMP
	187 Move W10, TEMP
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Add W9, W9, 1
	190 Move [X8], W9
	191 Move X20, [X21+32]
	192 Call 0x1C17D44
	193 Compare X20, 0
	194 JumpIfEqual {319}
	195 Move W8, [X20+24]
	196 Move W9, [X31+60]
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Add X8, X20, X19
	199 Move W9, [X22+36]
	200 Move W8, [X8+32]
	201 Move X29, X31
	202 Move W20, 17
	203 NotImplemented "Instruction CMP not yet implemented."
	204 NotImplemented "Instruction CSET not yet implemented."
	205 Move W8, [X31+76]
	206 Compare W8, 0
	207 JumpIfEqual {218}
	208 Move X8, [X21+24]
	209 Compare X8, 0
	210 JumpIfEqual {361}
	211 Move W9, [X8+24]
	212 Move W10, [X31+60]
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Add X8, X8, W10
	215 Move X0, [X8+32]
	216 Move X1, X31
	217 Call Monitor.Exit, X0
	218 Compare X29, 0
	219 JumpIfNotEqual {362}
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Move W8, [X31+20]
	222 Move TEMP, X8
	223 And TEMP, TEMP, 1
	224 Compare TEMP, 1
	225 JumpIfNotEqual {255}
	226 Move X8, [X23+32]
	227 Move X8, [X8+192]
	228 Move X0, [X8+16]
	229 Move W8, [X0+309]
	230 Move TEMP, X8
	231 And TEMP, TEMP, 1
	232 Compare TEMP, 1
	233 JumpIfEqual {235}
	234 Call 0x1C5D684
	235 Move W8, [X0+224]
	236 Compare W8, 0
	237 JumpIfNotEqual {239}
	238 Call 0x1C17DFC
	239 Move X8, [X23+32]
	240 Move X8, [X8+192]
	241 Move X0, [X8+16]
	242 Move W8, [X0+309]
	243 Move TEMP, X8
	244 And TEMP, TEMP, 1
	245 Compare TEMP, 1
	246 JumpIfEqual {248}
	247 Call 0x1C5D684
	248 Move X8, [X0+184]
	249 Move W8, [X8]
	250 Compare W8, 0
	251 JumpIfEqual {261}
	252 Move X8, [X31+32]
	253 Move [X20+32], X8
	254 Move X20, X8
	255 Move X8, [X20+32]
	256 Move X9, [X31+24]
	257 Move X29, X31
	258 Move W19, W31
	259 Move W20, 13
	260 Move [X9], X8
	261 Move X29, [X20+16]
	262 Move X25, [X20+24]
	263 Move X8, [X20+40]
	264 Move [X31+8], X8
	265 Call 0x1C17D44
	266 Move X8, [X23+32]
	267 Move X20, [X31+32]
	268 Move X8, [X8+192]
	269 Move X0, [X8+248]
	270 Move W8, [X0+309]
	271 Move TEMP, X8
	272 And TEMP, TEMP, 1
	273 Compare TEMP, 1
	274 JumpIfEqual {276}
	275 Call 0x1C5D684
	276 Call 0x1C17F10
	277 Move X8, [X23+32]
	278 Move X19, X0
	279 Move X8, [X8+192]
	280 Move X6, [X8+416]
	281 Move X5, [X31+8]
	282 Move X1, X29
	283 Move X2, X25
	284 Move X3, X20
	285 Move W4, W26
	286 Call 0x2426134, X0, X1, X2, X3, X4
	287 Compare X27, 0
	288 JumpIfEqual {291}
	289 Call 0x1C17D44
	290 Move [X27+40], X19
	291 Move X20, [X21+16]
	292 Compare X20, 0
	293 JumpIfEqual {321}
	294 Move W8, [X20+24]
	295 NotImplemented "Instruction CMP not yet implemented."
	296 Call 0x1C17D44
	297 Move X8, [X31+40]
	298 Add X8, X20, X8
	299 Move X20, [X31+32]
	300 Move [X8+32], X19
	301 Move X8, [X31+24]
	302 Move X29, X31
	303 Move W19, W31
	304 Move [X8], X20
	305 Move W20, 13
	306 Call 0x1C17F20
	307 Call 0x1C17F20
	308 Call 0x1C17F28
	309 Call 0x1C17F20
	310 Call 0x1C17F28
	311 Call 0x1C17F20
	312 Call 0x1C17F28
	313 Call 0x1C17F28
	314 Call 0x1C17F20
	315 Call 0x1C17F28
	316 Call 0x1C17F30
	317 Move X1, X23
	318 Call 0x1C17DEC
	319 Call 0x1C17F20
	320 Call 0x1C17F28
	321 Call 0x1C17F20
	322 Call 0x1C17F28
	323 NotImplemented "Instruction CMP not yet implemented."
	324 Call 0x3EB2AD0
	325 Move X29, [X0]
	326 Call 0x3EB2AE0
	327 Move W20, W31
	328 Move W19, W31
	329 NotImplemented "Instruction CMP not yet implemented."
	330 Compare W20, 0
	331 JumpIfNotEqual {346}
	332 Move TEMP, X19
	333 And TEMP, TEMP, 1
	334 Compare TEMP, 1
	335 JumpIfNotEqual {342}
	336 Move X8, [X23+32]
	337 Move X0, X22
	338 Move X1, X21
	339 Move X8, [X8+192]
	340 Move X2, [X8+424]
	341 Call 0x2964BE0, X0, X1
	342 Move X8, [X31+24]
	343 Move X9, [X31+32]
	344 Move W0, 1
	345 Move [X8], X9
	346 Move W0, W31
	347 Move X20, [X31+160]
	348 Move X19, [X31+168]
	349 Move X22, [X31+144]
	350 Move X21, [X31+152]
	351 Move X24, [X31+128]
	352 Move X23, [X31+136]
	353 Move X26, [X31+112]
	354 Move X25, [X31+120]
	355 Move X28, [X31+96]
	356 Move X27, [X31+104]
	357 Move X29, [X31+80]
	358 Move X30, [X31+88]
	359 Add X31, X31, 176
	360 Return X0
	361 Call 0x1C17F20
	362 Move X0, X29
	363 Call 0x1C17F18
	364 Call 0x1C17F28
	365 Move X19, X0
	366 Move X29, X31
	367 Move X19, X0
	368 Move W8, [X31+76]
	369 Compare W8, 0
	370 JumpIfNotEqual {375}
	371 Compare X29, 0
	372 JumpIfNotEqual {379}
	373 Move X0, X19
	374 Call 0x1D2D690
	375 Move X8, [X21+24]
	376 Compare X8, 0
	377 JumpIfNotEqual {381}
	378 Call 0x1C17F20
	379 Move X0, X29
	380 Call 0x1C17F18
	381 Move W9, [X8+24]
	382 Move W10, [X31+60]
	383 NotImplemented "Instruction CMP not yet implemented."
	384 Move W9, [X31+60]
	385 Add X8, X8, W9
	386 Move X0, [X8+32]
	387 Move X1, X31
	388 Call Monitor.Exit, X0
	389 Call 0x1C17F28
	390 Call 0x1991590

Method: TValue get_Item(TKey key)

Disassembly:
	0x02963810 ADRP X23, 0x1A77000
	0x02963814 LDRB W8, [X23 + 0xE55]
	0x02963818 MOV X20, X3
	0x0296381C MOV W21, W2
	0x02963820 MOV X22, X1
	0x02963824 MOV X19, X0
	0x02963828 TBNZ X8, 0x0, 0x296384C
	0x0296382C ADRP X0, 0x17BA000
	0x02963830 LDR X0, [X0 + 0x78]
	0x02963834 BL 0x1C16CF4
	0x02963838 ADRP X0, 0x1790000
	0x0296383C LDR X0, [X0 + 0x9D0]
	0x02963840 BL 0x1C16CF4
	0x02963844 MOVZ W8, 0x1
	0x02963848 STRB W8, [X23 + 0xE55]
	0x0296384C CBZ X22, 0x29639D4
	0x02963850 TBNZ X21, 0x1F, 0x2963A08
	0x02963854 STR W31, [X31 + 0xC]
	0x02963858 LDR X8, [X20 + 0x20]
	0x0296385C LDR X8, [X8 + 0xC0]
	0x02963860 LDR X2, [X8 + 0x158]
	0x02963864 ADD X1, X31, 0xC
	0x02963868 MOV X0, X19
	0x0296386C BL 0x2964398
	0x02963870 LDR X23, [X19 + 0x10]
	0x02963874 BL 0x1C16D44
	0x02963878 CBZ X23, 0x2963A58
	0x0296387C LDR X8, [X23 + 0x18]
	0x02963880 CBZ X8, 0x29638CC
	0x02963884 MOV W24, W31
	0x02963888 MOV X25, X31
	0x0296388C TBNZ X24, 0x1F, 0x29638D0
	0x02963890 LDRSW X8, [X8 + 0x18]
	0x02963894 CMP X25, X8
	0x02963898 B.GE 0x29638D0
	0x0296389C LDR X26, [X23 + 0x20]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move [X31+24], X31
	007 Move X8, [X3+32]
	008 Move X19, X3
	009 Add X3, X31, 24
	010 Move X20, X2
	011 Move X8, [X8+192]
	012 Move X21, X1
	013 Move X4, [X8+224]
	014 Call 0x296259C, X0, X1, X2
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {26}
	019 Move X0, [X31+24]
	020 Move X20, [X31+48]
	021 Move X19, [X31+56]
	022 Move X30, [X31+32]
	023 Move X21, [X31+40]
	024 Add X31, X31, 64
	025 Return X0
	026 Move [X31+8], X21
	027 Move [X31+16], X20
	028 Move X8, [X19+32]
	029 Add X1, X31, 8
	030 Move X8, [X8+192]
	031 Move X0, [X8+96]
	032 Call 0x1C17E04
	033 Move X8, [X19+32]
	034 Move X20, X0
	035 Move W1, 2
	036 Move X8, [X8+192]
	037 Move X0, X8
	038 Call 0x199C988
	039 Call 0x19913D0
	040 Move X8, [X19+32]
	041 Move X0, X20
	042 Move X8, [X8+192]
	043 Move X1, [X8+432]
	044 Call 0x29639A0, X0

Method: System.Void set_Item(TKey key, TValue value)

Disassembly:
	0x029638A0 BL 0x1C16D44
	0x029638A4 CBZ X26, 0x29639D0
	0x029638A8 LDR W8, [X26 + 0x18]
	0x029638AC CMP X25, X8
	0x029638B0 B.CS 0x29639CC
	0x029638B4 ADD X8, X26, X25, 0x2, LSL
	0x029638B8 LDR W9, [X8 + 0x20]
	0x029638BC LDR X8, [X23 + 0x18]
	0x029638C0 ADD X25, X25, 0x1
	0x029638C4 ADD W24, W9, W24
	0x029638C8 CBNZ X8, 0x296388C
	0x029638CC BL 0x1C16F20
	0x029638D0 MOV X0, X22
	0x029638D4 MOV X1, X31
	0x029638D8 BL 0x3395B7C
	0x029638DC TBNZ X24, 0x1F, 0x2963A5C
	0x029638E0 SUB W8, W0, W24
	0x029638E4 CMP W8, W21
	0x029638E8 B.LT 0x2963A5C
	0x029638EC LDR X8, [X20 + 0x20]
	0x029638F0 LDR X8, [X8 + 0xC0]
	0x029638F4 LDR X1, [X8 + 0x168]
	0x029638F8 LDRB W8, [X1 + 0x135]
	0x029638FC TBNZ X8, 0x0, 0x296390C
	0x02963900 MOV X0, X1
	0x02963904 BL 0x1C5C684
	0x02963908 MOV X1, X0
	0x0296390C MOV X0, X22
	0x02963910 BL 0x1C16E00
	0x02963914 MOV X1, X0
	0x02963918 CBZ X1, 0x2963938
	0x0296391C LDR X8, [X20 + 0x20]
	0x02963920 LDR X8, [X8 + 0xC0]
	0x02963924 LDR X3, [X8 + 0x170]
	0x02963928 MOV X0, X19
	0x0296392C MOV W2, W21
	0x02963930 BL 0x2961E9C
	0x02963934 B 0x29639A4
	0x02963938 ADRP X8, 0x17BA000
	0x0296393C LDR X8, [X8 + 0x78]
	0x02963940 LDR X1, [X8]
	0x02963944 MOV X0, X22
	0x02963948 BL 0x1C16E00
	0x0296394C MOV X1, X0
	0x02963950 CBZ X1, 0x2963970
	0x02963954 LDR X8, [X20 + 0x20]
	0x02963958 LDR X8, [X8 + 0xC0]
	0x0296395C LDR X3, [X8 + 0x248]
	0x02963960 MOV X0, X19
	0x02963964 MOV W2, W21
	0x02963968 BL 0x2961F98
	0x0296396C B 0x29639A4
	0x02963970 ADRP X8, 0x1790000
	0x02963974 LDR X8, [X8 + 0x9D0]
	0x02963978 LDR X1, [X8]
	0x0296397C MOV X0, X22
	0x02963980 BL 0x1C16E00
	0x02963984 MOV X1, X0
	0x02963988 CBZ X1, 0x2963A98
	0x0296398C LDR X8, [X20 + 0x20]
	0x02963990 LDR X8, [X8 + 0xC0]
	0x02963994 LDR X3, [X8 + 0x250]
	0x02963998 MOV X0, X19
	0x0296399C MOV W2, W21

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X31
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X24, [X0+24]
	011 Compare X24, 0
	012 JumpIfEqual {74}
	013 Move X8, [X4+32]
	014 Move X22, X1
	015 Move X23, X4
	016 Move X19, X3
	017 Move X8, [X8+192]
	018 Move X20, X2
	019 Move X21, X0
	020 Move X1, [X8+32]
	021 Move W8, [X1+309]
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {29}
	026 Move X0, X1
	027 Call 0x1C5D684
	028 Move X1, X0
	029 Move X8, [X24]
	030 NotImplemented "Instruction LDRH not yet implemented."
	031 Compare X9, 0
	032 JumpIfEqual {39}
	033 Move X10, [X8+176]
	034 Add X10, X10, 8
	035 NotImplemented "Instruction LDUR not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Subtract X9, X9, 1
	038 Add X10, X10, 16
	039 Move W2, 1
	040 Move X0, X24
	041 Call 0x1C5D788
	042 Move W9, [X10]
	043 Add W9, W9, 1
	044 Add X8, X8, W9
	045 Add X0, X8, 312
	046 Move X8, [X0]
	047 Move X3, [X0+8]
	048 Move X0, X24
	049 Move X1, X22
	050 Move X2, X20
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move X8, [X23+32]
	053 Move W3, W0
	054 Add X7, X31, 24
	055 Move W5, 1
	056 Move X8, [X8+192]
	057 Move W6, 1
	058 Move X0, X21
	059 Move X1, X22
	060 Move X8, [X8+144]
	061 Move X2, X20
	062 Move X4, X19
	063 Move [X31], X8
	064 Call 0x2963214, X0, X1, X2, X3, X4, X5, X6
	065 Move X20, [X31+64]
	066 Move X19, [X31+72]
	067 Move X22, [X31+48]
	068 Move X21, [X31+56]
	069 Move X24, [X31+32]
	070 Move X23, [X31+40]
	071 Move X30, [X31+16]
	072 Add X31, X31, 80
	073 Return 
	074 Call 0x1C17F20

Method: System.Void ThrowKeyNotFoundException(System.Object key)

Disassembly:
	0x029639A0 BL 0x2962084
	0x029639A4 LDR W2, [X31 + 0xC]
	0x029639A8 MOV X0, X19
	0x029639AC MOV W1, W31
	0x029639B0 BL 0x29645AC
	0x029639B4 LDP X20, X19, [X31 + 0x40]
	0x029639B8 LDP X22, X21, [X31 + 0x30]
	0x029639BC LDP X24, X23, [X31 + 0x20]
	0x029639C0 LDP X26, X25, [X31 + 0x10]
	0x029639C4 LDR X30, [X31], #0x50
	0x029639C8 RET
	0x029639CC BL 0x1C16F28
	0x029639D0 BL 0x1C16F20
	0x029639D4 ADRP X0, 0x1795000
	0x029639D8 LDR X0, [X0 + 0x528]
	0x029639DC BL 0x1C16D08
	0x029639E0 BL 0x1C16F10
	0x029639E4 MOV X19, X0
	0x029639E8 ADRP X0, 0x17B8000
	0x029639EC LDR X0, [X0 + 0x640]
	0x029639F0 BL 0x1C16D08
	0x029639F4 MOV X1, X0
	0x029639F8 MOV X0, X19
	0x029639FC MOV X2, X31
	0x02963A00 BL 0x330E100
	0x02963A04 B 0x2963A4C
	0x02963A08 ADRP X0, 0x1798000
	0x02963A0C LDR X0, [X0 + 0x760]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X1
	006 Move X20, X0
	007 Call 0x19913C0
	008 Move X8, [X20]
	009 Move X0, X20
	010 Move X9, [X8+360]
	011 Move X1, [X8+368]
	012 NotImplemented "Instruction BLR not yet implemented."
	013 Move X20, X0
	014 Move X0, 0x17BB000
	015 Move X0, [X0+696]
	016 Call 0x1C17D08
	017 Move X1, X20
	018 Move X2, X31
	019 Call SR.Format, X0, X1
	020 Move X20, X0
	021 Move X0, 0x1794000
	022 Move X0, [X0+120]
	023 Call 0x1C17D08
	024 Call 0x1C17F10
	025 Move X1, X20
	026 Move X2, X31
	027 Move X21, X0
	028 Call KeyNotFoundException..ctor, X0, X1
	029 Move X0, X21
	030 Move X1, X19
	031 Call 0x1C17DEC

Method: System.Void ThrowKeyNullException()

Disassembly:
	0x02963A10 BL 0x1C16D08
	0x02963A14 BL 0x1C16F10
	0x02963A18 MOV X19, X0
	0x02963A1C ADRP X0, 0x179B000
	0x02963A20 LDR X0, [X0 + 0x130]
	0x02963A24 BL 0x1C16D08
	0x02963A28 MOV X21, X0
	0x02963A2C ADRP X0, 0x17BB000
	0x02963A30 LDR X0, [X0 + 0x268]
	0x02963A34 BL 0x1C16D08
	0x02963A38 MOV X2, X0
	0x02963A3C MOV X0, X19
	0x02963A40 MOV X1, X21
	0x02963A44 MOV X3, X31
	0x02963A48 BL 0x3311888
	0x02963A4C MOV X0, X19
	0x02963A50 MOV X1, X20
	0x02963A54 BL 0x1C16DEC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, 0x1796000
	006 Move X0, [X0+1320]
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X20, X0
	010 Move X0, 0x17BB000
	011 Move X0, [X0+112]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X20
	015 Move X2, X31
	016 Call ArgumentNullException..ctor, X0, X1
	017 Move X0, X20
	018 Move X1, X19
	019 Call 0x1C17DEC

Method: System.Int32 get_Count()

Disassembly:
	0x02963A58 BL 0x1C16F20
	0x02963A5C ADRP X0, 0x1798000
	0x02963A60 LDR X0, [X0 + 0x578]
	0x02963A64 BL 0x1C16D08
	0x02963A68 BL 0x1C16F10
	0x02963A6C MOV X21, X0
	0x02963A70 ADRP X0, 0x17BB000
	0x02963A74 LDR X0, [X0 + 0x270]
	0x02963A78 BL 0x1C16D08
	0x02963A7C MOV X1, X0
	0x02963A80 MOV X0, X21
	0x02963A84 MOV X2, X31
	0x02963A88 BL 0x3314A68
	0x02963A8C MOV X0, X21
	0x02963A90 MOV X1, X20
	0x02963A94 BL 0x1C16DEC
	0x02963A98 ADRP X0, 0x1798000
	0x02963A9C LDR X0, [X0 + 0x578]
	0x02963AA0 BL 0x1C16D08
	0x02963AA4 BL 0x1C16F10
	0x02963AA8 MOV X21, X0
	0x02963AAC ADRP X0, 0x17BB000
	0x02963AB0 LDR X0, [X0 + 0x298]
	0x02963AB4 BL 0x1C16D08
	0x02963AB8 MOV X22, X0
	0x02963ABC ADRP X0, 0x17B8000
	0x02963AC0 LDR X0, [X0 + 0x640]
	0x02963AC4 BL 0x1C16D08
	0x02963AC8 MOV X2, X0
	0x02963ACC MOV X0, X21
	0x02963AD0 MOV X1, X22
	0x02963AD4 MOV X3, X31
	0x02963AD8 BL 0x330E16C
	0x02963ADC MOV X0, X21
	0x02963AE0 MOV X1, X20
	0x02963AE4 BL 0x1C16DEC
	0x02963AE8 B 0x2963B24
	0x02963AEC B 0x2963B24
	0x02963AF0 B 0x2963B24
	0x02963AF4 B 0x2963B24
	0x02963AF8 B 0x2963B24
	0x02963AFC B 0x2963B24
	0x02963B00 B 0x2963B24
	0x02963B04 B 0x2963B24
	0x02963B08 B 0x2963B24
	0x02963B0C B 0x2963B24
	0x02963B10 B 0x2963B24
	0x02963B14 B 0x2963B24
	0x02963B18 B 0x2963B24
	0x02963B1C B 0x2963B24
	0x02963B20 B 0x2963B24

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move [X31+12], W31
	007 Move X8, [X1+32]
	008 Move X19, X0
	009 Move X8, [X8+192]
	010 Move X2, [X8+344]
	011 Add X1, X31, 12
	012 Call 0x2965398, X0, X1
	013 Move X0, X19
	014 Call 0x2963B24, X0
	015 Move W2, [X31+12]
	016 Move W21, W0
	017 Move X0, X19
	018 Move W1, W31
	019 Call 0x29655AC, X0, X1, X2
	020 Move W0, W21
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X30, [X31+16]
	024 Move X21, [X31+24]
	025 Add X31, X31, 48
	026 Return X0
	027 Move X21, X0
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X0, X21
	030 Call 0x3EB2AD0
	031 Move X20, [X0]
	032 Call 0x3EB2AE0
	033 Move W2, [X31+12]
	034 Move X0, X19
	035 Move W1, W31
	036 Call 0x29655AC, X0, X1, X2
	037 Move W21, W31
	038 Compare X20, 0
	039 JumpIfEqual {20}
	040 Move X0, X20
	041 Call 0x1C17F18
	042 Move X20, X31
	043 Move X21, X0
	044 Move W2, [X31+12]
	045 Move X0, X19
	046 Move W1, W31
	047 Call 0x29655AC, X0, X1, X2
	048 Compare X20, 0
	049 JumpIfNotEqual {52}
	050 Move X0, X21
	051 Call 0x1D2D690
	052 Move X0, X20
	053 Call 0x1C17F18
	054 Call 0x1991590

Method: System.Int32 GetCountInternal()

Disassembly:
	0x02963B24 MOV X20, X0
	0x02963B28 CMP W1, 0x1
	0x02963B2C B.NE 0x2963B5C
	0x02963B30 MOV X0, X20
	0x02963B34 BL 0x3EB1AD0
	0x02963B38 LDR X21, [X0]
	0x02963B3C BL 0x3EB1AE0
	0x02963B40 LDR W2, [X31 + 0xC]
	0x02963B44 MOV X0, X19
	0x02963B48 MOV W1, W31
	0x02963B4C BL 0x29645AC
	0x02963B50 CBZ X21, 0x29639B4
	0x02963B54 MOV X0, X21
	0x02963B58 BL 0x1C16F18
	0x02963B5C MOV X21, X31
	0x02963B60 B 0x2963B68
	0x02963B64 MOV X20, X0
	0x02963B68 LDR W2, [X31 + 0xC]
	0x02963B6C MOV X0, X19
	0x02963B70 MOV W1, W31
	0x02963B74 BL 0x29645AC
	0x02963B78 CBNZ X21, 0x2963B84
	0x02963B7C MOV X0, X20
	0x02963B80 BL 0x1D2C690
	0x02963B84 MOV X0, X21
	0x02963B88 BL 0x1C16F18
	0x02963B8C BL 0x1990590
	0x02963B90 MOV W0, W31
	0x02963B94 RET
	0x02963B98 STR X30, [X31 - 0x20]!
	0x02963B9C STP X20, X19, [X31 + 0x10]
	0x02963BA0 ADRP X0, 0x1790000
	0x02963BA4 LDR X0, [X0 + 0xB40]
	0x02963BA8 MOV X19, X1
	0x02963BAC BL 0x1C16D08
	0x02963BB0 BL 0x1C16F10
	0x02963BB4 MOV X20, X0
	0x02963BB8 ADRP X0, 0x17BB000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, [X0+16]
	007 Move X19, X0
	008 Call 0x1C17D44
	009 Compare X22, 0
	010 JumpIfEqual {37}
	011 Move X21, X31
	012 Move W20, W31
	013 Move X22, [X22+32]
	014 Call 0x1C17D44
	015 Compare X22, 0
	016 JumpIfEqual {37}
	017 NotImplemented "Instruction LDRSW not yet implemented."
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move X22, [X19+16]
	020 Call 0x1C17D44
	021 Compare X22, 0
	022 JumpIfEqual {37}
	023 Move X22, [X22+32]
	024 Call 0x1C17D44
	025 Compare X22, 0
	026 JumpIfEqual {37}
	027 Move W8, [X22+24]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Add X8, X22, X21
	030 Move W8, [X8+32]
	031 Move X22, [X19+16]
	032 Add X21, X21, 1
	033 Add W20, W8, W20
	034 Call 0x1C17D44
	035 Compare X22, 0
	036 JumpIfNotEqual {13}
	037 Call 0x1C17F20
	038 Move W0, W20
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return X0
	045 Call 0x1C17F28

Method: TValue GetOrAdd(TKey key, System.Func`2<TKey, TValue> valueFactory)

Disassembly:
	0x02963BBC LDR X0, [X0 + 0x2A0]
	0x02963BC0 BL 0x1C16D08
	0x02963BC4 MOV X1, X0
	0x02963BC8 MOV X0, X20
	0x02963BCC MOV X2, X31
	0x02963BD0 BL 0x3379A44
	0x02963BD4 MOV X0, X20
	0x02963BD8 MOV X1, X19
	0x02963BDC BL 0x1C16DEC
	0x02963BE0 SUB X31, X31, 0xA0
	0x02963BE4 STP X29, X30, [X31 + 0x40]
	0x02963BE8 STP X28, X27, [X31 + 0x50]
	0x02963BEC STP X26, X25, [X31 + 0x60]
	0x02963BF0 STP X24, X23, [X31 + 0x70]
	0x02963BF4 STP X22, X21, [X31 + 0x80]
	0x02963BF8 STP X20, X19, [X31 + 0x90]
	0x02963BFC ADRP X19, 0x1A77000
	0x02963C00 LDRB W8, [X19 + 0xE56]
	0x02963C04 MOV X22, X1
	0x02963C08 STR X2, [X31 + 0x30]
	0x02963C0C STR X0, [X31 + 0x8]
	0x02963C10 TBNZ X8, 0x0, 0x2963C4C
	0x02963C14 ADRP X0, 0x1791000
	0x02963C18 LDR X0, [X0 + 0xE58]
	0x02963C1C BL 0x1C16CF4
	0x02963C20 ADRP X0, 0x1790000
	0x02963C24 LDR X0, [X0 + 0x5A8]
	0x02963C28 BL 0x1C16CF4
	0x02963C2C ADRP X0, 0x1790000
	0x02963C30 LDR X0, [X0 + 0x9D0]
	0x02963C34 BL 0x1C16CF4
	0x02963C38 ADRP X0, 0x1796000
	0x02963C3C LDR X0, [X0 + 0xCC0]
	0x02963C40 BL 0x1C16CF4
	0x02963C44 MOVZ W8, 0x1
	0x02963C48 STRB W8, [X19 + 0xE56]
	0x02963C4C STR W31, [X31 + 0x3C]
	0x02963C50 LDR X19, [X31 + 0x8]
	0x02963C54 ADD X3, X31, 0x3C
	0x02963C58 MOVZ W2, 0x1
	0x02963C5C MOV W1, W31
	0x02963C60 MOV X0, X19
	0x02963C64 BL 0x2964490
	0x02963C68 LDR X19, [X19 + 0x10]
	0x02963C6C BL 0x1C16D44
	0x02963C70 CMP X22, X19
	0x02963C74 B.NE 0x29640FC
	0x02963C78 CBZ X22, 0x2964178
	0x02963C7C MOV X20, X31
	0x02963C80 MOV X19, X31
	0x02963C84 LDR X21, [X22 + 0x20]
	0x02963C88 BL 0x1C16D44
	0x02963C8C CBZ X21, 0x296414C
	0x02963C90 LDRSW X8, [X21 + 0x18]
	0x02963C94 CMP X20, X8
	0x02963C98 B.GE 0x2963CC8
	0x02963C9C LDR X21, [X22 + 0x20]
	0x02963CA0 BL 0x1C16D44
	0x02963CA4 CBZ X21, 0x2964150
	0x02963CA8 LDR W8, [X21 + 0x18]
	0x02963CAC CMP X20, X8
	0x02963CB0 B.CS 0x2964154
	0x02963CB4 ADD X8, X21, X20, 0x2, LSL
	0x02963CB8 LDRSW X8, [X8 + 0x20]
	0x02963CBC ADD X20, X20, 0x1
	0x02963CC0 ADD X19, X19, X8
	0x02963CC4 B 0x2963C84
	0x02963CC8 LDR X8, [X22 + 0x10]
	0x02963CCC CBZ X8, 0x296417C
	0x02963CD0 LDR X14, [X8 + 0x18]
	0x02963CD4 ADD W8, W14, 0x3
	0x02963CD8 CMP W14, 0x0
	0x02963CDC CSEL W8, W8, W14, LT
	0x02963CE0 SBFM W8, W8, 0x2, 0x1F
	0x02963CE4 CMP X19, W8, SXTW
	0x02963CE8 B.GE 0x2963D0C
	0x02963CEC LDR X10, [X31 + 0x8]
	0x02963CF0 MOVN W9, 0x80000000
	0x02963CF4 LDR W8, [X10 + 0x24]
	0x02963CF8 UBFM W8, W8, 0x1F, 0x1E
	0x02963CFC CMP W8, 0x0
	0x02963D00 CSEL W8, W8, W9, GE
	0x02963D04 STR W8, [X10 + 0x24]
	0x02963D08 B 0x29640FC
	0x02963D0C MOVZ X8, 0x40000000
	0x02963D10 MOV X9, INVALID
	0x02963D14 ADD X8, X8, X14, 0x20, LSL
	0x02963D18 MOVK X9, 0x1
	0x02963D1C CMP X8, X9
	0x02963D20 MOVN W8, 0x80100000
	0x02963D24 STR X22, [X31 + 0x10]
	0x02963D28 B.CS 0x2964180
	0x02963D2C MOVZ W23, 0x1
	0x02963D30 MOVZ W9, 0x5556
	0x02963D34 MOVZ W10, 0x6667
	0x02963D38 MOVZ W11, 0x6DB7
	0x02963D3C MOVZ W12, 0x2492

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X31
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X19, X4
	011 Compare X3, 0
	012 JumpIfEqual {97}
	013 Move X24, [X0+24]
	014 Move X22, X0
	015 Compare X24, 0
	016 JumpIfEqual {112}
	017 Move X8, [X19+32]
	018 Move X21, X1
	019 Move X23, X3
	020 Move X20, X2
	021 Move X8, [X8+192]
	022 Move X1, [X8+32]
	023 Move W8, [X1+309]
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {31}
	028 Move X0, X1
	029 Call 0x1C5D684
	030 Move X1, X0
	031 Move X8, [X24]
	032 NotImplemented "Instruction LDRH not yet implemented."
	033 Compare X9, 0
	034 JumpIfEqual {41}
	035 Move X10, [X8+176]
	036 Add X10, X10, 8
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Subtract X9, X9, 1
	040 Add X10, X10, 16
	041 Move W2, 1
	042 Move X0, X24
	043 Call 0x1C5D788
	044 Move W9, [X10]
	045 Add W9, W9, 1
	046 Add X8, X8, W9
	047 Add X0, X8, 312
	048 Move X8, [X0]
	049 Move X3, [X0+8]
	050 Move X0, X24
	051 Move X1, X21
	052 Move X2, X20
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move X8, [X19+32]
	055 Move W24, W0
	056 Add X4, X31, 24
	057 Move X0, X22
	058 Move X8, [X8+192]
	059 Move X1, X21
	060 Move X2, X20
	061 Move W3, W24
	062 Move X5, [X8+320]
	063 Call 0x2962680, X0, X1, X2, X3
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {87}
	068 Move X8, [X23+24]
	069 Move X0, [X23+64]
	070 Move X3, [X23+40]
	071 Move X1, X21
	072 Move X2, X20
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Move X8, [X19+32]
	075 Move X4, X0
	076 Add X7, X31, 24
	077 Move W6, 1
	078 Move X8, [X8+192]
	079 Move X0, X22
	080 Move X1, X21
	081 Move X2, X20
	082 Move X8, [X8+144]
	083 Move W3, W24
	084 Move W5, W31
	085 Move [X31], X8
	086 Call 0x2963214, X0, X1, X2, X3, X4, X5, X6
	087 Move X30, [X31+16]
	088 Move X0, [X31+24]
	089 Move X20, [X31+64]
	090 Move X19, [X31+72]
	091 Move X22, [X31+48]
	092 Move X21, [X31+56]
	093 Move X24, [X31+32]
	094 Move X23, [X31+40]
	095 Add X31, X31, 80
	096 Return X0
	097 Move X0, 0x1796000
	098 Move X0, [X0+1320]
	099 Call 0x1C17D08
	100 Call 0x1C17F10
	101 Move X20, X0
	102 Move X0, 0x17BC000
	103 Move X0, [X0+632]
	104 Call 0x1C17D08
	105 Move X1, X0
	106 Move X0, X20
	107 Move X2, X31
	108 Call ArgumentNullException..ctor, X0, X1
	109 Move X0, X20
	110 Move X1, X19
	111 Call 0x1C17DEC
	112 Call 0x1C17F20

Method: TValue GetOrAdd(TKey key, TValue value)

Disassembly:
	0x02963D40 MOVZ W13, 0x4925
	0x02963D44 MOVK W9, 0x55550000
	0x02963D48 MOVK W10, 0x66660000
	0x02963D4C MOVK W11, 0xB6DB0000
	0x02963D50 MOVK W12, 0x12490000
	0x02963D54 MOVK W13, 0x24920000
	0x02963D58 BFM W23, W14, 0x1F, 0x1E
	0x02963D5C ORR W14, W31, 0x7FFFFFFE
	0x02963D60 MADD W15, W23, W11, W12
	0x02963D64 CMP W15, W13
	0x02963D68 B.CC 0x2963DA4
	0x02963D6C SMADDL X15, X23, X9, X31
	0x02963D70 UBFM X16, X15, 0x3F, 0x3F
	0x02963D74 UBFM X15, X15, 0x20, 0x3F
	0x02963D78 ADD W15, W15, W16
	0x02963D7C ADD W15, W15, W15, 0x1, LSL
	0x02963D80 SUB W15, W23, W15
	0x02963D84 CBZ W15, 0x2963DA4
	0x02963D88 SMADDL X15, X23, X10, X31
	0x02963D8C UBFM X16, X15, 0x3F, 0x3F
	0x02963D90 SBFM X15, X15, 0x21, 0x3F
	0x02963D94 ADD W15, W15, W16
	0x02963D98 ADD W15, W15, W15, 0x2, LSL
	0x02963D9C SUB W15, W23, W15
	0x02963DA0 CBNZ W15, 0x2963DB4
	0x02963DA4 CMP W23, W14
	0x02963DA8 B.GE 0x2964158
	0x02963DAC ADD W23, W23, 0x2
	0x02963DB0 B 0x2963D60
	0x02963DB4 CMP W23, W8
	0x02963DB8 B.LE 0x2963DCC
	0x02963DBC LDR X9, [X31 + 0x8]
	0x02963DC0 MOVN W8, 0x80000000
	0x02963DC4 MOVN W23, 0x80100000
	0x02963DC8 STR W8, [X9 + 0x24]
	0x02963DCC LDR X8, [X31 + 0x10]
	0x02963DD0 LDR X8, [X8 + 0x18]
	0x02963DD4 CBZ X8, 0x296418C
	0x02963DD8 LDR W2, [X8 + 0x18]
	0x02963DDC LDR X19, [X31 + 0x8]
	0x02963DE0 ADD X3, X31, 0x3C
	0x02963DE4 MOVZ W1, 0x1
	0x02963DE8 MOV X0, X19
	0x02963DEC BL 0x2964490
	0x02963DF0 LDR X9, [X31 + 0x10]
	0x02963DF4 LDRB W8, [X19 + 0x20]
	0x02963DF8 LDR X9, [X9 + 0x18]
	0x02963DFC STR X9, [X31 + 0x28]
	0x02963E00 CBZ W8, 0x2963ED4
	0x02963E04 CBZ X9, 0x2964198
	0x02963E08 LDR W8, [X9 + 0x18]
	0x02963E0C CMP W8, 0x3FF
	0x02963E10 B.GT 0x2963ED4
	0x02963E14 ADRP X9, 0x1790000
	0x02963E18 LDR X9, [X9 + 0x9D0]
	0x02963E1C UBFM W1, W8, 0x1F, 0x1E
	0x02963E20 LDR X0, [X9]
	0x02963E24 BL 0x1C16D6C
	0x02963E28 STR X0, [X31 + 0x28]
	0x02963E2C LDR X8, [X31 + 0x10]
	0x02963E30 LDR X0, [X8 + 0x18]
	0x02963E34 CBZ X0, 0x296419C
	0x02963E38 LDR W4, [X0 + 0x18]
	0x02963E3C LDR X2, [X31 + 0x28]
	0x02963E40 MOV W1, W31
	0x02963E44 MOV W3, W31
	0x02963E48 MOV X5, X31
	0x02963E4C BL 0x339FCE8
	0x02963E50 LDR X8, [X31 + 0x10]
	0x02963E54 LDR X8, [X8 + 0x18]
	0x02963E58 CBZ X8, 0x29641A0
	0x02963E5C LDR X9, [X31 + 0x28]
	0x02963E60 CBZ X9, 0x29641A4
	0x02963E64 LDRSW X19, [X8 + 0x18]
	0x02963E68 LDRSW X8, [X9 + 0x18]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X31
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X24, [X0+24]
	011 Compare X24, 0
	012 JumpIfEqual {89}
	013 Move X8, [X4+32]
	014 Move X22, X1
	015 Move X23, X4
	016 Move X19, X3
	017 Move X8, [X8+192]
	018 Move X20, X2
	019 Move X21, X0
	020 Move X1, [X8+32]
	021 Move W8, [X1+309]
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {29}
	026 Move X0, X1
	027 Call 0x1C5D684
	028 Move X1, X0
	029 Move X8, [X24]
	030 NotImplemented "Instruction LDRH not yet implemented."
	031 Compare X9, 0
	032 JumpIfEqual {39}
	033 Move X10, [X8+176]
	034 Add X10, X10, 8
	035 NotImplemented "Instruction LDUR not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Subtract X9, X9, 1
	038 Add X10, X10, 16
	039 Move W2, 1
	040 Move X0, X24
	041 Call 0x1C5D788
	042 Move W9, [X10]
	043 Add W9, W9, 1
	044 Add X8, X8, W9
	045 Add X0, X8, 312
	046 Move X8, [X0]
	047 Move X3, [X0+8]
	048 Move X0, X24
	049 Move X1, X22
	050 Move X2, X20
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move X8, [X23+32]
	053 Move W24, W0
	054 Add X4, X31, 24
	055 Move X0, X21
	056 Move X8, [X8+192]
	057 Move X1, X22
	058 Move X2, X20
	059 Move W3, W24
	060 Move X5, [X8+320]
	061 Call 0x2962680, X0, X1, X2, X3
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {79}
	066 Move X8, [X23+32]
	067 Add X7, X31, 24
	068 Move W6, 1
	069 Move X0, X21
	070 Move X8, [X8+192]
	071 Move X1, X22
	072 Move X2, X20
	073 Move W3, W24
	074 Move X8, [X8+144]
	075 Move X4, X19
	076 Move W5, W31
	077 Move [X31], X8
	078 Call 0x2963214, X0, X1, X2, X3, X4, X5, X6
	079 Move X30, [X31+16]
	080 Move X0, [X31+24]
	081 Move X20, [X31+64]
	082 Move X19, [X31+72]
	083 Move X22, [X31+48]
	084 Move X21, [X31+56]
	085 Move X24, [X31+32]
	086 Move X23, [X31+40]
	087 Add X31, X31, 80
	088 Return X0
	089 Call 0x1C17F20

Method: System.Void System.Collections.Generic.IDictionary<TKey,TValue>.Add(TKey key, TValue value)

Disassembly:
	0x02963E6C CMP X19, X8
	0x02963E70 B.GE 0x2963ED4
	0x02963E74 LDR X8, [X31 + 0x28]
	0x02963E78 ADRP X21, 0x1796000
	0x02963E7C LDR X21, [X21 + 0xCC0]
	0x02963E80 ADD X20, X8, 0x20
	0x02963E84 LDR X0, [X21]
	0x02963E88 BL 0x1C16F10
	0x02963E8C MOV X24, X0
	0x02963E90 MOV X1, X31
	0x02963E94 BL 0x33BDD8C
	0x02963E98 CBZ X24, 0x2963EB4
	0x02963E9C LDR X8, [X31 + 0x28]
	0x02963EA0 LDR X8, [X8]
	0x02963EA4 LDR X1, [X8 + 0x40]
	0x02963EA8 MOV X0, X24
	0x02963EAC BL 0x1C16E00
	0x02963EB0 CBZ X0, 0x296416C
	0x02963EB4 LDR X8, [X31 + 0x28]
	0x02963EB8 LDR X8, [X8 + 0x18]
	0x02963EBC CMP W19, W8
	0x02963EC0 B.CS 0x2964168
	0x02963EC4 STR X24, [X20, X19, LSL #3]
	0x02963EC8 ADD X19, X19, 0x1
	0x02963ECC CMP X19, W8, SXTW
	0x02963ED0 B.LT 0x2963E84

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X4+32]
	005 Move X19, X4
	006 Move X8, [X8+192]
	007 Move X4, [X8+464]
	008 Call 0x2961FC8, X0, X1, X2
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {17}
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move X30, [X31+32]
	016 Return 
	017 Move X0, 0x1799000
	018 Move X0, [X0+1400]
	019 Call 0x1C17D08
	020 Call 0x1C17F10
	021 Move X20, X0
	022 Move X0, 0x17BC000
	023 Move X0, [X0+640]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X20
	027 Move X2, X31
	028 Call ArgumentException..ctor, X0, X1
	029 Move X0, X20
	030 Move X1, X19
	031 Call 0x1C17DEC

Method: System.Collections.Generic.ICollection`1<TKey> get_Keys()

Disassembly:
	0x02963ED4 LDR X8, [X31 + 0x30]
	0x02963ED8 LDR X8, [X8 + 0x20]
	0x02963EDC LDR X8, [X8 + 0xC0]
	0x02963EE0 LDR X0, [X8 + 0xB8]

ISIL:
	001 Move X8, [X1+32]
	002 Move X8, [X8+192]
	003 Move X1, [X8+472]
	004 Call 0x2965620, X0
	005 Return X0

Method: System.Collections.Generic.ICollection`1<TValue> get_Values()

Disassembly:
	0x02963EE4 LDRB W8, [X0 + 0x135]
	0x02963EE8 TBNZ X8, 0x0, 0x2963EF0
	0x02963EEC BL 0x1C5C684
	0x02963EF0 MOV W1, W23

ISIL:
	001 Move X8, [X1+32]
	002 Move X8, [X8+192]
	003 Move X1, [X8+496]
	004 Call 0x29658A4, X0
	005 Return X0

Method: System.Void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(System.Collections.Generic.KeyValuePair`2<TKey, TValue> keyValuePair)

Disassembly:
	0x02963EF4 BL 0x1C16D6C
	0x02963EF8 LDR X9, [X31 + 0x28]
	0x02963EFC CBZ X9, 0x2964190
	0x02963F00 ADRP X8, 0x1791000
	0x02963F04 LDR X8, [X8 + 0xE58]
	0x02963F08 MOV X23, X0
	0x02963F0C LDR W1, [X9 + 0x18]
	0x02963F10 LDR X0, [X8]
	0x02963F14 BL 0x1C16D6C
	0x02963F18 STR X0, [X31 + 0x20]
	0x02963F1C LDR X8, [X31 + 0x10]
	0x02963F20 LDR X8, [X8 + 0x10]
	0x02963F24 CBZ X8, 0x296406C
	0x02963F28 MOV X10, X31
	0x02963F2C LDR W9, [X8 + 0x18]
	0x02963F30 CMP X10, W9, SXTW
	0x02963F34 B.GE 0x2964070
	0x02963F38 CMP X10, X9
	0x02963F3C B.CS 0x2964164
	0x02963F40 ADD X9, X8, X10, 0x3, LSL
	0x02963F44 LDR X19, [X9 + 0x20]
	0x02963F48 STR X10, [X31 + 0x18]
	0x02963F4C CBZ X19, 0x2964060
	0x02963F50 LDR X22, [X19 + 0x28]
	0x02963F54 BL 0x1C16D44
	0x02963F58 CBZ X23, 0x296413C
	0x02963F5C LDR X8, [X31 + 0x30]
	0x02963F60 LDR W20, [X19 + 0x30]
	0x02963F64 LDR X8, [X8 + 0x20]
	0x02963F68 LDR X8, [X8 + 0xC0]
	0x02963F6C LDR X0, [X8 + 0x10]
	0x02963F70 LDRB W8, [X0 + 0x135]
	0x02963F74 TBNZ X8, 0x0, 0x2963F7C
	0x02963F78 BL 0x1C5C684
	0x02963F7C LDR W8, [X0 + 0xE0]
	0x02963F80 CBNZ W8, 0x2963F88
	0x02963F84 BL 0x1C16DFC
	0x02963F88 LDR W8, [X23 + 0x18]
	0x02963F8C AND W9, W20, 0x7FFFFFFF
	0x02963F90 SDIV W10, W9, W8
	0x02963F94 MSUB W21, W10, W8, W9
	0x02963F98 CMP W21, W8
	0x02963F9C B.CS 0x296412C
	0x02963FA0 LDR X8, [X31 + 0x28]
	0x02963FA4 ADD X24, X23, W21, 0x3, UXTW

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Compare X0, 0
	007 JumpIfEqual {53}
	008 Move X8, [X2+32]
	009 Move X21, [X1]
	010 Move X20, [X1+8]
	011 Move X22, [X1+16]
	012 Move X19, X0
	013 Move X8, [X8+192]
	014 Move X8, [X8+520]
	015 Move W9, [X8+309]
	016 Move TEMP, X9
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {23}
	020 Move X0, X8
	021 Call 0x1C5D684
	022 Move X8, X0
	023 Move X9, [X19]
	024 NotImplemented "Instruction LDRH not yet implemented."
	025 Compare X10, 0
	026 JumpIfEqual {33}
	027 Move X11, [X9+176]
	028 Add X11, X11, 8
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Subtract X10, X10, 1
	032 Add X11, X11, 16
	033 Move W2, 5
	034 Move X0, X19
	035 Move X1, X8
	036 Call 0x1C5D788
	037 Move W8, [X11]
	038 Add W8, W8, 5
	039 Add X8, X9, W8
	040 Add X0, X8, 312
	041 Move X5, [X0]
	042 Move X4, [X0+8]
	043 Move X0, X19
	044 Move X1, X21
	045 Move X2, X20
	046 Move X3, X22
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move X30, [X31+48]
	052 CallNoReturn X5
	053 Call 0x1C17F20

Method: System.Boolean System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(System.Collections.Generic.KeyValuePair`2<TKey, TValue> keyValuePair)

Disassembly:
	0x02963FA8 LDP X29, X27, [X19 + 0x10]
	0x02963FAC LDR X25, [X19 + 0x20]
	0x02963FB0 LDR W20, [X8 + 0x18]
	0x02963FB4 LDR X8, [X31 + 0x30]
	0x02963FB8 LDR W26, [X19 + 0x30]
	0x02963FBC LDR X8, [X8 + 0x20]
	0x02963FC0 LDR X8, [X8 + 0xC0]
	0x02963FC4 LDR X28, [X24 + 0x20]!
	0x02963FC8 LDR X0, [X8 + 0xF8]
	0x02963FCC LDRB W8, [X0 + 0x135]
	0x02963FD0 TBNZ X8, 0x0, 0x2963FD8
	0x02963FD4 BL 0x1C5C684
	0x02963FD8 BL 0x1C16F10
	0x02963FDC LDR X8, [X31 + 0x30]
	0x02963FE0 MOV X19, X0
	0x02963FE4 LDR X8, [X8 + 0x20]
	0x02963FE8 LDR X8, [X8 + 0xC0]
	0x02963FEC LDR X6, [X8 + 0x1A0]
	0x02963FF0 MOV X1, X29
	0x02963FF4 MOV X2, X27
	0x02963FF8 MOV X3, X25
	0x02963FFC MOV W4, W26
	0x02964000 MOV X5, X28
	0x02964004 BL 0x2425134
	0x02964008 LDR W8, [X23 + 0x18]
	0x0296400C CMP W21, W8
	0x02964010 B.CS 0x2964134
	0x02964014 LDR X10, [X31 + 0x20]
	0x02964018 STR X19, [X24]
	0x0296401C CBZ X10, 0x2964138

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move [X31+8], X31
	005 Move X8, [X2+32]
	006 Move X19, X1
	007 Move X20, X2
	008 Move X1, [X1]
	009 Move X8, [X8+192]
	010 Move X2, [X19+8]
	011 Add X3, X31, 8
	012 Move X4, [X8+224]
	013 Call 0x296259C, X0, X1, X2
	014 Move TEMP, X0
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {30}
	018 Move X8, [X20+32]
	019 Move X8, [X8+192]
	020 Move X0, [X8+264]
	021 Call 0x211C0E8
	022 Compare X0, 0
	023 JumpIfEqual {36}
	024 Move X8, [X0]
	025 Move X2, [X19+16]
	026 Move X1, [X31+8]
	027 Move X9, [X8+440]
	028 Move X3, [X8+448]
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Move W0, W31
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 And W0, W0, 1
	034 Move X30, [X31+32]
	035 Return X0
	036 Call 0x1C17F20

Method: System.Boolean System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.get_IsReadOnly()

Disassembly:
	0x02964020 LDR W9, [X10 + 0x18]
	0x02964024 SDIV W8, W21, W20

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(System.Collections.Generic.KeyValuePair`2<TKey, TValue> keyValuePair)

Disassembly:
	0x02964028 MSUB W8, W8, W20, W21
	0x0296402C CMP W8, W9
	0x02964030 B.CS 0x2964130
	0x02964034 ADD X8, X10, W8, 0x2, UXTW
	0x02964038 LDR W9, [X8 + 0x20]!
	0x0296403C MOVN W10, 0x80000000
	0x02964040 CMP W9, W10
	0x02964044 B.EQ 0x2964140
	0x02964048 ADD W9, W9, 0x1
	0x0296404C MOV X19, X22
	0x02964050 STR W9, [X8]
	0x02964054 CBNZ X22, 0x2963F50
	0x02964058 LDR X8, [X31 + 0x10]
	0x0296405C LDR X8, [X8 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31+8], X31
	003 Move X8, [X2+32]
	004 Move X5, [X1+16]
	005 Add X3, X31, 8
	006 Move W4, 1
	007 Move X9, [X8+192]
	008 Move X8, [X1]
	009 Move X2, [X1+8]
	010 Move X6, [X9+232]
	011 Move X1, X8
	012 Call 0x296210C, X0, X1, X2, X3, X4
	013 And W0, W0, 1
	014 Move X30, [X31+16]
	015 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x02964060 LDR X10, [X31 + 0x18]
	0x02964064 ADD X10, X10, 0x1
	0x02964068 CBNZ X8, 0x2963F2C
	0x0296406C BL 0x1C16F20

ISIL:
	001 Move X8, [X1+32]
	002 Move X8, [X8+192]
	003 Move X1, [X8+536]
	004 Call 0x29631A8, X0
	005 Return X0

Method: System.Void System.Collections.IDictionary.Add(System.Object key, System.Object value)

Disassembly:
	0x02964070 CBZ X23, 0x2964194
	0x02964074 ADRP X8, 0x178F000
	0x02964078 LDR X8, [X8 + 0x5A8]
	0x0296407C LDR X0, [X8]
	0x02964080 LDR W8, [X0 + 0xE0]
	0x02964084 CBNZ W8, 0x296408C
	0x02964088 BL 0x1C16DFC
	0x0296408C LDR X9, [X31 + 0x28]
	0x02964090 LDR W8, [X23 + 0x18]
	0x02964094 LDR W9, [X9 + 0x18]
	0x02964098 SDIV W1, W8, W9
	0x0296409C MOVZ W0, 0x1
	0x029640A0 MOV X2, X31
	0x029640A4 BL 0x337EDF0
	0x029640A8 LDR X8, [X31 + 0x8]
	0x029640AC STR W0, [X8 + 0x24]
	0x029640B0 LDR X8, [X31 + 0x30]
	0x029640B4 LDR X8, [X8 + 0x20]
	0x029640B8 LDR X8, [X8 + 0xC0]
	0x029640BC LDR X0, [X8 + 0xA8]
	0x029640C0 LDRB W8, [X0 + 0x135]
	0x029640C4 TBNZ X8, 0x0, 0x29640CC
	0x029640C8 BL 0x1C5C684
	0x029640CC BL 0x1C16F10
	0x029640D0 LDP X2, X8, [X31 + 0x28]
	0x029640D4 MOV X19, X0
	0x029640D8 LDR X8, [X8 + 0x20]
	0x029640DC LDR X8, [X8 + 0xC0]
	0x029640E0 LDR X4, [X8 + 0xC0]
	0x029640E4 LDR X3, [X31 + 0x20]
	0x029640E8 MOV X1, X23
	0x029640EC BL 0x2676894
	0x029640F0 BL 0x1C16D44
	0x029640F4 LDR X8, [X31 + 0x8]
	0x029640F8 STR X19, [X8 + 0x10]
	0x029640FC LDR W2, [X31 + 0x3C]
	0x02964100 LDR X0, [X31 + 0x8]
	0x02964104 MOV W1, W31
	0x02964108 BL 0x29645AC
	0x0296410C LDP X20, X19, [X31 + 0x90]
	0x02964110 LDP X22, X21, [X31 + 0x80]
	0x02964114 LDP X24, X23, [X31 + 0x70]
	0x02964118 LDP X26, X25, [X31 + 0x60]
	0x0296411C LDP X28, X27, [X31 + 0x50]
	0x02964120 LDP X29, X30, [X31 + 0x40]
	0x02964124 ADD X31, X31, 0xA0
	0x02964128 RET
	0x0296412C BL 0x1C16F28
	0x02964130 BL 0x1C16F28
	0x02964134 BL 0x1C16F28
	0x02964138 BL 0x1C16F20
	0x0296413C BL 0x1C16F20
	0x02964140 BL 0x1C16F30
	0x02964144 LDR X1, [X31 + 0x30]
	0x02964148 BL 0x1C16DEC
	0x0296414C BL 0x1C16F20
	0x02964150 BL 0x1C16F20
	0x02964154 BL 0x1C16F28
	0x02964158 BL 0x1C16F30
	0x0296415C LDR X1, [X31 + 0x30]
	0x02964160 BL 0x1C16DEC
	0x02964164 BL 0x1C16F28
	0x02964168 BL 0x1C16F28
	0x0296416C BL 0x1C16F44
	0x02964170 MOV X1, X31
	0x02964174 BL 0x1C16DEC
	0x02964178 BL 0x1C16F20
	0x0296417C BL 0x1C16F20
	0x02964180 BL 0x1C16F30
	0x02964184 LDR X1, [X31 + 0x30]
	0x02964188 BL 0x1C16DEC
	0x0296418C BL 0x1C16F20
	0x02964190 BL 0x1C16F20
	0x02964194 BL 0x1C16F20
	0x02964198 BL 0x1C16F20
	0x0296419C BL 0x1C16F20
	0x029641A0 BL 0x1C16F20
	0x029641A4 BL 0x1C16F20
	0x029641A8 B 0x29642AC
	0x029641AC B 0x29642AC
	0x029641B0 B 0x29642AC
	0x029641B4 B 0x29642AC
	0x029641B8 B 0x29642AC
	0x029641BC B 0x29642AC
	0x029641C0 B 0x29642AC
	0x029641C4 B 0x29642AC
	0x029641C8 B 0x29642AC
	0x029641CC B 0x29642AC
	0x029641D0 B 0x29641FC
	0x029641D4 B 0x29642AC
	0x029641D8 B 0x29642AC
	0x029641DC B 0x29642AC
	0x029641E0 B 0x29642AC
	0x029641E4 B 0x29642AC
	0x029641E8 B 0x29642AC
	0x029641EC B 0x29642AC
	0x029641F0 B 0x29642AC
	0x029641F4 B 0x29642AC
	0x029641F8 B 0x29642AC
	0x029641FC MOV X22, X1
	0x02964200 CMP W22, 0x1
	0x02964204 B.NE 0x29642B0
	0x02964208 BL 0x3EB1AD0
	0x0296420C MOV X22, X0
	0x02964210 ADRP X0, 0x178F000
	0x02964214 LDR X0, [X0 + 0x858]
	0x02964218 BL 0x1C16D08
	0x0296421C LDR X8, [X22]
	0x02964220 LDR X1, [X8]
	0x02964224 BL 0x1C17270
	0x02964228 TBZ X0, 0x0, 0x2964234
	0x0296422C BL 0x3EB1AE0
	0x02964230 B 0x2963DBC
	0x02964234 MOVZ W0, 0x8
	0x02964238 BL 0x3EB1AF0
	0x0296423C LDR X8, [X22]
	0x02964240 STR X8, [X0]
	0x02964244 ADRP X1, 0x1550000
	0x02964248 ADD X1, X1, 0xE58
	0x0296424C MOV X2, X31
	0x02964250 BL 0x3EB1B00
	0x02964254 MOV X22, X1
	0x02964258 MOV X19, X0
	0x0296425C B 0x296426C
	0x02964260 MOV X22, X1
	0x02964264 MOV X19, X0
	0x02964268 BL 0x3EB1AE0
	0x0296426C MOV X0, X19
	0x02964270 B 0x29642B0
	0x02964274 B 0x29642AC
	0x02964278 B 0x29642AC
	0x0296427C B 0x29642AC
	0x02964280 B 0x29642AC
	0x02964284 B 0x29642AC
	0x02964288 B 0x29642AC
	0x0296428C B 0x29642AC
	0x02964290 B 0x29642AC
	0x02964294 B 0x29642AC
	0x02964298 B 0x29642AC
	0x0296429C B 0x29642AC
	0x029642A0 B 0x29642AC
	0x029642A4 B 0x29642AC
	0x029642A8 B 0x29642AC
	0x029642AC MOV X22, X1
	0x029642B0 CMP W22, 0x1
	0x029642B4 B.NE 0x29642E0
	0x029642B8 BL 0x3EB1AD0
	0x029642BC LDR X20, [X0]
	0x029642C0 BL 0x3EB1AE0
	0x029642C4 LDR W2, [X31 + 0x3C]
	0x029642C8 LDR X0, [X31 + 0x8]
	0x029642CC MOV W1, W31
	0x029642D0 BL 0x29645AC
	0x029642D4 CBZ X20, 0x296410C
	0x029642D8 MOV X0, X20
	0x029642DC BL 0x1C16F18
	0x029642E0 MOV X19, X0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X3+32]
	009 Move X19, X3
	010 Move X8, [X8+192]
	011 Compare X1, 0
	012 JumpIfEqual {116}
	013 Move X21, X1
	014 Move X1, [X8+96]
	015 Move X23, X2
	016 Move X20, X0
	017 Move W8, [X1+309]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {25}
	022 Move X0, X1
	023 Call 0x1C5D684
	024 Move X1, X0
	025 Move X0, X21
	026 Call 0x1C17E00
	027 Compare X0, 0
	028 JumpIfEqual {131}
	029 Move X8, [X19+32]
	030 Move X8, [X8+192]
	031 Move X24, [X8+136]
	032 Move W8, [X24+309]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {40}
	037 Move X0, X24
	038 Call 0x1C5D684
	039 Move X24, X0
	040 Compare X23, 0
	041 JumpIfEqual {94}
	042 Move X0, X23
	043 Move X1, X24
	044 Call 0x1C17E00
	045 Move X22, X0
	046 Compare X0, 0
	047 JumpIfEqual {147}
	048 Compare X20, 0
	049 JumpIfEqual {97}
	050 Move X8, [X19+32]
	051 Move X8, [X8+192]
	052 Move X23, [X8+520]
	053 Move W9, [X23+309]
	054 Move TEMP, X9
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {63}
	058 Move X0, X23
	059 Call 0x1C5D684
	060 Move X8, [X19+32]
	061 Move X23, X0
	062 Move X8, [X8+192]
	063 Move X1, [X8+96]
	064 Move W8, [X1+309]
	065 Move TEMP, X8
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfEqual {72}
	069 Move X0, X1
	070 Call 0x1C5D684
	071 Move X1, X0
	072 Move X8, [X21]
	073 Move X9, [X1+64]
	074 Move X0, X21
	075 Move X8, [X8+64]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Call 0x1C17E08
	078 Move X8, [X20]
	079 Move X21, [X0]
	080 Move X19, [X0+8]
	081 NotImplemented "Instruction LDRH not yet implemented."
	082 Compare X9, 0
	083 JumpIfEqual {90}
	084 Move X10, [X8+176]
	085 Add X10, X10, 8
	086 NotImplemented "Instruction LDUR not yet implemented."
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Subtract X9, X9, 1
	089 Add X10, X10, 16
	090 Move W2, 5
	091 Move X0, X20
	092 Move X1, X23
	093 Call 0x1C5D788
	094 Move X22, X31
	095 Compare X20, 0
	096 JumpIfNotEqual {50}
	097 Call 0x1C17F20
	098 Move W9, [X10]
	099 Add W9, W9, 5
	100 Add X8, X8, W9
	101 Add X0, X8, 312
	102 Move X5, [X0]
	103 Move X4, [X0+8]
	104 Move X0, X20
	105 Move X1, X21
	106 Move X2, X19
	107 Move X3, X22
	108 Move X20, [X31+48]
	109 Move X19, [X31+56]
	110 Move X22, [X31+32]
	111 Move X21, [X31+40]
	112 Move X24, [X31+16]
	113 Move X23, [X31+24]
	114 Move X30, [X31+64]
	115 CallNoReturn X5
	116 Move X0, [X8+16]
	117 Move W8, [X0+309]
	118 Move TEMP, X8
	119 And TEMP, TEMP, 1
	120 Compare TEMP, 1
	121 JumpIfEqual {123}
	122 Call 0x1C5D684
	123 Move W8, [X0+224]
	124 Compare W8, 0
	125 JumpIfNotEqual {127}
	126 Call 0x1C17DFC
	127 Move X8, [X19+32]
	128 Move X8, [X8+192]
	129 Move X0, [X8+104]
	130 Call 0x2963A10
	131 Move X0, 0x1798000
	132 Move X0, [X0+1400]
	133 Call 0x1C17D08
	134 Call 0x1C17F10
	135 Move X20, X0
	136 Move X0, 0x17BB000
	137 Move X0, [X0+648]
	138 Call 0x1C17D08
	139 Move X1, X0
	140 Move X0, X20
	141 Move X2, X31
	142 Call ArgumentException..ctor, X0, X1
	143 Move X0, X20
	144 Move X1, X19
	145 Call 0x1C17DEC
	146 Call 0x1C181E0
	147 Move X0, X23
	148 Move X1, X24
	149 Call 0x1C181E0
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move X20, X0
	152 Move X0, X20
	153 Call 0x3EB2AD0
	154 Move X20, X0
	155 Move X0, 0x1798000
	156 Move X0, [X0+3080]
	157 Call 0x1C17D08
	158 Move X8, [X20]
	159 Move X1, [X8]
	160 Call 0x1C18270
	161 Move TEMP, X0
	162 And TEMP, TEMP, 1
	163 Compare TEMP, 1
	164 JumpIfNotEqual {173}
	165 Call 0x3EB2AE0
	166 Move X0, 0x1798000
	167 Move X0, [X0+1400]
	168 Call 0x1C17D08
	169 Call 0x1C17F10
	170 Move X20, X0
	171 Move X0, 0x17BB000
	172 Move X0, [X0+656]
	173 Move W0, 8
	174 Call 0x3EB2AF0
	175 Move X8, [X20]
	176 Move [X0], X8
	177 Move X1, 0x1551000
	178 Add X1, X1, 3672
	179 Move X2, X31
	180 Call 0x3EB2B00
	181 Move X20, X0
	182 Call 0x3EB2AE0
	183 Move X0, X20
	184 Call 0x1D2D690
	185 Call 0x1991590

Method: System.Boolean System.Collections.IDictionary.Contains(System.Object key)

Disassembly:
	0x029642E4 MOV X20, X31
	0x029642E8 B 0x29642F0
	0x029642EC MOV X19, X0
	0x029642F0 LDR W2, [X31 + 0x3C]
	0x029642F4 LDR X0, [X31 + 0x8]
	0x029642F8 MOV W1, W31
	0x029642FC BL 0x29645AC
	0x02964300 CBNZ X20, 0x296430C
	0x02964304 MOV X0, X19
	0x02964308 BL 0x1D2C690
	0x0296430C MOV X0, X20
	0x02964310 BL 0x1C16F18
	0x02964314 BL 0x1990590
	0x02964318 AND W8, W0, 0x7FFFFFFF
	0x0296431C SDIV W9, W8, W1
	0x02964320 MSUB W0, W9, W1, W8
	0x02964324 RET
	0x02964328 AND W8, W0, 0x7FFFFFFF
	0x0296432C SDIV W9, W8, W3
	0x02964330 MSUB W8, W9, W3, W8
	0x02964334 SDIV W9, W8, W4
	0x02964338 STR W8, [X1]
	0x0296433C MSUB W8, W9, W4, W8
	0x02964340 STR W8, [X2]
	0x02964344 RET
	0x02964348 STR X30, [X31 - 0x20]!
	0x0296434C STP X20, X19, [X31 + 0x10]
	0x02964350 ADRP X19, 0x1A76000
	0x02964354 ADRP X20, 0x17BA000
	0x02964358 LDRB W8, [X19 + 0xE57]
	0x0296435C LDR X20, [X20 + 0x2A8]
	0x02964360 TBNZ X8, 0x0, 0x2964378
	0x02964364 ADRP X0, 0x17BA000
	0x02964368 LDR X0, [X0 + 0x2A8]
	0x0296436C BL 0x1C16CF4
	0x02964370 MOVZ W8, 0x1
	0x02964374 STRB W8, [X19 + 0xE57]
	0x02964378 LDR X0, [X20]
	0x0296437C LDR W8, [X0 + 0xE0]
	0x02964380 CBNZ W8, 0x2964388
	0x02964384 BL 0x1C16DFC
	0x02964388 LDP X20, X19, [X31 + 0x10]
	0x0296438C MOV X0, X31
	0x02964390 LDR X30, [X31], #0x20
	0x02964394 B 0x33DF528
	0x02964398 STR X30, [X31 - 0x30]!
	0x0296439C STP X22, X21, [X31 + 0x10]
	0x029643A0 STP X20, X19, [X31 + 0x20]
	0x029643A4 ADRP X22, 0x1A76000
	0x029643A8 ADRP X21, 0x17BA000
	0x029643AC LDRB W8, [X22 + 0xE58]
	0x029643B0 LDR X21, [X21 + 0x2B0]
	0x029643B4 MOV X19, X1
	0x029643B8 MOV X20, X0
	0x029643BC TBNZ X8, 0x0, 0x29643D4
	0x029643C0 ADRP X0, 0x17BA000
	0x029643C4 LDR X0, [X0 + 0x2B0]
	0x029643C8 BL 0x1C16CF4
	0x029643CC MOVZ W8, 0x1
	0x029643D0 STRB W8, [X22 + 0xE58]
	0x029643D4 LDR X0, [X21]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+32]
	007 Move X19, X2
	008 Move X8, [X8+192]
	009 Compare X1, 0
	010 JumpIfEqual {62}
	011 Move X21, X1
	012 Move X1, [X8+96]
	013 Move X20, X0
	014 Move W8, [X1+309]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {22}
	019 Move X0, X1
	020 Call 0x1C5D684
	021 Move X1, X0
	022 Move X0, X21
	023 Call 0x1C17E00
	024 Compare X0, 0
	025 JumpIfEqual {55}
	026 Move X8, [X19+32]
	027 Move X8, [X8+192]
	028 Move X1, [X8+96]
	029 Move W8, [X1+309]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {37}
	034 Move X0, X1
	035 Call 0x1C5D684
	036 Move X1, X0
	037 Move X8, [X21]
	038 Move X9, [X1+64]
	039 Move X0, X21
	040 Move X8, [X8+64]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Call 0x1C17E08
	043 Move X8, [X19+32]
	044 Move X1, [X0]
	045 Move X2, [X0+8]
	046 Add X3, X31, 8
	047 Move X0, X20
	048 Move X8, [X8+192]
	049 Move X8, [X8+544]
	050 Move [X31+8], X31
	051 Move X8, [X8+32]
	052 Move X8, [X8+192]
	053 Move X4, [X8+224]
	054 Call 0x296259C, X0, X1, X2
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X30, [X31+16]
	058 Move X21, [X31+24]
	059 And W0, W0, 1
	060 Add X31, X31, 48
	061 Return X0
	062 Move X0, [X8+16]
	063 Move W8, [X0+309]
	064 Move TEMP, X8
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {69}
	068 Call 0x1C5D684
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move X8, [X19+32]
	074 Move X8, [X8+192]
	075 Move X0, [X8+104]
	076 Call 0x2963A10
	077 Call 0x1C181E0

Method: System.Collections.IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator()

Disassembly:
	0x029643D8 LDR W8, [X0 + 0xE0]
	0x029643DC CBNZ W8, 0x29643E8
	0x029643E0 BL 0x1C16DFC
	0x029643E4 LDR X0, [X21]
	0x029643E8 LDR X8, [X0 + 0xB8]
	0x029643EC LDR X0, [X8]
	0x029643F0 CBZ X0, 0x296448C
	0x029643F4 MOV X1, X31
	0x029643F8 BL 0x334F914
	0x029643FC TBZ X0, 0x0, 0x2964444
	0x02964400 LDR X0, [X21]
	0x02964404 LDR W8, [X0 + 0xE0]
	0x02964408 CBNZ W8, 0x2964414
	0x0296440C BL 0x1C16DFC
	0x02964410 LDR X0, [X21]
	0x02964414 LDR X8, [X0 + 0xB8]
	0x02964418 LDR X22, [X20 + 0x10]
	0x0296441C LDR X21, [X8]
	0x02964420 BL 0x1C16D44
	0x02964424 CBZ X22, 0x296448C
	0x02964428 LDR X8, [X22 + 0x10]
	0x0296442C CBZ X8, 0x296448C
	0x02964430 CBZ X21, 0x296448C
	0x02964434 LDR W1, [X8 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+32]
	005 Move X19, X1
	006 Move X20, X0
	007 Move X8, [X8+192]
	008 Move X8, [X8+552]
	009 Move W9, [X8+309]
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X8
	015 Call 0x1C5D684
	016 Move X8, X0
	017 Move X0, X8
	018 Call 0x1C17F10
	019 Move X8, [X19+32]
	020 Move X1, X20
	021 Move X19, X0
	022 Move X8, [X8+192]
	023 Move X2, [X8+560]
	024 Call 0x29B631C, X0, X1
	025 Move X0, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0

Method: System.Collections.ICollection System.Collections.IDictionary.get_Keys()

Disassembly:
	0x02964438 MOV X0, X21
	0x0296443C MOV X2, X31
	0x02964440 BL 0x335DB50
	0x02964444 MOVZ W2, 0x1

ISIL:
	001 Move X8, [X1+32]
	002 Move X8, [X8+192]
	003 Move X1, [X8+472]
	004 Call 0x2965620, X0
	005 Return X0

Method: System.Void System.Collections.IDictionary.Remove(System.Object key)

Disassembly:
	0x02964448 MOV X0, X20
	0x0296444C MOV W1, W31
	0x02964450 MOV X3, X19
	0x02964454 BL 0x2964490
	0x02964458 LDR X21, [X20 + 0x10]
	0x0296445C BL 0x1C16D44
	0x02964460 CBZ X21, 0x296448C
	0x02964464 LDR X8, [X21 + 0x18]
	0x02964468 CBZ X8, 0x296448C
	0x0296446C LDR W2, [X8 + 0x18]
	0x02964470 MOV X0, X20
	0x02964474 MOV X3, X19
	0x02964478 LDP X20, X19, [X31 + 0x20]
	0x0296447C LDP X22, X21, [X31 + 0x10]
	0x02964480 MOVZ W1, 0x1
	0x02964484 LDR X30, [X31], #0x30
	0x02964488 B 0x2964490
	0x0296448C BL 0x1C16F20
	0x02964490 SUB X31, X31, 0x40
	0x02964494 STP X30, X23, [X31 + 0x10]
	0x02964498 STP X22, X21, [X31 + 0x20]
	0x0296449C STP X20, X19, [X31 + 0x30]
	0x029644A0 LDR X22, [X0 + 0x10]
	0x029644A4 MOV X19, X3
	0x029644A8 MOV W21, W2
	0x029644AC MOV W20, W1
	0x029644B0 BL 0x1C16D44
	0x029644B4 CBZ X22, 0x2964574
	0x029644B8 CMP W20, W21
	0x029644BC B.GE 0x296455C
	0x029644C0 LDR X22, [X22 + 0x18]
	0x029644C4 SXTW X8, W21
	0x029644C8 SUB X23, X8, W20, SXTW
	0x029644CC ADD X9, X22, W20, 0x3, SXTW
	0x029644D0 ADD X21, X9, 0x20
	0x029644D4 STRB W31, [X31 + 0xC]
	0x029644D8 CBZ X22, 0x2964528
	0x029644DC LDR W8, [X22 + 0x18]
	0x029644E0 CMP W20, W8
	0x029644E4 B.CS 0x2964530
	0x029644E8 LDR X0, [X21]
	0x029644EC ADD X1, X31, 0xC
	0x029644F0 MOV X2, X31
	0x029644F4 BL 0x33DE64C
	0x029644F8 MOV X0, X31
	0x029644FC LDRB W8, [X31 + 0xC]
	0x02964500 CBZ W8, 0x2964510
	0x02964504 LDR W8, [X19]
	0x02964508 ADD W8, W8, 0x1
	0x0296450C STR W8, [X19]
	0x02964510 CBNZ X0, 0x2964570
	0x02964514 ADD X21, X21, 0x8
	0x02964518 SUBS X23, X23, 0x1
	0x0296451C ADD W20, W20, 0x1
	0x02964520 B.NE 0x29644D4
	0x02964524 B 0x296455C
	0x02964528 BL 0x1C16F20
	0x0296452C B 0x2964580
	0x02964530 BL 0x1C16F28
	0x02964534 B 0x2964578
	0x02964538 B 0x296453C
	0x0296453C CMP W1, 0x1

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move [X31+8], X31
	007 Move X8, [X2+32]
	008 Move X19, X2
	009 Move X8, [X8+192]
	010 Compare X1, 0
	011 JumpIfEqual {63}
	012 Move X21, X1
	013 Move X1, [X8+96]
	014 Move X20, X0
	015 Move W8, [X1+309]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {23}
	020 Move X0, X1
	021 Call 0x1C5D684
	022 Move X1, X0
	023 Move X0, X21
	024 Call 0x1C17E00
	025 Compare X0, 0
	026 JumpIfEqual {57}
	027 Move X8, [X19+32]
	028 Move X8, [X8+192]
	029 Move X1, [X8+96]
	030 Move W8, [X1+309]
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {38}
	035 Move X0, X1
	036 Call 0x1C5D684
	037 Move X1, X0
	038 Move X8, [X21]
	039 Move X9, [X1+64]
	040 Move X0, X21
	041 Move X8, [X8+64]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Call 0x1C17E08
	044 Move X8, [X19+32]
	045 Move X1, [X0]
	046 Move X2, [X0+8]
	047 Add X3, X31, 8
	048 Move X0, X20
	049 Move X8, [X8+192]
	050 Move W4, W31
	051 Move X5, X31
	052 Move X8, [X8+568]
	053 Move X8, [X8+32]
	054 Move X8, [X8+192]
	055 Move X6, [X8+232]
	056 Call 0x296210C, X0, X1, X2, X3, X4
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X30, [X31+16]
	060 Move X21, [X31+24]
	061 Add X31, X31, 48
	062 Return 
	063 Move X0, [X8+16]
	064 Move W8, [X0+309]
	065 Move TEMP, X8
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfEqual {70}
	069 Call 0x1C5D684
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Move X8, [X19+32]
	075 Move X8, [X8+192]
	076 Move X0, [X8+104]
	077 Call 0x2963A10
	078 Call 0x1C181E0

Method: System.Collections.ICollection System.Collections.IDictionary.get_Values()

Disassembly:
	0x02964540 B.NE 0x2964578
	0x02964544 BL 0x3EB1AD0
	0x02964548 LDR X8, [X0]
	0x0296454C STR X8, [X31]

ISIL:
	001 Move X8, [X1+32]
	002 Move X8, [X8+192]
	003 Move X1, [X8+496]
	004 Call 0x29658A4, X0
	005 Return X0

Method: System.Object System.Collections.IDictionary.get_Item(System.Object key)

Disassembly:
	0x02964550 BL 0x3EB1AE0
	0x02964554 LDR X0, [X31]
	0x02964558 B 0x29644FC
	0x0296455C LDP X20, X19, [X31 + 0x30]
	0x02964560 LDP X22, X21, [X31 + 0x20]
	0x02964564 LDP X30, X23, [X31 + 0x10]
	0x02964568 ADD X31, X31, 0x40
	0x0296456C RET
	0x02964570 BL 0x1C16F18
	0x02964574 BL 0x1C16F20
	0x02964578 STR X31, [X31]
	0x0296457C B 0x2964580
	0x02964580 LDRB W8, [X31 + 0xC]
	0x02964584 CBZ W8, 0x2964594
	0x02964588 LDR W8, [X19]
	0x0296458C ADD W8, W8, 0x1
	0x02964590 STR W8, [X19]
	0x02964594 LDR X8, [X31]
	0x02964598 CBNZ X8, 0x29645A0
	0x0296459C BL 0x1D2C690
	0x029645A0 LDR X0, [X31]
	0x029645A4 BL 0x1C16F18
	0x029645A8 BL 0x1990590
	0x029645AC STR X30, [X31 - 0x30]!
	0x029645B0 STP X22, X21, [X31 + 0x10]
	0x029645B4 STP X20, X19, [X31 + 0x20]
	0x029645B8 CMP W1, W2
	0x029645BC B.GE 0x2964608
	0x029645C0 MOV X19, X0
	0x029645C4 SXTW X20, W1
	0x029645C8 SXTW X21, W2
	0x029645CC LDR X22, [X19 + 0x10]
	0x029645D0 BL 0x1C16D44
	0x029645D4 CBZ X22, 0x2964618
	0x029645D8 LDR X8, [X22 + 0x18]
	0x029645DC CBZ X8, 0x2964618
	0x029645E0 LDR W9, [X8 + 0x18]
	0x029645E4 CMP W20, W9
	0x029645E8 B.CS 0x296461C
	0x029645EC ADD X8, X8, X20, 0x3, LSL
	0x029645F0 LDR X0, [X8 + 0x20]
	0x029645F4 MOV X1, X31
	0x029645F8 BL 0x33E14E4
	0x029645FC ADD X20, X20, 0x1
	0x02964600 CMP X21, X20
	0x02964604 B.NE 0x29645CC
	0x02964608 LDP X20, X19, [X31 + 0x20]
	0x0296460C LDP X22, X21, [X31 + 0x10]
	0x02964610 LDR X30, [X31], #0x30
	0x02964614 RET
	0x02964618 BL 0x1C16F20
	0x0296461C BL 0x1C16F28
	0x02964620 SUB X31, X31, 0x40
	0x02964624 STP X30, X23, [X31 + 0x10]
	0x02964628 STP X22, X21, [X31 + 0x20]
	0x0296462C STP X20, X19, [X31 + 0x30]
	0x02964630 STR W31, [X31 + 0xC]
	0x02964634 LDR X8, [X1 + 0x20]
	0x02964638 MOV X20, X1
	0x0296463C MOV X19, X0

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move [X31+8], X31
	007 Move X8, [X2+32]
	008 Move X19, X2
	009 Move X8, [X8+192]
	010 Compare X1, 0
	011 JumpIfEqual {61}
	012 Move X21, X1
	013 Move X1, [X8+96]
	014 Move X20, X0
	015 Move W8, [X1+309]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {23}
	020 Move X0, X1
	021 Call 0x1C5D684
	022 Move X1, X0
	023 Move X0, X21
	024 Call 0x1C17E00
	025 Compare X0, 0
	026 JumpIfEqual {55}
	027 Move X8, [X19+32]
	028 Move X8, [X8+192]
	029 Move X1, [X8+96]
	030 Move W8, [X1+309]
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {38}
	035 Move X0, X1
	036 Call 0x1C5D684
	037 Move X1, X0
	038 Move X8, [X21]
	039 Move X9, [X1+64]
	040 Move X0, X21
	041 Move X8, [X8+64]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Call 0x1C17E08
	044 Move X8, [X19+32]
	045 Move X1, [X0]
	046 Move X2, [X0+8]
	047 Add X3, X31, 8
	048 Move X0, X20
	049 Move X8, [X8+192]
	050 Move X4, [X8+224]
	051 Call 0x296259C, X0, X1, X2
	052 Move X8, [X31+8]
	053 And W31, W0, 1
	054 NotImplemented "Instruction CSEL not yet implemented."
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X30, [X31+16]
	058 Move X21, [X31+24]
	059 Add X31, X31, 48
	060 Return X0
	061 Move X0, [X8+16]
	062 Move W8, [X0+309]
	063 Move TEMP, X8
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfEqual {68}
	067 Call 0x1C5D684
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move X8, [X19+32]
	073 Move X8, [X8+192]
	074 Move X0, [X8+104]
	075 Call 0x2963A10
	076 Call 0x1C181E0

Method: System.Void System.Collections.IDictionary.set_Item(System.Object key, System.Object value)

Disassembly:
	0x02964640 LDR X8, [X8 + 0xC0]
	0x02964644 LDR X2, [X8 + 0x158]
	0x02964648 ADD X1, X31, 0xC
	0x0296464C BL 0x2964398
	0x02964650 MOV X0, X19
	0x02964654 BL 0x2962B24
	0x02964658 MOV W22, W0
	0x0296465C TBNZ X0, 0x1F, 0x29647D0
	0x02964660 LDR X8, [X20 + 0x20]
	0x02964664 LDR X8, [X8 + 0xC0]
	0x02964668 LDR X0, [X8 + 0x260]
	0x0296466C LDRB W8, [X0 + 0x135]
	0x02964670 TBNZ X8, 0x0, 0x2964678
	0x02964674 BL 0x1C5C684
	0x02964678 BL 0x1C16F10
	0x0296467C LDR X8, [X20 + 0x20]
	0x02964680 MOV X21, X0
	0x02964684 BIC W1, W22, W22, 0x1F
	0x02964688 LDR X8, [X8 + 0xC0]
	0x0296468C LDR X2, [X8 + 0x268]
	0x02964690 BL 0x2FC7A20
	0x02964694 MOV X22, X31
	0x02964698 LDR X23, [X19 + 0x10]
	0x0296469C BL 0x1C16D44
	0x029646A0 CBZ X23, 0x29647BC
	0x029646A4 LDR X8, [X23 + 0x10]
	0x029646A8 CBZ X8, 0x29647C0
	0x029646AC LDRSW X8, [X8 + 0x18]
	0x029646B0 CMP X22, X8
	0x029646B4 B.GE 0x2964758
	0x029646B8 LDR X23, [X19 + 0x10]
	0x029646BC BL 0x1C16D44
	0x029646C0 CBZ X23, 0x29647C8
	0x029646C4 LDR X8, [X23 + 0x10]
	0x029646C8 CBZ X8, 0x29647CC
	0x029646CC LDR W9, [X8 + 0x18]
	0x029646D0 CMP X22, X9
	0x029646D4 B.CS 0x29647C4
	0x029646D8 ADD X8, X8, X22, 0x3, LSL
	0x029646DC LDR X23, [X8 + 0x20]
	0x029646E0 CBZ X23, 0x2964750
	0x029646E4 CBZ X21, 0x29647B4
	0x029646E8 LDR X8, [X20 + 0x20]
	0x029646EC LDR W10, [X21 + 0x1C]
	0x029646F0 LDP X1, X2, [X23 + 0x10]
	0x029646F4 LDR X9, [X8 + 0xC0]
	0x029646F8 LDR X8, [X21 + 0x10]
	0x029646FC ADD W10, W10, 0x1
	0x02964700 LDR X9, [X9 + 0x270]
	0x02964704 STR W10, [X21 + 0x1C]
	0x02964708 CBZ X8, 0x29647B8
	0x0296470C LDRSW X10, [X21 + 0x18]
	0x02964710 LDR W11, [X8 + 0x18]
	0x02964714 CMP W10, W11
	0x02964718 B.CS 0x2964730
	0x0296471C ADD W9, W10, 0x1
	0x02964720 ADD X8, X8, X10, 0x4, LSL
	0x02964724 STR W9, [X21 + 0x18]
	0x02964728 STP X1, X2, [X8 + 0x20]
	0x0296472C B 0x2964744
	0x02964730 LDR X8, [X9 + 0x20]
	0x02964734 LDR X8, [X8 + 0xC0]
	0x02964738 LDR X3, [X8 + 0x70]
	0x0296473C MOV X0, X21
	0x02964740 BL 0x2FC81C0
	0x02964744 LDR X23, [X23 + 0x28]
	0x02964748 BL 0x1C16D44
	0x0296474C B 0x29646E0
	0x02964750 ADD X22, X22, 0x1
	0x02964754 B 0x2964698
	0x02964758 LDR X8, [X20 + 0x20]
	0x0296475C LDR X8, [X8 + 0xC0]
	0x02964760 LDR X0, [X8 + 0x1E0]
	0x02964764 LDRB W8, [X0 + 0x135]
	0x02964768 TBNZ X8, 0x0, 0x2964770
	0x0296476C BL 0x1C5C684
	0x02964770 BL 0x1C16F10
	0x02964774 LDR X8, [X20 + 0x20]
	0x02964778 MOV X22, X0
	0x0296477C LDR X8, [X8 + 0xC0]
	0x02964780 LDR X2, [X8 + 0x278]
	0x02964784 MOV X1, X21
	0x02964788 BL 0x25376E0
	0x0296478C LDR W2, [X31 + 0xC]
	0x02964790 MOV X0, X19
	0x02964794 MOV W1, W31
	0x02964798 BL 0x29645AC
	0x0296479C MOV X0, X22
	0x029647A0 LDP X20, X19, [X31 + 0x30]
	0x029647A4 LDP X22, X21, [X31 + 0x20]
	0x029647A8 LDP X30, X23, [X31 + 0x10]
	0x029647AC ADD X31, X31, 0x40
	0x029647B0 RET
	0x029647B4 BL 0x1C16F20
	0x029647B8 BL 0x1C16F20
	0x029647BC BL 0x1C16F20
	0x029647C0 BL 0x1C16F20
	0x029647C4 BL 0x1C16F28
	0x029647C8 BL 0x1C16F20
	0x029647CC BL 0x1C16F20
	0x029647D0 ADRP X0, 0x1798000
	0x029647D4 LDR X0, [X0 + 0xDB8]
	0x029647D8 BL 0x1C16D08
	0x029647DC BL 0x1C16F10
	0x029647E0 MOV X21, X0
	0x029647E4 MOV X1, X31
	0x029647E8 BL 0x339F30C
	0x029647EC MOV X0, X21
	0x029647F0 MOV X1, X20
	0x029647F4 BL 0x1C16DEC
	0x029647F8 B 0x2964830

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X3+32]
	009 Move X19, X3
	010 Move X8, [X8+192]
	011 Compare X1, 0
	012 JumpIfEqual {101}
	013 Move X22, X1
	014 Move X1, [X8+96]
	015 Move X21, X2
	016 Move X20, X0
	017 Move W8, [X1+309]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {25}
	022 Move X0, X1
	023 Call 0x1C5D684
	024 Move X1, X0
	025 Move X0, X22
	026 Call 0x1C17E00
	027 Compare X0, 0
	028 JumpIfEqual {116}
	029 Move X8, [X19+32]
	030 Move X8, [X8+192]
	031 Move X1, [X8+136]
	032 Move W8, [X1+309]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {40}
	037 Move X0, X1
	038 Call 0x1C5D684
	039 Move X1, X0
	040 Move X0, X21
	041 Call 0x1C17E00
	042 Compare X0, 0
	043 JumpIfEqual {123}
	044 Move X8, [X19+32]
	045 Move X8, [X8+192]
	046 Move X1, [X8+96]
	047 Move W8, [X1+309]
	048 Move TEMP, X8
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {55}
	052 Move X0, X1
	053 Call 0x1C5D684
	054 Move X1, X0
	055 Move X8, [X22]
	056 Move X9, [X1+64]
	057 Move X0, X22
	058 Move X8, [X8+64]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Call 0x1C17E08
	061 Move X8, [X19+32]
	062 Move X23, [X0]
	063 Move X22, [X0+8]
	064 Move X8, [X8+192]
	065 Move X24, [X8+136]
	066 Move W8, [X24+309]
	067 Move TEMP, X8
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfEqual {74}
	071 Move X0, X24
	072 Call 0x1C5D684
	073 Move X24, X0
	074 Compare X21, 0
	075 JumpIfEqual {85}
	076 Move X0, X21
	077 Move X1, X24
	078 Call 0x1C17E00
	079 Move X3, X0
	080 Compare X0, 0
	081 JumpIfNotEqual {86}
	082 Move X0, X21
	083 Move X1, X24
	084 Call 0x1C181E0
	085 Move X3, X31
	086 Move X8, [X19+32]
	087 Move X0, X20
	088 Move X1, X23
	089 Move X2, X22
	090 Move X8, [X8+192]
	091 Move X20, [X31+48]
	092 Move X19, [X31+56]
	093 Move X22, [X31+32]
	094 Move X21, [X31+40]
	095 Move X24, [X31+16]
	096 Move X23, [X31+24]
	097 Move X4, [X8+576]
	098 Move X30, [X31+64]
	099 Call 0x29638A0, X0, X1, X2
	100 Return 
	101 Move X0, [X8+16]
	102 Move W8, [X0+309]
	103 Move TEMP, X8
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfEqual {108}
	107 Call 0x1C5D684
	108 Move W8, [X0+224]
	109 Compare W8, 0
	110 JumpIfNotEqual {112}
	111 Call 0x1C17DFC
	112 Move X8, [X19+32]
	113 Move X8, [X8+192]
	114 Move X0, [X8+104]
	115 Call 0x2963A10
	116 Move X0, 0x1798000
	117 Move X0, [X0+1400]
	118 Call 0x1C17D08
	119 Call 0x1C17F10
	120 Move X20, X0
	121 Move X0, 0x17BB000
	122 Move X0, [X0+648]
	123 Move X0, 0x1798000
	124 Move X0, [X0+1400]
	125 Call 0x1C17D08
	126 Call 0x1C17F10
	127 Move X20, X0
	128 Move X0, 0x17BB000
	129 Move X0, [X0+656]
	130 Call 0x1C17D08
	131 Move X1, X0
	132 Move X0, X20
	133 Move X2, X31
	134 Call ArgumentException..ctor, X0, X1
	135 Move X0, X20
	136 Move X1, X19
	137 Call 0x1C17DEC
	138 Call 0x1C181E0

Method: System.Void System.Collections.ICollection.CopyTo(System.Array array, System.Int32 index)

Disassembly:
	0x029647FC B 0x2964830
	0x02964800 B 0x2964830
	0x02964804 B 0x2964830
	0x02964808 B 0x2964830
	0x0296480C B 0x2964830
	0x02964810 B 0x2964830
	0x02964814 B 0x2964830
	0x02964818 B 0x2964830
	0x0296481C B 0x2964830
	0x02964820 B 0x2964830
	0x02964824 B 0x2964830
	0x02964828 B 0x2964830
	0x0296482C B 0x2964830
	0x02964830 MOV X20, X0
	0x02964834 CMP W1, 0x1
	0x02964838 B.NE 0x2964868
	0x0296483C MOV X0, X20
	0x02964840 BL 0x3EB1AD0
	0x02964844 LDR X21, [X0]
	0x02964848 BL 0x3EB1AE0
	0x0296484C LDR W2, [X31 + 0xC]
	0x02964850 MOV X0, X19
	0x02964854 MOV W1, W31
	0x02964858 BL 0x29645AC
	0x0296485C CBNZ X21, 0x2964870
	0x02964860 MOV X22, X31
	0x02964864 B 0x296479C
	0x02964868 MOV X21, X31
	0x0296486C B 0x296487C
	0x02964870 MOV X0, X21
	0x02964874 BL 0x1C16F18
	0x02964878 MOV X20, X0
	0x0296487C LDR W2, [X31 + 0xC]
	0x02964880 MOV X0, X19
	0x02964884 MOV W1, W31
	0x02964888 BL 0x29645AC
	0x0296488C CBNZ X21, 0x2964898
	0x02964890 MOV X0, X20
	0x02964894 BL 0x1D2C690
	0x02964898 MOV X0, X21
	0x0296489C BL 0x1C16F18
	0x029648A0 BL 0x1990590
	0x029648A4 SUB X31, X31, 0x40
	0x029648A8 STP X30, X23, [X31 + 0x10]
	0x029648AC STP X22, X21, [X31 + 0x20]
	0x029648B0 STP X20, X19, [X31 + 0x30]
	0x029648B4 STR W31, [X31 + 0xC]
	0x029648B8 LDR X8, [X1 + 0x20]
	0x029648BC MOV X20, X1
	0x029648C0 MOV X19, X0
	0x029648C4 LDR X8, [X8 + 0xC0]
	0x029648C8 LDR X2, [X8 + 0x158]
	0x029648CC ADD X1, X31, 0xC
	0x029648D0 BL 0x2964398
	0x029648D4 MOV X0, X19
	0x029648D8 BL 0x2962B24
	0x029648DC MOV W22, W0
	0x029648E0 TBNZ X0, 0x1F, 0x2964A54
	0x029648E4 LDR X8, [X20 + 0x20]
	0x029648E8 LDR X8, [X8 + 0xC0]
	0x029648EC LDR X0, [X8 + 0x288]
	0x029648F0 LDRB W8, [X0 + 0x135]
	0x029648F4 TBNZ X8, 0x0, 0x29648FC
	0x029648F8 BL 0x1C5C684
	0x029648FC BL 0x1C16F10
	0x02964900 LDR X8, [X20 + 0x20]
	0x02964904 MOV X21, X0
	0x02964908 BIC W1, W22, W22, 0x1F
	0x0296490C LDR X8, [X8 + 0xC0]
	0x02964910 LDR X2, [X8 + 0x290]
	0x02964914 BL 0x301B830
	0x02964918 MOV X22, X31
	0x0296491C LDR X23, [X19 + 0x10]
	0x02964920 BL 0x1C16D44
	0x02964924 CBZ X23, 0x2964A40
	0x02964928 LDR X8, [X23 + 0x10]
	0x0296492C CBZ X8, 0x2964A44
	0x02964930 LDRSW X8, [X8 + 0x18]
	0x02964934 CMP X22, X8
	0x02964938 B.GE 0x29649DC
	0x0296493C LDR X23, [X19 + 0x10]
	0x02964940 BL 0x1C16D44
	0x02964944 CBZ X23, 0x2964A4C
	0x02964948 LDR X8, [X23 + 0x10]
	0x0296494C CBZ X8, 0x2964A50
	0x02964950 LDR W9, [X8 + 0x18]
	0x02964954 CMP X22, X9
	0x02964958 B.CS 0x2964A48
	0x0296495C ADD X8, X8, X22, 0x3, LSL
	0x02964960 LDR X23, [X8 + 0x20]
	0x02964964 CBZ X23, 0x29649D4
	0x02964968 CBZ X21, 0x2964A38
	0x0296496C LDR X8, [X20 + 0x20]
	0x02964970 LDR W10, [X21 + 0x1C]
	0x02964974 LDR X1, [X23 + 0x20]
	0x02964978 LDR X9, [X8 + 0xC0]
	0x0296497C LDR X8, [X21 + 0x10]
	0x02964980 ADD W10, W10, 0x1
	0x02964984 LDR X9, [X9 + 0x298]
	0x02964988 STR W10, [X21 + 0x1C]
	0x0296498C CBZ X8, 0x2964A3C
	0x02964990 LDRSW X10, [X21 + 0x18]
	0x02964994 LDR W11, [X8 + 0x18]
	0x02964998 CMP W10, W11
	0x0296499C B.CS 0x29649B4
	0x029649A0 ADD W9, W10, 0x1
	0x029649A4 ADD X8, X8, X10, 0x3, LSL
	0x029649A8 STR W9, [X21 + 0x18]
	0x029649AC STR X1, [X8 + 0x20]
	0x029649B0 B 0x29649C8
	0x029649B4 LDR X8, [X9 + 0x20]
	0x029649B8 LDR X8, [X8 + 0xC0]
	0x029649BC LDR X2, [X8 + 0x70]
	0x029649C0 MOV X0, X21
	0x029649C4 BL 0x301BF90
	0x029649C8 LDR X23, [X23 + 0x28]
	0x029649CC BL 0x1C16D44
	0x029649D0 B 0x2964964
	0x029649D4 ADD X22, X22, 0x1
	0x029649D8 B 0x296491C
	0x029649DC LDR X8, [X20 + 0x20]
	0x029649E0 LDR X8, [X8 + 0xC0]
	0x029649E4 LDR X0, [X8 + 0x1F8]
	0x029649E8 LDRB W8, [X0 + 0x135]
	0x029649EC TBNZ X8, 0x0, 0x29649F4
	0x029649F0 BL 0x1C5C684
	0x029649F4 BL 0x1C16F10
	0x029649F8 LDR X8, [X20 + 0x20]
	0x029649FC MOV X22, X0
	0x02964A00 LDR X8, [X8 + 0xC0]
	0x02964A04 LDR X2, [X8 + 0x2A0]
	0x02964A08 MOV X1, X21
	0x02964A0C BL 0x2551884
	0x02964A10 LDR W2, [X31 + 0xC]
	0x02964A14 MOV X0, X19
	0x02964A18 MOV W1, W31
	0x02964A1C BL 0x29645AC
	0x02964A20 MOV X0, X22
	0x02964A24 LDP X20, X19, [X31 + 0x30]
	0x02964A28 LDP X22, X21, [X31 + 0x20]
	0x02964A2C LDP X30, X23, [X31 + 0x10]
	0x02964A30 ADD X31, X31, 0x40
	0x02964A34 RET
	0x02964A38 BL 0x1C16F20
	0x02964A3C BL 0x1C16F20
	0x02964A40 BL 0x1C16F20
	0x02964A44 BL 0x1C16F20
	0x02964A48 BL 0x1C16F28
	0x02964A4C BL 0x1C16F20
	0x02964A50 BL 0x1C16F20
	0x02964A54 ADRP X0, 0x1798000
	0x02964A58 LDR X0, [X0 + 0xDB8]
	0x02964A5C BL 0x1C16D08
	0x02964A60 BL 0x1C16F10
	0x02964A64 MOV X21, X0
	0x02964A68 MOV X1, X31
	0x02964A6C BL 0x339F30C
	0x02964A70 MOV X0, X21
	0x02964A74 MOV X1, X20
	0x02964A78 BL 0x1C16DEC
	0x02964A7C B 0x2964AB4
	0x02964A80 B 0x2964AB4
	0x02964A84 B 0x2964AB4
	0x02964A88 B 0x2964AB4
	0x02964A8C B 0x2964AB4
	0x02964A90 B 0x2964AB4
	0x02964A94 B 0x2964AB4
	0x02964A98 B 0x2964AB4
	0x02964A9C B 0x2964AB4
	0x02964AA0 B 0x2964AB4
	0x02964AA4 B 0x2964AB4
	0x02964AA8 B 0x2964AB4
	0x02964AAC B 0x2964AB4
	0x02964AB0 B 0x2964AB4
	0x02964AB4 MOV X20, X0
	0x02964AB8 CMP W1, 0x1
	0x02964ABC B.NE 0x2964AEC
	0x02964AC0 MOV X0, X20
	0x02964AC4 BL 0x3EB1AD0
	0x02964AC8 LDR X21, [X0]
	0x02964ACC BL 0x3EB1AE0
	0x02964AD0 LDR W2, [X31 + 0xC]
	0x02964AD4 MOV X0, X19
	0x02964AD8 MOV W1, W31
	0x02964ADC BL 0x29645AC
	0x02964AE0 CBNZ X21, 0x2964AF4
	0x02964AE4 MOV X22, X31
	0x02964AE8 B 0x2964A20
	0x02964AEC MOV X21, X31
	0x02964AF0 B 0x2964B00
	0x02964AF4 MOV X0, X21
	0x02964AF8 BL 0x1C16F18
	0x02964AFC MOV X20, X0
	0x02964B00 LDR W2, [X31 + 0xC]
	0x02964B04 MOV X0, X19
	0x02964B08 MOV W1, W31
	0x02964B0C BL 0x29645AC
	0x02964B10 CBNZ X21, 0x2964B1C
	0x02964B14 MOV X0, X20
	0x02964B18 BL 0x1D2C690
	0x02964B1C MOV X0, X21
	0x02964B20 BL 0x1C16F18
	0x02964B24 BL 0x1990590
	0x02964B28 STP X30, X21, [X31 - 0x20]!
	0x02964B2C STP X20, X19, [X31 + 0x10]
	0x02964B30 LDR X21, [X0 + 0x10]
	0x02964B34 MOV X19, X0
	0x02964B38 MOV X20, X3
	0x02964B3C BL 0x1C16D44
	0x02964B40 LDR X8, [X20 + 0x20]
	0x02964B44 MOV X0, X19
	0x02964B48 LDR X8, [X8 + 0xC0]
	0x02964B4C LDR X1, [X8 + 0x2B0]
	0x02964B50 BL 0x2961C8C
	0x02964B54 STR X0, [X19 + 0x28]
	0x02964B58 CBZ X21, 0x2964B88
	0x02964B5C LDR X8, [X21 + 0x18]
	0x02964B60 CBZ X8, 0x2964B88
	0x02964B64 LDR X8, [X8 + 0x18]
	0x02964B68 STR W8, [X19 + 0x30]
	0x02964B6C LDR X8, [X21 + 0x10]
	0x02964B70 CBZ X8, 0x2964B88
	0x02964B74 LDR X8, [X8 + 0x18]
	0x02964B78 STR W8, [X19 + 0x34]
	0x02964B7C LDP X20, X19, [X31 + 0x10]
	0x02964B80 LDP X30, X21, [X31], #0x20
	0x02964B84 RET
	0x02964B88 BL 0x1C16F20
	0x02964B8C STR X31, [X0 + 0x28]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X23, 0x1A77000
	011 Move W8, [X23+3669]
	012 Move X20, X3
	013 Move W21, W2
	014 Move X22, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x17BA000
	021 Move X0, [X0+120]
	022 Call 0x1C17CF4
	023 Move X0, 0x1790000
	024 Move X0, [X0+2512]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X23+3669], W8
	028 Compare X22, 0
	029 JumpIfEqual {145}
	030 Move TEMP, X21
	031 And TEMP, TEMP, -2147483648
	032 Compare TEMP, -2147483648
	033 JumpIfEqual {157}
	034 Move [X31+12], W31
	035 Move X8, [X20+32]
	036 Move X8, [X8+192]
	037 Move X2, [X8+344]
	038 Add X1, X31, 12
	039 Move X0, X19
	040 Call 0x2965398, X0, X1
	041 Move X23, [X19+16]
	042 Call 0x1C17D44
	043 Compare X23, 0
	044 JumpIfEqual {177}
	045 Move X8, [X23+24]
	046 Compare X8, 0
	047 JumpIfEqual {69}
	048 Move W24, W31
	049 Move X25, X31
	050 Move TEMP, X24
	051 And TEMP, TEMP, -2147483648
	052 Compare TEMP, -2147483648
	053 JumpIfEqual {70}
	054 NotImplemented "Instruction LDRSW not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X26, [X23+32]
	057 Call 0x1C17D44
	058 Compare X26, 0
	059 JumpIfEqual {144}
	060 Move W8, [X26+24]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Add X8, X26, X25
	063 Move W9, [X8+32]
	064 Move X8, [X23+24]
	065 Add X25, X25, 1
	066 Add W24, W9, W24
	067 Compare X8, 0
	068 JumpIfNotEqual {50}
	069 Call 0x1C17F20
	070 Move X0, X22
	071 Move X1, X31
	072 Call Array.get_Length, X0
	073 Move TEMP, X24
	074 And TEMP, TEMP, -2147483648
	075 Compare TEMP, -2147483648
	076 JumpIfEqual {178}
	077 Subtract W8, W0, W24
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move X8, [X20+32]
	080 Move X8, [X8+192]
	081 Move X1, [X8+360]
	082 Move W8, [X1+309]
	083 Move TEMP, X8
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfEqual {90}
	087 Move X0, X1
	088 Call 0x1C5D684
	089 Move X1, X0
	090 Move X0, X22
	091 Call 0x1C17E00
	092 Move X1, X0
	093 Compare X1, 0
	094 JumpIfEqual {101}
	095 Move X8, [X20+32]
	096 Move X8, [X8+192]
	097 Move X3, [X8+368]
	098 Move X0, X19
	099 Move W2, W21
	100 Call 0x2962E9C, X0, X1, X2
	101 Move X8, 0x17BA000
	102 Move X8, [X8+120]
	103 Move X1, [X8]
	104 Move X0, X22
	105 Call 0x1C17E00
	106 Move X1, X0
	107 Compare X1, 0
	108 JumpIfEqual {115}
	109 Move X8, [X20+32]
	110 Move X8, [X8+192]
	111 Move X3, [X8+584]
	112 Move X0, X19
	113 Move W2, W21
	114 Call 0x2962F98, X0, X1, X2
	115 Move X8, 0x1790000
	116 Move X8, [X8+2512]
	117 Move X1, [X8]
	118 Move X0, X22
	119 Call 0x1C17E00
	120 Move X1, X0
	121 Compare X1, 0
	122 JumpIfEqual {193}
	123 Move X8, [X20+32]
	124 Move X8, [X8+192]
	125 Move X3, [X8+592]
	126 Move X0, X19
	127 Move W2, W21
	128 Call 0x2963084, X0, X1, X2
	129 Move W2, [X31+12]
	130 Move X0, X19
	131 Move W1, W31
	132 Call 0x29655AC, X0, X1, X2
	133 Move X20, [X31+64]
	134 Move X19, [X31+72]
	135 Move X22, [X31+48]
	136 Move X21, [X31+56]
	137 Move X24, [X31+32]
	138 Move X23, [X31+40]
	139 Move X26, [X31+16]
	140 Move X25, [X31+24]
	141 Move X30, [X31+80]
	142 Return 
	143 Call 0x1C17F28
	144 Call 0x1C17F20
	145 Move X0, 0x1795000
	146 Move X0, [X0+1320]
	147 Call 0x1C17D08
	148 Call 0x1C17F10
	149 Move X19, X0
	150 Move X0, 0x17B8000
	151 Move X0, [X0+1600]
	152 Call 0x1C17D08
	153 Move X1, X0
	154 Move X0, X19
	155 Move X2, X31
	156 Call ArgumentNullException..ctor, X0, X1
	157 Move X0, 0x1798000
	158 Move X0, [X0+1888]
	159 Call 0x1C17D08
	160 Call 0x1C17F10
	161 Move X19, X0
	162 Move X0, 0x179B000
	163 Move X0, [X0+304]
	164 Call 0x1C17D08
	165 Move X21, X0
	166 Move X0, 0x17BB000
	167 Move X0, [X0+616]
	168 Call 0x1C17D08
	169 Move X2, X0
	170 Move X0, X19
	171 Move X1, X21
	172 Move X3, X31
	173 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	174 Move X0, X19
	175 Move X1, X20
	176 Call 0x1C17DEC
	177 Call 0x1C17F20
	178 Move X0, 0x1798000
	179 Move X0, [X0+1400]
	180 Call 0x1C17D08
	181 Call 0x1C17F10
	182 Move X21, X0
	183 Move X0, 0x17BB000
	184 Move X0, [X0+624]
	185 Call 0x1C17D08
	186 Move X1, X0
	187 Move X0, X21
	188 Move X2, X31
	189 Call ArgumentException..ctor, X0, X1
	190 Move X0, X21
	191 Move X1, X20
	192 Call 0x1C17DEC
	193 Move X0, 0x1798000
	194 Move X0, [X0+1400]
	195 Call 0x1C17D08
	196 Call 0x1C17F10
	197 Move X21, X0
	198 Move X0, 0x17BB000
	199 Move X0, [X0+664]
	200 Call 0x1C17D08
	201 Move X22, X0
	202 Move X0, 0x17B8000
	203 Move X0, [X0+1600]
	204 Call 0x1C17D08
	205 Move X2, X0
	206 Move X0, X21
	207 Move X1, X22
	208 Move X3, X31
	209 Call ArgumentException..ctor, X0, X1, X2
	210 Move X0, X21
	211 Move X1, X20
	212 Call 0x1C17DEC
	213 Move X20, X0
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Move X0, X20
	216 Call 0x3EB2AD0
	217 Move X21, [X0]
	218 Call 0x3EB2AE0
	219 Move W2, [X31+12]
	220 Move X0, X19
	221 Move W1, W31
	222 Call 0x29655AC, X0, X1, X2
	223 Compare X21, 0
	224 JumpIfEqual {133}
	225 Move X0, X21
	226 Call 0x1C17F18
	227 Move X21, X31
	228 Move X20, X0
	229 Move W2, [X31+12]
	230 Move X0, X19
	231 Move W1, W31
	232 Call 0x29655AC, X0, X1, X2
	233 Compare X21, 0
	234 JumpIfNotEqual {237}
	235 Move X0, X20
	236 Call 0x1D2D690
	237 Move X0, X21
	238 Call 0x1C17F18
	239 Call 0x1991590

Method: System.Boolean System.Collections.ICollection.get_IsSynchronized()

Disassembly:
	0x02964B90 RET
	0x02964B94 STR X30, [X31 - 0x60]!

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Object System.Collections.ICollection.get_SyncRoot()

Disassembly:
	0x02964B98 STP X28, X27, [X31 + 0x10]
	0x02964B9C STP X26, X25, [X31 + 0x20]
	0x02964BA0 STP X24, X23, [X31 + 0x30]
	0x02964BA4 STP X22, X21, [X31 + 0x40]
	0x02964BA8 STP X20, X19, [X31 + 0x50]
	0x02964BAC ADRP X21, 0x1A76000
	0x02964BB0 LDRB W8, [X21 + 0xE59]
	0x02964BB4 MOV X20, X3
	0x02964BB8 MOV X19, X0
	0x02964BBC TBNZ X8, 0x0, 0x2964BEC
	0x02964BC0 ADRP X0, 0x1790000
	0x02964BC4 LDR X0, [X0 + 0xE58]
	0x02964BC8 BL 0x1C16CF4
	0x02964BCC ADRP X0, 0x178F000
	0x02964BD0 LDR X0, [X0 + 0x9D0]
	0x02964BD4 BL 0x1C16CF4
	0x02964BD8 ADRP X0, 0x1795000
	0x02964BDC LDR X0, [X0 + 0xCC0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0x1790000
	005 Move X0, [X0+2880]
	006 Move X19, X1
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X20, X0
	010 Move X0, 0x17BB000
	011 Move X0, [X0+672]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X20
	015 Move X2, X31
	016 Call NotSupportedException..ctor, X0, X1
	017 Move X0, X20
	018 Move X1, X19
	019 Call 0x1C17DEC

Method: System.Void GrowTable(System.Collections.Concurrent.ConcurrentDictionary`2/Tables<TKey, TValue> tables)

Disassembly:
	0x02964BE0 BL 0x1C16CF4
	0x02964BE4 MOVZ W8, 0x1
	0x02964BE8 STRB W8, [X21 + 0xE59]
	0x02964BEC LDR X8, [X20 + 0x20]
	0x02964BF0 ADRP X24, 0x1790000
	0x02964BF4 ADRP X23, 0x178F000
	0x02964BF8 LDR X21, [X19 + 0x28]
	0x02964BFC LDR X8, [X8 + 0xC0]
	0x02964C00 LDR W22, [X19 + 0x34]
	0x02964C04 LDR X0, [X8 + 0xB8]
	0x02964C08 LDRB W8, [X0 + 0x135]
	0x02964C0C LDR X24, [X24 + 0xE58]
	0x02964C10 LDR X23, [X23 + 0x9D0]
	0x02964C14 TBNZ X8, 0x0, 0x2964C1C
	0x02964C18 BL 0x1C5C684
	0x02964C1C MOV W1, W22
	0x02964C20 BL 0x1C16D6C
	0x02964C24 LDR X8, [X24]
	0x02964C28 LDR W1, [X19 + 0x30]
	0x02964C2C MOV X22, X0
	0x02964C30 MOV X0, X8
	0x02964C34 BL 0x1C16D6C
	0x02964C38 LDR X8, [X23]
	0x02964C3C LDR W1, [X19 + 0x30]
	0x02964C40 MOV X23, X0
	0x02964C44 MOV X0, X8
	0x02964C48 BL 0x1C16D6C
	0x02964C4C CBZ X0, 0x2964D44
	0x02964C50 LDR W8, [X0 + 0x18]
	0x02964C54 MOV X24, X0
	0x02964C58 CMP W8, 0x1
	0x02964C5C B.LT 0x2964CB8
	0x02964C60 ADRP X27, 0x1795000
	0x02964C64 LDR X27, [X27 + 0xCC0]
	0x02964C68 MOV X26, X31
	0x02964C6C ADD X28, X24, 0x20
	0x02964C70 LDR X0, [X27]
	0x02964C74 BL 0x1C16F10
	0x02964C78 MOV X1, X31
	0x02964C7C MOV X25, X0
	0x02964C80 BL 0x33BDD8C
	0x02964C84 CBZ X25, 0x2964C9C
	0x02964C88 LDR X8, [X24]
	0x02964C8C MOV X0, X25
	0x02964C90 LDR X1, [X8 + 0x40]
	0x02964C94 BL 0x1C16E00
	0x02964C98 CBZ X0, 0x2964D38
	0x02964C9C LDR W8, [X24 + 0x18]
	0x02964CA0 CMP X26, X8
	0x02964CA4 B.CS 0x2964D34
	0x02964CA8 STR X25, [X28, X26, LSL #3]
	0x02964CAC ADD X26, X26, 0x1
	0x02964CB0 CMP X26, W8, SXTW
	0x02964CB4 B.LT 0x2964C70
	0x02964CB8 LDR X8, [X20 + 0x20]
	0x02964CBC LDR X8, [X8 + 0xC0]
	0x02964CC0 LDR X0, [X8 + 0xA8]
	0x02964CC4 LDRB W8, [X0 + 0x135]
	0x02964CC8 TBNZ X8, 0x0, 0x2964CD0
	0x02964CCC BL 0x1C5C684
	0x02964CD0 BL 0x1C16F10
	0x02964CD4 LDR X8, [X20 + 0x20]
	0x02964CD8 MOV X1, X22
	0x02964CDC MOV X2, X24
	0x02964CE0 MOV X3, X23
	0x02964CE4 LDR X8, [X8 + 0xC0]
	0x02964CE8 MOV X25, X0
	0x02964CEC LDR X4, [X8 + 0xC0]
	0x02964CF0 BL 0x2676894
	0x02964CF4 BL 0x1C16D44
	0x02964CF8 STR X25, [X19 + 0x10]
	0x02964CFC LDR X8, [X20 + 0x20]
	0x02964D00 MOV X0, X19
	0x02964D04 MOV X1, X21
	0x02964D08 LDR X8, [X8 + 0xC0]
	0x02964D0C LDR X2, [X8 + 0x2B8]
	0x02964D10 BL 0x29608E8
	0x02964D14 STR X31, [X19 + 0x28]
	0x02964D18 LDP X20, X19, [X31 + 0x50]
	0x02964D1C LDP X22, X21, [X31 + 0x40]
	0x02964D20 LDP X24, X23, [X31 + 0x30]
	0x02964D24 LDP X26, X25, [X31 + 0x20]
	0x02964D28 LDP X28, X27, [X31 + 0x10]
	0x02964D2C LDR X30, [X31], #0x60
	0x02964D30 RET
	0x02964D34 BL 0x1C16F28
	0x02964D38 BL 0x1C16F44
	0x02964D3C MOV X1, X31
	0x02964D40 BL 0x1C16DEC
	0x02964D44 BL 0x1C16F20
	0x02964D48 STP X30, X19, [X31 - 0x10]!
	0x02964D4C MOV X19, X0
	0x02964D50 LDR X0, [X0 + 0x20]
	0x02964D54 LDRB W8, [X0 + 0x135]
	0x02964D58 TBNZ X8, 0x0, 0x2964D60
	0x02964D5C BL 0x1C5C684
	0x02964D60 LDR X8, [X0 + 0xC0]
	0x02964D64 LDR X0, [X8 + 0x2C0]
	0x02964D68 BL 0x2960710
	0x02964D6C LDR X8, [X19 + 0x20]
	0x02964D70 MOV W19, W0
	0x02964D74 LDRB W9, [X8 + 0x135]
	0x02964D78 TBNZ X9, 0x0, 0x2964D88
	0x02964D7C MOV X0, X8
	0x02964D80 BL 0x1C5C684
	0x02964D84 MOV X8, X0
	0x02964D88 LDR X8, [X8 + 0xC0]
	0x02964D8C LDR X0, [X8 + 0x10]
	0x02964D90 LDRB W8, [X0 + 0x135]
	0x02964D94 TBNZ X8, 0x0, 0x2964D9C
	0x02964D98 BL 0x1C5C684
	0x02964D9C LDR X8, [X0 + 0xB8]
	0x02964DA0 AND W9, W19, 0x1
	0x02964DA4 STRB W9, [X8]
	0x02964DA8 LDP X30, X19, [X31], #0x10
	0x02964DAC RET
	0x02964DB0 STR X30, [X31 - 0x20]!
	0x02964DB4 STP X20, X19, [X31 + 0x10]
	0x02964DB8 ADRP X20, 0x1A76000
	0x02964DBC LDRB W8, [X20 + 0xE5A]
	0x02964DC0 MOV X19, X0
	0x02964DC4 TBNZ X8, 0x0, 0x2964DDC
	0x02964DC8 ADRP X0, 0x178F000
	0x02964DCC LDR X0, [X0 + 0x6C0]
	0x02964DD0 BL 0x1C16CF4
	0x02964DD4 MOVZ W8, 0x1
	0x02964DD8 STRB W8, [X20 + 0xE5A]
	0x02964DDC LDR X0, [X19 + 0x20]
	0x02964DE0 ADRP X20, 0x178F000
	0x02964DE4 LDRB W8, [X0 + 0x135]
	0x02964DE8 LDR X20, [X20 + 0x6C0]
	0x02964DEC TBNZ X8, 0x0, 0x2964DF4
	0x02964DF0 BL 0x1C5C684
	0x02964DF4 LDR X8, [X20]
	0x02964DF8 LDR X9, [X0 + 0xC0]
	0x02964DFC LDR W10, [X8 + 0xE0]
	0x02964E00 LDR X19, [X9]
	0x02964E04 CBNZ W10, 0x2964E10
	0x02964E08 MOV X0, X8
	0x02964E0C BL 0x1C16DFC
	0x02964E10 MOV X0, X19
	0x02964E14 MOV X1, X31
	0x02964E18 BL 0x338C698
	0x02964E1C CBZ X0, 0x2964EA0
	0x02964E20 MOV X1, X31
	0x02964E24 MOV X19, X0
	0x02964E28 BL 0x33970C4
	0x02964E2C TBZ X0, 0x0, 0x2964E70
	0x02964E30 LDR X0, [X20]
	0x02964E34 LDR W8, [X0 + 0xE0]
	0x02964E38 CBNZ W8, 0x2964E40
	0x02964E3C BL 0x1C16DFC
	0x02964E40 MOV X0, X19
	0x02964E44 MOV X1, X31
	0x02964E48 BL 0x3397AFC
	0x02964E4C MOV W8, W0
	0x02964E50 CMP W0, 0xE
	0x02964E54 MOV W0, W31
	0x02964E58 B.HI 0x2964E74
	0x02964E5C MOVZ W9, 0x1
	0x02964E60 LSLV W8, W9, W8
	0x02964E64 MOVZ W9, 0x27F8
	0x02964E68 ANDS W31, W8, W9, 0x0
	0x02964E6C B.EQ 0x2964E80
	0x02964E70 MOVZ W0, 0x1
	0x02964E74 LDP X20, X19, [X31 + 0x10]
	0x02964E78 LDR X30, [X31], #0x20
	0x02964E7C RET
	0x02964E80 MOVZ W9, 0x5800
	0x02964E84 ANDS W31, W8, W9, 0x0
	0x02964E88 B.EQ 0x2964E74
	0x02964E8C MOV X0, X31
	0x02964E90 BL 0x33C67AC
	0x02964E94 CMP W0, 0x8
	0x02964E98 CSET W0, EQ
	0x02964E9C B 0x2964E74
	0x02964EA0 BL 0x1C16F20
	0x02964EA4 STR X30, [X31 - 0x20]!
	0x02964EA8 STP X20, X19, [X31 + 0x10]
	0x02964EAC LDR X8, [X1 + 0x20]
	0x02964EB0 MOV X20, X1
	0x02964EB4 MOV X19, X0
	0x02964EB8 LDR X8, [X8 + 0xC0]
	0x02964EBC LDR X8, [X8 + 0x10]
	0x02964EC0 LDRB W9, [X8 + 0x135]
	0x02964EC4 TBNZ X9, 0x0, 0x2964ED4
	0x02964EC8 MOV X0, X8
	0x02964ECC BL 0x1C5C684
	0x02964ED0 MOV X8, X0
	0x02964ED4 LDR W9, [X8 + 0xE0]
	0x02964ED8 CBNZ W9, 0x2964EE4
	0x02964EDC MOV X0, X8
	0x02964EE0 BL 0x1C16DFC
	0x02964EE4 BL 0x2968FDC
	0x02964EE8 LDR X8, [X20 + 0x20]
	0x02964EEC MOV W1, W0
	0x02964EF0 MOV X0, X19
	0x02964EF4 LDP X20, X19, [X31 + 0x10]
	0x02964EF8 LDR X8, [X8 + 0xC0]
	0x02964EFC MOVZ W2, 0x1F
	0x02964F00 MOVZ W3, 0x1
	0x02964F04 MOV X4, X31
	0x02964F08 LDR X5, [X8 + 0x18]
	0x02964F0C LDR X30, [X31], #0x20
	0x02964F10 B 0x296543C
	0x02964F14 STP X30, X21, [X31 - 0x20]!
	0x02964F18 STP X20, X19, [X31 + 0x10]
	0x02964F1C LDR X8, [X2 + 0x20]
	0x02964F20 MOV X21, X2
	0x02964F24 MOV X19, X1
	0x02964F28 MOV X20, X0
	0x02964F2C LDR X8, [X8 + 0xC0]
	0x02964F30 LDR X8, [X8 + 0x10]
	0x02964F34 LDRB W9, [X8 + 0x135]
	0x02964F38 TBNZ X9, 0x0, 0x2964F48
	0x02964F3C MOV X0, X8
	0x02964F40 BL 0x1C5C684
	0x02964F44 MOV X8, X0
	0x02964F48 LDR W9, [X8 + 0xE0]
	0x02964F4C CBNZ W9, 0x2964F58
	0x02964F50 MOV X0, X8
	0x02964F54 BL 0x1C16DFC
	0x02964F58 BL 0x2968FDC
	0x02964F5C LDR X8, [X21 + 0x20]
	0x02964F60 MOV W1, W0
	0x02964F64 MOV X0, X20
	0x02964F68 MOV X4, X19
	0x02964F6C LDR X8, [X8 + 0xC0]
	0x02964F70 LDP X20, X19, [X31 + 0x10]
	0x02964F74 MOVZ W2, 0x1F
	0x02964F78 MOVZ W3, 0x1
	0x02964F7C LDR X5, [X8 + 0x18]
	0x02964F80 LDP X30, X21, [X31], #0x20
	0x02964F84 B 0x296543C
	0x02964F88 SUB X31, X31, 0xC0
	0x02964F8C STR X30, [X31 + 0x60]
	0x02964F90 STP X28, X27, [X31 + 0x70]
	0x02964F94 STP X26, X25, [X31 + 0x80]
	0x02964F98 STP X24, X23, [X31 + 0x90]
	0x02964F9C STP X22, X21, [X31 + 0xA0]
	0x02964FA0 STP X20, X19, [X31 + 0xB0]
	0x02964FA4 MRS X24, 0xC000
	0x02964FA8 LDR X8, [X24 + 0x28]
	0x02964FAC ADRP X22, 0x1A76000
	0x02964FB0 MOV X21, X2
	0x02964FB4 MOV X20, X1
	0x02964FB8 STR X8, [X31 + 0x58]
	0x02964FBC LDRB W8, [X22 + 0xE5B]
	0x02964FC0 MOV X19, X0
	0x02964FC4 TBNZ X8, 0x0, 0x2964FE8
	0x02964FC8 ADRP X0, 0x178F000
	0x02964FCC LDR X0, [X0 + 0xE00]
	0x02964FD0 BL 0x1C16CF4
	0x02964FD4 ADRP X0, 0x178F000
	0x02964FD8 LDR X0, [X0 + 0xE18]
	0x02964FDC BL 0x1C16CF4
	0x02964FE0 MOVZ W8, 0x1
	0x02964FE4 STRB W8, [X22 + 0xE5B]
	0x02964FE8 STP X31, X31, [X31 + 0x40]
	0x02964FEC STR X31, [X31 + 0x50]
	0x02964FF0 STP X31, X31, [X31 + 0x20]
	0x02964FF4 STR W31, [X31 + 0x38]
	0x02964FF8 STR X31, [X31 + 0x30]
	0x02964FFC CBZ X20, 0x296536C
	0x02965000 LDR X8, [X21 + 0x20]
	0x02965004 LDR X8, [X8 + 0xC0]
	0x02965008 LDR X1, [X8 + 0x28]
	0x0296500C LDRB W8, [X1 + 0x135]
	0x02965010 TBNZ X8, 0x0, 0x2965020
	0x02965014 MOV X0, X1
	0x02965018 BL 0x1C5C684
	0x0296501C MOV X1, X0
	0x02965020 LDR X8, [X20]
	0x02965024 LDRH W9, [X8 + 0x12E]
	0x02965028 CBZ X9, 0x296504C
	0x0296502C LDR X10, [X8 + 0xB0]
	0x02965030 ADD X10, X10, 0x8
	0x02965034 LDUR X11, [X10 - 0x8]
	0x02965038 CMP X11, X1
	0x0296503C B.EQ 0x296505C
	0x02965040 SUBS X9, X9, 0x1
	0x02965044 ADD X10, X10, 0x10
	0x02965048 B.NE 0x2965034
	0x0296504C MOV X0, X20
	0x02965050 MOV W2, W31
	0x02965054 BL 0x1C5C788
	0x02965058 B 0x2965068
	0x0296505C LDRSW X9, [X10]
	0x02965060 ADD X8, X8, X9, 0x4, LSL
	0x02965064 ADD X0, X8, 0x138
	0x02965068 LDP X8, X1, [X0]
	0x0296506C ADRP X25, 0x178E000
	0x02965070 LDR X25, [X25 + 0xE00]
	0x02965074 MOV X0, X20
	0x02965078 BLR X8
	0x0296507C MOV X20, X0
	0x02965080 CBZ X0, 0x2965370
	0x02965084 ADRP X28, 0x178E000
	0x02965088 LDR X28, [X28 + 0xE18]
	0x0296508C ADD X8, X31, 0x0
	0x02965090 ADD X9, X31, 0x20
	0x02965094 ORR X26, X8, 0x7
	0x02965098 ORR X27, X9, 0x7
	0x0296509C LDR X8, [X20]
	0x029650A0 LDR X1, [X28]
	0x029650A4 LDRH W9, [X8 + 0x12E]
	0x029650A8 CBZ X9, 0x29650CC
	0x029650AC LDR X10, [X8 + 0xB0]
	0x029650B0 ADD X10, X10, 0x8
	0x029650B4 LDUR X11, [X10 - 0x8]
	0x029650B8 CMP X11, X1
	0x029650BC B.EQ 0x29650DC
	0x029650C0 SUBS X9, X9, 0x1
	0x029650C4 ADD X10, X10, 0x10
	0x029650C8 B.NE 0x29650B4
	0x029650CC MOV X0, X20
	0x029650D0 MOV W2, W31
	0x029650D4 BL 0x1C5C788
	0x029650D8 B 0x29650E8
	0x029650DC LDRSW X9, [X10]
	0x029650E0 ADD X8, X8, X9, 0x4, LSL
	0x029650E4 ADD X0, X8, 0x138
	0x029650E8 LDP X8, X1, [X0]
	0x029650EC MOV X0, X20
	0x029650F0 BLR X8
	0x029650F4 TBZ X0, 0x0, 0x2965284
	0x029650F8 LDR X8, [X21 + 0x20]
	0x029650FC LDR X8, [X8 + 0xC0]
	0x02965100 LDR X1, [X8 + 0x38]
	0x02965104 LDRB W8, [X1 + 0x135]
	0x02965108 TBNZ X8, 0x0, 0x2965118
	0x0296510C MOV X0, X1
	0x02965110 BL 0x1C5C684
	0x02965114 MOV X1, X0
	0x02965118 LDR X8, [X20]
	0x0296511C LDRH W9, [X8 + 0x12E]
	0x02965120 CBZ X9, 0x2965144
	0x02965124 LDR X10, [X8 + 0xB0]
	0x02965128 ADD X10, X10, 0x8
	0x0296512C LDUR X11, [X10 - 0x8]
	0x02965130 CMP X11, X1
	0x02965134 B.EQ 0x2965154
	0x02965138 SUBS X9, X9, 0x1
	0x0296513C ADD X10, X10, 0x10
	0x02965140 B.NE 0x296512C
	0x02965144 MOV X0, X20
	0x02965148 MOV W2, W31
	0x0296514C BL 0x1C5C788
	0x02965150 B 0x2965160
	0x02965154 LDRSW X9, [X10]
	0x02965158 ADD X8, X8, X9, 0x4, LSL
	0x0296515C ADD X0, X8, 0x138
	0x02965160 LDP X9, X1, [X0]
	0x02965164 ADD X8, X31, 0x0
	0x02965168 MOV X0, X20
	0x0296516C BLR X9
	0x02965170 LDR V0, [X26]
	0x02965174 LDUR V1, [X26 + 0xC]
	0x02965178 LDR W22, [X31]
	0x0296517C STR V0, [X31 + 0x2]
	0x02965180 STUR V1, [X31 + 0x2C]
	0x02965184 LDR X23, [X19 + 0x18]
	0x02965188 CBZ X23, 0x2965368
	0x0296518C LDR X8, [X21 + 0x20]
	0x02965190 LDR X8, [X8 + 0xC0]
	0x02965194 LDR X1, [X8 + 0x20]
	0x02965198 LDRB W8, [X1 + 0x135]
	0x0296519C TBNZ X8, 0x0, 0x29651AC
	0x029651A0 MOV X0, X1
	0x029651A4 BL 0x1C5C684
	0x029651A8 MOV X1, X0
	0x029651AC LDR X8, [X23]
	0x029651B0 LDRH W9, [X8 + 0x12E]
	0x029651B4 CBZ X9, 0x29651D8
	0x029651B8 LDR X10, [X8 + 0xB0]
	0x029651BC ADD X10, X10, 0x8
	0x029651C0 LDUR X11, [X10 - 0x8]
	0x029651C4 CMP X11, X1
	0x029651C8 B.EQ 0x29651E8
	0x029651CC SUBS X9, X9, 0x1
	0x029651D0 ADD X10, X10, 0x10
	0x029651D4 B.NE 0x29651C0
	0x029651D8 MOVZ W2, 0x1
	0x029651DC MOV X0, X23
	0x029651E0 BL 0x1C5C788
	0x029651E4 B 0x29651F8
	0x029651E8 LDR W9, [X10]
	0x029651EC ADD W9, W9, 0x1
	0x029651F0 ADD X8, X8, W9, 0x4, SXTW
	0x029651F4 ADD X0, X8, 0x138
	0x029651F8 LDP X8, X2, [X0]
	0x029651FC MOV X0, X23
	0x02965200 MOV W1, W22
	0x02965204 BLR X8
	0x02965208 LDR X8, [X21 + 0x20]
	0x0296520C LDR X9, [X27 + 0x10]
	0x02965210 LDR V0, [X27]
	0x02965214 MOV W2, W0
	0x02965218 LDR X8, [X8 + 0xC0]
	0x0296521C LDR X7, [X8 + 0x90]
	0x02965220 STR X9, [X31 + 0x10]
	0x02965224 STR V0, [X31]
	0x02965228 ADD X3, X31, 0x0
	0x0296522C ADD X6, X31, 0x40
	0x02965230 MOV X0, X19
	0x02965234 MOV W1, W22
	0x02965238 MOV W4, W31
	0x0296523C MOV W5, W31
	0x02965240 BL 0x2966ABC
	0x02965244 TBNZ X0, 0x0, 0x296509C
	0x02965248 ADRP X0, 0x1796000
	0x0296524C LDR X0, [X0 + 0x578]
	0x02965250 BL 0x1C16D08
	0x02965254 BL 0x1C16F10
	0x02965258 MOV X22, X0
	0x0296525C ADRP X0, 0x17B9000
	0x02965260 LDR X0, [X0 + 0x248]
	0x02965264 BL 0x1C16D08
	0x02965268 MOV X1, X0
	0x0296526C MOV X0, X22
	0x02965270 MOV X2, X31
	0x02965274 BL 0x3314A68
	0x02965278 MOV X0, X22
	0x0296527C MOV X1, X21
	0x02965280 BL 0x1C16DEC
	0x02965284 MOV X21, X31
	0x02965288 MOVZ W22, 0x7
	0x0296528C CBZ X20, 0x29652E8
	0x02965290 LDR X8, [X20]
	0x02965294 LDR X1, [X25]
	0x02965298 LDRH W9, [X8 + 0x12E]
	0x0296529C CBZ X9, 0x29652C0
	0x029652A0 LDR X10, [X8 + 0xB0]
	0x029652A4 ADD X10, X10, 0x8
	0x029652A8 LDUR X11, [X10 - 0x8]
	0x029652AC CMP X11, X1
	0x029652B0 B.EQ 0x29652D0
	0x029652B4 SUBS X9, X9, 0x1
	0x029652B8 ADD X10, X10, 0x10
	0x029652BC B.NE 0x29652A8
	0x029652C0 MOV X0, X20
	0x029652C4 MOV W2, W31
	0x029652C8 BL 0x1C5C788
	0x029652CC B 0x29652DC
	0x029652D0 LDRSW X9, [X10]
	0x029652D4 ADD X8, X8, X9, 0x4, LSL
	0x029652D8 ADD X0, X8, 0x138
	0x029652DC LDP X8, X1, [X0]
	0x029652E0 MOV X0, X20
	0x029652E4 BLR X8
	0x029652E8 CBNZ X21, 0x2965374
	0x029652EC CMP W22, 0x7
	0x029652F0 B.EQ 0x29652F8
	0x029652F4 CBNZ W22, 0x2965338
	0x029652F8 LDR W8, [X19 + 0x24]
	0x029652FC CBNZ W8, 0x2965338
	0x02965300 LDR X20, [X19 + 0x10]
	0x02965304 BL 0x1C16D44
	0x02965308 CBZ X20, 0x296536C
	0x0296530C LDR X20, [X20 + 0x10]
	0x02965310 CBZ X20, 0x296536C
	0x02965314 LDR X21, [X19 + 0x10]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X19, 0x1A77000
	015 Move W8, [X19+3670]
	016 Move X22, X1
	017 Move [X31+48], X2
	018 Move [X31+8], X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0x1791000
	024 Move X0, [X0+3672]
	025 Call 0x1C17CF4
	026 Move X0, 0x1790000
	027 Move X0, [X0+1448]
	028 Call 0x1C17CF4
	029 Move X0, 0x1790000
	030 Move X0, [X0+2512]
	031 Call 0x1C17CF4
	032 Move X0, 0x1796000
	033 Move X0, [X0+3264]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X19+3670], W8
	037 Move [X31+60], W31
	038 Move X19, [X31+8]
	039 Add X3, X31, 60
	040 Move W2, 1
	041 Move W1, W31
	042 Move X0, X19
	043 Call 0x2965490, X0, X1, X2, X3
	044 Move X19, [X19+16]
	045 Call 0x1C17D44
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Compare X22, 0
	048 JumpIfEqual {413}
	049 Move X20, X31
	050 Move X19, X31
	051 Move X21, [X22+32]
	052 Call 0x1C17D44
	053 Compare X21, 0
	054 JumpIfEqual {402}
	055 NotImplemented "Instruction LDRSW not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X21, [X22+32]
	058 Call 0x1C17D44
	059 Compare X21, 0
	060 JumpIfEqual {403}
	061 Move W8, [X21+24]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Add X8, X21, X20
	064 NotImplemented "Instruction LDRSW not yet implemented."
	065 Add X20, X20, 1
	066 Add X19, X19, X8
	067 Move X8, [X22+16]
	068 Compare X8, 0
	069 JumpIfEqual {414}
	070 Move X14, [X8+24]
	071 Add W8, W14, 3
	072 NotImplemented "Instruction CMP not yet implemented."
	073 NotImplemented "Instruction CSEL not yet implemented."
	074 NotImplemented "Instruction SBFM not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X10, [X31+8]
	077 Move TEMP, 0x80000000
	078 Not TEMP
	079 Move W9, TEMP
	080 Move W8, [X10+36]
	081 Move W8, W8
	082 ShiftRight W8, 31
	083 And W8, W8, 0x3FFFFFFF
	084 NotImplemented "Instruction CMP not yet implemented."
	085 NotImplemented "Instruction CSEL not yet implemented."
	086 Move [X10+36], W8
	087 Move X8, 0x40000000
	088 Move X9, INVALID
	089 Add X8, X8, X14
	090 NotImplemented "Instruction MOVK not yet implemented."
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move TEMP, 0x80100000
	093 Not TEMP
	094 Move W8, TEMP
	095 Move [X31+16], X22
	096 Move W23, 1
	097 Move W9, 0x5556
	098 Move W10, 0x6667
	099 Move W11, 0x6DB7
	100 Move W12, 0x2492
	101 Move W13, 0x4925
	102 NotImplemented "Instruction MOVK not yet implemented."
	103 NotImplemented "Instruction MOVK not yet implemented."
	104 NotImplemented "Instruction MOVK not yet implemented."
	105 NotImplemented "Instruction MOVK not yet implemented."
	106 NotImplemented "Instruction MOVK not yet implemented."
	107 NotImplemented "Instruction BFM not yet implemented."
	108 Or W14, W31, 0x7FFFFFFE
	109 NotImplemented "Instruction MADD not yet implemented."
	110 NotImplemented "Instruction CMP not yet implemented."
	111 NotImplemented "Instruction SMADDL not yet implemented."
	112 Move X16, X15
	113 ShiftRight X16, 63
	114 And X16, X16, 0x7FFFFFFF
	115 Move X15, X15
	116 ShiftRight X15, 32
	117 And X15, X15, 0x7FFFFFFF
	118 Add W15, W15, W16
	119 Add W15, W15, W15
	120 Subtract W15, W23, W15
	121 Compare W15, 0
	122 JumpIfEqual {133}
	123 NotImplemented "Instruction SMADDL not yet implemented."
	124 Move X16, X15
	125 ShiftRight X16, 63
	126 And X16, X16, 0x7FFFFFFF
	127 NotImplemented "Instruction SBFM not yet implemented."
	128 Add W15, W15, W16
	129 Add W15, W15, W15
	130 Subtract W15, W23, W15
	131 Compare W15, 0
	132 JumpIfNotEqual {135}
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Add W23, W23, 2
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move X9, [X31+8]
	137 Move TEMP, 0x80000000
	138 Not TEMP
	139 Move W8, TEMP
	140 Move TEMP, 0x80100000
	141 Not TEMP
	142 Move W23, TEMP
	143 Move [X9+36], W8
	144 Move X8, [X31+16]
	145 Move X8, [X8+24]
	146 Compare X8, 0
	147 JumpIfEqual {418}
	148 Move W2, [X8+24]
	149 Move X19, [X31+8]
	150 Add X3, X31, 60
	151 Move W1, 1
	152 Move X0, X19
	153 Call 0x2965490, X0, X1, X2, X3
	154 Move X9, [X31+16]
	155 Move W8, [X19+32]
	156 Move X9, [X9+24]
	157 Move [X31+40], X9
	158 Compare W8, 0
	159 JumpIfEqual {216}
	160 Compare X9, 0
	161 JumpIfEqual {421}
	162 Move W8, [X9+24]
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Move X9, 0x1790000
	165 Move X9, [X9+2512]
	166 Move W1, W8
	167 ShiftRight W1, 31
	168 And W1, W1, 0x3FFFFFFF
	169 Move X0, [X9]
	170 Call 0x1C17D6C
	171 Move [X31+40], X0
	172 Move X8, [X31+16]
	173 Move X0, [X8+24]
	174 Compare X0, 0
	175 JumpIfEqual {422}
	176 Move W4, [X0+24]
	177 Move X2, [X31+40]
	178 Move W1, W31
	179 Move W3, W31
	180 Move X5, X31
	181 Call Array.Copy, X0, X1, X2, X3, X4
	182 Move X8, [X31+16]
	183 Move X8, [X8+24]
	184 Compare X8, 0
	185 JumpIfEqual {423}
	186 Move X9, [X31+40]
	187 Compare X9, 0
	188 JumpIfEqual {424}
	189 NotImplemented "Instruction LDRSW not yet implemented."
	190 NotImplemented "Instruction LDRSW not yet implemented."
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Move X8, [X31+40]
	193 Move X21, 0x1796000
	194 Move X21, [X21+3264]
	195 Add X20, X8, 32
	196 Move X0, [X21]
	197 Call 0x1C17F10
	198 Move X24, X0
	199 Move X1, X31
	200 Call Object..ctor, X0
	201 Compare X24, 0
	202 JumpIfEqual {210}
	203 Move X8, [X31+40]
	204 Move X8, [X8]
	205 Move X1, [X8+64]
	206 Move X0, X24
	207 Call 0x1C17E00
	208 Compare X0, 0
	209 JumpIfEqual {410}
	210 Move X8, [X31+40]
	211 Move X8, [X8+24]
	212 NotImplemented "Instruction CMP not yet implemented."
	213 Move [X20], X24
	214 Add X19, X19, 1
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Move X8, [X31+48]
	217 Move X8, [X8+32]
	218 Move X8, [X8+192]
	219 Move X0, [X8+184]
	220 Move W8, [X0+309]
	221 Move TEMP, X8
	222 And TEMP, TEMP, 1
	223 Compare TEMP, 1
	224 JumpIfEqual {226}
	225 Call 0x1C5D684
	226 Move W1, W23
	227 Call 0x1C17D6C
	228 Move X9, [X31+40]
	229 Compare X9, 0
	230 JumpIfEqual {419}
	231 Move X8, 0x1791000
	232 Move X8, [X8+3672]
	233 Move X23, X0
	234 Move W1, [X9+24]
	235 Move X0, [X8]
	236 Call 0x1C17D6C
	237 Move [X31+32], X0
	238 Move X8, [X31+16]
	239 Move X8, [X8+16]
	240 Compare X8, 0
	241 JumpIfEqual {334}
	242 Move X10, X31
	243 Move W9, [X8+24]
	244 NotImplemented "Instruction CMP not yet implemented."
	245 NotImplemented "Instruction CMP not yet implemented."
	246 Add X9, X8, X10
	247 Move X19, [X9+32]
	248 Move [X31+24], X10
	249 Compare X19, 0
	250 JumpIfEqual {330}
	251 Move X22, [X19+40]
	252 Call 0x1C17D44
	253 Compare X23, 0
	254 JumpIfEqual {398}
	255 Move X8, [X31+48]
	256 Move W20, [X19+48]
	257 Move X8, [X8+32]
	258 Move X8, [X8+192]
	259 Move X0, [X8+16]
	260 Move W8, [X0+309]
	261 Move TEMP, X8
	262 And TEMP, TEMP, 1
	263 Compare TEMP, 1
	264 JumpIfEqual {266}
	265 Call 0x1C5D684
	266 Move W8, [X0+224]
	267 Compare W8, 0
	268 JumpIfNotEqual {270}
	269 Call 0x1C17DFC
	270 Move W8, [X23+24]
	271 And W9, W20, 0x7FFFFFFF
	272 NotImplemented "Instruction SDIV not yet implemented."
	273 NotImplemented "Instruction MSUB not yet implemented."
	274 NotImplemented "Instruction CMP not yet implemented."
	275 Move X8, [X31+40]
	276 Add X24, X23, W21
	277 Move X29, [X19+16]
	278 Move X27, [X19+24]
	279 Move X25, [X19+32]
	280 Move W20, [X8+24]
	281 Move X8, [X31+48]
	282 Move W26, [X19+48]
	283 Move X8, [X8+32]
	284 Move X8, [X8+192]
	285 Add X24, X24, 32
	286 Move X28, [X24]
	287 Move X0, [X8+248]
	288 Move W8, [X0+309]
	289 Move TEMP, X8
	290 And TEMP, TEMP, 1
	291 Compare TEMP, 1
	292 JumpIfEqual {294}
	293 Call 0x1C5D684
	294 Call 0x1C17F10
	295 Move X8, [X31+48]
	296 Move X19, X0
	297 Move X8, [X8+32]
	298 Move X8, [X8+192]
	299 Move X6, [X8+416]
	300 Move X1, X29
	301 Move X2, X27
	302 Move X3, X25
	303 Move W4, W26
	304 Move X5, X28
	305 Call 0x2426134, X0, X1, X2, X3, X4
	306 Move W8, [X23+24]
	307 NotImplemented "Instruction CMP not yet implemented."
	308 Move X10, [X31+32]
	309 Move [X24], X19
	310 Compare X10, 0
	311 JumpIfEqual {397}
	312 Move W9, [X10+24]
	313 NotImplemented "Instruction SDIV not yet implemented."
	314 NotImplemented "Instruction MSUB not yet implemented."
	315 NotImplemented "Instruction CMP not yet implemented."
	316 Add X8, X10, W8
	317 Add X8, X8, 32
	318 Move W9, [X8]
	319 Move TEMP, 0x80000000
	320 Not TEMP
	321 Move W10, TEMP
	322 NotImplemented "Instruction CMP not yet implemented."
	323 Add W9, W9, 1
	324 Move X19, X22
	325 Move [X8], W9
	326 Compare X22, 0
	327 JumpIfNotEqual {251}
	328 Move X8, [X31+16]
	329 Move X8, [X8+16]
	330 Move X10, [X31+24]
	331 Add X10, X10, 1
	332 Compare X8, 0
	333 JumpIfNotEqual {243}
	334 Call 0x1C17F20
	335 Compare X23, 0
	336 JumpIfEqual {420}
	337 Move X8, 0x178F000
	338 Move X8, [X8+1448]
	339 Move X0, [X8]
	340 Move W8, [X0+224]
	341 Compare W8, 0
	342 JumpIfNotEqual {344}
	343 Call 0x1C17DFC
	344 Move X9, [X31+40]
	345 Move W8, [X23+24]
	346 Move W9, [X9+24]
	347 NotImplemented "Instruction SDIV not yet implemented."
	348 Move W0, 1
	349 Move X2, X31
	350 Call Math.Max, X0, X1
	351 Move X8, [X31+8]
	352 Move [X8+36], W0
	353 Move X8, [X31+48]
	354 Move X8, [X8+32]
	355 Move X8, [X8+192]
	356 Move X0, [X8+168]
	357 Move W8, [X0+309]
	358 Move TEMP, X8
	359 And TEMP, TEMP, 1
	360 Compare TEMP, 1
	361 JumpIfEqual {363}
	362 Call 0x1C5D684
	363 Call 0x1C17F10
	364 Move X2, [X31+40]
	365 Move X8, [X31+48]
	366 Move X19, X0
	367 Move X8, [X8+32]
	368 Move X8, [X8+192]
	369 Move X4, [X8+192]
	370 Move X3, [X31+32]
	371 Move X1, X23
	372 Call 0x2677894, X0, X1, X2, X3
	373 Call 0x1C17D44
	374 Move X8, [X31+8]
	375 Move [X8+16], X19
	376 Move W2, [X31+60]
	377 Move X0, [X31+8]
	378 Move W1, W31
	379 Call 0x29655AC, X0, X1, X2
	380 Move X20, [X31+144]
	381 Move X19, [X31+152]
	382 Move X22, [X31+128]
	383 Move X21, [X31+136]
	384 Move X24, [X31+112]
	385 Move X23, [X31+120]
	386 Move X26, [X31+96]
	387 Move X25, [X31+104]
	388 Move X28, [X31+80]
	389 Move X27, [X31+88]
	390 Move X29, [X31+64]
	391 Move X30, [X31+72]
	392 Add X31, X31, 160
	393 Return 
	394 Call 0x1C17F28
	395 Call 0x1C17F28
	396 Call 0x1C17F28
	397 Call 0x1C17F20
	398 Call 0x1C17F20
	399 Call 0x1C17F30
	400 Move X1, [X31+48]
	401 Call 0x1C17DEC
	402 Call 0x1C17F20
	403 Call 0x1C17F20
	404 Call 0x1C17F28
	405 Call 0x1C17F30
	406 Move X1, [X31+48]
	407 Call 0x1C17DEC
	408 Call 0x1C17F28
	409 Call 0x1C17F28
	410 Call 0x1C17F44
	411 Move X1, X31
	412 Call 0x1C17DEC
	413 Call 0x1C17F20
	414 Call 0x1C17F20
	415 Call 0x1C17F30
	416 Move X1, [X31+48]
	417 Call 0x1C17DEC
	418 Call 0x1C17F20
	419 Call 0x1C17F20
	420 Call 0x1C17F20
	421 Call 0x1C17F20
	422 Call 0x1C17F20
	423 Call 0x1C17F20
	424 Call 0x1C17F20
	425 Move X22, X1
	426 NotImplemented "Instruction CMP not yet implemented."
	427 Call 0x3EB2AD0
	428 Move X22, X0
	429 Move X0, 0x178F000
	430 Move X0, [X0+2136]
	431 Call 0x1C17D08
	432 Move X8, [X22]
	433 Move X1, [X8]
	434 Call 0x1C18270
	435 Move TEMP, X0
	436 And TEMP, TEMP, 1
	437 Compare TEMP, 1
	438 JumpIfNotEqual {440}
	439 Call 0x3EB2AE0
	440 Move W0, 8
	441 Call 0x3EB2AF0
	442 Move X8, [X22]
	443 Move [X0], X8
	444 Move X1, 0x1550000
	445 Add X1, X1, 3672
	446 Move X2, X31
	447 Call 0x3EB2B00
	448 Move X22, X1
	449 Move X19, X0
	450 Move X22, X1
	451 Move X19, X0
	452 Call 0x3EB2AE0
	453 Move X0, X19
	454 Move X22, X1
	455 NotImplemented "Instruction CMP not yet implemented."
	456 Call 0x3EB2AD0
	457 Move X20, [X0]
	458 Call 0x3EB2AE0
	459 Move W2, [X31+60]
	460 Move X0, [X31+8]
	461 Move W1, W31
	462 Call 0x29655AC, X0, X1, X2
	463 Compare X20, 0
	464 JumpIfEqual {380}
	465 Move X0, X20
	466 Call 0x1C17F18
	467 Move X19, X0
	468 Move X20, X31
	469 Move X19, X0
	470 Move W2, [X31+60]
	471 Move X0, [X31+8]
	472 Move W1, W31
	473 Call 0x29655AC, X0, X1, X2
	474 Compare X20, 0
	475 JumpIfNotEqual {478}
	476 Move X0, X19
	477 Call 0x1D2D690
	478 Move X0, X20
	479 Call 0x1C17F18
	480 Call 0x1991590

Method: System.Int32 GetBucket(System.Int32 hashcode, System.Int32 bucketCount)

Disassembly:
	0x02965318 BL 0x1C16D44
	0x0296531C CBZ X21, 0x296536C
	0x02965320 LDR X8, [X21 + 0x18]
	0x02965324 CBZ X8, 0x296536C

ISIL:
	001 And W8, W0, 0x7FFFFFFF
	002 NotImplemented "Instruction SDIV not yet implemented."
	003 NotImplemented "Instruction MSUB not yet implemented."
	004 Return X0

Method: System.Void GetBucketAndLockNo(System.Int32 hashcode, out System.Int32 bucketNo, out System.Int32 lockNo, System.Int32 bucketCount, System.Int32 lockCount)

Disassembly:
	0x02965328 LDR W9, [X20 + 0x18]
	0x0296532C LDR W8, [X8 + 0x18]
	0x02965330 SDIV W8, W9, W8
	0x02965334 STR W8, [X19 + 0x24]
	0x02965338 LDR X8, [X24 + 0x28]
	0x0296533C LDR X9, [X31 + 0x58]
	0x02965340 CMP X8, X9
	0x02965344 B.NE 0x296537C

ISIL:
	001 And W8, W0, 0x7FFFFFFF
	002 NotImplemented "Instruction SDIV not yet implemented."
	003 NotImplemented "Instruction MSUB not yet implemented."
	004 NotImplemented "Instruction SDIV not yet implemented."
	005 Move [X1], W8
	006 NotImplemented "Instruction MSUB not yet implemented."
	007 Move [X2], W8
	008 Return 

Method: System.Int32 get_DefaultConcurrencyLevel()

Disassembly:
	0x02965348 LDP X20, X19, [X31 + 0xB0]
	0x0296534C LDP X22, X21, [X31 + 0xA0]
	0x02965350 LDP X24, X23, [X31 + 0x90]
	0x02965354 LDP X26, X25, [X31 + 0x80]
	0x02965358 LDP X28, X27, [X31 + 0x70]
	0x0296535C LDR X30, [X31 + 0x60]
	0x02965360 ADD X31, X31, 0xC0
	0x02965364 RET
	0x02965368 BL 0x1C16F20
	0x0296536C BL 0x1C16F20
	0x02965370 BL 0x1C16F20
	0x02965374 MOV X0, X21
	0x02965378 BL 0x1C16F18
	0x0296537C BL 0x3EB1B20
	0x02965380 B 0x2965398
	0x02965384 B 0x2965398
	0x02965388 B 0x2965398
	0x0296538C B 0x2965398
	0x02965390 B 0x2965398
	0x02965394 B 0x2965398

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x1A76000
	005 Move X20, 0x17BA000
	006 Move W8, [X19+3671]
	007 Move X20, [X20+680]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x17BA000
	013 Move X0, [X0+680]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3671], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X0, X31
	025 Move X30, [X31+32]
	026 Call PlatformHelper.get_ProcessorCount
	027 Return X0

Method: System.Void AcquireAllLocks(ref System.Int32 locksAcquired)

Disassembly:
	0x02965398 CMP W1, 0x1
	0x0296539C B.NE 0x29653B8
	0x029653A0 BL 0x3EB1AD0
	0x029653A4 LDR X21, [X0]
	0x029653A8 BL 0x3EB1AE0
	0x029653AC MOV W22, W31
	0x029653B0 CBNZ X20, 0x2965290
	0x029653B4 B 0x29652E8
	0x029653B8 MOV X19, X0
	0x029653BC MOV X21, X31
	0x029653C0 B 0x29653C8
	0x029653C4 MOV X19, X0
	0x029653C8 CBZ X20, 0x2965424
	0x029653CC LDR X8, [X20]
	0x029653D0 LDR X1, [X25]
	0x029653D4 LDRH W9, [X8 + 0x12E]
	0x029653D8 CBZ X9, 0x29653FC
	0x029653DC LDR X10, [X8 + 0xB0]
	0x029653E0 ADD X10, X10, 0x8
	0x029653E4 LDUR X11, [X10 - 0x8]
	0x029653E8 CMP X11, X1
	0x029653EC B.EQ 0x296540C
	0x029653F0 SUBS X9, X9, 0x1
	0x029653F4 ADD X10, X10, 0x10
	0x029653F8 B.NE 0x29653E4
	0x029653FC MOV X0, X20
	0x02965400 MOV W2, W31
	0x02965404 BL 0x1C5C788
	0x02965408 B 0x2965418
	0x0296540C LDRSW X9, [X10]
	0x02965410 ADD X8, X8, X9, 0x4, LSL
	0x02965414 ADD X0, X8, 0x138
	0x02965418 LDP X8, X1, [X0]
	0x0296541C MOV X0, X20
	0x02965420 BLR X8
	0x02965424 CBNZ X21, 0x2965430
	0x02965428 MOV X0, X19
	0x0296542C BL 0x1D2C690
	0x02965430 MOV X0, X21
	0x02965434 BL 0x1C16F18
	0x02965438 BL 0x1990590
	0x0296543C STR X30, [X31 - 0x60]!
	0x02965440 STP X28, X27, [X31 + 0x10]
	0x02965444 STP X26, X25, [X31 + 0x20]
	0x02965448 STP X24, X23, [X31 + 0x30]
	0x0296544C STP X22, X21, [X31 + 0x40]
	0x02965450 STP X20, X19, [X31 + 0x50]
	0x02965454 ADRP X25, 0x1A75000
	0x02965458 LDRB W8, [X25 + 0xE5C]
	0x0296545C MOV X19, X5
	0x02965460 MOV X21, X4
	0x02965464 MOV W23, W3
	0x02965468 MOV W24, W2
	0x0296546C MOV W22, W1
	0x02965470 MOV X20, X0
	0x02965474 TBNZ X8, 0x0, 0x29654A4
	0x02965478 ADRP X0, 0x178F000
	0x0296547C LDR X0, [X0 + 0xE58]
	0x02965480 BL 0x1C16CF4
	0x02965484 ADRP X0, 0x178E000
	0x02965488 LDR X0, [X0 + 0x9D0]
	0x0296548C BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1A76000
	007 Move X21, 0x17BA000
	008 Move W8, [X22+3672]
	009 Move X21, [X21+688]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x17BA000
	017 Move X0, [X0+688]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3672], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {27}
	025 Call 0x1C17DFC
	026 Move X0, [X21]
	027 Move X8, [X0+184]
	028 Move X0, [X8]
	029 Compare X0, 0
	030 JumpIfEqual {79}
	031 Move X1, X31
	032 Call EventSource.IsEnabled, X0
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {58}
	037 Move X0, [X21]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {43}
	041 Call 0x1C17DFC
	042 Move X0, [X21]
	043 Move X8, [X0+184]
	044 Move X22, [X20+16]
	045 Move X21, [X8]
	046 Call 0x1C17D44
	047 Compare X22, 0
	048 JumpIfEqual {79}
	049 Move X8, [X22+16]
	050 Compare X8, 0
	051 JumpIfEqual {79}
	052 Compare X21, 0
	053 JumpIfEqual {79}
	054 Move W1, [X8+24]
	055 Move X0, X21
	056 Move X2, X31
	057 Call CDSCollectionETWBCLProvider.ConcurrentDictionary_AcquiringAllLocks, X0, X1
	058 Move W2, 1
	059 Move X0, X20
	060 Move W1, W31
	061 Move X3, X19
	062 Call 0x2965490, X0, X1, X2, X3
	063 Move X21, [X20+16]
	064 Call 0x1C17D44
	065 Compare X21, 0
	066 JumpIfEqual {79}
	067 Move X8, [X21+24]
	068 Compare X8, 0
	069 JumpIfEqual {79}
	070 Move W2, [X8+24]
	071 Move X0, X20
	072 Move X3, X19
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X22, [X31+16]
	076 Move X21, [X31+24]
	077 Move W1, 1
	078 Move X30, [X31+48]
	079 Call 0x1C17F20

Method: System.Void AcquireLocks(System.Int32 fromInclusive, System.Int32 toExclusive, ref System.Int32 locksAcquired)

Disassembly:
	0x02965490 ADRP X0, 0x1794000
	0x02965494 LDR X0, [X0 + 0xCC0]
	0x02965498 BL 0x1C16CF4
	0x0296549C MOVZ W8, 0x1
	0x029654A0 STRB W8, [X25 + 0xE5C]
	0x029654A4 MOV X0, X20
	0x029654A8 MOV X1, X31
	0x029654AC BL 0x33BDD8C
	0x029654B0 CMP W22, 0x0
	0x029654B4 B.LE 0x2965640
	0x029654B8 TBNZ X24, 0x1F, 0x2965670
	0x029654BC ADRP X8, 0x178E000
	0x029654C0 LDR X8, [X8 + 0x9D0]
	0x029654C4 CMP W24, W22
	0x029654C8 MOV W1, W22
	0x029654CC CSEL W24, W22, W24, LT
	0x029654D0 LDR X0, [X8]
	0x029654D4 BL 0x1C16D6C
	0x029654D8 CBZ X0, 0x296563C
	0x029654DC LDR X1, [X0 + 0x18]
	0x029654E0 MOV X22, X0
	0x029654E4 CMP W1, 0x1
	0x029654E8 B.LT 0x2965544
	0x029654EC ADRP X27, 0x1794000
	0x029654F0 LDR X27, [X27 + 0xCC0]
	0x029654F4 MOV X26, X31
	0x029654F8 ADD X28, X22, 0x20
	0x029654FC LDR X0, [X27]
	0x02965500 BL 0x1C16F10
	0x02965504 MOV X1, X31
	0x02965508 MOV X25, X0
	0x0296550C BL 0x33BDD8C
	0x02965510 CBZ X25, 0x2965528
	0x02965514 LDR X8, [X22]
	0x02965518 MOV X0, X25
	0x0296551C LDR X1, [X8 + 0x40]
	0x02965520 BL 0x1C16E00
	0x02965524 CBZ X0, 0x2965630
	0x02965528 LDR W1, [X22 + 0x18]
	0x0296552C CMP X26, X1
	0x02965530 B.CS 0x296562C
	0x02965534 STR X25, [X28, X26, LSL #3]
	0x02965538 ADD X26, X26, 0x1
	0x0296553C CMP X26, W1, SXTW
	0x02965540 B.LT 0x29654FC
	0x02965544 ADRP X8, 0x178F000
	0x02965548 LDR X8, [X8 + 0xE58]
	0x0296554C LDR X0, [X8]
	0x02965550 BL 0x1C16D6C
	0x02965554 LDR X8, [X19 + 0x20]
	0x02965558 MOV X25, X0
	0x0296555C LDR X8, [X8 + 0xC0]
	0x02965560 LDR X8, [X8 + 0xB8]
	0x02965564 LDRB W9, [X8 + 0x135]
	0x02965568 TBNZ X9, 0x0, 0x2965578
	0x0296556C MOV X0, X8
	0x02965570 BL 0x1C5C684
	0x02965574 MOV X8, X0
	0x02965578 MOV X0, X8
	0x0296557C MOV W1, W24
	0x02965580 AND W26, W23, 0x1
	0x02965584 BL 0x1C16D6C
	0x02965588 LDR X8, [X19 + 0x20]
	0x0296558C MOV X23, X0
	0x02965590 LDR X8, [X8 + 0xC0]
	0x02965594 LDR X8, [X8 + 0xA8]
	0x02965598 LDRB W9, [X8 + 0x135]
	0x0296559C TBNZ X9, 0x0, 0x29655AC
	0x029655A0 MOV X0, X8
	0x029655A4 BL 0x1C5C684
	0x029655A8 MOV X8, X0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, [X0+16]
	009 Move X19, X3
	010 Move W21, W2
	011 Move W20, W1
	012 Call 0x1C17D44
	013 Compare X22, 0
	014 JumpIfEqual {59}
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move X22, [X22+24]
	017 Move X8, W21
	018 Subtract X23, X8, W20
	019 Add X9, X22, W20
	020 Add X21, X9, 32
	021 Move [X31+12], W31
	022 Compare X22, 0
	023 JumpIfEqual {42}
	024 Move W8, [X22+24]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X0, [X21]
	027 Add X1, X31, 12
	028 Move X2, X31
	029 Call Monitor.Enter, X0, X1
	030 Move X0, X31
	031 Move W8, [X31+12]
	032 Compare W8, 0
	033 JumpIfEqual {37}
	034 Move W8, [X19]
	035 Add W8, W8, 1
	036 Move [X19], W8
	037 Compare X0, 0
	038 JumpIfNotEqual {58}
	039 Add X21, X21, 8
	040 Subtract X23, X23, 1
	041 Add W20, W20, 1
	042 Call 0x1C17F20
	043 Call 0x1C17F28
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Call 0x3EB2AD0
	046 Move X8, [X0]
	047 Move [X31], X8
	048 Call 0x3EB2AE0
	049 Move X0, [X31]
	050 Move X20, [X31+48]
	051 Move X19, [X31+56]
	052 Move X22, [X31+32]
	053 Move X21, [X31+40]
	054 Move X30, [X31+16]
	055 Move X23, [X31+24]
	056 Add X31, X31, 64
	057 Return 
	058 Call 0x1C17F18
	059 Call 0x1C17F20
	060 Move [X31], X31
	061 Move W8, [X31+12]
	062 Compare W8, 0
	063 JumpIfEqual {67}
	064 Move W8, [X19]
	065 Add W8, W8, 1
	066 Move [X19], W8
	067 Move X8, [X31]
	068 Compare X8, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1D2D690
	071 Move X0, [X31]
	072 Call 0x1C17F18
	073 Call 0x1991590

Method: System.Void ReleaseLocks(System.Int32 fromInclusive, System.Int32 toExclusive)

Disassembly:
	0x029655AC MOV X0, X8
	0x029655B0 BL 0x1C16F10
	0x029655B4 LDR X8, [X19 + 0x20]
	0x029655B8 MOV X1, X23
	0x029655BC MOV X2, X22
	0x029655C0 MOV X3, X25
	0x029655C4 LDR X8, [X8 + 0xC0]
	0x029655C8 MOV X24, X0
	0x029655CC LDR X4, [X8 + 0xC0]
	0x029655D0 BL 0x26768D4
	0x029655D4 BL 0x1C16D44
	0x029655D8 STR X24, [X20 + 0x10]
	0x029655DC CBNZ X21, 0x29655F4
	0x029655E0 LDR X8, [X19 + 0x20]
	0x029655E4 LDR X8, [X8 + 0xC0]
	0x029655E8 LDR X0, [X8 + 0xC8]
	0x029655EC BL 0x211A010
	0x029655F0 MOV X21, X0
	0x029655F4 STR X21, [X20 + 0x18]
	0x029655F8 STRB W26, [X20 + 0x20]
	0x029655FC CBZ X23, 0x296563C
	0x02965600 LDR W8, [X23 + 0x18]
	0x02965604 LDR W9, [X22 + 0x18]
	0x02965608 LDP X22, X21, [X31 + 0x40]
	0x0296560C LDP X24, X23, [X31 + 0x30]
	0x02965610 LDP X26, X25, [X31 + 0x20]
	0x02965614 SDIV W8, W8, W9
	0x02965618 STR W8, [X20 + 0x24]
	0x0296561C LDP X20, X19, [X31 + 0x50]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X19, X0
	008 Move X20, W1
	009 Move X21, W2
	010 Move X22, [X19+16]
	011 Call 0x1C17D44
	012 Compare X22, 0
	013 JumpIfEqual {31}
	014 Move X8, [X22+24]
	015 Compare X8, 0
	016 JumpIfEqual {31}
	017 Move W9, [X8+24]
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Add X8, X8, X20
	020 Move X0, [X8+32]
	021 Move X1, X31
	022 Call Monitor.Exit, X0
	023 Add X20, X20, 1
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X20, [X31+32]
	026 Move X19, [X31+40]
	027 Move X22, [X31+16]
	028 Move X21, [X31+24]
	029 Move X30, [X31+48]
	030 Return 
	031 Call 0x1C17F20
	032 Call 0x1C17F28

Method: System.Collections.ObjectModel.ReadOnlyCollection`1<TKey> GetKeys()

Disassembly:
	0x02965620 LDP X28, X27, [X31 + 0x10]
	0x02965624 LDR X30, [X31], #0x60
	0x02965628 RET
	0x0296562C BL 0x1C16F28
	0x02965630 BL 0x1C16F44
	0x02965634 MOV X1, X31
	0x02965638 BL 0x1C16DEC
	0x0296563C BL 0x1C16F20
	0x02965640 ADRP X0, 0x1796000
	0x02965644 LDR X0, [X0 + 0x760]
	0x02965648 BL 0x1C16D08
	0x0296564C BL 0x1C16F10
	0x02965650 MOV X20, X0
	0x02965654 ADRP X0, 0x17B9000
	0x02965658 LDR X0, [X0 + 0x250]
	0x0296565C BL 0x1C16D08
	0x02965660 MOV X21, X0
	0x02965664 ADRP X0, 0x17B9000
	0x02965668 LDR X0, [X0 + 0x258]
	0x0296566C B 0x296569C
	0x02965670 ADRP X0, 0x1796000
	0x02965674 LDR X0, [X0 + 0x760]
	0x02965678 BL 0x1C16D08
	0x0296567C BL 0x1C16F10
	0x02965680 MOV X20, X0
	0x02965684 ADRP X0, 0x17B8000
	0x02965688 LDR X0, [X0 + 0x58]
	0x0296568C BL 0x1C16D08
	0x02965690 MOV X21, X0
	0x02965694 ADRP X0, 0x17B9000
	0x02965698 LDR X0, [X0 + 0x260]
	0x0296569C BL 0x1C16D08
	0x029656A0 MOV X2, X0
	0x029656A4 MOV X0, X20
	0x029656A8 MOV X1, X21
	0x029656AC MOV X3, X31
	0x029656B0 BL 0x3311888
	0x029656B4 MOV X0, X20
	0x029656B8 MOV X1, X19
	0x029656BC BL 0x1C16DEC
	0x029656C0 SUB X31, X31, 0x90
	0x029656C4 STR X30, [X31 + 0x50]
	0x029656C8 STP X24, X23, [X31 + 0x60]
	0x029656CC STP X22, X21, [X31 + 0x70]
	0x029656D0 STP X20, X19, [X31 + 0x80]
	0x029656D4 MRS X24, 0xC000
	0x029656D8 LDR X8, [X24 + 0x28]
	0x029656DC STR X8, [X31 + 0x48]
	0x029656E0 STP X31, X31, [X31 + 0x18]
	0x029656E4 STR X31, [X31 + 0x28]
	0x029656E8 LDR X23, [X0 + 0x18]
	0x029656EC CBZ X23, 0x29657F4
	0x029656F0 LDR X8, [X3 + 0x20]
	0x029656F4 MOV W20, W1
	0x029656F8 MOV X21, X3
	0x029656FC MOV X22, X2
	0x02965700 LDR X8, [X8 + 0xC0]
	0x02965704 MOV X19, X0
	0x02965708 LDR X1, [X8 + 0x20]
	0x0296570C LDRB W8, [X1 + 0x135]
	0x02965710 TBNZ X8, 0x0, 0x2965720
	0x02965714 MOV X0, X1
	0x02965718 BL 0x1C5C684
	0x0296571C MOV X1, X0
	0x02965720 LDR X8, [X23]
	0x02965724 LDRH W9, [X8 + 0x12E]
	0x02965728 CBZ X9, 0x296574C
	0x0296572C LDR X10, [X8 + 0xB0]
	0x02965730 ADD X10, X10, 0x8
	0x02965734 LDUR X11, [X10 - 0x8]
	0x02965738 CMP X11, X1
	0x0296573C B.EQ 0x296575C
	0x02965740 SUBS X9, X9, 0x1
	0x02965744 ADD X10, X10, 0x10
	0x02965748 B.NE 0x2965734
	0x0296574C MOVZ W2, 0x1
	0x02965750 MOV X0, X23
	0x02965754 BL 0x1C5C788
	0x02965758 B 0x296576C
	0x0296575C LDR W9, [X10]
	0x02965760 ADD W9, W9, 0x1
	0x02965764 ADD X8, X8, W9, 0x4, SXTW
	0x02965768 ADD X0, X8, 0x138
	0x0296576C LDP X8, X2, [X0]
	0x02965770 MOV X0, X23
	0x02965774 MOV W1, W20
	0x02965778 BLR X8
	0x0296577C LDR X8, [X22 + 0x10]
	0x02965780 LDR V0, [X22]
	0x02965784 MOV W2, W0
	0x02965788 ADD X3, X31, 0x30
	0x0296578C STR X8, [X31 + 0x10]
	0x02965790 STR V0, [X31]
	0x02965794 LDR X8, [X21 + 0x20]
	0x02965798 LDR V0, [X31]
	0x0296579C LDR X9, [X31 + 0x10]
	0x029657A0 ADD X6, X31, 0x18
	0x029657A4 LDR X8, [X8 + 0xC0]
	0x029657A8 MOVZ W5, 0x1
	0x029657AC MOV X0, X19
	0x029657B0 MOV W1, W20
	0x029657B4 LDR X7, [X8 + 0x90]
	0x029657B8 MOV W4, W31
	0x029657BC STR V0, [X31 + 0x3]
	0x029657C0 STR X9, [X31 + 0x40]
	0x029657C4 BL 0x2966ABC
	0x029657C8 LDR X8, [X24 + 0x28]
	0x029657CC LDR X9, [X31 + 0x48]
	0x029657D0 CMP X8, X9
	0x029657D4 B.NE 0x29657F8
	0x029657D8 LDP X20, X19, [X31 + 0x80]
	0x029657DC LDP X22, X21, [X31 + 0x70]
	0x029657E0 LDP X24, X23, [X31 + 0x60]
	0x029657E4 LDR X30, [X31 + 0x50]
	0x029657E8 AND W0, W0, 0x1
	0x029657EC ADD X31, X31, 0x90
	0x029657F0 RET
	0x029657F4 BL 0x1C16F20
	0x029657F8 BL 0x3EB1B20
	0x029657FC SUB X31, X31, 0x30
	0x02965800 STP X30, X19, [X31 + 0x20]
	0x02965804 MRS X19, 0xC000
	0x02965808 LDR X8, [X19 + 0x28]
	0x0296580C STR X8, [X31 + 0x18]
	0x02965810 STP X31, X31, [X31]
	0x02965814 STR X31, [X31 + 0x10]
	0x02965818 LDR X8, [X2 + 0x20]
	0x0296581C ADD X2, X31, 0x0
	0x02965820 LDR X8, [X8 + 0xC0]
	0x02965824 LDR X3, [X8 + 0xE0]
	0x02965828 BL 0x2965DB0
	0x0296582C LDR X8, [X19 + 0x28]
	0x02965830 LDR X9, [X31 + 0x18]
	0x02965834 CMP X8, X9
	0x02965838 B.NE 0x296584C
	0x0296583C LDP X30, X19, [X31 + 0x20]
	0x02965840 AND W0, W0, 0x1
	0x02965844 ADD X31, X31, 0x30
	0x02965848 RET
	0x0296584C BL 0x3EB1B20
	0x02965850 SUB X31, X31, 0x30
	0x02965854 STP X30, X19, [X31 + 0x20]
	0x02965858 MRS X19, 0xC000
	0x0296585C LDR X8, [X19 + 0x28]
	0x02965860 ADD X4, X31, 0x0
	0x02965864 STR X8, [X31 + 0x18]
	0x02965868 LDR X8, [X3 + 0x20]
	0x0296586C MOV W3, W31
	0x02965870 LDR X8, [X8 + 0xC0]
	0x02965874 LDR X5, [X8 + 0xE8]
	0x02965878 STP X31, X31, [X31]
	0x0296587C STR X31, [X31 + 0x10]
	0x02965880 BL 0x29658A8
	0x02965884 LDR X8, [X19 + 0x28]
	0x02965888 LDR X9, [X31 + 0x18]
	0x0296588C CMP X8, X9
	0x02965890 B.NE 0x29658A4
	0x02965894 LDP X30, X19, [X31 + 0x20]
	0x02965898 AND W0, W0, 0x1
	0x0296589C ADD X31, X31, 0x30
	0x029658A0 RET

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move [X31+12], W31
	009 Move X8, [X1+32]
	010 Move X20, X1
	011 Move X19, X0
	012 Move X8, [X8+192]
	013 Move X2, [X8+344]
	014 Add X1, X31, 12
	015 Call 0x2965398, X0, X1
	016 Move X0, X19
	017 Call 0x2963B24, X0
	018 Move W22, W0
	019 Move TEMP, X0
	020 And TEMP, TEMP, -2147483648
	021 Compare TEMP, -2147483648
	022 JumpIfEqual {127}
	023 Move X8, [X20+32]
	024 Move X8, [X8+192]
	025 Move X0, [X8+608]
	026 Move W8, [X0+309]
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {32}
	031 Call 0x1C5D684
	032 Call 0x1C17F10
	033 Move X8, [X20+32]
	034 Move X21, X0
	035 NotImplemented "Instruction BIC not yet implemented."
	036 Move X8, [X8+192]
	037 Move X2, [X8+616]
	038 Call List`1<Guid>..ctor, X0, X1
	039 Move X22, X31
	040 Move X23, [X19+16]
	041 Call 0x1C17D44
	042 Compare X23, 0
	043 JumpIfEqual {122}
	044 Move X8, [X23+16]
	045 Compare X8, 0
	046 JumpIfEqual {123}
	047 NotImplemented "Instruction LDRSW not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X23, [X19+16]
	050 Call 0x1C17D44
	051 Compare X23, 0
	052 JumpIfEqual {125}
	053 Move X8, [X23+16]
	054 Compare X8, 0
	055 JumpIfEqual {126}
	056 Move W9, [X8+24]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Add X8, X8, X22
	059 Move X23, [X8+32]
	060 Compare X23, 0
	061 JumpIfEqual {90}
	062 Compare X21, 0
	063 JumpIfEqual {120}
	064 Move X8, [X20+32]
	065 Move W10, [X21+28]
	066 Move X1, [X23+16]
	067 Move X2, [X23+24]
	068 Move X9, [X8+192]
	069 Move X8, [X21+16]
	070 Add W10, W10, 1
	071 Move X9, [X9+624]
	072 Move [X21+28], W10
	073 Compare X8, 0
	074 JumpIfEqual {121}
	075 NotImplemented "Instruction LDRSW not yet implemented."
	076 Move W11, [X8+24]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Add W9, W10, 1
	079 Add X8, X8, X10
	080 Move [X21+24], W9
	081 Move [X8+32], X1
	082 Move [X8+40], X2
	083 Move X8, [X9+32]
	084 Move X8, [X8+192]
	085 Move X3, [X8+112]
	086 Move X0, X21
	087 Call List`1<Guid>.AddWithResize, X0, X1
	088 Move X23, [X23+40]
	089 Call 0x1C17D44
	090 Add X22, X22, 1
	091 Move X8, [X20+32]
	092 Move X8, [X8+192]
	093 Move X0, [X8+480]
	094 Move W8, [X0+309]
	095 Move TEMP, X8
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfEqual {100}
	099 Call 0x1C5D684
	100 Call 0x1C17F10
	101 Move X8, [X20+32]
	102 Move X22, X0
	103 Move X8, [X8+192]
	104 Move X2, [X8+632]
	105 Move X1, X21
	106 Call ReadOnlyCollection`1<Guid>..ctor, X0, X1
	107 Move W2, [X31+12]
	108 Move X0, X19
	109 Move W1, W31
	110 Call 0x29655AC, X0, X1, X2
	111 Move X0, X22
	112 Move X20, [X31+48]
	113 Move X19, [X31+56]
	114 Move X22, [X31+32]
	115 Move X21, [X31+40]
	116 Move X30, [X31+16]
	117 Move X23, [X31+24]
	118 Add X31, X31, 64
	119 Return X0
	120 Call 0x1C17F20
	121 Call 0x1C17F20
	122 Call 0x1C17F20
	123 Call 0x1C17F20
	124 Call 0x1C17F28
	125 Call 0x1C17F20
	126 Call 0x1C17F20
	127 Move X0, 0x1798000
	128 Move X0, [X0+3512]
	129 Call 0x1C17D08
	130 Call 0x1C17F10
	131 Move X21, X0
	132 Move X1, X31
	133 Call OutOfMemoryException..ctor, X0
	134 Move X0, X21
	135 Move X1, X20
	136 Call 0x1C17DEC
	137 Move X20, X0
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X0, X20
	140 Call 0x3EB2AD0
	141 Move X21, [X0]
	142 Call 0x3EB2AE0
	143 Move W2, [X31+12]
	144 Move X0, X19
	145 Move W1, W31
	146 Call 0x29655AC, X0, X1, X2
	147 Compare X21, 0
	148 JumpIfNotEqual {151}
	149 Move X22, X31
	150 Move X21, X31
	151 Move X0, X21
	152 Call 0x1C17F18
	153 Move X20, X0
	154 Move W2, [X31+12]
	155 Move X0, X19
	156 Move W1, W31
	157 Call 0x29655AC, X0, X1, X2
	158 Compare X21, 0
	159 JumpIfNotEqual {162}
	160 Move X0, X20
	161 Call 0x1D2D690
	162 Move X0, X21
	163 Call 0x1C17F18
	164 Call 0x1991590

Method: System.Collections.ObjectModel.ReadOnlyCollection`1<TValue> GetValues()

Disassembly:
	0x029658A4 BL 0x3EB1B20
	0x029658A8 SUB X31, X31, 0x130
	0x029658AC STP X29, X30, [X31 + 0xD0]
	0x029658B0 STP X28, X27, [X31 + 0xE0]
	0x029658B4 STP X26, X25, [X31 + 0xF0]
	0x029658B8 STP X24, X23, [X31 + 0x100]
	0x029658BC STP X22, X21, [X31 + 0x110]
	0x029658C0 STP X20, X19, [X31 + 0x120]
	0x029658C4 STR X4, [X31 + 0x10]
	0x029658C8 STR W3, [X31 + 0x20]
	0x029658CC STR X2, [X31 + 0x28]
	0x029658D0 MRS X9, 0xC000
	0x029658D4 LDR X8, [X9 + 0x28]
	0x029658D8 STR X8, [X31 + 0xC8]
	0x029658DC STRB W31, [X31 + 0x4C]
	0x029658E0 LDR X25, [X0 + 0x18]
	0x029658E4 STR W1, [X31 + 0x48]
	0x029658E8 CBZ X25, 0x2965D60
	0x029658EC LDR X8, [X5 + 0x20]
	0x029658F0 MOV X20, X5
	0x029658F4 MOV X23, X0
	0x029658F8 STR X9, [X31 + 0x18]
	0x029658FC LDR X8, [X8 + 0xC0]
	0x02965900 LDR X1, [X8 + 0x20]
	0x02965904 LDRB W8, [X1 + 0x135]
	0x02965908 TBNZ X8, 0x0, 0x2965918
	0x0296590C MOV X0, X1
	0x02965910 BL 0x1C5C684
	0x02965914 MOV X1, X0
	0x02965918 LDR X8, [X25]
	0x0296591C LDRH W9, [X8 + 0x12E]
	0x02965920 CBZ X9, 0x2965944
	0x02965924 LDR X10, [X8 + 0xB0]
	0x02965928 ADD X10, X10, 0x8
	0x0296592C LDUR X11, [X10 - 0x8]
	0x02965930 CMP X11, X1
	0x02965934 B.EQ 0x2965954
	0x02965938 SUBS X9, X9, 0x1
	0x0296593C ADD X10, X10, 0x10
	0x02965940 B.NE 0x296592C
	0x02965944 MOVZ W2, 0x1
	0x02965948 MOV X0, X25
	0x0296594C BL 0x1C5C788
	0x02965950 B 0x2965964
	0x02965954 LDR W9, [X10]
	0x02965958 ADD W9, W9, 0x1
	0x0296595C ADD X8, X8, W9, 0x4, SXTW
	0x02965960 ADD X0, X8, 0x138
	0x02965964 LDP X8, X2, [X0]
	0x02965968 LDR W1, [X31 + 0x48]
	0x0296596C MOV X0, X25
	0x02965970 BLR X8
	0x02965974 MOV W25, W0
	0x02965978 AND W26, W0, 0x7FFFFFFF
	0x0296597C STR W31, [X31 + 0x24]
	0x02965980 STR W26, [X31 + 0x3C]
	0x02965984 LDR X29, [X23 + 0x10]
	0x02965988 BL 0x1C16D44
	0x0296598C CBZ X29, 0x2965D60
	0x02965990 LDR X19, [X29 + 0x10]
	0x02965994 CBZ X19, 0x2965D60
	0x02965998 LDR X21, [X29 + 0x18]
	0x0296599C CBZ X21, 0x2965D60
	0x029659A0 LDR X8, [X20 + 0x20]
	0x029659A4 LDR X8, [X8 + 0xC0]
	0x029659A8 LDR X0, [X8 + 0x10]
	0x029659AC LDRB W8, [X0 + 0x135]
	0x029659B0 TBNZ X8, 0x0, 0x29659B8
	0x029659B4 BL 0x1C5C684
	0x029659B8 LDR W8, [X0 + 0xE0]
	0x029659BC CBNZ W8, 0x29659C4
	0x029659C0 BL 0x1C16DFC
	0x029659C4 LDR X8, [X29 + 0x18]
	0x029659C8 CBZ X8, 0x2965D60
	0x029659CC LDR W9, [X19 + 0x18]
	0x029659D0 LDR W10, [X21 + 0x18]
	0x029659D4 LDR W12, [X8 + 0x18]
	0x029659D8 SDIV W11, W26, W9
	0x029659DC MSUB W22, W11, W9, W26
	0x029659E0 SDIV W9, W22, W10
	0x029659E4 MSUB W19, W9, W10, W22
	0x029659E8 CMP W19, W12
	0x029659EC B.CS 0x2965D6C
	0x029659F0 MOV W21, W19
	0x029659F4 ADD X8, X8, X21, 0x3, LSL
	0x029659F8 LDR X27, [X8 + 0x20]
	0x029659FC STRB W31, [X31 + 0x4C]
	0x02965A00 ADD X1, X31, 0x4C
	0x02965A04 MOV X0, X27
	0x02965A08 MOV X2, X31
	0x02965A0C STR X27, [X31 + 0x40]
	0x02965A10 BL 0x33DE64C
	0x02965A14 LDR X24, [X23 + 0x10]
	0x02965A18 BL 0x1C16D44
	0x02965A1C CMP X29, X24
	0x02965A20 B.EQ 0x2965A30
	0x02965A24 MOV X27, X31
	0x02965A28 MOVZ W19, 0x2
	0x02965A2C B 0x2965C40
	0x02965A30 LDR X8, [X29 + 0x10]
	0x02965A34 CBZ X8, 0x2965C6C
	0x02965A38 LDR W9, [X8 + 0x18]
	0x02965A3C CMP W22, W9
	0x02965A40 B.CS 0x2965C74
	0x02965A44 MOV W9, W22
	0x02965A48 ADD X8, X8, X9, 0x3, LSL
	0x02965A4C LDR X27, [X8 + 0x20]
	0x02965A50 STR X9, [X31 + 0x30]
	0x02965A54 MOV X26, X31
	0x02965A58 CBZ X27, 0x2965B08
	0x02965A5C LDR W8, [X27 + 0x38]
	0x02965A60 MOV X24, X26
	0x02965A64 MOV X26, X27
	0x02965A68 CMP W25, W8
	0x02965A6C B.NE 0x2965AFC
	0x02965A70 LDR X27, [X23 + 0x18]
	0x02965A74 CBZ X27, 0x2965C64
	0x02965A78 LDR X8, [X20 + 0x20]
	0x02965A7C LDR W28, [X26 + 0x10]
	0x02965A80 LDR X8, [X8 + 0xC0]
	0x02965A84 LDR X1, [X8 + 0x20]
	0x02965A88 LDRB W8, [X1 + 0x135]
	0x02965A8C TBNZ X8, 0x0, 0x2965A9C
	0x02965A90 MOV X0, X1
	0x02965A94 BL 0x1C5C684
	0x02965A98 MOV X1, X0
	0x02965A9C LDR X8, [X27]
	0x02965AA0 LDRH W9, [X8 + 0x12E]
	0x02965AA4 CBZ X9, 0x2965AC8
	0x02965AA8 LDR X10, [X8 + 0xB0]
	0x02965AAC ADD X10, X10, 0x8
	0x02965AB0 LDUR X11, [X10 - 0x8]
	0x02965AB4 CMP X11, X1
	0x02965AB8 B.EQ 0x2965AD8
	0x02965ABC SUBS X9, X9, 0x1
	0x02965AC0 ADD X10, X10, 0x10
	0x02965AC4 B.NE 0x2965AB0
	0x02965AC8 MOV X0, X27
	0x02965ACC MOV W2, W31
	0x02965AD0 BL 0x1C5C788
	0x02965AD4 B 0x2965AE4
	0x02965AD8 LDRSW X9, [X10]
	0x02965ADC ADD X8, X8, X9, 0x4, LSL
	0x02965AE0 ADD X0, X8, 0x138
	0x02965AE4 LDP X8, X3, [X0]
	0x02965AE8 LDR W2, [X31 + 0x48]
	0x02965AEC MOV X0, X27
	0x02965AF0 MOV W1, W28
	0x02965AF4 BLR X8
	0x02965AF8 TBNZ X0, 0x0, 0x2965B14
	0x02965AFC LDR X27, [X26 + 0x30]
	0x02965B00 BL 0x1C16D44
	0x02965B04 B 0x2965A58
	0x02965B08 LDR W26, [X31 + 0x3C]
	0x02965B0C MOVZ W19, 0xB
	0x02965B10 B 0x2965C40
	0x02965B14 LDR W8, [X31 + 0x20]
	0x02965B18 TBZ X8, 0x0, 0x2965B90
	0x02965B1C LDR X8, [X20 + 0x20]
	0x02965B20 LDR X8, [X8 + 0xC0]
	0x02965B24 LDR X0, [X8 + 0x108]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move [X31+12], W31
	009 Move X8, [X1+32]
	010 Move X20, X1
	011 Move X19, X0
	012 Move X8, [X8+192]
	013 Move X2, [X8+344]
	014 Add X1, X31, 12
	015 Call 0x2965398, X0, X1
	016 Move X0, X19
	017 Call 0x2963B24, X0
	018 Move W22, W0
	019 Move TEMP, X0
	020 And TEMP, TEMP, -2147483648
	021 Compare TEMP, -2147483648
	022 JumpIfEqual {125}
	023 Move X8, [X20+32]
	024 Move X8, [X8+192]
	025 Move X0, [X8+648]
	026 Move W8, [X0+309]
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {32}
	031 Call 0x1C5D684
	032 Call 0x1C17F10
	033 Move X8, [X20+32]
	034 Move X21, X0
	035 NotImplemented "Instruction BIC not yet implemented."
	036 Move X8, [X8+192]
	037 Move X2, [X8+656]
	038 Call List`1<Object>..ctor, X0, X1
	039 Move X22, X31
	040 Move X23, [X19+16]
	041 Call 0x1C17D44
	042 Compare X23, 0
	043 JumpIfEqual {120}
	044 Move X8, [X23+16]
	045 Compare X8, 0
	046 JumpIfEqual {121}
	047 NotImplemented "Instruction LDRSW not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X23, [X19+16]
	050 Call 0x1C17D44
	051 Compare X23, 0
	052 JumpIfEqual {123}
	053 Move X8, [X23+16]
	054 Compare X8, 0
	055 JumpIfEqual {124}
	056 Move W9, [X8+24]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Add X8, X8, X22
	059 Move X23, [X8+32]
	060 Compare X23, 0
	061 JumpIfEqual {88}
	062 Compare X21, 0
	063 JumpIfEqual {118}
	064 Move X8, [X20+32]
	065 Move W10, [X21+28]
	066 Move X1, [X23+32]
	067 Move X9, [X8+192]
	068 Move X8, [X21+16]
	069 Add W10, W10, 1
	070 Move X9, [X9+664]
	071 Move [X21+28], W10
	072 Compare X8, 0
	073 JumpIfEqual {119}
	074 NotImplemented "Instruction LDRSW not yet implemented."
	075 Move W11, [X8+24]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Add W9, W10, 1
	078 Add X8, X8, X10
	079 Move [X21+24], W9
	080 Move [X8+32], X1
	081 Move X8, [X9+32]
	082 Move X8, [X8+192]
	083 Move X2, [X8+112]
	084 Move X0, X21
	085 Call List`1<Object>.AddWithResize, X0, X1
	086 Move X23, [X23+40]
	087 Call 0x1C17D44
	088 Add X22, X22, 1
	089 Move X8, [X20+32]
	090 Move X8, [X8+192]
	091 Move X0, [X8+504]
	092 Move W8, [X0+309]
	093 Move TEMP, X8
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfEqual {98}
	097 Call 0x1C5D684
	098 Call 0x1C17F10
	099 Move X8, [X20+32]
	100 Move X22, X0
	101 Move X8, [X8+192]
	102 Move X2, [X8+672]
	103 Move X1, X21
	104 Call ReadOnlyCollection`1<Object>..ctor, X0, X1
	105 Move W2, [X31+12]
	106 Move X0, X19
	107 Move W1, W31
	108 Call 0x29655AC, X0, X1, X2
	109 Move X0, X22
	110 Move X20, [X31+48]
	111 Move X19, [X31+56]
	112 Move X22, [X31+32]
	113 Move X21, [X31+40]
	114 Move X30, [X31+16]
	115 Move X23, [X31+24]
	116 Add X31, X31, 64
	117 Return X0
	118 Call 0x1C17F20
	119 Call 0x1C17F20
	120 Call 0x1C17F20
	121 Call 0x1C17F20
	122 Call 0x1C17F28
	123 Call 0x1C17F20
	124 Call 0x1C17F20
	125 Move X0, 0x1798000
	126 Move X0, [X0+3512]
	127 Call 0x1C17D08
	128 Call 0x1C17F10
	129 Move X21, X0
	130 Move X1, X31
	131 Call OutOfMemoryException..ctor, X0
	132 Move X0, X21
	133 Move X1, X20
	134 Call 0x1C17DEC
	135 Move X20, X0
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move X0, X20
	138 Call 0x3EB2AD0
	139 Move X21, [X0]
	140 Call 0x3EB2AE0
	141 Move W2, [X31+12]
	142 Move X0, X19
	143 Move W1, W31
	144 Call 0x29655AC, X0, X1, X2
	145 Compare X21, 0
	146 JumpIfNotEqual {149}
	147 Move X22, X31
	148 Move X21, X31
	149 Move X0, X21
	150 Call 0x1C17F18
	151 Move X20, X0
	152 Move W2, [X31+12]
	153 Move X0, X19
	154 Move W1, W31
	155 Call 0x29655AC, X0, X1, X2
	156 Compare X21, 0
	157 JumpIfNotEqual {160}
	158 Move X0, X20
	159 Call 0x1D2D690
	160 Move X0, X21
	161 Call 0x1C17F18
	162 Call 0x1991590

Method: System.Void OnSerializing(System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x02965B28 BL 0x211AE9C
	0x02965B2C LDR X9, [X31 + 0x10]
	0x02965B30 LDR X8, [X9 + 0x10]
	0x02965B34 LDR V0, [X9]
	0x02965B38 STR X8, [X31 + 0x80]
	0x02965B3C STR V0, [X31 + 0x7]
	0x02965B40 LDR X8, [X26 + 0x28]
	0x02965B44 LDUR V0, [X26 + 0x18]
	0x02965B48 STR X8, [X31 + 0x60]
	0x02965B4C STR V0, [X31 + 0x5]
	0x02965B50 CBZ X0, 0x2965C8C
	0x02965B54 LDR X8, [X0]
	0x02965B58 LDR V0, [X31 + 0x7]
	0x02965B5C LDR X9, [X31 + 0x80]
	0x02965B60 LDR V1, [X31 + 0x5]
	0x02965B64 LDR X10, [X31 + 0x60]
	0x02965B68 LDR X11, [X8 + 0x1B8]
	0x02965B6C STR V0, [X31 + 0xB]
	0x02965B70 STR X9, [X31 + 0xC0]
	0x02965B74 STR V1, [X31 + 0x9]
	0x02965B78 STR X10, [X31 + 0xA0]
	0x02965B7C LDR X3, [X8 + 0x1C0]
	0x02965B80 ADD X1, X31, 0xB0
	0x02965B84 ADD X2, X31, 0x90
	0x02965B88 BLR X11

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, [X0+16]
	006 Move X19, X0
	007 Move X20, X3
	008 Call 0x1C17D44
	009 Move X8, [X20+32]
	010 Move X0, X19
	011 Move X8, [X8+192]
	012 Move X1, [X8+688]
	013 Call 0x2962C8C, X0
	014 Move [X19+40], X0
	015 Compare X21, 0
	016 JumpIfEqual {32}
	017 Move X8, [X21+24]
	018 Compare X8, 0
	019 JumpIfEqual {32}
	020 Move X8, [X8+24]
	021 Move [X19+48], W8
	022 Move X8, [X21+16]
	023 Compare X8, 0
	024 JumpIfEqual {32}
	025 Move X8, [X8+24]
	026 Move [X19+52], W8
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return 
	032 Call 0x1C17F20

Method: System.Void OnSerialized(System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x02965B8C TBZ X0, 0x0, 0x2965C24
	0x02965B90 CBZ X24, 0x2965BA8

ISIL:
	001 Move [X0+40], X31
	002 Return 

Method: System.Void OnDeserialized(System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x02965B94 LDR X22, [X26 + 0x30]
	0x02965B98 BL 0x1C16D44
	0x02965B9C BL 0x1C16D44
	0x02965BA0 STR X22, [X24 + 0x30]
	0x02965BA4 B 0x2965BD4
	0x02965BA8 LDR X24, [X29 + 0x10]
	0x02965BAC CBZ X24, 0x2965C94
	0x02965BB0 LDR X27, [X26 + 0x30]
	0x02965BB4 BL 0x1C16D44
	0x02965BB8 LDR W8, [X24 + 0x18]
	0x02965BBC CMP W22, W8
	0x02965BC0 B.CS 0x2965C9C
	0x02965BC4 BL 0x1C16D44
	0x02965BC8 LDR X8, [X31 + 0x30]
	0x02965BCC ADD X8, X24, X8, 0x3, LSL
	0x02965BD0 STR X27, [X8 + 0x20]
	0x02965BD4 LDR X8, [X26 + 0x28]
	0x02965BD8 LDUR V0, [X26 + 0x18]
	0x02965BDC LDR X9, [X31 + 0x28]
	0x02965BE0 STR X8, [X9 + 0x10]
	0x02965BE4 STR V0, [X9]
	0x02965BE8 LDR X22, [X29 + 0x20]
	0x02965BEC BL 0x1C16D44
	0x02965BF0 LDR W26, [X31 + 0x3C]
	0x02965BF4 CBZ X22, 0x2965C7C
	0x02965BF8 LDR W8, [X22 + 0x18]
	0x02965BFC CMP W19, W8
	0x02965C00 B.CS 0x2965C84
	0x02965C04 ADD X8, X22, X21, 0x2, LSL
	0x02965C08 LDR W9, [X8 + 0x20]
	0x02965C0C MOVZ W10, 0x1
	0x02965C10 MOV X27, X31
	0x02965C14 STR W10, [X31 + 0x24]
	0x02965C18 SUB W9, W9, 0x1
	0x02965C1C STR W9, [X8 + 0x20]
	0x02965C20 B 0x2965C3C
	0x02965C24 LDR X8, [X31 + 0x28]
	0x02965C28 LDR W26, [X31 + 0x3C]
	0x02965C2C MOV X27, X31
	0x02965C30 STR W31, [X31 + 0x24]
	0x02965C34 STP X31, X31, [X8]
	0x02965C38 STR X31, [X8 + 0x10]
	0x02965C3C MOVZ W19, 0x8
	0x02965C40 LDRB W8, [X31 + 0x4C]
	0x02965C44 CBZ W8, 0x2965C54
	0x02965C48 LDR X0, [X31 + 0x40]
	0x02965C4C MOV X1, X31
	0x02965C50 BL 0x33E14E4
	0x02965C54 CBNZ X27, 0x2965D64
	0x02965C58 CMP W19, 0x2
	0x02965C5C B.EQ 0x2965984
	0x02965C60 B 0x2965D00
	0x02965C64 BL 0x1C16F20
	0x02965C68 B 0x2965D70
	0x02965C6C BL 0x1C16F20
	0x02965C70 B 0x2965D70
	0x02965C74 BL 0x1C16F28
	0x02965C78 B 0x2965D70
	0x02965C7C BL 0x1C16F20
	0x02965C80 B 0x2965D70
	0x02965C84 BL 0x1C16F28
	0x02965C88 B 0x2965D70
	0x02965C8C BL 0x1C16F20
	0x02965C90 B 0x2965D70
	0x02965C94 BL 0x1C16F20
	0x02965C98 B 0x2965D70
	0x02965C9C BL 0x1C16F28
	0x02965CA0 B 0x2965D70
	0x02965CA4 B 0x2965CE0
	0x02965CA8 B 0x2965CE0
	0x02965CAC B 0x2965CE0
	0x02965CB0 B 0x2965CE0
	0x02965CB4 B 0x2965CE0
	0x02965CB8 B 0x2965CE0
	0x02965CBC B 0x2965CE0
	0x02965CC0 B 0x2965CE0
	0x02965CC4 B 0x2965CE0
	0x02965CC8 B 0x2965CE0
	0x02965CCC B 0x2965CE0
	0x02965CD0 B 0x2965CE4
	0x02965CD4 B 0x2965CE4
	0x02965CD8 B 0x2965CE0
	0x02965CDC B 0x2965CE0
	0x02965CE0 LDR W26, [X31 + 0x3C]
	0x02965CE4 CMP W1, 0x1
	0x02965CE8 B.NE 0x2965D70
	0x02965CEC BL 0x3EB1AD0
	0x02965CF0 LDR X27, [X0]
	0x02965CF4 BL 0x3EB1AE0
	0x02965CF8 MOV W19, W31
	0x02965CFC B 0x2965C40
	0x02965D00 CMP W19, 0xB
	0x02965D04 B.EQ 0x2965D0C
	0x02965D08 CBNZ W19, 0x2965D24
	0x02965D0C LDR X8, [X31 + 0x28]
	0x02965D10 MOV W10, W31
	0x02965D14 STP X31, X31, [X8]
	0x02965D18 STR X31, [X8 + 0x10]
	0x02965D1C LDR X8, [X31 + 0x18]
	0x02965D20 B 0x2965D2C
	0x02965D24 LDR X8, [X31 + 0x18]
	0x02965D28 LDR W10, [X31 + 0x24]
	0x02965D2C LDR X8, [X8 + 0x28]
	0x02965D30 LDR X9, [X31 + 0xC8]
	0x02965D34 CMP X8, X9
	0x02965D38 B.NE 0x2965D7C
	0x02965D3C LDP X20, X19, [X31 + 0x120]
	0x02965D40 LDP X22, X21, [X31 + 0x110]
	0x02965D44 LDP X24, X23, [X31 + 0x100]

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0x1A76000
	013 Move W8, [X21+3673]
	014 Move X20, X3
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x1790000
	021 Move X0, [X0+3672]
	022 Call 0x1C17CF4
	023 Move X0, 0x178F000
	024 Move X0, [X0+2512]
	025 Call 0x1C17CF4
	026 Move X0, 0x1795000
	027 Move X0, [X0+3264]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+3673], W8
	031 Move X8, [X20+32]
	032 Move X24, 0x1790000
	033 Move X23, 0x178F000
	034 Move X21, [X19+40]
	035 Move X8, [X8+192]
	036 Move W22, [X19+52]
	037 Move X0, [X8+184]
	038 Move W8, [X0+309]
	039 Move X24, [X24+3672]
	040 Move X23, [X23+2512]
	041 Move TEMP, X8
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {46}
	045 Call 0x1C5D684
	046 Move W1, W22
	047 Call 0x1C17D6C
	048 Move X8, [X24]
	049 Move W1, [X19+48]
	050 Move X22, X0
	051 Move X0, X8
	052 Call 0x1C17D6C
	053 Move X8, [X23]
	054 Move W1, [X19+48]
	055 Move X23, X0
	056 Move X0, X8
	057 Call 0x1C17D6C
	058 Compare X0, 0
	059 JumpIfEqual {128}
	060 Move W8, [X0+24]
	061 Move X24, X0
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X27, 0x1795000
	064 Move X27, [X27+3264]
	065 Move X26, X31
	066 Add X28, X24, 32
	067 Move X0, [X27]
	068 Call 0x1C17F10
	069 Move X1, X31
	070 Move X25, X0
	071 Call Object..ctor, X0
	072 Compare X25, 0
	073 JumpIfEqual {80}
	074 Move X8, [X24]
	075 Move X0, X25
	076 Move X1, [X8+64]
	077 Call 0x1C17E00
	078 Compare X0, 0
	079 JumpIfEqual {125}
	080 Move W8, [X24+24]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move [X28], X25
	083 Add X26, X26, 1
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X8, [X20+32]
	086 Move X8, [X8+192]
	087 Move X0, [X8+168]
	088 Move W8, [X0+309]
	089 Move TEMP, X8
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfEqual {94}
	093 Call 0x1C5D684
	094 Call 0x1C17F10
	095 Move X8, [X20+32]
	096 Move X1, X22
	097 Move X2, X24
	098 Move X3, X23
	099 Move X8, [X8+192]
	100 Move X25, X0
	101 Move X4, [X8+192]
	102 Call 0x2677894, X0, X1, X2, X3
	103 Call 0x1C17D44
	104 Move [X19+16], X25
	105 Move X8, [X20+32]
	106 Move X0, X19
	107 Move X1, X21
	108 Move X8, [X8+192]
	109 Move X2, [X8+696]
	110 Call 0x29618E8, X0, X1
	111 Move [X19+40], X31
	112 Move X20, [X31+80]
	113 Move X19, [X31+88]
	114 Move X22, [X31+64]
	115 Move X21, [X31+72]
	116 Move X24, [X31+48]
	117 Move X23, [X31+56]
	118 Move X26, [X31+32]
	119 Move X25, [X31+40]
	120 Move X28, [X31+16]
	121 Move X27, [X31+24]
	122 Move X30, [X31+96]
	123 Return 
	124 Call 0x1C17F28
	125 Call 0x1C17F44
	126 Move X1, X31
	127 Call 0x1C17DEC
	128 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x02965D48 LDP X26, X25, [X31 + 0xF0]
	0x02965D4C LDP X28, X27, [X31 + 0xE0]
	0x02965D50 LDP X29, X30, [X31 + 0xD0]
	0x02965D54 AND W0, W10, 0x1
	0x02965D58 ADD X31, X31, 0x130
	0x02965D5C RET
	0x02965D60 BL 0x1C16F20
	0x02965D64 MOV X0, X27
	0x02965D68 BL 0x1C16F18
	0x02965D6C BL 0x1C16F28
	0x02965D70 MOV X19, X0
	0x02965D74 MOV X27, X31
	0x02965D78 B 0x2965D84
	0x02965D7C BL 0x3EB1B20
	0x02965D80 MOV X19, X0
	0x02965D84 LDRB W8, [X31 + 0x4C]
	0x02965D88 CBZ W8, 0x2965D98
	0x02965D8C LDR X0, [X31 + 0x40]
	0x02965D90 MOV X1, X31
	0x02965D94 BL 0x33E14E4
	0x02965D98 CBNZ X27, 0x2965DA4
	0x02965D9C MOV X0, X19
	0x02965DA0 BL 0x1D2C690
	0x02965DA4 MOV X0, X27
	0x02965DA8 BL 0x1C16F18
	0x02965DAC BL 0x1990590

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+32]
	005 Move W8, [X0+309]
	006 Move TEMP, X8
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfEqual {11}
	010 Call 0x1C5D684
	011 Move X8, [X0+192]
	012 Move X0, [X8+704]
	013 Call 0x2961710
	014 Move X8, [X19+32]
	015 Move W19, W0
	016 Move W9, [X8+309]
	017 Move TEMP, X9
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {24}
	021 Move X0, X8
	022 Call 0x1C5D684
	023 Move X8, X0
	024 Move X8, [X8+192]
	025 Move X0, [X8+16]
	026 Move W8, [X0+309]
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {32}
	031 Call 0x1C5D684
	032 Move X8, [X0+184]
	033 And W9, W19, 1
	034 Move [X8], W9
	035 Move X30, [X31+16]
	036 Move X19, [X31+24]
	037 Return 

