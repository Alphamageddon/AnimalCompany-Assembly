Type: System.Collections.Concurrent.ConcurrentQueue`1

Method: System.Void .ctor()

Disassembly:
	0x029912A0 BL 0x1C16F20
	0x029912A4 B 0x29912C4
	0x029912A8 B 0x29912C4
	0x029912AC B 0x29912C4
	0x029912B0 B 0x29912C4
	0x029912B4 B 0x29912C4
	0x029912B8 B 0x29912C4
	0x029912BC B 0x29912C4
	0x029912C0 B 0x29912C4
	0x029912C4 MOV X20, X0
	0x029912C8 CMP W1, 0x1
	0x029912CC B.NE 0x29912E4
	0x029912D0 MOV X0, X20
	0x029912D4 BL 0x3EB1AD0
	0x029912D8 LDR X21, [X0]
	0x029912DC BL 0x3EB1AE0
	0x029912E0 B 0x2991260
	0x029912E4 MOV X21, X31
	0x029912E8 B 0x29912F0
	0x029912EC MOV X20, X0
	0x029912F0 LDRB W8, [X31 + 0xC]
	0x029912F4 CBZ W8, 0x2991304
	0x029912F8 MOV X0, X19
	0x029912FC MOV X1, X31
	0x02991300 BL 0x33E14E4
	0x02991304 CBNZ X21, 0x2991310
	0x02991308 MOV X0, X20
	0x0299130C BL 0x1D2C690
	0x02991310 MOV X0, X21
	0x02991314 BL 0x1C16F18
	0x02991318 BL 0x1990590
	0x0299131C SUB X31, X31, 0x50
	0x02991320 STP X30, X25, [X31 + 0x10]
	0x02991324 STP X24, X23, [X31 + 0x20]
	0x02991328 STP X22, X21, [X31 + 0x30]
	0x0299132C STP X20, X19, [X31 + 0x40]
	0x02991330 ADRP X22, 0x1A49000
	0x02991334 LDRB W9, [X22 + 0xEF7]
	0x02991338 MOV W20, W2
	0x0299133C MOV X21, X1
	0x02991340 MOV X19, X8
	0x02991344 TBNZ X9, 0x0, 0x299135C
	0x02991348 ADRP X0, 0x176E000
	0x0299134C LDR X0, [X0 + 0x470]
	0x02991350 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1A4A000
	007 Move X21, 0x1769000
	008 Move W8, [X22+3827]
	009 Move X21, [X21+3264]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x1769000
	017 Move X0, [X0+3264]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3827], W8
	021 Move X0, X19
	022 Move X1, X31
	023 Call Object..ctor, X0
	024 Move X0, [X21]
	025 Call 0x1C17F10
	026 Move X1, X31
	027 Move X21, X0
	028 Call Object..ctor, X0
	029 Move [X19+16], X21
	030 Move X8, [X20+32]
	031 Move X8, [X8+192]
	032 Move X0, [X8+8]
	033 Move W8, [X0+309]
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {39}
	038 Call 0x1C5D684
	039 Call 0x1C17F10
	040 Move X8, [X20+32]
	041 Move W1, 32
	042 Move X20, X0
	043 Move X8, [X8+192]
	044 Move X2, [X8+16]
	045 Call 0x25D820C, X0, X1
	046 Call 0x1C17D44
	047 Move [X19+32], X20
	048 Call 0x1C17D44
	049 Move [X19+24], X20
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X30, [X31+48]
	055 Return 

Method: System.Void System.Collections.ICollection.CopyTo(System.Array array, System.Int32 index)

Disassembly:
	0x02991354 MOVZ W8, 0x1
	0x02991358 STRB W8, [X22 + 0xEF7]
	0x0299135C STR W31, [X31 + 0x8]
	0x02991360 CBZ X21, 0x2991448
	0x02991364 LDR X8, [X21 + 0x10]
	0x02991368 CBZ X8, 0x2991448
	0x0299136C LDR X9, [X8 + 0x18]
	0x02991370 CMP W9, W20
	0x02991374 B.LS 0x29913FC
	0x02991378 SXTW X22, W20
	0x0299137C ADD X11, X8, X22, 0x6, LSL
	0x02991380 LDR W10, [X21 + 0x18]
	0x02991384 LDR W11, [X11 + 0x58]
	0x02991388 ADD W12, W20, 0x1
	0x0299138C AND W23, W10, W12, 0x0
	0x02991390 AND W10, W11, W10, 0x0
	0x02991394 CMP W10, W23
	0x02991398 B.EQ 0x2991408
	0x0299139C CMP W9, W20
	0x029913A0 STR W31, [X31 + 0x8]
	0x029913A4 B.LS 0x29913FC
	0x029913A8 ADRP X24, 0x176E000
	0x029913AC LDR X24, [X24 + 0x470]
	0x029913B0 ADD X8, X8, X22, 0x6, LSL
	0x029913B4 LDR W25, [X8 + 0x58]
	0x029913B8 BL 0x1C16D44
	0x029913BC LDR W8, [X21 + 0x18]
	0x029913C0 AND W8, W8, W25, 0x0
	0x029913C4 CMP W8, W23
	0x029913C8 B.EQ 0x2991400
	0x029913CC LDR X0, [X24]
	0x029913D0 LDR W8, [X0 + 0xE0]
	0x029913D4 CBNZ W8, 0x29913DC
	0x029913D8 BL 0x1C16DFC
	0x029913DC ADD X0, X31, 0x8
	0x029913E0 MOV X1, X31
	0x029913E4 BL 0x33DF18C
	0x029913E8 LDR X8, [X21 + 0x10]
	0x029913EC CBZ X8, 0x2991448
	0x029913F0 LDR W9, [X8 + 0x18]
	0x029913F4 CMP W9, W20
	0x029913F8 B.HI 0x29913B0
	0x029913FC BL 0x1C16F28
	0x02991400 LDR X8, [X21 + 0x10]
	0x02991404 CBZ X8, 0x2991448
	0x02991408 LDR W9, [X8 + 0x18]
	0x0299140C CMP W9, W20
	0x02991410 B.LS 0x29913FC
	0x02991414 ADD X8, X8, X22, 0x6, LSL
	0x02991418 LDR X9, [X8 + 0x50]
	0x0299141C LDP V1, V0, [X8 + 0x30]
	0x02991420 LDR V2, [X8 + 0x2]
	0x02991424 LDP X22, X21, [X31 + 0x30]
	0x02991428 STR X9, [X19 + 0x30]
	0x0299142C STP V1, V0, [X19 + 0x10]
	0x02991430 STR V2, [X19]
	0x02991434 LDP X20, X19, [X31 + 0x40]
	0x02991438 LDP X24, X23, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X3+32]
	007 Move X21, X1
	008 Move X19, X3
	009 Move W20, W2
	010 Move X8, [X8+192]
	011 Move X22, X0
	012 Move X1, [X8+32]
	013 Move W8, [X1+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {21}
	018 Move X0, X1
	019 Call 0x1C5D684
	020 Move X1, X0
	021 Move X0, X21
	022 Call 0x1C17E00
	023 Compare X0, 0
	024 JumpIfEqual {38}
	025 Move X8, [X19+32]
	026 Move X1, X0
	027 Move X0, X22
	028 Move W2, W20
	029 Move X8, [X8+192]
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X3, [X8+40]
	035 Move X30, [X31+48]
	036 Call 0x2991D28, X0, X1, X2
	037 Return 
	038 Compare X21, 0
	039 JumpIfEqual {57}
	040 Move X8, [X19+32]
	041 Move X0, X22
	042 Move X8, [X8+192]
	043 Move X1, [X8+48]
	044 Call 0x2991558, X0
	045 Compare X0, 0
	046 JumpIfEqual {72}
	047 Move X1, X21
	048 Move W2, W20
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X3, X31
	054 Move X30, [X31+48]
	055 Call Array.CopyTo, X0, X1, X2
	056 Return 
	057 Move X0, 0x1768000
	058 Move X0, [X0+1320]
	059 Call 0x1C17D08
	060 Call 0x1C17F10
	061 Move X20, X0
	062 Move X0, 0x178B000
	063 Move X0, [X0+1600]
	064 Call 0x1C17D08
	065 Move X1, X0
	066 Move X0, X20
	067 Move X2, X31
	068 Call ArgumentNullException..ctor, X0, X1
	069 Move X0, X20
	070 Move X1, X19
	071 Call 0x1C17DEC
	072 Call 0x1C17F20

Method: System.Boolean System.Collections.ICollection.get_IsSynchronized()

Disassembly:
	0x0299143C LDP X30, X25, [X31 + 0x10]
	0x02991440 ADD X31, X31, 0x50

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Object System.Collections.ICollection.get_SyncRoot()

Disassembly:
	0x02991444 RET
	0x02991448 BL 0x1C16F20
	0x0299144C STR X30, [X31 - 0x40]!
	0x02991450 STP X24, X23, [X31 + 0x10]
	0x02991454 STP X22, X21, [X31 + 0x20]
	0x02991458 STP X20, X19, [X31 + 0x30]
	0x0299145C LDR X8, [X5 + 0x20]
	0x02991460 MOV X24, X5
	0x02991464 MOV W19, W4
	0x02991468 MOV X20, X3
	0x0299146C LDR X8, [X8 + 0xC0]
	0x02991470 MOV W21, W2
	0x02991474 MOV X22, X1
	0x02991478 MOV X23, X0
	0x0299147C LDR X8, [X8 + 0xC8]
	0x02991480 LDRB W9, [X8 + 0x135]
	0x02991484 TBNZ X9, 0x0, 0x2991494
	0x02991488 MOV X0, X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0x1763000
	005 Move X0, [X0+2880]
	006 Move X19, X1
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X20, X0
	010 Move X0, 0x178E000
	011 Move X0, [X0+672]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X20
	015 Move X2, X31
	016 Call NotSupportedException..ctor, X0, X1
	017 Move X0, X20
	018 Move X1, X19
	019 Call 0x1C17DEC

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x0299148C BL 0x1C5C684
	0x02991490 MOV X8, X0
	0x02991494 MOV X0, X8
	0x02991498 BL 0x1C16F10
	0x0299149C LDR X8, [X24 + 0x20]
	0x029914A0 MOV W1, W31
	0x029914A4 MOV X24, X0
	0x029914A8 LDR X8, [X8 + 0xC0]
	0x029914AC LDR X2, [X8 + 0xD0]
	0x029914B0 BL 0x238B704
	0x029914B4 CBZ X24, 0x29914DC
	0x029914B8 STR X23, [X24 + 0x68]
	0x029914BC STP X22, X20, [X24 + 0x50]
	0x029914C0 STP W19, W21, [X24 + 0x60]
	0x029914C4 MOV X0, X24
	0x029914C8 LDP X20, X19, [X31 + 0x30]
	0x029914CC LDP X22, X21, [X31 + 0x20]
	0x029914D0 LDP X24, X23, [X31 + 0x10]
	0x029914D4 LDR X30, [X31], #0x40
	0x029914D8 RET
	0x029914DC BL 0x1C16F20
	0x029914E0 SUB X31, X31, 0xF0
	0x029914E4 STR X30, [X31 + 0xC0]
	0x029914E8 STP X22, X21, [X31 + 0xD0]
	0x029914EC STP X20, X19, [X31 + 0xE0]
	0x029914F0 LDR X22, [X0 + 0x18]
	0x029914F4 MOV X20, X2
	0x029914F8 MOV X19, X0
	0x029914FC MOV X21, X1
	0x02991500 BL 0x1C16D44
	0x02991504 LDR X8, [X21 + 0x30]
	0x02991508 LDP V1, V0, [X21 + 0x10]
	0x0299150C LDR V2, [X21]
	0x02991510 STR X8, [X31 + 0x70]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X0, 0
	004 JumpIfEqual {39}
	005 Move X8, [X1+32]
	006 Move X19, X0
	007 Move X8, [X8+192]
	008 Move X1, [X8+56]
	009 Move W8, [X1+309]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X1
	015 Call 0x1C5D684
	016 Move X1, X0
	017 Move X8, [X19]
	018 NotImplemented "Instruction LDRH not yet implemented."
	019 Compare X9, 0
	020 JumpIfEqual {27}
	021 Move X10, [X8+176]
	022 Add X10, X10, 8
	023 NotImplemented "Instruction LDUR not yet implemented."
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Subtract X9, X9, 1
	026 Add X10, X10, 16
	027 Move X0, X19
	028 Move W2, W31
	029 Call 0x1C5D788
	030 NotImplemented "Instruction LDRSW not yet implemented."
	031 Add X8, X8, X9
	032 Add X0, X8, 312
	033 Move X2, [X0]
	034 Move X1, [X0+8]
	035 Move X0, X19
	036 Move X30, [X31+16]
	037 Move X19, [X31+24]
	038 CallNoReturn X2
	039 Call 0x1C17F20

Method: System.Boolean get_IsEmpty()

Disassembly:
	0x02991514 STP V1, V0, [X31 + 0x50]
	0x02991518 STR V2, [X31 + 0x4]
	0x0299151C CBZ X22, 0x29915A4
	0x02991520 LDR X8, [X20 + 0x20]
	0x02991524 LDP V0, V1, [X31 + 0x40]
	0x02991528 LDR V2, [X31 + 0x6]
	0x0299152C LDR X9, [X31 + 0x70]
	0x02991530 LDR X8, [X8 + 0xC0]
	0x02991534 ADD X1, X31, 0x80
	0x02991538 MOV X0, X22
	0x0299153C LDR X2, [X8 + 0xD8]
	0x02991540 STP V0, V1, [X31 + 0x80]
	0x02991544 STR V2, [X31 + 0xA]
	0x02991548 STR X9, [X31 + 0xB0]
	0x0299154C BL 0x25D7724
	0x02991550 TBNZ X0, 0x0, 0x2991590
	0x02991554 LDR X8, [X21 + 0x30]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 NotImplemented "Instruction MOVI not yet implemented."
	004 Move [X31+48], X31
	005 Move [X31+16], V0
	006 Move [X31+24], V0
	007 Move [X31], V0
	008 Move X8, [X1+32]
	009 Add X1, X31, 0
	010 Move W2, W31
	011 Move X8, [X8+192]
	012 Move X3, [X8+80]
	013 Call 0x29929F8, X0, X1, X2
	014 Move X30, [X31+64]
	015 NotImplemented "Instruction ORN not yet implemented."
	016 And W0, W8, 1
	017 Add X31, X31, 80
	018 Return X0

Method: T[] ToArray()

Disassembly:
	0x02991558 LDP V1, V0, [X21 + 0x10]
	0x0299155C LDR V2, [X21]
	0x02991560 ADD X1, X31, 0x80
	0x02991564 STR X8, [X31 + 0x30]
	0x02991568 STP V1, V0, [X31 + 0x10]
	0x0299156C STR V2, [X31]
	0x02991570 LDR X9, [X20 + 0x20]
	0x02991574 MOV X0, X19
	0x02991578 LDR X9, [X9 + 0xC0]
	0x0299157C LDR X2, [X9 + 0xE0]
	0x02991580 STP V2, V1, [X31 + 0x80]
	0x02991584 STR V0, [X31 + 0xA]
	0x02991588 STR X8, [X31 + 0xB0]
	0x0299158C BL 0x29915A8
	0x02991590 LDP X20, X19, [X31 + 0xE0]
	0x02991594 LDP X22, X21, [X31 + 0xD0]
	0x02991598 LDR X30, [X31 + 0xC0]
	0x0299159C ADD X31, X31, 0xF0
	0x029915A0 RET
	0x029915A4 BL 0x1C16F20
	0x029915A8 SUB X31, X31, 0xD0
	0x029915AC STR X30, [X31 + 0x80]
	0x029915B0 STP X26, X25, [X31 + 0x90]
	0x029915B4 STP X24, X23, [X31 + 0xA0]
	0x029915B8 STP X22, X21, [X31 + 0xB0]
	0x029915BC STP X20, X19, [X31 + 0xC0]
	0x029915C0 ADRP X22, 0x1A49000
	0x029915C4 LDRB W8, [X22 + 0xEF8]
	0x029915C8 MOV X19, X2
	0x029915CC MOV X20, X1
	0x029915D0 MOV X21, X0
	0x029915D4 TBNZ X8, 0x0, 0x29915EC
	0x029915D8 ADRP X0, 0x1762000
	0x029915DC LDR X0, [X0 + 0x5A8]
	0x029915E0 BL 0x1C16CF4
	0x029915E4 MOVZ W8, 0x1
	0x029915E8 STRB W8, [X22 + 0xEF8]
	0x029915EC ADRP X26, 0x1762000
	0x029915F0 LDR X26, [X26 + 0x5A8]
	0x029915F4 STRB W31, [X31 + 0x8C]
	0x029915F8 LDR X23, [X21 + 0x18]
	0x029915FC BL 0x1C16D44
	0x02991600 LDR X8, [X20 + 0x30]
	0x02991604 LDP V1, V0, [X20 + 0x10]
	0x02991608 LDR V2, [X20]
	0x0299160C STR X8, [X31 + 0x30]
	0x02991610 STP V1, V0, [X31 + 0x10]
	0x02991614 STR V2, [X31]
	0x02991618 CBZ X23, 0x29917A4
	0x0299161C LDR X8, [X19 + 0x20]
	0x02991620 LDP V0, V1, [X31]
	0x02991624 LDR V2, [X31 + 0x2]
	0x02991628 LDR X9, [X31 + 0x30]
	0x0299162C LDR X8, [X8 + 0xC0]
	0x02991630 ADD X1, X31, 0x40
	0x02991634 MOV X0, X23
	0x02991638 LDR X2, [X8 + 0xD8]
	0x0299163C STP V0, V1, [X31 + 0x40]
	0x02991640 STR V2, [X31 + 0x6]
	0x02991644 STR X9, [X31 + 0x70]
	0x02991648 BL 0x25D7724
	0x0299164C TBNZ X0, 0x0, 0x2991788
	0x02991650 LDR X22, [X21 + 0x10]
	0x02991654 STRB W31, [X31 + 0x8C]
	0x02991658 ADD X1, X31, 0x8C
	0x0299165C MOV X0, X22
	0x02991660 MOV X2, X31
	0x02991664 BL 0x33DE64C
	0x02991668 LDR X24, [X21 + 0x18]
	0x0299166C BL 0x1C16D44
	0x02991670 CMP X23, X24
	0x02991674 B.EQ 0x2991684
	0x02991678 MOV X24, X31
	0x0299167C MOV W23, W31
	0x02991680 B 0x299172C
	0x02991684 LDR X8, [X19 + 0x20]
	0x02991688 LDR X8, [X8 + 0xC0]
	0x0299168C LDR X1, [X8 + 0xB8]
	0x02991690 MOV X0, X23
	0x02991694 BL 0x25D72DC
	0x02991698 LDRB W8, [X23 + 0x19C]
	0x0299169C CBZ W8, 0x29916A8
	0x029916A0 MOVZ W24, 0x20
	0x029916A4 B 0x29916E4
	0x029916A8 LDR X8, [X19 + 0x20]
	0x029916AC LDR X8, [X8 + 0xC0]
	0x029916B0 LDR X1, [X8 + 0xE8]
	0x029916B4 MOV X0, X23
	0x029916B8 BL 0x25D72A0
	0x029916BC MOV W24, W0
	0x029916C0 LDR X0, [X26]
	0x029916C4 LDR W8, [X0 + 0xE0]
	0x029916C8 CBNZ W8, 0x29916D0
	0x029916CC BL 0x1C16DFC
	0x029916D0 UBFM W0, W24, 0x1F, 0x1E
	0x029916D4 MOVZ W1, 0x100000
	0x029916D8 MOV X2, X31
	0x029916DC BL 0x337EE94
	0x029916E0 MOV W24, W0
	0x029916E4 LDR X8, [X19 + 0x20]
	0x029916E8 LDR X8, [X8 + 0xC0]
	0x029916EC LDR X0, [X8 + 0x8]
	0x029916F0 LDRB W8, [X0 + 0x135]
	0x029916F4 TBNZ X8, 0x0, 0x29916FC
	0x029916F8 BL 0x1C5C684
	0x029916FC BL 0x1C16F10
	0x02991700 LDR X8, [X19 + 0x20]
	0x02991704 MOV X25, X0
	0x02991708 LDR X8, [X8 + 0xC0]
	0x0299170C LDR X2, [X8 + 0x10]
	0x02991710 MOV W1, W24
	0x02991714 BL 0x25D720C
	0x02991718 STR X25, [X23 + 0x1A0]
	0x0299171C BL 0x1C16D44
	0x02991720 MOV X24, X31
	0x02991724 MOV W23, W31
	0x02991728 STR X25, [X21 + 0x18]
	0x0299172C LDRB W8, [X31 + 0x8C]
	0x02991730 CBZ W8, 0x2991740
	0x02991734 MOV X0, X22
	0x02991738 MOV X1, X31
	0x0299173C BL 0x33E14E4
	0x02991740 CBNZ X24, 0x29917A8
	0x02991744 CBZ W23, 0x29915F8
	0x02991748 B 0x2991788
	0x0299174C B 0x2991764
	0x02991750 B 0x2991764
	0x02991754 B 0x2991764
	0x02991758 B 0x2991764
	0x0299175C B 0x2991764
	0x02991760 B 0x2991764
	0x02991764 MOV X23, X0
	0x02991768 CMP W1, 0x1
	0x0299176C B.NE 0x29917B0
	0x02991770 MOV X0, X23
	0x02991774 BL 0x3EB1AD0
	0x02991778 LDR X24, [X0]
	0x0299177C BL 0x3EB1AE0
	0x02991780 MOVZ W23, 0x1
	0x02991784 B 0x299172C
	0x02991788 LDP X20, X19, [X31 + 0xC0]
	0x0299178C LDP X22, X21, [X31 + 0xB0]
	0x02991790 LDP X24, X23, [X31 + 0xA0]
	0x02991794 LDP X26, X25, [X31 + 0x90]
	0x02991798 LDR X30, [X31 + 0x80]
	0x0299179C ADD X31, X31, 0xD0
	0x029917A0 RET
	0x029917A4 BL 0x1C16F20
	0x029917A8 MOV X0, X24
	0x029917AC BL 0x1C16F18
	0x029917B0 MOV X24, X31
	0x029917B4 B 0x29917BC
	0x029917B8 MOV X23, X0
	0x029917BC LDRB W8, [X31 + 0x8C]
	0x029917C0 CBZ W8, 0x29917D0
	0x029917C4 MOV X0, X22
	0x029917C8 MOV X1, X31
	0x029917CC BL 0x33E14E4
	0x029917D0 CBNZ X24, 0x29917DC
	0x029917D4 MOV X0, X23
	0x029917D8 BL 0x1D2C690
	0x029917DC MOV X0, X24
	0x029917E0 BL 0x1C16F18
	0x029917E4 BL 0x1990590
	0x029917E8 STR X30, [X31 - 0x30]!
	0x029917EC STP X22, X21, [X31 + 0x10]
	0x029917F0 STP X20, X19, [X31 + 0x20]
	0x029917F4 LDR X22, [X0 + 0x20]
	0x029917F8 MOV X21, X2
	0x029917FC MOV X19, X0
	0x02991800 MOV X20, X1
	0x02991804 BL 0x1C16D44
	0x02991808 CBZ X22, 0x2991860
	0x0299180C LDR X8, [X21 + 0x20]
	0x02991810 MOV X0, X22
	0x02991814 MOV X1, X20
	0x02991818 LDR X8, [X8 + 0xC0]
	0x0299181C LDR X2, [X8 + 0xF0]
	0x02991820 BL 0x25D739C
	0x02991824 TBZ X0, 0x0, 0x299183C
	0x02991828 LDP X20, X19, [X31 + 0x20]
	0x0299182C LDP X22, X21, [X31 + 0x10]
	0x02991830 MOVZ W0, 0x1
	0x02991834 LDR X30, [X31], #0x30
	0x02991838 RET
	0x0299183C LDR X8, [X21 + 0x20]
	0x02991840 MOV X0, X19
	0x02991844 MOV X1, X20
	0x02991848 LDP X20, X19, [X31 + 0x20]
	0x0299184C LDR X8, [X8 + 0xC0]
	0x02991850 LDP X22, X21, [X31 + 0x10]
	0x02991854 LDR X2, [X8 + 0xF8]
	0x02991858 LDR X30, [X31], #0x30
	0x0299185C B 0x2991864
	0x02991860 BL 0x1C16F20
	0x02991864 SUB X31, X31, 0x50
	0x02991868 STP X30, X25, [X31 + 0x10]
	0x0299186C STP X24, X23, [X31 + 0x20]
	0x02991870 STP X22, X21, [X31 + 0x30]
	0x02991874 STP X20, X19, [X31 + 0x40]
	0x02991878 MOV X20, X2
	0x0299187C MOV X19, X1
	0x02991880 MOV X21, X0
	0x02991884 STRB W31, [X31 + 0xC]
	0x02991888 LDR X23, [X21 + 0x20]
	0x0299188C BL 0x1C16D44
	0x02991890 CBZ X23, 0x299199C
	0x02991894 LDR X8, [X20 + 0x20]
	0x02991898 MOV X0, X23
	0x0299189C MOV X1, X19
	0x029918A0 LDR X8, [X8 + 0xC0]
	0x029918A4 LDR X2, [X8 + 0xF0]
	0x029918A8 BL 0x25D739C
	0x029918AC TBNZ X0, 0x0, 0x2991968
	0x029918B0 LDR X8, [X23 + 0x1A0]
	0x029918B4 CBZ X8, 0x2991970
	0x029918B8 LDR X8, [X20 + 0x20]
	0x029918BC MOV X0, X23
	0x029918C0 MOV X1, X19
	0x029918C4 LDR X8, [X8 + 0xC0]
	0x029918C8 LDR X2, [X8 + 0xF0]
	0x029918CC BL 0x25D739C
	0x029918D0 TBNZ X0, 0x0, 0x2991968
	0x029918D4 LDR X22, [X21 + 0x10]
	0x029918D8 STRB W31, [X31 + 0xC]
	0x029918DC ADD X1, X31, 0xC
	0x029918E0 MOV X0, X22
	0x029918E4 MOV X2, X31
	0x029918E8 BL 0x33DE64C
	0x029918EC LDR X24, [X21 + 0x20]

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+192], X29
	003 Move [X31+200], X30
	004 Move [X31+208], X26
	005 Move [X31+216], X25
	006 Move [X31+224], X24
	007 Move [X31+232], X23
	008 Move [X31+240], X22
	009 Move [X31+248], X21
	010 Move [X31+256], X20
	011 Move [X31+264], X19
	012 Move X20, 0x1A4A000
	013 Move W8, [X20+3828]
	014 Move X21, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x1763000
	021 Move X0, [X0+3584]
	022 Call 0x1C17CF4
	023 Move X0, 0x1763000
	024 Move X0, [X0+3608]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+3828], W8
	028 Move [X31+176], X31
	029 Move [X31+184], X31
	030 Move [X31+168], X31
	031 Move X8, [X21+32]
	032 Add X1, X31, 184
	033 Add X2, X31, 172
	034 Add X3, X31, 176
	035 Move X8, [X8+192]
	036 Add X4, X31, 168
	037 Move X0, X19
	038 Move X5, [X8+104]
	039 Call 0x299219C, X0, X1, X2, X3, X4
	040 Move X8, [X21+32]
	041 Move X23, [X31+176]
	042 Move X24, [X31+184]
	043 Move W22, [X31+168]
	044 Move W25, [X31+172]
	045 Move X8, [X8+192]
	046 Move X0, X24
	047 Move W1, W25
	048 Move X2, X23
	049 Move X4, [X8+120]
	050 Move W3, W22
	051 Call 0x2991BF0, X0, X1, X2, X3
	052 Move X8, [X21+32]
	053 Move X20, X0
	054 Move X8, [X8+192]
	055 Move X8, [X8+136]
	056 Move W9, [X8+309]
	057 Move TEMP, X9
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfEqual {64}
	061 Move X0, X8
	062 Call 0x1C5D684
	063 Move X8, X0
	064 Move X26, 0x1763000
	065 Move X26, [X26+3584]
	066 Move X0, X8
	067 Move W1, W20
	068 Call 0x1C17D6C
	069 Move X8, [X21+32]
	070 Move X20, X0
	071 Move X0, X19
	072 Move X1, X24
	073 Move X8, [X8+192]
	074 Move W2, W25
	075 Move X3, X23
	076 Move W4, W22
	077 Move X5, [X8+144]
	078 Call 0x299244C, X0, X1, X2, X3, X4
	079 Move X19, X0
	080 Compare X0, 0
	081 JumpIfEqual {215}
	082 Move X22, 0x1763000
	083 Move X22, [X22+3608]
	084 Move W23, W31
	085 Move W24, 56
	086 Move X8, [X19]
	087 Move X1, [X22]
	088 NotImplemented "Instruction LDRH not yet implemented."
	089 Compare X9, 0
	090 JumpIfEqual {97}
	091 Move X10, [X8+176]
	092 Add X10, X10, 8
	093 NotImplemented "Instruction LDUR not yet implemented."
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Subtract X9, X9, 1
	096 Add X10, X10, 16
	097 Move X0, X19
	098 Move W2, W31
	099 Call 0x1C5D788
	100 NotImplemented "Instruction LDRSW not yet implemented."
	101 Add X8, X8, X9
	102 Add X0, X8, 312
	103 Move X8, [X0]
	104 Move X1, [X0+8]
	105 Move X0, X19
	106 NotImplemented "Instruction BLR not yet implemented."
	107 Move TEMP, X0
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfNotEqual {174}
	111 Move X8, [X21+32]
	112 Move X8, [X8+192]
	113 Move X1, [X8+72]
	114 Move W8, [X1+309]
	115 Move TEMP, X8
	116 And TEMP, TEMP, 1
	117 Compare TEMP, 1
	118 JumpIfEqual {122}
	119 Move X0, X1
	120 Call 0x1C5D684
	121 Move X1, X0
	122 Move X8, [X19]
	123 NotImplemented "Instruction LDRH not yet implemented."
	124 Compare X9, 0
	125 JumpIfEqual {132}
	126 Move X10, [X8+176]
	127 Add X10, X10, 8
	128 NotImplemented "Instruction LDUR not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Subtract X9, X9, 1
	131 Add X10, X10, 16
	132 Move X0, X19
	133 Move W2, W31
	134 Call 0x1C5D788
	135 NotImplemented "Instruction LDRSW not yet implemented."
	136 Add X8, X8, X9
	137 Add X0, X8, 312
	138 Move X9, [X0]
	139 Move X1, [X0+8]
	140 Add X8, X31, 56
	141 Move X0, X19
	142 NotImplemented "Instruction BLR not yet implemented."
	143 NotImplemented "Instruction LDUR not yet implemented."
	144 NotImplemented "Instruction LDUR not yet implemented."
	145 NotImplemented "Instruction LDUR not yet implemented."
	146 Move X8, [X31+104]
	147 Move [X31+112], V0
	148 Move [X31+120], V1
	149 Move [X31+9], V2
	150 Move [X31+160], X8
	151 Compare X20, 0
	152 JumpIfEqual {213}
	153 Move V0, [X31+112]
	154 Move V1, [X31+128]
	155 Move V2, [X31+9]
	156 Move X8, [X31+160]
	157 Move [X31], V0
	158 Move [X31+8], V1
	159 Move [X31+2], V2
	160 Move [X31+48], X8
	161 Move W8, [X20+24]
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Move V2, [X31+16]
	164 Move V0, [X31+32]
	165 Move X9, [X31+48]
	166 Move V1, [X31]
	167 NotImplemented "Instruction NOP not yet implemented."
	168 NotImplemented "Instruction SMADDL not yet implemented."
	169 Add W23, W23, 1
	170 Move [X8+80], X9
	171 Move [X8+48], V2
	172 Move [X8+56], V0
	173 Move [X8+2], V1
	174 Move X21, X31
	175 Compare X19, 0
	176 JumpIfEqual {198}
	177 Move X8, [X19]
	178 Move X1, [X26]
	179 NotImplemented "Instruction LDRH not yet implemented."
	180 Compare X9, 0
	181 JumpIfEqual {188}
	182 Move X10, [X8+176]
	183 Add X10, X10, 8
	184 NotImplemented "Instruction LDUR not yet implemented."
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Subtract X9, X9, 1
	187 Add X10, X10, 16
	188 Move X0, X19
	189 Move W2, W31
	190 Call 0x1C5D788
	191 NotImplemented "Instruction LDRSW not yet implemented."
	192 Add X8, X8, X9
	193 Add X0, X8, 312
	194 Move X8, [X0]
	195 Move X1, [X0+8]
	196 Move X0, X19
	197 NotImplemented "Instruction BLR not yet implemented."
	198 Compare X21, 0
	199 JumpIfNotEqual {216}
	200 Move X0, X20
	201 Move X20, [X31+256]
	202 Move X19, [X31+264]
	203 Move X22, [X31+240]
	204 Move X21, [X31+248]
	205 Move X24, [X31+224]
	206 Move X23, [X31+232]
	207 Move X26, [X31+208]
	208 Move X25, [X31+216]
	209 Move X29, [X31+192]
	210 Move X30, [X31+200]
	211 Add X31, X31, 272
	212 Return X0
	213 Call 0x1C17F20
	214 Call 0x1C17F28
	215 Call 0x1C17F20
	216 Move X0, X21
	217 Call 0x1C17F18
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Call 0x3EB2AD0
	220 Move X21, [X0]
	221 Call 0x3EB2AE0
	222 Move X20, X0
	223 Move X21, X31
	224 Move X20, X0
	225 Compare X19, 0
	226 JumpIfEqual {248}
	227 Move X8, [X19]
	228 Move X1, [X26]
	229 NotImplemented "Instruction LDRH not yet implemented."
	230 Compare X9, 0
	231 JumpIfEqual {238}
	232 Move X10, [X8+176]
	233 Add X10, X10, 8
	234 NotImplemented "Instruction LDUR not yet implemented."
	235 NotImplemented "Instruction CMP not yet implemented."
	236 Subtract X9, X9, 1
	237 Add X10, X10, 16
	238 Move X0, X19
	239 Move W2, W31
	240 Call 0x1C5D788
	241 NotImplemented "Instruction LDRSW not yet implemented."
	242 Add X8, X8, X9
	243 Add X0, X8, 312
	244 Move X8, [X0]
	245 Move X1, [X0+8]
	246 Move X0, X19
	247 NotImplemented "Instruction BLR not yet implemented."
	248 Compare X21, 0
	249 JumpIfNotEqual {252}
	250 Move X0, X20
	251 Call 0x1D2D690
	252 Move X0, X21
	253 Call 0x1C17F18
	254 Call 0x1991590

Method: System.Int32 get_Count()

Disassembly:
	0x029918F0 BL 0x1C16D44
	0x029918F4 CMP X23, X24
	0x029918F8 B.EQ 0x2991908
	0x029918FC MOV X23, X31
	0x02991900 MOV W24, W31
	0x02991904 B 0x299191C
	0x02991908 LDR X25, [X23 + 0x1A0]
	0x0299190C BL 0x1C16D44
	0x02991910 MOV X23, X31
	0x02991914 MOV W24, W31
	0x02991918 STR X25, [X21 + 0x20]
	0x0299191C LDRB W8, [X31 + 0xC]
	0x02991920 CBZ W8, 0x2991930
	0x02991924 MOV X0, X22
	0x02991928 MOV X1, X31
	0x0299192C BL 0x33E14E4
	0x02991930 CBNZ X23, 0x29919A0
	0x02991934 CBZ W24, 0x2991888
	0x02991938 B 0x29919A8
	0x0299193C B 0x2991944
	0x02991940 B 0x2991944
	0x02991944 MOV X24, X0
	0x02991948 CMP W1, 0x1
	0x0299194C B.NE 0x29919AC
	0x02991950 MOV X0, X24
	0x02991954 BL 0x3EB1AD0
	0x02991958 LDR X23, [X0]
	0x0299195C BL 0x3EB1AE0
	0x02991960 MOVZ W24, 0x1
	0x02991964 B 0x299191C
	0x02991968 MOVZ W0, 0x1
	0x0299196C B 0x2991984
	0x02991970 MOV W0, W31
	0x02991974 MOVI V0.2D, 0x0
	0x02991978 STR X31, [X19 + 0x30]
	0x0299197C STP V0, V0, [X19 + 0x10]
	0x02991980 STR V0, [X19]
	0x02991984 LDP X20, X19, [X31 + 0x40]
	0x02991988 LDP X22, X21, [X31 + 0x30]
	0x0299198C LDP X24, X23, [X31 + 0x20]
	0x02991990 LDP X30, X25, [X31 + 0x10]
	0x02991994 ADD X31, X31, 0x50
	0x02991998 RET
	0x0299199C BL 0x1C16F20
	0x029919A0 MOV X0, X23
	0x029919A4 BL 0x1C16F18
	0x029919A8 BL 0x1C16CAC
	0x029919AC MOV X23, X31
	0x029919B0 B 0x29919B8
	0x029919B4 MOV X24, X0
	0x029919B8 LDRB W8, [X31 + 0xC]
	0x029919BC CBZ W8, 0x29919CC
	0x029919C0 MOV X0, X22
	0x029919C4 MOV X1, X31
	0x029919C8 BL 0x33E14E4
	0x029919CC CBNZ X23, 0x29919D8
	0x029919D0 MOV X0, X24
	0x029919D4 BL 0x1D2C690
	0x029919D8 MOV X0, X23
	0x029919DC BL 0x1C16F18
	0x029919E0 BL 0x1990590
	0x029919E4 LDR X8, [X2 + 0x20]
	0x029919E8 MOVZ W2, 0x1
	0x029919EC LDR X8, [X8 + 0xC0]
	0x029919F0 LDR X3, [X8 + 0x50]
	0x029919F4 B 0x29919F8
	0x029919F8 STR X30, [X31 - 0x40]!
	0x029919FC STP X24, X23, [X31 + 0x10]
	0x02991A00 STP X22, X21, [X31 + 0x20]
	0x02991A04 STP X20, X19, [X31 + 0x30]
	0x02991A08 LDR X24, [X0 + 0x20]
	0x02991A0C MOV X20, X3
	0x02991A10 MOV W21, W2
	0x02991A14 MOV X19, X1
	0x02991A18 BL 0x1C16D44
	0x02991A1C CBZ X24, 0x2991A8C
	0x02991A20 AND W21, W21, 0x1
	0x02991A24 MOV X22, X24
	0x02991A28 LDR X24, [X22 + 0x1A0]
	0x02991A2C BL 0x1C16D44
	0x02991A30 LDR X8, [X20 + 0x20]
	0x02991A34 MOV X0, X22
	0x02991A38 MOV X1, X19
	0x02991A3C MOV W2, W21
	0x02991A40 LDR X8, [X8 + 0xC0]
	0x02991A44 LDR X3, [X8 + 0x108]
	0x02991A48 BL 0x25D7574
	0x02991A4C MOV W23, W0
	0x02991A50 TBNZ X0, 0x0, 0x2991A74
	0x02991A54 CBNZ X24, 0x2991A24
	0x02991A58 LDR X24, [X22 + 0x1A0]
	0x02991A5C BL 0x1C16D44
	0x02991A60 CBNZ X24, 0x2991A28
	0x02991A64 MOVI V0.2D, 0x0
	0x02991A68 STR X31, [X19 + 0x30]
	0x02991A6C STP V0, V0, [X19 + 0x10]
	0x02991A70 STR V0, [X19]
	0x02991A74 AND W0, W23, 0x1
	0x02991A78 LDP X20, X19, [X31 + 0x30]
	0x02991A7C LDP X22, X21, [X31 + 0x20]
	0x02991A80 LDP X24, X23, [X31 + 0x10]
	0x02991A84 LDR X30, [X31], #0x40
	0x02991A88 RET
	0x02991A8C BL 0x1C16F20
	0x02991A90 STR X30, [X31 - 0x30]!
	0x02991A94 STP X22, X21, [X31 + 0x10]
	0x02991A98 STP X20, X19, [X31 + 0x20]
	0x02991A9C ADRP X22, 0x1A49000
	0x02991AA0 ADRP X21, 0x1768000
	0x02991AA4 LDRB W8, [X22 + 0xEF9]
	0x02991AA8 LDR X21, [X21 + 0xCC0]
	0x02991AAC MOV X20, X1
	0x02991AB0 MOV X19, X0
	0x02991AB4 TBNZ X8, 0x0, 0x2991ACC
	0x02991AB8 ADRP X0, 0x1768000
	0x02991ABC LDR X0, [X0 + 0xCC0]
	0x02991AC0 BL 0x1C16CF4
	0x02991AC4 MOVZ W8, 0x1
	0x02991AC8 STRB W8, [X22 + 0xEF9]
	0x02991ACC MOV X0, X19
	0x02991AD0 MOV X1, X31
	0x02991AD4 BL 0x33BDD8C
	0x02991AD8 LDR X0, [X21]
	0x02991ADC BL 0x1C16F10
	0x02991AE0 MOV X1, X31
	0x02991AE4 MOV X21, X0
	0x02991AE8 BL 0x33BDD8C
	0x02991AEC STR X21, [X19 + 0x10]
	0x02991AF0 LDR X8, [X20 + 0x20]
	0x02991AF4 LDR X8, [X8 + 0xC0]
	0x02991AF8 LDR X0, [X8 + 0x8]
	0x02991AFC LDRB W8, [X0 + 0x135]
	0x02991B00 TBNZ X8, 0x0, 0x2991B08
	0x02991B04 BL 0x1C5C684
	0x02991B08 BL 0x1C16F10
	0x02991B0C LDR X8, [X20 + 0x20]
	0x02991B10 MOVZ W1, 0x20
	0x02991B14 MOV X20, X0
	0x02991B18 LDR X8, [X8 + 0xC0]
	0x02991B1C LDR X2, [X8 + 0x10]
	0x02991B20 BL 0x25D80C8
	0x02991B24 BL 0x1C16D44
	0x02991B28 STR X20, [X19 + 0x20]
	0x02991B2C BL 0x1C16D44
	0x02991B30 STR X20, [X19 + 0x18]
	0x02991B34 LDP X20, X19, [X31 + 0x20]
	0x02991B38 LDP X22, X21, [X31 + 0x10]
	0x02991B3C LDR X30, [X31], #0x30
	0x02991B40 RET
	0x02991B44 STR X30, [X31 - 0x30]!
	0x02991B48 STP X22, X21, [X31 + 0x10]
	0x02991B4C STP X20, X19, [X31 + 0x20]
	0x02991B50 LDR X8, [X3 + 0x20]
	0x02991B54 MOV X21, X1
	0x02991B58 MOV X19, X3
	0x02991B5C MOV W20, W2
	0x02991B60 LDR X8, [X8 + 0xC0]
	0x02991B64 MOV X22, X0

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X21, 0x1A4A000
	015 Move W8, [X21+3829]
	016 Move X20, X0
	017 Move [X31+8], X1
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x176F000
	023 Move X0, [X0+1136]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+3829], W8
	027 Move [X31+16], W31
	028 Move X23, [X20+32]
	029 Call 0x1C17D44
	030 Move [X31+40], X23
	031 Move X24, [X20+24]
	032 Call 0x1C17D44
	033 Move [X31+32], X24
	034 Compare X23, 0
	035 JumpIfEqual {104}
	036 Move X27, 0x176F000
	037 Move X29, [X31+32]
	038 Move X28, [X31+40]
	039 Move X27, [X27+1136]
	040 Move W21, W31
	041 Move W22, [X23+156]
	042 Call 0x1C17D44
	043 Move W25, [X23+284]
	044 Call 0x1C17D44
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X8, [X23+416]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Compare X24, 0
	049 JumpIfEqual {170}
	050 Move W26, [X24+156]
	051 Call 0x1C17D44
	052 Move W21, [X24+284]
	053 Call 0x1C17D44
	054 Move X19, [X20+32]
	055 Call 0x1C17D44
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X19, [X20+24]
	058 Call 0x1C17D44
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move W19, [X23+156]
	061 Call 0x1C17D44
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move W19, [X23+284]
	064 Call 0x1C17D44
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move W19, [X24+156]
	067 Call 0x1C17D44
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move W19, [X24+284]
	070 Call 0x1C17D44
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X26, [X20+32]
	073 Call 0x1C17D44
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X26, [X20+24]
	076 Call 0x1C17D44
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move W24, [X23+156]
	079 Call 0x1C17D44
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move W24, [X23+284]
	082 Call 0x1C17D44
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X0, [X27]
	085 Move W8, [X0+224]
	086 Compare W8, 0
	087 JumpIfNotEqual {89}
	088 Call 0x1C17DFC
	089 Add X0, X31, 16
	090 Move X1, X31
	091 Call SpinWait.SpinOnce, X0
	092 Move X28, [X20+32]
	093 Call 0x1C17D44
	094 Move X29, [X20+24]
	095 Call 0x1C17D44
	096 Move X24, X29
	097 Move X23, X28
	098 Compare X28, 0
	099 JumpIfNotEqual {41}
	100 Move [X31+32], X29
	101 Move [X31+40], X28
	102 Move [X31+24], W21
	103 Move [X31+28], W22
	104 Call 0x1C17F20
	105 Move X19, [X31+8]
	106 Move [X31+32], X29
	107 Move [X31+40], X28
	108 Move [X31+24], W21
	109 Move [X31+28], W22
	110 Add X1, X31, 40
	111 Move X8, [X19+32]
	112 Add X2, X31, 28
	113 Add X3, X31, 32
	114 Add X4, X31, 24
	115 Move X8, [X8+192]
	116 Move X0, X20
	117 Move X5, [X8+104]
	118 Call 0x299219C, X0, X1, X2, X3, X4
	119 Move X8, [X19+32]
	120 Move X2, [X31+32]
	121 Move X0, [X31+40]
	122 Move W3, [X31+24]
	123 Move W1, [X31+28]
	124 Move X8, [X8+192]
	125 Move X4, [X8+120]
	126 Call 0x2991BF0, X0, X1, X2, X3
	127 Move X20, [X31+128]
	128 Move X19, [X31+136]
	129 Move X22, [X31+112]
	130 Move X21, [X31+120]
	131 Move X24, [X31+96]
	132 Move X23, [X31+104]
	133 Move X26, [X31+80]
	134 Move X25, [X31+88]
	135 Move X28, [X31+64]
	136 Move X27, [X31+72]
	137 Move X29, [X31+48]
	138 Move X30, [X31+56]
	139 Add X31, X31, 144
	140 Return X0
	141 Move X8, [X31+8]
	142 Move [X31+32], X29
	143 Move [X31+40], X28
	144 Move X0, X23
	145 Move W1, W22
	146 Move X8, [X8+32]
	147 Move W2, W25
	148 Move X8, [X8+192]
	149 Move X3, [X8+160]
	150 Call 0x2991B68, X0, X1, X2
	151 Move X19, [X31+8]
	152 Move [X31+32], X29
	153 Move [X31+40], X28
	154 Move X0, X23
	155 Move W1, W22
	156 Move X8, [X19+32]
	157 Move W2, W25
	158 Move X8, [X8+192]
	159 Move X3, [X8+160]
	160 Call 0x2991B68, X0, X1, X2
	161 Move X8, [X19+32]
	162 Move W19, W0
	163 Move X0, X24
	164 Move W1, W26
	165 Move X8, [X8+192]
	166 Move W2, W21
	167 Move X3, [X8+160]
	168 Call 0x2991B68, X0, X1, X2
	169 Add W0, W0, W19
	170 Move [X31+32], X29
	171 Move [X31+40], X28
	172 Call 0x1C17F20

Method: System.Int32 GetCount(System.Collections.Concurrent.ConcurrentQueue`1/Segment<T> s, System.Int32 head, System.Int32 tail)

Disassembly:
	0x02991B68 LDR X1, [X8 + 0x20]
	0x02991B6C LDRB W8, [X1 + 0x135]
	0x02991B70 TBNZ X8, 0x0, 0x2991B80
	0x02991B74 MOV X0, X1
	0x02991B78 BL 0x1C5C684
	0x02991B7C MOV X1, X0
	0x02991B80 MOV X0, X21
	0x02991B84 BL 0x1C16E00
	0x02991B88 CBZ X0, 0x2991BB4
	0x02991B8C LDR X8, [X19 + 0x20]
	0x02991B90 MOV X1, X0
	0x02991B94 MOV X0, X22
	0x02991B98 MOV W2, W20
	0x02991B9C LDR X8, [X8 + 0xC0]
	0x02991BA0 LDP X20, X19, [X31 + 0x20]
	0x02991BA4 LDP X22, X21, [X31 + 0x10]
	0x02991BA8 LDR X3, [X8 + 0x28]
	0x02991BAC LDR X30, [X31], #0x30
	0x02991BB0 B 0x29924B4
	0x02991BB4 CBZ X21, 0x2991BEC
	0x02991BB8 LDR X8, [X19 + 0x20]
	0x02991BBC MOV X0, X22
	0x02991BC0 LDR X8, [X8 + 0xC0]
	0x02991BC4 LDR X1, [X8 + 0x30]
	0x02991BC8 BL 0x2991D34
	0x02991BCC CBZ X0, 0x2991C28
	0x02991BD0 MOV X1, X21
	0x02991BD4 MOV W2, W20
	0x02991BD8 LDP X20, X19, [X31 + 0x20]
	0x02991BDC LDP X22, X21, [X31 + 0x10]
	0x02991BE0 MOV X3, X31
	0x02991BE4 LDR X30, [X31], #0x30
	0x02991BE8 B 0x339FC34
	0x02991BEC ADRP X0, 0x1767000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move X19, X0
	007 Compare X0, 0
	008 JumpIfEqual {39}
	009 Move X0, [X3+32]
	010 Move W20, W2
	011 Move W21, W1
	012 Move W8, [X0+309]
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {18}
	017 Call 0x1C5D684
	018 Move X8, [X0+192]
	019 Move X0, X19
	020 Move X1, [X8+168]
	021 Call 0x25D82BC, X0
	022 Subtract W8, W20, W0
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move W0, W31
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return X0
	030 Move W8, [X19+24]
	031 And W9, W8, W21
	032 And W8, W8, W20
	033 Subtract W0, W8, W9
	034 Move X8, [X19+16]
	035 Compare X8, 0
	036 JumpIfEqual {39}
	037 Move W8, [X8+24]
	038 Add W0, W0, W8
	039 Call 0x1C17F20

Method: System.Int64 GetCount(System.Collections.Concurrent.ConcurrentQueue`1/Segment<T> head, System.Int32 headHead, System.Collections.Concurrent.ConcurrentQueue`1/Segment<T> tail, System.Int32 tailTail)

Disassembly:
	0x02991BF0 LDR X0, [X0 + 0x528]
	0x02991BF4 BL 0x1C16D08
	0x02991BF8 BL 0x1C16F10
	0x02991BFC MOV X20, X0
	0x02991C00 ADRP X0, 0x178A000
	0x02991C04 LDR X0, [X0 + 0x640]
	0x02991C08 BL 0x1C16D08
	0x02991C0C MOV X1, X0
	0x02991C10 MOV X0, X20
	0x02991C14 MOV X2, X31
	0x02991C18 BL 0x330E100
	0x02991C1C MOV X0, X20
	0x02991C20 MOV X1, X19
	0x02991C24 BL 0x1C16DEC
	0x02991C28 BL 0x1C16F20
	0x02991C2C MOV W0, W31
	0x02991C30 RET
	0x02991C34 STR X30, [X31 - 0x20]!
	0x02991C38 STP X20, X19, [X31 + 0x10]
	0x02991C3C ADRP X0, 0x1762000
	0x02991C40 LDR X0, [X0 + 0xB40]
	0x02991C44 MOV X19, X1
	0x02991C48 BL 0x1C16D08
	0x02991C4C BL 0x1C16F10
	0x02991C50 MOV X20, X0
	0x02991C54 ADRP X0, 0x178D000
	0x02991C58 LDR X0, [X0 + 0x2A0]
	0x02991C5C BL 0x1C16D08
	0x02991C60 MOV X1, X0
	0x02991C64 MOV X0, X20
	0x02991C68 MOV X2, X31
	0x02991C6C BL 0x3379A44
	0x02991C70 MOV X0, X20
	0x02991C74 MOV X1, X19
	0x02991C78 BL 0x1C16DEC
	0x02991C7C STP X30, X19, [X31 - 0x10]!
	0x02991C80 CBZ X0, 0x2991D00
	0x02991C84 LDR X8, [X1 + 0x20]
	0x02991C88 MOV X19, X0
	0x02991C8C LDR X8, [X8 + 0xC0]
	0x02991C90 LDR X1, [X8 + 0x38]
	0x02991C94 LDRB W8, [X1 + 0x135]
	0x02991C98 TBNZ X8, 0x0, 0x2991CA8
	0x02991C9C MOV X0, X1
	0x02991CA0 BL 0x1C5C684
	0x02991CA4 MOV X1, X0
	0x02991CA8 LDR X8, [X19]
	0x02991CAC LDRH W9, [X8 + 0x12E]
	0x02991CB0 CBZ X9, 0x2991CD4
	0x02991CB4 LDR X10, [X8 + 0xB0]
	0x02991CB8 ADD X10, X10, 0x8
	0x02991CBC LDUR X11, [X10 - 0x8]
	0x02991CC0 CMP X11, X1
	0x02991CC4 B.EQ 0x2991CE4
	0x02991CC8 SUBS X9, X9, 0x1
	0x02991CCC ADD X10, X10, 0x10
	0x02991CD0 B.NE 0x2991CBC
	0x02991CD4 MOV X0, X19
	0x02991CD8 MOV W2, W31
	0x02991CDC BL 0x1C5C788
	0x02991CE0 B 0x2991CF0
	0x02991CE4 LDRSW X9, [X10]
	0x02991CE8 ADD X8, X8, X9, 0x4, LSL
	0x02991CEC ADD X0, X8, 0x138
	0x02991CF0 LDP X2, X1, [X0]
	0x02991CF4 MOV X0, X19
	0x02991CF8 LDP X30, X19, [X31], #0x10
	0x02991CFC BR X2
	0x02991D00 BL 0x1C16F20
	0x02991D04 STR X30, [X31 - 0x10]!
	0x02991D08 STR X31, [X31 + 0x8]
	0x02991D0C LDR X8, [X1 + 0x20]
	0x02991D10 ADD X1, X31, 0x8
	0x02991D14 MOV W2, W31
	0x02991D18 LDR X8, [X8 + 0xC0]
	0x02991D1C LDR X3, [X8 + 0x50]
	0x02991D20 BL 0x2993098
	0x02991D24 ORN W8, W31, W0, 0x0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, X4
	009 Move W19, W3
	010 Move X20, X2
	011 Move X23, X0
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move W22, W1
	014 Compare X23, 0
	015 JumpIfEqual {90}
	016 Move W24, [X23+284]
	017 Call 0x1C17D44
	018 Move W24, W19
	019 Compare X23, 0
	020 JumpIfEqual {90}
	021 Move X0, [X21+32]
	022 Move W8, [X0+309]
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {28}
	027 Call 0x1C5D684
	028 Move X8, [X0+192]
	029 Move X0, X23
	030 Move X1, [X8+168]
	031 Call 0x25D82BC, X0
	032 Subtract W8, W24, W0
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W9, [X23+24]
	035 And W10, W9, W22
	036 And W8, W9, W8
	037 Subtract W8, W8, W10
	038 Move X9, [X23+16]
	039 Compare X9, 0
	040 JumpIfEqual {90}
	041 Move W9, [X9+24]
	042 Add W8, W8, W9
	043 Move X22, W8
	044 Move X22, X31
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X23, [X23+416]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Compare X23, 0
	049 JumpIfEqual {90}
	050 Move X0, [X21+32]
	051 Move W24, [X23+284]
	052 Move W8, [X0+309]
	053 Move TEMP, X8
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {58}
	057 Call 0x1C5D684
	058 Move X8, [X0+192]
	059 Move X0, X23
	060 Move X1, [X8+168]
	061 Call 0x25D82BC, X0
	062 Move X23, [X23+416]
	063 Subtract W8, W24, W0
	064 Add X22, X22, W8
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Compare X20, 0
	067 JumpIfEqual {90}
	068 Move X0, [X21+32]
	069 Move W8, [X0+309]
	070 Move TEMP, X8
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfEqual {75}
	074 Call 0x1C5D684
	075 Move X8, [X0+192]
	076 Move X0, X20
	077 Move X1, [X8+168]
	078 Call 0x25D82BC, X0
	079 Subtract W8, W19, W0
	080 Add X22, X22, W8
	081 Move X0, X22
	082 Move X20, [X31+48]
	083 Move X19, [X31+56]
	084 Move X22, [X31+32]
	085 Move X21, [X31+40]
	086 Move X24, [X31+16]
	087 Move X23, [X31+24]
	088 Move X30, [X31+64]
	089 Return X0
	090 Call 0x1C17F20

Method: System.Void CopyTo(T[] array, System.Int32 index)

Disassembly:
	0x02991D28 AND W0, W8, 0x1
	0x02991D2C LDR X30, [X31], #0x10
	0x02991D30 RET
	0x02991D34 SUB X31, X31, 0x60
	0x02991D38 STR X30, [X31 + 0x10]
	0x02991D3C STP X26, X25, [X31 + 0x20]
	0x02991D40 STP X24, X23, [X31 + 0x30]
	0x02991D44 STP X22, X21, [X31 + 0x40]
	0x02991D48 STP X20, X19, [X31 + 0x50]
	0x02991D4C ADRP X20, 0x1A49000
	0x02991D50 LDRB W8, [X20 + 0xEFA]
	0x02991D54 MOV X21, X1
	0x02991D58 MOV X19, X0
	0x02991D5C TBNZ X8, 0x0, 0x2991D80
	0x02991D60 ADRP X0, 0x1762000
	0x02991D64 LDR X0, [X0 + 0xE00]
	0x02991D68 BL 0x1C16CF4
	0x02991D6C ADRP X0, 0x1762000
	0x02991D70 LDR X0, [X0 + 0xE18]
	0x02991D74 BL 0x1C16CF4
	0x02991D78 MOVZ W8, 0x1
	0x02991D7C STRB W8, [X20 + 0xEFA]
	0x02991D80 STR X31, [X31 + 0x18]
	0x02991D84 STP X31, X31, [X31]
	0x02991D88 LDR X8, [X21 + 0x20]
	0x02991D8C ADD X1, X31, 0x18
	0x02991D90 ADD X2, X31, 0x4
	0x02991D94 ADD X3, X31, 0x8
	0x02991D98 LDR X8, [X8 + 0xC0]
	0x02991D9C ADD X4, X31, 0x0
	0x02991DA0 MOV X0, X19
	0x02991DA4 LDR X5, [X8 + 0x68]
	0x02991DA8 BL 0x29928F0
	0x02991DAC LDR X8, [X21 + 0x20]
	0x02991DB0 LDR X24, [X31 + 0x18]
	0x02991DB4 LDP W22, W25, [X31]
	0x02991DB8 LDR X23, [X31 + 0x8]
	0x02991DBC LDR X8, [X8 + 0xC0]
	0x02991DC0 MOV X0, X24
	0x02991DC4 MOV W1, W25
	0x02991DC8 MOV X2, X23
	0x02991DCC LDR X4, [X8 + 0x78]
	0x02991DD0 MOV W3, W22
	0x02991DD4 BL 0x299237C
	0x02991DD8 LDR X8, [X21 + 0x20]
	0x02991DDC MOV X20, X0
	0x02991DE0 LDR X8, [X8 + 0xC0]
	0x02991DE4 LDR X8, [X8 + 0x88]
	0x02991DE8 LDRB W9, [X8 + 0x135]
	0x02991DEC TBNZ X9, 0x0, 0x2991DFC
	0x02991DF0 MOV X0, X8
	0x02991DF4 BL 0x1C5C684
	0x02991DF8 MOV X8, X0
	0x02991DFC ADRP X26, 0x1762000
	0x02991E00 LDR X26, [X26 + 0xE00]
	0x02991E04 MOV X0, X8
	0x02991E08 MOV W1, W20
	0x02991E0C BL 0x1C16D6C
	0x02991E10 LDR X8, [X21 + 0x20]
	0x02991E14 MOV X20, X0
	0x02991E18 MOV X0, X19
	0x02991E1C MOV X1, X24
	0x02991E20 LDR X8, [X8 + 0xC0]
	0x02991E24 MOV W2, W25
	0x02991E28 MOV X3, X23
	0x02991E2C MOV W4, W22
	0x02991E30 LDR X5, [X8 + 0x90]
	0x02991E34 BL 0x2992B80
	0x02991E38 MOV X19, X0
	0x02991E3C CBZ X0, 0x2991FC8
	0x02991E40 ADRP X22, 0x1762000
	0x02991E44 LDR X22, [X22 + 0xE18]
	0x02991E48 MOV W23, W31
	0x02991E4C LDR X8, [X19]
	0x02991E50 LDR X1, [X22]
	0x02991E54 LDRH W9, [X8 + 0x12E]
	0x02991E58 CBZ X9, 0x2991E7C
	0x02991E5C LDR X10, [X8 + 0xB0]
	0x02991E60 ADD X10, X10, 0x8
	0x02991E64 LDUR X11, [X10 - 0x8]
	0x02991E68 CMP X11, X1
	0x02991E6C B.EQ 0x2991E8C
	0x02991E70 SUBS X9, X9, 0x1
	0x02991E74 ADD X10, X10, 0x10
	0x02991E78 B.NE 0x2991E64
	0x02991E7C MOV X0, X19
	0x02991E80 MOV W2, W31
	0x02991E84 BL 0x1C5C788
	0x02991E88 B 0x2991E98
	0x02991E8C LDRSW X9, [X10]
	0x02991E90 ADD X8, X8, X9, 0x4, LSL
	0x02991E94 ADD X0, X8, 0x138
	0x02991E98 LDP X8, X1, [X0]
	0x02991E9C MOV X0, X19
	0x02991EA0 BLR X8
	0x02991EA4 TBZ X0, 0x0, 0x2991F3C
	0x02991EA8 LDR X8, [X21 + 0x20]
	0x02991EAC LDR X8, [X8 + 0xC0]
	0x02991EB0 LDR X1, [X8 + 0x48]
	0x02991EB4 LDRB W8, [X1 + 0x135]
	0x02991EB8 TBNZ X8, 0x0, 0x2991EC8
	0x02991EBC MOV X0, X1
	0x02991EC0 BL 0x1C5C684
	0x02991EC4 MOV X1, X0
	0x02991EC8 LDR X8, [X19]
	0x02991ECC LDRH W9, [X8 + 0x12E]
	0x02991ED0 CBZ X9, 0x2991EF4
	0x02991ED4 LDR X10, [X8 + 0xB0]
	0x02991ED8 ADD X10, X10, 0x8
	0x02991EDC LDUR X11, [X10 - 0x8]
	0x02991EE0 CMP X11, X1
	0x02991EE4 B.EQ 0x2991F04
	0x02991EE8 SUBS X9, X9, 0x1
	0x02991EEC ADD X10, X10, 0x10
	0x02991EF0 B.NE 0x2991EDC
	0x02991EF4 MOV X0, X19
	0x02991EF8 MOV W2, W31
	0x02991EFC BL 0x1C5C788
	0x02991F00 B 0x2991F10
	0x02991F04 LDRSW X9, [X10]
	0x02991F08 ADD X8, X8, X9, 0x4, LSL
	0x02991F0C ADD X0, X8, 0x138
	0x02991F10 LDP X8, X1, [X0]
	0x02991F14 MOV X0, X19
	0x02991F18 BLR X8
	0x02991F1C CBZ X20, 0x2991FC0
	0x02991F20 LDR W8, [X20 + 0x18]
	0x02991F24 CMP W23, W8
	0x02991F28 B.CS 0x2991FC4
	0x02991F2C ADD X8, X20, W23, 0x3, SXTW
	0x02991F30 ADD W23, W23, 0x1
	0x02991F34 STR X0, [X8 + 0x20]
	0x02991F38 B 0x2991E4C
	0x02991F3C MOV X21, X31
	0x02991F40 CBZ X19, 0x2991F9C
	0x02991F44 LDR X8, [X19]
	0x02991F48 LDR X1, [X26]
	0x02991F4C LDRH W9, [X8 + 0x12E]
	0x02991F50 CBZ X9, 0x2991F74
	0x02991F54 LDR X10, [X8 + 0xB0]
	0x02991F58 ADD X10, X10, 0x8
	0x02991F5C LDUR X11, [X10 - 0x8]
	0x02991F60 CMP X11, X1
	0x02991F64 B.EQ 0x2991F84
	0x02991F68 SUBS X9, X9, 0x1
	0x02991F6C ADD X10, X10, 0x10
	0x02991F70 B.NE 0x2991F5C
	0x02991F74 MOV X0, X19
	0x02991F78 MOV W2, W31
	0x02991F7C BL 0x1C5C788
	0x02991F80 B 0x2991F90
	0x02991F84 LDRSW X9, [X10]
	0x02991F88 ADD X8, X8, X9, 0x4, LSL
	0x02991F8C ADD X0, X8, 0x138
	0x02991F90 LDP X8, X1, [X0]
	0x02991F94 MOV X0, X19
	0x02991F98 BLR X8
	0x02991F9C CBNZ X21, 0x2991FCC
	0x02991FA0 MOV X0, X20
	0x02991FA4 LDP X20, X19, [X31 + 0x50]
	0x02991FA8 LDP X22, X21, [X31 + 0x40]
	0x02991FAC LDP X24, X23, [X31 + 0x30]
	0x02991FB0 LDP X26, X25, [X31 + 0x20]
	0x02991FB4 LDR X30, [X31 + 0x10]
	0x02991FB8 ADD X31, X31, 0x60
	0x02991FBC RET
	0x02991FC0 BL 0x1C16F20
	0x02991FC4 BL 0x1C16F28
	0x02991FC8 BL 0x1C16F20
	0x02991FCC MOV X0, X21
	0x02991FD0 BL 0x1C16F18
	0x02991FD4 B 0x2991FE0
	0x02991FD8 B 0x2991FE0
	0x02991FDC B 0x2991FE0
	0x02991FE0 CMP W1, 0x1
	0x02991FE4 B.NE 0x2991FF8
	0x02991FE8 BL 0x3EB1AD0
	0x02991FEC LDR X21, [X0]
	0x02991FF0 BL 0x3EB1AE0
	0x02991FF4 B 0x2991F40
	0x02991FF8 MOV X20, X0
	0x02991FFC MOV X21, X31
	0x02992000 B 0x2992008
	0x02992004 MOV X20, X0
	0x02992008 CBZ X19, 0x2992064
	0x0299200C LDR X8, [X19]
	0x02992010 LDR X1, [X26]
	0x02992014 LDRH W9, [X8 + 0x12E]
	0x02992018 CBZ X9, 0x299203C
	0x0299201C LDR X10, [X8 + 0xB0]
	0x02992020 ADD X10, X10, 0x8
	0x02992024 LDUR X11, [X10 - 0x8]
	0x02992028 CMP X11, X1
	0x0299202C B.EQ 0x299204C
	0x02992030 SUBS X9, X9, 0x1
	0x02992034 ADD X10, X10, 0x10
	0x02992038 B.NE 0x2992024
	0x0299203C MOV X0, X19
	0x02992040 MOV W2, W31
	0x02992044 BL 0x1C5C788
	0x02992048 B 0x2992058
	0x0299204C LDRSW X9, [X10]
	0x02992050 ADD X8, X8, X9, 0x4, LSL
	0x02992054 ADD X0, X8, 0x138
	0x02992058 LDP X8, X1, [X0]
	0x0299205C MOV X0, X19
	0x02992060 BLR X8
	0x02992064 CBNZ X21, 0x2992070
	0x02992068 MOV X0, X20
	0x0299206C BL 0x1D2C690
	0x02992070 MOV X0, X21
	0x02992074 BL 0x1C16F18
	0x02992078 BL 0x1990590
	0x0299207C SUB X31, X31, 0x90
	0x02992080 STP X29, X30, [X31 + 0x30]
	0x02992084 STP X28, X27, [X31 + 0x40]
	0x02992088 STP X26, X25, [X31 + 0x50]
	0x0299208C STP X24, X23, [X31 + 0x60]
	0x02992090 STP X22, X21, [X31 + 0x70]
	0x02992094 STP X20, X19, [X31 + 0x80]
	0x02992098 ADRP X21, 0x1A48000
	0x0299209C LDRB W8, [X21 + 0xEFB]
	0x029920A0 MOV X20, X0
	0x029920A4 STR X1, [X31 + 0x8]
	0x029920A8 TBNZ X8, 0x0, 0x29920C0
	0x029920AC ADRP X0, 0x176D000
	0x029920B0 LDR X0, [X0 + 0x470]
	0x029920B4 BL 0x1C16CF4
	0x029920B8 MOVZ W8, 0x1
	0x029920BC STRB W8, [X21 + 0xEFB]
	0x029920C0 STR W31, [X31 + 0x10]
	0x029920C4 LDR X23, [X20 + 0x20]
	0x029920C8 BL 0x1C16D44
	0x029920CC STR X23, [X31 + 0x28]
	0x029920D0 LDR X24, [X20 + 0x18]
	0x029920D4 BL 0x1C16D44
	0x029920D8 STR X24, [X31 + 0x20]
	0x029920DC CBZ X23, 0x299220C
	0x029920E0 ADRP X27, 0x176D000
	0x029920E4 LDP X29, X28, [X31 + 0x20]
	0x029920E8 LDR X27, [X27 + 0x470]
	0x029920EC MOV W21, W31
	0x029920F0 LDR W22, [X23 + 0x9C]
	0x029920F4 BL 0x1C16D44
	0x029920F8 LDR W25, [X23 + 0x11C]
	0x029920FC BL 0x1C16D44
	0x02992100 CMP X23, X24
	0x02992104 B.EQ 0x299218C
	0x02992108 LDR X8, [X23 + 0x1A0]
	0x0299210C CMP X8, X24
	0x02992110 B.NE 0x2992210
	0x02992114 CBZ X24, 0x29922EC
	0x02992118 LDR W26, [X24 + 0x9C]
	0x0299211C BL 0x1C16D44
	0x02992120 LDR W21, [X24 + 0x11C]
	0x02992124 BL 0x1C16D44
	0x02992128 LDR X19, [X20 + 0x20]
	0x0299212C BL 0x1C16D44
	0x02992130 CMP X23, X19
	0x02992134 B.NE 0x29921CC
	0x02992138 LDR X19, [X20 + 0x18]

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+144], X30
	003 Move [X31+152], X27
	004 Move [X31+160], X26
	005 Move [X31+168], X25
	006 Move [X31+176], X24
	007 Move [X31+184], X23
	008 Move [X31+192], X22
	009 Move [X31+200], X21
	010 Move [X31+208], X20
	011 Move [X31+216], X19
	012 Move X23, 0x1A4A000
	013 Move W8, [X23+3830]
	014 Move X20, X3
	015 Move W22, W2
	016 Move X21, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x1763000
	023 Move X0, [X0+3584]
	024 Call 0x1C17CF4
	025 Move X0, 0x1763000
	026 Move X0, [X0+3608]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X23+3830], W8
	030 Move [X31+128], X31
	031 Move [X31+136], X31
	032 Move [X31+120], X31
	033 Compare X21, 0
	034 JumpIfEqual {197}
	035 Move TEMP, X22
	036 And TEMP, TEMP, -2147483648
	037 Compare TEMP, -2147483648
	038 JumpIfEqual {209}
	039 Move X8, [X20+32]
	040 Add X1, X31, 136
	041 Add X2, X31, 124
	042 Add X3, X31, 128
	043 Move X8, [X8+192]
	044 Add X4, X31, 120
	045 Move X0, X19
	046 Move X5, [X8+104]
	047 Call 0x299219C, X0, X1, X2, X3, X4
	048 Move X8, [X20+32]
	049 Move X24, [X31+128]
	050 Move X25, [X31+136]
	051 Move W23, [X31+120]
	052 Move W26, [X31+124]
	053 Move X8, [X8+192]
	054 Move X0, X25
	055 Move W1, W26
	056 Move X2, X24
	057 Move X4, [X8+120]
	058 Move W3, W23
	059 Call 0x2991BF0, X0, X1, X2, X3
	060 NotImplemented "Instruction LDRSW not yet implemented."
	061 Subtract X8, X8, X0
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X8, [X20+32]
	064 Move X27, 0x1763000
	065 Move X0, X19
	066 Move X1, X25
	067 Move X8, [X8+192]
	068 Move W2, W26
	069 Move X3, X24
	070 Move W4, W23
	071 Move X5, [X8+144]
	072 Move X27, [X27+3584]
	073 Call 0x299244C, X0, X1, X2, X3, X4
	074 Move X19, X0
	075 Compare X0, 0
	076 JumpIfEqual {241}
	077 Move X23, 0x1763000
	078 Move X23, [X23+3608]
	079 Move W24, 56
	080 Move X8, [X19]
	081 Move X1, [X23]
	082 NotImplemented "Instruction LDRH not yet implemented."
	083 Compare X9, 0
	084 JumpIfEqual {91}
	085 Move X10, [X8+176]
	086 Add X10, X10, 8
	087 NotImplemented "Instruction LDUR not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Subtract X9, X9, 1
	090 Add X10, X10, 16
	091 Move X0, X19
	092 Move W2, W31
	093 Call 0x1C5D788
	094 NotImplemented "Instruction LDRSW not yet implemented."
	095 Add X8, X8, X9
	096 Add X0, X8, 312
	097 Move X8, [X0]
	098 Move X1, [X0+8]
	099 Move X0, X19
	100 NotImplemented "Instruction BLR not yet implemented."
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfNotEqual {158}
	105 Move X8, [X20+32]
	106 Move X8, [X8+192]
	107 Move X1, [X8+72]
	108 Move W8, [X1+309]
	109 Move TEMP, X8
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfEqual {116}
	113 Move X0, X1
	114 Call 0x1C5D684
	115 Move X1, X0
	116 Move X8, [X19]
	117 NotImplemented "Instruction LDRH not yet implemented."
	118 Compare X9, 0
	119 JumpIfEqual {126}
	120 Move X10, [X8+176]
	121 Add X10, X10, 8
	122 NotImplemented "Instruction LDUR not yet implemented."
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Subtract X9, X9, 1
	125 Add X10, X10, 16
	126 Move X0, X19
	127 Move W2, W31
	128 Call 0x1C5D788
	129 NotImplemented "Instruction LDRSW not yet implemented."
	130 Add X8, X8, X9
	131 Add X0, X8, 312
	132 Move X9, [X0]
	133 Move X1, [X0+8]
	134 Add X8, X31, 64
	135 Move X0, X19
	136 NotImplemented "Instruction BLR not yet implemented."
	137 Move V0, [X31+64]
	138 Move V1, [X31+80]
	139 Move V2, [X31+6]
	140 Move X8, [X31+112]
	141 Move [X31], V0
	142 Move [X31+8], V1
	143 Move [X31+2], V2
	144 Move [X31+48], X8
	145 Move W8, [X21+24]
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Move V2, [X31+16]
	148 Move V0, [X31+32]
	149 Move X9, [X31+48]
	150 Move V1, [X31]
	151 NotImplemented "Instruction NOP not yet implemented."
	152 NotImplemented "Instruction SMADDL not yet implemented."
	153 Add W22, W22, 1
	154 Move [X8+80], X9
	155 Move [X8+48], V2
	156 Move [X8+56], V0
	157 Move [X8+2], V1
	158 Move X20, X31
	159 Compare X19, 0
	160 JumpIfEqual {182}
	161 Move X8, [X19]
	162 Move X1, [X27]
	163 NotImplemented "Instruction LDRH not yet implemented."
	164 Compare X9, 0
	165 JumpIfEqual {172}
	166 Move X10, [X8+176]
	167 Add X10, X10, 8
	168 NotImplemented "Instruction LDUR not yet implemented."
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Subtract X9, X9, 1
	171 Add X10, X10, 16
	172 Move X0, X19
	173 Move W2, W31
	174 Call 0x1C5D788
	175 NotImplemented "Instruction LDRSW not yet implemented."
	176 Add X8, X8, X9
	177 Add X0, X8, 312
	178 Move X8, [X0]
	179 Move X1, [X0+8]
	180 Move X0, X19
	181 NotImplemented "Instruction BLR not yet implemented."
	182 Compare X20, 0
	183 JumpIfNotEqual {242}
	184 Move X20, [X31+208]
	185 Move X19, [X31+216]
	186 Move X22, [X31+192]
	187 Move X21, [X31+200]
	188 Move X24, [X31+176]
	189 Move X23, [X31+184]
	190 Move X26, [X31+160]
	191 Move X25, [X31+168]
	192 Move X30, [X31+144]
	193 Move X27, [X31+152]
	194 Add X31, X31, 224
	195 Return 
	196 Call 0x1C17F28
	197 Move X0, 0x1768000
	198 Move X0, [X0+1320]
	199 Call 0x1C17D08
	200 Call 0x1C17F10
	201 Move X19, X0
	202 Move X0, 0x178B000
	203 Move X0, [X0+1600]
	204 Call 0x1C17D08
	205 Move X1, X0
	206 Move X0, X19
	207 Move X2, X31
	208 Call ArgumentNullException..ctor, X0, X1
	209 Move X0, 0x176A000
	210 Move X0, [X0+1888]
	211 Call 0x1C17D08
	212 Call 0x1C17F10
	213 Move X19, X0
	214 Move X0, 0x176D000
	215 Move X0, [X0+304]
	216 Call 0x1C17D08
	217 Move X21, X0
	218 Move X0, 0x178D000
	219 Move X0, [X0+1328]
	220 Call 0x1C17D08
	221 Move X2, X0
	222 Move X0, X19
	223 Move X1, X21
	224 Move X3, X31
	225 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	226 Move X0, 0x176A000
	227 Move X0, [X0+1400]
	228 Call 0x1C17D08
	229 Call 0x1C17F10
	230 Move X19, X0
	231 Move X0, 0x178D000
	232 Move X0, [X0+1336]
	233 Call 0x1C17D08
	234 Move X1, X0
	235 Move X0, X19
	236 Move X2, X31
	237 Call ArgumentException..ctor, X0, X1
	238 Move X0, X19
	239 Move X1, X20
	240 Call 0x1C17DEC
	241 Call 0x1C17F20
	242 Move X0, X20
	243 Call 0x1C17F18
	244 Move X21, X0
	245 NotImplemented "Instruction CMP not yet implemented."
	246 Move X0, X21
	247 Call 0x3EB2AD0
	248 Move X20, [X0]
	249 Call 0x3EB2AE0
	250 Move X20, X31
	251 Move X21, X0
	252 Compare X19, 0
	253 JumpIfEqual {275}
	254 Move X8, [X19]
	255 Move X1, [X27]
	256 NotImplemented "Instruction LDRH not yet implemented."
	257 Compare X9, 0
	258 JumpIfEqual {265}
	259 Move X10, [X8+176]
	260 Add X10, X10, 8
	261 NotImplemented "Instruction LDUR not yet implemented."
	262 NotImplemented "Instruction CMP not yet implemented."
	263 Subtract X9, X9, 1
	264 Add X10, X10, 16
	265 Move X0, X19
	266 Move W2, W31
	267 Call 0x1C5D788
	268 NotImplemented "Instruction LDRSW not yet implemented."
	269 Add X8, X8, X9
	270 Add X0, X8, 312
	271 Move X8, [X0]
	272 Move X1, [X0+8]
	273 Move X0, X19
	274 NotImplemented "Instruction BLR not yet implemented."
	275 Compare X20, 0
	276 JumpIfNotEqual {279}
	277 Move X0, X21
	278 Call 0x1D2D690
	279 Move X0, X20
	280 Call 0x1C17F18
	281 Call 0x1991590

Method: System.Collections.Generic.IEnumerator`1<T> GetEnumerator()

Disassembly:
	0x0299213C BL 0x1C16D44
	0x02992140 CMP X24, X19
	0x02992144 B.NE 0x29921CC
	0x02992148 LDR W19, [X23 + 0x9C]
	0x0299214C BL 0x1C16D44
	0x02992150 CMP W22, W19
	0x02992154 B.NE 0x29921CC
	0x02992158 LDR W19, [X23 + 0x11C]
	0x0299215C BL 0x1C16D44
	0x02992160 CMP W25, W19
	0x02992164 B.NE 0x29921CC
	0x02992168 LDR W19, [X24 + 0x9C]
	0x0299216C BL 0x1C16D44
	0x02992170 CMP W26, W19
	0x02992174 B.NE 0x29921CC
	0x02992178 LDR W19, [X24 + 0x11C]
	0x0299217C BL 0x1C16D44
	0x02992180 CMP W21, W19
	0x02992184 B.NE 0x29921CC
	0x02992188 B 0x29922A0
	0x0299218C LDR X26, [X20 + 0x20]
	0x02992190 BL 0x1C16D44
	0x02992194 CMP X24, X26
	0x02992198 B.NE 0x29921CC

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X31
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move [X31], X31
	007 Move [X31+8], X31
	008 Move X8, [X1+32]
	009 Move X19, X1
	010 Add X1, X31, 24
	011 Add X2, X31, 4
	012 Move X8, [X8+192]
	013 Add X3, X31, 8
	014 Add X4, X31, 0
	015 Move X20, X0
	016 Move X5, [X8+104]
	017 Call 0x299219C, X0, X1, X2, X3, X4
	018 Move X8, [X19+32]
	019 Move X30, [X31+16]
	020 Move X1, [X31+24]
	021 Move W4, [X31]
	022 Move W2, [X31+4]
	023 Move X3, [X31+8]
	024 Move X8, [X8+192]
	025 Move X0, X20
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X5, [X8+144]
	029 Add X31, X31, 48
	030 Call 0x299244C, X0, X1, X2, X3, X4
	031 Return X0

Method: System.Void SnapForObservation(out System.Collections.Concurrent.ConcurrentQueue`1/Segment<T> head, out System.Int32 headHead, out System.Collections.Concurrent.ConcurrentQueue`1/Segment<T> tail, out System.Int32 tailTail)

Disassembly:
	0x0299219C LDR X26, [X20 + 0x18]
	0x029921A0 BL 0x1C16D44
	0x029921A4 CMP X24, X26
	0x029921A8 B.NE 0x29921CC
	0x029921AC LDR W24, [X23 + 0x9C]
	0x029921B0 BL 0x1C16D44
	0x029921B4 CMP W22, W24
	0x029921B8 B.NE 0x29921CC
	0x029921BC LDR W24, [X23 + 0x11C]
	0x029921C0 BL 0x1C16D44
	0x029921C4 CMP W25, W24
	0x029921C8 B.EQ 0x2992278
	0x029921CC LDR X0, [X27]
	0x029921D0 LDR W8, [X0 + 0xE0]
	0x029921D4 CBNZ W8, 0x29921DC
	0x029921D8 BL 0x1C16DFC
	0x029921DC ADD X0, X31, 0x10
	0x029921E0 MOV X1, X31
	0x029921E4 BL 0x33DF18C
	0x029921E8 LDR X28, [X20 + 0x20]
	0x029921EC BL 0x1C16D44
	0x029921F0 LDR X29, [X20 + 0x18]
	0x029921F4 BL 0x1C16D44
	0x029921F8 MOV X24, X29
	0x029921FC MOV X23, X28
	0x02992200 CBNZ X28, 0x29920F0
	0x02992204 STP X29, X28, [X31 + 0x20]
	0x02992208 STP W21, W22, [X31 + 0x18]
	0x0299220C BL 0x1C16F20
	0x02992210 LDR X19, [X31 + 0x8]
	0x02992214 STP X29, X28, [X31 + 0x20]
	0x02992218 STP W21, W22, [X31 + 0x18]
	0x0299221C ADD X1, X31, 0x28
	0x02992220 LDR X8, [X19 + 0x20]
	0x02992224 ADD X2, X31, 0x1C
	0x02992228 ADD X3, X31, 0x20
	0x0299222C ADD X4, X31, 0x18
	0x02992230 LDR X8, [X8 + 0xC0]
	0x02992234 MOV X0, X20
	0x02992238 LDR X5, [X8 + 0x68]
	0x0299223C BL 0x29928F0
	0x02992240 LDR X8, [X19 + 0x20]
	0x02992244 LDP X2, X0, [X31 + 0x20]
	0x02992248 LDP W3, W1, [X31 + 0x18]
	0x0299224C LDR X8, [X8 + 0xC0]
	0x02992250 LDR X4, [X8 + 0x78]
	0x02992254 BL 0x299237C
	0x02992258 LDP X20, X19, [X31 + 0x80]
	0x0299225C LDP X22, X21, [X31 + 0x70]
	0x02992260 LDP X24, X23, [X31 + 0x60]
	0x02992264 LDP X26, X25, [X31 + 0x50]
	0x02992268 LDP X28, X27, [X31 + 0x40]
	0x0299226C LDP X29, X30, [X31 + 0x30]
	0x02992270 ADD X31, X31, 0x90
	0x02992274 RET
	0x02992278 LDR X8, [X31 + 0x8]
	0x0299227C STP X29, X28, [X31 + 0x20]
	0x02992280 MOV X0, X23
	0x02992284 MOV W1, W22
	0x02992288 LDR X8, [X8 + 0x20]
	0x0299228C MOV W2, W25
	0x02992290 LDR X8, [X8 + 0xC0]
	0x02992294 LDR X3, [X8 + 0xA0]
	0x02992298 BL 0x29922F4
	0x0299229C B 0x2992258
	0x029922A0 LDR X19, [X31 + 0x8]
	0x029922A4 STP X29, X28, [X31 + 0x20]
	0x029922A8 MOV X0, X23
	0x029922AC MOV W1, W22
	0x029922B0 LDR X8, [X19 + 0x20]
	0x029922B4 MOV W2, W25
	0x029922B8 LDR X8, [X8 + 0xC0]
	0x029922BC LDR X3, [X8 + 0xA0]
	0x029922C0 BL 0x29922F4
	0x029922C4 LDR X8, [X19 + 0x20]
	0x029922C8 MOV W19, W0
	0x029922CC MOV X0, X24
	0x029922D0 MOV W1, W26
	0x029922D4 LDR X8, [X8 + 0xC0]
	0x029922D8 MOV W2, W21
	0x029922DC LDR X3, [X8 + 0xA0]
	0x029922E0 BL 0x29922F4
	0x029922E4 ADD W0, W0, W19
	0x029922E8 B 0x2992258
	0x029922EC STP X29, X28, [X31 + 0x20]
	0x029922F0 BL 0x1C16F20
	0x029922F4 STP X30, X21, [X31 - 0x20]!
	0x029922F8 STP X20, X19, [X31 + 0x10]
	0x029922FC CMP W1, W2
	0x02992300 B.EQ 0x2992340
	0x02992304 MOV X19, X0
	0x02992308 CBZ X0, 0x2992378
	0x0299230C LDR X0, [X3 + 0x20]
	0x02992310 MOV W20, W2
	0x02992314 MOV W21, W1
	0x02992318 LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X19, [X0+16]
	011 Move X24, X5
	012 Move X20, X4
	013 Move X21, X3
	014 Move X22, X2
	015 Move X23, X1
	016 Move X25, X0
	017 Move [X31+12], W31
	018 Add X1, X31, 12
	019 Move X0, X19
	020 Move X2, X31
	021 Call Monitor.Enter, X0, X1
	022 Move X26, [X25+32]
	023 Call 0x1C17D44
	024 Move [X23], X26
	025 Move X25, [X25+24]
	026 Call 0x1C17D44
	027 Move [X21], X25
	028 Move X8, [X23]
	029 Compare X8, 0
	030 JumpIfEqual {37}
	031 Move W9, 1
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move [X8+412], W9
	034 Move X8, [X8+416]
	035 Compare X8, 0
	036 JumpIfNotEqual {32}
	037 Call 0x1C17F20
	038 Compare X25, 0
	039 JumpIfEqual {78}
	040 Move X8, [X24+32]
	041 Move X8, [X8+192]
	042 Move X1, [X8+184]
	043 Move X0, X25
	044 Call 0x25D82DC, X0
	045 Move X8, [X23]
	046 Compare X8, 0
	047 JumpIfEqual {79}
	048 Move W23, [X8+156]
	049 Call 0x1C17D44
	050 Move [X22], W23
	051 Move X8, [X21]
	052 Compare X8, 0
	053 JumpIfEqual {80}
	054 Move W22, [X8+284]
	055 Call 0x1C17D44
	056 Move X21, X31
	057 Move [X20], W22
	058 Move W8, [X31+12]
	059 Compare W8, 0
	060 JumpIfEqual {64}
	061 Move X0, X19
	062 Move X1, X31
	063 Call Monitor.Exit, X0
	064 Compare X21, 0
	065 JumpIfNotEqual {76}
	066 Move X20, [X31+64]
	067 Move X19, [X31+72]
	068 Move X22, [X31+48]
	069 Move X21, [X31+56]
	070 Move X24, [X31+32]
	071 Move X23, [X31+40]
	072 Move X26, [X31+16]
	073 Move X25, [X31+24]
	074 Move X30, [X31+80]
	075 Return 
	076 Move X0, X21
	077 Call 0x1C17F18
	078 Call 0x1C17F20
	079 Call 0x1C17F20
	080 Call 0x1C17F20
	081 Move X20, X0
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X0, X20
	084 Call 0x3EB2AD0
	085 Move X21, [X0]
	086 Call 0x3EB2AE0
	087 Move X21, X31
	088 Move X20, X0
	089 Move W8, [X31+12]
	090 Compare W8, 0
	091 JumpIfEqual {95}
	092 Move X0, X19
	093 Move X1, X31
	094 Call Monitor.Exit, X0
	095 Compare X21, 0
	096 JumpIfNotEqual {99}
	097 Move X0, X20
	098 Call 0x1D2D690
	099 Move X0, X21
	100 Call 0x1C17F18
	101 Call 0x1991590

Method: T GetItemWhenAvailable(System.Collections.Concurrent.ConcurrentQueue`1/Segment<T> segment, System.Int32 i)

Disassembly:
	0x0299231C TBNZ X8, 0x0, 0x2992324
	0x02992320 BL 0x1C5C684
	0x02992324 LDR X8, [X0 + 0xC0]
	0x02992328 MOV X0, X19
	0x0299232C LDR X1, [X8 + 0xA8]
	0x02992330 BL 0x25D8178
	0x02992334 SUB W8, W20, W0
	0x02992338 CMP W8, W21
	0x0299233C B.NE 0x2992350
	0x02992340 MOV W0, W31
	0x02992344 LDP X20, X19, [X31 + 0x10]
	0x02992348 LDP X30, X21, [X31], #0x20
	0x0299234C RET
	0x02992350 LDR W8, [X19 + 0x18]
	0x02992354 AND W9, W8, W21, 0x0
	0x02992358 AND W8, W8, W20, 0x0
	0x0299235C SUBS W0, W8, W9
	0x02992360 B.GT 0x2992344
	0x02992364 LDR X8, [X19 + 0x10]
	0x02992368 CBZ X8, 0x2992378
	0x0299236C LDR W8, [X8 + 0x18]
	0x02992370 ADD W0, W0, W8
	0x02992374 B 0x2992344
	0x02992378 BL 0x1C16F20
	0x0299237C STR X30, [X31 - 0x40]!
	0x02992380 STP X24, X23, [X31 + 0x10]
	0x02992384 STP X22, X21, [X31 + 0x20]
	0x02992388 STP X20, X19, [X31 + 0x30]
	0x0299238C MOV X21, X4
	0x02992390 MOV W19, W3
	0x02992394 MOV X20, X2
	0x02992398 MOV X23, X0
	0x0299239C CMP X0, X2
	0x029923A0 MOV W22, W1
	0x029923A4 B.EQ 0x29923B8
	0x029923A8 CBZ X23, 0x29924B0
	0x029923AC LDR W24, [X23 + 0x11C]
	0x029923B0 BL 0x1C16D44
	0x029923B4 B 0x29923C0
	0x029923B8 MOV W24, W19
	0x029923BC CBZ X23, 0x29924B0
	0x029923C0 LDR X0, [X21 + 0x20]
	0x029923C4 LDRB W8, [X0 + 0x135]
	0x029923C8 TBNZ X8, 0x0, 0x29923D0
	0x029923CC BL 0x1C5C684
	0x029923D0 LDR X8, [X0 + 0xC0]
	0x029923D4 MOV X0, X23
	0x029923D8 LDR X1, [X8 + 0xA8]
	0x029923DC BL 0x25D8178
	0x029923E0 SUB W8, W24, W0
	0x029923E4 CMP W8, W22
	0x029923E8 B.LE 0x2992418
	0x029923EC LDR W9, [X23 + 0x18]
	0x029923F0 AND W10, W9, W22, 0x0
	0x029923F4 AND W8, W9, W8, 0x0
	0x029923F8 SUBS W8, W8, W10
	0x029923FC B.GT 0x2992410
	0x02992400 LDR X9, [X23 + 0x10]
	0x02992404 CBZ X9, 0x29924B0
	0x02992408 LDR W9, [X9 + 0x18]
	0x0299240C ADD W8, W8, W9
	0x02992410 SXTW X22, W8
	0x02992414 B 0x299241C
	0x02992418 MOV X22, X31
	0x0299241C CMP X23, X20
	0x02992420 B.EQ 0x2992498
	0x02992424 LDR X23, [X23 + 0x1A0]
	0x02992428 CMP X23, X20
	0x0299242C B.EQ 0x299246C
	0x02992430 CBZ X23, 0x29924B0
	0x02992434 LDR X0, [X21 + 0x20]
	0x02992438 LDR W24, [X23 + 0x11C]
	0x0299243C LDRB W8, [X0 + 0x135]
	0x02992440 TBNZ X8, 0x0, 0x2992448
	0x02992444 BL 0x1C5C684
	0x02992448 LDR X8, [X0 + 0xC0]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x1A49000
	011 Move W9, [X22+3831]
	012 Move W20, W2
	013 Move X21, X1
	014 Move X19, X8
	015 Move TEMP, X9
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x176E000
	020 Move X0, [X0+1136]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+3831], W8
	024 Move [X31+8], W31
	025 Compare X21, 0
	026 JumpIfEqual {88}
	027 Move X8, [X21+16]
	028 Compare X8, 0
	029 JumpIfEqual {88}
	030 Move X9, [X8+24]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X22, W20
	033 Add X11, X8, X22
	034 Move W10, [X21+24]
	035 Move W11, [X11+88]
	036 Add W12, W20, 1
	037 And W23, W10, W12
	038 And W10, W11, W10
	039 NotImplemented "Instruction CMP not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move [X31+8], W31
	042 Move X24, 0x176E000
	043 Move X24, [X24+1136]
	044 Add X8, X8, X22
	045 Move W25, [X8+88]
	046 Call 0x1C17D44
	047 Move W8, [X21+24]
	048 And W8, W8, W25
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X0, [X24]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Add X0, X31, 8
	056 Move X1, X31
	057 Call SpinWait.SpinOnce, X0
	058 Move X8, [X21+16]
	059 Compare X8, 0
	060 JumpIfEqual {88}
	061 Move W9, [X8+24]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Call 0x1C17F28
	064 Move X8, [X21+16]
	065 Compare X8, 0
	066 JumpIfEqual {88}
	067 Move W9, [X8+24]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Add X8, X8, X22
	070 Move X9, [X8+80]
	071 Move V1, [X8+48]
	072 Move V0, [X8+64]
	073 Move V2, [X8+2]
	074 Move X22, [X31+48]
	075 Move X21, [X31+56]
	076 Move [X19+48], X9
	077 Move [X19+16], V1
	078 Move [X19+24], V0
	079 Move [X19], V2
	080 Move X20, [X31+64]
	081 Move X19, [X31+72]
	082 Move X24, [X31+32]
	083 Move X23, [X31+40]
	084 Move X30, [X31+16]
	085 Move X25, [X31+24]
	086 Add X31, X31, 80
	087 Return X0
	088 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerator`1<T> Enumerate(System.Collections.Concurrent.ConcurrentQueue`1/Segment<T> head, System.Int32 headHead, System.Collections.Concurrent.ConcurrentQueue`1/Segment<T> tail, System.Int32 tailTail)

Disassembly:
	0x0299244C MOV X0, X23
	0x02992450 LDR X1, [X8 + 0xA8]
	0x02992454 BL 0x25D8178
	0x02992458 LDR X23, [X23 + 0x1A0]
	0x0299245C SUB W8, W24, W0
	0x02992460 ADD X22, X22, W8, SXTW
	0x02992464 CMP X23, X20
	0x02992468 B.NE 0x2992430
	0x0299246C CBZ X20, 0x29924B0
	0x02992470 LDR X0, [X21 + 0x20]
	0x02992474 LDRB W8, [X0 + 0x135]
	0x02992478 TBNZ X8, 0x0, 0x2992480
	0x0299247C BL 0x1C5C684
	0x02992480 LDR X8, [X0 + 0xC0]
	0x02992484 MOV X0, X20
	0x02992488 LDR X1, [X8 + 0xA8]
	0x0299248C BL 0x25D8178
	0x02992490 SUB W8, W19, W0
	0x02992494 ADD X22, X22, W8, SXTW
	0x02992498 MOV X0, X22
	0x0299249C LDP X20, X19, [X31 + 0x30]
	0x029924A0 LDP X22, X21, [X31 + 0x20]
	0x029924A4 LDP X24, X23, [X31 + 0x10]
	0x029924A8 LDR X30, [X31], #0x40
	0x029924AC RET
	0x029924B0 BL 0x1C16F20
	0x029924B4 SUB X31, X31, 0x70
	0x029924B8 STP X30, X27, [X31 + 0x20]
	0x029924BC STP X26, X25, [X31 + 0x30]
	0x029924C0 STP X24, X23, [X31 + 0x40]
	0x029924C4 STP X22, X21, [X31 + 0x50]
	0x029924C8 STP X20, X19, [X31 + 0x60]
	0x029924CC ADRP X23, 0x1A48000
	0x029924D0 LDRB W8, [X23 + 0xEFC]
	0x029924D4 MOV X20, X3
	0x029924D8 MOV W22, W2
	0x029924DC MOV X21, X1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X5+32]
	009 Move X24, X5
	010 Move W19, W4
	011 Move X20, X3
	012 Move X8, [X8+192]
	013 Move W21, W2
	014 Move X22, X1
	015 Move X23, X0
	016 Move X8, [X8+200]
	017 Move W9, [X8+309]
	018 Move TEMP, X9
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {25}
	022 Move X0, X8
	023 Call 0x1C5D684
	024 Move X8, X0
	025 Move X0, X8
	026 Call 0x1C17F10
	027 Move X8, [X24+32]
	028 Move W1, W31
	029 Move X24, X0
	030 Move X8, [X8+192]
	031 Move X2, [X8+208]
	032 Call 0x238C704, X0, X1
	033 Compare X24, 0
	034 JumpIfEqual {49}
	035 Move [X24+104], X23
	036 Move [X24+80], X22
	037 Move [X24+88], X20
	038 Move [X24+96], W19
	039 Move [X24+100], W21
	040 Move X0, X24
	041 Move X20, [X31+48]
	042 Move X19, [X31+56]
	043 Move X22, [X31+32]
	044 Move X21, [X31+40]
	045 Move X24, [X31+16]
	046 Move X23, [X31+24]
	047 Move X30, [X31+64]
	048 Return X0
	049 Call 0x1C17F20

Method: System.Void Enqueue(T item)

Disassembly:
	0x029924E0 MOV X19, X0
	0x029924E4 TBNZ X8, 0x0, 0x2992508
	0x029924E8 ADRP X0, 0x1761000
	0x029924EC LDR X0, [X0 + 0xE00]
	0x029924F0 BL 0x1C16CF4
	0x029924F4 ADRP X0, 0x1761000
	0x029924F8 LDR X0, [X0 + 0xE18]
	0x029924FC BL 0x1C16CF4
	0x02992500 MOVZ W8, 0x1
	0x02992504 STRB W8, [X23 + 0xEFC]
	0x02992508 STP X31, X31, [X31 + 0x10]
	0x0299250C STR X31, [X31 + 0x8]
	0x02992510 CBZ X21, 0x2992720
	0x02992514 TBNZ X22, 0x1F, 0x2992754
	0x02992518 LDR X8, [X20 + 0x20]
	0x0299251C ADD X1, X31, 0x18
	0x02992520 ADD X2, X31, 0xC
	0x02992524 ADD X3, X31, 0x10
	0x02992528 LDR X8, [X8 + 0xC0]
	0x0299252C ADD X4, X31, 0x8
	0x02992530 MOV X0, X19
	0x02992534 LDR X5, [X8 + 0x68]
	0x02992538 BL 0x29928F0
	0x0299253C LDR X8, [X20 + 0x20]
	0x02992540 LDP X24, X25, [X31 + 0x10]
	0x02992544 LDP W23, W26, [X31 + 0x8]
	0x02992548 LDR X8, [X8 + 0xC0]
	0x0299254C MOV X0, X25
	0x02992550 MOV W1, W26
	0x02992554 MOV X2, X24
	0x02992558 LDR X4, [X8 + 0x78]
	0x0299255C MOV W3, W23
	0x02992560 BL 0x299237C
	0x02992564 LDRSW X8, [X21 + 0x18]
	0x02992568 SUB X8, X8, X0
	0x0299256C CMP X8, W22, UXTW
	0x02992570 B.LT 0x299279C
	0x02992574 LDR X8, [X20 + 0x20]
	0x02992578 ADRP X27, 0x1761000
	0x0299257C MOV X0, X19
	0x02992580 MOV X1, X25
	0x02992584 LDR X8, [X8 + 0xC0]
	0x02992588 MOV W2, W26
	0x0299258C MOV X3, X24
	0x02992590 MOV W4, W23
	0x02992594 LDR X5, [X8 + 0x90]
	0x02992598 LDR X27, [X27 + 0xE00]
	0x0299259C BL 0x2992B80
	0x029925A0 MOV X19, X0
	0x029925A4 CBZ X0, 0x29927D8

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+192], X30
	003 Move [X31+208], X22
	004 Move [X31+216], X21
	005 Move [X31+224], X20
	006 Move [X31+232], X19
	007 Move X22, [X0+24]
	008 Move X20, X2
	009 Move X19, X0
	010 Move X21, X1
	011 Call 0x1C17D44
	012 Move X8, [X21+48]
	013 Move V1, [X21+16]
	014 Move V0, [X21+32]
	015 Move V2, [X21]
	016 Move [X31+112], X8
	017 Move [X31+80], V1
	018 Move [X31+88], V0
	019 Move [X31+4], V2
	020 Compare X22, 0
	021 JumpIfEqual {65}
	022 Move X8, [X20+32]
	023 Move V0, [X31+64]
	024 Move V1, [X31+80]
	025 Move V2, [X31+6]
	026 Move X9, [X31+112]
	027 Move X8, [X8+192]
	028 Add X1, X31, 128
	029 Move X0, X22
	030 Move X2, [X8+216]
	031 Move [X31+128], V0
	032 Move [X31+136], V1
	033 Move [X31+10], V2
	034 Move [X31+176], X9
	035 Call 0x25D8724, X0, X1
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {58}
	040 Move X8, [X21+48]
	041 Move V1, [X21+16]
	042 Move V0, [X21+32]
	043 Move V2, [X21]
	044 Add X1, X31, 128
	045 Move [X31+48], X8
	046 Move [X31+16], V1
	047 Move [X31+24], V0
	048 Move [X31], V2
	049 Move X9, [X20+32]
	050 Move X0, X19
	051 Move X9, [X9+192]
	052 Move X2, [X9+224]
	053 Move [X31+128], V2
	054 Move [X31+136], V1
	055 Move [X31+10], V0
	056 Move [X31+176], X8
	057 Call 0x29925A8, X0, X1
	058 Move X20, [X31+224]
	059 Move X19, [X31+232]
	060 Move X22, [X31+208]
	061 Move X21, [X31+216]
	062 Move X30, [X31+192]
	063 Add X31, X31, 240
	064 Return 
	065 Call 0x1C17F20

Method: System.Void EnqueueSlow(T item)

Disassembly:
	0x029925A8 ADRP X23, 0x1761000
	0x029925AC LDR X23, [X23 + 0xE18]
	0x029925B0 LDR X8, [X19]
	0x029925B4 LDR X1, [X23]
	0x029925B8 LDRH W9, [X8 + 0x12E]
	0x029925BC CBZ X9, 0x29925E0
	0x029925C0 LDR X10, [X8 + 0xB0]
	0x029925C4 ADD X10, X10, 0x8
	0x029925C8 LDUR X11, [X10 - 0x8]
	0x029925CC CMP X11, X1
	0x029925D0 B.EQ 0x29925F0
	0x029925D4 SUBS X9, X9, 0x1
	0x029925D8 ADD X10, X10, 0x10
	0x029925DC B.NE 0x29925C8
	0x029925E0 MOV X0, X19
	0x029925E4 MOV W2, W31
	0x029925E8 BL 0x1C5C788
	0x029925EC B 0x29925FC
	0x029925F0 LDRSW X9, [X10]
	0x029925F4 ADD X8, X8, X9, 0x4, LSL
	0x029925F8 ADD X0, X8, 0x138
	0x029925FC LDP X8, X1, [X0]
	0x02992600 MOV X0, X19
	0x02992604 BLR X8
	0x02992608 TBZ X0, 0x0, 0x299269C
	0x0299260C LDR X8, [X20 + 0x20]
	0x02992610 LDR X8, [X8 + 0xC0]
	0x02992614 LDR X1, [X8 + 0x48]
	0x02992618 LDRB W8, [X1 + 0x135]
	0x0299261C TBNZ X8, 0x0, 0x299262C
	0x02992620 MOV X0, X1
	0x02992624 BL 0x1C5C684
	0x02992628 MOV X1, X0
	0x0299262C LDR X8, [X19]
	0x02992630 LDRH W9, [X8 + 0x12E]
	0x02992634 CBZ X9, 0x2992658
	0x02992638 LDR X10, [X8 + 0xB0]
	0x0299263C ADD X10, X10, 0x8
	0x02992640 LDUR X11, [X10 - 0x8]
	0x02992644 CMP X11, X1
	0x02992648 B.EQ 0x2992668
	0x0299264C SUBS X9, X9, 0x1
	0x02992650 ADD X10, X10, 0x10
	0x02992654 B.NE 0x2992640
	0x02992658 MOV X0, X19
	0x0299265C MOV W2, W31
	0x02992660 BL 0x1C5C788
	0x02992664 B 0x2992674
	0x02992668 LDRSW X9, [X10]
	0x0299266C ADD X8, X8, X9, 0x4, LSL
	0x02992670 ADD X0, X8, 0x138
	0x02992674 LDP X8, X1, [X0]
	0x02992678 MOV X0, X19
	0x0299267C BLR X8
	0x02992680 LDR W8, [X21 + 0x18]
	0x02992684 CMP W22, W8
	0x02992688 B.CS 0x299271C
	0x0299268C ADD X8, X21, W22, 0x3, SXTW
	0x02992690 ADD W22, W22, 0x1
	0x02992694 STR X0, [X8 + 0x20]
	0x02992698 B 0x29925B0
	0x0299269C MOV X20, X31
	0x029926A0 CBZ X19, 0x29926FC
	0x029926A4 LDR X8, [X19]
	0x029926A8 LDR X1, [X27]
	0x029926AC LDRH W9, [X8 + 0x12E]
	0x029926B0 CBZ X9, 0x29926D4
	0x029926B4 LDR X10, [X8 + 0xB0]
	0x029926B8 ADD X10, X10, 0x8
	0x029926BC LDUR X11, [X10 - 0x8]
	0x029926C0 CMP X11, X1
	0x029926C4 B.EQ 0x29926E4
	0x029926C8 SUBS X9, X9, 0x1
	0x029926CC ADD X10, X10, 0x10
	0x029926D0 B.NE 0x29926BC
	0x029926D4 MOV X0, X19
	0x029926D8 MOV W2, W31
	0x029926DC BL 0x1C5C788
	0x029926E0 B 0x29926F0
	0x029926E4 LDRSW X9, [X10]
	0x029926E8 ADD X8, X8, X9, 0x4, LSL
	0x029926EC ADD X0, X8, 0x138
	0x029926F0 LDP X8, X1, [X0]
	0x029926F4 MOV X0, X19
	0x029926F8 BLR X8
	0x029926FC CBNZ X20, 0x29927DC
	0x02992700 LDP X20, X19, [X31 + 0x60]
	0x02992704 LDP X22, X21, [X31 + 0x50]
	0x02992708 LDP X24, X23, [X31 + 0x40]
	0x0299270C LDP X26, X25, [X31 + 0x30]
	0x02992710 LDP X30, X27, [X31 + 0x20]
	0x02992714 ADD X31, X31, 0x70
	0x02992718 RET
	0x0299271C BL 0x1C16F28
	0x02992720 ADRP X0, 0x1766000
	0x02992724 LDR X0, [X0 + 0x528]
	0x02992728 BL 0x1C16D08
	0x0299272C BL 0x1C16F10
	0x02992730 MOV X19, X0
	0x02992734 ADRP X0, 0x1789000
	0x02992738 LDR X0, [X0 + 0x640]
	0x0299273C BL 0x1C16D08
	0x02992740 MOV X1, X0
	0x02992744 MOV X0, X19
	0x02992748 MOV X2, X31
	0x0299274C BL 0x330E100
	0x02992750 B 0x29927CC
	0x02992754 ADRP X0, 0x1769000
	0x02992758 LDR X0, [X0 + 0x760]
	0x0299275C BL 0x1C16D08
	0x02992760 BL 0x1C16F10
	0x02992764 MOV X19, X0
	0x02992768 ADRP X0, 0x176C000
	0x0299276C LDR X0, [X0 + 0x130]
	0x02992770 BL 0x1C16D08
	0x02992774 MOV X21, X0
	0x02992778 ADRP X0, 0x178C000
	0x0299277C LDR X0, [X0 + 0x530]
	0x02992780 BL 0x1C16D08
	0x02992784 MOV X2, X0
	0x02992788 MOV X0, X19
	0x0299278C MOV X1, X21
	0x02992790 MOV X3, X31
	0x02992794 BL 0x3311888
	0x02992798 B 0x29927CC
	0x0299279C ADRP X0, 0x1769000
	0x029927A0 LDR X0, [X0 + 0x578]
	0x029927A4 BL 0x1C16D08
	0x029927A8 BL 0x1C16F10
	0x029927AC MOV X19, X0
	0x029927B0 ADRP X0, 0x178C000
	0x029927B4 LDR X0, [X0 + 0x538]
	0x029927B8 BL 0x1C16D08
	0x029927BC MOV X1, X0
	0x029927C0 MOV X0, X19
	0x029927C4 MOV X2, X31
	0x029927C8 BL 0x3314A68
	0x029927CC MOV X0, X19
	0x029927D0 MOV X1, X20
	0x029927D4 BL 0x1C16DEC
	0x029927D8 BL 0x1C16F20
	0x029927DC MOV X0, X20
	0x029927E0 BL 0x1C16F18
	0x029927E4 B 0x29927F0

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+128], X30
	003 Move [X31+144], X26
	004 Move [X31+152], X25
	005 Move [X31+160], X24
	006 Move [X31+168], X23
	007 Move [X31+176], X22
	008 Move [X31+184], X21
	009 Move [X31+192], X20
	010 Move [X31+200], X19
	011 Move X22, 0x1A49000
	012 Move W8, [X22+3832]
	013 Move X19, X2
	014 Move X20, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x1762000
	021 Move X0, [X0+1448]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+3832], W8
	025 Move X26, 0x1762000
	026 Move X26, [X26+1448]
	027 Move [X31+140], W31
	028 Move X23, [X21+24]
	029 Call 0x1C17D44
	030 Move X8, [X20+48]
	031 Move V1, [X20+16]
	032 Move V0, [X20+32]
	033 Move V2, [X20]
	034 Move [X31+48], X8
	035 Move [X31+16], V1
	036 Move [X31+24], V0
	037 Move [X31], V2
	038 Compare X23, 0
	039 JumpIfEqual {145}
	040 Move X8, [X19+32]
	041 Move V0, [X31]
	042 Move V1, [X31+16]
	043 Move V2, [X31+2]
	044 Move X9, [X31+48]
	045 Move X8, [X8+192]
	046 Add X1, X31, 64
	047 Move X0, X23
	048 Move X2, [X8+216]
	049 Move [X31+64], V0
	050 Move [X31+72], V1
	051 Move [X31+6], V2
	052 Move [X31+112], X9
	053 Call 0x25D8724, X0, X1
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {134}
	058 Move X22, [X21+16]
	059 Move [X31+140], W31
	060 Add X1, X31, 140
	061 Move X0, X22
	062 Move X2, X31
	063 Call Monitor.Enter, X0, X1
	064 Move X24, [X21+24]
	065 Call 0x1C17D44
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X24, X31
	068 Move W23, W31
	069 Move X8, [X19+32]
	070 Move X8, [X8+192]
	071 Move X1, [X8+184]
	072 Move X0, X23
	073 Call 0x25D82DC, X0
	074 Move W8, [X23+412]
	075 Compare W8, 0
	076 JumpIfEqual {78}
	077 Move W24, 32
	078 Move X8, [X19+32]
	079 Move X8, [X8+192]
	080 Move X1, [X8+232]
	081 Move X0, X23
	082 Call 0x25D82A0, X0
	083 Move W24, W0
	084 Move X0, [X26]
	085 Move W8, [X0+224]
	086 Compare W8, 0
	087 JumpIfNotEqual {89}
	088 Call 0x1C17DFC
	089 Move W0, W24
	090 ShiftRight W0, 31
	091 And W0, W0, 0x3FFFFFFF
	092 Move W1, 0x100000
	093 Move X2, X31
	094 Call Math.Min, X0, X1
	095 Move W24, W0
	096 Move X8, [X19+32]
	097 Move X8, [X8+192]
	098 Move X0, [X8+8]
	099 Move W8, [X0+309]
	100 Move TEMP, X8
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfEqual {105}
	104 Call 0x1C5D684
	105 Call 0x1C17F10
	106 Move X8, [X19+32]
	107 Move X25, X0
	108 Move X8, [X8+192]
	109 Move X2, [X8+16]
	110 Move W1, W24
	111 Call 0x25D820C, X0, X1
	112 Move [X23+416], X25
	113 Call 0x1C17D44
	114 Move X24, X31
	115 Move W23, W31
	116 Move [X21+24], X25
	117 Move W8, [X31+140]
	118 Compare W8, 0
	119 JumpIfEqual {123}
	120 Move X0, X22
	121 Move X1, X31
	122 Call Monitor.Exit, X0
	123 Compare X24, 0
	124 JumpIfNotEqual {146}
	125 Compare W23, 0
	126 JumpIfEqual {28}
	127 Move X23, X0
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move X0, X23
	130 Call 0x3EB2AD0
	131 Move X24, [X0]
	132 Call 0x3EB2AE0
	133 Move W23, 1
	134 Move X20, [X31+192]
	135 Move X19, [X31+200]
	136 Move X22, [X31+176]
	137 Move X21, [X31+184]
	138 Move X24, [X31+160]
	139 Move X23, [X31+168]
	140 Move X26, [X31+144]
	141 Move X25, [X31+152]
	142 Move X30, [X31+128]
	143 Add X31, X31, 208
	144 Return 
	145 Call 0x1C17F20
	146 Move X0, X24
	147 Call 0x1C17F18
	148 Move X24, X31
	149 Move X23, X0
	150 Move W8, [X31+140]
	151 Compare W8, 0
	152 JumpIfEqual {156}
	153 Move X0, X22
	154 Move X1, X31
	155 Call Monitor.Exit, X0
	156 Compare X24, 0
	157 JumpIfNotEqual {160}
	158 Move X0, X23
	159 Call 0x1D2D690
	160 Move X0, X24
	161 Call 0x1C17F18
	162 Call 0x1991590

Method: System.Boolean TryDequeue(out T result)

Disassembly:
	0x029927E8 B 0x29927F0
	0x029927EC B 0x29927F0
	0x029927F0 MOV X21, X0
	0x029927F4 CMP W1, 0x1
	0x029927F8 B.NE 0x2992810
	0x029927FC MOV X0, X21
	0x02992800 BL 0x3EB1AD0
	0x02992804 LDR X20, [X0]
	0x02992808 BL 0x3EB1AE0
	0x0299280C B 0x29926A0
	0x02992810 MOV X20, X31
	0x02992814 B 0x299281C
	0x02992818 MOV X21, X0
	0x0299281C CBZ X19, 0x2992878
	0x02992820 LDR X8, [X19]
	0x02992824 LDR X1, [X27]
	0x02992828 LDRH W9, [X8 + 0x12E]
	0x0299282C CBZ X9, 0x2992850
	0x02992830 LDR X10, [X8 + 0xB0]
	0x02992834 ADD X10, X10, 0x8
	0x02992838 LDUR X11, [X10 - 0x8]
	0x0299283C CMP X11, X1
	0x02992840 B.EQ 0x2992860
	0x02992844 SUBS X9, X9, 0x1
	0x02992848 ADD X10, X10, 0x10
	0x0299284C B.NE 0x2992838
	0x02992850 MOV X0, X19
	0x02992854 MOV W2, W31
	0x02992858 BL 0x1C5C788
	0x0299285C B 0x299286C
	0x02992860 LDRSW X9, [X10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, [X0+32]
	007 Move X21, X2
	008 Move X19, X0
	009 Move X20, X1
	010 Call 0x1C17D44
	011 Compare X22, 0
	012 JumpIfEqual {40}
	013 Move X8, [X21+32]
	014 Move X0, X22
	015 Move X1, X20
	016 Move X8, [X8+192]
	017 Move X2, [X8+240]
	018 Call 0x25D839C, X0, X1
	019 Move TEMP, X0
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfNotEqual {30}
	023 Move X20, [X31+32]
	024 Move X19, [X31+40]
	025 Move X22, [X31+16]
	026 Move X21, [X31+24]
	027 Move W0, 1
	028 Move X30, [X31+48]
	029 Return X0
	030 Move X8, [X21+32]
	031 Move X0, X19
	032 Move X1, X20
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X8, [X8+192]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X2, [X8+248]
	039 Move X30, [X31+48]
	040 Call 0x1C17F20

Method: System.Boolean TryDequeueSlow(out T item)

Disassembly:
	0x02992864 ADD X8, X8, X9, 0x4, LSL
	0x02992868 ADD X0, X8, 0x138
	0x0299286C LDP X8, X1, [X0]
	0x02992870 MOV X0, X19
	0x02992874 BLR X8
	0x02992878 CBNZ X20, 0x2992884
	0x0299287C MOV X0, X21
	0x02992880 BL 0x1D2C690
	0x02992884 MOV X0, X20
	0x02992888 BL 0x1C16F18
	0x0299288C BL 0x1990590
	0x02992890 SUB X31, X31, 0x30
	0x02992894 STP X30, X31, [X31 + 0x10]
	0x02992898 STP X20, X19, [X31 + 0x20]
	0x0299289C STP X31, X31, [X31]
	0x029928A0 LDR X8, [X1 + 0x20]
	0x029928A4 MOV X19, X1
	0x029928A8 ADD X1, X31, 0x18
	0x029928AC ADD X2, X31, 0x4
	0x029928B0 LDR X8, [X8 + 0xC0]
	0x029928B4 ADD X3, X31, 0x8
	0x029928B8 ADD X4, X31, 0x0
	0x029928BC MOV X20, X0
	0x029928C0 LDR X5, [X8 + 0x68]
	0x029928C4 BL 0x29928F0
	0x029928C8 LDR X8, [X19 + 0x20]
	0x029928CC LDP X30, X1, [X31 + 0x10]
	0x029928D0 LDP W4, W2, [X31]
	0x029928D4 LDR X3, [X31 + 0x8]
	0x029928D8 LDR X8, [X8 + 0xC0]
	0x029928DC MOV X0, X20
	0x029928E0 LDP X20, X19, [X31 + 0x20]
	0x029928E4 LDR X5, [X8 + 0x90]
	0x029928E8 ADD X31, X31, 0x30
	0x029928EC B 0x2992B80
	0x029928F0 STR X30, [X31 - 0x50]!
	0x029928F4 STP X26, X25, [X31 + 0x10]
	0x029928F8 STP X24, X23, [X31 + 0x20]
	0x029928FC STP X22, X21, [X31 + 0x30]
	0x02992900 STP X20, X19, [X31 + 0x40]
	0x02992904 LDR X19, [X0 + 0x10]
	0x02992908 MOV X24, X5
	0x0299290C MOV X20, X4
	0x02992910 MOV X21, X3
	0x02992914 MOV X22, X2
	0x02992918 MOV X23, X1
	0x0299291C MOV X25, X0
	0x02992920 STRB W31, [X31 + 0xC]
	0x02992924 ADD X1, X31, 0xC
	0x02992928 MOV X0, X19
	0x0299292C MOV X2, X31
	0x02992930 BL 0x33DE64C
	0x02992934 LDR X26, [X25 + 0x20]
	0x02992938 BL 0x1C16D44
	0x0299293C STR X26, [X23]
	0x02992940 LDR X25, [X25 + 0x18]
	0x02992944 BL 0x1C16D44
	0x02992948 STR X25, [X21]
	0x0299294C LDR X8, [X23]
	0x02992950 CBZ X8, 0x299296C
	0x02992954 MOVZ W9, 0x1
	0x02992958 CMP X8, X25
	0x0299295C STRB W9, [X8 + 0x19C]
	0x02992960 B.EQ 0x2992970
	0x02992964 LDR X8, [X8 + 0x1A0]
	0x02992968 CBNZ X8, 0x2992958
	0x0299296C BL 0x1C16F20
	0x02992970 CBZ X25, 0x29929EC
	0x02992974 LDR X8, [X24 + 0x20]
	0x02992978 LDR X8, [X8 + 0xC0]
	0x0299297C LDR X1, [X8 + 0xB8]
	0x02992980 MOV X0, X25
	0x02992984 BL 0x25D8198
	0x02992988 LDR X8, [X23]
	0x0299298C CBZ X8, 0x29929F0
	0x02992990 LDR W23, [X8 + 0x9C]
	0x02992994 BL 0x1C16D44
	0x02992998 STR W23, [X22]
	0x0299299C LDR X8, [X21]
	0x029929A0 CBZ X8, 0x29929F4
	0x029929A4 LDR W22, [X8 + 0x11C]
	0x029929A8 BL 0x1C16D44
	0x029929AC MOV X21, X31
	0x029929B0 STR W22, [X20]
	0x029929B4 LDRB W8, [X31 + 0xC]
	0x029929B8 CBZ W8, 0x29929C8
	0x029929BC MOV X0, X19
	0x029929C0 MOV X1, X31
	0x029929C4 BL 0x33E14E4
	0x029929C8 CBNZ X21, 0x29929E4
	0x029929CC LDP X20, X19, [X31 + 0x40]
	0x029929D0 LDP X22, X21, [X31 + 0x30]
	0x029929D4 LDP X24, X23, [X31 + 0x20]
	0x029929D8 LDP X26, X25, [X31 + 0x10]
	0x029929DC LDR X30, [X31], #0x50
	0x029929E0 RET

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, X2
	011 Move X19, X1
	012 Move X21, X0
	013 Move [X31+12], W31
	014 Move X23, [X21+32]
	015 Call 0x1C17D44
	016 Compare X23, 0
	017 JumpIfEqual {91}
	018 Move X8, [X20+32]
	019 Move X0, X23
	020 Move X1, X19
	021 Move X8, [X8+192]
	022 Move X2, [X8+240]
	023 Call 0x25D839C, X0, X1
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {74}
	028 Move X8, [X23+416]
	029 Compare X8, 0
	030 JumpIfEqual {75}
	031 Move X8, [X20+32]
	032 Move X0, X23
	033 Move X1, X19
	034 Move X8, [X8+192]
	035 Move X2, [X8+240]
	036 Call 0x25D839C, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {74}
	041 Move X22, [X21+16]
	042 Move [X31+12], W31
	043 Add X1, X31, 12
	044 Move X0, X22
	045 Move X2, X31
	046 Call Monitor.Enter, X0, X1
	047 Move X24, [X21+32]
	048 Call 0x1C17D44
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X23, X31
	051 Move W24, W31
	052 Move X25, [X23+416]
	053 Call 0x1C17D44
	054 Move X23, X31
	055 Move W24, W31
	056 Move [X21+32], X25
	057 Move W8, [X31+12]
	058 Compare W8, 0
	059 JumpIfEqual {63}
	060 Move X0, X22
	061 Move X1, X31
	062 Call Monitor.Exit, X0
	063 Compare X23, 0
	064 JumpIfNotEqual {92}
	065 Compare W24, 0
	066 JumpIfEqual {14}
	067 Move X24, X0
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X0, X24
	070 Call 0x3EB2AD0
	071 Move X23, [X0]
	072 Call 0x3EB2AE0
	073 Move W24, 1
	074 Move W0, 1
	075 Move W0, W31
	076 NotImplemented "Instruction MOVI not yet implemented."
	077 Move [X19+48], X31
	078 Move [X19+16], V0
	079 Move [X19+24], V0
	080 Move [X19], V0
	081 Move X20, [X31+64]
	082 Move X19, [X31+72]
	083 Move X22, [X31+48]
	084 Move X21, [X31+56]
	085 Move X24, [X31+32]
	086 Move X23, [X31+40]
	087 Move X30, [X31+16]
	088 Move X25, [X31+24]
	089 Add X31, X31, 80
	090 Return X0
	091 Call 0x1C17F20
	092 Move X0, X23
	093 Call 0x1C17F18
	094 Call 0x1C17CAC
	095 Move X23, X31
	096 Move X24, X0
	097 Move W8, [X31+12]
	098 Compare W8, 0
	099 JumpIfEqual {103}
	100 Move X0, X22
	101 Move X1, X31
	102 Call Monitor.Exit, X0
	103 Compare X23, 0
	104 JumpIfNotEqual {107}
	105 Move X0, X24
	106 Call 0x1D2D690
	107 Move X0, X23
	108 Call 0x1C17F18
	109 Call 0x1991590

Method: System.Boolean TryPeek(out T result)

Disassembly:
	0x029929E4 MOV X0, X21
	0x029929E8 BL 0x1C16F18
	0x029929EC BL 0x1C16F20
	0x029929F0 BL 0x1C16F20
	0x029929F4 BL 0x1C16F20

ISIL:
	001 Move X8, [X2+32]
	002 Move W2, 1
	003 Move X8, [X8+192]
	004 Move X3, [X8+80]

Method: System.Boolean TryPeek(out T result, System.Boolean resultUsed)

Disassembly:
	0x029929F8 B 0x2992A18
	0x029929FC B 0x2992A18
	0x02992A00 B 0x2992A18
	0x02992A04 B 0x2992A18
	0x02992A08 B 0x2992A18
	0x02992A0C B 0x2992A18
	0x02992A10 B 0x2992A18
	0x02992A14 B 0x2992A18
	0x02992A18 MOV X20, X0
	0x02992A1C CMP W1, 0x1
	0x02992A20 B.NE 0x2992A38
	0x02992A24 MOV X0, X20
	0x02992A28 BL 0x3EB1AD0
	0x02992A2C LDR X21, [X0]
	0x02992A30 BL 0x3EB1AE0
	0x02992A34 B 0x29929B4
	0x02992A38 MOV X21, X31
	0x02992A3C B 0x2992A44
	0x02992A40 MOV X20, X0
	0x02992A44 LDRB W8, [X31 + 0xC]
	0x02992A48 CBZ W8, 0x2992A58
	0x02992A4C MOV X0, X19
	0x02992A50 MOV X1, X31
	0x02992A54 BL 0x33E14E4
	0x02992A58 CBNZ X21, 0x2992A64
	0x02992A5C MOV X0, X20
	0x02992A60 BL 0x1D2C690
	0x02992A64 MOV X0, X21
	0x02992A68 BL 0x1C16F18
	0x02992A6C BL 0x1990590
	0x02992A70 STR X30, [X31 - 0x40]!
	0x02992A74 STP X24, X23, [X31 + 0x10]
	0x02992A78 STP X22, X21, [X31 + 0x20]
	0x02992A7C STP X20, X19, [X31 + 0x30]
	0x02992A80 ADRP X21, 0x1A48000
	0x02992A84 LDRB W8, [X21 + 0xEFD]
	0x02992A88 MOV W19, W2
	0x02992A8C MOV X20, X1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, [X0+32]
	009 Move X20, X3
	010 Move W21, W2
	011 Move X19, X1
	012 Call 0x1C17D44
	013 Compare X24, 0
	014 JumpIfEqual {51}
	015 And W21, W21, 1
	016 Move X22, X24
	017 Move X24, [X22+416]
	018 Call 0x1C17D44
	019 Move X8, [X20+32]
	020 Move X0, X22
	021 Move X1, X19
	022 Move W2, W21
	023 Move X8, [X8+192]
	024 Move X3, [X8+264]
	025 Call 0x25D8574, X0, X1, X2
	026 Move W23, W0
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {42}
	031 Compare X24, 0
	032 JumpIfNotEqual {16}
	033 Move X24, [X22+416]
	034 Call 0x1C17D44
	035 Compare X24, 0
	036 JumpIfNotEqual {17}
	037 NotImplemented "Instruction MOVI not yet implemented."
	038 Move [X19+48], X31
	039 Move [X19+16], V0
	040 Move [X19+24], V0
	041 Move [X19], V0
	042 And W0, W23, 1
	043 Move X20, [X31+48]
	044 Move X19, [X31+56]
	045 Move X22, [X31+32]
	046 Move X21, [X31+40]
	047 Move X24, [X31+16]
	048 Move X23, [X31+24]
	049 Move X30, [X31+64]
	050 Return X0
	051 Call 0x1C17F20

