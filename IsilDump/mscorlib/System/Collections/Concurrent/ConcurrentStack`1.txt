Type: System.Collections.Concurrent.ConcurrentStack`1

Method: System.Void .ctor()

Disassembly:
	0x02995E64 LDR X8, [X19 + 0x20]
	0x02995E68 LDUR X0, [X29 - 0x10]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Int32 get_Count()

Disassembly:
	0x02995E6C LDR X8, [X8 + 0xC0]
	0x02995E70 LDR X8, [X8 + 0x10]
	0x02995E74 LDR X1, [X8 + 0x80]
	0x02995E78 BL 0x1C16D18
	0x02995E7C MOV X1, X0
	0x02995E80 MOV X0, X22
	0x02995E84 MOV X2, X21
	0x02995E88 BL 0x3EB1AC0
	0x02995E8C MOV X0, X20
	0x02995E90 MOV X1, X22

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, [X0+16]
	004 Call 0x1C17D44
	005 Move W0, W31
	006 Compare X19, 0
	007 JumpIfEqual {12}
	008 Move X19, [X19+24]
	009 Add W0, W0, 1
	010 Compare X19, 0
	011 JumpIfNotEqual {8}
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Return X0

Method: System.Boolean System.Collections.ICollection.get_IsSynchronized()

Disassembly:
	0x02995E94 MOV X2, X21
	0x02995E98 BL 0x3EB1AC0

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Object System.Collections.ICollection.get_SyncRoot()

Disassembly:
	0x02995E9C LDR X8, [X19 + 0x20]
	0x02995EA0 LDR X8, [X8 + 0xC0]
	0x02995EA4 LDR X0, [X8 + 0x28]
	0x02995EA8 LDRB W8, [X0 + 0x135]
	0x02995EAC TBNZ X8, 0x0, 0x2995EB4
	0x02995EB0 BL 0x1C5C684
	0x02995EB4 MOVZ W0, 0x1
	0x02995EB8 B 0x2995ED0
	0x02995EBC MOV X0, X20
	0x02995EC0 MOV W1, W31
	0x02995EC4 MOV X2, X21
	0x02995EC8 BL 0x3EB1B10
	0x02995ECC MOV W0, W31
	0x02995ED0 LDR X8, [X23 + 0x28]
	0x02995ED4 LDUR X9, [X29 - 0x8]
	0x02995ED8 CMP X8, X9
	0x02995EDC B.NE 0x2995EF8
	0x02995EE0 ADD X31, X29, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0x175F000
	005 Move X0, [X0+2880]
	006 Move X19, X1
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X20, X0
	010 Move X0, 0x178A000
	011 Move X0, [X0+672]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X20
	015 Move X2, X31
	016 Call NotSupportedException..ctor, X0, X1
	017 Move X0, X20
	018 Move X1, X19
	019 Call 0x1C17DEC

Method: System.Void System.Collections.ICollection.CopyTo(System.Array array, System.Int32 index)

Disassembly:
	0x02995EE4 LDP X20, X19, [X31 + 0x30]
	0x02995EE8 LDP X22, X21, [X31 + 0x20]
	0x02995EEC LDR X23, [X31 + 0x10]
	0x02995EF0 LDP X29, X30, [X31], #0x40
	0x02995EF4 RET
	0x02995EF8 BL 0x3EB1B20
	0x02995EFC SUB X31, X31, 0x70
	0x02995F00 STP X29, X30, [X31 + 0x10]
	0x02995F04 STP X28, X27, [X31 + 0x20]
	0x02995F08 STP X26, X25, [X31 + 0x30]
	0x02995F0C STP X24, X23, [X31 + 0x40]
	0x02995F10 STP X22, X21, [X31 + 0x50]
	0x02995F14 STP X20, X19, [X31 + 0x60]
	0x02995F18 ADRP X22, 0x1A45000
	0x02995F1C LDRB W8, [X22 + 0xF0A]
	0x02995F20 MOV X21, X3
	0x02995F24 MOV X19, X2
	0x02995F28 MOV W20, W1
	0x02995F2C MOV X23, X0
	0x02995F30 TBNZ X8, 0x0, 0x2995F60
	0x02995F34 ADRP X0, 0x1789000
	0x02995F38 LDR X0, [X0 + 0x2B0]
	0x02995F3C BL 0x1C16CF4
	0x02995F40 ADRP X0, 0x1765000
	0x02995F44 LDR X0, [X0 + 0x2E8]
	0x02995F48 BL 0x1C16CF4
	0x02995F4C ADRP X0, 0x176A000
	0x02995F50 LDR X0, [X0 + 0x470]
	0x02995F54 BL 0x1C16CF4
	0x02995F58 MOVZ W8, 0x1
	0x02995F5C STRB W8, [X22 + 0xF0A]
	0x02995F60 STR W31, [X31 + 0x8]
	0x02995F64 ADRP X28, 0x176A000
	0x02995F68 LDR X22, [X23 + 0x10]!
	0x02995F6C LDR X28, [X28 + 0x470]
	0x02995F70 BL 0x1C16D44
	0x02995F74 CBZ X22, 0x29960AC
	0x02995F78 ADRP X29, 0x1765000
	0x02995F7C LDR X29, [X29 + 0x2E8]
	0x02995F80 MOV X24, X31
	0x02995F84 MOVZ W26, 0x1
	0x02995F88 MOVZ W25, 0x1
	0x02995F8C MOV X27, X22
	0x02995F90 CMP W20, 0x2
	0x02995F94 B.LT 0x2995FEC
	0x02995F98 LDR X8, [X21 + 0x20]
	0x02995F9C MOV X0, X27
	0x02995FA0 LDR X8, [X8 + 0xC0]
	0x02995FA4 LDR X8, [X8 + 0x10]
	0x02995FA8 LDR X8, [X8 + 0x80]
	0x02995FAC ADD X1, X8, 0x20
	0x02995FB0 BL 0x1C16D18
	0x02995FB4 LDR X8, [X0]
	0x02995FB8 CBZ X8, 0x2995FEC
	0x02995FBC LDR X8, [X21 + 0x20]
	0x02995FC0 MOV X0, X27
	0x02995FC4 LDR X8, [X8 + 0xC0]
	0x02995FC8 LDR X8, [X8 + 0x10]
	0x02995FCC LDR X8, [X8 + 0x80]
	0x02995FD0 ADD X1, X8, 0x20
	0x02995FD4 BL 0x1C16D18
	0x02995FD8 LDR X27, [X0]
	0x02995FDC ADD W25, W25, 0x1
	0x02995FE0 CMP W20, W25
	0x02995FE4 B.NE 0x2995F98
	0x02995FE8 MOV W25, W20
	0x02995FEC BL 0x1C16D44
	0x02995FF0 LDR X8, [X21 + 0x20]
	0x02995FF4 MOV X0, X27
	0x02995FF8 LDR X8, [X8 + 0xC0]
	0x02995FFC LDR X8, [X8 + 0x10]
	0x02996000 LDR X8, [X8 + 0x80]
	0x02996004 ADD X1, X8, 0x20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x1A46000
	008 Move W8, [X23+3845]
	009 Move X21, X3
	010 Move W19, W2
	011 Move X20, X1
	012 Move X22, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x1766000
	018 Move X0, [X0+752]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+3845], W8
	022 Compare X20, 0
	023 JumpIfEqual {68}
	024 Move X8, [X21+32]
	025 Move X21, [X22+16]
	026 Move X8, [X8+192]
	027 Move X23, [X8+24]
	028 Call 0x1C17D44
	029 Move X8, [X23+32]
	030 Move X1, X21
	031 Move X8, [X8+192]
	032 Move X2, [X8+96]
	033 Call 0x2996598, X0, X1
	034 Compare X0, 0
	035 JumpIfEqual {83}
	036 Move X10, 0x1766000
	037 Move X8, [X0]
	038 Move X10, [X10+752]
	039 Move X21, X0
	040 NotImplemented "Instruction LDRH not yet implemented."
	041 Move X1, [X10]
	042 Compare X9, 0
	043 JumpIfEqual {50}
	044 Move X10, [X8+176]
	045 Add X10, X10, 8
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Subtract X9, X9, 1
	049 Add X10, X10, 16
	050 Move X0, X21
	051 Move W2, W31
	052 Call 0x1C5D788
	053 NotImplemented "Instruction LDRSW not yet implemented."
	054 Add X8, X8, X9
	055 Add X0, X8, 312
	056 Move X4, [X0]
	057 Move X3, [X0+8]
	058 Move X0, X21
	059 Move X1, X20
	060 Move W2, W19
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X22, [X31+16]
	064 Move X21, [X31+24]
	065 Move X30, [X31+48]
	066 Move X23, [X31+56]
	067 CallNoReturn X4
	068 Move X0, 0x1764000
	069 Move X0, [X0+1320]
	070 Call 0x1C17D08
	071 Call 0x1C17F10
	072 Move X19, X0
	073 Move X0, 0x1787000
	074 Move X0, [X0+1600]
	075 Call 0x1C17D08
	076 Move X1, X0
	077 Move X0, X19
	078 Move X2, X31
	079 Call ArgumentNullException..ctor, X0, X1
	080 Move X0, X19
	081 Move X1, X21
	082 Call 0x1C17DEC
	083 Call 0x1C17F20

Method: System.Void Push(T item)

Disassembly:
	0x02996008 BL 0x1C16D18
	0x0299600C LDR X1, [X0]
	0x02996010 MOV X0, X23
	0x02996014 MOV X2, X22
	0x02996018 BL 0x1C24138
	0x0299601C CMP X22, X0
	0x02996020 B.EQ 0x299615C
	0x02996024 BIC W22, W26, W26, 0x1F
	0x02996028 LDR X0, [X28]
	0x0299602C LDR W8, [X0 + 0xE0]
	0x02996030 CBNZ W8, 0x2996038
	0x02996034 BL 0x1C16DFC
	0x02996038 ADD X0, X31, 0x8
	0x0299603C MOV X1, X31
	0x02996040 CBZ W22, 0x2996050
	0x02996044 BL 0x33DF18C
	0x02996048 SUB W22, W22, 0x1
	0x0299604C B 0x2996028
	0x02996050 BL 0x33DF280
	0x02996054 TBNZ X0, 0x0, 0x299606C
	0x02996058 LDR X22, [X23]
	0x0299605C UBFM W26, W26, 0x1F, 0x1E
	0x02996060 BL 0x1C16D44
	0x02996064 CBNZ X22, 0x2995F88
	0x02996068 B 0x29960AC
	0x0299606C CBNZ X24, 0x2996088
	0x02996070 LDR X0, [X29]
	0x02996074 BL 0x1C16F10
	0x02996078 MOV X1, X31
	0x0299607C MOV X24, X0
	0x02996080 BL 0x338E3CC
	0x02996084 CBZ X24, 0x29961E0
	0x02996088 LDR X8, [X24]
	0x0299608C MOVZ W1, 0x1
	0x02996090 MOVZ W2, 0x8
	0x02996094 MOV X0, X24
	0x02996098 LDP X9, X3, [X8 + 0x198]
	0x0299609C BLR X9
	0x029960A0 LDR X22, [X23]
	0x029960A4 MOV W26, W0
	0x029960A8 B 0x2996060
	0x029960AC CMP W20, 0x1
	0x029960B0 B.NE 0x299612C
	0x029960B4 ADRP X20, 0x1788000
	0x029960B8 LDR X20, [X20 + 0x2B0]
	0x029960BC LDR X0, [X20]
	0x029960C0 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+32]
	007 Move X20, X2
	008 Move X21, X1
	009 Move X19, X0
	010 Move X8, [X8+192]
	011 Move X8, [X8+16]
	012 Move W9, [X8+309]
	013 Move TEMP, X9
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {20}
	017 Move X0, X8
	018 Call 0x1C5D684
	019 Move X8, X0
	020 Move X0, X8
	021 Call 0x1C17F10
	022 Move X8, [X20+32]
	023 Move X1, X21
	024 Move X20, X0
	025 Move X8, [X8+192]
	026 Move X2, [X8+48]
	027 Call 0x2424E3C, X0, X1
	028 Move X21, X19
	029 Add X21, X21, 16
	030 Move X22, [X21]
	031 Call 0x1C17D44
	032 Compare X20, 0
	033 JumpIfEqual {56}
	034 Move [X20+24], X22
	035 Call 0x1C17D44
	036 Move X2, [X20+24]
	037 Move X0, X21
	038 Move X1, X20
	039 Call 0x1C25138
	040 Move X8, [X20+24]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X0, X19
	043 Move X1, X20
	044 Move X2, X20
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X30, [X31+48]
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X30, [X31+48]
	055 Return 
	056 Call 0x1C17F20

Method: System.Void PushCore(System.Collections.Concurrent.ConcurrentStack`1/Node<T> head, System.Collections.Concurrent.ConcurrentStack`1/Node<T> tail)

Disassembly:
	0x029960C4 CBNZ W8, 0x29960D0
	0x029960C8 BL 0x1C16DFC
	0x029960CC LDR X0, [X20]
	0x029960D0 LDR X8, [X0 + 0xB8]
	0x029960D4 LDR X0, [X8]
	0x029960D8 CBZ X0, 0x29961E0
	0x029960DC MOV X1, X31
	0x029960E0 BL 0x334F914
	0x029960E4 TBZ X0, 0x0, 0x299612C
	0x029960E8 LDR X0, [X20]
	0x029960EC LDR W8, [X0 + 0xE0]
	0x029960F0 CBNZ W8, 0x29960FC
	0x029960F4 BL 0x1C16DFC
	0x029960F8 LDR X0, [X20]
	0x029960FC LDR X8, [X28]
	0x02996100 LDR X9, [X0 + 0xB8]
	0x02996104 LDR W10, [X8 + 0xE0]
	0x02996108 LDR X20, [X9]
	0x0299610C CBNZ W10, 0x2996118
	0x02996110 MOV X0, X8
	0x02996114 BL 0x1C16DFC
	0x02996118 CBZ X20, 0x29961E0
	0x0299611C LDR W1, [X31 + 0x8]
	0x02996120 MOV X0, X20
	0x02996124 MOV X2, X31
	0x02996128 BL 0x335DB4C
	0x0299612C MOV X22, X31
	0x02996130 MOV W25, W31
	0x02996134 STR X22, [X19]
	0x02996138 MOV W0, W25
	0x0299613C LDP X20, X19, [X31 + 0x60]
	0x02996140 LDP X22, X21, [X31 + 0x50]
	0x02996144 LDP X24, X23, [X31 + 0x40]
	0x02996148 LDP X26, X25, [X31 + 0x30]
	0x0299614C LDP X28, X27, [X31 + 0x20]
	0x02996150 LDP X29, X30, [X31 + 0x10]
	0x02996154 ADD X31, X31, 0x70
	0x02996158 RET
	0x0299615C CMP W20, 0x1
	0x02996160 B.NE 0x2996134
	0x02996164 ADRP X20, 0x1788000
	0x02996168 LDR X20, [X20 + 0x2B0]
	0x0299616C LDR X0, [X20]
	0x02996170 LDR W8, [X0 + 0xE0]
	0x02996174 CBNZ W8, 0x2996180
	0x02996178 BL 0x1C16DFC
	0x0299617C LDR X0, [X20]
	0x02996180 LDR X8, [X0 + 0xB8]
	0x02996184 LDR X0, [X8]
	0x02996188 CBZ X0, 0x29961E0
	0x0299618C MOV X1, X31
	0x02996190 BL 0x334F914
	0x02996194 TBZ X0, 0x0, 0x2996134
	0x02996198 LDR X0, [X20]
	0x0299619C LDR W8, [X0 + 0xE0]
	0x029961A0 CBNZ W8, 0x29961AC
	0x029961A4 BL 0x1C16DFC
	0x029961A8 LDR X0, [X20]
	0x029961AC LDR X8, [X28]
	0x029961B0 LDR X9, [X0 + 0xB8]
	0x029961B4 LDR W10, [X8 + 0xE0]
	0x029961B8 LDR X20, [X9]
	0x029961BC CBNZ W10, 0x29961C8
	0x029961C0 MOV X0, X8
	0x029961C4 BL 0x1C16DFC
	0x029961C8 CBZ X20, 0x29961E0
	0x029961CC LDR W1, [X31 + 0x8]
	0x029961D0 MOV X0, X20
	0x029961D4 MOV X2, X31
	0x029961D8 BL 0x335DB4C
	0x029961DC B 0x2996134
	0x029961E0 BL 0x1C16F20
	0x029961E4 STP X30, X21, [X31 - 0x20]!
	0x029961E8 STP X20, X19, [X31 + 0x10]
	0x029961EC LDR X20, [X0 + 0x10]
	0x029961F0 MOV X19, X0
	0x029961F4 MOV X21, X1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x1A45000
	009 Move W8, [X22+3846]
	010 Move X19, X2
	011 Move X20, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x1789000
	018 Move X0, [X0+688]
	019 Call 0x1C17CF4
	020 Move X0, 0x176A000
	021 Move X0, [X0+1136]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+3846], W8
	025 Move X22, 0x176A000
	026 Move X23, 0x1789000
	027 Move X22, [X22+1136]
	028 Move X23, [X23+688]
	029 Add X21, X21, 16
	030 Move [X31+8], W31
	031 Move X0, [X22]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Add X0, X31, 8
	037 Move X1, X31
	038 Call SpinWait.SpinOnce, X0
	039 Move X24, [X21]
	040 Call 0x1C17D44
	041 Compare X19, 0
	042 JumpIfEqual {95}
	043 Move [X19+24], X24
	044 Call 0x1C17D44
	045 Move X2, [X19+24]
	046 Move X0, X21
	047 Move X1, X20
	048 Call 0x1C25138
	049 Move X8, [X19+24]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X0, [X23]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {57}
	055 Call 0x1C17DFC
	056 Move X0, [X23]
	057 Move X8, [X0+184]
	058 Move X0, [X8]
	059 Compare X0, 0
	060 JumpIfEqual {95}
	061 Move X1, X31
	062 Call EventSource.IsEnabled, X0
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {87}
	067 Move X0, [X23]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {73}
	071 Call 0x1C17DFC
	072 Move X0, [X23]
	073 Move X8, [X22]
	074 Move X9, [X0+184]
	075 Move W10, [X8+224]
	076 Move X19, [X9]
	077 Compare W10, 0
	078 JumpIfNotEqual {81}
	079 Move X0, X8
	080 Call 0x1C17DFC
	081 Compare X19, 0
	082 JumpIfEqual {95}
	083 Move W1, [X31+8]
	084 Move X0, X19
	085 Move X2, X31
	086 Call CDSCollectionETWBCLProvider.ConcurrentStack_FastPushFailed, X0, X1
	087 Move X20, [X31+48]
	088 Move X19, [X31+56]
	089 Move X22, [X31+32]
	090 Move X21, [X31+40]
	091 Move X24, [X31+16]
	092 Move X23, [X31+24]
	093 Move X30, [X31+64]
	094 Return 
	095 Call 0x1C17F20

Method: System.Boolean TryPop(out T result)

Disassembly:
	0x029961F8 BL 0x1C16D44
	0x029961FC LDR X8, [X21 + 0x20]
	0x02996200 MOV X0, X19
	0x02996204 MOV X1, X20
	0x02996208 LDP X20, X19, [X31 + 0x10]
	0x0299620C LDR X8, [X8 + 0xC0]
	0x02996210 LDR X2, [X8 + 0x60]
	0x02996214 LDR X3, [X2]
	0x02996218 LDP X30, X21, [X31], #0x20
	0x0299621C BR X3
	0x02996220 STP X29, X30, [X31 - 0x40]!
	0x02996224 STP X24, X23, [X31 + 0x10]
	0x02996228 STP X22, X21, [X31 + 0x20]
	0x0299622C STP X20, X19, [X31 + 0x30]
	0x02996230 ADD X29, X31, 0x0
	0x02996234 SUB X31, X31, 0x10
	0x02996238 MRS X24, 0xC000
	0x0299623C LDR X8, [X24 + 0x28]
	0x02996240 MOV X19, X2
	0x02996244 MOV X21, X1
	0x02996248 STUR X8, [X29 - 0x8]
	0x0299624C LDR X8, [X2 + 0x20]
	0x02996250 LDR X8, [X8 + 0xC0]
	0x02996254 LDP X0, X9, [X8 + 0x20]
	0x02996258 LDR W20, [X9 + 0xFC]
	0x0299625C ADD X9, X31, 0x0
	0x02996260 ADD X10, X20, 0xF
	0x02996264 AND X10, X10, 0x1FFFFFFFF
	0x02996268 SUB X22, X9, X10
	0x0299626C ADD X31, X22, 0x0
	0x02996270 LDRB W8, [X0 + 0x135]
	0x02996274 TBNZ X8, 0x0, 0x299627C
	0x02996278 BL 0x1C5C684
	0x0299627C BL 0x1C16F10
	0x02996280 LDR X8, [X19 + 0x20]
	0x02996284 MOV X23, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, X0
	008 Add X23, X23, 16
	009 Move X22, [X23]
	010 Move X21, X2
	011 Move X20, X0
	012 Move X19, X1
	013 Call 0x1C17D44
	014 Compare X22, 0
	015 JumpIfEqual {33}
	016 Call 0x1C17D44
	017 Move X1, [X22+24]
	018 Move X0, X23
	019 Move X2, X22
	020 Call 0x1C25138
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X8, [X21+32]
	023 Move X0, X20
	024 Move X1, X19
	025 Move X20, [X31+32]
	026 Move X19, [X31+40]
	027 Move X8, [X8+192]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move X2, [X8+80]
	031 Move X30, [X31+48]
	032 Move X23, [X31+56]
	033 Move W0, W31
	034 Move [X19], X31
	035 Move X8, [X22+16]
	036 Move W0, 1
	037 Move [X19], X8
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 Move X23, [X31+56]
	044 Return X0

Method: System.Boolean TryPopCore(out T result)

Disassembly:
	0x02996288 LDR X8, [X8 + 0xC0]
	0x0299628C LDR X1, [X8 + 0x68]
	0x02996290 LDR X8, [X1]
	0x02996294 BLR X8
	0x02996298 CBZ X21, 0x2996324
	0x0299629C LDR X8, [X19 + 0x20]
	0x029962A0 MOV X0, X21
	0x029962A4 LDR X8, [X8 + 0xC0]
	0x029962A8 LDR X8, [X8 + 0x10]
	0x029962AC LDR X1, [X8 + 0x80]
	0x029962B0 BL 0x1C16D18
	0x029962B4 MOV X1, X0
	0x029962B8 MOV X0, X22
	0x029962BC MOV X2, X20
	0x029962C0 BL 0x3EB1AC0
	0x029962C4 CBZ X23, 0x2996350
	0x029962C8 LDR X8, [X19 + 0x20]
	0x029962CC MOV X4, X22
	0x029962D0 LDR X8, [X8 + 0xC0]
	0x029962D4 LDR X9, [X8 + 0x28]
	0x029962D8 LDR W9, [X9 + 0x28]

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Add X2, X31, 8
	006 Move W1, 1
	007 Move [X31+8], X31
	008 Call 0x29962DC, X0, X1, X2
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X8, [X31+8]
	011 Compare X8, 0
	012 JumpIfEqual {22}
	013 Move X8, [X8+16]
	014 Move [X19], X8
	015 Move [X19], X31
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]
	018 NotImplemented "Instruction CMP not yet implemented."
	019 NotImplemented "Instruction CSET not yet implemented."
	020 Add X31, X31, 32
	021 Return X0
	022 Call 0x1C17F20

Method: System.Int32 TryPopCore(System.Int32 count, out System.Collections.Concurrent.ConcurrentStack`1/Node<T> poppedHead)

Disassembly:
	0x029962DC TBNZ X9, 0x1F, 0x29962E4
	0x029962E0 LDR X4, [X22]
	0x029962E4 LDR X1, [X8 + 0x70]
	0x029962E8 SUB X3, X29, 0x10
	0x029962EC MOV X2, X23
	0x029962F0 LDR X0, [X1]
	0x029962F4 STUR X4, [X29 - 0x10]
	0x029962F8 LDR X8, [X1 + 0x10]
	0x029962FC BLR X8
	0x02996300 LDR X8, [X19 + 0x20]
	0x02996304 MOV X0, X21
	0x02996308 LDR X8, [X8 + 0xC0]
	0x0299630C LDR X8, [X8 + 0x10]
	0x02996310 LDR X8, [X8 + 0x80]
	0x02996314 ADD X1, X8, 0x20
	0x02996318 BL 0x1C16D18
	0x0299631C LDR X21, [X0]
	0x02996320 CBNZ X21, 0x299629C
	0x02996324 LDR X8, [X24 + 0x28]
	0x02996328 LDUR X9, [X29 - 0x8]
	0x0299632C CMP X8, X9
	0x02996330 B.NE 0x2996354
	0x02996334 MOV X0, X23
	0x02996338 ADD X31, X29, 0x0
	0x0299633C LDP X20, X19, [X31 + 0x30]
	0x02996340 LDP X22, X21, [X31 + 0x20]
	0x02996344 LDP X24, X23, [X31 + 0x10]
	0x02996348 LDP X29, X30, [X31], #0x40
	0x0299634C RET
	0x02996350 BL 0x1C16F20
	0x02996354 BL 0x3EB1B20
	0x02996358 STP X30, X21, [X31 - 0x20]!
	0x0299635C STP X20, X19, [X31 + 0x10]
	0x02996360 LDR X20, [X0 + 0x10]
	0x02996364 MOV X19, X0
	0x02996368 MOV X21, X1
	0x0299636C BL 0x1C16D44
	0x02996370 LDR X8, [X21 + 0x20]
	0x02996374 MOV X0, X19
	0x02996378 MOV X1, X20
	0x0299637C LDP X20, X19, [X31 + 0x10]
	0x02996380 LDR X8, [X8 + 0xC0]
	0x02996384 LDR X2, [X8 + 0x78]
	0x02996388 LDR X3, [X2]
	0x0299638C LDP X30, X21, [X31], #0x20
	0x02996390 BR X3
	0x02996394 STP X30, X21, [X31 - 0x20]!
	0x02996398 STP X20, X19, [X31 + 0x10]
	0x0299639C LDR X8, [X2 + 0x20]
	0x029963A0 MOV X20, X2
	0x029963A4 MOV X19, X1
	0x029963A8 LDR X8, [X8 + 0xC0]
	0x029963AC LDR X0, [X8 + 0x88]
	0x029963B0 LDRB W8, [X0 + 0x135]
	0x029963B4 TBNZ X8, 0x0, 0x29963BC
	0x029963B8 BL 0x1C5C684
	0x029963BC BL 0x1C16F10
	0x029963C0 LDR X8, [X20 + 0x20]
	0x029963C4 MOV W1, W31
	0x029963C8 MOV X21, X0
	0x029963CC LDR X8, [X8 + 0xC0]
	0x029963D0 LDR X2, [X8 + 0x90]
	0x029963D4 LDR X8, [X2]
	0x029963D8 BLR X8
	0x029963DC CBZ X21, 0x2996420
	0x029963E0 LDR X8, [X20 + 0x20]
	0x029963E4 MOVZ W1, 0x8
	0x029963E8 LDR X8, [X8 + 0xC0]
	0x029963EC LDR X8, [X8 + 0x88]
	0x029963F0 LDR X8, [X8 + 0x80]
	0x029963F4 ADD X20, X8, 0x40
	0x029963F8 MOV X0, X20
	0x029963FC BL 0x1C16D14
	0x02996400 MOV X0, X21
	0x02996404 MOV X1, X20
	0x02996408 BL 0x1C16D18
	0x0299640C STR X19, [X0]
	0x02996410 LDP X20, X19, [X31 + 0x10]
	0x02996414 MOV X0, X21
	0x02996418 LDP X30, X21, [X31], #0x20
	0x0299641C RET
	0x02996420 BL 0x1C16F20
	0x02996424 STP X30, X19, [X31 - 0x10]!
	0x02996428 CBZ X0, 0x29964A8
	0x0299642C LDR X8, [X1 + 0x20]
	0x02996430 MOV X19, X0
	0x02996434 LDR X8, [X8 + 0xC0]
	0x02996438 LDR X1, [X8 + 0x98]
	0x0299643C LDRB W8, [X1 + 0x135]
	0x02996440 TBNZ X8, 0x0, 0x2996450
	0x02996444 MOV X0, X1
	0x02996448 BL 0x1C5C684
	0x0299644C MOV X1, X0
	0x02996450 LDR X8, [X19]
	0x02996454 LDRH W9, [X8 + 0x12E]
	0x02996458 CBZ X9, 0x299647C
	0x0299645C LDR X10, [X8 + 0xB0]
	0x02996460 ADD X10, X10, 0x8
	0x02996464 LDUR X11, [X10 - 0x8]
	0x02996468 CMP X11, X1
	0x0299646C B.EQ 0x299648C
	0x02996470 SUBS X9, X9, 0x1
	0x02996474 ADD X10, X10, 0x10
	0x02996478 B.NE 0x2996464
	0x0299647C MOV X0, X19
	0x02996480 MOV W2, W31
	0x02996484 BL 0x1C5C788
	0x02996488 B 0x2996498
	0x0299648C LDRSW X9, [X10]
	0x02996490 ADD X8, X8, X9, 0x4, LSL
	0x02996494 ADD X0, X8, 0x138
	0x02996498 LDP X2, X1, [X0]
	0x0299649C MOV X0, X19
	0x029964A0 LDP X30, X19, [X31], #0x10
	0x029964A4 BR X2
	0x029964A8 BL 0x1C16F20
	0x029964AC STP X30, X23, [X31 - 0x30]!
	0x029964B0 STP X22, X21, [X31 + 0x10]
	0x029964B4 STP X20, X19, [X31 + 0x20]
	0x029964B8 ADRP X20, 0x1A44000
	0x029964BC ADRP X23, 0x1763000
	0x029964C0 ADRP X22, 0x1788000
	0x029964C4 ADRP X21, 0x1764000
	0x029964C8 LDRB W8, [X20 + 0xF0B]
	0x029964CC LDR X23, [X23 + 0xCC0]
	0x029964D0 LDR X22, [X22 + 0x540]
	0x029964D4 LDR X21, [X21 + 0xC10]
	0x029964D8 MOV X19, X0
	0x029964DC TBNZ X8, 0x0, 0x299650C
	0x029964E0 ADRP X0, 0x1788000
	0x029964E4 LDR X0, [X0 + 0x540]
	0x029964E8 BL 0x1C16CF4
	0x029964EC ADRP X0, 0x1764000
	0x029964F0 LDR X0, [X0 + 0xC10]
	0x029964F4 BL 0x1C16CF4
	0x029964F8 ADRP X0, 0x1763000
	0x029964FC LDR X0, [X0 + 0xCC0]
	0x02996500 BL 0x1C16CF4
	0x02996504 MOVZ W8, 0x1
	0x02996508 STRB W8, [X20 + 0xF0B]
	0x0299650C LDR X0, [X23]
	0x02996510 BL 0x1C16F10
	0x02996514 MOV X1, X31
	0x02996518 MOV X20, X0
	0x0299651C BL 0x33BDD8C
	0x02996520 MOV X0, X19
	0x02996524 MOV X1, X31
	0x02996528 STR X20, [X19 + 0x18]
	0x0299652C BL 0x33BDD8C
	0x02996530 LDR X0, [X22]
	0x02996534 MOVZ W1, 0xD
	0x02996538 BL 0x1C16D6C
	0x0299653C STR X0, [X19 + 0x10]
	0x02996540 MOV X20, X0
	0x02996544 LDR X0, [X21]
	0x02996548 LDR W8, [X0 + 0xE0]
	0x0299654C CBNZ W8, 0x2996554
	0x02996550 BL 0x1C16DFC
	0x02996554 MOV X0, X20
	0x02996558 LDP X20, X19, [X31 + 0x20]
	0x0299655C LDP X22, X21, [X31 + 0x10]
	0x02996560 MOV X1, X31
	0x02996564 LDP X30, X23, [X31], #0x30

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0x1A45000
	013 Move W8, [X21+3847]
	014 Move X19, X2
	015 Move W20, W1
	016 Move X22, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {32}
	021 Move X0, 0x1789000
	022 Move X0, [X0+688]
	023 Call 0x1C17CF4
	024 Move X0, 0x1765000
	025 Move X0, [X0+744]
	026 Call 0x1C17CF4
	027 Move X0, 0x176A000
	028 Move X0, [X0+1136]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+3847], W8
	032 Move [X31+8], W31
	033 Move X26, 0x176A000
	034 Add X22, X22, 16
	035 Move X21, [X22]
	036 Move X26, [X26+1136]
	037 Call 0x1C17D44
	038 Compare X21, 0
	039 JumpIfEqual {103}
	040 Move X27, 0x1765000
	041 Move X27, [X27+744]
	042 Move X23, X31
	043 Move W25, 1
	044 Move W24, 1
	045 Move X28, X21
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X8, [X28+24]
	048 Compare X8, 0
	049 JumpIfEqual {55}
	050 Add W24, W24, 1
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X28, X8
	053 Move W24, W20
	054 Move X28, X8
	055 Call 0x1C17D44
	056 Move X1, [X28+24]
	057 Move X0, X22
	058 Move X2, X21
	059 Call 0x1C25138
	060 NotImplemented "Instruction CMP not yet implemented."
	061 NotImplemented "Instruction BIC not yet implemented."
	062 Move X0, [X26]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Add X0, X31, 8
	068 Move X1, X31
	069 Compare W21, 0
	070 JumpIfEqual {73}
	071 Call SpinWait.SpinOnce, X0
	072 Subtract W21, W21, 1
	073 Call SpinWait.get_NextSpinWillYield, X0
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfEqual {85}
	078 Move X21, [X22]
	079 Move W25, W25
	080 ShiftRight W25, 31
	081 And W25, W25, 0x3FFFFFFF
	082 Call 0x1C17D44
	083 Compare X21, 0
	084 JumpIfNotEqual {44}
	085 Compare X23, 0
	086 JumpIfNotEqual {94}
	087 Move X0, [X27]
	088 Call 0x1C17F10
	089 Move X1, X31
	090 Move X23, X0
	091 Call Random..ctor, X0
	092 Compare X23, 0
	093 JumpIfEqual {197}
	094 Move X8, [X23]
	095 Move W1, 1
	096 Move W2, 8
	097 Move X0, X23
	098 Move X9, [X8+408]
	099 Move X3, [X8+416]
	100 NotImplemented "Instruction BLR not yet implemented."
	101 Move X21, [X22]
	102 Move W25, W0
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move X20, 0x1789000
	105 Move X20, [X20+688]
	106 Move X0, [X20]
	107 Move W8, [X0+224]
	108 Compare W8, 0
	109 JumpIfNotEqual {112}
	110 Call 0x1C17DFC
	111 Move X0, [X20]
	112 Move X8, [X0+184]
	113 Move X0, [X8]
	114 Compare X0, 0
	115 JumpIfEqual {197}
	116 Move X1, X31
	117 Call EventSource.IsEnabled, X0
	118 Move TEMP, X0
	119 And TEMP, TEMP, 1
	120 Compare TEMP, 1
	121 JumpIfNotEqual {142}
	122 Move X0, [X20]
	123 Move W8, [X0+224]
	124 Compare W8, 0
	125 JumpIfNotEqual {128}
	126 Call 0x1C17DFC
	127 Move X0, [X20]
	128 Move X8, [X26]
	129 Move X9, [X0+184]
	130 Move W10, [X8+224]
	131 Move X20, [X9]
	132 Compare W10, 0
	133 JumpIfNotEqual {136}
	134 Move X0, X8
	135 Call 0x1C17DFC
	136 Compare X20, 0
	137 JumpIfEqual {197}
	138 Move W1, [X31+8]
	139 Move X0, X20
	140 Move X2, X31
	141 Call CDSCollectionETWBCLProvider.ConcurrentStack_FastPopFailed, X0, X1
	142 Move X21, X31
	143 Move W24, W31
	144 Move [X19], X21
	145 Move W0, W24
	146 Move X20, [X31+80]
	147 Move X19, [X31+88]
	148 Move X22, [X31+64]
	149 Move X21, [X31+72]
	150 Move X24, [X31+48]
	151 Move X23, [X31+56]
	152 Move X26, [X31+32]
	153 Move X25, [X31+40]
	154 Move X28, [X31+16]
	155 Move X27, [X31+24]
	156 Move X30, [X31+96]
	157 Return X0
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Move X20, 0x1789000
	160 Move X20, [X20+688]
	161 Move X0, [X20]
	162 Move W8, [X0+224]
	163 Compare W8, 0
	164 JumpIfNotEqual {167}
	165 Call 0x1C17DFC
	166 Move X0, [X20]
	167 Move X8, [X0+184]
	168 Move X0, [X8]
	169 Compare X0, 0
	170 JumpIfEqual {197}
	171 Move X1, X31
	172 Call EventSource.IsEnabled, X0
	173 Move TEMP, X0
	174 And TEMP, TEMP, 1
	175 Compare TEMP, 1
	176 JumpIfNotEqual {144}
	177 Move X0, [X20]
	178 Move W8, [X0+224]
	179 Compare W8, 0
	180 JumpIfNotEqual {183}
	181 Call 0x1C17DFC
	182 Move X0, [X20]
	183 Move X8, [X26]
	184 Move X9, [X0+184]
	185 Move W10, [X8+224]
	186 Move X20, [X9]
	187 Compare W10, 0
	188 JumpIfNotEqual {191}
	189 Move X0, X8
	190 Call 0x1C17DFC
	191 Compare X20, 0
	192 JumpIfEqual {197}
	193 Move W1, [X31+8]
	194 Move X0, X20
	195 Move X2, X31
	196 Call CDSCollectionETWBCLProvider.ConcurrentStack_FastPopFailed, X0, X1
	197 Call 0x1C17F20

Method: System.Collections.Generic.List`1<T> ToList()

Disassembly:
	0x02996568 B 0x33B3DD4
	0x0299656C CBZ X0, 0x2996578
	0x02996570 MOV X1, X31
	0x02996574 B 0x33CB4DC
	0x02996578 STR X30, [X31 - 0x10]!
	0x0299657C BL 0x1C16F20
	0x02996580 STR X30, [X31 - 0x50]!
	0x02996584 STP X26, X25, [X31 + 0x10]
	0x02996588 STP X24, X23, [X31 + 0x20]
	0x0299658C STP X22, X21, [X31 + 0x30]
	0x02996590 STP X20, X19, [X31 + 0x40]
	0x02996594 ADRP X20, 0x1A44000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, [X0+16]
	005 Move X20, X1
	006 Call 0x1C17D44
	007 Move X8, [X20+32]
	008 Move X1, X19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X8, [X8+192]
	012 Move X2, [X8+96]
	013 Move X30, [X31+32]

Method: System.Collections.Generic.List`1<T> ToList(System.Collections.Concurrent.ConcurrentStack`1/Node<T> curr)

Disassembly:
	0x02996598 LDRB W8, [X20 + 0xF0C]
	0x0299659C MOV X19, X0
	0x029965A0 TBNZ X8, 0x0, 0x29965B8
	0x029965A4 ADRP X0, 0x1764000
	0x029965A8 LDR X0, [X0 + 0xC10]
	0x029965AC BL 0x1C16CF4
	0x029965B0 MOVZ W8, 0x1
	0x029965B4 STRB W8, [X20 + 0xF0C]
	0x029965B8 LDR X8, [X19 + 0x10]
	0x029965BC CBZ X8, 0x2996648
	0x029965C0 LDR X21, [X8 + 0x18]
	0x029965C4 CMP W21, 0x1
	0x029965C8 B.LT 0x2996708
	0x029965CC ADRP X23, 0x1764000
	0x029965D0 LDR X23, [X23 + 0xC10]
	0x029965D4 AND X22, X21, 0x0
	0x029965D8 MOV X20, X31
	0x029965DC SUB X24, X22, 0x1
	0x029965E0 MOVZ W25, 0x20
	0x029965E4 LDR W9, [X8 + 0x18]
	0x029965E8 CMP X20, X9
	0x029965EC B.CS 0x2996720
	0x029965F0 LDR X0, [X23]
	0x029965F4 LDR X26, [X8, X25, LSL]
	0x029965F8 LDR W9, [X0 + 0xE0]
	0x029965FC CBNZ W9, 0x2996608
	0x02996600 BL 0x1C16DFC
	0x02996604 LDR X0, [X23]
	0x02996608 LDR X8, [X0 + 0xB8]
	0x0299660C LDR X8, [X8]
	0x02996610 CMP X26, X8
	0x02996614 B.NE 0x2996630
	0x02996618 LDR X8, [X19 + 0x10]
	0x0299661C CBZ X8, 0x2996648
	0x02996620 LDR W9, [X8 + 0x18]
	0x02996624 CMP X20, X9
	0x02996628 B.CS 0x2996720
	0x0299662C STR X31, [X8, X25, LSL]
	0x02996630 CMP X24, X20
	0x02996634 B.EQ 0x299664C
	0x02996638 LDR X8, [X19 + 0x10]
	0x0299663C ADD X20, X20, 0x1
	0x02996640 ADD X25, X25, 0x10
	0x02996644 CBNZ X8, 0x29965E4
	0x02996648 BL 0x1C16F20
	0x0299664C CMP W21, 0x1
	0x02996650 B.LT 0x2996708
	0x02996654 LDR X8, [X19 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X19, X2
	007 Move X20, X1
	008 Move X8, [X8+192]
	009 Move X0, [X8+32]
	010 Move W8, [X0+309]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {16}
	015 Call 0x1C5D684
	016 Call 0x1C17F10
	017 Move X8, [X19+32]
	018 Move X21, X0
	019 Move X8, [X8+192]
	020 Move X1, [X8+104]
	021 Call List`1<Object>..ctor, X0
	022 Compare X20, 0
	023 JumpIfEqual {51}
	024 Compare X21, 0
	025 JumpIfEqual {57}
	026 Move X8, [X19+32]
	027 Move W10, [X21+28]
	028 Move X1, [X20+16]
	029 Move X9, [X8+192]
	030 Move X8, [X21+16]
	031 Add W10, W10, 1
	032 Move X9, [X9+112]
	033 Move [X21+28], W10
	034 Compare X8, 0
	035 JumpIfEqual {57}
	036 NotImplemented "Instruction LDRSW not yet implemented."
	037 Move W11, [X8+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Add W9, W10, 1
	040 Add X8, X8, X10
	041 Move [X21+24], W9
	042 Move [X8+32], X1
	043 Move X8, [X9+32]
	044 Move X0, X21
	045 Move X8, [X8+192]
	046 Move X2, [X8+112]
	047 Call List`1<Object>.AddWithResize, X0, X1
	048 Move X20, [X20+24]
	049 Compare X20, 0
	050 JumpIfNotEqual {26}
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X0, X21
	054 Move X30, [X31+32]
	055 Move X21, [X31+40]
	056 Return X0
	057 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerator`1<T> GetEnumerator()

Disassembly:
	0x02996658 MOV X23, X31
	0x0299665C CBZ X8, 0x2996648
	0x02996660 LDR W9, [X8 + 0x18]
	0x02996664 CMP X23, X9
	0x02996668 B.CS 0x2996720
	0x0299666C ADD X9, X8, X23, 0x4, LSL
	0x02996670 LDR X20, [X9 + 0x20]
	0x02996674 CBZ X20, 0x29966FC
	0x02996678 MOV X0, X20
	0x0299667C MOV X1, X31
	0x02996680 BL 0x32C5C48
	0x02996684 LDR X8, [X19 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, [X0+16]
	005 Move X20, X1
	006 Call 0x1C17D44
	007 Move X8, [X20+32]
	008 Move X1, X19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X8, [X8+192]
	012 Move X2, [X8+120]
	013 Move X30, [X31+32]

Method: System.Collections.Generic.IEnumerator`1<T> GetEnumerator(System.Collections.Concurrent.ConcurrentStack`1/Node<T> head)

Disassembly:
	0x02996688 CBZ X8, 0x2996648
	0x0299668C LDR X9, [X8 + 0x18]
	0x02996690 AND W10, W0, 0x7FFFFFFF
	0x02996694 SDIV W11, W10, W21
	0x02996698 MSUB W11, W11, W21, W10
	0x0299669C CMP W11, W9
	0x029966A0 B.CS 0x2996720
	0x029966A4 AND X10, X9, 0x0
	0x029966A8 ADD X12, X8, W11, 0x4, SXTW
	0x029966AC LDR X13, [X12 + 0x20]!
	0x029966B0 SXTW X11, W11
	0x029966B4 CBZ X13, 0x29966D8
	0x029966B8 CMP X13, X20
	0x029966BC B.EQ 0x29966FC
	0x029966C0 ADD W12, W11, 0x1
	0x029966C4 CMP W12, W21
	0x029966C8 CSINC W11, W31, W11, EQ
	0x029966CC CMP W11, W9
	0x029966D0 B.CC 0x29966A8
	0x029966D4 B 0x2996720
	0x029966D8 CMP X23, X10
	0x029966DC STR X20, [X12]
	0x029966E0 B.CS 0x2996720
	0x029966E4 ADD X9, X8, 0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X2+32]
	005 Move X20, X2
	006 Move X19, X1
	007 Move X8, [X8+192]
	008 Move X0, [X8+136]
	009 Move W8, [X0+309]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {15}
	014 Call 0x1C5D684
	015 Call 0x1C17F10
	016 Move X8, [X20+32]
	017 Move W1, W31
	018 Move X20, X0
	019 Move X8, [X8+192]
	020 Move X2, [X8+144]
	021 Call 0x239BB98, X0, X1
	022 Compare X20, 0
	023 JumpIfEqual {30}
	024 Move [X20+32], X19
	025 Move X0, X20
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0
	030 Call 0x1C17F20

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x029966E8 ADD X10, X9, X23, 0x4, LSL
	0x029966EC LDR X12, [X10 + 0x8]
	0x029966F0 ADD X9, X9, X11, 0x4, LSL
	0x029966F4 STR X12, [X9 + 0x8]
	0x029966F8 STP X31, X31, [X10]
	0x029966FC ADD X23, X23, 0x1
	0x02996700 CMP X23, X22
	0x02996704 B.NE 0x299665C
	0x02996708 LDP X20, X19, [X31 + 0x40]
	0x0299670C LDP X22, X21, [X31 + 0x30]
	0x02996710 LDP X24, X23, [X31 + 0x20]
	0x02996714 LDP X26, X25, [X31 + 0x10]
	0x02996718 LDR X30, [X31], #0x50
	0x0299671C RET
	0x02996720 BL 0x1C16F28
	0x02996724 STR X30, [X31 - 0x10]!
	0x02996728 LDR X12, [X0 + 0x10]
	0x0299672C STR W31, [X0 + 0x20]
	0x02996730 CBZ X12, 0x2996788
	0x02996734 LDR W8, [X12 + 0x18]
	0x02996738 UBFM X9, X8, 0x20, 0x1F
	0x0299673C CMP X9, 0x1
	0x02996740 B.LT 0x299677C
	0x02996744 MOV X9, X31
	0x02996748 MOV W10, W31
	0x0299674C SXTW X11, W8
	0x02996750 ADD X12, X12, 0x20
	0x02996754 CMP X9, X8
	0x02996758 B.CS 0x2996784
	0x0299675C LDR X13, [X12]
	0x02996760 CBZ X13, 0x299676C
	0x02996764 ADD W10, W10, 0x1
	0x02996768 STR W10, [X0 + 0x20]
	0x0299676C ADD X9, X9, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X0, 0
	004 JumpIfEqual {39}
	005 Move X8, [X1+32]
	006 Move X19, X0
	007 Move X8, [X8+192]
	008 Move X1, [X8+152]
	009 Move W8, [X1+309]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X1
	015 Call 0x1C5D684
	016 Move X1, X0
	017 Move X8, [X19]
	018 NotImplemented "Instruction LDRH not yet implemented."
	019 Compare X9, 0
	020 JumpIfEqual {27}
	021 Move X10, [X8+176]
	022 Add X10, X10, 8
	023 NotImplemented "Instruction LDUR not yet implemented."
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Subtract X9, X9, 1
	026 Add X10, X10, 16
	027 Move X0, X19
	028 Move W2, W31
	029 Call 0x1C5D788
	030 NotImplemented "Instruction LDRSW not yet implemented."
	031 Add X8, X8, X9
	032 Add X0, X8, 312
	033 Move X2, [X0]
	034 Move X1, [X0+8]
	035 Move X0, X19
	036 Move X30, [X31+16]
	037 Move X19, [X31+24]
	038 CallNoReturn X2
	039 Call 0x1C17F20

