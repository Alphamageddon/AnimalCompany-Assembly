Type: System.Collections.Concurrent.ConcurrentQueue`1/Segment

Method: System.Void .ctor(System.Int32 boundedLength)

Disassembly:
	0x025D820C MOV X0, X20
	0x025D8210 MOV W2, W21
	0x025D8214 MOV X3, X31
	0x025D8218 ADD W1, W21, W8, 0x1, LSL
	0x025D821C BL 0x33E7AB4
	0x025D8220 CMP W0, W21
	0x025D8224 B.EQ 0x25D81D0
	0x025D8228 LDR X0, [X22]
	0x025D822C LDR W8, [X0 + 0xE0]
	0x025D8230 CBNZ W8, 0x25D8238
	0x025D8234 BL 0x1C16DFC
	0x025D8238 ADD X0, X31, 0x8
	0x025D823C MOV X1, X31
	0x025D8240 BL 0x33DF18C
	0x025D8244 LDR W21, [X19 + 0x11C]
	0x025D8248 BL 0x1C16D44
	0x025D824C LDR X8, [X19 + 0x10]
	0x025D8250 CBNZ X8, 0x25D8208
	0x025D8254 BL 0x1C16F20
	0x025D8258 SUB X31, X31, 0x50
	0x025D825C STP X30, X25, [X31 + 0x10]
	0x025D8260 STP X24, X23, [X31 + 0x20]
	0x025D8264 STP X22, X21, [X31 + 0x30]
	0x025D8268 STP X20, X19, [X31 + 0x40]
	0x025D826C ADRP X21, 0x1E01000
	0x025D8270 LDRB W8, [X21 + 0xF7E]
	0x025D8274 MOV X20, X1
	0x025D8278 MOV X19, X0
	0x025D827C TBNZ X8, 0x0, 0x25D8294
	0x025D8280 ADRP X0, 0x1B27000
	0x025D8284 LDR X0, [X0 + 0x470]
	0x025D8288 BL 0x1C16CF4
	0x025D828C MOVZ W8, 0x1
	0x025D8290 STRB W8, [X21 + 0xF7E]
	0x025D8294 STR W31, [X31 + 0x8]
	0x025D8298 MOV X22, X19
	0x025D829C LDR W21, [X22 + 0x9C]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W20, W1
	006 Move X1, X31
	007 Move X21, X2
	008 Move X19, X0
	009 Call Object..ctor, X0
	010 Move X8, [X21+32]
	011 Move X8, [X8+192]
	012 Move X0, [X8]
	013 Move W8, [X0+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {19}
	018 Call 0x1C5D684
	019 Move W1, W20
	020 Call 0x1C17D6C
	021 Subtract W8, W20, 1
	022 Move [X19+16], X0
	023 Move [X19+24], W8
	024 Compare X0, 0
	025 JumpIfEqual {44}
	026 Move W8, [X0+24]
	027 Move X9, X8
	028 ShiftRight X9, 32
	029 And X9, X9, 0x7FFFFFFF
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X9, X31
	032 Move X10, W8
	033 Add X11, X0, 88
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move [X11+64], W9
	036 Add X9, X9, 1
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Return 
	043 Call 0x1C17F28
	044 Call 0x1C17F20

Method: System.Int32 get_Capacity()

Disassembly:
	0x025D82A0 BL 0x1C16D44
	0x025D82A4 LDUR X8, [X22 - 0x8C]
	0x025D82A8 CBZ X8, 0x25D836C
	0x025D82AC LDR W9, [X19 + 0x18]
	0x025D82B0 ADRP X23, 0x1B27000
	0x025D82B4 LDR X23, [X23 + 0x470]
	0x025D82B8 AND W9, W9, W21, 0x0

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, [X8+24]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Int32 get_FreezeOffset()

Disassembly:
	0x025D82BC LDR W10, [X8 + 0x18]
	0x025D82C0 CMP W9, W10
	0x025D82C4 B.CS 0x25D8404
	0x025D82C8 SXTW X24, W9
	0x025D82CC ADD X8, X8, X24, 0x4, LSL
	0x025D82D0 LDR W25, [X8 + 0x28]
	0x025D82D4 BL 0x1C16D44
	0x025D82D8 ADD W1, W21, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {11}
	005 Move W8, [X8+24]
	006 Move W0, W8
	007 ShiftRight W0, 31
	008 And W0, W0, 0x3FFFFFFF
	009 Move X30, [X31+16]
	010 Return X0
	011 Call 0x1C17F20

Method: System.Void EnsureFrozenForEnqueues()

Disassembly:
	0x025D82DC SUBS W8, W25, W1
	0x025D82E0 B.EQ 0x25D8320
	0x025D82E4 TBZ X8, 0x1F, 0x25D8338
	0x025D82E8 LDRB W24, [X19 + 0x19D]
	0x025D82EC LDR W25, [X19 + 0x11C]
	0x025D82F0 BL 0x1C16D44
	0x025D82F4 SUB W8, W25, W21
	0x025D82F8 CMP W8, 0x1
	0x025D82FC B.LT 0x25D8370
	0x025D8300 CBZ W24, 0x25D8338
	0x025D8304 LDR X9, [X19 + 0x10]
	0x025D8308 CBZ X9, 0x25D836C
	0x025D830C LDR W9, [X9 + 0x18]
	0x025D8310 SUB W8, W8, W9, 0x1, LSL
	0x025D8314 CMP W8, 0x0
	0x025D8318 B.GT 0x25D8338
	0x025D831C B 0x25D8370
	0x025D8320 MOV X0, X22
	0x025D8324 MOV W2, W21
	0x025D8328 MOV X3, X31
	0x025D832C BL 0x33E7AB4
	0x025D8330 CMP W0, W21
	0x025D8334 B.EQ 0x25D837C
	0x025D8338 LDR X0, [X23]
	0x025D833C LDR W8, [X0 + 0xE0]
	0x025D8340 CBNZ W8, 0x25D8348
	0x025D8344 BL 0x1C16DFC
	0x025D8348 ADD X0, X31, 0x8
	0x025D834C MOV X1, X31
	0x025D8350 BL 0x33DF18C
	0x025D8354 LDR W21, [X19 + 0x9C]
	0x025D8358 BL 0x1C16D44
	0x025D835C LDR W9, [X19 + 0x18]
	0x025D8360 LDR X8, [X19 + 0x10]
	0x025D8364 AND W9, W9, W21, 0x0
	0x025D8368 CBNZ X8, 0x25D82BC
	0x025D836C BL 0x1C16F20
	0x025D8370 MOV W0, W31
	0x025D8374 STR X31, [X20]
	0x025D8378 B 0x25D83EC
	0x025D837C LDR X8, [X19 + 0x10]
	0x025D8380 CBZ X8, 0x25D836C
	0x025D8384 LDR W9, [X8 + 0x18]
	0x025D8388 CMP W24, W9
	0x025D838C B.CS 0x25D8404
	0x025D8390 ADD X8, X8, X24, 0x4, LSL
	0x025D8394 LDR X8, [X8 + 0x20]
	0x025D8398 STR X8, [X20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x1E02000
	007 Move W8, [X20+3959]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x1B28000
	014 Move X0, [X0+1136]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+3959], W8
	018 Move W8, [X19+413]
	019 Compare W8, 0
	020 JumpIfEqual {27}
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 Return 
	027 Move W8, 1
	028 Move [X19+413], W8
	029 Move [X31+8], W31
	030 Move W21, [X19+284]
	031 Call 0x1C17D44
	032 Move X8, [X19+16]
	033 Compare X8, 0
	034 JumpIfEqual {58}
	035 Move X22, 0x1B28000
	036 Move X22, [X22+1136]
	037 Add X20, X19, 284
	038 Move W8, [X8+24]
	039 Move X0, X20
	040 Move W2, W21
	041 Move X3, X31
	042 Add W1, W21, W8
	043 Call Interlocked.CompareExchange, X0, X1, X2
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X0, [X22]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Add X0, X31, 8
	051 Move X1, X31
	052 Call SpinWait.SpinOnce, X0
	053 Move W21, [X19+284]
	054 Call 0x1C17D44
	055 Move X8, [X19+16]
	056 Compare X8, 0
	057 JumpIfNotEqual {38}
	058 Call 0x1C17F20

Method: System.Boolean TryDequeue(out T item)

Disassembly:
	0x025D839C LDRB W20, [X19 + 0x19C]
	0x025D83A0 BL 0x1C16D44
	0x025D83A4 CBNZ W20, 0x25D83E8
	0x025D83A8 LDR X8, [X19 + 0x10]
	0x025D83AC CBZ X8, 0x25D836C
	0x025D83B0 LDR W9, [X8 + 0x18]
	0x025D83B4 CMP W24, W9
	0x025D83B8 B.CS 0x25D8404
	0x025D83BC ADD X8, X8, X24, 0x4, LSL
	0x025D83C0 STR X31, [X8 + 0x20]
	0x025D83C4 LDR X8, [X19 + 0x10]
	0x025D83C8 CBZ X8, 0x25D836C
	0x025D83CC LDR W9, [X8 + 0x18]
	0x025D83D0 CMP W24, W9
	0x025D83D4 B.CS 0x25D8404
	0x025D83D8 ADD X19, X8, X24, 0x4, LSL
	0x025D83DC ADD W20, W21, W9
	0x025D83E0 BL 0x1C16D44
	0x025D83E4 STR W20, [X19 + 0x28]
	0x025D83E8 MOVZ W0, 0x1
	0x025D83EC LDP X20, X19, [X31 + 0x40]
	0x025D83F0 LDP X22, X21, [X31 + 0x30]
	0x025D83F4 LDP X24, X23, [X31 + 0x20]
	0x025D83F8 LDP X30, X25, [X31 + 0x10]
	0x025D83FC ADD X31, X31, 0x50
	0x025D8400 RET
	0x025D8404 BL 0x1C16F28
	0x025D8408 STR X30, [X31 - 0x50]!
	0x025D840C STP X26, X25, [X31 + 0x10]
	0x025D8410 STP X24, X23, [X31 + 0x20]
	0x025D8414 STP X22, X21, [X31 + 0x30]
	0x025D8418 STP X20, X19, [X31 + 0x40]
	0x025D841C ADRP X22, 0x1E01000
	0x025D8420 LDRB W8, [X22 + 0xF7F]
	0x025D8424 MOV W20, W2
	0x025D8428 MOV X19, X1
	0x025D842C MOV X21, X0
	0x025D8430 TBNZ X8, 0x0, 0x25D8448
	0x025D8434 ADRP X0, 0x1B27000
	0x025D8438 LDR X0, [X0 + 0x470]
	0x025D843C BL 0x1C16CF4
	0x025D8440 MOVZ W8, 0x1
	0x025D8444 STRB W8, [X22 + 0xF7F]
	0x025D8448 TBZ X20, 0x0, 0x25D845C
	0x025D844C MOVZ W8, 0x1
	0x025D8450 MOV X0, X31
	0x025D8454 STRB W8, [X21 + 0x19C]
	0x025D8458 BL 0x33EB1A0
	0x025D845C STR W31, [X31 + 0x8]
	0x025D8460 LDR W24, [X21 + 0x9C]
	0x025D8464 BL 0x1C16D44
	0x025D8468 LDR X8, [X21 + 0x10]
	0x025D846C CBZ X8, 0x25D8514
	0x025D8470 LDR W9, [X21 + 0x18]
	0x025D8474 ADRP X22, 0x1B27000
	0x025D8478 LDR X22, [X22 + 0x470]
	0x025D847C AND W9, W9, W24, 0x0
	0x025D8480 LDR W10, [X8 + 0x18]
	0x025D8484 CMP W9, W10
	0x025D8488 B.CS 0x25D856C
	0x025D848C SXTW X25, W9
	0x025D8490 ADD X8, X8, X25, 0x4, LSL
	0x025D8494 LDR W23, [X8 + 0x28]
	0x025D8498 BL 0x1C16D44
	0x025D849C ORN W8, W31, W24, 0x0
	0x025D84A0 ADDS W23, W23, W8
	0x025D84A4 B.EQ 0x25D8518
	0x025D84A8 TBZ X23, 0x1F, 0x25D84E0
	0x025D84AC LDRB W25, [X21 + 0x19D]
	0x025D84B0 LDR W26, [X21 + 0x11C]
	0x025D84B4 BL 0x1C16D44
	0x025D84B8 SUB W8, W26, W24
	0x025D84BC CMP W8, 0x1
	0x025D84C0 B.LT 0x25D853C
	0x025D84C4 CBZ W25, 0x25D84E0
	0x025D84C8 LDR X9, [X21 + 0x10]
	0x025D84CC CBZ X9, 0x25D8514
	0x025D84D0 LDR W9, [X9 + 0x18]
	0x025D84D4 SUB W8, W8, W9, 0x1, LSL
	0x025D84D8 CMP W8, 0x0
	0x025D84DC B.LE 0x25D853C
	0x025D84E0 LDR X0, [X22]
	0x025D84E4 LDR W8, [X0 + 0xE0]
	0x025D84E8 CBNZ W8, 0x25D84F0
	0x025D84EC BL 0x1C16DFC
	0x025D84F0 ADD X0, X31, 0x8
	0x025D84F4 MOV X1, X31
	0x025D84F8 BL 0x33DF18C
	0x025D84FC LDR W24, [X21 + 0x9C]
	0x025D8500 BL 0x1C16D44
	0x025D8504 LDR W9, [X21 + 0x18]
	0x025D8508 LDR X8, [X21 + 0x10]
	0x025D850C AND W9, W9, W24, 0x0
	0x025D8510 CBNZ X8, 0x25D8480
	0x025D8514 BL 0x1C16F20
	0x025D8518 TBZ X20, 0x0, 0x25D8544
	0x025D851C LDR X8, [X21 + 0x10]
	0x025D8520 CBZ X8, 0x25D8514
	0x025D8524 LDR W9, [X8 + 0x18]
	0x025D8528 CMP W25, W9
	0x025D852C B.CS 0x25D856C
	0x025D8530 ADD X8, X8, X25, 0x4, LSL
	0x025D8534 LDR X8, [X8 + 0x20]
	0x025D8538 B 0x25D8548
	0x025D853C STR X31, [X19]
	0x025D8540 B 0x25D854C
	0x025D8544 MOV X8, X31
	0x025D8548 STR X8, [X19]
	0x025D854C CMP W23, 0x0
	0x025D8550 LDP X20, X19, [X31 + 0x40]
	0x025D8554 LDP X22, X21, [X31 + 0x30]
	0x025D8558 LDP X24, X23, [X31 + 0x20]
	0x025D855C LDP X26, X25, [X31 + 0x10]
	0x025D8560 CSET W0, EQ
	0x025D8564 LDR X30, [X31], #0x50
	0x025D8568 RET
	0x025D856C BL 0x1C16F28
	0x025D8570 STR X30, [X31 - 0x50]!

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x1E02000
	011 Move W8, [X21+3960]
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x1B28000
	019 Move X0, [X0+1136]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+3960], W8
	023 Move [X31+8], W31
	024 Move X22, X19
	025 Add X22, X22, 156
	026 Move W21, [X22]
	027 Call 0x1C17D44
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 Compare X8, 0
	030 JumpIfEqual {80}
	031 Move W9, [X19+24]
	032 Move X23, 0x1B28000
	033 Move X23, [X23+1136]
	034 And W9, W9, W21
	035 Move W10, [X8+24]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X24, W9
	038 Add X8, X8, X24
	039 Move W25, [X8+88]
	040 Call 0x1C17D44
	041 Add W1, W21, 1
	042 Subtract W8, W25, W1
	043 Move TEMP, X8
	044 And TEMP, TEMP, -2147483648
	045 Compare TEMP, -2147483648
	046 JumpIfNotEqual {65}
	047 Move W24, [X19+413]
	048 Move W25, [X19+284]
	049 Call 0x1C17D44
	050 Subtract W8, W25, W21
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Compare W24, 0
	053 JumpIfEqual {65}
	054 Move X9, [X19+16]
	055 Compare X9, 0
	056 JumpIfEqual {80}
	057 Move W9, [X9+24]
	058 Subtract W8, W8, W9
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X0, X22
	061 Move W2, W21
	062 Move X3, X31
	063 Call Interlocked.CompareExchange, X0, X1, X2
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X0, [X23]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Add X0, X31, 8
	071 Move X1, X31
	072 Call SpinWait.SpinOnce, X0
	073 Move W21, [X19+156]
	074 Call 0x1C17D44
	075 Move W9, [X19+24]
	076 Move X8, [X19+16]
	077 And W9, W9, W21
	078 Compare X8, 0
	079 JumpIfNotEqual {35}
	080 Call 0x1C17F20
	081 Move W0, W31
	082 NotImplemented "Instruction MOVI not yet implemented."
	083 Move [X20+48], X31
	084 Move [X20+16], V0
	085 Move [X20+24], V0
	086 Move [X20], V0
	087 Move X8, [X19+16]
	088 Compare X8, 0
	089 JumpIfEqual {80}
	090 Move W9, [X8+24]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Add X8, X8, X24
	093 Move X9, [X8+80]
	094 Move V1, [X8+48]
	095 Move V0, [X8+64]
	096 Move V2, [X8+2]
	097 Move [X20+48], X9
	098 Move [X20+16], V1
	099 Move [X20+24], V0
	100 Move [X20], V2
	101 Move W20, [X19+412]
	102 Call 0x1C17D44
	103 Compare W20, 0
	104 JumpIfNotEqual {125}
	105 Move X8, [X19+16]
	106 Compare X8, 0
	107 JumpIfEqual {80}
	108 Move W9, [X8+24]
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Add X8, X8, X24
	111 NotImplemented "Instruction MOVI not yet implemented."
	112 Move [X8+80], X31
	113 Move [X8+48], V0
	114 Move [X8+56], V0
	115 Move [X8+2], V0
	116 Move X8, [X19+16]
	117 Compare X8, 0
	118 JumpIfEqual {80}
	119 Move W9, [X8+24]
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Add X19, X8, X24
	122 Add W20, W21, W9
	123 Call 0x1C17D44
	124 Move [X19+88], W20
	125 Move W0, 1
	126 Move X20, [X31+64]
	127 Move X19, [X31+72]
	128 Move X22, [X31+48]
	129 Move X21, [X31+56]
	130 Move X24, [X31+32]
	131 Move X23, [X31+40]
	132 Move X30, [X31+16]
	133 Move X25, [X31+24]
	134 Add X31, X31, 80
	135 Return X0
	136 Call 0x1C17F28

Method: System.Boolean TryPeek(out T result, System.Boolean resultUsed)

Disassembly:
	0x025D8574 STP X26, X25, [X31 + 0x10]
	0x025D8578 STP X24, X23, [X31 + 0x20]
	0x025D857C STP X22, X21, [X31 + 0x30]
	0x025D8580 STP X20, X19, [X31 + 0x40]
	0x025D8584 ADRP X21, 0x1E01000
	0x025D8588 LDRB W8, [X21 + 0xF80]
	0x025D858C MOV X19, X1
	0x025D8590 MOV X20, X0
	0x025D8594 TBNZ X8, 0x0, 0x25D85AC
	0x025D8598 ADRP X0, 0x1B27000
	0x025D859C LDR X0, [X0 + 0x470]
	0x025D85A0 BL 0x1C16CF4
	0x025D85A4 MOVZ W8, 0x1
	0x025D85A8 STRB W8, [X21 + 0xF80]
	0x025D85AC STR W31, [X31 + 0x8]
	0x025D85B0 LDR W22, [X20 + 0x11C]
	0x025D85B4 BL 0x1C16D44
	0x025D85B8 LDR X8, [X20 + 0x10]
	0x025D85BC CBZ X8, 0x25D8654
	0x025D85C0 LDR W9, [X20 + 0x18]
	0x025D85C4 ADRP X24, 0x1B27000
	0x025D85C8 LDR X24, [X24 + 0x470]
	0x025D85CC ADD X21, X20, 0x11C
	0x025D85D0 AND W9, W9, W22, 0x0
	0x025D85D4 LDR W10, [X8 + 0x18]
	0x025D85D8 CMP W9, W10
	0x025D85DC B.CS 0x25D869C
	0x025D85E0 SXTW X26, W9
	0x025D85E4 ADD X8, X8, X26, 0x4, LSL
	0x025D85E8 LDR W23, [X8 + 0x28]
	0x025D85EC BL 0x1C16D44
	0x025D85F0 SUBS W25, W23, W22
	0x025D85F4 B.EQ 0x25D8600
	0x025D85F8 TBZ X25, 0x1F, 0x25D8620
	0x025D85FC B 0x25D867C
	0x025D8600 ADD W23, W22, 0x1
	0x025D8604 MOV X0, X21
	0x025D8608 MOV W1, W23
	0x025D860C MOV W2, W22
	0x025D8610 MOV X3, X31
	0x025D8614 BL 0x33E7AB4
	0x025D8618 CMP W0, W22
	0x025D861C B.EQ 0x25D8658
	0x025D8620 LDR X0, [X24]
	0x025D8624 LDR W8, [X0 + 0xE0]
	0x025D8628 CBNZ W8, 0x25D8630
	0x025D862C BL 0x1C16DFC
	0x025D8630 ADD X0, X31, 0x8
	0x025D8634 MOV X1, X31
	0x025D8638 BL 0x33DF18C
	0x025D863C LDR W22, [X20 + 0x11C]
	0x025D8640 BL 0x1C16D44
	0x025D8644 LDR W9, [X20 + 0x18]
	0x025D8648 LDR X8, [X20 + 0x10]
	0x025D864C AND W9, W9, W22, 0x0
	0x025D8650 CBNZ X8, 0x25D85D4
	0x025D8654 BL 0x1C16F20
	0x025D8658 LDR X8, [X20 + 0x10]
	0x025D865C CBZ X8, 0x25D8654
	0x025D8660 LDR W9, [X8 + 0x18]
	0x025D8664 CMP W26, W9
	0x025D8668 B.CS 0x25D869C
	0x025D866C ADD X20, X8, X26, 0x4, LSL
	0x025D8670 STR X19, [X20 + 0x20]
	0x025D8674 BL 0x1C16D44
	0x025D8678 STR W23, [X20 + 0x28]
	0x025D867C CMP W25, 0x0
	0x025D8680 LDP X20, X19, [X31 + 0x40]
	0x025D8684 LDP X22, X21, [X31 + 0x30]
	0x025D8688 LDP X24, X23, [X31 + 0x20]
	0x025D868C LDP X26, X25, [X31 + 0x10]
	0x025D8690 CSET W0, EQ
	0x025D8694 LDR X30, [X31], #0x50
	0x025D8698 RET
	0x025D869C BL 0x1C16F28
	0x025D86A0 STP X30, X23, [X31 - 0x30]!
	0x025D86A4 STP X22, X21, [X31 + 0x10]
	0x025D86A8 STP X20, X19, [X31 + 0x20]
	0x025D86AC MOV W21, W1
	0x025D86B0 MOV X1, X31
	0x025D86B4 MOV X19, X2
	0x025D86B8 MOV X20, X0
	0x025D86BC BL 0x33BDD8C
	0x025D86C0 LDR X8, [X19 + 0x20]
	0x025D86C4 LDR X8, [X8 + 0xC0]
	0x025D86C8 LDR X0, [X8]
	0x025D86CC LDRB W8, [X0 + 0x135]
	0x025D86D0 TBNZ X8, 0x0, 0x25D86D8
	0x025D86D4 BL 0x1C5C684
	0x025D86D8 MOV W1, W21
	0x025D86DC BL 0x1C16D6C
	0x025D86E0 SUB W8, W21, 0x1
	0x025D86E4 STR X0, [X20 + 0x10]
	0x025D86E8 STR W8, [X20 + 0x18]
	0x025D86EC CBZ X0, 0x25D8758
	0x025D86F0 MOV X23, X31
	0x025D86F4 LDR W8, [X0 + 0x18]
	0x025D86F8 CMP X23, W8, SXTW
	0x025D86FC B.GE 0x25D875C
	0x025D8700 CMP X23, X8
	0x025D8704 B.CS 0x25D876C
	0x025D8708 LDR X8, [X19 + 0x20]
	0x025D870C LDR X9, [X0]
	0x025D8710 MOVZ W1, 0x4
	0x025D8714 LDR X8, [X8 + 0xC0]
	0x025D8718 LDR W9, [X9 + 0x104]
	0x025D871C LDR X8, [X8 + 0x18]
	0x025D8720 NOP

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+64], X30
	003 Move [X31+80], X26
	004 Move [X31+88], X25
	005 Move [X31+96], X24
	006 Move [X31+104], X23
	007 Move [X31+112], X22
	008 Move [X31+120], X21
	009 Move [X31+128], X20
	010 Move [X31+136], X19
	011 Move X22, 0x1E02000
	012 Move W8, [X22+3961]
	013 Move W20, W2
	014 Move X19, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x1B28000
	021 Move X0, [X0+1136]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+3961], W8
	025 Move TEMP, X20
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {33}
	029 Move W8, 1
	030 Move X0, X31
	031 Move [X21+412], W8
	032 Call Interlocked.MemoryBarrier
	033 Move [X31+72], W31
	034 Move W24, [X21+156]
	035 Call 0x1C17D44
	036 Move X8, [X21+16]
	037 Compare X8, 0
	038 JumpIfEqual {83}
	039 Move W9, [X21+24]
	040 Move X22, 0x1B28000
	041 Move X22, [X22+1136]
	042 And W9, W9, W24
	043 Move W10, [X8+24]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X25, W9
	046 Add X8, X8, X25
	047 Move W23, [X8+88]
	048 Call 0x1C17D44
	049 NotImplemented "Instruction ORN not yet implemented."
	050 Add W23, W23, W8
	051 Move TEMP, X23
	052 And TEMP, TEMP, -2147483648
	053 Compare TEMP, -2147483648
	054 JumpIfNotEqual {68}
	055 Move W25, [X21+413]
	056 Move W26, [X21+284]
	057 Call 0x1C17D44
	058 Subtract W8, W26, W24
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Compare W25, 0
	061 JumpIfEqual {68}
	062 Move X9, [X21+16]
	063 Compare X9, 0
	064 JumpIfEqual {83}
	065 Move W9, [X9+24]
	066 Subtract W8, W8, W9
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X0, [X22]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Add X0, X31, 72
	074 Move X1, X31
	075 Call SpinWait.SpinOnce, X0
	076 Move W24, [X21+156]
	077 Call 0x1C17D44
	078 Move W9, [X21+24]
	079 Move X8, [X21+16]
	080 And W9, W9, W24
	081 Compare X8, 0
	082 JumpIfNotEqual {43}
	083 Call 0x1C17F20
	084 Move TEMP, X20
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfNotEqual {107}
	088 Move X8, [X21+16]
	089 Compare X8, 0
	090 JumpIfEqual {83}
	091 Move W9, [X8+24]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Add X8, X8, X25
	094 Move X9, [X8+80]
	095 Move V1, [X8+48]
	096 Move V0, [X8+64]
	097 Move V2, [X8+2]
	098 Move [X31+48], X9
	099 Move [X31+16], V1
	100 Move [X31+24], V0
	101 Move [X31], V2
	102 NotImplemented "Instruction MOVI not yet implemented."
	103 Move [X19+48], X31
	104 Move [X19+16], V0
	105 Move [X19+24], V0
	106 Move [X19], V0
	107 NotImplemented "Instruction MOVI not yet implemented."
	108 Move [X31+48], X31
	109 Move [X31+16], V0
	110 Move [X31+24], V0
	111 Move [X31], V0
	112 Move X8, [X31+48]
	113 Move V1, [X31+16]
	114 Move V0, [X31+32]
	115 Move V2, [X31]
	116 Move [X19+48], X8
	117 Move [X19+16], V1
	118 Move [X19+24], V0
	119 Move [X19], V2
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move X20, [X31+128]
	122 Move X19, [X31+136]
	123 Move X22, [X31+112]
	124 Move X21, [X31+120]
	125 Move X24, [X31+96]
	126 Move X23, [X31+104]
	127 Move X26, [X31+80]
	128 Move X25, [X31+88]
	129 Move X30, [X31+64]
	130 NotImplemented "Instruction CSET not yet implemented."
	131 Add X31, X31, 144
	132 Return X0
	133 Call 0x1C17F28

Method: System.Boolean TryEnqueue(T item)

Disassembly:
	0x025D8724 MADD X9, X23, X9, X0
	0x025D8728 ADD X21, X9, 0x20
	0x025D872C LDR X8, [X8 + 0x80]
	0x025D8730 ADD X22, X8, 0x20
	0x025D8734 MOV X0, X22
	0x025D8738 BL 0x1C16D14
	0x025D873C MOV X0, X21
	0x025D8740 MOV X1, X22
	0x025D8744 BL 0x1C16D18
	0x025D8748 STR W23, [X0]
	0x025D874C LDR X0, [X20 + 0x10]
	0x025D8750 ADD X23, X23, 0x1
	0x025D8754 CBNZ X0, 0x25D86F4
	0x025D8758 BL 0x1C16F20
	0x025D875C LDP X20, X19, [X31 + 0x20]
	0x025D8760 LDP X22, X21, [X31 + 0x10]
	0x025D8764 LDP X30, X23, [X31], #0x30
	0x025D8768 RET
	0x025D876C BL 0x1C16F28
	0x025D8770 STR X30, [X31 - 0x10]!
	0x025D8774 LDR X8, [X0 + 0x10]
	0x025D8778 CBZ X8, 0x25D8788
	0x025D877C LDR W0, [X8 + 0x18]
	0x025D8780 LDR X30, [X31], #0x10
	0x025D8784 RET
	0x025D8788 BL 0x1C16F20
	0x025D878C STR X30, [X31 - 0x10]!
	0x025D8790 LDR X8, [X0 + 0x10]
	0x025D8794 CBZ X8, 0x25D87A8
	0x025D8798 LDR W8, [X8 + 0x18]
	0x025D879C UBFM W0, W8, 0x1F, 0x1E
	0x025D87A0 LDR X30, [X31], #0x10
	0x025D87A4 RET
	0x025D87A8 BL 0x1C16F20
	0x025D87AC SUB X31, X31, 0x40
	0x025D87B0 STP X30, X23, [X31 + 0x10]
	0x025D87B4 STP X22, X21, [X31 + 0x20]
	0x025D87B8 STP X20, X19, [X31 + 0x30]
	0x025D87BC ADRP X21, 0x1E01000
	0x025D87C0 LDRB W8, [X21 + 0xF81]
	0x025D87C4 MOV X19, X1
	0x025D87C8 MOV X20, X0
	0x025D87CC TBNZ X8, 0x0, 0x25D87E4
	0x025D87D0 ADRP X0, 0x1B27000
	0x025D87D4 LDR X0, [X0 + 0x470]
	0x025D87D8 BL 0x1C16CF4
	0x025D87DC MOVZ W8, 0x1
	0x025D87E0 STRB W8, [X21 + 0xF81]
	0x025D87E4 LDRB W8, [X20 + 0x19D]
	0x025D87E8 CBZ W8, 0x25D8800
	0x025D87EC LDP X20, X19, [X31 + 0x30]
	0x025D87F0 LDP X22, X21, [X31 + 0x20]
	0x025D87F4 LDP X30, X23, [X31 + 0x10]
	0x025D87F8 ADD X31, X31, 0x40
	0x025D87FC RET
	0x025D8800 MOVZ W8, 0x1
	0x025D8804 STRB W8, [X20 + 0x19D]
	0x025D8808 STR W31, [X31 + 0x8]
	0x025D880C ADRP X23, 0x1B27000
	0x025D8810 LDR X23, [X23 + 0x470]
	0x025D8814 ADD X21, X20, 0x11C
	0x025D8818 LDR W22, [X20 + 0x11C]
	0x025D881C BL 0x1C16D44
	0x025D8820 LDR X8, [X19 + 0x20]
	0x025D8824 MOV X0, X20
	0x025D8828 LDR X8, [X8 + 0xC0]
	0x025D882C LDR X1, [X8 + 0x20]
	0x025D8830 LDR X8, [X1]
	0x025D8834 BLR X8
	0x025D8838 ADD W1, W0, W22
	0x025D883C MOV X0, X21
	0x025D8840 MOV W2, W22
	0x025D8844 MOV X3, X31
	0x025D8848 BL 0x33E7AB4
	0x025D884C CMP W0, W22
	0x025D8850 B.EQ 0x25D87EC
	0x025D8854 LDR X0, [X23]
	0x025D8858 LDR W8, [X0 + 0xE0]
	0x025D885C CBNZ W8, 0x25D8864
	0x025D8860 BL 0x1C16DFC
	0x025D8864 ADD X0, X31, 0x8
	0x025D8868 MOV X1, X31
	0x025D886C BL 0x33DF18C
	0x025D8870 B 0x25D8818
	0x025D8874 STP X29, X30, [X31 - 0x60]!
	0x025D8878 STP X28, X27, [X31 + 0x10]
	0x025D887C STP X26, X25, [X31 + 0x20]
	0x025D8880 STP X24, X23, [X31 + 0x30]
	0x025D8884 STP X22, X21, [X31 + 0x40]
	0x025D8888 STP X20, X19, [X31 + 0x50]
	0x025D888C ADD X29, X31, 0x0
	0x025D8890 SUB X31, X31, 0x20
	0x025D8894 STUR X1, [X29 - 0x18]
	0x025D8898 MRS X26, 0xC000
	0x025D889C LDR X8, [X26 + 0x28]
	0x025D88A0 ADRP X21, 0x1E01000
	0x025D88A4 MOV X19, X2
	0x025D88A8 MOV X20, X0
	0x025D88AC STUR X8, [X29 - 0x8]
	0x025D88B0 LDRB W8, [X21 + 0xF82]
	0x025D88B4 TBNZ X8, 0x0, 0x25D88CC
	0x025D88B8 ADRP X0, 0x1B27000
	0x025D88BC LDR X0, [X0 + 0x470]
	0x025D88C0 BL 0x1C16CF4
	0x025D88C4 MOVZ W8, 0x1
	0x025D88C8 STRB W8, [X21 + 0xF82]
	0x025D88CC LDR X8, [X19 + 0x20]
	0x025D88D0 LDR X8, [X8 + 0xC0]
	0x025D88D4 LDR X8, [X8 + 0x30]
	0x025D88D8 LDR W21, [X8 + 0xFC]
	0x025D88DC ADD X8, X31, 0x0
	0x025D88E0 ADD X9, X21, 0xF
	0x025D88E4 AND X9, X9, 0x1FFFFFFFF
	0x025D88E8 SUB X24, X8, X9
	0x025D88EC ADD X31, X24, 0x0
	0x025D88F0 STUR W31, [X29 - 0x10]
	0x025D88F4 MOV X25, X20
	0x025D88F8 LDR W22, [X25 + 0x9C]!
	0x025D88FC BL 0x1C16D44
	0x025D8900 LDUR X8, [X25 - 0x8C]
	0x025D8904 CBZ X8, 0x25D89FC
	0x025D8908 LDR W9, [X20 + 0x18]
	0x025D890C ADRP X28, 0x1B27000
	0x025D8910 LDR X28, [X28 + 0x470]
	0x025D8914 AND W9, W9, W22, 0x0
	0x025D8918 LDR W10, [X8 + 0x18]
	0x025D891C CMP W9, W10
	0x025D8920 B.CS 0x25D8B68
	0x025D8924 LDR X10, [X19 + 0x20]
	0x025D8928 LDR X11, [X8]
	0x025D892C SXTW X27, W9
	0x025D8930 LDR X10, [X10 + 0xC0]
	0x025D8934 LDR W11, [X11 + 0x104]
	0x025D8938 LDR X10, [X10 + 0x18]
	0x025D893C NOP
	0x025D8940 MADD X8, X11, X27, X8
	0x025D8944 ADD X0, X8, 0x20
	0x025D8948 LDR X10, [X10 + 0x80]
	0x025D894C ADD X1, X10, 0x20
	0x025D8950 BL 0x1C16D18
	0x025D8954 LDR W23, [X0]
	0x025D8958 BL 0x1C16D44
	0x025D895C ADD W1, W22, 0x1
	0x025D8960 SUBS W8, W23, W1
	0x025D8964 B.EQ 0x25D89B0
	0x025D8968 TBZ X8, 0x1F, 0x25D89C8
	0x025D896C LDRB W27, [X20 + 0x19D]
	0x025D8970 LDR W23, [X20 + 0x11C]
	0x025D8974 BL 0x1C16D44
	0x025D8978 SUB W22, W23, W22
	0x025D897C CMP W22, 0x1
	0x025D8980 B.LT 0x25D8A00
	0x025D8984 CBZ W27, 0x25D89C8
	0x025D8988 LDR X8, [X19 + 0x20]
	0x025D898C MOV X0, X20
	0x025D8990 LDR X8, [X8 + 0xC0]
	0x025D8994 LDR X1, [X8 + 0x20]
	0x025D8998 LDR X8, [X1]
	0x025D899C BLR X8
	0x025D89A0 SUB W8, W22, W0
	0x025D89A4 CMP W8, 0x0
	0x025D89A8 B.GT 0x25D89C8
	0x025D89AC B 0x25D8A00
	0x025D89B0 MOV X0, X25
	0x025D89B4 MOV W2, W22
	0x025D89B8 MOV X3, X31
	0x025D89BC BL 0x33E7AB4
	0x025D89C0 CMP W0, W22
	0x025D89C4 B.EQ 0x25D8A18
	0x025D89C8 LDR X0, [X28]
	0x025D89CC LDR W8, [X0 + 0xE0]
	0x025D89D0 CBNZ W8, 0x25D89D8
	0x025D89D4 BL 0x1C16DFC
	0x025D89D8 SUB X0, X29, 0x10
	0x025D89DC MOV X1, X31
	0x025D89E0 BL 0x33DF18C
	0x025D89E4 LDR W22, [X20 + 0x9C]
	0x025D89E8 BL 0x1C16D44
	0x025D89EC LDR W9, [X20 + 0x18]
	0x025D89F0 LDR X8, [X20 + 0x10]
	0x025D89F4 AND W9, W9, W22, 0x0
	0x025D89F8 CBNZ X8, 0x25D8918
	0x025D89FC BL 0x1C16F20
	0x025D8A00 LDUR X0, [X29 - 0x18]
	0x025D8A04 MOV W1, W31
	0x025D8A08 MOV X2, X21
	0x025D8A0C BL 0x3EB1B10
	0x025D8A10 MOV W0, W31
	0x025D8A14 B 0x25D8B38
	0x025D8A18 LDR X8, [X20 + 0x10]
	0x025D8A1C CBZ X8, 0x25D89FC
	0x025D8A20 LDR W9, [X8 + 0x18]
	0x025D8A24 CMP W27, W9
	0x025D8A28 B.CS 0x25D8B68
	0x025D8A2C LDR X9, [X19 + 0x20]
	0x025D8A30 LDR X10, [X8]
	0x025D8A34 LDR X9, [X9 + 0xC0]
	0x025D8A38 LDR W10, [X10 + 0x104]
	0x025D8A3C LDR X9, [X9 + 0x18]
	0x025D8A40 NOP
	0x025D8A44 MADD X8, X10, X27, X8
	0x025D8A48 ADD X0, X8, 0x20
	0x025D8A4C LDR X1, [X9 + 0x80]
	0x025D8A50 BL 0x1C16D18
	0x025D8A54 MOV X1, X0
	0x025D8A58 MOV X0, X24
	0x025D8A5C MOV X2, X21
	0x025D8A60 BL 0x3EB1AC0
	0x025D8A64 LDUR X0, [X29 - 0x18]
	0x025D8A68 MOV X1, X24
	0x025D8A6C MOV X2, X21
	0x025D8A70 BL 0x3EB1AC0
	0x025D8A74 LDR X8, [X19 + 0x20]
	0x025D8A78 LDR X8, [X8 + 0xC0]
	0x025D8A7C LDR X0, [X8 + 0x30]
	0x025D8A80 LDRB W8, [X0 + 0x135]
	0x025D8A84 TBNZ X8, 0x0, 0x25D8A8C
	0x025D8A88 BL 0x1C5C684
	0x025D8A8C LDRB W23, [X20 + 0x19C]
	0x025D8A90 BL 0x1C16D44
	0x025D8A94 CBNZ W23, 0x25D8B34
	0x025D8A98 LDR X8, [X20 + 0x10]
	0x025D8A9C CBZ X8, 0x25D89FC
	0x025D8AA0 LDR W9, [X8 + 0x18]
	0x025D8AA4 CMP W27, W9
	0x025D8AA8 B.CS 0x25D8B68
	0x025D8AAC LDR X9, [X19 + 0x20]
	0x025D8AB0 LDR X10, [X8]
	0x025D8AB4 LDR X9, [X9 + 0xC0]
	0x025D8AB8 LDR W10, [X10 + 0x104]
	0x025D8ABC LDR X9, [X9 + 0x18]
	0x025D8AC0 NOP
	0x025D8AC4 MADD X8, X10, X27, X8
	0x025D8AC8 ADD X0, X8, 0x20
	0x025D8ACC LDR X1, [X9 + 0x80]
	0x025D8AD0 BL 0x1C16D18
	0x025D8AD4 MOV W1, W31
	0x025D8AD8 MOV X2, X21
	0x025D8ADC BL 0x3EB1B10
	0x025D8AE0 LDR X20, [X20 + 0x10]
	0x025D8AE4 CBZ X20, 0x25D89FC
	0x025D8AE8 LDR W8, [X20 + 0x18]
	0x025D8AEC CMP W27, W8
	0x025D8AF0 B.CS 0x25D8B68
	0x025D8AF4 LDR X8, [X19 + 0x20]
	0x025D8AF8 LDR X9, [X20]
	0x025D8AFC LDR X8, [X8 + 0xC0]
	0x025D8B00 LDR W9, [X9 + 0x104]
	0x025D8B04 LDR X8, [X8 + 0x18]
	0x025D8B08 NOP
	0x025D8B0C MADD X9, X9, X27, X20
	0x025D8B10 ADD X0, X9, 0x20
	0x025D8B14 LDR X8, [X8 + 0x80]
	0x025D8B18 ADD X1, X8, 0x20
	0x025D8B1C BL 0x1C16D18
	0x025D8B20 LDR W8, [X20 + 0x18]
	0x025D8B24 MOV X19, X0
	0x025D8B28 ADD W20, W22, W8
	0x025D8B2C BL 0x1C16D44
	0x025D8B30 STR W20, [X19]
	0x025D8B34 MOVZ W0, 0x1
	0x025D8B38 LDR X8, [X26 + 0x28]
	0x025D8B3C LDUR X9, [X29 - 0x8]
	0x025D8B40 CMP X8, X9
	0x025D8B44 B.NE 0x25D8B6C
	0x025D8B48 ADD X31, X29, 0x0
	0x025D8B4C LDP X20, X19, [X31 + 0x50]
	0x025D8B50 LDP X22, X21, [X31 + 0x40]
	0x025D8B54 LDP X24, X23, [X31 + 0x30]
	0x025D8B58 LDP X26, X25, [X31 + 0x20]
	0x025D8B5C LDP X28, X27, [X31 + 0x10]
	0x025D8B60 LDP X29, X30, [X31], #0x60
	0x025D8B64 RET
	0x025D8B68 BL 0x1C16F28
	0x025D8B6C BL 0x3EB1B20
	0x025D8B70 STP X29, X30, [X31 - 0x60]!
	0x025D8B74 STP X28, X27, [X31 + 0x10]
	0x025D8B78 STP X26, X25, [X31 + 0x20]
	0x025D8B7C STP X24, X23, [X31 + 0x30]
	0x025D8B80 STP X22, X21, [X31 + 0x40]
	0x025D8B84 STP X20, X19, [X31 + 0x50]
	0x025D8B88 ADD X29, X31, 0x0
	0x025D8B8C SUB X31, X31, 0x30
	0x025D8B90 MRS X8, 0xC000
	0x025D8B94 STP X1, X8, [X29 - 0x20]
	0x025D8B98 LDR X8, [X8 + 0x28]
	0x025D8B9C ADRP X20, 0x1E01000
	0x025D8BA0 MOV X19, X3
	0x025D8BA4 MOV W24, W2
	0x025D8BA8 STUR X8, [X29 - 0x8]
	0x025D8BAC LDRB W8, [X20 + 0xF83]
	0x025D8BB0 MOV X25, X0
	0x025D8BB4 TBNZ X8, 0x0, 0x25D8BCC
	0x025D8BB8 ADRP X0, 0x1B27000
	0x025D8BBC LDR X0, [X0 + 0x470]
	0x025D8BC0 BL 0x1C16CF4
	0x025D8BC4 MOVZ W8, 0x1
	0x025D8BC8 STRB W8, [X20 + 0xF83]
	0x025D8BCC LDR X8, [X19 + 0x20]
	0x025D8BD0 LDR X8, [X8 + 0xC0]
	0x025D8BD4 LDR X8, [X8 + 0x30]
	0x025D8BD8 LDR W21, [X8 + 0xFC]
	0x025D8BDC ADD X8, X31, 0x0
	0x025D8BE0 ADD X9, X21, 0xF
	0x025D8BE4 AND X20, X9, 0x1FFFFFFFF
	0x025D8BE8 SUB X22, X8, X20
	0x025D8BEC ADD X31, X22, 0x0
	0x025D8BF0 ADD X8, X31, 0x0
	0x025D8BF4 SUB X26, X8, X20
	0x025D8BF8 ADD X31, X26, 0x0
	0x025D8BFC MOV X0, X26
	0x025D8C00 MOV W1, W31
	0x025D8C04 MOV X2, X21
	0x025D8C08 BL 0x3EB1B10
	0x025D8C0C ADD X8, X31, 0x0
	0x025D8C10 SUB X23, X8, X20
	0x025D8C14 ADD X31, X23, 0x0
	0x025D8C18 MOV X0, X23
	0x025D8C1C MOV W1, W31
	0x025D8C20 MOV X2, X21
	0x025D8C24 BL 0x3EB1B10
	0x025D8C28 STUR W24, [X29 - 0x24]
	0x025D8C2C TBZ X24, 0x0, 0x25D8C40
	0x025D8C30 MOVZ W8, 0x1
	0x025D8C34 MOV X0, X31
	0x025D8C38 STRB W8, [X25 + 0x19C]
	0x025D8C3C BL 0x33EB1A0
	0x025D8C40 STUR W31, [X29 - 0x10]
	0x025D8C44 LDR W20, [X25 + 0x9C]
	0x025D8C48 BL 0x1C16D44
	0x025D8C4C LDR X8, [X25 + 0x10]
	0x025D8C50 CBZ X8, 0x25D8D2C
	0x025D8C54 LDR W9, [X25 + 0x18]
	0x025D8C58 ADRP X28, 0x1B27000
	0x025D8C5C LDR X28, [X28 + 0x470]
	0x025D8C60 AND W9, W9, W20, 0x0
	0x025D8C64 LDR W10, [X8 + 0x18]
	0x025D8C68 CMP W9, W10
	0x025D8C6C B.CS 0x25D8E28
	0x025D8C70 LDR X10, [X19 + 0x20]
	0x025D8C74 LDR X11, [X8]
	0x025D8C78 SXTW X27, W9
	0x025D8C7C LDR X10, [X10 + 0xC0]
	0x025D8C80 LDR W11, [X11 + 0x104]
	0x025D8C84 LDR X10, [X10 + 0x18]
	0x025D8C88 NOP
	0x025D8C8C MADD X8, X11, X27, X8
	0x025D8C90 ADD X0, X8, 0x20
	0x025D8C94 LDR X10, [X10 + 0x80]
	0x025D8C98 ADD X1, X10, 0x20
	0x025D8C9C BL 0x1C16D18
	0x025D8CA0 LDR W24, [X0]
	0x025D8CA4 BL 0x1C16D44
	0x025D8CA8 ORN W8, W31, W20, 0x0
	0x025D8CAC ADDS W8, W24, W8
	0x025D8CB0 B.EQ 0x25D8D30
	0x025D8CB4 TBZ X8, 0x1F, 0x25D8CF8
	0x025D8CB8 LDRB W27, [X25 + 0x19D]
	0x025D8CBC LDR W24, [X25 + 0x11C]
	0x025D8CC0 BL 0x1C16D44
	0x025D8CC4 SUB W20, W24, W20
	0x025D8CC8 CMP W20, 0x1
	0x025D8CCC B.LT 0x25D8D80
	0x025D8CD0 CBZ W27, 0x25D8CF8
	0x025D8CD4 LDR X8, [X19 + 0x20]
	0x025D8CD8 MOV X0, X25
	0x025D8CDC LDR X8, [X8 + 0xC0]
	0x025D8CE0 LDR X1, [X8 + 0x20]
	0x025D8CE4 LDR X8, [X1]
	0x025D8CE8 BLR X8
	0x025D8CEC SUB W8, W20, W0
	0x025D8CF0 CMP W8, 0x0
	0x025D8CF4 B.LE 0x25D8D80
	0x025D8CF8 LDR X0, [X28]
	0x025D8CFC LDR W8, [X0 + 0xE0]
	0x025D8D00 CBNZ W8, 0x25D8D08
	0x025D8D04 BL 0x1C16DFC
	0x025D8D08 SUB X0, X29, 0x10
	0x025D8D0C MOV X1, X31
	0x025D8D10 BL 0x33DF18C
	0x025D8D14 LDR W20, [X25 + 0x9C]
	0x025D8D18 BL 0x1C16D44
	0x025D8D1C LDR W9, [X25 + 0x18]
	0x025D8D20 LDR X8, [X25 + 0x10]
	0x025D8D24 AND W9, W9, W20, 0x0
	0x025D8D28 CBNZ X8, 0x25D8C64
	0x025D8D2C BL 0x1C16F20
	0x025D8D30 LDUR W8, [X29 - 0x24]
	0x025D8D34 TBZ X8, 0x0, 0x25D8D98
	0x025D8D38 LDR X8, [X25 + 0x10]
	0x025D8D3C CBZ X8, 0x25D8D2C
	0x025D8D40 LDR W9, [X8 + 0x18]
	0x025D8D44 CMP W27, W9
	0x025D8D48 B.CS 0x25D8E28
	0x025D8D4C LDR X9, [X19 + 0x20]
	0x025D8D50 LDR X10, [X8]
	0x025D8D54 LDR X9, [X9 + 0xC0]
	0x025D8D58 LDR W10, [X10 + 0x104]
	0x025D8D5C LDR X9, [X9 + 0x18]
	0x025D8D60 NOP
	0x025D8D64 MADD X8, X10, X27, X8
	0x025D8D68 ADD X0, X8, 0x20
	0x025D8D6C LDR X1, [X9 + 0x80]
	0x025D8D70 BL 0x1C16D18
	0x025D8D74 MOV X1, X0
	0x025D8D78 MOV X0, X22
	0x025D8D7C B 0x25D8DB0
	0x025D8D80 LDUR X0, [X29 - 0x20]
	0x025D8D84 MOV W1, W31
	0x025D8D88 MOV X2, X21
	0x025D8D8C BL 0x3EB1B10
	0x025D8D90 MOV W0, W31
	0x025D8D94 B 0x25D8DF4
	0x025D8D98 MOV X0, X26
	0x025D8D9C MOV W1, W31
	0x025D8DA0 MOV X2, X21
	0x025D8DA4 BL 0x3EB1B10
	0x025D8DA8 MOV X0, X22
	0x025D8DAC MOV X1, X26
	0x025D8DB0 MOV X2, X21
	0x025D8DB4 BL 0x3EB1AC0
	0x025D8DB8 MOV X0, X23
	0x025D8DBC MOV X1, X22
	0x025D8DC0 MOV X2, X21
	0x025D8DC4 BL 0x3EB1AC0
	0x025D8DC8 LDUR X0, [X29 - 0x20]
	0x025D8DCC MOV X1, X23
	0x025D8DD0 MOV X2, X21
	0x025D8DD4 BL 0x3EB1AC0
	0x025D8DD8 LDR X8, [X19 + 0x20]
	0x025D8DDC LDR X8, [X8 + 0xC0]
	0x025D8DE0 LDR X0, [X8 + 0x30]
	0x025D8DE4 LDRB W8, [X0 + 0x135]
	0x025D8DE8 TBNZ X8, 0x0, 0x25D8DF0
	0x025D8DEC BL 0x1C5C684
	0x025D8DF0 MOVZ W0, 0x1
	0x025D8DF4 LDUR X8, [X29 - 0x18]
	0x025D8DF8 LDR X8, [X8 + 0x28]
	0x025D8DFC LDUR X9, [X29 - 0x8]
	0x025D8E00 CMP X8, X9
	0x025D8E04 B.NE 0x25D8E2C
	0x025D8E08 ADD X31, X29, 0x0
	0x025D8E0C LDP X20, X19, [X31 + 0x50]
	0x025D8E10 LDP X22, X21, [X31 + 0x40]
	0x025D8E14 LDP X24, X23, [X31 + 0x30]
	0x025D8E18 LDP X26, X25, [X31 + 0x20]
	0x025D8E1C LDP X28, X27, [X31 + 0x10]
	0x025D8E20 LDP X29, X30, [X31], #0x60
	0x025D8E24 RET
	0x025D8E28 BL 0x1C16F28
	0x025D8E2C BL 0x3EB1B20
	0x025D8E30 STP X29, X30, [X31 - 0x60]!
	0x025D8E34 STP X28, X27, [X31 + 0x10]
	0x025D8E38 STP X26, X25, [X31 + 0x20]
	0x025D8E3C STP X24, X23, [X31 + 0x30]
	0x025D8E40 STP X22, X21, [X31 + 0x40]
	0x025D8E44 STP X20, X19, [X31 + 0x50]
	0x025D8E48 ADD X29, X31, 0x0
	0x025D8E4C SUB X31, X31, 0x30
	0x025D8E50 MRS X8, 0xC000
	0x025D8E54 STUR X8, [X29 - 0x20]
	0x025D8E58 LDR X8, [X8 + 0x28]
	0x025D8E5C ADRP X21, 0x1E01000
	0x025D8E60 MOV X19, X2
	0x025D8E64 MOV X20, X0
	0x025D8E68 STUR X8, [X29 - 0x8]
	0x025D8E6C LDRB W8, [X21 + 0xF84]
	0x025D8E70 STUR X1, [X29 - 0x28]
	0x025D8E74 STUR X1, [X29 - 0x10]
	0x025D8E78 TBNZ X8, 0x0, 0x25D8E90
	0x025D8E7C ADRP X0, 0x1B27000
	0x025D8E80 LDR X0, [X0 + 0x470]
	0x025D8E84 BL 0x1C16CF4
	0x025D8E88 MOVZ W8, 0x1
	0x025D8E8C STRB W8, [X21 + 0xF84]
	0x025D8E90 LDR X8, [X19 + 0x20]
	0x025D8E94 LDR X8, [X8 + 0xC0]
	0x025D8E98 LDR X8, [X8 + 0x30]
	0x025D8E9C LDR W21, [X8 + 0xFC]
	0x025D8EA0 ADD X8, X31, 0x0
	0x025D8EA4 ADD X9, X21, 0xF
	0x025D8EA8 AND X9, X9, 0x1FFFFFFFF
	0x025D8EAC SUB X23, X8, X9
	0x025D8EB0 ADD X31, X23, 0x0
	0x025D8EB4 STUR W31, [X29 - 0x18]
	0x025D8EB8 LDR W26, [X20 + 0x11C]
	0x025D8EBC BL 0x1C16D44
	0x025D8EC0 LDR X8, [X20 + 0x10]
	0x025D8EC4 CBZ X8, 0x25D8F84
	0x025D8EC8 LDR W9, [X20 + 0x18]
	0x025D8ECC ADRP X27, 0x1B27000
	0x025D8ED0 LDR X27, [X27 + 0x470]
	0x025D8ED4 ADD X24, X20, 0x11C
	0x025D8ED8 AND W9, W9, W26, 0x0
	0x025D8EDC LDR W10, [X8 + 0x18]
	0x025D8EE0 CMP W9, W10
	0x025D8EE4 B.CS 0x25D907C
	0x025D8EE8 LDR X10, [X19 + 0x20]
	0x025D8EEC LDR X11, [X8]
	0x025D8EF0 SXTW X22, W9
	0x025D8EF4 LDR X10, [X10 + 0xC0]
	0x025D8EF8 LDR W11, [X11 + 0x104]
	0x025D8EFC LDR X10, [X10 + 0x18]
	0x025D8F00 NOP
	0x025D8F04 MADD X8, X11, X22, X8
	0x025D8F08 ADD X0, X8, 0x20
	0x025D8F0C LDR X10, [X10 + 0x80]
	0x025D8F10 ADD X1, X10, 0x20
	0x025D8F14 BL 0x1C16D18
	0x025D8F18 LDR W25, [X0]
	0x025D8F1C BL 0x1C16D44
	0x025D8F20 SUBS W28, W25, W26
	0x025D8F24 B.EQ 0x25D8F30
	0x025D8F28 TBZ X28, 0x1F, 0x25D8F50
	0x025D8F2C B 0x25D9040
	0x025D8F30 ADD W25, W26, 0x1
	0x025D8F34 MOV X0, X24
	0x025D8F38 MOV W1, W25
	0x025D8F3C MOV W2, W26
	0x025D8F40 MOV X3, X31
	0x025D8F44 BL 0x33E7AB4
	0x025D8F48 CMP W0, W26
	0x025D8F4C B.EQ 0x25D8F88
	0x025D8F50 LDR X0, [X27]
	0x025D8F54 LDR W8, [X0 + 0xE0]
	0x025D8F58 CBNZ W8, 0x25D8F60
	0x025D8F5C BL 0x1C16DFC
	0x025D8F60 SUB X0, X29, 0x18
	0x025D8F64 MOV X1, X31
	0x025D8F68 BL 0x33DF18C
	0x025D8F6C LDR W26, [X20 + 0x11C]
	0x025D8F70 BL 0x1C16D44
	0x025D8F74 LDR W9, [X20 + 0x18]
	0x025D8F78 LDR X8, [X20 + 0x10]
	0x025D8F7C AND W9, W9, W26, 0x0
	0x025D8F80 CBNZ X8, 0x25D8EDC
	0x025D8F84 BL 0x1C16F20
	0x025D8F88 LDR X24, [X20 + 0x10]
	0x025D8F8C CBZ X24, 0x25D8F84
	0x025D8F90 LDR X26, [X19 + 0x20]
	0x025D8F94 LDUR X9, [X29 - 0x28]
	0x025D8F98 MOV X0, X23
	0x025D8F9C MOV X2, X21
	0x025D8FA0 LDR X8, [X26 + 0xC0]
	0x025D8FA4 LDR X8, [X8 + 0x30]
	0x025D8FA8 LDR W8, [X8 + 0x28]
	0x025D8FAC CMP W8, 0x0
	0x025D8FB0 SUB X8, X29, 0x10
	0x025D8FB4 CSEL X1, X9, X8, LT
	0x025D8FB8 BL 0x3EB1AC0
	0x025D8FBC LDR W8, [X24 + 0x18]
	0x025D8FC0 CMP W22, W8
	0x025D8FC4 B.CS 0x25D907C
	0x025D8FC8 LDR X8, [X26 + 0xC0]
	0x025D8FCC LDR X9, [X24]
	0x025D8FD0 MOV X2, X23
	0x025D8FD4 MOV W3, W21
	0x025D8FD8 LDR X8, [X8 + 0x18]
	0x025D8FDC LDR W9, [X9 + 0x104]
	0x025D8FE0 LDR X1, [X8 + 0x80]
	0x025D8FE4 NOP
	0x025D8FE8 MADD X8, X9, X22, X24
	0x025D8FEC ADD X0, X8, 0x20
	0x025D8FF0 BL 0x1C16D1C
	0x025D8FF4 LDR X8, [X20 + 0x10]
	0x025D8FF8 CBZ X8, 0x25D8F84
	0x025D8FFC LDR W9, [X8 + 0x18]
	0x025D9000 CMP W22, W9
	0x025D9004 B.CS 0x25D907C
	0x025D9008 LDR X9, [X19 + 0x20]
	0x025D900C LDR X10, [X8]
	0x025D9010 LDR X9, [X9 + 0xC0]
	0x025D9014 LDR W10, [X10 + 0x104]
	0x025D9018 LDR X9, [X9 + 0x18]
	0x025D901C NOP
	0x025D9020 MADD X8, X10, X22, X8
	0x025D9024 ADD X0, X8, 0x20
	0x025D9028 LDR X9, [X9 + 0x80]
	0x025D902C ADD X1, X9, 0x20
	0x025D9030 BL 0x1C16D18
	0x025D9034 MOV X19, X0
	0x025D9038 BL 0x1C16D44
	0x025D903C STR W25, [X19]
	0x025D9040 LDUR X8, [X29 - 0x20]
	0x025D9044 CMP W28, 0x0
	0x025D9048 CSET W0, EQ
	0x025D904C LDR X8, [X8 + 0x28]
	0x025D9050 LDUR X9, [X29 - 0x8]
	0x025D9054 CMP X8, X9
	0x025D9058 B.NE 0x25D9080
	0x025D905C ADD X31, X29, 0x0
	0x025D9060 LDP X20, X19, [X31 + 0x50]
	0x025D9064 LDP X22, X21, [X31 + 0x40]
	0x025D9068 LDP X24, X23, [X31 + 0x30]
	0x025D906C LDP X26, X25, [X31 + 0x20]
	0x025D9070 LDP X28, X27, [X31 + 0x10]
	0x025D9074 LDP X29, X30, [X31], #0x60
	0x025D9078 RET
	0x025D907C BL 0x1C16F28
	0x025D9080 BL 0x3EB1B20
	0x025D9084 STP X30, X21, [X31 - 0x20]!
	0x025D9088 STP X20, X19, [X31 + 0x10]
	0x025D908C MOV X20, X1
	0x025D9090 MOV X1, X31
	0x025D9094 MOV X19, X2
	0x025D9098 MOV X21, X0
	0x025D909C BL 0x33BDD8C
	0x025D90A0 STP X20, X19, [X21 + 0x10]
	0x025D90A4 LDP X20, X19, [X31 + 0x10]
	0x025D90A8 LDP X30, X21, [X31], #0x20
	0x025D90AC RET
	0x025D90B0 RET
	0x025D90B4 STP X30, X21, [X31 - 0x20]!
	0x025D90B8 STP X20, X19, [X31 + 0x10]
	0x025D90BC ADRP X20, 0x1E00000
	0x025D90C0 ADRP X21, 0x1B1A000
	0x025D90C4 LDRB W8, [X20 + 0xF85]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+64], X30
	003 Move [X31+80], X26
	004 Move [X31+88], X25
	005 Move [X31+96], X24
	006 Move [X31+104], X23
	007 Move [X31+112], X22
	008 Move [X31+120], X21
	009 Move [X31+128], X20
	010 Move [X31+136], X19
	011 Move X21, 0x1E02000
	012 Move W8, [X21+3962]
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x1B28000
	020 Move X0, [X0+1136]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+3962], W8
	024 Move [X31+72], W31
	025 Move W22, [X19+284]
	026 Call 0x1C17D44
	027 Move X8, [X19+16]
	028 Compare X8, 0
	029 JumpIfEqual {68}
	030 Move W9, [X19+24]
	031 Move X24, 0x1B28000
	032 Move X24, [X24+1136]
	033 Add X21, X19, 284
	034 And W9, W9, W22
	035 Move W10, [X8+24]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X26, W9
	038 Add X8, X8, X26
	039 Move W23, [X8+88]
	040 Call 0x1C17D44
	041 Subtract W25, W23, W22
	042 Move TEMP, X25
	043 And TEMP, TEMP, -2147483648
	044 Compare TEMP, -2147483648
	045 JumpIfNotEqual {53}
	046 Add W23, W22, 1
	047 Move X0, X21
	048 Move W1, W23
	049 Move W2, W22
	050 Move X3, X31
	051 Call Interlocked.CompareExchange, X0, X1, X2
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X0, [X24]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Add X0, X31, 72
	059 Move X1, X31
	060 Call SpinWait.SpinOnce, X0
	061 Move W22, [X19+284]
	062 Call 0x1C17D44
	063 Move W9, [X19+24]
	064 Move X8, [X19+16]
	065 And W9, W9, W22
	066 Compare X8, 0
	067 JumpIfNotEqual {35}
	068 Call 0x1C17F20
	069 Move X8, [X19+16]
	070 Compare X8, 0
	071 JumpIfEqual {68}
	072 Move X9, [X20+48]
	073 Move V1, [X20+16]
	074 Move V0, [X20+32]
	075 Move V2, [X20]
	076 Move [X31+48], X9
	077 Move [X31+16], V1
	078 Move [X31+24], V0
	079 Move [X31], V2
	080 Move W9, [X8+24]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move V2, [X31+16]
	083 Move V0, [X31+32]
	084 Move X9, [X31+48]
	085 Move V1, [X31]
	086 Add X8, X8, X26
	087 Move [X8+48], V2
	088 Move [X8+56], V0
	089 Move [X8+80], X9
	090 Move [X8+2], V1
	091 Move X8, [X19+16]
	092 Compare X8, 0
	093 JumpIfEqual {68}
	094 Move W9, [X8+24]
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Add X19, X8, X26
	097 Call 0x1C17D44
	098 Move [X19+88], W23
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X20, [X31+128]
	101 Move X19, [X31+136]
	102 Move X22, [X31+112]
	103 Move X21, [X31+120]
	104 Move X24, [X31+96]
	105 Move X23, [X31+104]
	106 Move X26, [X31+80]
	107 Move X25, [X31+88]
	108 Move X30, [X31+64]
	109 NotImplemented "Instruction CSET not yet implemented."
	110 Add X31, X31, 144
	111 Return X0
	112 Call 0x1C17F28
	113 Move [X0+180], X1
	114 Move [X0+188], X2
	115 Return X0
	116 Move [X0+164], X1
	117 Move [X0+172], X2
	118 Return X0
	119 Move [X0+136], X1
	120 Move [X0+144], X2
	121 Return X0
	122 Add X8, X0, 260
	123 Move [X8], X1
	124 Move [X8+8], X2
	125 Return X0
	126 Move [X0+128], X1
	127 Move [X0+136], X2
	128 Return X0
	129 Move [X0+164], X1
	130 Move [X0+172], X2
	131 Return X0
	132 Move [X0+68], X1
	133 Move [X0+76], X2
	134 Return X0
	135 Move [X0+164], X1
	136 Move [X0+172], X2
	137 Return X0
	138 Move [X0+264], X1
	139 Move [X0+272], X2
	140 Return X0
	141 Move [X0+88], X1
	142 Move [X0+96], X2
	143 Return X0
	144 Move [X0+120], X1
	145 Move [X0+128], X2
	146 Return X0
	147 Move [X0+160], X1
	148 Move [X0+168], X2
	149 Return X0
	150 Move [X31-64], X30
	151 Move [X31+16], X24
	152 Move [X31+24], X23
	153 Move [X31+32], X22
	154 Move [X31+40], X21
	155 Move [X31+48], X20
	156 Move [X31+56], X19
	157 Move X21, 0x1E02000
	158 Move W8, [X21+3963]
	159 Move X19, X1
	160 Move X20, X0
	161 Compare W8, 0
	162 JumpIfNotEqual {174}
	163 Move X0, 0x1B43000
	164 Move X0, [X0+3440]
	165 Call 0x1C17CF4
	166 Move X0, 0x1B1E000
	167 Move X0, [X0+632]
	168 Call 0x1C17CF4
	169 Move X0, 0x1B1C000
	170 Move X0, [X0+1728]
	171 Call 0x1C17CF4
	172 Move W8, 1
	173 Move [X21+3963], W8
	174 Move W8, [X20+8]
	175 Move TEMP, X8
	176 And TEMP, TEMP, -2147483648
	177 Compare TEMP, -2147483648
	178 JumpIfEqual {263}
	179 Move X0, [X19+32]
	180 Move W8, [X0+309]
	181 Move TEMP, X8
	182 And TEMP, TEMP, 1
	183 Compare TEMP, 1
	184 JumpIfEqual {186}
	185 Call 0x1C5D684
	186 Move X8, 0x1B1C000
	187 Move X8, [X8+1728]
	188 Move X9, [X0+192]
	189 Move X8, [X8]
	190 Move X21, [X9+64]
	191 Move W10, [X8+224]
	192 Compare W10, 0
	193 JumpIfNotEqual {196}
	194 Move X0, X8
	195 Call 0x1C17DFC
	196 Move X0, X21
	197 Move X1, X31
	198 Call Type.GetTypeFromHandle, X0
	199 Move X8, 0x1B43000
	200 Move X8, [X8+3440]
	201 Move X21, X0
	202 Move X1, X31
	203 Move X8, [X8]
	204 Move X0, X8
	205 Call Type.GetTypeFromHandle, X0
	206 Move X1, X0
	207 Move X0, X21
	208 Move X2, X31
	209 Call Type.op_Equality, X0, X1
	210 Move X21, [X20]
	211 Move TEMP, X0
	212 And TEMP, TEMP, 1
	213 Compare TEMP, 1
	214 JumpIfNotEqual {359}
	215 Compare X21, 0
	216 JumpIfEqual {402}
	217 Move X8, 0x1B1E000
	218 Move X8, [X8+632]
	219 Move X9, [X21]
	220 Move X8, [X8]
	221 NotImplemented "Instruction CMP not yet implemented."
	222 Move X0, X21
	223 Move X1, X31
	224 Call String.GetRawStringData, X0
	225 Move X8, [X19+32]
	226 Move W23, [X21+16]
	227 Move X21, X0
	228 Add X9, X8, 309
	229 NotImplemented "Instruction LDRH not yet implemented."
	230 Move TEMP, X9
	231 And TEMP, TEMP, 1
	232 Compare TEMP, 1
	233 JumpIfEqual {239}
	234 Move X0, X8
	235 Call 0x1C5D684
	236 Move X8, [X19+32]
	237 Add X9, X8, 309
	238 NotImplemented "Instruction LDRH not yet implemented."
	239 Move W22, [X20+8]
	240 Move W19, [X20+12]
	241 Move X22, W22
	242 Move TEMP, X9
	243 And TEMP, TEMP, 1
	244 Compare TEMP, 1
	245 JumpIfEqual {249}
	246 Move X0, X8
	247 Call 0x1C5D684
	248 Move X8, X0
	249 Move X8, [X8+192]
	250 Move X20, [X8+168]
	251 Subtract W8, W23, W22
	252 NotImplemented "Instruction CMP not yet implemented."
	253 Move X0, X31
	254 Call ThrowHelper.ThrowArgumentOutOfRangeException
	255 Move X0, [X20+32]
	256 Move W8, [X0+309]
	257 Move TEMP, X8
	258 And TEMP, TEMP, 1
	259 Compare TEMP, 1
	260 JumpIfEqual {262}
	261 Call 0x1C5D684
	262 Add X0, X21, X22
	263 Move X0, [X19+32]
	264 Move X21, [X20]
	265 Move W8, [X0+309]
	266 Move TEMP, X8
	267 And TEMP, TEMP, 1
	268 Compare TEMP, 1
	269 JumpIfEqual {271}
	270 Call 0x1C5D684
	271 Move X8, [X0+192]
	272 Move X1, [X8+104]
	273 Move W8, [X1+309]
	274 Move TEMP, X8
	275 And TEMP, TEMP, 1
	276 Compare TEMP, 1
	277 JumpIfEqual {281}
	278 Move X0, X1
	279 Call 0x1C5D684
	280 Move X1, X0
	281 Compare X21, 0
	282 JumpIfEqual {415}
	283 Move X8, [X21]
	284 Move W9, [X1+304]
	285 Move W10, [X8+304]
	286 NotImplemented "Instruction CMP not yet implemented."
	287 Move X8, [X8+200]
	288 Add X8, X8, X9
	289 NotImplemented "Instruction LDUR not yet implemented."
	290 NotImplemented "Instruction CMP not yet implemented."
	291 Move X0, [X19+32]
	292 Move W8, [X0+309]
	293 Move TEMP, X8
	294 And TEMP, TEMP, 1
	295 Compare TEMP, 1
	296 JumpIfEqual {298}
	297 Call 0x1C5D684
	298 Move X8, [X0+192]
	299 Move X1, [X8+104]
	300 Move W8, [X1+309]
	301 Move TEMP, X8
	302 And TEMP, TEMP, 1
	303 Compare TEMP, 1
	304 JumpIfEqual {308}
	305 Move X0, X1
	306 Call 0x1C5D684
	307 Move X1, X0
	308 Move X8, [X21]
	309 Move W9, [X1+304]
	310 Move W10, [X8+304]
	311 NotImplemented "Instruction CMP not yet implemented."
	312 Move X10, [X8+200]
	313 Add X9, X10, X9
	314 NotImplemented "Instruction LDUR not yet implemented."
	315 NotImplemented "Instruction CMP not yet implemented."
	316 Move X9, [X8+376]
	317 Move X1, [X8+384]
	318 Move X0, X21
	319 NotImplemented "Instruction BLR not yet implemented."
	320 Move X21, X0
	321 Move X0, [X19+32]
	322 Move W9, [X20+8]
	323 Move W20, [X20+12]
	324 Move X22, X1
	325 Move W8, [X0+309]
	326 And X23, X9, 0x7FFFFFFF
	327 Move TEMP, X8
	328 And TEMP, TEMP, 1
	329 Compare TEMP, 1
	330 JumpIfEqual {332}
	331 Call 0x1C5D684
	332 Move X8, [X0+192]
	333 Move X24, [X8+128]
	334 Subtract W8, W22, W23
	335 NotImplemented "Instruction CMP not yet implemented."
	336 Move X0, X31
	337 Call ThrowHelper.ThrowArgumentOutOfRangeException
	338 Move X0, [X24+32]
	339 Move W8, [X0+309]
	340 Move TEMP, X8
	341 And TEMP, TEMP, 1
	342 Compare TEMP, 1
	343 JumpIfEqual {345}
	344 Call 0x1C5D684
	345 Move X0, [X19+32]
	346 Add X19, X21, X23
	347 Move W8, [X0+309]
	348 Move TEMP, X8
	349 And TEMP, TEMP, 1
	350 Compare TEMP, 1
	351 JumpIfEqual {353}
	352 Call 0x1C5D684
	353 Move X8, [X0+192]
	354 Move X0, X19
	355 Move X1, X20
	356 Move X2, [X8+144]
	357 Call 0x25FC09C, X0
	358 Move X19, X1
	359 Compare X21, 0
	360 JumpIfEqual {402}
	361 Move X0, [X19+32]
	362 Move W23, [X20+8]
	363 Move W24, [X20+12]
	364 Move X23, W23
	365 Move W8, [X0+309]
	366 Move TEMP, X8
	367 And TEMP, TEMP, 1
	368 Compare TEMP, 1
	369 JumpIfEqual {371}
	370 Call 0x1C5D684
	371 Move X8, [X0+192]
	372 Move X22, [X8]
	373 Move W8, [X22+309]
	374 Move TEMP, X8
	375 And TEMP, TEMP, 1
	376 Compare TEMP, 1
	377 JumpIfEqual {381}
	378 Move X0, X22
	379 Call 0x1C5D684
	380 Move X22, X0
	381 Move X0, X21
	382 Move X1, X22
	383 Call 0x1C17E00
	384 Compare X0, 0
	385 JumpIfEqual {416}
	386 Move X20, X0
	387 Move X0, [X19+32]
	388 Move W8, [X0+309]
	389 Move TEMP, X8
	390 And TEMP, TEMP, 1
	391 Compare TEMP, 1
	392 JumpIfEqual {394}
	393 Call 0x1C5D684
	394 Move W8, [X20+24]
	395 And X19, X24, 0x7FFFFFFF
	396 Subtract W8, W8, W23
	397 NotImplemented "Instruction CMP not yet implemented."
	398 Move X0, X31
	399 Call ThrowHelper.ThrowArgumentOutOfRangeException
	400 Add X8, X20, X23
	401 Add X0, X8, 32
	402 Move X19, X31
	403 Move X0, X31
	404 Move X1, X19
	405 Move X20, [X31+48]
	406 Move X19, [X31+56]
	407 Move X22, [X31+32]
	408 Move X21, [X31+40]
	409 Move X24, [X31+16]
	410 Move X23, [X31+24]
	411 Move X30, [X31+64]
	412 Return X0
	413 Move X0, X21
	414 Call 0x1C181E0
	415 Call 0x1C17F20
	416 Move X0, X21
	417 Move X1, X22
	418 Call 0x1C181E0
	419 Subtract X31, X31, 96
	420 Move [X31+32], X30
	421 Move [X31+48], X24
	422 Move [X31+56], X23
	423 Move [X31+64], X22
	424 Move [X31+72], X21
	425 Move [X31+80], X20
	426 Move [X31+88], X19
	427 Move X21, 0x1E02000
	428 Move W8, [X21+3964]
	429 Move X19, X1
	430 Move X20, X0
	431 Compare W8, 0
	432 JumpIfNotEqual {444}
	433 Move X0, 0x1B43000
	434 Move X0, [X0+3440]
	435 Call 0x1C17CF4
	436 Move X0, 0x1B1E000
	437 Move X0, [X0+632]
	438 Call 0x1C17CF4
	439 Move X0, 0x1B1C000
	440 Move X0, [X0+1728]
	441 Call 0x1C17CF4
	442 Move W8, 1
	443 Move [X21+3964], W8
	444 Move [X31+16], X31
	445 Move [X31+24], X31
	446 Move [X31], X31
	447 Move [X31+8], X31
	448 Move W8, [X20+8]
	449 Move TEMP, X8
	450 And TEMP, TEMP, -2147483648
	451 Compare TEMP, -2147483648
	452 JumpIfEqual {527}
	453 Move X0, [X19+32]
	454 Move W8, [X0+309]
	455 Move TEMP, X8
	456 And TEMP, TEMP, 1
	457 Compare TEMP, 1
	458 JumpIfEqual {460}
	459 Call 0x1C5D684
	460 Move X8, 0x1B1C000
	461 Move X8, [X8+1728]
	462 Move X9, [X0+192]
	463 Move X8, [X8]
	464 Move X21, [X9+64]
	465 Move W10, [X8+224]
	466 Compare W10, 0
	467 JumpIfNotEqual {470}
	468 Move X0, X8
	469 Call 0x1C17DFC
	470 Move X0, X21
	471 Move X1, X31
	472 Call Type.GetTypeFromHandle, X0
	473 Move X8, 0x1B43000
	474 Move X8, [X8+3440]
	475 Move X21, X0
	476 Move X1, X31
	477 Move X8, [X8]
	478 Move X0, X8
	479 Call Type.GetTypeFromHandle, X0
	480 Move X1, X0
	481 Move X0, X21
	482 Move X2, X31
	483 Call Type.op_Equality, X0, X1
	484 Move X22, [X20]
	485 Move TEMP, X0
	486 And TEMP, TEMP, 1
	487 Compare TEMP, 1
	488 JumpIfNotEqual {600}
	489 Compare X22, 0
	490 JumpIfEqual {655}
	491 Move X8, 0x1B1E000
	492 Move X8, [X8+632]
	493 Move X9, [X22]
	494 Move X8, [X8]
	495 NotImplemented "Instruction CMP not yet implemented."
	496 Move X0, X22
	497 Move X1, X31
	498 Call String.GetRawStringData, X0
	499 Move X8, [X19+32]
	500 Move W22, [X22+16]
	501 Move X21, X0
	502 Add X9, X8, 309
	503 NotImplemented "Instruction LDRH not yet implemented."
	504 Move TEMP, X9
	505 And TEMP, TEMP, 1
	506 Compare TEMP, 1
	507 JumpIfEqual {513}
	508 Move X0, X8
	509 Call 0x1C5D684
	510 Move X8, [X19+32]
	511 Add X9, X8, 309
	512 NotImplemented "Instruction LDRH not yet implemented."
	513 Move [X31], X21
	514 Move [X31+8], W22
	515 Move [X31+12], W31
	516 Move W21, [X20+8]
	517 Move W20, [X20+12]
	518 Move TEMP, X9
	519 And TEMP, TEMP, 1
	520 Compare TEMP, 1
	521 JumpIfEqual {732}
	522 Move X0, X8
	523 Call 0x1C5D684
	524 Move X8, [X19+32]
	525 Add X9, X8, 309
	526 NotImplemented "Instruction LDRH not yet implemented."
	527 Move X0, [X19+32]
	528 Move X21, [X20]
	529 Move W8, [X0+309]
	530 Move TEMP, X8
	531 And TEMP, TEMP, 1
	532 Compare TEMP, 1
	533 JumpIfEqual {535}
	534 Call 0x1C5D684
	535 Move X8, [X0+192]
	536 Move X1, [X8+104]
	537 Move W8, [X1+309]
	538 Move TEMP, X8
	539 And TEMP, TEMP, 1
	540 Compare TEMP, 1
	541 JumpIfEqual {545}
	542 Move X0, X1
	543 Call 0x1C5D684
	544 Move X1, X0
	545 Compare X21, 0
	546 JumpIfEqual {751}
	547 Move X8, [X21]
	548 Move W9, [X1+304]
	549 Move W10, [X8+304]
	550 NotImplemented "Instruction CMP not yet implemented."
	551 Move X8, [X8+200]
	552 Add X8, X8, X9
	553 NotImplemented "Instruction LDUR not yet implemented."
	554 NotImplemented "Instruction CMP not yet implemented."
	555 Move X0, [X19+32]
	556 Move W8, [X0+309]
	557 Move TEMP, X8
	558 And TEMP, TEMP, 1
	559 Compare TEMP, 1
	560 JumpIfEqual {562}
	561 Call 0x1C5D684
	562 Move X8, [X0+192]
	563 Move X1, [X8+104]
	564 Move W8, [X1+309]
	565 Move TEMP, X8
	566 And TEMP, TEMP, 1
	567 Compare TEMP, 1
	568 JumpIfEqual {572}
	569 Move X0, X1
	570 Call 0x1C5D684
	571 Move X1, X0
	572 Move X8, [X21]
	573 Move W9, [X1+304]
	574 Move W10, [X8+304]
	575 NotImplemented "Instruction CMP not yet implemented."
	576 Move X10, [X8+200]
	577 Add X9, X10, X9
	578 NotImplemented "Instruction LDUR not yet implemented."
	579 NotImplemented "Instruction CMP not yet implemented."
	580 Move X9, [X8+376]
	581 Move X1, [X8+384]
	582 Move X0, X21
	583 NotImplemented "Instruction BLR not yet implemented."
	584 Move [X31+16], X0
	585 Move [X31+24], X1
	586 Move X8, [X19+32]
	587 Move W21, [X20+8]
	588 Move W20, [X20+12]
	589 Add X9, X8, 309
	590 NotImplemented "Instruction LDRH not yet implemented."
	591 Move TEMP, X9
	592 And TEMP, TEMP, 1
	593 Compare TEMP, 1
	594 JumpIfEqual {657}
	595 Move X0, X8
	596 Call 0x1C5D684
	597 Move X8, [X19+32]
	598 Add X9, X8, 309
	599 NotImplemented "Instruction LDRH not yet implemented."
	600 Compare X22, 0
	601 JumpIfEqual {655}
	602 Move X0, [X19+32]
	603 Move W21, [X20+8]
	604 Move W24, [X20+12]
	605 Move W8, [X0+309]
	606 Move TEMP, X8
	607 And TEMP, TEMP, 1
	608 Compare TEMP, 1
	609 JumpIfEqual {611}
	610 Call 0x1C5D684
	611 Move X8, [X0+192]
	612 Move X23, [X8]
	613 Move W8, [X23+309]
	614 Move TEMP, X8
	615 And TEMP, TEMP, 1
	616 Compare TEMP, 1
	617 JumpIfEqual {621}
	618 Move X0, X23
	619 Call 0x1C5D684
	620 Move X23, X0
	621 Move X0, X22
	622 Move X1, X23
	623 Call 0x1C17E00
	624 Compare X0, 0
	625 JumpIfEqual {752}
	626 Move X20, X0
	627 Move X0, [X19+32]
	628 Move W8, [X0+309]
	629 Move TEMP, X8
	630 And TEMP, TEMP, 1
	631 Compare TEMP, 1
	632 JumpIfEqual {634}
	633 Call 0x1C5D684
	634 Move X8, [X0+192]
	635 Move W9, [X20+24]
	636 And X19, X24, 0x7FFFFFFF
	637 Move X22, [X8+184]
	638 Subtract W8, W9, W21
	639 NotImplemented "Instruction CMP not yet implemented."
	640 Move X0, X31
	641 Call ThrowHelper.ThrowArgumentOutOfRangeException
	642 Move X8, [X22+32]
	643 Add X20, X20, 32
	644 Add X9, X8, 309
	645 NotImplemented "Instruction LDRH not yet implemented."
	646 Move TEMP, X9
	647 And TEMP, TEMP, 1
	648 Compare TEMP, 1
	649 JumpIfEqual {706}
	650 Move X0, X8
	651 Call 0x1C5D684
	652 Move X8, [X22+32]
	653 Add X9, X8, 309
	654 NotImplemented "Instruction LDRH not yet implemented."
	655 Move X19, X31
	656 Move X0, X31
	657 Move X0, X8
	658 Move X10, [X0+192]
	659 And W21, W21, 0x7FFFFFFF
	660 Move X10, [X10+128]
	661 Move X22, [X10]
	662 Move TEMP, X9
	663 And TEMP, TEMP, 1
	664 Compare TEMP, 1
	665 JumpIfEqual {669}
	666 Move X0, X8
	667 Call 0x1C5D684
	668 Move X8, X0
	669 Move X8, [X8+192]
	670 Add X0, X31, 16
	671 Move W1, W21
	672 Move W2, W20
	673 Move X3, [X8+128]
	674 NotImplemented "Instruction BLR not yet implemented."
	675 Move X8, [X19+32]
	676 Move X20, X0
	677 Move X21, X1
	678 Add X9, X8, 309
	679 NotImplemented "Instruction LDRH not yet implemented."
	680 Move TEMP, X9
	681 And TEMP, TEMP, 1
	682 Compare TEMP, 1
	683 JumpIfEqual {689}
	684 Move X0, X8
	685 Call 0x1C5D684
	686 Move X8, [X19+32]
	687 Add X9, X8, 309
	688 NotImplemented "Instruction LDRH not yet implemented."
	689 Move X0, X8
	690 Move X10, [X0+192]
	691 Move X10, [X10+144]
	692 Move X19, [X10]
	693 Move TEMP, X9
	694 And TEMP, TEMP, 1
	695 Compare TEMP, 1
	696 JumpIfEqual {700}
	697 Move X0, X8
	698 Call 0x1C5D684
	699 Move X8, X0
	700 Move X8, [X8+192]
	701 Move X0, X20
	702 Move X1, X21
	703 Move X2, [X8+144]
	704 NotImplemented "Instruction BLR not yet implemented."
	705 Move X19, X1
	706 Move X0, X8
	707 Move X10, [X0+192]
	708 Move X10, [X10+40]
	709 Move X22, [X10]
	710 Move TEMP, X9
	711 And TEMP, TEMP, 1
	712 Compare TEMP, 1
	713 JumpIfEqual {717}
	714 Move X0, X8
	715 Call 0x1C5D684
	716 Move X8, X0
	717 Move X8, [X8+192]
	718 Move X0, X20
	719 Move W1, W21
	720 Move X2, [X8+40]
	721 NotImplemented "Instruction BLR not yet implemented."
	722 Move X1, X19
	723 Move X20, [X31+80]
	724 Move X19, [X31+88]
	725 Move X22, [X31+64]
	726 Move X21, [X31+72]
	727 Move X24, [X31+48]
	728 Move X23, [X31+56]
	729 Move X30, [X31+32]
	730 Add X31, X31, 96
	731 Return X0
	732 Move X0, X8
	733 Move X10, [X0+192]
	734 Move X10, [X10+168]
	735 Move X19, [X10]
	736 Move TEMP, X9
	737 And TEMP, TEMP, 1
	738 Compare TEMP, 1
	739 JumpIfEqual {743}
	740 Move X0, X8
	741 Call 0x1C5D684
	742 Move X8, X0
	743 Move X8, [X8+192]
	744 Add X0, X31, 0
	745 Move W1, W21
	746 Move W2, W20
	747 Move X3, [X8+168]
	748 NotImplemented "Instruction BLR not yet implemented."
	749 Move X0, X21
	750 Call 0x1C181E0
	751 Call 0x1C17F20
	752 Move X0, X22
	753 Move X1, X23
	754 Call 0x1C181E0

