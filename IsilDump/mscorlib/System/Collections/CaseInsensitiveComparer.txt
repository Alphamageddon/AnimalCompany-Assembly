Type: System.Collections.CaseInsensitiveComparer

Method: System.Void .ctor()

Disassembly:
	0x03352B3C MOVZ W8, 0x1
	0x03352B40 STRB W8, [X21 + 0xDD0]
	0x03352B44 MOV X0, X19
	0x03352B48 MOV X1, X31
	0x03352B4C BL 0x33BDD8C
	0x03352B50 TBNZ X20, 0x1F, 0x3352BBC
	0x03352B54 FMOV S0, 1
	0x03352B58 FCMP S8, S0
	0x03352B5C B.LT 0x3352C18
	0x03352B60 FMOV S0, 10
	0x03352B64 FCMP S8, S0
	0x03352B68 B.HI 0x3352C18
	0x03352B6C ADRP X8, 0xDA1000
	0x03352B70 LDR X8, [X8 + 0x9D0]
	0x03352B74 MOV W1, W20
	0x03352B78 LDR X0, [X8]
	0x03352B7C BL 0x1C16D6C
	0x03352B80 MOVZ W8, 0x42C80000
	0x03352B84 MOVZ W9, 0x7F800000
	0x03352B88 FMOV S0, W8
	0x03352B8C FMUL S0, S8, S0
	0x03352B90 FMOV S1, W9
	0x03352B94 MOVZ W10, 0x80000000
	0x03352B98 FCVTZS W8, S0
	0x03352B9C FCMP S0, S1
	0x03352BA0 CSEL W8, W10, W8, EQ
	0x03352BA4 STP X0, X31, [X19 + 0x10]
	0x03352BA8 STP W31, W8, [X19 + 0x20]
	0x03352BAC LDP X20, X19, [X31 + 0x20]
	0x03352BB0 LDP X30, X21, [X31 + 0x10]
	0x03352BB4 LDR V8, [X31], #0x30

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x108B000
	006 Move X20, 0xDA4000
	007 Move W8, [X21+3531]
	008 Move X20, [X20+3144]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDA4000
	015 Move X0, [X0+3144]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3531], W8
	019 Move X0, X19
	020 Move X1, X31
	021 Call Object..ctor, X0
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X31
	028 Call CultureInfo.get_CurrentCulture
	029 Compare X0, 0
	030 JumpIfEqual {41}
	031 Move X8, [X0]
	032 Move X9, [X8+504]
	033 Move X1, [X8+512]
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move [X19+16], X0
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Return 
	041 Call 0x1C17F20

Method: System.Void .ctor(System.Globalization.CultureInfo culture)

Disassembly:
	0x03352BB8 RET
	0x03352BBC ADRP X0, 0xDA9000
	0x03352BC0 LDR X0, [X0 + 0x760]
	0x03352BC4 BL 0x1C16D08
	0x03352BC8 BL 0x1C16F10
	0x03352BCC MOV X19, X0
	0x03352BD0 ADRP X0, 0xDCB000
	0x03352BD4 LDR X0, [X0 + 0x58]
	0x03352BD8 BL 0x1C16D08
	0x03352BDC MOV X20, X0
	0x03352BE0 ADRP X0, 0xDC9000
	0x03352BE4 LDR X0, [X0 + 0x670]
	0x03352BE8 BL 0x1C16D08
	0x03352BEC MOV X2, X0
	0x03352BF0 MOV X0, X19
	0x03352BF4 MOV X1, X20
	0x03352BF8 MOV X3, X31
	0x03352BFC BL 0x3311888
	0x03352C00 ADRP X0, 0xDD8000
	0x03352C04 LDR X0, [X0 + 0x398]
	0x03352C08 BL 0x1C16D08
	0x03352C0C MOV X1, X0
	0x03352C10 MOV X0, X19
	0x03352C14 BL 0x1C16DEC
	0x03352C18 MOVZ W8, 0x1
	0x03352C1C STR W8, [X31 + 0xC]
	0x03352C20 ADRP X19, 0xDA1000
	0x03352C24 LDR X19, [X19 + 0x758]
	0x03352C28 MOV X0, X19
	0x03352C2C BL 0x1C16D08
	0x03352C30 ADD X1, X31, 0xC
	0x03352C34 BL 0x1C16E04
	0x03352C38 MOV X20, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X1
	005 Move X1, X31
	006 Move X19, X0
	007 Call Object..ctor, X0
	008 Compare X20, 0
	009 JumpIfEqual {20}
	010 Move X8, [X20]
	011 Move X0, X20
	012 Move X9, [X8+504]
	013 Move X1, [X8+512]
	014 NotImplemented "Instruction BLR not yet implemented."
	015 Move [X19+16], X0
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X30, [X31+32]
	019 Return 
	020 Move X0, 0xDA7000
	021 Move X0, [X0+1320]
	022 Call 0x1C17D08
	023 Call 0x1C17F10
	024 Move X19, X0
	025 Move X0, 0xDD0000
	026 Move X0, [X0+4080]
	027 Call 0x1C17D08
	028 Move X1, X0
	029 Move X0, X19
	030 Move X2, X31
	031 Call ArgumentNullException..ctor, X0, X1
	032 Move X0, 0xDD9000
	033 Move X0, [X0+840]
	034 Call 0x1C17D08
	035 Move X1, X0
	036 Move X0, X19
	037 Call 0x1C17DEC

Method: System.Int32 Compare(System.Object a, System.Object b)

Disassembly:
	0x03352C3C MOVZ W8, 0xA
	0x03352C40 MOV X0, X19
	0x03352C44 STR W8, [X31 + 0x8]
	0x03352C48 BL 0x1C16D08
	0x03352C4C ADD X1, X31, 0x8
	0x03352C50 BL 0x1C16E04
	0x03352C54 MOV X19, X0
	0x03352C58 ADRP X0, 0xDD8000
	0x03352C5C LDR X0, [X0 + 0x3A0]
	0x03352C60 BL 0x1C16D08
	0x03352C64 MOV X1, X20
	0x03352C68 MOV X2, X19
	0x03352C6C MOV X3, X31
	0x03352C70 BL 0x320A264
	0x03352C74 MOV X19, X0
	0x03352C78 ADRP X0, 0xDA9000
	0x03352C7C LDR X0, [X0 + 0x760]
	0x03352C80 BL 0x1C16D08
	0x03352C84 BL 0x1C16F10
	0x03352C88 MOV X20, X0
	0x03352C8C ADRP X0, 0xDD8000
	0x03352C90 LDR X0, [X0 + 0x3A8]
	0x03352C94 BL 0x1C16D08
	0x03352C98 MOV X1, X0
	0x03352C9C MOV X0, X20
	0x03352CA0 MOV X2, X19
	0x03352CA4 MOV X3, X31
	0x03352CA8 BL 0x3311888
	0x03352CAC ADRP X0, 0xDD8000
	0x03352CB0 LDR X0, [X0 + 0x398]
	0x03352CB4 BL 0x1C16D08
	0x03352CB8 MOV X1, X0
	0x03352CBC MOV X0, X20
	0x03352CC0 BL 0x1C16DEC
	0x03352CC4 FMOV S0, 2
	0x03352CC8 B 0x3352B0C
	0x03352CCC STR X30, [X31 - 0x30]!
	0x03352CD0 STP X22, X21, [X31 + 0x10]
	0x03352CD4 STP X20, X19, [X31 + 0x20]
	0x03352CD8 ADRP X21, 0x108A000
	0x03352CDC LDRB W8, [X21 + 0xDD1]
	0x03352CE0 MOV X20, X1
	0x03352CE4 MOV X19, X0
	0x03352CE8 TBNZ X8, 0x0, 0x3352D18
	0x03352CEC ADRP X0, 0xDA8000
	0x03352CF0 LDR X0, [X0 + 0x2F0]
	0x03352CF4 BL 0x1C16CF4
	0x03352CF8 ADRP X0, 0xDA9000
	0x03352CFC LDR X0, [X0 + 0xDB8]
	0x03352D00 BL 0x1C16CF4
	0x03352D04 ADRP X0, 0xDA1000
	0x03352D08 LDR X0, [X0 + 0xE18]
	0x03352D0C BL 0x1C16CF4
	0x03352D10 MOVZ W8, 0x1
	0x03352D14 STRB W8, [X21 + 0xDD1]
	0x03352D18 CMP X20, 0x0
	0x03352D1C CSEL X21, X31, X19, EQ
	0x03352D20 CBZ X20, 0x3352EEC
	0x03352D24 ADRP X10, 0xDA8000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x108B000
	008 Move X23, 0xDA4000
	009 Move W8, [X22+3532]
	010 Move X23, [X23+632]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xDCB000
	019 Move X0, [X0+3376]
	020 Call 0x1C17CF4
	021 Move X0, 0xDA4000
	022 Move X0, [X0+632]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+3532], W8
	026 Move X8, [X23]
	027 Compare X20, 0
	028 JumpIfEqual {34}
	029 Move X9, [X20]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSEL not yet implemented."
	032 Compare X19, 0
	033 JumpIfNotEqual {37}
	034 Move X1, X31
	035 Compare X19, 0
	036 JumpIfEqual {58}
	037 Move X9, [X19]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CSEL not yet implemented."
	040 Compare X1, 0
	041 JumpIfEqual {58}
	042 Compare X2, 0
	043 JumpIfEqual {58}
	044 Move X0, [X21+16]
	045 Compare X0, 0
	046 JumpIfEqual {80}
	047 Move X8, [X0]
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move W3, 1
	053 Move X5, [X8+424]
	054 Move X4, [X8+432]
	055 Move X30, [X31+48]
	056 Move X23, [X31+56]
	057 CallNoReturn X5
	058 Move X21, 0xDCB000
	059 Move X21, [X21+3376]
	060 Move X0, [X21]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {66}
	064 Call 0x1C17DFC
	065 Move X0, [X21]
	066 Move X8, [X0+184]
	067 Move X0, [X8]
	068 Compare X0, 0
	069 JumpIfEqual {80}
	070 Move X1, X20
	071 Move X2, X19
	072 Move X20, [X31+32]
	073 Move X19, [X31+40]
	074 Move X22, [X31+16]
	075 Move X21, [X31+24]
	076 Move X30, [X31+48]
	077 Move X23, [X31+56]
	078 Call Comparer.Compare, X0, X1, X2
	079 Return X0
	080 Call 0x1C17F20

