Type: System.Collections.Stack/StackEnumerator

Method: System.Void .ctor(System.Collections.Stack stack)

Disassembly:
	0x03357EE8 ADRP X23, 0xDA3000
	0x03357EEC LDR X8, [X20]
	0x03357EF0 LDR X23, [X23 + 0x2F0]
	0x03357EF4 LDR W21, [X19 + 0x18]
	0x03357EF8 LDRH W9, [X8 + 0x12E]
	0x03357EFC LDR X1, [X23]
	0x03357F00 CBZ X9, 0x3357F24
	0x03357F04 LDR X10, [X8 + 0xB0]
	0x03357F08 ADD X10, X10, 0x8
	0x03357F0C LDUR X11, [X10 - 0x8]
	0x03357F10 CMP X11, X1
	0x03357F14 B.EQ 0x3357F34
	0x03357F18 SUBS X9, X9, 0x1
	0x03357F1C ADD X10, X10, 0x10
	0x03357F20 B.NE 0x3357F0C
	0x03357F24 MOVZ W2, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X1
	005 Move X1, X31
	006 Move X19, X0
	007 Call Object..ctor, X0
	008 Move [X19+16], X20
	009 Compare X20, 0
	010 JumpIfEqual {22}
	011 Move W8, [X20+28]
	012 Move TEMP, 1
	013 Not TEMP
	014 Move W9, TEMP
	015 Move [X19+32], X31
	016 Move [X19+24], W9
	017 Move [X19+28], W8
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Return 
	022 Call 0x1C17F20

Method: System.Object Clone()

Disassembly:
	0x03358144 LDR X0, [X0 + 0xC48]
	0x03358148 B 0x335816C

ISIL:
	001 Move X1, X31
	002 Call Object.MemberwiseClone, X0
	003 Return X0

Method: System.Boolean MoveNext()

Disassembly:
	0x0335814C BL 0x1C16F20
	0x03358150 ADRP X0, 0xD9B000
	0x03358154 LDR X0, [X0 + 0x5B0]
	0x03358158 BL 0x1C16D08
	0x0335815C BL 0x1C16F10
	0x03358160 MOV X19, X0
	0x03358164 ADRP X0, 0xDC6000
	0x03358168 LDR X0, [X0 + 0xC40]
	0x0335816C BL 0x1C16D08
	0x03358170 MOV X1, X0
	0x03358174 MOV X0, X19
	0x03358178 MOV X2, X31
	0x0335817C BL 0x337DF1C
	0x03358180 ADRP X0, 0xDD2000
	0x03358184 LDR X0, [X0 + 0x5C0]
	0x03358188 BL 0x1C16D08
	0x0335818C MOV X1, X0
	0x03358190 MOV X0, X19
	0x03358194 BL 0x1C16DEC
	0x03358198 STP X30, X19, [X31 - 0x10]!
	0x0335819C LDR X8, [X0 + 0x10]
	0x033581A0 CBZ X8, 0x33581C4
	0x033581A4 LDR W9, [X0 + 0x1C]
	0x033581A8 LDR W8, [X8 + 0x1C]
	0x033581AC CMP W9, W8
	0x033581B0 B.NE 0x33581C8
	0x033581B4 MOVN W8, 0x0
	0x033581B8 STR W8, [X0 + 0x18]
	0x033581BC LDP X30, X19, [X31], #0x10
	0x033581C0 RET
	0x033581C4 BL 0x1C16F20
	0x033581C8 ADRP X0, 0xD9B000
	0x033581CC LDR X0, [X0 + 0x5B0]
	0x033581D0 BL 0x1C16D08
	0x033581D4 BL 0x1C16F10
	0x033581D8 MOV X19, X0
	0x033581DC ADRP X0, 0xDC5000
	0x033581E0 LDR X0, [X0 + 0x288]
	0x033581E4 BL 0x1C16D08
	0x033581E8 MOV X1, X0
	0x033581EC MOV X0, X19
	0x033581F0 MOV X2, X31
	0x033581F4 BL 0x337DF1C
	0x033581F8 ADRP X0, 0xDD2000
	0x033581FC LDR X0, [X0 + 0x5C8]
	0x03358200 BL 0x1C16D08
	0x03358204 MOV X1, X0
	0x03358208 MOV X0, X19
	0x0335820C BL 0x1C16DEC
	0x03358210 STP X30, X21, [X31 - 0x20]!
	0x03358214 STP X20, X19, [X31 + 0x10]
	0x03358218 ADRP X21, 0x1084000
	0x0335821C LDRB W8, [X21 + 0xDF6]
	0x03358220 MOV W20, W1
	0x03358224 MOV X19, X0
	0x03358228 TBNZ X8, 0x0, 0x335824C
	0x0335822C ADRP X0, 0xD9B000
	0x03358230 LDR X0, [X0 + 0x9C8]
	0x03358234 BL 0x1C16CF4
	0x03358238 ADRP X0, 0xD9B000
	0x0335823C LDR X0, [X0 + 0x9D0]
	0x03358240 BL 0x1C16CF4
	0x03358244 MOVZ W8, 0x1
	0x03358248 STRB W8, [X21 + 0xDF6]
	0x0335824C MOV X0, X19
	0x03358250 MOV X1, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+16]
	004 Compare X8, 0
	005 JumpIfEqual {54}
	006 Move W9, [X0+28]
	007 Move W10, [X8+28]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move W9, [X0+24]
	010 Add W31, W9, 1
	011 Add W31, W9, 2
	012 Move W9, [X8+24]
	013 Subtract W10, W9, 1
	014 Move [X0+24], W10
	015 Move TEMP, X10
	016 And TEMP, TEMP, -2147483648
	017 Compare TEMP, -2147483648
	018 JumpIfEqual {27}
	019 Move X8, [X8+16]
	020 Compare X8, 0
	021 JumpIfEqual {54}
	022 Move W11, [X8+24]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Add X8, X8, W10
	025 Move X8, [X8+32]
	026 Move [X0+32], X8
	027 Subtract W8, W31, W9
	028 Move W0, W8
	029 ShiftRight W0, 31
	030 And W0, W0, 0x7FFFFFFF
	031 Move W0, W31
	032 Subtract W10, W9, 1
	033 Subtract W9, W31, W9
	034 Move [X0+24], W10
	035 Move TEMP, X10
	036 And TEMP, TEMP, -2147483648
	037 Compare TEMP, -2147483648
	038 JumpIfEqual {47}
	039 Move X8, [X8+16]
	040 Compare X8, 0
	041 JumpIfEqual {54}
	042 Move W11, [X8+24]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Add X8, X8, W10
	045 Move X8, [X8+32]
	046 Move [X0+32], X8
	047 Move [X0+32], X31
	048 Move W0, W9
	049 ShiftRight W0, 31
	050 And W0, W0, 0x7FFFFFFF
	051 Move X30, [X31+16]
	052 Move X19, [X31+24]
	053 Return X0
	054 Call 0x1C17F20
	055 Move X0, 0xD9C000
	056 Move X0, [X0+1456]
	057 Call 0x1C17D08
	058 Call 0x1C17F10
	059 Move X19, X0
	060 Move X0, 0xDC6000
	061 Move X0, [X0+648]
	062 Call 0x1C17D08
	063 Move X1, X0
	064 Move X0, X19
	065 Move X2, X31
	066 Call InvalidOperationException..ctor, X0, X1
	067 Move X0, 0xDD3000
	068 Move X0, [X0+1368]
	069 Call 0x1C17D08
	070 Move X1, X0
	071 Move X0, X19
	072 Call 0x1C17DEC
	073 Call 0x1C17F28

Method: System.Object get_Current()

Disassembly:
	0x03358254 BL 0x33BDD8C
	0x03358258 TBNZ X20, 0x1F, 0x33582E4
	0x0335825C CBZ W20, 0x335827C
	0x03358260 ADRP X8, 0xD9B000
	0x03358264 LDR X8, [X8 + 0x9D0]
	0x03358268 MOV W1, W20
	0x0335826C LDR X0, [X8]
	0x03358270 BL 0x1C16D6C
	0x03358274 STR X0, [X19 + 0x10]
	0x03358278 B 0x33582D8
	0x0335827C ADRP X8, 0xD9B000
	0x03358280 LDR X8, [X8 + 0x9C8]
	0x03358284 LDR X20, [X8]
	0x03358288 LDR X8, [X20 + 0x38]
	0x0335828C CBNZ X8, 0x335829C
	0x03358290 MOV X0, X20
	0x03358294 BL 0x1C5C6E0
	0x03358298 LDR X8, [X20 + 0x38]
	0x0335829C LDR X0, [X8 + 0x10]
	0x033582A0 LDRB W8, [X0 + 0x135]
	0x033582A4 TBNZ X8, 0x0, 0x33582AC
	0x033582A8 BL 0x1C5C684
	0x033582AC LDR W8, [X0 + 0xE0]
	0x033582B0 CBNZ W8, 0x33582B8
	0x033582B4 BL 0x1C16DFC
	0x033582B8 LDR X8, [X20 + 0x38]
	0x033582BC LDR X0, [X8 + 0x10]
	0x033582C0 LDRB W8, [X0 + 0x135]
	0x033582C4 TBNZ X8, 0x0, 0x33582CC
	0x033582C8 BL 0x1C5C684
	0x033582CC LDR X8, [X0 + 0xB8]
	0x033582D0 LDR X8, [X8]
	0x033582D4 STR X8, [X19 + 0x10]
	0x033582D8 LDP X20, X19, [X31 + 0x10]
	0x033582DC LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+24]
	004 Add W31, W8, 1
	005 Add W31, W8, 2
	006 Move X0, [X0+32]
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return X0
	010 Move X0, 0xD9C000
	011 Move X0, [X0+1456]
	012 Call 0x1C17D08
	013 Call 0x1C17F10
	014 Move X19, X0
	015 Move X0, 0xDC7000
	016 Move X0, [X0+3136]
	017 Move X0, 0xD9C000
	018 Move X0, [X0+1456]
	019 Call 0x1C17D08
	020 Call 0x1C17F10
	021 Move X19, X0
	022 Move X0, 0xDC7000
	023 Move X0, [X0+3144]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X19
	027 Move X2, X31
	028 Call InvalidOperationException..ctor, X0, X1
	029 Move X0, 0xDD3000
	030 Move X0, [X0+1376]
	031 Call 0x1C17D08
	032 Move X1, X0
	033 Move X0, X19
	034 Call 0x1C17DEC

Method: System.Void Reset()

Disassembly:
	0x033582E0 RET
	0x033582E4 ADRP X0, 0xDCA000
	0x033582E8 LDR X0, [X0 + 0x478]
	0x033582EC BL 0x1C16D08
	0x033582F0 ADRP X20, 0xDC5000
	0x033582F4 LDR X20, [X20 + 0x58]
	0x033582F8 MOV X19, X0
	0x033582FC MOV X0, X20
	0x03358300 BL 0x1C16D08
	0x03358304 MOV X1, X0
	0x03358308 MOV X0, X19
	0x0335830C MOV X2, X31
	0x03358310 BL 0x32094D4
	0x03358314 MOV X19, X0
	0x03358318 ADRP X0, 0xDA3000
	0x0335831C LDR X0, [X0 + 0x760]
	0x03358320 BL 0x1C16D08
	0x03358324 BL 0x1C16F10
	0x03358328 MOV X21, X0
	0x0335832C MOV X0, X20
	0x03358330 BL 0x1C16D08
	0x03358334 MOV X1, X0
	0x03358338 MOV X0, X21
	0x0335833C MOV X2, X19
	0x03358340 MOV X3, X31
	0x03358344 BL 0x3311888
	0x03358348 ADRP X0, 0xDD2000
	0x0335834C LDR X0, [X0 + 0x5D0]
	0x03358350 BL 0x1C16D08
	0x03358354 MOV X1, X0
	0x03358358 MOV X0, X21

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+16]
	004 Compare X8, 0
	005 JumpIfEqual {17}
	006 Move W9, [X0+28]
	007 Move W8, [X8+28]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move TEMP, 1
	010 Not TEMP
	011 Move W8, TEMP
	012 Move [X0+24], W8
	013 Move [X0+32], X31
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Return 
	017 Call 0x1C17F20
	018 Move X0, 0xD9C000
	019 Move X0, [X0+1456]
	020 Call 0x1C17D08
	021 Call 0x1C17F10
	022 Move X19, X0
	023 Move X0, 0xDC6000
	024 Move X0, [X0+648]
	025 Call 0x1C17D08
	026 Move X1, X0
	027 Move X0, X19
	028 Move X2, X31
	029 Call InvalidOperationException..ctor, X0, X1
	030 Move X0, 0xDD3000
	031 Move X0, [X0+1384]
	032 Call 0x1C17D08
	033 Move X1, X0
	034 Move X0, X19
	035 Call 0x1C17DEC

