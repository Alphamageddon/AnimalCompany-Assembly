Type: System.Collections.SortedList

Method: System.Void .ctor()

Disassembly:
	0x033548A4 LDR W8, [X20 + 0x24]
	0x033548A8 LDP X22, X21, [X31 + 0x10]
	0x033548AC ADD W8, W8, 0x1
	0x033548B0 STR W8, [X20 + 0x24]
	0x033548B4 LDP X20, X19, [X31 + 0x20]
	0x033548B8 LDR X30, [X31], #0x30
	0x033548BC RET

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call Object..ctor, X0
	006 Move X0, X19
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]

Method: System.Void Init()

Disassembly:
	0x033548C0 ORN W1, W31, W21, 0x0
	0x033548C4 MOV X0, X20
	0x033548C8 MOV X2, X22
	0x033548CC MOV X3, X19
	0x033548D0 LDP X20, X19, [X31 + 0x20]
	0x033548D4 LDP X22, X21, [X31 + 0x10]
	0x033548D8 LDR X30, [X31], #0x30
	0x033548DC B 0x3353C9C
	0x033548E0 ADRP X0, 0xDA4000
	0x033548E4 LDR X0, [X0 + 0x528]
	0x033548E8 BL 0x1C16D08
	0x033548EC BL 0x1C16F10
	0x033548F0 MOV X19, X0
	0x033548F4 ADRP X0, 0xDC9000
	0x033548F8 LDR X0, [X0 + 0x70]
	0x033548FC BL 0x1C16D08
	0x03354900 MOV X20, X0
	0x03354904 ADRP X0, 0xDD6000
	0x03354908 LDR X0, [X0 + 0x288]
	0x0335490C BL 0x1C16D08
	0x03354910 MOV X2, X0
	0x03354914 MOV X0, X19
	0x03354918 MOV X1, X20
	0x0335491C MOV X3, X31
	0x03354920 BL 0x3315F7C
	0x03354924 ADRP X0, 0xDD6000
	0x03354928 LDR X0, [X0 + 0x450]
	0x0335492C BL 0x1C16D08
	0x03354930 MOV X1, X0
	0x03354934 MOV X0, X19
	0x03354938 BL 0x1C16DEC
	0x0335493C BL 0x1C16F20
	0x03354940 BL 0x1C16F28
	0x03354944 BL 0x1C16F44
	0x03354948 MOV X1, X31
	0x0335494C BL 0x1C16DEC
	0x03354950 STR X30, [X31 - 0x20]!
	0x03354954 STP X20, X19, [X31 + 0x10]
	0x03354958 CBZ X1, 0x3354990
	0x0335495C LDR X8, [X0 + 0x10]
	0x03354960 LDR W2, [X0 + 0x20]
	0x03354964 LDR X4, [X0 + 0x28]
	0x03354968 MOV X3, X1
	0x0335496C MOV X0, X8
	0x03354970 MOV W1, W31
	0x03354974 MOV X5, X31
	0x03354978 BL 0x33A0778
	0x0335497C LDP X20, X19, [X31 + 0x10]
	0x03354980 CMP W0, 0x0
	0x03354984 CSINV W0, W0, W31, GE
	0x03354988 LDR X30, [X31], #0x20
	0x0335498C RET
	0x03354990 ADRP X0, 0xDA4000
	0x03354994 LDR X0, [X0 + 0x528]
	0x03354998 BL 0x1C16D08
	0x0335499C BL 0x1C16F10
	0x033549A0 MOV X19, X0
	0x033549A4 ADRP X0, 0xDC9000
	0x033549A8 LDR X0, [X0 + 0x70]
	0x033549AC BL 0x1C16D08
	0x033549B0 MOV X20, X0
	0x033549B4 ADRP X0, 0xDD6000
	0x033549B8 LDR X0, [X0 + 0x288]
	0x033549BC BL 0x1C16D08
	0x033549C0 MOV X2, X0
	0x033549C4 MOV X0, X19
	0x033549C8 MOV X1, X20
	0x033549CC MOV X3, X31
	0x033549D0 BL 0x3315F7C
	0x033549D4 ADRP X0, 0xDD6000
	0x033549D8 LDR X0, [X0 + 0x458]
	0x033549DC BL 0x1C16D08
	0x033549E0 MOV X1, X0
	0x033549E4 MOV X0, X19
	0x033549E8 BL 0x1C16DEC
	0x033549EC STR X30, [X31 - 0x30]!
	0x033549F0 STP X22, X21, [X31 + 0x10]
	0x033549F4 STP X20, X19, [X31 + 0x20]
	0x033549F8 ADRP X22, 0x1088000
	0x033549FC ADRP X21, 0xDD6000
	0x03354A00 LDRB W8, [X22 + 0xDE0]
	0x03354A04 LDR X21, [X21 + 0x460]
	0x03354A08 MOV X19, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1089000
	006 Move X21, 0xDA0000
	007 Move W8, [X20+3542]
	008 Move X21, [X21+2504]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xDA0000
	015 Move X0, [X0+2504]
	016 Call 0x1C17CF4
	017 Move X0, 0xDC9000
	018 Move X0, [X0+3376]
	019 Call 0x1C17CF4
	020 Move X0, 0xDA2000
	021 Move X0, [X0+3144]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+3542], W8
	025 Move X20, [X21]
	026 Move X8, [X20+56]
	027 Compare X8, 0
	028 JumpIfNotEqual {32}
	029 Move X0, X20
	030 Call 0x1C5D6E0
	031 Move X8, [X20+56]
	032 Move X0, [X8+16]
	033 Move W8, [X0+309]
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {39}
	038 Call 0x1C5D684
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X8, [X20+56]
	044 Move X0, [X8+16]
	045 Move W8, [X0+309]
	046 Move TEMP, X8
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {51}
	050 Call 0x1C5D684
	051 Move X8, [X0+184]
	052 Move X8, [X8]
	053 Move [X19+16], X8
	054 Move X20, [X21]
	055 Move X8, [X20+56]
	056 Compare X8, 0
	057 JumpIfNotEqual {61}
	058 Move X0, X20
	059 Call 0x1C5D6E0
	060 Move X8, [X20+56]
	061 Move X0, [X8+16]
	062 Move W8, [X0+309]
	063 Move TEMP, X8
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfEqual {68}
	067 Call 0x1C5D684
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move X8, [X20+56]
	073 Move X20, 0xDA2000
	074 Move X0, [X8+16]
	075 Move W8, [X0+309]
	076 Move X20, [X20+3144]
	077 Move TEMP, X8
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfEqual {82}
	081 Call 0x1C5D684
	082 Move X8, [X0+184]
	083 Move X8, [X8]
	084 Move [X19+32], W31
	085 Move [X19+24], X8
	086 Move X0, [X20]
	087 Move X20, 0xDC9000
	088 Move W8, [X0+224]
	089 Move X20, [X20+3376]
	090 Compare W8, 0
	091 JumpIfNotEqual {93}
	092 Call 0x1C17DFC
	093 Move X0, X31
	094 Call CultureInfo.get_CurrentCulture
	095 Move X8, [X20]
	096 Move X20, X0
	097 Move X0, X8
	098 Call 0x1C17F10
	099 Move X1, X20
	100 Move X21, X0
	101 Call Comparer..ctor, X0, X1
	102 Move [X19+40], X21
	103 Move X20, [X31+16]
	104 Move X19, [X31+24]
	105 Move X30, [X31+32]
	106 Move X21, [X31+40]
	107 Return 

Method: System.Void .ctor(System.Int32 initialCapacity)

Disassembly:
	0x03354A0C MOV X20, X0
	0x03354A10 TBNZ X8, 0x0, 0x3354A28
	0x03354A14 ADRP X0, 0xDD6000
	0x03354A18 LDR X0, [X0 + 0x460]
	0x03354A1C BL 0x1C16CF4
	0x03354A20 MOVZ W8, 0x1
	0x03354A24 STRB W8, [X22 + 0xDE0]
	0x03354A28 LDR X0, [X20 + 0x18]
	0x03354A2C LDR W3, [X20 + 0x20]
	0x03354A30 LDR X4, [X21]
	0x03354A34 MOV X1, X19
	0x03354A38 LDP X20, X19, [X31 + 0x20]
	0x03354A3C LDP X22, X21, [X31 + 0x10]
	0x03354A40 MOV W2, W31
	0x03354A44 LDR X30, [X31], #0x30
	0x03354A48 B 0x22EEBA4
	0x03354A4C STP X30, X21, [X31 - 0x20]!
	0x03354A50 STP X20, X19, [X31 + 0x10]
	0x03354A54 TBNZ X1, 0x1F, 0x3354B20
	0x03354A58 LDR X8, [X0]
	0x03354A5C MOV W20, W1
	0x03354A60 MOV X19, X0
	0x03354A64 LDR X9, [X8 + 0x278]
	0x03354A68 LDR X1, [X8 + 0x280]
	0x03354A6C BLR X9
	0x03354A70 CMP W0, W20
	0x03354A74 B.LE 0x3354B20
	0x03354A78 LDR W8, [X19 + 0x20]
	0x03354A7C SUB W8, W8, 0x1
	0x03354A80 SUBS W4, W8, W20
	0x03354A84 STR W8, [X19 + 0x20]
	0x03354A88 B.LE 0x3354ACC
	0x03354A8C LDR X0, [X19 + 0x10]
	0x03354A90 ADD W21, W20, 0x1
	0x03354A94 MOV W1, W21
	0x03354A98 MOV W3, W20
	0x03354A9C MOV X2, X0
	0x03354AA0 MOV X5, X31
	0x03354AA4 BL 0x339FCE8
	0x03354AA8 LDR W8, [X19 + 0x20]
	0x03354AAC LDR X0, [X19 + 0x18]
	0x03354AB0 MOV W1, W21
	0x03354AB4 MOV W3, W20
	0x03354AB8 SUB W4, W8, W20
	0x03354ABC MOV X2, X0
	0x03354AC0 MOV X5, X31
	0x03354AC4 BL 0x339FCE8
	0x03354AC8 LDR W8, [X19 + 0x20]
	0x03354ACC LDR X10, [X19 + 0x10]
	0x03354AD0 CBZ X10, 0x3354B7C
	0x03354AD4 LDR W9, [X10 + 0x18]
	0x03354AD8 CMP W8, W9
	0x03354ADC B.CS 0x3354B80
	0x03354AE0 SXTW X9, W8
	0x03354AE4 ADD X10, X10, X9, 0x3, LSL
	0x03354AE8 STR X31, [X10 + 0x20]
	0x03354AEC LDR X10, [X19 + 0x18]
	0x03354AF0 CBZ X10, 0x3354B7C
	0x03354AF4 LDR W11, [X10 + 0x18]
	0x03354AF8 CMP W8, W11
	0x03354AFC B.CS 0x3354B80
	0x03354B00 ADD X8, X10, X9, 0x3, LSL
	0x03354B04 STR X31, [X8 + 0x20]
	0x03354B08 LDR W8, [X19 + 0x24]
	0x03354B0C ADD W8, W8, 0x1
	0x03354B10 STR W8, [X19 + 0x24]
	0x03354B14 LDP X20, X19, [X31 + 0x10]
	0x03354B18 LDP X30, X21, [X31], #0x20
	0x03354B1C RET
	0x03354B20 ADRP X0, 0xDA7000
	0x03354B24 LDR X0, [X0 + 0x760]
	0x03354B28 BL 0x1C16D08
	0x03354B2C BL 0x1C16F10
	0x03354B30 MOV X19, X0
	0x03354B34 ADRP X0, 0xDAA000
	0x03354B38 LDR X0, [X0 + 0x130]
	0x03354B3C BL 0x1C16D08
	0x03354B40 MOV X20, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x1089000
	008 Move W8, [X21+3543]
	009 Move W20, W1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0xDC9000
	016 Move X0, [X0+3376]
	017 Call 0x1C17CF4
	018 Move X0, 0xDA2000
	019 Move X0, [X0+3144]
	020 Call 0x1C17CF4
	021 Move X0, 0xDA0000
	022 Move X0, [X0+2512]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+3543], W8
	026 Move X0, X19
	027 Move X1, X31
	028 Call Object..ctor, X0
	029 Move TEMP, X20
	030 And TEMP, TEMP, -2147483648
	031 Compare TEMP, -2147483648
	032 JumpIfEqual {69}
	033 Move X22, 0xDA0000
	034 Move X22, [X22+2512]
	035 Move X23, 0xDA2000
	036 Move X21, 0xDC9000
	037 Move W1, W20
	038 Move X0, [X22]
	039 Move X23, [X23+3144]
	040 Move X21, [X21+3376]
	041 Call 0x1C17D6C
	042 Move [X19+16], X0
	043 Move X0, [X22]
	044 Move W1, W20
	045 Call 0x1C17D6C
	046 Move [X19+24], X0
	047 Move X0, [X23]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X0, X31
	053 Call CultureInfo.get_CurrentCulture
	054 Move X8, [X21]
	055 Move X20, X0
	056 Move X0, X8
	057 Call 0x1C17F10
	058 Move X1, X20
	059 Move X21, X0
	060 Call Comparer..ctor, X0, X1
	061 Move [X19+40], X21
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Move X23, [X31+56]
	068 Return 
	069 Move X0, 0xDA8000
	070 Move X0, [X0+1888]
	071 Call 0x1C17D08
	072 Call 0x1C17F10
	073 Move X19, X0
	074 Move X0, 0xDD7000
	075 Move X0, [X0+1016]
	076 Call 0x1C17D08
	077 Move X20, X0
	078 Move X0, 0xDC8000
	079 Move X0, [X0+1648]
	080 Call 0x1C17D08
	081 Move X2, X0
	082 Move X0, X19
	083 Move X1, X20
	084 Move X3, X31
	085 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	086 Move X0, 0xDD7000
	087 Move X0, [X0+1024]
	088 Call 0x1C17D08
	089 Move X1, X0
	090 Move X0, X19
	091 Call 0x1C17DEC

Method: System.Void .ctor(System.Collections.IComparer comparer)

Disassembly:
	0x03354B44 ADRP X0, 0xDC7000
	0x03354B48 LDR X0, [X0 + 0x660]
	0x03354B4C BL 0x1C16D08
	0x03354B50 MOV X2, X0
	0x03354B54 MOV X0, X19
	0x03354B58 MOV X1, X20
	0x03354B5C MOV X3, X31
	0x03354B60 BL 0x3311888
	0x03354B64 ADRP X0, 0xDD6000
	0x03354B68 LDR X0, [X0 + 0x468]
	0x03354B6C BL 0x1C16D08
	0x03354B70 MOV X1, X0
	0x03354B74 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move X0, X20
	009 Call SortedList.Init, X0
	010 Compare X19, 0
	011 JumpIfEqual {13}
	012 Move [X20+40], X19
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move X30, [X31+32]
	016 Return 

Method: System.Void Add(System.Object key, System.Object value)

Disassembly:
	0x03354B78 BL 0x1C16DEC
	0x03354B7C BL 0x1C16F20
	0x03354B80 BL 0x1C16F28
	0x03354B84 STP X30, X19, [X31 - 0x10]!
	0x03354B88 LDR X8, [X0]
	0x03354B8C MOV X19, X0
	0x03354B90 LDR X9, [X8 + 0x378]
	0x03354B94 LDR X2, [X8 + 0x380]
	0x03354B98 BLR X9
	0x03354B9C TBNZ X0, 0x1F, 0x3354BBC
	0x03354BA0 LDR X8, [X19]
	0x03354BA4 MOV W1, W0
	0x03354BA8 MOV X0, X19
	0x03354BAC LDR X3, [X8 + 0x398]
	0x03354BB0 LDR X2, [X8 + 0x3A0]
	0x03354BB4 LDP X30, X19, [X31], #0x10
	0x03354BB8 BR X3
	0x03354BBC LDP X30, X19, [X31], #0x10
	0x03354BC0 RET
	0x03354BC4 STR X30, [X31 - 0x20]!
	0x03354BC8 STP X20, X19, [X31 + 0x10]
	0x03354BCC ADRP X20, 0x1088000
	0x03354BD0 LDRB W8, [X20 + 0xDE1]
	0x03354BD4 MOV X19, X0
	0x03354BD8 TBNZ X8, 0x0, 0x3354BF0
	0x03354BDC ADRP X0, 0xDD6000
	0x03354BE0 LDR X0, [X0 + 0x470]
	0x03354BE4 BL 0x1C16CF4
	0x03354BE8 MOVZ W8, 0x1
	0x03354BEC STRB W8, [X20 + 0xDE1]
	0x03354BF0 CBZ X19, 0x3354C20
	0x03354BF4 ADRP X8, 0xDD6000
	0x03354BF8 LDR X8, [X8 + 0x470]
	0x03354BFC LDR X0, [X8]
	0x03354C00 BL 0x1C16F10
	0x03354C04 MOV X1, X19
	0x03354C08 MOV X20, X0
	0x03354C0C BL 0x3354C68
	0x03354C10 MOV X0, X20
	0x03354C14 LDP X20, X19, [X31 + 0x10]
	0x03354C18 LDR X30, [X31], #0x20
	0x03354C1C RET
	0x03354C20 ADRP X0, 0xDA4000
	0x03354C24 LDR X0, [X0 + 0x528]
	0x03354C28 BL 0x1C16D08
	0x03354C2C BL 0x1C16F10
	0x03354C30 MOV X19, X0
	0x03354C34 ADRP X0, 0xDC8000
	0x03354C38 LDR X0, [X0 + 0x1C0]
	0x03354C3C BL 0x1C16D08
	0x03354C40 MOV X1, X0
	0x03354C44 MOV X0, X19
	0x03354C48 MOV X2, X31
	0x03354C4C BL 0x330E100
	0x03354C50 ADRP X0, 0xDD6000
	0x03354C54 LDR X0, [X0 + 0x478]
	0x03354C58 BL 0x1C16D08
	0x03354C5C MOV X1, X0
	0x03354C60 MOV X0, X19
	0x03354C64 BL 0x1C16DEC
	0x03354C68 STR X30, [X31 - 0x20]!
	0x03354C6C STP X20, X19, [X31 + 0x10]
	0x03354C70 MOV X20, X1
	0x03354C74 MOV X1, X31
	0x03354C78 MOV X19, X0
	0x03354C7C BL 0x33BDD8C
	0x03354C80 MOV X0, X19
	0x03354C84 BL 0x33538C0
	0x03354C88 STR X20, [X19 + 0x48]
	0x03354C8C CBZ X20, 0x3354CB4
	0x03354C90 LDR X8, [X20]
	0x03354C94 MOV X0, X20
	0x03354C98 LDR X9, [X8 + 0x2B8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X1, 0
	006 JumpIfEqual {30}
	007 Move X20, X0
	008 Move X21, X2
	009 Move X0, [X0+16]
	010 Move W2, [X20+32]
	011 Move X4, [X20+40]
	012 Move X19, X1
	013 Move W1, W31
	014 Move X3, X19
	015 Move X5, X31
	016 Call Array.BinarySearch, X0, X1, X2, X3, X4
	017 Move W1, W0
	018 Move TEMP, X0
	019 And TEMP, TEMP, -2147483648
	020 Compare TEMP, -2147483648
	021 JumpIfNotEqual {53}
	022 Move X0, X20
	023 Move X2, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 NotImplemented "Instruction ORN not yet implemented."
	027 Move X3, X21
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Move X0, 0xDA5000
	031 Move X0, [X0+1320]
	032 Call 0x1C17D08
	033 Call 0x1C17F10
	034 Move X19, X0
	035 Move X0, 0xDCA000
	036 Move X0, [X0+112]
	037 Call 0x1C17D08
	038 Move X20, X0
	039 Move X0, 0xDD7000
	040 Move X0, [X0+648]
	041 Call 0x1C17D08
	042 Move X2, X0
	043 Move X0, X19
	044 Move X1, X20
	045 Move X3, X31
	046 Call ArgumentNullException..ctor, X0, X1, X2
	047 Move X0, 0xDD7000
	048 Move X0, [X0+1032]
	049 Call 0x1C17D08
	050 Move X1, X0
	051 Move X0, X19
	052 Call 0x1C17DEC
	053 Move X8, [X20]
	054 Move X0, X20
	055 Move X9, [X8+808]
	056 Move X2, [X8+816]
	057 NotImplemented "Instruction BLR not yet implemented."
	058 Move X20, X0
	059 Move X0, 0xDD7000
	060 Move X0, [X0+688]
	061 Call 0x1C17D08
	062 Move X1, X20
	063 Move X2, X19
	064 Move X3, X31
	065 Call SR.Format, X0, X1, X2
	066 Move X19, X0
	067 Move X0, 0xDA8000
	068 Move X0, [X0+1400]
	069 Call 0x1C17D08
	070 Call 0x1C17F10
	071 Move X1, X19
	072 Move X2, X31
	073 Move X20, X0
	074 Call ArgumentException..ctor, X0, X1
	075 Move X0, 0xDD7000
	076 Move X0, [X0+1032]
	077 Call 0x1C17D08
	078 Move X1, X0
	079 Move X0, X20
	080 Call 0x1C17DEC

Method: System.Void set_Capacity(System.Int32 value)

Disassembly:
	0x03354DCC MOV X0, X19
	0x03354DD0 MOV X2, X31
	0x03354DD4 BL 0x33DE64C
	0x03354DD8 LDR X0, [X21 + 0x48]
	0x03354DDC CBZ X0, 0x3354E30
	0x03354DE0 LDR X8, [X0]
	0x03354DE4 LDR X9, [X8 + 0x358]
	0x03354DE8 LDR X2, [X8 + 0x360]
	0x03354DEC MOV X1, X20
	0x03354DF0 BLR X9
	0x03354DF4 MOV X21, X0
	0x03354DF8 MOV X20, X31
	0x03354DFC LDRB W8, [X31 + 0xC]
	0x03354E00 CBZ W8, 0x3354E10
	0x03354E04 MOV X0, X19
	0x03354E08 MOV X1, X31
	0x03354E0C BL 0x33E14E4
	0x03354E10 CBNZ X20, 0x3354E28
	0x03354E14 MOV X0, X21
	0x03354E18 LDP X20, X19, [X31 + 0x20]
	0x03354E1C LDP X30, X21, [X31 + 0x10]
	0x03354E20 ADD X31, X31, 0x30
	0x03354E24 RET
	0x03354E28 MOV X0, X20
	0x03354E2C BL 0x1C16F18
	0x03354E30 BL 0x1C16F20
	0x03354E34 B 0x3354E3C
	0x03354E38 B 0x3354E3C
	0x03354E3C MOV X21, X0
	0x03354E40 CMP W1, 0x1
	0x03354E44 B.NE 0x3354E60
	0x03354E48 MOV X0, X21
	0x03354E4C BL 0x3EB1AD0
	0x03354E50 LDR X20, [X0]
	0x03354E54 BL 0x3EB1AE0
	0x03354E58 MOV X21, X31
	0x03354E5C B 0x3354DFC
	0x03354E60 MOV X20, X31
	0x03354E64 B 0x3354E6C
	0x03354E68 MOV X21, X0
	0x03354E6C LDRB W8, [X31 + 0xC]
	0x03354E70 CBZ W8, 0x3354E80
	0x03354E74 MOV X0, X19
	0x03354E78 MOV X1, X31
	0x03354E7C BL 0x33E14E4
	0x03354E80 CBNZ X20, 0x3354E8C
	0x03354E84 MOV X0, X21
	0x03354E88 BL 0x1D2C690
	0x03354E8C MOV X0, X20
	0x03354E90 BL 0x1C16F18
	0x03354E94 BL 0x1990590
	0x03354E98 STR X30, [X31 - 0x30]!
	0x03354E9C STP X22, X21, [X31 + 0x10]
	0x03354EA0 STP X20, X19, [X31 + 0x20]
	0x03354EA4 LDR X19, [X0 + 0x50]
	0x03354EA8 MOV X20, X2
	0x03354EAC MOV X21, X1
	0x03354EB0 MOV X22, X0
	0x03354EB4 STRB W31, [X31 + 0xC]
	0x03354EB8 ADD X1, X31, 0xC
	0x03354EBC MOV X0, X19
	0x03354EC0 MOV X2, X31
	0x03354EC4 BL 0x33DE64C
	0x03354EC8 LDR X0, [X22 + 0x48]
	0x03354ECC CBZ X0, 0x3354F1C
	0x03354ED0 LDR X8, [X0]
	0x03354ED4 LDR X9, [X8 + 0x368]
	0x03354ED8 LDR X3, [X8 + 0x370]
	0x03354EDC MOV X1, X21
	0x03354EE0 MOV X2, X20
	0x03354EE4 BLR X9
	0x03354EE8 MOV X20, X31
	0x03354EEC LDRB W8, [X31 + 0xC]
	0x03354EF0 CBZ W8, 0x3354F00
	0x03354EF4 MOV X0, X19
	0x03354EF8 MOV X1, X31
	0x03354EFC BL 0x33E14E4
	0x03354F00 CBNZ X20, 0x3354F14
	0x03354F04 LDP X20, X19, [X31 + 0x20]
	0x03354F08 LDP X22, X21, [X31 + 0x10]
	0x03354F0C LDR X30, [X31], #0x30
	0x03354F10 RET
	0x03354F14 MOV X0, X20
	0x03354F18 BL 0x1C16F18
	0x03354F1C BL 0x1C16F20
	0x03354F20 B 0x3354F24
	0x03354F24 MOV X21, X0
	0x03354F28 CMP W1, 0x1
	0x03354F2C B.NE 0x3354F44
	0x03354F30 MOV X0, X21
	0x03354F34 BL 0x3EB1AD0
	0x03354F38 LDR X20, [X0]
	0x03354F3C BL 0x3EB1AE0
	0x03354F40 B 0x3354EEC
	0x03354F44 MOV X20, X31
	0x03354F48 B 0x3354F50
	0x03354F4C MOV X21, X0
	0x03354F50 LDRB W8, [X31 + 0xC]
	0x03354F54 CBZ W8, 0x3354F64
	0x03354F58 MOV X0, X19
	0x03354F5C MOV X1, X31
	0x03354F60 BL 0x33E14E4
	0x03354F64 CBNZ X20, 0x3354F70
	0x03354F68 MOV X0, X21
	0x03354F6C BL 0x1D2C690
	0x03354F70 MOV X0, X20
	0x03354F74 BL 0x1C16F18
	0x03354F78 BL 0x1990590
	0x03354F7C STR X30, [X31 - 0x30]!
	0x03354F80 STP X22, X21, [X31 + 0x10]
	0x03354F84 STP X20, X19, [X31 + 0x20]
	0x03354F88 LDR X19, [X0 + 0x50]
	0x03354F8C MOV X20, X2
	0x03354F90 MOV X21, X1
	0x03354F94 MOV X22, X0
	0x03354F98 STRB W31, [X31 + 0xC]
	0x03354F9C ADD X1, X31, 0xC
	0x03354FA0 MOV X0, X19
	0x03354FA4 MOV X2, X31
	0x03354FA8 BL 0x33DE64C
	0x03354FAC LDR X0, [X22 + 0x48]
	0x03354FB0 CBZ X0, 0x3355000
	0x03354FB4 LDR X8, [X0]
	0x03354FB8 LDR X9, [X8 + 0x258]
	0x03354FBC LDR X3, [X8 + 0x260]
	0x03354FC0 MOV X1, X21
	0x03354FC4 MOV X2, X20
	0x03354FC8 BLR X9
	0x03354FCC MOV X20, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1089000
	006 Move W8, [X21+3544]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xDA0000
	014 Move X0, [X0+2504]
	015 Call 0x1C17CF4
	016 Move X0, 0xDA0000
	017 Move X0, [X0+2512]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3544], W8
	021 Move X8, [X19]
	022 Move X0, X19
	023 Move X9, [X8+632]
	024 Move X1, [X8+640]
	025 NotImplemented "Instruction BLR not yet implemented."
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X8, [X19+16]
	028 Compare X8, 0
	029 JumpIfEqual {149}
	030 Move W8, [X8+24]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X21, 0xDA0000
	034 Move X21, [X21+2512]
	035 Move W1, W20
	036 Move X0, [X21]
	037 Call 0x1C17D6C
	038 Move X8, [X21]
	039 Move X21, X0
	040 Move W1, W20
	041 Move X0, X8
	042 Call 0x1C17D6C
	043 Move W4, [X19+32]
	044 Move X20, X0
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X0, [X19+16]
	047 Move W1, W31
	048 Move X2, X21
	049 Move W3, W31
	050 Move X5, X31
	051 Call Array.Copy, X0, X1, X2, X3, X4
	052 Move X0, [X19+24]
	053 Move W4, [X19+32]
	054 Move W1, W31
	055 Move X2, X20
	056 Move W3, W31
	057 Move X5, X31
	058 Call Array.Copy, X0, X1, X2, X3, X4
	059 Move [X19+16], X21
	060 Move [X19+24], X20
	061 Move X21, 0xDA0000
	062 Move X21, [X21+2504]
	063 Move X20, [X21]
	064 Move X8, [X20+56]
	065 Compare X8, 0
	066 JumpIfNotEqual {70}
	067 Move X0, X20
	068 Call 0x1C5D6E0
	069 Move X8, [X20+56]
	070 Move X0, [X8+16]
	071 Move W8, [X0+309]
	072 Move TEMP, X8
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfEqual {77}
	076 Call 0x1C5D684
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Move X8, [X20+56]
	082 Move X0, [X8+16]
	083 Move W8, [X0+309]
	084 Move TEMP, X8
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfEqual {89}
	088 Call 0x1C5D684
	089 Move X8, [X0+184]
	090 Move X8, [X8]
	091 Move [X19+16], X8
	092 Move X20, [X21]
	093 Move X8, [X20+56]
	094 Compare X8, 0
	095 JumpIfNotEqual {99}
	096 Move X0, X20
	097 Call 0x1C5D6E0
	098 Move X8, [X20+56]
	099 Move X0, [X8+16]
	100 Move W8, [X0+309]
	101 Move TEMP, X8
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfEqual {106}
	105 Call 0x1C5D684
	106 Move W8, [X0+224]
	107 Compare W8, 0
	108 JumpIfNotEqual {110}
	109 Call 0x1C17DFC
	110 Move X8, [X20+56]
	111 Move X0, [X8+16]
	112 Move W8, [X0+309]
	113 Move TEMP, X8
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfEqual {118}
	117 Call 0x1C5D684
	118 Move X8, [X0+184]
	119 Move X8, [X8]
	120 Move [X19+24], X8
	121 Move X20, [X31+16]
	122 Move X19, [X31+24]
	123 Move X30, [X31+32]
	124 Move X21, [X31+40]
	125 Return 
	126 Move X0, 0xDA8000
	127 Move X0, [X0+1888]
	128 Call 0x1C17D08
	129 Call 0x1C17F10
	130 Move X19, X0
	131 Move X0, 0xDAA000
	132 Move X0, [X0+3784]
	133 Call 0x1C17D08
	134 Move X20, X0
	135 Move X0, 0xDCA000
	136 Move X0, [X0+672]
	137 Call 0x1C17D08
	138 Move X2, X0
	139 Move X0, X19
	140 Move X1, X20
	141 Move X3, X31
	142 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	143 Move X0, 0xDD7000
	144 Move X0, [X0+1040]
	145 Call 0x1C17D08
	146 Move X1, X0
	147 Move X0, X19
	148 Call 0x1C17DEC
	149 Call 0x1C17F20

Method: System.Int32 get_Count()

Disassembly:
	0x03354FD0 LDRB W8, [X31 + 0xC]
	0x03354FD4 CBZ W8, 0x3354FE4

ISIL:
	001 Move W0, [X0+32]
	002 Return X0

Method: System.Collections.ICollection get_Keys()

Disassembly:
	0x03354FD8 MOV X0, X19
	0x03354FDC MOV X1, X31
	0x03354FE0 BL 0x33E14E4
	0x03354FE4 CBNZ X20, 0x3354FF8

ISIL:
	001 Move X8, [X0]
	002 Move X2, [X8+824]
	003 Move X1, [X8+832]
	004 CallNoReturn X2

Method: System.Collections.ICollection get_Values()

Disassembly:
	0x03354FE8 LDP X20, X19, [X31 + 0x20]
	0x03354FEC LDP X22, X21, [X31 + 0x10]
	0x03354FF0 LDR X30, [X31], #0x30
	0x03354FF4 RET

ISIL:
	001 Move X8, [X0]
	002 Move X2, [X8+840]
	003 Move X1, [X8+848]
	004 CallNoReturn X2

Method: System.Boolean get_IsSynchronized()

Disassembly:
	0x03354FF8 MOV X0, X20
	0x03354FFC BL 0x1C16F18

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Object get_SyncRoot()

Disassembly:
	0x03355000 BL 0x1C16F20
	0x03355004 B 0x3355008
	0x03355008 MOV X21, X0
	0x0335500C CMP W1, 0x1
	0x03355010 B.NE 0x3355028
	0x03355014 MOV X0, X21
	0x03355018 BL 0x3EB1AD0
	0x0335501C LDR X20, [X0]
	0x03355020 BL 0x3EB1AE0
	0x03355024 B 0x3354FD0
	0x03355028 MOV X20, X31
	0x0335502C B 0x3355034
	0x03355030 MOV X21, X0
	0x03355034 LDRB W8, [X31 + 0xC]
	0x03355038 CBZ W8, 0x3355048
	0x0335503C MOV X0, X19
	0x03355040 MOV X1, X31
	0x03355044 BL 0x33E14E4
	0x03355048 CBNZ X20, 0x3355054
	0x0335504C MOV X0, X21
	0x03355050 BL 0x1D2C690
	0x03355054 MOV X0, X20
	0x03355058 BL 0x1C16F18
	0x0335505C BL 0x1990590
	0x03355060 SUB X31, X31, 0x30
	0x03355064 STP X30, X21, [X31 + 0x10]
	0x03355068 STP X20, X19, [X31 + 0x20]
	0x0335506C LDR X19, [X0 + 0x50]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1088000
	005 Move W8, [X20+3545]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xDA5000
	012 Move X0, [X0+3264]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3545], W8
	016 Add X19, X19, 64
	017 Move X0, [X19]
	018 Compare X0, 0
	019 JumpIfNotEqual {32}
	020 Move X8, 0xDA5000
	021 Move X8, [X8+3264]
	022 Move X0, [X8]
	023 Call 0x1C17F10
	024 Move X1, X31
	025 Move X20, X0
	026 Call Object..ctor, X0
	027 Move X0, X19
	028 Move X1, X20
	029 Move X2, X31
	030 Call 0x1C25138
	031 Move X0, [X19]
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0

Method: System.Object Clone()

Disassembly:
	0x03355070 MOV X20, X0
	0x03355074 STRB W31, [X31 + 0xC]
	0x03355078 ADD X1, X31, 0xC
	0x0335507C MOV X0, X19
	0x03355080 MOV X2, X31
	0x03355084 BL 0x33DE64C
	0x03355088 LDR X0, [X20 + 0x48]
	0x0335508C CBZ X0, 0x33550DC
	0x03355090 LDR X8, [X0]
	0x03355094 LDR X1, [X8 + 0x2D0]
	0x03355098 LDR X9, [X8 + 0x2C8]
	0x0335509C BLR X9
	0x033550A0 MOV X21, X0
	0x033550A4 MOV X20, X31
	0x033550A8 LDRB W8, [X31 + 0xC]
	0x033550AC CBZ W8, 0x33550BC
	0x033550B0 MOV X0, X19
	0x033550B4 MOV X1, X31
	0x033550B8 BL 0x33E14E4
	0x033550BC CBNZ X20, 0x33550D4
	0x033550C0 MOV X0, X21
	0x033550C4 LDP X20, X19, [X31 + 0x20]
	0x033550C8 LDP X30, X21, [X31 + 0x10]
	0x033550CC ADD X31, X31, 0x30
	0x033550D0 RET
	0x033550D4 MOV X0, X20
	0x033550D8 BL 0x1C16F18
	0x033550DC BL 0x1C16F20
	0x033550E0 B 0x33550E8
	0x033550E4 B 0x33550E8
	0x033550E8 MOV X21, X0
	0x033550EC CMP W1, 0x1
	0x033550F0 B.NE 0x335510C
	0x033550F4 MOV X0, X21
	0x033550F8 BL 0x3EB1AD0
	0x033550FC LDR X20, [X0]
	0x03355100 BL 0x3EB1AE0
	0x03355104 MOV X21, X31
	0x03355108 B 0x33550A8
	0x0335510C MOV X20, X31
	0x03355110 B 0x3355118
	0x03355114 MOV X21, X0
	0x03355118 LDRB W8, [X31 + 0xC]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1088000
	006 Move X20, 0xDD6000
	007 Move W8, [X21+3546]
	008 Move X20, [X20+1048]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDD6000
	015 Move X0, [X0+1048]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3546], W8
	019 Move X0, [X20]
	020 Move W21, [X19+32]
	021 Call 0x1C17F10
	022 Move W1, W21
	023 Move X20, X0
	024 Call SortedList..ctor, X0, X1
	025 Compare X20, 0
	026 JumpIfEqual {51}
	027 Move X0, [X19+16]
	028 Move X2, [X20+16]
	029 Move W4, [X19+32]
	030 Move W1, W31
	031 Move W3, W31
	032 Move X5, X31
	033 Call Array.Copy, X0, X1, X2, X3, X4
	034 Move X0, [X19+24]
	035 Move X2, [X20+24]
	036 Move W4, [X19+32]
	037 Move W1, W31
	038 Move W3, W31
	039 Move X5, X31
	040 Call Array.Copy, X0, X1, X2, X3, X4
	041 Move V0, [X19+32]
	042 Move X0, X20
	043 Move [X20+32], D0
	044 Move X8, [X19+40]
	045 Move [X20+40], X8
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Return X0
	051 Call 0x1C17F20

Method: System.Boolean Contains(System.Object key)

Disassembly:
	0x0335511C CBZ W8, 0x335512C
	0x03355120 MOV X0, X19
	0x03355124 MOV X1, X31
	0x03355128 BL 0x33E14E4
	0x0335512C CBNZ X20, 0x3355138
	0x03355130 MOV X0, X21
	0x03355134 BL 0x1D2C690
	0x03355138 MOV X0, X20
	0x0335513C BL 0x1C16F18

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Move X9, [X8+888]
	004 Move X2, [X8+896]
	005 NotImplemented "Instruction BLR not yet implemented."
	006 NotImplemented "Instruction ORN not yet implemented."
	007 Move W0, W8
	008 ShiftRight W0, 31
	009 And W0, W0, 0x7FFFFFFF
	010 Move X30, [X31+16]
	011 Return X0

Method: System.Boolean ContainsValue(System.Object value)

Disassembly:
	0x03355140 BL 0x1990590
	0x03355144 SUB X31, X31, 0x30
	0x03355148 STP X30, X21, [X31 + 0x10]
	0x0335514C STP X20, X19, [X31 + 0x20]
	0x03355150 LDR X19, [X0 + 0x50]
	0x03355154 MOV X20, X1
	0x03355158 MOV X21, X0
	0x0335515C STRB W31, [X31 + 0xC]
	0x03355160 ADD X1, X31, 0xC

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Move X9, [X8+904]
	004 Move X2, [X8+912]
	005 NotImplemented "Instruction BLR not yet implemented."
	006 NotImplemented "Instruction ORN not yet implemented."
	007 Move W0, W8
	008 ShiftRight W0, 31
	009 And W0, W0, 0x7FFFFFFF
	010 Move X30, [X31+16]
	011 Return X0

Method: System.Void CopyTo(System.Array array, System.Int32 arrayIndex)

Disassembly:
	0x03355164 MOV X0, X19
	0x03355168 MOV X2, X31
	0x0335516C BL 0x33DE64C
	0x03355170 LDR X0, [X21 + 0x48]
	0x03355174 CBZ X0, 0x33551C8
	0x03355178 LDR X8, [X0]
	0x0335517C LDR X9, [X8 + 0x2D8]
	0x03355180 LDR X2, [X8 + 0x2E0]
	0x03355184 MOV X1, X20
	0x03355188 BLR X9
	0x0335518C MOV W21, W0
	0x03355190 MOV X20, X31
	0x03355194 LDRB W8, [X31 + 0xC]
	0x03355198 CBZ W8, 0x33551A8
	0x0335519C MOV X0, X19
	0x033551A0 MOV X1, X31
	0x033551A4 BL 0x33E14E4
	0x033551A8 CBNZ X20, 0x33551C0
	0x033551AC AND W0, W21, 0x1
	0x033551B0 LDP X20, X19, [X31 + 0x20]
	0x033551B4 LDP X30, X21, [X31 + 0x10]
	0x033551B8 ADD X31, X31, 0x30
	0x033551BC RET
	0x033551C0 MOV X0, X20
	0x033551C4 BL 0x1C16F18
	0x033551C8 BL 0x1C16F20
	0x033551CC B 0x33551D4
	0x033551D0 B 0x33551D4
	0x033551D4 MOV X21, X0
	0x033551D8 CMP W1, 0x1
	0x033551DC B.NE 0x33551F8
	0x033551E0 MOV X0, X21
	0x033551E4 BL 0x3EB1AD0
	0x033551E8 LDR X20, [X0]
	0x033551EC BL 0x3EB1AE0
	0x033551F0 MOV W21, W31
	0x033551F4 B 0x3355194
	0x033551F8 MOV X20, X31
	0x033551FC B 0x3355204
	0x03355200 MOV X21, X0
	0x03355204 LDRB W8, [X31 + 0xC]
	0x03355208 CBZ W8, 0x3355218
	0x0335520C MOV X0, X19
	0x03355210 MOV X1, X31
	0x03355214 BL 0x33E14E4
	0x03355218 CBNZ X20, 0x3355224
	0x0335521C MOV X0, X21
	0x03355220 BL 0x1D2C690
	0x03355224 MOV X0, X20
	0x03355228 BL 0x1C16F18
	0x0335522C BL 0x1990590
	0x03355230 SUB X31, X31, 0x30
	0x03355234 STP X30, X21, [X31 + 0x10]
	0x03355238 STP X20, X19, [X31 + 0x20]
	0x0335523C LDR X19, [X0 + 0x50]
	0x03355240 MOV X20, X1
	0x03355244 MOV X21, X0
	0x03355248 STRB W31, [X31 + 0xC]
	0x0335524C ADD X1, X31, 0xC
	0x03355250 MOV X0, X19
	0x03355254 MOV X2, X31
	0x03355258 BL 0x33DE64C
	0x0335525C LDR X0, [X21 + 0x48]
	0x03355260 CBZ X0, 0x33552B4
	0x03355264 LDR X8, [X0]
	0x03355268 LDR X9, [X8 + 0x2E8]
	0x0335526C LDR X2, [X8 + 0x2F0]
	0x03355270 MOV X1, X20
	0x03355274 BLR X9
	0x03355278 MOV W21, W0
	0x0335527C MOV X20, X31
	0x03355280 LDRB W8, [X31 + 0xC]
	0x03355284 CBZ W8, 0x3355294
	0x03355288 MOV X0, X19
	0x0335528C MOV X1, X31
	0x03355290 BL 0x33E14E4
	0x03355294 CBNZ X20, 0x33552AC
	0x03355298 AND W0, W21, 0x1
	0x0335529C LDP X20, X19, [X31 + 0x20]
	0x033552A0 LDP X30, X21, [X31 + 0x10]
	0x033552A4 ADD X31, X31, 0x30
	0x033552A8 RET
	0x033552AC MOV X0, X20
	0x033552B0 BL 0x1C16F18
	0x033552B4 BL 0x1C16F20
	0x033552B8 B 0x33552C0
	0x033552BC B 0x33552C0
	0x033552C0 MOV X21, X0
	0x033552C4 CMP W1, 0x1
	0x033552C8 B.NE 0x33552E4
	0x033552CC MOV X0, X21
	0x033552D0 BL 0x3EB1AD0
	0x033552D4 LDR X20, [X0]
	0x033552D8 BL 0x3EB1AE0
	0x033552DC MOV W21, W31
	0x033552E0 B 0x3355280
	0x033552E4 MOV X20, X31
	0x033552E8 B 0x33552F0
	0x033552EC MOV X21, X0
	0x033552F0 LDRB W8, [X31 + 0xC]
	0x033552F4 CBZ W8, 0x3355304
	0x033552F8 MOV X0, X19
	0x033552FC MOV X1, X31
	0x03355300 BL 0x33E14E4
	0x03355304 CBNZ X20, 0x3355310
	0x03355308 MOV X0, X21
	0x0335530C BL 0x1D2C690
	0x03355310 MOV X0, X20
	0x03355314 BL 0x1C16F18
	0x03355318 BL 0x1990590
	0x0335531C STR X30, [X31 - 0x30]!
	0x03355320 STP X22, X21, [X31 + 0x10]
	0x03355324 STP X20, X19, [X31 + 0x20]
	0x03355328 LDR X19, [X0 + 0x50]
	0x0335532C MOV W20, W2
	0x03355330 MOV X21, X1
	0x03355334 MOV X22, X0
	0x03355338 STRB W31, [X31 + 0xC]
	0x0335533C ADD X1, X31, 0xC
	0x03355340 MOV X0, X19
	0x03355344 MOV X2, X31
	0x03355348 BL 0x33DE64C
	0x0335534C LDR X0, [X22 + 0x48]
	0x03355350 CBZ X0, 0x33553A0
	0x03355354 LDR X8, [X0]
	0x03355358 LDR X9, [X8 + 0x2F8]
	0x0335535C LDR X3, [X8 + 0x300]
	0x03355360 MOV X1, X21
	0x03355364 MOV W2, W20
	0x03355368 BLR X9
	0x0335536C MOV X20, X31
	0x03355370 LDRB W8, [X31 + 0xC]
	0x03355374 CBZ W8, 0x3355384
	0x03355378 MOV X0, X19
	0x0335537C MOV X1, X31
	0x03355380 BL 0x33E14E4
	0x03355384 CBNZ X20, 0x3355398
	0x03355388 LDP X20, X19, [X31 + 0x20]
	0x0335538C LDP X22, X21, [X31 + 0x10]
	0x03355390 LDR X30, [X31], #0x30
	0x03355394 RET
	0x03355398 MOV X0, X20
	0x0335539C BL 0x1C16F18
	0x033553A0 BL 0x1C16F20
	0x033553A4 B 0x33553A8
	0x033553A8 MOV X21, X0
	0x033553AC CMP W1, 0x1
	0x033553B0 B.NE 0x33553C8
	0x033553B4 MOV X0, X21
	0x033553B8 BL 0x3EB1AD0
	0x033553BC LDR X20, [X0]
	0x033553C0 BL 0x3EB1AE0
	0x033553C4 B 0x3355370
	0x033553C8 MOV X20, X31
	0x033553CC B 0x33553D4
	0x033553D0 MOV X21, X0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x1088000
	009 Move W8, [X22+3547]
	010 Move W21, W2
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xDA7000
	018 Move X0, [X0+3856]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+3547], W8
	022 Compare X19, 0
	023 JumpIfEqual {95}
	024 Move X0, X19
	025 Move X1, X31
	026 Call Array.get_Rank, X0
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move TEMP, X21
	029 And TEMP, TEMP, -2147483648
	030 Compare TEMP, -2147483648
	031 JumpIfEqual {129}
	032 Move X0, X19
	033 Move X1, X31
	034 Call Array.get_Length, X0
	035 Move X8, [X20]
	036 Move W22, W0
	037 Move X0, X20
	038 Move X9, [X8+632]
	039 Move X1, [X8+640]
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Subtract W8, W22, W21
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X8, [X20]
	044 Move X0, X20
	045 Move X9, [X8+632]
	046 Move X1, [X8+640]
	047 NotImplemented "Instruction BLR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X22, 0xDA7000
	050 Move X22, [X22+3856]
	051 Move W21, W21
	052 Move W23, 4
	053 Move X8, [X20+16]
	054 Compare X8, 0
	055 JumpIfEqual {93}
	056 Move W10, [X8+24]
	057 Subtract X9, X23, 4
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X10, [X20+24]
	060 Compare X10, 0
	061 JumpIfEqual {93}
	062 Move W11, [X10+24]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X8, [X8]
	065 Move X9, [X10]
	066 Move X0, [X22]
	067 Add X1, X31, 0
	068 Move [X31], X8
	069 Move [X31+8], X9
	070 Call 0x1C17E04
	071 Add W8, W21, W23
	072 Move X1, X0
	073 Subtract W2, W8, 4
	074 Move X0, X19
	075 Move X3, X31
	076 Call Array.SetValue, X0, X1, X2
	077 Move X8, [X20]
	078 Move X0, X20
	079 Move X9, [X8+632]
	080 Move X1, [X8+640]
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Subtract X8, X23, 3
	083 Add X23, X23, 1
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X20, [X31+48]
	086 Move X19, [X31+56]
	087 Move X22, [X31+32]
	088 Move X21, [X31+40]
	089 Move X30, [X31+16]
	090 Move X23, [X31+24]
	091 Add X31, X31, 64
	092 Return 
	093 Call 0x1C17F20
	094 Call 0x1C17F28
	095 Move X0, 0xDA4000
	096 Move X0, [X0+1320]
	097 Call 0x1C17D08
	098 Call 0x1C17F10
	099 Move X19, X0
	100 Move X0, 0xDC7000
	101 Move X0, [X0+1600]
	102 Call 0x1C17D08
	103 Move X20, X0
	104 Move X0, 0xDCE000
	105 Move X0, [X0+736]
	106 Call 0x1C17D08
	107 Move X2, X0
	108 Move X0, X19
	109 Move X1, X20
	110 Move X3, X31
	111 Call ArgumentNullException..ctor, X0, X1, X2
	112 Move X0, 0xDA7000
	113 Move X0, [X0+1400]
	114 Call 0x1C17D08
	115 Call 0x1C17F10
	116 Move X19, X0
	117 Move X0, 0xDC8000
	118 Move X0, [X0+776]
	119 Call 0x1C17D08
	120 Move X20, X0
	121 Move X0, 0xDC7000
	122 Move X0, [X0+1600]
	123 Call 0x1C17D08
	124 Move X2, X0
	125 Move X0, X19
	126 Move X1, X20
	127 Move X3, X31
	128 Call ArgumentException..ctor, X0, X1, X2
	129 Move X0, 0xDA7000
	130 Move X0, [X0+1888]
	131 Call 0x1C17D08
	132 Call 0x1C17F10
	133 Move X19, X0
	134 Move X0, 0xDC9000
	135 Move X0, [X0+688]
	136 Call 0x1C17D08
	137 Move X20, X0
	138 Move X0, 0xDC7000
	139 Move X0, [X0+1648]
	140 Call 0x1C17D08
	141 Move X2, X0
	142 Move X0, X19
	143 Move X1, X20
	144 Move X3, X31
	145 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	146 Move X0, 0xDA7000
	147 Move X0, [X0+1400]
	148 Call 0x1C17D08
	149 Call 0x1C17F10
	150 Move X19, X0
	151 Move X0, 0xDC8000
	152 Move X0, [X0+792]
	153 Call 0x1C17D08
	154 Move X1, X0
	155 Move X0, X19
	156 Move X2, X31
	157 Call ArgumentException..ctor, X0, X1
	158 Move X0, 0xDD6000
	159 Move X0, [X0+1056]
	160 Call 0x1C17D08
	161 Move X1, X0
	162 Move X0, X19
	163 Call 0x1C17DEC

Method: System.Void EnsureCapacity(System.Int32 min)

Disassembly:
	0x033553D4 LDRB W8, [X31 + 0xC]
	0x033553D8 CBZ W8, 0x33553E8
	0x033553DC MOV X0, X19
	0x033553E0 MOV X1, X31
	0x033553E4 BL 0x33E14E4
	0x033553E8 CBNZ X20, 0x33553F4
	0x033553EC MOV X0, X21
	0x033553F0 BL 0x1D2C690
	0x033553F4 MOV X0, X20
	0x033553F8 BL 0x1C16F18
	0x033553FC BL 0x1990590
	0x03355400 SUB X31, X31, 0x30
	0x03355404 STP X30, X21, [X31 + 0x10]
	0x03355408 STP X20, X19, [X31 + 0x20]
	0x0335540C LDR X19, [X0 + 0x50]
	0x03355410 MOV W20, W1
	0x03355414 MOV X21, X0
	0x03355418 STRB W31, [X31 + 0xC]
	0x0335541C ADD X1, X31, 0xC

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {24}
	005 Move X8, [X8+24]
	006 Move X10, [X0]
	007 Move TEMP, 0x80100000
	008 Not TEMP
	009 Move W9, TEMP
	010 Move W11, W8
	011 ShiftRight W11, 31
	012 And W11, W11, 0x3FFFFFFF
	013 NotImplemented "Instruction CMP not yet implemented."
	014 NotImplemented "Instruction CSEL not yet implemented."
	015 Move W11, 16
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move X3, [X10+616]
	018 Move X2, [X10+624]
	019 NotImplemented "Instruction CSEL not yet implemented."
	020 NotImplemented "Instruction CMP not yet implemented."
	021 NotImplemented "Instruction CSEL not yet implemented."
	022 Move X30, [X31+16]
	023 CallNoReturn X3
	024 Call 0x1C17F20

Method: System.Object GetByIndex(System.Int32 index)

Disassembly:
	0x03355420 MOV X0, X19
	0x03355424 MOV X2, X31
	0x03355428 BL 0x33DE64C
	0x0335542C LDR X0, [X21 + 0x48]
	0x03355430 CBZ X0, 0x3355484
	0x03355434 LDR X8, [X0]
	0x03355438 LDR X9, [X8 + 0x308]
	0x0335543C LDR X2, [X8 + 0x310]
	0x03355440 MOV W1, W20
	0x03355444 BLR X9
	0x03355448 MOV X21, X0
	0x0335544C MOV X20, X31
	0x03355450 LDRB W8, [X31 + 0xC]
	0x03355454 CBZ W8, 0x3355464
	0x03355458 MOV X0, X19
	0x0335545C MOV X1, X31
	0x03355460 BL 0x33E14E4
	0x03355464 CBNZ X20, 0x335547C
	0x03355468 MOV X0, X21
	0x0335546C LDP X20, X19, [X31 + 0x20]
	0x03355470 LDP X30, X21, [X31 + 0x10]
	0x03355474 ADD X31, X31, 0x30
	0x03355478 RET
	0x0335547C MOV X0, X20
	0x03355480 BL 0x1C16F18
	0x03355484 BL 0x1C16F20
	0x03355488 B 0x3355490
	0x0335548C B 0x3355490
	0x03355490 MOV X21, X0
	0x03355494 CMP W1, 0x1
	0x03355498 B.NE 0x33554B4
	0x0335549C MOV X0, X21
	0x033554A0 BL 0x3EB1AD0
	0x033554A4 LDR X20, [X0]
	0x033554A8 BL 0x3EB1AE0
	0x033554AC MOV X21, X31
	0x033554B0 B 0x3355450
	0x033554B4 MOV X20, X31
	0x033554B8 B 0x33554C0
	0x033554BC MOV X21, X0
	0x033554C0 LDRB W8, [X31 + 0xC]
	0x033554C4 CBZ W8, 0x33554D4
	0x033554C8 MOV X0, X19
	0x033554CC MOV X1, X31
	0x033554D0 BL 0x33E14E4
	0x033554D4 CBNZ X20, 0x33554E0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move TEMP, X1
	005 And TEMP, TEMP, -2147483648
	006 Compare TEMP, -2147483648
	007 JumpIfEqual {26}
	008 Move X8, [X0]
	009 Move W19, W1
	010 Move X20, X0
	011 Move X9, [X8+632]
	012 Move X1, [X8+640]
	013 NotImplemented "Instruction BLR not yet implemented."
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X8, [X20+24]
	016 Compare X8, 0
	017 JumpIfEqual {49}
	018 Move W9, [X8+24]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Add X8, X8, W19
	021 Move X0, [X8+32]
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Return X0
	026 Move X0, 0xDA7000
	027 Move X0, [X0+1888]
	028 Call 0x1C17D08
	029 Call 0x1C17F10
	030 Move X19, X0
	031 Move X0, 0xDAA000
	032 Move X0, [X0+304]
	033 Call 0x1C17D08
	034 Move X20, X0
	035 Move X0, 0xDC7000
	036 Move X0, [X0+1632]
	037 Call 0x1C17D08
	038 Move X2, X0
	039 Move X0, X19
	040 Move X1, X20
	041 Move X3, X31
	042 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	043 Move X0, 0xDD6000
	044 Move X0, [X0+1064]
	045 Call 0x1C17D08
	046 Move X1, X0
	047 Move X0, X19
	048 Call 0x1C17DEC
	049 Call 0x1C17F20
	050 Call 0x1C17F28

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x033554D8 MOV X0, X21
	0x033554DC BL 0x1D2C690
	0x033554E0 MOV X0, X20
	0x033554E4 BL 0x1C16F18
	0x033554E8 BL 0x1990590
	0x033554EC SUB X31, X31, 0x30
	0x033554F0 STP X30, X21, [X31 + 0x10]
	0x033554F4 STP X20, X19, [X31 + 0x20]
	0x033554F8 LDR X19, [X0 + 0x50]
	0x033554FC MOV X20, X0
	0x03355500 STRB W31, [X31 + 0xC]
	0x03355504 ADD X1, X31, 0xC
	0x03355508 MOV X0, X19
	0x0335550C MOV X2, X31
	0x03355510 BL 0x33DE64C
	0x03355514 LDR X0, [X20 + 0x48]
	0x03355518 CBZ X0, 0x3355568
	0x0335551C LDR X8, [X0]
	0x03355520 LDR X1, [X8 + 0x320]
	0x03355524 LDR X9, [X8 + 0x318]
	0x03355528 BLR X9
	0x0335552C MOV X21, X0
	0x03355530 MOV X20, X31
	0x03355534 LDRB W8, [X31 + 0xC]
	0x03355538 CBZ W8, 0x3355548
	0x0335553C MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1088000
	006 Move X21, 0xDD6000
	007 Move W8, [X20+3548]
	008 Move X21, [X21+1072]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDD6000
	015 Move X0, [X0+1072]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3548], W8
	019 Move X0, [X21]
	020 Move W20, [X19+32]
	021 Call 0x1C17F10
	022 Move W4, 3
	023 Move X1, X19
	024 Move W2, W31
	025 Move W3, W20
	026 Move X21, X0
	027 Call SortedListEnumerator..ctor, X0, X1, X2, X3, X4
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X0, X21
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return X0

Method: System.Collections.IDictionaryEnumerator GetEnumerator()

Disassembly:
	0x033555A0 MOV X21, X0
	0x033555A4 LDRB W8, [X31 + 0xC]
	0x033555A8 CBZ W8, 0x33555B8
	0x033555AC MOV X0, X19
	0x033555B0 MOV X1, X31
	0x033555B4 BL 0x33E14E4
	0x033555B8 CBNZ X20, 0x33555C4
	0x033555BC MOV X0, X21
	0x033555C0 BL 0x1D2C690
	0x033555C4 MOV X0, X20
	0x033555C8 BL 0x1C16F18
	0x033555CC BL 0x1990590
	0x033555D0 SUB X31, X31, 0x30
	0x033555D4 STP X30, X21, [X31 + 0x10]
	0x033555D8 STP X20, X19, [X31 + 0x20]
	0x033555DC LDR X19, [X0 + 0x50]
	0x033555E0 MOV W20, W1
	0x033555E4 MOV X21, X0
	0x033555E8 STRB W31, [X31 + 0xC]
	0x033555EC ADD X1, X31, 0xC
	0x033555F0 MOV X0, X19
	0x033555F4 MOV X2, X31
	0x033555F8 BL 0x33DE64C
	0x033555FC LDR X0, [X21 + 0x48]
	0x03355600 CBZ X0, 0x3355654
	0x03355604 LDR X8, [X0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1088000
	006 Move X21, 0xDD6000
	007 Move W8, [X20+3549]
	008 Move X21, [X21+1072]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDD6000
	015 Move X0, [X0+1072]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3549], W8
	019 Move X0, [X21]
	020 Move W20, [X19+32]
	021 Call 0x1C17F10
	022 Move W4, 3
	023 Move X1, X19
	024 Move W2, W31
	025 Move W3, W20
	026 Move X21, X0
	027 Call SortedListEnumerator..ctor, X0, X1, X2, X3, X4
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X0, X21
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return X0

Method: System.Object GetKey(System.Int32 index)

Disassembly:
	0x03355608 LDR X9, [X8 + 0x328]
	0x0335560C LDR X2, [X8 + 0x330]
	0x03355610 MOV W1, W20
	0x03355614 BLR X9
	0x03355618 MOV X21, X0
	0x0335561C MOV X20, X31
	0x03355620 LDRB W8, [X31 + 0xC]
	0x03355624 CBZ W8, 0x3355634
	0x03355628 MOV X0, X19
	0x0335562C MOV X1, X31
	0x03355630 BL 0x33E14E4
	0x03355634 CBNZ X20, 0x335564C
	0x03355638 MOV X0, X21
	0x0335563C LDP X20, X19, [X31 + 0x20]
	0x03355640 LDP X30, X21, [X31 + 0x10]
	0x03355644 ADD X31, X31, 0x30
	0x03355648 RET
	0x0335564C MOV X0, X20
	0x03355650 BL 0x1C16F18
	0x03355654 BL 0x1C16F20
	0x03355658 B 0x3355660
	0x0335565C B 0x3355660
	0x03355660 MOV X21, X0
	0x03355664 CMP W1, 0x1
	0x03355668 B.NE 0x3355684
	0x0335566C MOV X0, X21
	0x03355670 BL 0x3EB1AD0
	0x03355674 LDR X20, [X0]
	0x03355678 BL 0x3EB1AE0
	0x0335567C MOV X21, X31
	0x03355680 B 0x3355620
	0x03355684 MOV X20, X31
	0x03355688 B 0x3355690
	0x0335568C MOV X21, X0
	0x03355690 LDRB W8, [X31 + 0xC]
	0x03355694 CBZ W8, 0x33556A4
	0x03355698 MOV X0, X19
	0x0335569C MOV X1, X31
	0x033556A0 BL 0x33E14E4
	0x033556A4 CBNZ X20, 0x33556B0
	0x033556A8 MOV X0, X21
	0x033556AC BL 0x1D2C690
	0x033556B0 MOV X0, X20
	0x033556B4 BL 0x1C16F18
	0x033556B8 BL 0x1990590
	0x033556BC SUB X31, X31, 0x30

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move TEMP, X1
	005 And TEMP, TEMP, -2147483648
	006 Compare TEMP, -2147483648
	007 JumpIfEqual {26}
	008 Move X8, [X0]
	009 Move W19, W1
	010 Move X20, X0
	011 Move X9, [X8+632]
	012 Move X1, [X8+640]
	013 NotImplemented "Instruction BLR not yet implemented."
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X8, [X20+16]
	016 Compare X8, 0
	017 JumpIfEqual {49}
	018 Move W9, [X8+24]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Add X8, X8, W19
	021 Move X0, [X8+32]
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Return X0
	026 Move X0, 0xDA7000
	027 Move X0, [X0+1888]
	028 Call 0x1C17D08
	029 Call 0x1C17F10
	030 Move X19, X0
	031 Move X0, 0xDAA000
	032 Move X0, [X0+304]
	033 Call 0x1C17D08
	034 Move X20, X0
	035 Move X0, 0xDC7000
	036 Move X0, [X0+1632]
	037 Call 0x1C17D08
	038 Move X2, X0
	039 Move X0, X19
	040 Move X1, X20
	041 Move X3, X31
	042 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	043 Move X0, 0xDD6000
	044 Move X0, [X0+1080]
	045 Call 0x1C17D08
	046 Move X1, X0
	047 Move X0, X19
	048 Call 0x1C17DEC
	049 Call 0x1C17F20
	050 Call 0x1C17F28

Method: System.Collections.IList GetKeyList()

Disassembly:
	0x033556C0 STP X30, X21, [X31 + 0x10]
	0x033556C4 STP X20, X19, [X31 + 0x20]
	0x033556C8 LDR X19, [X0 + 0x50]
	0x033556CC MOV X20, X0
	0x033556D0 STRB W31, [X31 + 0xC]
	0x033556D4 ADD X1, X31, 0xC
	0x033556D8 MOV X0, X19
	0x033556DC MOV X2, X31
	0x033556E0 BL 0x33DE64C
	0x033556E4 LDR X0, [X20 + 0x48]
	0x033556E8 CBZ X0, 0x3355738
	0x033556EC LDR X8, [X0]
	0x033556F0 LDR X1, [X8 + 0x340]
	0x033556F4 LDR X9, [X8 + 0x338]
	0x033556F8 BLR X9
	0x033556FC MOV X21, X0
	0x03355700 MOV X20, X31
	0x03355704 LDRB W8, [X31 + 0xC]
	0x03355708 CBZ W8, 0x3355718
	0x0335570C MOV X0, X19
	0x03355710 MOV X1, X31
	0x03355714 BL 0x33E14E4
	0x03355718 CBNZ X20, 0x3355730
	0x0335571C MOV X0, X21
	0x03355720 LDP X20, X19, [X31 + 0x20]
	0x03355724 LDP X30, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1088000
	005 Move W8, [X20+3550]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xDD6000
	012 Move X0, [X0+1088]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3550], W8
	016 Move X20, [X19+48]
	017 Compare X20, 0
	018 JumpIfNotEqual {28}
	019 Move X8, 0xDD6000
	020 Move X8, [X8+1088]
	021 Move X0, [X8]
	022 Call 0x1C17F10
	023 Move X1, X31
	024 Move X20, X0
	025 Call Object..ctor, X0
	026 Move [X20+16], X19
	027 Move [X19+48], X20
	028 Move X0, X20
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Return X0

Method: System.Collections.IList GetValueList()

Disassembly:
	0x03355750 MOV X0, X21
	0x03355754 BL 0x3EB1AD0
	0x03355758 LDR X20, [X0]
	0x0335575C BL 0x3EB1AE0
	0x03355760 MOV X21, X31
	0x03355764 B 0x3355704
	0x03355768 MOV X20, X31
	0x0335576C B 0x3355774
	0x03355770 MOV X21, X0
	0x03355774 LDRB W8, [X31 + 0xC]
	0x03355778 CBZ W8, 0x3355788
	0x0335577C MOV X0, X19
	0x03355780 MOV X1, X31
	0x03355784 BL 0x33E14E4
	0x03355788 CBNZ X20, 0x3355794
	0x0335578C MOV X0, X21
	0x03355790 BL 0x1D2C690
	0x03355794 MOV X0, X20
	0x03355798 BL 0x1C16F18
	0x0335579C BL 0x1990590
	0x033557A0 SUB X31, X31, 0x30
	0x033557A4 STP X30, X21, [X31 + 0x10]
	0x033557A8 STP X20, X19, [X31 + 0x20]
	0x033557AC LDR X19, [X0 + 0x50]
	0x033557B0 MOV X20, X0
	0x033557B4 STRB W31, [X31 + 0xC]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1088000
	005 Move W8, [X20+3551]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xDD6000
	012 Move X0, [X0+1096]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3551], W8
	016 Move X20, [X19+56]
	017 Compare X20, 0
	018 JumpIfNotEqual {28}
	019 Move X8, 0xDD6000
	020 Move X8, [X8+1096]
	021 Move X0, [X8]
	022 Call 0x1C17F10
	023 Move X1, X31
	024 Move X20, X0
	025 Call Object..ctor, X0
	026 Move [X20+16], X19
	027 Move [X19+56], X20
	028 Move X0, X20
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Return X0

Method: System.Object get_Item(System.Object key)

Disassembly:
	0x033557E0 MOV X21, X0
	0x033557E4 MOV X20, X31
	0x033557E8 LDRB W8, [X31 + 0xC]
	0x033557EC CBZ W8, 0x33557FC
	0x033557F0 MOV X0, X19
	0x033557F4 MOV X1, X31
	0x033557F8 BL 0x33E14E4
	0x033557FC CBNZ X20, 0x3355814
	0x03355800 MOV X0, X21
	0x03355804 LDP X20, X19, [X31 + 0x20]
	0x03355808 LDP X30, X21, [X31 + 0x10]
	0x0335580C ADD X31, X31, 0x30
	0x03355810 RET
	0x03355814 MOV X0, X20
	0x03355818 BL 0x1C16F18
	0x0335581C BL 0x1C16F20
	0x03355820 B 0x3355828
	0x03355824 B 0x3355828
	0x03355828 MOV X21, X0
	0x0335582C CMP W1, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move X19, X0
	005 Move X9, [X8+888]
	006 Move X2, [X8+896]
	007 NotImplemented "Instruction BLR not yet implemented."
	008 Move TEMP, X0
	009 And TEMP, TEMP, -2147483648
	010 Compare TEMP, -2147483648
	011 JumpIfEqual {19}
	012 Move X8, [X19+24]
	013 Compare X8, 0
	014 JumpIfEqual {23}
	015 Move W9, [X8+24]
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Add X8, X8, W0
	018 Move X0, [X8+32]
	019 Move X0, X31
	020 Move X30, [X31+16]
	021 Move X19, [X31+24]
	022 Return X0
	023 Call 0x1C17F20
	024 Call 0x1C17F28

Method: System.Void set_Item(System.Object key, System.Object value)

Disassembly:
	0x03355830 B.NE 0x335584C
	0x03355834 MOV X0, X21
	0x03355838 BL 0x3EB1AD0
	0x0335583C LDR X20, [X0]
	0x03355840 BL 0x3EB1AE0
	0x03355844 MOV X21, X31
	0x03355848 B 0x33557E8
	0x0335584C MOV X20, X31
	0x03355850 B 0x3355858
	0x03355854 MOV X21, X0
	0x03355858 LDRB W8, [X31 + 0xC]
	0x0335585C CBZ W8, 0x335586C
	0x03355860 MOV X0, X19
	0x03355864 MOV X1, X31
	0x03355868 BL 0x33E14E4
	0x0335586C CBNZ X20, 0x3355878
	0x03355870 MOV X0, X21
	0x03355874 BL 0x1D2C690
	0x03355878 MOV X0, X20
	0x0335587C BL 0x1C16F18
	0x03355880 BL 0x1990590
	0x03355884 SUB X31, X31, 0x30
	0x03355888 STP X30, X21, [X31 + 0x10]
	0x0335588C STP X20, X19, [X31 + 0x20]
	0x03355890 CBZ X1, 0x3355904
	0x03355894 LDR X19, [X0 + 0x50]
	0x03355898 MOV X20, X1
	0x0335589C MOV X21, X0
	0x033558A0 STRB W31, [X31 + 0xC]
	0x033558A4 ADD X1, X31, 0xC
	0x033558A8 MOV X0, X19
	0x033558AC MOV X2, X31
	0x033558B0 BL 0x33DE64C
	0x033558B4 LDR X0, [X21 + 0x48]
	0x033558B8 CBZ X0, 0x3355968
	0x033558BC LDR X8, [X0]
	0x033558C0 LDR X9, [X8 + 0x378]
	0x033558C4 LDR X2, [X8 + 0x380]
	0x033558C8 MOV X1, X20
	0x033558CC BLR X9
	0x033558D0 MOV W21, W0
	0x033558D4 MOV X20, X31
	0x033558D8 LDRB W8, [X31 + 0xC]
	0x033558DC CBZ W8, 0x33558EC
	0x033558E0 MOV X0, X19
	0x033558E4 MOV X1, X31
	0x033558E8 BL 0x33E14E4
	0x033558EC CBNZ X20, 0x3355960
	0x033558F0 MOV W0, W21
	0x033558F4 LDP X20, X19, [X31 + 0x20]
	0x033558F8 LDP X30, X21, [X31 + 0x10]
	0x033558FC ADD X31, X31, 0x30
	0x03355900 RET
	0x03355904 ADRP X0, 0xDA3000
	0x03355908 LDR X0, [X0 + 0x528]
	0x0335590C BL 0x1C16D08
	0x03355910 BL 0x1C16F10
	0x03355914 MOV X19, X0
	0x03355918 ADRP X0, 0xDC8000
	0x0335591C LDR X0, [X0 + 0x70]
	0x03355920 BL 0x1C16D08
	0x03355924 MOV X20, X0
	0x03355928 ADRP X0, 0xDD5000
	0x0335592C LDR X0, [X0 + 0x288]
	0x03355930 BL 0x1C16D08
	0x03355934 MOV X2, X0
	0x03355938 MOV X0, X19
	0x0335593C MOV X1, X20
	0x03355940 MOV X3, X31
	0x03355944 BL 0x3315F7C
	0x03355948 ADRP X0, 0xDD5000
	0x0335594C LDR X0, [X0 + 0x480]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Compare X1, 0
	007 JumpIfEqual {58}
	008 Move X20, X0
	009 Move X19, X2
	010 Move X0, [X0+16]
	011 Move W2, [X20+32]
	012 Move X4, [X20+40]
	013 Move X22, X1
	014 Move W1, W31
	015 Move X3, X22
	016 Move X5, X31
	017 Call Array.BinarySearch, X0, X1, X2, X3, X4
	018 Move W21, W0
	019 Move TEMP, X0
	020 And TEMP, TEMP, -2147483648
	021 Compare TEMP, -2147483648
	022 JumpIfEqual {47}
	023 Move X22, [X20+24]
	024 Compare X22, 0
	025 JumpIfEqual {81}
	026 Compare X19, 0
	027 JumpIfEqual {34}
	028 Move X8, [X22]
	029 Move X0, X19
	030 Move X1, [X8+64]
	031 Call 0x1C17E00
	032 Compare X0, 0
	033 JumpIfEqual {83}
	034 Move W8, [X22+24]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Add X8, X22, W21
	037 Move [X8+32], X19
	038 Move W8, [X20+36]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Add W8, W8, 1
	042 Move [X20+36], W8
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X30, [X31+48]
	046 Return 
	047 NotImplemented "Instruction ORN not yet implemented."
	048 Move X0, X20
	049 Move X2, X22
	050 Move X3, X19
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X30, [X31+48]
	056 Call SortedList.Insert, X0, X1, X2, X3
	057 Return 
	058 Move X0, 0xDA4000
	059 Move X0, [X0+1320]
	060 Call 0x1C17D08
	061 Call 0x1C17F10
	062 Move X19, X0
	063 Move X0, 0xDC9000
	064 Move X0, [X0+112]
	065 Call 0x1C17D08
	066 Move X20, X0
	067 Move X0, 0xDD6000
	068 Move X0, [X0+648]
	069 Call 0x1C17D08
	070 Move X2, X0
	071 Move X0, X19
	072 Move X1, X20
	073 Move X3, X31
	074 Call ArgumentNullException..ctor, X0, X1, X2
	075 Move X0, 0xDD6000
	076 Move X0, [X0+1104]
	077 Call 0x1C17D08
	078 Move X1, X0
	079 Move X0, X19
	080 Call 0x1C17DEC
	081 Call 0x1C17F20
	082 Call 0x1C17F28
	083 Call 0x1C17F44
	084 Move X1, X31
	085 Call 0x1C17DEC

Method: System.Int32 IndexOfKey(System.Object key)

Disassembly:
	0x03355950 BL 0x1C16D08
	0x03355954 MOV X1, X0
	0x03355958 MOV X0, X19
	0x0335595C BL 0x1C16DEC
	0x03355960 MOV X0, X20
	0x03355964 BL 0x1C16F18
	0x03355968 BL 0x1C16F20
	0x0335596C B 0x3355974
	0x03355970 B 0x3355974
	0x03355974 MOV X21, X0
	0x03355978 CMP W1, 0x1
	0x0335597C B.NE 0x3355998
	0x03355980 MOV X0, X21
	0x03355984 BL 0x3EB1AD0
	0x03355988 LDR X20, [X0]
	0x0335598C BL 0x3EB1AE0
	0x03355990 MOV W21, W31
	0x03355994 B 0x33558D8
	0x03355998 MOV X20, X31
	0x0335599C B 0x33559A4
	0x033559A0 MOV X21, X0
	0x033559A4 LDRB W8, [X31 + 0xC]
	0x033559A8 CBZ W8, 0x33559B8
	0x033559AC MOV X0, X19
	0x033559B0 MOV X1, X31
	0x033559B4 BL 0x33E14E4
	0x033559B8 CBNZ X20, 0x33559C4
	0x033559BC MOV X0, X21
	0x033559C0 BL 0x1D2C690
	0x033559C4 MOV X0, X20
	0x033559C8 BL 0x1C16F18
	0x033559CC BL 0x1990590
	0x033559D0 SUB X31, X31, 0x30
	0x033559D4 STP X30, X21, [X31 + 0x10]
	0x033559D8 STP X20, X19, [X31 + 0x20]
	0x033559DC LDR X19, [X0 + 0x50]
	0x033559E0 MOV X20, X1
	0x033559E4 MOV X21, X0
	0x033559E8 STRB W31, [X31 + 0xC]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {20}
	006 Move X8, [X0+16]
	007 Move W2, [X0+32]
	008 Move X4, [X0+40]
	009 Move X3, X1
	010 Move X0, X8
	011 Move W1, W31
	012 Move X5, X31
	013 Call Array.BinarySearch, X0, X1, X2, X3, X4
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 NotImplemented "Instruction CMP not yet implemented."
	017 NotImplemented "Instruction CSINV not yet implemented."
	018 Move X30, [X31+32]
	019 Return X0
	020 Move X0, 0xDA4000
	021 Move X0, [X0+1320]
	022 Call 0x1C17D08
	023 Call 0x1C17F10
	024 Move X19, X0
	025 Move X0, 0xDC9000
	026 Move X0, [X0+112]
	027 Call 0x1C17D08
	028 Move X20, X0
	029 Move X0, 0xDD6000
	030 Move X0, [X0+648]
	031 Call 0x1C17D08
	032 Move X2, X0
	033 Move X0, X19
	034 Move X1, X20
	035 Move X3, X31
	036 Call ArgumentNullException..ctor, X0, X1, X2
	037 Move X0, 0xDD6000
	038 Move X0, [X0+1112]
	039 Call 0x1C17D08
	040 Move X1, X0
	041 Move X0, X19
	042 Call 0x1C17DEC

Method: System.Int32 IndexOfValue(System.Object value)

Disassembly:
	0x033559EC ADD X1, X31, 0xC
	0x033559F0 MOV X0, X19
	0x033559F4 MOV X2, X31
	0x033559F8 BL 0x33DE64C
	0x033559FC LDR X0, [X21 + 0x48]
	0x03355A00 CBZ X0, 0x3355A54
	0x03355A04 LDR X8, [X0]
	0x03355A08 LDR X9, [X8 + 0x388]
	0x03355A0C LDR X2, [X8 + 0x390]
	0x03355A10 MOV X1, X20
	0x03355A14 BLR X9
	0x03355A18 MOV W21, W0
	0x03355A1C MOV X20, X31
	0x03355A20 LDRB W8, [X31 + 0xC]
	0x03355A24 CBZ W8, 0x3355A34
	0x03355A28 MOV X0, X19
	0x03355A2C MOV X1, X31
	0x03355A30 BL 0x33E14E4
	0x03355A34 CBNZ X20, 0x3355A4C
	0x03355A38 MOV W0, W21
	0x03355A3C LDP X20, X19, [X31 + 0x20]
	0x03355A40 LDP X30, X21, [X31 + 0x10]
	0x03355A44 ADD X31, X31, 0x30
	0x03355A48 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1088000
	007 Move X21, 0xDD6000
	008 Move W8, [X22+3552]
	009 Move X21, [X21+1120]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xDD6000
	017 Move X0, [X0+1120]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3552], W8
	021 Move X0, [X20+24]
	022 Move W3, [X20+32]
	023 Move X4, [X21]
	024 Move X1, X19
	025 Move X20, [X31+32]
	026 Move X19, [X31+40]
	027 Move X22, [X31+16]
	028 Move X21, [X31+24]
	029 Move W2, W31
	030 Move X30, [X31+48]
	031 Call Array.IndexOf, X0, X1, X2, X3
	032 Return X0

Method: System.Void Insert(System.Int32 index, System.Object key, System.Object value)

Disassembly:
	0x03354C9C LDR X1, [X8 + 0x2C0]
	0x03354CA0 BLR X9
	0x03354CA4 STR X0, [X19 + 0x50]
	0x03354CA8 LDP X20, X19, [X31 + 0x10]
	0x03354CAC LDR X30, [X31], #0x20
	0x03354CB0 RET
	0x03354CB4 BL 0x1C16F20
	0x03354CB8 SUB X31, X31, 0x30
	0x03354CBC STP X30, X21, [X31 + 0x10]
	0x03354CC0 STP X20, X19, [X31 + 0x20]
	0x03354CC4 LDR X19, [X0 + 0x50]
	0x03354CC8 MOV X20, X0
	0x03354CCC STRB W31, [X31 + 0xC]
	0x03354CD0 ADD X1, X31, 0xC
	0x03354CD4 MOV X0, X19
	0x03354CD8 MOV X2, X31
	0x03354CDC BL 0x33DE64C
	0x03354CE0 LDR X0, [X20 + 0x48]
	0x03354CE4 CBZ X0, 0x3354D34
	0x03354CE8 LDR X8, [X0]
	0x03354CEC LDR X1, [X8 + 0x280]
	0x03354CF0 LDR X9, [X8 + 0x278]
	0x03354CF4 BLR X9
	0x03354CF8 MOV W21, W0
	0x03354CFC MOV X20, X31
	0x03354D00 LDRB W8, [X31 + 0xC]
	0x03354D04 CBZ W8, 0x3354D14
	0x03354D08 MOV X0, X19
	0x03354D0C MOV X1, X31
	0x03354D10 BL 0x33E14E4
	0x03354D14 CBNZ X20, 0x3354D2C
	0x03354D18 MOV W0, W21
	0x03354D1C LDP X20, X19, [X31 + 0x20]
	0x03354D20 LDP X30, X21, [X31 + 0x10]
	0x03354D24 ADD X31, X31, 0x30
	0x03354D28 RET
	0x03354D2C MOV X0, X20
	0x03354D30 BL 0x1C16F18
	0x03354D34 BL 0x1C16F20
	0x03354D38 B 0x3354D40
	0x03354D3C B 0x3354D40
	0x03354D40 MOV X21, X0
	0x03354D44 CMP W1, 0x1
	0x03354D48 B.NE 0x3354D64
	0x03354D4C MOV X0, X21
	0x03354D50 BL 0x3EB1AD0
	0x03354D54 LDR X20, [X0]
	0x03354D58 BL 0x3EB1AE0
	0x03354D5C MOV W21, W31
	0x03354D60 B 0x3354D00
	0x03354D64 MOV X20, X31
	0x03354D68 B 0x3354D70
	0x03354D6C MOV X21, X0
	0x03354D70 LDRB W8, [X31 + 0xC]
	0x03354D74 CBZ W8, 0x3354D84
	0x03354D78 MOV X0, X19
	0x03354D7C MOV X1, X31
	0x03354D80 BL 0x33E14E4
	0x03354D84 CBNZ X20, 0x3354D90
	0x03354D88 MOV X0, X21
	0x03354D8C BL 0x1D2C690
	0x03354D90 MOV X0, X20
	0x03354D94 BL 0x1C16F18
	0x03354D98 BL 0x1990590
	0x03354D9C LDR X0, [X0 + 0x50]
	0x03354DA0 RET
	0x03354DA4 MOVZ W0, 0x1
	0x03354DA8 RET
	0x03354DAC SUB X31, X31, 0x30
	0x03354DB0 STP X30, X21, [X31 + 0x10]
	0x03354DB4 STP X20, X19, [X31 + 0x20]
	0x03354DB8 LDR X19, [X0 + 0x50]
	0x03354DBC MOV X20, X1
	0x03354DC0 MOV X21, X0
	0x03354DC4 STRB W31, [X31 + 0xC]
	0x03354DC8 ADD X1, X31, 0xC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X9, [X0+16]
	009 Compare X9, 0
	010 JumpIfEqual {81}
	011 Move W8, [X0+32]
	012 Move W9, [X9+24]
	013 Move X20, X3
	014 Move X22, X2
	015 Move X19, X0
	016 Move W21, W1
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Add W1, W8, 1
	019 Move X0, X19
	020 Call SortedList.EnsureCapacity, X0, X1
	021 Move W8, [X19+32]
	022 Subtract W4, W8, W21
	023 Move X0, [X19+16]
	024 Add W23, W21, 1
	025 Move W1, W21
	026 Move W3, W23
	027 Move X2, X0
	028 Move X5, X31
	029 Call Array.Copy, X0, X1, X2, X3, X4
	030 Move W8, [X19+32]
	031 Move X0, [X19+24]
	032 Move W1, W21
	033 Move W3, W23
	034 Subtract W4, W8, W21
	035 Move X2, X0
	036 Move X5, X31
	037 Call Array.Copy, X0, X1, X2, X3, X4
	038 Move X24, [X19+16]
	039 Compare X24, 0
	040 JumpIfEqual {81}
	041 Compare X22, 0
	042 JumpIfEqual {49}
	043 Move X8, [X24]
	044 Move X0, X22
	045 Move X1, [X8+64]
	046 Call 0x1C17E00
	047 Compare X0, 0
	048 JumpIfEqual {83}
	049 Move W8, [X24+24]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X23, W21
	052 Add X8, X24, X23
	053 Move [X8+32], X22
	054 Move X22, [X19+24]
	055 Compare X22, 0
	056 JumpIfEqual {81}
	057 Compare X20, 0
	058 JumpIfEqual {65}
	059 Move X8, [X22]
	060 Move X0, X20
	061 Move X1, [X8+64]
	062 Call 0x1C17E00
	063 Compare X0, 0
	064 JumpIfEqual {83}
	065 Move W8, [X22+24]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Add X8, X22, X23
	068 Move [X8+32], X20
	069 Move V0, [X19+32]
	070 NotImplemented "Instruction MOVI not yet implemented."
	071 Move X22, [X31+32]
	072 Move X21, [X31+40]
	073 Move X24, [X31+16]
	074 Move X23, [X31+24]
	075 Add S0, S0, S1
	076 Move [X19+32], D0
	077 Move X20, [X31+48]
	078 Move X19, [X31+56]
	079 Move X30, [X31+64]
	080 Return 
	081 Call 0x1C17F20
	082 Call 0x1C17F28
	083 Call 0x1C17F44
	084 Move X1, X31
	085 Call 0x1C17DEC

Method: System.Void RemoveAt(System.Int32 index)

Disassembly:
	0x03355A4C MOV X0, X20
	0x03355A50 BL 0x1C16F18
	0x03355A54 BL 0x1C16F20
	0x03355A58 B 0x3355A60
	0x03355A5C B 0x3355A60
	0x03355A60 MOV X21, X0
	0x03355A64 CMP W1, 0x1
	0x03355A68 B.NE 0x3355A84
	0x03355A6C MOV X0, X21
	0x03355A70 BL 0x3EB1AD0
	0x03355A74 LDR X20, [X0]
	0x03355A78 BL 0x3EB1AE0
	0x03355A7C MOV W21, W31
	0x03355A80 B 0x3355A20
	0x03355A84 MOV X20, X31
	0x03355A88 B 0x3355A90
	0x03355A8C MOV X21, X0
	0x03355A90 LDRB W8, [X31 + 0xC]
	0x03355A94 CBZ W8, 0x3355AA4
	0x03355A98 MOV X0, X19
	0x03355A9C MOV X1, X31
	0x03355AA0 BL 0x33E14E4
	0x03355AA4 CBNZ X20, 0x3355AB0
	0x03355AA8 MOV X0, X21
	0x03355AAC BL 0x1D2C690
	0x03355AB0 MOV X0, X20
	0x03355AB4 BL 0x1C16F18
	0x03355AB8 BL 0x1990590
	0x03355ABC SUB X31, X31, 0x30
	0x03355AC0 STP X30, X21, [X31 + 0x10]
	0x03355AC4 STP X20, X19, [X31 + 0x20]
	0x03355AC8 LDR X19, [X0 + 0x50]
	0x03355ACC MOV W20, W1
	0x03355AD0 MOV X21, X0
	0x03355AD4 STRB W31, [X31 + 0xC]
	0x03355AD8 ADD X1, X31, 0xC
	0x03355ADC MOV X0, X19
	0x03355AE0 MOV X2, X31
	0x03355AE4 BL 0x33DE64C
	0x03355AE8 LDR X0, [X21 + 0x48]
	0x03355AEC CBZ X0, 0x3355B38
	0x03355AF0 LDR X8, [X0]
	0x03355AF4 LDR X9, [X8 + 0x398]
	0x03355AF8 LDR X2, [X8 + 0x3A0]
	0x03355AFC MOV W1, W20
	0x03355B00 BLR X9
	0x03355B04 MOV X20, X31
	0x03355B08 LDRB W8, [X31 + 0xC]
	0x03355B0C CBZ W8, 0x3355B1C
	0x03355B10 MOV X0, X19
	0x03355B14 MOV X1, X31
	0x03355B18 BL 0x33E14E4
	0x03355B1C CBNZ X20, 0x3355B30
	0x03355B20 LDP X20, X19, [X31 + 0x20]
	0x03355B24 LDP X30, X21, [X31 + 0x10]
	0x03355B28 ADD X31, X31, 0x30
	0x03355B2C RET
	0x03355B30 MOV X0, X20
	0x03355B34 BL 0x1C16F18
	0x03355B38 BL 0x1C16F20
	0x03355B3C B 0x3355B40
	0x03355B40 MOV X21, X0
	0x03355B44 CMP W1, 0x1
	0x03355B48 B.NE 0x3355B60
	0x03355B4C MOV X0, X21
	0x03355B50 BL 0x3EB1AD0
	0x03355B54 LDR X20, [X0]
	0x03355B58 BL 0x3EB1AE0
	0x03355B5C B 0x3355B08
	0x03355B60 MOV X20, X31
	0x03355B64 B 0x3355B6C
	0x03355B68 MOV X21, X0
	0x03355B6C LDRB W8, [X31 + 0xC]
	0x03355B70 CBZ W8, 0x3355B80
	0x03355B74 MOV X0, X19
	0x03355B78 MOV X1, X31
	0x03355B7C BL 0x33E14E4
	0x03355B80 CBNZ X20, 0x3355B8C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move TEMP, X1
	006 And TEMP, TEMP, -2147483648
	007 Compare TEMP, -2147483648
	008 JumpIfEqual {59}
	009 Move X8, [X0]
	010 Move W20, W1
	011 Move X19, X0
	012 Move X9, [X8+632]
	013 Move X1, [X8+640]
	014 NotImplemented "Instruction BLR not yet implemented."
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move W8, [X19+32]
	017 Subtract W8, W8, 1
	018 Subtract W4, W8, W20
	019 Move [X19+32], W8
	020 Move X0, [X19+16]
	021 Add W21, W20, 1
	022 Move W1, W21
	023 Move W3, W20
	024 Move X2, X0
	025 Move X5, X31
	026 Call Array.Copy, X0, X1, X2, X3, X4
	027 Move W8, [X19+32]
	028 Move X0, [X19+24]
	029 Move W1, W21
	030 Move W3, W20
	031 Subtract W4, W8, W20
	032 Move X2, X0
	033 Move X5, X31
	034 Call Array.Copy, X0, X1, X2, X3, X4
	035 Move W8, [X19+32]
	036 Move X10, [X19+16]
	037 Compare X10, 0
	038 JumpIfEqual {82}
	039 Move W9, [X10+24]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X9, W8
	042 Add X10, X10, X9
	043 Move [X10+32], X31
	044 Move X10, [X19+24]
	045 Compare X10, 0
	046 JumpIfEqual {82}
	047 Move W11, [X10+24]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Add X8, X10, X9
	050 Move [X8+32], X31
	051 Move W8, [X19+36]
	052 Add W8, W8, 1
	053 Move [X19+36], W8
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move X30, [X31+32]
	057 Move X21, [X31+40]
	058 Return 
	059 Move X0, 0xDA7000
	060 Move X0, [X0+1888]
	061 Call 0x1C17D08
	062 Call 0x1C17F10
	063 Move X19, X0
	064 Move X0, 0xDAA000
	065 Move X0, [X0+304]
	066 Call 0x1C17D08
	067 Move X20, X0
	068 Move X0, 0xDC7000
	069 Move X0, [X0+1632]
	070 Call 0x1C17D08
	071 Move X2, X0
	072 Move X0, X19
	073 Move X1, X20
	074 Move X3, X31
	075 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	076 Move X0, 0xDD6000
	077 Move X0, [X0+1128]
	078 Call 0x1C17D08
	079 Move X1, X0
	080 Move X0, X19
	081 Call 0x1C17DEC
	082 Call 0x1C17F20
	083 Call 0x1C17F28

Method: System.Void Remove(System.Object key)

Disassembly:
	0x03355B84 MOV X0, X21
	0x03355B88 BL 0x1D2C690
	0x03355B8C MOV X0, X20
	0x03355B90 BL 0x1C16F18
	0x03355B94 BL 0x1990590
	0x03355B98 SUB X31, X31, 0x30
	0x03355B9C STP X30, X21, [X31 + 0x10]
	0x03355BA0 STP X20, X19, [X31 + 0x20]
	0x03355BA4 LDR X19, [X0 + 0x50]
	0x03355BA8 MOV X20, X1
	0x03355BAC MOV X21, X0
	0x03355BB0 STRB W31, [X31 + 0xC]
	0x03355BB4 ADD X1, X31, 0xC
	0x03355BB8 MOV X0, X19
	0x03355BBC MOV X2, X31
	0x03355BC0 BL 0x33DE64C

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move X19, X0
	005 Move X9, [X8+888]
	006 Move X2, [X8+896]
	007 NotImplemented "Instruction BLR not yet implemented."
	008 Move TEMP, X0
	009 And TEMP, TEMP, -2147483648
	010 Compare TEMP, -2147483648
	011 JumpIfEqual {20}
	012 Move X8, [X19]
	013 Move W1, W0
	014 Move X0, X19
	015 Move X3, [X8+920]
	016 Move X2, [X8+928]
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 CallNoReturn X3
	020 Move X30, [X31+16]
	021 Move X19, [X31+24]
	022 Return 

Method: System.Collections.SortedList Synchronized(System.Collections.SortedList list)

Disassembly:
	0x03355BC4 LDR X0, [X21 + 0x48]
	0x03355BC8 CBZ X0, 0x3355C14
	0x03355BCC LDR X8, [X0]
	0x03355BD0 LDR X9, [X8 + 0x3A8]
	0x03355BD4 LDR X2, [X8 + 0x3B0]
	0x03355BD8 MOV X1, X20
	0x03355BDC BLR X9
	0x03355BE0 MOV X20, X31
	0x03355BE4 LDRB W8, [X31 + 0xC]
	0x03355BE8 CBZ W8, 0x3355BF8
	0x03355BEC MOV X0, X19
	0x03355BF0 MOV X1, X31
	0x03355BF4 BL 0x33E14E4
	0x03355BF8 CBNZ X20, 0x3355C0C
	0x03355BFC LDP X20, X19, [X31 + 0x20]
	0x03355C00 LDP X30, X21, [X31 + 0x10]
	0x03355C04 ADD X31, X31, 0x30
	0x03355C08 RET
	0x03355C0C MOV X0, X20
	0x03355C10 BL 0x1C16F18
	0x03355C14 BL 0x1C16F20
	0x03355C18 B 0x3355C1C
	0x03355C1C MOV X21, X0
	0x03355C20 CMP W1, 0x1
	0x03355C24 B.NE 0x3355C3C
	0x03355C28 MOV X0, X21
	0x03355C2C BL 0x3EB1AD0
	0x03355C30 LDR X20, [X0]
	0x03355C34 BL 0x3EB1AE0
	0x03355C38 B 0x3355BE4
	0x03355C3C MOV X20, X31
	0x03355C40 B 0x3355C48
	0x03355C44 MOV X21, X0
	0x03355C48 LDRB W8, [X31 + 0xC]
	0x03355C4C CBZ W8, 0x3355C5C
	0x03355C50 MOV X0, X19
	0x03355C54 MOV X1, X31
	0x03355C58 BL 0x33E14E4
	0x03355C5C CBNZ X20, 0x3355C68
	0x03355C60 MOV X0, X21
	0x03355C64 BL 0x1D2C690

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1088000
	005 Move W8, [X20+3553]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xDD6000
	012 Move X0, [X0+1136]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3553], W8
	016 Compare X19, 0
	017 JumpIfEqual {30}
	018 Move X8, 0xDD6000
	019 Move X8, [X8+1136]
	020 Move X0, [X8]
	021 Call 0x1C17F10
	022 Move X1, X19
	023 Move X20, X0
	024 Call SyncSortedList..ctor, X0, X1
	025 Move X0, X20
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0
	030 Move X0, 0xDA4000
	031 Move X0, [X0+1320]
	032 Call 0x1C17D08
	033 Call 0x1C17F10
	034 Move X19, X0
	035 Move X0, 0xDC8000
	036 Move X0, [X0+448]
	037 Call 0x1C17D08
	038 Move X1, X0
	039 Move X0, X19
	040 Move X2, X31
	041 Call ArgumentNullException..ctor, X0, X1
	042 Move X0, 0xDD6000
	043 Move X0, [X0+1144]
	044 Call 0x1C17D08
	045 Move X1, X0
	046 Move X0, X19
	047 Call 0x1C17DEC

