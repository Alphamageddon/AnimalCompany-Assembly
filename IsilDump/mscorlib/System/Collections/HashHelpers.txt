Type: System.Collections.HashHelpers

Method: System.Boolean IsPrime(System.Int32 candidate)

Disassembly:
	0x03351374 STRB W8, [X0 + 0x24]
	0x03351378 STR X31, [X0 + 0x18]
	0x0335137C LDP X30, X19, [X31], #0x10
	0x03351380 RET
	0x03351384 BL 0x1C16F20
	0x03351388 ADRP X0, 0xDA2000
	0x0335138C LDR X0, [X0 + 0x5B0]
	0x03351390 BL 0x1C16D08
	0x03351394 BL 0x1C16F10
	0x03351398 MOV X19, X0
	0x0335139C ADRP X0, 0xDCC000
	0x033513A0 LDR X0, [X0 + 0x288]
	0x033513A4 BL 0x1C16D08
	0x033513A8 MOV X1, X0
	0x033513AC MOV X0, X19
	0x033513B0 MOV X2, X31
	0x033513B4 BL 0x337DF1C
	0x033513B8 ADRP X0, 0xDD9000
	0x033513BC LDR X0, [X0 + 0x300]
	0x033513C0 BL 0x1C16D08
	0x033513C4 MOV X1, X0
	0x033513C8 MOV X0, X19
	0x033513CC BL 0x1C16DEC
	0x033513D0 STR X30, [X31 - 0x40]!
	0x033513D4 STP X24, X23, [X31 + 0x10]
	0x033513D8 STP X22, X21, [X31 + 0x20]
	0x033513DC STP X20, X19, [X31 + 0x30]
	0x033513E0 CBZ X1, 0x335147C
	0x033513E4 MOV X20, X1
	0x033513E8 MOV X21, X0
	0x033513EC MOV X0, X1
	0x033513F0 MOV X1, X31
	0x033513F4 MOV W19, W2
	0x033513F8 BL 0x339FCE4
	0x033513FC CMP W0, 0x1
	0x03351400 B.NE 0x33514B0
	0x03351404 TBNZ X19, 0x1F, 0x33514E4
	0x03351408 MOV X0, X20
	0x0335140C MOV X1, X31
	0x03351410 BL 0x3395B7C
	0x03351414 LDR X8, [X21 + 0x10]
	0x03351418 CBZ X8, 0x335152C
	0x0335141C LDR W9, [X8 + 0x1C]
	0x03351420 SUB W10, W0, W19
	0x03351424 CMP W10, W9
	0x03351428 B.LT 0x3351530

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x108C000
	005 Move W8, [X20+3514]
	006 Move W19, W0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfNotEqual {17}
	011 Move TEMP, X19
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 NotImplemented "Instruction CMP not yet implemented."
	016 NotImplemented "Instruction CSET not yet implemented."
	017 Move X0, 0xDA3000
	018 Move X0, [X0+1448]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+3514], W8
	022 Move TEMP, X19
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfNotEqual {15}
	026 Move X8, 0xDA3000
	027 Move X8, [X8+1448]
	028 Move X0, [X8]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 NotImplemented "Instruction SCVTF not yet implemented."
	034 Move X8, 0x7FF00000
	035 NotImplemented "Instruction FSQRT not yet implemented."
	036 Move D1, X8
	037 NotImplemented "Instruction FCVTZS not yet implemented."
	038 NotImplemented "Instruction FCMP not yet implemented."
	039 Move W9, 0x80000000
	040 NotImplemented "Instruction CSEL not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move W0, 1
	043 Move W9, 3
	044 NotImplemented "Instruction SDIV not yet implemented."
	045 NotImplemented "Instruction MSUB not yet implemented."
	046 Compare W10, 0
	047 JumpIfEqual {50}
	048 Add W9, W9, 2
	049 NotImplemented "Instruction CMP not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 NotImplemented "Instruction CSET not yet implemented."
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X30, [X31+32]
	055 Return X0

Method: System.Int32 GetPrime(System.Int32 min)

Disassembly:
	0x0335142C LDR X22, [X8 + 0x10]
	0x03351430 CBZ X22, 0x3351468
	0x03351434 MOVZ W23, 0x10
	0x03351438 MOVZ W24, 0x18
	0x0335143C LDRB W8, [X21 + 0x18]
	0x03351440 MOV X0, X20
	0x03351444 MOV W2, W19
	0x03351448 MOV X3, X31
	0x0335144C CMP W8, 0x0
	0x03351450 CSEL X8, X24, X23, EQ
	0x03351454 LDR X1, [X22, X8, LSL]
	0x03351458 BL 0x339F798
	0x0335145C LDR X22, [X22 + 0x20]
	0x03351460 ADD W19, W19, 0x1
	0x03351464 CBNZ X22, 0x335143C
	0x03351468 LDP X20, X19, [X31 + 0x30]
	0x0335146C LDP X22, X21, [X31 + 0x20]
	0x03351470 LDP X24, X23, [X31 + 0x10]
	0x03351474 LDR X30, [X31], #0x40
	0x03351478 RET
	0x0335147C ADRP X0, 0xDA7000
	0x03351480 LDR X0, [X0 + 0x528]
	0x03351484 BL 0x1C16D08
	0x03351488 BL 0x1C16F10
	0x0335148C MOV X19, X0
	0x03351490 ADRP X0, 0xDCA000
	0x03351494 LDR X0, [X0 + 0x640]
	0x03351498 BL 0x1C16D08
	0x0335149C MOV X1, X0
	0x033514A0 MOV X0, X19
	0x033514A4 MOV X2, X31
	0x033514A8 BL 0x330E100
	0x033514AC B 0x3351574
	0x033514B0 ADRP X0, 0xDAA000
	0x033514B4 LDR X0, [X0 + 0x578]
	0x033514B8 BL 0x1C16D08
	0x033514BC BL 0x1C16F10
	0x033514C0 MOV X19, X0
	0x033514C4 ADRP X0, 0xDCB000
	0x033514C8 LDR X0, [X0 + 0x308]
	0x033514CC BL 0x1C16D08
	0x033514D0 MOV X1, X0
	0x033514D4 MOV X0, X19
	0x033514D8 MOV X2, X31
	0x033514DC BL 0x3314A68
	0x033514E0 B 0x3351574
	0x033514E4 ADRP X0, 0xDAA000
	0x033514E8 LDR X0, [X0 + 0x760]
	0x033514EC BL 0x1C16D08
	0x033514F0 BL 0x1C16F10
	0x033514F4 MOV X19, X0
	0x033514F8 ADRP X0, 0xDAD000
	0x033514FC LDR X0, [X0 + 0x130]
	0x03351500 BL 0x1C16D08
	0x03351504 MOV X20, X0
	0x03351508 ADRP X0, 0xDCA000
	0x0335150C LDR X0, [X0 + 0x670]
	0x03351510 BL 0x1C16D08
	0x03351514 MOV X2, X0
	0x03351518 MOV X0, X19
	0x0335151C MOV X1, X20
	0x03351520 MOV X3, X31
	0x03351524 BL 0x3311888
	0x03351528 B 0x3351574
	0x0335152C BL 0x1C16F20
	0x03351530 ADRP X0, 0xDAA000
	0x03351534 LDR X0, [X0 + 0x578]
	0x03351538 BL 0x1C16D08
	0x0335153C BL 0x1C16F10
	0x03351540 MOV X19, X0
	0x03351544 ADRP X0, 0xDCA000
	0x03351548 LDR X0, [X0 + 0x660]
	0x0335154C BL 0x1C16D08
	0x03351550 MOV X20, X0
	0x03351554 ADRP X0, 0xDAD000
	0x03351558 LDR X0, [X0 + 0x130]
	0x0335155C BL 0x1C16D08
	0x03351560 MOV X2, X0
	0x03351564 MOV X0, X19
	0x03351568 MOV X1, X20
	0x0335156C MOV X3, X31
	0x03351570 BL 0x330E16C
	0x03351574 ADRP X0, 0xDD9000
	0x03351578 LDR X0, [X0 + 0x308]
	0x0335157C BL 0x1C16D08
	0x03351580 MOV X1, X0
	0x03351584 MOV X0, X19
	0x03351588 BL 0x1C16DEC
	0x0335158C STR X30, [X31 - 0x10]!
	0x03351590 LDR X8, [X0 + 0x10]
	0x03351594 CBZ X8, 0x33515C0
	0x03351598 LDR X8, [X8 + 0x10]
	0x0335159C CBZ X8, 0x33515B4
	0x033515A0 MOV W0, W31
	0x033515A4 LDR X8, [X8 + 0x20]
	0x033515A8 ADD W0, W0, 0x1
	0x033515AC CBNZ X8, 0x33515A4
	0x033515B0 B 0x33515B8

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x108C000
	010 Move W8, [X20+3515]
	011 Move W19, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xDCE000
	017 Move X0, [X0+1352]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+3515], W8
	021 Move TEMP, X19
	022 And TEMP, TEMP, -2147483648
	023 Compare TEMP, -2147483648
	024 JumpIfEqual {97}
	025 Move X21, 0xDCE000
	026 Move X21, [X21+1352]
	027 Move W20, W31
	028 Move X0, [X21]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X21]
	034 Move X8, [X0+184]
	035 Move X8, [X8]
	036 Compare X8, 0
	037 JumpIfEqual {95}
	038 Move W8, [X8+24]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {45}
	043 Call 0x1C17DFC
	044 Move X0, [X21]
	045 Move X8, [X0+184]
	046 Move X8, [X8]
	047 Compare X8, 0
	048 JumpIfEqual {95}
	049 Move W9, [X8+24]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Add X8, X8, W20
	052 Move W8, [X8+32]
	053 Add W20, W20, 1
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move W19, W8
	056 Or W20, W19, 1
	057 Move TEMP, 0x80000000
	058 Not TEMP
	059 Move W8, TEMP
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move W22, 0xB16D
	062 Move W23, 0xBE19
	063 Move W24, 0xDF0C
	064 Move W25, 0xFFFD
	065 NotImplemented "Instruction MOVK not yet implemented."
	066 NotImplemented "Instruction MOVK not yet implemented."
	067 NotImplemented "Instruction MOVK not yet implemented."
	068 NotImplemented "Instruction MOVK not yet implemented."
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move W0, W20
	074 Call HashHelpers.IsPrime, X0
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfNotEqual {81}
	079 NotImplemented "Instruction MADD not yet implemented."
	080 NotImplemented "Instruction CMP not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X0, [X21]
	083 Add W20, W20, 2
	084 Move W19, W20
	085 Move W0, W19
	086 Move X20, [X31+48]
	087 Move X19, [X31+56]
	088 Move X22, [X31+32]
	089 Move X21, [X31+40]
	090 Move X24, [X31+16]
	091 Move X23, [X31+24]
	092 Move X30, [X31+64]
	093 Move X25, [X31+72]
	094 Return X0
	095 Call 0x1C17F20
	096 Call 0x1C17F28
	097 Move X0, 0xDAB000
	098 Move X0, [X0+1400]
	099 Call 0x1C17D08
	100 Call 0x1C17F10
	101 Move X19, X0
	102 Move X0, 0xDDA000
	103 Move X0, [X0+608]
	104 Call 0x1C17D08
	105 Move X1, X0
	106 Move X0, X19
	107 Move X2, X31
	108 Call ArgumentException..ctor, X0, X1
	109 Move X0, 0xDDA000
	110 Move X0, [X0+616]
	111 Call 0x1C17D08
	112 Move X1, X0
	113 Move X0, X19
	114 Call 0x1C17DEC

Method: System.Int32 ExpandPrime(System.Int32 oldSize)

Disassembly:
	0x033515B4 MOV W0, W31
	0x033515B8 LDR X30, [X31], #0x10
	0x033515BC RET
	0x033515C0 BL 0x1C16F20
	0x033515C4 MOV W0, W31
	0x033515C8 RET
	0x033515CC STR X30, [X31 - 0x10]!
	0x033515D0 LDR X0, [X0 + 0x10]
	0x033515D4 CBZ X0, 0x33515E0
	0x033515D8 LDR X30, [X31], #0x10
	0x033515DC B 0x3350A50
	0x033515E0 BL 0x1C16F20
	0x033515E4 STP X30, X21, [X31 - 0x20]!
	0x033515E8 STP X20, X19, [X31 + 0x10]
	0x033515EC ADRP X20, 0x108B000
	0x033515F0 ADRP X21, 0xDD9000
	0x033515F4 LDRB W8, [X20 + 0xDC8]
	0x033515F8 LDR X21, [X21 + 0x310]
	0x033515FC MOV X19, X0
	0x03351600 TBNZ X8, 0x0, 0x3351618
	0x03351604 ADRP X0, 0xDD9000
	0x03351608 LDR X0, [X0 + 0x310]
	0x0335160C BL 0x1C16CF4
	0x03351610 MOVZ W8, 0x1
	0x03351614 STRB W8, [X20 + 0xDC8]
	0x03351618 LDR X0, [X21]
	0x0335161C LDR X20, [X19 + 0x10]
	0x03351620 LDRB W19, [X19 + 0x18]
	0x03351624 BL 0x1C16F10
	0x03351628 MOV X1, X20
	0x0335162C MOV W2, W19
	0x03351630 MOV X21, X0
	0x03351634 BL 0x3351648

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x108C000
	005 Move W8, [X20+3516]
	006 Move W19, W0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xDCE000
	012 Move X0, [X0+1352]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3516], W8
	016 Move W8, 0xFFFC
	017 NotImplemented "Instruction MOVK not yet implemented."
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move W19, W19
	020 ShiftRight W19, 31
	021 And W19, W19, 0x3FFFFFFF
	022 Or W9, W8, 2
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Or W0, W8, 1
	027 Move X30, [X31+32]
	028 Return X0
	029 Move X8, 0xDCE000
	030 Move X8, [X8+1352]
	031 Move X0, [X8]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move W0, W19
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Call HashHelpers.GetPrime, X0
	041 Return X0

Method: System.Runtime.CompilerServices.ConditionalWeakTable`2<System.Object, System.Runtime.Serialization.SerializationInfo> get_SerializationInfoTable()

Disassembly:
	0x03351638 LDP X20, X19, [X31 + 0x10]
	0x0335163C MOV X0, X21
	0x03351640 LDP X30, X21, [X31], #0x20
	0x03351644 RET
	0x03351648 STP X30, X21, [X31 - 0x20]!
	0x0335164C STP X20, X19, [X31 + 0x10]
	0x03351650 MOV X20, X1
	0x03351654 MOV X1, X31
	0x03351658 MOV X19, X0
	0x0335165C AND W21, W2, 0x1
	0x03351660 BL 0x33BDD8C
	0x03351664 STR X20, [X19 + 0x10]
	0x03351668 STRB W21, [X19 + 0x24]
	0x0335166C CBZ X20, 0x3351690
	0x03351670 LDR W8, [X20 + 0x18]
	0x03351674 MOVZ W9, 0x1
	0x03351678 STRB W9, [X19 + 0x25]
	0x0335167C STR X31, [X19 + 0x18]
	0x03351680 STR W8, [X19 + 0x20]
	0x03351684 LDP X20, X19, [X31 + 0x10]
	0x03351688 LDP X30, X21, [X31], #0x20
	0x0335168C RET
	0x03351690 BL 0x1C16F20
	0x03351694 STP X30, X19, [X31 - 0x10]!
	0x03351698 LDR X8, [X0 + 0x18]
	0x0335169C CBZ X8, 0x33516C0
	0x033516A0 LDRB W9, [X0 + 0x24]
	0x033516A4 MOVZ W10, 0x10
	0x033516A8 CMP W9, 0x0
	0x033516AC MOVZ W9, 0x18
	0x033516B0 CSEL X9, X9, X10, EQ
	0x033516B4 LDR X0, [X8, X9, LSL]
	0x033516B8 LDP X30, X19, [X31], #0x10
	0x033516BC RET
	0x033516C0 ADRP X0, 0xDA2000
	0x033516C4 LDR X0, [X0 + 0x5B0]
	0x033516C8 BL 0x1C16D08
	0x033516CC BL 0x1C16F10
	0x033516D0 MOV X19, X0
	0x033516D4 ADRP X0, 0xDCC000
	0x033516D8 LDR X0, [X0 + 0x290]
	0x033516DC BL 0x1C16D08
	0x033516E0 MOV X1, X0
	0x033516E4 MOV X0, X19
	0x033516E8 MOV X2, X31
	0x033516EC BL 0x337DF1C
	0x033516F0 ADRP X0, 0xDD9000
	0x033516F4 LDR X0, [X0 + 0x318]
	0x033516F8 BL 0x1C16D08
	0x033516FC MOV X1, X0
	0x03351700 MOV X0, X19
	0x03351704 BL 0x1C16DEC
	0x03351708 STP X30, X19, [X31 - 0x10]!
	0x0335170C LDR X8, [X0 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x108C000
	005 Move X20, 0xDCE000
	006 Move W8, [X19+3517]
	007 Move X20, [X20+1352]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0xDDA000
	013 Move X0, [X0+624]
	014 Call 0x1C17CF4
	015 Move X0, 0xDDA000
	016 Move X0, [X0+632]
	017 Call 0x1C17CF4
	018 Move X0, 0xDCE000
	019 Move X0, [X0+1352]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+3517], W8
	023 Move X0, [X20]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {29}
	027 Call 0x1C17DFC
	028 Move X0, [X20]
	029 Move X8, [X0+184]
	030 Move X8, [X8+8]
	031 Compare X8, 0
	032 JumpIfNotEqual {53}
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X8, 0xDDA000
	038 Move X8, [X8+632]
	039 Move X0, [X8]
	040 Call 0x1C17F10
	041 Move X8, 0xDDA000
	042 Move X8, [X8+624]
	043 Move X19, X0
	044 Move X1, [X8]
	045 Call 0x29974AC, X0
	046 Move X8, [X20]
	047 Move X1, X19
	048 Move X2, X31
	049 Move X8, [X8+184]
	050 Add X0, X8, 8
	051 Call 0x1C25138
	052 Move X0, [X20]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {58}
	056 Call 0x1C17DFC
	057 Move X0, [X20]
	058 Move X8, [X0+184]
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move X0, [X8+8]
	062 Move X30, [X31+32]
	063 Return X0

Method: System.Void .cctor()

Disassembly:
	0x03351710 CBZ X8, 0x3351758
	0x03351714 LDR W9, [X0 + 0x20]
	0x03351718 LDR W10, [X8 + 0x18]
	0x0335171C CMP W9, W10
	0x03351720 B.NE 0x335175C
	0x03351724 LDRB W9, [X0 + 0x25]
	0x03351728 CBZ W9, 0x3351738
	0x0335172C LDR X8, [X8 + 0x10]
	0x03351730 STRB W31, [X0 + 0x25]
	0x03351734 B 0x3351744
	0x03351738 LDR X8, [X0 + 0x18]
	0x0335173C CBZ X8, 0x3351748
	0x03351740 LDR X8, [X8 + 0x20]
	0x03351744 STR X8, [X0 + 0x18]
	0x03351748 CMP X8, 0x0
	0x0335174C CSET W0, NE
	0x03351750 LDP X30, X19, [X31], #0x10
	0x03351754 RET
	0x03351758 BL 0x1C16F20
	0x0335175C ADRP X0, 0xDA2000
	0x03351760 LDR X0, [X0 + 0x5B0]
	0x03351764 BL 0x1C16D08
	0x03351768 BL 0x1C16F10
	0x0335176C MOV X19, X0
	0x03351770 ADRP X0, 0xDCC000
	0x03351774 LDR X0, [X0 + 0x288]
	0x03351778 BL 0x1C16D08
	0x0335177C MOV X1, X0
	0x03351780 MOV X0, X19
	0x03351784 MOV X2, X31
	0x03351788 BL 0x337DF1C
	0x0335178C ADRP X0, 0xDD9000
	0x03351790 LDR X0, [X0 + 0x320]
	0x03351794 BL 0x1C16D08
	0x03351798 MOV X1, X0
	0x0335179C MOV X0, X19
	0x033517A0 BL 0x1C16DEC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x108C000
	007 Move X22, 0xDA4000
	008 Move X19, 0xDDA000
	009 Move X20, 0xDCE000
	010 Move W8, [X21+3518]
	011 Move X22, [X22+3672]
	012 Move X19, [X19+640]
	013 Move X20, [X20+1352]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xDCE000
	019 Move X0, [X0+1352]
	020 Call 0x1C17CF4
	021 Move X0, 0xDA4000
	022 Move X0, [X0+3672]
	023 Call 0x1C17CF4
	024 Move X0, 0xDDA000
	025 Move X0, [X0+640]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+3518], W8
	029 Move X0, [X22]
	030 Move W1, 72
	031 Call 0x1C17D6C
	032 Move X1, [X19]
	033 Move X2, X31
	034 Move X19, X0
	035 Call RuntimeHelpers.InitializeArray, X0, X1
	036 Move X8, [X20]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X8, [X8+184]
	040 Move [X8], X19
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X30, [X31+48]
	044 Return 

