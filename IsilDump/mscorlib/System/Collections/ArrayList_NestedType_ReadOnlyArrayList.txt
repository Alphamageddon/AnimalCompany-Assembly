Type: System.Collections.ArrayList/ReadOnlyArrayList

Method: System.Void .ctor(System.Collections.ArrayList l)

Disassembly:
	0x0335A264 MOV X20, X0
	0x0335A268 MOVZ X8, 0x3FF00000
	0x0335A26C MOV X0, X19
	0x0335A270 STR X8, [X31 + 0x8]
	0x0335A274 BL 0x1C16D08
	0x0335A278 ADD X1, X31, 0x8
	0x0335A27C BL 0x1C16E04
	0x0335A280 MOV X19, X0
	0x0335A284 ADRP X0, 0xDD0000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X20, X0
	006 Call ArrayList..ctor, X0
	007 Move [X20+40], X19
	008 Move X20, [X31+16]
	009 Move X19, [X31+24]
	010 Move X30, [X31+32]
	011 Return 

Method: System.Int32 get_Count()

Disassembly:
	0x0335A6DC STR W8, [X19 + 0x28]
	0x0335A6E0 BL 0x1C16D44
	0x0335A6E4 STRB W31, [X19 + 0x2C]
	0x0335A6E8 LDP X20, X19, [X31 + 0x50]
	0x0335A6EC LDP X22, X21, [X31 + 0x40]
	0x0335A6F0 LDP X24, X23, [X31 + 0x30]
	0x0335A6F4 LDP X26, X25, [X31 + 0x20]
	0x0335A6F8 LDP X28, X27, [X31 + 0x10]
	0x0335A6FC LDP X29, X30, [X31], #0x60

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+40]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+664]
	007 Move X1, [X8+672]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Boolean get_IsReadOnly()

Disassembly:
	0x0335A700 RET
	0x0335A704 TBNZ X22, 0x0, 0x335A7D0

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Boolean get_IsFixedSize()

Disassembly:
	0x0335A708 BL 0x1C16D44
	0x0335A70C LDR X8, [X19 + 0x10]

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Boolean get_IsSynchronized()

Disassembly:
	0x0335A710 MOVZ W9, 0x1
	0x0335A714 STRB W9, [X19 + 0x2C]
	0x0335A718 CBZ X8, 0x335A73C
	0x0335A71C LDR W9, [X8 + 0x18]
	0x0335A720 CMP W29, W9
	0x0335A724 B.CS 0x335A738
	0x0335A728 MOVZ W9, 0x18
	0x0335A72C MADD X8, X23, X9, X8
	0x0335A730 STR X21, [X8 + 0x28]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+40]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+712]
	007 Move X1, [X8+720]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Object get_Item(System.Int32 index)

Disassembly:
	0x0335A734 B 0x335A6CC
	0x0335A738 BL 0x1C16F28
	0x0335A73C BL 0x1C16F20
	0x0335A740 ADRP X0, 0xD9E000
	0x0335A744 LDR X0, [X0 + 0x528]
	0x0335A748 BL 0x1C16D08
	0x0335A74C BL 0x1C16F10
	0x0335A750 MOV X19, X0
	0x0335A754 ADRP X0, 0xDC3000

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+40]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X3, [X8+744]
	007 Move X2, [X8+752]
	008 Move X30, [X31+16]
	009 CallNoReturn X3
	010 Call 0x1C17F20

Method: System.Void set_Item(System.Int32 index, System.Object value)

Disassembly:
	0x0335A758 LDR X0, [X0 + 0x70]
	0x0335A75C BL 0x1C16D08
	0x0335A760 MOV X20, X0
	0x0335A764 ADRP X0, 0xDD0000
	0x0335A768 LDR X0, [X0 + 0x288]
	0x0335A76C BL 0x1C16D08
	0x0335A770 MOV X2, X0
	0x0335A774 MOV X0, X19
	0x0335A778 MOV X1, X20
	0x0335A77C MOV X3, X31
	0x0335A780 BL 0x3315F7C
	0x0335A784 B 0x335A7B8
	0x0335A788 ADRP X0, 0xD99000
	0x0335A78C LDR X0, [X0 + 0x5B0]
	0x0335A790 BL 0x1C16D08
	0x0335A794 BL 0x1C16F10
	0x0335A798 MOV X19, X0
	0x0335A79C ADRP X0, 0xDD0000
	0x0335A7A0 LDR X0, [X0 + 0x6F0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xD9A000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xDC4000
	009 Move X0, [X0+104]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call NotSupportedException..ctor, X0, X1
	015 Move X0, 0xDD1000
	016 Move X0, [X0+1632]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Object get_SyncRoot()

Disassembly:
	0x0335A7A4 BL 0x1C16D08
	0x0335A7A8 MOV X1, X0
	0x0335A7AC MOV X0, X19
	0x0335A7B0 MOV X2, X31
	0x0335A7B4 BL 0x337DF1C
	0x0335A7B8 ADRP X0, 0xDD0000
	0x0335A7BC LDR X0, [X0 + 0x6F8]
	0x0335A7C0 BL 0x1C16D08
	0x0335A7C4 MOV X1, X0

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+40]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+728]
	007 Move X1, [X8+736]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Int32 Add(System.Object obj)

Disassembly:
	0x0335A7C8 MOV X0, X19
	0x0335A7CC BL 0x1C16DEC
	0x0335A7D0 LDR X19, [X19 + 0x10]
	0x0335A7D4 MOV X0, X19
	0x0335A7D8 BL 0x19903C0
	0x0335A7DC MOV X0, X19
	0x0335A7E0 MOV X1, X23
	0x0335A7E4 BL 0x1BB8F5C
	0x0335A7E8 LDR X19, [X0]
	0x0335A7EC ADRP X0, 0xDD0000
	0x0335A7F0 LDR X0, [X0 + 0x2B0]
	0x0335A7F4 BL 0x1C16D08
	0x0335A7F8 MOV X1, X19
	0x0335A7FC MOV X2, X20
	0x0335A800 MOV X3, X31
	0x0335A804 BL 0x320A264
	0x0335A808 MOV X19, X0
	0x0335A80C ADRP X0, 0xDA1000
	0x0335A810 LDR X0, [X0 + 0x578]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xD9A000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xDC4000
	009 Move X0, [X0+104]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call NotSupportedException..ctor, X0, X1
	015 Move X0, 0xDD1000
	016 Move X0, [X0+1640]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Void AddRange(System.Collections.ICollection c)

Disassembly:
	0x0335A814 BL 0x1C16D08
	0x0335A818 BL 0x1C16F10
	0x0335A81C MOV X1, X19
	0x0335A820 MOV X2, X31
	0x0335A824 MOV X20, X0
	0x0335A828 BL 0x3314A68
	0x0335A82C ADRP X0, 0xDD0000
	0x0335A830 LDR X0, [X0 + 0x6F8]
	0x0335A834 BL 0x1C16D08
	0x0335A838 MOV X1, X0
	0x0335A83C MOV X0, X20
	0x0335A840 BL 0x1C16DEC
	0x0335A844 STR X30, [X31 - 0x20]!
	0x0335A848 STP X20, X19, [X31 + 0x10]
	0x0335A84C LDR W8, [X0 + 0x18]
	0x0335A850 MOV X19, X0
	0x0335A854 CBNZ W8, 0x335A860
	0x0335A858 LDR W8, [X19 + 0x1C]
	0x0335A85C CBZ W8, 0x335A8D0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xD9A000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xDC4000
	009 Move X0, [X0+104]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call NotSupportedException..ctor, X0, X1
	015 Move X0, 0xDD1000
	016 Move X0, [X0+1648]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Void set_Capacity(System.Int32 value)

Disassembly:
	0x0335A860 BL 0x1C16D44
	0x0335A864 LDR X11, [X19 + 0x10]
	0x0335A868 MOVZ W8, 0x1
	0x0335A86C STRB W8, [X19 + 0x2C]
	0x0335A870 CBZ X11, 0x335A8E0
	0x0335A874 LDR W8, [X11 + 0x18]
	0x0335A878 UBFM X9, X8, 0x20, 0x1F
	0x0335A87C CMP X9, 0x1
	0x0335A880 B.LT 0x335A8B0
	0x0335A884 MOV X9, X31
	0x0335A888 SXTW X10, W8
	0x0335A88C ADD X11, X11, 0x20
	0x0335A890 CMP X9, X8
	0x0335A894 B.CS 0x335A8DC
	0x0335A898 ADD X9, X9, 0x1
	0x0335A89C STP X31, X31, [X11]
	0x0335A8A0 STR W31, [X11 + 0x10]
	0x0335A8A4 CMP X9, X10
	0x0335A8A8 ADD X11, X11, 0x18

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xD9A000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xDC4000
	009 Move X0, [X0+104]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call NotSupportedException..ctor, X0, X1
	015 Move X0, 0xDD1000
	016 Move X0, [X0+1656]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Void Clear()

Disassembly:
	0x0335A8AC B.LT 0x335A890
	0x0335A8B0 LDR W20, [X19 + 0x28]
	0x0335A8B4 STR X31, [X19 + 0x18]
	0x0335A8B8 BL 0x1C16D44
	0x0335A8BC BL 0x1C16D44
	0x0335A8C0 ADD W8, W20, 0x1
	0x0335A8C4 STR W8, [X19 + 0x28]
	0x0335A8C8 BL 0x1C16D44
	0x0335A8CC STRB W31, [X19 + 0x2C]
	0x0335A8D0 LDP X20, X19, [X31 + 0x10]
	0x0335A8D4 LDR X30, [X31], #0x20
	0x0335A8D8 RET
	0x0335A8DC BL 0x1C16F28
	0x0335A8E0 BL 0x1C16F20
	0x0335A8E4 STR X30, [X31 - 0x20]!
	0x0335A8E8 STP X20, X19, [X31 + 0x10]
	0x0335A8EC LDR W20, [X0 + 0x28]
	0x0335A8F0 MOV X19, X0
	0x0335A8F4 BL 0x1C16D44

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xD9A000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xDC4000
	009 Move X0, [X0+104]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call NotSupportedException..ctor, X0, X1
	015 Move X0, 0xDD1000
	016 Move X0, [X0+1664]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Object Clone()

Disassembly:
	0x0335A8F8 BL 0x1C16D44
	0x0335A8FC ADD W8, W20, 0x1
	0x0335A900 STR W8, [X19 + 0x28]
	0x0335A904 LDP X20, X19, [X31 + 0x10]
	0x0335A908 LDR X30, [X31], #0x20
	0x0335A90C RET
	0x0335A910 STP X30, X23, [X31 - 0x30]!
	0x0335A914 STP X22, X21, [X31 + 0x10]
	0x0335A918 STP X20, X19, [X31 + 0x20]
	0x0335A91C ADRP X21, 0x1082000
	0x0335A920 ADRP X19, 0xDC9000
	0x0335A924 LDRB W8, [X21 + 0xE09]
	0x0335A928 LDR X19, [X19 + 0xDB8]
	0x0335A92C MOV X20, X0
	0x0335A930 TBNZ X8, 0x0, 0x335A948
	0x0335A934 ADRP X0, 0xDC9000
	0x0335A938 LDR X0, [X0 + 0xDB8]
	0x0335A93C BL 0x1C16CF4
	0x0335A940 MOVZ W8, 0x1
	0x0335A944 STRB W8, [X21 + 0xE09]
	0x0335A948 LDR X0, [X19]
	0x0335A94C LDR X22, [X20 + 0x10]
	0x0335A950 LDR W21, [X20 + 0x18]
	0x0335A954 LDR X23, [X20 + 0x40]
	0x0335A958 BL 0x1C16F10
	0x0335A95C FMOV S0, 1
	0x0335A960 MOV W1, W21
	0x0335A964 MOV X19, X0
	0x0335A968 BL 0x335A0AC
	0x0335A96C STR X23, [X19 + 0x40]
	0x0335A970 LDR W21, [X20 + 0x28]
	0x0335A974 BL 0x1C16D44
	0x0335A978 BL 0x1C16D44
	0x0335A97C STR W21, [X19 + 0x28]
	0x0335A980 LDR V0, [X20 + 0x24]
	0x0335A984 STR W31, [X19 + 0x18]
	0x0335A988 STR S0, [X19 + 0x24]
	0x0335A98C CBZ X22, 0x335AA1C
	0x0335A990 LDR X8, [X22 + 0x18]
	0x0335A994 CMP W8, 0x1
	0x0335A998 B.LT 0x335AA08
	0x0335A99C AND X9, X8, 0x0
	0x0335A9A0 SXTW X8, W9
	0x0335A9A4 SUB X8, X8, 0x1
	0x0335A9A8 CMP X8, X9
	0x0335A9AC B.CS 0x335AA04
	0x0335A9B0 ADD X20, X8, 0x1
	0x0335A9B4 MOVZ W8, 0x18
	0x0335A9B8 MADD X8, X20, X8, X22
	0x0335A9BC ADD X21, X8, 0x10
	0x0335A9C0 LDUR X1, [X21 - 0x8]
	0x0335A9C4 CBZ X1, 0x335A9E8
	0x0335A9C8 CMP X1, X22
	0x0335A9CC B.EQ 0x335A9E8
	0x0335A9D0 LDR X8, [X19]
	0x0335A9D4 LDR X2, [X21]
	0x0335A9D8 MOV X0, X19
	0x0335A9DC LDR X9, [X8 + 0x2E8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1083000
	006 Move X19, 0xDD1000
	007 Move W8, [X21+3584]
	008 Move X19, [X19+1592]
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xDC7000
	015 Move X0, [X0+2976]
	016 Call 0x1C17CF4
	017 Move X0, 0xDD1000
	018 Move X0, [X0+1592]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3584], W8
	022 Move X0, [X19]
	023 Move X21, [X20+40]
	024 Call 0x1C17F10
	025 Move X19, X0
	026 Call ArrayList..ctor, X0
	027 Move [X19+40], X21
	028 Move X0, [X20+40]
	029 Compare X0, 0
	030 JumpIfEqual {63}
	031 Move X8, [X0]
	032 Move X9, [X8+824]
	033 Move X1, [X8+832]
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Compare X0, 0
	036 JumpIfEqual {56}
	037 Move X8, 0xDC7000
	038 Move X8, [X8+2976]
	039 Move X9, [X0]
	040 Move X1, [X8]
	041 Move W10, [X9+304]
	042 Move W8, [X1+304]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X10, [X9+200]
	045 Subtract X9, X8, 1
	046 Move X10, [X10]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move [X19+40], X0
	049 Move X10, [X0]
	050 Move W11, [X10+304]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X8, [X10+200]
	053 Move X8, [X8]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Call 0x1C181E0
	056 Move [X19+40], X31
	057 Move X0, X19
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move X30, [X31+32]
	061 Move X21, [X31+40]
	062 Return X0
	063 Call 0x1C17F20

Method: System.Boolean Contains(System.Object obj)

Disassembly:
	0x0335A9E0 LDR X3, [X8 + 0x2F0]
	0x0335A9E4 BLR X9
	0x0335A9E8 SUBS X8, X20, 0x2
	0x0335A9EC B.LT 0x335AA08
	0x0335A9F0 LDR W9, [X22 + 0x18]
	0x0335A9F4 SUB X20, X20, 0x1
	0x0335A9F8 SUB X21, X21, 0x18
	0x0335A9FC CMP X8, X9
	0x0335AA00 B.CC 0x335A9C0

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+40]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X3, [X8+840]
	007 Move X2, [X8+848]
	008 Move X30, [X31+16]
	009 CallNoReturn X3
	010 Call 0x1C17F20

Method: System.Void CopyTo(System.Array array, System.Int32 index)

Disassembly:
	0x0335AA04 BL 0x1C16F28
	0x0335AA08 MOV X0, X19
	0x0335AA0C LDP X20, X19, [X31 + 0x20]
	0x0335AA10 LDP X22, X21, [X31 + 0x10]
	0x0335AA14 LDP X30, X23, [X31], #0x30
	0x0335AA18 RET
	0x0335AA1C BL 0x1C16F20
	0x0335AA20 LDR X8, [X0]
	0x0335AA24 LDR X3, [X8 + 0x2B8]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+40]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X4, [X8+872]
	007 Move X3, [X8+880]
	008 Move X30, [X31+16]
	009 CallNoReturn X4
	010 Call 0x1C17F20

Method: System.Void CopyTo(System.Int32 index, System.Array array, System.Int32 arrayIndex, System.Int32 count)

Disassembly:
	0x0335AA28 LDR X2, [X8 + 0x2C0]
	0x0335AA2C BR X3
	0x0335AA30 STP X30, X27, [X31 - 0x50]!
	0x0335AA34 STP X26, X25, [X31 + 0x10]
	0x0335AA38 STP X24, X23, [X31 + 0x20]
	0x0335AA3C STP X22, X21, [X31 + 0x30]
	0x0335AA40 STP X20, X19, [X31 + 0x40]
	0x0335AA44 CBZ X1, 0x335AB34
	0x0335AA48 LDR X21, [X0 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+40]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X6, [X8+888]
	007 Move X5, [X8+896]
	008 Move X30, [X31+16]
	009 CallNoReturn X6
	010 Call 0x1C17F20

Method: System.Collections.IEnumerator GetEnumerator()

Disassembly:
	0x0335AA4C MOV X20, X0
	0x0335AA50 CBZ X21, 0x335AB90
	0x0335AA54 LDR X8, [X20]
	0x0335AA58 LDR W24, [X21 + 0x18]
	0x0335AA5C MOV X0, X20
	0x0335AA60 MOV X19, X1
	0x0335AA64 LDR X9, [X8 + 0x308]
	0x0335AA68 LDR X2, [X8 + 0x310]
	0x0335AA6C BLR X9

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+40]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+904]
	007 Move X1, [X8+912]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Int32 IndexOf(System.Object value)

Disassembly:
	0x0335AA70 LDR X10, [X21 + 0x18]
	0x0335AA74 AND W23, W0, 0x7FFFFFFF
	0x0335AA78 MOVZ W8, 0x65
	0x0335AA7C SUB W9, W24, 0x1
	0x0335AA80 MUL W8, W23, W8
	0x0335AA84 UDIV W11, W8, W9
	0x0335AA88 MSUB W8, W11, W9, W8
	0x0335AA8C UDIV W9, W23, W10
	0x0335AA90 MOV W22, W31

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+40]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X3, [X8+920]
	007 Move X2, [X8+928]
	008 Move X30, [X31+16]
	009 CallNoReturn X3
	010 Call 0x1C17F20

Method: System.Void Insert(System.Int32 index, System.Object obj)

Disassembly:
	0x0335AA94 ADD W24, W8, 0x1
	0x0335AA98 AND X8, X10, 0x0
	0x0335AA9C MSUB W9, W9, W10, W23
	0x0335AAA0 MOVZ W25, 0x18
	0x0335AAA4 CMP W9, W8
	0x0335AAA8 B.CS 0x335AB30
	0x0335AAAC SXTW X26, W9
	0x0335AAB0 MADD X9, X26, X25, X21
	0x0335AAB4 LDR X1, [X9 + 0x20]
	0x0335AAB8 CBZ X1, 0x335AB0C
	0x0335AABC LDR W27, [X9 + 0x30]
	0x0335AAC0 AND W9, W27, 0x7FFFFFFF
	0x0335AAC4 CMP W9, W23
	0x0335AAC8 B.NE 0x335AAEC
	0x0335AACC LDR X8, [X20]
	0x0335AAD0 MOV X0, X20
	0x0335AAD4 MOV X2, X19
	0x0335AAD8 LDR X9, [X8 + 0x328]
	0x0335AADC LDR X3, [X8 + 0x330]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xD9A000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xDC4000
	009 Move X0, [X0+104]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call NotSupportedException..ctor, X0, X1
	015 Move X0, 0xDD1000
	016 Move X0, [X0+1672]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Void InsertRange(System.Int32 index, System.Collections.ICollection c)

Disassembly:
	0x0335AAE0 BLR X9
	0x0335AAE4 TBNZ X0, 0x0, 0x335AB28
	0x0335AAE8 LDR W8, [X21 + 0x18]
	0x0335AAEC TBZ X27, 0x1F, 0x335AB0C
	0x0335AAF0 ADD X9, X26, X24
	0x0335AAF4 AND X10, X8, 0x0
	0x0335AAF8 ADD W22, W22, 0x1
	0x0335AAFC SDIV X10, X9, X10
	0x0335AB00 CMP W22, W8
	0x0335AB04 MSUB W9, W10, W8, W9
	0x0335AB08 B.LT 0x335AAA4
	0x0335AB0C MOV W0, W31
	0x0335AB10 LDP X20, X19, [X31 + 0x40]
	0x0335AB14 LDP X22, X21, [X31 + 0x30]
	0x0335AB18 LDP X24, X23, [X31 + 0x20]
	0x0335AB1C LDP X26, X25, [X31 + 0x10]
	0x0335AB20 LDP X30, X27, [X31], #0x50
	0x0335AB24 RET
	0x0335AB28 MOVZ W0, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xD9A000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xDC4000
	009 Move X0, [X0+104]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call NotSupportedException..ctor, X0, X1
	015 Move X0, 0xDD1000
	016 Move X0, [X0+1680]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Void Remove(System.Object value)

Disassembly:
	0x0335AB2C B 0x335AB10
	0x0335AB30 BL 0x1C16F28
	0x0335AB34 ADRP X0, 0xD9E000
	0x0335AB38 LDR X0, [X0 + 0x528]
	0x0335AB3C BL 0x1C16D08
	0x0335AB40 BL 0x1C16F10
	0x0335AB44 MOV X19, X0
	0x0335AB48 ADRP X0, 0xDC3000
	0x0335AB4C LDR X0, [X0 + 0x70]
	0x0335AB50 BL 0x1C16D08
	0x0335AB54 MOV X20, X0
	0x0335AB58 ADRP X0, 0xDD0000
	0x0335AB5C LDR X0, [X0 + 0x288]
	0x0335AB60 BL 0x1C16D08
	0x0335AB64 MOV X2, X0
	0x0335AB68 MOV X0, X19
	0x0335AB6C MOV X1, X20
	0x0335AB70 MOV X3, X31
	0x0335AB74 BL 0x3315F7C

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xD9A000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xDC4000
	009 Move X0, [X0+104]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call NotSupportedException..ctor, X0, X1
	015 Move X0, 0xDD1000
	016 Move X0, [X0+1688]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Void RemoveAt(System.Int32 index)

Disassembly:
	0x0335AB78 ADRP X0, 0xDD0000
	0x0335AB7C LDR X0, [X0 + 0x700]
	0x0335AB80 BL 0x1C16D08
	0x0335AB84 MOV X1, X0
	0x0335AB88 MOV X0, X19
	0x0335AB8C BL 0x1C16DEC
	0x0335AB90 BL 0x1C16F20
	0x0335AB94 STR X30, [X31 - 0x40]!
	0x0335AB98 STP X24, X23, [X31 + 0x10]
	0x0335AB9C STP X22, X21, [X31 + 0x20]
	0x0335ABA0 STP X20, X19, [X31 + 0x30]
	0x0335ABA4 LDR X22, [X0 + 0x10]
	0x0335ABA8 CBZ X22, 0x335AC34
	0x0335ABAC LDR X8, [X22 + 0x18]
	0x0335ABB0 SUBS W23, W8, 0x1
	0x0335ABB4 B.MI 0x335AC1C
	0x0335ABB8 MOV W19, W2
	0x0335ABBC MOV X20, X0
	0x0335ABC0 MOV X21, X1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xD9A000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xDC4000
	009 Move X0, [X0+104]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call NotSupportedException..ctor, X0, X1
	015 Move X0, 0xDD1000
	016 Move X0, [X0+1696]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Void RemoveRange(System.Int32 index, System.Int32 count)

Disassembly:
	0x0335ABC4 MOVZ W24, 0x18
	0x0335ABC8 CMP W23, W8
	0x0335ABCC B.CS 0x335AC30
	0x0335ABD0 UMADDL X9, X23, X24, X22
	0x0335ABD4 LDR X1, [X9 + 0x20]
	0x0335ABD8 CBZ X1, 0x335ABE8
	0x0335ABDC LDR X9, [X20 + 0x10]
	0x0335ABE0 CMP X1, X9
	0x0335ABE4 B.NE 0x335ABF4
	0x0335ABE8 SUBS W23, W23, 0x1
	0x0335ABEC B.PL 0x335ABC8
	0x0335ABF0 B 0x335AC1C
	0x0335ABF4 CBZ X21, 0x335AC34
	0x0335ABF8 MOV X0, X21
	0x0335ABFC MOV W2, W19
	0x0335AC00 MOV X3, X31
	0x0335AC04 BL 0x339F798
	0x0335AC08 SUBS W23, W23, 0x1
	0x0335AC0C B.MI 0x335AC1C

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xD9A000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xDC4000
	009 Move X0, [X0+104]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call NotSupportedException..ctor, X0, X1
	015 Move X0, 0xDD1000
	016 Move X0, [X0+1704]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Object[] ToArray()

Disassembly:
	0x0335AC10 LDR X8, [X22 + 0x18]
	0x0335AC14 ADD W19, W19, 0x1
	0x0335AC18 B 0x335ABC8
	0x0335AC1C LDP X20, X19, [X31 + 0x30]
	0x0335AC20 LDP X22, X21, [X31 + 0x20]
	0x0335AC24 LDP X24, X23, [X31 + 0x10]
	0x0335AC28 LDR X30, [X31], #0x40
	0x0335AC2C RET
	0x0335AC30 BL 0x1C16F28

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+40]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+1016]
	007 Move X1, [X8+1024]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Array ToArray(System.Type type)

Disassembly:
	0x0335AC34 BL 0x1C16F20
	0x0335AC38 SUB X31, X31, 0x50
	0x0335AC3C STP X30, X25, [X31 + 0x10]
	0x0335AC40 STP X24, X23, [X31 + 0x20]
	0x0335AC44 STP X22, X21, [X31 + 0x30]
	0x0335AC48 STP X20, X19, [X31 + 0x40]
	0x0335AC4C ADRP X22, 0x1082000
	0x0335AC50 LDRB W8, [X22 + 0xE0A]
	0x0335AC54 MOV W19, W2

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+40]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X3, [X8+1032]
	007 Move X2, [X8+1040]
	008 Move X30, [X31+16]
	009 CallNoReturn X3
	010 Call 0x1C17F20

