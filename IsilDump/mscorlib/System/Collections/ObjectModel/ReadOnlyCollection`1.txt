Type: System.Collections.ObjectModel.ReadOnlyCollection`1

Method: System.Void .ctor(System.Collections.Generic.IList`1<T> list)

Disassembly:
	0x025009F8 B.EQ 0x2500A18
	0x025009FC SUBS X9, X9, 0x1
	0x02500A00 ADD X10, X10, 0x10
	0x02500A04 B.NE 0x25009F0
	0x02500A08 MOVZ W2, 0x5
	0x02500A0C MOV X0, X21
	0x02500A10 BL 0x1C5C788
	0x02500A14 B 0x2500A28
	0x02500A18 LDR W9, [X10]
	0x02500A1C ADD W9, W9, 0x5
	0x02500A20 ADD X8, X8, W9, 0x4, SXTW
	0x02500A24 ADD X0, X8, 0x138
	0x02500A28 LDP X4, X3, [X0]
	0x02500A2C MOV X1, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Compare X19, 0
	009 JumpIfNotEqual {13}
	010 Move W0, 7
	011 Move X1, X31
	012 Call ThrowHelper.ThrowArgumentNullException, X0
	013 Move [X20+16], X19
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X30, [X31+32]
	017 Return 

Method: System.Int32 get_Count()

Disassembly:
	0x02500A30 MOV W2, W19
	0x02500A34 LDP X20, X19, [X31 + 0x10]
	0x02500A38 MOV X0, X21
	0x02500A3C LDP X30, X21, [X31], #0x20
	0x02500A40 BR X4
	0x02500A44 BL 0x1C16F20
	0x02500A48 STP X30, X19, [X31 - 0x10]!
	0x02500A4C LDR X19, [X0 + 0x10]
	0x02500A50 CBZ X19, 0x2500ACC
	0x02500A54 LDR X8, [X1 + 0x20]
	0x02500A58 LDR X8, [X8 + 0xC0]
	0x02500A5C LDR X1, [X8 + 0x48]
	0x02500A60 LDRB W8, [X1 + 0x135]
	0x02500A64 TBNZ X8, 0x0, 0x2500A74
	0x02500A68 MOV X0, X1
	0x02500A6C BL 0x1C5C684
	0x02500A70 MOV X1, X0
	0x02500A74 LDR X8, [X19]
	0x02500A78 LDRH W9, [X8 + 0x12E]
	0x02500A7C CBZ X9, 0x2500AA0
	0x02500A80 LDR X10, [X8 + 0xB0]
	0x02500A84 ADD X10, X10, 0x8
	0x02500A88 LDUR X11, [X10 - 0x8]
	0x02500A8C CMP X11, X1
	0x02500A90 B.EQ 0x2500AB0
	0x02500A94 SUBS X9, X9, 0x1
	0x02500A98 ADD X10, X10, 0x10
	0x02500A9C B.NE 0x2500A88
	0x02500AA0 MOV X0, X19
	0x02500AA4 MOV W2, W31
	0x02500AA8 BL 0x1C5C788
	0x02500AAC B 0x2500ABC
	0x02500AB0 LDRSW X9, [X10]
	0x02500AB4 ADD X8, X8, X9, 0x4, LSL

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, [X0+16]
	004 Compare X19, 0
	005 JumpIfEqual {39}
	006 Move X8, [X1+32]
	007 Move X8, [X8+192]
	008 Move X1, [X8+16]
	009 Move W8, [X1+309]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X1
	015 Call 0x1C5D684
	016 Move X1, X0
	017 Move X8, [X19]
	018 NotImplemented "Instruction LDRH not yet implemented."
	019 Compare X9, 0
	020 JumpIfEqual {27}
	021 Move X10, [X8+176]
	022 Add X10, X10, 8
	023 NotImplemented "Instruction LDUR not yet implemented."
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Subtract X9, X9, 1
	026 Add X10, X10, 16
	027 Move X0, X19
	028 Move W2, W31
	029 Call 0x1C5D788
	030 NotImplemented "Instruction LDRSW not yet implemented."
	031 Add X8, X8, X9
	032 Add X0, X8, 312
	033 Move X2, [X0]
	034 Move X1, [X0+8]
	035 Move X0, X19
	036 Move X30, [X31+16]
	037 Move X19, [X31+24]
	038 CallNoReturn X2
	039 Call 0x1C17F20

Method: T get_Item(System.Int32 index)

Disassembly:
	0x02500AB8 ADD X0, X8, 0x138
	0x02500ABC LDP X2, X1, [X0]
	0x02500AC0 MOV X0, X19
	0x02500AC4 LDP X30, X19, [X31], #0x10
	0x02500AC8 BR X2
	0x02500ACC BL 0x1C16F20
	0x02500AD0 STR X30, [X31 - 0x20]!
	0x02500AD4 STP X20, X19, [X31 + 0x10]
	0x02500AD8 LDR X20, [X0 + 0x10]
	0x02500ADC CBZ X20, 0x2500B68
	0x02500AE0 LDR X8, [X2 + 0x20]
	0x02500AE4 MOV X19, X1
	0x02500AE8 LDR X8, [X8 + 0xC0]
	0x02500AEC LDR X1, [X8]
	0x02500AF0 LDRB W8, [X1 + 0x135]
	0x02500AF4 TBNZ X8, 0x0, 0x2500B04
	0x02500AF8 MOV X0, X1
	0x02500AFC BL 0x1C5C684
	0x02500B00 MOV X1, X0
	0x02500B04 LDR X8, [X20]
	0x02500B08 LDRH W9, [X8 + 0x12E]
	0x02500B0C CBZ X9, 0x2500B30
	0x02500B10 LDR X10, [X8 + 0xB0]
	0x02500B14 ADD X10, X10, 0x8
	0x02500B18 LDUR X11, [X10 - 0x8]
	0x02500B1C CMP X11, X1
	0x02500B20 B.EQ 0x2500B40
	0x02500B24 SUBS X9, X9, 0x1
	0x02500B28 ADD X10, X10, 0x10
	0x02500B2C B.NE 0x2500B18
	0x02500B30 MOVZ W2, 0x2
	0x02500B34 MOV X0, X20
	0x02500B38 BL 0x1C5C788
	0x02500B3C B 0x2500B50
	0x02500B40 LDR W9, [X10]
	0x02500B44 ADD W9, W9, 0x2
	0x02500B48 ADD X8, X8, W9, 0x4, SXTW
	0x02500B4C ADD X0, X8, 0x138

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, [X0+16]
	005 Compare X20, 0
	006 JumpIfEqual {43}
	007 Move X8, [X2+32]
	008 Move W19, W1
	009 Move X8, [X8+192]
	010 Move X1, [X8]
	011 Move W8, [X1+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {19}
	016 Move X0, X1
	017 Call 0x1C5D684
	018 Move X1, X0
	019 Move X8, [X20]
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Compare X9, 0
	022 JumpIfEqual {29}
	023 Move X10, [X8+176]
	024 Add X10, X10, 8
	025 NotImplemented "Instruction LDUR not yet implemented."
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Subtract X9, X9, 1
	028 Add X10, X10, 16
	029 Move X0, X20
	030 Move W2, W31
	031 Call 0x1C5D788
	032 NotImplemented "Instruction LDRSW not yet implemented."
	033 Add X8, X8, X9
	034 Add X0, X8, 312
	035 Move X3, [X0]
	036 Move X2, [X0+8]
	037 Move X0, X20
	038 Move W1, W19
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 CallNoReturn X3
	043 Call 0x1C17F20

Method: System.Boolean Contains(T value)

Disassembly:
	0x02500B50 LDP X3, X2, [X0]
	0x02500B54 MOV X0, X20
	0x02500B58 MOV X1, X19
	0x02500B5C LDP X20, X19, [X31 + 0x10]
	0x02500B60 LDR X30, [X31], #0x20
	0x02500B64 BR X3
	0x02500B68 BL 0x1C16F20
	0x02500B6C MOVZ W0, 0x1
	0x02500B70 RET
	0x02500B74 STR X30, [X31 - 0x20]!
	0x02500B78 STP X20, X19, [X31 + 0x10]
	0x02500B7C LDR X20, [X0 + 0x10]
	0x02500B80 CBZ X20, 0x2500C08
	0x02500B84 LDR X8, [X2 + 0x20]
	0x02500B88 MOV W19, W1
	0x02500B8C LDR X8, [X8 + 0xC0]
	0x02500B90 LDR X1, [X8]
	0x02500B94 LDRB W8, [X1 + 0x135]
	0x02500B98 TBNZ X8, 0x0, 0x2500BA8
	0x02500B9C MOV X0, X1
	0x02500BA0 BL 0x1C5C684
	0x02500BA4 MOV X1, X0
	0x02500BA8 LDR X8, [X20]
	0x02500BAC LDRH W9, [X8 + 0x12E]
	0x02500BB0 CBZ X9, 0x2500BD4
	0x02500BB4 LDR X10, [X8 + 0xB0]
	0x02500BB8 ADD X10, X10, 0x8
	0x02500BBC LDUR X11, [X10 - 0x8]
	0x02500BC0 CMP X11, X1
	0x02500BC4 B.EQ 0x2500BE4
	0x02500BC8 SUBS X9, X9, 0x1
	0x02500BCC ADD X10, X10, 0x10
	0x02500BD0 B.NE 0x2500BBC
	0x02500BD4 MOV X0, X20
	0x02500BD8 MOV W2, W31
	0x02500BDC BL 0x1C5C788
	0x02500BE0 B 0x2500BF0
	0x02500BE4 LDRSW X9, [X10]
	0x02500BE8 ADD X8, X8, X9, 0x4, LSL

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, [X0+16]
	005 Compare X20, 0
	006 JumpIfEqual {44}
	007 Move X8, [X2+32]
	008 Move X19, X1
	009 Move X8, [X8+192]
	010 Move X1, [X8+16]
	011 Move W8, [X1+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {19}
	016 Move X0, X1
	017 Call 0x1C5D684
	018 Move X1, X0
	019 Move X8, [X20]
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Compare X9, 0
	022 JumpIfEqual {29}
	023 Move X10, [X8+176]
	024 Add X10, X10, 8
	025 NotImplemented "Instruction LDUR not yet implemented."
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Subtract X9, X9, 1
	028 Add X10, X10, 16
	029 Move W2, 4
	030 Move X0, X20
	031 Call 0x1C5D788
	032 Move W9, [X10]
	033 Add W9, W9, 4
	034 Add X8, X8, W9
	035 Add X0, X8, 312
	036 Move X3, [X0]
	037 Move X2, [X0+8]
	038 Move X0, X20
	039 Move X1, X19
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 CallNoReturn X3
	044 Call 0x1C17F20

Method: System.Void CopyTo(T[] array, System.Int32 index)

Disassembly:
	0x02500BEC ADD X0, X8, 0x138
	0x02500BF0 LDP X3, X2, [X0]
	0x02500BF4 MOV X0, X20
	0x02500BF8 MOV W1, W19
	0x02500BFC LDP X20, X19, [X31 + 0x10]
	0x02500C00 LDR X30, [X31], #0x20
	0x02500C04 BR X3
	0x02500C08 BL 0x1C16F20
	0x02500C0C MOVZ W0, 0x1C
	0x02500C10 MOV X1, X31
	0x02500C14 B 0x339E04C
	0x02500C18 MOVZ W0, 0x1C
	0x02500C1C MOV X1, X31
	0x02500C20 B 0x339E04C
	0x02500C24 MOVZ W0, 0x1C
	0x02500C28 MOV X1, X31
	0x02500C2C B 0x339E04C
	0x02500C30 MOVZ W0, 0x1C
	0x02500C34 MOV X1, X31
	0x02500C38 B 0x339E04C
	0x02500C3C STR X30, [X31 - 0x10]!
	0x02500C40 MOVZ W0, 0x1C
	0x02500C44 MOV X1, X31
	0x02500C48 BL 0x339E04C
	0x02500C4C MOV W0, W31
	0x02500C50 LDR X30, [X31], #0x10
	0x02500C54 RET
	0x02500C58 MOVZ W0, 0x1C
	0x02500C5C MOV X1, X31
	0x02500C60 B 0x339E04C
	0x02500C64 STR X30, [X31 - 0x20]!
	0x02500C68 STP X20, X19, [X31 + 0x10]
	0x02500C6C ADRP X20, 0x1ED9000
	0x02500C70 LDRB W8, [X20 + 0xCAC]
	0x02500C74 MOV X19, X0
	0x02500C78 TBNZ X8, 0x0, 0x2500C90
	0x02500C7C ADRP X0, 0x1BFB000
	0x02500C80 LDR X0, [X0 + 0xDB8]
	0x02500C84 BL 0x1C16CF4
	0x02500C88 MOVZ W8, 0x1
	0x02500C8C STRB W8, [X20 + 0xCAC]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, [X0+16]
	006 Compare X21, 0
	007 JumpIfEqual {48}
	008 Move X8, [X3+32]
	009 Move X20, X1
	010 Move W19, W2
	011 Move X8, [X8+192]
	012 Move X1, [X8+16]
	013 Move W8, [X1+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {21}
	018 Move X0, X1
	019 Call 0x1C5D684
	020 Move X1, X0
	021 Move X8, [X21]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Compare X9, 0
	024 JumpIfEqual {31}
	025 Move X10, [X8+176]
	026 Add X10, X10, 8
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Subtract X9, X9, 1
	030 Add X10, X10, 16
	031 Move W2, 5
	032 Move X0, X21
	033 Call 0x1C5D788
	034 Move W9, [X10]
	035 Add W9, W9, 5
	036 Add X8, X8, W9
	037 Add X0, X8, 312
	038 Move X4, [X0]
	039 Move X3, [X0+8]
	040 Move X1, X20
	041 Move W2, W19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X0, X21
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 CallNoReturn X4
	048 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerator`1<T> GetEnumerator()

Disassembly:
	0x02500C90 LDR X19, [X19 + 0x10]
	0x02500C94 CBZ X19, 0x2500D00
	0x02500C98 ADRP X10, 0x1BFB000
	0x02500C9C LDR X8, [X19]
	0x02500CA0 LDR X10, [X10 + 0xDB8]
	0x02500CA4 LDRH W9, [X8 + 0x12E]
	0x02500CA8 LDR X1, [X10]
	0x02500CAC CBZ X9, 0x2500CD0
	0x02500CB0 LDR X10, [X8 + 0xB0]
	0x02500CB4 ADD X10, X10, 0x8
	0x02500CB8 LDUR X11, [X10 - 0x8]
	0x02500CBC CMP X11, X1
	0x02500CC0 B.EQ 0x2500CE0
	0x02500CC4 SUBS X9, X9, 0x1
	0x02500CC8 ADD X10, X10, 0x10
	0x02500CCC B.NE 0x2500CB8
	0x02500CD0 MOV X0, X19
	0x02500CD4 MOV W2, W31
	0x02500CD8 BL 0x1C5C788
	0x02500CDC B 0x2500CEC
	0x02500CE0 LDRSW X9, [X10]
	0x02500CE4 ADD X8, X8, X9, 0x4, LSL
	0x02500CE8 ADD X0, X8, 0x138
	0x02500CEC LDP X2, X1, [X0]
	0x02500CF0 MOV X0, X19
	0x02500CF4 LDP X20, X19, [X31 + 0x10]
	0x02500CF8 LDR X30, [X31], #0x20
	0x02500CFC BR X2
	0x02500D00 BL 0x1C16F20
	0x02500D04 MOV W0, W31
	0x02500D08 RET
	0x02500D0C STP X30, X21, [X31 - 0x20]!
	0x02500D10 STP X20, X19, [X31 + 0x10]
	0x02500D14 ADRP X19, 0x1ED9000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, [X0+16]
	004 Compare X19, 0
	005 JumpIfEqual {39}
	006 Move X8, [X1+32]
	007 Move X8, [X8+192]
	008 Move X1, [X8+72]
	009 Move W8, [X1+309]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X1
	015 Call 0x1C5D684
	016 Move X1, X0
	017 Move X8, [X19]
	018 NotImplemented "Instruction LDRH not yet implemented."
	019 Compare X9, 0
	020 JumpIfEqual {27}
	021 Move X10, [X8+176]
	022 Add X10, X10, 8
	023 NotImplemented "Instruction LDUR not yet implemented."
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Subtract X9, X9, 1
	026 Add X10, X10, 16
	027 Move X0, X19
	028 Move W2, W31
	029 Call 0x1C5D788
	030 NotImplemented "Instruction LDRSW not yet implemented."
	031 Add X8, X8, X9
	032 Add X0, X8, 312
	033 Move X2, [X0]
	034 Move X1, [X0+8]
	035 Move X0, X19
	036 Move X30, [X31+16]
	037 Move X19, [X31+24]
	038 CallNoReturn X2
	039 Call 0x1C17F20

Method: System.Int32 IndexOf(T value)

Disassembly:
	0x02500D18 LDRB W8, [X19 + 0xCAD]
	0x02500D1C MOV X20, X0
	0x02500D20 TBNZ X8, 0x0, 0x2500D44
	0x02500D24 ADRP X0, 0x1BFA000
	0x02500D28 LDR X0, [X0 + 0x2F0]
	0x02500D2C BL 0x1C16CF4
	0x02500D30 ADRP X0, 0x1BF9000
	0x02500D34 LDR X0, [X0 + 0xCC0]
	0x02500D38 BL 0x1C16CF4
	0x02500D3C MOVZ W8, 0x1
	0x02500D40 STRB W8, [X19 + 0xCAD]
	0x02500D44 MOV X19, X20
	0x02500D48 LDR X0, [X19 + 0x18]!
	0x02500D4C CBNZ X0, 0x2500E00
	0x02500D50 ADRP X21, 0x1BFA000
	0x02500D54 LDR X0, [X20 + 0x10]
	0x02500D58 LDR X21, [X21 + 0x2F0]
	0x02500D5C LDR X1, [X21]
	0x02500D60 BL 0x1C16E00
	0x02500D64 CBZ X0, 0x2500DAC
	0x02500D68 LDR X8, [X0]
	0x02500D6C LDR X1, [X21]
	0x02500D70 MOV X20, X0
	0x02500D74 LDRH W9, [X8 + 0x12E]
	0x02500D78 CBZ X9, 0x2500D9C
	0x02500D7C LDR X10, [X8 + 0xB0]
	0x02500D80 ADD X10, X10, 0x8
	0x02500D84 LDUR X11, [X10 - 0x8]
	0x02500D88 CMP X11, X1
	0x02500D8C B.EQ 0x2500DE0
	0x02500D90 SUBS X9, X9, 0x1
	0x02500D94 ADD X10, X10, 0x10
	0x02500D98 B.NE 0x2500D84
	0x02500D9C MOVZ W2, 0x2
	0x02500DA0 MOV X0, X20
	0x02500DA4 BL 0x1C5C788
	0x02500DA8 B 0x2500DF0
	0x02500DAC ADRP X8, 0x1BF9000
	0x02500DB0 LDR X8, [X8 + 0xCC0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, [X0+16]
	005 Compare X20, 0
	006 JumpIfEqual {44}
	007 Move X8, [X2+32]
	008 Move X19, X1
	009 Move X8, [X8+192]
	010 Move X1, [X8]
	011 Move W8, [X1+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {19}
	016 Move X0, X1
	017 Call 0x1C5D684
	018 Move X1, X0
	019 Move X8, [X20]
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Compare X9, 0
	022 JumpIfEqual {29}
	023 Move X10, [X8+176]
	024 Add X10, X10, 8
	025 NotImplemented "Instruction LDUR not yet implemented."
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Subtract X9, X9, 1
	028 Add X10, X10, 16
	029 Move W2, 2
	030 Move X0, X20
	031 Call 0x1C5D788
	032 Move W9, [X10]
	033 Add W9, W9, 2
	034 Add X8, X8, W9
	035 Add X0, X8, 312
	036 Move X3, [X0]
	037 Move X2, [X0+8]
	038 Move X0, X20
	039 Move X1, X19
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 CallNoReturn X3
	044 Call 0x1C17F20

Method: System.Boolean System.Collections.Generic.ICollection<T>.get_IsReadOnly()

Disassembly:
	0x02500DB4 LDR X0, [X8]
	0x02500DB8 BL 0x1C16F10

ISIL:
	001 Move W0, 1
	002 Return X0

Method: T System.Collections.Generic.IList<T>.get_Item(System.Int32 index)

Disassembly:
	0x02500DBC MOV X1, X31
	0x02500DC0 MOV X20, X0
	0x02500DC4 BL 0x33BDD8C
	0x02500DC8 MOV X0, X19
	0x02500DCC MOV X1, X20
	0x02500DD0 MOV X2, X31
	0x02500DD4 BL 0x1C24138
	0x02500DD8 LDR X0, [X19]
	0x02500DDC B 0x2500E00
	0x02500DE0 LDR W9, [X10]
	0x02500DE4 ADD W9, W9, 0x2
	0x02500DE8 ADD X8, X8, W9, 0x4, SXTW
	0x02500DEC ADD X0, X8, 0x138
	0x02500DF0 LDP X8, X1, [X0]
	0x02500DF4 MOV X0, X20
	0x02500DF8 BLR X8
	0x02500DFC STR X0, [X19]
	0x02500E00 LDP X20, X19, [X31 + 0x10]
	0x02500E04 LDP X30, X21, [X31], #0x20
	0x02500E08 RET
	0x02500E0C SUB X31, X31, 0x50
	0x02500E10 STP X30, X25, [X31 + 0x10]
	0x02500E14 STP X24, X23, [X31 + 0x20]
	0x02500E18 STP X22, X21, [X31 + 0x30]
	0x02500E1C STP X20, X19, [X31 + 0x40]
	0x02500E20 ADRP X23, 0x1ED9000
	0x02500E24 LDRB W8, [X23 + 0xCAE]
	0x02500E28 MOV X20, X3
	0x02500E2C MOV W19, W2
	0x02500E30 MOV X22, X1
	0x02500E34 MOV X21, X0
	0x02500E38 TBNZ X8, 0x0, 0x2500E5C
	0x02500E3C ADRP X0, 0x1BF3000
	0x02500E40 LDR X0, [X0 + 0x9D0]
	0x02500E44 BL 0x1C16CF4
	0x02500E48 ADRP X0, 0x1BF3000
	0x02500E4C LDR X0, [X0 + 0x6C0]
	0x02500E50 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, [X0+16]
	005 Compare X20, 0
	006 JumpIfEqual {43}
	007 Move X8, [X2+32]
	008 Move W19, W1
	009 Move X8, [X8+192]
	010 Move X1, [X8]
	011 Move W8, [X1+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {19}
	016 Move X0, X1
	017 Call 0x1C5D684
	018 Move X1, X0
	019 Move X8, [X20]
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Compare X9, 0
	022 JumpIfEqual {29}
	023 Move X10, [X8+176]
	024 Add X10, X10, 8
	025 NotImplemented "Instruction LDUR not yet implemented."
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Subtract X9, X9, 1
	028 Add X10, X10, 16
	029 Move X0, X20
	030 Move W2, W31
	031 Call 0x1C5D788
	032 NotImplemented "Instruction LDRSW not yet implemented."
	033 Add X8, X8, X9
	034 Add X0, X8, 312
	035 Move X3, [X0]
	036 Move X2, [X0+8]
	037 Move X0, X20
	038 Move W1, W19
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 CallNoReturn X3
	043 Call 0x1C17F20

Method: System.Void System.Collections.Generic.IList<T>.set_Item(System.Int32 index, T value)

Disassembly:
	0x02500E54 MOVZ W8, 0x1
	0x02500E58 STRB W8, [X23 + 0xCAE]
	0x02500E5C CBZ X22, 0x2501210

ISIL:
	001 Move W0, 28
	002 Move X1, X31
	003 Call ThrowHelper.ThrowNotSupportedException, X0
	004 Return 

Method: System.Void System.Collections.Generic.ICollection<T>.Add(T value)

Disassembly:
	0x02500E60 MOV X0, X22
	0x02500E64 MOV X1, X31
	0x02500E68 BL 0x339FCE4

ISIL:
	001 Move W0, 28
	002 Move X1, X31
	003 Call ThrowHelper.ThrowNotSupportedException, X0
	004 Return 

Method: System.Void System.Collections.Generic.ICollection<T>.Clear()

Disassembly:
	0x02500E6C CMP W0, 0x1
	0x02500E70 B.EQ 0x2500E80
	0x02500E74 MOVZ W0, 0x7

ISIL:
	001 Move W0, 28
	002 Move X1, X31
	003 Call ThrowHelper.ThrowNotSupportedException, X0
	004 Return 

Method: System.Void System.Collections.Generic.IList<T>.Insert(System.Int32 index, T value)

Disassembly:
	0x02500E78 MOV X1, X31
	0x02500E7C BL 0x339DA4C
	0x02500E80 MOV X0, X22

ISIL:
	001 Move W0, 28
	002 Move X1, X31
	003 Call ThrowHelper.ThrowNotSupportedException, X0
	004 Return 

Method: System.Boolean System.Collections.Generic.ICollection<T>.Remove(T value)

Disassembly:
	0x02500E84 MOV W1, W31
	0x02500E88 MOV X2, X31
	0x02500E8C BL 0x339FA30
	0x02500E90 CBZ W0, 0x2500EA0
	0x02500E94 MOVZ W0, 0x6
	0x02500E98 MOV X1, X31
	0x02500E9C BL 0x339DA4C

ISIL:
	001 Move [X31-16], X30
	002 Move W0, 28
	003 Move X1, X31
	004 Call ThrowHelper.ThrowNotSupportedException, X0
	005 Move W0, W31
	006 Move X30, [X31+16]
	007 Return X0

Method: System.Void System.Collections.Generic.IList<T>.RemoveAt(System.Int32 index)

Disassembly:
	0x02500EA0 TBZ X19, 0x1F, 0x2500EAC
	0x02500EA4 MOV X0, X31
	0x02500EA8 BL 0x339E2CC

ISIL:
	001 Move W0, 28
	002 Move X1, X31
	003 Call ThrowHelper.ThrowNotSupportedException, X0
	004 Return 

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x02500EAC MOV X0, X22
	0x02500EB0 MOV X1, X31
	0x02500EB4 BL 0x3395B7C
	0x02500EB8 LDR X8, [X20 + 0x20]
	0x02500EBC MOV W23, W0
	0x02500EC0 MOV X0, X21
	0x02500EC4 LDR X8, [X8 + 0xC0]
	0x02500EC8 LDR X1, [X8 + 0x68]
	0x02500ECC BL 0x25007E8
	0x02500ED0 SUB W8, W23, W19
	0x02500ED4 CMP W8, W0
	0x02500ED8 B.GE 0x2500EE8
	0x02500EDC MOVZ W0, 0x5
	0x02500EE0 MOV X1, X31
	0x02500EE4 BL 0x339DA4C
	0x02500EE8 LDR X8, [X20 + 0x20]
	0x02500EEC LDR X8, [X8 + 0xC0]
	0x02500EF0 LDR X1, [X8 + 0x38]
	0x02500EF4 LDRB W8, [X1 + 0x135]
	0x02500EF8 TBNZ X8, 0x0, 0x2500F08
	0x02500EFC MOV X0, X1
	0x02500F00 BL 0x1C5C684
	0x02500F04 MOV X1, X0
	0x02500F08 MOV X0, X22
	0x02500F0C BL 0x1C16E00
	0x02500F10 CBZ X0, 0x2500F7C
	0x02500F14 LDR X21, [X21 + 0x10]
	0x02500F18 CBZ X21, 0x250121C
	0x02500F1C LDR X8, [X20 + 0x20]
	0x02500F20 MOV X23, X0
	0x02500F24 LDR X8, [X8 + 0xC0]
	0x02500F28 LDR X1, [X8 + 0x10]
	0x02500F2C LDRB W8, [X1 + 0x135]
	0x02500F30 TBNZ X8, 0x0, 0x2500F40
	0x02500F34 MOV X0, X1
	0x02500F38 BL 0x1C5C684
	0x02500F3C MOV X1, X0
	0x02500F40 LDR X8, [X21]
	0x02500F44 LDRH W9, [X8 + 0x12E]
	0x02500F48 CBZ X9, 0x2500F6C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1EDA000
	005 Move W8, [X20+3241]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x1BFC000
	012 Move X0, [X0+3512]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3241], W8
	016 Move X19, [X19+16]
	017 Compare X19, 0
	018 JumpIfEqual {45}
	019 Move X10, 0x1BFC000
	020 Move X8, [X19]
	021 Move X10, [X10+3512]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Move X1, [X10]
	024 Compare X9, 0
	025 JumpIfEqual {32}
	026 Move X10, [X8+176]
	027 Add X10, X10, 8
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Subtract X9, X9, 1
	031 Add X10, X10, 16
	032 Move X0, X19
	033 Move W2, W31
	034 Call 0x1C5D788
	035 NotImplemented "Instruction LDRSW not yet implemented."
	036 Add X8, X8, X9
	037 Add X0, X8, 312
	038 Move X2, [X0]
	039 Move X1, [X0+8]
	040 Move X0, X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 CallNoReturn X2
	045 Call 0x1C17F20

Method: System.Boolean System.Collections.ICollection.get_IsSynchronized()

Disassembly:
	0x02500F4C LDR X10, [X8 + 0xB0]
	0x02500F50 ADD X10, X10, 0x8

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Object System.Collections.ICollection.get_SyncRoot()

Disassembly:
	0x02500F54 LDUR X11, [X10 - 0x8]
	0x02500F58 CMP X11, X1
	0x02500F5C B.EQ 0x25010A4
	0x02500F60 SUBS X9, X9, 0x1
	0x02500F64 ADD X10, X10, 0x10
	0x02500F68 B.NE 0x2500F54
	0x02500F6C MOVZ W2, 0x5
	0x02500F70 MOV X0, X21
	0x02500F74 BL 0x1C5C788
	0x02500F78 B 0x25010B4
	0x02500F7C MOV X0, X22
	0x02500F80 MOV X1, X31
	0x02500F84 BL 0x33BE520
	0x02500F88 CBZ X0, 0x250121C
	0x02500F8C LDR X8, [X0]
	0x02500F90 LDR X9, [X8 + 0x428]
	0x02500F94 LDR X1, [X8 + 0x430]
	0x02500F98 BLR X9
	0x02500F9C ADRP X8, 0x1BF3000
	0x02500FA0 LDR X9, [X20 + 0x20]
	0x02500FA4 LDR X8, [X8 + 0x6C0]
	0x02500FA8 MOV X23, X0
	0x02500FAC LDR X9, [X9 + 0xC0]
	0x02500FB0 LDR X8, [X8]
	0x02500FB4 LDR X24, [X9 + 0x70]
	0x02500FB8 LDR W10, [X8 + 0xE0]
	0x02500FBC CBNZ W10, 0x2500FC8
	0x02500FC0 MOV X0, X8
	0x02500FC4 BL 0x1C16DFC
	0x02500FC8 MOV X0, X24
	0x02500FCC MOV X1, X31
	0x02500FD0 BL 0x338C698
	0x02500FD4 CBZ X23, 0x250121C
	0x02500FD8 LDR X8, [X23]
	0x02500FDC MOV X24, X0
	0x02500FE0 MOV X0, X23
	0x02500FE4 MOV X1, X24
	0x02500FE8 LDR X9, [X8 + 0x2A8]
	0x02500FEC LDR X2, [X8 + 0x2B0]
	0x02500FF0 BLR X9
	0x02500FF4 TBNZ X0, 0x0, 0x2501020
	0x02500FF8 CBZ X24, 0x250121C
	0x02500FFC LDR X8, [X24]
	0x02501000 MOV X0, X24
	0x02501004 MOV X1, X23
	0x02501008 LDR X9, [X8 + 0x2A8]
	0x0250100C LDR X2, [X8 + 0x2B0]
	0x02501010 BLR X9
	0x02501014 TBNZ X0, 0x0, 0x2501020
	0x02501018 MOV X0, X31
	0x0250101C BL 0x339E304
	0x02501020 ADRP X8, 0x1BF2000
	0x02501024 LDR X8, [X8 + 0x9D0]
	0x02501028 MOV X0, X22
	0x0250102C LDR X1, [X8]
	0x02501030 BL 0x1C16E00
	0x02501034 MOV X22, X0
	0x02501038 CBNZ X0, 0x2501040
	0x0250103C BL 0x339E304
	0x02501040 LDR X23, [X21 + 0x10]
	0x02501044 CBZ X23, 0x250121C
	0x02501048 LDR X8, [X20 + 0x20]
	0x0250104C LDR X8, [X8 + 0xC0]
	0x02501050 LDR X1, [X8 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x1EDA000
	006 Move W8, [X19+3242]
	007 Move X20, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x1BFB000
	013 Move X0, [X0+752]
	014 Call 0x1C17CF4
	015 Move X0, 0x1BFA000
	016 Move X0, [X0+3264]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+3242], W8
	020 Move X19, X20
	021 Add X19, X19, 24
	022 Move X0, [X19]
	023 Compare X0, 0
	024 JumpIfNotEqual {68}
	025 Move X21, 0x1BFB000
	026 Move X0, [X20+16]
	027 Move X21, [X21+752]
	028 Move X1, [X21]
	029 Call 0x1C17E00
	030 Compare X0, 0
	031 JumpIfEqual {47}
	032 Move X8, [X0]
	033 Move X1, [X21]
	034 Move X20, X0
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 Compare X9, 0
	037 JumpIfEqual {44}
	038 Move X10, [X8+176]
	039 Add X10, X10, 8
	040 NotImplemented "Instruction LDUR not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Subtract X9, X9, 1
	043 Add X10, X10, 16
	044 Move W2, 2
	045 Move X0, X20
	046 Call 0x1C5D788
	047 Move X8, 0x1BFA000
	048 Move X8, [X8+3264]
	049 Move X0, [X8]
	050 Call 0x1C17F10
	051 Move X1, X31
	052 Move X20, X0
	053 Call Object..ctor, X0
	054 Move X0, X19
	055 Move X1, X20
	056 Move X2, X31
	057 Call 0x1C25138
	058 Move X0, [X19]
	059 Move W9, [X10]
	060 Add W9, W9, 2
	061 Add X8, X8, W9
	062 Add X0, X8, 312
	063 Move X8, [X0]
	064 Move X1, [X0+8]
	065 Move X0, X20
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Move [X19], X0
	068 Move X20, [X31+16]
	069 Move X19, [X31+24]
	070 Move X30, [X31+32]
	071 Move X21, [X31+40]
	072 Return X0

Method: System.Void System.Collections.ICollection.CopyTo(System.Array array, System.Int32 index)

Disassembly:
	0x02501054 LDRB W8, [X1 + 0x135]
	0x02501058 TBNZ X8, 0x0, 0x2501068
	0x0250105C MOV X0, X1
	0x02501060 BL 0x1C5C684
	0x02501064 MOV X1, X0
	0x02501068 LDR X8, [X23]
	0x0250106C LDRH W9, [X8 + 0x12E]
	0x02501070 CBZ X9, 0x2501094
	0x02501074 LDR X10, [X8 + 0xB0]
	0x02501078 ADD X10, X10, 0x8
	0x0250107C LDUR X11, [X10 - 0x8]
	0x02501080 CMP X11, X1
	0x02501084 B.EQ 0x25010DC
	0x02501088 SUBS X9, X9, 0x1
	0x0250108C ADD X10, X10, 0x10
	0x02501090 B.NE 0x250107C
	0x02501094 MOV X0, X23
	0x02501098 MOV W2, W31
	0x0250109C BL 0x1C5C788
	0x025010A0 B 0x25010E8
	0x025010A4 LDR W9, [X10]
	0x025010A8 ADD W9, W9, 0x5
	0x025010AC ADD X8, X8, W9, 0x4, SXTW
	0x025010B0 ADD X0, X8, 0x138
	0x025010B4 LDP X4, X3, [X0]
	0x025010B8 MOV X0, X21
	0x025010BC MOV X1, X23
	0x025010C0 MOV W2, W19
	0x025010C4 LDP X20, X19, [X31 + 0x40]
	0x025010C8 LDP X22, X21, [X31 + 0x30]
	0x025010CC LDP X24, X23, [X31 + 0x20]
	0x025010D0 LDP X30, X25, [X31 + 0x10]
	0x025010D4 ADD X31, X31, 0x50
	0x025010D8 BR X4
	0x025010DC LDRSW X9, [X10]
	0x025010E0 ADD X8, X8, X9, 0x4, LSL
	0x025010E4 ADD X0, X8, 0x138
	0x025010E8 LDP X8, X1, [X0]
	0x025010EC MOV X0, X23
	0x025010F0 BLR X8
	0x025010F4 CMP W0, 0x1
	0x025010F8 B.LT 0x25011E0
	0x025010FC MOV W23, W0
	0x02501100 MOV W24, W31
	0x02501104 LDR X25, [X21 + 0x10]
	0x02501108 CBZ X25, 0x25011F8
	0x0250110C LDR X8, [X20 + 0x20]
	0x02501110 LDR X8, [X8 + 0xC0]
	0x02501114 LDR X1, [X8]
	0x02501118 LDRB W8, [X1 + 0x135]
	0x0250111C TBNZ X8, 0x0, 0x250112C
	0x02501120 MOV X0, X1
	0x02501124 BL 0x1C5C684
	0x02501128 MOV X1, X0
	0x0250112C LDR X8, [X25]
	0x02501130 LDRH W9, [X8 + 0x12E]
	0x02501134 CBZ X9, 0x2501158
	0x02501138 LDR X10, [X8 + 0xB0]
	0x0250113C ADD X10, X10, 0x8
	0x02501140 LDUR X11, [X10 - 0x8]
	0x02501144 CMP X11, X1
	0x02501148 B.EQ 0x2501168
	0x0250114C SUBS X9, X9, 0x1
	0x02501150 ADD X10, X10, 0x10
	0x02501154 B.NE 0x2501140
	0x02501158 MOV X0, X25
	0x0250115C MOV W2, W31
	0x02501160 BL 0x1C5C788
	0x02501164 B 0x2501174
	0x02501168 LDRSW X9, [X10]
	0x0250116C ADD X8, X8, X9, 0x4, LSL
	0x02501170 ADD X0, X8, 0x138
	0x02501174 LDP X8, X2, [X0]
	0x02501178 MOV X0, X25
	0x0250117C MOV W1, W24
	0x02501180 BLR X8
	0x02501184 STR X0, [X31 + 0x8]
	0x02501188 LDR X8, [X20 + 0x20]
	0x0250118C LDR X8, [X8 + 0xC0]
	0x02501190 LDR X0, [X8 + 0x28]
	0x02501194 ADD X1, X31, 0x8
	0x02501198 BL 0x1C16E04
	0x0250119C CBZ X22, 0x25011FC
	0x025011A0 MOV X25, X0
	0x025011A4 CBZ X0, 0x25011BC
	0x025011A8 LDR X8, [X22]
	0x025011AC LDR X1, [X8 + 0x40]
	0x025011B0 MOV X0, X25
	0x025011B4 BL 0x1C16E00
	0x025011B8 CBZ X0, 0x2501204
	0x025011BC LDR W8, [X22 + 0x18]
	0x025011C0 CMP W19, W8
	0x025011C4 B.CS 0x2501200
	0x025011C8 ADD W24, W24, 0x1
	0x025011CC ADD X8, X22, W19, 0x3, SXTW
	0x025011D0 ADD W19, W19, 0x1
	0x025011D4 CMP W24, W23
	0x025011D8 STR X25, [X8 + 0x20]
	0x025011DC B.NE 0x2501104
	0x025011E0 LDP X20, X19, [X31 + 0x40]
	0x025011E4 LDP X22, X21, [X31 + 0x30]
	0x025011E8 LDP X24, X23, [X31 + 0x20]
	0x025011EC LDP X30, X25, [X31 + 0x10]
	0x025011F0 ADD X31, X31, 0x50
	0x025011F4 RET
	0x025011F8 BL 0x1C16F20
	0x025011FC BL 0x1C16F20
	0x02501200 BL 0x1C16F28
	0x02501204 BL 0x1C16F44
	0x02501208 MOV X1, X31
	0x0250120C BL 0x1C16DEC
	0x02501210 MOVZ W0, 0x3
	0x02501214 MOV X1, X31
	0x02501218 BL 0x338F3E0
	0x0250121C BL 0x1C16F20
	0x02501220 B 0x250122C
	0x02501224 B 0x250122C
	0x02501228 B 0x250122C
	0x0250122C MOV X19, X0
	0x02501230 CMP W1, 0x1
	0x02501234 B.NE 0x2501298
	0x02501238 MOV X0, X19
	0x0250123C BL 0x3EB1AD0
	0x02501240 MOV X19, X0
	0x02501244 ADRP X0, 0x1C1B000
	0x02501248 LDR X0, [X0 + 0x320]
	0x0250124C BL 0x1C16D08
	0x02501250 LDR X8, [X19]
	0x02501254 LDR X1, [X8]
	0x02501258 BL 0x1C17270
	0x0250125C TBZ X0, 0x0, 0x2501270
	0x02501260 BL 0x3EB1AE0
	0x02501264 MOV X0, X31
	0x02501268 BL 0x339E304
	0x0250126C B 0x25011E0
	0x02501270 MOVZ W0, 0x8
	0x02501274 BL 0x3EB1AF0
	0x02501278 LDR X8, [X19]
	0x0250127C STR X8, [X0]
	0x02501280 ADRP X1, 0x19B3000
	0x02501284 ADD X1, X1, 0xE58
	0x02501288 MOV X2, X31
	0x0250128C BL 0x3EB1B00
	0x02501290 MOV X19, X0
	0x02501294 BL 0x3EB1AE0
	0x02501298 MOV X0, X19
	0x0250129C BL 0x1D2C690
	0x025012A0 BL 0x1990590
	0x025012A4 MOVZ W0, 0x1
	0x025012A8 RET
	0x025012AC MOVZ W0, 0x1
	0x025012B0 RET
	0x025012B4 SUB X31, X31, 0x30
	0x025012B8 STP X30, X21, [X31 + 0x10]
	0x025012BC STP X20, X19, [X31 + 0x20]
	0x025012C0 LDR X21, [X0 + 0x10]
	0x025012C4 CBZ X21, 0x2501370
	0x025012C8 LDR X8, [X2 + 0x20]
	0x025012CC MOV W20, W1
	0x025012D0 MOV X19, X2
	0x025012D4 LDR X8, [X8 + 0xC0]
	0x025012D8 LDR X1, [X8]
	0x025012DC LDRB W8, [X1 + 0x135]
	0x025012E0 TBNZ X8, 0x0, 0x25012F0
	0x025012E4 MOV X0, X1
	0x025012E8 BL 0x1C5C684
	0x025012EC MOV X1, X0
	0x025012F0 LDR X8, [X21]
	0x025012F4 LDRH W9, [X8 + 0x12E]
	0x025012F8 CBZ X9, 0x250131C
	0x025012FC LDR X10, [X8 + 0xB0]
	0x02501300 ADD X10, X10, 0x8
	0x02501304 LDUR X11, [X10 - 0x8]
	0x02501308 CMP X11, X1
	0x0250130C B.EQ 0x250132C
	0x02501310 SUBS X9, X9, 0x1
	0x02501314 ADD X10, X10, 0x10
	0x02501318 B.NE 0x2501304
	0x0250131C MOV X0, X21
	0x02501320 MOV W2, W31
	0x02501324 BL 0x1C5C788
	0x02501328 B 0x2501338
	0x0250132C LDRSW X9, [X10]
	0x02501330 ADD X8, X8, X9, 0x4, LSL
	0x02501334 ADD X0, X8, 0x138
	0x02501338 LDP X8, X2, [X0]
	0x0250133C MOV X0, X21
	0x02501340 MOV W1, W20
	0x02501344 BLR X8
	0x02501348 STR X0, [X31 + 0x8]
	0x0250134C LDR X8, [X19 + 0x20]
	0x02501350 ADD X1, X31, 0x8
	0x02501354 LDR X8, [X8 + 0xC0]
	0x02501358 LDR X0, [X8 + 0x28]
	0x0250135C BL 0x1C16E04
	0x02501360 LDP X20, X19, [X31 + 0x20]
	0x02501364 LDP X30, X21, [X31 + 0x10]
	0x02501368 ADD X31, X31, 0x30
	0x0250136C RET
	0x02501370 BL 0x1C16F20
	0x02501374 MOVZ W0, 0x1C
	0x02501378 MOV X1, X31
	0x0250137C B 0x339E04C
	0x02501380 STR X30, [X31 - 0x10]!
	0x02501384 MOVZ W0, 0x1C
	0x02501388 MOV X1, X31
	0x0250138C BL 0x339E04C
	0x02501390 MOVN W0, 0x0
	0x02501394 LDR X30, [X31], #0x10
	0x02501398 RET
	0x0250139C MOVZ W0, 0x1C
	0x025013A0 MOV X1, X31
	0x025013A4 B 0x339E04C
	0x025013A8 STP X30, X19, [X31 - 0x10]!
	0x025013AC LDR X8, [X1 + 0x20]
	0x025013B0 MOV X19, X0
	0x025013B4 LDRB W9, [X8 + 0x135]
	0x025013B8 TBNZ X9, 0x0, 0x25013C8
	0x025013BC MOV X0, X8
	0x025013C0 BL 0x1C5C684
	0x025013C4 MOV X8, X0
	0x025013C8 LDR X8, [X8 + 0xC0]
	0x025013CC LDR X1, [X8 + 0x28]
	0x025013D0 LDRB W8, [X1 + 0x135]
	0x025013D4 TBNZ X8, 0x0, 0x25013E4
	0x025013D8 MOV X0, X1
	0x025013DC BL 0x1C5C684
	0x025013E0 MOV X1, X0
	0x025013E4 MOV X0, X19
	0x025013E8 BL 0x1C16E00
	0x025013EC CMP X0, 0x0
	0x025013F0 CSET W0, NE
	0x025013F4 LDP X30, X19, [X31], #0x10
	0x025013F8 RET
	0x025013FC STP X30, X21, [X31 - 0x20]!
	0x02501400 STP X20, X19, [X31 + 0x10]
	0x02501404 LDR X8, [X2 + 0x20]
	0x02501408 MOV X21, X1
	0x0250140C MOV X20, X0
	0x02501410 MOV X0, X21
	0x02501414 LDR X8, [X8 + 0xC0]
	0x02501418 MOV X19, X2
	0x0250141C LDR X1, [X8 + 0x78]
	0x02501420 BL 0x25013A8
	0x02501424 TBZ X0, 0x0, 0x2501488
	0x02501428 LDR X8, [X19 + 0x20]
	0x0250142C LDR X8, [X8 + 0xC0]
	0x02501430 LDR X1, [X8 + 0x28]
	0x02501434 LDRB W8, [X1 + 0x135]
	0x02501438 TBNZ X8, 0x0, 0x2501448
	0x0250143C MOV X0, X1
	0x02501440 BL 0x1C5C684
	0x02501444 MOV X1, X0
	0x02501448 CBZ X21, 0x2501498
	0x0250144C LDR X8, [X21]
	0x02501450 LDR X9, [X1 + 0x40]
	0x02501454 MOV X0, X21
	0x02501458 LDR X8, [X8 + 0x40]
	0x0250145C CMP X8, X9
	0x02501460 B.NE 0x250149C
	0x02501464 BL 0x1C16E08
	0x02501468 LDR X8, [X19 + 0x20]
	0x0250146C LDR X1, [X0]
	0x02501470 MOV X0, X20
	0x02501474 LDP X20, X19, [X31 + 0x10]
	0x02501478 LDR X8, [X8 + 0xC0]
	0x0250147C LDR X2, [X8 + 0x88]
	0x02501480 LDP X30, X21, [X31], #0x20
	0x02501484 B 0x2500908
	0x02501488 LDP X20, X19, [X31 + 0x10]
	0x0250148C MOV W0, W31
	0x02501490 LDP X30, X21, [X31], #0x20
	0x02501494 RET
	0x02501498 BL 0x1C16F20
	0x0250149C BL 0x1C171E0
	0x025014A0 STP X30, X21, [X31 - 0x20]!
	0x025014A4 STP X20, X19, [X31 + 0x10]
	0x025014A8 LDR X8, [X2 + 0x20]
	0x025014AC MOV X21, X1
	0x025014B0 MOV X20, X0
	0x025014B4 MOV X0, X21
	0x025014B8 LDR X8, [X8 + 0xC0]
	0x025014BC MOV X19, X2
	0x025014C0 LDR X1, [X8 + 0x78]
	0x025014C4 BL 0x25013A8
	0x025014C8 TBZ X0, 0x0, 0x250152C
	0x025014CC LDR X8, [X19 + 0x20]
	0x025014D0 LDR X8, [X8 + 0xC0]
	0x025014D4 LDR X1, [X8 + 0x28]
	0x025014D8 LDRB W8, [X1 + 0x135]
	0x025014DC TBNZ X8, 0x0, 0x25014EC
	0x025014E0 MOV X0, X1
	0x025014E4 BL 0x1C5C684
	0x025014E8 MOV X1, X0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X23, 0x1ED9000
	011 Move W8, [X23+3243]
	012 Move X20, X3
	013 Move W19, W2
	014 Move X22, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x1BF3000
	021 Move X0, [X0+2512]
	022 Call 0x1C17CF4
	023 Move X0, 0x1BF3000
	024 Move X0, [X0+1728]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X23+3243], W8
	028 Compare X22, 0
	029 JumpIfEqual {300}
	030 Move X0, X22
	031 Move X1, X31
	032 Call Array.get_Rank, X0
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W0, 7
	035 Move X1, X31
	036 Call ThrowHelper.ThrowArgumentException, X0
	037 Move X0, X22
	038 Move W1, W31
	039 Move X2, X31
	040 Call Array.GetLowerBound, X0, X1
	041 Compare W0, 0
	042 JumpIfEqual {46}
	043 Move W0, 6
	044 Move X1, X31
	045 Call ThrowHelper.ThrowArgumentException, X0
	046 Move TEMP, X19
	047 And TEMP, TEMP, -2147483648
	048 Compare TEMP, -2147483648
	049 JumpIfNotEqual {52}
	050 Move X0, X31
	051 Call ThrowHelper.ThrowIndexArgumentOutOfRange_NeedNonNegNumException
	052 Move X0, X22
	053 Move X1, X31
	054 Call Array.get_Length, X0
	055 Move X8, [X20+32]
	056 Move W23, W0
	057 Move X0, X21
	058 Move X8, [X8+192]
	059 Move X1, [X8+104]
	060 Call 0x2500A30, X0
	061 Subtract W8, W23, W19
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move W0, 5
	064 Move X1, X31
	065 Call ThrowHelper.ThrowArgumentException, X0
	066 Move X8, [X20+32]
	067 Move X8, [X8+192]
	068 Move X1, [X8+56]
	069 Move W8, [X1+309]
	070 Move TEMP, X8
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfEqual {77}
	074 Move X0, X1
	075 Call 0x1C5D684
	076 Move X1, X0
	077 Move X0, X22
	078 Call 0x1C17E00
	079 Compare X0, 0
	080 JumpIfEqual {109}
	081 Move X21, [X21+16]
	082 Compare X21, 0
	083 JumpIfEqual {303}
	084 Move X8, [X20+32]
	085 Move X23, X0
	086 Move X8, [X8+192]
	087 Move X1, [X8+16]
	088 Move W8, [X1+309]
	089 Move TEMP, X8
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfEqual {96}
	093 Move X0, X1
	094 Call 0x1C5D684
	095 Move X1, X0
	096 Move X8, [X21]
	097 NotImplemented "Instruction LDRH not yet implemented."
	098 Compare X9, 0
	099 JumpIfEqual {106}
	100 Move X10, [X8+176]
	101 Add X10, X10, 8
	102 NotImplemented "Instruction LDUR not yet implemented."
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Subtract X9, X9, 1
	105 Add X10, X10, 16
	106 Move W2, 5
	107 Move X0, X21
	108 Call 0x1C5D788
	109 Move X0, X22
	110 Move X1, X31
	111 Call "il2cpp_vm_object_is_inst", X0
	112 Compare X0, 0
	113 JumpIfEqual {303}
	114 Move X8, [X0]
	115 Move X9, [X8+1064]
	116 Move X1, [X8+1072]
	117 NotImplemented "Instruction BLR not yet implemented."
	118 Move X8, 0x1BF3000
	119 Move X9, [X20+32]
	120 Move X8, [X8+1728]
	121 Move X23, X0
	122 Move X9, [X9+192]
	123 Move X8, [X8]
	124 Move X24, [X9+112]
	125 Move W10, [X8+224]
	126 Compare W10, 0
	127 JumpIfNotEqual {130}
	128 Move X0, X8
	129 Call 0x1C17DFC
	130 Move X0, X24
	131 Move X1, X31
	132 Call Type.GetTypeFromHandle, X0
	133 Compare X23, 0
	134 JumpIfEqual {303}
	135 Move X8, [X23]
	136 Move X24, X0
	137 Move X0, X23
	138 Move X1, X24
	139 Move X9, [X8+680]
	140 Move X2, [X8+688]
	141 NotImplemented "Instruction BLR not yet implemented."
	142 Move TEMP, X0
	143 And TEMP, TEMP, 1
	144 Compare TEMP, 1
	145 JumpIfEqual {160}
	146 Compare X24, 0
	147 JumpIfEqual {303}
	148 Move X8, [X24]
	149 Move X0, X24
	150 Move X1, X23
	151 Move X9, [X8+680]
	152 Move X2, [X8+688]
	153 NotImplemented "Instruction BLR not yet implemented."
	154 Move TEMP, X0
	155 And TEMP, TEMP, 1
	156 Compare TEMP, 1
	157 JumpIfEqual {160}
	158 Move X0, X31
	159 Call ThrowHelper.ThrowArgumentException_Argument_InvalidArrayType
	160 Move X8, 0x1BF3000
	161 Move X8, [X8+2512]
	162 Move X0, X22
	163 Move X1, [X8]
	164 Call 0x1C17E00
	165 Move X22, X0
	166 Compare X0, 0
	167 JumpIfNotEqual {169}
	168 Call ThrowHelper.ThrowArgumentException_Argument_InvalidArrayType
	169 Move X23, [X21+16]
	170 Compare X23, 0
	171 JumpIfEqual {303}
	172 Move X8, [X20+32]
	173 Move X8, [X8+192]
	174 Move X1, [X8+16]
	175 Move W8, [X1+309]
	176 Move TEMP, X8
	177 And TEMP, TEMP, 1
	178 Compare TEMP, 1
	179 JumpIfEqual {183}
	180 Move X0, X1
	181 Call 0x1C5D684
	182 Move X1, X0
	183 Move X8, [X23]
	184 NotImplemented "Instruction LDRH not yet implemented."
	185 Compare X9, 0
	186 JumpIfEqual {193}
	187 Move X10, [X8+176]
	188 Add X10, X10, 8
	189 NotImplemented "Instruction LDUR not yet implemented."
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Subtract X9, X9, 1
	192 Add X10, X10, 16
	193 Move X0, X23
	194 Move W2, W31
	195 Call 0x1C5D788
	196 Move W9, [X10]
	197 Add W9, W9, 5
	198 Add X8, X8, W9
	199 Add X0, X8, 312
	200 Move X4, [X0]
	201 Move X3, [X0+8]
	202 Move X0, X21
	203 Move X1, X23
	204 Move W2, W19
	205 Move X20, [X31+64]
	206 Move X19, [X31+72]
	207 Move X22, [X31+48]
	208 Move X21, [X31+56]
	209 Move X24, [X31+32]
	210 Move X23, [X31+40]
	211 Move X30, [X31+16]
	212 Move X25, [X31+24]
	213 Add X31, X31, 80
	214 CallNoReturn X4
	215 NotImplemented "Instruction LDRSW not yet implemented."
	216 Add X8, X8, X9
	217 Add X0, X8, 312
	218 Move X8, [X0]
	219 Move X1, [X0+8]
	220 Move X0, X23
	221 NotImplemented "Instruction BLR not yet implemented."
	222 NotImplemented "Instruction CMP not yet implemented."
	223 Move W23, W0
	224 Move W24, W31
	225 Move X25, [X21+16]
	226 Compare X25, 0
	227 JumpIfEqual {294}
	228 Move X8, [X20+32]
	229 Move X8, [X8+192]
	230 Move X1, [X8]
	231 Move W8, [X1+309]
	232 Move TEMP, X8
	233 And TEMP, TEMP, 1
	234 Compare TEMP, 1
	235 JumpIfEqual {239}
	236 Move X0, X1
	237 Call 0x1C5D684
	238 Move X1, X0
	239 Move X8, [X25]
	240 NotImplemented "Instruction LDRH not yet implemented."
	241 Compare X9, 0
	242 JumpIfEqual {249}
	243 Move X10, [X8+176]
	244 Add X10, X10, 8
	245 NotImplemented "Instruction LDUR not yet implemented."
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Subtract X9, X9, 1
	248 Add X10, X10, 16
	249 Move X0, X25
	250 Move W2, W31
	251 Call 0x1C5D788
	252 NotImplemented "Instruction LDRSW not yet implemented."
	253 Add X8, X8, X9
	254 Add X0, X8, 312
	255 Move X8, [X0]
	256 Move X2, [X0+8]
	257 Move X0, X25
	258 Move W1, W24
	259 NotImplemented "Instruction BLR not yet implemented."
	260 Move [X31+8], X0
	261 Move X8, [X20+32]
	262 Move X8, [X8+192]
	263 Move X0, [X8+40]
	264 Add X1, X31, 8
	265 Call 0x1C17E04
	266 Compare X22, 0
	267 JumpIfEqual {295}
	268 Move X25, X0
	269 Compare X0, 0
	270 JumpIfEqual {277}
	271 Move X8, [X22]
	272 Move X1, [X8+64]
	273 Move X0, X25
	274 Call 0x1C17E00
	275 Compare X0, 0
	276 JumpIfEqual {297}
	277 Move W8, [X22+24]
	278 NotImplemented "Instruction CMP not yet implemented."
	279 Add W24, W24, 1
	280 Add X8, X22, W19
	281 Add W19, W19, 1
	282 NotImplemented "Instruction CMP not yet implemented."
	283 Move [X8+32], X25
	284 Move X20, [X31+64]
	285 Move X19, [X31+72]
	286 Move X22, [X31+48]
	287 Move X21, [X31+56]
	288 Move X24, [X31+32]
	289 Move X23, [X31+40]
	290 Move X30, [X31+16]
	291 Move X25, [X31+24]
	292 Add X31, X31, 80
	293 Return 
	294 Call 0x1C17F20
	295 Call 0x1C17F20
	296 Call 0x1C17F28
	297 Call 0x1C17F44
	298 Move X1, X31
	299 Call 0x1C17DEC
	300 Move W0, 3
	301 Move X1, X31
	302 Call ThrowHelper.ThrowArgumentNullException, X0
	303 Call 0x1C17F20
	304 Move X19, X0
	305 NotImplemented "Instruction CMP not yet implemented."
	306 Move X0, X19
	307 Call 0x3EB2AD0
	308 Move X19, X0
	309 Move X0, 0x1C1C000
	310 Move X0, [X0+800]
	311 Call 0x1C17D08
	312 Move X8, [X19]
	313 Move X1, [X8]
	314 Call 0x1C18270
	315 Move TEMP, X0
	316 And TEMP, TEMP, 1
	317 Compare TEMP, 1
	318 JumpIfNotEqual {322}
	319 Call 0x3EB2AE0
	320 Move X0, X31
	321 Call ThrowHelper.ThrowArgumentException_Argument_InvalidArrayType
	322 Move W0, 8
	323 Call 0x3EB2AF0
	324 Move X8, [X19]
	325 Move [X0], X8
	326 Move X1, 0x19B4000
	327 Add X1, X1, 3672
	328 Move X2, X31
	329 Call 0x3EB2B00
	330 Move X19, X0
	331 Call 0x3EB2AE0
	332 Move X0, X19
	333 Call 0x1D2D690
	334 Call 0x1991590

Method: System.Boolean System.Collections.IList.get_IsFixedSize()

Disassembly:
	0x025014EC CBZ X21, 0x250153C
	0x025014F0 LDR X8, [X21]

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Boolean System.Collections.IList.get_IsReadOnly()

Disassembly:
	0x025014F4 LDR X9, [X1 + 0x40]
	0x025014F8 MOV X0, X21

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Object System.Collections.IList.get_Item(System.Int32 index)

Disassembly:
	0x025014FC LDR X8, [X8 + 0x40]
	0x02501500 CMP X8, X9
	0x02501504 B.NE 0x2501540
	0x02501508 BL 0x1C16E08
	0x0250150C LDR X8, [X19 + 0x20]
	0x02501510 LDR X1, [X0]
	0x02501514 MOV X0, X20
	0x02501518 LDP X20, X19, [X31 + 0x10]
	0x0250151C LDR X8, [X8 + 0xC0]
	0x02501520 LDR X2, [X8 + 0x90]
	0x02501524 LDP X30, X21, [X31], #0x20
	0x02501528 B 0x2500AD0
	0x0250152C LDP X20, X19, [X31 + 0x10]
	0x02501530 MOVN W0, 0x0
	0x02501534 LDP X30, X21, [X31], #0x20
	0x02501538 RET
	0x0250153C BL 0x1C16F20
	0x02501540 BL 0x1C171E0
	0x02501544 MOVZ W0, 0x1C
	0x02501548 MOV X1, X31
	0x0250154C B 0x339E04C
	0x02501550 MOVZ W0, 0x1C
	0x02501554 MOV X1, X31
	0x02501558 B 0x339E04C
	0x0250155C MOVZ W0, 0x1C
	0x02501560 MOV X1, X31
	0x02501564 B 0x339E04C
	0x02501568 STR X30, [X31 - 0x20]!
	0x0250156C STP X20, X19, [X31 + 0x10]
	0x02501570 MOV X19, X1
	0x02501574 MOV X1, X31
	0x02501578 MOV X20, X0
	0x0250157C BL 0x33BDD8C
	0x02501580 CBNZ X19, 0x2501590
	0x02501584 MOVZ W0, 0x7
	0x02501588 MOV X1, X31
	0x0250158C BL 0x338F3E0
	0x02501590 STR X19, [X20 + 0x10]
	0x02501594 LDP X20, X19, [X31 + 0x10]
	0x02501598 LDR X30, [X31], #0x20
	0x0250159C RET
	0x025015A0 STP X30, X19, [X31 - 0x10]!
	0x025015A4 LDR X19, [X0 + 0x10]
	0x025015A8 CBZ X19, 0x2501624
	0x025015AC LDR X8, [X1 + 0x20]
	0x025015B0 LDR X8, [X8 + 0xC0]
	0x025015B4 LDR X1, [X8 + 0x10]
	0x025015B8 LDRB W8, [X1 + 0x135]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, [X0+16]
	007 Compare X21, 0
	008 JumpIfEqual {55}
	009 Move X8, [X2+32]
	010 Move W20, W1
	011 Move X19, X2
	012 Move X8, [X8+192]
	013 Move X1, [X8]
	014 Move W8, [X1+309]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {22}
	019 Move X0, X1
	020 Call 0x1C5D684
	021 Move X1, X0
	022 Move X8, [X21]
	023 NotImplemented "Instruction LDRH not yet implemented."
	024 Compare X9, 0
	025 JumpIfEqual {32}
	026 Move X10, [X8+176]
	027 Add X10, X10, 8
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Subtract X9, X9, 1
	031 Add X10, X10, 16
	032 Move X0, X21
	033 Move W2, W31
	034 Call 0x1C5D788
	035 NotImplemented "Instruction LDRSW not yet implemented."
	036 Add X8, X8, X9
	037 Add X0, X8, 312
	038 Move X8, [X0]
	039 Move X2, [X0+8]
	040 Move X0, X21
	041 Move W1, W20
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move [X31+8], X0
	044 Move X8, [X19+32]
	045 Add X1, X31, 8
	046 Move X8, [X8+192]
	047 Move X0, [X8+40]
	048 Call 0x1C17E04
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X30, [X31+16]
	052 Move X21, [X31+24]
	053 Add X31, X31, 48
	054 Return X0
	055 Call 0x1C17F20

Method: System.Void System.Collections.IList.set_Item(System.Int32 index, System.Object value)

Disassembly:
	0x025015BC TBNZ X8, 0x0, 0x25015CC
	0x025015C0 MOV X0, X1
	0x025015C4 BL 0x1C5C684

ISIL:
	001 Move W0, 28
	002 Move X1, X31
	003 Call ThrowHelper.ThrowNotSupportedException, X0
	004 Return 

Method: System.Int32 System.Collections.IList.Add(System.Object value)

Disassembly:
	0x025015C8 MOV X1, X0
	0x025015CC LDR X8, [X19]
	0x025015D0 LDRH W9, [X8 + 0x12E]
	0x025015D4 CBZ X9, 0x25015F8
	0x025015D8 LDR X10, [X8 + 0xB0]
	0x025015DC ADD X10, X10, 0x8
	0x025015E0 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X31-16], X30
	002 Move W0, 28
	003 Move X1, X31
	004 Call ThrowHelper.ThrowNotSupportedException, X0
	005 Move TEMP, 0
	006 Not TEMP
	007 Move W0, TEMP
	008 Move X30, [X31+16]
	009 Return X0

Method: System.Void System.Collections.IList.Clear()

Disassembly:
	0x025015E4 CMP X11, X1
	0x025015E8 B.EQ 0x2501608
	0x025015EC SUBS X9, X9, 0x1

ISIL:
	001 Move W0, 28
	002 Move X1, X31
	003 Call ThrowHelper.ThrowNotSupportedException, X0
	004 Return 

Method: System.Boolean IsCompatibleObject(System.Object value)

Disassembly:
	0x025015F0 ADD X10, X10, 0x10
	0x025015F4 B.NE 0x25015E0
	0x025015F8 MOV X0, X19
	0x025015FC MOV W2, W31
	0x02501600 BL 0x1C5C788
	0x02501604 B 0x2501614
	0x02501608 LDRSW X9, [X10]
	0x0250160C ADD X8, X8, X9, 0x4, LSL
	0x02501610 ADD X0, X8, 0x138
	0x02501614 LDP X2, X1, [X0]
	0x02501618 MOV X0, X19
	0x0250161C LDP X30, X19, [X31], #0x10
	0x02501620 BR X2
	0x02501624 BL 0x1C16F20
	0x02501628 STR X30, [X31 - 0x20]!
	0x0250162C STP X20, X19, [X31 + 0x10]
	0x02501630 LDR X20, [X0 + 0x10]
	0x02501634 CBZ X20, 0x25016BC
	0x02501638 LDR X8, [X2 + 0x20]
	0x0250163C MOV W19, W1
	0x02501640 LDR X8, [X8 + 0xC0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X1+32]
	004 Move X19, X0
	005 Move W9, [X8+309]
	006 Move TEMP, X9
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfEqual {13}
	010 Move X0, X8
	011 Call 0x1C5D684
	012 Move X8, X0
	013 Move X8, [X8+192]
	014 Move X1, [X8+40]
	015 Move W8, [X1+309]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {23}
	020 Move X0, X1
	021 Call 0x1C5D684
	022 Move X1, X0
	023 Move X0, X19
	024 Call 0x1C17E00
	025 NotImplemented "Instruction CMP not yet implemented."
	026 NotImplemented "Instruction CSET not yet implemented."
	027 Move X30, [X31+16]
	028 Move X19, [X31+24]
	029 Return X0

Method: System.Boolean System.Collections.IList.Contains(System.Object value)

Disassembly:
	0x02501644 LDR X1, [X8]
	0x02501648 LDRB W8, [X1 + 0x135]
	0x0250164C TBNZ X8, 0x0, 0x250165C
	0x02501650 MOV X0, X1
	0x02501654 BL 0x1C5C684
	0x02501658 MOV X1, X0
	0x0250165C LDR X8, [X20]
	0x02501660 LDRH W9, [X8 + 0x12E]
	0x02501664 CBZ X9, 0x2501688
	0x02501668 LDR X10, [X8 + 0xB0]
	0x0250166C ADD X10, X10, 0x8
	0x02501670 LDUR X11, [X10 - 0x8]
	0x02501674 CMP X11, X1
	0x02501678 B.EQ 0x2501698
	0x0250167C SUBS X9, X9, 0x1
	0x02501680 ADD X10, X10, 0x10
	0x02501684 B.NE 0x2501670
	0x02501688 MOV X0, X20
	0x0250168C MOV W2, W31
	0x02501690 BL 0x1C5C788
	0x02501694 B 0x25016A4
	0x02501698 LDRSW X9, [X10]
	0x0250169C ADD X8, X8, X9, 0x4, LSL
	0x025016A0 ADD X0, X8, 0x138
	0x025016A4 LDP X3, X2, [X0]
	0x025016A8 MOV X0, X20
	0x025016AC MOV W1, W19
	0x025016B0 LDP X20, X19, [X31 + 0x10]
	0x025016B4 LDR X30, [X31], #0x20
	0x025016B8 BR X3
	0x025016BC BL 0x1C16F20
	0x025016C0 STP X30, X21, [X31 - 0x20]!
	0x025016C4 STP X20, X19, [X31 + 0x10]
	0x025016C8 LDR X21, [X0 + 0x10]
	0x025016CC CBZ X21, 0x2501760
	0x025016D0 LDR X8, [X3 + 0x20]
	0x025016D4 MOV X20, X1
	0x025016D8 MOV X19, X2
	0x025016DC LDR X8, [X8 + 0xC0]
	0x025016E0 LDR X1, [X8 + 0x10]
	0x025016E4 LDRB W8, [X1 + 0x135]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X21, X1
	007 Move X20, X0
	008 Move X0, X21
	009 Move X8, [X8+192]
	010 Move X19, X2
	011 Move X1, [X8+120]
	012 Call 0x25015F0, X0
	013 Move TEMP, X0
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfNotEqual {47}
	017 Move X8, [X19+32]
	018 Move X8, [X8+192]
	019 Move X1, [X8+40]
	020 Move W8, [X1+309]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {28}
	025 Move X0, X1
	026 Call 0x1C5D684
	027 Move X1, X0
	028 Compare X21, 0
	029 JumpIfEqual {53}
	030 Move X8, [X21]
	031 Move X9, [X1+64]
	032 Move X0, X21
	033 Move X8, [X8+64]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Call 0x1C17E08
	036 Move X8, [X19+32]
	037 Move X1, [X0]
	038 Move X0, X20
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X8, [X8+192]
	042 Move X2, [X8+136]
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Call 0x2500B50, X0, X1
	046 Return X0
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move W0, W31
	050 Move X30, [X31+32]
	051 Move X21, [X31+40]
	052 Return X0
	053 Call 0x1C17F20
	054 Call 0x1C181E0

Method: System.Int32 System.Collections.IList.IndexOf(System.Object value)

Disassembly:
	0x025016E8 TBNZ X8, 0x0, 0x25016F8
	0x025016EC MOV X0, X1
	0x025016F0 BL 0x1C5C684
	0x025016F4 MOV X1, X0
	0x025016F8 LDR X8, [X21]
	0x025016FC LDRH W9, [X8 + 0x12E]
	0x02501700 CBZ X9, 0x2501724
	0x02501704 LDR X10, [X8 + 0xB0]
	0x02501708 ADD X10, X10, 0x8
	0x0250170C LDUR X11, [X10 - 0x8]
	0x02501710 CMP X11, X1
	0x02501714 B.EQ 0x2501734
	0x02501718 SUBS X9, X9, 0x1
	0x0250171C ADD X10, X10, 0x10
	0x02501720 B.NE 0x250170C
	0x02501724 MOVZ W2, 0x4
	0x02501728 MOV X0, X21
	0x0250172C BL 0x1C5C788
	0x02501730 B 0x2501744
	0x02501734 LDR W9, [X10]
	0x02501738 ADD W9, W9, 0x4
	0x0250173C ADD X8, X8, W9, 0x4, SXTW
	0x02501740 ADD X0, X8, 0x138
	0x02501744 LDP X4, X3, [X0]
	0x02501748 MOV X1, X20
	0x0250174C MOV X2, X19
	0x02501750 LDP X20, X19, [X31 + 0x10]
	0x02501754 MOV X0, X21
	0x02501758 LDP X30, X21, [X31], #0x20
	0x0250175C BR X4
	0x02501760 BL 0x1C16F20
	0x02501764 STP X30, X21, [X31 - 0x20]!
	0x02501768 STP X20, X19, [X31 + 0x10]
	0x0250176C LDR X21, [X0 + 0x10]
	0x02501770 CBZ X21, 0x2501804
	0x02501774 LDR X8, [X3 + 0x20]
	0x02501778 MOV X20, X1
	0x0250177C MOV W19, W2
	0x02501780 LDR X8, [X8 + 0xC0]
	0x02501784 LDR X1, [X8 + 0x10]
	0x02501788 LDRB W8, [X1 + 0x135]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X21, X1
	007 Move X20, X0
	008 Move X0, X21
	009 Move X8, [X8+192]
	010 Move X19, X2
	011 Move X1, [X8+120]
	012 Call 0x25015F0, X0
	013 Move TEMP, X0
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfNotEqual {47}
	017 Move X8, [X19+32]
	018 Move X8, [X8+192]
	019 Move X1, [X8+40]
	020 Move W8, [X1+309]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {28}
	025 Move X0, X1
	026 Call 0x1C5D684
	027 Move X1, X0
	028 Compare X21, 0
	029 JumpIfEqual {55}
	030 Move X8, [X21]
	031 Move X9, [X1+64]
	032 Move X0, X21
	033 Move X8, [X8+64]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Call 0x1C17E08
	036 Move X8, [X19+32]
	037 Move X1, [X0]
	038 Move X0, X20
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X8, [X8+192]
	042 Move X2, [X8+144]
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Call 0x2500D18, X0, X1
	046 Return X0
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move TEMP, 0
	050 Not TEMP
	051 Move W0, TEMP
	052 Move X30, [X31+32]
	053 Move X21, [X31+40]
	054 Return X0
	055 Call 0x1C17F20
	056 Call 0x1C181E0

Method: System.Void System.Collections.IList.Insert(System.Int32 index, System.Object value)

Disassembly:
	0x0250178C TBNZ X8, 0x0, 0x250179C
	0x02501790 MOV X0, X1
	0x02501794 BL 0x1C5C684

ISIL:
	001 Move W0, 28
	002 Move X1, X31
	003 Call ThrowHelper.ThrowNotSupportedException, X0
	004 Return 

Method: System.Void System.Collections.IList.Remove(System.Object value)

Disassembly:
	0x02501798 MOV X1, X0
	0x0250179C LDR X8, [X21]
	0x025017A0 LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move W0, 28
	002 Move X1, X31
	003 Call ThrowHelper.ThrowNotSupportedException, X0
	004 Return 

Method: System.Void System.Collections.IList.RemoveAt(System.Int32 index)

Disassembly:
	0x025017A4 CBZ X9, 0x25017C8
	0x025017A8 LDR X10, [X8 + 0xB0]
	0x025017AC ADD X10, X10, 0x8

ISIL:
	001 Move W0, 28
	002 Move X1, X31
	003 Call ThrowHelper.ThrowNotSupportedException, X0
	004 Return 

