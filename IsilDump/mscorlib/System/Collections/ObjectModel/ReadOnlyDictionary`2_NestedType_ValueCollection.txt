Type: System.Collections.ObjectModel.ReadOnlyDictionary`2/ValueCollection

Method: System.Void .ctor(System.Collections.Generic.ICollection`1<TValue> collection)

Disassembly:
	0x0275BD60 CBZ X0, 0x275BD98
	0x0275BD64 LDR X8, [X20 + 0x20]
	0x0275BD68 MOV X1, X0
	0x0275BD6C MOV X0, X21
	0x0275BD70 MOV W2, W19
	0x0275BD74 LDR X8, [X8 + 0xC0]
	0x0275BD78 LDP X20, X19, [X31 + 0x70]
	0x0275BD7C LDP X22, X21, [X31 + 0x60]
	0x0275BD80 LDP X24, X23, [X31 + 0x50]
	0x0275BD84 LDR X3, [X8 + 0x58]
	0x0275BD88 LDP X26, X25, [X31 + 0x40]
	0x0275BD8C LDR X30, [X31 + 0x30]
	0x0275BD90 ADD X31, X31, 0x80
	0x0275BD94 B 0x275B9B0
	0x0275BD98 ADRP X8, 0x1998000
	0x0275BD9C LDR X8, [X8 + 0x9D0]
	0x0275BDA0 MOV X0, X22
	0x0275BDA4 LDR X1, [X8]
	0x0275BDA8 BL 0x1C16E00
	0x0275BDAC MOV X22, X0
	0x0275BDB0 CBNZ X0, 0x275BDB8
	0x0275BDB4 BL 0x339E304
	0x0275BDB8 LDR X8, [X21 + 0x10]
	0x0275BDBC CBZ X8, 0x275BE9C
	0x0275BDC0 LDR W23, [X8 + 0x20]
	0x0275BDC4 CMP W23, 0x1
	0x0275BDC8 B.LT 0x275BE5C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X1
	006 Move X1, X31
	007 Move X19, X2
	008 Move X21, X0
	009 Call Object..ctor, X0
	010 Compare X20, 0
	011 JumpIfEqual {18}
	012 Move [X21+16], X20
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move X30, [X31+32]
	016 Move X21, [X31+40]
	017 Return 
	018 Move X0, 0x199E000
	019 Move X0, [X0+1320]
	020 Call 0x1C17D08
	021 Call 0x1C17F10
	022 Move X20, X0
	023 Move X0, 0x19C1000
	024 Move X0, [X0+2280]
	025 Call 0x1C17D08
	026 Move X1, X0
	027 Move X0, X20
	028 Move X2, X31
	029 Call ArgumentNullException..ctor, X0, X1
	030 Move X0, X20
	031 Move X1, X19
	032 Call 0x1C17DEC

Method: System.Void System.Collections.Generic.ICollection<TValue>.Add(TValue item)

Disassembly:
	0x0275BDCC LDR X24, [X8 + 0x18]
	0x0275BDD0 CBZ X24, 0x275BEA0
	0x0275BDD4 MOV X25, X31
	0x0275BDD8 ADD X26, X24, 0x30
	0x0275BDDC LDR W8, [X24 + 0x18]
	0x0275BDE0 CMP X25, X8
	0x0275BDE4 B.CS 0x275BE78
	0x0275BDE8 LDUR W8, [X26 - 0x10]
	0x0275BDEC TBNZ X8, 0x1F, 0x275BE4C
	0x0275BDF0 LDP V1, V0, [X26 + 0x10]
	0x0275BDF4 LDR V2, [X26]
	0x0275BDF8 STP V1, V0, [X31 + 0x10]
	0x0275BDFC STR V2, [X31]
	0x0275BE00 LDR X8, [X20 + 0x20]
	0x0275BE04 LDR X8, [X8 + 0xC0]
	0x0275BE08 LDR X0, [X8 + 0x40]
	0x0275BE0C ADD X1, X31, 0x0
	0x0275BE10 BL 0x1C16E04

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0x1999000
	005 Move X0, [X0+2880]
	006 Move X19, X2
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X20, X0
	010 Move X0, 0x19C3000
	011 Move X0, [X0+104]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X20
	015 Move X2, X31
	016 Call NotSupportedException..ctor, X0, X1
	017 Move X0, X20
	018 Move X1, X19
	019 Call 0x1C17DEC

Method: System.Void System.Collections.Generic.ICollection<TValue>.Clear()

Disassembly:
	0x0275BE14 CBZ X22, 0x275BE80
	0x0275BE18 MOV X21, X0
	0x0275BE1C CBZ X0, 0x275BE34
	0x0275BE20 LDR X8, [X22]
	0x0275BE24 LDR X1, [X8 + 0x40]
	0x0275BE28 MOV X0, X21
	0x0275BE2C BL 0x1C16E00
	0x0275BE30 CBZ X0, 0x275BE84
	0x0275BE34 LDR W8, [X22 + 0x18]
	0x0275BE38 CMP W19, W8
	0x0275BE3C B.CS 0x275BE7C
	0x0275BE40 ADD X8, X22, W19, 0x3, SXTW
	0x0275BE44 ADD W19, W19, 0x1
	0x0275BE48 STR X21, [X8 + 0x20]
	0x0275BE4C ADD X25, X25, 0x1
	0x0275BE50 CMP X23, X25
	0x0275BE54 ADD X26, X26, 0x40
	0x0275BE58 B.NE 0x275BDDC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0x1999000
	005 Move X0, [X0+2880]
	006 Move X19, X1
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X20, X0
	010 Move X0, 0x19C3000
	011 Move X0, [X0+104]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X20
	015 Move X2, X31
	016 Call NotSupportedException..ctor, X0, X1
	017 Move X0, X20
	018 Move X1, X19
	019 Call 0x1C17DEC

Method: System.Boolean System.Collections.Generic.ICollection<TValue>.Contains(TValue item)

Disassembly:
	0x0275BE5C LDP X20, X19, [X31 + 0x70]
	0x0275BE60 LDP X22, X21, [X31 + 0x60]
	0x0275BE64 LDP X24, X23, [X31 + 0x50]
	0x0275BE68 LDP X26, X25, [X31 + 0x40]
	0x0275BE6C LDR X30, [X31 + 0x30]
	0x0275BE70 ADD X31, X31, 0x80
	0x0275BE74 RET
	0x0275BE78 BL 0x1C16F28
	0x0275BE7C BL 0x1C16F28
	0x0275BE80 BL 0x1C16F20
	0x0275BE84 BL 0x1C16F44
	0x0275BE88 MOV X1, X31
	0x0275BE8C BL 0x1C16DEC
	0x0275BE90 MOVZ W0, 0x3
	0x0275BE94 MOV X1, X31
	0x0275BE98 BL 0x338F3E0
	0x0275BE9C BL 0x1C16F20
	0x0275BEA0 BL 0x1C16F20
	0x0275BEA4 B 0x275BEB0
	0x0275BEA8 B 0x275BEB0
	0x0275BEAC B 0x275BEB0
	0x0275BEB0 MOV X19, X0
	0x0275BEB4 CMP W1, 0x1
	0x0275BEB8 B.NE 0x275BF1C
	0x0275BEBC MOV X0, X19
	0x0275BEC0 BL 0x3EB1AD0
	0x0275BEC4 MOV X19, X0
	0x0275BEC8 ADRP X0, 0x19C1000
	0x0275BECC LDR X0, [X0 + 0x320]
	0x0275BED0 BL 0x1C16D08
	0x0275BED4 LDR X8, [X19]
	0x0275BED8 LDR X1, [X8]
	0x0275BEDC BL 0x1C17270
	0x0275BEE0 TBZ X0, 0x0, 0x275BEF4
	0x0275BEE4 BL 0x3EB1AE0
	0x0275BEE8 MOV X0, X31
	0x0275BEEC BL 0x339E304
	0x0275BEF0 B 0x275BE5C
	0x0275BEF4 MOVZ W0, 0x8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, [X0+16]
	005 Compare X20, 0
	006 JumpIfEqual {44}
	007 Move X8, [X2+32]
	008 Move X19, X1
	009 Move X8, [X8+192]
	010 Move X1, [X8]
	011 Move W8, [X1+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {19}
	016 Move X0, X1
	017 Call 0x1C5D684
	018 Move X1, X0
	019 Move X8, [X20]
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Compare X9, 0
	022 JumpIfEqual {29}
	023 Move X10, [X8+176]
	024 Add X10, X10, 8
	025 NotImplemented "Instruction LDUR not yet implemented."
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Subtract X9, X9, 1
	028 Add X10, X10, 16
	029 Move W2, 4
	030 Move X0, X20
	031 Call 0x1C5D788
	032 Move W9, [X10]
	033 Add W9, W9, 4
	034 Add X8, X8, W9
	035 Add X0, X8, 312
	036 Move X3, [X0]
	037 Move X2, [X0+8]
	038 Move X0, X20
	039 Move X1, X19
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 CallNoReturn X3
	044 Call 0x1C17F20

Method: System.Void CopyTo(TValue[] array, System.Int32 arrayIndex)

Disassembly:
	0x0275BEF8 BL 0x3EB1AF0
	0x0275BEFC LDR X8, [X19]
	0x0275BF00 STR X8, [X0]
	0x0275BF04 ADRP X1, 0x1759000
	0x0275BF08 ADD X1, X1, 0xE58
	0x0275BF0C MOV X2, X31
	0x0275BF10 BL 0x3EB1B00
	0x0275BF14 MOV X19, X0
	0x0275BF18 BL 0x3EB1AE0
	0x0275BF1C MOV X0, X19
	0x0275BF20 BL 0x1D2C690
	0x0275BF24 BL 0x1990590
	0x0275BF28 MOV W0, W31
	0x0275BF2C RET
	0x0275BF30 STR X30, [X31 - 0x20]!
	0x0275BF34 STP X20, X19, [X31 + 0x10]
	0x0275BF38 ADRP X20, 0x1C7F000
	0x0275BF3C LDRB W8, [X20 + 0x771]
	0x0275BF40 MOV X19, X0
	0x0275BF44 TBNZ X8, 0x0, 0x275BF5C
	0x0275BF48 ADRP X0, 0x199F000
	0x0275BF4C LDR X0, [X0 + 0x2F0]
	0x0275BF50 BL 0x1C16CF4
	0x0275BF54 MOVZ W8, 0x1
	0x0275BF58 STRB W8, [X20 + 0x771]
	0x0275BF5C LDR X19, [X19 + 0x10]
	0x0275BF60 CBZ X19, 0x275BFD0
	0x0275BF64 ADRP X10, 0x199F000
	0x0275BF68 LDR X8, [X19]
	0x0275BF6C LDR X10, [X10 + 0x2F0]
	0x0275BF70 LDRH W9, [X8 + 0x12E]
	0x0275BF74 LDR X1, [X10]
	0x0275BF78 CBZ X9, 0x275BF9C
	0x0275BF7C LDR X10, [X8 + 0xB0]
	0x0275BF80 ADD X10, X10, 0x8
	0x0275BF84 LDUR X11, [X10 - 0x8]
	0x0275BF88 CMP X11, X1
	0x0275BF8C B.EQ 0x275BFAC
	0x0275BF90 SUBS X9, X9, 0x1
	0x0275BF94 ADD X10, X10, 0x10
	0x0275BF98 B.NE 0x275BF84

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, [X0+16]
	006 Compare X21, 0
	007 JumpIfEqual {48}
	008 Move X8, [X3+32]
	009 Move X20, X1
	010 Move W19, W2
	011 Move X8, [X8+192]
	012 Move X1, [X8]
	013 Move W8, [X1+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {21}
	018 Move X0, X1
	019 Call 0x1C5D684
	020 Move X1, X0
	021 Move X8, [X21]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Compare X9, 0
	024 JumpIfEqual {31}
	025 Move X10, [X8+176]
	026 Add X10, X10, 8
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Subtract X9, X9, 1
	030 Add X10, X10, 16
	031 Move W2, 5
	032 Move X0, X21
	033 Call 0x1C5D788
	034 Move W9, [X10]
	035 Add W9, W9, 5
	036 Add X8, X8, W9
	037 Add X0, X8, 312
	038 Move X4, [X0]
	039 Move X3, [X0+8]
	040 Move X1, X20
	041 Move W2, W19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X0, X21
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 CallNoReturn X4
	048 Call 0x1C17F20

Method: System.Int32 get_Count()

Disassembly:
	0x0275BF9C MOVZ W2, 0x2
	0x0275BFA0 MOV X0, X19
	0x0275BFA4 BL 0x1C5C788
	0x0275BFA8 B 0x275BFBC
	0x0275BFAC LDR W9, [X10]
	0x0275BFB0 ADD W9, W9, 0x2
	0x0275BFB4 ADD X8, X8, W9, 0x4, SXTW
	0x0275BFB8 ADD X0, X8, 0x138
	0x0275BFBC LDP X2, X1, [X0]
	0x0275BFC0 MOV X0, X19
	0x0275BFC4 LDP X20, X19, [X31 + 0x10]
	0x0275BFC8 LDR X30, [X31], #0x20
	0x0275BFCC BR X2
	0x0275BFD0 BL 0x1C16F20
	0x0275BFD4 STR X30, [X31 - 0x20]!
	0x0275BFD8 STP X20, X19, [X31 + 0x10]
	0x0275BFDC MOV X19, X1
	0x0275BFE0 MOV X1, X31
	0x0275BFE4 MOV X20, X0
	0x0275BFE8 BL 0x33BDD8C
	0x0275BFEC CBNZ X19, 0x275BFFC
	0x0275BFF0 MOVZ W0, 0x1
	0x0275BFF4 MOV X1, X31
	0x0275BFF8 BL 0x338F3E0
	0x0275BFFC STR X19, [X20 + 0x10]
	0x0275C000 LDP X20, X19, [X31 + 0x10]
	0x0275C004 LDR X30, [X31], #0x20
	0x0275C008 RET
	0x0275C00C LDR X9, [X0 + 0x10]
	0x0275C010 STP X31, X31, [X8]
	0x0275C014 STR X31, [X8 + 0x10]
	0x0275C018 LDR X10, [X1 + 0x20]
	0x0275C01C MOV X0, X8
	0x0275C020 MOV X1, X9

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, [X0+16]
	004 Compare X19, 0
	005 JumpIfEqual {39}
	006 Move X8, [X1+32]
	007 Move X8, [X8+192]
	008 Move X1, [X8]
	009 Move W8, [X1+309]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X1
	015 Call 0x1C5D684
	016 Move X1, X0
	017 Move X8, [X19]
	018 NotImplemented "Instruction LDRH not yet implemented."
	019 Compare X9, 0
	020 JumpIfEqual {27}
	021 Move X10, [X8+176]
	022 Add X10, X10, 8
	023 NotImplemented "Instruction LDUR not yet implemented."
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Subtract X9, X9, 1
	026 Add X10, X10, 16
	027 Move X0, X19
	028 Move W2, W31
	029 Call 0x1C5D788
	030 NotImplemented "Instruction LDRSW not yet implemented."
	031 Add X8, X8, X9
	032 Add X0, X8, 312
	033 Move X2, [X0]
	034 Move X1, [X0+8]
	035 Move X0, X19
	036 Move X30, [X31+16]
	037 Move X19, [X31+24]
	038 CallNoReturn X2
	039 Call 0x1C17F20

Method: System.Boolean System.Collections.Generic.ICollection<TValue>.get_IsReadOnly()

Disassembly:
	0x0275C024 LDR X10, [X10 + 0xC0]
	0x0275C028 LDR X2, [X10 + 0x18]

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Boolean System.Collections.Generic.ICollection<TValue>.Remove(TValue item)

Disassembly:
	0x0275C02C B 0x2C0C9D4
	0x0275C030 STR X30, [X31 - 0x30]!
	0x0275C034 STP X22, X21, [X31 + 0x10]
	0x0275C038 STP X20, X19, [X31 + 0x20]
	0x0275C03C MOV W19, W2
	0x0275C040 CBZ X1, 0x275C114
	0x0275C044 MOV X22, X3
	0x0275C048 MOV X20, X1
	0x0275C04C MOV X21, X0
	0x0275C050 TBNZ X19, 0x1F, 0x275C060
	0x0275C054 LDR W8, [X20 + 0x18]
	0x0275C058 CMP W8, W19
	0x0275C05C B.GE 0x275C068
	0x0275C060 MOV X0, X31
	0x0275C064 BL 0x339E2CC
	0x0275C068 LDR X0, [X21 + 0x10]
	0x0275C06C CBZ X0, 0x275C128
	0x0275C070 LDR X8, [X22 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0x1998000
	005 Move X0, [X0+2880]
	006 Move X19, X2
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X20, X0
	010 Move X0, 0x19C2000
	011 Move X0, [X0+104]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X20
	015 Move X2, X31
	016 Call NotSupportedException..ctor, X0, X1
	017 Move X0, X20
	018 Move X1, X19
	019 Call 0x1C17DEC

Method: System.Collections.Generic.IEnumerator`1<TValue> GetEnumerator()

Disassembly:
	0x0275C074 LDR X8, [X8 + 0xC0]
	0x0275C078 LDR X1, [X8 + 0x28]
	0x0275C07C BL 0x2AAE77C
	0x0275C080 LDR W8, [X20 + 0x18]
	0x0275C084 SUB W8, W8, W19
	0x0275C088 CMP W8, W0
	0x0275C08C B.GE 0x275C09C
	0x0275C090 MOVZ W0, 0x5
	0x0275C094 MOV X1, X31
	0x0275C098 BL 0x339DA4C
	0x0275C09C LDR X9, [X21 + 0x10]
	0x0275C0A0 CBZ X9, 0x275C128
	0x0275C0A4 LDR W8, [X9 + 0x20]
	0x0275C0A8 CMP W8, 0x1
	0x0275C0AC B.LT 0x275C100
	0x0275C0B0 LDR X9, [X9 + 0x18]
	0x0275C0B4 CBZ X9, 0x275C128
	0x0275C0B8 MOV X10, X31
	0x0275C0BC ADD X11, X9, 0x30
	0x0275C0C0 LDR W12, [X9 + 0x18]
	0x0275C0C4 CMP X10, X12
	0x0275C0C8 B.CS 0x275C110
	0x0275C0CC LDUR W12, [X11 - 0x10]
	0x0275C0D0 TBNZ X12, 0x1F, 0x275C0F0
	0x0275C0D4 LDR W12, [X20 + 0x18]
	0x0275C0D8 CMP W19, W12
	0x0275C0DC B.CS 0x275C110
	0x0275C0E0 LDR X12, [X11]
	0x0275C0E4 ADD X13, X20, W19, 0x3, SXTW
	0x0275C0E8 ADD W19, W19, 0x1
	0x0275C0EC STR X12, [X13 + 0x20]
	0x0275C0F0 ADD X10, X10, 0x1
	0x0275C0F4 CMP X8, X10
	0x0275C0F8 ADD X11, X11, 0x18

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, [X0+16]
	004 Compare X19, 0
	005 JumpIfEqual {39}
	006 Move X8, [X1+32]
	007 Move X8, [X8+192]
	008 Move X1, [X8+56]
	009 Move W8, [X1+309]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X1
	015 Call 0x1C5D684
	016 Move X1, X0
	017 Move X8, [X19]
	018 NotImplemented "Instruction LDRH not yet implemented."
	019 Compare X9, 0
	020 JumpIfEqual {27}
	021 Move X10, [X8+176]
	022 Add X10, X10, 8
	023 NotImplemented "Instruction LDUR not yet implemented."
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Subtract X9, X9, 1
	026 Add X10, X10, 16
	027 Move X0, X19
	028 Move W2, W31
	029 Call 0x1C5D788
	030 NotImplemented "Instruction LDRSW not yet implemented."
	031 Add X8, X8, X9
	032 Add X0, X8, 312
	033 Move X2, [X0]
	034 Move X1, [X0+8]
	035 Move X0, X19
	036 Move X30, [X31+16]
	037 Move X19, [X31+24]
	038 CallNoReturn X2
	039 Call 0x1C17F20

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x0275C0FC B.NE 0x275C0C0
	0x0275C100 LDP X20, X19, [X31 + 0x20]
	0x0275C104 LDP X22, X21, [X31 + 0x10]
	0x0275C108 LDR X30, [X31], #0x30
	0x0275C10C RET
	0x0275C110 BL 0x1C16F28
	0x0275C114 MOVZ W0, 0x3
	0x0275C118 BL 0x338F3E0
	0x0275C11C TBZ X19, 0x1F, 0x275C128
	0x0275C120 MOV X0, X31
	0x0275C124 BL 0x339E2CC
	0x0275C128 BL 0x1C16F20
	0x0275C12C STR X30, [X31 - 0x10]!
	0x0275C130 LDR X0, [X0 + 0x10]
	0x0275C134 CBZ X0, 0x275C14C
	0x0275C138 LDR X8, [X1 + 0x20]
	0x0275C13C LDR X8, [X8 + 0xC0]
	0x0275C140 LDR X1, [X8 + 0x28]
	0x0275C144 LDR X30, [X31], #0x10
	0x0275C148 B 0x2AAE77C
	0x0275C14C BL 0x1C16F20
	0x0275C150 MOVZ W0, 0x1
	0x0275C154 RET
	0x0275C158 MOVZ W0, 0x14
	0x0275C15C MOV X1, X31
	0x0275C160 B 0x339E04C
	0x0275C164 STR X30, [X31 - 0x10]!
	0x0275C168 MOVZ W0, 0x14
	0x0275C16C MOV X1, X31
	0x0275C170 BL 0x339E04C
	0x0275C174 MOV W0, W31
	0x0275C178 LDR X30, [X31], #0x10
	0x0275C17C RET
	0x0275C180 MOVZ W0, 0x14
	0x0275C184 MOV X1, X31
	0x0275C188 B 0x339E04C
	0x0275C18C STR X30, [X31 - 0x10]!
	0x0275C190 LDR X0, [X0 + 0x10]
	0x0275C194 CBZ X0, 0x275C1AC
	0x0275C198 LDR X8, [X2 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1C7F000
	005 Move W8, [X20+1900]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x19A0000
	012 Move X0, [X0+3512]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1900], W8
	016 Move X19, [X19+16]
	017 Compare X19, 0
	018 JumpIfEqual {45}
	019 Move X10, 0x19A0000
	020 Move X8, [X19]
	021 Move X10, [X10+3512]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Move X1, [X10]
	024 Compare X9, 0
	025 JumpIfEqual {32}
	026 Move X10, [X8+176]
	027 Add X10, X10, 8
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Subtract X9, X9, 1
	031 Add X10, X10, 16
	032 Move X0, X19
	033 Move W2, W31
	034 Call 0x1C5D788
	035 NotImplemented "Instruction LDRSW not yet implemented."
	036 Add X8, X8, X9
	037 Add X0, X8, 312
	038 Move X2, [X0]
	039 Move X1, [X0+8]
	040 Move X0, X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 CallNoReturn X2
	045 Call 0x1C17F20

Method: System.Void System.Collections.ICollection.CopyTo(System.Array array, System.Int32 index)

Disassembly:
	0x0275C19C LDR X8, [X8 + 0xC0]
	0x0275C1A0 LDR X2, [X8 + 0x48]
	0x0275C1A4 LDR X30, [X31], #0x10
	0x0275C1A8 B 0x2AAEBA4
	0x0275C1AC BL 0x1C16F20

ISIL:
	001 Move X8, [X3+32]
	002 Move X0, [X0+16]
	003 Move X8, [X8+192]
	004 Move X3, [X8+80]
	005 Call 0x223DA24, X0, X1, X2
	006 Return 

Method: System.Boolean System.Collections.ICollection.get_IsSynchronized()

Disassembly:
	0x0275C1B0 SUB X31, X31, 0x40
	0x0275C1B4 STP X30, X19, [X31 + 0x30]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Object System.Collections.ICollection.get_SyncRoot()

Disassembly:
	0x0275C1B8 MOV X19, X1
	0x0275C1BC LDR X1, [X0 + 0x10]
	0x0275C1C0 STP X31, X31, [X31 + 0x18]
	0x0275C1C4 STR X31, [X31 + 0x28]
	0x0275C1C8 LDR X8, [X19 + 0x20]
	0x0275C1CC ADD X0, X31, 0x18
	0x0275C1D0 LDR X8, [X8 + 0xC0]
	0x0275C1D4 LDR X2, [X8 + 0x18]
	0x0275C1D8 BL 0x2C0C9D4
	0x0275C1DC LDUR V0, [X31 + 0x18]
	0x0275C1E0 LDR X8, [X31 + 0x28]
	0x0275C1E4 ADD X1, X31, 0x0
	0x0275C1E8 STR V0, [X31]
	0x0275C1EC STR X8, [X31 + 0x10]
	0x0275C1F0 LDR X8, [X19 + 0x20]
	0x0275C1F4 LDR X8, [X8 + 0xC0]
	0x0275C1F8 LDR X0, [X8 + 0x10]
	0x0275C1FC BL 0x1C16E04
	0x0275C200 LDP X30, X19, [X31 + 0x30]
	0x0275C204 ADD X31, X31, 0x40
	0x0275C208 RET
	0x0275C20C SUB X31, X31, 0x40
	0x0275C210 STP X30, X19, [X31 + 0x30]
	0x0275C214 MOV X19, X1
	0x0275C218 LDR X1, [X0 + 0x10]
	0x0275C21C STP X31, X31, [X31 + 0x18]
	0x0275C220 STR X31, [X31 + 0x28]
	0x0275C224 LDR X8, [X19 + 0x20]
	0x0275C228 ADD X0, X31, 0x18
	0x0275C22C LDR X8, [X8 + 0xC0]
	0x0275C230 LDR X2, [X8 + 0x18]
	0x0275C234 BL 0x2C0C9D4
	0x0275C238 LDUR V0, [X31 + 0x18]
	0x0275C23C LDR X8, [X31 + 0x28]
	0x0275C240 ADD X1, X31, 0x0
	0x0275C244 STR V0, [X31]
	0x0275C248 STR X8, [X31 + 0x10]
	0x0275C24C LDR X8, [X19 + 0x20]
	0x0275C250 LDR X8, [X8 + 0xC0]
	0x0275C254 LDR X0, [X8 + 0x10]
	0x0275C258 BL 0x1C16E04
	0x0275C25C LDP X30, X19, [X31 + 0x30]
	0x0275C260 ADD X31, X31, 0x40
	0x0275C264 RET
	0x0275C268 STR X30, [X31 - 0x50]!
	0x0275C26C STP X26, X25, [X31 + 0x10]
	0x0275C270 STP X24, X23, [X31 + 0x20]
	0x0275C274 STP X22, X21, [X31 + 0x30]
	0x0275C278 STP X20, X19, [X31 + 0x40]
	0x0275C27C ADRP X23, 0x1C7E000
	0x0275C280 LDRB W8, [X23 + 0x772]
	0x0275C284 MOV X20, X3
	0x0275C288 MOV W19, W2
	0x0275C28C MOV X22, X1
	0x0275C290 MOV X21, X0
	0x0275C294 TBNZ X8, 0x0, 0x275C2AC
	0x0275C298 ADRP X0, 0x1997000
	0x0275C29C LDR X0, [X0 + 0x9D0]
	0x0275C2A0 BL 0x1C16CF4
	0x0275C2A4 MOVZ W8, 0x1
	0x0275C2A8 STRB W8, [X23 + 0x772]
	0x0275C2AC CBZ X22, 0x275C498
	0x0275C2B0 MOV X0, X22
	0x0275C2B4 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x1C7F000
	006 Move W8, [X19+1901]
	007 Move X20, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x199F000
	013 Move X0, [X0+752]
	014 Call 0x1C17CF4
	015 Move X0, 0x199E000
	016 Move X0, [X0+3264]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+1901], W8
	020 Move X19, X20
	021 Add X19, X19, 24
	022 Move X0, [X19]
	023 Compare X0, 0
	024 JumpIfNotEqual {68}
	025 Move X21, 0x199F000
	026 Move X0, [X20+16]
	027 Move X21, [X21+752]
	028 Move X1, [X21]
	029 Call 0x1C17E00
	030 Compare X0, 0
	031 JumpIfEqual {47}
	032 Move X8, [X0]
	033 Move X1, [X21]
	034 Move X20, X0
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 Compare X9, 0
	037 JumpIfEqual {44}
	038 Move X10, [X8+176]
	039 Add X10, X10, 8
	040 NotImplemented "Instruction LDUR not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Subtract X9, X9, 1
	043 Add X10, X10, 16
	044 Move W2, 2
	045 Move X0, X20
	046 Call 0x1C5D788
	047 Move X8, 0x199E000
	048 Move X8, [X8+3264]
	049 Move X0, [X8]
	050 Call 0x1C17F10
	051 Move X1, X31
	052 Move X20, X0
	053 Call Object..ctor, X0
	054 Move X0, X19
	055 Move X1, X20
	056 Move X2, X31
	057 Call 0x1C25138
	058 Move X0, [X19]
	059 Move W9, [X10]
	060 Add W9, W9, 2
	061 Add X8, X8, W9
	062 Add X0, X8, 312
	063 Move X8, [X0]
	064 Move X1, [X0+8]
	065 Move X0, X20
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Move [X19], X0
	068 Move X20, [X31+16]
	069 Move X19, [X31+24]
	070 Move X30, [X31+32]
	071 Move X21, [X31+40]
	072 Return X0

Method: System.Void .ctor()

Disassembly:
	0x0275C2B8 BL 0x339FCE4
	0x0275C2BC CMP W0, 0x1
	0x0275C2C0 B.EQ 0x275C2D0

ISIL:
	001 Move [X31-16], X30
	002 Move X0, X1
	003 Call 0x1C17D9C

