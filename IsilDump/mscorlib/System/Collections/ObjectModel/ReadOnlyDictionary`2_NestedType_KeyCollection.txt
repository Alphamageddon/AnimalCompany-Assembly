Type: System.Collections.ObjectModel.ReadOnlyDictionary`2/KeyCollection

Method: System.Void .ctor(System.Collections.Generic.ICollection`1<TKey> collection)

Disassembly:
	0x02EC85D4 B 0x2EC85E0
	0x02EC85D8 B 0x2EC85E0
	0x02EC85DC B 0x2EC85E0
	0x02EC85E0 MOV X19, X0
	0x02EC85E4 CMP W1, 0x1
	0x02EC85E8 B.NE 0x2EC8658
	0x02EC85EC MOV X0, X19
	0x02EC85F0 BL 0x3EB1AD0
	0x02EC85F4 MOV X19, X0
	0x02EC85F8 ADRP X0, 0x1254000
	0x02EC85FC LDR X0, [X0 + 0x320]
	0x02EC8600 BL 0x1C16D08
	0x02EC8604 LDR X8, [X19]
	0x02EC8608 LDR X1, [X8]
	0x02EC860C BL 0x1C17270
	0x02EC8610 TBZ X0, 0x0, 0x2EC8630
	0x02EC8614 BL 0x3EB1AE0
	0x02EC8618 LDP X20, X19, [X31 + 0x30]
	0x02EC861C LDP X22, X21, [X31 + 0x20]
	0x02EC8620 LDP X24, X23, [X31 + 0x10]
	0x02EC8624 MOV X0, X31
	0x02EC8628 LDP X30, X25, [X31], #0x40
	0x02EC862C B 0x339E304
	0x02EC8630 MOVZ W0, 0x8
	0x02EC8634 BL 0x3EB1AF0
	0x02EC8638 LDR X8, [X19]
	0x02EC863C STR X8, [X0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X1
	006 Move X1, X31
	007 Move X19, X2
	008 Move X21, X0
	009 Call Object..ctor, X0
	010 Compare X20, 0
	011 JumpIfEqual {18}
	012 Move [X21+16], X20
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move X30, [X31+32]
	016 Move X21, [X31+40]
	017 Return 
	018 Move X0, 0x1231000
	019 Move X0, [X0+1320]
	020 Call 0x1C17D08
	021 Call 0x1C17F10
	022 Move X20, X0
	023 Move X0, 0x1254000
	024 Move X0, [X0+2280]
	025 Call 0x1C17D08
	026 Move X1, X0
	027 Move X0, X20
	028 Move X2, X31
	029 Call ArgumentNullException..ctor, X0, X1
	030 Move X0, X20
	031 Move X1, X19
	032 Call 0x1C17DEC

Method: System.Void System.Collections.Generic.ICollection<TKey>.Add(TKey item)

Disassembly:
	0x02EC8640 ADRP X1, 0xFEC000
	0x02EC8644 ADD X1, X1, 0xE58
	0x02EC8648 MOV X2, X31
	0x02EC864C BL 0x3EB1B00
	0x02EC8650 MOV X19, X0
	0x02EC8654 BL 0x3EB1AE0
	0x02EC8658 MOV X0, X19
	0x02EC865C BL 0x1D2C690
	0x02EC8660 BL 0x1990590
	0x02EC8664 MOV W0, W31
	0x02EC8668 RET
	0x02EC866C STR X30, [X31 - 0x20]!
	0x02EC8670 STP X20, X19, [X31 + 0x10]
	0x02EC8674 ADRP X20, 0x1513000
	0x02EC8678 LDRB W8, [X20 + 0xAF5]
	0x02EC867C MOV X19, X0
	0x02EC8680 TBNZ X8, 0x0, 0x2EC8698
	0x02EC8684 ADRP X0, 0x1232000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0x122C000
	005 Move X0, [X0+2880]
	006 Move X19, X2
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X20, X0
	010 Move X0, 0x1256000
	011 Move X0, [X0+104]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X20
	015 Move X2, X31
	016 Call NotSupportedException..ctor, X0, X1
	017 Move X0, X20
	018 Move X1, X19
	019 Call 0x1C17DEC

Method: System.Void System.Collections.Generic.ICollection<TKey>.Clear()

Disassembly:
	0x02EC8688 LDR X0, [X0 + 0x2F0]
	0x02EC868C BL 0x1C16CF4
	0x02EC8690 MOVZ W8, 0x1
	0x02EC8694 STRB W8, [X20 + 0xAF5]
	0x02EC8698 LDR X19, [X19 + 0x10]
	0x02EC869C CBZ X19, 0x2EC870C
	0x02EC86A0 ADRP X10, 0x1232000
	0x02EC86A4 LDR X8, [X19]
	0x02EC86A8 LDR X10, [X10 + 0x2F0]
	0x02EC86AC LDRH W9, [X8 + 0x12E]
	0x02EC86B0 LDR X1, [X10]
	0x02EC86B4 CBZ X9, 0x2EC86D8
	0x02EC86B8 LDR X10, [X8 + 0xB0]
	0x02EC86BC ADD X10, X10, 0x8
	0x02EC86C0 LDUR X11, [X10 - 0x8]
	0x02EC86C4 CMP X11, X1
	0x02EC86C8 B.EQ 0x2EC86E8
	0x02EC86CC SUBS X9, X9, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0x122C000
	005 Move X0, [X0+2880]
	006 Move X19, X1
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X20, X0
	010 Move X0, 0x1256000
	011 Move X0, [X0+104]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X20
	015 Move X2, X31
	016 Call NotSupportedException..ctor, X0, X1
	017 Move X0, X20
	018 Move X1, X19
	019 Call 0x1C17DEC

Method: System.Boolean System.Collections.Generic.ICollection<TKey>.Contains(TKey item)

Disassembly:
	0x02EC86D0 ADD X10, X10, 0x10
	0x02EC86D4 B.NE 0x2EC86C0
	0x02EC86D8 MOVZ W2, 0x2
	0x02EC86DC MOV X0, X19
	0x02EC86E0 BL 0x1C5C788
	0x02EC86E4 B 0x2EC86F8
	0x02EC86E8 LDR W9, [X10]
	0x02EC86EC ADD W9, W9, 0x2
	0x02EC86F0 ADD X8, X8, W9, 0x4, SXTW
	0x02EC86F4 ADD X0, X8, 0x138
	0x02EC86F8 LDP X2, X1, [X0]
	0x02EC86FC MOV X0, X19
	0x02EC8700 LDP X20, X19, [X31 + 0x10]
	0x02EC8704 LDR X30, [X31], #0x20
	0x02EC8708 BR X2
	0x02EC870C BL 0x1C16F20
	0x02EC8710 STR X30, [X31 - 0x20]!
	0x02EC8714 STP X20, X19, [X31 + 0x10]
	0x02EC8718 MOV X19, X1
	0x02EC871C MOV X1, X31
	0x02EC8720 MOV X20, X0
	0x02EC8724 BL 0x33BDD8C
	0x02EC8728 CBNZ X19, 0x2EC8738
	0x02EC872C MOVZ W0, 0x1
	0x02EC8730 MOV X1, X31
	0x02EC8734 BL 0x338F3E0
	0x02EC8738 STR X19, [X20 + 0x10]
	0x02EC873C LDP X20, X19, [X31 + 0x10]
	0x02EC8740 LDR X30, [X31], #0x20
	0x02EC8744 RET
	0x02EC8748 LDR X9, [X0 + 0x10]
	0x02EC874C STP X31, X31, [X8]
	0x02EC8750 STR X31, [X8 + 0x10]
	0x02EC8754 LDR X10, [X1 + 0x20]
	0x02EC8758 MOV X0, X8
	0x02EC875C MOV X1, X9
	0x02EC8760 LDR X10, [X10 + 0xC0]
	0x02EC8764 LDR X2, [X10 + 0x18]
	0x02EC8768 B 0x2C0C874

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, [X0+16]
	005 Compare X20, 0
	006 JumpIfEqual {44}
	007 Move X8, [X2+32]
	008 Move X19, X1
	009 Move X8, [X8+192]
	010 Move X1, [X8]
	011 Move W8, [X1+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {19}
	016 Move X0, X1
	017 Call 0x1C5D684
	018 Move X1, X0
	019 Move X8, [X20]
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Compare X9, 0
	022 JumpIfEqual {29}
	023 Move X10, [X8+176]
	024 Add X10, X10, 8
	025 NotImplemented "Instruction LDUR not yet implemented."
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Subtract X9, X9, 1
	028 Add X10, X10, 16
	029 Move W2, 4
	030 Move X0, X20
	031 Call 0x1C5D788
	032 Move W9, [X10]
	033 Add W9, W9, 4
	034 Add X8, X8, W9
	035 Add X0, X8, 312
	036 Move X3, [X0]
	037 Move X2, [X0+8]
	038 Move X0, X20
	039 Move X1, X19
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 CallNoReturn X3
	044 Call 0x1C17F20

Method: System.Void CopyTo(TKey[] array, System.Int32 arrayIndex)

Disassembly:
	0x02EC876C STR X30, [X31 - 0x30]!
	0x02EC8770 STP X22, X21, [X31 + 0x10]
	0x02EC8774 STP X20, X19, [X31 + 0x20]
	0x02EC8778 MOV W19, W2
	0x02EC877C CBZ X1, 0x2EC8850
	0x02EC8780 MOV X22, X3
	0x02EC8784 MOV X20, X1
	0x02EC8788 MOV X21, X0
	0x02EC878C TBNZ X19, 0x1F, 0x2EC879C
	0x02EC8790 LDR W8, [X20 + 0x18]
	0x02EC8794 CMP W8, W19
	0x02EC8798 B.GE 0x2EC87A4
	0x02EC879C MOV X0, X31
	0x02EC87A0 BL 0x339E2CC
	0x02EC87A4 LDR X0, [X21 + 0x10]
	0x02EC87A8 CBZ X0, 0x2EC8864
	0x02EC87AC LDR X8, [X22 + 0x20]
	0x02EC87B0 LDR X8, [X8 + 0xC0]
	0x02EC87B4 LDR X1, [X8 + 0x28]
	0x02EC87B8 BL 0x2AAE77C
	0x02EC87BC LDR W8, [X20 + 0x18]
	0x02EC87C0 SUB W8, W8, W19
	0x02EC87C4 CMP W8, W0
	0x02EC87C8 B.GE 0x2EC87D8
	0x02EC87CC MOVZ W0, 0x5
	0x02EC87D0 MOV X1, X31
	0x02EC87D4 BL 0x339DA4C
	0x02EC87D8 LDR X9, [X21 + 0x10]
	0x02EC87DC CBZ X9, 0x2EC8864
	0x02EC87E0 LDR W8, [X9 + 0x20]
	0x02EC87E4 CMP W8, 0x1
	0x02EC87E8 B.LT 0x2EC883C
	0x02EC87EC LDR X11, [X9 + 0x18]
	0x02EC87F0 CBZ X11, 0x2EC8864
	0x02EC87F4 LDR W10, [X11 + 0x18]
	0x02EC87F8 MOV X9, X31
	0x02EC87FC ADD X11, X11, 0x28
	0x02EC8800 CMP X9, X10
	0x02EC8804 B.CS 0x2EC884C
	0x02EC8808 LDUR W12, [X11 - 0x8]
	0x02EC880C TBNZ X12, 0x1F, 0x2EC882C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, [X0+16]
	006 Compare X21, 0
	007 JumpIfEqual {48}
	008 Move X8, [X3+32]
	009 Move X20, X1
	010 Move W19, W2
	011 Move X8, [X8+192]
	012 Move X1, [X8]
	013 Move W8, [X1+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {21}
	018 Move X0, X1
	019 Call 0x1C5D684
	020 Move X1, X0
	021 Move X8, [X21]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Compare X9, 0
	024 JumpIfEqual {31}
	025 Move X10, [X8+176]
	026 Add X10, X10, 8
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Subtract X9, X9, 1
	030 Add X10, X10, 16
	031 Move W2, 5
	032 Move X0, X21
	033 Call 0x1C5D788
	034 Move W9, [X10]
	035 Add W9, W9, 5
	036 Add X8, X8, W9
	037 Add X0, X8, 312
	038 Move X4, [X0]
	039 Move X3, [X0+8]
	040 Move X1, X20
	041 Move W2, W19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X0, X21
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 CallNoReturn X4
	048 Call 0x1C17F20

Method: System.Int32 get_Count()

Disassembly:
	0x02EC8810 LDR W12, [X20 + 0x18]
	0x02EC8814 CMP W19, W12
	0x02EC8818 B.CS 0x2EC884C
	0x02EC881C LDR X12, [X11]
	0x02EC8820 ADD X13, X20, W19, 0x3, SXTW
	0x02EC8824 ADD W19, W19, 0x1
	0x02EC8828 STR X12, [X13 + 0x20]
	0x02EC882C ADD X9, X9, 0x1
	0x02EC8830 CMP X8, X9
	0x02EC8834 ADD X11, X11, 0x18
	0x02EC8838 B.NE 0x2EC8800
	0x02EC883C LDP X20, X19, [X31 + 0x20]
	0x02EC8840 LDP X22, X21, [X31 + 0x10]
	0x02EC8844 LDR X30, [X31], #0x30
	0x02EC8848 RET
	0x02EC884C BL 0x1C16F28
	0x02EC8850 MOVZ W0, 0x3
	0x02EC8854 BL 0x338F3E0
	0x02EC8858 TBZ X19, 0x1F, 0x2EC8864
	0x02EC885C MOV X0, X31
	0x02EC8860 BL 0x339E2CC
	0x02EC8864 BL 0x1C16F20
	0x02EC8868 STR X30, [X31 - 0x10]!
	0x02EC886C LDR X0, [X0 + 0x10]
	0x02EC8870 CBZ X0, 0x2EC8888
	0x02EC8874 LDR X8, [X1 + 0x20]
	0x02EC8878 LDR X8, [X8 + 0xC0]
	0x02EC887C LDR X1, [X8 + 0x28]
	0x02EC8880 LDR X30, [X31], #0x10
	0x02EC8884 B 0x2AAE77C
	0x02EC8888 BL 0x1C16F20
	0x02EC888C MOVZ W0, 0x1
	0x02EC8890 RET
	0x02EC8894 MOVZ W0, 0x13

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, [X0+16]
	004 Compare X19, 0
	005 JumpIfEqual {39}
	006 Move X8, [X1+32]
	007 Move X8, [X8+192]
	008 Move X1, [X8]
	009 Move W8, [X1+309]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X1
	015 Call 0x1C5D684
	016 Move X1, X0
	017 Move X8, [X19]
	018 NotImplemented "Instruction LDRH not yet implemented."
	019 Compare X9, 0
	020 JumpIfEqual {27}
	021 Move X10, [X8+176]
	022 Add X10, X10, 8
	023 NotImplemented "Instruction LDUR not yet implemented."
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Subtract X9, X9, 1
	026 Add X10, X10, 16
	027 Move X0, X19
	028 Move W2, W31
	029 Call 0x1C5D788
	030 NotImplemented "Instruction LDRSW not yet implemented."
	031 Add X8, X8, X9
	032 Add X0, X8, 312
	033 Move X2, [X0]
	034 Move X1, [X0+8]
	035 Move X0, X19
	036 Move X30, [X31+16]
	037 Move X19, [X31+24]
	038 CallNoReturn X2
	039 Call 0x1C17F20

Method: System.Boolean System.Collections.Generic.ICollection<TKey>.get_IsReadOnly()

Disassembly:
	0x02EC8898 MOV X1, X31
	0x02EC889C B 0x339E04C

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Boolean System.Collections.Generic.ICollection<TKey>.Remove(TKey item)

Disassembly:
	0x02EC88A0 MOVZ W0, 0x13
	0x02EC88A4 MOV X1, X31
	0x02EC88A8 B 0x339E04C
	0x02EC88AC STR X30, [X31 - 0x10]!
	0x02EC88B0 LDR X0, [X0 + 0x10]
	0x02EC88B4 CBZ X0, 0x2EC88CC
	0x02EC88B8 LDR X8, [X2 + 0x20]
	0x02EC88BC LDR X8, [X8 + 0xC0]
	0x02EC88C0 LDR X2, [X8 + 0x48]
	0x02EC88C4 LDR X30, [X31], #0x10
	0x02EC88C8 B 0x2AAEB80
	0x02EC88CC BL 0x1C16F20
	0x02EC88D0 STR X30, [X31 - 0x10]!
	0x02EC88D4 MOVZ W0, 0x13
	0x02EC88D8 MOV X1, X31
	0x02EC88DC BL 0x339E04C
	0x02EC88E0 MOV W0, W31
	0x02EC88E4 LDR X30, [X31], #0x10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0x122C000
	005 Move X0, [X0+2880]
	006 Move X19, X2
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X20, X0
	010 Move X0, 0x1256000
	011 Move X0, [X0+104]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X20
	015 Move X2, X31
	016 Call NotSupportedException..ctor, X0, X1
	017 Move X0, X20
	018 Move X1, X19
	019 Call 0x1C17DEC

Method: System.Collections.Generic.IEnumerator`1<TKey> GetEnumerator()

Disassembly:
	0x02EC88E8 RET
	0x02EC88EC SUB X31, X31, 0x40
	0x02EC88F0 STP X30, X19, [X31 + 0x30]
	0x02EC88F4 MOV X19, X1
	0x02EC88F8 LDR X1, [X0 + 0x10]
	0x02EC88FC STP X31, X31, [X31 + 0x18]
	0x02EC8900 STR X31, [X31 + 0x28]
	0x02EC8904 LDR X8, [X19 + 0x20]
	0x02EC8908 ADD X0, X31, 0x18
	0x02EC890C LDR X8, [X8 + 0xC0]
	0x02EC8910 LDR X2, [X8 + 0x18]
	0x02EC8914 BL 0x2C0C874
	0x02EC8918 LDUR V0, [X31 + 0x18]
	0x02EC891C LDR X8, [X31 + 0x28]
	0x02EC8920 ADD X1, X31, 0x0
	0x02EC8924 STR V0, [X31]
	0x02EC8928 STR X8, [X31 + 0x10]
	0x02EC892C LDR X8, [X19 + 0x20]
	0x02EC8930 LDR X8, [X8 + 0xC0]
	0x02EC8934 LDR X0, [X8 + 0x10]
	0x02EC8938 BL 0x1C16E04
	0x02EC893C LDP X30, X19, [X31 + 0x30]
	0x02EC8940 ADD X31, X31, 0x40
	0x02EC8944 RET
	0x02EC8948 SUB X31, X31, 0x40
	0x02EC894C STP X30, X19, [X31 + 0x30]
	0x02EC8950 MOV X19, X1
	0x02EC8954 LDR X1, [X0 + 0x10]
	0x02EC8958 STP X31, X31, [X31 + 0x18]
	0x02EC895C STR X31, [X31 + 0x28]
	0x02EC8960 LDR X8, [X19 + 0x20]
	0x02EC8964 ADD X0, X31, 0x18
	0x02EC8968 LDR X8, [X8 + 0xC0]
	0x02EC896C LDR X2, [X8 + 0x18]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, [X0+16]
	004 Compare X19, 0
	005 JumpIfEqual {39}
	006 Move X8, [X1+32]
	007 Move X8, [X8+192]
	008 Move X1, [X8+56]
	009 Move W8, [X1+309]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X1
	015 Call 0x1C5D684
	016 Move X1, X0
	017 Move X8, [X19]
	018 NotImplemented "Instruction LDRH not yet implemented."
	019 Compare X9, 0
	020 JumpIfEqual {27}
	021 Move X10, [X8+176]
	022 Add X10, X10, 8
	023 NotImplemented "Instruction LDUR not yet implemented."
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Subtract X9, X9, 1
	026 Add X10, X10, 16
	027 Move X0, X19
	028 Move W2, W31
	029 Call 0x1C5D788
	030 NotImplemented "Instruction LDRSW not yet implemented."
	031 Add X8, X8, X9
	032 Add X0, X8, 312
	033 Move X2, [X0]
	034 Move X1, [X0+8]
	035 Move X0, X19
	036 Move X30, [X31+16]
	037 Move X19, [X31+24]
	038 CallNoReturn X2
	039 Call 0x1C17F20

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x02EC8970 BL 0x2C0C874
	0x02EC8974 LDUR V0, [X31 + 0x18]
	0x02EC8978 LDR X8, [X31 + 0x28]
	0x02EC897C ADD X1, X31, 0x0
	0x02EC8980 STR V0, [X31]
	0x02EC8984 STR X8, [X31 + 0x10]
	0x02EC8988 LDR X8, [X19 + 0x20]
	0x02EC898C LDR X8, [X8 + 0xC0]
	0x02EC8990 LDR X0, [X8 + 0x10]
	0x02EC8994 BL 0x1C16E04
	0x02EC8998 LDP X30, X19, [X31 + 0x30]
	0x02EC899C ADD X31, X31, 0x40
	0x02EC89A0 RET
	0x02EC89A4 STP X30, X25, [X31 - 0x40]!
	0x02EC89A8 STP X24, X23, [X31 + 0x10]
	0x02EC89AC STP X22, X21, [X31 + 0x20]
	0x02EC89B0 STP X20, X19, [X31 + 0x30]
	0x02EC89B4 ADRP X23, 0x1513000
	0x02EC89B8 LDRB W8, [X23 + 0xAF6]
	0x02EC89BC MOV X22, X3
	0x02EC89C0 MOV W19, W2
	0x02EC89C4 MOV X21, X1
	0x02EC89C8 MOV X20, X0
	0x02EC89CC TBNZ X8, 0x0, 0x2EC89E4
	0x02EC89D0 ADRP X0, 0x122B000
	0x02EC89D4 LDR X0, [X0 + 0x9D0]
	0x02EC89D8 BL 0x1C16CF4
	0x02EC89DC MOVZ W8, 0x1
	0x02EC89E0 STRB W8, [X23 + 0xAF6]
	0x02EC89E4 CBZ X21, 0x2EC8BAC
	0x02EC89E8 MOV X0, X21
	0x02EC89EC MOV X1, X31
	0x02EC89F0 BL 0x339FCE4
	0x02EC89F4 CMP W0, 0x1
	0x02EC89F8 B.EQ 0x2EC8A08
	0x02EC89FC MOVZ W0, 0x7
	0x02EC8A00 MOV X1, X31
	0x02EC8A04 BL 0x339DA4C
	0x02EC8A08 MOV X0, X21
	0x02EC8A0C MOV W1, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1514000
	005 Move W8, [X20+2800]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x1234000
	012 Move X0, [X0+3512]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2800], W8
	016 Move X19, [X19+16]
	017 Compare X19, 0
	018 JumpIfEqual {45}
	019 Move X10, 0x1234000
	020 Move X8, [X19]
	021 Move X10, [X10+3512]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Move X1, [X10]
	024 Compare X9, 0
	025 JumpIfEqual {32}
	026 Move X10, [X8+176]
	027 Add X10, X10, 8
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Subtract X9, X9, 1
	031 Add X10, X10, 16
	032 Move X0, X19
	033 Move W2, W31
	034 Call 0x1C5D788
	035 NotImplemented "Instruction LDRSW not yet implemented."
	036 Add X8, X8, X9
	037 Add X0, X8, 312
	038 Move X2, [X0]
	039 Move X1, [X0+8]
	040 Move X0, X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 CallNoReturn X2
	045 Call 0x1C17F20

Method: System.Void System.Collections.ICollection.CopyTo(System.Array array, System.Int32 index)

Disassembly:
	0x02EC8A10 MOV X2, X31
	0x02EC8A14 BL 0x339FA30
	0x02EC8A18 CBZ W0, 0x2EC8A28
	0x02EC8A1C MOVZ W0, 0x6
	0x02EC8A20 MOV X1, X31

ISIL:
	001 Move X8, [X3+32]
	002 Move X0, [X0+16]
	003 Move X8, [X8+192]
	004 Move X3, [X8+80]
	005 Call 0x223DA24, X0, X1, X2
	006 Return 

Method: System.Boolean System.Collections.ICollection.get_IsSynchronized()

Disassembly:
	0x02EC8A24 BL 0x339DA4C
	0x02EC8A28 MOV X0, X21

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Object System.Collections.ICollection.get_SyncRoot()

Disassembly:
	0x02EC8A2C MOV X1, X31
	0x02EC8A30 BL 0x3395B7C
	0x02EC8A34 CMP W0, W19
	0x02EC8A38 B.CS 0x2EC8A44
	0x02EC8A3C MOV X0, X31
	0x02EC8A40 BL 0x339E2CC
	0x02EC8A44 MOV X0, X21
	0x02EC8A48 MOV X1, X31
	0x02EC8A4C BL 0x3395B7C
	0x02EC8A50 LDR X8, [X20 + 0x10]
	0x02EC8A54 CBZ X8, 0x2EC8BB8
	0x02EC8A58 LDR X9, [X22 + 0x20]
	0x02EC8A5C MOV W23, W0
	0x02EC8A60 MOV X0, X8
	0x02EC8A64 LDR X9, [X9 + 0xC0]
	0x02EC8A68 LDR X1, [X9 + 0x28]
	0x02EC8A6C BL 0x2AAE77C
	0x02EC8A70 SUB W8, W23, W19
	0x02EC8A74 CMP W8, W0
	0x02EC8A78 B.GE 0x2EC8A88
	0x02EC8A7C MOVZ W0, 0x5
	0x02EC8A80 MOV X1, X31
	0x02EC8A84 BL 0x339DA4C
	0x02EC8A88 LDR X8, [X22 + 0x20]
	0x02EC8A8C LDR X8, [X8 + 0xC0]
	0x02EC8A90 LDR X1, [X8 + 0x20]
	0x02EC8A94 LDRB W8, [X1 + 0x135]
	0x02EC8A98 TBNZ X8, 0x0, 0x2EC8AA8
	0x02EC8A9C MOV X0, X1
	0x02EC8AA0 BL 0x1C5C684
	0x02EC8AA4 MOV X1, X0
	0x02EC8AA8 MOV X0, X21
	0x02EC8AAC BL 0x1C16E00
	0x02EC8AB0 CBZ X0, 0x2EC8AE0
	0x02EC8AB4 LDR X8, [X22 + 0x20]
	0x02EC8AB8 MOV X1, X0
	0x02EC8ABC MOV X0, X20
	0x02EC8AC0 MOV W2, W19
	0x02EC8AC4 LDR X8, [X8 + 0xC0]
	0x02EC8AC8 LDP X20, X19, [X31 + 0x30]
	0x02EC8ACC LDP X22, X21, [X31 + 0x20]
	0x02EC8AD0 LDP X24, X23, [X31 + 0x10]
	0x02EC8AD4 LDR X3, [X8 + 0x58]
	0x02EC8AD8 LDP X30, X25, [X31], #0x40
	0x02EC8ADC B 0x2EC876C
	0x02EC8AE0 ADRP X8, 0x122B000
	0x02EC8AE4 LDR X8, [X8 + 0x9D0]
	0x02EC8AE8 MOV X0, X21
	0x02EC8AEC LDR X1, [X8]
	0x02EC8AF0 BL 0x1C16E00
	0x02EC8AF4 MOV X21, X0
	0x02EC8AF8 CBNZ X0, 0x2EC8B00
	0x02EC8AFC BL 0x339E304
	0x02EC8B00 LDR X8, [X20 + 0x10]
	0x02EC8B04 CBZ X8, 0x2EC8BB8
	0x02EC8B08 LDR W22, [X8 + 0x20]
	0x02EC8B0C CMP W22, 0x1
	0x02EC8B10 B.LT 0x2EC8B80
	0x02EC8B14 LDR X23, [X8 + 0x18]
	0x02EC8B18 CBZ X23, 0x2EC8BBC
	0x02EC8B1C MOV X24, X31
	0x02EC8B20 ADD X25, X23, 0x28
	0x02EC8B24 LDR W8, [X23 + 0x18]
	0x02EC8B28 CMP X24, X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x1514000
	006 Move W8, [X19+2801]
	007 Move X20, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x1233000
	013 Move X0, [X0+752]
	014 Call 0x1C17CF4
	015 Move X0, 0x1232000
	016 Move X0, [X0+3264]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+2801], W8
	020 Move X19, X20
	021 Add X19, X19, 24
	022 Move X0, [X19]
	023 Compare X0, 0
	024 JumpIfNotEqual {68}
	025 Move X21, 0x1233000
	026 Move X0, [X20+16]
	027 Move X21, [X21+752]
	028 Move X1, [X21]
	029 Call 0x1C17E00
	030 Compare X0, 0
	031 JumpIfEqual {47}
	032 Move X8, [X0]
	033 Move X1, [X21]
	034 Move X20, X0
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 Compare X9, 0
	037 JumpIfEqual {44}
	038 Move X10, [X8+176]
	039 Add X10, X10, 8
	040 NotImplemented "Instruction LDUR not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Subtract X9, X9, 1
	043 Add X10, X10, 16
	044 Move W2, 2
	045 Move X0, X20
	046 Call 0x1C5D788
	047 Move X8, 0x1232000
	048 Move X8, [X8+3264]
	049 Move X0, [X8]
	050 Call 0x1C17F10
	051 Move X1, X31
	052 Move X20, X0
	053 Call Object..ctor, X0
	054 Move X0, X19
	055 Move X1, X20
	056 Move X2, X31
	057 Call 0x1C25138
	058 Move X0, [X19]
	059 Move W9, [X10]
	060 Add W9, W9, 2
	061 Add X8, X8, W9
	062 Add X0, X8, 312
	063 Move X8, [X0]
	064 Move X1, [X0+8]
	065 Move X0, X20
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Move [X19], X0
	068 Move X20, [X31+16]
	069 Move X19, [X31+24]
	070 Move X30, [X31+32]
	071 Move X21, [X31+40]
	072 Return X0

Method: System.Void .ctor()

Disassembly:
	0x02EC8B2C B.CS 0x2EC8B94
	0x02EC8B30 LDUR W8, [X25 - 0x8]
	0x02EC8B34 TBNZ X8, 0x1F, 0x2EC8B70

ISIL:
	001 Move [X31-16], X30
	002 Move X0, X1
	003 Call 0x1C17D9C

