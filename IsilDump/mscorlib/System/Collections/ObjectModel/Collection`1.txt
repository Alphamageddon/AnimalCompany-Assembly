Type: System.Collections.ObjectModel.Collection`1

Method: System.Void .ctor()

Disassembly:
	0x028FC8A8 ADRP X0, 0x17F7000
	0x028FC8AC LDR X0, [X0 + 0x9D0]
	0x028FC8B0 BL 0x1C16CF4
	0x028FC8B4 ADRP X0, 0x17F7000
	0x028FC8B8 LDR X0, [X0 + 0x6C0]
	0x028FC8BC BL 0x1C16CF4
	0x028FC8C0 MOVZ W8, 0x1
	0x028FC8C4 STRB W8, [X23 + 0xD69]
	0x028FC8C8 CBZ X22, 0x28FCC5C
	0x028FC8CC MOV X0, X22
	0x028FC8D0 MOV X1, X31
	0x028FC8D4 BL 0x339FCE4
	0x028FC8D8 CMP W0, 0x1
	0x028FC8DC B.EQ 0x28FC8EC
	0x028FC8E0 MOVZ W0, 0x7
	0x028FC8E4 MOV X1, X31
	0x028FC8E8 BL 0x339DA4C
	0x028FC8EC MOV X0, X22
	0x028FC8F0 MOV W1, W31
	0x028FC8F4 MOV X2, X31
	0x028FC8F8 BL 0x339FA30
	0x028FC8FC CBZ W0, 0x28FC90C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X1
	005 Move X1, X31
	006 Move X19, X0
	007 Call Object..ctor, X0
	008 Move X8, [X20+32]
	009 Move X8, [X8+192]
	010 Move X0, [X8]
	011 Move W8, [X0+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {17}
	016 Call 0x1C5D684
	017 Call 0x1C17F10
	018 Move X8, [X20+32]
	019 Move X20, X0
	020 Move X8, [X8+192]
	021 Move X1, [X8+8]
	022 Call List`1<Object>..ctor, X0
	023 Move [X19+16], X20
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Return 

Method: System.Int32 get_Count()

Disassembly:
	0x028FC900 MOVZ W0, 0x6
	0x028FC904 MOV X1, X31
	0x028FC908 BL 0x339DA4C
	0x028FC90C TBZ X19, 0x1F, 0x28FC918
	0x028FC910 MOV X0, X31
	0x028FC914 BL 0x339E2CC
	0x028FC918 MOV X0, X22
	0x028FC91C MOV X1, X31
	0x028FC920 BL 0x3395B7C
	0x028FC924 LDR X8, [X20 + 0x20]
	0x028FC928 MOV W23, W0
	0x028FC92C MOV X0, X21
	0x028FC930 LDR X8, [X8 + 0xC0]
	0x028FC934 LDR X1, [X8 + 0xC0]
	0x028FC938 BL 0x28FB900
	0x028FC93C SUB W8, W23, W19
	0x028FC940 CMP W8, W0
	0x028FC944 B.GE 0x28FC954
	0x028FC948 MOVZ W0, 0x5
	0x028FC94C MOV X1, X31
	0x028FC950 BL 0x339DA4C
	0x028FC954 LDR X8, [X20 + 0x20]
	0x028FC958 LDR X8, [X8 + 0xC0]
	0x028FC95C LDR X1, [X8 + 0x60]
	0x028FC960 LDRB W8, [X1 + 0x135]
	0x028FC964 TBNZ X8, 0x0, 0x28FC974
	0x028FC968 MOV X0, X1
	0x028FC96C BL 0x1C5C684
	0x028FC970 MOV X1, X0
	0x028FC974 MOV X0, X22
	0x028FC978 BL 0x1C16E00
	0x028FC97C CBZ X0, 0x28FC9E8
	0x028FC980 LDR X21, [X21 + 0x10]
	0x028FC984 CBZ X21, 0x28FCC68

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, [X0+16]
	004 Compare X19, 0
	005 JumpIfEqual {39}
	006 Move X8, [X1+32]
	007 Move X8, [X8+192]
	008 Move X1, [X8+32]
	009 Move W8, [X1+309]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X1
	015 Call 0x1C5D684
	016 Move X1, X0
	017 Move X8, [X19]
	018 NotImplemented "Instruction LDRH not yet implemented."
	019 Compare X9, 0
	020 JumpIfEqual {27}
	021 Move X10, [X8+176]
	022 Add X10, X10, 8
	023 NotImplemented "Instruction LDUR not yet implemented."
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Subtract X9, X9, 1
	026 Add X10, X10, 16
	027 Move X0, X19
	028 Move W2, W31
	029 Call 0x1C5D788
	030 NotImplemented "Instruction LDRSW not yet implemented."
	031 Add X8, X8, X9
	032 Add X0, X8, 312
	033 Move X2, [X0]
	034 Move X1, [X0+8]
	035 Move X0, X19
	036 Move X30, [X31+16]
	037 Move X19, [X31+24]
	038 CallNoReturn X2
	039 Call 0x1C17F20

Method: T get_Item(System.Int32 index)

Disassembly:
	0x028FC988 LDR X8, [X20 + 0x20]
	0x028FC98C MOV X23, X0
	0x028FC990 LDR X8, [X8 + 0xC0]
	0x028FC994 LDR X1, [X8 + 0x20]
	0x028FC998 LDRB W8, [X1 + 0x135]
	0x028FC99C TBNZ X8, 0x0, 0x28FC9AC
	0x028FC9A0 MOV X0, X1
	0x028FC9A4 BL 0x1C5C684
	0x028FC9A8 MOV X1, X0
	0x028FC9AC LDR X8, [X21]
	0x028FC9B0 LDRH W9, [X8 + 0x12E]
	0x028FC9B4 CBZ X9, 0x28FC9D8
	0x028FC9B8 LDR X10, [X8 + 0xB0]
	0x028FC9BC ADD X10, X10, 0x8
	0x028FC9C0 LDUR X11, [X10 - 0x8]
	0x028FC9C4 CMP X11, X1
	0x028FC9C8 B.EQ 0x28FCB10
	0x028FC9CC SUBS X9, X9, 0x1
	0x028FC9D0 ADD X10, X10, 0x10
	0x028FC9D4 B.NE 0x28FC9C0
	0x028FC9D8 MOVZ W2, 0x5
	0x028FC9DC MOV X0, X21
	0x028FC9E0 BL 0x1C5C788
	0x028FC9E4 B 0x28FCB20
	0x028FC9E8 MOV X0, X22
	0x028FC9EC MOV X1, X31
	0x028FC9F0 BL 0x33BE520
	0x028FC9F4 CBZ X0, 0x28FCC68
	0x028FC9F8 LDR X8, [X0]
	0x028FC9FC LDR X9, [X8 + 0x428]
	0x028FCA00 LDR X1, [X8 + 0x430]
	0x028FCA04 BLR X9
	0x028FCA08 ADRP X8, 0x17F7000
	0x028FCA0C LDR X9, [X20 + 0x20]
	0x028FCA10 LDR X8, [X8 + 0x6C0]
	0x028FCA14 MOV X23, X0
	0x028FCA18 LDR X9, [X9 + 0xC0]
	0x028FCA1C LDR X8, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, [X0+16]
	005 Compare X20, 0
	006 JumpIfEqual {43}
	007 Move X8, [X2+32]
	008 Move W19, W1
	009 Move X8, [X8+192]
	010 Move X1, [X8+24]
	011 Move W8, [X1+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {19}
	016 Move X0, X1
	017 Call 0x1C5D684
	018 Move X1, X0
	019 Move X8, [X20]
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Compare X9, 0
	022 JumpIfEqual {29}
	023 Move X10, [X8+176]
	024 Add X10, X10, 8
	025 NotImplemented "Instruction LDUR not yet implemented."
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Subtract X9, X9, 1
	028 Add X10, X10, 16
	029 Move X0, X20
	030 Move W2, W31
	031 Call 0x1C5D788
	032 NotImplemented "Instruction LDRSW not yet implemented."
	033 Add X8, X8, X9
	034 Add X0, X8, 312
	035 Move X3, [X0]
	036 Move X2, [X0+8]
	037 Move X0, X20
	038 Move W1, W19
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 CallNoReturn X3
	043 Call 0x1C17F20

Method: System.Void set_Item(System.Int32 index, T value)

Disassembly:
	0x028FCA20 LDR X24, [X9 + 0xC8]
	0x028FCA24 LDR W10, [X8 + 0xE0]
	0x028FCA28 CBNZ W10, 0x28FCA34
	0x028FCA2C MOV X0, X8
	0x028FCA30 BL 0x1C16DFC
	0x028FCA34 MOV X0, X24
	0x028FCA38 MOV X1, X31
	0x028FCA3C BL 0x338C698
	0x028FCA40 CBZ X23, 0x28FCC68
	0x028FCA44 LDR X8, [X23]
	0x028FCA48 MOV X24, X0
	0x028FCA4C MOV X0, X23
	0x028FCA50 MOV X1, X24
	0x028FCA54 LDR X9, [X8 + 0x2A8]
	0x028FCA58 LDR X2, [X8 + 0x2B0]
	0x028FCA5C BLR X9
	0x028FCA60 TBNZ X0, 0x0, 0x28FCA8C
	0x028FCA64 CBZ X24, 0x28FCC68
	0x028FCA68 LDR X8, [X24]
	0x028FCA6C MOV X0, X24
	0x028FCA70 MOV X1, X23
	0x028FCA74 LDR X9, [X8 + 0x2A8]
	0x028FCA78 LDR X2, [X8 + 0x2B0]
	0x028FCA7C BLR X9
	0x028FCA80 TBNZ X0, 0x0, 0x28FCA8C
	0x028FCA84 MOV X0, X31
	0x028FCA88 BL 0x339E304
	0x028FCA8C ADRP X8, 0x17F7000
	0x028FCA90 LDR X8, [X8 + 0x9D0]
	0x028FCA94 MOV X0, X22
	0x028FCA98 LDR X1, [X8]
	0x028FCA9C BL 0x1C16E00
	0x028FCAA0 MOV X22, X0
	0x028FCAA4 CBNZ X0, 0x28FCAAC
	0x028FCAA8 BL 0x339E304
	0x028FCAAC LDR X23, [X21 + 0x10]
	0x028FCAB0 CBZ X23, 0x28FCC68
	0x028FCAB4 LDR X8, [X20 + 0x20]
	0x028FCAB8 LDR X8, [X8 + 0xC0]
	0x028FCABC LDR X1, [X8 + 0x20]
	0x028FCAC0 LDRB W8, [X1 + 0x135]
	0x028FCAC4 TBNZ X8, 0x0, 0x28FCAD4
	0x028FCAC8 MOV X0, X1
	0x028FCACC BL 0x1C5C684
	0x028FCAD0 MOV X1, X0
	0x028FCAD4 LDR X8, [X23]
	0x028FCAD8 LDRH W9, [X8 + 0x12E]
	0x028FCADC CBZ X9, 0x28FCB00
	0x028FCAE0 LDR X10, [X8 + 0xB0]
	0x028FCAE4 ADD X10, X10, 0x8
	0x028FCAE8 LDUR X11, [X10 - 0x8]
	0x028FCAEC CMP X11, X1
	0x028FCAF0 B.EQ 0x28FCB44
	0x028FCAF4 SUBS X9, X9, 0x1
	0x028FCAF8 ADD X10, X10, 0x10
	0x028FCAFC B.NE 0x28FCAE8
	0x028FCB00 MOV X0, X23
	0x028FCB04 MOV W2, W31
	0x028FCB08 BL 0x1C5C788
	0x028FCB0C B 0x28FCB50
	0x028FCB10 LDR W9, [X10]
	0x028FCB14 ADD W9, W9, 0x5
	0x028FCB18 ADD X8, X8, W9, 0x4, SXTW
	0x028FCB1C ADD X0, X8, 0x138
	0x028FCB20 LDP X4, X3, [X0]
	0x028FCB24 MOV X0, X21
	0x028FCB28 MOV X1, X23
	0x028FCB2C MOV W2, W19
	0x028FCB30 LDP X20, X19, [X31 + 0x30]
	0x028FCB34 LDP X22, X21, [X31 + 0x20]
	0x028FCB38 LDP X24, X23, [X31 + 0x10]
	0x028FCB3C LDP X30, X25, [X31], #0x40
	0x028FCB40 BR X4
	0x028FCB44 LDRSW X9, [X10]
	0x028FCB48 ADD X8, X8, X9, 0x4, LSL
	0x028FCB4C ADD X0, X8, 0x138
	0x028FCB50 LDP X8, X1, [X0]
	0x028FCB54 MOV X0, X23
	0x028FCB58 BLR X8
	0x028FCB5C CMP W0, 0x1
	0x028FCB60 B.LT 0x28FCC30
	0x028FCB64 MOV W23, W0
	0x028FCB68 MOV W24, W31
	0x028FCB6C LDR X25, [X21 + 0x10]
	0x028FCB70 CBZ X25, 0x28FCC44
	0x028FCB74 LDR X8, [X20 + 0x20]
	0x028FCB78 LDR X8, [X8 + 0xC0]
	0x028FCB7C LDR X1, [X8 + 0x18]
	0x028FCB80 LDRB W8, [X1 + 0x135]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, [X0+16]
	008 Compare X23, 0
	009 JumpIfEqual {103}
	010 Move X8, [X3+32]
	011 Move W21, W1
	012 Move X22, X3
	013 Move X19, X2
	014 Move X8, [X8+192]
	015 Move X20, X0
	016 Move X1, [X8+32]
	017 Move W8, [X1+309]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {25}
	022 Move X0, X1
	023 Call 0x1C5D684
	024 Move X1, X0
	025 Move X8, [X23]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Compare X9, 0
	028 JumpIfEqual {35}
	029 Move X10, [X8+176]
	030 Add X10, X10, 8
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Subtract X9, X9, 1
	034 Add X10, X10, 16
	035 Move W2, 1
	036 Move X0, X23
	037 Call 0x1C5D788
	038 Move W9, [X10]
	039 Add W9, W9, 1
	040 Add X8, X8, W9
	041 Add X0, X8, 312
	042 Move X8, [X0]
	043 Move X1, [X0+8]
	044 Move X0, X23
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {53}
	050 Move W0, 28
	051 Move X1, X31
	052 Call ThrowHelper.ThrowNotSupportedException, X0
	053 Move X23, [X20+16]
	054 Compare X23, 0
	055 JumpIfEqual {103}
	056 Move X8, [X22+32]
	057 Move X8, [X8+192]
	058 Move X1, [X8+32]
	059 Move W8, [X1+309]
	060 Move TEMP, X8
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {67}
	064 Move X0, X1
	065 Call 0x1C5D684
	066 Move X1, X0
	067 Move X8, [X23]
	068 NotImplemented "Instruction LDRH not yet implemented."
	069 Compare X9, 0
	070 JumpIfEqual {77}
	071 Move X10, [X8+176]
	072 Add X10, X10, 8
	073 NotImplemented "Instruction LDUR not yet implemented."
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Subtract X9, X9, 1
	076 Add X10, X10, 16
	077 Move X0, X23
	078 Move W2, W31
	079 Call 0x1C5D788
	080 NotImplemented "Instruction LDRSW not yet implemented."
	081 Add X8, X8, X9
	082 Add X0, X8, 312
	083 Move X8, [X0]
	084 Move X1, [X0+8]
	085 Move X0, X23
	086 NotImplemented "Instruction BLR not yet implemented."
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X0, X31
	089 Call ThrowHelper.ThrowArgumentOutOfRange_IndexException
	090 Move X8, [X20]
	091 Move X0, X20
	092 Move W1, W21
	093 Move X2, X19
	094 Move X4, [X8+920]
	095 Move X3, [X8+928]
	096 Move X20, [X31+32]
	097 Move X19, [X31+40]
	098 Move X22, [X31+16]
	099 Move X21, [X31+24]
	100 Move X30, [X31+48]
	101 Move X23, [X31+56]
	102 CallNoReturn X4
	103 Call 0x1C17F20

Method: System.Void Add(T item)

Disassembly:
	0x028FCB84 TBNZ X8, 0x0, 0x28FCB94
	0x028FCB88 MOV X0, X1
	0x028FCB8C BL 0x1C5C684
	0x028FCB90 MOV X1, X0
	0x028FCB94 LDR X8, [X25]
	0x028FCB98 LDRH W9, [X8 + 0x12E]
	0x028FCB9C CBZ X9, 0x28FCBC0
	0x028FCBA0 LDR X10, [X8 + 0xB0]
	0x028FCBA4 ADD X10, X10, 0x8
	0x028FCBA8 LDUR X11, [X10 - 0x8]
	0x028FCBAC CMP X11, X1
	0x028FCBB0 B.EQ 0x28FCBD0
	0x028FCBB4 SUBS X9, X9, 0x1
	0x028FCBB8 ADD X10, X10, 0x10
	0x028FCBBC B.NE 0x28FCBA8
	0x028FCBC0 MOV X0, X25
	0x028FCBC4 MOV W2, W31
	0x028FCBC8 BL 0x1C5C788
	0x028FCBCC B 0x28FCBDC
	0x028FCBD0 LDRSW X9, [X10]
	0x028FCBD4 ADD X8, X8, X9, 0x4, LSL
	0x028FCBD8 ADD X0, X8, 0x138
	0x028FCBDC LDP X8, X2, [X0]
	0x028FCBE0 MOV X0, X25
	0x028FCBE4 MOV W1, W24
	0x028FCBE8 BLR X8
	0x028FCBEC CBZ X22, 0x28FCC48
	0x028FCBF0 MOV X25, X0
	0x028FCBF4 CBZ X0, 0x28FCC0C
	0x028FCBF8 LDR X8, [X22]
	0x028FCBFC LDR X1, [X8 + 0x40]
	0x028FCC00 MOV X0, X25
	0x028FCC04 BL 0x1C16E00
	0x028FCC08 CBZ X0, 0x28FCC50
	0x028FCC0C LDR W8, [X22 + 0x18]
	0x028FCC10 CMP W19, W8
	0x028FCC14 B.CS 0x28FCC4C
	0x028FCC18 ADD W24, W24, 0x1
	0x028FCC1C ADD X8, X22, W19, 0x3, SXTW
	0x028FCC20 ADD W19, W19, 0x1
	0x028FCC24 CMP W24, W23
	0x028FCC28 STR X25, [X8 + 0x20]
	0x028FCC2C B.NE 0x28FCB6C
	0x028FCC30 LDP X20, X19, [X31 + 0x30]
	0x028FCC34 LDP X22, X21, [X31 + 0x20]
	0x028FCC38 LDP X24, X23, [X31 + 0x10]
	0x028FCC3C LDP X30, X25, [X31], #0x40
	0x028FCC40 RET
	0x028FCC44 BL 0x1C16F20
	0x028FCC48 BL 0x1C16F20
	0x028FCC4C BL 0x1C16F28
	0x028FCC50 BL 0x1C16F44
	0x028FCC54 MOV X1, X31
	0x028FCC58 BL 0x1C16DEC
	0x028FCC5C MOVZ W0, 0x3
	0x028FCC60 MOV X1, X31
	0x028FCC64 BL 0x338F3E0
	0x028FCC68 BL 0x1C16F20
	0x028FCC6C B 0x28FCC74
	0x028FCC70 B 0x28FCC74
	0x028FCC74 MOV X19, X0
	0x028FCC78 CMP W1, 0x1
	0x028FCC7C B.NE 0x28FCCEC
	0x028FCC80 MOV X0, X19
	0x028FCC84 BL 0x3EB1AD0
	0x028FCC88 MOV X19, X0
	0x028FCC8C ADRP X0, 0x1820000
	0x028FCC90 LDR X0, [X0 + 0x320]
	0x028FCC94 BL 0x1C16D08
	0x028FCC98 LDR X8, [X19]
	0x028FCC9C LDR X1, [X8]
	0x028FCCA0 BL 0x1C17270
	0x028FCCA4 TBZ X0, 0x0, 0x28FCCC4
	0x028FCCA8 BL 0x3EB1AE0
	0x028FCCAC LDP X20, X19, [X31 + 0x30]
	0x028FCCB0 LDP X22, X21, [X31 + 0x20]
	0x028FCCB4 LDP X24, X23, [X31 + 0x10]
	0x028FCCB8 MOV X0, X31
	0x028FCCBC LDP X30, X25, [X31], #0x40
	0x028FCCC0 B 0x339E304
	0x028FCCC4 MOVZ W0, 0x8
	0x028FCCC8 BL 0x3EB1AF0
	0x028FCCCC LDR X8, [X19]
	0x028FCCD0 STR X8, [X0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, [X0+16]
	007 Compare X22, 0
	008 JumpIfEqual {97}
	009 Move X8, [X2+32]
	010 Move X19, X1
	011 Move X21, X2
	012 Move X20, X0
	013 Move X8, [X8+192]
	014 Move X1, [X8+32]
	015 Move W8, [X1+309]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {23}
	020 Move X0, X1
	021 Call 0x1C5D684
	022 Move X1, X0
	023 Move X8, [X22]
	024 NotImplemented "Instruction LDRH not yet implemented."
	025 Compare X9, 0
	026 JumpIfEqual {33}
	027 Move X10, [X8+176]
	028 Add X10, X10, 8
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Subtract X9, X9, 1
	032 Add X10, X10, 16
	033 Move W2, 1
	034 Move X0, X22
	035 Call 0x1C5D788
	036 Move W9, [X10]
	037 Add W9, W9, 1
	038 Add X8, X8, W9
	039 Add X0, X8, 312
	040 Move X8, [X0]
	041 Move X1, [X0+8]
	042 Move X0, X22
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {51}
	048 Move W0, 28
	049 Move X1, X31
	050 Call ThrowHelper.ThrowNotSupportedException, X0
	051 Move X22, [X20+16]
	052 Compare X22, 0
	053 JumpIfEqual {97}
	054 Move X8, [X21+32]
	055 Move X8, [X8+192]
	056 Move X1, [X8+32]
	057 Move W8, [X1+309]
	058 Move TEMP, X8
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfEqual {65}
	062 Move X0, X1
	063 Call 0x1C5D684
	064 Move X1, X0
	065 Move X8, [X22]
	066 NotImplemented "Instruction LDRH not yet implemented."
	067 Compare X9, 0
	068 JumpIfEqual {75}
	069 Move X10, [X8+176]
	070 Add X10, X10, 8
	071 NotImplemented "Instruction LDUR not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Subtract X9, X9, 1
	074 Add X10, X10, 16
	075 Move X0, X22
	076 Move W2, W31
	077 Call 0x1C5D788
	078 NotImplemented "Instruction LDRSW not yet implemented."
	079 Add X8, X8, X9
	080 Add X0, X8, 312
	081 Move X8, [X0]
	082 Move X1, [X0+8]
	083 Move X0, X22
	084 NotImplemented "Instruction BLR not yet implemented."
	085 Move X8, [X20]
	086 Move W1, W0
	087 Move X0, X20
	088 Move X2, X19
	089 Move X4, [X8+888]
	090 Move X3, [X8+896]
	091 Move X20, [X31+32]
	092 Move X19, [X31+40]
	093 Move X22, [X31+16]
	094 Move X21, [X31+24]
	095 Move X30, [X31+48]
	096 CallNoReturn X4
	097 Call 0x1C17F20

Method: System.Void Clear()

Disassembly:
	0x028FCCD4 ADRP X1, 0x15B8000
	0x028FCCD8 ADD X1, X1, 0xE58
	0x028FCCDC MOV X2, X31
	0x028FCCE0 BL 0x3EB1B00
	0x028FCCE4 MOV X19, X0
	0x028FCCE8 BL 0x3EB1AE0
	0x028FCCEC MOV X0, X19
	0x028FCCF0 BL 0x1D2C690
	0x028FCCF4 BL 0x1990590
	0x028FCCF8 STR X30, [X31 - 0x20]!
	0x028FCCFC STP X20, X19, [X31 + 0x10]
	0x028FCD00 LDR X20, [X0 + 0x10]
	0x028FCD04 CBZ X20, 0x28FCD8C
	0x028FCD08 LDR X8, [X2 + 0x20]
	0x028FCD0C MOV W19, W1
	0x028FCD10 LDR X8, [X8 + 0xC0]
	0x028FCD14 LDR X1, [X8 + 0x18]
	0x028FCD18 LDRB W8, [X1 + 0x135]
	0x028FCD1C TBNZ X8, 0x0, 0x28FCD2C
	0x028FCD20 MOV X0, X1
	0x028FCD24 BL 0x1C5C684
	0x028FCD28 MOV X1, X0
	0x028FCD2C LDR X8, [X20]
	0x028FCD30 LDRH W9, [X8 + 0x12E]
	0x028FCD34 CBZ X9, 0x28FCD58
	0x028FCD38 LDR X10, [X8 + 0xB0]
	0x028FCD3C ADD X10, X10, 0x8
	0x028FCD40 LDUR X11, [X10 - 0x8]
	0x028FCD44 CMP X11, X1
	0x028FCD48 B.EQ 0x28FCD68
	0x028FCD4C SUBS X9, X9, 0x1
	0x028FCD50 ADD X10, X10, 0x10
	0x028FCD54 B.NE 0x28FCD40
	0x028FCD58 MOV X0, X20
	0x028FCD5C MOV W2, W31
	0x028FCD60 BL 0x1C5C788
	0x028FCD64 B 0x28FCD74
	0x028FCD68 LDRSW X9, [X10]
	0x028FCD6C ADD X8, X8, X9, 0x4, LSL
	0x028FCD70 ADD X0, X8, 0x138
	0x028FCD74 LDP X3, X2, [X0]
	0x028FCD78 MOV X0, X20
	0x028FCD7C MOV W1, W19
	0x028FCD80 LDP X20, X19, [X31 + 0x10]
	0x028FCD84 LDR X30, [X31], #0x20
	0x028FCD88 BR X3
	0x028FCD8C BL 0x1C16F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, [X0+16]
	005 Compare X20, 0
	006 JumpIfEqual {55}
	007 Move X8, [X1+32]
	008 Move X19, X0
	009 Move X8, [X8+192]
	010 Move X1, [X8+32]
	011 Move W8, [X1+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {19}
	016 Move X0, X1
	017 Call 0x1C5D684
	018 Move X1, X0
	019 Move X8, [X20]
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Compare X9, 0
	022 JumpIfEqual {29}
	023 Move X10, [X8+176]
	024 Add X10, X10, 8
	025 NotImplemented "Instruction LDUR not yet implemented."
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Subtract X9, X9, 1
	028 Add X10, X10, 16
	029 Move W2, 1
	030 Move X0, X20
	031 Call 0x1C5D788
	032 Move W9, [X10]
	033 Add W9, W9, 1
	034 Add X8, X8, W9
	035 Add X0, X8, 312
	036 Move X8, [X0]
	037 Move X1, [X0+8]
	038 Move X0, X20
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {47}
	044 Move W0, 28
	045 Move X1, X31
	046 Call ThrowHelper.ThrowNotSupportedException, X0
	047 Move X8, [X19]
	048 Move X0, X19
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X2, [X8+872]
	052 Move X1, [X8+880]
	053 Move X30, [X31+32]
	054 CallNoReturn X2
	055 Call 0x1C17F20

Method: System.Void CopyTo(T[] array, System.Int32 index)

Disassembly:
	0x028FCD90 STP X30, X23, [X31 - 0x30]!
	0x028FCD94 STP X22, X21, [X31 + 0x10]
	0x028FCD98 STP X20, X19, [X31 + 0x20]
	0x028FCD9C LDR X8, [X3 + 0x20]
	0x028FCDA0 MOV X19, X2
	0x028FCDA4 MOV W21, W1
	0x028FCDA8 MOV X22, X0
	0x028FCDAC LDR X8, [X8 + 0xC0]
	0x028FCDB0 MOVZ W1, 0xF
	0x028FCDB4 MOV X0, X19
	0x028FCDB8 MOV X20, X3
	0x028FCDBC LDR X2, [X8 + 0xD0]
	0x028FCDC0 BL 0x229D5B0
	0x028FCDC4 LDR X8, [X20 + 0x20]
	0x028FCDC8 LDR X8, [X8 + 0xC0]
	0x028FCDCC LDR X23, [X8 + 0x38]
	0x028FCDD0 LDRB W8, [X23 + 0x135]
	0x028FCDD4 TBNZ X8, 0x0, 0x28FCDE4
	0x028FCDD8 MOV X0, X23
	0x028FCDDC BL 0x1C5C684
	0x028FCDE0 MOV X23, X0
	0x028FCDE4 CBZ X19, 0x28FCE08
	0x028FCDE8 MOV X0, X19
	0x028FCDEC MOV X1, X23
	0x028FCDF0 BL 0x1C16E00
	0x028FCDF4 MOV X2, X0
	0x028FCDF8 CBNZ X0, 0x28FCE0C
	0x028FCDFC MOV X0, X19
	0x028FCE00 MOV X1, X23
	0x028FCE04 BL 0x1C171E0
	0x028FCE08 MOV X2, X31
	0x028FCE0C LDR X8, [X20 + 0x20]
	0x028FCE10 LDR X8, [X8 + 0xC0]
	0x028FCE14 LDR X3, [X8 + 0xD8]
	0x028FCE18 MOV X0, X22
	0x028FCE1C MOV W1, W21
	0x028FCE20 BL 0x28FBA20
	0x028FCE24 LDP X20, X19, [X31 + 0x20]
	0x028FCE28 LDP X22, X21, [X31 + 0x10]
	0x028FCE2C LDP X30, X23, [X31], #0x30
	0x028FCE30 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, [X0+16]
	006 Compare X21, 0
	007 JumpIfEqual {48}
	008 Move X8, [X3+32]
	009 Move X20, X1
	010 Move W19, W2
	011 Move X8, [X8+192]
	012 Move X1, [X8+32]
	013 Move W8, [X1+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {21}
	018 Move X0, X1
	019 Call 0x1C5D684
	020 Move X1, X0
	021 Move X8, [X21]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Compare X9, 0
	024 JumpIfEqual {31}
	025 Move X10, [X8+176]
	026 Add X10, X10, 8
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Subtract X9, X9, 1
	030 Add X10, X10, 16
	031 Move W2, 5
	032 Move X0, X21
	033 Call 0x1C5D788
	034 Move W9, [X10]
	035 Add W9, W9, 5
	036 Add X8, X8, W9
	037 Add X0, X8, 312
	038 Move X4, [X0]
	039 Move X3, [X0+8]
	040 Move X1, X20
	041 Move W2, W19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X0, X21
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 CallNoReturn X4
	048 Call 0x1C17F20

Method: System.Boolean Contains(T item)

Disassembly:
	0x028FCE34 CMP W1, 0x1
	0x028FCE38 MOV X21, X0
	0x028FCE3C B.NE 0x28FCEE0
	0x028FCE40 MOV X0, X21
	0x028FCE44 BL 0x3EB1AD0
	0x028FCE48 MOV X21, X0
	0x028FCE4C ADRP X0, 0x17FF000
	0x028FCE50 LDR X0, [X0 + 0xC08]
	0x028FCE54 BL 0x1C16D08
	0x028FCE58 LDR X8, [X21]
	0x028FCE5C LDR X1, [X8]
	0x028FCE60 BL 0x1C17270
	0x028FCE64 TBZ X0, 0x0, 0x28FCEB8
	0x028FCE68 BL 0x3EB1AE0
	0x028FCE6C LDR X8, [X20 + 0x20]
	0x028FCE70 ADRP X0, 0x17F7000
	0x028FCE74 LDR X8, [X8 + 0xC0]
	0x028FCE78 LDR X20, [X8 + 0xC8]
	0x028FCE7C LDR X0, [X0 + 0x6C0]
	0x028FCE80 BL 0x1C16D08
	0x028FCE84 LDR W8, [X0 + 0xE0]
	0x028FCE88 CBNZ W8, 0x28FCE90
	0x028FCE8C BL 0x1C16DFC
	0x028FCE90 MOV X0, X20
	0x028FCE94 MOV X1, X31
	0x028FCE98 BL 0x338C698
	0x028FCE9C MOV X1, X0
	0x028FCEA0 MOV X0, X19
	0x028FCEA4 LDP X20, X19, [X31 + 0x20]
	0x028FCEA8 LDP X22, X21, [X31 + 0x10]
	0x028FCEAC MOV X2, X31
	0x028FCEB0 LDP X30, X23, [X31], #0x30
	0x028FCEB4 B 0x339D978
	0x028FCEB8 MOVZ W0, 0x8
	0x028FCEBC BL 0x3EB1AF0
	0x028FCEC0 LDR X8, [X21]
	0x028FCEC4 STR X8, [X0]
	0x028FCEC8 ADRP X1, 0x15B8000
	0x028FCECC ADD X1, X1, 0xE58

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, [X0+16]
	005 Compare X20, 0
	006 JumpIfEqual {44}
	007 Move X8, [X2+32]
	008 Move X19, X1
	009 Move X8, [X8+192]
	010 Move X1, [X8+32]
	011 Move W8, [X1+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {19}
	016 Move X0, X1
	017 Call 0x1C5D684
	018 Move X1, X0
	019 Move X8, [X20]
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Compare X9, 0
	022 JumpIfEqual {29}
	023 Move X10, [X8+176]
	024 Add X10, X10, 8
	025 NotImplemented "Instruction LDUR not yet implemented."
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Subtract X9, X9, 1
	028 Add X10, X10, 16
	029 Move W2, 4
	030 Move X0, X20
	031 Call 0x1C5D788
	032 Move W9, [X10]
	033 Add W9, W9, 4
	034 Add X8, X8, W9
	035 Add X0, X8, 312
	036 Move X3, [X0]
	037 Move X2, [X0+8]
	038 Move X0, X20
	039 Move X1, X19
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 CallNoReturn X3
	044 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerator`1<T> GetEnumerator()

Disassembly:
	0x028FCED0 MOV X2, X31
	0x028FCED4 BL 0x3EB1B00
	0x028FCED8 MOV X21, X0
	0x028FCEDC BL 0x3EB1AE0
	0x028FCEE0 MOV X0, X21
	0x028FCEE4 BL 0x1D2C690
	0x028FCEE8 BL 0x1990590
	0x028FCEEC STP X30, X19, [X31 - 0x10]!
	0x028FCEF0 LDR X19, [X0 + 0x10]
	0x028FCEF4 CBZ X19, 0x28FCF74
	0x028FCEF8 LDR X8, [X1 + 0x20]
	0x028FCEFC LDR X8, [X8 + 0xC0]
	0x028FCF00 LDR X1, [X8 + 0x20]
	0x028FCF04 LDRB W8, [X1 + 0x135]
	0x028FCF08 TBNZ X8, 0x0, 0x28FCF18
	0x028FCF0C MOV X0, X1
	0x028FCF10 BL 0x1C5C684
	0x028FCF14 MOV X1, X0
	0x028FCF18 LDR X8, [X19]
	0x028FCF1C LDRH W9, [X8 + 0x12E]
	0x028FCF20 CBZ X9, 0x28FCF44
	0x028FCF24 LDR X10, [X8 + 0xB0]
	0x028FCF28 ADD X10, X10, 0x8
	0x028FCF2C LDUR X11, [X10 - 0x8]
	0x028FCF30 CMP X11, X1
	0x028FCF34 B.EQ 0x28FCF54
	0x028FCF38 SUBS X9, X9, 0x1
	0x028FCF3C ADD X10, X10, 0x10
	0x028FCF40 B.NE 0x28FCF2C
	0x028FCF44 MOVZ W2, 0x1
	0x028FCF48 MOV X0, X19
	0x028FCF4C BL 0x1C5C788
	0x028FCF50 B 0x28FCF64
	0x028FCF54 LDR W9, [X10]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, [X0+16]
	004 Compare X19, 0
	005 JumpIfEqual {39}
	006 Move X8, [X1+32]
	007 Move X8, [X8+192]
	008 Move X1, [X8+120]
	009 Move W8, [X1+309]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X1
	015 Call 0x1C5D684
	016 Move X1, X0
	017 Move X8, [X19]
	018 NotImplemented "Instruction LDRH not yet implemented."
	019 Compare X9, 0
	020 JumpIfEqual {27}
	021 Move X10, [X8+176]
	022 Add X10, X10, 8
	023 NotImplemented "Instruction LDUR not yet implemented."
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Subtract X9, X9, 1
	026 Add X10, X10, 16
	027 Move X0, X19
	028 Move W2, W31
	029 Call 0x1C5D788
	030 NotImplemented "Instruction LDRSW not yet implemented."
	031 Add X8, X8, X9
	032 Add X0, X8, 312
	033 Move X2, [X0]
	034 Move X1, [X0+8]
	035 Move X0, X19
	036 Move X30, [X31+16]
	037 Move X19, [X31+24]
	038 CallNoReturn X2
	039 Call 0x1C17F20

Method: System.Int32 IndexOf(T item)

Disassembly:
	0x028FCF58 ADD W9, W9, 0x1
	0x028FCF5C ADD X8, X8, W9, 0x4, SXTW
	0x028FCF60 ADD X0, X8, 0x138
	0x028FCF64 LDP X2, X1, [X0]
	0x028FCF68 MOV X0, X19
	0x028FCF6C LDP X30, X19, [X31], #0x10
	0x028FCF70 BR X2
	0x028FCF74 BL 0x1C16F20
	0x028FCF78 STR X30, [X31 - 0x30]!
	0x028FCF7C STP X22, X21, [X31 + 0x10]
	0x028FCF80 STP X20, X19, [X31 + 0x20]
	0x028FCF84 ADRP X19, 0x1ADE000
	0x028FCF88 ADRP X22, 0x17FE000
	0x028FCF8C LDRB W8, [X19 + 0xD6A]
	0x028FCF90 LDR X22, [X22 + 0x2F8]
	0x028FCF94 MOV X20, X1
	0x028FCF98 MOV X21, X0
	0x028FCF9C TBNZ X8, 0x0, 0x28FCFB4
	0x028FCFA0 ADRP X0, 0x17FE000
	0x028FCFA4 LDR X0, [X0 + 0x2F8]
	0x028FCFA8 BL 0x1C16CF4
	0x028FCFAC MOVZ W8, 0x1
	0x028FCFB0 STRB W8, [X19 + 0xD6A]
	0x028FCFB4 LDR X0, [X21 + 0x10]
	0x028FCFB8 LDR X1, [X22]
	0x028FCFBC BL 0x1C16E00
	0x028FCFC0 CBZ X0, 0x28FD000
	0x028FCFC4 LDR X8, [X0]
	0x028FCFC8 LDR X1, [X22]
	0x028FCFCC MOV X19, X0
	0x028FCFD0 LDRH W9, [X8 + 0x12E]
	0x028FCFD4 CBZ X9, 0x28FCFF8
	0x028FCFD8 LDR X10, [X8 + 0xB0]
	0x028FCFDC ADD X10, X10, 0x8
	0x028FCFE0 LDUR X11, [X10 - 0x8]
	0x028FCFE4 CMP X11, X1
	0x028FCFE8 B.EQ 0x28FD064
	0x028FCFEC SUBS X9, X9, 0x1
	0x028FCFF0 ADD X10, X10, 0x10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, [X0+16]
	005 Compare X20, 0
	006 JumpIfEqual {44}
	007 Move X8, [X2+32]
	008 Move X19, X1
	009 Move X8, [X8+192]
	010 Move X1, [X8+24]
	011 Move W8, [X1+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {19}
	016 Move X0, X1
	017 Call 0x1C5D684
	018 Move X1, X0
	019 Move X8, [X20]
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Compare X9, 0
	022 JumpIfEqual {29}
	023 Move X10, [X8+176]
	024 Add X10, X10, 8
	025 NotImplemented "Instruction LDUR not yet implemented."
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Subtract X9, X9, 1
	028 Add X10, X10, 16
	029 Move W2, 2
	030 Move X0, X20
	031 Call 0x1C5D788
	032 Move W9, [X10]
	033 Add W9, W9, 2
	034 Add X8, X8, W9
	035 Add X0, X8, 312
	036 Move X3, [X0]
	037 Move X2, [X0+8]
	038 Move X0, X20
	039 Move X1, X19
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 CallNoReturn X3
	044 Call 0x1C17F20

Method: System.Void Insert(System.Int32 index, T item)

Disassembly:
	0x028FCFF4 B.NE 0x28FCFE0
	0x028FCFF8 MOVZ W2, 0x6
	0x028FCFFC B 0x28FD058
	0x028FD000 LDR X19, [X21 + 0x10]
	0x028FD004 CBZ X19, 0x28FD098
	0x028FD008 LDR X8, [X20 + 0x20]
	0x028FD00C LDR X8, [X8 + 0xC0]
	0x028FD010 LDR X1, [X8 + 0x20]
	0x028FD014 LDRB W8, [X1 + 0x135]
	0x028FD018 TBNZ X8, 0x0, 0x28FD028
	0x028FD01C MOV X0, X1
	0x028FD020 BL 0x1C5C684
	0x028FD024 MOV X1, X0
	0x028FD028 LDR X8, [X19]
	0x028FD02C LDRH W9, [X8 + 0x12E]
	0x028FD030 CBZ X9, 0x28FD054
	0x028FD034 LDR X10, [X8 + 0xB0]
	0x028FD038 ADD X10, X10, 0x8
	0x028FD03C LDUR X11, [X10 - 0x8]
	0x028FD040 CMP X11, X1
	0x028FD044 B.EQ 0x28FD070
	0x028FD048 SUBS X9, X9, 0x1
	0x028FD04C ADD X10, X10, 0x10
	0x028FD050 B.NE 0x28FD03C
	0x028FD054 MOVZ W2, 0x1
	0x028FD058 MOV X0, X19
	0x028FD05C BL 0x1C5C788
	0x028FD060 B 0x28FD080
	0x028FD064 LDR W9, [X10]
	0x028FD068 ADD W9, W9, 0x6
	0x028FD06C B 0x28FD078
	0x028FD070 LDR W9, [X10]
	0x028FD074 ADD W9, W9, 0x1
	0x028FD078 ADD X8, X8, W9, 0x4, SXTW
	0x028FD07C ADD X0, X8, 0x138
	0x028FD080 LDP X2, X1, [X0]
	0x028FD084 MOV X0, X19
	0x028FD088 LDP X20, X19, [X31 + 0x20]
	0x028FD08C LDP X22, X21, [X31 + 0x10]
	0x028FD090 LDR X30, [X31], #0x30
	0x028FD094 BR X2
	0x028FD098 BL 0x1C16F20
	0x028FD09C STR X30, [X31 - 0x30]!
	0x028FD0A0 STP X22, X21, [X31 + 0x10]
	0x028FD0A4 STP X20, X19, [X31 + 0x20]
	0x028FD0A8 LDR X22, [X0 + 0x10]
	0x028FD0AC CBZ X22, 0x28FD1E0
	0x028FD0B0 LDR X8, [X2 + 0x20]
	0x028FD0B4 MOV X21, X1
	0x028FD0B8 MOV X20, X2
	0x028FD0BC MOV X19, X0
	0x028FD0C0 LDR X8, [X8 + 0xC0]
	0x028FD0C4 LDR X1, [X8 + 0x20]
	0x028FD0C8 LDRB W8, [X1 + 0x135]
	0x028FD0CC TBNZ X8, 0x0, 0x28FD0DC
	0x028FD0D0 MOV X0, X1
	0x028FD0D4 BL 0x1C5C684
	0x028FD0D8 MOV X1, X0
	0x028FD0DC LDR X8, [X22]
	0x028FD0E0 LDRH W9, [X8 + 0x12E]
	0x028FD0E4 CBZ X9, 0x28FD108
	0x028FD0E8 LDR X10, [X8 + 0xB0]
	0x028FD0EC ADD X10, X10, 0x8
	0x028FD0F0 LDUR X11, [X10 - 0x8]
	0x028FD0F4 CMP X11, X1
	0x028FD0F8 B.EQ 0x28FD118
	0x028FD0FC SUBS X9, X9, 0x1
	0x028FD100 ADD X10, X10, 0x10
	0x028FD104 B.NE 0x28FD0F0
	0x028FD108 MOVZ W2, 0x1
	0x028FD10C MOV X0, X22
	0x028FD110 BL 0x1C5C788
	0x028FD114 B 0x28FD128
	0x028FD118 LDR W9, [X10]
	0x028FD11C ADD W9, W9, 0x1
	0x028FD120 ADD X8, X8, W9, 0x4, SXTW
	0x028FD124 ADD X0, X8, 0x138
	0x028FD128 LDP X8, X1, [X0]
	0x028FD12C MOV X0, X22
	0x028FD130 BLR X8
	0x028FD134 TBZ X0, 0x0, 0x28FD144
	0x028FD138 MOVZ W0, 0x1C
	0x028FD13C MOV X1, X31
	0x028FD140 BL 0x339E04C
	0x028FD144 LDR X8, [X20 + 0x20]
	0x028FD148 MOVZ W1, 0xF
	0x028FD14C MOV X0, X21
	0x028FD150 LDR X8, [X8 + 0xC0]
	0x028FD154 LDR X2, [X8 + 0xD0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, [X0+16]
	008 Compare X23, 0
	009 JumpIfEqual {103}
	010 Move X8, [X3+32]
	011 Move W21, W1
	012 Move X22, X3
	013 Move X19, X2
	014 Move X8, [X8+192]
	015 Move X20, X0
	016 Move X1, [X8+32]
	017 Move W8, [X1+309]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {25}
	022 Move X0, X1
	023 Call 0x1C5D684
	024 Move X1, X0
	025 Move X8, [X23]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Compare X9, 0
	028 JumpIfEqual {35}
	029 Move X10, [X8+176]
	030 Add X10, X10, 8
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Subtract X9, X9, 1
	034 Add X10, X10, 16
	035 Move W2, 1
	036 Move X0, X23
	037 Call 0x1C5D788
	038 Move W9, [X10]
	039 Add W9, W9, 1
	040 Add X8, X8, W9
	041 Add X0, X8, 312
	042 Move X8, [X0]
	043 Move X1, [X0+8]
	044 Move X0, X23
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {53}
	050 Move W0, 28
	051 Move X1, X31
	052 Call ThrowHelper.ThrowNotSupportedException, X0
	053 Move X23, [X20+16]
	054 Compare X23, 0
	055 JumpIfEqual {103}
	056 Move X8, [X22+32]
	057 Move X8, [X8+192]
	058 Move X1, [X8+32]
	059 Move W8, [X1+309]
	060 Move TEMP, X8
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {67}
	064 Move X0, X1
	065 Call 0x1C5D684
	066 Move X1, X0
	067 Move X8, [X23]
	068 NotImplemented "Instruction LDRH not yet implemented."
	069 Compare X9, 0
	070 JumpIfEqual {77}
	071 Move X10, [X8+176]
	072 Add X10, X10, 8
	073 NotImplemented "Instruction LDUR not yet implemented."
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Subtract X9, X9, 1
	076 Add X10, X10, 16
	077 Move X0, X23
	078 Move W2, W31
	079 Call 0x1C5D788
	080 NotImplemented "Instruction LDRSW not yet implemented."
	081 Add X8, X8, X9
	082 Add X0, X8, 312
	083 Move X8, [X0]
	084 Move X1, [X0+8]
	085 Move X0, X23
	086 NotImplemented "Instruction BLR not yet implemented."
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X0, X31
	089 Call ThrowHelper.ThrowArgumentOutOfRange_IndexException
	090 Move X8, [X20]
	091 Move X0, X20
	092 Move W1, W21
	093 Move X2, X19
	094 Move X4, [X8+888]
	095 Move X3, [X8+896]
	096 Move X20, [X31+32]
	097 Move X19, [X31+40]
	098 Move X22, [X31+16]
	099 Move X21, [X31+24]
	100 Move X30, [X31+48]
	101 Move X23, [X31+56]
	102 CallNoReturn X4
	103 Call 0x1C17F20

Method: System.Boolean Remove(T item)

Disassembly:
	0x028FD158 BL 0x229D5B0
	0x028FD15C LDR X8, [X20 + 0x20]
	0x028FD160 LDR X8, [X8 + 0xC0]
	0x028FD164 LDR X22, [X8 + 0x38]
	0x028FD168 LDRB W8, [X22 + 0x135]
	0x028FD16C TBNZ X8, 0x0, 0x28FD17C
	0x028FD170 MOV X0, X22
	0x028FD174 BL 0x1C5C684
	0x028FD178 MOV X22, X0
	0x028FD17C CBZ X21, 0x28FD1A0
	0x028FD180 MOV X0, X21
	0x028FD184 MOV X1, X22
	0x028FD188 BL 0x1C16E00
	0x028FD18C MOV X1, X0
	0x028FD190 CBNZ X1, 0x28FD1A4
	0x028FD194 MOV X0, X21
	0x028FD198 MOV X1, X22
	0x028FD19C BL 0x1C171E0
	0x028FD1A0 MOV X1, X31
	0x028FD1A4 LDR X8, [X20 + 0x20]
	0x028FD1A8 LDR X8, [X8 + 0xC0]
	0x028FD1AC LDR X2, [X8 + 0xE0]
	0x028FD1B0 MOV X0, X19
	0x028FD1B4 BL 0x28FBB84
	0x028FD1B8 LDR X8, [X20 + 0x20]
	0x028FD1BC MOV X0, X19
	0x028FD1C0 LDR X8, [X8 + 0xC0]
	0x028FD1C4 LDR X1, [X8 + 0xC0]
	0x028FD1C8 BL 0x28FB900
	0x028FD1CC LDP X20, X19, [X31 + 0x20]
	0x028FD1D0 LDP X22, X21, [X31 + 0x10]
	0x028FD1D4 SUB W0, W0, 0x1
	0x028FD1D8 LDR X30, [X31], #0x30
	0x028FD1DC RET
	0x028FD1E0 BL 0x1C16F20
	0x028FD1E4 CMP W1, 0x1
	0x028FD1E8 MOV X22, X0
	0x028FD1EC B.NE 0x28FD288
	0x028FD1F0 MOV X0, X22
	0x028FD1F4 BL 0x3EB1AD0
	0x028FD1F8 MOV X22, X0
	0x028FD1FC ADRP X0, 0x17FE000
	0x028FD200 LDR X0, [X0 + 0xC08]
	0x028FD204 BL 0x1C16D08
	0x028FD208 LDR X8, [X22]
	0x028FD20C LDR X1, [X8]
	0x028FD210 BL 0x1C17270
	0x028FD214 TBZ X0, 0x0, 0x28FD260
	0x028FD218 BL 0x3EB1AE0
	0x028FD21C LDR X8, [X20 + 0x20]
	0x028FD220 ADRP X0, 0x17F6000
	0x028FD224 LDR X8, [X8 + 0xC0]
	0x028FD228 LDR X22, [X8 + 0xC8]
	0x028FD22C LDR X0, [X0 + 0x6C0]
	0x028FD230 BL 0x1C16D08
	0x028FD234 LDR W8, [X0 + 0xE0]
	0x028FD238 CBNZ W8, 0x28FD240
	0x028FD23C BL 0x1C16DFC
	0x028FD240 MOV X0, X22
	0x028FD244 MOV X1, X31
	0x028FD248 BL 0x338C698
	0x028FD24C MOV X1, X0
	0x028FD250 MOV X0, X21
	0x028FD254 MOV X2, X31
	0x028FD258 BL 0x339D978
	0x028FD25C B 0x28FD1B8
	0x028FD260 MOVZ W0, 0x8
	0x028FD264 BL 0x3EB1AF0
	0x028FD268 LDR X8, [X22]
	0x028FD26C STR X8, [X0]
	0x028FD270 ADRP X1, 0x15B7000
	0x028FD274 ADD X1, X1, 0xE58
	0x028FD278 MOV X2, X31
	0x028FD27C BL 0x3EB1B00
	0x028FD280 MOV X22, X0
	0x028FD284 BL 0x3EB1AE0
	0x028FD288 MOV X0, X22
	0x028FD28C BL 0x1D2C690
	0x028FD290 BL 0x1990590
	0x028FD294 STR X30, [X31 - 0x30]!
	0x028FD298 STP X22, X21, [X31 + 0x10]
	0x028FD29C STP X20, X19, [X31 + 0x20]
	0x028FD2A0 LDR X8, [X2 + 0x20]
	0x028FD2A4 MOV X21, X1
	0x028FD2A8 MOV X20, X0
	0x028FD2AC MOV X0, X21
	0x028FD2B0 LDR X8, [X8 + 0xC0]
	0x028FD2B4 MOV X19, X2
	0x028FD2B8 LDR X1, [X8 + 0xE8]
	0x028FD2BC BL 0x28FD718

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, [X0+16]
	007 Compare X22, 0
	008 JumpIfEqual {108}
	009 Move X8, [X2+32]
	010 Move X20, X1
	011 Move X21, X2
	012 Move X19, X0
	013 Move X8, [X8+192]
	014 Move X1, [X8+32]
	015 Move W8, [X1+309]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {23}
	020 Move X0, X1
	021 Call 0x1C5D684
	022 Move X1, X0
	023 Move X8, [X22]
	024 NotImplemented "Instruction LDRH not yet implemented."
	025 Compare X9, 0
	026 JumpIfEqual {33}
	027 Move X10, [X8+176]
	028 Add X10, X10, 8
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Subtract X9, X9, 1
	032 Add X10, X10, 16
	033 Move W2, 1
	034 Move X0, X22
	035 Call 0x1C5D788
	036 Move W9, [X10]
	037 Add W9, W9, 1
	038 Add X8, X8, W9
	039 Add X0, X8, 312
	040 Move X8, [X0]
	041 Move X1, [X0+8]
	042 Move X0, X22
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {51}
	048 Move W0, 28
	049 Move X1, X31
	050 Call ThrowHelper.ThrowNotSupportedException, X0
	051 Move X22, [X19+16]
	052 Compare X22, 0
	053 JumpIfEqual {108}
	054 Move X8, [X21+32]
	055 Move X8, [X8+192]
	056 Move X1, [X8+24]
	057 Move W8, [X1+309]
	058 Move TEMP, X8
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfEqual {65}
	062 Move X0, X1
	063 Call 0x1C5D684
	064 Move X1, X0
	065 Move X8, [X22]
	066 NotImplemented "Instruction LDRH not yet implemented."
	067 Compare X9, 0
	068 JumpIfEqual {75}
	069 Move X10, [X8+176]
	070 Add X10, X10, 8
	071 NotImplemented "Instruction LDUR not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Subtract X9, X9, 1
	074 Add X10, X10, 16
	075 Move W2, 2
	076 Move X0, X22
	077 Call 0x1C5D788
	078 Move W9, [X10]
	079 Add W9, W9, 2
	080 Add X8, X8, W9
	081 Add X0, X8, 312
	082 Move X8, [X0]
	083 Move X2, [X0+8]
	084 Move X0, X22
	085 Move X1, X20
	086 NotImplemented "Instruction BLR not yet implemented."
	087 Move W20, W0
	088 Move TEMP, X0
	089 And TEMP, TEMP, -2147483648
	090 Compare TEMP, -2147483648
	091 JumpIfEqual {98}
	092 Move X8, [X19]
	093 Move X0, X19
	094 Move W1, W20
	095 Move X9, [X8+904]
	096 Move X2, [X8+912]
	097 NotImplemented "Instruction BLR not yet implemented."
	098 NotImplemented "Instruction ORN not yet implemented."
	099 Move X20, [X31+32]
	100 Move X19, [X31+40]
	101 Move X22, [X31+16]
	102 Move X21, [X31+24]
	103 Move W0, W8
	104 ShiftRight W0, 31
	105 And W0, W0, 0x7FFFFFFF
	106 Move X30, [X31+48]
	107 Return X0
	108 Call 0x1C17F20

Method: System.Void RemoveAt(System.Int32 index)

Disassembly:
	0x028FD2C0 TBZ X0, 0x0, 0x28FD308
	0x028FD2C4 LDR X8, [X19 + 0x20]
	0x028FD2C8 LDR X8, [X8 + 0xC0]
	0x028FD2CC LDR X22, [X8 + 0x38]
	0x028FD2D0 LDRB W8, [X22 + 0x135]
	0x028FD2D4 TBNZ X8, 0x0, 0x28FD2E4
	0x028FD2D8 MOV X0, X22
	0x028FD2DC BL 0x1C5C684
	0x028FD2E0 MOV X22, X0
	0x028FD2E4 CBZ X21, 0x28FD31C
	0x028FD2E8 MOV X0, X21
	0x028FD2EC MOV X1, X22
	0x028FD2F0 BL 0x1C16E00
	0x028FD2F4 MOV X1, X0
	0x028FD2F8 CBNZ X0, 0x28FD320
	0x028FD2FC MOV X0, X21
	0x028FD300 MOV X1, X22
	0x028FD304 BL 0x1C171E0
	0x028FD308 LDP X20, X19, [X31 + 0x20]
	0x028FD30C LDP X22, X21, [X31 + 0x10]
	0x028FD310 MOV W0, W31
	0x028FD314 LDR X30, [X31], #0x30
	0x028FD318 RET
	0x028FD31C MOV X1, X31
	0x028FD320 LDR X8, [X19 + 0x20]
	0x028FD324 MOV X0, X20
	0x028FD328 LDP X20, X19, [X31 + 0x20]
	0x028FD32C LDP X22, X21, [X31 + 0x10]
	0x028FD330 LDR X8, [X8 + 0xC0]
	0x028FD334 LDR X2, [X8 + 0xF8]
	0x028FD338 LDR X30, [X31], #0x30
	0x028FD33C B 0x28FBE34
	0x028FD340 STR X30, [X31 - 0x30]!
	0x028FD344 STP X22, X21, [X31 + 0x10]
	0x028FD348 STP X20, X19, [X31 + 0x20]
	0x028FD34C LDR X8, [X2 + 0x20]
	0x028FD350 MOV X21, X1
	0x028FD354 MOV X20, X0
	0x028FD358 MOV X0, X21
	0x028FD35C LDR X8, [X8 + 0xC0]
	0x028FD360 MOV X19, X2
	0x028FD364 LDR X1, [X8 + 0xE8]
	0x028FD368 BL 0x28FD718
	0x028FD36C TBZ X0, 0x0, 0x28FD3B4
	0x028FD370 LDR X8, [X19 + 0x20]
	0x028FD374 LDR X8, [X8 + 0xC0]
	0x028FD378 LDR X22, [X8 + 0x38]
	0x028FD37C LDRB W8, [X22 + 0x135]
	0x028FD380 TBNZ X8, 0x0, 0x28FD390
	0x028FD384 MOV X0, X22
	0x028FD388 BL 0x1C5C684
	0x028FD38C MOV X22, X0
	0x028FD390 CBZ X21, 0x28FD3C8
	0x028FD394 MOV X0, X21
	0x028FD398 MOV X1, X22
	0x028FD39C BL 0x1C16E00
	0x028FD3A0 MOV X1, X0
	0x028FD3A4 CBNZ X0, 0x28FD3CC
	0x028FD3A8 MOV X0, X21
	0x028FD3AC MOV X1, X22
	0x028FD3B0 BL 0x1C171E0
	0x028FD3B4 LDP X20, X19, [X31 + 0x20]
	0x028FD3B8 LDP X22, X21, [X31 + 0x10]
	0x028FD3BC MOVN W0, 0x0
	0x028FD3C0 LDR X30, [X31], #0x30
	0x028FD3C4 RET
	0x028FD3C8 MOV X1, X31
	0x028FD3CC LDR X8, [X19 + 0x20]
	0x028FD3D0 MOV X0, X20
	0x028FD3D4 LDP X20, X19, [X31 + 0x20]
	0x028FD3D8 LDP X22, X21, [X31 + 0x10]
	0x028FD3DC LDR X8, [X8 + 0xC0]
	0x028FD3E0 LDR X2, [X8 + 0x100]
	0x028FD3E4 LDR X30, [X31], #0x30
	0x028FD3E8 B 0x28FBF58
	0x028FD3EC STP X30, X23, [X31 - 0x30]!
	0x028FD3F0 STP X22, X21, [X31 + 0x10]
	0x028FD3F4 STP X20, X19, [X31 + 0x20]
	0x028FD3F8 LDR X23, [X0 + 0x10]
	0x028FD3FC CBZ X23, 0x28FD520
	0x028FD400 LDR X8, [X3 + 0x20]
	0x028FD404 MOV W22, W1
	0x028FD408 MOV X20, X3
	0x028FD40C MOV X19, X2
	0x028FD410 LDR X8, [X8 + 0xC0]
	0x028FD414 MOV X21, X0
	0x028FD418 LDR X1, [X8 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, [X0+16]
	007 Compare X22, 0
	008 JumpIfEqual {99}
	009 Move X8, [X2+32]
	010 Move W20, W1
	011 Move X21, X2
	012 Move X19, X0
	013 Move X8, [X8+192]
	014 Move X1, [X8+32]
	015 Move W8, [X1+309]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {23}
	020 Move X0, X1
	021 Call 0x1C5D684
	022 Move X1, X0
	023 Move X8, [X22]
	024 NotImplemented "Instruction LDRH not yet implemented."
	025 Compare X9, 0
	026 JumpIfEqual {33}
	027 Move X10, [X8+176]
	028 Add X10, X10, 8
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Subtract X9, X9, 1
	032 Add X10, X10, 16
	033 Move W2, 1
	034 Move X0, X22
	035 Call 0x1C5D788
	036 Move W9, [X10]
	037 Add W9, W9, 1
	038 Add X8, X8, W9
	039 Add X0, X8, 312
	040 Move X8, [X0]
	041 Move X1, [X0+8]
	042 Move X0, X22
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {51}
	048 Move W0, 28
	049 Move X1, X31
	050 Call ThrowHelper.ThrowNotSupportedException, X0
	051 Move X22, [X19+16]
	052 Compare X22, 0
	053 JumpIfEqual {99}
	054 Move X8, [X21+32]
	055 Move X8, [X8+192]
	056 Move X1, [X8+32]
	057 Move W8, [X1+309]
	058 Move TEMP, X8
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfEqual {65}
	062 Move X0, X1
	063 Call 0x1C5D684
	064 Move X1, X0
	065 Move X8, [X22]
	066 NotImplemented "Instruction LDRH not yet implemented."
	067 Compare X9, 0
	068 JumpIfEqual {75}
	069 Move X10, [X8+176]
	070 Add X10, X10, 8
	071 NotImplemented "Instruction LDUR not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Subtract X9, X9, 1
	074 Add X10, X10, 16
	075 Move X0, X22
	076 Move W2, W31
	077 Call 0x1C5D788
	078 NotImplemented "Instruction LDRSW not yet implemented."
	079 Add X8, X8, X9
	080 Add X0, X8, 312
	081 Move X8, [X0]
	082 Move X1, [X0+8]
	083 Move X0, X22
	084 NotImplemented "Instruction BLR not yet implemented."
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X0, X31
	087 Call ThrowHelper.ThrowArgumentOutOfRange_IndexException
	088 Move X8, [X19]
	089 Move X0, X19
	090 Move W1, W20
	091 Move X20, [X31+32]
	092 Move X19, [X31+40]
	093 Move X3, [X8+904]
	094 Move X2, [X8+912]
	095 Move X22, [X31+16]
	096 Move X21, [X31+24]
	097 Move X30, [X31+48]
	098 CallNoReturn X3
	099 Call 0x1C17F20

Method: System.Void ClearItems()

Disassembly:
	0x028FD41C LDRB W8, [X1 + 0x135]
	0x028FD420 TBNZ X8, 0x0, 0x28FD430
	0x028FD424 MOV X0, X1
	0x028FD428 BL 0x1C5C684
	0x028FD42C MOV X1, X0
	0x028FD430 LDR X8, [X23]
	0x028FD434 LDRH W9, [X8 + 0x12E]
	0x028FD438 CBZ X9, 0x28FD45C
	0x028FD43C LDR X10, [X8 + 0xB0]
	0x028FD440 ADD X10, X10, 0x8
	0x028FD444 LDUR X11, [X10 - 0x8]
	0x028FD448 CMP X11, X1
	0x028FD44C B.EQ 0x28FD46C
	0x028FD450 SUBS X9, X9, 0x1
	0x028FD454 ADD X10, X10, 0x10
	0x028FD458 B.NE 0x28FD444
	0x028FD45C MOVZ W2, 0x1
	0x028FD460 MOV X0, X23
	0x028FD464 BL 0x1C5C788
	0x028FD468 B 0x28FD47C
	0x028FD46C LDR W9, [X10]
	0x028FD470 ADD W9, W9, 0x1
	0x028FD474 ADD X8, X8, W9, 0x4, SXTW
	0x028FD478 ADD X0, X8, 0x138
	0x028FD47C LDP X8, X1, [X0]
	0x028FD480 MOV X0, X23
	0x028FD484 BLR X8
	0x028FD488 TBZ X0, 0x0, 0x28FD498
	0x028FD48C MOVZ W0, 0x1C
	0x028FD490 MOV X1, X31
	0x028FD494 BL 0x339E04C
	0x028FD498 LDR X8, [X20 + 0x20]
	0x028FD49C MOVZ W1, 0xF
	0x028FD4A0 MOV X0, X19
	0x028FD4A4 LDR X8, [X8 + 0xC0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, [X0+16]
	004 Compare X19, 0
	005 JumpIfEqual {40}
	006 Move X8, [X1+32]
	007 Move X8, [X8+192]
	008 Move X1, [X8+32]
	009 Move W8, [X1+309]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X1
	015 Call 0x1C5D684
	016 Move X1, X0
	017 Move X8, [X19]
	018 NotImplemented "Instruction LDRH not yet implemented."
	019 Compare X9, 0
	020 JumpIfEqual {27}
	021 Move X10, [X8+176]
	022 Add X10, X10, 8
	023 NotImplemented "Instruction LDUR not yet implemented."
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Subtract X9, X9, 1
	026 Add X10, X10, 16
	027 Move W2, 3
	028 Move X0, X19
	029 Call 0x1C5D788
	030 Move W9, [X10]
	031 Add W9, W9, 3
	032 Add X8, X8, W9
	033 Add X0, X8, 312
	034 Move X2, [X0]
	035 Move X1, [X0+8]
	036 Move X0, X19
	037 Move X30, [X31+16]
	038 Move X19, [X31+24]
	039 CallNoReturn X2
	040 Call 0x1C17F20

Method: System.Void InsertItem(System.Int32 index, T item)

Disassembly:
	0x028FD4A8 LDR X2, [X8 + 0xD0]
	0x028FD4AC BL 0x229D5B0
	0x028FD4B0 LDR X8, [X20 + 0x20]
	0x028FD4B4 LDR X8, [X8 + 0xC0]
	0x028FD4B8 LDR X23, [X8 + 0x38]
	0x028FD4BC LDRB W8, [X23 + 0x135]
	0x028FD4C0 TBNZ X8, 0x0, 0x28FD4D0
	0x028FD4C4 MOV X0, X23
	0x028FD4C8 BL 0x1C5C684
	0x028FD4CC MOV X23, X0
	0x028FD4D0 CBZ X19, 0x28FD4F4
	0x028FD4D4 MOV X0, X19
	0x028FD4D8 MOV X1, X23
	0x028FD4DC BL 0x1C16E00
	0x028FD4E0 MOV X2, X0
	0x028FD4E4 CBNZ X0, 0x28FD4F8
	0x028FD4E8 MOV X0, X19
	0x028FD4EC MOV X1, X23
	0x028FD4F0 BL 0x1C171E0
	0x028FD4F4 MOV X2, X31
	0x028FD4F8 LDR X8, [X20 + 0x20]
	0x028FD4FC LDR X8, [X8 + 0xC0]
	0x028FD500 LDR X3, [X8 + 0x108]
	0x028FD504 MOV X0, X21
	0x028FD508 MOV W1, W22
	0x028FD50C BL 0x28FBFF4
	0x028FD510 LDP X20, X19, [X31 + 0x20]
	0x028FD514 LDP X22, X21, [X31 + 0x10]
	0x028FD518 LDP X30, X23, [X31], #0x30
	0x028FD51C RET
	0x028FD520 BL 0x1C16F20
	0x028FD524 CMP W1, 0x1
	0x028FD528 MOV X21, X0
	0x028FD52C B.NE 0x28FD5D0
	0x028FD530 MOV X0, X21
	0x028FD534 BL 0x3EB1AD0
	0x028FD538 MOV X21, X0
	0x028FD53C ADRP X0, 0x17FE000
	0x028FD540 LDR X0, [X0 + 0xC08]
	0x028FD544 BL 0x1C16D08
	0x028FD548 LDR X8, [X21]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, [X0+16]
	006 Compare X21, 0
	007 JumpIfEqual {48}
	008 Move X8, [X3+32]
	009 Move W20, W1
	010 Move X19, X2
	011 Move X8, [X8+192]
	012 Move X1, [X8+24]
	013 Move W8, [X1+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {21}
	018 Move X0, X1
	019 Call 0x1C5D684
	020 Move X1, X0
	021 Move X8, [X21]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Compare X9, 0
	024 JumpIfEqual {31}
	025 Move X10, [X8+176]
	026 Add X10, X10, 8
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Subtract X9, X9, 1
	030 Add X10, X10, 16
	031 Move W2, 3
	032 Move X0, X21
	033 Call 0x1C5D788
	034 Move W9, [X10]
	035 Add W9, W9, 3
	036 Add X8, X8, W9
	037 Add X0, X8, 312
	038 Move X4, [X0]
	039 Move X3, [X0+8]
	040 Move W1, W20
	041 Move X2, X19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X0, X21
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 CallNoReturn X4
	048 Call 0x1C17F20

Method: System.Void RemoveItem(System.Int32 index)

Disassembly:
	0x028FD54C LDR X1, [X8]
	0x028FD550 BL 0x1C17270
	0x028FD554 TBZ X0, 0x0, 0x28FD5A8
	0x028FD558 BL 0x3EB1AE0
	0x028FD55C LDR X8, [X20 + 0x20]
	0x028FD560 ADRP X0, 0x17F6000
	0x028FD564 LDR X8, [X8 + 0xC0]
	0x028FD568 LDR X20, [X8 + 0xC8]
	0x028FD56C LDR X0, [X0 + 0x6C0]
	0x028FD570 BL 0x1C16D08
	0x028FD574 LDR W8, [X0 + 0xE0]
	0x028FD578 CBNZ W8, 0x28FD580
	0x028FD57C BL 0x1C16DFC
	0x028FD580 MOV X0, X20
	0x028FD584 MOV X1, X31
	0x028FD588 BL 0x338C698
	0x028FD58C MOV X1, X0
	0x028FD590 MOV X0, X19
	0x028FD594 LDP X20, X19, [X31 + 0x20]
	0x028FD598 LDP X22, X21, [X31 + 0x10]
	0x028FD59C MOV X2, X31
	0x028FD5A0 LDP X30, X23, [X31], #0x30
	0x028FD5A4 B 0x339D978
	0x028FD5A8 MOVZ W0, 0x8
	0x028FD5AC BL 0x3EB1AF0
	0x028FD5B0 LDR X8, [X21]
	0x028FD5B4 STR X8, [X0]
	0x028FD5B8 ADRP X1, 0x15B7000
	0x028FD5BC ADD X1, X1, 0xE58
	0x028FD5C0 MOV X2, X31
	0x028FD5C4 BL 0x3EB1B00
	0x028FD5C8 MOV X21, X0
	0x028FD5CC BL 0x3EB1AE0
	0x028FD5D0 MOV X0, X21
	0x028FD5D4 BL 0x1D2C690
	0x028FD5D8 BL 0x1990590
	0x028FD5DC STR X30, [X31 - 0x30]!
	0x028FD5E0 STP X22, X21, [X31 + 0x10]
	0x028FD5E4 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, [X0+16]
	005 Compare X20, 0
	006 JumpIfEqual {44}
	007 Move X8, [X2+32]
	008 Move W19, W1
	009 Move X8, [X8+192]
	010 Move X1, [X8+24]
	011 Move W8, [X1+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {19}
	016 Move X0, X1
	017 Call 0x1C5D684
	018 Move X1, X0
	019 Move X8, [X20]
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Compare X9, 0
	022 JumpIfEqual {29}
	023 Move X10, [X8+176]
	024 Add X10, X10, 8
	025 NotImplemented "Instruction LDUR not yet implemented."
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Subtract X9, X9, 1
	028 Add X10, X10, 16
	029 Move W2, 4
	030 Move X0, X20
	031 Call 0x1C5D788
	032 Move W9, [X10]
	033 Add W9, W9, 4
	034 Add X8, X8, W9
	035 Add X0, X8, 312
	036 Move X3, [X0]
	037 Move X2, [X0+8]
	038 Move X0, X20
	039 Move W1, W19
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 CallNoReturn X3
	044 Call 0x1C17F20

Method: System.Void SetItem(System.Int32 index, T item)

Disassembly:
	0x028FD5E8 LDR X22, [X0 + 0x10]
	0x028FD5EC CBZ X22, 0x28FD714
	0x028FD5F0 LDR X8, [X2 + 0x20]
	0x028FD5F4 MOV X21, X1
	0x028FD5F8 MOV X20, X2
	0x028FD5FC MOV X19, X0
	0x028FD600 LDR X8, [X8 + 0xC0]
	0x028FD604 LDR X1, [X8 + 0x20]
	0x028FD608 LDRB W8, [X1 + 0x135]
	0x028FD60C TBNZ X8, 0x0, 0x28FD61C
	0x028FD610 MOV X0, X1
	0x028FD614 BL 0x1C5C684
	0x028FD618 MOV X1, X0
	0x028FD61C LDR X8, [X22]
	0x028FD620 LDRH W9, [X8 + 0x12E]
	0x028FD624 CBZ X9, 0x28FD648
	0x028FD628 LDR X10, [X8 + 0xB0]
	0x028FD62C ADD X10, X10, 0x8
	0x028FD630 LDUR X11, [X10 - 0x8]
	0x028FD634 CMP X11, X1
	0x028FD638 B.EQ 0x28FD658
	0x028FD63C SUBS X9, X9, 0x1
	0x028FD640 ADD X10, X10, 0x10
	0x028FD644 B.NE 0x28FD630
	0x028FD648 MOVZ W2, 0x1
	0x028FD64C MOV X0, X22
	0x028FD650 BL 0x1C5C788
	0x028FD654 B 0x28FD668
	0x028FD658 LDR W9, [X10]
	0x028FD65C ADD W9, W9, 0x1
	0x028FD660 ADD X8, X8, W9, 0x4, SXTW
	0x028FD664 ADD X0, X8, 0x138
	0x028FD668 LDP X8, X1, [X0]
	0x028FD66C MOV X0, X22
	0x028FD670 BLR X8
	0x028FD674 TBZ X0, 0x0, 0x28FD684
	0x028FD678 MOVZ W0, 0x1C
	0x028FD67C MOV X1, X31
	0x028FD680 BL 0x339E04C
	0x028FD684 LDR X8, [X20 + 0x20]
	0x028FD688 MOV X0, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, [X0+16]
	006 Compare X21, 0
	007 JumpIfEqual {48}
	008 Move X8, [X3+32]
	009 Move W20, W1
	010 Move X19, X2
	011 Move X8, [X8+192]
	012 Move X1, [X8+24]
	013 Move W8, [X1+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {21}
	018 Move X0, X1
	019 Call 0x1C5D684
	020 Move X1, X0
	021 Move X8, [X21]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Compare X9, 0
	024 JumpIfEqual {31}
	025 Move X10, [X8+176]
	026 Add X10, X10, 8
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Subtract X9, X9, 1
	030 Add X10, X10, 16
	031 Move W2, 1
	032 Move X0, X21
	033 Call 0x1C5D788
	034 Move W9, [X10]
	035 Add W9, W9, 1
	036 Add X8, X8, W9
	037 Add X0, X8, 312
	038 Move X4, [X0]
	039 Move X3, [X0+8]
	040 Move W1, W20
	041 Move X2, X19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X0, X21
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 CallNoReturn X4
	048 Call 0x1C17F20

Method: System.Boolean System.Collections.Generic.ICollection<T>.get_IsReadOnly()

Disassembly:
	0x028FD68C LDR X8, [X8 + 0xC0]
	0x028FD690 LDR X1, [X8 + 0xE8]
	0x028FD694 BL 0x28FD718
	0x028FD698 TBZ X0, 0x0, 0x28FD6E0
	0x028FD69C LDR X8, [X20 + 0x20]
	0x028FD6A0 LDR X8, [X8 + 0xC0]
	0x028FD6A4 LDR X22, [X8 + 0x38]
	0x028FD6A8 LDRB W8, [X22 + 0x135]
	0x028FD6AC TBNZ X8, 0x0, 0x28FD6BC
	0x028FD6B0 MOV X0, X22
	0x028FD6B4 BL 0x1C5C684
	0x028FD6B8 MOV X22, X0
	0x028FD6BC CBZ X21, 0x28FD6F0
	0x028FD6C0 MOV X0, X21
	0x028FD6C4 MOV X1, X22
	0x028FD6C8 BL 0x1C16E00
	0x028FD6CC MOV X1, X0
	0x028FD6D0 CBNZ X0, 0x28FD6F4
	0x028FD6D4 MOV X0, X21
	0x028FD6D8 MOV X1, X22
	0x028FD6DC BL 0x1C171E0
	0x028FD6E0 LDP X20, X19, [X31 + 0x20]
	0x028FD6E4 LDP X22, X21, [X31 + 0x10]
	0x028FD6E8 LDR X30, [X31], #0x30
	0x028FD6EC RET
	0x028FD6F0 MOV X1, X31
	0x028FD6F4 LDR X8, [X20 + 0x20]
	0x028FD6F8 MOV X0, X19
	0x028FD6FC LDP X20, X19, [X31 + 0x20]
	0x028FD700 LDP X22, X21, [X31 + 0x10]
	0x028FD704 LDR X8, [X8 + 0xC0]
	0x028FD708 LDR X2, [X8 + 0x110]
	0x028FD70C LDR X30, [X31], #0x30
	0x028FD710 B 0x28FC158
	0x028FD714 BL 0x1C16F20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, [X0+16]
	004 Compare X19, 0
	005 JumpIfEqual {40}
	006 Move X8, [X1+32]
	007 Move X8, [X8+192]
	008 Move X1, [X8+32]
	009 Move W8, [X1+309]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X1
	015 Call 0x1C5D684
	016 Move X1, X0
	017 Move X8, [X19]
	018 NotImplemented "Instruction LDRH not yet implemented."
	019 Compare X9, 0
	020 JumpIfEqual {27}
	021 Move X10, [X8+176]
	022 Add X10, X10, 8
	023 NotImplemented "Instruction LDUR not yet implemented."
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Subtract X9, X9, 1
	026 Add X10, X10, 16
	027 Move W2, 1
	028 Move X0, X19
	029 Call 0x1C5D788
	030 Move W9, [X10]
	031 Add W9, W9, 1
	032 Add X8, X8, W9
	033 Add X0, X8, 312
	034 Move X2, [X0]
	035 Move X1, [X0+8]
	036 Move X0, X19
	037 Move X30, [X31+16]
	038 Move X19, [X31+24]
	039 CallNoReturn X2
	040 Call 0x1C17F20

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x028FD718 STP X30, X19, [X31 - 0x10]!
	0x028FD71C LDR X8, [X1 + 0x20]
	0x028FD720 MOV X19, X0
	0x028FD724 LDRB W9, [X8 + 0x135]
	0x028FD728 TBNZ X9, 0x0, 0x28FD738
	0x028FD72C MOV X0, X8
	0x028FD730 BL 0x1C5C684
	0x028FD734 MOV X8, X0
	0x028FD738 LDR X8, [X8 + 0xC0]
	0x028FD73C LDR X1, [X8 + 0x38]
	0x028FD740 LDRB W8, [X1 + 0x135]
	0x028FD744 TBNZ X8, 0x0, 0x28FD754
	0x028FD748 MOV X0, X1
	0x028FD74C BL 0x1C5C684
	0x028FD750 MOV X1, X0
	0x028FD754 MOV X0, X19
	0x028FD758 BL 0x1C16E00
	0x028FD75C CBZ X0, 0x28FD768
	0x028FD760 MOVZ W0, 0x1
	0x028FD764 B 0x28FD770
	0x028FD768 CMP X19, 0x0
	0x028FD76C CSET W0, EQ
	0x028FD770 LDP X30, X19, [X31], #0x10
	0x028FD774 RET
	0x028FD778 STR X30, [X31 - 0x20]!
	0x028FD77C STP X20, X19, [X31 + 0x10]
	0x028FD780 MOV X20, X1
	0x028FD784 MOV X1, X31
	0x028FD788 MOV X19, X0
	0x028FD78C BL 0x33BDD8C
	0x028FD790 LDR X8, [X20 + 0x20]
	0x028FD794 LDR X8, [X8 + 0xC0]
	0x028FD798 LDR X0, [X8]
	0x028FD79C LDRB W8, [X0 + 0x135]
	0x028FD7A0 TBNZ X8, 0x0, 0x28FD7A8
	0x028FD7A4 BL 0x1C5C684
	0x028FD7A8 BL 0x1C16F10
	0x028FD7AC LDR X8, [X20 + 0x20]
	0x028FD7B0 MOV X20, X0
	0x028FD7B4 LDR X8, [X8 + 0xC0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1ADE000
	005 Move W8, [X20+3431]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x17FF000
	012 Move X0, [X0+3512]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3431], W8
	016 Move X19, [X19+16]
	017 Compare X19, 0
	018 JumpIfEqual {45}
	019 Move X10, 0x17FF000
	020 Move X8, [X19]
	021 Move X10, [X10+3512]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Move X1, [X10]
	024 Compare X9, 0
	025 JumpIfEqual {32}
	026 Move X10, [X8+176]
	027 Add X10, X10, 8
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Subtract X9, X9, 1
	031 Add X10, X10, 16
	032 Move X0, X19
	033 Move W2, W31
	034 Call 0x1C5D788
	035 NotImplemented "Instruction LDRSW not yet implemented."
	036 Add X8, X8, X9
	037 Add X0, X8, 312
	038 Move X2, [X0]
	039 Move X1, [X0+8]
	040 Move X0, X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 CallNoReturn X2
	045 Call 0x1C17F20

Method: System.Boolean System.Collections.ICollection.get_IsSynchronized()

Disassembly:
	0x028FD7B8 LDR X1, [X8 + 0x8]
	0x028FD7BC LDR X8, [X1]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Object System.Collections.ICollection.get_SyncRoot()

Disassembly:
	0x028FD7C0 BLR X8
	0x028FD7C4 STR X20, [X19 + 0x10]
	0x028FD7C8 LDP X20, X19, [X31 + 0x10]
	0x028FD7CC LDR X30, [X31], #0x20
	0x028FD7D0 RET
	0x028FD7D4 STP X30, X19, [X31 - 0x10]!
	0x028FD7D8 LDR X19, [X0 + 0x10]
	0x028FD7DC CBZ X19, 0x28FD858
	0x028FD7E0 LDR X8, [X1 + 0x20]
	0x028FD7E4 LDR X8, [X8 + 0xC0]
	0x028FD7E8 LDR X1, [X8 + 0x20]
	0x028FD7EC LDRB W8, [X1 + 0x135]
	0x028FD7F0 TBNZ X8, 0x0, 0x28FD800
	0x028FD7F4 MOV X0, X1
	0x028FD7F8 BL 0x1C5C684
	0x028FD7FC MOV X1, X0
	0x028FD800 LDR X8, [X19]
	0x028FD804 LDRH W9, [X8 + 0x12E]
	0x028FD808 CBZ X9, 0x28FD82C
	0x028FD80C LDR X10, [X8 + 0xB0]
	0x028FD810 ADD X10, X10, 0x8
	0x028FD814 LDUR X11, [X10 - 0x8]
	0x028FD818 CMP X11, X1
	0x028FD81C B.EQ 0x28FD83C
	0x028FD820 SUBS X9, X9, 0x1
	0x028FD824 ADD X10, X10, 0x10
	0x028FD828 B.NE 0x28FD814
	0x028FD82C MOV X0, X19
	0x028FD830 MOV W2, W31
	0x028FD834 BL 0x1C5C788
	0x028FD838 B 0x28FD848
	0x028FD83C LDRSW X9, [X10]
	0x028FD840 ADD X8, X8, X9, 0x4, LSL
	0x028FD844 ADD X0, X8, 0x138
	0x028FD848 LDP X2, X1, [X0]
	0x028FD84C MOV X0, X19
	0x028FD850 LDP X30, X19, [X31], #0x10
	0x028FD854 BR X2
	0x028FD858 BL 0x1C16F20
	0x028FD85C STP X29, X30, [X31 - 0x40]!
	0x028FD860 STP X24, X23, [X31 + 0x10]
	0x028FD864 STP X22, X21, [X31 + 0x20]
	0x028FD868 STP X20, X19, [X31 + 0x30]
	0x028FD86C ADD X29, X31, 0x0
	0x028FD870 SUB X31, X31, 0x20
	0x028FD874 MRS X24, 0xC000
	0x028FD878 LDR X8, [X24 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x1ADE000
	006 Move X21, 0x17FE000
	007 Move W8, [X19+3432]
	008 Move X21, [X21+752]
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x17FE000
	015 Move X0, [X0+752]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X19+3432], W8
	019 Move X0, [X20+16]
	020 Move X1, [X21]
	021 Call 0x1C17E00
	022 Compare X0, 0
	023 JumpIfEqual {39}
	024 Move X8, [X0]
	025 Move X1, [X21]
	026 Move X19, X0
	027 NotImplemented "Instruction LDRH not yet implemented."
	028 Compare X9, 0
	029 JumpIfEqual {36}
	030 Move X10, [X8+176]
	031 Add X10, X10, 8
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Subtract X9, X9, 1
	035 Add X10, X10, 16
	036 Move W2, 2
	037 Move X0, X19
	038 Call 0x1C5D788
	039 Move X0, X20
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Return X0
	045 Move W9, [X10]
	046 Add W9, W9, 2
	047 Add X8, X8, W9
	048 Add X0, X8, 312
	049 Move X2, [X0]
	050 Move X1, [X0+8]
	051 Move X0, X19
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X30, [X31+32]
	055 Move X21, [X31+40]
	056 CallNoReturn X2

Method: System.Void System.Collections.ICollection.CopyTo(System.Array array, System.Int32 index)

Disassembly:
	0x028FD87C STUR X8, [X29 - 0x8]
	0x028FD880 LDR X8, [X3 + 0x20]
	0x028FD884 LDR X8, [X8 + 0xC0]
	0x028FD888 LDR X9, [X8 + 0x38]
	0x028FD88C LDR W20, [X9 + 0xFC]
	0x028FD890 ADD X9, X31, 0x0
	0x028FD894 ADD X10, X20, 0xF
	0x028FD898 AND X10, X10, 0x1FFFFFFFF
	0x028FD89C SUB X21, X9, X10
	0x028FD8A0 ADD X31, X21, 0x0
	0x028FD8A4 LDR X22, [X0 + 0x10]
	0x028FD8A8 CBZ X22, 0x28FD970
	0x028FD8AC MOV W23, W1
	0x028FD8B0 LDR X1, [X8 + 0x18]
	0x028FD8B4 MOV X19, X2
	0x028FD8B8 LDRB W8, [X1 + 0x135]
	0x028FD8BC TBNZ X8, 0x0, 0x28FD8CC
	0x028FD8C0 MOV X0, X1
	0x028FD8C4 BL 0x1C5C684
	0x028FD8C8 MOV X1, X0
	0x028FD8CC STUR W23, [X29 - 0xC]
	0x028FD8D0 LDR X8, [X22]
	0x028FD8D4 LDRH W9, [X8 + 0x12E]
	0x028FD8D8 CBZ X9, 0x28FD8FC
	0x028FD8DC LDR X10, [X8 + 0xB0]
	0x028FD8E0 ADD X10, X10, 0x8
	0x028FD8E4 LDUR X11, [X10 - 0x8]
	0x028FD8E8 CMP X11, X1
	0x028FD8EC B.EQ 0x28FD90C
	0x028FD8F0 SUBS X9, X9, 0x1
	0x028FD8F4 ADD X10, X10, 0x10
	0x028FD8F8 B.NE 0x28FD8E4
	0x028FD8FC MOV X0, X22
	0x028FD900 MOV W2, W31
	0x028FD904 BL 0x1C5C788
	0x028FD908 B 0x28FD918
	0x028FD90C LDRSW X9, [X10]
	0x028FD910 ADD X8, X8, X9, 0x4, LSL
	0x028FD914 ADD X0, X8, 0x138
	0x028FD918 SUB X8, X29, 0xC
	0x028FD91C STP X8, X21, [X29 - 0x20]
	0x028FD920 LDR X1, [X0 + 0x8]
	0x028FD924 SUB X3, X29, 0x20
	0x028FD928 MOV X2, X22
	0x028FD92C MOV X4, X21
	0x028FD930 LDP X0, X8, [X1 + 0x8]
	0x028FD934 BLR X8
	0x028FD938 MOV X0, X19
	0x028FD93C MOV X1, X21
	0x028FD940 MOV X2, X20
	0x028FD944 BL 0x3EB1AC0
	0x028FD948 LDR X8, [X24 + 0x28]
	0x028FD94C LDUR X9, [X29 - 0x8]
	0x028FD950 CMP X8, X9
	0x028FD954 B.NE 0x28FD974
	0x028FD958 ADD X31, X29, 0x0
	0x028FD95C LDP X20, X19, [X31 + 0x30]
	0x028FD960 LDP X22, X21, [X31 + 0x20]
	0x028FD964 LDP X24, X23, [X31 + 0x10]
	0x028FD968 LDP X29, X30, [X31], #0x40
	0x028FD96C RET
	0x028FD970 BL 0x1C16F20
	0x028FD974 BL 0x3EB1B20
	0x028FD978 STP X29, X30, [X31 - 0x50]!
	0x028FD97C STP X26, X25, [X31 + 0x10]
	0x028FD980 STP X24, X23, [X31 + 0x20]
	0x028FD984 STP X22, X21, [X31 + 0x30]
	0x028FD988 STP X20, X19, [X31 + 0x40]
	0x028FD98C ADD X29, X31, 0x0
	0x028FD990 SUB X31, X31, 0x30
	0x028FD994 MRS X26, 0xC000
	0x028FD998 LDR X8, [X26 + 0x28]
	0x028FD99C STUR X8, [X29 - 0x8]
	0x028FD9A0 STUR X2, [X29 - 0x28]
	0x028FD9A4 LDR X8, [X3 + 0x20]
	0x028FD9A8 LDR X8, [X8 + 0xC0]
	0x028FD9AC LDR X9, [X8 + 0x38]
	0x028FD9B0 LDR W24, [X9 + 0xFC]
	0x028FD9B4 ADD X9, X31, 0x0
	0x028FD9B8 ADD X10, X24, 0xF
	0x028FD9BC AND X10, X10, 0x1FFFFFFFF
	0x028FD9C0 SUB X21, X9, X10
	0x028FD9C4 ADD X31, X21, 0x0
	0x028FD9C8 LDR X25, [X0 + 0x10]
	0x028FD9CC CBZ X25, 0x28FDB7C
	0x028FD9D0 MOV W20, W1
	0x028FD9D4 LDR X1, [X8 + 0x20]
	0x028FD9D8 MOV X23, X3
	0x028FD9DC MOV X22, X2
	0x028FD9E0 MOV X19, X0
	0x028FD9E4 LDRB W8, [X1 + 0x135]
	0x028FD9E8 TBNZ X8, 0x0, 0x28FD9F8
	0x028FD9EC MOV X0, X1
	0x028FD9F0 BL 0x1C5C684
	0x028FD9F4 MOV X1, X0
	0x028FD9F8 LDR X8, [X25]
	0x028FD9FC LDRH W9, [X8 + 0x12E]
	0x028FDA00 CBZ X9, 0x28FDA24
	0x028FDA04 LDR X10, [X8 + 0xB0]
	0x028FDA08 ADD X10, X10, 0x8
	0x028FDA0C LDUR X11, [X10 - 0x8]
	0x028FDA10 CMP X11, X1
	0x028FDA14 B.EQ 0x28FDA34
	0x028FDA18 SUBS X9, X9, 0x1
	0x028FDA1C ADD X10, X10, 0x10
	0x028FDA20 B.NE 0x28FDA0C
	0x028FDA24 MOVZ W2, 0x1
	0x028FDA28 MOV X0, X25
	0x028FDA2C BL 0x1C5C788
	0x028FDA30 B 0x28FDA44
	0x028FDA34 LDR W9, [X10]
	0x028FDA38 ADD W9, W9, 0x1
	0x028FDA3C ADD X8, X8, W9, 0x4, SXTW
	0x028FDA40 ADD X0, X8, 0x138
	0x028FDA44 LDP X8, X1, [X0]
	0x028FDA48 MOV X0, X25
	0x028FDA4C BLR X8
	0x028FDA50 TBZ X0, 0x0, 0x28FDA60
	0x028FDA54 MOVZ W0, 0x1C
	0x028FDA58 MOV X1, X31
	0x028FDA5C BL 0x339E04C
	0x028FDA60 LDR X25, [X19 + 0x10]
	0x028FDA64 CBZ X25, 0x28FDB7C
	0x028FDA68 LDR X8, [X23 + 0x20]
	0x028FDA6C LDR X8, [X8 + 0xC0]
	0x028FDA70 LDR X1, [X8 + 0x20]
	0x028FDA74 LDRB W8, [X1 + 0x135]
	0x028FDA78 TBNZ X8, 0x0, 0x28FDA88
	0x028FDA7C MOV X0, X1
	0x028FDA80 BL 0x1C5C684
	0x028FDA84 MOV X1, X0
	0x028FDA88 LDR X8, [X25]
	0x028FDA8C LDRH W9, [X8 + 0x12E]
	0x028FDA90 CBZ X9, 0x28FDAB4
	0x028FDA94 LDR X10, [X8 + 0xB0]
	0x028FDA98 ADD X10, X10, 0x8
	0x028FDA9C LDUR X11, [X10 - 0x8]
	0x028FDAA0 CMP X11, X1
	0x028FDAA4 B.EQ 0x28FDAC4
	0x028FDAA8 SUBS X9, X9, 0x1
	0x028FDAAC ADD X10, X10, 0x10
	0x028FDAB0 B.NE 0x28FDA9C
	0x028FDAB4 MOV X0, X25
	0x028FDAB8 MOV W2, W31
	0x028FDABC BL 0x1C5C788
	0x028FDAC0 B 0x28FDAD0
	0x028FDAC4 LDRSW X9, [X10]
	0x028FDAC8 ADD X8, X8, X9, 0x4, LSL
	0x028FDACC ADD X0, X8, 0x138
	0x028FDAD0 LDP X8, X1, [X0]
	0x028FDAD4 MOV X0, X25
	0x028FDAD8 BLR X8
	0x028FDADC CMP W0, W20
	0x028FDAE0 B.HI 0x28FDAEC
	0x028FDAE4 MOV X0, X31
	0x028FDAE8 BL 0x339E294
	0x028FDAEC LDR X23, [X23 + 0x20]
	0x028FDAF0 MOV X0, X21
	0x028FDAF4 MOV X2, X24
	0x028FDAF8 LDR X8, [X23 + 0xC0]
	0x028FDAFC LDR X8, [X8 + 0x38]
	0x028FDB00 LDR W8, [X8 + 0x28]
	0x028FDB04 CMP W8, 0x0
	0x028FDB08 SUB X8, X29, 0x28
	0x028FDB0C CSEL X1, X22, X8, LT
	0x028FDB10 BL 0x3EB1AC0
	0x028FDB14 LDR X8, [X23 + 0xC0]
	0x028FDB18 LDR X8, [X8 + 0x38]
	0x028FDB1C LDR W8, [X8 + 0x28]
	0x028FDB20 TBNZ X8, 0x1F, 0x28FDB28
	0x028FDB24 LDR X21, [X21]
	0x028FDB28 STUR W20, [X29 - 0xC]
	0x028FDB2C LDR X8, [X19]
	0x028FDB30 SUB X9, X29, 0xC
	0x028FDB34 STP X9, X21, [X29 - 0x20]
	0x028FDB38 SUB X3, X29, 0x20
	0x028FDB3C LDR X1, [X8 + 0x3A0]
	0x028FDB40 MOV X2, X19
	0x028FDB44 MOV X4, X21
	0x028FDB48 LDP X0, X8, [X1 + 0x8]
	0x028FDB4C BLR X8
	0x028FDB50 LDR X8, [X26 + 0x28]
	0x028FDB54 LDUR X9, [X29 - 0x8]
	0x028FDB58 CMP X8, X9
	0x028FDB5C B.NE 0x28FDB80
	0x028FDB60 ADD X31, X29, 0x0
	0x028FDB64 LDP X20, X19, [X31 + 0x40]
	0x028FDB68 LDP X22, X21, [X31 + 0x30]
	0x028FDB6C LDP X24, X23, [X31 + 0x20]
	0x028FDB70 LDP X26, X25, [X31 + 0x10]
	0x028FDB74 LDP X29, X30, [X31], #0x50
	0x028FDB78 RET
	0x028FDB7C BL 0x1C16F20
	0x028FDB80 BL 0x3EB1B20
	0x028FDB84 STP X29, X30, [X31 - 0x50]!
	0x028FDB88 STR X25, [X31 + 0x10]
	0x028FDB8C STP X24, X23, [X31 + 0x20]
	0x028FDB90 STP X22, X21, [X31 + 0x30]
	0x028FDB94 STP X20, X19, [X31 + 0x40]
	0x028FDB98 ADD X29, X31, 0x0
	0x028FDB9C SUB X31, X31, 0x30
	0x028FDBA0 MRS X25, 0xC000
	0x028FDBA4 LDR X8, [X25 + 0x28]
	0x028FDBA8 STUR X8, [X29 - 0x8]
	0x028FDBAC STUR X1, [X29 - 0x28]
	0x028FDBB0 LDR X8, [X2 + 0x20]
	0x028FDBB4 LDR X8, [X8 + 0xC0]
	0x028FDBB8 LDR X9, [X8 + 0x38]
	0x028FDBBC LDR W22, [X9 + 0xFC]
	0x028FDBC0 ADD X9, X31, 0x0
	0x028FDBC4 ADD X10, X22, 0xF
	0x028FDBC8 AND X10, X10, 0x1FFFFFFFF
	0x028FDBCC SUB X20, X9, X10
	0x028FDBD0 ADD X31, X20, 0x0
	0x028FDBD4 LDR X24, [X0 + 0x10]
	0x028FDBD8 CBZ X24, 0x28FDD78
	0x028FDBDC MOV X21, X1
	0x028FDBE0 LDR X1, [X8 + 0x20]
	0x028FDBE4 MOV X23, X2
	0x028FDBE8 MOV X19, X0
	0x028FDBEC LDRB W8, [X1 + 0x135]
	0x028FDBF0 TBNZ X8, 0x0, 0x28FDC00
	0x028FDBF4 MOV X0, X1
	0x028FDBF8 BL 0x1C5C684
	0x028FDBFC MOV X1, X0
	0x028FDC00 LDR X8, [X24]
	0x028FDC04 LDRH W9, [X8 + 0x12E]
	0x028FDC08 CBZ X9, 0x28FDC2C
	0x028FDC0C LDR X10, [X8 + 0xB0]
	0x028FDC10 ADD X10, X10, 0x8
	0x028FDC14 LDUR X11, [X10 - 0x8]
	0x028FDC18 CMP X11, X1
	0x028FDC1C B.EQ 0x28FDC3C
	0x028FDC20 SUBS X9, X9, 0x1
	0x028FDC24 ADD X10, X10, 0x10
	0x028FDC28 B.NE 0x28FDC14
	0x028FDC2C MOVZ W2, 0x1
	0x028FDC30 MOV X0, X24
	0x028FDC34 BL 0x1C5C788
	0x028FDC38 B 0x28FDC4C
	0x028FDC3C LDR W9, [X10]
	0x028FDC40 ADD W9, W9, 0x1
	0x028FDC44 ADD X8, X8, W9, 0x4, SXTW
	0x028FDC48 ADD X0, X8, 0x138
	0x028FDC4C LDP X8, X1, [X0]
	0x028FDC50 MOV X0, X24
	0x028FDC54 BLR X8
	0x028FDC58 TBZ X0, 0x0, 0x28FDC68
	0x028FDC5C MOVZ W0, 0x1C
	0x028FDC60 MOV X1, X31
	0x028FDC64 BL 0x339E04C
	0x028FDC68 LDR X24, [X19 + 0x10]
	0x028FDC6C CBZ X24, 0x28FDD78
	0x028FDC70 LDR X8, [X23 + 0x20]
	0x028FDC74 LDR X8, [X8 + 0xC0]
	0x028FDC78 LDR X1, [X8 + 0x20]
	0x028FDC7C LDRB W8, [X1 + 0x135]
	0x028FDC80 TBNZ X8, 0x0, 0x28FDC90
	0x028FDC84 MOV X0, X1
	0x028FDC88 BL 0x1C5C684
	0x028FDC8C MOV X1, X0
	0x028FDC90 LDR X8, [X24]
	0x028FDC94 LDRH W9, [X8 + 0x12E]
	0x028FDC98 CBZ X9, 0x28FDCBC
	0x028FDC9C LDR X10, [X8 + 0xB0]
	0x028FDCA0 ADD X10, X10, 0x8
	0x028FDCA4 LDUR X11, [X10 - 0x8]
	0x028FDCA8 CMP X11, X1
	0x028FDCAC B.EQ 0x28FDCCC
	0x028FDCB0 SUBS X9, X9, 0x1
	0x028FDCB4 ADD X10, X10, 0x10
	0x028FDCB8 B.NE 0x28FDCA4
	0x028FDCBC MOV X0, X24
	0x028FDCC0 MOV W2, W31
	0x028FDCC4 BL 0x1C5C788
	0x028FDCC8 B 0x28FDCD8
	0x028FDCCC LDRSW X9, [X10]
	0x028FDCD0 ADD X8, X8, X9, 0x4, LSL
	0x028FDCD4 ADD X0, X8, 0x138
	0x028FDCD8 LDP X8, X1, [X0]
	0x028FDCDC MOV X0, X24
	0x028FDCE0 BLR X8
	0x028FDCE4 LDR X23, [X23 + 0x20]
	0x028FDCE8 MOV W24, W0
	0x028FDCEC MOV X0, X20
	0x028FDCF0 MOV X2, X22
	0x028FDCF4 LDR X8, [X23 + 0xC0]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X23, 0x1ADE000
	010 Move W8, [X23+3433]
	011 Move X20, X3
	012 Move W19, W2
	013 Move X22, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x17F7000
	020 Move X0, [X0+2512]
	021 Call 0x1C17CF4
	022 Move X0, 0x17F7000
	023 Move X0, [X0+1728]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+3433], W8
	027 Compare X22, 0
	028 JumpIfEqual {291}
	029 Move X0, X22
	030 Move X1, X31
	031 Call Array.get_Rank, X0
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move W0, 7
	034 Move X1, X31
	035 Call ThrowHelper.ThrowArgumentException, X0
	036 Move X0, X22
	037 Move W1, W31
	038 Move X2, X31
	039 Call Array.GetLowerBound, X0, X1
	040 Compare W0, 0
	041 JumpIfEqual {45}
	042 Move W0, 6
	043 Move X1, X31
	044 Call ThrowHelper.ThrowArgumentException, X0
	045 Move TEMP, X19
	046 And TEMP, TEMP, -2147483648
	047 Compare TEMP, -2147483648
	048 JumpIfNotEqual {51}
	049 Move X0, X31
	050 Call ThrowHelper.ThrowIndexArgumentOutOfRange_NeedNonNegNumException
	051 Move X0, X22
	052 Move X1, X31
	053 Call Array.get_Length, X0
	054 Move X8, [X20+32]
	055 Move W23, W0
	056 Move X0, X21
	057 Move X8, [X8+192]
	058 Move X1, [X8+192]
	059 Call 0x28FC900, X0
	060 Subtract W8, W23, W19
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move W0, 5
	063 Move X1, X31
	064 Call ThrowHelper.ThrowArgumentException, X0
	065 Move X8, [X20+32]
	066 Move X8, [X8+192]
	067 Move X1, [X8+96]
	068 Move W8, [X1+309]
	069 Move TEMP, X8
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfEqual {76}
	073 Move X0, X1
	074 Call 0x1C5D684
	075 Move X1, X0
	076 Move X0, X22
	077 Call 0x1C17E00
	078 Compare X0, 0
	079 JumpIfEqual {108}
	080 Move X21, [X21+16]
	081 Compare X21, 0
	082 JumpIfEqual {294}
	083 Move X8, [X20+32]
	084 Move X23, X0
	085 Move X8, [X8+192]
	086 Move X1, [X8+32]
	087 Move W8, [X1+309]
	088 Move TEMP, X8
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfEqual {95}
	092 Move X0, X1
	093 Call 0x1C5D684
	094 Move X1, X0
	095 Move X8, [X21]
	096 NotImplemented "Instruction LDRH not yet implemented."
	097 Compare X9, 0
	098 JumpIfEqual {105}
	099 Move X10, [X8+176]
	100 Add X10, X10, 8
	101 NotImplemented "Instruction LDUR not yet implemented."
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Subtract X9, X9, 1
	104 Add X10, X10, 16
	105 Move W2, 5
	106 Move X0, X21
	107 Call 0x1C5D788
	108 Move X0, X22
	109 Move X1, X31
	110 Call "il2cpp_vm_object_is_inst", X0
	111 Compare X0, 0
	112 JumpIfEqual {294}
	113 Move X8, [X0]
	114 Move X9, [X8+1064]
	115 Move X1, [X8+1072]
	116 NotImplemented "Instruction BLR not yet implemented."
	117 Move X8, 0x17F7000
	118 Move X9, [X20+32]
	119 Move X8, [X8+1728]
	120 Move X23, X0
	121 Move X9, [X9+192]
	122 Move X8, [X8]
	123 Move X24, [X9+200]
	124 Move W10, [X8+224]
	125 Compare W10, 0
	126 JumpIfNotEqual {129}
	127 Move X0, X8
	128 Call 0x1C17DFC
	129 Move X0, X24
	130 Move X1, X31
	131 Call Type.GetTypeFromHandle, X0
	132 Compare X23, 0
	133 JumpIfEqual {294}
	134 Move X8, [X23]
	135 Move X24, X0
	136 Move X0, X23
	137 Move X1, X24
	138 Move X9, [X8+680]
	139 Move X2, [X8+688]
	140 NotImplemented "Instruction BLR not yet implemented."
	141 Move TEMP, X0
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfEqual {159}
	145 Compare X24, 0
	146 JumpIfEqual {294}
	147 Move X8, [X24]
	148 Move X0, X24
	149 Move X1, X23
	150 Move X9, [X8+680]
	151 Move X2, [X8+688]
	152 NotImplemented "Instruction BLR not yet implemented."
	153 Move TEMP, X0
	154 And TEMP, TEMP, 1
	155 Compare TEMP, 1
	156 JumpIfEqual {159}
	157 Move X0, X31
	158 Call ThrowHelper.ThrowArgumentException_Argument_InvalidArrayType
	159 Move X8, 0x17F7000
	160 Move X8, [X8+2512]
	161 Move X0, X22
	162 Move X1, [X8]
	163 Call 0x1C17E00
	164 Move X22, X0
	165 Compare X0, 0
	166 JumpIfNotEqual {168}
	167 Call ThrowHelper.ThrowArgumentException_Argument_InvalidArrayType
	168 Move X23, [X21+16]
	169 Compare X23, 0
	170 JumpIfEqual {294}
	171 Move X8, [X20+32]
	172 Move X8, [X8+192]
	173 Move X1, [X8+32]
	174 Move W8, [X1+309]
	175 Move TEMP, X8
	176 And TEMP, TEMP, 1
	177 Compare TEMP, 1
	178 JumpIfEqual {182}
	179 Move X0, X1
	180 Call 0x1C5D684
	181 Move X1, X0
	182 Move X8, [X23]
	183 NotImplemented "Instruction LDRH not yet implemented."
	184 Compare X9, 0
	185 JumpIfEqual {192}
	186 Move X10, [X8+176]
	187 Add X10, X10, 8
	188 NotImplemented "Instruction LDUR not yet implemented."
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Subtract X9, X9, 1
	191 Add X10, X10, 16
	192 Move X0, X23
	193 Move W2, W31
	194 Call 0x1C5D788
	195 Move W9, [X10]
	196 Add W9, W9, 5
	197 Add X8, X8, W9
	198 Add X0, X8, 312
	199 Move X4, [X0]
	200 Move X3, [X0+8]
	201 Move X0, X21
	202 Move X1, X23
	203 Move W2, W19
	204 Move X20, [X31+48]
	205 Move X19, [X31+56]
	206 Move X22, [X31+32]
	207 Move X21, [X31+40]
	208 Move X24, [X31+16]
	209 Move X23, [X31+24]
	210 Move X30, [X31+64]
	211 Move X25, [X31+72]
	212 CallNoReturn X4
	213 NotImplemented "Instruction LDRSW not yet implemented."
	214 Add X8, X8, X9
	215 Add X0, X8, 312
	216 Move X8, [X0]
	217 Move X1, [X0+8]
	218 Move X0, X23
	219 NotImplemented "Instruction BLR not yet implemented."
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Move W23, W0
	222 Move W24, W31
	223 Move X25, [X21+16]
	224 Compare X25, 0
	225 JumpIfEqual {285}
	226 Move X8, [X20+32]
	227 Move X8, [X8+192]
	228 Move X1, [X8+24]
	229 Move W8, [X1+309]
	230 Move TEMP, X8
	231 And TEMP, TEMP, 1
	232 Compare TEMP, 1
	233 JumpIfEqual {237}
	234 Move X0, X1
	235 Call 0x1C5D684
	236 Move X1, X0
	237 Move X8, [X25]
	238 NotImplemented "Instruction LDRH not yet implemented."
	239 Compare X9, 0
	240 JumpIfEqual {247}
	241 Move X10, [X8+176]
	242 Add X10, X10, 8
	243 NotImplemented "Instruction LDUR not yet implemented."
	244 NotImplemented "Instruction CMP not yet implemented."
	245 Subtract X9, X9, 1
	246 Add X10, X10, 16
	247 Move X0, X25
	248 Move W2, W31
	249 Call 0x1C5D788
	250 NotImplemented "Instruction LDRSW not yet implemented."
	251 Add X8, X8, X9
	252 Add X0, X8, 312
	253 Move X8, [X0]
	254 Move X2, [X0+8]
	255 Move X0, X25
	256 Move W1, W24
	257 NotImplemented "Instruction BLR not yet implemented."
	258 Compare X22, 0
	259 JumpIfEqual {286}
	260 Move X25, X0
	261 Compare X0, 0
	262 JumpIfEqual {269}
	263 Move X8, [X22]
	264 Move X1, [X8+64]
	265 Move X0, X25
	266 Call 0x1C17E00
	267 Compare X0, 0
	268 JumpIfEqual {288}
	269 Move W8, [X22+24]
	270 NotImplemented "Instruction CMP not yet implemented."
	271 Add W24, W24, 1
	272 Add X8, X22, W19
	273 Add W19, W19, 1
	274 NotImplemented "Instruction CMP not yet implemented."
	275 Move [X8+32], X25
	276 Move X20, [X31+48]
	277 Move X19, [X31+56]
	278 Move X22, [X31+32]
	279 Move X21, [X31+40]
	280 Move X24, [X31+16]
	281 Move X23, [X31+24]
	282 Move X30, [X31+64]
	283 Move X25, [X31+72]
	284 Return 
	285 Call 0x1C17F20
	286 Call 0x1C17F20
	287 Call 0x1C17F28
	288 Call 0x1C17F44
	289 Move X1, X31
	290 Call 0x1C17DEC
	291 Move W0, 3
	292 Move X1, X31
	293 Call ThrowHelper.ThrowArgumentNullException, X0
	294 Call 0x1C17F20
	295 Move X19, X0
	296 NotImplemented "Instruction CMP not yet implemented."
	297 Move X0, X19
	298 Call 0x3EB2AD0
	299 Move X19, X0
	300 Move X0, 0x1820000
	301 Move X0, [X0+800]
	302 Call 0x1C17D08
	303 Move X8, [X19]
	304 Move X1, [X8]
	305 Call 0x1C18270
	306 Move TEMP, X0
	307 And TEMP, TEMP, 1
	308 Compare TEMP, 1
	309 JumpIfNotEqual {322}
	310 Call 0x3EB2AE0
	311 Move X20, [X31+48]
	312 Move X19, [X31+56]
	313 Move X22, [X31+32]
	314 Move X21, [X31+40]
	315 Move X24, [X31+16]
	316 Move X23, [X31+24]
	317 Move X0, X31
	318 Move X30, [X31+64]
	319 Move X25, [X31+72]
	320 Call ThrowHelper.ThrowArgumentException_Argument_InvalidArrayType
	321 Return 
	322 Move W0, 8
	323 Call 0x3EB2AF0
	324 Move X8, [X19]
	325 Move [X0], X8
	326 Move X1, 0x15B8000
	327 Add X1, X1, 3672
	328 Move X2, X31
	329 Call 0x3EB2B00
	330 Move X19, X0
	331 Call 0x3EB2AE0
	332 Move X0, X19
	333 Call 0x1D2D690
	334 Call 0x1991590

Method: System.Object System.Collections.IList.get_Item(System.Int32 index)

Disassembly:
	0x028FDCF8 LDR X8, [X8 + 0x38]
	0x028FDCFC LDR W8, [X8 + 0x28]
	0x028FDD00 CMP W8, 0x0
	0x028FDD04 SUB X8, X29, 0x28
	0x028FDD08 CSEL X1, X21, X8, LT
	0x028FDD0C BL 0x3EB1AC0
	0x028FDD10 LDR X8, [X23 + 0xC0]
	0x028FDD14 LDR X8, [X8 + 0x38]
	0x028FDD18 LDR W8, [X8 + 0x28]
	0x028FDD1C TBNZ X8, 0x1F, 0x28FDD24
	0x028FDD20 LDR X20, [X20]
	0x028FDD24 STUR W24, [X29 - 0xC]
	0x028FDD28 LDR X8, [X19]
	0x028FDD2C SUB X9, X29, 0xC
	0x028FDD30 STP X9, X20, [X29 - 0x20]
	0x028FDD34 SUB X3, X29, 0x20
	0x028FDD38 LDR X1, [X8 + 0x380]
	0x028FDD3C MOV X2, X19
	0x028FDD40 MOV X4, X20
	0x028FDD44 LDP X0, X8, [X1 + 0x8]
	0x028FDD48 BLR X8
	0x028FDD4C LDR X8, [X25 + 0x28]
	0x028FDD50 LDUR X9, [X29 - 0x8]
	0x028FDD54 CMP X8, X9
	0x028FDD58 B.NE 0x28FDD7C
	0x028FDD5C ADD X31, X29, 0x0
	0x028FDD60 LDP X20, X19, [X31 + 0x40]
	0x028FDD64 LDP X22, X21, [X31 + 0x30]
	0x028FDD68 LDP X24, X23, [X31 + 0x20]
	0x028FDD6C LDR X25, [X31 + 0x10]
	0x028FDD70 LDP X29, X30, [X31], #0x50
	0x028FDD74 RET
	0x028FDD78 BL 0x1C16F20
	0x028FDD7C BL 0x3EB1B20
	0x028FDD80 STR X30, [X31 - 0x20]!
	0x028FDD84 STP X20, X19, [X31 + 0x10]
	0x028FDD88 LDR X20, [X0 + 0x10]
	0x028FDD8C CBZ X20, 0x28FDE38

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, [X0+16]
	005 Compare X20, 0
	006 JumpIfEqual {43}
	007 Move X8, [X2+32]
	008 Move W19, W1
	009 Move X8, [X8+192]
	010 Move X1, [X8+24]
	011 Move W8, [X1+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {19}
	016 Move X0, X1
	017 Call 0x1C5D684
	018 Move X1, X0
	019 Move X8, [X20]
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Compare X9, 0
	022 JumpIfEqual {29}
	023 Move X10, [X8+176]
	024 Add X10, X10, 8
	025 NotImplemented "Instruction LDUR not yet implemented."
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Subtract X9, X9, 1
	028 Add X10, X10, 16
	029 Move X0, X20
	030 Move W2, W31
	031 Call 0x1C5D788
	032 NotImplemented "Instruction LDRSW not yet implemented."
	033 Add X8, X8, X9
	034 Add X0, X8, 312
	035 Move X3, [X0]
	036 Move X2, [X0+8]
	037 Move X0, X20
	038 Move W1, W19
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 CallNoReturn X3
	043 Call 0x1C17F20

Method: System.Void System.Collections.IList.set_Item(System.Int32 index, System.Object value)

Disassembly:
	0x028FDD90 LDR X8, [X1 + 0x20]
	0x028FDD94 MOV X19, X0
	0x028FDD98 LDR X8, [X8 + 0xC0]
	0x028FDD9C LDR X1, [X8 + 0x20]
	0x028FDDA0 LDRB W8, [X1 + 0x135]
	0x028FDDA4 TBNZ X8, 0x0, 0x28FDDB4
	0x028FDDA8 MOV X0, X1
	0x028FDDAC BL 0x1C5C684
	0x028FDDB0 MOV X1, X0
	0x028FDDB4 LDR X8, [X20]
	0x028FDDB8 LDRH W9, [X8 + 0x12E]
	0x028FDDBC CBZ X9, 0x28FDDE0
	0x028FDDC0 LDR X10, [X8 + 0xB0]
	0x028FDDC4 ADD X10, X10, 0x8
	0x028FDDC8 LDUR X11, [X10 - 0x8]
	0x028FDDCC CMP X11, X1
	0x028FDDD0 B.EQ 0x28FDDF0
	0x028FDDD4 SUBS X9, X9, 0x1
	0x028FDDD8 ADD X10, X10, 0x10
	0x028FDDDC B.NE 0x28FDDC8
	0x028FDDE0 MOVZ W2, 0x1
	0x028FDDE4 MOV X0, X20
	0x028FDDE8 BL 0x1C5C788
	0x028FDDEC B 0x28FDE00
	0x028FDDF0 LDR W9, [X10]
	0x028FDDF4 ADD W9, W9, 0x1
	0x028FDDF8 ADD X8, X8, W9, 0x4, SXTW
	0x028FDDFC ADD X0, X8, 0x138
	0x028FDE00 LDP X8, X1, [X0]
	0x028FDE04 MOV X0, X20
	0x028FDE08 BLR X8
	0x028FDE0C TBZ X0, 0x0, 0x28FDE1C
	0x028FDE10 MOVZ W0, 0x1C
	0x028FDE14 MOV X1, X31
	0x028FDE18 BL 0x339E04C
	0x028FDE1C LDR X8, [X19]
	0x028FDE20 MOV X0, X19
	0x028FDE24 LDP X20, X19, [X31 + 0x10]
	0x028FDE28 LDR X2, [X8 + 0x368]
	0x028FDE2C LDR X1, [X8 + 0x370]
	0x028FDE30 LDR X30, [X31], #0x20
	0x028FDE34 BR X2
	0x028FDE38 BL 0x1C16F20
	0x028FDE3C STP X30, X21, [X31 - 0x20]!
	0x028FDE40 STP X20, X19, [X31 + 0x10]
	0x028FDE44 LDR X21, [X0 + 0x10]
	0x028FDE48 CBZ X21, 0x28FDEDC
	0x028FDE4C LDR X8, [X3 + 0x20]
	0x028FDE50 MOV X20, X1
	0x028FDE54 MOV W19, W2
	0x028FDE58 LDR X8, [X8 + 0xC0]
	0x028FDE5C LDR X1, [X8 + 0x20]
	0x028FDE60 LDRB W8, [X1 + 0x135]
	0x028FDE64 TBNZ X8, 0x0, 0x28FDE74
	0x028FDE68 MOV X0, X1
	0x028FDE6C BL 0x1C5C684
	0x028FDE70 MOV X1, X0
	0x028FDE74 LDR X8, [X21]
	0x028FDE78 LDRH W9, [X8 + 0x12E]
	0x028FDE7C CBZ X9, 0x28FDEA0
	0x028FDE80 LDR X10, [X8 + 0xB0]
	0x028FDE84 ADD X10, X10, 0x8
	0x028FDE88 LDUR X11, [X10 - 0x8]
	0x028FDE8C CMP X11, X1
	0x028FDE90 B.EQ 0x28FDEB0
	0x028FDE94 SUBS X9, X9, 0x1
	0x028FDE98 ADD X10, X10, 0x10
	0x028FDE9C B.NE 0x28FDE88
	0x028FDEA0 MOVZ W2, 0x5
	0x028FDEA4 MOV X0, X21
	0x028FDEA8 BL 0x1C5C788
	0x028FDEAC B 0x28FDEC0
	0x028FDEB0 LDR W9, [X10]
	0x028FDEB4 ADD W9, W9, 0x5
	0x028FDEB8 ADD X8, X8, W9, 0x4, SXTW
	0x028FDEBC ADD X0, X8, 0x138
	0x028FDEC0 LDP X4, X3, [X0]
	0x028FDEC4 MOV X1, X20
	0x028FDEC8 MOV W2, W19
	0x028FDECC LDP X20, X19, [X31 + 0x10]
	0x028FDED0 MOV X0, X21
	0x028FDED4 LDP X30, X21, [X31], #0x20
	0x028FDED8 BR X4
	0x028FDEDC BL 0x1C16F20
	0x028FDEE0 STP X29, X30, [X31 - 0x40]!
	0x028FDEE4 STR X23, [X31 + 0x10]
	0x028FDEE8 STP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X3+32]
	008 Move X19, X2
	009 Move W21, W1
	010 Move X22, X0
	011 Move X8, [X8+192]
	012 Move W1, 15
	013 Move X0, X19
	014 Move X20, X3
	015 Move X2, [X8+208]
	016 Call ThrowHelper.IfNullAndNullsAreIllegalThenThrow, X0, X1
	017 Move X8, [X20+32]
	018 Move X8, [X8+192]
	019 Move X23, [X8+56]
	020 Move W8, [X23+309]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {28}
	025 Move X0, X23
	026 Call 0x1C5D684
	027 Move X23, X0
	028 Compare X19, 0
	029 JumpIfEqual {39}
	030 Move X0, X19
	031 Move X1, X23
	032 Call 0x1C17E00
	033 Move X2, X0
	034 Compare X0, 0
	035 JumpIfNotEqual {40}
	036 Move X0, X19
	037 Move X1, X23
	038 Call 0x1C181E0
	039 Move X2, X31
	040 Move X8, [X20+32]
	041 Move X8, [X8+192]
	042 Move X3, [X8+216]
	043 Move X0, X22
	044 Move W1, W21
	045 Call 0x28FCA20, X0, X1, X2
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X22, [X31+16]
	049 Move X21, [X31+24]
	050 Move X30, [X31+48]
	051 Move X23, [X31+56]
	052 Return 
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X21, X0
	055 Move X0, X21
	056 Call 0x3EB2AD0
	057 Move X21, X0
	058 Move X0, 0x17FF000
	059 Move X0, [X0+3080]
	060 Call 0x1C17D08
	061 Move X8, [X21]
	062 Move X1, [X8]
	063 Call 0x1C18270
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {93}
	068 Call 0x3EB2AE0
	069 Move X8, [X20+32]
	070 Move X0, 0x17F7000
	071 Move X8, [X8+192]
	072 Move X20, [X8+200]
	073 Move X0, [X0+1728]
	074 Call 0x1C17D08
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Move X0, X20
	080 Move X1, X31
	081 Call Type.GetTypeFromHandle, X0
	082 Move X1, X0
	083 Move X0, X19
	084 Move X20, [X31+32]
	085 Move X19, [X31+40]
	086 Move X22, [X31+16]
	087 Move X21, [X31+24]
	088 Move X2, X31
	089 Move X30, [X31+48]
	090 Move X23, [X31+56]
	091 Call ThrowHelper.ThrowWrongValueTypeArgumentException, X0, X1
	092 Return 
	093 Move W0, 8
	094 Call 0x3EB2AF0
	095 Move X8, [X21]
	096 Move [X0], X8
	097 Move X1, 0x15B8000
	098 Add X1, X1, 3672
	099 Move X2, X31
	100 Call 0x3EB2B00
	101 Move X21, X0
	102 Call 0x3EB2AE0
	103 Move X0, X21
	104 Call 0x1D2D690
	105 Call 0x1991590

Method: System.Boolean System.Collections.IList.get_IsReadOnly()

Disassembly:
	0x028FDEEC STP X20, X19, [X31 + 0x30]
	0x028FDEF0 ADD X29, X31, 0x0
	0x028FDEF4 SUB X31, X31, 0x20
	0x028FDEF8 MRS X22, 0xC000
	0x028FDEFC LDR X8, [X22 + 0x28]
	0x028FDF00 MOV X21, X2
	0x028FDF04 ADD X9, X31, 0x0
	0x028FDF08 STUR X8, [X29 - 0x8]
	0x028FDF0C STUR X1, [X29 - 0x20]
	0x028FDF10 LDR X23, [X2 + 0x20]
	0x028FDF14 LDR X8, [X23 + 0xC0]
	0x028FDF18 LDR X8, [X8 + 0x38]
	0x028FDF1C LDR W2, [X8 + 0xFC]
	0x028FDF20 ADD X10, X2, 0xF
	0x028FDF24 AND X10, X10, 0x1FFFFFFFF
	0x028FDF28 SUB X20, X9, X10
	0x028FDF2C ADD X31, X20, 0x0
	0x028FDF30 LDR W8, [X8 + 0x28]
	0x028FDF34 LDR X19, [X0 + 0x10]
	0x028FDF38 MOV X0, X20
	0x028FDF3C CMP W8, 0x0
	0x028FDF40 SUB X8, X29, 0x20
	0x028FDF44 CSEL X1, X1, X8, LT
	0x028FDF48 BL 0x3EB1AC0
	0x028FDF4C CBZ X19, 0x28FE020
	0x028FDF50 LDR X8, [X23 + 0xC0]
	0x028FDF54 LDR X1, [X8 + 0x20]
	0x028FDF58 LDRB W9, [X1 + 0x135]
	0x028FDF5C TBNZ X9, 0x0, 0x28FDF74
	0x028FDF60 MOV X0, X1
	0x028FDF64 BL 0x1C5C684
	0x028FDF68 LDR X8, [X21 + 0x20]
	0x028FDF6C MOV X1, X0
	0x028FDF70 LDR X8, [X8 + 0xC0]
	0x028FDF74 LDR X8, [X8 + 0x38]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, [X0+16]
	004 Compare X19, 0
	005 JumpIfEqual {40}
	006 Move X8, [X1+32]
	007 Move X8, [X8+192]
	008 Move X1, [X8+32]
	009 Move W8, [X1+309]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X1
	015 Call 0x1C5D684
	016 Move X1, X0
	017 Move X8, [X19]
	018 NotImplemented "Instruction LDRH not yet implemented."
	019 Compare X9, 0
	020 JumpIfEqual {27}
	021 Move X10, [X8+176]
	022 Add X10, X10, 8
	023 NotImplemented "Instruction LDUR not yet implemented."
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Subtract X9, X9, 1
	026 Add X10, X10, 16
	027 Move W2, 1
	028 Move X0, X19
	029 Call 0x1C5D788
	030 Move W9, [X10]
	031 Add W9, W9, 1
	032 Add X8, X8, W9
	033 Add X0, X8, 312
	034 Move X2, [X0]
	035 Move X1, [X0+8]
	036 Move X0, X19
	037 Move X30, [X31+16]
	038 Move X19, [X31+24]
	039 CallNoReturn X2
	040 Call 0x1C17F20

Method: System.Boolean System.Collections.IList.get_IsFixedSize()

Disassembly:
	0x028FDF78 LDR W8, [X8 + 0x28]
	0x028FDF7C TBNZ X8, 0x1F, 0x28FDF84
	0x028FDF80 LDR X20, [X20]
	0x028FDF84 LDR X8, [X19]
	0x028FDF88 LDRH W9, [X8 + 0x12E]
	0x028FDF8C CBZ X9, 0x28FDFB0
	0x028FDF90 LDR X10, [X8 + 0xB0]
	0x028FDF94 ADD X10, X10, 0x8
	0x028FDF98 LDUR X11, [X10 - 0x8]
	0x028FDF9C CMP X11, X1
	0x028FDFA0 B.EQ 0x28FDFC0
	0x028FDFA4 SUBS X9, X9, 0x1
	0x028FDFA8 ADD X10, X10, 0x10
	0x028FDFAC B.NE 0x28FDF98
	0x028FDFB0 MOVZ W2, 0x4
	0x028FDFB4 MOV X0, X19
	0x028FDFB8 BL 0x1C5C788
	0x028FDFBC B 0x28FDFD0
	0x028FDFC0 LDR W9, [X10]
	0x028FDFC4 ADD W9, W9, 0x4
	0x028FDFC8 ADD X8, X8, W9, 0x4, SXTW
	0x028FDFCC ADD X0, X8, 0x138
	0x028FDFD0 STUR X20, [X29 - 0x18]
	0x028FDFD4 LDR X1, [X0 + 0x8]
	0x028FDFD8 SUB X3, X29, 0x18
	0x028FDFDC SUB X4, X29, 0xC
	0x028FDFE0 MOV X2, X19
	0x028FDFE4 LDP X0, X8, [X1 + 0x8]
	0x028FDFE8 BLR X8
	0x028FDFEC LDURB W8, [X29 - 0xC]
	0x028FDFF0 LDR X9, [X22 + 0x28]
	0x028FDFF4 LDUR X10, [X29 - 0x8]
	0x028FDFF8 CMP W8, 0x0
	0x028FDFFC CSET W0, NE
	0x028FE000 CMP X9, X10
	0x028FE004 B.NE 0x28FE024
	0x028FE008 ADD X31, X29, 0x0
	0x028FE00C LDP X20, X19, [X31 + 0x30]
	0x028FE010 LDP X22, X21, [X31 + 0x20]
	0x028FE014 LDR X23, [X31 + 0x10]
	0x028FE018 LDP X29, X30, [X31], #0x40
	0x028FE01C RET
	0x028FE020 BL 0x1C16F20
	0x028FE024 BL 0x3EB1B20
	0x028FE028 STP X30, X19, [X31 - 0x10]!
	0x028FE02C LDR X19, [X0 + 0x10]
	0x028FE030 CBZ X19, 0x28FE0AC
	0x028FE034 LDR X8, [X1 + 0x20]
	0x028FE038 LDR X8, [X8 + 0xC0]
	0x028FE03C LDR X1, [X8 + 0x78]
	0x028FE040 LDRB W8, [X1 + 0x135]
	0x028FE044 TBNZ X8, 0x0, 0x28FE054
	0x028FE048 MOV X0, X1
	0x028FE04C BL 0x1C5C684
	0x028FE050 MOV X1, X0
	0x028FE054 LDR X8, [X19]
	0x028FE058 LDRH W9, [X8 + 0x12E]
	0x028FE05C CBZ X9, 0x28FE080
	0x028FE060 LDR X10, [X8 + 0xB0]
	0x028FE064 ADD X10, X10, 0x8
	0x028FE068 LDUR X11, [X10 - 0x8]
	0x028FE06C CMP X11, X1
	0x028FE070 B.EQ 0x28FE090
	0x028FE074 SUBS X9, X9, 0x1
	0x028FE078 ADD X10, X10, 0x10
	0x028FE07C B.NE 0x28FE068
	0x028FE080 MOV X0, X19
	0x028FE084 MOV W2, W31
	0x028FE088 BL 0x1C5C788
	0x028FE08C B 0x28FE09C
	0x028FE090 LDRSW X9, [X10]
	0x028FE094 ADD X8, X8, X9, 0x4, LSL
	0x028FE098 ADD X0, X8, 0x138

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x1ADE000
	007 Move X22, 0x17FE000
	008 Move W8, [X19+3434]
	009 Move X22, [X22+760]
	010 Move X20, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x17FE000
	017 Move X0, [X0+760]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X19+3434], W8
	021 Move X0, [X21+16]
	022 Move X1, [X22]
	023 Call 0x1C17E00
	024 Compare X0, 0
	025 JumpIfEqual {39}
	026 Move X8, [X0]
	027 Move X1, [X22]
	028 Move X19, X0
	029 NotImplemented "Instruction LDRH not yet implemented."
	030 Compare X9, 0
	031 JumpIfEqual {38}
	032 Move X10, [X8+176]
	033 Add X10, X10, 8
	034 NotImplemented "Instruction LDUR not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Subtract X9, X9, 1
	037 Add X10, X10, 16
	038 Move W2, 6
	039 Move X19, [X21+16]
	040 Compare X19, 0
	041 JumpIfEqual {81}
	042 Move X8, [X20+32]
	043 Move X8, [X8+192]
	044 Move X1, [X8+32]
	045 Move W8, [X1+309]
	046 Move TEMP, X8
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {53}
	050 Move X0, X1
	051 Call 0x1C5D684
	052 Move X1, X0
	053 Move X8, [X19]
	054 NotImplemented "Instruction LDRH not yet implemented."
	055 Compare X9, 0
	056 JumpIfEqual {63}
	057 Move X10, [X8+176]
	058 Add X10, X10, 8
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Subtract X9, X9, 1
	062 Add X10, X10, 16
	063 Move W2, 1
	064 Move X0, X19
	065 Call 0x1C5D788
	066 Move W9, [X10]
	067 Add W9, W9, 6
	068 Move W9, [X10]
	069 Add W9, W9, 1
	070 Add X8, X8, W9
	071 Add X0, X8, 312
	072 Move X2, [X0]
	073 Move X1, [X0+8]
	074 Move X0, X19
	075 Move X20, [X31+32]
	076 Move X19, [X31+40]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X30, [X31+48]
	080 CallNoReturn X2
	081 Call 0x1C17F20

Method: System.Int32 System.Collections.IList.Add(System.Object value)

Disassembly:
	0x028FE09C LDP X2, X1, [X0]
	0x028FE0A0 MOV X0, X19
	0x028FE0A4 LDP X30, X19, [X31], #0x10
	0x028FE0A8 BR X2
	0x028FE0AC BL 0x1C16F20
	0x028FE0B0 STP X29, X30, [X31 - 0x40]!
	0x028FE0B4 STR X23, [X31 + 0x10]
	0x028FE0B8 STP X22, X21, [X31 + 0x20]
	0x028FE0BC STP X20, X19, [X31 + 0x30]
	0x028FE0C0 ADD X29, X31, 0x0
	0x028FE0C4 SUB X31, X31, 0x20
	0x028FE0C8 MRS X22, 0xC000
	0x028FE0CC LDR X8, [X22 + 0x28]
	0x028FE0D0 MOV X21, X2
	0x028FE0D4 ADD X9, X31, 0x0
	0x028FE0D8 STUR X8, [X29 - 0x8]
	0x028FE0DC STUR X1, [X29 - 0x20]
	0x028FE0E0 LDR X23, [X2 + 0x20]
	0x028FE0E4 LDR X8, [X23 + 0xC0]
	0x028FE0E8 LDR X8, [X8 + 0x38]
	0x028FE0EC LDR W2, [X8 + 0xFC]
	0x028FE0F0 ADD X10, X2, 0xF
	0x028FE0F4 AND X10, X10, 0x1FFFFFFFF
	0x028FE0F8 SUB X20, X9, X10
	0x028FE0FC ADD X31, X20, 0x0
	0x028FE100 LDR W8, [X8 + 0x28]
	0x028FE104 LDR X19, [X0 + 0x10]
	0x028FE108 MOV X0, X20
	0x028FE10C CMP W8, 0x0
	0x028FE110 SUB X8, X29, 0x20
	0x028FE114 CSEL X1, X1, X8, LT
	0x028FE118 BL 0x3EB1AC0
	0x028FE11C CBZ X19, 0x28FE1E8
	0x028FE120 LDR X8, [X23 + 0xC0]
	0x028FE124 LDR X1, [X8 + 0x18]
	0x028FE128 LDRB W9, [X1 + 0x135]
	0x028FE12C TBNZ X9, 0x0, 0x28FE144
	0x028FE130 MOV X0, X1
	0x028FE134 BL 0x1C5C684
	0x028FE138 LDR X8, [X21 + 0x20]
	0x028FE13C MOV X1, X0
	0x028FE140 LDR X8, [X8 + 0xC0]
	0x028FE144 LDR X8, [X8 + 0x38]
	0x028FE148 LDR W8, [X8 + 0x28]
	0x028FE14C TBNZ X8, 0x1F, 0x28FE154
	0x028FE150 LDR X20, [X20]
	0x028FE154 LDR X8, [X19]
	0x028FE158 LDRH W9, [X8 + 0x12E]
	0x028FE15C CBZ X9, 0x28FE180
	0x028FE160 LDR X10, [X8 + 0xB0]
	0x028FE164 ADD X10, X10, 0x8
	0x028FE168 LDUR X11, [X10 - 0x8]
	0x028FE16C CMP X11, X1
	0x028FE170 B.EQ 0x28FE190
	0x028FE174 SUBS X9, X9, 0x1
	0x028FE178 ADD X10, X10, 0x10
	0x028FE17C B.NE 0x28FE168
	0x028FE180 MOVZ W2, 0x2
	0x028FE184 MOV X0, X19
	0x028FE188 BL 0x1C5C788
	0x028FE18C B 0x28FE1A0
	0x028FE190 LDR W9, [X10]
	0x028FE194 ADD W9, W9, 0x2
	0x028FE198 ADD X8, X8, W9, 0x4, SXTW
	0x028FE19C ADD X0, X8, 0x138
	0x028FE1A0 STUR X20, [X29 - 0x18]
	0x028FE1A4 LDR X1, [X0 + 0x8]
	0x028FE1A8 SUB X3, X29, 0x18
	0x028FE1AC SUB X4, X29, 0xC
	0x028FE1B0 MOV X2, X19
	0x028FE1B4 LDP X0, X8, [X1 + 0x8]
	0x028FE1B8 BLR X8
	0x028FE1BC LDUR W0, [X29 - 0xC]
	0x028FE1C0 LDR X8, [X22 + 0x28]
	0x028FE1C4 LDUR X9, [X29 - 0x8]
	0x028FE1C8 CMP X8, X9
	0x028FE1CC B.NE 0x28FE1EC
	0x028FE1D0 ADD X31, X29, 0x0
	0x028FE1D4 LDP X20, X19, [X31 + 0x30]
	0x028FE1D8 LDP X22, X21, [X31 + 0x20]
	0x028FE1DC LDR X23, [X31 + 0x10]
	0x028FE1E0 LDP X29, X30, [X31], #0x40
	0x028FE1E4 RET
	0x028FE1E8 BL 0x1C16F20
	0x028FE1EC BL 0x3EB1B20
	0x028FE1F0 STP X29, X30, [X31 - 0x50]!
	0x028FE1F4 STP X26, X25, [X31 + 0x10]
	0x028FE1F8 STP X24, X23, [X31 + 0x20]
	0x028FE1FC STP X22, X21, [X31 + 0x30]
	0x028FE200 STP X20, X19, [X31 + 0x40]
	0x028FE204 ADD X29, X31, 0x0
	0x028FE208 SUB X31, X31, 0x30
	0x028FE20C MRS X26, 0xC000
	0x028FE210 LDR X8, [X26 + 0x28]
	0x028FE214 STUR X8, [X29 - 0x8]
	0x028FE218 STUR X2, [X29 - 0x28]
	0x028FE21C LDR X8, [X3 + 0x20]
	0x028FE220 LDR X8, [X8 + 0xC0]
	0x028FE224 LDR X9, [X8 + 0x38]
	0x028FE228 LDR W24, [X9 + 0xFC]
	0x028FE22C ADD X9, X31, 0x0
	0x028FE230 ADD X10, X24, 0xF
	0x028FE234 AND X10, X10, 0x1FFFFFFFF
	0x028FE238 SUB X21, X9, X10
	0x028FE23C ADD X31, X21, 0x0
	0x028FE240 LDR X25, [X0 + 0x10]
	0x028FE244 CBZ X25, 0x28FE3F4
	0x028FE248 MOV W20, W1
	0x028FE24C LDR X1, [X8 + 0x20]
	0x028FE250 MOV X23, X3
	0x028FE254 MOV X22, X2
	0x028FE258 MOV X19, X0
	0x028FE25C LDRB W8, [X1 + 0x135]
	0x028FE260 TBNZ X8, 0x0, 0x28FE270
	0x028FE264 MOV X0, X1
	0x028FE268 BL 0x1C5C684
	0x028FE26C MOV X1, X0
	0x028FE270 LDR X8, [X25]
	0x028FE274 LDRH W9, [X8 + 0x12E]
	0x028FE278 CBZ X9, 0x28FE29C
	0x028FE27C LDR X10, [X8 + 0xB0]
	0x028FE280 ADD X10, X10, 0x8
	0x028FE284 LDUR X11, [X10 - 0x8]
	0x028FE288 CMP X11, X1
	0x028FE28C B.EQ 0x28FE2AC
	0x028FE290 SUBS X9, X9, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, [X0+16]
	007 Compare X22, 0
	008 JumpIfEqual {97}
	009 Move X8, [X2+32]
	010 Move X21, X1
	011 Move X20, X2
	012 Move X19, X0
	013 Move X8, [X8+192]
	014 Move X1, [X8+32]
	015 Move W8, [X1+309]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {23}
	020 Move X0, X1
	021 Call 0x1C5D684
	022 Move X1, X0
	023 Move X8, [X22]
	024 NotImplemented "Instruction LDRH not yet implemented."
	025 Compare X9, 0
	026 JumpIfEqual {33}
	027 Move X10, [X8+176]
	028 Add X10, X10, 8
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Subtract X9, X9, 1
	032 Add X10, X10, 16
	033 Move W2, 1
	034 Move X0, X22
	035 Call 0x1C5D788
	036 Move W9, [X10]
	037 Add W9, W9, 1
	038 Add X8, X8, W9
	039 Add X0, X8, 312
	040 Move X8, [X0]
	041 Move X1, [X0+8]
	042 Move X0, X22
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {51}
	048 Move W0, 28
	049 Move X1, X31
	050 Call ThrowHelper.ThrowNotSupportedException, X0
	051 Move X8, [X20+32]
	052 Move W1, 15
	053 Move X0, X21
	054 Move X8, [X8+192]
	055 Move X2, [X8+208]
	056 Call ThrowHelper.IfNullAndNullsAreIllegalThenThrow, X0, X1
	057 Move X8, [X20+32]
	058 Move X8, [X8+192]
	059 Move X22, [X8+56]
	060 Move W8, [X22+309]
	061 Move TEMP, X8
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfEqual {68}
	065 Move X0, X22
	066 Call 0x1C5D684
	067 Move X22, X0
	068 Compare X21, 0
	069 JumpIfEqual {79}
	070 Move X0, X21
	071 Move X1, X22
	072 Call 0x1C17E00
	073 Move X1, X0
	074 Compare X1, 0
	075 JumpIfNotEqual {80}
	076 Move X0, X21
	077 Move X1, X22
	078 Call 0x1C181E0
	079 Move X1, X31
	080 Move X8, [X20+32]
	081 Move X8, [X8+192]
	082 Move X2, [X8+224]
	083 Move X0, X19
	084 Call 0x28FCB84, X0, X1
	085 Move X8, [X20+32]
	086 Move X0, X19
	087 Move X8, [X8+192]
	088 Move X1, [X8+192]
	089 Call 0x28FC900, X0
	090 Move X20, [X31+32]
	091 Move X19, [X31+40]
	092 Move X22, [X31+16]
	093 Move X21, [X31+24]
	094 Subtract W0, W0, 1
	095 Move X30, [X31+48]
	096 Return X0
	097 Call 0x1C17F20
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X22, X0
	100 Move X0, X22
	101 Call 0x3EB2AD0
	102 Move X22, X0
	103 Move X0, 0x17FE000
	104 Move X0, [X0+3080]
	105 Call 0x1C17D08
	106 Move X8, [X22]
	107 Move X1, [X8]
	108 Call 0x1C18270
	109 Move TEMP, X0
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfNotEqual {131}
	113 Call 0x3EB2AE0
	114 Move X8, [X20+32]
	115 Move X0, 0x17F6000
	116 Move X8, [X8+192]
	117 Move X22, [X8+200]
	118 Move X0, [X0+1728]
	119 Call 0x1C17D08
	120 Move W8, [X0+224]
	121 Compare W8, 0
	122 JumpIfNotEqual {124}
	123 Call 0x1C17DFC
	124 Move X0, X22
	125 Move X1, X31
	126 Call Type.GetTypeFromHandle, X0
	127 Move X1, X0
	128 Move X0, X21
	129 Move X2, X31
	130 Call ThrowHelper.ThrowWrongValueTypeArgumentException, X0, X1
	131 Move W0, 8
	132 Call 0x3EB2AF0
	133 Move X8, [X22]
	134 Move [X0], X8
	135 Move X1, 0x15B7000
	136 Add X1, X1, 3672
	137 Move X2, X31
	138 Call 0x3EB2B00
	139 Move X22, X0
	140 Call 0x3EB2AE0
	141 Move X0, X22
	142 Call 0x1D2D690
	143 Call 0x1991590

Method: System.Boolean System.Collections.IList.Contains(System.Object value)

Disassembly:
	0x028FE294 ADD X10, X10, 0x10
	0x028FE298 B.NE 0x28FE284
	0x028FE29C MOVZ W2, 0x1
	0x028FE2A0 MOV X0, X25
	0x028FE2A4 BL 0x1C5C788
	0x028FE2A8 B 0x28FE2BC
	0x028FE2AC LDR W9, [X10]
	0x028FE2B0 ADD W9, W9, 0x1
	0x028FE2B4 ADD X8, X8, W9, 0x4, SXTW
	0x028FE2B8 ADD X0, X8, 0x138
	0x028FE2BC LDP X8, X1, [X0]
	0x028FE2C0 MOV X0, X25
	0x028FE2C4 BLR X8
	0x028FE2C8 TBZ X0, 0x0, 0x28FE2D8
	0x028FE2CC MOVZ W0, 0x1C
	0x028FE2D0 MOV X1, X31
	0x028FE2D4 BL 0x339E04C
	0x028FE2D8 LDR X25, [X19 + 0x10]
	0x028FE2DC CBZ X25, 0x28FE3F4
	0x028FE2E0 LDR X8, [X23 + 0x20]
	0x028FE2E4 LDR X8, [X8 + 0xC0]
	0x028FE2E8 LDR X1, [X8 + 0x20]
	0x028FE2EC LDRB W8, [X1 + 0x135]
	0x028FE2F0 TBNZ X8, 0x0, 0x28FE300
	0x028FE2F4 MOV X0, X1
	0x028FE2F8 BL 0x1C5C684
	0x028FE2FC MOV X1, X0
	0x028FE300 LDR X8, [X25]
	0x028FE304 LDRH W9, [X8 + 0x12E]
	0x028FE308 CBZ X9, 0x28FE32C
	0x028FE30C LDR X10, [X8 + 0xB0]
	0x028FE310 ADD X10, X10, 0x8
	0x028FE314 LDUR X11, [X10 - 0x8]
	0x028FE318 CMP X11, X1
	0x028FE31C B.EQ 0x28FE33C
	0x028FE320 SUBS X9, X9, 0x1
	0x028FE324 ADD X10, X10, 0x10
	0x028FE328 B.NE 0x28FE314
	0x028FE32C MOV X0, X25
	0x028FE330 MOV W2, W31
	0x028FE334 BL 0x1C5C788
	0x028FE338 B 0x28FE348
	0x028FE33C LDRSW X9, [X10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+32]
	007 Move X21, X1
	008 Move X20, X0
	009 Move X0, X21
	010 Move X8, [X8+192]
	011 Move X19, X2
	012 Move X1, [X8+232]
	013 Call 0x28FE718, X0
	014 Move TEMP, X0
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {40}
	018 Move X8, [X19+32]
	019 Move X8, [X8+192]
	020 Move X22, [X8+56]
	021 Move W8, [X22+309]
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {29}
	026 Move X0, X22
	027 Call 0x1C5D684
	028 Move X22, X0
	029 Compare X21, 0
	030 JumpIfEqual {47}
	031 Move X0, X21
	032 Move X1, X22
	033 Call 0x1C17E00
	034 Move X1, X0
	035 Compare X0, 0
	036 JumpIfNotEqual {48}
	037 Move X0, X21
	038 Move X1, X22
	039 Call 0x1C181E0
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move W0, W31
	045 Move X30, [X31+48]
	046 Return X0
	047 Move X1, X31
	048 Move X8, [X19+32]
	049 Move X0, X20
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X8, [X8+192]
	055 Move X2, [X8+248]
	056 Move X30, [X31+48]
	057 Call 0x28FCE34, X0, X1
	058 Return X0

Method: System.Int32 System.Collections.IList.IndexOf(System.Object value)

Disassembly:
	0x028FE340 ADD X8, X8, X9, 0x4, LSL
	0x028FE344 ADD X0, X8, 0x138
	0x028FE348 LDP X8, X1, [X0]
	0x028FE34C MOV X0, X25
	0x028FE350 BLR X8
	0x028FE354 CMP W0, W20
	0x028FE358 B.CS 0x28FE364
	0x028FE35C MOV X0, X31
	0x028FE360 BL 0x339E294
	0x028FE364 LDR X23, [X23 + 0x20]
	0x028FE368 MOV X0, X21
	0x028FE36C MOV X2, X24
	0x028FE370 LDR X8, [X23 + 0xC0]
	0x028FE374 LDR X8, [X8 + 0x38]
	0x028FE378 LDR W8, [X8 + 0x28]
	0x028FE37C CMP W8, 0x0
	0x028FE380 SUB X8, X29, 0x28
	0x028FE384 CSEL X1, X22, X8, LT
	0x028FE388 BL 0x3EB1AC0
	0x028FE38C LDR X8, [X23 + 0xC0]
	0x028FE390 LDR X8, [X8 + 0x38]
	0x028FE394 LDR W8, [X8 + 0x28]
	0x028FE398 TBNZ X8, 0x1F, 0x28FE3A0
	0x028FE39C LDR X21, [X21]
	0x028FE3A0 STUR W20, [X29 - 0xC]
	0x028FE3A4 LDR X8, [X19]
	0x028FE3A8 SUB X9, X29, 0xC
	0x028FE3AC STP X9, X21, [X29 - 0x20]
	0x028FE3B0 SUB X3, X29, 0x20
	0x028FE3B4 LDR X1, [X8 + 0x380]
	0x028FE3B8 MOV X2, X19
	0x028FE3BC MOV X4, X21
	0x028FE3C0 LDP X0, X8, [X1 + 0x8]
	0x028FE3C4 BLR X8
	0x028FE3C8 LDR X8, [X26 + 0x28]
	0x028FE3CC LDUR X9, [X29 - 0x8]
	0x028FE3D0 CMP X8, X9
	0x028FE3D4 B.NE 0x28FE3F8
	0x028FE3D8 ADD X31, X29, 0x0
	0x028FE3DC LDP X20, X19, [X31 + 0x40]
	0x028FE3E0 LDP X22, X21, [X31 + 0x30]
	0x028FE3E4 LDP X24, X23, [X31 + 0x20]
	0x028FE3E8 LDP X26, X25, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+32]
	007 Move X21, X1
	008 Move X20, X0
	009 Move X0, X21
	010 Move X8, [X8+192]
	011 Move X19, X2
	012 Move X1, [X8+232]
	013 Call 0x28FE718, X0
	014 Move TEMP, X0
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {40}
	018 Move X8, [X19+32]
	019 Move X8, [X8+192]
	020 Move X22, [X8+56]
	021 Move W8, [X22+309]
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {29}
	026 Move X0, X22
	027 Call 0x1C5D684
	028 Move X22, X0
	029 Compare X21, 0
	030 JumpIfEqual {49}
	031 Move X0, X21
	032 Move X1, X22
	033 Call 0x1C17E00
	034 Move X1, X0
	035 Compare X0, 0
	036 JumpIfNotEqual {50}
	037 Move X0, X21
	038 Move X1, X22
	039 Call 0x1C181E0
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move TEMP, 0
	045 Not TEMP
	046 Move W0, TEMP
	047 Move X30, [X31+48]
	048 Return X0
	049 Move X1, X31
	050 Move X8, [X19+32]
	051 Move X0, X20
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X22, [X31+16]
	055 Move X21, [X31+24]
	056 Move X8, [X8+192]
	057 Move X2, [X8+256]
	058 Move X30, [X31+48]
	059 Call 0x28FCF58, X0, X1
	060 Return X0

Method: System.Void System.Collections.IList.Insert(System.Int32 index, System.Object value)

Disassembly:
	0x028FE3EC LDP X29, X30, [X31], #0x50
	0x028FE3F0 RET
	0x028FE3F4 BL 0x1C16F20
	0x028FE3F8 BL 0x3EB1B20
	0x028FE3FC STP X29, X30, [X31 - 0x50]!
	0x028FE400 STP X26, X25, [X31 + 0x10]
	0x028FE404 STP X24, X23, [X31 + 0x20]
	0x028FE408 STP X22, X21, [X31 + 0x30]
	0x028FE40C STP X20, X19, [X31 + 0x40]
	0x028FE410 ADD X29, X31, 0x0
	0x028FE414 SUB X31, X31, 0x20
	0x028FE418 MRS X25, 0xC000
	0x028FE41C LDR X8, [X25 + 0x28]
	0x028FE420 STUR X8, [X29 - 0x8]
	0x028FE424 STUR X1, [X29 - 0x20]
	0x028FE428 LDR X8, [X2 + 0x20]
	0x028FE42C LDR X8, [X8 + 0xC0]
	0x028FE430 LDR X9, [X8 + 0x38]
	0x028FE434 LDR W24, [X9 + 0xFC]
	0x028FE438 ADD X9, X31, 0x0
	0x028FE43C ADD X10, X24, 0xF
	0x028FE440 AND X10, X10, 0x1FFFFFFFF
	0x028FE444 SUB X20, X9, X10
	0x028FE448 ADD X31, X20, 0x0
	0x028FE44C LDR X23, [X0 + 0x10]
	0x028FE450 CBZ X23, 0x28FE600
	0x028FE454 MOV X22, X1
	0x028FE458 LDR X1, [X8 + 0x20]
	0x028FE45C MOV X21, X2
	0x028FE460 MOV X19, X0
	0x028FE464 LDRB W8, [X1 + 0x135]
	0x028FE468 TBNZ X8, 0x0, 0x28FE478
	0x028FE46C MOV X0, X1
	0x028FE470 BL 0x1C5C684
	0x028FE474 MOV X1, X0
	0x028FE478 LDR X8, [X23]
	0x028FE47C LDRH W9, [X8 + 0x12E]
	0x028FE480 CBZ X9, 0x28FE4A4
	0x028FE484 LDR X10, [X8 + 0xB0]
	0x028FE488 ADD X10, X10, 0x8
	0x028FE48C LDUR X11, [X10 - 0x8]
	0x028FE490 CMP X11, X1
	0x028FE494 B.EQ 0x28FE4B4
	0x028FE498 SUBS X9, X9, 0x1
	0x028FE49C ADD X10, X10, 0x10
	0x028FE4A0 B.NE 0x28FE48C
	0x028FE4A4 MOVZ W2, 0x1
	0x028FE4A8 MOV X0, X23
	0x028FE4AC BL 0x1C5C788
	0x028FE4B0 B 0x28FE4C4
	0x028FE4B4 LDR W9, [X10]
	0x028FE4B8 ADD W9, W9, 0x1
	0x028FE4BC ADD X8, X8, W9, 0x4, SXTW
	0x028FE4C0 ADD X0, X8, 0x138
	0x028FE4C4 LDP X8, X1, [X0]
	0x028FE4C8 MOV X0, X23
	0x028FE4CC BLR X8
	0x028FE4D0 TBZ X0, 0x0, 0x28FE4E0
	0x028FE4D4 MOVZ W0, 0x1C
	0x028FE4D8 MOV X1, X31
	0x028FE4DC BL 0x339E04C
	0x028FE4E0 LDR X26, [X21 + 0x20]
	0x028FE4E4 LDR X23, [X19 + 0x10]
	0x028FE4E8 MOV X0, X20
	0x028FE4EC MOV X2, X24
	0x028FE4F0 LDR X8, [X26 + 0xC0]
	0x028FE4F4 LDR X8, [X8 + 0x38]
	0x028FE4F8 LDR W8, [X8 + 0x28]
	0x028FE4FC CMP W8, 0x0
	0x028FE500 SUB X8, X29, 0x20
	0x028FE504 CSEL X1, X22, X8, LT
	0x028FE508 BL 0x3EB1AC0
	0x028FE50C CBZ X23, 0x28FE600
	0x028FE510 LDR X8, [X26 + 0xC0]
	0x028FE514 LDR X1, [X8 + 0x18]
	0x028FE518 LDRB W9, [X1 + 0x135]
	0x028FE51C TBNZ X9, 0x0, 0x28FE534
	0x028FE520 MOV X0, X1
	0x028FE524 BL 0x1C5C684
	0x028FE528 LDR X8, [X21 + 0x20]
	0x028FE52C MOV X1, X0
	0x028FE530 LDR X8, [X8 + 0xC0]
	0x028FE534 LDR X8, [X8 + 0x38]
	0x028FE538 LDR W8, [X8 + 0x28]
	0x028FE53C TBNZ X8, 0x1F, 0x28FE544
	0x028FE540 LDR X20, [X20]
	0x028FE544 LDR X8, [X23]
	0x028FE548 LDRH W9, [X8 + 0x12E]
	0x028FE54C CBZ X9, 0x28FE570
	0x028FE550 LDR X10, [X8 + 0xB0]
	0x028FE554 ADD X10, X10, 0x8
	0x028FE558 LDUR X11, [X10 - 0x8]
	0x028FE55C CMP X11, X1
	0x028FE560 B.EQ 0x28FE580
	0x028FE564 SUBS X9, X9, 0x1
	0x028FE568 ADD X10, X10, 0x10
	0x028FE56C B.NE 0x28FE558
	0x028FE570 MOVZ W2, 0x2
	0x028FE574 MOV X0, X23
	0x028FE578 BL 0x1C5C788
	0x028FE57C B 0x28FE590
	0x028FE580 LDR W9, [X10]
	0x028FE584 ADD W9, W9, 0x2
	0x028FE588 ADD X8, X8, W9, 0x4, SXTW
	0x028FE58C ADD X0, X8, 0x138
	0x028FE590 STUR X20, [X29 - 0x18]
	0x028FE594 LDR X1, [X0 + 0x8]
	0x028FE598 SUB X3, X29, 0x18
	0x028FE59C SUB X4, X29, 0xC
	0x028FE5A0 MOV X2, X23
	0x028FE5A4 LDP X0, X8, [X1 + 0x8]
	0x028FE5A8 BLR X8
	0x028FE5AC LDUR W20, [X29 - 0xC]
	0x028FE5B0 TBNZ X20, 0x1F, 0x28FE5CC
	0x028FE5B4 LDR X8, [X19]
	0x028FE5B8 MOV X0, X19
	0x028FE5BC MOV W1, W20
	0x028FE5C0 LDR X9, [X8 + 0x388]
	0x028FE5C4 LDR X2, [X8 + 0x390]
	0x028FE5C8 BLR X9
	0x028FE5CC LDR X8, [X25 + 0x28]
	0x028FE5D0 LDUR X9, [X29 - 0x8]
	0x028FE5D4 CMP X8, X9
	0x028FE5D8 B.NE 0x28FE604

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, [X0+16]
	008 Compare X23, 0
	009 JumpIfEqual {95}
	010 Move X8, [X3+32]
	011 Move W22, W1
	012 Move X20, X3
	013 Move X19, X2
	014 Move X8, [X8+192]
	015 Move X21, X0
	016 Move X1, [X8+32]
	017 Move W8, [X1+309]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {25}
	022 Move X0, X1
	023 Call 0x1C5D684
	024 Move X1, X0
	025 Move X8, [X23]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Compare X9, 0
	028 JumpIfEqual {35}
	029 Move X10, [X8+176]
	030 Add X10, X10, 8
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Subtract X9, X9, 1
	034 Add X10, X10, 16
	035 Move W2, 1
	036 Move X0, X23
	037 Call 0x1C5D788
	038 Move W9, [X10]
	039 Add W9, W9, 1
	040 Add X8, X8, W9
	041 Add X0, X8, 312
	042 Move X8, [X0]
	043 Move X1, [X0+8]
	044 Move X0, X23
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {53}
	050 Move W0, 28
	051 Move X1, X31
	052 Call ThrowHelper.ThrowNotSupportedException, X0
	053 Move X8, [X20+32]
	054 Move W1, 15
	055 Move X0, X19
	056 Move X8, [X8+192]
	057 Move X2, [X8+208]
	058 Call ThrowHelper.IfNullAndNullsAreIllegalThenThrow, X0, X1
	059 Move X8, [X20+32]
	060 Move X8, [X8+192]
	061 Move X23, [X8+56]
	062 Move W8, [X23+309]
	063 Move TEMP, X8
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfEqual {70}
	067 Move X0, X23
	068 Call 0x1C5D684
	069 Move X23, X0
	070 Compare X19, 0
	071 JumpIfEqual {81}
	072 Move X0, X19
	073 Move X1, X23
	074 Call 0x1C17E00
	075 Move X2, X0
	076 Compare X0, 0
	077 JumpIfNotEqual {82}
	078 Move X0, X19
	079 Move X1, X23
	080 Call 0x1C181E0
	081 Move X2, X31
	082 Move X8, [X20+32]
	083 Move X8, [X8+192]
	084 Move X3, [X8+264]
	085 Move X0, X21
	086 Move W1, W22
	087 Call 0x28FCFF4, X0, X1, X2
	088 Move X20, [X31+32]
	089 Move X19, [X31+40]
	090 Move X22, [X31+16]
	091 Move X21, [X31+24]
	092 Move X30, [X31+48]
	093 Move X23, [X31+56]
	094 Return 
	095 Call 0x1C17F20
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move X21, X0
	098 Move X0, X21
	099 Call 0x3EB2AD0
	100 Move X21, X0
	101 Move X0, 0x17FE000
	102 Move X0, [X0+3080]
	103 Call 0x1C17D08
	104 Move X8, [X21]
	105 Move X1, [X8]
	106 Call 0x1C18270
	107 Move TEMP, X0
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfNotEqual {136}
	111 Call 0x3EB2AE0
	112 Move X8, [X20+32]
	113 Move X0, 0x17F6000
	114 Move X8, [X8+192]
	115 Move X20, [X8+200]
	116 Move X0, [X0+1728]
	117 Call 0x1C17D08
	118 Move W8, [X0+224]
	119 Compare W8, 0
	120 JumpIfNotEqual {122}
	121 Call 0x1C17DFC
	122 Move X0, X20
	123 Move X1, X31
	124 Call Type.GetTypeFromHandle, X0
	125 Move X1, X0
	126 Move X0, X19
	127 Move X20, [X31+32]
	128 Move X19, [X31+40]
	129 Move X22, [X31+16]
	130 Move X21, [X31+24]
	131 Move X2, X31
	132 Move X30, [X31+48]
	133 Move X23, [X31+56]
	134 Call ThrowHelper.ThrowWrongValueTypeArgumentException, X0, X1
	135 Return 
	136 Move W0, 8
	137 Call 0x3EB2AF0
	138 Move X8, [X21]
	139 Move [X0], X8
	140 Move X1, 0x15B7000
	141 Add X1, X1, 3672
	142 Move X2, X31
	143 Call 0x3EB2B00
	144 Move X21, X0
	145 Call 0x3EB2AE0
	146 Move X0, X21
	147 Call 0x1D2D690
	148 Call 0x1991590

Method: System.Void System.Collections.IList.Remove(System.Object value)

Disassembly:
	0x028FE5DC ORN W8, W31, W20, 0x0
	0x028FE5E0 UBFM W0, W8, 0x1F, 0x1F
	0x028FE5E4 ADD X31, X29, 0x0
	0x028FE5E8 LDP X20, X19, [X31 + 0x40]
	0x028FE5EC LDP X22, X21, [X31 + 0x30]
	0x028FE5F0 LDP X24, X23, [X31 + 0x20]
	0x028FE5F4 LDP X26, X25, [X31 + 0x10]
	0x028FE5F8 LDP X29, X30, [X31], #0x50
	0x028FE5FC RET
	0x028FE600 BL 0x1C16F20
	0x028FE604 BL 0x3EB1B20
	0x028FE608 STR X30, [X31 - 0x30]!
	0x028FE60C STP X22, X21, [X31 + 0x10]
	0x028FE610 STP X20, X19, [X31 + 0x20]
	0x028FE614 LDR X22, [X0 + 0x10]
	0x028FE618 CBZ X22, 0x28FE760
	0x028FE61C LDR X8, [X2 + 0x20]
	0x028FE620 MOV W20, W1
	0x028FE624 MOV X21, X2
	0x028FE628 MOV X19, X0
	0x028FE62C LDR X8, [X8 + 0xC0]
	0x028FE630 LDR X1, [X8 + 0x20]
	0x028FE634 LDRB W8, [X1 + 0x135]
	0x028FE638 TBNZ X8, 0x0, 0x28FE648
	0x028FE63C MOV X0, X1
	0x028FE640 BL 0x1C5C684
	0x028FE644 MOV X1, X0
	0x028FE648 LDR X8, [X22]
	0x028FE64C LDRH W9, [X8 + 0x12E]
	0x028FE650 CBZ X9, 0x28FE674
	0x028FE654 LDR X10, [X8 + 0xB0]
	0x028FE658 ADD X10, X10, 0x8
	0x028FE65C LDUR X11, [X10 - 0x8]
	0x028FE660 CMP X11, X1
	0x028FE664 B.EQ 0x28FE684
	0x028FE668 SUBS X9, X9, 0x1
	0x028FE66C ADD X10, X10, 0x10
	0x028FE670 B.NE 0x28FE65C
	0x028FE674 MOVZ W2, 0x1
	0x028FE678 MOV X0, X22
	0x028FE67C BL 0x1C5C788
	0x028FE680 B 0x28FE694
	0x028FE684 LDR W9, [X10]
	0x028FE688 ADD W9, W9, 0x1
	0x028FE68C ADD X8, X8, W9, 0x4, SXTW
	0x028FE690 ADD X0, X8, 0x138
	0x028FE694 LDP X8, X1, [X0]
	0x028FE698 MOV X0, X22
	0x028FE69C BLR X8
	0x028FE6A0 TBZ X0, 0x0, 0x28FE6B0
	0x028FE6A4 MOVZ W0, 0x1C
	0x028FE6A8 MOV X1, X31
	0x028FE6AC BL 0x339E04C
	0x028FE6B0 LDR X22, [X19 + 0x10]
	0x028FE6B4 CBZ X22, 0x28FE760
	0x028FE6B8 LDR X8, [X21 + 0x20]
	0x028FE6BC LDR X8, [X8 + 0xC0]
	0x028FE6C0 LDR X1, [X8 + 0x20]
	0x028FE6C4 LDRB W8, [X1 + 0x135]
	0x028FE6C8 TBNZ X8, 0x0, 0x28FE6D8
	0x028FE6CC MOV X0, X1
	0x028FE6D0 BL 0x1C5C684
	0x028FE6D4 MOV X1, X0
	0x028FE6D8 LDR X8, [X22]
	0x028FE6DC LDRH W9, [X8 + 0x12E]
	0x028FE6E0 CBZ X9, 0x28FE704
	0x028FE6E4 LDR X10, [X8 + 0xB0]
	0x028FE6E8 ADD X10, X10, 0x8
	0x028FE6EC LDUR X11, [X10 - 0x8]
	0x028FE6F0 CMP X11, X1
	0x028FE6F4 B.EQ 0x28FE714
	0x028FE6F8 SUBS X9, X9, 0x1
	0x028FE6FC ADD X10, X10, 0x10
	0x028FE700 B.NE 0x28FE6EC
	0x028FE704 MOV X0, X22
	0x028FE708 MOV W2, W31
	0x028FE70C BL 0x1C5C788
	0x028FE710 B 0x28FE720
	0x028FE714 LDRSW X9, [X10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, [X0+16]
	007 Compare X22, 0
	008 JumpIfEqual {100}
	009 Move X8, [X2+32]
	010 Move X21, X1
	011 Move X20, X2
	012 Move X19, X0
	013 Move X8, [X8+192]
	014 Move X1, [X8+32]
	015 Move W8, [X1+309]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {23}
	020 Move X0, X1
	021 Call 0x1C5D684
	022 Move X1, X0
	023 Move X8, [X22]
	024 NotImplemented "Instruction LDRH not yet implemented."
	025 Compare X9, 0
	026 JumpIfEqual {33}
	027 Move X10, [X8+176]
	028 Add X10, X10, 8
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Subtract X9, X9, 1
	032 Add X10, X10, 16
	033 Move W2, 1
	034 Move X0, X22
	035 Call 0x1C5D788
	036 Move W9, [X10]
	037 Add W9, W9, 1
	038 Add X8, X8, W9
	039 Add X0, X8, 312
	040 Move X8, [X0]
	041 Move X1, [X0+8]
	042 Move X0, X22
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {51}
	048 Move W0, 28
	049 Move X1, X31
	050 Call ThrowHelper.ThrowNotSupportedException, X0
	051 Move X8, [X20+32]
	052 Move X0, X21
	053 Move X8, [X8+192]
	054 Move X1, [X8+232]
	055 Call 0x28FE718, X0
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {82}
	060 Move X8, [X20+32]
	061 Move X8, [X8+192]
	062 Move X22, [X8+56]
	063 Move W8, [X22+309]
	064 Move TEMP, X8
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {71}
	068 Move X0, X22
	069 Call 0x1C5D684
	070 Move X22, X0
	071 Compare X21, 0
	072 JumpIfEqual {88}
	073 Move X0, X21
	074 Move X1, X22
	075 Call 0x1C17E00
	076 Move X1, X0
	077 Compare X0, 0
	078 JumpIfNotEqual {89}
	079 Move X0, X21
	080 Move X1, X22
	081 Call 0x1C181E0
	082 Move X20, [X31+32]
	083 Move X19, [X31+40]
	084 Move X22, [X31+16]
	085 Move X21, [X31+24]
	086 Move X30, [X31+48]
	087 Return 
	088 Move X1, X31
	089 Move X8, [X20+32]
	090 Move X0, X19
	091 Move X20, [X31+32]
	092 Move X19, [X31+40]
	093 Move X22, [X31+16]
	094 Move X21, [X31+24]
	095 Move X8, [X8+192]
	096 Move X2, [X8+272]
	097 Move X30, [X31+48]
	098 Call 0x28FD158, X0, X1
	099 Return 
	100 Call 0x1C17F20

Method: System.Boolean IsCompatibleObject(System.Object value)

Disassembly:
	0x028FE718 ADD X8, X8, X9, 0x4, LSL
	0x028FE71C ADD X0, X8, 0x138
	0x028FE720 LDP X8, X1, [X0]
	0x028FE724 MOV X0, X22
	0x028FE728 BLR X8
	0x028FE72C CMP W0, W20
	0x028FE730 B.HI 0x28FE73C
	0x028FE734 MOV X0, X31
	0x028FE738 BL 0x339E294
	0x028FE73C LDR X8, [X19]
	0x028FE740 MOV X0, X19
	0x028FE744 MOV W1, W20
	0x028FE748 LDP X20, X19, [X31 + 0x20]
	0x028FE74C LDR X3, [X8 + 0x388]
	0x028FE750 LDR X2, [X8 + 0x390]
	0x028FE754 LDP X22, X21, [X31 + 0x10]
	0x028FE758 LDR X30, [X31], #0x30
	0x028FE75C BR X3
	0x028FE760 BL 0x1C16F20
	0x028FE764 STP X30, X19, [X31 - 0x10]!
	0x028FE768 LDR X19, [X0 + 0x10]
	0x028FE76C CBZ X19, 0x28FE7EC
	0x028FE770 LDR X8, [X1 + 0x20]
	0x028FE774 LDR X8, [X8 + 0xC0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X1+32]
	004 Move X19, X0
	005 Move W9, [X8+309]
	006 Move TEMP, X9
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfEqual {13}
	010 Move X0, X8
	011 Call 0x1C5D684
	012 Move X8, X0
	013 Move X8, [X8+192]
	014 Move X1, [X8+56]
	015 Move W8, [X1+309]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {23}
	020 Move X0, X1
	021 Call 0x1C5D684
	022 Move X1, X0
	023 Move X0, X19
	024 Call 0x1C17E00
	025 Compare X0, 0
	026 JumpIfEqual {28}
	027 Move W0, 1
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction CSET not yet implemented."
	030 Move X30, [X31+16]
	031 Move X19, [X31+24]
	032 Return X0

