Type: System.Collections.ObjectModel.ReadOnlyDictionary`2/DictionaryEnumerator

Method: System.Void .ctor(System.Collections.Generic.IDictionary`2<TKey, TValue> dictionary)

Disassembly:
	0x029B71E8 LDR X10, [X0 + 0xC0]
	0x029B71EC LDR X10, [X10 + 0x38]
	0x029B71F0 LDR X26, [X10]
	0x029B71F4 TBNZ X9, 0x0, 0x29B7204
	0x029B71F8 MOV X0, X8
	0x029B71FC BL 0x1C5C684
	0x029B7200 MOV X8, X0
	0x029B7204 LDR X8, [X8 + 0xC0]
	0x029B7208 SUB X3, X29, 0x10
	0x029B720C MOV X0, X26
	0x029B7210 MOV X2, X22
	0x029B7214 LDR X1, [X8 + 0x38]
	0x029B7218 STUR X25, [X29 - 0x10]
	0x029B721C MOV X4, X25
	0x029B7220 LDR X8, [X1 + 0x10]
	0x029B7224 BLR X8
	0x029B7228 LDR X0, [X19 + 0x20]
	0x029B722C LDRB W8, [X0 + 0x135]
	0x029B7230 TBNZ X8, 0x0, 0x29B7238
	0x029B7234 BL 0x1C5C684
	0x029B7238 LDR X8, [X0 + 0xC0]
	0x029B723C MOV X1, X25
	0x029B7240 LDR X0, [X8 + 0x48]
	0x029B7244 BL 0x1C16E04
	0x029B7248 LDR X25, [X24 + 0x8]
	0x029B724C CBZ X25, 0x29B73CC
	0x029B7250 MOV X24, X0
	0x029B7254 LDR X0, [X19 + 0x20]
	0x029B7258 LDRB W8, [X0 + 0x135]
	0x029B725C TBNZ X8, 0x0, 0x29B7264
	0x029B7260 BL 0x1C5C684
	0x029B7264 LDR X8, [X0 + 0xC0]
	0x029B7268 LDR X1, [X8 + 0x20]
	0x029B726C LDRB W8, [X1 + 0x135]
	0x029B7270 TBNZ X8, 0x0, 0x29B7280
	0x029B7274 MOV X0, X1
	0x029B7278 BL 0x1C5C684
	0x029B727C MOV X1, X0
	0x029B7280 LDR X8, [X25]
	0x029B7284 LDRH W9, [X8 + 0x12E]
	0x029B7288 CBZ X9, 0x29B72AC
	0x029B728C LDR X10, [X8 + 0xB0]
	0x029B7290 ADD X10, X10, 0x8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move [X0], X1
	005 Compare X1, 0
	006 JumpIfEqual {51}
	007 Move X19, X0
	008 Move X0, [X2+32]
	009 Move X20, X1
	010 Move W8, [X0+309]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {16}
	015 Call 0x1C5D684
	016 Move X8, [X0+192]
	017 Move X1, [X8+16]
	018 Move W8, [X1+309]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {26}
	023 Move X0, X1
	024 Call 0x1C5D684
	025 Move X1, X0
	026 Move X8, [X20]
	027 NotImplemented "Instruction LDRH not yet implemented."
	028 Compare X9, 0
	029 JumpIfEqual {36}
	030 Move X10, [X8+176]
	031 Add X10, X10, 8
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Subtract X9, X9, 1
	035 Add X10, X10, 16
	036 Move X0, X20
	037 Move W2, W31
	038 Call 0x1C5D788
	039 NotImplemented "Instruction LDRSW not yet implemented."
	040 Add X8, X8, X9
	041 Add X0, X8, 312
	042 Move X8, [X0]
	043 Move X1, [X0+8]
	044 Move X0, X20
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move [X19+8], X0
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Return 
	051 Call 0x1C17F20

Method: System.Collections.DictionaryEntry get_Entry()

Disassembly:
	0x029B7294 LDUR X11, [X10 - 0x8]
	0x029B7298 CMP X11, X1
	0x029B729C B.EQ 0x29B72BC
	0x029B72A0 SUBS X9, X9, 0x1
	0x029B72A4 ADD X10, X10, 0x10
	0x029B72A8 B.NE 0x29B7294
	0x029B72AC MOV X0, X25
	0x029B72B0 MOV W2, W31
	0x029B72B4 BL 0x1C5C788
	0x029B72B8 B 0x29B72C8
	0x029B72BC LDRSW X9, [X10]
	0x029B72C0 ADD X8, X8, X9, 0x4, LSL
	0x029B72C4 ADD X0, X8, 0x138
	0x029B72C8 STUR X23, [X29 - 0x10]
	0x029B72CC LDR X1, [X0 + 0x8]
	0x029B72D0 SUB X3, X29, 0x10
	0x029B72D4 MOV X2, X25
	0x029B72D8 MOV X4, X23
	0x029B72DC LDP X0, X8, [X1 + 0x8]
	0x029B72E0 BLR X8
	0x029B72E4 MOV X0, X22
	0x029B72E8 MOV X1, X23
	0x029B72EC MOV X2, X21
	0x029B72F0 BL 0x3EB1AC0
	0x029B72F4 LDR X8, [X19 + 0x20]
	0x029B72F8 ADD X9, X8, 0x135
	0x029B72FC LDRH W9, [X9]
	0x029B7300 TBNZ X9, 0x0, 0x29B731C
	0x029B7304 MOV X0, X8
	0x029B7308 BL 0x1C5C684
	0x029B730C LDR X8, [X19 + 0x20]
	0x029B7310 ADD X9, X8, 0x135
	0x029B7314 LDRH W9, [X9]
	0x029B7318 B 0x29B7320
	0x029B731C MOV X0, X8
	0x029B7320 LDR X10, [X0 + 0xC0]
	0x029B7324 LDR X10, [X10 + 0x50]
	0x029B7328 LDR X21, [X10]
	0x029B732C TBNZ X9, 0x0, 0x29B733C
	0x029B7330 MOV X0, X8
	0x029B7334 BL 0x1C5C684
	0x029B7338 MOV X8, X0
	0x029B733C LDR X8, [X8 + 0xC0]
	0x029B7340 SUB X3, X29, 0x10
	0x029B7344 MOV X0, X21
	0x029B7348 MOV X2, X22
	0x029B734C LDR X1, [X8 + 0x50]
	0x029B7350 STUR X20, [X29 - 0x10]
	0x029B7354 MOV X4, X20
	0x029B7358 LDR X8, [X1 + 0x10]
	0x029B735C BLR X8
	0x029B7360 LDR X0, [X19 + 0x20]
	0x029B7364 LDRB W8, [X0 + 0x135]
	0x029B7368 TBNZ X8, 0x0, 0x29B7370
	0x029B736C BL 0x1C5C684
	0x029B7370 LDR X8, [X0 + 0xC0]
	0x029B7374 MOV X1, X20
	0x029B7378 LDR X0, [X8 + 0x58]
	0x029B737C BL 0x1C16E04
	0x029B7380 MOV X2, X0
	0x029B7384 SUB X0, X29, 0x20
	0x029B7388 MOV X1, X24
	0x029B738C MOV X3, X31
	0x029B7390 STP X31, X31, [X29 - 0x20]
	0x029B7394 BL 0x335035C
	0x029B7398 LDP X0, X1, [X29 - 0x20]
	0x029B739C LDR X8, [X28 + 0x28]
	0x029B73A0 LDUR X9, [X29 - 0x8]
	0x029B73A4 CMP X8, X9
	0x029B73A8 B.NE 0x29B73D0
	0x029B73AC ADD X31, X29, 0x0
	0x029B73B0 LDP X20, X19, [X31 + 0x50]
	0x029B73B4 LDP X22, X21, [X31 + 0x40]
	0x029B73B8 LDP X24, X23, [X31 + 0x30]
	0x029B73BC LDP X26, X25, [X31 + 0x20]
	0x029B73C0 LDP X28, X27, [X31 + 0x10]
	0x029B73C4 LDP X29, X30, [X31], #0x60
	0x029B73C8 RET
	0x029B73CC BL 0x1C16F20
	0x029B73D0 BL 0x3EB1B20
	0x029B73D4 STP X29, X30, [X31 - 0x50]!
	0x029B73D8 STR X25, [X31 + 0x10]
	0x029B73DC STP X24, X23, [X31 + 0x20]
	0x029B73E0 STP X22, X21, [X31 + 0x30]
	0x029B73E4 STP X20, X19, [X31 + 0x40]
	0x029B73E8 ADD X29, X31, 0x0
	0x029B73EC SUB X31, X31, 0x10
	0x029B73F0 MRS X25, 0xC000
	0x029B73F4 LDR X8, [X25 + 0x28]
	0x029B73F8 MOV X19, X1
	0x029B73FC MOV X24, X0
	0x029B7400 STUR X8, [X29 - 0x8]
	0x029B7404 LDR X8, [X1 + 0x20]
	0x029B7408 ADD X9, X8, 0x135
	0x029B740C LDRH W9, [X9]
	0x029B7410 TBNZ X9, 0x0, 0x29B742C

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, [X0+8]
	007 Compare X20, 0
	008 JumpIfEqual {120}
	009 Move X21, X0
	010 Move X0, [X1+32]
	011 Move X19, X1
	012 Move W8, [X0+309]
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {18}
	017 Call 0x1C5D684
	018 Move X8, [X0+192]
	019 Move X1, [X8+32]
	020 Move W8, [X1+309]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {28}
	025 Move X0, X1
	026 Call 0x1C5D684
	027 Move X1, X0
	028 Move X8, [X20]
	029 NotImplemented "Instruction LDRH not yet implemented."
	030 Compare X9, 0
	031 JumpIfEqual {38}
	032 Move X10, [X8+176]
	033 Add X10, X10, 8
	034 NotImplemented "Instruction LDUR not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Subtract X9, X9, 1
	037 Add X10, X10, 16
	038 Move X0, X20
	039 Move W2, W31
	040 Call 0x1C5D788
	041 NotImplemented "Instruction LDRSW not yet implemented."
	042 Add X8, X8, X9
	043 Add X0, X8, 312
	044 Move X8, [X0]
	045 Move X1, [X0+8]
	046 Move X0, X20
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Move X8, [X19+32]
	049 Move X20, X0
	050 Move W9, [X8+309]
	051 Move TEMP, X9
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfEqual {57}
	055 Move X0, X8
	056 Call 0x1C5D684
	057 Move X21, [X21+8]
	058 Compare X21, 0
	059 JumpIfEqual {120}
	060 Move X0, [X19+32]
	061 Move W8, [X0+309]
	062 Move TEMP, X8
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {67}
	066 Call 0x1C5D684
	067 Move X8, [X0+192]
	068 Move X1, [X8+32]
	069 Move W8, [X1+309]
	070 Move TEMP, X8
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfEqual {77}
	074 Move X0, X1
	075 Call 0x1C5D684
	076 Move X1, X0
	077 Move X8, [X21]
	078 NotImplemented "Instruction LDRH not yet implemented."
	079 Compare X9, 0
	080 JumpIfEqual {87}
	081 Move X10, [X8+176]
	082 Add X10, X10, 8
	083 NotImplemented "Instruction LDUR not yet implemented."
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Subtract X9, X9, 1
	086 Add X10, X10, 16
	087 Move X0, X21
	088 Move W2, W31
	089 Call 0x1C5D788
	090 NotImplemented "Instruction LDRSW not yet implemented."
	091 Add X8, X8, X9
	092 Add X0, X8, 312
	093 Move X8, [X0]
	094 Move X1, [X0+8]
	095 Move X0, X21
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Move X0, [X19+32]
	098 Move X19, X1
	099 Move W8, [X0+309]
	100 Move TEMP, X8
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfEqual {105}
	104 Call 0x1C5D684
	105 Add X0, X31, 0
	106 Move X1, X20
	107 Move X2, X19
	108 Move X3, X31
	109 Move [X31], X31
	110 Move [X31+8], X31
	111 Call DictionaryEntry..ctor, X0, X1, X2
	112 Move X0, [X31]
	113 Move X1, [X31+8]
	114 Move X20, [X31+32]
	115 Move X19, [X31+40]
	116 Move X30, [X31+16]
	117 Move X21, [X31+24]
	118 Add X31, X31, 48
	119 Return X0
	120 Call 0x1C17F20

Method: System.Object get_Key()

Disassembly:
	0x029B7414 MOV X0, X8
	0x029B7418 BL 0x1C5C684
	0x029B741C LDR X8, [X19 + 0x20]
	0x029B7420 ADD X9, X8, 0x135
	0x029B7424 LDRH W9, [X9]
	0x029B7428 B 0x29B7430
	0x029B742C MOV X0, X8
	0x029B7430 LDR X10, [X0 + 0xC0]
	0x029B7434 LDR X10, [X10 + 0x30]
	0x029B7438 LDR W22, [X10 + 0xFC]
	0x029B743C TBNZ X9, 0x0, 0x29B744C
	0x029B7440 MOV X0, X8
	0x029B7444 BL 0x1C5C684
	0x029B7448 MOV X8, X0
	0x029B744C LDR X8, [X8 + 0xC0]
	0x029B7450 ADD X9, X31, 0x0
	0x029B7454 LDR X8, [X8 + 0x48]
	0x029B7458 LDR W8, [X8 + 0xFC]
	0x029B745C ADD X8, X8, 0xF
	0x029B7460 AND X8, X8, 0x1FFFFFFFF
	0x029B7464 SUB X20, X9, X8
	0x029B7468 ADD X31, X20, 0x0
	0x029B746C ADD X9, X22, 0xF
	0x029B7470 ADD X8, X31, 0x0
	0x029B7474 AND X9, X9, 0x1FFFFFFFF
	0x029B7478 SUB X23, X8, X9
	0x029B747C ADD X31, X23, 0x0
	0x029B7480 ADD X8, X31, 0x0
	0x029B7484 SUB X21, X8, X9
	0x029B7488 ADD X31, X21, 0x0
	0x029B748C MOV X0, X21
	0x029B7490 MOV W1, W31
	0x029B7494 MOV X2, X22
	0x029B7498 BL 0x3EB1B10
	0x029B749C LDR X24, [X24 + 0x8]
	0x029B74A0 CBZ X24, 0x29B75FC
	0x029B74A4 LDR X0, [X19 + 0x20]
	0x029B74A8 LDRB W8, [X0 + 0x135]
	0x029B74AC TBNZ X8, 0x0, 0x29B74B4
	0x029B74B0 BL 0x1C5C684
	0x029B74B4 LDR X8, [X0 + 0xC0]
	0x029B74B8 LDR X1, [X8 + 0x20]
	0x029B74BC LDRB W8, [X1 + 0x135]
	0x029B74C0 TBNZ X8, 0x0, 0x29B74D0
	0x029B74C4 MOV X0, X1
	0x029B74C8 BL 0x1C5C684
	0x029B74CC MOV X1, X0
	0x029B74D0 LDR X8, [X24]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, [X0+8]
	005 Compare X20, 0
	006 JumpIfEqual {59}
	007 Move X0, [X1+32]
	008 Move X19, X1
	009 Move W8, [X0+309]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {15}
	014 Call 0x1C5D684
	015 Move X8, [X0+192]
	016 Move X1, [X8+32]
	017 Move W8, [X1+309]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {25}
	022 Move X0, X1
	023 Call 0x1C5D684
	024 Move X1, X0
	025 Move X8, [X20]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Compare X9, 0
	028 JumpIfEqual {35}
	029 Move X10, [X8+176]
	030 Add X10, X10, 8
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Subtract X9, X9, 1
	034 Add X10, X10, 16
	035 Move X0, X20
	036 Move W2, W31
	037 Call 0x1C5D788
	038 NotImplemented "Instruction LDRSW not yet implemented."
	039 Add X8, X8, X9
	040 Add X0, X8, 312
	041 Move X8, [X0]
	042 Move X1, [X0+8]
	043 Move X0, X20
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move X8, [X19+32]
	046 Move X19, X0
	047 Move W9, [X8+309]
	048 Move TEMP, X9
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {54}
	052 Move X0, X8
	053 Call 0x1C5D684
	054 Move X0, X19
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move X30, [X31+32]
	058 Return X0
	059 Call 0x1C17F20

Method: System.Object get_Value()

Disassembly:
	0x029B74D4 LDRH W9, [X8 + 0x12E]
	0x029B74D8 CBZ X9, 0x29B74FC
	0x029B74DC LDR X10, [X8 + 0xB0]
	0x029B74E0 ADD X10, X10, 0x8
	0x029B74E4 LDUR X11, [X10 - 0x8]
	0x029B74E8 CMP X11, X1
	0x029B74EC B.EQ 0x29B750C
	0x029B74F0 SUBS X9, X9, 0x1
	0x029B74F4 ADD X10, X10, 0x10
	0x029B74F8 B.NE 0x29B74E4
	0x029B74FC MOV X0, X24
	0x029B7500 MOV W2, W31
	0x029B7504 BL 0x1C5C788
	0x029B7508 B 0x29B7518
	0x029B750C LDRSW X9, [X10]
	0x029B7510 ADD X8, X8, X9, 0x4, LSL
	0x029B7514 ADD X0, X8, 0x138
	0x029B7518 STUR X23, [X29 - 0x10]
	0x029B751C LDR X1, [X0 + 0x8]
	0x029B7520 SUB X3, X29, 0x10
	0x029B7524 MOV X2, X24
	0x029B7528 MOV X4, X23
	0x029B752C LDP X0, X8, [X1 + 0x8]
	0x029B7530 BLR X8
	0x029B7534 MOV X0, X21
	0x029B7538 MOV X1, X23
	0x029B753C MOV X2, X22
	0x029B7540 BL 0x3EB1AC0
	0x029B7544 LDR X8, [X19 + 0x20]
	0x029B7548 ADD X9, X8, 0x135
	0x029B754C LDRH W9, [X9]
	0x029B7550 TBNZ X9, 0x0, 0x29B756C
	0x029B7554 MOV X0, X8
	0x029B7558 BL 0x1C5C684
	0x029B755C LDR X8, [X19 + 0x20]
	0x029B7560 ADD X9, X8, 0x135
	0x029B7564 LDRH W9, [X9]
	0x029B7568 B 0x29B7570
	0x029B756C MOV X0, X8
	0x029B7570 LDR X10, [X0 + 0xC0]
	0x029B7574 LDR X10, [X10 + 0x38]
	0x029B7578 LDR X22, [X10]
	0x029B757C TBNZ X9, 0x0, 0x29B758C
	0x029B7580 MOV X0, X8
	0x029B7584 BL 0x1C5C684
	0x029B7588 MOV X8, X0
	0x029B758C LDR X8, [X8 + 0xC0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, [X0+8]
	005 Compare X20, 0
	006 JumpIfEqual {58}
	007 Move X0, [X1+32]
	008 Move X19, X1
	009 Move W8, [X0+309]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {15}
	014 Call 0x1C5D684
	015 Move X8, [X0+192]
	016 Move X1, [X8+32]
	017 Move W8, [X1+309]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {25}
	022 Move X0, X1
	023 Call 0x1C5D684
	024 Move X1, X0
	025 Move X8, [X20]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Compare X9, 0
	028 JumpIfEqual {35}
	029 Move X10, [X8+176]
	030 Add X10, X10, 8
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Subtract X9, X9, 1
	034 Add X10, X10, 16
	035 Move X0, X20
	036 Move W2, W31
	037 Call 0x1C5D788
	038 NotImplemented "Instruction LDRSW not yet implemented."
	039 Add X8, X8, X9
	040 Add X0, X8, 312
	041 Move X8, [X0]
	042 Move X1, [X0+8]
	043 Move X0, X20
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move X0, [X19+32]
	046 Move X19, X1
	047 Move W8, [X0+309]
	048 Move TEMP, X8
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {53}
	052 Call 0x1C5D684
	053 Move X0, X19
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move X30, [X31+32]
	057 Return X0
	058 Call 0x1C17F20

Method: System.Object get_Current()

Disassembly:
	0x029B7590 SUB X3, X29, 0x10
	0x029B7594 MOV X0, X22
	0x029B7598 MOV X2, X21
	0x029B759C LDR X1, [X8 + 0x38]
	0x029B75A0 STUR X20, [X29 - 0x10]
	0x029B75A4 MOV X4, X20
	0x029B75A8 LDR X8, [X1 + 0x10]
	0x029B75AC BLR X8
	0x029B75B0 LDR X0, [X19 + 0x20]
	0x029B75B4 LDRB W8, [X0 + 0x135]
	0x029B75B8 TBNZ X8, 0x0, 0x29B75C0
	0x029B75BC BL 0x1C5C684
	0x029B75C0 LDR X8, [X0 + 0xC0]
	0x029B75C4 MOV X1, X20
	0x029B75C8 LDR X0, [X8 + 0x48]
	0x029B75CC BL 0x1C16E04
	0x029B75D0 LDR X8, [X25 + 0x28]
	0x029B75D4 LDUR X9, [X29 - 0x8]
	0x029B75D8 CMP X8, X9
	0x029B75DC B.NE 0x29B7600
	0x029B75E0 ADD X31, X29, 0x0
	0x029B75E4 LDP X20, X19, [X31 + 0x40]
	0x029B75E8 LDP X22, X21, [X31 + 0x30]
	0x029B75EC LDP X24, X23, [X31 + 0x20]
	0x029B75F0 LDR X25, [X31 + 0x10]
	0x029B75F4 LDP X29, X30, [X31], #0x50
	0x029B75F8 RET
	0x029B75FC BL 0x1C16F20
	0x029B7600 BL 0x3EB1B20
	0x029B7604 STP X29, X30, [X31 - 0x50]!
	0x029B7608 STR X25, [X31 + 0x10]
	0x029B760C STP X24, X23, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1A24000
	007 Move W8, [X21+4047]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x1745000
	015 Move X0, [X0+3856]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+4047], W8
	019 Move X0, [X20+32]
	020 Move X20, 0x1745000
	021 Move W8, [X0+309]
	022 Move X20, [X20+3856]
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {28}
	027 Call 0x1C5D684
	028 Move X8, [X0+192]
	029 Move X0, X19
	030 Move X1, [X8+96]
	031 Call 0x29B7294, X0
	032 Move X8, [X20]
	033 Move [X31], X0
	034 Move [X31+8], X1
	035 Add X1, X31, 0
	036 Move X0, X8
	037 Call 0x1C17E04
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X30, [X31+16]
	041 Move X21, [X31+24]
	042 Add X31, X31, 48
	043 Return X0

Method: System.Boolean MoveNext()

Disassembly:
	0x029B7610 STP X22, X21, [X31 + 0x30]
	0x029B7614 STP X20, X19, [X31 + 0x40]
	0x029B7618 ADD X29, X31, 0x0
	0x029B761C SUB X31, X31, 0x10
	0x029B7620 MRS X25, 0xC000
	0x029B7624 LDR X8, [X25 + 0x28]
	0x029B7628 MOV X19, X1
	0x029B762C MOV X24, X0
	0x029B7630 STUR X8, [X29 - 0x8]
	0x029B7634 LDR X8, [X1 + 0x20]
	0x029B7638 ADD X9, X8, 0x135
	0x029B763C LDRH W9, [X9]
	0x029B7640 TBNZ X9, 0x0, 0x29B765C
	0x029B7644 MOV X0, X8
	0x029B7648 BL 0x1C5C684
	0x029B764C LDR X8, [X19 + 0x20]
	0x029B7650 ADD X9, X8, 0x135
	0x029B7654 LDRH W9, [X9]
	0x029B7658 B 0x29B7660
	0x029B765C MOV X0, X8
	0x029B7660 LDR X10, [X0 + 0xC0]
	0x029B7664 LDR X10, [X10 + 0x30]
	0x029B7668 LDR W22, [X10 + 0xFC]
	0x029B766C TBNZ X9, 0x0, 0x29B767C
	0x029B7670 MOV X0, X8
	0x029B7674 BL 0x1C5C684
	0x029B7678 MOV X8, X0
	0x029B767C LDR X8, [X8 + 0xC0]
	0x029B7680 ADD X9, X31, 0x0
	0x029B7684 LDR X8, [X8 + 0x58]
	0x029B7688 LDR W8, [X8 + 0xFC]
	0x029B768C ADD X8, X8, 0xF
	0x029B7690 AND X8, X8, 0x1FFFFFFFF
	0x029B7694 SUB X20, X9, X8
	0x029B7698 ADD X31, X20, 0x0
	0x029B769C ADD X9, X22, 0xF
	0x029B76A0 ADD X8, X31, 0x0
	0x029B76A4 AND X9, X9, 0x1FFFFFFFF
	0x029B76A8 SUB X23, X8, X9
	0x029B76AC ADD X31, X23, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1A24000
	005 Move W8, [X20+4048]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x173D000
	012 Move X0, [X0+3608]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+4048], W8
	016 Move X19, [X19+8]
	017 Compare X19, 0
	018 JumpIfEqual {45}
	019 Move X10, 0x173D000
	020 Move X8, [X19]
	021 Move X10, [X10+3608]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Move X1, [X10]
	024 Compare X9, 0
	025 JumpIfEqual {32}
	026 Move X10, [X8+176]
	027 Add X10, X10, 8
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Subtract X9, X9, 1
	031 Add X10, X10, 16
	032 Move X0, X19
	033 Move W2, W31
	034 Call 0x1C5D788
	035 NotImplemented "Instruction LDRSW not yet implemented."
	036 Add X8, X8, X9
	037 Add X0, X8, 312
	038 Move X2, [X0]
	039 Move X1, [X0+8]
	040 Move X0, X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 CallNoReturn X2
	045 Call 0x1C17F20

Method: System.Void Reset()

Disassembly:
	0x029B76B0 ADD X8, X31, 0x0
	0x029B76B4 SUB X21, X8, X9
	0x029B76B8 ADD X31, X21, 0x0
	0x029B76BC MOV X0, X21
	0x029B76C0 MOV W1, W31
	0x029B76C4 MOV X2, X22
	0x029B76C8 BL 0x3EB1B10
	0x029B76CC LDR X24, [X24 + 0x8]
	0x029B76D0 CBZ X24, 0x29B782C
	0x029B76D4 LDR X0, [X19 + 0x20]
	0x029B76D8 LDRB W8, [X0 + 0x135]
	0x029B76DC TBNZ X8, 0x0, 0x29B76E4
	0x029B76E0 BL 0x1C5C684
	0x029B76E4 LDR X8, [X0 + 0xC0]
	0x029B76E8 LDR X1, [X8 + 0x20]
	0x029B76EC LDRB W8, [X1 + 0x135]
	0x029B76F0 TBNZ X8, 0x0, 0x29B7700
	0x029B76F4 MOV X0, X1
	0x029B76F8 BL 0x1C5C684
	0x029B76FC MOV X1, X0
	0x029B7700 LDR X8, [X24]
	0x029B7704 LDRH W9, [X8 + 0x12E]
	0x029B7708 CBZ X9, 0x29B772C
	0x029B770C LDR X10, [X8 + 0xB0]
	0x029B7710 ADD X10, X10, 0x8
	0x029B7714 LDUR X11, [X10 - 0x8]
	0x029B7718 CMP X11, X1
	0x029B771C B.EQ 0x29B773C
	0x029B7720 SUBS X9, X9, 0x1
	0x029B7724 ADD X10, X10, 0x10
	0x029B7728 B.NE 0x29B7714
	0x029B772C MOV X0, X24
	0x029B7730 MOV W2, W31
	0x029B7734 BL 0x1C5C788
	0x029B7738 B 0x29B7748
	0x029B773C LDRSW X9, [X10]
	0x029B7740 ADD X8, X8, X9, 0x4, LSL
	0x029B7744 ADD X0, X8, 0x138
	0x029B7748 STUR X23, [X29 - 0x10]
	0x029B774C LDR X1, [X0 + 0x8]
	0x029B7750 SUB X3, X29, 0x10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1A24000
	005 Move W8, [X20+4049]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x173D000
	012 Move X0, [X0+3608]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+4049], W8
	016 Move X19, [X19+8]
	017 Compare X19, 0
	018 JumpIfEqual {46}
	019 Move X10, 0x173D000
	020 Move X8, [X19]
	021 Move X10, [X10+3608]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Move X1, [X10]
	024 Compare X9, 0
	025 JumpIfEqual {32}
	026 Move X10, [X8+176]
	027 Add X10, X10, 8
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Subtract X9, X9, 1
	031 Add X10, X10, 16
	032 Move W2, 2
	033 Move X0, X19
	034 Call 0x1C5D788
	035 Move W9, [X10]
	036 Add W9, W9, 2
	037 Add X8, X8, W9
	038 Add X0, X8, 312
	039 Move X2, [X0]
	040 Move X1, [X0+8]
	041 Move X0, X19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 CallNoReturn X2
	046 Call 0x1C17F20

