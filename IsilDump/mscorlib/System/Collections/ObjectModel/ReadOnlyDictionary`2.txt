Type: System.Collections.ObjectModel.ReadOnlyDictionary`2

Method: System.Void .ctor(System.Collections.Generic.IDictionary`2<TKey, TValue> dictionary)

Disassembly:
	0x025BA37C TBZ X0, 0x0, 0x25BA438
	0x025BA380 LDR X8, [X19 + 0x20]
	0x025BA384 LDR X8, [X8 + 0xC0]
	0x025BA388 LDR X1, [X8 + 0xD0]
	0x025BA38C LDRB W8, [X1 + 0x135]
	0x025BA390 TBNZ X8, 0x0, 0x25BA3A0
	0x025BA394 MOV X0, X1
	0x025BA398 BL 0x1C5C684
	0x025BA39C MOV X1, X0
	0x025BA3A0 LDR X8, [X23]
	0x025BA3A4 LDRH W9, [X8 + 0x12E]
	0x025BA3A8 CBZ X9, 0x25BA3CC
	0x025BA3AC LDR X10, [X8 + 0xB0]
	0x025BA3B0 ADD X10, X10, 0x8
	0x025BA3B4 LDUR X11, [X10 - 0x8]
	0x025BA3B8 CMP X11, X1
	0x025BA3BC B.EQ 0x25BA3DC
	0x025BA3C0 SUBS X9, X9, 0x1
	0x025BA3C4 ADD X10, X10, 0x10
	0x025BA3C8 B.NE 0x25BA3B4
	0x025BA3CC MOV X0, X23
	0x025BA3D0 MOV W2, W31
	0x025BA3D4 BL 0x1C5C788
	0x025BA3D8 B 0x25BA3E8
	0x025BA3DC LDRSW X9, [X10]
	0x025BA3E0 ADD X8, X8, X9, 0x4, LSL
	0x025BA3E4 ADD X0, X8, 0x138

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X1
	006 Move X1, X31
	007 Move X19, X2
	008 Move X21, X0
	009 Call Object..ctor, X0
	010 Compare X20, 0
	011 JumpIfEqual {18}
	012 Move [X21+16], X20
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move X30, [X31+32]
	016 Move X21, [X31+40]
	017 Return 
	018 Move X0, 0x1B3F000
	019 Move X0, [X0+1320]
	020 Call 0x1C17D08
	021 Call 0x1C17F10
	022 Move X20, X0
	023 Move X0, 0x1B62000
	024 Move X0, [X0+2216]
	025 Call 0x1C17D08
	026 Move X1, X0
	027 Move X0, X20
	028 Move X2, X31
	029 Call ArgumentNullException..ctor, X0, X1
	030 Move X0, X20
	031 Move X1, X19
	032 Call 0x1C17DEC

Method: System.Collections.ObjectModel.ReadOnlyDictionary`2/KeyCollection<TKey, TValue> get_Keys()

Disassembly:
	0x025BA3E8 LDP X8, X1, [X0]
	0x025BA3EC MOV X0, X23
	0x025BA3F0 BLR X8
	0x025BA3F4 ADD W26, W20, 0x1
	0x025BA3F8 MOV X2, X0
	0x025BA3FC MOV X3, X1
	0x025BA400 STP X31, X31, [X31 + 0x10]
	0x025BA404 ADD X0, X31, 0x10
	0x025BA408 MOV X1, X2
	0x025BA40C MOV X2, X3
	0x025BA410 MOV X3, X31
	0x025BA414 BL 0x335035C
	0x025BA418 LDR W8, [X24 + 0x18]
	0x025BA41C CMP W20, W8
	0x025BA420 B.CS 0x25BA72C
	0x025BA424 LDR V0, [X31 + 0x1]
	0x025BA428 ADD X8, X24, W20, 0x4, SXTW
	0x025BA42C MOV W20, W26
	0x025BA430 STR V0, [X8 + 0x2]
	0x025BA434 B 0x25BA324
	0x025BA438 MOV X24, X31
	0x025BA43C MOV W25, W31
	0x025BA440 CBZ X23, 0x25BA4A4
	0x025BA444 ADRP X10, 0x1B39000
	0x025BA448 LDR X8, [X23]
	0x025BA44C LDR X10, [X10 + 0xE00]
	0x025BA450 LDRH W9, [X8 + 0x12E]
	0x025BA454 LDR X1, [X10]
	0x025BA458 CBZ X9, 0x25BA47C
	0x025BA45C LDR X10, [X8 + 0xB0]
	0x025BA460 ADD X10, X10, 0x8
	0x025BA464 LDUR X11, [X10 - 0x8]
	0x025BA468 CMP X11, X1
	0x025BA46C B.EQ 0x25BA48C
	0x025BA470 SUBS X9, X9, 0x1
	0x025BA474 ADD X10, X10, 0x10
	0x025BA478 B.NE 0x25BA464
	0x025BA47C MOV X0, X23
	0x025BA480 MOV W2, W31
	0x025BA484 BL 0x1C5C788
	0x025BA488 B 0x25BA498
	0x025BA48C LDRSW X9, [X10]
	0x025BA490 ADD X8, X8, X9, 0x4, LSL
	0x025BA494 ADD X0, X8, 0x138
	0x025BA498 LDP X8, X1, [X0]
	0x025BA49C MOV X0, X23
	0x025BA4A0 BLR X8
	0x025BA4A4 CBNZ X24, 0x25BA830
	0x025BA4A8 CBZ W25, 0x25BA70C
	0x025BA4AC ADRP X8, 0x1B39000
	0x025BA4B0 LDR X8, [X8 + 0x9D0]
	0x025BA4B4 MOV X0, X22
	0x025BA4B8 LDR X1, [X8]
	0x025BA4BC BL 0x1C16E00
	0x025BA4C0 CBZ X0, 0x25BA884
	0x025BA4C4 LDR X21, [X21 + 0x10]
	0x025BA4C8 CBZ X21, 0x25BA81C
	0x025BA4CC LDR X8, [X19 + 0x20]
	0x025BA4D0 MOV X22, X0
	0x025BA4D4 LDR X8, [X8 + 0xC0]
	0x025BA4D8 LDR X1, [X8 + 0xC0]
	0x025BA4DC LDRB W8, [X1 + 0x135]
	0x025BA4E0 TBNZ X8, 0x0, 0x25BA4F0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, [X0+32]
	007 Compare X22, 0
	008 JumpIfNotEqual {67}
	009 Move X21, [X0+16]
	010 Move X19, X0
	011 Compare X21, 0
	012 JumpIfEqual {74}
	013 Move X8, [X1+32]
	014 Move X20, X1
	015 Move X8, [X8+192]
	016 Move X1, [X8]
	017 Move W8, [X1+309]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {25}
	022 Move X0, X1
	023 Call 0x1C5D684
	024 Move X1, X0
	025 Move X8, [X21]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Compare X9, 0
	028 JumpIfEqual {35}
	029 Move X10, [X8+176]
	030 Add X10, X10, 8
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Subtract X9, X9, 1
	034 Add X10, X10, 16
	035 Move W2, 2
	036 Move X0, X21
	037 Call 0x1C5D788
	038 Move W9, [X10]
	039 Add W9, W9, 2
	040 Add X8, X8, W9
	041 Add X0, X8, 312
	042 Move X8, [X0]
	043 Move X1, [X0+8]
	044 Move X0, X21
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move X8, [X20+32]
	047 Move X21, X0
	048 Move X8, [X8+192]
	049 Move X8, [X8+16]
	050 Move W9, [X8+309]
	051 Move TEMP, X9
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfEqual {58}
	055 Move X0, X8
	056 Call 0x1C5D684
	057 Move X8, X0
	058 Move X0, X8
	059 Call 0x1C17F10
	060 Move X8, [X20+32]
	061 Move X1, X21
	062 Move X22, X0
	063 Move X8, [X8+192]
	064 Move X2, [X8+40]
	065 Call 0x2EC85D4, X0, X1
	066 Move [X19+32], X22
	067 Move X0, X22
	068 Move X20, [X31+32]
	069 Move X19, [X31+40]
	070 Move X22, [X31+16]
	071 Move X21, [X31+24]
	072 Move X30, [X31+48]
	073 Return X0
	074 Call 0x1C17F20

Method: System.Collections.ObjectModel.ReadOnlyDictionary`2/ValueCollection<TKey, TValue> get_Values()

Disassembly:
	0x025BA4E4 MOV X0, X1
	0x025BA4E8 BL 0x1C5C684
	0x025BA4EC MOV X1, X0
	0x025BA4F0 LDR X8, [X21]
	0x025BA4F4 LDRH W9, [X8 + 0x12E]
	0x025BA4F8 CBZ X9, 0x25BA51C
	0x025BA4FC LDR X10, [X8 + 0xB0]
	0x025BA500 ADD X10, X10, 0x8
	0x025BA504 LDUR X11, [X10 - 0x8]
	0x025BA508 CMP X11, X1
	0x025BA50C B.EQ 0x25BA52C
	0x025BA510 SUBS X9, X9, 0x1
	0x025BA514 ADD X10, X10, 0x10
	0x025BA518 B.NE 0x25BA504
	0x025BA51C MOV X0, X21
	0x025BA520 MOV W2, W31
	0x025BA524 BL 0x1C5C788
	0x025BA528 B 0x25BA538
	0x025BA52C LDRSW X9, [X10]
	0x025BA530 ADD X8, X8, X9, 0x4, LSL
	0x025BA534 ADD X0, X8, 0x138
	0x025BA538 LDP X8, X1, [X0]
	0x025BA53C MOV X0, X21
	0x025BA540 BLR X8
	0x025BA544 MOV X21, X0
	0x025BA548 CBZ X0, 0x25BA820
	0x025BA54C ADRP X24, 0x1B39000
	0x025BA550 LDR X24, [X24 + 0xE18]
	0x025BA554 LDR X8, [X21]
	0x025BA558 LDR X1, [X24]
	0x025BA55C LDRH W9, [X8 + 0x12E]
	0x025BA560 CBZ X9, 0x25BA584
	0x025BA564 LDR X10, [X8 + 0xB0]
	0x025BA568 ADD X10, X10, 0x8
	0x025BA56C LDUR X11, [X10 - 0x8]
	0x025BA570 CMP X11, X1
	0x025BA574 B.EQ 0x25BA594
	0x025BA578 SUBS X9, X9, 0x1
	0x025BA57C ADD X10, X10, 0x10
	0x025BA580 B.NE 0x25BA56C
	0x025BA584 MOV X0, X21
	0x025BA588 MOV W2, W31
	0x025BA58C BL 0x1C5C788
	0x025BA590 B 0x25BA5A0
	0x025BA594 LDRSW X9, [X10]
	0x025BA598 ADD X8, X8, X9, 0x4, LSL
	0x025BA59C ADD X0, X8, 0x138
	0x025BA5A0 LDP X8, X1, [X0]
	0x025BA5A4 MOV X0, X21
	0x025BA5A8 BLR X8
	0x025BA5AC TBZ X0, 0x0, 0x25BA6A0
	0x025BA5B0 LDR X8, [X19 + 0x20]
	0x025BA5B4 LDR X8, [X8 + 0xC0]
	0x025BA5B8 LDR X1, [X8 + 0xD0]
	0x025BA5BC LDRB W8, [X1 + 0x135]
	0x025BA5C0 TBNZ X8, 0x0, 0x25BA5D0
	0x025BA5C4 MOV X0, X1
	0x025BA5C8 BL 0x1C5C684
	0x025BA5CC MOV X1, X0
	0x025BA5D0 LDR X8, [X21]
	0x025BA5D4 LDRH W9, [X8 + 0x12E]
	0x025BA5D8 CBZ X9, 0x25BA5FC
	0x025BA5DC LDR X10, [X8 + 0xB0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, [X0+40]
	007 Compare X22, 0
	008 JumpIfNotEqual {67}
	009 Move X21, [X0+16]
	010 Move X19, X0
	011 Compare X21, 0
	012 JumpIfEqual {74}
	013 Move X8, [X1+32]
	014 Move X20, X1
	015 Move X8, [X8+192]
	016 Move X1, [X8]
	017 Move W8, [X1+309]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {25}
	022 Move X0, X1
	023 Call 0x1C5D684
	024 Move X1, X0
	025 Move X8, [X21]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Compare X9, 0
	028 JumpIfEqual {35}
	029 Move X10, [X8+176]
	030 Add X10, X10, 8
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Subtract X9, X9, 1
	034 Add X10, X10, 16
	035 Move W2, 3
	036 Move X0, X21
	037 Call 0x1C5D788
	038 Move W9, [X10]
	039 Add W9, W9, 3
	040 Add X8, X8, W9
	041 Add X0, X8, 312
	042 Move X8, [X0]
	043 Move X1, [X0+8]
	044 Move X0, X21
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move X8, [X20+32]
	047 Move X21, X0
	048 Move X8, [X8+192]
	049 Move X8, [X8+48]
	050 Move W9, [X8+309]
	051 Move TEMP, X9
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfEqual {58}
	055 Move X0, X8
	056 Call 0x1C5D684
	057 Move X8, X0
	058 Move X0, X8
	059 Call 0x1C17F10
	060 Move X8, [X20+32]
	061 Move X1, X21
	062 Move X22, X0
	063 Move X8, [X8+192]
	064 Move X2, [X8+72]
	065 Call 0x275BD60, X0, X1
	066 Move [X19+40], X22
	067 Move X0, X22
	068 Move X20, [X31+32]
	069 Move X19, [X31+40]
	070 Move X22, [X31+16]
	071 Move X21, [X31+24]
	072 Move X30, [X31+48]
	073 Return X0
	074 Call 0x1C17F20

Method: System.Boolean ContainsKey(TKey key)

Disassembly:
	0x025BA5E0 ADD X10, X10, 0x8
	0x025BA5E4 LDUR X11, [X10 - 0x8]
	0x025BA5E8 CMP X11, X1
	0x025BA5EC B.EQ 0x25BA60C
	0x025BA5F0 SUBS X9, X9, 0x1
	0x025BA5F4 ADD X10, X10, 0x10
	0x025BA5F8 B.NE 0x25BA5E4
	0x025BA5FC MOV X0, X21
	0x025BA600 MOV W2, W31
	0x025BA604 BL 0x1C5C788
	0x025BA608 B 0x25BA618
	0x025BA60C LDRSW X9, [X10]
	0x025BA610 ADD X8, X8, X9, 0x4, LSL
	0x025BA614 ADD X0, X8, 0x138
	0x025BA618 LDP X8, X1, [X0]
	0x025BA61C MOV X0, X21
	0x025BA620 BLR X8
	0x025BA624 LDR X8, [X19 + 0x20]
	0x025BA628 MOV X2, X0
	0x025BA62C MOV X4, X1
	0x025BA630 LDR X8, [X8 + 0xC0]
	0x025BA634 STP X31, X31, [X31 + 0x10]
	0x025BA638 LDR X3, [X8 + 0x130]
	0x025BA63C ADD X0, X31, 0x10
	0x025BA640 MOV X1, X2
	0x025BA644 MOV X2, X4
	0x025BA648 BL 0x2EE2840
	0x025BA64C LDR V0, [X31 + 0x1]
	0x025BA650 STR V0, [X31]
	0x025BA654 LDR X8, [X19 + 0x20]
	0x025BA658 LDR X8, [X8 + 0xC0]
	0x025BA65C LDR X0, [X8 + 0xA0]
	0x025BA660 ADD X1, X31, 0x0
	0x025BA664 BL 0x1C16E04
	0x025BA668 MOV X23, X0
	0x025BA66C CBZ X0, 0x25BA684
	0x025BA670 LDR X8, [X22]
	0x025BA674 LDR X1, [X8 + 0x40]
	0x025BA678 MOV X0, X23

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, [X0+16]
	005 Compare X20, 0
	006 JumpIfEqual {44}
	007 Move X8, [X2+32]
	008 Move X19, X1
	009 Move X8, [X8+192]
	010 Move X1, [X8]
	011 Move W8, [X1+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {19}
	016 Move X0, X1
	017 Call 0x1C5D684
	018 Move X1, X0
	019 Move X8, [X20]
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Compare X9, 0
	022 JumpIfEqual {29}
	023 Move X10, [X8+176]
	024 Add X10, X10, 8
	025 NotImplemented "Instruction LDUR not yet implemented."
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Subtract X9, X9, 1
	028 Add X10, X10, 16
	029 Move W2, 4
	030 Move X0, X20
	031 Call 0x1C5D788
	032 Move W9, [X10]
	033 Add W9, W9, 4
	034 Add X8, X8, W9
	035 Add X0, X8, 312
	036 Move X3, [X0]
	037 Move X2, [X0+8]
	038 Move X0, X20
	039 Move X1, X19
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 CallNoReturn X3
	044 Call 0x1C17F20

Method: System.Collections.Generic.ICollection`1<TKey> System.Collections.Generic.IDictionary<TKey,TValue>.get_Keys()

Disassembly:
	0x025BA67C BL 0x1C16E00
	0x025BA680 CBZ X0, 0x25BA730
	0x025BA684 LDR W8, [X22 + 0x18]
	0x025BA688 CMP W20, W8

ISIL:
	001 Move X8, [X1+32]
	002 Move X8, [X8+192]
	003 Move X1, [X8+96]
	004 Call 0x25BA3E8, X0
	005 Return X0

Method: System.Boolean TryGetValue(TKey key, out TValue value)

Disassembly:
	0x025BA68C B.CS 0x25BA728
	0x025BA690 ADD X8, X22, W20, 0x3, SXTW
	0x025BA694 ADD W20, W20, 0x1
	0x025BA698 STR X23, [X8 + 0x20]
	0x025BA69C B 0x25BA554
	0x025BA6A0 MOV X20, X31
	0x025BA6A4 CBZ X21, 0x25BA708
	0x025BA6A8 ADRP X10, 0x1B39000
	0x025BA6AC LDR X8, [X21]
	0x025BA6B0 LDR X10, [X10 + 0xE00]
	0x025BA6B4 LDRH W9, [X8 + 0x12E]
	0x025BA6B8 LDR X1, [X10]
	0x025BA6BC CBZ X9, 0x25BA6E0
	0x025BA6C0 LDR X10, [X8 + 0xB0]
	0x025BA6C4 ADD X10, X10, 0x8
	0x025BA6C8 LDUR X11, [X10 - 0x8]
	0x025BA6CC CMP X11, X1
	0x025BA6D0 B.EQ 0x25BA6F0
	0x025BA6D4 SUBS X9, X9, 0x1
	0x025BA6D8 ADD X10, X10, 0x10
	0x025BA6DC B.NE 0x25BA6C8
	0x025BA6E0 MOV X0, X21
	0x025BA6E4 MOV W2, W31
	0x025BA6E8 BL 0x1C5C788
	0x025BA6EC B 0x25BA6FC
	0x025BA6F0 LDRSW X9, [X10]
	0x025BA6F4 ADD X8, X8, X9, 0x4, LSL
	0x025BA6F8 ADD X0, X8, 0x138
	0x025BA6FC LDP X8, X1, [X0]
	0x025BA700 MOV X0, X21
	0x025BA704 BLR X8
	0x025BA708 CBNZ X20, 0x25BA824
	0x025BA70C LDP X20, X19, [X31 + 0x60]
	0x025BA710 LDP X22, X21, [X31 + 0x50]
	0x025BA714 LDP X24, X23, [X31 + 0x40]
	0x025BA718 LDP X26, X25, [X31 + 0x30]
	0x025BA71C LDR X30, [X31 + 0x20]
	0x025BA720 ADD X31, X31, 0x70
	0x025BA724 RET
	0x025BA728 BL 0x1C16F28
	0x025BA72C BL 0x1C16F28

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, [X0+16]
	006 Compare X21, 0
	007 JumpIfEqual {48}
	008 Move X8, [X3+32]
	009 Move X20, X1
	010 Move X19, X2
	011 Move X8, [X8+192]
	012 Move X1, [X8]
	013 Move W8, [X1+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {21}
	018 Move X0, X1
	019 Call 0x1C5D684
	020 Move X1, X0
	021 Move X8, [X21]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Compare X9, 0
	024 JumpIfEqual {31}
	025 Move X10, [X8+176]
	026 Add X10, X10, 8
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Subtract X9, X9, 1
	030 Add X10, X10, 16
	031 Move W2, 6
	032 Move X0, X21
	033 Call 0x1C5D788
	034 Move W9, [X10]
	035 Add W9, W9, 6
	036 Add X8, X8, W9
	037 Add X0, X8, 312
	038 Move X4, [X0]
	039 Move X3, [X0+8]
	040 Move X1, X20
	041 Move X2, X19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X0, X21
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 CallNoReturn X4
	048 Call 0x1C17F20

Method: System.Collections.Generic.ICollection`1<TValue> System.Collections.Generic.IDictionary<TKey,TValue>.get_Values()

Disassembly:
	0x025BA730 BL 0x1C16F44
	0x025BA734 MOV X1, X31
	0x025BA738 BL 0x1C16DEC
	0x025BA73C ADRP X0, 0x1B41000

ISIL:
	001 Move X8, [X1+32]
	002 Move X8, [X8+192]
	003 Move X1, [X8+120]
	004 Call 0x25BA4E4, X0
	005 Return X0

Method: TValue get_Item(TKey key)

Disassembly:
	0x025BA740 LDR X0, [X0 + 0x760]
	0x025BA744 BL 0x1C16D08
	0x025BA748 BL 0x1C16F10
	0x025BA74C MOV X20, X0
	0x025BA750 ADRP X0, 0x1B44000
	0x025BA754 LDR X0, [X0 + 0x130]
	0x025BA758 BL 0x1C16D08
	0x025BA75C MOV X21, X0
	0x025BA760 ADRP X0, 0x1B61000
	0x025BA764 LDR X0, [X0 + 0x670]
	0x025BA768 BL 0x1C16D08
	0x025BA76C MOV X2, X0
	0x025BA770 MOV X0, X20
	0x025BA774 MOV X1, X21
	0x025BA778 MOV X3, X31
	0x025BA77C BL 0x3311888
	0x025BA780 B 0x25BA8B4
	0x025BA784 ADRP X0, 0x1B3E000
	0x025BA788 LDR X0, [X0 + 0x528]
	0x025BA78C BL 0x1C16D08
	0x025BA790 BL 0x1C16F10
	0x025BA794 MOV X20, X0
	0x025BA798 ADRP X0, 0x1B61000
	0x025BA79C LDR X0, [X0 + 0x640]
	0x025BA7A0 BL 0x1C16D08
	0x025BA7A4 MOV X1, X0
	0x025BA7A8 MOV X0, X20
	0x025BA7AC MOV X2, X31
	0x025BA7B0 BL 0x330E100
	0x025BA7B4 B 0x25BA8B4
	0x025BA7B8 ADRP X0, 0x1B41000
	0x025BA7BC LDR X0, [X0 + 0x578]
	0x025BA7C0 BL 0x1C16D08
	0x025BA7C4 BL 0x1C16F10
	0x025BA7C8 MOV X20, X0
	0x025BA7CC ADRP X0, 0x1B62000
	0x025BA7D0 LDR X0, [X0 + 0x308]
	0x025BA7D4 B 0x25BA8A0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, [X0+16]
	005 Compare X20, 0
	006 JumpIfEqual {43}
	007 Move X8, [X2+32]
	008 Move X19, X1
	009 Move X8, [X8+192]
	010 Move X1, [X8]
	011 Move W8, [X1+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {19}
	016 Move X0, X1
	017 Call 0x1C5D684
	018 Move X1, X0
	019 Move X8, [X20]
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Compare X9, 0
	022 JumpIfEqual {29}
	023 Move X10, [X8+176]
	024 Add X10, X10, 8
	025 NotImplemented "Instruction LDUR not yet implemented."
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Subtract X9, X9, 1
	028 Add X10, X10, 16
	029 Move X0, X20
	030 Move W2, W31
	031 Call 0x1C5D788
	032 NotImplemented "Instruction LDRSW not yet implemented."
	033 Add X8, X8, X9
	034 Add X0, X8, 312
	035 Move X3, [X0]
	036 Move X2, [X0+8]
	037 Move X0, X20
	038 Move X1, X19
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 CallNoReturn X3
	043 Call 0x1C17F20

Method: System.Void System.Collections.Generic.IDictionary<TKey,TValue>.Add(TKey key, TValue value)

Disassembly:
	0x025BA7D8 ADRP X0, 0x1B41000
	0x025BA7DC LDR X0, [X0 + 0x578]
	0x025BA7E0 BL 0x1C16D08
	0x025BA7E4 BL 0x1C16F10
	0x025BA7E8 MOV X20, X0
	0x025BA7EC ADRP X0, 0x1B62000
	0x025BA7F0 LDR X0, [X0 + 0x310]
	0x025BA7F4 B 0x25BA8A0
	0x025BA7F8 ADRP X0, 0x1B41000
	0x025BA7FC LDR X0, [X0 + 0x578]
	0x025BA800 BL 0x1C16D08
	0x025BA804 BL 0x1C16F10
	0x025BA808 MOV X20, X0
	0x025BA80C ADRP X0, 0x1B62000
	0x025BA810 LDR X0, [X0 + 0x318]
	0x025BA814 B 0x25BA8A0
	0x025BA818 BL 0x1C16F20
	0x025BA81C BL 0x1C16F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0x1B3A000
	005 Move X0, [X0+2880]
	006 Move X19, X3
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X20, X0
	010 Move X0, 0x1B64000
	011 Move X0, [X0+104]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X20
	015 Move X2, X31
	016 Call NotSupportedException..ctor, X0, X1
	017 Move X0, X20
	018 Move X1, X19
	019 Call 0x1C17DEC

Method: TValue System.Collections.Generic.IDictionary<TKey,TValue>.get_Item(TKey key)

Disassembly:
	0x025BA820 BL 0x1C16F20
	0x025BA824 MOV X0, X20
	0x025BA828 BL 0x1C16F18
	0x025BA82C BL 0x1C16F20
	0x025BA830 MOV X0, X24
	0x025BA834 BL 0x1C16F18
	0x025BA838 B 0x25BA914
	0x025BA83C B 0x25BA9B8
	0x025BA840 B 0x25BA848
	0x025BA844 B 0x25BA848
	0x025BA848 MOV X22, X1
	0x025BA84C MOV X25, X0
	0x025BA850 CMP W22, 0x1
	0x025BA854 B.NE 0x25BA8E8
	0x025BA858 MOV X0, X25
	0x025BA85C BL 0x3EB1AD0
	0x025BA860 MOV X20, X0
	0x025BA864 ADRP X0, 0x1B62000
	0x025BA868 LDR X0, [X0 + 0x320]
	0x025BA86C BL 0x1C16D08
	0x025BA870 LDR X8, [X20]
	0x025BA874 LDR X1, [X8]
	0x025BA878 BL 0x1C17270
	0x025BA87C TBZ X0, 0x0, 0x25BA8C0
	0x025BA880 BL 0x3EB1AE0
	0x025BA884 ADRP X0, 0x1B41000
	0x025BA888 LDR X0, [X0 + 0x578]
	0x025BA88C BL 0x1C16D08
	0x025BA890 BL 0x1C16F10
	0x025BA894 MOV X20, X0
	0x025BA898 ADRP X0, 0x1B62000
	0x025BA89C LDR X0, [X0 + 0x328]
	0x025BA8A0 BL 0x1C16D08
	0x025BA8A4 MOV X1, X0
	0x025BA8A8 MOV X0, X20
	0x025BA8AC MOV X2, X31
	0x025BA8B0 BL 0x3314A68
	0x025BA8B4 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, [X0+16]
	005 Compare X20, 0
	006 JumpIfEqual {43}
	007 Move X8, [X2+32]
	008 Move X19, X1
	009 Move X8, [X8+192]
	010 Move X1, [X8]
	011 Move W8, [X1+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {19}
	016 Move X0, X1
	017 Call 0x1C5D684
	018 Move X1, X0
	019 Move X8, [X20]
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Compare X9, 0
	022 JumpIfEqual {29}
	023 Move X10, [X8+176]
	024 Add X10, X10, 8
	025 NotImplemented "Instruction LDUR not yet implemented."
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Subtract X9, X9, 1
	028 Add X10, X10, 16
	029 Move X0, X20
	030 Move W2, W31
	031 Call 0x1C5D788
	032 NotImplemented "Instruction LDRSW not yet implemented."
	033 Add X8, X8, X9
	034 Add X0, X8, 312
	035 Move X3, [X0]
	036 Move X2, [X0+8]
	037 Move X0, X20
	038 Move X1, X19
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 CallNoReturn X3
	043 Call 0x1C17F20

Method: System.Void System.Collections.Generic.IDictionary<TKey,TValue>.set_Item(TKey key, TValue value)

Disassembly:
	0x025BA8B8 MOV X1, X19
	0x025BA8BC BL 0x1C16DEC
	0x025BA8C0 MOVZ W0, 0x8
	0x025BA8C4 BL 0x3EB1AF0
	0x025BA8C8 LDR X8, [X20]
	0x025BA8CC STR X8, [X0]
	0x025BA8D0 ADRP X1, 0x18FA000
	0x025BA8D4 ADD X1, X1, 0xE58
	0x025BA8D8 MOV X2, X31
	0x025BA8DC BL 0x3EB1B00
	0x025BA8E0 MOV X25, X0
	0x025BA8E4 BL 0x3EB1AE0
	0x025BA8E8 MOV X0, X25
	0x025BA8EC BL 0x1D2C690
	0x025BA8F0 B 0x25BA8F4
	0x025BA8F4 MOV X25, X0
	0x025BA8F8 MOV W20, W26
	0x025BA8FC B 0x25BA918

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0x1B3A000
	005 Move X0, [X0+2880]
	006 Move X19, X3
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X20, X0
	010 Move X0, 0x1B64000
	011 Move X0, [X0+104]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X20
	015 Move X2, X31
	016 Call NotSupportedException..ctor, X0, X1
	017 Move X0, X20
	018 Move X1, X19
	019 Call 0x1C17DEC

Method: System.Int32 get_Count()

Disassembly:
	0x025BA900 B 0x25BA9B8
	0x025BA904 B 0x25BA914
	0x025BA908 B 0x25BA9B8
	0x025BA90C B 0x25BA9B8
	0x025BA910 B 0x25BA9B8
	0x025BA914 MOV X25, X0
	0x025BA918 CMP W1, 0x1
	0x025BA91C B.NE 0x25BA93C
	0x025BA920 MOV X0, X25
	0x025BA924 BL 0x3EB1AD0
	0x025BA928 LDR X24, [X0]
	0x025BA92C BL 0x3EB1AE0
	0x025BA930 MOVZ W25, 0x1
	0x025BA934 CBNZ X23, 0x25BA444
	0x025BA938 B 0x25BA4A4
	0x025BA93C MOV X24, X31
	0x025BA940 B 0x25BA948
	0x025BA944 MOV X25, X0
	0x025BA948 CBZ X23, 0x25BA9AC
	0x025BA94C ADRP X10, 0x1B39000
	0x025BA950 LDR X8, [X23]
	0x025BA954 LDR X10, [X10 + 0xE00]
	0x025BA958 LDRH W9, [X8 + 0x12E]
	0x025BA95C LDR X1, [X10]
	0x025BA960 CBZ X9, 0x25BA984
	0x025BA964 LDR X10, [X8 + 0xB0]
	0x025BA968 ADD X10, X10, 0x8
	0x025BA96C LDUR X11, [X10 - 0x8]
	0x025BA970 CMP X11, X1
	0x025BA974 B.EQ 0x25BA994
	0x025BA978 SUBS X9, X9, 0x1
	0x025BA97C ADD X10, X10, 0x10
	0x025BA980 B.NE 0x25BA96C
	0x025BA984 MOV X0, X23

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, [X0+16]
	004 Compare X19, 0
	005 JumpIfEqual {39}
	006 Move X8, [X1+32]
	007 Move X8, [X8+192]
	008 Move X1, [X8+144]
	009 Move W8, [X1+309]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X1
	015 Call 0x1C5D684
	016 Move X1, X0
	017 Move X8, [X19]
	018 NotImplemented "Instruction LDRH not yet implemented."
	019 Compare X9, 0
	020 JumpIfEqual {27}
	021 Move X10, [X8+176]
	022 Add X10, X10, 8
	023 NotImplemented "Instruction LDUR not yet implemented."
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Subtract X9, X9, 1
	026 Add X10, X10, 16
	027 Move X0, X19
	028 Move W2, W31
	029 Call 0x1C5D788
	030 NotImplemented "Instruction LDRSW not yet implemented."
	031 Add X8, X8, X9
	032 Add X0, X8, 312
	033 Move X2, [X0]
	034 Move X1, [X0+8]
	035 Move X0, X19
	036 Move X30, [X31+16]
	037 Move X19, [X31+24]
	038 CallNoReturn X2
	039 Call 0x1C17F20

Method: System.Boolean System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(System.Collections.Generic.KeyValuePair`2<TKey, TValue> item)

Disassembly:
	0x025BA988 MOV W2, W31
	0x025BA98C BL 0x1C5C788
	0x025BA990 B 0x25BA9A0
	0x025BA994 LDRSW X9, [X10]
	0x025BA998 ADD X8, X8, X9, 0x4, LSL
	0x025BA99C ADD X0, X8, 0x138
	0x025BA9A0 LDP X8, X1, [X0]
	0x025BA9A4 MOV X0, X23
	0x025BA9A8 BLR X8
	0x025BA9AC CBZ X24, 0x25BA8E8
	0x025BA9B0 MOV X0, X24
	0x025BA9B4 BL 0x1C16F18
	0x025BA9B8 MOV X22, X1
	0x025BA9BC MOV X25, X0
	0x025BA9C0 CMP W22, 0x1
	0x025BA9C4 B.NE 0x25BA9DC
	0x025BA9C8 MOV X0, X25
	0x025BA9CC BL 0x3EB1AD0
	0x025BA9D0 LDR X20, [X0]
	0x025BA9D4 BL 0x3EB1AE0
	0x025BA9D8 B 0x25BA6A4
	0x025BA9DC MOV X20, X31
	0x025BA9E0 B 0x25BA9EC
	0x025BA9E4 MOV X22, X1
	0x025BA9E8 MOV X25, X0
	0x025BA9EC CBZ X21, 0x25BAA50
	0x025BA9F0 ADRP X10, 0x1B39000
	0x025BA9F4 LDR X8, [X21]
	0x025BA9F8 LDR X10, [X10 + 0xE00]
	0x025BA9FC LDRH W9, [X8 + 0x12E]
	0x025BAA00 LDR X1, [X10]
	0x025BAA04 CBZ X9, 0x25BAA28
	0x025BAA08 LDR X10, [X8 + 0xB0]
	0x025BAA0C ADD X10, X10, 0x8
	0x025BAA10 LDUR X11, [X10 - 0x8]
	0x025BAA14 CMP X11, X1
	0x025BAA18 B.EQ 0x25BAA38
	0x025BAA1C SUBS X9, X9, 0x1
	0x025BAA20 ADD X10, X10, 0x10
	0x025BAA24 B.NE 0x25BAA10
	0x025BAA28 MOV X0, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, [X0+16]
	006 Compare X21, 0
	007 JumpIfEqual {48}
	008 Move X8, [X3+32]
	009 Move X20, X1
	010 Move X19, X2
	011 Move X8, [X8+192]
	012 Move X1, [X8+144]
	013 Move W8, [X1+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {21}
	018 Move X0, X1
	019 Call 0x1C5D684
	020 Move X1, X0
	021 Move X8, [X21]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Compare X9, 0
	024 JumpIfEqual {31}
	025 Move X10, [X8+176]
	026 Add X10, X10, 8
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Subtract X9, X9, 1
	030 Add X10, X10, 16
	031 Move W2, 4
	032 Move X0, X21
	033 Call 0x1C5D788
	034 Move W9, [X10]
	035 Add W9, W9, 4
	036 Add X8, X8, W9
	037 Add X0, X8, 312
	038 Move X4, [X0]
	039 Move X3, [X0+8]
	040 Move X1, X20
	041 Move X2, X19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X0, X21
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 CallNoReturn X4
	048 Call 0x1C17F20

Method: System.Void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(System.Collections.Generic.KeyValuePair`2<TKey, TValue>[] array, System.Int32 arrayIndex)

Disassembly:
	0x025BAA2C MOV W2, W31
	0x025BAA30 BL 0x1C5C788
	0x025BAA34 B 0x25BAA44
	0x025BAA38 LDRSW X9, [X10]
	0x025BAA3C ADD X8, X8, X9, 0x4, LSL
	0x025BAA40 ADD X0, X8, 0x138
	0x025BAA44 LDP X8, X1, [X0]
	0x025BAA48 MOV X0, X21
	0x025BAA4C BLR X8
	0x025BAA50 CBZ X20, 0x25BA850
	0x025BAA54 MOV X0, X20
	0x025BAA58 BL 0x1C16F18
	0x025BAA5C BL 0x1990590
	0x025BAA60 MOV W0, W31
	0x025BAA64 RET
	0x025BAA68 STP X30, X21, [X31 - 0x20]!
	0x025BAA6C STP X20, X19, [X31 + 0x10]
	0x025BAA70 ADRP X19, 0x1E1F000
	0x025BAA74 LDRB W8, [X19 + 0xF19]
	0x025BAA78 MOV X20, X0
	0x025BAA7C TBNZ X8, 0x0, 0x25BAAA0
	0x025BAA80 ADRP X0, 0x1B40000
	0x025BAA84 LDR X0, [X0 + 0x2F0]
	0x025BAA88 BL 0x1C16CF4
	0x025BAA8C ADRP X0, 0x1B3F000
	0x025BAA90 LDR X0, [X0 + 0xCC0]
	0x025BAA94 BL 0x1C16CF4
	0x025BAA98 MOVZ W8, 0x1
	0x025BAA9C STRB W8, [X19 + 0xF19]
	0x025BAAA0 MOV X19, X20
	0x025BAAA4 LDR X0, [X19 + 0x18]!
	0x025BAAA8 CBNZ X0, 0x25BAB5C
	0x025BAAAC ADRP X21, 0x1B40000
	0x025BAAB0 LDR X0, [X20 + 0x10]
	0x025BAAB4 LDR X21, [X21 + 0x2F0]
	0x025BAAB8 LDR X1, [X21]
	0x025BAABC BL 0x1C16E00
	0x025BAAC0 CBZ X0, 0x25BAB08
	0x025BAAC4 LDR X8, [X0]
	0x025BAAC8 LDR X1, [X21]
	0x025BAACC MOV X20, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, [X0+16]
	006 Compare X21, 0
	007 JumpIfEqual {48}
	008 Move X8, [X3+32]
	009 Move X20, X1
	010 Move W19, W2
	011 Move X8, [X8+192]
	012 Move X1, [X8+144]
	013 Move W8, [X1+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {21}
	018 Move X0, X1
	019 Call 0x1C5D684
	020 Move X1, X0
	021 Move X8, [X21]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Compare X9, 0
	024 JumpIfEqual {31}
	025 Move X10, [X8+176]
	026 Add X10, X10, 8
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Subtract X9, X9, 1
	030 Add X10, X10, 16
	031 Move W2, 5
	032 Move X0, X21
	033 Call 0x1C5D788
	034 Move W9, [X10]
	035 Add W9, W9, 5
	036 Add X8, X8, W9
	037 Add X0, X8, 312
	038 Move X4, [X0]
	039 Move X3, [X0+8]
	040 Move X1, X20
	041 Move W2, W19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X0, X21
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 CallNoReturn X4
	048 Call 0x1C17F20

Method: System.Boolean System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.get_IsReadOnly()

Disassembly:
	0x025BAAD0 LDRH W9, [X8 + 0x12E]
	0x025BAAD4 CBZ X9, 0x25BAAF8

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(System.Collections.Generic.KeyValuePair`2<TKey, TValue> item)

Disassembly:
	0x025BAAD8 LDR X10, [X8 + 0xB0]
	0x025BAADC ADD X10, X10, 0x8
	0x025BAAE0 LDUR X11, [X10 - 0x8]
	0x025BAAE4 CMP X11, X1
	0x025BAAE8 B.EQ 0x25BAB3C
	0x025BAAEC SUBS X9, X9, 0x1
	0x025BAAF0 ADD X10, X10, 0x10
	0x025BAAF4 B.NE 0x25BAAE0
	0x025BAAF8 MOVZ W2, 0x2
	0x025BAAFC MOV X0, X20
	0x025BAB00 BL 0x1C5C788
	0x025BAB04 B 0x25BAB4C
	0x025BAB08 ADRP X8, 0x1B3F000
	0x025BAB0C LDR X8, [X8 + 0xCC0]
	0x025BAB10 LDR X0, [X8]
	0x025BAB14 BL 0x1C16F10
	0x025BAB18 MOV X1, X31
	0x025BAB1C MOV X20, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0x1B3A000
	005 Move X0, [X0+2880]
	006 Move X19, X3
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X20, X0
	010 Move X0, 0x1B64000
	011 Move X0, [X0+104]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X20
	015 Move X2, X31
	016 Call NotSupportedException..ctor, X0, X1
	017 Move X0, X20
	018 Move X1, X19
	019 Call 0x1C17DEC

Method: System.Void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Clear()

Disassembly:
	0x025BAB20 BL 0x33BDD8C
	0x025BAB24 MOV X0, X19
	0x025BAB28 MOV X1, X20
	0x025BAB2C MOV X2, X31
	0x025BAB30 BL 0x1C24138
	0x025BAB34 LDR X0, [X19]
	0x025BAB38 B 0x25BAB5C
	0x025BAB3C LDR W9, [X10]
	0x025BAB40 ADD W9, W9, 0x2
	0x025BAB44 ADD X8, X8, W9, 0x4, SXTW
	0x025BAB48 ADD X0, X8, 0x138
	0x025BAB4C LDP X8, X1, [X0]
	0x025BAB50 MOV X0, X20
	0x025BAB54 BLR X8
	0x025BAB58 STR X0, [X19]
	0x025BAB5C LDP X20, X19, [X31 + 0x10]
	0x025BAB60 LDP X30, X21, [X31], #0x20
	0x025BAB64 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0x1B3A000
	005 Move X0, [X0+2880]
	006 Move X19, X1
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X20, X0
	010 Move X0, 0x1B64000
	011 Move X0, [X0+104]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X20
	015 Move X2, X31
	016 Call NotSupportedException..ctor, X0, X1
	017 Move X0, X20
	018 Move X1, X19
	019 Call 0x1C17DEC

Method: System.Boolean System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(System.Collections.Generic.KeyValuePair`2<TKey, TValue> item)

Disassembly:
	0x025BAB68 STP X30, X21, [X31 - 0x20]!
	0x025BAB6C STP X20, X19, [X31 + 0x10]
	0x025BAB70 MOV X20, X1
	0x025BAB74 MOV X1, X31
	0x025BAB78 MOV X19, X2
	0x025BAB7C MOV X21, X0
	0x025BAB80 BL 0x33BDD8C
	0x025BAB84 CBZ X20, 0x25BAB98
	0x025BAB88 STR X20, [X21 + 0x10]
	0x025BAB8C LDP X20, X19, [X31 + 0x10]
	0x025BAB90 LDP X30, X21, [X31], #0x20
	0x025BAB94 RET
	0x025BAB98 ADRP X0, 0x1B3E000
	0x025BAB9C LDR X0, [X0 + 0x528]
	0x025BABA0 BL 0x1C16D08
	0x025BABA4 BL 0x1C16F10
	0x025BABA8 MOV X20, X0
	0x025BABAC ADRP X0, 0x1B61000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0x1B3A000
	005 Move X0, [X0+2880]
	006 Move X19, X3
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X20, X0
	010 Move X0, 0x1B64000
	011 Move X0, [X0+104]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X20
	015 Move X2, X31
	016 Call NotSupportedException..ctor, X0, X1
	017 Move X0, X20
	018 Move X1, X19
	019 Call 0x1C17DEC

Method: System.Collections.Generic.IEnumerator`1<System.Collections.Generic.KeyValuePair`2<TKey, TValue>> GetEnumerator()

Disassembly:
	0x025BABB0 LDR X0, [X0 + 0x8A8]
	0x025BABB4 BL 0x1C16D08
	0x025BABB8 MOV X1, X0
	0x025BABBC MOV X0, X20
	0x025BABC0 MOV X2, X31
	0x025BABC4 BL 0x330E100
	0x025BABC8 MOV X0, X20
	0x025BABCC MOV X1, X19
	0x025BABD0 BL 0x1C16DEC
	0x025BABD4 STR X30, [X31 - 0x30]!
	0x025BABD8 STP X22, X21, [X31 + 0x10]
	0x025BABDC STP X20, X19, [X31 + 0x20]
	0x025BABE0 LDR X22, [X0 + 0x20]
	0x025BABE4 CBNZ X22, 0x25BACBC
	0x025BABE8 LDR X21, [X0 + 0x10]
	0x025BABEC MOV X19, X0
	0x025BABF0 CBZ X21, 0x25BACD0
	0x025BABF4 LDR X8, [X1 + 0x20]
	0x025BABF8 MOV X20, X1
	0x025BABFC LDR X8, [X8 + 0xC0]
	0x025BAC00 LDR X1, [X8]
	0x025BAC04 LDRB W8, [X1 + 0x135]
	0x025BAC08 TBNZ X8, 0x0, 0x25BAC18
	0x025BAC0C MOV X0, X1
	0x025BAC10 BL 0x1C5C684
	0x025BAC14 MOV X1, X0
	0x025BAC18 LDR X8, [X21]
	0x025BAC1C LDRH W9, [X8 + 0x12E]
	0x025BAC20 CBZ X9, 0x25BAC44
	0x025BAC24 LDR X10, [X8 + 0xB0]
	0x025BAC28 ADD X10, X10, 0x8
	0x025BAC2C LDUR X11, [X10 - 0x8]
	0x025BAC30 CMP X11, X1
	0x025BAC34 B.EQ 0x25BAC54

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, [X0+16]
	004 Compare X19, 0
	005 JumpIfEqual {39}
	006 Move X8, [X1+32]
	007 Move X8, [X8+192]
	008 Move X1, [X8+192]
	009 Move W8, [X1+309]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X1
	015 Call 0x1C5D684
	016 Move X1, X0
	017 Move X8, [X19]
	018 NotImplemented "Instruction LDRH not yet implemented."
	019 Compare X9, 0
	020 JumpIfEqual {27}
	021 Move X10, [X8+176]
	022 Add X10, X10, 8
	023 NotImplemented "Instruction LDUR not yet implemented."
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Subtract X9, X9, 1
	026 Add X10, X10, 16
	027 Move X0, X19
	028 Move W2, W31
	029 Call 0x1C5D788
	030 NotImplemented "Instruction LDRSW not yet implemented."
	031 Add X8, X8, X9
	032 Add X0, X8, 312
	033 Move X2, [X0]
	034 Move X1, [X0+8]
	035 Move X0, X19
	036 Move X30, [X31+16]
	037 Move X19, [X31+24]
	038 CallNoReturn X2
	039 Call 0x1C17F20

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x025BAC38 SUBS X9, X9, 0x1
	0x025BAC3C ADD X10, X10, 0x10
	0x025BAC40 B.NE 0x25BAC2C
	0x025BAC44 MOVZ W2, 0x2
	0x025BAC48 MOV X0, X21
	0x025BAC4C BL 0x1C5C788
	0x025BAC50 B 0x25BAC64
	0x025BAC54 LDR W9, [X10]
	0x025BAC58 ADD W9, W9, 0x2
	0x025BAC5C ADD X8, X8, W9, 0x4, SXTW
	0x025BAC60 ADD X0, X8, 0x138
	0x025BAC64 LDP X8, X1, [X0]
	0x025BAC68 MOV X0, X21
	0x025BAC6C BLR X8
	0x025BAC70 LDR X8, [X20 + 0x20]
	0x025BAC74 MOV X21, X0
	0x025BAC78 LDR X8, [X8 + 0xC0]
	0x025BAC7C LDR X8, [X8 + 0x10]
	0x025BAC80 LDRB W9, [X8 + 0x135]
	0x025BAC84 TBNZ X9, 0x0, 0x25BAC94
	0x025BAC88 MOV X0, X8
	0x025BAC8C BL 0x1C5C684
	0x025BAC90 MOV X8, X0
	0x025BAC94 MOV X0, X8
	0x025BAC98 BL 0x1C16F10
	0x025BAC9C LDR X8, [X20 + 0x20]
	0x025BACA0 MOV X1, X21
	0x025BACA4 MOV X22, X0
	0x025BACA8 LDR X8, [X8 + 0xC0]
	0x025BACAC LDR X2, [X8 + 0x28]
	0x025BACB0 LDR X8, [X2]
	0x025BACB4 BLR X8
	0x025BACB8 STR X22, [X19 + 0x20]
	0x025BACBC MOV X0, X22
	0x025BACC0 LDP X20, X19, [X31 + 0x20]
	0x025BACC4 LDP X22, X21, [X31 + 0x10]
	0x025BACC8 LDR X30, [X31], #0x30
	0x025BACCC RET
	0x025BACD0 BL 0x1C16F20
	0x025BACD4 STR X30, [X31 - 0x30]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1E20000
	005 Move W8, [X20+3862]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x1B42000
	012 Move X0, [X0+3512]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3862], W8
	016 Move X19, [X19+16]
	017 Compare X19, 0
	018 JumpIfEqual {45}
	019 Move X10, 0x1B42000
	020 Move X8, [X19]
	021 Move X10, [X10+3512]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Move X1, [X10]
	024 Compare X9, 0
	025 JumpIfEqual {32}
	026 Move X10, [X8+176]
	027 Add X10, X10, 8
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Subtract X9, X9, 1
	031 Add X10, X10, 16
	032 Move X0, X19
	033 Move W2, W31
	034 Call 0x1C5D788
	035 NotImplemented "Instruction LDRSW not yet implemented."
	036 Add X8, X8, X9
	037 Add X0, X8, 312
	038 Move X2, [X0]
	039 Move X1, [X0+8]
	040 Move X0, X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 CallNoReturn X2
	045 Call 0x1C17F20

Method: System.Boolean IsCompatibleKey(System.Object key)

Disassembly:
	0x025BACD8 STP X22, X21, [X31 + 0x10]
	0x025BACDC STP X20, X19, [X31 + 0x20]
	0x025BACE0 LDR X22, [X0 + 0x28]
	0x025BACE4 CBNZ X22, 0x25BADBC
	0x025BACE8 LDR X21, [X0 + 0x10]
	0x025BACEC MOV X19, X0
	0x025BACF0 CBZ X21, 0x25BADD0
	0x025BACF4 LDR X8, [X1 + 0x20]
	0x025BACF8 MOV X20, X1
	0x025BACFC LDR X8, [X8 + 0xC0]
	0x025BAD00 LDR X1, [X8]
	0x025BAD04 LDRB W8, [X1 + 0x135]
	0x025BAD08 TBNZ X8, 0x0, 0x25BAD18
	0x025BAD0C MOV X0, X1
	0x025BAD10 BL 0x1C5C684
	0x025BAD14 MOV X1, X0
	0x025BAD18 LDR X8, [X21]
	0x025BAD1C LDRH W9, [X8 + 0x12E]
	0x025BAD20 CBZ X9, 0x25BAD44
	0x025BAD24 LDR X10, [X8 + 0xB0]
	0x025BAD28 ADD X10, X10, 0x8
	0x025BAD2C LDUR X11, [X10 - 0x8]
	0x025BAD30 CMP X11, X1
	0x025BAD34 B.EQ 0x25BAD54
	0x025BAD38 SUBS X9, X9, 0x1
	0x025BAD3C ADD X10, X10, 0x10
	0x025BAD40 B.NE 0x25BAD2C
	0x025BAD44 MOVZ W2, 0x3
	0x025BAD48 MOV X0, X21
	0x025BAD4C BL 0x1C5C788
	0x025BAD50 B 0x25BAD64
	0x025BAD54 LDR W9, [X10]
	0x025BAD58 ADD W9, W9, 0x3
	0x025BAD5C ADD X8, X8, W9, 0x4, SXTW
	0x025BAD60 ADD X0, X8, 0x138
	0x025BAD64 LDP X8, X1, [X0]
	0x025BAD68 MOV X0, X21
	0x025BAD6C BLR X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X0, 0
	005 JumpIfEqual {32}
	006 Move X19, X0
	007 Move X0, [X1+32]
	008 Move W8, [X0+309]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {14}
	013 Call 0x1C5D684
	014 Move X8, [X0+192]
	015 Move X1, [X8+80]
	016 Move W8, [X1+309]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {24}
	021 Move X0, X1
	022 Call 0x1C5D684
	023 Move X1, X0
	024 Move X0, X19
	025 Call 0x1C17E00
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction CSET not yet implemented."
	030 Move X30, [X31+32]
	031 Return X0
	032 Move X0, 0x1B3F000
	033 Move X0, [X0+1320]
	034 Move X19, X1
	035 Call 0x1C17D08
	036 Call 0x1C17F10
	037 Move X20, X0
	038 Move X0, 0x1B64000
	039 Move X0, [X0+112]
	040 Call 0x1C17D08
	041 Move X1, X0
	042 Move X0, X20
	043 Move X2, X31
	044 Call ArgumentNullException..ctor, X0, X1
	045 Move X0, X20
	046 Move X1, X19
	047 Call 0x1C17DEC

Method: System.Void System.Collections.IDictionary.Add(System.Object key, System.Object value)

Disassembly:
	0x025BAD70 LDR X8, [X20 + 0x20]
	0x025BAD74 MOV X21, X0
	0x025BAD78 LDR X8, [X8 + 0xC0]
	0x025BAD7C LDR X8, [X8 + 0x30]
	0x025BAD80 LDRB W9, [X8 + 0x135]
	0x025BAD84 TBNZ X9, 0x0, 0x25BAD94
	0x025BAD88 MOV X0, X8
	0x025BAD8C BL 0x1C5C684
	0x025BAD90 MOV X8, X0
	0x025BAD94 MOV X0, X8
	0x025BAD98 BL 0x1C16F10
	0x025BAD9C LDR X8, [X20 + 0x20]
	0x025BADA0 MOV X1, X21
	0x025BADA4 MOV X22, X0
	0x025BADA8 LDR X8, [X8 + 0xC0]
	0x025BADAC LDR X2, [X8 + 0x48]
	0x025BADB0 LDR X8, [X2]
	0x025BADB4 BLR X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0x1B3A000
	005 Move X0, [X0+2880]
	006 Move X19, X3
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X20, X0
	010 Move X0, 0x1B64000
	011 Move X0, [X0+104]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X20
	015 Move X2, X31
	016 Call NotSupportedException..ctor, X0, X1
	017 Move X0, X20
	018 Move X1, X19
	019 Call 0x1C17DEC

Method: System.Boolean System.Collections.IDictionary.Contains(System.Object key)

Disassembly:
	0x025BADB8 STR X22, [X19 + 0x28]
	0x025BADBC MOV X0, X22
	0x025BADC0 LDP X20, X19, [X31 + 0x20]
	0x025BADC4 LDP X22, X21, [X31 + 0x10]
	0x025BADC8 LDR X30, [X31], #0x30
	0x025BADCC RET
	0x025BADD0 BL 0x1C16F20
	0x025BADD4 STP X29, X30, [X31 - 0x40]!
	0x025BADD8 STR X23, [X31 + 0x10]
	0x025BADDC STP X22, X21, [X31 + 0x20]
	0x025BADE0 STP X20, X19, [X31 + 0x30]
	0x025BADE4 ADD X29, X31, 0x0
	0x025BADE8 SUB X31, X31, 0x20
	0x025BADEC MRS X22, 0xC000
	0x025BADF0 LDR X8, [X22 + 0x28]
	0x025BADF4 MOV X21, X2
	0x025BADF8 ADD X9, X31, 0x0
	0x025BADFC STUR X8, [X29 - 0x8]
	0x025BAE00 STUR X1, [X29 - 0x20]
	0x025BAE04 LDR X23, [X2 + 0x20]
	0x025BAE08 LDR X8, [X23 + 0xC0]
	0x025BAE0C LDR X8, [X8 + 0x50]
	0x025BAE10 LDR W2, [X8 + 0xFC]
	0x025BAE14 ADD X10, X2, 0xF
	0x025BAE18 AND X10, X10, 0x1FFFFFFFF
	0x025BAE1C SUB X20, X9, X10
	0x025BAE20 ADD X31, X20, 0x0
	0x025BAE24 LDR W8, [X8 + 0x28]
	0x025BAE28 LDR X19, [X0 + 0x10]
	0x025BAE2C MOV X0, X20
	0x025BAE30 CMP W8, 0x0
	0x025BAE34 SUB X8, X29, 0x20
	0x025BAE38 CSEL X1, X1, X8, LT
	0x025BAE3C BL 0x3EB1AC0
	0x025BAE40 CBZ X19, 0x25BAF14
	0x025BAE44 LDR X8, [X23 + 0xC0]
	0x025BAE48 LDR X1, [X8]
	0x025BAE4C LDRB W9, [X1 + 0x135]
	0x025BAE50 TBNZ X9, 0x0, 0x25BAE68
	0x025BAE54 MOV X0, X1
	0x025BAE58 BL 0x1C5C684
	0x025BAE5C LDR X8, [X21 + 0x20]
	0x025BAE60 MOV X1, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+32]
	007 Move X21, X1
	008 Move X20, X0
	009 Move X0, X21
	010 Move X8, [X8+192]
	011 Move X19, X2
	012 Move X1, [X8+216]
	013 Call 0x25BACD8, X0
	014 Move TEMP, X0
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {40}
	018 Move X8, [X19+32]
	019 Move X8, [X8+192]
	020 Move X22, [X8+80]
	021 Move W8, [X22+309]
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {29}
	026 Move X0, X22
	027 Call 0x1C5D684
	028 Move X22, X0
	029 Compare X21, 0
	030 JumpIfEqual {47}
	031 Move X0, X21
	032 Move X1, X22
	033 Call 0x1C17E00
	034 Move X1, X0
	035 Compare X0, 0
	036 JumpIfNotEqual {48}
	037 Move X0, X21
	038 Move X1, X22
	039 Call 0x1C181E0
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move W0, W31
	045 Move X30, [X31+48]
	046 Return X0
	047 Move X1, X31
	048 Move X8, [X19+32]
	049 Move X0, X20
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X8, [X8+192]
	055 Move X2, [X8+232]
	056 Move X30, [X31+48]
	057 Call 0x25BA5E0, X0, X1
	058 Return X0

Method: System.Collections.IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator()

Disassembly:
	0x025BAE64 LDR X8, [X8 + 0xC0]
	0x025BAE68 LDR X8, [X8 + 0x50]
	0x025BAE6C LDR W8, [X8 + 0x28]
	0x025BAE70 TBNZ X8, 0x1F, 0x25BAE78
	0x025BAE74 LDR X20, [X20]
	0x025BAE78 LDR X8, [X19]
	0x025BAE7C LDRH W9, [X8 + 0x12E]
	0x025BAE80 CBZ X9, 0x25BAEA4
	0x025BAE84 LDR X10, [X8 + 0xB0]
	0x025BAE88 ADD X10, X10, 0x8
	0x025BAE8C LDUR X11, [X10 - 0x8]
	0x025BAE90 CMP X11, X1
	0x025BAE94 B.EQ 0x25BAEB4
	0x025BAE98 SUBS X9, X9, 0x1
	0x025BAE9C ADD X10, X10, 0x10
	0x025BAEA0 B.NE 0x25BAE8C
	0x025BAEA4 MOVZ W2, 0x4
	0x025BAEA8 MOV X0, X19
	0x025BAEAC BL 0x1C5C788
	0x025BAEB0 B 0x25BAEC4
	0x025BAEB4 LDR W9, [X10]
	0x025BAEB8 ADD W9, W9, 0x4
	0x025BAEBC ADD X8, X8, W9, 0x4, SXTW
	0x025BAEC0 ADD X0, X8, 0x138
	0x025BAEC4 STUR X20, [X29 - 0x18]
	0x025BAEC8 LDR X1, [X0 + 0x8]
	0x025BAECC SUB X3, X29, 0x18
	0x025BAED0 SUB X4, X29, 0xC
	0x025BAED4 MOV X2, X19
	0x025BAED8 LDP X0, X8, [X1 + 0x8]
	0x025BAEDC BLR X8
	0x025BAEE0 LDURB W8, [X29 - 0xC]
	0x025BAEE4 LDR X9, [X22 + 0x28]
	0x025BAEE8 LDUR X10, [X29 - 0x8]
	0x025BAEEC CMP W8, 0x0
	0x025BAEF0 CSET W0, NE
	0x025BAEF4 CMP X9, X10
	0x025BAEF8 B.NE 0x25BAF18
	0x025BAEFC ADD X31, X29, 0x0
	0x025BAF00 LDP X20, X19, [X31 + 0x30]
	0x025BAF04 LDP X22, X21, [X31 + 0x20]
	0x025BAF08 LDR X23, [X31 + 0x10]
	0x025BAF0C LDP X29, X30, [X31], #0x40
	0x025BAF10 RET
	0x025BAF14 BL 0x1C16F20
	0x025BAF18 BL 0x3EB1B20
	0x025BAF1C LDR X8, [X1 + 0x20]
	0x025BAF20 LDR X8, [X8 + 0xC0]
	0x025BAF24 LDR X1, [X8 + 0x60]
	0x025BAF28 LDR X2, [X1]
	0x025BAF2C BR X2
	0x025BAF30 STP X29, X30, [X31 - 0x40]!
	0x025BAF34 STP X24, X23, [X31 + 0x10]
	0x025BAF38 STP X22, X21, [X31 + 0x20]
	0x025BAF3C STP X20, X19, [X31 + 0x30]
	0x025BAF40 ADD X29, X31, 0x0
	0x025BAF44 SUB X31, X31, 0x30
	0x025BAF48 MRS X23, 0xC000
	0x025BAF4C LDR X8, [X23 + 0x28]
	0x025BAF50 MOV X19, X2
	0x025BAF54 ADD X9, X31, 0x0
	0x025BAF58 MOV X22, X3
	0x025BAF5C STUR X8, [X29 - 0x8]
	0x025BAF60 STUR X1, [X29 - 0x28]
	0x025BAF64 LDR X24, [X3 + 0x20]
	0x025BAF68 LDR X8, [X24 + 0xC0]
	0x025BAF6C LDR X8, [X8 + 0x50]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X19, 0x1E20000
	008 Move X22, 0x1B3A000
	009 Move W8, [X19+3863]
	010 Move X22, [X22+2072]
	011 Move X20, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x1B3A000
	018 Move X0, [X0+2072]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X19+3863], W8
	022 Move X0, [X21+16]
	023 Move X1, [X22]
	024 Call 0x1C17E00
	025 Compare X0, 0
	026 JumpIfEqual {42}
	027 Move X8, [X0]
	028 Move X1, [X22]
	029 Move X19, X0
	030 NotImplemented "Instruction LDRH not yet implemented."
	031 Compare X9, 0
	032 JumpIfEqual {39}
	033 Move X10, [X8+176]
	034 Add X10, X10, 8
	035 NotImplemented "Instruction LDUR not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Subtract X9, X9, 1
	038 Add X10, X10, 16
	039 Move W2, 6
	040 Move X0, X19
	041 Call 0x1C5D788
	042 Move X1, [X21+16]
	043 Move [X31+16], X31
	044 Move [X31+24], X31
	045 Move X8, [X20+32]
	046 Add X0, X31, 16
	047 Move X8, [X8+192]
	048 Move X2, [X8+248]
	049 Call 0x29B71E8, X0, X1
	050 Move V0, [X31+1]
	051 Add X1, X31, 0
	052 Move [X31], V0
	053 Move X8, [X20+32]
	054 Move X8, [X8+192]
	055 Move X0, [X8+240]
	056 Call 0x1C17E04
	057 Move X20, [X31+64]
	058 Move X19, [X31+72]
	059 Move X22, [X31+48]
	060 Move X21, [X31+56]
	061 Move X30, [X31+32]
	062 Add X31, X31, 80
	063 Return X0
	064 Move W9, [X10]
	065 Add W9, W9, 6
	066 Add X8, X8, W9
	067 Add X0, X8, 312
	068 Move X2, [X0]
	069 Move X1, [X0+8]
	070 Move X0, X19
	071 Move X20, [X31+64]
	072 Move X19, [X31+72]
	073 Move X22, [X31+48]
	074 Move X21, [X31+56]
	075 Move X30, [X31+32]
	076 Add X31, X31, 80
	077 CallNoReturn X2

Method: System.Collections.ICollection System.Collections.IDictionary.get_Keys()

Disassembly:
	0x025BAF70 LDR W2, [X8 + 0xFC]
	0x025BAF74 ADD X10, X2, 0xF
	0x025BAF78 AND X10, X10, 0x1FFFFFFFF
	0x025BAF7C SUB X21, X9, X10

ISIL:
	001 Move X8, [X1+32]
	002 Move X8, [X8+192]
	003 Move X1, [X8+96]
	004 Call 0x25BA3E8, X0
	005 Return X0

Method: System.Void System.Collections.IDictionary.Remove(System.Object key)

Disassembly:
	0x025BAF80 ADD X31, X21, 0x0
	0x025BAF84 LDR W8, [X8 + 0x28]
	0x025BAF88 LDR X20, [X0 + 0x10]
	0x025BAF8C MOV X0, X21
	0x025BAF90 CMP W8, 0x0
	0x025BAF94 SUB X8, X29, 0x28
	0x025BAF98 CSEL X1, X1, X8, LT
	0x025BAF9C BL 0x3EB1AC0
	0x025BAFA0 CBZ X20, 0x25BB074
	0x025BAFA4 LDR X8, [X24 + 0xC0]
	0x025BAFA8 LDR X1, [X8]
	0x025BAFAC LDRB W9, [X1 + 0x135]
	0x025BAFB0 TBNZ X9, 0x0, 0x25BAFC8
	0x025BAFB4 MOV X0, X1
	0x025BAFB8 BL 0x1C5C684
	0x025BAFBC LDR X8, [X22 + 0x20]
	0x025BAFC0 MOV X1, X0
	0x025BAFC4 LDR X8, [X8 + 0xC0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0x1B3A000
	005 Move X0, [X0+2880]
	006 Move X19, X2
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X20, X0
	010 Move X0, 0x1B64000
	011 Move X0, [X0+104]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X20
	015 Move X2, X31
	016 Call NotSupportedException..ctor, X0, X1
	017 Move X0, X20
	018 Move X1, X19
	019 Call 0x1C17DEC

Method: System.Collections.ICollection System.Collections.IDictionary.get_Values()

Disassembly:
	0x025BAFC8 LDR X8, [X8 + 0x50]
	0x025BAFCC LDR W8, [X8 + 0x28]
	0x025BAFD0 TBNZ X8, 0x1F, 0x25BAFD8
	0x025BAFD4 LDR X21, [X21]

ISIL:
	001 Move X8, [X1+32]
	002 Move X8, [X8+192]
	003 Move X1, [X8+120]
	004 Call 0x25BA4E4, X0
	005 Return X0

Method: System.Object System.Collections.IDictionary.get_Item(System.Object key)

Disassembly:
	0x025BAFD8 LDR X8, [X20]
	0x025BAFDC LDRH W9, [X8 + 0x12E]
	0x025BAFE0 CBZ X9, 0x25BB004
	0x025BAFE4 LDR X10, [X8 + 0xB0]
	0x025BAFE8 ADD X10, X10, 0x8
	0x025BAFEC LDUR X11, [X10 - 0x8]
	0x025BAFF0 CMP X11, X1
	0x025BAFF4 B.EQ 0x25BB014
	0x025BAFF8 SUBS X9, X9, 0x1
	0x025BAFFC ADD X10, X10, 0x10
	0x025BB000 B.NE 0x25BAFEC
	0x025BB004 MOVZ W2, 0x6
	0x025BB008 MOV X0, X20
	0x025BB00C BL 0x1C5C788
	0x025BB010 B 0x25BB024
	0x025BB014 LDR W9, [X10]
	0x025BB018 ADD W9, W9, 0x6
	0x025BB01C ADD X8, X8, W9, 0x4, SXTW
	0x025BB020 ADD X0, X8, 0x138
	0x025BB024 STP X21, X19, [X29 - 0x20]
	0x025BB028 LDR X1, [X0 + 0x8]
	0x025BB02C SUB X3, X29, 0x20
	0x025BB030 SUB X4, X29, 0xC
	0x025BB034 MOV X2, X20
	0x025BB038 LDP X0, X8, [X1 + 0x8]
	0x025BB03C BLR X8
	0x025BB040 LDURB W8, [X29 - 0xC]
	0x025BB044 LDR X9, [X23 + 0x28]
	0x025BB048 LDUR X10, [X29 - 0x8]
	0x025BB04C CMP W8, 0x0
	0x025BB050 CSET W0, NE
	0x025BB054 CMP X9, X10
	0x025BB058 B.NE 0x25BB078
	0x025BB05C ADD X31, X29, 0x0
	0x025BB060 LDP X20, X19, [X31 + 0x30]
	0x025BB064 LDP X22, X21, [X31 + 0x20]
	0x025BB068 LDP X24, X23, [X31 + 0x10]
	0x025BB06C LDP X29, X30, [X31], #0x40
	0x025BB070 RET
	0x025BB074 BL 0x1C16F20
	0x025BB078 BL 0x3EB1B20
	0x025BB07C LDR X8, [X1 + 0x20]
	0x025BB080 LDR X8, [X8 + 0xC0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+32]
	007 Move X21, X1
	008 Move X20, X0
	009 Move X0, X21
	010 Move X8, [X8+192]
	011 Move X19, X2
	012 Move X1, [X8+216]
	013 Call 0x25BACD8, X0
	014 Move TEMP, X0
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {40}
	018 Move X8, [X19+32]
	019 Move X8, [X8+192]
	020 Move X22, [X8+80]
	021 Move W8, [X22+309]
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {29}
	026 Move X0, X22
	027 Call 0x1C5D684
	028 Move X22, X0
	029 Compare X21, 0
	030 JumpIfEqual {47}
	031 Move X0, X21
	032 Move X1, X22
	033 Call 0x1C17E00
	034 Move X1, X0
	035 Compare X0, 0
	036 JumpIfNotEqual {48}
	037 Move X0, X21
	038 Move X1, X22
	039 Call 0x1C181E0
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X0, X31
	045 Move X30, [X31+48]
	046 Return X0
	047 Move X1, X31
	048 Move X8, [X19+32]
	049 Move X0, X20
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X8, [X8+192]
	055 Move X2, [X8+256]
	056 Move X30, [X31+48]
	057 Call 0x25BA740, X0, X1
	058 Return X0

Method: System.Void System.Collections.IDictionary.set_Item(System.Object key, System.Object value)

Disassembly:
	0x025BB084 LDR X1, [X8 + 0x78]
	0x025BB088 LDR X2, [X1]
	0x025BB08C BR X2
	0x025BB090 STP X29, X30, [X31 - 0x50]!
	0x025BB094 STP X26, X25, [X31 + 0x10]
	0x025BB098 STP X24, X23, [X31 + 0x20]
	0x025BB09C STP X22, X21, [X31 + 0x30]
	0x025BB0A0 STP X20, X19, [X31 + 0x40]
	0x025BB0A4 ADD X29, X31, 0x0
	0x025BB0A8 SUB X31, X31, 0x20
	0x025BB0AC MRS X25, 0xC000
	0x025BB0B0 LDR X8, [X25 + 0x28]
	0x025BB0B4 MOV X19, X2
	0x025BB0B8 MOV X24, X3
	0x025BB0BC STUR X8, [X29 - 0x8]
	0x025BB0C0 STUR X1, [X29 - 0x20]
	0x025BB0C4 LDR X26, [X3 + 0x20]
	0x025BB0C8 LDR X8, [X26 + 0xC0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0x1B39000
	005 Move X0, [X0+2880]
	006 Move X19, X3
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X20, X0
	010 Move X0, 0x1B63000
	011 Move X0, [X0+104]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X20
	015 Move X2, X31
	016 Call NotSupportedException..ctor, X0, X1
	017 Move X0, X20
	018 Move X1, X19
	019 Call 0x1C17DEC

Method: System.Void System.Collections.ICollection.CopyTo(System.Array array, System.Int32 index)

Disassembly:
	0x025BB0CC LDR X9, [X8 + 0x50]
	0x025BB0D0 LDR X8, [X8 + 0x88]
	0x025BB0D4 LDR W2, [X9 + 0xFC]
	0x025BB0D8 LDR W20, [X8 + 0xFC]
	0x025BB0DC ADD X8, X31, 0x0
	0x025BB0E0 ADD X10, X2, 0xF
	0x025BB0E4 AND X10, X10, 0x1FFFFFFFF
	0x025BB0E8 SUB X23, X8, X10
	0x025BB0EC ADD X31, X23, 0x0
	0x025BB0F0 ADD X10, X20, 0xF
	0x025BB0F4 ADD X8, X31, 0x0
	0x025BB0F8 AND X10, X10, 0x1FFFFFFFF
	0x025BB0FC SUB X21, X8, X10
	0x025BB100 ADD X31, X21, 0x0
	0x025BB104 LDR W8, [X9 + 0x28]
	0x025BB108 LDR X22, [X0 + 0x10]
	0x025BB10C MOV X0, X23
	0x025BB110 CMP W8, 0x0
	0x025BB114 SUB X8, X29, 0x20
	0x025BB118 CSEL X1, X1, X8, LT
	0x025BB11C BL 0x3EB1AC0
	0x025BB120 CBZ X22, 0x25BB1F8
	0x025BB124 LDR X8, [X26 + 0xC0]
	0x025BB128 LDR X1, [X8]
	0x025BB12C LDRB W9, [X1 + 0x135]
	0x025BB130 TBNZ X9, 0x0, 0x25BB148
	0x025BB134 MOV X0, X1
	0x025BB138 BL 0x1C5C684
	0x025BB13C LDR X8, [X24 + 0x20]
	0x025BB140 MOV X1, X0
	0x025BB144 LDR X8, [X8 + 0xC0]
	0x025BB148 LDR X8, [X8 + 0x50]
	0x025BB14C LDR W8, [X8 + 0x28]
	0x025BB150 TBNZ X8, 0x1F, 0x25BB158
	0x025BB154 LDR X23, [X23]
	0x025BB158 LDR X8, [X22]
	0x025BB15C LDRH W9, [X8 + 0x12E]
	0x025BB160 CBZ X9, 0x25BB184
	0x025BB164 LDR X10, [X8 + 0xB0]
	0x025BB168 ADD X10, X10, 0x8
	0x025BB16C LDUR X11, [X10 - 0x8]
	0x025BB170 CMP X11, X1
	0x025BB174 B.EQ 0x25BB194
	0x025BB178 SUBS X9, X9, 0x1
	0x025BB17C ADD X10, X10, 0x10
	0x025BB180 B.NE 0x25BB16C
	0x025BB184 MOV X0, X22
	0x025BB188 MOV W2, W31
	0x025BB18C BL 0x1C5C788
	0x025BB190 B 0x25BB1A0
	0x025BB194 LDRSW X9, [X10]
	0x025BB198 ADD X8, X8, X9, 0x4, LSL
	0x025BB19C ADD X0, X8, 0x138
	0x025BB1A0 STP X23, X21, [X29 - 0x18]
	0x025BB1A4 LDR X1, [X0 + 0x8]
	0x025BB1A8 SUB X3, X29, 0x18
	0x025BB1AC MOV X2, X22
	0x025BB1B0 MOV X4, X21
	0x025BB1B4 LDP X0, X8, [X1 + 0x8]
	0x025BB1B8 BLR X8
	0x025BB1BC MOV X0, X19
	0x025BB1C0 MOV X1, X21
	0x025BB1C4 MOV X2, X20
	0x025BB1C8 BL 0x3EB1AC0
	0x025BB1CC LDR X8, [X25 + 0x28]
	0x025BB1D0 LDUR X9, [X29 - 0x8]
	0x025BB1D4 CMP X8, X9
	0x025BB1D8 B.NE 0x25BB1FC
	0x025BB1DC ADD X31, X29, 0x0
	0x025BB1E0 LDP X20, X19, [X31 + 0x40]
	0x025BB1E4 LDP X22, X21, [X31 + 0x30]
	0x025BB1E8 LDP X24, X23, [X31 + 0x20]
	0x025BB1EC LDP X26, X25, [X31 + 0x10]
	0x025BB1F0 LDP X29, X30, [X31], #0x50
	0x025BB1F4 RET
	0x025BB1F8 BL 0x1C16F20
	0x025BB1FC BL 0x3EB1B20
	0x025BB200 STR X30, [X31 - 0x20]!
	0x025BB204 STP X20, X19, [X31 + 0x10]
	0x025BB208 ADRP X0, 0x1B38000
	0x025BB20C LDR X0, [X0 + 0xB40]
	0x025BB210 MOV X19, X3
	0x025BB214 BL 0x1C16D08
	0x025BB218 BL 0x1C16F10
	0x025BB21C MOV X20, X0
	0x025BB220 ADRP X0, 0x1B62000
	0x025BB224 LDR X0, [X0 + 0x68]
	0x025BB228 BL 0x1C16D08
	0x025BB22C MOV X1, X0
	0x025BB230 MOV X0, X20
	0x025BB234 MOV X2, X31
	0x025BB238 BL 0x3379A44
	0x025BB23C MOV X0, X20
	0x025BB240 MOV X1, X19
	0x025BB244 BL 0x1C16DEC
	0x025BB248 STP X29, X30, [X31 - 0x50]!
	0x025BB24C STP X26, X25, [X31 + 0x10]
	0x025BB250 STP X24, X23, [X31 + 0x20]
	0x025BB254 STP X22, X21, [X31 + 0x30]
	0x025BB258 STP X20, X19, [X31 + 0x40]
	0x025BB25C ADD X29, X31, 0x0
	0x025BB260 SUB X31, X31, 0x20
	0x025BB264 MRS X25, 0xC000
	0x025BB268 LDR X8, [X25 + 0x28]
	0x025BB26C MOV X19, X2
	0x025BB270 MOV X24, X3
	0x025BB274 STUR X8, [X29 - 0x8]
	0x025BB278 STUR X1, [X29 - 0x20]
	0x025BB27C LDR X26, [X3 + 0x20]
	0x025BB280 LDR X8, [X26 + 0xC0]
	0x025BB284 LDR X9, [X8 + 0x50]
	0x025BB288 LDR X8, [X8 + 0x88]
	0x025BB28C LDR W2, [X9 + 0xFC]
	0x025BB290 LDR W20, [X8 + 0xFC]
	0x025BB294 ADD X8, X31, 0x0
	0x025BB298 ADD X10, X2, 0xF
	0x025BB29C AND X10, X10, 0x1FFFFFFFF
	0x025BB2A0 SUB X23, X8, X10
	0x025BB2A4 ADD X31, X23, 0x0
	0x025BB2A8 ADD X10, X20, 0xF
	0x025BB2AC ADD X8, X31, 0x0
	0x025BB2B0 AND X10, X10, 0x1FFFFFFFF
	0x025BB2B4 SUB X21, X8, X10
	0x025BB2B8 ADD X31, X21, 0x0
	0x025BB2BC LDR W8, [X9 + 0x28]
	0x025BB2C0 LDR X22, [X0 + 0x10]
	0x025BB2C4 MOV X0, X23
	0x025BB2C8 CMP W8, 0x0
	0x025BB2CC SUB X8, X29, 0x20
	0x025BB2D0 CSEL X1, X1, X8, LT
	0x025BB2D4 BL 0x3EB1AC0
	0x025BB2D8 CBZ X22, 0x25BB3B0
	0x025BB2DC LDR X8, [X26 + 0xC0]
	0x025BB2E0 LDR X1, [X8]
	0x025BB2E4 LDRB W9, [X1 + 0x135]
	0x025BB2E8 TBNZ X9, 0x0, 0x25BB300
	0x025BB2EC MOV X0, X1
	0x025BB2F0 BL 0x1C5C684
	0x025BB2F4 LDR X8, [X24 + 0x20]
	0x025BB2F8 MOV X1, X0
	0x025BB2FC LDR X8, [X8 + 0xC0]
	0x025BB300 LDR X8, [X8 + 0x50]
	0x025BB304 LDR W8, [X8 + 0x28]
	0x025BB308 TBNZ X8, 0x1F, 0x25BB310
	0x025BB30C LDR X23, [X23]
	0x025BB310 LDR X8, [X22]
	0x025BB314 LDRH W9, [X8 + 0x12E]
	0x025BB318 CBZ X9, 0x25BB33C
	0x025BB31C LDR X10, [X8 + 0xB0]
	0x025BB320 ADD X10, X10, 0x8
	0x025BB324 LDUR X11, [X10 - 0x8]
	0x025BB328 CMP X11, X1
	0x025BB32C B.EQ 0x25BB34C
	0x025BB330 SUBS X9, X9, 0x1
	0x025BB334 ADD X10, X10, 0x10
	0x025BB338 B.NE 0x25BB324
	0x025BB33C MOV X0, X22
	0x025BB340 MOV W2, W31
	0x025BB344 BL 0x1C5C788
	0x025BB348 B 0x25BB358
	0x025BB34C LDRSW X9, [X10]
	0x025BB350 ADD X8, X8, X9, 0x4, LSL
	0x025BB354 ADD X0, X8, 0x138
	0x025BB358 STP X23, X21, [X29 - 0x18]
	0x025BB35C LDR X1, [X0 + 0x8]
	0x025BB360 SUB X3, X29, 0x18
	0x025BB364 MOV X2, X22
	0x025BB368 MOV X4, X21
	0x025BB36C LDP X0, X8, [X1 + 0x8]
	0x025BB370 BLR X8
	0x025BB374 MOV X0, X19
	0x025BB378 MOV X1, X21
	0x025BB37C MOV X2, X20
	0x025BB380 BL 0x3EB1AC0
	0x025BB384 LDR X8, [X25 + 0x28]
	0x025BB388 LDUR X9, [X29 - 0x8]
	0x025BB38C CMP X8, X9
	0x025BB390 B.NE 0x25BB3B4
	0x025BB394 ADD X31, X29, 0x0
	0x025BB398 LDP X20, X19, [X31 + 0x40]
	0x025BB39C LDP X22, X21, [X31 + 0x30]
	0x025BB3A0 LDP X24, X23, [X31 + 0x20]
	0x025BB3A4 LDP X26, X25, [X31 + 0x10]
	0x025BB3A8 LDP X29, X30, [X31], #0x50
	0x025BB3AC RET
	0x025BB3B0 BL 0x1C16F20
	0x025BB3B4 BL 0x3EB1B20
	0x025BB3B8 STR X30, [X31 - 0x20]!
	0x025BB3BC STP X20, X19, [X31 + 0x10]
	0x025BB3C0 ADRP X0, 0x1B38000
	0x025BB3C4 LDR X0, [X0 + 0xB40]
	0x025BB3C8 MOV X19, X3
	0x025BB3CC BL 0x1C16D08
	0x025BB3D0 BL 0x1C16F10
	0x025BB3D4 MOV X20, X0
	0x025BB3D8 ADRP X0, 0x1B62000
	0x025BB3DC LDR X0, [X0 + 0x68]
	0x025BB3E0 BL 0x1C16D08
	0x025BB3E4 MOV X1, X0
	0x025BB3E8 MOV X0, X20
	0x025BB3EC MOV X2, X31
	0x025BB3F0 BL 0x3379A44
	0x025BB3F4 MOV X0, X20
	0x025BB3F8 MOV X1, X19
	0x025BB3FC BL 0x1C16DEC
	0x025BB400 STP X30, X19, [X31 - 0x10]!
	0x025BB404 LDR X19, [X0 + 0x10]
	0x025BB408 CBZ X19, 0x25BB484
	0x025BB40C LDR X8, [X1 + 0x20]
	0x025BB410 LDR X8, [X8 + 0xC0]
	0x025BB414 LDR X1, [X8 + 0x90]
	0x025BB418 LDRB W8, [X1 + 0x135]
	0x025BB41C TBNZ X8, 0x0, 0x25BB42C
	0x025BB420 MOV X0, X1
	0x025BB424 BL 0x1C5C684
	0x025BB428 MOV X1, X0
	0x025BB42C LDR X8, [X19]
	0x025BB430 LDRH W9, [X8 + 0x12E]
	0x025BB434 CBZ X9, 0x25BB458
	0x025BB438 LDR X10, [X8 + 0xB0]
	0x025BB43C ADD X10, X10, 0x8
	0x025BB440 LDUR X11, [X10 - 0x8]
	0x025BB444 CMP X11, X1
	0x025BB448 B.EQ 0x25BB468
	0x025BB44C SUBS X9, X9, 0x1
	0x025BB450 ADD X10, X10, 0x10
	0x025BB454 B.NE 0x25BB440
	0x025BB458 MOV X0, X19
	0x025BB45C MOV W2, W31
	0x025BB460 BL 0x1C5C788
	0x025BB464 B 0x25BB474
	0x025BB468 LDRSW X9, [X10]
	0x025BB46C ADD X8, X8, X9, 0x4, LSL
	0x025BB470 ADD X0, X8, 0x138
	0x025BB474 LDP X2, X1, [X0]
	0x025BB478 MOV X0, X19
	0x025BB47C LDP X30, X19, [X31], #0x10
	0x025BB480 BR X2
	0x025BB484 BL 0x1C16F20
	0x025BB488 STP X29, X30, [X31 - 0x30]!
	0x025BB48C STP X22, X21, [X31 + 0x10]
	0x025BB490 STP X20, X19, [X31 + 0x20]
	0x025BB494 ADD X29, X31, 0x0
	0x025BB498 SUB X31, X31, 0x20
	0x025BB49C MRS X21, 0xC000
	0x025BB4A0 LDR X8, [X21 + 0x28]
	0x025BB4A4 STUR X8, [X29 - 0x8]
	0x025BB4A8 LDR X22, [X2 + 0x20]
	0x025BB4AC LDR X8, [X22 + 0xC0]
	0x025BB4B0 LDR X8, [X8 + 0xA0]
	0x025BB4B4 LDR W2, [X8 + 0xFC]
	0x025BB4B8 ADD X8, X31, 0x0
	0x025BB4BC ADD X9, X2, 0xF
	0x025BB4C0 AND X9, X9, 0x1FFFFFFFF
	0x025BB4C4 SUB X20, X8, X9
	0x025BB4C8 ADD X31, X20, 0x0
	0x025BB4CC LDR X19, [X0 + 0x10]
	0x025BB4D0 MOV X0, X20
	0x025BB4D4 BL 0x3EB1AC0
	0x025BB4D8 CBZ X19, 0x25BB590
	0x025BB4DC LDR X8, [X22 + 0xC0]
	0x025BB4E0 LDR X1, [X8 + 0x90]
	0x025BB4E4 LDRB W8, [X1 + 0x135]
	0x025BB4E8 TBNZ X8, 0x0, 0x25BB4F8
	0x025BB4EC MOV X0, X1
	0x025BB4F0 BL 0x1C5C684
	0x025BB4F4 MOV X1, X0
	0x025BB4F8 LDR X8, [X19]
	0x025BB4FC LDRH W9, [X8 + 0x12E]
	0x025BB500 CBZ X9, 0x25BB524
	0x025BB504 LDR X10, [X8 + 0xB0]
	0x025BB508 ADD X10, X10, 0x8
	0x025BB50C LDUR X11, [X10 - 0x8]
	0x025BB510 CMP X11, X1
	0x025BB514 B.EQ 0x25BB534
	0x025BB518 SUBS X9, X9, 0x1
	0x025BB51C ADD X10, X10, 0x10
	0x025BB520 B.NE 0x25BB50C
	0x025BB524 MOVZ W2, 0x4
	0x025BB528 MOV X0, X19
	0x025BB52C BL 0x1C5C788
	0x025BB530 B 0x25BB544
	0x025BB534 LDR W9, [X10]
	0x025BB538 ADD W9, W9, 0x4
	0x025BB53C ADD X8, X8, W9, 0x4, SXTW
	0x025BB540 ADD X0, X8, 0x138
	0x025BB544 STUR X20, [X29 - 0x18]
	0x025BB548 LDR X1, [X0 + 0x8]
	0x025BB54C SUB X3, X29, 0x18
	0x025BB550 SUB X4, X29, 0xC
	0x025BB554 MOV X2, X19
	0x025BB558 LDP X0, X8, [X1 + 0x8]
	0x025BB55C BLR X8
	0x025BB560 LDURB W8, [X29 - 0xC]
	0x025BB564 LDR X9, [X21 + 0x28]
	0x025BB568 LDUR X10, [X29 - 0x8]
	0x025BB56C CMP W8, 0x0
	0x025BB570 CSET W0, NE
	0x025BB574 CMP X9, X10
	0x025BB578 B.NE 0x25BB594
	0x025BB57C ADD X31, X29, 0x0
	0x025BB580 LDP X20, X19, [X31 + 0x20]
	0x025BB584 LDP X22, X21, [X31 + 0x10]
	0x025BB588 LDP X29, X30, [X31], #0x30
	0x025BB58C RET
	0x025BB590 BL 0x1C16F20
	0x025BB594 BL 0x3EB1B20
	0x025BB598 STP X30, X21, [X31 - 0x20]!
	0x025BB59C STP X20, X19, [X31 + 0x10]
	0x025BB5A0 LDR X21, [X0 + 0x10]
	0x025BB5A4 CBZ X21, 0x25BB638
	0x025BB5A8 LDR X8, [X3 + 0x20]
	0x025BB5AC MOV X20, X1
	0x025BB5B0 MOV W19, W2
	0x025BB5B4 LDR X8, [X8 + 0xC0]
	0x025BB5B8 LDR X1, [X8 + 0x90]
	0x025BB5BC LDRB W8, [X1 + 0x135]
	0x025BB5C0 TBNZ X8, 0x0, 0x25BB5D0
	0x025BB5C4 MOV X0, X1
	0x025BB5C8 BL 0x1C5C684
	0x025BB5CC MOV X1, X0
	0x025BB5D0 LDR X8, [X21]
	0x025BB5D4 LDRH W9, [X8 + 0x12E]
	0x025BB5D8 CBZ X9, 0x25BB5FC
	0x025BB5DC LDR X10, [X8 + 0xB0]
	0x025BB5E0 ADD X10, X10, 0x8
	0x025BB5E4 LDUR X11, [X10 - 0x8]
	0x025BB5E8 CMP X11, X1
	0x025BB5EC B.EQ 0x25BB60C
	0x025BB5F0 SUBS X9, X9, 0x1
	0x025BB5F4 ADD X10, X10, 0x10
	0x025BB5F8 B.NE 0x25BB5E4
	0x025BB5FC MOVZ W2, 0x5
	0x025BB600 MOV X0, X21
	0x025BB604 BL 0x1C5C788
	0x025BB608 B 0x25BB61C
	0x025BB60C LDR W9, [X10]
	0x025BB610 ADD W9, W9, 0x5
	0x025BB614 ADD X8, X8, W9, 0x4, SXTW
	0x025BB618 ADD X0, X8, 0x138
	0x025BB61C LDP X4, X3, [X0]
	0x025BB620 MOV X1, X20
	0x025BB624 MOV W2, W19
	0x025BB628 LDP X20, X19, [X31 + 0x10]
	0x025BB62C MOV X0, X21
	0x025BB630 LDP X30, X21, [X31], #0x20
	0x025BB634 BR X4
	0x025BB638 BL 0x1C16F20
	0x025BB63C MOVZ W0, 0x1
	0x025BB640 RET
	0x025BB644 STR X30, [X31 - 0x20]!
	0x025BB648 STP X20, X19, [X31 + 0x10]
	0x025BB64C ADRP X0, 0x1B38000
	0x025BB650 LDR X0, [X0 + 0xB40]
	0x025BB654 MOV X19, X2
	0x025BB658 BL 0x1C16D08
	0x025BB65C BL 0x1C16F10
	0x025BB660 MOV X20, X0
	0x025BB664 ADRP X0, 0x1B62000
	0x025BB668 LDR X0, [X0 + 0x68]
	0x025BB66C BL 0x1C16D08
	0x025BB670 MOV X1, X0
	0x025BB674 MOV X0, X20
	0x025BB678 MOV X2, X31
	0x025BB67C BL 0x3379A44
	0x025BB680 MOV X0, X20
	0x025BB684 MOV X1, X19
	0x025BB688 BL 0x1C16DEC
	0x025BB68C STR X30, [X31 - 0x20]!
	0x025BB690 STP X20, X19, [X31 + 0x10]
	0x025BB694 ADRP X0, 0x1B38000
	0x025BB698 LDR X0, [X0 + 0xB40]
	0x025BB69C MOV X19, X1
	0x025BB6A0 BL 0x1C16D08
	0x025BB6A4 BL 0x1C16F10
	0x025BB6A8 MOV X20, X0
	0x025BB6AC ADRP X0, 0x1B62000
	0x025BB6B0 LDR X0, [X0 + 0x68]
	0x025BB6B4 BL 0x1C16D08
	0x025BB6B8 MOV X1, X0
	0x025BB6BC MOV X0, X20
	0x025BB6C0 MOV X2, X31
	0x025BB6C4 BL 0x3379A44
	0x025BB6C8 MOV X0, X20
	0x025BB6CC MOV X1, X19
	0x025BB6D0 BL 0x1C16DEC
	0x025BB6D4 STR X30, [X31 - 0x20]!
	0x025BB6D8 STP X20, X19, [X31 + 0x10]
	0x025BB6DC ADRP X0, 0x1B38000
	0x025BB6E0 LDR X0, [X0 + 0xB40]
	0x025BB6E4 MOV X19, X2
	0x025BB6E8 BL 0x1C16D08
	0x025BB6EC BL 0x1C16F10
	0x025BB6F0 MOV X20, X0
	0x025BB6F4 ADRP X0, 0x1B62000
	0x025BB6F8 LDR X0, [X0 + 0x68]
	0x025BB6FC BL 0x1C16D08
	0x025BB700 MOV X1, X0
	0x025BB704 MOV X0, X20
	0x025BB708 MOV X2, X31
	0x025BB70C BL 0x3379A44
	0x025BB710 MOV X0, X20
	0x025BB714 MOV X1, X19
	0x025BB718 BL 0x1C16DEC
	0x025BB71C STP X30, X19, [X31 - 0x10]!
	0x025BB720 LDR X19, [X0 + 0x10]
	0x025BB724 CBZ X19, 0x25BB7A0
	0x025BB728 LDR X8, [X1 + 0x20]
	0x025BB72C LDR X8, [X8 + 0xC0]
	0x025BB730 LDR X1, [X8 + 0xC0]
	0x025BB734 LDRB W8, [X1 + 0x135]
	0x025BB738 TBNZ X8, 0x0, 0x25BB748
	0x025BB73C MOV X0, X1
	0x025BB740 BL 0x1C5C684
	0x025BB744 MOV X1, X0
	0x025BB748 LDR X8, [X19]
	0x025BB74C LDRH W9, [X8 + 0x12E]
	0x025BB750 CBZ X9, 0x25BB774
	0x025BB754 LDR X10, [X8 + 0xB0]
	0x025BB758 ADD X10, X10, 0x8
	0x025BB75C LDUR X11, [X10 - 0x8]
	0x025BB760 CMP X11, X1
	0x025BB764 B.EQ 0x25BB784
	0x025BB768 SUBS X9, X9, 0x1
	0x025BB76C ADD X10, X10, 0x10
	0x025BB770 B.NE 0x25BB75C
	0x025BB774 MOV X0, X19
	0x025BB778 MOV W2, W31
	0x025BB77C BL 0x1C5C788
	0x025BB780 B 0x25BB790
	0x025BB784 LDRSW X9, [X10]
	0x025BB788 ADD X8, X8, X9, 0x4, LSL
	0x025BB78C ADD X0, X8, 0x138
	0x025BB790 LDP X2, X1, [X0]
	0x025BB794 MOV X0, X19
	0x025BB798 LDP X30, X19, [X31], #0x10
	0x025BB79C BR X2
	0x025BB7A0 BL 0x1C16F20
	0x025BB7A4 STR X30, [X31 - 0x20]!
	0x025BB7A8 STP X20, X19, [X31 + 0x10]
	0x025BB7AC ADRP X20, 0x1E1E000
	0x025BB7B0 LDRB W8, [X20 + 0xF1A]
	0x025BB7B4 MOV X19, X0
	0x025BB7B8 TBNZ X8, 0x0, 0x25BB7D0
	0x025BB7BC ADRP X0, 0x1B40000
	0x025BB7C0 LDR X0, [X0 + 0xDB8]
	0x025BB7C4 BL 0x1C16CF4
	0x025BB7C8 MOVZ W8, 0x1
	0x025BB7CC STRB W8, [X20 + 0xF1A]
	0x025BB7D0 LDR X19, [X19 + 0x10]
	0x025BB7D4 CBZ X19, 0x25BB840
	0x025BB7D8 ADRP X10, 0x1B40000
	0x025BB7DC LDR X8, [X19]
	0x025BB7E0 LDR X10, [X10 + 0xDB8]
	0x025BB7E4 LDRH W9, [X8 + 0x12E]
	0x025BB7E8 LDR X1, [X10]
	0x025BB7EC CBZ X9, 0x25BB810
	0x025BB7F0 LDR X10, [X8 + 0xB0]
	0x025BB7F4 ADD X10, X10, 0x8
	0x025BB7F8 LDUR X11, [X10 - 0x8]
	0x025BB7FC CMP X11, X1
	0x025BB800 B.EQ 0x25BB820
	0x025BB804 SUBS X9, X9, 0x1
	0x025BB808 ADD X10, X10, 0x10
	0x025BB80C B.NE 0x25BB7F8
	0x025BB810 MOV X0, X19
	0x025BB814 MOV W2, W31
	0x025BB818 BL 0x1C5C788
	0x025BB81C B 0x25BB82C
	0x025BB820 LDRSW X9, [X10]
	0x025BB824 ADD X8, X8, X9, 0x4, LSL
	0x025BB828 ADD X0, X8, 0x138
	0x025BB82C LDP X2, X1, [X0]
	0x025BB830 MOV X0, X19
	0x025BB834 LDP X20, X19, [X31 + 0x10]
	0x025BB838 LDR X30, [X31], #0x20
	0x025BB83C BR X2
	0x025BB840 BL 0x1C16F20
	0x025BB844 STR X30, [X31 - 0x20]!
	0x025BB848 STP X20, X19, [X31 + 0x10]
	0x025BB84C CBZ X0, 0x25BB89C
	0x025BB850 MOV X19, X0
	0x025BB854 LDR X0, [X1 + 0x20]
	0x025BB858 LDRB W8, [X0 + 0x135]
	0x025BB85C TBNZ X8, 0x0, 0x25BB864
	0x025BB860 BL 0x1C5C684
	0x025BB864 LDR X8, [X0 + 0xC0]
	0x025BB868 LDR X1, [X8 + 0x50]
	0x025BB86C LDRB W8, [X1 + 0x135]
	0x025BB870 TBNZ X8, 0x0, 0x25BB880
	0x025BB874 MOV X0, X1
	0x025BB878 BL 0x1C5C684
	0x025BB87C MOV X1, X0
	0x025BB880 MOV X0, X19
	0x025BB884 BL 0x1C16E00
	0x025BB888 LDP X20, X19, [X31 + 0x10]
	0x025BB88C CMP X0, 0x0
	0x025BB890 CSET W0, NE
	0x025BB894 LDR X30, [X31], #0x20
	0x025BB898 RET
	0x025BB89C ADRP X0, 0x1B3D000
	0x025BB8A0 LDR X0, [X0 + 0x528]
	0x025BB8A4 MOV X19, X1
	0x025BB8A8 BL 0x1C16D08
	0x025BB8AC BL 0x1C16F10
	0x025BB8B0 MOV X20, X0
	0x025BB8B4 ADRP X0, 0x1B62000
	0x025BB8B8 LDR X0, [X0 + 0x70]
	0x025BB8BC BL 0x1C16D08
	0x025BB8C0 MOV X1, X0
	0x025BB8C4 MOV X0, X20
	0x025BB8C8 MOV X2, X31
	0x025BB8CC BL 0x330E100
	0x025BB8D0 MOV X0, X20
	0x025BB8D4 MOV X1, X19
	0x025BB8D8 BL 0x1C16DEC
	0x025BB8DC STR X30, [X31 - 0x20]!
	0x025BB8E0 STP X20, X19, [X31 + 0x10]
	0x025BB8E4 ADRP X0, 0x1B38000
	0x025BB8E8 LDR X0, [X0 + 0xB40]
	0x025BB8EC MOV X19, X3
	0x025BB8F0 BL 0x1C16D08
	0x025BB8F4 BL 0x1C16F10
	0x025BB8F8 MOV X20, X0
	0x025BB8FC ADRP X0, 0x1B62000
	0x025BB900 LDR X0, [X0 + 0x68]
	0x025BB904 BL 0x1C16D08
	0x025BB908 MOV X1, X0
	0x025BB90C MOV X0, X20
	0x025BB910 MOV X2, X31
	0x025BB914 BL 0x3379A44
	0x025BB918 MOV X0, X20
	0x025BB91C MOV X1, X19
	0x025BB920 BL 0x1C16DEC
	0x025BB924 STP X29, X30, [X31 - 0x40]!
	0x025BB928 STR X23, [X31 + 0x10]
	0x025BB92C STP X22, X21, [X31 + 0x20]
	0x025BB930 STP X20, X19, [X31 + 0x30]
	0x025BB934 ADD X29, X31, 0x0
	0x025BB938 SUB X31, X31, 0x20
	0x025BB93C MRS X23, 0xC000
	0x025BB940 LDR X8, [X23 + 0x28]
	0x025BB944 ADD X10, X31, 0x0
	0x025BB948 MOV X20, X2
	0x025BB94C MOV X21, X1
	0x025BB950 STUR X8, [X29 - 0x8]
	0x025BB954 LDR X8, [X2 + 0x20]
	0x025BB958 MOV X19, X0
	0x025BB95C LDR X8, [X8 + 0xC0]
	0x025BB960 LDR X9, [X8 + 0x50]
	0x025BB964 LDR W9, [X9 + 0xFC]
	0x025BB968 ADD X9, X9, 0xF
	0x025BB96C AND X9, X9, 0x1FFFFFFFF
	0x025BB970 SUB X22, X10, X9
	0x025BB974 ADD X31, X22, 0x0
	0x025BB978 LDR X1, [X8 + 0xD8]
	0x025BB97C MOV X0, X21
	0x025BB980 LDR X8, [X1]
	0x025BB984 BLR X8
	0x025BB988 TBZ X0, 0x0, 0x25BBA04
	0x025BB98C LDR X8, [X20 + 0x20]
	0x025BB990 LDR X8, [X8 + 0xC0]
	0x025BB994 LDR X1, [X8 + 0x50]
	0x025BB998 LDRB W8, [X1 + 0x135]
	0x025BB99C TBNZ X8, 0x0, 0x25BB9AC
	0x025BB9A0 MOV X0, X1
	0x025BB9A4 BL 0x1C5C684
	0x025BB9A8 MOV X1, X0
	0x025BB9AC MOV X0, X21
	0x025BB9B0 MOV X2, X22
	0x025BB9B4 BL 0x1C16E10
	0x025BB9B8 LDR X8, [X20 + 0x20]
	0x025BB9BC LDR X8, [X8 + 0xC0]
	0x025BB9C0 LDR X9, [X8 + 0x50]
	0x025BB9C4 LDR X1, [X8 + 0xE8]
	0x025BB9C8 LDR W9, [X9 + 0x28]
	0x025BB9CC LDR X8, [X1]
	0x025BB9D0 TBNZ X9, 0x1F, 0x25BB9D8
	0x025BB9D4 LDR X0, [X0]
	0x025BB9D8 STUR X0, [X29 - 0x18]
	0x025BB9DC LDR X9, [X1 + 0x10]
	0x025BB9E0 SUB X3, X29, 0x18
	0x025BB9E4 SUB X4, X29, 0xC
	0x025BB9E8 MOV X0, X8
	0x025BB9EC MOV X2, X19
	0x025BB9F0 BLR X9
	0x025BB9F4 LDURB W8, [X29 - 0xC]
	0x025BB9F8 CMP W8, 0x0
	0x025BB9FC CSET W0, NE
	0x025BBA00 B 0x25BBA08
	0x025BBA04 MOV W0, W31
	0x025BBA08 LDR X8, [X23 + 0x28]
	0x025BBA0C LDUR X9, [X29 - 0x8]
	0x025BBA10 CMP X8, X9
	0x025BBA14 B.NE 0x25BBA30
	0x025BBA18 ADD X31, X29, 0x0
	0x025BBA1C LDP X20, X19, [X31 + 0x30]
	0x025BBA20 LDP X22, X21, [X31 + 0x20]
	0x025BBA24 LDR X23, [X31 + 0x10]
	0x025BBA28 LDP X29, X30, [X31], #0x40
	0x025BBA2C RET
	0x025BBA30 BL 0x3EB1B20
	0x025BBA34 SUB X31, X31, 0x50
	0x025BBA38 STR X30, [X31 + 0x20]
	0x025BBA3C STP X22, X21, [X31 + 0x30]
	0x025BBA40 STP X20, X19, [X31 + 0x40]
	0x025BBA44 ADRP X19, 0x1E1E000
	0x025BBA48 ADRP X22, 0x1B38000
	0x025BBA4C LDRB W8, [X19 + 0xF1B]
	0x025BBA50 LDR X22, [X22 + 0x818]
	0x025BBA54 MOV X20, X1
	0x025BBA58 MOV X21, X0
	0x025BBA5C TBNZ X8, 0x0, 0x25BBA74

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+48], X26
	004 Move [X31+56], X25
	005 Move [X31+64], X24
	006 Move [X31+72], X23
	007 Move [X31+80], X22
	008 Move [X31+88], X21
	009 Move [X31+96], X20
	010 Move [X31+104], X19
	011 Move X23, 0x1E1F000
	012 Move W8, [X23+3864]
	013 Move X19, X3
	014 Move W20, W2
	015 Move X22, X1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {35}
	021 Move X0, 0x1B63000
	022 Move X0, [X0+120]
	023 Call 0x1C17CF4
	024 Move X0, 0x1B39000
	025 Move X0, [X0+3584]
	026 Call 0x1C17CF4
	027 Move X0, 0x1B39000
	028 Move X0, [X0+3608]
	029 Call 0x1C17CF4
	030 Move X0, 0x1B39000
	031 Move X0, [X0+2512]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X23+3864], W8
	035 Compare X22, 0
	036 JumpIfEqual {475}
	037 Move X0, X22
	038 Move X1, X31
	039 Call Array.get_Rank, X0
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X0, X22
	042 Move W1, W31
	043 Move X2, X31
	044 Call Array.GetLowerBound, X0, X1
	045 Compare W0, 0
	046 JumpIfNotEqual {494}
	047 Move TEMP, X20
	048 And TEMP, TEMP, -2147483648
	049 Compare TEMP, -2147483648
	050 JumpIfEqual {458}
	051 Move X0, X22
	052 Move X1, X31
	053 Call Array.get_Length, X0
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X0, X22
	056 Move X1, X31
	057 Call Array.get_Length, X0
	058 Move X8, [X19+32]
	059 Move W23, W0
	060 Move X0, X21
	061 Move X8, [X8+192]
	062 Move X1, [X8+264]
	063 Call 0x25BA900, X0
	064 Subtract W8, W23, W20
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X8, [X19+32]
	067 Move X8, [X8+192]
	068 Move X1, [X8+176]
	069 Move W8, [X1+309]
	070 Move TEMP, X8
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfEqual {77}
	074 Move X0, X1
	075 Call 0x1C5D684
	076 Move X1, X0
	077 Move X0, X22
	078 Call 0x1C17E00
	079 Compare X0, 0
	080 JumpIfEqual {109}
	081 Move X21, [X21+16]
	082 Compare X21, 0
	083 JumpIfEqual {508}
	084 Move X8, [X19+32]
	085 Move X23, X0
	086 Move X8, [X8+192]
	087 Move X1, [X8+144]
	088 Move W8, [X1+309]
	089 Move TEMP, X8
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfEqual {96}
	093 Move X0, X1
	094 Call 0x1C5D684
	095 Move X1, X0
	096 Move X8, [X21]
	097 NotImplemented "Instruction LDRH not yet implemented."
	098 Compare X9, 0
	099 JumpIfEqual {106}
	100 Move X10, [X8+176]
	101 Add X10, X10, 8
	102 NotImplemented "Instruction LDUR not yet implemented."
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Subtract X9, X9, 1
	105 Add X10, X10, 16
	106 Move W2, 5
	107 Move X0, X21
	108 Call 0x1C5D788
	109 Move X8, 0x1B63000
	110 Move X8, [X8+120]
	111 Move X0, X22
	112 Move X1, [X8]
	113 Call 0x1C17E00
	114 Compare X0, 0
	115 JumpIfEqual {279}
	116 Move X23, [X21+16]
	117 Compare X23, 0
	118 JumpIfEqual {508}
	119 Move X8, [X19+32]
	120 Move X24, X0
	121 Move X8, [X8+192]
	122 Move X1, [X8+192]
	123 Move W8, [X1+309]
	124 Move TEMP, X8
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfEqual {131}
	128 Move X0, X1
	129 Call 0x1C5D684
	130 Move X1, X0
	131 Move X8, [X23]
	132 NotImplemented "Instruction LDRH not yet implemented."
	133 Compare X9, 0
	134 JumpIfEqual {141}
	135 Move X10, [X8+176]
	136 Add X10, X10, 8
	137 NotImplemented "Instruction LDUR not yet implemented."
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Subtract X9, X9, 1
	140 Add X10, X10, 16
	141 Move X0, X23
	142 Move W2, W31
	143 Call 0x1C5D788
	144 Move W9, [X10]
	145 Add W9, W9, 5
	146 Add X8, X8, W9
	147 Add X0, X8, 312
	148 Move X4, [X0]
	149 Move X3, [X0+8]
	150 Move X0, X21
	151 Move X1, X23
	152 Move W2, W20
	153 Move X20, [X31+96]
	154 Move X19, [X31+104]
	155 Move X22, [X31+80]
	156 Move X21, [X31+88]
	157 Move X24, [X31+64]
	158 Move X23, [X31+72]
	159 Move X26, [X31+48]
	160 Move X25, [X31+56]
	161 Move X30, [X31+32]
	162 Add X31, X31, 112
	163 CallNoReturn X4
	164 NotImplemented "Instruction LDRSW not yet implemented."
	165 Add X8, X8, X9
	166 Add X0, X8, 312
	167 Move X8, [X0]
	168 Move X1, [X0+8]
	169 Move X0, X23
	170 NotImplemented "Instruction BLR not yet implemented."
	171 Move X23, X0
	172 Compare X0, 0
	173 JumpIfEqual {513}
	174 Move X25, 0x1B39000
	175 Move X25, [X25+3608]
	176 Move X8, [X23]
	177 Move X1, [X25]
	178 NotImplemented "Instruction LDRH not yet implemented."
	179 Compare X9, 0
	180 JumpIfEqual {187}
	181 Move X10, [X8+176]
	182 Add X10, X10, 8
	183 NotImplemented "Instruction LDUR not yet implemented."
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Subtract X9, X9, 1
	186 Add X10, X10, 16
	187 Move X0, X23
	188 Move W2, W31
	189 Call 0x1C5D788
	190 NotImplemented "Instruction LDRSW not yet implemented."
	191 Add X8, X8, X9
	192 Add X0, X8, 312
	193 Move X8, [X0]
	194 Move X1, [X0+8]
	195 Move X0, X23
	196 NotImplemented "Instruction BLR not yet implemented."
	197 Move TEMP, X0
	198 And TEMP, TEMP, 1
	199 Compare TEMP, 1
	200 JumpIfNotEqual {248}
	201 Move X8, [X19+32]
	202 Move X8, [X8+192]
	203 Move X1, [X8+208]
	204 Move W8, [X1+309]
	205 Move TEMP, X8
	206 And TEMP, TEMP, 1
	207 Compare TEMP, 1
	208 JumpIfEqual {212}
	209 Move X0, X1
	210 Call 0x1C5D684
	211 Move X1, X0
	212 Move X8, [X23]
	213 NotImplemented "Instruction LDRH not yet implemented."
	214 Compare X9, 0
	215 JumpIfEqual {222}
	216 Move X10, [X8+176]
	217 Add X10, X10, 8
	218 NotImplemented "Instruction LDUR not yet implemented."
	219 NotImplemented "Instruction CMP not yet implemented."
	220 Subtract X9, X9, 1
	221 Add X10, X10, 16
	222 Move X0, X23
	223 Move W2, W31
	224 Call 0x1C5D788
	225 NotImplemented "Instruction LDRSW not yet implemented."
	226 Add X8, X8, X9
	227 Add X0, X8, 312
	228 Move X8, [X0]
	229 Move X1, [X0+8]
	230 Move X0, X23
	231 NotImplemented "Instruction BLR not yet implemented."
	232 Add W26, W20, 1
	233 Move X2, X0
	234 Move X3, X1
	235 Move [X31+16], X31
	236 Move [X31+24], X31
	237 Add X0, X31, 16
	238 Move X1, X2
	239 Move X2, X3
	240 Move X3, X31
	241 Call DictionaryEntry..ctor, X0, X1, X2
	242 Move W8, [X24+24]
	243 NotImplemented "Instruction CMP not yet implemented."
	244 Move V0, [X31+1]
	245 Add X8, X24, W20
	246 Move W20, W26
	247 Move [X8+2], V0
	248 Move X24, X31
	249 Move W25, W31
	250 Compare X23, 0
	251 JumpIfEqual {275}
	252 Move X10, 0x1B39000
	253 Move X8, [X23]
	254 Move X10, [X10+3584]
	255 NotImplemented "Instruction LDRH not yet implemented."
	256 Move X1, [X10]
	257 Compare X9, 0
	258 JumpIfEqual {265}
	259 Move X10, [X8+176]
	260 Add X10, X10, 8
	261 NotImplemented "Instruction LDUR not yet implemented."
	262 NotImplemented "Instruction CMP not yet implemented."
	263 Subtract X9, X9, 1
	264 Add X10, X10, 16
	265 Move X0, X23
	266 Move W2, W31
	267 Call 0x1C5D788
	268 NotImplemented "Instruction LDRSW not yet implemented."
	269 Add X8, X8, X9
	270 Add X0, X8, 312
	271 Move X8, [X0]
	272 Move X1, [X0+8]
	273 Move X0, X23
	274 NotImplemented "Instruction BLR not yet implemented."
	275 Compare X24, 0
	276 JumpIfNotEqual {514}
	277 Compare W25, 0
	278 JumpIfEqual {442}
	279 Move X8, 0x1B39000
	280 Move X8, [X8+2512]
	281 Move X0, X22
	282 Move X1, [X8]
	283 Call 0x1C17E00
	284 Compare X0, 0
	285 JumpIfEqual {533}
	286 Move X21, [X21+16]
	287 Compare X21, 0
	288 JumpIfEqual {509}
	289 Move X8, [X19+32]
	290 Move X22, X0
	291 Move X8, [X8+192]
	292 Move X1, [X8+192]
	293 Move W8, [X1+309]
	294 Move TEMP, X8
	295 And TEMP, TEMP, 1
	296 Compare TEMP, 1
	297 JumpIfEqual {301}
	298 Move X0, X1
	299 Call 0x1C5D684
	300 Move X1, X0
	301 Move X8, [X21]
	302 NotImplemented "Instruction LDRH not yet implemented."
	303 Compare X9, 0
	304 JumpIfEqual {311}
	305 Move X10, [X8+176]
	306 Add X10, X10, 8
	307 NotImplemented "Instruction LDUR not yet implemented."
	308 NotImplemented "Instruction CMP not yet implemented."
	309 Subtract X9, X9, 1
	310 Add X10, X10, 16
	311 Move X0, X21
	312 Move W2, W31
	313 Call 0x1C5D788
	314 NotImplemented "Instruction LDRSW not yet implemented."
	315 Add X8, X8, X9
	316 Add X0, X8, 312
	317 Move X8, [X0]
	318 Move X1, [X0+8]
	319 Move X0, X21
	320 NotImplemented "Instruction BLR not yet implemented."
	321 Move X21, X0
	322 Compare X0, 0
	323 JumpIfEqual {510}
	324 Move X24, 0x1B39000
	325 Move X24, [X24+3608]
	326 Move X8, [X21]
	327 Move X1, [X24]
	328 NotImplemented "Instruction LDRH not yet implemented."
	329 Compare X9, 0
	330 JumpIfEqual {337}
	331 Move X10, [X8+176]
	332 Add X10, X10, 8
	333 NotImplemented "Instruction LDUR not yet implemented."
	334 NotImplemented "Instruction CMP not yet implemented."
	335 Subtract X9, X9, 1
	336 Add X10, X10, 16
	337 Move X0, X21
	338 Move W2, W31
	339 Call 0x1C5D788
	340 NotImplemented "Instruction LDRSW not yet implemented."
	341 Add X8, X8, X9
	342 Add X0, X8, 312
	343 Move X8, [X0]
	344 Move X1, [X0+8]
	345 Move X0, X21
	346 NotImplemented "Instruction BLR not yet implemented."
	347 Move TEMP, X0
	348 And TEMP, TEMP, 1
	349 Compare TEMP, 1
	350 JumpIfNotEqual {414}
	351 Move X8, [X19+32]
	352 Move X8, [X8+192]
	353 Move X1, [X8+208]
	354 Move W8, [X1+309]
	355 Move TEMP, X8
	356 And TEMP, TEMP, 1
	357 Compare TEMP, 1
	358 JumpIfEqual {362}
	359 Move X0, X1
	360 Call 0x1C5D684
	361 Move X1, X0
	362 Move X8, [X21]
	363 NotImplemented "Instruction LDRH not yet implemented."
	364 Compare X9, 0
	365 JumpIfEqual {372}
	366 Move X10, [X8+176]
	367 Add X10, X10, 8
	368 NotImplemented "Instruction LDUR not yet implemented."
	369 NotImplemented "Instruction CMP not yet implemented."
	370 Subtract X9, X9, 1
	371 Add X10, X10, 16
	372 Move X0, X21
	373 Move W2, W31
	374 Call 0x1C5D788
	375 NotImplemented "Instruction LDRSW not yet implemented."
	376 Add X8, X8, X9
	377 Add X0, X8, 312
	378 Move X8, [X0]
	379 Move X1, [X0+8]
	380 Move X0, X21
	381 NotImplemented "Instruction BLR not yet implemented."
	382 Move X8, [X19+32]
	383 Move X2, X0
	384 Move X4, X1
	385 Move X8, [X8+192]
	386 Move [X31+16], X31
	387 Move [X31+24], X31
	388 Move X3, [X8+304]
	389 Add X0, X31, 16
	390 Move X1, X2
	391 Move X2, X4
	392 Call KeyValuePair`2<Object, Object>..ctor, X0, X1, X2
	393 Move V0, [X31+1]
	394 Move [X31], V0
	395 Move X8, [X19+32]
	396 Move X8, [X8+192]
	397 Move X0, [X8+160]
	398 Add X1, X31, 0
	399 Call 0x1C17E04
	400 Move X23, X0
	401 Compare X0, 0
	402 JumpIfEqual {409}
	403 Move X8, [X22]
	404 Move X1, [X8+64]
	405 Move X0, X23
	406 Call 0x1C17E00
	407 Compare X0, 0
	408 JumpIfEqual {455}
	409 Move W8, [X22+24]
	410 NotImplemented "Instruction CMP not yet implemented."
	411 Add X8, X22, W20
	412 Add W20, W20, 1
	413 Move [X8+32], X23
	414 Move X20, X31
	415 Compare X21, 0
	416 JumpIfEqual {440}
	417 Move X10, 0x1B39000
	418 Move X8, [X21]
	419 Move X10, [X10+3584]
	420 NotImplemented "Instruction LDRH not yet implemented."
	421 Move X1, [X10]
	422 Compare X9, 0
	423 JumpIfEqual {430}
	424 Move X10, [X8+176]
	425 Add X10, X10, 8
	426 NotImplemented "Instruction LDUR not yet implemented."
	427 NotImplemented "Instruction CMP not yet implemented."
	428 Subtract X9, X9, 1
	429 Add X10, X10, 16
	430 Move X0, X21
	431 Move W2, W31
	432 Call 0x1C5D788
	433 NotImplemented "Instruction LDRSW not yet implemented."
	434 Add X8, X8, X9
	435 Add X0, X8, 312
	436 Move X8, [X0]
	437 Move X1, [X0+8]
	438 Move X0, X21
	439 NotImplemented "Instruction BLR not yet implemented."
	440 Compare X20, 0
	441 JumpIfNotEqual {511}
	442 Move X20, [X31+96]
	443 Move X19, [X31+104]
	444 Move X22, [X31+80]
	445 Move X21, [X31+88]
	446 Move X24, [X31+64]
	447 Move X23, [X31+72]
	448 Move X26, [X31+48]
	449 Move X25, [X31+56]
	450 Move X30, [X31+32]
	451 Add X31, X31, 112
	452 Return 
	453 Call 0x1C17F28
	454 Call 0x1C17F28
	455 Call 0x1C17F44
	456 Move X1, X31
	457 Call 0x1C17DEC
	458 Move X0, 0x1B41000
	459 Move X0, [X0+1888]
	460 Call 0x1C17D08
	461 Call 0x1C17F10
	462 Move X20, X0
	463 Move X0, 0x1B44000
	464 Move X0, [X0+304]
	465 Call 0x1C17D08
	466 Move X21, X0
	467 Move X0, 0x1B61000
	468 Move X0, [X0+1648]
	469 Call 0x1C17D08
	470 Move X2, X0
	471 Move X0, X20
	472 Move X1, X21
	473 Move X3, X31
	474 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	475 Move X0, 0x1B3E000
	476 Move X0, [X0+1320]
	477 Call 0x1C17D08
	478 Call 0x1C17F10
	479 Move X20, X0
	480 Move X0, 0x1B61000
	481 Move X0, [X0+1600]
	482 Call 0x1C17D08
	483 Move X1, X0
	484 Move X0, X20
	485 Move X2, X31
	486 Call ArgumentNullException..ctor, X0, X1
	487 Move X0, 0x1B41000
	488 Move X0, [X0+1400]
	489 Call 0x1C17D08
	490 Call 0x1C17F10
	491 Move X20, X0
	492 Move X0, 0x1B62000
	493 Move X0, [X0+776]
	494 Move X0, 0x1B41000
	495 Move X0, [X0+1400]
	496 Call 0x1C17D08
	497 Call 0x1C17F10
	498 Move X20, X0
	499 Move X0, 0x1B62000
	500 Move X0, [X0+784]
	501 Move X0, 0x1B41000
	502 Move X0, [X0+1400]
	503 Call 0x1C17D08
	504 Call 0x1C17F10
	505 Move X20, X0
	506 Move X0, 0x1B62000
	507 Move X0, [X0+792]
	508 Call 0x1C17F20
	509 Call 0x1C17F20
	510 Call 0x1C17F20
	511 Move X0, X20
	512 Call 0x1C17F18
	513 Call 0x1C17F20
	514 Move X0, X24
	515 Call 0x1C17F18
	516 Move X22, X1
	517 Move X25, X0
	518 NotImplemented "Instruction CMP not yet implemented."
	519 Move X0, X25
	520 Call 0x3EB2AD0
	521 Move X20, X0
	522 Move X0, 0x1B62000
	523 Move X0, [X0+800]
	524 Call 0x1C17D08
	525 Move X8, [X20]
	526 Move X1, [X8]
	527 Call 0x1C18270
	528 Move TEMP, X0
	529 And TEMP, TEMP, 1
	530 Compare TEMP, 1
	531 JumpIfNotEqual {548}
	532 Call 0x3EB2AE0
	533 Move X0, 0x1B41000
	534 Move X0, [X0+1400]
	535 Call 0x1C17D08
	536 Call 0x1C17F10
	537 Move X20, X0
	538 Move X0, 0x1B62000
	539 Move X0, [X0+808]
	540 Call 0x1C17D08
	541 Move X1, X0
	542 Move X0, X20
	543 Move X2, X31
	544 Call ArgumentException..ctor, X0, X1
	545 Move X0, X20
	546 Move X1, X19
	547 Call 0x1C17DEC
	548 Move W0, 8
	549 Call 0x3EB2AF0
	550 Move X8, [X20]
	551 Move [X0], X8
	552 Move X1, 0x18FA000
	553 Add X1, X1, 3672
	554 Move X2, X31
	555 Call 0x3EB2B00
	556 Move X25, X0
	557 Call 0x3EB2AE0
	558 Move X0, X25
	559 Call 0x1D2D690
	560 Move X25, X0
	561 Move W20, W26
	562 Move X25, X0
	563 NotImplemented "Instruction CMP not yet implemented."
	564 Move X0, X25
	565 Call 0x3EB2AD0
	566 Move X24, [X0]
	567 Call 0x3EB2AE0
	568 Move W25, 1
	569 Compare X23, 0
	570 JumpIfNotEqual {252}
	571 Move X24, X31
	572 Move X25, X0
	573 Compare X23, 0
	574 JumpIfEqual {598}
	575 Move X10, 0x1B39000
	576 Move X8, [X23]
	577 Move X10, [X10+3584]
	578 NotImplemented "Instruction LDRH not yet implemented."
	579 Move X1, [X10]
	580 Compare X9, 0
	581 JumpIfEqual {588}
	582 Move X10, [X8+176]
	583 Add X10, X10, 8
	584 NotImplemented "Instruction LDUR not yet implemented."
	585 NotImplemented "Instruction CMP not yet implemented."
	586 Subtract X9, X9, 1
	587 Add X10, X10, 16
	588 Move X0, X23
	589 Move W2, W31
	590 Call 0x1C5D788
	591 NotImplemented "Instruction LDRSW not yet implemented."
	592 Add X8, X8, X9
	593 Add X0, X8, 312
	594 Move X8, [X0]
	595 Move X1, [X0+8]
	596 Move X0, X23
	597 NotImplemented "Instruction BLR not yet implemented."
	598 Compare X24, 0
	599 JumpIfEqual {558}
	600 Move X0, X24
	601 Call 0x1C17F18
	602 Move X22, X1
	603 Move X25, X0
	604 NotImplemented "Instruction CMP not yet implemented."
	605 Move X0, X25
	606 Call 0x3EB2AD0
	607 Move X20, [X0]
	608 Call 0x3EB2AE0
	609 Move X20, X31
	610 Move X22, X1
	611 Move X25, X0
	612 Compare X21, 0
	613 JumpIfEqual {637}
	614 Move X10, 0x1B39000
	615 Move X8, [X21]
	616 Move X10, [X10+3584]
	617 NotImplemented "Instruction LDRH not yet implemented."
	618 Move X1, [X10]
	619 Compare X9, 0
	620 JumpIfEqual {627}
	621 Move X10, [X8+176]
	622 Add X10, X10, 8
	623 NotImplemented "Instruction LDUR not yet implemented."
	624 NotImplemented "Instruction CMP not yet implemented."
	625 Subtract X9, X9, 1
	626 Add X10, X10, 16
	627 Move X0, X21
	628 Move W2, W31
	629 Call 0x1C5D788
	630 NotImplemented "Instruction LDRSW not yet implemented."
	631 Add X8, X8, X9
	632 Add X0, X8, 312
	633 Move X8, [X0]
	634 Move X1, [X0+8]
	635 Move X0, X21
	636 NotImplemented "Instruction BLR not yet implemented."
	637 Compare X20, 0
	638 JumpIfEqual {518}
	639 Move X0, X20
	640 Call 0x1C17F18
	641 Call 0x1991590

Method: System.Boolean System.Collections.ICollection.get_IsSynchronized()

Disassembly:
	0x025BBA60 ADRP X0, 0x1B38000
	0x025BBA64 LDR X0, [X0 + 0x818]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Object System.Collections.ICollection.get_SyncRoot()

Disassembly:
	0x025BBA68 BL 0x1C16CF4
	0x025BBA6C MOVZ W8, 0x1
	0x025BBA70 STRB W8, [X19 + 0xF1B]
	0x025BBA74 LDR X0, [X21 + 0x10]
	0x025BBA78 LDR X1, [X22]
	0x025BBA7C BL 0x1C16E00
	0x025BBA80 CBZ X0, 0x25BBAC8
	0x025BBA84 LDR X8, [X0]
	0x025BBA88 LDR X1, [X22]
	0x025BBA8C MOV X19, X0
	0x025BBA90 LDRH W9, [X8 + 0x12E]
	0x025BBA94 CBZ X9, 0x25BBAB8
	0x025BBA98 LDR X10, [X8 + 0xB0]
	0x025BBA9C ADD X10, X10, 0x8
	0x025BBAA0 LDUR X11, [X10 - 0x8]
	0x025BBAA4 CMP X11, X1
	0x025BBAA8 B.EQ 0x25BBB14
	0x025BBAAC SUBS X9, X9, 0x1
	0x025BBAB0 ADD X10, X10, 0x10
	0x025BBAB4 B.NE 0x25BBAA0
	0x025BBAB8 MOVZ W2, 0x6
	0x025BBABC MOV X0, X19
	0x025BBAC0 BL 0x1C5C788
	0x025BBAC4 B 0x25BBB24
	0x025BBAC8 LDR X1, [X21 + 0x10]
	0x025BBACC STP X31, X31, [X31 + 0x10]
	0x025BBAD0 LDR X8, [X20 + 0x20]
	0x025BBAD4 ADD X0, X31, 0x10
	0x025BBAD8 LDR X8, [X8 + 0xC0]
	0x025BBADC LDR X2, [X8 + 0xF8]
	0x025BBAE0 BL 0x29B6F50
	0x025BBAE4 LDR V0, [X31 + 0x1]
	0x025BBAE8 ADD X1, X31, 0x0
	0x025BBAEC STR V0, [X31]
	0x025BBAF0 LDR X8, [X20 + 0x20]
	0x025BBAF4 LDR X8, [X8 + 0xC0]
	0x025BBAF8 LDR X0, [X8 + 0xF0]
	0x025BBAFC BL 0x1C16E04
	0x025BBB00 LDP X20, X19, [X31 + 0x40]
	0x025BBB04 LDP X22, X21, [X31 + 0x30]
	0x025BBB08 LDR X30, [X31 + 0x20]
	0x025BBB0C ADD X31, X31, 0x50
	0x025BBB10 RET
	0x025BBB14 LDR W9, [X10]
	0x025BBB18 ADD W9, W9, 0x6
	0x025BBB1C ADD X8, X8, W9, 0x4, SXTW
	0x025BBB20 ADD X0, X8, 0x138
	0x025BBB24 LDP X2, X1, [X0]
	0x025BBB28 MOV X0, X19
	0x025BBB2C LDP X20, X19, [X31 + 0x40]
	0x025BBB30 LDP X22, X21, [X31 + 0x30]
	0x025BBB34 LDR X30, [X31 + 0x20]
	0x025BBB38 ADD X31, X31, 0x50
	0x025BBB3C BR X2
	0x025BBB40 LDR X8, [X1 + 0x20]
	0x025BBB44 LDR X8, [X8 + 0xC0]
	0x025BBB48 LDR X1, [X8 + 0x60]
	0x025BBB4C LDR X2, [X1]
	0x025BBB50 BR X2
	0x025BBB54 STR X30, [X31 - 0x20]!
	0x025BBB58 STP X20, X19, [X31 + 0x10]
	0x025BBB5C ADRP X0, 0x1B38000
	0x025BBB60 LDR X0, [X0 + 0xB40]
	0x025BBB64 MOV X19, X2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x1E1F000
	006 Move W8, [X19+3865]
	007 Move X20, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x1B40000
	013 Move X0, [X0+752]
	014 Call 0x1C17CF4
	015 Move X0, 0x1B3F000
	016 Move X0, [X0+3264]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+3865], W8
	020 Move X19, X20
	021 Add X19, X19, 24
	022 Move X0, [X19]
	023 Compare X0, 0
	024 JumpIfNotEqual {68}
	025 Move X21, 0x1B40000
	026 Move X0, [X20+16]
	027 Move X21, [X21+752]
	028 Move X1, [X21]
	029 Call 0x1C17E00
	030 Compare X0, 0
	031 JumpIfEqual {47}
	032 Move X8, [X0]
	033 Move X1, [X21]
	034 Move X20, X0
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 Compare X9, 0
	037 JumpIfEqual {44}
	038 Move X10, [X8+176]
	039 Add X10, X10, 8
	040 NotImplemented "Instruction LDUR not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Subtract X9, X9, 1
	043 Add X10, X10, 16
	044 Move W2, 2
	045 Move X0, X20
	046 Call 0x1C5D788
	047 Move X8, 0x1B3F000
	048 Move X8, [X8+3264]
	049 Move X0, [X8]
	050 Call 0x1C17F10
	051 Move X1, X31
	052 Move X20, X0
	053 Call Object..ctor, X0
	054 Move X0, X19
	055 Move X1, X20
	056 Move X2, X31
	057 Call 0x1C25138
	058 Move X0, [X19]
	059 Move W9, [X10]
	060 Add W9, W9, 2
	061 Add X8, X8, W9
	062 Add X0, X8, 312
	063 Move X8, [X0]
	064 Move X1, [X0+8]
	065 Move X0, X20
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Move [X19], X0
	068 Move X20, [X31+16]
	069 Move X19, [X31+24]
	070 Move X30, [X31+32]
	071 Move X21, [X31+40]
	072 Return X0

