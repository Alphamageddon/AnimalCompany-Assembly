Type: System.Collections.BitArray/BitArrayEnumeratorSimple

Method: System.Void .ctor(System.Collections.BitArray bitarray)

Disassembly:
	0x03358E58 LDR X9, [X19 + 0x10]
	0x03358E5C CBZ X9, 0x3358F50
	0x03358E60 LDR W9, [X9 + 0x18]
	0x03358E64 MOV X20, X2
	0x03358E68 CMP W8, W9
	0x03358E6C B.NE 0x3358E80
	0x03358E70 ADD W1, W8, 0x1
	0x03358E74 MOV X0, X19
	0x03358E78 BL 0x33588F4
	0x03358E7C LDR W8, [X19 + 0x18]
	0x03358E80 SUBS W4, W8, W21
	0x03358E84 B.LE 0x3358EA0
	0x03358E88 LDR X0, [X19 + 0x10]
	0x03358E8C ADD W3, W21, 0x1
	0x03358E90 MOV W1, W21
	0x03358E94 MOV X5, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X1
	005 Move X1, X31
	006 Move X19, X0
	007 Call Object..ctor, X0
	008 Move TEMP, 0
	009 Not TEMP
	010 Move W8, TEMP
	011 Move [X19+16], X20
	012 Move [X19+24], W8
	013 Compare X20, 0
	014 JumpIfEqual {21}
	015 Move W8, [X20+28]
	016 Move [X19+28], W8
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+32]
	020 Return 
	021 Call 0x1C17F20

Method: System.Object Clone()

Disassembly:
	0x03358E98 MOV X2, X0
	0x03358E9C BL 0x339FCE8

ISIL:
	001 Move X1, X31
	002 Call Object.MemberwiseClone, X0
	003 Return X0

Method: System.Boolean MoveNext()

Disassembly:
	0x03358EA0 LDR X22, [X19 + 0x10]
	0x03358EA4 CBZ X22, 0x3358F50
	0x03358EA8 CBZ X20, 0x3358EC0
	0x03358EAC LDR X8, [X22]
	0x03358EB0 MOV X0, X20
	0x03358EB4 LDR X1, [X8 + 0x40]
	0x03358EB8 BL 0x1C16E00
	0x03358EBC CBZ X0, 0x3358F58
	0x03358EC0 LDR W8, [X22 + 0x18]
	0x03358EC4 CMP W8, W21
	0x03358EC8 B.LS 0x3358F54
	0x03358ECC ADD X8, X22, W21, 0x3, UXTW
	0x03358ED0 STR X20, [X8 + 0x20]
	0x03358ED4 LDR V0, [X19 + 0x18]
	0x03358ED8 MOVI V1.2S, 0x1
	0x03358EDC LDP X22, X21, [X31 + 0x10]
	0x03358EE0 ADD S0.2S, S0.2S, S1.2S
	0x03358EE4 STR D0, [X19 + 0x18]
	0x03358EE8 LDP X20, X19, [X31 + 0x20]
	0x03358EEC LDR X30, [X31], #0x30
	0x03358EF0 RET
	0x03358EF4 ADRP X0, 0xDA3000
	0x03358EF8 LDR X0, [X0 + 0x760]
	0x03358EFC BL 0x1C16D08
	0x03358F00 BL 0x1C16F10
	0x03358F04 MOV X19, X0
	0x03358F08 ADRP X0, 0xDA6000
	0x03358F0C LDR X0, [X0 + 0x130]
	0x03358F10 BL 0x1C16D08
	0x03358F14 MOV X20, X0
	0x03358F18 ADRP X0, 0xDD2000
	0x03358F1C LDR X0, [X0 + 0x620]
	0x03358F20 BL 0x1C16D08
	0x03358F24 MOV X2, X0
	0x03358F28 MOV X0, X19
	0x03358F2C MOV X1, X20
	0x03358F30 MOV X3, X31
	0x03358F34 BL 0x3311888
	0x03358F38 ADRP X0, 0xDD2000
	0x03358F3C LDR X0, [X0 + 0x628]
	0x03358F40 BL 0x1C16D08
	0x03358F44 MOV X1, X0
	0x03358F48 MOV X0, X19
	0x03358F4C BL 0x1C16DEC
	0x03358F50 BL 0x1C16F20
	0x03358F54 BL 0x1C16F28
	0x03358F58 BL 0x1C16F44
	0x03358F5C MOV X1, X31
	0x03358F60 BL 0x1C16DEC
	0x03358F64 STR X30, [X31 - 0x40]!
	0x03358F68 STP X24, X23, [X31 + 0x10]
	0x03358F6C STP X22, X21, [X31 + 0x20]
	0x03358F70 STP X20, X19, [X31 + 0x30]
	0x03358F74 ADRP X22, 0x1084000
	0x03358F78 LDRB W8, [X22 + 0xDFC]
	0x03358F7C MOV X21, X2
	0x03358F80 MOV W20, W1
	0x03358F84 MOV X19, X0
	0x03358F88 TBNZ X8, 0x0, 0x3358FAC
	0x03358F8C ADRP X0, 0xDA2000
	0x03358F90 LDR X0, [X0 + 0x2F0]
	0x03358F94 BL 0x1C16CF4
	0x03358F98 ADRP X0, 0xD9B000
	0x03358F9C LDR X0, [X0 + 0x9D0]
	0x03358FA0 BL 0x1C16CF4
	0x03358FA4 MOVZ W8, 0x1
	0x03358FA8 STRB W8, [X22 + 0xDFC]
	0x03358FAC CBZ X21, 0x3359160
	0x03358FB0 TBNZ X20, 0x1F, 0x3359118
	0x03358FB4 LDR W8, [X19 + 0x18]
	0x03358FB8 CMP W8, W20
	0x03358FBC B.LT 0x3359118
	0x03358FC0 ADRP X23, 0xDA2000
	0x03358FC4 LDR X8, [X21]
	0x03358FC8 LDR X23, [X23 + 0x2F0]
	0x03358FCC LDRH W9, [X8 + 0x12E]
	0x03358FD0 LDR X1, [X23]
	0x03358FD4 CBZ X9, 0x3358FF8
	0x03358FD8 LDR X10, [X8 + 0xB0]
	0x03358FDC ADD X10, X10, 0x8
	0x03358FE0 LDUR X11, [X10 - 0x8]
	0x03358FE4 CMP X11, X1
	0x03358FE8 B.EQ 0x3359008
	0x03358FEC SUBS X9, X9, 0x1
	0x03358FF0 ADD X10, X10, 0x10
	0x03358FF4 B.NE 0x3358FE0
	0x03358FF8 MOVZ W2, 0x1
	0x03358FFC MOV X0, X21
	0x03359000 BL 0x1C5C788
	0x03359004 B 0x3359018
	0x03359008 LDR W9, [X10]
	0x0335900C ADD W9, W9, 0x1
	0x03359010 ADD X8, X8, W9, 0x4, SXTW
	0x03359014 ADD X0, X8, 0x138
	0x03359018 LDP X8, X1, [X0]
	0x0335901C MOV X0, X21
	0x03359020 BLR X8
	0x03359024 CMP W0, 0x1
	0x03359028 B.LT 0x3359104
	0x0335902C LDR W8, [X19 + 0x18]
	0x03359030 ADRP X24, 0xD9A000
	0x03359034 LDR X24, [X24 + 0x9D0]
	0x03359038 MOV W22, W0
	0x0335903C ADD W1, W8, W0
	0x03359040 MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x1085000
	008 Move W8, [X20+3571]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDA3000
	015 Move X0, [X0+752]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3571], W8
	019 Move X20, [X19+16]
	020 Compare X20, 0
	021 JumpIfEqual {93}
	022 Move W8, [X19+28]
	023 Move W9, [X20+28]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X23, 0xDA3000
	026 Move X8, [X20]
	027 Move X23, [X23+752]
	028 Move W21, [X19+24]
	029 NotImplemented "Instruction LDRH not yet implemented."
	030 Move X1, [X23]
	031 Compare X9, 0
	032 JumpIfEqual {39}
	033 Move X10, [X8+176]
	034 Add X10, X10, 8
	035 NotImplemented "Instruction LDUR not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Subtract X9, X9, 1
	038 Add X10, X10, 16
	039 Move W2, 1
	040 Move X0, X20
	041 Call 0x1C5D788
	042 Move W9, [X10]
	043 Add W9, W9, 1
	044 Add X8, X8, W9
	045 Add X0, X8, 312
	046 Move X8, [X0]
	047 Move X1, [X0+8]
	048 Move X0, X20
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Subtract W22, W0, 1
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move W8, [X19+24]
	053 Move X0, [X19+16]
	054 Add W1, W8, 1
	055 Move [X19+24], W1
	056 Compare X0, 0
	057 JumpIfEqual {93}
	058 Call BitArray.Get, X0, X1
	059 And W8, W0, 1
	060 Move [X19+32], W8
	061 Move X8, [X20]
	062 Move X1, [X23]
	063 NotImplemented "Instruction LDRH not yet implemented."
	064 Compare X9, 0
	065 JumpIfEqual {72}
	066 Move X10, [X8+176]
	067 Add X10, X10, 8
	068 NotImplemented "Instruction LDUR not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Subtract X9, X9, 1
	071 Add X10, X10, 16
	072 Move W2, 1
	073 Move X0, X20
	074 Call 0x1C5D788
	075 Move W9, [X10]
	076 Add W9, W9, 1
	077 Add X8, X8, W9
	078 Add X0, X8, 312
	079 Move X8, [X0]
	080 Move X1, [X0+8]
	081 Move X0, X20
	082 NotImplemented "Instruction BLR not yet implemented."
	083 Move [X19+24], W0
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X20, [X31+32]
	086 Move X19, [X31+40]
	087 Move X22, [X31+16]
	088 Move X21, [X31+24]
	089 NotImplemented "Instruction CSET not yet implemented."
	090 Move X30, [X31+48]
	091 Move X23, [X31+56]
	092 Return X0
	093 Call 0x1C17F20
	094 Move X0, 0xD9C000
	095 Move X0, [X0+1456]
	096 Call 0x1C17D08
	097 Call 0x1C17F10
	098 Move X19, X0
	099 Move X0, 0xDC5000
	100 Move X0, [X0+648]
	101 Call 0x1C17D08
	102 Move X1, X0
	103 Move X0, X19
	104 Move X2, X31
	105 Call InvalidOperationException..ctor, X0, X1
	106 Move X0, 0xDD2000
	107 Move X0, [X0+1464]
	108 Call 0x1C17D08
	109 Move X1, X0
	110 Move X0, X19
	111 Call 0x1C17DEC

Method: System.Object get_Current()

Disassembly:
	0x03359044 BL 0x33588F4
	0x03359048 LDR W8, [X19 + 0x18]
	0x0335904C SUBS W4, W8, W20
	0x03359050 B.LE 0x335906C
	0x03359054 LDR X0, [X19 + 0x10]
	0x03359058 ADD W3, W22, W20
	0x0335905C MOV W1, W20
	0x03359060 MOV X5, X31
	0x03359064 MOV X2, X0
	0x03359068 BL 0x339FCE8
	0x0335906C LDR X0, [X24]
	0x03359070 MOV W1, W22
	0x03359074 BL 0x1C16D6C
	0x03359078 LDR X8, [X21]
	0x0335907C LDR X1, [X23]
	0x03359080 MOV X23, X0
	0x03359084 LDRH W9, [X8 + 0x12E]
	0x03359088 CBZ X9, 0x33590AC
	0x0335908C LDR X10, [X8 + 0xB0]
	0x03359090 ADD X10, X10, 0x8
	0x03359094 LDUR X11, [X10 - 0x8]
	0x03359098 CMP X11, X1
	0x0335909C B.EQ 0x33590BC
	0x033590A0 SUBS X9, X9, 0x1
	0x033590A4 ADD X10, X10, 0x10
	0x033590A8 B.NE 0x3359094
	0x033590AC MOV X0, X21
	0x033590B0 MOV W2, W31
	0x033590B4 BL 0x1C5C788
	0x033590B8 B 0x33590C8
	0x033590BC LDRSW X9, [X10]
	0x033590C0 ADD X8, X8, X9, 0x4, LSL
	0x033590C4 ADD X0, X8, 0x138
	0x033590C8 LDP X8, X3, [X0]
	0x033590CC MOV X0, X21
	0x033590D0 MOV X1, X23
	0x033590D4 MOV W2, W31
	0x033590D8 BLR X8
	0x033590DC CBZ X23, 0x33591BC
	0x033590E0 LDR X1, [X19 + 0x10]
	0x033590E4 MOV X0, X23
	0x033590E8 MOV W2, W20
	0x033590EC MOV X3, X31
	0x033590F0 BL 0x339FC34
	0x033590F4 LDP W8, W9, [X19 + 0x18]
	0x033590F8 ADD W8, W8, W22
	0x033590FC ADD W9, W9, 0x1
	0x03359100 STP W8, W9, [X19 + 0x18]
	0x03359104 LDP X20, X19, [X31 + 0x30]
	0x03359108 LDP X22, X21, [X31 + 0x20]
	0x0335910C LDP X24, X23, [X31 + 0x10]
	0x03359110 LDR X30, [X31], #0x40
	0x03359114 RET
	0x03359118 ADRP X0, 0xDA2000
	0x0335911C LDR X0, [X0 + 0x760]
	0x03359120 BL 0x1C16D08
	0x03359124 BL 0x1C16F10
	0x03359128 MOV X19, X0
	0x0335912C ADRP X0, 0xDA5000
	0x03359130 LDR X0, [X0 + 0x130]
	0x03359134 BL 0x1C16D08
	0x03359138 MOV X20, X0
	0x0335913C ADRP X0, 0xDC2000
	0x03359140 LDR X0, [X0 + 0x660]
	0x03359144 BL 0x1C16D08
	0x03359148 MOV X2, X0
	0x0335914C MOV X0, X19
	0x03359150 MOV X1, X20
	0x03359154 MOV X3, X31
	0x03359158 BL 0x3311888
	0x0335915C B 0x33591A4
	0x03359160 ADRP X0, 0xD9F000
	0x03359164 LDR X0, [X0 + 0x528]
	0x03359168 BL 0x1C16D08
	0x0335916C BL 0x1C16F10
	0x03359170 MOV X19, X0
	0x03359174 ADRP X0, 0xDCF000
	0x03359178 LDR X0, [X0 + 0x538]
	0x0335917C BL 0x1C16D08
	0x03359180 MOV X20, X0
	0x03359184 ADRP X0, 0xDD1000
	0x03359188 LDR X0, [X0 + 0x5D8]
	0x0335918C BL 0x1C16D08
	0x03359190 MOV X2, X0
	0x03359194 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x1084000
	007 Move W8, [X20+3572]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xD9B000
	014 Move X0, [X0+2904]
	015 Call 0x1C17CF4
	016 Move X0, 0xDA2000
	017 Move X0, [X0+752]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+3572], W8
	021 Move W21, [X19+24]
	022 Add W31, W21, 1
	023 Move X20, [X19+16]
	024 Compare X20, 0
	025 JumpIfEqual {71}
	026 Move X10, 0xDA2000
	027 Move X8, [X20]
	028 Move X10, [X10+752]
	029 NotImplemented "Instruction LDRH not yet implemented."
	030 Move X1, [X10]
	031 Compare X9, 0
	032 JumpIfEqual {39}
	033 Move X10, [X8+176]
	034 Add X10, X10, 8
	035 NotImplemented "Instruction LDUR not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Subtract X9, X9, 1
	038 Add X10, X10, 16
	039 Move W2, 1
	040 Move X0, X20
	041 Call 0x1C5D788
	042 Move W9, [X10]
	043 Add W9, W9, 1
	044 Add X8, X8, W9
	045 Add X0, X8, 312
	046 Move X8, [X0]
	047 Move X1, [X0+8]
	048 Move X0, X20
	049 NotImplemented "Instruction BLR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X8, 0xD9B000
	052 Move X8, [X8+2904]
	053 Move W9, [X19+32]
	054 Add X1, X31, 12
	055 Move X0, [X8]
	056 Move [X31+12], W9
	057 Call 0x1C17E04
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X30, [X31+16]
	061 Move X21, [X31+24]
	062 Add X31, X31, 48
	063 Return X0
	064 Move X0, 0xD9B000
	065 Move X0, [X0+1456]
	066 Call 0x1C17D08
	067 Call 0x1C17F10
	068 Move X19, X0
	069 Move X0, 0xDC6000
	070 Move X0, [X0+3144]
	071 Call 0x1C17F20
	072 Move X0, 0xD9B000
	073 Move X0, [X0+1456]
	074 Call 0x1C17D08
	075 Call 0x1C17F10
	076 Move X19, X0
	077 Move X0, 0xDC6000
	078 Move X0, [X0+3136]
	079 Call 0x1C17D08
	080 Move X1, X0
	081 Move X0, X19
	082 Move X2, X31
	083 Call InvalidOperationException..ctor, X0, X1
	084 Move X0, 0xDD2000
	085 Move X0, [X0+1472]
	086 Call 0x1C17D08
	087 Move X1, X0
	088 Move X0, X19
	089 Call 0x1C17DEC

Method: System.Void Reset()

Disassembly:
	0x03359198 MOV X1, X20
	0x0335919C MOV X3, X31
	0x033591A0 BL 0x3315F7C
	0x033591A4 ADRP X0, 0xDD1000
	0x033591A8 LDR X0, [X0 + 0x630]
	0x033591AC BL 0x1C16D08
	0x033591B0 MOV X1, X0
	0x033591B4 MOV X0, X19
	0x033591B8 BL 0x1C16DEC
	0x033591BC BL 0x1C16F20
	0x033591C0 STR X30, [X31 - 0x20]!
	0x033591C4 STP X20, X19, [X31 + 0x10]
	0x033591C8 ADRP X20, 0x1083000
	0x033591CC LDRB W8, [X20 + 0xDFD]
	0x033591D0 MOV X19, X0
	0x033591D4 TBNZ X8, 0x0, 0x33591EC
	0x033591D8 ADRP X0, 0xDD1000
	0x033591DC LDR X0, [X0 + 0x638]
	0x033591E0 BL 0x1C16CF4
	0x033591E4 MOVZ W8, 0x1
	0x033591E8 STRB W8, [X20 + 0xDFD]
	0x033591EC CBZ X19, 0x335921C
	0x033591F0 ADRP X8, 0xDD1000
	0x033591F4 LDR X8, [X8 + 0x638]
	0x033591F8 LDR X0, [X8]
	0x033591FC BL 0x1C16F10
	0x03359200 MOV X20, X0
	0x03359204 BL 0x3351F5C
	0x03359208 STR X19, [X20 + 0x28]
	0x0335920C MOV X0, X20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+16]
	004 Compare X8, 0
	005 JumpIfEqual {16}
	006 Move W9, [X0+28]
	007 Move W8, [X8+28]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move TEMP, 0
	010 Not TEMP
	011 Move W8, TEMP
	012 Move [X0+24], W8
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Return 
	016 Call 0x1C17F20
	017 Move X0, 0xD9B000
	018 Move X0, [X0+1456]
	019 Call 0x1C17D08
	020 Call 0x1C17F10
	021 Move X19, X0
	022 Move X0, 0xDC5000
	023 Move X0, [X0+648]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X19
	027 Move X2, X31
	028 Call InvalidOperationException..ctor, X0, X1
	029 Move X0, 0xDD2000
	030 Move X0, [X0+1480]
	031 Call 0x1C17D08
	032 Move X1, X0
	033 Move X0, X19
	034 Call 0x1C17DEC

