Type: System.Collections.SortedList/SortedListEnumerator

Method: System.Void .ctor(System.Collections.SortedList sortedList, System.Int32 index, System.Int32 count, System.Int32 getObjRetType)

Disassembly:
	0x03355540 MOV X1, X31
	0x03355544 BL 0x33E14E4
	0x03355548 CBNZ X20, 0x3355560
	0x0335554C MOV X0, X21
	0x03355550 LDP X20, X19, [X31 + 0x20]
	0x03355554 LDP X30, X21, [X31 + 0x10]
	0x03355558 ADD X31, X31, 0x30
	0x0335555C RET
	0x03355560 MOV X0, X20
	0x03355564 BL 0x1C16F18
	0x03355568 BL 0x1C16F20
	0x0335556C B 0x3355574
	0x03355570 B 0x3355574
	0x03355574 MOV X21, X0
	0x03355578 CMP W1, 0x1
	0x0335557C B.NE 0x3355598
	0x03355580 MOV X0, X21
	0x03355584 BL 0x3EB1AD0
	0x03355588 LDR X20, [X0]
	0x0335558C BL 0x3EB1AE0
	0x03355590 MOV X21, X31
	0x03355594 B 0x3355534
	0x03355598 MOV X20, X31
	0x0335559C B 0x33555A4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, X1
	008 Move X1, X31
	009 Move W19, W4
	010 Move W22, W3
	011 Move W23, W2
	012 Move X20, X0
	013 Call Object..ctor, X0
	014 Add W8, W22, W23
	015 Move [X20+16], X21
	016 Move [X20+40], W23
	017 Move [X20+44], W23
	018 Move [X20+48], W8
	019 Compare X21, 0
	020 JumpIfEqual {32}
	021 Move W8, [X21+36]
	022 Move [X20+60], W19
	023 Move [X20+56], W31
	024 Move X22, [X31+16]
	025 Move X21, [X31+24]
	026 Move [X20+52], W8
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X30, [X31+48]
	030 Move X23, [X31+56]
	031 Return 
	032 Call 0x1C17F20

Method: System.Object Clone()

Disassembly:
	0x03356C74 LDR W8, [X19 + 0x18]
	0x03356C78 CMP W8, 0x1

ISIL:
	001 Move X1, X31
	002 Call Object.MemberwiseClone, X0
	003 Return X0

Method: System.Object get_Key()

Disassembly:
	0x03356C7C CBZ X0, 0x3356D08
	0x03356C80 B.LT 0x3356D58
	0x03356C84 MOV W23, W20
	0x03356C88 MOV X22, X0
	0x03356C8C MOV X21, X31
	0x03356C90 MOVN W24, 0x0
	0x03356C94 UBFM X25, X23, 0x20, 0x1F
	0x03356C98 MOVZ X26, 0x1
	0x03356C9C LDR X9, [X19 + 0x10]
	0x03356CA0 CBZ X9, 0x3356D74
	0x03356CA4 LDR W10, [X9 + 0x18]
	0x03356CA8 ADD W8, W8, W24
	0x03356CAC CMP W8, W10
	0x03356CB0 B.CS 0x3356D70
	0x03356CB4 ADD X8, X9, W8, 0x3, SXTW
	0x03356CB8 LDR X20, [X8 + 0x20]
	0x03356CBC CBZ X20, 0x3356CD4
	0x03356CC0 LDR X8, [X22]
	0x03356CC4 MOV X0, X20
	0x03356CC8 LDR X1, [X8 + 0x40]
	0x03356CCC BL 0x1C16E00
	0x03356CD0 CBZ X0, 0x3356D78
	0x03356CD4 LDR W8, [X22 + 0x18]
	0x03356CD8 ADD X9, X23, X21
	0x03356CDC CMP X9, X8
	0x03356CE0 B.CS 0x3356D70
	0x03356CE4 ADD X8, X22, X25, 0x1D, ASR
	0x03356CE8 STR X20, [X8 + 0x20]
	0x03356CEC LDRSW X8, [X19 + 0x18]
	0x03356CF0 ADD X21, X21, 0x1
	0x03356CF4 SUB W24, W24, 0x1
	0x03356CF8 ADD X25, X25, X26
	0x03356CFC CMP X21, X8
	0x03356D00 B.LT 0x3356C9C
	0x03356D04 B 0x3356D58
	0x03356D08 B.LT 0x3356D58
	0x03356D0C MOV W22, W31
	0x03356D10 MOVN W23, 0x0
	0x03356D14 LDR X9, [X19 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+16]
	004 Compare X8, 0
	005 JumpIfEqual {16}
	006 Move W9, [X0+52]
	007 Move W8, [X8+36]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move W8, [X0+56]
	010 Compare W8, 0
	011 JumpIfEqual {24}
	012 Move X0, [X0+24]
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Return X0
	016 Call 0x1C17F20
	017 Move X0, 0xD9E000
	018 Move X0, [X0+1456]
	019 Call 0x1C17D08
	020 Call 0x1C17F10
	021 Move X19, X0
	022 Move X0, 0xDC8000
	023 Move X0, [X0+648]
	024 Move X0, 0xD9E000
	025 Move X0, [X0+1456]
	026 Call 0x1C17D08
	027 Call 0x1C17F10
	028 Move X19, X0
	029 Move X0, 0xDC8000
	030 Move X0, [X0+656]
	031 Call 0x1C17D08
	032 Move X1, X0
	033 Move X0, X19
	034 Move X2, X31
	035 Call InvalidOperationException..ctor, X0, X1
	036 Move X0, 0xDD5000
	037 Move X0, [X0+1160]
	038 Call 0x1C17D08
	039 Move X1, X0
	040 Move X0, X19
	041 Call 0x1C17DEC

Method: System.Boolean MoveNext()

Disassembly:
	0x03356D18 CBZ X9, 0x3356D74
	0x03356D1C LDR W10, [X9 + 0x18]
	0x03356D20 ADD W8, W8, W23
	0x03356D24 CMP W8, W10
	0x03356D28 B.CS 0x3356D70
	0x03356D2C ADD X8, X9, W8, 0x3, SXTW
	0x03356D30 LDR X1, [X8 + 0x20]
	0x03356D34 ADD W2, W20, W22
	0x03356D38 MOV X0, X21
	0x03356D3C MOV X3, X31
	0x03356D40 BL 0x339F798
	0x03356D44 LDR W8, [X19 + 0x18]
	0x03356D48 ADD W22, W22, 0x1
	0x03356D4C SUB W23, W23, 0x1
	0x03356D50 CMP W8, W22
	0x03356D54 B.GT 0x3356D14
	0x03356D58 LDP X20, X19, [X31 + 0x40]
	0x03356D5C LDP X22, X21, [X31 + 0x30]
	0x03356D60 LDP X24, X23, [X31 + 0x20]
	0x03356D64 LDP X26, X25, [X31 + 0x10]
	0x03356D68 LDR X30, [X31], #0x50
	0x03356D6C RET
	0x03356D70 BL 0x1C16F28
	0x03356D74 BL 0x1C16F20
	0x03356D78 BL 0x1C16F44
	0x03356D7C MOV X1, X31
	0x03356D80 BL 0x1C16DEC
	0x03356D84 ADRP X0, 0xDA2000
	0x03356D88 LDR X0, [X0 + 0x528]
	0x03356D8C BL 0x1C16D08
	0x03356D90 BL 0x1C16F10
	0x03356D94 MOV X19, X0
	0x03356D98 ADRP X0, 0xDC5000
	0x03356D9C LDR X0, [X0 + 0x640]
	0x03356DA0 BL 0x1C16D08
	0x03356DA4 MOV X1, X0
	0x03356DA8 MOV X0, X19
	0x03356DAC MOV X2, X31
	0x03356DB0 BL 0x330E100
	0x03356DB4 B 0x3356E78
	0x03356DB8 ADRP X0, 0xDA5000
	0x03356DBC LDR X0, [X0 + 0x578]
	0x03356DC0 BL 0x1C16D08
	0x03356DC4 BL 0x1C16F10
	0x03356DC8 MOV X19, X0
	0x03356DCC ADRP X0, 0xDC6000
	0x03356DD0 LDR X0, [X0 + 0x308]
	0x03356DD4 BL 0x1C16D08
	0x03356DD8 MOV X20, X0
	0x03356DDC ADRP X0, 0xDC5000
	0x03356DE0 LDR X0, [X0 + 0x640]
	0x03356DE4 BL 0x1C16D08
	0x03356DE8 MOV X2, X0
	0x03356DEC MOV X0, X19
	0x03356DF0 MOV X1, X20
	0x03356DF4 MOV X3, X31
	0x03356DF8 BL 0x330E16C
	0x03356DFC B 0x3356E78

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X10, [X0+16]
	004 Compare X10, 0
	005 JumpIfEqual {40}
	006 Move W8, [X0+52]
	007 Move W9, [X10+36]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 NotImplemented "Instruction LDRSW not yet implemented."
	010 Move W9, [X0+48]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X11, [X10+16]
	013 Compare X11, 0
	014 JumpIfEqual {40}
	015 Move W12, [X11+24]
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Add X11, X11, X8
	018 Move X11, [X11+32]
	019 Move [X0+24], X11
	020 Move X10, [X10+24]
	021 Compare X10, 0
	022 JumpIfEqual {40}
	023 Move W11, [X10+24]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Add X10, X10, X8
	026 Move X10, [X10+32]
	027 Add W11, W8, 1
	028 Move W12, 1
	029 Move [X0+40], W11
	030 Move [X0+32], X10
	031 Move [X0+56], W12
	032 Move [X0+56], W31
	033 Move [X0+24], X31
	034 Move [X0+32], X31
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Move X30, [X31+16]
	038 Move X19, [X31+24]
	039 Return X0
	040 Call 0x1C17F20
	041 Move X0, 0xD9E000
	042 Move X0, [X0+1456]
	043 Call 0x1C17D08
	044 Call 0x1C17F10
	045 Move X19, X0
	046 Move X0, 0xDC8000
	047 Move X0, [X0+648]
	048 Call 0x1C17D08
	049 Move X1, X0
	050 Move X0, X19
	051 Move X2, X31
	052 Call InvalidOperationException..ctor, X0, X1
	053 Move X0, 0xDD5000
	054 Move X0, [X0+1168]
	055 Call 0x1C17D08
	056 Move X1, X0
	057 Move X0, X19
	058 Call 0x1C17DEC
	059 Call 0x1C17F28

Method: System.Collections.DictionaryEntry get_Entry()

Disassembly:
	0x03356E00 ADRP X0, 0xDA5000
	0x03356E04 LDR X0, [X0 + 0x760]
	0x03356E08 BL 0x1C16D08
	0x03356E0C BL 0x1C16F10
	0x03356E10 MOV X19, X0
	0x03356E14 ADRP X0, 0xDA8000
	0x03356E18 LDR X0, [X0 + 0x130]
	0x03356E1C BL 0x1C16D08
	0x03356E20 MOV X20, X0
	0x03356E24 ADRP X0, 0xDC5000
	0x03356E28 LDR X0, [X0 + 0x670]
	0x03356E2C BL 0x1C16D08
	0x03356E30 MOV X2, X0
	0x03356E34 MOV X0, X19
	0x03356E38 MOV X1, X20
	0x03356E3C MOV X3, X31
	0x03356E40 BL 0x3311888
	0x03356E44 B 0x3356E78
	0x03356E48 ADRP X0, 0xDA5000
	0x03356E4C LDR X0, [X0 + 0x578]
	0x03356E50 BL 0x1C16D08
	0x03356E54 BL 0x1C16F10
	0x03356E58 MOV X19, X0
	0x03356E5C ADRP X0, 0xDC5000
	0x03356E60 LDR X0, [X0 + 0x760]
	0x03356E64 BL 0x1C16D08
	0x03356E68 MOV X1, X0
	0x03356E6C MOV X0, X19
	0x03356E70 MOV X2, X31
	0x03356E74 BL 0x3314A68
	0x03356E78 ADRP X0, 0xDD4000
	0x03356E7C LDR X0, [X0 + 0x538]
	0x03356E80 BL 0x1C16D08
	0x03356E84 MOV X1, X0
	0x03356E88 MOV X0, X19
	0x03356E8C BL 0x1C16DEC
	0x03356E90 STP X30, X21, [X31 - 0x20]!
	0x03356E94 STP X20, X19, [X31 + 0x10]
	0x03356E98 ADRP X20, 0x1086000
	0x03356E9C ADRP X21, 0xDD4000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+16]
	004 Compare X8, 0
	005 JumpIfEqual {18}
	006 Move W9, [X0+52]
	007 Move W8, [X8+36]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move W8, [X0+56]
	010 Compare W8, 0
	011 JumpIfEqual {26}
	012 Move X8, [X0+24]
	013 Move X1, [X0+32]
	014 Move X0, X8
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Return X0
	018 Call 0x1C17F20
	019 Move X0, 0xD9E000
	020 Move X0, [X0+1456]
	021 Call 0x1C17D08
	022 Call 0x1C17F10
	023 Move X19, X0
	024 Move X0, 0xDC8000
	025 Move X0, [X0+648]
	026 Move X0, 0xD9E000
	027 Move X0, [X0+1456]
	028 Call 0x1C17D08
	029 Call 0x1C17F10
	030 Move X19, X0
	031 Move X0, 0xDC8000
	032 Move X0, [X0+656]
	033 Call 0x1C17D08
	034 Move X1, X0
	035 Move X0, X19
	036 Move X2, X31
	037 Call InvalidOperationException..ctor, X0, X1
	038 Move X0, 0xDD5000
	039 Move X0, [X0+1176]
	040 Call 0x1C17D08
	041 Move X1, X0
	042 Move X0, X19
	043 Call 0x1C17DEC

Method: System.Object get_Current()

Disassembly:
	0x03356EA0 LDRB W8, [X20 + 0xDEB]
	0x03356EA4 LDR X21, [X21 + 0x540]
	0x03356EA8 MOV X19, X0
	0x03356EAC TBNZ X8, 0x0, 0x3356EC4
	0x03356EB0 ADRP X0, 0xDD4000
	0x03356EB4 LDR X0, [X0 + 0x540]
	0x03356EB8 BL 0x1C16CF4
	0x03356EBC MOVZ W8, 0x1
	0x03356EC0 STRB W8, [X20 + 0xDEB]
	0x03356EC4 LDR X0, [X21]
	0x03356EC8 BL 0x1C16F10
	0x03356ECC MOV X1, X19
	0x03356ED0 MOV X20, X0
	0x03356ED4 BL 0x3356EE8
	0x03356ED8 MOV X0, X20
	0x03356EDC LDP X20, X19, [X31 + 0x10]
	0x03356EE0 LDP X30, X21, [X31], #0x20
	0x03356EE4 RET
	0x03356EE8 STR X30, [X31 - 0x20]!
	0x03356EEC STP X20, X19, [X31 + 0x10]
	0x03356EF0 MOV X20, X1
	0x03356EF4 MOV X1, X31
	0x03356EF8 MOV X19, X0
	0x03356EFC BL 0x33BDD8C
	0x03356F00 STR X20, [X19 + 0x10]
	0x03356F04 CBZ X20, 0x3356F24
	0x03356F08 LDR W8, [X20 + 0x1C]
	0x03356F0C MOVN W9, 0x1
	0x03356F10 STR X31, [X19 + 0x20]
	0x03356F14 STP W9, W8, [X19 + 0x18]
	0x03356F18 LDP X20, X19, [X31 + 0x10]
	0x03356F1C LDR X30, [X31], #0x20
	0x03356F20 RET
	0x03356F24 BL 0x1C16F20
	0x03356F28 STP X30, X19, [X31 - 0x10]!
	0x03356F2C LDR W9, [X0 + 0x18]
	0x03356F30 CBZ W9, 0x3356F5C
	0x03356F34 LDR X8, [X0 + 0x10]
	0x03356F38 CBZ X8, 0x3356FA4
	0x03356F3C LDR W10, [X8 + 0x18]
	0x03356F40 SUB W9, W9, 0x1
	0x03356F44 CMP W9, W10
	0x03356F48 B.CS 0x3356FA8
	0x03356F4C ADD X8, X8, W9, 0x3, SXTW
	0x03356F50 LDR X0, [X8 + 0x20]
	0x03356F54 LDP X30, X19, [X31], #0x10
	0x03356F58 RET
	0x03356F5C ADRP X0, 0xD9D000
	0x03356F60 LDR X0, [X0 + 0x5B0]
	0x03356F64 BL 0x1C16D08
	0x03356F68 BL 0x1C16F10
	0x03356F6C MOV X19, X0

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0x1087000
	006 Move W8, [X20+3554]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xDA6000
	013 Move X0, [X0+3856]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3554], W8
	017 Move W8, [X19+56]
	018 Compare W8, 0
	019 JumpIfEqual {37}
	020 Move W8, [X19+60]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X0, [X19+24]
	024 Move X0, [X19+32]
	025 Move X8, 0xDA6000
	026 NotImplemented "Instruction LDUR not yet implemented."
	027 Move X8, [X8+3856]
	028 Add X1, X31, 0
	029 Move [X31], V0
	030 Move X0, [X8]
	031 Call 0x1C17E04
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X30, [X31+16]
	035 Add X31, X31, 48
	036 Return X0
	037 Move X0, 0xD9E000
	038 Move X0, [X0+1456]
	039 Call 0x1C17D08
	040 Call 0x1C17F10
	041 Move X19, X0
	042 Move X0, 0xDC8000
	043 Move X0, [X0+656]
	044 Call 0x1C17D08
	045 Move X1, X0
	046 Move X0, X19
	047 Move X2, X31
	048 Call InvalidOperationException..ctor, X0, X1
	049 Move X0, 0xDD5000
	050 Move X0, [X0+1184]
	051 Call 0x1C17D08
	052 Move X1, X0
	053 Move X0, X19
	054 Call 0x1C17DEC

Method: System.Object get_Value()

Disassembly:
	0x03356F70 ADRP X0, 0xDC7000
	0x03356F74 LDR X0, [X0 + 0x308]
	0x03356F78 BL 0x1C16D08
	0x03356F7C MOV X1, X0
	0x03356F80 MOV X0, X19
	0x03356F84 MOV X2, X31
	0x03356F88 BL 0x337DF1C
	0x03356F8C ADRP X0, 0xDD4000
	0x03356F90 LDR X0, [X0 + 0x548]
	0x03356F94 BL 0x1C16D08
	0x03356F98 MOV X1, X0
	0x03356F9C MOV X0, X19
	0x03356FA0 BL 0x1C16DEC
	0x03356FA4 BL 0x1C16F20
	0x03356FA8 BL 0x1C16F28
	0x03356FAC STP X30, X19, [X31 - 0x10]!
	0x03356FB0 LDR W9, [X0 + 0x18]
	0x03356FB4 CBZ W9, 0x3356FF0
	0x03356FB8 LDR W10, [X0 + 0x1C]
	0x03356FBC LDR X8, [X0 + 0x10]
	0x03356FC0 SUB W9, W9, 0x1
	0x03356FC4 ADD W10, W10, 0x1
	0x03356FC8 STP W9, W10, [X0 + 0x18]
	0x03356FCC CBZ X8, 0x3357038
	0x03356FD0 LDR W10, [X8 + 0x18]
	0x03356FD4 CMP W9, W10
	0x03356FD8 B.CS 0x335703C
	0x03356FDC ADD X8, X8, W9, 0x3, SXTW
	0x03356FE0 LDR X0, [X8 + 0x20]
	0x03356FE4 STR X31, [X8 + 0x20]
	0x03356FE8 LDP X30, X19, [X31], #0x10
	0x03356FEC RET
	0x03356FF0 ADRP X0, 0xD9D000
	0x03356FF4 LDR X0, [X0 + 0x5B0]
	0x03356FF8 BL 0x1C16D08
	0x03356FFC BL 0x1C16F10
	0x03357000 MOV X19, X0
	0x03357004 ADRP X0, 0xDC6000
	0x03357008 LDR X0, [X0 + 0x308]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+16]
	004 Compare X8, 0
	005 JumpIfEqual {16}
	006 Move W9, [X0+52]
	007 Move W8, [X8+36]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move W8, [X0+56]
	010 Compare W8, 0
	011 JumpIfEqual {24}
	012 Move X0, [X0+32]
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Return X0
	016 Call 0x1C17F20
	017 Move X0, 0xD9E000
	018 Move X0, [X0+1456]
	019 Call 0x1C17D08
	020 Call 0x1C17F10
	021 Move X19, X0
	022 Move X0, 0xDC8000
	023 Move X0, [X0+648]
	024 Move X0, 0xD9E000
	025 Move X0, [X0+1456]
	026 Call 0x1C17D08
	027 Call 0x1C17F10
	028 Move X19, X0
	029 Move X0, 0xDC8000
	030 Move X0, [X0+656]
	031 Call 0x1C17D08
	032 Move X1, X0
	033 Move X0, X19
	034 Move X2, X31
	035 Call InvalidOperationException..ctor, X0, X1
	036 Move X0, 0xDD5000
	037 Move X0, [X0+1192]
	038 Call 0x1C17D08
	039 Move X1, X0
	040 Move X0, X19
	041 Call 0x1C17DEC

Method: System.Void Reset()

Disassembly:
	0x0335700C BL 0x1C16D08
	0x03357010 MOV X1, X0
	0x03357014 MOV X0, X19
	0x03357018 MOV X2, X31
	0x0335701C BL 0x337DF1C
	0x03357020 ADRP X0, 0xDD3000
	0x03357024 LDR X0, [X0 + 0x550]
	0x03357028 BL 0x1C16D08
	0x0335702C MOV X1, X0
	0x03357030 MOV X0, X19
	0x03357034 BL 0x1C16DEC
	0x03357038 BL 0x1C16F20
	0x0335703C BL 0x1C16F28
	0x03357040 STR X30, [X31 - 0x30]!
	0x03357044 STP X22, X21, [X31 + 0x10]
	0x03357048 STP X20, X19, [X31 + 0x20]
	0x0335704C ADRP X21, 0x1085000
	0x03357050 LDRB W8, [X21 + 0xDEC]
	0x03357054 MOV X19, X1
	0x03357058 MOV X20, X0
	0x0335705C TBNZ X8, 0x0, 0x3357074
	0x03357060 ADRP X0, 0xD9C000
	0x03357064 LDR X0, [X0 + 0x9D0]
	0x03357068 BL 0x1C16CF4
	0x0335706C MOVZ W8, 0x1
	0x03357070 STRB W8, [X21 + 0xDEC]
	0x03357074 LDR X21, [X20 + 0x10]
	0x03357078 CBZ X21, 0x3357130
	0x0335707C LDR W22, [X20 + 0x18]
	0x03357080 LDR W8, [X21 + 0x18]
	0x03357084 CMP W22, W8
	0x03357088 B.NE 0x33570E0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+16]
	004 Compare X8, 0
	005 JumpIfEqual {17}
	006 Move W9, [X0+52]
	007 Move W8, [X8+36]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move W8, [X0+44]
	010 Move [X0+56], W31
	011 Move [X0+24], X31
	012 Move [X0+32], X31
	013 Move [X0+40], W8
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Return 
	017 Call 0x1C17F20
	018 Move X0, 0xD9D000
	019 Move X0, [X0+1456]
	020 Call 0x1C17D08
	021 Call 0x1C17F10
	022 Move X19, X0
	023 Move X0, 0xDC7000
	024 Move X0, [X0+648]
	025 Call 0x1C17D08
	026 Move X1, X0
	027 Move X0, X19
	028 Move X2, X31
	029 Call InvalidOperationException..ctor, X0, X1
	030 Move X0, 0xDD4000
	031 Move X0, [X0+1200]
	032 Call 0x1C17D08
	033 Move X1, X0
	034 Move X0, X19
	035 Call 0x1C17DEC

