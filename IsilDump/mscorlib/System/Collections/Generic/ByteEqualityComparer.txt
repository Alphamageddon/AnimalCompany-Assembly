Type: System.Collections.Generic.ByteEqualityComparer

Method: System.Boolean Equals(System.Byte x, System.Byte y)

Disassembly:
	0x0335ED7C BL 0x337B498
	0x0335ED80 ADRP X0, 0xDCC000
	0x0335ED84 LDR X0, [X0 + 0x8E0]
	0x0335ED88 BL 0x1C16D08

ISIL:
	001 And W8, W1, 255
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Int32 GetHashCode(System.Byte b)

Disassembly:
	0x0335ED8C MOV X1, X0
	0x0335ED90 MOV X0, X19
	0x0335ED94 BL 0x1C16DEC
	0x0335ED98 STP X30, X19, [X31 - 0x10]!
	0x0335ED9C ADRP X0, 0xD9D000
	0x0335EDA0 LDR X0, [X0 + 0xC08]
	0x0335EDA4 BL 0x1C16D08

ISIL:
	001 Move [X31-16], X30
	002 Move [X31+12], W1
	003 Add X0, X31, 12
	004 Move X1, X31
	005 Call Byte.GetHashCode, X0
	006 Move X30, [X31+16]
	007 Return X0

Method: System.Int32 IndexOf(System.Byte[] array, System.Byte value, System.Int32 startIndex, System.Int32 count)

Disassembly:
	0x0335EDA8 BL 0x1C16F10
	0x0335EDAC MOV X19, X0
	0x0335EDB0 ADRP X0, 0xDCC000
	0x0335EDB4 LDR X0, [X0 + 0x878]
	0x0335EDB8 BL 0x1C16D08
	0x0335EDBC MOV X1, X0
	0x0335EDC0 MOV X0, X19
	0x0335EDC4 MOV X2, X31
	0x0335EDC8 BL 0x337B498
	0x0335EDCC ADRP X0, 0xDCC000
	0x0335EDD0 LDR X0, [X0 + 0x8E8]
	0x0335EDD4 BL 0x1C16D08
	0x0335EDD8 MOV X1, X0
	0x0335EDDC MOV X0, X19
	0x0335EDE0 BL 0x1C16DEC
	0x0335EDE4 STP X30, X23, [X31 - 0x30]!
	0x0335EDE8 STP X22, X21, [X31 + 0x10]
	0x0335EDEC STP X20, X19, [X31 + 0x20]
	0x0335EDF0 ADRP X22, 0x107E000
	0x0335EDF4 ADRP X23, 0xD9E000
	0x0335EDF8 LDRB W8, [X22 + 0xE2B]
	0x0335EDFC LDR X23, [X23 + 0x9E8]
	0x0335EE00 MOV X19, X2
	0x0335EE04 MOV X20, X1
	0x0335EE08 MOV X21, X0
	0x0335EE0C TBNZ X8, 0x0, 0x335EE24
	0x0335EE10 ADRP X0, 0xD9E000
	0x0335EE14 LDR X0, [X0 + 0x9E8]
	0x0335EE18 BL 0x1C16CF4
	0x0335EE1C MOVZ W8, 0x1
	0x0335EE20 STRB W8, [X22 + 0xE2B]
	0x0335EE24 LDR X0, [X23]
	0x0335EE28 LDR W8, [X0 + 0xE0]
	0x0335EE2C CBNZ W8, 0x335EE34
	0x0335EE30 BL 0x1C16DFC
	0x0335EE34 MOV X0, X21
	0x0335EE38 MOV X1, X20
	0x0335EE3C MOV X2, X19
	0x0335EE40 LDP X20, X19, [X31 + 0x20]
	0x0335EE44 LDP X22, X21, [X31 + 0x10]
	0x0335EE48 MOV X3, X31
	0x0335EE4C LDP X30, X23, [X31], #0x30
	0x0335EE50 B 0x3318718
	0x0335EE54 STR X30, [X31 - 0x20]!
	0x0335EE58 STP X20, X19, [X31 + 0x10]
	0x0335EE5C ADRP X19, 0x107E000
	0x0335EE60 ADRP X20, 0xDC8000
	0x0335EE64 LDRB W8, [X19 + 0xE2C]
	0x0335EE68 LDR X20, [X20 + 0x538]
	0x0335EE6C TBNZ X8, 0x0, 0x335EE84
	0x0335EE70 ADRP X0, 0xDC8000
	0x0335EE74 LDR X0, [X0 + 0x538]
	0x0335EE78 BL 0x1C16CF4
	0x0335EE7C MOVZ W8, 0x1
	0x0335EE80 STRB W8, [X19 + 0xE2C]
	0x0335EE84 LDR X0, [X20]
	0x0335EE88 BL 0x1C16F10
	0x0335EE8C MOV X1, X31
	0x0335EE90 MOV X19, X0
	0x0335EE94 BL 0x33BDD8C
	0x0335EE98 LDR X8, [X20]
	0x0335EE9C LDR X8, [X8 + 0xB8]
	0x0335EEA0 STR X19, [X8]
	0x0335EEA4 LDP X20, X19, [X31 + 0x10]
	0x0335EEA8 LDR X30, [X31], #0x20
	0x0335EEAC RET
	0x0335EEB0 STR X30, [X31 - 0x20]!
	0x0335EEB4 STP X20, X19, [X31 + 0x10]
	0x0335EEB8 MOVZ X8, 0x4000
	0x0335EEBC MOVK X8, 0xF4370000
	0x0335EEC0 MOVK X8, 0x2875
	0x0335EEC4 MOVK X8, 0x2BCA0000
	0x0335EEC8 CMP X1, X8
	0x0335EECC B.CS 0x335EEE0
	0x0335EED0 LDP X20, X19, [X31 + 0x10]
	0x0335EED4 STR X1, [X0]
	0x0335EED8 LDR X30, [X31], #0x20
	0x0335EEDC RET
	0x0335EEE0 ADRP X0, 0xD9D000
	0x0335EEE4 LDR X0, [X0 + 0x760]
	0x0335EEE8 BL 0x1C16D08
	0x0335EEEC BL 0x1C16F10
	0x0335EEF0 MOV X19, X0
	0x0335EEF4 ADRP X0, 0xDCC000
	0x0335EEF8 LDR X0, [X0 + 0x8F0]
	0x0335EEFC BL 0x1C16D08
	0x0335EF00 MOV X20, X0
	0x0335EF04 ADRP X0, 0xDCC000
	0x0335EF08 LDR X0, [X0 + 0x8F8]
	0x0335EF0C BL 0x1C16D08
	0x0335EF10 MOV X2, X0
	0x0335EF14 MOV X0, X19
	0x0335EF18 MOV X1, X20
	0x0335EF1C MOV X3, X31
	0x0335EF20 BL 0x3311888
	0x0335EF24 ADRP X0, 0xDCC000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {38}
	006 Move TEMP, X3
	007 And TEMP, TEMP, -2147483648
	008 Compare TEMP, -2147483648
	009 JumpIfEqual {56}
	010 Move TEMP, X4
	011 And TEMP, TEMP, -2147483648
	012 Compare TEMP, -2147483648
	013 JumpIfEqual {69}
	014 Move W8, [X1+24]
	015 Subtract W9, W8, W3
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Compare W4, 0
	018 JumpIfEqual {31}
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Add X9, X1, 32
	022 NotImplemented "Instruction CMP not yet implemented."
	023 NotImplemented "Instruction CSEL not yet implemented."
	024 Move W1, W2
	025 Move W2, W3
	026 Move W3, W4
	027 Move X4, X31
	028 Move X30, [X31+32]
	029 Call Buffer.IndexOfByte, X0, X1, X2, X3
	030 Return X0
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move TEMP, 0
	034 Not TEMP
	035 Move W0, TEMP
	036 Move X30, [X31+32]
	037 Return X0
	038 Move X0, 0xD9B000
	039 Move X0, [X0+1320]
	040 Call 0x1C17D08
	041 Call 0x1C17F10
	042 Move X19, X0
	043 Move X0, 0xDBE000
	044 Move X0, [X0+1600]
	045 Call 0x1C17D08
	046 Move X1, X0
	047 Move X0, X19
	048 Move X2, X31
	049 Call ArgumentNullException..ctor, X0, X1
	050 Move X0, 0xDCD000
	051 Move X0, [X0+2088]
	052 Call 0x1C17D08
	053 Move X1, X0
	054 Move X0, X19
	055 Call 0x1C17DEC
	056 Move X0, 0xDBE000
	057 Move X0, [X0+1632]
	058 Call 0x1C17D08
	059 Move X1, X31
	060 Call Environment.GetResourceString, X0
	061 Move X19, X0
	062 Move X0, 0xD9E000
	063 Move X0, [X0+1888]
	064 Call 0x1C17D08
	065 Call 0x1C17F10
	066 Move X20, X0
	067 Move X0, 0xDBE000
	068 Move X0, [X0+1624]
	069 Move X0, 0xDBE000
	070 Move X0, [X0+1616]
	071 Call 0x1C17D08
	072 Move X1, X31
	073 Call Environment.GetResourceString, X0
	074 Move X19, X0
	075 Move X0, 0xD9E000
	076 Move X0, [X0+1888]
	077 Call 0x1C17D08
	078 Call 0x1C17F10
	079 Move X20, X0
	080 Move X0, 0xDBE000
	081 Move X0, [X0+1608]
	082 Call 0x1C17D08
	083 Move X1, X0
	084 Move X0, X20
	085 Move X2, X19
	086 Move X3, X31
	087 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	088 Move X0, 0xDBE000
	089 Move X0, [X0+1888]
	090 Call 0x1C17D08
	091 Move X1, X31
	092 Call Environment.GetResourceString, X0
	093 Move X19, X0
	094 Move X0, 0xD9E000
	095 Move X0, [X0+1400]
	096 Call 0x1C17D08
	097 Call 0x1C17F10
	098 Move X1, X19
	099 Move X2, X31
	100 Move X20, X0
	101 Call ArgumentException..ctor, X0, X1
	102 Move X0, 0xDCD000
	103 Move X0, [X0+2088]
	104 Call 0x1C17D08
	105 Move X1, X0
	106 Move X0, X20
	107 Call 0x1C17DEC

Method: System.Int32 LastIndexOf(System.Byte[] array, System.Byte value, System.Int32 startIndex, System.Int32 count)

Disassembly:
	0x0335EF28 LDR X0, [X0 + 0x900]
	0x0335EF2C BL 0x1C16D08
	0x0335EF30 MOV X1, X0
	0x0335EF34 MOV X0, X19
	0x0335EF38 BL 0x1C16DEC
	0x0335EF3C STR X1, [X0]
	0x0335EF40 RET
	0x0335EF44 STR X30, [X31 - 0x20]!
	0x0335EF48 STP X20, X19, [X31 + 0x10]
	0x0335EF4C MOVZ X8, 0x4000
	0x0335EF50 MOVK X8, 0xF4370000
	0x0335EF54 MOVK X8, 0x2875
	0x0335EF58 MOVK X8, 0x2BCA0000
	0x0335EF5C CMP X1, X8
	0x0335EF60 B.CS 0x335EF80
	0x0335EF64 CMP W2, 0x3
	0x0335EF68 B.CS 0x335EFC8
	0x0335EF6C LDP X20, X19, [X31 + 0x10]
	0x0335EF70 ORR X8, X1, X2, 0x3E
	0x0335EF74 STR X8, [X0]
	0x0335EF78 LDR X30, [X31], #0x20
	0x0335EF7C RET

ISIL:
	001 Move [X31-16], X30
	002 Subtract W8, W3, W4
	003 Add W8, W8, 1
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Compare X1, 0
	006 JumpIfEqual {21}
	007 Move W9, [X1+24]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Add X10, X1, W3
	010 Move W10, [X10+32]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Subtract W3, W3, 1
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move TEMP, 0
	015 Not TEMP
	016 Move W3, TEMP
	017 Move W0, W3
	018 Move X30, [X31+16]
	019 Return X0
	020 Call 0x1C17F28
	021 Call 0x1C17F20

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x0335EF80 ADRP X0, 0xD9D000
	0x0335EF84 LDR X0, [X0 + 0x760]
	0x0335EF88 BL 0x1C16D08
	0x0335EF8C BL 0x1C16F10
	0x0335EF90 MOV X19, X0
	0x0335EF94 ADRP X0, 0xDCC000
	0x0335EF98 LDR X0, [X0 + 0x8F0]
	0x0335EF9C BL 0x1C16D08
	0x0335EFA0 MOV X20, X0
	0x0335EFA4 ADRP X0, 0xDCC000
	0x0335EFA8 LDR X0, [X0 + 0x8F8]
	0x0335EFAC BL 0x1C16D08
	0x0335EFB0 MOV X2, X0
	0x0335EFB4 MOV X0, X19
	0x0335EFB8 MOV X1, X20
	0x0335EFBC MOV X3, X31
	0x0335EFC0 BL 0x3311888
	0x0335EFC4 B 0x335F00C
	0x0335EFC8 ADRP X0, 0xD9D000
	0x0335EFCC LDR X0, [X0 + 0x578]
	0x0335EFD0 BL 0x1C16D08
	0x0335EFD4 BL 0x1C16F10
	0x0335EFD8 MOV X19, X0
	0x0335EFDC ADRP X0, 0xDCC000
	0x0335EFE0 LDR X0, [X0 + 0x908]
	0x0335EFE4 BL 0x1C16D08
	0x0335EFE8 MOV X20, X0
	0x0335EFEC ADRP X0, 0xDCC000
	0x0335EFF0 LDR X0, [X0 + 0x910]
	0x0335EFF4 BL 0x1C16D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x107F000
	005 Move W8, [X20+3616]
	006 Move X19, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xDC1000
	012 Move X0, [X0+3184]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3616], W8
	016 Compare X19, 0
	017 JumpIfEqual {25}
	018 Move X8, 0xDC1000
	019 Move X8, [X8+3184]
	020 Move X9, [X19]
	021 Move X8, [X8]
	022 Move W11, [X9+304]
	023 Move W10, [X8+304]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W0, W31
	026 Move X9, [X9+200]
	027 Add X9, X9, X10
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction CSET not yet implemented."
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x0335EFF8 MOV X2, X0
	0x0335EFFC MOV X0, X19
	0x0335F000 MOV X1, X20
	0x0335F004 MOV X3, X31
	0x0335F008 BL 0x330E16C
	0x0335F00C ADRP X0, 0xDCB000
	0x0335F010 LDR X0, [X0 + 0x918]
	0x0335F014 BL 0x1C16D08
	0x0335F018 MOV X1, X0
	0x0335F01C MOV X0, X19
	0x0335F020 BL 0x1C16DEC
	0x0335F024 STR X30, [X31 - 0x20]!
	0x0335F028 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move X1, X31
	003 Call "il2cpp_vm_object_is_inst", X0
	004 Compare X0, 0
	005 JumpIfEqual {17}
	006 Move X8, [X0]
	007 Move X9, [X8+424]
	008 Move X1, [X8+432]
	009 NotImplemented "Instruction BLR not yet implemented."
	010 Compare X0, 0
	011 JumpIfEqual {17}
	012 Move X8, [X0]
	013 Move X2, [X8+344]
	014 Move X1, [X8+352]
	015 Move X30, [X31+16]
	016 CallNoReturn X2
	017 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x0335F02C MOVZ X8, 0x4000
	0x0335F030 MOVK X8, 0xF4370000
	0x0335F034 MOVK X8, 0x2875
	0x0335F038 MOVK X8, 0x2BCA0000
	0x0335F03C CMP X1, X8
	0x0335F040 B.CS 0x335F068
	0x0335F044 ANDS W31, W3, 0x1
	0x0335F048 MOVZ X8, 0x80000000
	0x0335F04C MOVZ X9, 0xC0000000
	0x0335F050 LDP X20, X19, [X31 + 0x10]
	0x0335F054 CSEL X8, X9, X8, NE
	0x0335F058 ORR X8, X8, X1, 0x0
	0x0335F05C STR X8, [X0]
	0x0335F060 LDR X30, [X31], #0x20
	0x0335F064 RET
	0x0335F068 ADRP X0, 0xD9C000
	0x0335F06C LDR X0, [X0 + 0x760]
	0x0335F070 BL 0x1C16D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x107E000
	006 Move X21, 0xDCC000
	007 Move W8, [X20+3617]
	008 Move X21, [X21+2096]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDCC000
	015 Move X0, [X0+2096]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3617], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Call EqualityComparer`1<Byte>..ctor, X0
	026 Return 

