Type: System.Collections.Generic.Stack`1/Enumerator

Method: System.Void .ctor(System.Collections.Generic.Stack`1<T> stack)

Disassembly:
	0x02BB68C0 STUR X31, [X0 + 0x1C]
	0x02BB68C4 STR W8, [X0 + 0x10]
	0x02BB68C8 STR V0, [X0]
	0x02BB68CC STUR X31, [X0 + 0x14]
	0x02BB68D0 RET
	0x02BB68D4 RET
	0x02BB68D8 STR X30, [X31 - 0x30]!
	0x02BB68DC STP X22, X21, [X31 + 0x10]
	0x02BB68E0 STP X20, X19, [X31 + 0x20]
	0x02BB68E4 LDR W8, [X0 + 0x10]
	0x02BB68E8 LDR W20, [X0 + 0x8]
	0x02BB68EC MOV X19, X0
	0x02BB68F0 ADD W21, W8, 0x1
	0x02BB68F4 CMP W21, W20
	0x02BB68F8 STR W21, [X0 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move [X0], X1
	003 Compare X1, 0
	004 JumpIfEqual {22}
	005 Move W8, [X1+28]
	006 Move TEMP, 1
	007 Not TEMP
	008 Move W9, TEMP
	009 NotImplemented "Instruction MOVI not yet implemented."
	010 Move [X0+16], V0
	011 Move [X0+24], V0
	012 Move [X0+48], V0
	013 Move [X0+56], V0
	014 Move [X0+80], V0
	015 Move [X0+88], V0
	016 Move [X0+7], V0
	017 Move [X0+8], W8
	018 Move [X0+12], W9
	019 Move [X0+128], X31
	020 Move X30, [X31+16]
	021 Return 
	022 Call 0x1C17F20

Method: System.Void Dispose()

Disassembly:
	0x02BB68FC B.GE 0x2BB6920
	0x02BB6900 LDR X0, [X1 + 0x20]
	0x02BB6904 LDR X22, [X19]

ISIL:
	001 Move TEMP, 0
	002 Not TEMP
	003 Move W8, TEMP
	004 Move [X0+12], W8
	005 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x02BB6908 LDRB W8, [X0 + 0x135]
	0x02BB690C TBNZ X8, 0x0, 0x2BB6914
	0x02BB6910 BL 0x1C5C684
	0x02BB6914 LDR V0, [X22, W21, SXTW]
	0x02BB6918 STUR V0, [X19 + 0x14]
	0x02BB691C B 0x2BB6928
	0x02BB6920 STUR X31, [X19 + 0x1C]
	0x02BB6924 STUR X31, [X19 + 0x14]
	0x02BB6928 CMP W21, W20
	0x02BB692C LDP X20, X19, [X31 + 0x20]
	0x02BB6930 LDP X22, X21, [X31 + 0x10]
	0x02BB6934 CSET W0, LT
	0x02BB6938 LDR X30, [X31], #0x30
	0x02BB693C RET
	0x02BB6940 MOVN W8, 0x0
	0x02BB6944 STR W8, [X0 + 0x10]
	0x02BB6948 RET
	0x02BB694C LDP S0, S1, [X0 + 0x14]
	0x02BB6950 LDP S2, S3, [X0 + 0x1C]
	0x02BB6954 RET
	0x02BB6958 SUB X31, X31, 0x30
	0x02BB695C STR X30, [X31 + 0x10]
	0x02BB6960 STP X20, X19, [X31 + 0x20]
	0x02BB6964 LDR X8, [X1 + 0x20]
	0x02BB6968 MOV X19, X0
	0x02BB696C ADD X9, X8, 0x135
	0x02BB6970 LDRH W9, [X9]
	0x02BB6974 TBNZ X9, 0x0, 0x2BB6990
	0x02BB6978 MOV X0, X8
	0x02BB697C MOV X20, X1
	0x02BB6980 BL 0x1C5C684
	0x02BB6984 LDR X8, [X20 + 0x20]
	0x02BB6988 ADD X9, X8, 0x135
	0x02BB698C LDRH W9, [X9]
	0x02BB6990 LDUR V0, [X19 + 0x14]
	0x02BB6994 STR V0, [X31]
	0x02BB6998 TBNZ X9, 0x0, 0x2BB69A8
	0x02BB699C MOV X0, X8
	0x02BB69A0 BL 0x1C5C684
	0x02BB69A4 MOV X8, X0
	0x02BB69A8 LDR X8, [X8 + 0xC0]
	0x02BB69AC ADD X1, X31, 0x0
	0x02BB69B0 LDR X0, [X8 + 0x18]
	0x02BB69B4 BL 0x1C16E04
	0x02BB69B8 LDP X20, X19, [X31 + 0x20]
	0x02BB69BC LDR X30, [X31 + 0x10]
	0x02BB69C0 ADD X31, X31, 0x30
	0x02BB69C4 RET
	0x02BB69C8 LDR V0, [X1]
	0x02BB69CC MOVN W8, 0x0
	0x02BB69D0 STUR X31, [X0 + 0x1C]
	0x02BB69D4 STR W8, [X0 + 0x10]
	0x02BB69D8 STR V0, [X0]
	0x02BB69DC STUR X31, [X0 + 0x14]
	0x02BB69E0 RET
	0x02BB69E4 RET
	0x02BB69E8 STR X30, [X31 - 0x30]!
	0x02BB69EC STP X22, X21, [X31 + 0x10]
	0x02BB69F0 STP X20, X19, [X31 + 0x20]
	0x02BB69F4 LDR W8, [X0 + 0x10]
	0x02BB69F8 LDR W20, [X0 + 0x8]
	0x02BB69FC MOV X19, X0
	0x02BB6A00 ADD W21, W8, 0x1
	0x02BB6A04 CMP W21, W20
	0x02BB6A08 STR W21, [X0 + 0x10]
	0x02BB6A0C B.GE 0x2BB6A30
	0x02BB6A10 LDR X0, [X1 + 0x20]
	0x02BB6A14 LDR X22, [X19]
	0x02BB6A18 LDRB W8, [X0 + 0x135]
	0x02BB6A1C TBNZ X8, 0x0, 0x2BB6A24
	0x02BB6A20 BL 0x1C5C684
	0x02BB6A24 LDR V0, [X22, W21, SXTW]
	0x02BB6A28 STUR V0, [X19 + 0x14]
	0x02BB6A2C B 0x2BB6A38
	0x02BB6A30 STUR X31, [X19 + 0x1C]
	0x02BB6A34 STUR X31, [X19 + 0x14]
	0x02BB6A38 CMP W21, W20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0]
	005 Compare X8, 0
	006 JumpIfEqual {70}
	007 Move W9, [X0+8]
	008 Move W10, [X8+28]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move W10, [X0+12]
	011 Add W31, W10, 1
	012 Add W31, W10, 2
	013 Move W19, [X8+24]
	014 Subtract W9, W19, 1
	015 Move [X0+12], W9
	016 Move TEMP, X9
	017 And TEMP, TEMP, -2147483648
	018 Compare TEMP, -2147483648
	019 JumpIfEqual {31}
	020 Move X8, [X8+16]
	021 Compare X8, 0
	022 JumpIfEqual {70}
	023 Move W10, [X8+24]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W10, 120
	026 NotImplemented "Instruction UMADDL not yet implemented."
	027 Add X1, X8, 32
	028 Add X0, X0, 16
	029 Move W2, 120
	030 Call 0x3EB2B30
	031 Subtract W8, W31, W19
	032 Move W0, W8
	033 ShiftRight W0, 31
	034 And W0, W0, 0x7FFFFFFF
	035 Move W0, W31
	036 Subtract W9, W10, 1
	037 Subtract W19, W31, W10
	038 Move [X0+12], W9
	039 Move TEMP, X9
	040 And TEMP, TEMP, -2147483648
	041 Compare TEMP, -2147483648
	042 JumpIfEqual {54}
	043 Move X8, [X8+16]
	044 Compare X8, 0
	045 JumpIfEqual {70}
	046 Move W10, [X8+24]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move W10, 120
	049 NotImplemented "Instruction UMADDL not yet implemented."
	050 Add X1, X8, 32
	051 Add X0, X0, 16
	052 Move W2, 120
	053 Call 0x3EB2B30
	054 NotImplemented "Instruction MOVI not yet implemented."
	055 Move [X0+128], X31
	056 Move [X0+96], V0
	057 Move [X0+104], V0
	058 Move [X0+64], V0
	059 Move [X0+72], V0
	060 Move [X0+32], V0
	061 Move [X0+40], V0
	062 Move [X0+1], V0
	063 Move W0, W19
	064 ShiftRight W0, 31
	065 And W0, W0, 0x7FFFFFFF
	066 Move X20, [X31+16]
	067 Move X19, [X31+24]
	068 Move X30, [X31+32]
	069 Return X0
	070 Call 0x1C17F20
	071 Move X0, 0x153E000
	072 Move X0, [X0+1456]
	073 Move X19, X1
	074 Call 0x1C17D08
	075 Call 0x1C17F10
	076 Move X20, X0
	077 Move X0, 0x1568000
	078 Move X0, [X0+648]
	079 Call 0x1C17D08
	080 Move X1, X0
	081 Move X0, X20
	082 Move X2, X31
	083 Call InvalidOperationException..ctor, X0, X1
	084 Move X0, X20
	085 Move X1, X19
	086 Call 0x1C17DEC
	087 Call 0x1C17F28

Method: T get_Current()

Disassembly:
	0x02BB6A3C LDP X20, X19, [X31 + 0x20]
	0x02BB6A40 LDP X22, X21, [X31 + 0x10]
	0x02BB6A44 CSET W0, LT
	0x02BB6A48 LDR X30, [X31], #0x30
	0x02BB6A4C RET
	0x02BB6A50 MOVN W8, 0x0
	0x02BB6A54 STR W8, [X0 + 0x10]
	0x02BB6A58 RET
	0x02BB6A5C LDP S0, S1, [X0 + 0x14]
	0x02BB6A60 LDP S2, S3, [X0 + 0x1C]
	0x02BB6A64 RET
	0x02BB6A68 SUB X31, X31, 0x30
	0x02BB6A6C STR X30, [X31 + 0x10]
	0x02BB6A70 STP X20, X19, [X31 + 0x20]
	0x02BB6A74 LDR X8, [X1 + 0x20]
	0x02BB6A78 MOV X19, X0
	0x02BB6A7C ADD X9, X8, 0x135

ISIL:
	001 Move [X31-16], X30
	002 Move W9, [X0+12]
	003 Move TEMP, X9
	004 And TEMP, TEMP, -2147483648
	005 Compare TEMP, -2147483648
	006 JumpIfEqual {13}
	007 Add X1, X0, 16
	008 Move W2, 120
	009 Move X0, X8
	010 Move X30, [X31+16]
	011 Call 0x3EB2AC0
	012 Return X0
	013 Move [X31+8], X0
	014 Move X0, [X1+32]
	015 Move W8, [X0+309]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {21}
	020 Call 0x1C5D684
	021 Move X8, [X0+192]
	022 Move X0, [X31+8]
	023 Move X1, [X8+32]
	024 Call 0x2BB6A80, X0

Method: System.Void ThrowEnumerationNotStartedOrEnded()

Disassembly:
	0x02BB6A80 LDRH W9, [X9]
	0x02BB6A84 TBNZ X9, 0x0, 0x2BB6AA0
	0x02BB6A88 MOV X0, X8
	0x02BB6A8C MOV X20, X1
	0x02BB6A90 BL 0x1C5C684
	0x02BB6A94 LDR X8, [X20 + 0x20]
	0x02BB6A98 ADD X9, X8, 0x135
	0x02BB6A9C LDRH W9, [X9]
	0x02BB6AA0 LDUR V0, [X19 + 0x14]
	0x02BB6AA4 STR V0, [X31]
	0x02BB6AA8 TBNZ X9, 0x0, 0x2BB6AB8
	0x02BB6AAC MOV X0, X8
	0x02BB6AB0 BL 0x1C5C684
	0x02BB6AB4 MOV X8, X0
	0x02BB6AB8 LDR X8, [X8 + 0xC0]
	0x02BB6ABC ADD X1, X31, 0x0
	0x02BB6AC0 LDR X0, [X8 + 0x18]
	0x02BB6AC4 BL 0x1C16E04
	0x02BB6AC8 LDP X20, X19, [X31 + 0x20]
	0x02BB6ACC LDR X30, [X31 + 0x10]
	0x02BB6AD0 ADD X31, X31, 0x30
	0x02BB6AD4 RET
	0x02BB6AD8 STR X30, [X31 - 0x10]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+12]
	006 Move X9, 0x1569000
	007 Move X10, 0x1569000
	008 Move X9, [X9+3136]
	009 Move X10, [X10+3144]
	010 Add W31, W8, 2
	011 Move X19, X1
	012 NotImplemented "Instruction CSEL not yet implemented."
	013 Call 0x1C17D08
	014 Move X20, X0
	015 Move X0, 0x153E000
	016 Move X0, [X0+1456]
	017 Call 0x1C17D08
	018 Call 0x1C17F10
	019 Move X1, X20
	020 Move X2, X31
	021 Move X21, X0
	022 Call InvalidOperationException..ctor, X0, X1
	023 Move X0, X21
	024 Move X1, X19
	025 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x02BB6ADC STR X1, [X0]
	0x02BB6AE0 STR W31, [X0 + 0x8]
	0x02BB6AE4 CBZ X1, 0x2BB6B00
	0x02BB6AE8 LDR W8, [X1 + 0x1C]
	0x02BB6AEC STP X31, X31, [X0 + 0x18]
	0x02BB6AF0 STR X31, [X0 + 0x10]
	0x02BB6AF4 STR W8, [X0 + 0xC]
	0x02BB6AF8 LDR X30, [X31], #0x10
	0x02BB6AFC RET
	0x02BB6B00 BL 0x1C16F20
	0x02BB6B04 RET
	0x02BB6B08 STP X30, X19, [X31 - 0x10]!
	0x02BB6B0C LDR X9, [X0]
	0x02BB6B10 CBZ X9, 0x2BB6B98
	0x02BB6B14 LDR W8, [X0 + 0xC]
	0x02BB6B18 LDR W10, [X9 + 0x1C]
	0x02BB6B1C MOV X19, X0
	0x02BB6B20 CMP W8, W10
	0x02BB6B24 B.NE 0x2BB6B74
	0x02BB6B28 LDRSW X8, [X19 + 0x8]
	0x02BB6B2C LDR W10, [X9 + 0x18]
	0x02BB6B30 CMP W8, W10
	0x02BB6B34 B.CS 0x2BB6B74
	0x02BB6B38 LDR X9, [X9 + 0x10]
	0x02BB6B3C CBZ X9, 0x2BB6B98
	0x02BB6B40 LDR W10, [X9 + 0x18]
	0x02BB6B44 CMP W8, W10
	0x02BB6B48 B.CS 0x2BB6B9C
	0x02BB6B4C MOVZ W10, 0x18
	0x02BB6B50 MADD X9, X8, X10, X9
	0x02BB6B54 LDR X10, [X9 + 0x30]
	0x02BB6B58 LDR V0, [X9 + 0x2]

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+240], X29
	003 Move [X31+248], X30
	004 Move [X31+256], X20
	005 Move [X31+264], X19
	006 Move X8, [X1+32]
	007 Move X19, X1
	008 Move X20, X0
	009 Move W9, [X8+309]
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X8
	015 Call 0x1C5D684
	016 Move X8, X0
	017 Move X8, [X8+192]
	018 Move X0, X20
	019 Move X1, [X8+48]
	020 Add X8, X31, 120
	021 Call 0x2BB6A3C, X0
	022 Add X0, X31, 0
	023 Add X1, X31, 120
	024 Move W2, 120
	025 Call 0x3EB2AC0
	026 Move X0, [X19+32]
	027 Move W8, [X0+309]
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {33}
	032 Call 0x1C5D684
	033 Move X8, [X0+192]
	034 Add X1, X31, 0
	035 Move X0, [X8+16]
	036 Call 0x1C17E04
	037 Move X20, [X31+256]
	038 Move X19, [X31+264]
	039 Move X29, [X31+240]
	040 Move X30, [X31+248]
	041 Add X31, X31, 272
	042 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x02BB6B5C ADD W8, W8, 0x1
	0x02BB6B60 STR W8, [X19 + 0x8]
	0x02BB6B64 STR X10, [X19 + 0x20]
	0x02BB6B68 STR V0, [X19 + 0x1]
	0x02BB6B6C MOVZ W0, 0x1
	0x02BB6B70 B 0x2BB6B90
	0x02BB6B74 LDR X0, [X1 + 0x20]
	0x02BB6B78 LDRB W8, [X0 + 0x135]
	0x02BB6B7C TBNZ X8, 0x0, 0x2BB6B84
	0x02BB6B80 BL 0x1C5C684
	0x02BB6B84 MOV X0, X19
	0x02BB6B88 BL 0x2BB6BA0
	0x02BB6B8C MOV W0, W31
	0x02BB6B90 LDP X30, X19, [X31], #0x10
	0x02BB6B94 RET
	0x02BB6B98 BL 0x1C16F20
	0x02BB6B9C BL 0x1C16F28
	0x02BB6BA0 STP X30, X19, [X31 - 0x10]!
	0x02BB6BA4 LDR X8, [X0]
	0x02BB6BA8 CBZ X8, 0x2BB6BF0
	0x02BB6BAC LDR W9, [X0 + 0xC]
	0x02BB6BB0 LDR W10, [X8 + 0x1C]
	0x02BB6BB4 MOV X19, X0
	0x02BB6BB8 CMP W9, W10
	0x02BB6BBC B.EQ 0x2BB6BD0
	0x02BB6BC0 MOV X0, X31
	0x02BB6BC4 BL 0x339E09C
	0x02BB6BC8 LDR X8, [X19]
	0x02BB6BCC CBZ X8, 0x2BB6BF0
	0x02BB6BD0 LDR W8, [X8 + 0x18]
	0x02BB6BD4 STP X31, X31, [X19 + 0x18]
	0x02BB6BD8 STR X31, [X19 + 0x10]
	0x02BB6BDC MOV W0, W31
	0x02BB6BE0 ADD W8, W8, 0x1
	0x02BB6BE4 STR W8, [X19 + 0x8]
	0x02BB6BE8 LDP X30, X19, [X31], #0x10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0]
	005 Compare X8, 0
	006 JumpIfEqual {27}
	007 Move W9, [X0+8]
	008 Move W8, [X8+28]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X20, [X31+16]
	011 Move X19, [X31+24]
	012 Move TEMP, 1
	013 Not TEMP
	014 Move W8, TEMP
	015 NotImplemented "Instruction MOVI not yet implemented."
	016 Move [X0+12], W8
	017 Move [X0+16], V0
	018 Move [X0+24], V0
	019 Move [X0+48], V0
	020 Move [X0+56], V0
	021 Move [X0+80], V0
	022 Move [X0+88], V0
	023 Move [X0+7], V0
	024 Move [X0+128], X31
	025 Move X30, [X31+32]
	026 Return 
	027 Call 0x1C17F20
	028 Move X0, 0x153E000
	029 Move X0, [X0+1456]
	030 Move X19, X1
	031 Call 0x1C17D08
	032 Call 0x1C17F10
	033 Move X20, X0
	034 Move X0, 0x1568000
	035 Move X0, [X0+648]
	036 Call 0x1C17D08
	037 Move X1, X0
	038 Move X0, X20
	039 Move X2, X31
	040 Call InvalidOperationException..ctor, X0, X1
	041 Move X0, X20
	042 Move X1, X19
	043 Call 0x1C17DEC

