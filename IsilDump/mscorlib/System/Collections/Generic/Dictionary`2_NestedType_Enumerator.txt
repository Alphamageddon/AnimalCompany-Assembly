Type: System.Collections.Generic.Dictionary`2/Enumerator

Method: System.Void .ctor(System.Collections.Generic.Dictionary`2<TKey, TValue> dictionary, System.Int32 getEnumeratorRetType)

Disassembly:
	0x02BE6E24 CSET W0, CC
	0x02BE6E28 LDP X30, X19, [X31], #0x10
	0x02BE6E2C RET
	0x02BE6E30 BL 0x1C16F20
	0x02BE6E34 BL 0x1C16F28
	0x02BE6E38 LDR V0, [X0 + 0x10]
	0x02BE6E3C RET
	0x02BE6E40 STR X30, [X31 - 0x20]!
	0x02BE6E44 STP X20, X19, [X31 + 0x10]
	0x02BE6E48 LDR W8, [X0 + 0x8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X0], X1
	003 Compare X1, 0
	004 JumpIfEqual {13}
	005 Move W8, [X1+44]
	006 Move [X0+32], W2
	007 Move [X0+16], X31
	008 Move [X0+24], X31
	009 Move [X0+8], W8
	010 Move [X0+12], W31
	011 Move X30, [X31+16]
	012 Return 
	013 Call 0x1C17F20

Method: System.Boolean MoveNext()

Disassembly:
	0x02BE6E4C MOV X20, X0
	0x02BE6E50 MOV X19, X1
	0x02BE6E54 CBZ W8, 0x2BE6E70
	0x02BE6E58 LDR X9, [X20]
	0x02BE6E5C CBZ X9, 0x2BE6EAC
	0x02BE6E60 LDR W9, [X9 + 0x20]
	0x02BE6E64 ADD W9, W9, 0x1
	0x02BE6E68 CMP W8, W9
	0x02BE6E6C B.NE 0x2BE6E78
	0x02BE6E70 MOV X0, X31
	0x02BE6E74 BL 0x339E0E8
	0x02BE6E78 LDR V0, [X20 + 0x10]
	0x02BE6E7C STR S0, [X31 + 0xC]
	0x02BE6E80 LDR X0, [X19 + 0x20]
	0x02BE6E84 LDRB W8, [X0 + 0x135]
	0x02BE6E88 TBNZ X8, 0x0, 0x2BE6E90
	0x02BE6E8C BL 0x1C5C684
	0x02BE6E90 LDR X8, [X0 + 0xC0]
	0x02BE6E94 ADD X1, X31, 0xC
	0x02BE6E98 LDR X0, [X8 + 0x10]
	0x02BE6E9C BL 0x1C16E04
	0x02BE6EA0 LDP X20, X19, [X31 + 0x10]
	0x02BE6EA4 LDR X30, [X31], #0x20
	0x02BE6EA8 RET
	0x02BE6EAC BL 0x1C16F20
	0x02BE6EB0 STP X30, X19, [X31 - 0x10]!
	0x02BE6EB4 LDR X8, [X0]
	0x02BE6EB8 CBZ X8, 0x2BE6EE8
	0x02BE6EBC LDR W9, [X0 + 0xC]
	0x02BE6EC0 LDR W8, [X8 + 0x2C]
	0x02BE6EC4 MOV X19, X0
	0x02BE6EC8 CMP W9, W8
	0x02BE6ECC B.EQ 0x2BE6ED8
	0x02BE6ED0 MOV X0, X31
	0x02BE6ED4 BL 0x339E09C
	0x02BE6ED8 STR W31, [X19 + 0x8]
	0x02BE6EDC STR W31, [X19 + 0x10]
	0x02BE6EE0 LDP X30, X19, [X31], #0x10
	0x02BE6EE4 RET
	0x02BE6EE8 BL 0x1C16F20
	0x02BE6EEC STR X30, [X31 - 0x10]!
	0x02BE6EF0 STR X1, [X0]
	0x02BE6EF4 CBZ X1, 0x2BE6F1C
	0x02BE6EF8 LDR W8, [X1 + 0x2C]
	0x02BE6EFC MOVI V0.2D, 0x0
	0x02BE6F00 STR W2, [X0 + 0x60]
	0x02BE6F04 STP V0, V0, [X0 + 0x10]
	0x02BE6F08 STP V0, V0, [X0 + 0x30]
	0x02BE6F0C STP W8, W31, [X0 + 0x8]
	0x02BE6F10 STR V0, [X0 + 0x5]
	0x02BE6F14 LDR X30, [X31], #0x10
	0x02BE6F18 RET
	0x02BE6F1C BL 0x1C16F20
	0x02BE6F20 SUB X31, X31, 0x110
	0x02BE6F24 STP X29, X30, [X31 + 0xD0]
	0x02BE6F28 STP X24, X23, [X31 + 0xE0]
	0x02BE6F2C STP X22, X21, [X31 + 0xF0]
	0x02BE6F30 STP X20, X19, [X31 + 0x100]
	0x02BE6F34 LDR X8, [X0]
	0x02BE6F38 CBZ X8, 0x2BE706C
	0x02BE6F3C LDR W9, [X0 + 0x8]
	0x02BE6F40 LDR W10, [X8 + 0x2C]
	0x02BE6F44 MOV X19, X0
	0x02BE6F48 MOV X20, X1
	0x02BE6F4C CMP W9, W10
	0x02BE6F50 B.EQ 0x2BE6F64
	0x02BE6F54 MOV X0, X31
	0x02BE6F58 BL 0x339E09C

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X8, [X0]
	010 Compare X8, 0
	011 JumpIfEqual {80}
	012 Move W9, [X0+8]
	013 Move W10, [X8+44]
	014 Move X19, X0
	015 Move X20, X1
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move X0, X31
	018 Call ThrowHelper.ThrowInvalidOperationException_InvalidOperation_EnumFailedVersion
	019 Move X8, [X19]
	020 Compare X8, 0
	021 JumpIfEqual {80}
	022 Move W11, [X19+12]
	023 Move W22, [X8+32]
	024 Move W9, 24
	025 Move W23, W11
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X10, [X8+24]
	028 Add W11, W23, 1
	029 Move [X19+12], W11
	030 Compare X10, 0
	031 JumpIfEqual {80}
	032 Move W12, [X10+24]
	033 Subtract W11, W11, 1
	034 NotImplemented "Instruction CMP not yet implemented."
	035 NotImplemented "Instruction SMADDL not yet implemented."
	036 Move W12, [X12+32]
	037 Add W11, W11, 1
	038 Move TEMP, X12
	039 And TEMP, TEMP, -2147483648
	040 Compare TEMP, -2147483648
	041 JumpIfEqual {25}
	042 Move X8, W23
	043 Move W9, 24
	044 NotImplemented "Instruction MADD not yet implemented."
	045 Move X21, [X8+40]
	046 Move W24, [X8+48]
	047 Move [X31], X31
	048 Move [X31+8], X31
	049 Move X0, [X20+32]
	050 Move W8, [X0+309]
	051 Move TEMP, X8
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfEqual {56}
	055 Call 0x1C5D684
	056 Move X8, [X0+192]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 NotImplemented "Instruction CSET not yet implemented."
	059 Add X0, X31, 0
	060 Move X3, [X8+56]
	061 Move X1, X21
	062 Call 0x2EDDDAC, X0, X1, X2
	063 Move V0, [X31]
	064 Move [X19+1], V0
	065 Add W8, W22, 1
	066 Move [X19+12], W8
	067 Move [X19+16], X31
	068 Move [X19+24], X31
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X20, [X31+64]
	071 Move X19, [X31+72]
	072 Move X22, [X31+48]
	073 Move X21, [X31+56]
	074 Move X24, [X31+32]
	075 Move X23, [X31+40]
	076 Move X30, [X31+16]
	077 NotImplemented "Instruction CSET not yet implemented."
	078 Add X31, X31, 80
	079 Return X0
	080 Call 0x1C17F20
	081 Call 0x1C17F28

Method: System.Collections.Generic.KeyValuePair`2<TKey, TValue> get_Current()

Disassembly:
	0x02BE6F5C LDR X8, [X19]
	0x02BE6F60 CBZ X8, 0x2BE706C
	0x02BE6F64 LDR W11, [X19 + 0xC]

ISIL:
	001 Move X8, [X0+16]
	002 Move X1, [X0+24]
	003 Move X0, X8
	004 Return X0

Method: System.Void Dispose()

Disassembly:
	0x02BE6F68 LDR W23, [X8 + 0x20]

ISIL:
	001 Return 

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x02BE6F6C MOVZ W10, 0x58
	0x02BE6F70 MOV W24, W11
	0x02BE6F74 CMP W11, W23
	0x02BE6F78 B.CS 0x2BE7034
	0x02BE6F7C LDR X9, [X8 + 0x18]
	0x02BE6F80 ADD W11, W24, 0x1
	0x02BE6F84 STR W11, [X19 + 0xC]
	0x02BE6F88 CBZ X9, 0x2BE706C
	0x02BE6F8C LDR W12, [X9 + 0x18]
	0x02BE6F90 SUB W11, W11, 0x1
	0x02BE6F94 CMP W11, W12
	0x02BE6F98 B.CS 0x2BE7070
	0x02BE6F9C SMADDL X12, X24, X10, X9
	0x02BE6FA0 LDR W12, [X12 + 0x20]
	0x02BE6FA4 ADD W11, W11, 0x1
	0x02BE6FA8 TBNZ X12, 0x1F, 0x2BE6F70
	0x02BE6FAC SXTW X8, W24
	0x02BE6FB0 MOVZ W10, 0x58
	0x02BE6FB4 MADD X8, X8, X10, X9
	0x02BE6FB8 LDUR V1, [X8 + 0x38]
	0x02BE6FBC LDUR V2, [X8 + 0x48]
	0x02BE6FC0 LDUR V3, [X8 + 0x58]
	0x02BE6FC4 LDUR V4, [X8 + 0x68]
	0x02BE6FC8 MOVI V0.2D, 0x0
	0x02BE6FCC LDP X21, X22, [X8 + 0x28]
	0x02BE6FD0 STP V0, V0, [X31 + 0x70]
	0x02BE6FD4 STP V0, V0, [X31 + 0x50]
	0x02BE6FD8 STP V3, V4, [X31 + 0x20]
	0x02BE6FDC STP V1, V2, [X31]
	0x02BE6FE0 STR V0, [X31 + 0x4]
	0x02BE6FE4 LDR X0, [X20 + 0x20]
	0x02BE6FE8 LDRB W8, [X0 + 0x135]
	0x02BE6FEC TBNZ X8, 0x0, 0x2BE6FF4
	0x02BE6FF0 BL 0x1C5C684
	0x02BE6FF4 LDR X8, [X0 + 0xC0]
	0x02BE6FF8 LDP V0, V1, [X31]
	0x02BE6FFC LDP V2, V3, [X31 + 0x20]
	0x02BE7000 ADD X0, X31, 0x40
	0x02BE7004 LDR X4, [X8 + 0x38]
	0x02BE7008 ADD X3, X31, 0x90
	0x02BE700C MOV X1, X21
	0x02BE7010 MOV X2, X22
	0x02BE7014 STP V0, V1, [X31 + 0x90]
	0x02BE7018 STP V2, V3, [X31 + 0xB0]
	0x02BE701C BL 0x2EDD048
	0x02BE7020 ADD X0, X19, 0x10
	0x02BE7024 ADD X1, X31, 0x40
	0x02BE7028 MOVZ W2, 0x50
	0x02BE702C BL 0x3EB1AC0
	0x02BE7030 B 0x2BE704C
	0x02BE7034 ADD W8, W23, 0x1
	0x02BE7038 MOVI V0.2D, 0x0
	0x02BE703C STR W8, [X19 + 0xC]
	0x02BE7040 STP V0, V0, [X19 + 0x10]
	0x02BE7044 STP V0, V0, [X19 + 0x30]
	0x02BE7048 STR V0, [X19 + 0x5]
	0x02BE704C CMP W24, W23
	0x02BE7050 LDP X20, X19, [X31 + 0x100]
	0x02BE7054 LDP X22, X21, [X31 + 0xF0]
	0x02BE7058 LDP X24, X23, [X31 + 0xE0]
	0x02BE705C LDP X29, X30, [X31 + 0xD0]
	0x02BE7060 CSET W0, CC
	0x02BE7064 ADD X31, X31, 0x110
	0x02BE7068 RET
	0x02BE706C BL 0x1C16F20
	0x02BE7070 BL 0x1C16F28
	0x02BE7074 ADD X1, X0, 0x10
	0x02BE7078 MOVZ W2, 0x50
	0x02BE707C MOV X0, X8
	0x02BE7080 B 0x3EB1AC0
	0x02BE7084 RET
	0x02BE7088 SUB X31, X31, 0x140
	0x02BE708C STR X29, [X31 + 0x100]
	0x02BE7090 STP X30, X23, [X31 + 0x110]
	0x02BE7094 STP X22, X21, [X31 + 0x120]
	0x02BE7098 STP X20, X19, [X31 + 0x130]
	0x02BE709C ADRP X21, 0x17F4000
	0x02BE70A0 LDRB W8, [X21 + 0x5FC]
	0x02BE70A4 MOV X19, X1
	0x02BE70A8 MOV X20, X0
	0x02BE70AC TBNZ X8, 0x0, 0x2BE70C4
	0x02BE70B0 ADRP X0, 0x1514000
	0x02BE70B4 LDR X0, [X0 + 0xF10]
	0x02BE70B8 BL 0x1C16CF4
	0x02BE70BC MOVZ W8, 0x1
	0x02BE70C0 STRB W8, [X21 + 0x5FC]
	0x02BE70C4 LDR W8, [X20 + 0xC]
	0x02BE70C8 CBZ W8, 0x2BE70E4
	0x02BE70CC LDR X9, [X20]
	0x02BE70D0 CBZ X9, 0x2BE7278
	0x02BE70D4 LDR W9, [X9 + 0x20]
	0x02BE70D8 ADD W9, W9, 0x1
	0x02BE70DC CMP W8, W9
	0x02BE70E0 B.NE 0x2BE70EC
	0x02BE70E4 MOV X0, X31
	0x02BE70E8 BL 0x339E0E8
	0x02BE70EC LDR X0, [X19 + 0x20]
	0x02BE70F0 LDR W23, [X20 + 0x60]
	0x02BE70F4 LDRB W8, [X0 + 0x135]
	0x02BE70F8 TBNZ X8, 0x0, 0x2BE7100
	0x02BE70FC BL 0x1C5C684
	0x02BE7100 LDP X22, X21, [X20 + 0x10]
	0x02BE7104 CMP W23, 0x1
	0x02BE7108 B.NE 0x2BE71BC
	0x02BE710C STP X22, X21, [X31]
	0x02BE7110 LDR X0, [X19 + 0x20]
	0x02BE7114 LDRB W8, [X0 + 0x135]
	0x02BE7118 TBNZ X8, 0x0, 0x2BE7120

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X21, 0x17F6000
	008 Move W8, [X21+1530]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x1516000
	016 Move X0, [X0+3856]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+1530], W8
	020 Move W8, [X20+12]
	021 Compare W8, 0
	022 JumpIfEqual {29}
	023 Move X9, [X20]
	024 Compare X9, 0
	025 JumpIfEqual {137}
	026 Move W9, [X9+32]
	027 Add W9, W9, 1
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X0, X31
	030 Call ThrowHelper.ThrowInvalidOperationException_InvalidOperation_EnumOpCantHappen
	031 Move X0, [X19+32]
	032 Move W22, [X20+32]
	033 Move W8, [X0+309]
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {39}
	038 Call 0x1C5D684
	039 Move X21, [X20+16]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move [X31+56], X21
	042 Move X0, [X19+32]
	043 Move W8, [X0+309]
	044 Move TEMP, X8
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {49}
	048 Call 0x1C5D684
	049 Move X8, [X0+192]
	050 Add X1, X31, 56
	051 Move X0, [X8+40]
	052 Call 0x1C17E04
	053 Move X8, [X19+32]
	054 Move X21, X0
	055 Add X9, X8, 309
	056 NotImplemented "Instruction LDRH not yet implemented."
	057 Move TEMP, X9
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfEqual {66}
	061 Move X0, X8
	062 Call 0x1C5D684
	063 Move X8, [X19+32]
	064 Add X9, X8, 309
	065 NotImplemented "Instruction LDRH not yet implemented."
	066 Move W10, [X20+24]
	067 Move [X31+44], W10
	068 Move TEMP, X9
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfEqual {75}
	072 Move X0, X8
	073 Call 0x1C5D684
	074 Move X8, X0
	075 Move X8, [X8+192]
	076 Add X1, X31, 44
	077 Move X0, [X8+48]
	078 Call 0x1C17E04
	079 Move X2, X0
	080 Add X0, X31, 24
	081 Move X1, X21
	082 Move X3, X31
	083 Move [X31+24], X31
	084 Move [X31+32], X31
	085 Call DictionaryEntry..ctor, X0, X1, X2
	086 Move X8, 0x1515000
	087 NotImplemented "Instruction LDUR not yet implemented."
	088 Move X8, [X8+3856]
	089 Move [X31], V0
	090 Move X0, [X8]
	091 Move X0, [X19+32]
	092 Add X8, X0, 309
	093 NotImplemented "Instruction LDRH not yet implemented."
	094 Move TEMP, X8
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfEqual {102}
	098 Call 0x1C5D684
	099 Move X0, [X19+32]
	100 Add X8, X0, 309
	101 NotImplemented "Instruction LDRH not yet implemented."
	102 Move W20, [X20+24]
	103 Move [X31+24], X31
	104 Move [X31+32], X31
	105 Move TEMP, X8
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfEqual {110}
	109 Call 0x1C5D684
	110 Move X8, [X0+192]
	111 NotImplemented "Instruction CMP not yet implemented."
	112 NotImplemented "Instruction CSET not yet implemented."
	113 Add X0, X31, 24
	114 Move X3, [X8+56]
	115 Move X1, X21
	116 Call 0x2EDDDAC, X0, X1, X2
	117 NotImplemented "Instruction LDUR not yet implemented."
	118 Move [X31], V0
	119 Move X0, [X19+32]
	120 Move W8, [X0+309]
	121 Move TEMP, X8
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfEqual {126}
	125 Call 0x1C5D684
	126 Move X8, [X0+192]
	127 Move X0, [X8+16]
	128 Add X1, X31, 0
	129 Call 0x1C17E04
	130 Move X20, [X31+80]
	131 Move X19, [X31+88]
	132 Move X22, [X31+64]
	133 Move X21, [X31+72]
	134 Move X30, [X31+48]
	135 Add X31, X31, 96
	136 Return X0
	137 Call 0x1C17F20

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x02BE711C BL 0x1C5C684
	0x02BE7120 LDR X8, [X0 + 0xC0]
	0x02BE7124 ADD X1, X31, 0x0
	0x02BE7128 LDR X0, [X8 + 0x28]
	0x02BE712C BL 0x1C16E04
	0x02BE7130 LDR X8, [X19 + 0x20]
	0x02BE7134 MOV X21, X0
	0x02BE7138 ADD X9, X8, 0x135
	0x02BE713C LDRH W9, [X9]
	0x02BE7140 TBNZ X9, 0x0, 0x2BE7158
	0x02BE7144 MOV X0, X8
	0x02BE7148 BL 0x1C5C684
	0x02BE714C LDR X8, [X19 + 0x20]
	0x02BE7150 ADD X9, X8, 0x135
	0x02BE7154 LDRH W9, [X9]
	0x02BE7158 LDP V1, V0, [X20 + 0x40]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Compare X8, 0
	005 JumpIfEqual {18}
	006 Move W9, [X0+8]
	007 Move W8, [X8+44]
	008 Move X19, X0
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X0, X31
	011 Call ThrowHelper.ThrowInvalidOperationException_InvalidOperation_EnumFailedVersion
	012 Move [X19+20], X31
	013 Move [X19+12], X31
	014 Move [X19+28], W31
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Return 
	018 Call 0x1C17F20

Method: System.Collections.DictionaryEntry System.Collections.IDictionaryEnumerator.get_Entry()

Disassembly:
	0x02BE715C LDP V3, V2, [X20 + 0x20]
	0x02BE7160 STP V1, V0, [X31 + 0xB0]
	0x02BE7164 STP V3, V2, [X31 + 0x90]
	0x02BE7168 TBNZ X9, 0x0, 0x2BE7178
	0x02BE716C MOV X0, X8
	0x02BE7170 BL 0x1C5C684
	0x02BE7174 MOV X8, X0
	0x02BE7178 LDR X8, [X8 + 0xC0]
	0x02BE717C ADD X1, X31, 0x90
	0x02BE7180 LDR X0, [X8 + 0x30]
	0x02BE7184 BL 0x1C16E04
	0x02BE7188 MOV X2, X0
	0x02BE718C ADD X0, X31, 0xF0
	0x02BE7190 MOV X1, X21
	0x02BE7194 MOV X3, X31
	0x02BE7198 STP X31, X31, [X31 + 0xF0]
	0x02BE719C BL 0x335035C
	0x02BE71A0 ADRP X8, 0x1514000
	0x02BE71A4 LDR V0, [X31 + 0xF]
	0x02BE71A8 LDR X8, [X8 + 0xF10]
	0x02BE71AC ADD X1, X31, 0xE0
	0x02BE71B0 STR V0, [X31 + 0xE]
	0x02BE71B4 LDR X0, [X8]
	0x02BE71B8 B 0x2BE725C
	0x02BE71BC LDR X0, [X19 + 0x20]
	0x02BE71C0 ADD X8, X0, 0x135
	0x02BE71C4 LDRH W8, [X8]
	0x02BE71C8 TBNZ X8, 0x0, 0x2BE71DC
	0x02BE71CC BL 0x1C5C684
	0x02BE71D0 LDR X0, [X19 + 0x20]
	0x02BE71D4 ADD X8, X0, 0x135
	0x02BE71D8 LDRH W8, [X8]
	0x02BE71DC LDP V0, V1, [X20 + 0x20]
	0x02BE71E0 LDP V2, V3, [X20 + 0x40]
	0x02BE71E4 MOVI V4.2D, 0x0
	0x02BE71E8 STP V4, V4, [X31 + 0xC0]
	0x02BE71EC STP V4, V4, [X31 + 0xA0]
	0x02BE71F0 STP V2, V3, [X31 + 0x70]
	0x02BE71F4 STP V0, V1, [X31 + 0x50]
	0x02BE71F8 STR V4, [X31 + 0x9]
	0x02BE71FC TBNZ X8, 0x0, 0x2BE7204
	0x02BE7200 BL 0x1C5C684
	0x02BE7204 LDR X8, [X0 + 0xC0]
	0x02BE7208 LDP V0, V1, [X31 + 0x50]
	0x02BE720C LDP V2, V3, [X31 + 0x70]
	0x02BE7210 ADD X0, X31, 0x90
	0x02BE7214 LDR X4, [X8 + 0x38]
	0x02BE7218 ADD X3, X31, 0x0
	0x02BE721C MOV X1, X22
	0x02BE7220 MOV X2, X21
	0x02BE7224 STP V0, V1, [X31]
	0x02BE7228 STP V2, V3, [X31 + 0x20]
	0x02BE722C BL 0x2EDD048
	0x02BE7230 ADD X0, X31, 0x0
	0x02BE7234 ADD X1, X31, 0x90
	0x02BE7238 MOVZ W2, 0x50
	0x02BE723C BL 0x3EB1AC0
	0x02BE7240 LDR X0, [X19 + 0x20]
	0x02BE7244 LDRB W8, [X0 + 0x135]
	0x02BE7248 TBNZ X8, 0x0, 0x2BE7250
	0x02BE724C BL 0x1C5C684
	0x02BE7250 LDR X8, [X0 + 0xC0]
	0x02BE7254 ADD X1, X31, 0x0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move W8, [X0+12]
	007 Move X19, X0
	008 Move X20, X1
	009 Compare W8, 0
	010 JumpIfEqual {17}
	011 Move X9, [X19]
	012 Compare X9, 0
	013 JumpIfEqual {82}
	014 Move W9, [X9+32]
	015 Add W9, W9, 1
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move X0, X31
	018 Call ThrowHelper.ThrowInvalidOperationException_InvalidOperation_EnumOpCantHappen
	019 Move X0, [X20+32]
	020 Add X8, X0, 309
	021 NotImplemented "Instruction LDRH not yet implemented."
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {30}
	026 Call 0x1C5D684
	027 Move X0, [X20+32]
	028 Add X8, X0, 309
	029 NotImplemented "Instruction LDRH not yet implemented."
	030 Move X9, [X19+16]
	031 Move [X31+8], X9
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {37}
	036 Call 0x1C5D684
	037 Move X8, [X0+192]
	038 Add X1, X31, 8
	039 Move X0, [X8+40]
	040 Call 0x1C17E04
	041 Move X8, [X20+32]
	042 Move X21, X0
	043 Add X9, X8, 309
	044 NotImplemented "Instruction LDRH not yet implemented."
	045 Move TEMP, X9
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {54}
	049 Move X0, X8
	050 Call 0x1C5D684
	051 Move X8, [X20+32]
	052 Add X9, X8, 309
	053 NotImplemented "Instruction LDRH not yet implemented."
	054 Move W10, [X19+24]
	055 Move [X31+4], W10
	056 Move TEMP, X9
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {63}
	060 Move X0, X8
	061 Call 0x1C5D684
	062 Move X8, X0
	063 Move X8, [X8+192]
	064 Add X1, X31, 4
	065 Move X0, [X8+48]
	066 Call 0x1C17E04
	067 Move X2, X0
	068 Add X0, X31, 16
	069 Move X1, X21
	070 Move X3, X31
	071 Move [X31+16], X31
	072 Move [X31+24], X31
	073 Call DictionaryEntry..ctor, X0, X1, X2
	074 Move X0, [X31+16]
	075 Move X1, [X31+24]
	076 Move X20, [X31+48]
	077 Move X19, [X31+56]
	078 Move X30, [X31+32]
	079 Move X21, [X31+40]
	080 Add X31, X31, 64
	081 Return X0
	082 Call 0x1C17F20

Method: System.Object System.Collections.IDictionaryEnumerator.get_Key()

Disassembly:
	0x02BE7258 LDR X0, [X8 + 0x10]
	0x02BE725C BL 0x1C16E04
	0x02BE7260 LDP X20, X19, [X31 + 0x130]
	0x02BE7264 LDP X22, X21, [X31 + 0x120]
	0x02BE7268 LDP X30, X23, [X31 + 0x110]
	0x02BE726C LDR X29, [X31 + 0x100]
	0x02BE7270 ADD X31, X31, 0x140
	0x02BE7274 RET
	0x02BE7278 BL 0x1C16F20
	0x02BE727C STP X30, X19, [X31 - 0x10]!
	0x02BE7280 LDR X8, [X0]
	0x02BE7284 CBZ X8, 0x2BE72C8
	0x02BE7288 LDR W9, [X0 + 0x8]
	0x02BE728C LDR W8, [X8 + 0x2C]
	0x02BE7290 MOV X19, X0
	0x02BE7294 CMP W9, W8
	0x02BE7298 B.EQ 0x2BE72A4
	0x02BE729C MOV X0, X31
	0x02BE72A0 BL 0x339E09C
	0x02BE72A4 MOVI V0.2D, 0x0
	0x02BE72A8 STR W31, [X19 + 0x5C]
	0x02BE72AC STUR V0, [X19 + 0x4C]
	0x02BE72B0 STUR V0, [X19 + 0x3C]
	0x02BE72B4 STUR V0, [X19 + 0x2C]
	0x02BE72B8 STUR V0, [X19 + 0x1C]
	0x02BE72BC STUR V0, [X19 + 0xC]
	0x02BE72C0 LDP X30, X19, [X31], #0x10
	0x02BE72C4 RET
	0x02BE72C8 BL 0x1C16F20
	0x02BE72CC SUB X31, X31, 0x80
	0x02BE72D0 STP X30, X21, [X31 + 0x60]
	0x02BE72D4 STP X20, X19, [X31 + 0x70]
	0x02BE72D8 LDR W8, [X0 + 0xC]
	0x02BE72DC MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+12]
	005 Move X19, X0
	006 Move X20, X1
	007 Compare W8, 0
	008 JumpIfEqual {15}
	009 Move X9, [X19]
	010 Compare X9, 0
	011 JumpIfEqual {43}
	012 Move W9, [X9+32]
	013 Add W9, W9, 1
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X0, X31
	016 Call ThrowHelper.ThrowInvalidOperationException_InvalidOperation_EnumOpCantHappen
	017 Move X0, [X20+32]
	018 Add X8, X0, 309
	019 NotImplemented "Instruction LDRH not yet implemented."
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {28}
	024 Call 0x1C5D684
	025 Move X0, [X20+32]
	026 Add X8, X0, 309
	027 NotImplemented "Instruction LDRH not yet implemented."
	028 Move X9, [X19+16]
	029 Move [X31+8], X9
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {35}
	034 Call 0x1C5D684
	035 Move X8, [X0+192]
	036 Add X1, X31, 8
	037 Move X0, [X8+40]
	038 Call 0x1C17E04
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Return X0
	043 Call 0x1C17F20

Method: System.Object System.Collections.IDictionaryEnumerator.get_Value()

Disassembly:
	0x02BE72E0 MOV X20, X1
	0x02BE72E4 CBZ W8, 0x2BE7300
	0x02BE72E8 LDR X9, [X19]
	0x02BE72EC CBZ X9, 0x2BE73CC
	0x02BE72F0 LDR W9, [X9 + 0x20]
	0x02BE72F4 ADD W9, W9, 0x1
	0x02BE72F8 CMP W8, W9
	0x02BE72FC B.NE 0x2BE7308
	0x02BE7300 MOV X0, X31
	0x02BE7304 BL 0x339E0E8
	0x02BE7308 LDR X0, [X20 + 0x20]
	0x02BE730C ADD X8, X0, 0x135
	0x02BE7310 LDRH W8, [X8]
	0x02BE7314 TBNZ X8, 0x0, 0x2BE7328
	0x02BE7318 BL 0x1C5C684
	0x02BE731C LDR X0, [X20 + 0x20]
	0x02BE7320 ADD X8, X0, 0x135
	0x02BE7324 LDRH W8, [X8]
	0x02BE7328 LDP X9, X10, [X19 + 0x10]
	0x02BE732C STP X9, X10, [X31 + 0x40]
	0x02BE7330 TBNZ X8, 0x0, 0x2BE7338
	0x02BE7334 BL 0x1C5C684
	0x02BE7338 LDR X8, [X0 + 0xC0]
	0x02BE733C ADD X1, X31, 0x40
	0x02BE7340 LDR X0, [X8 + 0x28]
	0x02BE7344 BL 0x1C16E04
	0x02BE7348 LDR X8, [X20 + 0x20]
	0x02BE734C MOV X21, X0
	0x02BE7350 ADD X9, X8, 0x135
	0x02BE7354 LDRH W9, [X9]
	0x02BE7358 TBNZ X9, 0x0, 0x2BE7370
	0x02BE735C MOV X0, X8
	0x02BE7360 BL 0x1C5C684
	0x02BE7364 LDR X8, [X20 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+12]
	005 Move X19, X0
	006 Move X20, X1
	007 Compare W8, 0
	008 JumpIfEqual {15}
	009 Move X9, [X19]
	010 Compare X9, 0
	011 JumpIfEqual {43}
	012 Move W9, [X9+32]
	013 Add W9, W9, 1
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X0, X31
	016 Call ThrowHelper.ThrowInvalidOperationException_InvalidOperation_EnumOpCantHappen
	017 Move X0, [X20+32]
	018 Add X8, X0, 309
	019 NotImplemented "Instruction LDRH not yet implemented."
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {28}
	024 Call 0x1C5D684
	025 Move X0, [X20+32]
	026 Add X8, X0, 309
	027 NotImplemented "Instruction LDRH not yet implemented."
	028 Move W9, [X19+24]
	029 Move [X31+12], W9
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {35}
	034 Call 0x1C5D684
	035 Move X8, [X0+192]
	036 Add X1, X31, 12
	037 Move X0, [X8+48]
	038 Call 0x1C17E04
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Return X0
	043 Call 0x1C17F20

