Type: System.Collections.Generic.LongEnumEqualityComparer`1

Method: System.Boolean Equals(T x, T y)

Disassembly:
	0x03199700 SDIV W10, W8, W21
	0x03199704 MSUB W25, W10, W21, W8
	0x03199708 CMP W25, W9
	0x0319970C B.CS 0x31997A0
	0x03199710 CBZ X23, 0x319979C
	0x03199714 LDR X8, [X19 + 0x20]
	0x03199718 ADD X9, X22, W25, 0x3, SXTW
	0x0319971C ADD X26, X9, 0x20
	0x03199720 LDR X27, [X26]
	0x03199724 LDR X8, [X8 + 0xC0]
	0x03199728 MOVZ W1, 0x8
	0x0319972C LDR X8, [X8 + 0x28]
	0x03199730 LDR X8, [X8 + 0x80]
	0x03199734 ADD X24, X8, 0x80
	0x03199738 MOV X0, X24
	0x0319973C BL 0x1C16D14
	0x03199740 MOV X0, X23
	0x03199744 MOV X1, X24
	0x03199748 BL 0x1C16D18
	0x0319974C STR X27, [X0]
	0x03199750 LDR X8, [X22]
	0x03199754 MOV X0, X23
	0x03199758 LDR X1, [X8 + 0x40]
	0x0319975C BL 0x1C16E00
	0x03199760 CBZ X0, 0x31997A4
	0x03199764 LDR W8, [X22 + 0x18]
	0x03199768 CMP W25, W8
	0x0319976C B.CS 0x31997A0
	0x03199770 STR X23, [X26]
	0x03199774 LDR X8, [X20 + 0x20]
	0x03199778 CMP X23, X8
	0x0319977C B.NE 0x31996B8
	0x03199780 STR X22, [X20 + 0x18]
	0x03199784 LDP X20, X19, [X31 + 0x40]
	0x03199788 LDP X22, X21, [X31 + 0x30]
	0x0319978C LDP X24, X23, [X31 + 0x20]
	0x03199790 LDP X26, X25, [X31 + 0x10]
	0x03199794 LDP X30, X27, [X31], #0x50
	0x03199798 RET
	0x0319979C BL 0x1C16F20
	0x031997A0 BL 0x1C16F28
	0x031997A4 BL 0x1C16F44
	0x031997A8 MOV X1, X31
	0x031997AC BL 0x1C16DEC
	0x031997B0 BL 0x1C16F30
	0x031997B4 MOV X1, X19
	0x031997B8 BL 0x1C16DEC
	0x031997BC STP X30, X21, [X31 - 0x20]!
	0x031997C0 STP X20, X19, [X31 + 0x10]
	0x031997C4 LDR X8, [X1 + 0x20]
	0x031997C8 MOV X20, X1
	0x031997CC MOV X19, X0
	0x031997D0 LDR X8, [X8 + 0xC0]
	0x031997D4 LDR X8, [X8]
	0x031997D8 LDRB W9, [X8 + 0x135]
	0x031997DC TBNZ X9, 0x0, 0x31997EC
	0x031997E0 MOV X0, X8
	0x031997E4 BL 0x1C5C684
	0x031997E8 MOV X8, X0
	0x031997EC MOV X0, X8
	0x031997F0 BL 0x1C16F10
	0x031997F4 LDR X8, [X20 + 0x20]
	0x031997F8 MOV X21, X0
	0x031997FC LDR X8, [X8 + 0xC0]
	0x03199800 LDR X1, [X8 + 0x8]
	0x03199804 BL 0x29B2900

ISIL:
	001 Move [X31-80], X29
	002 Move [X31-72], X30
	003 Move [X31+16], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Add X29, X31, 0
	011 Subtract X31, X31, 32
	012 NotImplemented "Instruction MRS not yet implemented."
	013 Move X8, [X24+40]
	014 Move X19, X3
	015 Move X20, X2
	016 Move [X29-8], X8
	017 Move X25, [X3+32]
	018 Move X8, [X25+192]
	019 Move X8, [X8]
	020 Move W21, [X8+252]
	021 Add X8, X31, 0
	022 Add X9, X21, 15
	023 And X9, X9, 0x1FFFFFFFF
	024 Subtract X22, X8, X9
	025 Add X31, X22, 0
	026 Add X8, X31, 0
	027 Subtract X23, X8, X9
	028 Add X31, X23, 0
	029 Move X0, X22
	030 Move X2, X21
	031 Call 0x3EB2AC0
	032 Move X8, [X25+192]
	033 Subtract X3, X29, 24
	034 Subtract X4, X29, 16
	035 Move X2, X31
	036 Move X1, [X8+8]
	037 Move X0, [X1]
	038 Move [X29-24], X22
	039 Move X8, [X1+16]
	040 NotImplemented "Instruction BLR not yet implemented."
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 Move X0, X23
	043 Move X1, X20
	044 Move X2, X21
	045 Call 0x3EB2AC0
	046 Move X8, [X19+32]
	047 Subtract X3, X29, 24
	048 Subtract X4, X29, 16
	049 Move X2, X31
	050 Move X8, [X8+192]
	051 Move X1, [X8+8]
	052 Move X0, [X1]
	053 Move [X29-24], X23
	054 Move X8, [X1+16]
	055 NotImplemented "Instruction BLR not yet implemented."
	056 NotImplemented "Instruction LDUR not yet implemented."
	057 Move X9, [X24+40]
	058 NotImplemented "Instruction LDUR not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 NotImplemented "Instruction CSET not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Add X31, X29, 0
	063 Move X20, [X31+64]
	064 Move X19, [X31+72]
	065 Move X22, [X31+48]
	066 Move X21, [X31+56]
	067 Move X24, [X31+32]
	068 Move X23, [X31+40]
	069 Move X25, [X31+16]
	070 Move X29, [X31+80]
	071 Move X30, [X31+88]
	072 Return X0
	073 Call 0x3EB2B20

Method: System.Int32 GetHashCode(T obj)

Disassembly:
	0x03199808 LDR X8, [X20 + 0x20]
	0x0319980C MOV X0, X19
	0x03199810 MOV X1, X31
	0x03199814 LDR X8, [X8 + 0xC0]
	0x03199818 LDR X20, [X8 + 0x10]
	0x0319981C BL 0x33BDD8C
	0x03199820 STR X21, [X19 + 0x20]
	0x03199824 LDR X8, [X20 + 0x20]
	0x03199828 MOV X0, X19
	0x0319982C LDP X20, X19, [X31 + 0x10]
	0x03199830 MOVZ W1, 0x11
	0x03199834 LDR X8, [X8 + 0xC0]
	0x03199838 LDR X2, [X8 + 0x28]
	0x0319983C LDP X30, X21, [X31], #0x20
	0x03199840 B 0x3199908
	0x03199844 STR X30, [X31 - 0x30]!
	0x03199848 STP X22, X21, [X31 + 0x10]
	0x0319984C STP X20, X19, [X31 + 0x20]
	0x03199850 MOV W21, W1
	0x03199854 MOV X1, X31
	0x03199858 MOV X19, X3
	0x0319985C MOV X20, X2
	0x03199860 MOV X22, X0
	0x03199864 BL 0x33BDD8C
	0x03199868 STR X20, [X22 + 0x20]
	0x0319986C LDR X8, [X19 + 0x20]
	0x03199870 MOV X0, X22
	0x03199874 MOV W1, W21
	0x03199878 LDP X20, X19, [X31 + 0x20]
	0x0319987C LDR X8, [X8 + 0xC0]
	0x03199880 LDP X22, X21, [X31 + 0x10]
	0x03199884 LDR X2, [X8 + 0x28]
	0x03199888 LDR X30, [X31], #0x30
	0x0319988C B 0x3199908
	0x03199890 STR X30, [X31 - 0x30]!
	0x03199894 STP X22, X21, [X31 + 0x10]
	0x03199898 STP X20, X19, [X31 + 0x20]
	0x0319989C LDR W8, [X0 + 0x1C]
	0x031998A0 MOV X19, X2
	0x031998A4 MOV X21, X3
	0x031998A8 MOV X20, X0
	0x031998AC ADD W8, W8, 0x1

ISIL:
	001 Move [X31-48], X29
	002 Move [X31-40], X30
	003 Move [X31+16], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Add X29, X31, 0
	007 Subtract X31, X31, 32
	008 NotImplemented "Instruction MRS not yet implemented."
	009 Move X8, [X20+40]
	010 Move [X29-8], X8
	011 Move X21, [X2+32]
	012 Move X8, [X21+192]
	013 Move X8, [X8]
	014 Move W2, [X8+252]
	015 Add X8, X31, 0
	016 Add X9, X2, 15
	017 And X9, X9, 0x1FFFFFFFF
	018 Subtract X19, X8, X9
	019 Add X31, X19, 0
	020 Move X0, X19
	021 Move [X29-24], X31
	022 Call 0x3EB2AC0
	023 Move X8, [X21+192]
	024 Subtract X3, X29, 16
	025 Subtract X4, X29, 24
	026 Move X2, X31
	027 Move X1, [X8+8]
	028 Move X0, [X1]
	029 Move [X29-16], X19
	030 Move X8, [X1+16]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Subtract X0, X29, 24
	033 Move X1, X31
	034 Call Int64.GetHashCode, X0
	035 Move X8, [X20+40]
	036 NotImplemented "Instruction LDUR not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Add X31, X29, 0
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X21, [X31+16]
	042 Move X29, [X31+48]
	043 Move X30, [X31+56]
	044 Return X0
	045 Call 0x3EB2B20

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x031998B0 STR W8, [X0 + 0x1C]
	0x031998B4 LDR X8, [X3 + 0x20]
	0x031998B8 MOV W22, W1
	0x031998BC LDR X8, [X8 + 0xC0]
	0x031998C0 LDR X2, [X8 + 0x38]
	0x031998C4 BL 0x3199AC4
	0x031998C8 CBZ X0, 0x31998E0
	0x031998CC STR X19, [X0 + 0x18]
	0x031998D0 LDP X20, X19, [X31 + 0x20]
	0x031998D4 LDP X22, X21, [X31 + 0x10]
	0x031998D8 LDR X30, [X31], #0x30
	0x031998DC RET
	0x031998E0 LDR X8, [X21 + 0x20]
	0x031998E4 MOV X0, X20
	0x031998E8 MOV W1, W22
	0x031998EC MOV X2, X19

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X2+32]
	004 Move X19, X1
	005 Move X8, [X8+192]
	006 Move X0, [X8+16]
	007 Move W8, [X0+309]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {13}
	012 Call 0x1C5D684
	013 Compare X19, 0
	014 JumpIfEqual {18}
	015 Move X8, [X19]
	016 NotImplemented "Instruction CMP not yet implemented."
	017 NotImplemented "Instruction CSET not yet implemented."
	018 Move W0, W31
	019 Move X30, [X31+16]
	020 Move X19, [X31+24]
	021 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x031998F0 LDR X8, [X8 + 0xC0]
	0x031998F4 LDP X20, X19, [X31 + 0x20]
	0x031998F8 LDP X22, X21, [X31 + 0x10]
	0x031998FC LDR X3, [X8 + 0x50]
	0x03199900 LDR X30, [X31], #0x30
	0x03199904 B 0x3199BC8
	0x03199908 STR X30, [X31 - 0x20]!
	0x0319990C STP X20, X19, [X31 + 0x10]
	0x03199910 LDR W8, [X0 + 0x1C]
	0x03199914 MOV X19, X0
	0x03199918 MOV W20, W1
	0x0319991C ADD W8, W8, 0x1
	0x03199920 STR W8, [X0 + 0x1C]
	0x03199924 LDR X8, [X2 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {19}
	004 Move X1, X31
	005 Call "il2cpp_vm_object_is_inst", X0
	006 Compare X0, 0
	007 JumpIfEqual {19}
	008 Move X8, [X0]
	009 Move X9, [X8+424]
	010 Move X1, [X8+432]
	011 NotImplemented "Instruction BLR not yet implemented."
	012 Compare X0, 0
	013 JumpIfEqual {19}
	014 Move X8, [X0]
	015 Move X2, [X8+344]
	016 Move X1, [X8+352]
	017 Move X30, [X31+16]
	018 CallNoReturn X2
	019 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03199928 LDR X8, [X8 + 0xC0]
	0x0319992C LDR X0, [X8 + 0x58]
	0x03199930 LDRB W8, [X0 + 0x135]
	0x03199934 TBNZ X8, 0x0, 0x319993C
	0x03199938 BL 0x1C5C684

ISIL:
	001 Move X8, [X1+32]
	002 Move X8, [X8+192]
	003 Move X1, [X8+24]
	004 Move X2, [X1]
	005 CallNoReturn X2

Method: System.Void .ctor(System.Runtime.Serialization.SerializationInfo information, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x0319993C MOV W1, W20
	0x03199940 BL 0x1C16D6C
	0x03199944 STR X0, [X19 + 0x10]
	0x03199948 STR W31, [X19 + 0x18]
	0x0319994C LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move X8, [X4+32]
	002 Move X8, [X8+192]
	003 Move X1, [X8+24]
	004 Move X2, [X1]
	005 CallNoReturn X2

Method: System.Void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x03199950 LDR X30, [X31], #0x20
	0x03199954 RET
	0x03199958 STP X30, X27, [X31 - 0x50]!
	0x0319995C STP X26, X25, [X31 + 0x10]
	0x03199960 STP X24, X23, [X31 + 0x20]
	0x03199964 STP X22, X21, [X31 + 0x30]
	0x03199968 STP X20, X19, [X31 + 0x40]
	0x0319996C LDR X8, [X2 + 0x20]
	0x03199970 MOV X20, X2
	0x03199974 MOV W2, W31
	0x03199978 MOV W21, W1
	0x0319997C LDR X8, [X8 + 0xC0]
	0x03199980 MOV X19, X0
	0x03199984 LDR X3, [X8 + 0x68]
	0x03199988 BL 0x3199E4C
	0x0319998C LDR X8, [X19 + 0x10]
	0x03199990 CBZ X8, 0x3199ABC
	0x03199994 LDR W9, [X8 + 0x18]
	0x03199998 MOV W22, W0
	0x0319999C CMP W0, W9
	0x031999A0 B.CS 0x3199AC0
	0x031999A4 SXTW X25, W22
	0x031999A8 ADD X8, X8, X25, 0x3, LSL
	0x031999AC LDR X8, [X8 + 0x20]
	0x031999B0 CBZ X8, 0x3199A54
	0x031999B4 MOV X27, X31
	0x031999B8 LDR X23, [X19 + 0x20]
	0x031999BC CBZ X23, 0x3199ABC
	0x031999C0 MOV X26, X8
	0x031999C4 LDR X8, [X20 + 0x20]
	0x031999C8 LDR W24, [X26 + 0x10]
	0x031999CC LDR X8, [X8 + 0xC0]
	0x031999D0 LDR X1, [X8 + 0x18]
	0x031999D4 LDRB W8, [X1 + 0x135]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1243000
	007 Move X21, 0xF5B000
	008 Move W8, [X22+3588]
	009 Move X21, [X21+1728]
	010 Move X20, X4
	011 Move X19, X1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xF5B000
	017 Move X0, [X0+1728]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3588], W8
	021 Move X8, [X20+32]
	022 Move X0, [X21]
	023 Move X8, [X8+192]
	024 Move W9, [X0+224]
	025 Move X20, [X8+40]
	026 Compare W9, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X20
	030 Move X1, X31
	031 Call Type.GetTypeFromHandle, X0
	032 Compare X19, 0
	033 JumpIfEqual {44}
	034 Move X1, X0
	035 Move X0, X19
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X2, X31
	041 Move X30, [X31+48]
	042 Call SerializationInfo.SetType, X0, X1
	043 Return 
	044 Call 0x1C17F20

