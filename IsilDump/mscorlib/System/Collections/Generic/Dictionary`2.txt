Type: System.Collections.Generic.Dictionary`2

Method: System.Void .ctor()

Disassembly:
	0x029BAA48 AND W20, W0, 0x7FFFFFFF
	0x029BAA4C SDIV W8, W20, W9
	0x029BAA50 MSUB W8, W8, W9, W20
	0x029BAA54 CMP W8, W9
	0x029BAA58 B.CS 0x29BAC68
	0x029BAA5C CBZ X23, 0x29BAC6C

ISIL:
	001 Move X8, [X1+32]
	002 Move W1, W31
	003 Move X2, X31
	004 Move X8, [X8+192]
	005 Move X3, [X8]
	006 Call 0x29BAA90, X0, X1, X2
	007 Return 

Method: System.Void .ctor(System.Int32 capacity)

Disassembly:
	0x029BAA60 ADD X8, X22, W8, 0x2, UXTW
	0x029BAA64 LDR W9, [X8 + 0x20]
	0x029BAA68 LDR W8, [X23 + 0x18]
	0x029BAA6C SUB W22, W9, 0x1
	0x029BAA70 CMP W22, W8

ISIL:
	001 Move X8, [X2+32]
	002 Move X2, X31
	003 Move X8, [X8+192]
	004 Move X3, [X8]
	005 Call 0x29BAA90, X0, X1, X2
	006 Return 

Method: System.Void .ctor(System.Collections.Generic.IEqualityComparer`1<TKey> comparer)

Disassembly:
	0x029BAA74 B.CS 0x29BAC48
	0x029BAA78 MOV W21, W31
	0x029BAA7C MOVZ W24, 0x18
	0x029BAA80 SMADDL X9, X22, X24, X23
	0x029BAA84 LDR W9, [X9 + 0x20]
	0x029BAA88 SXTW X25, W22
	0x029BAA8C CMP W9, W20

ISIL:
	001 Move X9, [X2+32]
	002 Move X8, X1
	003 Move W1, W31
	004 Move X2, X8
	005 Move X9, [X9+192]
	006 Move X3, [X9]

Method: System.Void .ctor(System.Int32 capacity, System.Collections.Generic.IEqualityComparer`1<TKey> comparer)

Disassembly:
	0x029BAA90 B.NE 0x29BAAD8
	0x029BAA94 LDR X8, [X19 + 0x20]
	0x029BAA98 LDR X8, [X8 + 0xC0]
	0x029BAA9C LDR X0, [X8 + 0x18]
	0x029BAAA0 BL 0x29BCA90
	0x029BAAA4 LDR W8, [X23 + 0x18]
	0x029BAAA8 CMP W22, W8
	0x029BAAAC B.CS 0x29BAC68
	0x029BAAB0 CBZ X0, 0x29BAC6C
	0x029BAAB4 LDR X8, [X0]
	0x029BAAB8 NOP
	0x029BAABC MADD X9, X25, X24, X23
	0x029BAAC0 LDR X2, [X31 + 0x8]
	0x029BAAC4 LDR X1, [X9 + 0x28]
	0x029BAAC8 LDP X9, X3, [X8 + 0x1B8]
	0x029BAACC BLR X9
	0x029BAAD0 TBNZ X0, 0x0, 0x29BAC48
	0x029BAAD4 LDR W8, [X23 + 0x18]
	0x029BAAD8 CMP W22, W8
	0x029BAADC B.CS 0x29BAC68
	0x029BAAE0 MADD X9, X25, X24, X23
	0x029BAAE4 LDR W22, [X9 + 0x24]
	0x029BAAE8 CMP W21, W8
	0x029BAAEC B.LT 0x29BAAF8
	0x029BAAF0 MOV X0, X31
	0x029BAAF4 BL 0x339E4E4
	0x029BAAF8 LDR W8, [X23 + 0x18]
	0x029BAAFC ADD W21, W21, 0x1
	0x029BAB00 CMP W22, W8
	0x029BAB04 B.CC 0x29BAA80
	0x029BAB08 B 0x29BAC48
	0x029BAB0C LDR W9, [X10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W22, W1
	007 Move X1, X31
	008 Move X21, X3
	009 Move X19, X2
	010 Move X20, X0
	011 Call Object..ctor, X0
	012 Move TEMP, X22
	013 And TEMP, TEMP, -2147483648
	014 Compare TEMP, -2147483648
	015 JumpIfEqual {24}
	016 Compare W22, 0
	017 JumpIfEqual {27}
	018 Move X8, [X21+32]
	019 Move X0, X20
	020 Move W1, W22
	021 Move X8, [X8+192]
	022 Move X2, [X8+16]
	023 Call 0x29BBC70, X0, X1
	024 Move W0, 12
	025 Move X1, X31
	026 Call ThrowHelper.ThrowArgumentOutOfRangeException, X0
	027 Move X8, [X21+32]
	028 Move X8, [X8+192]
	029 Move X0, [X8+24]
	030 Call 0x29BDA90
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move [X20+48], X19
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Return 

Method: System.Void .ctor(System.Collections.Generic.IDictionary`2<TKey, TValue> dictionary)

Disassembly:
	0x029BAB10 ADD W9, W9, 0x1
	0x029BAB14 ADD X8, X8, W9, 0x4, SXTW
	0x029BAB18 ADD X0, X8, 0x138
	0x029BAB1C LDP X8, X2, [X0]
	0x029BAB20 MOV X0, X21

ISIL:
	001 Move X8, [X2+32]
	002 Move X2, X31
	003 Move X8, [X8+192]
	004 Move X3, [X8+64]

Method: System.Void .ctor(System.Collections.Generic.IDictionary`2<TKey, TValue> dictionary, System.Collections.Generic.IEqualityComparer`1<TKey> comparer)

Disassembly:
	0x029BAB24 MOV X1, X20
	0x029BAB28 BLR X8
	0x029BAB2C LDR W9, [X22 + 0x18]
	0x029BAB30 AND W24, W0, 0x7FFFFFFF
	0x029BAB34 SDIV W8, W24, W9
	0x029BAB38 MSUB W8, W8, W9, W24
	0x029BAB3C CMP W8, W9
	0x029BAB40 B.CS 0x29BAC68
	0x029BAB44 CBZ X23, 0x29BAC6C
	0x029BAB48 ADD X8, X22, W8, 0x2, UXTW
	0x029BAB4C LDR W9, [X8 + 0x20]
	0x029BAB50 LDR W8, [X23 + 0x18]
	0x029BAB54 SUB W26, W9, 0x1
	0x029BAB58 CMP W26, W8
	0x029BAB5C B.CS 0x29BAC44
	0x029BAB60 MOV W25, W31
	0x029BAB64 MOVZ W27, 0x18
	0x029BAB68 SMADDL X9, X26, X27, X23
	0x029BAB6C LDR W9, [X9 + 0x20]
	0x029BAB70 SXTW X28, W26
	0x029BAB74 CMP W9, W24
	0x029BAB78 B.NE 0x29BAC0C
	0x029BAB7C LDR X8, [X19 + 0x20]
	0x029BAB80 LDR X8, [X8 + 0xC0]
	0x029BAB84 LDR X1, [X8 + 0x8]
	0x029BAB88 NOP
	0x029BAB8C MADD X8, X28, X27, X23
	0x029BAB90 LDR X22, [X8 + 0x28]
	0x029BAB94 LDRB W9, [X1 + 0x135]
	0x029BAB98 TBNZ X9, 0x0, 0x29BABA8
	0x029BAB9C MOV X0, X1
	0x029BABA0 BL 0x1C5C684
	0x029BABA4 MOV X1, X0
	0x029BABA8 LDR X8, [X21]
	0x029BABAC LDRH W9, [X8 + 0x12E]
	0x029BABB0 CBZ X9, 0x29BABD4
	0x029BABB4 LDR X10, [X8 + 0xB0]
	0x029BABB8 ADD X10, X10, 0x8
	0x029BABBC LDUR X11, [X10 - 0x8]
	0x029BABC0 CMP X11, X1
	0x029BABC4 B.EQ 0x29BABE4
	0x029BABC8 SUBS X9, X9, 0x1
	0x029BABCC ADD X10, X10, 0x10
	0x029BABD0 B.NE 0x29BABBC
	0x029BABD4 MOV X0, X21
	0x029BABD8 MOV W2, W31
	0x029BABDC BL 0x1C5C788
	0x029BABE0 B 0x29BABF0
	0x029BABE4 LDRSW X9, [X10]
	0x029BABE8 ADD X8, X8, X9, 0x4, LSL
	0x029BABEC ADD X0, X8, 0x138
	0x029BABF0 LDP X8, X3, [X0]
	0x029BABF4 MOV X0, X21
	0x029BABF8 MOV X1, X22
	0x029BABFC MOV X2, X20
	0x029BAC00 BLR X8
	0x029BAC04 TBNZ X0, 0x0, 0x29BAC44
	0x029BAC08 LDR W8, [X23 + 0x18]
	0x029BAC0C CMP W26, W8
	0x029BAC10 B.CS 0x29BAC68
	0x029BAC14 MADD X9, X28, X27, X23
	0x029BAC18 LDR W26, [X9 + 0x24]
	0x029BAC1C CMP W25, W8
	0x029BAC20 B.LT 0x29BAC2C
	0x029BAC24 MOV X0, X31
	0x029BAC28 BL 0x339E4E4
	0x029BAC2C LDR W8, [X23 + 0x18]
	0x029BAC30 ADD W25, W25, 0x1
	0x029BAC34 MOV W22, W26
	0x029BAC38 CMP W26, W8
	0x029BAC3C B.CC 0x29BAB68
	0x029BAC40 B 0x29BAC48
	0x029BAC44 MOV W22, W26
	0x029BAC48 MOV W0, W22
	0x029BAC4C LDP X20, X19, [X31 + 0x50]
	0x029BAC50 LDP X22, X21, [X31 + 0x40]
	0x029BAC54 LDP X24, X23, [X31 + 0x30]
	0x029BAC58 LDP X26, X25, [X31 + 0x20]
	0x029BAC5C LDP X28, X27, [X31 + 0x10]
	0x029BAC60 LDR X30, [X31], #0x60
	0x029BAC64 RET
	0x029BAC68 BL 0x1C16F28
	0x029BAC6C BL 0x1C16F20
	0x029BAC70 STP X30, X23, [X31 - 0x30]!
	0x029BAC74 STP X22, X21, [X31 + 0x10]
	0x029BAC78 STP X20, X19, [X31 + 0x20]
	0x029BAC7C ADRP X23, 0x1A20000
	0x029BAC80 ADRP X22, 0x1764000
	0x029BAC84 LDRB W8, [X23 + 0xFE0]
	0x029BAC88 LDR X22, [X22 + 0x548]
	0x029BAC8C MOV X20, X2
	0x029BAC90 MOV W21, W1
	0x029BAC94 MOV X19, X0
	0x029BAC98 TBNZ X8, 0x0, 0x29BACBC
	0x029BAC9C ADRP X0, 0x1764000
	0x029BACA0 LDR X0, [X0 + 0x548]
	0x029BACA4 BL 0x1C16CF4
	0x029BACA8 ADRP X0, 0x173A000
	0x029BACAC LDR X0, [X0 + 0xE58]
	0x029BACB0 BL 0x1C16CF4
	0x029BACB4 MOVZ W8, 0x1
	0x029BACB8 STRB W8, [X23 + 0xFE0]
	0x029BACBC LDR X0, [X22]
	0x029BACC0 ADRP X22, 0x173A000
	0x029BACC4 LDR W8, [X0 + 0xE0]
	0x029BACC8 LDR X22, [X22 + 0xE58]
	0x029BACCC CBNZ W8, 0x29BACD4
	0x029BACD0 BL 0x1C16DFC
	0x029BACD4 MOV W0, W21
	0x029BACD8 MOV X1, X31
	0x029BACDC BL 0x335042C
	0x029BACE0 MOVN W8, 0x0
	0x029BACE4 STR W8, [X19 + 0x24]
	0x029BACE8 LDR X8, [X22]
	0x029BACEC MOV W21, W0
	0x029BACF0 MOV W1, W21
	0x029BACF4 MOV X0, X8
	0x029BACF8 BL 0x1C16D6C
	0x029BACFC STR X0, [X19 + 0x10]
	0x029BAD00 LDR X8, [X20 + 0x20]
	0x029BAD04 LDR X8, [X8 + 0xC0]
	0x029BAD08 LDR X0, [X8 + 0x198]
	0x029BAD0C LDRB W8, [X0 + 0x135]
	0x029BAD10 TBNZ X8, 0x0, 0x29BAD18
	0x029BAD14 BL 0x1C5C684
	0x029BAD18 MOV W1, W21
	0x029BAD1C BL 0x1C16D6C
	0x029BAD20 STR X0, [X19 + 0x18]
	0x029BAD24 MOV W0, W21
	0x029BAD28 LDP X20, X19, [X31 + 0x20]
	0x029BAD2C LDP X22, X21, [X31 + 0x10]
	0x029BAD30 LDP X30, X23, [X31], #0x30
	0x029BAD34 RET
	0x029BAD38 SUB X31, X31, 0x80
	0x029BAD3C STP X29, X30, [X31 + 0x20]
	0x029BAD40 STP X28, X27, [X31 + 0x30]
	0x029BAD44 STP X26, X25, [X31 + 0x40]
	0x029BAD48 STP X24, X23, [X31 + 0x50]
	0x029BAD4C STP X22, X21, [X31 + 0x60]
	0x029BAD50 STP X20, X19, [X31 + 0x70]
	0x029BAD54 STR X1, [X31 + 0x18]
	0x029BAD58 LDR W8, [X0 + 0x2C]
	0x029BAD5C LDR X9, [X0 + 0x10]
	0x029BAD60 MOV X20, X4
	0x029BAD64 MOV W26, W3
	0x029BAD68 MOV W23, W2
	0x029BAD6C MOV X24, X1
	0x029BAD70 MOV X19, X0
	0x029BAD74 ADD W8, W8, 0x1
	0x029BAD78 STR W8, [X0 + 0x2C]
	0x029BAD7C CBNZ X9, 0x29BAD98
	0x029BAD80 LDR X8, [X20 + 0x20]
	0x029BAD84 MOV X0, X19
	0x029BAD88 MOV W1, W31
	0x029BAD8C LDR X8, [X8 + 0xC0]
	0x029BAD90 LDR X2, [X8 + 0x10]
	0x029BAD94 BL 0x29BAC70
	0x029BAD98 LDR X22, [X19 + 0x30]
	0x029BAD9C LDR X25, [X19 + 0x18]
	0x029BADA0 CBZ X22, 0x29BAE00
	0x029BADA4 LDR X8, [X20 + 0x20]
	0x029BADA8 LDR X8, [X8 + 0xC0]
	0x029BADAC LDR X1, [X8 + 0x8]
	0x029BADB0 LDRB W8, [X1 + 0x135]
	0x029BADB4 TBNZ X8, 0x0, 0x29BADC4
	0x029BADB8 MOV X0, X1
	0x029BADBC BL 0x1C5C684
	0x029BADC0 MOV X1, X0
	0x029BADC4 LDR X8, [X22]
	0x029BADC8 LDRH W9, [X8 + 0x12E]
	0x029BADCC CBZ X9, 0x29BADF0
	0x029BADD0 LDR X10, [X8 + 0xB0]
	0x029BADD4 ADD X10, X10, 0x8
	0x029BADD8 LDUR X11, [X10 - 0x8]
	0x029BADDC CMP X11, X1
	0x029BADE0 B.EQ 0x29BAE18
	0x029BADE4 SUBS X9, X9, 0x1
	0x029BADE8 ADD X10, X10, 0x10
	0x029BADEC B.NE 0x29BADD8
	0x029BADF0 MOVZ W2, 0x1
	0x029BADF4 MOV X0, X22
	0x029BADF8 BL 0x1C5C788
	0x029BADFC B 0x29BAE28
	0x029BAE00 LDR X8, [X20 + 0x20]
	0x029BAE04 ADD X0, X31, 0x18
	0x029BAE08 LDR X8, [X8 + 0xC0]
	0x029BAE0C LDR X1, [X8 + 0x178]
	0x029BAE10 BL 0x2E0D64C
	0x029BAE14 B 0x29BAE38
	0x029BAE18 LDR W9, [X10]
	0x029BAE1C ADD W9, W9, 0x1
	0x029BAE20 ADD X8, X8, W9, 0x4, SXTW
	0x029BAE24 ADD X0, X8, 0x138
	0x029BAE28 LDP X8, X2, [X0]
	0x029BAE2C MOV X0, X22
	0x029BAE30 MOV X1, X24
	0x029BAE34 BLR X8
	0x029BAE38 LDR X8, [X19 + 0x10]
	0x029BAE3C CBZ X8, 0x29BB1A4
	0x029BAE40 LDR W10, [X8 + 0x18]
	0x029BAE44 AND W27, W0, 0x7FFFFFFF
	0x029BAE48 SDIV W9, W27, W10
	0x029BAE4C MSUB W9, W9, W10, W27
	0x029BAE50 CMP W9, W10
	0x029BAE54 B.CS 0x29BB1A0
	0x029BAE58 ADD X28, X8, W9, 0x2, UXTW
	0x029BAE5C LDR W8, [X28 + 0x20]!
	0x029BAE60 AND W24, W23, 0x1
	0x029BAE64 SUB W23, W8, 0x1
	0x029BAE68 CBZ X22, 0x29BAF6C
	0x029BAE6C CBZ X25, 0x29BB1A4
	0x029BAE70 LDR X8, [X25 + 0x18]
	0x029BAE74 CMP W23, W8
	0x029BAE78 B.CS 0x29BB00C
	0x029BAE7C MOV W29, W31
	0x029BAE80 MOVZ W21, 0x18
	0x029BAE84 STP W26, W24, [X31 + 0x8]
	0x029BAE88 NOP
	0x029BAE8C SMADDL X9, X23, X21, X25
	0x029BAE90 LDR W9, [X9 + 0x20]
	0x029BAE94 SXTW X26, W23
	0x029BAE98 CMP W9, W27
	0x029BAE9C B.NE 0x29BAF34
	0x029BAEA0 LDR X8, [X20 + 0x20]
	0x029BAEA4 LDR X24, [X31 + 0x18]
	0x029BAEA8 LDR X8, [X8 + 0xC0]
	0x029BAEAC LDR X1, [X8 + 0x8]
	0x029BAEB0 NOP
	0x029BAEB4 MADD X8, X26, X21, X25
	0x029BAEB8 LDR X23, [X8 + 0x28]
	0x029BAEBC LDRB W8, [X1 + 0x135]
	0x029BAEC0 TBNZ X8, 0x0, 0x29BAED0
	0x029BAEC4 MOV X0, X1
	0x029BAEC8 BL 0x1C5C684
	0x029BAECC MOV X1, X0
	0x029BAED0 LDR X8, [X22]
	0x029BAED4 LDRH W9, [X8 + 0x12E]
	0x029BAED8 CBZ X9, 0x29BAEFC
	0x029BAEDC LDR X10, [X8 + 0xB0]
	0x029BAEE0 ADD X10, X10, 0x8
	0x029BAEE4 LDUR X11, [X10 - 0x8]
	0x029BAEE8 CMP X11, X1
	0x029BAEEC B.EQ 0x29BAF0C
	0x029BAEF0 SUBS X9, X9, 0x1
	0x029BAEF4 ADD X10, X10, 0x10
	0x029BAEF8 B.NE 0x29BAEE4
	0x029BAEFC MOV X0, X22
	0x029BAF00 MOV W2, W31
	0x029BAF04 BL 0x1C5C788
	0x029BAF08 B 0x29BAF18
	0x029BAF0C LDRSW X9, [X10]
	0x029BAF10 ADD X8, X8, X9, 0x4, LSL
	0x029BAF14 ADD X0, X8, 0x138
	0x029BAF18 LDP X8, X3, [X0]
	0x029BAF1C MOV X0, X22
	0x029BAF20 MOV X1, X23
	0x029BAF24 MOV X2, X24
	0x029BAF28 BLR X8
	0x029BAF2C TBNZ X0, 0x0, 0x29BB10C
	0x029BAF30 LDR W8, [X25 + 0x18]
	0x029BAF34 CMP W26, W8
	0x029BAF38 B.CS 0x29BB1A0
	0x029BAF3C MADD X9, X26, X21, X25
	0x029BAF40 LDR W23, [X9 + 0x24]
	0x029BAF44 CMP W29, W8
	0x029BAF48 B.LT 0x29BAF54
	0x029BAF4C MOV X0, X31
	0x029BAF50 BL 0x339E4E4
	0x029BAF54 LDR X8, [X25 + 0x18]
	0x029BAF58 ADD W29, W29, 0x1
	0x029BAF5C CMP W23, W8
	0x029BAF60 B.CC 0x29BAE88
	0x029BAF64 LDR W24, [X31 + 0xC]
	0x029BAF68 B 0x29BB00C
	0x029BAF6C CBZ X25, 0x29BB1A4
	0x029BAF70 LDR X8, [X25 + 0x18]
	0x029BAF74 CMP W23, W8
	0x029BAF78 B.CS 0x29BB00C
	0x029BAF7C MOV W21, W31
	0x029BAF80 MOVZ W22, 0x18
	0x029BAF84 SMADDL X9, X23, X22, X25
	0x029BAF88 LDR W9, [X9 + 0x20]
	0x029BAF8C SXTW X23, W23
	0x029BAF90 CMP W9, W27
	0x029BAF94 B.NE 0x29BAFDC
	0x029BAF98 LDR X8, [X20 + 0x20]
	0x029BAF9C LDR X8, [X8 + 0xC0]
	0x029BAFA0 LDR X0, [X8 + 0x18]
	0x029BAFA4 BL 0x29BCA90
	0x029BAFA8 LDR W8, [X25 + 0x18]
	0x029BAFAC CMP W23, W8
	0x029BAFB0 B.CS 0x29BB1A0
	0x029BAFB4 CBZ X0, 0x29BB1A4
	0x029BAFB8 LDR X8, [X0]
	0x029BAFBC NOP
	0x029BAFC0 MADD X9, X23, X22, X25
	0x029BAFC4 LDR X2, [X31 + 0x18]
	0x029BAFC8 LDR X1, [X9 + 0x28]
	0x029BAFCC LDP X9, X3, [X8 + 0x1B8]
	0x029BAFD0 BLR X9
	0x029BAFD4 TBNZ X0, 0x0, 0x29BB144
	0x029BAFD8 LDR W8, [X25 + 0x18]
	0x029BAFDC CMP W23, W8
	0x029BAFE0 B.CS 0x29BB1A0
	0x029BAFE4 MADD X9, X23, X22, X25
	0x029BAFE8 LDR W23, [X9 + 0x24]
	0x029BAFEC CMP W21, W8
	0x029BAFF0 B.LT 0x29BAFFC
	0x029BAFF4 MOV X0, X31
	0x029BAFF8 BL 0x339E4E4
	0x029BAFFC LDR X8, [X25 + 0x18]
	0x029BB000 ADD W21, W21, 0x1
	0x029BB004 CMP W23, W8
	0x029BB008 B.CC 0x29BAF84
	0x029BB00C LDR W9, [X19 + 0x28]
	0x029BB010 CMP W9, 0x0
	0x029BB014 B.LE 0x29BB048
	0x029BB018 SUB W8, W9, 0x1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x1A21000
	009 Move W8, [X23+4061]
	010 Move X19, X3
	011 Move X22, X2
	012 Move X21, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x173A000
	019 Move X0, [X0+3584]
	020 Call 0x1C17CF4
	021 Move X0, 0x173A000
	022 Move X0, [X0+3608]
	023 Call 0x1C17CF4
	024 Move X0, 0x173A000
	025 Move X0, [X0+1728]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X23+4061], W8
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction CSEL not yet implemented."
	031 Compare X21, 0
	032 JumpIfEqual {57}
	033 Move X8, [X19+32]
	034 Move X8, [X8+192]
	035 Move X1, [X8+72]
	036 Move W8, [X1+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {44}
	041 Move X0, X1
	042 Call 0x1C5D684
	043 Move X1, X0
	044 Move X8, [X21]
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 Compare X9, 0
	047 JumpIfEqual {54}
	048 Move X10, [X8+176]
	049 Add X10, X10, 8
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Subtract X9, X9, 1
	053 Add X10, X10, 16
	054 Move X0, X21
	055 Move W2, W31
	056 Call 0x1C5D788
	057 Move W1, W31
	058 Move X23, X20
	059 NotImplemented "Instruction LDRSW not yet implemented."
	060 Add X8, X8, X9
	061 Add X0, X8, 312
	062 Move X8, [X0]
	063 Move X1, [X0+8]
	064 Move X0, X21
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move W1, W0
	067 Move X8, [X19+32]
	068 Move X0, X23
	069 Move X2, X22
	070 Move X8, [X8+192]
	071 Move X3, [X8]
	072 Call 0x29BAA90, X0, X1, X2
	073 Compare X21, 0
	074 JumpIfEqual {288}
	075 Move X22, 0x173A000
	076 Move X22, [X22+1728]
	077 Move X0, X21
	078 Move X1, X31
	079 Call "il2cpp_vm_object_is_inst", X0
	080 Move X9, [X19+32]
	081 Move X8, [X22]
	082 Move X22, X0
	083 Move X9, [X9+192]
	084 Move W10, [X8+224]
	085 Move X23, [X9+88]
	086 Compare W10, 0
	087 JumpIfNotEqual {90}
	088 Move X0, X8
	089 Call 0x1C17DFC
	090 Move X0, X23
	091 Move X1, X31
	092 Call Type.GetTypeFromHandle, X0
	093 Move X1, X0
	094 Move X0, X22
	095 Move X2, X31
	096 Call Type.op_Equality, X0, X1
	097 Move X8, [X19+32]
	098 Move X8, [X8+192]
	099 Move TEMP, X0
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfNotEqual {148}
	103 Move X1, [X8+48]
	104 Move W8, [X1+309]
	105 Move TEMP, X8
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfEqual {112}
	109 Move X0, X1
	110 Call 0x1C5D684
	111 Move X1, X0
	112 Move X8, [X21]
	113 Move W9, [X1+304]
	114 Move W10, [X8+304]
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X8, [X8+200]
	117 Add X8, X8, X9
	118 NotImplemented "Instruction LDUR not yet implemented."
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move W22, [X21+32]
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move X21, [X21+24]
	123 Compare X21, 0
	124 JumpIfEqual {297}
	125 Move X23, X31
	126 Add X24, X21, 48
	127 Move W8, [X21+24]
	128 NotImplemented "Instruction CMP not yet implemented."
	129 NotImplemented "Instruction LDUR not yet implemented."
	130 Move TEMP, X8
	131 And TEMP, TEMP, -2147483648
	132 Compare TEMP, -2147483648
	133 JumpIfEqual {145}
	134 Move X8, [X19+32]
	135 NotImplemented "Instruction LDUR not yet implemented."
	136 Move W2, [X24]
	137 Move W3, 2
	138 Move X8, [X8+192]
	139 Move X0, X20
	140 Move X8, [X8+128]
	141 Move X8, [X8+32]
	142 Move X8, [X8+192]
	143 Move X4, [X8+256]
	144 Call 0x29BBD38, X0, X1, X2, X3
	145 Add X23, X23, 1
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Add X24, X24, 24
	148 Move X1, [X8+136]
	149 Move W8, [X1+309]
	150 Move TEMP, X8
	151 And TEMP, TEMP, 1
	152 Compare TEMP, 1
	153 JumpIfEqual {157}
	154 Move X0, X1
	155 Call 0x1C5D684
	156 Move X1, X0
	157 Move X8, [X21]
	158 NotImplemented "Instruction LDRH not yet implemented."
	159 Compare X9, 0
	160 JumpIfEqual {167}
	161 Move X10, [X8+176]
	162 Add X10, X10, 8
	163 NotImplemented "Instruction LDUR not yet implemented."
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Subtract X9, X9, 1
	166 Add X10, X10, 16
	167 Move X0, X21
	168 Move W2, W31
	169 Call 0x1C5D788
	170 NotImplemented "Instruction LDRSW not yet implemented."
	171 Add X8, X8, X9
	172 Add X0, X8, 312
	173 Move X8, [X0]
	174 Move X1, [X0+8]
	175 Move X0, X21
	176 NotImplemented "Instruction BLR not yet implemented."
	177 Move X21, X0
	178 Compare X0, 0
	179 JumpIfEqual {294}
	180 Move X22, 0x173A000
	181 Move X22, [X22+3608]
	182 Move X8, [X21]
	183 Move X1, [X22]
	184 NotImplemented "Instruction LDRH not yet implemented."
	185 Compare X9, 0
	186 JumpIfEqual {193}
	187 Move X10, [X8+176]
	188 Add X10, X10, 8
	189 NotImplemented "Instruction LDUR not yet implemented."
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Subtract X9, X9, 1
	192 Add X10, X10, 16
	193 Move X0, X21
	194 Move W2, W31
	195 Call 0x1C5D788
	196 NotImplemented "Instruction LDRSW not yet implemented."
	197 Add X8, X8, X9
	198 Add X0, X8, 312
	199 Move X8, [X0]
	200 Move X1, [X0+8]
	201 Move X0, X21
	202 NotImplemented "Instruction BLR not yet implemented."
	203 Move TEMP, X0
	204 And TEMP, TEMP, 1
	205 Compare TEMP, 1
	206 JumpIfNotEqual {251}
	207 Move X8, [X19+32]
	208 Move X8, [X8+192]
	209 Move X1, [X8+152]
	210 Move W8, [X1+309]
	211 Move TEMP, X8
	212 And TEMP, TEMP, 1
	213 Compare TEMP, 1
	214 JumpIfEqual {218}
	215 Move X0, X1
	216 Call 0x1C5D684
	217 Move X1, X0
	218 Move X8, [X21]
	219 NotImplemented "Instruction LDRH not yet implemented."
	220 Compare X9, 0
	221 JumpIfEqual {228}
	222 Move X10, [X8+176]
	223 Add X10, X10, 8
	224 NotImplemented "Instruction LDUR not yet implemented."
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Subtract X9, X9, 1
	227 Add X10, X10, 16
	228 Move X0, X21
	229 Move W2, W31
	230 Call 0x1C5D788
	231 NotImplemented "Instruction LDRSW not yet implemented."
	232 Add X8, X8, X9
	233 Add X0, X8, 312
	234 Move X8, [X0]
	235 Move X1, [X0+8]
	236 Move X0, X21
	237 NotImplemented "Instruction BLR not yet implemented."
	238 Move X8, [X19+32]
	239 And W31, W1, 255
	240 Move X5, X0
	241 NotImplemented "Instruction CSET not yet implemented."
	242 Move X8, [X8+192]
	243 Move X8, [X8+128]
	244 Move X8, [X8+32]
	245 Move X8, [X8+192]
	246 Move X4, [X8+256]
	247 Move W3, 2
	248 Move X0, X20
	249 Move X1, X5
	250 Call 0x29BBD38, X0, X1, X2, X3
	251 Move X19, X31
	252 Compare X21, 0
	253 JumpIfEqual {277}
	254 Move X10, 0x173A000
	255 Move X8, [X21]
	256 Move X10, [X10+3584]
	257 NotImplemented "Instruction LDRH not yet implemented."
	258 Move X1, [X10]
	259 Compare X9, 0
	260 JumpIfEqual {267}
	261 Move X10, [X8+176]
	262 Add X10, X10, 8
	263 NotImplemented "Instruction LDUR not yet implemented."
	264 NotImplemented "Instruction CMP not yet implemented."
	265 Subtract X9, X9, 1
	266 Add X10, X10, 16
	267 Move X0, X21
	268 Move W2, W31
	269 Call 0x1C5D788
	270 NotImplemented "Instruction LDRSW not yet implemented."
	271 Add X8, X8, X9
	272 Add X0, X8, 312
	273 Move X8, [X0]
	274 Move X1, [X0+8]
	275 Move X0, X21
	276 NotImplemented "Instruction BLR not yet implemented."
	277 Compare X19, 0
	278 JumpIfNotEqual {295}
	279 Move X20, [X31+48]
	280 Move X19, [X31+56]
	281 Move X22, [X31+32]
	282 Move X21, [X31+40]
	283 Move X24, [X31+16]
	284 Move X23, [X31+24]
	285 Move X30, [X31+64]
	286 Return 
	287 Call 0x1C17F28
	288 Move W0, 1
	289 Move X1, X31
	290 Call ThrowHelper.ThrowArgumentNullException, X0
	291 Call 0x1C17F20
	292 Move X0, X21
	293 Call 0x1C181E0
	294 Call 0x1C17F20
	295 Move X0, X19
	296 Call 0x1C17F18
	297 Call 0x1C17F20
	298 Move X20, X0
	299 NotImplemented "Instruction CMP not yet implemented."
	300 Move X0, X20
	301 Call 0x3EB2AD0
	302 Move X19, [X0]
	303 Call 0x3EB2AE0
	304 Move X19, X31
	305 Move X20, X0
	306 Compare X21, 0
	307 JumpIfEqual {331}
	308 Move X10, 0x173A000
	309 Move X8, [X21]
	310 Move X10, [X10+3584]
	311 NotImplemented "Instruction LDRH not yet implemented."
	312 Move X1, [X10]
	313 Compare X9, 0
	314 JumpIfEqual {321}
	315 Move X10, [X8+176]
	316 Add X10, X10, 8
	317 NotImplemented "Instruction LDUR not yet implemented."
	318 NotImplemented "Instruction CMP not yet implemented."
	319 Subtract X9, X9, 1
	320 Add X10, X10, 16
	321 Move X0, X21
	322 Move W2, W31
	323 Call 0x1C5D788
	324 NotImplemented "Instruction LDRSW not yet implemented."
	325 Add X8, X8, X9
	326 Add X0, X8, 312
	327 Move X8, [X0]
	328 Move X1, [X0+8]
	329 Move X0, X21
	330 NotImplemented "Instruction BLR not yet implemented."
	331 Compare X19, 0
	332 JumpIfNotEqual {335}
	333 Move X0, X20
	334 Call 0x1D2D690
	335 Move X0, X19
	336 Call 0x1C17F18
	337 Call 0x1991590

Method: System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x029BB01C STR W8, [X19 + 0x28]
	0x029BB020 LDR W21, [X19 + 0x24]
	0x029BB024 LDR W8, [X25 + 0x18]
	0x029BB028 CMP W21, W8
	0x029BB02C B.CS 0x29BB1A0
	0x029BB030 SXTW X8, W21
	0x029BB034 MOVZ W9, 0x18
	0x029BB038 MADD X9, X8, X9, X25
	0x029BB03C LDR W9, [X9 + 0x24]
	0x029BB040 STR W9, [X19 + 0x24]
	0x029BB044 B 0x29BB0BC
	0x029BB048 LDR W21, [X19 + 0x20]
	0x029BB04C CMP W21, W8
	0x029BB050 B.NE 0x29BB09C
	0x029BB054 LDR X8, [X20 + 0x20]
	0x029BB058 MOV X0, X19
	0x029BB05C LDR X8, [X8 + 0xC0]
	0x029BB060 LDR X1, [X8 + 0x1A0]
	0x029BB064 BL 0x29BB510
	0x029BB068 LDR X8, [X19 + 0x10]
	0x029BB06C ADD W9, W21, 0x1
	0x029BB070 STR W9, [X19 + 0x20]
	0x029BB074 CBZ X8, 0x29BB1A4
	0x029BB078 LDR W10, [X8 + 0x18]
	0x029BB07C SDIV W9, W27, W10
	0x029BB080 MSUB W9, W9, W10, W27
	0x029BB084 CMP W9, W10
	0x029BB088 B.CS 0x29BB1A0
	0x029BB08C LDR X25, [X19 + 0x18]
	0x029BB090 ADD X8, X8, W9, 0x2, UXTW
	0x029BB094 ADD X28, X8, 0x20
	0x029BB098 B 0x29BB0A8
	0x029BB09C LDR X25, [X19 + 0x18]
	0x029BB0A0 ADD W8, W21, 0x1
	0x029BB0A4 STR W8, [X19 + 0x20]
	0x029BB0A8 CBZ X25, 0x29BB1A4
	0x029BB0AC LDR W8, [X25 + 0x18]
	0x029BB0B0 CMP W21, W8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1A20000
	007 Move X21, 0x1764000
	008 Move W8, [X22+4062]
	009 Move X21, [X21+1352]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x1764000
	017 Move X0, [X0+1576]
	018 Call 0x1C17CF4
	019 Move X0, 0x1764000
	020 Move X0, [X0+1352]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+4062], W8
	024 Move X0, X20
	025 Move X1, X31
	026 Call Object..ctor, X0
	027 Move X0, [X21]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X31
	033 Call HashHelpers.get_SerializationInfoTable
	034 Compare X0, 0
	035 JumpIfEqual {48}
	036 Move X8, 0x1764000
	037 Move X8, [X8+1576]
	038 Move X1, X20
	039 Move X2, X19
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X3, [X8]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Move X30, [X31+48]
	046 Call 0x29979F8, X0, X1, X2
	047 Return 
	048 Call 0x1C17F20

Method: System.Collections.Generic.IEqualityComparer`1<TKey> get_Comparer()

Disassembly:
	0x029BB0B4 B.CS 0x29BB1A0
	0x029BB0B8 SXTW X8, W21
	0x029BB0BC MOVZ W9, 0x18
	0x029BB0C0 MADD X8, X8, X9, X25
	0x029BB0C4 STR W27, [X8 + 0x20]
	0x029BB0C8 LDR W9, [X28]
	0x029BB0CC ADD W10, W21, 0x1

ISIL:
	001 Move X0, [X0+48]
	002 Compare X0, 0
	003 JumpIfEqual {5}
	004 Return X0
	005 Move X8, [X1+32]
	006 Move X8, [X8+192]
	007 Move X0, [X8+24]
	008 Call 0x29BDA90
	009 Return X0

Method: System.Int32 get_Count()

Disassembly:
	0x029BB0D0 SUB W9, W9, 0x1
	0x029BB0D4 STR W9, [X8 + 0x24]
	0x029BB0D8 LDR X9, [X31 + 0x18]
	0x029BB0DC STRB W24, [X8 + 0x30]

ISIL:
	001 Move W8, [X0+32]
	002 Move W9, [X0+40]
	003 Subtract W0, W8, W9
	004 Return X0

Method: System.Collections.Generic.Dictionary`2/KeyCollection<TKey, TValue> get_Keys()

Disassembly:
	0x029BB0E0 STR X9, [X8 + 0x28]
	0x029BB0E4 STR W10, [X28]
	0x029BB0E8 MOVZ W0, 0x1
	0x029BB0EC LDP X20, X19, [X31 + 0x70]
	0x029BB0F0 LDP X22, X21, [X31 + 0x60]
	0x029BB0F4 LDP X24, X23, [X31 + 0x50]
	0x029BB0F8 LDP X26, X25, [X31 + 0x40]
	0x029BB0FC LDP X28, X27, [X31 + 0x30]
	0x029BB100 LDP X29, X30, [X31 + 0x20]
	0x029BB104 ADD X31, X31, 0x80
	0x029BB108 RET
	0x029BB10C LDR W8, [X31 + 0x8]
	0x029BB110 AND W8, W8, 0xFF
	0x029BB114 CMP W8, 0x2
	0x029BB118 B.EQ 0x29BB174
	0x029BB11C CMP W8, 0x1
	0x029BB120 B.NE 0x29BB198
	0x029BB124 LDR W8, [X25 + 0x18]
	0x029BB128 CMP W26, W8
	0x029BB12C B.CS 0x29BB1A0
	0x029BB130 LDR W9, [X31 + 0xC]
	0x029BB134 MOVZ W8, 0x18
	0x029BB138 MADD X8, X26, X8, X25
	0x029BB13C STRB W9, [X8 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, [X0+56]
	006 Compare X21, 0
	007 JumpIfNotEqual {27}
	008 Move X8, [X1+32]
	009 Move X19, X0
	010 Move X20, X1
	011 Move X8, [X8+192]
	012 Move X0, [X8+200]
	013 Move W8, [X0+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {19}
	018 Call 0x1C5D684
	019 Call 0x1C17F10
	020 Move X8, [X20+32]
	021 Move X1, X19
	022 Move X21, X0
	023 Move X8, [X8+192]
	024 Move X2, [X8+208]
	025 Call 0x2EADEFC, X0, X1
	026 Move [X19+56], X21
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X0, X21
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Return X0

Method: System.Collections.Generic.ICollection`1<TKey> System.Collections.Generic.IDictionary<TKey,TValue>.get_Keys()

Disassembly:
	0x029BB140 B 0x29BB0E8
	0x029BB144 AND W8, W26, 0xFF
	0x029BB148 CMP W8, 0x2
	0x029BB14C B.EQ 0x29BB174
	0x029BB150 CMP W8, 0x1
	0x029BB154 B.NE 0x29BB198
	0x029BB158 LDR W8, [X25 + 0x18]
	0x029BB15C CMP W23, W8
	0x029BB160 B.CS 0x29BB1A0
	0x029BB164 MOVZ W8, 0x18
	0x029BB168 MADD X8, X23, X8, X25
	0x029BB16C STRB W24, [X8 + 0x30]
	0x029BB170 B 0x29BB0E8
	0x029BB174 LDR X8, [X31 + 0x18]
	0x029BB178 ADD X1, X31, 0x10
	0x029BB17C STR X8, [X31 + 0x10]
	0x029BB180 LDR X8, [X20 + 0x20]
	0x029BB184 LDR X8, [X8 + 0xC0]
	0x029BB188 LDR X0, [X8 + 0x70]
	0x029BB18C BL 0x1C16E04
	0x029BB190 MOV X1, X31
	0x029BB194 BL 0x339E3E0
	0x029BB198 MOV W0, W31
	0x029BB19C B 0x29BB0EC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, [X0+56]
	006 Compare X21, 0
	007 JumpIfNotEqual {27}
	008 Move X8, [X1+32]
	009 Move X19, X0
	010 Move X20, X1
	011 Move X8, [X8+192]
	012 Move X0, [X8+200]
	013 Move W8, [X0+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {19}
	018 Call 0x1C5D684
	019 Call 0x1C17F10
	020 Move X8, [X20+32]
	021 Move X1, X19
	022 Move X21, X0
	023 Move X8, [X8+192]
	024 Move X2, [X8+208]
	025 Call 0x2EADEFC, X0, X1
	026 Move [X19+56], X21
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X0, X21
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Return X0

Method: System.Collections.Generic.Dictionary`2/ValueCollection<TKey, TValue> get_Values()

Disassembly:
	0x029BB1A0 BL 0x1C16F28
	0x029BB1A4 BL 0x1C16F20
	0x029BB1A8 STR X30, [X31 - 0x50]!
	0x029BB1AC STP X26, X25, [X31 + 0x10]
	0x029BB1B0 STP X24, X23, [X31 + 0x20]
	0x029BB1B4 STP X22, X21, [X31 + 0x30]
	0x029BB1B8 STP X20, X19, [X31 + 0x40]
	0x029BB1BC ADRP X21, 0x1A1F000
	0x029BB1C0 ADRP X25, 0x1763000
	0x029BB1C4 LDRB W8, [X21 + 0xFE1]
	0x029BB1C8 LDR X25, [X25 + 0x548]
	0x029BB1CC MOV X20, X2
	0x029BB1D0 MOV X19, X0
	0x029BB1D4 TBNZ X8, 0x0, 0x29BB240
	0x029BB1D8 ADRP X0, 0x1763000
	0x029BB1DC LDR X0, [X0 + 0x640]
	0x029BB1E0 BL 0x1C16CF4
	0x029BB1E4 ADRP X0, 0x1763000
	0x029BB1E8 LDR X0, [X0 + 0x648]
	0x029BB1EC BL 0x1C16CF4
	0x029BB1F0 ADRP X0, 0x1763000
	0x029BB1F4 LDR X0, [X0 + 0x548]
	0x029BB1F8 BL 0x1C16CF4
	0x029BB1FC ADRP X0, 0x1738000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, [X0+64]
	006 Compare X21, 0
	007 JumpIfNotEqual {27}
	008 Move X8, [X1+32]
	009 Move X19, X0
	010 Move X20, X1
	011 Move X8, [X8+192]
	012 Move X0, [X8+224]
	013 Move W8, [X0+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {19}
	018 Call 0x1C5D684
	019 Call 0x1C17F10
	020 Move X8, [X20+32]
	021 Move X1, X19
	022 Move X21, X0
	023 Move X8, [X8+192]
	024 Move X2, [X8+232]
	025 Call 0x2741290, X0, X1
	026 Move [X19+64], X21
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X0, X21
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Return X0

Method: System.Collections.Generic.ICollection`1<TValue> System.Collections.Generic.IDictionary<TKey,TValue>.get_Values()

Disassembly:
	0x029BB200 LDR X0, [X0 + 0x6C0]
	0x029BB204 BL 0x1C16CF4
	0x029BB208 ADRP X0, 0x1763000
	0x029BB20C LDR X0, [X0 + 0x630]
	0x029BB210 BL 0x1C16CF4
	0x029BB214 ADRP X0, 0x1762000
	0x029BB218 LDR X0, [X0 + 0x2D0]
	0x029BB21C BL 0x1C16CF4
	0x029BB220 ADRP X0, 0x1763000
	0x029BB224 LDR X0, [X0 + 0x638]
	0x029BB228 BL 0x1C16CF4
	0x029BB22C ADRP X0, 0x1739000
	0x029BB230 LDR X0, [X0 + 0x2A0]
	0x029BB234 BL 0x1C16CF4
	0x029BB238 MOVZ W8, 0x1
	0x029BB23C STRB W8, [X21 + 0xFE1]
	0x029BB240 LDR X0, [X25]
	0x029BB244 STR X31, [X31 + 0x8]
	0x029BB248 LDR W8, [X0 + 0xE0]
	0x029BB24C CBNZ W8, 0x29BB254
	0x029BB250 BL 0x1C16DFC
	0x029BB254 MOV X0, X31
	0x029BB258 BL 0x3350638
	0x029BB25C CBZ X0, 0x29BB4E4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, [X0+64]
	006 Compare X21, 0
	007 JumpIfNotEqual {27}
	008 Move X8, [X1+32]
	009 Move X19, X0
	010 Move X20, X1
	011 Move X8, [X8+192]
	012 Move X0, [X8+224]
	013 Move W8, [X0+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {19}
	018 Call 0x1C5D684
	019 Call 0x1C17F10
	020 Move X8, [X20+32]
	021 Move X1, X19
	022 Move X21, X0
	023 Move X8, [X8+192]
	024 Move X2, [X8+232]
	025 Call 0x2741290, X0, X1
	026 Move [X19+64], X21
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X0, X21
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Return X0

Method: TValue get_Item(TKey key)

Disassembly:
	0x029BB260 ADRP X8, 0x1763000
	0x029BB264 LDR X8, [X8 + 0x648]
	0x029BB268 ADD X2, X31, 0x8
	0x029BB26C MOV X1, X19
	0x029BB270 LDR X3, [X8]
	0x029BB274 BL 0x2996F38
	0x029BB278 LDR X0, [X31 + 0x8]
	0x029BB27C CBZ X0, 0x29BB4C8
	0x029BB280 ADRP X8, 0x1739000
	0x029BB284 LDR X8, [X8 + 0x2A0]
	0x029BB288 MOV X2, X31
	0x029BB28C LDR X1, [X8]
	0x029BB290 BL 0x32A9B08
	0x029BB294 LDR X8, [X31 + 0x8]
	0x029BB298 CBZ X8, 0x29BB4E4
	0x029BB29C ADRP X9, 0x1763000
	0x029BB2A0 LDR X9, [X9 + 0x630]
	0x029BB2A4 ADRP X26, 0x1738000
	0x029BB2A8 MOV W21, W0
	0x029BB2AC MOV X0, X8
	0x029BB2B0 LDR X1, [X9]
	0x029BB2B4 LDR X26, [X26 + 0x6C0]
	0x029BB2B8 MOV X2, X31
	0x029BB2BC BL 0x32A9B08
	0x029BB2C0 LDR X9, [X20 + 0x20]
	0x029BB2C4 LDR X8, [X26]
	0x029BB2C8 LDR X23, [X31 + 0x8]
	0x029BB2CC MOV W22, W0
	0x029BB2D0 LDR X9, [X9 + 0xC0]
	0x029BB2D4 LDR W10, [X8 + 0xE0]
	0x029BB2D8 LDR X24, [X9 + 0x158]
	0x029BB2DC CBNZ W10, 0x29BB2E8
	0x029BB2E0 MOV X0, X8
	0x029BB2E4 BL 0x1C16DFC
	0x029BB2E8 MOV X0, X24
	0x029BB2EC MOV X1, X31
	0x029BB2F0 BL 0x338C698

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+32]
	007 Move X19, X2
	008 Move X20, X1
	009 Move X21, X0
	010 Move X8, [X8+192]
	011 Move X2, [X8+248]
	012 Call 0x29BB994, X0, X1
	013 Move TEMP, X0
	014 And TEMP, TEMP, -2147483648
	015 Compare TEMP, -2147483648
	016 JumpIfEqual {27}
	017 Move X8, [X21+24]
	018 Compare X8, 0
	019 JumpIfEqual {42}
	020 Move W9, [X8+24]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move W9, 24
	023 NotImplemented "Instruction UMADDL not yet implemented."
	024 Move W8, [X8+48]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 NotImplemented "Instruction CSET not yet implemented."
	027 Move [X31+8], X20
	028 Move X8, [X19+32]
	029 Add X1, X31, 8
	030 Move X8, [X8+192]
	031 Move X0, [X8+112]
	032 Call 0x1C17E04
	033 Move X1, X31
	034 Call ThrowHelper.ThrowKeyNotFoundException, X0
	035 Move W0, W31
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X30, [X31+16]
	039 Move X21, [X31+24]
	040 Add X31, X31, 48
	041 Return X0
	042 Call 0x1C17F20
	043 Call 0x1C17F28

Method: System.Void set_Item(TKey key, TValue value)

Disassembly:
	0x029BB2F4 CBZ X23, 0x29BB4E4
	0x029BB2F8 ADRP X8, 0x1762000
	0x029BB2FC LDR X8, [X8 + 0x2D0]
	0x029BB300 MOV X2, X0
	0x029BB304 MOV X0, X23
	0x029BB308 MOV X3, X31

ISIL:
	001 Move X8, [X3+32]
	002 And W2, W2, 1
	003 Move W3, 1
	004 Move X8, [X8+192]
	005 Move X4, [X8+256]
	006 Call 0x29BBD38, X0, X1, X2, X3
	007 Return 

Method: System.Void Add(TKey key, TValue value)

Disassembly:
	0x029BB30C LDR X1, [X8]
	0x029BB310 BL 0x32A9678
	0x029BB314 LDR X8, [X20 + 0x20]
	0x029BB318 MOV X23, X0
	0x029BB31C LDR X8, [X8 + 0xC0]
	0x029BB320 LDR X24, [X8 + 0x8]

ISIL:
	001 Move X8, [X3+32]
	002 And W2, W2, 1
	003 Move W3, 2
	004 Move X8, [X8+192]
	005 Move X4, [X8+256]
	006 Call 0x29BBD38, X0, X1, X2, X3
	007 Return 

Method: System.Void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(System.Collections.Generic.KeyValuePair`2<TKey, TValue> keyValuePair)

Disassembly:
	0x029BB324 LDRB W8, [X24 + 0x135]
	0x029BB328 TBNZ X8, 0x0, 0x29BB338
	0x029BB32C MOV X0, X24
	0x029BB330 BL 0x1C5C684
	0x029BB334 MOV X24, X0
	0x029BB338 CBZ X23, 0x29BB350
	0x029BB33C MOV X0, X23
	0x029BB340 MOV X1, X24
	0x029BB344 BL 0x1C16E00
	0x029BB348 CBNZ X0, 0x29BB354

ISIL:
	001 Move X8, [X3+32]
	002 And W31, W2, 255
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Move W3, 2
	005 Move X8, [X8+192]
	006 Move X8, [X8+128]
	007 Move X8, [X8+32]
	008 Move X8, [X8+192]
	009 Move X4, [X8+256]
	010 Call 0x29BBD38, X0, X1, X2, X3
	011 Return 

Method: System.Boolean System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(System.Collections.Generic.KeyValuePair`2<TKey, TValue> keyValuePair)

Disassembly:
	0x029BB34C B 0x29BB4E8
	0x029BB350 MOV X0, X31
	0x029BB354 STR X0, [X19 + 0x30]
	0x029BB358 LDR X8, [X20 + 0x20]
	0x029BB35C LDR X8, [X8 + 0xC0]
	0x029BB360 LDR X24, [X8 + 0x8]
	0x029BB364 LDRB W8, [X24 + 0x135]
	0x029BB368 TBNZ X8, 0x0, 0x29BB378
	0x029BB36C MOV X0, X24
	0x029BB370 BL 0x1C5C684
	0x029BB374 MOV X24, X0
	0x029BB378 CBZ X23, 0x29BB38C
	0x029BB37C MOV X0, X23
	0x029BB380 MOV X1, X24
	0x029BB384 BL 0x1C16E00
	0x029BB388 CBZ X0, 0x29BB4E8
	0x029BB38C CBZ W22, 0x29BB490
	0x029BB390 LDR X8, [X20 + 0x20]
	0x029BB394 MOV X0, X19
	0x029BB398 MOV W1, W22
	0x029BB39C LDR X8, [X8 + 0xC0]
	0x029BB3A0 LDR X2, [X8 + 0x10]
	0x029BB3A4 BL 0x29BAC70
	0x029BB3A8 LDR X8, [X20 + 0x20]
	0x029BB3AC LDR X0, [X26]
	0x029BB3B0 LDR X22, [X31 + 0x8]
	0x029BB3B4 LDR X8, [X8 + 0xC0]
	0x029BB3B8 LDR W9, [X0 + 0xE0]
	0x029BB3BC LDR X23, [X8 + 0x170]
	0x029BB3C0 CBNZ W9, 0x29BB3C8
	0x029BB3C4 BL 0x1C16DFC
	0x029BB3C8 MOV X0, X23
	0x029BB3CC MOV X1, X31
	0x029BB3D0 BL 0x338C698
	0x029BB3D4 CBZ X22, 0x29BB4E4
	0x029BB3D8 ADRP X8, 0x1763000
	0x029BB3DC LDR X8, [X8 + 0x638]
	0x029BB3E0 MOV X2, X0
	0x029BB3E4 MOV X0, X22
	0x029BB3E8 MOV X3, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X3+32]
	007 Move X19, X2
	008 Move X22, X3
	009 Move X21, X0
	010 Move X8, [X8+192]
	011 Move X2, [X8+248]
	012 Call 0x29BB994, X0, X1
	013 Move TEMP, X0
	014 And TEMP, TEMP, -2147483648
	015 Compare TEMP, -2147483648
	016 JumpIfEqual {43}
	017 Move X8, [X22+32]
	018 Move W20, W0
	019 Move X8, [X8+192]
	020 Move X0, [X8+264]
	021 Call 0x21199DC
	022 Move X8, [X21+24]
	023 Compare X8, 0
	024 JumpIfEqual {50}
	025 Move W9, [X8+24]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Compare X0, 0
	028 JumpIfEqual {50}
	029 Move X9, [X0]
	030 Move W10, 24
	031 NotImplemented "Instruction UMADDL not yet implemented."
	032 Move W1, [X8+48]
	033 Move X8, [X9+440]
	034 Move X3, [X9+448]
	035 And W31, W19, 255
	036 NotImplemented "Instruction CSET not yet implemented."
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {43}
	042 Move W0, 1
	043 Move W0, W31
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X30, [X31+48]
	049 Return X0
	050 Call 0x1C17F20
	051 Call 0x1C17F28

Method: System.Boolean System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(System.Collections.Generic.KeyValuePair`2<TKey, TValue> keyValuePair)

Disassembly:
	0x029BB3EC LDR X1, [X8]
	0x029BB3F0 BL 0x32A9678
	0x029BB3F4 LDR X8, [X20 + 0x20]
	0x029BB3F8 MOV X24, X0
	0x029BB3FC LDR X8, [X8 + 0xC0]
	0x029BB400 LDR X23, [X8 + 0x130]
	0x029BB404 LDRB W8, [X23 + 0x135]
	0x029BB408 TBNZ X8, 0x0, 0x29BB418
	0x029BB40C MOV X0, X23
	0x029BB410 BL 0x1C5C684
	0x029BB414 MOV X23, X0
	0x029BB418 CBZ X24, 0x29BB4F4
	0x029BB41C MOV X0, X24
	0x029BB420 MOV X1, X23
	0x029BB424 BL 0x1C16E00
	0x029BB428 CBZ X0, 0x29BB504
	0x029BB42C LDR W8, [X0 + 0x18]
	0x029BB430 MOV X22, X0
	0x029BB434 CMP W8, 0x1
	0x029BB438 B.LT 0x29BB494
	0x029BB43C MOV X23, X31
	0x029BB440 ADD X24, X22, 0x28
	0x029BB444 LDR W8, [X22 + 0x18]
	0x029BB448 CMP X23, X8
	0x029BB44C B.CS 0x29BB4E0
	0x029BB450 LDR X8, [X20 + 0x20]
	0x029BB454 LDUR X1, [X24 - 0x8]
	0x029BB458 LDRB W2, [X24], #0x10
	0x029BB45C MOVZ W3, 0x2
	0x029BB460 LDR X8, [X8 + 0xC0]
	0x029BB464 MOV X0, X19
	0x029BB468 LDR X8, [X8 + 0x80]
	0x029BB46C LDR X8, [X8 + 0x20]
	0x029BB470 LDR X8, [X8 + 0xC0]
	0x029BB474 LDR X4, [X8 + 0x100]
	0x029BB478 BL 0x29BAD38
	0x029BB47C LDRSW X8, [X22 + 0x18]
	0x029BB480 ADD X23, X23, 0x1
	0x029BB484 CMP X23, X8
	0x029BB488 B.LT 0x29BB444
	0x029BB48C B 0x29BB494
	0x029BB490 STR X31, [X19 + 0x10]
	0x029BB494 STR W21, [X19 + 0x2C]
	0x029BB498 LDR X0, [X25]
	0x029BB49C LDR W8, [X0 + 0xE0]
	0x029BB4A0 CBNZ W8, 0x29BB4A8
	0x029BB4A4 BL 0x1C16DFC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X3+32]
	008 Move X22, X2
	009 Move X20, X3
	010 Move X19, X1
	011 Move X8, [X8+192]
	012 Move X21, X0
	013 Move X2, [X8+248]
	014 Call 0x29BB994, X0, X1
	015 Move TEMP, X0
	016 And TEMP, TEMP, -2147483648
	017 Compare TEMP, -2147483648
	018 JumpIfEqual {51}
	019 Move X8, [X20+32]
	020 Move W23, W0
	021 Move X8, [X8+192]
	022 Move X0, [X8+264]
	023 Call 0x21199DC
	024 Move X8, [X21+24]
	025 Compare X8, 0
	026 JumpIfEqual {59}
	027 Move W9, [X8+24]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Compare X0, 0
	030 JumpIfEqual {59}
	031 Move X9, [X0]
	032 Move W10, 24
	033 NotImplemented "Instruction UMADDL not yet implemented."
	034 Move W1, [X8+48]
	035 Move X8, [X9+440]
	036 Move X3, [X9+448]
	037 And W31, W22, 255
	038 NotImplemented "Instruction CSET not yet implemented."
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {51}
	044 Move X8, [X20+32]
	045 Move X0, X21
	046 Move X1, X19
	047 Move X8, [X8+192]
	048 Move X2, [X8+296]
	049 Call 0x29BC6C8, X0, X1
	050 Move W0, 1
	051 Move W0, W31
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X22, [X31+16]
	055 Move X21, [X31+24]
	056 Move X30, [X31+48]
	057 Move X23, [X31+56]
	058 Return X0
	059 Call 0x1C17F20
	060 Call 0x1C17F28

Method: System.Void Clear()

Disassembly:
	0x029BB4A8 MOV X0, X31
	0x029BB4AC BL 0x3350638
	0x029BB4B0 CBZ X0, 0x29BB4E4
	0x029BB4B4 ADRP X8, 0x1763000
	0x029BB4B8 LDR X8, [X8 + 0x640]
	0x029BB4BC MOV X1, X19
	0x029BB4C0 LDR X2, [X8]
	0x029BB4C4 BL 0x2996CF8
	0x029BB4C8 LDP X20, X19, [X31 + 0x40]
	0x029BB4CC LDP X22, X21, [X31 + 0x30]
	0x029BB4D0 LDP X24, X23, [X31 + 0x20]
	0x029BB4D4 LDP X26, X25, [X31 + 0x10]
	0x029BB4D8 LDR X30, [X31], #0x50
	0x029BB4DC RET
	0x029BB4E0 BL 0x1C16F28
	0x029BB4E4 BL 0x1C16F20
	0x029BB4E8 MOV X0, X23
	0x029BB4EC MOV X1, X24
	0x029BB4F0 BL 0x1C171E0
	0x029BB4F4 MOVZ W0, 0x10
	0x029BB4F8 MOV X1, X31
	0x029BB4FC BL 0x339DFFC
	0x029BB500 BL 0x1C16F20
	0x029BB504 MOV X0, X24
	0x029BB508 MOV X1, X23
	0x029BB50C BL 0x1C171E0
	0x029BB510 STR X30, [X31 - 0x30]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W20, [X0+32]
	005 Move X19, X0
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X0, [X19+16]
	008 Compare X0, 0
	009 JumpIfEqual {29}
	010 Move W2, [X0+24]
	011 Move W1, W31
	012 Move X3, X31
	013 Call Array.Clear, X0, X1, X2
	014 Move X0, [X19+24]
	015 NotImplemented "Instruction MOVI not yet implemented."
	016 Move W1, W31
	017 Move W2, W20
	018 Move X3, X31
	019 Move [X19+32], D0
	020 Move [X19+40], W31
	021 Call Array.Clear, X0, X1, X2
	022 Move W8, [X19+44]
	023 Add W8, W8, 1
	024 Move [X19+44], W8
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 
	029 Call 0x1C17F20

Method: System.Boolean ContainsKey(TKey key)

Disassembly:
	0x029BB514 STP X22, X21, [X31 + 0x10]
	0x029BB518 STP X20, X19, [X31 + 0x20]
	0x029BB51C ADRP X22, 0x1A1F000
	0x029BB520 ADRP X21, 0x1763000
	0x029BB524 LDRB W8, [X22 + 0xFE2]
	0x029BB528 LDR X21, [X21 + 0x548]
	0x029BB52C MOV X20, X1
	0x029BB530 MOV X19, X0
	0x029BB534 TBNZ X8, 0x0, 0x29BB54C

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X2+32]
	003 Move X8, [X8+192]
	004 Move X2, [X8+248]
	005 Call 0x29BB994, X0, X1
	006 NotImplemented "Instruction ORN not yet implemented."
	007 Move W0, W8
	008 ShiftRight W0, 31
	009 And W0, W0, 0x7FFFFFFF
	010 Move X30, [X31+16]
	011 Return X0

Method: System.Boolean ContainsValue(TValue value)

Disassembly:
	0x029BB538 ADRP X0, 0x1763000
	0x029BB53C LDR X0, [X0 + 0x548]
	0x029BB540 BL 0x1C16CF4
	0x029BB544 MOVZ W8, 0x1
	0x029BB548 STRB W8, [X22 + 0xFE2]
	0x029BB54C LDR X0, [X21]
	0x029BB550 LDR W21, [X19 + 0x20]
	0x029BB554 LDR W8, [X0 + 0xE0]
	0x029BB558 CBNZ W8, 0x29BB560
	0x029BB55C BL 0x1C16DFC
	0x029BB560 MOV W0, W21
	0x029BB564 MOV X1, X31
	0x029BB568 BL 0x33505B4
	0x029BB56C LDR X8, [X20 + 0x20]
	0x029BB570 MOV W1, W0
	0x029BB574 MOV X0, X19
	0x029BB578 LDP X20, X19, [X31 + 0x20]
	0x029BB57C LDR X8, [X8 + 0xC0]
	0x029BB580 LDP X22, X21, [X31 + 0x10]
	0x029BB584 MOV W2, W31
	0x029BB588 LDR X3, [X8 + 0x1B0]
	0x029BB58C LDR X30, [X31], #0x30
	0x029BB590 B 0x29BB594
	0x029BB594 STP X30, X23, [X31 - 0x30]!
	0x029BB598 STP X22, X21, [X31 + 0x10]
	0x029BB59C STP X20, X19, [X31 + 0x20]
	0x029BB5A0 ADRP X22, 0x1A1F000
	0x029BB5A4 ADRP X23, 0x1739000
	0x029BB5A8 LDRB W8, [X22 + 0xFE3]
	0x029BB5AC LDR X23, [X23 + 0xE58]
	0x029BB5B0 MOV X21, X3
	0x029BB5B4 MOV W20, W1
	0x029BB5B8 MOV X19, X0
	0x029BB5BC TBNZ X8, 0x0, 0x29BB5D4
	0x029BB5C0 ADRP X0, 0x1739000
	0x029BB5C4 LDR X0, [X0 + 0xE58]
	0x029BB5C8 BL 0x1C16CF4
	0x029BB5CC MOVZ W8, 0x1
	0x029BB5D0 STRB W8, [X22 + 0xFE3]
	0x029BB5D4 LDR X0, [X23]
	0x029BB5D8 MOV W1, W20
	0x029BB5DC BL 0x1C16D6C
	0x029BB5E0 LDR X8, [X21 + 0x20]
	0x029BB5E4 MOV X21, X0
	0x029BB5E8 LDR X8, [X8 + 0xC0]
	0x029BB5EC LDR X8, [X8 + 0x198]
	0x029BB5F0 LDRB W9, [X8 + 0x135]
	0x029BB5F4 TBNZ X9, 0x0, 0x29BB604

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move W8, [X0+32]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X22, [X0+24]
	011 Move X20, X0
	012 Compare X22, 0
	013 JumpIfEqual {58}
	014 Move X19, X2
	015 Move X23, X31
	016 Add X24, X22, 48
	017 And W21, W1, 1
	018 Move W9, [X22+24]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 NotImplemented "Instruction LDUR not yet implemented."
	021 Move TEMP, X9
	022 And TEMP, TEMP, -2147483648
	023 Compare TEMP, -2147483648
	024 JumpIfEqual {44}
	025 Move X8, [X19+32]
	026 Move X8, [X8+192]
	027 Move X0, [X8+264]
	028 Call 0x21199DC
	029 Move W8, [X22+24]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Compare X0, 0
	032 JumpIfEqual {58}
	033 Move X8, [X0]
	034 Move W1, [X24]
	035 Move W2, W21
	036 Move X9, [X8+440]
	037 Move X3, [X8+448]
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {48}
	043 Move W8, [X20+32]
	044 Add X23, X23, 1
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Add X24, X24, 24
	047 Move W0, W31
	048 Move W0, 1
	049 Move X20, [X31+48]
	050 Move X19, [X31+56]
	051 Move X22, [X31+32]
	052 Move X21, [X31+40]
	053 Move X24, [X31+16]
	054 Move X23, [X31+24]
	055 Move X30, [X31+64]
	056 Return X0
	057 Call 0x1C17F28
	058 Call 0x1C17F20

Method: System.Void CopyTo(System.Collections.Generic.KeyValuePair`2<TKey, TValue>[] array, System.Int32 index)

Disassembly:
	0x029BB5F8 MOV X0, X8
	0x029BB5FC BL 0x1C5C684
	0x029BB600 MOV X8, X0
	0x029BB604 MOV X0, X8
	0x029BB608 MOV W1, W20
	0x029BB60C BL 0x1C16D6C
	0x029BB610 LDR W23, [X19 + 0x20]
	0x029BB614 LDR X8, [X19 + 0x18]
	0x029BB618 MOV X22, X0
	0x029BB61C MOV W1, W31
	0x029BB620 MOV X2, X22
	0x029BB624 MOV X0, X8
	0x029BB628 MOV W3, W31
	0x029BB62C MOV W4, W23
	0x029BB630 MOV X5, X31
	0x029BB634 BL 0x339FCE8
	0x029BB638 CMP W23, 0x1
	0x029BB63C B.LT 0x29BB6AC
	0x029BB640 CBZ X22, 0x29BB6C4
	0x029BB644 LDR W9, [X22 + 0x18]
	0x029BB648 MOV X8, X31
	0x029BB64C MOVZ W10, 0x18
	0x029BB650 CMP X8, X9
	0x029BB654 B.CS 0x29BB6C0
	0x029BB658 MADD X11, X8, X10, X22
	0x029BB65C LDR W11, [X11 + 0x20]
	0x029BB660 TBNZ X11, 0x1F, 0x29BB6A0
	0x029BB664 CBZ X21, 0x29BB6C4
	0x029BB668 LDR W12, [X21 + 0x18]
	0x029BB66C SDIV W13, W11, W20
	0x029BB670 MSUB W11, W13, W20, W11
	0x029BB674 CMP W11, W12
	0x029BB678 B.CS 0x29BB6C0
	0x029BB67C ADD X11, X21, W11, 0x2, UXTW
	0x029BB680 LDR W12, [X11 + 0x20]
	0x029BB684 NOP
	0x029BB688 MADD X13, X8, X10, X22
	0x029BB68C ADD X8, X8, 0x1
	0x029BB690 SUB W12, W12, 0x1
	0x029BB694 STR W12, [X13 + 0x24]
	0x029BB698 STR W8, [X11 + 0x20]
	0x029BB69C B 0x29BB6A4
	0x029BB6A0 ADD X8, X8, 0x1
	0x029BB6A4 CMP X8, X23
	0x029BB6A8 B.NE 0x29BB650
	0x029BB6AC STP X21, X22, [X19 + 0x10]
	0x029BB6B0 LDP X20, X19, [X31 + 0x20]
	0x029BB6B4 LDP X22, X21, [X31 + 0x10]
	0x029BB6B8 LDP X30, X23, [X31], #0x30
	0x029BB6BC RET
	0x029BB6C0 BL 0x1C16F28
	0x029BB6C4 BL 0x1C16F20
	0x029BB6C8 SUB X31, X31, 0x80
	0x029BB6CC STP X29, X30, [X31 + 0x20]
	0x029BB6D0 STP X28, X27, [X31 + 0x30]
	0x029BB6D4 STP X26, X25, [X31 + 0x40]
	0x029BB6D8 STP X24, X23, [X31 + 0x50]
	0x029BB6DC STP X22, X21, [X31 + 0x60]
	0x029BB6E0 STP X20, X19, [X31 + 0x70]
	0x029BB6E4 STR X1, [X31 + 0x18]
	0x029BB6E8 LDR X8, [X0 + 0x10]
	0x029BB6EC CBZ X8, 0x29BB904
	0x029BB6F0 LDR X22, [X0 + 0x30]
	0x029BB6F4 MOV X19, X0
	0x029BB6F8 MOV X23, X2
	0x029BB6FC CBZ X22, 0x29BB760
	0x029BB700 LDR X8, [X23 + 0x20]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Compare X1, 0
	011 JumpIfEqual {73}
	012 Move W9, [X1+24]
	013 Move X19, X3
	014 Move W21, W2
	015 Move X20, X1
	016 Move X22, X0
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move X0, X31
	019 Call ThrowHelper.ThrowIndexArgumentOutOfRange_NeedNonNegNumException
	020 Move W9, [X20+24]
	021 Move W8, [X22+32]
	022 Move W10, [X22+40]
	023 Subtract W9, W9, W21
	024 Subtract W10, W8, W10
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W0, 5
	027 Move X1, X31
	028 Call ThrowHelper.ThrowArgumentException, X0
	029 Move W8, [X22+32]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X22, [X22+24]
	032 Compare X22, 0
	033 JumpIfEqual {75}
	034 Move X23, X31
	035 Move W24, W8
	036 Add X25, X22, 48
	037 Move W8, [X22+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 Move TEMP, X8
	041 And TEMP, TEMP, -2147483648
	042 Compare TEMP, -2147483648
	043 JumpIfEqual {59}
	044 NotImplemented "Instruction LDUR not yet implemented."
	045 Move W2, [X25]
	046 Move [X31], X31
	047 Move [X31+8], X31
	048 Move X8, [X19+32]
	049 Add X0, X31, 0
	050 Move X8, [X8+192]
	051 Move X3, [X8+320]
	052 Call 0x2EDDDAC, X0, X1, X2
	053 Move W8, [X20+24]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move V0, [X31]
	056 Add X8, X20, W21
	057 Add W21, W21, 1
	058 Move [X8+2], V0
	059 Add X23, X23, 1
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Add X25, X25, 24
	062 Move X20, [X31+64]
	063 Move X19, [X31+72]
	064 Move X22, [X31+48]
	065 Move X21, [X31+56]
	066 Move X24, [X31+32]
	067 Move X23, [X31+40]
	068 Move X30, [X31+16]
	069 Move X25, [X31+24]
	070 Add X31, X31, 80
	071 Return 
	072 Call 0x1C17F28
	073 Move W0, 3
	074 Call ThrowHelper.ThrowArgumentNullException, X0
	075 Call 0x1C17F20

Method: System.Collections.Generic.Dictionary`2/Enumerator<TKey, TValue> GetEnumerator()

Disassembly:
	0x029BB704 MOV X21, X1
	0x029BB708 LDR X8, [X8 + 0xC0]
	0x029BB70C LDR X1, [X8 + 0x8]
	0x029BB710 LDRB W8, [X1 + 0x135]
	0x029BB714 TBNZ X8, 0x0, 0x29BB724
	0x029BB718 MOV X0, X1
	0x029BB71C BL 0x1C5C684
	0x029BB720 MOV X1, X0
	0x029BB724 LDR X8, [X22]
	0x029BB728 LDRH W9, [X8 + 0x12E]

ISIL:
	001 NotImplemented "Instruction MOVI not yet implemented."
	002 Move [X8+32], X31
	003 Move [X8], V0
	004 Move [X8+8], V0
	005 Move X9, [X1+32]
	006 Move W2, 2
	007 Move X1, X0
	008 Move X0, X8
	009 Move X9, [X9+192]
	010 Move X3, [X9+336]
	011 Call 0x2BE6E24, X0, X1, X2
	012 Return X0

Method: System.Collections.Generic.IEnumerator`1<System.Collections.Generic.KeyValuePair`2<TKey, TValue>> System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator()

Disassembly:
	0x029BB72C CBZ X9, 0x29BB750
	0x029BB730 LDR X10, [X8 + 0xB0]
	0x029BB734 ADD X10, X10, 0x8
	0x029BB738 LDUR X11, [X10 - 0x8]
	0x029BB73C CMP X11, X1
	0x029BB740 B.EQ 0x29BB778
	0x029BB744 SUBS X9, X9, 0x1
	0x029BB748 ADD X10, X10, 0x10
	0x029BB74C B.NE 0x29BB738
	0x029BB750 MOVZ W2, 0x1
	0x029BB754 MOV X0, X22
	0x029BB758 BL 0x1C5C788
	0x029BB75C B 0x29BB788
	0x029BB760 LDR X8, [X23 + 0x20]
	0x029BB764 ADD X0, X31, 0x18
	0x029BB768 LDR X8, [X8 + 0xC0]
	0x029BB76C LDR X1, [X8 + 0x178]
	0x029BB770 BL 0x2E0D64C
	0x029BB774 B 0x29BB798
	0x029BB778 LDR W9, [X10]
	0x029BB77C ADD W9, W9, 0x1
	0x029BB780 ADD X8, X8, W9, 0x4, SXTW
	0x029BB784 ADD X0, X8, 0x138
	0x029BB788 LDP X8, X2, [X0]
	0x029BB78C MOV X0, X22

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+96], X30
	003 Move [X31+104], X19
	004 NotImplemented "Instruction MOVI not yet implemented."
	005 Move [X31+80], X31
	006 Move [X31+48], V0
	007 Move [X31+56], V0
	008 Move X8, [X1+32]
	009 Move X19, X1
	010 Move X1, X0
	011 Add X0, X31, 48
	012 Move X8, [X8+192]
	013 Move W2, 2
	014 Move X3, [X8+336]
	015 Call 0x2BE6E24, X0, X1, X2
	016 Move V0, [X31+48]
	017 Move V1, [X31+64]
	018 Move X8, [X31+80]
	019 Add X1, X31, 0
	020 Move [X31], V0
	021 Move [X31+8], V1
	022 Move [X31+32], X8
	023 Move X8, [X19+32]
	024 Move X8, [X8+192]
	025 Move X0, [X8+328]
	026 Call 0x1C17E04
	027 Move X30, [X31+96]
	028 Move X19, [X31+104]
	029 Add X31, X31, 112
	030 Return X0

Method: System.Void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x029BB790 MOV X1, X21
	0x029BB794 BLR X8
	0x029BB798 LDR X8, [X19 + 0x10]
	0x029BB79C CBZ X8, 0x29BB9C4
	0x029BB7A0 LDR W9, [X8 + 0x18]
	0x029BB7A4 AND W27, W0, 0x7FFFFFFF
	0x029BB7A8 SDIV W10, W27, W9
	0x029BB7AC MSUB W10, W10, W9, W27
	0x029BB7B0 CMP W10, W9
	0x029BB7B4 B.CS 0x29BB9C8
	0x029BB7B8 ADD X8, X8, X10, 0x2, LSL
	0x029BB7BC LDR W8, [X8 + 0x20]
	0x029BB7C0 SUBS W24, W8, 0x1
	0x029BB7C4 B.MI 0x29BB904
	0x029BB7C8 MOV X22, X31
	0x029BB7CC MOVN W29, 0x0
	0x029BB7D0 MOVZ W20, 0x18
	0x029BB7D4 STP X10, X23, [X31 + 0x8]
	0x029BB7D8 LDR X26, [X19 + 0x18]
	0x029BB7DC CBZ X26, 0x29BB9C4
	0x029BB7E0 LDR W8, [X26 + 0x18]
	0x029BB7E4 CMP W24, W8
	0x029BB7E8 B.CS 0x29BB9C8
	0x029BB7EC UMADDL X25, X24, X20, X26
	0x029BB7F0 LDR W8, [X25 + 0x20]!
	0x029BB7F4 MOV W28, W24
	0x029BB7F8 CMP W8, W27
	0x029BB7FC B.NE 0x29BB880
	0x029BB800 LDR X8, [X19 + 0x30]
	0x029BB804 CMP X8, 0x0
	0x029BB808 CSEL X21, X22, X8, EQ
	0x029BB80C CBZ X8, 0x29BB888
	0x029BB810 CBZ X21, 0x29BB9C4
	0x029BB814 LDR X8, [X23 + 0x20]
	0x029BB818 LDR X23, [X31 + 0x18]
	0x029BB81C LDR X8, [X8 + 0xC0]
	0x029BB820 LDR X1, [X8 + 0x8]
	0x029BB824 NOP
	0x029BB828 MADD X8, X28, X20, X26
	0x029BB82C LDR X22, [X8 + 0x28]
	0x029BB830 LDRB W8, [X1 + 0x135]
	0x029BB834 TBNZ X8, 0x0, 0x29BB844
	0x029BB838 MOV X0, X1
	0x029BB83C BL 0x1C5C684
	0x029BB840 MOV X1, X0
	0x029BB844 LDR X8, [X21]
	0x029BB848 LDRH W9, [X8 + 0x12E]
	0x029BB84C CBZ X9, 0x29BB870
	0x029BB850 LDR X10, [X8 + 0xB0]
	0x029BB854 ADD X10, X10, 0x8
	0x029BB858 LDUR X11, [X10 - 0x8]
	0x029BB85C CMP X11, X1
	0x029BB860 B.EQ 0x29BB8C4
	0x029BB864 SUBS X9, X9, 0x1
	0x029BB868 ADD X10, X10, 0x10
	0x029BB86C B.NE 0x29BB858
	0x029BB870 MOV X0, X21
	0x029BB874 MOV W2, W31
	0x029BB878 BL 0x1C5C788
	0x029BB87C B 0x29BB8D0
	0x029BB880 MOV X21, X22
	0x029BB884 B 0x29BB8EC
	0x029BB888 LDR X8, [X23 + 0x20]
	0x029BB88C LDR X8, [X8 + 0xC0]
	0x029BB890 LDR X0, [X8 + 0x18]
	0x029BB894 BL 0x29BCA90
	0x029BB898 CBZ X0, 0x29BB9C4
	0x029BB89C LDR X8, [X0]
	0x029BB8A0 NOP
	0x029BB8A4 MADD X9, X28, X20, X26
	0x029BB8A8 LDR X2, [X31 + 0x18]
	0x029BB8AC LDR X1, [X9 + 0x28]
	0x029BB8B0 LDP X9, X3, [X8 + 0x1B8]
	0x029BB8B4 BLR X9
	0x029BB8B8 MOV X21, X22
	0x029BB8BC TBZ X0, 0x0, 0x29BB8EC
	0x029BB8C0 B 0x29BB928
	0x029BB8C4 LDRSW X9, [X10]
	0x029BB8C8 ADD X8, X8, X9, 0x4, LSL
	0x029BB8CC ADD X0, X8, 0x138
	0x029BB8D0 LDP X8, X3, [X0]
	0x029BB8D4 MOV X0, X21
	0x029BB8D8 MOV X1, X22
	0x029BB8DC MOV X2, X23
	0x029BB8E0 BLR X8
	0x029BB8E4 LDR X23, [X31 + 0x10]
	0x029BB8E8 TBNZ X0, 0x0, 0x29BB928
	0x029BB8EC MADD X8, X28, X20, X26
	0x029BB8F0 LDR W8, [X8 + 0x24]
	0x029BB8F4 MOV W29, W24
	0x029BB8F8 MOV X22, X21
	0x029BB8FC MOV W24, W8
	0x029BB900 TBZ X8, 0x1F, 0x29BB7D8
	0x029BB904 MOV W0, W31
	0x029BB908 LDP X20, X19, [X31 + 0x70]
	0x029BB90C LDP X22, X21, [X31 + 0x60]
	0x029BB910 LDP X24, X23, [X31 + 0x50]
	0x029BB914 LDP X26, X25, [X31 + 0x40]
	0x029BB918 LDP X28, X27, [X31 + 0x30]
	0x029BB91C LDP X29, X30, [X31 + 0x20]
	0x029BB920 ADD X31, X31, 0x80
	0x029BB924 RET
	0x029BB928 TBNZ X29, 0x1F, 0x29BB95C
	0x029BB92C LDR X8, [X19 + 0x18]
	0x029BB930 CBZ X8, 0x29BB9C4
	0x029BB934 LDR W9, [X8 + 0x18]
	0x029BB938 CMP W29, W9
	0x029BB93C B.CS 0x29BB9C8
	0x029BB940 MOVZ W9, 0x18
	0x029BB944 MADD X10, X28, X9, X26
	0x029BB948 LDR W10, [X10 + 0x24]
	0x029BB94C NOP
	0x029BB950 UMADDL X8, X29, X9, X8
	0x029BB954 STR W10, [X8 + 0x24]
	0x029BB958 B 0x29BB98C
	0x029BB95C LDR X8, [X19 + 0x10]
	0x029BB960 CBZ X8, 0x29BB9C4
	0x029BB964 LDR W9, [X8 + 0x18]
	0x029BB968 LDR X10, [X31 + 0x8]
	0x029BB96C CMP W10, W9
	0x029BB970 B.CS 0x29BB9C8
	0x029BB974 MOVZ W9, 0x18
	0x029BB978 MADD X9, X28, X9, X26
	0x029BB97C LDR W9, [X9 + 0x24]
	0x029BB980 ADD X8, X8, X10, 0x2, LSL
	0x029BB984 ADD W9, W9, 0x1
	0x029BB988 STR W9, [X8 + 0x20]
	0x029BB98C MOVN W8, 0x0
	0x029BB990 STR W8, [X25]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x1A20000
	011 Move W8, [X22+4063]
	012 Move X20, X4
	013 Move X19, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {36}
	019 Move X0, 0x1739000
	020 Move X0, [X0+1728]
	021 Call 0x1C17CF4
	022 Move X0, 0x1764000
	023 Move X0, [X0+1584]
	024 Call 0x1C17CF4
	025 Move X0, 0x1763000
	026 Move X0, [X0+720]
	027 Call 0x1C17CF4
	028 Move X0, 0x1764000
	029 Move X0, [X0+1592]
	030 Call 0x1C17CF4
	031 Move X0, 0x173A000
	032 Move X0, [X0+672]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X22+4063], W8
	036 Compare X19, 0
	037 JumpIfEqual {150}
	038 Move X8, 0x173A000
	039 Move X8, [X8+672]
	040 Move W2, [X21+44]
	041 Move X22, 0x1763000
	042 Move X25, 0x1739000
	043 Move X1, [X8]
	044 Move X22, [X22+720]
	045 Move X25, [X25+1728]
	046 Move X0, X19
	047 Move X3, X31
	048 Call SerializationInfo.AddValue, X0, X1, X2
	049 Move X23, [X21+48]
	050 Move X22, [X22]
	051 Compare X23, 0
	052 JumpIfNotEqual {58}
	053 Move X8, [X20+32]
	054 Move X8, [X8+192]
	055 Move X0, [X8+24]
	056 Call 0x29BDA90
	057 Move X23, X0
	058 Move X8, [X20+32]
	059 Move X0, [X25]
	060 Move X26, 0x1764000
	061 Move X8, [X8+192]
	062 Move W9, [X0+224]
	063 Move X24, [X8+344]
	064 Move X26, [X26+1584]
	065 Compare W9, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Move X0, X24
	069 Move X1, X31
	070 Call Type.GetTypeFromHandle, X0
	071 Move X3, X0
	072 Move X0, X19
	073 Move X1, X22
	074 Move X2, X23
	075 Move X4, X31
	076 Call SerializationInfo.AddValue, X0, X1, X2, X3
	077 Move X8, [X21+16]
	078 Move X1, [X26]
	079 Compare X8, 0
	080 JumpIfEqual {82}
	081 Move W2, [X8+24]
	082 Move W2, W31
	083 Move X0, X19
	084 Move X3, X31
	085 Call SerializationInfo.AddValue, X0, X1, X2
	086 Move X8, [X21+16]
	087 Compare X8, 0
	088 JumpIfEqual {140}
	089 Move X8, [X20+32]
	090 Move W9, [X21+40]
	091 Move X8, [X8+192]
	092 Move X0, [X8+352]
	093 Move W8, [X21+32]
	094 Move W10, [X0+309]
	095 Subtract W22, W8, W9
	096 Move TEMP, X10
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfEqual {101}
	100 Call 0x1C5D684
	101 Move X23, 0x1764000
	102 Move X23, [X23+1592]
	103 Move W1, W22
	104 Call 0x1C17D6C
	105 Move X8, [X20+32]
	106 Move X22, X0
	107 Move X0, X21
	108 Move X1, X22
	109 Move X8, [X8+192]
	110 Move W2, W31
	111 Move X3, [X8+360]
	112 Call 0x29BB5F8, X0, X1, X2
	113 Move X8, [X20+32]
	114 Move X0, [X25]
	115 Move X8, [X8+192]
	116 Move W9, [X0+224]
	117 Move X20, [X8+368]
	118 Compare W9, 0
	119 JumpIfNotEqual {121}
	120 Call 0x1C17DFC
	121 Move X0, X20
	122 Move X1, X31
	123 Call Type.GetTypeFromHandle, X0
	124 Move X1, [X23]
	125 Move X3, X0
	126 Move X0, X19
	127 Move X2, X22
	128 Move X20, [X31+64]
	129 Move X19, [X31+72]
	130 Move X22, [X31+48]
	131 Move X21, [X31+56]
	132 Move X24, [X31+32]
	133 Move X23, [X31+40]
	134 Move X26, [X31+16]
	135 Move X25, [X31+24]
	136 Move X4, X31
	137 Move X30, [X31+80]
	138 Call SerializationInfo.AddValue, X0, X1, X2, X3
	139 Return 
	140 Move X20, [X31+64]
	141 Move X19, [X31+72]
	142 Move X22, [X31+48]
	143 Move X21, [X31+56]
	144 Move X24, [X31+32]
	145 Move X23, [X31+40]
	146 Move X26, [X31+16]
	147 Move X25, [X31+24]
	148 Move X30, [X31+80]
	149 Return 
	150 Move W0, 4
	151 Move X1, X31
	152 Call ThrowHelper.ThrowArgumentNullException, X0
	153 Call 0x1C17F20

Method: System.Int32 FindEntry(TKey key)

Disassembly:
	0x029BB994 LDR W8, [X19 + 0x24]
	0x029BB998 MOVZ W9, 0x18
	0x029BB99C MADD X9, X28, X9, X26
	0x029BB9A0 STR X31, [X9 + 0x28]
	0x029BB9A4 STR W8, [X9 + 0x24]
	0x029BB9A8 LDR V0, [X19 + 0x28]
	0x029BB9AC MOVI V1.2S, 0x1
	0x029BB9B0 MOVZ W0, 0x1
	0x029BB9B4 STR W24, [X19 + 0x24]
	0x029BB9B8 ADD S0.2S, S0.2S, S1.2S
	0x029BB9BC STR D0, [X19 + 0x28]
	0x029BB9C0 B 0x29BB908
	0x029BB9C4 BL 0x1C16F20
	0x029BB9C8 BL 0x1C16F28
	0x029BB9CC SUB X31, X31, 0x80
	0x029BB9D0 STP X29, X30, [X31 + 0x20]
	0x029BB9D4 STP X28, X27, [X31 + 0x30]
	0x029BB9D8 STP X26, X25, [X31 + 0x40]
	0x029BB9DC STP X24, X23, [X31 + 0x50]
	0x029BB9E0 STP X22, X21, [X31 + 0x60]
	0x029BB9E4 STP X20, X19, [X31 + 0x70]
	0x029BB9E8 STR X1, [X31 + 0x18]
	0x029BB9EC LDR X8, [X0 + 0x10]
	0x029BB9F0 STR X2, [X31 + 0x8]
	0x029BB9F4 CBZ X8, 0x29BBC10
	0x029BB9F8 LDR X23, [X0 + 0x30]
	0x029BB9FC MOV X24, X3
	0x029BBA00 MOV X19, X0
	0x029BBA04 CBZ X23, 0x29BBA68
	0x029BBA08 LDR X8, [X24 + 0x20]
	0x029BBA0C MOV X22, X1
	0x029BBA10 LDR X8, [X8 + 0xC0]
	0x029BBA14 LDR X1, [X8 + 0x8]
	0x029BBA18 LDRB W8, [X1 + 0x135]
	0x029BBA1C TBNZ X8, 0x0, 0x29BBA2C
	0x029BBA20 MOV X0, X1
	0x029BBA24 BL 0x1C5C684
	0x029BBA28 MOV X1, X0
	0x029BBA2C LDR X8, [X23]
	0x029BBA30 LDRH W9, [X8 + 0x12E]
	0x029BBA34 CBZ X9, 0x29BBA58
	0x029BBA38 LDR X10, [X8 + 0xB0]
	0x029BBA3C ADD X10, X10, 0x8
	0x029BBA40 LDUR X11, [X10 - 0x8]
	0x029BBA44 CMP X11, X1
	0x029BBA48 B.EQ 0x29BBA80
	0x029BBA4C SUBS X9, X9, 0x1
	0x029BBA50 ADD X10, X10, 0x10
	0x029BBA54 B.NE 0x29BBA40
	0x029BBA58 MOVZ W2, 0x1
	0x029BBA5C MOV X0, X23
	0x029BBA60 BL 0x1C5C788
	0x029BBA64 B 0x29BBA90
	0x029BBA68 LDR X8, [X24 + 0x20]
	0x029BBA6C ADD X0, X31, 0x18
	0x029BBA70 LDR X8, [X8 + 0xC0]
	0x029BBA74 LDR X1, [X8 + 0x178]
	0x029BBA78 BL 0x2E0D64C
	0x029BBA7C B 0x29BBAA0
	0x029BBA80 LDR W9, [X10]
	0x029BBA84 ADD W9, W9, 0x1
	0x029BBA88 ADD X8, X8, W9, 0x4, SXTW
	0x029BBA8C ADD X0, X8, 0x138
	0x029BBA90 LDP X8, X2, [X0]
	0x029BBA94 MOV X0, X23
	0x029BBA98 MOV X1, X22
	0x029BBA9C BLR X8
	0x029BBAA0 LDR X8, [X19 + 0x10]
	0x029BBAA4 CBZ X8, 0x29BBCE4
	0x029BBAA8 LDR W9, [X8 + 0x18]
	0x029BBAAC AND W28, W0, 0x7FFFFFFF
	0x029BBAB0 SDIV W10, W28, W9
	0x029BBAB4 MSUB W10, W10, W9, W28
	0x029BBAB8 CMP W10, W9
	0x029BBABC B.CS 0x29BBCE8
	0x029BBAC0 ADD X8, X8, X10, 0x2, LSL
	0x029BBAC4 LDR W8, [X8 + 0x20]
	0x029BBAC8 STR X10, [X31]
	0x029BBACC SUBS W25, W8, 0x1
	0x029BBAD0 B.MI 0x29BBC10
	0x029BBAD4 MOV X23, X31
	0x029BBAD8 MOVN W26, 0x0
	0x029BBADC MOVZ W21, 0x18
	0x029BBAE0 STR X24, [X31 + 0x10]
	0x029BBAE4 LDR X27, [X19 + 0x18]
	0x029BBAE8 CBZ X27, 0x29BBCE4
	0x029BBAEC LDR W8, [X27 + 0x18]
	0x029BBAF0 CMP W25, W8
	0x029BBAF4 B.CS 0x29BBCE8
	0x029BBAF8 UMADDL X29, X25, X21, X27
	0x029BBAFC LDR W8, [X29 + 0x20]!
	0x029BBB00 MOV W20, W25
	0x029BBB04 CMP W8, W28
	0x029BBB08 B.NE 0x29BBB8C
	0x029BBB0C LDR X8, [X19 + 0x30]
	0x029BBB10 CMP X8, 0x0
	0x029BBB14 CSEL X22, X23, X8, EQ
	0x029BBB18 CBZ X8, 0x29BBB94
	0x029BBB1C CBZ X22, 0x29BBCE4
	0x029BBB20 LDR X8, [X24 + 0x20]
	0x029BBB24 LDR X24, [X31 + 0x18]
	0x029BBB28 LDR X8, [X8 + 0xC0]
	0x029BBB2C LDR X1, [X8 + 0x8]
	0x029BBB30 NOP
	0x029BBB34 MADD X8, X20, X21, X27
	0x029BBB38 LDR X23, [X8 + 0x28]
	0x029BBB3C LDRB W8, [X1 + 0x135]
	0x029BBB40 TBNZ X8, 0x0, 0x29BBB50
	0x029BBB44 MOV X0, X1
	0x029BBB48 BL 0x1C5C684
	0x029BBB4C MOV X1, X0
	0x029BBB50 LDR X8, [X22]
	0x029BBB54 LDRH W9, [X8 + 0x12E]
	0x029BBB58 CBZ X9, 0x29BBB7C
	0x029BBB5C LDR X10, [X8 + 0xB0]
	0x029BBB60 ADD X10, X10, 0x8
	0x029BBB64 LDUR X11, [X10 - 0x8]
	0x029BBB68 CMP X11, X1
	0x029BBB6C B.EQ 0x29BBBD0
	0x029BBB70 SUBS X9, X9, 0x1
	0x029BBB74 ADD X10, X10, 0x10
	0x029BBB78 B.NE 0x29BBB64
	0x029BBB7C MOV X0, X22
	0x029BBB80 MOV W2, W31
	0x029BBB84 BL 0x1C5C788
	0x029BBB88 B 0x29BBBDC
	0x029BBB8C MOV X22, X23
	0x029BBB90 B 0x29BBBF8
	0x029BBB94 LDR X8, [X24 + 0x20]
	0x029BBB98 LDR X8, [X8 + 0xC0]
	0x029BBB9C LDR X0, [X8 + 0x18]
	0x029BBBA0 BL 0x29BCA90
	0x029BBBA4 CBZ X0, 0x29BBCE4
	0x029BBBA8 LDR X8, [X0]
	0x029BBBAC NOP
	0x029BBBB0 MADD X9, X20, X21, X27
	0x029BBBB4 LDR X2, [X31 + 0x18]
	0x029BBBB8 LDR X1, [X9 + 0x28]
	0x029BBBBC LDP X9, X3, [X8 + 0x1B8]
	0x029BBBC0 BLR X9
	0x029BBBC4 MOV X22, X23
	0x029BBBC8 TBZ X0, 0x0, 0x29BBBF8
	0x029BBBCC B 0x29BBC3C
	0x029BBBD0 LDRSW X9, [X10]
	0x029BBBD4 ADD X8, X8, X9, 0x4, LSL
	0x029BBBD8 ADD X0, X8, 0x138
	0x029BBBDC LDP X8, X3, [X0]
	0x029BBBE0 MOV X0, X22
	0x029BBBE4 MOV X1, X23
	0x029BBBE8 MOV X2, X24
	0x029BBBEC BLR X8
	0x029BBBF0 LDR X24, [X31 + 0x10]
	0x029BBBF4 TBNZ X0, 0x0, 0x29BBC3C
	0x029BBBF8 MADD X8, X20, X21, X27
	0x029BBBFC LDR W8, [X8 + 0x24]
	0x029BBC00 MOV W26, W25
	0x029BBC04 MOV X23, X22
	0x029BBC08 MOV W25, W8
	0x029BBC0C TBZ X8, 0x1F, 0x29BBAE4
	0x029BBC10 LDR X8, [X31 + 0x8]
	0x029BBC14 MOV W0, W31
	0x029BBC18 STRB W31, [X8]
	0x029BBC1C LDP X20, X19, [X31 + 0x70]
	0x029BBC20 LDP X22, X21, [X31 + 0x60]
	0x029BBC24 LDP X24, X23, [X31 + 0x50]
	0x029BBC28 LDP X26, X25, [X31 + 0x40]
	0x029BBC2C LDP X28, X27, [X31 + 0x30]
	0x029BBC30 LDP X29, X30, [X31 + 0x20]
	0x029BBC34 ADD X31, X31, 0x80
	0x029BBC38 RET
	0x029BBC3C TBNZ X26, 0x1F, 0x29BBC70
	0x029BBC40 LDR X8, [X19 + 0x18]
	0x029BBC44 CBZ X8, 0x29BBCE4
	0x029BBC48 LDR W9, [X8 + 0x18]
	0x029BBC4C CMP W26, W9
	0x029BBC50 B.CS 0x29BBCE8
	0x029BBC54 MOVZ W9, 0x18
	0x029BBC58 MADD X10, X20, X9, X27
	0x029BBC5C LDR W10, [X10 + 0x24]
	0x029BBC60 NOP
	0x029BBC64 UMADDL X8, X26, X9, X8
	0x029BBC68 STR W10, [X8 + 0x24]
	0x029BBC6C B 0x29BBCA0

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move [X31+8], X1
	013 Move X22, [X0+16]
	014 Compare X22, 0
	015 JumpIfEqual {46}
	016 Move X21, [X0+48]
	017 Move X23, [X0+24]
	018 Move X19, X2
	019 Compare X21, 0
	020 JumpIfEqual {49}
	021 Move X8, [X19+32]
	022 Move X20, X1
	023 Move X8, [X8+192]
	024 Move X1, [X8+8]
	025 Move W8, [X1+309]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {33}
	030 Move X0, X1
	031 Call 0x1C5D684
	032 Move X1, X0
	033 Move X8, [X21]
	034 NotImplemented "Instruction LDRH not yet implemented."
	035 Compare X9, 0
	036 JumpIfEqual {43}
	037 Move X10, [X8+176]
	038 Add X10, X10, 8
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Subtract X9, X9, 1
	042 Add X10, X10, 16
	043 Move W2, 1
	044 Move X0, X21
	045 Call 0x1C5D788
	046 Move TEMP, 0
	047 Not TEMP
	048 Move W22, TEMP
	049 Move X8, [X19+32]
	050 Add X0, X31, 8
	051 Move X8, [X8+192]
	052 Move X1, [X8+376]
	053 Call 0x2E0E64C, X0
	054 Move W9, [X22+24]
	055 And W20, W0, 0x7FFFFFFF
	056 NotImplemented "Instruction SDIV not yet implemented."
	057 NotImplemented "Instruction MSUB not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Compare X23, 0
	060 JumpIfEqual {195}
	061 Add X8, X22, W8
	062 Move W9, [X8+32]
	063 Move W8, [X23+24]
	064 Subtract W22, W9, 1
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move W21, W31
	067 Move W24, 24
	068 NotImplemented "Instruction SMADDL not yet implemented."
	069 Move W9, [X9+32]
	070 Move X25, W22
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X8, [X19+32]
	073 Move X8, [X8+192]
	074 Move X0, [X8+24]
	075 Call 0x29BDA90
	076 Move W8, [X23+24]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Compare X0, 0
	079 JumpIfEqual {195}
	080 Move X8, [X0]
	081 NotImplemented "Instruction NOP not yet implemented."
	082 NotImplemented "Instruction MADD not yet implemented."
	083 Move X2, [X31+8]
	084 Move X1, [X9+40]
	085 Move X9, [X8+440]
	086 Move X3, [X8+448]
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfEqual {181}
	092 Move W8, [X23+24]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 NotImplemented "Instruction MADD not yet implemented."
	095 Move W22, [X9+36]
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move X0, X31
	098 Call ThrowHelper.ThrowInvalidOperationException_ConcurrentOperationsNotSupported
	099 Move W8, [X23+24]
	100 Add W21, W21, 1
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move W9, [X10]
	103 Add W9, W9, 1
	104 Add X8, X8, W9
	105 Add X0, X8, 312
	106 Move X8, [X0]
	107 Move X2, [X0+8]
	108 Move X0, X21
	109 Move X1, X20
	110 NotImplemented "Instruction BLR not yet implemented."
	111 Move W9, [X22+24]
	112 And W24, W0, 0x7FFFFFFF
	113 NotImplemented "Instruction SDIV not yet implemented."
	114 NotImplemented "Instruction MSUB not yet implemented."
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Compare X23, 0
	117 JumpIfEqual {195}
	118 Add X8, X22, W8
	119 Move W9, [X8+32]
	120 Move W8, [X23+24]
	121 Subtract W26, W9, 1
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move W25, W31
	124 Move W27, 24
	125 NotImplemented "Instruction SMADDL not yet implemented."
	126 Move W9, [X9+32]
	127 Move X28, W26
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move X8, [X19+32]
	130 Move X8, [X8+192]
	131 Move X1, [X8+8]
	132 NotImplemented "Instruction NOP not yet implemented."
	133 NotImplemented "Instruction MADD not yet implemented."
	134 Move X22, [X8+40]
	135 Move W9, [X1+309]
	136 Move TEMP, X9
	137 And TEMP, TEMP, 1
	138 Compare TEMP, 1
	139 JumpIfEqual {143}
	140 Move X0, X1
	141 Call 0x1C5D684
	142 Move X1, X0
	143 Move X8, [X21]
	144 NotImplemented "Instruction LDRH not yet implemented."
	145 Compare X9, 0
	146 JumpIfEqual {153}
	147 Move X10, [X8+176]
	148 Add X10, X10, 8
	149 NotImplemented "Instruction LDUR not yet implemented."
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Subtract X9, X9, 1
	152 Add X10, X10, 16
	153 Move X0, X21
	154 Move W2, W31
	155 Call 0x1C5D788
	156 NotImplemented "Instruction LDRSW not yet implemented."
	157 Add X8, X8, X9
	158 Add X0, X8, 312
	159 Move X8, [X0]
	160 Move X3, [X0+8]
	161 Move X0, X21
	162 Move X1, X22
	163 Move X2, X20
	164 NotImplemented "Instruction BLR not yet implemented."
	165 Move TEMP, X0
	166 And TEMP, TEMP, 1
	167 Compare TEMP, 1
	168 JumpIfEqual {180}
	169 Move W8, [X23+24]
	170 NotImplemented "Instruction CMP not yet implemented."
	171 NotImplemented "Instruction MADD not yet implemented."
	172 Move W26, [X9+36]
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Move X0, X31
	175 Call ThrowHelper.ThrowInvalidOperationException_ConcurrentOperationsNotSupported
	176 Move W8, [X23+24]
	177 Add W25, W25, 1
	178 Move W22, W26
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Move W22, W26
	181 Move W0, W22
	182 Move X20, [X31+80]
	183 Move X19, [X31+88]
	184 Move X22, [X31+64]
	185 Move X21, [X31+72]
	186 Move X24, [X31+48]
	187 Move X23, [X31+56]
	188 Move X26, [X31+32]
	189 Move X25, [X31+40]
	190 Move X28, [X31+16]
	191 Move X27, [X31+24]
	192 Move X30, [X31+96]
	193 Return X0
	194 Call 0x1C17F28
	195 Call 0x1C17F20

Method: System.Int32 Initialize(System.Int32 capacity)

Disassembly:
	0x029BBC70 LDR X8, [X19 + 0x10]
	0x029BBC74 CBZ X8, 0x29BBCE4
	0x029BBC78 LDR W9, [X8 + 0x18]
	0x029BBC7C LDR X10, [X31]
	0x029BBC80 CMP W10, W9
	0x029BBC84 B.CS 0x29BBCE8
	0x029BBC88 MOVZ W9, 0x18
	0x029BBC8C MADD X9, X20, X9, X27
	0x029BBC90 LDR W9, [X9 + 0x24]
	0x029BBC94 ADD X8, X8, X10, 0x2, LSL
	0x029BBC98 ADD W9, W9, 0x1
	0x029BBC9C STR W9, [X8 + 0x20]
	0x029BBCA0 MOVZ W8, 0x18
	0x029BBCA4 MADD X8, X20, X8, X27
	0x029BBCA8 LDRB W9, [X8 + 0x30]
	0x029BBCAC LDR X11, [X31 + 0x8]
	0x029BBCB0 MOVN W10, 0x0
	0x029BBCB4 MOVI V1.2S, 0x1
	0x029BBCB8 MOVZ W0, 0x1
	0x029BBCBC STRB W9, [X11]
	0x029BBCC0 STR W10, [X29]
	0x029BBCC4 LDR W9, [X19 + 0x24]
	0x029BBCC8 STR X31, [X8 + 0x28]
	0x029BBCCC STR W9, [X8 + 0x24]
	0x029BBCD0 LDR V0, [X19 + 0x28]
	0x029BBCD4 STR W25, [X19 + 0x24]
	0x029BBCD8 ADD S0.2S, S0.2S, S1.2S
	0x029BBCDC STR D0, [X19 + 0x28]
	0x029BBCE0 B 0x29BBC1C
	0x029BBCE4 BL 0x1C16F20
	0x029BBCE8 BL 0x1C16F28
	0x029BBCEC STR X30, [X31 - 0x20]!
	0x029BBCF0 STP X20, X19, [X31 + 0x10]
	0x029BBCF4 LDR X8, [X3 + 0x20]
	0x029BBCF8 MOV X19, X2
	0x029BBCFC MOV X20, X0
	0x029BBD00 LDR X8, [X8 + 0xC0]
	0x029BBD04 LDR X2, [X8 + 0xF8]
	0x029BBD08 BL 0x29BA994
	0x029BBD0C TBNZ X0, 0x1F, 0x29BBD34
	0x029BBD10 LDR X8, [X20 + 0x18]
	0x029BBD14 CBZ X8, 0x29BBD50
	0x029BBD18 LDR W9, [X8 + 0x18]
	0x029BBD1C CMP W0, W9
	0x029BBD20 B.CS 0x29BBD54
	0x029BBD24 MOVZ W9, 0x18
	0x029BBD28 UMADDL X8, X0, X9, X8
	0x029BBD2C LDRB W8, [X8 + 0x30]
	0x029BBD30 B 0x29BBD38
	0x029BBD34 MOV W8, W31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x1A20000
	008 Move X22, 0x1764000
	009 Move W8, [X23+4064]
	010 Move X22, [X22+1352]
	011 Move X20, X2
	012 Move W21, W1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x1764000
	019 Move X0, [X0+1352]
	020 Call 0x1C17CF4
	021 Move X0, 0x173A000
	022 Move X0, [X0+3672]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+4064], W8
	026 Move X0, [X22]
	027 Move X22, 0x173A000
	028 Move W8, [X0+224]
	029 Move X22, [X22+3672]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move W0, W21
	034 Move X1, X31
	035 Call HashHelpers.GetPrime, X0
	036 Move TEMP, 0
	037 Not TEMP
	038 Move W8, TEMP
	039 Move [X19+36], W8
	040 Move X8, [X22]
	041 Move W21, W0
	042 Move W1, W21
	043 Move X0, X8
	044 Call 0x1C17D6C
	045 Move [X19+16], X0
	046 Move X8, [X20+32]
	047 Move X8, [X8+192]
	048 Move X0, [X8+408]
	049 Move W8, [X0+309]
	050 Move TEMP, X8
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {55}
	054 Call 0x1C5D684
	055 Move W1, W21
	056 Call 0x1C17D6C
	057 Move [X19+24], X0
	058 Move W0, W21
	059 Move X20, [X31+32]
	060 Move X19, [X31+40]
	061 Move X22, [X31+16]
	062 Move X21, [X31+24]
	063 Move X30, [X31+48]
	064 Move X23, [X31+56]
	065 Return X0

Method: System.Boolean TryInsert(TKey key, TValue value, System.Collections.Generic.InsertionBehavior behavior)

Disassembly:
	0x029BBD38 STRB W8, [X19]
	0x029BBD3C LDP X20, X19, [X31 + 0x10]
	0x029BBD40 ORN W9, W31, W0, 0x0
	0x029BBD44 UBFM W0, W9, 0x1F, 0x1F
	0x029BBD48 LDR X30, [X31], #0x20
	0x029BBD4C RET
	0x029BBD50 BL 0x1C16F20
	0x029BBD54 BL 0x1C16F28
	0x029BBD58 LDR X8, [X3 + 0x20]
	0x029BBD5C AND W2, W2, 0x1
	0x029BBD60 MOV W3, W31
	0x029BBD64 LDR X8, [X8 + 0xC0]
	0x029BBD68 LDR X4, [X8 + 0x100]
	0x029BBD6C B 0x29BAD38
	0x029BBD70 MOV W0, W31
	0x029BBD74 RET
	0x029BBD78 LDR X8, [X3 + 0x20]
	0x029BBD7C LDR X8, [X8 + 0xC0]
	0x029BBD80 LDR X3, [X8 + 0x168]
	0x029BBD84 B 0x29BA5F8
	0x029BBD88 SUB X31, X31, 0x70
	0x029BBD8C STR X30, [X31 + 0x20]
	0x029BBD90 STP X26, X25, [X31 + 0x30]
	0x029BBD94 STP X24, X23, [X31 + 0x40]
	0x029BBD98 STP X22, X21, [X31 + 0x50]
	0x029BBD9C STP X20, X19, [X31 + 0x60]
	0x029BBDA0 ADRP X23, 0x1A1F000
	0x029BBDA4 LDRB W8, [X23 + 0xFE4]
	0x029BBDA8 MOV X20, X3
	0x029BBDAC MOV W19, W2
	0x029BBDB0 MOV X22, X1
	0x029BBDB4 MOV X21, X0
	0x029BBDB8 TBNZ X8, 0x0, 0x29BBDDC
	0x029BBDBC ADRP X0, 0x1762000
	0x029BBDC0 LDR X0, [X0 + 0x78]
	0x029BBDC4 BL 0x1C16CF4
	0x029BBDC8 ADRP X0, 0x1738000
	0x029BBDCC LDR X0, [X0 + 0x9D0]
	0x029BBDD0 BL 0x1C16CF4
	0x029BBDD4 MOVZ W8, 0x1
	0x029BBDD8 STRB W8, [X23 + 0xFE4]
	0x029BBDDC CBZ X22, 0x29BC0B8
	0x029BBDE0 MOV X0, X22
	0x029BBDE4 MOV X1, X31
	0x029BBDE8 BL 0x339FCE4
	0x029BBDEC CMP W0, 0x1
	0x029BBDF0 B.EQ 0x29BBE00
	0x029BBDF4 MOVZ W0, 0x7
	0x029BBDF8 MOV X1, X31
	0x029BBDFC BL 0x339DA4C
	0x029BBE00 MOV X0, X22
	0x029BBE04 MOV W1, W31
	0x029BBE08 MOV X2, X31
	0x029BBE0C BL 0x339FA30
	0x029BBE10 CBZ W0, 0x29BBE20
	0x029BBE14 MOVZ W0, 0x6
	0x029BBE18 MOV X1, X31
	0x029BBE1C BL 0x339DA4C
	0x029BBE20 MOV X0, X22
	0x029BBE24 MOV X1, X31
	0x029BBE28 BL 0x3395B7C
	0x029BBE2C CMP W0, W19
	0x029BBE30 B.CS 0x29BBE3C
	0x029BBE34 MOV X0, X31
	0x029BBE38 BL 0x339E2CC
	0x029BBE3C MOV X0, X22
	0x029BBE40 MOV X1, X31
	0x029BBE44 BL 0x3395B7C
	0x029BBE48 LDR W8, [X21 + 0x20]
	0x029BBE4C LDR W9, [X21 + 0x28]
	0x029BBE50 SUB W8, W8, W9
	0x029BBE54 SUB W9, W0, W19
	0x029BBE58 CMP W9, W8
	0x029BBE5C B.GE 0x29BBE6C
	0x029BBE60 MOVZ W0, 0x5
	0x029BBE64 MOV X1, X31
	0x029BBE68 BL 0x339DA4C
	0x029BBE6C LDR X8, [X20 + 0x20]
	0x029BBE70 LDR X8, [X8 + 0xC0]
	0x029BBE74 LDR X1, [X8 + 0x130]
	0x029BBE78 LDRB W8, [X1 + 0x135]
	0x029BBE7C TBNZ X8, 0x0, 0x29BBE8C
	0x029BBE80 MOV X0, X1
	0x029BBE84 BL 0x1C5C684
	0x029BBE88 MOV X1, X0
	0x029BBE8C MOV X0, X22
	0x029BBE90 BL 0x1C16E00
	0x029BBE94 CBZ X0, 0x29BBECC
	0x029BBE98 LDR X8, [X20 + 0x20]
	0x029BBE9C MOV X1, X0
	0x029BBEA0 MOV X0, X21
	0x029BBEA4 MOV W2, W19
	0x029BBEA8 LDR X8, [X8 + 0xC0]
	0x029BBEAC LDP X20, X19, [X31 + 0x60]
	0x029BBEB0 LDP X22, X21, [X31 + 0x50]
	0x029BBEB4 LDP X24, X23, [X31 + 0x40]
	0x029BBEB8 LDR X3, [X8 + 0x168]
	0x029BBEBC LDP X26, X25, [X31 + 0x30]
	0x029BBEC0 LDR X30, [X31 + 0x20]
	0x029BBEC4 ADD X31, X31, 0x70
	0x029BBEC8 B 0x29BA5F8
	0x029BBECC ADRP X8, 0x1762000
	0x029BBED0 LDR X8, [X8 + 0x78]
	0x029BBED4 MOV X0, X22
	0x029BBED8 LDR X1, [X8]
	0x029BBEDC BL 0x1C16E00
	0x029BBEE0 CBZ X0, 0x29BBFAC
	0x029BBEE4 LDR W8, [X21 + 0x20]
	0x029BBEE8 CMP W8, 0x1
	0x029BBEEC B.LT 0x29BC080
	0x029BBEF0 LDR X24, [X21 + 0x18]
	0x029BBEF4 CBZ X24, 0x29BC0C4
	0x029BBEF8 MOV X23, X0
	0x029BBEFC MOV X25, X31
	0x029BBF00 ADD X26, X24, 0x30
	0x029BBF04 LDR W9, [X24 + 0x18]
	0x029BBF08 CMP X25, X9
	0x029BBF0C B.CS 0x29BC09C
	0x029BBF10 LDUR W9, [X26 - 0x10]
	0x029BBF14 TBNZ X9, 0x1F, 0x29BBF98
	0x029BBF18 LDUR X8, [X26 - 0x8]
	0x029BBF1C ADD X1, X31, 0x0
	0x029BBF20 STR X8, [X31]
	0x029BBF24 LDR X8, [X20 + 0x20]
	0x029BBF28 LDR X8, [X8 + 0xC0]
	0x029BBF2C LDR X0, [X8 + 0x70]
	0x029BBF30 BL 0x1C16E04
	0x029BBF34 LDR W8, [X24 + 0x18]
	0x029BBF38 CMP X25, X8
	0x029BBF3C B.CS 0x29BC09C
	0x029BBF40 LDRB W8, [X26]
	0x029BBF44 MOV X22, X0
	0x029BBF48 ADD X1, X31, 0x2C
	0x029BBF4C STRB W8, [X31 + 0x2C]
	0x029BBF50 LDR X8, [X20 + 0x20]
	0x029BBF54 LDR X8, [X8 + 0xC0]
	0x029BBF58 LDR X0, [X8 + 0x78]
	0x029BBF5C BL 0x1C16E04
	0x029BBF60 MOV X2, X0
	0x029BBF64 ADD X0, X31, 0x10
	0x029BBF68 MOV X1, X22
	0x029BBF6C MOV X3, X31
	0x029BBF70 STP X31, X31, [X31 + 0x10]
	0x029BBF74 BL 0x335035C
	0x029BBF78 LDR W8, [X23 + 0x18]
	0x029BBF7C CMP W19, W8
	0x029BBF80 B.CS 0x29BC09C
	0x029BBF84 LDR V0, [X31 + 0x1]
	0x029BBF88 ADD X8, X23, W19, 0x4, SXTW
	0x029BBF8C ADD W19, W19, 0x1
	0x029BBF90 STR V0, [X8 + 0x2]
	0x029BBF94 LDR W8, [X21 + 0x20]
	0x029BBF98 ADD X25, X25, 0x1
	0x029BBF9C CMP X25, W8, SXTW
	0x029BBFA0 ADD X26, X26, 0x18
	0x029BBFA4 B.LT 0x29BBF04
	0x029BBFA8 B 0x29BC080
	0x029BBFAC ADRP X8, 0x1738000
	0x029BBFB0 LDR X8, [X8 + 0x9D0]
	0x029BBFB4 MOV X0, X22
	0x029BBFB8 LDR X1, [X8]
	0x029BBFBC BL 0x1C16E00
	0x029BBFC0 MOV X22, X0
	0x029BBFC4 CBNZ X0, 0x29BBFCC
	0x029BBFC8 BL 0x339E304
	0x029BBFCC LDR W23, [X21 + 0x20]
	0x029BBFD0 CMP W23, 0x1
	0x029BBFD4 B.LT 0x29BC080
	0x029BBFD8 LDR X24, [X21 + 0x18]
	0x029BBFDC CBZ X24, 0x29BC0C8
	0x029BBFE0 MOV X25, X31
	0x029BBFE4 ADD X26, X24, 0x30
	0x029BBFE8 LDR W8, [X24 + 0x18]
	0x029BBFEC CMP X25, X8
	0x029BBFF0 B.CS 0x29BC0A0
	0x029BBFF4 LDUR W8, [X26 - 0x10]
	0x029BBFF8 TBNZ X8, 0x1F, 0x29BC070
	0x029BBFFC LDUR X1, [X26 - 0x8]
	0x029BC000 LDRB W2, [X26]
	0x029BC004 STP X31, X31, [X31 + 0x10]
	0x029BC008 LDR X8, [X20 + 0x20]
	0x029BC00C LDR X8, [X8 + 0xC0]
	0x029BC010 LDR X3, [X8 + 0x140]
	0x029BC014 ADD X0, X31, 0x10
	0x029BC018 BL 0x2EDCDAC
	0x029BC01C LDR V0, [X31 + 0x1]
	0x029BC020 STR V0, [X31]
	0x029BC024 LDR X8, [X20 + 0x20]
	0x029BC028 LDR X8, [X8 + 0xC0]
	0x029BC02C LDR X0, [X8 + 0xA8]
	0x029BC030 ADD X1, X31, 0x0
	0x029BC034 BL 0x1C16E04
	0x029BC038 CBZ X22, 0x29BC0A8
	0x029BC03C MOV X21, X0
	0x029BC040 CBZ X0, 0x29BC058
	0x029BC044 LDR X8, [X22]
	0x029BC048 LDR X1, [X8 + 0x40]
	0x029BC04C MOV X0, X21
	0x029BC050 BL 0x1C16E00
	0x029BC054 CBZ X0, 0x29BC0AC
	0x029BC058 LDR W8, [X22 + 0x18]
	0x029BC05C CMP W19, W8
	0x029BC060 B.CS 0x29BC0A4
	0x029BC064 ADD X8, X22, W19, 0x3, SXTW
	0x029BC068 ADD W19, W19, 0x1
	0x029BC06C STR X21, [X8 + 0x20]
	0x029BC070 ADD X25, X25, 0x1
	0x029BC074 CMP X23, X25
	0x029BC078 ADD X26, X26, 0x18
	0x029BC07C B.NE 0x29BBFE8
	0x029BC080 LDP X20, X19, [X31 + 0x60]
	0x029BC084 LDP X22, X21, [X31 + 0x50]
	0x029BC088 LDP X24, X23, [X31 + 0x40]
	0x029BC08C LDP X26, X25, [X31 + 0x30]
	0x029BC090 LDR X30, [X31 + 0x20]
	0x029BC094 ADD X31, X31, 0x70
	0x029BC098 RET
	0x029BC09C BL 0x1C16F28
	0x029BC0A0 BL 0x1C16F28
	0x029BC0A4 BL 0x1C16F28
	0x029BC0A8 BL 0x1C16F20
	0x029BC0AC BL 0x1C16F44
	0x029BC0B0 MOV X1, X31
	0x029BC0B4 BL 0x1C16DEC
	0x029BC0B8 MOVZ W0, 0x3
	0x029BC0BC MOV X1, X31
	0x029BC0C0 BL 0x338F3E0
	0x029BC0C4 BL 0x1C16F20
	0x029BC0C8 BL 0x1C16F20
	0x029BC0CC B 0x29BC0DC
	0x029BC0D0 B 0x29BC0DC
	0x029BC0D4 B 0x29BC0DC
	0x029BC0D8 B 0x29BC0DC
	0x029BC0DC MOV X19, X0
	0x029BC0E0 CMP W1, 0x1
	0x029BC0E4 B.NE 0x29BC148
	0x029BC0E8 MOV X0, X19
	0x029BC0EC BL 0x3EB1AD0
	0x029BC0F0 MOV X19, X0
	0x029BC0F4 ADRP X0, 0x1760000
	0x029BC0F8 LDR X0, [X0 + 0x320]
	0x029BC0FC BL 0x1C16D08
	0x029BC100 LDR X8, [X19]
	0x029BC104 LDR X1, [X8]
	0x029BC108 BL 0x1C17270
	0x029BC10C TBZ X0, 0x0, 0x29BC120
	0x029BC110 BL 0x3EB1AE0
	0x029BC114 MOV X0, X31
	0x029BC118 BL 0x339E304
	0x029BC11C B 0x29BC080
	0x029BC120 MOVZ W0, 0x8
	0x029BC124 BL 0x3EB1AF0
	0x029BC128 LDR X8, [X19]
	0x029BC12C STR X8, [X0]
	0x029BC130 ADRP X1, 0x14F8000
	0x029BC134 ADD X1, X1, 0xE58
	0x029BC138 MOV X2, X31
	0x029BC13C BL 0x3EB1B00
	0x029BC140 MOV X19, X0
	0x029BC144 BL 0x3EB1AE0
	0x029BC148 MOV X0, X19
	0x029BC14C BL 0x1D2C690
	0x029BC150 BL 0x1990590
	0x029BC154 SUB X31, X31, 0x70
	0x029BC158 STP X30, X19, [X31 + 0x60]
	0x029BC15C MOVI V0.2D, 0x0
	0x029BC160 STR X31, [X31 + 0x50]
	0x029BC164 STP V0, V0, [X31 + 0x30]
	0x029BC168 LDR X8, [X1 + 0x20]
	0x029BC16C MOV X19, X1
	0x029BC170 MOV X1, X0
	0x029BC174 ADD X0, X31, 0x30
	0x029BC178 LDR X8, [X8 + 0xC0]
	0x029BC17C MOVZ W2, 0x2
	0x029BC180 LDR X3, [X8 + 0x150]
	0x029BC184 BL 0x2BE5E24
	0x029BC188 LDP V0, V1, [X31 + 0x30]
	0x029BC18C LDR X8, [X31 + 0x50]
	0x029BC190 ADD X1, X31, 0x0
	0x029BC194 STP V0, V1, [X31]
	0x029BC198 STR X8, [X31 + 0x20]
	0x029BC19C LDR X8, [X19 + 0x20]
	0x029BC1A0 LDR X8, [X8 + 0xC0]
	0x029BC1A4 LDR X0, [X8 + 0x148]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move [X31+24], X1
	015 Move W8, [X0+44]
	016 Move X9, [X0+16]
	017 Move X20, X4
	018 Move W26, W3
	019 Move W23, W2
	020 Move X24, X1
	021 Move X19, X0
	022 Add W8, W8, 1
	023 Move [X0+44], W8
	024 Compare X9, 0
	025 JumpIfNotEqual {32}
	026 Move X8, [X20+32]
	027 Move X0, X19
	028 Move W1, W31
	029 Move X8, [X8+192]
	030 Move X2, [X8+16]
	031 Call 0x29BBC70, X0, X1
	032 Move X22, [X19+48]
	033 Move X25, [X19+24]
	034 Compare X22, 0
	035 JumpIfEqual {60}
	036 Move X8, [X20+32]
	037 Move X8, [X8+192]
	038 Move X1, [X8+8]
	039 Move W8, [X1+309]
	040 Move TEMP, X8
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {47}
	044 Move X0, X1
	045 Call 0x1C5D684
	046 Move X1, X0
	047 Move X8, [X22]
	048 NotImplemented "Instruction LDRH not yet implemented."
	049 Compare X9, 0
	050 JumpIfEqual {57}
	051 Move X10, [X8+176]
	052 Add X10, X10, 8
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Subtract X9, X9, 1
	056 Add X10, X10, 16
	057 Move W2, 1
	058 Move X0, X22
	059 Call 0x1C5D788
	060 Move X8, [X20+32]
	061 Add X0, X31, 24
	062 Move X8, [X8+192]
	063 Move X1, [X8+376]
	064 Call 0x2E0E64C, X0
	065 Move W9, [X10]
	066 Add W9, W9, 1
	067 Add X8, X8, W9
	068 Add X0, X8, 312
	069 Move X8, [X0]
	070 Move X2, [X0+8]
	071 Move X0, X22
	072 Move X1, X24
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Move X8, [X19+16]
	075 Compare X8, 0
	076 JumpIfEqual {288}
	077 Move W10, [X8+24]
	078 And W27, W0, 0x7FFFFFFF
	079 NotImplemented "Instruction SDIV not yet implemented."
	080 NotImplemented "Instruction MSUB not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Add X28, X8, W9
	083 Add X28, X28, 32
	084 Move W8, [X28]
	085 And W24, W23, 1
	086 Subtract W23, W8, 1
	087 Compare X22, 0
	088 JumpIfEqual {154}
	089 Compare X25, 0
	090 JumpIfEqual {288}
	091 Move X8, [X25+24]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move W29, W31
	094 Move W21, 24
	095 Move [X31+8], W26
	096 Move [X31+12], W24
	097 NotImplemented "Instruction NOP not yet implemented."
	098 NotImplemented "Instruction SMADDL not yet implemented."
	099 Move W9, [X9+32]
	100 Move X26, W23
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X8, [X20+32]
	103 Move X24, [X31+24]
	104 Move X8, [X8+192]
	105 Move X1, [X8+8]
	106 NotImplemented "Instruction NOP not yet implemented."
	107 NotImplemented "Instruction MADD not yet implemented."
	108 Move X23, [X8+40]
	109 Move W8, [X1+309]
	110 Move TEMP, X8
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfEqual {117}
	114 Move X0, X1
	115 Call 0x1C5D684
	116 Move X1, X0
	117 Move X8, [X22]
	118 NotImplemented "Instruction LDRH not yet implemented."
	119 Compare X9, 0
	120 JumpIfEqual {127}
	121 Move X10, [X8+176]
	122 Add X10, X10, 8
	123 NotImplemented "Instruction LDUR not yet implemented."
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Subtract X9, X9, 1
	126 Add X10, X10, 16
	127 Move X0, X22
	128 Move W2, W31
	129 Call 0x1C5D788
	130 NotImplemented "Instruction LDRSW not yet implemented."
	131 Add X8, X8, X9
	132 Add X0, X8, 312
	133 Move X8, [X0]
	134 Move X3, [X0+8]
	135 Move X0, X22
	136 Move X1, X23
	137 Move X2, X24
	138 NotImplemented "Instruction BLR not yet implemented."
	139 Move TEMP, X0
	140 And TEMP, TEMP, 1
	141 Compare TEMP, 1
	142 JumpIfEqual {259}
	143 Move W8, [X25+24]
	144 NotImplemented "Instruction CMP not yet implemented."
	145 NotImplemented "Instruction MADD not yet implemented."
	146 Move W23, [X9+36]
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move X0, X31
	149 Call ThrowHelper.ThrowInvalidOperationException_ConcurrentOperationsNotSupported
	150 Move X8, [X25+24]
	151 Add W29, W29, 1
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move W24, [X31+12]
	154 Compare X25, 0
	155 JumpIfEqual {288}
	156 Move X8, [X25+24]
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Move W21, W31
	159 Move W22, 24
	160 NotImplemented "Instruction SMADDL not yet implemented."
	161 Move W9, [X9+32]
	162 Move X23, W23
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Move X8, [X20+32]
	165 Move X8, [X8+192]
	166 Move X0, [X8+24]
	167 Call 0x29BDA90
	168 Move W8, [X25+24]
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Compare X0, 0
	171 JumpIfEqual {288}
	172 Move X8, [X0]
	173 NotImplemented "Instruction NOP not yet implemented."
	174 NotImplemented "Instruction MADD not yet implemented."
	175 Move X2, [X31+24]
	176 Move X1, [X9+40]
	177 Move X9, [X8+440]
	178 Move X3, [X8+448]
	179 NotImplemented "Instruction BLR not yet implemented."
	180 Move TEMP, X0
	181 And TEMP, TEMP, 1
	182 Compare TEMP, 1
	183 JumpIfEqual {269}
	184 Move W8, [X25+24]
	185 NotImplemented "Instruction CMP not yet implemented."
	186 NotImplemented "Instruction MADD not yet implemented."
	187 Move W23, [X9+36]
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Move X0, X31
	190 Call ThrowHelper.ThrowInvalidOperationException_ConcurrentOperationsNotSupported
	191 Move X8, [X25+24]
	192 Add W21, W21, 1
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Move W9, [X19+40]
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Subtract W8, W9, 1
	197 Move [X19+40], W8
	198 Move W21, [X19+36]
	199 Move W8, [X25+24]
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Move X8, W21
	202 Move W9, 24
	203 NotImplemented "Instruction MADD not yet implemented."
	204 Move W9, [X9+36]
	205 Move [X19+36], W9
	206 Move W21, [X19+32]
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Move X8, [X20+32]
	209 Move X0, X19
	210 Move X8, [X8+192]
	211 Move X1, [X8+416]
	212 Call 0x29BC510, X0
	213 Move X8, [X19+16]
	214 Add W9, W21, 1
	215 Move [X19+32], W9
	216 Compare X8, 0
	217 JumpIfEqual {288}
	218 Move W10, [X8+24]
	219 NotImplemented "Instruction SDIV not yet implemented."
	220 NotImplemented "Instruction MSUB not yet implemented."
	221 NotImplemented "Instruction CMP not yet implemented."
	222 Move X25, [X19+24]
	223 Add X8, X8, W9
	224 Add X28, X8, 32
	225 Move X25, [X19+24]
	226 Add W8, W21, 1
	227 Move [X19+32], W8
	228 Compare X25, 0
	229 JumpIfEqual {288}
	230 Move W8, [X25+24]
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Move X8, W21
	233 Move W9, 24
	234 NotImplemented "Instruction MADD not yet implemented."
	235 Move [X8+32], W27
	236 Move W9, [X28]
	237 Add W10, W21, 1
	238 Subtract W9, W9, 1
	239 Move [X8+36], W9
	240 Move X9, [X31+24]
	241 Move [X8+48], W24
	242 Move [X8+40], X9
	243 Move [X28], W10
	244 Move W0, 1
	245 Move X20, [X31+112]
	246 Move X19, [X31+120]
	247 Move X22, [X31+96]
	248 Move X21, [X31+104]
	249 Move X24, [X31+80]
	250 Move X23, [X31+88]
	251 Move X26, [X31+64]
	252 Move X25, [X31+72]
	253 Move X28, [X31+48]
	254 Move X27, [X31+56]
	255 Move X29, [X31+32]
	256 Move X30, [X31+40]
	257 Add X31, X31, 128
	258 Return X0
	259 Move W8, [X31+8]
	260 And W8, W8, 255
	261 NotImplemented "Instruction CMP not yet implemented."
	262 NotImplemented "Instruction CMP not yet implemented."
	263 Move W8, [X25+24]
	264 NotImplemented "Instruction CMP not yet implemented."
	265 Move W9, [X31+12]
	266 Move W8, 24
	267 NotImplemented "Instruction MADD not yet implemented."
	268 Move [X8+48], W9
	269 And W8, W26, 255
	270 NotImplemented "Instruction CMP not yet implemented."
	271 NotImplemented "Instruction CMP not yet implemented."
	272 Move W8, [X25+24]
	273 NotImplemented "Instruction CMP not yet implemented."
	274 Move W8, 24
	275 NotImplemented "Instruction MADD not yet implemented."
	276 Move [X8+48], W24
	277 Move X8, [X31+24]
	278 Add X1, X31, 16
	279 Move [X31+16], X8
	280 Move X8, [X20+32]
	281 Move X8, [X8+192]
	282 Move X0, [X8+112]
	283 Call 0x1C17E04
	284 Move X1, X31
	285 Call ThrowHelper.ThrowAddingDuplicateWithKeyArgumentException, X0
	286 Move W0, W31
	287 Call 0x1C17F28
	288 Call 0x1C17F20

Method: System.Void OnDeserialization(System.Object sender)

Disassembly:
	0x029BC1A8 BL 0x1C16E04
	0x029BC1AC LDP X30, X19, [X31 + 0x60]
	0x029BC1B0 ADD X31, X31, 0x70
	0x029BC1B4 RET
	0x029BC1B8 MOV W0, W31
	0x029BC1BC RET
	0x029BC1C0 STR X30, [X31 - 0x20]!
	0x029BC1C4 STP X20, X19, [X31 + 0x10]
	0x029BC1C8 ADRP X20, 0x1A1E000
	0x029BC1CC LDRB W8, [X20 + 0xFE5]
	0x029BC1D0 MOV X19, X0
	0x029BC1D4 TBNZ X8, 0x0, 0x29BC1EC
	0x029BC1D8 ADRP X0, 0x173D000
	0x029BC1DC LDR X0, [X0 + 0xCC0]
	0x029BC1E0 BL 0x1C16CF4
	0x029BC1E4 MOVZ W8, 0x1
	0x029BC1E8 STRB W8, [X20 + 0xFE5]
	0x029BC1EC LDR X0, [X19 + 0x48]!
	0x029BC1F0 CBNZ X0, 0x29BC224
	0x029BC1F4 ADRP X8, 0x173D000
	0x029BC1F8 LDR X8, [X8 + 0xCC0]
	0x029BC1FC LDR X0, [X8]
	0x029BC200 BL 0x1C16F10
	0x029BC204 MOV X1, X31
	0x029BC208 MOV X20, X0
	0x029BC20C BL 0x33BDD8C
	0x029BC210 MOV X0, X19
	0x029BC214 MOV X1, X20
	0x029BC218 MOV X2, X31
	0x029BC21C BL 0x1C24138
	0x029BC220 LDR X0, [X19]
	0x029BC224 LDP X20, X19, [X31 + 0x10]
	0x029BC228 LDR X30, [X31], #0x20
	0x029BC22C RET
	0x029BC230 LDR X8, [X1 + 0x20]
	0x029BC234 LDR X8, [X8 + 0xC0]
	0x029BC238 LDR X1, [X8 + 0x1D0]
	0x029BC23C B 0x29BA0E0
	0x029BC240 LDR X8, [X1 + 0x20]
	0x029BC244 LDR X8, [X8 + 0xC0]
	0x029BC248 LDR X1, [X8 + 0x1D8]
	0x029BC24C B 0x29BA1A0
	0x029BC250 SUB X31, X31, 0x30
	0x029BC254 STP X30, X21, [X31 + 0x10]
	0x029BC258 STP X20, X19, [X31 + 0x20]
	0x029BC25C LDR X8, [X2 + 0x20]
	0x029BC260 MOV X21, X1
	0x029BC264 MOV X20, X0
	0x029BC268 MOV X0, X21
	0x029BC26C LDR X8, [X8 + 0xC0]
	0x029BC270 MOV X19, X2
	0x029BC274 LDR X1, [X8 + 0x1E0]
	0x029BC278 BL 0x29BC5D4
	0x029BC27C TBZ X0, 0x0, 0x29BC318
	0x029BC280 LDR X8, [X19 + 0x20]
	0x029BC284 LDR X8, [X8 + 0xC0]
	0x029BC288 LDR X1, [X8 + 0x70]
	0x029BC28C LDRB W8, [X1 + 0x135]
	0x029BC290 TBNZ X8, 0x0, 0x29BC2A0
	0x029BC294 MOV X0, X1
	0x029BC298 BL 0x1C5C684
	0x029BC29C MOV X1, X0
	0x029BC2A0 CBZ X21, 0x29BC32C
	0x029BC2A4 LDR X8, [X21]
	0x029BC2A8 LDR X9, [X1 + 0x40]
	0x029BC2AC MOV X0, X21
	0x029BC2B0 LDR X8, [X8 + 0x40]
	0x029BC2B4 CMP X8, X9
	0x029BC2B8 B.NE 0x29BC330
	0x029BC2BC BL 0x1C16E08
	0x029BC2C0 LDR X8, [X19 + 0x20]
	0x029BC2C4 LDR X1, [X0]
	0x029BC2C8 MOV X0, X20
	0x029BC2CC LDR X8, [X8 + 0xC0]
	0x029BC2D0 LDR X2, [X8 + 0xF8]
	0x029BC2D4 BL 0x29BA994
	0x029BC2D8 TBNZ X0, 0x1F, 0x29BC318
	0x029BC2DC LDR X8, [X20 + 0x18]
	0x029BC2E0 CBZ X8, 0x29BC32C
	0x029BC2E4 LDR W9, [X8 + 0x18]
	0x029BC2E8 CMP W0, W9
	0x029BC2EC B.CS 0x29BC334
	0x029BC2F0 MOVZ W9, 0x18
	0x029BC2F4 UMADDL X8, X0, X9, X8
	0x029BC2F8 LDRB W8, [X8 + 0x30]
	0x029BC2FC ADD X1, X31, 0xC
	0x029BC300 STRB W8, [X31 + 0xC]
	0x029BC304 LDR X8, [X19 + 0x20]
	0x029BC308 LDR X8, [X8 + 0xC0]
	0x029BC30C LDR X0, [X8 + 0x78]
	0x029BC310 BL 0x1C16E04
	0x029BC314 B 0x29BC31C
	0x029BC318 MOV X0, X31
	0x029BC31C LDP X20, X19, [X31 + 0x20]
	0x029BC320 LDP X30, X21, [X31 + 0x10]
	0x029BC324 ADD X31, X31, 0x30
	0x029BC328 RET
	0x029BC32C BL 0x1C16F20
	0x029BC330 BL 0x1C171E0
	0x029BC334 BL 0x1C16F28
	0x029BC338 STP X30, X23, [X31 - 0x30]!
	0x029BC33C STP X22, X21, [X31 + 0x10]
	0x029BC340 STP X20, X19, [X31 + 0x20]
	0x029BC344 MOV X20, X3
	0x029BC348 MOV X21, X2
	0x029BC34C MOV X19, X1
	0x029BC350 MOV X22, X0
	0x029BC354 CBNZ X1, 0x29BC360
	0x029BC358 MOVZ W0, 0x5
	0x029BC35C BL 0x338F3E0
	0x029BC360 LDR X8, [X20 + 0x20]
	0x029BC364 MOVZ W1, 0xF
	0x029BC368 MOV X0, X21
	0x029BC36C LDR X8, [X8 + 0xC0]
	0x029BC370 LDR X2, [X8 + 0x1F0]
	0x029BC374 BL 0x229D164
	0x029BC378 LDR X8, [X20 + 0x20]
	0x029BC37C LDR X8, [X8 + 0xC0]
	0x029BC380 LDR X1, [X8 + 0x70]
	0x029BC384 LDRB W8, [X1 + 0x135]
	0x029BC388 TBNZ X8, 0x0, 0x29BC398
	0x029BC38C MOV X0, X1
	0x029BC390 BL 0x1C5C684
	0x029BC394 MOV X1, X0
	0x029BC398 CBZ X19, 0x29BC438
	0x029BC39C LDR X8, [X19]
	0x029BC3A0 LDR X9, [X1 + 0x40]
	0x029BC3A4 LDR X8, [X8 + 0x40]
	0x029BC3A8 CMP X8, X9
	0x029BC3AC B.NE 0x29BC43C
	0x029BC3B0 MOV X0, X19
	0x029BC3B4 BL 0x1C16E08
	0x029BC3B8 LDR X8, [X20 + 0x20]
	0x029BC3BC LDR X23, [X0]
	0x029BC3C0 LDR X8, [X8 + 0xC0]
	0x029BC3C4 LDR X1, [X8 + 0x78]
	0x029BC3C8 LDRB W8, [X1 + 0x135]
	0x029BC3CC TBNZ X8, 0x0, 0x29BC3DC
	0x029BC3D0 MOV X0, X1
	0x029BC3D4 BL 0x1C5C684
	0x029BC3D8 MOV X1, X0
	0x029BC3DC CBZ X21, 0x29BC444
	0x029BC3E0 LDR X8, [X21]
	0x029BC3E4 LDR X9, [X1 + 0x40]
	0x029BC3E8 LDR X8, [X8 + 0x40]
	0x029BC3EC CMP X8, X9
	0x029BC3F0 B.NE 0x29BC448
	0x029BC3F4 MOV X0, X21
	0x029BC3F8 BL 0x1C16E08
	0x029BC3FC LDR X8, [X20 + 0x20]
	0x029BC400 LDRB W2, [X0]
	0x029BC404 LDR X8, [X8 + 0xC0]
	0x029BC408 LDR X8, [X8 + 0x1F8]
	0x029BC40C LDR X8, [X8 + 0x20]
	0x029BC410 LDR X8, [X8 + 0xC0]
	0x029BC414 LDR X4, [X8 + 0x100]
	0x029BC418 MOVZ W3, 0x1
	0x029BC41C MOV X0, X22
	0x029BC420 MOV X1, X23
	0x029BC424 BL 0x29BAD38
	0x029BC428 LDP X20, X19, [X31 + 0x20]
	0x029BC42C LDP X22, X21, [X31 + 0x10]
	0x029BC430 LDP X30, X23, [X31], #0x30
	0x029BC434 RET
	0x029BC438 BL 0x1C16F20
	0x029BC43C MOV X0, X19
	0x029BC440 BL 0x1C171E0
	0x029BC444 BL 0x1C16F20
	0x029BC448 MOV X0, X21
	0x029BC44C BL 0x1C171E0
	0x029BC450 MOV X22, X0
	0x029BC454 MOVZ W23, 0x1
	0x029BC458 B 0x29BC520
	0x029BC45C MOV X22, X0
	0x029BC460 CMP W1, 0x1
	0x029BC464 MOVZ W23, 0x1
	0x029BC468 B.NE 0x29BC520
	0x029BC46C MOV X0, X22
	0x029BC470 BL 0x3EB1AD0
	0x029BC474 MOV X22, X0
	0x029BC478 ADRP X0, 0x173F000
	0x029BC47C LDR X0, [X0 + 0xC08]
	0x029BC480 BL 0x1C16D08
	0x029BC484 LDR X8, [X22]
	0x029BC488 LDR X1, [X8]
	0x029BC48C BL 0x1C17270
	0x029BC490 TBZ X0, 0x0, 0x29BC4DC
	0x029BC494 BL 0x3EB1AE0
	0x029BC498 LDR X8, [X20 + 0x20]
	0x029BC49C LDR X8, [X8 + 0xC0]
	0x029BC4A0 LDR X22, [X8 + 0x200]
	0x029BC4A4 ADRP X0, 0x1737000
	0x029BC4A8 LDR X0, [X0 + 0x6C0]
	0x029BC4AC BL 0x1C16D08
	0x029BC4B0 LDR W8, [X0 + 0xE0]
	0x029BC4B4 CBNZ W8, 0x29BC4BC
	0x029BC4B8 BL 0x1C16DFC
	0x029BC4BC MOV X0, X22
	0x029BC4C0 MOV X1, X31
	0x029BC4C4 BL 0x338C698
	0x029BC4C8 MOV X1, X0
	0x029BC4CC MOV X0, X21
	0x029BC4D0 MOV X2, X31
	0x029BC4D4 BL 0x339D978
	0x029BC4D8 B 0x29BC428
	0x029BC4DC MOVZ W0, 0x8
	0x029BC4E0 BL 0x3EB1AF0
	0x029BC4E4 LDR X8, [X22]
	0x029BC4E8 STR X8, [X0]
	0x029BC4EC ADRP X1, 0x14F8000
	0x029BC4F0 ADD X1, X1, 0xE58
	0x029BC4F4 MOV X2, X31
	0x029BC4F8 BL 0x3EB1B00
	0x029BC4FC B 0x29BC5C0
	0x029BC500 B 0x29BC508
	0x029BC504 B 0x29BC508
	0x029BC508 MOV X22, X0
	0x029BC50C B 0x29BC458

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x1A1F000
	011 Move X25, 0x1763000
	012 Move W8, [X21+4065]
	013 Move X25, [X25+1352]
	014 Move X20, X2
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {46}
	020 Move X0, 0x1763000
	021 Move X0, [X0+1600]
	022 Call 0x1C17CF4
	023 Move X0, 0x1763000
	024 Move X0, [X0+1608]
	025 Call 0x1C17CF4
	026 Move X0, 0x1763000
	027 Move X0, [X0+1352]
	028 Call 0x1C17CF4
	029 Move X0, 0x1738000
	030 Move X0, [X0+1728]
	031 Call 0x1C17CF4
	032 Move X0, 0x1763000
	033 Move X0, [X0+1584]
	034 Call 0x1C17CF4
	035 Move X0, 0x1762000
	036 Move X0, [X0+720]
	037 Call 0x1C17CF4
	038 Move X0, 0x1763000
	039 Move X0, [X0+1592]
	040 Call 0x1C17CF4
	041 Move X0, 0x1739000
	042 Move X0, [X0+672]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X21+4065], W8
	046 Move X0, [X25]
	047 Move [X31+8], X31
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X0, X31
	053 Call HashHelpers.get_SerializationInfoTable
	054 Compare X0, 0
	055 JumpIfEqual {240}
	056 Move X8, 0x1763000
	057 Move X8, [X8+1608]
	058 Add X2, X31, 8
	059 Move X1, X19
	060 Move X3, [X8]
	061 Call 0x2997F38, X0, X1, X2
	062 Move X0, [X31+8]
	063 Compare X0, 0
	064 JumpIfEqual {229}
	065 Move X8, 0x1739000
	066 Move X8, [X8+672]
	067 Move X2, X31
	068 Move X1, [X8]
	069 Call SerializationInfo.GetInt32, X0, X1
	070 Move X8, [X31+8]
	071 Compare X8, 0
	072 JumpIfEqual {240}
	073 Move X9, 0x1763000
	074 Move X9, [X9+1584]
	075 Move X26, 0x1738000
	076 Move W21, W0
	077 Move X0, X8
	078 Move X1, [X9]
	079 Move X26, [X26+1728]
	080 Move X2, X31
	081 Call SerializationInfo.GetInt32, X0, X1
	082 Move X9, [X20+32]
	083 Move X8, [X26]
	084 Move X23, [X31+8]
	085 Move W22, W0
	086 Move X9, [X9+192]
	087 Move W10, [X8+224]
	088 Move X24, [X9+344]
	089 Compare W10, 0
	090 JumpIfNotEqual {93}
	091 Move X0, X8
	092 Call 0x1C17DFC
	093 Move X0, X24
	094 Move X1, X31
	095 Call Type.GetTypeFromHandle, X0
	096 Compare X23, 0
	097 JumpIfEqual {240}
	098 Move X8, 0x1762000
	099 Move X8, [X8+720]
	100 Move X2, X0
	101 Move X0, X23
	102 Move X3, X31
	103 Move X1, [X8]
	104 Call SerializationInfo.GetValue, X0, X1, X2
	105 Move X8, [X20+32]
	106 Move X23, X0
	107 Move X8, [X8+192]
	108 Move X24, [X8+8]
	109 Move W8, [X24+309]
	110 Move TEMP, X8
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfEqual {117}
	114 Move X0, X24
	115 Call 0x1C5D684
	116 Move X24, X0
	117 Compare X23, 0
	118 JumpIfEqual {124}
	119 Move X0, X23
	120 Move X1, X24
	121 Call 0x1C17E00
	122 Compare X0, 0
	123 JumpIfNotEqual {125}
	124 Move X0, X31
	125 Move [X19+48], X0
	126 Move X8, [X20+32]
	127 Move X8, [X8+192]
	128 Move X24, [X8+8]
	129 Move W8, [X24+309]
	130 Move TEMP, X8
	131 And TEMP, TEMP, 1
	132 Compare TEMP, 1
	133 JumpIfEqual {137}
	134 Move X0, X24
	135 Call 0x1C5D684
	136 Move X24, X0
	137 Compare X23, 0
	138 JumpIfEqual {144}
	139 Move X0, X23
	140 Move X1, X24
	141 Call 0x1C17E00
	142 Compare X0, 0
	143 JumpIfEqual {241}
	144 Compare W22, 0
	145 JumpIfEqual {213}
	146 Move X8, [X20+32]
	147 Move X0, X19
	148 Move W1, W22
	149 Move X8, [X8+192]
	150 Move X2, [X8+16]
	151 Call 0x29BBC70, X0, X1
	152 Move X8, [X20+32]
	153 Move X0, [X26]
	154 Move X22, [X31+8]
	155 Move X8, [X8+192]
	156 Move W9, [X0+224]
	157 Move X23, [X8+368]
	158 Compare W9, 0
	159 JumpIfNotEqual {161}
	160 Call 0x1C17DFC
	161 Move X0, X23
	162 Move X1, X31
	163 Call Type.GetTypeFromHandle, X0
	164 Compare X22, 0
	165 JumpIfEqual {240}
	166 Move X8, 0x1763000
	167 Move X8, [X8+1592]
	168 Move X2, X0
	169 Move X0, X22
	170 Move X3, X31
	171 Move X1, [X8]
	172 Call SerializationInfo.GetValue, X0, X1, X2
	173 Move X8, [X20+32]
	174 Move X24, X0
	175 Move X8, [X8+192]
	176 Move X23, [X8+304]
	177 Move W8, [X23+309]
	178 Move TEMP, X8
	179 And TEMP, TEMP, 1
	180 Compare TEMP, 1
	181 JumpIfEqual {185}
	182 Move X0, X23
	183 Call 0x1C5D684
	184 Move X23, X0
	185 Compare X24, 0
	186 JumpIfEqual {244}
	187 Move X0, X24
	188 Move X1, X23
	189 Call 0x1C17E00
	190 Compare X0, 0
	191 JumpIfEqual {248}
	192 Move W8, [X0+24]
	193 Move X22, X0
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Move X23, X31
	196 Add X24, X22, 40
	197 Move W8, [X22+24]
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Move X8, [X20+32]
	200 NotImplemented "Instruction LDUR not yet implemented."
	201 Move W2, [X24+16]
	202 Move W3, 2
	203 Move X8, [X8+192]
	204 Move X0, X19
	205 Move X8, [X8+128]
	206 Move X8, [X8+32]
	207 Move X8, [X8+192]
	208 Move X4, [X8+256]
	209 Call 0x29BBD38, X0, X1, X2, X3
	210 NotImplemented "Instruction LDRSW not yet implemented."
	211 Add X23, X23, 1
	212 NotImplemented "Instruction CMP not yet implemented."
	213 Move [X19+16], X31
	214 Move [X19+44], W21
	215 Move X0, [X25]
	216 Move W8, [X0+224]
	217 Compare W8, 0
	218 JumpIfNotEqual {220}
	219 Call 0x1C17DFC
	220 Move X0, X31
	221 Call HashHelpers.get_SerializationInfoTable
	222 Compare X0, 0
	223 JumpIfEqual {240}
	224 Move X8, 0x1763000
	225 Move X8, [X8+1600]
	226 Move X1, X19
	227 Move X2, [X8]
	228 Call 0x2997CF8, X0, X1
	229 Move X20, [X31+64]
	230 Move X19, [X31+72]
	231 Move X22, [X31+48]
	232 Move X21, [X31+56]
	233 Move X24, [X31+32]
	234 Move X23, [X31+40]
	235 Move X26, [X31+16]
	236 Move X25, [X31+24]
	237 Move X30, [X31+80]
	238 Return 
	239 Call 0x1C17F28
	240 Call 0x1C17F20
	241 Move X0, X23
	242 Move X1, X24
	243 Call 0x1C181E0
	244 Move W0, 16
	245 Move X1, X31
	246 Call ThrowHelper.ThrowSerializationException, X0
	247 Call 0x1C17F20
	248 Move X0, X24
	249 Move X1, X23
	250 Call 0x1C181E0

Method: System.Void Resize()

Disassembly:
	0x029BC510 MOV X21, X1
	0x029BC514 MOV X22, X0
	0x029BC518 BL 0x3EB1AE0
	0x029BC51C MOV W1, W21
	0x029BC520 CMP W1, W23
	0x029BC524 B.NE 0x29BC5C8
	0x029BC528 MOV X0, X22
	0x029BC52C BL 0x3EB1AD0
	0x029BC530 MOV X21, X0
	0x029BC534 ADRP X0, 0x173F000
	0x029BC538 LDR X0, [X0 + 0xC08]
	0x029BC53C BL 0x1C16D08
	0x029BC540 LDR X8, [X21]
	0x029BC544 LDR X1, [X8]
	0x029BC548 BL 0x1C17270
	0x029BC54C TBZ X0, 0x0, 0x29BC5A0
	0x029BC550 BL 0x3EB1AE0
	0x029BC554 LDR X8, [X20 + 0x20]
	0x029BC558 ADRP X0, 0x1737000
	0x029BC55C LDR X8, [X8 + 0xC0]
	0x029BC560 LDR X20, [X8 + 0x208]
	0x029BC564 LDR X0, [X0 + 0x6C0]
	0x029BC568 BL 0x1C16D08
	0x029BC56C LDR W8, [X0 + 0xE0]
	0x029BC570 CBNZ W8, 0x29BC578
	0x029BC574 BL 0x1C16DFC
	0x029BC578 MOV X0, X20
	0x029BC57C MOV X1, X31
	0x029BC580 BL 0x338C698
	0x029BC584 MOV X1, X0
	0x029BC588 MOV X0, X19
	0x029BC58C LDP X20, X19, [X31 + 0x20]
	0x029BC590 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1A1F000
	007 Move X21, 0x1763000
	008 Move W8, [X22+4066]
	009 Move X21, [X21+1352]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x1763000
	017 Move X0, [X0+1352]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+4066], W8
	021 Move X0, [X21]
	022 Move W21, [X19+32]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move W0, W21
	028 Move X1, X31
	029 Call HashHelpers.ExpandPrime, X0
	030 Move X8, [X20+32]
	031 Move W1, W0
	032 Move X0, X19
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X8, [X8+192]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move W2, W31
	039 Move X3, [X8+432]
	040 Move X30, [X31+48]

Method: System.Void Resize(System.Int32 newSize, System.Boolean forceNewHashCodes)

Disassembly:
	0x029BC594 MOV X2, X31
	0x029BC598 LDP X30, X23, [X31], #0x30
	0x029BC59C B 0x339D8A4
	0x029BC5A0 MOVZ W0, 0x8
	0x029BC5A4 BL 0x3EB1AF0
	0x029BC5A8 LDR X8, [X21]
	0x029BC5AC STR X8, [X0]
	0x029BC5B0 ADRP X1, 0x14F8000
	0x029BC5B4 ADD X1, X1, 0xE58
	0x029BC5B8 MOV X2, X31
	0x029BC5BC BL 0x3EB1B00
	0x029BC5C0 MOV X22, X0
	0x029BC5C4 BL 0x3EB1AE0
	0x029BC5C8 MOV X0, X22
	0x029BC5CC BL 0x1D2C690
	0x029BC5D0 BL 0x1990590
	0x029BC5D4 STR X30, [X31 - 0x20]!
	0x029BC5D8 STP X20, X19, [X31 + 0x10]
	0x029BC5DC MOV X20, X1
	0x029BC5E0 MOV X19, X0
	0x029BC5E4 CBNZ X0, 0x29BC5F4
	0x029BC5E8 MOVZ W0, 0x5
	0x029BC5EC MOV X1, X31
	0x029BC5F0 BL 0x338F3E0
	0x029BC5F4 LDR X0, [X20 + 0x20]
	0x029BC5F8 LDRB W8, [X0 + 0x135]
	0x029BC5FC TBNZ X8, 0x0, 0x29BC604
	0x029BC600 BL 0x1C5C684
	0x029BC604 LDR X8, [X0 + 0xC0]
	0x029BC608 LDR X1, [X8 + 0x70]
	0x029BC60C LDRB W8, [X1 + 0x135]
	0x029BC610 TBNZ X8, 0x0, 0x29BC620
	0x029BC614 MOV X0, X1
	0x029BC618 BL 0x1C5C684
	0x029BC61C MOV X1, X0
	0x029BC620 MOV X0, X19
	0x029BC624 BL 0x1C16E00
	0x029BC628 LDP X20, X19, [X31 + 0x10]
	0x029BC62C CMP X0, 0x0
	0x029BC630 CSET W0, NE
	0x029BC634 LDR X30, [X31], #0x20
	0x029BC638 RET
	0x029BC63C STP X30, X23, [X31 - 0x30]!
	0x029BC640 STP X22, X21, [X31 + 0x10]
	0x029BC644 STP X20, X19, [X31 + 0x20]
	0x029BC648 MOV X20, X3
	0x029BC64C MOV X21, X2
	0x029BC650 MOV X19, X1
	0x029BC654 MOV X22, X0
	0x029BC658 CBNZ X1, 0x29BC664
	0x029BC65C MOVZ W0, 0x5
	0x029BC660 BL 0x338F3E0
	0x029BC664 LDR X8, [X20 + 0x20]
	0x029BC668 MOVZ W1, 0xF
	0x029BC66C MOV X0, X21
	0x029BC670 LDR X8, [X8 + 0xC0]
	0x029BC674 LDR X2, [X8 + 0x1F0]
	0x029BC678 BL 0x229D164
	0x029BC67C LDR X8, [X20 + 0x20]
	0x029BC680 LDR X8, [X8 + 0xC0]
	0x029BC684 LDR X1, [X8 + 0x70]
	0x029BC688 LDRB W8, [X1 + 0x135]
	0x029BC68C TBNZ X8, 0x0, 0x29BC69C
	0x029BC690 MOV X0, X1
	0x029BC694 BL 0x1C5C684
	0x029BC698 MOV X1, X0
	0x029BC69C CBZ X19, 0x29BC73C
	0x029BC6A0 LDR X8, [X19]
	0x029BC6A4 LDR X9, [X1 + 0x40]
	0x029BC6A8 LDR X8, [X8 + 0x40]
	0x029BC6AC CMP X8, X9
	0x029BC6B0 B.NE 0x29BC740
	0x029BC6B4 MOV X0, X19
	0x029BC6B8 BL 0x1C16E08
	0x029BC6BC LDR X8, [X20 + 0x20]
	0x029BC6C0 LDR X23, [X0]
	0x029BC6C4 LDR X8, [X8 + 0xC0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1A1F000
	008 Move X23, 0x1739000
	009 Move W8, [X22+4067]
	010 Move X23, [X23+3672]
	011 Move X21, X3
	012 Move W20, W1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x1739000
	019 Move X0, [X0+3672]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+4067], W8
	023 Move X0, [X23]
	024 Move W1, W20
	025 Call 0x1C17D6C
	026 Move X8, [X21+32]
	027 Move X21, X0
	028 Move X8, [X8+192]
	029 Move X8, [X8+408]
	030 Move W9, [X8+309]
	031 Move TEMP, X9
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {38}
	035 Move X0, X8
	036 Call 0x1C5D684
	037 Move X8, X0
	038 Move X0, X8
	039 Move W1, W20
	040 Call 0x1C17D6C
	041 Move W23, [X19+32]
	042 Move X8, [X19+24]
	043 Move X22, X0
	044 Move W1, W31
	045 Move X2, X22
	046 Move X0, X8
	047 Move W3, W31
	048 Move W4, W23
	049 Move X5, X31
	050 Call Array.Copy, X0, X1, X2, X3, X4
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Compare X22, 0
	053 JumpIfEqual {90}
	054 Move W9, [X22+24]
	055 Move X8, X31
	056 Move W10, 24
	057 NotImplemented "Instruction CMP not yet implemented."
	058 NotImplemented "Instruction MADD not yet implemented."
	059 Move W11, [X11+32]
	060 Move TEMP, X11
	061 And TEMP, TEMP, -2147483648
	062 Compare TEMP, -2147483648
	063 JumpIfEqual {78}
	064 Compare X21, 0
	065 JumpIfEqual {90}
	066 Move W12, [X21+24]
	067 NotImplemented "Instruction SDIV not yet implemented."
	068 NotImplemented "Instruction MSUB not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Add X11, X21, W11
	071 Move W12, [X11+32]
	072 NotImplemented "Instruction NOP not yet implemented."
	073 NotImplemented "Instruction MADD not yet implemented."
	074 Add X8, X8, 1
	075 Subtract W12, W12, 1
	076 Move [X13+36], W12
	077 Move [X11+32], W8
	078 Add X8, X8, 1
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move [X19+16], X21
	081 Move [X19+24], X22
	082 Move X20, [X31+32]
	083 Move X19, [X31+40]
	084 Move X22, [X31+16]
	085 Move X21, [X31+24]
	086 Move X30, [X31+48]
	087 Move X23, [X31+56]
	088 Return 
	089 Call 0x1C17F28
	090 Call 0x1C17F20

Method: System.Boolean Remove(TKey key)

Disassembly:
	0x029BC6C8 LDR X1, [X8 + 0x78]
	0x029BC6CC LDRB W8, [X1 + 0x135]
	0x029BC6D0 TBNZ X8, 0x0, 0x29BC6E0
	0x029BC6D4 MOV X0, X1
	0x029BC6D8 BL 0x1C5C684
	0x029BC6DC MOV X1, X0
	0x029BC6E0 CBZ X21, 0x29BC748
	0x029BC6E4 LDR X8, [X21]
	0x029BC6E8 LDR X9, [X1 + 0x40]
	0x029BC6EC LDR X8, [X8 + 0x40]
	0x029BC6F0 CMP X8, X9
	0x029BC6F4 B.NE 0x29BC74C
	0x029BC6F8 MOV X0, X21
	0x029BC6FC BL 0x1C16E08
	0x029BC700 LDR X8, [X20 + 0x20]
	0x029BC704 LDRB W2, [X0]
	0x029BC708 LDR X8, [X8 + 0xC0]
	0x029BC70C LDR X8, [X8 + 0x80]
	0x029BC710 LDR X8, [X8 + 0x20]
	0x029BC714 LDR X8, [X8 + 0xC0]
	0x029BC718 LDR X4, [X8 + 0x100]
	0x029BC71C MOVZ W3, 0x2
	0x029BC720 MOV X0, X22
	0x029BC724 MOV X1, X23
	0x029BC728 BL 0x29BAD38
	0x029BC72C LDP X20, X19, [X31 + 0x20]
	0x029BC730 LDP X22, X21, [X31 + 0x10]
	0x029BC734 LDP X30, X23, [X31], #0x30
	0x029BC738 RET
	0x029BC73C BL 0x1C16F20
	0x029BC740 MOV X0, X19
	0x029BC744 BL 0x1C171E0
	0x029BC748 BL 0x1C16F20
	0x029BC74C MOV X0, X21
	0x029BC750 BL 0x1C171E0
	0x029BC754 MOV X22, X0
	0x029BC758 MOVZ W23, 0x1
	0x029BC75C B 0x29BC824
	0x029BC760 MOV X22, X0
	0x029BC764 CMP W1, 0x1
	0x029BC768 MOVZ W23, 0x1
	0x029BC76C B.NE 0x29BC824
	0x029BC770 MOV X0, X22
	0x029BC774 BL 0x3EB1AD0
	0x029BC778 MOV X22, X0
	0x029BC77C ADRP X0, 0x173F000
	0x029BC780 LDR X0, [X0 + 0xC08]
	0x029BC784 BL 0x1C16D08
	0x029BC788 LDR X8, [X22]
	0x029BC78C LDR X1, [X8]
	0x029BC790 BL 0x1C17270
	0x029BC794 TBZ X0, 0x0, 0x29BC7E0
	0x029BC798 BL 0x3EB1AE0
	0x029BC79C LDR X8, [X20 + 0x20]
	0x029BC7A0 LDR X8, [X8 + 0xC0]
	0x029BC7A4 LDR X22, [X8 + 0x200]
	0x029BC7A8 ADRP X0, 0x1737000
	0x029BC7AC LDR X0, [X0 + 0x6C0]
	0x029BC7B0 BL 0x1C16D08
	0x029BC7B4 LDR W8, [X0 + 0xE0]
	0x029BC7B8 CBNZ W8, 0x29BC7C0
	0x029BC7BC BL 0x1C16DFC
	0x029BC7C0 MOV X0, X22
	0x029BC7C4 MOV X1, X31
	0x029BC7C8 BL 0x338C698
	0x029BC7CC MOV X1, X0
	0x029BC7D0 MOV X0, X21
	0x029BC7D4 MOV X2, X31
	0x029BC7D8 BL 0x339D978
	0x029BC7DC B 0x29BC72C
	0x029BC7E0 MOVZ W0, 0x8
	0x029BC7E4 BL 0x3EB1AF0
	0x029BC7E8 LDR X8, [X22]
	0x029BC7EC STR X8, [X0]
	0x029BC7F0 ADRP X1, 0x14F8000
	0x029BC7F4 ADD X1, X1, 0xE58
	0x029BC7F8 MOV X2, X31
	0x029BC7FC BL 0x3EB1B00
	0x029BC800 B 0x29BC8C4
	0x029BC804 B 0x29BC80C
	0x029BC808 B 0x29BC80C
	0x029BC80C MOV X22, X0
	0x029BC810 B 0x29BC75C
	0x029BC814 MOV X21, X1
	0x029BC818 MOV X22, X0
	0x029BC81C BL 0x3EB1AE0
	0x029BC820 MOV W1, W21
	0x029BC824 CMP W1, W23
	0x029BC828 B.NE 0x29BC8CC
	0x029BC82C MOV X0, X22
	0x029BC830 BL 0x3EB1AD0
	0x029BC834 MOV X21, X0
	0x029BC838 ADRP X0, 0x173F000
	0x029BC83C LDR X0, [X0 + 0xC08]
	0x029BC840 BL 0x1C16D08
	0x029BC844 LDR X8, [X21]
	0x029BC848 LDR X1, [X8]
	0x029BC84C BL 0x1C17270
	0x029BC850 TBZ X0, 0x0, 0x29BC8A4
	0x029BC854 BL 0x3EB1AE0
	0x029BC858 LDR X8, [X20 + 0x20]
	0x029BC85C ADRP X0, 0x1737000
	0x029BC860 LDR X8, [X8 + 0xC0]
	0x029BC864 LDR X20, [X8 + 0x208]
	0x029BC868 LDR X0, [X0 + 0x6C0]
	0x029BC86C BL 0x1C16D08
	0x029BC870 LDR W8, [X0 + 0xE0]
	0x029BC874 CBNZ W8, 0x29BC87C
	0x029BC878 BL 0x1C16DFC
	0x029BC87C MOV X0, X20
	0x029BC880 MOV X1, X31
	0x029BC884 BL 0x338C698
	0x029BC888 MOV X1, X0
	0x029BC88C MOV X0, X19
	0x029BC890 LDP X20, X19, [X31 + 0x20]
	0x029BC894 LDP X22, X21, [X31 + 0x10]
	0x029BC898 MOV X2, X31
	0x029BC89C LDP X30, X23, [X31], #0x30
	0x029BC8A0 B 0x339D8A4
	0x029BC8A4 MOVZ W0, 0x8
	0x029BC8A8 BL 0x3EB1AF0
	0x029BC8AC LDR X8, [X21]
	0x029BC8B0 STR X8, [X0]
	0x029BC8B4 ADRP X1, 0x14F8000
	0x029BC8B8 ADD X1, X1, 0xE58
	0x029BC8BC MOV X2, X31
	0x029BC8C0 BL 0x3EB1B00
	0x029BC8C4 MOV X22, X0
	0x029BC8C8 BL 0x3EB1AE0
	0x029BC8CC MOV X0, X22
	0x029BC8D0 BL 0x1D2C690
	0x029BC8D4 BL 0x1990590
	0x029BC8D8 STP X30, X21, [X31 - 0x20]!
	0x029BC8DC STP X20, X19, [X31 + 0x10]
	0x029BC8E0 LDR X8, [X2 + 0x20]
	0x029BC8E4 MOV X21, X1
	0x029BC8E8 MOV X19, X0
	0x029BC8EC MOV X0, X21
	0x029BC8F0 LDR X8, [X8 + 0xC0]
	0x029BC8F4 MOV X20, X2
	0x029BC8F8 LDR X1, [X8 + 0x1E0]
	0x029BC8FC BL 0x29BC5D4
	0x029BC900 TBZ X0, 0x0, 0x29BC974
	0x029BC904 LDR X8, [X20 + 0x20]
	0x029BC908 LDR X8, [X8 + 0xC0]
	0x029BC90C LDR X1, [X8 + 0x70]
	0x029BC910 LDRB W8, [X1 + 0x135]
	0x029BC914 TBNZ X8, 0x0, 0x29BC924
	0x029BC918 MOV X0, X1
	0x029BC91C BL 0x1C5C684
	0x029BC920 MOV X1, X0
	0x029BC924 CBZ X21, 0x29BC984
	0x029BC928 LDR X8, [X21]
	0x029BC92C LDR X9, [X1 + 0x40]
	0x029BC930 MOV X0, X21
	0x029BC934 LDR X8, [X8 + 0x40]
	0x029BC938 CMP X8, X9
	0x029BC93C B.NE 0x29BC988
	0x029BC940 BL 0x1C16E08
	0x029BC944 LDR X8, [X20 + 0x20]
	0x029BC948 LDR X1, [X0]
	0x029BC94C MOV X0, X19
	0x029BC950 LDR X8, [X8 + 0xC0]
	0x029BC954 LDR X8, [X8 + 0x210]
	0x029BC958 LDR X8, [X8 + 0x20]
	0x029BC95C LDR X8, [X8 + 0xC0]
	0x029BC960 LDR X2, [X8 + 0xF8]
	0x029BC964 BL 0x29BA994
	0x029BC968 ORN W8, W31, W0, 0x0
	0x029BC96C UBFM W0, W8, 0x1F, 0x1F
	0x029BC970 B 0x29BC978
	0x029BC974 MOV W0, W31
	0x029BC978 LDP X20, X19, [X31 + 0x10]
	0x029BC97C LDP X30, X21, [X31], #0x20
	0x029BC980 RET
	0x029BC984 BL 0x1C16F20
	0x029BC988 BL 0x1C171E0
	0x029BC98C SUB X31, X31, 0x70
	0x029BC990 STP X30, X19, [X31 + 0x60]
	0x029BC994 MOVI V0.2D, 0x0
	0x029BC998 STR X31, [X31 + 0x50]
	0x029BC99C STP V0, V0, [X31 + 0x30]
	0x029BC9A0 LDR X8, [X1 + 0x20]
	0x029BC9A4 MOV X19, X1
	0x029BC9A8 MOV X1, X0
	0x029BC9AC ADD X0, X31, 0x30
	0x029BC9B0 LDR X8, [X8 + 0xC0]
	0x029BC9B4 MOVZ W2, 0x1
	0x029BC9B8 LDR X3, [X8 + 0x150]
	0x029BC9BC BL 0x2BE5E24
	0x029BC9C0 LDP V0, V1, [X31 + 0x30]
	0x029BC9C4 LDR X8, [X31 + 0x50]
	0x029BC9C8 ADD X1, X31, 0x0

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move [X31+24], X1
	015 Move X8, [X0+16]
	016 Compare X8, 0
	017 JumpIfEqual {168}
	018 Move X22, [X0+48]
	019 Move X19, X0
	020 Move X23, X2
	021 Compare X22, 0
	022 JumpIfEqual {48}
	023 Move X8, [X23+32]
	024 Move X21, X1
	025 Move X8, [X8+192]
	026 Move X1, [X8+8]
	027 Move W8, [X1+309]
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {35}
	032 Move X0, X1
	033 Call 0x1C5D684
	034 Move X1, X0
	035 Move X8, [X22]
	036 NotImplemented "Instruction LDRH not yet implemented."
	037 Compare X9, 0
	038 JumpIfEqual {45}
	039 Move X10, [X8+176]
	040 Add X10, X10, 8
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Subtract X9, X9, 1
	044 Add X10, X10, 16
	045 Move W2, 1
	046 Move X0, X22
	047 Call 0x1C5D788
	048 Move X8, [X23+32]
	049 Add X0, X31, 24
	050 Move X8, [X8+192]
	051 Move X1, [X8+376]
	052 Call 0x2E0E64C, X0
	053 Move W9, [X10]
	054 Add W9, W9, 1
	055 Add X8, X8, W9
	056 Add X0, X8, 312
	057 Move X8, [X0]
	058 Move X2, [X0+8]
	059 Move X0, X22
	060 Move X1, X21
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Move X8, [X19+16]
	063 Compare X8, 0
	064 JumpIfEqual {225}
	065 Move W9, [X8+24]
	066 And W27, W0, 0x7FFFFFFF
	067 NotImplemented "Instruction SDIV not yet implemented."
	068 NotImplemented "Instruction MSUB not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Add X8, X8, X10
	071 Move W8, [X8+32]
	072 Subtract W24, W8, 1
	073 Move X22, X31
	074 Move TEMP, 0
	075 Not TEMP
	076 Move W29, TEMP
	077 Move W20, 24
	078 Move [X31+8], X10
	079 Move [X31+16], X23
	080 Move X26, [X19+24]
	081 Compare X26, 0
	082 JumpIfEqual {225}
	083 Move W8, [X26+24]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 NotImplemented "Instruction UMADDL not yet implemented."
	086 Add X25, X25, 32
	087 Move W8, [X25]
	088 Move W28, W24
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X8, [X19+48]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 NotImplemented "Instruction CSEL not yet implemented."
	093 Compare X8, 0
	094 JumpIfEqual {126}
	095 Compare X21, 0
	096 JumpIfEqual {225}
	097 Move X8, [X23+32]
	098 Move X23, [X31+24]
	099 Move X8, [X8+192]
	100 Move X1, [X8+8]
	101 NotImplemented "Instruction NOP not yet implemented."
	102 NotImplemented "Instruction MADD not yet implemented."
	103 Move X22, [X8+40]
	104 Move W8, [X1+309]
	105 Move TEMP, X8
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfEqual {112}
	109 Move X0, X1
	110 Call 0x1C5D684
	111 Move X1, X0
	112 Move X8, [X21]
	113 NotImplemented "Instruction LDRH not yet implemented."
	114 Compare X9, 0
	115 JumpIfEqual {122}
	116 Move X10, [X8+176]
	117 Add X10, X10, 8
	118 NotImplemented "Instruction LDUR not yet implemented."
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Subtract X9, X9, 1
	121 Add X10, X10, 16
	122 Move X0, X21
	123 Move W2, W31
	124 Call 0x1C5D788
	125 Move X21, X22
	126 Move X8, [X23+32]
	127 Move X8, [X8+192]
	128 Move X0, [X8+24]
	129 Call 0x29BDA90
	130 Compare X0, 0
	131 JumpIfEqual {225}
	132 Move X8, [X0]
	133 NotImplemented "Instruction NOP not yet implemented."
	134 NotImplemented "Instruction MADD not yet implemented."
	135 Move X2, [X31+24]
	136 Move X1, [X9+40]
	137 Move X9, [X8+440]
	138 Move X3, [X8+448]
	139 NotImplemented "Instruction BLR not yet implemented."
	140 Move X21, X22
	141 Move TEMP, X0
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfNotEqual {159}
	145 NotImplemented "Instruction LDRSW not yet implemented."
	146 Add X8, X8, X9
	147 Add X0, X8, 312
	148 Move X8, [X0]
	149 Move X3, [X0+8]
	150 Move X0, X21
	151 Move X1, X22
	152 Move X2, X23
	153 NotImplemented "Instruction BLR not yet implemented."
	154 Move X23, [X31+16]
	155 Move TEMP, X0
	156 And TEMP, TEMP, 1
	157 Compare TEMP, 1
	158 JumpIfEqual {183}
	159 NotImplemented "Instruction MADD not yet implemented."
	160 Move W8, [X8+36]
	161 Move W29, W24
	162 Move X22, X21
	163 Move W24, W8
	164 Move TEMP, X8
	165 And TEMP, TEMP, -2147483648
	166 Compare TEMP, -2147483648
	167 JumpIfNotEqual {80}
	168 Move W0, W31
	169 Move X20, [X31+112]
	170 Move X19, [X31+120]
	171 Move X22, [X31+96]
	172 Move X21, [X31+104]
	173 Move X24, [X31+80]
	174 Move X23, [X31+88]
	175 Move X26, [X31+64]
	176 Move X25, [X31+72]
	177 Move X28, [X31+48]
	178 Move X27, [X31+56]
	179 Move X29, [X31+32]
	180 Move X30, [X31+40]
	181 Add X31, X31, 128
	182 Return X0
	183 Move TEMP, X29
	184 And TEMP, TEMP, -2147483648
	185 Compare TEMP, -2147483648
	186 JumpIfEqual {198}
	187 Move X8, [X19+24]
	188 Compare X8, 0
	189 JumpIfEqual {225}
	190 Move W9, [X8+24]
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Move W9, 24
	193 NotImplemented "Instruction MADD not yet implemented."
	194 Move W10, [X10+36]
	195 NotImplemented "Instruction NOP not yet implemented."
	196 NotImplemented "Instruction UMADDL not yet implemented."
	197 Move [X8+36], W10
	198 Move X8, [X19+16]
	199 Compare X8, 0
	200 JumpIfEqual {225}
	201 Move W9, [X8+24]
	202 Move X10, [X31+8]
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Move W9, 24
	205 NotImplemented "Instruction MADD not yet implemented."
	206 Move W9, [X9+36]
	207 Add X8, X8, X10
	208 Add W9, W9, 1
	209 Move [X8+32], W9
	210 Move TEMP, 0
	211 Not TEMP
	212 Move W8, TEMP
	213 Move [X25], W8
	214 Move W8, [X19+36]
	215 Move W9, 24
	216 NotImplemented "Instruction MADD not yet implemented."
	217 Move [X9+40], X31
	218 Move [X9+36], W8
	219 Move V0, [X19+40]
	220 NotImplemented "Instruction MOVI not yet implemented."
	221 Move W0, 1
	222 Move [X19+36], W24
	223 Add S0, S0, S1
	224 Move [X19+40], D0
	225 Call 0x1C17F20
	226 Call 0x1C17F28

Method: System.Boolean Remove(TKey key, out TValue value)

Disassembly:
	0x029BC9CC STP V0, V1, [X31]
	0x029BC9D0 STR X8, [X31 + 0x20]
	0x029BC9D4 LDR X8, [X19 + 0x20]
	0x029BC9D8 LDR X8, [X8 + 0xC0]
	0x029BC9DC LDR X0, [X8 + 0x148]
	0x029BC9E0 BL 0x1C16E04
	0x029BC9E4 LDP X30, X19, [X31 + 0x60]
	0x029BC9E8 ADD X31, X31, 0x70
	0x029BC9EC RET
	0x029BC9F0 STP X30, X21, [X31 - 0x20]!
	0x029BC9F4 STP X20, X19, [X31 + 0x10]
	0x029BC9F8 LDR X8, [X2 + 0x20]
	0x029BC9FC MOV X21, X1
	0x029BCA00 MOV X20, X0
	0x029BCA04 MOV X0, X21
	0x029BCA08 LDR X8, [X8 + 0xC0]
	0x029BCA0C MOV X19, X2
	0x029BCA10 LDR X1, [X8 + 0x1E0]
	0x029BCA14 BL 0x29BC5D4
	0x029BCA18 TBZ X0, 0x0, 0x29BCA7C
	0x029BCA1C LDR X8, [X19 + 0x20]
	0x029BCA20 LDR X8, [X8 + 0xC0]
	0x029BCA24 LDR X1, [X8 + 0x70]
	0x029BCA28 LDRB W8, [X1 + 0x135]
	0x029BCA2C TBNZ X8, 0x0, 0x29BCA3C
	0x029BCA30 MOV X0, X1
	0x029BCA34 BL 0x1C5C684
	0x029BCA38 MOV X1, X0
	0x029BCA3C CBZ X21, 0x29BCA88
	0x029BCA40 LDR X8, [X21]
	0x029BCA44 LDR X9, [X1 + 0x40]
	0x029BCA48 MOV X0, X21
	0x029BCA4C LDR X8, [X8 + 0x40]
	0x029BCA50 CMP X8, X9
	0x029BCA54 B.NE 0x29BCA8C
	0x029BCA58 BL 0x1C16E08
	0x029BCA5C LDR X8, [X19 + 0x20]
	0x029BCA60 LDR X1, [X0]
	0x029BCA64 MOV X0, X20
	0x029BCA68 LDP X20, X19, [X31 + 0x10]
	0x029BCA6C LDR X8, [X8 + 0xC0]
	0x029BCA70 LDR X2, [X8 + 0x128]
	0x029BCA74 LDP X30, X21, [X31], #0x20
	0x029BCA78 B 0x29BB6C8
	0x029BCA7C LDP X20, X19, [X31 + 0x10]
	0x029BCA80 LDP X30, X21, [X31], #0x20
	0x029BCA84 RET
	0x029BCA88 BL 0x1C16F20
	0x029BCA8C BL 0x1C171E0
	0x029BCA90 STR X30, [X31 - 0x20]!
	0x029BCA94 STP X20, X19, [X31 + 0x10]
	0x029BCA98 MOV X19, X0
	0x029BCA9C LDR X0, [X0 + 0x20]
	0x029BCAA0 LDRB W8, [X0 + 0x135]
	0x029BCAA4 TBNZ X8, 0x0, 0x29BCAAC
	0x029BCAA8 BL 0x1C5C684
	0x029BCAAC LDR X8, [X0 + 0xC0]
	0x029BCAB0 LDR X0, [X8 + 0x10]
	0x029BCAB4 LDRB W8, [X0 + 0x135]
	0x029BCAB8 TBNZ X8, 0x0, 0x29BCAC0
	0x029BCABC BL 0x1C5C684
	0x029BCAC0 LDR X8, [X0 + 0xB8]
	0x029BCAC4 LDR X20, [X8]
	0x029BCAC8 BL 0x1C16D44
	0x029BCACC CBNZ X20, 0x29BCB44
	0x029BCAD0 LDR X0, [X19 + 0x20]
	0x029BCAD4 LDRB W8, [X0 + 0x135]
	0x029BCAD8 TBNZ X8, 0x0, 0x29BCAE0
	0x029BCADC BL 0x1C5C684
	0x029BCAE0 LDR X8, [X0 + 0xC0]
	0x029BCAE4 LDR X0, [X8 + 0x18]
	0x029BCAE8 BL 0x2C2ABF0
	0x029BCAEC MOV X20, X0
	0x029BCAF0 BL 0x1C16D44
	0x029BCAF4 LDR X0, [X19 + 0x20]
	0x029BCAF8 LDRB W8, [X0 + 0x135]
	0x029BCAFC TBNZ X8, 0x0, 0x29BCB04
	0x029BCB00 BL 0x1C5C684
	0x029BCB04 LDR X8, [X0 + 0xC0]
	0x029BCB08 LDR X0, [X8 + 0x10]
	0x029BCB0C LDRB W8, [X0 + 0x135]
	0x029BCB10 TBNZ X8, 0x0, 0x29BCB18
	0x029BCB14 BL 0x1C5C684
	0x029BCB18 LDR X8, [X0 + 0xB8]
	0x029BCB1C STR X20, [X8]
	0x029BCB20 LDR X0, [X19 + 0x20]
	0x029BCB24 LDRB W8, [X0 + 0x135]
	0x029BCB28 TBNZ X8, 0x0, 0x29BCB30
	0x029BCB2C BL 0x1C5C684
	0x029BCB30 LDR X8, [X0 + 0xC0]
	0x029BCB34 LDR X0, [X8 + 0x10]
	0x029BCB38 LDRB W8, [X0 + 0x135]
	0x029BCB3C TBNZ X8, 0x0, 0x29BCB44
	0x029BCB40 BL 0x1C5C684
	0x029BCB44 MOV X0, X20
	0x029BCB48 LDP X20, X19, [X31 + 0x10]
	0x029BCB4C LDR X30, [X31], #0x20
	0x029BCB50 RET
	0x029BCB54 LDR X8, [X1 + 0x20]
	0x029BCB58 MOV W1, W31
	0x029BCB5C MOV X2, X31
	0x029BCB60 LDR X8, [X8 + 0xC0]
	0x029BCB64 LDR X3, [X8]
	0x029BCB68 B 0x29BCB9C
	0x029BCB6C LDR X8, [X2 + 0x20]
	0x029BCB70 MOV X2, X31
	0x029BCB74 LDR X8, [X8 + 0xC0]
	0x029BCB78 LDR X3, [X8]
	0x029BCB7C B 0x29BCB9C
	0x029BCB80 LDR X9, [X2 + 0x20]
	0x029BCB84 MOV X8, X1
	0x029BCB88 MOV W1, W31
	0x029BCB8C MOV X2, X8
	0x029BCB90 LDR X9, [X9 + 0xC0]
	0x029BCB94 LDR X3, [X9]
	0x029BCB98 B 0x29BCB9C
	0x029BCB9C STR X30, [X31 - 0x30]!
	0x029BCBA0 STP X22, X21, [X31 + 0x10]
	0x029BCBA4 STP X20, X19, [X31 + 0x20]
	0x029BCBA8 MOV W22, W1
	0x029BCBAC MOV X1, X31
	0x029BCBB0 MOV X21, X3
	0x029BCBB4 MOV X19, X2
	0x029BCBB8 MOV X20, X0
	0x029BCBBC BL 0x33BDD8C
	0x029BCBC0 TBNZ X22, 0x1F, 0x29BCBE4
	0x029BCBC4 CBZ W22, 0x29BCBF0
	0x029BCBC8 LDR X8, [X21 + 0x20]
	0x029BCBCC MOV X0, X20
	0x029BCBD0 MOV W1, W22
	0x029BCBD4 LDR X8, [X8 + 0xC0]
	0x029BCBD8 LDR X2, [X8 + 0x10]
	0x029BCBDC BL 0x29BDD60
	0x029BCBE0 B 0x29BCBF0
	0x029BCBE4 MOVZ W0, 0xC
	0x029BCBE8 MOV X1, X31
	0x029BCBEC BL 0x339D764
	0x029BCBF0 LDR X8, [X21 + 0x20]
	0x029BCBF4 LDR X8, [X8 + 0xC0]
	0x029BCBF8 LDR X0, [X8 + 0x18]
	0x029BCBFC BL 0x29D296C
	0x029BCC00 CMP X0, X19
	0x029BCC04 B.EQ 0x29BCC0C
	0x029BCC08 STR X19, [X20 + 0x30]
	0x029BCC0C LDP X20, X19, [X31 + 0x20]
	0x029BCC10 LDP X22, X21, [X31 + 0x10]
	0x029BCC14 LDR X30, [X31], #0x30
	0x029BCC18 RET
	0x029BCC1C LDR X8, [X2 + 0x20]
	0x029BCC20 MOV X2, X31
	0x029BCC24 LDR X8, [X8 + 0xC0]
	0x029BCC28 LDR X3, [X8 + 0x40]
	0x029BCC2C B 0x29BCC30
	0x029BCC30 STR X30, [X31 - 0x40]!
	0x029BCC34 STP X24, X23, [X31 + 0x10]
	0x029BCC38 STP X22, X21, [X31 + 0x20]
	0x029BCC3C STP X20, X19, [X31 + 0x30]
	0x029BCC40 ADRP X23, 0x1A1E000
	0x029BCC44 LDRB W8, [X23 + 0xFE6]
	0x029BCC48 MOV X19, X3
	0x029BCC4C MOV X22, X2
	0x029BCC50 MOV X21, X1
	0x029BCC54 MOV X20, X0
	0x029BCC58 TBNZ X8, 0x0, 0x29BCC88
	0x029BCC5C ADRP X0, 0x1737000
	0x029BCC60 LDR X0, [X0 + 0xE00]
	0x029BCC64 BL 0x1C16CF4
	0x029BCC68 ADRP X0, 0x1737000
	0x029BCC6C LDR X0, [X0 + 0xE18]
	0x029BCC70 BL 0x1C16CF4
	0x029BCC74 ADRP X0, 0x1737000
	0x029BCC78 LDR X0, [X0 + 0x6C0]
	0x029BCC7C BL 0x1C16CF4
	0x029BCC80 MOVZ W8, 0x1
	0x029BCC84 STRB W8, [X23 + 0xFE6]
	0x029BCC88 CMP X21, 0x0
	0x029BCC8C CSEL X23, X31, X20, EQ
	0x029BCC90 CBZ X21, 0x29BCCF0
	0x029BCC94 LDR X8, [X19 + 0x20]
	0x029BCC98 LDR X8, [X8 + 0xC0]
	0x029BCC9C LDR X1, [X8 + 0x48]
	0x029BCCA0 LDRB W8, [X1 + 0x135]
	0x029BCCA4 TBNZ X8, 0x0, 0x29BCCB4
	0x029BCCA8 MOV X0, X1
	0x029BCCAC BL 0x1C5C684
	0x029BCCB0 MOV X1, X0
	0x029BCCB4 LDR X8, [X21]
	0x029BCCB8 LDRH W9, [X8 + 0x12E]
	0x029BCCBC CBZ X9, 0x29BCCE0
	0x029BCCC0 LDR X10, [X8 + 0xB0]
	0x029BCCC4 ADD X10, X10, 0x8
	0x029BCCC8 LDUR X11, [X10 - 0x8]
	0x029BCCCC CMP X11, X1
	0x029BCCD0 B.EQ 0x29BCCFC
	0x029BCCD4 SUBS X9, X9, 0x1
	0x029BCCD8 ADD X10, X10, 0x10
	0x029BCCDC B.NE 0x29BCCC8
	0x029BCCE0 MOV X0, X21
	0x029BCCE4 MOV W2, W31
	0x029BCCE8 BL 0x1C5C788

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move [X31+24], X1
	015 Move X8, [X0+16]
	016 Move [X31+8], X2
	017 Compare X8, 0
	018 JumpIfEqual {169}
	019 Move X23, [X0+48]
	020 Move X24, X3
	021 Move X19, X0
	022 Compare X23, 0
	023 JumpIfEqual {49}
	024 Move X8, [X24+32]
	025 Move X22, X1
	026 Move X8, [X8+192]
	027 Move X1, [X8+8]
	028 Move W8, [X1+309]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {36}
	033 Move X0, X1
	034 Call 0x1C5D684
	035 Move X1, X0
	036 Move X8, [X23]
	037 NotImplemented "Instruction LDRH not yet implemented."
	038 Compare X9, 0
	039 JumpIfEqual {46}
	040 Move X10, [X8+176]
	041 Add X10, X10, 8
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Subtract X9, X9, 1
	045 Add X10, X10, 16
	046 Move W2, 1
	047 Move X0, X23
	048 Call 0x1C5D788
	049 Move X8, [X24+32]
	050 Add X0, X31, 24
	051 Move X8, [X8+192]
	052 Move X1, [X8+376]
	053 Call 0x2E0E64C, X0
	054 Move W9, [X10]
	055 Add W9, W9, 1
	056 Add X8, X8, W9
	057 Add X0, X8, 312
	058 Move X8, [X0]
	059 Move X2, [X0+8]
	060 Move X0, X23
	061 Move X1, X22
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move X8, [X19+16]
	064 Compare X8, 0
	065 JumpIfEqual {231}
	066 Move W9, [X8+24]
	067 And W28, W0, 0x7FFFFFFF
	068 NotImplemented "Instruction SDIV not yet implemented."
	069 NotImplemented "Instruction MSUB not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Add X8, X8, X10
	072 Move W8, [X8+32]
	073 Move [X31], X10
	074 Subtract W25, W8, 1
	075 Move X23, X31
	076 Move TEMP, 0
	077 Not TEMP
	078 Move W26, TEMP
	079 Move W21, 24
	080 Move [X31+16], X24
	081 Move X27, [X19+24]
	082 Compare X27, 0
	083 JumpIfEqual {231}
	084 Move W8, [X27+24]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 NotImplemented "Instruction UMADDL not yet implemented."
	087 Add X29, X29, 32
	088 Move W8, [X29]
	089 Move W20, W25
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X8, [X19+48]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 NotImplemented "Instruction CSEL not yet implemented."
	094 Compare X8, 0
	095 JumpIfEqual {127}
	096 Compare X22, 0
	097 JumpIfEqual {231}
	098 Move X8, [X24+32]
	099 Move X24, [X31+24]
	100 Move X8, [X8+192]
	101 Move X1, [X8+8]
	102 NotImplemented "Instruction NOP not yet implemented."
	103 NotImplemented "Instruction MADD not yet implemented."
	104 Move X23, [X8+40]
	105 Move W8, [X1+309]
	106 Move TEMP, X8
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfEqual {113}
	110 Move X0, X1
	111 Call 0x1C5D684
	112 Move X1, X0
	113 Move X8, [X22]
	114 NotImplemented "Instruction LDRH not yet implemented."
	115 Compare X9, 0
	116 JumpIfEqual {123}
	117 Move X10, [X8+176]
	118 Add X10, X10, 8
	119 NotImplemented "Instruction LDUR not yet implemented."
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Subtract X9, X9, 1
	122 Add X10, X10, 16
	123 Move X0, X22
	124 Move W2, W31
	125 Call 0x1C5D788
	126 Move X22, X23
	127 Move X8, [X24+32]
	128 Move X8, [X8+192]
	129 Move X0, [X8+24]
	130 Call 0x29BDA90
	131 Compare X0, 0
	132 JumpIfEqual {231}
	133 Move X8, [X0]
	134 NotImplemented "Instruction NOP not yet implemented."
	135 NotImplemented "Instruction MADD not yet implemented."
	136 Move X2, [X31+24]
	137 Move X1, [X9+40]
	138 Move X9, [X8+440]
	139 Move X3, [X8+448]
	140 NotImplemented "Instruction BLR not yet implemented."
	141 Move X22, X23
	142 Move TEMP, X0
	143 And TEMP, TEMP, 1
	144 Compare TEMP, 1
	145 JumpIfNotEqual {160}
	146 NotImplemented "Instruction LDRSW not yet implemented."
	147 Add X8, X8, X9
	148 Add X0, X8, 312
	149 Move X8, [X0]
	150 Move X3, [X0+8]
	151 Move X0, X22
	152 Move X1, X23
	153 Move X2, X24
	154 NotImplemented "Instruction BLR not yet implemented."
	155 Move X24, [X31+16]
	156 Move TEMP, X0
	157 And TEMP, TEMP, 1
	158 Compare TEMP, 1
	159 JumpIfEqual {186}
	160 NotImplemented "Instruction MADD not yet implemented."
	161 Move W8, [X8+36]
	162 Move W26, W25
	163 Move X23, X22
	164 Move W25, W8
	165 Move TEMP, X8
	166 And TEMP, TEMP, -2147483648
	167 Compare TEMP, -2147483648
	168 JumpIfNotEqual {81}
	169 Move X8, [X31+8]
	170 Move W0, W31
	171 Move [X8], W31
	172 Move X20, [X31+112]
	173 Move X19, [X31+120]
	174 Move X22, [X31+96]
	175 Move X21, [X31+104]
	176 Move X24, [X31+80]
	177 Move X23, [X31+88]
	178 Move X26, [X31+64]
	179 Move X25, [X31+72]
	180 Move X28, [X31+48]
	181 Move X27, [X31+56]
	182 Move X29, [X31+32]
	183 Move X30, [X31+40]
	184 Add X31, X31, 128
	185 Return X0
	186 Move TEMP, X26
	187 And TEMP, TEMP, -2147483648
	188 Compare TEMP, -2147483648
	189 JumpIfEqual {201}
	190 Move X8, [X19+24]
	191 Compare X8, 0
	192 JumpIfEqual {231}
	193 Move W9, [X8+24]
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Move W9, 24
	196 NotImplemented "Instruction MADD not yet implemented."
	197 Move W10, [X10+36]
	198 NotImplemented "Instruction NOP not yet implemented."
	199 NotImplemented "Instruction UMADDL not yet implemented."
	200 Move [X8+36], W10
	201 Move X8, [X19+16]
	202 Compare X8, 0
	203 JumpIfEqual {231}
	204 Move W9, [X8+24]
	205 Move X10, [X31]
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Move W9, 24
	208 NotImplemented "Instruction MADD not yet implemented."
	209 Move W9, [X9+36]
	210 Add X8, X8, X10
	211 Add W9, W9, 1
	212 Move [X8+32], W9
	213 Move W8, 24
	214 NotImplemented "Instruction MADD not yet implemented."
	215 Move W9, [X8+48]
	216 Move X11, [X31+8]
	217 Move TEMP, 0
	218 Not TEMP
	219 Move W10, TEMP
	220 NotImplemented "Instruction MOVI not yet implemented."
	221 Move W0, 1
	222 Move [X11], W9
	223 Move [X29], W10
	224 Move W9, [X19+36]
	225 Move [X8+40], X31
	226 Move [X8+36], W9
	227 Move V0, [X19+40]
	228 Move [X19+36], W25
	229 Add S0, S0, S1
	230 Move [X19+40], D0
	231 Call 0x1C17F20
	232 Call 0x1C17F28

Method: System.Boolean TryGetValue(TKey key, out TValue value)

Disassembly:
	0x029BCCEC B 0x29BCD08
	0x029BCCF0 MOV W1, W31
	0x029BCCF4 MOV X23, X20
	0x029BCCF8 B 0x29BCD18
	0x029BCCFC LDRSW X9, [X10]
	0x029BCD00 ADD X8, X8, X9, 0x4, LSL
	0x029BCD04 ADD X0, X8, 0x138
	0x029BCD08 LDP X8, X1, [X0]
	0x029BCD0C MOV X0, X21
	0x029BCD10 BLR X8
	0x029BCD14 MOV W1, W0
	0x029BCD18 LDR X8, [X19 + 0x20]
	0x029BCD1C MOV X0, X23
	0x029BCD20 MOV X2, X22
	0x029BCD24 LDR X8, [X8 + 0xC0]
	0x029BCD28 LDR X3, [X8]
	0x029BCD2C BL 0x29BCB9C
	0x029BCD30 CBZ X21, 0x29BD048
	0x029BCD34 ADRP X22, 0x1737000
	0x029BCD38 LDR X22, [X22 + 0x6C0]
	0x029BCD3C MOV X0, X21
	0x029BCD40 MOV X1, X31
	0x029BCD44 BL 0x33BE520
	0x029BCD48 LDR X9, [X19 + 0x20]
	0x029BCD4C LDR X8, [X22]
	0x029BCD50 MOV X22, X0
	0x029BCD54 LDR X9, [X9 + 0xC0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X3+32]
	005 Move X19, X2
	006 Move X20, X0
	007 Move X8, [X8+192]
	008 Move X2, [X8+248]
	009 Call 0x29BB994, X0, X1
	010 Move TEMP, X0
	011 And TEMP, TEMP, -2147483648
	012 Compare TEMP, -2147483648
	013 JumpIfEqual {22}
	014 Move X8, [X20+24]
	015 Compare X8, 0
	016 JumpIfEqual {32}
	017 Move W9, [X8+24]
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move W9, 24
	020 NotImplemented "Instruction UMADDL not yet implemented."
	021 Move W8, [X8+48]
	022 Move W8, W31
	023 Move [X19], W8
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 NotImplemented "Instruction ORN not yet implemented."
	027 Move W0, W9
	028 ShiftRight W0, 31
	029 And W0, W0, 0x7FFFFFFF
	030 Move X30, [X31+32]
	031 Return X0
	032 Call 0x1C17F20
	033 Call 0x1C17F28

Method: System.Boolean TryAdd(TKey key, TValue value)

Disassembly:
	0x029BCD58 LDR W10, [X8 + 0xE0]
	0x029BCD5C LDR X23, [X9 + 0x58]
	0x029BCD60 CBNZ W10, 0x29BCD6C
	0x029BCD64 MOV X0, X8
	0x029BCD68 BL 0x1C16DFC
	0x029BCD6C MOV X0, X23

ISIL:
	001 Move X8, [X3+32]
	002 And W2, W2, 1
	003 Move W3, W31
	004 Move X8, [X8+192]
	005 Move X4, [X8+256]
	006 Call 0x29BBD38, X0, X1, X2, X3
	007 Return X0

Method: System.Boolean System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.get_IsReadOnly()

Disassembly:
	0x029BCD70 MOV X1, X31
	0x029BCD74 BL 0x338C698

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(System.Collections.Generic.KeyValuePair`2<TKey, TValue>[] array, System.Int32 index)

Disassembly:
	0x029BCD78 MOV X1, X0
	0x029BCD7C MOV X0, X22
	0x029BCD80 MOV X2, X31
	0x029BCD84 BL 0x3395194

ISIL:
	001 Move X8, [X3+32]
	002 Move X8, [X8+192]
	003 Move X3, [X8+360]
	004 Call 0x29BB5F8, X0, X1, X2
	005 Return 

Method: System.Void System.Collections.ICollection.CopyTo(System.Array array, System.Int32 index)

Disassembly:
	0x029BCD88 LDR X8, [X19 + 0x20]
	0x029BCD8C LDR X8, [X8 + 0xC0]
	0x029BCD90 TBZ X0, 0x0, 0x29BCE44
	0x029BCD94 LDR X1, [X8 + 0x30]
	0x029BCD98 LDRB W8, [X1 + 0x135]
	0x029BCD9C TBNZ X8, 0x0, 0x29BCDAC
	0x029BCDA0 MOV X0, X1
	0x029BCDA4 BL 0x1C5C684
	0x029BCDA8 MOV X1, X0
	0x029BCDAC LDR X8, [X21]
	0x029BCDB0 LDRB W9, [X1 + 0x130]
	0x029BCDB4 LDRB W10, [X8 + 0x130]
	0x029BCDB8 CMP W10, W9
	0x029BCDBC B.CC 0x29BD058
	0x029BCDC0 LDR X8, [X8 + 0xC8]
	0x029BCDC4 ADD X8, X8, X9, 0x3, LSL
	0x029BCDC8 LDUR X8, [X8 - 0x8]
	0x029BCDCC CMP X8, X1
	0x029BCDD0 B.NE 0x29BD058
	0x029BCDD4 LDR W22, [X21 + 0x20]
	0x029BCDD8 CMP W22, 0x1
	0x029BCDDC B.LT 0x29BD030
	0x029BCDE0 LDR X21, [X21 + 0x18]
	0x029BCDE4 CBZ X21, 0x29BD06C
	0x029BCDE8 MOV X23, X31
	0x029BCDEC ADD X24, X21, 0x30
	0x029BCDF0 LDR W8, [X21 + 0x18]
	0x029BCDF4 CMP X23, X8
	0x029BCDF8 B.CS 0x29BD044
	0x029BCDFC LDUR W8, [X24 - 0x10]
	0x029BCE00 TBNZ X8, 0x1F, 0x29BCE30
	0x029BCE04 LDR X8, [X19 + 0x20]
	0x029BCE08 LDUR X1, [X24 - 0x8]
	0x029BCE0C LDR V0, [X24]
	0x029BCE10 MOVZ W2, 0x2
	0x029BCE14 LDR X8, [X8 + 0xC0]
	0x029BCE18 MOV X0, X20
	0x029BCE1C LDR X8, [X8 + 0x80]
	0x029BCE20 LDR X8, [X8 + 0x20]
	0x029BCE24 LDR X8, [X8 + 0xC0]
	0x029BCE28 LDR X3, [X8 + 0x100]
	0x029BCE2C BL 0x29BDE28
	0x029BCE30 ADD X23, X23, 0x1
	0x029BCE34 CMP X22, X23
	0x029BCE38 ADD X24, X24, 0x18
	0x029BCE3C B.NE 0x29BCDF0
	0x029BCE40 B 0x29BD030
	0x029BCE44 LDR X1, [X8 + 0x88]
	0x029BCE48 LDRB W8, [X1 + 0x135]
	0x029BCE4C TBNZ X8, 0x0, 0x29BCE5C
	0x029BCE50 MOV X0, X1
	0x029BCE54 BL 0x1C5C684
	0x029BCE58 MOV X1, X0
	0x029BCE5C LDR X8, [X21]
	0x029BCE60 LDRH W9, [X8 + 0x12E]
	0x029BCE64 CBZ X9, 0x29BCE88
	0x029BCE68 LDR X10, [X8 + 0xB0]
	0x029BCE6C ADD X10, X10, 0x8
	0x029BCE70 LDUR X11, [X10 - 0x8]
	0x029BCE74 CMP X11, X1
	0x029BCE78 B.EQ 0x29BCE98
	0x029BCE7C SUBS X9, X9, 0x1
	0x029BCE80 ADD X10, X10, 0x10
	0x029BCE84 B.NE 0x29BCE70
	0x029BCE88 MOV X0, X21
	0x029BCE8C MOV W2, W31
	0x029BCE90 BL 0x1C5C788
	0x029BCE94 B 0x29BCEA4
	0x029BCE98 LDRSW X9, [X10]
	0x029BCE9C ADD X8, X8, X9, 0x4, LSL
	0x029BCEA0 ADD X0, X8, 0x138
	0x029BCEA4 LDP X8, X1, [X0]
	0x029BCEA8 MOV X0, X21
	0x029BCEAC BLR X8
	0x029BCEB0 MOV X21, X0
	0x029BCEB4 CBZ X0, 0x29BD060
	0x029BCEB8 ADRP X22, 0x1737000
	0x029BCEBC LDR X22, [X22 + 0xE18]
	0x029BCEC0 LDR X8, [X21]
	0x029BCEC4 LDR X1, [X22]
	0x029BCEC8 LDRH W9, [X8 + 0x12E]
	0x029BCECC CBZ X9, 0x29BCEF0
	0x029BCED0 LDR X10, [X8 + 0xB0]
	0x029BCED4 ADD X10, X10, 0x8
	0x029BCED8 LDUR X11, [X10 - 0x8]
	0x029BCEDC CMP X11, X1
	0x029BCEE0 B.EQ 0x29BCF00
	0x029BCEE4 SUBS X9, X9, 0x1
	0x029BCEE8 ADD X10, X10, 0x10
	0x029BCEEC B.NE 0x29BCED8
	0x029BCEF0 MOV X0, X21
	0x029BCEF4 MOV W2, W31
	0x029BCEF8 BL 0x1C5C788
	0x029BCEFC B 0x29BCF0C
	0x029BCF00 LDRSW X9, [X10]
	0x029BCF04 ADD X8, X8, X9, 0x4, LSL
	0x029BCF08 ADD X0, X8, 0x138
	0x029BCF0C LDP X8, X1, [X0]
	0x029BCF10 MOV X0, X21
	0x029BCF14 BLR X8
	0x029BCF18 TBZ X0, 0x0, 0x29BCFC4
	0x029BCF1C LDR X8, [X19 + 0x20]
	0x029BCF20 LDR X8, [X8 + 0xC0]
	0x029BCF24 LDR X1, [X8 + 0x98]
	0x029BCF28 LDRB W8, [X1 + 0x135]
	0x029BCF2C TBNZ X8, 0x0, 0x29BCF3C
	0x029BCF30 MOV X0, X1
	0x029BCF34 BL 0x1C5C684
	0x029BCF38 MOV X1, X0
	0x029BCF3C LDR X8, [X21]
	0x029BCF40 LDRH W9, [X8 + 0x12E]
	0x029BCF44 CBZ X9, 0x29BCF68
	0x029BCF48 LDR X10, [X8 + 0xB0]
	0x029BCF4C ADD X10, X10, 0x8
	0x029BCF50 LDUR X11, [X10 - 0x8]
	0x029BCF54 CMP X11, X1
	0x029BCF58 B.EQ 0x29BCF78
	0x029BCF5C SUBS X9, X9, 0x1
	0x029BCF60 ADD X10, X10, 0x10
	0x029BCF64 B.NE 0x29BCF50
	0x029BCF68 MOV X0, X21
	0x029BCF6C MOV W2, W31
	0x029BCF70 BL 0x1C5C788
	0x029BCF74 B 0x29BCF84
	0x029BCF78 LDRSW X9, [X10]
	0x029BCF7C ADD X8, X8, X9, 0x4, LSL
	0x029BCF80 ADD X0, X8, 0x138
	0x029BCF84 LDP X8, X1, [X0]
	0x029BCF88 MOV X0, X21
	0x029BCF8C BLR X8
	0x029BCF90 LDR X8, [X19 + 0x20]
	0x029BCF94 MOV X4, X0
	0x029BCF98 FMOV S0, W1
	0x029BCF9C LDR X8, [X8 + 0xC0]
	0x029BCFA0 LDR X8, [X8 + 0x80]
	0x029BCFA4 LDR X8, [X8 + 0x20]
	0x029BCFA8 LDR X8, [X8 + 0xC0]
	0x029BCFAC LDR X3, [X8 + 0x100]
	0x029BCFB0 MOVZ W2, 0x2
	0x029BCFB4 MOV X0, X20
	0x029BCFB8 MOV X1, X4
	0x029BCFBC BL 0x29BDE28
	0x029BCFC0 B 0x29BCEC0
	0x029BCFC4 MOV X19, X31
	0x029BCFC8 CBZ X21, 0x29BD02C
	0x029BCFCC ADRP X10, 0x1737000
	0x029BCFD0 LDR X8, [X21]
	0x029BCFD4 LDR X10, [X10 + 0xE00]
	0x029BCFD8 LDRH W9, [X8 + 0x12E]
	0x029BCFDC LDR X1, [X10]
	0x029BCFE0 CBZ X9, 0x29BD004
	0x029BCFE4 LDR X10, [X8 + 0xB0]
	0x029BCFE8 ADD X10, X10, 0x8
	0x029BCFEC LDUR X11, [X10 - 0x8]
	0x029BCFF0 CMP X11, X1
	0x029BCFF4 B.EQ 0x29BD014
	0x029BCFF8 SUBS X9, X9, 0x1
	0x029BCFFC ADD X10, X10, 0x10
	0x029BD000 B.NE 0x29BCFEC
	0x029BD004 MOV X0, X21
	0x029BD008 MOV W2, W31
	0x029BD00C BL 0x1C5C788
	0x029BD010 B 0x29BD020
	0x029BD014 LDRSW X9, [X10]
	0x029BD018 ADD X8, X8, X9, 0x4, LSL
	0x029BD01C ADD X0, X8, 0x138
	0x029BD020 LDP X8, X1, [X0]
	0x029BD024 MOV X0, X21
	0x029BD028 BLR X8
	0x029BD02C CBNZ X19, 0x29BD064
	0x029BD030 LDP X20, X19, [X31 + 0x30]
	0x029BD034 LDP X22, X21, [X31 + 0x20]
	0x029BD038 LDP X24, X23, [X31 + 0x10]
	0x029BD03C LDR X30, [X31], #0x40
	0x029BD040 RET
	0x029BD044 BL 0x1C16F28
	0x029BD048 MOVZ W0, 0x1
	0x029BD04C MOV X1, X31
	0x029BD050 BL 0x338F3E0
	0x029BD054 BL 0x1C16F20
	0x029BD058 MOV X0, X21
	0x029BD05C BL 0x1C171E0
	0x029BD060 BL 0x1C16F20
	0x029BD064 MOV X0, X19
	0x029BD068 BL 0x1C16F18
	0x029BD06C BL 0x1C16F20
	0x029BD070 B 0x29BD07C
	0x029BD074 B 0x29BD07C
	0x029BD078 B 0x29BD07C
	0x029BD07C MOV X20, X0
	0x029BD080 CMP W1, 0x1
	0x029BD084 B.NE 0x29BD09C
	0x029BD088 MOV X0, X20
	0x029BD08C BL 0x3EB1AD0
	0x029BD090 LDR X19, [X0]
	0x029BD094 BL 0x3EB1AE0
	0x029BD098 B 0x29BCFC8
	0x029BD09C MOV X19, X31
	0x029BD0A0 B 0x29BD0A8
	0x029BD0A4 MOV X20, X0
	0x029BD0A8 CBZ X21, 0x29BD10C
	0x029BD0AC ADRP X10, 0x1736000
	0x029BD0B0 LDR X8, [X21]
	0x029BD0B4 LDR X10, [X10 + 0xE00]
	0x029BD0B8 LDRH W9, [X8 + 0x12E]
	0x029BD0BC LDR X1, [X10]
	0x029BD0C0 CBZ X9, 0x29BD0E4
	0x029BD0C4 LDR X10, [X8 + 0xB0]
	0x029BD0C8 ADD X10, X10, 0x8
	0x029BD0CC LDUR X11, [X10 - 0x8]
	0x029BD0D0 CMP X11, X1
	0x029BD0D4 B.EQ 0x29BD0F4
	0x029BD0D8 SUBS X9, X9, 0x1
	0x029BD0DC ADD X10, X10, 0x10
	0x029BD0E0 B.NE 0x29BD0CC
	0x029BD0E4 MOV X0, X21
	0x029BD0E8 MOV W2, W31
	0x029BD0EC BL 0x1C5C788
	0x029BD0F0 B 0x29BD100
	0x029BD0F4 LDRSW X9, [X10]
	0x029BD0F8 ADD X8, X8, X9, 0x4, LSL
	0x029BD0FC ADD X0, X8, 0x138
	0x029BD100 LDP X8, X1, [X0]
	0x029BD104 MOV X0, X21
	0x029BD108 BLR X8
	0x029BD10C CBNZ X19, 0x29BD118
	0x029BD110 MOV X0, X20
	0x029BD114 BL 0x1D2C690
	0x029BD118 MOV X0, X19
	0x029BD11C BL 0x1C16F18
	0x029BD120 BL 0x1990590
	0x029BD124 STR X30, [X31 - 0x30]!
	0x029BD128 STP X22, X21, [X31 + 0x10]
	0x029BD12C STP X20, X19, [X31 + 0x20]
	0x029BD130 ADRP X22, 0x1A1D000
	0x029BD134 ADRP X21, 0x1761000
	0x029BD138 LDRB W8, [X22 + 0xFE7]
	0x029BD13C LDR X21, [X21 + 0x548]
	0x029BD140 MOV X19, X1
	0x029BD144 MOV X20, X0
	0x029BD148 TBNZ X8, 0x0, 0x29BD16C
	0x029BD14C ADRP X0, 0x1761000
	0x029BD150 LDR X0, [X0 + 0x628]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+48], X26
	004 Move [X31+56], X25
	005 Move [X31+64], X24
	006 Move [X31+72], X23
	007 Move [X31+80], X22
	008 Move [X31+88], X21
	009 Move [X31+96], X20
	010 Move [X31+104], X19
	011 Move X23, 0x1A1F000
	012 Move W8, [X23+4068]
	013 Move X20, X3
	014 Move W19, W2
	015 Move X22, X1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0x1762000
	022 Move X0, [X0+120]
	023 Call 0x1C17CF4
	024 Move X0, 0x1738000
	025 Move X0, [X0+2512]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X23+4068], W8
	029 Compare X22, 0
	030 JumpIfEqual {229}
	031 Move X0, X22
	032 Move X1, X31
	033 Call Array.get_Rank, X0
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move W0, 7
	036 Move X1, X31
	037 Call ThrowHelper.ThrowArgumentException, X0
	038 Move X0, X22
	039 Move W1, W31
	040 Move X2, X31
	041 Call Array.GetLowerBound, X0, X1
	042 Compare W0, 0
	043 JumpIfEqual {47}
	044 Move W0, 6
	045 Move X1, X31
	046 Call ThrowHelper.ThrowArgumentException, X0
	047 Move X0, X22
	048 Move X1, X31
	049 Call Array.get_Length, X0
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X0, X31
	052 Call ThrowHelper.ThrowIndexArgumentOutOfRange_NeedNonNegNumException
	053 Move X0, X22
	054 Move X1, X31
	055 Call Array.get_Length, X0
	056 Move W8, [X21+32]
	057 Move W9, [X21+40]
	058 Subtract W8, W8, W9
	059 Subtract W9, W0, W19
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move W0, 5
	062 Move X1, X31
	063 Call ThrowHelper.ThrowArgumentException, X0
	064 Move X8, [X20+32]
	065 Move X8, [X8+192]
	066 Move X1, [X8+304]
	067 Move W8, [X1+309]
	068 Move TEMP, X8
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfEqual {75}
	072 Move X0, X1
	073 Call 0x1C5D684
	074 Move X1, X0
	075 Move X0, X22
	076 Call 0x1C17E00
	077 Compare X0, 0
	078 JumpIfEqual {97}
	079 Move X8, [X20+32]
	080 Move X1, X0
	081 Move X0, X21
	082 Move W2, W19
	083 Move X8, [X8+192]
	084 Move X20, [X31+96]
	085 Move X19, [X31+104]
	086 Move X22, [X31+80]
	087 Move X21, [X31+88]
	088 Move X24, [X31+64]
	089 Move X23, [X31+72]
	090 Move X3, [X8+360]
	091 Move X26, [X31+48]
	092 Move X25, [X31+56]
	093 Move X30, [X31+32]
	094 Add X31, X31, 112
	095 Call 0x29BB5F8, X0, X1, X2
	096 Return 
	097 Move X8, 0x1762000
	098 Move X8, [X8+120]
	099 Move X0, X22
	100 Move X1, [X8]
	101 Call 0x1C17E00
	102 Compare X0, 0
	103 JumpIfEqual {153}
	104 Move W8, [X21+32]
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move X24, [X21+24]
	107 Compare X24, 0
	108 JumpIfEqual {232}
	109 Move X23, X0
	110 Move X25, X31
	111 Add X26, X24, 48
	112 Move W9, [X24+24]
	113 NotImplemented "Instruction CMP not yet implemented."
	114 NotImplemented "Instruction LDUR not yet implemented."
	115 Move TEMP, X9
	116 And TEMP, TEMP, -2147483648
	117 Compare TEMP, -2147483648
	118 JumpIfEqual {150}
	119 NotImplemented "Instruction LDUR not yet implemented."
	120 Add X1, X31, 0
	121 Move [X31], X8
	122 Move X8, [X20+32]
	123 Move X8, [X8+192]
	124 Move X0, [X8+112]
	125 Call 0x1C17E04
	126 Move W8, [X24+24]
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move W8, [X26]
	129 Move X22, X0
	130 Add X1, X31, 44
	131 Move [X31+44], W8
	132 Move X8, [X20+32]
	133 Move X8, [X8+192]
	134 Move X0, [X8+120]
	135 Call 0x1C17E04
	136 Move X2, X0
	137 Add X0, X31, 16
	138 Move X1, X22
	139 Move X3, X31
	140 Move [X31+16], X31
	141 Move [X31+24], X31
	142 Call DictionaryEntry..ctor, X0, X1, X2
	143 Move W8, [X23+24]
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move V0, [X31+1]
	146 Add X8, X23, W19
	147 Add W19, W19, 1
	148 Move [X8+2], V0
	149 Move W8, [X21+32]
	150 Add X25, X25, 1
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Add X26, X26, 24
	153 Move X8, 0x1738000
	154 Move X8, [X8+2512]
	155 Move X0, X22
	156 Move X1, [X8]
	157 Call 0x1C17E00
	158 Move X22, X0
	159 Compare X0, 0
	160 JumpIfNotEqual {162}
	161 Call ThrowHelper.ThrowArgumentException_Argument_InvalidArrayType
	162 Move W23, [X21+32]
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Move X24, [X21+24]
	165 Compare X24, 0
	166 JumpIfEqual {233}
	167 Move X25, X31
	168 Add X26, X24, 48
	169 Move W8, [X24+24]
	170 NotImplemented "Instruction CMP not yet implemented."
	171 NotImplemented "Instruction LDUR not yet implemented."
	172 Move TEMP, X8
	173 And TEMP, TEMP, -2147483648
	174 Compare TEMP, -2147483648
	175 JumpIfEqual {208}
	176 NotImplemented "Instruction LDUR not yet implemented."
	177 Move W2, [X26]
	178 Move [X31+16], X31
	179 Move [X31+24], X31
	180 Move X8, [X20+32]
	181 Move X8, [X8+192]
	182 Move X3, [X8+320]
	183 Add X0, X31, 16
	184 Call 0x2EDDDAC, X0, X1, X2
	185 Move V0, [X31+1]
	186 Move [X31], V0
	187 Move X8, [X20+32]
	188 Move X8, [X8+192]
	189 Move X0, [X8+168]
	190 Add X1, X31, 0
	191 Call 0x1C17E04
	192 Compare X22, 0
	193 JumpIfEqual {225}
	194 Move X21, X0
	195 Compare X0, 0
	196 JumpIfEqual {203}
	197 Move X8, [X22]
	198 Move X1, [X8+64]
	199 Move X0, X21
	200 Call 0x1C17E00
	201 Compare X0, 0
	202 JumpIfEqual {226}
	203 Move W8, [X22+24]
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Add X8, X22, W19
	206 Add W19, W19, 1
	207 Move [X8+32], X21
	208 Add X25, X25, 1
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Add X26, X26, 24
	211 Move X20, [X31+96]
	212 Move X19, [X31+104]
	213 Move X22, [X31+80]
	214 Move X21, [X31+88]
	215 Move X24, [X31+64]
	216 Move X23, [X31+72]
	217 Move X26, [X31+48]
	218 Move X25, [X31+56]
	219 Move X30, [X31+32]
	220 Add X31, X31, 112
	221 Return 
	222 Call 0x1C17F28
	223 Call 0x1C17F28
	224 Call 0x1C17F28
	225 Call 0x1C17F20
	226 Call 0x1C17F44
	227 Move X1, X31
	228 Call 0x1C17DEC
	229 Move W0, 3
	230 Move X1, X31
	231 Call ThrowHelper.ThrowArgumentNullException, X0
	232 Call 0x1C17F20
	233 Call 0x1C17F20
	234 Move X19, X0
	235 NotImplemented "Instruction CMP not yet implemented."
	236 Move X0, X19
	237 Call 0x3EB2AD0
	238 Move X19, X0
	239 Move X0, 0x1760000
	240 Move X0, [X0+800]
	241 Call 0x1C17D08
	242 Move X8, [X19]
	243 Move X1, [X8]
	244 Call 0x1C18270
	245 Move TEMP, X0
	246 And TEMP, TEMP, 1
	247 Compare TEMP, 1
	248 JumpIfNotEqual {252}
	249 Call 0x3EB2AE0
	250 Move X0, X31
	251 Call ThrowHelper.ThrowArgumentException_Argument_InvalidArrayType
	252 Move W0, 8
	253 Call 0x3EB2AF0
	254 Move X8, [X19]
	255 Move [X0], X8
	256 Move X1, 0x14F8000
	257 Add X1, X1, 3672
	258 Move X2, X31
	259 Call 0x3EB2B00
	260 Move X19, X0
	261 Call 0x3EB2AE0
	262 Move X0, X19
	263 Call 0x1D2D690
	264 Call 0x1991590

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x029BD154 BL 0x1C16CF4
	0x029BD158 ADRP X0, 0x1761000
	0x029BD15C LDR X0, [X0 + 0x548]
	0x029BD160 BL 0x1C16CF4
	0x029BD164 MOVZ W8, 0x1
	0x029BD168 STRB W8, [X22 + 0xFE7]
	0x029BD16C MOV X0, X20
	0x029BD170 MOV X1, X31
	0x029BD174 BL 0x33BDD8C
	0x029BD178 LDR X0, [X21]
	0x029BD17C LDR W8, [X0 + 0xE0]
	0x029BD180 CBNZ W8, 0x29BD188
	0x029BD184 BL 0x1C16DFC
	0x029BD188 MOV X0, X31
	0x029BD18C BL 0x3350638
	0x029BD190 CBZ X0, 0x29BD1B8
	0x029BD194 ADRP X8, 0x1761000
	0x029BD198 LDR X8, [X8 + 0x628]
	0x029BD19C MOV X1, X20
	0x029BD1A0 MOV X2, X19
	0x029BD1A4 LDP X20, X19, [X31 + 0x20]
	0x029BD1A8 LDR X3, [X8]
	0x029BD1AC LDP X22, X21, [X31 + 0x10]
	0x029BD1B0 LDR X30, [X31], #0x30
	0x029BD1B4 B 0x29969F8

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+96], X30
	003 Move [X31+104], X19
	004 NotImplemented "Instruction MOVI not yet implemented."
	005 Move [X31+80], X31
	006 Move [X31+48], V0
	007 Move [X31+56], V0
	008 Move X8, [X1+32]
	009 Move X19, X1
	010 Move X1, X0
	011 Add X0, X31, 48
	012 Move X8, [X8+192]
	013 Move W2, 2
	014 Move X3, [X8+336]
	015 Call 0x2BE6E24, X0, X1, X2
	016 Move V0, [X31+48]
	017 Move V1, [X31+64]
	018 Move X8, [X31+80]
	019 Add X1, X31, 0
	020 Move [X31], V0
	021 Move [X31+8], V1
	022 Move [X31+32], X8
	023 Move X8, [X19+32]
	024 Move X8, [X8+192]
	025 Move X0, [X8+328]
	026 Call 0x1C17E04
	027 Move X30, [X31+96]
	028 Move X19, [X31+104]
	029 Add X31, X31, 112
	030 Return X0

Method: System.Boolean System.Collections.ICollection.get_IsSynchronized()

Disassembly:
	0x029BD1B8 BL 0x1C16F20
	0x029BD1BC LDR X0, [X0 + 0x30]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Object System.Collections.ICollection.get_SyncRoot()

Disassembly:
	0x029BD1C0 CBZ X0, 0x29BD1C8
	0x029BD1C4 RET
	0x029BD1C8 LDR X8, [X1 + 0x20]
	0x029BD1CC LDR X8, [X8 + 0xC0]
	0x029BD1D0 LDR X0, [X8 + 0x18]
	0x029BD1D4 B 0x29D296C
	0x029BD1D8 LDR W8, [X0 + 0x20]
	0x029BD1DC LDR W9, [X0 + 0x28]
	0x029BD1E0 SUB W0, W8, W9
	0x029BD1E4 RET
	0x029BD1E8 STP X30, X21, [X31 - 0x20]!
	0x029BD1EC STP X20, X19, [X31 + 0x10]
	0x029BD1F0 LDR X21, [X0 + 0x38]
	0x029BD1F4 CBNZ X21, 0x29BD238
	0x029BD1F8 LDR X8, [X1 + 0x20]
	0x029BD1FC MOV X19, X0
	0x029BD200 MOV X20, X1
	0x029BD204 LDR X8, [X8 + 0xC0]
	0x029BD208 LDR X0, [X8 + 0xC8]
	0x029BD20C LDRB W8, [X0 + 0x135]
	0x029BD210 TBNZ X8, 0x0, 0x29BD218
	0x029BD214 BL 0x1C5C684
	0x029BD218 BL 0x1C16F10
	0x029BD21C LDR X8, [X20 + 0x20]
	0x029BD220 MOV X1, X19
	0x029BD224 MOV X21, X0
	0x029BD228 LDR X8, [X8 + 0xC0]
	0x029BD22C LDR X2, [X8 + 0xD0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1A1E000
	005 Move W8, [X20+4069]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x173D000
	012 Move X0, [X0+3264]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+4069], W8
	016 Add X19, X19, 72
	017 Move X0, [X19]
	018 Compare X0, 0
	019 JumpIfNotEqual {32}
	020 Move X8, 0x173D000
	021 Move X8, [X8+3264]
	022 Move X0, [X8]
	023 Call 0x1C17F10
	024 Move X1, X31
	025 Move X20, X0
	026 Call Object..ctor, X0
	027 Move X0, X19
	028 Move X1, X20
	029 Move X2, X31
	030 Call 0x1C25138
	031 Move X0, [X19]
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0

Method: System.Collections.ICollection System.Collections.IDictionary.get_Keys()

Disassembly:
	0x029BD230 BL 0x2EAD504
	0x029BD234 STR X21, [X19 + 0x38]
	0x029BD238 LDP X20, X19, [X31 + 0x10]
	0x029BD23C MOV X0, X21

ISIL:
	001 Move X8, [X1+32]
	002 Move X8, [X8+192]
	003 Move X1, [X8+464]
	004 Call 0x29BB0E0, X0
	005 Return X0

Method: System.Collections.ICollection System.Collections.IDictionary.get_Values()

Disassembly:
	0x029BD240 LDP X30, X21, [X31], #0x20
	0x029BD244 RET
	0x029BD248 STP X30, X21, [X31 - 0x20]!
	0x029BD24C STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move X8, [X1+32]
	002 Move X8, [X8+192]
	003 Move X1, [X8+472]
	004 Call 0x29BB1A0, X0
	005 Return X0

Method: System.Object System.Collections.IDictionary.get_Item(System.Object key)

Disassembly:
	0x029BD250 LDR X21, [X0 + 0x38]
	0x029BD254 CBNZ X21, 0x29BD298
	0x029BD258 LDR X8, [X1 + 0x20]
	0x029BD25C MOV X19, X0
	0x029BD260 MOV X20, X1
	0x029BD264 LDR X8, [X8 + 0xC0]
	0x029BD268 LDR X0, [X8 + 0xC8]
	0x029BD26C LDRB W8, [X0 + 0x135]
	0x029BD270 TBNZ X8, 0x0, 0x29BD278
	0x029BD274 BL 0x1C5C684
	0x029BD278 BL 0x1C16F10
	0x029BD27C LDR X8, [X20 + 0x20]
	0x029BD280 MOV X1, X19
	0x029BD284 MOV X21, X0
	0x029BD288 LDR X8, [X8 + 0xC0]
	0x029BD28C LDR X2, [X8 + 0xD0]
	0x029BD290 BL 0x2EAD504
	0x029BD294 STR X21, [X19 + 0x38]
	0x029BD298 LDP X20, X19, [X31 + 0x10]
	0x029BD29C MOV X0, X21
	0x029BD2A0 LDP X30, X21, [X31], #0x20
	0x029BD2A4 RET
	0x029BD2A8 STP X30, X21, [X31 - 0x20]!
	0x029BD2AC STP X20, X19, [X31 + 0x10]
	0x029BD2B0 LDR X21, [X0 + 0x40]
	0x029BD2B4 CBNZ X21, 0x29BD2F8
	0x029BD2B8 LDR X8, [X1 + 0x20]
	0x029BD2BC MOV X19, X0
	0x029BD2C0 MOV X20, X1
	0x029BD2C4 LDR X8, [X8 + 0xC0]
	0x029BD2C8 LDR X0, [X8 + 0xE0]
	0x029BD2CC LDRB W8, [X0 + 0x135]
	0x029BD2D0 TBNZ X8, 0x0, 0x29BD2D8
	0x029BD2D4 BL 0x1C5C684
	0x029BD2D8 BL 0x1C16F10
	0x029BD2DC LDR X8, [X20 + 0x20]
	0x029BD2E0 MOV X1, X19
	0x029BD2E4 MOV X21, X0
	0x029BD2E8 LDR X8, [X8 + 0xC0]
	0x029BD2EC LDR X2, [X8 + 0xE8]
	0x029BD2F0 BL 0x274089C
	0x029BD2F4 STR X21, [X19 + 0x40]
	0x029BD2F8 LDP X20, X19, [X31 + 0x10]
	0x029BD2FC MOV X0, X21
	0x029BD300 LDP X30, X21, [X31], #0x20
	0x029BD304 RET
	0x029BD308 STP X30, X21, [X31 - 0x20]!
	0x029BD30C STP X20, X19, [X31 + 0x10]
	0x029BD310 LDR X21, [X0 + 0x40]
	0x029BD314 CBNZ X21, 0x29BD358
	0x029BD318 LDR X8, [X1 + 0x20]
	0x029BD31C MOV X19, X0
	0x029BD320 MOV X20, X1
	0x029BD324 LDR X8, [X8 + 0xC0]
	0x029BD328 LDR X0, [X8 + 0xE0]
	0x029BD32C LDRB W8, [X0 + 0x135]
	0x029BD330 TBNZ X8, 0x0, 0x29BD338
	0x029BD334 BL 0x1C5C684

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+32]
	007 Move X21, X1
	008 Move X20, X0
	009 Move X0, X21
	010 Move X8, [X8+192]
	011 Move X19, X2
	012 Move X1, [X8+480]
	013 Call 0x29BD5D4, X0
	014 Move TEMP, X0
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {61}
	018 Move X8, [X19+32]
	019 Move X8, [X8+192]
	020 Move X1, [X8+112]
	021 Move W8, [X1+309]
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {29}
	026 Move X0, X1
	027 Call 0x1C5D684
	028 Move X1, X0
	029 Compare X21, 0
	030 JumpIfEqual {68}
	031 Move X8, [X21]
	032 Move X9, [X1+64]
	033 Move X0, X21
	034 Move X8, [X8+64]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Call 0x1C17E08
	037 Move X8, [X19+32]
	038 Move X1, [X0]
	039 Move X0, X20
	040 Move X8, [X8+192]
	041 Move X2, [X8+248]
	042 Call 0x29BB994, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, -2147483648
	045 Compare TEMP, -2147483648
	046 JumpIfEqual {61}
	047 Move X8, [X20+24]
	048 Compare X8, 0
	049 JumpIfEqual {68}
	050 Move W9, [X8+24]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move W9, 24
	053 NotImplemented "Instruction UMADDL not yet implemented."
	054 Move W8, [X8+48]
	055 Add X1, X31, 12
	056 Move [X31+12], W8
	057 Move X8, [X19+32]
	058 Move X8, [X8+192]
	059 Move X0, [X8+120]
	060 Call 0x1C17E04
	061 Move X0, X31
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X30, [X31+16]
	065 Move X21, [X31+24]
	066 Add X31, X31, 48
	067 Return X0
	068 Call 0x1C17F20
	069 Call 0x1C181E0
	070 Call 0x1C17F28

Method: System.Void System.Collections.IDictionary.set_Item(System.Object key, System.Object value)

Disassembly:
	0x029BD338 BL 0x1C16F10
	0x029BD33C LDR X8, [X20 + 0x20]
	0x029BD340 MOV X1, X19
	0x029BD344 MOV X21, X0
	0x029BD348 LDR X8, [X8 + 0xC0]
	0x029BD34C LDR X2, [X8 + 0xE8]
	0x029BD350 BL 0x274089C
	0x029BD354 STR X21, [X19 + 0x40]
	0x029BD358 LDP X20, X19, [X31 + 0x10]
	0x029BD35C MOV X0, X21
	0x029BD360 LDP X30, X21, [X31], #0x20
	0x029BD364 RET
	0x029BD368 SUB X31, X31, 0x30
	0x029BD36C STP X30, X21, [X31 + 0x10]
	0x029BD370 STP X20, X19, [X31 + 0x20]
	0x029BD374 LDR X8, [X2 + 0x20]
	0x029BD378 MOV X19, X2
	0x029BD37C MOV X20, X1
	0x029BD380 MOV X21, X0
	0x029BD384 LDR X8, [X8 + 0xC0]
	0x029BD388 LDR X2, [X8 + 0xF8]
	0x029BD38C BL 0x29BDA84
	0x029BD390 TBNZ X0, 0x1F, 0x29BD3B8
	0x029BD394 LDR X8, [X21 + 0x18]
	0x029BD398 CBZ X8, 0x29BD3EC
	0x029BD39C LDR W9, [X8 + 0x18]
	0x029BD3A0 CMP W0, W9
	0x029BD3A4 B.CS 0x29BD3F0
	0x029BD3A8 MOVZ W9, 0x18
	0x029BD3AC UMADDL X8, X0, X9, X8
	0x029BD3B0 LDR V0, [X8 + 0x30]
	0x029BD3B4 B 0x29BD3DC
	0x029BD3B8 STR X20, [X31 + 0x8]
	0x029BD3BC LDR X8, [X19 + 0x20]
	0x029BD3C0 ADD X1, X31, 0x8
	0x029BD3C4 LDR X8, [X8 + 0xC0]
	0x029BD3C8 LDR X0, [X8 + 0x70]
	0x029BD3CC BL 0x1C16E04
	0x029BD3D0 MOV X1, X31
	0x029BD3D4 BL 0x339E47C
	0x029BD3D8 FMOV S0, W31
	0x029BD3DC LDP X20, X19, [X31 + 0x20]
	0x029BD3E0 LDP X30, X21, [X31 + 0x10]
	0x029BD3E4 ADD X31, X31, 0x30
	0x029BD3E8 RET
	0x029BD3EC BL 0x1C16F20
	0x029BD3F0 BL 0x1C16F28
	0x029BD3F4 LDR X8, [X2 + 0x20]
	0x029BD3F8 MOVZ W2, 0x1
	0x029BD3FC LDR X8, [X8 + 0xC0]
	0x029BD400 LDR X3, [X8 + 0x100]
	0x029BD404 B 0x29BDE28
	0x029BD408 LDR X8, [X2 + 0x20]
	0x029BD40C MOVZ W2, 0x2
	0x029BD410 LDR X8, [X8 + 0xC0]
	0x029BD414 LDR X3, [X8 + 0x100]
	0x029BD418 B 0x29BDE28
	0x029BD41C LDR X9, [X3 + 0x20]
	0x029BD420 MOV X8, X2
	0x029BD424 MOVZ W2, 0x2
	0x029BD428 FMOV S0, W8
	0x029BD42C LDR X9, [X9 + 0xC0]
	0x029BD430 LDR X9, [X9 + 0x80]
	0x029BD434 LDR X9, [X9 + 0x20]
	0x029BD438 LDR X9, [X9 + 0xC0]
	0x029BD43C LDR X3, [X9 + 0x100]
	0x029BD440 B 0x29BDE28
	0x029BD444 STR X30, [X31 - 0x30]!
	0x029BD448 STP X22, X21, [X31 + 0x10]
	0x029BD44C STP X20, X19, [X31 + 0x20]
	0x029BD450 LDR X8, [X3 + 0x20]
	0x029BD454 MOV X19, X2
	0x029BD458 MOV X22, X3
	0x029BD45C MOV X21, X0
	0x029BD460 LDR X8, [X8 + 0xC0]
	0x029BD464 LDR X2, [X8 + 0xF8]
	0x029BD468 BL 0x29BDA84
	0x029BD46C TBNZ X0, 0x1F, 0x29BD4C4
	0x029BD470 LDR X8, [X22 + 0x20]
	0x029BD474 MOV W20, W0
	0x029BD478 LDR X8, [X8 + 0xC0]
	0x029BD47C LDR X0, [X8 + 0x108]
	0x029BD480 BL 0x211C348
	0x029BD484 LDR X8, [X21 + 0x18]
	0x029BD488 CBZ X8, 0x29BD4D8
	0x029BD48C LDR W9, [X8 + 0x18]
	0x029BD490 CMP W20, W9
	0x029BD494 B.CS 0x29BD4DC
	0x029BD498 CBZ X0, 0x29BD4D8
	0x029BD49C LDR X9, [X0]
	0x029BD4A0 MOVZ W10, 0x18
	0x029BD4A4 UMADDL X8, X20, X10, X8
	0x029BD4A8 LDR V0, [X8 + 0x30]
	0x029BD4AC LDP X8, X1, [X9 + 0x1B8]
	0x029BD4B0 FMOV S1, W19
	0x029BD4B4 BLR X8
	0x029BD4B8 TBZ X0, 0x0, 0x29BD4C4
	0x029BD4BC MOVZ W0, 0x1
	0x029BD4C0 B 0x29BD4C8
	0x029BD4C4 MOV W0, W31
	0x029BD4C8 LDP X20, X19, [X31 + 0x20]
	0x029BD4CC LDP X22, X21, [X31 + 0x10]
	0x029BD4D0 LDR X30, [X31], #0x30
	0x029BD4D4 RET
	0x029BD4D8 BL 0x1C16F20
	0x029BD4DC BL 0x1C16F28
	0x029BD4E0 STP X30, X23, [X31 - 0x30]!
	0x029BD4E4 STP X22, X21, [X31 + 0x10]
	0x029BD4E8 STP X20, X19, [X31 + 0x20]
	0x029BD4EC LDR X8, [X3 + 0x20]
	0x029BD4F0 MOV X22, X2
	0x029BD4F4 MOV X20, X3
	0x029BD4F8 MOV X19, X1
	0x029BD4FC LDR X8, [X8 + 0xC0]
	0x029BD500 MOV X21, X0
	0x029BD504 LDR X2, [X8 + 0xF8]
	0x029BD508 BL 0x29BDA84
	0x029BD50C TBNZ X0, 0x1F, 0x29BD57C
	0x029BD510 LDR X8, [X20 + 0x20]
	0x029BD514 MOV W23, W0
	0x029BD518 LDR X8, [X8 + 0xC0]
	0x029BD51C LDR X0, [X8 + 0x108]
	0x029BD520 BL 0x211C348
	0x029BD524 LDR X8, [X21 + 0x18]
	0x029BD528 CBZ X8, 0x29BD590
	0x029BD52C LDR W9, [X8 + 0x18]
	0x029BD530 CMP W23, W9
	0x029BD534 B.CS 0x29BD594
	0x029BD538 CBZ X0, 0x29BD590
	0x029BD53C LDR X9, [X0]
	0x029BD540 MOVZ W10, 0x18
	0x029BD544 UMADDL X8, X23, X10, X8
	0x029BD548 LDR V0, [X8 + 0x30]
	0x029BD54C LDP X8, X1, [X9 + 0x1B8]
	0x029BD550 FMOV S1, W22
	0x029BD554 BLR X8
	0x029BD558 TBZ X0, 0x0, 0x29BD57C
	0x029BD55C LDR X8, [X20 + 0x20]
	0x029BD560 MOV X0, X21
	0x029BD564 MOV X1, X19
	0x029BD568 LDR X8, [X8 + 0xC0]
	0x029BD56C LDR X2, [X8 + 0x128]
	0x029BD570 BL 0x29BE7B0
	0x029BD574 MOVZ W0, 0x1
	0x029BD578 B 0x29BD580
	0x029BD57C MOV W0, W31
	0x029BD580 LDP X20, X19, [X31 + 0x20]
	0x029BD584 LDP X22, X21, [X31 + 0x10]
	0x029BD588 LDP X30, X23, [X31], #0x30
	0x029BD58C RET
	0x029BD590 BL 0x1C16F20
	0x029BD594 BL 0x1C16F28
	0x029BD598 STR X30, [X31 - 0x20]!
	0x029BD59C STP X20, X19, [X31 + 0x10]
	0x029BD5A0 LDR W20, [X0 + 0x20]
	0x029BD5A4 MOV X19, X0
	0x029BD5A8 CMP W20, 0x1
	0x029BD5AC B.LT 0x29BD5E8
	0x029BD5B0 LDR X0, [X19 + 0x10]
	0x029BD5B4 CBZ X0, 0x29BD600
	0x029BD5B8 LDR W2, [X0 + 0x18]
	0x029BD5BC MOV W1, W31
	0x029BD5C0 MOV X3, X31
	0x029BD5C4 BL 0x339FA34
	0x029BD5C8 LDR X0, [X19 + 0x18]
	0x029BD5CC MOVI D0, 0xFFFFFFFF00000000
	0x029BD5D0 MOV W1, W31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, X3
	008 Move X21, X2
	009 Move X19, X1
	010 Move X22, X0
	011 Compare X1, 0
	012 JumpIfNotEqual {15}
	013 Move W0, 5
	014 Call ThrowHelper.ThrowArgumentNullException, X0
	015 Move X8, [X20+32]
	016 Move W1, 15
	017 Move X0, X21
	018 Move X8, [X8+192]
	019 Move X2, [X8+496]
	020 Call ThrowHelper.IfNullAndNullsAreIllegalThenThrow, X0, X1
	021 Move X8, [X20+32]
	022 Move X8, [X8+192]
	023 Move X1, [X8+112]
	024 Move W8, [X1+309]
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {32}
	029 Move X0, X1
	030 Call 0x1C5D684
	031 Move X1, X0
	032 Compare X19, 0
	033 JumpIfEqual {78}
	034 Move X8, [X19]
	035 Move X9, [X1+64]
	036 Move X8, [X8+64]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X0, X19
	039 Call 0x1C17E08
	040 Move X8, [X20+32]
	041 Move X23, [X0]
	042 Move X8, [X8+192]
	043 Move X1, [X8+120]
	044 Move W8, [X1+309]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {52}
	049 Move X0, X1
	050 Call 0x1C5D684
	051 Move X1, X0
	052 Compare X21, 0
	053 JumpIfEqual {81}
	054 Move X8, [X21]
	055 Move X9, [X1+64]
	056 Move X8, [X8+64]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X0, X21
	059 Call 0x1C17E08
	060 Move X8, [X20+32]
	061 Move W2, [X0]
	062 Move X8, [X8+192]
	063 Move X8, [X8+504]
	064 Move X8, [X8+32]
	065 Move X8, [X8+192]
	066 Move X4, [X8+256]
	067 Move W3, 1
	068 Move X0, X22
	069 Move X1, X23
	070 Call 0x29BBD38, X0, X1, X2, X3
	071 Move X20, [X31+32]
	072 Move X19, [X31+40]
	073 Move X22, [X31+16]
	074 Move X21, [X31+24]
	075 Move X30, [X31+48]
	076 Move X23, [X31+56]
	077 Return 
	078 Call 0x1C17F20
	079 Move X0, X19
	080 Call 0x1C181E0
	081 Call 0x1C17F20
	082 Move X0, X21
	083 Call 0x1C181E0
	084 Move X22, X0
	085 Move W23, 1
	086 Move X22, X0
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move W23, 1
	089 Move X0, X22
	090 Call 0x3EB2AD0
	091 Move X22, X0
	092 Move X0, 0x173F000
	093 Move X0, [X0+3080]
	094 Call 0x1C17D08
	095 Move X8, [X22]
	096 Move X1, [X8]
	097 Call 0x1C18270
	098 Move TEMP, X0
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfNotEqual {120}
	102 Call 0x3EB2AE0
	103 Move X8, [X20+32]
	104 Move X8, [X8+192]
	105 Move X22, [X8+512]
	106 Move X0, 0x1737000
	107 Move X0, [X0+1728]
	108 Call 0x1C17D08
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {113}
	112 Call 0x1C17DFC
	113 Move X0, X22
	114 Move X1, X31
	115 Call Type.GetTypeFromHandle, X0
	116 Move X1, X0
	117 Move X0, X21
	118 Move X2, X31
	119 Call ThrowHelper.ThrowWrongValueTypeArgumentException, X0, X1
	120 Move W0, 8
	121 Call 0x3EB2AF0
	122 Move X8, [X22]
	123 Move [X0], X8
	124 Move X1, 0x14F8000
	125 Add X1, X1, 3672
	126 Move X2, X31
	127 Call 0x3EB2B00
	128 Move X22, X0
	129 Move X21, X1
	130 Move X22, X0
	131 Call 0x3EB2AE0
	132 Move W1, W21
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move X0, X22
	135 Call 0x3EB2AD0
	136 Move X21, X0
	137 Move X0, 0x173F000
	138 Move X0, [X0+3080]
	139 Call 0x1C17D08
	140 Move X8, [X21]
	141 Move X1, [X8]
	142 Call 0x1C18270
	143 Move TEMP, X0
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfNotEqual {172}
	147 Call 0x3EB2AE0
	148 Move X8, [X20+32]
	149 Move X0, 0x1737000
	150 Move X8, [X8+192]
	151 Move X20, [X8+520]
	152 Move X0, [X0+1728]
	153 Call 0x1C17D08
	154 Move W8, [X0+224]
	155 Compare W8, 0
	156 JumpIfNotEqual {158}
	157 Call 0x1C17DFC
	158 Move X0, X20
	159 Move X1, X31
	160 Call Type.GetTypeFromHandle, X0
	161 Move X1, X0
	162 Move X0, X19
	163 Move X20, [X31+32]
	164 Move X19, [X31+40]
	165 Move X22, [X31+16]
	166 Move X21, [X31+24]
	167 Move X2, X31
	168 Move X30, [X31+48]
	169 Move X23, [X31+56]
	170 Call ThrowHelper.ThrowWrongKeyTypeArgumentException, X0, X1
	171 Return 
	172 Move W0, 8
	173 Call 0x3EB2AF0
	174 Move X8, [X21]
	175 Move [X0], X8
	176 Move X1, 0x14F8000
	177 Add X1, X1, 3672
	178 Move X2, X31
	179 Call 0x3EB2B00
	180 Move X22, X0
	181 Call 0x3EB2AE0
	182 Move X0, X22
	183 Call 0x1D2D690
	184 Call 0x1991590

Method: System.Boolean IsCompatibleKey(System.Object key)

Disassembly:
	0x029BD5D4 MOV W2, W20
	0x029BD5D8 MOV X3, X31
	0x029BD5DC STR D0, [X19 + 0x20]
	0x029BD5E0 STR W31, [X19 + 0x28]
	0x029BD5E4 BL 0x339FA34
	0x029BD5E8 LDR W8, [X19 + 0x2C]
	0x029BD5EC ADD W8, W8, 0x1
	0x029BD5F0 STR W8, [X19 + 0x2C]
	0x029BD5F4 LDP X20, X19, [X31 + 0x10]
	0x029BD5F8 LDR X30, [X31], #0x20
	0x029BD5FC RET
	0x029BD600 BL 0x1C16F20
	0x029BD604 STR X30, [X31 - 0x10]!
	0x029BD608 LDR X8, [X2 + 0x20]
	0x029BD60C LDR X8, [X8 + 0xC0]
	0x029BD610 LDR X2, [X8 + 0xF8]
	0x029BD614 BL 0x29BDA84
	0x029BD618 ORN W8, W31, W0, 0x0
	0x029BD61C UBFM W0, W8, 0x1F, 0x1F
	0x029BD620 LDR X30, [X31], #0x10
	0x029BD624 RET
	0x029BD628 STR D8, [X31 - 0x40]!
	0x029BD62C STP X30, X23, [X31 + 0x10]
	0x029BD630 STP X22, X21, [X31 + 0x20]
	0x029BD634 STP X20, X19, [X31 + 0x30]
	0x029BD638 LDR W8, [X0 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X1
	005 Move X19, X0
	006 Compare X0, 0
	007 JumpIfNotEqual {11}
	008 Move W0, 5
	009 Move X1, X31
	010 Call ThrowHelper.ThrowArgumentNullException, X0
	011 Move X0, [X20+32]
	012 Move W8, [X0+309]
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {18}
	017 Call 0x1C5D684
	018 Move X8, [X0+192]
	019 Move X1, [X8+112]
	020 Move W8, [X1+309]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {28}
	025 Move X0, X1
	026 Call 0x1C5D684
	027 Move X1, X0
	028 Move X0, X19
	029 Call 0x1C17E00
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction CSET not yet implemented."
	034 Move X30, [X31+32]
	035 Return X0

Method: System.Void System.Collections.IDictionary.Add(System.Object key, System.Object value)

Disassembly:
	0x029BD63C CMP W8, 0x1
	0x029BD640 B.LT 0x29BD6C0
	0x029BD644 LDR X21, [X0 + 0x18]
	0x029BD648 MOV X20, X0
	0x029BD64C CBZ X21, 0x29BD6E4
	0x029BD650 MOV X19, X1
	0x029BD654 MOV V8.16B, V0.16B
	0x029BD658 MOV X22, X31
	0x029BD65C ADD X23, X21, 0x30
	0x029BD660 LDR W9, [X21 + 0x18]
	0x029BD664 CMP X22, X9
	0x029BD668 B.CS 0x29BD6E0
	0x029BD66C LDUR W9, [X23 - 0x10]
	0x029BD670 TBNZ X9, 0x1F, 0x29BD6B0
	0x029BD674 LDR X8, [X19 + 0x20]
	0x029BD678 LDR X8, [X8 + 0xC0]
	0x029BD67C LDR X0, [X8 + 0x108]
	0x029BD680 BL 0x211C348
	0x029BD684 LDR W8, [X21 + 0x18]
	0x029BD688 CMP X22, X8
	0x029BD68C B.CS 0x29BD6E0
	0x029BD690 CBZ X0, 0x29BD6E4
	0x029BD694 LDR X8, [X0]
	0x029BD698 LDR V0, [X23]
	0x029BD69C MOV V1.16B, V8.16B
	0x029BD6A0 LDP X9, X1, [X8 + 0x1B8]
	0x029BD6A4 BLR X9
	0x029BD6A8 TBNZ X0, 0x0, 0x29BD6C8
	0x029BD6AC LDR W8, [X20 + 0x20]
	0x029BD6B0 ADD X22, X22, 0x1
	0x029BD6B4 CMP X22, W8, SXTW
	0x029BD6B8 ADD X23, X23, 0x18
	0x029BD6BC B.LT 0x29BD660
	0x029BD6C0 MOV W0, W31
	0x029BD6C4 B 0x29BD6CC
	0x029BD6C8 MOVZ W0, 0x1
	0x029BD6CC LDP X20, X19, [X31 + 0x30]
	0x029BD6D0 LDP X22, X21, [X31 + 0x20]
	0x029BD6D4 LDP X30, X23, [X31 + 0x10]
	0x029BD6D8 LDR V8, [X31], #0x40
	0x029BD6DC RET
	0x029BD6E0 BL 0x1C16F28
	0x029BD6E4 BL 0x1C16F20
	0x029BD6E8 SUB X31, X31, 0x50
	0x029BD6EC STP X30, X25, [X31 + 0x10]
	0x029BD6F0 STP X24, X23, [X31 + 0x20]
	0x029BD6F4 STP X22, X21, [X31 + 0x30]
	0x029BD6F8 STP X20, X19, [X31 + 0x40]
	0x029BD6FC CBZ X1, 0x29BD7E8
	0x029BD700 LDR W9, [X1 + 0x18]
	0x029BD704 MOV X19, X3
	0x029BD708 MOV W21, W2
	0x029BD70C MOV X20, X1
	0x029BD710 MOV X22, X0
	0x029BD714 CMP W9, W2
	0x029BD718 B.CS 0x29BD728
	0x029BD71C MOV X0, X31
	0x029BD720 BL 0x339E2CC
	0x029BD724 LDR W9, [X20 + 0x18]
	0x029BD728 LDR W8, [X22 + 0x20]
	0x029BD72C LDR W10, [X22 + 0x28]
	0x029BD730 SUB W9, W9, W21
	0x029BD734 SUB W10, W8, W10
	0x029BD738 CMP W9, W10
	0x029BD73C B.GE 0x29BD750
	0x029BD740 MOVZ W0, 0x5
	0x029BD744 MOV X1, X31
	0x029BD748 BL 0x339DA4C
	0x029BD74C LDR W8, [X22 + 0x20]
	0x029BD750 CMP W8, 0x1
	0x029BD754 B.LT 0x29BD7CC
	0x029BD758 LDR X22, [X22 + 0x18]
	0x029BD75C CBZ X22, 0x29BD7F0
	0x029BD760 MOV X23, X31
	0x029BD764 MOV W24, W8
	0x029BD768 ADD X25, X22, 0x30
	0x029BD76C LDR W8, [X22 + 0x18]
	0x029BD770 CMP X23, X8
	0x029BD774 B.CS 0x29BD7E4
	0x029BD778 LDUR W8, [X25 - 0x10]
	0x029BD77C TBNZ X8, 0x1F, 0x29BD7BC
	0x029BD780 LDUR X1, [X25 - 0x8]
	0x029BD784 LDR V0, [X25]
	0x029BD788 STP X31, X31, [X31]
	0x029BD78C LDR X8, [X19 + 0x20]
	0x029BD790 ADD X0, X31, 0x0
	0x029BD794 LDR X8, [X8 + 0xC0]
	0x029BD798 LDR X2, [X8 + 0x140]
	0x029BD79C BL 0x2EDCEFC
	0x029BD7A0 LDR W8, [X20 + 0x18]
	0x029BD7A4 CMP W21, W8
	0x029BD7A8 B.CS 0x29BD7E4
	0x029BD7AC LDR V0, [X31]
	0x029BD7B0 ADD X8, X20, W21, 0x4, SXTW
	0x029BD7B4 ADD W21, W21, 0x1
	0x029BD7B8 STR V0, [X8 + 0x2]
	0x029BD7BC ADD X23, X23, 0x1
	0x029BD7C0 CMP X24, X23
	0x029BD7C4 ADD X25, X25, 0x18
	0x029BD7C8 B.NE 0x29BD76C
	0x029BD7CC LDP X20, X19, [X31 + 0x40]
	0x029BD7D0 LDP X22, X21, [X31 + 0x30]
	0x029BD7D4 LDP X24, X23, [X31 + 0x20]
	0x029BD7D8 LDP X30, X25, [X31 + 0x10]
	0x029BD7DC ADD X31, X31, 0x50
	0x029BD7E0 RET
	0x029BD7E4 BL 0x1C16F28
	0x029BD7E8 MOVZ W0, 0x3
	0x029BD7EC BL 0x338F3E0
	0x029BD7F0 BL 0x1C16F20
	0x029BD7F4 MOVI V0.2D, 0x0
	0x029BD7F8 STR X31, [X8 + 0x20]
	0x029BD7FC STP V0, V0, [X8]
	0x029BD800 LDR X9, [X1 + 0x20]
	0x029BD804 MOVZ W2, 0x2
	0x029BD808 MOV X1, X0
	0x029BD80C MOV X0, X8
	0x029BD810 LDR X9, [X9 + 0xC0]
	0x029BD814 LDR X3, [X9 + 0x150]
	0x029BD818 B 0x2BE6688
	0x029BD81C SUB X31, X31, 0x70
	0x029BD820 STP X30, X19, [X31 + 0x60]
	0x029BD824 MOVI V0.2D, 0x0
	0x029BD828 STR X31, [X31 + 0x50]
	0x029BD82C STP V0, V0, [X31 + 0x30]
	0x029BD830 LDR X8, [X1 + 0x20]
	0x029BD834 MOV X19, X1
	0x029BD838 MOV X1, X0
	0x029BD83C ADD X0, X31, 0x30
	0x029BD840 LDR X8, [X8 + 0xC0]
	0x029BD844 MOVZ W2, 0x2
	0x029BD848 LDR X3, [X8 + 0x150]
	0x029BD84C BL 0x2BE6688
	0x029BD850 LDP V0, V1, [X31 + 0x30]
	0x029BD854 LDR X8, [X31 + 0x50]
	0x029BD858 ADD X1, X31, 0x0
	0x029BD85C STP V0, V1, [X31]
	0x029BD860 STR X8, [X31 + 0x20]
	0x029BD864 LDR X8, [X19 + 0x20]
	0x029BD868 LDR X8, [X8 + 0xC0]
	0x029BD86C LDR X0, [X8 + 0x148]
	0x029BD870 BL 0x1C16E04
	0x029BD874 LDP X30, X19, [X31 + 0x60]
	0x029BD878 ADD X31, X31, 0x70
	0x029BD87C RET
	0x029BD880 STR X30, [X31 - 0x50]!
	0x029BD884 STP X26, X25, [X31 + 0x10]
	0x029BD888 STP X24, X23, [X31 + 0x20]
	0x029BD88C STP X22, X21, [X31 + 0x30]
	0x029BD890 STP X20, X19, [X31 + 0x40]
	0x029BD894 ADRP X22, 0x1A1D000
	0x029BD898 LDRB W8, [X22 + 0xFE8]
	0x029BD89C MOV X20, X4
	0x029BD8A0 MOV X19, X1
	0x029BD8A4 MOV X21, X0
	0x029BD8A8 TBNZ X8, 0x0, 0x29BD8F0
	0x029BD8AC ADRP X0, 0x1736000
	0x029BD8B0 LDR X0, [X0 + 0x6C0]
	0x029BD8B4 BL 0x1C16CF4
	0x029BD8B8 ADRP X0, 0x1761000
	0x029BD8BC LDR X0, [X0 + 0x630]
	0x029BD8C0 BL 0x1C16CF4
	0x029BD8C4 ADRP X0, 0x1760000
	0x029BD8C8 LDR X0, [X0 + 0x2D0]
	0x029BD8CC BL 0x1C16CF4
	0x029BD8D0 ADRP X0, 0x1761000
	0x029BD8D4 LDR X0, [X0 + 0x638]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, X3
	008 Move X21, X2
	009 Move X19, X1
	010 Move X22, X0
	011 Compare X1, 0
	012 JumpIfNotEqual {15}
	013 Move W0, 5
	014 Call ThrowHelper.ThrowArgumentNullException, X0
	015 Move X8, [X20+32]
	016 Move W1, 15
	017 Move X0, X21
	018 Move X8, [X8+192]
	019 Move X2, [X8+496]
	020 Call ThrowHelper.IfNullAndNullsAreIllegalThenThrow, X0, X1
	021 Move X8, [X20+32]
	022 Move X8, [X8+192]
	023 Move X1, [X8+112]
	024 Move W8, [X1+309]
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {32}
	029 Move X0, X1
	030 Call 0x1C5D684
	031 Move X1, X0
	032 Compare X19, 0
	033 JumpIfEqual {78}
	034 Move X8, [X19]
	035 Move X9, [X1+64]
	036 Move X8, [X8+64]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X0, X19
	039 Call 0x1C17E08
	040 Move X8, [X20+32]
	041 Move X23, [X0]
	042 Move X8, [X8+192]
	043 Move X1, [X8+120]
	044 Move W8, [X1+309]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {52}
	049 Move X0, X1
	050 Call 0x1C5D684
	051 Move X1, X0
	052 Compare X21, 0
	053 JumpIfEqual {81}
	054 Move X8, [X21]
	055 Move X9, [X1+64]
	056 Move X8, [X8+64]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X0, X21
	059 Call 0x1C17E08
	060 Move X8, [X20+32]
	061 Move W2, [X0]
	062 Move X8, [X8+192]
	063 Move X8, [X8+128]
	064 Move X8, [X8+32]
	065 Move X8, [X8+192]
	066 Move X4, [X8+256]
	067 Move W3, 2
	068 Move X0, X22
	069 Move X1, X23
	070 Call 0x29BBD38, X0, X1, X2, X3
	071 Move X20, [X31+32]
	072 Move X19, [X31+40]
	073 Move X22, [X31+16]
	074 Move X21, [X31+24]
	075 Move X30, [X31+48]
	076 Move X23, [X31+56]
	077 Return 
	078 Call 0x1C17F20
	079 Move X0, X19
	080 Call 0x1C181E0
	081 Call 0x1C17F20
	082 Move X0, X21
	083 Call 0x1C181E0
	084 Move X22, X0
	085 Move W23, 1
	086 Move X22, X0
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move W23, 1
	089 Move X0, X22
	090 Call 0x3EB2AD0
	091 Move X22, X0
	092 Move X0, 0x173F000
	093 Move X0, [X0+3080]
	094 Call 0x1C17D08
	095 Move X8, [X22]
	096 Move X1, [X8]
	097 Call 0x1C18270
	098 Move TEMP, X0
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfNotEqual {120}
	102 Call 0x3EB2AE0
	103 Move X8, [X20+32]
	104 Move X8, [X8+192]
	105 Move X22, [X8+512]
	106 Move X0, 0x1737000
	107 Move X0, [X0+1728]
	108 Call 0x1C17D08
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {113}
	112 Call 0x1C17DFC
	113 Move X0, X22
	114 Move X1, X31
	115 Call Type.GetTypeFromHandle, X0
	116 Move X1, X0
	117 Move X0, X21
	118 Move X2, X31
	119 Call ThrowHelper.ThrowWrongValueTypeArgumentException, X0, X1
	120 Move W0, 8
	121 Call 0x3EB2AF0
	122 Move X8, [X22]
	123 Move [X0], X8
	124 Move X1, 0x14F8000
	125 Add X1, X1, 3672
	126 Move X2, X31
	127 Call 0x3EB2B00
	128 Move X22, X0
	129 Move X21, X1
	130 Move X22, X0
	131 Call 0x3EB2AE0
	132 Move W1, W21
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move X0, X22
	135 Call 0x3EB2AD0
	136 Move X21, X0
	137 Move X0, 0x173F000
	138 Move X0, [X0+3080]
	139 Call 0x1C17D08
	140 Move X8, [X21]
	141 Move X1, [X8]
	142 Call 0x1C18270
	143 Move TEMP, X0
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfNotEqual {172}
	147 Call 0x3EB2AE0
	148 Move X8, [X20+32]
	149 Move X0, 0x1737000
	150 Move X8, [X8+192]
	151 Move X20, [X8+520]
	152 Move X0, [X0+1728]
	153 Call 0x1C17D08
	154 Move W8, [X0+224]
	155 Compare W8, 0
	156 JumpIfNotEqual {158}
	157 Call 0x1C17DFC
	158 Move X0, X20
	159 Move X1, X31
	160 Call Type.GetTypeFromHandle, X0
	161 Move X1, X0
	162 Move X0, X19
	163 Move X20, [X31+32]
	164 Move X19, [X31+40]
	165 Move X22, [X31+16]
	166 Move X21, [X31+24]
	167 Move X2, X31
	168 Move X30, [X31+48]
	169 Move X23, [X31+56]
	170 Call ThrowHelper.ThrowWrongKeyTypeArgumentException, X0, X1
	171 Return 
	172 Move W0, 8
	173 Call 0x3EB2AF0
	174 Move X8, [X21]
	175 Move [X0], X8
	176 Move X1, 0x14F8000
	177 Add X1, X1, 3672
	178 Move X2, X31
	179 Call 0x3EB2B00
	180 Move X22, X0
	181 Call 0x3EB2AE0
	182 Move X0, X22
	183 Call 0x1D2D690
	184 Call 0x1991590

Method: System.Boolean System.Collections.IDictionary.Contains(System.Object key)

Disassembly:
	0x029BD8D8 BL 0x1C16CF4
	0x029BD8DC ADRP X0, 0x1737000
	0x029BD8E0 LDR X0, [X0 + 0x2A0]
	0x029BD8E4 BL 0x1C16CF4
	0x029BD8E8 MOVZ W8, 0x1
	0x029BD8EC STRB W8, [X22 + 0xFE8]
	0x029BD8F0 CBZ X19, 0x29BDA74
	0x029BD8F4 ADRP X8, 0x1737000
	0x029BD8F8 LDR X8, [X8 + 0x2A0]
	0x029BD8FC LDR W2, [X21 + 0x2C]
	0x029BD900 ADRP X22, 0x1760000
	0x029BD904 ADRP X25, 0x1736000
	0x029BD908 LDR X1, [X8]
	0x029BD90C LDR X22, [X22 + 0x2D0]
	0x029BD910 LDR X25, [X25 + 0x6C0]
	0x029BD914 MOV X0, X19
	0x029BD918 MOV X3, X31
	0x029BD91C BL 0x32A8F28
	0x029BD920 LDR X23, [X21 + 0x30]
	0x029BD924 LDR X22, [X22]
	0x029BD928 CBNZ X23, 0x29BD940
	0x029BD92C LDR X8, [X20 + 0x20]
	0x029BD930 LDR X8, [X8 + 0xC0]
	0x029BD934 LDR X0, [X8 + 0x18]
	0x029BD938 BL 0x29D296C
	0x029BD93C MOV X23, X0
	0x029BD940 LDR X8, [X20 + 0x20]
	0x029BD944 LDR X0, [X25]
	0x029BD948 ADRP X26, 0x1761000
	0x029BD94C LDR X8, [X8 + 0xC0]
	0x029BD950 LDR W9, [X0 + 0xE0]
	0x029BD954 LDR X24, [X8 + 0x158]
	0x029BD958 LDR X26, [X26 + 0x630]
	0x029BD95C CBNZ W9, 0x29BD964
	0x029BD960 BL 0x1C16DFC
	0x029BD964 MOV X0, X24
	0x029BD968 MOV X1, X31
	0x029BD96C BL 0x338C698
	0x029BD970 MOV X3, X0
	0x029BD974 MOV X0, X19
	0x029BD978 MOV X1, X22
	0x029BD97C MOV X2, X23
	0x029BD980 MOV X4, X31
	0x029BD984 BL 0x32A89BC
	0x029BD988 LDR X8, [X21 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X21, X1
	007 Move X19, X0
	008 Move X0, X21
	009 Move X8, [X8+192]
	010 Move X20, X2
	011 Move X1, [X8+480]
	012 Call 0x29BD5D4, X0
	013 Move TEMP, X0
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfNotEqual {49}
	017 Move X8, [X20+32]
	018 Move X8, [X8+192]
	019 Move X1, [X8+112]
	020 Move W8, [X1+309]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {28}
	025 Move X0, X1
	026 Call 0x1C5D684
	027 Move X1, X0
	028 Compare X21, 0
	029 JumpIfEqual {55}
	030 Move X8, [X21]
	031 Move X9, [X1+64]
	032 Move X0, X21
	033 Move X8, [X8+64]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Call 0x1C17E08
	036 Move X8, [X20+32]
	037 Move X1, [X0]
	038 Move X0, X19
	039 Move X8, [X8+192]
	040 Move X8, [X8+528]
	041 Move X8, [X8+32]
	042 Move X8, [X8+192]
	043 Move X2, [X8+248]
	044 Call 0x29BB994, X0, X1
	045 NotImplemented "Instruction ORN not yet implemented."
	046 Move W0, W8
	047 ShiftRight W0, 31
	048 And W0, W0, 0x7FFFFFFF
	049 Move W0, W31
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X30, [X31+32]
	053 Move X21, [X31+40]
	054 Return X0
	055 Call 0x1C17F20
	056 Call 0x1C181E0

Method: System.Collections.IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator()

Disassembly:
	0x029BD98C LDR X1, [X26]
	0x029BD990 CBZ X8, 0x29BD99C
	0x029BD994 LDR W2, [X8 + 0x18]
	0x029BD998 B 0x29BD9A0
	0x029BD99C MOV W2, W31
	0x029BD9A0 MOV X0, X19
	0x029BD9A4 MOV X3, X31
	0x029BD9A8 BL 0x32A8F28
	0x029BD9AC LDR X8, [X21 + 0x10]
	0x029BD9B0 CBZ X8, 0x29BDA5C
	0x029BD9B4 LDR X8, [X20 + 0x20]
	0x029BD9B8 LDR W9, [X21 + 0x28]
	0x029BD9BC LDR X8, [X8 + 0xC0]
	0x029BD9C0 LDR X0, [X8 + 0x160]
	0x029BD9C4 LDR W8, [X21 + 0x20]
	0x029BD9C8 LDRB W10, [X0 + 0x135]
	0x029BD9CC SUB W22, W8, W9
	0x029BD9D0 TBNZ X10, 0x0, 0x29BD9D8
	0x029BD9D4 BL 0x1C5C684
	0x029BD9D8 ADRP X23, 0x1761000
	0x029BD9DC LDR X23, [X23 + 0x638]
	0x029BD9E0 MOV W1, W22
	0x029BD9E4 BL 0x1C16D6C
	0x029BD9E8 LDR X8, [X20 + 0x20]
	0x029BD9EC MOV X22, X0

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+96], X30
	003 Move [X31+104], X19
	004 NotImplemented "Instruction MOVI not yet implemented."
	005 Move [X31+80], X31
	006 Move [X31+48], V0
	007 Move [X31+56], V0
	008 Move X8, [X1+32]
	009 Move X19, X1
	010 Move X1, X0
	011 Add X0, X31, 48
	012 Move X8, [X8+192]
	013 Move W2, 1
	014 Move X3, [X8+336]
	015 Call 0x2BE6E24, X0, X1, X2
	016 Move V0, [X31+48]
	017 Move V1, [X31+64]
	018 Move X8, [X31+80]
	019 Add X1, X31, 0
	020 Move [X31], V0
	021 Move [X31+8], V1
	022 Move [X31+32], X8
	023 Move X8, [X19+32]
	024 Move X8, [X8+192]
	025 Move X0, [X8+328]
	026 Call 0x1C17E04
	027 Move X30, [X31+96]
	028 Move X19, [X31+104]
	029 Add X31, X31, 112
	030 Return X0

Method: System.Void System.Collections.IDictionary.Remove(System.Object key)

Disassembly:
	0x029BD9F0 MOV X0, X21
	0x029BD9F4 MOV X1, X22
	0x029BD9F8 LDR X8, [X8 + 0xC0]
	0x029BD9FC MOV W2, W31
	0x029BDA00 LDR X3, [X8 + 0x168]
	0x029BDA04 BL 0x29BD6E8
	0x029BDA08 LDR X8, [X20 + 0x20]
	0x029BDA0C LDR X0, [X25]
	0x029BDA10 LDR X8, [X8 + 0xC0]
	0x029BDA14 LDR W9, [X0 + 0xE0]
	0x029BDA18 LDR X20, [X8 + 0x170]
	0x029BDA1C CBNZ W9, 0x29BDA24
	0x029BDA20 BL 0x1C16DFC
	0x029BDA24 MOV X0, X20
	0x029BDA28 MOV X1, X31
	0x029BDA2C BL 0x338C698
	0x029BDA30 LDR X1, [X23]
	0x029BDA34 MOV X3, X0
	0x029BDA38 MOV X0, X19
	0x029BDA3C MOV X2, X22
	0x029BDA40 LDP X20, X19, [X31 + 0x40]
	0x029BDA44 LDP X22, X21, [X31 + 0x30]
	0x029BDA48 LDP X24, X23, [X31 + 0x20]
	0x029BDA4C LDP X26, X25, [X31 + 0x10]
	0x029BDA50 MOV X4, X31
	0x029BDA54 LDR X30, [X31], #0x50
	0x029BDA58 B 0x32A89BC
	0x029BDA5C LDP X20, X19, [X31 + 0x40]
	0x029BDA60 LDP X22, X21, [X31 + 0x30]
	0x029BDA64 LDP X24, X23, [X31 + 0x20]
	0x029BDA68 LDP X26, X25, [X31 + 0x10]
	0x029BDA6C LDR X30, [X31], #0x50
	0x029BDA70 RET
	0x029BDA74 MOVZ W0, 0x4
	0x029BDA78 MOV X1, X31
	0x029BDA7C BL 0x338F3E0
	0x029BDA80 BL 0x1C16F20
	0x029BDA84 STR X30, [X31 - 0x60]!
	0x029BDA88 STP X28, X27, [X31 + 0x10]
	0x029BDA8C STP X26, X25, [X31 + 0x20]
	0x029BDA90 STP X24, X23, [X31 + 0x30]
	0x029BDA94 STP X22, X21, [X31 + 0x40]
	0x029BDA98 STP X20, X19, [X31 + 0x50]
	0x029BDA9C STR X1, [X31 + 0x8]
	0x029BDAA0 LDR X22, [X0 + 0x10]
	0x029BDAA4 CBZ X22, 0x29BDB18
	0x029BDAA8 LDR X21, [X0 + 0x30]
	0x029BDAAC LDR X23, [X0 + 0x18]
	0x029BDAB0 MOV X19, X2
	0x029BDAB4 CBZ X21, 0x29BDB20
	0x029BDAB8 LDR X8, [X19 + 0x20]
	0x029BDABC MOV X20, X1
	0x029BDAC0 LDR X8, [X8 + 0xC0]
	0x029BDAC4 LDR X1, [X8 + 0x8]
	0x029BDAC8 LDRB W8, [X1 + 0x135]
	0x029BDACC TBNZ X8, 0x0, 0x29BDADC
	0x029BDAD0 MOV X0, X1
	0x029BDAD4 BL 0x1C5C684
	0x029BDAD8 MOV X1, X0
	0x029BDADC LDR X8, [X21]
	0x029BDAE0 LDRH W9, [X8 + 0x12E]
	0x029BDAE4 CBZ X9, 0x29BDB08
	0x029BDAE8 LDR X10, [X8 + 0xB0]
	0x029BDAEC ADD X10, X10, 0x8
	0x029BDAF0 LDUR X11, [X10 - 0x8]
	0x029BDAF4 CMP X11, X1
	0x029BDAF8 B.EQ 0x29BDBFC
	0x029BDAFC SUBS X9, X9, 0x1
	0x029BDB00 ADD X10, X10, 0x10
	0x029BDB04 B.NE 0x29BDAF0
	0x029BDB08 MOVZ W2, 0x1
	0x029BDB0C MOV X0, X21
	0x029BDB10 BL 0x1C5C788
	0x029BDB14 B 0x29BDC0C
	0x029BDB18 MOVN W22, 0x0
	0x029BDB1C B 0x29BDD38
	0x029BDB20 LDR X8, [X19 + 0x20]
	0x029BDB24 ADD X0, X31, 0x8
	0x029BDB28 LDR X8, [X8 + 0xC0]
	0x029BDB2C LDR X1, [X8 + 0x178]
	0x029BDB30 BL 0x2E0DD3C
	0x029BDB34 LDR W9, [X22 + 0x18]
	0x029BDB38 AND W20, W0, 0x7FFFFFFF
	0x029BDB3C SDIV W8, W20, W9
	0x029BDB40 MSUB W8, W8, W9, W20
	0x029BDB44 CMP W8, W9
	0x029BDB48 B.CS 0x29BDD58
	0x029BDB4C CBZ X23, 0x29BDD5C
	0x029BDB50 ADD X8, X22, W8, 0x2, UXTW

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X21, X1
	007 Move X20, X0
	008 Move X0, X21
	009 Move X8, [X8+192]
	010 Move X19, X2
	011 Move X1, [X8+480]
	012 Call 0x29BD5D4, X0
	013 Move TEMP, X0
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfNotEqual {47}
	017 Move X8, [X19+32]
	018 Move X8, [X8+192]
	019 Move X1, [X8+112]
	020 Move W8, [X1+309]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {28}
	025 Move X0, X1
	026 Call 0x1C5D684
	027 Move X1, X0
	028 Compare X21, 0
	029 JumpIfEqual {52}
	030 Move X8, [X21]
	031 Move X9, [X1+64]
	032 Move X0, X21
	033 Move X8, [X8+64]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Call 0x1C17E08
	036 Move X8, [X19+32]
	037 Move X1, [X0]
	038 Move X0, X20
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X8, [X8+192]
	042 Move X2, [X8+296]
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Call 0x29BC6C8, X0, X1
	046 Return 
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return 
	052 Call 0x1C17F20
	053 Call 0x1C181E0
	054 Move [X31-32], X30
	055 Move [X31+16], X20
	056 Move [X31+24], X19
	057 Move X19, X0
	058 Move X0, [X0+32]
	059 Move W8, [X0+309]
	060 Move TEMP, X8
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {65}
	064 Call 0x1C5D684
	065 Move X8, [X0+192]
	066 Move X0, [X8+16]
	067 Move W8, [X0+309]
	068 Move TEMP, X8
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfEqual {73}
	072 Call 0x1C5D684
	073 Move X8, [X0+184]
	074 Move X20, [X8]
	075 Call 0x1C17D44
	076 Compare X20, 0
	077 JumpIfNotEqual {122}
	078 Move X0, [X19+32]
	079 Move W8, [X0+309]
	080 Move TEMP, X8
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfEqual {85}
	084 Call 0x1C5D684
	085 Move X8, [X0+192]
	086 Move X0, [X8+24]
	087 Call EqualityComparer`1<InputFeatureUsage`1<Boolean>>.CreateComparer
	088 Move X20, X0
	089 Call 0x1C17D44
	090 Move X0, [X19+32]
	091 Move W8, [X0+309]
	092 Move TEMP, X8
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfEqual {97}
	096 Call 0x1C5D684
	097 Move X8, [X0+192]
	098 Move X0, [X8+16]
	099 Move W8, [X0+309]
	100 Move TEMP, X8
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfEqual {105}
	104 Call 0x1C5D684
	105 Move X8, [X0+184]
	106 Move [X8], X20
	107 Move X0, [X19+32]
	108 Move W8, [X0+309]
	109 Move TEMP, X8
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfEqual {114}
	113 Call 0x1C5D684
	114 Move X8, [X0+192]
	115 Move X0, [X8+16]
	116 Move W8, [X0+309]
	117 Move TEMP, X8
	118 And TEMP, TEMP, 1
	119 Compare TEMP, 1
	120 JumpIfEqual {122}
	121 Call 0x1C5D684
	122 Move X0, X20
	123 Move X20, [X31+16]
	124 Move X19, [X31+24]
	125 Move X30, [X31+32]
	126 Return 

