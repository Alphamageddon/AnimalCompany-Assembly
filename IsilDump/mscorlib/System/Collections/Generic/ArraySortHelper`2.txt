Type: System.Collections.Generic.ArraySortHelper`2

Method: System.Void Sort(TKey[] keys, TValue[] values, System.Int32 index, System.Int32 length, System.Collections.Generic.IComparer`1<TKey> comparer)

Disassembly:
	0x024D4C68 CMP W27, W8
	0x024D4C6C B.CS 0x24D4DC0
	0x024D4C70 SXTW X26, W27
	0x024D4C74 ADD X29, X23, X26, 0x2, LSL
	0x024D4C78 LDR W25, [X29 + 0x20]!
	0x024D4C7C CBZ X20, 0x24D4DC4
	0x024D4C80 LDR X0, [X19 + 0x20]
	0x024D4C84 LDRB W8, [X0 + 0x135]
	0x024D4C88 TBNZ X8, 0x0, 0x24D4C90
	0x024D4C8C BL 0x1C5C684
	0x024D4C90 LDR X8, [X0 + 0xC0]
	0x024D4C94 LDR X1, [X8]
	0x024D4C98 LDRB W8, [X1 + 0x135]
	0x024D4C9C TBNZ X8, 0x0, 0x24D4CAC
	0x024D4CA0 MOV X0, X1
	0x024D4CA4 BL 0x1C5C684
	0x024D4CA8 MOV X1, X0
	0x024D4CAC LDR X8, [X20]
	0x024D4CB0 LDRH W9, [X8 + 0x12E]
	0x024D4CB4 CBZ X9, 0x24D4CD8
	0x024D4CB8 LDR X10, [X8 + 0xB0]
	0x024D4CBC ADD X10, X10, 0x8
	0x024D4CC0 LDUR X11, [X10 - 0x8]
	0x024D4CC4 CMP X11, X1
	0x024D4CC8 B.EQ 0x24D4CE8
	0x024D4CCC SUBS X9, X9, 0x1
	0x024D4CD0 ADD X10, X10, 0x10
	0x024D4CD4 B.NE 0x24D4CC0
	0x024D4CD8 MOV X0, X20
	0x024D4CDC MOV W2, W31
	0x024D4CE0 BL 0x1C5C788
	0x024D4CE4 B 0x24D4CF4
	0x024D4CE8 LDRSW X9, [X10]
	0x024D4CEC ADD X8, X8, X9, 0x4, LSL
	0x024D4CF0 ADD X0, X8, 0x138
	0x024D4CF4 LDP X8, X3, [X0]
	0x024D4CF8 MOV X0, X20
	0x024D4CFC MOV W1, W24
	0x024D4D00 MOV W2, W25
	0x024D4D04 BLR X8
	0x024D4D08 LDR X8, [X23 + 0x18]
	0x024D4D0C TBZ X0, 0x1F, 0x24D4D60
	0x024D4D10 CMP W27, W8
	0x024D4D14 B.CS 0x24D4DC0
	0x024D4D18 ADD W9, W27, 0x1
	0x024D4D1C CMP W9, W8
	0x024D4D20 B.CS 0x24D4DC0
	0x024D4D24 LDR W10, [X29]
	0x024D4D28 SXTW X9, W9
	0x024D4D2C ADD X11, X23, X9, 0x2, LSL
	0x024D4D30 STR W10, [X11 + 0x20]
	0x024D4D34 LDR W10, [X22 + 0x18]
	0x024D4D38 CMP W27, W10
	0x024D4D3C B.CS 0x24D4DC0
	0x024D4D40 CMP W9, W10
	0x024D4D44 B.CS 0x24D4DC0
	0x024D4D48 ADD X10, X22, 0x20
	0x024D4D4C LDR W11, [X10, X26, LSL #2]
	0x024D4D50 SUB W27, W27, 0x1
	0x024D4D54 CMP W27, W21
	0x024D4D58 STR W11, [X10, X9, LSL #2]
	0x024D4D5C B.GE 0x24D4C68
	0x024D4D60 ADD W9, W27, 0x1
	0x024D4D64 CMP W9, W8
	0x024D4D68 B.CS 0x24D4DC0
	0x024D4D6C SXTW X9, W9
	0x024D4D70 ADD X10, X23, X9, 0x2, LSL
	0x024D4D74 STR W24, [X10 + 0x20]
	0x024D4D78 LDR W10, [X22 + 0x18]
	0x024D4D7C CMP W9, W10
	0x024D4D80 B.CS 0x24D4DC0
	0x024D4D84 LDR X10, [X31 + 0x8]
	0x024D4D88 ADD X9, X22, X9, 0x2, LSL
	0x024D4D8C MOV X27, X28
	0x024D4D90 CMP X28, X10
	0x024D4D94 LDR W10, [X31 + 0x1C]
	0x024D4D98 STR W10, [X9 + 0x20]
	0x024D4D9C B.NE 0x24D4C2C
	0x024D4DA0 LDP X20, X19, [X31 + 0x70]
	0x024D4DA4 LDP X22, X21, [X31 + 0x60]
	0x024D4DA8 LDP X24, X23, [X31 + 0x50]
	0x024D4DAC LDP X26, X25, [X31 + 0x40]
	0x024D4DB0 LDP X28, X27, [X31 + 0x30]
	0x024D4DB4 LDP X29, X30, [X31 + 0x20]
	0x024D4DB8 ADD X31, X31, 0x80
	0x024D4DBC RET
	0x024D4DC0 BL 0x1C16F28
	0x024D4DC4 BL 0x1C16F20
	0x024D4DC8 STP X30, X19, [X31 - 0x10]!
	0x024D4DCC MOV X19, X0
	0x024D4DD0 LDR X0, [X0 + 0x20]
	0x024D4DD4 LDRB W8, [X0 + 0x135]
	0x024D4DD8 TBNZ X8, 0x0, 0x24D4DE0
	0x024D4DDC BL 0x1C5C684
	0x024D4DE0 LDR X8, [X0 + 0xC0]
	0x024D4DE4 LDR X0, [X8 + 0x38]
	0x024D4DE8 LDRB W8, [X0 + 0x135]
	0x024D4DEC TBNZ X8, 0x0, 0x24D4DF4
	0x024D4DF0 BL 0x1C5C684
	0x024D4DF4 LDR W8, [X0 + 0xE0]
	0x024D4DF8 CBNZ W8, 0x24D4E00
	0x024D4DFC BL 0x1C16DFC
	0x024D4E00 LDR X0, [X19 + 0x20]
	0x024D4E04 LDRB W8, [X0 + 0x135]
	0x024D4E08 TBNZ X8, 0x0, 0x24D4E10
	0x024D4E0C BL 0x1C5C684
	0x024D4E10 LDR X8, [X0 + 0xC0]
	0x024D4E14 LDR X0, [X8 + 0x38]
	0x024D4E18 LDRB W8, [X0 + 0x135]
	0x024D4E1C TBNZ X8, 0x0, 0x24D4E24
	0x024D4E20 BL 0x1C5C684
	0x024D4E24 LDR X8, [X0 + 0xB8]
	0x024D4E28 LDR X0, [X8]
	0x024D4E2C LDP X30, X19, [X31], #0x10
	0x024D4E30 RET
	0x024D4E34 MOV X1, X31
	0x024D4E38 B 0x33BDD8C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, X6
	009 Move X20, X5
	010 Move W21, W4
	011 Move W22, W3
	012 Move X23, X2
	013 Move X24, X1
	014 Compare X5, 0
	015 JumpIfEqual {21}
	016 Move X8, [X19+32]
	017 Move X8, [X8+192]
	018 Move X0, [X8+8]
	019 Call Comparer`1<Int32>.get_Default
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X8, [X19+32]
	022 Move X8, [X8+192]
	023 Move X0, [X8+8]
	024 Call Comparer`1<Int32>.get_Default
	025 Move X20, X0
	026 Move X8, [X19+32]
	027 Move X8, [X8+192]
	028 Move X0, [X8+56]
	029 Move W8, [X0+309]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {35}
	034 Call 0x1C5D684
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X8, [X19+32]
	040 Move X8, [X8+192]
	041 Move X5, [X8+48]
	042 Move X0, X24
	043 Move X1, X23
	044 Move W2, W22
	045 Move W3, W21
	046 Move X4, X20
	047 Call 0x24D5030, X0, X1, X2, X3, X4
	048 Move X20, [X31+48]
	049 Move X19, [X31+56]
	050 Move X22, [X31+32]
	051 Move X21, [X31+40]
	052 Move X24, [X31+16]
	053 Move X23, [X31+24]
	054 Move X30, [X31+64]
	055 Return 
	056 Move X21, X0
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X0, X21
	059 Call 0x3EB2AD0
	060 Move X21, X0
	061 Move X0, 0x1C2A000
	062 Move X0, [X0+3960]
	063 Call 0x1C17D08
	064 Move X8, [X21]
	065 Move X1, [X8]
	066 Call 0x1C18270
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {83}
	071 Call 0x3EB2AE0
	072 Move X0, X20
	073 Move X20, [X31+48]
	074 Move X19, [X31+56]
	075 Move X22, [X31+32]
	076 Move X21, [X31+40]
	077 Move X24, [X31+16]
	078 Move X23, [X31+24]
	079 Move X1, X31
	080 Move X30, [X31+64]
	081 Call IntrospectiveSortUtilities.ThrowOrIgnoreBadComparer, X0
	082 Return 
	083 Move X0, 0x1C49000
	084 Move X0, [X0+3000]
	085 Call 0x1C17D08
	086 Move X8, [X21]
	087 Move X1, [X8]
	088 Call 0x1C18270
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfNotEqual {97}
	093 Move X19, [X21]
	094 Call 0x3EB2AE0
	095 Move X0, X19
	096 Call 0x1C17F18
	097 Move X0, 0x1C20000
	098 Move X0, [X0+2000]
	099 Call 0x1C17D08
	100 Move X8, [X21]
	101 Move X1, [X8]
	102 Call 0x1C18270
	103 Move TEMP, X0
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfNotEqual {125}
	107 Move X20, [X21]
	108 Call 0x3EB2AE0
	109 Move X0, 0x1C20000
	110 Move X0, [X0+1456]
	111 Call 0x1C17D08
	112 Call 0x1C17F10
	113 Move X21, X0
	114 Move X0, 0x1C49000
	115 Move X0, [X0+3008]
	116 Call 0x1C17D08
	117 Move X1, X0
	118 Move X0, X21
	119 Move X2, X20
	120 Move X3, X31
	121 Call InvalidOperationException..ctor, X0, X1, X2
	122 Move X0, X21
	123 Move X1, X19
	124 Call 0x1C17DEC
	125 Move W0, 8
	126 Call 0x3EB2AF0
	127 Move X8, [X21]
	128 Move [X0], X8
	129 Move X1, 0x19E1000
	130 Add X1, X1, 3672
	131 Move X2, X31
	132 Call 0x3EB2B00
	133 Move X21, X0
	134 Call 0x3EB2AE0
	135 Move X0, X21
	136 Call 0x1D2D690
	137 Call 0x1991590

Method: System.Void SwapIfGreaterWithItems(TKey[] keys, TValue[] values, System.Collections.Generic.IComparer`1<TKey> comparer, System.Int32 a, System.Int32 b)

Disassembly:
	0x024D4E3C STR X30, [X31 - 0x20]!
	0x024D4E40 STP X20, X19, [X31 + 0x10]
	0x024D4E44 MOV X19, X0
	0x024D4E48 LDR X0, [X0 + 0x20]
	0x024D4E4C LDRB W8, [X0 + 0x135]
	0x024D4E50 TBNZ X8, 0x0, 0x24D4E58
	0x024D4E54 BL 0x1C5C684
	0x024D4E58 LDR X8, [X0 + 0xC0]
	0x024D4E5C LDR X0, [X8 + 0x90]
	0x024D4E60 LDRB W8, [X0 + 0x135]
	0x024D4E64 TBNZ X8, 0x0, 0x24D4E6C
	0x024D4E68 BL 0x1C5C684
	0x024D4E6C BL 0x1C16F10
	0x024D4E70 LDR X8, [X19 + 0x20]
	0x024D4E74 MOV X20, X0
	0x024D4E78 LDRB W9, [X8 + 0x135]
	0x024D4E7C TBNZ X9, 0x0, 0x24D4E88
	0x024D4E80 MOV X0, X8
	0x024D4E84 BL 0x1C5C684
	0x024D4E88 MOV X0, X20
	0x024D4E8C MOV X1, X31
	0x024D4E90 BL 0x33BDD8C
	0x024D4E94 LDR X0, [X19 + 0x20]
	0x024D4E98 LDRB W8, [X0 + 0x135]
	0x024D4E9C TBNZ X8, 0x0, 0x24D4EA4
	0x024D4EA0 BL 0x1C5C684
	0x024D4EA4 LDR X8, [X0 + 0xC0]
	0x024D4EA8 LDR X0, [X8 + 0x38]
	0x024D4EAC LDRB W8, [X0 + 0x135]
	0x024D4EB0 TBNZ X8, 0x0, 0x24D4EB8
	0x024D4EB4 BL 0x1C5C684
	0x024D4EB8 LDR X8, [X0 + 0xB8]
	0x024D4EBC STR X20, [X8]
	0x024D4EC0 LDR X0, [X19 + 0x20]
	0x024D4EC4 LDRB W8, [X0 + 0x135]
	0x024D4EC8 TBNZ X8, 0x0, 0x24D4ED0
	0x024D4ECC BL 0x1C5C684
	0x024D4ED0 LDR X8, [X0 + 0xC0]
	0x024D4ED4 LDR X0, [X8 + 0x38]
	0x024D4ED8 LDRB W8, [X0 + 0x135]
	0x024D4EDC TBNZ X8, 0x0, 0x24D4EEC
	0x024D4EE0 LDP X20, X19, [X31 + 0x10]
	0x024D4EE4 LDR X30, [X31], #0x20
	0x024D4EE8 B 0x1C5C684
	0x024D4EEC LDP X20, X19, [X31 + 0x10]
	0x024D4EF0 LDR X30, [X31], #0x20
	0x024D4EF4 RET
	0x024D4EF8 STR X30, [X31 - 0x40]!
	0x024D4EFC STP X24, X23, [X31 + 0x10]
	0x024D4F00 STP X22, X21, [X31 + 0x20]
	0x024D4F04 STP X20, X19, [X31 + 0x30]
	0x024D4F08 MOV X19, X6
	0x024D4F0C MOV X20, X5
	0x024D4F10 MOV W21, W4
	0x024D4F14 MOV W22, W3
	0x024D4F18 MOV X23, X2
	0x024D4F1C MOV X24, X1
	0x024D4F20 CBZ X5, 0x24D4F3C
	0x024D4F24 LDR X8, [X19 + 0x20]
	0x024D4F28 LDR X8, [X8 + 0xC0]
	0x024D4F2C LDR X0, [X8 + 0x8]
	0x024D4F30 BL 0x29286B0
	0x024D4F34 CMP X0, X20
	0x024D4F38 B.NE 0x24D4F50
	0x024D4F3C LDR X8, [X19 + 0x20]
	0x024D4F40 LDR X8, [X8 + 0xC0]
	0x024D4F44 LDR X0, [X8 + 0x8]
	0x024D4F48 BL 0x29286B0
	0x024D4F4C MOV X20, X0
	0x024D4F50 LDR X8, [X19 + 0x20]
	0x024D4F54 LDR X8, [X8 + 0xC0]
	0x024D4F58 LDR X0, [X8 + 0x38]
	0x024D4F5C LDRB W8, [X0 + 0x135]
	0x024D4F60 TBNZ X8, 0x0, 0x24D4F68
	0x024D4F64 BL 0x1C5C684
	0x024D4F68 LDR W8, [X0 + 0xE0]
	0x024D4F6C CBNZ W8, 0x24D4F74
	0x024D4F70 BL 0x1C16DFC
	0x024D4F74 LDR X8, [X19 + 0x20]
	0x024D4F78 LDR X8, [X8 + 0xC0]
	0x024D4F7C LDR X5, [X8 + 0x30]
	0x024D4F80 MOV X0, X24
	0x024D4F84 MOV X1, X23
	0x024D4F88 MOV W2, W22
	0x024D4F8C MOV W3, W21
	0x024D4F90 MOV X4, X20
	0x024D4F94 BL 0x24D52C0
	0x024D4F98 LDP X20, X19, [X31 + 0x30]
	0x024D4F9C LDP X22, X21, [X31 + 0x20]
	0x024D4FA0 LDP X24, X23, [X31 + 0x10]
	0x024D4FA4 LDR X30, [X31], #0x40
	0x024D4FA8 RET

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move X22, X0
	015 Compare X0, 0
	016 JumpIfEqual {107}
	017 Move W8, [X22+24]
	018 Move W21, W3
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X26, W21
	021 Add X28, X22, X26
	022 Add X28, X28, 32
	023 Move W24, [X28]
	024 Move W20, W4
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X27, W20
	027 Add X29, X22, X27
	028 Add X29, X29, 32
	029 Move W25, [X29]
	030 Move X23, X2
	031 Compare X2, 0
	032 JumpIfEqual {107}
	033 Move X0, [X5+32]
	034 Move X19, X1
	035 Move W8, [X0+309]
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {41}
	040 Call 0x1C5D684
	041 Move X8, [X0+192]
	042 Move X1, [X8]
	043 Move W8, [X1+309]
	044 Move TEMP, X8
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {51}
	048 Move X0, X1
	049 Call 0x1C5D684
	050 Move X1, X0
	051 Move X8, [X23]
	052 NotImplemented "Instruction LDRH not yet implemented."
	053 Compare X9, 0
	054 JumpIfEqual {61}
	055 Move X10, [X8+176]
	056 Add X10, X10, 8
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Subtract X9, X9, 1
	060 Add X10, X10, 16
	061 Move X0, X23
	062 Move W2, W31
	063 Call 0x1C5D788
	064 NotImplemented "Instruction LDRSW not yet implemented."
	065 Add X8, X8, X9
	066 Add X0, X8, 312
	067 Move X8, [X0]
	068 Move X3, [X0+8]
	069 Move X0, X23
	070 Move W1, W24
	071 Move W2, W25
	072 NotImplemented "Instruction BLR not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move W8, [X22+24]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move W8, [X29]
	078 Move W9, [X28]
	079 Move [X28], W8
	080 Move [X29], W9
	081 Compare X19, 0
	082 JumpIfEqual {107}
	083 Move W8, [X19+24]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Add X8, X19, X26
	087 Add X9, X19, X27
	088 Move W10, [X9+32]
	089 Add X8, X8, 32
	090 Move W11, [X8]
	091 Move [X8], W10
	092 Move [X9+32], W11
	093 Move X20, [X31+80]
	094 Move X19, [X31+88]
	095 Move X22, [X31+64]
	096 Move X21, [X31+72]
	097 Move X24, [X31+48]
	098 Move X23, [X31+56]
	099 Move X26, [X31+32]
	100 Move X25, [X31+40]
	101 Move X28, [X31+16]
	102 Move X27, [X31+24]
	103 Move X29, [X31+96]
	104 Move X30, [X31+104]
	105 Return 
	106 Call 0x1C17F28
	107 Call 0x1C17F20

Method: System.Void Swap(TKey[] keys, TValue[] values, System.Int32 i, System.Int32 j)

Disassembly:
	0x024D4FAC B 0x24D4FB4
	0x024D4FB0 B 0x24D4FB4
	0x024D4FB4 MOV X21, X0
	0x024D4FB8 CMP W1, 0x1
	0x024D4FBC B.NE 0x24D50C0
	0x024D4FC0 MOV X0, X21
	0x024D4FC4 BL 0x3EB1AD0
	0x024D4FC8 MOV X21, X0
	0x024D4FCC ADRP X0, 0x1C29000
	0x024D4FD0 LDR X0, [X0 + 0xF78]
	0x024D4FD4 BL 0x1C16D08
	0x024D4FD8 LDR X8, [X21]
	0x024D4FDC LDR X1, [X8]
	0x024D4FE0 BL 0x1C17270
	0x024D4FE4 TBZ X0, 0x0, 0x24D5008
	0x024D4FE8 BL 0x3EB1AE0
	0x024D4FEC MOV X0, X20
	0x024D4FF0 LDP X20, X19, [X31 + 0x30]
	0x024D4FF4 LDP X22, X21, [X31 + 0x20]
	0x024D4FF8 LDP X24, X23, [X31 + 0x10]
	0x024D4FFC MOV X1, X31
	0x024D5000 LDR X30, [X31], #0x40
	0x024D5004 B 0x335DD1C
	0x024D5008 ADRP X0, 0x1C47000
	0x024D500C LDR X0, [X0 + 0xBB8]
	0x024D5010 BL 0x1C16D08
	0x024D5014 LDR X8, [X21]
	0x024D5018 LDR X1, [X8]
	0x024D501C BL 0x1C17270
	0x024D5020 TBZ X0, 0x0, 0x24D5034
	0x024D5024 LDR X19, [X21]
	0x024D5028 BL 0x3EB1AE0
	0x024D502C MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Compare X0, 0
	004 JumpIfEqual {32}
	005 Move W8, [X0+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move X8, W2
	009 Move X9, W3
	010 Add X10, X0, X8
	011 Add X11, X0, X9
	012 Move W12, [X11+32]
	013 Add X10, X10, 32
	014 Move W13, [X10]
	015 Move [X10], W12
	016 Move [X11+32], W13
	017 Compare X1, 0
	018 JumpIfEqual {32}
	019 Move W10, [X1+24]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Add X8, X1, X8
	023 Add X9, X1, X9
	024 Move W10, [X9+32]
	025 Add X8, X8, 32
	026 Move W11, [X8]
	027 Move [X8], W10
	028 Move [X9+32], W11
	029 Move X30, [X31+16]
	030 Return 
	031 Call 0x1C17F28
	032 Call 0x1C17F20

Method: System.Void IntrospectiveSort(TKey[] keys, TValue[] values, System.Int32 left, System.Int32 length, System.Collections.Generic.IComparer`1<TKey> comparer)

Disassembly:
	0x024D5030 BL 0x1C16F18
	0x024D5034 ADRP X0, 0x1C1E000
	0x024D5038 LDR X0, [X0 + 0x7D0]
	0x024D503C BL 0x1C16D08
	0x024D5040 LDR X8, [X21]
	0x024D5044 LDR X1, [X8]
	0x024D5048 BL 0x1C17270
	0x024D504C TBZ X0, 0x0, 0x24D5098
	0x024D5050 LDR X20, [X21]
	0x024D5054 BL 0x3EB1AE0
	0x024D5058 ADRP X0, 0x1C1E000
	0x024D505C LDR X0, [X0 + 0x5B0]
	0x024D5060 BL 0x1C16D08
	0x024D5064 BL 0x1C16F10
	0x024D5068 MOV X21, X0
	0x024D506C ADRP X0, 0x1C47000
	0x024D5070 LDR X0, [X0 + 0xBC0]
	0x024D5074 BL 0x1C16D08
	0x024D5078 MOV X1, X0
	0x024D507C MOV X0, X21
	0x024D5080 MOV X2, X20
	0x024D5084 MOV X3, X31
	0x024D5088 BL 0x337DF40
	0x024D508C MOV X0, X21
	0x024D5090 MOV X1, X19
	0x024D5094 BL 0x1C16DEC
	0x024D5098 MOVZ W0, 0x8
	0x024D509C BL 0x3EB1AF0
	0x024D50A0 LDR X8, [X21]
	0x024D50A4 STR X8, [X0]
	0x024D50A8 ADRP X1, 0x19DF000
	0x024D50AC ADD X1, X1, 0xE58
	0x024D50B0 MOV X2, X31
	0x024D50B4 BL 0x3EB1B00
	0x024D50B8 MOV X21, X0
	0x024D50BC BL 0x3EB1AE0
	0x024D50C0 MOV X0, X21
	0x024D50C4 BL 0x1D2C690
	0x024D50C8 BL 0x1990590
	0x024D50CC STP X29, X30, [X31 - 0x60]!
	0x024D50D0 STP X28, X27, [X31 + 0x10]
	0x024D50D4 STP X26, X25, [X31 + 0x20]
	0x024D50D8 STP X24, X23, [X31 + 0x30]
	0x024D50DC STP X22, X21, [X31 + 0x40]
	0x024D50E0 STP X20, X19, [X31 + 0x50]
	0x024D50E4 CMP W3, W4
	0x024D50E8 B.EQ 0x24D5218
	0x024D50EC MOV X22, X0
	0x024D50F0 CBZ X0, 0x24D5238
	0x024D50F4 LDR W8, [X22 + 0x18]
	0x024D50F8 MOV W21, W3

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Move [X31-64], X30
	003 Move [X31-56], X25
	004 Move [X31+16], X24
	005 Move [X31+24], X23
	006 Move [X31+32], X22
	007 Move [X31+40], X21
	008 Move [X31+48], X20
	009 Move [X31+56], X19
	010 Move X21, X1
	011 Move X22, X0
	012 Move W0, W3
	013 Move X1, X31
	014 Move X24, X5
	015 Move X19, X4
	016 Move W23, W3
	017 Move W20, W2
	018 Call IntrospectiveSortUtilities.FloorLog2PlusOne, X0
	019 Move X8, [X24+32]
	020 Move W25, W0
	021 Move W9, [X8+309]
	022 Move TEMP, X9
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {29}
	026 Move X0, X8
	027 Call 0x1C5D684
	028 Move X8, X0
	029 Move X8, [X8+192]
	030 Move X0, [X8+56]
	031 Move W8, [X0+309]
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {37}
	036 Call 0x1C5D684
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, [X24+32]
	042 Add W9, W20, W23
	043 Subtract W24, W9, 1
	044 Move W23, W25
	045 ShiftRight W23, 31
	046 And W23, W23, 0x3FFFFFFF
	047 Move W8, [X0+309]
	048 Move TEMP, X8
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {53}
	052 Call 0x1C5D684
	053 Move X8, [X0+192]
	054 Move X0, X22
	055 Move X1, X21
	056 Move W2, W20
	057 Move X6, [X8+88]
	058 Move W3, W24
	059 Move W4, W23
	060 Move X5, X19
	061 Move X20, [X31+48]
	062 Move X19, [X31+56]
	063 Move X22, [X31+32]
	064 Move X21, [X31+40]
	065 Move X24, [X31+16]
	066 Move X23, [X31+24]
	067 Move X30, [X31+64]
	068 Move X25, [X31+72]
	069 Return 

Method: System.Void IntroSort(TKey[] keys, TValue[] values, System.Int32 lo, System.Int32 hi, System.Int32 depthLimit, System.Collections.Generic.IComparer`1<TKey> comparer)

Disassembly:
	0x024D50FC CMP W8, W3
	0x024D5100 B.LS 0x24D5234
	0x024D5104 SXTW X26, W21
	0x024D5108 ADD X28, X22, X26, 0x3, LSL
	0x024D510C LDR X24, [X28 + 0x20]!
	0x024D5110 MOV W20, W4
	0x024D5114 CMP W8, W4
	0x024D5118 B.LS 0x24D5234
	0x024D511C SXTW X27, W20
	0x024D5120 ADD X29, X22, X27, 0x3, LSL
	0x024D5124 LDR X25, [X29 + 0x20]!
	0x024D5128 MOV X23, X2
	0x024D512C CBZ X2, 0x24D5238
	0x024D5130 LDR X0, [X5 + 0x20]
	0x024D5134 MOV X19, X1
	0x024D5138 LDRB W8, [X0 + 0x135]
	0x024D513C TBNZ X8, 0x0, 0x24D5144
	0x024D5140 BL 0x1C5C684
	0x024D5144 LDR X8, [X0 + 0xC0]
	0x024D5148 LDR X1, [X8]
	0x024D514C LDRB W8, [X1 + 0x135]
	0x024D5150 TBNZ X8, 0x0, 0x24D5160
	0x024D5154 MOV X0, X1
	0x024D5158 BL 0x1C5C684
	0x024D515C MOV X1, X0
	0x024D5160 LDR X8, [X23]
	0x024D5164 LDRH W9, [X8 + 0x12E]
	0x024D5168 CBZ X9, 0x24D518C
	0x024D516C LDR X10, [X8 + 0xB0]
	0x024D5170 ADD X10, X10, 0x8
	0x024D5174 LDUR X11, [X10 - 0x8]
	0x024D5178 CMP X11, X1
	0x024D517C B.EQ 0x24D519C
	0x024D5180 SUBS X9, X9, 0x1
	0x024D5184 ADD X10, X10, 0x10
	0x024D5188 B.NE 0x24D5174
	0x024D518C MOV X0, X23
	0x024D5190 MOV W2, W31
	0x024D5194 BL 0x1C5C788
	0x024D5198 B 0x24D51A8
	0x024D519C LDRSW X9, [X10]
	0x024D51A0 ADD X8, X8, X9, 0x4, LSL
	0x024D51A4 ADD X0, X8, 0x138
	0x024D51A8 LDP X8, X3, [X0]
	0x024D51AC MOV X0, X23
	0x024D51B0 MOV X1, X24
	0x024D51B4 MOV X2, X25
	0x024D51B8 BLR X8
	0x024D51BC CMP W0, 0x1
	0x024D51C0 B.LT 0x24D5218
	0x024D51C4 LDR W8, [X22 + 0x18]
	0x024D51C8 CMP W8, W21
	0x024D51CC B.LS 0x24D5234
	0x024D51D0 CMP W8, W20
	0x024D51D4 B.LS 0x24D5234
	0x024D51D8 LDR X8, [X29]
	0x024D51DC LDR X9, [X28]
	0x024D51E0 STR X8, [X28]
	0x024D51E4 STR X9, [X29]
	0x024D51E8 CBZ X19, 0x24D5238
	0x024D51EC LDR W8, [X19 + 0x18]
	0x024D51F0 CMP W8, W21
	0x024D51F4 B.LS 0x24D5234
	0x024D51F8 CMP W8, W20
	0x024D51FC B.LS 0x24D5234
	0x024D5200 ADD X8, X19, X26, 0x2, LSL
	0x024D5204 ADD X9, X19, X27, 0x2, LSL
	0x024D5208 LDR W10, [X9 + 0x20]
	0x024D520C LDR W11, [X8 + 0x20]!
	0x024D5210 STR W10, [X8]
	0x024D5214 STR W11, [X9 + 0x20]
	0x024D5218 LDP X20, X19, [X31 + 0x50]
	0x024D521C LDP X22, X21, [X31 + 0x40]
	0x024D5220 LDP X24, X23, [X31 + 0x30]
	0x024D5224 LDP X26, X25, [X31 + 0x20]
	0x024D5228 LDP X28, X27, [X31 + 0x10]
	0x024D522C LDP X29, X30, [X31], #0x60
	0x024D5230 RET
	0x024D5234 BL 0x1C16F28
	0x024D5238 BL 0x1C16F20
	0x024D523C STR X30, [X31 - 0x10]!
	0x024D5240 CMP W2, W3
	0x024D5244 B.EQ 0x24D52B0
	0x024D5248 CBZ X0, 0x24D52BC
	0x024D524C LDR W8, [X0 + 0x18]
	0x024D5250 CMP W8, W2
	0x024D5254 B.LS 0x24D52B8
	0x024D5258 CMP W8, W3
	0x024D525C B.LS 0x24D52B8
	0x024D5260 SXTW X8, W2
	0x024D5264 SXTW X9, W3
	0x024D5268 ADD X10, X0, X8, 0x3, LSL
	0x024D526C ADD X11, X0, X9, 0x3, LSL
	0x024D5270 LDR X12, [X11 + 0x20]
	0x024D5274 LDR X13, [X10 + 0x20]!
	0x024D5278 STR X12, [X10]
	0x024D527C STR X13, [X11 + 0x20]
	0x024D5280 CBZ X1, 0x24D52BC
	0x024D5284 LDR W10, [X1 + 0x18]
	0x024D5288 CMP W10, W2
	0x024D528C B.LS 0x24D52B8
	0x024D5290 CMP W10, W3
	0x024D5294 B.LS 0x24D52B8
	0x024D5298 ADD X8, X1, X8, 0x2, LSL
	0x024D529C ADD X9, X1, X9, 0x2, LSL
	0x024D52A0 LDR W10, [X9 + 0x20]
	0x024D52A4 LDR W11, [X8 + 0x20]!
	0x024D52A8 STR W10, [X8]
	0x024D52AC STR W11, [X9 + 0x20]
	0x024D52B0 LDR X30, [X31], #0x10
	0x024D52B4 RET
	0x024D52B8 BL 0x1C16F28
	0x024D52BC BL 0x1C16F20
	0x024D52C0 CMP W3, 0x2
	0x024D52C4 B.LT 0x24D5388
	0x024D52C8 STP X30, X25, [X31 - 0x40]!
	0x024D52CC STP X24, X23, [X31 + 0x10]
	0x024D52D0 STP X22, X21, [X31 + 0x20]
	0x024D52D4 STP X20, X19, [X31 + 0x30]
	0x024D52D8 MOV X21, X1
	0x024D52DC MOV X22, X0
	0x024D52E0 MOV W0, W3
	0x024D52E4 MOV X1, X31
	0x024D52E8 MOV X24, X5
	0x024D52EC MOV X19, X4
	0x024D52F0 MOV W23, W3
	0x024D52F4 MOV W20, W2
	0x024D52F8 BL 0x335DCF4
	0x024D52FC LDR X8, [X24 + 0x20]
	0x024D5300 MOV W25, W0
	0x024D5304 LDRB W9, [X8 + 0x135]
	0x024D5308 TBNZ X9, 0x0, 0x24D5318
	0x024D530C MOV X0, X8
	0x024D5310 BL 0x1C5C684
	0x024D5314 MOV X8, X0
	0x024D5318 LDR X8, [X8 + 0xC0]
	0x024D531C LDR X0, [X8 + 0x38]
	0x024D5320 LDRB W8, [X0 + 0x135]
	0x024D5324 TBNZ X8, 0x0, 0x24D532C
	0x024D5328 BL 0x1C5C684
	0x024D532C LDR W8, [X0 + 0xE0]
	0x024D5330 CBNZ W8, 0x24D5338
	0x024D5334 BL 0x1C16DFC
	0x024D5338 LDR X0, [X24 + 0x20]
	0x024D533C ADD W9, W20, W23
	0x024D5340 SUB W24, W9, 0x1
	0x024D5344 UBFM W23, W25, 0x1F, 0x1E
	0x024D5348 LDRB W8, [X0 + 0x135]
	0x024D534C TBNZ X8, 0x0, 0x24D5354
	0x024D5350 BL 0x1C5C684
	0x024D5354 LDR X8, [X0 + 0xC0]
	0x024D5358 MOV X0, X22
	0x024D535C MOV X1, X21
	0x024D5360 MOV W2, W20
	0x024D5364 LDR X6, [X8 + 0x58]
	0x024D5368 MOV W3, W24
	0x024D536C MOV W4, W23
	0x024D5370 MOV X5, X19
	0x024D5374 LDP X20, X19, [X31 + 0x30]
	0x024D5378 LDP X22, X21, [X31 + 0x20]
	0x024D537C LDP X24, X23, [X31 + 0x10]
	0x024D5380 LDP X30, X25, [X31], #0x40
	0x024D5384 B 0x24D538C
	0x024D5388 RET
	0x024D538C STR X30, [X31 - 0x50]!
	0x024D5390 STP X26, X25, [X31 + 0x10]
	0x024D5394 STP X24, X23, [X31 + 0x20]
	0x024D5398 STP X22, X21, [X31 + 0x30]
	0x024D539C STP X20, X19, [X31 + 0x40]
	0x024D53A0 CMP W3, W2
	0x024D53A4 B.LE 0x24D5500
	0x024D53A8 MOV X24, X6
	0x024D53AC MOV X19, X5
	0x024D53B0 MOV W20, W3
	0x024D53B4 MOV W23, W2
	0x024D53B8 MOV X21, X1
	0x024D53BC MOV X22, X0
	0x024D53C0 SUB W25, W4, 0x1
	0x024D53C4 SUB W8, W20, W23
	0x024D53C8 ADD W9, W8, 0x1
	0x024D53CC CMP W9, 0x10
	0x024D53D0 B.LE 0x24D5490
	0x024D53D4 ADDS W31, W25, 0x1
	0x024D53D8 B.EQ 0x24D5518
	0x024D53DC LDR X0, [X24 + 0x20]
	0x024D53E0 LDRB W8, [X0 + 0x135]
	0x024D53E4 TBNZ X8, 0x0, 0x24D53EC
	0x024D53E8 BL 0x1C5C684
	0x024D53EC LDR X8, [X0 + 0xC0]
	0x024D53F0 LDR X0, [X8 + 0x38]
	0x024D53F4 LDRB W8, [X0 + 0x135]
	0x024D53F8 TBNZ X8, 0x0, 0x24D5400
	0x024D53FC BL 0x1C5C684
	0x024D5400 LDR W8, [X0 + 0xE0]
	0x024D5404 CBNZ W8, 0x24D540C
	0x024D5408 BL 0x1C16DFC
	0x024D540C LDR X0, [X24 + 0x20]
	0x024D5410 LDRB W8, [X0 + 0x135]
	0x024D5414 TBNZ X8, 0x0, 0x24D541C
	0x024D5418 BL 0x1C5C684
	0x024D541C LDR X8, [X0 + 0xC0]
	0x024D5420 MOV X0, X22
	0x024D5424 MOV X1, X21
	0x024D5428 MOV W2, W23
	0x024D542C LDR X5, [X8 + 0x78]
	0x024D5430 MOV W3, W20
	0x024D5434 MOV X4, X19
	0x024D5438 BL 0x24D56D8
	0x024D543C LDR X8, [X24 + 0x20]
	0x024D5440 MOV W26, W0
	0x024D5444 LDRB W9, [X8 + 0x135]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move X24, X6
	012 Move X19, X5
	013 Move W20, W3
	014 Move W23, W2
	015 Move X21, X1
	016 Move X22, X0
	017 Subtract W25, W4, 1
	018 Subtract W8, W20, W23
	019 Add W9, W8, 1
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Add W31, W25, 1
	022 Move X0, [X24+32]
	023 Move W8, [X0+309]
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {29}
	028 Call 0x1C5D684
	029 Move X8, [X0+192]
	030 Move X0, [X8+56]
	031 Move W8, [X0+309]
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {37}
	036 Call 0x1C5D684
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, [X24+32]
	042 Move W8, [X0+309]
	043 Move TEMP, X8
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {48}
	047 Call 0x1C5D684
	048 Move X8, [X0+192]
	049 Move X0, X22
	050 Move X1, X21
	051 Move W2, W23
	052 Move X5, [X8+120]
	053 Move W3, W20
	054 Move X4, X19
	055 Call 0x24D5448, X0, X1, X2, X3, X4
	056 Move X8, [X24+32]
	057 Move W26, W0
	058 Move W9, [X8+309]
	059 Move TEMP, X9
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfEqual {66}
	063 Move X0, X8
	064 Call 0x1C5D684
	065 Move X8, X0
	066 Move X8, [X8+192]
	067 Add W2, W26, 1
	068 Move X0, X22
	069 Move X1, X21
	070 Move X6, [X8+88]
	071 Move W3, W20
	072 Move W4, W25
	073 Move X5, X19
	074 Call 0x24D50FC, X0, X1, X2, X3, X4, X5
	075 Subtract W20, W26, 1
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Subtract W25, W25, 1
	078 Compare W8, 0
	079 JumpIfEqual {114}
	080 NotImplemented "Instruction CMP not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X0, [X24+32]
	083 Move W8, [X0+309]
	084 Move TEMP, X8
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfEqual {89}
	088 Call 0x1C5D684
	089 Move X8, [X0+192]
	090 Move X0, [X8+56]
	091 Move W8, [X0+309]
	092 Move TEMP, X8
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfEqual {97}
	096 Call 0x1C5D684
	097 Move W8, [X0+224]
	098 Compare W8, 0
	099 JumpIfNotEqual {101}
	100 Call 0x1C17DFC
	101 Move X0, [X24+32]
	102 Move W8, [X0+309]
	103 Move TEMP, X8
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfEqual {108}
	107 Call 0x1C5D684
	108 Move X8, [X0+192]
	109 Move X0, X22
	110 Move X1, X21
	111 Move X2, X19
	112 Move X5, [X8+96]
	113 Move W3, W23
	114 Move X20, [X31+64]
	115 Move X19, [X31+72]
	116 Move X22, [X31+48]
	117 Move X21, [X31+56]
	118 Move X24, [X31+32]
	119 Move X23, [X31+40]
	120 Move X26, [X31+16]
	121 Move X25, [X31+24]
	122 Move X30, [X31+80]
	123 Return 
	124 Move X0, [X24+32]
	125 Move W8, [X0+309]
	126 Move TEMP, X8
	127 And TEMP, TEMP, 1
	128 Compare TEMP, 1
	129 JumpIfEqual {131}
	130 Call 0x1C5D684
	131 Move X8, [X0+192]
	132 Move X0, [X8+56]
	133 Move W8, [X0+309]
	134 Move TEMP, X8
	135 And TEMP, TEMP, 1
	136 Compare TEMP, 1
	137 JumpIfEqual {139}
	138 Call 0x1C5D684
	139 Move W8, [X0+224]
	140 Compare W8, 0
	141 JumpIfNotEqual {143}
	142 Call 0x1C17DFC
	143 Move X0, [X24+32]
	144 Move W8, [X0+309]
	145 Move TEMP, X8
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfEqual {150}
	149 Call 0x1C5D684
	150 Move X8, [X0+192]
	151 Move X0, X22
	152 Move X1, X21
	153 Move W2, W23
	154 Move X5, [X8+112]
	155 Move W3, W20
	156 Move X4, X19
	157 Move X20, [X31+64]
	158 Move X19, [X31+72]
	159 Move X22, [X31+48]
	160 Move X21, [X31+56]
	161 Move X24, [X31+32]
	162 Move X23, [X31+40]
	163 Move X26, [X31+16]
	164 Move X25, [X31+24]
	165 Move X30, [X31+80]
	166 Call 0x24D57B4, X0, X1, X2, X3, X4
	167 Return 
	168 Move X0, [X24+32]
	169 Move W8, [X0+309]
	170 Move TEMP, X8
	171 And TEMP, TEMP, 1
	172 Compare TEMP, 1
	173 JumpIfEqual {175}
	174 Call 0x1C5D684
	175 Move X8, [X0+192]
	176 Move X0, [X8+56]
	177 Move W8, [X0+309]
	178 Move TEMP, X8
	179 And TEMP, TEMP, 1
	180 Compare TEMP, 1
	181 JumpIfEqual {183}
	182 Call 0x1C5D684
	183 Move W8, [X0+224]
	184 Compare W8, 0
	185 JumpIfNotEqual {187}
	186 Call 0x1C17DFC
	187 Move X0, [X24+32]
	188 Subtract W25, W20, 1
	189 Move W8, [X0+309]
	190 Move TEMP, X8
	191 And TEMP, TEMP, 1
	192 Compare TEMP, 1
	193 JumpIfEqual {195}
	194 Call 0x1C5D684
	195 Move X8, [X0+192]
	196 Move X0, X22
	197 Move X1, X21
	198 Move X2, X19
	199 Move X5, [X8+96]
	200 Move W3, W23
	201 Move W4, W25
	202 Call 0x24D4E3C, X0, X1, X2, X3, X4
	203 Move X0, [X24+32]
	204 Move W8, [X0+309]
	205 Move TEMP, X8
	206 And TEMP, TEMP, 1
	207 Compare TEMP, 1
	208 JumpIfEqual {210}
	209 Call 0x1C5D684
	210 Move X8, [X0+192]
	211 Move X0, X22
	212 Move X1, X21
	213 Move X2, X19
	214 Move X5, [X8+96]
	215 Move W3, W23
	216 Move W4, W20
	217 Call 0x24D4E3C, X0, X1, X2, X3, X4
	218 Move X0, [X24+32]
	219 Move W8, [X0+309]
	220 Move TEMP, X8
	221 And TEMP, TEMP, 1
	222 Compare TEMP, 1
	223 JumpIfEqual {225}
	224 Call 0x1C5D684
	225 Move X8, [X0+192]
	226 Move X0, X22
	227 Move X1, X21
	228 Move X2, X19
	229 Move X5, [X8+96]
	230 Move W3, W25
	231 Move W4, W20
	232 Move X20, [X31+64]
	233 Move X19, [X31+72]
	234 Move X22, [X31+48]
	235 Move X21, [X31+56]
	236 Move X24, [X31+32]
	237 Move X23, [X31+40]
	238 Move X26, [X31+16]
	239 Move X25, [X31+24]
	240 Move X30, [X31+80]
	241 Call 0x24D4E3C, X0, X1, X2, X3, X4
	242 Return 
	243 Move X0, [X24+32]
	244 Move W8, [X0+309]
	245 Move TEMP, X8
	246 And TEMP, TEMP, 1
	247 Compare TEMP, 1
	248 JumpIfEqual {250}
	249 Call 0x1C5D684
	250 Move X8, [X0+192]
	251 Move X0, [X8+56]
	252 Move W8, [X0+309]
	253 Move TEMP, X8
	254 And TEMP, TEMP, 1
	255 Compare TEMP, 1
	256 JumpIfEqual {258}
	257 Call 0x1C5D684
	258 Move W8, [X0+224]
	259 Compare W8, 0
	260 JumpIfNotEqual {262}
	261 Call 0x1C17DFC
	262 Move X0, [X24+32]
	263 Move W8, [X0+309]
	264 Move TEMP, X8
	265 And TEMP, TEMP, 1
	266 Compare TEMP, 1
	267 JumpIfEqual {269}
	268 Call 0x1C5D684
	269 Move X8, [X0+192]
	270 Move X0, X22
	271 Move X1, X21
	272 Move W2, W23
	273 Move X5, [X8+104]
	274 Move W3, W20
	275 Move X4, X19
	276 Move X20, [X31+64]
	277 Move X19, [X31+72]
	278 Move X22, [X31+48]
	279 Move X21, [X31+56]
	280 Move X24, [X31+32]
	281 Move X23, [X31+40]
	282 Move X26, [X31+16]
	283 Move X25, [X31+24]
	284 Move X30, [X31+80]
	285 Call 0x24D5BE0, X0, X1, X2, X3, X4
	286 Return 

Method: System.Int32 PickPivotAndPartition(TKey[] keys, TValue[] values, System.Int32 lo, System.Int32 hi, System.Collections.Generic.IComparer`1<TKey> comparer)

Disassembly:
	0x024D5448 TBNZ X9, 0x0, 0x24D5458
	0x024D544C MOV X0, X8
	0x024D5450 BL 0x1C5C684
	0x024D5454 MOV X8, X0
	0x024D5458 LDR X8, [X8 + 0xC0]
	0x024D545C ADD W2, W26, 0x1
	0x024D5460 MOV X0, X22
	0x024D5464 MOV X1, X21
	0x024D5468 LDR X6, [X8 + 0x58]
	0x024D546C MOV W3, W20
	0x024D5470 MOV W4, W25
	0x024D5474 MOV X5, X19
	0x024D5478 BL 0x24D538C
	0x024D547C SUB W20, W26, 0x1
	0x024D5480 CMP W20, W23
	0x024D5484 SUB W25, W25, 0x1
	0x024D5488 B.GT 0x24D53C4
	0x024D548C B 0x24D5500
	0x024D5490 CBZ W8, 0x24D5500
	0x024D5494 CMP W8, 0x2
	0x024D5498 B.EQ 0x24D558C
	0x024D549C CMP W8, 0x1
	0x024D54A0 B.NE 0x24D5664
	0x024D54A4 LDR X0, [X24 + 0x20]
	0x024D54A8 LDRB W8, [X0 + 0x135]
	0x024D54AC TBNZ X8, 0x0, 0x24D54B4
	0x024D54B0 BL 0x1C5C684
	0x024D54B4 LDR X8, [X0 + 0xC0]
	0x024D54B8 LDR X0, [X8 + 0x38]
	0x024D54BC LDRB W8, [X0 + 0x135]
	0x024D54C0 TBNZ X8, 0x0, 0x24D54C8
	0x024D54C4 BL 0x1C5C684
	0x024D54C8 LDR W8, [X0 + 0xE0]
	0x024D54CC CBNZ W8, 0x24D54D4
	0x024D54D0 BL 0x1C16DFC
	0x024D54D4 LDR X0, [X24 + 0x20]
	0x024D54D8 LDRB W8, [X0 + 0x135]
	0x024D54DC TBNZ X8, 0x0, 0x24D54E4
	0x024D54E0 BL 0x1C5C684
	0x024D54E4 LDR X8, [X0 + 0xC0]
	0x024D54E8 MOV X0, X22
	0x024D54EC MOV X1, X21
	0x024D54F0 MOV X2, X19
	0x024D54F4 LDR X5, [X8 + 0x60]
	0x024D54F8 MOV W3, W23
	0x024D54FC B 0x24D5648
	0x024D5500 LDP X20, X19, [X31 + 0x40]
	0x024D5504 LDP X22, X21, [X31 + 0x30]
	0x024D5508 LDP X24, X23, [X31 + 0x20]
	0x024D550C LDP X26, X25, [X31 + 0x10]
	0x024D5510 LDR X30, [X31], #0x50
	0x024D5514 RET
	0x024D5518 LDR X0, [X24 + 0x20]
	0x024D551C LDRB W8, [X0 + 0x135]
	0x024D5520 TBNZ X8, 0x0, 0x24D5528
	0x024D5524 BL 0x1C5C684
	0x024D5528 LDR X8, [X0 + 0xC0]
	0x024D552C LDR X0, [X8 + 0x38]
	0x024D5530 LDRB W8, [X0 + 0x135]
	0x024D5534 TBNZ X8, 0x0, 0x24D553C
	0x024D5538 BL 0x1C5C684
	0x024D553C LDR W8, [X0 + 0xE0]
	0x024D5540 CBNZ W8, 0x24D5548
	0x024D5544 BL 0x1C16DFC
	0x024D5548 LDR X0, [X24 + 0x20]
	0x024D554C LDRB W8, [X0 + 0x135]
	0x024D5550 TBNZ X8, 0x0, 0x24D5558
	0x024D5554 BL 0x1C5C684
	0x024D5558 LDR X8, [X0 + 0xC0]
	0x024D555C MOV X0, X22
	0x024D5560 MOV X1, X21
	0x024D5564 MOV W2, W23
	0x024D5568 LDR X5, [X8 + 0x70]
	0x024D556C MOV W3, W20
	0x024D5570 MOV X4, X19
	0x024D5574 LDP X20, X19, [X31 + 0x40]
	0x024D5578 LDP X22, X21, [X31 + 0x30]
	0x024D557C LDP X24, X23, [X31 + 0x20]
	0x024D5580 LDP X26, X25, [X31 + 0x10]
	0x024D5584 LDR X30, [X31], #0x50
	0x024D5588 B 0x24D5A44
	0x024D558C LDR X0, [X24 + 0x20]
	0x024D5590 LDRB W8, [X0 + 0x135]
	0x024D5594 TBNZ X8, 0x0, 0x24D559C
	0x024D5598 BL 0x1C5C684
	0x024D559C LDR X8, [X0 + 0xC0]
	0x024D55A0 LDR X0, [X8 + 0x38]
	0x024D55A4 LDRB W8, [X0 + 0x135]
	0x024D55A8 TBNZ X8, 0x0, 0x24D55B0
	0x024D55AC BL 0x1C5C684
	0x024D55B0 LDR W8, [X0 + 0xE0]
	0x024D55B4 CBNZ W8, 0x24D55BC
	0x024D55B8 BL 0x1C16DFC
	0x024D55BC LDR X0, [X24 + 0x20]
	0x024D55C0 SUB W25, W20, 0x1
	0x024D55C4 LDRB W8, [X0 + 0x135]
	0x024D55C8 TBNZ X8, 0x0, 0x24D55D0
	0x024D55CC BL 0x1C5C684
	0x024D55D0 LDR X8, [X0 + 0xC0]
	0x024D55D4 MOV X0, X22
	0x024D55D8 MOV X1, X21
	0x024D55DC MOV X2, X19
	0x024D55E0 LDR X5, [X8 + 0x60]
	0x024D55E4 MOV W3, W23
	0x024D55E8 MOV W4, W25
	0x024D55EC BL 0x24D50CC
	0x024D55F0 LDR X0, [X24 + 0x20]
	0x024D55F4 LDRB W8, [X0 + 0x135]
	0x024D55F8 TBNZ X8, 0x0, 0x24D5600
	0x024D55FC BL 0x1C5C684
	0x024D5600 LDR X8, [X0 + 0xC0]
	0x024D5604 MOV X0, X22
	0x024D5608 MOV X1, X21
	0x024D560C MOV X2, X19
	0x024D5610 LDR X5, [X8 + 0x60]
	0x024D5614 MOV W3, W23
	0x024D5618 MOV W4, W20
	0x024D561C BL 0x24D50CC
	0x024D5620 LDR X0, [X24 + 0x20]
	0x024D5624 LDRB W8, [X0 + 0x135]
	0x024D5628 TBNZ X8, 0x0, 0x24D5630
	0x024D562C BL 0x1C5C684
	0x024D5630 LDR X8, [X0 + 0xC0]
	0x024D5634 MOV X0, X22
	0x024D5638 MOV X1, X21
	0x024D563C MOV X2, X19
	0x024D5640 LDR X5, [X8 + 0x60]
	0x024D5644 MOV W3, W25
	0x024D5648 MOV W4, W20
	0x024D564C LDP X20, X19, [X31 + 0x40]
	0x024D5650 LDP X22, X21, [X31 + 0x30]
	0x024D5654 LDP X24, X23, [X31 + 0x20]
	0x024D5658 LDP X26, X25, [X31 + 0x10]
	0x024D565C LDR X30, [X31], #0x50
	0x024D5660 B 0x24D50CC
	0x024D5664 LDR X0, [X24 + 0x20]
	0x024D5668 LDRB W8, [X0 + 0x135]
	0x024D566C TBNZ X8, 0x0, 0x24D5674
	0x024D5670 BL 0x1C5C684
	0x024D5674 LDR X8, [X0 + 0xC0]
	0x024D5678 LDR X0, [X8 + 0x38]
	0x024D567C LDRB W8, [X0 + 0x135]
	0x024D5680 TBNZ X8, 0x0, 0x24D5688
	0x024D5684 BL 0x1C5C684
	0x024D5688 LDR W8, [X0 + 0xE0]
	0x024D568C CBNZ W8, 0x24D5694
	0x024D5690 BL 0x1C16DFC
	0x024D5694 LDR X0, [X24 + 0x20]
	0x024D5698 LDRB W8, [X0 + 0x135]
	0x024D569C TBNZ X8, 0x0, 0x24D56A4
	0x024D56A0 BL 0x1C5C684
	0x024D56A4 LDR X8, [X0 + 0xC0]
	0x024D56A8 MOV X0, X22
	0x024D56AC MOV X1, X21
	0x024D56B0 MOV W2, W23
	0x024D56B4 LDR X5, [X8 + 0x68]
	0x024D56B8 MOV W3, W20
	0x024D56BC MOV X4, X19
	0x024D56C0 LDP X20, X19, [X31 + 0x40]
	0x024D56C4 LDP X22, X21, [X31 + 0x30]
	0x024D56C8 LDP X24, X23, [X31 + 0x20]
	0x024D56CC LDP X26, X25, [X31 + 0x10]
	0x024D56D0 LDR X30, [X31], #0x50
	0x024D56D4 B 0x24D5E74
	0x024D56D8 STP X30, X27, [X31 - 0x50]!
	0x024D56DC STP X26, X25, [X31 + 0x10]
	0x024D56E0 STP X24, X23, [X31 + 0x20]
	0x024D56E4 STP X22, X21, [X31 + 0x30]
	0x024D56E8 STP X20, X19, [X31 + 0x40]
	0x024D56EC MOV X21, X0
	0x024D56F0 LDR X0, [X5 + 0x20]
	0x024D56F4 SUB W9, W3, W2
	0x024D56F8 CMP W9, 0x0
	0x024D56FC MOV X22, X5
	0x024D5700 LDRB W8, [X0 + 0x135]
	0x024D5704 MOV X23, X4
	0x024D5708 MOV W24, W3
	0x024D570C MOV W19, W2
	0x024D5710 MOV X20, X1
	0x024D5714 CINC W25, W9, LT
	0x024D5718 TBNZ X8, 0x0, 0x24D5720
	0x024D571C BL 0x1C5C684
	0x024D5720 LDR X8, [X0 + 0xC0]
	0x024D5724 LDR X0, [X8 + 0x38]
	0x024D5728 LDRB W8, [X0 + 0x135]
	0x024D572C TBNZ X8, 0x0, 0x24D5734
	0x024D5730 BL 0x1C5C684
	0x024D5734 LDR W8, [X0 + 0xE0]
	0x024D5738 ADD W26, W19, W25, 0x1, ASR
	0x024D573C CBNZ W8, 0x24D5744
	0x024D5740 BL 0x1C16DFC
	0x024D5744 LDR X0, [X22 + 0x20]
	0x024D5748 LDRB W8, [X0 + 0x135]
	0x024D574C TBNZ X8, 0x0, 0x24D5754
	0x024D5750 BL 0x1C5C684
	0x024D5754 LDR X8, [X0 + 0xC0]
	0x024D5758 MOV X0, X21
	0x024D575C MOV X1, X20
	0x024D5760 MOV X2, X23
	0x024D5764 LDR X5, [X8 + 0x60]
	0x024D5768 MOV W3, W19
	0x024D576C MOV W4, W26
	0x024D5770 BL 0x24D50CC
	0x024D5774 LDR X0, [X22 + 0x20]
	0x024D5778 LDRB W8, [X0 + 0x135]
	0x024D577C TBNZ X8, 0x0, 0x24D5784
	0x024D5780 BL 0x1C5C684
	0x024D5784 LDR X8, [X0 + 0xC0]
	0x024D5788 MOV X0, X21
	0x024D578C MOV X1, X20
	0x024D5790 MOV X2, X23
	0x024D5794 LDR X5, [X8 + 0x60]
	0x024D5798 MOV W3, W19
	0x024D579C MOV W4, W24
	0x024D57A0 BL 0x24D50CC
	0x024D57A4 LDR X0, [X22 + 0x20]
	0x024D57A8 LDRB W8, [X0 + 0x135]
	0x024D57AC TBNZ X8, 0x0, 0x24D57B4
	0x024D57B0 BL 0x1C5C684

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X21, X0
	012 Move X0, [X5+32]
	013 Subtract W9, W3, W2
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X22, X5
	016 Move W8, [X0+309]
	017 Move X23, X4
	018 Move W24, W3
	019 Move W19, W2
	020 Move X20, X1
	021 NotImplemented "Instruction CINC not yet implemented."
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {27}
	026 Call 0x1C5D684
	027 Move X8, [X0+192]
	028 Move X0, [X8+56]
	029 Move W8, [X0+309]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {35}
	034 Call 0x1C5D684
	035 Move W8, [X0+224]
	036 Add W26, W19, W25
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, [X22+32]
	041 Move W8, [X0+309]
	042 Move TEMP, X8
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {47}
	046 Call 0x1C5D684
	047 Move X8, [X0+192]
	048 Move X0, X21
	049 Move X1, X20
	050 Move X2, X23
	051 Move X5, [X8+96]
	052 Move W3, W19
	053 Move W4, W26
	054 Call 0x24D4E3C, X0, X1, X2, X3, X4
	055 Move X0, [X22+32]
	056 Move W8, [X0+309]
	057 Move TEMP, X8
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfEqual {62}
	061 Call 0x1C5D684
	062 Move X8, [X0+192]
	063 Move X0, X21
	064 Move X1, X20
	065 Move X2, X23
	066 Move X5, [X8+96]
	067 Move W3, W19
	068 Move W4, W24
	069 Call 0x24D4E3C, X0, X1, X2, X3, X4
	070 Move X0, [X22+32]
	071 Move W8, [X0+309]
	072 Move TEMP, X8
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfEqual {77}
	076 Call 0x1C5D684
	077 Move X8, [X0+192]
	078 Move X0, X21
	079 Move X1, X20
	080 Move X2, X23
	081 Move X5, [X8+96]
	082 Move W3, W26
	083 Move W4, W24
	084 Call 0x24D4E3C, X0, X1, X2, X3, X4
	085 Compare X21, 0
	086 JumpIfEqual {280}
	087 Move W8, [X21+24]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X0, [X22+32]
	090 Add X8, X21, W26
	091 Move W25, [X8+32]
	092 Subtract W24, W24, 1
	093 Move W9, [X0+309]
	094 Move TEMP, X9
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfEqual {99}
	098 Call 0x1C5D684
	099 Move X0, X21
	100 Move X1, X20
	101 Move W2, W26
	102 Move W3, W24
	103 Call 0x24D4FAC, X0, X1, X2, X3
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move W26, W24
	106 Move W8, [X21+24]
	107 Add W19, W19, 1
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Compare X23, 0
	110 JumpIfEqual {280}
	111 Move X0, [X22+32]
	112 Add X8, X21, W19
	113 Move W27, [X8+32]
	114 Move W9, [X0+309]
	115 Move TEMP, X9
	116 And TEMP, TEMP, 1
	117 Compare TEMP, 1
	118 JumpIfEqual {120}
	119 Call 0x1C5D684
	120 Move X8, [X0+192]
	121 Move X1, [X8]
	122 Move W8, [X1+309]
	123 Move TEMP, X8
	124 And TEMP, TEMP, 1
	125 Compare TEMP, 1
	126 JumpIfEqual {130}
	127 Move X0, X1
	128 Call 0x1C5D684
	129 Move X1, X0
	130 Move X8, [X23]
	131 NotImplemented "Instruction LDRH not yet implemented."
	132 Compare X9, 0
	133 JumpIfEqual {140}
	134 Move X10, [X8+176]
	135 Add X10, X10, 8
	136 NotImplemented "Instruction LDUR not yet implemented."
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Subtract X9, X9, 1
	139 Add X10, X10, 16
	140 Move X0, X23
	141 Move W2, W31
	142 Call 0x1C5D788
	143 NotImplemented "Instruction LDRSW not yet implemented."
	144 Add X8, X8, X9
	145 Add X0, X8, 312
	146 Move X8, [X0]
	147 Move X3, [X0+8]
	148 Move X0, X23
	149 Move W1, W27
	150 Move W2, W25
	151 NotImplemented "Instruction BLR not yet implemented."
	152 Move TEMP, X0
	153 And TEMP, TEMP, -2147483648
	154 Compare TEMP, -2147483648
	155 JumpIfEqual {106}
	156 Move W8, [X21+24]
	157 Subtract W26, W26, 1
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Move X0, [X22+32]
	160 Add X8, X21, W26
	161 Move W27, [X8+32]
	162 Move W9, [X0+309]
	163 Move TEMP, X9
	164 And TEMP, TEMP, 1
	165 Compare TEMP, 1
	166 JumpIfEqual {168}
	167 Call 0x1C5D684
	168 Move X8, [X0+192]
	169 Move X1, [X8]
	170 Move W8, [X1+309]
	171 Move TEMP, X8
	172 And TEMP, TEMP, 1
	173 Compare TEMP, 1
	174 JumpIfEqual {178}
	175 Move X0, X1
	176 Call 0x1C5D684
	177 Move X1, X0
	178 Move X8, [X23]
	179 NotImplemented "Instruction LDRH not yet implemented."
	180 Compare X9, 0
	181 JumpIfEqual {188}
	182 Move X10, [X8+176]
	183 Add X10, X10, 8
	184 NotImplemented "Instruction LDUR not yet implemented."
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Subtract X9, X9, 1
	187 Add X10, X10, 16
	188 Move X0, X23
	189 Move W2, W31
	190 Call 0x1C5D788
	191 NotImplemented "Instruction LDRSW not yet implemented."
	192 Add X8, X8, X9
	193 Add X0, X8, 312
	194 Move X8, [X0]
	195 Move X3, [X0+8]
	196 Move X0, X23
	197 Move W1, W25
	198 Move W2, W27
	199 NotImplemented "Instruction BLR not yet implemented."
	200 Move TEMP, X0
	201 And TEMP, TEMP, -2147483648
	202 Compare TEMP, -2147483648
	203 JumpIfEqual {156}
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Move X0, [X22+32]
	206 Move W8, [X0+309]
	207 Move TEMP, X8
	208 And TEMP, TEMP, 1
	209 Compare TEMP, 1
	210 JumpIfEqual {212}
	211 Call 0x1C5D684
	212 Move X8, [X0+192]
	213 Move X0, [X8+56]
	214 Move W8, [X0+309]
	215 Move TEMP, X8
	216 And TEMP, TEMP, 1
	217 Compare TEMP, 1
	218 JumpIfEqual {220}
	219 Call 0x1C5D684
	220 Move W8, [X0+224]
	221 Compare W8, 0
	222 JumpIfNotEqual {224}
	223 Call 0x1C17DFC
	224 Move X0, [X22+32]
	225 Move W8, [X0+309]
	226 Move TEMP, X8
	227 And TEMP, TEMP, 1
	228 Compare TEMP, 1
	229 JumpIfEqual {231}
	230 Call 0x1C5D684
	231 Move X0, X21
	232 Move X1, X20
	233 Move W2, W19
	234 Move W3, W26
	235 Call 0x24D4FAC, X0, X1, X2, X3
	236 Move X0, [X22+32]
	237 Move W8, [X0+309]
	238 Move TEMP, X8
	239 And TEMP, TEMP, 1
	240 Compare TEMP, 1
	241 JumpIfEqual {243}
	242 Call 0x1C5D684
	243 Move X8, [X0+192]
	244 Move X0, [X8+56]
	245 Move W8, [X0+309]
	246 Move TEMP, X8
	247 And TEMP, TEMP, 1
	248 Compare TEMP, 1
	249 JumpIfEqual {251}
	250 Call 0x1C5D684
	251 Move W8, [X0+224]
	252 Compare W8, 0
	253 JumpIfNotEqual {255}
	254 Call 0x1C17DFC
	255 Move X0, [X22+32]
	256 Move W8, [X0+309]
	257 Move TEMP, X8
	258 And TEMP, TEMP, 1
	259 Compare TEMP, 1
	260 JumpIfEqual {262}
	261 Call 0x1C5D684
	262 Move X0, X21
	263 Move X1, X20
	264 Move W2, W19
	265 Move W3, W24
	266 Call 0x24D4FAC, X0, X1, X2, X3
	267 Move W0, W19
	268 Move X20, [X31+64]
	269 Move X19, [X31+72]
	270 Move X22, [X31+48]
	271 Move X21, [X31+56]
	272 Move X24, [X31+32]
	273 Move X23, [X31+40]
	274 Move X26, [X31+16]
	275 Move X25, [X31+24]
	276 Move X30, [X31+80]
	277 Move X27, [X31+88]
	278 Return X0
	279 Call 0x1C17F28
	280 Call 0x1C17F20

Method: System.Void Heapsort(TKey[] keys, TValue[] values, System.Int32 lo, System.Int32 hi, System.Collections.Generic.IComparer`1<TKey> comparer)

Disassembly:
	0x024D57B4 LDR X8, [X0 + 0xC0]
	0x024D57B8 MOV X0, X21
	0x024D57BC MOV X1, X20
	0x024D57C0 MOV X2, X23
	0x024D57C4 LDR X5, [X8 + 0x60]
	0x024D57C8 MOV W3, W26
	0x024D57CC MOV W4, W24
	0x024D57D0 BL 0x24D50CC
	0x024D57D4 CBZ X21, 0x24D5A40
	0x024D57D8 LDR W8, [X21 + 0x18]
	0x024D57DC CMP W26, W8
	0x024D57E0 B.CS 0x24D5A3C
	0x024D57E4 LDR X0, [X22 + 0x20]
	0x024D57E8 ADD X8, X21, W26, 0x3, SXTW
	0x024D57EC LDR X25, [X8 + 0x20]
	0x024D57F0 SUB W24, W24, 0x1
	0x024D57F4 LDRB W9, [X0 + 0x135]
	0x024D57F8 TBNZ X9, 0x0, 0x24D5800
	0x024D57FC BL 0x1C5C684
	0x024D5800 MOV X0, X21
	0x024D5804 MOV X1, X20
	0x024D5808 MOV W2, W26
	0x024D580C MOV W3, W24
	0x024D5810 BL 0x24D523C
	0x024D5814 CMP W24, W19
	0x024D5818 B.LE 0x24D59CC
	0x024D581C MOV W26, W24
	0x024D5820 LDR W8, [X21 + 0x18]
	0x024D5824 ADD W19, W19, 0x1
	0x024D5828 CMP W19, W8
	0x024D582C B.CS 0x24D5A3C
	0x024D5830 CBZ X23, 0x24D5A40
	0x024D5834 LDR X0, [X22 + 0x20]
	0x024D5838 ADD X8, X21, W19, 0x3, SXTW
	0x024D583C LDR X27, [X8 + 0x20]
	0x024D5840 LDRB W9, [X0 + 0x135]
	0x024D5844 TBNZ X9, 0x0, 0x24D584C
	0x024D5848 BL 0x1C5C684
	0x024D584C LDR X8, [X0 + 0xC0]
	0x024D5850 LDR X1, [X8]
	0x024D5854 LDRB W8, [X1 + 0x135]
	0x024D5858 TBNZ X8, 0x0, 0x24D5868
	0x024D585C MOV X0, X1
	0x024D5860 BL 0x1C5C684
	0x024D5864 MOV X1, X0
	0x024D5868 LDR X8, [X23]
	0x024D586C LDRH W9, [X8 + 0x12E]
	0x024D5870 CBZ X9, 0x24D5894
	0x024D5874 LDR X10, [X8 + 0xB0]
	0x024D5878 ADD X10, X10, 0x8
	0x024D587C LDUR X11, [X10 - 0x8]
	0x024D5880 CMP X11, X1
	0x024D5884 B.EQ 0x24D58A4
	0x024D5888 SUBS X9, X9, 0x1
	0x024D588C ADD X10, X10, 0x10
	0x024D5890 B.NE 0x24D587C
	0x024D5894 MOV X0, X23
	0x024D5898 MOV W2, W31
	0x024D589C BL 0x1C5C788
	0x024D58A0 B 0x24D58B0
	0x024D58A4 LDRSW X9, [X10]
	0x024D58A8 ADD X8, X8, X9, 0x4, LSL
	0x024D58AC ADD X0, X8, 0x138
	0x024D58B0 LDP X8, X3, [X0]
	0x024D58B4 MOV X0, X23
	0x024D58B8 MOV X1, X27
	0x024D58BC MOV X2, X25
	0x024D58C0 BLR X8
	0x024D58C4 TBNZ X0, 0x1F, 0x24D5820
	0x024D58C8 LDR W8, [X21 + 0x18]
	0x024D58CC SUB W26, W26, 0x1
	0x024D58D0 CMP W26, W8
	0x024D58D4 B.CS 0x24D5A3C
	0x024D58D8 LDR X0, [X22 + 0x20]
	0x024D58DC ADD X8, X21, W26, 0x3, SXTW
	0x024D58E0 LDR X27, [X8 + 0x20]
	0x024D58E4 LDRB W9, [X0 + 0x135]
	0x024D58E8 TBNZ X9, 0x0, 0x24D58F0
	0x024D58EC BL 0x1C5C684
	0x024D58F0 LDR X8, [X0 + 0xC0]
	0x024D58F4 LDR X1, [X8]
	0x024D58F8 LDRB W8, [X1 + 0x135]
	0x024D58FC TBNZ X8, 0x0, 0x24D590C
	0x024D5900 MOV X0, X1
	0x024D5904 BL 0x1C5C684
	0x024D5908 MOV X1, X0
	0x024D590C LDR X8, [X23]
	0x024D5910 LDRH W9, [X8 + 0x12E]
	0x024D5914 CBZ X9, 0x24D5938
	0x024D5918 LDR X10, [X8 + 0xB0]
	0x024D591C ADD X10, X10, 0x8

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Subtract W8, W3, W2
	011 Add W25, W8, 1
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X19, X5
	014 Move X20, X4
	015 Move W21, W3
	016 Move W22, W2
	017 Move X23, X1
	018 Move X24, X0
	019 Move W26, W25
	020 ShiftRight W26, 1
	021 And W26, W26, 0x7FFFFFFF
	022 Move X0, [X19+32]
	023 Move W8, [X0+309]
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {29}
	028 Call 0x1C5D684
	029 Move X8, [X0+192]
	030 Move X0, [X8+56]
	031 Move W8, [X0+309]
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {37}
	036 Call 0x1C5D684
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, [X19+32]
	042 Move W8, [X0+309]
	043 Move TEMP, X8
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {48}
	047 Call 0x1C5D684
	048 Move X8, [X0+192]
	049 Move X0, X24
	050 Move X1, X23
	051 Move W2, W26
	052 Move X6, [X8+136]
	053 Move W3, W25
	054 Move W4, W22
	055 Move X5, X20
	056 Call 0x24D5920, X0, X1, X2, X3, X4, X5
	057 Subtract W26, W26, 1
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Subtract W25, W31, W22
	060 Move X0, [X19+32]
	061 Move W8, [X0+309]
	062 Move TEMP, X8
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {67}
	066 Call 0x1C5D684
	067 Move X8, [X0+192]
	068 Move X0, [X8+56]
	069 Move W8, [X0+309]
	070 Move TEMP, X8
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfEqual {75}
	074 Call 0x1C5D684
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Move X0, [X19+32]
	080 Move W8, [X0+309]
	081 Move TEMP, X8
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfEqual {86}
	085 Call 0x1C5D684
	086 Move X0, X24
	087 Move X1, X23
	088 Move W2, W22
	089 Move W3, W21
	090 Call 0x24D4FAC, X0, X1, X2, X3
	091 Move X0, [X19+32]
	092 Move W8, [X0+309]
	093 Move TEMP, X8
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfEqual {98}
	097 Call 0x1C5D684
	098 Move X8, [X0+192]
	099 Add W3, W25, W21
	100 Move W2, 1
	101 Move X0, X24
	102 Move X6, [X8+136]
	103 Move X1, X23
	104 Move W4, W22
	105 Move X5, X20
	106 Call 0x24D5920, X0, X1, X2, X3, X4, X5
	107 Subtract W21, W21, 1
	108 Add W8, W25, W21
	109 Add W8, W8, 2
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move X20, [X31+64]
	112 Move X19, [X31+72]
	113 Move X22, [X31+48]
	114 Move X21, [X31+56]
	115 Move X24, [X31+32]
	116 Move X23, [X31+40]
	117 Move X26, [X31+16]
	118 Move X25, [X31+24]
	119 Move X30, [X31+80]
	120 Return 

Method: System.Void DownHeap(TKey[] keys, TValue[] values, System.Int32 i, System.Int32 n, System.Int32 lo, System.Collections.Generic.IComparer`1<TKey> comparer)

Disassembly:
	0x024D5920 LDUR X11, [X10 - 0x8]
	0x024D5924 CMP X11, X1
	0x024D5928 B.EQ 0x24D5948
	0x024D592C SUBS X9, X9, 0x1
	0x024D5930 ADD X10, X10, 0x10
	0x024D5934 B.NE 0x24D5920
	0x024D5938 MOV X0, X23
	0x024D593C MOV W2, W31
	0x024D5940 BL 0x1C5C788
	0x024D5944 B 0x24D5954
	0x024D5948 LDRSW X9, [X10]
	0x024D594C ADD X8, X8, X9, 0x4, LSL
	0x024D5950 ADD X0, X8, 0x138
	0x024D5954 LDP X8, X3, [X0]
	0x024D5958 MOV X0, X23
	0x024D595C MOV X1, X25
	0x024D5960 MOV X2, X27
	0x024D5964 BLR X8
	0x024D5968 TBNZ X0, 0x1F, 0x24D58C8
	0x024D596C CMP W19, W26
	0x024D5970 B.GE 0x24D59CC
	0x024D5974 LDR X0, [X22 + 0x20]
	0x024D5978 LDRB W8, [X0 + 0x135]
	0x024D597C TBNZ X8, 0x0, 0x24D5984
	0x024D5980 BL 0x1C5C684
	0x024D5984 LDR X8, [X0 + 0xC0]
	0x024D5988 LDR X0, [X8 + 0x38]
	0x024D598C LDRB W8, [X0 + 0x135]
	0x024D5990 TBNZ X8, 0x0, 0x24D5998
	0x024D5994 BL 0x1C5C684
	0x024D5998 LDR W8, [X0 + 0xE0]
	0x024D599C CBNZ W8, 0x24D59A4
	0x024D59A0 BL 0x1C16DFC
	0x024D59A4 LDR X0, [X22 + 0x20]
	0x024D59A8 LDRB W8, [X0 + 0x135]
	0x024D59AC TBNZ X8, 0x0, 0x24D59B4
	0x024D59B0 BL 0x1C5C684
	0x024D59B4 MOV X0, X21
	0x024D59B8 MOV X1, X20
	0x024D59BC MOV W2, W19
	0x024D59C0 MOV W3, W26
	0x024D59C4 BL 0x24D523C
	0x024D59C8 B 0x24D5820
	0x024D59CC LDR X0, [X22 + 0x20]
	0x024D59D0 LDRB W8, [X0 + 0x135]
	0x024D59D4 TBNZ X8, 0x0, 0x24D59DC
	0x024D59D8 BL 0x1C5C684
	0x024D59DC LDR X8, [X0 + 0xC0]
	0x024D59E0 LDR X0, [X8 + 0x38]
	0x024D59E4 LDRB W8, [X0 + 0x135]
	0x024D59E8 TBNZ X8, 0x0, 0x24D59F0
	0x024D59EC BL 0x1C5C684
	0x024D59F0 LDR W8, [X0 + 0xE0]
	0x024D59F4 CBNZ W8, 0x24D59FC
	0x024D59F8 BL 0x1C16DFC
	0x024D59FC LDR X0, [X22 + 0x20]
	0x024D5A00 LDRB W8, [X0 + 0x135]
	0x024D5A04 TBNZ X8, 0x0, 0x24D5A0C
	0x024D5A08 BL 0x1C5C684
	0x024D5A0C MOV X0, X21
	0x024D5A10 MOV X1, X20
	0x024D5A14 MOV W2, W19
	0x024D5A18 MOV W3, W24
	0x024D5A1C BL 0x24D523C
	0x024D5A20 MOV W0, W19
	0x024D5A24 LDP X20, X19, [X31 + 0x40]
	0x024D5A28 LDP X22, X21, [X31 + 0x30]
	0x024D5A2C LDP X24, X23, [X31 + 0x20]
	0x024D5A30 LDP X26, X25, [X31 + 0x10]
	0x024D5A34 LDP X30, X27, [X31], #0x50
	0x024D5A38 RET
	0x024D5A3C BL 0x1C16F28
	0x024D5A40 BL 0x1C16F20
	0x024D5A44 STR X30, [X31 - 0x50]!
	0x024D5A48 STP X26, X25, [X31 + 0x10]
	0x024D5A4C STP X24, X23, [X31 + 0x20]
	0x024D5A50 STP X22, X21, [X31 + 0x30]
	0x024D5A54 STP X20, X19, [X31 + 0x40]
	0x024D5A58 SUB W8, W3, W2
	0x024D5A5C ADD W25, W8, 0x1
	0x024D5A60 CMP W25, 0x2
	0x024D5A64 B.LT 0x24D5B98
	0x024D5A68 MOV X19, X5
	0x024D5A6C MOV X20, X4
	0x024D5A70 MOV W21, W3
	0x024D5A74 MOV W22, W2
	0x024D5A78 MOV X23, X1
	0x024D5A7C MOV X24, X0
	0x024D5A80 UBFM W26, W25, 0x1, 0x1F
	0x024D5A84 LDR X0, [X19 + 0x20]
	0x024D5A88 LDRB W8, [X0 + 0x135]
	0x024D5A8C TBNZ X8, 0x0, 0x24D5A94
	0x024D5A90 BL 0x1C5C684
	0x024D5A94 LDR X8, [X0 + 0xC0]
	0x024D5A98 LDR X0, [X8 + 0x38]
	0x024D5A9C LDRB W8, [X0 + 0x135]
	0x024D5AA0 TBNZ X8, 0x0, 0x24D5AA8
	0x024D5AA4 BL 0x1C5C684
	0x024D5AA8 LDR W8, [X0 + 0xE0]
	0x024D5AAC CBNZ W8, 0x24D5AB4
	0x024D5AB0 BL 0x1C16DFC
	0x024D5AB4 LDR X0, [X19 + 0x20]
	0x024D5AB8 LDRB W8, [X0 + 0x135]
	0x024D5ABC TBNZ X8, 0x0, 0x24D5AC4
	0x024D5AC0 BL 0x1C5C684
	0x024D5AC4 LDR X8, [X0 + 0xC0]
	0x024D5AC8 MOV X0, X24
	0x024D5ACC MOV X1, X23
	0x024D5AD0 MOV W2, W26
	0x024D5AD4 LDR X6, [X8 + 0x88]
	0x024D5AD8 MOV W3, W25
	0x024D5ADC MOV W4, W22
	0x024D5AE0 MOV X5, X20
	0x024D5AE4 BL 0x24D5BB0
	0x024D5AE8 SUBS W26, W26, 0x1
	0x024D5AEC B.GT 0x24D5A84
	0x024D5AF0 CMP W25, 0x2
	0x024D5AF4 B.LT 0x24D5B98
	0x024D5AF8 SUB W25, W31, W22
	0x024D5AFC LDR X0, [X19 + 0x20]
	0x024D5B00 LDRB W8, [X0 + 0x135]
	0x024D5B04 TBNZ X8, 0x0, 0x24D5B0C
	0x024D5B08 BL 0x1C5C684
	0x024D5B0C LDR X8, [X0 + 0xC0]
	0x024D5B10 LDR X0, [X8 + 0x38]
	0x024D5B14 LDRB W8, [X0 + 0x135]
	0x024D5B18 TBNZ X8, 0x0, 0x24D5B20
	0x024D5B1C BL 0x1C5C684
	0x024D5B20 LDR W8, [X0 + 0xE0]
	0x024D5B24 CBNZ W8, 0x24D5B2C
	0x024D5B28 BL 0x1C16DFC
	0x024D5B2C LDR X0, [X19 + 0x20]
	0x024D5B30 LDRB W8, [X0 + 0x135]
	0x024D5B34 TBNZ X8, 0x0, 0x24D5B3C
	0x024D5B38 BL 0x1C5C684
	0x024D5B3C MOV X0, X24
	0x024D5B40 MOV X1, X23
	0x024D5B44 MOV W2, W22
	0x024D5B48 MOV W3, W21
	0x024D5B4C BL 0x24D523C
	0x024D5B50 LDR X0, [X19 + 0x20]
	0x024D5B54 LDRB W8, [X0 + 0x135]
	0x024D5B58 TBNZ X8, 0x0, 0x24D5B60
	0x024D5B5C BL 0x1C5C684
	0x024D5B60 LDR X8, [X0 + 0xC0]
	0x024D5B64 ADD W3, W25, W21
	0x024D5B68 MOVZ W2, 0x1
	0x024D5B6C MOV X0, X24
	0x024D5B70 LDR X6, [X8 + 0x88]
	0x024D5B74 MOV X1, X23
	0x024D5B78 MOV W4, W22
	0x024D5B7C MOV X5, X20
	0x024D5B80 BL 0x24D5BB0
	0x024D5B84 SUB W21, W21, 0x1
	0x024D5B88 ADD W8, W25, W21
	0x024D5B8C ADD W8, W8, 0x2
	0x024D5B90 CMP W8, 0x2
	0x024D5B94 B.GT 0x24D5AFC
	0x024D5B98 LDP X20, X19, [X31 + 0x40]
	0x024D5B9C LDP X22, X21, [X31 + 0x30]
	0x024D5BA0 LDP X24, X23, [X31 + 0x20]
	0x024D5BA4 LDP X26, X25, [X31 + 0x10]
	0x024D5BA8 LDR X30, [X31], #0x50
	0x024D5BAC RET
	0x024D5BB0 SUB X31, X31, 0x80
	0x024D5BB4 STP X29, X30, [X31 + 0x20]
	0x024D5BB8 STP X28, X27, [X31 + 0x30]
	0x024D5BBC STP X26, X25, [X31 + 0x40]
	0x024D5BC0 STP X24, X23, [X31 + 0x50]
	0x024D5BC4 STP X22, X21, [X31 + 0x60]
	0x024D5BC8 STP X20, X19, [X31 + 0x70]
	0x024D5BCC STR W3, [X31 + 0x1C]
	0x024D5BD0 CBZ X0, 0x24D5E70
	0x024D5BD4 LDR X8, [X0 + 0x18]
	0x024D5BD8 SUB W29, W4, 0x1
	0x024D5BDC ADD W24, W29, W2

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move [X31+28], W3
	015 Compare X0, 0
	016 JumpIfEqual {195}
	017 Move X8, [X0+24]
	018 Subtract W29, W4, 1
	019 Add W24, W29, W2
	020 Move W21, W2
	021 Move X20, X0
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X19, X1
	024 Compare X1, 0
	025 JumpIfEqual {195}
	026 Move W9, [X19+24]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move W11, [X31+28]
	029 Move X28, W24
	030 Add X9, X20, X28
	031 Add X10, X19, X28
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move W12, [X9+32]
	034 Move W10, [X10+32]
	035 NotImplemented "Instruction CINC not yet implemented."
	036 NotImplemented "Instruction SBFM not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move [X31+20], W9
	039 Move [X31+24], W12
	040 Move X22, X6
	041 Move X23, X5
	042 Move [X31+12], W10
	043 Move [X31+16], W4
	044 Move W9, [X31+28]
	045 Move W26, W21
	046 ShiftRight W26, 31
	047 And W26, W26, 0x3FFFFFFF
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move W9, [X31+16]
	050 Add W9, W26, W9
	051 Subtract W10, W9, 1
	052 NotImplemented "Instruction CMP not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Compare X23, 0
	055 JumpIfEqual {195}
	056 Move X0, [X22+32]
	057 Add X8, X20, W10
	058 Move W27, [X8+32]
	059 Add X8, X20, W9
	060 Move W9, [X0+309]
	061 Move W28, [X8+32]
	062 Move TEMP, X9
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {67}
	066 Call 0x1C5D684
	067 Move X8, [X0+192]
	068 Move X1, [X8]
	069 Move W8, [X1+309]
	070 Move TEMP, X8
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfEqual {77}
	074 Move X0, X1
	075 Call 0x1C5D684
	076 Move X1, X0
	077 Move X8, [X23]
	078 NotImplemented "Instruction LDRH not yet implemented."
	079 Compare X9, 0
	080 JumpIfEqual {87}
	081 Move X10, [X8+176]
	082 Add X10, X10, 8
	083 NotImplemented "Instruction LDUR not yet implemented."
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Subtract X9, X9, 1
	086 Add X10, X10, 16
	087 Move X0, X23
	088 Move W2, W31
	089 Call 0x1C5D788
	090 NotImplemented "Instruction LDRSW not yet implemented."
	091 Add X8, X8, X9
	092 Add X0, X8, 312
	093 Move X8, [X0]
	094 Move X3, [X0+8]
	095 Move X0, X23
	096 Move W1, W27
	097 Move W2, W28
	098 NotImplemented "Instruction BLR not yet implemented."
	099 Move X8, [X20+24]
	100 Or W26, W26, W0
	101 Add W24, W29, W26
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X28, W24
	104 Add X25, X20, X28
	105 Add X25, X25, 32
	106 Move W27, [X25]
	107 Compare X23, 0
	108 JumpIfEqual {195}
	109 Move X0, [X22+32]
	110 Move W8, [X0+309]
	111 Move TEMP, X8
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfEqual {116}
	115 Call 0x1C5D684
	116 Move X8, [X0+192]
	117 Move X1, [X8]
	118 Move W8, [X1+309]
	119 Move TEMP, X8
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfEqual {126}
	123 Move X0, X1
	124 Call 0x1C5D684
	125 Move X1, X0
	126 Move X8, [X23]
	127 NotImplemented "Instruction LDRH not yet implemented."
	128 Compare X9, 0
	129 JumpIfEqual {136}
	130 Move X10, [X8+176]
	131 Add X10, X10, 8
	132 NotImplemented "Instruction LDUR not yet implemented."
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Subtract X9, X9, 1
	135 Add X10, X10, 16
	136 Move X0, X23
	137 Move W2, W31
	138 Call 0x1C5D788
	139 NotImplemented "Instruction LDRSW not yet implemented."
	140 Add X8, X8, X9
	141 Add X0, X8, 312
	142 Move X8, [X0]
	143 Move X3, [X0+8]
	144 Move W1, [X31+24]
	145 Move X0, X23
	146 Move W2, W27
	147 NotImplemented "Instruction BLR not yet implemented."
	148 Move X8, [X20+24]
	149 Move TEMP, X0
	150 And TEMP, TEMP, -2147483648
	151 Compare TEMP, -2147483648
	152 JumpIfNotEqual {169}
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Add W9, W29, W21
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Move W10, [X25]
	157 Move X9, W9
	158 Add X11, X20, X9
	159 Move [X11+32], W10
	160 Move W10, [X19+24]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Add X10, X19, 32
	164 Move W12, [X31+20]
	165 Move W11, [X10]
	166 Move W21, W26
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Move [X10], W11
	169 Add W24, W29, W21
	170 Move X28, W24
	171 Move W10, [X31+12]
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move W9, [X31+24]
	174 Add X8, X20, X28
	175 Move [X8+32], W9
	176 Move W8, [X19+24]
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Add X8, X19, X28
	179 Move X20, [X31+112]
	180 Move X19, [X31+120]
	181 Move X22, [X31+96]
	182 Move X21, [X31+104]
	183 Move X24, [X31+80]
	184 Move X23, [X31+88]
	185 Move X26, [X31+64]
	186 Move X25, [X31+72]
	187 Move X28, [X31+48]
	188 Move X27, [X31+56]
	189 Move X29, [X31+32]
	190 Move X30, [X31+40]
	191 Move [X8+32], W10
	192 Add X31, X31, 128
	193 Return 
	194 Call 0x1C17F28
	195 Call 0x1C17F20

Method: System.Void InsertionSort(TKey[] keys, TValue[] values, System.Int32 lo, System.Int32 hi, System.Collections.Generic.IComparer`1<TKey> comparer)

Disassembly:
	0x024D5BE0 MOV W21, W2
	0x024D5BE4 MOV X20, X0
	0x024D5BE8 CMP W24, W8
	0x024D5BEC B.CS 0x24D5E6C
	0x024D5BF0 MOV X19, X1
	0x024D5BF4 CBZ X1, 0x24D5E70
	0x024D5BF8 LDR W9, [X19 + 0x18]
	0x024D5BFC CMP W24, W9
	0x024D5C00 B.CS 0x24D5E6C
	0x024D5C04 SXTW X28, W24
	0x024D5C08 LDR W11, [X31 + 0x1C]
	0x024D5C0C ADD X9, X20, X28, 0x3, LSL
	0x024D5C10 LDR X9, [X9 + 0x20]
	0x024D5C14 ADD X10, X19, X28, 0x2, LSL
	0x024D5C18 CMP W11, 0x0
	0x024D5C1C LDR W10, [X10 + 0x20]
	0x024D5C20 STR X9, [X31 + 0x10]
	0x024D5C24 CINC W9, W11, LT
	0x024D5C28 SBFM W9, W9, 0x1, 0x1F
	0x024D5C2C CMP W9, W21
	0x024D5C30 STR W9, [X31 + 0xC]
	0x024D5C34 B.LT 0x24D5E24
	0x024D5C38 MOV X22, X6
	0x024D5C3C MOV X23, X5
	0x024D5C40 STP W10, W4, [X31 + 0x4]
	0x024D5C44 LDR W9, [X31 + 0x1C]
	0x024D5C48 UBFM W26, W21, 0x1F, 0x1E
	0x024D5C4C CMP W26, W9
	0x024D5C50 B.GE 0x24D5D14
	0x024D5C54 LDR W9, [X31 + 0x8]
	0x024D5C58 ADD W9, W26, W9
	0x024D5C5C SUB W10, W9, 0x1
	0x024D5C60 CMP W10, W8
	0x024D5C64 B.CS 0x24D5E6C
	0x024D5C68 CMP W9, W8
	0x024D5C6C B.CS 0x24D5E6C
	0x024D5C70 CBZ X23, 0x24D5E70
	0x024D5C74 LDR X0, [X22 + 0x20]
	0x024D5C78 ADD X8, X20, W10, 0x3, SXTW
	0x024D5C7C LDR X27, [X8 + 0x20]
	0x024D5C80 ADD X8, X20, W9, 0x3, SXTW
	0x024D5C84 LDRB W9, [X0 + 0x135]
	0x024D5C88 LDR X28, [X8 + 0x20]
	0x024D5C8C TBNZ X9, 0x0, 0x24D5C94
	0x024D5C90 BL 0x1C5C684
	0x024D5C94 LDR X8, [X0 + 0xC0]
	0x024D5C98 LDR X1, [X8]
	0x024D5C9C LDRB W8, [X1 + 0x135]
	0x024D5CA0 TBNZ X8, 0x0, 0x24D5CB0
	0x024D5CA4 MOV X0, X1
	0x024D5CA8 BL 0x1C5C684
	0x024D5CAC MOV X1, X0
	0x024D5CB0 LDR X8, [X23]
	0x024D5CB4 LDRH W9, [X8 + 0x12E]
	0x024D5CB8 CBZ X9, 0x24D5CDC
	0x024D5CBC LDR X10, [X8 + 0xB0]
	0x024D5CC0 ADD X10, X10, 0x8
	0x024D5CC4 LDUR X11, [X10 - 0x8]
	0x024D5CC8 CMP X11, X1
	0x024D5CCC B.EQ 0x24D5CEC
	0x024D5CD0 SUBS X9, X9, 0x1
	0x024D5CD4 ADD X10, X10, 0x10
	0x024D5CD8 B.NE 0x24D5CC4
	0x024D5CDC MOV X0, X23
	0x024D5CE0 MOV W2, W31
	0x024D5CE4 BL 0x1C5C788
	0x024D5CE8 B 0x24D5CF8
	0x024D5CEC LDRSW X9, [X10]
	0x024D5CF0 ADD X8, X8, X9, 0x4, LSL
	0x024D5CF4 ADD X0, X8, 0x138
	0x024D5CF8 LDP X8, X3, [X0]
	0x024D5CFC MOV X0, X23
	0x024D5D00 MOV X1, X27
	0x024D5D04 MOV X2, X28
	0x024D5D08 BLR X8
	0x024D5D0C LDR X8, [X20 + 0x18]
	0x024D5D10 ORR W26, W26, W0, 0x1F
	0x024D5D14 ADD W24, W29, W26
	0x024D5D18 CMP W24, W8
	0x024D5D1C B.CS 0x24D5E6C
	0x024D5D20 SXTW X28, W24
	0x024D5D24 ADD X25, X20, X28, 0x3, LSL
	0x024D5D28 LDR X27, [X25 + 0x20]!
	0x024D5D2C CBZ X23, 0x24D5E70
	0x024D5D30 LDR X0, [X22 + 0x20]
	0x024D5D34 LDRB W8, [X0 + 0x135]
	0x024D5D38 TBNZ X8, 0x0, 0x24D5D40
	0x024D5D3C BL 0x1C5C684
	0x024D5D40 LDR X8, [X0 + 0xC0]
	0x024D5D44 LDR X1, [X8]
	0x024D5D48 LDRB W8, [X1 + 0x135]
	0x024D5D4C TBNZ X8, 0x0, 0x24D5D5C
	0x024D5D50 MOV X0, X1
	0x024D5D54 BL 0x1C5C684
	0x024D5D58 MOV X1, X0
	0x024D5D5C LDR X8, [X23]
	0x024D5D60 LDRH W9, [X8 + 0x12E]
	0x024D5D64 CBZ X9, 0x24D5D88
	0x024D5D68 LDR X10, [X8 + 0xB0]
	0x024D5D6C ADD X10, X10, 0x8
	0x024D5D70 LDUR X11, [X10 - 0x8]
	0x024D5D74 CMP X11, X1
	0x024D5D78 B.EQ 0x24D5D98
	0x024D5D7C SUBS X9, X9, 0x1
	0x024D5D80 ADD X10, X10, 0x10
	0x024D5D84 B.NE 0x24D5D70
	0x024D5D88 MOV X0, X23
	0x024D5D8C MOV W2, W31
	0x024D5D90 BL 0x1C5C788
	0x024D5D94 B 0x24D5DA4
	0x024D5D98 LDRSW X9, [X10]
	0x024D5D9C ADD X8, X8, X9, 0x4, LSL
	0x024D5DA0 ADD X0, X8, 0x138
	0x024D5DA4 LDP X8, X3, [X0]
	0x024D5DA8 LDR X1, [X31 + 0x10]
	0x024D5DAC MOV X0, X23
	0x024D5DB0 MOV X2, X27
	0x024D5DB4 BLR X8
	0x024D5DB8 LDR X8, [X20 + 0x18]
	0x024D5DBC TBZ X0, 0x1F, 0x24D5E18
	0x024D5DC0 CMP W24, W8
	0x024D5DC4 B.CS 0x24D5E6C

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X23, X0
	016 Compare X0, 0
	017 JumpIfEqual {134}
	018 Move X8, [X23+24]
	019 Move W21, W2
	020 Move X19, X5
	021 Move X20, X4
	022 Move X22, X1
	023 Move X27, W21
	024 Move X9, W3
	025 Move [X31+8], X9
	026 Move [X31+16], X27
	027 Add X28, X27, 1
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Compare X22, 0
	030 JumpIfEqual {134}
	031 Move W9, [X22+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Add X9, X23, X28
	034 Add X10, X22, X28
	035 Move W24, [X9+32]
	036 Move W9, [X10+32]
	037 Move [X31+28], W9
	038 Move X9, [X31+16]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X26, W27
	042 Add X29, X23, X26
	043 Add X29, X29, 32
	044 Move W25, [X29]
	045 Compare X20, 0
	046 JumpIfEqual {134}
	047 Move X0, [X19+32]
	048 Move W8, [X0+309]
	049 Move TEMP, X8
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {54}
	053 Call 0x1C5D684
	054 Move X8, [X0+192]
	055 Move X1, [X8]
	056 Move W8, [X1+309]
	057 Move TEMP, X8
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfEqual {64}
	061 Move X0, X1
	062 Call 0x1C5D684
	063 Move X1, X0
	064 Move X8, [X20]
	065 NotImplemented "Instruction LDRH not yet implemented."
	066 Compare X9, 0
	067 JumpIfEqual {74}
	068 Move X10, [X8+176]
	069 Add X10, X10, 8
	070 NotImplemented "Instruction LDUR not yet implemented."
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Subtract X9, X9, 1
	073 Add X10, X10, 16
	074 Move X0, X20
	075 Move W2, W31
	076 Call 0x1C5D788
	077 NotImplemented "Instruction LDRSW not yet implemented."
	078 Add X8, X8, X9
	079 Add X0, X8, 312
	080 Move X8, [X0]
	081 Move X3, [X0+8]
	082 Move X0, X20
	083 Move W1, W24
	084 Move W2, W25
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Move X8, [X23+24]
	087 Move TEMP, X0
	088 And TEMP, TEMP, -2147483648
	089 Compare TEMP, -2147483648
	090 JumpIfNotEqual {106}
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Add W9, W27, 1
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move W10, [X29]
	095 Move X9, W9
	096 Add X11, X23, X9
	097 Move [X11+32], W10
	098 Move W10, [X22+24]
	099 NotImplemented "Instruction CMP not yet implemented."
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Add X10, X22, 32
	102 Move W11, [X10]
	103 Subtract W27, W27, 1
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move [X10], W11
	106 Add W9, W27, 1
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move X9, W9
	109 Add X10, X23, X9
	110 Move [X10+32], W24
	111 Move W10, [X22+24]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X10, [X31+8]
	114 Add X9, X22, X9
	115 Move X27, X28
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move W10, [X31+28]
	118 Move [X9+32], W10
	119 Move X20, [X31+112]
	120 Move X19, [X31+120]
	121 Move X22, [X31+96]
	122 Move X21, [X31+104]
	123 Move X24, [X31+80]
	124 Move X23, [X31+88]
	125 Move X26, [X31+64]
	126 Move X25, [X31+72]
	127 Move X28, [X31+48]
	128 Move X27, [X31+56]
	129 Move X29, [X31+32]
	130 Move X30, [X31+40]
	131 Add X31, X31, 128
	132 Return 
	133 Call 0x1C17F28
	134 Call 0x1C17F20

Method: System.Collections.Generic.ArraySortHelper`2<TKey, TValue> get_Default()

Disassembly:
	0x024D5DC8 ADD W9, W29, W21
	0x024D5DCC CMP W9, W8
	0x024D5DD0 B.CS 0x24D5E6C
	0x024D5DD4 LDR X10, [X25]
	0x024D5DD8 SXTW X9, W9
	0x024D5DDC ADD X11, X20, X9, 0x3, LSL
	0x024D5DE0 STR X10, [X11 + 0x20]
	0x024D5DE4 LDR W10, [X19 + 0x18]
	0x024D5DE8 CMP W24, W10
	0x024D5DEC B.CS 0x24D5E6C
	0x024D5DF0 CMP W9, W10
	0x024D5DF4 B.CS 0x24D5E6C
	0x024D5DF8 ADD X10, X19, 0x20
	0x024D5DFC LDR W12, [X31 + 0xC]
	0x024D5E00 LDR W11, [X10, X28, LSL #2]
	0x024D5E04 MOV W21, W26
	0x024D5E08 CMP W26, W12
	0x024D5E0C STR W11, [X10, X9, LSL #2]
	0x024D5E10 B.LE 0x24D5C44
	0x024D5E14 B 0x24D5E20
	0x024D5E18 ADD W24, W29, W21
	0x024D5E1C SXTW X28, W24
	0x024D5E20 LDR W10, [X31 + 0x4]
	0x024D5E24 CMP W24, W8
	0x024D5E28 B.CS 0x24D5E6C
	0x024D5E2C LDR X9, [X31 + 0x10]
	0x024D5E30 ADD X8, X20, X28, 0x3, LSL

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+32]
	005 Move W8, [X0+309]
	006 Move TEMP, X8
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfEqual {11}
	010 Call 0x1C5D684
	011 Move X8, [X0+192]
	012 Move X0, [X8+56]
	013 Move W8, [X0+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {19}
	018 Call 0x1C5D684
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Move X0, [X19+32]
	024 Move W8, [X0+309]
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {30}
	029 Call 0x1C5D684
	030 Move X8, [X0+192]
	031 Move X0, [X8+56]
	032 Move W8, [X0+309]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {38}
	037 Call 0x1C5D684
	038 Move X8, [X0+184]
	039 Move X0, [X8]
	040 Move X30, [X31+16]
	041 Move X19, [X31+24]
	042 Return X0

Method: System.Void .ctor()

Disassembly:
	0x024D5E34 STR X9, [X8 + 0x20]
	0x024D5E38 LDR W8, [X19 + 0x18]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void .cctor()

Disassembly:
	0x024D5E3C CMP W24, W8
	0x024D5E40 B.CS 0x24D5E6C
	0x024D5E44 ADD X8, X19, X28, 0x2, LSL
	0x024D5E48 LDP X20, X19, [X31 + 0x70]
	0x024D5E4C LDP X22, X21, [X31 + 0x60]
	0x024D5E50 LDP X24, X23, [X31 + 0x50]
	0x024D5E54 LDP X26, X25, [X31 + 0x40]
	0x024D5E58 LDP X28, X27, [X31 + 0x30]
	0x024D5E5C LDP X29, X30, [X31 + 0x20]
	0x024D5E60 STR W10, [X8 + 0x20]
	0x024D5E64 ADD X31, X31, 0x80
	0x024D5E68 RET
	0x024D5E6C BL 0x1C16F28
	0x024D5E70 BL 0x1C16F20
	0x024D5E74 SUB X31, X31, 0x80
	0x024D5E78 STP X29, X30, [X31 + 0x20]
	0x024D5E7C STP X28, X27, [X31 + 0x30]
	0x024D5E80 STP X26, X25, [X31 + 0x40]
	0x024D5E84 STP X24, X23, [X31 + 0x50]
	0x024D5E88 STP X22, X21, [X31 + 0x60]
	0x024D5E8C STP X20, X19, [X31 + 0x70]
	0x024D5E90 CMP W2, W3
	0x024D5E94 B.GE 0x24D6034
	0x024D5E98 MOV X23, X0
	0x024D5E9C CBZ X0, 0x24D6058
	0x024D5EA0 LDR X8, [X23 + 0x18]
	0x024D5EA4 MOV W21, W2
	0x024D5EA8 MOV X19, X5
	0x024D5EAC MOV X20, X4
	0x024D5EB0 MOV X22, X1
	0x024D5EB4 SXTW X27, W21
	0x024D5EB8 SXTW X9, W3
	0x024D5EBC STP X9, X27, [X31 + 0x8]
	0x024D5EC0 ADD X28, X27, 0x1
	0x024D5EC4 CMP W28, W8
	0x024D5EC8 B.CS 0x24D6054
	0x024D5ECC CBZ X22, 0x24D6058
	0x024D5ED0 LDR W9, [X22 + 0x18]
	0x024D5ED4 CMP W28, W9
	0x024D5ED8 B.CS 0x24D6054
	0x024D5EDC ADD X9, X23, X28, 0x3, LSL
	0x024D5EE0 ADD X10, X22, X28, 0x2, LSL
	0x024D5EE4 LDR X24, [X9 + 0x20]
	0x024D5EE8 LDR W9, [X10 + 0x20]
	0x024D5EEC STR W9, [X31 + 0x1C]
	0x024D5EF0 LDR X9, [X31 + 0x10]
	0x024D5EF4 CMP X27, X9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+32]
	006 Move W8, [X0+309]
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {12}
	011 Call 0x1C5D684
	012 Move X8, [X0+192]
	013 Move X0, [X8+144]
	014 Move W8, [X0+309]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {20}
	019 Call 0x1C5D684
	020 Call 0x1C17F10
	021 Move X8, [X19+32]
	022 Move X20, X0
	023 Move W9, [X8+309]
	024 Move TEMP, X9
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {30}
	028 Move X0, X8
	029 Call 0x1C5D684
	030 Move X0, X20
	031 Move X1, X31
	032 Call Object..ctor, X0
	033 Move X0, [X19+32]
	034 Move W8, [X0+309]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {40}
	039 Call 0x1C5D684
	040 Move X8, [X0+192]
	041 Move X0, [X8+56]
	042 Move W8, [X0+309]
	043 Move TEMP, X8
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {48}
	047 Call 0x1C5D684
	048 Move X8, [X0+184]
	049 Move [X8], X20
	050 Move X0, [X19+32]
	051 Move W8, [X0+309]
	052 Move TEMP, X8
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {57}
	056 Call 0x1C5D684
	057 Move X8, [X0+192]
	058 Move X0, [X8+56]
	059 Move W8, [X0+309]
	060 Move TEMP, X8
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {69}
	064 Move X20, [X31+16]
	065 Move X19, [X31+24]
	066 Move X30, [X31+32]
	067 Call 0x1C5D684
	068 Return 
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move X30, [X31+32]
	072 Return 

