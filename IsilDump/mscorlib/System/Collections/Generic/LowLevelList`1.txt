Type: System.Collections.Generic.LowLevelList`1

Method: System.Void .ctor()

Disassembly:
	0x0319C308 LDR X0, [X8 + 0x10]
	0x0319C30C LDRB W8, [X0 + 0x135]
	0x0319C310 TBNZ X8, 0x0, 0x319C318
	0x0319C314 BL 0x1C5C684
	0x0319C318 LDR W8, [X0 + 0xE0]
	0x0319C31C CBNZ W8, 0x319C324
	0x0319C320 BL 0x1C16DFC
	0x0319C324 LDR X8, [X20 + 0x20]
	0x0319C328 LDR X8, [X8 + 0xC0]
	0x0319C32C LDR X0, [X8 + 0x10]
	0x0319C330 LDRB W8, [X0 + 0x135]
	0x0319C334 TBNZ X8, 0x0, 0x319C33C
	0x0319C338 BL 0x1C5C684
	0x0319C33C LDR X8, [X0 + 0xB8]
	0x0319C340 LDR X8, [X8]
	0x0319C344 STR X8, [X19 + 0x10]
	0x0319C348 LDP X20, X19, [X31 + 0x10]
	0x0319C34C LDR X30, [X31], #0x20
	0x0319C350 RET
	0x0319C354 STP X30, X21, [X31 - 0x20]!
	0x0319C358 STP X20, X19, [X31 + 0x10]
	0x0319C35C MOV W21, W1
	0x0319C360 MOV X1, X31
	0x0319C364 MOV X20, X2
	0x0319C368 MOV X19, X0
	0x0319C36C BL 0x33BDD8C
	0x0319C370 TBNZ X21, 0x1F, 0x319C3EC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X1
	005 Move X1, X31
	006 Move X19, X0
	007 Call Object..ctor, X0
	008 Move X8, [X20+32]
	009 Move X8, [X8+192]
	010 Move X0, [X8+16]
	011 Move W8, [X0+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {17}
	016 Call 0x1C5D684
	017 Move W8, [X0+224]
	018 Compare W8, 0
	019 JumpIfNotEqual {21}
	020 Call 0x1C17DFC
	021 Move X8, [X20+32]
	022 Move X8, [X8+192]
	023 Move X0, [X8+16]
	024 Move W8, [X0+309]
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {30}
	029 Call 0x1C5D684
	030 Move X8, [X0+184]
	031 Move X8, [X8]
	032 Move [X19+16], X8
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return 

Method: System.Void .ctor(System.Int32 capacity)

Disassembly:
	0x0319C374 LDR X8, [X20 + 0x20]
	0x0319C378 LDR X8, [X8 + 0xC0]
	0x0319C37C CBZ W21, 0x319C3A0
	0x0319C380 LDR X0, [X8 + 0x18]
	0x0319C384 LDRB W8, [X0 + 0x135]
	0x0319C388 TBNZ X8, 0x0, 0x319C390
	0x0319C38C BL 0x1C5C684
	0x0319C390 MOV W1, W21
	0x0319C394 BL 0x1C16D6C
	0x0319C398 STR X0, [X19 + 0x10]
	0x0319C39C B 0x319C3E0
	0x0319C3A0 LDR X0, [X8 + 0x10]
	0x0319C3A4 LDRB W8, [X0 + 0x135]
	0x0319C3A8 TBNZ X8, 0x0, 0x319C3B0
	0x0319C3AC BL 0x1C5C684
	0x0319C3B0 LDR W8, [X0 + 0xE0]
	0x0319C3B4 CBNZ W8, 0x319C3BC
	0x0319C3B8 BL 0x1C16DFC
	0x0319C3BC LDR X8, [X20 + 0x20]
	0x0319C3C0 LDR X8, [X8 + 0xC0]
	0x0319C3C4 LDR X0, [X8 + 0x10]
	0x0319C3C8 LDRB W8, [X0 + 0x135]
	0x0319C3CC TBNZ X8, 0x0, 0x319C3D4
	0x0319C3D0 BL 0x1C5C684
	0x0319C3D4 LDR X8, [X0 + 0xB8]
	0x0319C3D8 LDR X8, [X8]
	0x0319C3DC STR X8, [X19 + 0x10]
	0x0319C3E0 LDP X20, X19, [X31 + 0x10]
	0x0319C3E4 LDP X30, X21, [X31], #0x20
	0x0319C3E8 RET
	0x0319C3EC ADRP X0, 0xF5F000
	0x0319C3F0 LDR X0, [X0 + 0x760]
	0x0319C3F4 BL 0x1C16D08
	0x0319C3F8 BL 0x1C16F10
	0x0319C3FC MOV X19, X0
	0x0319C400 ADRP X0, 0xF81000
	0x0319C404 LDR X0, [X0 + 0x58]
	0x0319C408 BL 0x1C16D08
	0x0319C40C MOV X1, X0
	0x0319C410 MOV X0, X19
	0x0319C414 MOV X2, X31
	0x0319C418 BL 0x3316014
	0x0319C41C MOV X0, X19
	0x0319C420 MOV X1, X20
	0x0319C424 BL 0x1C16DEC
	0x0319C428 STR X30, [X31 - 0x10]!
	0x0319C42C LDR X8, [X0 + 0x10]
	0x0319C430 CBZ X8, 0x319C440
	0x0319C434 LDR W0, [X8 + 0x18]
	0x0319C438 LDR X30, [X31], #0x10
	0x0319C43C RET
	0x0319C440 BL 0x1C16F20
	0x0319C444 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W21, W1
	006 Move X1, X31
	007 Move X20, X2
	008 Move X19, X0
	009 Call Object..ctor, X0
	010 Move TEMP, X21
	011 And TEMP, TEMP, -2147483648
	012 Compare TEMP, -2147483648
	013 JumpIfEqual {56}
	014 Move X8, [X20+32]
	015 Move X8, [X8+192]
	016 Compare W21, 0
	017 JumpIfEqual {28}
	018 Move X0, [X8+24]
	019 Move W8, [X0+309]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {25}
	024 Call 0x1C5D684
	025 Move W1, W21
	026 Call 0x1C17D6C
	027 Move [X19+16], X0
	028 Move X0, [X8+16]
	029 Move W8, [X0+309]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {35}
	034 Call 0x1C5D684
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X8, [X20+32]
	040 Move X8, [X8+192]
	041 Move X0, [X8+16]
	042 Move W8, [X0+309]
	043 Move TEMP, X8
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {48}
	047 Call 0x1C5D684
	048 Move X8, [X0+184]
	049 Move X8, [X8]
	050 Move [X19+16], X8
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Return 
	056 Move X0, 0xF60000
	057 Move X0, [X0+1888]
	058 Call 0x1C17D08
	059 Call 0x1C17F10
	060 Move X19, X0
	061 Move X0, 0xF82000
	062 Move X0, [X0+88]
	063 Call 0x1C17D08
	064 Move X1, X0
	065 Move X0, X19
	066 Move X2, X31
	067 Call ArgumentOutOfRangeException..ctor, X0, X1
	068 Move X0, X19
	069 Move X1, X20
	070 Call 0x1C17DEC

Method: System.Int32 get_Capacity()

Disassembly:
	0x0319C448 STP X20, X19, [X31 + 0x10]
	0x0319C44C LDR W8, [X0 + 0x18]
	0x0319C450 MOV X20, X2
	0x0319C454 CMP W8, W1
	0x0319C458 B.GT 0x319C518
	0x0319C45C LDR X8, [X0 + 0x10]
	0x0319C460 MOV X19, X0

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, [X8+24]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Void set_Capacity(System.Int32 value)

Disassembly:
	0x0319C464 CBZ X8, 0x319C554
	0x0319C468 LDR W8, [X8 + 0x18]
	0x0319C46C MOV W21, W1
	0x0319C470 CMP W8, W1
	0x0319C474 B.EQ 0x319C50C
	0x0319C478 LDR X8, [X20 + 0x20]
	0x0319C47C CMP W21, 0x1
	0x0319C480 LDR X8, [X8 + 0xC0]
	0x0319C484 B.LT 0x319C4CC
	0x0319C488 LDR X0, [X8 + 0x18]
	0x0319C48C LDRB W8, [X0 + 0x135]
	0x0319C490 TBNZ X8, 0x0, 0x319C498
	0x0319C494 BL 0x1C5C684
	0x0319C498 MOV W1, W21
	0x0319C49C BL 0x1C16D6C
	0x0319C4A0 LDR X8, [X19 + 0x10]
	0x0319C4A4 LDR W4, [X19 + 0x18]
	0x0319C4A8 MOV X20, X0
	0x0319C4AC MOV W1, W31
	0x0319C4B0 MOV X0, X8
	0x0319C4B4 MOV X2, X20
	0x0319C4B8 MOV W3, W31
	0x0319C4BC MOV X5, X31
	0x0319C4C0 BL 0x339FCE8
	0x0319C4C4 STR X20, [X19 + 0x10]
	0x0319C4C8 B 0x319C50C
	0x0319C4CC LDR X0, [X8 + 0x10]
	0x0319C4D0 LDRB W8, [X0 + 0x135]
	0x0319C4D4 TBNZ X8, 0x0, 0x319C4DC
	0x0319C4D8 BL 0x1C5C684
	0x0319C4DC LDR W8, [X0 + 0xE0]
	0x0319C4E0 CBNZ W8, 0x319C4E8
	0x0319C4E4 BL 0x1C16DFC
	0x0319C4E8 LDR X8, [X20 + 0x20]
	0x0319C4EC LDR X8, [X8 + 0xC0]
	0x0319C4F0 LDR X0, [X8 + 0x10]
	0x0319C4F4 LDRB W8, [X0 + 0x135]
	0x0319C4F8 TBNZ X8, 0x0, 0x319C500
	0x0319C4FC BL 0x1C5C684
	0x0319C500 LDR X8, [X0 + 0xB8]
	0x0319C504 LDR X8, [X8]
	0x0319C508 STR X8, [X19 + 0x10]
	0x0319C50C LDP X20, X19, [X31 + 0x10]
	0x0319C510 LDP X30, X21, [X31], #0x20
	0x0319C514 RET
	0x0319C518 ADRP X0, 0xF5F000
	0x0319C51C LDR X0, [X0 + 0x760]
	0x0319C520 BL 0x1C16D08
	0x0319C524 BL 0x1C16F10
	0x0319C528 MOV X19, X0
	0x0319C52C ADRP X0, 0xF61000
	0x0319C530 LDR X0, [X0 + 0xEC8]
	0x0319C534 BL 0x1C16D08
	0x0319C538 MOV X1, X0
	0x0319C53C MOV X0, X19
	0x0319C540 MOV X2, X31
	0x0319C544 BL 0x3316014
	0x0319C548 MOV X0, X19
	0x0319C54C MOV X1, X20
	0x0319C550 BL 0x1C16DEC
	0x0319C554 BL 0x1C16F20
	0x0319C558 LDR W0, [X0 + 0x18]
	0x0319C55C RET
	0x0319C560 STP X29, X30, [X31 - 0x30]!
	0x0319C564 STP X22, X21, [X31 + 0x10]
	0x0319C568 STP X20, X19, [X31 + 0x20]
	0x0319C56C ADD X29, X31, 0x0
	0x0319C570 SUB X31, X31, 0x10
	0x0319C574 MRS X22, 0xC000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+24]
	006 Move X20, X2
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move X8, [X0+16]
	009 Move X19, X0
	010 Compare X8, 0
	011 JumpIfEqual {80}
	012 Move W8, [X8+24]
	013 Move W21, W1
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X8, [X20+32]
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move X8, [X8+192]
	018 Move X0, [X8+24]
	019 Move W8, [X0+309]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {25}
	024 Call 0x1C5D684
	025 Move W1, W21
	026 Call 0x1C17D6C
	027 Move X8, [X19+16]
	028 Move W4, [X19+24]
	029 Move X20, X0
	030 Move W1, W31
	031 Move X0, X8
	032 Move X2, X20
	033 Move W3, W31
	034 Move X5, X31
	035 Call Array.Copy, X0, X1, X2, X3, X4
	036 Move [X19+16], X20
	037 Move X0, [X8+16]
	038 Move W8, [X0+309]
	039 Move TEMP, X8
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {44}
	043 Call 0x1C5D684
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X8, [X20+32]
	049 Move X8, [X8+192]
	050 Move X0, [X8+16]
	051 Move W8, [X0+309]
	052 Move TEMP, X8
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {57}
	056 Call 0x1C5D684
	057 Move X8, [X0+184]
	058 Move X8, [X8]
	059 Move [X19+16], X8
	060 Move X20, [X31+16]
	061 Move X19, [X31+24]
	062 Move X30, [X31+32]
	063 Move X21, [X31+40]
	064 Return 
	065 Move X0, 0xF60000
	066 Move X0, [X0+1888]
	067 Call 0x1C17D08
	068 Call 0x1C17F10
	069 Move X19, X0
	070 Move X0, 0xF62000
	071 Move X0, [X0+3784]
	072 Call 0x1C17D08
	073 Move X1, X0
	074 Move X0, X19
	075 Move X2, X31
	076 Call ArgumentOutOfRangeException..ctor, X0, X1
	077 Move X0, X19
	078 Move X1, X20
	079 Call 0x1C17DEC
	080 Call 0x1C17F20

Method: System.Int32 get_Count()

Disassembly:
	0x0319C578 LDR X8, [X22 + 0x28]
	0x0319C57C STUR X8, [X29 - 0x8]

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: T get_Item(System.Int32 index)

Disassembly:
	0x0319C580 LDR X8, [X3 + 0x20]
	0x0319C584 LDR X8, [X8 + 0xC0]
	0x0319C588 LDR X8, [X8 + 0x20]
	0x0319C58C LDR W20, [X8 + 0xFC]
	0x0319C590 ADD X8, X31, 0x0
	0x0319C594 ADD X9, X20, 0xF
	0x0319C598 AND X9, X9, 0x1FFFFFFFF
	0x0319C59C SUB X21, X8, X9
	0x0319C5A0 ADD X31, X21, 0x0
	0x0319C5A4 LDR W8, [X0 + 0x18]
	0x0319C5A8 CMP W8, W1
	0x0319C5AC B.LS 0x319C61C
	0x0319C5B0 LDR X8, [X0 + 0x10]
	0x0319C5B4 CBZ X8, 0x319C648
	0x0319C5B8 LDR W9, [X8 + 0x18]
	0x0319C5BC CMP W9, W1
	0x0319C5C0 B.LS 0x319C64C
	0x0319C5C4 LDR X9, [X8]
	0x0319C5C8 SXTW X10, W1
	0x0319C5CC MOV X19, X2
	0x0319C5D0 MOV X0, X21
	0x0319C5D4 LDR W9, [X9 + 0x104]
	0x0319C5D8 MOV X2, X20
	0x0319C5DC MADD X8, X9, X10, X8
	0x0319C5E0 ADD X1, X8, 0x20
	0x0319C5E4 BL 0x3EB1AC0
	0x0319C5E8 MOV X0, X19
	0x0319C5EC MOV X1, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+24]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move X8, [X0+16]
	007 Compare X8, 0
	008 JumpIfEqual {28}
	009 Move W9, [X8+24]
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Add X8, X8, W1
	012 Move X0, [X8+32]
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move X30, [X31+32]
	016 Return X0
	017 Move X0, 0xF60000
	018 Move X0, [X0+1888]
	019 Move X19, X2
	020 Call 0x1C17D08
	021 Call 0x1C17F10
	022 Move X1, X31
	023 Move X20, X0
	024 Call ArgumentOutOfRangeException..ctor, X0
	025 Move X0, X20
	026 Move X1, X19
	027 Call 0x1C17DEC
	028 Call 0x1C17F20
	029 Call 0x1C17F28

Method: System.Void set_Item(System.Int32 index, T value)

Disassembly:
	0x0319C5F0 MOV X2, X20
	0x0319C5F4 BL 0x3EB1AC0
	0x0319C5F8 LDR X8, [X22 + 0x28]
	0x0319C5FC LDUR X9, [X29 - 0x8]
	0x0319C600 CMP X8, X9
	0x0319C604 B.NE 0x319C650
	0x0319C608 ADD X31, X29, 0x0
	0x0319C60C LDP X20, X19, [X31 + 0x20]
	0x0319C610 LDP X22, X21, [X31 + 0x10]
	0x0319C614 LDP X29, X30, [X31], #0x30
	0x0319C618 RET
	0x0319C61C ADRP X0, 0xF5F000
	0x0319C620 LDR X0, [X0 + 0x760]
	0x0319C624 MOV X19, X3
	0x0319C628 BL 0x1C16D08
	0x0319C62C BL 0x1C16F10
	0x0319C630 MOV X1, X31
	0x0319C634 MOV X20, X0
	0x0319C638 BL 0x3315FB8
	0x0319C63C MOV X0, X20
	0x0319C640 MOV X1, X19
	0x0319C644 BL 0x1C16DEC
	0x0319C648 BL 0x1C16F20
	0x0319C64C BL 0x1C16F28
	0x0319C650 BL 0x3EB1B20
	0x0319C654 STP X29, X30, [X31 - 0x50]!
	0x0319C658 STR X25, [X31 + 0x10]
	0x0319C65C STP X24, X23, [X31 + 0x20]
	0x0319C660 STP X22, X21, [X31 + 0x30]
	0x0319C664 STP X20, X19, [X31 + 0x40]
	0x0319C668 ADD X29, X31, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+24]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move X8, [X0+16]
	007 Compare X8, 0
	008 JumpIfEqual {31}
	009 Move W9, [X8+24]
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Add X8, X8, W1
	012 Move [X8+32], X2
	013 Move W8, [X0+28]
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Add W8, W8, 1
	017 Move [X0+28], W8
	018 Move X30, [X31+32]
	019 Return 
	020 Move X0, 0xF60000
	021 Move X0, [X0+1888]
	022 Move X19, X3
	023 Call 0x1C17D08
	024 Call 0x1C17F10
	025 Move X1, X31
	026 Move X20, X0
	027 Call ArgumentOutOfRangeException..ctor, X0
	028 Move X0, X20
	029 Move X1, X19
	030 Call 0x1C17DEC
	031 Call 0x1C17F20
	032 Call 0x1C17F28

Method: System.Void Add(T item)

Disassembly:
	0x0319C66C SUB X31, X31, 0x10
	0x0319C670 MRS X24, 0xC000
	0x0319C674 LDR X8, [X24 + 0x28]
	0x0319C678 ADD X9, X31, 0x0
	0x0319C67C MOV X19, X3
	0x0319C680 STUR X8, [X29 - 0x8]
	0x0319C684 STUR X2, [X29 - 0x10]
	0x0319C688 LDR X8, [X3 + 0x20]
	0x0319C68C LDR X8, [X8 + 0xC0]
	0x0319C690 LDR X8, [X8 + 0x20]
	0x0319C694 LDR W22, [X8 + 0xFC]
	0x0319C698 ADD X10, X22, 0xF
	0x0319C69C AND X10, X10, 0x1FFFFFFFF
	0x0319C6A0 SUB X23, X9, X10
	0x0319C6A4 ADD X31, X23, 0x0
	0x0319C6A8 LDR W9, [X0 + 0x18]
	0x0319C6AC CMP W9, W1
	0x0319C6B0 B.LS 0x319C770
	0x0319C6B4 LDR W8, [X8 + 0x28]
	0x0319C6B8 LDR X25, [X0 + 0x10]
	0x0319C6BC MOV W20, W1
	0x0319C6C0 MOV X21, X0
	0x0319C6C4 CMP W8, 0x0
	0x0319C6C8 SUB X8, X29, 0x10
	0x0319C6CC CSEL X1, X2, X8, LT
	0x0319C6D0 MOV X0, X23
	0x0319C6D4 MOV X2, X22
	0x0319C6D8 BL 0x3EB1AC0
	0x0319C6DC CBZ X25, 0x319C798
	0x0319C6E0 LDR W8, [X25 + 0x18]
	0x0319C6E4 CMP W8, W20
	0x0319C6E8 B.LS 0x319C76C
	0x0319C6EC LDR X8, [X25]
	0x0319C6F0 SXTW X9, W20
	0x0319C6F4 MOV X1, X23

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+16]
	005 Compare X8, 0
	006 JumpIfEqual {24}
	007 Move W9, [X0+24]
	008 Move W10, [X8+24]
	009 Move X19, X0
	010 Move X20, X1
	011 Add W1, W9, 1
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X8, [X2+32]
	014 Move X0, X19
	015 Move X8, [X8+192]
	016 Move X2, [X8+40]
	017 Call 0x319C6F8, X0, X1
	018 Move W9, [X19+24]
	019 Move X8, [X19+16]
	020 Add W10, W9, 1
	021 Move [X19+24], W10
	022 Compare X8, 0
	023 JumpIfNotEqual {26}
	024 Call 0x1C17F20
	025 Move [X19+24], W1
	026 Move W10, [X8+24]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Add X8, X8, W9
	029 Move [X8+32], X20
	030 Move W8, [X19+28]
	031 Add W8, W8, 1
	032 Move [X19+28], W8
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return 
	037 Call 0x1C17F28

Method: System.Void EnsureCapacity(System.Int32 min)

Disassembly:
	0x0319C6F8 MOV X2, X22
	0x0319C6FC LDR W8, [X8 + 0x104]
	0x0319C700 NOP
	0x0319C704 MADD X8, X8, X9, X25
	0x0319C708 ADD X0, X8, 0x20
	0x0319C70C BL 0x3EB1AC0
	0x0319C710 LDR X8, [X19 + 0x20]
	0x0319C714 LDR X8, [X8 + 0xC0]
	0x0319C718 LDR X0, [X8 + 0x20]
	0x0319C71C LDRB W8, [X0 + 0x135]
	0x0319C720 TBNZ X8, 0x0, 0x319C728
	0x0319C724 BL 0x1C5C684
	0x0319C728 LDR W8, [X25 + 0x18]
	0x0319C72C CMP W8, W20
	0x0319C730 B.LS 0x319C76C
	0x0319C734 LDR W8, [X21 + 0x1C]
	0x0319C738 ADD W8, W8, 0x1
	0x0319C73C STR W8, [X21 + 0x1C]
	0x0319C740 LDR X8, [X24 + 0x28]
	0x0319C744 LDUR X9, [X29 - 0x8]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {23}
	005 Move X8, [X8+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X9, [X2+32]
	008 Move W10, W8
	009 ShiftRight W10, 31
	010 And W10, W10, 0x3FFFFFFF
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move W8, 4
	013 Move X9, [X9+192]
	014 NotImplemented "Instruction CSEL not yet implemented."
	015 NotImplemented "Instruction CMP not yet implemented."
	016 NotImplemented "Instruction CSEL not yet implemented."
	017 Move X2, [X9+48]
	018 Move X30, [X31+16]
	019 Call 0x319C464, X0, X1
	020 Return 
	021 Move X30, [X31+16]
	022 Return 
	023 Call 0x1C17F20

Method: System.Void AddRange(System.Collections.Generic.IEnumerable`1<T> collection)

Disassembly:
	0x0319C748 CMP X8, X9
	0x0319C74C B.NE 0x319C79C
	0x0319C750 ADD X31, X29, 0x0
	0x0319C754 LDP X20, X19, [X31 + 0x40]
	0x0319C758 LDP X22, X21, [X31 + 0x30]
	0x0319C75C LDP X24, X23, [X31 + 0x20]
	0x0319C760 LDR X25, [X31 + 0x10]

ISIL:
	001 Move X8, [X2+32]
	002 Move X2, X1
	003 Move X9, [X8+192]
	004 Move W8, [X0+24]
	005 Move X3, [X9+64]
	006 Move W1, W8
	007 Call 0x319C96C, X0, X1, X2
	008 Return 

Method: System.Void Clear()

Disassembly:
	0x0319C764 LDP X29, X30, [X31], #0x50
	0x0319C768 RET
	0x0319C76C BL 0x1C16F28
	0x0319C770 ADRP X0, 0xF5F000
	0x0319C774 LDR X0, [X0 + 0x760]
	0x0319C778 BL 0x1C16D08
	0x0319C77C BL 0x1C16F10
	0x0319C780 MOV X1, X31
	0x0319C784 MOV X20, X0
	0x0319C788 BL 0x3315FB8
	0x0319C78C MOV X0, X20
	0x0319C790 MOV X1, X19
	0x0319C794 BL 0x1C16DEC
	0x0319C798 BL 0x1C16F20
	0x0319C79C BL 0x3EB1B20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W2, [X0+24]
	004 Move X19, X0
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move X0, [X19+16]
	007 Move W1, W31
	008 Move X3, X31
	009 Call Array.Clear, X0, X1, X2
	010 Move [X19+24], W31
	011 Move W8, [X19+28]
	012 Add W8, W8, 1
	013 Move [X19+28], W8
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Return 

Method: System.Boolean Contains(T item)

Disassembly:
	0x0319C7A0 STP X29, X30, [X31 - 0x50]!
	0x0319C7A4 STP X26, X25, [X31 + 0x10]
	0x0319C7A8 STP X24, X23, [X31 + 0x20]
	0x0319C7AC STP X22, X21, [X31 + 0x30]
	0x0319C7B0 STP X20, X19, [X31 + 0x40]
	0x0319C7B4 ADD X29, X31, 0x0
	0x0319C7B8 SUB X31, X31, 0x10
	0x0319C7BC MRS X24, 0xC000
	0x0319C7C0 LDR X8, [X24 + 0x28]
	0x0319C7C4 STUR X8, [X29 - 0x8]
	0x0319C7C8 STUR X1, [X29 - 0x10]
	0x0319C7CC LDR X8, [X2 + 0x20]
	0x0319C7D0 LDR X8, [X8 + 0xC0]
	0x0319C7D4 LDR X9, [X8 + 0x20]
	0x0319C7D8 LDR W21, [X9 + 0xFC]
	0x0319C7DC ADD X9, X31, 0x0
	0x0319C7E0 ADD X10, X21, 0xF
	0x0319C7E4 AND X10, X10, 0x1FFFFFFFF
	0x0319C7E8 SUB X22, X9, X10
	0x0319C7EC ADD X31, X22, 0x0
	0x0319C7F0 LDR X25, [X0 + 0x10]
	0x0319C7F4 CBZ X25, 0x319C8F0
	0x0319C7F8 LDR W26, [X0 + 0x18]
	0x0319C7FC LDR W9, [X25 + 0x18]
	0x0319C800 MOV X20, X2
	0x0319C804 MOV X23, X1
	0x0319C808 MOV X19, X0
	0x0319C80C CMP W26, W9
	0x0319C810 B.NE 0x319C838
	0x0319C814 LDR X2, [X8 + 0x28]
	0x0319C818 ADD W1, W26, 0x1
	0x0319C81C MOV X0, X19
	0x0319C820 LDR X8, [X2]
	0x0319C824 BLR X8
	0x0319C828 LDR X8, [X20 + 0x20]
	0x0319C82C LDR X25, [X19 + 0x10]
	0x0319C830 LDR W26, [X19 + 0x18]
	0x0319C834 LDR X8, [X8 + 0xC0]
	0x0319C838 ADD W9, W26, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {21}
	004 Move X8, [X2+32]
	005 Move W3, [X0+24]
	006 Move W2, W31
	007 Move X8, [X8+192]
	008 Move X8, [X8+72]
	009 Move X8, [X8+32]
	010 Move X9, [X8+192]
	011 Move X8, [X0+16]
	012 Move X4, [X9+80]
	013 Move X0, X8
	014 Call Array.IndexOf, X0, X1, X2, X3
	015 NotImplemented "Instruction ORN not yet implemented."
	016 Move W0, W8
	017 ShiftRight W0, 31
	018 And W0, W0, 0x7FFFFFFF
	019 Move X30, [X31+16]
	020 Return X0
	021 Move W8, [X0+24]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X11, [X0+16]
	024 Compare X11, 0
	025 JumpIfEqual {39}
	026 Move W10, [X11+24]
	027 Move X9, X31
	028 Add X11, X11, 32
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X12, [X11]
	031 Add X9, X9, 1
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction CSET not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Compare X12, 0
	036 JumpIfNotEqual {29}
	037 Move W0, W31
	038 Call 0x1C17F28
	039 Call 0x1C17F20

Method: System.Void CopyTo(T[] array, System.Int32 arrayIndex)

Disassembly:
	0x0319C83C STR W9, [X19 + 0x18]
	0x0319C840 LDR X8, [X8 + 0x20]
	0x0319C844 MOV X0, X22
	0x0319C848 MOV X2, X21
	0x0319C84C LDR W8, [X8 + 0x28]
	0x0319C850 CMP W8, 0x0
	0x0319C854 SUB X8, X29, 0x10
	0x0319C858 CSEL X1, X23, X8, LT

ISIL:
	001 Move X8, [X0+16]
	002 Move W4, [X0+24]
	003 Move W3, W2
	004 Move X2, X1
	005 Move X0, X8
	006 Move W1, W31
	007 Move X5, X31
	008 Call Array.Copy, X0, X1, X2, X3, X4
	009 Return 

Method: System.Int32 IndexOf(T item)

Disassembly:
	0x0319C85C BL 0x3EB1AC0
	0x0319C860 CBZ X25, 0x319C8F0
	0x0319C864 LDR W8, [X25 + 0x18]
	0x0319C868 CMP W26, W8
	0x0319C86C B.CS 0x319C8F4
	0x0319C870 LDR X8, [X25]
	0x0319C874 SXTW X9, W26
	0x0319C878 MOV X1, X22

ISIL:
	001 Move X8, [X2+32]
	002 Move W3, [X0+24]
	003 Move W2, W31
	004 Move X9, [X8+192]
	005 Move X8, [X0+16]
	006 Move X4, [X9+80]
	007 Move X0, X8
	008 Call Array.IndexOf, X0, X1, X2, X3
	009 Return X0

Method: System.Void Insert(System.Int32 index, T item)

Disassembly:
	0x0319C87C MOV X2, X21
	0x0319C880 LDR W8, [X8 + 0x104]
	0x0319C884 NOP
	0x0319C888 MADD X8, X8, X9, X25
	0x0319C88C ADD X0, X8, 0x20
	0x0319C890 BL 0x3EB1AC0
	0x0319C894 LDR X8, [X20 + 0x20]
	0x0319C898 LDR X8, [X8 + 0xC0]
	0x0319C89C LDR X0, [X8 + 0x20]
	0x0319C8A0 LDRB W8, [X0 + 0x135]
	0x0319C8A4 TBNZ X8, 0x0, 0x319C8AC
	0x0319C8A8 BL 0x1C5C684
	0x0319C8AC LDR W8, [X25 + 0x18]
	0x0319C8B0 CMP W26, W8
	0x0319C8B4 B.CS 0x319C8F4
	0x0319C8B8 LDR W8, [X19 + 0x1C]
	0x0319C8BC ADD W8, W8, 0x1
	0x0319C8C0 STR W8, [X19 + 0x1C]
	0x0319C8C4 LDR X8, [X24 + 0x28]
	0x0319C8C8 LDUR X9, [X29 - 0x8]
	0x0319C8CC CMP X8, X9
	0x0319C8D0 B.NE 0x319C8F8
	0x0319C8D4 ADD X31, X29, 0x0
	0x0319C8D8 LDP X20, X19, [X31 + 0x40]
	0x0319C8DC LDP X22, X21, [X31 + 0x30]
	0x0319C8E0 LDP X24, X23, [X31 + 0x20]
	0x0319C8E4 LDP X26, X25, [X31 + 0x10]
	0x0319C8E8 LDP X29, X30, [X31], #0x50
	0x0319C8EC RET
	0x0319C8F0 BL 0x1C16F20
	0x0319C8F4 BL 0x1C16F28
	0x0319C8F8 BL 0x3EB1B20
	0x0319C8FC STR X30, [X31 - 0x10]!
	0x0319C900 LDR X8, [X0 + 0x10]
	0x0319C904 CBZ X8, 0x319C94C
	0x0319C908 LDR X8, [X8 + 0x18]
	0x0319C90C CMP W8, W1
	0x0319C910 B.GE 0x319C944
	0x0319C914 LDR X9, [X2 + 0x20]
	0x0319C918 CMP X8, 0x0
	0x0319C91C LDR X9, [X9 + 0xC0]
	0x0319C920 LDR X2, [X9 + 0x30]
	0x0319C924 UBFM W9, W8, 0x1F, 0x1E
	0x0319C928 MOVZ W8, 0x4
	0x0319C92C CSEL W8, W8, W9, EQ
	0x0319C930 LDR X3, [X2]
	0x0319C934 CMP W8, W1
	0x0319C938 CSEL W1, W1, W8, LT
	0x0319C93C LDR X30, [X31], #0x10
	0x0319C940 BR X3
	0x0319C944 LDR X30, [X31], #0x10
	0x0319C948 RET
	0x0319C94C BL 0x1C16F20
	0x0319C950 LDR X8, [X2 + 0x20]
	0x0319C954 MOV X2, X1
	0x0319C958 LDR X8, [X8 + 0xC0]
	0x0319C95C LDR X3, [X8 + 0x40]
	0x0319C960 LDR W8, [X0 + 0x18]
	0x0319C964 LDR X4, [X3]
	0x0319C968 MOV W1, W8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X9, [X0+16]
	008 Move X19, X0
	009 Compare X9, 0
	010 JumpIfEqual {45}
	011 Move W9, [X9+24]
	012 Move W20, W1
	013 Move X21, X2
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X9, [X3+32]
	016 Add W1, W8, 1
	017 Move X0, X19
	018 Move X9, [X9+192]
	019 Move X2, [X9+40]
	020 Call 0x319C6F8, X0, X1
	021 Move W8, [X19+24]
	022 Subtract W4, W8, W20
	023 Move X0, [X19+16]
	024 Add W3, W20, 1
	025 Move W1, W20
	026 Move X5, X31
	027 Move X2, X0
	028 Call Array.Copy, X0, X1, X2, X3, X4
	029 Move X8, [X19+16]
	030 Compare X8, 0
	031 JumpIfEqual {45}
	032 Move W9, [X8+24]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Add X8, X8, W20
	035 Move [X8+32], X21
	036 Move V0, [X19+24]
	037 NotImplemented "Instruction MOVI not yet implemented."
	038 Add S0, S0, S1
	039 Move [X19+24], D0
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Return 
	045 Call 0x1C17F20
	046 Move X0, 0xF60000
	047 Move X0, [X0+1888]
	048 Move X19, X3
	049 Call 0x1C17D08
	050 Call 0x1C17F10
	051 Move X20, X0
	052 Move X0, 0xF63000
	053 Move X0, [X0+304]
	054 Call 0x1C17D08
	055 Move X1, X0
	056 Move X0, X20
	057 Move X2, X31
	058 Call ArgumentOutOfRangeException..ctor, X0, X1
	059 Move X0, X20
	060 Move X1, X19
	061 Call 0x1C17DEC
	062 Call 0x1C17F28

Method: System.Void InsertRange(System.Int32 index, System.Collections.Generic.IEnumerable`1<T> collection)

Disassembly:
	0x0319C96C BR X4
	0x0319C970 STP X30, X19, [X31 - 0x10]!
	0x0319C974 LDR W2, [X0 + 0x18]
	0x0319C978 MOV X19, X0
	0x0319C97C CMP W2, 0x1
	0x0319C980 B.LT 0x319C998
	0x0319C984 LDR X0, [X19 + 0x10]
	0x0319C988 MOV W1, W31
	0x0319C98C MOV X3, X31
	0x0319C990 BL 0x339FA34
	0x0319C994 STR W31, [X19 + 0x18]
	0x0319C998 LDR W8, [X19 + 0x1C]
	0x0319C99C ADD W8, W8, 0x1
	0x0319C9A0 STR W8, [X19 + 0x1C]
	0x0319C9A4 LDP X30, X19, [X31], #0x10
	0x0319C9A8 RET
	0x0319C9AC STP X29, X30, [X31 - 0x50]!
	0x0319C9B0 STP X26, X25, [X31 + 0x10]
	0x0319C9B4 STP X24, X23, [X31 + 0x20]
	0x0319C9B8 STP X22, X21, [X31 + 0x30]
	0x0319C9BC STP X20, X19, [X31 + 0x40]
	0x0319C9C0 ADD X29, X31, 0x0
	0x0319C9C4 SUB X31, X31, 0x20
	0x0319C9C8 MRS X24, 0xC000
	0x0319C9CC LDR X8, [X24 + 0x28]
	0x0319C9D0 ADD X9, X31, 0x0
	0x0319C9D4 MOV X21, X2
	0x0319C9D8 MOV X23, X1
	0x0319C9DC STUR X8, [X29 - 0x8]
	0x0319C9E0 STUR X1, [X29 - 0x20]
	0x0319C9E4 LDR X26, [X2 + 0x20]
	0x0319C9E8 MOV X19, X0
	0x0319C9EC LDR X8, [X26 + 0xC0]
	0x0319C9F0 LDR X8, [X8 + 0x20]
	0x0319C9F4 LDR W22, [X8 + 0xFC]
	0x0319C9F8 ADD X10, X22, 0xF
	0x0319C9FC AND X10, X10, 0x1FFFFFFFF
	0x0319CA00 SUB X20, X9, X10
	0x0319CA04 ADD X31, X20, 0x0
	0x0319CA08 LDR W8, [X8 + 0x28]
	0x0319CA0C SUB X25, X29, 0x20
	0x0319CA10 MOV X0, X20
	0x0319CA14 MOV X2, X22
	0x0319CA18 CMP W8, 0x0
	0x0319CA1C CSEL X1, X1, X25, LT
	0x0319CA20 BL 0x3EB1AC0
	0x0319CA24 LDR X8, [X26 + 0xC0]
	0x0319CA28 MOV X1, X20
	0x0319CA2C LDR X0, [X8 + 0x20]
	0x0319CA30 BL 0x1C16ED4
	0x0319CA34 TBZ X0, 0x0, 0x319CAB0
	0x0319CA38 LDR X21, [X21 + 0x20]
	0x0319CA3C MOV X0, X20
	0x0319CA40 MOV X2, X22
	0x0319CA44 LDR X8, [X21 + 0xC0]
	0x0319CA48 LDR X8, [X8 + 0x20]
	0x0319CA4C LDR W8, [X8 + 0x28]
	0x0319CA50 CMP W8, 0x0
	0x0319CA54 CSEL X1, X23, X25, LT
	0x0319CA58 BL 0x3EB1AC0
	0x0319CA5C LDR X8, [X21 + 0xC0]
	0x0319CA60 LDR X9, [X8 + 0x20]
	0x0319CA64 LDR X1, [X8 + 0x48]
	0x0319CA68 LDR W8, [X9 + 0x28]
	0x0319CA6C LDR X0, [X1]
	0x0319CA70 TBNZ X8, 0x1F, 0x319CA78
	0x0319CA74 LDR X20, [X20]
	0x0319CA78 STUR X20, [X29 - 0x18]
	0x0319CA7C LDR X8, [X1 + 0x10]
	0x0319CA80 SUB X3, X29, 0x18
	0x0319CA84 SUB X4, X29, 0xC
	0x0319CA88 MOV X2, X19
	0x0319CA8C BLR X8
	0x0319CA90 LDUR W8, [X29 - 0xC]
	0x0319CA94 LDR X9, [X24 + 0x28]
	0x0319CA98 LDUR X10, [X29 - 0x8]
	0x0319CA9C CMP X9, X10
	0x0319CAA0 B.NE 0x319CB60
	0x0319CAA4 ORN W8, W31, W8, 0x0
	0x0319CAA8 UBFM W0, W8, 0x1F, 0x1F
	0x0319CAAC B 0x319CB3C
	0x0319CAB0 LDR W8, [X19 + 0x18]
	0x0319CAB4 CMP W8, 0x1
	0x0319CAB8 B.LT 0x319CB24
	0x0319CABC MOV X23, X31
	0x0319CAC0 LDR X8, [X19 + 0x10]
	0x0319CAC4 CBZ X8, 0x319CB58
	0x0319CAC8 LDR W9, [X8 + 0x18]
	0x0319CACC CMP X23, X9
	0x0319CAD0 B.CS 0x319CB5C
	0x0319CAD4 LDR X9, [X8]
	0x0319CAD8 MOV X0, X20
	0x0319CADC MOV X2, X22
	0x0319CAE0 LDR W9, [X9 + 0x104]
	0x0319CAE4 NOP
	0x0319CAE8 MADD X8, X23, X9, X8
	0x0319CAEC ADD X1, X8, 0x20
	0x0319CAF0 BL 0x3EB1AC0
	0x0319CAF4 LDR X8, [X21 + 0x20]
	0x0319CAF8 MOV X1, X20
	0x0319CAFC LDR X8, [X8 + 0xC0]
	0x0319CB00 LDR X0, [X8 + 0x20]
	0x0319CB04 BL 0x1C16ED4
	0x0319CB08 TBZ X0, 0x0, 0x319CB1C
	0x0319CB0C LDRSW X8, [X19 + 0x18]
	0x0319CB10 ADD X23, X23, 0x1
	0x0319CB14 CMP X23, X8
	0x0319CB18 B.LT 0x319CAC0
	0x0319CB1C EOR W8, W0, 0x1
	0x0319CB20 B 0x319CB28
	0x0319CB24 MOV W8, W31
	0x0319CB28 LDR X9, [X24 + 0x28]
	0x0319CB2C LDUR X10, [X29 - 0x8]
	0x0319CB30 CMP X9, X10
	0x0319CB34 B.NE 0x319CB60
	0x0319CB38 AND W0, W8, 0x1
	0x0319CB3C ADD X31, X29, 0x0
	0x0319CB40 LDP X20, X19, [X31 + 0x40]
	0x0319CB44 LDP X22, X21, [X31 + 0x30]
	0x0319CB48 LDP X24, X23, [X31 + 0x20]
	0x0319CB4C LDP X26, X25, [X31 + 0x10]
	0x0319CB50 LDP X29, X30, [X31], #0x50
	0x0319CB54 RET
	0x0319CB58 BL 0x1C16F20
	0x0319CB5C BL 0x1C16F28
	0x0319CB60 BL 0x3EB1B20
	0x0319CB64 LDR X8, [X0 + 0x10]
	0x0319CB68 LDR W4, [X0 + 0x18]
	0x0319CB6C MOV W3, W2
	0x0319CB70 MOV X2, X1
	0x0319CB74 MOV X0, X8
	0x0319CB78 MOV W1, W31
	0x0319CB7C MOV X5, X31
	0x0319CB80 B 0x339FCE8
	0x0319CB84 STP X29, X30, [X31 - 0x40]!
	0x0319CB88 STR X23, [X31 + 0x10]
	0x0319CB8C STP X22, X21, [X31 + 0x20]
	0x0319CB90 STP X20, X19, [X31 + 0x30]
	0x0319CB94 ADD X29, X31, 0x0
	0x0319CB98 SUB X31, X31, 0x40
	0x0319CB9C MRS X21, 0xC000
	0x0319CBA0 LDR X8, [X21 + 0x28]
	0x0319CBA4 ADD X9, X31, 0x0
	0x0319CBA8 MOV X20, X0
	0x0319CBAC STUR X8, [X29 - 0x8]
	0x0319CBB0 STUR X1, [X29 - 0x40]
	0x0319CBB4 LDR X23, [X2 + 0x20]
	0x0319CBB8 LDR X8, [X23 + 0xC0]
	0x0319CBBC LDR X8, [X8 + 0x20]
	0x0319CBC0 LDR W2, [X8 + 0xFC]
	0x0319CBC4 ADD X10, X2, 0xF
	0x0319CBC8 AND X10, X10, 0x1FFFFFFFF
	0x0319CBCC SUB X19, X9, X10
	0x0319CBD0 ADD X31, X19, 0x0
	0x0319CBD4 LDR W8, [X8 + 0x28]
	0x0319CBD8 LDR X22, [X0 + 0x10]
	0x0319CBDC MOV X0, X19
	0x0319CBE0 CMP W8, 0x0
	0x0319CBE4 SUB X8, X29, 0x40
	0x0319CBE8 CSEL X1, X1, X8, LT
	0x0319CBEC BL 0x3EB1AC0
	0x0319CBF0 LDR X8, [X23 + 0xC0]
	0x0319CBF4 LDR X9, [X8 + 0x20]
	0x0319CBF8 LDR X1, [X8 + 0x50]
	0x0319CBFC LDR W8, [X20 + 0x18]
	0x0319CC00 LDR W9, [X9 + 0x28]
	0x0319CC04 LDR X0, [X1]
	0x0319CC08 TBNZ X9, 0x1F, 0x319CC10
	0x0319CC0C LDR X19, [X19]
	0x0319CC10 STP W8, W31, [X29 - 0x10]
	0x0319CC14 SUB X8, X29, 0xC
	0x0319CC18 SUB X9, X29, 0x10
	0x0319CC1C STP X22, X19, [X29 - 0x38]
	0x0319CC20 STP X8, X9, [X29 - 0x28]
	0x0319CC24 LDR X8, [X1 + 0x10]
	0x0319CC28 SUB X3, X29, 0x38
	0x0319CC2C SUB X4, X29, 0x14
	0x0319CC30 MOV X2, X31
	0x0319CC34 BLR X8
	0x0319CC38 LDUR W0, [X29 - 0x14]
	0x0319CC3C LDR X8, [X21 + 0x28]
	0x0319CC40 LDUR X9, [X29 - 0x8]
	0x0319CC44 CMP X8, X9
	0x0319CC48 B.NE 0x319CC64
	0x0319CC4C ADD X31, X29, 0x0
	0x0319CC50 LDP X20, X19, [X31 + 0x30]
	0x0319CC54 LDP X22, X21, [X31 + 0x20]
	0x0319CC58 LDR X23, [X31 + 0x10]
	0x0319CC5C LDP X29, X30, [X31], #0x40
	0x0319CC60 RET
	0x0319CC64 BL 0x3EB1B20
	0x0319CC68 STP X29, X30, [X31 - 0x50]!
	0x0319CC6C STP X26, X25, [X31 + 0x10]
	0x0319CC70 STP X24, X23, [X31 + 0x20]
	0x0319CC74 STP X22, X21, [X31 + 0x30]
	0x0319CC78 STP X20, X19, [X31 + 0x40]
	0x0319CC7C ADD X29, X31, 0x0
	0x0319CC80 SUB X31, X31, 0x10
	0x0319CC84 MRS X25, 0xC000
	0x0319CC88 LDR X8, [X25 + 0x28]
	0x0319CC8C MOV X19, X3
	0x0319CC90 STUR X8, [X29 - 0x8]
	0x0319CC94 STUR X2, [X29 - 0x10]
	0x0319CC98 LDR X8, [X3 + 0x20]
	0x0319CC9C LDR X8, [X8 + 0xC0]
	0x0319CCA0 LDR X9, [X8 + 0x20]
	0x0319CCA4 LDR W22, [X9 + 0xFC]
	0x0319CCA8 ADD X9, X31, 0x0
	0x0319CCAC ADD X10, X22, 0xF
	0x0319CCB0 AND X10, X10, 0x1FFFFFFFF
	0x0319CCB4 SUB X23, X9, X10
	0x0319CCB8 ADD X31, X23, 0x0
	0x0319CCBC LDR W9, [X0 + 0x18]
	0x0319CCC0 CMP W9, W1
	0x0319CCC4 B.CC 0x319CDE8
	0x0319CCC8 LDR X10, [X0 + 0x10]
	0x0319CCCC MOV X21, X0
	0x0319CCD0 CBZ X10, 0x319CDE0
	0x0319CCD4 LDR W10, [X10 + 0x18]
	0x0319CCD8 MOV X24, X2
	0x0319CCDC MOV W20, W1
	0x0319CCE0 CMP W9, W10
	0x0319CCE4 B.NE 0x319CD00
	0x0319CCE8 LDR X2, [X8 + 0x28]
	0x0319CCEC ADD W1, W9, 0x1
	0x0319CCF0 MOV X0, X21
	0x0319CCF4 LDR X8, [X2]
	0x0319CCF8 BLR X8
	0x0319CCFC LDR W9, [X21 + 0x18]
	0x0319CD00 SUBS W4, W9, W20
	0x0319CD04 B.LE 0x319CD20
	0x0319CD08 LDR X0, [X21 + 0x10]
	0x0319CD0C ADD W3, W20, 0x1
	0x0319CD10 MOV W1, W20
	0x0319CD14 MOV X5, X31
	0x0319CD18 MOV X2, X0
	0x0319CD1C BL 0x339FCE8
	0x0319CD20 LDR X8, [X19 + 0x20]
	0x0319CD24 LDR X26, [X21 + 0x10]
	0x0319CD28 MOV X0, X23
	0x0319CD2C MOV X2, X22
	0x0319CD30 LDR X8, [X8 + 0xC0]
	0x0319CD34 LDR X8, [X8 + 0x20]
	0x0319CD38 LDR W8, [X8 + 0x28]
	0x0319CD3C CMP W8, 0x0
	0x0319CD40 SUB X8, X29, 0x10
	0x0319CD44 CSEL X1, X24, X8, LT
	0x0319CD48 BL 0x3EB1AC0
	0x0319CD4C CBZ X26, 0x319CDE0
	0x0319CD50 LDR W8, [X26 + 0x18]
	0x0319CD54 CMP W8, W20
	0x0319CD58 B.LS 0x319CDE4
	0x0319CD5C LDR X8, [X26]
	0x0319CD60 SXTW X9, W20
	0x0319CD64 MOV X1, X23
	0x0319CD68 MOV X2, X22
	0x0319CD6C LDR W8, [X8 + 0x104]
	0x0319CD70 NOP
	0x0319CD74 MADD X8, X8, X9, X26
	0x0319CD78 ADD X0, X8, 0x20
	0x0319CD7C BL 0x3EB1AC0
	0x0319CD80 LDR X8, [X19 + 0x20]
	0x0319CD84 LDR X8, [X8 + 0xC0]
	0x0319CD88 LDR X0, [X8 + 0x20]
	0x0319CD8C LDRB W8, [X0 + 0x135]
	0x0319CD90 TBNZ X8, 0x0, 0x319CD98
	0x0319CD94 BL 0x1C5C684
	0x0319CD98 LDR W8, [X26 + 0x18]
	0x0319CD9C CMP W8, W20
	0x0319CDA0 B.LS 0x319CDE4
	0x0319CDA4 LDR V0, [X21 + 0x18]
	0x0319CDA8 MOVI V1.2S, 0x1
	0x0319CDAC ADD S0.2S, S0.2S, S1.2S
	0x0319CDB0 STR D0, [X21 + 0x18]
	0x0319CDB4 LDR X8, [X25 + 0x28]
	0x0319CDB8 LDUR X9, [X29 - 0x8]
	0x0319CDBC CMP X8, X9
	0x0319CDC0 B.NE 0x319CE24
	0x0319CDC4 ADD X31, X29, 0x0
	0x0319CDC8 LDP X20, X19, [X31 + 0x40]
	0x0319CDCC LDP X22, X21, [X31 + 0x30]
	0x0319CDD0 LDP X24, X23, [X31 + 0x20]
	0x0319CDD4 LDP X26, X25, [X31 + 0x10]
	0x0319CDD8 LDP X29, X30, [X31], #0x50
	0x0319CDDC RET
	0x0319CDE0 BL 0x1C16F20
	0x0319CDE4 BL 0x1C16F28
	0x0319CDE8 ADRP X0, 0xF5F000
	0x0319CDEC LDR X0, [X0 + 0x760]
	0x0319CDF0 BL 0x1C16D08
	0x0319CDF4 BL 0x1C16F10
	0x0319CDF8 MOV X20, X0
	0x0319CDFC ADRP X0, 0xF62000
	0x0319CE00 LDR X0, [X0 + 0x130]
	0x0319CE04 BL 0x1C16D08
	0x0319CE08 MOV X1, X0
	0x0319CE0C MOV X0, X20
	0x0319CE10 MOV X2, X31
	0x0319CE14 BL 0x3316014
	0x0319CE18 MOV X0, X20
	0x0319CE1C MOV X1, X19
	0x0319CE20 BL 0x1C16DEC
	0x0319CE24 BL 0x3EB1B20
	0x0319CE28 STP X29, X30, [X31 - 0x50]!
	0x0319CE2C STP X26, X25, [X31 + 0x10]
	0x0319CE30 STP X24, X23, [X31 + 0x20]
	0x0319CE34 STP X22, X21, [X31 + 0x30]
	0x0319CE38 STP X20, X19, [X31 + 0x40]
	0x0319CE3C ADD X29, X31, 0x0
	0x0319CE40 SUB X31, X31, 0x20
	0x0319CE44 MRS X25, 0xC000
	0x0319CE48 LDR X8, [X25 + 0x28]
	0x0319CE4C ADRP X22, 0x123F000
	0x0319CE50 MOV X21, X3
	0x0319CE54 MOV X24, X2
	0x0319CE58 STUR X8, [X29 - 0x8]
	0x0319CE5C LDRB W8, [X22 + 0xE06]
	0x0319CE60 MOV W20, W1
	0x0319CE64 MOV X19, X0
	0x0319CE68 TBNZ X8, 0x0, 0x319CE8C
	0x0319CE6C ADRP X0, 0xF57000
	0x0319CE70 LDR X0, [X0 + 0xE00]
	0x0319CE74 BL 0x1C16CF4
	0x0319CE78 ADRP X0, 0xF57000
	0x0319CE7C LDR X0, [X0 + 0xE18]
	0x0319CE80 BL 0x1C16CF4
	0x0319CE84 MOVZ W8, 0x1
	0x0319CE88 STRB W8, [X22 + 0xE06]
	0x0319CE8C LDR X8, [X21 + 0x20]
	0x0319CE90 ADD X10, X31, 0x0
	0x0319CE94 LDR X8, [X8 + 0xC0]
	0x0319CE98 LDR X9, [X8 + 0x20]
	0x0319CE9C LDR W9, [X9 + 0xFC]
	0x0319CEA0 ADD X9, X9, 0xF
	0x0319CEA4 AND X9, X9, 0x1FFFFFFFF
	0x0319CEA8 SUB X23, X10, X9
	0x0319CEAC ADD X31, X23, 0x0
	0x0319CEB0 CBZ X24, 0x319D31C
	0x0319CEB4 LDR W9, [X19 + 0x18]
	0x0319CEB8 CMP W9, W20
	0x0319CEBC B.CC 0x319D350
	0x0319CEC0 LDR X1, [X8 + 0x58]
	0x0319CEC4 LDRB W8, [X1 + 0x135]
	0x0319CEC8 TBNZ X8, 0x0, 0x319CED8
	0x0319CECC MOV X0, X1
	0x0319CED0 BL 0x1C5C684
	0x0319CED4 MOV X1, X0
	0x0319CED8 MOV X0, X24
	0x0319CEDC BL 0x1C16E00
	0x0319CEE0 CBZ X0, 0x319CF44
	0x0319CEE4 LDR X8, [X21 + 0x20]
	0x0319CEE8 MOV X22, X0
	0x0319CEEC LDR X8, [X8 + 0xC0]
	0x0319CEF0 LDR X1, [X8 + 0x58]
	0x0319CEF4 LDRB W8, [X1 + 0x135]
	0x0319CEF8 TBNZ X8, 0x0, 0x319CF08
	0x0319CEFC MOV X0, X1
	0x0319CF00 BL 0x1C5C684
	0x0319CF04 MOV X1, X0
	0x0319CF08 LDR X8, [X22]
	0x0319CF0C LDRH W9, [X8 + 0x12E]
	0x0319CF10 CBZ X9, 0x319CF34

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x1240000
	009 Move W8, [X22+3589]
	010 Move X21, X3
	011 Move X23, X2
	012 Move W20, W1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xF58000
	019 Move X0, [X0+3584]
	020 Call 0x1C17CF4
	021 Move X0, 0xF58000
	022 Move X0, [X0+3608]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+3589], W8
	026 Compare X23, 0
	027 JumpIfEqual {310}
	028 Move W8, [X19+24]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X8, [X21+32]
	031 Move X8, [X8+192]
	032 Move X1, [X8+88]
	033 Move W8, [X1+309]
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {41}
	038 Move X0, X1
	039 Call 0x1C5D684
	040 Move X1, X0
	041 Move X0, X23
	042 Call 0x1C17E00
	043 Compare X0, 0
	044 JumpIfEqual {70}
	045 Move X8, [X21+32]
	046 Move X22, X0
	047 Move X8, [X8+192]
	048 Move X1, [X8+88]
	049 Move W8, [X1+309]
	050 Move TEMP, X8
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {57}
	054 Move X0, X1
	055 Call 0x1C5D684
	056 Move X1, X0
	057 Move X8, [X22]
	058 NotImplemented "Instruction LDRH not yet implemented."
	059 Compare X9, 0
	060 JumpIfEqual {67}
	061 Move X10, [X8+176]
	062 Add X10, X10, 8
	063 NotImplemented "Instruction LDUR not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Subtract X9, X9, 1
	066 Add X10, X10, 16
	067 Move X0, X22
	068 Move W2, W31
	069 Call 0x1C5D788
	070 Move X8, [X21+32]
	071 Move X8, [X8+192]
	072 Move X1, [X8+56]
	073 Move W8, [X1+309]
	074 Move TEMP, X8
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfEqual {81}
	078 Move X0, X1
	079 Call 0x1C5D684
	080 Move X1, X0
	081 Move X8, [X23]
	082 NotImplemented "Instruction LDRH not yet implemented."
	083 Compare X9, 0
	084 JumpIfEqual {91}
	085 Move X10, [X8+176]
	086 Add X10, X10, 8
	087 NotImplemented "Instruction LDUR not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Subtract X9, X9, 1
	090 Add X10, X10, 16
	091 Move X0, X23
	092 Move W2, W31
	093 Call 0x1C5D788
	094 NotImplemented "Instruction LDRSW not yet implemented."
	095 Add X8, X8, X9
	096 Add X0, X8, 312
	097 Move X8, [X0]
	098 Move X1, [X0+8]
	099 Move X0, X22
	100 NotImplemented "Instruction BLR not yet implemented."
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X8, [X21+32]
	103 Move W9, [X19+24]
	104 Move W23, W0
	105 Move X8, [X8+192]
	106 Add W1, W9, W0
	107 Move X0, X19
	108 Move X2, [X8+40]
	109 Call 0x319C6F8, X0, X1
	110 Move W8, [X19+24]
	111 Subtract W4, W8, W20
	112 Move X0, [X19+16]
	113 Add W3, W23, W20
	114 Move W1, W20
	115 Move X5, X31
	116 Move X2, X0
	117 Call Array.Copy, X0, X1, X2, X3, X4
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X8, [X21+32]
	120 Move X8, [X8+192]
	121 Move X0, [X8+24]
	122 Move W8, [X0+309]
	123 Move TEMP, X8
	124 And TEMP, TEMP, 1
	125 Compare TEMP, 1
	126 JumpIfEqual {128}
	127 Call 0x1C5D684
	128 Move W1, W23
	129 Call 0x1C17D6C
	130 Move X8, [X21+32]
	131 Move X21, X0
	132 Move X8, [X8+192]
	133 Move X1, [X8+88]
	134 Move W8, [X1+309]
	135 Move TEMP, X8
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfEqual {142}
	139 Move X0, X1
	140 Call 0x1C5D684
	141 Move X1, X0
	142 Move X8, [X22]
	143 NotImplemented "Instruction LDRH not yet implemented."
	144 Compare X9, 0
	145 JumpIfEqual {152}
	146 Move X10, [X8+176]
	147 Add X10, X10, 8
	148 NotImplemented "Instruction LDUR not yet implemented."
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Subtract X9, X9, 1
	151 Add X10, X10, 16
	152 Move W2, 5
	153 Move X0, X22
	154 Call 0x1C5D788
	155 Move X0, [X19+16]
	156 Move W1, W31
	157 Move W3, W20
	158 Move W4, W20
	159 Move X2, X0
	160 Move X5, X31
	161 Call Array.Copy, X0, X1, X2, X3, X4
	162 Move W8, [X19+24]
	163 Move X0, [X19+16]
	164 Add W1, W23, W20
	165 Move W3, W20
	166 ShiftRight W3, 31
	167 And W3, W3, 0x3FFFFFFF
	168 Subtract W4, W8, W20
	169 Move X2, X0
	170 NotImplemented "Instruction LDRSW not yet implemented."
	171 Add X8, X8, X9
	172 Add X0, X8, 312
	173 Move X8, [X0]
	174 Move X1, [X0+8]
	175 Move X0, X23
	176 NotImplemented "Instruction BLR not yet implemented."
	177 Move X22, X0
	178 Compare X0, 0
	179 JumpIfEqual {337}
	180 Move X23, 0xF58000
	181 Move X23, [X23+3608]
	182 Move X8, [X22]
	183 Move X1, [X23]
	184 NotImplemented "Instruction LDRH not yet implemented."
	185 Compare X9, 0
	186 JumpIfEqual {193}
	187 Move X10, [X8+176]
	188 Add X10, X10, 8
	189 NotImplemented "Instruction LDUR not yet implemented."
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Subtract X9, X9, 1
	192 Add X10, X10, 16
	193 Move X0, X22
	194 Move W2, W31
	195 Call 0x1C5D788
	196 NotImplemented "Instruction LDRSW not yet implemented."
	197 Add X8, X8, X9
	198 Add X0, X8, 312
	199 Move X8, [X0]
	200 Move X1, [X0+8]
	201 Move X0, X22
	202 NotImplemented "Instruction BLR not yet implemented."
	203 Move TEMP, X0
	204 And TEMP, TEMP, 1
	205 Compare TEMP, 1
	206 JumpIfNotEqual {247}
	207 Move X8, [X21+32]
	208 Move X8, [X8+192]
	209 Move X1, [X8+120]
	210 Move W8, [X1+309]
	211 Move TEMP, X8
	212 And TEMP, TEMP, 1
	213 Compare TEMP, 1
	214 JumpIfEqual {218}
	215 Move X0, X1
	216 Call 0x1C5D684
	217 Move X1, X0
	218 Move X8, [X22]
	219 NotImplemented "Instruction LDRH not yet implemented."
	220 Compare X9, 0
	221 JumpIfEqual {228}
	222 Move X10, [X8+176]
	223 Add X10, X10, 8
	224 NotImplemented "Instruction LDUR not yet implemented."
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Subtract X9, X9, 1
	227 Add X10, X10, 16
	228 Move X0, X22
	229 Move W2, W31
	230 Call 0x1C5D788
	231 NotImplemented "Instruction LDRSW not yet implemented."
	232 Add X8, X8, X9
	233 Add X0, X8, 312
	234 Move X8, [X0]
	235 Move X1, [X0+8]
	236 Move X0, X22
	237 NotImplemented "Instruction BLR not yet implemented."
	238 Move X8, [X21+32]
	239 Move X2, X0
	240 Add W24, W20, 1
	241 Move X8, [X8+192]
	242 Move X3, [X8+136]
	243 Move X0, X19
	244 Move W1, W20
	245 Call 0x319C87C, X0, X1, X2
	246 Move W20, W24
	247 Move X20, X31
	248 Move W21, 9
	249 Compare X22, 0
	250 JumpIfEqual {294}
	251 Move X10, 0xF58000
	252 Move X8, [X22]
	253 Move X10, [X10+3584]
	254 NotImplemented "Instruction LDRH not yet implemented."
	255 Move X1, [X10]
	256 Compare X9, 0
	257 JumpIfEqual {264}
	258 Move X10, [X8+176]
	259 Add X10, X10, 8
	260 NotImplemented "Instruction LDUR not yet implemented."
	261 NotImplemented "Instruction CMP not yet implemented."
	262 Subtract X9, X9, 1
	263 Add X10, X10, 16
	264 Move X0, X22
	265 Move W2, W31
	266 Call 0x1C5D788
	267 Move W9, [X10]
	268 Add W9, W9, 5
	269 Add X8, X8, W9
	270 Add X0, X8, 312
	271 Move X8, [X0]
	272 Move X3, [X0+8]
	273 Move X0, X22
	274 Move X1, X21
	275 Move W2, W31
	276 NotImplemented "Instruction BLR not yet implemented."
	277 Move X2, [X19+16]
	278 Move X0, X21
	279 Move W1, W31
	280 Move W3, W20
	281 Move W4, W23
	282 Move X5, X31
	283 Call Array.Copy, X0, X1, X2, X3, X4
	284 Move W8, [X19+24]
	285 Add W8, W8, W23
	286 Move [X19+24], W8
	287 NotImplemented "Instruction LDRSW not yet implemented."
	288 Add X8, X8, X9
	289 Add X0, X8, 312
	290 Move X8, [X0]
	291 Move X1, [X0+8]
	292 Move X0, X22
	293 NotImplemented "Instruction BLR not yet implemented."
	294 Compare X20, 0
	295 JumpIfNotEqual {338}
	296 NotImplemented "Instruction CMP not yet implemented."
	297 Compare W21, 0
	298 JumpIfNotEqual {302}
	299 Move W8, [X19+28]
	300 Add W8, W8, 1
	301 Move [X19+28], W8
	302 Move X20, [X31+48]
	303 Move X19, [X31+56]
	304 Move X22, [X31+32]
	305 Move X21, [X31+40]
	306 Move X24, [X31+16]
	307 Move X23, [X31+24]
	308 Move X30, [X31+64]
	309 Return 
	310 Move X0, 0xF5D000
	311 Move X0, [X0+1320]
	312 Call 0x1C17D08
	313 Call 0x1C17F10
	314 Move X19, X0
	315 Move X0, 0xF80000
	316 Move X0, [X0+2280]
	317 Call 0x1C17D08
	318 Move X1, X0
	319 Move X0, X19
	320 Move X2, X31
	321 Call ArgumentNullException..ctor, X0, X1
	322 Move X0, 0xF60000
	323 Move X0, [X0+1888]
	324 Call 0x1C17D08
	325 Call 0x1C17F10
	326 Move X19, X0
	327 Move X0, 0xF63000
	328 Move X0, [X0+304]
	329 Call 0x1C17D08
	330 Move X1, X0
	331 Move X0, X19
	332 Move X2, X31
	333 Call ArgumentOutOfRangeException..ctor, X0, X1
	334 Move X0, X19
	335 Move X1, X21
	336 Call 0x1C17DEC
	337 Call 0x1C17F20
	338 Move X0, X20
	339 Call 0x1C17F18
	340 Move X21, X0
	341 NotImplemented "Instruction CMP not yet implemented."
	342 Move X0, X21
	343 Call 0x3EB2AD0
	344 Move X20, [X0]
	345 Call 0x3EB2AE0
	346 Move W21, W31
	347 Compare X22, 0
	348 JumpIfNotEqual {251}
	349 Move X20, X31
	350 Move X21, X0
	351 Compare X22, 0
	352 JumpIfEqual {376}
	353 Move X10, 0xF58000
	354 Move X8, [X22]
	355 Move X10, [X10+3584]
	356 NotImplemented "Instruction LDRH not yet implemented."
	357 Move X1, [X10]
	358 Compare X9, 0
	359 JumpIfEqual {366}
	360 Move X10, [X8+176]
	361 Add X10, X10, 8
	362 NotImplemented "Instruction LDUR not yet implemented."
	363 NotImplemented "Instruction CMP not yet implemented."
	364 Subtract X9, X9, 1
	365 Add X10, X10, 16
	366 Move X0, X22
	367 Move W2, W31
	368 Call 0x1C5D788
	369 NotImplemented "Instruction LDRSW not yet implemented."
	370 Add X8, X8, X9
	371 Add X0, X8, 312
	372 Move X8, [X0]
	373 Move X1, [X0+8]
	374 Move X0, X22
	375 NotImplemented "Instruction BLR not yet implemented."
	376 Compare X20, 0
	377 JumpIfNotEqual {380}
	378 Move X0, X21
	379 Call 0x1D2D690
	380 Move X0, X20
	381 Call 0x1C17F18
	382 Call 0x1991590

Method: System.Boolean Remove(T item)

Disassembly:
	0x0319CF14 LDR X10, [X8 + 0xB0]
	0x0319CF18 ADD X10, X10, 0x8
	0x0319CF1C LDUR X11, [X10 - 0x8]
	0x0319CF20 CMP X11, X1
	0x0319CF24 B.EQ 0x319CFA0
	0x0319CF28 SUBS X9, X9, 0x1
	0x0319CF2C ADD X10, X10, 0x10
	0x0319CF30 B.NE 0x319CF1C
	0x0319CF34 MOV X0, X22
	0x0319CF38 MOV W2, W31
	0x0319CF3C BL 0x1C5C788
	0x0319CF40 B 0x319CFAC
	0x0319CF44 LDR X8, [X21 + 0x20]
	0x0319CF48 LDR X8, [X8 + 0xC0]
	0x0319CF4C LDR X1, [X8 + 0x38]
	0x0319CF50 LDRB W8, [X1 + 0x135]
	0x0319CF54 TBNZ X8, 0x0, 0x319CF64
	0x0319CF58 MOV X0, X1
	0x0319CF5C BL 0x1C5C684
	0x0319CF60 MOV X1, X0
	0x0319CF64 LDR X8, [X24]
	0x0319CF68 LDRH W9, [X8 + 0x12E]
	0x0319CF6C CBZ X9, 0x319CF90
	0x0319CF70 LDR X10, [X8 + 0xB0]
	0x0319CF74 ADD X10, X10, 0x8
	0x0319CF78 LDUR X11, [X10 - 0x8]
	0x0319CF7C CMP X11, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X19, X0
	007 Move X0, [X0+16]
	008 Move W3, [X19+24]
	009 Move X8, [X8+192]
	010 Move X20, X2
	011 Move W2, W31
	012 Move X8, [X8+72]
	013 Move X8, [X8+32]
	014 Move X8, [X8+192]
	015 Move X4, [X8+80]
	016 Call Array.IndexOf, X0, X1, X2, X3
	017 Move W21, W0
	018 Move TEMP, X0
	019 And TEMP, TEMP, -2147483648
	020 Compare TEMP, -2147483648
	021 JumpIfEqual {28}
	022 Move X8, [X20+32]
	023 Move X0, X19
	024 Move W1, W21
	025 Move X8, [X8+192]
	026 Move X2, [X8+144]
	027 Call 0x319D11C, X0, X1
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 NotImplemented "Instruction ORN not yet implemented."
	031 Move W0, W8
	032 ShiftRight W0, 31
	033 And W0, W0, 0x7FFFFFFF
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return X0

Method: System.Int32 RemoveAll(System.Predicate`1<T> match)

Disassembly:
	0x0319CF80 B.EQ 0x319D0C8
	0x0319CF84 SUBS X9, X9, 0x1
	0x0319CF88 ADD X10, X10, 0x10
	0x0319CF8C B.NE 0x319CF78
	0x0319CF90 MOV X0, X24
	0x0319CF94 MOV W2, W31
	0x0319CF98 BL 0x1C5C788
	0x0319CF9C B 0x319D0D4
	0x0319CFA0 LDRSW X9, [X10]
	0x0319CFA4 ADD X8, X8, X9, 0x4, LSL
	0x0319CFA8 ADD X0, X8, 0x138
	0x0319CFAC LDP X8, X1, [X0]
	0x0319CFB0 MOV X0, X22
	0x0319CFB4 BLR X8
	0x0319CFB8 CMP W0, 0x1
	0x0319CFBC B.LT 0x319D2E4
	0x0319CFC0 LDR X8, [X21 + 0x20]
	0x0319CFC4 MOV W23, W0
	0x0319CFC8 LDR X8, [X8 + 0xC0]
	0x0319CFCC LDR X2, [X8 + 0x28]
	0x0319CFD0 LDR W8, [X19 + 0x18]
	0x0319CFD4 LDR X9, [X2]
	0x0319CFD8 ADD W1, W8, W0
	0x0319CFDC MOV X0, X19
	0x0319CFE0 BLR X9
	0x0319CFE4 LDR W8, [X19 + 0x18]
	0x0319CFE8 SUBS W4, W8, W20
	0x0319CFEC B.LE 0x319D008
	0x0319CFF0 LDR X0, [X19 + 0x10]
	0x0319CFF4 ADD W3, W23, W20
	0x0319CFF8 MOV W1, W20
	0x0319CFFC MOV X5, X31
	0x0319D000 MOV X2, X0
	0x0319D004 BL 0x339FCE8
	0x0319D008 CMP X19, X22
	0x0319D00C B.EQ 0x319D090
	0x0319D010 LDR X8, [X21 + 0x20]
	0x0319D014 LDR X8, [X8 + 0xC0]
	0x0319D018 LDR X0, [X8 + 0x18]
	0x0319D01C LDRB W8, [X0 + 0x135]
	0x0319D020 TBNZ X8, 0x0, 0x319D028
	0x0319D024 BL 0x1C5C684
	0x0319D028 MOV W1, W23
	0x0319D02C BL 0x1C16D6C
	0x0319D030 LDR X8, [X21 + 0x20]
	0x0319D034 MOV X21, X0
	0x0319D038 LDR X8, [X8 + 0xC0]
	0x0319D03C LDR X1, [X8 + 0x58]
	0x0319D040 LDRB W8, [X1 + 0x135]
	0x0319D044 TBNZ X8, 0x0, 0x319D054
	0x0319D048 MOV X0, X1
	0x0319D04C BL 0x1C5C684
	0x0319D050 MOV X1, X0
	0x0319D054 LDR X8, [X22]
	0x0319D058 LDRH W9, [X8 + 0x12E]
	0x0319D05C CBZ X9, 0x319D080
	0x0319D060 LDR X10, [X8 + 0xB0]
	0x0319D064 ADD X10, X10, 0x8
	0x0319D068 LDUR X11, [X10 - 0x8]
	0x0319D06C CMP X11, X1
	0x0319D070 B.EQ 0x319D26C
	0x0319D074 SUBS X9, X9, 0x1
	0x0319D078 ADD X10, X10, 0x10
	0x0319D07C B.NE 0x319D068
	0x0319D080 MOVZ W2, 0x5
	0x0319D084 MOV X0, X22
	0x0319D088 BL 0x1C5C788
	0x0319D08C B 0x319D27C
	0x0319D090 LDR X0, [X19 + 0x10]
	0x0319D094 MOV W1, W31
	0x0319D098 MOV W3, W20
	0x0319D09C MOV W4, W20
	0x0319D0A0 MOV X2, X0
	0x0319D0A4 MOV X5, X31
	0x0319D0A8 BL 0x339FCE8
	0x0319D0AC LDR W8, [X19 + 0x18]
	0x0319D0B0 LDR X0, [X19 + 0x10]
	0x0319D0B4 ADD W1, W23, W20
	0x0319D0B8 UBFM W3, W20, 0x1F, 0x1E
	0x0319D0BC SUB W4, W8, W20
	0x0319D0C0 MOV X2, X0
	0x0319D0C4 B 0x319D2A4
	0x0319D0C8 LDRSW X9, [X10]
	0x0319D0CC ADD X8, X8, X9, 0x4, LSL
	0x0319D0D0 ADD X0, X8, 0x138
	0x0319D0D4 LDP X8, X1, [X0]
	0x0319D0D8 MOV X0, X24
	0x0319D0DC BLR X8
	0x0319D0E0 MOV X22, X0
	0x0319D0E4 CBZ X0, 0x319D38C
	0x0319D0E8 ADRP X24, 0xF56000
	0x0319D0EC LDR X24, [X24 + 0xE18]
	0x0319D0F0 SUB X26, X29, 0xC
	0x0319D0F4 LDR X8, [X22]
	0x0319D0F8 LDR X1, [X24]
	0x0319D0FC LDRH W9, [X8 + 0x12E]
	0x0319D100 CBZ X9, 0x319D124
	0x0319D104 LDR X10, [X8 + 0xB0]
	0x0319D108 ADD X10, X10, 0x8
	0x0319D10C LDUR X11, [X10 - 0x8]
	0x0319D110 CMP X11, X1
	0x0319D114 B.EQ 0x319D134
	0x0319D118 SUBS X9, X9, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Compare X1, 0
	007 JumpIfEqual {89}
	008 Move W8, [X0+24]
	009 Move X20, X1
	010 Move X19, X0
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X22, X31
	013 Move X8, [X19+16]
	014 Compare X8, 0
	015 JumpIfEqual {88}
	016 Move W9, [X8+24]
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Add X8, X8, X22
	019 Move X9, [X20+24]
	020 Move X0, [X20+64]
	021 Move X1, [X8+32]
	022 Move X2, [X20+40]
	023 NotImplemented "Instruction BLR not yet implemented."
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {32}
	028 NotImplemented "Instruction LDRSW not yet implemented."
	029 Add X22, X22, 1
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move W22, W31
	032 Move W8, [X19+24]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W21, W22
	035 Add W22, W22, 1
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X22, W22
	038 Move X8, [X19+16]
	039 Compare X8, 0
	040 JumpIfEqual {88}
	041 Move W9, [X8+24]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Add X8, X8, X22
	044 Move X9, [X20+24]
	045 Move X0, [X20+64]
	046 Move X1, [X8+32]
	047 Move X2, [X20+40]
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {56}
	053 NotImplemented "Instruction LDRSW not yet implemented."
	054 Add X22, X22, 1
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move W8, [X19+24]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X9, [X19+16]
	059 Compare X9, 0
	060 JumpIfEqual {88}
	061 Move W10, [X9+24]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Add X9, X9, 32
	065 Move X10, [X9]
	066 Add W11, W21, 1
	067 Move [X9], X10
	068 Move W21, W11
	069 Move W0, W31
	070 Move X0, [X19+16]
	071 Subtract W2, W8, W21
	072 Move W1, W21
	073 Move X3, X31
	074 Call Array.Clear, X0, X1, X2
	075 Move W9, [X19+24]
	076 Move W8, [X19+28]
	077 Add W8, W8, 1
	078 Subtract W0, W9, W21
	079 Move [X19+24], W21
	080 Move [X19+28], W8
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X22, [X31+16]
	084 Move X21, [X31+24]
	085 Move X30, [X31+48]
	086 Return X0
	087 Call 0x1C17F28
	088 Call 0x1C17F20
	089 Move X0, 0xF5C000
	090 Move X0, [X0+1320]
	091 Move X21, X2
	092 Call 0x1C17D08
	093 Call 0x1C17F10
	094 Move X19, X0
	095 Move X0, 0xF7F000
	096 Move X0, [X0+1912]
	097 Call 0x1C17D08
	098 Move X1, X0
	099 Move X0, X19
	100 Move X2, X31
	101 Call ArgumentNullException..ctor, X0, X1
	102 Move X0, X19
	103 Move X1, X21
	104 Call 0x1C17DEC

Method: System.Void RemoveAt(System.Int32 index)

Disassembly:
	0x0319D11C ADD X10, X10, 0x10
	0x0319D120 B.NE 0x319D10C
	0x0319D124 MOV X0, X22
	0x0319D128 MOV W2, W31
	0x0319D12C BL 0x1C5C788
	0x0319D130 B 0x319D140
	0x0319D134 LDRSW X9, [X10]
	0x0319D138 ADD X8, X8, X9, 0x4, LSL
	0x0319D13C ADD X0, X8, 0x138
	0x0319D140 LDP X8, X1, [X0]
	0x0319D144 MOV X0, X22
	0x0319D148 BLR X8
	0x0319D14C TBZ X0, 0x0, 0x319D218
	0x0319D150 LDR X8, [X21 + 0x20]
	0x0319D154 LDR X8, [X8 + 0xC0]
	0x0319D158 LDR X1, [X8 + 0x78]
	0x0319D15C LDRB W8, [X1 + 0x135]
	0x0319D160 TBNZ X8, 0x0, 0x319D170
	0x0319D164 MOV X0, X1
	0x0319D168 BL 0x1C5C684
	0x0319D16C MOV X1, X0
	0x0319D170 LDR X8, [X22]
	0x0319D174 LDRH W9, [X8 + 0x12E]
	0x0319D178 CBZ X9, 0x319D19C
	0x0319D17C LDR X10, [X8 + 0xB0]
	0x0319D180 ADD X10, X10, 0x8
	0x0319D184 LDUR X11, [X10 - 0x8]
	0x0319D188 CMP X11, X1
	0x0319D18C B.EQ 0x319D1AC
	0x0319D190 SUBS X9, X9, 0x1
	0x0319D194 ADD X10, X10, 0x10
	0x0319D198 B.NE 0x319D184
	0x0319D19C MOV X0, X22
	0x0319D1A0 MOV W2, W31
	0x0319D1A4 BL 0x1C5C788
	0x0319D1A8 B 0x319D1B8
	0x0319D1AC LDRSW X9, [X10]
	0x0319D1B0 ADD X8, X8, X9, 0x4, LSL
	0x0319D1B4 ADD X0, X8, 0x138
	0x0319D1B8 STUR X23, [X29 - 0x20]
	0x0319D1BC LDR X1, [X0 + 0x8]
	0x0319D1C0 LDP X0, X8, [X1 + 0x8]
	0x0319D1C4 SUB X3, X29, 0x20
	0x0319D1C8 MOV X2, X22
	0x0319D1CC MOV X4, X23
	0x0319D1D0 BLR X8
	0x0319D1D4 LDR X8, [X21 + 0x20]
	0x0319D1D8 MOV X4, X23

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+24]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Subtract W8, W8, 1
	007 Move X19, X0
	008 Move W3, W1
	009 Subtract W4, W8, W1
	010 Move [X0+24], W8
	011 Move X0, [X19+16]
	012 Add W1, W3, 1
	013 Move X5, X31
	014 Move X2, X0
	015 Call Array.Copy, X0, X1, X2, X3, X4
	016 Move W8, [X19+24]
	017 Move X9, [X19+16]
	018 Compare X9, 0
	019 JumpIfEqual {47}
	020 Move W10, [X9+24]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Add X8, X9, W8
	023 Move [X8+32], X31
	024 Move W8, [X19+28]
	025 Add W8, W8, 1
	026 Move [X19+28], W8
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Return 
	031 Move X0, 0xF5F000
	032 Move X0, [X0+1888]
	033 Move X19, X2
	034 Call 0x1C17D08
	035 Call 0x1C17F10
	036 Move X20, X0
	037 Move X0, 0xF62000
	038 Move X0, [X0+304]
	039 Call 0x1C17D08
	040 Move X1, X0
	041 Move X0, X20
	042 Move X2, X31
	043 Call ArgumentOutOfRangeException..ctor, X0, X1
	044 Move X0, X20
	045 Move X1, X19
	046 Call 0x1C17DEC
	047 Call 0x1C17F20
	048 Call 0x1C17F28

Method: T[] ToArray()

Disassembly:
	0x0319D1DC LDR X8, [X8 + 0xC0]
	0x0319D1E0 LDR X9, [X8 + 0x20]
	0x0319D1E4 LDR W9, [X9 + 0x28]
	0x0319D1E8 TBNZ X9, 0x1F, 0x319D1F0
	0x0319D1EC LDR X4, [X23]
	0x0319D1F0 LDR X1, [X8 + 0x88]
	0x0319D1F4 LDR X0, [X1]
	0x0319D1F8 STUR W20, [X29 - 0xC]
	0x0319D1FC STP X26, X4, [X29 - 0x20]
	0x0319D200 LDR X8, [X1 + 0x10]
	0x0319D204 SUB X3, X29, 0x20
	0x0319D208 MOV X2, X19
	0x0319D20C BLR X8
	0x0319D210 ADD W20, W20, 0x1
	0x0319D214 B 0x319D0F4
	0x0319D218 MOV X20, X31
	0x0319D21C MOVZ W21, 0x9
	0x0319D220 CBZ X22, 0x319D2D4
	0x0319D224 ADRP X10, 0xF56000
	0x0319D228 LDR X8, [X22]
	0x0319D22C LDR X10, [X10 + 0xE00]
	0x0319D230 LDRH W9, [X8 + 0x12E]
	0x0319D234 LDR X1, [X10]
	0x0319D238 CBZ X9, 0x319D25C
	0x0319D23C LDR X10, [X8 + 0xB0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+32]
	005 Move X19, X0
	006 Move W20, [X19+24]
	007 Move X8, [X8+192]
	008 Move X0, [X8+24]
	009 Move W8, [X0+309]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {15}
	014 Call 0x1C5D684
	015 Move W1, W20
	016 Call 0x1C17D6C
	017 Move X8, [X19+16]
	018 Move W4, [X19+24]
	019 Move X19, X0
	020 Move W1, W31
	021 Move X0, X8
	022 Move X2, X19
	023 Move W3, W31
	024 Move X5, X31
	025 Call Array.Copy, X0, X1, X2, X3, X4
	026 Move X0, X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Return X0

Method: System.Void .cctor()

Disassembly:
	0x0319D240 ADD X10, X10, 0x8
	0x0319D244 LDUR X11, [X10 - 0x8]
	0x0319D248 CMP X11, X1
	0x0319D24C B.EQ 0x319D2BC
	0x0319D250 SUBS X9, X9, 0x1
	0x0319D254 ADD X10, X10, 0x10
	0x0319D258 B.NE 0x319D244
	0x0319D25C MOV X0, X22
	0x0319D260 MOV W2, W31
	0x0319D264 BL 0x1C5C788
	0x0319D268 B 0x319D2C8
	0x0319D26C LDR W9, [X10]
	0x0319D270 ADD W9, W9, 0x5
	0x0319D274 ADD X8, X8, W9, 0x4, SXTW
	0x0319D278 ADD X0, X8, 0x138
	0x0319D27C LDP X8, X3, [X0]
	0x0319D280 MOV X0, X22
	0x0319D284 MOV X1, X21
	0x0319D288 MOV W2, W31
	0x0319D28C BLR X8
	0x0319D290 LDR X2, [X19 + 0x10]
	0x0319D294 MOV X0, X21
	0x0319D298 MOV W1, W31
	0x0319D29C MOV W3, W20
	0x0319D2A0 MOV W4, W23
	0x0319D2A4 MOV X5, X31
	0x0319D2A8 BL 0x339FCE8
	0x0319D2AC LDR W8, [X19 + 0x18]
	0x0319D2B0 ADD W8, W8, W23
	0x0319D2B4 STR W8, [X19 + 0x18]
	0x0319D2B8 B 0x319D2E4
	0x0319D2BC LDRSW X9, [X10]
	0x0319D2C0 ADD X8, X8, X9, 0x4, LSL
	0x0319D2C4 ADD X0, X8, 0x138
	0x0319D2C8 LDP X8, X1, [X0]
	0x0319D2CC MOV X0, X22
	0x0319D2D0 BLR X8
	0x0319D2D4 CBNZ X20, 0x319D390
	0x0319D2D8 CMP W21, 0x9
	0x0319D2DC B.EQ 0x319D2E4
	0x0319D2E0 CBNZ W21, 0x319D2F0
	0x0319D2E4 LDR W8, [X19 + 0x1C]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+32]
	006 Move W8, [X0+309]
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {12}
	011 Call 0x1C5D684
	012 Move X8, [X0+192]
	013 Move X0, [X8+24]
	014 Move W8, [X0+309]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {20}
	019 Call 0x1C5D684
	020 Move W1, W31
	021 Call 0x1C17D6C
	022 Move X8, [X19+32]
	023 Move X20, X0
	024 Move W9, [X8+309]
	025 Move TEMP, X9
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {32}
	029 Move X0, X8
	030 Call 0x1C5D684
	031 Move X8, X0
	032 Move X8, [X8+192]
	033 Move X0, [X8+16]
	034 Move W8, [X0+309]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {40}
	039 Call 0x1C5D684
	040 Move X8, [X0+184]
	041 Move [X8], X20
	042 Move X0, [X19+32]
	043 Move W8, [X0+309]
	044 Move TEMP, X8
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {49}
	048 Call 0x1C5D684
	049 Move X8, [X0+192]
	050 Move X0, [X8+16]
	051 Move W8, [X0+309]
	052 Move TEMP, X8
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {61}
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X30, [X31+32]
	059 Call 0x1C5D684
	060 Return 
	061 Move X20, [X31+16]
	062 Move X19, [X31+24]
	063 Move X30, [X31+32]
	064 Return 

