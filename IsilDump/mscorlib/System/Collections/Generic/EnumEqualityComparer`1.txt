Type: System.Collections.Generic.EnumEqualityComparer`1

Method: System.Boolean Equals(T x, T y)

Disassembly:
	0x02BA9CDC LDR X10, [X8 + 0xB0]
	0x02BA9CE0 ADD X10, X10, 0x8
	0x02BA9CE4 LDUR X11, [X10 - 0x8]
	0x02BA9CE8 CMP X11, X1
	0x02BA9CEC B.EQ 0x2BA9D0C
	0x02BA9CF0 SUBS X9, X9, 0x1
	0x02BA9CF4 ADD X10, X10, 0x10
	0x02BA9CF8 B.NE 0x2BA9CE4
	0x02BA9CFC MOV X0, X22
	0x02BA9D00 MOV W2, W31
	0x02BA9D04 BL 0x1C5C788
	0x02BA9D08 B 0x2BA9D18
	0x02BA9D0C LDRSW X9, [X10]
	0x02BA9D10 ADD X8, X8, X9, 0x4, LSL
	0x02BA9D14 ADD X0, X8, 0x138
	0x02BA9D18 LDP X8, X1, [X0]
	0x02BA9D1C MOV X0, X22
	0x02BA9D20 BLR X8
	0x02BA9D24 ADRP X8, 0x1575000
	0x02BA9D28 LDR X8, [X8 + 0xBC8]
	0x02BA9D2C MOV X23, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X3+32]
	005 Move W0, W1
	006 Move X19, X3
	007 Move W20, W2
	008 Move X8, [X8+192]
	009 Move X8, [X8+8]
	010 Move X1, X8
	011 Call 0x220E404, X0
	012 Move X8, [X19+32]
	013 Move W19, W0
	014 Move W0, W20
	015 Move X8, [X8+192]
	016 Move X1, [X8+8]
	017 Call 0x220E404, X0
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 NotImplemented "Instruction CSET not yet implemented."
	022 Move X30, [X31+32]
	023 Return X0

Method: System.Int32 GetHashCode(T obj)

Disassembly:
	0x02BA9D30 LDR X1, [X8]
	0x02BA9D34 BL 0x21A891C
	0x02BA9D38 CBZ X0, 0x2BA9D44
	0x02BA9D3C LDR X25, [X0 + 0x18]
	0x02BA9D40 B 0x2BA9DC0
	0x02BA9D44 LDR X8, [X19 + 0x20]
	0x02BA9D48 LDR X8, [X8 + 0xC0]
	0x02BA9D4C LDR X0, [X8 + 0x20]
	0x02BA9D50 LDRB W8, [X0 + 0x135]
	0x02BA9D54 TBNZ X8, 0x0, 0x2BA9D5C
	0x02BA9D58 BL 0x1C5C684
	0x02BA9D5C LDR W8, [X0 + 0xE0]
	0x02BA9D60 CBNZ W8, 0x2BA9D68

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X2+32]
	003 Move W0, W1
	004 Move X8, [X8+192]
	005 Move X8, [X8+8]
	006 Move X1, X8
	007 Call 0x220E404, X0
	008 Move [X31+12], W0
	009 Add X0, X31, 12
	010 Move X1, X31
	011 Call Int32.GetHashCode, X0
	012 Move X30, [X31+16]
	013 Return X0

Method: System.Void .ctor()

Disassembly:
	0x02BA9D64 BL 0x1C16DFC
	0x02BA9D68 LDR X8, [X19 + 0x20]
	0x02BA9D6C LDR X8, [X8 + 0xC0]
	0x02BA9D70 LDR X0, [X8 + 0x20]

ISIL:
	001 Move X8, [X1+32]
	002 Move X8, [X8+192]
	003 Move X1, [X8+16]
	004 Call EqualityComparer`1<ByteEnum>..ctor, X0
	005 Return 

Method: System.Void .ctor(System.Runtime.Serialization.SerializationInfo information, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x02BA9D74 LDRB W8, [X0 + 0x135]
	0x02BA9D78 TBNZ X8, 0x0, 0x2BA9D80
	0x02BA9D7C BL 0x1C5C684
	0x02BA9D80 CBZ X23, 0x2BAA01C

ISIL:
	001 Move X8, [X4+32]
	002 Move X8, [X8+192]
	003 Move X1, [X8+16]
	004 Call EqualityComparer`1<ByteEnum>..ctor, X0
	005 Return 

Method: System.Void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x02BA9D84 LDR X8, [X0 + 0xB8]
	0x02BA9D88 LDR X9, [X23]
	0x02BA9D8C LDR X24, [X8]
	0x02BA9D90 LDP X8, X1, [X9 + 0x1A8]
	0x02BA9D94 MOV X0, X23
	0x02BA9D98 BLR X8
	0x02BA9D9C MOV X1, X0
	0x02BA9DA0 CBZ X24, 0x2BAA020
	0x02BA9DA4 ADRP X8, 0x1575000
	0x02BA9DA8 LDR X8, [X8 + 0xC28]
	0x02BA9DAC LDR X2, [X8]
	0x02BA9DB0 MOV X0, X24
	0x02BA9DB4 MOV X3, X31
	0x02BA9DB8 BL 0x3632EA0
	0x02BA9DBC MOV X25, X0
	0x02BA9DC0 ADRP X8, 0x1575000
	0x02BA9DC4 LDR X8, [X8 + 0xBD0]
	0x02BA9DC8 LDR X0, [X8]
	0x02BA9DCC BL 0x1C16F10
	0x02BA9DD0 MOV X24, X0
	0x02BA9DD4 MOV X1, X25
	0x02BA9DD8 MOV X2, X31
	0x02BA9DDC BL 0x3C6CE5C
	0x02BA9DE0 LDR X0, [X31 + 0x38]
	0x02BA9DE4 CBZ X0, 0x2BAA010
	0x02BA9DE8 LDR W10, [X0 + 0x1C]
	0x02BA9DEC LDR X8, [X0 + 0x10]
	0x02BA9DF0 LDR X9, [X28]
	0x02BA9DF4 ADD W10, W10, 0x1
	0x02BA9DF8 STR W10, [X0 + 0x1C]
	0x02BA9DFC CBZ X8, 0x2BAA008
	0x02BA9E00 LDRSW X10, [X0 + 0x18]
	0x02BA9E04 LDR W11, [X8 + 0x18]
	0x02BA9E08 CMP W10, W11
	0x02BA9E0C B.CS 0x2BA9E24
	0x02BA9E10 ADD W9, W10, 0x1
	0x02BA9E14 ADD X8, X8, X10, 0x3, LSL
	0x02BA9E18 STR W9, [X0 + 0x18]
	0x02BA9E1C STR X24, [X8 + 0x20]
	0x02BA9E20 B 0x2BA9E38
	0x02BA9E24 LDR X8, [X9 + 0x20]
	0x02BA9E28 LDR X8, [X8 + 0xC0]
	0x02BA9E2C LDR X2, [X8 + 0x70]
	0x02BA9E30 MOV X1, X24
	0x02BA9E34 BL 0x301BF90
	0x02BA9E38 CBZ X23, 0x2BAA014
	0x02BA9E3C LDR X8, [X23]
	0x02BA9E40 LDR X24, [X31 + 0x20]
	0x02BA9E44 LDP X9, X1, [X8 + 0x1A8]
	0x02BA9E48 MOV X0, X23
	0x02BA9E4C BLR X9
	0x02BA9E50 MOV X23, X0
	0x02BA9E54 LDR X0, [X20]
	0x02BA9E58 LDR W8, [X0 + 0xE0]
	0x02BA9E5C CBNZ W8, 0x2BA9E64
	0x02BA9E60 BL 0x1C16DFC
	0x02BA9E64 MOV X0, X21
	0x02BA9E68 MOV X1, X23
	0x02BA9E6C MOV X2, X31
	0x02BA9E70 BL 0x33AF150
	0x02BA9E74 CBZ X24, 0x2BAA004
	0x02BA9E78 CBZ X0, 0x2BAA00C
	0x02BA9E7C LDR X8, [X0]
	0x02BA9E80 LDR X1, [X26]
	0x02BA9E84 LDR X8, [X8 + 0x40]
	0x02BA9E88 LDR X9, [X1 + 0x40]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x1833000
	008 Move X22, 0x154B000
	009 Move W8, [X21+1503]
	010 Move X22, [X22+1728]
	011 Move X20, X4
	012 Move X19, X1
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x154B000
	018 Move X0, [X0+3576]
	019 Call 0x1C17CF4
	020 Move X0, 0x154B000
	021 Move X0, [X0+1728]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+1503], W8
	025 Move X8, [X20+32]
	026 Move X0, [X22]
	027 Move X23, 0x154B000
	028 Move X8, [X8+192]
	029 Move W9, [X0+224]
	030 Move X21, [X8+32]
	031 Move X23, [X23+3576]
	032 Compare W9, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X21
	036 Move X1, X31
	037 Call Type.GetTypeFromHandle, X0
	038 Move X8, [X23]
	039 Move X21, X0
	040 Move W9, [X8+224]
	041 Compare W9, 0
	042 JumpIfNotEqual {45}
	043 Move X0, X8
	044 Call 0x1C17DFC
	045 Move X0, X21
	046 Move X1, X31
	047 Call Enum.GetUnderlyingType, X0
	048 Move X1, X31
	049 Call Type.GetTypeCode, X0
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X30, [X31+48]
	056 Move X23, [X31+56]
	057 Return 
	058 Move X8, [X20+32]
	059 Move X0, [X22]
	060 Move X8, [X8+192]
	061 Move W9, [X0+224]
	062 Move X20, [X8+40]
	063 Compare W9, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Move X0, X20
	067 Move X1, X31
	068 Call Type.GetTypeFromHandle, X0
	069 Compare X19, 0
	070 JumpIfEqual {82}
	071 Move X1, X0
	072 Move X0, X19
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X22, [X31+16]
	076 Move X21, [X31+24]
	077 Move X2, X31
	078 Move X30, [X31+48]
	079 Move X23, [X31+56]
	080 Call SerializationInfo.SetType, X0, X1
	081 Return 
	082 Call 0x1C17F20

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x02BA9E8C CMP X8, X9
	0x02BA9E90 B.NE 0x2BAA000
	0x02BA9E94 BL 0x1C16E08
	0x02BA9E98 LDR W10, [X24 + 0x1C]
	0x02BA9E9C LDR W1, [X0]
	0x02BA9EA0 LDR X8, [X24 + 0x10]
	0x02BA9EA4 LDR X9, [X27]
	0x02BA9EA8 ADD W10, W10, 0x1
	0x02BA9EAC STR W10, [X24 + 0x1C]
	0x02BA9EB0 CBZ X8, 0x2BAA018
	0x02BA9EB4 LDRSW X10, [X24 + 0x18]
	0x02BA9EB8 LDR W11, [X8 + 0x18]
	0x02BA9EBC CMP W10, W11
	0x02BA9EC0 B.CS 0x2BA9ED8
	0x02BA9EC4 ADD W9, W10, 0x1
	0x02BA9EC8 ADD X8, X8, X10, 0x2, LSL
	0x02BA9ECC STR W9, [X24 + 0x18]
	0x02BA9ED0 STR W1, [X8 + 0x20]
	0x02BA9ED4 B 0x2BA9C68
	0x02BA9ED8 LDR X8, [X9 + 0x20]
	0x02BA9EDC LDR X8, [X8 + 0xC0]
	0x02BA9EE0 LDR X2, [X8 + 0x70]
	0x02BA9EE4 MOV X0, X24

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X2+32]
	004 Move X19, X1
	005 Move X8, [X8+192]
	006 Move X0, [X8+48]
	007 Move W8, [X0+309]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {13}
	012 Call 0x1C5D684
	013 Compare X19, 0
	014 JumpIfEqual {19}
	015 Move X8, [X19]
	016 Move W9, [X0+304]
	017 Move W10, [X8+304]
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move W0, W31
	020 Move X8, [X8+200]
	021 Add X8, X8, X9
	022 NotImplemented "Instruction LDUR not yet implemented."
	023 NotImplemented "Instruction CMP not yet implemented."
	024 NotImplemented "Instruction CSET not yet implemented."
	025 Move X30, [X31+16]
	026 Move X19, [X31+24]
	027 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x02BA9EE8 BL 0x2FDC70C
	0x02BA9EEC B 0x2BA9C68
	0x02BA9EF0 MOV X23, X31
	0x02BA9EF4 MOVZ W19, 0xB
	0x02BA9EF8 CBZ X22, 0x2BA9F5C
	0x02BA9EFC LDR X8, [X22]
	0x02BA9F00 ADRP X10, 0x154A000
	0x02BA9F04 LDRH W9, [X8 + 0x12E]
	0x02BA9F08 LDR X10, [X10 + 0xE00]
	0x02BA9F0C LDR X1, [X10]
	0x02BA9F10 CBZ X9, 0x2BA9F34
	0x02BA9F14 LDR X10, [X8 + 0xB0]
	0x02BA9F18 ADD X10, X10, 0x8
	0x02BA9F1C LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {19}
	004 Move X1, X31
	005 Call "il2cpp_vm_object_is_inst", X0
	006 Compare X0, 0
	007 JumpIfEqual {19}
	008 Move X8, [X0]
	009 Move X9, [X8+424]
	010 Move X1, [X8+432]
	011 NotImplemented "Instruction BLR not yet implemented."
	012 Compare X0, 0
	013 JumpIfEqual {19}
	014 Move X8, [X0]
	015 Move X2, [X8+344]
	016 Move X1, [X8+352]
	017 Move X30, [X31+16]
	018 CallNoReturn X2
	019 Call 0x1C17F20

