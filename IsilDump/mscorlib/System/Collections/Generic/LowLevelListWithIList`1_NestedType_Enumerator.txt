Type: System.Collections.Generic.LowLevelListWithIList`1/Enumerator

Method: System.Void .ctor(System.Collections.Generic.LowLevelListWithIList`1<T> list)

Disassembly:
	0x02BC54CC BL 0x1C5C684
	0x02BC54D0 MOV X8, X0
	0x02BC54D4 LDR X8, [X8 + 0xC0]
	0x02BC54D8 MOV X0, X19
	0x02BC54DC LDR X1, [X8 + 0x30]
	0x02BC54E0 LDP X30, X19, [X31], #0x10
	0x02BC54E4 B 0x2BC541C
	0x02BC54E8 STR X30, [X31 - 0x20]!
	0x02BC54EC STP X20, X19, [X31 + 0x10]
	0x02BC54F0 LDR X8, [X0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X0], X1
	003 Move [X0+8], W31
	004 Compare X1, 0
	005 JumpIfEqual {11}
	006 Move W8, [X1+28]
	007 Move [X0+16], X31
	008 Move [X0+12], W8
	009 Move X30, [X31+16]
	010 Return 
	011 Call 0x1C17F20

Method: System.Void Dispose()

Disassembly:
	0x02BC54F4 CBZ X8, 0x2BC5520

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x02BC54F8 LDR W9, [X0 + 0x8]
	0x02BC54FC LDR W8, [X8 + 0x1C]
	0x02BC5500 CMP W9, W8
	0x02BC5504 B.NE 0x2BC5524
	0x02BC5508 LDP X20, X19, [X31 + 0x10]
	0x02BC550C MOVN W8, 0x1
	0x02BC5510 STR W8, [X0 + 0xC]
	0x02BC5514 STR X31, [X0 + 0x10]
	0x02BC5518 LDR X30, [X31], #0x20
	0x02BC551C RET
	0x02BC5520 BL 0x1C16F20
	0x02BC5524 ADRP X0, 0x152E000
	0x02BC5528 LDR X0, [X0 + 0x5B0]
	0x02BC552C MOV X19, X1
	0x02BC5530 BL 0x1C16D08
	0x02BC5534 BL 0x1C16F10
	0x02BC5538 MOV X20, X0
	0x02BC553C ADRP X0, 0x1558000
	0x02BC5540 LDR X0, [X0 + 0x288]
	0x02BC5544 BL 0x1C16D08
	0x02BC5548 MOV X1, X0
	0x02BC554C MOV X0, X20
	0x02BC5550 MOV X2, X31
	0x02BC5554 BL 0x337DF1C
	0x02BC5558 MOV X0, X20
	0x02BC555C MOV X1, X19
	0x02BC5560 BL 0x1C16DEC
	0x02BC5564 STR X30, [X31 - 0x40]!
	0x02BC5568 STP X24, X23, [X31 + 0x10]
	0x02BC556C STP X22, X21, [X31 + 0x20]
	0x02BC5570 STP X20, X19, [X31 + 0x30]
	0x02BC5574 ADRP X23, 0x1816000
	0x02BC5578 ADRP X24, 0x1557000
	0x02BC557C LDRB W8, [X23 + 0x5F6]
	0x02BC5580 LDR X24, [X24 + 0xF8]
	0x02BC5584 MOV X20, X3
	0x02BC5588 MOV X21, X2

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X9, [X0]
	004 Compare X9, 0
	005 JumpIfEqual {39}
	006 Move W8, [X0+12]
	007 Move W10, [X9+28]
	008 Move X19, X0
	009 NotImplemented "Instruction CMP not yet implemented."
	010 NotImplemented "Instruction LDRSW not yet implemented."
	011 Move W10, [X9+24]
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X9, [X9+16]
	014 Compare X9, 0
	015 JumpIfEqual {39}
	016 Move W10, [X9+24]
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Add X9, X9, X8
	019 Move X9, [X9+32]
	020 Add W8, W8, 1
	021 Move [X19+8], W8
	022 Move W0, 1
	023 Move [X19+16], X9
	024 Move X0, [X1+32]
	025 Move W8, [X0+309]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {31}
	030 Call 0x1C5D684
	031 Move X8, [X0+192]
	032 Move X0, X19
	033 Move X1, [X8+40]
	034 Call 0x2BC558C, X0
	035 Move W0, W31
	036 Move X30, [X31+16]
	037 Move X19, [X31+24]
	038 Return X0
	039 Call 0x1C17F20
	040 Call 0x1C17F28

Method: System.Boolean MoveNextRare()

Disassembly:
	0x02BC558C MOV X22, X1
	0x02BC5590 MOV X19, X0
	0x02BC5594 TBNZ X8, 0x0, 0x2BC55AC
	0x02BC5598 ADRP X0, 0x1557000
	0x02BC559C LDR X0, [X0 + 0xF8]
	0x02BC55A0 BL 0x1C16CF4
	0x02BC55A4 MOVZ W8, 0x1
	0x02BC55A8 STRB W8, [X23 + 0x5F6]
	0x02BC55AC LDR X0, [X24]
	0x02BC55B0 LDR W8, [X0 + 0xE0]
	0x02BC55B4 CBNZ W8, 0x2BC55BC
	0x02BC55B8 BL 0x1C16DFC
	0x02BC55BC MOV W0, W31
	0x02BC55C0 MOV X1, X31
	0x02BC55C4 BL 0x3D163F4
	0x02BC55C8 STR X0, [X19]
	0x02BC55CC LDR X0, [X20 + 0x20]
	0x02BC55D0 LDRB W8, [X0 + 0x135]
	0x02BC55D4 TBNZ X8, 0x0, 0x2BC55DC
	0x02BC55D8 BL 0x1C5C684
	0x02BC55DC LDR X8, [X0 + 0xC0]
	0x02BC55E0 LDR X0, [X8 + 0x18]
	0x02BC55E4 LDRB W8, [X0 + 0x135]
	0x02BC55E8 TBNZ X8, 0x0, 0x2BC55F0
	0x02BC55EC BL 0x1C5C684
	0x02BC55F0 LDR W8, [X0 + 0xE0]
	0x02BC55F4 CBNZ W8, 0x2BC55FC
	0x02BC55F8 BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0]
	005 Compare X8, 0
	006 JumpIfEqual {19}
	007 Move W9, [X0+12]
	008 Move W10, [X8+28]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move W8, [X8+24]
	011 Move X20, [X31+16]
	012 Move X19, [X31+24]
	013 Move [X0+16], X31
	014 Add W8, W8, 1
	015 Move [X0+8], W8
	016 Move W0, W31
	017 Move X30, [X31+32]
	018 Return X0
	019 Call 0x1C17F20
	020 Move X0, 0x152F000
	021 Move X0, [X0+1456]
	022 Move X19, X1
	023 Call 0x1C17D08
	024 Call 0x1C17F10
	025 Move X1, X31
	026 Move X20, X0
	027 Call InvalidOperationException..ctor, X0
	028 Move X0, X20
	029 Move X1, X19
	030 Call 0x1C17DEC

Method: T get_Current()

Disassembly:
	0x02BC55FC LDR X0, [X20 + 0x20]
	0x02BC5600 LDRB W8, [X0 + 0x135]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x02BC5604 TBNZ X8, 0x0, 0x2BC560C
	0x02BC5608 BL 0x1C5C684
	0x02BC560C LDR X8, [X0 + 0xC0]
	0x02BC5610 LDR X0, [X8 + 0x18]
	0x02BC5614 LDRB W8, [X0 + 0x135]
	0x02BC5618 TBNZ X8, 0x0, 0x2BC5620
	0x02BC561C BL 0x1C5C684
	0x02BC5620 LDR X8, [X0 + 0xB8]
	0x02BC5624 LDR X23, [X8 + 0x10]
	0x02BC5628 CBZ X23, 0x2BC56F4
	0x02BC562C LDR X0, [X20 + 0x20]
	0x02BC5630 LDR X24, [X19]
	0x02BC5634 LDRB W8, [X0 + 0x135]
	0x02BC5638 TBNZ X8, 0x0, 0x2BC5644
	0x02BC563C BL 0x1C5C684
	0x02BC5640 LDR X0, [X20 + 0x20]
	0x02BC5644 STR X24, [X23 + 0x18]
	0x02BC5648 LDRB W8, [X0 + 0x135]
	0x02BC564C TBNZ X8, 0x0, 0x2BC5654
	0x02BC5650 BL 0x1C5C684
	0x02BC5654 LDR X8, [X0 + 0xC0]
	0x02BC5658 LDR X0, [X8 + 0x18]
	0x02BC565C LDRB W8, [X0 + 0x135]
	0x02BC5660 TBNZ X8, 0x0, 0x2BC5668
	0x02BC5664 BL 0x1C5C684
	0x02BC5668 LDR X8, [X0 + 0xB8]
	0x02BC566C LDR X0, [X8 + 0x10]
	0x02BC5670 CBZ X0, 0x2BC56F4
	0x02BC5674 LDR X8, [X0]
	0x02BC5678 MOV X1, X22
	0x02BC567C MOV X2, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+8]
	005 Compare W8, 0
	006 JumpIfEqual {26}
	007 Move X9, [X0]
	008 Move X19, X0
	009 Compare X9, 0
	010 JumpIfEqual {37}
	011 Move W9, [X9+24]
	012 Add W9, W9, 1
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move X0, [X1+32]
	015 Move W8, [X0+309]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {21}
	020 Call 0x1C5D684
	021 Move X0, [X19+16]
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Return X0
	026 Move X0, 0x152F000
	027 Move X0, [X0+1456]
	028 Move X19, X1
	029 Call 0x1C17D08
	030 Call 0x1C17F10
	031 Move X1, X31
	032 Move X20, X0
	033 Call InvalidOperationException..ctor, X0
	034 Move X0, X20
	035 Move X1, X19
	036 Call 0x1C17DEC
	037 Call 0x1C17F20

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x02BC5680 LDP X9, X3, [X8 + 0x1A8]
	0x02BC5684 BLR X9
	0x02BC5688 LDR X0, [X20 + 0x20]
	0x02BC568C LDRB W8, [X0 + 0x135]
	0x02BC5690 TBNZ X8, 0x0, 0x2BC5698
	0x02BC5694 BL 0x1C5C684
	0x02BC5698 LDR X8, [X0 + 0xC0]
	0x02BC569C LDR X0, [X8 + 0x18]
	0x02BC56A0 LDRB W8, [X0 + 0x135]
	0x02BC56A4 TBNZ X8, 0x0, 0x2BC56AC
	0x02BC56A8 BL 0x1C5C684
	0x02BC56AC LDR X8, [X0 + 0xB8]
	0x02BC56B0 LDR X21, [X8 + 0x10]
	0x02BC56B4 CBZ X21, 0x2BC56F4
	0x02BC56B8 LDR X0, [X20 + 0x20]
	0x02BC56BC LDRB W8, [X0 + 0x135]
	0x02BC56C0 TBNZ X8, 0x0, 0x2BC56C8
	0x02BC56C4 BL 0x1C5C684
	0x02BC56C8 LDR X8, [X0 + 0xC0]
	0x02BC56CC MOV X0, X21
	0x02BC56D0 LDR X1, [X8 + 0x28]
	0x02BC56D4 BL 0x2EF30E0
	0x02BC56D8 MOVN W8, 0x0
	0x02BC56DC STR W8, [X19 + 0x8]
	0x02BC56E0 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0]
	005 Compare X8, 0
	006 JumpIfEqual {16}
	007 Move W9, [X0+12]
	008 Move W8, [X8+28]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X20, [X31+16]
	011 Move X19, [X31+24]
	012 Move [X0+8], W31
	013 Move [X0+16], X31
	014 Move X30, [X31+32]
	015 Return 
	016 Call 0x1C17F20
	017 Move X0, 0x152F000
	018 Move X0, [X0+1456]
	019 Move X19, X1
	020 Call 0x1C17D08
	021 Call 0x1C17F10
	022 Move X1, X31
	023 Move X20, X0
	024 Call InvalidOperationException..ctor, X0
	025 Move X0, X20
	026 Move X1, X19
	027 Call 0x1C17DEC

