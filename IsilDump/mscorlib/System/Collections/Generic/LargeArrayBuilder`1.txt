Type: System.Collections.Generic.LargeArrayBuilder`1

Method: System.Void .ctor(System.Boolean initialize)

Disassembly:
	0x02EE7EDC LDR X27, [X10]
	0x02EE7EE0 TBNZ X9, 0x0, 0x2EE7EF0
	0x02EE7EE4 MOV X0, X8
	0x02EE7EE8 BL 0x1C5C684
	0x02EE7EEC MOV X8, X0
	0x02EE7EF0 LDR X8, [X8 + 0xC0]
	0x02EE7EF4 MOV X0, X25
	0x02EE7EF8 LDR X1, [X8 + 0x60]
	0x02EE7EFC BLR X27
	0x02EE7F00 LDR X8, [X25 + 0x20]
	0x02EE7F04 STR X8, [X24]
	0x02EE7F08 LDRSW X24, [X25 + 0x28]
	0x02EE7F0C STR W24, [X23]
	0x02EE7F10 LDR X0, [X19 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X2+32]
	004 Move X19, X0
	005 Move W9, [X8+309]
	006 Move TEMP, X9
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfEqual {13}
	010 Move X0, X8
	011 Call 0x1C5D684
	012 Move X8, X0
	013 Move X8, [X8+192]
	014 Move TEMP, 0x80000000
	015 Not TEMP
	016 Move W1, TEMP
	017 Move X0, X19
	018 Move X2, [X8]
	019 Move X30, [X31+16]
	020 Move X19, [X31+24]

Method: System.Void .ctor(System.Int32 maxCapacity)

Disassembly:
	0x02EE7F14 LDR X23, [X25 + 0x20]
	0x02EE7F18 LDRB W8, [X0 + 0x135]
	0x02EE7F1C TBNZ X8, 0x0, 0x2EE7F24
	0x02EE7F20 BL 0x1C5C684
	0x02EE7F24 LDR X8, [X0 + 0xC0]
	0x02EE7F28 MOV X0, X22
	0x02EE7F2C MOV X2, X21
	0x02EE7F30 LDR X8, [X8 + 0x48]
	0x02EE7F34 LDR W8, [X8 + 0x28]
	0x02EE7F38 CMP W8, 0x0
	0x02EE7F3C SUB X8, X29, 0x10
	0x02EE7F40 CSEL X1, X20, X8, LT
	0x02EE7F44 BL 0x3EB1AC0
	0x02EE7F48 CBZ X23, 0x2EE7FDC
	0x02EE7F4C LDR W8, [X23 + 0x18]
	0x02EE7F50 CMP W24, W8
	0x02EE7F54 B.CS 0x2EE7FD8
	0x02EE7F58 LDR X8, [X23]
	0x02EE7F5C MOV X1, X22
	0x02EE7F60 MOV X2, X21
	0x02EE7F64 LDR W8, [X8 + 0x104]
	0x02EE7F68 NOP
	0x02EE7F6C MADD X8, X8, X24, X23
	0x02EE7F70 ADD X0, X8, 0x20
	0x02EE7F74 BL 0x3EB1AC0
	0x02EE7F78 LDR X0, [X19 + 0x20]
	0x02EE7F7C LDRB W8, [X0 + 0x135]
	0x02EE7F80 TBNZ X8, 0x0, 0x2EE7F88
	0x02EE7F84 BL 0x1C5C684
	0x02EE7F88 LDR X8, [X0 + 0xC0]
	0x02EE7F8C LDR X0, [X8 + 0x48]
	0x02EE7F90 LDRB W8, [X0 + 0x135]
	0x02EE7F94 TBNZ X8, 0x0, 0x2EE7F9C
	0x02EE7F98 BL 0x1C5C684
	0x02EE7F9C LDR W8, [X23 + 0x18]
	0x02EE7FA0 CMP W24, W8
	0x02EE7FA4 B.CS 0x2EE7FD8
	0x02EE7FA8 LDR X8, [X26 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 NotImplemented "Instruction MOVI not yet implemented."
	006 Move [X0+16], V0
	007 Move [X0+24], V0
	008 Move [X0], V0
	009 Move X19, X0
	010 Move X0, [X2+32]
	011 Move W20, W1
	012 Move W8, [X0+309]
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {18}
	017 Call 0x1C5D684
	018 Move X8, [X0+192]
	019 Move X21, [X8+24]
	020 Move X8, [X21+56]
	021 Compare X8, 0
	022 JumpIfNotEqual {26}
	023 Move X0, X21
	024 Call 0x1C5D6E0
	025 Move X8, [X21+56]
	026 Move X0, [X8+16]
	027 Move W8, [X0+309]
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {33}
	032 Call 0x1C5D684
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X8, [X21+56]
	038 Move X0, [X8+16]
	039 Move W8, [X0+309]
	040 Move TEMP, X8
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {45}
	044 Call 0x1C5D684
	045 Move X8, [X0+184]
	046 Move X8, [X8]
	047 Move [X19], W20
	048 Move [X19+32], X8
	049 Move [X19+8], X8
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X30, [X31+32]
	053 Move X21, [X31+40]
	054 Return 

Method: System.Void AddRange(System.Collections.Generic.IEnumerable`1<T> items)

Disassembly:
	0x02EE7FAC LDUR X9, [X29 - 0x8]
	0x02EE7FB0 CMP X8, X9
	0x02EE7FB4 B.NE 0x2EE7FE0
	0x02EE7FB8 ADD X31, X29, 0x0
	0x02EE7FBC LDP X20, X19, [X31 + 0x50]
	0x02EE7FC0 LDP X22, X21, [X31 + 0x40]
	0x02EE7FC4 LDP X24, X23, [X31 + 0x30]
	0x02EE7FC8 LDP X26, X25, [X31 + 0x20]
	0x02EE7FCC LDR X27, [X31 + 0x10]
	0x02EE7FD0 LDP X29, X30, [X31], #0x60
	0x02EE7FD4 RET
	0x02EE7FD8 BL 0x1C16F28
	0x02EE7FDC BL 0x1C16F20
	0x02EE7FE0 BL 0x3EB1B20
	0x02EE7FE4 STP X30, X27, [X31 - 0x50]!
	0x02EE7FE8 STP X26, X25, [X31 + 0x10]
	0x02EE7FEC STP X24, X23, [X31 + 0x20]
	0x02EE7FF0 STP X22, X21, [X31 + 0x30]
	0x02EE7FF4 STP X20, X19, [X31 + 0x40]
	0x02EE7FF8 ADRP X24, 0x14F4000
	0x02EE7FFC LDRB W8, [X24 + 0xB5F]
	0x02EE8000 MOV X19, X4
	0x02EE8004 MOV W20, W3
	0x02EE8008 MOV W21, W2
	0x02EE800C MOV X22, X1
	0x02EE8010 MOV X23, X0
	0x02EE8014 TBNZ X8, 0x0, 0x2EE802C
	0x02EE8018 ADRP X0, 0x120B000
	0x02EE801C LDR X0, [X0 + 0x5A8]
	0x02EE8020 BL 0x1C16CF4
	0x02EE8024 MOVZ W8, 0x1
	0x02EE8028 STRB W8, [X24 + 0xB5F]
	0x02EE802C CMP W20, 0x1
	0x02EE8030 B.LT 0x2EE80F8
	0x02EE8034 ADRP X27, 0x120B000
	0x02EE8038 LDR X27, [X27 + 0x5A8]
	0x02EE803C MOV W24, W31
	0x02EE8040 LDR X8, [X19 + 0x20]
	0x02EE8044 ADD X9, X8, 0x135
	0x02EE8048 LDRH W9, [X9]
	0x02EE804C TBNZ X9, 0x0, 0x2EE8068
	0x02EE8050 MOV X0, X8
	0x02EE8054 BL 0x1C5C684
	0x02EE8058 LDR X8, [X19 + 0x20]
	0x02EE805C ADD X9, X8, 0x135
	0x02EE8060 LDRH W9, [X9]
	0x02EE8064 B 0x2EE806C
	0x02EE8068 MOV X0, X8
	0x02EE806C LDR X10, [X0 + 0xC0]
	0x02EE8070 LDR X10, [X10 + 0x68]
	0x02EE8074 LDR X25, [X10]
	0x02EE8078 TBNZ X9, 0x0, 0x2EE8088
	0x02EE807C MOV X0, X8
	0x02EE8080 BL 0x1C5C684
	0x02EE8084 MOV X8, X0
	0x02EE8088 LDR X8, [X8 + 0xC0]
	0x02EE808C MOV X0, X23
	0x02EE8090 MOV W1, W24
	0x02EE8094 LDR X2, [X8 + 0x68]
	0x02EE8098 BLR X25
	0x02EE809C CBZ X0, 0x2EE8110
	0x02EE80A0 MOV X25, X0
	0x02EE80A4 LDR X0, [X27]
	0x02EE80A8 LDR W8, [X0 + 0xE0]
	0x02EE80AC CBNZ W8, 0x2EE80B4
	0x02EE80B0 BL 0x1C16DFC
	0x02EE80B4 LDR W1, [X25 + 0x18]
	0x02EE80B8 MOV W0, W20
	0x02EE80BC MOV X2, X31
	0x02EE80C0 BL 0x337EE94
	0x02EE80C4 MOV W26, W0
	0x02EE80C8 MOV X0, X25
	0x02EE80CC MOV W1, W31
	0x02EE80D0 MOV X2, X22
	0x02EE80D4 MOV W3, W21
	0x02EE80D8 MOV W4, W26
	0x02EE80DC MOV X5, X31
	0x02EE80E0 BL 0x339FCE8
	0x02EE80E4 SUB W20, W20, W26
	0x02EE80E8 ADD W21, W26, W21
	0x02EE80EC CMP W20, 0x0
	0x02EE80F0 ADD W24, W24, 0x1
	0x02EE80F4 B.GT 0x2EE8040
	0x02EE80F8 LDP X20, X19, [X31 + 0x40]
	0x02EE80FC LDP X22, X21, [X31 + 0x30]
	0x02EE8100 LDP X24, X23, [X31 + 0x20]
	0x02EE8104 LDP X26, X25, [X31 + 0x10]
	0x02EE8108 LDP X30, X27, [X31], #0x50
	0x02EE810C RET
	0x02EE8110 BL 0x1C16F20
	0x02EE8114 SUB X31, X31, 0x50
	0x02EE8118 STP X30, X23, [X31 + 0x20]
	0x02EE811C STP X22, X21, [X31 + 0x30]
	0x02EE8120 STP X20, X19, [X31 + 0x40]
	0x02EE8124 MOV X22, X0
	0x02EE8128 CBZ W1, 0x2EE8160
	0x02EE812C LDR X8, [X2 + 0x20]
	0x02EE8130 MOV X21, X2
	0x02EE8134 MOV W20, W1
	0x02EE8138 ADD X19, X22, 0x10
	0x02EE813C ADD X9, X8, 0x135
	0x02EE8140 LDRH W9, [X9]
	0x02EE8144 TBNZ X9, 0x0, 0x2EE8168
	0x02EE8148 MOV X0, X8
	0x02EE814C BL 0x1C5C684
	0x02EE8150 LDR X8, [X21 + 0x20]
	0x02EE8154 ADD X9, X8, 0x135
	0x02EE8158 LDRH W9, [X9]
	0x02EE815C B 0x2EE816C
	0x02EE8160 LDR X0, [X22 + 0x8]
	0x02EE8164 B 0x2EE8224
	0x02EE8168 MOV X0, X8
	0x02EE816C LDR X10, [X0 + 0xC0]
	0x02EE8170 LDR X10, [X10 + 0x78]
	0x02EE8174 LDR X23, [X10]
	0x02EE8178 TBNZ X9, 0x0, 0x2EE8188
	0x02EE817C MOV X0, X8
	0x02EE8180 BL 0x1C5C684
	0x02EE8184 MOV X8, X0
	0x02EE8188 LDR X8, [X8 + 0xC0]
	0x02EE818C MOV X0, X19
	0x02EE8190 LDR X1, [X8 + 0x78]
	0x02EE8194 BLR X23
	0x02EE8198 CMP W0, W20
	0x02EE819C B.GE 0x2EE81A8
	0x02EE81A0 LDR X0, [X22 + 0x20]
	0x02EE81A4 B 0x2EE8224
	0x02EE81A8 LDR X8, [X21 + 0x20]
	0x02EE81AC ADD X9, X8, 0x135
	0x02EE81B0 LDRH W9, [X9]
	0x02EE81B4 TBNZ X9, 0x0, 0x2EE81D0
	0x02EE81B8 MOV X0, X8
	0x02EE81BC BL 0x1C5C684
	0x02EE81C0 LDR X8, [X21 + 0x20]
	0x02EE81C4 ADD X9, X8, 0x135
	0x02EE81C8 LDRH W9, [X9]
	0x02EE81CC B 0x2EE81D4
	0x02EE81D0 MOV X0, X8
	0x02EE81D4 LDR X10, [X0 + 0xC0]
	0x02EE81D8 LDR X10, [X10 + 0x88]
	0x02EE81DC LDR X21, [X10]
	0x02EE81E0 TBNZ X9, 0x0, 0x2EE81F0
	0x02EE81E4 MOV X0, X8
	0x02EE81E8 BL 0x1C5C684
	0x02EE81EC MOV X8, X0
	0x02EE81F0 LDR X8, [X8 + 0xC0]
	0x02EE81F4 ADD X3, X31, 0x8
	0x02EE81F8 ADD X4, X31, 0x10
	0x02EE81FC MOV X0, X21
	0x02EE8200 LDR X1, [X8 + 0x88]
	0x02EE8204 SUB W8, W20, 0x1
	0x02EE8208 STR W8, [X31 + 0x1C]
	0x02EE820C ADD X8, X31, 0x1C
	0x02EE8210 STR X8, [X31 + 0x8]
	0x02EE8214 LDR X8, [X1 + 0x10]
	0x02EE8218 MOV X2, X19
	0x02EE821C BLR X8
	0x02EE8220 LDR X0, [X31 + 0x10]
	0x02EE8224 LDP X20, X19, [X31 + 0x40]
	0x02EE8228 LDP X22, X21, [X31 + 0x30]
	0x02EE822C LDP X30, X23, [X31 + 0x20]
	0x02EE8230 ADD X31, X31, 0x50
	0x02EE8234 RET
	0x02EE8238 STR X30, [X31 - 0x30]!
	0x02EE823C STP X22, X21, [X31 + 0x10]
	0x02EE8240 STP X20, X19, [X31 + 0x20]
	0x02EE8244 STR X31, [X31 + 0x8]
	0x02EE8248 LDR X8, [X1 + 0x20]
	0x02EE824C MOV X20, X1
	0x02EE8250 MOV X19, X0
	0x02EE8254 ADD X9, X8, 0x135
	0x02EE8258 LDRH W9, [X9]
	0x02EE825C TBNZ X9, 0x0, 0x2EE8278
	0x02EE8260 MOV X0, X8
	0x02EE8264 BL 0x1C5C684
	0x02EE8268 LDR X8, [X20 + 0x20]
	0x02EE826C ADD X9, X8, 0x135
	0x02EE8270 LDRH W9, [X9]
	0x02EE8274 B 0x2EE827C
	0x02EE8278 MOV X0, X8
	0x02EE827C LDR X10, [X0 + 0xC0]
	0x02EE8280 LDR X10, [X10 + 0x90]
	0x02EE8284 LDR X21, [X10]
	0x02EE8288 TBNZ X9, 0x0, 0x2EE8298
	0x02EE828C MOV X0, X8
	0x02EE8290 BL 0x1C5C684
	0x02EE8294 MOV X8, X0
	0x02EE8298 LDR X8, [X8 + 0xC0]
	0x02EE829C ADD X1, X31, 0x8
	0x02EE82A0 MOV X0, X19
	0x02EE82A4 LDR X2, [X8 + 0x90]
	0x02EE82A8 BLR X21
	0x02EE82AC TBNZ X0, 0x0, 0x2EE8350
	0x02EE82B0 LDR X0, [X20 + 0x20]
	0x02EE82B4 LDR W21, [X19 + 0x2C]
	0x02EE82B8 LDRB W8, [X0 + 0x135]
	0x02EE82BC TBNZ X8, 0x0, 0x2EE82C4
	0x02EE82C0 BL 0x1C5C684
	0x02EE82C4 LDR X8, [X0 + 0xC0]
	0x02EE82C8 LDR X0, [X8 + 0x98]
	0x02EE82CC LDRB W8, [X0 + 0x135]
	0x02EE82D0 TBNZ X8, 0x0, 0x2EE82D8
	0x02EE82D4 BL 0x1C5C684
	0x02EE82D8 MOV W1, W21
	0x02EE82DC BL 0x1C16D6C
	0x02EE82E0 STR X0, [X31 + 0x8]
	0x02EE82E4 LDR X8, [X20 + 0x20]
	0x02EE82E8 LDR W22, [X19 + 0x2C]
	0x02EE82EC MOV X21, X0
	0x02EE82F0 ADD X9, X8, 0x135
	0x02EE82F4 LDRH W9, [X9]
	0x02EE82F8 TBNZ X9, 0x0, 0x2EE8314
	0x02EE82FC MOV X0, X8
	0x02EE8300 BL 0x1C5C684
	0x02EE8304 LDR X8, [X20 + 0x20]
	0x02EE8308 ADD X9, X8, 0x135
	0x02EE830C LDRH W9, [X9]
	0x02EE8310 B 0x2EE8318
	0x02EE8314 MOV X0, X8
	0x02EE8318 LDR X10, [X0 + 0xC0]
	0x02EE831C LDR X10, [X10 + 0xA0]
	0x02EE8320 LDR X20, [X10]
	0x02EE8324 TBNZ X9, 0x0, 0x2EE8334
	0x02EE8328 MOV X0, X8
	0x02EE832C BL 0x1C5C684

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x14F5000
	011 Move W8, [X22+2907]
	012 Move X21, X2
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x120D000
	020 Move X0, [X0+3584]
	021 Call 0x1C17CF4
	022 Move X0, 0x120D000
	023 Move X0, [X0+3608]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+2907], W8
	027 Compare X19, 0
	028 JumpIfEqual {207}
	029 Move X0, [X21+32]
	030 Move W8, [X0+309]
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {36}
	035 Call 0x1C5D684
	036 Move X8, [X0+192]
	037 Move X1, [X8+40]
	038 Move W8, [X1+309]
	039 Move TEMP, X8
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {46}
	043 Move X0, X1
	044 Call 0x1C5D684
	045 Move X1, X0
	046 Move X8, [X19]
	047 NotImplemented "Instruction LDRH not yet implemented."
	048 Compare X9, 0
	049 JumpIfEqual {56}
	050 Move X10, [X8+176]
	051 Add X10, X10, 8
	052 NotImplemented "Instruction LDUR not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Subtract X9, X9, 1
	055 Add X10, X10, 16
	056 Move X0, X19
	057 Move W2, W31
	058 Call 0x1C5D788
	059 NotImplemented "Instruction LDRSW not yet implemented."
	060 Add X8, X8, X9
	061 Add X0, X8, 312
	062 Move X8, [X0]
	063 Move X1, [X0+8]
	064 Move X23, 0x120C000
	065 Move X23, [X23+3584]
	066 Move X0, X19
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Move X8, [X20+32]
	069 Move X19, X0
	070 Move [X31+8], X8
	071 Move W25, [X20+40]
	072 Move [X31+4], W25
	073 Compare X0, 0
	074 JumpIfEqual {208}
	075 Move X24, 0x120C000
	076 Move X24, [X24+3608]
	077 Move X8, [X19]
	078 Move X1, [X24]
	079 NotImplemented "Instruction LDRH not yet implemented."
	080 Compare X9, 0
	081 JumpIfEqual {88}
	082 Move X10, [X8+176]
	083 Add X10, X10, 8
	084 NotImplemented "Instruction LDUR not yet implemented."
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Subtract X9, X9, 1
	087 Add X10, X10, 16
	088 Move X0, X19
	089 Move W2, W31
	090 Call 0x1C5D788
	091 NotImplemented "Instruction LDRSW not yet implemented."
	092 Add X8, X8, X9
	093 Add X0, X8, 312
	094 Move X8, [X0]
	095 Move X1, [X0+8]
	096 Move X0, X19
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Move TEMP, X0
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfNotEqual {164}
	102 Move X0, [X21+32]
	103 Move W8, [X0+309]
	104 Move TEMP, X8
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfEqual {109}
	108 Call 0x1C5D684
	109 Move X8, [X0+192]
	110 Move X1, [X8+56]
	111 Move W8, [X1+309]
	112 Move TEMP, X8
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfEqual {119}
	116 Move X0, X1
	117 Call 0x1C5D684
	118 Move X1, X0
	119 Move X8, [X19]
	120 NotImplemented "Instruction LDRH not yet implemented."
	121 Compare X9, 0
	122 JumpIfEqual {129}
	123 Move X10, [X8+176]
	124 Add X10, X10, 8
	125 NotImplemented "Instruction LDUR not yet implemented."
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Subtract X9, X9, 1
	128 Add X10, X10, 16
	129 Move X0, X19
	130 Move W2, W31
	131 Call 0x1C5D788
	132 NotImplemented "Instruction LDRSW not yet implemented."
	133 Add X8, X8, X9
	134 Add X0, X8, 312
	135 Move X8, [X0]
	136 Move X1, [X0+8]
	137 Move X0, X19
	138 NotImplemented "Instruction BLR not yet implemented."
	139 Move X8, [X31+8]
	140 Compare X8, 0
	141 JumpIfEqual {206}
	142 Move W9, [X8+24]
	143 Move X22, X0
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Add X8, X8, W25
	146 Move [X8+32], X22
	147 Move X0, [X21+32]
	148 Move W8, [X0+309]
	149 Move TEMP, X8
	150 And TEMP, TEMP, 1
	151 Compare TEMP, 1
	152 JumpIfEqual {154}
	153 Call 0x1C5D684
	154 Move X8, [X0+192]
	155 Move X4, [X8+80]
	156 Add X2, X31, 8
	157 Add X3, X31, 4
	158 Move X0, X20
	159 Move X1, X22
	160 Call 0x2EE8330, X0, X1, X2, X3
	161 Move W25, [X31+4]
	162 Add W25, W25, 1
	163 Move [X31+4], W25
	164 Move W9, [X20+40]
	165 Move W8, [X20+44]
	166 Move X21, X31
	167 Add W8, W8, W25
	168 Subtract W8, W8, W9
	169 Move [X20+40], W25
	170 Move [X20+44], W8
	171 Compare X19, 0
	172 JumpIfEqual {194}
	173 Move X8, [X19]
	174 Move X1, [X23]
	175 NotImplemented "Instruction LDRH not yet implemented."
	176 Compare X9, 0
	177 JumpIfEqual {184}
	178 Move X10, [X8+176]
	179 Add X10, X10, 8
	180 NotImplemented "Instruction LDUR not yet implemented."
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Subtract X9, X9, 1
	183 Add X10, X10, 16
	184 Move X0, X19
	185 Move W2, W31
	186 Call 0x1C5D788
	187 NotImplemented "Instruction LDRSW not yet implemented."
	188 Add X8, X8, X9
	189 Add X0, X8, 312
	190 Move X8, [X0]
	191 Move X1, [X0+8]
	192 Move X0, X19
	193 NotImplemented "Instruction BLR not yet implemented."
	194 Compare X21, 0
	195 JumpIfNotEqual {209}
	196 Move X20, [X31+64]
	197 Move X19, [X31+72]
	198 Move X22, [X31+48]
	199 Move X21, [X31+56]
	200 Move X24, [X31+32]
	201 Move X23, [X31+40]
	202 Move X30, [X31+16]
	203 Move X25, [X31+24]
	204 Add X31, X31, 80
	205 Return 
	206 Call 0x1C17F20
	207 Call 0x1C17F20
	208 Call 0x1C17F20
	209 Move X0, X21
	210 Call 0x1C17F18
	211 Move X20, X0
	212 NotImplemented "Instruction CMP not yet implemented."
	213 Move X0, X20
	214 Call 0x3EB2AD0
	215 Move X21, [X0]
	216 Call 0x3EB2AE0
	217 Move X21, X31
	218 Move X20, X0
	219 Compare X19, 0
	220 JumpIfEqual {242}
	221 Move X8, [X19]
	222 Move X1, [X23]
	223 NotImplemented "Instruction LDRH not yet implemented."
	224 Compare X9, 0
	225 JumpIfEqual {232}
	226 Move X10, [X8+176]
	227 Add X10, X10, 8
	228 NotImplemented "Instruction LDUR not yet implemented."
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Subtract X9, X9, 1
	231 Add X10, X10, 16
	232 Move X0, X19
	233 Move W2, W31
	234 Call 0x1C5D788
	235 NotImplemented "Instruction LDRSW not yet implemented."
	236 Add X8, X8, X9
	237 Add X0, X8, 312
	238 Move X8, [X0]
	239 Move X1, [X0+8]
	240 Move X0, X19
	241 NotImplemented "Instruction BLR not yet implemented."
	242 Compare X21, 0
	243 JumpIfNotEqual {246}
	244 Move X0, X20
	245 Call 0x1D2D690
	246 Move X0, X21
	247 Call 0x1C17F18
	248 Call 0x1991590

Method: System.Void AddWithBufferAllocation(T item, ref T[] destination, ref System.Int32 index)

Disassembly:
	0x02EE8330 MOV X8, X0
	0x02EE8334 LDR X8, [X8 + 0xC0]
	0x02EE8338 MOV X0, X19
	0x02EE833C MOV X1, X21
	0x02EE8340 MOV W2, W31
	0x02EE8344 LDR X4, [X8 + 0xA0]
	0x02EE8348 MOV W3, W22
	0x02EE834C BLR X20
	0x02EE8350 LDR X0, [X31 + 0x8]
	0x02EE8354 LDP X20, X19, [X31 + 0x20]
	0x02EE8358 LDP X22, X21, [X31 + 0x10]
	0x02EE835C LDR X30, [X31], #0x30
	0x02EE8360 RET
	0x02EE8364 STR X30, [X31 - 0x10]!
	0x02EE8368 LDR X8, [X0 + 0x8]
	0x02EE836C STR X8, [X1]
	0x02EE8370 LDR X8, [X0 + 0x8]
	0x02EE8374 CBZ X8, 0x2EE8390
	0x02EE8378 LDR W9, [X0 + 0x2C]
	0x02EE837C LDR W8, [X8 + 0x18]
	0x02EE8380 CMP W9, W8
	0x02EE8384 CSET W0, EQ
	0x02EE8388 LDR X30, [X31], #0x10
	0x02EE838C RET
	0x02EE8390 BL 0x1C16F20
	0x02EE8394 SUB X31, X31, 0x40
	0x02EE8398 STP X30, X23, [X31 + 0x10]
	0x02EE839C STP X22, X21, [X31 + 0x20]
	0x02EE83A0 STP X20, X19, [X31 + 0x30]
	0x02EE83A4 ADRP X21, 0x14F3000
	0x02EE83A8 LDRB W8, [X21 + 0xB60]
	0x02EE83AC MOV X20, X1
	0x02EE83B0 MOV X19, X0
	0x02EE83B4 TBNZ X8, 0x0, 0x2EE83CC
	0x02EE83B8 ADRP X0, 0x120B000
	0x02EE83BC LDR X0, [X0 + 0x5A8]
	0x02EE83C0 BL 0x1C16CF4
	0x02EE83C4 MOVZ W8, 0x1
	0x02EE83C8 STRB W8, [X21 + 0xB60]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W8, [X3]
	007 Move W10, [X0+40]
	008 Move W9, [X0+44]
	009 Move X21, X0
	010 Move X19, X3
	011 Move X22, X2
	012 Add W8, W8, W9
	013 Subtract W8, W8, W10
	014 Move [X0+44], W8
	015 Move W8, [X3]
	016 Move X20, X1
	017 Move [X0+40], W8
	018 Move X0, [X4+32]
	019 Move W8, [X0+309]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {25}
	024 Call 0x1C5D684
	025 Move X8, [X0+192]
	026 Move X0, X21
	027 Move X1, [X8+96]
	028 Call 0x2EE8634, X0
	029 Move X8, [X21+32]
	030 Move [X22], X8
	031 NotImplemented "Instruction LDRSW not yet implemented."
	032 Move [X19], W8
	033 Move X9, [X21+32]
	034 Compare X9, 0
	035 JumpIfEqual {46}
	036 Move W10, [X9+24]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Add X8, X9, X8
	039 Move [X8+32], X20
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X30, [X31+48]
	045 Return 
	046 Call 0x1C17F20
	047 Call 0x1C17F28

Method: System.Void CopyTo(T[] array, System.Int32 arrayIndex, System.Int32 count)

Disassembly:
	0x02EE83CC LDR W8, [X19 + 0x2C]
	0x02EE83D0 CMP W8, 0x7
	0x02EE83D4 B.HI 0x2EE847C
	0x02EE83D8 ADRP X9, 0x120B000
	0x02EE83DC LDR X9, [X9 + 0x5A8]
	0x02EE83E0 LDR W21, [X19]
	0x02EE83E4 CMP W8, 0x0
	0x02EE83E8 LDR X0, [X9]
	0x02EE83EC UBFM W9, W8, 0x1F, 0x1E
	0x02EE83F0 MOVZ W8, 0x4
	0x02EE83F4 CSEL W22, W8, W9, EQ
	0x02EE83F8 LDR W10, [X0 + 0xE0]
	0x02EE83FC CBNZ W10, 0x2EE8404
	0x02EE8400 BL 0x1C16DFC
	0x02EE8404 MOV W0, W22
	0x02EE8408 MOV W1, W21
	0x02EE840C MOV X2, X31
	0x02EE8410 BL 0x337EE94
	0x02EE8414 LDR X8, [X20 + 0x20]
	0x02EE8418 MOV W20, W0
	0x02EE841C LDRB W9, [X8 + 0x135]
	0x02EE8420 TBNZ X9, 0x0, 0x2EE8430
	0x02EE8424 MOV X0, X8
	0x02EE8428 BL 0x1C5C684
	0x02EE842C MOV X8, X0
	0x02EE8430 LDR X8, [X8 + 0xC0]
	0x02EE8434 LDR X0, [X8 + 0x98]
	0x02EE8438 LDRB W8, [X0 + 0x135]
	0x02EE843C TBNZ X8, 0x0, 0x2EE8444
	0x02EE8440 BL 0x1C5C684
	0x02EE8444 MOV W1, W20
	0x02EE8448 BL 0x1C16D6C
	0x02EE844C LDR X8, [X19 + 0x8]
	0x02EE8450 LDR W4, [X19 + 0x2C]
	0x02EE8454 MOV X2, X0
	0x02EE8458 STR X0, [X19 + 0x20]
	0x02EE845C MOV X0, X8
	0x02EE8460 MOV W1, W31
	0x02EE8464 MOV W3, W31
	0x02EE8468 MOV X5, X31
	0x02EE846C BL 0x339FCE8
	0x02EE8470 LDR X8, [X19 + 0x20]
	0x02EE8474 STR X8, [X19 + 0x8]
	0x02EE8478 B 0x2EE8568
	0x02EE847C CMP W8, 0x8
	0x02EE8480 B.NE 0x2EE848C
	0x02EE8484 MOVZ W21, 0x8
	0x02EE8488 B 0x2EE8534
	0x02EE848C LDR X8, [X20 + 0x20]
	0x02EE8490 LDR X21, [X19 + 0x20]
	0x02EE8494 ADD X22, X19, 0x10
	0x02EE8498 ADD X9, X8, 0x135
	0x02EE849C LDRH W9, [X9]
	0x02EE84A0 TBNZ X9, 0x0, 0x2EE84BC
	0x02EE84A4 MOV X0, X8
	0x02EE84A8 BL 0x1C5C684
	0x02EE84AC LDR X8, [X20 + 0x20]
	0x02EE84B0 ADD X9, X8, 0x135
	0x02EE84B4 LDRH W9, [X9]
	0x02EE84B8 B 0x2EE84C0
	0x02EE84BC MOV X0, X8
	0x02EE84C0 LDR X10, [X0 + 0xC0]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X24, 0x14F4000
	012 Move W8, [X24+2908]
	013 Move X19, X4
	014 Move W20, W3
	015 Move W21, W2
	016 Move X22, X1
	017 Move X23, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x120C000
	023 Move X0, [X0+1448]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X24+2908], W8
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X27, 0x120C000
	029 Move X27, [X27+1448]
	030 Move W24, W31
	031 Move X0, [X19+32]
	032 Move W8, [X0+309]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {38}
	037 Call 0x1C5D684
	038 Move X8, [X0+192]
	039 Move X0, X23
	040 Move W1, W24
	041 Move X2, [X8+104]
	042 Call 0x2EE84C4, X0, X1
	043 Compare X0, 0
	044 JumpIfEqual {78}
	045 Move X25, X0
	046 Move X0, [X27]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move W1, [X25+24]
	052 Move W0, W20
	053 Move X2, X31
	054 Call Math.Min, X0, X1
	055 Move W26, W0
	056 Move X0, X25
	057 Move W1, W31
	058 Move X2, X22
	059 Move W3, W21
	060 Move W4, W26
	061 Move X5, X31
	062 Call Array.Copy, X0, X1, X2, X3, X4
	063 Subtract W20, W20, W26
	064 Add W21, W26, W21
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Add W24, W24, 1
	067 Move X20, [X31+64]
	068 Move X19, [X31+72]
	069 Move X22, [X31+48]
	070 Move X21, [X31+56]
	071 Move X24, [X31+32]
	072 Move X23, [X31+40]
	073 Move X26, [X31+16]
	074 Move X25, [X31+24]
	075 Move X30, [X31+80]
	076 Move X27, [X31+88]
	077 Return 
	078 Call 0x1C17F20

Method: T[] GetBuffer(System.Int32 index)

Disassembly:
	0x02EE84C4 LDR X10, [X10 + 0xA8]
	0x02EE84C8 LDR X23, [X10]
	0x02EE84CC TBNZ X9, 0x0, 0x2EE84DC
	0x02EE84D0 MOV X0, X8
	0x02EE84D4 BL 0x1C5C684
	0x02EE84D8 MOV X8, X0
	0x02EE84DC LDR X8, [X8 + 0xC0]
	0x02EE84E0 ADD X3, X31, 0x8
	0x02EE84E4 MOV X0, X23
	0x02EE84E8 MOV X2, X22
	0x02EE84EC LDR X1, [X8 + 0xA8]
	0x02EE84F0 STR X21, [X31 + 0x8]
	0x02EE84F4 MOV X4, X21
	0x02EE84F8 LDR X8, [X1 + 0x10]
	0x02EE84FC BLR X8
	0x02EE8500 ADRP X8, 0x120B000
	0x02EE8504 LDR X8, [X8 + 0x5A8]
	0x02EE8508 LDR W21, [X19 + 0x2C]
	0x02EE850C LDR W22, [X19]
	0x02EE8510 LDR X0, [X8]
	0x02EE8514 LDR W8, [X0 + 0xE0]
	0x02EE8518 CBNZ W8, 0x2EE8520
	0x02EE851C BL 0x1C16DFC
	0x02EE8520 SUB W1, W22, W21
	0x02EE8524 MOV W0, W21
	0x02EE8528 MOV X2, X31
	0x02EE852C BL 0x337EE94
	0x02EE8530 MOV W21, W0
	0x02EE8534 LDR X0, [X20 + 0x20]
	0x02EE8538 LDRB W8, [X0 + 0x135]
	0x02EE853C TBNZ X8, 0x0, 0x2EE8544
	0x02EE8540 BL 0x1C5C684

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Compare W1, 0
	007 JumpIfEqual {20}
	008 Move X0, [X2+32]
	009 Move X21, X2
	010 Move W20, W1
	011 Move W8, [X0+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {17}
	016 Call 0x1C5D684
	017 Move W8, [X19+24]
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move X0, [X19+32]
	020 Move X0, [X19+8]
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Return X0
	026 Move X0, [X21+32]
	027 Add X21, X19, 16
	028 Subtract W19, W20, 1
	029 Move W8, [X0+309]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {35}
	034 Call 0x1C5D684
	035 Move X8, [X0+192]
	036 Move W1, W19
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X0, X21
	040 Move X2, [X8+136]
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Call 0x2B87A84, X0, X1
	044 Return X0

Method: T[] ToArray()

Disassembly:
	0x02EE8544 LDR X8, [X0 + 0xC0]
	0x02EE8548 LDR X0, [X8 + 0x98]
	0x02EE854C LDRB W8, [X0 + 0x135]
	0x02EE8550 TBNZ X8, 0x0, 0x2EE8558
	0x02EE8554 BL 0x1C5C684
	0x02EE8558 MOV W1, W21
	0x02EE855C BL 0x1C16D6C
	0x02EE8560 STR X0, [X19 + 0x20]
	0x02EE8564 STR W31, [X19 + 0x28]
	0x02EE8568 LDP X20, X19, [X31 + 0x30]
	0x02EE856C LDP X22, X21, [X31 + 0x20]
	0x02EE8570 LDP X30, X23, [X31 + 0x10]
	0x02EE8574 ADD X31, X31, 0x40
	0x02EE8578 RET
	0x02EE857C LDR W8, [X0]
	0x02EE8580 CMP W8, 0x0
	0x02EE8584 CSET W0, NE
	0x02EE8588 RET
	0x02EE858C STR X30, [X31 - 0x20]!
	0x02EE8590 STP X20, X19, [X31 + 0x10]
	0x02EE8594 ADRP X20, 0x14F3000
	0x02EE8598 LDRB W8, [X20 + 0xB61]
	0x02EE859C MOV X19, X0
	0x02EE85A0 TBNZ X8, 0x0, 0x2EE85B8
	0x02EE85A4 ADRP X0, 0x120B000
	0x02EE85A8 LDR X0, [X0 + 0x598]
	0x02EE85AC BL 0x1C16CF4
	0x02EE85B0 MOVZ W8, 0x1
	0x02EE85B4 STRB W8, [X20 + 0xB61]
	0x02EE85B8 LDR W19, [X19]
	0x02EE85BC CBZ W19, 0x2EE85EC
	0x02EE85C0 ADRP X8, 0x120B000
	0x02EE85C4 LDR X8, [X8 + 0x598]
	0x02EE85C8 LDR X0, [X8]
	0x02EE85CC LDR W8, [X0 + 0xE0]
	0x02EE85D0 CBNZ W8, 0x2EE85D8
	0x02EE85D4 BL 0x1C16DFC
	0x02EE85D8 MOV W0, W19
	0x02EE85DC MOV X1, X31
	0x02EE85E0 BL 0x3C39A28
	0x02EE85E4 EOR W8, W0, 0x1
	0x02EE85E8 B 0x2EE85F0
	0x02EE85EC MOV W8, W31
	0x02EE85F0 LDP X20, X19, [X31 + 0x10]
	0x02EE85F4 AND W0, W8, 0x1
	0x02EE85F8 LDR X30, [X31], #0x20
	0x02EE85FC RET
	0x02EE8600 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X1+32]
	007 Move X20, X1
	008 Move X19, X0
	009 Move W9, [X8+309]
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {16}
	014 Move X0, X8
	015 Call 0x1C5D684
	016 Move X22, [X19+8]
	017 Compare X22, 0
	018 JumpIfEqual {64}
	019 Move W21, [X19+44]
	020 Move W8, [X22+24]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X0, [X20+32]
	023 Move W8, [X0+309]
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {29}
	028 Call 0x1C5D684
	029 Move X8, [X0+192]
	030 Move X0, [X8+152]
	031 Move W8, [X0+309]
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {37}
	036 Call 0x1C5D684
	037 Move W1, W21
	038 Call 0x1C17D6C
	039 Move X8, [X20+32]
	040 Move W20, [X19+44]
	041 Move X22, X0
	042 Move W9, [X8+309]
	043 Move TEMP, X9
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {50}
	047 Move X0, X8
	048 Call 0x1C5D684
	049 Move X8, X0
	050 Move X8, [X8+192]
	051 Move X0, X19
	052 Move X1, X22
	053 Move W2, W31
	054 Move X4, [X8+160]
	055 Move W3, W20
	056 Call 0x2EE83CC, X0, X1, X2, X3
	057 Move X0, X22
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X22, [X31+16]
	061 Move X21, [X31+24]
	062 Move X30, [X31+48]
	063 Return X0
	064 Call 0x1C17F20

Method: System.Boolean TryMove(out T[] array)

Disassembly:
	0x02EE8604 STP X20, X19, [X31 + 0x10]
	0x02EE8608 ADRP X21, 0x14F3000
	0x02EE860C LDRB W8, [X21 + 0xB62]
	0x02EE8610 MOV X19, X1
	0x02EE8614 MOV X20, X0
	0x02EE8618 TBNZ X8, 0x0, 0x2EE8630
	0x02EE861C ADRP X0, 0x120B000
	0x02EE8620 LDR X0, [X0 + 0x598]
	0x02EE8624 BL 0x1C16CF4
	0x02EE8628 MOVZ W8, 0x1
	0x02EE862C STRB W8, [X21 + 0xB62]
	0x02EE8630 LDR W20, [X20]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+8]
	003 Move [X1], X8
	004 Move X8, [X0+8]
	005 Compare X8, 0
	006 JumpIfEqual {13}
	007 Move W9, [X0+44]
	008 Move W8, [X8+24]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 NotImplemented "Instruction CSET not yet implemented."
	011 Move X30, [X31+16]
	012 Return X0
	013 Call 0x1C17F20

Method: System.Void AllocateBuffer()

Disassembly:
	0x02EE8634 CBZ W20, 0x2EE86B4
	0x02EE8638 ADRP X8, 0x120B000
	0x02EE863C LDR X8, [X8 + 0x598]
	0x02EE8640 LDR X0, [X8]
	0x02EE8644 LDR W8, [X0 + 0xE0]
	0x02EE8648 CBNZ W8, 0x2EE8650
	0x02EE864C BL 0x1C16DFC
	0x02EE8650 MOV W0, W20
	0x02EE8654 MOV X1, X31
	0x02EE8658 BL 0x3C39AA0
	0x02EE865C LDR X8, [X19 + 0x20]
	0x02EE8660 MOV X19, X0
	0x02EE8664 LDRB W9, [X8 + 0x135]
	0x02EE8668 TBNZ X9, 0x0, 0x2EE8678
	0x02EE866C MOV X0, X8
	0x02EE8670 BL 0x1C5C684
	0x02EE8674 MOV X8, X0
	0x02EE8678 LDR X8, [X8 + 0xC0]
	0x02EE867C LDR X20, [X8 + 0x8]
	0x02EE8680 LDRB W8, [X20 + 0x135]
	0x02EE8684 TBNZ X8, 0x0, 0x2EE8694
	0x02EE8688 MOV X0, X20
	0x02EE868C BL 0x1C5C684
	0x02EE8690 MOV X20, X0
	0x02EE8694 CBZ X19, 0x2EE86B4
	0x02EE8698 MOV X0, X19
	0x02EE869C MOV X1, X20
	0x02EE86A0 BL 0x1C16E00
	0x02EE86A4 CBNZ X0, 0x2EE86B8
	0x02EE86A8 MOV X0, X19
	0x02EE86AC MOV X1, X20
	0x02EE86B0 BL 0x1C171E0
	0x02EE86B4 MOV X0, X31
	0x02EE86B8 LDP X20, X19, [X31 + 0x10]
	0x02EE86BC LDP X30, X21, [X31], #0x20
	0x02EE86C0 RET
	0x02EE86C4 STP X30, X21, [X31 - 0x20]!
	0x02EE86C8 STP X20, X19, [X31 + 0x10]
	0x02EE86CC ADRP X20, 0x14F3000
	0x02EE86D0 LDRB W8, [X20 + 0xB63]
	0x02EE86D4 MOV X19, X0
	0x02EE86D8 TBNZ X8, 0x0, 0x2EE86FC
	0x02EE86DC ADRP X0, 0x1237000
	0x02EE86E0 LDR X0, [X0 + 0xF8]
	0x02EE86E4 BL 0x1C16CF4
	0x02EE86E8 ADRP X0, 0x120B000
	0x02EE86EC LDR X0, [X0 + 0x6C0]
	0x02EE86F0 BL 0x1C16CF4
	0x02EE86F4 MOVZ W8, 0x1
	0x02EE86F8 STRB W8, [X20 + 0xB63]
	0x02EE86FC LDR X0, [X19 + 0x20]
	0x02EE8700 ADRP X20, 0x120B000
	0x02EE8704 LDRB W8, [X0 + 0x135]
	0x02EE8708 LDR X20, [X20 + 0x6C0]
	0x02EE870C TBNZ X8, 0x0, 0x2EE8714
	0x02EE8710 BL 0x1C5C684
	0x02EE8714 LDR X8, [X20]
	0x02EE8718 LDR X9, [X0 + 0xC0]
	0x02EE871C ADRP X21, 0x1237000
	0x02EE8720 LDR W10, [X8 + 0xE0]
	0x02EE8724 LDR X20, [X9]
	0x02EE8728 LDR X21, [X21 + 0xF8]
	0x02EE872C CBNZ W10, 0x2EE8738
	0x02EE8730 MOV X0, X8
	0x02EE8734 BL 0x1C16DFC
	0x02EE8738 MOV X0, X20
	0x02EE873C MOV X1, X31
	0x02EE8740 BL 0x338C698
	0x02EE8744 LDR X8, [X21]
	0x02EE8748 MOV X20, X0
	0x02EE874C LDR W9, [X8 + 0xE0]
	0x02EE8750 CBNZ W9, 0x2EE875C
	0x02EE8754 MOV X0, X8
	0x02EE8758 BL 0x1C16DFC
	0x02EE875C MOV X0, X20
	0x02EE8760 MOV X1, X31
	0x02EE8764 BL 0x337E314
	0x02EE8768 LDR X8, [X19 + 0x20]
	0x02EE876C MOV X19, X0
	0x02EE8770 LDRB W9, [X8 + 0x135]
	0x02EE8774 TBNZ X9, 0x0, 0x2EE8784
	0x02EE8778 MOV X0, X8
	0x02EE877C BL 0x1C5C684
	0x02EE8780 MOV X8, X0
	0x02EE8784 LDR X8, [X8 + 0xC0]
	0x02EE8788 LDR X20, [X8 + 0x8]
	0x02EE878C LDRB W8, [X20 + 0x135]
	0x02EE8790 TBNZ X8, 0x0, 0x2EE87A0
	0x02EE8794 MOV X0, X20
	0x02EE8798 BL 0x1C5C684
	0x02EE879C MOV X20, X0
	0x02EE87A0 CBZ X19, 0x2EE87C0
	0x02EE87A4 MOV X0, X19
	0x02EE87A8 MOV X1, X20
	0x02EE87AC BL 0x1C16E00
	0x02EE87B0 CBNZ X0, 0x2EE87C4
	0x02EE87B4 MOV X0, X19
	0x02EE87B8 MOV X1, X20
	0x02EE87BC BL 0x1C171E0
	0x02EE87C0 MOV X0, X31
	0x02EE87C4 LDP X20, X19, [X31 + 0x10]
	0x02EE87C8 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x14F4000
	007 Move W8, [X21+2909]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x120C000
	015 Move X0, [X0+1448]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2909], W8
	019 Move W8, [X19+44]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X9, 0x120C000
	022 Move X9, [X9+1448]
	023 Move W21, [X19]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X0, [X9]
	026 Move W9, W8
	027 ShiftRight W9, 31
	028 And W9, W9, 0x3FFFFFFF
	029 Move W8, 4
	030 NotImplemented "Instruction CSEL not yet implemented."
	031 Move W10, [X0+224]
	032 Compare W10, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move W0, W22
	036 Move W1, W21
	037 Move X2, X31
	038 Call Math.Min, X0, X1
	039 Move X8, [X20+32]
	040 Move W20, W0
	041 Move W9, [X8+309]
	042 Move TEMP, X9
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {49}
	046 Move X0, X8
	047 Call 0x1C5D684
	048 Move X8, X0
	049 Move X8, [X8+192]
	050 Move X0, [X8+152]
	051 Move W8, [X0+309]
	052 Move TEMP, X8
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {57}
	056 Call 0x1C5D684
	057 Move W1, W20
	058 Call 0x1C17D6C
	059 Move X8, [X19+8]
	060 Move W4, [X19+44]
	061 Move X2, X0
	062 Move [X19+32], X0
	063 Move X0, X8
	064 Move W1, W31
	065 Move W3, W31
	066 Move X5, X31
	067 Call Array.Copy, X0, X1, X2, X3, X4
	068 Move X8, [X19+32]
	069 Move [X19+8], X8
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move W21, 8
	072 Move X0, [X20+32]
	073 Move X21, [X19+32]
	074 Add X22, X19, 16
	075 Move W8, [X0+309]
	076 Move TEMP, X8
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfEqual {81}
	080 Call 0x1C5D684
	081 Move X8, [X0+192]
	082 Move X0, X22
	083 Move X1, X21
	084 Move X2, [X8+168]
	085 Call 0x2B87AB4, X0, X1
	086 Move X8, 0x120C000
	087 Move X8, [X8+1448]
	088 Move W21, [X19+44]
	089 Move W22, [X19]
	090 Move X0, [X8]
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Subtract W1, W22, W21
	096 Move W0, W21
	097 Move X2, X31
	098 Call Math.Min, X0, X1
	099 Move W21, W0
	100 Move X0, [X20+32]
	101 Move W8, [X0+309]
	102 Move TEMP, X8
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfEqual {107}
	106 Call 0x1C5D684
	107 Move X8, [X0+192]
	108 Move X0, [X8+152]
	109 Move W8, [X0+309]
	110 Move TEMP, X8
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfEqual {115}
	114 Call 0x1C5D684
	115 Move W1, W21
	116 Call 0x1C17D6C
	117 Move [X19+32], X0
	118 Move [X19+40], W31
	119 Move X20, [X31+32]
	120 Move X19, [X31+40]
	121 Move X22, [X31+16]
	122 Move X21, [X31+24]
	123 Move X30, [X31+48]
	124 Return 

