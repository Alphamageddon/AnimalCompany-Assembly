Type: System.Collections.Generic.Comparer`1

Method: System.Collections.Generic.Comparer`1<T> get_Default()

Disassembly:
	0x02901278 MOV X0, X20
	0x0290127C LDR X1, [X8 + 0x40]
	0x02901280 BL 0x1C16E00
	0x02901284 CBZ X0, 0x2901358
	0x02901288 LDR W8, [X22 + 0x18]
	0x0290128C CBZ W8, 0x2901354
	0x02901290 STR X20, [X22 + 0x20]
	0x02901294 CBZ X21, 0x2901348
	0x02901298 LDR X8, [X21]
	0x0290129C MOV X0, X21
	0x029012A0 MOV X1, X22
	0x029012A4 LDR X9, [X8 + 0x8D8]
	0x029012A8 LDR X2, [X8 + 0x8E0]
	0x029012AC BLR X9
	0x029012B0 CBZ X0, 0x2901348
	0x029012B4 LDR X8, [X0]
	0x029012B8 MOV X1, X20
	0x029012BC LDR X9, [X8 + 0x2A8]
	0x029012C0 LDR X2, [X8 + 0x2B0]
	0x029012C4 BLR X9
	0x029012C8 TBZ X0, 0x0, 0x29012DC
	0x029012CC ADRP X8, 0x181D000
	0x029012D0 LDR X0, [X24]
	0x029012D4 LDR X8, [X8 + 0x230]
	0x029012D8 B 0x29010AC
	0x029012DC LDR X0, [X19 + 0x20]
	0x029012E0 LDRB W8, [X0 + 0x135]
	0x029012E4 TBNZ X8, 0x0, 0x29012EC
	0x029012E8 BL 0x1C5C684
	0x029012EC LDR X8, [X0 + 0xC0]
	0x029012F0 LDR X0, [X8 + 0x30]
	0x029012F4 LDRB W8, [X0 + 0x135]
	0x029012F8 TBNZ X8, 0x0, 0x2901300
	0x029012FC BL 0x1C5C684
	0x02901300 BL 0x1C16F10
	0x02901304 LDR X8, [X19 + 0x20]
	0x02901308 MOV X19, X0
	0x0290130C LDRB W9, [X8 + 0x135]
	0x02901310 TBNZ X9, 0x0, 0x2901320
	0x02901314 MOV X0, X8
	0x02901318 BL 0x1C5C684
	0x0290131C MOV X8, X0
	0x02901320 LDR X8, [X8 + 0xC0]
	0x02901324 MOV X0, X19
	0x02901328 LDR X1, [X8 + 0x38]
	0x0290132C BL 0x243F99C
	0x02901330 MOV X0, X19
	0x02901334 LDP X20, X19, [X31 + 0x30]
	0x02901338 LDP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+32]
	006 Move W8, [X0+309]
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {12}
	011 Call 0x1C5D684
	012 Move X8, [X0+192]
	013 Move X0, [X8+16]
	014 Move W8, [X0+309]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {20}
	019 Call 0x1C5D684
	020 Move X8, [X0+184]
	021 Move X20, [X8]
	022 Call 0x1C17D44
	023 Compare X20, 0
	024 JumpIfNotEqual {69}
	025 Move X0, [X19+32]
	026 Move W8, [X0+309]
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {32}
	031 Call 0x1C5D684
	032 Move X8, [X0+192]
	033 Move X0, [X8+24]
	034 Call 0x290133C
	035 Move X20, X0
	036 Call 0x1C17D44
	037 Move X0, [X19+32]
	038 Move W8, [X0+309]
	039 Move TEMP, X8
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {44}
	043 Call 0x1C5D684
	044 Move X8, [X0+192]
	045 Move X0, [X8+16]
	046 Move W8, [X0+309]
	047 Move TEMP, X8
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {52}
	051 Call 0x1C5D684
	052 Move X8, [X0+184]
	053 Move [X8], X20
	054 Move X0, [X19+32]
	055 Move W8, [X0+309]
	056 Move TEMP, X8
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {61}
	060 Call 0x1C5D684
	061 Move X8, [X0+192]
	062 Move X0, [X8+16]
	063 Move W8, [X0+309]
	064 Move TEMP, X8
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {69}
	068 Call 0x1C5D684
	069 Move X0, X20
	070 Move X20, [X31+16]
	071 Move X19, [X31+24]
	072 Move X30, [X31+32]
	073 Return X0

Method: System.Collections.Generic.Comparer`1<T> CreateComparer()

Disassembly:
	0x0290133C LDP X24, X23, [X31 + 0x10]
	0x02901340 LDR X30, [X31], #0x40
	0x02901344 RET
	0x02901348 BL 0x1C16F20
	0x0290134C MOV X0, X20
	0x02901350 BL 0x1C171E0
	0x02901354 BL 0x1C16F28
	0x02901358 BL 0x1C16F44
	0x0290135C MOV X1, X31
	0x02901360 BL 0x1C16DEC
	0x02901364 STR X30, [X31 - 0x30]!
	0x02901368 STP X22, X21, [X31 + 0x10]
	0x0290136C STP X20, X19, [X31 + 0x20]
	0x02901370 MOV X20, X2
	0x02901374 CBZ X1, 0x2901484
	0x02901378 CBZ X20, 0x29014A4
	0x0290137C LDR X8, [X3 + 0x20]
	0x02901380 MOV X22, X1
	0x02901384 MOV X21, X3
	0x02901388 MOV X19, X0
	0x0290138C LDR X8, [X8 + 0xC0]
	0x02901390 LDR X1, [X8 + 0x40]
	0x02901394 LDRB W8, [X1 + 0x135]
	0x02901398 TBNZ X8, 0x0, 0x29013A8
	0x0290139C MOV X0, X1
	0x029013A0 BL 0x1C5C684
	0x029013A4 MOV X1, X0
	0x029013A8 MOV X0, X22
	0x029013AC BL 0x1C16E00
	0x029013B0 CBZ X0, 0x2901490
	0x029013B4 LDR X8, [X21 + 0x20]
	0x029013B8 LDR X8, [X8 + 0xC0]
	0x029013BC LDR X1, [X8 + 0x40]
	0x029013C0 LDRB W8, [X1 + 0x135]
	0x029013C4 TBNZ X8, 0x0, 0x29013D4
	0x029013C8 MOV X0, X1
	0x029013CC BL 0x1C5C684
	0x029013D0 MOV X1, X0
	0x029013D4 MOV X0, X20
	0x029013D8 BL 0x1C16E00
	0x029013DC CBZ X0, 0x2901490
	0x029013E0 LDR X8, [X21 + 0x20]
	0x029013E4 LDR X8, [X8 + 0xC0]
	0x029013E8 LDR X1, [X8 + 0x40]
	0x029013EC LDRB W8, [X1 + 0x135]
	0x029013F0 TBNZ X8, 0x0, 0x2901400
	0x029013F4 MOV X0, X1
	0x029013F8 BL 0x1C5C684
	0x029013FC MOV X1, X0
	0x02901400 LDR X8, [X22]
	0x02901404 LDR X9, [X1 + 0x40]
	0x02901408 MOV X0, X22
	0x0290140C LDR X8, [X8 + 0x40]
	0x02901410 CMP X8, X9
	0x02901414 B.NE 0x29014B8
	0x02901418 BL 0x1C16E08
	0x0290141C LDR X8, [X21 + 0x20]
	0x02901420 LDP X22, X21, [X0]
	0x02901424 LDR X8, [X8 + 0xC0]
	0x02901428 LDR X1, [X8 + 0x40]
	0x0290142C LDRB W8, [X1 + 0x135]
	0x02901430 TBNZ X8, 0x0, 0x2901440
	0x02901434 MOV X0, X1
	0x02901438 BL 0x1C5C684
	0x0290143C MOV X1, X0
	0x02901440 LDR X8, [X20]
	0x02901444 LDR X9, [X1 + 0x40]
	0x02901448 MOV X0, X20
	0x0290144C LDR X8, [X8 + 0x40]
	0x02901450 CMP X8, X9
	0x02901454 B.NE 0x29014B8
	0x02901458 BL 0x1C16E08
	0x0290145C LDR X8, [X19]
	0x02901460 LDP X3, X4, [X0]
	0x02901464 MOV X0, X19
	0x02901468 MOV X1, X22
	0x0290146C LDP X6, X5, [X8 + 0x198]
	0x02901470 MOV X2, X21
	0x02901474 LDP X20, X19, [X31 + 0x20]
	0x02901478 LDP X22, X21, [X31 + 0x10]
	0x0290147C LDR X30, [X31], #0x30
	0x02901480 BR X6
	0x02901484 CMP X20, 0x0
	0x02901488 CSINV W0, W31, W31, EQ
	0x0290148C B 0x29014A8
	0x02901490 MOVZ W0, 0x2
	0x02901494 MOV X1, X31
	0x02901498 BL 0x339DA4C
	0x0290149C MOV W0, W31
	0x029014A0 B 0x29014A8
	0x029014A4 MOVZ W0, 0x1
	0x029014A8 LDP X20, X19, [X31 + 0x20]
	0x029014AC LDP X22, X21, [X31 + 0x10]
	0x029014B0 LDR X30, [X31], #0x30
	0x029014B4 RET
	0x029014B8 BL 0x1C171E0
	0x029014BC MOV X1, X31
	0x029014C0 B 0x33BDD8C
	0x029014C4 STR X30, [X31 - 0x20]!
	0x029014C8 STP X20, X19, [X31 + 0x10]
	0x029014CC MOV X19, X0
	0x029014D0 LDR X0, [X0 + 0x20]
	0x029014D4 LDRB W8, [X0 + 0x135]
	0x029014D8 TBNZ X8, 0x0, 0x29014E0
	0x029014DC BL 0x1C5C684
	0x029014E0 LDR X8, [X0 + 0xC0]
	0x029014E4 LDR X0, [X8 + 0x10]
	0x029014E8 LDRB W8, [X0 + 0x135]
	0x029014EC TBNZ X8, 0x0, 0x29014F4
	0x029014F0 BL 0x1C5C684
	0x029014F4 LDR X8, [X0 + 0xB8]
	0x029014F8 LDR X20, [X8]
	0x029014FC BL 0x1C16D44
	0x02901500 CBNZ X20, 0x2901578
	0x02901504 LDR X0, [X19 + 0x20]
	0x02901508 LDRB W8, [X0 + 0x135]
	0x0290150C TBNZ X8, 0x0, 0x2901514
	0x02901510 BL 0x1C5C684
	0x02901514 LDR X8, [X0 + 0xC0]
	0x02901518 LDR X0, [X8 + 0x18]
	0x0290151C BL 0x2901588
	0x02901520 MOV X20, X0
	0x02901524 BL 0x1C16D44
	0x02901528 LDR X0, [X19 + 0x20]
	0x0290152C LDRB W8, [X0 + 0x135]
	0x02901530 TBNZ X8, 0x0, 0x2901538
	0x02901534 BL 0x1C5C684
	0x02901538 LDR X8, [X0 + 0xC0]
	0x0290153C LDR X0, [X8 + 0x10]
	0x02901540 LDRB W8, [X0 + 0x135]
	0x02901544 TBNZ X8, 0x0, 0x290154C
	0x02901548 BL 0x1C5C684
	0x0290154C LDR X8, [X0 + 0xB8]
	0x02901550 STR X20, [X8]
	0x02901554 LDR X0, [X19 + 0x20]
	0x02901558 LDRB W8, [X0 + 0x135]
	0x0290155C TBNZ X8, 0x0, 0x2901564
	0x02901560 BL 0x1C5C684
	0x02901564 LDR X8, [X0 + 0xC0]
	0x02901568 LDR X0, [X8 + 0x10]
	0x0290156C LDRB W8, [X0 + 0x135]
	0x02901570 TBNZ X8, 0x0, 0x2901578
	0x02901574 BL 0x1C5C684
	0x02901578 MOV X0, X20
	0x0290157C LDP X20, X19, [X31 + 0x10]
	0x02901580 LDR X30, [X31], #0x20
	0x02901584 RET
	0x02901588 STR X30, [X31 - 0x40]!
	0x0290158C STP X24, X23, [X31 + 0x10]
	0x02901590 STP X22, X21, [X31 + 0x20]
	0x02901594 STP X20, X19, [X31 + 0x30]
	0x02901598 ADRP X20, 0x1AD9000
	0x0290159C LDRB W8, [X20 + 0xD72]
	0x029015A0 MOV X19, X0
	0x029015A4 TBNZ X8, 0x0, 0x2901604
	0x029015A8 ADRP X0, 0x181D000
	0x029015AC LDR X0, [X0 + 0x220]
	0x029015B0 BL 0x1C16CF4
	0x029015B4 ADRP X0, 0x181D000
	0x029015B8 LDR X0, [X0 + 0x228]
	0x029015BC BL 0x1C16CF4
	0x029015C0 ADRP X0, 0x181D000
	0x029015C4 LDR X0, [X0 + 0x230]
	0x029015C8 BL 0x1C16CF4
	0x029015CC ADRP X0, 0x181D000
	0x029015D0 LDR X0, [X0 + 0x238]
	0x029015D4 BL 0x1C16CF4
	0x029015D8 ADRP X0, 0x181B000
	0x029015DC LDR X0, [X0 + 0x4E8]
	0x029015E0 BL 0x1C16CF4
	0x029015E4 ADRP X0, 0x17FA000
	0x029015E8 LDR X0, [X0 + 0xC60]
	0x029015EC BL 0x1C16CF4
	0x029015F0 ADRP X0, 0x17F2000
	0x029015F4 LDR X0, [X0 + 0x6C0]
	0x029015F8 BL 0x1C16CF4
	0x029015FC MOVZ W8, 0x1
	0x02901600 STRB W8, [X20 + 0xD72]
	0x02901604 LDR X0, [X19 + 0x20]
	0x02901608 ADRP X24, 0x17F2000
	0x0290160C LDRB W8, [X0 + 0x135]
	0x02901610 LDR X24, [X24 + 0x6C0]
	0x02901614 TBNZ X8, 0x0, 0x290161C
	0x02901618 BL 0x1C5C684
	0x0290161C LDR X8, [X24]
	0x02901620 LDR X9, [X0 + 0xC0]
	0x02901624 LDR W10, [X8 + 0xE0]
	0x02901628 LDR X20, [X9 + 0x20]
	0x0290162C CBNZ W10, 0x2901638
	0x02901630 MOV X0, X8
	0x02901634 BL 0x1C16DFC
	0x02901638 ADRP X23, 0x181B000
	0x0290163C LDR X23, [X23 + 0x4E8]
	0x02901640 MOV X0, X20
	0x02901644 MOV X1, X31
	0x02901648 BL 0x338C698
	0x0290164C MOV X20, X0
	0x02901650 CBZ X0, 0x2901680
	0x02901654 LDR X8, [X20]
	0x02901658 LDR X1, [X23]
	0x0290165C LDRB W10, [X8 + 0x130]
	0x02901660 LDRB W9, [X1 + 0x130]
	0x02901664 CMP W10, W9
	0x02901668 B.CC 0x2901968
	0x0290166C LDR X8, [X8 + 0xC8]
	0x02901670 ADD X8, X8, X9, 0x3, LSL
	0x02901674 LDUR X8, [X8 - 0x8]
	0x02901678 CMP X8, X1
	0x0290167C B.NE 0x2901968
	0x02901680 LDR X0, [X19 + 0x20]
	0x02901684 LDRB W8, [X0 + 0x135]
	0x02901688 TBNZ X8, 0x0, 0x2901690
	0x0290168C BL 0x1C5C684
	0x02901690 LDR X8, [X0 + 0xC0]
	0x02901694 MOV X1, X31
	0x02901698 LDR X0, [X8 + 0x28]
	0x0290169C BL 0x338C698
	0x029016A0 CBZ X0, 0x2901964
	0x029016A4 LDR X8, [X0]
	0x029016A8 MOV X1, X20
	0x029016AC LDR X9, [X8 + 0x2A8]
	0x029016B0 LDR X2, [X8 + 0x2B0]
	0x029016B4 BLR X9
	0x029016B8 TBZ X0, 0x0, 0x2901778
	0x029016BC ADRP X8, 0x181D000
	0x029016C0 LDR X0, [X24]
	0x029016C4 LDR X8, [X8 + 0x220]
	0x029016C8 LDR W9, [X0 + 0xE0]
	0x029016CC LDR X21, [X8]
	0x029016D0 CBNZ W9, 0x29016D8
	0x029016D4 BL 0x1C16DFC
	0x029016D8 MOV X0, X21
	0x029016DC MOV X1, X31
	0x029016E0 BL 0x338C698
	0x029016E4 LDR X8, [X23]
	0x029016E8 MOV X21, X0
	0x029016EC LDR W9, [X8 + 0xE0]
	0x029016F0 CBNZ W9, 0x29016FC
	0x029016F4 MOV X0, X8
	0x029016F8 BL 0x1C16DFC
	0x029016FC MOV X0, X21
	0x02901700 MOV X1, X20
	0x02901704 MOV X2, X31
	0x02901708 BL 0x33BCFB0
	0x0290170C LDR X8, [X19 + 0x20]
	0x02901710 MOV X19, X0
	0x02901714 LDRB W9, [X8 + 0x135]
	0x02901718 TBNZ X9, 0x0, 0x2901728
	0x0290171C MOV X0, X8
	0x02901720 BL 0x1C5C684
	0x02901724 MOV X8, X0
	0x02901728 LDR X8, [X8 + 0xC0]
	0x0290172C LDR X1, [X8]
	0x02901730 LDRB W8, [X1 + 0x135]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x1ADA000
	009 Move W8, [X20+3439]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {38}
	015 Move X0, 0x181E000
	016 Move X0, [X0+544]
	017 Call 0x1C17CF4
	018 Move X0, 0x181E000
	019 Move X0, [X0+552]
	020 Call 0x1C17CF4
	021 Move X0, 0x181E000
	022 Move X0, [X0+560]
	023 Call 0x1C17CF4
	024 Move X0, 0x181E000
	025 Move X0, [X0+568]
	026 Call 0x1C17CF4
	027 Move X0, 0x181C000
	028 Move X0, [X0+1256]
	029 Call 0x1C17CF4
	030 Move X0, 0x17FB000
	031 Move X0, [X0+3168]
	032 Call 0x1C17CF4
	033 Move X0, 0x17F3000
	034 Move X0, [X0+1728]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X20+3439], W8
	038 Move X0, [X19+32]
	039 Move X24, 0x17F3000
	040 Move W8, [X0+309]
	041 Move X24, [X24+1728]
	042 Move TEMP, X8
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {47}
	046 Call 0x1C5D684
	047 Move X8, [X24]
	048 Move X9, [X0+192]
	049 Move W10, [X8+224]
	050 Move X20, [X9+32]
	051 Compare W10, 0
	052 JumpIfNotEqual {55}
	053 Move X0, X8
	054 Call 0x1C17DFC
	055 Move X23, 0x181C000
	056 Move X23, [X23+1256]
	057 Move X0, X20
	058 Move X1, X31
	059 Call Type.GetTypeFromHandle, X0
	060 Move X20, X0
	061 Compare X0, 0
	062 JumpIfEqual {72}
	063 Move X8, [X20]
	064 Move X1, [X23]
	065 Move W10, [X8+304]
	066 Move W9, [X1+304]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X8, [X8+200]
	069 Add X8, X8, X9
	070 NotImplemented "Instruction LDUR not yet implemented."
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X0, [X19+32]
	073 Move W8, [X0+309]
	074 Move TEMP, X8
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfEqual {79}
	078 Call 0x1C5D684
	079 Move X8, [X0+192]
	080 Move X1, X31
	081 Move X0, [X8+40]
	082 Call Type.GetTypeFromHandle, X0
	083 Compare X0, 0
	084 JumpIfEqual {301}
	085 Move X8, [X0]
	086 Move X1, X20
	087 Move X9, [X8+680]
	088 Move X2, [X8+688]
	089 NotImplemented "Instruction BLR not yet implemented."
	090 Move TEMP, X0
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfNotEqual {148}
	094 Move X8, 0x181E000
	095 Move X0, [X24]
	096 Move X8, [X8+544]
	097 Move W9, [X0+224]
	098 Move X21, [X8]
	099 Compare W9, 0
	100 JumpIfNotEqual {102}
	101 Call 0x1C17DFC
	102 Move X0, X21
	103 Move X1, X31
	104 Call Type.GetTypeFromHandle, X0
	105 Move X8, [X23]
	106 Move X21, X0
	107 Move W9, [X8+224]
	108 Compare W9, 0
	109 JumpIfNotEqual {112}
	110 Move X0, X8
	111 Call 0x1C17DFC
	112 Move X0, X21
	113 Move X1, X20
	114 Move X2, X31
	115 Call RuntimeType.CreateInstanceForAnotherGenericParameter, X0, X1
	116 Move X8, [X19+32]
	117 Move X19, X0
	118 Move W9, [X8+309]
	119 Move TEMP, X9
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfEqual {126}
	123 Move X0, X8
	124 Call 0x1C5D684
	125 Move X8, X0
	126 Move X8, [X8+192]
	127 Move X1, [X8]
	128 Move W8, [X1+309]
	129 Move TEMP, X8
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfEqual {136}
	133 Move X0, X1
	134 Call 0x1C5D684
	135 Move X1, X0
	136 Compare X19, 0
	137 JumpIfEqual {292}
	138 Move X8, [X19]
	139 Move W9, [X1+304]
	140 Move W10, [X8+304]
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move X8, [X8+200]
	143 Add X8, X8, X9
	144 NotImplemented "Instruction LDUR not yet implemented."
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move X0, X19
	147 Call 0x1C181E0
	148 Compare X20, 0
	149 JumpIfEqual {301}
	150 Move X8, [X20]
	151 Move X0, X20
	152 Move X9, [X8+968]
	153 Move X1, [X8+976]
	154 NotImplemented "Instruction BLR not yet implemented."
	155 Move TEMP, X0
	156 And TEMP, TEMP, 1
	157 Compare TEMP, 1
	158 JumpIfNotEqual {262}
	159 Move X8, [X20]
	160 Move X0, X20
	161 Move X9, [X8+1096]
	162 Move X1, [X8+1104]
	163 NotImplemented "Instruction BLR not yet implemented."
	164 Move X9, 0x181E000
	165 Move X8, [X24]
	166 Move X9, [X9+568]
	167 Move X21, X0
	168 Move W10, [X8+224]
	169 Move X22, [X9]
	170 Compare W10, 0
	171 JumpIfNotEqual {174}
	172 Move X0, X8
	173 Call 0x1C17DFC
	174 Move X0, X22
	175 Move X1, X31
	176 Call Type.GetTypeFromHandle, X0
	177 Move X1, X0
	178 Move X0, X21
	179 Move X2, X31
	180 Call Type.op_Equality, X0, X1
	181 Move TEMP, X0
	182 And TEMP, TEMP, 1
	183 Compare TEMP, 1
	184 JumpIfNotEqual {262}
	185 Move X8, [X20]
	186 Move X0, X20
	187 Move X9, [X8+1128]
	188 Move X1, [X8+1136]
	189 NotImplemented "Instruction BLR not yet implemented."
	190 Compare X0, 0
	191 JumpIfEqual {301}
	192 Move W8, [X0+24]
	193 Compare W8, 0
	194 JumpIfEqual {304}
	195 Move X20, [X0+32]
	196 Compare X20, 0
	197 JumpIfEqual {207}
	198 Move X8, [X20]
	199 Move X1, [X23]
	200 Move W10, [X8+304]
	201 Move W9, [X1+304]
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Move X8, [X8+200]
	204 Add X8, X8, X9
	205 NotImplemented "Instruction LDUR not yet implemented."
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Move X8, 0x181E000
	208 Move X0, [X24]
	209 Move X8, [X8+552]
	210 Move W9, [X0+224]
	211 Move X21, [X8]
	212 Compare W9, 0
	213 JumpIfNotEqual {215}
	214 Call 0x1C17DFC
	215 Move X0, X21
	216 Move X1, X31
	217 Call Type.GetTypeFromHandle, X0
	218 Move X8, 0x17FB000
	219 Move X8, [X8+3168]
	220 Move X21, X0
	221 Move W1, 1
	222 Move X8, [X8]
	223 Move X0, X8
	224 Call 0x1C17D6C
	225 Compare X0, 0
	226 JumpIfEqual {301}
	227 Move X22, X0
	228 Compare X20, 0
	229 JumpIfEqual {236}
	230 Move X8, [X22]
	231 Move X0, X20
	232 Move X1, [X8+64]
	233 Call 0x1C17E00
	234 Compare X0, 0
	235 JumpIfEqual {305}
	236 Move W8, [X22+24]
	237 Compare W8, 0
	238 JumpIfEqual {304}
	239 Move [X22+32], X20
	240 Compare X21, 0
	241 JumpIfEqual {301}
	242 Move X8, [X21]
	243 Move X0, X21
	244 Move X1, X22
	245 Move X9, [X8+2264]
	246 Move X2, [X8+2272]
	247 NotImplemented "Instruction BLR not yet implemented."
	248 Compare X0, 0
	249 JumpIfEqual {301}
	250 Move X8, [X0]
	251 Move X1, X20
	252 Move X9, [X8+680]
	253 Move X2, [X8+688]
	254 NotImplemented "Instruction BLR not yet implemented."
	255 Move TEMP, X0
	256 And TEMP, TEMP, 1
	257 Compare TEMP, 1
	258 JumpIfNotEqual {262}
	259 Move X8, 0x181E000
	260 Move X0, [X24]
	261 Move X8, [X8+560]
	262 Move X0, [X19+32]
	263 Move W8, [X0+309]
	264 Move TEMP, X8
	265 And TEMP, TEMP, 1
	266 Compare TEMP, 1
	267 JumpIfEqual {269}
	268 Call 0x1C5D684
	269 Move X8, [X0+192]
	270 Move X0, [X8+48]
	271 Move W8, [X0+309]
	272 Move TEMP, X8
	273 And TEMP, TEMP, 1
	274 Compare TEMP, 1
	275 JumpIfEqual {277}
	276 Call 0x1C5D684
	277 Call 0x1C17F10
	278 Move X8, [X19+32]
	279 Move X19, X0
	280 Move W9, [X8+309]
	281 Move TEMP, X9
	282 And TEMP, TEMP, 1
	283 Compare TEMP, 1
	284 JumpIfEqual {288}
	285 Move X0, X8
	286 Call 0x1C5D684
	287 Move X8, X0
	288 Move X8, [X8+192]
	289 Move X0, X19
	290 Move X1, [X8+56]
	291 Call 0x24406B4, X0
	292 Move X0, X19
	293 Move X20, [X31+48]
	294 Move X19, [X31+56]
	295 Move X22, [X31+32]
	296 Move X21, [X31+40]
	297 Move X24, [X31+16]
	298 Move X23, [X31+24]
	299 Move X30, [X31+64]
	300 Return X0
	301 Call 0x1C17F20
	302 Move X0, X20
	303 Call 0x1C181E0
	304 Call 0x1C17F28
	305 Call 0x1C17F44
	306 Move X1, X31
	307 Call 0x1C17DEC

Method: System.Int32 Compare(T x, T y)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Int32 System.Collections.IComparer.Compare(System.Object x, System.Object y)

Disassembly:
	0x02901734 TBNZ X8, 0x0, 0x2901744
	0x02901738 MOV X0, X1
	0x0290173C BL 0x1C5C684
	0x02901740 MOV X1, X0
	0x02901744 CBZ X19, 0x290194C
	0x02901748 LDR X8, [X19]
	0x0290174C LDRB W9, [X1 + 0x130]
	0x02901750 LDRB W10, [X8 + 0x130]
	0x02901754 CMP W10, W9
	0x02901758 B.CC 0x2901770
	0x0290175C LDR X8, [X8 + 0xC8]
	0x02901760 ADD X8, X8, X9, 0x3, LSL
	0x02901764 LDUR X8, [X8 - 0x8]
	0x02901768 CMP X8, X1
	0x0290176C B.EQ 0x290194C
	0x02901770 MOV X0, X19
	0x02901774 BL 0x1C171E0
	0x02901778 CBZ X20, 0x2901964
	0x0290177C LDR X8, [X20]
	0x02901780 MOV X0, X20
	0x02901784 LDR X9, [X8 + 0x3C8]
	0x02901788 LDR X1, [X8 + 0x3D0]
	0x0290178C BLR X9
	0x02901790 TBZ X0, 0x0, 0x29018F8
	0x02901794 LDR X8, [X20]
	0x02901798 MOV X0, X20
	0x0290179C LDR X9, [X8 + 0x448]
	0x029017A0 LDR X1, [X8 + 0x450]
	0x029017A4 BLR X9
	0x029017A8 ADRP X9, 0x181D000
	0x029017AC LDR X8, [X24]
	0x029017B0 LDR X9, [X9 + 0x238]
	0x029017B4 MOV X21, X0
	0x029017B8 LDR W10, [X8 + 0xE0]
	0x029017BC LDR X22, [X9]
	0x029017C0 CBNZ W10, 0x29017CC
	0x029017C4 MOV X0, X8
	0x029017C8 BL 0x1C16DFC
	0x029017CC MOV X0, X22
	0x029017D0 MOV X1, X31
	0x029017D4 BL 0x338C698
	0x029017D8 MOV X1, X0
	0x029017DC MOV X0, X21
	0x029017E0 MOV X2, X31
	0x029017E4 BL 0x3395194
	0x029017E8 TBZ X0, 0x0, 0x29018F8
	0x029017EC LDR X8, [X20]
	0x029017F0 MOV X0, X20
	0x029017F4 LDR X9, [X8 + 0x468]
	0x029017F8 LDR X1, [X8 + 0x470]
	0x029017FC BLR X9
	0x02901800 CBZ X0, 0x2901964
	0x02901804 LDR W8, [X0 + 0x18]
	0x02901808 CBZ W8, 0x2901970
	0x0290180C LDR X20, [X0 + 0x20]
	0x02901810 CBZ X20, 0x2901840
	0x02901814 LDR X8, [X20]
	0x02901818 LDR X1, [X23]
	0x0290181C LDRB W10, [X8 + 0x130]
	0x02901820 LDRB W9, [X1 + 0x130]
	0x02901824 CMP W10, W9
	0x02901828 B.CC 0x2901968
	0x0290182C LDR X8, [X8 + 0xC8]
	0x02901830 ADD X8, X8, X9, 0x3, LSL
	0x02901834 LDUR X8, [X8 - 0x8]
	0x02901838 CMP X8, X1
	0x0290183C B.NE 0x2901968
	0x02901840 ADRP X8, 0x181D000
	0x02901844 LDR X0, [X24]
	0x02901848 LDR X8, [X8 + 0x228]
	0x0290184C LDR W9, [X0 + 0xE0]
	0x02901850 LDR X21, [X8]
	0x02901854 CBNZ W9, 0x290185C
	0x02901858 BL 0x1C16DFC
	0x0290185C MOV X0, X21
	0x02901860 MOV X1, X31
	0x02901864 BL 0x338C698
	0x02901868 ADRP X8, 0x17FA000
	0x0290186C LDR X8, [X8 + 0xC60]
	0x02901870 MOV X21, X0
	0x02901874 MOVZ W1, 0x1
	0x02901878 LDR X8, [X8]
	0x0290187C MOV X0, X8
	0x02901880 BL 0x1C16D6C
	0x02901884 CBZ X0, 0x2901964

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, X2
	007 Compare X1, 0
	008 JumpIfEqual {91}
	009 Compare X20, 0
	010 JumpIfEqual {97}
	011 Move X8, [X3+32]
	012 Move X22, X1
	013 Move X21, X3
	014 Move X19, X0
	015 Move X8, [X8+192]
	016 Move X1, [X8+64]
	017 Move W8, [X1+309]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {25}
	022 Move X0, X1
	023 Call 0x1C5D684
	024 Move X1, X0
	025 Move X0, X22
	026 Call 0x1C17E00
	027 Compare X0, 0
	028 JumpIfEqual {93}
	029 Move X8, [X21+32]
	030 Move X8, [X8+192]
	031 Move X1, [X8+64]
	032 Move W8, [X1+309]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {40}
	037 Move X0, X1
	038 Call 0x1C5D684
	039 Move X1, X0
	040 Move X0, X20
	041 Call 0x1C17E00
	042 Compare X0, 0
	043 JumpIfEqual {93}
	044 Move X8, [X21+32]
	045 Move X8, [X8+192]
	046 Move X1, [X8+64]
	047 Move W8, [X1+309]
	048 Move TEMP, X8
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {55}
	052 Move X0, X1
	053 Call 0x1C5D684
	054 Move X1, X0
	055 Move X8, [X22]
	056 Move X9, [X1+64]
	057 Move X0, X22
	058 Move X8, [X8+64]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Call 0x1C17E08
	061 Move X8, [X21+32]
	062 Move X21, [X0]
	063 Move X8, [X8+192]
	064 Move X1, [X8+64]
	065 Move W8, [X1+309]
	066 Move TEMP, X8
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfEqual {73}
	070 Move X0, X1
	071 Call 0x1C5D684
	072 Move X1, X0
	073 Move X8, [X20]
	074 Move X9, [X1+64]
	075 Move X0, X20
	076 Move X8, [X8+64]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Call 0x1C17E08
	079 Move X8, [X19]
	080 Move X2, [X0]
	081 Move X0, X19
	082 Move X1, X21
	083 Move X4, [X8+408]
	084 Move X3, [X8+416]
	085 Move X20, [X31+32]
	086 Move X19, [X31+40]
	087 Move X22, [X31+16]
	088 Move X21, [X31+24]
	089 Move X30, [X31+48]
	090 CallNoReturn X4
	091 NotImplemented "Instruction CMP not yet implemented."
	092 NotImplemented "Instruction CSINV not yet implemented."
	093 Move W0, 2
	094 Move X1, X31
	095 Call ThrowHelper.ThrowArgumentException, X0
	096 Move W0, W31
	097 Move W0, 1
	098 Move X20, [X31+32]
	099 Move X19, [X31+40]
	100 Move X22, [X31+16]
	101 Move X21, [X31+24]
	102 Move X30, [X31+48]
	103 Return X0
	104 Call 0x1C181E0

Method: System.Void .ctor()

Disassembly:
	0x02901888 MOV X22, X0
	0x0290188C CBZ X20, 0x29018A4

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

