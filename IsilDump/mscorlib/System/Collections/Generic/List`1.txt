Type: System.Collections.Generic.List`1

Method: System.Void .ctor()

Disassembly:
	0x02EF40F0 ADD X23, X23, 0x1
	0x02EF40F4 CMP X9, X8
	0x02EF40F8 B.LT 0x2EF4040
	0x02EF40FC MOV X0, X22
	0x02EF4100 LDP X20, X19, [X31 + 0x30]
	0x02EF4104 LDP X22, X21, [X31 + 0x20]
	0x02EF4108 LDP X24, X23, [X31 + 0x10]
	0x02EF410C LDR X30, [X31], #0x40
	0x02EF4110 RET
	0x02EF4114 BL 0x1C16F20
	0x02EF4118 BL 0x1C16F28
	0x02EF411C LDR X8, [X2 + 0x20]
	0x02EF4120 LDR W2, [X0 + 0x18]
	0x02EF4124 MOV X3, X1
	0x02EF4128 MOV W1, W31
	0x02EF412C LDR X8, [X8 + 0xC0]
	0x02EF4130 LDR X4, [X8 + 0x118]
	0x02EF4134 B 0x2EF4158
	0x02EF4138 LDR X8, [X3 + 0x20]
	0x02EF413C LDR W9, [X0 + 0x18]
	0x02EF4140 MOV X3, X2
	0x02EF4144 LDR X8, [X8 + 0xC0]
	0x02EF4148 LDR X4, [X8 + 0x118]
	0x02EF414C SUB W8, W9, W1
	0x02EF4150 MOV W2, W8
	0x02EF4154 B 0x2EF4158
	0x02EF4158 STR X30, [X31 - 0x30]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X1
	005 Move X1, X31
	006 Move X19, X0
	007 Call Object..ctor, X0
	008 Move X8, [X20+32]
	009 Move X8, [X8+192]
	010 Move X0, [X8+16]
	011 Move W8, [X0+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {17}
	016 Call 0x1C5D684
	017 Move W8, [X0+224]
	018 Compare W8, 0
	019 JumpIfNotEqual {21}
	020 Call 0x1C17DFC
	021 Move X8, [X20+32]
	022 Move X8, [X8+192]
	023 Move X0, [X8+16]
	024 Move W8, [X0+309]
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {30}
	029 Call 0x1C5D684
	030 Move X8, [X0+184]
	031 Move X8, [X8]
	032 Move [X19+16], X8
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return 

Method: System.Void .ctor(System.Int32 capacity)

Disassembly:
	0x02EF415C STP X22, X21, [X31 + 0x10]
	0x02EF4160 STP X20, X19, [X31 + 0x20]
	0x02EF4164 LDR W8, [X0 + 0x18]
	0x02EF4168 MOV X19, X3
	0x02EF416C MOV X20, X0
	0x02EF4170 MOV W21, W1
	0x02EF4174 CMP W8, W1
	0x02EF4178 MOV W22, W2
	0x02EF417C B.CS 0x2EF4188
	0x02EF4180 MOV X0, X31
	0x02EF4184 BL 0x339E78C
	0x02EF4188 TBNZ X22, 0x1F, 0x2EF419C
	0x02EF418C LDR W8, [X20 + 0x18]
	0x02EF4190 SUB W8, W8, W22
	0x02EF4194 CMP W8, W21
	0x02EF4198 B.GE 0x2EF41A4
	0x02EF419C MOV X0, X31
	0x02EF41A0 BL 0x339E7B8
	0x02EF41A4 CBNZ X19, 0x2EF41B4
	0x02EF41A8 MOVZ W0, 0x8
	0x02EF41AC MOV X1, X31
	0x02EF41B0 BL 0x338F3E0
	0x02EF41B4 ADD W8, W22, W21
	0x02EF41B8 CMP W8, W21
	0x02EF41BC B.LE 0x2EF4208
	0x02EF41C0 SXTW X21, W21
	0x02EF41C4 SXTW X22, W8
	0x02EF41C8 LDR X8, [X20 + 0x10]
	0x02EF41CC CBZ X8, 0x2EF4220
	0x02EF41D0 LDR W9, [X8 + 0x18]
	0x02EF41D4 CMP W21, W9
	0x02EF41D8 B.CS 0x2EF4224
	0x02EF41DC CBZ X19, 0x2EF4220
	0x02EF41E0 ADD X8, X8, X21, 0x3, LSL
	0x02EF41E4 LDR X9, [X19 + 0x18]
	0x02EF41E8 LDR X0, [X19 + 0x40]
	0x02EF41EC LDR X1, [X8 + 0x20]
	0x02EF41F0 LDR X2, [X19 + 0x28]
	0x02EF41F4 BLR X9
	0x02EF41F8 TBNZ X0, 0x0, 0x2EF420C
	0x02EF41FC ADD X21, X21, 0x1
	0x02EF4200 CMP X22, X21
	0x02EF4204 B.NE 0x2EF41C8
	0x02EF4208 MOVN W21, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W20, W1
	006 Move X1, X31
	007 Move X21, X2
	008 Move X19, X0
	009 Call Object..ctor, X0
	010 Move TEMP, X20
	011 And TEMP, TEMP, -2147483648
	012 Compare TEMP, -2147483648
	013 JumpIfEqual {41}
	014 Move X8, [X21+32]
	015 Move X8, [X8+192]
	016 Compare W20, 0
	017 JumpIfNotEqual {47}
	018 Move X0, [X8+16]
	019 Move W8, [X0+309]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {25}
	024 Call 0x1C5D684
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X8, [X21+32]
	030 Move X8, [X8+192]
	031 Move X0, [X8+16]
	032 Move W8, [X0+309]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {38}
	037 Call 0x1C5D684
	038 Move X8, [X0+184]
	039 Move X8, [X8]
	040 Move [X19+16], X8
	041 Move W0, 12
	042 Move W1, 4
	043 Move X2, X31
	044 Call ThrowHelper.ThrowArgumentOutOfRangeException, X0, X1
	045 Move X8, [X21+32]
	046 Move X8, [X8+192]
	047 Move X0, [X8+24]
	048 Move W8, [X0+309]
	049 Move TEMP, X8
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {54}
	053 Call 0x1C5D684
	054 Move W1, W20
	055 Call 0x1C17D6C
	056 Move [X19+16], X0
	057 Move X20, [X31+16]
	058 Move X19, [X31+24]
	059 Move X30, [X31+32]
	060 Move X21, [X31+40]
	061 Return 

Method: System.Void .ctor(System.Collections.Generic.IEnumerable`1<T> collection)

Disassembly:
	0x02EF420C MOV W0, W21
	0x02EF4210 LDP X20, X19, [X31 + 0x20]
	0x02EF4214 LDP X22, X21, [X31 + 0x10]
	0x02EF4218 LDR X30, [X31], #0x30
	0x02EF421C RET
	0x02EF4220 BL 0x1C16F20
	0x02EF4224 BL 0x1C16F28
	0x02EF4228 STR X30, [X31 - 0x30]!
	0x02EF422C STP X22, X21, [X31 + 0x10]
	0x02EF4230 STP X20, X19, [X31 + 0x20]
	0x02EF4234 MOV X20, X1
	0x02EF4238 MOV X19, X0
	0x02EF423C CBNZ X1, 0x2EF4248
	0x02EF4240 MOVZ W0, 0x8
	0x02EF4244 BL 0x338F3E0
	0x02EF4248 LDR W21, [X19 + 0x18]
	0x02EF424C SUBS W21, W21, 0x1
	0x02EF4250 B.MI 0x2EF42AC
	0x02EF4254 LDR X8, [X19 + 0x10]
	0x02EF4258 CBZ X8, 0x2EF42C0
	0x02EF425C LDR W9, [X8 + 0x18]
	0x02EF4260 CMP W21, W9
	0x02EF4264 B.CS 0x2EF42C4
	0x02EF4268 CBZ X20, 0x2EF42C0
	0x02EF426C MOV W22, W21
	0x02EF4270 ADD X8, X8, X22, 0x3, LSL
	0x02EF4274 LDR X9, [X20 + 0x18]
	0x02EF4278 LDR X0, [X20 + 0x40]
	0x02EF427C LDR X1, [X8 + 0x20]
	0x02EF4280 LDR X2, [X20 + 0x28]
	0x02EF4284 BLR X9
	0x02EF4288 TBZ X0, 0x0, 0x2EF424C
	0x02EF428C LDR X8, [X19 + 0x10]
	0x02EF4290 CBZ X8, 0x2EF42C0
	0x02EF4294 LDR W9, [X8 + 0x18]
	0x02EF4298 CMP W21, W9
	0x02EF429C B.CS 0x2EF42C4
	0x02EF42A0 ADD X8, X8, X22, 0x3, LSL
	0x02EF42A4 LDR X0, [X8 + 0x20]
	0x02EF42A8 B 0x2EF42B0
	0x02EF42AC MOV X0, X31
	0x02EF42B0 LDP X20, X19, [X31 + 0x20]
	0x02EF42B4 LDP X22, X21, [X31 + 0x10]
	0x02EF42B8 LDR X30, [X31], #0x30
	0x02EF42BC RET
	0x02EF42C0 BL 0x1C16F20
	0x02EF42C4 BL 0x1C16F28
	0x02EF42C8 LDR X8, [X2 + 0x20]
	0x02EF42CC LDR W2, [X0 + 0x18]
	0x02EF42D0 MOV X3, X1
	0x02EF42D4 LDR X8, [X8 + 0xC0]
	0x02EF42D8 LDR X4, [X8 + 0x120]
	0x02EF42DC SUB W8, W2, 0x1
	0x02EF42E0 MOV W1, W8
	0x02EF42E4 B 0x2EF4304
	0x02EF42E8 LDR X9, [X3 + 0x20]
	0x02EF42EC MOV X8, X2
	0x02EF42F0 ADD W2, W1, 0x1
	0x02EF42F4 MOV X3, X8
	0x02EF42F8 LDR X9, [X9 + 0xC0]
	0x02EF42FC LDR X4, [X9 + 0x120]
	0x02EF4300 B 0x2EF4304
	0x02EF4304 STR X30, [X31 - 0x30]!
	0x02EF4308 STP X22, X21, [X31 + 0x10]
	0x02EF430C STP X20, X19, [X31 + 0x20]
	0x02EF4310 MOV X19, X3
	0x02EF4314 MOV W22, W2
	0x02EF4318 MOV W21, W1
	0x02EF431C MOV X20, X0
	0x02EF4320 CBNZ X3, 0x2EF4330
	0x02EF4324 MOVZ W0, 0x8
	0x02EF4328 MOV X1, X31
	0x02EF432C BL 0x338F3E0
	0x02EF4330 LDR W8, [X20 + 0x18]
	0x02EF4334 CBZ W8, 0x2EF43CC
	0x02EF4338 CMP W8, W21
	0x02EF433C B.HI 0x2EF4348
	0x02EF4340 MOV X0, X31
	0x02EF4344 BL 0x339E78C
	0x02EF4348 TBNZ X22, 0x1F, 0x2EF4358
	0x02EF434C SUB W8, W21, W22
	0x02EF4350 ADDS W31, W8, 0x1
	0x02EF4354 B.PL 0x2EF4360
	0x02EF4358 MOV X0, X31
	0x02EF435C BL 0x339E7B8
	0x02EF4360 SUB W8, W21, W22
	0x02EF4364 CMP W8, W21
	0x02EF4368 B.GE 0x2EF43B4
	0x02EF436C SXTW X21, W21
	0x02EF4370 SXTW X22, W8
	0x02EF4374 LDR X8, [X20 + 0x10]
	0x02EF4378 CBZ X8, 0x2EF43D8
	0x02EF437C LDR W9, [X8 + 0x18]
	0x02EF4380 CMP W21, W9
	0x02EF4384 B.CS 0x2EF43DC
	0x02EF4388 CBZ X19, 0x2EF43D8
	0x02EF438C ADD X8, X8, X21, 0x3, LSL
	0x02EF4390 LDR X9, [X19 + 0x18]
	0x02EF4394 LDR X0, [X19 + 0x40]
	0x02EF4398 LDR X1, [X8 + 0x20]
	0x02EF439C LDR X2, [X19 + 0x28]
	0x02EF43A0 BLR X9
	0x02EF43A4 TBNZ X0, 0x0, 0x2EF43B8
	0x02EF43A8 SUB X21, X21, 0x1
	0x02EF43AC CMP X21, X22
	0x02EF43B0 B.GT 0x2EF4374
	0x02EF43B4 MOVN W21, 0x0
	0x02EF43B8 MOV W0, W21
	0x02EF43BC LDP X20, X19, [X31 + 0x20]
	0x02EF43C0 LDP X22, X21, [X31 + 0x10]
	0x02EF43C4 LDR X30, [X31], #0x30
	0x02EF43C8 RET
	0x02EF43CC ADDS W31, W21, 0x1
	0x02EF43D0 B.NE 0x2EF4340
	0x02EF43D4 B 0x2EF4348
	0x02EF43D8 BL 0x1C16F20
	0x02EF43DC BL 0x1C16F28
	0x02EF43E0 STR X30, [X31 - 0x30]!
	0x02EF43E4 STP X22, X21, [X31 + 0x10]
	0x02EF43E8 STP X20, X19, [X31 + 0x20]
	0x02EF43EC MOV X19, X1
	0x02EF43F0 MOV X20, X0
	0x02EF43F4 CBNZ X1, 0x2EF4400
	0x02EF43F8 MOVZ W0, 0x21
	0x02EF43FC BL 0x338F3E0
	0x02EF4400 LDR W8, [X20 + 0x18]
	0x02EF4404 CMP W8, 0x1
	0x02EF4408 B.LT 0x2EF446C
	0x02EF440C LDR W21, [X20 + 0x1C]
	0x02EF4410 MOV X22, X31
	0x02EF4414 MOV W8, W21
	0x02EF4418 CMP W21, W8
	0x02EF441C B.NE 0x2EF4464
	0x02EF4420 LDR X8, [X20 + 0x10]
	0x02EF4424 CBZ X8, 0x2EF4490
	0x02EF4428 LDR W9, [X8 + 0x18]
	0x02EF442C CMP X22, X9
	0x02EF4430 B.CS 0x2EF4494
	0x02EF4434 CBZ X19, 0x2EF4490
	0x02EF4438 ADD X8, X8, X22, 0x3, LSL
	0x02EF443C LDR X9, [X19 + 0x18]
	0x02EF4440 LDR X0, [X19 + 0x40]
	0x02EF4444 LDR X1, [X8 + 0x20]
	0x02EF4448 LDR X2, [X19 + 0x28]
	0x02EF444C BLR X9
	0x02EF4450 LDP W9, W8, [X20 + 0x18]
	0x02EF4454 ADD X22, X22, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, X1
	008 Move X1, X31
	009 Move X20, X2
	010 Move X19, X0
	011 Call Object..ctor, X0
	012 Compare X22, 0
	013 JumpIfNotEqual {17}
	014 Move W0, 6
	015 Move X1, X31
	016 Call ThrowHelper.ThrowArgumentNullException, X0
	017 Move X8, [X20+32]
	018 Move X8, [X8+192]
	019 Move X1, [X8+40]
	020 Move W8, [X1+309]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {28}
	025 Move X0, X1
	026 Call 0x1C5D684
	027 Move X1, X0
	028 Move X0, X22
	029 Call 0x1C17E00
	030 Compare X0, 0
	031 JumpIfEqual {57}
	032 Move X8, [X20+32]
	033 Move X21, X0
	034 Move X8, [X8+192]
	035 Move X1, [X8+40]
	036 Move W8, [X1+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {44}
	041 Move X0, X1
	042 Call 0x1C5D684
	043 Move X1, X0
	044 Move X8, [X21]
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 Compare X9, 0
	047 JumpIfEqual {54}
	048 Move X10, [X8+176]
	049 Add X10, X10, 8
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Subtract X9, X9, 1
	053 Add X10, X10, 16
	054 Move X0, X21
	055 Move W2, W31
	056 Call 0x1C5D788
	057 Move [X19+24], W31
	058 Move X8, [X20+32]
	059 Move X8, [X8+192]
	060 Move X0, [X8+16]
	061 Move W8, [X0+309]
	062 Move TEMP, X8
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {67}
	066 Call 0x1C5D684
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 Move X8, [X20+32]
	072 Move X8, [X8+192]
	073 Move X0, [X8+16]
	074 Move W9, [X0+309]
	075 Move TEMP, X9
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfEqual {82}
	079 Call 0x1C5D684
	080 Move X8, [X20+32]
	081 Move X8, [X8+192]
	082 Move X9, [X0+184]
	083 Move X0, X19
	084 Move X1, X22
	085 Move X22, [X31+16]
	086 Move X21, [X31+24]
	087 Move X9, [X9]
	088 Move [X19+16], X9
	089 Move X2, [X8+64]
	090 Move X20, [X31+32]
	091 Move X19, [X31+40]
	092 Move X30, [X31+48]
	093 Move X23, [X31+56]
	094 Call 0x2EF6754, X0, X1
	095 Return 
	096 NotImplemented "Instruction LDRSW not yet implemented."
	097 Add X8, X8, X9
	098 Add X0, X8, 312
	099 Move X8, [X0]
	100 Move X1, [X0+8]
	101 Move X0, X21
	102 NotImplemented "Instruction BLR not yet implemented."
	103 Move X8, [X20+32]
	104 Move X8, [X8+192]
	105 Compare W0, 0
	106 JumpIfEqual {143}
	107 Move W22, W0
	108 Move X0, [X8+24]
	109 Move W8, [X0+309]
	110 Move TEMP, X8
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfEqual {115}
	114 Call 0x1C5D684
	115 Move W1, W22
	116 Call 0x1C17D6C
	117 Move [X19+16], X0
	118 Move X8, [X20+32]
	119 Move X23, X0
	120 Move X8, [X8+192]
	121 Move X1, [X8+40]
	122 Move W8, [X1+309]
	123 Move TEMP, X8
	124 And TEMP, TEMP, 1
	125 Compare TEMP, 1
	126 JumpIfEqual {130}
	127 Move X0, X1
	128 Call 0x1C5D684
	129 Move X1, X0
	130 Move X8, [X21]
	131 NotImplemented "Instruction LDRH not yet implemented."
	132 Compare X9, 0
	133 JumpIfEqual {140}
	134 Move X10, [X8+176]
	135 Add X10, X10, 8
	136 NotImplemented "Instruction LDUR not yet implemented."
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Subtract X9, X9, 1
	139 Add X10, X10, 16
	140 Move W2, 5
	141 Move X0, X21
	142 Call 0x1C5D788
	143 Move X0, [X8+16]
	144 Move W8, [X0+309]
	145 Move TEMP, X8
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfEqual {150}
	149 Call 0x1C5D684
	150 Move W8, [X0+224]
	151 Compare W8, 0
	152 JumpIfNotEqual {154}
	153 Call 0x1C17DFC
	154 Move X8, [X20+32]
	155 Move X8, [X8+192]
	156 Move X0, [X8+16]
	157 Move W8, [X0+309]
	158 Move TEMP, X8
	159 And TEMP, TEMP, 1
	160 Compare TEMP, 1
	161 JumpIfEqual {163}
	162 Call 0x1C5D684
	163 Move X8, [X0+184]
	164 Move X8, [X8]
	165 Move [X19+16], X8
	166 Move W9, [X10]
	167 Add W9, W9, 5
	168 Add X8, X8, W9
	169 Add X0, X8, 312
	170 Move X8, [X0]
	171 Move X3, [X0+8]
	172 Move X0, X21
	173 Move X1, X23
	174 Move W2, W31
	175 NotImplemented "Instruction BLR not yet implemented."
	176 Move [X19+24], W22
	177 Move X20, [X31+32]
	178 Move X19, [X31+40]
	179 Move X22, [X31+16]
	180 Move X21, [X31+24]
	181 Move X30, [X31+48]
	182 Move X23, [X31+56]
	183 Return 

Method: System.Int32 get_Capacity()

Disassembly:
	0x02EF4458 SXTW X9, W9
	0x02EF445C CMP X22, X9
	0x02EF4460 B.LT 0x2EF4418
	0x02EF4464 CMP W21, W8
	0x02EF4468 B.NE 0x2EF447C
	0x02EF446C LDP X20, X19, [X31 + 0x20]
	0x02EF4470 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, [X8+24]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Void set_Capacity(System.Int32 value)

Disassembly:
	0x02EF4474 LDR X30, [X31], #0x30
	0x02EF4478 RET
	0x02EF447C LDP X20, X19, [X31 + 0x20]
	0x02EF4480 LDP X22, X21, [X31 + 0x10]
	0x02EF4484 MOV X0, X31
	0x02EF4488 LDR X30, [X31], #0x30
	0x02EF448C B 0x339E09C
	0x02EF4490 BL 0x1C16F20
	0x02EF4494 BL 0x1C16F28
	0x02EF4498 STP X31, X31, [X8]
	0x02EF449C STR X31, [X8 + 0x10]
	0x02EF44A0 LDR X9, [X1 + 0x20]
	0x02EF44A4 MOV X1, X0
	0x02EF44A8 MOV X0, X8
	0x02EF44AC LDR X9, [X9 + 0xC0]
	0x02EF44B0 LDR X2, [X9 + 0x140]
	0x02EF44B4 B 0x2BAFA8C
	0x02EF44B8 SUB X31, X31, 0x40
	0x02EF44BC STP X30, X19, [X31 + 0x30]
	0x02EF44C0 STP X31, X31, [X31 + 0x18]
	0x02EF44C4 STR X31, [X31 + 0x28]
	0x02EF44C8 LDR X8, [X1 + 0x20]
	0x02EF44CC MOV X19, X1
	0x02EF44D0 MOV X1, X0
	0x02EF44D4 ADD X0, X31, 0x18
	0x02EF44D8 LDR X8, [X8 + 0xC0]
	0x02EF44DC LDR X2, [X8 + 0x140]
	0x02EF44E0 BL 0x2BAFA8C
	0x02EF44E4 LDUR V0, [X31 + 0x18]
	0x02EF44E8 LDR X8, [X31 + 0x28]
	0x02EF44EC ADD X1, X31, 0x0
	0x02EF44F0 STR V0, [X31]
	0x02EF44F4 STR X8, [X31 + 0x10]
	0x02EF44F8 LDR X8, [X19 + 0x20]
	0x02EF44FC LDR X8, [X8 + 0xC0]
	0x02EF4500 LDR X0, [X8 + 0x138]
	0x02EF4504 BL 0x1C16E04
	0x02EF4508 LDP X30, X19, [X31 + 0x30]
	0x02EF450C ADD X31, X31, 0x40
	0x02EF4510 RET
	0x02EF4514 SUB X31, X31, 0x40
	0x02EF4518 STP X30, X19, [X31 + 0x30]
	0x02EF451C STP X31, X31, [X31 + 0x18]
	0x02EF4520 STR X31, [X31 + 0x28]
	0x02EF4524 LDR X8, [X1 + 0x20]
	0x02EF4528 MOV X19, X1
	0x02EF452C MOV X1, X0
	0x02EF4530 ADD X0, X31, 0x18
	0x02EF4534 LDR X8, [X8 + 0xC0]
	0x02EF4538 LDR X2, [X8 + 0x140]
	0x02EF453C BL 0x2BAFA8C
	0x02EF4540 LDUR V0, [X31 + 0x18]
	0x02EF4544 LDR X8, [X31 + 0x28]
	0x02EF4548 ADD X1, X31, 0x0
	0x02EF454C STR V0, [X31]
	0x02EF4550 STR X8, [X31 + 0x10]
	0x02EF4554 LDR X8, [X19 + 0x20]
	0x02EF4558 LDR X8, [X8 + 0xC0]
	0x02EF455C LDR X0, [X8 + 0x138]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+24]
	006 Move X19, X0
	007 Move W21, W1
	008 Move X20, X2
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move W0, 15
	011 Move W1, 21
	012 Move X2, X31
	013 Call ThrowHelper.ThrowArgumentOutOfRangeException, X0, X1
	014 Move X8, [X19+16]
	015 Compare X8, 0
	016 JumpIfEqual {69}
	017 Move W8, [X8+24]
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move X8, [X20+32]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X8, [X8+192]
	022 Move X0, [X8+24]
	023 Move W8, [X0+309]
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {29}
	028 Call 0x1C5D684
	029 Move W1, W21
	030 Call 0x1C17D6C
	031 Move W4, [X19+24]
	032 Move X20, X0
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X0, [X19+16]
	035 Move W1, W31
	036 Move X2, X20
	037 Move W3, W31
	038 Move X5, X31
	039 Call Array.Copy, X0, X1, X2, X3, X4
	040 Move [X19+16], X20
	041 Move X0, [X8+16]
	042 Move W8, [X0+309]
	043 Move TEMP, X8
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {48}
	047 Call 0x1C5D684
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X8, [X20+32]
	053 Move X8, [X8+192]
	054 Move X0, [X8+16]
	055 Move W8, [X0+309]
	056 Move TEMP, X8
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {61}
	060 Call 0x1C5D684
	061 Move X8, [X0+184]
	062 Move X8, [X8]
	063 Move [X19+16], X8
	064 Move X20, [X31+16]
	065 Move X19, [X31+24]
	066 Move X30, [X31+32]
	067 Move X21, [X31+40]
	068 Return 
	069 Call 0x1C17F20

Method: System.Int32 get_Count()

Disassembly:
	0x02EF4560 BL 0x1C16E04
	0x02EF4564 LDP X30, X19, [X31 + 0x30]

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.Boolean System.Collections.IList.get_IsFixedSize()

Disassembly:
	0x02EF4568 ADD X31, X31, 0x40
	0x02EF456C RET

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean System.Collections.Generic.ICollection<T>.get_IsReadOnly()

Disassembly:
	0x02EF4570 STR X30, [X31 - 0x30]!
	0x02EF4574 STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean System.Collections.IList.get_IsReadOnly()

Disassembly:
	0x02EF4578 STP X20, X19, [X31 + 0x20]
	0x02EF457C MOV X22, X3

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean System.Collections.ICollection.get_IsSynchronized()

Disassembly:
	0x02EF4580 MOV W19, W2
	0x02EF4584 MOV W20, W1

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Object System.Collections.ICollection.get_SyncRoot()

Disassembly:
	0x02EF4588 MOV X21, X0
	0x02EF458C TBNZ X1, 0x1F, 0x2EF461C
	0x02EF4590 TBNZ X19, 0x1F, 0x2EF4628
	0x02EF4594 LDR W8, [X21 + 0x18]
	0x02EF4598 SUB W8, W8, W20
	0x02EF459C CMP W8, W19
	0x02EF45A0 B.GE 0x2EF45B0
	0x02EF45A4 MOVZ W0, 0x17
	0x02EF45A8 MOV X1, X31
	0x02EF45AC BL 0x339DA4C
	0x02EF45B0 LDR X8, [X22 + 0x20]
	0x02EF45B4 LDR X8, [X8 + 0xC0]
	0x02EF45B8 LDR X0, [X8]
	0x02EF45BC LDRB W8, [X0 + 0x135]
	0x02EF45C0 TBNZ X8, 0x0, 0x2EF45C8
	0x02EF45C4 BL 0x1C5C684
	0x02EF45C8 BL 0x1C16F10
	0x02EF45CC LDR X8, [X22 + 0x20]
	0x02EF45D0 MOV W1, W19
	0x02EF45D4 MOV X22, X0
	0x02EF45D8 LDR X8, [X8 + 0xC0]
	0x02EF45DC LDR X2, [X8 + 0x150]
	0x02EF45E0 BL 0x2EF315C
	0x02EF45E4 CBZ X22, 0x2EF463C
	0x02EF45E8 LDR X0, [X21 + 0x10]
	0x02EF45EC LDR X2, [X22 + 0x10]
	0x02EF45F0 MOV W1, W20
	0x02EF45F4 MOV W3, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x14E8000
	005 Move W8, [X20+2951]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x1206000
	012 Move X0, [X0+3264]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2951], W8
	016 Add X19, X19, 32
	017 Move X0, [X19]
	018 Compare X0, 0
	019 JumpIfNotEqual {32}
	020 Move X8, 0x1206000
	021 Move X8, [X8+3264]
	022 Move X0, [X8]
	023 Call 0x1C17F10
	024 Move X1, X31
	025 Move X20, X0
	026 Call Object..ctor, X0
	027 Move X0, X19
	028 Move X1, X20
	029 Move X2, X31
	030 Call 0x1C25138
	031 Move X0, [X19]
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0

Method: T get_Item(System.Int32 index)

Disassembly:
	0x02EF45F8 MOV W4, W19
	0x02EF45FC MOV X5, X31
	0x02EF4600 BL 0x339FCE8
	0x02EF4604 STR W19, [X22 + 0x18]
	0x02EF4608 MOV X0, X22
	0x02EF460C LDP X20, X19, [X31 + 0x20]
	0x02EF4610 LDP X22, X21, [X31 + 0x10]
	0x02EF4614 LDR X30, [X31], #0x30
	0x02EF4618 RET
	0x02EF461C MOV X0, X31
	0x02EF4620 BL 0x339E2CC
	0x02EF4624 TBZ X19, 0x1F, 0x2EF4594
	0x02EF4628 MOVZ W0, 0x10
	0x02EF462C MOVZ W1, 0x4
	0x02EF4630 MOV X2, X31
	0x02EF4634 BL 0x339DF10
	0x02EF4638 B 0x2EF4594
	0x02EF463C BL 0x1C16F20
	0x02EF4640 LDR X8, [X2 + 0x20]
	0x02EF4644 LDR W3, [X0 + 0x18]
	0x02EF4648 MOV W2, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+24]
	005 Move X20, X0
	006 Move W19, W1
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move X0, X31
	009 Call ThrowHelper.ThrowArgumentOutOfRange_IndexException
	010 Move X8, [X20+16]
	011 Compare X8, 0
	012 JumpIfEqual {21}
	013 Move W9, [X8+24]
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Add X8, X8, W19
	016 Move X0, [X8+32]
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+32]
	020 Return X0
	021 Call 0x1C17F20
	022 Call 0x1C17F28

Method: System.Void set_Item(System.Int32 index, T value)

Disassembly:
	0x02EF464C LDR X9, [X8 + 0xC0]
	0x02EF4650 LDR X8, [X0 + 0x10]
	0x02EF4654 LDR X4, [X9 + 0x158]
	0x02EF4658 MOV X0, X8
	0x02EF465C B 0x22E7928
	0x02EF4660 STP X30, X21, [X31 - 0x20]!
	0x02EF4664 STP X20, X19, [X31 + 0x10]
	0x02EF4668 LDR X8, [X2 + 0x20]
	0x02EF466C MOV X20, X2
	0x02EF4670 MOV X21, X1
	0x02EF4674 MOV X19, X0
	0x02EF4678 LDR X8, [X8 + 0xC0]
	0x02EF467C LDR X8, [X8 + 0x10]
	0x02EF4680 LDRB W9, [X8 + 0x135]
	0x02EF4684 TBNZ X9, 0x0, 0x2EF4694
	0x02EF4688 MOV X0, X8
	0x02EF468C BL 0x1C5C684
	0x02EF4690 MOV X8, X0
	0x02EF4694 LDR W9, [X8 + 0xE0]
	0x02EF4698 CBNZ W9, 0x2EF46A4
	0x02EF469C MOV X0, X8
	0x02EF46A0 BL 0x1C16DFC
	0x02EF46A4 LDR X8, [X20 + 0x20]
	0x02EF46A8 MOV X0, X21
	0x02EF46AC LDR X8, [X8 + 0xC0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+24]
	006 Move X19, X0
	007 Move W20, W1
	008 Move X21, X2
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X0, X31
	011 Call ThrowHelper.ThrowArgumentOutOfRange_IndexException
	012 Move X8, [X19+16]
	013 Compare X8, 0
	014 JumpIfEqual {27}
	015 Move W9, [X8+24]
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Add X8, X8, W20
	018 Move [X8+32], X21
	019 Move W8, [X19+28]
	020 Add W8, W8, 1
	021 Move [X19+28], W8
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Return 
	027 Call 0x1C17F20
	028 Call 0x1C17F28

Method: System.Boolean IsCompatibleObject(System.Object value)

Disassembly:
	0x02EF46B0 LDR X1, [X8 + 0xD8]
	0x02EF46B4 BL 0x2EF36B0
	0x02EF46B8 TBZ X0, 0x0, 0x2EF4730
	0x02EF46BC LDR X8, [X20 + 0x20]
	0x02EF46C0 LDR X8, [X8 + 0xC0]
	0x02EF46C4 LDR X1, [X8 + 0x48]
	0x02EF46C8 LDRB W8, [X1 + 0x135]
	0x02EF46CC TBNZ X8, 0x0, 0x2EF46DC
	0x02EF46D0 MOV X0, X1
	0x02EF46D4 BL 0x1C5C684
	0x02EF46D8 MOV X1, X0
	0x02EF46DC CBZ X21, 0x2EF4740
	0x02EF46E0 LDR X8, [X21]
	0x02EF46E4 LDR X9, [X1 + 0x40]
	0x02EF46E8 MOV X0, X21
	0x02EF46EC LDR X8, [X8 + 0x40]
	0x02EF46F0 CMP X8, X9
	0x02EF46F4 B.NE 0x2EF4744
	0x02EF46F8 BL 0x1C16E08
	0x02EF46FC LDR X8, [X20 + 0x20]
	0x02EF4700 LDR X1, [X0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X1+32]
	004 Move X19, X0
	005 Move W9, [X8+309]
	006 Move TEMP, X9
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfEqual {13}
	010 Move X0, X8
	011 Call 0x1C5D684
	012 Move X8, X0
	013 Move X8, [X8+192]
	014 Move X1, [X8+72]
	015 Move W8, [X1+309]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {23}
	020 Move X0, X1
	021 Call 0x1C5D684
	022 Move X1, X0
	023 Move X0, X19
	024 Call 0x1C17E00
	025 NotImplemented "Instruction CMP not yet implemented."
	026 NotImplemented "Instruction CSET not yet implemented."
	027 Move X30, [X31+16]
	028 Move X19, [X31+24]
	029 Return X0

Method: System.Object System.Collections.IList.get_Item(System.Int32 index)

Disassembly:
	0x02EF4704 LDR X0, [X19 + 0x10]
	0x02EF4708 LDR W3, [X19 + 0x18]
	0x02EF470C LDR X8, [X8 + 0xC0]
	0x02EF4710 LDP X20, X19, [X31 + 0x10]
	0x02EF4714 MOV W2, W31
	0x02EF4718 LDR X8, [X8 + 0xD0]
	0x02EF471C LDR X8, [X8 + 0x20]
	0x02EF4720 LDR X8, [X8 + 0xC0]
	0x02EF4724 LDR X4, [X8 + 0x158]
	0x02EF4728 LDP X30, X21, [X31], #0x20
	0x02EF472C B 0x22E7928
	0x02EF4730 LDP X20, X19, [X31 + 0x10]
	0x02EF4734 MOVN W0, 0x0

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X19, X2
	005 Call 0x2EF45F8, X0, X1
	006 Move [X31+8], X0
	007 Move X8, [X19+32]
	008 Add X1, X31, 8
	009 Move X8, [X8+192]
	010 Move X0, [X8+72]
	011 Call 0x1C17E04
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Add X31, X31, 32
	015 Return X0

Method: System.Void System.Collections.IList.set_Item(System.Int32 index, System.Object value)

Disassembly:
	0x02EF4738 LDP X30, X21, [X31], #0x20
	0x02EF473C RET
	0x02EF4740 BL 0x1C16F20
	0x02EF4744 BL 0x1C171E0
	0x02EF4748 STR X30, [X31 - 0x30]!
	0x02EF474C STP X22, X21, [X31 + 0x10]
	0x02EF4750 STP X20, X19, [X31 + 0x20]
	0x02EF4754 LDR W8, [X0 + 0x18]
	0x02EF4758 MOV X20, X3
	0x02EF475C MOV X21, X0
	0x02EF4760 MOV W19, W2
	0x02EF4764 CMP W8, W2
	0x02EF4768 MOV X22, X1
	0x02EF476C B.GE 0x2EF477C
	0x02EF4770 MOV X0, X31
	0x02EF4774 BL 0x339E294
	0x02EF4778 LDR W8, [X21 + 0x18]
	0x02EF477C LDR X9, [X20 + 0x20]
	0x02EF4780 LDR X0, [X21 + 0x10]
	0x02EF4784 SUB W3, W8, W19
	0x02EF4788 MOV X1, X22
	0x02EF478C LDR X9, [X9 + 0xC0]
	0x02EF4790 MOV W2, W19
	0x02EF4794 LDP X20, X19, [X31 + 0x20]
	0x02EF4798 LDP X22, X21, [X31 + 0x10]
	0x02EF479C LDR X4, [X9 + 0x158]
	0x02EF47A0 LDR X30, [X31], #0x30
	0x02EF47A4 B 0x22E7928
	0x02EF47A8 STP X30, X23, [X31 - 0x30]!
	0x02EF47AC STP X22, X21, [X31 + 0x10]
	0x02EF47B0 STP X20, X19, [X31 + 0x20]
	0x02EF47B4 LDR W8, [X0 + 0x18]
	0x02EF47B8 MOV X20, X4
	0x02EF47BC MOV W19, W3
	0x02EF47C0 MOV X22, X0
	0x02EF47C4 MOV W21, W2
	0x02EF47C8 CMP W8, W2
	0x02EF47CC MOV X23, X1
	0x02EF47D0 B.GE 0x2EF47DC
	0x02EF47D4 MOV X0, X31
	0x02EF47D8 BL 0x339E294
	0x02EF47DC TBNZ X19, 0x1F, 0x2EF47F0
	0x02EF47E0 LDR W8, [X22 + 0x18]
	0x02EF47E4 SUB W8, W8, W19
	0x02EF47E8 CMP W8, W21
	0x02EF47EC B.GE 0x2EF47F8
	0x02EF47F0 MOV X0, X31
	0x02EF47F4 BL 0x339E7B8
	0x02EF47F8 LDR X8, [X20 + 0x20]
	0x02EF47FC LDR X0, [X22 + 0x10]
	0x02EF4800 MOV W2, W21
	0x02EF4804 MOV W3, W19
	0x02EF4808 LDR X8, [X8 + 0xC0]
	0x02EF480C LDP X20, X19, [X31 + 0x20]
	0x02EF4810 LDP X22, X21, [X31 + 0x10]
	0x02EF4814 MOV X1, X23
	0x02EF4818 LDR X4, [X8 + 0x158]
	0x02EF481C LDP X30, X23, [X31], #0x30
	0x02EF4820 B 0x22E7928
	0x02EF4824 STR X30, [X31 - 0x30]!
	0x02EF4828 STP X22, X21, [X31 + 0x10]
	0x02EF482C STP X20, X19, [X31 + 0x20]
	0x02EF4830 LDR W8, [X0 + 0x18]
	0x02EF4834 MOV X22, X3
	0x02EF4838 MOV X19, X0
	0x02EF483C MOV W20, W1
	0x02EF4840 CMP W8, W1
	0x02EF4844 MOV X21, X2
	0x02EF4848 B.CS 0x2EF4860
	0x02EF484C MOVZ W0, 0xD
	0x02EF4850 MOVZ W1, 0x1B
	0x02EF4854 MOV X2, X31
	0x02EF4858 BL 0x339DF10
	0x02EF485C LDR W8, [X19 + 0x18]
	0x02EF4860 LDR X9, [X19 + 0x10]
	0x02EF4864 CBZ X9, 0x2EF48EC
	0x02EF4868 LDR W9, [X9 + 0x18]
	0x02EF486C CMP W8, W9
	0x02EF4870 B.NE 0x2EF4890
	0x02EF4874 LDR X9, [X22 + 0x20]
	0x02EF4878 ADD W1, W8, 0x1
	0x02EF487C MOV X0, X19
	0x02EF4880 LDR X9, [X9 + 0xC0]
	0x02EF4884 LDR X2, [X9 + 0x78]
	0x02EF4888 BL 0x2EF3E98
	0x02EF488C LDR W8, [X19 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X3+32]
	007 Move X19, X2
	008 Move W21, W1
	009 Move X22, X0
	010 Move X8, [X8+192]
	011 Move W1, 15
	012 Move X0, X19
	013 Move X20, X3
	014 Move X2, [X8+88]
	015 Call 0x229DE08, X0, X1
	016 Move X8, [X20+32]
	017 Move X8, [X8+192]
	018 Move X1, [X8+72]
	019 Move W8, [X1+309]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {27}
	024 Move X0, X1
	025 Call 0x1C5D684
	026 Move X1, X0
	027 Compare X19, 0
	028 JumpIfEqual {45}
	029 Move X8, [X19]
	030 Move X9, [X1+64]
	031 Move X8, [X8+64]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X19
	034 Call 0x1C17E08
	035 Move X2, [X0]
	036 Move X0, X22
	037 Move W1, W21
	038 Call 0x2EF464C, X0, X1, X2
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return 
	045 Call 0x1C17F20
	046 Move X0, X19
	047 Call 0x1C181E0
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X21, X0
	050 Move X0, X21
	051 Call 0x3EB2AD0
	052 Move X21, X0
	053 Move X0, 0x1208000
	054 Move X0, [X0+3080]
	055 Call 0x1C17D08
	056 Move X8, [X21]
	057 Move X1, [X8]
	058 Call 0x1C18270
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {87}
	063 Call 0x3EB2AE0
	064 Move X8, [X20+32]
	065 Move X0, 0x1200000
	066 Move X8, [X8+192]
	067 Move X20, [X8+104]
	068 Move X0, [X0+1728]
	069 Call 0x1C17D08
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Move X0, X20
	075 Move X1, X31
	076 Call Type.GetTypeFromHandle, X0
	077 Move X1, X0
	078 Move X0, X19
	079 Move X20, [X31+32]
	080 Move X19, [X31+40]
	081 Move X22, [X31+16]
	082 Move X21, [X31+24]
	083 Move X2, X31
	084 Move X30, [X31+48]
	085 Call ThrowHelper.ThrowWrongValueTypeArgumentException, X0, X1
	086 Return 
	087 Move W0, 8
	088 Call 0x3EB2AF0
	089 Move X8, [X21]
	090 Move [X0], X8
	091 Move X1, 0xFC1000
	092 Add X1, X1, 3672
	093 Move X2, X31
	094 Call 0x3EB2B00
	095 Move X21, X0
	096 Call 0x3EB2AE0
	097 Move X0, X21
	098 Call 0x1D2D690
	099 Call 0x1991590

Method: System.Void Add(T item)

Disassembly:
	0x02EF4890 SUBS W4, W8, W20
	0x02EF4894 B.LE 0x2EF48B0
	0x02EF4898 LDR X0, [X19 + 0x10]
	0x02EF489C ADD W3, W20, 0x1
	0x02EF48A0 MOV W1, W20
	0x02EF48A4 MOV X5, X31
	0x02EF48A8 MOV X2, X0
	0x02EF48AC BL 0x339FCE8
	0x02EF48B0 LDR X8, [X19 + 0x10]
	0x02EF48B4 CBZ X8, 0x2EF48EC
	0x02EF48B8 LDR W9, [X8 + 0x18]
	0x02EF48BC CMP W9, W20
	0x02EF48C0 B.LS 0x2EF48F0
	0x02EF48C4 ADD X8, X8, W20, 0x3, SXTW
	0x02EF48C8 STR X21, [X8 + 0x20]
	0x02EF48CC LDR V0, [X19 + 0x18]
	0x02EF48D0 MOVI V1.2S, 0x1
	0x02EF48D4 LDP X22, X21, [X31 + 0x10]
	0x02EF48D8 ADD S0.2S, S0.2S, S1.2S
	0x02EF48DC STR D0, [X19 + 0x18]
	0x02EF48E0 LDP X20, X19, [X31 + 0x20]
	0x02EF48E4 LDR X30, [X31], #0x30

ISIL:
	001 Move [X31-16], X30
	002 Move W9, [X0+28]
	003 Move X8, [X0+16]
	004 Add W9, W9, 1
	005 Move [X0+28], W9
	006 Compare X8, 0
	007 JumpIfEqual {21}
	008 NotImplemented "Instruction LDRSW not yet implemented."
	009 Move W10, [X8+24]
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Add W10, W9, 1
	012 Add X8, X8, X9
	013 Move [X0+24], W10
	014 Move [X8+32], X1
	015 Move X30, [X31+16]
	016 Return 
	017 Move X8, [X2+32]
	018 Move X8, [X8+192]
	019 Move X2, [X8+112]
	020 Move X30, [X31+16]
	021 Call 0x1C17F20

Method: System.Void AddWithResize(T item)

Disassembly:
	0x02EF48E8 RET
	0x02EF48EC BL 0x1C16F20
	0x02EF48F0 BL 0x1C16F28
	0x02EF48F4 STR X30, [X31 - 0x30]!
	0x02EF48F8 STP X22, X21, [X31 + 0x10]
	0x02EF48FC STP X20, X19, [X31 + 0x20]
	0x02EF4900 LDR X8, [X3 + 0x20]
	0x02EF4904 MOV X19, X2
	0x02EF4908 MOV W21, W1
	0x02EF490C MOV X22, X0
	0x02EF4910 LDR X8, [X8 + 0xC0]
	0x02EF4914 MOVZ W1, 0x14
	0x02EF4918 MOV X0, X19
	0x02EF491C MOV X20, X3
	0x02EF4920 LDR X2, [X8 + 0x58]
	0x02EF4924 BL 0x229CE08
	0x02EF4928 LDR X8, [X20 + 0x20]
	0x02EF492C LDR X8, [X8 + 0xC0]
	0x02EF4930 LDR X1, [X8 + 0x48]
	0x02EF4934 LDRB W8, [X1 + 0x135]
	0x02EF4938 TBNZ X8, 0x0, 0x2EF4948
	0x02EF493C MOV X0, X1
	0x02EF4940 BL 0x1C5C684
	0x02EF4944 MOV X1, X0
	0x02EF4948 CBZ X19, 0x2EF4994
	0x02EF494C LDR X8, [X19]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+32]
	007 NotImplemented "Instruction LDRSW not yet implemented."
	008 Move X19, X1
	009 Move X20, X0
	010 Move X8, [X8+192]
	011 Add W21, W22, 1
	012 Move W1, W21
	013 Move X2, [X8+120]
	014 Call 0x2EF4E98, X0, X1
	015 Move X8, [X20+16]
	016 Move [X20+24], W21
	017 Compare X8, 0
	018 JumpIfEqual {29}
	019 Move W9, [X8+24]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Add X8, X8, X22
	022 Move [X8+32], X19
	023 Move X20, [X31+32]
	024 Move X19, [X31+40]
	025 Move X22, [X31+16]
	026 Move X21, [X31+24]
	027 Move X30, [X31+48]
	028 Return 
	029 Call 0x1C17F20
	030 Call 0x1C17F28

Method: System.Int32 System.Collections.IList.Add(System.Object item)

Disassembly:
	0x02EF4950 LDR X9, [X1 + 0x40]
	0x02EF4954 LDR X8, [X8 + 0x40]
	0x02EF4958 CMP X8, X9
	0x02EF495C B.NE 0x2EF4998
	0x02EF4960 MOV X0, X19
	0x02EF4964 BL 0x1C16E08
	0x02EF4968 LDR X8, [X20 + 0x20]
	0x02EF496C LDR X2, [X0]
	0x02EF4970 LDR X8, [X8 + 0xC0]
	0x02EF4974 LDR X3, [X8 + 0x160]
	0x02EF4978 MOV X0, X22
	0x02EF497C MOV W1, W21
	0x02EF4980 BL 0x2EF4824
	0x02EF4984 LDP X20, X19, [X31 + 0x20]
	0x02EF4988 LDP X22, X21, [X31 + 0x10]
	0x02EF498C LDR X30, [X31], #0x30
	0x02EF4990 RET
	0x02EF4994 BL 0x1C16F20
	0x02EF4998 MOV X0, X19
	0x02EF499C BL 0x1C171E0
	0x02EF49A0 CMP W1, 0x1
	0x02EF49A4 MOV X21, X0
	0x02EF49A8 B.NE 0x2EF4A4C
	0x02EF49AC MOV X0, X21
	0x02EF49B0 BL 0x3EB1AD0
	0x02EF49B4 MOV X21, X0
	0x02EF49B8 ADRP X0, 0x1207000
	0x02EF49BC LDR X0, [X0 + 0xC08]
	0x02EF49C0 BL 0x1C16D08
	0x02EF49C4 LDR X8, [X21]
	0x02EF49C8 LDR X1, [X8]
	0x02EF49CC BL 0x1C17270
	0x02EF49D0 TBZ X0, 0x0, 0x2EF4A24
	0x02EF49D4 BL 0x3EB1AE0
	0x02EF49D8 LDR X8, [X20 + 0x20]
	0x02EF49DC ADRP X0, 0x11FF000
	0x02EF49E0 LDR X8, [X8 + 0xC0]
	0x02EF49E4 LDR X20, [X8 + 0x68]
	0x02EF49E8 LDR X0, [X0 + 0x6C0]
	0x02EF49EC BL 0x1C16D08
	0x02EF49F0 LDR W8, [X0 + 0xE0]
	0x02EF49F4 CBNZ W8, 0x2EF49FC
	0x02EF49F8 BL 0x1C16DFC
	0x02EF49FC MOV X0, X20
	0x02EF4A00 MOV X1, X31
	0x02EF4A04 BL 0x338C698
	0x02EF4A08 MOV X1, X0
	0x02EF4A0C MOV X0, X19
	0x02EF4A10 LDP X20, X19, [X31 + 0x20]
	0x02EF4A14 LDP X22, X21, [X31 + 0x10]
	0x02EF4A18 MOV X2, X31
	0x02EF4A1C LDR X30, [X31], #0x30
	0x02EF4A20 B 0x339D978
	0x02EF4A24 MOVZ W0, 0x8
	0x02EF4A28 BL 0x3EB1AF0
	0x02EF4A2C LDR X8, [X21]
	0x02EF4A30 STR X8, [X0]
	0x02EF4A34 ADRP X1, 0xFC0000
	0x02EF4A38 ADD X1, X1, 0xE58
	0x02EF4A3C MOV X2, X31
	0x02EF4A40 BL 0x3EB1B00
	0x02EF4A44 MOV X21, X0
	0x02EF4A48 BL 0x3EB1AE0
	0x02EF4A4C MOV X0, X21
	0x02EF4A50 BL 0x1D2C690
	0x02EF4A54 BL 0x1990590
	0x02EF4A58 STP X30, X25, [X31 - 0x40]!
	0x02EF4A5C STP X24, X23, [X31 + 0x10]
	0x02EF4A60 STP X22, X21, [X31 + 0x20]
	0x02EF4A64 STP X20, X19, [X31 + 0x30]
	0x02EF4A68 ADRP X23, 0x14E7000
	0x02EF4A6C LDRB W8, [X23 + 0xB88]
	0x02EF4A70 MOV X20, X3
	0x02EF4A74 MOV X22, X2
	0x02EF4A78 MOV W21, W1
	0x02EF4A7C MOV X19, X0
	0x02EF4A80 TBNZ X8, 0x0, 0x2EF4AA4
	0x02EF4A84 ADRP X0, 0x11FF000
	0x02EF4A88 LDR X0, [X0 + 0xE00]
	0x02EF4A8C BL 0x1C16CF4
	0x02EF4A90 ADRP X0, 0x11FF000
	0x02EF4A94 LDR X0, [X0 + 0xE18]
	0x02EF4A98 BL 0x1C16CF4
	0x02EF4A9C MOVZ W8, 0x1
	0x02EF4AA0 STRB W8, [X23 + 0xB88]
	0x02EF4AA4 CBNZ X22, 0x2EF4AB4
	0x02EF4AA8 MOVZ W0, 0x6
	0x02EF4AAC MOV X1, X31
	0x02EF4AB0 BL 0x338F3E0
	0x02EF4AB4 LDR W8, [X19 + 0x18]
	0x02EF4AB8 CMP W8, W21
	0x02EF4ABC B.CS 0x2EF4AC8
	0x02EF4AC0 MOV X0, X31
	0x02EF4AC4 BL 0x339E294
	0x02EF4AC8 LDR X8, [X20 + 0x20]
	0x02EF4ACC LDR X8, [X8 + 0xC0]
	0x02EF4AD0 LDR X1, [X8 + 0x28]
	0x02EF4AD4 LDRB W8, [X1 + 0x135]
	0x02EF4AD8 TBNZ X8, 0x0, 0x2EF4AE8
	0x02EF4ADC MOV X0, X1
	0x02EF4AE0 BL 0x1C5C684
	0x02EF4AE4 MOV X1, X0
	0x02EF4AE8 MOV X0, X22
	0x02EF4AEC BL 0x1C16E00
	0x02EF4AF0 CBZ X0, 0x2EF4B54

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+32]
	007 Move X21, X2
	008 Move X20, X1
	009 Move X19, X0
	010 Move X8, [X8+192]
	011 Move W1, 20
	012 Move X0, X20
	013 Move X2, [X8+88]
	014 Call 0x229DE08, X0, X1
	015 Move X8, [X21+32]
	016 Move X8, [X8+192]
	017 Move X1, [X8+72]
	018 Move W8, [X1+309]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {26}
	023 Move X0, X1
	024 Call 0x1C5D684
	025 Move X1, X0
	026 Compare X20, 0
	027 JumpIfEqual {64}
	028 Move X8, [X20]
	029 Move X9, [X1+64]
	030 Move X8, [X8+64]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X0, X20
	033 Call 0x1C17E08
	034 Move X8, [X21+32]
	035 Move W10, [X19+28]
	036 Move X1, [X0]
	037 Move X9, [X8+192]
	038 Move X8, [X19+16]
	039 Add W10, W10, 1
	040 Move X9, [X9+128]
	041 Move [X19+28], W10
	042 Compare X8, 0
	043 JumpIfEqual {67}
	044 NotImplemented "Instruction LDRSW not yet implemented."
	045 Move W11, [X8+24]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Add W9, W10, 1
	048 Add X8, X8, X10
	049 Move [X19+24], W9
	050 Move [X8+32], X1
	051 Move X8, [X9+32]
	052 Move X8, [X8+192]
	053 Move X2, [X8+112]
	054 Move X0, X19
	055 Call 0x2EF48E8, X0, X1
	056 Move W8, [X19+24]
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Subtract W0, W8, 1
	062 Move X30, [X31+48]
	063 Return X0
	064 Call 0x1C17F20
	065 Move X0, X20
	066 Call 0x1C181E0
	067 Call 0x1C17F20
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X22, X0
	070 Move X0, X22
	071 Call 0x3EB2AD0
	072 Move X22, X0
	073 Move X0, 0x1208000
	074 Move X0, [X0+3080]
	075 Call 0x1C17D08
	076 Move X8, [X22]
	077 Move X1, [X8]
	078 Call 0x1C18270
	079 Move TEMP, X0
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfNotEqual {101}
	083 Call 0x3EB2AE0
	084 Move X8, [X21+32]
	085 Move X0, 0x1200000
	086 Move X8, [X8+192]
	087 Move X21, [X8+104]
	088 Move X0, [X0+1728]
	089 Call 0x1C17D08
	090 Move W8, [X0+224]
	091 Compare W8, 0
	092 JumpIfNotEqual {94}
	093 Call 0x1C17DFC
	094 Move X0, X21
	095 Move X1, X31
	096 Call Type.GetTypeFromHandle, X0
	097 Move X1, X0
	098 Move X0, X20
	099 Move X2, X31
	100 Call ThrowHelper.ThrowWrongValueTypeArgumentException, X0, X1
	101 Move W0, 8
	102 Call 0x3EB2AF0
	103 Move X8, [X22]
	104 Move [X0], X8
	105 Move X1, 0xFC1000
	106 Add X1, X1, 3672
	107 Move X2, X31
	108 Call 0x3EB2B00
	109 Move X22, X0
	110 Call 0x3EB2AE0
	111 Move X0, X22
	112 Call 0x1D2D690
	113 Call 0x1991590

Method: System.Void AddRange(System.Collections.Generic.IEnumerable`1<T> collection)

Disassembly:
	0x02EF4AF4 LDR X8, [X20 + 0x20]
	0x02EF4AF8 MOV X23, X0
	0x02EF4AFC LDR X8, [X8 + 0xC0]
	0x02EF4B00 LDR X1, [X8 + 0x28]
	0x02EF4B04 LDRB W8, [X1 + 0x135]
	0x02EF4B08 TBNZ X8, 0x0, 0x2EF4B18
	0x02EF4B0C MOV X0, X1

ISIL:
	001 Move X8, [X2+32]
	002 Move X2, X1
	003 Move X9, [X8+192]
	004 Move W8, [X0+24]
	005 Move X3, [X9+144]
	006 Move W1, W8
	007 Call 0x2EF5A58, X0, X1, X2
	008 Return 

Method: System.Collections.ObjectModel.ReadOnlyCollection`1<T> AsReadOnly()

Disassembly:
	0x02EF4B10 BL 0x1C5C684
	0x02EF4B14 MOV X1, X0
	0x02EF4B18 LDR X8, [X23]
	0x02EF4B1C LDRH W9, [X8 + 0x12E]
	0x02EF4B20 CBZ X9, 0x2EF4B44
	0x02EF4B24 LDR X10, [X8 + 0xB0]
	0x02EF4B28 ADD X10, X10, 0x8
	0x02EF4B2C LDUR X11, [X10 - 0x8]
	0x02EF4B30 CMP X11, X1
	0x02EF4B34 B.EQ 0x2EF4BC0
	0x02EF4B38 SUBS X9, X9, 0x1
	0x02EF4B3C ADD X10, X10, 0x10
	0x02EF4B40 B.NE 0x2EF4B2C
	0x02EF4B44 MOV X0, X23
	0x02EF4B48 MOV W2, W31
	0x02EF4B4C BL 0x1C5C788
	0x02EF4B50 B 0x2EF4BCC
	0x02EF4B54 LDR W8, [X19 + 0x18]
	0x02EF4B58 CMP W8, W21
	0x02EF4B5C B.LE 0x2EF4E9C
	0x02EF4B60 CBZ X22, 0x2EF4ED4
	0x02EF4B64 LDR X8, [X20 + 0x20]
	0x02EF4B68 LDR X8, [X8 + 0xC0]
	0x02EF4B6C LDR X1, [X8 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+32]
	005 Move X19, X1
	006 Move X20, X0
	007 Move X8, [X8+192]
	008 Move X8, [X8+152]
	009 Move W9, [X8+309]
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X8
	015 Call 0x1C5D684
	016 Move X8, X0
	017 Move X0, X8
	018 Call 0x1C17F10
	019 Move X8, [X19+32]
	020 Move X1, X20
	021 Move X19, X0
	022 Move X8, [X8+192]
	023 Move X2, [X8+160]
	024 Call 0x25009F8, X0, X1
	025 Move X0, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0

Method: System.Int32 BinarySearch(System.Int32 index, System.Int32 count, T item, System.Collections.Generic.IComparer`1<T> comparer)

Disassembly:
	0x02EF4B70 LDRB W8, [X1 + 0x135]
	0x02EF4B74 TBNZ X8, 0x0, 0x2EF4B84
	0x02EF4B78 MOV X0, X1
	0x02EF4B7C BL 0x1C5C684
	0x02EF4B80 MOV X1, X0
	0x02EF4B84 LDR X8, [X22]
	0x02EF4B88 LDRH W9, [X8 + 0x12E]
	0x02EF4B8C CBZ X9, 0x2EF4BB0
	0x02EF4B90 LDR X10, [X8 + 0xB0]
	0x02EF4B94 ADD X10, X10, 0x8
	0x02EF4B98 LDUR X11, [X10 - 0x8]
	0x02EF4B9C CMP X11, X1
	0x02EF4BA0 B.EQ 0x2EF4D00
	0x02EF4BA4 SUBS X9, X9, 0x1
	0x02EF4BA8 ADD X10, X10, 0x10
	0x02EF4BAC B.NE 0x2EF4B98
	0x02EF4BB0 MOV X0, X22
	0x02EF4BB4 MOV W2, W31
	0x02EF4BB8 BL 0x1C5C788
	0x02EF4BBC B 0x2EF4D0C
	0x02EF4BC0 LDRSW X9, [X10]
	0x02EF4BC4 ADD X8, X8, X9, 0x4, LSL
	0x02EF4BC8 ADD X0, X8, 0x138
	0x02EF4BCC LDP X8, X1, [X0]
	0x02EF4BD0 MOV X0, X23
	0x02EF4BD4 BLR X8
	0x02EF4BD8 CMP W0, 0x1
	0x02EF4BDC B.LT 0x2EF4EB4
	0x02EF4BE0 LDR X8, [X20 + 0x20]
	0x02EF4BE4 LDR W9, [X19 + 0x18]
	0x02EF4BE8 MOV W22, W0
	0x02EF4BEC LDR X8, [X8 + 0xC0]
	0x02EF4BF0 ADD W1, W9, W0
	0x02EF4BF4 MOV X0, X19
	0x02EF4BF8 LDR X2, [X8 + 0x78]
	0x02EF4BFC BL 0x2EF3E98
	0x02EF4C00 LDR W8, [X19 + 0x18]
	0x02EF4C04 SUBS W4, W8, W21
	0x02EF4C08 B.LE 0x2EF4C24
	0x02EF4C0C LDR X0, [X19 + 0x10]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, X5
	009 Move X19, X4
	010 Move X20, X3
	011 Move W21, W2
	012 Move W22, W1
	013 Move X24, X0
	014 Move TEMP, X1
	015 And TEMP, TEMP, -2147483648
	016 Compare TEMP, -2147483648
	017 JumpIfEqual {45}
	018 Move TEMP, X21
	019 And TEMP, TEMP, -2147483648
	020 Compare TEMP, -2147483648
	021 JumpIfEqual {51}
	022 Move W8, [X24+24]
	023 Subtract W8, W8, W22
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W0, 23
	026 Move X1, X31
	027 Call ThrowHelper.ThrowArgumentException, X0
	028 Move X8, [X23+32]
	029 Move X0, [X24+16]
	030 Move W1, W22
	031 Move W2, W21
	032 Move X8, [X8+192]
	033 Move X3, X20
	034 Move X4, X19
	035 Move X20, [X31+48]
	036 Move X19, [X31+56]
	037 Move X5, [X8+184]
	038 Move X22, [X31+32]
	039 Move X21, [X31+40]
	040 Move X24, [X31+16]
	041 Move X23, [X31+24]
	042 Move X30, [X31+64]
	043 Call 0x22CAE40, X0, X1, X2, X3, X4
	044 Return X0
	045 Move X0, X31
	046 Call ThrowHelper.ThrowIndexArgumentOutOfRange_NeedNonNegNumException
	047 Move TEMP, X21
	048 And TEMP, TEMP, -2147483648
	049 Compare TEMP, -2147483648
	050 JumpIfNotEqual {22}
	051 Move W0, 16
	052 Move W1, 4
	053 Move X2, X31
	054 Call ThrowHelper.ThrowArgumentOutOfRangeException, X0, X1

Method: System.Int32 BinarySearch(T item)

Disassembly:
	0x02EF4C10 ADD W3, W22, W21
	0x02EF4C14 MOV W1, W21
	0x02EF4C18 MOV X5, X31
	0x02EF4C1C MOV X2, X0
	0x02EF4C20 BL 0x339FCE8
	0x02EF4C24 CMP X19, X23
	0x02EF4C28 B.EQ 0x2EF4C8C
	0x02EF4C2C LDR X8, [X20 + 0x20]

ISIL:
	001 Move X8, [X2+32]
	002 Move W2, [X0+24]
	003 Move X3, X1
	004 Move W1, W31
	005 Move X8, [X8+192]
	006 Move X4, X31
	007 Move X5, [X8+192]
	008 Call 0x2EF4B70, X0, X1, X2, X3, X4
	009 Return X0

Method: System.Int32 BinarySearch(T item, System.Collections.Generic.IComparer`1<T> comparer)

Disassembly:
	0x02EF4C30 LDR X20, [X19 + 0x10]
	0x02EF4C34 LDR X8, [X8 + 0xC0]
	0x02EF4C38 LDR X1, [X8 + 0x28]
	0x02EF4C3C LDRB W8, [X1 + 0x135]
	0x02EF4C40 TBNZ X8, 0x0, 0x2EF4C50
	0x02EF4C44 MOV X0, X1
	0x02EF4C48 BL 0x1C5C684
	0x02EF4C4C MOV X1, X0

ISIL:
	001 Move X8, [X3+32]
	002 Move X4, X2
	003 Move W2, [X0+24]
	004 Move X3, X1
	005 Move X8, [X8+192]
	006 Move W1, W31
	007 Move X5, [X8+192]
	008 Call 0x2EF4B70, X0, X1, X2, X3, X4
	009 Return X0

Method: System.Void Clear()

Disassembly:
	0x02EF4C50 LDR X8, [X23]
	0x02EF4C54 LDRH W9, [X8 + 0x12E]
	0x02EF4C58 CBZ X9, 0x2EF4C7C
	0x02EF4C5C LDR X10, [X8 + 0xB0]

ISIL:
	001 Move W8, [X0+28]
	002 Add W8, W8, 1
	003 Move [X0+24], W31
	004 Move [X0+28], W8
	005 Return 

Method: System.Boolean Contains(T item)

Disassembly:
	0x02EF4C60 ADD X10, X10, 0x8
	0x02EF4C64 LDUR X11, [X10 - 0x8]
	0x02EF4C68 CMP X11, X1
	0x02EF4C6C B.EQ 0x2EF4CCC
	0x02EF4C70 SUBS X9, X9, 0x1
	0x02EF4C74 ADD X10, X10, 0x10
	0x02EF4C78 B.NE 0x2EF4C64
	0x02EF4C7C MOVZ W2, 0x5
	0x02EF4C80 MOV X0, X23
	0x02EF4C84 BL 0x1C5C788
	0x02EF4C88 B 0x2EF4CDC
	0x02EF4C8C LDR X0, [X19 + 0x10]
	0x02EF4C90 MOV W1, W31
	0x02EF4C94 MOV W3, W21
	0x02EF4C98 MOV W4, W21
	0x02EF4C9C MOV X2, X0
	0x02EF4CA0 MOV X5, X31
	0x02EF4CA4 BL 0x339FCE8

ISIL:
	001 Move [X31-16], X30
	002 Move W3, [X0+24]
	003 Compare W3, 0
	004 JumpIfEqual {16}
	005 Move X8, [X2+32]
	006 Move X0, [X0+16]
	007 Move W2, W31
	008 Move X8, [X8+192]
	009 Move X8, [X8+208]
	010 Move X8, [X8+32]
	011 Move X8, [X8+192]
	012 Move X4, [X8+344]
	013 Call 0x22E8928, X0, X1, X2, X3
	014 Add W31, W0, 1
	015 NotImplemented "Instruction CSET not yet implemented."
	016 Move W0, W31
	017 Move X30, [X31+16]
	018 Return X0

Method: System.Boolean System.Collections.IList.Contains(System.Object item)

Disassembly:
	0x02EF4CA8 LDR W8, [X19 + 0x18]
	0x02EF4CAC LDR X0, [X19 + 0x10]
	0x02EF4CB0 ADD W1, W22, W21
	0x02EF4CB4 UBFM W3, W21, 0x1F, 0x1E
	0x02EF4CB8 SUB W4, W8, W21
	0x02EF4CBC MOV X2, X0
	0x02EF4CC0 MOV X5, X31
	0x02EF4CC4 BL 0x339FCE8
	0x02EF4CC8 B 0x2EF4CF0
	0x02EF4CCC LDR W9, [X10]
	0x02EF4CD0 ADD W9, W9, 0x5
	0x02EF4CD4 ADD X8, X8, W9, 0x4, SXTW
	0x02EF4CD8 ADD X0, X8, 0x138
	0x02EF4CDC LDP X8, X3, [X0]
	0x02EF4CE0 MOV X0, X23
	0x02EF4CE4 MOV X1, X20
	0x02EF4CE8 MOV W2, W21
	0x02EF4CEC BLR X8
	0x02EF4CF0 LDR W8, [X19 + 0x18]
	0x02EF4CF4 ADD W8, W8, W22
	0x02EF4CF8 STR W8, [X19 + 0x18]
	0x02EF4CFC B 0x2EF4EB4
	0x02EF4D00 LDRSW X9, [X10]
	0x02EF4D04 ADD X8, X8, X9, 0x4, LSL
	0x02EF4D08 ADD X0, X8, 0x138
	0x02EF4D0C LDP X8, X1, [X0]
	0x02EF4D10 MOV X0, X22
	0x02EF4D14 BLR X8
	0x02EF4D18 MOV X23, X0
	0x02EF4D1C CBZ X0, 0x2EF4ED8
	0x02EF4D20 ADRP X24, 0x11FF000
	0x02EF4D24 LDR X24, [X24 + 0xE18]
	0x02EF4D28 LDR X8, [X23]
	0x02EF4D2C LDR X1, [X24]
	0x02EF4D30 LDRH W9, [X8 + 0x12E]
	0x02EF4D34 CBZ X9, 0x2EF4D58
	0x02EF4D38 LDR X10, [X8 + 0xB0]
	0x02EF4D3C ADD X10, X10, 0x8
	0x02EF4D40 LDUR X11, [X10 - 0x8]
	0x02EF4D44 CMP X11, X1
	0x02EF4D48 B.EQ 0x2EF4D68
	0x02EF4D4C SUBS X9, X9, 0x1
	0x02EF4D50 ADD X10, X10, 0x10
	0x02EF4D54 B.NE 0x2EF4D40
	0x02EF4D58 MOV X0, X23
	0x02EF4D5C MOV W2, W31
	0x02EF4D60 BL 0x1C5C788
	0x02EF4D64 B 0x2EF4D74
	0x02EF4D68 LDRSW X9, [X10]
	0x02EF4D6C ADD X8, X8, X9, 0x4, LSL
	0x02EF4D70 ADD X0, X8, 0x138
	0x02EF4D74 LDP X8, X1, [X0]
	0x02EF4D78 MOV X0, X23

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X19, X2
	007 Move X20, X1
	008 Move X21, X0
	009 Move X8, [X8+192]
	010 Move X8, [X8+16]
	011 Move W9, [X8+309]
	012 Move TEMP, X9
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {19}
	016 Move X0, X8
	017 Call 0x1C5D684
	018 Move X8, X0
	019 Move W9, [X8+224]
	020 Compare W9, 0
	021 JumpIfNotEqual {24}
	022 Move X0, X8
	023 Call 0x1C17DFC
	024 Move X8, [X19+32]
	025 Move X0, X20
	026 Move X8, [X8+192]
	027 Move X1, [X8+216]
	028 Call 0x2EF46B0, X0
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {63}
	033 Move X8, [X19+32]
	034 Move X8, [X8+192]
	035 Move X1, [X8+72]
	036 Move W8, [X1+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {44}
	041 Move X0, X1
	042 Call 0x1C5D684
	043 Move X1, X0
	044 Compare X20, 0
	045 JumpIfEqual {69}
	046 Move X8, [X20]
	047 Move X9, [X1+64]
	048 Move X0, X20
	049 Move X8, [X8+64]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Call 0x1C17E08
	052 Move X8, [X19+32]
	053 Move X1, [X0]
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move X0, X21
	057 Move X8, [X8+192]
	058 Move X2, [X8+224]
	059 Move X30, [X31+32]
	060 Move X21, [X31+40]
	061 Call 0x2EF4C60, X0, X1
	062 Return X0
	063 Move X20, [X31+16]
	064 Move X19, [X31+24]
	065 Move W0, W31
	066 Move X30, [X31+32]
	067 Move X21, [X31+40]
	068 Return X0
	069 Call 0x1C17F20
	070 Call 0x1C181E0

Method: System.Collections.Generic.List`1<TOutput> ConvertAll(System.Converter`2<T, TOutput> converter)

Disassembly:
	0x02131830 MOV X21, X2
	0x02131834 MOV X19, X1
	0x02131838 MOV X20, X0
	0x0213183C CBZ X8, 0x2131910
	0x02131840 CBZ X19, 0x213191C
	0x02131844 LDR X8, [X21 + 0x38]
	0x02131848 LDR W22, [X20 + 0x18]
	0x0213184C LDR X0, [X8 + 0x8]
	0x02131850 LDRB W8, [X0 + 0x135]
	0x02131854 TBNZ X8, 0x0, 0x213185C
	0x02131858 BL 0x1C5C684
	0x0213185C BL 0x1C16F10
	0x02131860 LDR X8, [X21 + 0x38]
	0x02131864 MOV W1, W22
	0x02131868 MOV X21, X0
	0x0213186C LDR X2, [X8 + 0x10]
	0x02131870 BL 0x302C770
	0x02131874 LDR W8, [X20 + 0x18]
	0x02131878 CMP W8, 0x1
	0x0213187C B.LT 0x21318F0
	0x02131880 CBZ X21, 0x213192C
	0x02131884 MOV X22, X31
	0x02131888 MOV X23, X31
	0x0213188C LDR X8, [X20 + 0x10]
	0x02131890 CBZ X8, 0x213192C
	0x02131894 LDR W9, [X8 + 0x18]
	0x02131898 CMP X23, X9
	0x0213189C B.CS 0x2131930
	0x021318A0 CBZ X19, 0x213192C
	0x021318A4 ADD X8, X8, X23, 0x3, LSL
	0x021318A8 LDR X9, [X19 + 0x18]
	0x021318AC LDR X0, [X19 + 0x40]
	0x021318B0 LDR X1, [X8 + 0x20]
	0x021318B4 LDR X2, [X19 + 0x28]
	0x021318B8 LDR X24, [X21 + 0x10]
	0x021318BC BLR X9
	0x021318C0 CBZ X24, 0x213192C
	0x021318C4 LDR W8, [X24 + 0x18]
	0x021318C8 CMP X23, X8
	0x021318CC B.CS 0x2131930
	0x021318D0 ADD X8, X24, X22
	0x021318D4 STP S0, S1, [X8 + 0x20]
	0x021318D8 STP S2, S3, [X8 + 0x28]
	0x021318DC LDRSW X8, [X20 + 0x18]
	0x021318E0 ADD X23, X23, 0x1
	0x021318E4 ADD X22, X22, 0x10
	0x021318E8 CMP X23, X8
	0x021318EC B.LT 0x213188C
	0x021318F0 CBZ X21, 0x213192C
	0x021318F4 STR W8, [X21 + 0x18]
	0x021318F8 MOV X0, X21
	0x021318FC LDP X20, X19, [X31 + 0x30]
	0x02131900 LDP X22, X21, [X31 + 0x20]
	0x02131904 LDP X24, X23, [X31 + 0x10]
	0x02131908 LDR X30, [X31], #0x40
	0x0213190C RET
	0x02131910 MOV X0, X21
	0x02131914 BL 0x1C5C6E0
	0x02131918 CBNZ X19, 0x2131844
	0x0213191C MOVZ W0, 0x9
	0x02131920 MOV X1, X31
	0x02131924 BL 0x338F3E0
	0x02131928 B 0x2131844
	0x0213192C BL 0x1C16F20
	0x02131930 BL 0x1C16F28

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X2+56]
	008 Move X21, X2
	009 Move X19, X1
	010 Move X20, X0
	011 Compare X8, 0
	012 JumpIfEqual {69}
	013 Compare X19, 0
	014 JumpIfEqual {73}
	015 Move X8, [X21+56]
	016 Move W22, [X20+24]
	017 Move X0, [X8+8]
	018 Move W8, [X0+309]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {24}
	023 Call 0x1C5D684
	024 Call 0x1C17F10
	025 Move X8, [X21+56]
	026 Move W1, W22
	027 Move X21, X0
	028 Move X2, [X8+16]
	029 Call List`1<Int32>..ctor, X0, X1
	030 Move W8, [X20+24]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Compare X21, 0
	033 JumpIfEqual {76}
	034 Move X22, X31
	035 Move X8, [X20+16]
	036 Compare X8, 0
	037 JumpIfEqual {76}
	038 Move W9, [X8+24]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Compare X19, 0
	041 JumpIfEqual {76}
	042 Add X8, X8, X22
	043 Move X9, [X19+24]
	044 Move X0, [X19+64]
	045 Move X1, [X8+32]
	046 Move X2, [X19+40]
	047 Move X23, [X21+16]
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Compare X23, 0
	050 JumpIfEqual {76}
	051 Move W8, [X23+24]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Add X8, X23, X22
	054 Move [X8+32], W0
	055 NotImplemented "Instruction LDRSW not yet implemented."
	056 Add X22, X22, 1
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Compare X21, 0
	059 JumpIfEqual {76}
	060 Move [X21+24], W8
	061 Move X0, X21
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Move X23, [X31+56]
	068 Return X0
	069 Move X0, X21
	070 Call 0x1C5D6E0
	071 Compare X19, 0
	072 JumpIfNotEqual {15}
	073 Move W0, 9
	074 Move X1, X31
	075 Call ThrowHelper.ThrowArgumentNullException, X0
	076 Call 0x1C17F20
	077 Call 0x1C17F28

Method: System.Void CopyTo(T[] array)

Disassembly:
	0x02EF4D7C BLR X8
	0x02EF4D80 TBZ X0, 0x0, 0x2EF4E20
	0x02EF4D84 LDR X8, [X20 + 0x20]
	0x02EF4D88 LDR X8, [X8 + 0xC0]
	0x02EF4D8C LDR X1, [X8 + 0x148]
	0x02EF4D90 LDRB W8, [X1 + 0x135]
	0x02EF4D94 TBNZ X8, 0x0, 0x2EF4DA4
	0x02EF4D98 MOV X0, X1

ISIL:
	001 Move X8, [X0+16]
	002 Move W4, [X0+24]
	003 Move X2, X1
	004 Move W1, W31
	005 Move X0, X8
	006 Move W3, W31
	007 Move X5, X31
	008 Call Array.Copy, X0, X1, X2, X3, X4
	009 Return 

Method: System.Void System.Collections.ICollection.CopyTo(System.Array array, System.Int32 arrayIndex)

Disassembly:
	0x02EF4D9C BL 0x1C5C684
	0x02EF4DA0 MOV X1, X0
	0x02EF4DA4 LDR X8, [X23]
	0x02EF4DA8 LDRH W9, [X8 + 0x12E]
	0x02EF4DAC CBZ X9, 0x2EF4DD0
	0x02EF4DB0 LDR X10, [X8 + 0xB0]
	0x02EF4DB4 ADD X10, X10, 0x8
	0x02EF4DB8 LDUR X11, [X10 - 0x8]
	0x02EF4DBC CMP X11, X1
	0x02EF4DC0 B.EQ 0x2EF4DE0
	0x02EF4DC4 SUBS X9, X9, 0x1
	0x02EF4DC8 ADD X10, X10, 0x10
	0x02EF4DCC B.NE 0x2EF4DB8
	0x02EF4DD0 MOV X0, X23
	0x02EF4DD4 MOV W2, W31
	0x02EF4DD8 BL 0x1C5C788
	0x02EF4DDC B 0x2EF4DEC
	0x02EF4DE0 LDRSW X9, [X10]
	0x02EF4DE4 ADD X8, X8, X9, 0x4, LSL
	0x02EF4DE8 ADD X0, X8, 0x138
	0x02EF4DEC LDP X8, X1, [X0]
	0x02EF4DF0 MOV X0, X23
	0x02EF4DF4 BLR X8
	0x02EF4DF8 LDR X8, [X20 + 0x20]
	0x02EF4DFC MOV X2, X0
	0x02EF4E00 ADD W25, W21, 0x1
	0x02EF4E04 LDR X8, [X8 + 0xC0]
	0x02EF4E08 LDR X3, [X8 + 0x160]
	0x02EF4E0C MOV X0, X19
	0x02EF4E10 MOV W1, W21
	0x02EF4E14 BL 0x2EF4824
	0x02EF4E18 MOV W21, W25
	0x02EF4E1C B 0x2EF4D28
	0x02EF4E20 MOV X21, X31
	0x02EF4E24 MOVZ W24, 0x5
	0x02EF4E28 CBZ X23, 0x2EF4E8C
	0x02EF4E2C ADRP X10, 0x11FF000
	0x02EF4E30 LDR X8, [X23]
	0x02EF4E34 LDR X10, [X10 + 0xE00]
	0x02EF4E38 LDRH W9, [X8 + 0x12E]
	0x02EF4E3C LDR X1, [X10]
	0x02EF4E40 CBZ X9, 0x2EF4E64
	0x02EF4E44 LDR X10, [X8 + 0xB0]
	0x02EF4E48 ADD X10, X10, 0x8
	0x02EF4E4C LDUR X11, [X10 - 0x8]
	0x02EF4E50 CMP X11, X1
	0x02EF4E54 B.EQ 0x2EF4E74
	0x02EF4E58 SUBS X9, X9, 0x1
	0x02EF4E5C ADD X10, X10, 0x10
	0x02EF4E60 B.NE 0x2EF4E4C
	0x02EF4E64 MOV X0, X23
	0x02EF4E68 MOV W2, W31
	0x02EF4E6C BL 0x1C5C788
	0x02EF4E70 B 0x2EF4E80
	0x02EF4E74 LDRSW X9, [X10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W19, W2
	006 Move X20, X1
	007 Move X21, X0
	008 Compare X1, 0
	009 JumpIfEqual {17}
	010 Move X0, X20
	011 Move X1, X31
	012 Call Array.get_Rank, X0
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move W0, 7
	015 Move X1, X31
	016 Call ThrowHelper.ThrowArgumentException, X0
	017 Move X0, [X21+16]
	018 Move W4, [X21+24]
	019 Move W1, W31
	020 Move X2, X20
	021 Move W3, W19
	022 Move X5, X31
	023 Call Array.Copy, X0, X1, X2, X3, X4
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Move X21, [X31+40]
	028 Return 
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X19, X0
	031 Move X0, X19
	032 Call 0x3EB2AD0
	033 Move X19, X0
	034 Move X0, 0x1229000
	035 Move X0, [X0+800]
	036 Call 0x1C17D08
	037 Move X8, [X19]
	038 Move X1, [X8]
	039 Call 0x1C18270
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {52}
	044 Call 0x3EB2AE0
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X0, X31
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Call ThrowHelper.ThrowArgumentException_Argument_InvalidArrayType
	051 Return 
	052 Move W0, 8
	053 Call 0x3EB2AF0
	054 Move X8, [X19]
	055 Move [X0], X8
	056 Move X1, 0xFC1000
	057 Add X1, X1, 3672
	058 Move X2, X31
	059 Call 0x3EB2B00
	060 Move X19, X0
	061 Call 0x3EB2AE0
	062 Move X0, X19
	063 Call 0x1D2D690
	064 Call 0x1991590

Method: System.Void CopyTo(T[] array, System.Int32 arrayIndex)

Disassembly:
	0x02EF4E78 ADD X8, X8, X9, 0x4, LSL
	0x02EF4E7C ADD X0, X8, 0x138
	0x02EF4E80 LDP X8, X1, [X0]
	0x02EF4E84 MOV X0, X23
	0x02EF4E88 BLR X8
	0x02EF4E8C CBNZ X21, 0x2EF4EDC
	0x02EF4E90 CMP W24, 0x5
	0x02EF4E94 B.EQ 0x2EF4EB4

ISIL:
	001 Move X8, [X0+16]
	002 Move W4, [X0+24]
	003 Move W3, W2
	004 Move X2, X1
	005 Move X0, X8
	006 Move W1, W31
	007 Move X5, X31
	008 Call Array.Copy, X0, X1, X2, X3, X4
	009 Return 

Method: System.Void EnsureCapacity(System.Int32 min)

Disassembly:
	0x02EF4E98 CBNZ W24, 0x2EF4EC0
	0x02EF4E9C LDR X8, [X20 + 0x20]
	0x02EF4EA0 MOV X0, X19
	0x02EF4EA4 MOV X1, X22
	0x02EF4EA8 LDR X8, [X8 + 0xC0]
	0x02EF4EAC LDR X2, [X8 + 0x40]
	0x02EF4EB0 BL 0x2EF5754
	0x02EF4EB4 LDR W8, [X19 + 0x1C]
	0x02EF4EB8 ADD W8, W8, 0x1
	0x02EF4EBC STR W8, [X19 + 0x1C]
	0x02EF4EC0 LDP X20, X19, [X31 + 0x30]
	0x02EF4EC4 LDP X22, X21, [X31 + 0x20]
	0x02EF4EC8 LDP X24, X23, [X31 + 0x10]
	0x02EF4ECC LDP X30, X25, [X31], #0x40
	0x02EF4ED0 RET
	0x02EF4ED4 BL 0x1C16F20
	0x02EF4ED8 BL 0x1C16F20
	0x02EF4EDC MOV X0, X21
	0x02EF4EE0 BL 0x1C16F18
	0x02EF4EE4 B 0x2EF4EF0
	0x02EF4EE8 B 0x2EF4EF0
	0x02EF4EEC B 0x2EF4EF0
	0x02EF4EF0 MOV X24, X0

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {28}
	005 Move X8, [X8+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X9, [X2+32]
	008 Move W10, W8
	009 ShiftRight W10, 31
	010 And W10, W10, 0x3FFFFFFF
	011 Move TEMP, 0x80100000
	012 Not TEMP
	013 Move W11, TEMP
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X9, [X9+192]
	016 NotImplemented "Instruction CSEL not yet implemented."
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move W8, 4
	019 Move X2, [X9+240]
	020 NotImplemented "Instruction CSEL not yet implemented."
	021 NotImplemented "Instruction CMP not yet implemented."
	022 NotImplemented "Instruction CSEL not yet implemented."
	023 Move X30, [X31+16]
	024 Call 0x2EF4474, X0, X1
	025 Return 
	026 Move X30, [X31+16]
	027 Return 
	028 Call 0x1C17F20

Method: System.Boolean Exists(System.Predicate`1<T> match)

Disassembly:
	0x02EF4EF4 CMP W1, 0x1
	0x02EF4EF8 B.NE 0x2EF4F18
	0x02EF4EFC MOV X0, X24
	0x02EF4F00 BL 0x3EB1AD0
	0x02EF4F04 LDR X21, [X0]
	0x02EF4F08 BL 0x3EB1AE0
	0x02EF4F0C MOV W24, W31
	0x02EF4F10 CBNZ X23, 0x2EF4E2C
	0x02EF4F14 B 0x2EF4E8C
	0x02EF4F18 MOV X21, X31
	0x02EF4F1C B 0x2EF4F24
	0x02EF4F20 MOV X24, X0
	0x02EF4F24 CBZ X23, 0x2EF4F88
	0x02EF4F28 ADRP X10, 0x11FF000
	0x02EF4F2C LDR X8, [X23]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X2+32]
	003 Move W2, [X0+24]
	004 Move X3, X1
	005 Move W1, W31
	006 Move X8, [X8+192]
	007 Move X8, [X8+256]
	008 Move X8, [X8+32]
	009 Move X8, [X8+192]
	010 Move X4, [X8+280]
	011 Call 0x2EF5158, X0, X1, X2, X3
	012 Add W31, W0, 1
	013 NotImplemented "Instruction CSET not yet implemented."
	014 Move X30, [X31+16]
	015 Return X0

Method: T Find(System.Predicate`1<T> match)

Disassembly:
	0x02EF4F30 LDR X10, [X10 + 0xE00]
	0x02EF4F34 LDRH W9, [X8 + 0x12E]
	0x02EF4F38 LDR X1, [X10]
	0x02EF4F3C CBZ X9, 0x2EF4F60
	0x02EF4F40 LDR X10, [X8 + 0xB0]
	0x02EF4F44 ADD X10, X10, 0x8
	0x02EF4F48 LDUR X11, [X10 - 0x8]
	0x02EF4F4C CMP X11, X1
	0x02EF4F50 B.EQ 0x2EF4F70
	0x02EF4F54 SUBS X9, X9, 0x1
	0x02EF4F58 ADD X10, X10, 0x10
	0x02EF4F5C B.NE 0x2EF4F48
	0x02EF4F60 MOV X0, X23
	0x02EF4F64 MOV W2, W31
	0x02EF4F68 BL 0x1C5C788
	0x02EF4F6C B 0x2EF4F7C
	0x02EF4F70 LDRSW X9, [X10]
	0x02EF4F74 ADD X8, X8, X9, 0x4, LSL
	0x02EF4F78 ADD X0, X8, 0x138
	0x02EF4F7C LDP X8, X1, [X0]
	0x02EF4F80 MOV X0, X23
	0x02EF4F84 BLR X8
	0x02EF4F88 CBNZ X21, 0x2EF4F94
	0x02EF4F8C MOV X0, X24
	0x02EF4F90 BL 0x1D2C690
	0x02EF4F94 MOV X0, X21
	0x02EF4F98 BL 0x1C16F18
	0x02EF4F9C BL 0x1990590
	0x02EF4FA0 LDR W3, [X0 + 0x18]
	0x02EF4FA4 CBZ W3, 0x2EF4FBC
	0x02EF4FA8 LDR X8, [X2 + 0x20]
	0x02EF4FAC SUB W2, W3, 0x1
	0x02EF4FB0 LDR X8, [X8 + 0xC0]
	0x02EF4FB4 LDR X4, [X8 + 0x178]
	0x02EF4FB8 B 0x2EF5020
	0x02EF4FBC MOVN W0, 0x0
	0x02EF4FC0 RET
	0x02EF4FC4 STR X30, [X31 - 0x30]!
	0x02EF4FC8 STP X22, X21, [X31 + 0x10]
	0x02EF4FCC STP X20, X19, [X31 + 0x20]
	0x02EF4FD0 LDR W8, [X0 + 0x18]
	0x02EF4FD4 MOV X21, X3

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X1
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {11}
	009 Move W0, 8
	010 Call ThrowHelper.ThrowArgumentNullException, X0
	011 Move W8, [X19+24]
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X21, X31
	014 Move X8, [X19+16]
	015 Compare X8, 0
	016 JumpIfEqual {47}
	017 Move W9, [X8+24]
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Compare X20, 0
	020 JumpIfEqual {47}
	021 Add X8, X8, X21
	022 Move X9, [X20+24]
	023 Move X0, [X20+64]
	024 Move X1, [X8+32]
	025 Move X2, [X20+40]
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {35}
	031 NotImplemented "Instruction LDRSW not yet implemented."
	032 Add X21, X21, 1
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X0, X31
	035 Move X8, [X19+16]
	036 Compare X8, 0
	037 JumpIfEqual {47}
	038 Move W9, [X8+24]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Add X8, X8, X21
	041 Move X0, [X8+32]
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Return X0
	047 Call 0x1C17F20
	048 Call 0x1C17F28

Method: System.Collections.Generic.List`1<T> FindAll(System.Predicate`1<T> match)

Disassembly:
	0x02EF4FD8 MOV X20, X0
	0x02EF4FDC MOV W19, W2
	0x02EF4FE0 CMP W8, W2
	0x02EF4FE4 MOV X22, X1
	0x02EF4FE8 B.GT 0x2EF4FF4
	0x02EF4FEC MOV X0, X31
	0x02EF4FF0 BL 0x339E294
	0x02EF4FF4 LDR X8, [X21 + 0x20]
	0x02EF4FF8 ADD W3, W19, 0x1
	0x02EF4FFC MOV X0, X20
	0x02EF5000 MOV X1, X22
	0x02EF5004 LDR X8, [X8 + 0xC0]
	0x02EF5008 MOV W2, W19
	0x02EF500C LDP X20, X19, [X31 + 0x20]
	0x02EF5010 LDP X22, X21, [X31 + 0x10]
	0x02EF5014 LDR X4, [X8 + 0x178]
	0x02EF5018 LDR X30, [X31], #0x30
	0x02EF501C B 0x2EF5020
	0x02EF5020 STP X30, X23, [X31 - 0x30]!
	0x02EF5024 STP X22, X21, [X31 + 0x10]
	0x02EF5028 STP X20, X19, [X31 + 0x20]
	0x02EF502C LDR W8, [X0 + 0x18]
	0x02EF5030 MOV X21, X4
	0x02EF5034 MOV W19, W3
	0x02EF5038 MOV W20, W2
	0x02EF503C MOV X23, X0
	0x02EF5040 MOV X22, X1
	0x02EF5044 TBZ X2, 0x1F, 0x2EF5058
	0x02EF5048 CBZ W8, 0x2EF5058
	0x02EF504C MOV X0, X31
	0x02EF5050 BL 0x339E2CC
	0x02EF5054 LDR W8, [X23 + 0x18]
	0x02EF5058 TBZ X19, 0x1F, 0x2EF5074
	0x02EF505C CBZ W8, 0x2EF5074
	0x02EF5060 MOVZ W0, 0x10
	0x02EF5064 MOVZ W1, 0x4
	0x02EF5068 MOV X2, X31
	0x02EF506C BL 0x339DF10
	0x02EF5070 LDR W8, [X23 + 0x18]
	0x02EF5074 CBZ W8, 0x2EF50D8
	0x02EF5078 CMP W8, W20
	0x02EF507C B.GT 0x2EF5090
	0x02EF5080 MOVZ W0, 0xD
	0x02EF5084 MOVZ W1, 0x22
	0x02EF5088 MOV X2, X31
	0x02EF508C BL 0x339DF10
	0x02EF5090 ADD W8, W20, 0x1
	0x02EF5094 CMP W8, W19
	0x02EF5098 B.GE 0x2EF50AC
	0x02EF509C MOVZ W0, 0x10
	0x02EF50A0 MOVZ W1, 0x22
	0x02EF50A4 MOV X2, X31
	0x02EF50A8 BL 0x339DF10
	0x02EF50AC LDR X8, [X21 + 0x20]
	0x02EF50B0 LDR X0, [X23 + 0x10]
	0x02EF50B4 MOV X1, X22
	0x02EF50B8 MOV W2, W20
	0x02EF50BC LDR X8, [X8 + 0xC0]
	0x02EF50C0 MOV W3, W19
	0x02EF50C4 LDP X20, X19, [X31 + 0x20]
	0x02EF50C8 LDP X22, X21, [X31 + 0x10]
	0x02EF50CC LDR X4, [X8 + 0x180]
	0x02EF50D0 LDP X30, X23, [X31], #0x30
	0x02EF50D4 B 0x20F839C
	0x02EF50D8 LDP X20, X19, [X31 + 0x20]
	0x02EF50DC LDP X22, X21, [X31 + 0x10]
	0x02EF50E0 MOVN W0, 0x0
	0x02EF50E4 LDP X30, X23, [X31], #0x30
	0x02EF50E8 RET
	0x02EF50EC STR X30, [X31 - 0x20]!
	0x02EF50F0 STP X20, X19, [X31 + 0x10]
	0x02EF50F4 LDR X8, [X2 + 0x20]
	0x02EF50F8 MOV X19, X0
	0x02EF50FC LDR X0, [X0 + 0x10]
	0x02EF5100 LDR W3, [X19 + 0x18]
	0x02EF5104 LDR X8, [X8 + 0xC0]
	0x02EF5108 MOV W2, W31
	0x02EF510C LDR X8, [X8 + 0xD0]
	0x02EF5110 LDR X8, [X8 + 0x20]
	0x02EF5114 LDR X8, [X8 + 0xC0]
	0x02EF5118 LDR X4, [X8 + 0x158]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Compare X1, 0
	012 JumpIfNotEqual {15}
	013 Move W0, 8
	014 Call ThrowHelper.ThrowArgumentNullException, X0
	015 Move X8, [X19+32]
	016 Move X8, [X8+192]
	017 Move X0, [X8]
	018 Move W8, [X0+309]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {24}
	023 Call 0x1C5D684
	024 Call 0x1C17F10
	025 Move X8, [X19+32]
	026 Move X22, X0
	027 Move X8, [X8+192]
	028 Move X1, [X8+272]
	029 Call 0x2EF40F0, X0
	030 Move W8, [X21+24]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move W23, 4
	033 Move X8, [X21+16]
	034 Compare X8, 0
	035 JumpIfEqual {92}
	036 Move W9, [X8+24]
	037 Subtract X24, X23, 4
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Compare X20, 0
	040 JumpIfEqual {92}
	041 Move X1, [X8]
	042 Move X8, [X20+24]
	043 Move X0, [X20+64]
	044 Move X2, [X20+40]
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {79}
	050 Move X8, [X21+16]
	051 Compare X8, 0
	052 JumpIfEqual {92}
	053 Move W9, [X8+24]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Compare X22, 0
	056 JumpIfEqual {92}
	057 Move X9, [X19+32]
	058 Move W10, [X22+28]
	059 Move X1, [X8]
	060 Move X8, [X22+16]
	061 Move X9, [X9+192]
	062 Add W10, W10, 1
	063 Move X9, [X9+128]
	064 Move [X22+28], W10
	065 Compare X8, 0
	066 JumpIfEqual {92}
	067 NotImplemented "Instruction LDRSW not yet implemented."
	068 Move W11, [X8+24]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Add W9, W10, 1
	071 Add X8, X8, X10
	072 Move [X22+24], W9
	073 Move [X8+32], X1
	074 Move X8, [X9+32]
	075 Move X0, X22
	076 Move X8, [X8+192]
	077 Move X2, [X8+112]
	078 Call 0x2EF48E8, X0, X1
	079 NotImplemented "Instruction LDRSW not yet implemented."
	080 Subtract X9, X23, 3
	081 Add X23, X23, 1
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X0, X22
	084 Move X20, [X31+48]
	085 Move X19, [X31+56]
	086 Move X22, [X31+32]
	087 Move X21, [X31+40]
	088 Move X24, [X31+16]
	089 Move X23, [X31+24]
	090 Move X30, [X31+64]
	091 Return X0
	092 Call 0x1C17F20
	093 Call 0x1C17F28

Method: System.Int32 FindIndex(System.Predicate`1<T> match)

Disassembly:
	0x02EF511C BL 0x22E7928
	0x02EF5120 MOV W20, W0
	0x02EF5124 TBNZ X0, 0x1F, 0x2EF5134
	0x02EF5128 MOV X0, X19
	0x02EF512C MOV W1, W20
	0x02EF5130 BL 0x2EF5370
	0x02EF5134 ORN W8, W31, W20, 0x0

ISIL:
	001 Move X8, [X2+32]
	002 Move W2, [X0+24]
	003 Move X3, X1
	004 Move W1, W31
	005 Move X8, [X8+192]
	006 Move X4, [X8+280]
	007 Call 0x2EF5158, X0, X1, X2, X3
	008 Return X0

Method: System.Int32 FindIndex(System.Int32 startIndex, System.Predicate`1<T> match)

Disassembly:
	0x02EF5138 LDP X20, X19, [X31 + 0x10]
	0x02EF513C UBFM W0, W8, 0x1F, 0x1F
	0x02EF5140 LDR X30, [X31], #0x20
	0x02EF5144 RET
	0x02EF5148 STP X30, X21, [X31 - 0x20]!
	0x02EF514C STP X20, X19, [X31 + 0x10]
	0x02EF5150 LDR X8, [X2 + 0x20]
	0x02EF5154 MOV X19, X2

ISIL:
	001 Move X8, [X3+32]
	002 Move W9, [X0+24]
	003 Move X3, X2
	004 Move X8, [X8+192]
	005 Move X4, [X8+280]
	006 Subtract W8, W9, W1
	007 Move W2, W8

Method: System.Int32 FindIndex(System.Int32 startIndex, System.Int32 count, System.Predicate`1<T> match)

Disassembly:
	0x02EF5158 MOV X20, X1
	0x02EF515C MOV X21, X0
	0x02EF5160 LDR X8, [X8 + 0xC0]
	0x02EF5164 LDR X8, [X8 + 0x10]
	0x02EF5168 LDRB W9, [X8 + 0x135]
	0x02EF516C TBNZ X9, 0x0, 0x2EF517C
	0x02EF5170 MOV X0, X8
	0x02EF5174 BL 0x1C5C684
	0x02EF5178 MOV X8, X0
	0x02EF517C LDR W9, [X8 + 0xE0]
	0x02EF5180 CBNZ W9, 0x2EF518C
	0x02EF5184 MOV X0, X8
	0x02EF5188 BL 0x1C16DFC
	0x02EF518C LDR X8, [X19 + 0x20]
	0x02EF5190 MOV X0, X20
	0x02EF5194 LDR X8, [X8 + 0xC0]
	0x02EF5198 LDR X1, [X8 + 0xD8]
	0x02EF519C BL 0x2EF36B0
	0x02EF51A0 TBZ X0, 0x0, 0x2EF5204
	0x02EF51A4 LDR X8, [X19 + 0x20]
	0x02EF51A8 LDR X8, [X8 + 0xC0]
	0x02EF51AC LDR X1, [X8 + 0x48]
	0x02EF51B0 LDRB W8, [X1 + 0x135]
	0x02EF51B4 TBNZ X8, 0x0, 0x2EF51C4
	0x02EF51B8 MOV X0, X1
	0x02EF51BC BL 0x1C5C684
	0x02EF51C0 MOV X1, X0
	0x02EF51C4 CBZ X20, 0x2EF5210
	0x02EF51C8 LDR X8, [X20]
	0x02EF51CC LDR X9, [X1 + 0x40]
	0x02EF51D0 MOV X0, X20
	0x02EF51D4 LDR X8, [X8 + 0x40]
	0x02EF51D8 CMP X8, X9
	0x02EF51DC B.NE 0x2EF5214
	0x02EF51E0 BL 0x1C16E08
	0x02EF51E4 LDR X8, [X19 + 0x20]
	0x02EF51E8 LDR X1, [X0]
	0x02EF51EC LDP X20, X19, [X31 + 0x10]
	0x02EF51F0 MOV X0, X21
	0x02EF51F4 LDR X8, [X8 + 0xC0]
	0x02EF51F8 LDR X2, [X8 + 0x190]
	0x02EF51FC LDP X30, X21, [X31], #0x20
	0x02EF5200 B 0x2EF50EC
	0x02EF5204 LDP X20, X19, [X31 + 0x10]
	0x02EF5208 LDP X30, X21, [X31], #0x20
	0x02EF520C RET
	0x02EF5210 BL 0x1C16F20
	0x02EF5214 BL 0x1C171E0
	0x02EF5218 STR X30, [X31 - 0x30]!
	0x02EF521C STP X22, X21, [X31 + 0x10]
	0x02EF5220 STP X20, X19, [X31 + 0x20]
	0x02EF5224 MOV X20, X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W8, [X0+24]
	007 Move X19, X3
	008 Move X20, X0
	009 Move W21, W1
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move W22, W2
	012 Move X0, X31
	013 Call ThrowHelper.ThrowStartIndexArgumentOutOfRange_ArgumentOutOfRange_Index
	014 Move TEMP, X22
	015 And TEMP, TEMP, -2147483648
	016 Compare TEMP, -2147483648
	017 JumpIfEqual {21}
	018 Move W8, [X20+24]
	019 Subtract W8, W8, W22
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X0, X31
	022 Call ThrowHelper.ThrowCountArgumentOutOfRange_ArgumentOutOfRange_Count
	023 Compare X19, 0
	024 JumpIfNotEqual {28}
	025 Move W0, 8
	026 Move X1, X31
	027 Call ThrowHelper.ThrowArgumentNullException, X0
	028 Add W8, W22, W21
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X21, W21
	031 Move X22, W8
	032 Move X8, [X20+16]
	033 Compare X8, 0
	034 JumpIfEqual {61}
	035 Move W9, [X8+24]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Compare X19, 0
	038 JumpIfEqual {61}
	039 Add X8, X8, X21
	040 Move X9, [X19+24]
	041 Move X0, [X19+64]
	042 Move X1, [X8+32]
	043 Move X2, [X19+40]
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {54}
	049 Add X21, X21, 1
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move TEMP, 0
	052 Not TEMP
	053 Move W21, TEMP
	054 Move W0, W21
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 Move X30, [X31+48]
	060 Return X0
	061 Call 0x1C17F20
	062 Call 0x1C17F28

Method: T FindLast(System.Predicate`1<T> match)

Disassembly:
	0x02EF5228 MOV X19, X0
	0x02EF522C CBNZ X1, 0x2EF5238
	0x02EF5230 MOVZ W0, 0x8
	0x02EF5234 BL 0x338F3E0
	0x02EF5238 LDR W8, [X19 + 0x18]
	0x02EF523C CMP W8, 0x1
	0x02EF5240 B.LT 0x2EF5290
	0x02EF5244 MOV X21, X31
	0x02EF5248 LDR X8, [X19 + 0x10]
	0x02EF524C CBZ X8, 0x2EF5368
	0x02EF5250 LDR W9, [X8 + 0x18]
	0x02EF5254 CMP X21, X9
	0x02EF5258 B.CS 0x2EF536C
	0x02EF525C CBZ X20, 0x2EF5368
	0x02EF5260 ADD X8, X8, X21, 0x3, LSL
	0x02EF5264 LDR X9, [X20 + 0x18]
	0x02EF5268 LDR X0, [X20 + 0x40]
	0x02EF526C LDR X1, [X8 + 0x20]
	0x02EF5270 LDR X2, [X20 + 0x28]
	0x02EF5274 BLR X9
	0x02EF5278 TBNZ X0, 0x0, 0x2EF5298
	0x02EF527C LDRSW X8, [X19 + 0x18]
	0x02EF5280 ADD X21, X21, 0x1
	0x02EF5284 CMP X21, X8
	0x02EF5288 B.LT 0x2EF5248
	0x02EF528C B 0x2EF529C
	0x02EF5290 MOV W21, W31
	0x02EF5294 B 0x2EF529C
	0x02EF5298 LDR W8, [X19 + 0x18]
	0x02EF529C CMP W21, W8
	0x02EF52A0 B.GE 0x2EF5340
	0x02EF52A4 MOV W22, W21
	0x02EF52A8 ADD W21, W21, 0x1
	0x02EF52AC CMP W21, W8
	0x02EF52B0 B.GE 0x2EF5348
	0x02EF52B4 SXTW X21, W21
	0x02EF52B8 LDR X8, [X19 + 0x10]
	0x02EF52BC CBZ X8, 0x2EF5368
	0x02EF52C0 LDR W9, [X8 + 0x18]
	0x02EF52C4 CMP W21, W9

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, X1
	007 Move X19, X0
	008 Compare X1, 0
	009 JumpIfNotEqual {12}
	010 Move W0, 8
	011 Call ThrowHelper.ThrowArgumentNullException, X0
	012 Move W21, [X19+24]
	013 Subtract W21, W21, 1
	014 Move X8, [X19+16]
	015 Compare X8, 0
	016 JumpIfEqual {46}
	017 Move W9, [X8+24]
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Compare X20, 0
	020 JumpIfEqual {46}
	021 Move W22, W21
	022 Add X8, X8, X22
	023 Move X9, [X20+24]
	024 Move X0, [X20+64]
	025 Move X1, [X8+32]
	026 Move X2, [X20+40]
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {13}
	032 Move X8, [X19+16]
	033 Compare X8, 0
	034 JumpIfEqual {46}
	035 Move W9, [X8+24]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Add X8, X8, X22
	038 Move X0, [X8+32]
	039 Move X0, X31
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X30, [X31+48]
	045 Return X0
	046 Call 0x1C17F20
	047 Call 0x1C17F28

Method: System.Int32 FindLastIndex(System.Predicate`1<T> match)

Disassembly:
	0x02EF52C8 B.CS 0x2EF536C
	0x02EF52CC CBZ X20, 0x2EF5368
	0x02EF52D0 ADD X8, X8, X21, 0x3, LSL
	0x02EF52D4 LDR X9, [X20 + 0x18]
	0x02EF52D8 LDR X0, [X20 + 0x40]
	0x02EF52DC LDR X1, [X8 + 0x20]
	0x02EF52E0 LDR X2, [X20 + 0x28]
	0x02EF52E4 BLR X9

ISIL:
	001 Move X8, [X2+32]
	002 Move W2, [X0+24]
	003 Move X3, X1
	004 Move X8, [X8+192]
	005 Move X4, [X8+288]
	006 Subtract W8, W2, 1
	007 Move W1, W8
	008 Call 0x2EF5304, X0, X1, X2, X3
	009 Return X0

Method: System.Int32 FindLastIndex(System.Int32 startIndex, System.Predicate`1<T> match)

Disassembly:
	0x02EF52E8 TBZ X0, 0x0, 0x2EF5300
	0x02EF52EC LDRSW X8, [X19 + 0x18]
	0x02EF52F0 ADD X21, X21, 0x1
	0x02EF52F4 CMP X21, X8
	0x02EF52F8 B.LT 0x2EF52B8
	0x02EF52FC B 0x2EF5304
	0x02EF5300 LDR W8, [X19 + 0x18]

ISIL:
	001 Move X9, [X3+32]
	002 Move X8, X2
	003 Add W2, W1, 1
	004 Move X3, X8
	005 Move X9, [X9+192]
	006 Move X4, [X9+288]

Method: System.Int32 FindLastIndex(System.Int32 startIndex, System.Int32 count, System.Predicate`1<T> match)

Disassembly:
	0x02EF5304 CMP W21, W8
	0x02EF5308 B.GE 0x2EF52AC
	0x02EF530C LDR X8, [X19 + 0x10]
	0x02EF5310 CBZ X8, 0x2EF5368
	0x02EF5314 LDR W9, [X8 + 0x18]
	0x02EF5318 CMP W21, W9
	0x02EF531C B.CS 0x2EF536C
	0x02EF5320 CMP W22, W9
	0x02EF5324 B.CS 0x2EF536C
	0x02EF5328 ADD X8, X8, 0x20
	0x02EF532C LDR X9, [X8, W21, SXTW]
	0x02EF5330 STR X9, [X8, W22, SXTW]
	0x02EF5334 LDR W8, [X19 + 0x18]
	0x02EF5338 ADD W22, W22, 0x1
	0x02EF533C B 0x2EF52A8
	0x02EF5340 MOV W0, W31
	0x02EF5344 B 0x2EF5358
	0x02EF5348 LDR W9, [X19 + 0x1C]
	0x02EF534C SUB W0, W8, W22
	0x02EF5350 ADD W9, W9, 0x1
	0x02EF5354 STP W22, W9, [X19 + 0x18]
	0x02EF5358 LDP X20, X19, [X31 + 0x20]
	0x02EF535C LDP X22, X21, [X31 + 0x10]
	0x02EF5360 LDR X30, [X31], #0x30
	0x02EF5364 RET
	0x02EF5368 BL 0x1C16F20
	0x02EF536C BL 0x1C16F28
	0x02EF5370 STR X30, [X31 - 0x20]!
	0x02EF5374 STP X20, X19, [X31 + 0x10]
	0x02EF5378 LDR W8, [X0 + 0x18]
	0x02EF537C MOV X19, X0
	0x02EF5380 MOV W20, W1
	0x02EF5384 CMP W8, W1
	0x02EF5388 B.HI 0x2EF5398
	0x02EF538C MOV X0, X31
	0x02EF5390 BL 0x339E294
	0x02EF5394 LDR W8, [X19 + 0x18]
	0x02EF5398 SUB W8, W8, 0x1
	0x02EF539C SUBS W4, W8, W20
	0x02EF53A0 STR W8, [X19 + 0x18]
	0x02EF53A4 B.LE 0x2EF53C0
	0x02EF53A8 LDR X0, [X19 + 0x10]
	0x02EF53AC ADD W1, W20, 0x1
	0x02EF53B0 MOV W3, W20
	0x02EF53B4 MOV X5, X31
	0x02EF53B8 MOV X2, X0
	0x02EF53BC BL 0x339FCE8
	0x02EF53C0 LDR W8, [X19 + 0x1C]
	0x02EF53C4 ADD W8, W8, 0x1
	0x02EF53C8 STR W8, [X19 + 0x1C]
	0x02EF53CC LDP X20, X19, [X31 + 0x10]
	0x02EF53D0 LDR X30, [X31], #0x20
	0x02EF53D4 RET
	0x02EF53D8 STP X30, X21, [X31 - 0x20]!
	0x02EF53DC STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X3
	007 Move W22, W2
	008 Move W21, W1
	009 Move X20, X0
	010 Compare X3, 0
	011 JumpIfNotEqual {15}
	012 Move W0, 8
	013 Move X1, X31
	014 Call ThrowHelper.ThrowArgumentNullException, X0
	015 Move W8, [X20+24]
	016 Compare W8, 0
	017 JumpIfEqual {62}
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move X0, X31
	020 Call ThrowHelper.ThrowStartIndexArgumentOutOfRange_ArgumentOutOfRange_Index
	021 Move TEMP, X22
	022 And TEMP, TEMP, -2147483648
	023 Compare TEMP, -2147483648
	024 JumpIfEqual {27}
	025 Subtract W8, W21, W22
	026 Add W31, W8, 1
	027 Move X0, X31
	028 Call ThrowHelper.ThrowCountArgumentOutOfRange_ArgumentOutOfRange_Count
	029 Subtract W8, W21, W22
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X21, W21
	032 Move X22, W8
	033 Move X8, [X20+16]
	034 Compare X8, 0
	035 JumpIfEqual {63}
	036 Move W9, [X8+24]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Compare X19, 0
	039 JumpIfEqual {63}
	040 Add X8, X8, X21
	041 Move X9, [X19+24]
	042 Move X0, [X19+64]
	043 Move X1, [X8+32]
	044 Move X2, [X19+40]
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {55}
	050 Subtract X21, X21, 1
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move TEMP, 0
	053 Not TEMP
	054 Move W21, TEMP
	055 Move W0, W21
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X22, [X31+16]
	059 Move X21, [X31+24]
	060 Move X30, [X31+48]
	061 Return X0
	062 Add W31, W21, 1
	063 Call 0x1C17F20
	064 Call 0x1C17F28

Method: System.Void ForEach(System.Action`1<T> action)

Disassembly:
	0x02EF53E0 MOV W21, W2
	0x02EF53E4 MOV W20, W1
	0x02EF53E8 MOV X19, X0
	0x02EF53EC TBNZ X1, 0x1F, 0x2EF545C
	0x02EF53F0 TBNZ X21, 0x1F, 0x2EF5468
	0x02EF53F4 LDR W8, [X19 + 0x18]
	0x02EF53F8 SUB W8, W8, W20
	0x02EF53FC CMP W8, W21
	0x02EF5400 B.GE 0x2EF5410
	0x02EF5404 MOVZ W0, 0x17
	0x02EF5408 MOV X1, X31
	0x02EF540C BL 0x339DA4C
	0x02EF5410 CMP W21, 0x1
	0x02EF5414 B.LT 0x2EF5450
	0x02EF5418 LDR W8, [X19 + 0x18]
	0x02EF541C SUB W8, W8, W21
	0x02EF5420 SUBS W4, W8, W20
	0x02EF5424 STR W8, [X19 + 0x18]
	0x02EF5428 B.LE 0x2EF5444
	0x02EF542C LDR X0, [X19 + 0x10]
	0x02EF5430 ADD W1, W21, W20
	0x02EF5434 MOV W3, W20
	0x02EF5438 MOV X5, X31
	0x02EF543C MOV X2, X0
	0x02EF5440 BL 0x339FCE8
	0x02EF5444 LDR W8, [X19 + 0x1C]
	0x02EF5448 ADD W8, W8, 0x1
	0x02EF544C STR W8, [X19 + 0x1C]
	0x02EF5450 LDP X20, X19, [X31 + 0x10]
	0x02EF5454 LDP X30, X21, [X31], #0x20
	0x02EF5458 RET
	0x02EF545C MOV X0, X31
	0x02EF5460 BL 0x339E2CC
	0x02EF5464 TBZ X21, 0x1F, 0x2EF53F4
	0x02EF5468 MOVZ W0, 0x10
	0x02EF546C MOVZ W1, 0x4
	0x02EF5470 MOV X2, X31
	0x02EF5474 BL 0x339DF10
	0x02EF5478 B 0x2EF53F4
	0x02EF547C LDR X8, [X1 + 0x20]
	0x02EF5480 LDR W2, [X0 + 0x18]
	0x02EF5484 MOV W1, W31
	0x02EF5488 LDR X8, [X8 + 0xC0]
	0x02EF548C LDR X3, [X8 + 0x198]
	0x02EF5490 B 0x2EF5494
	0x02EF5494 STR X30, [X31 - 0x30]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Compare X1, 0
	009 JumpIfNotEqual {12}
	010 Move W0, 33
	011 Call ThrowHelper.ThrowArgumentNullException, X0
	012 Move W8, [X20+24]
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move W21, [X20+28]
	015 Move X22, X31
	016 Move W8, W21
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move X8, [X20+16]
	019 Compare X8, 0
	020 JumpIfEqual {51}
	021 Move W9, [X8+24]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Compare X19, 0
	024 JumpIfEqual {51}
	025 Add X8, X8, X22
	026 Move X9, [X19+24]
	027 Move X0, [X19+64]
	028 Move X1, [X8+32]
	029 Move X2, [X19+40]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move W9, [X20+24]
	032 Move W8, [X20+28]
	033 Add X22, X22, 1
	034 Move X9, W9
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X30, [X31+48]
	042 Return 
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X0, X31
	048 Move X30, [X31+48]
	049 Call ThrowHelper.ThrowInvalidOperationException_InvalidOperation_EnumFailedVersion
	050 Return 
	051 Call 0x1C17F20
	052 Call 0x1C17F28

Method: System.Collections.Generic.List`1/Enumerator<T> GetEnumerator()

Disassembly:
	0x02EF5498 STP X22, X21, [X31 + 0x10]
	0x02EF549C STP X20, X19, [X31 + 0x20]
	0x02EF54A0 MOV X22, X3
	0x02EF54A4 MOV W20, W2
	0x02EF54A8 MOV W21, W1
	0x02EF54AC MOV X19, X0
	0x02EF54B0 TBNZ X1, 0x1F, 0x2EF5514
	0x02EF54B4 TBNZ X20, 0x1F, 0x2EF5520

ISIL:
	001 Move [X8], X31
	002 Move [X8+8], X31
	003 Move [X8+16], X31
	004 Move X9, [X1+32]
	005 Move X1, X0
	006 Move X0, X8
	007 Move X9, [X9+192]
	008 Move X2, [X9+320]
	009 Call 0x2BB0A8C, X0, X1
	010 Return X0

Method: System.Collections.Generic.IEnumerator`1<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()

Disassembly:
	0x02EF54B8 LDR W8, [X19 + 0x18]
	0x02EF54BC SUB W8, W8, W21
	0x02EF54C0 CMP W8, W20
	0x02EF54C4 B.GE 0x2EF54D4
	0x02EF54C8 MOVZ W0, 0x17
	0x02EF54CC MOV X1, X31
	0x02EF54D0 BL 0x339DA4C
	0x02EF54D4 CMP W20, 0x2
	0x02EF54D8 B.LT 0x2EF54F8
	0x02EF54DC LDR X8, [X22 + 0x20]
	0x02EF54E0 LDR X0, [X19 + 0x10]
	0x02EF54E4 MOV W1, W21
	0x02EF54E8 MOV W2, W20
	0x02EF54EC LDR X8, [X8 + 0xC0]
	0x02EF54F0 LDR X3, [X8 + 0x1A0]
	0x02EF54F4 BL 0x214676C
	0x02EF54F8 LDR W8, [X19 + 0x1C]
	0x02EF54FC LDP X22, X21, [X31 + 0x10]
	0x02EF5500 ADD W8, W8, 0x1
	0x02EF5504 STR W8, [X19 + 0x1C]
	0x02EF5508 LDP X20, X19, [X31 + 0x20]
	0x02EF550C LDR X30, [X31], #0x30
	0x02EF5510 RET

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move [X31+24], X31
	005 Move [X31+32], X31
	006 Move [X31+40], X31
	007 Move X8, [X1+32]
	008 Move X19, X1
	009 Move X1, X0
	010 Add X0, X31, 24
	011 Move X8, [X8+192]
	012 Move X2, [X8+320]
	013 Call 0x2BB0A8C, X0, X1
	014 NotImplemented "Instruction LDUR not yet implemented."
	015 Move X8, [X31+40]
	016 Add X1, X31, 0
	017 Move [X31], V0
	018 Move [X31+16], X8
	019 Move X8, [X19+32]
	020 Move X8, [X8+192]
	021 Move X0, [X8+312]
	022 Call 0x1C17E04
	023 Move X30, [X31+48]
	024 Move X19, [X31+56]
	025 Add X31, X31, 64
	026 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x02EF5514 MOV X0, X31
	0x02EF5518 BL 0x339E2CC
	0x02EF551C TBZ X20, 0x1F, 0x2EF54B8
	0x02EF5520 MOVZ W0, 0x10
	0x02EF5524 MOVZ W1, 0x4
	0x02EF5528 MOV X2, X31
	0x02EF552C BL 0x339DF10
	0x02EF5530 B 0x2EF54B8
	0x02EF5534 LDR X8, [X1 + 0x20]
	0x02EF5538 LDR W2, [X0 + 0x18]
	0x02EF553C MOV W1, W31
	0x02EF5540 MOV X3, X31
	0x02EF5544 LDR X8, [X8 + 0xC0]
	0x02EF5548 LDR X4, [X8 + 0x1A8]
	0x02EF554C B 0x2EF556C
	0x02EF5550 LDR X8, [X2 + 0x20]
	0x02EF5554 LDR W2, [X0 + 0x18]
	0x02EF5558 MOV X3, X1
	0x02EF555C MOV W1, W31
	0x02EF5560 LDR X8, [X8 + 0xC0]
	0x02EF5564 LDR X4, [X8 + 0x1A8]
	0x02EF5568 B 0x2EF556C
	0x02EF556C STP X30, X23, [X31 - 0x30]!

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move [X31+24], X31
	005 Move [X31+32], X31
	006 Move [X31+40], X31
	007 Move X8, [X1+32]
	008 Move X19, X1
	009 Move X1, X0
	010 Add X0, X31, 24
	011 Move X8, [X8+192]
	012 Move X2, [X8+320]
	013 Call 0x2BB0A8C, X0, X1
	014 NotImplemented "Instruction LDUR not yet implemented."
	015 Move X8, [X31+40]
	016 Add X1, X31, 0
	017 Move [X31], V0
	018 Move [X31+16], X8
	019 Move X8, [X19+32]
	020 Move X8, [X8+192]
	021 Move X0, [X8+312]
	022 Call 0x1C17E04
	023 Move X30, [X31+48]
	024 Move X19, [X31+56]
	025 Add X31, X31, 64
	026 Return X0

Method: System.Collections.Generic.List`1<T> GetRange(System.Int32 index, System.Int32 count)

Disassembly:
	0x02EF5570 STP X22, X21, [X31 + 0x10]
	0x02EF5574 STP X20, X19, [X31 + 0x20]
	0x02EF5578 MOV X23, X4
	0x02EF557C MOV X20, X3
	0x02EF5580 MOV W21, W2
	0x02EF5584 MOV W22, W1
	0x02EF5588 MOV X19, X0
	0x02EF558C TBNZ X1, 0x1F, 0x2EF55F4
	0x02EF5590 TBNZ X21, 0x1F, 0x2EF5600
	0x02EF5594 LDR W8, [X19 + 0x18]
	0x02EF5598 SUB W8, W8, W22
	0x02EF559C CMP W8, W21
	0x02EF55A0 B.GE 0x2EF55B0
	0x02EF55A4 MOVZ W0, 0x17
	0x02EF55A8 MOV X1, X31
	0x02EF55AC BL 0x339DA4C
	0x02EF55B0 CMP W21, 0x2
	0x02EF55B4 B.LT 0x2EF55D8
	0x02EF55B8 LDR X8, [X23 + 0x20]
	0x02EF55BC LDR X0, [X19 + 0x10]
	0x02EF55C0 MOV W1, W22
	0x02EF55C4 MOV W2, W21
	0x02EF55C8 LDR X8, [X8 + 0xC0]
	0x02EF55CC MOV X3, X20
	0x02EF55D0 LDR X4, [X8 + 0x1B0]
	0x02EF55D4 BL 0x2158360
	0x02EF55D8 LDR W8, [X19 + 0x1C]
	0x02EF55DC LDP X22, X21, [X31 + 0x10]
	0x02EF55E0 ADD W8, W8, 0x1
	0x02EF55E4 STR W8, [X19 + 0x1C]
	0x02EF55E8 LDP X20, X19, [X31 + 0x20]
	0x02EF55EC LDP X30, X23, [X31], #0x30
	0x02EF55F0 RET
	0x02EF55F4 MOV X0, X31
	0x02EF55F8 BL 0x339E2CC
	0x02EF55FC TBZ X21, 0x1F, 0x2EF5594
	0x02EF5600 MOVZ W0, 0x10
	0x02EF5604 MOVZ W1, 0x4
	0x02EF5608 MOV X2, X31
	0x02EF560C BL 0x339DF10
	0x02EF5610 B 0x2EF5594
	0x02EF5614 STP X30, X23, [X31 - 0x30]!
	0x02EF5618 STP X22, X21, [X31 + 0x10]
	0x02EF561C STP X20, X19, [X31 + 0x20]
	0x02EF5620 MOV X21, X2
	0x02EF5624 MOV X20, X1
	0x02EF5628 MOV X19, X0
	0x02EF562C CBNZ X1, 0x2EF5638
	0x02EF5630 MOVZ W0, 0x22
	0x02EF5634 BL 0x338F3E0
	0x02EF5638 LDR W22, [X19 + 0x18]
	0x02EF563C CMP W22, 0x2

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, X3
	007 Move W19, W2
	008 Move W20, W1
	009 Move X21, X0
	010 Move TEMP, X1
	011 And TEMP, TEMP, -2147483648
	012 Compare TEMP, -2147483648
	013 JumpIfEqual {57}
	014 Move TEMP, X19
	015 And TEMP, TEMP, -2147483648
	016 Compare TEMP, -2147483648
	017 JumpIfEqual {63}
	018 Move W8, [X21+24]
	019 Subtract W8, W8, W20
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move W0, 23
	022 Move X1, X31
	023 Call ThrowHelper.ThrowArgumentException, X0
	024 Move X8, [X22+32]
	025 Move X8, [X8+192]
	026 Move X0, [X8]
	027 Move W8, [X0+309]
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {33}
	032 Call 0x1C5D684
	033 Call 0x1C17F10
	034 Move X8, [X22+32]
	035 Move W1, W19
	036 Move X22, X0
	037 Move X8, [X8+192]
	038 Move X2, [X8+336]
	039 Call 0x2EF415C, X0, X1
	040 Compare X22, 0
	041 JumpIfEqual {67}
	042 Move X0, [X21+16]
	043 Move X2, [X22+16]
	044 Move W1, W20
	045 Move W3, W31
	046 Move W4, W19
	047 Move X5, X31
	048 Call Array.Copy, X0, X1, X2, X3, X4
	049 Move [X22+24], W19
	050 Move X0, X22
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X30, [X31+48]
	056 Return X0
	057 Move X0, X31
	058 Call ThrowHelper.ThrowIndexArgumentOutOfRange_NeedNonNegNumException
	059 Move TEMP, X19
	060 And TEMP, TEMP, -2147483648
	061 Compare TEMP, -2147483648
	062 JumpIfNotEqual {18}
	063 Move W0, 16
	064 Move W1, 4
	065 Move X2, X31
	066 Call ThrowHelper.ThrowArgumentOutOfRangeException, X0, X1
	067 Call 0x1C17F20

Method: System.Int32 IndexOf(T item)

Disassembly:
	0x02EF5640 B.LT 0x2EF568C
	0x02EF5644 LDR X8, [X21 + 0x20]
	0x02EF5648 LDR X23, [X19 + 0x10]
	0x02EF564C LDR X8, [X8 + 0xC0]
	0x02EF5650 LDR X0, [X8 + 0x1C8]
	0x02EF5654 LDRB W8, [X0 + 0x135]
	0x02EF5658 TBNZ X8, 0x0, 0x2EF5660
	0x02EF565C BL 0x1C5C684

ISIL:
	001 Move X8, [X2+32]
	002 Move W3, [X0+24]
	003 Move W2, W31
	004 Move X9, [X8+192]
	005 Move X8, [X0+16]
	006 Move X4, [X9+344]
	007 Move X0, X8
	008 Call 0x22E8928, X0, X1, X2, X3
	009 Return X0

Method: System.Int32 System.Collections.IList.IndexOf(System.Object item)

Disassembly:
	0x02EF5660 LDR W8, [X0 + 0xE0]
	0x02EF5664 CBNZ W8, 0x2EF566C
	0x02EF5668 BL 0x1C16DFC
	0x02EF566C LDR X8, [X21 + 0x20]
	0x02EF5670 MOV X0, X23
	0x02EF5674 MOV W1, W31
	0x02EF5678 MOV W2, W22
	0x02EF567C LDR X8, [X8 + 0xC0]
	0x02EF5680 MOV X3, X20
	0x02EF5684 LDR X4, [X8 + 0x1C0]
	0x02EF5688 BL 0x2B8D494
	0x02EF568C LDR W8, [X19 + 0x1C]
	0x02EF5690 LDP X22, X21, [X31 + 0x10]
	0x02EF5694 ADD W8, W8, 0x1
	0x02EF5698 STR W8, [X19 + 0x1C]
	0x02EF569C LDP X20, X19, [X31 + 0x20]
	0x02EF56A0 LDP X30, X23, [X31], #0x30
	0x02EF56A4 RET
	0x02EF56A8 STP X30, X21, [X31 - 0x20]!
	0x02EF56AC STP X20, X19, [X31 + 0x10]
	0x02EF56B0 LDR X8, [X1 + 0x20]
	0x02EF56B4 LDR W21, [X0 + 0x18]
	0x02EF56B8 LDR X8, [X8 + 0xC0]
	0x02EF56BC CBZ W21, 0x2EF5704
	0x02EF56C0 MOV X20, X0
	0x02EF56C4 LDR X0, [X8 + 0x18]
	0x02EF56C8 LDRB W8, [X0 + 0x135]
	0x02EF56CC TBNZ X8, 0x0, 0x2EF56D4
	0x02EF56D0 BL 0x1C5C684
	0x02EF56D4 MOV W1, W21
	0x02EF56D8 BL 0x1C16D6C
	0x02EF56DC LDR X8, [X20 + 0x10]
	0x02EF56E0 LDR W4, [X20 + 0x18]
	0x02EF56E4 MOV X19, X0
	0x02EF56E8 MOV W1, W31
	0x02EF56EC MOV X0, X8
	0x02EF56F0 MOV X2, X19
	0x02EF56F4 MOV W3, W31
	0x02EF56F8 MOV X5, X31
	0x02EF56FC BL 0x339FCE8
	0x02EF5700 B 0x2EF5744
	0x02EF5704 LDR X0, [X8 + 0x10]
	0x02EF5708 MOV X19, X1
	0x02EF570C LDRB W8, [X0 + 0x135]
	0x02EF5710 TBNZ X8, 0x0, 0x2EF5718
	0x02EF5714 BL 0x1C5C684
	0x02EF5718 LDR W8, [X0 + 0xE0]
	0x02EF571C CBNZ W8, 0x2EF5724
	0x02EF5720 BL 0x1C16DFC
	0x02EF5724 LDR X8, [X19 + 0x20]
	0x02EF5728 LDR X8, [X8 + 0xC0]
	0x02EF572C LDR X0, [X8 + 0x10]
	0x02EF5730 LDRB W8, [X0 + 0x135]
	0x02EF5734 TBNZ X8, 0x0, 0x2EF573C
	0x02EF5738 BL 0x1C5C684
	0x02EF573C LDR X8, [X0 + 0xB8]
	0x02EF5740 LDR X19, [X8]
	0x02EF5744 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X20, X2
	007 Move X21, X1
	008 Move X19, X0
	009 Move X8, [X8+192]
	010 Move X8, [X8+16]
	011 Move W9, [X8+309]
	012 Move TEMP, X9
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {19}
	016 Move X0, X8
	017 Call 0x1C5D684
	018 Move X8, X0
	019 Move W9, [X8+224]
	020 Compare W9, 0
	021 JumpIfNotEqual {24}
	022 Move X0, X8
	023 Call 0x1C17DFC
	024 Move X8, [X20+32]
	025 Move X0, X21
	026 Move X8, [X8+192]
	027 Move X1, [X8+216]
	028 Call 0x2EF46B0, X0
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {68}
	033 Move X8, [X20+32]
	034 Move X8, [X8+192]
	035 Move X1, [X8+72]
	036 Move W8, [X1+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {44}
	041 Move X0, X1
	042 Call 0x1C5D684
	043 Move X1, X0
	044 Compare X21, 0
	045 JumpIfEqual {76}
	046 Move X8, [X21]
	047 Move X9, [X1+64]
	048 Move X0, X21
	049 Move X8, [X8+64]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Call 0x1C17E08
	052 Move X8, [X20+32]
	053 Move X1, [X0]
	054 Move X0, [X19+16]
	055 Move W3, [X19+24]
	056 Move X8, [X8+192]
	057 Move X20, [X31+16]
	058 Move X19, [X31+24]
	059 Move W2, W31
	060 Move X8, [X8+208]
	061 Move X8, [X8+32]
	062 Move X8, [X8+192]
	063 Move X4, [X8+344]
	064 Move X30, [X31+32]
	065 Move X21, [X31+40]
	066 Call 0x22E8928, X0, X1, X2, X3
	067 Return X0
	068 Move X20, [X31+16]
	069 Move X19, [X31+24]
	070 Move TEMP, 0
	071 Not TEMP
	072 Move W0, TEMP
	073 Move X30, [X31+32]
	074 Move X21, [X31+40]
	075 Return X0
	076 Call 0x1C17F20
	077 Call 0x1C181E0

Method: System.Int32 IndexOf(T item, System.Int32 index)

Disassembly:
	0x02EF5748 LDP X20, X19, [X31 + 0x10]
	0x02EF574C LDP X30, X21, [X31], #0x20
	0x02EF5750 RET
	0x02EF5754 STR X30, [X31 - 0x40]!
	0x02EF5758 STP X24, X23, [X31 + 0x10]
	0x02EF575C STP X22, X21, [X31 + 0x20]
	0x02EF5760 STP X20, X19, [X31 + 0x30]
	0x02EF5764 ADRP X22, 0x14E6000
	0x02EF5768 LDRB W8, [X22 + 0xB89]
	0x02EF576C MOV X20, X2
	0x02EF5770 MOV X19, X1
	0x02EF5774 MOV X21, X0
	0x02EF5778 TBNZ X8, 0x0, 0x2EF579C
	0x02EF577C ADRP X0, 0x11FE000
	0x02EF5780 LDR X0, [X0 + 0xE00]
	0x02EF5784 BL 0x1C16CF4
	0x02EF5788 ADRP X0, 0x11FE000
	0x02EF578C LDR X0, [X0 + 0xE18]
	0x02EF5790 BL 0x1C16CF4
	0x02EF5794 MOVZ W8, 0x1
	0x02EF5798 STRB W8, [X22 + 0xB89]
	0x02EF579C LDR W8, [X21 + 0x1C]
	0x02EF57A0 ADD W8, W8, 0x1
	0x02EF57A4 STR W8, [X21 + 0x1C]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W8, [X0+24]
	007 Move X20, X3
	008 Move X21, X0
	009 Move W19, W2
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move X22, X1
	012 Move X0, X31
	013 Call ThrowHelper.ThrowArgumentOutOfRange_IndexException
	014 Move W8, [X21+24]
	015 Move X9, [X20+32]
	016 Move X0, [X21+16]
	017 Subtract W3, W8, W19
	018 Move X1, X22
	019 Move X9, [X9+192]
	020 Move W2, W19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X4, [X9+344]
	026 Move X30, [X31+48]
	027 Call 0x22E8928, X0, X1, X2, X3
	028 Return X0

Method: System.Int32 IndexOf(T item, System.Int32 index, System.Int32 count)

Disassembly:
	0x02EF57A8 CBZ X19, 0x2EF59F4
	0x02EF57AC LDR X8, [X20 + 0x20]
	0x02EF57B0 LDR X8, [X8 + 0xC0]
	0x02EF57B4 LDR X1, [X8 + 0x20]
	0x02EF57B8 LDRB W8, [X1 + 0x135]
	0x02EF57BC TBNZ X8, 0x0, 0x2EF57CC
	0x02EF57C0 MOV X0, X1
	0x02EF57C4 BL 0x1C5C684
	0x02EF57C8 MOV X1, X0
	0x02EF57CC LDR X8, [X19]
	0x02EF57D0 LDRH W9, [X8 + 0x12E]
	0x02EF57D4 CBZ X9, 0x2EF57F8
	0x02EF57D8 LDR X10, [X8 + 0xB0]
	0x02EF57DC ADD X10, X10, 0x8
	0x02EF57E0 LDUR X11, [X10 - 0x8]
	0x02EF57E4 CMP X11, X1
	0x02EF57E8 B.EQ 0x2EF5808
	0x02EF57EC SUBS X9, X9, 0x1
	0x02EF57F0 ADD X10, X10, 0x10
	0x02EF57F4 B.NE 0x2EF57E0
	0x02EF57F8 MOV X0, X19
	0x02EF57FC MOV W2, W31
	0x02EF5800 BL 0x1C5C788
	0x02EF5804 B 0x2EF5814
	0x02EF5808 LDRSW X9, [X10]
	0x02EF580C ADD X8, X8, X9, 0x4, LSL
	0x02EF5810 ADD X0, X8, 0x138
	0x02EF5814 LDP X8, X1, [X0]
	0x02EF5818 ADRP X23, 0x11FE000
	0x02EF581C LDR X23, [X23 + 0xE00]
	0x02EF5820 MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move W8, [X0+24]
	008 Move X20, X4
	009 Move W19, W3
	010 Move X22, X0
	011 Move W21, W2
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X23, X1
	014 Move X0, X31
	015 Call ThrowHelper.ThrowArgumentOutOfRange_IndexException
	016 Move TEMP, X19
	017 And TEMP, TEMP, -2147483648
	018 Compare TEMP, -2147483648
	019 JumpIfEqual {23}
	020 Move W8, [X22+24]
	021 Subtract W8, W8, W19
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X0, X31
	024 Call ThrowHelper.ThrowCountArgumentOutOfRange_ArgumentOutOfRange_Count
	025 Move X8, [X20+32]
	026 Move X0, [X22+16]
	027 Move W2, W21
	028 Move W3, W19
	029 Move X8, [X8+192]
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X1, X23
	035 Move X4, [X8+344]
	036 Move X30, [X31+48]
	037 Move X23, [X31+56]
	038 Call 0x22E8928, X0, X1, X2, X3
	039 Return X0

Method: System.Void Insert(System.Int32 index, T item)

Disassembly:
	0x02EF5824 BLR X8
	0x02EF5828 MOV X19, X0
	0x02EF582C CBZ X0, 0x2EF59F8
	0x02EF5830 ADRP X24, 0x11FE000
	0x02EF5834 LDR X24, [X24 + 0xE18]
	0x02EF5838 LDR X8, [X19]
	0x02EF583C LDR X1, [X24]
	0x02EF5840 LDRH W9, [X8 + 0x12E]
	0x02EF5844 CBZ X9, 0x2EF5868
	0x02EF5848 LDR X10, [X8 + 0xB0]
	0x02EF584C ADD X10, X10, 0x8
	0x02EF5850 LDUR X11, [X10 - 0x8]
	0x02EF5854 CMP X11, X1
	0x02EF5858 B.EQ 0x2EF5878
	0x02EF585C SUBS X9, X9, 0x1
	0x02EF5860 ADD X10, X10, 0x10
	0x02EF5864 B.NE 0x2EF5850
	0x02EF5868 MOV X0, X19
	0x02EF586C MOV W2, W31
	0x02EF5870 BL 0x1C5C788
	0x02EF5874 B 0x2EF5884
	0x02EF5878 LDRSW X9, [X10]
	0x02EF587C ADD X8, X8, X9, 0x4, LSL
	0x02EF5880 ADD X0, X8, 0x138
	0x02EF5884 LDP X8, X1, [X0]
	0x02EF5888 MOV X0, X19
	0x02EF588C BLR X8
	0x02EF5890 TBZ X0, 0x0, 0x2EF5970
	0x02EF5894 LDR X8, [X20 + 0x20]
	0x02EF5898 LDR X8, [X8 + 0xC0]
	0x02EF589C LDR X1, [X8 + 0x148]
	0x02EF58A0 LDRB W8, [X1 + 0x135]
	0x02EF58A4 TBNZ X8, 0x0, 0x2EF58B4
	0x02EF58A8 MOV X0, X1
	0x02EF58AC BL 0x1C5C684
	0x02EF58B0 MOV X1, X0
	0x02EF58B4 LDR X8, [X19]
	0x02EF58B8 LDRH W9, [X8 + 0x12E]
	0x02EF58BC CBZ X9, 0x2EF58E0
	0x02EF58C0 LDR X10, [X8 + 0xB0]
	0x02EF58C4 ADD X10, X10, 0x8
	0x02EF58C8 LDUR X11, [X10 - 0x8]
	0x02EF58CC CMP X11, X1
	0x02EF58D0 B.EQ 0x2EF58F0
	0x02EF58D4 SUBS X9, X9, 0x1
	0x02EF58D8 ADD X10, X10, 0x10
	0x02EF58DC B.NE 0x2EF58C8
	0x02EF58E0 MOV X0, X19
	0x02EF58E4 MOV W2, W31
	0x02EF58E8 BL 0x1C5C788
	0x02EF58EC B 0x2EF58FC
	0x02EF58F0 LDRSW X9, [X10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W8, [X0+24]
	007 Move X22, X3
	008 Move X19, X0
	009 Move W20, W1
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move X21, X2
	012 Move W0, 13
	013 Move W1, 27
	014 Move X2, X31
	015 Call ThrowHelper.ThrowArgumentOutOfRangeException, X0, X1
	016 Move W8, [X19+24]
	017 Move X9, [X19+16]
	018 Compare X9, 0
	019 JumpIfEqual {53}
	020 Move W9, [X9+24]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X9, [X22+32]
	023 Add W1, W8, 1
	024 Move X0, X19
	025 Move X9, [X9+192]
	026 Move X2, [X9+120]
	027 Call 0x2EF4E98, X0, X1
	028 Move W8, [X19+24]
	029 Subtract W4, W8, W20
	030 Move X0, [X19+16]
	031 Add W3, W20, 1
	032 Move W1, W20
	033 Move X5, X31
	034 Move X2, X0
	035 Call Array.Copy, X0, X1, X2, X3, X4
	036 Move X8, [X19+16]
	037 Compare X8, 0
	038 JumpIfEqual {53}
	039 Move W9, [X8+24]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Add X8, X8, W20
	042 Move [X8+32], X21
	043 Move V0, [X19+24]
	044 NotImplemented "Instruction MOVI not yet implemented."
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Add S0, S0, S1
	048 Move [X19+24], D0
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X30, [X31+48]
	052 Return 
	053 Call 0x1C17F20
	054 Call 0x1C17F28

Method: System.Void System.Collections.IList.Insert(System.Int32 index, System.Object item)

Disassembly:
	0x02EF58F4 ADD X8, X8, X9, 0x4, LSL
	0x02EF58F8 ADD X0, X8, 0x138
	0x02EF58FC LDP X8, X1, [X0]
	0x02EF5900 MOV X0, X19
	0x02EF5904 BLR X8
	0x02EF5908 LDR X8, [X21 + 0x10]
	0x02EF590C CBZ X8, 0x2EF59E8
	0x02EF5910 LDR W9, [X21 + 0x18]
	0x02EF5914 LDR W10, [X8 + 0x18]
	0x02EF5918 MOV X22, X0
	0x02EF591C ADD W1, W9, 0x1
	0x02EF5920 CMP W9, W10
	0x02EF5924 B.NE 0x2EF5954
	0x02EF5928 LDR X8, [X20 + 0x20]
	0x02EF592C LDR X8, [X8 + 0xC0]
	0x02EF5930 LDR X2, [X8 + 0x78]
	0x02EF5934 MOV X0, X21
	0x02EF5938 BL 0x2EF3E98
	0x02EF593C LDR W9, [X21 + 0x18]
	0x02EF5940 LDR X8, [X21 + 0x10]
	0x02EF5944 ADD W10, W9, 0x1
	0x02EF5948 STR W10, [X21 + 0x18]
	0x02EF594C CBNZ X8, 0x2EF5958
	0x02EF5950 B 0x2EF59F0
	0x02EF5954 STR W1, [X21 + 0x18]
	0x02EF5958 LDR W10, [X8 + 0x18]
	0x02EF595C CMP W9, W10
	0x02EF5960 B.CS 0x2EF59EC
	0x02EF5964 ADD X8, X8, W9, 0x3, SXTW
	0x02EF5968 STR X22, [X8 + 0x20]
	0x02EF596C B 0x2EF5838
	0x02EF5970 MOV X20, X31
	0x02EF5974 CBZ X19, 0x2EF59D0
	0x02EF5978 LDR X8, [X19]
	0x02EF597C LDR X1, [X23]
	0x02EF5980 LDRH W9, [X8 + 0x12E]
	0x02EF5984 CBZ X9, 0x2EF59A8
	0x02EF5988 LDR X10, [X8 + 0xB0]
	0x02EF598C ADD X10, X10, 0x8
	0x02EF5990 LDUR X11, [X10 - 0x8]
	0x02EF5994 CMP X11, X1
	0x02EF5998 B.EQ 0x2EF59B8
	0x02EF599C SUBS X9, X9, 0x1
	0x02EF59A0 ADD X10, X10, 0x10
	0x02EF59A4 B.NE 0x2EF5990
	0x02EF59A8 MOV X0, X19
	0x02EF59AC MOV W2, W31
	0x02EF59B0 BL 0x1C5C788
	0x02EF59B4 B 0x2EF59C4
	0x02EF59B8 LDRSW X9, [X10]
	0x02EF59BC ADD X8, X8, X9, 0x4, LSL
	0x02EF59C0 ADD X0, X8, 0x138
	0x02EF59C4 LDP X8, X1, [X0]
	0x02EF59C8 MOV X0, X19
	0x02EF59CC BLR X8
	0x02EF59D0 CBNZ X20, 0x2EF59FC
	0x02EF59D4 LDP X20, X19, [X31 + 0x30]
	0x02EF59D8 LDP X22, X21, [X31 + 0x20]
	0x02EF59DC LDP X24, X23, [X31 + 0x10]
	0x02EF59E0 LDR X30, [X31], #0x40
	0x02EF59E4 RET
	0x02EF59E8 BL 0x1C16F20
	0x02EF59EC BL 0x1C16F28
	0x02EF59F0 BL 0x1C16F20
	0x02EF59F4 BL 0x1C16F20
	0x02EF59F8 BL 0x1C16F20
	0x02EF59FC MOV X0, X20
	0x02EF5A00 BL 0x1C16F18
	0x02EF5A04 B 0x2EF5A18
	0x02EF5A08 B 0x2EF5A18
	0x02EF5A0C B 0x2EF5A18
	0x02EF5A10 B 0x2EF5A18
	0x02EF5A14 B 0x2EF5A18
	0x02EF5A18 MOV X21, X0
	0x02EF5A1C CMP W1, 0x1
	0x02EF5A20 B.NE 0x2EF5A38
	0x02EF5A24 MOV X0, X21
	0x02EF5A28 BL 0x3EB1AD0
	0x02EF5A2C LDR X20, [X0]
	0x02EF5A30 BL 0x3EB1AE0
	0x02EF5A34 B 0x2EF5974
	0x02EF5A38 MOV X20, X31
	0x02EF5A3C B 0x2EF5A44
	0x02EF5A40 MOV X21, X0
	0x02EF5A44 CBZ X19, 0x2EF5AA0
	0x02EF5A48 LDR X8, [X19]
	0x02EF5A4C LDR X1, [X23]
	0x02EF5A50 LDRH W9, [X8 + 0x12E]
	0x02EF5A54 CBZ X9, 0x2EF5A78

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X3+32]
	007 Move X19, X2
	008 Move W21, W1
	009 Move X22, X0
	010 Move X8, [X8+192]
	011 Move W1, 20
	012 Move X0, X19
	013 Move X20, X3
	014 Move X2, [X8+88]
	015 Call 0x229DE08, X0, X1
	016 Move X8, [X20+32]
	017 Move X8, [X8+192]
	018 Move X1, [X8+72]
	019 Move W8, [X1+309]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {27}
	024 Move X0, X1
	025 Call 0x1C5D684
	026 Move X1, X0
	027 Compare X19, 0
	028 JumpIfEqual {48}
	029 Move X8, [X19]
	030 Move X9, [X1+64]
	031 Move X8, [X8+64]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X19
	034 Call 0x1C17E08
	035 Move X8, [X20+32]
	036 Move X2, [X0]
	037 Move X8, [X8+192]
	038 Move X3, [X8+352]
	039 Move X0, X22
	040 Move W1, W21
	041 Call 0x2EF5824, X0, X1, X2
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 Return 
	048 Call 0x1C17F20
	049 Move X0, X19
	050 Call 0x1C181E0
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X21, X0
	053 Move X0, X21
	054 Call 0x3EB2AD0
	055 Move X21, X0
	056 Move X0, 0x1207000
	057 Move X0, [X0+3080]
	058 Call 0x1C17D08
	059 Move X8, [X21]
	060 Move X1, [X8]
	061 Call 0x1C18270
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {90}
	066 Call 0x3EB2AE0
	067 Move X8, [X20+32]
	068 Move X0, 0x11FF000
	069 Move X8, [X8+192]
	070 Move X20, [X8+104]
	071 Move X0, [X0+1728]
	072 Call 0x1C17D08
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Move X0, X20
	078 Move X1, X31
	079 Call Type.GetTypeFromHandle, X0
	080 Move X1, X0
	081 Move X0, X19
	082 Move X20, [X31+32]
	083 Move X19, [X31+40]
	084 Move X22, [X31+16]
	085 Move X21, [X31+24]
	086 Move X2, X31
	087 Move X30, [X31+48]
	088 Call ThrowHelper.ThrowWrongValueTypeArgumentException, X0, X1
	089 Return 
	090 Move W0, 8
	091 Call 0x3EB2AF0
	092 Move X8, [X21]
	093 Move [X0], X8
	094 Move X1, 0xFC0000
	095 Add X1, X1, 3672
	096 Move X2, X31
	097 Call 0x3EB2B00
	098 Move X21, X0
	099 Call 0x3EB2AE0
	100 Move X0, X21
	101 Call 0x1D2D690
	102 Call 0x1991590

Method: System.Void InsertRange(System.Int32 index, System.Collections.Generic.IEnumerable`1<T> collection)

Disassembly:
	0x02EF5A58 LDR X10, [X8 + 0xB0]
	0x02EF5A5C ADD X10, X10, 0x8
	0x02EF5A60 LDUR X11, [X10 - 0x8]
	0x02EF5A64 CMP X11, X1
	0x02EF5A68 B.EQ 0x2EF5A88
	0x02EF5A6C SUBS X9, X9, 0x1
	0x02EF5A70 ADD X10, X10, 0x10
	0x02EF5A74 B.NE 0x2EF5A60
	0x02EF5A78 MOV X0, X19
	0x02EF5A7C MOV W2, W31
	0x02EF5A80 BL 0x1C5C788
	0x02EF5A84 B 0x2EF5A94
	0x02EF5A88 LDRSW X9, [X10]
	0x02EF5A8C ADD X8, X8, X9, 0x4, LSL
	0x02EF5A90 ADD X0, X8, 0x138
	0x02EF5A94 LDP X8, X1, [X0]
	0x02EF5A98 MOV X0, X19
	0x02EF5A9C BLR X8
	0x02EF5AA0 CBNZ X20, 0x2EF5AAC
	0x02EF5AA4 MOV X0, X21
	0x02EF5AA8 BL 0x1D2C690
	0x02EF5AAC MOV X0, X20
	0x02EF5AB0 BL 0x1C16F18
	0x02EF5AB4 BL 0x1990590
	0x02EF5AB8 STR X30, [X31 - 0x20]!
	0x02EF5ABC STP X20, X19, [X31 + 0x10]
	0x02EF5AC0 MOV X19, X0
	0x02EF5AC4 LDR X0, [X0 + 0x20]
	0x02EF5AC8 LDRB W8, [X0 + 0x135]
	0x02EF5ACC TBNZ X8, 0x0, 0x2EF5AD4
	0x02EF5AD0 BL 0x1C5C684
	0x02EF5AD4 LDR X8, [X0 + 0xC0]
	0x02EF5AD8 LDR X0, [X8 + 0x18]
	0x02EF5ADC LDRB W8, [X0 + 0x135]
	0x02EF5AE0 TBNZ X8, 0x0, 0x2EF5AE8
	0x02EF5AE4 BL 0x1C5C684
	0x02EF5AE8 MOV W1, W31
	0x02EF5AEC BL 0x1C16D6C
	0x02EF5AF0 LDR X8, [X19 + 0x20]
	0x02EF5AF4 MOV X20, X0
	0x02EF5AF8 LDRB W9, [X8 + 0x135]
	0x02EF5AFC TBNZ X9, 0x0, 0x2EF5B0C
	0x02EF5B00 MOV X0, X8
	0x02EF5B04 BL 0x1C5C684
	0x02EF5B08 MOV X8, X0
	0x02EF5B0C LDR X8, [X8 + 0xC0]
	0x02EF5B10 LDR X0, [X8 + 0x10]
	0x02EF5B14 LDRB W8, [X0 + 0x135]
	0x02EF5B18 TBNZ X8, 0x0, 0x2EF5B20
	0x02EF5B1C BL 0x1C5C684
	0x02EF5B20 LDR X8, [X0 + 0xB8]
	0x02EF5B24 STR X20, [X8]
	0x02EF5B28 LDR X0, [X19 + 0x20]
	0x02EF5B2C LDRB W8, [X0 + 0x135]
	0x02EF5B30 TBNZ X8, 0x0, 0x2EF5B38
	0x02EF5B34 BL 0x1C5C684
	0x02EF5B38 LDR X8, [X0 + 0xC0]
	0x02EF5B3C LDR X0, [X8 + 0x10]
	0x02EF5B40 LDRB W8, [X0 + 0x135]
	0x02EF5B44 TBNZ X8, 0x0, 0x2EF5B54
	0x02EF5B48 LDP X20, X19, [X31 + 0x10]
	0x02EF5B4C LDR X30, [X31], #0x20
	0x02EF5B50 B 0x1C5C684
	0x02EF5B54 LDP X20, X19, [X31 + 0x10]
	0x02EF5B58 LDR X30, [X31], #0x20
	0x02EF5B5C RET
	0x02EF5B60 STR X30, [X31 - 0x20]!
	0x02EF5B64 STP X20, X19, [X31 + 0x10]
	0x02EF5B68 MOV X20, X1
	0x02EF5B6C MOV X1, X31
	0x02EF5B70 MOV X19, X0
	0x02EF5B74 BL 0x33BDD8C
	0x02EF5B78 LDR X8, [X20 + 0x20]
	0x02EF5B7C LDR X8, [X8 + 0xC0]
	0x02EF5B80 LDR X0, [X8 + 0x10]
	0x02EF5B84 LDRB W8, [X0 + 0x135]
	0x02EF5B88 TBNZ X8, 0x0, 0x2EF5B90
	0x02EF5B8C BL 0x1C5C684
	0x02EF5B90 LDR W8, [X0 + 0xE0]
	0x02EF5B94 CBNZ W8, 0x2EF5B9C
	0x02EF5B98 BL 0x1C16DFC
	0x02EF5B9C LDR X8, [X20 + 0x20]
	0x02EF5BA0 LDR X8, [X8 + 0xC0]
	0x02EF5BA4 LDR X0, [X8 + 0x10]
	0x02EF5BA8 LDRB W8, [X0 + 0x135]
	0x02EF5BAC TBNZ X8, 0x0, 0x2EF5BB4
	0x02EF5BB0 BL 0x1C5C684
	0x02EF5BB4 LDR X8, [X0 + 0xB8]
	0x02EF5BB8 LDR X8, [X8]
	0x02EF5BBC STR X8, [X19 + 0x10]
	0x02EF5BC0 LDP X20, X19, [X31 + 0x10]
	0x02EF5BC4 LDR X30, [X31], #0x20
	0x02EF5BC8 RET
	0x02EF5BCC STP X30, X21, [X31 - 0x20]!
	0x02EF5BD0 STP X20, X19, [X31 + 0x10]
	0x02EF5BD4 MOV W20, W1
	0x02EF5BD8 MOV X1, X31
	0x02EF5BDC MOV X21, X2
	0x02EF5BE0 MOV X19, X0
	0x02EF5BE4 BL 0x33BDD8C
	0x02EF5BE8 TBNZ X20, 0x1F, 0x2EF5C3C
	0x02EF5BEC LDR X8, [X21 + 0x20]
	0x02EF5BF0 LDR X8, [X8 + 0xC0]
	0x02EF5BF4 CBNZ W20, 0x2EF5C54
	0x02EF5BF8 LDR X0, [X8 + 0x10]
	0x02EF5BFC LDRB W8, [X0 + 0x135]
	0x02EF5C00 TBNZ X8, 0x0, 0x2EF5C08
	0x02EF5C04 BL 0x1C5C684
	0x02EF5C08 LDR W8, [X0 + 0xE0]
	0x02EF5C0C CBNZ W8, 0x2EF5C14
	0x02EF5C10 BL 0x1C16DFC
	0x02EF5C14 LDR X8, [X21 + 0x20]
	0x02EF5C18 LDR X8, [X8 + 0xC0]
	0x02EF5C1C LDR X0, [X8 + 0x10]
	0x02EF5C20 LDRB W8, [X0 + 0x135]
	0x02EF5C24 TBNZ X8, 0x0, 0x2EF5C2C
	0x02EF5C28 BL 0x1C5C684
	0x02EF5C2C LDR X8, [X0 + 0xB8]
	0x02EF5C30 LDR X8, [X8]
	0x02EF5C34 STR X8, [X19 + 0x10]
	0x02EF5C38 B 0x2EF5C70
	0x02EF5C3C MOVZ W0, 0xC
	0x02EF5C40 MOVZ W1, 0x4
	0x02EF5C44 MOV X2, X31
	0x02EF5C48 BL 0x339DF10
	0x02EF5C4C LDR X8, [X21 + 0x20]
	0x02EF5C50 LDR X8, [X8 + 0xC0]
	0x02EF5C54 LDR X0, [X8 + 0x18]
	0x02EF5C58 LDRB W8, [X0 + 0x135]
	0x02EF5C5C TBNZ X8, 0x0, 0x2EF5C64
	0x02EF5C60 BL 0x1C5C684
	0x02EF5C64 MOV W1, W20
	0x02EF5C68 BL 0x1C16D6C
	0x02EF5C6C STR X0, [X19 + 0x10]
	0x02EF5C70 LDP X20, X19, [X31 + 0x10]
	0x02EF5C74 LDP X30, X21, [X31], #0x20
	0x02EF5C78 RET
	0x02EF5C7C STP X30, X23, [X31 - 0x30]!
	0x02EF5C80 STP X22, X21, [X31 + 0x10]
	0x02EF5C84 STP X20, X19, [X31 + 0x20]
	0x02EF5C88 MOV X22, X1
	0x02EF5C8C MOV X1, X31
	0x02EF5C90 MOV X20, X2
	0x02EF5C94 MOV X19, X0
	0x02EF5C98 BL 0x33BDD8C
	0x02EF5C9C CBNZ X22, 0x2EF5CAC
	0x02EF5CA0 MOVZ W0, 0x6
	0x02EF5CA4 MOV X1, X31
	0x02EF5CA8 BL 0x338F3E0
	0x02EF5CAC LDR X8, [X20 + 0x20]
	0x02EF5CB0 LDR X8, [X8 + 0xC0]
	0x02EF5CB4 LDR X1, [X8 + 0x28]
	0x02EF5CB8 LDRB W8, [X1 + 0x135]
	0x02EF5CBC TBNZ X8, 0x0, 0x2EF5CCC
	0x02EF5CC0 MOV X0, X1
	0x02EF5CC4 BL 0x1C5C684
	0x02EF5CC8 MOV X1, X0
	0x02EF5CCC MOV X0, X22
	0x02EF5CD0 BL 0x1C16E00
	0x02EF5CD4 CBZ X0, 0x2EF5D38
	0x02EF5CD8 LDR X8, [X20 + 0x20]
	0x02EF5CDC MOV X21, X0
	0x02EF5CE0 LDR X8, [X8 + 0xC0]
	0x02EF5CE4 LDR X1, [X8 + 0x28]
	0x02EF5CE8 LDRB W8, [X1 + 0x135]
	0x02EF5CEC TBNZ X8, 0x0, 0x2EF5CFC
	0x02EF5CF0 MOV X0, X1
	0x02EF5CF4 BL 0x1C5C684
	0x02EF5CF8 MOV X1, X0
	0x02EF5CFC LDR X8, [X21]
	0x02EF5D00 LDRH W9, [X8 + 0x12E]
	0x02EF5D04 CBZ X9, 0x2EF5D28
	0x02EF5D08 LDR X10, [X8 + 0xB0]
	0x02EF5D0C ADD X10, X10, 0x8
	0x02EF5D10 LDUR X11, [X10 - 0x8]
	0x02EF5D14 CMP X11, X1
	0x02EF5D18 B.EQ 0x2EF5DA8
	0x02EF5D1C SUBS X9, X9, 0x1
	0x02EF5D20 ADD X10, X10, 0x10
	0x02EF5D24 B.NE 0x2EF5D10
	0x02EF5D28 MOV X0, X21
	0x02EF5D2C MOV W2, W31
	0x02EF5D30 BL 0x1C5C788
	0x02EF5D34 B 0x2EF5DB4
	0x02EF5D38 STR W31, [X19 + 0x18]
	0x02EF5D3C LDR X8, [X20 + 0x20]
	0x02EF5D40 LDR X8, [X8 + 0xC0]
	0x02EF5D44 LDR X0, [X8 + 0x10]
	0x02EF5D48 LDRB W8, [X0 + 0x135]
	0x02EF5D4C TBNZ X8, 0x0, 0x2EF5D54
	0x02EF5D50 BL 0x1C5C684
	0x02EF5D54 LDR W8, [X0 + 0xE0]
	0x02EF5D58 CBNZ W8, 0x2EF5D60
	0x02EF5D5C BL 0x1C16DFC
	0x02EF5D60 LDR X8, [X20 + 0x20]
	0x02EF5D64 LDR X8, [X8 + 0xC0]
	0x02EF5D68 LDR X0, [X8 + 0x10]
	0x02EF5D6C LDRB W9, [X0 + 0x135]
	0x02EF5D70 TBNZ X9, 0x0, 0x2EF5D80
	0x02EF5D74 BL 0x1C5C684
	0x02EF5D78 LDR X8, [X20 + 0x20]
	0x02EF5D7C LDR X8, [X8 + 0xC0]
	0x02EF5D80 LDR X9, [X0 + 0xB8]
	0x02EF5D84 MOV X0, X19
	0x02EF5D88 MOV X1, X22
	0x02EF5D8C LDP X22, X21, [X31 + 0x10]
	0x02EF5D90 LDR X9, [X9]
	0x02EF5D94 STR X9, [X19 + 0x10]
	0x02EF5D98 LDR X2, [X8 + 0x40]
	0x02EF5D9C LDP X20, X19, [X31 + 0x20]
	0x02EF5DA0 LDP X30, X23, [X31], #0x30
	0x02EF5DA4 B 0x2EF81C4
	0x02EF5DA8 LDRSW X9, [X10]
	0x02EF5DAC ADD X8, X8, X9, 0x4, LSL
	0x02EF5DB0 ADD X0, X8, 0x138
	0x02EF5DB4 LDP X8, X1, [X0]
	0x02EF5DB8 MOV X0, X21
	0x02EF5DBC BLR X8
	0x02EF5DC0 LDR X8, [X20 + 0x20]
	0x02EF5DC4 LDR X8, [X8 + 0xC0]
	0x02EF5DC8 CBZ W0, 0x2EF5E4C
	0x02EF5DCC MOV W22, W0
	0x02EF5DD0 LDR X0, [X8 + 0x18]
	0x02EF5DD4 LDRB W8, [X0 + 0x135]
	0x02EF5DD8 TBNZ X8, 0x0, 0x2EF5DE0
	0x02EF5DDC BL 0x1C5C684
	0x02EF5DE0 MOV W1, W22
	0x02EF5DE4 BL 0x1C16D6C
	0x02EF5DE8 STR X0, [X19 + 0x10]
	0x02EF5DEC LDR X8, [X20 + 0x20]
	0x02EF5DF0 MOV X23, X0
	0x02EF5DF4 LDR X8, [X8 + 0xC0]
	0x02EF5DF8 LDR X1, [X8 + 0x28]
	0x02EF5DFC LDRB W8, [X1 + 0x135]
	0x02EF5E00 TBNZ X8, 0x0, 0x2EF5E10
	0x02EF5E04 MOV X0, X1
	0x02EF5E08 BL 0x1C5C684
	0x02EF5E0C MOV X1, X0
	0x02EF5E10 LDR X8, [X21]
	0x02EF5E14 LDRH W9, [X8 + 0x12E]
	0x02EF5E18 CBZ X9, 0x2EF5E3C
	0x02EF5E1C LDR X10, [X8 + 0xB0]
	0x02EF5E20 ADD X10, X10, 0x8
	0x02EF5E24 LDUR X11, [X10 - 0x8]
	0x02EF5E28 CMP X11, X1
	0x02EF5E2C B.EQ 0x2EF5E90
	0x02EF5E30 SUBS X9, X9, 0x1
	0x02EF5E34 ADD X10, X10, 0x10
	0x02EF5E38 B.NE 0x2EF5E24
	0x02EF5E3C MOVZ W2, 0x5
	0x02EF5E40 MOV X0, X21
	0x02EF5E44 BL 0x1C5C788
	0x02EF5E48 B 0x2EF5EA0
	0x02EF5E4C LDR X0, [X8 + 0x10]
	0x02EF5E50 LDRB W8, [X0 + 0x135]
	0x02EF5E54 TBNZ X8, 0x0, 0x2EF5E5C
	0x02EF5E58 BL 0x1C5C684
	0x02EF5E5C LDR W8, [X0 + 0xE0]
	0x02EF5E60 CBNZ W8, 0x2EF5E68
	0x02EF5E64 BL 0x1C16DFC
	0x02EF5E68 LDR X8, [X20 + 0x20]
	0x02EF5E6C LDR X8, [X8 + 0xC0]
	0x02EF5E70 LDR X0, [X8 + 0x10]
	0x02EF5E74 LDRB W8, [X0 + 0x135]
	0x02EF5E78 TBNZ X8, 0x0, 0x2EF5E80
	0x02EF5E7C BL 0x1C5C684
	0x02EF5E80 LDR X8, [X0 + 0xB8]
	0x02EF5E84 LDR X8, [X8]
	0x02EF5E88 STR X8, [X19 + 0x10]
	0x02EF5E8C B 0x2EF5EB8
	0x02EF5E90 LDR W9, [X10]
	0x02EF5E94 ADD W9, W9, 0x5
	0x02EF5E98 ADD X8, X8, W9, 0x4, SXTW
	0x02EF5E9C ADD X0, X8, 0x138
	0x02EF5EA0 LDP X8, X3, [X0]
	0x02EF5EA4 MOV X0, X21
	0x02EF5EA8 MOV X1, X23
	0x02EF5EAC MOV W2, W31
	0x02EF5EB0 BLR X8
	0x02EF5EB4 STR W22, [X19 + 0x18]
	0x02EF5EB8 LDP X20, X19, [X31 + 0x20]
	0x02EF5EBC LDP X22, X21, [X31 + 0x10]
	0x02EF5EC0 LDP X30, X23, [X31], #0x30
	0x02EF5EC4 RET
	0x02EF5EC8 STR X30, [X31 - 0x10]!
	0x02EF5ECC LDR X8, [X0 + 0x10]
	0x02EF5ED0 CBZ X8, 0x2EF5EE0
	0x02EF5ED4 LDR W0, [X8 + 0x18]
	0x02EF5ED8 LDR X30, [X31], #0x10
	0x02EF5EDC RET
	0x02EF5EE0 BL 0x1C16F20
	0x02EF5EE4 STP X30, X21, [X31 - 0x20]!
	0x02EF5EE8 STP X20, X19, [X31 + 0x10]
	0x02EF5EEC LDR W8, [X0 + 0x18]
	0x02EF5EF0 MOV X19, X0
	0x02EF5EF4 MOV W21, W1
	0x02EF5EF8 MOV X20, X2
	0x02EF5EFC CMP W8, W1
	0x02EF5F00 B.LE 0x2EF5F14
	0x02EF5F04 MOVZ W0, 0xF
	0x02EF5F08 MOVZ W1, 0x15
	0x02EF5F0C MOV X2, X31
	0x02EF5F10 BL 0x339DF10
	0x02EF5F14 LDR X8, [X19 + 0x10]
	0x02EF5F18 CBZ X8, 0x2EF5FCC
	0x02EF5F1C LDR W8, [X8 + 0x18]
	0x02EF5F20 CMP W8, W21
	0x02EF5F24 B.EQ 0x2EF5FC0
	0x02EF5F28 LDR X8, [X20 + 0x20]
	0x02EF5F2C CMP W21, 0x1
	0x02EF5F30 LDR X8, [X8 + 0xC0]
	0x02EF5F34 B.LT 0x2EF5F80
	0x02EF5F38 LDR X0, [X8 + 0x18]
	0x02EF5F3C LDRB W8, [X0 + 0x135]
	0x02EF5F40 TBNZ X8, 0x0, 0x2EF5F48
	0x02EF5F44 BL 0x1C5C684
	0x02EF5F48 MOV W1, W21
	0x02EF5F4C BL 0x1C16D6C
	0x02EF5F50 LDR W4, [X19 + 0x18]
	0x02EF5F54 MOV X20, X0
	0x02EF5F58 CMP W4, 0x1
	0x02EF5F5C B.LT 0x2EF5F78
	0x02EF5F60 LDR X0, [X19 + 0x10]
	0x02EF5F64 MOV W1, W31
	0x02EF5F68 MOV X2, X20
	0x02EF5F6C MOV W3, W31
	0x02EF5F70 MOV X5, X31
	0x02EF5F74 BL 0x339FCE8
	0x02EF5F78 STR X20, [X19 + 0x10]
	0x02EF5F7C B 0x2EF5FC0
	0x02EF5F80 LDR X0, [X8 + 0x10]
	0x02EF5F84 LDRB W8, [X0 + 0x135]
	0x02EF5F88 TBNZ X8, 0x0, 0x2EF5F90
	0x02EF5F8C BL 0x1C5C684
	0x02EF5F90 LDR W8, [X0 + 0xE0]
	0x02EF5F94 CBNZ W8, 0x2EF5F9C
	0x02EF5F98 BL 0x1C16DFC
	0x02EF5F9C LDR X8, [X20 + 0x20]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X23, 0x14E7000
	010 Move W8, [X23+2952]
	011 Move X20, X3
	012 Move X22, X2
	013 Move W21, W1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x11FF000
	020 Move X0, [X0+3584]
	021 Call 0x1C17CF4
	022 Move X0, 0x11FF000
	023 Move X0, [X0+3608]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+2952], W8
	027 Compare X22, 0
	028 JumpIfNotEqual {32}
	029 Move W0, 6
	030 Move X1, X31
	031 Call ThrowHelper.ThrowArgumentNullException, X0
	032 Move W8, [X19+24]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X0, X31
	035 Call ThrowHelper.ThrowArgumentOutOfRange_IndexException
	036 Move X8, [X20+32]
	037 Move X8, [X8+192]
	038 Move X1, [X8+40]
	039 Move W8, [X1+309]
	040 Move TEMP, X8
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {47}
	044 Move X0, X1
	045 Call 0x1C5D684
	046 Move X1, X0
	047 Move X0, X22
	048 Call 0x1C17E00
	049 Compare X0, 0
	050 JumpIfEqual {76}
	051 Move X8, [X20+32]
	052 Move X23, X0
	053 Move X8, [X8+192]
	054 Move X1, [X8+40]
	055 Move W8, [X1+309]
	056 Move TEMP, X8
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {63}
	060 Move X0, X1
	061 Call 0x1C5D684
	062 Move X1, X0
	063 Move X8, [X23]
	064 NotImplemented "Instruction LDRH not yet implemented."
	065 Compare X9, 0
	066 JumpIfEqual {73}
	067 Move X10, [X8+176]
	068 Add X10, X10, 8
	069 NotImplemented "Instruction LDUR not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Subtract X9, X9, 1
	072 Add X10, X10, 16
	073 Move X0, X23
	074 Move W2, W31
	075 Call 0x1C5D788
	076 Move W8, [X19+24]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Compare X22, 0
	079 JumpIfEqual {311}
	080 Move X8, [X20+32]
	081 Move X8, [X8+192]
	082 Move X1, [X8+32]
	083 Move W8, [X1+309]
	084 Move TEMP, X8
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfEqual {91}
	088 Move X0, X1
	089 Call 0x1C5D684
	090 Move X1, X0
	091 Move X8, [X22]
	092 NotImplemented "Instruction LDRH not yet implemented."
	093 Compare X9, 0
	094 JumpIfEqual {101}
	095 Move X10, [X8+176]
	096 Add X10, X10, 8
	097 NotImplemented "Instruction LDUR not yet implemented."
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Subtract X9, X9, 1
	100 Add X10, X10, 16
	101 Move X0, X22
	102 Move W2, W31
	103 Call 0x1C5D788
	104 NotImplemented "Instruction LDRSW not yet implemented."
	105 Add X8, X8, X9
	106 Add X0, X8, 312
	107 Move X8, [X0]
	108 Move X1, [X0+8]
	109 Move X0, X23
	110 NotImplemented "Instruction BLR not yet implemented."
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move X8, [X20+32]
	113 Move W9, [X19+24]
	114 Move W22, W0
	115 Move X8, [X8+192]
	116 Add W1, W9, W0
	117 Move X0, X19
	118 Move X2, [X8+120]
	119 Call 0x2EF4E98, X0, X1
	120 Move W8, [X19+24]
	121 Subtract W4, W8, W21
	122 Move X0, [X19+16]
	123 Add W3, W22, W21
	124 Move W1, W21
	125 Move X5, X31
	126 Move X2, X0
	127 Call Array.Copy, X0, X1, X2, X3, X4
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move X8, [X20+32]
	130 Move X20, [X19+16]
	131 Move X8, [X8+192]
	132 Move X1, [X8+40]
	133 Move W8, [X1+309]
	134 Move TEMP, X8
	135 And TEMP, TEMP, 1
	136 Compare TEMP, 1
	137 JumpIfEqual {141}
	138 Move X0, X1
	139 Call 0x1C5D684
	140 Move X1, X0
	141 Move X8, [X23]
	142 NotImplemented "Instruction LDRH not yet implemented."
	143 Compare X9, 0
	144 JumpIfEqual {151}
	145 Move X10, [X8+176]
	146 Add X10, X10, 8
	147 NotImplemented "Instruction LDUR not yet implemented."
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Subtract X9, X9, 1
	150 Add X10, X10, 16
	151 Move W2, 5
	152 Move X0, X23
	153 Call 0x1C5D788
	154 Move X0, [X19+16]
	155 Move W1, W31
	156 Move W3, W21
	157 Move W4, W21
	158 Move X2, X0
	159 Move X5, X31
	160 Call Array.Copy, X0, X1, X2, X3, X4
	161 Move W8, [X19+24]
	162 Move X0, [X19+16]
	163 Add W1, W22, W21
	164 Move W3, W21
	165 ShiftRight W3, 31
	166 And W3, W3, 0x3FFFFFFF
	167 Subtract W4, W8, W21
	168 Move X2, X0
	169 Move X5, X31
	170 Call Array.Copy, X0, X1, X2, X3, X4
	171 Move W9, [X10]
	172 Add W9, W9, 5
	173 Add X8, X8, W9
	174 Add X0, X8, 312
	175 Move X8, [X0]
	176 Move X3, [X0+8]
	177 Move X0, X23
	178 Move X1, X20
	179 Move W2, W21
	180 NotImplemented "Instruction BLR not yet implemented."
	181 Move W8, [X19+24]
	182 Add W8, W8, W22
	183 Move [X19+24], W8
	184 NotImplemented "Instruction LDRSW not yet implemented."
	185 Add X8, X8, X9
	186 Add X0, X8, 312
	187 Move X8, [X0]
	188 Move X1, [X0+8]
	189 Move X0, X22
	190 NotImplemented "Instruction BLR not yet implemented."
	191 Move X23, X0
	192 Compare X0, 0
	193 JumpIfEqual {312}
	194 Move X24, 0x11FF000
	195 Move X24, [X24+3608]
	196 Move X8, [X23]
	197 Move X1, [X24]
	198 NotImplemented "Instruction LDRH not yet implemented."
	199 Compare X9, 0
	200 JumpIfEqual {207}
	201 Move X10, [X8+176]
	202 Add X10, X10, 8
	203 NotImplemented "Instruction LDUR not yet implemented."
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Subtract X9, X9, 1
	206 Add X10, X10, 16
	207 Move X0, X23
	208 Move W2, W31
	209 Call 0x1C5D788
	210 NotImplemented "Instruction LDRSW not yet implemented."
	211 Add X8, X8, X9
	212 Add X0, X8, 312
	213 Move X8, [X0]
	214 Move X1, [X0+8]
	215 Move X0, X23
	216 NotImplemented "Instruction BLR not yet implemented."
	217 Move TEMP, X0
	218 And TEMP, TEMP, 1
	219 Compare TEMP, 1
	220 JumpIfNotEqual {261}
	221 Move X8, [X20+32]
	222 Move X8, [X8+192]
	223 Move X1, [X8+328]
	224 Move W8, [X1+309]
	225 Move TEMP, X8
	226 And TEMP, TEMP, 1
	227 Compare TEMP, 1
	228 JumpIfEqual {232}
	229 Move X0, X1
	230 Call 0x1C5D684
	231 Move X1, X0
	232 Move X8, [X23]
	233 NotImplemented "Instruction LDRH not yet implemented."
	234 Compare X9, 0
	235 JumpIfEqual {242}
	236 Move X10, [X8+176]
	237 Add X10, X10, 8
	238 NotImplemented "Instruction LDUR not yet implemented."
	239 NotImplemented "Instruction CMP not yet implemented."
	240 Subtract X9, X9, 1
	241 Add X10, X10, 16
	242 Move X0, X23
	243 Move W2, W31
	244 Call 0x1C5D788
	245 NotImplemented "Instruction LDRSW not yet implemented."
	246 Add X8, X8, X9
	247 Add X0, X8, 312
	248 Move X8, [X0]
	249 Move X1, [X0+8]
	250 Move X0, X23
	251 NotImplemented "Instruction BLR not yet implemented."
	252 Move X8, [X20+32]
	253 Move X2, X0
	254 Add W25, W21, 1
	255 Move X8, [X8+192]
	256 Move X3, [X8+352]
	257 Move X0, X19
	258 Move W1, W21
	259 Call 0x2EF5824, X0, X1, X2
	260 Move W21, W25
	261 Move X21, X31
	262 Move W24, 5
	263 Compare X23, 0
	264 JumpIfEqual {288}
	265 Move X10, 0x11FF000
	266 Move X8, [X23]
	267 Move X10, [X10+3584]
	268 NotImplemented "Instruction LDRH not yet implemented."
	269 Move X1, [X10]
	270 Compare X9, 0
	271 JumpIfEqual {278}
	272 Move X10, [X8+176]
	273 Add X10, X10, 8
	274 NotImplemented "Instruction LDUR not yet implemented."
	275 NotImplemented "Instruction CMP not yet implemented."
	276 Subtract X9, X9, 1
	277 Add X10, X10, 16
	278 Move X0, X23
	279 Move W2, W31
	280 Call 0x1C5D788
	281 NotImplemented "Instruction LDRSW not yet implemented."
	282 Add X8, X8, X9
	283 Add X0, X8, 312
	284 Move X8, [X0]
	285 Move X1, [X0+8]
	286 Move X0, X23
	287 NotImplemented "Instruction BLR not yet implemented."
	288 Compare X21, 0
	289 JumpIfNotEqual {313}
	290 NotImplemented "Instruction CMP not yet implemented."
	291 Compare W24, 0
	292 JumpIfNotEqual {302}
	293 Move X8, [X20+32]
	294 Move X0, X19
	295 Move X1, X22
	296 Move X8, [X8+192]
	297 Move X2, [X8+64]
	298 Call 0x2EF6754, X0, X1
	299 Move W8, [X19+28]
	300 Add W8, W8, 1
	301 Move [X19+28], W8
	302 Move X20, [X31+48]
	303 Move X19, [X31+56]
	304 Move X22, [X31+32]
	305 Move X21, [X31+40]
	306 Move X24, [X31+16]
	307 Move X23, [X31+24]
	308 Move X30, [X31+64]
	309 Move X25, [X31+72]
	310 Return 
	311 Call 0x1C17F20
	312 Call 0x1C17F20
	313 Move X0, X21
	314 Call 0x1C17F18
	315 Move X24, X0
	316 NotImplemented "Instruction CMP not yet implemented."
	317 Move X0, X24
	318 Call 0x3EB2AD0
	319 Move X21, [X0]
	320 Call 0x3EB2AE0
	321 Move W24, W31
	322 Compare X23, 0
	323 JumpIfNotEqual {265}
	324 Move X21, X31
	325 Move X24, X0
	326 Compare X23, 0
	327 JumpIfEqual {351}
	328 Move X10, 0x11FF000
	329 Move X8, [X23]
	330 Move X10, [X10+3584]
	331 NotImplemented "Instruction LDRH not yet implemented."
	332 Move X1, [X10]
	333 Compare X9, 0
	334 JumpIfEqual {341}
	335 Move X10, [X8+176]
	336 Add X10, X10, 8
	337 NotImplemented "Instruction LDUR not yet implemented."
	338 NotImplemented "Instruction CMP not yet implemented."
	339 Subtract X9, X9, 1
	340 Add X10, X10, 16
	341 Move X0, X23
	342 Move W2, W31
	343 Call 0x1C5D788
	344 NotImplemented "Instruction LDRSW not yet implemented."
	345 Add X8, X8, X9
	346 Add X0, X8, 312
	347 Move X8, [X0]
	348 Move X1, [X0+8]
	349 Move X0, X23
	350 NotImplemented "Instruction BLR not yet implemented."
	351 Compare X21, 0
	352 JumpIfNotEqual {355}
	353 Move X0, X24
	354 Call 0x1D2D690
	355 Move X0, X21
	356 Call 0x1C17F18
	357 Call 0x1991590

Method: System.Int32 LastIndexOf(T item)

Disassembly:
	0x02EF5FA0 LDR X8, [X8 + 0xC0]
	0x02EF5FA4 LDR X0, [X8 + 0x10]
	0x02EF5FA8 LDRB W8, [X0 + 0x135]
	0x02EF5FAC TBNZ X8, 0x0, 0x2EF5FB4
	0x02EF5FB0 BL 0x1C5C684
	0x02EF5FB4 LDR X8, [X0 + 0xB8]
	0x02EF5FB8 LDR X8, [X8]
	0x02EF5FBC STR X8, [X19 + 0x10]
	0x02EF5FC0 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move W3, [X0+24]
	002 Compare W3, 0
	003 JumpIfEqual {10}
	004 Move X8, [X2+32]
	005 Subtract W2, W3, 1
	006 Move X8, [X8+192]
	007 Move X4, [X8+376]
	008 Call 0x2EF6020, X0, X1, X2, X3
	009 Return X0
	010 Move TEMP, 0
	011 Not TEMP
	012 Move W0, TEMP
	013 Return X0

Method: System.Int32 LastIndexOf(T item, System.Int32 index)

Disassembly:
	0x02EF5FC4 LDP X30, X21, [X31], #0x20
	0x02EF5FC8 RET
	0x02EF5FCC BL 0x1C16F20
	0x02EF5FD0 LDR W0, [X0 + 0x18]
	0x02EF5FD4 RET
	0x02EF5FD8 MOV W0, W31
	0x02EF5FDC RET
	0x02EF5FE0 MOV W0, W31
	0x02EF5FE4 RET
	0x02EF5FE8 MOV W0, W31
	0x02EF5FEC RET
	0x02EF5FF0 MOV W0, W31
	0x02EF5FF4 RET
	0x02EF5FF8 STR X30, [X31 - 0x20]!
	0x02EF5FFC STP X20, X19, [X31 + 0x10]
	0x02EF6000 ADRP X20, 0x14E5000
	0x02EF6004 LDRB W8, [X20 + 0xB8A]
	0x02EF6008 MOV X19, X0
	0x02EF600C TBNZ X8, 0x0, 0x2EF6024
	0x02EF6010 ADRP X0, 0x1203000
	0x02EF6014 LDR X0, [X0 + 0xCC0]
	0x02EF6018 BL 0x1C16CF4
	0x02EF601C MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W8, [X0+24]
	007 Move X21, X3
	008 Move X20, X0
	009 Move W19, W2
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move X22, X1
	012 Move X0, X31
	013 Call ThrowHelper.ThrowArgumentOutOfRange_IndexException
	014 Move X8, [X21+32]
	015 Add W3, W19, 1
	016 Move X0, X20
	017 Move X1, X22
	018 Move X8, [X8+192]
	019 Move W2, W19
	020 Move X20, [X31+32]
	021 Move X19, [X31+40]
	022 Move X22, [X31+16]
	023 Move X21, [X31+24]
	024 Move X4, [X8+376]
	025 Move X30, [X31+48]

Method: System.Int32 LastIndexOf(T item, System.Int32 index, System.Int32 count)

Disassembly:
	0x02EF6020 STRB W8, [X20 + 0xB8A]
	0x02EF6024 LDR X0, [X19 + 0x20]!
	0x02EF6028 CBNZ X0, 0x2EF605C
	0x02EF602C ADRP X8, 0x1203000
	0x02EF6030 LDR X8, [X8 + 0xCC0]
	0x02EF6034 LDR X0, [X8]
	0x02EF6038 BL 0x1C16F10
	0x02EF603C MOV X1, X31
	0x02EF6040 MOV X20, X0
	0x02EF6044 BL 0x33BDD8C
	0x02EF6048 MOV X0, X19
	0x02EF604C MOV X1, X20
	0x02EF6050 MOV X2, X31
	0x02EF6054 BL 0x1C24138
	0x02EF6058 LDR X0, [X19]
	0x02EF605C LDP X20, X19, [X31 + 0x10]
	0x02EF6060 LDR X30, [X31], #0x20
	0x02EF6064 RET
	0x02EF6068 STR X30, [X31 - 0x20]!
	0x02EF606C STP X20, X19, [X31 + 0x10]
	0x02EF6070 LDR W8, [X0 + 0x18]
	0x02EF6074 MOV X20, X0
	0x02EF6078 MOV W19, W1
	0x02EF607C CMP W8, W1
	0x02EF6080 B.HI 0x2EF608C
	0x02EF6084 MOV X0, X31
	0x02EF6088 BL 0x339E294
	0x02EF608C LDR X8, [X20 + 0x10]
	0x02EF6090 CBZ X8, 0x2EF60B4
	0x02EF6094 LDR W9, [X8 + 0x18]
	0x02EF6098 CMP W9, W19
	0x02EF609C B.LS 0x2EF60B8
	0x02EF60A0 ADD X8, X8, W19, 0x3, SXTW
	0x02EF60A4 LDR X0, [X8 + 0x20]
	0x02EF60A8 LDP X20, X19, [X31 + 0x10]
	0x02EF60AC LDR X30, [X31], #0x20
	0x02EF60B0 RET
	0x02EF60B4 BL 0x1C16F20
	0x02EF60B8 BL 0x1C16F28
	0x02EF60BC STP X30, X21, [X31 - 0x20]!
	0x02EF60C0 STP X20, X19, [X31 + 0x10]
	0x02EF60C4 LDR W8, [X0 + 0x18]
	0x02EF60C8 MOV X19, X0
	0x02EF60CC MOV W20, W1
	0x02EF60D0 MOV X21, X2
	0x02EF60D4 CMP W8, W1
	0x02EF60D8 B.HI 0x2EF60E4
	0x02EF60DC MOV X0, X31
	0x02EF60E0 BL 0x339E294
	0x02EF60E4 LDR X8, [X19 + 0x10]
	0x02EF60E8 CBZ X8, 0x2EF6118

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move W8, [X0+24]
	008 Move X21, X4
	009 Move W19, W3
	010 Move W20, W2
	011 Move X23, X0
	012 Move X22, X1
	013 Move TEMP, X2
	014 And TEMP, TEMP, -2147483648
	015 Compare TEMP, -2147483648
	016 JumpIfNotEqual {22}
	017 Compare W8, 0
	018 JumpIfEqual {22}
	019 Move X0, X31
	020 Call ThrowHelper.ThrowIndexArgumentOutOfRange_NeedNonNegNumException
	021 Move W8, [X23+24]
	022 Move TEMP, X19
	023 And TEMP, TEMP, -2147483648
	024 Compare TEMP, -2147483648
	025 JumpIfNotEqual {33}
	026 Compare W8, 0
	027 JumpIfEqual {33}
	028 Move W0, 16
	029 Move W1, 4
	030 Move X2, X31
	031 Call ThrowHelper.ThrowArgumentOutOfRangeException, X0, X1
	032 Move W8, [X23+24]
	033 Compare W8, 0
	034 JumpIfEqual {61}
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move W0, 13
	037 Move W1, 34
	038 Move X2, X31
	039 Call ThrowHelper.ThrowArgumentOutOfRangeException, X0, X1
	040 Add W8, W20, 1
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move W0, 16
	043 Move W1, 34
	044 Move X2, X31
	045 Call ThrowHelper.ThrowArgumentOutOfRangeException, X0, X1
	046 Move X8, [X21+32]
	047 Move X0, [X23+16]
	048 Move X1, X22
	049 Move W2, W20
	050 Move X8, [X8+192]
	051 Move W3, W19
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X22, [X31+16]
	055 Move X21, [X31+24]
	056 Move X4, [X8+384]
	057 Move X30, [X31+48]
	058 Move X23, [X31+56]
	059 Call 0x20F939C, X0, X1, X2, X3
	060 Return X0
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X22, [X31+16]
	064 Move X21, [X31+24]
	065 Move TEMP, 0
	066 Not TEMP
	067 Move W0, TEMP
	068 Move X30, [X31+48]
	069 Move X23, [X31+56]
	070 Return X0

Method: System.Boolean Remove(T item)

Disassembly:
	0x02EF60EC LDR W9, [X8 + 0x18]
	0x02EF60F0 CMP W9, W20
	0x02EF60F4 B.LS 0x2EF611C
	0x02EF60F8 ADD X8, X8, W20, 0x3, SXTW
	0x02EF60FC STR X21, [X8 + 0x20]
	0x02EF6100 LDR W8, [X19 + 0x1C]
	0x02EF6104 ADD W8, W8, 0x1
	0x02EF6108 STR W8, [X19 + 0x1C]
	0x02EF610C LDP X20, X19, [X31 + 0x10]
	0x02EF6110 LDP X30, X21, [X31], #0x20
	0x02EF6114 RET
	0x02EF6118 BL 0x1C16F20
	0x02EF611C BL 0x1C16F28
	0x02EF6120 STP X30, X19, [X31 - 0x10]!
	0x02EF6124 LDR X8, [X1 + 0x20]
	0x02EF6128 MOV X19, X0
	0x02EF612C LDRB W9, [X8 + 0x135]
	0x02EF6130 TBNZ X9, 0x0, 0x2EF6140
	0x02EF6134 MOV X0, X8
	0x02EF6138 BL 0x1C5C684
	0x02EF613C MOV X8, X0
	0x02EF6140 LDR X8, [X8 + 0xC0]
	0x02EF6144 LDR X1, [X8 + 0x48]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X2+32]
	005 Move X19, X0
	006 Move X0, [X0+16]
	007 Move W3, [X19+24]
	008 Move X8, [X8+192]
	009 Move W2, W31
	010 Move X8, [X8+208]
	011 Move X8, [X8+32]
	012 Move X8, [X8+192]
	013 Move X4, [X8+344]
	014 Call 0x22E8928, X0, X1, X2, X3
	015 Move W20, W0
	016 Move TEMP, X0
	017 And TEMP, TEMP, -2147483648
	018 Compare TEMP, -2147483648
	019 JumpIfEqual {23}
	020 Move X0, X19
	021 Move W1, W20
	022 Call 0x2EF6370, X0, X1
	023 NotImplemented "Instruction ORN not yet implemented."
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W0, W8
	027 ShiftRight W0, 31
	028 And W0, W0, 0x7FFFFFFF
	029 Move X30, [X31+32]
	030 Return X0

Method: System.Void System.Collections.IList.Remove(System.Object item)

Disassembly:
	0x02EF6148 LDRB W8, [X1 + 0x135]
	0x02EF614C TBNZ X8, 0x0, 0x2EF615C
	0x02EF6150 MOV X0, X1
	0x02EF6154 BL 0x1C5C684
	0x02EF6158 MOV X1, X0
	0x02EF615C MOV X0, X19
	0x02EF6160 BL 0x1C16E00
	0x02EF6164 CMP X0, 0x0
	0x02EF6168 CSET W0, NE
	0x02EF616C LDP X30, X19, [X31], #0x10
	0x02EF6170 RET
	0x02EF6174 SUB X31, X31, 0x20
	0x02EF6178 STP X30, X19, [X31 + 0x10]
	0x02EF617C MOV X19, X2
	0x02EF6180 BL 0x2EF6068
	0x02EF6184 STR X0, [X31 + 0x8]
	0x02EF6188 LDR X8, [X19 + 0x20]
	0x02EF618C ADD X1, X31, 0x8
	0x02EF6190 LDR X8, [X8 + 0xC0]
	0x02EF6194 LDR X0, [X8 + 0x48]
	0x02EF6198 BL 0x1C16E04
	0x02EF619C LDP X30, X19, [X31 + 0x10]
	0x02EF61A0 ADD X31, X31, 0x20
	0x02EF61A4 RET
	0x02EF61A8 STR X30, [X31 - 0x30]!
	0x02EF61AC STP X22, X21, [X31 + 0x10]
	0x02EF61B0 STP X20, X19, [X31 + 0x20]
	0x02EF61B4 LDR X8, [X3 + 0x20]
	0x02EF61B8 MOV X19, X2
	0x02EF61BC MOV W21, W1
	0x02EF61C0 MOV X22, X0
	0x02EF61C4 LDR X8, [X8 + 0xC0]
	0x02EF61C8 MOVZ W1, 0xF
	0x02EF61CC MOV X0, X19
	0x02EF61D0 MOV X20, X3
	0x02EF61D4 LDR X2, [X8 + 0x58]
	0x02EF61D8 BL 0x229CE1C
	0x02EF61DC LDR X8, [X20 + 0x20]
	0x02EF61E0 LDR X8, [X8 + 0xC0]
	0x02EF61E4 LDR X1, [X8 + 0x48]
	0x02EF61E8 LDRB W8, [X1 + 0x135]
	0x02EF61EC TBNZ X8, 0x0, 0x2EF61FC
	0x02EF61F0 MOV X0, X1
	0x02EF61F4 BL 0x1C5C684
	0x02EF61F8 MOV X1, X0
	0x02EF61FC CBZ X19, 0x2EF623C
	0x02EF6200 LDR X8, [X19]
	0x02EF6204 LDR X9, [X1 + 0x40]
	0x02EF6208 LDR X8, [X8 + 0x40]
	0x02EF620C CMP X8, X9
	0x02EF6210 B.NE 0x2EF6240
	0x02EF6214 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X19, X2
	007 Move X20, X1
	008 Move X21, X0
	009 Move X8, [X8+192]
	010 Move X8, [X8+16]
	011 Move W9, [X8+309]
	012 Move TEMP, X9
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {19}
	016 Move X0, X8
	017 Call 0x1C5D684
	018 Move X8, X0
	019 Move W9, [X8+224]
	020 Compare W9, 0
	021 JumpIfNotEqual {24}
	022 Move X0, X8
	023 Call 0x1C17DFC
	024 Move X8, [X19+32]
	025 Move X0, X20
	026 Move X8, [X8+192]
	027 Move X1, [X8+216]
	028 Call 0x2EF46B0, X0
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {63}
	033 Move X8, [X19+32]
	034 Move X8, [X8+192]
	035 Move X1, [X8+72]
	036 Move W8, [X1+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {44}
	041 Move X0, X1
	042 Call 0x1C5D684
	043 Move X1, X0
	044 Compare X20, 0
	045 JumpIfEqual {68}
	046 Move X8, [X20]
	047 Move X9, [X1+64]
	048 Move X0, X20
	049 Move X8, [X8+64]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Call 0x1C17E08
	052 Move X8, [X19+32]
	053 Move X1, [X0]
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move X0, X21
	057 Move X8, [X8+192]
	058 Move X2, [X8+400]
	059 Move X30, [X31+32]
	060 Move X21, [X31+40]
	061 Call 0x2EF60EC, X0, X1
	062 Return 
	063 Move X20, [X31+16]
	064 Move X19, [X31+24]
	065 Move X30, [X31+32]
	066 Move X21, [X31+40]
	067 Return 
	068 Call 0x1C17F20
	069 Call 0x1C181E0

Method: System.Int32 RemoveAll(System.Predicate`1<T> match)

Disassembly:
	0x02EF6218 BL 0x1C16E08
	0x02EF621C LDR X2, [X0]
	0x02EF6220 MOV X0, X22
	0x02EF6224 MOV W1, W21
	0x02EF6228 BL 0x2EF60BC
	0x02EF622C LDP X20, X19, [X31 + 0x20]
	0x02EF6230 LDP X22, X21, [X31 + 0x10]
	0x02EF6234 LDR X30, [X31], #0x30
	0x02EF6238 RET
	0x02EF623C BL 0x1C16F20
	0x02EF6240 MOV X0, X19
	0x02EF6244 BL 0x1C171E0
	0x02EF6248 CMP W1, 0x1
	0x02EF624C MOV X21, X0
	0x02EF6250 B.NE 0x2EF62F4
	0x02EF6254 MOV X0, X21
	0x02EF6258 BL 0x3EB1AD0
	0x02EF625C MOV X21, X0
	0x02EF6260 ADRP X0, 0x1205000
	0x02EF6264 LDR X0, [X0 + 0xC08]
	0x02EF6268 BL 0x1C16D08
	0x02EF626C LDR X8, [X21]
	0x02EF6270 LDR X1, [X8]
	0x02EF6274 BL 0x1C17270
	0x02EF6278 TBZ X0, 0x0, 0x2EF62CC
	0x02EF627C BL 0x3EB1AE0
	0x02EF6280 LDR X8, [X20 + 0x20]
	0x02EF6284 ADRP X0, 0x11FD000
	0x02EF6288 LDR X8, [X8 + 0xC0]
	0x02EF628C LDR X20, [X8 + 0x68]
	0x02EF6290 LDR X0, [X0 + 0x6C0]
	0x02EF6294 BL 0x1C16D08
	0x02EF6298 LDR W8, [X0 + 0xE0]
	0x02EF629C CBNZ W8, 0x2EF62A4
	0x02EF62A0 BL 0x1C16DFC
	0x02EF62A4 MOV X0, X20
	0x02EF62A8 MOV X1, X31
	0x02EF62AC BL 0x338C698
	0x02EF62B0 MOV X1, X0
	0x02EF62B4 MOV X0, X19
	0x02EF62B8 LDP X20, X19, [X31 + 0x20]
	0x02EF62BC LDP X22, X21, [X31 + 0x10]
	0x02EF62C0 MOV X2, X31
	0x02EF62C4 LDR X30, [X31], #0x30
	0x02EF62C8 B 0x339D978
	0x02EF62CC MOVZ W0, 0x8
	0x02EF62D0 BL 0x3EB1AF0
	0x02EF62D4 LDR X8, [X21]
	0x02EF62D8 STR X8, [X0]
	0x02EF62DC ADRP X1, 0xFBE000
	0x02EF62E0 ADD X1, X1, 0xE58
	0x02EF62E4 MOV X2, X31
	0x02EF62E8 BL 0x3EB1B00
	0x02EF62EC MOV X21, X0
	0x02EF62F0 BL 0x3EB1AE0
	0x02EF62F4 MOV X0, X21
	0x02EF62F8 BL 0x1D2C690
	0x02EF62FC BL 0x1990590
	0x02EF6300 STR X30, [X31 - 0x10]!
	0x02EF6304 LDR W9, [X0 + 0x1C]
	0x02EF6308 LDR X8, [X0 + 0x10]
	0x02EF630C ADD W9, W9, 0x1
	0x02EF6310 STR W9, [X0 + 0x1C]
	0x02EF6314 CBZ X8, 0x2EF6354
	0x02EF6318 LDRSW X9, [X0 + 0x18]
	0x02EF631C LDR W10, [X8 + 0x18]
	0x02EF6320 CMP W9, W10
	0x02EF6324 B.CS 0x2EF6340
	0x02EF6328 ADD W10, W9, 0x1
	0x02EF632C ADD X8, X8, X9, 0x3, LSL
	0x02EF6330 STR W10, [X0 + 0x18]
	0x02EF6334 STR X1, [X8 + 0x20]
	0x02EF6338 LDR X30, [X31], #0x10
	0x02EF633C RET
	0x02EF6340 LDR X8, [X2 + 0x20]
	0x02EF6344 LDR X8, [X8 + 0xC0]
	0x02EF6348 LDR X2, [X8 + 0x70]
	0x02EF634C LDR X30, [X31], #0x10
	0x02EF6350 B 0x2EF6358
	0x02EF6354 BL 0x1C16F20
	0x02EF6358 STR X30, [X31 - 0x30]!
	0x02EF635C STP X22, X21, [X31 + 0x10]
	0x02EF6360 STP X20, X19, [X31 + 0x20]
	0x02EF6364 LDR X8, [X2 + 0x20]
	0x02EF6368 LDRSW X22, [X0 + 0x18]
	0x02EF636C MOV X19, X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, X1
	007 Move X19, X0
	008 Compare X1, 0
	009 JumpIfNotEqual {12}
	010 Move W0, 8
	011 Call ThrowHelper.ThrowArgumentNullException, X0
	012 Move W8, [X19+24]
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move X21, X31
	015 Move X8, [X19+16]
	016 Compare X8, 0
	017 JumpIfEqual {87}
	018 Move W9, [X8+24]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Compare X20, 0
	021 JumpIfEqual {87}
	022 Add X8, X8, X21
	023 Move X9, [X20+24]
	024 Move X0, [X20+64]
	025 Move X1, [X8+32]
	026 Move X2, [X20+40]
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {36}
	032 NotImplemented "Instruction LDRSW not yet implemented."
	033 Add X21, X21, 1
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move W21, W31
	036 Move W8, [X19+24]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move W22, W21
	039 Add W21, W21, 1
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X21, W21
	042 Move X8, [X19+16]
	043 Compare X8, 0
	044 JumpIfEqual {87}
	045 Move W9, [X8+24]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Compare X20, 0
	048 JumpIfEqual {87}
	049 Add X8, X8, X21
	050 Move X9, [X20+24]
	051 Move X0, [X20+64]
	052 Move X1, [X8+32]
	053 Move X2, [X20+40]
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {62}
	059 NotImplemented "Instruction LDRSW not yet implemented."
	060 Add X21, X21, 1
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move W8, [X19+24]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X8, [X19+16]
	065 Compare X8, 0
	066 JumpIfEqual {87}
	067 Move W9, [X8+24]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Add X8, X8, 32
	071 Move X9, [X8]
	072 Move [X8], X9
	073 Move W8, [X19+24]
	074 Add W22, W22, 1
	075 Move W0, W31
	076 Move W9, [X19+28]
	077 Subtract W0, W8, W22
	078 Add W9, W9, 1
	079 Move [X19+24], W22
	080 Move [X19+28], W9
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X22, [X31+16]
	084 Move X21, [X31+24]
	085 Move X30, [X31+48]
	086 Return X0
	087 Call 0x1C17F20
	088 Call 0x1C17F28

Method: System.Void RemoveAt(System.Int32 index)

Disassembly:
	0x02EF6370 MOV X20, X0
	0x02EF6374 LDR X8, [X8 + 0xC0]
	0x02EF6378 ADD W21, W22, 0x1
	0x02EF637C MOV W1, W21
	0x02EF6380 LDR X2, [X8 + 0x78]
	0x02EF6384 BL 0x2EF6908
	0x02EF6388 LDR X8, [X20 + 0x10]
	0x02EF638C STR W21, [X20 + 0x18]
	0x02EF6390 CBZ X8, 0x2EF63B8
	0x02EF6394 LDR W9, [X8 + 0x18]
	0x02EF6398 CMP W22, W9
	0x02EF639C B.CS 0x2EF63BC
	0x02EF63A0 ADD X8, X8, X22, 0x3, LSL
	0x02EF63A4 STR X19, [X8 + 0x20]
	0x02EF63A8 LDP X20, X19, [X31 + 0x20]
	0x02EF63AC LDP X22, X21, [X31 + 0x10]
	0x02EF63B0 LDR X30, [X31], #0x30
	0x02EF63B4 RET
	0x02EF63B8 BL 0x1C16F20
	0x02EF63BC BL 0x1C16F28
	0x02EF63C0 STR X30, [X31 - 0x30]!
	0x02EF63C4 STP X22, X21, [X31 + 0x10]
	0x02EF63C8 STP X20, X19, [X31 + 0x20]
	0x02EF63CC LDR X8, [X2 + 0x20]
	0x02EF63D0 MOV X21, X2
	0x02EF63D4 MOV X20, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+24]
	005 Move X19, X0
	006 Move W20, W1
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move X0, X31
	009 Call ThrowHelper.ThrowArgumentOutOfRange_IndexException
	010 Move W8, [X19+24]
	011 Subtract W8, W8, 1
	012 Subtract W4, W8, W20
	013 Move [X19+24], W8
	014 Move X0, [X19+16]
	015 Add W1, W20, 1
	016 Move W3, W20
	017 Move X5, X31
	018 Move X2, X0
	019 Call Array.Copy, X0, X1, X2, X3, X4
	020 Move W8, [X19+28]
	021 Add W8, W8, 1
	022 Move [X19+28], W8
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Return 

Method: System.Void RemoveRange(System.Int32 index, System.Int32 count)

Disassembly:
	0x02EF63D8 MOV X19, X0
	0x02EF63DC LDR X8, [X8 + 0xC0]
	0x02EF63E0 MOVZ W1, 0x14
	0x02EF63E4 MOV X0, X20
	0x02EF63E8 LDR X2, [X8 + 0x58]
	0x02EF63EC BL 0x229CE1C
	0x02EF63F0 LDR X8, [X21 + 0x20]
	0x02EF63F4 LDR X8, [X8 + 0xC0]
	0x02EF63F8 LDR X1, [X8 + 0x48]
	0x02EF63FC LDRB W8, [X1 + 0x135]
	0x02EF6400 TBNZ X8, 0x0, 0x2EF6410
	0x02EF6404 MOV X0, X1
	0x02EF6408 BL 0x1C5C684
	0x02EF640C MOV X1, X0
	0x02EF6410 CBZ X20, 0x2EF64A4
	0x02EF6414 LDR X8, [X20]
	0x02EF6418 LDR X9, [X1 + 0x40]
	0x02EF641C LDR X8, [X8 + 0x40]
	0x02EF6420 CMP X8, X9
	0x02EF6424 B.NE 0x2EF64A8
	0x02EF6428 MOV X0, X20
	0x02EF642C BL 0x1C16E08
	0x02EF6430 LDR X8, [X21 + 0x20]
	0x02EF6434 LDR W10, [X19 + 0x1C]
	0x02EF6438 LDR X1, [X0]
	0x02EF643C LDR X9, [X8 + 0xC0]
	0x02EF6440 LDR X8, [X19 + 0x10]
	0x02EF6444 ADD W10, W10, 0x1
	0x02EF6448 LDR X9, [X9 + 0x80]
	0x02EF644C STR W10, [X19 + 0x1C]
	0x02EF6450 CBZ X8, 0x2EF64B0
	0x02EF6454 LDRSW X10, [X19 + 0x18]
	0x02EF6458 LDR W11, [X8 + 0x18]
	0x02EF645C CMP W10, W11
	0x02EF6460 B.CS 0x2EF6478
	0x02EF6464 ADD W9, W10, 0x1
	0x02EF6468 ADD X8, X8, X10, 0x3, LSL
	0x02EF646C STR W9, [X19 + 0x18]
	0x02EF6470 STR X1, [X8 + 0x20]
	0x02EF6474 B 0x2EF648C
	0x02EF6478 LDR X8, [X9 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W21, W2
	006 Move W20, W1
	007 Move X19, X0
	008 Move TEMP, X1
	009 And TEMP, TEMP, -2147483648
	010 Compare TEMP, -2147483648
	011 JumpIfEqual {41}
	012 Move TEMP, X21
	013 And TEMP, TEMP, -2147483648
	014 Compare TEMP, -2147483648
	015 JumpIfEqual {47}
	016 Move W8, [X19+24]
	017 Subtract W8, W8, W20
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move W0, 23
	020 Move X1, X31
	021 Call ThrowHelper.ThrowArgumentException, X0
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move W8, [X19+24]
	024 Subtract W8, W8, W21
	025 Subtract W4, W8, W20
	026 Move [X19+24], W8
	027 Move X0, [X19+16]
	028 Add W1, W21, W20
	029 Move W3, W20
	030 Move X5, X31
	031 Move X2, X0
	032 Call Array.Copy, X0, X1, X2, X3, X4
	033 Move W8, [X19+28]
	034 Add W8, W8, 1
	035 Move [X19+28], W8
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Return 
	041 Move X0, X31
	042 Call ThrowHelper.ThrowIndexArgumentOutOfRange_NeedNonNegNumException
	043 Move TEMP, X21
	044 And TEMP, TEMP, -2147483648
	045 Compare TEMP, -2147483648
	046 JumpIfNotEqual {16}
	047 Move W0, 16
	048 Move W1, 4
	049 Move X2, X31
	050 Call ThrowHelper.ThrowArgumentOutOfRangeException, X0, X1

Method: System.Void Reverse()

Disassembly:
	0x02EF647C LDR X8, [X8 + 0xC0]
	0x02EF6480 LDR X2, [X8 + 0x70]
	0x02EF6484 MOV X0, X19
	0x02EF6488 BL 0x2EF6358
	0x02EF648C LDR W8, [X19 + 0x18]
	0x02EF6490 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move X8, [X1+32]
	002 Move W2, [X0+24]
	003 Move W1, W31
	004 Move X8, [X8+192]
	005 Move X3, [X8+408]

Method: System.Void Reverse(System.Int32 index, System.Int32 count)

Disassembly:
	0x02EF6494 LDP X22, X21, [X31 + 0x10]
	0x02EF6498 SUB W0, W8, 0x1
	0x02EF649C LDR X30, [X31], #0x30
	0x02EF64A0 RET
	0x02EF64A4 BL 0x1C16F20
	0x02EF64A8 MOV X0, X20
	0x02EF64AC BL 0x1C171E0
	0x02EF64B0 BL 0x1C16F20
	0x02EF64B4 CMP W1, 0x1
	0x02EF64B8 MOV X22, X0
	0x02EF64BC B.NE 0x2EF6558
	0x02EF64C0 MOV X0, X22
	0x02EF64C4 BL 0x3EB1AD0
	0x02EF64C8 MOV X22, X0
	0x02EF64CC ADRP X0, 0x1205000
	0x02EF64D0 LDR X0, [X0 + 0xC08]
	0x02EF64D4 BL 0x1C16D08
	0x02EF64D8 LDR X8, [X22]
	0x02EF64DC LDR X1, [X8]
	0x02EF64E0 BL 0x1C17270
	0x02EF64E4 TBZ X0, 0x0, 0x2EF6530
	0x02EF64E8 BL 0x3EB1AE0
	0x02EF64EC LDR X8, [X21 + 0x20]
	0x02EF64F0 ADRP X0, 0x11FD000
	0x02EF64F4 LDR X8, [X8 + 0xC0]
	0x02EF64F8 LDR X21, [X8 + 0x68]
	0x02EF64FC LDR X0, [X0 + 0x6C0]
	0x02EF6500 BL 0x1C16D08
	0x02EF6504 LDR W8, [X0 + 0xE0]
	0x02EF6508 CBNZ W8, 0x2EF6510
	0x02EF650C BL 0x1C16DFC
	0x02EF6510 MOV X0, X21
	0x02EF6514 MOV X1, X31
	0x02EF6518 BL 0x338C698
	0x02EF651C MOV X1, X0
	0x02EF6520 MOV X0, X20
	0x02EF6524 MOV X2, X31
	0x02EF6528 BL 0x339D978
	0x02EF652C B 0x2EF648C
	0x02EF6530 MOVZ W0, 0x8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, X3
	007 Move W20, W2
	008 Move W21, W1
	009 Move X19, X0
	010 Move TEMP, X1
	011 And TEMP, TEMP, -2147483648
	012 Compare TEMP, -2147483648
	013 JumpIfEqual {41}
	014 Move TEMP, X20
	015 And TEMP, TEMP, -2147483648
	016 Compare TEMP, -2147483648
	017 JumpIfEqual {47}
	018 Move W8, [X19+24]
	019 Subtract W8, W8, W21
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move W0, 23
	022 Move X1, X31
	023 Call ThrowHelper.ThrowArgumentException, X0
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X8, [X22+32]
	026 Move X0, [X19+16]
	027 Move W1, W21
	028 Move W2, W20
	029 Move X8, [X8+192]
	030 Move X3, [X8+416]
	031 Call 0x214776C, X0, X1, X2
	032 Move W8, [X19+28]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Add W8, W8, 1
	036 Move [X19+28], W8
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X30, [X31+48]
	040 Return 
	041 Move X0, X31
	042 Call ThrowHelper.ThrowIndexArgumentOutOfRange_NeedNonNegNumException
	043 Move TEMP, X20
	044 And TEMP, TEMP, -2147483648
	045 Compare TEMP, -2147483648
	046 JumpIfNotEqual {18}
	047 Move W0, 16
	048 Move W1, 4
	049 Move X2, X31
	050 Call ThrowHelper.ThrowArgumentOutOfRangeException, X0, X1

Method: System.Void Sort()

Disassembly:
	0x02EF6534 BL 0x3EB1AF0
	0x02EF6538 LDR X8, [X22]
	0x02EF653C STR X8, [X0]
	0x02EF6540 ADRP X1, 0xFBE000
	0x02EF6544 ADD X1, X1, 0xE58
	0x02EF6548 MOV X2, X31
	0x02EF654C BL 0x3EB1B00

ISIL:
	001 Move X8, [X1+32]
	002 Move W2, [X0+24]
	003 Move W1, W31
	004 Move X3, X31
	005 Move X8, [X8+192]
	006 Move X4, [X8+424]
	007 Call 0x2EF656C, X0, X1, X2, X3
	008 Return 

Method: System.Void Sort(System.Collections.Generic.IComparer`1<T> comparer)

Disassembly:
	0x02EF6550 MOV X22, X0
	0x02EF6554 BL 0x3EB1AE0
	0x02EF6558 MOV X0, X22
	0x02EF655C BL 0x1D2C690
	0x02EF6560 BL 0x1990590
	0x02EF6564 LDR X8, [X2 + 0x20]
	0x02EF6568 MOV X2, X1

ISIL:
	001 Move X8, [X2+32]
	002 Move W2, [X0+24]
	003 Move X3, X1
	004 Move W1, W31
	005 Move X8, [X8+192]
	006 Move X4, [X8+424]

Method: System.Void Sort(System.Int32 index, System.Int32 count, System.Collections.Generic.IComparer`1<T> comparer)

Disassembly:
	0x02EF656C LDR X9, [X8 + 0xC0]
	0x02EF6570 LDR W8, [X0 + 0x18]
	0x02EF6574 LDR X3, [X9 + 0x90]
	0x02EF6578 MOV W1, W8
	0x02EF657C B 0x2EF74C8
	0x02EF6580 STR X30, [X31 - 0x20]!
	0x02EF6584 STP X20, X19, [X31 + 0x10]
	0x02EF6588 LDR X8, [X1 + 0x20]
	0x02EF658C MOV X19, X1
	0x02EF6590 MOV X20, X0
	0x02EF6594 LDR X8, [X8 + 0xC0]
	0x02EF6598 LDR X8, [X8 + 0x98]
	0x02EF659C LDRB W9, [X8 + 0x135]
	0x02EF65A0 TBNZ X9, 0x0, 0x2EF65B0
	0x02EF65A4 MOV X0, X8
	0x02EF65A8 BL 0x1C5C684
	0x02EF65AC MOV X8, X0
	0x02EF65B0 MOV X0, X8
	0x02EF65B4 BL 0x1C16F10
	0x02EF65B8 LDR X8, [X19 + 0x20]
	0x02EF65BC MOV X1, X20
	0x02EF65C0 MOV X19, X0
	0x02EF65C4 LDR X8, [X8 + 0xC0]
	0x02EF65C8 LDR X2, [X8 + 0xA0]
	0x02EF65CC BL 0x25007B0
	0x02EF65D0 MOV X0, X19
	0x02EF65D4 LDP X20, X19, [X31 + 0x10]
	0x02EF65D8 LDR X30, [X31], #0x20
	0x02EF65DC RET
	0x02EF65E0 STR X30, [X31 - 0x40]!
	0x02EF65E4 STP X24, X23, [X31 + 0x10]
	0x02EF65E8 STP X22, X21, [X31 + 0x20]
	0x02EF65EC STP X20, X19, [X31 + 0x30]
	0x02EF65F0 MOV X23, X5
	0x02EF65F4 MOV X19, X4
	0x02EF65F8 MOV X20, X3
	0x02EF65FC MOV W21, W2
	0x02EF6600 MOV W22, W1
	0x02EF6604 MOV X24, X0
	0x02EF6608 TBNZ X1, 0x1F, 0x2EF6660
	0x02EF660C TBNZ X21, 0x1F, 0x2EF666C
	0x02EF6610 LDR W8, [X24 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, X4
	008 Move X20, X3
	009 Move W21, W2
	010 Move W22, W1
	011 Move X19, X0
	012 Move TEMP, X1
	013 And TEMP, TEMP, -2147483648
	014 Compare TEMP, -2147483648
	015 JumpIfEqual {45}
	016 Move TEMP, X21
	017 And TEMP, TEMP, -2147483648
	018 Compare TEMP, -2147483648
	019 JumpIfEqual {51}
	020 Move W8, [X19+24]
	021 Subtract W8, W8, W22
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move W0, 23
	024 Move X1, X31
	025 Call ThrowHelper.ThrowArgumentException, X0
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X8, [X23+32]
	028 Move X0, [X19+16]
	029 Move W1, W22
	030 Move W2, W21
	031 Move X8, [X8+192]
	032 Move X3, X20
	033 Move X4, [X8+432]
	034 Call 0x2159360, X0, X1, X2, X3
	035 Move W8, [X19+28]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Add W8, W8, 1
	039 Move [X19+28], W8
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X30, [X31+48]
	043 Move X23, [X31+56]
	044 Return 
	045 Move X0, X31
	046 Call ThrowHelper.ThrowIndexArgumentOutOfRange_NeedNonNegNumException
	047 Move TEMP, X21
	048 And TEMP, TEMP, -2147483648
	049 Compare TEMP, -2147483648
	050 JumpIfNotEqual {20}
	051 Move W0, 16
	052 Move W1, 4
	053 Move X2, X31
	054 Call ThrowHelper.ThrowArgumentOutOfRangeException, X0, X1

Method: System.Void Sort(System.Comparison`1<T> comparison)

Disassembly:
	0x02EF6614 SUB W8, W8, W22
	0x02EF6618 CMP W8, W21
	0x02EF661C B.GE 0x2EF662C
	0x02EF6620 MOVZ W0, 0x17
	0x02EF6624 MOV X1, X31
	0x02EF6628 BL 0x339DA4C
	0x02EF662C LDR X8, [X23 + 0x20]
	0x02EF6630 LDR X0, [X24 + 0x10]
	0x02EF6634 MOV W1, W22
	0x02EF6638 MOV W2, W21
	0x02EF663C LDR X8, [X8 + 0xC0]
	0x02EF6640 MOV X3, X20
	0x02EF6644 MOV X4, X19
	0x02EF6648 LDP X20, X19, [X31 + 0x30]
	0x02EF664C LDR X5, [X8 + 0xB8]
	0x02EF6650 LDP X22, X21, [X31 + 0x20]
	0x02EF6654 LDP X24, X23, [X31 + 0x10]
	0x02EF6658 LDR X30, [X31], #0x40
	0x02EF665C B 0x22CA01C
	0x02EF6660 MOV X0, X31
	0x02EF6664 BL 0x339E2CC
	0x02EF6668 TBZ X21, 0x1F, 0x2EF6610
	0x02EF666C MOVZ W0, 0x10
	0x02EF6670 MOVZ W1, 0x4
	0x02EF6674 MOV X2, X31
	0x02EF6678 BL 0x339DF10
	0x02EF667C B 0x2EF6610
	0x02EF6680 LDR X8, [X2 + 0x20]
	0x02EF6684 LDR W2, [X0 + 0x18]
	0x02EF6688 MOV X3, X1
	0x02EF668C MOV W1, W31
	0x02EF6690 LDR X8, [X8 + 0xC0]
	0x02EF6694 MOV X4, X31
	0x02EF6698 LDR X5, [X8 + 0xC0]
	0x02EF669C B 0x2EF65E0
	0x02EF66A0 LDR X8, [X3 + 0x20]
	0x02EF66A4 MOV X4, X2

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, X2
	008 Move X20, X1
	009 Move X19, X0
	010 Compare X1, 0
	011 JumpIfNotEqual {14}
	012 Move W0, 34
	013 Call ThrowHelper.ThrowArgumentNullException, X0
	014 Move W22, [X19+24]
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move X8, [X21+32]
	017 Move X23, [X19+16]
	018 Move X8, [X8+192]
	019 Move X0, [X8+456]
	020 Move W8, [X0+309]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {26}
	025 Call 0x1C5D684
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X8, [X21+32]
	031 Move X0, X23
	032 Move W1, W31
	033 Move W2, W22
	034 Move X8, [X8+192]
	035 Move X3, X20
	036 Move X4, [X8+448]
	037 Call 0x2B8E494, X0, X1, X2, X3
	038 Move W8, [X19+28]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Add W8, W8, 1
	042 Move [X19+28], W8
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X30, [X31+48]
	046 Move X23, [X31+56]
	047 Return 

Method: T[] ToArray()

Disassembly:
	0x02EF66A8 LDR W2, [X0 + 0x18]
	0x02EF66AC MOV X3, X1
	0x02EF66B0 LDR X8, [X8 + 0xC0]
	0x02EF66B4 MOV W1, W31
	0x02EF66B8 LDR X5, [X8 + 0xC0]
	0x02EF66BC B 0x2EF65E0
	0x02EF66C0 LDR W8, [X0 + 0x1C]
	0x02EF66C4 ADD W8, W8, 0x1
	0x02EF66C8 STP W31, W8, [X0 + 0x18]
	0x02EF66CC RET
	0x02EF66D0 STR X30, [X31 - 0x10]!
	0x02EF66D4 LDR W3, [X0 + 0x18]
	0x02EF66D8 CBZ W3, 0x2EF670C
	0x02EF66DC LDR X8, [X2 + 0x20]
	0x02EF66E0 LDR X0, [X0 + 0x10]
	0x02EF66E4 MOV W2, W31
	0x02EF66E8 LDR X8, [X8 + 0xC0]
	0x02EF66EC LDR X8, [X8 + 0xD0]
	0x02EF66F0 LDR X8, [X8 + 0x20]
	0x02EF66F4 LDR X8, [X8 + 0xC0]
	0x02EF66F8 LDR X4, [X8 + 0x158]
	0x02EF66FC BL 0x22E7A54
	0x02EF6700 ADDS W31, W0, 0x1
	0x02EF6704 CSET W0, NE
	0x02EF6708 B 0x2EF6710
	0x02EF670C MOV W0, W31
	0x02EF6710 LDR X30, [X31], #0x10
	0x02EF6714 RET
	0x02EF6718 STP X30, X21, [X31 - 0x20]!
	0x02EF671C STP X20, X19, [X31 + 0x10]
	0x02EF6720 LDR X8, [X2 + 0x20]
	0x02EF6724 MOV X19, X2
	0x02EF6728 MOV X20, X1
	0x02EF672C MOV X21, X0
	0x02EF6730 LDR X8, [X8 + 0xC0]
	0x02EF6734 LDR X8, [X8 + 0x10]
	0x02EF6738 LDRB W9, [X8 + 0x135]
	0x02EF673C TBNZ X9, 0x0, 0x2EF674C
	0x02EF6740 MOV X0, X8
	0x02EF6744 BL 0x1C5C684
	0x02EF6748 MOV X8, X0
	0x02EF674C LDR W9, [X8 + 0xE0]
	0x02EF6750 CBNZ W9, 0x2EF675C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X1+32]
	006 Move W21, [X0+24]
	007 Move X8, [X8+192]
	008 Compare W21, 0
	009 JumpIfEqual {29}
	010 Move X20, X0
	011 Move X0, [X8+24]
	012 Move W8, [X0+309]
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {18}
	017 Call 0x1C5D684
	018 Move W1, W21
	019 Call 0x1C17D6C
	020 Move X8, [X20+16]
	021 Move W4, [X20+24]
	022 Move X19, X0
	023 Move W1, W31
	024 Move X0, X8
	025 Move X2, X19
	026 Move W3, W31
	027 Move X5, X31
	028 Call Array.Copy, X0, X1, X2, X3, X4
	029 Move X0, [X8+16]
	030 Move X19, X1
	031 Move W8, [X0+309]
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {37}
	036 Call 0x1C5D684
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X8, [X19+32]
	042 Move X8, [X8+192]
	043 Move X0, [X8+16]
	044 Move W8, [X0+309]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {50}
	049 Call 0x1C5D684
	050 Move X8, [X0+184]
	051 Move X19, [X8]
	052 Move X0, X19
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X30, [X31+32]
	056 Move X21, [X31+40]
	057 Return X0

Method: System.Void AddEnumerable(System.Collections.Generic.IEnumerable`1<T> enumerable)

Disassembly:
	0x02EF6754 MOV X0, X8
	0x02EF6758 BL 0x1C16DFC
	0x02EF675C LDR X8, [X19 + 0x20]
	0x02EF6760 MOV X0, X20
	0x02EF6764 LDR X8, [X8 + 0xC0]
	0x02EF6768 LDR X1, [X8 + 0xD8]
	0x02EF676C BL 0x2EF6120
	0x02EF6770 TBZ X0, 0x0, 0x2EF67D4
	0x02EF6774 LDR X8, [X19 + 0x20]
	0x02EF6778 LDR X8, [X8 + 0xC0]
	0x02EF677C LDR X1, [X8 + 0x48]
	0x02EF6780 LDRB W8, [X1 + 0x135]
	0x02EF6784 TBNZ X8, 0x0, 0x2EF6794
	0x02EF6788 MOV X0, X1
	0x02EF678C BL 0x1C5C684
	0x02EF6790 MOV X1, X0
	0x02EF6794 CBZ X20, 0x2EF67E4
	0x02EF6798 LDR X8, [X20]
	0x02EF679C LDR X9, [X1 + 0x40]
	0x02EF67A0 MOV X0, X20
	0x02EF67A4 LDR X8, [X8 + 0x40]
	0x02EF67A8 CMP X8, X9
	0x02EF67AC B.NE 0x2EF67E8
	0x02EF67B0 BL 0x1C16E08
	0x02EF67B4 LDR X8, [X19 + 0x20]
	0x02EF67B8 LDR X1, [X0]
	0x02EF67BC LDP X20, X19, [X31 + 0x10]
	0x02EF67C0 MOV X0, X21
	0x02EF67C4 LDR X8, [X8 + 0xC0]
	0x02EF67C8 LDR X2, [X8 + 0xE0]
	0x02EF67CC LDP X30, X21, [X31], #0x20
	0x02EF67D0 B 0x2EF66D0
	0x02EF67D4 LDP X20, X19, [X31 + 0x10]
	0x02EF67D8 MOV W0, W31
	0x02EF67DC LDP X30, X21, [X31], #0x20
	0x02EF67E0 RET
	0x02EF67E4 BL 0x1C16F20
	0x02EF67E8 BL 0x1C171E0
	0x02EF67EC LDR X8, [X0 + 0x10]
	0x02EF67F0 LDR W4, [X0 + 0x18]
	0x02EF67F4 MOV X2, X1
	0x02EF67F8 MOV W1, W31
	0x02EF67FC MOV X0, X8
	0x02EF6800 MOV W3, W31
	0x02EF6804 MOV X5, X31
	0x02EF6808 B 0x339FCE8
	0x02EF680C STP X30, X21, [X31 - 0x20]!
	0x02EF6810 STP X20, X19, [X31 + 0x10]
	0x02EF6814 MOV W19, W2
	0x02EF6818 MOV X20, X1
	0x02EF681C MOV X21, X0
	0x02EF6820 CBZ X1, 0x2EF6844
	0x02EF6824 MOV X0, X20
	0x02EF6828 MOV X1, X31
	0x02EF682C BL 0x339FCE4
	0x02EF6830 CMP W0, 0x1
	0x02EF6834 B.EQ 0x2EF6844
	0x02EF6838 MOVZ W0, 0x7
	0x02EF683C MOV X1, X31
	0x02EF6840 BL 0x339DA4C
	0x02EF6844 LDR X0, [X21 + 0x10]
	0x02EF6848 LDR W4, [X21 + 0x18]
	0x02EF684C MOV W1, W31
	0x02EF6850 MOV X2, X20
	0x02EF6854 MOV W3, W19
	0x02EF6858 MOV X5, X31
	0x02EF685C BL 0x339FCE8
	0x02EF6860 LDP X20, X19, [X31 + 0x10]
	0x02EF6864 LDP X30, X21, [X31], #0x20
	0x02EF6868 RET
	0x02EF686C CMP W1, 0x1
	0x02EF6870 MOV X19, X0
	0x02EF6874 B.NE 0x2EF68DC
	0x02EF6878 MOV X0, X19
	0x02EF687C BL 0x3EB1AD0
	0x02EF6880 MOV X19, X0
	0x02EF6884 ADRP X0, 0x1226000
	0x02EF6888 LDR X0, [X0 + 0x320]
	0x02EF688C BL 0x1C16D08
	0x02EF6890 LDR X8, [X19]
	0x02EF6894 LDR X1, [X8]
	0x02EF6898 BL 0x1C17270
	0x02EF689C TBZ X0, 0x0, 0x2EF68B4
	0x02EF68A0 BL 0x3EB1AE0
	0x02EF68A4 LDP X20, X19, [X31 + 0x10]
	0x02EF68A8 MOV X0, X31
	0x02EF68AC LDP X30, X21, [X31], #0x20
	0x02EF68B0 B 0x339E304
	0x02EF68B4 MOVZ W0, 0x8
	0x02EF68B8 BL 0x3EB1AF0
	0x02EF68BC LDR X8, [X19]
	0x02EF68C0 STR X8, [X0]
	0x02EF68C4 ADRP X1, 0xFBE000
	0x02EF68C8 ADD X1, X1, 0xE58
	0x02EF68CC MOV X2, X31
	0x02EF68D0 BL 0x3EB1B00
	0x02EF68D4 MOV X19, X0
	0x02EF68D8 BL 0x3EB1AE0
	0x02EF68DC MOV X0, X19
	0x02EF68E0 BL 0x1D2C690
	0x02EF68E4 BL 0x1990590
	0x02EF68E8 LDR X8, [X0 + 0x10]
	0x02EF68EC LDR W4, [X0 + 0x18]
	0x02EF68F0 MOV W3, W2
	0x02EF68F4 MOV X2, X1
	0x02EF68F8 MOV X0, X8
	0x02EF68FC MOV W1, W31
	0x02EF6900 MOV X5, X31
	0x02EF6904 B 0x339FCE8
	0x02EF6908 STR X30, [X31 - 0x10]!
	0x02EF690C LDR X8, [X0 + 0x10]
	0x02EF6910 CBZ X8, 0x2EF6960
	0x02EF6914 LDR X8, [X8 + 0x18]
	0x02EF6918 CMP W8, W1
	0x02EF691C B.GE 0x2EF6958
	0x02EF6920 LDR X9, [X2 + 0x20]
	0x02EF6924 UBFM W10, W8, 0x1F, 0x1E
	0x02EF6928 MOVN W11, 0x80100000
	0x02EF692C CMP W10, W11
	0x02EF6930 LDR X9, [X9 + 0xC0]
	0x02EF6934 CSEL W10, W10, W11, CC
	0x02EF6938 CMP X8, 0x0
	0x02EF693C MOVZ W8, 0x4
	0x02EF6940 LDR X2, [X9 + 0xF0]
	0x02EF6944 CSEL W8, W8, W10, EQ
	0x02EF6948 CMP W8, W1
	0x02EF694C CSEL W1, W1, W8, LT
	0x02EF6950 LDR X30, [X31], #0x10
	0x02EF6954 B 0x2EF5EE4
	0x02EF6958 LDR X30, [X31], #0x10
	0x02EF695C RET
	0x02EF6960 BL 0x1C16F20
	0x02EF6964 STR X30, [X31 - 0x10]!
	0x02EF6968 LDR X8, [X2 + 0x20]
	0x02EF696C LDR W2, [X0 + 0x18]
	0x02EF6970 MOV X3, X1
	0x02EF6974 MOV W1, W31
	0x02EF6978 LDR X8, [X8 + 0xC0]
	0x02EF697C LDR X8, [X8 + 0x100]
	0x02EF6980 LDR X8, [X8 + 0x20]
	0x02EF6984 LDR X8, [X8 + 0xC0]
	0x02EF6988 LDR X4, [X8 + 0x118]
	0x02EF698C BL 0x2EF6BC8
	0x02EF6990 ADDS W31, W0, 0x1
	0x02EF6994 CSET W0, NE
	0x02EF6998 LDR X30, [X31], #0x10
	0x02EF699C RET
	0x02EF69A0 STP X30, X21, [X31 - 0x20]!
	0x02EF69A4 STP X20, X19, [X31 + 0x10]
	0x02EF69A8 MOV X20, X1
	0x02EF69AC MOV X19, X0
	0x02EF69B0 CBNZ X1, 0x2EF69BC
	0x02EF69B4 MOVZ W0, 0x8
	0x02EF69B8 BL 0x338F3E0
	0x02EF69BC LDR W8, [X19 + 0x18]
	0x02EF69C0 CMP W8, 0x1
	0x02EF69C4 B.LT 0x2EF6A10
	0x02EF69C8 MOV X21, X31
	0x02EF69CC LDR X8, [X19 + 0x10]
	0x02EF69D0 CBZ X8, 0x2EF6A40
	0x02EF69D4 LDR W9, [X8 + 0x18]
	0x02EF69D8 CMP X21, X9
	0x02EF69DC B.CS 0x2EF6A44
	0x02EF69E0 CBZ X20, 0x2EF6A40
	0x02EF69E4 ADD X8, X8, X21, 0x3, LSL
	0x02EF69E8 LDR X9, [X20 + 0x18]
	0x02EF69EC LDR X0, [X20 + 0x40]
	0x02EF69F0 LDR X1, [X8 + 0x20]
	0x02EF69F4 LDR X2, [X20 + 0x28]
	0x02EF69F8 BLR X9
	0x02EF69FC TBNZ X0, 0x0, 0x2EF6A18
	0x02EF6A00 LDRSW X8, [X19 + 0x18]
	0x02EF6A04 ADD X21, X21, 0x1
	0x02EF6A08 CMP X21, X8
	0x02EF6A0C B.LT 0x2EF69CC
	0x02EF6A10 MOV X0, X31
	0x02EF6A14 B 0x2EF6A34
	0x02EF6A18 LDR X8, [X19 + 0x10]
	0x02EF6A1C CBZ X8, 0x2EF6A40
	0x02EF6A20 LDR W9, [X8 + 0x18]
	0x02EF6A24 CMP W21, W9
	0x02EF6A28 B.CS 0x2EF6A44
	0x02EF6A2C ADD X8, X8, X21, 0x3, LSL
	0x02EF6A30 LDR X0, [X8 + 0x20]
	0x02EF6A34 LDP X20, X19, [X31 + 0x10]
	0x02EF6A38 LDP X30, X21, [X31], #0x20
	0x02EF6A3C RET
	0x02EF6A40 BL 0x1C16F20
	0x02EF6A44 BL 0x1C16F28
	0x02EF6A48 STR X30, [X31 - 0x40]!
	0x02EF6A4C STP X24, X23, [X31 + 0x10]
	0x02EF6A50 STP X22, X21, [X31 + 0x20]
	0x02EF6A54 STP X20, X19, [X31 + 0x30]
	0x02EF6A58 MOV X19, X2
	0x02EF6A5C MOV X20, X1
	0x02EF6A60 MOV X21, X0
	0x02EF6A64 CBNZ X1, 0x2EF6A70
	0x02EF6A68 MOVZ W0, 0x8
	0x02EF6A6C BL 0x338F3E0
	0x02EF6A70 LDR X8, [X19 + 0x20]
	0x02EF6A74 LDR X8, [X8 + 0xC0]
	0x02EF6A78 LDR X0, [X8]
	0x02EF6A7C LDRB W8, [X0 + 0x135]
	0x02EF6A80 TBNZ X8, 0x0, 0x2EF6A88
	0x02EF6A84 BL 0x1C5C684
	0x02EF6A88 BL 0x1C16F10
	0x02EF6A8C LDR X8, [X19 + 0x20]
	0x02EF6A90 MOV X22, X0
	0x02EF6A94 LDR X8, [X8 + 0xC0]
	0x02EF6A98 LDR X1, [X8 + 0x110]
	0x02EF6A9C BL 0x2EF5B60
	0x02EF6AA0 LDR W8, [X21 + 0x18]
	0x02EF6AA4 CMP W8, 0x1
	0x02EF6AA8 B.LT 0x2EF6B6C
	0x02EF6AAC MOVZ W23, 0x4
	0x02EF6AB0 LDR X8, [X21 + 0x10]
	0x02EF6AB4 CBZ X8, 0x2EF6B84

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x14E6000
	009 Move W8, [X22+2953]
	010 Move X20, X2
	011 Move X19, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x11FE000
	018 Move X0, [X0+3584]
	019 Call 0x1C17CF4
	020 Move X0, 0x11FE000
	021 Move X0, [X0+3608]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+2953], W8
	025 Move W8, [X21+28]
	026 Add W8, W8, 1
	027 Move [X21+28], W8
	028 Compare X19, 0
	029 JumpIfEqual {185}
	030 Move X8, [X20+32]
	031 Move X8, [X8+192]
	032 Move X1, [X8+32]
	033 Move W8, [X1+309]
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {41}
	038 Move X0, X1
	039 Call 0x1C5D684
	040 Move X1, X0
	041 Move X8, [X19]
	042 NotImplemented "Instruction LDRH not yet implemented."
	043 Compare X9, 0
	044 JumpIfEqual {51}
	045 Move X10, [X8+176]
	046 Add X10, X10, 8
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract X9, X9, 1
	050 Add X10, X10, 16
	051 Move X0, X19
	052 Move W2, W31
	053 Call 0x1C5D788
	054 NotImplemented "Instruction LDRSW not yet implemented."
	055 Add X8, X8, X9
	056 Add X0, X8, 312
	057 Move X8, [X0]
	058 Move X1, [X0+8]
	059 Move X23, 0x11FE000
	060 Move X23, [X23+3584]
	061 Move X0, X19
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move X19, X0
	064 Compare X0, 0
	065 JumpIfEqual {186}
	066 Move X24, 0x11FE000
	067 Move X24, [X24+3608]
	068 Move X8, [X19]
	069 Move X1, [X24]
	070 NotImplemented "Instruction LDRH not yet implemented."
	071 Compare X9, 0
	072 JumpIfEqual {79}
	073 Move X10, [X8+176]
	074 Add X10, X10, 8
	075 NotImplemented "Instruction LDUR not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Subtract X9, X9, 1
	078 Add X10, X10, 16
	079 Move X0, X19
	080 Move W2, W31
	081 Call 0x1C5D788
	082 NotImplemented "Instruction LDRSW not yet implemented."
	083 Add X8, X8, X9
	084 Add X0, X8, 312
	085 Move X8, [X0]
	086 Move X1, [X0+8]
	087 Move X0, X19
	088 NotImplemented "Instruction BLR not yet implemented."
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfNotEqual {148}
	093 Move X8, [X20+32]
	094 Move X8, [X8+192]
	095 Move X1, [X8+328]
	096 Move W8, [X1+309]
	097 Move TEMP, X8
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfEqual {104}
	101 Move X0, X1
	102 Call 0x1C5D684
	103 Move X1, X0
	104 Move X8, [X19]
	105 NotImplemented "Instruction LDRH not yet implemented."
	106 Compare X9, 0
	107 JumpIfEqual {114}
	108 Move X10, [X8+176]
	109 Add X10, X10, 8
	110 NotImplemented "Instruction LDUR not yet implemented."
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Subtract X9, X9, 1
	113 Add X10, X10, 16
	114 Move X0, X19
	115 Move W2, W31
	116 Call 0x1C5D788
	117 NotImplemented "Instruction LDRSW not yet implemented."
	118 Add X8, X8, X9
	119 Add X0, X8, 312
	120 Move X8, [X0]
	121 Move X1, [X0+8]
	122 Move X0, X19
	123 NotImplemented "Instruction BLR not yet implemented."
	124 Move X8, [X21+16]
	125 Compare X8, 0
	126 JumpIfEqual {182}
	127 Move W9, [X21+24]
	128 Move W10, [X8+24]
	129 Move X22, X0
	130 Add W1, W9, 1
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X8, [X20+32]
	133 Move X8, [X8+192]
	134 Move X2, [X8+120]
	135 Move X0, X21
	136 Call 0x2EF4E98, X0, X1
	137 Move W9, [X21+24]
	138 Move X8, [X21+16]
	139 Add W10, W9, 1
	140 Move [X21+24], W10
	141 Compare X8, 0
	142 JumpIfNotEqual {144}
	143 Move [X21+24], W1
	144 Move W10, [X8+24]
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Add X8, X8, W9
	147 Move [X8+32], X22
	148 Move X20, X31
	149 Compare X19, 0
	150 JumpIfEqual {172}
	151 Move X8, [X19]
	152 Move X1, [X23]
	153 NotImplemented "Instruction LDRH not yet implemented."
	154 Compare X9, 0
	155 JumpIfEqual {162}
	156 Move X10, [X8+176]
	157 Add X10, X10, 8
	158 NotImplemented "Instruction LDUR not yet implemented."
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Subtract X9, X9, 1
	161 Add X10, X10, 16
	162 Move X0, X19
	163 Move W2, W31
	164 Call 0x1C5D788
	165 NotImplemented "Instruction LDRSW not yet implemented."
	166 Add X8, X8, X9
	167 Add X0, X8, 312
	168 Move X8, [X0]
	169 Move X1, [X0+8]
	170 Move X0, X19
	171 NotImplemented "Instruction BLR not yet implemented."
	172 Compare X20, 0
	173 JumpIfNotEqual {187}
	174 Move X20, [X31+48]
	175 Move X19, [X31+56]
	176 Move X22, [X31+32]
	177 Move X21, [X31+40]
	178 Move X24, [X31+16]
	179 Move X23, [X31+24]
	180 Move X30, [X31+64]
	181 Return 
	182 Call 0x1C17F20
	183 Call 0x1C17F28
	184 Call 0x1C17F20
	185 Call 0x1C17F20
	186 Call 0x1C17F20
	187 Move X0, X20
	188 Call 0x1C17F18
	189 Move X21, X0
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Move X0, X21
	192 Call 0x3EB2AD0
	193 Move X20, [X0]
	194 Call 0x3EB2AE0
	195 Move X20, X31
	196 Move X21, X0
	197 Compare X19, 0
	198 JumpIfEqual {220}
	199 Move X8, [X19]
	200 Move X1, [X23]
	201 NotImplemented "Instruction LDRH not yet implemented."
	202 Compare X9, 0
	203 JumpIfEqual {210}
	204 Move X10, [X8+176]
	205 Add X10, X10, 8
	206 NotImplemented "Instruction LDUR not yet implemented."
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Subtract X9, X9, 1
	209 Add X10, X10, 16
	210 Move X0, X19
	211 Move W2, W31
	212 Call 0x1C5D788
	213 NotImplemented "Instruction LDRSW not yet implemented."
	214 Add X8, X8, X9
	215 Add X0, X8, 312
	216 Move X8, [X0]
	217 Move X1, [X0+8]
	218 Move X0, X19
	219 NotImplemented "Instruction BLR not yet implemented."
	220 Compare X20, 0
	221 JumpIfNotEqual {224}
	222 Move X0, X21
	223 Call 0x1D2D690
	224 Move X0, X20
	225 Call 0x1C17F18
	226 Call 0x1991590

Method: System.Void .cctor()

Disassembly:
	0x02EF6AB8 LDR W9, [X8 + 0x18]
	0x02EF6ABC SUB X24, X23, 0x4
	0x02EF6AC0 CMP X24, X9
	0x02EF6AC4 B.CS 0x2EF6B88
	0x02EF6AC8 CBZ X20, 0x2EF6B84
	0x02EF6ACC LDR X1, [X8, X23, LSL #3]
	0x02EF6AD0 LDR X8, [X20 + 0x18]
	0x02EF6AD4 LDR X0, [X20 + 0x40]
	0x02EF6AD8 LDR X2, [X20 + 0x28]
	0x02EF6ADC BLR X8
	0x02EF6AE0 TBZ X0, 0x0, 0x2EF6B58
	0x02EF6AE4 LDR X8, [X21 + 0x10]
	0x02EF6AE8 CBZ X8, 0x2EF6B84
	0x02EF6AEC LDR W9, [X8 + 0x18]
	0x02EF6AF0 CMP X24, X9
	0x02EF6AF4 B.CS 0x2EF6B88
	0x02EF6AF8 CBZ X22, 0x2EF6B84
	0x02EF6AFC LDR X9, [X19 + 0x20]
	0x02EF6B00 LDR W10, [X22 + 0x1C]
	0x02EF6B04 LDR X1, [X8, X23, LSL #3]
	0x02EF6B08 LDR X8, [X22 + 0x10]
	0x02EF6B0C LDR X9, [X9 + 0xC0]
	0x02EF6B10 ADD W10, W10, 0x1
	0x02EF6B14 LDR X9, [X9 + 0x80]
	0x02EF6B18 STR W10, [X22 + 0x1C]
	0x02EF6B1C CBZ X8, 0x2EF6B84
	0x02EF6B20 LDRSW X10, [X22 + 0x18]
	0x02EF6B24 LDR W11, [X8 + 0x18]
	0x02EF6B28 CMP W10, W11
	0x02EF6B2C B.CS 0x2EF6B44
	0x02EF6B30 ADD W9, W10, 0x1
	0x02EF6B34 ADD X8, X8, X10, 0x3, LSL
	0x02EF6B38 STR W9, [X22 + 0x18]
	0x02EF6B3C STR X1, [X8 + 0x20]
	0x02EF6B40 B 0x2EF6B58
	0x02EF6B44 LDR X8, [X9 + 0x20]
	0x02EF6B48 MOV X0, X22
	0x02EF6B4C LDR X8, [X8 + 0xC0]
	0x02EF6B50 LDR X2, [X8 + 0x70]
	0x02EF6B54 BL 0x2EF6358
	0x02EF6B58 LDRSW X8, [X21 + 0x18]
	0x02EF6B5C SUB X9, X23, 0x3

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+32]
	006 Move W8, [X0+309]
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {12}
	011 Call 0x1C5D684
	012 Move X8, [X0+192]
	013 Move X0, [X8+24]
	014 Move W8, [X0+309]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {20}
	019 Call 0x1C5D684
	020 Move W1, W31
	021 Call 0x1C17D6C
	022 Move X8, [X19+32]
	023 Move X20, X0
	024 Move W9, [X8+309]
	025 Move TEMP, X9
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {32}
	029 Move X0, X8
	030 Call 0x1C5D684
	031 Move X8, X0
	032 Move X8, [X8+192]
	033 Move X0, [X8+16]
	034 Move W8, [X0+309]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {40}
	039 Call 0x1C5D684
	040 Move X8, [X0+184]
	041 Move [X8], X20
	042 Move X0, [X19+32]
	043 Move W8, [X0+309]
	044 Move TEMP, X8
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {49}
	048 Call 0x1C5D684
	049 Move X8, [X0+192]
	050 Move X0, [X8+16]
	051 Move W8, [X0+309]
	052 Move TEMP, X8
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {61}
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X30, [X31+32]
	059 Call 0x1C5D684
	060 Return 
	061 Move X20, [X31+16]
	062 Move X19, [X31+24]
	063 Move X30, [X31+32]
	064 Return 

