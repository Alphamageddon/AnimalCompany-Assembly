Type: System.Collections.Generic.ArraySortHelper`1

Method: System.Void Sort(T[] keys, System.Int32 index, System.Int32 length, System.Collections.Generic.IComparer`1<T> comparer)

Disassembly:
	0x02B8E0B0 MOV X21, X5
	0x02B8E0B4 MOV X22, X4
	0x02B8E0B8 STR W3, [X31 + 0x4]
	0x02B8E0BC UBFM W25, W23, 0x1F, 0x1E
	0x02B8E0C0 CMP W25, W24
	0x02B8E0C4 B.GE 0x2B8E128
	0x02B8E0C8 LDR W8, [X31 + 0x4]
	0x02B8E0CC LDR W10, [X19 + 0x18]
	0x02B8E0D0 ADD W8, W25, W8
	0x02B8E0D4 SUB W9, W8, 0x1
	0x02B8E0D8 CMP W9, W10
	0x02B8E0DC B.CS 0x2B8E1E0
	0x02B8E0E0 CMP W8, W10
	0x02B8E0E4 B.CS 0x2B8E1E0
	0x02B8E0E8 CBZ X22, 0x2B8E1E4
	0x02B8E0EC LDR X0, [X21 + 0x20]
	0x02B8E0F0 ADD X9, X19, W9, 0x3, SXTW
	0x02B8E0F4 ADD X8, X19, W8, 0x3, SXTW
	0x02B8E0F8 LDR X26, [X9 + 0x20]
	0x02B8E0FC LDRB W9, [X0 + 0x135]
	0x02B8E100 LDR X27, [X8 + 0x20]
	0x02B8E104 TBNZ X9, 0x0, 0x2B8E10C
	0x02B8E108 BL 0x1C5C684
	0x02B8E10C LDR X8, [X22 + 0x18]
	0x02B8E110 LDR X0, [X22 + 0x40]
	0x02B8E114 LDR X3, [X22 + 0x28]
	0x02B8E118 MOV X1, X26
	0x02B8E11C MOV X2, X27
	0x02B8E120 BLR X8
	0x02B8E124 ORR W25, W25, W0, 0x1F
	0x02B8E128 LDR W8, [X19 + 0x18]
	0x02B8E12C ADD W27, W28, W25
	0x02B8E130 CMP W27, W8
	0x02B8E134 B.CS 0x2B8E1E0
	0x02B8E138 ADD X20, X19, W27, 0x3, SXTW
	0x02B8E13C LDR X26, [X20 + 0x20]!
	0x02B8E140 CBZ X22, 0x2B8E1E4
	0x02B8E144 LDR X0, [X21 + 0x20]
	0x02B8E148 LDRB W8, [X0 + 0x135]
	0x02B8E14C TBNZ X8, 0x0, 0x2B8E154
	0x02B8E150 BL 0x1C5C684
	0x02B8E154 LDR X8, [X22 + 0x18]
	0x02B8E158 LDR X0, [X22 + 0x40]
	0x02B8E15C LDR X3, [X22 + 0x28]
	0x02B8E160 LDR X1, [X31 + 0x8]
	0x02B8E164 MOV X2, X26
	0x02B8E168 BLR X8
	0x02B8E16C TBZ X0, 0x1F, 0x2B8E1A4
	0x02B8E170 LDR W8, [X19 + 0x18]
	0x02B8E174 CMP W27, W8
	0x02B8E178 B.CS 0x2B8E1E0
	0x02B8E17C ADD W9, W28, W23
	0x02B8E180 CMP W9, W8
	0x02B8E184 B.CS 0x2B8E1E0
	0x02B8E188 LDR X8, [X20]
	0x02B8E18C ADD X9, X19, W9, 0x3, SXTW
	0x02B8E190 CMP W25, W29
	0x02B8E194 MOV W23, W25
	0x02B8E198 STR X8, [X9 + 0x20]
	0x02B8E19C B.LE 0x2B8E0BC
	0x02B8E1A0 B 0x2B8E1A8
	0x02B8E1A4 ADD W27, W28, W23
	0x02B8E1A8 LDR W8, [X19 + 0x18]
	0x02B8E1AC CMP W27, W8
	0x02B8E1B0 B.CS 0x2B8E1E0
	0x02B8E1B4 LDR X9, [X31 + 0x8]
	0x02B8E1B8 ADD X8, X19, W27, 0x3, SXTW
	0x02B8E1BC LDP X20, X19, [X31 + 0x60]
	0x02B8E1C0 LDP X22, X21, [X31 + 0x50]
	0x02B8E1C4 LDP X24, X23, [X31 + 0x40]
	0x02B8E1C8 LDP X26, X25, [X31 + 0x30]
	0x02B8E1CC LDP X28, X27, [X31 + 0x20]
	0x02B8E1D0 LDP X29, X30, [X31 + 0x10]
	0x02B8E1D4 STR X9, [X8 + 0x20]
	0x02B8E1D8 ADD X31, X31, 0x70
	0x02B8E1DC RET
	0x02B8E1E0 BL 0x1C16F28
	0x02B8E1E4 BL 0x1C16F20
	0x02B8E1E8 STP X29, X30, [X31 - 0x60]!
	0x02B8E1EC STP X28, X27, [X31 + 0x10]
	0x02B8E1F0 STP X26, X25, [X31 + 0x20]
	0x02B8E1F4 STP X24, X23, [X31 + 0x30]
	0x02B8E1F8 STP X22, X21, [X31 + 0x40]
	0x02B8E1FC STP X20, X19, [X31 + 0x50]
	0x02B8E200 CMP W1, W2
	0x02B8E204 B.GE 0x2B8E2EC
	0x02B8E208 MOV X22, X0
	0x02B8E20C CBZ X0, 0x2B8E30C
	0x02B8E210 MOV W21, W1
	0x02B8E214 SXTW X25, W21
	0x02B8E218 MOV X19, X4
	0x02B8E21C MOV X20, X3
	0x02B8E220 SXTW X26, W2
	0x02B8E224 MOV X28, X25
	0x02B8E228 LDR X8, [X22 + 0x18]
	0x02B8E22C ADD X27, X28, 0x1
	0x02B8E230 CMP W27, W8
	0x02B8E234 B.CS 0x2B8E308
	0x02B8E238 ADD X9, X22, X27, 0x3, LSL
	0x02B8E23C LDR X23, [X9 + 0x20]
	0x02B8E240 CMP X28, X25
	0x02B8E244 B.LT 0x2B8E2CC
	0x02B8E248 CMP W28, W8
	0x02B8E24C B.CS 0x2B8E308
	0x02B8E250 ADD X29, X22, W28, 0x3, SXTW
	0x02B8E254 LDR X24, [X29 + 0x20]!
	0x02B8E258 CBZ X20, 0x2B8E30C
	0x02B8E25C LDR X0, [X19 + 0x20]
	0x02B8E260 LDRB W8, [X0 + 0x135]
	0x02B8E264 TBNZ X8, 0x0, 0x2B8E26C
	0x02B8E268 BL 0x1C5C684
	0x02B8E26C LDR X8, [X20 + 0x18]
	0x02B8E270 LDR X0, [X20 + 0x40]
	0x02B8E274 LDR X3, [X20 + 0x28]
	0x02B8E278 MOV X1, X23
	0x02B8E27C MOV X2, X24
	0x02B8E280 BLR X8
	0x02B8E284 TBZ X0, 0x1F, 0x2B8E2C8
	0x02B8E288 LDR W8, [X22 + 0x18]
	0x02B8E28C CMP W28, W8
	0x02B8E290 B.CS 0x2B8E308
	0x02B8E294 ADD W9, W28, 0x1
	0x02B8E298 CMP W9, W8
	0x02B8E29C B.CS 0x2B8E308
	0x02B8E2A0 LDR X8, [X29]
	0x02B8E2A4 SUB W28, W28, 0x1
	0x02B8E2A8 ADD X9, X22, W9, 0x3, SXTW
	0x02B8E2AC CMP W28, W21
	0x02B8E2B0 STR X8, [X9 + 0x20]
	0x02B8E2B4 B.LT 0x2B8E2C8
	0x02B8E2B8 LDR W8, [X22 + 0x18]
	0x02B8E2BC CMP W28, W8
	0x02B8E2C0 B.CC 0x2B8E250
	0x02B8E2C4 B 0x2B8E308
	0x02B8E2C8 LDR W8, [X22 + 0x18]
	0x02B8E2CC ADD W9, W28, 0x1
	0x02B8E2D0 CMP W9, W8
	0x02B8E2D4 B.CS 0x2B8E308
	0x02B8E2D8 ADD X8, X22, W9, 0x3, SXTW
	0x02B8E2DC CMP X27, X26
	0x02B8E2E0 MOV X28, X27
	0x02B8E2E4 STR X23, [X8 + 0x20]
	0x02B8E2E8 B.NE 0x2B8E228
	0x02B8E2EC LDP X20, X19, [X31 + 0x50]
	0x02B8E2F0 LDP X22, X21, [X31 + 0x40]
	0x02B8E2F4 LDP X24, X23, [X31 + 0x30]
	0x02B8E2F8 LDP X26, X25, [X31 + 0x20]
	0x02B8E2FC LDP X28, X27, [X31 + 0x10]
	0x02B8E300 LDP X29, X30, [X31], #0x60
	0x02B8E304 RET
	0x02B8E308 BL 0x1C16F28
	0x02B8E30C BL 0x1C16F20
	0x02B8E310 STP X30, X19, [X31 - 0x10]!

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, X5
	009 Move X20, X4
	010 Move W21, W3
	011 Move W22, W2
	012 Move X23, X1
	013 Compare X4, 0
	014 JumpIfNotEqual {20}
	015 Move X8, [X19+32]
	016 Move X8, [X8+192]
	017 Move X0, [X8+8]
	018 Call 0x2901278
	019 Move X20, X0
	020 Move X8, [X19+32]
	021 Move X8, [X8+192]
	022 Move X0, [X8+48]
	023 Move W8, [X0+309]
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {29}
	028 Call 0x1C5D684
	029 Call 0x1C17F10
	030 Move X8, [X19+32]
	031 Move X24, X0
	032 Move X8, [X8+192]
	033 Move X1, [X8]
	034 Move W8, [X1+309]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {42}
	039 Move X0, X1
	040 Call 0x1C5D684
	041 Move X1, X0
	042 Compare X20, 0
	043 JumpIfEqual {96}
	044 Move X8, [X20]
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 Compare X9, 0
	047 JumpIfEqual {54}
	048 Move X10, [X8+176]
	049 Add X10, X10, 8
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Subtract X9, X9, 1
	053 Add X10, X10, 16
	054 Move X0, X20
	055 Move W2, W31
	056 Call 0x1C5D788
	057 NotImplemented "Instruction LDRSW not yet implemented."
	058 Add X8, X8, X9
	059 Add X0, X8, 312
	060 Move X8, [X19+32]
	061 Move X2, [X0+8]
	062 Move X8, [X8+192]
	063 Move X3, [X8+56]
	064 Move X0, X24
	065 Move X1, X20
	066 Call 0x2956F74, X0, X1, X2
	067 Move X8, [X19+32]
	068 Move X8, [X8+192]
	069 Move X0, [X8+72]
	070 Move W8, [X0+309]
	071 Move TEMP, X8
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfEqual {76}
	075 Call 0x1C5D684
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 Move X8, [X19+32]
	081 Move X8, [X8+192]
	082 Move X4, [X8+64]
	083 Move X0, X23
	084 Move W1, W22
	085 Move W2, W21
	086 Move X3, X24
	087 Call 0x2B8E898, X0, X1, X2, X3
	088 Move X20, [X31+48]
	089 Move X19, [X31+56]
	090 Move X22, [X31+32]
	091 Move X21, [X31+40]
	092 Move X24, [X31+16]
	093 Move X23, [X31+24]
	094 Move X30, [X31+64]
	095 Return 
	096 Call 0x1C17F20
	097 Move X21, X0
	098 Move X20, X31
	099 Move X21, X0
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X0, X21
	102 Call 0x3EB2AD0
	103 Move X21, X0
	104 Move X0, 0x1570000
	105 Move X0, [X0+3960]
	106 Call 0x1C17D08
	107 Move X8, [X21]
	108 Move X1, [X8]
	109 Call 0x1C18270
	110 Move TEMP, X0
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfNotEqual {126}
	114 Call 0x3EB2AE0
	115 Move X0, X20
	116 Move X20, [X31+48]
	117 Move X19, [X31+56]
	118 Move X22, [X31+32]
	119 Move X21, [X31+40]
	120 Move X24, [X31+16]
	121 Move X23, [X31+24]
	122 Move X1, X31
	123 Move X30, [X31+64]
	124 Call IntrospectiveSortUtilities.ThrowOrIgnoreBadComparer, X0
	125 Return 
	126 Move X0, 0x158F000
	127 Move X0, [X0+3000]
	128 Call 0x1C17D08
	129 Move X8, [X21]
	130 Move X1, [X8]
	131 Call 0x1C18270
	132 Move TEMP, X0
	133 And TEMP, TEMP, 1
	134 Compare TEMP, 1
	135 JumpIfNotEqual {140}
	136 Move X19, [X21]
	137 Call 0x3EB2AE0
	138 Move X0, X19
	139 Call 0x1C17F18
	140 Move X0, 0x1566000
	141 Move X0, [X0+2000]
	142 Call 0x1C17D08
	143 Move X8, [X21]
	144 Move X1, [X8]
	145 Call 0x1C18270
	146 Move TEMP, X0
	147 And TEMP, TEMP, 1
	148 Compare TEMP, 1
	149 JumpIfNotEqual {168}
	150 Move X20, [X21]
	151 Call 0x3EB2AE0
	152 Move X0, 0x1566000
	153 Move X0, [X0+1456]
	154 Call 0x1C17D08
	155 Call 0x1C17F10
	156 Move X21, X0
	157 Move X0, 0x158F000
	158 Move X0, [X0+3008]
	159 Call 0x1C17D08
	160 Move X1, X0
	161 Move X0, X21
	162 Move X2, X20
	163 Move X3, X31
	164 Call InvalidOperationException..ctor, X0, X1, X2
	165 Move X0, X21
	166 Move X1, X19
	167 Call 0x1C17DEC
	168 Move W0, 8
	169 Call 0x3EB2AF0
	170 Move X8, [X21]
	171 Move [X0], X8
	172 Move X1, 0x1327000
	173 Add X1, X1, 3672
	174 Move X2, X31
	175 Call 0x3EB2B00
	176 Move X21, X0
	177 Call 0x3EB2AE0
	178 Move X0, X21
	179 Call 0x1D2D690
	180 Call 0x1991590

Method: System.Int32 BinarySearch(T[] array, System.Int32 index, System.Int32 length, T value, System.Collections.Generic.IComparer`1<T> comparer)

Disassembly:
	0x02B8E314 MOV X19, X0
	0x02B8E318 LDR X0, [X0 + 0x20]
	0x02B8E31C LDRB W8, [X0 + 0x135]
	0x02B8E320 TBNZ X8, 0x0, 0x2B8E328
	0x02B8E324 BL 0x1C5C684
	0x02B8E328 LDR X8, [X0 + 0xC0]
	0x02B8E32C LDR X0, [X8 + 0x48]
	0x02B8E330 LDRB W8, [X0 + 0x135]
	0x02B8E334 TBNZ X8, 0x0, 0x2B8E33C
	0x02B8E338 BL 0x1C5C684
	0x02B8E33C LDR W8, [X0 + 0xE0]
	0x02B8E340 CBNZ W8, 0x2B8E348
	0x02B8E344 BL 0x1C16DFC
	0x02B8E348 LDR X0, [X19 + 0x20]
	0x02B8E34C LDRB W8, [X0 + 0x135]
	0x02B8E350 TBNZ X8, 0x0, 0x2B8E358
	0x02B8E354 BL 0x1C5C684
	0x02B8E358 LDR X8, [X0 + 0xC0]
	0x02B8E35C LDR X0, [X8 + 0x48]
	0x02B8E360 LDRB W8, [X0 + 0x135]
	0x02B8E364 TBNZ X8, 0x0, 0x2B8E36C
	0x02B8E368 BL 0x1C5C684
	0x02B8E36C LDR X8, [X0 + 0xB8]
	0x02B8E370 LDR X0, [X8]
	0x02B8E374 LDP X30, X19, [X31], #0x10
	0x02B8E378 RET
	0x02B8E37C MOV X1, X31
	0x02B8E380 B 0x33BDD8C
	0x02B8E384 STR X30, [X31 - 0x20]!
	0x02B8E388 STP X20, X19, [X31 + 0x10]
	0x02B8E38C MOV X19, X0
	0x02B8E390 LDR X0, [X0 + 0x20]
	0x02B8E394 LDRB W8, [X0 + 0x135]
	0x02B8E398 TBNZ X8, 0x0, 0x2B8E3A0
	0x02B8E39C BL 0x1C5C684
	0x02B8E3A0 LDR X8, [X0 + 0xC0]
	0x02B8E3A4 LDR X0, [X8 + 0xA0]
	0x02B8E3A8 LDRB W8, [X0 + 0x135]
	0x02B8E3AC TBNZ X8, 0x0, 0x2B8E3B4
	0x02B8E3B0 BL 0x1C5C684
	0x02B8E3B4 BL 0x1C16F10
	0x02B8E3B8 LDR X8, [X19 + 0x20]
	0x02B8E3BC MOV X20, X0
	0x02B8E3C0 LDRB W9, [X8 + 0x135]
	0x02B8E3C4 TBNZ X9, 0x0, 0x2B8E3D0
	0x02B8E3C8 MOV X0, X8
	0x02B8E3CC BL 0x1C5C684
	0x02B8E3D0 MOV X0, X20
	0x02B8E3D4 MOV X1, X31
	0x02B8E3D8 BL 0x33BDD8C
	0x02B8E3DC LDR X0, [X19 + 0x20]
	0x02B8E3E0 LDRB W8, [X0 + 0x135]
	0x02B8E3E4 TBNZ X8, 0x0, 0x2B8E3EC
	0x02B8E3E8 BL 0x1C5C684
	0x02B8E3EC LDR X8, [X0 + 0xC0]
	0x02B8E3F0 LDR X0, [X8 + 0x48]
	0x02B8E3F4 LDRB W8, [X0 + 0x135]
	0x02B8E3F8 TBNZ X8, 0x0, 0x2B8E400
	0x02B8E3FC BL 0x1C5C684
	0x02B8E400 LDR X8, [X0 + 0xB8]
	0x02B8E404 STR X20, [X8]
	0x02B8E408 LDR X0, [X19 + 0x20]
	0x02B8E40C LDRB W8, [X0 + 0x135]
	0x02B8E410 TBNZ X8, 0x0, 0x2B8E418
	0x02B8E414 BL 0x1C5C684
	0x02B8E418 LDR X8, [X0 + 0xC0]
	0x02B8E41C LDR X0, [X8 + 0x48]
	0x02B8E420 LDRB W8, [X0 + 0x135]
	0x02B8E424 TBNZ X8, 0x0, 0x2B8E434
	0x02B8E428 LDP X20, X19, [X31 + 0x10]
	0x02B8E42C LDR X30, [X31], #0x20
	0x02B8E430 B 0x1C5C684
	0x02B8E434 LDP X20, X19, [X31 + 0x10]
	0x02B8E438 LDR X30, [X31], #0x20
	0x02B8E43C RET
	0x02B8E440 STR X30, [X31 - 0x40]!
	0x02B8E444 STP X24, X23, [X31 + 0x10]
	0x02B8E448 STP X22, X21, [X31 + 0x20]
	0x02B8E44C STP X20, X19, [X31 + 0x30]
	0x02B8E450 MOV X19, X5
	0x02B8E454 MOV X20, X4
	0x02B8E458 MOV W21, W3
	0x02B8E45C MOV W22, W2
	0x02B8E460 MOV X23, X1
	0x02B8E464 CBNZ X4, 0x2B8E47C
	0x02B8E468 LDR X8, [X19 + 0x20]
	0x02B8E46C LDR X8, [X8 + 0xC0]
	0x02B8E470 LDR X0, [X8 + 0x8]
	0x02B8E474 BL 0x2900890
	0x02B8E478 MOV X20, X0
	0x02B8E47C LDR X8, [X19 + 0x20]
	0x02B8E480 LDR X8, [X8 + 0xC0]
	0x02B8E484 LDR X0, [X8 + 0x30]
	0x02B8E488 LDRB W8, [X0 + 0x135]
	0x02B8E48C TBNZ X8, 0x0, 0x2B8E494
	0x02B8E490 BL 0x1C5C684

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, X6
	009 Move X24, X5
	010 Move X20, X4
	011 Move W21, W3
	012 Move W22, W2
	013 Move X23, X1
	014 Compare X5, 0
	015 JumpIfNotEqual {21}
	016 Move X8, [X19+32]
	017 Move X8, [X8+192]
	018 Move X0, [X8+8]
	019 Call 0x2901278
	020 Move X24, X0
	021 Move X8, [X19+32]
	022 Move X8, [X8+192]
	023 Move X0, [X8+72]
	024 Move W8, [X0+309]
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {30}
	029 Call 0x1C5D684
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X8, [X19+32]
	035 Move X8, [X8+192]
	036 Move X5, [X8+88]
	037 Move X0, X23
	038 Move W1, W22
	039 Move W2, W21
	040 Move X3, X20
	041 Move X4, X24
	042 Call 0x2B8E63C, X0, X1, X2, X3, X4
	043 Move X20, [X31+48]
	044 Move X19, [X31+56]
	045 Move X22, [X31+32]
	046 Move X21, [X31+40]
	047 Move X24, [X31+16]
	048 Move X23, [X31+24]
	049 Move X30, [X31+64]
	050 Return X0
	051 Move X20, X0
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X0, X20
	054 Call 0x3EB2AD0
	055 Move X20, X0
	056 Move X0, 0x158F000
	057 Move X0, [X0+3000]
	058 Call 0x1C17D08
	059 Move X8, [X20]
	060 Move X1, [X8]
	061 Call 0x1C18270
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {70}
	066 Move X19, [X20]
	067 Call 0x3EB2AE0
	068 Move X0, X19
	069 Call 0x1C17F18
	070 Move X0, 0x1566000
	071 Move X0, [X0+2000]
	072 Call 0x1C17D08
	073 Move X8, [X20]
	074 Move X1, [X8]
	075 Call 0x1C18270
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {98}
	080 Move X20, [X20]
	081 Call 0x3EB2AE0
	082 Move X0, 0x1566000
	083 Move X0, [X0+1456]
	084 Call 0x1C17D08
	085 Call 0x1C17F10
	086 Move X21, X0
	087 Move X0, 0x158F000
	088 Move X0, [X0+3008]
	089 Call 0x1C17D08
	090 Move X1, X0
	091 Move X0, X21
	092 Move X2, X20
	093 Move X3, X31
	094 Call InvalidOperationException..ctor, X0, X1, X2
	095 Move X0, X21
	096 Move X1, X19
	097 Call 0x1C17DEC
	098 Move W0, 8
	099 Call 0x3EB2AF0
	100 Move X8, [X20]
	101 Move [X0], X8
	102 Move X1, 0x1327000
	103 Add X1, X1, 3672
	104 Move X2, X31
	105 Call 0x3EB2B00
	106 Move X20, X0
	107 Call 0x3EB2AE0
	108 Move X0, X20
	109 Call 0x1D2D690
	110 Call 0x1991590

Method: System.Void Sort(T[] keys, System.Int32 index, System.Int32 length, System.Comparison`1<T> comparer)

Disassembly:
	0x02B8E494 BL 0x1C16F10
	0x02B8E498 LDR X8, [X19 + 0x20]
	0x02B8E49C MOV X24, X0
	0x02B8E4A0 LDR X8, [X8 + 0xC0]
	0x02B8E4A4 LDR X1, [X8]
	0x02B8E4A8 LDRB W8, [X1 + 0x135]
	0x02B8E4AC TBNZ X8, 0x0, 0x2B8E4BC
	0x02B8E4B0 MOV X0, X1
	0x02B8E4B4 BL 0x1C5C684
	0x02B8E4B8 MOV X1, X0
	0x02B8E4BC CBZ X20, 0x2B8E57C
	0x02B8E4C0 LDR X8, [X20]
	0x02B8E4C4 LDRH W9, [X8 + 0x12E]
	0x02B8E4C8 CBZ X9, 0x2B8E4EC
	0x02B8E4CC LDR X10, [X8 + 0xB0]
	0x02B8E4D0 ADD X10, X10, 0x8
	0x02B8E4D4 LDUR X11, [X10 - 0x8]
	0x02B8E4D8 CMP X11, X1
	0x02B8E4DC B.EQ 0x2B8E4FC
	0x02B8E4E0 SUBS X9, X9, 0x1
	0x02B8E4E4 ADD X10, X10, 0x10
	0x02B8E4E8 B.NE 0x2B8E4D4
	0x02B8E4EC MOV X0, X20
	0x02B8E4F0 MOV W2, W31
	0x02B8E4F4 BL 0x1C5C788
	0x02B8E4F8 B 0x2B8E508
	0x02B8E4FC LDRSW X9, [X10]
	0x02B8E500 ADD X8, X8, X9, 0x4, LSL
	0x02B8E504 ADD X0, X8, 0x138
	0x02B8E508 LDR X8, [X19 + 0x20]
	0x02B8E50C LDR X2, [X0 + 0x8]
	0x02B8E510 LDR X8, [X8 + 0xC0]
	0x02B8E514 LDR X3, [X8 + 0x38]
	0x02B8E518 MOV X0, X24
	0x02B8E51C MOV X1, X20
	0x02B8E520 BL 0x2956014
	0x02B8E524 LDR X8, [X19 + 0x20]
	0x02B8E528 LDR X8, [X8 + 0xC0]
	0x02B8E52C LDR X0, [X8 + 0x48]
	0x02B8E530 LDRB W8, [X0 + 0x135]
	0x02B8E534 TBNZ X8, 0x0, 0x2B8E53C
	0x02B8E538 BL 0x1C5C684
	0x02B8E53C LDR W8, [X0 + 0xE0]
	0x02B8E540 CBNZ W8, 0x2B8E548
	0x02B8E544 BL 0x1C16DFC
	0x02B8E548 LDR X8, [X19 + 0x20]
	0x02B8E54C LDR X8, [X8 + 0xC0]
	0x02B8E550 LDR X4, [X8 + 0x40]
	0x02B8E554 MOV X0, X23
	0x02B8E558 MOV W1, W22
	0x02B8E55C MOV W2, W21
	0x02B8E560 MOV X3, X24
	0x02B8E564 BL 0x2B8EC28
	0x02B8E568 LDP X20, X19, [X31 + 0x30]
	0x02B8E56C LDP X22, X21, [X31 + 0x20]
	0x02B8E570 LDP X24, X23, [X31 + 0x10]
	0x02B8E574 LDR X30, [X31], #0x40
	0x02B8E578 RET
	0x02B8E57C BL 0x1C16F20
	0x02B8E580 MOV X21, X0
	0x02B8E584 MOV X20, X31
	0x02B8E588 B 0x2B8E590
	0x02B8E58C MOV X21, X0
	0x02B8E590 CMP W1, 0x1
	0x02B8E594 B.NE 0x2B8E698
	0x02B8E598 MOV X0, X21
	0x02B8E59C BL 0x3EB1AD0
	0x02B8E5A0 MOV X21, X0
	0x02B8E5A4 ADRP X0, 0x156F000
	0x02B8E5A8 LDR X0, [X0 + 0xF78]
	0x02B8E5AC BL 0x1C16D08
	0x02B8E5B0 LDR X8, [X21]
	0x02B8E5B4 LDR X1, [X8]
	0x02B8E5B8 BL 0x1C17270
	0x02B8E5BC TBZ X0, 0x0, 0x2B8E5E0
	0x02B8E5C0 BL 0x3EB1AE0
	0x02B8E5C4 MOV X0, X20
	0x02B8E5C8 LDP X20, X19, [X31 + 0x30]
	0x02B8E5CC LDP X22, X21, [X31 + 0x20]
	0x02B8E5D0 LDP X24, X23, [X31 + 0x10]
	0x02B8E5D4 MOV X1, X31
	0x02B8E5D8 LDR X30, [X31], #0x40
	0x02B8E5DC B 0x335DD1C
	0x02B8E5E0 ADRP X0, 0x158E000
	0x02B8E5E4 LDR X0, [X0 + 0xBB8]
	0x02B8E5E8 BL 0x1C16D08
	0x02B8E5EC LDR X8, [X21]
	0x02B8E5F0 LDR X1, [X8]
	0x02B8E5F4 BL 0x1C17270
	0x02B8E5F8 TBZ X0, 0x0, 0x2B8E60C
	0x02B8E5FC LDR X19, [X21]
	0x02B8E600 BL 0x3EB1AE0
	0x02B8E604 MOV X0, X19
	0x02B8E608 BL 0x1C16F18
	0x02B8E60C ADRP X0, 0x1565000
	0x02B8E610 LDR X0, [X0 + 0x7D0]
	0x02B8E614 BL 0x1C16D08
	0x02B8E618 LDR X8, [X21]
	0x02B8E61C LDR X1, [X8]
	0x02B8E620 BL 0x1C17270
	0x02B8E624 TBZ X0, 0x0, 0x2B8E670
	0x02B8E628 LDR X20, [X21]
	0x02B8E62C BL 0x3EB1AE0
	0x02B8E630 ADRP X0, 0x1565000
	0x02B8E634 LDR X0, [X0 + 0x5B0]
	0x02B8E638 BL 0x1C16D08

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X4+32]
	008 Move X19, X4
	009 Move X20, X3
	010 Move W21, W2
	011 Move W9, [X8+309]
	012 Move W22, W1
	013 Move X23, X0
	014 Move TEMP, X9
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {21}
	018 Move X0, X8
	019 Call 0x1C5D684
	020 Move X8, X0
	021 Move X8, [X8+192]
	022 Move X0, [X8+72]
	023 Move W8, [X0+309]
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {29}
	028 Call 0x1C5D684
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, [X19+32]
	034 Move W8, [X0+309]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {40}
	039 Call 0x1C5D684
	040 Move X8, [X0+192]
	041 Move X4, [X8+64]
	042 Move X0, X23
	043 Move W1, W22
	044 Move W2, W21
	045 Move X3, X20
	046 Call 0x2B8E898, X0, X1, X2, X3
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move X30, [X31+48]
	052 Move X23, [X31+56]
	053 Return 
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X21, X0
	056 Move X0, X21
	057 Call 0x3EB2AD0
	058 Move X21, X0
	059 Move X0, 0x1570000
	060 Move X0, [X0+3960]
	061 Call 0x1C17D08
	062 Move X8, [X21]
	063 Move X1, [X8]
	064 Call 0x1C18270
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {80}
	069 Call 0x3EB2AE0
	070 Move X0, X20
	071 Move X20, [X31+32]
	072 Move X19, [X31+40]
	073 Move X22, [X31+16]
	074 Move X21, [X31+24]
	075 Move X1, X31
	076 Move X30, [X31+48]
	077 Move X23, [X31+56]
	078 Call IntrospectiveSortUtilities.ThrowOrIgnoreBadComparer, X0
	079 Return 
	080 Move X0, 0x158F000
	081 Move X0, [X0+3000]
	082 Call 0x1C17D08
	083 Move X8, [X21]
	084 Move X1, [X8]
	085 Call 0x1C18270
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {94}
	090 Move X19, [X21]
	091 Call 0x3EB2AE0
	092 Move X0, X19
	093 Call 0x1C17F18
	094 Move X0, 0x1566000
	095 Move X0, [X0+2000]
	096 Call 0x1C17D08
	097 Move X8, [X21]
	098 Move X1, [X8]
	099 Call 0x1C18270
	100 Move TEMP, X0
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfNotEqual {122}
	104 Move X20, [X21]
	105 Call 0x3EB2AE0
	106 Move X0, 0x1566000
	107 Move X0, [X0+1456]
	108 Call 0x1C17D08
	109 Call 0x1C17F10
	110 Move X21, X0
	111 Move X0, 0x158F000
	112 Move X0, [X0+3008]
	113 Call 0x1C17D08
	114 Move X1, X0
	115 Move X0, X21
	116 Move X2, X20
	117 Move X3, X31
	118 Call InvalidOperationException..ctor, X0, X1, X2
	119 Move X0, X21
	120 Move X1, X19
	121 Call 0x1C17DEC
	122 Move W0, 8
	123 Call 0x3EB2AF0
	124 Move X8, [X21]
	125 Move [X0], X8
	126 Move X1, 0x1327000
	127 Add X1, X1, 3672
	128 Move X2, X31
	129 Call 0x3EB2B00
	130 Move X21, X0
	131 Call 0x3EB2AE0
	132 Move X0, X21
	133 Call 0x1D2D690
	134 Call 0x1991590

Method: System.Int32 InternalBinarySearch(T[] array, System.Int32 index, System.Int32 length, T value, System.Collections.Generic.IComparer`1<T> comparer)

Disassembly:
	0x02B8E63C BL 0x1C16F10
	0x02B8E640 MOV X21, X0
	0x02B8E644 ADRP X0, 0x158E000
	0x02B8E648 LDR X0, [X0 + 0xBC0]
	0x02B8E64C BL 0x1C16D08
	0x02B8E650 MOV X1, X0
	0x02B8E654 MOV X0, X21
	0x02B8E658 MOV X2, X20
	0x02B8E65C MOV X3, X31
	0x02B8E660 BL 0x337DF40
	0x02B8E664 MOV X0, X21
	0x02B8E668 MOV X1, X19
	0x02B8E66C BL 0x1C16DEC
	0x02B8E670 MOVZ W0, 0x8
	0x02B8E674 BL 0x3EB1AF0
	0x02B8E678 LDR X8, [X21]
	0x02B8E67C STR X8, [X0]
	0x02B8E680 ADRP X1, 0x1326000
	0x02B8E684 ADD X1, X1, 0xE58
	0x02B8E688 MOV X2, X31
	0x02B8E68C BL 0x3EB1B00
	0x02B8E690 MOV X21, X0
	0x02B8E694 BL 0x3EB1AE0
	0x02B8E698 MOV X0, X21
	0x02B8E69C BL 0x1D2C690
	0x02B8E6A0 BL 0x1990590
	0x02B8E6A4 STR X30, [X31 - 0x40]!
	0x02B8E6A8 STP X24, X23, [X31 + 0x10]
	0x02B8E6AC STP X22, X21, [X31 + 0x20]
	0x02B8E6B0 STP X20, X19, [X31 + 0x30]
	0x02B8E6B4 MOV X19, X6
	0x02B8E6B8 MOV X24, X5
	0x02B8E6BC MOV X20, X4
	0x02B8E6C0 MOV W21, W3
	0x02B8E6C4 MOV W22, W2
	0x02B8E6C8 MOV X23, X1
	0x02B8E6CC CBNZ X5, 0x2B8E6E4
	0x02B8E6D0 LDR X8, [X19 + 0x20]
	0x02B8E6D4 LDR X8, [X8 + 0xC0]
	0x02B8E6D8 LDR X0, [X8 + 0x8]
	0x02B8E6DC BL 0x2900890
	0x02B8E6E0 MOV X24, X0
	0x02B8E6E4 LDR X8, [X19 + 0x20]
	0x02B8E6E8 LDR X8, [X8 + 0xC0]
	0x02B8E6EC LDR X0, [X8 + 0x48]
	0x02B8E6F0 LDRB W8, [X0 + 0x135]
	0x02B8E6F4 TBNZ X8, 0x0, 0x2B8E6FC
	0x02B8E6F8 BL 0x1C5C684
	0x02B8E6FC LDR W8, [X0 + 0xE0]
	0x02B8E700 CBNZ W8, 0x2B8E708
	0x02B8E704 BL 0x1C16DFC
	0x02B8E708 LDR X8, [X19 + 0x20]
	0x02B8E70C LDR X8, [X8 + 0xC0]
	0x02B8E710 LDR X5, [X8 + 0x58]
	0x02B8E714 MOV X0, X23
	0x02B8E718 MOV W1, W22
	0x02B8E71C MOV W2, W21
	0x02B8E720 MOV X3, X20
	0x02B8E724 MOV X4, X24
	0x02B8E728 BL 0x2B8E9CC
	0x02B8E72C LDP X20, X19, [X31 + 0x30]
	0x02B8E730 LDP X22, X21, [X31 + 0x20]
	0x02B8E734 LDP X24, X23, [X31 + 0x10]
	0x02B8E738 LDR X30, [X31], #0x40
	0x02B8E73C RET
	0x02B8E740 B 0x2B8E748
	0x02B8E744 B 0x2B8E748
	0x02B8E748 MOV X20, X0
	0x02B8E74C CMP W1, 0x1
	0x02B8E750 B.NE 0x2B8E818
	0x02B8E754 MOV X0, X20
	0x02B8E758 BL 0x3EB1AD0
	0x02B8E75C MOV X20, X0
	0x02B8E760 ADRP X0, 0x158E000
	0x02B8E764 LDR X0, [X0 + 0xBB8]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Add W8, W1, W2
	011 Subtract W26, W8, 1
	012 Move W19, W1
	013 NotImplemented "Instruction CMP not yet implemented."
	014 NotImplemented "Instruction ORN not yet implemented."
	015 Move W0, W24
	016 Move X20, [X31+64]
	017 Move X19, [X31+72]
	018 Move X22, [X31+48]
	019 Move X21, [X31+56]
	020 Move X24, [X31+32]
	021 Move X23, [X31+40]
	022 Move X26, [X31+16]
	023 Move X25, [X31+24]
	024 Move X30, [X31+80]
	025 Return X0
	026 Move X23, X0
	027 Compare X0, 0
	028 JumpIfEqual {89}
	029 Move X20, X5
	030 Move X21, X4
	031 Move X22, X3
	032 Move W8, [X23+24]
	033 Subtract W9, W26, W19
	034 Add W24, W19, W9
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Compare X21, 0
	037 JumpIfEqual {89}
	038 Move X0, [X20+32]
	039 Add X8, X23, W24
	040 Move X25, [X8+32]
	041 Move W9, [X0+309]
	042 Move TEMP, X9
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {47}
	046 Call 0x1C5D684
	047 Move X8, [X0+192]
	048 Move X1, [X8]
	049 Move W8, [X1+309]
	050 Move TEMP, X8
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {57}
	054 Move X0, X1
	055 Call 0x1C5D684
	056 Move X1, X0
	057 Move X8, [X21]
	058 NotImplemented "Instruction LDRH not yet implemented."
	059 Compare X9, 0
	060 JumpIfEqual {67}
	061 Move X10, [X8+176]
	062 Add X10, X10, 8
	063 NotImplemented "Instruction LDUR not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Subtract X9, X9, 1
	066 Add X10, X10, 16
	067 Move X0, X21
	068 Move W2, W31
	069 Call 0x1C5D788
	070 NotImplemented "Instruction LDRSW not yet implemented."
	071 Add X8, X8, X9
	072 Add X0, X8, 312
	073 Move X8, [X0]
	074 Move X3, [X0+8]
	075 Move X0, X21
	076 Move X1, X25
	077 Move X2, X22
	078 NotImplemented "Instruction BLR not yet implemented."
	079 Compare W0, 0
	080 JumpIfEqual {15}
	081 Move TEMP, X0
	082 And TEMP, TEMP, -2147483648
	083 Compare TEMP, -2147483648
	084 JumpIfNotEqual {87}
	085 Add W19, W24, 1
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Subtract W26, W24, 1
	088 Call 0x1C17F28
	089 Call 0x1C17F20

Method: System.Void SwapIfGreater(T[] keys, System.Comparison`1<T> comparer, System.Int32 a, System.Int32 b)

Disassembly:
	0x02B8E768 BL 0x1C16D08
	0x02B8E76C LDR X8, [X20]
	0x02B8E770 LDR X1, [X8]
	0x02B8E774 BL 0x1C17270
	0x02B8E778 TBZ X0, 0x0, 0x2B8E78C
	0x02B8E77C LDR X19, [X20]
	0x02B8E780 BL 0x3EB1AE0
	0x02B8E784 MOV X0, X19
	0x02B8E788 BL 0x1C16F18
	0x02B8E78C ADRP X0, 0x1565000
	0x02B8E790 LDR X0, [X0 + 0x7D0]
	0x02B8E794 BL 0x1C16D08
	0x02B8E798 LDR X8, [X20]
	0x02B8E79C LDR X1, [X8]
	0x02B8E7A0 BL 0x1C17270
	0x02B8E7A4 TBZ X0, 0x0, 0x2B8E7F0
	0x02B8E7A8 LDR X20, [X20]
	0x02B8E7AC BL 0x3EB1AE0
	0x02B8E7B0 ADRP X0, 0x1565000
	0x02B8E7B4 LDR X0, [X0 + 0x5B0]
	0x02B8E7B8 BL 0x1C16D08
	0x02B8E7BC BL 0x1C16F10
	0x02B8E7C0 MOV X21, X0
	0x02B8E7C4 ADRP X0, 0x158E000
	0x02B8E7C8 LDR X0, [X0 + 0xBC0]
	0x02B8E7CC BL 0x1C16D08
	0x02B8E7D0 MOV X1, X0
	0x02B8E7D4 MOV X0, X21
	0x02B8E7D8 MOV X2, X20
	0x02B8E7DC MOV X3, X31
	0x02B8E7E0 BL 0x337DF40
	0x02B8E7E4 MOV X0, X21
	0x02B8E7E8 MOV X1, X19
	0x02B8E7EC BL 0x1C16DEC
	0x02B8E7F0 MOVZ W0, 0x8
	0x02B8E7F4 BL 0x3EB1AF0
	0x02B8E7F8 LDR X8, [X20]
	0x02B8E7FC STR X8, [X0]
	0x02B8E800 ADRP X1, 0x1326000
	0x02B8E804 ADD X1, X1, 0xE58
	0x02B8E808 MOV X2, X31
	0x02B8E80C BL 0x3EB1B00
	0x02B8E810 MOV X20, X0
	0x02B8E814 BL 0x3EB1AE0
	0x02B8E818 MOV X0, X20
	0x02B8E81C BL 0x1D2C690
	0x02B8E820 BL 0x1990590
	0x02B8E824 STP X30, X23, [X31 - 0x30]!
	0x02B8E828 STP X22, X21, [X31 + 0x10]
	0x02B8E82C STP X20, X19, [X31 + 0x20]
	0x02B8E830 LDR X8, [X4 + 0x20]
	0x02B8E834 MOV X19, X4
	0x02B8E838 MOV X20, X3
	0x02B8E83C MOV W21, W2

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move X20, X0
	012 Compare X0, 0
	013 JumpIfEqual {62}
	014 Move W8, [X20+24]
	015 Move W21, W2
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Add X25, X20, W21
	018 Add X25, X25, 32
	019 Move X23, [X25]
	020 Move W19, W3
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Add X26, X20, W19
	023 Add X26, X26, 32
	024 Move X24, [X26]
	025 Move X22, X1
	026 Compare X1, 0
	027 JumpIfEqual {62}
	028 Move X0, [X4+32]
	029 Move W8, [X0+309]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {35}
	034 Call 0x1C5D684
	035 Move X8, [X22+24]
	036 Move X0, [X22+64]
	037 Move X3, [X22+40]
	038 Move X1, X23
	039 Move X2, X24
	040 NotImplemented "Instruction BLR not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move W8, [X20+24]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X9, [X26]
	046 Move X8, [X25]
	047 Move [X25], X9
	048 Move W9, [X20+24]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move [X26], X8
	051 Move X20, [X31+64]
	052 Move X19, [X31+72]
	053 Move X22, [X31+48]
	054 Move X21, [X31+56]
	055 Move X24, [X31+32]
	056 Move X23, [X31+40]
	057 Move X26, [X31+16]
	058 Move X25, [X31+24]
	059 Move X30, [X31+80]
	060 Return 
	061 Call 0x1C17F28
	062 Call 0x1C17F20

Method: System.Void Swap(T[] a, System.Int32 i, System.Int32 j)

Disassembly:
	0x02B8E840 LDRB W9, [X8 + 0x135]
	0x02B8E844 MOV W22, W1
	0x02B8E848 MOV X23, X0
	0x02B8E84C TBNZ X9, 0x0, 0x2B8E85C
	0x02B8E850 MOV X0, X8
	0x02B8E854 BL 0x1C5C684
	0x02B8E858 MOV X8, X0
	0x02B8E85C LDR X8, [X8 + 0xC0]
	0x02B8E860 LDR X0, [X8 + 0x48]
	0x02B8E864 LDRB W8, [X0 + 0x135]
	0x02B8E868 TBNZ X8, 0x0, 0x2B8E870
	0x02B8E86C BL 0x1C5C684
	0x02B8E870 LDR W8, [X0 + 0xE0]
	0x02B8E874 CBNZ W8, 0x2B8E87C
	0x02B8E878 BL 0x1C16DFC
	0x02B8E87C LDR X0, [X19 + 0x20]
	0x02B8E880 LDRB W8, [X0 + 0x135]
	0x02B8E884 TBNZ X8, 0x0, 0x2B8E88C
	0x02B8E888 BL 0x1C5C684
	0x02B8E88C LDR X8, [X0 + 0xC0]
	0x02B8E890 LDR X4, [X8 + 0x40]
	0x02B8E894 MOV X0, X23

ISIL:
	001 Move [X31-16], X30
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Compare X0, 0
	004 JumpIfEqual {21}
	005 Move W10, [X0+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Add X9, X0, W1
	008 Add X9, X9, 32
	009 Move X8, [X9]
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Add X10, X0, W2
	012 Add X10, X10, 32
	013 Move X11, [X10]
	014 Move [X9], X11
	015 Move W9, [X0+24]
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move [X10], X8
	018 Move X30, [X31+16]
	019 Return 
	020 Call 0x1C17F28
	021 Call 0x1C17F20

Method: System.Void IntrospectiveSort(T[] keys, System.Int32 left, System.Int32 length, System.Comparison`1<T> comparer)

Disassembly:
	0x02B8E898 MOV W1, W22
	0x02B8E89C MOV W2, W21
	0x02B8E8A0 MOV X3, X20
	0x02B8E8A4 BL 0x2B8EC28
	0x02B8E8A8 LDP X20, X19, [X31 + 0x20]
	0x02B8E8AC LDP X22, X21, [X31 + 0x10]
	0x02B8E8B0 LDP X30, X23, [X31], #0x30
	0x02B8E8B4 RET
	0x02B8E8B8 CMP W1, 0x1
	0x02B8E8BC MOV X21, X0
	0x02B8E8C0 B.NE 0x2B8E9C0
	0x02B8E8C4 MOV X0, X21
	0x02B8E8C8 BL 0x3EB1AD0
	0x02B8E8CC MOV X21, X0
	0x02B8E8D0 ADRP X0, 0x156F000
	0x02B8E8D4 LDR X0, [X0 + 0xF78]
	0x02B8E8D8 BL 0x1C16D08
	0x02B8E8DC LDR X8, [X21]
	0x02B8E8E0 LDR X1, [X8]
	0x02B8E8E4 BL 0x1C17270
	0x02B8E8E8 TBZ X0, 0x0, 0x2B8E908
	0x02B8E8EC BL 0x3EB1AE0
	0x02B8E8F0 MOV X0, X20
	0x02B8E8F4 LDP X20, X19, [X31 + 0x20]
	0x02B8E8F8 LDP X22, X21, [X31 + 0x10]
	0x02B8E8FC MOV X1, X31
	0x02B8E900 LDP X30, X23, [X31], #0x30
	0x02B8E904 B 0x335DD1C
	0x02B8E908 ADRP X0, 0x158E000
	0x02B8E90C LDR X0, [X0 + 0xBB8]
	0x02B8E910 BL 0x1C16D08
	0x02B8E914 LDR X8, [X21]
	0x02B8E918 LDR X1, [X8]
	0x02B8E91C BL 0x1C17270
	0x02B8E920 TBZ X0, 0x0, 0x2B8E934
	0x02B8E924 LDR X19, [X21]
	0x02B8E928 BL 0x3EB1AE0
	0x02B8E92C MOV X0, X19
	0x02B8E930 BL 0x1C16F18
	0x02B8E934 ADRP X0, 0x1565000
	0x02B8E938 LDR X0, [X0 + 0x7D0]
	0x02B8E93C BL 0x1C16D08
	0x02B8E940 LDR X8, [X21]
	0x02B8E944 LDR X1, [X8]
	0x02B8E948 BL 0x1C17270
	0x02B8E94C TBZ X0, 0x0, 0x2B8E998
	0x02B8E950 LDR X20, [X21]
	0x02B8E954 BL 0x3EB1AE0
	0x02B8E958 ADRP X0, 0x1565000

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Move [X31-64], X30
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move W20, W1
	010 Move X21, X0
	011 Move W0, W2
	012 Move X1, X31
	013 Move X23, X4
	014 Move X19, X3
	015 Move W22, W2
	016 Call IntrospectiveSortUtilities.FloorLog2PlusOne, X0
	017 Move X8, [X23+32]
	018 Move W24, W0
	019 Move W9, [X8+309]
	020 Move TEMP, X9
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {27}
	024 Move X0, X8
	025 Call 0x1C5D684
	026 Move X8, X0
	027 Move X8, [X8+192]
	028 Move X0, [X8+72]
	029 Move W8, [X0+309]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {35}
	034 Call 0x1C5D684
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, [X23+32]
	040 Add W9, W20, W22
	041 Subtract W23, W9, 1
	042 Move W22, W24
	043 ShiftRight W22, 31
	044 And W22, W22, 0x3FFFFFFF
	045 Move W8, [X0+309]
	046 Move TEMP, X8
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {51}
	050 Call 0x1C5D684
	051 Move X8, [X0+192]
	052 Move X0, X21
	053 Move W1, W20
	054 Move W2, W23
	055 Move X5, [X8+104]
	056 Move W3, W22
	057 Move X4, X19
	058 Move X20, [X31+48]
	059 Move X19, [X31+56]
	060 Move X22, [X31+32]
	061 Move X21, [X31+40]
	062 Move X24, [X31+16]
	063 Move X23, [X31+24]
	064 Move X30, [X31+64]
	065 Return 

Method: System.Void IntroSort(T[] keys, System.Int32 lo, System.Int32 hi, System.Int32 depthLimit, System.Comparison`1<T> comparer)

Disassembly:
	0x02B8E95C LDR X0, [X0 + 0x5B0]
	0x02B8E960 BL 0x1C16D08
	0x02B8E964 BL 0x1C16F10
	0x02B8E968 MOV X21, X0
	0x02B8E96C ADRP X0, 0x158E000
	0x02B8E970 LDR X0, [X0 + 0xBC0]
	0x02B8E974 BL 0x1C16D08
	0x02B8E978 MOV X1, X0
	0x02B8E97C MOV X0, X21
	0x02B8E980 MOV X2, X20
	0x02B8E984 MOV X3, X31
	0x02B8E988 BL 0x337DF40
	0x02B8E98C MOV X0, X21
	0x02B8E990 MOV X1, X19
	0x02B8E994 BL 0x1C16DEC
	0x02B8E998 MOVZ W0, 0x8
	0x02B8E99C BL 0x3EB1AF0
	0x02B8E9A0 LDR X8, [X21]
	0x02B8E9A4 STR X8, [X0]
	0x02B8E9A8 ADRP X1, 0x1326000
	0x02B8E9AC ADD X1, X1, 0xE58
	0x02B8E9B0 MOV X2, X31
	0x02B8E9B4 BL 0x3EB1B00
	0x02B8E9B8 MOV X21, X0
	0x02B8E9BC BL 0x3EB1AE0
	0x02B8E9C0 MOV X0, X21
	0x02B8E9C4 BL 0x1D2C690
	0x02B8E9C8 BL 0x1990590
	0x02B8E9CC STR X30, [X31 - 0x50]!
	0x02B8E9D0 STP X26, X25, [X31 + 0x10]
	0x02B8E9D4 STP X24, X23, [X31 + 0x20]
	0x02B8E9D8 STP X22, X21, [X31 + 0x30]
	0x02B8E9DC STP X20, X19, [X31 + 0x40]
	0x02B8E9E0 ADD W8, W1, W2
	0x02B8E9E4 SUB W26, W8, 0x1
	0x02B8E9E8 MOV W19, W1
	0x02B8E9EC CMP W26, W1
	0x02B8E9F0 B.GE 0x2B8EA14
	0x02B8E9F4 ORN W24, W31, W19, 0x0
	0x02B8E9F8 MOV W0, W24
	0x02B8E9FC LDP X20, X19, [X31 + 0x40]
	0x02B8EA00 LDP X22, X21, [X31 + 0x30]
	0x02B8EA04 LDP X24, X23, [X31 + 0x20]
	0x02B8EA08 LDP X26, X25, [X31 + 0x10]
	0x02B8EA0C LDR X30, [X31], #0x50
	0x02B8EA10 RET
	0x02B8EA14 MOV X23, X0
	0x02B8EA18 CBZ X0, 0x2B8EAF4
	0x02B8EA1C MOV X20, X5
	0x02B8EA20 MOV X21, X4
	0x02B8EA24 MOV X22, X3
	0x02B8EA28 LDR W8, [X23 + 0x18]
	0x02B8EA2C SUB W9, W26, W19
	0x02B8EA30 ADD W24, W19, W9, 0x1, ASR
	0x02B8EA34 CMP W24, W8
	0x02B8EA38 B.CS 0x2B8EAF0
	0x02B8EA3C CBZ X21, 0x2B8EAF4
	0x02B8EA40 LDR X0, [X20 + 0x20]
	0x02B8EA44 ADD X8, X23, W24, 0x3, SXTW
	0x02B8EA48 LDR X25, [X8 + 0x20]
	0x02B8EA4C LDRB W9, [X0 + 0x135]
	0x02B8EA50 TBNZ X9, 0x0, 0x2B8EA58
	0x02B8EA54 BL 0x1C5C684
	0x02B8EA58 LDR X8, [X0 + 0xC0]
	0x02B8EA5C LDR X1, [X8]
	0x02B8EA60 LDRB W8, [X1 + 0x135]
	0x02B8EA64 TBNZ X8, 0x0, 0x2B8EA74
	0x02B8EA68 MOV X0, X1
	0x02B8EA6C BL 0x1C5C684
	0x02B8EA70 MOV X1, X0
	0x02B8EA74 LDR X8, [X21]
	0x02B8EA78 LDRH W9, [X8 + 0x12E]
	0x02B8EA7C CBZ X9, 0x2B8EAA0
	0x02B8EA80 LDR X10, [X8 + 0xB0]
	0x02B8EA84 ADD X10, X10, 0x8
	0x02B8EA88 LDUR X11, [X10 - 0x8]
	0x02B8EA8C CMP X11, X1
	0x02B8EA90 B.EQ 0x2B8EAB0
	0x02B8EA94 SUBS X9, X9, 0x1
	0x02B8EA98 ADD X10, X10, 0x10
	0x02B8EA9C B.NE 0x2B8EA88
	0x02B8EAA0 MOV X0, X21
	0x02B8EAA4 MOV W2, W31
	0x02B8EAA8 BL 0x1C5C788
	0x02B8EAAC B 0x2B8EABC
	0x02B8EAB0 LDRSW X9, [X10]
	0x02B8EAB4 ADD X8, X8, X9, 0x4, LSL
	0x02B8EAB8 ADD X0, X8, 0x138
	0x02B8EABC LDP X8, X3, [X0]
	0x02B8EAC0 MOV X0, X21
	0x02B8EAC4 MOV X1, X25
	0x02B8EAC8 MOV X2, X22
	0x02B8EACC BLR X8
	0x02B8EAD0 CBZ W0, 0x2B8E9F8
	0x02B8EAD4 TBZ X0, 0x1F, 0x2B8EAE8
	0x02B8EAD8 ADD W19, W24, 0x1
	0x02B8EADC CMP W26, W19
	0x02B8EAE0 B.GE 0x2B8EA28
	0x02B8EAE4 B 0x2B8E9F4
	0x02B8EAE8 SUB W26, W24, 0x1
	0x02B8EAEC B 0x2B8EADC
	0x02B8EAF0 BL 0x1C16F28
	0x02B8EAF4 BL 0x1C16F20
	0x02B8EAF8 STR X30, [X31 - 0x50]!
	0x02B8EAFC STP X26, X25, [X31 + 0x10]
	0x02B8EB00 STP X24, X23, [X31 + 0x20]
	0x02B8EB04 STP X22, X21, [X31 + 0x30]
	0x02B8EB08 STP X20, X19, [X31 + 0x40]
	0x02B8EB0C CMP W2, W3
	0x02B8EB10 B.EQ 0x2B8EBB0
	0x02B8EB14 MOV X20, X0
	0x02B8EB18 CBZ X0, 0x2B8EBCC
	0x02B8EB1C LDR W8, [X20 + 0x18]
	0x02B8EB20 MOV W21, W2
	0x02B8EB24 CMP W8, W2
	0x02B8EB28 B.LS 0x2B8EBC8
	0x02B8EB2C ADD X25, X20, W21, 0x3, SXTW
	0x02B8EB30 LDR X23, [X25 + 0x20]!
	0x02B8EB34 MOV W19, W3
	0x02B8EB38 CMP W8, W3
	0x02B8EB3C B.LS 0x2B8EBC8
	0x02B8EB40 ADD X26, X20, W19, 0x3, SXTW
	0x02B8EB44 LDR X24, [X26 + 0x20]!
	0x02B8EB48 MOV X22, X1
	0x02B8EB4C CBZ X1, 0x2B8EBCC
	0x02B8EB50 LDR X0, [X4 + 0x20]
	0x02B8EB54 LDRB W8, [X0 + 0x135]
	0x02B8EB58 TBNZ X8, 0x0, 0x2B8EB60
	0x02B8EB5C BL 0x1C5C684
	0x02B8EB60 LDR X8, [X22 + 0x18]
	0x02B8EB64 LDR X0, [X22 + 0x40]
	0x02B8EB68 LDR X3, [X22 + 0x28]
	0x02B8EB6C MOV X1, X23
	0x02B8EB70 MOV X2, X24
	0x02B8EB74 BLR X8
	0x02B8EB78 CMP W0, 0x1
	0x02B8EB7C B.LT 0x2B8EBB0
	0x02B8EB80 LDR W8, [X20 + 0x18]
	0x02B8EB84 CMP W8, W21
	0x02B8EB88 B.LS 0x2B8EBC8
	0x02B8EB8C CMP W8, W19
	0x02B8EB90 B.LS 0x2B8EBC8
	0x02B8EB94 LDR X9, [X26]
	0x02B8EB98 LDR X8, [X25]
	0x02B8EB9C STR X9, [X25]
	0x02B8EBA0 LDR W9, [X20 + 0x18]
	0x02B8EBA4 CMP W9, W19
	0x02B8EBA8 B.LS 0x2B8EBC8
	0x02B8EBAC STR X8, [X26]
	0x02B8EBB0 LDP X20, X19, [X31 + 0x40]
	0x02B8EBB4 LDP X22, X21, [X31 + 0x30]
	0x02B8EBB8 LDP X24, X23, [X31 + 0x20]
	0x02B8EBBC LDP X26, X25, [X31 + 0x10]
	0x02B8EBC0 LDR X30, [X31], #0x50
	0x02B8EBC4 RET
	0x02B8EBC8 BL 0x1C16F28
	0x02B8EBCC BL 0x1C16F20
	0x02B8EBD0 STR X30, [X31 - 0x10]!
	0x02B8EBD4 CMP W1, W2
	0x02B8EBD8 B.EQ 0x2B8EC18
	0x02B8EBDC CBZ X0, 0x2B8EC24
	0x02B8EBE0 LDR W10, [X0 + 0x18]
	0x02B8EBE4 CMP W10, W1
	0x02B8EBE8 B.LS 0x2B8EC20
	0x02B8EBEC ADD X9, X0, W1, 0x3, SXTW
	0x02B8EBF0 LDR X8, [X9 + 0x20]!
	0x02B8EBF4 CMP W10, W2
	0x02B8EBF8 B.LS 0x2B8EC20
	0x02B8EBFC ADD X10, X0, W2, 0x3, SXTW
	0x02B8EC00 LDR X11, [X10 + 0x20]!
	0x02B8EC04 STR X11, [X9]
	0x02B8EC08 LDR W9, [X0 + 0x18]
	0x02B8EC0C CMP W9, W2
	0x02B8EC10 B.LS 0x2B8EC20
	0x02B8EC14 STR X8, [X10]
	0x02B8EC18 LDR X30, [X31], #0x10
	0x02B8EC1C RET
	0x02B8EC20 BL 0x1C16F28
	0x02B8EC24 BL 0x1C16F20
	0x02B8EC28 CMP W2, 0x2
	0x02B8EC2C B.LT 0x2B8ECE8
	0x02B8EC30 STR X30, [X31 - 0x40]!
	0x02B8EC34 STP X24, X23, [X31 + 0x10]
	0x02B8EC38 STP X22, X21, [X31 + 0x20]
	0x02B8EC3C STP X20, X19, [X31 + 0x30]
	0x02B8EC40 MOV W20, W1
	0x02B8EC44 MOV X21, X0
	0x02B8EC48 MOV W0, W2
	0x02B8EC4C MOV X1, X31
	0x02B8EC50 MOV X23, X4
	0x02B8EC54 MOV X19, X3
	0x02B8EC58 MOV W22, W2
	0x02B8EC5C BL 0x335DCF4
	0x02B8EC60 LDR X8, [X23 + 0x20]
	0x02B8EC64 MOV W24, W0
	0x02B8EC68 LDRB W9, [X8 + 0x135]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X23, X5
	011 Move X19, X4
	012 Move W20, W2
	013 Move W22, W1
	014 Move X21, X0
	015 Subtract W24, W3, 1
	016 Subtract W8, W20, W22
	017 Add W9, W8, 1
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Add W31, W24, 1
	020 Move X0, [X23+32]
	021 Move W8, [X0+309]
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {27}
	026 Call 0x1C5D684
	027 Move X8, [X0+192]
	028 Move X0, [X8+72]
	029 Move W8, [X0+309]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {35}
	034 Call 0x1C5D684
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, [X23+32]
	040 Move W8, [X0+309]
	041 Move TEMP, X8
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {46}
	045 Call 0x1C5D684
	046 Move X8, [X0+192]
	047 Move X0, X21
	048 Move W1, W22
	049 Move W2, W20
	050 Move X4, [X8+136]
	051 Move X3, X19
	052 Call 0x2B8EC6C, X0, X1, X2, X3
	053 Move X8, [X23+32]
	054 Move W25, W0
	055 Move W9, [X8+309]
	056 Move TEMP, X9
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {63}
	060 Move X0, X8
	061 Call 0x1C5D684
	062 Move X8, X0
	063 Move X8, [X8+192]
	064 Add W1, W25, 1
	065 Move X0, X21
	066 Move W2, W20
	067 Move X5, [X8+104]
	068 Move W3, W24
	069 Move X4, X19
	070 Call 0x2B8E95C, X0, X1, X2, X3, X4
	071 Subtract W20, W25, 1
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Subtract W24, W24, 1
	074 Compare W8, 0
	075 JumpIfEqual {108}
	076 NotImplemented "Instruction CMP not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X0, [X23+32]
	079 Move W8, [X0+309]
	080 Move TEMP, X8
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfEqual {85}
	084 Call 0x1C5D684
	085 Move X8, [X0+192]
	086 Move X0, [X8+72]
	087 Move W8, [X0+309]
	088 Move TEMP, X8
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfEqual {93}
	092 Call 0x1C5D684
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {97}
	096 Call 0x1C17DFC
	097 Move X0, [X23+32]
	098 Move W8, [X0+309]
	099 Move TEMP, X8
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfEqual {104}
	103 Call 0x1C5D684
	104 Move X8, [X0+192]
	105 Move X0, X21
	106 Move X1, X19
	107 Move W2, W22
	108 Move X20, [X31+48]
	109 Move X19, [X31+56]
	110 Move X22, [X31+32]
	111 Move X21, [X31+40]
	112 Move X24, [X31+16]
	113 Move X23, [X31+24]
	114 Move X30, [X31+64]
	115 Move X25, [X31+72]
	116 Return 
	117 Move X0, [X23+32]
	118 Move W8, [X0+309]
	119 Move TEMP, X8
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfEqual {124}
	123 Call 0x1C5D684
	124 Move X8, [X0+192]
	125 Move X0, [X8+72]
	126 Move W8, [X0+309]
	127 Move TEMP, X8
	128 And TEMP, TEMP, 1
	129 Compare TEMP, 1
	130 JumpIfEqual {132}
	131 Call 0x1C5D684
	132 Move W8, [X0+224]
	133 Compare W8, 0
	134 JumpIfNotEqual {136}
	135 Call 0x1C17DFC
	136 Move X0, [X23+32]
	137 Move W8, [X0+309]
	138 Move TEMP, X8
	139 And TEMP, TEMP, 1
	140 Compare TEMP, 1
	141 JumpIfEqual {143}
	142 Call 0x1C5D684
	143 Move X8, [X0+192]
	144 Move X0, X21
	145 Move W1, W22
	146 Move W2, W20
	147 Move X4, [X8+128]
	148 Move X3, X19
	149 Move X20, [X31+48]
	150 Move X19, [X31+56]
	151 Move X22, [X31+32]
	152 Move X21, [X31+40]
	153 Move X24, [X31+16]
	154 Move X23, [X31+24]
	155 Move X30, [X31+64]
	156 Move X25, [X31+72]
	157 Call 0x2B8EEFC, X0, X1, X2, X3
	158 Return 
	159 Move X0, [X23+32]
	160 Move W8, [X0+309]
	161 Move TEMP, X8
	162 And TEMP, TEMP, 1
	163 Compare TEMP, 1
	164 JumpIfEqual {166}
	165 Call 0x1C5D684
	166 Move X8, [X0+192]
	167 Move X0, [X8+72]
	168 Move W8, [X0+309]
	169 Move TEMP, X8
	170 And TEMP, TEMP, 1
	171 Compare TEMP, 1
	172 JumpIfEqual {174}
	173 Call 0x1C5D684
	174 Move W8, [X0+224]
	175 Compare W8, 0
	176 JumpIfNotEqual {178}
	177 Call 0x1C17DFC
	178 Move X0, [X23+32]
	179 Subtract W24, W20, 1
	180 Move W8, [X0+309]
	181 Move TEMP, X8
	182 And TEMP, TEMP, 1
	183 Compare TEMP, 1
	184 JumpIfEqual {186}
	185 Call 0x1C5D684
	186 Move X8, [X0+192]
	187 Move X0, X21
	188 Move X1, X19
	189 Move W2, W22
	190 Move X4, [X8+112]
	191 Move W3, W24
	192 Call 0x2B8E768, X0, X1, X2, X3
	193 Move X0, [X23+32]
	194 Move W8, [X0+309]
	195 Move TEMP, X8
	196 And TEMP, TEMP, 1
	197 Compare TEMP, 1
	198 JumpIfEqual {200}
	199 Call 0x1C5D684
	200 Move X8, [X0+192]
	201 Move X0, X21
	202 Move X1, X19
	203 Move W2, W22
	204 Move X4, [X8+112]
	205 Move W3, W20
	206 Call 0x2B8E768, X0, X1, X2, X3
	207 Move X0, [X23+32]
	208 Move W8, [X0+309]
	209 Move TEMP, X8
	210 And TEMP, TEMP, 1
	211 Compare TEMP, 1
	212 JumpIfEqual {214}
	213 Call 0x1C5D684
	214 Move X8, [X0+192]
	215 Move X0, X21
	216 Move X1, X19
	217 Move W2, W24
	218 Move X4, [X8+112]
	219 Move W3, W20
	220 Move X20, [X31+48]
	221 Move X19, [X31+56]
	222 Move X22, [X31+32]
	223 Move X21, [X31+40]
	224 Move X24, [X31+16]
	225 Move X23, [X31+24]
	226 Move X30, [X31+64]
	227 Move X25, [X31+72]
	228 Call 0x2B8E768, X0, X1, X2, X3
	229 Return 
	230 Move X0, [X23+32]
	231 Move W8, [X0+309]
	232 Move TEMP, X8
	233 And TEMP, TEMP, 1
	234 Compare TEMP, 1
	235 JumpIfEqual {237}
	236 Call 0x1C5D684
	237 Move X8, [X0+192]
	238 Move X0, [X8+72]
	239 Move W8, [X0+309]
	240 Move TEMP, X8
	241 And TEMP, TEMP, 1
	242 Compare TEMP, 1
	243 JumpIfEqual {245}
	244 Call 0x1C5D684
	245 Move W8, [X0+224]
	246 Compare W8, 0
	247 JumpIfNotEqual {249}
	248 Call 0x1C17DFC
	249 Move X0, [X23+32]
	250 Move W8, [X0+309]
	251 Move TEMP, X8
	252 And TEMP, TEMP, 1
	253 Compare TEMP, 1
	254 JumpIfEqual {256}
	255 Call 0x1C5D684
	256 Move X8, [X0+192]
	257 Move X0, X21
	258 Move W1, W22
	259 Move W2, W20
	260 Move X4, [X8+120]
	261 Move X3, X19
	262 Move X20, [X31+48]
	263 Move X19, [X31+56]
	264 Move X22, [X31+32]
	265 Move X21, [X31+40]
	266 Move X24, [X31+16]
	267 Move X23, [X31+24]
	268 Move X30, [X31+64]
	269 Move X25, [X31+72]
	270 Call 0x2B8F1E8, X0, X1, X2, X3
	271 Return 

Method: System.Int32 PickPivotAndPartition(T[] keys, System.Int32 lo, System.Int32 hi, System.Comparison`1<T> comparer)

Disassembly:
	0x02B8EC6C TBNZ X9, 0x0, 0x2B8EC7C
	0x02B8EC70 MOV X0, X8
	0x02B8EC74 BL 0x1C5C684
	0x02B8EC78 MOV X8, X0
	0x02B8EC7C LDR X8, [X8 + 0xC0]
	0x02B8EC80 LDR X0, [X8 + 0x48]
	0x02B8EC84 LDRB W8, [X0 + 0x135]
	0x02B8EC88 TBNZ X8, 0x0, 0x2B8EC90
	0x02B8EC8C BL 0x1C5C684
	0x02B8EC90 LDR W8, [X0 + 0xE0]
	0x02B8EC94 CBNZ W8, 0x2B8EC9C
	0x02B8EC98 BL 0x1C16DFC
	0x02B8EC9C LDR X0, [X23 + 0x20]
	0x02B8ECA0 ADD W9, W20, W22
	0x02B8ECA4 SUB W23, W9, 0x1
	0x02B8ECA8 UBFM W22, W24, 0x1F, 0x1E
	0x02B8ECAC LDRB W8, [X0 + 0x135]
	0x02B8ECB0 TBNZ X8, 0x0, 0x2B8ECB8
	0x02B8ECB4 BL 0x1C5C684
	0x02B8ECB8 LDR X8, [X0 + 0xC0]
	0x02B8ECBC MOV X0, X21
	0x02B8ECC0 MOV W1, W20
	0x02B8ECC4 MOV W2, W23
	0x02B8ECC8 LDR X5, [X8 + 0x68]
	0x02B8ECCC MOV W3, W22
	0x02B8ECD0 MOV X4, X19
	0x02B8ECD4 LDP X20, X19, [X31 + 0x30]
	0x02B8ECD8 LDP X22, X21, [X31 + 0x20]
	0x02B8ECDC LDP X24, X23, [X31 + 0x10]
	0x02B8ECE0 LDR X30, [X31], #0x40
	0x02B8ECE4 B 0x2B8ECEC
	0x02B8ECE8 RET
	0x02B8ECEC STP X30, X25, [X31 - 0x40]!
	0x02B8ECF0 STP X24, X23, [X31 + 0x10]
	0x02B8ECF4 STP X22, X21, [X31 + 0x20]
	0x02B8ECF8 STP X20, X19, [X31 + 0x30]
	0x02B8ECFC CMP W2, W1
	0x02B8ED00 B.LE 0x2B8EE48
	0x02B8ED04 MOV X23, X5
	0x02B8ED08 MOV X19, X4
	0x02B8ED0C MOV W20, W2
	0x02B8ED10 MOV W22, W1
	0x02B8ED14 MOV X21, X0
	0x02B8ED18 SUB W24, W3, 0x1
	0x02B8ED1C SUB W8, W20, W22
	0x02B8ED20 ADD W9, W8, 0x1
	0x02B8ED24 CMP W9, 0x10
	0x02B8ED28 B.LE 0x2B8EDE0
	0x02B8ED2C ADDS W31, W24, 0x1
	0x02B8ED30 B.EQ 0x2B8EE5C
	0x02B8ED34 LDR X0, [X23 + 0x20]
	0x02B8ED38 LDRB W8, [X0 + 0x135]
	0x02B8ED3C TBNZ X8, 0x0, 0x2B8ED44
	0x02B8ED40 BL 0x1C5C684
	0x02B8ED44 LDR X8, [X0 + 0xC0]
	0x02B8ED48 LDR X0, [X8 + 0x48]
	0x02B8ED4C LDRB W8, [X0 + 0x135]
	0x02B8ED50 TBNZ X8, 0x0, 0x2B8ED58
	0x02B8ED54 BL 0x1C5C684
	0x02B8ED58 LDR W8, [X0 + 0xE0]
	0x02B8ED5C CBNZ W8, 0x2B8ED64
	0x02B8ED60 BL 0x1C16DFC
	0x02B8ED64 LDR X0, [X23 + 0x20]
	0x02B8ED68 LDRB W8, [X0 + 0x135]
	0x02B8ED6C TBNZ X8, 0x0, 0x2B8ED74
	0x02B8ED70 BL 0x1C5C684
	0x02B8ED74 LDR X8, [X0 + 0xC0]
	0x02B8ED78 MOV X0, X21
	0x02B8ED7C MOV W1, W22
	0x02B8ED80 MOV W2, W20
	0x02B8ED84 LDR X4, [X8 + 0x88]
	0x02B8ED88 MOV X3, X19
	0x02B8ED8C BL 0x2B8EFFC
	0x02B8ED90 LDR X8, [X23 + 0x20]
	0x02B8ED94 MOV W25, W0
	0x02B8ED98 LDRB W9, [X8 + 0x135]
	0x02B8ED9C TBNZ X9, 0x0, 0x2B8EDAC
	0x02B8EDA0 MOV X0, X8
	0x02B8EDA4 BL 0x1C5C684
	0x02B8EDA8 MOV X8, X0
	0x02B8EDAC LDR X8, [X8 + 0xC0]
	0x02B8EDB0 ADD W1, W25, 0x1
	0x02B8EDB4 MOV X0, X21
	0x02B8EDB8 MOV W2, W20
	0x02B8EDBC LDR X5, [X8 + 0x68]
	0x02B8EDC0 MOV W3, W24
	0x02B8EDC4 MOV X4, X19
	0x02B8EDC8 BL 0x2B8ECEC
	0x02B8EDCC SUB W20, W25, 0x1
	0x02B8EDD0 CMP W20, W22
	0x02B8EDD4 SUB W24, W24, 0x1
	0x02B8EDD8 B.GT 0x2B8ED1C
	0x02B8EDDC B 0x2B8EE48
	0x02B8EDE0 CBZ W8, 0x2B8EE48
	0x02B8EDE4 CMP W8, 0x2
	0x02B8EDE8 B.EQ 0x2B8EEC8
	0x02B8EDEC CMP W8, 0x1
	0x02B8EDF0 B.NE 0x2B8EF90
	0x02B8EDF4 LDR X0, [X23 + 0x20]
	0x02B8EDF8 LDRB W8, [X0 + 0x135]
	0x02B8EDFC TBNZ X8, 0x0, 0x2B8EE04
	0x02B8EE00 BL 0x1C5C684
	0x02B8EE04 LDR X8, [X0 + 0xC0]
	0x02B8EE08 LDR X0, [X8 + 0x48]
	0x02B8EE0C LDRB W8, [X0 + 0x135]
	0x02B8EE10 TBNZ X8, 0x0, 0x2B8EE18
	0x02B8EE14 BL 0x1C5C684
	0x02B8EE18 LDR W8, [X0 + 0xE0]
	0x02B8EE1C CBNZ W8, 0x2B8EE24
	0x02B8EE20 BL 0x1C16DFC
	0x02B8EE24 LDR X0, [X23 + 0x20]
	0x02B8EE28 LDRB W8, [X0 + 0x135]
	0x02B8EE2C TBNZ X8, 0x0, 0x2B8EE34
	0x02B8EE30 BL 0x1C5C684
	0x02B8EE34 LDR X8, [X0 + 0xC0]
	0x02B8EE38 MOV X0, X21
	0x02B8EE3C MOV X1, X19
	0x02B8EE40 MOV W2, W22
	0x02B8EE44 B 0x2B8EF74
	0x02B8EE48 LDP X20, X19, [X31 + 0x30]
	0x02B8EE4C LDP X22, X21, [X31 + 0x20]
	0x02B8EE50 LDP X24, X23, [X31 + 0x10]
	0x02B8EE54 LDP X30, X25, [X31], #0x40
	0x02B8EE58 RET
	0x02B8EE5C LDR X0, [X23 + 0x20]
	0x02B8EE60 LDRB W8, [X0 + 0x135]
	0x02B8EE64 TBNZ X8, 0x0, 0x2B8EE6C
	0x02B8EE68 BL 0x1C5C684
	0x02B8EE6C LDR X8, [X0 + 0xC0]
	0x02B8EE70 LDR X0, [X8 + 0x48]
	0x02B8EE74 LDRB W8, [X0 + 0x135]
	0x02B8EE78 TBNZ X8, 0x0, 0x2B8EE80
	0x02B8EE7C BL 0x1C5C684
	0x02B8EE80 LDR W8, [X0 + 0xE0]
	0x02B8EE84 CBNZ W8, 0x2B8EE8C
	0x02B8EE88 BL 0x1C16DFC
	0x02B8EE8C LDR X0, [X23 + 0x20]
	0x02B8EE90 LDRB W8, [X0 + 0x135]
	0x02B8EE94 TBNZ X8, 0x0, 0x2B8EE9C
	0x02B8EE98 BL 0x1C5C684
	0x02B8EE9C LDR X8, [X0 + 0xC0]
	0x02B8EEA0 MOV X0, X21
	0x02B8EEA4 MOV W1, W22
	0x02B8EEA8 MOV W2, W20
	0x02B8EEAC LDR X4, [X8 + 0x80]
	0x02B8EEB0 MOV X3, X19
	0x02B8EEB4 LDP X20, X19, [X31 + 0x30]
	0x02B8EEB8 LDP X22, X21, [X31 + 0x20]
	0x02B8EEBC LDP X24, X23, [X31 + 0x10]
	0x02B8EEC0 LDP X30, X25, [X31], #0x40
	0x02B8EEC4 B 0x2B8F28C
	0x02B8EEC8 LDR X0, [X23 + 0x20]
	0x02B8EECC LDRB W8, [X0 + 0x135]
	0x02B8EED0 TBNZ X8, 0x0, 0x2B8EED8
	0x02B8EED4 BL 0x1C5C684
	0x02B8EED8 LDR X8, [X0 + 0xC0]
	0x02B8EEDC LDR X0, [X8 + 0x48]
	0x02B8EEE0 LDRB W8, [X0 + 0x135]
	0x02B8EEE4 TBNZ X8, 0x0, 0x2B8EEEC
	0x02B8EEE8 BL 0x1C5C684
	0x02B8EEEC LDR W8, [X0 + 0xE0]
	0x02B8EEF0 CBNZ W8, 0x2B8EEF8
	0x02B8EEF4 BL 0x1C16DFC
	0x02B8EEF8 LDR X0, [X23 + 0x20]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, X0
	011 Move X0, [X4+32]
	012 Subtract W9, W2, W1
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move X21, X4
	015 Move W8, [X0+309]
	016 Move X22, X3
	017 Move W23, W2
	018 Move W19, W1
	019 NotImplemented "Instruction CINC not yet implemented."
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {25}
	024 Call 0x1C5D684
	025 Move X8, [X0+192]
	026 Move X0, [X8+72]
	027 Move W8, [X0+309]
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {33}
	032 Call 0x1C5D684
	033 Move W8, [X0+224]
	034 Add W25, W19, W24
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X0, [X21+32]
	039 Move W8, [X0+309]
	040 Move TEMP, X8
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {45}
	044 Call 0x1C5D684
	045 Move X8, [X0+192]
	046 Move X0, X20
	047 Move X1, X22
	048 Move W2, W19
	049 Move X4, [X8+112]
	050 Move W3, W25
	051 Call 0x2B8E768, X0, X1, X2, X3
	052 Move X0, [X21+32]
	053 Move W8, [X0+309]
	054 Move TEMP, X8
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {59}
	058 Call 0x1C5D684
	059 Move X8, [X0+192]
	060 Move X0, X20
	061 Move X1, X22
	062 Move W2, W19
	063 Move X4, [X8+112]
	064 Move W3, W23
	065 Call 0x2B8E768, X0, X1, X2, X3
	066 Move X0, [X21+32]
	067 Move W8, [X0+309]
	068 Move TEMP, X8
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfEqual {73}
	072 Call 0x1C5D684
	073 Move X8, [X0+192]
	074 Move X0, X20
	075 Move X1, X22
	076 Move W2, W25
	077 Move X4, [X8+112]
	078 Move W3, W23
	079 Call 0x2B8E768, X0, X1, X2, X3
	080 Compare X20, 0
	081 JumpIfEqual {219}
	082 Move W8, [X20+24]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X0, [X21+32]
	085 Add X8, X20, W25
	086 Move X24, [X8+32]
	087 Subtract W23, W23, 1
	088 Move W9, [X0+309]
	089 Move TEMP, X9
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfEqual {94}
	093 Call 0x1C5D684
	094 Move X0, X20
	095 Move W1, W25
	096 Move W2, W23
	097 Call 0x2B8E840, X0, X1, X2
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move W25, W23
	100 Move W8, [X20+24]
	101 Add W19, W19, 1
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Compare X22, 0
	104 JumpIfEqual {219}
	105 Move X0, [X21+32]
	106 Add X8, X20, W19
	107 Move X26, [X8+32]
	108 Move W9, [X0+309]
	109 Move TEMP, X9
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfEqual {114}
	113 Call 0x1C5D684
	114 Move X8, [X22+24]
	115 Move X0, [X22+64]
	116 Move X3, [X22+40]
	117 Move X1, X26
	118 Move X2, X24
	119 NotImplemented "Instruction BLR not yet implemented."
	120 Move TEMP, X0
	121 And TEMP, TEMP, -2147483648
	122 Compare TEMP, -2147483648
	123 JumpIfEqual {100}
	124 Move W8, [X20+24]
	125 Subtract W25, W25, 1
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move X0, [X21+32]
	128 Add X8, X20, W25
	129 Move X26, [X8+32]
	130 Move W9, [X0+309]
	131 Move TEMP, X9
	132 And TEMP, TEMP, 1
	133 Compare TEMP, 1
	134 JumpIfEqual {136}
	135 Call 0x1C5D684
	136 Move X8, [X22+24]
	137 Move X0, [X22+64]
	138 Move X3, [X22+40]
	139 Move X1, X24
	140 Move X2, X26
	141 NotImplemented "Instruction BLR not yet implemented."
	142 Move TEMP, X0
	143 And TEMP, TEMP, -2147483648
	144 Compare TEMP, -2147483648
	145 JumpIfEqual {124}
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Move X0, [X21+32]
	148 Move W8, [X0+309]
	149 Move TEMP, X8
	150 And TEMP, TEMP, 1
	151 Compare TEMP, 1
	152 JumpIfEqual {154}
	153 Call 0x1C5D684
	154 Move X8, [X0+192]
	155 Move X0, [X8+72]
	156 Move W8, [X0+309]
	157 Move TEMP, X8
	158 And TEMP, TEMP, 1
	159 Compare TEMP, 1
	160 JumpIfEqual {162}
	161 Call 0x1C5D684
	162 Move W8, [X0+224]
	163 Compare W8, 0
	164 JumpIfNotEqual {166}
	165 Call 0x1C17DFC
	166 Move X0, [X21+32]
	167 Move W8, [X0+309]
	168 Move TEMP, X8
	169 And TEMP, TEMP, 1
	170 Compare TEMP, 1
	171 JumpIfEqual {173}
	172 Call 0x1C5D684
	173 Move X0, X20
	174 Move W1, W19
	175 Move W2, W25
	176 Call 0x2B8E840, X0, X1, X2
	177 Move X0, [X21+32]
	178 Move W8, [X0+309]
	179 Move TEMP, X8
	180 And TEMP, TEMP, 1
	181 Compare TEMP, 1
	182 JumpIfEqual {184}
	183 Call 0x1C5D684
	184 Move X8, [X0+192]
	185 Move X0, [X8+72]
	186 Move W8, [X0+309]
	187 Move TEMP, X8
	188 And TEMP, TEMP, 1
	189 Compare TEMP, 1
	190 JumpIfEqual {192}
	191 Call 0x1C5D684
	192 Move W8, [X0+224]
	193 Compare W8, 0
	194 JumpIfNotEqual {196}
	195 Call 0x1C17DFC
	196 Move X0, [X21+32]
	197 Move W8, [X0+309]
	198 Move TEMP, X8
	199 And TEMP, TEMP, 1
	200 Compare TEMP, 1
	201 JumpIfEqual {203}
	202 Call 0x1C5D684
	203 Move X0, X20
	204 Move W1, W19
	205 Move W2, W23
	206 Call 0x2B8E840, X0, X1, X2
	207 Move W0, W19
	208 Move X20, [X31+64]
	209 Move X19, [X31+72]
	210 Move X22, [X31+48]
	211 Move X21, [X31+56]
	212 Move X24, [X31+32]
	213 Move X23, [X31+40]
	214 Move X26, [X31+16]
	215 Move X25, [X31+24]
	216 Move X30, [X31+80]
	217 Return X0
	218 Call 0x1C17F28
	219 Call 0x1C17F20

Method: System.Void Heapsort(T[] keys, System.Int32 lo, System.Int32 hi, System.Comparison`1<T> comparer)

Disassembly:
	0x02B8EEFC SUB W24, W20, 0x1
	0x02B8EF00 LDRB W8, [X0 + 0x135]
	0x02B8EF04 TBNZ X8, 0x0, 0x2B8EF0C
	0x02B8EF08 BL 0x1C5C684
	0x02B8EF0C LDR X8, [X0 + 0xC0]
	0x02B8EF10 MOV X0, X21
	0x02B8EF14 MOV X1, X19
	0x02B8EF18 MOV W2, W22
	0x02B8EF1C LDR X4, [X8 + 0x70]
	0x02B8EF20 MOV W3, W24
	0x02B8EF24 BL 0x2B8EAF8
	0x02B8EF28 LDR X0, [X23 + 0x20]
	0x02B8EF2C LDRB W8, [X0 + 0x135]
	0x02B8EF30 TBNZ X8, 0x0, 0x2B8EF38
	0x02B8EF34 BL 0x1C5C684
	0x02B8EF38 LDR X8, [X0 + 0xC0]
	0x02B8EF3C MOV X0, X21
	0x02B8EF40 MOV X1, X19
	0x02B8EF44 MOV W2, W22
	0x02B8EF48 LDR X4, [X8 + 0x70]
	0x02B8EF4C MOV W3, W20
	0x02B8EF50 BL 0x2B8EAF8
	0x02B8EF54 LDR X0, [X23 + 0x20]
	0x02B8EF58 LDRB W8, [X0 + 0x135]
	0x02B8EF5C TBNZ X8, 0x0, 0x2B8EF64
	0x02B8EF60 BL 0x1C5C684
	0x02B8EF64 LDR X8, [X0 + 0xC0]
	0x02B8EF68 MOV X0, X21
	0x02B8EF6C MOV X1, X19
	0x02B8EF70 MOV W2, W24
	0x02B8EF74 LDR X4, [X8 + 0x70]
	0x02B8EF78 MOV W3, W20
	0x02B8EF7C LDP X20, X19, [X31 + 0x30]
	0x02B8EF80 LDP X22, X21, [X31 + 0x20]
	0x02B8EF84 LDP X24, X23, [X31 + 0x10]
	0x02B8EF88 LDP X30, X25, [X31], #0x40
	0x02B8EF8C B 0x2B8EAF8
	0x02B8EF90 LDR X0, [X23 + 0x20]
	0x02B8EF94 LDRB W8, [X0 + 0x135]
	0x02B8EF98 TBNZ X8, 0x0, 0x2B8EFA0
	0x02B8EF9C BL 0x1C5C684
	0x02B8EFA0 LDR X8, [X0 + 0xC0]
	0x02B8EFA4 LDR X0, [X8 + 0x48]
	0x02B8EFA8 LDRB W8, [X0 + 0x135]
	0x02B8EFAC TBNZ X8, 0x0, 0x2B8EFB4
	0x02B8EFB0 BL 0x1C5C684
	0x02B8EFB4 LDR W8, [X0 + 0xE0]
	0x02B8EFB8 CBNZ W8, 0x2B8EFC0
	0x02B8EFBC BL 0x1C16DFC
	0x02B8EFC0 LDR X0, [X23 + 0x20]
	0x02B8EFC4 LDRB W8, [X0 + 0x135]
	0x02B8EFC8 TBNZ X8, 0x0, 0x2B8EFD0
	0x02B8EFCC BL 0x1C5C684
	0x02B8EFD0 LDR X8, [X0 + 0xC0]
	0x02B8EFD4 MOV X0, X21
	0x02B8EFD8 MOV W1, W22
	0x02B8EFDC MOV W2, W20
	0x02B8EFE0 LDR X4, [X8 + 0x78]
	0x02B8EFE4 MOV X3, X19
	0x02B8EFE8 LDP X20, X19, [X31 + 0x30]
	0x02B8EFEC LDP X22, X21, [X31 + 0x20]
	0x02B8EFF0 LDP X24, X23, [X31 + 0x10]
	0x02B8EFF4 LDP X30, X25, [X31], #0x40
	0x02B8EFF8 B 0x2B8F578
	0x02B8EFFC STR X30, [X31 - 0x50]!
	0x02B8F000 STP X26, X25, [X31 + 0x10]
	0x02B8F004 STP X24, X23, [X31 + 0x20]
	0x02B8F008 STP X22, X21, [X31 + 0x30]
	0x02B8F00C STP X20, X19, [X31 + 0x40]
	0x02B8F010 MOV X20, X0
	0x02B8F014 LDR X0, [X4 + 0x20]
	0x02B8F018 SUB W9, W2, W1
	0x02B8F01C CMP W9, 0x0
	0x02B8F020 MOV X21, X4
	0x02B8F024 LDRB W8, [X0 + 0x135]
	0x02B8F028 MOV X22, X3
	0x02B8F02C MOV W23, W2
	0x02B8F030 MOV W19, W1
	0x02B8F034 CINC W24, W9, LT
	0x02B8F038 TBNZ X8, 0x0, 0x2B8F040
	0x02B8F03C BL 0x1C5C684
	0x02B8F040 LDR X8, [X0 + 0xC0]
	0x02B8F044 LDR X0, [X8 + 0x48]
	0x02B8F048 LDRB W8, [X0 + 0x135]
	0x02B8F04C TBNZ X8, 0x0, 0x2B8F054

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Subtract W8, W2, W1
	010 Add W24, W8, 1
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X19, X4
	013 Move X20, X3
	014 Move W21, W2
	015 Move W22, W1
	016 Move X23, X0
	017 Move W25, W24
	018 ShiftRight W25, 1
	019 And W25, W25, 0x7FFFFFFF
	020 Move X0, [X19+32]
	021 Move W8, [X0+309]
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {27}
	026 Call 0x1C5D684
	027 Move X8, [X0+192]
	028 Move X0, [X8+72]
	029 Move W8, [X0+309]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {35}
	034 Call 0x1C5D684
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, [X19+32]
	040 Move W8, [X0+309]
	041 Move TEMP, X8
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {46}
	045 Call 0x1C5D684
	046 Move X8, [X0+192]
	047 Move X0, X23
	048 Move W1, W25
	049 Move W2, W24
	050 Move X5, [X8+152]
	051 Move W3, W22
	052 Move X4, X20
	053 Call 0x2B8F050, X0, X1, X2, X3, X4
	054 Subtract W25, W25, 1
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Subtract W24, W31, W22
	057 Move X0, [X19+32]
	058 Move W8, [X0+309]
	059 Move TEMP, X8
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfEqual {64}
	063 Call 0x1C5D684
	064 Move X8, [X0+192]
	065 Move X0, [X8+72]
	066 Move W8, [X0+309]
	067 Move TEMP, X8
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfEqual {72}
	071 Call 0x1C5D684
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Move X0, [X19+32]
	077 Move W8, [X0+309]
	078 Move TEMP, X8
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfEqual {83}
	082 Call 0x1C5D684
	083 Move X0, X23
	084 Move W1, W22
	085 Move W2, W21
	086 Call 0x2B8E840, X0, X1, X2
	087 Move X0, [X19+32]
	088 Move W8, [X0+309]
	089 Move TEMP, X8
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfEqual {94}
	093 Call 0x1C5D684
	094 Move X8, [X0+192]
	095 Add W2, W24, W21
	096 Move W1, 1
	097 Move X0, X23
	098 Move X5, [X8+152]
	099 Move W3, W22
	100 Move X4, X20
	101 Call 0x2B8F050, X0, X1, X2, X3, X4
	102 Subtract W21, W21, 1
	103 Add W8, W24, W21
	104 Add W8, W8, 2
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move X20, [X31+48]
	107 Move X19, [X31+56]
	108 Move X22, [X31+32]
	109 Move X21, [X31+40]
	110 Move X24, [X31+16]
	111 Move X23, [X31+24]
	112 Move X30, [X31+64]
	113 Move X25, [X31+72]
	114 Return 

Method: System.Void DownHeap(T[] keys, System.Int32 i, System.Int32 n, System.Int32 lo, System.Comparison`1<T> comparer)

Disassembly:
	0x02B8F050 BL 0x1C5C684
	0x02B8F054 LDR W8, [X0 + 0xE0]
	0x02B8F058 ADD W25, W19, W24, 0x1, ASR
	0x02B8F05C CBNZ W8, 0x2B8F064
	0x02B8F060 BL 0x1C16DFC
	0x02B8F064 LDR X0, [X21 + 0x20]
	0x02B8F068 LDRB W8, [X0 + 0x135]
	0x02B8F06C TBNZ X8, 0x0, 0x2B8F074
	0x02B8F070 BL 0x1C5C684
	0x02B8F074 LDR X8, [X0 + 0xC0]
	0x02B8F078 MOV X0, X20
	0x02B8F07C MOV X1, X22
	0x02B8F080 MOV W2, W19
	0x02B8F084 LDR X4, [X8 + 0x70]
	0x02B8F088 MOV W3, W25
	0x02B8F08C BL 0x2B8EAF8
	0x02B8F090 LDR X0, [X21 + 0x20]
	0x02B8F094 LDRB W8, [X0 + 0x135]
	0x02B8F098 TBNZ X8, 0x0, 0x2B8F0A0
	0x02B8F09C BL 0x1C5C684
	0x02B8F0A0 LDR X8, [X0 + 0xC0]
	0x02B8F0A4 MOV X0, X20
	0x02B8F0A8 MOV X1, X22
	0x02B8F0AC MOV W2, W19
	0x02B8F0B0 LDR X4, [X8 + 0x70]
	0x02B8F0B4 MOV W3, W23
	0x02B8F0B8 BL 0x2B8EAF8
	0x02B8F0BC LDR X0, [X21 + 0x20]
	0x02B8F0C0 LDRB W8, [X0 + 0x135]
	0x02B8F0C4 TBNZ X8, 0x0, 0x2B8F0CC
	0x02B8F0C8 BL 0x1C5C684
	0x02B8F0CC LDR X8, [X0 + 0xC0]
	0x02B8F0D0 MOV X0, X20
	0x02B8F0D4 MOV X1, X22
	0x02B8F0D8 MOV W2, W25
	0x02B8F0DC LDR X4, [X8 + 0x70]
	0x02B8F0E0 MOV W3, W23
	0x02B8F0E4 BL 0x2B8EAF8
	0x02B8F0E8 CBZ X20, 0x2B8F288
	0x02B8F0EC LDR W8, [X20 + 0x18]
	0x02B8F0F0 CMP W25, W8
	0x02B8F0F4 B.CS 0x2B8F284
	0x02B8F0F8 LDR X0, [X21 + 0x20]
	0x02B8F0FC ADD X8, X20, W25, 0x3, SXTW
	0x02B8F100 LDR X24, [X8 + 0x20]
	0x02B8F104 SUB W23, W23, 0x1
	0x02B8F108 LDRB W9, [X0 + 0x135]
	0x02B8F10C TBNZ X9, 0x0, 0x2B8F114
	0x02B8F110 BL 0x1C5C684
	0x02B8F114 MOV X0, X20
	0x02B8F118 MOV W1, W25
	0x02B8F11C MOV W2, W23
	0x02B8F120 BL 0x2B8EBD0
	0x02B8F124 CMP W23, W19
	0x02B8F128 B.LE 0x2B8F218
	0x02B8F12C MOV W25, W23
	0x02B8F130 LDR W8, [X20 + 0x18]
	0x02B8F134 ADD W19, W19, 0x1
	0x02B8F138 CMP W19, W8
	0x02B8F13C B.CS 0x2B8F284
	0x02B8F140 CBZ X22, 0x2B8F288
	0x02B8F144 LDR X0, [X21 + 0x20]
	0x02B8F148 ADD X8, X20, W19, 0x3, SXTW
	0x02B8F14C LDR X26, [X8 + 0x20]
	0x02B8F150 LDRB W9, [X0 + 0x135]
	0x02B8F154 TBNZ X9, 0x0, 0x2B8F15C
	0x02B8F158 BL 0x1C5C684
	0x02B8F15C LDR X8, [X22 + 0x18]
	0x02B8F160 LDR X0, [X22 + 0x40]
	0x02B8F164 LDR X3, [X22 + 0x28]
	0x02B8F168 MOV X1, X26
	0x02B8F16C MOV X2, X24
	0x02B8F170 BLR X8
	0x02B8F174 TBNZ X0, 0x1F, 0x2B8F130
	0x02B8F178 LDR W8, [X20 + 0x18]
	0x02B8F17C SUB W25, W25, 0x1
	0x02B8F180 CMP W25, W8
	0x02B8F184 B.CS 0x2B8F284
	0x02B8F188 LDR X0, [X21 + 0x20]
	0x02B8F18C ADD X8, X20, W25, 0x3, SXTW
	0x02B8F190 LDR X26, [X8 + 0x20]
	0x02B8F194 LDRB W9, [X0 + 0x135]
	0x02B8F198 TBNZ X9, 0x0, 0x2B8F1A0
	0x02B8F19C BL 0x1C5C684
	0x02B8F1A0 LDR X8, [X22 + 0x18]
	0x02B8F1A4 LDR X0, [X22 + 0x40]
	0x02B8F1A8 LDR X3, [X22 + 0x28]
	0x02B8F1AC MOV X1, X24
	0x02B8F1B0 MOV X2, X26
	0x02B8F1B4 BLR X8
	0x02B8F1B8 TBNZ X0, 0x1F, 0x2B8F178
	0x02B8F1BC CMP W19, W25
	0x02B8F1C0 B.GE 0x2B8F218
	0x02B8F1C4 LDR X0, [X21 + 0x20]
	0x02B8F1C8 LDRB W8, [X0 + 0x135]
	0x02B8F1CC TBNZ X8, 0x0, 0x2B8F1D4
	0x02B8F1D0 BL 0x1C5C684
	0x02B8F1D4 LDR X8, [X0 + 0xC0]
	0x02B8F1D8 LDR X0, [X8 + 0x48]
	0x02B8F1DC LDRB W8, [X0 + 0x135]
	0x02B8F1E0 TBNZ X8, 0x0, 0x2B8F1E8
	0x02B8F1E4 BL 0x1C5C684

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Compare X0, 0
	015 JumpIfEqual {118}
	016 Move W8, [X0+24]
	017 Subtract W28, W3, 1
	018 Add W27, W28, W1
	019 Move W23, W1
	020 Move X19, X0
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Add X9, X19, W27
	023 Move X9, [X9+32]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W24, W2
	026 Move [X31+8], X9
	027 NotImplemented "Instruction CINC not yet implemented."
	028 NotImplemented "Instruction SBFM not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X21, X5
	031 Move X22, X4
	032 Move [X31+4], W3
	033 Move W25, W23
	034 ShiftRight W25, 31
	035 And W25, W25, 0x3FFFFFFF
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move W8, [X31+4]
	038 Move W10, [X19+24]
	039 Add W8, W25, W8
	040 Subtract W9, W8, 1
	041 NotImplemented "Instruction CMP not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Compare X22, 0
	044 JumpIfEqual {118}
	045 Move X0, [X21+32]
	046 Add X9, X19, W9
	047 Add X8, X19, W8
	048 Move X26, [X9+32]
	049 Move W9, [X0+309]
	050 Move X27, [X8+32]
	051 Move TEMP, X9
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfEqual {56}
	055 Call 0x1C5D684
	056 Move X8, [X22+24]
	057 Move X0, [X22+64]
	058 Move X3, [X22+40]
	059 Move X1, X26
	060 Move X2, X27
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Or W25, W25, W0
	063 Move W8, [X19+24]
	064 Add W27, W28, W25
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Add X20, X19, W27
	067 Add X20, X20, 32
	068 Move X26, [X20]
	069 Compare X22, 0
	070 JumpIfEqual {118}
	071 Move X0, [X21+32]
	072 Move W8, [X0+309]
	073 Move TEMP, X8
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfEqual {78}
	077 Call 0x1C5D684
	078 Move X8, [X22+24]
	079 Move X0, [X22+64]
	080 Move X3, [X22+40]
	081 Move X1, [X31+8]
	082 Move X2, X26
	083 NotImplemented "Instruction BLR not yet implemented."
	084 Move TEMP, X0
	085 And TEMP, TEMP, -2147483648
	086 Compare TEMP, -2147483648
	087 JumpIfNotEqual {97}
	088 Move W8, [X19+24]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Add W9, W28, W23
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X8, [X20]
	093 Add X9, X19, W9
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move W23, W25
	096 Move [X9+32], X8
	097 Add W27, W28, W23
	098 Move W8, [X19+24]
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X9, [X31+8]
	101 Add X8, X19, W27
	102 Move X20, [X31+96]
	103 Move X19, [X31+104]
	104 Move X22, [X31+80]
	105 Move X21, [X31+88]
	106 Move X24, [X31+64]
	107 Move X23, [X31+72]
	108 Move X26, [X31+48]
	109 Move X25, [X31+56]
	110 Move X28, [X31+32]
	111 Move X27, [X31+40]
	112 Move X29, [X31+16]
	113 Move X30, [X31+24]
	114 Move [X8+32], X9
	115 Add X31, X31, 112
	116 Return 
	117 Call 0x1C17F28
	118 Call 0x1C17F20

Method: System.Void InsertionSort(T[] keys, System.Int32 lo, System.Int32 hi, System.Comparison`1<T> comparer)

Disassembly:
	0x02B8F1E8 LDR W8, [X0 + 0xE0]
	0x02B8F1EC CBNZ W8, 0x2B8F1F4
	0x02B8F1F0 BL 0x1C16DFC
	0x02B8F1F4 LDR X0, [X21 + 0x20]
	0x02B8F1F8 LDRB W8, [X0 + 0x135]
	0x02B8F1FC TBNZ X8, 0x0, 0x2B8F204
	0x02B8F200 BL 0x1C5C684
	0x02B8F204 MOV X0, X20
	0x02B8F208 MOV W1, W19
	0x02B8F20C MOV W2, W25
	0x02B8F210 BL 0x2B8EBD0
	0x02B8F214 B 0x2B8F130
	0x02B8F218 LDR X0, [X21 + 0x20]
	0x02B8F21C LDRB W8, [X0 + 0x135]
	0x02B8F220 TBNZ X8, 0x0, 0x2B8F228
	0x02B8F224 BL 0x1C5C684
	0x02B8F228 LDR X8, [X0 + 0xC0]
	0x02B8F22C LDR X0, [X8 + 0x48]
	0x02B8F230 LDRB W8, [X0 + 0x135]
	0x02B8F234 TBNZ X8, 0x0, 0x2B8F23C
	0x02B8F238 BL 0x1C5C684
	0x02B8F23C LDR W8, [X0 + 0xE0]
	0x02B8F240 CBNZ W8, 0x2B8F248
	0x02B8F244 BL 0x1C16DFC
	0x02B8F248 LDR X0, [X21 + 0x20]
	0x02B8F24C LDRB W8, [X0 + 0x135]
	0x02B8F250 TBNZ X8, 0x0, 0x2B8F258
	0x02B8F254 BL 0x1C5C684
	0x02B8F258 MOV X0, X20
	0x02B8F25C MOV W1, W19
	0x02B8F260 MOV W2, W23
	0x02B8F264 BL 0x2B8EBD0
	0x02B8F268 MOV W0, W19
	0x02B8F26C LDP X20, X19, [X31 + 0x40]
	0x02B8F270 LDP X22, X21, [X31 + 0x30]
	0x02B8F274 LDP X24, X23, [X31 + 0x20]
	0x02B8F278 LDP X26, X25, [X31 + 0x10]
	0x02B8F27C LDR X30, [X31], #0x50
	0x02B8F280 RET
	0x02B8F284 BL 0x1C16F28
	0x02B8F288 BL 0x1C16F20
	0x02B8F28C STP X30, X25, [X31 - 0x40]!
	0x02B8F290 STP X24, X23, [X31 + 0x10]
	0x02B8F294 STP X22, X21, [X31 + 0x20]
	0x02B8F298 STP X20, X19, [X31 + 0x30]
	0x02B8F29C SUB W8, W2, W1
	0x02B8F2A0 ADD W24, W8, 0x1
	0x02B8F2A4 CMP W24, 0x2
	0x02B8F2A8 B.LT 0x2B8F3CC
	0x02B8F2AC MOV X19, X4
	0x02B8F2B0 MOV X20, X3
	0x02B8F2B4 MOV W21, W2
	0x02B8F2B8 MOV W22, W1
	0x02B8F2BC MOV X23, X0
	0x02B8F2C0 UBFM W25, W24, 0x1, 0x1F
	0x02B8F2C4 LDR X0, [X19 + 0x20]
	0x02B8F2C8 LDRB W8, [X0 + 0x135]
	0x02B8F2CC TBNZ X8, 0x0, 0x2B8F2D4
	0x02B8F2D0 BL 0x1C5C684
	0x02B8F2D4 LDR X8, [X0 + 0xC0]
	0x02B8F2D8 LDR X0, [X8 + 0x48]
	0x02B8F2DC LDRB W8, [X0 + 0x135]
	0x02B8F2E0 TBNZ X8, 0x0, 0x2B8F2E8
	0x02B8F2E4 BL 0x1C5C684
	0x02B8F2E8 LDR W8, [X0 + 0xE0]
	0x02B8F2EC CBNZ W8, 0x2B8F2F4
	0x02B8F2F0 BL 0x1C16DFC
	0x02B8F2F4 LDR X0, [X19 + 0x20]
	0x02B8F2F8 LDRB W8, [X0 + 0x135]
	0x02B8F2FC TBNZ X8, 0x0, 0x2B8F304
	0x02B8F300 BL 0x1C5C684
	0x02B8F304 LDR X8, [X0 + 0xC0]
	0x02B8F308 MOV X0, X23
	0x02B8F30C MOV W1, W25

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move X22, X0
	015 Compare X0, 0
	016 JumpIfEqual {84}
	017 Move W21, W1
	018 Move X25, W21
	019 Move X19, X4
	020 Move X20, X3
	021 Move X26, W2
	022 Move X28, X25
	023 Move X8, [X22+24]
	024 Add X27, X28, 1
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Add X9, X22, X27
	027 Move X23, [X9+32]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Add X29, X22, W28
	031 Add X29, X29, 32
	032 Move X24, [X29]
	033 Compare X20, 0
	034 JumpIfEqual {84}
	035 Move X0, [X19+32]
	036 Move W8, [X0+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {42}
	041 Call 0x1C5D684
	042 Move X8, [X20+24]
	043 Move X0, [X20+64]
	044 Move X3, [X20+40]
	045 Move X1, X23
	046 Move X2, X24
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Move TEMP, X0
	049 And TEMP, TEMP, -2147483648
	050 Compare TEMP, -2147483648
	051 JumpIfNotEqual {63}
	052 Move W8, [X22+24]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Add W9, W28, 1
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X8, [X29]
	057 Subtract W28, W28, 1
	058 Add X9, X22, W9
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move [X9+32], X8
	061 Move W8, [X22+24]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move W8, [X22+24]
	064 Add W9, W28, 1
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Add X8, X22, W9
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X28, X27
	069 Move [X8+32], X23
	070 Move X20, [X31+80]
	071 Move X19, [X31+88]
	072 Move X22, [X31+64]
	073 Move X21, [X31+72]
	074 Move X24, [X31+48]
	075 Move X23, [X31+56]
	076 Move X26, [X31+32]
	077 Move X25, [X31+40]
	078 Move X28, [X31+16]
	079 Move X27, [X31+24]
	080 Move X29, [X31+96]
	081 Move X30, [X31+104]
	082 Return 
	083 Call 0x1C17F28
	084 Call 0x1C17F20

Method: System.Collections.Generic.ArraySortHelper`1<T> get_Default()

Disassembly:
	0x02B8F310 MOV W2, W24
	0x02B8F314 LDR X5, [X8 + 0x98]
	0x02B8F318 MOV W3, W22
	0x02B8F31C MOV X4, X20
	0x02B8F320 BL 0x2B8F3E0
	0x02B8F324 SUBS W25, W25, 0x1
	0x02B8F328 B.GT 0x2B8F2C4
	0x02B8F32C CMP W24, 0x2
	0x02B8F330 B.LT 0x2B8F3CC
	0x02B8F334 SUB W24, W31, W22
	0x02B8F338 LDR X0, [X19 + 0x20]
	0x02B8F33C LDRB W8, [X0 + 0x135]
	0x02B8F340 TBNZ X8, 0x0, 0x2B8F348
	0x02B8F344 BL 0x1C5C684
	0x02B8F348 LDR X8, [X0 + 0xC0]
	0x02B8F34C LDR X0, [X8 + 0x48]
	0x02B8F350 LDRB W8, [X0 + 0x135]
	0x02B8F354 TBNZ X8, 0x0, 0x2B8F35C
	0x02B8F358 BL 0x1C5C684
	0x02B8F35C LDR W8, [X0 + 0xE0]
	0x02B8F360 CBNZ W8, 0x2B8F368
	0x02B8F364 BL 0x1C16DFC
	0x02B8F368 LDR X0, [X19 + 0x20]
	0x02B8F36C LDRB W8, [X0 + 0x135]
	0x02B8F370 TBNZ X8, 0x0, 0x2B8F378
	0x02B8F374 BL 0x1C5C684
	0x02B8F378 MOV X0, X23

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+32]
	005 Move W8, [X0+309]
	006 Move TEMP, X8
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfEqual {11}
	010 Call 0x1C5D684
	011 Move X8, [X0+192]
	012 Move X0, [X8+72]
	013 Move W8, [X0+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {19}
	018 Call 0x1C5D684
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Move X0, [X19+32]
	024 Move W8, [X0+309]
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {30}
	029 Call 0x1C5D684
	030 Move X8, [X0+192]
	031 Move X0, [X8+72]
	032 Move W8, [X0+309]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {38}
	037 Call 0x1C5D684
	038 Move X8, [X0+184]
	039 Move X0, [X8]
	040 Move X30, [X31+16]
	041 Move X19, [X31+24]
	042 Return X0

Method: System.Void .ctor()

Disassembly:
	0x02B8F37C MOV W1, W22
	0x02B8F380 MOV W2, W21

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void .cctor()

Disassembly:
	0x02B8F384 BL 0x2B8EBD0
	0x02B8F388 LDR X0, [X19 + 0x20]
	0x02B8F38C LDRB W8, [X0 + 0x135]
	0x02B8F390 TBNZ X8, 0x0, 0x2B8F398
	0x02B8F394 BL 0x1C5C684
	0x02B8F398 LDR X8, [X0 + 0xC0]
	0x02B8F39C ADD W2, W24, W21
	0x02B8F3A0 MOVZ W1, 0x1
	0x02B8F3A4 MOV X0, X23
	0x02B8F3A8 LDR X5, [X8 + 0x98]
	0x02B8F3AC MOV W3, W22
	0x02B8F3B0 MOV X4, X20
	0x02B8F3B4 BL 0x2B8F3E0
	0x02B8F3B8 SUB W21, W21, 0x1
	0x02B8F3BC ADD W8, W24, W21
	0x02B8F3C0 ADD W8, W8, 0x2
	0x02B8F3C4 CMP W8, 0x2
	0x02B8F3C8 B.GT 0x2B8F338
	0x02B8F3CC LDP X20, X19, [X31 + 0x30]
	0x02B8F3D0 LDP X22, X21, [X31 + 0x20]
	0x02B8F3D4 LDP X24, X23, [X31 + 0x10]
	0x02B8F3D8 LDP X30, X25, [X31], #0x40
	0x02B8F3DC RET
	0x02B8F3E0 SUB X31, X31, 0x70
	0x02B8F3E4 STP X29, X30, [X31 + 0x10]
	0x02B8F3E8 STP X28, X27, [X31 + 0x20]
	0x02B8F3EC STP X26, X25, [X31 + 0x30]
	0x02B8F3F0 STP X24, X23, [X31 + 0x40]
	0x02B8F3F4 STP X22, X21, [X31 + 0x50]
	0x02B8F3F8 STP X20, X19, [X31 + 0x60]
	0x02B8F3FC CBZ X0, 0x2B8F574
	0x02B8F400 LDR W8, [X0 + 0x18]
	0x02B8F404 SUB W28, W3, 0x1
	0x02B8F408 ADD W27, W28, W1
	0x02B8F40C MOV W23, W1
	0x02B8F410 MOV X19, X0
	0x02B8F414 CMP W27, W8
	0x02B8F418 B.CS 0x2B8F570
	0x02B8F41C ADD X9, X19, W27, 0x3, SXTW
	0x02B8F420 LDR X9, [X9 + 0x20]
	0x02B8F424 CMP W2, 0x0
	0x02B8F428 MOV W24, W2
	0x02B8F42C STR X9, [X31 + 0x8]
	0x02B8F430 CINC W9, W2, LT
	0x02B8F434 SBFM W29, W9, 0x1, 0x1F
	0x02B8F438 CMP W29, W23
	0x02B8F43C B.LT 0x2B8F53C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+32]
	006 Move W8, [X0+309]
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {12}
	011 Call 0x1C5D684
	012 Move X8, [X0+192]
	013 Move X0, [X8+160]
	014 Move W8, [X0+309]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {20}
	019 Call 0x1C5D684
	020 Call 0x1C17F10
	021 Move X8, [X19+32]
	022 Move X20, X0
	023 Move W9, [X8+309]
	024 Move TEMP, X9
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {30}
	028 Move X0, X8
	029 Call 0x1C5D684
	030 Move X0, X20
	031 Move X1, X31
	032 Call Object..ctor, X0
	033 Move X0, [X19+32]
	034 Move W8, [X0+309]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {40}
	039 Call 0x1C5D684
	040 Move X8, [X0+192]
	041 Move X0, [X8+72]
	042 Move W8, [X0+309]
	043 Move TEMP, X8
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {48}
	047 Call 0x1C5D684
	048 Move X8, [X0+184]
	049 Move [X8], X20
	050 Move X0, [X19+32]
	051 Move W8, [X0+309]
	052 Move TEMP, X8
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {57}
	056 Call 0x1C5D684
	057 Move X8, [X0+192]
	058 Move X0, [X8+72]
	059 Move W8, [X0+309]
	060 Move TEMP, X8
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {69}
	064 Move X20, [X31+16]
	065 Move X19, [X31+24]
	066 Move X30, [X31+32]
	067 Call 0x1C5D684
	068 Return 
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move X30, [X31+32]
	072 Return 

