Type: System.Collections.Generic.LowLevelListWithIList`1

Method: System.Void .ctor()

Disassembly:
	0x0319BF58 MOV X0, X19
	0x0319BF5C MOV W1, W21
	0x0319BF60 LDR X8, [X8 + 0xC0]
	0x0319BF64 LDR X2, [X8 + 0x90]
	0x0319BF68 BL 0x319C11C
	0x0319BF6C LDP X20, X19, [X31 + 0x10]
	0x0319BF70 ORN W8, W31, W21, 0x0
	0x0319BF74 UBFM W0, W8, 0x1F, 0x1F
	0x0319BF78 LDP X30, X21, [X31], #0x20
	0x0319BF7C RET
	0x0319BF80 STR X30, [X31 - 0x30]!
	0x0319BF84 STP X22, X21, [X31 + 0x10]
	0x0319BF88 STP X20, X19, [X31 + 0x20]
	0x0319BF8C CBZ X1, 0x319C0DC
	0x0319BF90 LDR W8, [X0 + 0x18]
	0x0319BF94 MOV X20, X1
	0x0319BF98 MOV X19, X0
	0x0319BF9C CMP W8, 0x1
	0x0319BFA0 B.LT 0x319BFEC
	0x0319BFA4 MOV X22, X31
	0x0319BFA8 LDR X8, [X19 + 0x10]
	0x0319BFAC CBZ X8, 0x319C0D8
	0x0319BFB0 LDR W9, [X8 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+32]
	005 Move X19, X1
	006 Move X20, X0
	007 Move X8, [X8+192]
	008 Move X8, [X8+8]
	009 Move W9, [X8+309]
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X8
	015 Call 0x1C5D684
	016 Move X8, X0
	017 Move W9, [X8+224]
	018 Compare W9, 0
	019 JumpIfNotEqual {22}
	020 Move X0, X8
	021 Call 0x1C17DFC
	022 Move X8, [X19+32]
	023 Move X0, X20
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X8, [X8+192]
	027 Move X1, [X8]
	028 Move X30, [X31+32]
	029 Call 0x319C308, X0
	030 Return 

Method: System.Void .ctor(System.Int32 capacity)

Disassembly:
	0x0319BFB4 CMP X22, X9
	0x0319BFB8 B.CS 0x319C0D4
	0x0319BFBC ADD X8, X8, X22, 0x3, LSL
	0x0319BFC0 LDR X9, [X20 + 0x18]
	0x0319BFC4 LDR X0, [X20 + 0x40]
	0x0319BFC8 LDR X1, [X8 + 0x20]
	0x0319BFCC LDR X2, [X20 + 0x28]
	0x0319BFD0 BLR X9
	0x0319BFD4 TBNZ X0, 0x0, 0x319BFF4
	0x0319BFD8 LDRSW X8, [X19 + 0x18]
	0x0319BFDC ADD X22, X22, 0x1
	0x0319BFE0 CMP X22, X8
	0x0319BFE4 B.LT 0x319BFA8
	0x0319BFE8 B 0x319BFF8
	0x0319BFEC MOV W22, W31
	0x0319BFF0 B 0x319BFF8
	0x0319BFF4 LDR W8, [X19 + 0x18]
	0x0319BFF8 CMP W22, W8
	0x0319BFFC B.GE 0x319C098
	0x0319C000 MOV W21, W22
	0x0319C004 ADD W22, W22, 0x1
	0x0319C008 CMP W22, W8
	0x0319C00C B.GE 0x319C0A0
	0x0319C010 SXTW X22, W22
	0x0319C014 LDR X8, [X19 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X20, X2
	007 Move W19, W1
	008 Move X21, X0
	009 Move X8, [X8+192]
	010 Move X8, [X8+8]
	011 Move W9, [X8+309]
	012 Move TEMP, X9
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {19}
	016 Move X0, X8
	017 Call 0x1C5D684
	018 Move X8, X0
	019 Move W9, [X8+224]
	020 Compare W9, 0
	021 JumpIfNotEqual {24}
	022 Move X0, X8
	023 Call 0x1C17DFC
	024 Move X8, [X20+32]
	025 Move W1, W19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X0, X21
	029 Move X8, [X8+192]
	030 Move X2, [X8+16]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Call 0x319C374, X0, X1
	034 Return 

Method: System.Boolean System.Collections.Generic.ICollection<T>.get_IsReadOnly()

Disassembly:
	0x0319C018 CBZ X8, 0x319C0D8
	0x0319C01C LDR W9, [X8 + 0x18]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Collections.Generic.IEnumerator`1<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()

Disassembly:
	0x0319C020 CMP W22, W9
	0x0319C024 B.CS 0x319C0D4
	0x0319C028 ADD X8, X8, X22, 0x3, LSL
	0x0319C02C LDR X9, [X20 + 0x18]
	0x0319C030 LDR X0, [X20 + 0x40]
	0x0319C034 LDR X1, [X8 + 0x20]
	0x0319C038 LDR X2, [X20 + 0x28]
	0x0319C03C BLR X9
	0x0319C040 TBZ X0, 0x0, 0x319C058
	0x0319C044 LDRSW X8, [X19 + 0x18]
	0x0319C048 ADD X22, X22, 0x1
	0x0319C04C CMP X22, X8
	0x0319C050 B.LT 0x319C014
	0x0319C054 B 0x319C05C
	0x0319C058 LDR W8, [X19 + 0x18]
	0x0319C05C CMP W22, W8
	0x0319C060 B.GE 0x319C008
	0x0319C064 LDR X9, [X19 + 0x10]
	0x0319C068 CBZ X9, 0x319C0D8
	0x0319C06C LDR W10, [X9 + 0x18]
	0x0319C070 CMP W22, W10
	0x0319C074 B.CS 0x319C0D4
	0x0319C078 CMP W21, W10

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move [X31+24], X31
	005 Move [X31+32], X31
	006 Move [X31+40], X31
	007 Move X8, [X1+32]
	008 Move X19, X1
	009 Move X1, X0
	010 Add X0, X31, 24
	011 Move X8, [X8+192]
	012 Move X2, [X8+32]
	013 Call 0x2BC54CC, X0, X1
	014 NotImplemented "Instruction LDUR not yet implemented."
	015 Move X8, [X31+40]
	016 Add X1, X31, 0
	017 Move [X31], V0
	018 Move [X31+16], X8
	019 Move X8, [X19+32]
	020 Move X8, [X8+192]
	021 Move X0, [X8+24]
	022 Call 0x1C17E04
	023 Move X30, [X31+48]
	024 Move X19, [X31+56]
	025 Add X31, X31, 64
	026 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x0319C07C B.CS 0x319C0D4
	0x0319C080 ADD X9, X9, 0x20
	0x0319C084 LDR X10, [X9, W22, SXTW]
	0x0319C088 ADD W11, W21, 0x1
	0x0319C08C STR X10, [X9, W21, SXTW]
	0x0319C090 MOV W21, W11
	0x0319C094 B 0x319C004
	0x0319C098 MOV W0, W31
	0x0319C09C B 0x319C0C4
	0x0319C0A0 LDR X0, [X19 + 0x10]
	0x0319C0A4 SUB W2, W8, W21
	0x0319C0A8 MOV W1, W21
	0x0319C0AC MOV X3, X31
	0x0319C0B0 BL 0x339FA34
	0x0319C0B4 LDP W9, W8, [X19 + 0x18]
	0x0319C0B8 ADD W8, W8, 0x1
	0x0319C0BC SUB W0, W9, W21
	0x0319C0C0 STP W21, W8, [X19 + 0x18]
	0x0319C0C4 LDP X20, X19, [X31 + 0x20]
	0x0319C0C8 LDP X22, X21, [X31 + 0x10]
	0x0319C0CC LDR X30, [X31], #0x30
	0x0319C0D0 RET
	0x0319C0D4 BL 0x1C16F28

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move [X31+24], X31
	005 Move [X31+32], X31
	006 Move [X31+40], X31
	007 Move X8, [X1+32]
	008 Move X19, X1
	009 Move X1, X0
	010 Add X0, X31, 24
	011 Move X8, [X8+192]
	012 Move X2, [X8+32]
	013 Call 0x2BC54CC, X0, X1
	014 NotImplemented "Instruction LDUR not yet implemented."
	015 Move X8, [X31+40]
	016 Add X1, X31, 0
	017 Move [X31], V0
	018 Move [X31+16], X8
	019 Move X8, [X19+32]
	020 Move X8, [X8+192]
	021 Move X0, [X8+24]
	022 Call 0x1C17E04
	023 Move X30, [X31+48]
	024 Move X19, [X31+56]
	025 Add X31, X31, 64
	026 Return X0

