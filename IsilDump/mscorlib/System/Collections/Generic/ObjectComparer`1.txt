Type: System.Collections.Generic.ObjectComparer`1

Method: System.Int32 Compare(T x, T y)

Disassembly:
	0x02440558 BR X2
	0x0244055C BL 0x1C16F20
	0x02440560 LDR X8, [X1 + 0x20]
	0x02440564 LDR X8, [X8 + 0xC0]
	0x02440568 LDR X1, [X8 + 0x10]
	0x0244056C B 0x29045D0
	0x02440570 SUB X31, X31, 0x70
	0x02440574 STP X30, X23, [X31 + 0x40]
	0x02440578 STP X22, X21, [X31 + 0x50]
	0x0244057C STP X20, X19, [X31 + 0x60]
	0x02440580 ADRP X23, 0x1F99000
	0x02440584 ADRP X22, 0x1CDC000
	0x02440588 LDRB W8, [X23 + 0xA78]
	0x0244058C LDR X22, [X22 + 0xD30]
	0x02440590 MOV X19, X3
	0x02440594 MOV X20, X2
	0x02440598 MOV X21, X1
	0x0244059C TBNZ X8, 0x0, 0x24405B4
	0x024405A0 ADRP X0, 0x1CDC000
	0x024405A4 LDR X0, [X0 + 0xD30]
	0x024405A8 BL 0x1C16CF4
	0x024405AC MOVZ W8, 0x1
	0x024405B0 STRB W8, [X23 + 0xA78]
	0x024405B4 LDR X0, [X22]
	0x024405B8 LDR W8, [X0 + 0xE0]
	0x024405BC CBNZ W8, 0x24405C8
	0x024405C0 BL 0x1C16DFC
	0x024405C4 LDR X0, [X22]
	0x024405C8 LDR X8, [X0 + 0xB8]
	0x024405CC LDR X9, [X21 + 0x10]
	0x024405D0 LDR V0, [X21]
	0x024405D4 ADD X1, X31, 0x20
	0x024405D8 LDR X21, [X8]
	0x024405DC STR X9, [X31 + 0x30]
	0x024405E0 STR V0, [X31 + 0x2]
	0x024405E4 LDR X8, [X19 + 0x20]
	0x024405E8 LDR X8, [X8 + 0xC0]
	0x024405EC LDR X0, [X8]
	0x024405F0 BL 0x1C16E04
	0x024405F4 LDR X8, [X20 + 0x10]
	0x024405F8 LDR V0, [X20]
	0x024405FC ADD X1, X31, 0x0
	0x02440600 STR X8, [X31 + 0x10]
	0x02440604 STR V0, [X31]
	0x02440608 LDR X8, [X19 + 0x20]
	0x0244060C MOV X19, X0
	0x02440610 LDR X8, [X8 + 0xC0]
	0x02440614 LDR X8, [X8]
	0x02440618 MOV X0, X8
	0x0244061C BL 0x1C16E04

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x1F9A000
	009 Move X22, 0x1CDD000
	010 Move W8, [X23+2669]
	011 Move X22, [X22+3376]
	012 Move X19, X3
	013 Move X20, X2
	014 Move X21, X1
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x1CDD000
	020 Move X0, [X0+3376]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X23+2669], W8
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X22]
	030 Move X8, [X0+184]
	031 Add X1, X31, 8
	032 Move X22, [X8]
	033 Move [X31+8], X21
	034 Move X8, [X19+32]
	035 Move X8, [X8+192]
	036 Move X0, [X8]
	037 Call 0x1C17E04
	038 Move [X31], X20
	039 Move X8, [X19+32]
	040 Move X19, X0
	041 Add X1, X31, 0
	042 Move X8, [X8+192]
	043 Move X8, [X8]
	044 Move X0, X8
	045 Call 0x1C17E04
	046 Compare X22, 0
	047 JumpIfEqual {61}
	048 Move X2, X0
	049 Move X0, X22
	050 Move X1, X19
	051 Move X3, X31
	052 Call Comparer.Compare, X0, X1, X2
	053 Move X20, [X31+48]
	054 Move X19, [X31+56]
	055 Move X22, [X31+32]
	056 Move X21, [X31+40]
	057 Move X30, [X31+16]
	058 Move X23, [X31+24]
	059 Add X31, X31, 64
	060 Return X0
	061 Call 0x1C17F20

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x02440620 CBZ X21, 0x244064C
	0x02440624 MOV X2, X0
	0x02440628 MOV X0, X21
	0x0244062C MOV X1, X19
	0x02440630 MOV X3, X31
	0x02440634 BL 0x3350090
	0x02440638 LDP X20, X19, [X31 + 0x60]
	0x0244063C LDP X22, X21, [X31 + 0x50]
	0x02440640 LDP X30, X23, [X31 + 0x40]
	0x02440644 ADD X31, X31, 0x70
	0x02440648 RET
	0x0244064C BL 0x1C16F20
	0x02440650 STP X30, X19, [X31 - 0x10]!
	0x02440654 LDR X8, [X2 + 0x20]
	0x02440658 MOV X19, X1
	0x0244065C LDR X8, [X8 + 0xC0]
	0x02440660 LDR X0, [X8 + 0x8]
	0x02440664 LDRB W8, [X0 + 0x135]
	0x02440668 TBNZ X8, 0x0, 0x2440670
	0x0244066C BL 0x1C5C684
	0x02440670 CBZ X19, 0x2440688
	0x02440674 LDR X8, [X19]
	0x02440678 LDRB W9, [X0 + 0x130]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X2+32]
	004 Move X19, X1
	005 Move X8, [X8+192]
	006 Move X0, [X8+8]
	007 Move W8, [X0+309]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {13}
	012 Call 0x1C5D684
	013 Compare X19, 0
	014 JumpIfEqual {19}
	015 Move X8, [X19]
	016 Move W9, [X0+304]
	017 Move W10, [X8+304]
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move W0, W31
	020 Move X8, [X8+200]
	021 Add X8, X8, X9
	022 NotImplemented "Instruction LDUR not yet implemented."
	023 NotImplemented "Instruction CMP not yet implemented."
	024 NotImplemented "Instruction CSET not yet implemented."
	025 Move X30, [X31+16]
	026 Move X19, [X31+24]
	027 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x0244067C LDRB W10, [X8 + 0x130]
	0x02440680 CMP W10, W9
	0x02440684 B.CS 0x2440690
	0x02440688 MOV W0, W31
	0x0244068C B 0x24406A4
	0x02440690 LDR X8, [X8 + 0xC8]
	0x02440694 ADD X8, X8, X9, 0x3, LSL
	0x02440698 LDUR X8, [X8 - 0x8]
	0x0244069C CMP X8, X0
	0x024406A0 CSET W0, EQ
	0x024406A4 LDP X30, X19, [X31], #0x10
	0x024406A8 RET
	0x024406AC STR X30, [X31 - 0x10]!
	0x024406B0 CBZ X0, 0x24406E0

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {19}
	004 Move X1, X31
	005 Call "il2cpp_vm_object_is_inst", X0
	006 Compare X0, 0
	007 JumpIfEqual {19}
	008 Move X8, [X0]
	009 Move X9, [X8+424]
	010 Move X1, [X8+432]
	011 NotImplemented "Instruction BLR not yet implemented."
	012 Compare X0, 0
	013 JumpIfEqual {19}
	014 Move X8, [X0]
	015 Move X2, [X8+344]
	016 Move X1, [X8+352]
	017 Move X30, [X31+16]
	018 CallNoReturn X2
	019 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x024406B4 MOV X1, X31
	0x024406B8 BL 0x33BE520
	0x024406BC CBZ X0, 0x24406E0
	0x024406C0 LDR X8, [X0]

ISIL:
	001 Move X8, [X1+32]
	002 Move X8, [X8+192]
	003 Move X1, [X8+16]
	004 Call 0x2901888, X0
	005 Return 

