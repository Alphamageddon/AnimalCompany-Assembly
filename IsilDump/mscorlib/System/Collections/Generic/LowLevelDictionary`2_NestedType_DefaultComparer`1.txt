Type: System.Collections.Generic.LowLevelDictionary`2/DefaultComparer`1

Method: System.Boolean Equals(T x, T y)

Disassembly:
	0x029B37B4 BL 0x1C5C684
	0x029B37B8 BL 0x1C16F10
	0x029B37BC LDR X8, [X20 + 0x20]
	0x029B37C0 MOV X21, X0
	0x029B37C4 LDR X8, [X8 + 0xC0]
	0x029B37C8 LDR X1, [X8 + 0x10]
	0x029B37CC BL 0x26FBBB8
	0x029B37D0 STR X21, [X19 + 0x58]
	0x029B37D4 LDP X20, X19, [X31 + 0x10]
	0x029B37D8 MOV X0, X21
	0x029B37DC LDP X30, X21, [X31], #0x20
	0x029B37E0 RET
	0x029B37E4 CBZ X0, 0x29B37F0
	0x029B37E8 MOV X1, X31
	0x029B37EC B 0x3CF13A0
	0x029B37F0 STR X30, [X31 - 0x10]!
	0x029B37F4 BL 0x1C16F20
	0x029B37F8 STR X30, [X31 - 0x30]!
	0x029B37FC STP X22, X21, [X31 + 0x10]
	0x029B3800 STP X20, X19, [X31 + 0x20]
	0x029B3804 ADRP X22, 0x1A27000
	0x029B3808 LDRB W8, [X22 + 0xFC4]
	0x029B380C MOV X20, X2
	0x029B3810 MOV X21, X1
	0x029B3814 MOV X19, X0
	0x029B3818 TBNZ X8, 0x0, 0x29B3848
	0x029B381C ADRP X0, 0x1740000
	0x029B3820 LDR X0, [X0 + 0xA28]
	0x029B3824 BL 0x1C16CF4
	0x029B3828 ADRP X0, 0x1740000
	0x029B382C LDR X0, [X0 + 0x6C0]
	0x029B3830 BL 0x1C16CF4
	0x029B3834 ADRP X0, 0x176B000
	0x029B3838 LDR X0, [X0 + 0x618]
	0x029B383C BL 0x1C16CF4
	0x029B3840 MOVZ W8, 0x1
	0x029B3844 STRB W8, [X22 + 0xFC4]
	0x029B3848 LDR X8, [X20 + 0x20]
	0x029B384C LDR X8, [X8 + 0xC0]
	0x029B3850 CBZ X21, 0x29B3890
	0x029B3854 LDR X1, [X8 + 0x20]
	0x029B3858 LDRB W8, [X1 + 0x135]
	0x029B385C TBNZ X8, 0x0, 0x29B386C
	0x029B3860 MOV X0, X1
	0x029B3864 BL 0x1C5C684
	0x029B3868 MOV X1, X0
	0x029B386C MOV X0, X21
	0x029B3870 BL 0x1C16E00
	0x029B3874 LDR X8, [X20 + 0x20]
	0x029B3878 LDR X8, [X8 + 0xC0]
	0x029B387C CBZ X0, 0x29B38AC
	0x029B3880 LDR X2, [X8 + 0x18]
	0x029B3884 MOV X1, X0
	0x029B3888 MOV X0, X19
	0x029B388C B 0x29B389C
	0x029B3890 LDR X2, [X8 + 0x18]
	0x029B3894 MOV X0, X19
	0x029B3898 MOV X1, X31
	0x029B389C LDP X20, X19, [X31 + 0x20]
	0x029B38A0 LDP X22, X21, [X31 + 0x10]
	0x029B38A4 LDR X30, [X31], #0x30
	0x029B38A8 B 0x29B3928
	0x029B38AC ADRP X9, 0x1740000
	0x029B38B0 LDR X9, [X9 + 0x6C0]
	0x029B38B4 LDR X19, [X8 + 0x28]
	0x029B38B8 LDR X0, [X9]
	0x029B38BC LDR W9, [X0 + 0xE0]
	0x029B38C0 CBNZ W9, 0x29B38C8
	0x029B38C4 BL 0x1C16DFC
	0x029B38C8 MOV X0, X19
	0x029B38CC MOV X1, X31

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move [X31+28], W1
	008 Move X8, [X3+32]
	009 Move W22, W1
	010 Add X1, X31, 28
	011 Move X21, X3
	012 Move X8, [X8+192]
	013 Move W19, W2
	014 Move X0, [X8]
	015 Call 0x1C17E04
	016 Compare X0, 0
	017 JumpIfEqual {43}
	018 Move X8, [X21+32]
	019 Move X20, X0
	020 Move X8, [X8+192]
	021 Move X1, [X8+8]
	022 Move W8, [X1+309]
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {30}
	027 Move X0, X1
	028 Call 0x1C5D684
	029 Move X1, X0
	030 Move X8, [X20]
	031 NotImplemented "Instruction LDRH not yet implemented."
	032 Compare X9, 0
	033 JumpIfEqual {40}
	034 Move X10, [X8+176]
	035 Add X10, X10, 8
	036 NotImplemented "Instruction LDUR not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Subtract X9, X9, 1
	039 Add X10, X10, 16
	040 Move X0, X20
	041 Move W2, W31
	042 Call 0x1C5D788
	043 Move [X31+24], W22
	044 Move X8, [X21+32]
	045 Add X1, X31, 24
	046 Move X8, [X8+192]
	047 Move X0, [X8]
	048 Call 0x1C17E04
	049 Move [X31+12], W19
	050 Move X8, [X21+32]
	051 Move X19, X0
	052 Add X1, X31, 12
	053 Move X8, [X8+192]
	054 Move X8, [X8]
	055 Move X0, X8
	056 Call 0x1C17E04
	057 Move X8, [X19]
	058 Move X1, X0
	059 Move X0, X19
	060 Move X9, [X8+312]
	061 Move X2, [X8+320]
	062 NotImplemented "Instruction BLR not yet implemented."
	063 NotImplemented "Instruction LDRSW not yet implemented."
	064 Add X8, X8, X9
	065 Add X0, X8, 312
	066 Move X8, [X0]
	067 Move X2, [X0+8]
	068 Move X0, X20
	069 Move W1, W19
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Move X20, [X31+48]
	072 Move X19, [X31+56]
	073 Move X22, [X31+32]
	074 Move X21, [X31+40]
	075 Move X30, [X31+16]
	076 And W0, W0, 1
	077 Add X31, X31, 64
	078 Return X0

Method: System.Int32 GetHashCode(T obj)

Disassembly:
	0x029B38D0 BL 0x338C698
	0x029B38D4 ADRP X8, 0x176B000
	0x029B38D8 LDR X8, [X8 + 0x618]
	0x029B38DC MOV X1, X0
	0x029B38E0 MOV X2, X31
	0x029B38E4 LDR X8, [X8]
	0x029B38E8 MOV X0, X8
	0x029B38EC BL 0x321EFD0
	0x029B38F0 ADRP X8, 0x1740000
	0x029B38F4 LDR X8, [X8 + 0xA28]
	0x029B38F8 MOV X19, X0
	0x029B38FC LDR X8, [X8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31+12], W1
	003 Move X8, [X2+32]
	004 Add X1, X31, 12
	005 Move X8, [X8+192]
	006 Move X0, [X8]
	007 Call 0x1C17E04
	008 Move X8, [X0]
	009 Move X9, [X8+344]
	010 Move X1, [X8+352]
	011 NotImplemented "Instruction BLR not yet implemented."
	012 Move X30, [X31+16]
	013 Return X0

Method: System.Void .ctor()

Disassembly:
	0x029B3900 LDR W9, [X8 + 0xE0]
	0x029B3904 CBNZ W9, 0x29B3910

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

