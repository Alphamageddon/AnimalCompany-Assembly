Type: System.Collections.Generic.Dictionary`2/ValueCollection

Method: System.Void .ctor(System.Collections.Generic.Dictionary`2<TKey, TValue> dictionary)

Disassembly:
	0x02741290 BL 0x339DA4C
	0x02741294 LDR X8, [X20 + 0x20]
	0x02741298 LDR X8, [X8 + 0xC0]
	0x0274129C LDR X1, [X8 + 0x20]
	0x027412A0 LDRB W8, [X1 + 0x135]
	0x027412A4 TBNZ X8, 0x0, 0x27412B4
	0x027412A8 MOV X0, X1
	0x027412AC BL 0x1C5C684
	0x027412B0 MOV X1, X0
	0x027412B4 MOV X0, X22
	0x027412B8 BL 0x1C16E00
	0x027412BC CBZ X0, 0x27412F4
	0x027412C0 LDR X8, [X20 + 0x20]
	0x027412C4 MOV X1, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Compare X19, 0
	009 JumpIfNotEqual {13}
	010 Move W0, 1
	011 Move X1, X31
	012 Call ThrowHelper.ThrowArgumentNullException, X0
	013 Move [X20+16], X19
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X30, [X31+32]
	017 Return 

Method: System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<TKey, TValue> GetEnumerator()

Disassembly:
	0x027412C8 MOV X0, X21
	0x027412CC MOV W2, W19
	0x027412D0 LDR X8, [X8 + 0xC0]
	0x027412D4 LDP X20, X19, [X31 + 0x80]
	0x027412D8 LDP X22, X21, [X31 + 0x70]
	0x027412DC LDP X24, X23, [X31 + 0x60]
	0x027412E0 LDR X3, [X8 + 0x58]
	0x027412E4 LDP X26, X25, [X31 + 0x50]
	0x027412E8 LDR X30, [X31 + 0x40]

ISIL:
	001 Move X9, [X0+16]
	002 Move [X8], X31
	003 Move [X8+8], X31
	004 Move [X8+16], X31
	005 Move X10, [X1+32]
	006 Move X0, X8
	007 Move X1, X9
	008 Move X10, [X10+192]
	009 Move X2, [X10+24]
	010 Call 0x2BE74F8, X0, X1
	011 Return X0

Method: System.Void CopyTo(TValue[] array, System.Int32 index)

Disassembly:
	0x027412EC ADD X31, X31, 0x90
	0x027412F0 B 0x2740F08
	0x027412F4 ADRP X8, 0x19B2000
	0x027412F8 LDR X8, [X8 + 0x9D0]
	0x027412FC MOV X0, X22
	0x02741300 LDR X1, [X8]
	0x02741304 BL 0x1C16E00
	0x02741308 MOV X22, X0
	0x0274130C CBNZ X0, 0x2741314
	0x02741310 BL 0x339E304
	0x02741314 LDR X8, [X21 + 0x10]
	0x02741318 CBZ X8, 0x27413F8
	0x0274131C LDR W23, [X8 + 0x20]
	0x02741320 CMP W23, 0x1
	0x02741324 B.LT 0x27413B8
	0x02741328 LDR X24, [X8 + 0x18]
	0x0274132C CBZ X24, 0x27413FC
	0x02741330 MOV X25, X31
	0x02741334 ADD X26, X24, 0x38
	0x02741338 LDR W8, [X24 + 0x18]
	0x0274133C CMP X25, X8
	0x02741340 B.CS 0x27413D4
	0x02741344 LDUR W8, [X26 - 0x18]
	0x02741348 TBNZ X8, 0x1F, 0x27413A8
	0x0274134C LDP V1, V0, [X26 + 0x20]
	0x02741350 LDP V3, V2, [X26]
	0x02741354 STP V1, V0, [X31 + 0x20]
	0x02741358 STP V3, V2, [X31]
	0x0274135C LDR X8, [X20 + 0x20]
	0x02741360 LDR X8, [X8 + 0xC0]
	0x02741364 LDR X0, [X8 + 0x40]
	0x02741368 ADD X1, X31, 0x0
	0x0274136C BL 0x1C16E04
	0x02741370 CBZ X22, 0x27413DC
	0x02741374 MOV X21, X0
	0x02741378 CBZ X0, 0x2741390
	0x0274137C LDR X8, [X22]
	0x02741380 LDR X1, [X8 + 0x40]
	0x02741384 MOV X0, X21
	0x02741388 BL 0x1C16E00
	0x0274138C CBZ X0, 0x27413E0
	0x02741390 LDR W8, [X22 + 0x18]
	0x02741394 CMP W19, W8
	0x02741398 B.CS 0x27413D8
	0x0274139C ADD X8, X22, W19, 0x3, SXTW
	0x027413A0 ADD W19, W19, 0x1
	0x027413A4 STR X21, [X8 + 0x20]
	0x027413A8 ADD X25, X25, 0x1
	0x027413AC CMP X23, X25
	0x027413B0 ADD X26, X26, 0x58
	0x027413B4 B.NE 0x2741338
	0x027413B8 LDP X20, X19, [X31 + 0x80]
	0x027413BC LDP X22, X21, [X31 + 0x70]
	0x027413C0 LDP X24, X23, [X31 + 0x60]
	0x027413C4 LDP X26, X25, [X31 + 0x50]
	0x027413C8 LDR X30, [X31 + 0x40]
	0x027413CC ADD X31, X31, 0x90
	0x027413D0 RET
	0x027413D4 BL 0x1C16F28
	0x027413D8 BL 0x1C16F28
	0x027413DC BL 0x1C16F20
	0x027413E0 BL 0x1C16F44
	0x027413E4 MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W19, W2
	007 Compare X1, 0
	008 JumpIfEqual {66}
	009 Move X22, X3
	010 Move X20, X1
	011 Move X21, X0
	012 Move TEMP, X19
	013 And TEMP, TEMP, -2147483648
	014 Compare TEMP, -2147483648
	015 JumpIfEqual {18}
	016 Move W8, [X20+24]
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move X0, X31
	019 Call ThrowHelper.ThrowIndexArgumentOutOfRange_NeedNonNegNumException
	020 Move X0, [X21+16]
	021 Compare X0, 0
	022 JumpIfEqual {74}
	023 Move X8, [X22+32]
	024 Move X8, [X8+192]
	025 Move X1, [X8+40]
	026 Call 0x29BB0D0, X0
	027 Move W8, [X20+24]
	028 Subtract W8, W8, W19
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W0, 5
	031 Move X1, X31
	032 Call ThrowHelper.ThrowArgumentException, X0
	033 Move X9, [X21+16]
	034 Compare X9, 0
	035 JumpIfEqual {74}
	036 Move W8, [X9+32]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X11, [X9+24]
	039 Compare X11, 0
	040 JumpIfEqual {74}
	041 Move W10, [X11+24]
	042 Move X9, X31
	043 Add X11, X11, 48
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 Move TEMP, X12
	047 And TEMP, TEMP, -2147483648
	048 Compare TEMP, -2147483648
	049 JumpIfEqual {56}
	050 Move W12, [X20+24]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move W12, [X11]
	053 Add X13, X20, W19
	054 Add W19, W19, 1
	055 Move [X13+32], W12
	056 Add X9, X9, 1
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Add X11, X11, 24
	059 Move X20, [X31+32]
	060 Move X19, [X31+40]
	061 Move X22, [X31+16]
	062 Move X21, [X31+24]
	063 Move X30, [X31+48]
	064 Return 
	065 Call 0x1C17F28
	066 Move W0, 3
	067 Call ThrowHelper.ThrowArgumentNullException, X0
	068 Move TEMP, X19
	069 And TEMP, TEMP, -2147483648
	070 Compare TEMP, -2147483648
	071 JumpIfNotEqual {74}
	072 Move X0, X31
	073 Call ThrowHelper.ThrowIndexArgumentOutOfRange_NeedNonNegNumException
	074 Call 0x1C17F20

Method: System.Int32 get_Count()

Disassembly:
	0x027413E8 BL 0x1C16DEC
	0x027413EC MOVZ W0, 0x3
	0x027413F0 MOV X1, X31
	0x027413F4 BL 0x338F3E0
	0x027413F8 BL 0x1C16F20
	0x027413FC BL 0x1C16F20
	0x02741400 B 0x274140C
	0x02741404 B 0x274140C
	0x02741408 B 0x274140C

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {11}
	005 Move X8, [X1+32]
	006 Move X8, [X8+192]
	007 Move X1, [X8+40]
	008 Move X30, [X31+16]
	009 Call 0x29BB0D0, X0
	010 Return X0
	011 Call 0x1C17F20

Method: System.Boolean System.Collections.Generic.ICollection<TValue>.get_IsReadOnly()

Disassembly:
	0x0274140C MOV X19, X0
	0x02741410 CMP W1, 0x1

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Void System.Collections.Generic.ICollection<TValue>.Add(TValue item)

Disassembly:
	0x02741414 B.NE 0x2741478
	0x02741418 MOV X0, X19
	0x0274141C BL 0x3EB1AD0

ISIL:
	001 Move W0, 20
	002 Move X1, X31
	003 Call ThrowHelper.ThrowNotSupportedException, X0
	004 Return 

Method: System.Boolean System.Collections.Generic.ICollection<TValue>.Remove(TValue item)

Disassembly:
	0x02741420 MOV X19, X0
	0x02741424 ADRP X0, 0x19DB000
	0x02741428 LDR X0, [X0 + 0x320]
	0x0274142C BL 0x1C16D08
	0x02741430 LDR X8, [X19]
	0x02741434 LDR X1, [X8]
	0x02741438 BL 0x1C17270

ISIL:
	001 Move [X31-16], X30
	002 Move W0, 20
	003 Move X1, X31
	004 Call ThrowHelper.ThrowNotSupportedException, X0
	005 Move W0, W31
	006 Move X30, [X31+16]
	007 Return X0

Method: System.Void System.Collections.Generic.ICollection<TValue>.Clear()

Disassembly:
	0x0274143C TBZ X0, 0x0, 0x2741450
	0x02741440 BL 0x3EB1AE0
	0x02741444 MOV X0, X31

ISIL:
	001 Move W0, 20
	002 Move X1, X31
	003 Call ThrowHelper.ThrowNotSupportedException, X0
	004 Return 

Method: System.Boolean System.Collections.Generic.ICollection<TValue>.Contains(TValue item)

Disassembly:
	0x02741448 BL 0x339E304
	0x0274144C B 0x27413B8
	0x02741450 MOVZ W0, 0x8
	0x02741454 BL 0x3EB1AF0
	0x02741458 LDR X8, [X19]
	0x0274145C STR X8, [X0]
	0x02741460 ADRP X1, 0x1773000
	0x02741464 ADD X1, X1, 0xE58
	0x02741468 MOV X2, X31
	0x0274146C BL 0x3EB1B00

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {12}
	005 Move X8, [X2+32]
	006 And W1, W1, 1
	007 Move X8, [X8+192]
	008 Move X2, [X8+72]
	009 Move X30, [X31+16]
	010 Call 0x29BB538, X0, X1
	011 Return X0
	012 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerator`1<TValue> System.Collections.Generic.IEnumerable<TValue>.GetEnumerator()

Disassembly:
	0x02741470 MOV X19, X0
	0x02741474 BL 0x3EB1AE0
	0x02741478 MOV X0, X19
	0x0274147C BL 0x1D2C690
	0x02741480 BL 0x1990590
	0x02741484 MOV W0, W31
	0x02741488 RET
	0x0274148C STR X30, [X31 - 0x20]!
	0x02741490 STP X20, X19, [X31 + 0x10]
	0x02741494 ADRP X20, 0x1C99000
	0x02741498 LDRB W8, [X20 + 0x6E5]
	0x0274149C MOV X19, X0
	0x027414A0 TBNZ X8, 0x0, 0x27414B8
	0x027414A4 ADRP X0, 0x19B9000
	0x027414A8 LDR X0, [X0 + 0x2F0]
	0x027414AC BL 0x1C16CF4
	0x027414B0 MOVZ W8, 0x1
	0x027414B4 STRB W8, [X20 + 0x6E5]
	0x027414B8 LDR X19, [X19 + 0x10]
	0x027414BC CBZ X19, 0x274152C
	0x027414C0 ADRP X10, 0x19B9000
	0x027414C4 LDR X8, [X19]
	0x027414C8 LDR X10, [X10 + 0x2F0]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, X1
	005 Move X1, [X0+16]
	006 Move [X31+24], X31
	007 Move [X31+32], X31
	008 Move [X31+40], X31
	009 Move X8, [X19+32]
	010 Add X0, X31, 24
	011 Move X8, [X8+192]
	012 Move X2, [X8+24]
	013 Call 0x2BE74F8, X0, X1
	014 NotImplemented "Instruction LDUR not yet implemented."
	015 Move X8, [X31+40]
	016 Add X1, X31, 0
	017 Move [X31], V0
	018 Move [X31+16], X8
	019 Move X8, [X19+32]
	020 Move X8, [X8+192]
	021 Move X0, [X8+16]
	022 Call 0x1C17E04
	023 Move X30, [X31+48]
	024 Move X19, [X31+56]
	025 Add X31, X31, 64
	026 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x027414CC LDRH W9, [X8 + 0x12E]
	0x027414D0 LDR X1, [X10]
	0x027414D4 CBZ X9, 0x27414F8
	0x027414D8 LDR X10, [X8 + 0xB0]
	0x027414DC ADD X10, X10, 0x8
	0x027414E0 LDUR X11, [X10 - 0x8]
	0x027414E4 CMP X11, X1
	0x027414E8 B.EQ 0x2741508
	0x027414EC SUBS X9, X9, 0x1
	0x027414F0 ADD X10, X10, 0x10
	0x027414F4 B.NE 0x27414E0
	0x027414F8 MOVZ W2, 0x2
	0x027414FC MOV X0, X19
	0x02741500 BL 0x1C5C788
	0x02741504 B 0x2741518
	0x02741508 LDR W9, [X10]
	0x0274150C ADD W9, W9, 0x2
	0x02741510 ADD X8, X8, W9, 0x4, SXTW
	0x02741514 ADD X0, X8, 0x138
	0x02741518 LDP X2, X1, [X0]
	0x0274151C MOV X0, X19
	0x02741520 LDP X20, X19, [X31 + 0x10]
	0x02741524 LDR X30, [X31], #0x20

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, X1
	005 Move X1, [X0+16]
	006 Move [X31+24], X31
	007 Move [X31+32], X31
	008 Move [X31+40], X31
	009 Move X8, [X19+32]
	010 Add X0, X31, 24
	011 Move X8, [X8+192]
	012 Move X2, [X8+24]
	013 Call 0x2BE74F8, X0, X1
	014 NotImplemented "Instruction LDUR not yet implemented."
	015 Move X8, [X31+40]
	016 Add X1, X31, 0
	017 Move [X31], V0
	018 Move [X31+16], X8
	019 Move X8, [X19+32]
	020 Move X8, [X8+192]
	021 Move X0, [X8+16]
	022 Call 0x1C17E04
	023 Move X30, [X31+48]
	024 Move X19, [X31+56]
	025 Add X31, X31, 64
	026 Return X0

Method: System.Void System.Collections.ICollection.CopyTo(System.Array array, System.Int32 index)

Disassembly:
	0x02741528 BR X2
	0x0274152C BL 0x1C16F20
	0x02741530 STR X30, [X31 - 0x20]!
	0x02741534 STP X20, X19, [X31 + 0x10]
	0x02741538 MOV X19, X1
	0x0274153C MOV X1, X31
	0x02741540 MOV X20, X0
	0x02741544 BL 0x33BDD8C
	0x02741548 CBNZ X19, 0x2741558
	0x0274154C MOVZ W0, 0x1
	0x02741550 MOV X1, X31
	0x02741554 BL 0x338F3E0
	0x02741558 STR X19, [X20 + 0x10]
	0x0274155C LDP X20, X19, [X31 + 0x10]
	0x02741560 LDR X30, [X31], #0x20
	0x02741564 RET
	0x02741568 LDR X9, [X0 + 0x10]
	0x0274156C STP X31, X31, [X8]
	0x02741570 STR X31, [X8 + 0x10]
	0x02741574 LDR X10, [X1 + 0x20]
	0x02741578 MOV X0, X8
	0x0274157C MOV X1, X9
	0x02741580 LDR X10, [X10 + 0xC0]
	0x02741584 LDR X2, [X10 + 0x18]
	0x02741588 B 0x2BE7ECC
	0x0274158C STR X30, [X31 - 0x30]!
	0x02741590 STP X22, X21, [X31 + 0x10]
	0x02741594 STP X20, X19, [X31 + 0x20]
	0x02741598 MOV W19, W2
	0x0274159C CBZ X1, 0x2741670
	0x027415A0 MOV X22, X3
	0x027415A4 MOV X20, X1
	0x027415A8 MOV X21, X0
	0x027415AC TBNZ X19, 0x1F, 0x27415BC
	0x027415B0 LDR W8, [X20 + 0x18]
	0x027415B4 CMP W8, W19
	0x027415B8 B.GE 0x27415C4
	0x027415BC MOV X0, X31
	0x027415C0 BL 0x339E2CC
	0x027415C4 LDR X0, [X21 + 0x10]
	0x027415C8 CBZ X0, 0x2741684
	0x027415CC LDR X8, [X22 + 0x20]
	0x027415D0 LDR X8, [X8 + 0xC0]
	0x027415D4 LDR X1, [X8 + 0x28]
	0x027415D8 BL 0x29C373C
	0x027415DC LDR W8, [X20 + 0x18]
	0x027415E0 SUB W8, W8, W19
	0x027415E4 CMP W8, W0
	0x027415E8 B.GE 0x27415F8
	0x027415EC MOVZ W0, 0x5
	0x027415F0 MOV X1, X31
	0x027415F4 BL 0x339DA4C
	0x027415F8 LDR X9, [X21 + 0x10]
	0x027415FC CBZ X9, 0x2741684
	0x02741600 LDR W8, [X9 + 0x20]
	0x02741604 CMP W8, 0x1
	0x02741608 B.LT 0x274165C
	0x0274160C LDR X11, [X9 + 0x18]
	0x02741610 CBZ X11, 0x2741684
	0x02741614 LDR W10, [X11 + 0x18]
	0x02741618 MOV X9, X31
	0x0274161C ADD X11, X11, 0x38
	0x02741620 CMP X9, X10
	0x02741624 B.CS 0x274166C
	0x02741628 LDUR W12, [X11 - 0x18]
	0x0274162C TBNZ X12, 0x1F, 0x274164C
	0x02741630 LDR W12, [X20 + 0x18]
	0x02741634 CMP W19, W12
	0x02741638 B.CS 0x274166C
	0x0274163C LDR X12, [X11]
	0x02741640 ADD X13, X20, W19, 0x3, SXTW
	0x02741644 ADD W19, W19, 0x1
	0x02741648 STR X12, [X13 + 0x20]
	0x0274164C ADD X9, X9, 0x1
	0x02741650 CMP X8, X9
	0x02741654 ADD X11, X11, 0x20
	0x02741658 B.NE 0x2741620
	0x0274165C LDP X20, X19, [X31 + 0x20]
	0x02741660 LDP X22, X21, [X31 + 0x10]
	0x02741664 LDR X30, [X31], #0x30
	0x02741668 RET
	0x0274166C BL 0x1C16F28
	0x02741670 MOVZ W0, 0x3
	0x02741674 BL 0x338F3E0
	0x02741678 TBZ X19, 0x1F, 0x2741684
	0x0274167C MOV X0, X31
	0x02741680 BL 0x339E2CC
	0x02741684 BL 0x1C16F20
	0x02741688 STR X30, [X31 - 0x10]!
	0x0274168C LDR X0, [X0 + 0x10]
	0x02741690 CBZ X0, 0x27416A8
	0x02741694 LDR X8, [X1 + 0x20]
	0x02741698 LDR X8, [X8 + 0xC0]
	0x0274169C LDR X1, [X8 + 0x28]
	0x027416A0 LDR X30, [X31], #0x10
	0x027416A4 B 0x29C373C
	0x027416A8 BL 0x1C16F20
	0x027416AC MOVZ W0, 0x1
	0x027416B0 RET
	0x027416B4 MOVZ W0, 0x14
	0x027416B8 MOV X1, X31
	0x027416BC B 0x339E04C
	0x027416C0 STR X30, [X31 - 0x10]!
	0x027416C4 MOVZ W0, 0x14
	0x027416C8 MOV X1, X31
	0x027416CC BL 0x339E04C
	0x027416D0 MOV W0, W31
	0x027416D4 LDR X30, [X31], #0x10
	0x027416D8 RET
	0x027416DC MOVZ W0, 0x14
	0x027416E0 MOV X1, X31
	0x027416E4 B 0x339E04C
	0x027416E8 STR X30, [X31 - 0x10]!
	0x027416EC LDR X0, [X0 + 0x10]
	0x027416F0 CBZ X0, 0x2741708
	0x027416F4 LDR X8, [X2 + 0x20]
	0x027416F8 LDR X8, [X8 + 0xC0]
	0x027416FC LDR X2, [X8 + 0x48]
	0x02741700 LDR X30, [X31], #0x10
	0x02741704 B 0x29C3BA8
	0x02741708 BL 0x1C16F20
	0x0274170C SUB X31, X31, 0x40
	0x02741710 STP X30, X19, [X31 + 0x30]
	0x02741714 MOV X19, X1
	0x02741718 LDR X1, [X0 + 0x10]
	0x0274171C STP X31, X31, [X31 + 0x18]
	0x02741720 STR X31, [X31 + 0x28]
	0x02741724 LDR X8, [X19 + 0x20]
	0x02741728 ADD X0, X31, 0x18
	0x0274172C LDR X8, [X8 + 0xC0]
	0x02741730 LDR X2, [X8 + 0x18]
	0x02741734 BL 0x2BE7ECC
	0x02741738 LDUR V0, [X31 + 0x18]
	0x0274173C LDR X8, [X31 + 0x28]
	0x02741740 ADD X1, X31, 0x0
	0x02741744 STR V0, [X31]
	0x02741748 STR X8, [X31 + 0x10]
	0x0274174C LDR X8, [X19 + 0x20]
	0x02741750 LDR X8, [X8 + 0xC0]
	0x02741754 LDR X0, [X8 + 0x10]
	0x02741758 BL 0x1C16E04
	0x0274175C LDP X30, X19, [X31 + 0x30]
	0x02741760 ADD X31, X31, 0x40
	0x02741764 RET
	0x02741768 SUB X31, X31, 0x40
	0x0274176C STP X30, X19, [X31 + 0x30]
	0x02741770 MOV X19, X1
	0x02741774 LDR X1, [X0 + 0x10]
	0x02741778 STP X31, X31, [X31 + 0x18]
	0x0274177C STR X31, [X31 + 0x28]
	0x02741780 LDR X8, [X19 + 0x20]
	0x02741784 ADD X0, X31, 0x18
	0x02741788 LDR X8, [X8 + 0xC0]
	0x0274178C LDR X2, [X8 + 0x18]
	0x02741790 BL 0x2BE7ECC
	0x02741794 LDUR V0, [X31 + 0x18]
	0x02741798 LDR X8, [X31 + 0x28]
	0x0274179C ADD X1, X31, 0x0
	0x027417A0 STR V0, [X31]
	0x027417A4 STR X8, [X31 + 0x10]
	0x027417A8 LDR X8, [X19 + 0x20]
	0x027417AC LDR X8, [X8 + 0xC0]
	0x027417B0 LDR X0, [X8 + 0x10]
	0x027417B4 BL 0x1C16E04
	0x027417B8 LDP X30, X19, [X31 + 0x30]
	0x027417BC ADD X31, X31, 0x40
	0x027417C0 RET
	0x027417C4 STP X30, X25, [X31 - 0x40]!
	0x027417C8 STP X24, X23, [X31 + 0x10]
	0x027417CC STP X22, X21, [X31 + 0x20]
	0x027417D0 STP X20, X19, [X31 + 0x30]
	0x027417D4 ADRP X23, 0x1C99000
	0x027417D8 LDRB W8, [X23 + 0x6E6]
	0x027417DC MOV X22, X3
	0x027417E0 MOV W19, W2
	0x027417E4 MOV X21, X1
	0x027417E8 MOV X20, X0
	0x027417EC TBNZ X8, 0x0, 0x2741804

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X23, 0x1C9A000
	011 Move W8, [X23+1760]
	012 Move X20, X3
	013 Move W19, W2
	014 Move X22, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x19B3000
	021 Move X0, [X0+2512]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+1760], W8
	025 Compare X22, 0
	026 JumpIfEqual {166}
	027 Move X0, X22
	028 Move X1, X31
	029 Call Array.get_Rank, X0
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move W0, 7
	032 Move X1, X31
	033 Call ThrowHelper.ThrowArgumentException, X0
	034 Move X0, X22
	035 Move W1, W31
	036 Move X2, X31
	037 Call Array.GetLowerBound, X0, X1
	038 Compare W0, 0
	039 JumpIfEqual {43}
	040 Move W0, 6
	041 Move X1, X31
	042 Call ThrowHelper.ThrowArgumentException, X0
	043 Move X0, X22
	044 Move X1, X31
	045 Call Array.get_Length, X0
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X0, X31
	048 Call ThrowHelper.ThrowIndexArgumentOutOfRange_NeedNonNegNumException
	049 Move X0, X22
	050 Move X1, X31
	051 Call Array.get_Length, X0
	052 Move X8, [X21+16]
	053 Compare X8, 0
	054 JumpIfEqual {169}
	055 Move X9, [X20+32]
	056 Move W23, W0
	057 Move X0, X8
	058 Move X9, [X9+192]
	059 Move X1, [X9+40]
	060 Call 0x29BB0D0, X0
	061 Subtract W8, W23, W19
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move W0, 5
	064 Move X1, X31
	065 Call ThrowHelper.ThrowArgumentException, X0
	066 Move X8, [X20+32]
	067 Move X8, [X8+192]
	068 Move X1, [X8+32]
	069 Move W8, [X1+309]
	070 Move TEMP, X8
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfEqual {77}
	074 Move X0, X1
	075 Call 0x1C5D684
	076 Move X1, X0
	077 Move X0, X22
	078 Call 0x1C17E00
	079 Compare X0, 0
	080 JumpIfEqual {98}
	081 Move X8, [X20+32]
	082 Move X1, X0
	083 Move X0, X21
	084 Move W2, W19
	085 Move X8, [X8+192]
	086 Move X20, [X31+64]
	087 Move X19, [X31+72]
	088 Move X22, [X31+48]
	089 Move X21, [X31+56]
	090 Move X24, [X31+32]
	091 Move X23, [X31+40]
	092 Move X3, [X8+88]
	093 Move X26, [X31+16]
	094 Move X25, [X31+24]
	095 Move X30, [X31+80]
	096 Call 0x27412EC, X0, X1, X2
	097 Return 
	098 Move X8, 0x19B3000
	099 Move X8, [X8+2512]
	100 Move X0, X22
	101 Move X1, [X8]
	102 Call 0x1C17E00
	103 Move X22, X0
	104 Compare X0, 0
	105 JumpIfNotEqual {107}
	106 Call ThrowHelper.ThrowArgumentException_Argument_InvalidArrayType
	107 Move X8, [X21+16]
	108 Compare X8, 0
	109 JumpIfEqual {169}
	110 Move W23, [X8+32]
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move X24, [X8+24]
	113 Compare X24, 0
	114 JumpIfEqual {170}
	115 Move X25, X31
	116 Add X26, X24, 48
	117 Move W8, [X24+24]
	118 NotImplemented "Instruction CMP not yet implemented."
	119 NotImplemented "Instruction LDUR not yet implemented."
	120 Move TEMP, X8
	121 And TEMP, TEMP, -2147483648
	122 Compare TEMP, -2147483648
	123 JumpIfEqual {147}
	124 Move W8, [X26]
	125 Move [X31+12], W8
	126 Move X8, [X20+32]
	127 Move X8, [X8+192]
	128 Move X0, [X8+64]
	129 Add X1, X31, 12
	130 Call 0x1C17E04
	131 Compare X22, 0
	132 JumpIfEqual {162}
	133 Move X21, X0
	134 Compare X0, 0
	135 JumpIfEqual {142}
	136 Move X8, [X22]
	137 Move X1, [X8+64]
	138 Move X0, X21
	139 Call 0x1C17E00
	140 Compare X0, 0
	141 JumpIfEqual {163}
	142 Move W8, [X22+24]
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Add X8, X22, W19
	145 Add W19, W19, 1
	146 Move [X8+32], X21
	147 Add X25, X25, 1
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Add X26, X26, 24
	150 Move X20, [X31+64]
	151 Move X19, [X31+72]
	152 Move X22, [X31+48]
	153 Move X21, [X31+56]
	154 Move X24, [X31+32]
	155 Move X23, [X31+40]
	156 Move X26, [X31+16]
	157 Move X25, [X31+24]
	158 Move X30, [X31+80]
	159 Return 
	160 Call 0x1C17F28
	161 Call 0x1C17F28
	162 Call 0x1C17F20
	163 Call 0x1C17F44
	164 Move X1, X31
	165 Call 0x1C17DEC
	166 Move W0, 3
	167 Move X1, X31
	168 Call ThrowHelper.ThrowArgumentNullException, X0
	169 Call 0x1C17F20
	170 Call 0x1C17F20
	171 Move X19, X0
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move X0, X19
	174 Call 0x3EB2AD0
	175 Move X19, X0
	176 Move X0, 0x19DC000
	177 Move X0, [X0+800]
	178 Call 0x1C17D08
	179 Move X8, [X19]
	180 Move X1, [X8]
	181 Call 0x1C18270
	182 Move TEMP, X0
	183 And TEMP, TEMP, 1
	184 Compare TEMP, 1
	185 JumpIfNotEqual {189}
	186 Call 0x3EB2AE0
	187 Move X0, X31
	188 Call ThrowHelper.ThrowArgumentException_Argument_InvalidArrayType
	189 Move W0, 8
	190 Call 0x3EB2AF0
	191 Move X8, [X19]
	192 Move [X0], X8
	193 Move X1, 0x1774000
	194 Add X1, X1, 3672
	195 Move X2, X31
	196 Call 0x3EB2B00
	197 Move X19, X0
	198 Call 0x3EB2AE0
	199 Move X0, X19
	200 Call 0x1D2D690
	201 Call 0x1991590

Method: System.Boolean System.Collections.ICollection.get_IsSynchronized()

Disassembly:
	0x027417F0 ADRP X0, 0x19B2000
	0x027417F4 LDR X0, [X0 + 0x9D0]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Object System.Collections.ICollection.get_SyncRoot()

Disassembly:
	0x027417F8 BL 0x1C16CF4
	0x027417FC MOVZ W8, 0x1
	0x02741800 STRB W8, [X23 + 0x6E6]
	0x02741804 CBZ X21, 0x27419CC
	0x02741808 MOV X0, X21
	0x0274180C MOV X1, X31
	0x02741810 BL 0x339FCE4
	0x02741814 CMP W0, 0x1
	0x02741818 B.EQ 0x2741828
	0x0274181C MOVZ W0, 0x7
	0x02741820 MOV X1, X31
	0x02741824 BL 0x339DA4C
	0x02741828 MOV X0, X21
	0x0274182C MOV W1, W31
	0x02741830 MOV X2, X31
	0x02741834 BL 0x339FA30
	0x02741838 CBZ W0, 0x2741848
	0x0274183C MOVZ W0, 0x6
	0x02741840 MOV X1, X31
	0x02741844 BL 0x339DA4C
	0x02741848 MOV X0, X21
	0x0274184C MOV X1, X31
	0x02741850 BL 0x3395B7C
	0x02741854 CMP W0, W19
	0x02741858 B.CS 0x2741864
	0x0274185C MOV X0, X31
	0x02741860 BL 0x339E2CC
	0x02741864 MOV X0, X21
	0x02741868 MOV X1, X31
	0x0274186C BL 0x3395B7C
	0x02741870 LDR X8, [X20 + 0x10]
	0x02741874 CBZ X8, 0x27419D8
	0x02741878 LDR X9, [X22 + 0x20]
	0x0274187C MOV W23, W0
	0x02741880 MOV X0, X8
	0x02741884 LDR X9, [X9 + 0xC0]
	0x02741888 LDR X1, [X9 + 0x28]
	0x0274188C BL 0x29C373C
	0x02741890 SUB W8, W23, W19
	0x02741894 CMP W8, W0
	0x02741898 B.GE 0x27418A8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1C9A000
	005 Move W8, [X20+1761]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x19BA000
	012 Move X0, [X0+752]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1761], W8
	016 Move X19, [X19+16]
	017 Compare X19, 0
	018 JumpIfEqual {46}
	019 Move X10, 0x19BA000
	020 Move X8, [X19]
	021 Move X10, [X10+752]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Move X1, [X10]
	024 Compare X9, 0
	025 JumpIfEqual {32}
	026 Move X10, [X8+176]
	027 Add X10, X10, 8
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Subtract X9, X9, 1
	031 Add X10, X10, 16
	032 Move W2, 2
	033 Move X0, X19
	034 Call 0x1C5D788
	035 Move W9, [X10]
	036 Add W9, W9, 2
	037 Add X8, X8, W9
	038 Add X0, X8, 312
	039 Move X2, [X0]
	040 Move X1, [X0+8]
	041 Move X0, X19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 CallNoReturn X2
	046 Call 0x1C17F20

