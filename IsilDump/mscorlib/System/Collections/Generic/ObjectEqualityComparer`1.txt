Type: System.Collections.Generic.ObjectEqualityComparer`1

Method: System.Boolean Equals(T x, T y)

Disassembly:
	0x02454F24 MOV W0, W31
	0x02454F28 B 0x2454F40
	0x02454F2C LDR X8, [X8 + 0xC8]
	0x02454F30 ADD X8, X8, X9, 0x3, LSL
	0x02454F34 LDUR X8, [X8 - 0x8]
	0x02454F38 CMP X8, X0
	0x02454F3C CSET W0, EQ
	0x02454F40 LDP X30, X19, [X31], #0x10
	0x02454F44 RET
	0x02454F48 STR X30, [X31 - 0x10]!
	0x02454F4C CBZ X0, 0x2454F7C
	0x02454F50 MOV X1, X31
	0x02454F54 BL 0x33BE520
	0x02454F58 CBZ X0, 0x2454F7C
	0x02454F5C LDR X8, [X0]
	0x02454F60 LDP X9, X1, [X8 + 0x1A8]
	0x02454F64 BLR X9
	0x02454F68 CBZ X0, 0x2454F7C
	0x02454F6C LDR X8, [X0]
	0x02454F70 LDP X2, X1, [X8 + 0x158]
	0x02454F74 LDR X30, [X31], #0x10
	0x02454F78 BR X2
	0x02454F7C BL 0x1C16F20
	0x02454F80 LDR X8, [X1 + 0x20]
	0x02454F84 LDR X8, [X8 + 0xC0]
	0x02454F88 LDR X1, [X8 + 0x28]
	0x02454F8C B 0x2C29694
	0x02454F90 SUB X31, X31, 0x50
	0x02454F94 STP X30, X21, [X31 + 0x30]
	0x02454F98 STP X20, X19, [X31 + 0x40]
	0x02454F9C STP X3, X4, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X2
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X8, [X3+32]
	007 Move X19, X1
	008 Add X1, X31, 40
	009 Move X20, X3
	010 Move X8, [X8+192]
	011 Move X0, [X8]
	012 Call 0x1C17E04
	013 Move X8, [X20+32]
	014 Move X20, X0
	015 Move X8, [X8+192]
	016 Move X8, [X8]
	017 Move W9, [X8+309]
	018 Move TEMP, X9
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {25}
	022 Move X0, X8
	023 Call 0x1C5D684
	024 Move X8, X0
	025 Move TEMP, 0
	026 Not TEMP
	027 Move X9, TEMP
	028 Add X0, X31, 8
	029 Move X1, X20
	030 Move X2, X31
	031 Move [X31+8], X8
	032 Move [X31+16], X9
	033 Move [X31+24], X19
	034 Call ValueType.Equals, X0, X1
	035 Move X20, [X31+48]
	036 Move X19, [X31+56]
	037 Move X30, [X31+32]
	038 And W0, W0, 1
	039 Add X31, X31, 64
	040 Return X0

Method: System.Int32 GetHashCode(T obj)

Disassembly:
	0x02454FA0 LDR X8, [X5 + 0x20]
	0x02454FA4 MOV X20, X1
	0x02454FA8 ADD X1, X31, 0x20
	0x02454FAC MOV X21, X5
	0x02454FB0 LDR X8, [X8 + 0xC0]
	0x02454FB4 MOV X19, X2
	0x02454FB8 LDR X0, [X8]
	0x02454FBC BL 0x1C16E04
	0x02454FC0 LDR X8, [X21 + 0x20]
	0x02454FC4 MOV X21, X0
	0x02454FC8 LDR X8, [X8 + 0xC0]
	0x02454FCC LDR X8, [X8]
	0x02454FD0 LDRB W9, [X8 + 0x135]
	0x02454FD4 TBNZ X9, 0x0, 0x2454FE4
	0x02454FD8 MOV X0, X8
	0x02454FDC BL 0x1C5C684
	0x02454FE0 MOV X8, X0
	0x02454FE4 MOVN X9, 0x0

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move [X31+40], X19
	004 Move X8, [X2+32]
	005 Move X19, X1
	006 Move X8, [X8+192]
	007 Move X0, [X8]
	008 Move W8, [X0+309]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {14}
	013 Call 0x1C5D684
	014 Move TEMP, 0
	015 Not TEMP
	016 Move X8, TEMP
	017 Move [X31+8], X0
	018 Move [X31+16], X8
	019 Add X0, X31, 8
	020 Move X1, X31
	021 Move [X31+24], X19
	022 Call ValueType.GetHashCode, X0
	023 Move X30, [X31+32]
	024 Move X19, [X31+40]
	025 Add X31, X31, 48
	026 Return X0

Method: System.Int32 IndexOf(T[] array, T value, System.Int32 startIndex, System.Int32 count)

Disassembly:
	0x02454FE8 ADD X0, X31, 0x0
	0x02454FEC MOV X1, X21
	0x02454FF0 MOV X2, X31
	0x02454FF4 STP X8, X9, [X31]
	0x02454FF8 STP X20, X19, [X31 + 0x10]
	0x02454FFC BL 0x33D55D0
	0x02455000 LDP X20, X19, [X31 + 0x40]
	0x02455004 LDP X30, X21, [X31 + 0x30]
	0x02455008 AND W0, W0, 0x1
	0x0245500C ADD X31, X31, 0x50
	0x02455010 RET
	0x02455014 SUB X31, X31, 0x40
	0x02455018 STR X30, [X31 + 0x20]
	0x0245501C STP X20, X19, [X31 + 0x30]
	0x02455020 LDR X8, [X3 + 0x20]
	0x02455024 MOV X19, X2
	0x02455028 MOV X20, X1
	0x0245502C LDR X8, [X8 + 0xC0]
	0x02455030 LDR X0, [X8]
	0x02455034 LDRB W8, [X0 + 0x135]
	0x02455038 TBNZ X8, 0x0, 0x2455040
	0x0245503C BL 0x1C5C684
	0x02455040 MOVN X8, 0x0
	0x02455044 STP X0, X8, [X31]
	0x02455048 ADD X0, X31, 0x0
	0x0245504C MOV X1, X31
	0x02455050 STP X20, X19, [X31 + 0x10]
	0x02455054 BL 0x33D55D8
	0x02455058 LDP X20, X19, [X31 + 0x30]
	0x0245505C LDR X30, [X31 + 0x20]
	0x02455060 ADD X31, X31, 0x40
	0x02455064 RET
	0x02455068 SUB X31, X31, 0x90
	0x0245506C STR X30, [X31 + 0x30]
	0x02455070 STP X28, X27, [X31 + 0x40]
	0x02455074 STP X26, X25, [X31 + 0x50]
	0x02455078 STP X24, X23, [X31 + 0x60]
	0x0245507C STP X22, X21, [X31 + 0x70]
	0x02455080 STP X20, X19, [X31 + 0x80]
	0x02455084 ADD W8, W5, W4
	0x02455088 CMP W8, W4
	0x0245508C B.LE 0x2455148
	0x02455090 MOV X23, X1
	0x02455094 CBZ X1, 0x2455174
	0x02455098 ADD X9, X31, 0x0
	0x0245509C SXTW X8, W8
	0x024550A0 ADD X10, X23, W4, 0x4, SXTW
	0x024550A4 MOV X20, X6
	0x024550A8 MOV W19, W4
	0x024550AC MOV X21, X3
	0x024550B0 MOV X22, X2
	0x024550B4 ADD X25, X9, 0x10
	0x024550B8 ADD X26, X10, 0x20
	0x024550BC SUB X27, X8, W4, SXTW
	0x024550C0 MOVN X28, 0x0
	0x024550C4 LDR W8, [X23 + 0x18]
	0x024550C8 CMP W19, W8
	0x024550CC B.CS 0x2455170
	0x024550D0 STP X22, X21, [X31 + 0x20]
	0x024550D4 LDR X8, [X20 + 0x20]
	0x024550D8 ADD X1, X31, 0x20
	0x024550DC LDR X8, [X8 + 0xC0]
	0x024550E0 LDR X0, [X8]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+48], X26
	004 Move [X31+56], X25
	005 Move [X31+64], X24
	006 Move [X31+72], X23
	007 Move [X31+80], X22
	008 Move [X31+88], X21
	009 Move [X31+96], X20
	010 Move [X31+104], X19
	011 Add W8, W4, W3
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X22, X1
	014 Compare X1, 0
	015 JumpIfEqual {79}
	016 Move X8, W8
	017 Add X9, X22, W3
	018 Move X20, X5
	019 Move W19, W3
	020 Move X21, X2
	021 Add X24, X9, 32
	022 Subtract X25, X8, W3
	023 Move TEMP, 0
	024 Not TEMP
	025 Move X26, TEMP
	026 Move W8, [X22+24]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move [X31+40], X21
	029 Move X8, [X20+32]
	030 Add X1, X31, 40
	031 Move X8, [X8+192]
	032 Move X0, [X8]
	033 Call 0x1C17E04
	034 Move X8, [X20+32]
	035 Move X23, X0
	036 Move X8, [X8+192]
	037 Move X8, [X8]
	038 Move W9, [X8+309]
	039 Move TEMP, X9
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {46}
	043 Move X0, X8
	044 Call 0x1C5D684
	045 Move X8, X0
	046 Move W9, [X22+24]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move [X31+8], X8
	049 Move [X31+16], X26
	050 Move X8, [X24]
	051 Add X0, X31, 8
	052 Move X1, X23
	053 Move X2, X31
	054 Move [X31+24], X8
	055 Call ValueType.Equals, X0, X1
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {66}
	060 Add W19, W19, 1
	061 Subtract X25, X25, 1
	062 Add X24, X24, 8
	063 Move TEMP, 0
	064 Not TEMP
	065 Move W19, TEMP
	066 Move W0, W19
	067 Move X20, [X31+96]
	068 Move X19, [X31+104]
	069 Move X22, [X31+80]
	070 Move X21, [X31+88]
	071 Move X24, [X31+64]
	072 Move X23, [X31+72]
	073 Move X26, [X31+48]
	074 Move X25, [X31+56]
	075 Move X30, [X31+32]
	076 Add X31, X31, 112
	077 Return X0
	078 Call 0x1C17F28
	079 Call 0x1C17F20

Method: System.Int32 LastIndexOf(T[] array, T value, System.Int32 startIndex, System.Int32 count)

Disassembly:
	0x024550E4 BL 0x1C16E04
	0x024550E8 LDR X8, [X20 + 0x20]
	0x024550EC MOV X24, X0
	0x024550F0 LDR X8, [X8 + 0xC0]
	0x024550F4 LDR X8, [X8]
	0x024550F8 LDRB W9, [X8 + 0x135]
	0x024550FC TBNZ X9, 0x0, 0x245510C
	0x02455100 MOV X0, X8
	0x02455104 BL 0x1C5C684
	0x02455108 MOV X8, X0
	0x0245510C LDR W9, [X23 + 0x18]
	0x02455110 CMP W19, W9
	0x02455114 B.CS 0x2455170
	0x02455118 STP X8, X28, [X31]
	0x0245511C LDR V0, [X26]
	0x02455120 ADD X0, X31, 0x0
	0x02455124 MOV X1, X24
	0x02455128 MOV X2, X31
	0x0245512C STR V0, [X25]
	0x02455130 BL 0x33D55D0
	0x02455134 TBNZ X0, 0x0, 0x245514C
	0x02455138 ADD W19, W19, 0x1
	0x0245513C SUBS X27, X27, 0x1
	0x02455140 ADD X26, X26, 0x10
	0x02455144 B.NE 0x24550C4
	0x02455148 MOVN W19, 0x0
	0x0245514C MOV W0, W19
	0x02455150 LDP X20, X19, [X31 + 0x80]
	0x02455154 LDP X22, X21, [X31 + 0x70]
	0x02455158 LDP X24, X23, [X31 + 0x60]
	0x0245515C LDP X26, X25, [X31 + 0x50]
	0x02455160 LDP X28, X27, [X31 + 0x40]
	0x02455164 LDR X30, [X31 + 0x30]
	0x02455168 ADD X31, X31, 0x90
	0x0245516C RET
	0x02455170 BL 0x1C16F28
	0x02455174 BL 0x1C16F20
	0x02455178 SUB X31, X31, 0x80
	0x0245517C STP X30, X27, [X31 + 0x30]
	0x02455180 STP X26, X25, [X31 + 0x40]
	0x02455184 STP X24, X23, [X31 + 0x50]
	0x02455188 STP X22, X21, [X31 + 0x60]
	0x0245518C STP X20, X19, [X31 + 0x70]
	0x02455190 SUB W8, W4, W5
	0x02455194 ADD W25, W8, 0x1
	0x02455198 CMP W25, W4
	0x0245519C B.GT 0x245524C
	0x024551A0 MOV X23, X1
	0x024551A4 CBZ X1, 0x2455274
	0x024551A8 ADD X8, X31, 0x0
	0x024551AC MOV X20, X6
	0x024551B0 MOV W19, W4
	0x024551B4 MOV X21, X3
	0x024551B8 MOV X22, X2
	0x024551BC ADD X26, X8, 0x10
	0x024551C0 MOVN X27, 0x0
	0x024551C4 LDR W8, [X23 + 0x18]
	0x024551C8 CMP W19, W8

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+40], X25
	004 Move [X31+48], X24
	005 Move [X31+56], X23
	006 Move [X31+64], X22
	007 Move [X31+72], X21
	008 Move [X31+80], X20
	009 Move [X31+88], X19
	010 Subtract W8, W3, W4
	011 Add W24, W8, 1
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X22, X1
	014 Compare X1, 0
	015 JumpIfEqual {75}
	016 Move X20, X5
	017 Move W19, W3
	018 Move X21, X2
	019 Move TEMP, 0
	020 Not TEMP
	021 Move X25, TEMP
	022 Move W8, [X22+24]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move [X31+24], X21
	025 Move X8, [X20+32]
	026 Add X1, X31, 24
	027 Move X8, [X8+192]
	028 Move X0, [X8]
	029 Call 0x1C17E04
	030 Move X8, [X20+32]
	031 Move X23, X0
	032 Move X8, [X8+192]
	033 Move X8, [X8]
	034 Move W9, [X8+309]
	035 Move TEMP, X9
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {42}
	039 Move X0, X8
	040 Call 0x1C5D684
	041 Move X8, X0
	042 Move W9, [X22+24]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Add X9, X22, W19
	045 Move [X31], X8
	046 Move [X31+8], X25
	047 Add X9, X9, 32
	048 Move X8, [X9]
	049 Add X0, X31, 0
	050 Move X1, X23
	051 Move X2, X31
	052 Move [X31+16], X8
	053 Call ValueType.Equals, X0, X1
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {63}
	058 Subtract W19, W19, 1
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move TEMP, 0
	061 Not TEMP
	062 Move W19, TEMP
	063 Move W0, W19
	064 Move X20, [X31+80]
	065 Move X19, [X31+88]
	066 Move X22, [X31+64]
	067 Move X21, [X31+72]
	068 Move X24, [X31+48]
	069 Move X23, [X31+56]
	070 Move X30, [X31+32]
	071 Move X25, [X31+40]
	072 Add X31, X31, 96
	073 Return X0
	074 Call 0x1C17F28
	075 Call 0x1C17F20

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x024551CC B.CS 0x2455270
	0x024551D0 STP X22, X21, [X31 + 0x20]
	0x024551D4 LDR X8, [X20 + 0x20]
	0x024551D8 ADD X1, X31, 0x20
	0x024551DC LDR X8, [X8 + 0xC0]
	0x024551E0 LDR X0, [X8]
	0x024551E4 BL 0x1C16E04
	0x024551E8 LDR X8, [X20 + 0x20]
	0x024551EC MOV X24, X0
	0x024551F0 LDR X8, [X8 + 0xC0]
	0x024551F4 LDR X8, [X8]
	0x024551F8 LDRB W9, [X8 + 0x135]
	0x024551FC TBNZ X9, 0x0, 0x245520C
	0x02455200 MOV X0, X8
	0x02455204 BL 0x1C5C684
	0x02455208 MOV X8, X0
	0x0245520C LDR W9, [X23 + 0x18]
	0x02455210 CMP W19, W9
	0x02455214 B.CS 0x2455270
	0x02455218 SXTW X9, W19
	0x0245521C STP X8, X27, [X31]
	0x02455220 ADD X8, X23, X9, 0x4, LSL
	0x02455224 LDR V0, [X8 + 0x2]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X2+32]
	004 Move X19, X1
	005 Move X8, [X8+192]
	006 Move X0, [X8+32]
	007 Move W8, [X0+309]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {13}
	012 Call 0x1C5D684
	013 Compare X19, 0
	014 JumpIfEqual {19}
	015 Move X8, [X19]
	016 Move W9, [X0+304]
	017 Move W10, [X8+304]
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move W0, W31
	020 Move X8, [X8+200]
	021 Add X8, X8, X9
	022 NotImplemented "Instruction LDUR not yet implemented."
	023 NotImplemented "Instruction CMP not yet implemented."
	024 NotImplemented "Instruction CSET not yet implemented."
	025 Move X30, [X31+16]
	026 Move X19, [X31+24]
	027 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x02455228 ADD X0, X31, 0x0
	0x0245522C MOV X1, X24
	0x02455230 MOV X2, X31
	0x02455234 STR V0, [X26]
	0x02455238 BL 0x33D55D0
	0x0245523C TBNZ X0, 0x0, 0x2455250
	0x02455240 SUB W19, W19, 0x1
	0x02455244 CMP W19, W25
	0x02455248 B.GE 0x24551C4
	0x0245524C MOVN W19, 0x0
	0x02455250 MOV W0, W19
	0x02455254 LDP X20, X19, [X31 + 0x70]
	0x02455258 LDP X22, X21, [X31 + 0x60]
	0x0245525C LDP X24, X23, [X31 + 0x50]

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {19}
	004 Move X1, X31
	005 Call "il2cpp_vm_object_is_inst", X0
	006 Compare X0, 0
	007 JumpIfEqual {19}
	008 Move X8, [X0]
	009 Move X9, [X8+424]
	010 Move X1, [X8+432]
	011 NotImplemented "Instruction BLR not yet implemented."
	012 Compare X0, 0
	013 JumpIfEqual {19}
	014 Move X8, [X0]
	015 Move X2, [X8+344]
	016 Move X1, [X8+352]
	017 Move X30, [X31+16]
	018 CallNoReturn X2
	019 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x02455260 LDP X26, X25, [X31 + 0x40]
	0x02455264 LDP X30, X27, [X31 + 0x30]
	0x02455268 ADD X31, X31, 0x80
	0x0245526C RET
	0x02455270 BL 0x1C16F28
	0x02455274 BL 0x1C16F20
	0x02455278 STP X30, X19, [X31 - 0x10]!
	0x0245527C LDR X8, [X2 + 0x20]
	0x02455280 MOV X19, X1
	0x02455284 LDR X8, [X8 + 0xC0]
	0x02455288 LDR X0, [X8 + 0x20]
	0x0245528C LDRB W8, [X0 + 0x135]
	0x02455290 TBNZ X8, 0x0, 0x2455298
	0x02455294 BL 0x1C5C684
	0x02455298 CBZ X19, 0x24552B0
	0x0245529C LDR X8, [X19]
	0x024552A0 LDRB W9, [X0 + 0x130]
	0x024552A4 LDRB W10, [X8 + 0x130]
	0x024552A8 CMP W10, W9
	0x024552AC B.CS 0x24552B8
	0x024552B0 MOV W0, W31
	0x024552B4 B 0x24552CC
	0x024552B8 LDR X8, [X8 + 0xC8]
	0x024552BC ADD X8, X8, X9, 0x3, LSL
	0x024552C0 LDUR X8, [X8 - 0x8]
	0x024552C4 CMP X8, X0
	0x024552C8 CSET W0, EQ
	0x024552CC LDP X30, X19, [X31], #0x10
	0x024552D0 RET
	0x024552D4 STR X30, [X31 - 0x10]!
	0x024552D8 CBZ X0, 0x2455308
	0x024552DC MOV X1, X31
	0x024552E0 BL 0x33BE520
	0x024552E4 CBZ X0, 0x2455308
	0x024552E8 LDR X8, [X0]
	0x024552EC LDP X9, X1, [X8 + 0x1A8]
	0x024552F0 BLR X9
	0x024552F4 CBZ X0, 0x2455308
	0x024552F8 LDR X8, [X0]
	0x024552FC LDP X2, X1, [X8 + 0x158]
	0x02455300 LDR X30, [X31], #0x10
	0x02455304 BR X2
	0x02455308 BL 0x1C16F20
	0x0245530C LDR X8, [X1 + 0x20]
	0x02455310 LDR X8, [X8 + 0xC0]
	0x02455314 LDR X1, [X8 + 0x28]
	0x02455318 B 0x2C2A0EC
	0x0245531C SUB X31, X31, 0x40
	0x02455320 STP X30, X2, [X31 + 0x20]
	0x02455324 STP X20, X19, [X31 + 0x30]
	0x02455328 LDR X8, [X3 + 0x20]
	0x0245532C MOV X19, X1
	0x02455330 ADD X1, X31, 0x28
	0x02455334 MOV X20, X3
	0x02455338 LDR X8, [X8 + 0xC0]
	0x0245533C LDR X0, [X8]
	0x02455340 BL 0x1C16E04
	0x02455344 LDR X8, [X20 + 0x20]
	0x02455348 MOV X20, X0
	0x0245534C LDR X8, [X8 + 0xC0]
	0x02455350 LDR X8, [X8]
	0x02455354 LDRB W9, [X8 + 0x135]
	0x02455358 TBNZ X9, 0x0, 0x2455368
	0x0245535C MOV X0, X8
	0x02455360 BL 0x1C5C684
	0x02455364 MOV X8, X0
	0x02455368 MOVN X9, 0x0
	0x0245536C ADD X0, X31, 0x8
	0x02455370 MOV X1, X20
	0x02455374 MOV X2, X31
	0x02455378 STP X8, X9, [X31 + 0x8]
	0x0245537C STR X19, [X31 + 0x18]
	0x02455380 BL 0x33D55D0
	0x02455384 LDP X20, X19, [X31 + 0x30]
	0x02455388 LDR X30, [X31 + 0x20]
	0x0245538C AND W0, W0, 0x1
	0x02455390 ADD X31, X31, 0x40
	0x02455394 RET
	0x02455398 SUB X31, X31, 0x30
	0x0245539C STP X30, X19, [X31 + 0x20]
	0x024553A0 LDR X8, [X2 + 0x20]
	0x024553A4 MOV X19, X1
	0x024553A8 LDR X8, [X8 + 0xC0]
	0x024553AC LDR X0, [X8]
	0x024553B0 LDRB W8, [X0 + 0x135]
	0x024553B4 TBNZ X8, 0x0, 0x24553BC
	0x024553B8 BL 0x1C5C684
	0x024553BC MOVN X8, 0x0
	0x024553C0 STP X0, X8, [X31 + 0x8]
	0x024553C4 ADD X0, X31, 0x8
	0x024553C8 MOV X1, X31
	0x024553CC STR X19, [X31 + 0x18]
	0x024553D0 BL 0x33D55D8
	0x024553D4 LDP X30, X19, [X31 + 0x20]
	0x024553D8 ADD X31, X31, 0x30
	0x024553DC RET
	0x024553E0 SUB X31, X31, 0x70
	0x024553E4 STR X30, [X31 + 0x20]
	0x024553E8 STP X26, X25, [X31 + 0x30]
	0x024553EC STP X24, X23, [X31 + 0x40]
	0x024553F0 STP X22, X21, [X31 + 0x50]
	0x024553F4 STP X20, X19, [X31 + 0x60]
	0x024553F8 ADD W8, W4, W3
	0x024553FC CMP W8, W3
	0x02455400 B.LE 0x24554B0
	0x02455404 MOV X22, X1
	0x02455408 CBZ X1, 0x24554D8
	0x0245540C SXTW X8, W8
	0x02455410 ADD X9, X22, W3, 0x3, SXTW
	0x02455414 MOV X20, X5
	0x02455418 MOV W19, W3
	0x0245541C MOV X21, X2
	0x02455420 ADD X24, X9, 0x20
	0x02455424 SUB X25, X8, W3, SXTW
	0x02455428 MOVN X26, 0x0
	0x0245542C LDR W8, [X22 + 0x18]
	0x02455430 CMP W19, W8
	0x02455434 B.CS 0x24554D4
	0x02455438 STR X21, [X31 + 0x28]
	0x0245543C LDR X8, [X20 + 0x20]
	0x02455440 ADD X1, X31, 0x28
	0x02455444 LDR X8, [X8 + 0xC0]
	0x02455448 LDR X0, [X8]
	0x0245544C BL 0x1C16E04
	0x02455450 LDR X8, [X20 + 0x20]
	0x02455454 MOV X23, X0
	0x02455458 LDR X8, [X8 + 0xC0]
	0x0245545C LDR X8, [X8]
	0x02455460 LDRB W9, [X8 + 0x135]
	0x02455464 TBNZ X9, 0x0, 0x2455474
	0x02455468 MOV X0, X8
	0x0245546C BL 0x1C5C684
	0x02455470 MOV X8, X0
	0x02455474 LDR W9, [X22 + 0x18]
	0x02455478 CMP W19, W9
	0x0245547C B.CS 0x24554D4
	0x02455480 STP X8, X26, [X31 + 0x8]
	0x02455484 LDR X8, [X24]
	0x02455488 ADD X0, X31, 0x8
	0x0245548C MOV X1, X23
	0x02455490 MOV X2, X31
	0x02455494 STR X8, [X31 + 0x18]
	0x02455498 BL 0x33D55D0
	0x0245549C TBNZ X0, 0x0, 0x24554B4
	0x024554A0 ADD W19, W19, 0x1
	0x024554A4 SUBS X25, X25, 0x1
	0x024554A8 ADD X24, X24, 0x8
	0x024554AC B.NE 0x245542C
	0x024554B0 MOVN W19, 0x0
	0x024554B4 MOV W0, W19
	0x024554B8 LDP X20, X19, [X31 + 0x60]
	0x024554BC LDP X22, X21, [X31 + 0x50]
	0x024554C0 LDP X24, X23, [X31 + 0x40]
	0x024554C4 LDP X26, X25, [X31 + 0x30]
	0x024554C8 LDR X30, [X31 + 0x20]
	0x024554CC ADD X31, X31, 0x70
	0x024554D0 RET
	0x024554D4 BL 0x1C16F28
	0x024554D8 BL 0x1C16F20
	0x024554DC SUB X31, X31, 0x60
	0x024554E0 STP X30, X25, [X31 + 0x20]
	0x024554E4 STP X24, X23, [X31 + 0x30]
	0x024554E8 STP X22, X21, [X31 + 0x40]
	0x024554EC STP X20, X19, [X31 + 0x50]
	0x024554F0 SUB W8, W3, W4
	0x024554F4 ADD W24, W8, 0x1
	0x024554F8 CMP W24, W3
	0x024554FC B.GT 0x245559C
	0x02455500 MOV X22, X1
	0x02455504 CBZ X1, 0x24555C0
	0x02455508 MOV X20, X5
	0x0245550C MOV W19, W3
	0x02455510 MOV X21, X2
	0x02455514 MOVN X25, 0x0
	0x02455518 LDR W8, [X22 + 0x18]
	0x0245551C CMP W19, W8
	0x02455520 B.CS 0x24555BC
	0x02455524 STR X21, [X31 + 0x18]
	0x02455528 LDR X8, [X20 + 0x20]
	0x0245552C ADD X1, X31, 0x18
	0x02455530 LDR X8, [X8 + 0xC0]
	0x02455534 LDR X0, [X8]
	0x02455538 BL 0x1C16E04
	0x0245553C LDR X8, [X20 + 0x20]
	0x02455540 MOV X23, X0
	0x02455544 LDR X8, [X8 + 0xC0]
	0x02455548 LDR X8, [X8]
	0x0245554C LDRB W9, [X8 + 0x135]
	0x02455550 TBNZ X9, 0x0, 0x2455560
	0x02455554 MOV X0, X8
	0x02455558 BL 0x1C5C684
	0x0245555C MOV X8, X0
	0x02455560 LDR W9, [X22 + 0x18]
	0x02455564 CMP W19, W9
	0x02455568 B.CS 0x24555BC
	0x0245556C ADD X9, X22, W19, 0x3, SXTW
	0x02455570 STP X8, X25, [X31]
	0x02455574 LDR X8, [X9 + 0x20]!
	0x02455578 ADD X0, X31, 0x0
	0x0245557C MOV X1, X23
	0x02455580 MOV X2, X31
	0x02455584 STR X8, [X31 + 0x10]
	0x02455588 BL 0x33D55D0
	0x0245558C TBNZ X0, 0x0, 0x24555A0
	0x02455590 SUB W19, W19, 0x1
	0x02455594 CMP W19, W24
	0x02455598 B.GE 0x2455518
	0x0245559C MOVN W19, 0x0
	0x024555A0 MOV W0, W19
	0x024555A4 LDP X20, X19, [X31 + 0x50]
	0x024555A8 LDP X22, X21, [X31 + 0x40]
	0x024555AC LDP X24, X23, [X31 + 0x30]
	0x024555B0 LDP X30, X25, [X31 + 0x20]
	0x024555B4 ADD X31, X31, 0x60
	0x024555B8 RET
	0x024555BC BL 0x1C16F28
	0x024555C0 BL 0x1C16F20
	0x024555C4 STP X30, X19, [X31 - 0x10]!
	0x024555C8 LDR X8, [X2 + 0x20]
	0x024555CC MOV X19, X1
	0x024555D0 LDR X8, [X8 + 0xC0]
	0x024555D4 LDR X0, [X8 + 0x20]
	0x024555D8 LDRB W8, [X0 + 0x135]
	0x024555DC TBNZ X8, 0x0, 0x24555E4
	0x024555E0 BL 0x1C5C684
	0x024555E4 CBZ X19, 0x24555FC
	0x024555E8 LDR X8, [X19]
	0x024555EC LDRB W9, [X0 + 0x130]
	0x024555F0 LDRB W10, [X8 + 0x130]
	0x024555F4 CMP W10, W9
	0x024555F8 B.CS 0x2455604
	0x024555FC MOV W0, W31
	0x02455600 B 0x2455618
	0x02455604 LDR X8, [X8 + 0xC8]
	0x02455608 ADD X8, X8, X9, 0x3, LSL
	0x0245560C LDUR X8, [X8 - 0x8]
	0x02455610 CMP X8, X0
	0x02455614 CSET W0, EQ
	0x02455618 LDP X30, X19, [X31], #0x10
	0x0245561C RET
	0x02455620 STR X30, [X31 - 0x10]!
	0x02455624 CBZ X0, 0x2455654
	0x02455628 MOV X1, X31
	0x0245562C BL 0x33BE520
	0x02455630 CBZ X0, 0x2455654
	0x02455634 LDR X8, [X0]
	0x02455638 LDP X9, X1, [X8 + 0x1A8]
	0x0245563C BLR X9
	0x02455640 CBZ X0, 0x2455654
	0x02455644 LDR X8, [X0]
	0x02455648 LDP X2, X1, [X8 + 0x158]
	0x0245564C LDR X30, [X31], #0x10
	0x02455650 BR X2
	0x02455654 BL 0x1C16F20
	0x02455658 LDR X8, [X1 + 0x20]
	0x0245565C LDR X8, [X8 + 0xC0]
	0x02455660 LDR X1, [X8 + 0x28]
	0x02455664 B 0x2C2AB24
	0x02455668 SUB X31, X31, 0x20
	0x0245566C STP X30, X19, [X31 + 0x10]
	0x02455670 STP X2, X1, [X31]
	0x02455674 LDR X8, [X3 + 0x20]
	0x02455678 ADD X1, X31, 0x0
	0x0245567C MOV X19, X3
	0x02455680 LDR X8, [X8 + 0xC0]
	0x02455684 LDR X0, [X8]
	0x02455688 BL 0x1C16E04
	0x0245568C LDR X8, [X19 + 0x20]
	0x02455690 MOV X1, X0
	0x02455694 ADD X0, X31, 0x8
	0x02455698 LDR X8, [X8 + 0xC0]
	0x0245569C LDR X2, [X8 + 0x8]
	0x024556A0 BL 0x2E0D50C
	0x024556A4 LDP X30, X19, [X31 + 0x10]
	0x024556A8 AND W0, W0, 0x1
	0x024556AC ADD X31, X31, 0x20
	0x024556B0 RET
	0x024556B4 STR X30, [X31 - 0x10]!
	0x024556B8 STR X1, [X31 + 0x8]
	0x024556BC LDR X8, [X2 + 0x20]
	0x024556C0 ADD X0, X31, 0x8
	0x024556C4 LDR X8, [X8 + 0xC0]
	0x024556C8 LDR X1, [X8 + 0x10]
	0x024556CC BL 0x2E0D64C
	0x024556D0 LDR X30, [X31], #0x10
	0x024556D4 RET
	0x024556D8 STR X30, [X31 - 0x40]!
	0x024556DC STP X24, X23, [X31 + 0x10]
	0x024556E0 STP X22, X21, [X31 + 0x20]
	0x024556E4 STP X20, X19, [X31 + 0x30]
	0x024556E8 ADD W8, W4, W3
	0x024556EC CMP W8, W3
	0x024556F0 B.LE 0x2455774
	0x024556F4 MOV X22, X1
	0x024556F8 CBZ X1, 0x2455794
	0x024556FC SXTW X8, W8
	0x02455700 ADD X9, X22, W3, 0x3, SXTW
	0x02455704 MOV X20, X5
	0x02455708 MOV W19, W3
	0x0245570C MOV X21, X2
	0x02455710 ADD X23, X9, 0x20
	0x02455714 SUB X24, X8, W3, SXTW
	0x02455718 LDR W8, [X22 + 0x18]
	0x0245571C CMP W19, W8
	0x02455720 B.CS 0x2455790
	0x02455724 STR X21, [X31 + 0x8]
	0x02455728 LDR X8, [X20 + 0x20]
	0x0245572C ADD X1, X31, 0x8
	0x02455730 LDR X8, [X8 + 0xC0]
	0x02455734 LDR X0, [X8]
	0x02455738 BL 0x1C16E04
	0x0245573C LDR W8, [X22 + 0x18]
	0x02455740 CMP W19, W8
	0x02455744 B.CS 0x2455790
	0x02455748 LDR X8, [X20 + 0x20]
	0x0245574C MOV X1, X0
	0x02455750 MOV X0, X23
	0x02455754 LDR X8, [X8 + 0xC0]
	0x02455758 LDR X2, [X8 + 0x8]
	0x0245575C BL 0x2E0D50C
	0x02455760 TBNZ X0, 0x0, 0x2455778
	0x02455764 ADD W19, W19, 0x1
	0x02455768 SUBS X24, X24, 0x1
	0x0245576C ADD X23, X23, 0x8
	0x02455770 B.NE 0x2455718
	0x02455774 MOVN W19, 0x0
	0x02455778 MOV W0, W19
	0x0245577C LDP X20, X19, [X31 + 0x30]
	0x02455780 LDP X22, X21, [X31 + 0x20]
	0x02455784 LDP X24, X23, [X31 + 0x10]
	0x02455788 LDR X30, [X31], #0x40
	0x0245578C RET
	0x02455790 BL 0x1C16F28
	0x02455794 BL 0x1C16F20
	0x02455798 SUB X31, X31, 0x40
	0x0245579C STP X30, X23, [X31 + 0x10]
	0x024557A0 STP X22, X21, [X31 + 0x20]
	0x024557A4 STP X20, X19, [X31 + 0x30]
	0x024557A8 SUB W8, W3, W4
	0x024557AC ADD W23, W8, 0x1
	0x024557B0 CMP W23, W3
	0x024557B4 B.GT 0x245582C
	0x024557B8 MOV X22, X1
	0x024557BC CBZ X1, 0x245584C
	0x024557C0 MOV X20, X5
	0x024557C4 MOV W19, W3
	0x024557C8 MOV X21, X2
	0x024557CC LDR W8, [X22 + 0x18]
	0x024557D0 CMP W19, W8
	0x024557D4 B.CS 0x2455848
	0x024557D8 STR X21, [X31 + 0x8]
	0x024557DC LDR X8, [X20 + 0x20]
	0x024557E0 ADD X1, X31, 0x8
	0x024557E4 LDR X8, [X8 + 0xC0]
	0x024557E8 LDR X0, [X8]
	0x024557EC BL 0x1C16E04
	0x024557F0 LDR W8, [X22 + 0x18]
	0x024557F4 CMP W19, W8
	0x024557F8 B.CS 0x2455848
	0x024557FC LDR X8, [X20 + 0x20]
	0x02455800 MOV X1, X0
	0x02455804 LDR X8, [X8 + 0xC0]
	0x02455808 LDR X2, [X8 + 0x8]
	0x0245580C SXTW X8, W19
	0x02455810 ADD X8, X22, X8, 0x3, LSL
	0x02455814 ADD X0, X8, 0x20
	0x02455818 BL 0x2E0D50C
	0x0245581C TBNZ X0, 0x0, 0x2455830
	0x02455820 SUB W19, W19, 0x1
	0x02455824 CMP W19, W23
	0x02455828 B.GE 0x24557CC
	0x0245582C MOVN W19, 0x0
	0x02455830 MOV W0, W19
	0x02455834 LDP X20, X19, [X31 + 0x30]
	0x02455838 LDP X22, X21, [X31 + 0x20]
	0x0245583C LDP X30, X23, [X31 + 0x10]
	0x02455840 ADD X31, X31, 0x40
	0x02455844 RET
	0x02455848 BL 0x1C16F28
	0x0245584C BL 0x1C16F20
	0x02455850 STP X30, X19, [X31 - 0x10]!
	0x02455854 LDR X8, [X2 + 0x20]
	0x02455858 MOV X19, X1
	0x0245585C LDR X8, [X8 + 0xC0]
	0x02455860 LDR X0, [X8 + 0x20]
	0x02455864 LDRB W8, [X0 + 0x135]
	0x02455868 TBNZ X8, 0x0, 0x2455870
	0x0245586C BL 0x1C5C684
	0x02455870 CBZ X19, 0x2455888
	0x02455874 LDR X8, [X19]
	0x02455878 LDRB W9, [X0 + 0x130]
	0x0245587C LDRB W10, [X8 + 0x130]
	0x02455880 CMP W10, W9
	0x02455884 B.CS 0x2455890
	0x02455888 MOV W0, W31
	0x0245588C B 0x24558A4
	0x02455890 LDR X8, [X8 + 0xC8]
	0x02455894 ADD X8, X8, X9, 0x3, LSL
	0x02455898 LDUR X8, [X8 - 0x8]
	0x0245589C CMP X8, X0
	0x024558A0 CSET W0, EQ
	0x024558A4 LDP X30, X19, [X31], #0x10
	0x024558A8 RET
	0x024558AC STR X30, [X31 - 0x10]!
	0x024558B0 CBZ X0, 0x24558E0
	0x024558B4 MOV X1, X31
	0x024558B8 BL 0x33BE520
	0x024558BC CBZ X0, 0x24558E0
	0x024558C0 LDR X8, [X0]
	0x024558C4 LDP X9, X1, [X8 + 0x1A8]
	0x024558C8 BLR X9
	0x024558CC CBZ X0, 0x24558E0
	0x024558D0 LDR X8, [X0]
	0x024558D4 LDP X2, X1, [X8 + 0x158]
	0x024558D8 LDR X30, [X31], #0x10
	0x024558DC BR X2
	0x024558E0 BL 0x1C16F20
	0x024558E4 LDR X8, [X1 + 0x20]
	0x024558E8 LDR X8, [X8 + 0xC0]
	0x024558EC LDR X1, [X8 + 0x28]
	0x024558F0 B 0x2C2B55C
	0x024558F4 SUB X31, X31, 0x20

ISIL:
	001 Move X8, [X1+32]
	002 Move X8, [X8+192]
	003 Move X1, [X8+40]
	004 Call 0x2C29224, X0
	005 Return 
	006 Move [X31-64], X29
	007 Move [X31-56], X30
	008 Move [X31+16], X23
	009 Move [X31+32], X22
	010 Move [X31+40], X21
	011 Move [X31+48], X20
	012 Move [X31+56], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 16
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move X8, [X23+40]
	017 Move X19, X1
	018 Move X20, X0
	019 Move [X29-8], X8
	020 Move X8, [X2+32]
	021 Add X9, X8, 309
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Move TEMP, X9
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {33}
	027 Move X0, X8
	028 Move X21, X2
	029 Call 0x1C5D684
	030 Move X8, [X21+32]
	031 Add X9, X8, 309
	032 NotImplemented "Instruction LDRH not yet implemented."
	033 Move X0, X8
	034 Move X10, [X0+192]
	035 Move X10, [X10]
	036 Move W21, [X10+252]
	037 Add X10, X31, 0
	038 Add X11, X21, 15
	039 And X11, X11, 0x1FFFFFFFF
	040 Subtract X22, X10, X11
	041 Add X31, X22, 0
	042 Move TEMP, X9
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {49}
	046 Move X0, X8
	047 Call 0x1C5D684
	048 Move X8, X0
	049 Move X8, [X8+192]
	050 Move X0, X20
	051 Move X8, [X8+8]
	052 Move X8, [X8+128]
	053 Add X1, X8, 32
	054 Call 0x1C17D18
	055 Move X1, X0
	056 Move X0, X22
	057 Move X2, X21
	058 Call 0x3EB2AC0
	059 Move X0, X19
	060 Move X1, X22
	061 Move X2, X21
	062 Call 0x3EB2AC0
	063 Move X8, [X23+40]
	064 NotImplemented "Instruction LDUR not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Add X31, X29, 0
	067 Move X20, [X31+48]
	068 Move X19, [X31+56]
	069 Move X22, [X31+32]
	070 Move X21, [X31+40]
	071 Move X23, [X31+16]
	072 Move X29, [X31+64]
	073 Move X30, [X31+72]
	074 Return 
	075 Call 0x3EB2B20
	076 Move [X31-48], X30
	077 Move [X31-40], X23
	078 Move [X31+16], X22
	079 Move [X31+24], X21
	080 Move [X31+32], X20
	081 Move [X31+40], X19
	082 Move X22, 0x1F85000
	083 Move W8, [X22+2890]
	084 Move X20, X2
	085 Move X21, X1
	086 Move X19, X0
	087 Compare W8, 0
	088 JumpIfNotEqual {103}
	089 Move X0, 0x1CA1000
	090 Move X0, [X0+3144]
	091 Call 0x1C17CF4
	092 Move X0, 0x1C9F000
	093 Move X0, [X0+2512]
	094 Call 0x1C17CF4
	095 Move X0, 0x1CC8000
	096 Move X0, [X0+3384]
	097 Call 0x1C17CF4
	098 Move X0, 0x1CA7000
	099 Move X0, [X0+800]
	100 Call 0x1C17CF4
	101 Move W8, 1
	102 Move [X22+2890], W8
	103 Move X0, X21
	104 Move X1, X31
	105 Call String.IsNullOrEmpty, X0
	106 Move X8, 0x1CA7000
	107 Move X8, [X8+800]
	108 And W31, W0, 1
	109 Move X8, [X8]
	110 NotImplemented "Instruction CSEL not yet implemented."
	111 Compare X20, 0
	112 JumpIfNotEqual {129}
	113 Move X8, 0x1CA1000
	114 Move X8, [X8+3144]
	115 Move X0, [X8]
	116 Move W8, [X0+224]
	117 Compare W8, 0
	118 JumpIfNotEqual {120}
	119 Call 0x1C17DFC
	120 Move X0, X31
	121 Call CultureInfo.get_InvariantCulture
	122 Compare X0, 0
	123 JumpIfEqual {223}
	124 Move X8, [X0]
	125 Move X9, [X8+536]
	126 Move X1, [X8+544]
	127 NotImplemented "Instruction BLR not yet implemented."
	128 Move X20, X0
	129 Move X8, 0x1C9F000
	130 Move X8, [X8+2512]
	131 Move W1, 4
	132 Move X0, [X8]
	133 Call 0x1C17D6C
	134 Move X22, X0
	135 Move X0, X19
	136 Move X1, X21
	137 Move X2, X20
	138 Move X3, X31
	139 Call Single.ToString, X0, X1, X2
	140 Compare X22, 0
	141 JumpIfEqual {223}
	142 Move X23, X0
	143 Compare X0, 0
	144 JumpIfEqual {151}
	145 Move X8, [X22]
	146 Move X0, X23
	147 Move X1, [X8+64]
	148 Call 0x1C17E00
	149 Compare X0, 0
	150 JumpIfEqual {220}
	151 Move W8, [X22+24]
	152 Compare W8, 0
	153 JumpIfEqual {219}
	154 Add X0, X19, 4
	155 Move X1, X21
	156 Move X2, X20
	157 Move X3, X31
	158 Move [X22+32], X23
	159 Call Single.ToString, X0, X1, X2
	160 Move X23, X0
	161 Compare X0, 0
	162 JumpIfEqual {169}
	163 Move X8, [X22]
	164 Move X0, X23
	165 Move X1, [X8+64]
	166 Call 0x1C17E00
	167 Compare X0, 0
	168 JumpIfEqual {220}
	169 Move W8, [X22+24]
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Add X0, X19, 8
	172 Move X1, X21
	173 Move X2, X20
	174 Move X3, X31
	175 Move [X22+40], X23
	176 Call Single.ToString, X0, X1, X2
	177 Move X23, X0
	178 Compare X0, 0
	179 JumpIfEqual {186}
	180 Move X8, [X22]
	181 Move X0, X23
	182 Move X1, [X8+64]
	183 Call 0x1C17E00
	184 Compare X0, 0
	185 JumpIfEqual {220}
	186 Move W8, [X22+24]
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Add X0, X19, 12
	189 Move X1, X21
	190 Move X2, X20
	191 Move X3, X31
	192 Move [X22+48], X23
	193 Call Single.ToString, X0, X1, X2
	194 Move X19, X0
	195 Compare X0, 0
	196 JumpIfEqual {203}
	197 Move X8, [X22]
	198 Move X0, X19
	199 Move X1, [X8+64]
	200 Call 0x1C17E00
	201 Compare X0, 0
	202 JumpIfEqual {220}
	203 Move W8, [X22+24]
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Move [X22+56], X19
	206 Move X8, 0x1CC8000
	207 Move X8, [X8+3384]
	208 Move X1, X22
	209 Move X20, [X31+32]
	210 Move X19, [X31+40]
	211 Move X22, [X31+16]
	212 Move X21, [X31+24]
	213 Move X0, [X8]
	214 Move X2, X31
	215 Move X30, [X31+48]
	216 Move X23, [X31+56]
	217 Call UnityString.Format, X0, X1
	218 Return 
	219 Call 0x1C17F28
	220 Call 0x1C17F44
	221 Move X1, X31
	222 Call 0x1C17DEC
	223 Call 0x1C17F20
	224 Move [X31-48], X30
	225 Move [X31-40], X23
	226 Move [X31+16], X22
	227 Move [X31+24], X21
	228 Move [X31+32], X20
	229 Move [X31+40], X19
	230 Move X22, 0x1F85000
	231 Move W8, [X22+2891]
	232 Move X20, X2
	233 Move X21, X1
	234 Move X19, X0
	235 Compare W8, 0
	236 JumpIfNotEqual {251}
	237 Move X0, 0x1CA1000
	238 Move X0, [X0+3144]
	239 Call 0x1C17CF4
	240 Move X0, 0x1C9F000
	241 Move X0, [X0+2512]
	242 Call 0x1C17CF4
	243 Move X0, 0x1CA6000
	244 Move X0, [X0+3704]
	245 Call 0x1C17CF4
	246 Move X0, 0x1CC8000
	247 Move X0, [X0+3392]
	248 Call 0x1C17CF4
	249 Move W8, 1
	250 Move [X22+2891], W8
	251 Move X0, X21
	252 Move X1, X31
	253 Call String.IsNullOrEmpty, X0
	254 Move X8, 0x1CA6000
	255 Move X8, [X8+3704]
	256 And W31, W0, 1
	257 Move X8, [X8]
	258 NotImplemented "Instruction CSEL not yet implemented."
	259 Compare X20, 0
	260 JumpIfNotEqual {277}
	261 Move X8, 0x1CA1000
	262 Move X8, [X8+3144]
	263 Move X0, [X8]
	264 Move W8, [X0+224]
	265 Compare W8, 0
	266 JumpIfNotEqual {268}
	267 Call 0x1C17DFC
	268 Move X0, X31
	269 Call CultureInfo.get_InvariantCulture
	270 Compare X0, 0
	271 JumpIfEqual {334}
	272 Move X8, [X0]
	273 Move X9, [X8+536]
	274 Move X1, [X8+544]
	275 NotImplemented "Instruction BLR not yet implemented."
	276 Move X20, X0
	277 Move X8, 0x1C9F000
	278 Move X8, [X8+2512]
	279 Move W1, 2
	280 Move X0, [X8]
	281 Call 0x1C17D6C
	282 Move X22, X0
	283 Move X0, X19
	284 Move X1, X21
	285 Move X2, X20
	286 Move X3, X31
	287 Call 0x2431694
	288 Compare X22, 0
	289 JumpIfEqual {334}
	290 Move X23, X0
	291 Compare X0, 0
	292 JumpIfEqual {299}
	293 Move X8, [X22]
	294 Move X0, X23
	295 Move X1, [X8+64]
	296 Call 0x1C17E00
	297 Compare X0, 0
	298 JumpIfEqual {335}
	299 Move W8, [X22+24]
	300 Compare W8, 0
	301 JumpIfEqual {333}
	302 Add X0, X19, 12
	303 Move X1, X21
	304 Move X2, X20
	305 Move X3, X31
	306 Move [X22+32], X23
	307 Call 0x2431694
	308 Move X19, X0
	309 Compare X0, 0
	310 JumpIfEqual {317}
	311 Move X8, [X22]
	312 Move X0, X19
	313 Move X1, [X8+64]
	314 Call 0x1C17E00
	315 Compare X0, 0
	316 JumpIfEqual {335}
	317 Move W8, [X22+24]
	318 NotImplemented "Instruction CMP not yet implemented."
	319 Move [X22+40], X19
	320 Move X8, 0x1CC8000
	321 Move X8, [X8+3392]
	322 Move X1, X22
	323 Move X20, [X31+32]
	324 Move X19, [X31+40]
	325 Move X22, [X31+16]
	326 Move X21, [X31+24]
	327 Move X0, [X8]
	328 Move X2, X31
	329 Move X30, [X31+48]
	330 Move X23, [X31+56]
	331 Call UnityString.Format, X0, X1
	332 Return 
	333 Call 0x1C17F28
	334 Call 0x1C17F20
	335 Call 0x1C17F44
	336 Move X1, X31
	337 Call 0x1C17DEC
	338 Move [X31-48], X30
	339 Move [X31-40], X23
	340 Move [X31+16], X22
	341 Move [X31+24], X21
	342 Move [X31+32], X20
	343 Move [X31+40], X19
	344 Move X22, 0x1F85000
	345 Move W8, [X22+2892]
	346 Move X20, X2
	347 Move X21, X1
	348 Move X19, X0
	349 Compare W8, 0
	350 JumpIfNotEqual {365}
	351 Move X0, 0x1CA1000
	352 Move X0, [X0+3144]
	353 Call 0x1C17CF4
	354 Move X0, 0x1C9F000
	355 Move X0, [X0+2512]
	356 Call 0x1C17CF4
	357 Move X0, 0x1CA6000
	358 Move X0, [X0+3704]
	359 Call 0x1C17CF4
	360 Move X0, 0x1CC8000
	361 Move X0, [X0+3384]
	362 Call 0x1C17CF4
	363 Move W8, 1
	364 Move [X22+2892], W8
	365 Move X0, X21
	366 Move X1, X31
	367 Call String.IsNullOrEmpty, X0
	368 Move X8, 0x1CA6000
	369 Move X8, [X8+3704]
	370 And W31, W0, 1
	371 Move X8, [X8]
	372 NotImplemented "Instruction CSEL not yet implemented."
	373 Compare X20, 0
	374 JumpIfNotEqual {391}
	375 Move X8, 0x1CA1000
	376 Move X8, [X8+3144]
	377 Move X0, [X8]
	378 Move W8, [X0+224]
	379 Compare W8, 0
	380 JumpIfNotEqual {382}
	381 Call 0x1C17DFC
	382 Move X0, X31
	383 Call CultureInfo.get_InvariantCulture
	384 Compare X0, 0
	385 JumpIfEqual {485}
	386 Move X8, [X0]
	387 Move X9, [X8+536]
	388 Move X1, [X8+544]
	389 NotImplemented "Instruction BLR not yet implemented."
	390 Move X20, X0
	391 Move X8, 0x1C9F000
	392 Move X8, [X8+2512]
	393 Move W1, 4
	394 Move X0, [X8]
	395 Call 0x1C17D6C
	396 Move X22, X0
	397 Move X0, X19
	398 Move X1, X21
	399 Move X2, X20
	400 Move X3, X31
	401 Call Single.ToString, X0, X1, X2
	402 Compare X22, 0
	403 JumpIfEqual {485}
	404 Move X23, X0
	405 Compare X0, 0
	406 JumpIfEqual {413}
	407 Move X8, [X22]
	408 Move X0, X23
	409 Move X1, [X8+64]
	410 Call 0x1C17E00
	411 Compare X0, 0
	412 JumpIfEqual {482}
	413 Move W8, [X22+24]
	414 Compare W8, 0
	415 JumpIfEqual {481}
	416 Add X0, X19, 4
	417 Move X1, X21
	418 Move X2, X20
	419 Move X3, X31
	420 Move [X22+32], X23
	421 Call Single.ToString, X0, X1, X2
	422 Move X23, X0
	423 Compare X0, 0
	424 JumpIfEqual {431}
	425 Move X8, [X22]
	426 Move X0, X23
	427 Move X1, [X8+64]
	428 Call 0x1C17E00
	429 Compare X0, 0
	430 JumpIfEqual {482}
	431 Move W8, [X22+24]
	432 NotImplemented "Instruction CMP not yet implemented."
	433 Add X0, X19, 8
	434 Move X1, X21
	435 Move X2, X20
	436 Move X3, X31
	437 Move [X22+40], X23
	438 Call Single.ToString, X0, X1, X2
	439 Move X23, X0
	440 Compare X0, 0
	441 JumpIfEqual {448}
	442 Move X8, [X22]
	443 Move X0, X23
	444 Move X1, [X8+64]
	445 Call 0x1C17E00
	446 Compare X0, 0
	447 JumpIfEqual {482}
	448 Move W8, [X22+24]
	449 NotImplemented "Instruction CMP not yet implemented."
	450 Add X0, X19, 12
	451 Move X1, X21
	452 Move X2, X20
	453 Move X3, X31
	454 Move [X22+48], X23
	455 Call Single.ToString, X0, X1, X2
	456 Move X19, X0
	457 Compare X0, 0
	458 JumpIfEqual {465}
	459 Move X8, [X22]
	460 Move X0, X19
	461 Move X1, [X8+64]
	462 Call 0x1C17E00
	463 Compare X0, 0
	464 JumpIfEqual {482}
	465 Move W8, [X22+24]
	466 NotImplemented "Instruction CMP not yet implemented."
	467 Move [X22+56], X19
	468 Move X8, 0x1CC8000
	469 Move X8, [X8+3384]
	470 Move X1, X22
	471 Move X20, [X31+32]
	472 Move X19, [X31+40]
	473 Move X22, [X31+16]
	474 Move X21, [X31+24]
	475 Move X0, [X8]
	476 Move X2, X31
	477 Move X30, [X31+48]
	478 Move X23, [X31+56]
	479 Call UnityString.Format, X0, X1
	480 Return 
	481 Call 0x1C17F28
	482 Call 0x1C17F44
	483 Move X1, X31
	484 Call 0x1C17DEC
	485 Call 0x1C17F20

