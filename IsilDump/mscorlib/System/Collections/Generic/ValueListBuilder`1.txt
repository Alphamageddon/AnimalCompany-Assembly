Type: System.Collections.Generic.ValueListBuilder`1

Method: System.Void .ctor(System.Span`1<T> initialSpan)

Disassembly:
	0x0278E6C4 MOV X21, X1
	0x0278E6C8 ADD X9, X8, 0x135
	0x0278E6CC LDRH W9, [X9]
	0x0278E6D0 TBNZ X9, 0x0, 0x278E6EC

ISIL:
	001 Move [X0], X1
	002 Move [X0+8], X2
	003 Move [X0+16], X31
	004 Move [X0+24], W31
	005 Return 

Method: System.Int32 get_Length()

Disassembly:
	0x0278E6D4 MOV X0, X8
	0x0278E6D8 BL 0x1C5C684

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.Void Append(T item)

Disassembly:
	0x0278E6DC LDR X8, [X19 + 0x20]
	0x0278E6E0 ADD X9, X8, 0x135
	0x0278E6E4 LDRH W9, [X9]
	0x0278E6E8 B 0x278E6F0
	0x0278E6EC MOV X0, X8
	0x0278E6F0 LDR X10, [X0 + 0xC0]
	0x0278E6F4 LDR X10, [X10 + 0x58]
	0x0278E6F8 LDR X3, [X10]
	0x0278E6FC TBNZ X9, 0x0, 0x278E714
	0x0278E700 MOV X0, X8
	0x0278E704 STR X3, [X31 + 0x8]
	0x0278E708 BL 0x1C5C684
	0x0278E70C LDR X3, [X31 + 0x8]
	0x0278E710 MOV X8, X0
	0x0278E714 LDR X8, [X8 + 0xC0]
	0x0278E718 MOV X0, X20
	0x0278E71C MOV X1, X21
	0x0278E720 LDP X20, X19, [X31 + 0x20]
	0x0278E724 LDR X2, [X8 + 0x58]
	0x0278E728 LDP X22, X21, [X31 + 0x10]
	0x0278E72C LDR X30, [X31], #0x30
	0x0278E730 BR X3
	0x0278E734 STR X30, [X31 - 0x20]!
	0x0278E738 STP X20, X19, [X31 + 0x10]
	0x0278E73C LDR X8, [X0 + 0x10]
	0x0278E740 CBZ X8, 0x278E7EC
	0x0278E744 MOV X19, X0
	0x0278E748 LDR X0, [X1 + 0x20]
	0x0278E74C MOV X20, X1
	0x0278E750 LDRB W8, [X0 + 0x135]
	0x0278E754 TBNZ X8, 0x0, 0x278E75C
	0x0278E758 BL 0x1C5C684
	0x0278E75C LDR X8, [X0 + 0xC0]
	0x0278E760 LDR X0, [X8 + 0x70]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X0
	007 Move X0, [X2+32]
	008 NotImplemented "Instruction LDRSW not yet implemented."
	009 Move X21, X2
	010 Move W20, W1
	011 Move W8, [X0+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {17}
	016 Call 0x1C5D684
	017 Move W8, [X19+8]
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move X0, [X21+32]
	020 Move W8, [X0+309]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {26}
	025 Call 0x1C5D684
	026 Move X8, [X0+192]
	027 Move X0, X19
	028 Move X1, [X8+40]
	029 Call 0x278E8D4, X0
	030 Move W8, [X19+8]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X8, [X19]
	033 Add W9, W22, 1
	034 Move [X8], W20
	035 Move [X19+24], W9
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X30, [X31+48]
	041 Return 
	042 Call 0x1C17F28

Method: System.ReadOnlySpan`1<T> AsSpan()

Disassembly:
	0x0278E764 LDRB W8, [X0 + 0x135]
	0x0278E768 TBNZ X8, 0x0, 0x278E770
	0x0278E76C BL 0x1C5C684
	0x0278E770 LDR W8, [X0 + 0xE0]
	0x0278E774 CBNZ W8, 0x278E77C
	0x0278E778 BL 0x1C16DFC
	0x0278E77C LDR X8, [X20 + 0x20]
	0x0278E780 ADD X9, X8, 0x135
	0x0278E784 LDRH W9, [X9]
	0x0278E788 TBNZ X9, 0x0, 0x278E7A4
	0x0278E78C MOV X0, X8
	0x0278E790 BL 0x1C5C684
	0x0278E794 LDR X8, [X20 + 0x20]
	0x0278E798 ADD X9, X8, 0x135
	0x0278E79C LDRH W9, [X9]
	0x0278E7A0 B 0x278E7A8
	0x0278E7A4 MOV X0, X8
	0x0278E7A8 LDR X10, [X0 + 0xC0]
	0x0278E7AC LDR X10, [X10 + 0x68]
	0x0278E7B0 LDR X20, [X10]
	0x0278E7B4 TBNZ X9, 0x0, 0x278E7C4
	0x0278E7B8 MOV X0, X8
	0x0278E7BC BL 0x1C5C684
	0x0278E7C0 MOV X8, X0
	0x0278E7C4 LDR X8, [X8 + 0xC0]
	0x0278E7C8 LDR X0, [X8 + 0x68]
	0x0278E7CC BLR X20
	0x0278E7D0 CBZ X0, 0x278E7F8
	0x0278E7D4 LDR X8, [X0]
	0x0278E7D8 LDR X1, [X19 + 0x10]
	0x0278E7DC MOV W2, W31
	0x0278E7E0 LDP X9, X3, [X8 + 0x188]
	0x0278E7E4 BLR X9
	0x0278E7E8 STR X31, [X19 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, X0
	007 Move X0, [X1+32]
	008 Move W19, [X21+24]
	009 Move X20, X1
	010 Move W8, [X0+309]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {16}
	015 Call 0x1C5D684
	016 Move X8, [X0+192]
	017 Move W9, [X21+8]
	018 Move X22, [X8+80]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X0, X31
	021 Call ThrowHelper.ThrowArgumentOutOfRangeException
	022 Move X0, [X22+32]
	023 Move X21, [X21]
	024 Move W8, [X0+309]
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {30}
	029 Call 0x1C5D684
	030 Move X0, [X20+32]
	031 Move W8, [X0+309]
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {37}
	036 Call 0x1C5D684
	037 Move X8, [X0+192]
	038 Move X0, X21
	039 Move X1, X19
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X2, [X8+88]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Move X30, [X31+48]
	046 Call Span`1<Int32>.op_Implicit, X0
	047 Return X0

Method: System.Void Dispose()

Disassembly:
	0x0278E7EC LDP X20, X19, [X31 + 0x10]
	0x0278E7F0 LDR X30, [X31], #0x20
	0x0278E7F4 RET
	0x0278E7F8 BL 0x1C16F20
	0x0278E7FC STR X30, [X31 - 0x40]!
	0x0278E800 STP X24, X23, [X31 + 0x10]
	0x0278E804 STP X22, X21, [X31 + 0x20]
	0x0278E808 STP X20, X19, [X31 + 0x30]
	0x0278E80C LDR X8, [X1 + 0x20]
	0x0278E810 MOV X19, X1
	0x0278E814 MOV X20, X0
	0x0278E818 LDRB W9, [X8 + 0x135]
	0x0278E81C TBNZ X9, 0x0, 0x278E82C
	0x0278E820 MOV X0, X8
	0x0278E824 BL 0x1C5C684
	0x0278E828 MOV X8, X0
	0x0278E82C LDR X8, [X8 + 0xC0]
	0x0278E830 LDR X0, [X8 + 0x70]
	0x0278E834 LDRB W8, [X0 + 0x135]
	0x0278E838 TBNZ X8, 0x0, 0x278E840
	0x0278E83C BL 0x1C5C684
	0x0278E840 LDR W8, [X0 + 0xE0]
	0x0278E844 CBNZ W8, 0x278E84C
	0x0278E848 BL 0x1C16DFC
	0x0278E84C LDR X8, [X19 + 0x20]
	0x0278E850 ADD X9, X8, 0x135
	0x0278E854 LDRH W9, [X9]
	0x0278E858 TBNZ X9, 0x0, 0x278E874
	0x0278E85C MOV X0, X8
	0x0278E860 BL 0x1C5C684
	0x0278E864 LDR X8, [X19 + 0x20]
	0x0278E868 ADD X9, X8, 0x135
	0x0278E86C LDRH W9, [X9]
	0x0278E870 B 0x278E878
	0x0278E874 MOV X0, X8
	0x0278E878 LDR X10, [X0 + 0xC0]
	0x0278E87C LDR X10, [X10 + 0x68]
	0x0278E880 LDR X21, [X10]
	0x0278E884 TBNZ X9, 0x0, 0x278E894
	0x0278E888 MOV X0, X8
	0x0278E88C BL 0x1C5C684
	0x0278E890 MOV X8, X0
	0x0278E894 LDR X8, [X8 + 0xC0]
	0x0278E898 LDR X0, [X8 + 0x68]
	0x0278E89C BLR X21
	0x0278E8A0 LDR X8, [X19 + 0x20]
	0x0278E8A4 MOV X21, X0
	0x0278E8A8 ADD X9, X8, 0x135
	0x0278E8AC LDRH W9, [X9]
	0x0278E8B0 TBNZ X9, 0x0, 0x278E8CC
	0x0278E8B4 MOV X0, X8
	0x0278E8B8 BL 0x1C5C684
	0x0278E8BC LDR X8, [X19 + 0x20]
	0x0278E8C0 ADD X9, X8, 0x135
	0x0278E8C4 LDRH W9, [X9]
	0x0278E8C8 B 0x278E8D0
	0x0278E8CC MOV X0, X8
	0x0278E8D0 LDR X10, [X0 + 0xC0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+16]
	005 Compare X8, 0
	006 JumpIfEqual {82}
	007 Move X19, X0
	008 Move X0, [X1+32]
	009 Move X20, X1
	010 Move W8, [X0+309]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {16}
	015 Call 0x1C5D684
	016 Move X8, [X0+192]
	017 Move X0, [X8+112]
	018 Move W8, [X0+309]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {24}
	023 Call 0x1C5D684
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, [X20+32]
	029 Move W8, [X0+309]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {35}
	034 Call 0x1C5D684
	035 Move X8, [X0+192]
	036 Move X20, [X8+104]
	037 Move X0, [X20+32]
	038 Move W8, [X0+309]
	039 Move TEMP, X8
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {44}
	043 Call 0x1C5D684
	044 Move X8, [X0+192]
	045 Move X0, [X8+8]
	046 Move W8, [X0+309]
	047 Move TEMP, X8
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {52}
	051 Call 0x1C5D684
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, [X20+32]
	057 Move W8, [X0+309]
	058 Move TEMP, X8
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfEqual {63}
	062 Call 0x1C5D684
	063 Move X8, [X0+192]
	064 Move X0, [X8+8]
	065 Move W8, [X0+309]
	066 Move TEMP, X8
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfEqual {71}
	070 Call 0x1C5D684
	071 Move X8, [X0+184]
	072 Move X0, [X8]
	073 Compare X0, 0
	074 JumpIfEqual {86}
	075 Move X8, [X0]
	076 Move X1, [X19+16]
	077 Move W2, W31
	078 Move X9, [X8+392]
	079 Move X3, [X8+400]
	080 NotImplemented "Instruction BLR not yet implemented."
	081 Move [X19+16], X31
	082 Move X20, [X31+16]
	083 Move X19, [X31+24]
	084 Move X30, [X31+32]
	085 Return 
	086 Call 0x1C17F20

Method: System.Void Grow()

Disassembly:
	0x0278E8D4 LDR X10, [X10 + 0x18]
	0x0278E8D8 LDR X22, [X10]
	0x0278E8DC TBNZ X9, 0x0, 0x278E8EC
	0x0278E8E0 MOV X0, X8
	0x0278E8E4 BL 0x1C5C684
	0x0278E8E8 MOV X8, X0
	0x0278E8EC LDR X8, [X8 + 0xC0]
	0x0278E8F0 MOV X0, X20
	0x0278E8F4 LDR X1, [X8 + 0x18]
	0x0278E8F8 BLR X22
	0x0278E8FC CBZ X21, 0x278EB00
	0x0278E900 LDR X8, [X21]
	0x0278E904 UBFM W1, W0, 0x1F, 0x1E
	0x0278E908 MOV X0, X21
	0x0278E90C LDP X9, X2, [X8 + 0x178]
	0x0278E910 BLR X9
	0x0278E914 LDR X8, [X19 + 0x20]
	0x0278E918 MOV X22, X0
	0x0278E91C ADD X9, X8, 0x135
	0x0278E920 LDRH W9, [X9]
	0x0278E924 TBNZ X9, 0x0, 0x278E940
	0x0278E928 MOV X0, X8
	0x0278E92C BL 0x1C5C684
	0x0278E930 LDR X8, [X19 + 0x20]
	0x0278E934 ADD X9, X8, 0x135
	0x0278E938 LDRH W9, [X9]
	0x0278E93C B 0x278E944
	0x0278E940 MOV X0, X8
	0x0278E944 LDR X10, [X0 + 0xC0]
	0x0278E948 LDR X10, [X10 + 0x90]
	0x0278E94C LDR X21, [X10]
	0x0278E950 TBNZ X9, 0x0, 0x278E960
	0x0278E954 MOV X0, X8
	0x0278E958 BL 0x1C5C684
	0x0278E95C MOV X8, X0
	0x0278E960 LDR X8, [X8 + 0xC0]
	0x0278E964 MOV X0, X22
	0x0278E968 LDR X1, [X8 + 0x90]
	0x0278E96C BLR X21
	0x0278E970 LDR X8, [X19 + 0x20]
	0x0278E974 MOV X21, X0
	0x0278E978 MOV X23, X1
	0x0278E97C ADD X9, X8, 0x135
	0x0278E980 LDRH W9, [X9]
	0x0278E984 TBNZ X9, 0x0, 0x278E9A0
	0x0278E988 MOV X0, X8
	0x0278E98C BL 0x1C5C684
	0x0278E990 LDR X8, [X19 + 0x20]
	0x0278E994 ADD X9, X8, 0x135
	0x0278E998 LDRH W9, [X9]
	0x0278E99C B 0x278E9A4
	0x0278E9A0 MOV X0, X8
	0x0278E9A4 LDR X10, [X0 + 0xC0]
	0x0278E9A8 LDR X10, [X10 + 0x98]
	0x0278E9AC LDR X24, [X10]
	0x0278E9B0 TBNZ X9, 0x0, 0x278E9C0
	0x0278E9B4 MOV X0, X8
	0x0278E9B8 BL 0x1C5C684
	0x0278E9BC MOV X8, X0
	0x0278E9C0 LDR X8, [X8 + 0xC0]
	0x0278E9C4 MOV X0, X20
	0x0278E9C8 MOV X1, X21
	0x0278E9CC MOV X2, X23
	0x0278E9D0 LDR X3, [X8 + 0x98]
	0x0278E9D4 BLR X24
	0x0278E9D8 LDR X21, [X20 + 0x10]
	0x0278E9DC STR X22, [X20 + 0x10]
	0x0278E9E0 LDR X8, [X19 + 0x20]
	0x0278E9E4 ADD X9, X8, 0x135
	0x0278E9E8 LDRH W9, [X9]
	0x0278E9EC TBNZ X9, 0x0, 0x278EA08
	0x0278E9F0 MOV X0, X8
	0x0278E9F4 BL 0x1C5C684
	0x0278E9F8 LDR X8, [X19 + 0x20]
	0x0278E9FC ADD X9, X8, 0x135
	0x0278EA00 LDRH W9, [X9]
	0x0278EA04 B 0x278EA0C
	0x0278EA08 MOV X0, X8
	0x0278EA0C LDR X10, [X0 + 0xC0]
	0x0278EA10 LDR X10, [X10 + 0x90]
	0x0278EA14 LDR X23, [X10]
	0x0278EA18 TBNZ X9, 0x0, 0x278EA28
	0x0278EA1C MOV X0, X8
	0x0278EA20 BL 0x1C5C684
	0x0278EA24 MOV X8, X0
	0x0278EA28 LDR X8, [X8 + 0xC0]
	0x0278EA2C MOV X0, X22
	0x0278EA30 LDR X1, [X8 + 0x90]
	0x0278EA34 BLR X23
	0x0278EA38 STP X0, X1, [X20]
	0x0278EA3C CBZ X21, 0x278EA98
	0x0278EA40 LDR X0, [X19 + 0x20]
	0x0278EA44 LDRB W8, [X0 + 0x135]
	0x0278EA48 TBNZ X8, 0x0, 0x278EA50
	0x0278EA4C BL 0x1C5C684
	0x0278EA50 LDR X8, [X0 + 0xC0]
	0x0278EA54 LDR X0, [X8 + 0x70]
	0x0278EA58 LDRB W8, [X0 + 0x135]
	0x0278EA5C TBNZ X8, 0x0, 0x278EA64
	0x0278EA60 BL 0x1C5C684
	0x0278EA64 LDR W8, [X0 + 0xE0]
	0x0278EA68 CBNZ W8, 0x278EA70
	0x0278EA6C BL 0x1C16DFC
	0x0278EA70 LDR X8, [X19 + 0x20]
	0x0278EA74 ADD X9, X8, 0x135
	0x0278EA78 LDRH W9, [X9]
	0x0278EA7C TBNZ X9, 0x0, 0x278EAAC
	0x0278EA80 MOV X0, X8
	0x0278EA84 BL 0x1C5C684
	0x0278EA88 LDR X8, [X19 + 0x20]
	0x0278EA8C ADD X9, X8, 0x135
	0x0278EA90 LDRH W9, [X9]
	0x0278EA94 B 0x278EAB0
	0x0278EA98 LDP X20, X19, [X31 + 0x30]
	0x0278EA9C LDP X22, X21, [X31 + 0x20]
	0x0278EAA0 LDP X24, X23, [X31 + 0x10]
	0x0278EAA4 LDR X30, [X31], #0x40
	0x0278EAA8 RET
	0x0278EAAC MOV X0, X8
	0x0278EAB0 LDR X10, [X0 + 0xC0]
	0x0278EAB4 LDR X10, [X10 + 0x68]
	0x0278EAB8 LDR X19, [X10]
	0x0278EABC TBNZ X9, 0x0, 0x278EACC
	0x0278EAC0 MOV X0, X8
	0x0278EAC4 BL 0x1C5C684
	0x0278EAC8 MOV X8, X0
	0x0278EACC LDR X8, [X8 + 0xC0]
	0x0278EAD0 LDR X0, [X8 + 0x68]
	0x0278EAD4 BLR X19
	0x0278EAD8 CBZ X0, 0x278EB00
	0x0278EADC LDR X8, [X0]
	0x0278EAE0 MOV X1, X21
	0x0278EAE4 LDP X20, X19, [X31 + 0x30]
	0x0278EAE8 LDP X22, X21, [X31 + 0x20]
	0x0278EAEC LDP X4, X3, [X8 + 0x188]
	0x0278EAF0 LDP X24, X23, [X31 + 0x10]
	0x0278EAF4 MOV W2, W31
	0x0278EAF8 LDR X30, [X31], #0x40
	0x0278EAFC BR X4
	0x0278EB00 BL 0x1C16F20
	0x0278EB04 STP X1, X2, [X0]
	0x0278EB08 RET
	0x0278EB0C STP X30, X19, [X31 - 0x10]!
	0x0278EB10 LDR X8, [X1 + 0x20]
	0x0278EB14 MOV X19, X0
	0x0278EB18 LDRB W9, [X8 + 0x135]
	0x0278EB1C TBNZ X9, 0x0, 0x278EB2C
	0x0278EB20 MOV X0, X8
	0x0278EB24 BL 0x1C5C684
	0x0278EB28 MOV X8, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X1+32]
	008 Move X19, X1
	009 Move X20, X0
	010 Move W9, [X8+309]
	011 Move TEMP, X9
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {18}
	015 Move X0, X8
	016 Call 0x1C5D684
	017 Move X8, X0
	018 Move X8, [X8+192]
	019 Move X0, [X8+112]
	020 Move W8, [X0+309]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {26}
	025 Call 0x1C5D684
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, [X19+32]
	031 Move W8, [X0+309]
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {37}
	036 Call 0x1C5D684
	037 Move X8, [X0+192]
	038 Move X21, [X8+104]
	039 Move X0, [X21+32]
	040 Move W8, [X0+309]
	041 Move TEMP, X8
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {46}
	045 Call 0x1C5D684
	046 Move X8, [X0+192]
	047 Move X0, [X8+8]
	048 Move W8, [X0+309]
	049 Move TEMP, X8
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {54}
	053 Call 0x1C5D684
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X0, [X21+32]
	059 Move W8, [X0+309]
	060 Move TEMP, X8
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {65}
	064 Call 0x1C5D684
	065 Move X8, [X0+192]
	066 Move X0, [X8+8]
	067 Move W8, [X0+309]
	068 Move TEMP, X8
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfEqual {73}
	072 Call 0x1C5D684
	073 Move X8, [X19+32]
	074 Move X9, [X0+184]
	075 Move W10, [X8+309]
	076 Move X21, [X9]
	077 Move TEMP, X10
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfEqual {83}
	081 Move X0, X8
	082 Call 0x1C5D684
	083 Compare X21, 0
	084 JumpIfEqual {225}
	085 Move X8, [X21]
	086 Move W9, [X20+8]
	087 Move X0, X21
	088 Move X10, [X8+376]
	089 Move X2, [X8+384]
	090 Move W1, W9
	091 ShiftRight W1, 31
	092 And W1, W1, 0x3FFFFFFF
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Move X8, [X19+32]
	095 Move X22, X0
	096 Move W9, [X8+309]
	097 Move TEMP, X9
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfEqual {104}
	101 Move X0, X8
	102 Call 0x1C5D684
	103 Move X8, X0
	104 Move X8, [X8+192]
	105 Move X0, X22
	106 Move X1, [X8+144]
	107 Call Span`1<Int32>.op_Implicit, X0
	108 Move X21, X0
	109 Move X0, [X19+32]
	110 Move X23, X1
	111 Move W8, [X0+309]
	112 Move TEMP, X8
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfEqual {117}
	116 Call 0x1C5D684
	117 Move X8, [X0+192]
	118 Move X0, X20
	119 Move X1, X21
	120 Move X2, X23
	121 Move X3, [X8+152]
	122 Call Span`1<Int32>.TryCopyTo, X0, X1
	123 Move X21, [X20+16]
	124 Move [X20+16], X22
	125 Move X0, [X19+32]
	126 Move W8, [X0+309]
	127 Move TEMP, X8
	128 And TEMP, TEMP, 1
	129 Compare TEMP, 1
	130 JumpIfEqual {132}
	131 Call 0x1C5D684
	132 Move X8, [X0+192]
	133 Move X0, X22
	134 Move X1, [X8+144]
	135 Call Span`1<Int32>.op_Implicit, X0
	136 Move [X20], X0
	137 Move [X20+8], X1
	138 Compare X21, 0
	139 JumpIfEqual {218}
	140 Move X0, [X19+32]
	141 Move W8, [X0+309]
	142 Move TEMP, X8
	143 And TEMP, TEMP, 1
	144 Compare TEMP, 1
	145 JumpIfEqual {147}
	146 Call 0x1C5D684
	147 Move X8, [X0+192]
	148 Move X0, [X8+112]
	149 Move W8, [X0+309]
	150 Move TEMP, X8
	151 And TEMP, TEMP, 1
	152 Compare TEMP, 1
	153 JumpIfEqual {155}
	154 Call 0x1C5D684
	155 Move W8, [X0+224]
	156 Compare W8, 0
	157 JumpIfNotEqual {159}
	158 Call 0x1C17DFC
	159 Move X0, [X19+32]
	160 Move W8, [X0+309]
	161 Move TEMP, X8
	162 And TEMP, TEMP, 1
	163 Compare TEMP, 1
	164 JumpIfEqual {166}
	165 Call 0x1C5D684
	166 Move X8, [X0+192]
	167 Move X19, [X8+104]
	168 Move X0, [X19+32]
	169 Move W8, [X0+309]
	170 Move TEMP, X8
	171 And TEMP, TEMP, 1
	172 Compare TEMP, 1
	173 JumpIfEqual {175}
	174 Call 0x1C5D684
	175 Move X8, [X0+192]
	176 Move X0, [X8+8]
	177 Move W8, [X0+309]
	178 Move TEMP, X8
	179 And TEMP, TEMP, 1
	180 Compare TEMP, 1
	181 JumpIfEqual {183}
	182 Call 0x1C5D684
	183 Move W8, [X0+224]
	184 Compare W8, 0
	185 JumpIfNotEqual {187}
	186 Call 0x1C17DFC
	187 Move X0, [X19+32]
	188 Move W8, [X0+309]
	189 Move TEMP, X8
	190 And TEMP, TEMP, 1
	191 Compare TEMP, 1
	192 JumpIfEqual {194}
	193 Call 0x1C5D684
	194 Move X8, [X0+192]
	195 Move X0, [X8+8]
	196 Move W8, [X0+309]
	197 Move TEMP, X8
	198 And TEMP, TEMP, 1
	199 Compare TEMP, 1
	200 JumpIfEqual {202}
	201 Call 0x1C5D684
	202 Move X8, [X0+184]
	203 Move X0, [X8]
	204 Compare X0, 0
	205 JumpIfEqual {225}
	206 Move X8, [X0]
	207 Move X1, X21
	208 Move X20, [X31+32]
	209 Move X19, [X31+40]
	210 Move X22, [X31+16]
	211 Move X21, [X31+24]
	212 Move X4, [X8+392]
	213 Move X3, [X8+400]
	214 Move W2, W31
	215 Move X30, [X31+48]
	216 Move X23, [X31+56]
	217 CallNoReturn X4
	218 Move X20, [X31+32]
	219 Move X19, [X31+40]
	220 Move X22, [X31+16]
	221 Move X21, [X31+24]
	222 Move X30, [X31+48]
	223 Move X23, [X31+56]
	224 Return 
	225 Call 0x1C17F20

