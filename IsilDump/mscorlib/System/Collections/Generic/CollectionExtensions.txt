Type: System.Collections.Generic.CollectionExtensions

Method: TValue GetValueOrDefault(System.Collections.Generic.IReadOnlyDictionary`2<TKey, TValue> dictionary, TKey key)

Disassembly:
	0x021A2918 STP X24, X23, [X31 + 0x30]
	0x021A291C STP X22, X21, [X31 + 0x40]
	0x021A2920 STP X20, X19, [X31 + 0x50]
	0x021A2924 LDR X8, [X4 + 0x38]
	0x021A2928 MOV X21, X4
	0x021A292C MOV X19, X3
	0x021A2930 MOV X22, X2
	0x021A2934 MOV W20, W1
	0x021A2938 MOV X24, X0
	0x021A293C CBNZ X8, 0x21A2968
	0x021A2940 ADRP X0, 0x1F79000
	0x021A2944 LDR X0, [X0 + 0x8C8]
	0x021A2948 BL 0x1C16CF4
	0x021A294C ADRP X0, 0x1F79000
	0x021A2950 LDR X0, [X0 + 0x8D0]
	0x021A2954 BL 0x1C16CF4
	0x021A2958 LDR X8, [X21 + 0x38]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X19, X1
	007 Move X20, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {14}
	010 Move X0, X2
	011 Move X21, X2
	012 Call 0x1C5D6E0
	013 Move X8, [X21+56]
	014 Move X3, [X8+24]
	015 Move X0, X20
	016 Move X1, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X2, X31
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 Call 0x21A2AD4, X0, X1, X2
	023 Return X0

Method: TValue GetValueOrDefault(System.Collections.Generic.IReadOnlyDictionary`2<TKey, TValue> dictionary, TKey key, TValue defaultValue)

Disassembly:
	0x021A2AD4 LDR X8, [X3 + 0x38]
	0x021A2AD8 MOV X22, X3
	0x021A2ADC MOV W19, W2
	0x021A2AE0 MOV W20, W1
	0x021A2AE4 MOV X21, X0
	0x021A2AE8 CBNZ X8, 0x21A2AF8
	0x021A2AEC MOV X0, X22
	0x021A2AF0 BL 0x1C5C6E0
	0x021A2AF4 LDR X8, [X22 + 0x38]
	0x021A2AF8 LDR X0, [X8 + 0x8]
	0x021A2AFC LDRB W8, [X0 + 0x135]
	0x021A2B00 TBNZ X8, 0x0, 0x21A2B08
	0x021A2B04 BL 0x1C5C684
	0x021A2B08 BL 0x1C16F10
	0x021A2B0C LDR X8, [X22 + 0x38]
	0x021A2B10 AND W2, W20, 0x1
	0x021A2B14 MOV X1, X21
	0x021A2B18 MOV X22, X0
	0x021A2B1C LDR X3, [X8 + 0x10]
	0x021A2B20 LDR X8, [X3]
	0x021A2B24 BLR X8
	0x021A2B28 CBZ X22, 0x21A2B50
	0x021A2B2C AND W1, W19, 0x1
	0x021A2B30 MOV X0, X22
	0x021A2B34 MOV X2, X31
	0x021A2B38 BL 0x35BC494
	0x021A2B3C MOV X0, X22
	0x021A2B40 LDP X20, X19, [X31 + 0x20]
	0x021A2B44 LDP X22, X21, [X31 + 0x10]
	0x021A2B48 LDR X30, [X31], #0x30
	0x021A2B4C RET
	0x021A2B50 BL 0x1C16F20
	0x021A2B54 STP X30, X23, [X31 - 0x30]!
	0x021A2B58 STP X22, X21, [X31 + 0x10]
	0x021A2B5C STP X20, X19, [X31 + 0x20]
	0x021A2B60 LDR X8, [X4 + 0x38]
	0x021A2B64 MOV X23, X4
	0x021A2B68 MOV W19, W3
	0x021A2B6C MOV W21, W2
	0x021A2B70 MOV X20, X1
	0x021A2B74 MOV X22, X0
	0x021A2B78 CBNZ X8, 0x21A2B88
	0x021A2B7C MOV X0, X23
	0x021A2B80 BL 0x1C5C6E0
	0x021A2B84 LDR X8, [X23 + 0x38]
	0x021A2B88 LDR X0, [X8 + 0x8]
	0x021A2B8C LDRB W8, [X0 + 0x135]
	0x021A2B90 TBNZ X8, 0x0, 0x21A2B98
	0x021A2B94 BL 0x1C5C684
	0x021A2B98 BL 0x1C16F10
	0x021A2B9C LDR X8, [X23 + 0x38]
	0x021A2BA0 AND W3, W21, 0x1
	0x021A2BA4 MOV X1, X22
	0x021A2BA8 MOV X2, X20
	0x021A2BAC LDR X4, [X8 + 0x10]
	0x021A2BB0 MOV X23, X0
	0x021A2BB4 LDR X8, [X4]
	0x021A2BB8 BLR X8
	0x021A2BBC CBZ X23, 0x21A2BE4
	0x021A2BC0 AND W1, W19, 0x1
	0x021A2BC4 MOV X0, X23
	0x021A2BC8 MOV X2, X31
	0x021A2BCC BL 0x35BC494
	0x021A2BD0 LDP X20, X19, [X31 + 0x20]
	0x021A2BD4 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X3+56]
	007 Move X22, X3
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {15}
	013 Move X0, X22
	014 Call 0x1C5D6E0
	015 Move [X31+8], X31
	016 Compare X21, 0
	017 JumpIfEqual {59}
	018 Move X8, [X22+56]
	019 Move X1, [X8]
	020 Move W8, [X1+309]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {28}
	025 Move X0, X1
	026 Call 0x1C5D684
	027 Move X1, X0
	028 Move X8, [X21]
	029 NotImplemented "Instruction LDRH not yet implemented."
	030 Compare X9, 0
	031 JumpIfEqual {38}
	032 Move X10, [X8+176]
	033 Add X10, X10, 8
	034 NotImplemented "Instruction LDUR not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Subtract X9, X9, 1
	037 Add X10, X10, 16
	038 Move X0, X21
	039 Move W2, W31
	040 Call 0x1C5D788
	041 NotImplemented "Instruction LDRSW not yet implemented."
	042 Add X8, X8, X9
	043 Add X0, X8, 312
	044 Move X8, [X0]
	045 Move X3, [X0+8]
	046 Add X2, X31, 8
	047 Move X0, X21
	048 Move X1, X20
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move X8, [X31+8]
	051 And W31, W0, 1
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 NotImplemented "Instruction CSEL not yet implemented."
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X30, [X31+48]
	058 Return X0
	059 Move X0, 0x1F57000
	060 Move X0, [X0+1320]
	061 Call 0x1C17D08
	062 Call 0x1C17F10
	063 Move X19, X0
	064 Move X0, 0x1F7A000
	065 Move X0, [X0+2216]
	066 Call 0x1C17D08
	067 Move X1, X0
	068 Move X0, X19
	069 Move X2, X31
	070 Call ArgumentNullException..ctor, X0, X1
	071 Move X0, X19
	072 Move X1, X22
	073 Call 0x1C17DEC

