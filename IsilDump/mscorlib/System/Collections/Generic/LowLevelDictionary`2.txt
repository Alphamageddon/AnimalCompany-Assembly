Type: System.Collections.Generic.LowLevelDictionary`2

Method: System.Void .ctor()

Disassembly:
	0x0319A7BC LDR X23, [X27]
	0x0319A7C0 LDR X24, [X28]
	0x0319A7C4 LDR X8, [X26]
	0x0319A7C8 LDRH W9, [X8 + 0x12E]
	0x0319A7CC CBZ X9, 0x319A7F0
	0x0319A7D0 LDR X10, [X8 + 0xB0]
	0x0319A7D4 ADD X10, X10, 0x8
	0x0319A7D8 LDUR X11, [X10 - 0x8]
	0x0319A7DC CMP X11, X1
	0x0319A7E0 B.EQ 0x319A800
	0x0319A7E4 SUBS X9, X9, 0x1
	0x0319A7E8 ADD X10, X10, 0x10
	0x0319A7EC B.NE 0x319A7D8
	0x0319A7F0 MOV X0, X26
	0x0319A7F4 MOV W2, W31
	0x0319A7F8 BL 0x1C5C788
	0x0319A7FC B 0x319A80C
	0x0319A800 LDRSW X9, [X10]
	0x0319A804 ADD X8, X8, X9, 0x4, LSL
	0x0319A808 ADD X0, X8, 0x138
	0x0319A80C STP X23, X24, [X29 - 0x20]
	0x0319A810 LDR X1, [X0 + 0x8]
	0x0319A814 SUB X3, X29, 0x20
	0x0319A818 SUB X4, X29, 0xC
	0x0319A81C MOV X2, X26
	0x0319A820 LDP X0, X8, [X1 + 0x8]
	0x0319A824 BLR X8
	0x0319A828 LDURB W8, [X29 - 0xC]
	0x0319A82C CBNZ W8, 0x319A854
	0x0319A830 LDR X8, [X19 + 0x20]
	0x0319A834 MOV X0, X25
	0x0319A838 LDR X8, [X8 + 0xC0]
	0x0319A83C LDR X8, [X8 + 0x40]
	0x0319A840 LDR X8, [X8 + 0x80]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X1+32]
	006 Move X20, X1
	007 Move X19, X0
	008 Move X8, [X8+192]
	009 Move X8, [X8]
	010 Move W9, [X8+309]
	011 Move TEMP, X9
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {18}
	015 Move X0, X8
	016 Call 0x1C5D684
	017 Move X8, X0
	018 Move X0, X8
	019 Call 0x1C17F10
	020 Move X8, [X20+32]
	021 Move X21, X0
	022 Move X8, [X8+192]
	023 Move X1, [X8+8]
	024 Call 0x29B3900, X0
	025 Move X8, [X20+32]
	026 Move X0, X19
	027 Move X1, X31
	028 Move X8, [X8+192]
	029 Move X20, [X8+16]
	030 Call Object..ctor, X0
	031 Move [X19+32], X21
	032 Move X8, [X20+32]
	033 Move X0, X19
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move W1, 17
	037 Move X8, [X8+192]
	038 Move X2, [X8+40]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Call 0x319A908, X0, X1
	042 Return 

Method: System.Void .ctor(System.Int32 capacity, System.Collections.Generic.IEqualityComparer`1<TKey> comparer)

Disassembly:
	0x0319A844 ADD X1, X8, 0x40
	0x0319A848 BL 0x1C16D18
	0x0319A84C LDR X25, [X0]
	0x0319A850 CBNZ X25, 0x319A72C
	0x0319A854 LDUR X24, [X29 - 0x30]
	0x0319A858 LDR X8, [X24 + 0x28]
	0x0319A85C LDUR X9, [X29 - 0x8]
	0x0319A860 CMP X8, X9
	0x0319A864 B.NE 0x319A894
	0x0319A868 MOV X0, X25
	0x0319A86C ADD X31, X29, 0x0
	0x0319A870 LDP X20, X19, [X31 + 0x50]
	0x0319A874 LDP X22, X21, [X31 + 0x40]
	0x0319A878 LDP X24, X23, [X31 + 0x30]
	0x0319A87C LDP X26, X25, [X31 + 0x20]
	0x0319A880 LDP X28, X27, [X31 + 0x10]
	0x0319A884 LDP X29, X30, [X31], #0x60
	0x0319A888 RET
	0x0319A88C BL 0x1C16F20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W21, W1
	007 Move X1, X31
	008 Move X19, X3
	009 Move X20, X2
	010 Move X22, X0
	011 Call Object..ctor, X0
	012 Move [X22+32], X20
	013 Move X8, [X19+32]
	014 Move X0, X22
	015 Move W1, W21
	016 Move X20, [X31+32]
	017 Move X19, [X31+40]
	018 Move X8, [X8+192]
	019 Move X22, [X31+16]
	020 Move X21, [X31+24]
	021 Move X2, [X8+40]
	022 Move X30, [X31+48]
	023 Call 0x319A908, X0, X1
	024 Return 

Method: System.Void set_Item(TKey key, TValue value)

Disassembly:
	0x0319A890 BL 0x1C16F28
	0x0319A894 BL 0x3EB1B20
	0x0319A898 STP X29, X30, [X31 - 0x60]!
	0x0319A89C STP X28, X27, [X31 + 0x10]
	0x0319A8A0 STP X26, X25, [X31 + 0x20]
	0x0319A8A4 STP X24, X23, [X31 + 0x30]
	0x0319A8A8 STP X22, X21, [X31 + 0x40]
	0x0319A8AC STP X20, X19, [X31 + 0x50]
	0x0319A8B0 ADD X29, X31, 0x0
	0x0319A8B4 SUB X31, X31, 0x40
	0x0319A8B8 MRS X8, 0xC000
	0x0319A8BC STUR X8, [X29 - 0x40]
	0x0319A8C0 LDR X8, [X8 + 0x28]
	0x0319A8C4 MOV X19, X3
	0x0319A8C8 MOV X23, X1
	0x0319A8CC MOV X20, X0
	0x0319A8D0 STUR X8, [X29 - 0x8]
	0x0319A8D4 STP X2, X1, [X29 - 0x30]
	0x0319A8D8 LDR X8, [X3 + 0x20]
	0x0319A8DC STUR X2, [X29 - 0x38]
	0x0319A8E0 LDR X8, [X8 + 0xC0]
	0x0319A8E4 LDR X9, [X8 + 0x30]
	0x0319A8E8 LDR X10, [X8 + 0x48]
	0x0319A8EC LDR W24, [X9 + 0xFC]
	0x0319A8F0 LDR W25, [X10 + 0xFC]
	0x0319A8F4 ADD X9, X31, 0x0
	0x0319A8F8 ADD X10, X24, 0xF
	0x0319A8FC AND X10, X10, 0x1FFFFFFFF
	0x0319A900 SUB X28, X9, X10
	0x0319A904 ADD X31, X28, 0x0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W8, [X0+28]
	007 Move X19, X2
	008 Move X21, X3
	009 Move X20, X0
	010 Add W8, W8, 1
	011 Move [X0+28], W8
	012 Move X8, [X3+32]
	013 Move W22, W1
	014 Move X8, [X8+192]
	015 Move X2, [X8+56]
	016 Call 0x319AAC4, X0, X1
	017 Compare X0, 0
	018 JumpIfEqual {26}
	019 Move [X0+24], X19
	020 Move X20, [X31+32]
	021 Move X19, [X31+40]
	022 Move X22, [X31+16]
	023 Move X21, [X31+24]
	024 Move X30, [X31+48]
	025 Return 
	026 Move X8, [X21+32]
	027 Move X0, X20
	028 Move W1, W22
	029 Move X2, X19
	030 Move X8, [X8+192]
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X3, [X8+80]
	036 Move X30, [X31+48]
	037 Call 0x319ABC8, X0, X1, X2
	038 Return 

Method: System.Void Clear(System.Int32 capacity = 17)

Disassembly:
	0x0319A908 ADD X9, X31, 0x0
	0x0319A90C SUB X22, X9, X10
	0x0319A910 ADD X31, X22, 0x0
	0x0319A914 ADD X10, X25, 0xF
	0x0319A918 ADD X9, X31, 0x0
	0x0319A91C AND X10, X10, 0x1FFFFFFFF
	0x0319A920 SUB X27, X9, X10
	0x0319A924 ADD X31, X27, 0x0
	0x0319A928 LDR X0, [X8 + 0x40]
	0x0319A92C LDRB W8, [X0 + 0x135]
	0x0319A930 TBNZ X8, 0x0, 0x319A938
	0x0319A934 BL 0x1C5C684
	0x0319A938 BL 0x1C16F10
	0x0319A93C LDR X8, [X19 + 0x20]
	0x0319A940 MOV X21, X0
	0x0319A944 LDR X8, [X8 + 0xC0]
	0x0319A948 LDR X1, [X8 + 0x78]
	0x0319A94C LDR X8, [X1]
	0x0319A950 BLR X8
	0x0319A954 LDR X26, [X19 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+28]
	005 Move X19, X0
	006 Move W20, W1
	007 Add W8, W8, 1
	008 Move [X0+28], W8
	009 Move X8, [X2+32]
	010 Move X8, [X8+192]
	011 Move X0, [X8+88]
	012 Move W8, [X0+309]
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {18}
	017 Call 0x1C5D684
	018 Move W1, W20
	019 Call 0x1C17D6C
	020 Move [X19+16], X0
	021 Move [X19+24], W31
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Return 

Method: System.Boolean Remove(TKey key)

Disassembly:
	0x0319A958 MOV X0, X28
	0x0319A95C MOV X2, X24
	0x0319A960 LDR X8, [X26 + 0xC0]
	0x0319A964 LDR X8, [X8 + 0x30]
	0x0319A968 LDR W8, [X8 + 0x28]
	0x0319A96C CMP W8, 0x0
	0x0319A970 SUB X8, X29, 0x28
	0x0319A974 CSEL X1, X23, X8, LT
	0x0319A978 BL 0x3EB1AC0
	0x0319A97C CBZ X21, 0x319AB28
	0x0319A980 LDR X8, [X26 + 0xC0]
	0x0319A984 MOV X0, X21
	0x0319A988 MOV X2, X28
	0x0319A98C MOV W3, W24
	0x0319A990 LDR X8, [X8 + 0x40]
	0x0319A994 LDR X1, [X8 + 0x80]
	0x0319A998 BL 0x1C16D1C
	0x0319A99C LDR X26, [X19 + 0x20]
	0x0319A9A0 LDUR X9, [X29 - 0x38]
	0x0319A9A4 MOV X0, X27
	0x0319A9A8 MOV X2, X25
	0x0319A9AC LDR X8, [X26 + 0xC0]
	0x0319A9B0 LDR X8, [X8 + 0x48]
	0x0319A9B4 LDR W8, [X8 + 0x28]
	0x0319A9B8 CMP W8, 0x0
	0x0319A9BC SUB X8, X29, 0x30
	0x0319A9C0 CSEL X1, X9, X8, LT
	0x0319A9C4 BL 0x3EB1AC0
	0x0319A9C8 LDR X8, [X26 + 0xC0]
	0x0319A9CC MOV X0, X21
	0x0319A9D0 MOV X2, X27
	0x0319A9D4 MOV W3, W25
	0x0319A9D8 LDR X8, [X8 + 0x40]
	0x0319A9DC LDR X8, [X8 + 0x80]
	0x0319A9E0 ADD X1, X8, 0x20
	0x0319A9E4 BL 0x1C16D1C
	0x0319A9E8 LDR X25, [X19 + 0x20]
	0x0319A9EC MOV X0, X22
	0x0319A9F0 MOV X2, X24
	0x0319A9F4 LDR X8, [X25 + 0xC0]
	0x0319A9F8 LDR X8, [X8 + 0x30]
	0x0319A9FC LDR W8, [X8 + 0x28]
	0x0319AA00 CMP W8, 0x0
	0x0319AA04 SUB X8, X29, 0x28
	0x0319AA08 CSEL X1, X23, X8, LT
	0x0319AA0C BL 0x3EB1AC0
	0x0319AA10 LDR X8, [X25 + 0xC0]
	0x0319AA14 LDR X9, [X8 + 0x30]
	0x0319AA18 LDR X1, [X8 + 0x68]
	0x0319AA1C LDR W8, [X9 + 0x28]
	0x0319AA20 LDR X0, [X1]
	0x0319AA24 TBNZ X8, 0x1F, 0x319AA2C
	0x0319AA28 LDR X22, [X22]
	0x0319AA2C SUB X8, X29, 0xC
	0x0319AA30 STUR W31, [X29 - 0xC]
	0x0319AA34 STP X22, X8, [X29 - 0x20]
	0x0319AA38 LDR X8, [X1 + 0x10]
	0x0319AA3C SUB X3, X29, 0x20
	0x0319AA40 SUB X4, X29, 0x10
	0x0319AA44 MOV X2, X20
	0x0319AA48 BLR X8
	0x0319AA4C LDR X8, [X20 + 0x10]
	0x0319AA50 CBZ X8, 0x319AB28
	0x0319AA54 LDURSW X23, [X29 - 0x10]
	0x0319AA58 LDR W9, [X8 + 0x18]
	0x0319AA5C CMP W23, W9
	0x0319AA60 B.CS 0x319AB2C
	0x0319AA64 LDR X9, [X19 + 0x20]
	0x0319AA68 ADD X8, X8, X23, 0x3, LSL
	0x0319AA6C LDR X24, [X8 + 0x20]
	0x0319AA70 MOVZ W1, 0x8
	0x0319AA74 LDR X9, [X9 + 0xC0]
	0x0319AA78 LDR X9, [X9 + 0x40]
	0x0319AA7C LDR X9, [X9 + 0x80]
	0x0319AA80 ADD X22, X9, 0x40
	0x0319AA84 MOV X0, X22
	0x0319AA88 BL 0x1C16D14
	0x0319AA8C MOV X0, X21
	0x0319AA90 MOV X1, X22
	0x0319AA94 BL 0x1C16D18
	0x0319AA98 STR X24, [X0]
	0x0319AA9C LDR X8, [X20 + 0x10]
	0x0319AAA0 CBZ X8, 0x319AB28
	0x0319AAA4 LDR W9, [X8 + 0x18]
	0x0319AAA8 CMP W23, W9
	0x0319AAAC B.CS 0x319AB2C
	0x0319AAB0 ADD X8, X8, X23, 0x3, LSL
	0x0319AAB4 STR X21, [X8 + 0x20]
	0x0319AAB8 LDR W8, [X20 + 0x18]
	0x0319AABC LDR X9, [X20 + 0x10]
	0x0319AAC0 ADD W8, W8, 0x1

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X8, [X2+32]
	012 Move X20, X2
	013 Move W2, W31
	014 Move W21, W1
	015 Move X8, [X8+192]
	016 Move X19, X0
	017 Move X3, [X8+104]
	018 Call 0x319AE4C, X0, X1, X2
	019 Move X8, [X19+16]
	020 Compare X8, 0
	021 JumpIfEqual {107}
	022 Move W9, [X8+24]
	023 Move W22, W0
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X25, W22
	026 Add X8, X8, X25
	027 Move X8, [X8+32]
	028 Compare X8, 0
	029 JumpIfEqual {77}
	030 Move X27, X31
	031 Move X23, [X19+32]
	032 Compare X23, 0
	033 JumpIfEqual {107}
	034 Move X26, X8
	035 Move X8, [X20+32]
	036 Move W24, [X26+16]
	037 Move X8, [X8+192]
	038 Move X1, [X8+24]
	039 Move W8, [X1+309]
	040 Move TEMP, X8
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {47}
	044 Move X0, X1
	045 Call 0x1C5D684
	046 Move X1, X0
	047 Move X8, [X23]
	048 NotImplemented "Instruction LDRH not yet implemented."
	049 Compare X9, 0
	050 JumpIfEqual {57}
	051 Move X10, [X8+176]
	052 Add X10, X10, 8
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Subtract X9, X9, 1
	056 Add X10, X10, 16
	057 Move X0, X23
	058 Move W2, W31
	059 Call 0x1C5D788
	060 NotImplemented "Instruction LDRSW not yet implemented."
	061 Add X8, X8, X9
	062 Add X0, X8, 312
	063 Move X8, [X0]
	064 Move X3, [X0+8]
	065 Move X0, X23
	066 Move W1, W21
	067 Move W2, W24
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfEqual {78}
	073 Move X8, [X26+32]
	074 Move X27, X26
	075 Compare X8, 0
	076 JumpIfNotEqual {31}
	077 Move W0, W31
	078 Compare X27, 0
	079 JumpIfEqual {82}
	080 Move X8, [X26+32]
	081 Move [X27+32], X8
	082 Move X8, [X19+16]
	083 Compare X8, 0
	084 JumpIfEqual {107}
	085 Move W9, [X8+24]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X9, [X26+32]
	088 Add X8, X8, X25
	089 Move [X8+32], X9
	090 Move X8, -40546304
	091 Move V0, [X19+24]
	092 Move V1, [X8+1024]
	093 Move W0, 1
	094 Add S0, S0, S1
	095 Move [X19+24], D0
	096 Move X20, [X31+64]
	097 Move X19, [X31+72]
	098 Move X22, [X31+48]
	099 Move X21, [X31+56]
	100 Move X24, [X31+32]
	101 Move X23, [X31+40]
	102 Move X26, [X31+16]
	103 Move X25, [X31+24]
	104 Move X30, [X31+80]
	105 Move X27, [X31+88]
	106 Return X0
	107 Call 0x1C17F20
	108 Call 0x1C17F28

Method: System.Collections.Generic.LowLevelDictionary`2/Entry<TKey, TValue> Find(TKey key)

Disassembly:
	0x0319AAC4 STR W8, [X20 + 0x18]
	0x0319AAC8 CBZ X9, 0x319AB28
	0x0319AACC LDR W9, [X9 + 0x18]
	0x0319AAD0 CMP W8, W9, LSL
	0x0319AAD4 B.LE 0x319AAF0
	0x0319AAD8 LDR X8, [X19 + 0x20]
	0x0319AADC MOV X0, X20
	0x0319AAE0 LDR X8, [X8 + 0xC0]
	0x0319AAE4 LDR X1, [X8 + 0x80]
	0x0319AAE8 LDR X8, [X1]
	0x0319AAEC BLR X8
	0x0319AAF0 LDUR X8, [X29 - 0x40]
	0x0319AAF4 LDR X8, [X8 + 0x28]
	0x0319AAF8 LDUR X9, [X29 - 0x8]
	0x0319AAFC CMP X8, X9
	0x0319AB00 B.NE 0x319AB30
	0x0319AB04 MOV X0, X21
	0x0319AB08 ADD X31, X29, 0x0
	0x0319AB0C LDP X20, X19, [X31 + 0x50]
	0x0319AB10 LDP X22, X21, [X31 + 0x40]
	0x0319AB14 LDP X24, X23, [X31 + 0x30]
	0x0319AB18 LDP X26, X25, [X31 + 0x20]
	0x0319AB1C LDP X28, X27, [X31 + 0x10]
	0x0319AB20 LDP X29, X30, [X31], #0x60
	0x0319AB24 RET
	0x0319AB28 BL 0x1C16F20
	0x0319AB2C BL 0x1C16F28
	0x0319AB30 BL 0x3EB1B20
	0x0319AB34 STP X29, X30, [X31 - 0x60]!
	0x0319AB38 STP X28, X27, [X31 + 0x10]
	0x0319AB3C STP X26, X25, [X31 + 0x20]
	0x0319AB40 STP X24, X23, [X31 + 0x30]
	0x0319AB44 STP X22, X21, [X31 + 0x40]
	0x0319AB48 STP X20, X19, [X31 + 0x50]
	0x0319AB4C ADD X29, X31, 0x0
	0x0319AB50 SUB X31, X31, 0x40
	0x0319AB54 MRS X8, 0xC000
	0x0319AB58 STUR X8, [X29 - 0x40]
	0x0319AB5C LDR X8, [X8 + 0x28]
	0x0319AB60 STUR X8, [X29 - 0x8]
	0x0319AB64 LDR X8, [X1 + 0x20]
	0x0319AB68 LDR X8, [X8 + 0xC0]
	0x0319AB6C LDR X9, [X8 + 0x30]
	0x0319AB70 LDR W10, [X9 + 0xFC]
	0x0319AB74 ADD X9, X31, 0x0
	0x0319AB78 STP X10, X0, [X29 - 0x30]
	0x0319AB7C ADD X10, X10, 0xF
	0x0319AB80 AND X10, X10, 0x1FFFFFFFF
	0x0319AB84 SUB X22, X9, X10
	0x0319AB88 ADD X31, X22, 0x0
	0x0319AB8C LDR X9, [X0 + 0x10]
	0x0319AB90 CBZ X9, 0x319AD4C
	0x0319AB94 LDR X0, [X8 + 0x58]
	0x0319AB98 LDR W20, [X9 + 0x18]
	0x0319AB9C MOV X19, X1
	0x0319ABA0 LDRB W8, [X0 + 0x135]
	0x0319ABA4 TBNZ X8, 0x0, 0x319ABAC
	0x0319ABA8 BL 0x1C5C684
	0x0319ABAC MOVZ W23, 0x1
	0x0319ABB0 BFM W23, W20, 0x1F, 0x1E
	0x0319ABB4 MOV W1, W23
	0x0319ABB8 BL 0x1C16D6C
	0x0319ABBC LDUR X8, [X29 - 0x28]
	0x0319ABC0 LDR X8, [X8 + 0x10]
	0x0319ABC4 CBZ X8, 0x319ACFC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X2+32]
	009 Move X19, X2
	010 Move W2, W31
	011 Move W20, W1
	012 Move X8, [X8+192]
	013 Move X21, X0
	014 Move X3, [X8+104]
	015 Call 0x319AE4C, X0, X1, X2
	016 Move X8, [X21+16]
	017 Compare X8, 0
	018 JumpIfEqual {78}
	019 Move W9, [X8+24]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Add X8, X8, W0
	022 Move X22, [X8+32]
	023 Compare X22, 0
	024 JumpIfEqual {69}
	025 Move X23, [X21+32]
	026 Compare X23, 0
	027 JumpIfEqual {78}
	028 Move X8, [X19+32]
	029 Move W24, [X22+16]
	030 Move X8, [X8+192]
	031 Move X1, [X8+24]
	032 Move W8, [X1+309]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {40}
	037 Move X0, X1
	038 Call 0x1C5D684
	039 Move X1, X0
	040 Move X8, [X23]
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Compare X9, 0
	043 JumpIfEqual {50}
	044 Move X10, [X8+176]
	045 Add X10, X10, 8
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Subtract X9, X9, 1
	049 Add X10, X10, 16
	050 Move X0, X23
	051 Move W2, W31
	052 Call 0x1C5D788
	053 NotImplemented "Instruction LDRSW not yet implemented."
	054 Add X8, X8, X9
	055 Add X0, X8, 312
	056 Move X8, [X0]
	057 Move X3, [X0+8]
	058 Move X0, X23
	059 Move W1, W20
	060 Move W2, W24
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {69}
	066 Move X22, [X22+32]
	067 Compare X22, 0
	068 JumpIfNotEqual {25}
	069 Move X0, X22
	070 Move X20, [X31+48]
	071 Move X19, [X31+56]
	072 Move X22, [X31+32]
	073 Move X21, [X31+40]
	074 Move X24, [X31+16]
	075 Move X23, [X31+24]
	076 Move X30, [X31+64]
	077 Return X0
	078 Call 0x1C17F20
	079 Call 0x1C17F28

Method: System.Collections.Generic.LowLevelDictionary`2/Entry<TKey, TValue> UncheckedAdd(TKey key, TValue value)

Disassembly:
	0x0319ABC8 MOV X24, X0
	0x0319ABCC MOV X10, X31
	0x0319ABD0 LDR W9, [X8 + 0x18]
	0x0319ABD4 CMP X10, W9, SXTW
	0x0319ABD8 B.GE 0x319AD00
	0x0319ABDC CMP X10, X9
	0x0319ABE0 B.CS 0x319AD48
	0x0319ABE4 ADD X9, X8, X10, 0x3, LSL
	0x0319ABE8 LDR X25, [X9 + 0x20]
	0x0319ABEC STUR X10, [X29 - 0x38]
	0x0319ABF0 CBZ X25, 0x319ACF0
	0x0319ABF4 LDR X8, [X19 + 0x20]
	0x0319ABF8 LDR X8, [X8 + 0xC0]
	0x0319ABFC LDR X8, [X8 + 0x40]
	0x0319AC00 LDR X8, [X8 + 0x80]
	0x0319AC04 ADD X1, X8, 0x40
	0x0319AC08 MOV X0, X25
	0x0319AC0C BL 0x1C16D18
	0x0319AC10 LDR X8, [X19 + 0x20]
	0x0319AC14 LDR X28, [X0]
	0x0319AC18 LDR X8, [X8 + 0xC0]
	0x0319AC1C LDR X8, [X8 + 0x40]
	0x0319AC20 LDR X1, [X8 + 0x80]
	0x0319AC24 MOV X0, X25
	0x0319AC28 BL 0x1C16D18
	0x0319AC2C MOV X1, X0
	0x0319AC30 LDUR X2, [X29 - 0x30]
	0x0319AC34 MOV X0, X22
	0x0319AC38 BL 0x3EB1AC0
	0x0319AC3C LDR X8, [X19 + 0x20]
	0x0319AC40 LDR X9, [X8 + 0xC0]
	0x0319AC44 LDR X8, [X9 + 0x30]
	0x0319AC48 LDR W10, [X8 + 0x28]
	0x0319AC4C MOV X8, X22
	0x0319AC50 TBNZ X10, 0x1F, 0x319AC58
	0x0319AC54 LDR X8, [X22]
	0x0319AC58 LDR X1, [X9 + 0x68]
	0x0319AC5C LDR X0, [X1]
	0x0319AC60 STUR X8, [X29 - 0x20]
	0x0319AC64 SUB X8, X29, 0xC
	0x0319AC68 STUR W23, [X29 - 0xC]
	0x0319AC6C STUR X8, [X29 - 0x18]
	0x0319AC70 LDR X8, [X1 + 0x10]
	0x0319AC74 LDUR X2, [X29 - 0x28]
	0x0319AC78 SUB X3, X29, 0x20
	0x0319AC7C SUB X4, X29, 0x10
	0x0319AC80 BLR X8
	0x0319AC84 CBZ X24, 0x319AD40
	0x0319AC88 LDURSW X27, [X29 - 0x10]
	0x0319AC8C LDR W8, [X24 + 0x18]
	0x0319AC90 CMP W27, W8
	0x0319AC94 B.CS 0x319AD3C
	0x0319AC98 ADD X21, X24, X27, 0x3, LSL
	0x0319AC9C LDR X20, [X21 + 0x20]!
	0x0319ACA0 LDR X8, [X19 + 0x20]
	0x0319ACA4 LDR X8, [X8 + 0xC0]
	0x0319ACA8 LDR X8, [X8 + 0x40]
	0x0319ACAC LDR X8, [X8 + 0x80]
	0x0319ACB0 ADD X26, X8, 0x40
	0x0319ACB4 MOVZ W1, 0x8
	0x0319ACB8 MOV X0, X26

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X3+32]
	008 Move X19, X3
	009 Move X23, X2
	010 Move W22, W1
	011 Move X8, [X8+192]
	012 Move X20, X0
	013 Move X8, [X8+64]
	014 Move W9, [X8+309]
	015 Move TEMP, X9
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {22}
	019 Move X0, X8
	020 Call 0x1C5D684
	021 Move X8, X0
	022 Move X0, X8
	023 Call 0x1C17F10
	024 Move X8, [X19+32]
	025 Move X21, X0
	026 Move X8, [X8+192]
	027 Move X1, [X8+120]
	028 Call 0x2BA9CCC, X0
	029 Compare X21, 0
	030 JumpIfEqual {70}
	031 Move [X21+16], W22
	032 Move [X21+24], X23
	033 Move X8, [X19+32]
	034 Move X0, X20
	035 Move W1, W22
	036 Move W2, W31
	037 Move X8, [X8+192]
	038 Move X3, [X8+104]
	039 Call 0x319AE4C, X0, X1, X2
	040 Move X8, [X20+16]
	041 Compare X8, 0
	042 JumpIfEqual {70}
	043 Move W9, [X8+24]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Add X8, X8, W0
	046 Move X9, [X8+32]
	047 Move [X21+32], X9
	048 Move [X8+32], X21
	049 Move W8, [X20+24]
	050 Move X9, [X20+16]
	051 Add W8, W8, 1
	052 Move [X20+24], W8
	053 Compare X9, 0
	054 JumpIfEqual {70}
	055 Move W9, [X9+24]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X8, [X19+32]
	058 Move X0, X20
	059 Move X8, [X8+192]
	060 Move X1, [X8+128]
	061 Call 0x319ACBC, X0
	062 Move X0, X21
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X22, [X31+16]
	066 Move X21, [X31+24]
	067 Move X30, [X31+48]
	068 Move X23, [X31+56]
	069 Return X0
	070 Call 0x1C17F20
	071 Call 0x1C17F28

Method: System.Void ExpandBuckets()

Disassembly:
	0x0319ACBC BL 0x1C16D14
	0x0319ACC0 MOV X0, X25
	0x0319ACC4 MOV X1, X26
	0x0319ACC8 BL 0x1C16D18
	0x0319ACCC STR X20, [X0]
	0x0319ACD0 LDR W8, [X24 + 0x18]
	0x0319ACD4 CMP W27, W8
	0x0319ACD8 B.CS 0x319AD44
	0x0319ACDC STR X25, [X21]
	0x0319ACE0 MOV X25, X28
	0x0319ACE4 CBNZ X28, 0x319ABF4
	0x0319ACE8 LDUR X8, [X29 - 0x28]
	0x0319ACEC LDR X8, [X8 + 0x10]
	0x0319ACF0 LDUR X10, [X29 - 0x38]
	0x0319ACF4 ADD X10, X10, 0x1
	0x0319ACF8 CBNZ X8, 0x319ABD0
	0x0319ACFC BL 0x1C16F20
	0x0319AD00 LDUR X8, [X29 - 0x28]
	0x0319AD04 STR X24, [X8 + 0x10]
	0x0319AD08 LDUR X8, [X29 - 0x40]
	0x0319AD0C LDR X8, [X8 + 0x28]
	0x0319AD10 LDUR X9, [X29 - 0x8]
	0x0319AD14 CMP X8, X9
	0x0319AD18 B.NE 0x319AD50
	0x0319AD1C ADD X31, X29, 0x0
	0x0319AD20 LDP X20, X19, [X31 + 0x50]
	0x0319AD24 LDP X22, X21, [X31 + 0x40]
	0x0319AD28 LDP X24, X23, [X31 + 0x30]
	0x0319AD2C LDP X26, X25, [X31 + 0x20]
	0x0319AD30 LDP X28, X27, [X31 + 0x10]
	0x0319AD34 LDP X29, X30, [X31], #0x60
	0x0319AD38 RET
	0x0319AD3C BL 0x1C16F28
	0x0319AD40 BL 0x1C16F20
	0x0319AD44 BL 0x1C16F28
	0x0319AD48 BL 0x1C16F28
	0x0319AD4C BL 0x1C16F20
	0x0319AD50 BL 0x3EB1B20
	0x0319AD54 B 0x319AD7C
	0x0319AD58 B 0x319AD7C
	0x0319AD5C B 0x319AD7C
	0x0319AD60 B 0x319AD7C
	0x0319AD64 B 0x319AD7C
	0x0319AD68 B 0x319AD7C
	0x0319AD6C B 0x319AD7C
	0x0319AD70 B 0x319AD7C
	0x0319AD74 B 0x319AD7C
	0x0319AD78 B 0x319AD7C
	0x0319AD7C MOV X19, X0
	0x0319AD80 CMP W1, 0x1
	0x0319AD84 B.NE 0x319ADE0
	0x0319AD88 MOV X0, X19
	0x0319AD8C BL 0x3EB1AD0
	0x0319AD90 MOV X19, X0
	0x0319AD94 ADRP X0, 0xF62000
	0x0319AD98 LDR X0, [X0 + 0xDB8]
	0x0319AD9C BL 0x1C16D08
	0x0319ADA0 LDR X8, [X19]
	0x0319ADA4 LDR X1, [X8]
	0x0319ADA8 BL 0x1C17270
	0x0319ADAC TBZ X0, 0x0, 0x319ADB8
	0x0319ADB0 BL 0x3EB1AE0
	0x0319ADB4 B 0x319AD08
	0x0319ADB8 MOVZ W0, 0x8
	0x0319ADBC BL 0x3EB1AF0
	0x0319ADC0 LDR X8, [X19]
	0x0319ADC4 STR X8, [X0]
	0x0319ADC8 ADRP X1, 0xD1A000
	0x0319ADCC ADD X1, X1, 0xE58
	0x0319ADD0 MOV X2, X31
	0x0319ADD4 BL 0x3EB1B00
	0x0319ADD8 MOV X19, X0
	0x0319ADDC BL 0x3EB1AE0
	0x0319ADE0 MOV X0, X19
	0x0319ADE4 BL 0x1D2C690
	0x0319ADE8 BL 0x1990590
	0x0319ADEC STP X29, X30, [X31 - 0x50]!
	0x0319ADF0 STR X25, [X31 + 0x10]
	0x0319ADF4 STP X24, X23, [X31 + 0x20]
	0x0319ADF8 STP X22, X21, [X31 + 0x30]
	0x0319ADFC STP X20, X19, [X31 + 0x40]
	0x0319AE00 ADD X29, X31, 0x0
	0x0319AE04 SUB X31, X31, 0x20
	0x0319AE08 MRS X24, 0xC000
	0x0319AE0C LDR X8, [X24 + 0x28]
	0x0319AE10 MOV W19, W2
	0x0319AE14 ADD X9, X31, 0x0
	0x0319AE18 MOV X23, X3
	0x0319AE1C STUR X8, [X29 - 0x8]
	0x0319AE20 STUR X1, [X29 - 0x20]
	0x0319AE24 LDR X25, [X3 + 0x20]
	0x0319AE28 MOV X20, X0
	0x0319AE2C LDR X8, [X25 + 0xC0]
	0x0319AE30 LDR X8, [X8 + 0x30]
	0x0319AE34 LDR W2, [X8 + 0xFC]
	0x0319AE38 ADD X10, X2, 0xF
	0x0319AE3C AND X10, X10, 0x1FFFFFFFF
	0x0319AE40 SUB X22, X9, X10
	0x0319AE44 ADD X31, X22, 0x0
	0x0319AE48 LDR W8, [X8 + 0x28]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X8, [X0+16]
	010 Compare X8, 0
	011 JumpIfEqual {77}
	012 Move X9, [X1+32]
	013 Move X19, X0
	014 Move W22, [X8+24]
	015 Move X20, X1
	016 Move X9, [X9+192]
	017 Move X0, [X9+88]
	018 Move W9, [X0+309]
	019 Move TEMP, X9
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {24}
	023 Call 0x1C5D684
	024 Move W21, 1
	025 NotImplemented "Instruction BFM not yet implemented."
	026 Move W1, W21
	027 Call 0x1C17D6C
	028 Move X8, [X19+16]
	029 Compare X8, 0
	030 JumpIfEqual {63}
	031 Move X22, X0
	032 Move X23, X31
	033 Move W9, [X8+24]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Add X9, X8, X23
	037 Move X24, [X9+32]
	038 Compare X24, 0
	039 JumpIfEqual {60}
	040 Move X8, [X20+32]
	041 Move X25, [X24+32]
	042 Move W1, [X24+16]
	043 Move X8, [X8+192]
	044 Move X3, [X8+104]
	045 Move X0, X19
	046 Move W2, W21
	047 Call 0x319AE4C, X0, X1, X2
	048 Compare X22, 0
	049 JumpIfEqual {74}
	050 Move W8, [X22+24]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Add X8, X22, W0
	053 Move X9, [X8+32]
	054 Move [X24+32], X9
	055 Move [X8+32], X24
	056 Move X24, X25
	057 Compare X25, 0
	058 JumpIfNotEqual {40}
	059 Move X8, [X19+16]
	060 Add X23, X23, 1
	061 Compare X8, 0
	062 JumpIfNotEqual {33}
	063 Call 0x1C17F20
	064 Move [X19+16], X22
	065 Move X20, [X31+48]
	066 Move X19, [X31+56]
	067 Move X22, [X31+32]
	068 Move X21, [X31+40]
	069 Move X24, [X31+16]
	070 Move X23, [X31+24]
	071 Move X30, [X31+64]
	072 Move X25, [X31+72]
	073 Return 
	074 Call 0x1C17F20
	075 Call 0x1C17F28
	076 Call 0x1C17F28
	077 Call 0x1C17F20
	078 Move X19, X0
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X0, X19
	081 Call 0x3EB2AD0
	082 Move X19, X0
	083 Move X0, 0xF63000
	084 Move X0, [X0+3512]
	085 Call 0x1C17D08
	086 Move X8, [X19]
	087 Move X1, [X8]
	088 Call 0x1C18270
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfNotEqual {103}
	093 Move X20, [X31+48]
	094 Move X19, [X31+56]
	095 Move X22, [X31+32]
	096 Move X21, [X31+40]
	097 Move X24, [X31+16]
	098 Move X23, [X31+24]
	099 Move X30, [X31+64]
	100 Move X25, [X31+72]
	101 Call 0x3EB2AE0
	102 Return 
	103 Move W0, 8
	104 Call 0x3EB2AF0
	105 Move X8, [X19]
	106 Move [X0], X8
	107 Move X1, 0xD1B000
	108 Add X1, X1, 3672
	109 Move X2, X31
	110 Call 0x3EB2B00
	111 Move X19, X0
	112 Call 0x3EB2AE0
	113 Move X0, X19
	114 Call 0x1D2D690
	115 Call 0x1991590

Method: System.Int32 GetBucket(TKey key, System.Int32 numBuckets = 0)

Disassembly:
	0x0319AE4C LDR X21, [X0 + 0x20]
	0x0319AE50 MOV X0, X22
	0x0319AE54 CMP W8, 0x0
	0x0319AE58 SUB X8, X29, 0x20
	0x0319AE5C CSEL X1, X1, X8, LT
	0x0319AE60 BL 0x3EB1AC0
	0x0319AE64 CBZ X21, 0x319AF50
	0x0319AE68 LDR X8, [X25 + 0xC0]
	0x0319AE6C LDR X1, [X8 + 0x18]
	0x0319AE70 LDRB W9, [X1 + 0x135]
	0x0319AE74 TBNZ X9, 0x0, 0x319AE8C
	0x0319AE78 MOV X0, X1
	0x0319AE7C BL 0x1C5C684
	0x0319AE80 LDR X8, [X23 + 0x20]
	0x0319AE84 MOV X1, X0
	0x0319AE88 LDR X8, [X8 + 0xC0]
	0x0319AE8C LDR X8, [X8 + 0x30]
	0x0319AE90 LDR W8, [X8 + 0x28]
	0x0319AE94 TBNZ X8, 0x1F, 0x319AE9C
	0x0319AE98 LDR X22, [X22]
	0x0319AE9C LDR X8, [X21]
	0x0319AEA0 LDRH W9, [X8 + 0x12E]
	0x0319AEA4 CBZ X9, 0x319AEC8
	0x0319AEA8 LDR X10, [X8 + 0xB0]
	0x0319AEAC ADD X10, X10, 0x8
	0x0319AEB0 LDUR X11, [X10 - 0x8]
	0x0319AEB4 CMP X11, X1
	0x0319AEB8 B.EQ 0x319AED8
	0x0319AEBC SUBS X9, X9, 0x1
	0x0319AEC0 ADD X10, X10, 0x10
	0x0319AEC4 B.NE 0x319AEB0
	0x0319AEC8 MOVZ W2, 0x1
	0x0319AECC MOV X0, X21
	0x0319AED0 BL 0x1C5C788
	0x0319AED4 B 0x319AEE8
	0x0319AED8 LDR W9, [X10]
	0x0319AEDC ADD W9, W9, 0x1
	0x0319AEE0 ADD X8, X8, W9, 0x4, SXTW
	0x0319AEE4 ADD X0, X8, 0x138
	0x0319AEE8 STUR X22, [X29 - 0x18]
	0x0319AEEC LDR X1, [X0 + 0x8]
	0x0319AEF0 SUB X3, X29, 0x18
	0x0319AEF4 SUB X4, X29, 0xC
	0x0319AEF8 MOV X2, X21
	0x0319AEFC LDP X0, X8, [X1 + 0x8]
	0x0319AF00 BLR X8
	0x0319AF04 LDUR W8, [X29 - 0xC]
	0x0319AF08 CBNZ W19, 0x319AF18
	0x0319AF0C LDR X9, [X20 + 0x10]
	0x0319AF10 CBZ X9, 0x319AF50
	0x0319AF14 LDR W19, [X9 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, [X0+32]
	007 Compare X22, 0
	008 JumpIfEqual {60}
	009 Move X8, [X3+32]
	010 Move W21, W1
	011 Move W19, W2
	012 Move X20, X0
	013 Move X8, [X8+192]
	014 Move X1, [X8+24]
	015 Move W8, [X1+309]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {23}
	020 Move X0, X1
	021 Call 0x1C5D684
	022 Move X1, X0
	023 Move X8, [X22]
	024 NotImplemented "Instruction LDRH not yet implemented."
	025 Compare X9, 0
	026 JumpIfEqual {33}
	027 Move X10, [X8+176]
	028 Add X10, X10, 8
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Subtract X9, X9, 1
	032 Add X10, X10, 16
	033 Move W2, 1
	034 Move X0, X22
	035 Call 0x1C5D788
	036 Move W9, [X10]
	037 Add W9, W9, 1
	038 Add X8, X8, W9
	039 Add X0, X8, 312
	040 Move X8, [X0]
	041 Move X2, [X0+8]
	042 Move X0, X22
	043 Move W1, W21
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Compare W19, 0
	046 JumpIfNotEqual {51}
	047 Move X8, [X20+16]
	048 Compare X8, 0
	049 JumpIfEqual {60}
	050 Move W19, [X8+24]
	051 And W8, W0, 0x7FFFFFFF
	052 NotImplemented "Instruction SDIV not yet implemented."
	053 NotImplemented "Instruction MSUB not yet implemented."
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X30, [X31+48]
	059 Return X0
	060 Call 0x1C17F20

