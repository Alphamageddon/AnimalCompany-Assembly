Type: System.Collections.Generic.Queue`1/Enumerator

Method: System.Void .ctor(System.Collections.Generic.Queue`1<T> q)

Disassembly:
	0x02BB4524 RET
	0x02BB4528 BL 0x1C16F20
	0x02BB452C ADRP X0, 0x153F000
	0x02BB4530 LDR X0, [X0 + 0x5B0]
	0x02BB4534 MOV X19, X1
	0x02BB4538 BL 0x1C16D08
	0x02BB453C BL 0x1C16F10
	0x02BB4540 MOV X20, X0
	0x02BB4544 ADRP X0, 0x1569000
	0x02BB4548 LDR X0, [X0 + 0x288]

ISIL:
	001 Move [X31-16], X30
	002 Move [X0], X1
	003 Compare X1, 0
	004 JumpIfEqual {15}
	005 Move W8, [X1+36]
	006 Move TEMP, 0
	007 Not TEMP
	008 Move W9, TEMP
	009 Move [X0+16], X31
	010 Move [X0+24], X31
	011 Move [X0+8], W8
	012 Move [X0+12], W9
	013 Move X30, [X31+16]
	014 Return 
	015 Call 0x1C17F20

Method: System.Void Dispose()

Disassembly:
	0x02BB454C BL 0x1C16D08
	0x02BB4550 MOV X1, X0
	0x02BB4554 MOV X0, X20
	0x02BB4558 MOV X2, X31

ISIL:
	001 Move TEMP, 1
	002 Not TEMP
	003 Move W8, TEMP
	004 Move [X0+12], W8
	005 Move [X0+16], X31
	006 Move [X0+24], X31
	007 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x02BB455C BL 0x337DF1C
	0x02BB4560 MOV X0, X20
	0x02BB4564 MOV X1, X19
	0x02BB4568 BL 0x1C16DEC
	0x02BB456C STR X30, [X31 - 0x20]!
	0x02BB4570 STP X20, X19, [X31 + 0x10]
	0x02BB4574 LDR X8, [X0]
	0x02BB4578 CBZ X8, 0x2BB45AC
	0x02BB457C LDR W9, [X0 + 0x10]
	0x02BB4580 LDR W10, [X8 + 0x1C]
	0x02BB4584 CMP W9, W10
	0x02BB4588 B.NE 0x2BB45B0
	0x02BB458C STP X31, X31, [X0 + 0x18]
	0x02BB4590 STR X31, [X0 + 0x28]
	0x02BB4594 LDR X8, [X8 + 0x10]
	0x02BB4598 LDP X20, X19, [X31 + 0x10]
	0x02BB459C STR W31, [X0 + 0x30]
	0x02BB45A0 STR X8, [X0 + 0x8]
	0x02BB45A4 LDR X30, [X31], #0x20
	0x02BB45A8 RET
	0x02BB45AC BL 0x1C16F20
	0x02BB45B0 ADRP X0, 0x153F000
	0x02BB45B4 LDR X0, [X0 + 0x5B0]
	0x02BB45B8 MOV X19, X1
	0x02BB45BC BL 0x1C16D08
	0x02BB45C0 BL 0x1C16F10
	0x02BB45C4 MOV X20, X0
	0x02BB45C8 ADRP X0, 0x1569000
	0x02BB45CC LDR X0, [X0 + 0x288]
	0x02BB45D0 BL 0x1C16D08
	0x02BB45D4 MOV X1, X0
	0x02BB45D8 MOV X0, X20
	0x02BB45DC MOV X2, X31
	0x02BB45E0 BL 0x337DF1C
	0x02BB45E4 MOV X0, X20
	0x02BB45E8 MOV X1, X19
	0x02BB45EC BL 0x1C16DEC
	0x02BB45F0 RET
	0x02BB45F4 STR X30, [X31 - 0x20]!
	0x02BB45F8 STP X20, X19, [X31 + 0x10]
	0x02BB45FC ADRP X0, 0x156A000
	0x02BB4600 LDR X0, [X0 + 0xC50]
	0x02BB4604 MOV X19, X4
	0x02BB4608 BL 0x1C16D08
	0x02BB460C BL 0x1C16F10
	0x02BB4610 MOV X1, X31
	0x02BB4614 MOV X20, X0
	0x02BB4618 BL 0x338E344
	0x02BB461C MOV X0, X20
	0x02BB4620 MOV X1, X19
	0x02BB4624 BL 0x1C16DEC
	0x02BB4628 STR X30, [X31 - 0x20]!
	0x02BB462C STP X20, X19, [X31 + 0x10]
	0x02BB4630 ADRP X0, 0x156A000
	0x02BB4634 LDR X0, [X0 + 0xC50]
	0x02BB4638 MOV X19, X2
	0x02BB463C BL 0x1C16D08
	0x02BB4640 BL 0x1C16F10
	0x02BB4644 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0]
	005 Compare X8, 0
	006 JumpIfEqual {43}
	007 Move W9, [X0+8]
	008 Move W10, [X8+36]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move W9, [X0+12]
	011 Add W31, W9, 2
	012 Move W8, W31
	013 Add W10, W9, 1
	014 Move [X0+12], W10
	015 Move W9, [X8+32]
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move TEMP, 1
	018 Not TEMP
	019 Move W9, TEMP
	020 Move W8, W31
	021 Move [X0+12], W9
	022 Move [X0+16], X31
	023 Move [X0+24], X31
	024 Move X9, [X8+16]
	025 Compare X9, 0
	026 JumpIfEqual {43}
	027 Move W8, [X8+24]
	028 Move W11, [X9+24]
	029 Add W8, W8, W10
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSEL not yet implemented."
	032 Subtract W8, W8, W10
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Add X8, X9, W8
	035 Move V0, [X8+2]
	036 Move W8, 1
	037 Move [X0+1], V0
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move W0, W8
	041 Move X30, [X31+32]
	042 Return X0
	043 Call 0x1C17F20
	044 Move X0, 0x1540000
	045 Move X0, [X0+1456]
	046 Move X19, X1
	047 Call 0x1C17D08
	048 Call 0x1C17F10
	049 Move X20, X0
	050 Move X0, 0x156A000
	051 Move X0, [X0+648]
	052 Call 0x1C17D08
	053 Move X1, X0
	054 Move X0, X20
	055 Move X2, X31
	056 Call InvalidOperationException..ctor, X0, X1
	057 Move X0, X20
	058 Move X1, X19
	059 Call 0x1C17DEC
	060 Call 0x1C17F28

Method: T get_Current()

Disassembly:
	0x02BB4648 MOV X20, X0
	0x02BB464C BL 0x338E344
	0x02BB4650 MOV X0, X20
	0x02BB4654 MOV X1, X19
	0x02BB4658 BL 0x1C16DEC
	0x02BB465C STR X30, [X31 - 0x10]!
	0x02BB4660 STR X1, [X0]
	0x02BB4664 STR W31, [X0 + 0x8]
	0x02BB4668 CBZ X1, 0x2BB4684
	0x02BB466C LDR W8, [X1 + 0x1C]
	0x02BB4670 MOVI V0.2D, 0x0
	0x02BB4674 STP V0, V0, [X0 + 0x10]
	0x02BB4678 STR W8, [X0 + 0xC]
	0x02BB467C LDR X30, [X31], #0x10
	0x02BB4680 RET
	0x02BB4684 BL 0x1C16F20

ISIL:
	001 Move [X31-16], X30
	002 Move W8, [X0+12]
	003 Move TEMP, X8
	004 And TEMP, TEMP, -2147483648
	005 Compare TEMP, -2147483648
	006 JumpIfEqual {12}
	007 Move X8, [X0+16]
	008 Move X1, [X0+24]
	009 Move X0, X8
	010 Move X30, [X31+16]
	011 Return X0
	012 Move [X31+8], X0
	013 Move X0, [X1+32]
	014 Move W8, [X0+309]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {20}
	019 Call 0x1C5D684
	020 Move X8, [X0+192]
	021 Move X0, [X31+8]
	022 Move X1, [X8+32]
	023 Call 0x2BB4688, X0

Method: System.Void ThrowEnumerationNotStartedOrEnded()

Disassembly:
	0x02BB4688 RET
	0x02BB468C STP X30, X19, [X31 - 0x10]!
	0x02BB4690 LDR X9, [X0]
	0x02BB4694 CBZ X9, 0x2BB4710
	0x02BB4698 LDR W8, [X0 + 0xC]
	0x02BB469C LDR W10, [X9 + 0x1C]
	0x02BB46A0 MOV X19, X0
	0x02BB46A4 CMP W8, W10
	0x02BB46A8 B.NE 0x2BB46EC
	0x02BB46AC LDRSW X8, [X19 + 0x8]
	0x02BB46B0 LDR W10, [X9 + 0x18]
	0x02BB46B4 CMP W8, W10
	0x02BB46B8 B.CS 0x2BB46EC
	0x02BB46BC LDR X9, [X9 + 0x10]
	0x02BB46C0 CBZ X9, 0x2BB4710
	0x02BB46C4 LDR W10, [X9 + 0x18]
	0x02BB46C8 CMP W8, W10
	0x02BB46CC B.CS 0x2BB4714
	0x02BB46D0 ADD X9, X9, X8, 0x5, LSL
	0x02BB46D4 LDP V1, V0, [X9 + 0x20]
	0x02BB46D8 ADD W8, W8, 0x1
	0x02BB46DC STR W8, [X19 + 0x8]
	0x02BB46E0 MOVZ W0, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+12]
	006 Move X9, 0x156B000
	007 Move X10, 0x156B000
	008 Move X9, [X9+3136]
	009 Move X10, [X10+3144]
	010 Add W31, W8, 1
	011 Move X19, X1
	012 NotImplemented "Instruction CSEL not yet implemented."
	013 Call 0x1C17D08
	014 Move X20, X0
	015 Move X0, 0x1540000
	016 Move X0, [X0+1456]
	017 Call 0x1C17D08
	018 Call 0x1C17F10
	019 Move X1, X20
	020 Move X2, X31
	021 Move X21, X0
	022 Call InvalidOperationException..ctor, X0, X1
	023 Move X0, X21
	024 Move X1, X19
	025 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x02BB46E4 STP V1, V0, [X19 + 0x10]
	0x02BB46E8 B 0x2BB4708
	0x02BB46EC LDR X0, [X1 + 0x20]
	0x02BB46F0 LDRB W8, [X0 + 0x135]
	0x02BB46F4 TBNZ X8, 0x0, 0x2BB46FC
	0x02BB46F8 BL 0x1C5C684
	0x02BB46FC MOV X0, X19
	0x02BB4700 BL 0x2BB4718
	0x02BB4704 MOV W0, W31
	0x02BB4708 LDP X30, X19, [X31], #0x10
	0x02BB470C RET
	0x02BB4710 BL 0x1C16F20
	0x02BB4714 BL 0x1C16F28
	0x02BB4718 STP X30, X19, [X31 - 0x10]!
	0x02BB471C LDR X8, [X0]
	0x02BB4720 CBZ X8, 0x2BB4768
	0x02BB4724 LDR W9, [X0 + 0xC]
	0x02BB4728 LDR W10, [X8 + 0x1C]
	0x02BB472C MOV X19, X0
	0x02BB4730 CMP W9, W10
	0x02BB4734 B.EQ 0x2BB4748
	0x02BB4738 MOV X0, X31
	0x02BB473C BL 0x339E09C
	0x02BB4740 LDR X8, [X19]
	0x02BB4744 CBZ X8, 0x2BB4768
	0x02BB4748 LDR W8, [X8 + 0x18]
	0x02BB474C MOVI V0.2D, 0x0
	0x02BB4750 STP V0, V0, [X19 + 0x10]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X8, [X1+32]
	006 Move X19, X1
	007 Move X20, X0
	008 Move W9, [X8+309]
	009 Move TEMP, X9
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {16}
	013 Move X0, X8
	014 Call 0x1C5D684
	015 Move X8, X0
	016 Move X8, [X8+192]
	017 Move X0, X20
	018 Move X1, [X8+48]
	019 Call 0x2BB4648, X0
	020 Move [X31], X0
	021 Move [X31+8], X1
	022 Move X0, [X19+32]
	023 Move W8, [X0+309]
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {29}
	028 Call 0x1C5D684
	029 Move X8, [X0+192]
	030 Add X1, X31, 0
	031 Move X0, [X8+16]
	032 Call 0x1C17E04
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X30, [X31+16]
	036 Add X31, X31, 48
	037 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x02BB4754 MOV W0, W31
	0x02BB4758 ADD W8, W8, 0x1
	0x02BB475C STR W8, [X19 + 0x8]
	0x02BB4760 LDP X30, X19, [X31], #0x10
	0x02BB4764 RET
	0x02BB4768 BL 0x1C16F20
	0x02BB476C LDP V1, V0, [X0 + 0x10]
	0x02BB4770 STP V1, V0, [X8]
	0x02BB4774 RET
	0x02BB4778 SUB X31, X31, 0x40
	0x02BB477C STR X30, [X31 + 0x20]
	0x02BB4780 STP X20, X19, [X31 + 0x30]
	0x02BB4784 LDR W8, [X0 + 0x8]
	0x02BB4788 MOV X19, X0
	0x02BB478C MOV X20, X1
	0x02BB4790 CBZ W8, 0x2BB47AC
	0x02BB4794 LDR X9, [X19]
	0x02BB4798 CBZ X9, 0x2BB4804
	0x02BB479C LDR W9, [X9 + 0x18]
	0x02BB47A0 ADD W9, W9, 0x1
	0x02BB47A4 CMP W8, W9
	0x02BB47A8 B.NE 0x2BB47B4
	0x02BB47AC MOV X0, X31
	0x02BB47B0 BL 0x339E0E8
	0x02BB47B4 LDR X0, [X20 + 0x20]
	0x02BB47B8 ADD X8, X0, 0x135
	0x02BB47BC LDRH W8, [X8]
	0x02BB47C0 TBNZ X8, 0x0, 0x2BB47D4
	0x02BB47C4 BL 0x1C5C684
	0x02BB47C8 LDR X0, [X20 + 0x20]
	0x02BB47CC ADD X8, X0, 0x135

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0]
	005 Compare X8, 0
	006 JumpIfEqual {20}
	007 Move W9, [X0+8]
	008 Move W8, [X8+36]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X20, [X31+16]
	011 Move X19, [X31+24]
	012 Move TEMP, 0
	013 Not TEMP
	014 Move W8, TEMP
	015 Move [X0+12], W8
	016 Move [X0+16], X31
	017 Move [X0+24], X31
	018 Move X30, [X31+32]
	019 Return 
	020 Call 0x1C17F20
	021 Move X0, 0x1540000
	022 Move X0, [X0+1456]
	023 Move X19, X1
	024 Call 0x1C17D08
	025 Call 0x1C17F10
	026 Move X20, X0
	027 Move X0, 0x156A000
	028 Move X0, [X0+648]
	029 Call 0x1C17D08
	030 Move X1, X0
	031 Move X0, X20
	032 Move X2, X31
	033 Call InvalidOperationException..ctor, X0, X1
	034 Move X0, X20
	035 Move X1, X19
	036 Call 0x1C17DEC

