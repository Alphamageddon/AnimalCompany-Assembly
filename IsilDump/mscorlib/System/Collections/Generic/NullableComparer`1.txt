Type: System.Collections.Generic.NullableComparer`1

Method: System.Int32 Compare(System.Nullable`1<T> x, System.Nullable`1<T> y)

Disassembly:
	0x0242BD40 LDR X10, [X10 + 0x80]
	0x0242BD44 NOP
	0x0242BD48 MADD X8, X9, X23, X20
	0x0242BD4C ADD X0, X8, 0x20
	0x0242BD50 ADD X1, X10, 0x20
	0x0242BD54 BL 0x1C16D18
	0x0242BD58 MOV X3, X0
	0x0242BD5C SUB X4, X29, 0x18
	0x0242BD60 SUB X5, X29, 0xC
	0x0242BD64 MOV X0, X22
	0x0242BD68 MOV X1, X28
	0x0242BD6C MOV X2, X24
	0x0242BD70 STUR X26, [X29 - 0x18]
	0x0242BD74 BL 0x1C17728
	0x0242BD78 LDURB W8, [X29 - 0xC]
	0x0242BD7C CBNZ W8, 0x242BDEC
	0x0242BD80 SUB W25, W25, 0x1
	0x0242BD84 CMP W25, W21
	0x0242BD88 B.GE 0x242BC88
	0x0242BD8C MOVN W25, 0x0
	0x0242BD90 B 0x242BDEC
	0x0242BD94 B.GT 0x242BDE4
	0x0242BD98 CBZ X20, 0x242BE28
	0x0242BD9C LDR W8, [X20 + 0x18]
	0x0242BDA0 CMP W25, W8
	0x0242BDA4 B.CS 0x242BE24
	0x0242BDA8 LDR X8, [X19 + 0x20]
	0x0242BDAC LDR X9, [X20]
	0x0242BDB0 SXTW X10, W25
	0x0242BDB4 LDR X8, [X8 + 0xC0]
	0x0242BDB8 LDR X1, [X8 + 0x8]
	0x0242BDBC LDR W8, [X9 + 0x104]
	0x0242BDC0 LDR X9, [X1]
	0x0242BDC4 NOP
	0x0242BDC8 MADD X8, X8, X10, X20
	0x0242BDCC ADD X0, X8, 0x20
	0x0242BDD0 BLR X9
	0x0242BDD4 TBZ X0, 0x0, 0x242BDF0
	0x0242BDD8 SUB W25, W25, 0x1
	0x0242BDDC CMP W25, W21
	0x0242BDE0 B.GE 0x242BD9C
	0x0242BDE4 MOVN W25, 0x0
	0x0242BDE8 B 0x242BDF0
	0x0242BDEC LDUR X22, [X29 - 0x38]
	0x0242BDF0 LDR X8, [X22 + 0x28]
	0x0242BDF4 LDUR X9, [X29 - 0x8]
	0x0242BDF8 CMP X8, X9
	0x0242BDFC B.NE 0x242BE2C
	0x0242BE00 MOV W0, W25
	0x0242BE04 ADD X31, X29, 0x0
	0x0242BE08 LDP X20, X19, [X31 + 0x50]
	0x0242BE0C LDP X22, X21, [X31 + 0x40]
	0x0242BE10 LDP X24, X23, [X31 + 0x30]
	0x0242BE14 LDP X26, X25, [X31 + 0x20]
	0x0242BE18 LDP X28, X27, [X31 + 0x10]
	0x0242BE1C LDP X29, X30, [X31], #0x60
	0x0242BE20 RET
	0x0242BE24 BL 0x1C16F28
	0x0242BE28 BL 0x1C16F20
	0x0242BE2C BL 0x3EB1B20
	0x0242BE30 STP X30, X19, [X31 - 0x10]!
	0x0242BE34 LDR X8, [X2 + 0x20]
	0x0242BE38 MOV X19, X1
	0x0242BE3C LDR X8, [X8 + 0xC0]
	0x0242BE40 LDR X0, [X8 + 0x40]
	0x0242BE44 LDRB W8, [X0 + 0x135]
	0x0242BE48 TBNZ X8, 0x0, 0x242BE50
	0x0242BE4C BL 0x1C5C684
	0x0242BE50 CBZ X19, 0x242BE68
	0x0242BE54 LDR X8, [X19]
	0x0242BE58 LDRB W9, [X0 + 0x130]
	0x0242BE5C LDRB W10, [X8 + 0x130]
	0x0242BE60 CMP W10, W9
	0x0242BE64 B.CS 0x242BE70
	0x0242BE68 MOV W0, W31
	0x0242BE6C B 0x242BE84
	0x0242BE70 LDR X8, [X8 + 0xC8]
	0x0242BE74 ADD X8, X8, X9, 0x3, LSL
	0x0242BE78 LDUR X8, [X8 - 0x8]
	0x0242BE7C CMP X8, X0
	0x0242BE80 CSET W0, EQ
	0x0242BE84 LDP X30, X19, [X31], #0x10
	0x0242BE88 RET
	0x0242BE8C STR X30, [X31 - 0x10]!
	0x0242BE90 CBZ X0, 0x242BEC0
	0x0242BE94 MOV X1, X31
	0x0242BE98 BL 0x33BE520
	0x0242BE9C CBZ X0, 0x242BEC0
	0x0242BEA0 LDR X8, [X0]
	0x0242BEA4 LDP X9, X1, [X8 + 0x1A8]
	0x0242BEA8 BLR X9
	0x0242BEAC CBZ X0, 0x242BEC0
	0x0242BEB0 LDR X8, [X0]
	0x0242BEB4 LDP X2, X1, [X8 + 0x158]
	0x0242BEB8 LDR X30, [X31], #0x10
	0x0242BEBC BR X2
	0x0242BEC0 BL 0x1C16F20
	0x0242BEC4 LDR X8, [X1 + 0x20]
	0x0242BEC8 LDR X8, [X8 + 0xC0]
	0x0242BECC LDR X1, [X8 + 0x48]
	0x0242BED0 LDR X2, [X1]
	0x0242BED4 BR X2
	0x0242BED8 MOVZ W8, 0x1
	0x0242BEDC STP X1, X2, [X0 + 0x8]
	0x0242BEE0 STRB W8, [X0]
	0x0242BEE4 RET
	0x0242BEE8 LDRB W0, [X0]
	0x0242BEEC RET
	0x0242BEF0 STP X30, X19, [X31 - 0x10]!
	0x0242BEF4 LDRB W8, [X0]
	0x0242BEF8 MOV X19, X0
	0x0242BEFC CBNZ W8, 0x242BF08
	0x0242BF00 MOV X0, X31
	0x0242BF04 BL 0x339E1CC
	0x0242BF08 LDP X0, X1, [X19 + 0x8]
	0x0242BF0C LDP X30, X19, [X31], #0x10
	0x0242BF10 RET
	0x0242BF14 LDP X8, X1, [X0 + 0x8]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 32
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move X8, [X28+40]
	017 Move X20, X3
	018 Move X24, X2
	019 Move X19, X1
	020 Move [X29-8], X8
	021 Move X8, [X3+32]
	022 Move X8, [X8+192]
	023 Move X9, [X8]
	024 Move X0, [X8+24]
	025 Move W25, [X9+252]
	026 Move W9, [X0+309]
	027 Move W23, [X0+252]
	028 Move TEMP, X9
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {36}
	032 Call 0x1C5D684
	033 Move X8, [X20+32]
	034 Move W9, [X0+252]
	035 Move X8, [X8+192]
	036 Move W9, W23
	037 Add W9, W9, 16
	038 Add X9, X9, 15
	039 Add X10, X31, 0
	040 And X9, X9, 0x1FFFFFFFF
	041 Subtract X21, X10, X9
	042 Add X31, X21, 0
	043 Add X10, X23, 15
	044 Add X9, X31, 0
	045 And X10, X10, 0x1FFFFFFFF
	046 Subtract X22, X9, X10
	047 Add X31, X22, 0
	048 Add X10, X25, 15
	049 Add X9, X31, 0
	050 And X10, X10, 0x1FFFFFFFF
	051 Subtract X26, X9, X10
	052 Add X31, X26, 0
	053 Move X1, [X8+8]
	054 Move X0, X19
	055 Move X8, [X1]
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Move X8, [X20+32]
	058 Move W27, W0
	059 Move X0, X24
	060 Move X8, [X8+192]
	061 Move X1, [X8+8]
	062 Move X8, [X1]
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Move TEMP, X27
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {115}
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {119}
	072 Move X0, X26
	073 Move X1, X24
	074 Move X2, X25
	075 Call 0x3EB2AC0
	076 Move X8, [X20+32]
	077 Move X0, X26
	078 Move X8, [X8+192]
	079 Move X8, [X8]
	080 Move X8, [X8+128]
	081 Add X1, X8, 32
	082 Call 0x1C17D18
	083 Move X1, X0
	084 Move X0, X22
	085 Move X2, X23
	086 Call 0x3EB2AC0
	087 Move X8, [X20+32]
	088 Move X8, [X8+192]
	089 Move X23, [X8+24]
	090 Move W9, [X23+309]
	091 Move TEMP, X9
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfEqual {100}
	095 Move X0, X23
	096 Call 0x1C5D684
	097 Move X8, [X20+32]
	098 Move X23, X0
	099 Move X8, [X8+192]
	100 Move X9, [X8]
	101 Move X20, [X8+40]
	102 Move X0, X19
	103 Move X9, [X9+128]
	104 Add X1, X9, 32
	105 Call 0x1C17D18
	106 Move X3, X0
	107 Subtract X4, X29, 24
	108 Subtract X5, X29, 12
	109 Move X0, X23
	110 Move X1, X20
	111 Move X2, X21
	112 Move [X29-24], X22
	113 Call 0x1C18728
	114 NotImplemented "Instruction LDUR not yet implemented."
	115 Move X8, [X28+40]
	116 NotImplemented "Instruction LDUR not yet implemented."
	117 NotImplemented "Instruction CMP not yet implemented."
	118 NotImplemented "Instruction SBFM not yet implemented."
	119 Move W0, 1
	120 Move X8, [X28+40]
	121 NotImplemented "Instruction LDUR not yet implemented."
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Add X31, X29, 0
	124 Move X20, [X31+80]
	125 Move X19, [X31+88]
	126 Move X22, [X31+64]
	127 Move X21, [X31+72]
	128 Move X24, [X31+48]
	129 Move X23, [X31+56]
	130 Move X26, [X31+32]
	131 Move X25, [X31+40]
	132 Move X28, [X31+16]
	133 Move X27, [X31+24]
	134 Move X29, [X31+96]
	135 Move X30, [X31+104]
	136 Return X0
	137 Call 0x3EB2B20

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x0242BF18 MOV X0, X8
	0x0242BF1C RET
	0x0242BF20 LDRB W9, [X0]
	0x0242BF24 CBZ W9, 0x242BF38
	0x0242BF28 MOV X8, X0
	0x0242BF2C LDR X0, [X0 + 0x8]
	0x0242BF30 LDR X2, [X8 + 0x10]
	0x0242BF34 B 0x242BF3C
	0x0242BF38 MOV X0, X1
	0x0242BF3C MOV X1, X2
	0x0242BF40 RET
	0x0242BF44 STR X30, [X31 - 0x30]!
	0x0242BF48 STP X22, X21, [X31 + 0x10]
	0x0242BF4C STP X20, X19, [X31 + 0x20]
	0x0242BF50 ADRP X22, 0x1FAE000
	0x0242BF54 LDRB W8, [X22 + 0x9DB]
	0x0242BF58 MOV X20, X2
	0x0242BF5C MOV X19, X1
	0x0242BF60 MOV X21, X0
	0x0242BF64 TBNZ X8, 0x0, 0x242BF7C
	0x0242BF68 ADRP X0, 0x1CF0000
	0x0242BF6C LDR X0, [X0 + 0x5B0]
	0x0242BF70 BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X2+32]
	004 Move X19, X1
	005 Move X8, [X8+192]
	006 Move X0, [X8+48]
	007 Move W8, [X0+309]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {13}
	012 Call 0x1C5D684
	013 Compare X19, 0
	014 JumpIfEqual {19}
	015 Move X8, [X19]
	016 Move W9, [X0+304]
	017 Move W10, [X8+304]
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move W0, W31
	020 Move X8, [X8+200]
	021 Add X8, X8, X9
	022 NotImplemented "Instruction LDUR not yet implemented."
	023 NotImplemented "Instruction CMP not yet implemented."
	024 NotImplemented "Instruction CSET not yet implemented."
	025 Move X30, [X31+16]
	026 Move X19, [X31+24]
	027 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x0242BF74 MOVZ W8, 0x1
	0x0242BF78 STRB W8, [X22 + 0x9DB]
	0x0242BF7C LDRB W9, [X21]
	0x0242BF80 CMP W9, 0x0
	0x0242BF84 CSET W8, EQ
	0x0242BF88 CMP X19, 0x0
	0x0242BF8C CSET W10, EQ
	0x0242BF90 CBZ X19, 0x242BFE4
	0x0242BF94 CBZ W9, 0x242BFE4
	0x0242BF98 ADRP X8, 0x1CF0000
	0x0242BF9C LDR X8, [X8 + 0x5B0]
	0x0242BFA0 ADD X21, X21, 0x8
	0x0242BFA4 LDR X0, [X8]
	0x0242BFA8 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {19}
	004 Move X1, X31
	005 Call "il2cpp_vm_object_is_inst", X0
	006 Compare X0, 0
	007 JumpIfEqual {19}
	008 Move X8, [X0]
	009 Move X9, [X8+424]
	010 Move X1, [X8+432]
	011 NotImplemented "Instruction BLR not yet implemented."
	012 Compare X0, 0
	013 JumpIfEqual {19}
	014 Move X8, [X0]
	015 Move X2, [X8+344]
	016 Move X1, [X8+352]
	017 Move X30, [X31+16]
	018 CallNoReturn X2
	019 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x0242BFAC CBNZ W8, 0x242BFB4
	0x0242BFB0 BL 0x1C16DFC
	0x0242BFB4 LDR X0, [X20 + 0x20]
	0x0242BFB8 LDRB W8, [X0 + 0x135]
	0x0242BFBC TBNZ X8, 0x0, 0x242BFC4

ISIL:
	001 Move X8, [X1+32]
	002 Move X8, [X8+192]
	003 Move X1, [X8+56]
	004 Move X2, [X1]
	005 CallNoReturn X2

