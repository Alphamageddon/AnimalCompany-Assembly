Type: System.Collections.Generic.List`1/Enumerator

Method: System.Void .ctor(System.Collections.Generic.List`1<T> list)

Disassembly:
	0x02BB0A8C STP V0, V0, [X19 + 0x30]
	0x02BB0A90 STR V0, [X19 + 0x5]
	0x02BB0A94 LDP X30, X19, [X31], #0x10
	0x02BB0A98 RET
	0x02BB0A9C BL 0x1C16F20
	0x02BB0AA0 STR X30, [X31 - 0x10]!
	0x02BB0AA4 STR X1, [X0]
	0x02BB0AA8 STR W31, [X0 + 0x8]
	0x02BB0AAC CBZ X1, 0x2BB0AC4
	0x02BB0AB0 LDR W8, [X1 + 0x1C]

ISIL:
	001 Move [X31-16], X30
	002 Move [X0], X1
	003 Move [X0+8], W31
	004 Compare X1, 0
	005 JumpIfEqual {11}
	006 Move W8, [X1+28]
	007 Move [X0+16], X31
	008 Move [X0+12], W8
	009 Move X30, [X31+16]
	010 Return 
	011 Call 0x1C17F20

Method: System.Void Dispose()

Disassembly:
	0x02BB0AB4 STP X31, X31, [X0 + 0x10]

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x02BB0AB8 STR W8, [X0 + 0xC]
	0x02BB0ABC LDR X30, [X31], #0x10
	0x02BB0AC0 RET
	0x02BB0AC4 BL 0x1C16F20
	0x02BB0AC8 RET
	0x02BB0ACC STP X30, X19, [X31 - 0x10]!
	0x02BB0AD0 LDR X9, [X0]
	0x02BB0AD4 CBZ X9, 0x2BB0B50
	0x02BB0AD8 LDR W8, [X0 + 0xC]
	0x02BB0ADC LDR W10, [X9 + 0x1C]
	0x02BB0AE0 MOV X19, X0
	0x02BB0AE4 CMP W8, W10
	0x02BB0AE8 B.NE 0x2BB0B2C
	0x02BB0AEC LDRSW X8, [X19 + 0x8]
	0x02BB0AF0 LDR W10, [X9 + 0x18]
	0x02BB0AF4 CMP W8, W10
	0x02BB0AF8 B.CS 0x2BB0B2C
	0x02BB0AFC LDR X9, [X9 + 0x10]
	0x02BB0B00 CBZ X9, 0x2BB0B50
	0x02BB0B04 LDR W10, [X9 + 0x18]
	0x02BB0B08 CMP W8, W10
	0x02BB0B0C B.CS 0x2BB0B54
	0x02BB0B10 ADD X9, X9, X8, 0x4, LSL
	0x02BB0B14 LDR V0, [X9 + 0x2]
	0x02BB0B18 ADD W8, W8, 0x1
	0x02BB0B1C STR W8, [X19 + 0x8]
	0x02BB0B20 MOVZ W0, 0x1
	0x02BB0B24 STR V0, [X19 + 0x1]
	0x02BB0B28 B 0x2BB0B48
	0x02BB0B2C LDR X0, [X1 + 0x20]
	0x02BB0B30 LDRB W8, [X0 + 0x135]
	0x02BB0B34 TBNZ X8, 0x0, 0x2BB0B3C
	0x02BB0B38 BL 0x1C5C684
	0x02BB0B3C MOV X0, X19
	0x02BB0B40 BL 0x2BB0B58

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X9, [X0]
	004 Compare X9, 0
	005 JumpIfEqual {37}
	006 Move W8, [X0+12]
	007 Move W10, [X9+28]
	008 Move X19, X0
	009 NotImplemented "Instruction CMP not yet implemented."
	010 NotImplemented "Instruction LDRSW not yet implemented."
	011 Move W10, [X9+24]
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X9, [X9+16]
	014 Compare X9, 0
	015 JumpIfEqual {37}
	016 Move W10, [X9+24]
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Add X9, X9, X8
	019 Move X9, [X9+32]
	020 Add W8, W8, 1
	021 Move [X19+8], W8
	022 Move W0, 1
	023 Move [X19+16], X9
	024 Move X0, [X1+32]
	025 Move W8, [X0+309]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {31}
	030 Call 0x1C5D684
	031 Move X0, X19
	032 Call 0x2BB0B44, X0
	033 Move W0, W31
	034 Move X30, [X31+16]
	035 Move X19, [X31+24]
	036 Return X0
	037 Call 0x1C17F20
	038 Call 0x1C17F28

Method: System.Boolean MoveNextRare()

Disassembly:
	0x02BB0B44 MOV W0, W31
	0x02BB0B48 LDP X30, X19, [X31], #0x10
	0x02BB0B4C RET
	0x02BB0B50 BL 0x1C16F20
	0x02BB0B54 BL 0x1C16F28
	0x02BB0B58 STP X30, X19, [X31 - 0x10]!
	0x02BB0B5C LDR X8, [X0]
	0x02BB0B60 CBZ X8, 0x2BB0BA4
	0x02BB0B64 LDR W9, [X0 + 0xC]
	0x02BB0B68 LDR W10, [X8 + 0x1C]
	0x02BB0B6C MOV X19, X0
	0x02BB0B70 CMP W9, W10
	0x02BB0B74 B.EQ 0x2BB0B88
	0x02BB0B78 MOV X0, X31
	0x02BB0B7C BL 0x339E09C
	0x02BB0B80 LDR X8, [X19]
	0x02BB0B84 CBZ X8, 0x2BB0BA4
	0x02BB0B88 LDR W8, [X8 + 0x18]
	0x02BB0B8C STP X31, X31, [X19 + 0x10]
	0x02BB0B90 MOV W0, W31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Compare X8, 0
	005 JumpIfEqual {23}
	006 Move W9, [X0+12]
	007 Move W10, [X8+28]
	008 Move X19, X0
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X0, X31
	011 Call ThrowHelper.ThrowInvalidOperationException_InvalidOperation_EnumFailedVersion
	012 Move X8, [X19]
	013 Compare X8, 0
	014 JumpIfEqual {23}
	015 Move W8, [X8+24]
	016 Move [X19+16], X31
	017 Move W0, W31
	018 Add W8, W8, 1
	019 Move [X19+8], W8
	020 Move X30, [X31+16]
	021 Move X19, [X31+24]
	022 Return X0
	023 Call 0x1C17F20

Method: T get_Current()

Disassembly:
	0x02BB0B94 ADD W8, W8, 0x1
	0x02BB0B98 STR W8, [X19 + 0x8]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x02BB0B9C LDP X30, X19, [X31], #0x10
	0x02BB0BA0 RET
	0x02BB0BA4 BL 0x1C16F20
	0x02BB0BA8 LDP X8, X1, [X0 + 0x10]
	0x02BB0BAC MOV X0, X8
	0x02BB0BB0 RET
	0x02BB0BB4 SUB X31, X31, 0x30
	0x02BB0BB8 STR X30, [X31 + 0x10]
	0x02BB0BBC STP X20, X19, [X31 + 0x20]
	0x02BB0BC0 LDR W8, [X0 + 0x8]
	0x02BB0BC4 MOV X19, X0
	0x02BB0BC8 MOV X20, X1
	0x02BB0BCC CBZ W8, 0x2BB0BE8
	0x02BB0BD0 LDR X9, [X19]
	0x02BB0BD4 CBZ X9, 0x2BB0C40
	0x02BB0BD8 LDR W9, [X9 + 0x18]
	0x02BB0BDC ADD W9, W9, 0x1
	0x02BB0BE0 CMP W8, W9
	0x02BB0BE4 B.NE 0x2BB0BF0
	0x02BB0BE8 MOV X0, X31
	0x02BB0BEC BL 0x339E0E8
	0x02BB0BF0 LDR X0, [X20 + 0x20]
	0x02BB0BF4 ADD X8, X0, 0x135
	0x02BB0BF8 LDRH W8, [X8]
	0x02BB0BFC TBNZ X8, 0x0, 0x2BB0C10
	0x02BB0C00 BL 0x1C5C684
	0x02BB0C04 LDR X0, [X20 + 0x20]
	0x02BB0C08 ADD X8, X0, 0x135
	0x02BB0C0C LDRH W8, [X8]
	0x02BB0C10 LDP X9, X10, [X19 + 0x10]
	0x02BB0C14 STP X9, X10, [X31]
	0x02BB0C18 TBNZ X8, 0x0, 0x2BB0C20
	0x02BB0C1C BL 0x1C5C684
	0x02BB0C20 LDR X8, [X0 + 0xC0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+8]
	005 Move X19, X0
	006 Move X20, X1
	007 Compare W8, 0
	008 JumpIfEqual {15}
	009 Move X9, [X19]
	010 Compare X9, 0
	011 JumpIfEqual {43}
	012 Move W9, [X9+24]
	013 Add W9, W9, 1
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X0, X31
	016 Call ThrowHelper.ThrowInvalidOperationException_InvalidOperation_EnumOpCantHappen
	017 Move X0, [X20+32]
	018 Add X8, X0, 309
	019 NotImplemented "Instruction LDRH not yet implemented."
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {28}
	024 Call 0x1C5D684
	025 Move X0, [X20+32]
	026 Add X8, X0, 309
	027 NotImplemented "Instruction LDRH not yet implemented."
	028 Move X9, [X19+16]
	029 Move [X31+8], X9
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {35}
	034 Call 0x1C5D684
	035 Move X8, [X0+192]
	036 Add X1, X31, 8
	037 Move X0, [X8+16]
	038 Call 0x1C17E04
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Return X0
	043 Call 0x1C17F20

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x02BB0C24 ADD X1, X31, 0x0
	0x02BB0C28 LDR X0, [X8 + 0x10]
	0x02BB0C2C BL 0x1C16E04
	0x02BB0C30 LDP X20, X19, [X31 + 0x20]
	0x02BB0C34 LDR X30, [X31 + 0x10]
	0x02BB0C38 ADD X31, X31, 0x30
	0x02BB0C3C RET
	0x02BB0C40 BL 0x1C16F20
	0x02BB0C44 STP X30, X19, [X31 - 0x10]!
	0x02BB0C48 LDR X8, [X0]
	0x02BB0C4C CBZ X8, 0x2BB0C7C
	0x02BB0C50 LDR W9, [X0 + 0xC]
	0x02BB0C54 LDR W8, [X8 + 0x1C]
	0x02BB0C58 MOV X19, X0
	0x02BB0C5C CMP W9, W8

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Compare X8, 0
	005 JumpIfEqual {17}
	006 Move W9, [X0+12]
	007 Move W8, [X8+28]
	008 Move X19, X0
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X0, X31
	011 Call ThrowHelper.ThrowInvalidOperationException_InvalidOperation_EnumFailedVersion
	012 Move [X19+8], W31
	013 Move [X19+16], X31
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Return 
	017 Call 0x1C17F20

