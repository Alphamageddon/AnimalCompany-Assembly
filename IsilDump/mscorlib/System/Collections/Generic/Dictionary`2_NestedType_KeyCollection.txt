Type: System.Collections.Generic.Dictionary`2/KeyCollection

Method: System.Void .ctor(System.Collections.Generic.Dictionary`2<TKey, TValue> dictionary)

Disassembly:
	0x02EADEFC LDR X8, [X21 + 0x10]
	0x02EADF00 CBZ X8, 0x2EADFD8
	0x02EADF04 LDR W23, [X8 + 0x20]
	0x02EADF08 CMP W23, 0x1
	0x02EADF0C B.LT 0x2EADF98
	0x02EADF10 LDR X24, [X8 + 0x18]
	0x02EADF14 CBZ X24, 0x2EADFDC
	0x02EADF18 MOV X25, X31
	0x02EADF1C ADD X26, X24, 0x28
	0x02EADF20 LDR W8, [X24 + 0x18]
	0x02EADF24 CMP X25, X8
	0x02EADF28 B.CS 0x2EADFB4
	0x02EADF2C LDUR W8, [X26 - 0x8]
	0x02EADF30 TBNZ X8, 0x1F, 0x2EADF88

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Compare X19, 0
	009 JumpIfNotEqual {13}
	010 Move W0, 1
	011 Move X1, X31
	012 Call ThrowHelper.ThrowArgumentNullException, X0
	013 Move [X20+16], X19
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X30, [X31+32]
	017 Return 

Method: System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<TKey, TValue> GetEnumerator()

Disassembly:
	0x02EADF34 LDR V0, [X26]
	0x02EADF38 STR V0, [X31]
	0x02EADF3C LDR X8, [X20 + 0x20]
	0x02EADF40 LDR X8, [X8 + 0xC0]
	0x02EADF44 LDR X0, [X8 + 0x40]
	0x02EADF48 ADD X1, X31, 0x0
	0x02EADF4C BL 0x1C16E04
	0x02EADF50 CBZ X22, 0x2EADFBC
	0x02EADF54 MOV X21, X0

ISIL:
	001 Move X9, [X0+16]
	002 Move [X8], X31
	003 Move [X8+8], X31
	004 Move [X8+16], X31
	005 Move X10, [X1+32]
	006 Move X0, X8
	007 Move X1, X9
	008 Move X10, [X10+192]
	009 Move X2, [X10+24]
	010 Call 0x2BE7368, X0, X1
	011 Return X0

Method: System.Void CopyTo(TKey[] array, System.Int32 index)

Disassembly:
	0x02EADF58 CBZ X0, 0x2EADF70
	0x02EADF5C LDR X8, [X22]
	0x02EADF60 LDR X1, [X8 + 0x40]
	0x02EADF64 MOV X0, X21
	0x02EADF68 BL 0x1C16E00
	0x02EADF6C CBZ X0, 0x2EADFC0
	0x02EADF70 LDR W8, [X22 + 0x18]
	0x02EADF74 CMP W19, W8
	0x02EADF78 B.CS 0x2EADFB8
	0x02EADF7C ADD X8, X22, W19, 0x3, SXTW
	0x02EADF80 ADD W19, W19, 0x1
	0x02EADF84 STR X21, [X8 + 0x20]
	0x02EADF88 ADD X25, X25, 0x1
	0x02EADF8C CMP X23, X25
	0x02EADF90 ADD X26, X26, 0x58
	0x02EADF94 B.NE 0x2EADF20
	0x02EADF98 LDP X20, X19, [X31 + 0x50]
	0x02EADF9C LDP X22, X21, [X31 + 0x40]
	0x02EADFA0 LDP X24, X23, [X31 + 0x30]
	0x02EADFA4 LDP X26, X25, [X31 + 0x20]
	0x02EADFA8 LDR X30, [X31 + 0x10]
	0x02EADFAC ADD X31, X31, 0x60
	0x02EADFB0 RET
	0x02EADFB4 BL 0x1C16F28
	0x02EADFB8 BL 0x1C16F28
	0x02EADFBC BL 0x1C16F20
	0x02EADFC0 BL 0x1C16F44
	0x02EADFC4 MOV X1, X31
	0x02EADFC8 BL 0x1C16DEC
	0x02EADFCC MOVZ W0, 0x3
	0x02EADFD0 MOV X1, X31
	0x02EADFD4 BL 0x338F3E0
	0x02EADFD8 BL 0x1C16F20
	0x02EADFDC BL 0x1C16F20
	0x02EADFE0 B 0x2EADFEC
	0x02EADFE4 B 0x2EADFEC
	0x02EADFE8 B 0x2EADFEC
	0x02EADFEC MOV X19, X0
	0x02EADFF0 CMP W1, 0x1
	0x02EADFF4 B.NE 0x2EAE058
	0x02EADFF8 MOV X0, X19
	0x02EADFFC BL 0x3EB1AD0
	0x02EAE000 MOV X19, X0
	0x02EAE004 ADRP X0, 0x126E000
	0x02EAE008 LDR X0, [X0 + 0x320]
	0x02EAE00C BL 0x1C16D08
	0x02EAE010 LDR X8, [X19]
	0x02EAE014 LDR X1, [X8]
	0x02EAE018 BL 0x1C17270
	0x02EAE01C TBZ X0, 0x0, 0x2EAE030
	0x02EAE020 BL 0x3EB1AE0
	0x02EAE024 MOV X0, X31
	0x02EAE028 BL 0x339E304
	0x02EAE02C B 0x2EADF98
	0x02EAE030 MOVZ W0, 0x8
	0x02EAE034 BL 0x3EB1AF0
	0x02EAE038 LDR X8, [X19]
	0x02EAE03C STR X8, [X0]
	0x02EAE040 ADRP X1, 0x1006000
	0x02EAE044 ADD X1, X1, 0xE58
	0x02EAE048 MOV X2, X31
	0x02EAE04C BL 0x3EB1B00
	0x02EAE050 MOV X19, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W19, W2
	007 Compare X1, 0
	008 JumpIfEqual {66}
	009 Move X22, X3
	010 Move X20, X1
	011 Move X21, X0
	012 Move TEMP, X19
	013 And TEMP, TEMP, -2147483648
	014 Compare TEMP, -2147483648
	015 JumpIfEqual {18}
	016 Move W8, [X20+24]
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move X0, X31
	019 Call ThrowHelper.ThrowIndexArgumentOutOfRange_NeedNonNegNumException
	020 Move X0, [X21+16]
	021 Compare X0, 0
	022 JumpIfEqual {74}
	023 Move X8, [X22+32]
	024 Move X8, [X8+192]
	025 Move X1, [X8+40]
	026 Call 0x29BB0D0, X0
	027 Move W8, [X20+24]
	028 Subtract W8, W8, W19
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W0, 5
	031 Move X1, X31
	032 Call ThrowHelper.ThrowArgumentException, X0
	033 Move X9, [X21+16]
	034 Compare X9, 0
	035 JumpIfEqual {74}
	036 Move W8, [X9+32]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X9, [X9+24]
	039 Compare X9, 0
	040 JumpIfEqual {74}
	041 Move X10, X31
	042 Add X11, X9, 40
	043 Move W12, [X9+24]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 Move TEMP, X12
	047 And TEMP, TEMP, -2147483648
	048 Compare TEMP, -2147483648
	049 JumpIfEqual {56}
	050 Move W12, [X20+24]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X12, [X11]
	053 Add X13, X20, W19
	054 Add W19, W19, 1
	055 Move [X13+32], X12
	056 Add X10, X10, 1
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Add X11, X11, 24
	059 Move X20, [X31+32]
	060 Move X19, [X31+40]
	061 Move X22, [X31+16]
	062 Move X21, [X31+24]
	063 Move X30, [X31+48]
	064 Return 
	065 Call 0x1C17F28
	066 Move W0, 3
	067 Call ThrowHelper.ThrowArgumentNullException, X0
	068 Move TEMP, X19
	069 And TEMP, TEMP, -2147483648
	070 Compare TEMP, -2147483648
	071 JumpIfNotEqual {74}
	072 Move X0, X31
	073 Call ThrowHelper.ThrowIndexArgumentOutOfRange_NeedNonNegNumException
	074 Call 0x1C17F20

Method: System.Int32 get_Count()

Disassembly:
	0x02EAE054 BL 0x3EB1AE0
	0x02EAE058 MOV X0, X19
	0x02EAE05C BL 0x1D2C690
	0x02EAE060 BL 0x1990590
	0x02EAE064 MOV W0, W31
	0x02EAE068 RET
	0x02EAE06C STR X30, [X31 - 0x20]!
	0x02EAE070 STP X20, X19, [X31 + 0x10]
	0x02EAE074 ADRP X20, 0x152D000

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {11}
	005 Move X8, [X1+32]
	006 Move X8, [X8+192]
	007 Move X1, [X8+40]
	008 Move X30, [X31+16]
	009 Call 0x29BB0D0, X0
	010 Return X0
	011 Call 0x1C17F20

Method: System.Boolean System.Collections.Generic.ICollection<TKey>.get_IsReadOnly()

Disassembly:
	0x02EAE078 LDRB W8, [X20 + 0xA69]
	0x02EAE07C MOV X19, X0

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Void System.Collections.Generic.ICollection<TKey>.Add(TKey item)

Disassembly:
	0x02EAE080 TBNZ X8, 0x0, 0x2EAE098
	0x02EAE084 ADRP X0, 0x124C000
	0x02EAE088 LDR X0, [X0 + 0x2F0]

ISIL:
	001 Move W0, 19
	002 Move X1, X31
	003 Call ThrowHelper.ThrowNotSupportedException, X0
	004 Return 

Method: System.Void System.Collections.Generic.ICollection<TKey>.Clear()

Disassembly:
	0x02EAE08C BL 0x1C16CF4
	0x02EAE090 MOVZ W8, 0x1
	0x02EAE094 STRB W8, [X20 + 0xA69]

ISIL:
	001 Move W0, 19
	002 Move X1, X31
	003 Call ThrowHelper.ThrowNotSupportedException, X0
	004 Return 

Method: System.Boolean System.Collections.Generic.ICollection<TKey>.Contains(TKey item)

Disassembly:
	0x02EAE098 LDR X19, [X19 + 0x10]
	0x02EAE09C CBZ X19, 0x2EAE10C
	0x02EAE0A0 ADRP X10, 0x124C000
	0x02EAE0A4 LDR X8, [X19]
	0x02EAE0A8 LDR X10, [X10 + 0x2F0]
	0x02EAE0AC LDRH W9, [X8 + 0x12E]
	0x02EAE0B0 LDR X1, [X10]
	0x02EAE0B4 CBZ X9, 0x2EAE0D8
	0x02EAE0B8 LDR X10, [X8 + 0xB0]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {11}
	005 Move X8, [X2+32]
	006 Move X8, [X8+192]
	007 Move X2, [X8+72]
	008 Move X30, [X31+16]
	009 Call 0x29BB514, X0, X1
	010 Return X0
	011 Call 0x1C17F20

Method: System.Boolean System.Collections.Generic.ICollection<TKey>.Remove(TKey item)

Disassembly:
	0x02EAE0BC ADD X10, X10, 0x8
	0x02EAE0C0 LDUR X11, [X10 - 0x8]
	0x02EAE0C4 CMP X11, X1
	0x02EAE0C8 B.EQ 0x2EAE0E8
	0x02EAE0CC SUBS X9, X9, 0x1
	0x02EAE0D0 ADD X10, X10, 0x10
	0x02EAE0D4 B.NE 0x2EAE0C0

ISIL:
	001 Move [X31-16], X30
	002 Move W0, 19
	003 Move X1, X31
	004 Call ThrowHelper.ThrowNotSupportedException, X0
	005 Move W0, W31
	006 Move X30, [X31+16]
	007 Return X0

Method: System.Collections.Generic.IEnumerator`1<TKey> System.Collections.Generic.IEnumerable<TKey>.GetEnumerator()

Disassembly:
	0x02EAE0D8 MOVZ W2, 0x2
	0x02EAE0DC MOV X0, X19
	0x02EAE0E0 BL 0x1C5C788
	0x02EAE0E4 B 0x2EAE0F8
	0x02EAE0E8 LDR W9, [X10]
	0x02EAE0EC ADD W9, W9, 0x2
	0x02EAE0F0 ADD X8, X8, W9, 0x4, SXTW
	0x02EAE0F4 ADD X0, X8, 0x138
	0x02EAE0F8 LDP X2, X1, [X0]
	0x02EAE0FC MOV X0, X19
	0x02EAE100 LDP X20, X19, [X31 + 0x10]
	0x02EAE104 LDR X30, [X31], #0x20
	0x02EAE108 BR X2
	0x02EAE10C BL 0x1C16F20
	0x02EAE110 STR X30, [X31 - 0x20]!
	0x02EAE114 STP X20, X19, [X31 + 0x10]
	0x02EAE118 MOV X19, X1
	0x02EAE11C MOV X1, X31
	0x02EAE120 MOV X20, X0
	0x02EAE124 BL 0x33BDD8C
	0x02EAE128 CBNZ X19, 0x2EAE138
	0x02EAE12C MOVZ W0, 0x1
	0x02EAE130 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, X1
	005 Move X1, [X0+16]
	006 Move [X31+24], X31
	007 Move [X31+32], X31
	008 Move [X31+40], X31
	009 Move X8, [X19+32]
	010 Add X0, X31, 24
	011 Move X8, [X8+192]
	012 Move X2, [X8+24]
	013 Call 0x2BE7368, X0, X1
	014 NotImplemented "Instruction LDUR not yet implemented."
	015 Move X8, [X31+40]
	016 Add X1, X31, 0
	017 Move [X31], V0
	018 Move [X31+16], X8
	019 Move X8, [X19+32]
	020 Move X8, [X8+192]
	021 Move X0, [X8+16]
	022 Call 0x1C17E04
	023 Move X30, [X31+48]
	024 Move X19, [X31+56]
	025 Add X31, X31, 64
	026 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x02EAE134 BL 0x338F3E0
	0x02EAE138 STR X19, [X20 + 0x10]
	0x02EAE13C LDP X20, X19, [X31 + 0x10]
	0x02EAE140 LDR X30, [X31], #0x20
	0x02EAE144 RET
	0x02EAE148 MOVI V0.2D, 0x0
	0x02EAE14C LDR X9, [X0 + 0x10]
	0x02EAE150 STP V0, V0, [X8]
	0x02EAE154 LDR X10, [X1 + 0x20]
	0x02EAE158 MOV X0, X8
	0x02EAE15C MOV X1, X9
	0x02EAE160 LDR X10, [X10 + 0xC0]
	0x02EAE164 LDR X2, [X10 + 0x18]
	0x02EAE168 B 0x2BE7D3C
	0x02EAE16C STR X30, [X31 - 0x30]!
	0x02EAE170 STP X22, X21, [X31 + 0x10]
	0x02EAE174 STP X20, X19, [X31 + 0x20]
	0x02EAE178 MOV W19, W2
	0x02EAE17C CBZ X1, 0x2EAE250
	0x02EAE180 MOV X22, X3
	0x02EAE184 MOV X20, X1
	0x02EAE188 MOV X21, X0
	0x02EAE18C TBNZ X19, 0x1F, 0x2EAE19C

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, X1
	005 Move X1, [X0+16]
	006 Move [X31+24], X31
	007 Move [X31+32], X31
	008 Move [X31+40], X31
	009 Move X8, [X19+32]
	010 Add X0, X31, 24
	011 Move X8, [X8+192]
	012 Move X2, [X8+24]
	013 Call 0x2BE7368, X0, X1
	014 NotImplemented "Instruction LDUR not yet implemented."
	015 Move X8, [X31+40]
	016 Add X1, X31, 0
	017 Move [X31], V0
	018 Move [X31+16], X8
	019 Move X8, [X19+32]
	020 Move X8, [X8+192]
	021 Move X0, [X8+16]
	022 Call 0x1C17E04
	023 Move X30, [X31+48]
	024 Move X19, [X31+56]
	025 Add X31, X31, 64
	026 Return X0

Method: System.Void System.Collections.ICollection.CopyTo(System.Array array, System.Int32 index)

Disassembly:
	0x02EAE190 LDR W8, [X20 + 0x18]
	0x02EAE194 CMP W8, W19
	0x02EAE198 B.GE 0x2EAE1A4
	0x02EAE19C MOV X0, X31
	0x02EAE1A0 BL 0x339E2CC
	0x02EAE1A4 LDR X0, [X21 + 0x10]
	0x02EAE1A8 CBZ X0, 0x2EAE264
	0x02EAE1AC LDR X8, [X22 + 0x20]
	0x02EAE1B0 LDR X8, [X8 + 0xC0]
	0x02EAE1B4 LDR X1, [X8 + 0x28]
	0x02EAE1B8 BL 0x29C373C
	0x02EAE1BC LDR W8, [X20 + 0x18]
	0x02EAE1C0 SUB W8, W8, W19
	0x02EAE1C4 CMP W8, W0
	0x02EAE1C8 B.GE 0x2EAE1D8
	0x02EAE1CC MOVZ W0, 0x5
	0x02EAE1D0 MOV X1, X31
	0x02EAE1D4 BL 0x339DA4C
	0x02EAE1D8 LDR X9, [X21 + 0x10]
	0x02EAE1DC CBZ X9, 0x2EAE264
	0x02EAE1E0 LDR W8, [X9 + 0x20]
	0x02EAE1E4 CMP W8, 0x1
	0x02EAE1E8 B.LT 0x2EAE23C
	0x02EAE1EC LDR X9, [X9 + 0x18]
	0x02EAE1F0 CBZ X9, 0x2EAE264
	0x02EAE1F4 MOV X10, X31
	0x02EAE1F8 ADD X11, X9, 0x28
	0x02EAE1FC LDR W12, [X9 + 0x18]
	0x02EAE200 CMP X10, X12
	0x02EAE204 B.CS 0x2EAE24C
	0x02EAE208 LDUR W12, [X11 - 0x8]
	0x02EAE20C TBNZ X12, 0x1F, 0x2EAE22C
	0x02EAE210 LDR W12, [X20 + 0x18]
	0x02EAE214 CMP W19, W12
	0x02EAE218 B.CS 0x2EAE24C
	0x02EAE21C LDR V0, [X11]
	0x02EAE220 ADD X12, X20, W19, 0x4, SXTW
	0x02EAE224 ADD W19, W19, 0x1
	0x02EAE228 STR V0, [X12 + 0x2]
	0x02EAE22C ADD X10, X10, 0x1
	0x02EAE230 CMP X8, X10
	0x02EAE234 ADD X11, X11, 0x20
	0x02EAE238 B.NE 0x2EAE1FC
	0x02EAE23C LDP X20, X19, [X31 + 0x20]
	0x02EAE240 LDP X22, X21, [X31 + 0x10]
	0x02EAE244 LDR X30, [X31], #0x30
	0x02EAE248 RET
	0x02EAE24C BL 0x1C16F28
	0x02EAE250 MOVZ W0, 0x3
	0x02EAE254 BL 0x338F3E0
	0x02EAE258 TBZ X19, 0x1F, 0x2EAE264
	0x02EAE25C MOV X0, X31
	0x02EAE260 BL 0x339E2CC
	0x02EAE264 BL 0x1C16F20
	0x02EAE268 STR X30, [X31 - 0x10]!
	0x02EAE26C LDR X0, [X0 + 0x10]
	0x02EAE270 CBZ X0, 0x2EAE288
	0x02EAE274 LDR X8, [X1 + 0x20]
	0x02EAE278 LDR X8, [X8 + 0xC0]
	0x02EAE27C LDR X1, [X8 + 0x28]
	0x02EAE280 LDR X30, [X31], #0x10
	0x02EAE284 B 0x29C373C
	0x02EAE288 BL 0x1C16F20
	0x02EAE28C MOVZ W0, 0x1
	0x02EAE290 RET
	0x02EAE294 MOVZ W0, 0x13
	0x02EAE298 MOV X1, X31
	0x02EAE29C B 0x339E04C
	0x02EAE2A0 MOVZ W0, 0x13
	0x02EAE2A4 MOV X1, X31
	0x02EAE2A8 B 0x339E04C
	0x02EAE2AC STR X30, [X31 - 0x10]!
	0x02EAE2B0 LDR X0, [X0 + 0x10]
	0x02EAE2B4 CBZ X0, 0x2EAE2CC
	0x02EAE2B8 LDR X8, [X3 + 0x20]
	0x02EAE2BC LDR X8, [X8 + 0xC0]
	0x02EAE2C0 LDR X3, [X8 + 0x48]
	0x02EAE2C4 LDR X30, [X31], #0x10
	0x02EAE2C8 B 0x29C3B84
	0x02EAE2CC BL 0x1C16F20
	0x02EAE2D0 STR X30, [X31 - 0x10]!
	0x02EAE2D4 MOVZ W0, 0x13
	0x02EAE2D8 MOV X1, X31
	0x02EAE2DC BL 0x339E04C
	0x02EAE2E0 MOV W0, W31
	0x02EAE2E4 LDR X30, [X31], #0x10
	0x02EAE2E8 RET
	0x02EAE2EC SUB X31, X31, 0x50
	0x02EAE2F0 STP X30, X19, [X31 + 0x40]
	0x02EAE2F4 MOVI V0.2D, 0x0
	0x02EAE2F8 MOV X19, X1
	0x02EAE2FC LDR X1, [X0 + 0x10]
	0x02EAE300 STP V0, V0, [X31 + 0x20]
	0x02EAE304 LDR X8, [X19 + 0x20]
	0x02EAE308 ADD X0, X31, 0x20
	0x02EAE30C LDR X8, [X8 + 0xC0]
	0x02EAE310 LDR X2, [X8 + 0x18]
	0x02EAE314 BL 0x2BE7D3C
	0x02EAE318 LDP V0, V1, [X31 + 0x20]
	0x02EAE31C ADD X1, X31, 0x0
	0x02EAE320 STP V0, V1, [X31]
	0x02EAE324 LDR X8, [X19 + 0x20]
	0x02EAE328 LDR X8, [X8 + 0xC0]
	0x02EAE32C LDR X0, [X8 + 0x10]
	0x02EAE330 BL 0x1C16E04
	0x02EAE334 LDP X30, X19, [X31 + 0x40]
	0x02EAE338 ADD X31, X31, 0x50
	0x02EAE33C RET
	0x02EAE340 SUB X31, X31, 0x50
	0x02EAE344 STP X30, X19, [X31 + 0x40]
	0x02EAE348 MOVI V0.2D, 0x0
	0x02EAE34C MOV X19, X1
	0x02EAE350 LDR X1, [X0 + 0x10]
	0x02EAE354 STP V0, V0, [X31 + 0x20]
	0x02EAE358 LDR X8, [X19 + 0x20]
	0x02EAE35C ADD X0, X31, 0x20
	0x02EAE360 LDR X8, [X8 + 0xC0]
	0x02EAE364 LDR X2, [X8 + 0x18]
	0x02EAE368 BL 0x2BE7D3C
	0x02EAE36C LDP V0, V1, [X31 + 0x20]
	0x02EAE370 ADD X1, X31, 0x0
	0x02EAE374 STP V0, V1, [X31]
	0x02EAE378 LDR X8, [X19 + 0x20]
	0x02EAE37C LDR X8, [X8 + 0xC0]
	0x02EAE380 LDR X0, [X8 + 0x10]
	0x02EAE384 BL 0x1C16E04
	0x02EAE388 LDP X30, X19, [X31 + 0x40]
	0x02EAE38C ADD X31, X31, 0x50
	0x02EAE390 RET
	0x02EAE394 SUB X31, X31, 0x60
	0x02EAE398 STR X30, [X31 + 0x10]
	0x02EAE39C STP X26, X25, [X31 + 0x20]
	0x02EAE3A0 STP X24, X23, [X31 + 0x30]
	0x02EAE3A4 STP X22, X21, [X31 + 0x40]
	0x02EAE3A8 STP X20, X19, [X31 + 0x50]
	0x02EAE3AC ADRP X23, 0x152D000
	0x02EAE3B0 LDRB W8, [X23 + 0xA6A]
	0x02EAE3B4 MOV X20, X3
	0x02EAE3B8 MOV W19, W2
	0x02EAE3BC MOV X22, X1
	0x02EAE3C0 MOV X21, X0
	0x02EAE3C4 TBNZ X8, 0x0, 0x2EAE3DC
	0x02EAE3C8 ADRP X0, 0x1245000
	0x02EAE3CC LDR X0, [X0 + 0x9D0]
	0x02EAE3D0 BL 0x1C16CF4
	0x02EAE3D4 MOVZ W8, 0x1
	0x02EAE3D8 STRB W8, [X23 + 0xA6A]
	0x02EAE3DC CBZ X22, 0x2EAE5D0
	0x02EAE3E0 MOV X0, X22
	0x02EAE3E4 MOV X1, X31
	0x02EAE3E8 BL 0x339FCE4
	0x02EAE3EC CMP W0, 0x1
	0x02EAE3F0 B.EQ 0x2EAE400
	0x02EAE3F4 MOVZ W0, 0x7
	0x02EAE3F8 MOV X1, X31
	0x02EAE3FC BL 0x339DA4C
	0x02EAE400 MOV X0, X22
	0x02EAE404 MOV W1, W31
	0x02EAE408 MOV X2, X31
	0x02EAE40C BL 0x339FA30
	0x02EAE410 CBZ W0, 0x2EAE420
	0x02EAE414 MOVZ W0, 0x6
	0x02EAE418 MOV X1, X31
	0x02EAE41C BL 0x339DA4C
	0x02EAE420 MOV X0, X22
	0x02EAE424 MOV X1, X31
	0x02EAE428 BL 0x3395B7C
	0x02EAE42C CMP W0, W19
	0x02EAE430 B.CS 0x2EAE43C
	0x02EAE434 MOV X0, X31
	0x02EAE438 BL 0x339E2CC
	0x02EAE43C MOV X0, X22
	0x02EAE440 MOV X1, X31
	0x02EAE444 BL 0x3395B7C
	0x02EAE448 LDR X8, [X21 + 0x10]
	0x02EAE44C CBZ X8, 0x2EAE5DC
	0x02EAE450 LDR X9, [X20 + 0x20]
	0x02EAE454 MOV W23, W0

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X23, 0x152E000
	011 Move W8, [X23+2660]
	012 Move X20, X3
	013 Move W19, W2
	014 Move X22, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x1246000
	021 Move X0, [X0+2512]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+2660], W8
	025 Compare X22, 0
	026 JumpIfEqual {166}
	027 Move X0, X22
	028 Move X1, X31
	029 Call Array.get_Rank, X0
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move W0, 7
	032 Move X1, X31
	033 Call ThrowHelper.ThrowArgumentException, X0
	034 Move X0, X22
	035 Move W1, W31
	036 Move X2, X31
	037 Call Array.GetLowerBound, X0, X1
	038 Compare W0, 0
	039 JumpIfEqual {43}
	040 Move W0, 6
	041 Move X1, X31
	042 Call ThrowHelper.ThrowArgumentException, X0
	043 Move X0, X22
	044 Move X1, X31
	045 Call Array.get_Length, X0
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X0, X31
	048 Call ThrowHelper.ThrowIndexArgumentOutOfRange_NeedNonNegNumException
	049 Move X0, X22
	050 Move X1, X31
	051 Call Array.get_Length, X0
	052 Move X8, [X21+16]
	053 Compare X8, 0
	054 JumpIfEqual {169}
	055 Move X9, [X20+32]
	056 Move W23, W0
	057 Move X0, X8
	058 Move X9, [X9+192]
	059 Move X1, [X9+40]
	060 Call 0x29BB0D0, X0
	061 Subtract W8, W23, W19
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move W0, 5
	064 Move X1, X31
	065 Call ThrowHelper.ThrowArgumentException, X0
	066 Move X8, [X20+32]
	067 Move X8, [X8+192]
	068 Move X1, [X8+32]
	069 Move W8, [X1+309]
	070 Move TEMP, X8
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfEqual {77}
	074 Move X0, X1
	075 Call 0x1C5D684
	076 Move X1, X0
	077 Move X0, X22
	078 Call 0x1C17E00
	079 Compare X0, 0
	080 JumpIfEqual {98}
	081 Move X8, [X20+32]
	082 Move X1, X0
	083 Move X0, X21
	084 Move W2, W19
	085 Move X8, [X8+192]
	086 Move X20, [X31+64]
	087 Move X19, [X31+72]
	088 Move X22, [X31+48]
	089 Move X21, [X31+56]
	090 Move X24, [X31+32]
	091 Move X23, [X31+40]
	092 Move X3, [X8+88]
	093 Move X26, [X31+16]
	094 Move X25, [X31+24]
	095 Move X30, [X31+80]
	096 Call 0x2EADF58, X0, X1, X2
	097 Return 
	098 Move X8, 0x1246000
	099 Move X8, [X8+2512]
	100 Move X0, X22
	101 Move X1, [X8]
	102 Call 0x1C17E00
	103 Move X22, X0
	104 Compare X0, 0
	105 JumpIfNotEqual {107}
	106 Call ThrowHelper.ThrowArgumentException_Argument_InvalidArrayType
	107 Move X8, [X21+16]
	108 Compare X8, 0
	109 JumpIfEqual {169}
	110 Move W23, [X8+32]
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move X24, [X8+24]
	113 Compare X24, 0
	114 JumpIfEqual {170}
	115 Move X25, X31
	116 Add X26, X24, 40
	117 Move W8, [X24+24]
	118 NotImplemented "Instruction CMP not yet implemented."
	119 NotImplemented "Instruction LDUR not yet implemented."
	120 Move TEMP, X8
	121 And TEMP, TEMP, -2147483648
	122 Compare TEMP, -2147483648
	123 JumpIfEqual {147}
	124 Move X8, [X26]
	125 Move [X31+8], X8
	126 Move X8, [X20+32]
	127 Move X8, [X8+192]
	128 Move X0, [X8+64]
	129 Add X1, X31, 8
	130 Call 0x1C17E04
	131 Compare X22, 0
	132 JumpIfEqual {162}
	133 Move X21, X0
	134 Compare X0, 0
	135 JumpIfEqual {142}
	136 Move X8, [X22]
	137 Move X1, [X8+64]
	138 Move X0, X21
	139 Call 0x1C17E00
	140 Compare X0, 0
	141 JumpIfEqual {163}
	142 Move W8, [X22+24]
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Add X8, X22, W19
	145 Add W19, W19, 1
	146 Move [X8+32], X21
	147 Add X25, X25, 1
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Add X26, X26, 24
	150 Move X20, [X31+64]
	151 Move X19, [X31+72]
	152 Move X22, [X31+48]
	153 Move X21, [X31+56]
	154 Move X24, [X31+32]
	155 Move X23, [X31+40]
	156 Move X26, [X31+16]
	157 Move X25, [X31+24]
	158 Move X30, [X31+80]
	159 Return 
	160 Call 0x1C17F28
	161 Call 0x1C17F28
	162 Call 0x1C17F20
	163 Call 0x1C17F44
	164 Move X1, X31
	165 Call 0x1C17DEC
	166 Move W0, 3
	167 Move X1, X31
	168 Call ThrowHelper.ThrowArgumentNullException, X0
	169 Call 0x1C17F20
	170 Call 0x1C17F20
	171 Move X19, X0
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move X0, X19
	174 Call 0x3EB2AD0
	175 Move X19, X0
	176 Move X0, 0x126F000
	177 Move X0, [X0+800]
	178 Call 0x1C17D08
	179 Move X8, [X19]
	180 Move X1, [X8]
	181 Call 0x1C18270
	182 Move TEMP, X0
	183 And TEMP, TEMP, 1
	184 Compare TEMP, 1
	185 JumpIfNotEqual {189}
	186 Call 0x3EB2AE0
	187 Move X0, X31
	188 Call ThrowHelper.ThrowArgumentException_Argument_InvalidArrayType
	189 Move W0, 8
	190 Call 0x3EB2AF0
	191 Move X8, [X19]
	192 Move [X0], X8
	193 Move X1, 0x1007000
	194 Add X1, X1, 3672
	195 Move X2, X31
	196 Call 0x3EB2B00
	197 Move X19, X0
	198 Call 0x3EB2AE0
	199 Move X0, X19
	200 Call 0x1D2D690
	201 Call 0x1991590

Method: System.Boolean System.Collections.ICollection.get_IsSynchronized()

Disassembly:
	0x02EAE458 MOV X0, X8
	0x02EAE45C LDR X9, [X9 + 0xC0]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Object System.Collections.ICollection.get_SyncRoot()

Disassembly:
	0x02EAE460 LDR X1, [X9 + 0x28]
	0x02EAE464 BL 0x29C373C
	0x02EAE468 SUB W8, W23, W19
	0x02EAE46C CMP W8, W0
	0x02EAE470 B.GE 0x2EAE480
	0x02EAE474 MOVZ W0, 0x5
	0x02EAE478 MOV X1, X31
	0x02EAE47C BL 0x339DA4C
	0x02EAE480 LDR X8, [X20 + 0x20]
	0x02EAE484 LDR X8, [X8 + 0xC0]
	0x02EAE488 LDR X1, [X8 + 0x20]
	0x02EAE48C LDRB W8, [X1 + 0x135]
	0x02EAE490 TBNZ X8, 0x0, 0x2EAE4A0
	0x02EAE494 MOV X0, X1
	0x02EAE498 BL 0x1C5C684
	0x02EAE49C MOV X1, X0
	0x02EAE4A0 MOV X0, X22
	0x02EAE4A4 BL 0x1C16E00
	0x02EAE4A8 CBZ X0, 0x2EAE4E0
	0x02EAE4AC LDR X8, [X20 + 0x20]
	0x02EAE4B0 MOV X1, X0
	0x02EAE4B4 MOV X0, X21
	0x02EAE4B8 MOV W2, W19
	0x02EAE4BC LDR X8, [X8 + 0xC0]
	0x02EAE4C0 LDP X20, X19, [X31 + 0x50]
	0x02EAE4C4 LDP X22, X21, [X31 + 0x40]
	0x02EAE4C8 LDP X24, X23, [X31 + 0x30]
	0x02EAE4CC LDR X3, [X8 + 0x58]
	0x02EAE4D0 LDP X26, X25, [X31 + 0x20]
	0x02EAE4D4 LDR X30, [X31 + 0x10]
	0x02EAE4D8 ADD X31, X31, 0x60
	0x02EAE4DC B 0x2EAE16C
	0x02EAE4E0 ADRP X8, 0x1245000
	0x02EAE4E4 LDR X8, [X8 + 0x9D0]
	0x02EAE4E8 MOV X0, X22
	0x02EAE4EC LDR X1, [X8]
	0x02EAE4F0 BL 0x1C16E00
	0x02EAE4F4 MOV X22, X0
	0x02EAE4F8 CBNZ X0, 0x2EAE500
	0x02EAE4FC BL 0x339E304
	0x02EAE500 LDR X8, [X21 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x152E000
	005 Move W8, [X20+2661]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x124D000
	012 Move X0, [X0+752]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2661], W8
	016 Move X19, [X19+16]
	017 Compare X19, 0
	018 JumpIfEqual {46}
	019 Move X10, 0x124D000
	020 Move X8, [X19]
	021 Move X10, [X10+752]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Move X1, [X10]
	024 Compare X9, 0
	025 JumpIfEqual {32}
	026 Move X10, [X8+176]
	027 Add X10, X10, 8
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Subtract X9, X9, 1
	031 Add X10, X10, 16
	032 Move W2, 2
	033 Move X0, X19
	034 Call 0x1C5D788
	035 Move W9, [X10]
	036 Add W9, W9, 2
	037 Add X8, X8, W9
	038 Add X0, X8, 312
	039 Move X2, [X0]
	040 Move X1, [X0+8]
	041 Move X0, X19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 CallNoReturn X2
	046 Call 0x1C17F20

