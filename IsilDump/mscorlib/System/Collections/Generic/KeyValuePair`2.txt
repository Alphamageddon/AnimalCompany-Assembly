Type: System.Collections.Generic.KeyValuePair`2

Method: System.Void .ctor(TKey key, TValue value)

Disassembly:
	0x02EDDDAC STR S0, [X31 + 0xC]
	0x02EDDDB0 TBNZ X9, 0x0, 0x2EDDDC0
	0x02EDDDB4 MOV X0, X8
	0x02EDDDB8 BL 0x1C5C684

ISIL:
	001 And W8, W2, 1
	002 Move [X0], X1
	003 Move [X0+8], W8
	004 Return 

Method: TKey get_Key()

Disassembly:
	0x02EDDDBC MOV X8, X0
	0x02EDDDC0 LDR X8, [X8 + 0xC0]

ISIL:
	001 Move X0, [X0]
	002 Return X0

Method: TValue get_Value()

Disassembly:
	0x02EDDDC4 ADD X1, X31, 0xC
	0x02EDDDC8 LDR X0, [X8 + 0x10]

ISIL:
	001 Move W0, [X0+8]
	002 Return X0

Method: System.String ToString()

Disassembly:
	0x02EDDDCC BL 0x1C16E04
	0x02EDDDD0 MOV X1, X0
	0x02EDDDD4 MOV X0, X21
	0x02EDDDD8 MOV X2, X31
	0x02EDDDDC BL 0x335DC34
	0x02EDDDE0 LDP X20, X19, [X31 + 0x30]
	0x02EDDDE4 LDP X30, X21, [X31 + 0x20]
	0x02EDDDE8 ADD X31, X31, 0x40
	0x02EDDDEC RET
	0x02EDDDF0 STR X30, [X31 - 0x30]!
	0x02EDDDF4 STP X22, X21, [X31 + 0x10]
	0x02EDDDF8 STP X20, X19, [X31 + 0x20]
	0x02EDDDFC LDR X8, [X3 + 0x20]
	0x02EDDE00 MOV X21, X3
	0x02EDDE04 MOV X19, X2
	0x02EDDE08 MOV X22, X1
	0x02EDDE0C LDRB W9, [X8 + 0x135]
	0x02EDDE10 MOV X20, X0
	0x02EDDE14 TBNZ X9, 0x0, 0x2EDDE20
	0x02EDDE18 MOV X0, X8
	0x02EDDE1C BL 0x1C5C684
	0x02EDDE20 LDR V0, [X20]
	0x02EDDE24 STR V0, [X22]
	0x02EDDE28 LDR X0, [X21 + 0x20]
	0x02EDDE2C LDRB W8, [X0 + 0x135]
	0x02EDDE30 TBNZ X8, 0x0, 0x2EDDE38
	0x02EDDE34 BL 0x1C5C684
	0x02EDDE38 LDR V0, [X20 + 0x10]
	0x02EDDE3C LDP X22, X21, [X31 + 0x10]
	0x02EDDE40 STR S0, [X19]
	0x02EDDE44 LDP X20, X19, [X31 + 0x20]
	0x02EDDE48 LDR X30, [X31], #0x30
	0x02EDDE4C RET
	0x02EDDE50 STP X1, X2, [X0]
	0x02EDDE54 STR X3, [X0 + 0x10]
	0x02EDDE58 RET
	0x02EDDE5C LDP X8, X1, [X0]
	0x02EDDE60 MOV X0, X8
	0x02EDDE64 RET
	0x02EDDE68 LDR X0, [X0 + 0x10]
	0x02EDDE6C RET
	0x02EDDE70 SUB X31, X31, 0x30
	0x02EDDE74 STR X30, [X31 + 0x10]
	0x02EDDE78 STP X20, X19, [X31 + 0x20]
	0x02EDDE7C LDR X8, [X1 + 0x20]
	0x02EDDE80 MOV X20, X1
	0x02EDDE84 MOV X19, X0
	0x02EDDE88 ADD X9, X8, 0x135
	0x02EDDE8C LDRH W9, [X9]
	0x02EDDE90 TBNZ X9, 0x0, 0x2EDDEA8
	0x02EDDE94 MOV X0, X8
	0x02EDDE98 BL 0x1C5C684

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X1+32]
	007 Move X20, X1
	008 Move X19, X0
	009 Add X9, X8, 309
	010 NotImplemented "Instruction LDRH not yet implemented."
	011 Move TEMP, X9
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, X8
	016 Call 0x1C5D684
	017 Move X8, [X20+32]
	018 Add X9, X8, 309
	019 NotImplemented "Instruction LDRH not yet implemented."
	020 Move X10, [X19]
	021 Move [X31+8], X10
	022 Move TEMP, X9
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {29}
	026 Move X0, X8
	027 Call 0x1C5D684
	028 Move X8, X0
	029 Move X8, [X8+192]
	030 Add X1, X31, 8
	031 Move X0, [X8]
	032 Call 0x1C17E04
	033 Move X8, [X20+32]
	034 Move X21, X0
	035 Add X9, X8, 309
	036 NotImplemented "Instruction LDRH not yet implemented."
	037 Move TEMP, X9
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {46}
	041 Move X0, X8
	042 Call 0x1C5D684
	043 Move X8, [X20+32]
	044 Add X9, X8, 309
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 Move W10, [X19+8]
	047 Move [X31+4], W10
	048 Move TEMP, X9
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {55}
	052 Move X0, X8
	053 Call 0x1C5D684
	054 Move X8, X0
	055 Move X8, [X8+192]
	056 Add X1, X31, 4
	057 Move X0, [X8+16]
	058 Call 0x1C17E04
	059 Move X1, X0
	060 Move X0, X21
	061 Move X2, X31
	062 Call KeyValuePair.PairToString, X0, X1
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X30, [X31+16]
	066 Move X21, [X31+24]
	067 Add X31, X31, 48
	068 Return X0

Method: System.Void Deconstruct(out TKey key, out TValue value)

Disassembly:
	0x02EDDE9C LDR X8, [X20 + 0x20]
	0x02EDDEA0 ADD X9, X8, 0x135
	0x02EDDEA4 LDRH W9, [X9]
	0x02EDDEA8 LDP X10, X11, [X19]
	0x02EDDEAC STP X10, X11, [X31]
	0x02EDDEB0 TBNZ X9, 0x0, 0x2EDDEC0
	0x02EDDEB4 MOV X0, X8
	0x02EDDEB8 BL 0x1C5C684
	0x02EDDEBC MOV X8, X0
	0x02EDDEC0 LDR X8, [X8 + 0xC0]
	0x02EDDEC4 ADD X1, X31, 0x0
	0x02EDDEC8 LDR X0, [X8]
	0x02EDDECC BL 0x1C16E04
	0x02EDDED0 LDR X8, [X20 + 0x20]
	0x02EDDED4 MOV X20, X0
	0x02EDDED8 LDRB W9, [X8 + 0x135]
	0x02EDDEDC TBNZ X9, 0x0, 0x2EDDEE8
	0x02EDDEE0 MOV X0, X8
	0x02EDDEE4 BL 0x1C5C684
	0x02EDDEE8 LDR X1, [X19 + 0x10]
	0x02EDDEEC MOV X0, X20
	0x02EDDEF0 MOV X2, X31
	0x02EDDEF4 BL 0x335DC34
	0x02EDDEF8 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X3+32]
	007 Move X21, X3
	008 Move X19, X2
	009 Move X22, X1
	010 Move W9, [X8+309]
	011 Move X20, X0
	012 Move TEMP, X9
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {18}
	016 Move X0, X8
	017 Call 0x1C5D684
	018 Move X8, [X20]
	019 Move [X22], X8
	020 Move X0, [X21+32]
	021 Move W8, [X0+309]
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {27}
	026 Call 0x1C5D684
	027 Move W8, [X20+8]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move [X19], W8
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X30, [X31+48]
	034 Return 

