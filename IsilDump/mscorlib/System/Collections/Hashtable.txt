Type: System.Collections.Hashtable

Method: System.Runtime.CompilerServices.ConditionalWeakTable`2<System.Object, System.Runtime.Serialization.SerializationInfo> get_SerializationInfoTable()

Disassembly:
	0x0335B03C LDR X22, [X28]
	0x0335B040 LDR X21, [X19]
	0x0335B044 LDR X25, [X27]
	0x0335B048 LDRB W24, [X20 + 0x2C]
	0x0335B04C BL 0x1C16D44
	0x0335B050 CBNZ W24, 0x335B064
	0x0335B054 LDR W24, [X20 + 0x28]
	0x0335B058 BL 0x1C16D44
	0x0335B05C CMP W26, W24
	0x0335B060 B.EQ 0x335B0A0
	0x0335B064 ADRP X8, 0xDA4000
	0x0335B068 LDR X8, [X8 + 0x470]
	0x0335B06C LDR X0, [X8]
	0x0335B070 LDR W8, [X0 + 0xE0]
	0x0335B074 CBNZ W8, 0x335B07C
	0x0335B078 BL 0x1C16DFC
	0x0335B07C ADD X0, X31, 0x28
	0x0335B080 MOV X1, X31
	0x0335B084 BL 0x33DF18C
	0x0335B088 LDR W26, [X20 + 0x28]
	0x0335B08C BL 0x1C16D44
	0x0335B090 LDR W8, [X23 + 0x18]
	0x0335B094 CMP W29, W8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1082000
	006 Move X21, 0xDC9000
	007 Move X19, 0xDD0000
	008 Move W8, [X20+3590]
	009 Move X21, [X21+3512]
	010 Move X19, [X19+1736]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xDC9000
	016 Move X0, [X0+3512]
	017 Call 0x1C17CF4
	018 Move X0, 0xDD0000
	019 Move X0, [X0+1736]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+3590], W8
	023 Move X8, [X21]
	024 Move X1, [X19]
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X0, [X8+184]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call 0x22139EC, X0
	031 Return X0

Method: System.Void .ctor(System.Boolean trash)

Disassembly:
	0x0335B098 B.CC 0x335B03C
	0x0335B09C B 0x335B124

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void .ctor()

Disassembly:
	0x0335B0A0 CBZ X22, 0x335B0FC
	0x0335B0A4 LDR X9, [X31 + 0x18]
	0x0335B0A8 AND X8, X25, 0x7FFFFFFF

ISIL:
	001 Move S0, 1
	002 Move W1, W31

Method: System.Void .ctor(System.Int32 capacity)

Disassembly:
	0x0335B34C SUB W11, W8, 0x1
	0x0335B350 UDIV W13, W10, W11

ISIL:
	001 Move S0, 1
	002 Call Hashtable..ctor, X0, X1, V0
	003 Return 

Method: System.Void .ctor(System.Int32 capacity, System.Single loadFactor)

Disassembly:
	0x0335B0AC CMP X8, X9
	0x0335B0B0 B.NE 0x335B0D4
	0x0335B0B4 LDR X8, [X20]
	0x0335B0B8 LDR X2, [X31 + 0x8]
	0x0335B0BC MOV X0, X20
	0x0335B0C0 MOV X1, X22
	0x0335B0C4 LDR X9, [X8 + 0x328]
	0x0335B0C8 LDR X3, [X8 + 0x330]
	0x0335B0CC BLR X9
	0x0335B0D0 TBNZ X0, 0x0, 0x335B100
	0x0335B0D4 TBZ X25, 0x1F, 0x335B0FC
	0x0335B0D8 LDR X9, [X31 + 0x10]
	0x0335B0DC LDR W8, [X23 + 0x18]
	0x0335B0E0 LDR W12, [X31 + 0x24]
	0x0335B0E4 ADD X9, X29, X9
	0x0335B0E8 SDIV X10, X9, X8
	0x0335B0EC ADD W12, W12, 0x1
	0x0335B0F0 CMP W12, W8
	0x0335B0F4 MSUB W19, W10, W8, W9
	0x0335B0F8 B.LT 0x335B00C
	0x0335B0FC MOV X21, X31
	0x0335B100 MOV X0, X21
	0x0335B104 LDP X20, X19, [X31 + 0x80]
	0x0335B108 LDP X22, X21, [X31 + 0x70]
	0x0335B10C LDP X24, X23, [X31 + 0x60]
	0x0335B110 LDP X26, X25, [X31 + 0x50]
	0x0335B114 LDP X28, X27, [X31 + 0x40]
	0x0335B118 LDP X29, X30, [X31 + 0x30]
	0x0335B11C ADD X31, X31, 0x90
	0x0335B120 RET
	0x0335B124 BL 0x1C16F28
	0x0335B128 ADRP X0, 0xD9D000
	0x0335B12C LDR X0, [X0 + 0x528]
	0x0335B130 BL 0x1C16D08
	0x0335B134 BL 0x1C16F10
	0x0335B138 MOV X19, X0
	0x0335B13C ADRP X0, 0xDC2000
	0x0335B140 LDR X0, [X0 + 0x70]
	0x0335B144 BL 0x1C16D08
	0x0335B148 MOV X20, X0
	0x0335B14C ADRP X0, 0xDCF000
	0x0335B150 LDR X0, [X0 + 0x288]
	0x0335B154 BL 0x1C16D08
	0x0335B158 MOV X2, X0
	0x0335B15C MOV X0, X19
	0x0335B160 MOV X1, X20
	0x0335B164 MOV X3, X31
	0x0335B168 BL 0x3315F7C
	0x0335B16C ADRP X0, 0xDCF000
	0x0335B170 LDR X0, [X0 + 0x710]
	0x0335B174 BL 0x1C16D08
	0x0335B178 MOV X1, X0
	0x0335B17C MOV X0, X19
	0x0335B180 BL 0x1C16DEC
	0x0335B184 BL 0x1C16F20
	0x0335B188 MOV W3, W31
	0x0335B18C B 0x335A490
	0x0335B190 STR X30, [X31 - 0x20]!
	0x0335B194 STP X20, X19, [X31 + 0x10]
	0x0335B198 ADRP X20, 0x1081000
	0x0335B19C LDRB W8, [X20 + 0xE0C]
	0x0335B1A0 MOV X19, X0
	0x0335B1A4 TBNZ X8, 0x0, 0x335B1BC
	0x0335B1A8 ADRP X0, 0xDC3000
	0x0335B1AC LDR X0, [X0 + 0x548]
	0x0335B1B0 BL 0x1C16CF4
	0x0335B1B4 MOVZ W8, 0x1
	0x0335B1B8 STRB W8, [X20 + 0xE0C]
	0x0335B1BC LDR X20, [X19 + 0x10]
	0x0335B1C0 CBZ X20, 0x335B1F8
	0x0335B1C4 ADRP X8, 0xDC3000
	0x0335B1C8 LDR X8, [X8 + 0x548]
	0x0335B1CC LDR X0, [X8]
	0x0335B1D0 LDR W8, [X0 + 0xE0]
	0x0335B1D4 CBNZ W8, 0x335B1DC
	0x0335B1D8 BL 0x1C16DFC
	0x0335B1DC LDR W0, [X20 + 0x18]
	0x0335B1E0 BL 0x33505B4
	0x0335B1E4 MOV W1, W0
	0x0335B1E8 MOV X0, X19
	0x0335B1EC LDP X20, X19, [X31 + 0x10]
	0x0335B1F0 LDR X30, [X31], #0x20
	0x0335B1F4 B 0x335B1FC
	0x0335B1F8 BL 0x1C16F20
	0x0335B1FC STP X30, X23, [X31 - 0x30]!
	0x0335B200 STP X22, X21, [X31 + 0x10]
	0x0335B204 STP X20, X19, [X31 + 0x20]
	0x0335B208 ADRP X22, 0x1081000
	0x0335B20C ADRP X21, 0xDCF000
	0x0335B210 LDRB W8, [X22 + 0xE0D]
	0x0335B214 LDR X21, [X21 + 0x6D0]
	0x0335B218 MOV W20, W1
	0x0335B21C MOV X19, X0
	0x0335B220 TBNZ X8, 0x0, 0x335B238
	0x0335B224 ADRP X0, 0xDCF000
	0x0335B228 LDR X0, [X0 + 0x6D0]
	0x0335B22C BL 0x1C16CF4
	0x0335B230 MOVZ W8, 0x1
	0x0335B234 STRB W8, [X22 + 0xE0D]
	0x0335B238 STR W31, [X19 + 0x1C]
	0x0335B23C LDR X0, [X21]
	0x0335B240 MOV W1, W20
	0x0335B244 BL 0x1C16D6C
	0x0335B248 LDR X8, [X19 + 0x10]
	0x0335B24C CBZ X8, 0x335B2B0
	0x0335B250 MOV X21, X0
	0x0335B254 MOV X22, X31
	0x0335B258 MOV X23, X31
	0x0335B25C LDR W9, [X8 + 0x18]
	0x0335B260 CMP X23, W9, SXTW
	0x0335B264 B.GE 0x335B2B4
	0x0335B268 CMP X23, X9
	0x0335B26C B.CS 0x335B318
	0x0335B270 ADD X9, X8, X22
	0x0335B274 LDR X2, [X9 + 0x20]
	0x0335B278 CBZ X2, 0x335B2A4
	0x0335B27C CMP X2, X8
	0x0335B280 B.EQ 0x335B2A4
	0x0335B284 ADD X8, X8, X22
	0x0335B288 LDR W9, [X8 + 0x30]
	0x0335B28C LDR X3, [X8 + 0x28]
	0x0335B290 MOV X0, X19
	0x0335B294 MOV X1, X21
	0x0335B298 AND W4, W9, 0x7FFFFFFF
	0x0335B29C BL 0x335B338
	0x0335B2A0 LDR X8, [X19 + 0x10]
	0x0335B2A4 ADD X23, X23, 0x1
	0x0335B2A8 ADD X22, X22, 0x18
	0x0335B2AC CBNZ X8, 0x335B25C
	0x0335B2B0 BL 0x1C16F20
	0x0335B2B4 BL 0x1C16D44
	0x0335B2B8 LDR V0, [X19 + 0x24]
	0x0335B2BC SCVTF S1, W20
	0x0335B2C0 MOVZ W9, 0x7F800000
	0x0335B2C4 MOVZ W8, 0x1
	0x0335B2C8 LDR W20, [X19 + 0x28]
	0x0335B2CC FMOV S2, W9
	0x0335B2D0 FMUL S0, S0, S1
	0x0335B2D4 STRB W8, [X19 + 0x2C]
	0x0335B2D8 FCVTZS W8, S0
	0x0335B2DC FCMP S0, S2
	0x0335B2E0 MOVZ W9, 0x80000000
	0x0335B2E4 CSEL W8, W9, W8, EQ
	0x0335B2E8 STR X21, [X19 + 0x10]
	0x0335B2EC STR W8, [X19 + 0x20]
	0x0335B2F0 BL 0x1C16D44
	0x0335B2F4 BL 0x1C16D44
	0x0335B2F8 ADD W8, W20, 0x1
	0x0335B2FC STR W8, [X19 + 0x28]
	0x0335B300 BL 0x1C16D44
	0x0335B304 STRB W31, [X19 + 0x2C]
	0x0335B308 LDP X20, X19, [X31 + 0x20]
	0x0335B30C LDP X22, X21, [X31 + 0x10]
	0x0335B310 LDP X30, X23, [X31], #0x30
	0x0335B314 RET
	0x0335B318 BL 0x1C16F28
	0x0335B31C STR X30, [X31 - 0x10]!
	0x0335B320 LDR X8, [X0 + 0x10]
	0x0335B324 CBZ X8, 0x335B334
	0x0335B328 LDR W1, [X8 + 0x18]
	0x0335B32C LDR X30, [X31], #0x10
	0x0335B330 B 0x335B1FC
	0x0335B334 BL 0x1C16F20
	0x0335B338 STR X30, [X31 - 0x10]!
	0x0335B33C CBZ X1, 0x335B3E4
	0x0335B340 LDR X8, [X1 + 0x18]
	0x0335B344 MOVZ W9, 0x65
	0x0335B348 MUL W10, W4, W9

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], D8
	003 Move [X31+32], X30
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X21, 0x1082000
	008 Move W8, [X21+3591]
	009 Move V8, V0
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xDC4000
	017 Move X0, [X0+1352]
	018 Call 0x1C17CF4
	019 Move X0, 0xDD0000
	020 Move X0, [X0+1744]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+3591], W8
	024 Move X0, X19
	025 Move X1, X31
	026 Call Object..ctor, X0
	027 Move TEMP, X20
	028 And TEMP, TEMP, -2147483648
	029 Compare TEMP, -2147483648
	030 JumpIfEqual {89}
	031 Move X8, -42401792
	032 Move V0, [X8+188]
	033 NotImplemented "Instruction FCMP not yet implemented."
	034 Move S0, 1
	035 NotImplemented "Instruction FCMP not yet implemented."
	036 Move X8, -42401792
	037 Move V0, [X8+32]
	038 Move X8, -42389504
	039 Move V1, [X8+2744]
	040 NotImplemented "Instruction SCVTF not yet implemented."
	041 Multiply S0, S8, S0
	042 NotImplemented "Instruction FDIV not yet implemented."
	043 NotImplemented "Instruction FCVT not yet implemented."
	044 NotImplemented "Instruction FCMP not yet implemented."
	045 Move [X19+36], S0
	046 Move X21, 0xDD0000
	047 Move X21, [X21+1744]
	048 Move S0, 3
	049 NotImplemented "Instruction FCMP not yet implemented."
	050 Move X8, 0xDC4000
	051 Move X8, [X8+1352]
	052 Move X0, [X8]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Move W8, 0x7F800000
	058 Move S0, W8
	059 NotImplemented "Instruction FCVTZS not yet implemented."
	060 NotImplemented "Instruction FCMP not yet implemented."
	061 Move W8, 0x80000000
	062 NotImplemented "Instruction CSEL not yet implemented."
	063 Call HashHelpers.GetPrime, X0
	064 Move W20, W0
	065 Move W20, 3
	066 Move X0, [X21]
	067 Move W1, W20
	068 Call 0x1C17D6C
	069 Move V0, [X19+36]
	070 Move W8, 0x7F800000
	071 NotImplemented "Instruction SCVTF not yet implemented."
	072 Move S2, W8
	073 Multiply S0, S0, S1
	074 NotImplemented "Instruction FCVTZS not yet implemented."
	075 NotImplemented "Instruction FCMP not yet implemented."
	076 Move W9, 0x80000000
	077 NotImplemented "Instruction CSEL not yet implemented."
	078 Move [X19+16], X0
	079 Move [X19+32], W8
	080 Call 0x1C17D44
	081 Move [X19+44], W31
	082 Move X20, [X31+48]
	083 Move X19, [X31+56]
	084 Move X30, [X31+32]
	085 Move X21, [X31+40]
	086 Move V8, [X31+16]
	087 Add X31, X31, 64
	088 Return 
	089 Move X0, 0xDA1000
	090 Move X0, [X0+1888]
	091 Call 0x1C17D08
	092 Call 0x1C17F10
	093 Move X19, X0
	094 Move X0, 0xDC3000
	095 Move X0, [X0+88]
	096 Call 0x1C17D08
	097 Move X20, X0
	098 Move X0, 0xDC1000
	099 Move X0, [X0+1648]
	100 Call 0x1C17D08
	101 Move X2, X0
	102 Move X0, X19
	103 Move X1, X20
	104 Move X3, X31
	105 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	106 Or X8, X31, -7378697629483820647
	107 NotImplemented "Instruction MOVK not yet implemented."
	108 NotImplemented "Instruction MOVK not yet implemented."
	109 Move [X31+24], X8
	110 Move X19, 0xD9C000
	111 Move X19, [X19+2424]
	112 Move X0, X19
	113 Call 0x1C17D08
	114 Add X1, X31, 24
	115 Call 0x1C17E04
	116 Move X20, X0
	117 Move X8, 0x3FF00000
	118 Move X0, X19
	119 Move [X31+8], X8
	120 Call 0x1C17D08
	121 Add X1, X31, 8
	122 Call 0x1C17E04
	123 Move X19, X0
	124 Move X0, 0xDD0000
	125 Move X0, [X0+1752]
	126 Call 0x1C17D08
	127 Move X1, X20
	128 Move X2, X19
	129 Move X3, X31
	130 Call SR.Format, X0, X1, X2
	131 Move X19, X0
	132 Move X0, 0xDA1000
	133 Move X0, [X0+1888]
	134 Call 0x1C17D08
	135 Call 0x1C17F10
	136 Move X20, X0
	137 Move X0, 0xDD0000
	138 Move X0, [X0+1760]
	139 Call 0x1C17D08
	140 Move X1, X0
	141 Move X0, X20
	142 Move X2, X19
	143 Move X3, X31
	144 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	145 Move X0, 0xDD0000
	146 Move X0, [X0+1768]
	147 Call 0x1C17D08
	148 Move X1, X0
	149 Move X0, X20
	150 Call 0x1C17DEC
	151 Move X0, 0xDA1000
	152 Move X0, [X0+1400]
	153 Call 0x1C17D08
	154 Call 0x1C17F10
	155 Move X19, X0
	156 Move X0, 0xDD0000
	157 Move X0, [X0+608]
	158 Call 0x1C17D08
	159 Move X20, X0
	160 Move X0, 0xDC3000
	161 Move X0, [X0+88]
	162 Call 0x1C17D08
	163 Move X2, X0
	164 Move X0, X19
	165 Move X1, X20
	166 Move X3, X31
	167 Call ArgumentException..ctor, X0, X1, X2
	168 Move X0, 0xDD0000
	169 Move X0, [X0+1768]
	170 Call 0x1C17D08
	171 Move X1, X0
	172 Move X0, X19
	173 Call 0x1C17DEC

Method: System.Void .ctor(System.Int32 capacity, System.Single loadFactor, System.Collections.IEqualityComparer equalityComparer)

Disassembly:
	0x0335B354 UDIV W12, W4, W8
	0x0335B358 MSUB W10, W13, W11, W10
	0x0335B35C AND X9, X8, 0x0
	0x0335B360 MSUB W12, W12, W8, W4
	0x0335B364 ADD W10, W10, 0x1
	0x0335B368 MOVZ W11, 0x18
	0x0335B36C SMADDL X13, X12, X11, X1
	0x0335B370 LDR X14, [X13 + 0x20]!
	0x0335B374 SXTW X12, W12

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X2
	005 Move X20, X0
	006 Call Hashtable..ctor, X0, X1, V0
	007 Move [X20+64], X19
	008 Move X20, [X31+16]
	009 Move X19, [X31+24]
	010 Move X30, [X31+32]
	011 Return 

Method: System.Void .ctor(System.Collections.IEqualityComparer equalityComparer)

Disassembly:
	0x0335B378 CBZ X14, 0x335B3C0
	0x0335B37C LDR X15, [X0 + 0x10]
	0x0335B380 CMP X14, X15
	0x0335B384 B.EQ 0x335B3C0
	0x0335B388 MADD X13, X12, X11, X1
	0x0335B38C LDR W14, [X13 + 0x30]!
	0x0335B390 TBNZ X14, 0x1F, 0x335B3A8
	0x0335B394 ORR W14, W14, 0x80000000
	0x0335B398 STR W14, [X13]
	0x0335B39C LDR W13, [X0 + 0x1C]
	0x0335B3A0 ADD W13, W13, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move S0, 1
	006 Move W1, W31
	007 Move X20, X0
	008 Call Hashtable..ctor, X0, X1, V0
	009 Move [X20+64], X19
	010 Move X20, [X31+16]
	011 Move X19, [X31+24]
	012 Move X30, [X31+32]
	013 Return 

Method: System.Void .ctor(System.Int32 capacity, System.Collections.IEqualityComparer equalityComparer)

Disassembly:
	0x0335B3A4 STR W13, [X0 + 0x1C]
	0x0335B3A8 ADD X12, X12, X10
	0x0335B3AC SDIV X13, X12, X9
	0x0335B3B0 MSUB W12, W13, W9, W12
	0x0335B3B4 CMP W12, W8
	0x0335B3B8 B.CC 0x335B36C
	0x0335B3BC BL 0x1C16F28
	0x0335B3C0 MOVZ W8, 0x18
	0x0335B3C4 MADD X8, X12, X8, X1
	0x0335B3C8 STR X3, [X8 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move S0, 1
	005 Move X19, X2
	006 Move X20, X0
	007 Call Hashtable..ctor, X0, X1, V0
	008 Move [X20+64], X19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x0335B3CC STR X2, [X13]
	0x0335B3D0 LDR W9, [X8 + 0x30]
	0x0335B3D4 ORR W9, W9, W4, 0x0
	0x0335B3D8 STR W9, [X8 + 0x30]
	0x0335B3DC LDR X30, [X31], #0x10
	0x0335B3E0 RET
	0x0335B3E4 BL 0x1C16F20
	0x0335B3E8 STP X30, X21, [X31 - 0x20]!
	0x0335B3EC STP X20, X19, [X31 + 0x10]
	0x0335B3F0 ADRP X20, 0x1081000
	0x0335B3F4 ADRP X21, 0xDCF000
	0x0335B3F8 LDRB W8, [X20 + 0xE0E]
	0x0335B3FC LDR X21, [X21 + 0x718]
	0x0335B400 MOV X19, X0
	0x0335B404 TBNZ X8, 0x0, 0x335B41C
	0x0335B408 ADRP X0, 0xDCF000
	0x0335B40C LDR X0, [X0 + 0x718]
	0x0335B410 BL 0x1C16CF4
	0x0335B414 MOVZ W8, 0x1
	0x0335B418 STRB W8, [X20 + 0xE0E]
	0x0335B41C LDR X0, [X21]
	0x0335B420 BL 0x1C16F10
	0x0335B424 MOVZ W2, 0x3
	0x0335B428 MOV X1, X19
	0x0335B42C MOV X20, X0
	0x0335B430 BL 0x335B444

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1082000
	006 Move W8, [X21+3592]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xDC4000
	014 Move X0, [X0+1576]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3592], W8
	018 Move X0, X20
	019 Move X1, X31
	020 Call Object..ctor, X0
	021 Call Hashtable.get_SerializationInfoTable
	022 Compare X0, 0
	023 JumpIfEqual {35}
	024 Move X8, 0xDC4000
	025 Move X8, [X8+1576]
	026 Move X1, X20
	027 Move X2, X19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X3, [X8]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Call 0x29979F8, X0, X1, X2
	034 Return 
	035 Call 0x1C17F20

Method: System.UInt32 InitHash(System.Object key, System.Int32 hashsize, out System.UInt32 seed, out System.UInt32 incr)

Disassembly:
	0x0335B434 MOV X0, X20
	0x0335B438 LDP X20, X19, [X31 + 0x10]
	0x0335B43C LDP X30, X21, [X31], #0x20
	0x0335B440 RET
	0x0335B444 STP X30, X21, [X31 - 0x20]!
	0x0335B448 STP X20, X19, [X31 + 0x10]
	0x0335B44C MOV X21, X1
	0x0335B450 MOV X1, X31
	0x0335B454 MOV W19, W2
	0x0335B458 MOV X20, X0
	0x0335B45C BL 0x33BDD8C
	0x0335B460 STR X21, [X20 + 0x10]
	0x0335B464 CBZ X21, 0x335B498
	0x0335B468 LDR X8, [X21 + 0x10]
	0x0335B46C CBZ X8, 0x335B498
	0x0335B470 LDR X8, [X8 + 0x18]
	0x0335B474 STR W8, [X20 + 0x18]
	0x0335B478 LDR W21, [X21 + 0x28]
	0x0335B47C BL 0x1C16D44
	0x0335B480 STR W21, [X20 + 0x1C]
	0x0335B484 STRB W31, [X20 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X0]
	006 Move W21, W2
	007 Move X19, X4
	008 Move X20, X3
	009 Move X9, [X8+776]
	010 Move X2, [X8+784]
	011 NotImplemented "Instruction BLR not yet implemented."
	012 And W0, W0, 0x7FFFFFFF
	013 Move W8, 101
	014 Multiply W8, W0, W8
	015 Subtract W9, W21, 1
	016 NotImplemented "Instruction UDIV not yet implemented."
	017 NotImplemented "Instruction MSUB not yet implemented."
	018 Add W8, W8, 1
	019 Move [X20], W0
	020 Move [X19], W8
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Return X0

Method: System.Void Add(System.Object key, System.Object value)

Disassembly:
	0x0335B488 STR W19, [X20 + 0x24]
	0x0335B48C LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move W3, 1

Method: System.Void Clear()

Disassembly:
	0x0335B844 SUB W11, W23, 0x1
	0x0335B848 MUL W10, W22, W10
	0x0335B84C UDIV W12, W10, W11
	0x0335B850 MSUB W10, W12, W11, W10
	0x0335B854 ADD W23, W10, 0x1
	0x0335B858 UDIV W10, W22, W9
	0x0335B85C MOV W21, W31
	0x0335B860 MSUB W10, W10, W9, W22
	0x0335B864 MOVZ W24, 0x18
	0x0335B868 CMP W10, W9
	0x0335B86C B.CS 0x335B958
	0x0335B870 SXTW X25, W10
	0x0335B874 MADD X9, X25, X24, X8
	0x0335B878 LDR W26, [X9 + 0x30]
	0x0335B87C AND W9, W26, 0x7FFFFFFF
	0x0335B880 CMP W9, W22
	0x0335B884 B.NE 0x335B8B8
	0x0335B888 LDR X9, [X19]
	0x0335B88C NOP
	0x0335B890 MADD X8, X25, X24, X8
	0x0335B894 LDR X1, [X8 + 0x20]
	0x0335B898 MOV X0, X19
	0x0335B89C LDR X8, [X9 + 0x328]
	0x0335B8A0 LDR X3, [X9 + 0x330]
	0x0335B8A4 MOV X2, X20
	0x0335B8A8 BLR X8
	0x0335B8AC TBNZ X0, 0x0, 0x335B8DC
	0x0335B8B0 LDR X8, [X19 + 0x10]
	0x0335B8B4 CBZ X8, 0x335B95C
	0x0335B8B8 TBZ X26, 0x1F, 0x335B940
	0x0335B8BC LDR W9, [X8 + 0x18]
	0x0335B8C0 ADD X10, X25, X23
	0x0335B8C4 ADD W21, W21, 0x1
	0x0335B8C8 SDIV X11, X10, X9
	0x0335B8CC CMP W21, W9
	0x0335B8D0 MSUB W10, W11, W9, W10
	0x0335B8D4 B.LT 0x335B868
	0x0335B8D8 B 0x335B940
	0x0335B8DC BL 0x1C16D44
	0x0335B8E0 LDR X8, [X19 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+24]
	005 Move X19, X0
	006 Compare W8, 0
	007 JumpIfNotEqual {11}
	008 Move W8, [X19+28]
	009 Compare W8, 0
	010 JumpIfEqual {40}
	011 Call 0x1C17D44
	012 Move X11, [X19+16]
	013 Move W8, 1
	014 Move [X19+44], W8
	015 Compare X11, 0
	016 JumpIfEqual {45}
	017 Move W8, [X11+24]
	018 Move X9, X8
	019 ShiftRight X9, 32
	020 And X9, X9, 0x7FFFFFFF
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X9, X31
	023 Move X10, W8
	024 Add X11, X11, 32
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Add X9, X9, 1
	027 Move [X11], X31
	028 Move [X11+8], X31
	029 Move [X11+16], W31
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Add X11, X11, 24
	032 Move W20, [X19+40]
	033 Move [X19+24], X31
	034 Call 0x1C17D44
	035 Call 0x1C17D44
	036 Add W8, W20, 1
	037 Move [X19+40], W8
	038 Call 0x1C17D44
	039 Move [X19+44], W31
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Return 
	044 Call 0x1C17F28
	045 Call 0x1C17F20

Method: System.Object Clone()

Disassembly:
	0x0335B910 STR W10, [X9 + 0x30]
	0x0335B914 STP X8, X31, [X9 + 0x20]
	0x0335B918 LDR W8, [X19 + 0x18]
	0x0335B91C LDR W20, [X19 + 0x28]
	0x0335B920 SUB W8, W8, 0x1
	0x0335B924 STR W8, [X19 + 0x18]
	0x0335B928 BL 0x1C16D44
	0x0335B92C BL 0x1C16D44
	0x0335B930 ADD W8, W20, 0x1
	0x0335B934 STR W8, [X19 + 0x28]
	0x0335B938 BL 0x1C16D44
	0x0335B93C STRB W31, [X19 + 0x2C]
	0x0335B940 LDP X20, X19, [X31 + 0x40]
	0x0335B944 LDP X22, X21, [X31 + 0x30]
	0x0335B948 LDP X24, X23, [X31 + 0x20]
	0x0335B94C LDP X26, X25, [X31 + 0x10]
	0x0335B950 LDR X30, [X31], #0x50
	0x0335B954 RET
	0x0335B958 BL 0x1C16F28
	0x0335B95C BL 0x1C16F20
	0x0335B960 ADRP X0, 0xD9D000
	0x0335B964 LDR X0, [X0 + 0x528]
	0x0335B968 BL 0x1C16D08
	0x0335B96C BL 0x1C16F10
	0x0335B970 MOV X19, X0
	0x0335B974 ADRP X0, 0xDC2000
	0x0335B978 LDR X0, [X0 + 0x70]
	0x0335B97C BL 0x1C16D08
	0x0335B980 MOV X20, X0
	0x0335B984 ADRP X0, 0xDCF000
	0x0335B988 LDR X0, [X0 + 0x288]
	0x0335B98C BL 0x1C16D08
	0x0335B990 MOV X2, X0
	0x0335B994 MOV X0, X19
	0x0335B998 MOV X1, X20
	0x0335B99C MOV X3, X31
	0x0335B9A0 BL 0x3315F7C
	0x0335B9A4 ADRP X0, 0xDCF000
	0x0335B9A8 LDR X0, [X0 + 0x730]
	0x0335B9AC BL 0x1C16D08
	0x0335B9B0 MOV X1, X0
	0x0335B9B4 MOV X0, X19
	0x0335B9B8 BL 0x1C16DEC
	0x0335B9BC STR X30, [X31 - 0x20]!
	0x0335B9C0 STP X20, X19, [X31 + 0x10]
	0x0335B9C4 ADRP X20, 0x1081000
	0x0335B9C8 LDRB W8, [X20 + 0xE14]
	0x0335B9CC MOV X19, X0
	0x0335B9D0 TBNZ X8, 0x0, 0x335B9E8
	0x0335B9D4 ADRP X0, 0xD9E000
	0x0335B9D8 LDR X0, [X0 + 0xCC0]
	0x0335B9DC BL 0x1C16CF4
	0x0335B9E0 MOVZ W8, 0x1
	0x0335B9E4 STRB W8, [X20 + 0xE14]
	0x0335B9E8 LDR X0, [X19 + 0x48]!
	0x0335B9EC CBNZ X0, 0x335BA20
	0x0335B9F0 ADRP X8, 0xD9E000
	0x0335B9F4 LDR X8, [X8 + 0xCC0]
	0x0335B9F8 LDR X0, [X8]
	0x0335B9FC BL 0x1C16F10
	0x0335BA00 MOV X1, X31
	0x0335BA04 MOV X20, X0
	0x0335BA08 BL 0x33BDD8C
	0x0335BA0C MOV X0, X19
	0x0335BA10 MOV X1, X20
	0x0335BA14 MOV X2, X31
	0x0335BA18 BL 0x1C24138
	0x0335BA1C LDR X0, [X19]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x1082000
	008 Move X19, 0xDC9000
	009 Move W8, [X21+3593]
	010 Move X19, [X19+3512]
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xDC9000
	017 Move X0, [X0+3512]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3593], W8
	021 Move X0, [X19]
	022 Move X22, [X20+16]
	023 Move W21, [X20+24]
	024 Move X23, [X20+64]
	025 Call 0x1C17F10
	026 Move S0, 1
	027 Move W1, W21
	028 Move X19, X0
	029 Call Hashtable..ctor, X0, X1, V0
	030 Move [X19+64], X23
	031 Move W21, [X20+40]
	032 Call 0x1C17D44
	033 Call 0x1C17D44
	034 Move [X19+40], W21
	035 Move V0, [X20+36]
	036 Move [X19+24], W31
	037 Move [X19+36], S0
	038 Compare X22, 0
	039 JumpIfEqual {74}
	040 Move X8, [X22+24]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 And X9, X8, 0
	043 Move X8, W9
	044 Subtract X8, X8, 1
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Add X20, X8, 1
	047 Move W8, 24
	048 NotImplemented "Instruction MADD not yet implemented."
	049 Add X21, X8, 16
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 Compare X1, 0
	052 JumpIfEqual {60}
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X8, [X19]
	055 Move X2, [X21]
	056 Move X0, X19
	057 Move X9, [X8+744]
	058 Move X3, [X8+752]
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Subtract X8, X20, 2
	061 Move W9, [X22+24]
	062 Subtract X20, X20, 1
	063 Subtract X21, X21, 24
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Call 0x1C17F28
	066 Move X0, X19
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X22, [X31+16]
	070 Move X21, [X31+24]
	071 Move X30, [X31+48]
	072 Move X23, [X31+56]
	073 Return X0
	074 Call 0x1C17F20

Method: System.Boolean Contains(System.Object key)

Disassembly:
	0x0335BA20 LDP X20, X19, [X31 + 0x10]
	0x0335BA24 LDR X30, [X31], #0x20
	0x0335BA28 RET
	0x0335BA2C LDR W0, [X0 + 0x18]

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+696]
	003 Move X2, [X8+704]
	004 CallNoReturn X3

Method: System.Boolean ContainsKey(System.Object key)

Disassembly:
	0x0335BA30 RET
	0x0335BA34 STR X30, [X31 - 0x20]!
	0x0335BA38 STP X20, X19, [X31 + 0x10]
	0x0335BA3C ADRP X20, 0x1081000
	0x0335BA40 LDRB W8, [X20 + 0xE15]
	0x0335BA44 MOV X19, X0
	0x0335BA48 TBNZ X8, 0x0, 0x335BA60
	0x0335BA4C ADRP X0, 0xDCF000
	0x0335BA50 LDR X0, [X0 + 0x738]
	0x0335BA54 BL 0x1C16CF4
	0x0335BA58 MOVZ W8, 0x1
	0x0335BA5C STRB W8, [X20 + 0xE15]
	0x0335BA60 CBZ X19, 0x335BA94
	0x0335BA64 ADRP X8, 0xDCF000
	0x0335BA68 LDR X8, [X8 + 0x738]
	0x0335BA6C LDR X0, [X8]
	0x0335BA70 BL 0x1C16F10
	0x0335BA74 MOV X1, X31
	0x0335BA78 MOV X20, X0
	0x0335BA7C BL 0x33BDD8C
	0x0335BA80 STR X19, [X20 + 0x50]
	0x0335BA84 MOV X0, X20
	0x0335BA88 LDP X20, X19, [X31 + 0x10]
	0x0335BA8C LDR X30, [X31], #0x20
	0x0335BA90 RET
	0x0335BA94 ADRP X0, 0xD9D000
	0x0335BA98 LDR X0, [X0 + 0x528]
	0x0335BA9C BL 0x1C16D08
	0x0335BAA0 BL 0x1C16F10
	0x0335BAA4 MOV X19, X0
	0x0335BAA8 ADRP X0, 0xDCF000
	0x0335BAAC LDR X0, [X0 + 0x740]
	0x0335BAB0 BL 0x1C16D08
	0x0335BAB4 MOV X1, X0
	0x0335BAB8 MOV X0, X19
	0x0335BABC MOV X2, X31
	0x0335BAC0 BL 0x330E100
	0x0335BAC4 ADRP X0, 0xDCF000
	0x0335BAC8 LDR X0, [X0 + 0x748]
	0x0335BACC BL 0x1C16D08
	0x0335BAD0 MOV X1, X0
	0x0335BAD4 MOV X0, X19
	0x0335BAD8 BL 0x1C16DEC
	0x0335BADC STR X30, [X31 - 0x20]!
	0x0335BAE0 STP X20, X19, [X31 + 0x10]
	0x0335BAE4 MOV X19, X1
	0x0335BAE8 MOV X1, X31
	0x0335BAEC MOV X20, X0
	0x0335BAF0 BL 0x33BDD8C
	0x0335BAF4 STR X19, [X20 + 0x50]
	0x0335BAF8 LDP X20, X19, [X31 + 0x10]
	0x0335BAFC LDR X30, [X31], #0x20
	0x0335BB00 RET
	0x0335BB04 STR X30, [X31 - 0x50]!
	0x0335BB08 STP X26, X25, [X31 + 0x10]
	0x0335BB0C STP X24, X23, [X31 + 0x20]
	0x0335BB10 STP X22, X21, [X31 + 0x30]
	0x0335BB14 STP X20, X19, [X31 + 0x40]
	0x0335BB18 ADRP X19, 0x1081000
	0x0335BB1C LDRB W8, [X19 + 0xE16]
	0x0335BB20 MOV X21, X1
	0x0335BB24 MOV X20, X0
	0x0335BB28 TBNZ X8, 0x0, 0x335BBE8
	0x0335BB2C ADRP X0, 0xDCF000
	0x0335BB30 LDR X0, [X0 + 0x750]
	0x0335BB34 BL 0x1C16CF4
	0x0335BB38 ADRP X0, 0xDCF000
	0x0335BB3C LDR X0, [X0 + 0x758]
	0x0335BB40 BL 0x1C16CF4
	0x0335BB44 ADRP X0, 0xDCF000
	0x0335BB48 LDR X0, [X0 + 0x760]
	0x0335BB4C BL 0x1C16CF4
	0x0335BB50 ADRP X0, 0xDCF000
	0x0335BB54 LDR X0, [X0 + 0x768]
	0x0335BB58 BL 0x1C16CF4
	0x0335BB5C ADRP X0, 0xDCA000
	0x0335BB60 LDR X0, [X0 + 0x160]
	0x0335BB64 BL 0x1C16CF4
	0x0335BB68 ADRP X0, 0xD98000
	0x0335BB6C LDR X0, [X0 + 0x9D0]
	0x0335BB70 BL 0x1C16CF4
	0x0335BB74 ADRP X0, 0xD98000
	0x0335BB78 LDR X0, [X0 + 0x6C0]
	0x0335BB7C BL 0x1C16CF4
	0x0335BB80 ADRP X0, 0xDCF000
	0x0335BB84 LDR X0, [X0 + 0x770]
	0x0335BB88 BL 0x1C16CF4
	0x0335BB8C ADRP X0, 0xDC3000
	0x0335BB90 LDR X0, [X0 + 0x630]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Compare X1, 0
	012 JumpIfEqual {81}
	013 Move X21, [X0+16]
	014 Move X20, X0
	015 Compare X21, 0
	016 JumpIfEqual {104}
	017 Move X8, [X20]
	018 Move W24, [X21+24]
	019 Move X0, X20
	020 Move X19, X1
	021 Move X9, [X8+776]
	022 Move X2, [X8+784]
	023 NotImplemented "Instruction BLR not yet implemented."
	024 Move X10, [X21+24]
	025 And W23, W0, 0x7FFFFFFF
	026 Move W8, 101
	027 Subtract W9, W24, 1
	028 Multiply W8, W23, W8
	029 NotImplemented "Instruction UDIV not yet implemented."
	030 NotImplemented "Instruction MSUB not yet implemented."
	031 NotImplemented "Instruction UDIV not yet implemented."
	032 Move W22, W31
	033 Add W24, W8, 1
	034 And X8, X10, 0
	035 NotImplemented "Instruction MSUB not yet implemented."
	036 Move W25, 24
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X26, W9
	039 NotImplemented "Instruction MADD not yet implemented."
	040 Move X1, [X9+32]
	041 Compare X1, 0
	042 JumpIfEqual {67}
	043 Move W27, [X9+48]
	044 And W9, W27, 0x7FFFFFFF
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X8, [X20]
	047 Move X0, X20
	048 Move X2, X19
	049 Move X9, [X8+808]
	050 Move X3, [X8+816]
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {79}
	056 Move W8, [X21+24]
	057 Move TEMP, X27
	058 And TEMP, TEMP, -2147483648
	059 Compare TEMP, -2147483648
	060 JumpIfNotEqual {67}
	061 Add X9, X26, X24
	062 And X10, X8, 0
	063 Add W22, W22, 1
	064 NotImplemented "Instruction SDIV not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 NotImplemented "Instruction MSUB not yet implemented."
	067 Move W0, W31
	068 Move X20, [X31+64]
	069 Move X19, [X31+72]
	070 Move X22, [X31+48]
	071 Move X21, [X31+56]
	072 Move X24, [X31+32]
	073 Move X23, [X31+40]
	074 Move X26, [X31+16]
	075 Move X25, [X31+24]
	076 Move X30, [X31+80]
	077 Move X27, [X31+88]
	078 Return X0
	079 Move W0, 1
	080 Call 0x1C17F28
	081 Move X0, 0xD9E000
	082 Move X0, [X0+1320]
	083 Call 0x1C17D08
	084 Call 0x1C17F10
	085 Move X19, X0
	086 Move X0, 0xDC3000
	087 Move X0, [X0+112]
	088 Call 0x1C17D08
	089 Move X20, X0
	090 Move X0, 0xDD0000
	091 Move X0, [X0+648]
	092 Call 0x1C17D08
	093 Move X2, X0
	094 Move X0, X19
	095 Move X1, X20
	096 Move X3, X31
	097 Call ArgumentNullException..ctor, X0, X1, X2
	098 Move X0, 0xDD0000
	099 Move X0, [X0+1792]
	100 Call 0x1C17D08
	101 Move X1, X0
	102 Move X0, X19
	103 Call 0x1C17DEC
	104 Call 0x1C17F20

Method: System.Void CopyKeys(System.Array array, System.Int32 arrayIndex)

Disassembly:
	0x0335BB94 BL 0x1C16CF4
	0x0335BB98 ADRP X0, 0xDCF000
	0x0335BB9C LDR X0, [X0 + 0x778]
	0x0335BBA0 BL 0x1C16CF4
	0x0335BBA4 ADRP X0, 0xDCF000
	0x0335BBA8 LDR X0, [X0 + 0x780]
	0x0335BBAC BL 0x1C16CF4
	0x0335BBB0 ADRP X0, 0xDCF000
	0x0335BBB4 LDR X0, [X0 + 0x788]
	0x0335BBB8 BL 0x1C16CF4
	0x0335BBBC ADRP X0, 0xDCF000
	0x0335BBC0 LDR X0, [X0 + 0x790]
	0x0335BBC4 BL 0x1C16CF4
	0x0335BBC8 ADRP X0, 0xDC2000
	0x0335BBCC LDR X0, [X0 + 0x2D0]
	0x0335BBD0 BL 0x1C16CF4
	0x0335BBD4 ADRP X0, 0xD99000
	0x0335BBD8 LDR X0, [X0 + 0x2A0]
	0x0335BBDC BL 0x1C16CF4
	0x0335BBE0 MOVZ W8, 0x1
	0x0335BBE4 STRB W8, [X19 + 0xE16]
	0x0335BBE8 CBZ X21, 0x335BEF8
	0x0335BBEC LDR X8, [X20]
	0x0335BBF0 MOV X0, X20
	0x0335BBF4 LDR X9, [X8 + 0x368]
	0x0335BBF8 LDR X1, [X8 + 0x370]
	0x0335BBFC BLR X9
	0x0335BC00 MOV X19, X0
	0x0335BC04 STRB W31, [X31 + 0xC]
	0x0335BC08 ADD X1, X31, 0xC
	0x0335BC0C MOV X2, X31
	0x0335BC10 BL 0x33DE64C
	0x0335BC14 LDR W25, [X20 + 0x28]
	0x0335BC18 BL 0x1C16D44
	0x0335BC1C ADRP X8, 0xDCF000
	0x0335BC20 LDR X8, [X8 + 0x788]
	0x0335BC24 LDR V0, [X20 + 0x24]
	0x0335BC28 LDR X1, [X8]
	0x0335BC2C MOV X0, X21
	0x0335BC30 MOV X2, X31
	0x0335BC34 BL 0x32A91A4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, [X0+16]
	009 Compare X22, 0
	010 JumpIfEqual {43}
	011 Move X8, [X22+24]
	012 Subtract W23, W8, 1
	013 Move W19, W2
	014 Move X20, X0
	015 Move X21, X1
	016 Move W24, 24
	017 NotImplemented "Instruction CMP not yet implemented."
	018 NotImplemented "Instruction UMADDL not yet implemented."
	019 Move X1, [X9+32]
	020 Compare X1, 0
	021 JumpIfEqual {24}
	022 Move X9, [X20+16]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Subtract W23, W23, 1
	025 Compare X21, 0
	026 JumpIfEqual {43}
	027 Move X0, X21
	028 Move W2, W19
	029 Move X3, X31
	030 Call Array.SetValue, X0, X1, X2
	031 Subtract W23, W23, 1
	032 Move X8, [X22+24]
	033 Add W19, W19, 1
	034 Move X20, [X31+48]
	035 Move X19, [X31+56]
	036 Move X22, [X31+32]
	037 Move X21, [X31+40]
	038 Move X24, [X31+16]
	039 Move X23, [X31+24]
	040 Move X30, [X31+64]
	041 Return 
	042 Call 0x1C17F28
	043 Call 0x1C17F20

Method: System.Void CopyEntries(System.Array array, System.Int32 arrayIndex)

Disassembly:
	0x0335BC38 LDR W22, [X20 + 0x28]
	0x0335BC3C BL 0x1C16D44
	0x0335BC40 ADRP X8, 0xD99000
	0x0335BC44 LDR X8, [X8 + 0x2A0]
	0x0335BC48 LDR X1, [X8]
	0x0335BC4C MOV X0, X21
	0x0335BC50 MOV W2, W22
	0x0335BC54 MOV X3, X31
	0x0335BC58 BL 0x32A8F28
	0x0335BC5C ADRP X26, 0xD98000
	0x0335BC60 LDR X22, [X20 + 0x40]
	0x0335BC64 LDR X26, [X26 + 0x6C0]
	0x0335BC68 CBZ X22, 0x335BCD0
	0x0335BC6C ADRP X8, 0xDCF000
	0x0335BC70 LDR X8, [X8 + 0x750]
	0x0335BC74 LDR X9, [X22]
	0x0335BC78 LDR X8, [X8]
	0x0335BC7C CMP X9, X8
	0x0335BC80 B.EQ 0x335BD50
	0x0335BC84 ADRP X8, 0xDCF000
	0x0335BC88 LDR X0, [X26]
	0x0335BC8C LDR X8, [X8 + 0x760]
	0x0335BC90 LDR W9, [X0 + 0xE0]
	0x0335BC94 LDR X23, [X8]
	0x0335BC98 CBNZ W9, 0x335BCA0
	0x0335BC9C BL 0x1C16DFC
	0x0335BCA0 MOV X0, X23
	0x0335BCA4 MOV X1, X31
	0x0335BCA8 BL 0x338C698
	0x0335BCAC ADRP X8, 0xDCF000
	0x0335BCB0 LDR X8, [X8 + 0x780]
	0x0335BCB4 MOV X3, X0
	0x0335BCB8 LDR X1, [X8]
	0x0335BCBC MOV X0, X21
	0x0335BCC0 MOV X2, X22
	0x0335BCC4 MOV X4, X31
	0x0335BCC8 BL 0x32A89BC
	0x0335BCCC B 0x335BDD4
	0x0335BCD0 ADRP X8, 0xDCF000
	0x0335BCD4 LDR X0, [X26]
	0x0335BCD8 LDR X8, [X8 + 0x758]
	0x0335BCDC LDR W9, [X0 + 0xE0]
	0x0335BCE0 LDR X22, [X8]
	0x0335BCE4 CBNZ W9, 0x335BCEC
	0x0335BCE8 BL 0x1C16DFC
	0x0335BCEC MOV X0, X22
	0x0335BCF0 MOV X1, X31
	0x0335BCF4 BL 0x338C698
	0x0335BCF8 ADRP X8, 0xDC2000
	0x0335BCFC LDR X8, [X8 + 0x2D0]
	0x0335BD00 MOV X3, X0
	0x0335BD04 LDR X1, [X8]
	0x0335BD08 MOV X0, X21
	0x0335BD0C MOV X2, X31
	0x0335BD10 MOV X4, X31
	0x0335BD14 BL 0x32A89BC
	0x0335BD18 ADRP X8, 0xDCF000
	0x0335BD1C LDR X8, [X8 + 0x768]
	0x0335BD20 LDR X0, [X8]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x1082000
	011 Move W8, [X22+3594]
	012 Move W19, W2
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xDA1000
	020 Move X0, [X0+3856]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+3594], W8
	024 Move X22, [X21+16]
	025 Compare X22, 0
	026 JumpIfEqual {67}
	027 Move X8, [X22+24]
	028 Subtract W23, W8, 1
	029 Move X25, 0xDA1000
	030 Move X25, [X25+3856]
	031 Move W24, 24
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction UMADDL not yet implemented."
	034 Move X9, [X10+32]
	035 Compare X9, 0
	036 JumpIfEqual {39}
	037 Move X11, [X21+16]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Subtract W23, W23, 1
	040 Move X8, [X10+40]
	041 Move X0, [X25]
	042 Add X1, X31, 0
	043 Move [X31], X9
	044 Move [X31+8], X8
	045 Call 0x1C17E04
	046 Compare X20, 0
	047 JumpIfEqual {67}
	048 Move X1, X0
	049 Move X0, X20
	050 Move W2, W19
	051 Move X3, X31
	052 Call Array.SetValue, X0, X1, X2
	053 Subtract W23, W23, 1
	054 Move X8, [X22+24]
	055 Add W19, W19, 1
	056 Move X20, [X31+64]
	057 Move X19, [X31+72]
	058 Move X22, [X31+48]
	059 Move X21, [X31+56]
	060 Move X24, [X31+32]
	061 Move X23, [X31+40]
	062 Move X30, [X31+16]
	063 Move X25, [X31+24]
	064 Add X31, X31, 80
	065 Return 
	066 Call 0x1C17F28
	067 Call 0x1C17F20

Method: System.Void CopyTo(System.Array array, System.Int32 arrayIndex)

Disassembly:
	0x0335BD24 MOV X1, X31
	0x0335BD28 BL 0x338C698
	0x0335BD2C ADRP X8, 0xDCF000
	0x0335BD30 LDR X8, [X8 + 0x790]
	0x0335BD34 MOV X3, X0
	0x0335BD38 LDR X1, [X8]
	0x0335BD3C MOV X0, X21
	0x0335BD40 MOV X2, X31
	0x0335BD44 MOV X4, X31
	0x0335BD48 BL 0x32A89BC
	0x0335BD4C B 0x335BDD4
	0x0335BD50 ADRP X8, 0xDCF000
	0x0335BD54 LDR X0, [X26]
	0x0335BD58 LDR X23, [X22 + 0x18]
	0x0335BD5C LDR X8, [X8 + 0x758]
	0x0335BD60 LDR W9, [X0 + 0xE0]
	0x0335BD64 LDR X24, [X8]
	0x0335BD68 CBNZ W9, 0x335BD70
	0x0335BD6C BL 0x1C16DFC
	0x0335BD70 MOV X0, X24
	0x0335BD74 MOV X1, X31
	0x0335BD78 BL 0x338C698
	0x0335BD7C ADRP X8, 0xDC2000
	0x0335BD80 LDR X8, [X8 + 0x2D0]
	0x0335BD84 MOV X3, X0
	0x0335BD88 LDR X1, [X8]
	0x0335BD8C MOV X0, X21
	0x0335BD90 MOV X2, X23
	0x0335BD94 MOV X4, X31
	0x0335BD98 BL 0x32A89BC
	0x0335BD9C ADRP X8, 0xDCF000
	0x0335BDA0 LDR X22, [X22 + 0x10]
	0x0335BDA4 LDR X8, [X8 + 0x768]
	0x0335BDA8 LDR X0, [X8]
	0x0335BDAC MOV X1, X31
	0x0335BDB0 BL 0x338C698
	0x0335BDB4 ADRP X8, 0xDCF000
	0x0335BDB8 LDR X8, [X8 + 0x790]
	0x0335BDBC MOV X3, X0
	0x0335BDC0 LDR X1, [X8]
	0x0335BDC4 MOV X0, X21
	0x0335BDC8 MOV X2, X22
	0x0335BDCC MOV X4, X31
	0x0335BDD0 BL 0x32A89BC
	0x0335BDD4 LDR X8, [X20 + 0x10]
	0x0335BDD8 CBZ X8, 0x335BF48
	0x0335BDDC ADRP X9, 0xDC3000
	0x0335BDE0 LDR X9, [X9 + 0x630]
	0x0335BDE4 LDR W2, [X8 + 0x18]
	0x0335BDE8 LDR X1, [X9]
	0x0335BDEC MOV X0, X21
	0x0335BDF0 MOV X3, X31
	0x0335BDF4 BL 0x32A8F28
	0x0335BDF8 ADRP X22, 0xD98000
	0x0335BDFC LDR X22, [X22 + 0x9D0]
	0x0335BE00 LDR W1, [X20 + 0x18]
	0x0335BE04 LDR X0, [X22]
	0x0335BE08 BL 0x1C16D6C
	0x0335BE0C MOV X23, X0
	0x0335BE10 LDR W1, [X20 + 0x18]
	0x0335BE14 LDR X0, [X22]
	0x0335BE18 BL 0x1C16D6C
	0x0335BE1C MOV X22, X0
	0x0335BE20 MOV X0, X20
	0x0335BE24 MOV X1, X23
	0x0335BE28 MOV W2, W31
	0x0335BE2C BL 0x335AB94
	0x0335BE30 MOV X0, X20
	0x0335BE34 MOV X1, X22
	0x0335BE38 MOV W2, W31
	0x0335BE3C BL 0x335AEC4
	0x0335BE40 LDR X0, [X26]
	0x0335BE44 ADRP X26, 0xDCA000
	0x0335BE48 LDR X26, [X26 + 0x160]
	0x0335BE4C LDR W8, [X0 + 0xE0]
	0x0335BE50 LDR X24, [X26]
	0x0335BE54 CBNZ W8, 0x335BE5C
	0x0335BE58 BL 0x1C16DFC
	0x0335BE5C MOV X0, X24
	0x0335BE60 MOV X1, X31
	0x0335BE64 BL 0x338C698
	0x0335BE68 ADRP X8, 0xDCF000
	0x0335BE6C LDR X8, [X8 + 0x770]
	0x0335BE70 MOV X3, X0
	0x0335BE74 LDR X1, [X8]
	0x0335BE78 MOV X0, X21
	0x0335BE7C MOV X2, X23
	0x0335BE80 MOV X4, X31
	0x0335BE84 BL 0x32A89BC
	0x0335BE88 LDR X0, [X26]
	0x0335BE8C MOV X1, X31
	0x0335BE90 BL 0x338C698
	0x0335BE94 ADRP X8, 0xDCF000
	0x0335BE98 LDR X8, [X8 + 0x778]
	0x0335BE9C MOV X3, X0
	0x0335BEA0 LDR X1, [X8]
	0x0335BEA4 MOV X0, X21
	0x0335BEA8 MOV X2, X22
	0x0335BEAC MOV X4, X31
	0x0335BEB0 BL 0x32A89BC
	0x0335BEB4 LDR W20, [X20 + 0x28]
	0x0335BEB8 BL 0x1C16D44
	0x0335BEBC CMP W20, W25
	0x0335BEC0 B.NE 0x335BF4C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Compare X1, 0
	007 JumpIfEqual {40}
	008 Move X20, X1
	009 Move X21, X0
	010 Move X0, X1
	011 Move X1, X31
	012 Move W19, W2
	013 Call Array.get_Rank, X0
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move TEMP, X19
	016 And TEMP, TEMP, -2147483648
	017 Compare TEMP, -2147483648
	018 JumpIfEqual {74}
	019 Move X0, X20
	020 Move X1, X31
	021 Call Array.get_Length, X0
	022 Move X8, [X21]
	023 Move W22, W0
	024 Move X0, X21
	025 Move X9, [X8+888]
	026 Move X1, [X8+896]
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Subtract W8, W22, W19
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X0, X21
	031 Move X1, X20
	032 Move W2, W19
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Call Hashtable.CopyEntries, X0, X1, X2
	039 Return 
	040 Move X0, 0xD9E000
	041 Move X0, [X0+1320]
	042 Call 0x1C17D08
	043 Call 0x1C17F10
	044 Move X19, X0
	045 Move X0, 0xDC1000
	046 Move X0, [X0+1600]
	047 Call 0x1C17D08
	048 Move X20, X0
	049 Move X0, 0xDC8000
	050 Move X0, [X0+736]
	051 Call 0x1C17D08
	052 Move X2, X0
	053 Move X0, X19
	054 Move X1, X20
	055 Move X3, X31
	056 Call ArgumentNullException..ctor, X0, X1, X2
	057 Move X0, 0xDA1000
	058 Move X0, [X0+1400]
	059 Call 0x1C17D08
	060 Call 0x1C17F10
	061 Move X19, X0
	062 Move X0, 0xDC2000
	063 Move X0, [X0+776]
	064 Call 0x1C17D08
	065 Move X20, X0
	066 Move X0, 0xDC1000
	067 Move X0, [X0+1600]
	068 Call 0x1C17D08
	069 Move X2, X0
	070 Move X0, X19
	071 Move X1, X20
	072 Move X3, X31
	073 Call ArgumentException..ctor, X0, X1, X2
	074 Move X0, 0xDA1000
	075 Move X0, [X0+1888]
	076 Call 0x1C17D08
	077 Call 0x1C17F10
	078 Move X19, X0
	079 Move X0, 0xDC3000
	080 Move X0, [X0+688]
	081 Call 0x1C17D08
	082 Move X20, X0
	083 Move X0, 0xDC1000
	084 Move X0, [X0+1648]
	085 Call 0x1C17D08
	086 Move X2, X0
	087 Move X0, X19
	088 Move X1, X20
	089 Move X3, X31
	090 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	091 Move X0, 0xDA1000
	092 Move X0, [X0+1400]
	093 Call 0x1C17D08
	094 Call 0x1C17F10
	095 Move X19, X0
	096 Move X0, 0xDC2000
	097 Move X0, [X0+792]
	098 Call 0x1C17D08
	099 Move X1, X0
	100 Move X0, X19
	101 Move X2, X31
	102 Call ArgumentException..ctor, X0, X1
	103 Move X0, 0xDD0000
	104 Move X0, [X0+1800]
	105 Call 0x1C17D08
	106 Move X1, X0
	107 Move X0, X19
	108 Call 0x1C17DEC

Method: System.Void CopyValues(System.Array array, System.Int32 arrayIndex)

Disassembly:
	0x0335BEC4 MOV X21, X31
	0x0335BEC8 LDRB W8, [X31 + 0xC]
	0x0335BECC CBZ W8, 0x335BEDC
	0x0335BED0 MOV X0, X19
	0x0335BED4 MOV X1, X31
	0x0335BED8 BL 0x33E14E4
	0x0335BEDC CBNZ X21, 0x335BF40
	0x0335BEE0 LDP X20, X19, [X31 + 0x40]
	0x0335BEE4 LDP X22, X21, [X31 + 0x30]
	0x0335BEE8 LDP X24, X23, [X31 + 0x20]
	0x0335BEEC LDP X26, X25, [X31 + 0x10]
	0x0335BEF0 LDR X30, [X31], #0x50
	0x0335BEF4 RET
	0x0335BEF8 ADRP X0, 0xD9D000
	0x0335BEFC LDR X0, [X0 + 0x528]
	0x0335BF00 BL 0x1C16D08
	0x0335BF04 BL 0x1C16F10
	0x0335BF08 MOV X19, X0
	0x0335BF0C ADRP X0, 0xDC2000
	0x0335BF10 LDR X0, [X0 + 0x2D8]
	0x0335BF14 BL 0x1C16D08
	0x0335BF18 MOV X1, X0
	0x0335BF1C MOV X0, X19
	0x0335BF20 MOV X2, X31
	0x0335BF24 BL 0x330E100
	0x0335BF28 ADRP X0, 0xDCF000
	0x0335BF2C LDR X0, [X0 + 0x798]
	0x0335BF30 BL 0x1C16D08
	0x0335BF34 MOV X1, X0
	0x0335BF38 MOV X0, X19
	0x0335BF3C BL 0x1C16DEC
	0x0335BF40 MOV X0, X21
	0x0335BF44 BL 0x1C16F18
	0x0335BF48 BL 0x1C16F20
	0x0335BF4C ADRP X0, 0xD98000
	0x0335BF50 LDR X0, [X0 + 0x5B0]
	0x0335BF54 BL 0x1C16D08
	0x0335BF58 BL 0x1C16F10
	0x0335BF5C MOV X20, X0
	0x0335BF60 ADRP X0, 0xDC2000
	0x0335BF64 LDR X0, [X0 + 0x288]
	0x0335BF68 BL 0x1C16D08

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, [X0+16]
	009 Compare X22, 0
	010 JumpIfEqual {44}
	011 Move X8, [X22+24]
	012 Subtract W23, W8, 1
	013 Move W19, W2
	014 Move X20, X0
	015 Move X21, X1
	016 Move W24, 24
	017 NotImplemented "Instruction CMP not yet implemented."
	018 NotImplemented "Instruction UMADDL not yet implemented."
	019 Move X10, [X9+32]
	020 Compare X10, 0
	021 JumpIfEqual {24}
	022 Move X11, [X20+16]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Subtract W23, W23, 1
	025 Compare X21, 0
	026 JumpIfEqual {44}
	027 Move X1, [X9+40]
	028 Move X0, X21
	029 Move W2, W19
	030 Move X3, X31
	031 Call Array.SetValue, X0, X1, X2
	032 Subtract W23, W23, 1
	033 Move X8, [X22+24]
	034 Add W19, W19, 1
	035 Move X20, [X31+48]
	036 Move X19, [X31+56]
	037 Move X22, [X31+32]
	038 Move X21, [X31+40]
	039 Move X24, [X31+16]
	040 Move X23, [X31+24]
	041 Move X30, [X31+64]
	042 Return 
	043 Call 0x1C17F28
	044 Call 0x1C17F20

Method: System.Object get_Item(System.Object key)

Disassembly:
	0x0335BF6C MOV X1, X0
	0x0335BF70 MOV X0, X20
	0x0335BF74 MOV X2, X31
	0x0335BF78 BL 0x337DF1C
	0x0335BF7C ADRP X0, 0xDCF000
	0x0335BF80 LDR X0, [X0 + 0x798]
	0x0335BF84 BL 0x1C16D08
	0x0335BF88 MOV X1, X0
	0x0335BF8C MOV X0, X20
	0x0335BF90 BL 0x1C16DEC
	0x0335BF94 B 0x335BFE8
	0x0335BF98 B 0x335BFE8
	0x0335BF9C B 0x335BFE8
	0x0335BFA0 B 0x335BFE8
	0x0335BFA4 B 0x335BFE8
	0x0335BFA8 B 0x335BFE8
	0x0335BFAC B 0x335BFE8
	0x0335BFB0 B 0x335BFE8
	0x0335BFB4 B 0x335BFE8
	0x0335BFB8 B 0x335BFE8
	0x0335BFBC B 0x335BFE8
	0x0335BFC0 B 0x335BFE8
	0x0335BFC4 B 0x335BFE8
	0x0335BFC8 B 0x335BFE8
	0x0335BFCC B 0x335BFE8
	0x0335BFD0 B 0x335BFE8
	0x0335BFD4 B 0x335BFE8
	0x0335BFD8 B 0x335BFE8
	0x0335BFDC B 0x335BFE8
	0x0335BFE0 B 0x335BFE8
	0x0335BFE4 B 0x335BFE8
	0x0335BFE8 MOV X20, X0
	0x0335BFEC CMP W1, 0x1
	0x0335BFF0 B.NE 0x335C008
	0x0335BFF4 MOV X0, X20
	0x0335BFF8 BL 0x3EB1AD0
	0x0335BFFC LDR X21, [X0]
	0x0335C000 BL 0x3EB1AE0
	0x0335C004 B 0x335BEC8
	0x0335C008 MOV X21, X31
	0x0335C00C B 0x335C014
	0x0335C010 MOV X20, X0
	0x0335C014 LDRB W8, [X31 + 0xC]
	0x0335C018 CBZ W8, 0x335C028
	0x0335C01C MOV X0, X19
	0x0335C020 MOV X1, X31
	0x0335C024 BL 0x33E14E4
	0x0335C028 CBNZ X21, 0x335C034
	0x0335C02C MOV X0, X20
	0x0335C030 BL 0x1D2C690
	0x0335C034 MOV X0, X21
	0x0335C038 BL 0x1C16F18
	0x0335C03C BL 0x1990590
	0x0335C040 SUB X31, X31, 0x70
	0x0335C044 STP X29, X30, [X31 + 0x10]
	0x0335C048 STP X28, X27, [X31 + 0x20]
	0x0335C04C STP X26, X25, [X31 + 0x30]
	0x0335C050 STP X24, X23, [X31 + 0x40]
	0x0335C054 STP X22, X21, [X31 + 0x50]
	0x0335C058 STP X20, X19, [X31 + 0x60]
	0x0335C05C ADRP X20, 0x1080000
	0x0335C060 LDRB W8, [X20 + 0xE17]
	0x0335C064 MOV X19, X0
	0x0335C068 TBNZ X8, 0x0, 0x335C170
	0x0335C06C ADRP X0, 0xDCE000
	0x0335C070 LDR X0, [X0 + 0x750]
	0x0335C074 BL 0x1C16CF4
	0x0335C078 ADRP X0, 0xDC2000
	0x0335C07C LDR X0, [X0 + 0x640]
	0x0335C080 BL 0x1C16CF4
	0x0335C084 ADRP X0, 0xDC2000
	0x0335C088 LDR X0, [X0 + 0x648]
	0x0335C08C BL 0x1C16CF4
	0x0335C090 ADRP X0, 0xDCE000
	0x0335C094 LDR X0, [X0 + 0x758]
	0x0335C098 BL 0x1C16CF4
	0x0335C09C ADRP X0, 0xDC1000
	0x0335C0A0 LDR X0, [X0 + 0x918]
	0x0335C0A4 BL 0x1C16CF4
	0x0335C0A8 ADRP X0, 0xDCE000
	0x0335C0AC LDR X0, [X0 + 0x760]
	0x0335C0B0 BL 0x1C16CF4
	0x0335C0B4 ADRP X0, 0xDC1000
	0x0335C0B8 LDR X0, [X0 + 0x900]
	0x0335C0BC BL 0x1C16CF4
	0x0335C0C0 ADRP X0, 0xDCE000
	0x0335C0C4 LDR X0, [X0 + 0x768]
	0x0335C0C8 BL 0x1C16CF4
	0x0335C0CC ADRP X0, 0xDCE000
	0x0335C0D0 LDR X0, [X0 + 0x338]
	0x0335C0D4 BL 0x1C16CF4
	0x0335C0D8 ADRP X0, 0xDC9000
	0x0335C0DC LDR X0, [X0 + 0x160]
	0x0335C0E0 BL 0x1C16CF4
	0x0335C0E4 ADRP X0, 0xD97000
	0x0335C0E8 LDR X0, [X0 + 0x9D0]
	0x0335C0EC BL 0x1C16CF4
	0x0335C0F0 ADRP X0, 0xD97000
	0x0335C0F4 LDR X0, [X0 + 0x6C0]
	0x0335C0F8 BL 0x1C16CF4
	0x0335C0FC ADRP X0, 0xDCE000
	0x0335C100 LDR X0, [X0 + 0x770]
	0x0335C104 BL 0x1C16CF4
	0x0335C108 ADRP X0, 0xDC2000
	0x0335C10C LDR X0, [X0 + 0x630]
	0x0335C110 BL 0x1C16CF4
	0x0335C114 ADRP X0, 0xDCE000
	0x0335C118 LDR X0, [X0 + 0x778]
	0x0335C11C BL 0x1C16CF4
	0x0335C120 ADRP X0, 0xDCE000
	0x0335C124 LDR X0, [X0 + 0x780]
	0x0335C128 BL 0x1C16CF4
	0x0335C12C ADRP X0, 0xDCE000
	0x0335C130 LDR X0, [X0 + 0x788]
	0x0335C134 BL 0x1C16CF4
	0x0335C138 ADRP X0, 0xDCE000
	0x0335C13C LDR X0, [X0 + 0x790]
	0x0335C140 BL 0x1C16CF4
	0x0335C144 ADRP X0, 0xDC1000
	0x0335C148 LDR X0, [X0 + 0x2D0]
	0x0335C14C BL 0x1C16CF4
	0x0335C150 ADRP X0, 0xD98000
	0x0335C154 LDR X0, [X0 + 0x2A0]
	0x0335C158 BL 0x1C16CF4
	0x0335C15C ADRP X0, 0xDCE000
	0x0335C160 LDR X0, [X0 + 0x6D0]
	0x0335C164 BL 0x1C16CF4
	0x0335C168 MOVZ W8, 0x1
	0x0335C16C STRB W8, [X20 + 0xE17]
	0x0335C170 STR X31, [X31 + 0x8]
	0x0335C174 LDR X8, [X19 + 0x10]
	0x0335C178 CBNZ X8, 0x335C780
	0x0335C17C BL 0x335A03C
	0x0335C180 CBZ X0, 0x335C7EC
	0x0335C184 ADRP X8, 0xDC2000

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X19, 0x1082000
	015 Move W8, [X19+3595]
	016 Move X20, X0
	017 Move [X31+8], X1
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0xDA5000
	023 Move X0, [X0+1136]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X19+3595], W8
	027 Move X8, [X31+8]
	028 Compare X8, 0
	029 JumpIfEqual {134}
	030 Move X23, [X20+16]
	031 Compare X23, 0
	032 JumpIfEqual {157}
	033 Move X8, [X20]
	034 Move X1, [X31+8]
	035 Move W19, [X23+24]
	036 Move X0, X20
	037 Move X9, [X8+776]
	038 Move X2, [X8+784]
	039 NotImplemented "Instruction BLR not yet implemented."
	040 And W13, W0, 0x7FFFFFFF
	041 Move W8, 101
	042 Subtract W9, W19, 1
	043 Move W10, [X23+24]
	044 Multiply W8, W13, W8
	045 NotImplemented "Instruction UDIV not yet implemented."
	046 NotImplemented "Instruction MSUB not yet implemented."
	047 Add W8, W8, 1
	048 Move [X31+16], X8
	049 Move [X31+24], X13
	050 NotImplemented "Instruction UDIV not yet implemented."
	051 Move W12, W31
	052 NotImplemented "Instruction MSUB not yet implemented."
	053 Move [X31+36], W12
	054 Move [X31+40], W31
	055 Move W26, [X20+40]
	056 Call 0x1C17D44
	057 Move W8, [X23+24]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X29, W19
	060 Move W8, 24
	061 NotImplemented "Instruction MADD not yet implemented."
	062 Add X28, X8, 32
	063 Add X19, X8, 40
	064 Add X27, X8, 48
	065 Move X22, [X28]
	066 Move X21, [X19]
	067 Move X25, [X27]
	068 Move W24, [X20+44]
	069 Call 0x1C17D44
	070 Compare W24, 0
	071 JumpIfNotEqual {75}
	072 Move W24, [X20+40]
	073 Call 0x1C17D44
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X8, 0xDA4000
	076 Move X8, [X8+1136]
	077 Move X0, [X8]
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {82}
	081 Call 0x1C17DFC
	082 Add X0, X31, 40
	083 Move X1, X31
	084 Call SpinWait.SpinOnce, X0
	085 Move W26, [X20+40]
	086 Call 0x1C17D44
	087 Move W8, [X23+24]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Compare X22, 0
	090 JumpIfEqual {117}
	091 Move X9, [X31+24]
	092 And X8, X25, 0x7FFFFFFF
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X8, [X20]
	095 Move X2, [X31+8]
	096 Move X0, X20
	097 Move X1, X22
	098 Move X9, [X8+808]
	099 Move X3, [X8+816]
	100 NotImplemented "Instruction BLR not yet implemented."
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfEqual {118}
	105 Move TEMP, X25
	106 And TEMP, TEMP, -2147483648
	107 Compare TEMP, -2147483648
	108 JumpIfNotEqual {117}
	109 Move X9, [X31+16]
	110 Move W8, [X23+24]
	111 Move W12, [X31+36]
	112 Add X9, X29, X9
	113 NotImplemented "Instruction SDIV not yet implemented."
	114 Add W12, W12, 1
	115 NotImplemented "Instruction CMP not yet implemented."
	116 NotImplemented "Instruction MSUB not yet implemented."
	117 Move X21, X31
	118 Move X0, X21
	119 Move X20, [X31+128]
	120 Move X19, [X31+136]
	121 Move X22, [X31+112]
	122 Move X21, [X31+120]
	123 Move X24, [X31+96]
	124 Move X23, [X31+104]
	125 Move X26, [X31+80]
	126 Move X25, [X31+88]
	127 Move X28, [X31+64]
	128 Move X27, [X31+72]
	129 Move X29, [X31+48]
	130 Move X30, [X31+56]
	131 Add X31, X31, 144
	132 Return X0
	133 Call 0x1C17F28
	134 Move X0, 0xD9D000
	135 Move X0, [X0+1320]
	136 Call 0x1C17D08
	137 Call 0x1C17F10
	138 Move X19, X0
	139 Move X0, 0xDC2000
	140 Move X0, [X0+112]
	141 Call 0x1C17D08
	142 Move X20, X0
	143 Move X0, 0xDCF000
	144 Move X0, [X0+648]
	145 Call 0x1C17D08
	146 Move X2, X0
	147 Move X0, X19
	148 Move X1, X20
	149 Move X3, X31
	150 Call ArgumentNullException..ctor, X0, X1, X2
	151 Move X0, 0xDCF000
	152 Move X0, [X0+1808]
	153 Call 0x1C17D08
	154 Move X1, X0
	155 Move X0, X19
	156 Call 0x1C17DEC
	157 Call 0x1C17F20

Method: System.Void set_Item(System.Object key, System.Object value)

Disassembly:
	0x0335C188 LDR X8, [X8 + 0x648]
	0x0335C18C ADD X2, X31, 0x8

ISIL:
	001 Move W3, W31
	002 Call Hashtable.Insert, X0, X1, X2, X3
	003 Return 

Method: System.Void expand()

Disassembly:
	0x0335C190 MOV X1, X19
	0x0335C194 LDR X3, [X8]
	0x0335C198 BL 0x2996F38
	0x0335C19C LDR X0, [X31 + 0x8]
	0x0335C1A0 CBZ X0, 0x335C7FC
	0x0335C1A4 MOV X1, X31
	0x0335C1A8 BL 0x32A8830
	0x0335C1AC CBZ X0, 0x335C7EC
	0x0335C1B0 MOV X1, X31
	0x0335C1B4 MOV X23, X0
	0x0335C1B8 BL 0x3291B70
	0x0335C1BC TBZ X0, 0x0, 0x335C648
	0x0335C1C0 MOVZ W28, 0x32ED
	0x0335C1C4 MOVZ W29, 0xF9D2
	0x0335C1C8 MOVZ W22, 0x8DB5
	0x0335C1CC MOV X21, X31
	0x0335C1D0 MOV X20, X31
	0x0335C1D4 MOV X25, X31
	0x0335C1D8 MOV X24, X31
	0x0335C1DC MOVK W28, 0x602B0000
	0x0335C1E0 MOVK W29, 0x351D0000
	0x0335C1E4 MOVK W22, 0x94130000
	0x0335C1E8 STR W31, [X31 + 0x4]
	0x0335C1EC MOV X0, X23
	0x0335C1F0 MOV X1, X31
	0x0335C1F4 BL 0x3291A04
	0x0335C1F8 MOV X26, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1081000
	005 Move W8, [X20+3596]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xDC3000
	012 Move X0, [X0+1352]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3596], W8
	016 Move X20, [X19+16]
	017 Compare X20, 0
	018 JumpIfEqual {33}
	019 Move X8, 0xDC3000
	020 Move X8, [X8+1352]
	021 Move X0, [X8]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move W0, [X20+24]
	027 Call HashHelpers.ExpandPrime, X0
	028 Move W1, W0
	029 Move X0, X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Call 0x1C17F20

Method: System.Void rehash()

Disassembly:
	0x0335C31C CBNZ W8, 0x335C324
	0x0335C320 BL 0x1C16DFC
	0x0335C324 MOV X0, X26
	0x0335C328 MOV X1, X31
	0x0335C32C BL 0x338C698
	0x0335C330 CBZ X25, 0x335C7EC
	0x0335C334 ADRP X8, 0xDCE000

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {9}
	005 Move W1, [X8+24]
	006 Move X30, [X31+16]
	007 Call Hashtable.rehash, X0, X1
	008 Return 
	009 Call 0x1C17F20

Method: System.Void UpdateVersion()

Disassembly:
	0x0335B8E4 MOVZ W9, 0x1
	0x0335B8E8 STRB W9, [X19 + 0x2C]
	0x0335B8EC CBZ X8, 0x335B95C
	0x0335B8F0 LDR W9, [X8 + 0x18]
	0x0335B8F4 CMP W25, W9
	0x0335B8F8 B.CS 0x335B958
	0x0335B8FC MOVZ W9, 0x18
	0x0335B900 MADD X9, X25, X9, X8
	0x0335B904 LDR W10, [X9 + 0x30]
	0x0335B908 ANDS W10, W10, 0x80000000
	0x0335B90C CSEL X8, X31, X8, EQ

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W20, [X0+40]
	005 Move X19, X0
	006 Call 0x1C17D44
	007 Call 0x1C17D44
	008 Add W8, W20, 1
	009 Move [X19+40], W8
	010 Move X20, [X31+16]
	011 Move X19, [X31+24]
	012 Move X30, [X31+32]
	013 Return 

Method: System.Void rehash(System.Int32 newsize)

Disassembly:
	0x0335C1FC BL 0x335C87C
	0x0335C200 CMP W0, W28
	0x0335C204 B.HI 0x335C2C0
	0x0335C208 CMP W0, W29
	0x0335C20C B.EQ 0x335C3D8
	0x0335C210 MOVZ W8, 0x908B
	0x0335C214 MOVK W8, 0x49390000
	0x0335C218 CMP W0, W8
	0x0335C21C B.EQ 0x335C470
	0x0335C220 CMP W0, W28
	0x0335C224 B.NE 0x335C634
	0x0335C228 ADRP X8, 0xDCE000
	0x0335C22C LDR X8, [X8 + 0x770]
	0x0335C230 MOV X0, X26
	0x0335C234 MOV X2, X31
	0x0335C238 LDR X1, [X8]
	0x0335C23C BL 0x321BA08
	0x0335C240 TBZ X0, 0x0, 0x335C634
	0x0335C244 ADRP X8, 0xD97000
	0x0335C248 LDR X8, [X8 + 0x6C0]
	0x0335C24C ADRP X9, 0xDC9000
	0x0335C250 LDR X20, [X31 + 0x8]
	0x0335C254 LDR X0, [X8]
	0x0335C258 LDR W8, [X0 + 0xE0]
	0x0335C25C LDR X9, [X9 + 0x160]
	0x0335C260 LDR X26, [X9]
	0x0335C264 CBNZ W8, 0x335C26C
	0x0335C268 BL 0x1C16DFC
	0x0335C26C MOV X0, X26
	0x0335C270 MOV X1, X31
	0x0335C274 BL 0x338C698
	0x0335C278 CBZ X20, 0x335C7EC
	0x0335C27C ADRP X8, 0xDCE000
	0x0335C280 LDR X8, [X8 + 0x770]
	0x0335C284 MOV X2, X0
	0x0335C288 MOV X0, X20
	0x0335C28C MOV X3, X31
	0x0335C290 LDR X1, [X8]
	0x0335C294 BL 0x32A9678
	0x0335C298 CBZ X0, 0x335C604
	0x0335C29C ADRP X8, 0xD97000
	0x0335C2A0 LDR X8, [X8 + 0x9D0]
	0x0335C2A4 MOV X26, X0
	0x0335C2A8 LDR X27, [X8]
	0x0335C2AC MOV X1, X27
	0x0335C2B0 BL 0x1C16E00
	0x0335C2B4 MOV X20, X0
	0x0335C2B8 CBNZ X0, 0x335C634
	0x0335C2BC B 0x335C7F0
	0x0335C2C0 CMP W0, W22
	0x0335C2C4 B.HI 0x335C378
	0x0335C2C8 MOVZ W8, 0x225B
	0x0335C2CC MOVK W8, 0x8D4D0000
	0x0335C2D0 CMP W0, W8
	0x0335C2D4 B.EQ 0x335C52C
	0x0335C2D8 CMP W0, W22
	0x0335C2DC B.NE 0x335C634
	0x0335C2E0 ADRP X8, 0xDCE000
	0x0335C2E4 LDR X8, [X8 + 0x790]
	0x0335C2E8 MOV X0, X26
	0x0335C2EC MOV X2, X31
	0x0335C2F0 LDR X1, [X8]
	0x0335C2F4 BL 0x321BA08
	0x0335C2F8 TBZ X0, 0x0, 0x335C634
	0x0335C2FC ADRP X8, 0xD97000
	0x0335C300 LDR X8, [X8 + 0x6C0]
	0x0335C304 ADRP X9, 0xDCE000
	0x0335C308 LDR X25, [X31 + 0x8]
	0x0335C30C LDR X0, [X8]
	0x0335C310 LDR W8, [X0 + 0xE0]
	0x0335C314 LDR X9, [X9 + 0x768]
	0x0335C318 LDR X26, [X9]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1081000
	008 Move X21, 0xDCF000
	009 Move W8, [X22+3597]
	010 Move X21, [X21+1744]
	011 Move W20, W1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xDCF000
	018 Move X0, [X0+1744]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+3597], W8
	022 Move [X19+28], W31
	023 Move X0, [X21]
	024 Move W1, W20
	025 Call 0x1C17D6C
	026 Move X8, [X19+16]
	027 Compare X8, 0
	028 JumpIfEqual {52}
	029 Move X21, X0
	030 Move X22, X31
	031 Move X23, X31
	032 Move W9, [X8+24]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Add X9, X8, X22
	036 Move X2, [X9+32]
	037 Compare X2, 0
	038 JumpIfEqual {48}
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Add X8, X8, X22
	041 Move W9, [X8+48]
	042 Move X3, [X8+40]
	043 Move X0, X19
	044 Move X1, X21
	045 And W4, W9, 0x7FFFFFFF
	046 Call Hashtable.putEntry, X0, X1, X2, X3, X4
	047 Move X8, [X19+16]
	048 Add X23, X23, 1
	049 Add X22, X22, 24
	050 Compare X8, 0
	051 JumpIfNotEqual {32}
	052 Call 0x1C17F20
	053 Call 0x1C17D44
	054 Move V0, [X19+36]
	055 NotImplemented "Instruction SCVTF not yet implemented."
	056 Move W9, 0x7F800000
	057 Move W8, 1
	058 Move W20, [X19+40]
	059 Move S2, W9
	060 Multiply S0, S0, S1
	061 Move [X19+44], W8
	062 NotImplemented "Instruction FCVTZS not yet implemented."
	063 NotImplemented "Instruction FCMP not yet implemented."
	064 Move W9, 0x80000000
	065 NotImplemented "Instruction CSEL not yet implemented."
	066 Move [X19+16], X21
	067 Move [X19+32], W8
	068 Call 0x1C17D44
	069 Call 0x1C17D44
	070 Add W8, W20, 1
	071 Move [X19+40], W8
	072 Call 0x1C17D44
	073 Move [X19+44], W31
	074 Move X20, [X31+32]
	075 Move X19, [X31+40]
	076 Move X22, [X31+16]
	077 Move X21, [X31+24]
	078 Move X30, [X31+48]
	079 Move X23, [X31+56]
	080 Return 
	081 Call 0x1C17F28

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x0335C3E8 LDR X1, [X8]
	0x0335C3EC BL 0x321BA08
	0x0335C3F0 TBZ X0, 0x0, 0x335C634
	0x0335C3F4 ADRP X8, 0xD97000
	0x0335C3F8 LDR X8, [X8 + 0x6C0]
	0x0335C3FC ADRP X9, 0xDCE000
	0x0335C400 LDR X24, [X31 + 0x8]
	0x0335C404 LDR X0, [X8]
	0x0335C408 LDR W8, [X0 + 0xE0]
	0x0335C40C LDR X9, [X9 + 0x758]
	0x0335C410 LDR X26, [X9]
	0x0335C414 CBNZ W8, 0x335C41C
	0x0335C418 BL 0x1C16DFC
	0x0335C41C MOV X0, X26
	0x0335C420 MOV X1, X31
	0x0335C424 BL 0x338C698
	0x0335C428 CBZ X24, 0x335C7EC
	0x0335C42C ADRP X8, 0xDC1000
	0x0335C430 LDR X8, [X8 + 0x2D0]
	0x0335C434 MOV X2, X0
	0x0335C438 MOV X0, X24
	0x0335C43C MOV X3, X31
	0x0335C440 LDR X1, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1081000
	006 Move X21, 0xDCF000
	007 Move W8, [X20+3598]
	008 Move X21, [X21+1816]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDCF000
	015 Move X0, [X0+1816]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3598], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move W2, 3
	022 Move X1, X19
	023 Move X20, X0
	024 Call HashtableEnumerator..ctor, X0, X1, X2
	025 Move X0, X20
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0

Method: System.Collections.IDictionaryEnumerator GetEnumerator()

Disassembly:
	0x0335C49C LDR X0, [X8]
	0x0335C4A0 LDR W8, [X0 + 0xE0]
	0x0335C4A4 LDR X9, [X9 + 0x760]
	0x0335C4A8 LDR X27, [X9]
	0x0335C4AC CBNZ W8, 0x335C4B4
	0x0335C4B0 BL 0x1C16DFC
	0x0335C4B4 MOV X0, X27
	0x0335C4B8 MOV X1, X31
	0x0335C4BC MOV X29, X25
	0x0335C4C0 BL 0x338C698
	0x0335C4C4 CBZ X26, 0x335C7EC
	0x0335C4C8 ADRP X8, 0xDCE000
	0x0335C4CC LDR X8, [X8 + 0x780]
	0x0335C4D0 MOV X2, X0
	0x0335C4D4 MOV X0, X26
	0x0335C4D8 MOV X3, X31
	0x0335C4DC LDR X1, [X8]
	0x0335C4E0 BL 0x32A9678
	0x0335C4E4 ADRP X25, 0xDC1000
	0x0335C4E8 LDR X25, [X25 + 0x900]
	0x0335C4EC CBZ X0, 0x335C614
	0x0335C4F0 LDR X27, [X25]
	0x0335C4F4 MOV X26, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1081000
	006 Move X21, 0xDCF000
	007 Move W8, [X20+3599]
	008 Move X21, [X21+1816]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDCF000
	015 Move X0, [X0+1816]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3599], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move W2, 3
	022 Move X1, X19
	023 Move X20, X0
	024 Call HashtableEnumerator..ctor, X0, X1, X2
	025 Move X0, X20
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0

Method: System.Int32 GetHash(System.Object key)

Disassembly:
	0x0335C4F8 MOV X1, X27
	0x0335C4FC BL 0x1C16E00
	0x0335C500 CBZ X0, 0x335C7F0
	0x0335C504 STR X0, [X19 + 0x40]
	0x0335C508 LDR X27, [X25]
	0x0335C50C MOV X0, X26
	0x0335C510 MOV X1, X27
	0x0335C514 BL 0x1C16E00
	0x0335C518 MOV X25, X29
	0x0335C51C MOVZ W29, 0xF9D2
	0x0335C520 MOVK W29, 0x351D0000
	0x0335C524 CBNZ X0, 0x335C634
	0x0335C528 B 0x335C7F0
	0x0335C52C ADRP X8, 0xDCE000
	0x0335C530 LDR X8, [X8 + 0x778]
	0x0335C534 MOV X0, X26
	0x0335C538 MOV X2, X31
	0x0335C53C LDR X1, [X8]
	0x0335C540 BL 0x321BA08
	0x0335C544 TBZ X0, 0x0, 0x335C634
	0x0335C548 ADRP X8, 0xD97000
	0x0335C54C LDR X8, [X8 + 0x6C0]
	0x0335C550 ADRP X9, 0xDC9000
	0x0335C554 LDR X21, [X31 + 0x8]
	0x0335C558 LDR X0, [X8]
	0x0335C55C LDR W8, [X0 + 0xE0]
	0x0335C560 LDR X9, [X9 + 0x160]
	0x0335C564 LDR X26, [X9]
	0x0335C568 CBNZ W8, 0x335C570
	0x0335C56C BL 0x1C16DFC
	0x0335C570 MOV X0, X26
	0x0335C574 MOV X1, X31
	0x0335C578 BL 0x338C698
	0x0335C57C CBZ X21, 0x335C7EC
	0x0335C580 ADRP X8, 0xDCE000
	0x0335C584 LDR X8, [X8 + 0x778]
	0x0335C588 MOV X2, X0
	0x0335C58C MOV X0, X21
	0x0335C590 MOV X3, X31
	0x0335C594 LDR X1, [X8]
	0x0335C598 BL 0x32A9678
	0x0335C59C CBZ X0, 0x335C630
	0x0335C5A0 ADRP X8, 0xD97000
	0x0335C5A4 LDR X8, [X8 + 0x9D0]
	0x0335C5A8 MOV X26, X0
	0x0335C5AC LDR X27, [X8]
	0x0335C5B0 MOV X1, X27
	0x0335C5B4 BL 0x1C16E00
	0x0335C5B8 MOV X21, X0
	0x0335C5BC CBNZ X0, 0x335C634

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1081000
	006 Move W8, [X21+3600]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xDC2000
	014 Move X0, [X0+2304]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3600], W8
	018 Move X20, [X20+64]
	019 Compare X20, 0
	020 JumpIfEqual {37}
	021 Move X10, 0xDC2000
	022 Move X8, [X20]
	023 Move X10, [X10+2304]
	024 NotImplemented "Instruction LDRH not yet implemented."
	025 Move X1, [X10]
	026 Compare X9, 0
	027 JumpIfEqual {34}
	028 Move X10, [X8+176]
	029 Add X10, X10, 8
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Subtract X9, X9, 1
	033 Add X10, X10, 16
	034 Move W2, 1
	035 Move X0, X20
	036 Call 0x1C5D788
	037 Compare X19, 0
	038 JumpIfEqual {61}
	039 Move X8, [X19]
	040 Move X0, X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X2, [X8+344]
	044 Move X1, [X8+352]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 CallNoReturn X2
	048 Move W9, [X10]
	049 Add W9, W9, 1
	050 Add X8, X8, W9
	051 Add X0, X8, 312
	052 Move X3, [X0]
	053 Move X2, [X0+8]
	054 Move X0, X20
	055 Move X1, X19
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X30, [X31+32]
	059 Move X21, [X31+40]
	060 CallNoReturn X3
	061 Call 0x1C17F20

Method: System.Boolean get_IsSynchronized()

Disassembly:
	0x0335C5C0 B 0x335C7F0
	0x0335C5C4 ADRP X8, 0xDC2000

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean KeyEquals(System.Object item, System.Object key)

Disassembly:
	0x0335C5C8 LDR X8, [X8 + 0x630]
	0x0335C5CC MOV X0, X26
	0x0335C5D0 MOV X2, X31
	0x0335C5D4 LDR X1, [X8]
	0x0335C5D8 BL 0x321BA08
	0x0335C5DC TBZ X0, 0x0, 0x335C634
	0x0335C5E0 LDR X0, [X31 + 0x8]
	0x0335C5E4 CBZ X0, 0x335C7EC
	0x0335C5E8 ADRP X8, 0xDC2000
	0x0335C5EC LDR X8, [X8 + 0x630]
	0x0335C5F0 MOV X2, X31
	0x0335C5F4 LDR X1, [X8]
	0x0335C5F8 BL 0x32A9B08
	0x0335C5FC STR W0, [X31 + 0x4]
	0x0335C600 B 0x335C634
	0x0335C604 MOV X20, X31
	0x0335C608 B 0x335C634
	0x0335C60C MOV X24, X31
	0x0335C610 B 0x335C634
	0x0335C614 MOV X25, X29
	0x0335C618 MOVZ W29, 0xF9D2
	0x0335C61C STR X31, [X19 + 0x40]
	0x0335C620 MOVK W29, 0x351D0000
	0x0335C624 B 0x335C634
	0x0335C628 MOV X25, X31
	0x0335C62C B 0x335C634
	0x0335C630 MOV X21, X31
	0x0335C634 MOV X0, X23
	0x0335C638 MOV X1, X31
	0x0335C63C BL 0x3291B70
	0x0335C640 TBNZ X0, 0x0, 0x335C1EC
	0x0335C644 B 0x335C65C
	0x0335C648 STR W31, [X31 + 0x4]
	0x0335C64C MOV X24, X31
	0x0335C650 MOV X25, X31
	0x0335C654 MOV X20, X31
	0x0335C658 MOV X21, X31
	0x0335C65C LDR W22, [X31 + 0x4]
	0x0335C660 LDR V0, [X19 + 0x24]
	0x0335C664 MOVZ W8, 0x7F800000
	0x0335C668 LDR X9, [X19 + 0x40]
	0x0335C66C SCVTF S1, W22
	0x0335C670 FMOV S2, W8
	0x0335C674 FMUL S0, S0, S1
	0x0335C678 FCVTZS W8, S0
	0x0335C67C FCMP S0, S2
	0x0335C680 MOVZ W10, 0x80000000
	0x0335C684 CSEL W8, W10, W8, EQ
	0x0335C688 STR W8, [X19 + 0x20]
	0x0335C68C CBNZ X9, 0x335C6BC
	0x0335C690 ORR X8, X25, X24, 0x0
	0x0335C694 CBZ X8, 0x335C6BC
	0x0335C698 ADRP X8, 0xDCE000
	0x0335C69C LDR X8, [X8 + 0x750]
	0x0335C6A0 LDR X0, [X8]
	0x0335C6A4 BL 0x1C16F10
	0x0335C6A8 MOV X1, X31
	0x0335C6AC MOV X23, X0
	0x0335C6B0 BL 0x33BDD8C
	0x0335C6B4 STP X25, X24, [X23 + 0x10]
	0x0335C6B8 STR X23, [X19 + 0x40]
	0x0335C6BC ADRP X8, 0xDCE000
	0x0335C6C0 LDR X8, [X8 + 0x6D0]
	0x0335C6C4 MOV W1, W22
	0x0335C6C8 LDR X0, [X8]
	0x0335C6CC BL 0x1C16D6C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1081000
	007 Move W8, [X22+3601]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xDC2000
	016 Move X0, [X0+2304]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+3601], W8
	020 Move X8, [X21+16]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X21, [X21+64]
	024 Compare X21, 0
	025 JumpIfEqual {43}
	026 Move X10, 0xDC2000
	027 Move X8, [X21]
	028 Move X10, [X10+2304]
	029 NotImplemented "Instruction LDRH not yet implemented."
	030 Move X1, [X10]
	031 Compare X9, 0
	032 JumpIfEqual {39}
	033 Move X10, [X8+176]
	034 Add X10, X10, 8
	035 NotImplemented "Instruction LDUR not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Subtract X9, X9, 1
	038 Add X10, X10, 16
	039 Move X0, X21
	040 Move W2, W31
	041 Call 0x1C5D788
	042 Move W0, 1
	043 Compare X20, 0
	044 JumpIfEqual {56}
	045 Move X8, [X20]
	046 Move X0, X20
	047 Move X1, X19
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X3, [X8+312]
	051 Move X2, [X8+320]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X30, [X31+48]
	055 CallNoReturn X3
	056 Move W0, W31
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X30, [X31+48]
	062 Return X0
	063 NotImplemented "Instruction LDRSW not yet implemented."
	064 Add X8, X8, X9
	065 Add X0, X8, 312
	066 Move X4, [X0]
	067 Move X3, [X0+8]
	068 Move X0, X21
	069 Move X1, X20
	070 Move X2, X19
	071 Move X20, [X31+32]
	072 Move X19, [X31+40]
	073 Move X22, [X31+16]
	074 Move X21, [X31+24]
	075 Move X30, [X31+48]
	076 CallNoReturn X4

Method: System.Collections.ICollection get_Keys()

Disassembly:
	0x0335C6D0 STR X0, [X19 + 0x10]
	0x0335C6D4 CBZ X20, 0x335C81C
	0x0335C6D8 CBZ X21, 0x335C83C
	0x0335C6DC LDR W8, [X20 + 0x18]
	0x0335C6E0 LDR W9, [X21 + 0x18]
	0x0335C6E4 CMP W8, W9
	0x0335C6E8 B.NE 0x335C85C
	0x0335C6EC CMP W8, 0x1
	0x0335C6F0 B.LT 0x335C73C
	0x0335C6F4 MOV X22, X31
	0x0335C6F8 ADD X23, X21, 0x20
	0x0335C6FC ADD X24, X20, 0x20
	0x0335C700 CMP W22, W8
	0x0335C704 B.CS 0x335C7A0
	0x0335C708 LDR X1, [X24, X22, LSL #3]
	0x0335C70C CBZ X1, 0x335C7A4
	0x0335C710 LDR W8, [X21 + 0x18]
	0x0335C714 CMP W22, W8
	0x0335C718 B.CS 0x335C7A0
	0x0335C71C LDR X2, [X23, X22, LSL #3]
	0x0335C720 MOVZ W3, 0x1
	0x0335C724 MOV X0, X19
	0x0335C728 BL 0x335A490
	0x0335C72C LDR W8, [X20 + 0x18]
	0x0335C730 ADD X22, X22, 0x1
	0x0335C734 CMP W22, W8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1081000
	005 Move W8, [X20+3602]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xDCF000
	012 Move X0, [X0+1824]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3602], W8
	016 Move X20, [X19+48]
	017 Compare X20, 0
	018 JumpIfNotEqual {28}
	019 Move X8, 0xDCF000
	020 Move X8, [X8+1824]
	021 Move X0, [X8]
	022 Call 0x1C17F10
	023 Move X1, X31
	024 Move X20, X0
	025 Call Object..ctor, X0
	026 Move [X20+16], X19
	027 Move [X19+48], X20
	028 Move X0, X20
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Return X0

Method: System.Collections.ICollection get_Values()

Disassembly:
	0x0335C760 STR W20, [X19 + 0x28]
	0x0335C764 BL 0x335A03C
	0x0335C768 CBZ X0, 0x335C7EC
	0x0335C76C ADRP X8, 0xDC2000
	0x0335C770 LDR X8, [X8 + 0x640]
	0x0335C774 MOV X1, X19
	0x0335C778 LDR X2, [X8]
	0x0335C77C BL 0x2996CF8
	0x0335C780 LDP X20, X19, [X31 + 0x60]
	0x0335C784 LDP X22, X21, [X31 + 0x50]
	0x0335C788 LDP X24, X23, [X31 + 0x40]
	0x0335C78C LDP X26, X25, [X31 + 0x30]
	0x0335C790 LDP X28, X27, [X31 + 0x20]
	0x0335C794 LDP X29, X30, [X31 + 0x10]
	0x0335C798 ADD X31, X31, 0x70
	0x0335C79C RET
	0x0335C7A0 BL 0x1C16F28
	0x0335C7A4 ADRP X0, 0xDC1000
	0x0335C7A8 LDR X0, [X0 + 0x2E0]
	0x0335C7AC BL 0x1C16D08
	0x0335C7B0 BL 0x1C16F10
	0x0335C7B4 MOV X19, X0
	0x0335C7B8 ADRP X0, 0xDCE000
	0x0335C7BC LDR X0, [X0 + 0x7A0]
	0x0335C7C0 BL 0x1C16D08
	0x0335C7C4 MOV X1, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1081000
	005 Move W8, [X20+3603]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xDCF000
	012 Move X0, [X0+1832]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3603], W8
	016 Move X20, [X19+56]
	017 Compare X20, 0
	018 JumpIfNotEqual {28}
	019 Move X8, 0xDCF000
	020 Move X8, [X8+1832]
	021 Move X0, [X8]
	022 Call 0x1C17F10
	023 Move X1, X31
	024 Move X20, X0
	025 Call Object..ctor, X0
	026 Move [X20+16], X19
	027 Move [X19+56], X20
	028 Move X0, X20
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Return X0

Method: System.Void Insert(System.Object key, System.Object nvalue, System.Boolean add)

Disassembly:
	0x0335B490 LDP X30, X21, [X31], #0x20
	0x0335B494 RET
	0x0335B498 BL 0x1C16F20
	0x0335B49C STP X30, X21, [X31 - 0x20]!
	0x0335B4A0 STP X20, X19, [X31 + 0x10]
	0x0335B4A4 ADRP X20, 0x1081000
	0x0335B4A8 ADRP X21, 0xDCF000
	0x0335B4AC LDRB W8, [X20 + 0xE0F]
	0x0335B4B0 LDR X21, [X21 + 0x718]
	0x0335B4B4 MOV X19, X0
	0x0335B4B8 TBNZ X8, 0x0, 0x335B4D0
	0x0335B4BC ADRP X0, 0xDCF000
	0x0335B4C0 LDR X0, [X0 + 0x718]
	0x0335B4C4 BL 0x1C16CF4
	0x0335B4C8 MOVZ W8, 0x1
	0x0335B4CC STRB W8, [X20 + 0xE0F]
	0x0335B4D0 LDR X0, [X21]
	0x0335B4D4 BL 0x1C16F10
	0x0335B4D8 MOVZ W2, 0x3
	0x0335B4DC MOV X1, X19
	0x0335B4E0 MOV X20, X0
	0x0335B4E4 BL 0x335B444
	0x0335B4E8 MOV X0, X20
	0x0335B4EC LDP X20, X19, [X31 + 0x10]
	0x0335B4F0 LDP X30, X21, [X31], #0x20
	0x0335B4F4 RET
	0x0335B4F8 STP X30, X21, [X31 - 0x20]!
	0x0335B4FC STP X20, X19, [X31 + 0x10]
	0x0335B500 ADRP X21, 0x1081000
	0x0335B504 LDRB W8, [X21 + 0xE10]
	0x0335B508 MOV X19, X1
	0x0335B50C MOV X20, X0
	0x0335B510 TBNZ X8, 0x0, 0x335B528
	0x0335B514 ADRP X0, 0xDC2000
	0x0335B518 LDR X0, [X0 + 0x900]
	0x0335B51C BL 0x1C16CF4
	0x0335B520 MOVZ W8, 0x1
	0x0335B524 STRB W8, [X21 + 0xE10]
	0x0335B528 LDR X20, [X20 + 0x40]
	0x0335B52C CBZ X20, 0x335B578
	0x0335B530 ADRP X10, 0xDC2000
	0x0335B534 LDR X8, [X20]
	0x0335B538 LDR X10, [X10 + 0x900]
	0x0335B53C LDRH W9, [X8 + 0x12E]
	0x0335B540 LDR X1, [X10]
	0x0335B544 CBZ X9, 0x335B568
	0x0335B548 LDR X10, [X8 + 0xB0]
	0x0335B54C ADD X10, X10, 0x8
	0x0335B550 LDUR X11, [X10 - 0x8]
	0x0335B554 CMP X11, X1
	0x0335B558 B.EQ 0x335B594
	0x0335B55C SUBS X9, X9, 0x1
	0x0335B560 ADD X10, X10, 0x10
	0x0335B564 B.NE 0x335B550
	0x0335B568 MOVZ W2, 0x1
	0x0335B56C MOV X0, X20
	0x0335B570 BL 0x1C5C788
	0x0335B574 B 0x335B5A4
	0x0335B578 CBZ X19, 0x335B5BC
	0x0335B57C LDR X8, [X19]
	0x0335B580 MOV X0, X19
	0x0335B584 LDP X20, X19, [X31 + 0x10]
	0x0335B588 LDP X2, X1, [X8 + 0x158]
	0x0335B58C LDP X30, X21, [X31], #0x20
	0x0335B590 BR X2
	0x0335B594 LDR W9, [X10]
	0x0335B598 ADD W9, W9, 0x1
	0x0335B59C ADD X8, X8, W9, 0x4, SXTW
	0x0335B5A0 ADD X0, X8, 0x138
	0x0335B5A4 LDP X3, X2, [X0]
	0x0335B5A8 MOV X0, X20
	0x0335B5AC MOV X1, X19
	0x0335B5B0 LDP X20, X19, [X31 + 0x10]
	0x0335B5B4 LDP X30, X21, [X31], #0x20
	0x0335B5B8 BR X3
	0x0335B5BC BL 0x1C16F20
	0x0335B5C0 MOV W0, W31
	0x0335B5C4 RET
	0x0335B5C8 STR X30, [X31 - 0x30]!
	0x0335B5CC STP X22, X21, [X31 + 0x10]
	0x0335B5D0 STP X20, X19, [X31 + 0x20]
	0x0335B5D4 ADRP X22, 0x1081000
	0x0335B5D8 LDRB W8, [X22 + 0xE11]
	0x0335B5DC MOV X19, X2
	0x0335B5E0 MOV X20, X1
	0x0335B5E4 MOV X21, X0
	0x0335B5E8 TBNZ X8, 0x0, 0x335B600
	0x0335B5EC ADRP X0, 0xDC2000
	0x0335B5F0 LDR X0, [X0 + 0x900]
	0x0335B5F4 BL 0x1C16CF4
	0x0335B5F8 MOVZ W8, 0x1
	0x0335B5FC STRB W8, [X22 + 0xE11]
	0x0335B600 LDR X8, [X21 + 0x10]
	0x0335B604 CMP X8, X20
	0x0335B608 B.EQ 0x335B690
	0x0335B60C CMP X20, X19
	0x0335B610 B.EQ 0x335B664
	0x0335B614 LDR X21, [X21 + 0x40]
	0x0335B618 CBZ X21, 0x335B66C
	0x0335B61C ADRP X10, 0xDC2000
	0x0335B620 LDR X8, [X21]
	0x0335B624 LDR X10, [X10 + 0x900]
	0x0335B628 LDRH W9, [X8 + 0x12E]
	0x0335B62C LDR X1, [X10]
	0x0335B630 CBZ X9, 0x335B654
	0x0335B634 LDR X10, [X8 + 0xB0]
	0x0335B638 ADD X10, X10, 0x8
	0x0335B63C LDUR X11, [X10 - 0x8]
	0x0335B640 CMP X11, X1
	0x0335B644 B.EQ 0x335B6A4
	0x0335B648 SUBS X9, X9, 0x1
	0x0335B64C ADD X10, X10, 0x10
	0x0335B650 B.NE 0x335B63C
	0x0335B654 MOV X0, X21
	0x0335B658 MOV W2, W31
	0x0335B65C BL 0x1C5C788
	0x0335B660 B 0x335B6B0
	0x0335B664 MOVZ W0, 0x1
	0x0335B668 B 0x335B694
	0x0335B66C CBZ X20, 0x335B690
	0x0335B670 LDR X8, [X20]
	0x0335B674 MOV X0, X20
	0x0335B678 MOV X1, X19
	0x0335B67C LDP X20, X19, [X31 + 0x20]
	0x0335B680 LDP X3, X2, [X8 + 0x138]
	0x0335B684 LDP X22, X21, [X31 + 0x10]
	0x0335B688 LDR X30, [X31], #0x30
	0x0335B68C BR X3
	0x0335B690 MOV W0, W31
	0x0335B694 LDP X20, X19, [X31 + 0x20]
	0x0335B698 LDP X22, X21, [X31 + 0x10]
	0x0335B69C LDR X30, [X31], #0x30
	0x0335B6A0 RET
	0x0335B6A4 LDRSW X9, [X10]
	0x0335B6A8 ADD X8, X8, X9, 0x4, LSL
	0x0335B6AC ADD X0, X8, 0x138
	0x0335B6B0 LDP X4, X3, [X0]
	0x0335B6B4 MOV X0, X21
	0x0335B6B8 MOV X1, X20
	0x0335B6BC MOV X2, X19
	0x0335B6C0 LDP X20, X19, [X31 + 0x20]
	0x0335B6C4 LDP X22, X21, [X31 + 0x10]
	0x0335B6C8 LDR X30, [X31], #0x30
	0x0335B6CC BR X4
	0x0335B6D0 STR X30, [X31 - 0x20]!
	0x0335B6D4 STP X20, X19, [X31 + 0x10]
	0x0335B6D8 ADRP X20, 0x1081000
	0x0335B6DC LDRB W8, [X20 + 0xE12]
	0x0335B6E0 MOV X19, X0
	0x0335B6E4 TBNZ X8, 0x0, 0x335B6FC
	0x0335B6E8 ADRP X0, 0xDCF000
	0x0335B6EC LDR X0, [X0 + 0x720]
	0x0335B6F0 BL 0x1C16CF4
	0x0335B6F4 MOVZ W8, 0x1
	0x0335B6F8 STRB W8, [X20 + 0xE12]
	0x0335B6FC LDR X20, [X19 + 0x30]
	0x0335B700 CBNZ X20, 0x335B728
	0x0335B704 ADRP X8, 0xDCF000
	0x0335B708 LDR X8, [X8 + 0x720]
	0x0335B70C LDR X0, [X8]
	0x0335B710 BL 0x1C16F10
	0x0335B714 MOV X1, X31
	0x0335B718 MOV X20, X0
	0x0335B71C BL 0x33BDD8C
	0x0335B720 STR X19, [X20 + 0x10]
	0x0335B724 STR X20, [X19 + 0x30]
	0x0335B728 MOV X0, X20
	0x0335B72C LDP X20, X19, [X31 + 0x10]
	0x0335B730 LDR X30, [X31], #0x20
	0x0335B734 RET
	0x0335B738 STR X30, [X31 - 0x20]!
	0x0335B73C STP X20, X19, [X31 + 0x10]
	0x0335B740 MOV X19, X1
	0x0335B744 MOV X1, X31
	0x0335B748 MOV X20, X0
	0x0335B74C BL 0x33BDD8C
	0x0335B750 STR X19, [X20 + 0x10]
	0x0335B754 LDP X20, X19, [X31 + 0x10]
	0x0335B758 LDR X30, [X31], #0x20
	0x0335B75C RET
	0x0335B760 STR X30, [X31 - 0x20]!
	0x0335B764 STP X20, X19, [X31 + 0x10]
	0x0335B768 ADRP X20, 0x1081000
	0x0335B76C LDRB W8, [X20 + 0xE13]
	0x0335B770 MOV X19, X0
	0x0335B774 TBNZ X8, 0x0, 0x335B78C
	0x0335B778 ADRP X0, 0xDCF000
	0x0335B77C LDR X0, [X0 + 0x728]
	0x0335B780 BL 0x1C16CF4
	0x0335B784 MOVZ W8, 0x1
	0x0335B788 STRB W8, [X20 + 0xE13]
	0x0335B78C LDR X20, [X19 + 0x38]
	0x0335B790 CBNZ X20, 0x335B7B8
	0x0335B794 ADRP X8, 0xDCF000
	0x0335B798 LDR X8, [X8 + 0x728]
	0x0335B79C LDR X0, [X8]
	0x0335B7A0 BL 0x1C16F10
	0x0335B7A4 MOV X1, X31
	0x0335B7A8 MOV X20, X0
	0x0335B7AC BL 0x33BDD8C
	0x0335B7B0 STR X19, [X20 + 0x10]
	0x0335B7B4 STR X20, [X19 + 0x38]
	0x0335B7B8 MOV X0, X20
	0x0335B7BC LDP X20, X19, [X31 + 0x10]
	0x0335B7C0 LDR X30, [X31], #0x20
	0x0335B7C4 RET
	0x0335B7C8 STR X30, [X31 - 0x20]!
	0x0335B7CC STP X20, X19, [X31 + 0x10]
	0x0335B7D0 MOV X19, X1
	0x0335B7D4 MOV X1, X31
	0x0335B7D8 MOV X20, X0
	0x0335B7DC BL 0x33BDD8C
	0x0335B7E0 STR X19, [X20 + 0x10]
	0x0335B7E4 LDP X20, X19, [X31 + 0x10]
	0x0335B7E8 LDR X30, [X31], #0x20
	0x0335B7EC RET
	0x0335B7F0 STR X30, [X31 - 0x50]!
	0x0335B7F4 STP X26, X25, [X31 + 0x10]
	0x0335B7F8 STP X24, X23, [X31 + 0x20]
	0x0335B7FC STP X22, X21, [X31 + 0x30]
	0x0335B800 STP X20, X19, [X31 + 0x40]
	0x0335B804 CBZ X1, 0x335B960
	0x0335B808 LDR X8, [X0 + 0x10]
	0x0335B80C MOV X19, X0
	0x0335B810 CBZ X8, 0x335B95C
	0x0335B814 LDR X9, [X19]
	0x0335B818 LDR X23, [X8 + 0x18]
	0x0335B81C MOV X0, X19
	0x0335B820 MOV X20, X1
	0x0335B824 LDR X8, [X9 + 0x308]
	0x0335B828 LDR X2, [X9 + 0x310]
	0x0335B82C BLR X8
	0x0335B830 LDR X8, [X19 + 0x10]
	0x0335B834 CBZ X8, 0x335B95C
	0x0335B838 AND W22, W0, 0x7FFFFFFF
	0x0335B83C MOVZ W10, 0x65
	0x0335B840 LDR X9, [X8 + 0x18]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Compare X1, 0
	014 JumpIfEqual {191}
	015 Move W9, [X0+24]
	016 Move W8, [X0+32]
	017 Move W22, W3
	018 Move X21, X2
	019 Move X20, X1
	020 Move X19, X0
	021 NotImplemented "Instruction CMP not yet implemented."
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move W9, [X19+28]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X0, X19
	026 Call Hashtable.rehash, X0
	027 Move X0, X19
	028 Call Hashtable.expand, X0
	029 Move X8, [X19+16]
	030 Compare X8, 0
	031 JumpIfEqual {190}
	032 Move X9, [X19]
	033 Move X23, [X8+24]
	034 Move X0, X19
	035 Move X1, X20
	036 Move X8, [X9+776]
	037 Move X2, [X9+784]
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Move X8, [X19+16]
	040 Compare X8, 0
	041 JumpIfEqual {190}
	042 And W24, W0, 0x7FFFFFFF
	043 Move W10, 101
	044 Move X9, [X8+24]
	045 Subtract W11, W23, 1
	046 Multiply W10, W24, W10
	047 NotImplemented "Instruction UDIV not yet implemented."
	048 NotImplemented "Instruction MSUB not yet implemented."
	049 Add W27, W10, 1
	050 NotImplemented "Instruction UDIV not yet implemented."
	051 Move W25, W31
	052 Move TEMP, 0
	053 Not TEMP
	054 Move W26, TEMP
	055 NotImplemented "Instruction MSUB not yet implemented."
	056 Move W28, 24
	057 Add W31, W26, 1
	058 NotImplemented "Instruction CMP not yet implemented."
	059 NotImplemented "Instruction SMADDL not yet implemented."
	060 Move X10, [X10+32]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move TEMP, 0
	063 Not TEMP
	064 Move W26, TEMP
	065 Move W10, W29
	066 Move X10, W10
	067 NotImplemented "Instruction MADD not yet implemented."
	068 Move W10, [X10+48]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 NotImplemented "Instruction CSINV not yet implemented."
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X23, W29
	073 NotImplemented "Instruction MADD not yet implemented."
	074 Move X1, [X9+32]
	075 Compare X1, 0
	076 JumpIfEqual {134}
	077 NotImplemented "Instruction MADD not yet implemented."
	078 Move W9, [X9+48]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move TEMP, X9
	081 And TEMP, TEMP, -2147483648
	082 Compare TEMP, -2147483648
	083 JumpIfNotEqual {134}
	084 And W8, W9, 0x7FFFFFFF
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X8, [X19]
	087 Move X0, X19
	088 Move X2, X20
	089 Move X9, [X8+808]
	090 Move X3, [X8+816]
	091 NotImplemented "Instruction BLR not yet implemented."
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfEqual {174}
	096 Move X8, [X19+16]
	097 Add W31, W26, 1
	098 Compare X8, 0
	099 JumpIfNotEqual {116}
	100 Compare X8, 0
	101 JumpIfEqual {190}
	102 Move W9, [X8+24]
	103 NotImplemented "Instruction CMP not yet implemented."
	104 NotImplemented "Instruction MADD not yet implemented."
	105 Add X9, X9, 48
	106 Move W10, [X9]
	107 Move TEMP, X10
	108 And TEMP, TEMP, -2147483648
	109 Compare TEMP, -2147483648
	110 JumpIfEqual {116}
	111 Or W10, W10, 0x80000000
	112 Move [X9], W10
	113 Move W9, [X19+28]
	114 Add W9, W9, 1
	115 Move [X19+28], W9
	116 Move X10, [X8+24]
	117 Add X11, X23, X27
	118 Add W25, W25, 1
	119 And X9, X10, 0
	120 NotImplemented "Instruction SDIV not yet implemented."
	121 NotImplemented "Instruction CMP not yet implemented."
	122 NotImplemented "Instruction MSUB not yet implemented."
	123 Add W31, W26, 1
	124 Call 0x1C17D44
	125 Move X8, [X19+16]
	126 Move W9, 1
	127 Move [X19+44], W9
	128 Compare X8, 0
	129 JumpIfEqual {190}
	130 Move W9, [X8+24]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move W9, 24
	133 NotImplemented "Instruction SMADDL not yet implemented."
	134 Add W31, W26, 1
	135 NotImplemented "Instruction CSEL not yet implemented."
	136 Call 0x1C17D44
	137 Move X8, [X19+16]
	138 Move W9, 1
	139 Move [X19+44], W9
	140 Compare X8, 0
	141 JumpIfEqual {190}
	142 Move W9, [X8+24]
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move W9, 24
	145 NotImplemented "Instruction SMADDL not yet implemented."
	146 Move W9, [X8+48]
	147 Move [X8+32], X20
	148 Move [X8+40], X21
	149 Or W9, W9, W24
	150 Move [X8+48], W9
	151 Move W8, [X19+24]
	152 Add W8, W8, 1
	153 Move [X19+24], W8
	154 Move W20, [X19+40]
	155 Call 0x1C17D44
	156 Call 0x1C17D44
	157 Add W8, W20, 1
	158 Move [X19+40], W8
	159 Call 0x1C17D44
	160 Move [X19+44], W31
	161 Move X20, [X31+80]
	162 Move X19, [X31+88]
	163 Move X22, [X31+64]
	164 Move X21, [X31+72]
	165 Move X24, [X31+48]
	166 Move X23, [X31+56]
	167 Move X26, [X31+32]
	168 Move X25, [X31+40]
	169 Move X28, [X31+16]
	170 Move X27, [X31+24]
	171 Move X29, [X31+96]
	172 Move X30, [X31+104]
	173 Return 
	174 Move TEMP, X22
	175 And TEMP, TEMP, 1
	176 Compare TEMP, 1
	177 JumpIfEqual {226}
	178 Call 0x1C17D44
	179 Move X8, [X19+16]
	180 Move W9, 1
	181 Move [X19+44], W9
	182 Compare X8, 0
	183 JumpIfEqual {190}
	184 Move W9, [X8+24]
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Move W9, 24
	187 NotImplemented "Instruction MADD not yet implemented."
	188 Move [X8+40], X21
	189 Call 0x1C17F28
	190 Call 0x1C17F20
	191 Move X0, 0xD9E000
	192 Move X0, [X0+1320]
	193 Call 0x1C17D08
	194 Call 0x1C17F10
	195 Move X19, X0
	196 Move X0, 0xDC3000
	197 Move X0, [X0+112]
	198 Call 0x1C17D08
	199 Move X20, X0
	200 Move X0, 0xDD0000
	201 Move X0, [X0+648]
	202 Call 0x1C17D08
	203 Move X2, X0
	204 Move X0, X19
	205 Move X1, X20
	206 Move X3, X31
	207 Call ArgumentNullException..ctor, X0, X1, X2
	208 Move X0, 0xD99000
	209 Move X0, [X0+1456]
	210 Call 0x1C17D08
	211 Call 0x1C17F10
	212 Move X19, X0
	213 Move X0, 0xDD0000
	214 Move X0, [X0+1776]
	215 Call 0x1C17D08
	216 Move X1, X0
	217 Move X0, X19
	218 Move X2, X31
	219 Call InvalidOperationException..ctor, X0, X1
	220 Move X0, 0xDD0000
	221 Move X0, [X0+1784]
	222 Call 0x1C17D08
	223 Move X1, X0
	224 Move X0, X19
	225 Call 0x1C17DEC
	226 Move X19, [X19+16]
	227 Move X0, X19
	228 Call 0x19913C0
	229 Move X0, X19
	230 Move X1, X23
	231 Call 0x1BB9F5C
	232 Move X19, [X0]
	233 Move X0, 0xDD0000
	234 Move X0, [X0+688]
	235 Call 0x1C17D08
	236 Move X1, X19
	237 Move X2, X20
	238 Move X3, X31
	239 Call SR.Format, X0, X1, X2
	240 Move X19, X0
	241 Move X0, 0xDA1000
	242 Move X0, [X0+1400]
	243 Call 0x1C17D08
	244 Call 0x1C17F10
	245 Move X1, X19
	246 Move X2, X31
	247 Move X20, X0
	248 Call ArgumentException..ctor, X0, X1
	249 Move X0, 0xDD0000
	250 Move X0, [X0+1784]
	251 Call 0x1C17D08
	252 Move X1, X0
	253 Move X0, X20
	254 Call 0x1C17DEC

Method: System.Void putEntry(System.Collections.Hashtable/bucket[] newBuckets, System.Object key, System.Object nvalue, System.Int32 hashcode)

Disassembly:
	0x0335C338 LDR X8, [X8 + 0x790]
	0x0335C33C MOV X2, X0
	0x0335C340 MOV X0, X25
	0x0335C344 MOV X3, X31
	0x0335C348 LDR X1, [X8]
	0x0335C34C BL 0x32A9678
	0x0335C350 CBZ X0, 0x335C628
	0x0335C354 ADRP X8, 0xDCE000
	0x0335C358 LDR X8, [X8 + 0x338]
	0x0335C35C MOV X26, X0
	0x0335C360 LDR X27, [X8]
	0x0335C364 MOV X1, X27
	0x0335C368 BL 0x1C16E00
	0x0335C36C MOV X25, X0
	0x0335C370 CBNZ X0, 0x335C634
	0x0335C374 B 0x335C7F0
	0x0335C378 MOVZ W8, 0xB660
	0x0335C37C MOVK W8, 0xC80A0000
	0x0335C380 CMP W0, W8
	0x0335C384 B.EQ 0x335C5C4
	0x0335C388 MOVZ W8, 0xA972
	0x0335C38C MOVK W8, 0xCF9D0000
	0x0335C390 CMP W0, W8
	0x0335C394 B.NE 0x335C634
	0x0335C398 ADRP X8, 0xDCE000
	0x0335C39C LDR X8, [X8 + 0x788]
	0x0335C3A0 MOV X0, X26
	0x0335C3A4 MOV X2, X31
	0x0335C3A8 LDR X1, [X8]
	0x0335C3AC BL 0x321BA08
	0x0335C3B0 TBZ X0, 0x0, 0x335C634
	0x0335C3B4 LDR X0, [X31 + 0x8]
	0x0335C3B8 CBZ X0, 0x335C7EC
	0x0335C3BC ADRP X8, 0xDCE000
	0x0335C3C0 LDR X8, [X8 + 0x788]
	0x0335C3C4 MOV X2, X31
	0x0335C3C8 LDR X1, [X8]
	0x0335C3CC BL 0x32A9DF0
	0x0335C3D0 STR S0, [X19 + 0x24]
	0x0335C3D4 B 0x335C634
	0x0335C3D8 ADRP X8, 0xDC1000
	0x0335C3DC LDR X8, [X8 + 0x2D0]
	0x0335C3E0 MOV X0, X26
	0x0335C3E4 MOV X2, X31

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {49}
	004 Move X8, [X1+24]
	005 Move W9, 101
	006 Multiply W10, W4, W9
	007 Subtract W11, W8, 1
	008 NotImplemented "Instruction UDIV not yet implemented."
	009 NotImplemented "Instruction UDIV not yet implemented."
	010 NotImplemented "Instruction MSUB not yet implemented."
	011 And X9, X8, 0
	012 NotImplemented "Instruction MSUB not yet implemented."
	013 Add W10, W10, 1
	014 Move W11, 24
	015 NotImplemented "Instruction SMADDL not yet implemented."
	016 Add X13, X13, 32
	017 Move X14, [X13]
	018 Move X12, W12
	019 Compare X14, 0
	020 JumpIfEqual {40}
	021 Move X15, [X0+16]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 NotImplemented "Instruction MADD not yet implemented."
	024 Add X13, X13, 48
	025 Move W14, [X13]
	026 Move TEMP, X14
	027 And TEMP, TEMP, -2147483648
	028 Compare TEMP, -2147483648
	029 JumpIfEqual {35}
	030 Or W14, W14, 0x80000000
	031 Move [X13], W14
	032 Move W13, [X0+28]
	033 Add W13, W13, 1
	034 Move [X0+28], W13
	035 Add X12, X12, X10
	036 NotImplemented "Instruction SDIV not yet implemented."
	037 NotImplemented "Instruction MSUB not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Call 0x1C17F28
	040 Move W8, 24
	041 NotImplemented "Instruction MADD not yet implemented."
	042 Move [X8+40], X3
	043 Move [X13], X2
	044 Move W9, [X8+48]
	045 Or W9, W9, W4
	046 Move [X8+48], W9
	047 Move X30, [X31+16]
	048 Return 
	049 Call 0x1C17F20

Method: System.Void Remove(System.Object key)

Disassembly:
	0x0335C7F0 MOV X0, X26
	0x0335C7F4 MOV X1, X27
	0x0335C7F8 BL 0x1C171E0
	0x0335C7FC ADRP X0, 0xDC1000
	0x0335C800 LDR X0, [X0 + 0x2E0]
	0x0335C804 BL 0x1C16D08
	0x0335C808 BL 0x1C16F10
	0x0335C80C MOV X19, X0
	0x0335C810 ADRP X0, 0xDC1000
	0x0335C814 LDR X0, [X0 + 0x2E8]
	0x0335C818 B 0x335C7C0
	0x0335C81C ADRP X0, 0xDC1000
	0x0335C820 LDR X0, [X0 + 0x2E0]
	0x0335C824 BL 0x1C16D08
	0x0335C828 BL 0x1C16F10
	0x0335C82C MOV X19, X0
	0x0335C830 ADRP X0, 0xDC2000
	0x0335C834 LDR X0, [X0 + 0xF10]
	0x0335C838 B 0x335C7C0
	0x0335C83C ADRP X0, 0xDC1000
	0x0335C840 LDR X0, [X0 + 0x2E0]
	0x0335C844 BL 0x1C16D08
	0x0335C848 BL 0x1C16F10
	0x0335C84C MOV X19, X0
	0x0335C850 ADRP X0, 0xDC1000
	0x0335C854 LDR X0, [X0 + 0x2F8]
	0x0335C858 B 0x335C7C0
	0x0335C85C ADRP X0, 0xDC1000
	0x0335C860 LDR X0, [X0 + 0x2E0]
	0x0335C864 BL 0x1C16D08
	0x0335C868 BL 0x1C16F10
	0x0335C86C MOV X19, X0
	0x0335C870 ADRP X0, 0xDCE000
	0x0335C874 LDR X0, [X0 + 0x7B0]
	0x0335C878 B 0x335C7C0
	0x0335C87C STR X30, [X31 - 0x30]!
	0x0335C880 STP X22, X21, [X31 + 0x10]
	0x0335C884 STP X20, X19, [X31 + 0x20]
	0x0335C888 CBZ X0, 0x335C8E0
	0x0335C88C LDR W8, [X0 + 0x10]
	0x0335C890 MOVZ W20, 0x9DC5
	0x0335C894 MOV X19, X0
	0x0335C898 MOVK W20, 0x811C0000
	0x0335C89C CMP W8, 0x1
	0x0335C8A0 B.LT 0x335C8E4
	0x0335C8A4 MOVZ W22, 0x193
	0x0335C8A8 MOV W21, W31
	0x0335C8AC MOVK W22, 0x1000000
	0x0335C8B0 MOV X0, X19
	0x0335C8B4 MOV W1, W21
	0x0335C8B8 MOV X2, X31
	0x0335C8BC BL 0x3222A1C
	0x0335C8C0 LDR W8, [X19 + 0x10]
	0x0335C8C4 AND W9, W0, 0xFFFF
	0x0335C8C8 EOR W9, W20, W9, 0x0
	0x0335C8CC ADD W21, W21, 0x1
	0x0335C8D0 CMP W21, W8
	0x0335C8D4 MUL W20, W9, W22
	0x0335C8D8 B.LT 0x335C8B0
	0x0335C8DC B 0x335C8E4
	0x0335C8E0 MOV W20, W31
	0x0335C8E4 MOV W0, W20
	0x0335C8E8 LDP X20, X19, [X31 + 0x20]
	0x0335C8EC LDP X22, X21, [X31 + 0x10]
	0x0335C8F0 LDR X30, [X31], #0x30
	0x0335C8F4 RET
	0x0335C8F8 STP X30, X21, [X31 - 0x20]!
	0x0335C8FC STP X20, X19, [X31 + 0x10]
	0x0335C900 CBZ X1, 0x335C964
	0x0335C904 MOV X20, X1
	0x0335C908 MOV X21, X0
	0x0335C90C MOV X0, X1
	0x0335C910 MOV X1, X31
	0x0335C914 MOV W19, W2
	0x0335C918 BL 0x339FCE4
	0x0335C91C CMP W0, 0x1
	0x0335C920 B.NE 0x335C998
	0x0335C924 TBNZ X19, 0x1F, 0x335C9E0
	0x0335C928 MOV X0, X20
	0x0335C92C MOV X1, X31
	0x0335C930 BL 0x3395B7C
	0x0335C934 LDR X8, [X21 + 0x10]
	0x0335C938 CBZ X8, 0x335CA28
	0x0335C93C LDR W9, [X8 + 0x18]
	0x0335C940 SUB W10, W0, W19
	0x0335C944 CMP W10, W9
	0x0335C948 B.LT 0x335CA2C
	0x0335C94C MOV X1, X20
	0x0335C950 MOV W2, W19
	0x0335C954 LDP X20, X19, [X31 + 0x10]
	0x0335C958 MOV X0, X8
	0x0335C95C LDP X30, X21, [X31], #0x20
	0x0335C960 B 0x335AB94
	0x0335C964 ADRP X0, 0xD9C000
	0x0335C968 LDR X0, [X0 + 0x528]
	0x0335C96C BL 0x1C16D08
	0x0335C970 BL 0x1C16F10
	0x0335C974 MOV X19, X0
	0x0335C978 ADRP X0, 0xDBF000
	0x0335C97C LDR X0, [X0 + 0x640]
	0x0335C980 BL 0x1C16D08
	0x0335C984 MOV X1, X0
	0x0335C988 MOV X0, X19
	0x0335C98C MOV X2, X31
	0x0335C990 BL 0x330E100
	0x0335C994 B 0x335CA5C
	0x0335C998 ADRP X0, 0xD9F000
	0x0335C99C LDR X0, [X0 + 0x578]
	0x0335C9A0 BL 0x1C16D08
	0x0335C9A4 BL 0x1C16F10
	0x0335C9A8 MOV X19, X0
	0x0335C9AC ADRP X0, 0xDC0000
	0x0335C9B0 LDR X0, [X0 + 0x308]
	0x0335C9B4 BL 0x1C16D08
	0x0335C9B8 MOV X20, X0

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Compare X1, 0
	011 JumpIfEqual {108}
	012 Move X8, [X0+16]
	013 Move X19, X0
	014 Compare X8, 0
	015 JumpIfEqual {107}
	016 Move X9, [X19]
	017 Move X23, [X8+24]
	018 Move X0, X19
	019 Move X20, X1
	020 Move X8, [X9+776]
	021 Move X2, [X9+784]
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Move X8, [X19+16]
	024 Compare X8, 0
	025 JumpIfEqual {107}
	026 And W22, W0, 0x7FFFFFFF
	027 Move W10, 101
	028 Move X9, [X8+24]
	029 Subtract W11, W23, 1
	030 Multiply W10, W22, W10
	031 NotImplemented "Instruction UDIV not yet implemented."
	032 NotImplemented "Instruction MSUB not yet implemented."
	033 Add W23, W10, 1
	034 NotImplemented "Instruction UDIV not yet implemented."
	035 Move W21, W31
	036 NotImplemented "Instruction MSUB not yet implemented."
	037 Move W24, 24
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X25, W10
	040 NotImplemented "Instruction MADD not yet implemented."
	041 Move W26, [X9+48]
	042 And W9, W26, 0x7FFFFFFF
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X9, [X19]
	045 NotImplemented "Instruction NOP not yet implemented."
	046 NotImplemented "Instruction MADD not yet implemented."
	047 Move X1, [X8+32]
	048 Move X0, X19
	049 Move X8, [X9+808]
	050 Move X3, [X9+816]
	051 Move X2, X20
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {70}
	057 Move X8, [X19+16]
	058 Compare X8, 0
	059 JumpIfEqual {107}
	060 Move TEMP, X26
	061 And TEMP, TEMP, -2147483648
	062 Compare TEMP, -2147483648
	063 JumpIfNotEqual {96}
	064 Move W9, [X8+24]
	065 Add X10, X25, X23
	066 Add W21, W21, 1
	067 NotImplemented "Instruction SDIV not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 NotImplemented "Instruction MSUB not yet implemented."
	070 Call 0x1C17D44
	071 Move X8, [X19+16]
	072 Move W9, 1
	073 Move [X19+44], W9
	074 Compare X8, 0
	075 JumpIfEqual {107}
	076 Move W9, [X8+24]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move W9, 24
	079 NotImplemented "Instruction MADD not yet implemented."
	080 Move W10, [X9+48]
	081 And W10, W10, 0x80000000
	082 NotImplemented "Instruction CSEL not yet implemented."
	083 Move [X9+48], W10
	084 Move [X9+32], X8
	085 Move [X9+40], X31
	086 Move W8, [X19+24]
	087 Move W20, [X19+40]
	088 Subtract W8, W8, 1
	089 Move [X19+24], W8
	090 Call 0x1C17D44
	091 Call 0x1C17D44
	092 Add W8, W20, 1
	093 Move [X19+40], W8
	094 Call 0x1C17D44
	095 Move [X19+44], W31
	096 Move X20, [X31+64]
	097 Move X19, [X31+72]
	098 Move X22, [X31+48]
	099 Move X21, [X31+56]
	100 Move X24, [X31+32]
	101 Move X23, [X31+40]
	102 Move X26, [X31+16]
	103 Move X25, [X31+24]
	104 Move X30, [X31+80]
	105 Return 
	106 Call 0x1C17F28
	107 Call 0x1C17F20
	108 Move X0, 0xD9D000
	109 Move X0, [X0+1320]
	110 Call 0x1C17D08
	111 Call 0x1C17F10
	112 Move X19, X0
	113 Move X0, 0xDC2000
	114 Move X0, [X0+112]
	115 Call 0x1C17D08
	116 Move X20, X0
	117 Move X0, 0xDCF000
	118 Move X0, [X0+648]
	119 Call 0x1C17D08
	120 Move X2, X0
	121 Move X0, X19
	122 Move X1, X20
	123 Move X3, X31
	124 Call ArgumentNullException..ctor, X0, X1, X2
	125 Move X0, 0xDCF000
	126 Move X0, [X0+1840]
	127 Call 0x1C17D08
	128 Move X1, X0
	129 Move X0, X19
	130 Call 0x1C17DEC

Method: System.Object get_SyncRoot()

Disassembly:
	0x0335C9BC ADRP X0, 0xDBF000
	0x0335C9C0 LDR X0, [X0 + 0x640]
	0x0335C9C4 BL 0x1C16D08
	0x0335C9C8 MOV X2, X0
	0x0335C9CC MOV X0, X19
	0x0335C9D0 MOV X1, X20
	0x0335C9D4 MOV X3, X31
	0x0335C9D8 BL 0x330E16C
	0x0335C9DC B 0x335CA5C
	0x0335C9E0 ADRP X0, 0xD9F000
	0x0335C9E4 LDR X0, [X0 + 0x760]
	0x0335C9E8 BL 0x1C16D08
	0x0335C9EC BL 0x1C16F10
	0x0335C9F0 MOV X19, X0
	0x0335C9F4 ADRP X0, 0xDC1000
	0x0335C9F8 LDR X0, [X0 + 0x2B0]
	0x0335C9FC BL 0x1C16D08
	0x0335CA00 MOV X20, X0
	0x0335CA04 ADRP X0, 0xDBF000
	0x0335CA08 LDR X0, [X0 + 0x670]
	0x0335CA0C BL 0x1C16D08
	0x0335CA10 MOV X2, X0
	0x0335CA14 MOV X0, X19
	0x0335CA18 MOV X1, X20
	0x0335CA1C MOV X3, X31
	0x0335CA20 BL 0x3311888
	0x0335CA24 B 0x335CA5C
	0x0335CA28 BL 0x1C16F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1081000
	005 Move W8, [X20+3604]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xD9E000
	012 Move X0, [X0+3264]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3604], W8
	016 Add X19, X19, 72
	017 Move X0, [X19]
	018 Compare X0, 0
	019 JumpIfNotEqual {32}
	020 Move X8, 0xD9E000
	021 Move X8, [X8+3264]
	022 Move X0, [X8]
	023 Call 0x1C17F10
	024 Move X1, X31
	025 Move X20, X0
	026 Call Object..ctor, X0
	027 Move X0, X19
	028 Move X1, X20
	029 Move X2, X31
	030 Call 0x1C25138
	031 Move X0, [X19]
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0

Method: System.Int32 get_Count()

Disassembly:
	0x0335CA2C ADRP X0, 0xD9F000
	0x0335CA30 LDR X0, [X0 + 0x578]

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.Collections.Hashtable Synchronized(System.Collections.Hashtable table)

Disassembly:
	0x0335CA34 BL 0x1C16D08
	0x0335CA38 BL 0x1C16F10
	0x0335CA3C MOV X19, X0
	0x0335CA40 ADRP X0, 0xDC0000
	0x0335CA44 LDR X0, [X0 + 0x318]
	0x0335CA48 BL 0x1C16D08
	0x0335CA4C MOV X1, X0
	0x0335CA50 MOV X0, X19
	0x0335CA54 MOV X2, X31
	0x0335CA58 BL 0x3314A68
	0x0335CA5C ADRP X0, 0xDCE000
	0x0335CA60 LDR X0, [X0 + 0x7B8]
	0x0335CA64 BL 0x1C16D08
	0x0335CA68 MOV X1, X0
	0x0335CA6C MOV X0, X19
	0x0335CA70 BL 0x1C16DEC
	0x0335CA74 STP X30, X21, [X31 - 0x20]!
	0x0335CA78 STP X20, X19, [X31 + 0x10]
	0x0335CA7C ADRP X21, 0x1080000
	0x0335CA80 ADRP X20, 0xDCE000
	0x0335CA84 LDRB W8, [X21 + 0xE19]
	0x0335CA88 LDR X20, [X20 + 0x718]
	0x0335CA8C MOV X19, X0
	0x0335CA90 TBNZ X8, 0x0, 0x335CAA8
	0x0335CA94 ADRP X0, 0xDCE000
	0x0335CA98 LDR X0, [X0 + 0x718]
	0x0335CA9C BL 0x1C16CF4
	0x0335CAA0 MOVZ W8, 0x1
	0x0335CAA4 STRB W8, [X21 + 0xE19]
	0x0335CAA8 LDR X0, [X20]
	0x0335CAAC LDR X19, [X19 + 0x10]
	0x0335CAB0 BL 0x1C16F10
	0x0335CAB4 MOVZ W2, 0x1
	0x0335CAB8 MOV X1, X19
	0x0335CABC MOV X20, X0
	0x0335CAC0 BL 0x335B444
	0x0335CAC4 MOV X0, X20
	0x0335CAC8 LDP X20, X19, [X31 + 0x10]
	0x0335CACC LDP X30, X21, [X31], #0x20
	0x0335CAD0 RET
	0x0335CAD4 STR X30, [X31 - 0x10]!
	0x0335CAD8 LDR X0, [X0 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1081000
	005 Move W8, [X20+3605]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xDCF000
	012 Move X0, [X0+1848]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3605], W8
	016 Compare X19, 0
	017 JumpIfEqual {31}
	018 Move X8, 0xDCF000
	019 Move X8, [X8+1848]
	020 Move X0, [X8]
	021 Call 0x1C17F10
	022 Move X1, X31
	023 Move X20, X0
	024 Call Object..ctor, X0
	025 Move [X20+80], X19
	026 Move X0, X20
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Return X0
	031 Move X0, 0xD9D000
	032 Move X0, [X0+1320]
	033 Call 0x1C17D08
	034 Call 0x1C17F10
	035 Move X19, X0
	036 Move X0, 0xDCF000
	037 Move X0, [X0+1856]
	038 Call 0x1C17D08
	039 Move X1, X0
	040 Move X0, X19
	041 Move X2, X31
	042 Call ArgumentNullException..ctor, X0, X1
	043 Move X0, 0xDCF000
	044 Move X0, [X0+1864]
	045 Call 0x1C17D08
	046 Move X1, X0
	047 Move X0, X19
	048 Call 0x1C17DEC

Method: System.Void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x0335CB04 LDR X8, [X0]
	0x0335CB08 LDR X2, [X8 + 0x368]
	0x0335CB0C LDR X1, [X8 + 0x370]
	0x0335CB10 LDR X30, [X31], #0x10
	0x0335CB14 BR X2
	0x0335CB18 BL 0x1C16F20
	0x0335CB1C STR X30, [X31 - 0x10]!
	0x0335CB20 LDR X8, [X0 + 0x10]
	0x0335CB24 CBZ X8, 0x335CB34
	0x0335CB28 LDR W0, [X8 + 0x18]
	0x0335CB2C LDR X30, [X31], #0x10
	0x0335CB30 RET
	0x0335CB34 BL 0x1C16F20
	0x0335CB38 STP X30, X21, [X31 - 0x20]!
	0x0335CB3C STP X20, X19, [X31 + 0x10]
	0x0335CB40 CBZ X1, 0x335CBA4
	0x0335CB44 MOV X20, X1
	0x0335CB48 MOV X21, X0
	0x0335CB4C MOV X0, X1
	0x0335CB50 MOV X1, X31
	0x0335CB54 MOV W19, W2
	0x0335CB58 BL 0x339FCE4
	0x0335CB5C CMP W0, 0x1
	0x0335CB60 B.NE 0x335CBD8
	0x0335CB64 TBNZ X19, 0x1F, 0x335CC20
	0x0335CB68 MOV X0, X20
	0x0335CB6C MOV X1, X31
	0x0335CB70 BL 0x3395B7C
	0x0335CB74 LDR X8, [X21 + 0x10]
	0x0335CB78 CBZ X8, 0x335CC68
	0x0335CB7C LDR W9, [X8 + 0x18]
	0x0335CB80 SUB W10, W0, W19
	0x0335CB84 CMP W10, W9
	0x0335CB88 B.LT 0x335CC6C
	0x0335CB8C MOV X1, X20
	0x0335CB90 MOV W2, W19
	0x0335CB94 LDP X20, X19, [X31 + 0x10]
	0x0335CB98 MOV X0, X8
	0x0335CB9C LDP X30, X21, [X31], #0x20
	0x0335CBA0 B 0x335AEC4
	0x0335CBA4 ADRP X0, 0xD9C000
	0x0335CBA8 LDR X0, [X0 + 0x528]
	0x0335CBAC BL 0x1C16D08
	0x0335CBB0 BL 0x1C16F10
	0x0335CBB4 MOV X19, X0
	0x0335CBB8 ADRP X0, 0xDBF000
	0x0335CBBC LDR X0, [X0 + 0x640]
	0x0335CBC0 BL 0x1C16D08
	0x0335CBC4 MOV X1, X0
	0x0335CBC8 MOV X0, X19
	0x0335CBCC MOV X2, X31
	0x0335CBD0 BL 0x330E100
	0x0335CBD4 B 0x335CC9C
	0x0335CBD8 ADRP X0, 0xD9F000
	0x0335CBDC LDR X0, [X0 + 0x578]
	0x0335CBE0 BL 0x1C16D08
	0x0335CBE4 BL 0x1C16F10
	0x0335CBE8 MOV X19, X0
	0x0335CBEC ADRP X0, 0xDC0000
	0x0335CBF0 LDR X0, [X0 + 0x308]
	0x0335CBF4 BL 0x1C16D08
	0x0335CBF8 MOV X20, X0
	0x0335CBFC ADRP X0, 0xDBF000
	0x0335CC00 LDR X0, [X0 + 0x640]
	0x0335CC04 BL 0x1C16D08
	0x0335CC08 MOV X2, X0
	0x0335CC0C MOV X0, X19
	0x0335CC10 MOV X1, X20
	0x0335CC14 MOV X3, X31
	0x0335CC18 BL 0x330E16C
	0x0335CC1C B 0x335CC9C
	0x0335CC20 ADRP X0, 0xD9F000
	0x0335CC24 LDR X0, [X0 + 0x760]
	0x0335CC28 BL 0x1C16D08
	0x0335CC2C BL 0x1C16F10
	0x0335CC30 MOV X19, X0
	0x0335CC34 ADRP X0, 0xDC1000
	0x0335CC38 LDR X0, [X0 + 0x2B0]
	0x0335CC3C BL 0x1C16D08
	0x0335CC40 MOV X20, X0
	0x0335CC44 ADRP X0, 0xDBF000
	0x0335CC48 LDR X0, [X0 + 0x670]
	0x0335CC4C BL 0x1C16D08
	0x0335CC50 MOV X2, X0
	0x0335CC54 MOV X0, X19
	0x0335CC58 MOV X1, X20
	0x0335CC5C MOV X3, X31
	0x0335CC60 BL 0x3311888
	0x0335CC64 B 0x335CC9C
	0x0335CC68 BL 0x1C16F20
	0x0335CC6C ADRP X0, 0xD9F000
	0x0335CC70 LDR X0, [X0 + 0x578]
	0x0335CC74 BL 0x1C16D08
	0x0335CC78 BL 0x1C16F10
	0x0335CC7C MOV X19, X0
	0x0335CC80 ADRP X0, 0xDC0000
	0x0335CC84 LDR X0, [X0 + 0x318]
	0x0335CC88 BL 0x1C16D08
	0x0335CC8C MOV X1, X0
	0x0335CC90 MOV X0, X19
	0x0335CC94 MOV X2, X31
	0x0335CC98 BL 0x3314A68
	0x0335CC9C ADRP X0, 0xDCE000
	0x0335CCA0 LDR X0, [X0 + 0x7C0]
	0x0335CCA4 BL 0x1C16D08
	0x0335CCA8 MOV X1, X0
	0x0335CCAC MOV X0, X19
	0x0335CCB0 BL 0x1C16DEC
	0x0335CCB4 STP X30, X21, [X31 - 0x20]!
	0x0335CCB8 STP X20, X19, [X31 + 0x10]
	0x0335CCBC ADRP X21, 0x1080000
	0x0335CCC0 ADRP X20, 0xDCE000
	0x0335CCC4 LDRB W8, [X21 + 0xE1A]
	0x0335CCC8 LDR X20, [X20 + 0x718]
	0x0335CCCC MOV X19, X0
	0x0335CCD0 TBNZ X8, 0x0, 0x335CCE8
	0x0335CCD4 ADRP X0, 0xDCE000
	0x0335CCD8 LDR X0, [X0 + 0x718]
	0x0335CCDC BL 0x1C16CF4
	0x0335CCE0 MOVZ W8, 0x1
	0x0335CCE4 STRB W8, [X21 + 0xE1A]
	0x0335CCE8 LDR X0, [X20]
	0x0335CCEC LDR X19, [X19 + 0x10]
	0x0335CCF0 BL 0x1C16F10
	0x0335CCF4 MOVZ W2, 0x2
	0x0335CCF8 MOV X1, X19
	0x0335CCFC MOV X20, X0
	0x0335CD00 BL 0x335B444
	0x0335CD04 MOV X0, X20
	0x0335CD08 LDP X20, X19, [X31 + 0x10]
	0x0335CD0C LDP X30, X21, [X31], #0x20
	0x0335CD10 RET
	0x0335CD14 STR X30, [X31 - 0x10]!
	0x0335CD18 LDR X0, [X0 + 0x10]
	0x0335CD1C CBZ X0, 0x335CD34
	0x0335CD20 LDR X8, [X0]
	0x0335CD24 LDR X2, [X8 + 0x318]
	0x0335CD28 LDR X1, [X8 + 0x320]
	0x0335CD2C LDR X30, [X31], #0x10
	0x0335CD30 BR X2
	0x0335CD34 BL 0x1C16F20
	0x0335CD38 STR X30, [X31 - 0x10]!
	0x0335CD3C LDR X0, [X0 + 0x10]
	0x0335CD40 CBZ X0, 0x335CD58
	0x0335CD44 LDR X8, [X0]
	0x0335CD48 LDR X2, [X8 + 0x368]
	0x0335CD4C LDR X1, [X8 + 0x370]
	0x0335CD50 LDR X30, [X31], #0x10
	0x0335CD54 BR X2
	0x0335CD58 BL 0x1C16F20
	0x0335CD5C STR X30, [X31 - 0x10]!
	0x0335CD60 LDR X8, [X0 + 0x10]
	0x0335CD64 CBZ X8, 0x335CD74
	0x0335CD68 LDR W0, [X8 + 0x18]
	0x0335CD6C LDR X30, [X31], #0x10
	0x0335CD70 RET
	0x0335CD74 BL 0x1C16F20
	0x0335CD78 STP X30, X19, [X31 - 0x10]!
	0x0335CD7C BL 0x335A3CC
	0x0335CD80 ADRP X0, 0xDC2000
	0x0335CD84 LDR X0, [X0 + 0xC50]
	0x0335CD88 BL 0x1C16D08
	0x0335CD8C BL 0x1C16F10
	0x0335CD90 MOV X1, X31
	0x0335CD94 MOV X19, X0
	0x0335CD98 BL 0x338E344
	0x0335CD9C ADRP X0, 0xDCE000
	0x0335CDA0 LDR X0, [X0 + 0x7C8]
	0x0335CDA4 BL 0x1C16D08
	0x0335CDA8 MOV X1, X0
	0x0335CDAC MOV X0, X19
	0x0335CDB0 BL 0x1C16DEC
	0x0335CDB4 STP X30, X19, [X31 - 0x10]!
	0x0335CDB8 ADRP X0, 0xDC2000
	0x0335CDBC LDR X0, [X0 + 0xC50]
	0x0335CDC0 BL 0x1C16D08
	0x0335CDC4 BL 0x1C16F10
	0x0335CDC8 MOV X1, X31
	0x0335CDCC MOV X19, X0
	0x0335CDD0 BL 0x338E344
	0x0335CDD4 ADRP X0, 0xDCE000
	0x0335CDD8 LDR X0, [X0 + 0x7D0]
	0x0335CDDC BL 0x1C16D08
	0x0335CDE0 MOV X1, X0
	0x0335CDE4 MOV X0, X19
	0x0335CDE8 BL 0x1C16DEC
	0x0335CDEC STR X30, [X31 - 0x10]!
	0x0335CDF0 LDR X0, [X0 + 0x50]
	0x0335CDF4 CBZ X0, 0x335CE0C
	0x0335CDF8 LDR X8, [X0]
	0x0335CDFC LDR X2, [X8 + 0x378]
	0x0335CE00 LDR X1, [X8 + 0x380]
	0x0335CE04 LDR X30, [X31], #0x10
	0x0335CE08 BR X2
	0x0335CE0C BL 0x1C16F20
	0x0335CE10 MOVZ W0, 0x1
	0x0335CE14 RET
	0x0335CE18 STR X30, [X31 - 0x10]!
	0x0335CE1C LDR X0, [X0 + 0x50]
	0x0335CE20 CBZ X0, 0x335CE38
	0x0335CE24 LDR X8, [X0]
	0x0335CE28 LDR X3, [X8 + 0x2D8]
	0x0335CE2C LDR X2, [X8 + 0x2E0]
	0x0335CE30 LDR X30, [X31], #0x10
	0x0335CE34 BR X3
	0x0335CE38 BL 0x1C16F20
	0x0335CE3C STR X30, [X31 - 0x30]!
	0x0335CE40 STP X22, X21, [X31 + 0x10]
	0x0335CE44 STP X20, X19, [X31 + 0x20]
	0x0335CE48 MOV X22, X0
	0x0335CE4C LDR X0, [X0 + 0x50]
	0x0335CE50 CBZ X0, 0x335CECC
	0x0335CE54 LDR X8, [X0]
	0x0335CE58 MOV X21, X1
	0x0335CE5C MOV X20, X2
	0x0335CE60 LDR X9, [X8 + 0x368]
	0x0335CE64 LDR X1, [X8 + 0x370]
	0x0335CE68 BLR X9
	0x0335CE6C MOV X19, X0
	0x0335CE70 STRB W31, [X31 + 0xC]
	0x0335CE74 ADD X1, X31, 0xC
	0x0335CE78 MOV X2, X31
	0x0335CE7C BL 0x33DE64C
	0x0335CE80 LDR X0, [X22 + 0x50]
	0x0335CE84 CBZ X0, 0x335CED8
	0x0335CE88 LDR X8, [X0]
	0x0335CE8C LDR X9, [X8 + 0x2E8]
	0x0335CE90 LDR X3, [X8 + 0x2F0]
	0x0335CE94 MOV X1, X21
	0x0335CE98 MOV X2, X20
	0x0335CE9C BLR X9
	0x0335CEA0 MOV X20, X31
	0x0335CEA4 LDRB W8, [X31 + 0xC]
	0x0335CEA8 CBZ W8, 0x335CEB8
	0x0335CEAC MOV X0, X19
	0x0335CEB0 MOV X1, X31
	0x0335CEB4 BL 0x33E14E4
	0x0335CEB8 CBNZ X20, 0x335CED0
	0x0335CEBC LDP X20, X19, [X31 + 0x20]
	0x0335CEC0 LDP X22, X21, [X31 + 0x10]
	0x0335CEC4 LDR X30, [X31], #0x30
	0x0335CEC8 RET
	0x0335CECC BL 0x1C16F20
	0x0335CED0 MOV X0, X20
	0x0335CED4 BL 0x1C16F18
	0x0335CED8 BL 0x1C16F20
	0x0335CEDC B 0x335CEE0
	0x0335CEE0 MOV X21, X0
	0x0335CEE4 CMP W1, 0x1
	0x0335CEE8 B.NE 0x335CF00
	0x0335CEEC MOV X0, X21
	0x0335CEF0 BL 0x3EB1AD0
	0x0335CEF4 LDR X20, [X0]
	0x0335CEF8 BL 0x3EB1AE0
	0x0335CEFC B 0x335CEA4
	0x0335CF00 MOV X20, X31
	0x0335CF04 B 0x335CF0C
	0x0335CF08 MOV X21, X0
	0x0335CF0C LDRB W8, [X31 + 0xC]
	0x0335CF10 CBZ W8, 0x335CF20
	0x0335CF14 MOV X0, X19
	0x0335CF18 MOV X1, X31
	0x0335CF1C BL 0x33E14E4
	0x0335CF20 CBNZ X20, 0x335CF2C
	0x0335CF24 MOV X0, X21
	0x0335CF28 BL 0x1D2C690
	0x0335CF2C MOV X0, X20
	0x0335CF30 BL 0x1C16F18
	0x0335CF34 BL 0x1990590
	0x0335CF38 STR X30, [X31 - 0x10]!
	0x0335CF3C LDR X0, [X0 + 0x50]
	0x0335CF40 CBZ X0, 0x335CF58
	0x0335CF44 LDR X8, [X0]
	0x0335CF48 LDR X2, [X8 + 0x368]
	0x0335CF4C LDR X1, [X8 + 0x370]
	0x0335CF50 LDR X30, [X31], #0x10
	0x0335CF54 BR X2
	0x0335CF58 BL 0x1C16F20
	0x0335CF5C STR X30, [X31 - 0x30]!
	0x0335CF60 STP X22, X21, [X31 + 0x10]
	0x0335CF64 STP X20, X19, [X31 + 0x20]
	0x0335CF68 MOV X22, X0
	0x0335CF6C LDR X0, [X0 + 0x50]
	0x0335CF70 CBZ X0, 0x335CFEC
	0x0335CF74 LDR X8, [X0]
	0x0335CF78 MOV X21, X1
	0x0335CF7C MOV X20, X2
	0x0335CF80 LDR X9, [X8 + 0x368]
	0x0335CF84 LDR X1, [X8 + 0x370]
	0x0335CF88 BLR X9
	0x0335CF8C MOV X19, X0
	0x0335CF90 STRB W31, [X31 + 0xC]
	0x0335CF94 ADD X1, X31, 0xC
	0x0335CF98 MOV X2, X31
	0x0335CF9C BL 0x33DE64C
	0x0335CFA0 LDR X0, [X22 + 0x50]
	0x0335CFA4 CBZ X0, 0x335CFF8
	0x0335CFA8 LDR X8, [X0]
	0x0335CFAC LDR X9, [X8 + 0x278]
	0x0335CFB0 LDR X3, [X8 + 0x280]
	0x0335CFB4 MOV X1, X21
	0x0335CFB8 MOV X2, X20
	0x0335CFBC BLR X9
	0x0335CFC0 MOV X20, X31
	0x0335CFC4 LDRB W8, [X31 + 0xC]
	0x0335CFC8 CBZ W8, 0x335CFD8
	0x0335CFCC MOV X0, X19
	0x0335CFD0 MOV X1, X31
	0x0335CFD4 BL 0x33E14E4
	0x0335CFD8 CBNZ X20, 0x335CFF0
	0x0335CFDC LDP X20, X19, [X31 + 0x20]
	0x0335CFE0 LDP X22, X21, [X31 + 0x10]
	0x0335CFE4 LDR X30, [X31], #0x30
	0x0335CFE8 RET
	0x0335CFEC BL 0x1C16F20
	0x0335CFF0 MOV X0, X20
	0x0335CFF4 BL 0x1C16F18
	0x0335CFF8 BL 0x1C16F20
	0x0335CFFC B 0x335D000
	0x0335D000 MOV X21, X0
	0x0335D004 CMP W1, 0x1
	0x0335D008 B.NE 0x335D020
	0x0335D00C MOV X0, X21
	0x0335D010 BL 0x3EB1AD0
	0x0335D014 LDR X20, [X0]
	0x0335D018 BL 0x3EB1AE0
	0x0335D01C B 0x335CFC4
	0x0335D020 MOV X20, X31
	0x0335D024 B 0x335D02C
	0x0335D028 MOV X21, X0
	0x0335D02C LDRB W8, [X31 + 0xC]
	0x0335D030 CBZ W8, 0x335D040
	0x0335D034 MOV X0, X19
	0x0335D038 MOV X1, X31
	0x0335D03C BL 0x33E14E4

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X19, 0x1081000
	011 Move W8, [X19+3606]
	012 Move X21, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {65}
	018 Move X0, 0xDCF000
	019 Move X0, [X0+1872]
	020 Call 0x1C17CF4
	021 Move X0, 0xDCF000
	022 Move X0, [X0+1880]
	023 Call 0x1C17CF4
	024 Move X0, 0xDCF000
	025 Move X0, [X0+1888]
	026 Call 0x1C17CF4
	027 Move X0, 0xDCF000
	028 Move X0, [X0+1896]
	029 Call 0x1C17CF4
	030 Move X0, 0xDCA000
	031 Move X0, [X0+352]
	032 Call 0x1C17CF4
	033 Move X0, 0xD98000
	034 Move X0, [X0+2512]
	035 Call 0x1C17CF4
	036 Move X0, 0xD98000
	037 Move X0, [X0+1728]
	038 Call 0x1C17CF4
	039 Move X0, 0xDCF000
	040 Move X0, [X0+1904]
	041 Call 0x1C17CF4
	042 Move X0, 0xDC3000
	043 Move X0, [X0+1584]
	044 Call 0x1C17CF4
	045 Move X0, 0xDCF000
	046 Move X0, [X0+1912]
	047 Call 0x1C17CF4
	048 Move X0, 0xDCF000
	049 Move X0, [X0+1920]
	050 Call 0x1C17CF4
	051 Move X0, 0xDCF000
	052 Move X0, [X0+1928]
	053 Call 0x1C17CF4
	054 Move X0, 0xDCF000
	055 Move X0, [X0+1936]
	056 Call 0x1C17CF4
	057 Move X0, 0xDC2000
	058 Move X0, [X0+720]
	059 Call 0x1C17CF4
	060 Move X0, 0xD99000
	061 Move X0, [X0+672]
	062 Call 0x1C17CF4
	063 Move W8, 1
	064 Move [X19+3606], W8
	065 Compare X21, 0
	066 JumpIfEqual {270}
	067 Move X8, [X20]
	068 Move X0, X20
	069 Move X9, [X8+872]
	070 Move X1, [X8+880]
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move X19, X0
	073 Move [X31+12], W31
	074 Add X1, X31, 12
	075 Move X2, X31
	076 Call Monitor.Enter, X0, X1
	077 Move W25, [X20+40]
	078 Call 0x1C17D44
	079 Move X8, 0xDCF000
	080 Move X8, [X8+1928]
	081 Move V0, [X20+36]
	082 Move X1, [X8]
	083 Move X0, X21
	084 Move X2, X31
	085 Call SerializationInfo.AddValue, X0, X1, V0
	086 Move W22, [X20+40]
	087 Call 0x1C17D44
	088 Move X8, 0xD99000
	089 Move X8, [X8+672]
	090 Move X1, [X8]
	091 Move X0, X21
	092 Move W2, W22
	093 Move X3, X31
	094 Call SerializationInfo.AddValue, X0, X1, X2
	095 Move X26, 0xD98000
	096 Move X22, [X20+64]
	097 Move X26, [X26+1728]
	098 Compare X22, 0
	099 JumpIfEqual {124}
	100 Move X8, 0xDCF000
	101 Move X8, [X8+1872]
	102 Move X9, [X22]
	103 Move X8, [X8]
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X8, 0xDCF000
	106 Move X0, [X26]
	107 Move X8, [X8+1888]
	108 Move W9, [X0+224]
	109 Move X23, [X8]
	110 Compare W9, 0
	111 JumpIfNotEqual {113}
	112 Call 0x1C17DFC
	113 Move X0, X23
	114 Move X1, X31
	115 Call Type.GetTypeFromHandle, X0
	116 Move X8, 0xDCF000
	117 Move X8, [X8+1920]
	118 Move X3, X0
	119 Move X1, [X8]
	120 Move X0, X21
	121 Move X2, X22
	122 Move X4, X31
	123 Call SerializationInfo.AddValue, X0, X1, X2, X3
	124 Move X8, 0xDCF000
	125 Move X0, [X26]
	126 Move X8, [X8+1880]
	127 Move W9, [X0+224]
	128 Move X22, [X8]
	129 Compare W9, 0
	130 JumpIfNotEqual {132}
	131 Call 0x1C17DFC
	132 Move X0, X22
	133 Move X1, X31
	134 Call Type.GetTypeFromHandle, X0
	135 Move X8, 0xDC2000
	136 Move X8, [X8+720]
	137 Move X3, X0
	138 Move X1, [X8]
	139 Move X0, X21
	140 Move X2, X31
	141 Move X4, X31
	142 Call SerializationInfo.AddValue, X0, X1, X2, X3
	143 Move X8, 0xDCF000
	144 Move X8, [X8+1896]
	145 Move X0, [X8]
	146 Move X1, X31
	147 Call Type.GetTypeFromHandle, X0
	148 Move X8, 0xDCF000
	149 Move X8, [X8+1936]
	150 Move X3, X0
	151 Move X1, [X8]
	152 Move X0, X21
	153 Move X2, X31
	154 Move X4, X31
	155 Call SerializationInfo.AddValue, X0, X1, X2, X3
	156 Move X8, 0xDCF000
	157 Move X0, [X26]
	158 Move X23, [X22+24]
	159 Move X8, [X8+1880]
	160 Move W9, [X0+224]
	161 Move X24, [X8]
	162 Compare W9, 0
	163 JumpIfNotEqual {165}
	164 Call 0x1C17DFC
	165 Move X0, X24
	166 Move X1, X31
	167 Call Type.GetTypeFromHandle, X0
	168 Move X8, 0xDC2000
	169 Move X8, [X8+720]
	170 Move X3, X0
	171 Move X1, [X8]
	172 Move X0, X21
	173 Move X2, X23
	174 Move X4, X31
	175 Call SerializationInfo.AddValue, X0, X1, X2, X3
	176 Move X8, 0xDCF000
	177 Move X22, [X22+16]
	178 Move X8, [X8+1896]
	179 Move X0, [X8]
	180 Move X1, X31
	181 Call Type.GetTypeFromHandle, X0
	182 Move X8, 0xDCF000
	183 Move X8, [X8+1936]
	184 Move X3, X0
	185 Move X1, [X8]
	186 Move X0, X21
	187 Move X2, X22
	188 Move X4, X31
	189 Call SerializationInfo.AddValue, X0, X1, X2, X3
	190 Move X8, [X20+16]
	191 Compare X8, 0
	192 JumpIfEqual {290}
	193 Move X9, 0xDC3000
	194 Move X9, [X9+1584]
	195 Move W2, [X8+24]
	196 Move X1, [X9]
	197 Move X0, X21
	198 Move X3, X31
	199 Call SerializationInfo.AddValue, X0, X1, X2
	200 Move X22, 0xD98000
	201 Move X22, [X22+2512]
	202 Move W1, [X20+24]
	203 Move X0, [X22]
	204 Call 0x1C17D6C
	205 Move X23, X0
	206 Move W1, [X20+24]
	207 Move X0, [X22]
	208 Call 0x1C17D6C
	209 Move X22, X0
	210 Move X0, X20
	211 Move X1, X23
	212 Move W2, W31
	213 Call Hashtable.CopyKeys, X0, X1, X2
	214 Move X0, X20
	215 Move X1, X22
	216 Move W2, W31
	217 Call Hashtable.CopyValues, X0, X1, X2
	218 Move X0, [X26]
	219 Move X26, 0xDCA000
	220 Move X26, [X26+352]
	221 Move W8, [X0+224]
	222 Move X24, [X26]
	223 Compare W8, 0
	224 JumpIfNotEqual {226}
	225 Call 0x1C17DFC
	226 Move X0, X24
	227 Move X1, X31
	228 Call Type.GetTypeFromHandle, X0
	229 Move X8, 0xDCF000
	230 Move X8, [X8+1904]
	231 Move X3, X0
	232 Move X1, [X8]
	233 Move X0, X21
	234 Move X2, X23
	235 Move X4, X31
	236 Call SerializationInfo.AddValue, X0, X1, X2, X3
	237 Move X0, [X26]
	238 Move X1, X31
	239 Call Type.GetTypeFromHandle, X0
	240 Move X8, 0xDCF000
	241 Move X8, [X8+1912]
	242 Move X3, X0
	243 Move X1, [X8]
	244 Move X0, X21
	245 Move X2, X22
	246 Move X4, X31
	247 Call SerializationInfo.AddValue, X0, X1, X2, X3
	248 Move W20, [X20+40]
	249 Call 0x1C17D44
	250 NotImplemented "Instruction CMP not yet implemented."
	251 Move X21, X31
	252 Move W8, [X31+12]
	253 Compare W8, 0
	254 JumpIfEqual {258}
	255 Move X0, X19
	256 Move X1, X31
	257 Call Monitor.Exit, X0
	258 Compare X21, 0
	259 JumpIfNotEqual {288}
	260 Move X20, [X31+64]
	261 Move X19, [X31+72]
	262 Move X22, [X31+48]
	263 Move X21, [X31+56]
	264 Move X24, [X31+32]
	265 Move X23, [X31+40]
	266 Move X26, [X31+16]
	267 Move X25, [X31+24]
	268 Move X30, [X31+80]
	269 Return 
	270 Move X0, 0xD9D000
	271 Move X0, [X0+1320]
	272 Call 0x1C17D08
	273 Call 0x1C17F10
	274 Move X19, X0
	275 Move X0, 0xDC2000
	276 Move X0, [X0+728]
	277 Call 0x1C17D08
	278 Move X1, X0
	279 Move X0, X19
	280 Move X2, X31
	281 Call ArgumentNullException..ctor, X0, X1
	282 Move X0, 0xDCF000
	283 Move X0, [X0+1944]
	284 Call 0x1C17D08
	285 Move X1, X0
	286 Move X0, X19
	287 Call 0x1C17DEC
	288 Move X0, X21
	289 Call 0x1C17F18
	290 Call 0x1C17F20
	291 Move X0, 0xD98000
	292 Move X0, [X0+1456]
	293 Call 0x1C17D08
	294 Call 0x1C17F10
	295 Move X20, X0
	296 Move X0, 0xDC2000
	297 Move X0, [X0+648]
	298 Call 0x1C17D08
	299 Move X1, X0
	300 Move X0, X20
	301 Move X2, X31
	302 Call InvalidOperationException..ctor, X0, X1
	303 Move X0, 0xDCF000
	304 Move X0, [X0+1944]
	305 Call 0x1C17D08
	306 Move X1, X0
	307 Move X0, X20
	308 Call 0x1C17DEC
	309 Move X20, X0
	310 NotImplemented "Instruction CMP not yet implemented."
	311 Move X0, X20
	312 Call 0x3EB2AD0
	313 Move X21, [X0]
	314 Call 0x3EB2AE0
	315 Move X21, X31
	316 Move X20, X0
	317 Move W8, [X31+12]
	318 Compare W8, 0
	319 JumpIfEqual {323}
	320 Move X0, X19
	321 Move X1, X31
	322 Call Monitor.Exit, X0
	323 Compare X21, 0
	324 JumpIfNotEqual {327}
	325 Move X0, X20
	326 Call 0x1D2D690
	327 Move X0, X21
	328 Call 0x1C17F18
	329 Call 0x1991590

Method: System.Void OnDeserialization(System.Object sender)

Disassembly:
	0x0335D040 CBNZ X20, 0x335D04C
	0x0335D044 MOV X0, X21
	0x0335D048 BL 0x1D2C690
	0x0335D04C MOV X0, X20
	0x0335D050 BL 0x1C16F18
	0x0335D054 BL 0x1990590
	0x0335D058 SUB X31, X31, 0x30
	0x0335D05C STP X30, X21, [X31 + 0x10]
	0x0335D060 STP X20, X19, [X31 + 0x20]
	0x0335D064 MOV X20, X0
	0x0335D068 LDR X0, [X0 + 0x50]
	0x0335D06C CBZ X0, 0x335D0D8
	0x0335D070 LDR X8, [X0]
	0x0335D074 LDR X9, [X8 + 0x368]
	0x0335D078 LDR X1, [X8 + 0x370]
	0x0335D07C BLR X9
	0x0335D080 MOV X19, X0
	0x0335D084 STRB W31, [X31 + 0xC]
	0x0335D088 ADD X1, X31, 0xC
	0x0335D08C MOV X2, X31
	0x0335D090 BL 0x33DE64C
	0x0335D094 LDR X0, [X20 + 0x50]
	0x0335D098 CBZ X0, 0x335D0E4
	0x0335D09C LDR X8, [X0]
	0x0335D0A0 LDR X1, [X8 + 0x290]
	0x0335D0A4 LDR X9, [X8 + 0x288]
	0x0335D0A8 BLR X9
	0x0335D0AC MOV X20, X31
	0x0335D0B0 LDRB W8, [X31 + 0xC]
	0x0335D0B4 CBZ W8, 0x335D0C4
	0x0335D0B8 MOV X0, X19
	0x0335D0BC MOV X1, X31
	0x0335D0C0 BL 0x33E14E4
	0x0335D0C4 CBNZ X20, 0x335D0DC
	0x0335D0C8 LDP X20, X19, [X31 + 0x20]
	0x0335D0CC LDP X30, X21, [X31 + 0x10]
	0x0335D0D0 ADD X31, X31, 0x30
	0x0335D0D4 RET
	0x0335D0D8 BL 0x1C16F20
	0x0335D0DC MOV X0, X20
	0x0335D0E0 BL 0x1C16F18
	0x0335D0E4 BL 0x1C16F20
	0x0335D0E8 B 0x335D0EC
	0x0335D0EC MOV X21, X0
	0x0335D0F0 CMP W1, 0x1
	0x0335D0F4 B.NE 0x335D10C
	0x0335D0F8 MOV X0, X21
	0x0335D0FC BL 0x3EB1AD0
	0x0335D100 LDR X20, [X0]
	0x0335D104 BL 0x3EB1AE0
	0x0335D108 B 0x335D0B0
	0x0335D10C MOV X20, X31
	0x0335D110 B 0x335D118
	0x0335D114 MOV X21, X0
	0x0335D118 LDRB W8, [X31 + 0xC]
	0x0335D11C CBZ W8, 0x335D12C
	0x0335D120 MOV X0, X19
	0x0335D124 MOV X1, X31
	0x0335D128 BL 0x33E14E4
	0x0335D12C CBNZ X20, 0x335D138
	0x0335D130 MOV X0, X21
	0x0335D134 BL 0x1D2C690
	0x0335D138 MOV X0, X20
	0x0335D13C BL 0x1C16F18
	0x0335D140 BL 0x1990590
	0x0335D144 STR X30, [X31 - 0x10]!
	0x0335D148 LDR X0, [X0 + 0x50]
	0x0335D14C CBZ X0, 0x335D164
	0x0335D150 LDR X8, [X0]
	0x0335D154 LDR X3, [X8 + 0x2A8]
	0x0335D158 LDR X2, [X8 + 0x2B0]
	0x0335D15C LDR X30, [X31], #0x10
	0x0335D160 BR X3
	0x0335D164 BL 0x1C16F20
	0x0335D168 STR X30, [X31 - 0x20]!
	0x0335D16C STP X20, X19, [X31 + 0x10]
	0x0335D170 CBZ X1, 0x335D194
	0x0335D174 LDR X0, [X0 + 0x50]
	0x0335D178 CBZ X0, 0x335D1F0
	0x0335D17C LDR X8, [X0]
	0x0335D180 LDP X20, X19, [X31 + 0x10]
	0x0335D184 LDR X3, [X8 + 0x2B8]
	0x0335D188 LDR X2, [X8 + 0x2C0]
	0x0335D18C LDR X30, [X31], #0x20
	0x0335D190 BR X3
	0x0335D194 ADRP X0, 0xD9B000
	0x0335D198 LDR X0, [X0 + 0x528]
	0x0335D19C BL 0x1C16D08
	0x0335D1A0 BL 0x1C16F10
	0x0335D1A4 MOV X19, X0
	0x0335D1A8 ADRP X0, 0xDC0000
	0x0335D1AC LDR X0, [X0 + 0x70]
	0x0335D1B0 BL 0x1C16D08
	0x0335D1B4 MOV X20, X0
	0x0335D1B8 ADRP X0, 0xDCD000
	0x0335D1BC LDR X0, [X0 + 0x288]
	0x0335D1C0 BL 0x1C16D08
	0x0335D1C4 MOV X2, X0
	0x0335D1C8 MOV X0, X19
	0x0335D1CC MOV X1, X20
	0x0335D1D0 MOV X3, X31
	0x0335D1D4 BL 0x3315F7C
	0x0335D1D8 ADRP X0, 0xDCD000
	0x0335D1DC LDR X0, [X0 + 0x7D8]
	0x0335D1E0 BL 0x1C16D08
	0x0335D1E4 MOV X1, X0
	0x0335D1E8 MOV X0, X19
	0x0335D1EC BL 0x1C16DEC
	0x0335D1F0 BL 0x1C16F20
	0x0335D1F4 STR X30, [X31 - 0x30]!
	0x0335D1F8 STP X22, X21, [X31 + 0x10]
	0x0335D1FC STP X20, X19, [X31 + 0x20]
	0x0335D200 MOV X22, X0
	0x0335D204 LDR X0, [X0 + 0x50]
	0x0335D208 CBZ X0, 0x335D284
	0x0335D20C LDR X8, [X0]
	0x0335D210 MOV X21, X1
	0x0335D214 MOV W20, W2
	0x0335D218 LDR X9, [X8 + 0x368]
	0x0335D21C LDR X1, [X8 + 0x370]
	0x0335D220 BLR X9
	0x0335D224 MOV X19, X0
	0x0335D228 STRB W31, [X31 + 0xC]
	0x0335D22C ADD X1, X31, 0xC
	0x0335D230 MOV X2, X31
	0x0335D234 BL 0x33DE64C
	0x0335D238 LDR X0, [X22 + 0x50]
	0x0335D23C CBZ X0, 0x335D290
	0x0335D240 LDR X8, [X0]
	0x0335D244 LDR X9, [X8 + 0x2C8]
	0x0335D248 LDR X3, [X8 + 0x2D0]
	0x0335D24C MOV X1, X21
	0x0335D250 MOV W2, W20
	0x0335D254 BLR X9
	0x0335D258 MOV X20, X31
	0x0335D25C LDRB W8, [X31 + 0xC]
	0x0335D260 CBZ W8, 0x335D270
	0x0335D264 MOV X0, X19
	0x0335D268 MOV X1, X31
	0x0335D26C BL 0x33E14E4
	0x0335D270 CBNZ X20, 0x335D288
	0x0335D274 LDP X20, X19, [X31 + 0x20]
	0x0335D278 LDP X22, X21, [X31 + 0x10]
	0x0335D27C LDR X30, [X31], #0x30
	0x0335D280 RET
	0x0335D284 BL 0x1C16F20
	0x0335D288 MOV X0, X20
	0x0335D28C BL 0x1C16F18
	0x0335D290 BL 0x1C16F20
	0x0335D294 B 0x335D298
	0x0335D298 MOV X21, X0
	0x0335D29C CMP W1, 0x1
	0x0335D2A0 B.NE 0x335D2B8
	0x0335D2A4 MOV X0, X21
	0x0335D2A8 BL 0x3EB1AD0
	0x0335D2AC LDR X20, [X0]
	0x0335D2B0 BL 0x3EB1AE0
	0x0335D2B4 B 0x335D25C
	0x0335D2B8 MOV X20, X31
	0x0335D2BC B 0x335D2C4
	0x0335D2C0 MOV X21, X0
	0x0335D2C4 LDRB W8, [X31 + 0xC]
	0x0335D2C8 CBZ W8, 0x335D2D8
	0x0335D2CC MOV X0, X19
	0x0335D2D0 MOV X1, X31
	0x0335D2D4 BL 0x33E14E4
	0x0335D2D8 CBNZ X20, 0x335D2E4
	0x0335D2DC MOV X0, X21
	0x0335D2E0 BL 0x1D2C690
	0x0335D2E4 MOV X0, X20
	0x0335D2E8 BL 0x1C16F18
	0x0335D2EC BL 0x1990590
	0x0335D2F0 SUB X31, X31, 0x30
	0x0335D2F4 STP X30, X21, [X31 + 0x10]
	0x0335D2F8 STP X20, X19, [X31 + 0x20]
	0x0335D2FC ADRP X19, 0x107F000
	0x0335D300 LDRB W8, [X19 + 0xE1B]
	0x0335D304 MOV X20, X0
	0x0335D308 TBNZ X8, 0x0, 0x335D320
	0x0335D30C ADRP X0, 0xDC6000
	0x0335D310 LDR X0, [X0 + 0xDB8]
	0x0335D314 BL 0x1C16CF4
	0x0335D318 MOVZ W8, 0x1
	0x0335D31C STRB W8, [X19 + 0xE1B]
	0x0335D320 LDR X0, [X20 + 0x50]
	0x0335D324 CBZ X0, 0x335D3D8
	0x0335D328 LDR X8, [X0]
	0x0335D32C LDR X9, [X8 + 0x368]
	0x0335D330 LDR X1, [X8 + 0x370]
	0x0335D334 BLR X9
	0x0335D338 MOV X19, X0
	0x0335D33C STRB W31, [X31 + 0xC]
	0x0335D340 ADD X1, X31, 0xC
	0x0335D344 MOV X2, X31
	0x0335D348 BL 0x33DE64C
	0x0335D34C LDR X0, [X20 + 0x50]
	0x0335D350 CBZ X0, 0x335D3E4
	0x0335D354 LDR X8, [X0]
	0x0335D358 LDR X1, [X8 + 0x2A0]
	0x0335D35C LDR X9, [X8 + 0x298]
	0x0335D360 BLR X9
	0x0335D364 CBZ X0, 0x335D39C
	0x0335D368 ADRP X9, 0xDC6000
	0x0335D36C LDR X9, [X9 + 0xDB8]
	0x0335D370 LDR X8, [X0]
	0x0335D374 LDR X1, [X9]
	0x0335D378 LDRB W10, [X8 + 0x130]
	0x0335D37C LDRB W9, [X1 + 0x130]
	0x0335D380 CMP W10, W9
	0x0335D384 B.CC 0x335D3D4
	0x0335D388 LDR X8, [X8 + 0xC8]
	0x0335D38C ADD X8, X8, X9, 0x3, LSL
	0x0335D390 LDUR X8, [X8 - 0x8]
	0x0335D394 CMP X8, X1
	0x0335D398 B.NE 0x335D3D4
	0x0335D39C BL 0x335BA34
	0x0335D3A0 MOV X21, X0
	0x0335D3A4 MOV X20, X31
	0x0335D3A8 LDRB W8, [X31 + 0xC]
	0x0335D3AC CBZ W8, 0x335D3BC
	0x0335D3B0 MOV X0, X19
	0x0335D3B4 MOV X1, X31
	0x0335D3B8 BL 0x33E14E4
	0x0335D3BC CBNZ X20, 0x335D3DC
	0x0335D3C0 MOV X0, X21
	0x0335D3C4 LDP X20, X19, [X31 + 0x20]
	0x0335D3C8 LDP X30, X21, [X31 + 0x10]
	0x0335D3CC ADD X31, X31, 0x30
	0x0335D3D0 RET
	0x0335D3D4 BL 0x1C171E0
	0x0335D3D8 BL 0x1C16F20
	0x0335D3DC MOV X0, X20
	0x0335D3E0 BL 0x1C16F18
	0x0335D3E4 BL 0x1C16F20
	0x0335D3E8 B 0x335D3F4
	0x0335D3EC B 0x335D3F4
	0x0335D3F0 B 0x335D3F4
	0x0335D3F4 MOV X21, X0
	0x0335D3F8 CMP W1, 0x1
	0x0335D3FC B.NE 0x335D418
	0x0335D400 MOV X0, X21
	0x0335D404 BL 0x3EB1AD0
	0x0335D408 LDR X20, [X0]
	0x0335D40C BL 0x3EB1AE0
	0x0335D410 MOV X21, X31
	0x0335D414 B 0x335D3A8
	0x0335D418 MOV X20, X31
	0x0335D41C B 0x335D424
	0x0335D420 MOV X21, X0
	0x0335D424 LDRB W8, [X31 + 0xC]
	0x0335D428 CBZ W8, 0x335D438
	0x0335D42C MOV X0, X19
	0x0335D430 MOV X1, X31
	0x0335D434 BL 0x33E14E4
	0x0335D438 CBNZ X20, 0x335D444
	0x0335D43C MOV X0, X21
	0x0335D440 BL 0x1D2C690
	0x0335D444 MOV X0, X20
	0x0335D448 BL 0x1C16F18
	0x0335D44C BL 0x1990590
	0x0335D450 STR X30, [X31 - 0x10]!
	0x0335D454 LDR X0, [X0 + 0x50]
	0x0335D458 CBZ X0, 0x335D470
	0x0335D45C LDR X8, [X0]
	0x0335D460 LDR X2, [X8 + 0x2F8]
	0x0335D464 LDR X1, [X8 + 0x300]
	0x0335D468 LDR X30, [X31], #0x10
	0x0335D46C BR X2
	0x0335D470 BL 0x1C16F20
	0x0335D474 STR X30, [X31 - 0x10]!
	0x0335D478 LDR X0, [X0 + 0x50]
	0x0335D47C CBZ X0, 0x335D494
	0x0335D480 LDR X8, [X0]
	0x0335D484 LDR X2, [X8 + 0x2F8]
	0x0335D488 LDR X1, [X8 + 0x300]
	0x0335D48C LDR X30, [X31], #0x10
	0x0335D490 BR X2
	0x0335D494 BL 0x1C16F20
	0x0335D498 SUB X31, X31, 0x30
	0x0335D49C STP X30, X21, [X31 + 0x10]
	0x0335D4A0 STP X20, X19, [X31 + 0x20]
	0x0335D4A4 MOV X20, X0
	0x0335D4A8 LDR X0, [X0 + 0x50]
	0x0335D4AC CBZ X0, 0x335D520
	0x0335D4B0 LDR X8, [X0]
	0x0335D4B4 LDR X9, [X8 + 0x368]
	0x0335D4B8 LDR X1, [X8 + 0x370]
	0x0335D4BC BLR X9
	0x0335D4C0 MOV X19, X0
	0x0335D4C4 STRB W31, [X31 + 0xC]
	0x0335D4C8 ADD X1, X31, 0xC
	0x0335D4CC MOV X2, X31
	0x0335D4D0 BL 0x33DE64C
	0x0335D4D4 LDR X0, [X20 + 0x50]
	0x0335D4D8 CBZ X0, 0x335D52C
	0x0335D4DC LDR X8, [X0]
	0x0335D4E0 LDR X1, [X8 + 0x340]
	0x0335D4E4 LDR X9, [X8 + 0x338]
	0x0335D4E8 BLR X9
	0x0335D4EC MOV X21, X0
	0x0335D4F0 MOV X20, X31
	0x0335D4F4 LDRB W8, [X31 + 0xC]
	0x0335D4F8 CBZ W8, 0x335D508
	0x0335D4FC MOV X0, X19
	0x0335D500 MOV X1, X31
	0x0335D504 BL 0x33E14E4
	0x0335D508 CBNZ X20, 0x335D524
	0x0335D50C MOV X0, X21
	0x0335D510 LDP X20, X19, [X31 + 0x20]
	0x0335D514 LDP X30, X21, [X31 + 0x10]
	0x0335D518 ADD X31, X31, 0x30
	0x0335D51C RET
	0x0335D520 BL 0x1C16F20
	0x0335D524 MOV X0, X20
	0x0335D528 BL 0x1C16F18
	0x0335D52C BL 0x1C16F20
	0x0335D530 B 0x335D538
	0x0335D534 B 0x335D538
	0x0335D538 MOV X21, X0
	0x0335D53C CMP W1, 0x1
	0x0335D540 B.NE 0x335D55C
	0x0335D544 MOV X0, X21
	0x0335D548 BL 0x3EB1AD0
	0x0335D54C LDR X20, [X0]
	0x0335D550 BL 0x3EB1AE0
	0x0335D554 MOV X21, X31
	0x0335D558 B 0x335D4F4
	0x0335D55C MOV X20, X31
	0x0335D560 B 0x335D568
	0x0335D564 MOV X21, X0
	0x0335D568 LDRB W8, [X31 + 0xC]
	0x0335D56C CBZ W8, 0x335D57C
	0x0335D570 MOV X0, X19
	0x0335D574 MOV X1, X31
	0x0335D578 BL 0x33E14E4
	0x0335D57C CBNZ X20, 0x335D588
	0x0335D580 MOV X0, X21
	0x0335D584 BL 0x1D2C690
	0x0335D588 MOV X0, X20
	0x0335D58C BL 0x1C16F18
	0x0335D590 BL 0x1990590
	0x0335D594 SUB X31, X31, 0x30
	0x0335D598 STP X30, X21, [X31 + 0x10]
	0x0335D59C STP X20, X19, [X31 + 0x20]
	0x0335D5A0 MOV X20, X0
	0x0335D5A4 LDR X0, [X0 + 0x50]
	0x0335D5A8 CBZ X0, 0x335D61C
	0x0335D5AC LDR X8, [X0]
	0x0335D5B0 LDR X9, [X8 + 0x368]
	0x0335D5B4 LDR X1, [X8 + 0x370]
	0x0335D5B8 BLR X9
	0x0335D5BC MOV X19, X0
	0x0335D5C0 STRB W31, [X31 + 0xC]
	0x0335D5C4 ADD X1, X31, 0xC
	0x0335D5C8 MOV X2, X31
	0x0335D5CC BL 0x33DE64C
	0x0335D5D0 LDR X0, [X20 + 0x50]
	0x0335D5D4 CBZ X0, 0x335D628
	0x0335D5D8 LDR X8, [X0]
	0x0335D5DC LDR X1, [X8 + 0x350]
	0x0335D5E0 LDR X9, [X8 + 0x348]
	0x0335D5E4 BLR X9
	0x0335D5E8 MOV X21, X0
	0x0335D5EC MOV X20, X31
	0x0335D5F0 LDRB W8, [X31 + 0xC]
	0x0335D5F4 CBZ W8, 0x335D604
	0x0335D5F8 MOV X0, X19
	0x0335D5FC MOV X1, X31
	0x0335D600 BL 0x33E14E4
	0x0335D604 CBNZ X20, 0x335D620
	0x0335D608 MOV X0, X21
	0x0335D60C LDP X20, X19, [X31 + 0x20]
	0x0335D610 LDP X30, X21, [X31 + 0x10]
	0x0335D614 ADD X31, X31, 0x30
	0x0335D618 RET
	0x0335D61C BL 0x1C16F20
	0x0335D620 MOV X0, X20
	0x0335D624 BL 0x1C16F18
	0x0335D628 BL 0x1C16F20
	0x0335D62C B 0x335D634
	0x0335D630 B 0x335D634
	0x0335D634 MOV X21, X0
	0x0335D638 CMP W1, 0x1
	0x0335D63C B.NE 0x335D658
	0x0335D640 MOV X0, X21
	0x0335D644 BL 0x3EB1AD0
	0x0335D648 LDR X20, [X0]
	0x0335D64C BL 0x3EB1AE0
	0x0335D650 MOV X21, X31
	0x0335D654 B 0x335D5F0
	0x0335D658 MOV X20, X31
	0x0335D65C B 0x335D664
	0x0335D660 MOV X21, X0
	0x0335D664 LDRB W8, [X31 + 0xC]
	0x0335D668 CBZ W8, 0x335D678
	0x0335D66C MOV X0, X19
	0x0335D670 MOV X1, X31
	0x0335D674 BL 0x33E14E4
	0x0335D678 CBNZ X20, 0x335D684
	0x0335D67C MOV X0, X21
	0x0335D680 BL 0x1D2C690
	0x0335D684 MOV X0, X20
	0x0335D688 BL 0x1C16F18
	0x0335D68C BL 0x1990590
	0x0335D690 SUB X31, X31, 0x30
	0x0335D694 STP X30, X21, [X31 + 0x10]
	0x0335D698 STP X20, X19, [X31 + 0x20]
	0x0335D69C MOV X21, X0
	0x0335D6A0 LDR X0, [X0 + 0x50]
	0x0335D6A4 CBZ X0, 0x335D718
	0x0335D6A8 LDR X8, [X0]
	0x0335D6AC MOV X20, X1
	0x0335D6B0 LDR X9, [X8 + 0x368]
	0x0335D6B4 LDR X1, [X8 + 0x370]
	0x0335D6B8 BLR X9
	0x0335D6BC MOV X19, X0
	0x0335D6C0 STRB W31, [X31 + 0xC]
	0x0335D6C4 ADD X1, X31, 0xC
	0x0335D6C8 MOV X2, X31
	0x0335D6CC BL 0x33DE64C
	0x0335D6D0 LDR X0, [X21 + 0x50]
	0x0335D6D4 CBZ X0, 0x335D724
	0x0335D6D8 LDR X8, [X0]
	0x0335D6DC LDR X9, [X8 + 0x358]
	0x0335D6E0 LDR X2, [X8 + 0x360]
	0x0335D6E4 MOV X1, X20
	0x0335D6E8 BLR X9
	0x0335D6EC MOV X20, X31
	0x0335D6F0 LDRB W8, [X31 + 0xC]
	0x0335D6F4 CBZ W8, 0x335D704
	0x0335D6F8 MOV X0, X19
	0x0335D6FC MOV X1, X31
	0x0335D700 BL 0x33E14E4
	0x0335D704 CBNZ X20, 0x335D71C
	0x0335D708 LDP X20, X19, [X31 + 0x20]
	0x0335D70C LDP X30, X21, [X31 + 0x10]
	0x0335D710 ADD X31, X31, 0x30
	0x0335D714 RET
	0x0335D718 BL 0x1C16F20
	0x0335D71C MOV X0, X20
	0x0335D720 BL 0x1C16F18
	0x0335D724 BL 0x1C16F20
	0x0335D728 B 0x335D72C
	0x0335D72C MOV X21, X0
	0x0335D730 CMP W1, 0x1
	0x0335D734 B.NE 0x335D74C
	0x0335D738 MOV X0, X21
	0x0335D73C BL 0x3EB1AD0
	0x0335D740 LDR X20, [X0]
	0x0335D744 BL 0x3EB1AE0
	0x0335D748 B 0x335D6F0
	0x0335D74C MOV X20, X31
	0x0335D750 B 0x335D758
	0x0335D754 MOV X21, X0
	0x0335D758 LDRB W8, [X31 + 0xC]
	0x0335D75C CBZ W8, 0x335D76C
	0x0335D760 MOV X0, X19
	0x0335D764 MOV X1, X31
	0x0335D768 BL 0x33E14E4
	0x0335D76C CBNZ X20, 0x335D778
	0x0335D770 MOV X0, X21
	0x0335D774 BL 0x1D2C690
	0x0335D778 MOV X0, X20
	0x0335D77C BL 0x1C16F18
	0x0335D780 BL 0x1990590
	0x0335D784 RET
	0x0335D788 MOV X1, X31
	0x0335D78C B 0x33C5A24
	0x0335D790 STP X30, X19, [X31 - 0x10]!
	0x0335D794 LDRB W8, [X0 + 0x20]
	0x0335D798 CBZ W8, 0x335D7A8
	0x0335D79C LDR X0, [X0 + 0x28]
	0x0335D7A0 LDP X30, X19, [X31], #0x10
	0x0335D7A4 RET
	0x0335D7A8 ADRP X0, 0xD96000
	0x0335D7AC LDR X0, [X0 + 0x5B0]
	0x0335D7B0 BL 0x1C16D08
	0x0335D7B4 BL 0x1C16F10
	0x0335D7B8 MOV X19, X0
	0x0335D7BC ADRP X0, 0xDC1000
	0x0335D7C0 LDR X0, [X0 + 0xC48]
	0x0335D7C4 BL 0x1C16D08
	0x0335D7C8 MOV X1, X0
	0x0335D7CC MOV X0, X19
	0x0335D7D0 MOV X2, X31
	0x0335D7D4 BL 0x337DF1C
	0x0335D7D8 ADRP X0, 0xDCD000
	0x0335D7DC LDR X0, [X0 + 0x7E0]
	0x0335D7E0 BL 0x1C16D08
	0x0335D7E4 MOV X1, X0
	0x0335D7E8 MOV X0, X19
	0x0335D7EC BL 0x1C16DEC
	0x0335D7F0 STP X30, X21, [X31 - 0x20]!
	0x0335D7F4 STP X20, X19, [X31 + 0x10]
	0x0335D7F8 LDR X8, [X0 + 0x10]
	0x0335D7FC CBZ X8, 0x335D8C4
	0x0335D800 LDR W20, [X0 + 0x1C]
	0x0335D804 LDR W21, [X8 + 0x28]
	0x0335D808 MOV X19, X0
	0x0335D80C BL 0x1C16D44
	0x0335D810 CMP W20, W21
	0x0335D814 B.NE 0x335D8C8
	0x0335D818 LDR W8, [X19 + 0x18]
	0x0335D81C CMP W8, 0x1
	0x0335D820 B.LT 0x335D87C
	0x0335D824 LDR X9, [X19 + 0x10]
	0x0335D828 ADD X10, X8, 0x1
	0x0335D82C SUB W8, W8, 0x1
	0x0335D830 MOVZ W11, 0x18
	0x0335D834 CBZ X9, 0x335D8B4
	0x0335D838 LDR X12, [X9 + 0x10]
	0x0335D83C CBZ X12, 0x335D8B4
	0x0335D840 LDR W13, [X12 + 0x18]
	0x0335D844 CMP W8, W13
	0x0335D848 B.CS 0x335D8BC
	0x0335D84C UMADDL X13, X8, X11, X12
	0x0335D850 LDR X13, [X13 + 0x20]
	0x0335D854 CBZ X13, 0x335D860
	0x0335D858 CMP X13, X12
	0x0335D85C B.NE 0x335D884
	0x0335D860 SUB X10, X10, 0x1
	0x0335D864 CMP X10, 0x1
	0x0335D868 SUB W8, W8, 0x1
	0x0335D86C B.GT 0x335D834
	0x0335D870 MOV W0, W31
	0x0335D874 STR W31, [X19 + 0x18]
	0x0335D878 B 0x335D8A4

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X20, 0x1080000
	015 Move W8, [X20+3607]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {86}
	021 Move X0, 0xDCE000
	022 Move X0, [X0+1872]
	023 Call 0x1C17CF4
	024 Move X0, 0xDC2000
	025 Move X0, [X0+1600]
	026 Call 0x1C17CF4
	027 Move X0, 0xDC2000
	028 Move X0, [X0+1608]
	029 Call 0x1C17CF4
	030 Move X0, 0xDCE000
	031 Move X0, [X0+1880]
	032 Call 0x1C17CF4
	033 Move X0, 0xDC1000
	034 Move X0, [X0+2328]
	035 Call 0x1C17CF4
	036 Move X0, 0xDCE000
	037 Move X0, [X0+1888]
	038 Call 0x1C17CF4
	039 Move X0, 0xDC1000
	040 Move X0, [X0+2304]
	041 Call 0x1C17CF4
	042 Move X0, 0xDCE000
	043 Move X0, [X0+1896]
	044 Call 0x1C17CF4
	045 Move X0, 0xDCE000
	046 Move X0, [X0+824]
	047 Call 0x1C17CF4
	048 Move X0, 0xDC9000
	049 Move X0, [X0+352]
	050 Call 0x1C17CF4
	051 Move X0, 0xD97000
	052 Move X0, [X0+2512]
	053 Call 0x1C17CF4
	054 Move X0, 0xD97000
	055 Move X0, [X0+1728]
	056 Call 0x1C17CF4
	057 Move X0, 0xDCE000
	058 Move X0, [X0+1904]
	059 Call 0x1C17CF4
	060 Move X0, 0xDC2000
	061 Move X0, [X0+1584]
	062 Call 0x1C17CF4
	063 Move X0, 0xDCE000
	064 Move X0, [X0+1912]
	065 Call 0x1C17CF4
	066 Move X0, 0xDCE000
	067 Move X0, [X0+1920]
	068 Call 0x1C17CF4
	069 Move X0, 0xDCE000
	070 Move X0, [X0+1928]
	071 Call 0x1C17CF4
	072 Move X0, 0xDCE000
	073 Move X0, [X0+1936]
	074 Call 0x1C17CF4
	075 Move X0, 0xDC1000
	076 Move X0, [X0+720]
	077 Call 0x1C17CF4
	078 Move X0, 0xD98000
	079 Move X0, [X0+672]
	080 Call 0x1C17CF4
	081 Move X0, 0xDCE000
	082 Move X0, [X0+1744]
	083 Call 0x1C17CF4
	084 Move W8, 1
	085 Move [X20+3607], W8
	086 Move [X31+8], X31
	087 Move X8, [X19+16]
	088 Compare X8, 0
	089 JumpIfNotEqual {510}
	090 Call Hashtable.get_SerializationInfoTable
	091 Compare X0, 0
	092 JumpIfEqual {543}
	093 Move X8, 0xDC2000
	094 Move X8, [X8+1608]
	095 Add X2, X31, 8
	096 Move X1, X19
	097 Move X3, [X8]
	098 Call 0x2997F38, X0, X1, X2
	099 Move X0, [X31+8]
	100 Compare X0, 0
	101 JumpIfEqual {547}
	102 Move X1, X31
	103 Call SerializationInfo.GetEnumerator, X0
	104 Compare X0, 0
	105 JumpIfEqual {543}
	106 Move X1, X31
	107 Move X23, X0
	108 Call SerializationInfoEnumerator.MoveNext, X0
	109 Move TEMP, X0
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfNotEqual {429}
	113 Move W28, 0x32ED
	114 Move W29, 0xF9D2
	115 Move W22, 0x8DB5
	116 Move X21, X31
	117 Move X20, X31
	118 Move X25, X31
	119 Move X24, X31
	120 NotImplemented "Instruction MOVK not yet implemented."
	121 NotImplemented "Instruction MOVK not yet implemented."
	122 NotImplemented "Instruction MOVK not yet implemented."
	123 Move [X31+4], W31
	124 Move X0, X23
	125 Move X1, X31
	126 Call SerializationInfoEnumerator.get_Name, X0
	127 Move X26, X0
	128 Call <PrivateImplementationDetails>.ComputeStringHash, X0
	129 NotImplemented "Instruction CMP not yet implemented."
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Move W8, 0x908B
	132 NotImplemented "Instruction MOVK not yet implemented."
	133 NotImplemented "Instruction CMP not yet implemented."
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move X8, 0xDCE000
	136 Move X8, [X8+1904]
	137 Move X0, X26
	138 Move X2, X31
	139 Move X1, [X8]
	140 Call String.op_Equality, X0, X1
	141 Move TEMP, X0
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfNotEqual {422}
	145 Move X8, 0xD97000
	146 Move X8, [X8+1728]
	147 Move X9, 0xDC9000
	148 Move X20, [X31+8]
	149 Move X0, [X8]
	150 Move W8, [X0+224]
	151 Move X9, [X9+352]
	152 Move X26, [X9]
	153 Compare W8, 0
	154 JumpIfNotEqual {156}
	155 Call 0x1C17DFC
	156 Move X0, X26
	157 Move X1, X31
	158 Call Type.GetTypeFromHandle, X0
	159 Compare X20, 0
	160 JumpIfEqual {543}
	161 Move X8, 0xDCE000
	162 Move X8, [X8+1904]
	163 Move X2, X0
	164 Move X0, X20
	165 Move X3, X31
	166 Move X1, [X8]
	167 Call SerializationInfo.GetValue, X0, X1, X2
	168 Compare X0, 0
	169 JumpIfEqual {414}
	170 Move X8, 0xD97000
	171 Move X8, [X8+2512]
	172 Move X26, X0
	173 Move X27, [X8]
	174 Move X1, X27
	175 Call 0x1C17E00
	176 Move X20, X0
	177 Compare X0, 0
	178 JumpIfNotEqual {422}
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Move W8, 0x225B
	181 NotImplemented "Instruction MOVK not yet implemented."
	182 NotImplemented "Instruction CMP not yet implemented."
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Move X8, 0xDCE000
	185 Move X8, [X8+1936]
	186 Move X0, X26
	187 Move X2, X31
	188 Move X1, [X8]
	189 Call String.op_Equality, X0, X1
	190 Move TEMP, X0
	191 And TEMP, TEMP, 1
	192 Compare TEMP, 1
	193 JumpIfNotEqual {422}
	194 Move X8, 0xD97000
	195 Move X8, [X8+1728]
	196 Move X9, 0xDCE000
	197 Move X25, [X31+8]
	198 Move X0, [X8]
	199 Move W8, [X0+224]
	200 Move X9, [X9+1896]
	201 Move X26, [X9]
	202 Compare W8, 0
	203 JumpIfNotEqual {205}
	204 Call 0x1C17DFC
	205 Move X0, X26
	206 Move X1, X31
	207 Call Type.GetTypeFromHandle, X0
	208 Compare X25, 0
	209 JumpIfEqual {543}
	210 Move X8, 0xDCE000
	211 Move X8, [X8+1936]
	212 Move X2, X0
	213 Move X0, X25
	214 Move X3, X31
	215 Move X1, [X8]
	216 Call SerializationInfo.GetValue, X0, X1, X2
	217 Compare X0, 0
	218 JumpIfEqual {420}
	219 Move X8, 0xDCE000
	220 Move X8, [X8+824]
	221 Move X26, X0
	222 Move X27, [X8]
	223 Move X1, X27
	224 Call 0x1C17E00
	225 Move X25, X0
	226 Compare X0, 0
	227 JumpIfNotEqual {422}
	228 Move W8, 0xB660
	229 NotImplemented "Instruction MOVK not yet implemented."
	230 NotImplemented "Instruction CMP not yet implemented."
	231 Move W8, 0xA972
	232 NotImplemented "Instruction MOVK not yet implemented."
	233 NotImplemented "Instruction CMP not yet implemented."
	234 Move X8, 0xDCE000
	235 Move X8, [X8+1928]
	236 Move X0, X26
	237 Move X2, X31
	238 Move X1, [X8]
	239 Call String.op_Equality, X0, X1
	240 Move TEMP, X0
	241 And TEMP, TEMP, 1
	242 Compare TEMP, 1
	243 JumpIfNotEqual {422}
	244 Move X0, [X31+8]
	245 Compare X0, 0
	246 JumpIfEqual {543}
	247 Move X8, 0xDCE000
	248 Move X8, [X8+1928]
	249 Move X2, X31
	250 Move X1, [X8]
	251 Call SerializationInfo.GetSingle, X0, X1
	252 Move [X19+36], S0
	253 Move X8, 0xDC1000
	254 Move X8, [X8+720]
	255 Move X0, X26
	256 Move X2, X31
	257 Move X1, [X8]
	258 Call String.op_Equality, X0, X1
	259 Move TEMP, X0
	260 And TEMP, TEMP, 1
	261 Compare TEMP, 1
	262 JumpIfNotEqual {422}
	263 Move X8, 0xD97000
	264 Move X8, [X8+1728]
	265 Move X9, 0xDCE000
	266 Move X24, [X31+8]
	267 Move X0, [X8]
	268 Move W8, [X0+224]
	269 Move X9, [X9+1880]
	270 Move X26, [X9]
	271 Compare W8, 0
	272 JumpIfNotEqual {274}
	273 Call 0x1C17DFC
	274 Move X0, X26
	275 Move X1, X31
	276 Call Type.GetTypeFromHandle, X0
	277 Compare X24, 0
	278 JumpIfEqual {543}
	279 Move X8, 0xDC1000
	280 Move X8, [X8+720]
	281 Move X2, X0
	282 Move X0, X24
	283 Move X3, X31
	284 Move X1, [X8]
	285 Call SerializationInfo.GetValue, X0, X1, X2
	286 Compare X0, 0
	287 JumpIfEqual {415}
	288 Move X8, 0xDC1000
	289 Move X8, [X8+2328]
	290 Move X26, X0
	291 Move X27, [X8]
	292 Move X1, X27
	293 Call 0x1C17E00
	294 Move X24, X0
	295 Compare X0, 0
	296 JumpIfNotEqual {422}
	297 Move X8, 0xDCE000
	298 Move X8, [X8+1920]
	299 Move X0, X26
	300 Move X2, X31
	301 Move X1, [X8]
	302 Call String.op_Equality, X0, X1
	303 Move TEMP, X0
	304 And TEMP, TEMP, 1
	305 Compare TEMP, 1
	306 JumpIfNotEqual {422}
	307 Move X8, 0xD97000
	308 Move X8, [X8+1728]
	309 Move X9, 0xDCE000
	310 Move X26, [X31+8]
	311 Move X0, [X8]
	312 Move W8, [X0+224]
	313 Move X9, [X9+1888]
	314 Move X27, [X9]
	315 Compare W8, 0
	316 JumpIfNotEqual {318}
	317 Call 0x1C17DFC
	318 Move X0, X27
	319 Move X1, X31
	320 Move X29, X25
	321 Call Type.GetTypeFromHandle, X0
	322 Compare X26, 0
	323 JumpIfEqual {543}
	324 Move X8, 0xDCE000
	325 Move X8, [X8+1920]
	326 Move X2, X0
	327 Move X0, X26
	328 Move X3, X31
	329 Move X1, [X8]
	330 Call SerializationInfo.GetValue, X0, X1, X2
	331 Move X25, 0xDC1000
	332 Move X25, [X25+2304]
	333 Compare X0, 0
	334 JumpIfEqual {416}
	335 Move X27, [X25]
	336 Move X26, X0
	337 Move X1, X27
	338 Call 0x1C17E00
	339 Compare X0, 0
	340 JumpIfEqual {544}
	341 Move [X19+64], X0
	342 Move X27, [X25]
	343 Move X0, X26
	344 Move X1, X27
	345 Call 0x1C17E00
	346 Move X25, X29
	347 Move W29, 0xF9D2
	348 NotImplemented "Instruction MOVK not yet implemented."
	349 Compare X0, 0
	350 JumpIfNotEqual {422}
	351 Move X8, 0xDCE000
	352 Move X8, [X8+1912]
	353 Move X0, X26
	354 Move X2, X31
	355 Move X1, [X8]
	356 Call String.op_Equality, X0, X1
	357 Move TEMP, X0
	358 And TEMP, TEMP, 1
	359 Compare TEMP, 1
	360 JumpIfNotEqual {422}
	361 Move X8, 0xD97000
	362 Move X8, [X8+1728]
	363 Move X9, 0xDC9000
	364 Move X21, [X31+8]
	365 Move X0, [X8]
	366 Move W8, [X0+224]
	367 Move X9, [X9+352]
	368 Move X26, [X9]
	369 Compare W8, 0
	370 JumpIfNotEqual {372}
	371 Call 0x1C17DFC
	372 Move X0, X26
	373 Move X1, X31
	374 Call Type.GetTypeFromHandle, X0
	375 Compare X21, 0
	376 JumpIfEqual {543}
	377 Move X8, 0xDCE000
	378 Move X8, [X8+1912]
	379 Move X2, X0
	380 Move X0, X21
	381 Move X3, X31
	382 Move X1, [X8]
	383 Call SerializationInfo.GetValue, X0, X1, X2
	384 Compare X0, 0
	385 JumpIfEqual {421}
	386 Move X8, 0xD97000
	387 Move X8, [X8+2512]
	388 Move X26, X0
	389 Move X27, [X8]
	390 Move X1, X27
	391 Call 0x1C17E00
	392 Move X21, X0
	393 Compare X0, 0
	394 JumpIfNotEqual {422}
	395 Move X8, 0xDC2000
	396 Move X8, [X8+1584]
	397 Move X0, X26
	398 Move X2, X31
	399 Move X1, [X8]
	400 Call String.op_Equality, X0, X1
	401 Move TEMP, X0
	402 And TEMP, TEMP, 1
	403 Compare TEMP, 1
	404 JumpIfNotEqual {422}
	405 Move X0, [X31+8]
	406 Compare X0, 0
	407 JumpIfEqual {543}
	408 Move X8, 0xDC2000
	409 Move X8, [X8+1584]
	410 Move X2, X31
	411 Move X1, [X8]
	412 Call SerializationInfo.GetInt32, X0, X1
	413 Move [X31+4], W0
	414 Move X20, X31
	415 Move X24, X31
	416 Move X25, X29
	417 Move W29, 0xF9D2
	418 Move [X19+64], X31
	419 NotImplemented "Instruction MOVK not yet implemented."
	420 Move X25, X31
	421 Move X21, X31
	422 Move X0, X23
	423 Move X1, X31
	424 Call SerializationInfoEnumerator.MoveNext, X0
	425 Move TEMP, X0
	426 And TEMP, TEMP, 1
	427 Compare TEMP, 1
	428 JumpIfEqual {124}
	429 Move [X31+4], W31
	430 Move X24, X31
	431 Move X25, X31
	432 Move X20, X31
	433 Move X21, X31
	434 Move W22, [X31+4]
	435 Move V0, [X19+36]
	436 Move W8, 0x7F800000
	437 Move X9, [X19+64]
	438 NotImplemented "Instruction SCVTF not yet implemented."
	439 Move S2, W8
	440 Multiply S0, S0, S1
	441 NotImplemented "Instruction FCVTZS not yet implemented."
	442 NotImplemented "Instruction FCMP not yet implemented."
	443 Move W10, 0x80000000
	444 NotImplemented "Instruction CSEL not yet implemented."
	445 Move [X19+32], W8
	446 Compare X9, 0
	447 JumpIfNotEqual {461}
	448 Or X8, X25, X24
	449 Compare X8, 0
	450 JumpIfEqual {461}
	451 Move X8, 0xDCE000
	452 Move X8, [X8+1872]
	453 Move X0, [X8]
	454 Call 0x1C17F10
	455 Move X1, X31
	456 Move X23, X0
	457 Call Object..ctor, X0
	458 Move [X23+16], X25
	459 Move [X23+24], X24
	460 Move [X19+64], X23
	461 Move X8, 0xDCE000
	462 Move X8, [X8+1744]
	463 Move W1, W22
	464 Move X0, [X8]
	465 Call 0x1C17D6C
	466 Move [X19+16], X0
	467 Compare X20, 0
	468 JumpIfEqual {554}
	469 Compare X21, 0
	470 JumpIfEqual {561}
	471 Move W8, [X20+24]
	472 Move W9, [X21+24]
	473 NotImplemented "Instruction CMP not yet implemented."
	474 NotImplemented "Instruction CMP not yet implemented."
	475 Move X22, X31
	476 Add X23, X21, 32
	477 Add X24, X20, 32
	478 NotImplemented "Instruction CMP not yet implemented."
	479 Move X1, [X24]
	480 Compare X1, 0
	481 JumpIfEqual {525}
	482 Move W8, [X21+24]
	483 NotImplemented "Instruction CMP not yet implemented."
	484 Move X2, [X23]
	485 Move W3, 1
	486 Move X0, X19
	487 Call Hashtable.Insert, X0, X1, X2, X3
	488 Move W8, [X20+24]
	489 Add X22, X22, 1
	490 NotImplemented "Instruction CMP not yet implemented."
	491 Move X0, [X31+8]
	492 Compare X0, 0
	493 JumpIfEqual {543}
	494 Move X8, 0xD98000
	495 Move X8, [X8+672]
	496 Move X2, X31
	497 Move X1, [X8]
	498 Call SerializationInfo.GetInt32, X0, X1
	499 Move W20, W0
	500 Call 0x1C17D44
	501 Move [X19+40], W20
	502 Call Hashtable.get_SerializationInfoTable
	503 Compare X0, 0
	504 JumpIfEqual {543}
	505 Move X8, 0xDC2000
	506 Move X8, [X8+1600]
	507 Move X1, X19
	508 Move X2, [X8]
	509 Call 0x2997CF8, X0, X1
	510 Move X20, [X31+96]
	511 Move X19, [X31+104]
	512 Move X22, [X31+80]
	513 Move X21, [X31+88]
	514 Move X24, [X31+64]
	515 Move X23, [X31+72]
	516 Move X26, [X31+48]
	517 Move X25, [X31+56]
	518 Move X28, [X31+32]
	519 Move X27, [X31+40]
	520 Move X29, [X31+16]
	521 Move X30, [X31+24]
	522 Add X31, X31, 112
	523 Return 
	524 Call 0x1C17F28
	525 Move X0, 0xDC1000
	526 Move X0, [X0+736]
	527 Call 0x1C17D08
	528 Call 0x1C17F10
	529 Move X19, X0
	530 Move X0, 0xDCE000
	531 Move X0, [X0+1952]
	532 Call 0x1C17D08
	533 Move X1, X0
	534 Move X0, X19
	535 Move X2, X31
	536 Call SerializationException..ctor, X0, X1
	537 Move X0, 0xDCE000
	538 Move X0, [X0+1960]
	539 Call 0x1C17D08
	540 Move X1, X0
	541 Move X0, X19
	542 Call 0x1C17DEC
	543 Call 0x1C17F20
	544 Move X0, X26
	545 Move X1, X27
	546 Call 0x1C181E0
	547 Move X0, 0xDC1000
	548 Move X0, [X0+736]
	549 Call 0x1C17D08
	550 Call 0x1C17F10
	551 Move X19, X0
	552 Move X0, 0xDC1000
	553 Move X0, [X0+744]
	554 Move X0, 0xDC1000
	555 Move X0, [X0+736]
	556 Call 0x1C17D08
	557 Call 0x1C17F10
	558 Move X19, X0
	559 Move X0, 0xDC2000
	560 Move X0, [X0+3856]
	561 Move X0, 0xDC1000
	562 Move X0, [X0+736]
	563 Call 0x1C17D08
	564 Call 0x1C17F10
	565 Move X19, X0
	566 Move X0, 0xDC1000
	567 Move X0, [X0+760]
	568 Move X0, 0xDC1000
	569 Move X0, [X0+736]
	570 Call 0x1C17D08
	571 Call 0x1C17F10
	572 Move X19, X0
	573 Move X0, 0xDCE000
	574 Move X0, [X0+1968]

