Type: System.Collections.SortedList/ValueList

Method: System.Void .ctor(System.Collections.SortedList sortedList)

Disassembly:
	0x033557B8 ADD X1, X31, 0xC
	0x033557BC MOV X0, X19
	0x033557C0 MOV X2, X31
	0x033557C4 BL 0x33DE64C
	0x033557C8 LDR X0, [X20 + 0x48]
	0x033557CC CBZ X0, 0x335581C
	0x033557D0 LDR X8, [X0]
	0x033557D4 LDR X1, [X8 + 0x350]
	0x033557D8 LDR X9, [X8 + 0x348]
	0x033557DC BLR X9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], X19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Int32 get_Count()

Disassembly:
	0x03357530 CMP W9, 0x0
	0x03357534 CSEL W9, W10, W9, LT
	0x03357538 SBFM W9, W9, 0x5, 0x1F
	0x0335753C ADD W21, W9, 0x1
	0x03357540 B 0x3357548
	0x03357544 MOV W21, W31
	0x03357548 LDR X0, [X8]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, [X8+32]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Boolean get_IsReadOnly()

Disassembly:
	0x0335754C MOV W1, W21
	0x03357550 BL 0x1C16D6C

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Boolean get_IsFixedSize()

Disassembly:
	0x03357554 STR X0, [X20 + 0x10]
	0x03357558 MOV X2, X0

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Boolean get_IsSynchronized()

Disassembly:
	0x0335755C LDR X0, [X19 + 0x10]
	0x03357560 MOV W1, W31
	0x03357564 MOV W3, W31
	0x03357568 MOV W4, W21
	0x0335756C MOV X5, X31
	0x03357570 BL 0x339FCE8
	0x03357574 LDR V0, [X19 + 0x18]
	0x03357578 STR D0, [X20 + 0x18]
	0x0335757C LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+680]
	007 Move X1, [X8+688]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Object get_SyncRoot()

Disassembly:
	0x03357580 LDP X30, X21, [X31], #0x20
	0x03357584 RET
	0x03357588 ADRP X0, 0xDA1000
	0x0335758C LDR X0, [X0 + 0x528]
	0x03357590 BL 0x1C16D08
	0x03357594 BL 0x1C16F10
	0x03357598 MOV X19, X0
	0x0335759C ADRP X0, 0xDD3000
	0x033575A0 LDR X0, [X0 + 0x578]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+696]
	007 Move X1, [X8+704]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Int32 Add(System.Object key)

Disassembly:
	0x033575A4 BL 0x1C16D08
	0x033575A8 MOV X1, X0
	0x033575AC MOV X0, X19
	0x033575B0 MOV X2, X31
	0x033575B4 BL 0x330E100
	0x033575B8 ADRP X0, 0xDD3000
	0x033575BC LDR X0, [X0 + 0x580]
	0x033575C0 BL 0x1C16D08
	0x033575C4 MOV X1, X0
	0x033575C8 MOV X0, X19
	0x033575CC BL 0x1C16DEC
	0x033575D0 B 0x33575D4
	0x033575D4 SUB X31, X31, 0x30
	0x033575D8 STP X30, X21, [X31 + 0x10]
	0x033575DC STP X20, X19, [X31 + 0x20]
	0x033575E0 TBNZ X1, 0x1F, 0x3357628
	0x033575E4 LDR W8, [X0 + 0x18]
	0x033575E8 CMP W8, W1
	0x033575EC B.LE 0x3357628

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xD9D000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xDC7000
	009 Move X0, [X0+3640]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call NotSupportedException..ctor, X0, X1
	015 Move X0, 0xDD4000
	016 Move X0, [X0+1272]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Void Clear()

Disassembly:
	0x033575F0 LDR X8, [X0 + 0x10]
	0x033575F4 CBZ X8, 0x33576A4
	0x033575F8 LDR W10, [X8 + 0x18]
	0x033575FC UBFM W9, W1, 0x5, 0x1F
	0x03357600 CMP W9, W10
	0x03357604 B.CS 0x33576A8
	0x03357608 ADD X8, X8, W9, 0x2, UXTW
	0x0335760C LDR W8, [X8 + 0x20]
	0x03357610 LDP X20, X19, [X31 + 0x20]
	0x03357614 LDP X30, X21, [X31 + 0x10]
	0x03357618 LSRV W8, W8, W1
	0x0335761C AND W0, W8, 0x1
	0x03357620 ADD X31, X31, 0x30
	0x03357624 RET
	0x03357628 STR W1, [X31 + 0xC]
	0x0335762C ADRP X0, 0xD9C000
	0x03357630 LDR X0, [X0 + 0x758]
	0x03357634 BL 0x1C16D08
	0x03357638 ADD X1, X31, 0xC

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xD9D000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xDC7000
	009 Move X0, [X0+3640]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call NotSupportedException..ctor, X0, X1
	015 Move X0, 0xDD4000
	016 Move X0, [X0+1280]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Boolean Contains(System.Object value)

Disassembly:
	0x0335763C BL 0x1C16E04
	0x03357640 MOV X19, X0
	0x03357644 ADRP X0, 0xDA4000
	0x03357648 LDR X0, [X0 + 0x760]
	0x0335764C BL 0x1C16D08
	0x03357650 BL 0x1C16F10
	0x03357654 MOV X20, X0
	0x03357658 ADRP X0, 0xDA7000
	0x0335765C LDR X0, [X0 + 0x130]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X3, [X8+744]
	007 Move X2, [X8+752]
	008 Move X30, [X31+16]
	009 CallNoReturn X3
	010 Call 0x1C17F20

Method: System.Void CopyTo(System.Array array, System.Int32 arrayIndex)

Disassembly:
	0x03357660 BL 0x1C16D08
	0x03357664 MOV X21, X0
	0x03357668 ADRP X0, 0xDC4000
	0x0335766C LDR X0, [X0 + 0x660]
	0x03357670 BL 0x1C16D08
	0x03357674 MOV X3, X0
	0x03357678 MOV X0, X20
	0x0335767C MOV X1, X21
	0x03357680 MOV X2, X19
	0x03357684 MOV X4, X31
	0x03357688 BL 0x3312C8C
	0x0335768C ADRP X0, 0xDD3000
	0x03357690 LDR X0, [X0 + 0x588]
	0x03357694 BL 0x1C16D08
	0x03357698 MOV X1, X0
	0x0335769C MOV X0, X20
	0x033576A0 BL 0x1C16DEC
	0x033576A4 BL 0x1C16F20
	0x033576A8 BL 0x1C16F28
	0x033576AC AND W2, W2, 0x1
	0x033576B0 B 0x33576B4
	0x033576B4 SUB X31, X31, 0x30
	0x033576B8 STP X30, X21, [X31 + 0x10]
	0x033576BC STP X20, X19, [X31 + 0x20]
	0x033576C0 TBNZ X1, 0x1F, 0x3357728
	0x033576C4 LDR W8, [X0 + 0x18]
	0x033576C8 CMP W8, W1
	0x033576CC B.LE 0x3357728
	0x033576D0 LDR X8, [X0 + 0x10]
	0x033576D4 CBZ X8, 0x33577A4
	0x033576D8 LDR W10, [X8 + 0x18]
	0x033576DC UBFM W9, W1, 0x5, 0x1F
	0x033576E0 CMP W9, W10
	0x033576E4 B.CS 0x33577A8
	0x033576E8 ADD X8, X8, W9, 0x2, UXTW
	0x033576EC LDR W9, [X8 + 0x20]
	0x033576F0 MOVZ W10, 0x1
	0x033576F4 LSLV W10, W10, W1
	0x033576F8 ANDS W31, W2, 0x1
	0x033576FC BIC W11, W9, W10, 0x0
	0x03357700 ORR W9, W9, W10, 0x0
	0x03357704 CSEL W9, W9, W11, NE
	0x03357708 STR W9, [X8 + 0x20]
	0x0335770C LDR W8, [X0 + 0x1C]
	0x03357710 LDP X20, X19, [X31 + 0x20]
	0x03357714 LDP X30, X21, [X31 + 0x10]
	0x03357718 ADD W8, W8, 0x1
	0x0335771C STR W8, [X0 + 0x1C]
	0x03357720 ADD X31, X31, 0x30
	0x03357724 RET
	0x03357728 STR W1, [X31 + 0xC]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W19, W2
	006 Move X20, X1
	007 Move X21, X0
	008 Compare X1, 0
	009 JumpIfEqual {14}
	010 Move X0, X20
	011 Move X1, X31
	012 Call Array.get_Rank, X0
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move X0, [X21+16]
	015 Compare X0, 0
	016 JumpIfEqual {34}
	017 Move X8, [X0]
	018 Move X21, [X0+24]
	019 Move X9, [X8+632]
	020 Move X1, [X8+640]
	021 NotImplemented "Instruction BLR not yet implemented."
	022 Move X2, X20
	023 Move W3, W19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W4, W0
	027 Move X0, X21
	028 Move W1, W31
	029 Move X5, X31
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Call Array.Copy, X0, X1, X2, X3, X4
	033 Return 
	034 Call 0x1C17F20
	035 Move X0, 0xDA5000
	036 Move X0, [X0+1400]
	037 Call 0x1C17D08
	038 Call 0x1C17F10
	039 Move X19, X0
	040 Move X0, 0xDC6000
	041 Move X0, [X0+776]
	042 Call 0x1C17D08
	043 Move X20, X0
	044 Move X0, 0xDC5000
	045 Move X0, [X0+1600]
	046 Call 0x1C17D08
	047 Move X2, X0
	048 Move X0, X19
	049 Move X1, X20
	050 Move X3, X31
	051 Call ArgumentException..ctor, X0, X1, X2
	052 Move X0, 0xDD4000
	053 Move X0, [X0+1288]
	054 Call 0x1C17D08
	055 Move X1, X0
	056 Move X0, X19
	057 Call 0x1C17DEC

Method: System.Void Insert(System.Int32 index, System.Object value)

Disassembly:
	0x0335772C ADRP X0, 0xD9C000
	0x03357730 LDR X0, [X0 + 0x758]
	0x03357734 BL 0x1C16D08
	0x03357738 ADD X1, X31, 0xC
	0x0335773C BL 0x1C16E04
	0x03357740 MOV X19, X0
	0x03357744 ADRP X0, 0xDA4000
	0x03357748 LDR X0, [X0 + 0x760]
	0x0335774C BL 0x1C16D08
	0x03357750 BL 0x1C16F10
	0x03357754 MOV X20, X0
	0x03357758 ADRP X0, 0xDA7000
	0x0335775C LDR X0, [X0 + 0x130]
	0x03357760 BL 0x1C16D08
	0x03357764 MOV X21, X0
	0x03357768 ADRP X0, 0xDC4000
	0x0335776C LDR X0, [X0 + 0x660]
	0x03357770 BL 0x1C16D08
	0x03357774 MOV X3, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xD9D000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xDC7000
	009 Move X0, [X0+3640]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call NotSupportedException..ctor, X0, X1
	015 Move X0, 0xDD4000
	016 Move X0, [X0+1296]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Object get_Item(System.Int32 index)

Disassembly:
	0x03357778 MOV X0, X20
	0x0335777C MOV X1, X21
	0x03357780 MOV X2, X19
	0x03357784 MOV X4, X31
	0x03357788 BL 0x3312C8C
	0x0335778C ADRP X0, 0xDD3000
	0x03357790 LDR X0, [X0 + 0x590]
	0x03357794 BL 0x1C16D08
	0x03357798 MOV X1, X0

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X3, [X8+776]
	007 Move X2, [X8+784]
	008 Move X30, [X31+16]
	009 CallNoReturn X3
	010 Call 0x1C17F20

Method: System.Void set_Item(System.Int32 index, System.Object value)

Disassembly:
	0x0335779C MOV X0, X20
	0x033577A0 BL 0x1C16DEC
	0x033577A4 BL 0x1C16F20
	0x033577A8 BL 0x1C16F28
	0x033577AC STR X30, [X31 - 0x10]!
	0x033577B0 LDR W10, [X0 + 0x18]
	0x033577B4 SUBS W11, W10, 0x1
	0x033577B8 B.LT 0x3357800
	0x033577BC LDR X12, [X0 + 0x10]
	0x033577C0 CBZ X12, 0x3357818
	0x033577C4 ADD W13, W10, 0x1E
	0x033577C8 CMP W11, 0x0
	0x033577CC LDR W10, [X12 + 0x18]
	0x033577D0 CSEL W11, W13, W11, LT
	0x033577D4 SBFM W11, W11, 0x5, 0x1F
	0x033577D8 MOV X8, X31
	0x033577DC SBFM W9, W1, 0x0, 0x0
	0x033577E0 ADD W11, W11, 0x1
	0x033577E4 ADD X12, X12, 0x20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xD9D000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xDC7000
	009 Move X0, [X0+3640]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call NotSupportedException..ctor, X0, X1
	015 Move X0, 0xDD4000
	016 Move X0, [X0+1304]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Collections.IEnumerator GetEnumerator()

Disassembly:
	0x033577E8 CMP X8, X10
	0x033577EC B.CS 0x3357814
	0x033577F0 STR W9, [X12, X8, LSL #2]
	0x033577F4 ADD X8, X8, 0x1
	0x033577F8 CMP X11, X8
	0x033577FC B.NE 0x33577E8
	0x03357800 LDR W8, [X0 + 0x1C]
	0x03357804 ADD W8, W8, 0x1
	0x03357808 STR W8, [X0 + 0x1C]
	0x0335780C LDR X30, [X31], #0x10
	0x03357810 RET
	0x03357814 BL 0x1C16F28
	0x03357818 BL 0x1C16F20
	0x0335781C LDR W0, [X0 + 0x18]
	0x03357820 RET
	0x03357824 SUB X31, X31, 0x50
	0x03357828 STP X30, X25, [X31 + 0x10]
	0x0335782C STP X24, X23, [X31 + 0x20]
	0x03357830 STP X22, X21, [X31 + 0x30]
	0x03357834 STP X20, X19, [X31 + 0x40]
	0x03357838 ADRP X22, 0x1085000
	0x0335783C LDRB W8, [X22 + 0xDEF]
	0x03357840 MOV W19, W2
	0x03357844 MOV X21, X1
	0x03357848 MOV X20, X0
	0x0335784C TBNZ X8, 0x0, 0x335787C
	0x03357850 ADRP X0, 0xD9E000
	0x03357854 LDR X0, [X0 + 0x9B8]
	0x03357858 BL 0x1C16CF4
	0x0335785C ADRP X0, 0xD9C000
	0x03357860 LDR X0, [X0 + 0x618]
	0x03357864 BL 0x1C16CF4
	0x03357868 ADRP X0, 0xD9D000
	0x0335786C LDR X0, [X0 + 0xE58]
	0x03357870 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1086000
	006 Move W8, [X20+3556]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xDD4000
	013 Move X0, [X0+1072]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3556], W8
	017 Move X19, [X19+16]
	018 Compare X19, 0
	019 JumpIfEqual {43}
	020 Move X8, [X19]
	021 Move X20, 0xDD4000
	022 Move X0, X19
	023 Move X9, [X8+632]
	024 Move X1, [X8+640]
	025 Move X20, [X20+1072]
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Move X8, [X20]
	028 Move W20, W0
	029 Move X0, X8
	030 Call 0x1C17F10
	031 Move W4, 2
	032 Move X1, X19
	033 Move W2, W31
	034 Move W3, W20
	035 Move X21, X0
	036 Call SortedListEnumerator..ctor, X0, X1, X2, X3, X4
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X0, X21
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Return X0
	043 Call 0x1C17F20

Method: System.Int32 IndexOf(System.Object value)

Disassembly:
	0x03357874 MOVZ W8, 0x1
	0x03357878 STRB W8, [X22 + 0xDEF]
	0x0335787C CBZ X21, 0x3357BBC
	0x03357880 TBNZ X19, 0x1F, 0x3357BF0
	0x03357884 MOV X0, X21
	0x03357888 MOV X1, X31
	0x0335788C BL 0x339FCE4
	0x03357890 CMP W0, 0x1
	0x03357894 B.NE 0x3357C6C
	0x03357898 ADRP X8, 0xD9D000
	0x0335789C LDR X8, [X8 + 0xE58]
	0x033578A0 MOV X0, X21
	0x033578A4 LDR X1, [X8]
	0x033578A8 BL 0x1C16E00
	0x033578AC CBZ X0, 0x33578E4
	0x033578B0 LDR W8, [X20 + 0x18]
	0x033578B4 MOV X22, X0
	0x033578B8 SUBS W9, W8, 0x1
	0x033578BC B.LT 0x335792C
	0x033578C0 ADD W10, W8, 0x1E
	0x033578C4 CMP W9, 0x0
	0x033578C8 LDR X0, [X20 + 0x10]!
	0x033578CC CSEL W9, W10, W9, LT
	0x033578D0 SBFM W23, W9, 0x5, 0x1F
	0x033578D4 ANDS W21, W8, 0x1F
	0x033578D8 ADD W4, W23, 0x1
	0x033578DC B.NE 0x3357948
	0x033578E0 B 0x33579A4
	0x033578E4 ADRP X22, 0xD9C000
	0x033578E8 LDR X22, [X22 + 0x618]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1086000
	006 Move W8, [X21+3557]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xDD4000
	014 Move X0, [X0+1120]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3557], W8
	018 Move X0, [X20+16]
	019 Compare X0, 0
	020 JumpIfEqual {39}
	021 Move X8, [X0]
	022 Move X21, 0xDD4000
	023 Move X20, [X0+24]
	024 Move X9, [X8+632]
	025 Move X1, [X8+640]
	026 Move X21, [X21+1120]
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X4, [X21]
	029 Move W3, W0
	030 Move X0, X20
	031 Move X1, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move W2, W31
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Call Array.IndexOf, X0, X1, X2, X3
	038 Return X0
	039 Call 0x1C17F20

Method: System.Void Remove(System.Object value)

Disassembly:
	0x033578EC MOV X0, X21
	0x033578F0 LDR X1, [X22]
	0x033578F4 BL 0x1C16E00
	0x033578F8 CBZ X0, 0x33579CC
	0x033578FC LDR W23, [X20 + 0x18]
	0x03357900 ADD W8, W23, 0x7
	0x03357904 CMP W23, 0x0
	0x03357908 CSEL W25, W8, W23, LT
	0x0335790C SUBS W8, W23, 0x1
	0x03357910 B.LT 0x3357A84
	0x03357914 ADD W9, W23, 0x6
	0x03357918 CMP W8, 0x0
	0x0335791C CSEL W8, W9, W8, LT
	0x03357920 SBFM W8, W8, 0x3, 0x1F
	0x03357924 ADD W24, W8, 0x1
	0x03357928 B 0x3357A88
	0x0335792C LDR X0, [X20 + 0x10]!
	0x03357930 SUB W8, W31, W8
	0x03357934 MOV W4, W31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xD9D000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xDC7000
	009 Move X0, [X0+3640]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call NotSupportedException..ctor, X0, X1
	015 Move X0, 0xDD4000
	016 Move X0, [X0+1312]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Void RemoveAt(System.Int32 index)

Disassembly:
	0x03357938 AND W8, W8, 0x1F
	0x0335793C CBZ W8, 0x33579A4
	0x03357940 SUB W21, W31, W8
	0x03357944 MOVN W23, 0x0
	0x03357948 SUB W4, W4, 0x1
	0x0335794C MOV W1, W31
	0x03357950 MOV X2, X22
	0x03357954 MOV W3, W19
	0x03357958 MOV X5, X31
	0x0335795C BL 0x339FCE8
	0x03357960 LDR X8, [X20]
	0x03357964 CBZ X8, 0x3357BB8
	0x03357968 LDR W9, [X8 + 0x18]
	0x0335796C CMP W23, W9
	0x03357970 B.CS 0x3357BB4
	0x03357974 LDR W10, [X22 + 0x18]
	0x03357978 ADD W9, W23, W19
	0x0335797C CMP W9, W10
	0x03357980 B.CS 0x3357BB4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xD9D000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xDC7000
	009 Move X0, [X0+3640]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call NotSupportedException..ctor, X0, X1
	015 Move X0, 0xDD4000
	016 Move X0, [X0+1320]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

