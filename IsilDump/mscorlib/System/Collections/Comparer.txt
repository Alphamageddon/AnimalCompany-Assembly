Type: System.Collections.Comparer

Method: System.Void .ctor(System.Globalization.CultureInfo culture)

Disassembly:
	0x03350DFC STR V0, [X31]
	0x03350E00 BL 0x1C16E04
	0x03350E04 MOV X1, X0
	0x03350E08 MOV X0, X20
	0x03350E0C MOV W2, W19
	0x03350E10 MOV X3, X31
	0x03350E14 BL 0x339F798
	0x03350E18 LDR X21, [X21 + 0x20]
	0x03350E1C ADD W19, W19, 0x1
	0x03350E20 CBNZ X21, 0x3350DF0
	0x03350E24 LDP X20, X19, [X31 + 0x30]
	0x03350E28 LDP X22, X21, [X31 + 0x20]
	0x03350E2C LDR X30, [X31 + 0x10]
	0x03350E30 ADD X31, X31, 0x40
	0x03350E34 RET
	0x03350E38 ADRP X0, 0xDA8000
	0x03350E3C LDR X0, [X0 + 0x528]
	0x03350E40 BL 0x1C16D08
	0x03350E44 BL 0x1C16F10
	0x03350E48 MOV X19, X0
	0x03350E4C ADRP X0, 0xDCB000
	0x03350E50 LDR X0, [X0 + 0x640]
	0x03350E54 BL 0x1C16D08
	0x03350E58 MOV X1, X0
	0x03350E5C MOV X0, X19
	0x03350E60 MOV X2, X31
	0x03350E64 BL 0x330E100
	0x03350E68 B 0x3350F2C
	0x03350E6C ADRP X0, 0xDAB000
	0x03350E70 LDR X0, [X0 + 0x578]
	0x03350E74 BL 0x1C16D08
	0x03350E78 BL 0x1C16F10
	0x03350E7C MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X1
	005 Move X1, X31
	006 Move X19, X0
	007 Call Object..ctor, X0
	008 Compare X20, 0
	009 JumpIfEqual {20}
	010 Move X8, [X20]
	011 Move X0, X20
	012 Move X9, [X8+504]
	013 Move X1, [X8+512]
	014 NotImplemented "Instruction BLR not yet implemented."
	015 Move [X19+16], X0
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X30, [X31+32]
	019 Return 
	020 Move X0, 0xDA9000
	021 Move X0, [X0+1320]
	022 Call 0x1C17D08
	023 Call 0x1C17F10
	024 Move X19, X0
	025 Move X0, 0xDD2000
	026 Move X0, [X0+4080]
	027 Call 0x1C17D08
	028 Move X1, X0
	029 Move X0, X19
	030 Move X2, X31
	031 Call ArgumentNullException..ctor, X0, X1
	032 Move X0, 0xDDB000
	033 Move X0, [X0+544]
	034 Call 0x1C17D08
	035 Move X1, X0
	036 Move X0, X19
	037 Call 0x1C17DEC

Method: System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x03350E80 ADRP X0, 0xDCC000
	0x03350E84 LDR X0, [X0 + 0x308]
	0x03350E88 BL 0x1C16D08
	0x03350E8C MOV X1, X0
	0x03350E90 MOV X0, X19
	0x03350E94 MOV X2, X31
	0x03350E98 BL 0x3314A68
	0x03350E9C B 0x3350F2C
	0x03350EA0 ADRP X0, 0xDAB000
	0x03350EA4 LDR X0, [X0 + 0x760]
	0x03350EA8 BL 0x1C16D08
	0x03350EAC BL 0x1C16F10
	0x03350EB0 MOV X19, X0
	0x03350EB4 ADRP X0, 0xDAE000
	0x03350EB8 LDR X0, [X0 + 0x130]
	0x03350EBC BL 0x1C16D08
	0x03350EC0 MOV X20, X0
	0x03350EC4 ADRP X0, 0xDCB000
	0x03350EC8 LDR X0, [X0 + 0x670]
	0x03350ECC BL 0x1C16D08
	0x03350ED0 MOV X2, X0
	0x03350ED4 MOV X0, X19
	0x03350ED8 MOV X1, X20
	0x03350EDC MOV X3, X31
	0x03350EE0 BL 0x3311888
	0x03350EE4 B 0x3350F2C
	0x03350EE8 ADRP X0, 0xDAB000
	0x03350EEC LDR X0, [X0 + 0x578]
	0x03350EF0 BL 0x1C16D08
	0x03350EF4 BL 0x1C16F10
	0x03350EF8 MOV X19, X0
	0x03350EFC ADRP X0, 0xDCB000
	0x03350F00 LDR X0, [X0 + 0x660]
	0x03350F04 BL 0x1C16D08
	0x03350F08 MOV X20, X0
	0x03350F0C ADRP X0, 0xDAE000
	0x03350F10 LDR X0, [X0 + 0x130]
	0x03350F14 BL 0x1C16D08
	0x03350F18 MOV X2, X0
	0x03350F1C MOV X0, X19
	0x03350F20 MOV X1, X20
	0x03350F24 MOV X3, X31
	0x03350F28 BL 0x330E16C
	0x03350F2C ADRP X0, 0xDDA000
	0x03350F30 LDR X0, [X0 + 0x2C8]
	0x03350F34 BL 0x1C16D08
	0x03350F38 MOV X1, X0
	0x03350F3C MOV X0, X19
	0x03350F40 BL 0x1C16DEC
	0x03350F44 STP X30, X21, [X31 - 0x20]!
	0x03350F48 STP X20, X19, [X31 + 0x10]
	0x03350F4C ADRP X20, 0x108C000
	0x03350F50 ADRP X21, 0xDDA000
	0x03350F54 LDRB W8, [X20 + 0xDC5]
	0x03350F58 LDR X21, [X21 + 0x2D0]
	0x03350F5C MOV X19, X0
	0x03350F60 TBNZ X8, 0x0, 0x3350F78
	0x03350F64 ADRP X0, 0xDDA000
	0x03350F68 LDR X0, [X0 + 0x2D0]
	0x03350F6C BL 0x1C16CF4
	0x03350F70 MOVZ W8, 0x1
	0x03350F74 STRB W8, [X20 + 0xDC5]
	0x03350F78 LDR X0, [X21]
	0x03350F7C BL 0x1C16F10
	0x03350F80 MOV X1, X19
	0x03350F84 MOV X20, X0
	0x03350F88 BL 0x3350F9C
	0x03350F8C MOV X0, X20
	0x03350F90 LDP X20, X19, [X31 + 0x10]
	0x03350F94 LDP X30, X21, [X31], #0x20
	0x03350F98 RET
	0x03350F9C STR X30, [X31 - 0x20]!
	0x03350FA0 STP X20, X19, [X31 + 0x10]
	0x03350FA4 MOV X20, X1
	0x03350FA8 MOV X1, X31
	0x03350FAC MOV X19, X0
	0x03350FB0 BL 0x33BDD8C
	0x03350FB4 STR X20, [X19 + 0x10]
	0x03350FB8 CBZ X20, 0x3350FDC
	0x03350FBC LDR W8, [X20 + 0x18]
	0x03350FC0 MOVZ W9, 0x1
	0x03350FC4 STRB W9, [X19 + 0x24]
	0x03350FC8 STR X31, [X19 + 0x18]
	0x03350FCC STR W8, [X19 + 0x20]
	0x03350FD0 LDP X20, X19, [X31 + 0x10]
	0x03350FD4 LDR X30, [X31], #0x20
	0x03350FD8 RET
	0x03350FDC BL 0x1C16F20
	0x03350FE0 STP X30, X21, [X31 - 0x20]!
	0x03350FE4 STP X20, X19, [X31 + 0x10]
	0x03350FE8 ADRP X20, 0x108C000
	0x03350FEC ADRP X21, 0xDDA000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x108D000
	007 Move W8, [X21+3509]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0xDDB000
	015 Move X0, [X0+552]
	016 Call 0x1C17CF4
	017 Move X0, 0xDD2000
	018 Move X0, [X0+4048]
	019 Call 0x1C17CF4
	020 Move X0, 0xDA4000
	021 Move X0, [X0+1728]
	022 Call 0x1C17CF4
	023 Move X0, 0xDDB000
	024 Move X0, [X0+560]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+3509], W8
	028 Move X0, X19
	029 Move X1, X31
	030 Call Object..ctor, X0
	031 Compare X20, 0
	032 JumpIfEqual {81}
	033 Move X8, 0xDA4000
	034 Move X8, [X8+1728]
	035 Move X22, 0xDDB000
	036 Move X0, [X8]
	037 Move X8, 0xDDB000
	038 Move X8, [X8+552]
	039 Move W9, [X0+224]
	040 Move X21, [X8]
	041 Move X22, [X22+560]
	042 Compare W9, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X21
	046 Move X1, X31
	047 Call Type.GetTypeFromHandle, X0
	048 Move X1, [X22]
	049 Move X2, X0
	050 Move X0, X20
	051 Move X3, X31
	052 Call SerializationInfo.GetValue, X0, X1, X2
	053 Compare X0, 0
	054 JumpIfEqual {74}
	055 Move X8, 0xDD2000
	056 Move X8, [X8+4048]
	057 Move X9, [X0]
	058 Move X1, [X8]
	059 Move W10, [X9+304]
	060 Move W8, [X1+304]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X10, [X9+200]
	063 Subtract X9, X8, 1
	064 Move X10, [X10]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move [X19+16], X0
	067 Move X10, [X0]
	068 Move W11, [X10+304]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X8, [X10+200]
	071 Move X8, [X8]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Call 0x1C181E0
	074 Move [X19+16], X31
	075 Move X20, [X31+32]
	076 Move X19, [X31+40]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X30, [X31+48]
	080 Return 
	081 Move X0, 0xDA9000
	082 Move X0, [X0+1320]
	083 Call 0x1C17D08
	084 Call 0x1C17F10
	085 Move X19, X0
	086 Move X0, 0xDCE000
	087 Move X0, [X0+728]
	088 Call 0x1C17D08
	089 Move X1, X0
	090 Move X0, X19
	091 Move X2, X31
	092 Call ArgumentNullException..ctor, X0, X1
	093 Move X0, 0xDDB000
	094 Move X0, [X0+568]
	095 Call 0x1C17D08
	096 Move X1, X0
	097 Move X0, X19
	098 Call 0x1C17DEC

Method: System.Void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x03350FF0 LDRB W8, [X20 + 0xDC6]
	0x03350FF4 LDR X21, [X21 + 0x2D0]
	0x03350FF8 MOV X19, X0
	0x03350FFC TBNZ X8, 0x0, 0x3351014
	0x03351000 ADRP X0, 0xDD9000
	0x03351004 LDR X0, [X0 + 0x2D0]
	0x03351008 BL 0x1C16CF4
	0x0335100C MOVZ W8, 0x1
	0x03351010 STRB W8, [X20 + 0xDC6]
	0x03351014 LDR X0, [X21]
	0x03351018 BL 0x1C16F10
	0x0335101C MOV X1, X19
	0x03351020 MOV X20, X0
	0x03351024 BL 0x3350F9C
	0x03351028 MOV X0, X20
	0x0335102C LDP X20, X19, [X31 + 0x10]
	0x03351030 LDP X30, X21, [X31], #0x20
	0x03351034 RET
	0x03351038 STP X30, X23, [X31 - 0x30]!
	0x0335103C STP X22, X21, [X31 + 0x10]
	0x03351040 STP X20, X19, [X31 + 0x20]
	0x03351044 CBZ X1, 0x33510D8
	0x03351048 MOV X21, X0
	0x0335104C LDR X8, [X21 + 0x10]!
	0x03351050 MOV X19, X0
	0x03351054 LDR W9, [X21 + 0x8]
	0x03351058 ADD W9, W9, 0x1
	0x0335105C STR W9, [X21 + 0x8]
	0x03351060 CBZ X8, 0x33510C4
	0x03351064 MOV X20, X1
	0x03351068 MOV X22, X31
	0x0335106C LDR X0, [X8 + 0x10]
	0x03351070 CBZ X0, 0x33510D4
	0x03351074 MOV X23, X8
	0x03351078 LDR X8, [X0]
	0x0335107C MOV X1, X20
	0x03351080 LDP X9, X2, [X8 + 0x138]
	0x03351084 BLR X9
	0x03351088 TBNZ X0, 0x0, 0x335109C
	0x0335108C LDR X8, [X23 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x108D000
	006 Move W8, [X21+3510]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xDDA000
	014 Move X0, [X0+560]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3510], W8
	018 Compare X19, 0
	019 JumpIfEqual {32}
	020 Move X8, 0xDDA000
	021 Move X8, [X8+560]
	022 Move X2, [X20+16]
	023 Move X0, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X1, [X8]
	027 Move X3, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call SerializationInfo.AddValue, X0, X1, X2
	031 Return 
	032 Move X0, 0xDA8000
	033 Move X0, [X0+1320]
	034 Call 0x1C17D08
	035 Call 0x1C17F10
	036 Move X19, X0
	037 Move X0, 0xDCD000
	038 Move X0, [X0+728]
	039 Call 0x1C17D08
	040 Move X1, X0
	041 Move X0, X19
	042 Move X2, X31
	043 Call ArgumentNullException..ctor, X0, X1
	044 Move X0, 0xDDA000
	045 Move X0, [X0+576]
	046 Call 0x1C17D08
	047 Move X1, X0
	048 Move X0, X19
	049 Call 0x1C17DEC

Method: System.Int32 Compare(System.Object a, System.Object b)

Disassembly:
	0x03351090 MOV X22, X23
	0x03351094 CBNZ X8, 0x335106C
	0x03351098 B 0x33510C4
	0x0335109C LDR X9, [X21]
	0x033510A0 LDR X8, [X23 + 0x20]
	0x033510A4 CMP X23, X9
	0x033510A8 B.EQ 0x33510B4
	0x033510AC CBZ X22, 0x33510D4
	0x033510B0 ADD X21, X22, 0x20
	0x033510B4 STR X8, [X21]
	0x033510B8 LDR W8, [X19 + 0x1C]
	0x033510BC SUB W8, W8, 0x1
	0x033510C0 STR W8, [X19 + 0x1C]
	0x033510C4 LDP X20, X19, [X31 + 0x20]
	0x033510C8 LDP X22, X21, [X31 + 0x10]
	0x033510CC LDP X30, X23, [X31], #0x30
	0x033510D0 RET
	0x033510D4 BL 0x1C16F20
	0x033510D8 ADRP X0, 0xDA7000
	0x033510DC LDR X0, [X0 + 0x528]
	0x033510E0 BL 0x1C16D08
	0x033510E4 BL 0x1C16F10
	0x033510E8 MOV X19, X0
	0x033510EC ADRP X0, 0xDCC000
	0x033510F0 LDR X0, [X0 + 0x70]
	0x033510F4 BL 0x1C16D08
	0x033510F8 MOV X20, X0
	0x033510FC ADRP X0, 0xDD9000
	0x03351100 LDR X0, [X0 + 0x288]
	0x03351104 BL 0x1C16D08
	0x03351108 MOV X2, X0
	0x0335110C MOV X0, X19
	0x03351110 MOV X1, X20
	0x03351114 MOV X3, X31
	0x03351118 BL 0x3315F7C
	0x0335111C ADRP X0, 0xDD9000
	0x03351120 LDR X0, [X0 + 0x2D8]
	0x03351124 BL 0x1C16D08
	0x03351128 MOV X1, X0
	0x0335112C MOV X0, X19
	0x03351130 BL 0x1C16DEC
	0x03351134 SUB X31, X31, 0x30
	0x03351138 STP X30, X21, [X31 + 0x10]
	0x0335113C STP X20, X19, [X31 + 0x20]
	0x03351140 ADRP X21, 0x108B000
	0x03351144 ADRP X20, 0xDAA000
	0x03351148 LDRB W8, [X21 + 0xDC7]
	0x0335114C LDR X20, [X20 + 0xF10]
	0x03351150 MOV X19, X0
	0x03351154 TBNZ X8, 0x0, 0x335116C
	0x03351158 ADRP X0, 0xDAA000
	0x0335115C LDR X0, [X0 + 0xF10]
	0x03351160 BL 0x1C16CF4
	0x03351164 MOVZ W8, 0x1
	0x03351168 STRB W8, [X21 + 0xDC7]
	0x0335116C MOV X0, X19
	0x03351170 BL 0x3351198
	0x03351174 LDR X8, [X20]
	0x03351178 STP X0, X1, [X31]
	0x0335117C ADD X1, X31, 0x0
	0x03351180 MOV X0, X8
	0x03351184 BL 0x1C16E04
	0x03351188 LDP X20, X19, [X31 + 0x20]
	0x0335118C LDP X30, X21, [X31 + 0x10]
	0x03351190 ADD X31, X31, 0x30
	0x03351194 RET
	0x03351198 STP X30, X19, [X31 - 0x10]!
	0x0335119C LDR X8, [X0 + 0x18]
	0x033511A0 CBZ X8, 0x33511B0
	0x033511A4 LDP X0, X1, [X8 + 0x10]
	0x033511A8 LDP X30, X19, [X31], #0x10
	0x033511AC RET
	0x033511B0 ADRP X0, 0xDA2000
	0x033511B4 LDR X0, [X0 + 0x5B0]
	0x033511B8 BL 0x1C16D08
	0x033511BC BL 0x1C16F10
	0x033511C0 MOV X19, X0
	0x033511C4 ADRP X0, 0xDCC000
	0x033511C8 LDR X0, [X0 + 0x290]
	0x033511CC BL 0x1C16D08
	0x033511D0 MOV X1, X0
	0x033511D4 MOV X0, X19
	0x033511D8 MOV X2, X31
	0x033511DC BL 0x337DF1C
	0x033511E0 ADRP X0, 0xDD9000
	0x033511E4 LDR X0, [X0 + 0x2E0]
	0x033511E8 BL 0x1C16D08
	0x033511EC MOV X1, X0
	0x033511F0 MOV X0, X19
	0x033511F4 BL 0x1C16DEC
	0x033511F8 STP X30, X19, [X31 - 0x10]!
	0x033511FC LDR X8, [X0 + 0x18]
	0x03351200 CBZ X8, 0x3351210
	0x03351204 LDR X0, [X8 + 0x10]
	0x03351208 LDP X30, X19, [X31], #0x10
	0x0335120C RET
	0x03351210 ADRP X0, 0xDA2000
	0x03351214 LDR X0, [X0 + 0x5B0]
	0x03351218 BL 0x1C16D08
	0x0335121C BL 0x1C16F10
	0x03351220 MOV X19, X0
	0x03351224 ADRP X0, 0xDCC000
	0x03351228 LDR X0, [X0 + 0x290]
	0x0335122C BL 0x1C16D08
	0x03351230 MOV X1, X0
	0x03351234 MOV X0, X19
	0x03351238 MOV X2, X31
	0x0335123C BL 0x337DF1C
	0x03351240 ADRP X0, 0xDD9000
	0x03351244 LDR X0, [X0 + 0x2E8]
	0x03351248 BL 0x1C16D08
	0x0335124C MOV X1, X0
	0x03351250 MOV X0, X19
	0x03351254 BL 0x1C16DEC
	0x03351258 STP X30, X19, [X31 - 0x10]!
	0x0335125C LDR X8, [X0 + 0x18]
	0x03351260 CBZ X8, 0x3351270
	0x03351264 LDR X0, [X8 + 0x18]
	0x03351268 LDP X30, X19, [X31], #0x10
	0x0335126C RET
	0x03351270 ADRP X0, 0xDA2000
	0x03351274 LDR X0, [X0 + 0x5B0]
	0x03351278 BL 0x1C16D08
	0x0335127C BL 0x1C16F10
	0x03351280 MOV X19, X0
	0x03351284 ADRP X0, 0xDCC000
	0x03351288 LDR X0, [X0 + 0x290]
	0x0335128C BL 0x1C16D08
	0x03351290 MOV X1, X0
	0x03351294 MOV X0, X19
	0x03351298 MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x108C000
	007 Move W8, [X22+3511]
	008 Move X20, X2
	009 Move X19, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xDDA000
	016 Move X0, [X0+584]
	017 Call 0x1C17CF4
	018 Move X0, 0xDA5000
	019 Move X0, [X0+632]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+3511], W8
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Compare X19, 0
	025 JumpIfEqual {54}
	026 Compare X20, 0
	027 JumpIfEqual {57}
	028 Move X8, 0xDA5000
	029 Move X8, [X8+632]
	030 Move X9, [X19]
	031 Move X10, [X20]
	032 Move X8, [X8]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction CSEL not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSEL not yet implemented."
	037 Compare X1, 0
	038 JumpIfEqual {58}
	039 Compare X2, 0
	040 JumpIfEqual {58}
	041 Move X0, [X21+16]
	042 Compare X0, 0
	043 JumpIfEqual {128}
	044 Move X8, [X0]
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X4, [X8+408]
	050 Move X3, [X8+416]
	051 Move X30, [X31+48]
	052 CallNoReturn X4
	053 Move W0, W31
	054 Move TEMP, 0
	055 Not TEMP
	056 Move W0, TEMP
	057 Move W0, 1
	058 Move X22, 0xDDA000
	059 Move X22, [X22+584]
	060 Move X0, X19
	061 Move X1, [X22]
	062 Call 0x1C17E00
	063 Compare X0, 0
	064 JumpIfEqual {80}
	065 Move X8, [X0]
	066 Move X1, [X22]
	067 Move X21, X0
	068 NotImplemented "Instruction LDRH not yet implemented."
	069 Compare X9, 0
	070 JumpIfEqual {77}
	071 Move X10, [X8+176]
	072 Add X10, X10, 8
	073 NotImplemented "Instruction LDUR not yet implemented."
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Subtract X9, X9, 1
	076 Add X10, X10, 16
	077 Move X0, X21
	078 Move W2, W31
	079 Call 0x1C5D788
	080 Move X1, [X22]
	081 Move X0, X20
	082 Call 0x1C17E00
	083 Compare X0, 0
	084 JumpIfEqual {129}
	085 Move X8, [X0]
	086 Move X1, [X22]
	087 Move X20, X0
	088 NotImplemented "Instruction LDRH not yet implemented."
	089 Compare X9, 0
	090 JumpIfEqual {97}
	091 Move X10, [X8+176]
	092 Add X10, X10, 8
	093 NotImplemented "Instruction LDUR not yet implemented."
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Subtract X9, X9, 1
	096 Add X10, X10, 16
	097 Move X0, X20
	098 Move W2, W31
	099 Call 0x1C5D788
	100 NotImplemented "Instruction LDRSW not yet implemented."
	101 Add X8, X8, X9
	102 Add X0, X8, 312
	103 Move X3, [X0]
	104 Move X2, [X0+8]
	105 Move X0, X21
	106 Move X1, X20
	107 Move X20, [X31+32]
	108 Move X19, [X31+40]
	109 Move X22, [X31+16]
	110 Move X21, [X31+24]
	111 Move X30, [X31+48]
	112 CallNoReturn X3
	113 NotImplemented "Instruction LDRSW not yet implemented."
	114 Add X8, X8, X9
	115 Add X0, X8, 312
	116 Move X8, [X0]
	117 Move X2, [X0+8]
	118 Move X0, X20
	119 Move X1, X19
	120 NotImplemented "Instruction BLR not yet implemented."
	121 Subtract W0, W31, W0
	122 Move X20, [X31+32]
	123 Move X19, [X31+40]
	124 Move X22, [X31+16]
	125 Move X21, [X31+24]
	126 Move X30, [X31+48]
	127 Return X0
	128 Call 0x1C17F20
	129 Move X0, 0xDAB000
	130 Move X0, [X0+1400]
	131 Call 0x1C17D08
	132 Call 0x1C17F10
	133 Move X19, X0
	134 Move X0, 0xDDA000
	135 Move X0, [X0+592]
	136 Call 0x1C17D08
	137 Move X1, X0
	138 Move X0, X19
	139 Move X2, X31
	140 Call ArgumentException..ctor, X0, X1
	141 Move X0, 0xDDA000
	142 Move X0, [X0+600]
	143 Call 0x1C17D08
	144 Move X1, X0
	145 Move X0, X19
	146 Call 0x1C17DEC

Method: System.Void .cctor()

Disassembly:
	0x0335129C BL 0x337DF1C
	0x033512A0 ADRP X0, 0xDD9000
	0x033512A4 LDR X0, [X0 + 0x2F0]
	0x033512A8 BL 0x1C16D08
	0x033512AC MOV X1, X0
	0x033512B0 MOV X0, X19
	0x033512B4 BL 0x1C16DEC
	0x033512B8 STP X30, X19, [X31 - 0x10]!
	0x033512BC LDR X8, [X0 + 0x10]
	0x033512C0 CBZ X8, 0x3351308
	0x033512C4 LDR W9, [X0 + 0x20]
	0x033512C8 LDR W10, [X8 + 0x18]
	0x033512CC CMP W9, W10
	0x033512D0 B.NE 0x335130C
	0x033512D4 LDRB W9, [X0 + 0x24]
	0x033512D8 CBZ W9, 0x33512E8
	0x033512DC LDR X8, [X8 + 0x10]
	0x033512E0 STRB W31, [X0 + 0x24]
	0x033512E4 B 0x33512F4
	0x033512E8 LDR X8, [X0 + 0x18]
	0x033512EC CBZ X8, 0x33512F8
	0x033512F0 LDR X8, [X8 + 0x20]
	0x033512F4 STR X8, [X0 + 0x18]
	0x033512F8 CMP X8, 0x0
	0x033512FC CSET W0, NE
	0x03351300 LDP X30, X19, [X31], #0x10
	0x03351304 RET
	0x03351308 BL 0x1C16F20
	0x0335130C ADRP X0, 0xDA2000
	0x03351310 LDR X0, [X0 + 0x5B0]
	0x03351314 BL 0x1C16D08
	0x03351318 BL 0x1C16F10
	0x0335131C MOV X19, X0
	0x03351320 ADRP X0, 0xDCC000
	0x03351324 LDR X0, [X0 + 0x288]
	0x03351328 BL 0x1C16D08
	0x0335132C MOV X1, X0
	0x03351330 MOV X0, X19
	0x03351334 MOV X2, X31
	0x03351338 BL 0x337DF1C
	0x0335133C ADRP X0, 0xDD9000
	0x03351340 LDR X0, [X0 + 0x2F8]
	0x03351344 BL 0x1C16D08
	0x03351348 MOV X1, X0
	0x0335134C MOV X0, X19
	0x03351350 BL 0x1C16DEC
	0x03351354 STP X30, X19, [X31 - 0x10]!
	0x03351358 LDR X8, [X0 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x108C000
	006 Move X19, 0xDA5000
	007 Move W8, [X20+3512]
	008 Move X19, [X19+3144]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xDCC000
	014 Move X0, [X0+3376]
	015 Call 0x1C17CF4
	016 Move X0, 0xDA5000
	017 Move X0, [X0+3144]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+3512], W8
	021 Move X0, [X19]
	022 Move X21, 0xDCC000
	023 Move W8, [X0+224]
	024 Move X21, [X21+3376]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X31
	029 Call CultureInfo.get_CurrentCulture
	030 Move X8, [X21]
	031 Move X19, X0
	032 Move X0, X8
	033 Call 0x1C17F10
	034 Move X1, X19
	035 Move X20, X0
	036 Call Comparer..ctor, X0, X1
	037 Move X8, [X21]
	038 Move X0, X31
	039 Move X8, [X8+184]
	040 Move [X8], X20
	041 Call CultureInfo.get_InvariantCulture
	042 Move X8, [X21]
	043 Move X19, X0
	044 Move X0, X8
	045 Call 0x1C17F10
	046 Move X1, X19
	047 Move X20, X0
	048 Call Comparer..ctor, X0, X1
	049 Move X8, [X21]
	050 Move X8, [X8+184]
	051 Move [X8+8], X20
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X30, [X31+32]
	055 Move X21, [X31+40]
	056 Return 

