Type: System.Collections.CollectionBase

Method: System.Void .ctor()

Disassembly:
	0x03352EFC LDR X0, [X0 + 0x528]
	0x03352F00 BL 0x1C16D08
	0x03352F04 BL 0x1C16F10
	0x03352F08 MOV X19, X0
	0x03352F0C ADRP X0, 0xDD8000
	0x03352F10 LDR X0, [X0 + 0x3B0]
	0x03352F14 BL 0x1C16D08
	0x03352F18 MOV X1, X0
	0x03352F1C MOV X0, X19
	0x03352F20 MOV X2, X31
	0x03352F24 BL 0x330E100
	0x03352F28 ADRP X0, 0xDD8000
	0x03352F2C LDR X0, [X0 + 0x3B8]
	0x03352F30 BL 0x1C16D08
	0x03352F34 MOV X1, X0
	0x03352F38 MOV X0, X19
	0x03352F3C BL 0x1C16DEC
	0x03352F40 BL 0x1C16F20
	0x03352F44 LDR W0, [X0 + 0x20]
	0x03352F48 RET
	0x03352F4C STR X30, [X31 - 0x30]!
	0x03352F50 STP X22, X21, [X31 + 0x10]
	0x03352F54 STP X20, X19, [X31 + 0x20]
	0x03352F58 ADRP X21, 0x108A000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x108B000
	006 Move X20, 0xDCF000
	007 Move W8, [X21+3535]
	008 Move X20, [X20+2976]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDCF000
	015 Move X0, [X0+2976]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3535], W8
	019 Move X0, X19
	020 Move X1, X31
	021 Call Object..ctor, X0
	022 Move X0, [X20]
	023 Call 0x1C17F10
	024 Move X20, X0
	025 Call ArrayList..ctor, X0
	026 Move [X19+16], X20
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return 

Method: System.Collections.ArrayList get_InnerList()

Disassembly:
	0x03352FFC LDR X2, [X20 + 0x10]
	0x03353000 MOV W1, W31

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Int32 get_Count()

Disassembly:
	0x03353004 MOV X5, X31
	0x03353008 SUB W3, W9, W8
	0x0335300C BL 0x339FCE8
	0x03353010 LDR W8, [X19 + 0x28]
	0x03353014 MOV X0, X20
	0x03353018 LDP X22, X21, [X31 + 0x10]
	0x0335301C STR W8, [X20 + 0x28]
	0x03353020 LDP X20, X19, [X31 + 0x20]
	0x03353024 LDR X30, [X31], #0x30

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+664]
	007 Move X1, [X8+672]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Void Clear()

Disassembly:
	0x03353028 RET
	0x0335302C BL 0x1C16F20
	0x03353030 MOV W0, W31
	0x03353034 RET
	0x03353038 STR X30, [X31 - 0x20]!
	0x0335303C STP X20, X19, [X31 + 0x10]
	0x03353040 ADRP X20, 0x1089000
	0x03353044 LDRB W8, [X20 + 0xDD3]
	0x03353048 MOV X19, X0
	0x0335304C TBNZ X8, 0x0, 0x3353064
	0x03353050 ADRP X0, 0xDA6000
	0x03353054 LDR X0, [X0 + 0xCC0]
	0x03353058 BL 0x1C16CF4
	0x0335305C MOVZ W8, 0x1
	0x03353060 STRB W8, [X20 + 0xDD3]
	0x03353064 LDR X0, [X19 + 0x30]!
	0x03353068 CBNZ X0, 0x33530A0
	0x0335306C ADRP X8, 0xDA6000
	0x03353070 LDR X8, [X8 + 0xCC0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move X19, X0
	005 Move X9, [X8+664]
	006 Move X1, [X8+672]
	007 NotImplemented "Instruction BLR not yet implemented."
	008 Move X0, [X19+16]
	009 Compare X0, 0
	010 JumpIfEqual {22}
	011 Move X8, [X0]
	012 Move X9, [X8+808]
	013 Move X1, [X8+816]
	014 NotImplemented "Instruction BLR not yet implemented."
	015 Move X8, [X19]
	016 Move X0, X19
	017 Move X2, [X8+744]
	018 Move X1, [X8+752]
	019 Move X30, [X31+16]
	020 Move X19, [X31+24]
	021 CallNoReturn X2
	022 Call 0x1C17F20

Method: System.Void RemoveAt(System.Int32 index)

Disassembly:
	0x03353074 LDR X0, [X8]
	0x03353078 BL 0x1C16F10
	0x0335307C MOV X1, X31
	0x03353080 MOV X20, X0
	0x03353084 BL 0x33BDD8C
	0x03353088 MOV X0, X19
	0x0335308C MOV X1, X20
	0x03353090 MOV X2, X31
	0x03353094 MOV X3, X31
	0x03353098 BL 0x33EB118
	0x0335309C LDR X0, [X19]
	0x033530A0 LDP X20, X19, [X31 + 0x10]
	0x033530A4 LDR X30, [X31], #0x20
	0x033530A8 RET
	0x033530AC STP X30, X23, [X31 - 0x30]!
	0x033530B0 STP X22, X21, [X31 + 0x10]
	0x033530B4 STP X20, X19, [X31 + 0x20]
	0x033530B8 CBZ X1, 0x3353180
	0x033530BC MOV X19, X1
	0x033530C0 MOV X21, X0
	0x033530C4 MOV X0, X1
	0x033530C8 MOV X1, X31
	0x033530CC MOV W20, W2
	0x033530D0 BL 0x339FCE4
	0x033530D4 CMP W0, 0x1
	0x033530D8 B.NE 0x33531B4
	0x033530DC TBNZ X20, 0x1F, 0x33531FC
	0x033530E0 MOV X0, X19
	0x033530E4 MOV X1, X31
	0x033530E8 BL 0x3395B7C
	0x033530EC LDR W23, [X21 + 0x20]
	0x033530F0 SUB W8, W0, W20
	0x033530F4 CMP W8, W23
	0x033530F8 B.LT 0x3353244
	0x033530FC CBZ W23, 0x3353170
	0x03353100 LDR X0, [X21 + 0x10]
	0x03353104 CBZ X0, 0x335328C
	0x03353108 LDR W1, [X21 + 0x18]
	0x0335310C LDR W8, [X0 + 0x18]
	0x03353110 MOV X2, X19
	0x03353114 MOV W3, W20
	0x03353118 MOV X5, X31
	0x0335311C SUB W8, W8, W1
	0x03353120 CMP W8, W23
	0x03353124 CSEL W22, W8, W23, LT
	0x03353128 MOV W4, W22
	0x0335312C BL 0x339FCE8
	0x03353130 SUB W4, W23, W22
	0x03353134 CMP W4, 0x1
	0x03353138 B.LT 0x3353170
	0x0335313C LDR X0, [X21 + 0x10]
	0x03353140 CBZ X0, 0x335328C
	0x03353144 LDR W8, [X21 + 0x18]
	0x03353148 LDR W9, [X0 + 0x18]
	0x0335314C MOV X2, X19
	0x03353150 LDP X22, X21, [X31 + 0x10]
	0x03353154 SUB W8, W20, W8
	0x03353158 LDP X20, X19, [X31 + 0x20]
	0x0335315C ADD W3, W8, W9
	0x03353160 MOV W1, W31
	0x03353164 MOV X5, X31
	0x03353168 LDP X30, X23, [X31], #0x30
	0x0335316C B 0x339FCE8
	0x03353170 LDP X20, X19, [X31 + 0x20]
	0x03353174 LDP X22, X21, [X31 + 0x10]
	0x03353178 LDP X30, X23, [X31], #0x30
	0x0335317C RET
	0x03353180 ADRP X0, 0xDA5000
	0x03353184 LDR X0, [X0 + 0x528]
	0x03353188 BL 0x1C16D08
	0x0335318C BL 0x1C16F10
	0x03353190 MOV X19, X0
	0x03353194 ADRP X0, 0xDC8000
	0x03353198 LDR X0, [X0 + 0x640]
	0x0335319C BL 0x1C16D08
	0x033531A0 MOV X1, X0
	0x033531A4 MOV X0, X19
	0x033531A8 MOV X2, X31
	0x033531AC BL 0x330E100
	0x033531B0 B 0x3353274
	0x033531B4 ADRP X0, 0xDA8000
	0x033531B8 LDR X0, [X0 + 0x578]
	0x033531BC BL 0x1C16D08
	0x033531C0 BL 0x1C16F10
	0x033531C4 MOV X19, X0
	0x033531C8 ADRP X0, 0xDC9000
	0x033531CC LDR X0, [X0 + 0x308]
	0x033531D0 BL 0x1C16D08
	0x033531D4 MOV X20, X0
	0x033531D8 ADRP X0, 0xDC8000
	0x033531DC LDR X0, [X0 + 0x640]
	0x033531E0 BL 0x1C16D08
	0x033531E4 MOV X2, X0
	0x033531E8 MOV X0, X19
	0x033531EC MOV X1, X20
	0x033531F0 MOV X3, X31
	0x033531F4 BL 0x330E16C
	0x033531F8 B 0x3353274
	0x033531FC ADRP X0, 0xDA8000
	0x03353200 LDR X0, [X0 + 0x760]
	0x03353204 BL 0x1C16D08
	0x03353208 BL 0x1C16F10
	0x0335320C MOV X19, X0
	0x03353210 ADRP X0, 0xDAB000
	0x03353214 LDR X0, [X0 + 0x130]
	0x03353218 BL 0x1C16D08
	0x0335321C MOV X20, X0
	0x03353220 ADRP X0, 0xDC8000
	0x03353224 LDR X0, [X0 + 0x660]
	0x03353228 BL 0x1C16D08
	0x0335322C MOV X2, X0
	0x03353230 MOV X0, X19
	0x03353234 MOV X1, X20
	0x03353238 MOV X3, X31
	0x0335323C BL 0x3311888
	0x03353240 B 0x3353274
	0x03353244 ADRP X0, 0xDA8000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move TEMP, X1
	007 And TEMP, TEMP, -2147483648
	008 Compare TEMP, -2147483648
	009 JumpIfEqual {64}
	010 Move X20, X0
	011 Move X0, [X0+16]
	012 Compare X0, 0
	013 JumpIfEqual {63}
	014 Move X8, [X0]
	015 Move W19, W1
	016 Move X9, [X8+664]
	017 Move X1, [X8+672]
	018 NotImplemented "Instruction BLR not yet implemented."
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X0, [X20+16]
	021 Compare X0, 0
	022 JumpIfEqual {63}
	023 Move X8, [X0]
	024 Move W1, W19
	025 Move X9, [X8+744]
	026 Move X2, [X8+752]
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X8, [X20]
	029 Move X21, X0
	030 Move X0, X20
	031 Move X1, X21
	032 Move X9, [X8+696]
	033 Move X2, [X8+704]
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X8, [X20]
	036 Move X0, X20
	037 Move W1, W19
	038 Move X2, X21
	039 Move X9, [X8+680]
	040 Move X3, [X8+688]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Move X0, [X20+16]
	043 Compare X0, 0
	044 JumpIfEqual {63}
	045 Move X8, [X0]
	046 Move W1, W19
	047 Move X9, [X8+984]
	048 Move X2, [X8+992]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move X8, [X20]
	051 Move X9, [X8+760]
	052 Move X3, [X8+768]
	053 Move X0, X20
	054 Move W1, W19
	055 Move X2, X21
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X30, [X31+48]
	062 Return 
	063 Call 0x1C17F20
	064 Move X0, 0xDA9000
	065 Move X0, [X0+1888]
	066 Call 0x1C17D08
	067 Call 0x1C17F10
	068 Move X19, X0
	069 Move X0, 0xDAC000
	070 Move X0, [X0+304]
	071 Call 0x1C17D08
	072 Move X20, X0
	073 Move X0, 0xDC9000
	074 Move X0, [X0+1632]
	075 Call 0x1C17D08
	076 Move X2, X0
	077 Move X0, X19
	078 Move X1, X20
	079 Move X3, X31
	080 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	081 Move X0, 0xDD8000
	082 Move X0, [X0+864]
	083 Call 0x1C17D08
	084 Move X1, X0
	085 Move X0, X19
	086 Call 0x1C17DEC
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X22, X0
	089 Move X0, X22
	090 Call 0x3EB2AD0
	091 Move X22, X0
	092 Move X0, 0xDA7000
	093 Move X0, [X0+3264]
	094 Call 0x1C17D08
	095 Move X8, [X22]
	096 Move X1, [X8]
	097 Call 0x1C18270
	098 Move TEMP, X0
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfNotEqual {116}
	102 Move X22, [X22]
	103 Call 0x3EB2AE0
	104 Move X20, [X20+16]
	105 Move X0, X20
	106 Call 0x19913C0
	107 Move X8, [X20]
	108 Move X0, X20
	109 Move W1, W19
	110 Move X2, X21
	111 Move X9, [X8+936]
	112 Move X3, [X8+944]
	113 NotImplemented "Instruction BLR not yet implemented."
	114 Move X0, X22
	115 Call 0x1C17F18
	116 Move W0, 8
	117 Call 0x3EB2AF0
	118 Move X8, [X22]
	119 Move [X0], X8
	120 Move X1, 0xB62000
	121 Add X1, X1, 3672
	122 Move X2, X31
	123 Call 0x3EB2B00
	124 Move X22, X0
	125 Call 0x3EB2AE0
	126 Move X0, X22
	127 Call 0x1D2D690
	128 Call 0x1991590

Method: System.Boolean System.Collections.IList.get_IsReadOnly()

Disassembly:
	0x03353248 LDR X0, [X0 + 0x578]
	0x0335324C BL 0x1C16D08
	0x03353250 BL 0x1C16F10
	0x03353254 MOV X19, X0
	0x03353258 ADRP X0, 0xDC8000
	0x0335325C LDR X0, [X0 + 0x760]
	0x03353260 BL 0x1C16D08
	0x03353264 MOV X1, X0
	0x03353268 MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+696]
	007 Move X1, [X8+704]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Boolean System.Collections.IList.get_IsFixedSize()

Disassembly:
	0x0335326C MOV X2, X31
	0x03353270 BL 0x3314A68
	0x03353274 ADRP X0, 0xDD7000
	0x03353278 LDR X0, [X0 + 0x3C0]
	0x0335327C BL 0x1C16D08
	0x03353280 MOV X1, X0
	0x03353284 MOV X0, X19
	0x03353288 BL 0x1C16DEC
	0x0335328C BL 0x1C16F20

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+680]
	007 Move X1, [X8+688]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Boolean System.Collections.ICollection.get_IsSynchronized()

Disassembly:
	0x03353290 STR X30, [X31 - 0x30]!
	0x03353294 STP X22, X21, [X31 + 0x10]
	0x03353298 STP X20, X19, [X31 + 0x20]
	0x0335329C LDR X21, [X0 + 0x10]
	0x033532A0 CBZ X21, 0x3353378
	0x033532A4 LDR W8, [X0 + 0x20]
	0x033532A8 LDR X9, [X21 + 0x18]
	0x033532AC MOV X19, X0
	0x033532B0 MOV X20, X1

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+712]
	007 Move X1, [X8+720]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Object System.Collections.ICollection.get_SyncRoot()

Disassembly:
	0x033532B4 CMP W8, W9
	0x033532B8 B.NE 0x3353308
	0x033532BC LDRSW X10, [X19 + 0x24]
	0x033532C0 MOVZ X11, 0xD70B
	0x033532C4 MOVK X11, 0x70A30000
	0x033532C8 SXTW X9, W9
	0x033532CC MOVK X11, 0xA3D
	0x033532D0 MOVK X11, 0xA3D70000
	0x033532D4 MUL X9, X9, X10

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+728]
	007 Move X1, [X8+736]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Void System.Collections.ICollection.CopyTo(System.Array array, System.Int32 index)

Disassembly:
	0x033532D8 SMULH X10, X9, X11, X31
	0x033532DC ADD X9, X10, X9
	0x033532E0 UBFM X10, X9, 0x3F, 0x3F
	0x033532E4 UBFM X9, X9, 0x6, 0x3F
	0x033532E8 ADD W9, W9, W10
	0x033532EC ADD W8, W8, 0x4
	0x033532F0 CMP W8, W9
	0x033532F4 CSEL W1, W8, W9, GT
	0x033532F8 MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X4, [X8+872]
	007 Move X3, [X8+880]
	008 Move X30, [X31+16]
	009 CallNoReturn X4
	010 Call 0x1C17F20

Method: System.Object System.Collections.IList.get_Item(System.Int32 index)

Disassembly:
	0x033532FC BL 0x335338C
	0x03353300 LDR X21, [X19 + 0x10]
	0x03353304 CBZ X21, 0x3353378
	0x03353308 LDRSW X22, [X19 + 0x1C]
	0x0335330C CBZ X20, 0x3353324
	0x03353310 LDR X8, [X21]
	0x03353314 MOV X0, X20
	0x03353318 LDR X1, [X8 + 0x40]
	0x0335331C BL 0x1C16E00
	0x03353320 CBZ X0, 0x3353380
	0x03353324 LDR W8, [X21 + 0x18]
	0x03353328 CMP W22, W8
	0x0335332C B.CS 0x335337C
	0x03353330 ADD X8, X21, X22, 0x3, LSL
	0x03353334 STR X20, [X8 + 0x20]
	0x03353338 LDR X8, [X19 + 0x10]
	0x0335333C CBZ X8, 0x3353378
	0x03353340 LDP W9, W10, [X19 + 0x1C]
	0x03353344 LDR W8, [X8 + 0x18]
	0x03353348 LDR W11, [X19 + 0x28]
	0x0335334C LDP X22, X21, [X31 + 0x10]
	0x03353350 ADD W9, W9, 0x1
	0x03353354 SDIV W12, W9, W8
	0x03353358 ADD W10, W10, 0x1
	0x0335335C ADD W11, W11, 0x1
	0x03353360 MSUB W8, W12, W8, W9
	0x03353364 STP W8, W10, [X19 + 0x1C]
	0x03353368 STR W11, [X19 + 0x28]
	0x0335336C LDP X20, X19, [X31 + 0x20]
	0x03353370 LDR X30, [X31], #0x30
	0x03353374 RET
	0x03353378 BL 0x1C16F20
	0x0335337C BL 0x1C16F28
	0x03353380 BL 0x1C16F44
	0x03353384 MOV X1, X31
	0x03353388 BL 0x1C16DEC
	0x0335338C STR X30, [X31 - 0x30]!
	0x03353390 STP X22, X21, [X31 + 0x10]
	0x03353394 STP X20, X19, [X31 + 0x20]
	0x03353398 ADRP X21, 0x1089000
	0x0335339C ADRP X22, 0xDA0000
	0x033533A0 LDRB W8, [X21 + 0xDD5]
	0x033533A4 LDR X22, [X22 + 0x9D0]
	0x033533A8 MOV W20, W1
	0x033533AC MOV X19, X0
	0x033533B0 TBNZ X8, 0x0, 0x33533C8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move TEMP, X1
	005 And TEMP, TEMP, -2147483648
	006 Compare TEMP, -2147483648
	007 JumpIfEqual {29}
	008 Move X20, X0
	009 Move X0, [X0+16]
	010 Compare X0, 0
	011 JumpIfEqual {52}
	012 Move X8, [X0]
	013 Move W19, W1
	014 Move X9, [X8+664]
	015 Move X1, [X8+672]
	016 NotImplemented "Instruction BLR not yet implemented."
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move X0, [X20+16]
	019 Compare X0, 0
	020 JumpIfEqual {52}
	021 Move X8, [X0]
	022 Move W1, W19
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X3, [X8+744]
	026 Move X2, [X8+752]
	027 Move X30, [X31+32]
	028 CallNoReturn X3
	029 Move X0, 0xDA9000
	030 Move X0, [X0+1888]
	031 Call 0x1C17D08
	032 Call 0x1C17F10
	033 Move X19, X0
	034 Move X0, 0xDAC000
	035 Move X0, [X0+304]
	036 Call 0x1C17D08
	037 Move X20, X0
	038 Move X0, 0xDC9000
	039 Move X0, [X0+1632]
	040 Call 0x1C17D08
	041 Move X2, X0
	042 Move X0, X19
	043 Move X1, X20
	044 Move X3, X31
	045 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	046 Move X0, 0xDD8000
	047 Move X0, [X0+872]
	048 Call 0x1C17D08
	049 Move X1, X0
	050 Move X0, X19
	051 Call 0x1C17DEC
	052 Call 0x1C17F20

Method: System.Void System.Collections.IList.set_Item(System.Int32 index, System.Object value)

Disassembly:
	0x033533B4 ADRP X0, 0xDA0000
	0x033533B8 LDR X0, [X0 + 0x9D0]
	0x033533BC BL 0x1C16CF4
	0x033533C0 MOVZ W8, 0x1
	0x033533C4 STRB W8, [X21 + 0xDD5]
	0x033533C8 LDR X0, [X22]
	0x033533CC MOV W1, W20
	0x033533D0 BL 0x1C16D6C
	0x033533D4 LDR W4, [X19 + 0x20]
	0x033533D8 MOV X21, X0
	0x033533DC CMP W4, 0x1
	0x033533E0 B.LT 0x3353444
	0x033533E4 LDP W1, W8, [X19 + 0x18]
	0x033533E8 CMP W1, W8
	0x033533EC B.GE 0x3353400
	0x033533F0 LDR X0, [X19 + 0x10]
	0x033533F4 MOV X2, X21
	0x033533F8 MOV W3, W31
	0x033533FC B 0x335343C
	0x03353400 LDR X0, [X19 + 0x10]
	0x03353404 CBZ X0, 0x3353474
	0x03353408 LDR W8, [X0 + 0x18]
	0x0335340C MOV X2, X21
	0x03353410 MOV W3, W31
	0x03353414 MOV X5, X31
	0x03353418 SUB W4, W8, W1
	0x0335341C BL 0x339FCE8
	0x03353420 LDR X0, [X19 + 0x10]
	0x03353424 CBZ X0, 0x3353474
	0x03353428 LDR W8, [X0 + 0x18]
	0x0335342C LDP W9, W4, [X19 + 0x18]
	0x03353430 MOV W1, W31
	0x03353434 MOV X2, X21
	0x03353438 SUB W3, W8, W9
	0x0335343C MOV X5, X31
	0x03353440 BL 0x339FCE8
	0x03353444 LDR W8, [X19 + 0x20]
	0x03353448 LDR W9, [X19 + 0x28]
	0x0335344C STR X21, [X19 + 0x10]
	0x03353450 LDP X22, X21, [X31 + 0x10]
	0x03353454 CMP W8, W20
	0x03353458 ADD W9, W9, 0x1
	0x0335345C CSEL W8, W31, W8, EQ
	0x03353460 STP W31, W8, [X19 + 0x18]
	0x03353464 STR W9, [X19 + 0x28]
	0x03353468 LDP X20, X19, [X31 + 0x20]
	0x0335346C LDR X30, [X31], #0x30
	0x03353470 RET
	0x03353474 BL 0x1C16F20
	0x03353478 STP X30, X21, [X31 - 0x20]!
	0x0335347C STP X20, X19, [X31 + 0x10]
	0x03353480 ADRP X20, 0x1089000
	0x03353484 ADRP X21, 0xDD7000
	0x03353488 LDRB W8, [X20 + 0xDD4]
	0x0335348C LDR X21, [X21 + 0x3C8]
	0x03353490 MOV X19, X0
	0x03353494 TBNZ X8, 0x0, 0x33534AC
	0x03353498 ADRP X0, 0xDD7000
	0x0335349C LDR X0, [X0 + 0x3C8]
	0x033534A0 BL 0x1C16CF4
	0x033534A4 MOVZ W8, 0x1
	0x033534A8 STRB W8, [X20 + 0xDD4]
	0x033534AC LDR X0, [X21]
	0x033534B0 BL 0x1C16F10
	0x033534B4 MOV X1, X19
	0x033534B8 MOV X20, X0
	0x033534BC BL 0x33534D0
	0x033534C0 MOV X0, X20
	0x033534C4 LDP X20, X19, [X31 + 0x10]
	0x033534C8 LDP X30, X21, [X31], #0x20
	0x033534CC RET
	0x033534D0 STR X30, [X31 - 0x20]!
	0x033534D4 STP X20, X19, [X31 + 0x10]
	0x033534D8 MOV X20, X1
	0x033534DC MOV X1, X31
	0x033534E0 MOV X19, X0
	0x033534E4 BL 0x33BDD8C
	0x033534E8 STR X20, [X19 + 0x10]
	0x033534EC CBZ X20, 0x335351C
	0x033534F0 LDR W8, [X20 + 0x28]
	0x033534F4 STP W31, W8, [X19 + 0x18]
	0x033534F8 LDR X8, [X20 + 0x10]
	0x033534FC STR X8, [X19 + 0x20]
	0x03353500 LDR W8, [X20 + 0x20]
	0x03353504 CBNZ W8, 0x3353510
	0x03353508 MOVN W8, 0x0
	0x0335350C STR W8, [X19 + 0x18]
	0x03353510 LDP X20, X19, [X31 + 0x10]
	0x03353514 LDR X30, [X31], #0x20
	0x03353518 RET
	0x0335351C BL 0x1C16F20
	0x03353520 STP X30, X19, [X31 - 0x10]!
	0x03353524 LDR X8, [X0]
	0x03353528 MOV X19, X0
	0x0335352C LDP X9, X1, [X8 + 0x1D8]
	0x03353530 BLR X9
	0x03353534 CBZ W0, 0x335359C
	0x03353538 LDR X9, [X19 + 0x10]
	0x0335353C CBZ X9, 0x3353598
	0x03353540 LDRSW X8, [X19 + 0x18]
	0x03353544 LDR W10, [X9 + 0x18]
	0x03353548 CMP W8, W10
	0x0335354C B.CS 0x33535E4
	0x03353550 ADD X9, X9, X8, 0x3, LSL
	0x03353554 LDR X0, [X9 + 0x20]
	0x03353558 STR X31, [X9 + 0x20]
	0x0335355C LDR X9, [X19 + 0x10]
	0x03353560 CBZ X9, 0x3353598
	0x03353564 LDR W9, [X9 + 0x18]
	0x03353568 LDR W10, [X19 + 0x20]
	0x0335356C LDR W11, [X19 + 0x28]
	0x03353570 ADD W8, W8, 0x1
	0x03353574 SDIV W12, W8, W9
	0x03353578 SUB W10, W10, 0x1
	0x0335357C ADD W11, W11, 0x1
	0x03353580 MSUB W8, W12, W9, W8
	0x03353584 STR W10, [X19 + 0x20]
	0x03353588 STR W8, [X19 + 0x18]
	0x0335358C STR W11, [X19 + 0x28]
	0x03353590 LDP X30, X19, [X31], #0x10
	0x03353594 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move TEMP, X1
	007 And TEMP, TEMP, -2147483648
	008 Compare TEMP, -2147483648
	009 JumpIfEqual {68}
	010 Move X20, X0
	011 Move X0, [X0+16]
	012 Compare X0, 0
	013 JumpIfEqual {67}
	014 Move X8, [X0]
	015 Move W19, W1
	016 Move X22, X2
	017 Move X9, [X8+664]
	018 Move X1, [X8+672]
	019 NotImplemented "Instruction BLR not yet implemented."
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X8, [X20]
	022 Move X0, X20
	023 Move X1, X22
	024 Move X9, [X8+696]
	025 Move X2, [X8+704]
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Move X0, [X20+16]
	028 Compare X0, 0
	029 JumpIfEqual {67}
	030 Move X8, [X0]
	031 Move W1, W19
	032 Move X9, [X8+744]
	033 Move X2, [X8+752]
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X8, [X20]
	036 Move X21, X0
	037 Move X0, X20
	038 Move W1, W19
	039 Move X9, [X8+632]
	040 Move X4, [X8+640]
	041 Move X2, X21
	042 Move X3, X22
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move X0, [X20+16]
	045 Compare X0, 0
	046 JumpIfEqual {67}
	047 Move X8, [X0]
	048 Move W1, W19
	049 Move X2, X22
	050 Move X9, [X8+760]
	051 Move X3, [X8+768]
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move X8, [X20]
	054 Move X9, [X8+712]
	055 Move X4, [X8+720]
	056 Move X0, X20
	057 Move W1, W19
	058 Move X2, X21
	059 Move X3, X22
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X22, [X31+16]
	064 Move X21, [X31+24]
	065 Move X30, [X31+48]
	066 Return 
	067 Call 0x1C17F20
	068 Move X0, 0xDA9000
	069 Move X0, [X0+1888]
	070 Call 0x1C17D08
	071 Call 0x1C17F10
	072 Move X19, X0
	073 Move X0, 0xDAC000
	074 Move X0, [X0+304]
	075 Call 0x1C17D08
	076 Move X20, X0
	077 Move X0, 0xDC9000
	078 Move X0, [X0+1632]
	079 Call 0x1C17D08
	080 Move X2, X0
	081 Move X0, X19
	082 Move X1, X20
	083 Move X3, X31
	084 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	085 Move X0, 0xDD8000
	086 Move X0, [X0+880]
	087 Call 0x1C17D08
	088 Move X1, X0
	089 Move X0, X19
	090 Call 0x1C17DEC
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X22, X0
	093 Move X0, X22
	094 Call 0x3EB2AD0
	095 Move X22, X0
	096 Move X0, 0xDA7000
	097 Move X0, [X0+3264]
	098 Call 0x1C17D08
	099 Move X8, [X22]
	100 Move X1, [X8]
	101 Call 0x1C18270
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfNotEqual {120}
	106 Move X22, [X22]
	107 Call 0x3EB2AE0
	108 Move X20, [X20+16]
	109 Move X0, X20
	110 Call 0x19913C0
	111 Move X8, [X20]
	112 Move X0, X20
	113 Move W1, W19
	114 Move X2, X21
	115 Move X9, [X8+760]
	116 Move X3, [X8+768]
	117 NotImplemented "Instruction BLR not yet implemented."
	118 Move X0, X22
	119 Call 0x1C17F18
	120 Move W0, 8
	121 Call 0x3EB2AF0
	122 Move X8, [X22]
	123 Move [X0], X8
	124 Move X1, 0xB62000
	125 Add X1, X1, 3672
	126 Move X2, X31
	127 Call 0x3EB2B00
	128 Move X22, X0
	129 Call 0x3EB2AE0
	130 Move X0, X22
	131 Call 0x1D2D690
	132 Call 0x1991590

Method: System.Boolean System.Collections.IList.Contains(System.Object value)

Disassembly:
	0x03353598 BL 0x1C16F20
	0x0335359C ADRP X0, 0xDA0000
	0x033535A0 LDR X0, [X0 + 0x5B0]
	0x033535A4 BL 0x1C16D08
	0x033535A8 BL 0x1C16F10
	0x033535AC MOV X19, X0
	0x033535B0 ADRP X0, 0xDCA000
	0x033535B4 LDR X0, [X0 + 0x60]
	0x033535B8 BL 0x1C16D08

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X3, [X8+840]
	007 Move X2, [X8+848]
	008 Move X30, [X31+16]
	009 CallNoReturn X3
	010 Call 0x1C17F20

Method: System.Int32 System.Collections.IList.Add(System.Object value)

Disassembly:
	0x033535BC MOV X1, X0
	0x033535C0 MOV X0, X19
	0x033535C4 MOV X2, X31
	0x033535C8 BL 0x337DF1C
	0x033535CC ADRP X0, 0xDD7000
	0x033535D0 LDR X0, [X0 + 0x3D0]
	0x033535D4 BL 0x1C16D08
	0x033535D8 MOV X1, X0
	0x033535DC MOV X0, X19
	0x033535E0 BL 0x1C16DEC
	0x033535E4 BL 0x1C16F28
	0x033535E8 STP X30, X19, [X31 - 0x10]!
	0x033535EC LDR X8, [X0]
	0x033535F0 MOV X19, X0
	0x033535F4 LDP X9, X1, [X8 + 0x1D8]
	0x033535F8 BLR X9
	0x033535FC CBZ W0, 0x3353628
	0x03353600 LDR X8, [X19 + 0x10]
	0x03353604 CBZ X8, 0x3353670
	0x03353608 LDRSW X9, [X19 + 0x18]
	0x0335360C LDR W10, [X8 + 0x18]
	0x03353610 CMP W9, W10
	0x03353614 B.CS 0x3353674
	0x03353618 ADD X8, X8, X9, 0x3, LSL
	0x0335361C LDR X0, [X8 + 0x20]
	0x03353620 LDP X30, X19, [X31], #0x10
	0x03353624 RET
	0x03353628 ADRP X0, 0xDA0000
	0x0335362C LDR X0, [X0 + 0x5B0]
	0x03353630 BL 0x1C16D08
	0x03353634 BL 0x1C16F10
	0x03353638 MOV X19, X0
	0x0335363C ADRP X0, 0xDCA000
	0x03353640 LDR X0, [X0 + 0x60]
	0x03353644 BL 0x1C16D08
	0x03353648 MOV X1, X0
	0x0335364C MOV X0, X19
	0x03353650 MOV X2, X31
	0x03353654 BL 0x337DF1C
	0x03353658 ADRP X0, 0xDD7000
	0x0335365C LDR X0, [X0 + 0x3D8]
	0x03353660 BL 0x1C16D08
	0x03353664 MOV X1, X0
	0x03353668 MOV X0, X19
	0x0335366C BL 0x1C16DEC
	0x03353670 BL 0x1C16F20
	0x03353674 BL 0x1C16F28
	0x03353678 STR X30, [X31 - 0x10]!
	0x0335367C LDR X8, [X0 + 0x10]
	0x03353680 CBZ X8, 0x33536B0
	0x03353684 LDR W9, [X0 + 0x18]
	0x03353688 LDR W10, [X8 + 0x18]
	0x0335368C ADD W9, W9, W1
	0x03353690 SDIV W11, W9, W10
	0x03353694 MSUB W9, W11, W10, W9
	0x03353698 CMP W9, W10
	0x0335369C B.CS 0x33536B4
	0x033536A0 ADD X8, X8, W9, 0x3, SXTW
	0x033536A4 LDR X0, [X8 + 0x20]
	0x033536A8 LDR X30, [X31], #0x10
	0x033536AC RET
	0x033536B0 BL 0x1C16F20
	0x033536B4 BL 0x1C16F28
	0x033536B8 MOV X1, X31
	0x033536BC B 0x33C5A24
	0x033536C0 STR X30, [X31 - 0x20]!
	0x033536C4 STP X20, X19, [X31 + 0x10]
	0x033536C8 MOV X19, X0
	0x033536CC LDR X0, [X0 + 0x10]
	0x033536D0 CBZ X0, 0x3353740
	0x033536D4 LDR W8, [X19 + 0x1C]
	0x033536D8 LDR W9, [X0 + 0x28]
	0x033536DC CMP W8, W9
	0x033536E0 B.NE 0x3353744
	0x033536E4 LDR W20, [X19 + 0x18]
	0x033536E8 TBNZ X20, 0x1F, 0x3353724
	0x033536EC MOV W1, W20
	0x033536F0 BL 0x3353678
	0x033536F4 LDR W8, [X19 + 0x18]
	0x033536F8 LDR X9, [X19 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X0]
	006 Move X19, X0
	007 Move X21, X1
	008 Move X9, [X8+696]
	009 Move X2, [X8+704]
	010 NotImplemented "Instruction BLR not yet implemented."
	011 Move X0, [X19+16]
	012 Compare X0, 0
	013 JumpIfEqual {47}
	014 Move X8, [X0]
	015 Move X9, [X8+664]
	016 Move X1, [X8+672]
	017 NotImplemented "Instruction BLR not yet implemented."
	018 Move X8, [X19]
	019 Move W1, W0
	020 Move X0, X19
	021 Move X2, X21
	022 Move X9, [X8+648]
	023 Move X3, [X8+656]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move X0, [X19+16]
	026 Compare X0, 0
	027 JumpIfEqual {47}
	028 Move X8, [X0]
	029 Move X1, X21
	030 Move X9, [X8+776]
	031 Move X2, [X8+784]
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Move X8, [X19]
	034 Move W20, W0
	035 Move X9, [X8+728]
	036 Move X3, [X8+736]
	037 Move X0, X19
	038 Move W1, W20
	039 Move X2, X21
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move W0, W20
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Return X0
	047 Call 0x1C17F20
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X21, X0
	050 Move X0, X21
	051 Call 0x3EB2AD0
	052 Move X21, X0
	053 Move X0, 0xDA7000
	054 Move X0, [X0+3264]
	055 Call 0x1C17D08
	056 Move X8, [X21]
	057 Move X1, [X8]
	058 Call 0x1C18270
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {76}
	063 Move X21, [X21]
	064 Call 0x3EB2AE0
	065 Move X19, [X19+16]
	066 Move X0, X19
	067 Call 0x19913C0
	068 Move X8, [X19]
	069 Move X0, X19
	070 Move W1, W20
	071 Move X9, [X8+984]
	072 Move X2, [X8+992]
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Move X0, X21
	075 Call 0x1C17F18
	076 Move W0, 8
	077 Call 0x3EB2AF0
	078 Move X8, [X21]
	079 Move [X0], X8
	080 Move X1, 0xB62000
	081 Add X1, X1, 3672
	082 Move X2, X31
	083 Call 0x3EB2B00
	084 Move X21, X0
	085 Call 0x3EB2AE0
	086 Move X0, X21
	087 Call 0x1D2D690
	088 Call 0x1991590

Method: System.Void System.Collections.IList.Remove(System.Object value)

Disassembly:
	0x033536FC STR X0, [X19 + 0x20]
	0x03353700 ADD W8, W8, 0x1
	0x03353704 STR W8, [X19 + 0x18]
	0x03353708 CBZ X9, 0x3353740
	0x0335370C LDR W9, [X9 + 0x20]
	0x03353710 CMP W8, W9
	0x03353714 B.NE 0x335372C
	0x03353718 MOVN W8, 0x0
	0x0335371C STR W8, [X19 + 0x18]
	0x03353720 B 0x335372C
	0x03353724 LDR X8, [X0 + 0x10]
	0x03353728 STR X8, [X19 + 0x20]
	0x0335372C ORN W8, W31, W20, 0x0
	0x03353730 LDP X20, X19, [X31 + 0x10]
	0x03353734 UBFM W0, W8, 0x1F, 0x1F
	0x03353738 LDR X30, [X31], #0x20
	0x0335373C RET
	0x03353740 BL 0x1C16F20
	0x03353744 ADRP X0, 0xDA0000
	0x03353748 LDR X0, [X0 + 0x5B0]
	0x0335374C BL 0x1C16D08
	0x03353750 BL 0x1C16F10
	0x03353754 MOV X19, X0
	0x03353758 ADRP X0, 0xDCA000
	0x0335375C LDR X0, [X0 + 0x288]
	0x03353760 BL 0x1C16D08
	0x03353764 MOV X1, X0
	0x03353768 MOV X0, X19
	0x0335376C MOV X2, X31
	0x03353770 BL 0x337DF1C
	0x03353774 ADRP X0, 0xDD7000
	0x03353778 LDR X0, [X0 + 0x3E0]
	0x0335377C BL 0x1C16D08
	0x03353780 MOV X1, X0
	0x03353784 MOV X0, X19
	0x03353788 BL 0x1C16DEC
	0x0335378C STR X30, [X31 - 0x20]!
	0x03353790 STP X20, X19, [X31 + 0x10]
	0x03353794 LDR X9, [X0 + 0x10]
	0x03353798 CBZ X9, 0x33537BC
	0x0335379C LDR X8, [X0 + 0x20]
	0x033537A0 LDR X9, [X9 + 0x10]
	0x033537A4 CMP X8, X9
	0x033537A8 B.EQ 0x33537C0
	0x033537AC LDP X20, X19, [X31 + 0x10]
	0x033537B0 MOV X0, X8
	0x033537B4 LDR X30, [X31], #0x20
	0x033537B8 RET
	0x033537BC BL 0x1C16F20
	0x033537C0 LDR W20, [X0 + 0x18]
	0x033537C4 ADRP X0, 0xDA0000
	0x033537C8 LDR X0, [X0 + 0x5B0]
	0x033537CC BL 0x1C16D08
	0x033537D0 BL 0x1C16F10
	0x033537D4 MOV X19, X0
	0x033537D8 CBNZ W20, 0x33537E8
	0x033537DC ADRP X0, 0xDCB000
	0x033537E0 LDR X0, [X0 + 0xC48]
	0x033537E4 B 0x33537F0
	0x033537E8 ADRP X0, 0xDCB000
	0x033537EC LDR X0, [X0 + 0xC40]
	0x033537F0 BL 0x1C16D08
	0x033537F4 MOV X1, X0
	0x033537F8 MOV X0, X19
	0x033537FC MOV X2, X31
	0x03353800 BL 0x337DF1C
	0x03353804 ADRP X0, 0xDD7000
	0x03353808 LDR X0, [X0 + 0x3E8]
	0x0335380C BL 0x1C16D08
	0x03353810 MOV X1, X0
	0x03353814 MOV X0, X19
	0x03353818 BL 0x1C16DEC
	0x0335381C STP X30, X19, [X31 - 0x10]!
	0x03353820 LDR X8, [X0 + 0x10]
	0x03353824 CBZ X8, 0x3353858
	0x03353828 LDR W9, [X0 + 0x1C]
	0x0335382C LDR W10, [X8 + 0x28]
	0x03353830 CMP W9, W10
	0x03353834 B.NE 0x335385C
	0x03353838 LDR W9, [X8 + 0x20]
	0x0335383C CMP W9, 0x0
	0x03353840 CSINV W9, W31, W31, NE
	0x03353844 STR W9, [X0 + 0x18]
	0x03353848 LDR X8, [X8 + 0x10]
	0x0335384C STR X8, [X0 + 0x20]
	0x03353850 LDP X30, X19, [X31], #0x10
	0x03353854 RET
	0x03353858 BL 0x1C16F20
	0x0335385C ADRP X0, 0xDA0000
	0x03353860 LDR X0, [X0 + 0x5B0]
	0x03353864 BL 0x1C16D08
	0x03353868 BL 0x1C16F10
	0x0335386C MOV X19, X0
	0x03353870 ADRP X0, 0xDCA000
	0x03353874 LDR X0, [X0 + 0x288]
	0x03353878 BL 0x1C16D08
	0x0335387C MOV X1, X0
	0x03353880 MOV X0, X19
	0x03353884 MOV X2, X31
	0x03353888 BL 0x337DF1C
	0x0335388C ADRP X0, 0xDD7000
	0x03353890 LDR X0, [X0 + 0x3F0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X0]
	007 Move X20, X0
	008 Move X19, X1
	009 Move X9, [X8+696]
	010 Move X2, [X8+704]
	011 NotImplemented "Instruction BLR not yet implemented."
	012 Move X0, [X20+16]
	013 Compare X0, 0
	014 JumpIfEqual {53}
	015 Move X8, [X0]
	016 Move X1, X19
	017 Move X9, [X8+920]
	018 Move X2, [X8+928]
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move TEMP, X0
	021 And TEMP, TEMP, -2147483648
	022 Compare TEMP, -2147483648
	023 JumpIfEqual {54}
	024 Move X8, [X20]
	025 Move W21, W0
	026 Move X0, X20
	027 Move W1, W21
	028 Move X9, [X8+680]
	029 Move X3, [X8+688]
	030 Move X2, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X0, [X20+16]
	033 Compare X0, 0
	034 JumpIfEqual {53}
	035 Move X8, [X0]
	036 Move W1, W21
	037 Move X9, [X8+984]
	038 Move X2, [X8+992]
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move X8, [X20]
	041 Move X9, [X8+760]
	042 Move X3, [X8+768]
	043 Move X0, X20
	044 Move W1, W21
	045 Move X2, X19
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move X30, [X31+48]
	052 Return 
	053 Call 0x1C17F20
	054 Move X0, 0xDA9000
	055 Move X0, [X0+1400]
	056 Call 0x1C17D08
	057 Call 0x1C17F10
	058 Move X19, X0
	059 Move X0, 0xDD8000
	060 Move X0, [X0+888]
	061 Call 0x1C17D08
	062 Move X1, X0
	063 Move X0, X19
	064 Move X2, X31
	065 Call ArgumentException..ctor, X0, X1
	066 Move X0, 0xDD8000
	067 Move X0, [X0+896]
	068 Call 0x1C17D08
	069 Move X1, X0
	070 Move X0, X19
	071 Call 0x1C17DEC
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X22, X0
	074 Move X0, X22
	075 Call 0x3EB2AD0
	076 Move X22, X0
	077 Move X0, 0xDA7000
	078 Move X0, [X0+3264]
	079 Call 0x1C17D08
	080 Move X8, [X22]
	081 Move X1, [X8]
	082 Call 0x1C18270
	083 Move TEMP, X0
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfNotEqual {101}
	087 Move X22, [X22]
	088 Call 0x3EB2AE0
	089 Move X20, [X20+16]
	090 Move X0, X20
	091 Call 0x19913C0
	092 Move X8, [X20]
	093 Move X0, X20
	094 Move W1, W21
	095 Move X2, X19
	096 Move X9, [X8+936]
	097 Move X3, [X8+944]
	098 NotImplemented "Instruction BLR not yet implemented."
	099 Move X0, X22
	100 Call 0x1C17F18
	101 Move W0, 8
	102 Call 0x3EB2AF0
	103 Move X8, [X22]
	104 Move [X0], X8
	105 Move X1, 0xB62000
	106 Add X1, X1, 3672
	107 Move X2, X31
	108 Call 0x3EB2B00
	109 Move X22, X0
	110 Call 0x3EB2AE0
	111 Move X0, X22
	112 Call 0x1D2D690
	113 Call 0x1991590

Method: System.Int32 System.Collections.IList.IndexOf(System.Object value)

Disassembly:
	0x03353894 BL 0x1C16D08
	0x03353898 MOV X1, X0
	0x0335389C MOV X0, X19
	0x033538A0 BL 0x1C16DEC
	0x033538A4 STP X30, X19, [X31 - 0x10]!
	0x033538A8 MOV X1, X31
	0x033538AC MOV X19, X0
	0x033538B0 BL 0x33BDD8C
	0x033538B4 MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X3, [X8+920]
	007 Move X2, [X8+928]
	008 Move X30, [X31+16]
	009 CallNoReturn X3
	010 Call 0x1C17F20

Method: System.Void System.Collections.IList.Insert(System.Int32 index, System.Object value)

Disassembly:
	0x033538B8 LDP X30, X19, [X31], #0x10
	0x033538BC B 0x33538C0
	0x033538C0 STP X30, X21, [X31 - 0x20]!
	0x033538C4 STP X20, X19, [X31 + 0x10]
	0x033538C8 ADRP X20, 0x1089000
	0x033538CC ADRP X21, 0xDA0000
	0x033538D0 LDRB W8, [X20 + 0xDD6]
	0x033538D4 LDR X21, [X21 + 0x9C8]
	0x033538D8 MOV X19, X0
	0x033538DC TBNZ X8, 0x0, 0x335390C
	0x033538E0 ADRP X0, 0xDA0000
	0x033538E4 LDR X0, [X0 + 0x9C8]
	0x033538E8 BL 0x1C16CF4
	0x033538EC ADRP X0, 0xDC9000
	0x033538F0 LDR X0, [X0 + 0xD30]
	0x033538F4 BL 0x1C16CF4
	0x033538F8 ADRP X0, 0xDA2000
	0x033538FC LDR X0, [X0 + 0xC48]
	0x03353900 BL 0x1C16CF4
	0x03353904 MOVZ W8, 0x1
	0x03353908 STRB W8, [X20 + 0xDD6]
	0x0335390C LDR X20, [X21]
	0x03353910 LDR X8, [X20 + 0x38]
	0x03353914 CBNZ X8, 0x3353924
	0x03353918 MOV X0, X20
	0x0335391C BL 0x1C5C6E0
	0x03353920 LDR X8, [X20 + 0x38]
	0x03353924 LDR X0, [X8 + 0x10]
	0x03353928 LDRB W8, [X0 + 0x135]
	0x0335392C TBNZ X8, 0x0, 0x3353934
	0x03353930 BL 0x1C5C684
	0x03353934 LDR W8, [X0 + 0xE0]
	0x03353938 CBNZ W8, 0x3353940
	0x0335393C BL 0x1C16DFC
	0x03353940 LDR X8, [X20 + 0x38]
	0x03353944 LDR X0, [X8 + 0x10]
	0x03353948 LDRB W8, [X0 + 0x135]
	0x0335394C TBNZ X8, 0x0, 0x3353954
	0x03353950 BL 0x1C5C684
	0x03353954 LDR X8, [X0 + 0xB8]
	0x03353958 LDR X8, [X8]
	0x0335395C STR X8, [X19 + 0x10]
	0x03353960 LDR X20, [X21]
	0x03353964 LDR X8, [X20 + 0x38]
	0x03353968 CBNZ X8, 0x3353978
	0x0335396C MOV X0, X20
	0x03353970 BL 0x1C5C6E0
	0x03353974 LDR X8, [X20 + 0x38]
	0x03353978 LDR X0, [X8 + 0x10]
	0x0335397C LDRB W8, [X0 + 0x135]
	0x03353980 TBNZ X8, 0x0, 0x3353988
	0x03353984 BL 0x1C5C684
	0x03353988 LDR W8, [X0 + 0xE0]
	0x0335398C CBNZ W8, 0x3353994
	0x03353990 BL 0x1C16DFC
	0x03353994 LDR X8, [X20 + 0x38]
	0x03353998 ADRP X20, 0xDA2000
	0x0335399C LDR X0, [X8 + 0x10]
	0x033539A0 LDRB W8, [X0 + 0x135]
	0x033539A4 LDR X20, [X20 + 0xC48]
	0x033539A8 TBNZ X8, 0x0, 0x33539B0
	0x033539AC BL 0x1C5C684
	0x033539B0 LDR X8, [X0 + 0xB8]
	0x033539B4 LDR X8, [X8]
	0x033539B8 STR W31, [X19 + 0x20]
	0x033539BC STR X8, [X19 + 0x18]
	0x033539C0 LDR X0, [X20]
	0x033539C4 ADRP X20, 0xDC9000
	0x033539C8 LDR W8, [X0 + 0xE0]
	0x033539CC LDR X20, [X20 + 0xD30]
	0x033539D0 CBNZ W8, 0x33539D8
	0x033539D4 BL 0x1C16DFC
	0x033539D8 MOV X0, X31
	0x033539DC BL 0x33387A0
	0x033539E0 LDR X8, [X20]
	0x033539E4 MOV X20, X0
	0x033539E8 MOV X0, X8
	0x033539EC BL 0x1C16F10
	0x033539F0 MOV X1, X20
	0x033539F4 MOV X21, X0
	0x033539F8 BL 0x334FDFC
	0x033539FC STR X21, [X19 + 0x28]
	0x03353A00 LDP X20, X19, [X31 + 0x10]
	0x03353A04 LDP X30, X21, [X31], #0x20
	0x03353A08 RET
	0x03353A0C STP X30, X23, [X31 - 0x30]!
	0x03353A10 STP X22, X21, [X31 + 0x10]
	0x03353A14 STP X20, X19, [X31 + 0x20]
	0x03353A18 ADRP X21, 0x1089000
	0x03353A1C LDRB W8, [X21 + 0xDD7]
	0x03353A20 MOV W20, W1
	0x03353A24 MOV X19, X0
	0x03353A28 TBNZ X8, 0x0, 0x3353A58
	0x03353A2C ADRP X0, 0xDC9000
	0x03353A30 LDR X0, [X0 + 0xD30]
	0x03353A34 BL 0x1C16CF4
	0x03353A38 ADRP X0, 0xDA2000
	0x03353A3C LDR X0, [X0 + 0xC48]
	0x03353A40 BL 0x1C16CF4
	0x03353A44 ADRP X0, 0xDA0000
	0x03353A48 LDR X0, [X0 + 0x9D0]
	0x03353A4C BL 0x1C16CF4
	0x03353A50 MOVZ W8, 0x1
	0x03353A54 STRB W8, [X21 + 0xDD7]
	0x03353A58 MOV X0, X19
	0x03353A5C MOV X1, X31
	0x03353A60 BL 0x33BDD8C
	0x03353A64 TBNZ X20, 0x1F, 0x3353AE8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move TEMP, X1
	006 And TEMP, TEMP, -2147483648
	007 Compare TEMP, -2147483648
	008 JumpIfEqual {54}
	009 Move X20, X0
	010 Move X0, [X0+16]
	011 Compare X0, 0
	012 JumpIfEqual {77}
	013 Move X8, [X0]
	014 Move W19, W1
	015 Move X21, X2
	016 Move X9, [X8+664]
	017 Move X1, [X8+672]
	018 NotImplemented "Instruction BLR not yet implemented."
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X8, [X20]
	021 Move X0, X20
	022 Move X1, X21
	023 Move X9, [X8+696]
	024 Move X2, [X8+704]
	025 NotImplemented "Instruction BLR not yet implemented."
	026 Move X8, [X20]
	027 Move X0, X20
	028 Move W1, W19
	029 Move X2, X21
	030 Move X9, [X8+648]
	031 Move X3, [X8+656]
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Move X0, [X20+16]
	034 Compare X0, 0
	035 JumpIfEqual {77}
	036 Move X8, [X0]
	037 Move W1, W19
	038 Move X2, X21
	039 Move X9, [X8+936]
	040 Move X3, [X8+944]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Move X8, [X20]
	043 Move X9, [X8+728]
	044 Move X3, [X8+736]
	045 Move X0, X20
	046 Move W1, W19
	047 Move X2, X21
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 Move X21, [X31+40]
	053 Return 
	054 Move X0, 0xDA9000
	055 Move X0, [X0+1888]
	056 Call 0x1C17D08
	057 Call 0x1C17F10
	058 Move X19, X0
	059 Move X0, 0xDAC000
	060 Move X0, [X0+304]
	061 Call 0x1C17D08
	062 Move X20, X0
	063 Move X0, 0xDC9000
	064 Move X0, [X0+1632]
	065 Call 0x1C17D08
	066 Move X2, X0
	067 Move X0, X19
	068 Move X1, X20
	069 Move X3, X31
	070 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	071 Move X0, 0xDD8000
	072 Move X0, [X0+904]
	073 Call 0x1C17D08
	074 Move X1, X0
	075 Move X0, X19
	076 Call 0x1C17DEC
	077 Call 0x1C17F20
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move X21, X0
	080 Move X0, X21
	081 Call 0x3EB2AD0
	082 Move X21, X0
	083 Move X0, 0xDA7000
	084 Move X0, [X0+3264]
	085 Call 0x1C17D08
	086 Move X8, [X21]
	087 Move X1, [X8]
	088 Call 0x1C18270
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfNotEqual {106}
	093 Move X21, [X21]
	094 Call 0x3EB2AE0
	095 Move X20, [X20+16]
	096 Move X0, X20
	097 Call 0x19913C0
	098 Move X8, [X20]
	099 Move X0, X20
	100 Move W1, W19
	101 Move X9, [X8+984]
	102 Move X2, [X8+992]
	103 NotImplemented "Instruction BLR not yet implemented."
	104 Move X0, X21
	105 Call 0x1C17F18
	106 Move W0, 8
	107 Call 0x3EB2AF0
	108 Move X8, [X21]
	109 Move [X0], X8
	110 Move X1, 0xB62000
	111 Add X1, X1, 3672
	112 Move X2, X31
	113 Call 0x3EB2B00
	114 Move X21, X0
	115 Call 0x3EB2AE0
	116 Move X0, X21
	117 Call 0x1D2D690
	118 Call 0x1991590

Method: System.Collections.IEnumerator GetEnumerator()

Disassembly:
	0x03353A68 ADRP X22, 0xDA0000
	0x03353A6C LDR X22, [X22 + 0x9D0]
	0x03353A70 ADRP X23, 0xDA2000
	0x03353A74 ADRP X21, 0xDC9000
	0x03353A78 MOV W1, W20
	0x03353A7C LDR X0, [X22]
	0x03353A80 LDR X23, [X23 + 0xC48]
	0x03353A84 LDR X21, [X21 + 0xD30]
	0x03353A88 BL 0x1C16D6C

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+904]
	007 Move X1, [X8+912]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Void OnSet(System.Int32 index, System.Object oldValue, System.Object newValue)

Disassembly:
	0x03353A8C STR X0, [X19 + 0x10]

ISIL:
	001 Return 

Method: System.Void OnInsert(System.Int32 index, System.Object value)

Disassembly:
	0x03353A90 LDR X0, [X22]

ISIL:
	001 Return 

Method: System.Void OnClear()

Disassembly:
	0x03353A94 MOV W1, W20

ISIL:
	001 Return 

Method: System.Void OnRemove(System.Int32 index, System.Object value)

Disassembly:
	0x03353A98 BL 0x1C16D6C

ISIL:
	001 Return 

Method: System.Void OnValidate(System.Object value)

Disassembly:
	0x03353A9C STR X0, [X19 + 0x18]
	0x03353AA0 LDR X0, [X23]
	0x03353AA4 LDR W8, [X0 + 0xE0]
	0x03353AA8 CBNZ W8, 0x3353AB0
	0x03353AAC BL 0x1C16DFC
	0x03353AB0 MOV X0, X31
	0x03353AB4 BL 0x33387A0
	0x03353AB8 LDR X8, [X21]
	0x03353ABC MOV X20, X0
	0x03353AC0 MOV X0, X8
	0x03353AC4 BL 0x1C16F10
	0x03353AC8 MOV X1, X20
	0x03353ACC MOV X21, X0
	0x03353AD0 BL 0x334FDFC
	0x03353AD4 STR X21, [X19 + 0x28]
	0x03353AD8 LDP X20, X19, [X31 + 0x20]
	0x03353ADC LDP X22, X21, [X31 + 0x10]
	0x03353AE0 LDP X30, X23, [X31], #0x30
	0x03353AE4 RET
	0x03353AE8 ADRP X0, 0xDA8000
	0x03353AEC LDR X0, [X0 + 0x760]

ISIL:
	001 Compare X1, 0
	002 JumpIfEqual {4}
	003 Return 
	004 Move [X31-16], X30
	005 Move [X31-8], X19
	006 Move X0, 0xDA6000
	007 Move X0, [X0+1320]
	008 Call 0x1C17D08
	009 Call 0x1C17F10
	010 Move X19, X0
	011 Move X0, 0xDAB000
	012 Move X0, [X0+3784]
	013 Call 0x1C17D08
	014 Move X1, X0
	015 Move X0, X19
	016 Move X2, X31
	017 Call ArgumentNullException..ctor, X0, X1
	018 Move X0, 0xDD8000
	019 Move X0, [X0+912]
	020 Call 0x1C17D08
	021 Move X1, X0
	022 Move X0, X19
	023 Call 0x1C17DEC

Method: System.Void OnSetComplete(System.Int32 index, System.Object oldValue, System.Object newValue)

Disassembly:
	0x03353AF0 BL 0x1C16D08

ISIL:
	001 Return 

Method: System.Void OnInsertComplete(System.Int32 index, System.Object value)

Disassembly:
	0x03353AF4 BL 0x1C16F10

ISIL:
	001 Return 

Method: System.Void OnClearComplete()

Disassembly:
	0x03353AF8 MOV X19, X0

ISIL:
	001 Return 

Method: System.Void OnRemoveComplete(System.Int32 index, System.Object value)

Disassembly:
	0x03353AFC ADRP X0, 0xDD7000

ISIL:
	001 Return 

