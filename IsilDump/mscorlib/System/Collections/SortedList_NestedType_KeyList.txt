Type: System.Collections.SortedList/KeyList

Method: System.Void .ctor(System.Collections.SortedList sortedList)

Disassembly:
	0x03355728 ADD X31, X31, 0x30
	0x0335572C RET
	0x03355730 MOV X0, X20
	0x03355734 BL 0x1C16F18
	0x03355738 BL 0x1C16F20
	0x0335573C B 0x3355744
	0x03355740 B 0x3355744
	0x03355744 MOV X21, X0
	0x03355748 CMP W1, 0x1
	0x0335574C B.NE 0x3355768

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], X19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Int32 get_Count()

Disassembly:
	0x0335708C ADRP X8, 0xD9C000
	0x03357090 LDR X8, [X8 + 0x9D0]
	0x03357094 UBFM W1, W22, 0x1F, 0x1E
	0x03357098 LDR X0, [X8]
	0x0335709C BL 0x1C16D6C
	0x033570A0 LDR X8, [X20 + 0x10]
	0x033570A4 LDR W4, [X20 + 0x18]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, [X8+32]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Boolean get_IsReadOnly()

Disassembly:
	0x033570A8 MOV X21, X0
	0x033570AC MOV W1, W31

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Boolean get_IsFixedSize()

Disassembly:
	0x033570B0 MOV X0, X8
	0x033570B4 MOV X2, X21

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Boolean get_IsSynchronized()

Disassembly:
	0x033570B8 MOV W3, W31
	0x033570BC MOV X5, X31
	0x033570C0 BL 0x339FCE8
	0x033570C4 LDR W22, [X20 + 0x18]
	0x033570C8 STR X21, [X20 + 0x10]
	0x033570CC ADD W8, W22, 0x1
	0x033570D0 STR W8, [X20 + 0x18]
	0x033570D4 CBZ X21, 0x3357130
	0x033570D8 CBNZ X19, 0x33570EC

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+680]
	007 Move X1, [X8+688]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Object get_SyncRoot()

Disassembly:
	0x033570DC B 0x3357100
	0x033570E0 ADD W8, W22, 0x1
	0x033570E4 STR W8, [X20 + 0x18]
	0x033570E8 CBZ X19, 0x3357100
	0x033570EC LDR X8, [X21]
	0x033570F0 MOV X0, X19
	0x033570F4 LDR X1, [X8 + 0x40]
	0x033570F8 BL 0x1C16E00
	0x033570FC CBZ X0, 0x3357138

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+696]
	007 Move X1, [X8+704]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Int32 Add(System.Object key)

Disassembly:
	0x03357100 LDR W8, [X21 + 0x18]
	0x03357104 CMP W22, W8
	0x03357108 B.CS 0x3357134
	0x0335710C ADD X8, X21, W22, 0x3, SXTW
	0x03357110 STR X19, [X8 + 0x20]
	0x03357114 LDR W8, [X20 + 0x1C]
	0x03357118 LDP X22, X21, [X31 + 0x10]
	0x0335711C ADD W8, W8, 0x1
	0x03357120 STR W8, [X20 + 0x1C]
	0x03357124 LDP X20, X19, [X31 + 0x20]
	0x03357128 LDR X30, [X31], #0x30
	0x0335712C RET
	0x03357130 BL 0x1C16F20
	0x03357134 BL 0x1C16F28
	0x03357138 BL 0x1C16F44
	0x0335713C MOV X1, X31
	0x03357140 BL 0x1C16DEC
	0x03357144 MOV X1, X31
	0x03357148 B 0x33C5A24

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xD9D000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xDC7000
	009 Move X0, [X0+3640]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call NotSupportedException..ctor, X0, X1
	015 Move X0, 0xDD4000
	016 Move X0, [X0+1208]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Void Clear()

Disassembly:
	0x0335714C STP X30, X19, [X31 - 0x10]!
	0x03357150 LDR X8, [X0 + 0x10]
	0x03357154 CBZ X8, 0x3357204
	0x03357158 LDR W9, [X0 + 0x1C]
	0x0335715C LDR W10, [X8 + 0x1C]
	0x03357160 CMP W9, W10
	0x03357164 B.NE 0x3357208
	0x03357168 LDR W9, [X0 + 0x18]
	0x0335716C ADDS W31, W9, 0x1
	0x03357170 B.EQ 0x33571B8
	0x03357174 ADDS W31, W9, 0x2
	0x03357178 B.NE 0x33571C0
	0x0335717C LDR W9, [X8 + 0x18]
	0x03357180 SUB W10, W9, 0x1
	0x03357184 STR W10, [X0 + 0x18]
	0x03357188 TBNZ X10, 0x1F, 0x33571AC
	0x0335718C LDR X8, [X8 + 0x10]
	0x03357190 CBZ X8, 0x3357204
	0x03357194 LDR W11, [X8 + 0x18]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xD9D000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xDC7000
	009 Move X0, [X0+3640]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call NotSupportedException..ctor, X0, X1
	015 Move X0, 0xDD4000
	016 Move X0, [X0+1216]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Boolean Contains(System.Object key)

Disassembly:
	0x03357198 CMP W10, W11
	0x0335719C B.CS 0x3357250
	0x033571A0 ADD X8, X8, W10, 0x3, UXTW
	0x033571A4 LDR X8, [X8 + 0x20]
	0x033571A8 STR X8, [X0 + 0x20]
	0x033571AC SUB W8, W31, W9
	0x033571B0 UBFM W0, W8, 0x1F, 0x1F
	0x033571B4 B 0x33571FC
	0x033571B8 MOV W0, W31

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X3, [X8+728]
	007 Move X2, [X8+736]
	008 Move X30, [X31+16]
	009 CallNoReturn X3
	010 Call 0x1C17F20

Method: System.Void CopyTo(System.Array array, System.Int32 arrayIndex)

Disassembly:
	0x033571BC B 0x33571FC
	0x033571C0 SUB W10, W9, 0x1
	0x033571C4 SUB W9, W31, W9
	0x033571C8 STR W10, [X0 + 0x18]
	0x033571CC TBNZ X10, 0x1F, 0x33571F4
	0x033571D0 LDR X8, [X8 + 0x10]
	0x033571D4 CBZ X8, 0x3357204
	0x033571D8 LDR W11, [X8 + 0x18]
	0x033571DC CMP W10, W11
	0x033571E0 B.CS 0x3357250
	0x033571E4 ADD X8, X8, W10, 0x3, UXTW
	0x033571E8 LDR X8, [X8 + 0x20]
	0x033571EC STR X8, [X0 + 0x20]
	0x033571F0 B 0x33571F8
	0x033571F4 STR X31, [X0 + 0x20]
	0x033571F8 UBFM W0, W9, 0x1F, 0x1F
	0x033571FC LDP X30, X19, [X31], #0x10
	0x03357200 RET
	0x03357204 BL 0x1C16F20
	0x03357208 ADRP X0, 0xD9C000
	0x0335720C LDR X0, [X0 + 0x5B0]
	0x03357210 BL 0x1C16D08
	0x03357214 BL 0x1C16F10
	0x03357218 MOV X19, X0
	0x0335721C ADRP X0, 0xDC6000
	0x03357220 LDR X0, [X0 + 0x288]
	0x03357224 BL 0x1C16D08
	0x03357228 MOV X1, X0
	0x0335722C MOV X0, X19
	0x03357230 MOV X2, X31
	0x03357234 BL 0x337DF1C
	0x03357238 ADRP X0, 0xDD3000
	0x0335723C LDR X0, [X0 + 0x558]
	0x03357240 BL 0x1C16D08
	0x03357244 MOV X1, X0
	0x03357248 MOV X0, X19
	0x0335724C BL 0x1C16DEC
	0x03357250 BL 0x1C16F28
	0x03357254 STP X30, X19, [X31 - 0x10]!
	0x03357258 LDR W8, [X0 + 0x18]
	0x0335725C ADDS W31, W8, 0x1
	0x03357260 B.EQ 0x3357278
	0x03357264 ADDS W31, W8, 0x2
	0x03357268 B.EQ 0x3357298
	0x0335726C LDR X0, [X0 + 0x20]
	0x03357270 LDP X30, X19, [X31], #0x10
	0x03357274 RET
	0x03357278 ADRP X0, 0xD9C000
	0x0335727C LDR X0, [X0 + 0x5B0]
	0x03357280 BL 0x1C16D08
	0x03357284 BL 0x1C16F10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W19, W2
	006 Move X20, X1
	007 Move X21, X0
	008 Compare X1, 0
	009 JumpIfEqual {14}
	010 Move X0, X20
	011 Move X1, X31
	012 Call Array.get_Rank, X0
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move X0, [X21+16]
	015 Compare X0, 0
	016 JumpIfEqual {34}
	017 Move X8, [X0]
	018 Move X21, [X0+16]
	019 Move X9, [X8+632]
	020 Move X1, [X8+640]
	021 NotImplemented "Instruction BLR not yet implemented."
	022 Move X2, X20
	023 Move W3, W19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W4, W0
	027 Move X0, X21
	028 Move W1, W31
	029 Move X5, X31
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Call Array.Copy, X0, X1, X2, X3, X4
	033 Return 
	034 Call 0x1C17F20
	035 Move X0, 0xDA5000
	036 Move X0, [X0+1400]
	037 Call 0x1C17D08
	038 Call 0x1C17F10
	039 Move X19, X0
	040 Move X0, 0xDC6000
	041 Move X0, [X0+776]
	042 Call 0x1C17D08
	043 Move X20, X0
	044 Move X0, 0xDC5000
	045 Move X0, [X0+1600]
	046 Call 0x1C17D08
	047 Move X2, X0
	048 Move X0, X19
	049 Move X1, X20
	050 Move X3, X31
	051 Call ArgumentException..ctor, X0, X1, X2
	052 Move X0, 0xDD4000
	053 Move X0, [X0+1224]
	054 Call 0x1C17D08
	055 Move X1, X0
	056 Move X0, X19
	057 Call 0x1C17DEC

Method: System.Void Insert(System.Int32 index, System.Object value)

Disassembly:
	0x03357288 MOV X19, X0
	0x0335728C ADRP X0, 0xDC7000
	0x03357290 LDR X0, [X0 + 0xC40]
	0x03357294 B 0x33572B4
	0x03357298 ADRP X0, 0xD9C000
	0x0335729C LDR X0, [X0 + 0x5B0]
	0x033572A0 BL 0x1C16D08
	0x033572A4 BL 0x1C16F10
	0x033572A8 MOV X19, X0
	0x033572AC ADRP X0, 0xDC7000
	0x033572B0 LDR X0, [X0 + 0xC48]
	0x033572B4 BL 0x1C16D08
	0x033572B8 MOV X1, X0
	0x033572BC MOV X0, X19
	0x033572C0 MOV X2, X31
	0x033572C4 BL 0x337DF1C
	0x033572C8 ADRP X0, 0xDD3000
	0x033572CC LDR X0, [X0 + 0x560]
	0x033572D0 BL 0x1C16D08

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xD9D000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xDC7000
	009 Move X0, [X0+3640]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call NotSupportedException..ctor, X0, X1
	015 Move X0, 0xDD4000
	016 Move X0, [X0+1232]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Object get_Item(System.Int32 index)

Disassembly:
	0x033572D4 MOV X1, X0
	0x033572D8 MOV X0, X19
	0x033572DC BL 0x1C16DEC
	0x033572E0 STP X30, X19, [X31 - 0x10]!
	0x033572E4 LDR X8, [X0 + 0x10]
	0x033572E8 CBZ X8, 0x3357310
	0x033572EC LDR W9, [X0 + 0x1C]
	0x033572F0 LDR W8, [X8 + 0x1C]
	0x033572F4 CMP W9, W8

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X3, [X8+808]
	007 Move X2, [X8+816]
	008 Move X30, [X31+16]
	009 CallNoReturn X3
	010 Call 0x1C17F20

Method: System.Void set_Item(System.Int32 index, System.Object value)

Disassembly:
	0x033572F8 B.NE 0x3357314
	0x033572FC MOVN W8, 0x1
	0x03357300 STR W8, [X0 + 0x18]
	0x03357304 STR X31, [X0 + 0x20]
	0x03357308 LDP X30, X19, [X31], #0x10
	0x0335730C RET
	0x03357310 BL 0x1C16F20
	0x03357314 ADRP X0, 0xD9C000
	0x03357318 LDR X0, [X0 + 0x5B0]
	0x0335731C BL 0x1C16D08
	0x03357320 BL 0x1C16F10
	0x03357324 MOV X19, X0
	0x03357328 ADRP X0, 0xDC6000
	0x0335732C LDR X0, [X0 + 0x288]
	0x03357330 BL 0x1C16D08
	0x03357334 MOV X1, X0
	0x03357338 MOV X0, X19
	0x0335733C MOV X2, X31
	0x03357340 BL 0x337DF1C

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xD9D000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xDC9000
	009 Move X0, [X0+216]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call NotSupportedException..ctor, X0, X1
	015 Move X0, 0xDD4000
	016 Move X0, [X0+1240]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Collections.IEnumerator GetEnumerator()

Disassembly:
	0x03357344 ADRP X0, 0xDD3000
	0x03357348 LDR X0, [X0 + 0x568]
	0x0335734C BL 0x1C16D08
	0x03357350 MOV X1, X0
	0x03357354 MOV X0, X19
	0x03357358 BL 0x1C16DEC
	0x0335735C MOV W2, W31
	0x03357360 B 0x3357364
	0x03357364 STR X30, [X31 - 0x30]!
	0x03357368 STP X22, X21, [X31 + 0x10]
	0x0335736C STP X20, X19, [X31 + 0x20]
	0x03357370 ADRP X22, 0x1085000
	0x03357374 LDRB W8, [X22 + 0xDED]
	0x03357378 MOV W20, W2
	0x0335737C MOV W21, W1
	0x03357380 MOV X19, X0
	0x03357384 TBNZ X8, 0x0, 0x335739C
	0x03357388 ADRP X0, 0xD9D000
	0x0335738C LDR X0, [X0 + 0xE58]
	0x03357390 BL 0x1C16CF4
	0x03357394 MOVZ W8, 0x1
	0x03357398 STRB W8, [X22 + 0xDED]
	0x0335739C MOV X0, X19
	0x033573A0 MOV X1, X31
	0x033573A4 BL 0x33BDD8C
	0x033573A8 TBNZ X21, 0x1F, 0x335743C
	0x033573AC ADRP X8, 0xD9D000
	0x033573B0 LDR X8, [X8 + 0xE58]
	0x033573B4 CBZ W21, 0x33573D4
	0x033573B8 SUB W9, W21, 0x1
	0x033573BC ADD W10, W21, 0x1E
	0x033573C0 CMP W9, 0x0
	0x033573C4 CSEL W9, W10, W9, LT
	0x033573C8 SBFM W9, W9, 0x5, 0x1F
	0x033573CC ADD W1, W9, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1086000
	006 Move W8, [X20+3555]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xDD4000
	013 Move X0, [X0+1072]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3555], W8
	017 Move X19, [X19+16]
	018 Compare X19, 0
	019 JumpIfEqual {43}
	020 Move X8, [X19]
	021 Move X20, 0xDD4000
	022 Move X0, X19
	023 Move X9, [X8+632]
	024 Move X1, [X8+640]
	025 Move X20, [X20+1072]
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Move X8, [X20]
	028 Move W20, W0
	029 Move X0, X8
	030 Call 0x1C17F10
	031 Move W4, 1
	032 Move X1, X19
	033 Move W2, W31
	034 Move W3, W20
	035 Move X21, X0
	036 Call SortedListEnumerator..ctor, X0, X1, X2, X3, X4
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X0, X21
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Return X0
	043 Call 0x1C17F20

Method: System.Int32 IndexOf(System.Object key)

Disassembly:
	0x033573D0 B 0x33573D8
	0x033573D4 MOV W1, W31
	0x033573D8 LDR X0, [X8]
	0x033573DC BL 0x1C16D6C
	0x033573E0 STR X0, [X19 + 0x10]
	0x033573E4 STR W21, [X19 + 0x18]
	0x033573E8 CBZ X0, 0x33574B8
	0x033573EC LDR W8, [X0 + 0x18]
	0x033573F0 UBFM X9, X8, 0x20, 0x1F
	0x033573F4 CMP X9, 0x1
	0x033573F8 B.LT 0x3357424
	0x033573FC MOV X9, X31
	0x03357400 SBFM W10, W20, 0x0, 0x0
	0x03357404 SXTW X11, W8
	0x03357408 ADD X12, X0, 0x20
	0x0335740C CMP X9, X8
	0x03357410 B.CS 0x3357438
	0x03357414 STR W10, [X12, X9, LSL #2]
	0x03357418 ADD X9, X9, 0x1
	0x0335741C CMP X9, X11
	0x03357420 B.LT 0x335740C
	0x03357424 STR W31, [X19 + 0x1C]
	0x03357428 LDP X20, X19, [X31 + 0x20]
	0x0335742C LDP X22, X21, [X31 + 0x10]
	0x03357430 LDR X30, [X31], #0x30
	0x03357434 RET
	0x03357438 BL 0x1C16F28
	0x0335743C STR W21, [X31 + 0xC]
	0x03357440 ADRP X0, 0xD9C000
	0x03357444 LDR X0, [X0 + 0x758]
	0x03357448 BL 0x1C16D08
	0x0335744C ADD X1, X31, 0xC
	0x03357450 BL 0x1C16E04
	0x03357454 MOV X19, X0
	0x03357458 ADRP X0, 0xDA4000
	0x0335745C LDR X0, [X0 + 0x760]
	0x03357460 BL 0x1C16D08
	0x03357464 BL 0x1C16F10
	0x03357468 MOV X20, X0
	0x0335746C ADRP X0, 0xDA4000
	0x03357470 LDR X0, [X0 + 0x768]
	0x03357474 BL 0x1C16D08
	0x03357478 MOV X21, X0
	0x0335747C ADRP X0, 0xDC4000
	0x03357480 LDR X0, [X0 + 0x670]
	0x03357484 BL 0x1C16D08
	0x03357488 MOV X3, X0
	0x0335748C MOV X0, X20
	0x03357490 MOV X1, X21
	0x03357494 MOV X2, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X1, 0
	006 JumpIfEqual {35}
	007 Move X21, X0
	008 Move X0, [X0+16]
	009 Compare X0, 0
	010 JumpIfEqual {34}
	011 Move X8, [X0]
	012 Move X19, X1
	013 Move X20, [X0+16]
	014 Move X9, [X8+632]
	015 Move X1, [X8+640]
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Move X8, [X21+16]
	018 Compare X8, 0
	019 JumpIfEqual {34}
	020 Move X4, [X8+40]
	021 Move W2, W0
	022 Move X0, X20
	023 Move W1, W31
	024 Move X3, X19
	025 Move X5, X31
	026 Call Array.BinarySearch, X0, X1, X2, X3, X4
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction CSINV not yet implemented."
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return X0
	034 Call 0x1C17F20
	035 Move X0, 0xDA2000
	036 Move X0, [X0+1320]
	037 Call 0x1C17D08
	038 Call 0x1C17F10
	039 Move X19, X0
	040 Move X0, 0xDC7000
	041 Move X0, [X0+112]
	042 Call 0x1C17D08
	043 Move X20, X0
	044 Move X0, 0xDD4000
	045 Move X0, [X0+648]
	046 Call 0x1C17D08
	047 Move X2, X0
	048 Move X0, X19
	049 Move X1, X20
	050 Move X3, X31
	051 Call ArgumentNullException..ctor, X0, X1, X2
	052 Move X0, 0xDD4000
	053 Move X0, [X0+1248]
	054 Call 0x1C17D08
	055 Move X1, X0
	056 Move X0, X19
	057 Call 0x1C17DEC

Method: System.Void Remove(System.Object key)

Disassembly:
	0x03357498 MOV X4, X31
	0x0335749C BL 0x3312C8C
	0x033574A0 ADRP X0, 0xDD3000
	0x033574A4 LDR X0, [X0 + 0x570]
	0x033574A8 BL 0x1C16D08
	0x033574AC MOV X1, X0
	0x033574B0 MOV X0, X20
	0x033574B4 BL 0x1C16DEC
	0x033574B8 BL 0x1C16F20
	0x033574BC SUBS W8, W0, 0x1
	0x033574C0 B.LT 0x33574D0
	0x033574C4 SDIV W8, W8, W1
	0x033574C8 ADD W0, W8, 0x1
	0x033574CC RET
	0x033574D0 MOV W0, W31
	0x033574D4 RET
	0x033574D8 STP X30, X21, [X31 - 0x20]!
	0x033574DC STP X20, X19, [X31 + 0x10]
	0x033574E0 ADRP X21, 0x1085000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xD9D000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xDC7000
	009 Move X0, [X0+3640]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call NotSupportedException..ctor, X0, X1
	015 Move X0, 0xDD4000
	016 Move X0, [X0+1256]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Void RemoveAt(System.Int32 index)

Disassembly:
	0x033574E4 LDRB W8, [X21 + 0xDEE]
	0x033574E8 MOV X19, X1
	0x033574EC MOV X20, X0
	0x033574F0 TBNZ X8, 0x0, 0x3357508
	0x033574F4 ADRP X0, 0xD9D000
	0x033574F8 LDR X0, [X0 + 0xE58]
	0x033574FC BL 0x1C16CF4
	0x03357500 MOVZ W8, 0x1
	0x03357504 STRB W8, [X21 + 0xDEE]
	0x03357508 MOV X0, X20
	0x0335750C MOV X1, X31
	0x03357510 BL 0x33BDD8C
	0x03357514 CBZ X19, 0x3357588
	0x03357518 LDR W10, [X19 + 0x18]
	0x0335751C ADRP X8, 0xD9D000
	0x03357520 LDR X8, [X8 + 0xE58]
	0x03357524 SUBS W9, W10, 0x1
	0x03357528 B.LT 0x3357544
	0x0335752C ADD W10, W10, 0x1E

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xD9D000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xDC7000
	009 Move X0, [X0+3640]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call NotSupportedException..ctor, X0, X1
	015 Move X0, 0xDD4000
	016 Move X0, [X0+1264]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

