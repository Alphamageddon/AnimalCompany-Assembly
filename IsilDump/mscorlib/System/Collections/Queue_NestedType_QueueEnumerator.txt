Type: System.Collections.Queue/QueueEnumerator

Method: System.Void .ctor(System.Collections.Queue q)

Disassembly:
	0x033544D0 BL 0x1C16F20
	0x033544D4 BL 0x1C16F28
	0x033544D8 STP X30, X21, [X31 - 0x20]!
	0x033544DC STP X20, X19, [X31 + 0x10]
	0x033544E0 ADRP X20, 0x1088000
	0x033544E4 ADRP X21, 0xDD6000
	0x033544E8 LDRB W8, [X20 + 0xDDC]
	0x033544EC LDR X21, [X21 + 0x430]
	0x033544F0 MOV X19, X0
	0x033544F4 TBNZ X8, 0x0, 0x335450C
	0x033544F8 ADRP X0, 0xDD6000
	0x033544FC LDR X0, [X0 + 0x430]
	0x03354500 BL 0x1C16CF4
	0x03354504 MOVZ W8, 0x1
	0x03354508 STRB W8, [X20 + 0xDDC]
	0x0335450C LDR X0, [X21]
	0x03354510 LDR W20, [X19 + 0x20]
	0x03354514 BL 0x1C16F10
	0x03354518 MOVZ W4, 0x3
	0x0335451C MOV X1, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X1
	005 Move X1, X31
	006 Move X19, X0
	007 Call Object..ctor, X0
	008 Move [X19+16], X20
	009 Compare X20, 0
	010 JumpIfEqual {27}
	011 Move W8, [X20+40]
	012 Move [X19+24], W31
	013 Move [X19+28], W8
	014 Move X8, [X20+16]
	015 Move [X19+32], X8
	016 Move W8, [X20+32]
	017 Compare W8, 0
	018 JumpIfNotEqual {23}
	019 Move TEMP, 0
	020 Not TEMP
	021 Move W8, TEMP
	022 Move [X19+24], W8
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Return 
	027 Call 0x1C17F20

Method: System.Object Clone()

Disassembly:
	0x033546B8 BL 0x1C16F20
	0x033546BC BL 0x1C16F28

ISIL:
	001 Move X1, X31
	002 Call Object.MemberwiseClone, X0
	003 Return X0

Method: System.Boolean MoveNext()

Disassembly:
	0x033546C0 STR X30, [X31 - 0x20]!
	0x033546C4 STP X20, X19, [X31 + 0x10]
	0x033546C8 ADRP X20, 0x1088000
	0x033546CC LDRB W8, [X20 + 0xDDE]
	0x033546D0 MOV X19, X0
	0x033546D4 TBNZ X8, 0x0, 0x33546EC
	0x033546D8 ADRP X0, 0xDD6000
	0x033546DC LDR X0, [X0 + 0x440]
	0x033546E0 BL 0x1C16CF4
	0x033546E4 MOVZ W8, 0x1
	0x033546E8 STRB W8, [X20 + 0xDDE]
	0x033546EC LDR X20, [X19 + 0x30]
	0x033546F0 CBNZ X20, 0x3354718
	0x033546F4 ADRP X8, 0xDD6000
	0x033546F8 LDR X8, [X8 + 0x440]
	0x033546FC LDR X0, [X8]
	0x03354700 BL 0x1C16F10
	0x03354704 MOV X1, X31
	0x03354708 MOV X20, X0
	0x0335470C BL 0x33BDD8C
	0x03354710 STR X19, [X20 + 0x10]
	0x03354714 STR X20, [X19 + 0x30]
	0x03354718 MOV X0, X20
	0x0335471C LDP X20, X19, [X31 + 0x10]
	0x03354720 LDR X30, [X31], #0x20
	0x03354724 RET
	0x03354728 STR X30, [X31 - 0x20]!
	0x0335472C STP X20, X19, [X31 + 0x10]
	0x03354730 MOV X19, X1
	0x03354734 MOV X1, X31
	0x03354738 MOV X20, X0
	0x0335473C BL 0x33BDD8C
	0x03354740 STR X19, [X20 + 0x10]
	0x03354744 LDP X20, X19, [X31 + 0x10]
	0x03354748 LDR X30, [X31], #0x20
	0x0335474C RET
	0x03354750 STR X30, [X31 - 0x20]!
	0x03354754 STP X20, X19, [X31 + 0x10]
	0x03354758 ADRP X20, 0x1088000
	0x0335475C LDRB W8, [X20 + 0xDDF]
	0x03354760 MOV X19, X0
	0x03354764 TBNZ X8, 0x0, 0x335477C
	0x03354768 ADRP X0, 0xDD6000
	0x0335476C LDR X0, [X0 + 0x448]
	0x03354770 BL 0x1C16CF4
	0x03354774 MOVZ W8, 0x1
	0x03354778 STRB W8, [X20 + 0xDDF]
	0x0335477C LDR X20, [X19 + 0x38]
	0x03354780 CBNZ X20, 0x33547A8
	0x03354784 ADRP X8, 0xDD6000
	0x03354788 LDR X8, [X8 + 0x448]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+16]
	006 Compare X0, 0
	007 JumpIfEqual {41}
	008 Move W8, [X19+28]
	009 Move W9, [X0+40]
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move W20, [X19+24]
	012 Move TEMP, X20
	013 And TEMP, TEMP, -2147483648
	014 Compare TEMP, -2147483648
	015 JumpIfEqual {31}
	016 Move W1, W20
	017 Call Queue.GetElement, X0, X1
	018 Move W8, [X19+24]
	019 Move X9, [X19+16]
	020 Move [X19+32], X0
	021 Add W8, W8, 1
	022 Move [X19+24], W8
	023 Compare X9, 0
	024 JumpIfEqual {41}
	025 Move W9, [X9+32]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move TEMP, 0
	028 Not TEMP
	029 Move W8, TEMP
	030 Move [X19+24], W8
	031 Move X8, [X0+16]
	032 Move [X19+32], X8
	033 NotImplemented "Instruction ORN not yet implemented."
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move W0, W8
	037 ShiftRight W0, 31
	038 And W0, W0, 0x7FFFFFFF
	039 Move X30, [X31+32]
	040 Return X0
	041 Call 0x1C17F20
	042 Move X0, 0xDA0000
	043 Move X0, [X0+1456]
	044 Call 0x1C17D08
	045 Call 0x1C17F10
	046 Move X19, X0
	047 Move X0, 0xDCA000
	048 Move X0, [X0+648]
	049 Call 0x1C17D08
	050 Move X1, X0
	051 Move X0, X19
	052 Move X2, X31
	053 Call InvalidOperationException..ctor, X0, X1
	054 Move X0, 0xDD7000
	055 Move X0, [X0+992]
	056 Call 0x1C17D08
	057 Move X1, X0
	058 Move X0, X19
	059 Call 0x1C17DEC

Method: System.Object get_Current()

Disassembly:
	0x0335478C LDR X0, [X8]
	0x03354790 BL 0x1C16F10
	0x03354794 MOV X1, X31
	0x03354798 MOV X20, X0
	0x0335479C BL 0x33BDD8C
	0x033547A0 STR X19, [X20 + 0x10]
	0x033547A4 STR X20, [X19 + 0x38]
	0x033547A8 MOV X0, X20
	0x033547AC LDP X20, X19, [X31 + 0x10]
	0x033547B0 LDR X30, [X31], #0x20
	0x033547B4 RET
	0x033547B8 STR X30, [X31 - 0x20]!
	0x033547BC STP X20, X19, [X31 + 0x10]
	0x033547C0 MOV X19, X1
	0x033547C4 MOV X1, X31
	0x033547C8 MOV X20, X0
	0x033547CC BL 0x33BDD8C
	0x033547D0 STR X19, [X20 + 0x10]
	0x033547D4 LDP X20, X19, [X31 + 0x10]
	0x033547D8 LDR X30, [X31], #0x20
	0x033547DC RET
	0x033547E0 STP X30, X19, [X31 - 0x10]!
	0x033547E4 LDR X8, [X0]
	0x033547E8 MOV X19, X0
	0x033547EC LDR X9, [X8 + 0x378]
	0x033547F0 LDR X2, [X8 + 0x380]
	0x033547F4 BLR X9
	0x033547F8 TBNZ X0, 0x1F, 0x335481C
	0x033547FC LDR X8, [X19 + 0x18]
	0x03354800 CBZ X8, 0x3354828
	0x03354804 LDR W9, [X8 + 0x18]
	0x03354808 CMP W0, W9
	0x0335480C B.CS 0x335482C
	0x03354810 ADD X8, X8, W0, 0x3, UXTW
	0x03354814 LDR X0, [X8 + 0x20]
	0x03354818 B 0x3354820

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X9, [X0+16]
	005 Compare X9, 0
	006 JumpIfEqual {15}
	007 Move X8, [X0+32]
	008 Move X9, [X9+16]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X20, [X31+16]
	011 Move X19, [X31+24]
	012 Move X0, X8
	013 Move X30, [X31+32]
	014 Return X0
	015 Call 0x1C17F20
	016 Move W20, [X0+24]
	017 Move X0, 0xDA0000
	018 Move X0, [X0+1456]
	019 Call 0x1C17D08
	020 Call 0x1C17F10
	021 Move X19, X0
	022 Compare W20, 0
	023 JumpIfNotEqual {26}
	024 Move X0, 0xDCB000
	025 Move X0, [X0+3144]
	026 Move X0, 0xDCB000
	027 Move X0, [X0+3136]
	028 Call 0x1C17D08
	029 Move X1, X0
	030 Move X0, X19
	031 Move X2, X31
	032 Call InvalidOperationException..ctor, X0, X1
	033 Move X0, 0xDD7000
	034 Move X0, [X0+1000]
	035 Call 0x1C17D08
	036 Move X1, X0
	037 Move X0, X19
	038 Call 0x1C17DEC

Method: System.Void Reset()

Disassembly:
	0x0335481C MOV X0, X31
	0x03354820 LDP X30, X19, [X31], #0x10
	0x03354824 RET
	0x03354828 BL 0x1C16F20
	0x0335482C BL 0x1C16F28
	0x03354830 STR X30, [X31 - 0x30]!
	0x03354834 STP X22, X21, [X31 + 0x10]
	0x03354838 STP X20, X19, [X31 + 0x20]
	0x0335483C CBZ X1, 0x33548E0
	0x03354840 MOV X20, X0
	0x03354844 MOV X19, X2
	0x03354848 LDR X0, [X0 + 0x10]
	0x0335484C LDR W2, [X20 + 0x20]
	0x03354850 LDR X4, [X20 + 0x28]
	0x03354854 MOV X22, X1
	0x03354858 MOV W1, W31
	0x0335485C MOV X3, X22
	0x03354860 MOV X5, X31
	0x03354864 BL 0x33A0778
	0x03354868 MOV W21, W0
	0x0335486C TBNZ X0, 0x1F, 0x33548C0
	0x03354870 LDR X22, [X20 + 0x18]
	0x03354874 CBZ X22, 0x335493C
	0x03354878 CBZ X19, 0x3354890
	0x0335487C LDR X8, [X22]
	0x03354880 MOV X0, X19
	0x03354884 LDR X1, [X8 + 0x40]
	0x03354888 BL 0x1C16E00
	0x0335488C CBZ X0, 0x3354944
	0x03354890 LDR W8, [X22 + 0x18]
	0x03354894 CMP W21, W8
	0x03354898 B.CS 0x3354940
	0x0335489C ADD X8, X22, W21, 0x3, UXTW
	0x033548A0 STR X19, [X8 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+16]
	004 Compare X8, 0
	005 JumpIfEqual {18}
	006 Move W9, [X0+28]
	007 Move W10, [X8+40]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move W9, [X8+32]
	010 NotImplemented "Instruction CMP not yet implemented."
	011 NotImplemented "Instruction CSINV not yet implemented."
	012 Move [X0+24], W9
	013 Move X8, [X8+16]
	014 Move [X0+32], X8
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Return 
	018 Call 0x1C17F20
	019 Move X0, 0xDA0000
	020 Move X0, [X0+1456]
	021 Call 0x1C17D08
	022 Call 0x1C17F10
	023 Move X19, X0
	024 Move X0, 0xDCA000
	025 Move X0, [X0+648]
	026 Call 0x1C17D08
	027 Move X1, X0
	028 Move X0, X19
	029 Move X2, X31
	030 Call InvalidOperationException..ctor, X0, X1
	031 Move X0, 0xDD7000
	032 Move X0, [X0+1008]
	033 Call 0x1C17D08
	034 Move X1, X0
	035 Move X0, X19
	036 Call 0x1C17DEC

