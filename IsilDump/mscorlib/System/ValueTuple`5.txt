Type: System.ValueTuple`5

Method: System.Void .ctor(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5)

Disassembly:
	0x027D04B8 ADD X23, X19, 0x10
	0x027D04BC LDRB W8, [X0 + 0x135]
	0x027D04C0 TBNZ X8, 0x0, 0x27D04C8
	0x027D04C4 BL 0x1C5C684
	0x027D04C8 LDR X8, [X0 + 0xC0]
	0x027D04CC ADRP X25, 0x1923000
	0x027D04D0 MOV X0, X23

ISIL:
	001 And W8, W5, 1
	002 Move [X0], X1
	003 Move [X0+8], W2
	004 Move [X0+16], X3
	005 Move [X0+24], W4
	006 Move [X0+28], W8
	007 Return 

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x027D04D4 LDR X1, [X8 + 0x198]
	0x027D04D8 LDR X25, [X25 + 0xB58]
	0x027D04DC BL 0x33C24FC
	0x027D04E0 MOV W23, W0
	0x027D04E4 LDR X0, [X20 + 0x20]
	0x027D04E8 ADD X24, X19, 0x18
	0x027D04EC LDRB W8, [X0 + 0x135]
	0x027D04F0 TBNZ X8, 0x0, 0x27D04F8
	0x027D04F4 BL 0x1C5C684
	0x027D04F8 LDR X8, [X0 + 0xC0]
	0x027D04FC MOV X0, X24
	0x027D0500 LDR X1, [X8 + 0x1A0]
	0x027D0504 BL 0x337B6D8
	0x027D0508 LDR X8, [X25]
	0x027D050C MOV W24, W0
	0x027D0510 LDR W9, [X8 + 0xE0]
	0x027D0514 CBNZ W9, 0x27D0520
	0x027D0518 MOV X0, X8
	0x027D051C BL 0x1C16DFC
	0x027D0520 LDR X0, [X20 + 0x20]
	0x027D0524 LDRB W8, [X0 + 0x135]
	0x027D0528 TBNZ X8, 0x0, 0x27D0530
	0x027D052C BL 0x1C5C684
	0x027D0530 LDR X8, [X0 + 0xC0]
	0x027D0534 ADD X0, X19, 0x1C
	0x027D0538 LDR X1, [X8 + 0x1A8]
	0x027D053C BL 0x33176B4
	0x027D0540 MOV W4, W0
	0x027D0544 MOV W0, W21
	0x027D0548 MOV W1, W22
	0x027D054C MOV W2, W23
	0x027D0550 MOV W3, W24
	0x027D0554 LDP X20, X19, [X31 + 0x30]
	0x027D0558 LDP X22, X21, [X31 + 0x20]
	0x027D055C LDP X24, X23, [X31 + 0x10]
	0x027D0560 MOV X5, X31
	0x027D0564 LDP X30, X25, [X31], #0x40
	0x027D0568 B 0x339BDAC
	0x027D056C STR X30, [X31 - 0x20]!
	0x027D0570 STP X20, X19, [X31 + 0x10]
	0x027D0574 LDR X8, [X2 + 0x20]
	0x027D0578 MOV X19, X1
	0x027D057C MOV X20, X0
	0x027D0580 LDRB W9, [X8 + 0x135]
	0x027D0584 TBNZ X9, 0x0, 0x27D0594
	0x027D0588 MOV X0, X8
	0x027D058C BL 0x1C5C684
	0x027D0590 MOV X8, X0
	0x027D0594 LDR X8, [X8 + 0xC0]
	0x027D0598 MOV X0, X20
	0x027D059C MOV X1, X19
	0x027D05A0 LDP X20, X19, [X31 + 0x10]
	0x027D05A4 LDR X2, [X8 + 0x1B0]
	0x027D05A8 LDR X30, [X31], #0x20
	0x027D05AC B 0x27D05B0
	0x027D05B0 SUB X31, X31, 0x70
	0x027D05B4 STR X30, [X31 + 0x20]
	0x027D05B8 STP X26, X25, [X31 + 0x30]
	0x027D05BC STP X24, X23, [X31 + 0x40]
	0x027D05C0 STP X22, X21, [X31 + 0x50]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Move X8, [X2+32]
	007 Move X20, X2
	008 Move X21, X1
	009 Move X19, X0
	010 Move W9, [X8+309]
	011 Move TEMP, X9
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {18}
	015 Move X0, X8
	016 Call 0x1C5D684
	017 Move X8, X0
	018 Move X8, [X8+192]
	019 Move X0, [X8+8]
	020 Move W8, [X0+309]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {26}
	025 Call 0x1C5D684
	026 Compare X21, 0
	027 JumpIfEqual {30}
	028 Move X8, [X21]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W0, W31
	031 Move X0, [X20+32]
	032 Move W8, [X0+309]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {38}
	037 Call 0x1C5D684
	038 Move X8, [X0+192]
	039 Move X1, [X8+8]
	040 Move W8, [X1+309]
	041 Move TEMP, X8
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {48}
	045 Move X0, X1
	046 Call 0x1C5D684
	047 Move X1, X0
	048 Move X8, [X21]
	049 Move X9, [X1+64]
	050 Move X0, X21
	051 Move X8, [X8+64]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Call 0x1C17E08
	054 Move V1, [X0]
	055 Move V0, [X0+16]
	056 Move [X31], V1
	057 Move [X31+8], V0
	058 Move X0, [X20+32]
	059 Move W8, [X0+309]
	060 Move TEMP, X8
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {65}
	064 Call 0x1C5D684
	065 Move X8, [X0+192]
	066 Move V0, [X31]
	067 Move V1, [X31+16]
	068 Add X1, X31, 32
	069 Move X0, X19
	070 Move X2, [X8+48]
	071 Move [X31+32], V0
	072 Move [X31+40], V1
	073 Call 0x27D05C4, X0, X1
	074 Move X20, [X31+80]
	075 Move X19, [X31+88]
	076 Move X30, [X31+64]
	077 Move X21, [X31+72]
	078 And W0, W0, 1
	079 Add X31, X31, 96
	080 Return X0
	081 Call 0x1C181E0

Method: System.Boolean Equals(System.ValueTuple`5<T1, T2, T3, T4, T5> other)

Disassembly:
	0x027D05C4 STP X20, X19, [X31 + 0x60]
	0x027D05C8 ADRP X22, 0x1C0A000
	0x027D05CC LDRB W8, [X22 + 0x970]
	0x027D05D0 MOV X20, X2
	0x027D05D4 MOV X19, X1
	0x027D05D8 MOV X21, X0
	0x027D05DC TBNZ X8, 0x0, 0x27D05F4
	0x027D05E0 ADRP X0, 0x194D000
	0x027D05E4 LDR X0, [X0 + 0x900]
	0x027D05E8 BL 0x1C16CF4
	0x027D05EC MOVZ W8, 0x1
	0x027D05F0 STRB W8, [X22 + 0x970]
	0x027D05F4 LDR X8, [X21]
	0x027D05F8 STR X8, [X31 + 0x28]
	0x027D05FC LDR X0, [X20 + 0x20]
	0x027D0600 LDRB W8, [X0 + 0x135]
	0x027D0604 TBNZ X8, 0x0, 0x27D060C
	0x027D0608 BL 0x1C5C684
	0x027D060C LDR X8, [X0 + 0xC0]
	0x027D0610 ADD X1, X31, 0x28
	0x027D0614 LDR X0, [X8]
	0x027D0618 BL 0x1C16E04
	0x027D061C CBZ X19, 0x27D0924
	0x027D0620 ADRP X26, 0x194D000
	0x027D0624 LDR X8, [X19]
	0x027D0628 LDR X26, [X26 + 0x900]
	0x027D062C MOV X22, X0
	0x027D0630 LDRH W9, [X8 + 0x12E]
	0x027D0634 LDR X1, [X26]
	0x027D0638 CBZ X9, 0x27D065C
	0x027D063C LDR X10, [X8 + 0xB0]
	0x027D0640 ADD X10, X10, 0x8
	0x027D0644 LDUR X11, [X10 - 0x8]
	0x027D0648 CMP X11, X1
	0x027D064C B.EQ 0x27D066C
	0x027D0650 SUBS X9, X9, 0x1
	0x027D0654 ADD X10, X10, 0x10
	0x027D0658 B.NE 0x27D0644
	0x027D065C MOVZ W2, 0x1
	0x027D0660 MOV X0, X19
	0x027D0664 BL 0x1C5C788
	0x027D0668 B 0x27D067C
	0x027D066C LDR W9, [X10]
	0x027D0670 ADD W9, W9, 0x1
	0x027D0674 ADD X8, X8, W9, 0x4, SXTW
	0x027D0678 ADD X0, X8, 0x138
	0x027D067C LDP X8, X2, [X0]
	0x027D0680 MOV X0, X19
	0x027D0684 MOV X1, X22
	0x027D0688 BLR X8
	0x027D068C LDR W8, [X21 + 0x8]
	0x027D0690 MOV W22, W0
	0x027D0694 STR W8, [X31 + 0x1C]
	0x027D0698 LDR X8, [X20 + 0x20]
	0x027D069C LDRB W9, [X8 + 0x135]
	0x027D06A0 TBNZ X9, 0x0, 0x27D06B0
	0x027D06A4 MOV X0, X8
	0x027D06A8 BL 0x1C5C684
	0x027D06AC MOV X8, X0
	0x027D06B0 LDR X8, [X8 + 0xC0]
	0x027D06B4 ADD X1, X31, 0x1C
	0x027D06B8 LDR X0, [X8 + 0x10]
	0x027D06BC BL 0x1C16E04
	0x027D06C0 LDR X8, [X19]
	0x027D06C4 LDR X1, [X26]
	0x027D06C8 MOV X23, X0
	0x027D06CC LDRH W9, [X8 + 0x12E]
	0x027D06D0 CBZ X9, 0x27D06F4
	0x027D06D4 LDR X10, [X8 + 0xB0]
	0x027D06D8 ADD X10, X10, 0x8
	0x027D06DC LDUR X11, [X10 - 0x8]
	0x027D06E0 CMP X11, X1
	0x027D06E4 B.EQ 0x27D0704
	0x027D06E8 SUBS X9, X9, 0x1
	0x027D06EC ADD X10, X10, 0x10
	0x027D06F0 B.NE 0x27D06DC
	0x027D06F4 MOVZ W2, 0x1
	0x027D06F8 MOV X0, X19
	0x027D06FC BL 0x1C5C788
	0x027D0700 B 0x27D0714
	0x027D0704 LDR W9, [X10]
	0x027D0708 ADD W9, W9, 0x1
	0x027D070C ADD X8, X8, W9, 0x4, SXTW
	0x027D0710 ADD X0, X8, 0x138

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X21, X2
	007 Move X19, X1
	008 Move X20, X0
	009 Move W9, [X8+309]
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X8
	015 Call 0x1C5D684
	016 Move X8, X0
	017 Move X8, [X8+192]
	018 Move X0, [X8+64]
	019 Call 0x27ED1C4
	020 Compare X0, 0
	021 JumpIfEqual {127}
	022 Move X8, [X0]
	023 Move X2, [X19]
	024 Move X1, [X20]
	025 Move X9, [X8+440]
	026 Move X3, [X8+448]
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {121}
	032 Move X0, [X21+32]
	033 Move W8, [X0+309]
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {39}
	038 Call 0x1C5D684
	039 Move X8, [X0+192]
	040 Move X0, [X8+96]
	041 Call 0x211B010
	042 Compare X0, 0
	043 JumpIfEqual {127}
	044 Move X8, [X0]
	045 Move W2, [X19+8]
	046 Move W1, [X20+8]
	047 Move X9, [X8+440]
	048 Move X3, [X8+448]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {121}
	054 Move X0, [X21+32]
	055 Move W8, [X0+309]
	056 Move TEMP, X8
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {61}
	060 Call 0x1C5D684
	061 Move X8, [X0+192]
	062 Move X0, [X8+128]
	063 Call 0x27ED1C4
	064 Compare X0, 0
	065 JumpIfEqual {127}
	066 Move X8, [X0]
	067 Move X2, [X19+16]
	068 Move X1, [X20+16]
	069 Move X9, [X8+440]
	070 Move X3, [X8+448]
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {121}
	076 Move X0, [X21+32]
	077 Move W8, [X0+309]
	078 Move TEMP, X8
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfEqual {83}
	082 Call 0x1C5D684
	083 Move X8, [X0+192]
	084 Move X0, [X8+160]
	085 Call 0x211B010
	086 Compare X0, 0
	087 JumpIfEqual {127}
	088 Move X8, [X0]
	089 Move W2, [X19+24]
	090 Move W1, [X20+24]
	091 Move X9, [X8+440]
	092 Move X3, [X8+448]
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Move TEMP, X0
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfNotEqual {121}
	098 Move X0, [X21+32]
	099 Move W8, [X0+309]
	100 Move TEMP, X8
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfEqual {105}
	104 Call 0x1C5D684
	105 Move X8, [X0+192]
	106 Move X0, [X8+192]
	107 Call 0x21199DC
	108 Compare X0, 0
	109 JumpIfEqual {127}
	110 Move X8, [X0]
	111 Move W9, [X19+28]
	112 Move W1, [X20+28]
	113 Move X20, [X31+16]
	114 Move X19, [X31+24]
	115 Move X4, [X8+440]
	116 Move X3, [X8+448]
	117 And W2, W9, 1
	118 Move X30, [X31+32]
	119 Move X21, [X31+40]
	120 CallNoReturn X4
	121 Move X20, [X31+16]
	122 Move X19, [X31+24]
	123 Move W0, W31
	124 Move X30, [X31+32]
	125 Move X21, [X31+40]
	126 Return X0
	127 Call 0x1C17F20

Method: System.Boolean System.Collections.IStructuralEquatable.Equals(System.Object other, System.Collections.IEqualityComparer comparer)

Disassembly:
	0x027D0714 LDP X8, X2, [X0]
	0x027D0718 MOV X0, X19
	0x027D071C MOV X1, X23
	0x027D0720 BLR X8
	0x027D0724 LDR X8, [X21 + 0x10]
	0x027D0728 MOV W23, W0
	0x027D072C STR X8, [X31 + 0x10]
	0x027D0730 LDR X8, [X20 + 0x20]
	0x027D0734 LDRB W9, [X8 + 0x135]
	0x027D0738 TBNZ X9, 0x0, 0x27D0748
	0x027D073C MOV X0, X8
	0x027D0740 BL 0x1C5C684
	0x027D0744 MOV X8, X0
	0x027D0748 LDR X8, [X8 + 0xC0]
	0x027D074C ADD X1, X31, 0x10
	0x027D0750 LDR X0, [X8 + 0x18]
	0x027D0754 BL 0x1C16E04
	0x027D0758 LDR X8, [X19]
	0x027D075C LDR X1, [X26]
	0x027D0760 MOV X24, X0
	0x027D0764 LDRH W9, [X8 + 0x12E]
	0x027D0768 CBZ X9, 0x27D078C
	0x027D076C LDR X10, [X8 + 0xB0]
	0x027D0770 ADD X10, X10, 0x8
	0x027D0774 LDUR X11, [X10 - 0x8]
	0x027D0778 CMP X11, X1
	0x027D077C B.EQ 0x27D079C
	0x027D0780 SUBS X9, X9, 0x1
	0x027D0784 ADD X10, X10, 0x10
	0x027D0788 B.NE 0x27D0774
	0x027D078C MOVZ W2, 0x1
	0x027D0790 MOV X0, X19
	0x027D0794 BL 0x1C5C788
	0x027D0798 B 0x27D07AC
	0x027D079C LDR W9, [X10]
	0x027D07A0 ADD W9, W9, 0x1
	0x027D07A4 ADD X8, X8, W9, 0x4, SXTW
	0x027D07A8 ADD X0, X8, 0x138
	0x027D07AC LDP X8, X2, [X0]
	0x027D07B0 MOV X0, X19
	0x027D07B4 MOV X1, X24
	0x027D07B8 BLR X8
	0x027D07BC LDR W8, [X21 + 0x18]
	0x027D07C0 MOV W24, W0
	0x027D07C4 STR W8, [X31 + 0xC]
	0x027D07C8 LDR X8, [X20 + 0x20]
	0x027D07CC LDRB W9, [X8 + 0x135]
	0x027D07D0 TBNZ X9, 0x0, 0x27D07E0
	0x027D07D4 MOV X0, X8
	0x027D07D8 BL 0x1C5C684
	0x027D07DC MOV X8, X0
	0x027D07E0 LDR X8, [X8 + 0xC0]
	0x027D07E4 ADD X1, X31, 0xC
	0x027D07E8 LDR X0, [X8 + 0x20]
	0x027D07EC BL 0x1C16E04
	0x027D07F0 LDR X8, [X19]
	0x027D07F4 LDR X1, [X26]
	0x027D07F8 MOV X25, X0
	0x027D07FC LDRH W9, [X8 + 0x12E]
	0x027D0800 CBZ X9, 0x27D0824
	0x027D0804 LDR X10, [X8 + 0xB0]
	0x027D0808 ADD X10, X10, 0x8
	0x027D080C LDUR X11, [X10 - 0x8]
	0x027D0810 CMP X11, X1
	0x027D0814 B.EQ 0x27D0834
	0x027D0818 SUBS X9, X9, 0x1
	0x027D081C ADD X10, X10, 0x10
	0x027D0820 B.NE 0x27D080C
	0x027D0824 MOVZ W2, 0x1
	0x027D0828 MOV X0, X19
	0x027D082C BL 0x1C5C788
	0x027D0830 B 0x27D0844
	0x027D0834 LDR W9, [X10]
	0x027D0838 ADD W9, W9, 0x1
	0x027D083C ADD X8, X8, W9, 0x4, SXTW
	0x027D0840 ADD X0, X8, 0x138
	0x027D0844 LDP X8, X2, [X0]
	0x027D0848 MOV X0, X19
	0x027D084C MOV X1, X25
	0x027D0850 BLR X8
	0x027D0854 LDRB W8, [X21 + 0x1C]
	0x027D0858 STRB W8, [X31 + 0x8]
	0x027D085C LDR X8, [X20 + 0x20]
	0x027D0860 MOV W20, W0
	0x027D0864 LDRB W9, [X8 + 0x135]
	0x027D0868 TBNZ X9, 0x0, 0x27D0878
	0x027D086C MOV X0, X8
	0x027D0870 BL 0x1C5C684
	0x027D0874 MOV X8, X0
	0x027D0878 LDR X8, [X8 + 0xC0]
	0x027D087C ADD X1, X31, 0x8
	0x027D0880 LDR X0, [X8 + 0x28]
	0x027D0884 BL 0x1C16E04
	0x027D0888 LDR X8, [X19]
	0x027D088C LDR X1, [X26]
	0x027D0890 MOV X21, X0
	0x027D0894 LDRH W9, [X8 + 0x12E]
	0x027D0898 CBZ X9, 0x27D08BC
	0x027D089C LDR X10, [X8 + 0xB0]
	0x027D08A0 ADD X10, X10, 0x8
	0x027D08A4 LDUR X11, [X10 - 0x8]
	0x027D08A8 CMP X11, X1
	0x027D08AC B.EQ 0x27D08CC
	0x027D08B0 SUBS X9, X9, 0x1
	0x027D08B4 ADD X10, X10, 0x10
	0x027D08B8 B.NE 0x27D08A4
	0x027D08BC MOVZ W2, 0x1
	0x027D08C0 MOV X0, X19
	0x027D08C4 BL 0x1C5C788
	0x027D08C8 B 0x27D08DC
	0x027D08CC LDR W9, [X10]
	0x027D08D0 ADD W9, W9, 0x1
	0x027D08D4 ADD X8, X8, W9, 0x4, SXTW
	0x027D08D8 ADD X0, X8, 0x138
	0x027D08DC LDP X8, X2, [X0]
	0x027D08E0 MOV X0, X19
	0x027D08E4 MOV X1, X21
	0x027D08E8 BLR X8
	0x027D08EC MOV W4, W0
	0x027D08F0 MOV W0, W22
	0x027D08F4 MOV W1, W23
	0x027D08F8 MOV W2, W24
	0x027D08FC MOV W3, W20
	0x027D0900 MOV X5, X31
	0x027D0904 BL 0x339BDAC
	0x027D0908 LDP X20, X19, [X31 + 0x60]
	0x027D090C LDP X22, X21, [X31 + 0x50]
	0x027D0910 LDP X24, X23, [X31 + 0x40]
	0x027D0914 LDP X26, X25, [X31 + 0x30]
	0x027D0918 LDR X30, [X31 + 0x20]
	0x027D091C ADD X31, X31, 0x70
	0x027D0920 RET
	0x027D0924 BL 0x1C16F20
	0x027D0928 STR X30, [X31 - 0x20]!
	0x027D092C STP X20, X19, [X31 + 0x10]
	0x027D0930 LDR X8, [X2 + 0x20]
	0x027D0934 MOV X19, X1
	0x027D0938 MOV X20, X0
	0x027D093C LDRB W9, [X8 + 0x135]
	0x027D0940 TBNZ X9, 0x0, 0x27D0950
	0x027D0944 MOV X0, X8
	0x027D0948 BL 0x1C5C684
	0x027D094C MOV X8, X0
	0x027D0950 LDR X8, [X8 + 0xC0]
	0x027D0954 MOV X0, X20
	0x027D0958 MOV X1, X19
	0x027D095C LDP X20, X19, [X31 + 0x10]
	0x027D0960 LDR X2, [X8 + 0x1B0]
	0x027D0964 LDR X30, [X31], #0x20
	0x027D0968 B 0x27D05B0
	0x027D096C STP X30, X23, [X31 - 0x30]!
	0x027D0970 STP X22, X21, [X31 + 0x10]
	0x027D0974 STP X20, X19, [X31 + 0x20]
	0x027D0978 ADRP X20, 0x1C0A000
	0x027D097C ADRP X22, 0x1923000
	0x027D0980 LDRB W8, [X20 + 0x971]
	0x027D0984 LDR X22, [X22 + 0xAC8]
	0x027D0988 MOV X19, X1
	0x027D098C MOV X21, X0
	0x027D0990 TBNZ X8, 0x0, 0x27D09D8
	0x027D0994 ADRP X0, 0x1923000
	0x027D0998 LDR X0, [X0 + 0xB58]
	0x027D099C BL 0x1C16CF4
	0x027D09A0 ADRP X0, 0x1923000
	0x027D09A4 LDR X0, [X0 + 0xAC8]
	0x027D09A8 BL 0x1C16CF4
	0x027D09AC ADRP X0, 0x1923000
	0x027D09B0 LDR X0, [X0 + 0x838]
	0x027D09B4 BL 0x1C16CF4
	0x027D09B8 ADRP X0, 0x192E000
	0x027D09BC LDR X0, [X0 + 0x310]
	0x027D09C0 BL 0x1C16CF4
	0x027D09C4 ADRP X0, 0x1924000
	0x027D09C8 LDR X0, [X0 + 0x608]
	0x027D09CC BL 0x1C16CF4
	0x027D09D0 MOVZ W8, 0x1
	0x027D09D4 STRB W8, [X20 + 0x971]
	0x027D09D8 LDR X0, [X22]
	0x027D09DC MOVZ W1, 0xB
	0x027D09E0 BL 0x1C16D6C
	0x027D09E4 CBZ X0, 0x27D0B98
	0x027D09E8 LDR W8, [X0 + 0x18]
	0x027D09EC MOV X20, X0
	0x027D09F0 CBZ W8, 0x27D0B94
	0x027D09F4 ADRP X8, 0x192E000
	0x027D09F8 LDR X8, [X8 + 0x310]
	0x027D09FC LDR X8, [X8]
	0x027D0A00 STR X8, [X20 + 0x20]
	0x027D0A04 LDR X0, [X19 + 0x20]
	0x027D0A08 LDRB W8, [X0 + 0x135]
	0x027D0A0C TBNZ X8, 0x0, 0x27D0A14
	0x027D0A10 BL 0x1C5C684
	0x027D0A14 LDR X8, [X0 + 0xC0]
	0x027D0A18 MOV X0, X21
	0x027D0A1C LDR X1, [X8 + 0x1B8]
	0x027D0A20 BL 0x33C68E4
	0x027D0A24 LDR W8, [X20 + 0x18]
	0x027D0A28 CMP W8, 0x1
	0x027D0A2C B.LS 0x27D0B94
	0x027D0A30 CMP W8, 0x2
	0x027D0A34 STR X0, [X20 + 0x28]
	0x027D0A38 B.EQ 0x27D0B94
	0x027D0A3C ADRP X23, 0x1923000
	0x027D0A40 LDR X23, [X23 + 0x838]
	0x027D0A44 ADD X22, X21, 0x8
	0x027D0A48 LDR X8, [X23]
	0x027D0A4C STR X8, [X20 + 0x30]
	0x027D0A50 LDR X0, [X19 + 0x20]
	0x027D0A54 LDRB W8, [X0 + 0x135]
	0x027D0A58 TBNZ X8, 0x0, 0x27D0A60
	0x027D0A5C BL 0x1C5C684
	0x027D0A60 LDR X8, [X0 + 0xC0]
	0x027D0A64 MOV X0, X22
	0x027D0A68 LDR X1, [X8 + 0x1C0]
	0x027D0A6C BL 0x337B6E0
	0x027D0A70 LDR W8, [X20 + 0x18]
	0x027D0A74 CMP W8, 0x3
	0x027D0A78 B.LS 0x27D0B94
	0x027D0A7C CMP W8, 0x4
	0x027D0A80 STR X0, [X20 + 0x38]
	0x027D0A84 B.EQ 0x27D0B94
	0x027D0A88 LDR X8, [X23]
	0x027D0A8C ADD X22, X21, 0x10
	0x027D0A90 STR X8, [X20 + 0x40]
	0x027D0A94 LDR X0, [X19 + 0x20]
	0x027D0A98 LDRB W8, [X0 + 0x135]
	0x027D0A9C TBNZ X8, 0x0, 0x27D0AA4
	0x027D0AA0 BL 0x1C5C684
	0x027D0AA4 LDR X8, [X0 + 0xC0]
	0x027D0AA8 MOV X0, X22
	0x027D0AAC LDR X1, [X8 + 0x1C8]
	0x027D0AB0 BL 0x33C68E4
	0x027D0AB4 LDR W8, [X20 + 0x18]
	0x027D0AB8 CMP W8, 0x5
	0x027D0ABC B.LS 0x27D0B94
	0x027D0AC0 CMP W8, 0x6
	0x027D0AC4 STR X0, [X20 + 0x48]
	0x027D0AC8 B.EQ 0x27D0B94
	0x027D0ACC LDR X8, [X23]
	0x027D0AD0 ADD X22, X21, 0x18
	0x027D0AD4 STR X8, [X20 + 0x50]
	0x027D0AD8 LDR X0, [X19 + 0x20]
	0x027D0ADC LDRB W8, [X0 + 0x135]
	0x027D0AE0 TBNZ X8, 0x0, 0x27D0AE8
	0x027D0AE4 BL 0x1C5C684
	0x027D0AE8 LDR X8, [X0 + 0xC0]
	0x027D0AEC MOV X0, X22
	0x027D0AF0 LDR X1, [X8 + 0x1D0]
	0x027D0AF4 BL 0x337B6E0
	0x027D0AF8 LDR W8, [X20 + 0x18]
	0x027D0AFC CMP W8, 0x7
	0x027D0B00 B.LS 0x27D0B94
	0x027D0B04 CMP W8, 0x8
	0x027D0B08 STR X0, [X20 + 0x58]
	0x027D0B0C B.EQ 0x27D0B94
	0x027D0B10 LDR X8, [X23]
	0x027D0B14 ADRP X9, 0x1923000
	0x027D0B18 LDR X9, [X9 + 0xB58]
	0x027D0B1C ADD X21, X21, 0x1C
	0x027D0B20 STR X8, [X20 + 0x60]
	0x027D0B24 LDR X0, [X9]
	0x027D0B28 LDR W8, [X0 + 0xE0]
	0x027D0B2C CBNZ W8, 0x27D0B34
	0x027D0B30 BL 0x1C16DFC
	0x027D0B34 LDR X0, [X19 + 0x20]
	0x027D0B38 LDRB W8, [X0 + 0x135]
	0x027D0B3C TBNZ X8, 0x0, 0x27D0B44
	0x027D0B40 BL 0x1C5C684
	0x027D0B44 LDR X8, [X0 + 0xC0]
	0x027D0B48 MOV X0, X21
	0x027D0B4C LDR X1, [X8 + 0x1D8]
	0x027D0B50 BL 0x33176C4
	0x027D0B54 LDR W8, [X20 + 0x18]
	0x027D0B58 CMP W8, 0x9
	0x027D0B5C B.LS 0x27D0B94
	0x027D0B60 CMP W8, 0xA
	0x027D0B64 STR X0, [X20 + 0x68]
	0x027D0B68 B.EQ 0x27D0B94
	0x027D0B6C ADRP X8, 0x1924000
	0x027D0B70 LDR X8, [X8 + 0x608]
	0x027D0B74 MOV X0, X20
	0x027D0B78 LDP X22, X21, [X31 + 0x10]
	0x027D0B7C MOV X1, X31
	0x027D0B80 LDR X8, [X8]
	0x027D0B84 STR X8, [X20 + 0x70]
	0x027D0B88 LDP X20, X19, [X31 + 0x20]
	0x027D0B8C LDP X30, X23, [X31], #0x30
	0x027D0B90 B 0x32278CC
	0x027D0B94 BL 0x1C16F28
	0x027D0B98 BL 0x1C16F20
	0x027D0B9C STP X30, X23, [X31 - 0x30]!
	0x027D0BA0 STP X22, X21, [X31 + 0x10]
	0x027D0BA4 STP X20, X19, [X31 + 0x20]
	0x027D0BA8 ADRP X20, 0x1C0A000
	0x027D0BAC ADRP X22, 0x1923000
	0x027D0BB0 LDRB W8, [X20 + 0x972]
	0x027D0BB4 LDR X22, [X22 + 0xAC8]
	0x027D0BB8 MOV X19, X1
	0x027D0BBC MOV X21, X0
	0x027D0BC0 TBNZ X8, 0x0, 0x27D0BFC
	0x027D0BC4 ADRP X0, 0x1923000
	0x027D0BC8 LDR X0, [X0 + 0xB58]
	0x027D0BCC BL 0x1C16CF4
	0x027D0BD0 ADRP X0, 0x1923000
	0x027D0BD4 LDR X0, [X0 + 0xAC8]
	0x027D0BD8 BL 0x1C16CF4
	0x027D0BDC ADRP X0, 0x1923000
	0x027D0BE0 LDR X0, [X0 + 0x838]
	0x027D0BE4 BL 0x1C16CF4
	0x027D0BE8 ADRP X0, 0x1924000

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X23, 0x1C0B000
	014 Move W8, [X23+2413]
	015 Move X20, X3
	016 Move X19, X2
	017 Move X22, X1
	018 Move X21, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0x194E000
	024 Move X0, [X0+2304]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X23+2413], W8
	028 Compare X22, 0
	029 JumpIfEqual {347}
	030 Move X0, [X20+32]
	031 Move W8, [X0+309]
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {37}
	036 Call 0x1C5D684
	037 Move X8, [X0+192]
	038 Move X0, [X8+8]
	039 Move W8, [X0+309]
	040 Move TEMP, X8
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {45}
	044 Call 0x1C5D684
	045 Move X8, [X22]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X0, [X20+32]
	048 Move W8, [X0+309]
	049 Move TEMP, X8
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {54}
	053 Call 0x1C5D684
	054 Move X8, [X0+192]
	055 Move X1, [X8+8]
	056 Move W8, [X1+309]
	057 Move TEMP, X8
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfEqual {64}
	061 Move X0, X1
	062 Call 0x1C5D684
	063 Move X1, X0
	064 Move X8, [X22]
	065 Move X9, [X1+64]
	066 Move X0, X22
	067 Move X8, [X8+64]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Call 0x1C17E08
	070 Move X8, [X21]
	071 Move X22, [X0]
	072 Move W28, [X0+8]
	073 Move X27, [X0+16]
	074 Move W26, [X0+24]
	075 Move W24, [X0+28]
	076 Move [X31+24], X8
	077 Move X0, [X20+32]
	078 Move W8, [X0+309]
	079 Move TEMP, X8
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfEqual {84}
	083 Call 0x1C5D684
	084 Move X8, [X0+192]
	085 Add X1, X31, 24
	086 Move X0, [X8]
	087 Call 0x1C17E04
	088 Move [X31+8], X22
	089 Move X8, [X20+32]
	090 Move X22, X0
	091 Move W9, [X8+309]
	092 Move TEMP, X9
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfEqual {99}
	096 Move X0, X8
	097 Call 0x1C5D684
	098 Move X8, X0
	099 Move X8, [X8+192]
	100 Add X1, X31, 8
	101 Move X0, [X8]
	102 Call 0x1C17E04
	103 Compare X19, 0
	104 JumpIfEqual {372}
	105 Move X25, 0x194E000
	106 Move X8, [X19]
	107 Move X25, [X25+2304]
	108 Move X23, X0
	109 NotImplemented "Instruction LDRH not yet implemented."
	110 Move X1, [X25]
	111 Compare X9, 0
	112 JumpIfEqual {119}
	113 Move X10, [X8+176]
	114 Add X10, X10, 8
	115 NotImplemented "Instruction LDUR not yet implemented."
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Subtract X9, X9, 1
	118 Add X10, X10, 16
	119 Move X0, X19
	120 Move W2, W31
	121 Call 0x1C5D788
	122 NotImplemented "Instruction LDRSW not yet implemented."
	123 Add X8, X8, X9
	124 Add X0, X8, 312
	125 Move X8, [X0]
	126 Move X3, [X0+8]
	127 Move X0, X19
	128 Move X1, X22
	129 Move X2, X23
	130 NotImplemented "Instruction BLR not yet implemented."
	131 Move TEMP, X0
	132 And TEMP, TEMP, 1
	133 Compare TEMP, 1
	134 JumpIfNotEqual {347}
	135 Move W8, [X21+8]
	136 Move [X31+24], W8
	137 Move X0, [X20+32]
	138 Move W8, [X0+309]
	139 Move TEMP, X8
	140 And TEMP, TEMP, 1
	141 Compare TEMP, 1
	142 JumpIfEqual {144}
	143 Call 0x1C5D684
	144 Move X8, [X0+192]
	145 Add X1, X31, 24
	146 Move X0, [X8+16]
	147 Call 0x1C17E04
	148 Move [X31+8], W28
	149 Move X8, [X20+32]
	150 Move X22, X0
	151 Move W9, [X8+309]
	152 Move TEMP, X9
	153 And TEMP, TEMP, 1
	154 Compare TEMP, 1
	155 JumpIfEqual {159}
	156 Move X0, X8
	157 Call 0x1C5D684
	158 Move X8, X0
	159 Move X8, [X8+192]
	160 Add X1, X31, 8
	161 Move X0, [X8+16]
	162 Call 0x1C17E04
	163 Move X8, [X19]
	164 Move X1, [X25]
	165 Move X23, X0
	166 NotImplemented "Instruction LDRH not yet implemented."
	167 Compare X9, 0
	168 JumpIfEqual {175}
	169 Move X10, [X8+176]
	170 Add X10, X10, 8
	171 NotImplemented "Instruction LDUR not yet implemented."
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Subtract X9, X9, 1
	174 Add X10, X10, 16
	175 Move X0, X19
	176 Move W2, W31
	177 Call 0x1C5D788
	178 NotImplemented "Instruction LDRSW not yet implemented."
	179 Add X8, X8, X9
	180 Add X0, X8, 312
	181 Move X8, [X0]
	182 Move X3, [X0+8]
	183 Move X0, X19
	184 Move X1, X22
	185 Move X2, X23
	186 NotImplemented "Instruction BLR not yet implemented."
	187 Move TEMP, X0
	188 And TEMP, TEMP, 1
	189 Compare TEMP, 1
	190 JumpIfNotEqual {347}
	191 Move X8, [X21+16]
	192 Move [X31+24], X8
	193 Move X0, [X20+32]
	194 Move W8, [X0+309]
	195 Move TEMP, X8
	196 And TEMP, TEMP, 1
	197 Compare TEMP, 1
	198 JumpIfEqual {200}
	199 Call 0x1C5D684
	200 Move X8, [X0+192]
	201 Add X1, X31, 24
	202 Move X0, [X8+24]
	203 Call 0x1C17E04
	204 Move [X31+8], X27
	205 Move X8, [X20+32]
	206 Move X22, X0
	207 Move W9, [X8+309]
	208 Move TEMP, X9
	209 And TEMP, TEMP, 1
	210 Compare TEMP, 1
	211 JumpIfEqual {215}
	212 Move X0, X8
	213 Call 0x1C5D684
	214 Move X8, X0
	215 Move X8, [X8+192]
	216 Add X1, X31, 8
	217 Move X0, [X8+24]
	218 Call 0x1C17E04
	219 Move X8, [X19]
	220 Move X1, [X25]
	221 Move X23, X0
	222 NotImplemented "Instruction LDRH not yet implemented."
	223 Compare X9, 0
	224 JumpIfEqual {231}
	225 Move X10, [X8+176]
	226 Add X10, X10, 8
	227 NotImplemented "Instruction LDUR not yet implemented."
	228 NotImplemented "Instruction CMP not yet implemented."
	229 Subtract X9, X9, 1
	230 Add X10, X10, 16
	231 Move X0, X19
	232 Move W2, W31
	233 Call 0x1C5D788
	234 NotImplemented "Instruction LDRSW not yet implemented."
	235 Add X8, X8, X9
	236 Add X0, X8, 312
	237 Move X8, [X0]
	238 Move X3, [X0+8]
	239 Move X0, X19
	240 Move X1, X22
	241 Move X2, X23
	242 NotImplemented "Instruction BLR not yet implemented."
	243 Move TEMP, X0
	244 And TEMP, TEMP, 1
	245 Compare TEMP, 1
	246 JumpIfNotEqual {347}
	247 Move W8, [X21+24]
	248 Move [X31+24], W8
	249 Move X0, [X20+32]
	250 Move W8, [X0+309]
	251 Move TEMP, X8
	252 And TEMP, TEMP, 1
	253 Compare TEMP, 1
	254 JumpIfEqual {256}
	255 Call 0x1C5D684
	256 Move X8, [X0+192]
	257 Add X1, X31, 24
	258 Move X0, [X8+32]
	259 Call 0x1C17E04
	260 Move [X31+8], W26
	261 Move X8, [X20+32]
	262 Move X22, X0
	263 Move W9, [X8+309]
	264 Move TEMP, X9
	265 And TEMP, TEMP, 1
	266 Compare TEMP, 1
	267 JumpIfEqual {271}
	268 Move X0, X8
	269 Call 0x1C5D684
	270 Move X8, X0
	271 Move X8, [X8+192]
	272 Add X1, X31, 8
	273 Move X0, [X8+32]
	274 Call 0x1C17E04
	275 Move X8, [X19]
	276 Move X1, [X25]
	277 Move X23, X0
	278 NotImplemented "Instruction LDRH not yet implemented."
	279 Compare X9, 0
	280 JumpIfEqual {287}
	281 Move X10, [X8+176]
	282 Add X10, X10, 8
	283 NotImplemented "Instruction LDUR not yet implemented."
	284 NotImplemented "Instruction CMP not yet implemented."
	285 Subtract X9, X9, 1
	286 Add X10, X10, 16
	287 Move X0, X19
	288 Move W2, W31
	289 Call 0x1C5D788
	290 NotImplemented "Instruction LDRSW not yet implemented."
	291 Add X8, X8, X9
	292 Add X0, X8, 312
	293 Move X8, [X0]
	294 Move X3, [X0+8]
	295 Move X0, X19
	296 Move X1, X22
	297 Move X2, X23
	298 NotImplemented "Instruction BLR not yet implemented."
	299 Move TEMP, X0
	300 And TEMP, TEMP, 1
	301 Compare TEMP, 1
	302 JumpIfNotEqual {347}
	303 Move W8, [X21+28]
	304 Move [X31+24], W8
	305 Move X0, [X20+32]
	306 Move W8, [X0+309]
	307 Move TEMP, X8
	308 And TEMP, TEMP, 1
	309 Compare TEMP, 1
	310 JumpIfEqual {312}
	311 Call 0x1C5D684
	312 Move X8, [X0+192]
	313 Add X1, X31, 24
	314 Move X0, [X8+40]
	315 Call 0x1C17E04
	316 And W8, W24, 1
	317 Move [X31+8], W8
	318 Move X8, [X20+32]
	319 Move X20, X0
	320 Move W9, [X8+309]
	321 Move TEMP, X9
	322 And TEMP, TEMP, 1
	323 Compare TEMP, 1
	324 JumpIfEqual {328}
	325 Move X0, X8
	326 Call 0x1C5D684
	327 Move X8, X0
	328 Move X8, [X8+192]
	329 Add X1, X31, 8
	330 Move X0, [X8+40]
	331 Call 0x1C17E04
	332 Move X8, [X19]
	333 Move X1, [X25]
	334 Move X21, X0
	335 NotImplemented "Instruction LDRH not yet implemented."
	336 Compare X9, 0
	337 JumpIfEqual {344}
	338 Move X10, [X8+176]
	339 Add X10, X10, 8
	340 NotImplemented "Instruction LDUR not yet implemented."
	341 NotImplemented "Instruction CMP not yet implemented."
	342 Subtract X9, X9, 1
	343 Add X10, X10, 16
	344 Move X0, X19
	345 Move W2, W31
	346 Call 0x1C5D788
	347 Move W0, W31
	348 Move X20, [X31+96]
	349 Move X19, [X31+104]
	350 Move X22, [X31+80]
	351 Move X21, [X31+88]
	352 Move X24, [X31+64]
	353 Move X23, [X31+72]
	354 Move X26, [X31+48]
	355 Move X25, [X31+56]
	356 Move X28, [X31+32]
	357 Move X27, [X31+40]
	358 Move X30, [X31+16]
	359 And W0, W0, 1
	360 Add X31, X31, 112
	361 Return X0
	362 NotImplemented "Instruction LDRSW not yet implemented."
	363 Add X8, X8, X9
	364 Add X0, X8, 312
	365 Move X8, [X0]
	366 Move X3, [X0+8]
	367 Move X0, X19
	368 Move X1, X20
	369 Move X2, X21
	370 NotImplemented "Instruction BLR not yet implemented."
	371 Call 0x1C181E0
	372 Call 0x1C17F20

Method: System.Int32 System.IComparable.CompareTo(System.Object other)

Disassembly:
	0x027D0BEC LDR X0, [X0 + 0x608]
	0x027D0BF0 BL 0x1C16CF4
	0x027D0BF4 MOVZ W8, 0x1
	0x027D0BF8 STRB W8, [X20 + 0x972]
	0x027D0BFC LDR X0, [X22]
	0x027D0C00 MOVZ W1, 0xA
	0x027D0C04 BL 0x1C16D6C
	0x027D0C08 LDR X8, [X19 + 0x20]
	0x027D0C0C MOV X20, X0
	0x027D0C10 LDRB W9, [X8 + 0x135]
	0x027D0C14 TBNZ X9, 0x0, 0x27D0C24
	0x027D0C18 MOV X0, X8
	0x027D0C1C BL 0x1C5C684
	0x027D0C20 MOV X8, X0
	0x027D0C24 LDR X8, [X8 + 0xC0]
	0x027D0C28 MOV X0, X21
	0x027D0C2C LDR X1, [X8 + 0x1B8]
	0x027D0C30 BL 0x33C68E4
	0x027D0C34 CBZ X20, 0x27D0DA8
	0x027D0C38 LDR W8, [X20 + 0x18]
	0x027D0C3C CBZ W8, 0x27D0DA4
	0x027D0C40 CMP W8, 0x1
	0x027D0C44 STR X0, [X20 + 0x20]
	0x027D0C48 B.EQ 0x27D0DA4
	0x027D0C4C ADRP X23, 0x1923000
	0x027D0C50 LDR X23, [X23 + 0x838]
	0x027D0C54 ADD X22, X21, 0x8
	0x027D0C58 LDR X8, [X23]
	0x027D0C5C STR X8, [X20 + 0x28]
	0x027D0C60 LDR X0, [X19 + 0x20]
	0x027D0C64 LDRB W8, [X0 + 0x135]
	0x027D0C68 TBNZ X8, 0x0, 0x27D0C70
	0x027D0C6C BL 0x1C5C684
	0x027D0C70 LDR X8, [X0 + 0xC0]
	0x027D0C74 MOV X0, X22
	0x027D0C78 LDR X1, [X8 + 0x1C0]
	0x027D0C7C BL 0x337B6E0
	0x027D0C80 LDR W8, [X20 + 0x18]
	0x027D0C84 CMP W8, 0x2
	0x027D0C88 B.LS 0x27D0DA4
	0x027D0C8C CMP W8, 0x3
	0x027D0C90 STR X0, [X20 + 0x30]
	0x027D0C94 B.EQ 0x27D0DA4
	0x027D0C98 LDR X8, [X23]
	0x027D0C9C ADD X22, X21, 0x10
	0x027D0CA0 STR X8, [X20 + 0x38]
	0x027D0CA4 LDR X0, [X19 + 0x20]
	0x027D0CA8 LDRB W8, [X0 + 0x135]
	0x027D0CAC TBNZ X8, 0x0, 0x27D0CB4
	0x027D0CB0 BL 0x1C5C684
	0x027D0CB4 LDR X8, [X0 + 0xC0]
	0x027D0CB8 MOV X0, X22
	0x027D0CBC LDR X1, [X8 + 0x1C8]
	0x027D0CC0 BL 0x33C68E4
	0x027D0CC4 LDR W8, [X20 + 0x18]
	0x027D0CC8 CMP W8, 0x4
	0x027D0CCC B.LS 0x27D0DA4
	0x027D0CD0 CMP W8, 0x5
	0x027D0CD4 STR X0, [X20 + 0x40]
	0x027D0CD8 B.EQ 0x27D0DA4
	0x027D0CDC LDR X8, [X23]
	0x027D0CE0 ADD X22, X21, 0x18
	0x027D0CE4 STR X8, [X20 + 0x48]
	0x027D0CE8 LDR X0, [X19 + 0x20]
	0x027D0CEC LDRB W8, [X0 + 0x135]
	0x027D0CF0 TBNZ X8, 0x0, 0x27D0CF8
	0x027D0CF4 BL 0x1C5C684
	0x027D0CF8 LDR X8, [X0 + 0xC0]
	0x027D0CFC MOV X0, X22
	0x027D0D00 LDR X1, [X8 + 0x1D0]
	0x027D0D04 BL 0x337B6E0
	0x027D0D08 LDR W8, [X20 + 0x18]
	0x027D0D0C CMP W8, 0x6
	0x027D0D10 B.LS 0x27D0DA4
	0x027D0D14 CMP W8, 0x7
	0x027D0D18 STR X0, [X20 + 0x50]
	0x027D0D1C B.EQ 0x27D0DA4
	0x027D0D20 LDR X8, [X23]
	0x027D0D24 ADRP X9, 0x1923000
	0x027D0D28 LDR X9, [X9 + 0xB58]
	0x027D0D2C ADD X21, X21, 0x1C
	0x027D0D30 STR X8, [X20 + 0x58]
	0x027D0D34 LDR X0, [X9]
	0x027D0D38 LDR W8, [X0 + 0xE0]
	0x027D0D3C CBNZ W8, 0x27D0D44
	0x027D0D40 BL 0x1C16DFC
	0x027D0D44 LDR X0, [X19 + 0x20]
	0x027D0D48 LDRB W8, [X0 + 0x135]
	0x027D0D4C TBNZ X8, 0x0, 0x27D0D54
	0x027D0D50 BL 0x1C5C684
	0x027D0D54 LDR X8, [X0 + 0xC0]
	0x027D0D58 MOV X0, X21
	0x027D0D5C LDR X1, [X8 + 0x1D8]
	0x027D0D60 BL 0x33176C4
	0x027D0D64 LDR W8, [X20 + 0x18]
	0x027D0D68 CMP W8, 0x8
	0x027D0D6C B.LS 0x27D0DA4

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Compare X1, 0
	007 JumpIfEqual {71}
	008 Move X20, X0
	009 Move X0, [X2+32]
	010 Move X19, X2
	011 Move X21, X1
	012 Move W8, [X0+309]
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {18}
	017 Call 0x1C5D684
	018 Move X8, [X0+192]
	019 Move X0, [X8+8]
	020 Move W8, [X0+309]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {26}
	025 Call 0x1C5D684
	026 Move X8, [X21]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X0, [X19+32]
	029 Move W8, [X0+309]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {35}
	034 Call 0x1C5D684
	035 Move X8, [X0+192]
	036 Move X1, [X8+8]
	037 Move W8, [X1+309]
	038 Move TEMP, X8
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {45}
	042 Move X0, X1
	043 Call 0x1C5D684
	044 Move X1, X0
	045 Move X8, [X21]
	046 Move X9, [X1+64]
	047 Move X0, X21
	048 Move X8, [X8+64]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Call 0x1C17E08
	051 Move V1, [X0]
	052 Move V0, [X0+16]
	053 Move [X31], V1
	054 Move [X31+8], V0
	055 Move X0, [X19+32]
	056 Move W8, [X0+309]
	057 Move TEMP, X8
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfEqual {62}
	061 Call 0x1C5D684
	062 Move X8, [X0+192]
	063 Move V0, [X31]
	064 Move V1, [X31+16]
	065 Add X1, X31, 32
	066 Move X0, X20
	067 Move X2, [X8+224]
	068 Move [X31+32], V0
	069 Move [X31+40], V1
	070 Call 0x27D0D70, X0, X1
	071 Move W0, 1
	072 Move X20, [X31+80]
	073 Move X19, [X31+88]
	074 Move X30, [X31+64]
	075 Move X21, [X31+72]
	076 Add X31, X31, 96
	077 Return X0
	078 Move V1, [X20]
	079 Move V0, [X20+16]
	080 Move [X31+32], V1
	081 Move [X31+40], V0
	082 Move X0, [X19+32]
	083 Call 0x199C99C
	084 Move X8, [X0+192]
	085 Add X1, X31, 32
	086 Move X0, [X8+8]
	087 Call 0x1C17E04
	088 Move X1, X31
	089 Call "il2cpp_vm_object_is_inst", X0
	090 Move X20, X0
	091 Call 0x19913C0
	092 Move X8, [X20]
	093 Move X0, X20
	094 Move X9, [X8+360]
	095 Move X1, [X8+368]
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Move X20, X0
	098 Move X0, 0x194E000
	099 Move X0, [X0+2336]
	100 Call 0x1C17D08
	101 Move X1, X20
	102 Move X2, X31
	103 Call SR.Format, X0, X1
	104 Move X20, X0
	105 Move X0, 0x192C000
	106 Move X0, [X0+1400]
	107 Call 0x1C17D08
	108 Call 0x1C17F10
	109 Move X21, X0
	110 Move X0, 0x194E000
	111 Move X0, [X0+2344]
	112 Call 0x1C17D08
	113 Move X2, X0
	114 Move X0, X21
	115 Move X1, X20
	116 Move X3, X31
	117 Call ArgumentException..ctor, X0, X1, X2
	118 Move X0, X21
	119 Move X1, X19
	120 Call 0x1C17DEC
	121 Call 0x1C181E0

Method: System.Int32 CompareTo(System.ValueTuple`5<T1, T2, T3, T4, T5> other)

Disassembly:
	0x027D0D70 CMP W8, 0x9
	0x027D0D74 STR X0, [X20 + 0x60]
	0x027D0D78 B.EQ 0x27D0DA4
	0x027D0D7C ADRP X8, 0x1924000
	0x027D0D80 LDR X8, [X8 + 0x608]
	0x027D0D84 MOV X0, X20
	0x027D0D88 LDP X22, X21, [X31 + 0x10]
	0x027D0D8C MOV X1, X31
	0x027D0D90 LDR X8, [X8]
	0x027D0D94 STR X8, [X20 + 0x68]
	0x027D0D98 LDP X20, X19, [X31 + 0x20]
	0x027D0D9C LDP X30, X23, [X31], #0x30
	0x027D0DA0 B 0x32278CC
	0x027D0DA4 BL 0x1C16F28
	0x027D0DA8 BL 0x1C16F20
	0x027D0DAC MOVZ W0, 0x5
	0x027D0DB0 RET
	0x027D0DB4 AND W8, W2, 0x1
	0x027D0DB8 AND W9, W3, 0x1
	0x027D0DBC STR X1, [X0]
	0x027D0DC0 STRB W8, [X0 + 0x8]
	0x027D0DC4 STRB W9, [X0 + 0x9]
	0x027D0DC8 STP X4, X5, [X0 + 0x10]
	0x027D0DCC RET
	0x027D0DD0 SUB X31, X31, 0x60
	0x027D0DD4 STP X30, X21, [X31 + 0x40]
	0x027D0DD8 STP X20, X19, [X31 + 0x50]
	0x027D0DDC LDR X8, [X2 + 0x20]
	0x027D0DE0 MOV X20, X2
	0x027D0DE4 MOV X21, X1
	0x027D0DE8 MOV X19, X0
	0x027D0DEC LDRB W9, [X8 + 0x135]
	0x027D0DF0 TBNZ X9, 0x0, 0x27D0E00
	0x027D0DF4 MOV X0, X8
	0x027D0DF8 BL 0x1C5C684
	0x027D0DFC MOV X8, X0
	0x027D0E00 LDR X8, [X8 + 0xC0]
	0x027D0E04 LDR X0, [X8 + 0x8]
	0x027D0E08 LDRB W8, [X0 + 0x135]
	0x027D0E0C TBNZ X8, 0x0, 0x27D0E14
	0x027D0E10 BL 0x1C5C684
	0x027D0E14 CBZ X21, 0x27D0E24
	0x027D0E18 LDR X8, [X21]
	0x027D0E1C CMP X8, X0
	0x027D0E20 B.EQ 0x27D0E2C
	0x027D0E24 MOV W0, W31
	0x027D0E28 B 0x27D0EA8
	0x027D0E2C LDR X0, [X20 + 0x20]
	0x027D0E30 LDRB W8, [X0 + 0x135]
	0x027D0E34 TBNZ X8, 0x0, 0x27D0E3C
	0x027D0E38 BL 0x1C5C684
	0x027D0E3C LDR X8, [X0 + 0xC0]
	0x027D0E40 LDR X1, [X8 + 0x8]
	0x027D0E44 LDRB W8, [X1 + 0x135]
	0x027D0E48 TBNZ X8, 0x0, 0x27D0E58
	0x027D0E4C MOV X0, X1
	0x027D0E50 BL 0x1C5C684
	0x027D0E54 MOV X1, X0
	0x027D0E58 LDR X8, [X21]
	0x027D0E5C LDR X9, [X1 + 0x40]
	0x027D0E60 MOV X0, X21
	0x027D0E64 LDR X8, [X8 + 0x40]
	0x027D0E68 CMP X8, X9
	0x027D0E6C B.NE 0x27D0EBC
	0x027D0E70 BL 0x1C16E08
	0x027D0E74 LDP V1, V0, [X0]
	0x027D0E78 STP V1, V0, [X31]
	0x027D0E7C LDR X0, [X20 + 0x20]
	0x027D0E80 LDRB W8, [X0 + 0x135]
	0x027D0E84 TBNZ X8, 0x0, 0x27D0E8C
	0x027D0E88 BL 0x1C5C684
	0x027D0E8C LDR X8, [X0 + 0xC0]
	0x027D0E90 LDP V0, V1, [X31]
	0x027D0E94 ADD X1, X31, 0x20
	0x027D0E98 MOV X0, X19
	0x027D0E9C LDR X2, [X8 + 0x30]
	0x027D0EA0 STP V0, V1, [X31 + 0x20]
	0x027D0EA4 BL 0x27D0EC0
	0x027D0EA8 LDP X20, X19, [X31 + 0x50]
	0x027D0EAC LDP X30, X21, [X31 + 0x40]
	0x027D0EB0 AND W0, W0, 0x1
	0x027D0EB4 ADD X31, X31, 0x60
	0x027D0EB8 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X21, X2
	007 Move X19, X1
	008 Move X20, X0
	009 Move W9, [X8+309]
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X8
	015 Call 0x1C5D684
	016 Move X8, X0
	017 Move X8, [X8+192]
	018 Move X0, [X8+232]
	019 Call Comparer`1<IntPtr>.get_Default
	020 Compare X0, 0
	021 JumpIfEqual {118}
	022 Move X8, [X0]
	023 Move X2, [X19]
	024 Move X1, [X20]
	025 Move X9, [X8+408]
	026 Move X3, [X8+416]
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Compare W0, 0
	029 JumpIfNotEqual {90}
	030 Move X0, [X21+32]
	031 Move W8, [X0+309]
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {37}
	036 Call 0x1C5D684
	037 Move X8, [X0+192]
	038 Move X0, [X8+264]
	039 Call Comparer`1<Int32>.get_Default
	040 Compare X0, 0
	041 JumpIfEqual {118}
	042 Move X8, [X0]
	043 Move W2, [X19+8]
	044 Move W1, [X20+8]
	045 Move X9, [X8+408]
	046 Move X3, [X8+416]
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Compare W0, 0
	049 JumpIfNotEqual {90}
	050 Move X0, [X21+32]
	051 Move W8, [X0+309]
	052 Move TEMP, X8
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {57}
	056 Call 0x1C5D684
	057 Move X8, [X0+192]
	058 Move X0, [X8+296]
	059 Call Comparer`1<IntPtr>.get_Default
	060 Compare X0, 0
	061 JumpIfEqual {118}
	062 Move X8, [X0]
	063 Move X2, [X19+16]
	064 Move X1, [X20+16]
	065 Move X9, [X8+408]
	066 Move X3, [X8+416]
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Compare W0, 0
	069 JumpIfNotEqual {90}
	070 Move X0, [X21+32]
	071 Move W8, [X0+309]
	072 Move TEMP, X8
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfEqual {77}
	076 Call 0x1C5D684
	077 Move X8, [X0+192]
	078 Move X0, [X8+328]
	079 Call Comparer`1<Int32>.get_Default
	080 Compare X0, 0
	081 JumpIfEqual {118}
	082 Move X8, [X0]
	083 Move W2, [X19+24]
	084 Move W1, [X20+24]
	085 Move X9, [X8+408]
	086 Move X3, [X8+416]
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Compare W0, 0
	089 JumpIfEqual {95}
	090 Move X20, [X31+16]
	091 Move X19, [X31+24]
	092 Move X30, [X31+32]
	093 Move X21, [X31+40]
	094 Return X0
	095 Move X0, [X21+32]
	096 Move W8, [X0+309]
	097 Move TEMP, X8
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfEqual {102}
	101 Call 0x1C5D684
	102 Move X8, [X0+192]
	103 Move X0, [X8+360]
	104 Call Comparer`1<Boolean>.get_Default
	105 Compare X0, 0
	106 JumpIfEqual {118}
	107 Move X8, [X0]
	108 Move W9, [X19+28]
	109 Move W1, [X20+28]
	110 Move X20, [X31+16]
	111 Move X19, [X31+24]
	112 Move X4, [X8+408]
	113 Move X3, [X8+416]
	114 And W2, W9, 1
	115 Move X30, [X31+32]
	116 Move X21, [X31+40]
	117 CallNoReturn X4
	118 Call 0x1C17F20

Method: System.Int32 System.Collections.IStructuralComparable.CompareTo(System.Object other, System.Collections.IComparer comparer)

Disassembly:
	0x027D0EBC BL 0x1C171E0
	0x027D0EC0 STP X30, X21, [X31 - 0x20]!
	0x027D0EC4 STP X20, X19, [X31 + 0x10]
	0x027D0EC8 LDR X8, [X2 + 0x20]
	0x027D0ECC MOV X21, X2
	0x027D0ED0 MOV X19, X1
	0x027D0ED4 MOV X20, X0
	0x027D0ED8 LDRB W9, [X8 + 0x135]
	0x027D0EDC TBNZ X9, 0x0, 0x27D0EEC
	0x027D0EE0 MOV X0, X8
	0x027D0EE4 BL 0x1C5C684
	0x027D0EE8 MOV X8, X0
	0x027D0EEC LDR X8, [X8 + 0xC0]
	0x027D0EF0 LDR X0, [X8 + 0x40]
	0x027D0EF4 BL 0x211B0E8
	0x027D0EF8 CBZ X0, 0x27D1010
	0x027D0EFC LDR X8, [X0]
	0x027D0F00 LDR X2, [X19]
	0x027D0F04 LDR X1, [X20]
	0x027D0F08 LDP X9, X3, [X8 + 0x1B8]
	0x027D0F0C BLR X9
	0x027D0F10 TBZ X0, 0x0, 0x27D1000
	0x027D0F14 LDR X0, [X21 + 0x20]
	0x027D0F18 LDRB W8, [X0 + 0x135]
	0x027D0F1C TBNZ X8, 0x0, 0x27D0F24
	0x027D0F20 BL 0x1C5C684
	0x027D0F24 LDR X8, [X0 + 0xC0]
	0x027D0F28 LDR X0, [X8 + 0x60]
	0x027D0F2C BL 0x21189DC
	0x027D0F30 CBZ X0, 0x27D1010
	0x027D0F34 LDR X8, [X0]
	0x027D0F38 LDRB W9, [X19 + 0x8]
	0x027D0F3C LDRB W1, [X20 + 0x8]
	0x027D0F40 LDP X10, X3, [X8 + 0x1B8]
	0x027D0F44 AND W2, W9, 0x1
	0x027D0F48 BLR X10
	0x027D0F4C TBZ X0, 0x0, 0x27D1000
	0x027D0F50 LDR X0, [X21 + 0x20]
	0x027D0F54 LDRB W8, [X0 + 0x135]
	0x027D0F58 TBNZ X8, 0x0, 0x27D0F60
	0x027D0F5C BL 0x1C5C684
	0x027D0F60 LDR X8, [X0 + 0xC0]
	0x027D0F64 LDR X0, [X8 + 0x80]
	0x027D0F68 BL 0x21189DC
	0x027D0F6C CBZ X0, 0x27D1010
	0x027D0F70 LDR X8, [X0]
	0x027D0F74 LDRB W9, [X19 + 0x9]
	0x027D0F78 LDRB W1, [X20 + 0x9]
	0x027D0F7C LDP X10, X3, [X8 + 0x1B8]
	0x027D0F80 AND W2, W9, 0x1
	0x027D0F84 BLR X10
	0x027D0F88 TBZ X0, 0x0, 0x27D1000
	0x027D0F8C LDR X0, [X21 + 0x20]
	0x027D0F90 LDRB W8, [X0 + 0x135]
	0x027D0F94 TBNZ X8, 0x0, 0x27D0F9C
	0x027D0F98 BL 0x1C5C684
	0x027D0F9C LDR X8, [X0 + 0xC0]
	0x027D0FA0 LDR X0, [X8 + 0xA0]
	0x027D0FA4 BL 0x211B0E8
	0x027D0FA8 CBZ X0, 0x27D1010
	0x027D0FAC LDR X8, [X0]
	0x027D0FB0 LDR X2, [X19 + 0x10]
	0x027D0FB4 LDR X1, [X20 + 0x10]
	0x027D0FB8 LDP X9, X3, [X8 + 0x1B8]
	0x027D0FBC BLR X9
	0x027D0FC0 TBZ X0, 0x0, 0x27D1000
	0x027D0FC4 LDR X0, [X21 + 0x20]
	0x027D0FC8 LDRB W8, [X0 + 0x135]
	0x027D0FCC TBNZ X8, 0x0, 0x27D0FD4
	0x027D0FD0 BL 0x1C5C684
	0x027D0FD4 LDR X8, [X0 + 0xC0]
	0x027D0FD8 LDR X0, [X8 + 0xC0]
	0x027D0FDC BL 0x211B0E8
	0x027D0FE0 CBZ X0, 0x27D1010
	0x027D0FE4 LDR X8, [X0]
	0x027D0FE8 LDR X2, [X19 + 0x18]
	0x027D0FEC LDR X1, [X20 + 0x18]
	0x027D0FF0 LDP X20, X19, [X31 + 0x10]
	0x027D0FF4 LDP X4, X3, [X8 + 0x1B8]
	0x027D0FF8 LDP X30, X21, [X31], #0x20
	0x027D0FFC BR X4
	0x027D1000 LDP X20, X19, [X31 + 0x10]
	0x027D1004 MOV W0, W31
	0x027D1008 LDP X30, X21, [X31], #0x20
	0x027D100C RET
	0x027D1010 BL 0x1C16F20
	0x027D1014 SUB X31, X31, 0x70
	0x027D1018 STR X30, [X31 + 0x10]
	0x027D101C STP X28, X27, [X31 + 0x20]
	0x027D1020 STP X26, X25, [X31 + 0x30]
	0x027D1024 STP X24, X23, [X31 + 0x40]
	0x027D1028 STP X22, X21, [X31 + 0x50]
	0x027D102C STP X20, X19, [X31 + 0x60]
	0x027D1030 ADRP X22, 0x1C09000
	0x027D1034 LDRB W8, [X22 + 0x973]
	0x027D1038 MOV X23, X3
	0x027D103C MOV X19, X2
	0x027D1040 MOV X21, X1
	0x027D1044 MOV X20, X0
	0x027D1048 TBNZ X8, 0x0, 0x27D1060
	0x027D104C ADRP X0, 0x194C000
	0x027D1050 LDR X0, [X0 + 0x900]
	0x027D1054 BL 0x1C16CF4
	0x027D1058 MOVZ W8, 0x1
	0x027D105C STRB W8, [X22 + 0x973]
	0x027D1060 CBZ X21, 0x27D1394
	0x027D1064 LDR X0, [X23 + 0x20]
	0x027D1068 LDRB W8, [X0 + 0x135]
	0x027D106C TBNZ X8, 0x0, 0x27D1074
	0x027D1070 BL 0x1C5C684
	0x027D1074 LDR X8, [X0 + 0xC0]
	0x027D1078 LDR X0, [X8 + 0x8]
	0x027D107C LDRB W8, [X0 + 0x135]
	0x027D1080 TBNZ X8, 0x0, 0x27D1088
	0x027D1084 BL 0x1C5C684
	0x027D1088 LDR X8, [X21]
	0x027D108C CMP X8, X0
	0x027D1090 B.NE 0x27D1394
	0x027D1094 LDR X0, [X23 + 0x20]
	0x027D1098 LDRB W8, [X0 + 0x135]
	0x027D109C TBNZ X8, 0x0, 0x27D10A4
	0x027D10A0 BL 0x1C5C684
	0x027D10A4 LDR X8, [X0 + 0xC0]
	0x027D10A8 LDR X1, [X8 + 0x8]
	0x027D10AC LDRB W8, [X1 + 0x135]
	0x027D10B0 TBNZ X8, 0x0, 0x27D10C0
	0x027D10B4 MOV X0, X1
	0x027D10B8 BL 0x1C5C684
	0x027D10BC MOV X1, X0
	0x027D10C0 LDR X8, [X21]
	0x027D10C4 LDR X9, [X1 + 0x40]
	0x027D10C8 MOV X0, X21
	0x027D10CC LDR X8, [X8 + 0x40]
	0x027D10D0 CMP X8, X9
	0x027D10D4 B.NE 0x27D13E0
	0x027D10D8 BL 0x1C16E08
	0x027D10DC CBZ X19, 0x27D13E4
	0x027D10E0 ADRP X26, 0x194C000
	0x027D10E4 LDR X24, [X0]
	0x027D10E8 LDRB W28, [X0 + 0x8]
	0x027D10EC LDRB W27, [X0 + 0x9]
	0x027D10F0 LDR X8, [X19]
	0x027D10F4 LDP X22, X21, [X0 + 0x10]
	0x027D10F8 LDR X25, [X20]
	0x027D10FC LDR X26, [X26 + 0x900]
	0x027D1100 LDRH W9, [X8 + 0x12E]
	0x027D1104 LDR X1, [X26]
	0x027D1108 CBZ X9, 0x27D112C
	0x027D110C LDR X10, [X8 + 0xB0]
	0x027D1110 ADD X10, X10, 0x8
	0x027D1114 LDUR X11, [X10 - 0x8]
	0x027D1118 CMP X11, X1
	0x027D111C B.EQ 0x27D113C
	0x027D1120 SUBS X9, X9, 0x1
	0x027D1124 ADD X10, X10, 0x10
	0x027D1128 B.NE 0x27D1114
	0x027D112C MOV X0, X19
	0x027D1130 MOV W2, W31
	0x027D1134 BL 0x1C5C788
	0x027D1138 B 0x27D1148
	0x027D113C LDRSW X9, [X10]
	0x027D1140 ADD X8, X8, X9, 0x4, LSL
	0x027D1144 ADD X0, X8, 0x138
	0x027D1148 LDP X8, X3, [X0]
	0x027D114C MOV X0, X19
	0x027D1150 MOV X1, X25
	0x027D1154 MOV X2, X24
	0x027D1158 BLR X8
	0x027D115C TBZ X0, 0x0, 0x27D1394
	0x027D1160 LDRB W8, [X20 + 0x8]
	0x027D1164 STRB W8, [X31 + 0x1C]
	0x027D1168 LDR X0, [X23 + 0x20]
	0x027D116C LDRB W8, [X0 + 0x135]
	0x027D1170 TBNZ X8, 0x0, 0x27D1178
	0x027D1174 BL 0x1C5C684
	0x027D1178 LDR X8, [X0 + 0xC0]
	0x027D117C ADD X1, X31, 0x1C
	0x027D1180 LDR X0, [X8 + 0x10]
	0x027D1184 BL 0x1C16E04
	0x027D1188 AND W8, W28, 0x1
	0x027D118C STRB W8, [X31 + 0x18]
	0x027D1190 LDR X8, [X23 + 0x20]
	0x027D1194 MOV X24, X0
	0x027D1198 LDRB W9, [X8 + 0x135]
	0x027D119C TBNZ X9, 0x0, 0x27D11AC
	0x027D11A0 MOV X0, X8
	0x027D11A4 BL 0x1C5C684
	0x027D11A8 MOV X8, X0
	0x027D11AC LDR X8, [X8 + 0xC0]
	0x027D11B0 ADD X1, X31, 0x18
	0x027D11B4 LDR X0, [X8 + 0x10]
	0x027D11B8 BL 0x1C16E04
	0x027D11BC LDR X8, [X19]
	0x027D11C0 LDR X1, [X26]
	0x027D11C4 MOV X25, X0
	0x027D11C8 LDRH W9, [X8 + 0x12E]
	0x027D11CC CBZ X9, 0x27D11F0
	0x027D11D0 LDR X10, [X8 + 0xB0]
	0x027D11D4 ADD X10, X10, 0x8
	0x027D11D8 LDUR X11, [X10 - 0x8]
	0x027D11DC CMP X11, X1
	0x027D11E0 B.EQ 0x27D1200
	0x027D11E4 SUBS X9, X9, 0x1
	0x027D11E8 ADD X10, X10, 0x10
	0x027D11EC B.NE 0x27D11D8
	0x027D11F0 MOV X0, X19
	0x027D11F4 MOV W2, W31
	0x027D11F8 BL 0x1C5C788
	0x027D11FC B 0x27D120C
	0x027D1200 LDRSW X9, [X10]
	0x027D1204 ADD X8, X8, X9, 0x4, LSL
	0x027D1208 ADD X0, X8, 0x138
	0x027D120C LDP X8, X3, [X0]
	0x027D1210 MOV X0, X19
	0x027D1214 MOV X1, X24
	0x027D1218 MOV X2, X25
	0x027D121C BLR X8
	0x027D1220 TBZ X0, 0x0, 0x27D1394
	0x027D1224 LDRB W8, [X20 + 0x9]
	0x027D1228 STRB W8, [X31 + 0xC]
	0x027D122C LDR X0, [X23 + 0x20]
	0x027D1230 LDRB W8, [X0 + 0x135]
	0x027D1234 TBNZ X8, 0x0, 0x27D123C
	0x027D1238 BL 0x1C5C684
	0x027D123C LDR X8, [X0 + 0xC0]
	0x027D1240 ADD X1, X31, 0xC
	0x027D1244 LDR X0, [X8 + 0x18]
	0x027D1248 BL 0x1C16E04
	0x027D124C AND W8, W27, 0x1
	0x027D1250 STRB W8, [X31 + 0x8]
	0x027D1254 LDR X8, [X23 + 0x20]
	0x027D1258 MOV X23, X0
	0x027D125C LDRB W9, [X8 + 0x135]
	0x027D1260 TBNZ X9, 0x0, 0x27D1270
	0x027D1264 MOV X0, X8
	0x027D1268 BL 0x1C5C684
	0x027D126C MOV X8, X0
	0x027D1270 LDR X8, [X8 + 0xC0]
	0x027D1274 ADD X1, X31, 0x8
	0x027D1278 LDR X0, [X8 + 0x18]
	0x027D127C BL 0x1C16E04
	0x027D1280 LDR X8, [X19]
	0x027D1284 LDR X1, [X26]
	0x027D1288 MOV X24, X0
	0x027D128C LDRH W9, [X8 + 0x12E]
	0x027D1290 CBZ X9, 0x27D12B4
	0x027D1294 LDR X10, [X8 + 0xB0]
	0x027D1298 ADD X10, X10, 0x8
	0x027D129C LDUR X11, [X10 - 0x8]
	0x027D12A0 CMP X11, X1
	0x027D12A4 B.EQ 0x27D12C4
	0x027D12A8 SUBS X9, X9, 0x1
	0x027D12AC ADD X10, X10, 0x10
	0x027D12B0 B.NE 0x27D129C
	0x027D12B4 MOV X0, X19
	0x027D12B8 MOV W2, W31
	0x027D12BC BL 0x1C5C788
	0x027D12C0 B 0x27D12D0
	0x027D12C4 LDRSW X9, [X10]
	0x027D12C8 ADD X8, X8, X9, 0x4, LSL
	0x027D12CC ADD X0, X8, 0x138
	0x027D12D0 LDP X8, X3, [X0]
	0x027D12D4 MOV X0, X19
	0x027D12D8 MOV X1, X23
	0x027D12DC MOV X2, X24
	0x027D12E0 BLR X8
	0x027D12E4 TBZ X0, 0x0, 0x27D1394
	0x027D12E8 LDR X8, [X19]
	0x027D12EC LDR X23, [X20 + 0x10]
	0x027D12F0 LDR X1, [X26]
	0x027D12F4 LDRH W9, [X8 + 0x12E]
	0x027D12F8 CBZ X9, 0x27D131C
	0x027D12FC LDR X10, [X8 + 0xB0]
	0x027D1300 ADD X10, X10, 0x8
	0x027D1304 LDUR X11, [X10 - 0x8]
	0x027D1308 CMP X11, X1
	0x027D130C B.EQ 0x27D132C
	0x027D1310 SUBS X9, X9, 0x1
	0x027D1314 ADD X10, X10, 0x10
	0x027D1318 B.NE 0x27D1304
	0x027D131C MOV X0, X19
	0x027D1320 MOV W2, W31
	0x027D1324 BL 0x1C5C788
	0x027D1328 B 0x27D1338
	0x027D132C LDRSW X9, [X10]
	0x027D1330 ADD X8, X8, X9, 0x4, LSL
	0x027D1334 ADD X0, X8, 0x138
	0x027D1338 LDP X8, X3, [X0]
	0x027D133C MOV X0, X19
	0x027D1340 MOV X1, X23
	0x027D1344 MOV X2, X22
	0x027D1348 BLR X8
	0x027D134C TBZ X0, 0x0, 0x27D1394
	0x027D1350 LDR X8, [X19]
	0x027D1354 LDR X20, [X20 + 0x18]
	0x027D1358 LDR X1, [X26]
	0x027D135C LDRH W9, [X8 + 0x12E]
	0x027D1360 CBZ X9, 0x27D1384
	0x027D1364 LDR X10, [X8 + 0xB0]
	0x027D1368 ADD X10, X10, 0x8
	0x027D136C LDUR X11, [X10 - 0x8]
	0x027D1370 CMP X11, X1
	0x027D1374 B.EQ 0x27D13BC
	0x027D1378 SUBS X9, X9, 0x1
	0x027D137C ADD X10, X10, 0x10
	0x027D1380 B.NE 0x27D136C
	0x027D1384 MOV X0, X19
	0x027D1388 MOV W2, W31
	0x027D138C BL 0x1C5C788
	0x027D1390 B 0x27D13C8
	0x027D1394 MOV W0, W31
	0x027D1398 LDP X20, X19, [X31 + 0x60]
	0x027D139C LDP X22, X21, [X31 + 0x50]
	0x027D13A0 LDP X24, X23, [X31 + 0x40]
	0x027D13A4 LDP X26, X25, [X31 + 0x30]
	0x027D13A8 LDP X28, X27, [X31 + 0x20]
	0x027D13AC LDR X30, [X31 + 0x10]
	0x027D13B0 AND W0, W0, 0x1
	0x027D13B4 ADD X31, X31, 0x70
	0x027D13B8 RET
	0x027D13BC LDRSW X9, [X10]
	0x027D13C0 ADD X8, X8, X9, 0x4, LSL
	0x027D13C4 ADD X0, X8, 0x138
	0x027D13C8 LDP X8, X3, [X0]
	0x027D13CC MOV X0, X19
	0x027D13D0 MOV X1, X20
	0x027D13D4 MOV X2, X21
	0x027D13D8 BLR X8
	0x027D13DC B 0x27D1398
	0x027D13E0 BL 0x1C171E0
	0x027D13E4 BL 0x1C16F20
	0x027D13E8 SUB X31, X31, 0x60
	0x027D13EC STP X30, X21, [X31 + 0x40]
	0x027D13F0 STP X20, X19, [X31 + 0x50]
	0x027D13F4 CBZ X1, 0x27D14B4
	0x027D13F8 MOV X20, X0
	0x027D13FC LDR X0, [X2 + 0x20]
	0x027D1400 MOV X19, X2
	0x027D1404 MOV X21, X1
	0x027D1408 LDRB W8, [X0 + 0x135]
	0x027D140C TBNZ X8, 0x0, 0x27D1414
	0x027D1410 BL 0x1C5C684
	0x027D1414 LDR X8, [X0 + 0xC0]
	0x027D1418 LDR X0, [X8 + 0x8]
	0x027D141C LDRB W8, [X0 + 0x135]
	0x027D1420 TBNZ X8, 0x0, 0x27D1428
	0x027D1424 BL 0x1C5C684
	0x027D1428 LDR X8, [X21]
	0x027D142C CMP X8, X0

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X30
	003 Move [X31+48], X28
	004 Move [X31+56], X27
	005 Move [X31+64], X26
	006 Move [X31+72], X25
	007 Move [X31+80], X24
	008 Move [X31+88], X23
	009 Move [X31+96], X22
	010 Move [X31+104], X21
	011 Move [X31+112], X20
	012 Move [X31+120], X19
	013 Move X23, 0x1C0B000
	014 Move W8, [X23+2414]
	015 Move X20, X3
	016 Move X19, X2
	017 Move X22, X1
	018 Move X21, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0x194E000
	024 Move X0, [X0+2328]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X23+2414], W8
	028 Compare X22, 0
	029 JumpIfEqual {122}
	030 Move X0, [X20+32]
	031 Move W8, [X0+309]
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {37}
	036 Call 0x1C5D684
	037 Move X8, [X0+192]
	038 Move X0, [X8+8]
	039 Move W8, [X0+309]
	040 Move TEMP, X8
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {45}
	044 Call 0x1C5D684
	045 Move X8, [X22]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X0, [X20+32]
	048 Move W8, [X0+309]
	049 Move TEMP, X8
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {54}
	053 Call 0x1C5D684
	054 Move X8, [X0+192]
	055 Move X1, [X8+8]
	056 Move W8, [X1+309]
	057 Move TEMP, X8
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfEqual {64}
	061 Move X0, X1
	062 Call 0x1C5D684
	063 Move X1, X0
	064 Move X8, [X22]
	065 Move X9, [X1+64]
	066 Move X0, X22
	067 Move X8, [X8+64]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Call 0x1C17E08
	070 Move X8, [X21]
	071 Move X22, [X0]
	072 Move W28, [X0+8]
	073 Move X27, [X0+16]
	074 Move W26, [X0+24]
	075 Move W24, [X0+28]
	076 Move [X31], X8
	077 Move X0, [X20+32]
	078 Move W8, [X0+309]
	079 Move TEMP, X8
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfEqual {84}
	083 Call 0x1C5D684
	084 Move X8, [X0+192]
	085 Add X1, X31, 0
	086 Move X0, [X8]
	087 Call 0x1C17E04
	088 Move [X31+40], X22
	089 Move X8, [X20+32]
	090 Move X22, X0
	091 Move W9, [X8+309]
	092 Move TEMP, X9
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfEqual {99}
	096 Move X0, X8
	097 Call 0x1C5D684
	098 Move X8, X0
	099 Move X8, [X8+192]
	100 Add X1, X31, 40
	101 Move X0, [X8]
	102 Call 0x1C17E04
	103 Compare X19, 0
	104 JumpIfEqual {406}
	105 Move X25, 0x194E000
	106 Move X8, [X19]
	107 Move X25, [X25+2328]
	108 Move X23, X0
	109 NotImplemented "Instruction LDRH not yet implemented."
	110 Move X1, [X25]
	111 Compare X9, 0
	112 JumpIfEqual {119}
	113 Move X10, [X8+176]
	114 Add X10, X10, 8
	115 NotImplemented "Instruction LDUR not yet implemented."
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Subtract X9, X9, 1
	118 Add X10, X10, 16
	119 Move X0, X19
	120 Move W2, W31
	121 Call 0x1C5D788
	122 Move W0, 1
	123 NotImplemented "Instruction LDRSW not yet implemented."
	124 Add X8, X8, X9
	125 Add X0, X8, 312
	126 Move X8, [X0]
	127 Move X3, [X0+8]
	128 Move X0, X19
	129 Move X1, X22
	130 Move X2, X23
	131 NotImplemented "Instruction BLR not yet implemented."
	132 Compare W0, 0
	133 JumpIfNotEqual {349}
	134 Move W8, [X21+8]
	135 Move [X31], W8
	136 Move X0, [X20+32]
	137 Move W8, [X0+309]
	138 Move TEMP, X8
	139 And TEMP, TEMP, 1
	140 Compare TEMP, 1
	141 JumpIfEqual {143}
	142 Call 0x1C5D684
	143 Move X8, [X0+192]
	144 Add X1, X31, 0
	145 Move X0, [X8+16]
	146 Call 0x1C17E04
	147 Move [X31+40], W28
	148 Move X8, [X20+32]
	149 Move X22, X0
	150 Move W9, [X8+309]
	151 Move TEMP, X9
	152 And TEMP, TEMP, 1
	153 Compare TEMP, 1
	154 JumpIfEqual {158}
	155 Move X0, X8
	156 Call 0x1C5D684
	157 Move X8, X0
	158 Move X8, [X8+192]
	159 Add X1, X31, 40
	160 Move X0, [X8+16]
	161 Call 0x1C17E04
	162 Move X8, [X19]
	163 Move X1, [X25]
	164 Move X23, X0
	165 NotImplemented "Instruction LDRH not yet implemented."
	166 Compare X9, 0
	167 JumpIfEqual {174}
	168 Move X10, [X8+176]
	169 Add X10, X10, 8
	170 NotImplemented "Instruction LDUR not yet implemented."
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Subtract X9, X9, 1
	173 Add X10, X10, 16
	174 Move X0, X19
	175 Move W2, W31
	176 Call 0x1C5D788
	177 NotImplemented "Instruction LDRSW not yet implemented."
	178 Add X8, X8, X9
	179 Add X0, X8, 312
	180 Move X8, [X0]
	181 Move X3, [X0+8]
	182 Move X0, X19
	183 Move X1, X22
	184 Move X2, X23
	185 NotImplemented "Instruction BLR not yet implemented."
	186 Compare W0, 0
	187 JumpIfNotEqual {349}
	188 Move X8, [X21+16]
	189 Move [X31], X8
	190 Move X0, [X20+32]
	191 Move W8, [X0+309]
	192 Move TEMP, X8
	193 And TEMP, TEMP, 1
	194 Compare TEMP, 1
	195 JumpIfEqual {197}
	196 Call 0x1C5D684
	197 Move X8, [X0+192]
	198 Add X1, X31, 0
	199 Move X0, [X8+24]
	200 Call 0x1C17E04
	201 Move [X31+40], X27
	202 Move X8, [X20+32]
	203 Move X22, X0
	204 Move W9, [X8+309]
	205 Move TEMP, X9
	206 And TEMP, TEMP, 1
	207 Compare TEMP, 1
	208 JumpIfEqual {212}
	209 Move X0, X8
	210 Call 0x1C5D684
	211 Move X8, X0
	212 Move X8, [X8+192]
	213 Add X1, X31, 40
	214 Move X0, [X8+24]
	215 Call 0x1C17E04
	216 Move X8, [X19]
	217 Move X1, [X25]
	218 Move X23, X0
	219 NotImplemented "Instruction LDRH not yet implemented."
	220 Compare X9, 0
	221 JumpIfEqual {228}
	222 Move X10, [X8+176]
	223 Add X10, X10, 8
	224 NotImplemented "Instruction LDUR not yet implemented."
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Subtract X9, X9, 1
	227 Add X10, X10, 16
	228 Move X0, X19
	229 Move W2, W31
	230 Call 0x1C5D788
	231 NotImplemented "Instruction LDRSW not yet implemented."
	232 Add X8, X8, X9
	233 Add X0, X8, 312
	234 Move X8, [X0]
	235 Move X3, [X0+8]
	236 Move X0, X19
	237 Move X1, X22
	238 Move X2, X23
	239 NotImplemented "Instruction BLR not yet implemented."
	240 Compare W0, 0
	241 JumpIfNotEqual {349}
	242 Move W8, [X21+24]
	243 Move [X31], W8
	244 Move X0, [X20+32]
	245 Move W8, [X0+309]
	246 Move TEMP, X8
	247 And TEMP, TEMP, 1
	248 Compare TEMP, 1
	249 JumpIfEqual {251}
	250 Call 0x1C5D684
	251 Move X8, [X0+192]
	252 Add X1, X31, 0
	253 Move X0, [X8+32]
	254 Call 0x1C17E04
	255 Move [X31+40], W26
	256 Move X8, [X20+32]
	257 Move X22, X0
	258 Move W9, [X8+309]
	259 Move TEMP, X9
	260 And TEMP, TEMP, 1
	261 Compare TEMP, 1
	262 JumpIfEqual {266}
	263 Move X0, X8
	264 Call 0x1C5D684
	265 Move X8, X0
	266 Move X8, [X8+192]
	267 Add X1, X31, 40
	268 Move X0, [X8+32]
	269 Call 0x1C17E04
	270 Move X8, [X19]
	271 Move X1, [X25]
	272 Move X23, X0
	273 NotImplemented "Instruction LDRH not yet implemented."
	274 Compare X9, 0
	275 JumpIfEqual {282}
	276 Move X10, [X8+176]
	277 Add X10, X10, 8
	278 NotImplemented "Instruction LDUR not yet implemented."
	279 NotImplemented "Instruction CMP not yet implemented."
	280 Subtract X9, X9, 1
	281 Add X10, X10, 16
	282 Move X0, X19
	283 Move W2, W31
	284 Call 0x1C5D788
	285 NotImplemented "Instruction LDRSW not yet implemented."
	286 Add X8, X8, X9
	287 Add X0, X8, 312
	288 Move X8, [X0]
	289 Move X3, [X0+8]
	290 Move X0, X19
	291 Move X1, X22
	292 Move X2, X23
	293 NotImplemented "Instruction BLR not yet implemented."
	294 Compare W0, 0
	295 JumpIfNotEqual {349}
	296 Move W8, [X21+28]
	297 Move [X31], W8
	298 Move X0, [X20+32]
	299 Move W8, [X0+309]
	300 Move TEMP, X8
	301 And TEMP, TEMP, 1
	302 Compare TEMP, 1
	303 JumpIfEqual {305}
	304 Call 0x1C5D684
	305 Move X8, [X0+192]
	306 Add X1, X31, 0
	307 Move X0, [X8+40]
	308 Call 0x1C17E04
	309 And W8, W24, 1
	310 Move [X31+40], W8
	311 Move X8, [X20+32]
	312 Move X20, X0
	313 Move W9, [X8+309]
	314 Move TEMP, X9
	315 And TEMP, TEMP, 1
	316 Compare TEMP, 1
	317 JumpIfEqual {321}
	318 Move X0, X8
	319 Call 0x1C5D684
	320 Move X8, X0
	321 Move X8, [X8+192]
	322 Add X1, X31, 40
	323 Move X0, [X8+40]
	324 Call 0x1C17E04
	325 Move X8, [X19]
	326 Move X1, [X25]
	327 Move X21, X0
	328 NotImplemented "Instruction LDRH not yet implemented."
	329 Compare X9, 0
	330 JumpIfEqual {337}
	331 Move X10, [X8+176]
	332 Add X10, X10, 8
	333 NotImplemented "Instruction LDUR not yet implemented."
	334 NotImplemented "Instruction CMP not yet implemented."
	335 Subtract X9, X9, 1
	336 Add X10, X10, 16
	337 Move X0, X19
	338 Move W2, W31
	339 Call 0x1C5D788
	340 NotImplemented "Instruction LDRSW not yet implemented."
	341 Add X8, X8, X9
	342 Add X0, X8, 312
	343 Move X8, [X0]
	344 Move X3, [X0+8]
	345 Move X0, X19
	346 Move X1, X20
	347 Move X2, X21
	348 NotImplemented "Instruction BLR not yet implemented."
	349 Move X20, [X31+112]
	350 Move X19, [X31+120]
	351 Move X22, [X31+96]
	352 Move X21, [X31+104]
	353 Move X24, [X31+80]
	354 Move X23, [X31+88]
	355 Move X26, [X31+64]
	356 Move X25, [X31+72]
	357 Move X28, [X31+48]
	358 Move X27, [X31+56]
	359 Move X30, [X31+32]
	360 Add X31, X31, 128
	361 Return X0
	362 Move V1, [X21]
	363 Move V0, [X21+16]
	364 Move [X31], V1
	365 Move [X31+8], V0
	366 Move X0, [X20+32]
	367 Call 0x199C99C
	368 Move X8, [X0+192]
	369 Add X1, X31, 0
	370 Move X0, [X8+8]
	371 Call 0x1C17E04
	372 Move X1, X31
	373 Call "il2cpp_vm_object_is_inst", X0
	374 Move X19, X0
	375 Call 0x19913C0
	376 Move X8, [X19]
	377 Move X0, X19
	378 Move X9, [X8+360]
	379 Move X1, [X8+368]
	380 NotImplemented "Instruction BLR not yet implemented."
	381 Move X19, X0
	382 Move X0, 0x194D000
	383 Move X0, [X0+2336]
	384 Call 0x1C17D08
	385 Move X1, X19
	386 Move X2, X31
	387 Call SR.Format, X0, X1
	388 Move X19, X0
	389 Move X0, 0x192B000
	390 Move X0, [X0+1400]
	391 Call 0x1C17D08
	392 Call 0x1C17F10
	393 Move X21, X0
	394 Move X0, 0x194D000
	395 Move X0, [X0+2344]
	396 Call 0x1C17D08
	397 Move X2, X0
	398 Move X0, X21
	399 Move X1, X19
	400 Move X3, X31
	401 Call ArgumentException..ctor, X0, X1, X2
	402 Move X0, X21
	403 Move X1, X20
	404 Call 0x1C17DEC
	405 Call 0x1C181E0
	406 Call 0x1C17F20

Method: System.Int32 GetHashCode()

Disassembly:
	0x027D1430 B.NE 0x27D14C8
	0x027D1434 LDR X0, [X19 + 0x20]
	0x027D1438 LDRB W8, [X0 + 0x135]
	0x027D143C TBNZ X8, 0x0, 0x27D1444
	0x027D1440 BL 0x1C5C684
	0x027D1444 LDR X8, [X0 + 0xC0]
	0x027D1448 LDR X1, [X8 + 0x8]
	0x027D144C LDRB W8, [X1 + 0x135]
	0x027D1450 TBNZ X8, 0x0, 0x27D1460
	0x027D1454 MOV X0, X1
	0x027D1458 BL 0x1C5C684
	0x027D145C MOV X1, X0
	0x027D1460 LDR X8, [X21]
	0x027D1464 LDR X9, [X1 + 0x40]
	0x027D1468 MOV X0, X21
	0x027D146C LDR X8, [X8 + 0x40]
	0x027D1470 CMP X8, X9
	0x027D1474 B.NE 0x27D1568
	0x027D1478 BL 0x1C16E08
	0x027D147C LDP V1, V0, [X0]
	0x027D1480 STP V1, V0, [X31]
	0x027D1484 LDR X0, [X19 + 0x20]
	0x027D1488 LDRB W8, [X0 + 0x135]
	0x027D148C TBNZ X8, 0x0, 0x27D1494
	0x027D1490 BL 0x1C5C684
	0x027D1494 LDR X8, [X0 + 0xC0]
	0x027D1498 LDP V0, V1, [X31]
	0x027D149C ADD X1, X31, 0x20
	0x027D14A0 MOV X0, X20
	0x027D14A4 LDR X2, [X8 + 0xE0]
	0x027D14A8 STP V0, V1, [X31 + 0x20]
	0x027D14AC BL 0x27D156C
	0x027D14B0 B 0x27D14B8
	0x027D14B4 MOVZ W0, 0x1
	0x027D14B8 LDP X20, X19, [X31 + 0x50]
	0x027D14BC LDP X30, X21, [X31 + 0x40]
	0x027D14C0 ADD X31, X31, 0x60
	0x027D14C4 RET
	0x027D14C8 LDP V1, V0, [X20]
	0x027D14CC STP V1, V0, [X31 + 0x20]
	0x027D14D0 LDR X0, [X19 + 0x20]
	0x027D14D4 BL 0x199B99C
	0x027D14D8 LDR X8, [X0 + 0xC0]
	0x027D14DC ADD X1, X31, 0x20
	0x027D14E0 LDR X0, [X8 + 0x8]
	0x027D14E4 BL 0x1C16E04
	0x027D14E8 MOV X1, X31
	0x027D14EC BL 0x33BE520
	0x027D14F0 MOV X20, X0
	0x027D14F4 BL 0x19903C0
	0x027D14F8 LDR X8, [X20]
	0x027D14FC MOV X0, X20
	0x027D1500 LDP X9, X1, [X8 + 0x168]
	0x027D1504 BLR X9
	0x027D1508 MOV X20, X0
	0x027D150C ADRP X0, 0x194C000
	0x027D1510 LDR X0, [X0 + 0x920]
	0x027D1514 BL 0x1C16D08
	0x027D1518 MOV X1, X20
	0x027D151C MOV X2, X31
	0x027D1520 BL 0x32094D4
	0x027D1524 MOV X20, X0
	0x027D1528 ADRP X0, 0x192A000
	0x027D152C LDR X0, [X0 + 0x578]
	0x027D1530 BL 0x1C16D08
	0x027D1534 BL 0x1C16F10
	0x027D1538 MOV X21, X0
	0x027D153C ADRP X0, 0x194C000
	0x027D1540 LDR X0, [X0 + 0x928]
	0x027D1544 BL 0x1C16D08
	0x027D1548 MOV X2, X0
	0x027D154C MOV X0, X21
	0x027D1550 MOV X1, X20
	0x027D1554 MOV X3, X31
	0x027D1558 BL 0x330E16C
	0x027D155C MOV X0, X21
	0x027D1560 MOV X1, X19
	0x027D1564 BL 0x1C16DEC
	0x027D1568 BL 0x1C171E0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x1C0A000
	010 Move W8, [X21+2415]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x1923000
	018 Move X0, [X0+2904]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2415], W8
	022 Move X0, [X20+32]
	023 Move W8, [X0+309]
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {29}
	028 Call 0x1C5D684
	029 Move X8, [X0+192]
	030 Move X0, X19
	031 Move X1, [X8+392]
	032 Call IntPtr.GetHashCode, X0
	033 Move W21, W0
	034 Move X0, [X20+32]
	035 Add X22, X19, 8
	036 Move W8, [X0+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {42}
	041 Call 0x1C5D684
	042 Move X8, [X0+192]
	043 Move X0, X22
	044 Move X1, [X8+400]
	045 Call Int32.GetHashCode, X0
	046 Move W22, W0
	047 Move X0, [X20+32]
	048 Add X23, X19, 16
	049 Move W8, [X0+309]
	050 Move TEMP, X8
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {55}
	054 Call 0x1C5D684
	055 Move X8, [X0+192]
	056 Move X25, 0x1923000
	057 Move X0, X23
	058 Move X1, [X8+408]
	059 Move X25, [X25+2904]
	060 Call IntPtr.GetHashCode, X0
	061 Move W23, W0
	062 Move X0, [X20+32]
	063 Add X24, X19, 24
	064 Move W8, [X0+309]
	065 Move TEMP, X8
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfEqual {70}
	069 Call 0x1C5D684
	070 Move X8, [X0+192]
	071 Move X0, X24
	072 Move X1, [X8+416]
	073 Call Int32.GetHashCode, X0
	074 Move X8, [X25]
	075 Move W24, W0
	076 Move W9, [X8+224]
	077 Compare W9, 0
	078 JumpIfNotEqual {81}
	079 Move X0, X8
	080 Call 0x1C17DFC
	081 Move X0, [X20+32]
	082 Move W8, [X0+309]
	083 Move TEMP, X8
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfEqual {88}
	087 Call 0x1C5D684
	088 Move X8, [X0+192]
	089 Add X0, X19, 28
	090 Move X1, [X8+424]
	091 Call Boolean.GetHashCode, X0
	092 Move W4, W0
	093 Move W0, W21
	094 Move W1, W22
	095 Move W2, W23
	096 Move W3, W24
	097 Move X20, [X31+48]
	098 Move X19, [X31+56]
	099 Move X22, [X31+32]
	100 Move X21, [X31+40]
	101 Move X24, [X31+16]
	102 Move X23, [X31+24]
	103 Move X5, X31
	104 Move X30, [X31+64]
	105 Move X25, [X31+72]
	106 Call ValueTuple.CombineHashCodes, X0, X1, X2, X3, X4
	107 Return X0

Method: System.Int32 System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer comparer)

Disassembly:
	0x027D156C STP X30, X21, [X31 - 0x20]!
	0x027D1570 STP X20, X19, [X31 + 0x10]
	0x027D1574 LDR X8, [X2 + 0x20]
	0x027D1578 MOV X21, X2
	0x027D157C MOV X19, X1
	0x027D1580 MOV X20, X0
	0x027D1584 LDRB W9, [X8 + 0x135]
	0x027D1588 TBNZ X9, 0x0, 0x27D1598
	0x027D158C MOV X0, X8
	0x027D1590 BL 0x1C5C684
	0x027D1594 MOV X8, X0
	0x027D1598 LDR X8, [X8 + 0xC0]
	0x027D159C LDR X0, [X8 + 0xE8]
	0x027D15A0 BL 0x29286B0
	0x027D15A4 CBZ X0, 0x27D16B8
	0x027D15A8 LDR X8, [X0]
	0x027D15AC LDR X2, [X19]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X2+32]
	005 Move X19, X1
	006 Move X20, X0
	007 Move W9, [X8+309]
	008 Move TEMP, X9
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {15}
	012 Move X0, X8
	013 Call 0x1C5D684
	014 Move X8, X0
	015 Move X8, [X8+192]
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X2, [X8+432]
	021 Move X30, [X31+32]

Method: System.Int32 GetHashCodeCore(System.Collections.IEqualityComparer comparer)

Disassembly:
	0x027D15B0 LDR X1, [X20]
	0x027D15B4 LDP X9, X3, [X8 + 0x198]
	0x027D15B8 BLR X9
	0x027D15BC CBNZ W0, 0x27D1670
	0x027D15C0 LDR X0, [X21 + 0x20]
	0x027D15C4 LDRB W8, [X0 + 0x135]
	0x027D15C8 TBNZ X8, 0x0, 0x27D15D0
	0x027D15CC BL 0x1C5C684
	0x027D15D0 LDR X8, [X0 + 0xC0]
	0x027D15D4 LDR X0, [X8 + 0x108]
	0x027D15D8 BL 0x2911F10
	0x027D15DC CBZ X0, 0x27D16B8
	0x027D15E0 LDR X8, [X0]
	0x027D15E4 LDRB W9, [X19 + 0x8]
	0x027D15E8 LDRB W1, [X20 + 0x8]
	0x027D15EC LDP X10, X3, [X8 + 0x198]
	0x027D15F0 AND W2, W9, 0x1
	0x027D15F4 BLR X10
	0x027D15F8 CBNZ W0, 0x27D1670
	0x027D15FC LDR X0, [X21 + 0x20]
	0x027D1600 LDRB W8, [X0 + 0x135]
	0x027D1604 TBNZ X8, 0x0, 0x27D160C
	0x027D1608 BL 0x1C5C684
	0x027D160C LDR X8, [X0 + 0xC0]
	0x027D1610 LDR X0, [X8 + 0x128]
	0x027D1614 BL 0x2911F10
	0x027D1618 CBZ X0, 0x27D16B8
	0x027D161C LDR X8, [X0]
	0x027D1620 LDRB W9, [X19 + 0x9]
	0x027D1624 LDRB W1, [X20 + 0x9]
	0x027D1628 LDP X10, X3, [X8 + 0x198]
	0x027D162C AND W2, W9, 0x1
	0x027D1630 BLR X10
	0x027D1634 CBNZ W0, 0x27D1670
	0x027D1638 LDR X0, [X21 + 0x20]
	0x027D163C LDRB W8, [X0 + 0x135]
	0x027D1640 TBNZ X8, 0x0, 0x27D1648
	0x027D1644 BL 0x1C5C684
	0x027D1648 LDR X8, [X0 + 0xC0]
	0x027D164C LDR X0, [X8 + 0x148]
	0x027D1650 BL 0x29286B0
	0x027D1654 CBZ X0, 0x27D16B8
	0x027D1658 LDR X8, [X0]
	0x027D165C LDR X2, [X19 + 0x10]
	0x027D1660 LDR X1, [X20 + 0x10]
	0x027D1664 LDP X9, X3, [X8 + 0x198]
	0x027D1668 BLR X9
	0x027D166C CBZ W0, 0x27D167C
	0x027D1670 LDP X20, X19, [X31 + 0x10]
	0x027D1674 LDP X30, X21, [X31], #0x20
	0x027D1678 RET
	0x027D167C LDR X0, [X21 + 0x20]
	0x027D1680 LDRB W8, [X0 + 0x135]
	0x027D1684 TBNZ X8, 0x0, 0x27D168C
	0x027D1688 BL 0x1C5C684
	0x027D168C LDR X8, [X0 + 0xC0]
	0x027D1690 LDR X0, [X8 + 0x168]
	0x027D1694 BL 0x29286B0
	0x027D1698 CBZ X0, 0x27D16B8
	0x027D169C LDR X8, [X0]
	0x027D16A0 LDR X2, [X19 + 0x18]
	0x027D16A4 LDR X1, [X20 + 0x18]
	0x027D16A8 LDP X20, X19, [X31 + 0x10]
	0x027D16AC LDP X4, X3, [X8 + 0x198]
	0x027D16B0 LDP X30, X21, [X31], #0x20
	0x027D16B4 BR X4
	0x027D16B8 BL 0x1C16F20
	0x027D16BC SUB X31, X31, 0x80
	0x027D16C0 STR X30, [X31 + 0x20]
	0x027D16C4 STP X28, X27, [X31 + 0x30]
	0x027D16C8 STP X26, X25, [X31 + 0x40]
	0x027D16CC STP X24, X23, [X31 + 0x50]
	0x027D16D0 STP X22, X21, [X31 + 0x60]
	0x027D16D4 STP X20, X19, [X31 + 0x70]
	0x027D16D8 ADRP X23, 0x1C09000
	0x027D16DC LDRB W8, [X23 + 0x974]
	0x027D16E0 MOV X22, X3
	0x027D16E4 MOV X19, X2
	0x027D16E8 MOV X21, X1
	0x027D16EC MOV X20, X0
	0x027D16F0 TBNZ X8, 0x0, 0x27D1708
	0x027D16F4 ADRP X0, 0x194C000
	0x027D16F8 LDR X0, [X0 + 0x918]
	0x027D16FC BL 0x1C16CF4
	0x027D1700 MOVZ W8, 0x1
	0x027D1704 STRB W8, [X23 + 0x974]
	0x027D1708 CBZ X21, 0x27D17E4
	0x027D170C LDR X0, [X22 + 0x20]
	0x027D1710 LDRB W8, [X0 + 0x135]
	0x027D1714 TBNZ X8, 0x0, 0x27D171C
	0x027D1718 BL 0x1C5C684
	0x027D171C LDR X8, [X0 + 0xC0]
	0x027D1720 LDR X0, [X8 + 0x8]
	0x027D1724 LDRB W8, [X0 + 0x135]
	0x027D1728 TBNZ X8, 0x0, 0x27D1730
	0x027D172C BL 0x1C5C684
	0x027D1730 LDR X8, [X21]
	0x027D1734 CMP X8, X0
	0x027D1738 B.NE 0x27D1A84
	0x027D173C LDR X0, [X22 + 0x20]
	0x027D1740 LDRB W8, [X0 + 0x135]
	0x027D1744 TBNZ X8, 0x0, 0x27D174C
	0x027D1748 BL 0x1C5C684
	0x027D174C LDR X8, [X0 + 0xC0]
	0x027D1750 LDR X1, [X8 + 0x8]
	0x027D1754 LDRB W8, [X1 + 0x135]
	0x027D1758 TBNZ X8, 0x0, 0x27D1768
	0x027D175C MOV X0, X1
	0x027D1760 BL 0x1C5C684
	0x027D1764 MOV X1, X0
	0x027D1768 LDR X8, [X21]
	0x027D176C LDR X9, [X1 + 0x40]
	0x027D1770 MOV X0, X21
	0x027D1774 LDR X8, [X8 + 0x40]
	0x027D1778 CMP X8, X9
	0x027D177C B.NE 0x27D1B24
	0x027D1780 BL 0x1C16E08
	0x027D1784 CBZ X19, 0x27D1B28
	0x027D1788 ADRP X26, 0x194C000
	0x027D178C LDR X26, [X26 + 0x918]
	0x027D1790 LDR X8, [X19]
	0x027D1794 LDR X24, [X0]
	0x027D1798 LDRB W28, [X0 + 0x8]
	0x027D179C LDRB W27, [X0 + 0x9]
	0x027D17A0 LDP X23, X21, [X0 + 0x10]
	0x027D17A4 LDR X25, [X20]
	0x027D17A8 LDRH W9, [X8 + 0x12E]
	0x027D17AC LDR X1, [X26]
	0x027D17B0 CBZ X9, 0x27D17D4
	0x027D17B4 LDR X10, [X8 + 0xB0]
	0x027D17B8 ADD X10, X10, 0x8
	0x027D17BC LDUR X11, [X10 - 0x8]
	0x027D17C0 CMP X11, X1
	0x027D17C4 B.EQ 0x27D17EC
	0x027D17C8 SUBS X9, X9, 0x1
	0x027D17CC ADD X10, X10, 0x10
	0x027D17D0 B.NE 0x27D17BC
	0x027D17D4 MOV X0, X19
	0x027D17D8 MOV W2, W31
	0x027D17DC BL 0x1C5C788
	0x027D17E0 B 0x27D17F8
	0x027D17E4 MOVZ W0, 0x1
	0x027D17E8 B 0x27D1A64
	0x027D17EC LDRSW X9, [X10]
	0x027D17F0 ADD X8, X8, X9, 0x4, LSL
	0x027D17F4 ADD X0, X8, 0x138
	0x027D17F8 LDP X8, X3, [X0]
	0x027D17FC MOV X0, X19
	0x027D1800 MOV X1, X25
	0x027D1804 MOV X2, X24
	0x027D1808 BLR X8
	0x027D180C CBNZ W0, 0x27D1A64
	0x027D1810 LDRB W8, [X20 + 0x8]
	0x027D1814 STRB W8, [X31]
	0x027D1818 LDR X0, [X22 + 0x20]
	0x027D181C LDRB W8, [X0 + 0x135]
	0x027D1820 TBNZ X8, 0x0, 0x27D1828
	0x027D1824 BL 0x1C5C684
	0x027D1828 LDR X8, [X0 + 0xC0]
	0x027D182C ADD X1, X31, 0x0
	0x027D1830 LDR X0, [X8 + 0x10]
	0x027D1834 BL 0x1C16E04
	0x027D1838 AND W8, W28, 0x1
	0x027D183C STRB W8, [X31 + 0x2C]
	0x027D1840 LDR X8, [X22 + 0x20]
	0x027D1844 MOV X24, X0
	0x027D1848 LDRB W9, [X8 + 0x135]
	0x027D184C TBNZ X9, 0x0, 0x27D185C
	0x027D1850 MOV X0, X8
	0x027D1854 BL 0x1C5C684
	0x027D1858 MOV X8, X0
	0x027D185C LDR X8, [X8 + 0xC0]
	0x027D1860 ADD X1, X31, 0x2C
	0x027D1864 LDR X0, [X8 + 0x10]
	0x027D1868 BL 0x1C16E04
	0x027D186C LDR X8, [X19]
	0x027D1870 LDR X1, [X26]
	0x027D1874 MOV X25, X0
	0x027D1878 LDRH W9, [X8 + 0x12E]
	0x027D187C CBZ X9, 0x27D18A0
	0x027D1880 LDR X10, [X8 + 0xB0]
	0x027D1884 ADD X10, X10, 0x8
	0x027D1888 LDUR X11, [X10 - 0x8]
	0x027D188C CMP X11, X1
	0x027D1890 B.EQ 0x27D18B0
	0x027D1894 SUBS X9, X9, 0x1
	0x027D1898 ADD X10, X10, 0x10
	0x027D189C B.NE 0x27D1888
	0x027D18A0 MOV X0, X19
	0x027D18A4 MOV W2, W31
	0x027D18A8 BL 0x1C5C788
	0x027D18AC B 0x27D18BC
	0x027D18B0 LDRSW X9, [X10]
	0x027D18B4 ADD X8, X8, X9, 0x4, LSL
	0x027D18B8 ADD X0, X8, 0x138
	0x027D18BC LDP X8, X3, [X0]
	0x027D18C0 MOV X0, X19
	0x027D18C4 MOV X1, X24
	0x027D18C8 MOV X2, X25
	0x027D18CC BLR X8
	0x027D18D0 CBNZ W0, 0x27D1A64
	0x027D18D4 LDRB W8, [X20 + 0x9]
	0x027D18D8 STRB W8, [X31]
	0x027D18DC LDR X0, [X22 + 0x20]
	0x027D18E0 LDRB W8, [X0 + 0x135]
	0x027D18E4 TBNZ X8, 0x0, 0x27D18EC
	0x027D18E8 BL 0x1C5C684
	0x027D18EC LDR X8, [X0 + 0xC0]
	0x027D18F0 ADD X1, X31, 0x0
	0x027D18F4 LDR X0, [X8 + 0x18]
	0x027D18F8 BL 0x1C16E04
	0x027D18FC AND W8, W27, 0x1
	0x027D1900 STRB W8, [X31 + 0x2C]
	0x027D1904 LDR X8, [X22 + 0x20]
	0x027D1908 MOV X22, X0
	0x027D190C LDRB W9, [X8 + 0x135]
	0x027D1910 TBNZ X9, 0x0, 0x27D1920
	0x027D1914 MOV X0, X8
	0x027D1918 BL 0x1C5C684
	0x027D191C MOV X8, X0
	0x027D1920 LDR X8, [X8 + 0xC0]
	0x027D1924 ADD X1, X31, 0x2C

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+48], X26
	004 Move [X31+56], X25
	005 Move [X31+64], X24
	006 Move [X31+72], X23
	007 Move [X31+80], X22
	008 Move [X31+88], X21
	009 Move [X31+96], X20
	010 Move [X31+104], X19
	011 Move X22, 0x1C0A000
	012 Move W8, [X22+2416]
	013 Move X20, X2
	014 Move X19, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x194D000
	021 Move X0, [X0+2304]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+2416], W8
	025 Move X8, [X21]
	026 Move [X31+40], X8
	027 Move X0, [X20+32]
	028 Move W8, [X0+309]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {34}
	033 Call 0x1C5D684
	034 Move X8, [X0+192]
	035 Add X1, X31, 40
	036 Move X0, [X8]
	037 Call 0x1C17E04
	038 Compare X19, 0
	039 JumpIfEqual {244}
	040 Move X26, 0x194D000
	041 Move X8, [X19]
	042 Move X26, [X26+2304]
	043 Move X22, X0
	044 NotImplemented "Instruction LDRH not yet implemented."
	045 Move X1, [X26]
	046 Compare X9, 0
	047 JumpIfEqual {54}
	048 Move X10, [X8+176]
	049 Add X10, X10, 8
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Subtract X9, X9, 1
	053 Add X10, X10, 16
	054 Move W2, 1
	055 Move X0, X19
	056 Call 0x1C5D788
	057 Move W9, [X10]
	058 Add W9, W9, 1
	059 Add X8, X8, W9
	060 Add X0, X8, 312
	061 Move X8, [X0]
	062 Move X2, [X0+8]
	063 Move X0, X19
	064 Move X1, X22
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move W8, [X21+8]
	067 Move W22, W0
	068 Move [X31+28], W8
	069 Move X8, [X20+32]
	070 Move W9, [X8+309]
	071 Move TEMP, X9
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfEqual {78}
	075 Move X0, X8
	076 Call 0x1C5D684
	077 Move X8, X0
	078 Move X8, [X8+192]
	079 Add X1, X31, 28
	080 Move X0, [X8+16]
	081 Call 0x1C17E04
	082 Move X8, [X19]
	083 Move X1, [X26]
	084 Move X23, X0
	085 NotImplemented "Instruction LDRH not yet implemented."
	086 Compare X9, 0
	087 JumpIfEqual {94}
	088 Move X10, [X8+176]
	089 Add X10, X10, 8
	090 NotImplemented "Instruction LDUR not yet implemented."
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Subtract X9, X9, 1
	093 Add X10, X10, 16
	094 Move W2, 1
	095 Move X0, X19
	096 Call 0x1C5D788
	097 Move W9, [X10]
	098 Add W9, W9, 1
	099 Add X8, X8, W9
	100 Add X0, X8, 312
	101 Move X8, [X0]
	102 Move X2, [X0+8]
	103 Move X0, X19
	104 Move X1, X23
	105 NotImplemented "Instruction BLR not yet implemented."
	106 Move X8, [X21+16]
	107 Move W23, W0
	108 Move [X31+16], X8
	109 Move X8, [X20+32]
	110 Move W9, [X8+309]
	111 Move TEMP, X9
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfEqual {118}
	115 Move X0, X8
	116 Call 0x1C5D684
	117 Move X8, X0
	118 Move X8, [X8+192]
	119 Add X1, X31, 16
	120 Move X0, [X8+24]
	121 Call 0x1C17E04
	122 Move X8, [X19]
	123 Move X1, [X26]
	124 Move X24, X0
	125 NotImplemented "Instruction LDRH not yet implemented."
	126 Compare X9, 0
	127 JumpIfEqual {134}
	128 Move X10, [X8+176]
	129 Add X10, X10, 8
	130 NotImplemented "Instruction LDUR not yet implemented."
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Subtract X9, X9, 1
	133 Add X10, X10, 16
	134 Move W2, 1
	135 Move X0, X19
	136 Call 0x1C5D788
	137 Move W9, [X10]
	138 Add W9, W9, 1
	139 Add X8, X8, W9
	140 Add X0, X8, 312
	141 Move X8, [X0]
	142 Move X2, [X0+8]
	143 Move X0, X19
	144 Move X1, X24
	145 NotImplemented "Instruction BLR not yet implemented."
	146 Move W8, [X21+24]
	147 Move W24, W0
	148 Move [X31+12], W8
	149 Move X8, [X20+32]
	150 Move W9, [X8+309]
	151 Move TEMP, X9
	152 And TEMP, TEMP, 1
	153 Compare TEMP, 1
	154 JumpIfEqual {158}
	155 Move X0, X8
	156 Call 0x1C5D684
	157 Move X8, X0
	158 Move X8, [X8+192]
	159 Add X1, X31, 12
	160 Move X0, [X8+32]
	161 Call 0x1C17E04
	162 Move X8, [X19]
	163 Move X1, [X26]
	164 Move X25, X0
	165 NotImplemented "Instruction LDRH not yet implemented."
	166 Compare X9, 0
	167 JumpIfEqual {174}
	168 Move X10, [X8+176]
	169 Add X10, X10, 8
	170 NotImplemented "Instruction LDUR not yet implemented."
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Subtract X9, X9, 1
	173 Add X10, X10, 16
	174 Move W2, 1
	175 Move X0, X19
	176 Call 0x1C5D788
	177 Move W9, [X10]
	178 Add W9, W9, 1
	179 Add X8, X8, W9
	180 Add X0, X8, 312
	181 Move X8, [X0]
	182 Move X2, [X0+8]
	183 Move X0, X19
	184 Move X1, X25
	185 NotImplemented "Instruction BLR not yet implemented."
	186 Move W8, [X21+28]
	187 Move [X31+8], W8
	188 Move X8, [X20+32]
	189 Move W20, W0
	190 Move W9, [X8+309]
	191 Move TEMP, X9
	192 And TEMP, TEMP, 1
	193 Compare TEMP, 1
	194 JumpIfEqual {198}
	195 Move X0, X8
	196 Call 0x1C5D684
	197 Move X8, X0
	198 Move X8, [X8+192]
	199 Add X1, X31, 8
	200 Move X0, [X8+40]
	201 Call 0x1C17E04
	202 Move X8, [X19]
	203 Move X1, [X26]
	204 Move X21, X0
	205 NotImplemented "Instruction LDRH not yet implemented."
	206 Compare X9, 0
	207 JumpIfEqual {214}
	208 Move X10, [X8+176]
	209 Add X10, X10, 8
	210 NotImplemented "Instruction LDUR not yet implemented."
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Subtract X9, X9, 1
	213 Add X10, X10, 16
	214 Move W2, 1
	215 Move X0, X19
	216 Call 0x1C5D788
	217 Move W9, [X10]
	218 Add W9, W9, 1
	219 Add X8, X8, W9
	220 Add X0, X8, 312
	221 Move X8, [X0]
	222 Move X2, [X0+8]
	223 Move X0, X19
	224 Move X1, X21
	225 NotImplemented "Instruction BLR not yet implemented."
	226 Move W4, W0
	227 Move W0, W22
	228 Move W1, W23
	229 Move W2, W24
	230 Move W3, W20
	231 Move X5, X31
	232 Call ValueTuple.CombineHashCodes, X0, X1, X2, X3, X4
	233 Move X20, [X31+96]
	234 Move X19, [X31+104]
	235 Move X22, [X31+80]
	236 Move X21, [X31+88]
	237 Move X24, [X31+64]
	238 Move X23, [X31+72]
	239 Move X26, [X31+48]
	240 Move X25, [X31+56]
	241 Move X30, [X31+32]
	242 Add X31, X31, 112
	243 Return X0
	244 Call 0x1C17F20

Method: System.Int32 System.IValueTupleInternal.GetHashCode(System.Collections.IEqualityComparer comparer)

Disassembly:
	0x027D1928 LDR X0, [X8 + 0x18]
	0x027D192C BL 0x1C16E04
	0x027D1930 LDR X8, [X19]
	0x027D1934 LDR X1, [X26]
	0x027D1938 MOV X24, X0
	0x027D193C LDRH W9, [X8 + 0x12E]
	0x027D1940 CBZ X9, 0x27D1964
	0x027D1944 LDR X10, [X8 + 0xB0]
	0x027D1948 ADD X10, X10, 0x8
	0x027D194C LDUR X11, [X10 - 0x8]
	0x027D1950 CMP X11, X1
	0x027D1954 B.EQ 0x27D1974
	0x027D1958 SUBS X9, X9, 0x1
	0x027D195C ADD X10, X10, 0x10
	0x027D1960 B.NE 0x27D194C
	0x027D1964 MOV X0, X19
	0x027D1968 MOV W2, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X2+32]
	005 Move X19, X1
	006 Move X20, X0
	007 Move W9, [X8+309]
	008 Move TEMP, X9
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {15}
	012 Move X0, X8
	013 Call 0x1C5D684
	014 Move X8, X0
	015 Move X8, [X8+192]
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X2, [X8+432]
	021 Move X30, [X31+32]
	022 Call 0x27D15B0, X0, X1
	023 Return X0

Method: System.String ToString()

Disassembly:
	0x027D196C BL 0x1C5C788
	0x027D1970 B 0x27D1980
	0x027D1974 LDRSW X9, [X10]
	0x027D1978 ADD X8, X8, X9, 0x4, LSL
	0x027D197C ADD X0, X8, 0x138
	0x027D1980 LDP X8, X3, [X0]
	0x027D1984 MOV X0, X19
	0x027D1988 MOV X1, X22
	0x027D198C MOV X2, X24
	0x027D1990 BLR X8
	0x027D1994 CBNZ W0, 0x27D1A64
	0x027D1998 LDR X8, [X19]
	0x027D199C LDR X22, [X20 + 0x10]
	0x027D19A0 LDR X1, [X26]
	0x027D19A4 LDRH W9, [X8 + 0x12E]
	0x027D19A8 CBZ X9, 0x27D19CC
	0x027D19AC LDR X10, [X8 + 0xB0]
	0x027D19B0 ADD X10, X10, 0x8
	0x027D19B4 LDUR X11, [X10 - 0x8]
	0x027D19B8 CMP X11, X1
	0x027D19BC B.EQ 0x27D19DC
	0x027D19C0 SUBS X9, X9, 0x1
	0x027D19C4 ADD X10, X10, 0x10
	0x027D19C8 B.NE 0x27D19B4
	0x027D19CC MOV X0, X19
	0x027D19D0 MOV W2, W31
	0x027D19D4 BL 0x1C5C788
	0x027D19D8 B 0x27D19E8
	0x027D19DC LDRSW X9, [X10]
	0x027D19E0 ADD X8, X8, X9, 0x4, LSL
	0x027D19E4 ADD X0, X8, 0x138
	0x027D19E8 LDP X8, X3, [X0]
	0x027D19EC MOV X0, X19
	0x027D19F0 MOV X1, X22
	0x027D19F4 MOV X2, X23
	0x027D19F8 BLR X8
	0x027D19FC CBNZ W0, 0x27D1A64
	0x027D1A00 LDR X8, [X19]
	0x027D1A04 LDR X20, [X20 + 0x18]
	0x027D1A08 LDR X1, [X26]
	0x027D1A0C LDRH W9, [X8 + 0x12E]
	0x027D1A10 CBZ X9, 0x27D1A34
	0x027D1A14 LDR X10, [X8 + 0xB0]
	0x027D1A18 ADD X10, X10, 0x8
	0x027D1A1C LDUR X11, [X10 - 0x8]
	0x027D1A20 CMP X11, X1
	0x027D1A24 B.EQ 0x27D1A44
	0x027D1A28 SUBS X9, X9, 0x1
	0x027D1A2C ADD X10, X10, 0x10
	0x027D1A30 B.NE 0x27D1A1C
	0x027D1A34 MOV X0, X19
	0x027D1A38 MOV W2, W31
	0x027D1A3C BL 0x1C5C788
	0x027D1A40 B 0x27D1A50
	0x027D1A44 LDRSW X9, [X10]
	0x027D1A48 ADD X8, X8, X9, 0x4, LSL
	0x027D1A4C ADD X0, X8, 0x138
	0x027D1A50 LDP X8, X3, [X0]
	0x027D1A54 MOV X0, X19
	0x027D1A58 MOV X1, X20
	0x027D1A5C MOV X2, X21
	0x027D1A60 BLR X8
	0x027D1A64 LDP X20, X19, [X31 + 0x70]
	0x027D1A68 LDP X22, X21, [X31 + 0x60]
	0x027D1A6C LDP X24, X23, [X31 + 0x50]
	0x027D1A70 LDP X26, X25, [X31 + 0x40]
	0x027D1A74 LDP X28, X27, [X31 + 0x30]
	0x027D1A78 LDR X30, [X31 + 0x20]
	0x027D1A7C ADD X31, X31, 0x80
	0x027D1A80 RET
	0x027D1A84 LDP V1, V0, [X20]
	0x027D1A88 STP V1, V0, [X31]
	0x027D1A8C LDR X0, [X22 + 0x20]
	0x027D1A90 BL 0x199B99C
	0x027D1A94 LDR X8, [X0 + 0xC0]
	0x027D1A98 ADD X1, X31, 0x0
	0x027D1A9C LDR X0, [X8 + 0x8]
	0x027D1AA0 BL 0x1C16E04
	0x027D1AA4 MOV X1, X31
	0x027D1AA8 BL 0x33BE520
	0x027D1AAC MOV X19, X0
	0x027D1AB0 BL 0x19903C0
	0x027D1AB4 LDR X8, [X19]
	0x027D1AB8 MOV X0, X19
	0x027D1ABC LDP X9, X1, [X8 + 0x168]
	0x027D1AC0 BLR X9
	0x027D1AC4 MOV X19, X0
	0x027D1AC8 ADRP X0, 0x194C000
	0x027D1ACC LDR X0, [X0 + 0x920]
	0x027D1AD0 BL 0x1C16D08
	0x027D1AD4 MOV X1, X19
	0x027D1AD8 MOV X2, X31
	0x027D1ADC BL 0x32094D4
	0x027D1AE0 MOV X19, X0
	0x027D1AE4 ADRP X0, 0x192A000
	0x027D1AE8 LDR X0, [X0 + 0x578]
	0x027D1AEC BL 0x1C16D08
	0x027D1AF0 BL 0x1C16F10
	0x027D1AF4 MOV X20, X0
	0x027D1AF8 ADRP X0, 0x194C000
	0x027D1AFC LDR X0, [X0 + 0x928]
	0x027D1B00 BL 0x1C16D08
	0x027D1B04 MOV X2, X0
	0x027D1B08 MOV X0, X20
	0x027D1B0C MOV X1, X19
	0x027D1B10 MOV X3, X31
	0x027D1B14 BL 0x330E16C
	0x027D1B18 MOV X0, X20
	0x027D1B1C MOV X1, X22
	0x027D1B20 BL 0x1C16DEC
	0x027D1B24 BL 0x1C171E0
	0x027D1B28 BL 0x1C16F20
	0x027D1B2C SUB X31, X31, 0x50
	0x027D1B30 STP X30, X23, [X31 + 0x20]
	0x027D1B34 STP X22, X21, [X31 + 0x30]
	0x027D1B38 STP X20, X19, [X31 + 0x40]
	0x027D1B3C ADRP X20, 0x1C09000
	0x027D1B40 LDRB W8, [X20 + 0x975]
	0x027D1B44 MOV X21, X1
	0x027D1B48 MOV X19, X0
	0x027D1B4C TBNZ X8, 0x0, 0x27D1B64
	0x027D1B50 ADRP X0, 0x1922000
	0x027D1B54 LDR X0, [X0 + 0xB58]
	0x027D1B58 BL 0x1C16CF4
	0x027D1B5C MOVZ W8, 0x1
	0x027D1B60 STRB W8, [X20 + 0x975]
	0x027D1B64 STP X31, X31, [X31 + 0x8]
	0x027D1B68 LDR X8, [X19]
	0x027D1B6C STR X8, [X31 + 0x18]
	0x027D1B70 CBZ X8, 0x27D1B90
	0x027D1B74 LDR X0, [X31 + 0x18]
	0x027D1B78 CBZ X0, 0x27D1C8C
	0x027D1B7C LDR X8, [X0]
	0x027D1B80 LDP X9, X1, [X8 + 0x158]
	0x027D1B84 BLR X9
	0x027D1B88 MOV W20, W0
	0x027D1B8C B 0x27D1B94
	0x027D1B90 MOV W20, W31
	0x027D1B94 ADRP X23, 0x1922000
	0x027D1B98 LDR X23, [X23 + 0xB58]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x1C0A000
	008 Move X22, 0x1923000
	009 Move W8, [X20+2417]
	010 Move X22, [X22+2760]
	011 Move X19, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0x1923000
	018 Move X0, [X0+2904]
	019 Call 0x1C17CF4
	020 Move X0, 0x1923000
	021 Move X0, [X0+2760]
	022 Call 0x1C17CF4
	023 Move X0, 0x1923000
	024 Move X0, [X0+2104]
	025 Call 0x1C17CF4
	026 Move X0, 0x192E000
	027 Move X0, [X0+784]
	028 Call 0x1C17CF4
	029 Move X0, 0x1924000
	030 Move X0, [X0+1544]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+2417], W8
	034 Move X0, [X22]
	035 Move W1, 11
	036 Call 0x1C17D6C
	037 Compare X0, 0
	038 JumpIfEqual {158}
	039 Move W8, [X0+24]
	040 Move X20, X0
	041 Compare W8, 0
	042 JumpIfEqual {157}
	043 Move X8, 0x192E000
	044 Move X8, [X8+784]
	045 Move X8, [X8]
	046 Move [X20+32], X8
	047 Move X0, [X19+32]
	048 Move W8, [X0+309]
	049 Move TEMP, X8
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {54}
	053 Call 0x1C5D684
	054 Move X8, [X0+192]
	055 Move X0, X21
	056 Move X1, [X8+440]
	057 Call IntPtr.ToString, X0
	058 Move W8, [X20+24]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move [X20+40], X0
	062 Move X23, 0x1923000
	063 Move X23, [X23+2104]
	064 Add X22, X21, 8
	065 Move X8, [X23]
	066 Move [X20+48], X8
	067 Move X0, [X19+32]
	068 Move W8, [X0+309]
	069 Move TEMP, X8
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfEqual {74}
	073 Call 0x1C5D684
	074 Move X8, [X0+192]
	075 Move X0, X22
	076 Move X1, [X8+448]
	077 Call Int32.ToString, X0
	078 Move W8, [X20+24]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move [X20+56], X0
	082 Move X8, [X23]
	083 Add X22, X21, 16
	084 Move [X20+64], X8
	085 Move X0, [X19+32]
	086 Move W8, [X0+309]
	087 Move TEMP, X8
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfEqual {92}
	091 Call 0x1C5D684
	092 Move X8, [X0+192]
	093 Move X0, X22
	094 Move X1, [X8+456]
	095 Call IntPtr.ToString, X0
	096 Move W8, [X20+24]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move [X20+72], X0
	100 Move X8, [X23]
	101 Add X22, X21, 24
	102 Move [X20+80], X8
	103 Move X0, [X19+32]
	104 Move W8, [X0+309]
	105 Move TEMP, X8
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfEqual {110}
	109 Call 0x1C5D684
	110 Move X8, [X0+192]
	111 Move X0, X22
	112 Move X1, [X8+464]
	113 Call Int32.ToString, X0
	114 Move W8, [X20+24]
	115 NotImplemented "Instruction CMP not yet implemented."
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move [X20+88], X0
	118 Move X8, [X23]
	119 Move X9, 0x1923000
	120 Move X9, [X9+2904]
	121 Add X21, X21, 28
	122 Move [X20+96], X8
	123 Move X0, [X9]
	124 Move W8, [X0+224]
	125 Compare W8, 0
	126 JumpIfNotEqual {128}
	127 Call 0x1C17DFC
	128 Move X0, [X19+32]
	129 Move W8, [X0+309]
	130 Move TEMP, X8
	131 And TEMP, TEMP, 1
	132 Compare TEMP, 1
	133 JumpIfEqual {135}
	134 Call 0x1C5D684
	135 Move X8, [X0+192]
	136 Move X0, X21
	137 Move X1, [X8+472]
	138 Call Boolean.ToString, X0
	139 Move W8, [X20+24]
	140 NotImplemented "Instruction CMP not yet implemented."
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move [X20+104], X0
	143 Move X8, 0x1924000
	144 Move X8, [X8+1544]
	145 Move X0, X20
	146 Move X22, [X31+16]
	147 Move X21, [X31+24]
	148 Move X1, X31
	149 Move X8, [X8]
	150 Move [X20+112], X8
	151 Move X20, [X31+32]
	152 Move X19, [X31+40]
	153 Move X30, [X31+48]
	154 Move X23, [X31+56]
	155 Call String.Concat, X0
	156 Return X0
	157 Call 0x1C17F28
	158 Call 0x1C17F20

Method: System.String System.IValueTupleInternal.ToStringEnd()

Disassembly:
	0x027D1B9C ADD X22, X19, 0x8
	0x027D1BA0 LDR X0, [X23]
	0x027D1BA4 LDR W8, [X0 + 0xE0]
	0x027D1BA8 CBNZ W8, 0x27D1BB0
	0x027D1BAC BL 0x1C16DFC
	0x027D1BB0 LDR X0, [X21 + 0x20]
	0x027D1BB4 LDRB W8, [X0 + 0x135]
	0x027D1BB8 TBNZ X8, 0x0, 0x27D1BC0
	0x027D1BBC BL 0x1C5C684
	0x027D1BC0 LDR X8, [X0 + 0xC0]
	0x027D1BC4 MOV X0, X22
	0x027D1BC8 LDR X1, [X8 + 0x190]
	0x027D1BCC BL 0x33176B4
	0x027D1BD0 MOV W22, W0
	0x027D1BD4 LDR X0, [X23]
	0x027D1BD8 ADD X23, X19, 0x9
	0x027D1BDC LDR W8, [X0 + 0xE0]
	0x027D1BE0 CBNZ W8, 0x27D1BE8
	0x027D1BE4 BL 0x1C16DFC
	0x027D1BE8 LDR X0, [X21 + 0x20]
	0x027D1BEC LDRB W8, [X0 + 0x135]
	0x027D1BF0 TBNZ X8, 0x0, 0x27D1BF8
	0x027D1BF4 BL 0x1C5C684
	0x027D1BF8 LDR X8, [X0 + 0xC0]
	0x027D1BFC MOV X0, X23
	0x027D1C00 LDR X1, [X8 + 0x198]
	0x027D1C04 BL 0x33176B4
	0x027D1C08 LDR X8, [X19 + 0x10]
	0x027D1C0C MOV W21, W0
	0x027D1C10 STR X8, [X31 + 0x10]
	0x027D1C14 CBZ X8, 0x27D1C34
	0x027D1C18 LDR X0, [X31 + 0x10]
	0x027D1C1C CBZ X0, 0x27D1C8C
	0x027D1C20 LDR X8, [X0]
	0x027D1C24 LDP X9, X1, [X8 + 0x158]
	0x027D1C28 BLR X9
	0x027D1C2C MOV W23, W0
	0x027D1C30 B 0x27D1C38
	0x027D1C34 MOV W23, W31
	0x027D1C38 LDR X8, [X19 + 0x18]
	0x027D1C3C STR X8, [X31 + 0x8]
	0x027D1C40 CBZ X8, 0x27D1C60
	0x027D1C44 LDR X0, [X31 + 0x8]
	0x027D1C48 CBZ X0, 0x27D1C8C
	0x027D1C4C LDR X8, [X0]
	0x027D1C50 LDP X9, X1, [X8 + 0x158]
	0x027D1C54 BLR X9
	0x027D1C58 MOV W4, W0
	0x027D1C5C B 0x27D1C64
	0x027D1C60 MOV W4, W31
	0x027D1C64 MOV W0, W20
	0x027D1C68 MOV W1, W22
	0x027D1C6C MOV W2, W21
	0x027D1C70 MOV W3, W23
	0x027D1C74 LDP X20, X19, [X31 + 0x40]
	0x027D1C78 LDP X22, X21, [X31 + 0x30]
	0x027D1C7C LDP X30, X23, [X31 + 0x20]
	0x027D1C80 MOV X5, X31
	0x027D1C84 ADD X31, X31, 0x50
	0x027D1C88 B 0x339BDAC
	0x027D1C8C BL 0x1C16F20
	0x027D1C90 STR X30, [X31 - 0x20]!
	0x027D1C94 STP X20, X19, [X31 + 0x10]
	0x027D1C98 LDR X8, [X2 + 0x20]
	0x027D1C9C MOV X19, X1
	0x027D1CA0 MOV X20, X0
	0x027D1CA4 LDRB W9, [X8 + 0x135]
	0x027D1CA8 TBNZ X9, 0x0, 0x27D1CB8
	0x027D1CAC MOV X0, X8
	0x027D1CB0 BL 0x1C5C684
	0x027D1CB4 MOV X8, X0
	0x027D1CB8 LDR X8, [X8 + 0xC0]
	0x027D1CBC MOV X0, X20
	0x027D1CC0 MOV X1, X19
	0x027D1CC4 LDP X20, X19, [X31 + 0x10]
	0x027D1CC8 LDR X2, [X8 + 0x1B0]
	0x027D1CCC LDR X30, [X31], #0x20
	0x027D1CD0 B 0x27D1CD4
	0x027D1CD4 SUB X31, X31, 0x50
	0x027D1CD8 STP X30, X25, [X31 + 0x10]
	0x027D1CDC STP X24, X23, [X31 + 0x20]
	0x027D1CE0 STP X22, X21, [X31 + 0x30]
	0x027D1CE4 STP X20, X19, [X31 + 0x40]
	0x027D1CE8 ADRP X21, 0x1C09000
	0x027D1CEC LDRB W8, [X21 + 0x976]
	0x027D1CF0 MOV X22, X2
	0x027D1CF4 MOV X19, X1
	0x027D1CF8 MOV X20, X0
	0x027D1CFC TBNZ X8, 0x0, 0x27D1D14
	0x027D1D00 ADRP X0, 0x194C000
	0x027D1D04 LDR X0, [X0 + 0x900]
	0x027D1D08 BL 0x1C16CF4
	0x027D1D0C MOVZ W8, 0x1
	0x027D1D10 STRB W8, [X21 + 0x976]
	0x027D1D14 CBZ X19, 0x27D1FB8
	0x027D1D18 ADRP X25, 0x194C000
	0x027D1D1C LDR X8, [X19]
	0x027D1D20 LDR X25, [X25 + 0x900]
	0x027D1D24 LDR X21, [X20]
	0x027D1D28 LDRH W9, [X8 + 0x12E]
	0x027D1D2C LDR X1, [X25]
	0x027D1D30 CBZ X9, 0x27D1D54
	0x027D1D34 LDR X10, [X8 + 0xB0]
	0x027D1D38 ADD X10, X10, 0x8
	0x027D1D3C LDUR X11, [X10 - 0x8]
	0x027D1D40 CMP X11, X1
	0x027D1D44 B.EQ 0x27D1D64
	0x027D1D48 SUBS X9, X9, 0x1
	0x027D1D4C ADD X10, X10, 0x10
	0x027D1D50 B.NE 0x27D1D3C
	0x027D1D54 MOVZ W2, 0x1
	0x027D1D58 MOV X0, X19
	0x027D1D5C BL 0x1C5C788
	0x027D1D60 B 0x27D1D74
	0x027D1D64 LDR W9, [X10]
	0x027D1D68 ADD W9, W9, 0x1
	0x027D1D6C ADD X8, X8, W9, 0x4, SXTW
	0x027D1D70 ADD X0, X8, 0x138
	0x027D1D74 LDP X8, X2, [X0]
	0x027D1D78 MOV X0, X19
	0x027D1D7C MOV X1, X21
	0x027D1D80 BLR X8
	0x027D1D84 LDRB W8, [X20 + 0x8]
	0x027D1D88 MOV W21, W0
	0x027D1D8C STRB W8, [X31 + 0xC]
	0x027D1D90 LDR X8, [X22 + 0x20]
	0x027D1D94 LDRB W9, [X8 + 0x135]
	0x027D1D98 TBNZ X9, 0x0, 0x27D1DA8
	0x027D1D9C MOV X0, X8
	0x027D1DA0 BL 0x1C5C684
	0x027D1DA4 MOV X8, X0
	0x027D1DA8 LDR X8, [X8 + 0xC0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x1C0A000
	008 Move X22, 0x1923000
	009 Move W8, [X20+2418]
	010 Move X22, [X22+2760]
	011 Move X19, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x1923000
	018 Move X0, [X0+2904]
	019 Call 0x1C17CF4
	020 Move X0, 0x1923000
	021 Move X0, [X0+2760]
	022 Call 0x1C17CF4
	023 Move X0, 0x1923000
	024 Move X0, [X0+2104]
	025 Call 0x1C17CF4
	026 Move X0, 0x1924000
	027 Move X0, [X0+1544]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+2418], W8
	031 Move X0, [X22]
	032 Move W1, 10
	033 Call 0x1C17D6C
	034 Move X8, [X19+32]
	035 Move X20, X0
	036 Move W9, [X8+309]
	037 Move TEMP, X9
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {44}
	041 Move X0, X8
	042 Call 0x1C5D684
	043 Move X8, X0
	044 Move X8, [X8+192]
	045 Move X0, X21
	046 Move X1, [X8+440]
	047 Call IntPtr.ToString, X0
	048 Compare X20, 0
	049 JumpIfEqual {151}
	050 Move W8, [X20+24]
	051 Compare W8, 0
	052 JumpIfEqual {150}
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move [X20+32], X0
	055 Move X23, 0x1923000
	056 Move X23, [X23+2104]
	057 Add X22, X21, 8
	058 Move X8, [X23]
	059 Move [X20+40], X8
	060 Move X0, [X19+32]
	061 Move W8, [X0+309]
	062 Move TEMP, X8
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {67}
	066 Call 0x1C5D684
	067 Move X8, [X0+192]
	068 Move X0, X22
	069 Move X1, [X8+448]
	070 Call Int32.ToString, X0
	071 Move W8, [X20+24]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move [X20+48], X0
	075 Move X8, [X23]
	076 Add X22, X21, 16
	077 Move [X20+56], X8
	078 Move X0, [X19+32]
	079 Move W8, [X0+309]
	080 Move TEMP, X8
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfEqual {85}
	084 Call 0x1C5D684
	085 Move X8, [X0+192]
	086 Move X0, X22
	087 Move X1, [X8+456]
	088 Call IntPtr.ToString, X0
	089 Move W8, [X20+24]
	090 NotImplemented "Instruction CMP not yet implemented."
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move [X20+64], X0
	093 Move X8, [X23]
	094 Add X22, X21, 24
	095 Move [X20+72], X8
	096 Move X0, [X19+32]
	097 Move W8, [X0+309]
	098 Move TEMP, X8
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfEqual {103}
	102 Call 0x1C5D684
	103 Move X8, [X0+192]
	104 Move X0, X22
	105 Move X1, [X8+464]
	106 Call Int32.ToString, X0
	107 Move W8, [X20+24]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move [X20+80], X0
	111 Move X8, [X23]
	112 Move X9, 0x1923000
	113 Move X9, [X9+2904]
	114 Add X21, X21, 28
	115 Move [X20+88], X8
	116 Move X0, [X9]
	117 Move W8, [X0+224]
	118 Compare W8, 0
	119 JumpIfNotEqual {121}
	120 Call 0x1C17DFC
	121 Move X0, [X19+32]
	122 Move W8, [X0+309]
	123 Move TEMP, X8
	124 And TEMP, TEMP, 1
	125 Compare TEMP, 1
	126 JumpIfEqual {128}
	127 Call 0x1C5D684
	128 Move X8, [X0+192]
	129 Move X0, X21
	130 Move X1, [X8+472]
	131 Call Boolean.ToString, X0
	132 Move W8, [X20+24]
	133 NotImplemented "Instruction CMP not yet implemented."
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move [X20+96], X0
	136 Move X8, 0x1924000
	137 Move X8, [X8+1544]
	138 Move X0, X20
	139 Move X22, [X31+16]
	140 Move X21, [X31+24]
	141 Move X1, X31
	142 Move X8, [X8]
	143 Move [X20+104], X8
	144 Move X20, [X31+32]
	145 Move X19, [X31+40]
	146 Move X30, [X31+48]
	147 Move X23, [X31+56]
	148 Call String.Concat, X0
	149 Return X0
	150 Call 0x1C17F28
	151 Call 0x1C17F20

Method: System.Int32 System.Runtime.CompilerServices.ITuple.get_Length()

Disassembly:
	0x027D1DAC ADD X1, X31, 0xC
	0x027D1DB0 LDR X0, [X8 + 0x10]

ISIL:
	001 Move W0, 5
	002 Return X0

