Type: System.ParameterizedStrings/FormatParam

Method: System.Void .ctor(System.Int32 value)

Disassembly:
	0x033D3A40 LDR W8, [X20 + 0x10]
	0x033D3A44 CMP W24, W8
	0x033D3A48 B.GE 0x33D3AF8

ISIL:
	001 Move [X0], W1
	002 Move [X0+8], X31
	003 Return 

Method: System.Void .ctor(System.Int32 intValue, System.String stringValue)

Disassembly:
	0x033D3A4C ADRP X26, 0xFFFFFFFFFD7C3000
	0x033D3A50 ADD X26, X26, 0xA1C
	0x033D3A54 MOV W25, W24

ISIL:
	001 Move [X0], W1
	002 Move [X0+8], X2
	003 Return 

Method: System.ParameterizedStrings/FormatParam op_Implicit(System.Int32 value)

Disassembly:
	0x033CF14C LDP X20, X19, [X31 + 0x10]
	0x033CF150 LDP X30, X21, [X31], #0x20
	0x033CF154 B 0x33CF03C

ISIL:
	001 Move W0, W0
	002 Move X1, X31
	003 Return X0

Method: System.Int32 get_Int32()

Disassembly:
	0x033D3A58 MOV X0, X20
	0x033D3A5C MOV W1, W24

ISIL:
	001 Move W0, [X0]
	002 Return X0

Method: System.String get_String()

Disassembly:
	0x033D32FC SUBS X9, X9, 0x1
	0x033D3300 ADD X10, X10, 0x10
	0x033D3304 B.NE 0x33D32F0
	0x033D3308 MOV X0, X21
	0x033D330C MOV W2, W31
	0x033D3310 BL 0x1C5C788
	0x033D3314 B 0x33D3324
	0x033D3318 LDRSW X9, [X10]
	0x033D331C ADD X8, X8, X9, 0x4, LSL
	0x033D3320 ADD X0, X8, 0x138
	0x033D3324 LDP X8, X1, [X0]
	0x033D3328 MOV X0, X21
	0x033D332C BLR X8
	0x033D3330 LDR X8, [X22]
	0x033D3334 MOV X22, X0
	0x033D3338 MOV X0, X8
	0x033D333C BL 0x1C16F10
	0x033D3340 MOV X1, X22
	0x033D3344 MOV X2, X31
	0x033D3348 MOV X21, X0
	0x033D334C BL 0x3231CF8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x100B000
	005 Move W8, [X20+714]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xD23000
	012 Move X0, [X0+632]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+714], W8
	016 Move X0, [X19+8]
	017 Compare X0, 0
	018 JumpIfNotEqual {24}
	019 Move X8, 0xD23000
	020 Move X8, [X8+632]
	021 Move X8, [X8]
	022 Move X8, [X8+184]
	023 Move X0, [X8]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Return X0

Method: System.Object get_Object()

Disassembly:
	0x033D3350 LDR X0, [X19 + 0x20]
	0x033D3354 CBZ X0, 0x33D3438
	0x033D3358 ADRP X8, 0xD59000
	0x033D335C LDR X8, [X8 + 0xC50]
	0x033D3360 ADRP X26, 0xD59000
	0x033D3364 ADRP X24, 0xD59000
	0x033D3368 LDR X1, [X8]
	0x033D336C LDR X26, [X26 + 0xC40]
	0x033D3370 LDR X24, [X24 + 0xC38]
	0x033D3374 ADD X8, X31, 0x8
	0x033D3378 BL 0x301CB58
	0x033D337C LDUR V0, [X31 + 0x8]
	0x033D3380 LDR X8, [X31 + 0x18]
	0x033D3384 STR V0, [X31 + 0x2]
	0x033D3388 STR X8, [X31 + 0x30]
	0x033D338C LDR X1, [X26]
	0x033D3390 ADD X0, X31, 0x20
	0x033D3394 BL 0x2BC4350
	0x033D3398 TBZ X0, 0x0, 0x33D342C
	0x033D339C CBZ X21, 0x33D3600
	0x033D33A0 LDR X23, [X31 + 0x30]
	0x033D33A4 MOVZ W1, 0x2B
	0x033D33A8 MOV X0, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x100B000
	005 Move W8, [X20+715]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xD21000
	012 Move X0, [X0+1880]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+715], W8
	016 Move X0, [X19+8]
	017 Compare X0, 0
	018 JumpIfNotEqual {26}
	019 Move X9, 0xD21000
	020 Move W8, [X19]
	021 Move X9, [X9+1880]
	022 Add X1, X31, 12
	023 Move [X31+12], W8
	024 Move X0, [X9]
	025 Call 0x1C17E04
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0

