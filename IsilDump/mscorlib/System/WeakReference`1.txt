Type: System.WeakReference`1

Method: System.Void .ctor(T target)

Disassembly:
	0x02851290 LDP X22, X21, [X31 + 0x20]
	0x02851294 LDR X23, [X31 + 0x10]
	0x02851298 LDP X29, X30, [X31], #0x40
	0x0285129C RET
	0x028512A0 BL 0x1C16F20
	0x028512A4 BL 0x3EB1B20
	0x028512A8 SUB X31, X31, 0x30
	0x028512AC STP X30, X21, [X31 + 0x10]
	0x028512B0 STP X20, X19, [X31 + 0x20]
	0x028512B4 LDR X8, [X1 + 0x20]
	0x028512B8 MOV X19, X1
	0x028512BC MOV X20, X0
	0x028512C0 LDR X8, [X8 + 0xC0]
	0x028512C4 LDR X8, [X8 + 0x18]
	0x028512C8 LDRB W9, [X8 + 0x135]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move X0, X19
	009 Move W1, W31
	010 Move X2, X31
	011 Move [X20+24], W31
	012 Call GCHandle.Alloc, X0, X1
	013 Move [X20+16], X0
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X30, [X31+32]
	017 Return 

Method: System.Void .ctor(T target, System.Boolean trackResurrection)

Disassembly:
	0x028512CC TBNZ X9, 0x0, 0x28512DC
	0x028512D0 MOV X0, X8
	0x028512D4 BL 0x1C5C684
	0x028512D8 MOV X8, X0
	0x028512DC MOV X0, X8
	0x028512E0 BL 0x1C16F10
	0x028512E4 LDR X8, [X19 + 0x20]
	0x028512E8 MOVZ W1, 0x1
	0x028512EC MOV X2, X31
	0x028512F0 MOV X21, X0
	0x028512F4 LDR X8, [X8 + 0xC0]
	0x028512F8 LDR X3, [X8 + 0x50]
	0x028512FC LDR X8, [X3]
	0x02851300 BLR X8
	0x02851304 ADD X0, X20, 0x18
	0x02851308 MOV X1, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X1
	006 Move X1, X31
	007 Move W19, W2
	008 Move X21, X0
	009 Call Object..ctor, X0
	010 And W1, W19, 1
	011 Move X0, X20
	012 Move X2, X31
	013 Move [X21+24], W1
	014 Call GCHandle.Alloc, X0, X1
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move [X21+16], X0
	018 Move X30, [X31+32]
	019 Move X21, [X31+40]
	020 Return 

Method: System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x0285130C MOV X2, X31
	0x02851310 BL 0x1C24138
	0x02851314 CBZ X0, 0x2851320
	0x02851318 MOV W0, W31
	0x0285131C B 0x2851358
	0x02851320 LDR X2, [X20 + 0x10]
	0x02851324 CBZ X2, 0x2851368
	0x02851328 LDR X8, [X19 + 0x20]
	0x0285132C ADD X3, X31, 0x0
	0x02851330 ADD X4, X31, 0xC
	0x02851334 LDR X8, [X8 + 0xC0]
	0x02851338 LDR X1, [X8 + 0x48]
	0x0285133C LDR X0, [X1]
	0x02851340 STR X21, [X31]
	0x02851344 LDR X8, [X1 + 0x10]
	0x02851348 BLR X8
	0x0285134C LDRB W8, [X31 + 0xC]
	0x02851350 CMP W8, 0x0
	0x02851354 CSET W0, NE
	0x02851358 LDP X20, X19, [X31 + 0x20]
	0x0285135C LDP X30, X21, [X31 + 0x10]
	0x02851360 ADD X31, X31, 0x30
	0x02851364 RET
	0x02851368 BL 0x1C16F20
	0x0285136C STR X30, [X31 - 0x30]!
	0x02851370 STP X22, X21, [X31 + 0x10]
	0x02851374 STP X20, X19, [X31 + 0x20]
	0x02851378 ADRP X21, 0x1B89000
	0x0285137C ADRP X22, 0x18AA000
	0x02851380 LDRB W8, [X21 + 0xAF4]
	0x02851384 LDR X22, [X22 + 0x8A8]
	0x02851388 MOV X20, X1
	0x0285138C MOV X19, X0
	0x02851390 TBNZ X8, 0x0, 0x28513A8
	0x02851394 ADRP X0, 0x18AA000
	0x02851398 LDR X0, [X0 + 0x8A8]
	0x0285139C BL 0x1C16CF4
	0x028513A0 MOVZ W8, 0x1
	0x028513A4 STRB W8, [X21 + 0xAF4]
	0x028513A8 LDR X0, [X22]
	0x028513AC BL 0x1C16F10
	0x028513B0 MOV X1, X31
	0x028513B4 MOV X21, X0
	0x028513B8 BL 0x338C880
	0x028513BC LDR X8, [X20 + 0x20]
	0x028513C0 MOV X0, X19
	0x028513C4 MOV X1, X21
	0x028513C8 LDP X20, X19, [X31 + 0x20]
	0x028513CC LDR X8, [X8 + 0xC0]
	0x028513D0 LDP X22, X21, [X31 + 0x10]
	0x028513D4 LDR X2, [X8 + 0x60]
	0x028513D8 LDR X3, [X2]
	0x028513DC LDR X30, [X31], #0x30
	0x028513E0 BR X3
	0x028513E4 SUB X31, X31, 0x40
	0x028513E8 STR X30, [X31 + 0x10]
	0x028513EC STP X22, X21, [X31 + 0x20]
	0x028513F0 STP X20, X19, [X31 + 0x30]
	0x028513F4 MOV X20, X0
	0x028513F8 MOV X0, X1
	0x028513FC MOV X1, X31
	0x02851400 MOV X19, X2
	0x02851404 BL 0x32C2380
	0x02851408 LDR X8, [X19 + 0x20]
	0x0285140C MOV X22, X0
	0x02851410 LDR X8, [X8 + 0xC0]
	0x02851414 LDR X8, [X8 + 0x18]
	0x02851418 LDRB W9, [X8 + 0x135]
	0x0285141C TBNZ X9, 0x0, 0x285142C
	0x02851420 MOV X0, X8
	0x02851424 BL 0x1C5C684
	0x02851428 MOV X8, X0
	0x0285142C MOV X0, X8
	0x02851430 BL 0x1C16F10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1B8A000
	008 Move W8, [X22+2800]
	009 Move X20, X4
	010 Move X21, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x18A3000
	017 Move X0, [X0+1728]
	018 Call 0x1C17CF4
	019 Move X0, 0x18CE000
	020 Move X0, [X0+120]
	021 Call 0x1C17CF4
	022 Move X0, 0x18CE000
	023 Move X0, [X0+128]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+2800], W8
	027 Move X0, X19
	028 Move X1, X31
	029 Call Object..ctor, X0
	030 Compare X21, 0
	031 JumpIfEqual {71}
	032 Move X8, 0x18CE000
	033 Move X8, [X8+128]
	034 Move X23, 0x18A3000
	035 Move X22, 0x18CE000
	036 Move X0, X21
	037 Move X1, [X8]
	038 Move X23, [X23+1728]
	039 Move X22, [X22+120]
	040 Move X2, X31
	041 Call SerializationInfo.GetBoolean, X0, X1
	042 And W8, W0, 1
	043 Move [X19+24], W8
	044 Move X8, [X20+32]
	045 Move X0, [X23]
	046 Move X8, [X8+192]
	047 Move W9, [X0+224]
	048 Move X20, [X8+24]
	049 Compare W9, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X0, X20
	053 Move X1, X31
	054 Call Type.GetTypeFromHandle, X0
	055 Move X1, [X22]
	056 Move X2, X0
	057 Move X0, X21
	058 Move X3, X31
	059 Call SerializationInfo.GetValue, X0, X1, X2
	060 Move W1, [X19+24]
	061 Move X2, X31
	062 Call GCHandle.Alloc, X0, X1
	063 Move [X19+16], X0
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X22, [X31+16]
	067 Move X21, [X31+24]
	068 Move X30, [X31+48]
	069 Move X23, [X31+56]
	070 Return 
	071 Move X0, 0x18A8000
	072 Move X0, [X0+1320]
	073 Call 0x1C17D08
	074 Call 0x1C17F10
	075 Move X19, X0
	076 Move X0, 0x18CD000
	077 Move X0, [X0+728]
	078 Call 0x1C17D08
	079 Move X1, X0
	080 Move X0, X19
	081 Move X2, X31
	082 Call ArgumentNullException..ctor, X0, X1
	083 Move X0, X19
	084 Move X1, X20
	085 Call 0x1C17DEC

Method: System.Void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x02851434 LDR X8, [X19 + 0x20]
	0x02851438 MOVZ W1, 0x2
	0x0285143C MOV X2, X22
	0x02851440 MOV X21, X0
	0x02851444 LDR X8, [X8 + 0xC0]
	0x02851448 LDR X3, [X8 + 0x50]
	0x0285144C LDR X8, [X3]
	0x02851450 BLR X8
	0x02851454 ADD X0, X20, 0x18
	0x02851458 MOV X1, X21
	0x0285145C MOV X2, X31
	0x02851460 BL 0x1C24138
	0x02851464 CBZ X0, 0x2851470
	0x02851468 MOV W0, W31
	0x0285146C B 0x28514A8
	0x02851470 LDR X2, [X20 + 0x10]
	0x02851474 CBZ X2, 0x28514BC
	0x02851478 LDR X8, [X19 + 0x20]
	0x0285147C ADD X3, X31, 0x8
	0x02851480 ADD X4, X31, 0x1C
	0x02851484 LDR X8, [X8 + 0xC0]
	0x02851488 LDR X1, [X8 + 0x48]
	0x0285148C LDR X0, [X1]
	0x02851490 STR X21, [X31 + 0x8]
	0x02851494 LDR X8, [X1 + 0x10]
	0x02851498 BLR X8
	0x0285149C LDRB W8, [X31 + 0x1C]
	0x028514A0 CMP W8, 0x0
	0x028514A4 CSET W0, NE
	0x028514A8 LDP X20, X19, [X31 + 0x30]
	0x028514AC LDP X22, X21, [X31 + 0x20]
	0x028514B0 LDR X30, [X31 + 0x10]
	0x028514B4 ADD X31, X31, 0x40
	0x028514B8 RET
	0x028514BC BL 0x1C16F20
	0x028514C0 SUB X31, X31, 0x40
	0x028514C4 STR X30, [X31 + 0x10]
	0x028514C8 STP X22, X21, [X31 + 0x20]
	0x028514CC STP X20, X19, [X31 + 0x30]
	0x028514D0 MOV X20, X0
	0x028514D4 MOV X0, X1
	0x028514D8 MOV X1, X31
	0x028514DC MOV X19, X2
	0x028514E0 BL 0x32C2380
	0x028514E4 LDR X8, [X19 + 0x20]
	0x028514E8 MOV X22, X0
	0x028514EC LDR X8, [X8 + 0xC0]
	0x028514F0 LDR X8, [X8 + 0x18]
	0x028514F4 LDRB W9, [X8 + 0x135]
	0x028514F8 TBNZ X9, 0x0, 0x2851508
	0x028514FC MOV X0, X8
	0x02851500 BL 0x1C5C684
	0x02851504 MOV X8, X0
	0x02851508 MOV X0, X8
	0x0285150C BL 0x1C16F10
	0x02851510 LDR X8, [X19 + 0x20]
	0x02851514 MOVZ W1, 0x3
	0x02851518 MOV X2, X22
	0x0285151C MOV X21, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1B8A000
	007 Move W8, [X22+2801]
	008 Move X20, X4
	009 Move X19, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x18CE000
	016 Move X0, [X0+120]
	017 Call 0x1C17CF4
	018 Move X0, 0x18CE000
	019 Move X0, [X0+128]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2801], W8
	023 Compare X19, 0
	024 JumpIfEqual {57}
	025 Move X8, 0x18CE000
	026 Move X8, [X8+128]
	027 Move W2, [X21+24]
	028 Move X22, 0x18CE000
	029 Move X0, X19
	030 Move X1, [X8]
	031 Move X22, [X22+120]
	032 Move X3, X31
	033 Call SerializationInfo.AddValue, X0, X1, X2
	034 Add X20, X21, 16
	035 Move X0, X20
	036 Move X1, X31
	037 Call GCHandle.get_IsAllocated, X0
	038 Move X2, X31
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {47}
	043 Move X0, X20
	044 Move X1, X31
	045 Call GCHandle.get_Target, X0
	046 Move X2, X0
	047 Move X1, [X22]
	048 Move X0, X19
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X3, X31
	054 Move X30, [X31+48]
	055 Call SerializationInfo.AddValue, X0, X1, X2
	056 Return 
	057 Move X0, 0x18A8000
	058 Move X0, [X0+1320]
	059 Call 0x1C17D08
	060 Call 0x1C17F10
	061 Move X19, X0
	062 Move X0, 0x18CD000
	063 Move X0, [X0+728]
	064 Call 0x1C17D08
	065 Move X1, X0
	066 Move X0, X19
	067 Move X2, X31
	068 Call ArgumentNullException..ctor, X0, X1
	069 Move X0, X19
	070 Move X1, X20
	071 Call 0x1C17DEC

Method: System.Void SetTarget(T target)

Disassembly:
	0x02851520 LDR X8, [X8 + 0xC0]
	0x02851524 LDR X3, [X8 + 0x50]
	0x02851528 LDR X8, [X3]

ISIL:
	001 Add X0, X0, 16
	002 Move X2, X31
	003 Call GCHandle.set_Target, X0, X1
	004 Return 

Method: System.Boolean TryGetTarget(out T target)

Disassembly:
	0x0285152C BLR X8
	0x02851530 ADD X0, X20, 0x18
	0x02851534 MOV X1, X21
	0x02851538 MOV X2, X31
	0x0285153C BL 0x1C24138
	0x02851540 CBZ X0, 0x285154C
	0x02851544 MOV W0, W31
	0x02851548 B 0x2851584
	0x0285154C LDR X2, [X20 + 0x10]
	0x02851550 CBZ X2, 0x2851598
	0x02851554 LDR X8, [X19 + 0x20]
	0x02851558 ADD X3, X31, 0x8
	0x0285155C ADD X4, X31, 0x1C
	0x02851560 LDR X8, [X8 + 0xC0]
	0x02851564 LDR X1, [X8 + 0x48]
	0x02851568 LDR X0, [X1]
	0x0285156C STR X21, [X31 + 0x8]
	0x02851570 LDR X8, [X1 + 0x10]
	0x02851574 BLR X8
	0x02851578 LDRB W8, [X31 + 0x1C]
	0x0285157C CMP W8, 0x0
	0x02851580 CSET W0, NE
	0x02851584 LDP X20, X19, [X31 + 0x30]
	0x02851588 LDP X22, X21, [X31 + 0x20]
	0x0285158C LDR X30, [X31 + 0x10]
	0x02851590 ADD X31, X31, 0x40
	0x02851594 RET
	0x02851598 BL 0x1C16F20
	0x0285159C STR X30, [X31 - 0x20]!
	0x028515A0 STP X20, X19, [X31 + 0x10]
	0x028515A4 MOV X20, X0
	0x028515A8 LDR X0, [X0 + 0x10]
	0x028515AC CBZ X0, 0x2851650
	0x028515B0 LDR X8, [X1 + 0x20]
	0x028515B4 MOV X19, X1
	0x028515B8 LDR X8, [X8 + 0xC0]
	0x028515BC LDR X1, [X8 + 0x20]
	0x028515C0 LDR X8, [X1]
	0x028515C4 BLR X8
	0x028515C8 CBZ X0, 0x2851650
	0x028515CC MOV X1, X31
	0x028515D0 BL 0x33ED11C
	0x028515D4 TBZ X0, 0x0, 0x2851644
	0x028515D8 LDR X0, [X20 + 0x10]
	0x028515DC CBZ X0, 0x2851650
	0x028515E0 LDR X8, [X19 + 0x20]
	0x028515E4 LDR X8, [X8 + 0xC0]
	0x028515E8 LDR X1, [X8 + 0x20]
	0x028515EC LDR X8, [X1]
	0x028515F0 BLR X8
	0x028515F4 CBZ X0, 0x2851650
	0x028515F8 LDR X8, [X19 + 0x20]
	0x028515FC MOV X2, X0
	0x02851600 ADD X4, X31, 0x8
	0x02851604 MOV X3, X31
	0x02851608 LDR X8, [X8 + 0xC0]
	0x0285160C LDR X1, [X8 + 0x68]
	0x02851610 LDR X0, [X1]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Add X20, X0, 16
	007 Move X19, X1
	008 Move X0, X20
	009 Move X1, X31
	010 Move X21, X2
	011 Call GCHandle.get_IsAllocated, X0
	012 Move TEMP, X0
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfNotEqual {41}
	016 Move X0, X20
	017 Move X1, X31
	018 Call GCHandle.get_Target, X0
	019 Move X8, [X21+32]
	020 Move X20, X0
	021 Move X8, [X8+192]
	022 Move X22, [X8]
	023 Move W8, [X22+309]
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {31}
	028 Move X0, X22
	029 Call 0x1C5D684
	030 Move X22, X0
	031 Compare X20, 0
	032 JumpIfEqual {43}
	033 Move X0, X20
	034 Move X1, X22
	035 Call 0x1C17E00
	036 Compare X0, 0
	037 JumpIfNotEqual {44}
	038 Move X0, X20
	039 Move X1, X22
	040 Call 0x1C181E0
	041 Move W0, W31
	042 Move [X19], X31
	043 Move X0, X31
	044 Move [X19], X0
	045 Move X8, [X21+32]
	046 Move X8, [X8+192]
	047 Move X21, [X8]
	048 Move W8, [X21+309]
	049 Move TEMP, X8
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {56}
	053 Move X0, X21
	054 Call 0x1C5D684
	055 Move X21, X0
	056 Compare X20, 0
	057 JumpIfEqual {63}
	058 Move X0, X20
	059 Move X1, X21
	060 Call 0x1C17E00
	061 Compare X0, 0
	062 JumpIfEqual {72}
	063 Move X8, [X19]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 NotImplemented "Instruction CSET not yet implemented."
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X22, [X31+16]
	069 Move X21, [X31+24]
	070 Move X30, [X31+48]
	071 Return X0
	072 Move X0, X20
	073 Move X1, X21
	074 Call 0x1C181E0

Method: System.Void Finalize()

Disassembly:
	0x02851614 LDR X8, [X1 + 0x10]
	0x02851618 BLR X8
	0x0285161C LDR X0, [X31 + 0x8]
	0x02851620 CBZ X0, 0x2851650
	0x02851624 LDR X8, [X19 + 0x20]
	0x02851628 LDR X8, [X8 + 0xC0]
	0x0285162C LDR X1, [X8 + 0x70]
	0x02851630 LDR X8, [X1]
	0x02851634 BLR X8
	0x02851638 CBZ X0, 0x2851644
	0x0285163C MOV X1, X31
	0x02851640 BL 0x32C2440
	0x02851644 LDP X20, X19, [X31 + 0x10]
	0x02851648 LDR X30, [X31], #0x20
	0x0285164C RET
	0x02851650 BL 0x1C16F20
	0x02851654 SUB X31, X31, 0x80
	0x02851658 STR X30, [X31 + 0x60]
	0x0285165C STP X20, X19, [X31 + 0x70]
	0x02851660 MOVI V0.2D, 0x0
	0x02851664 STP V0, V0, [X31 + 0x30]
	0x02851668 STR V0, [X31 + 0x2]
	0x0285166C STR X31, [X31 + 0x50]
	0x02851670 STR X0, [X31 + 0x40]
	0x02851674 LDR X8, [X1 + 0x20]
	0x02851678 MOV X19, X1
	0x0285167C LDR X8, [X8 + 0xC0]
	0x02851680 LDR X0, [X8 + 0x88]
	0x02851684 LDRB W8, [X0 + 0x135]
	0x02851688 TBNZ X8, 0x0, 0x2851690
	0x0285168C BL 0x1C5C684
	0x02851690 LDR W8, [X0 + 0xE0]
	0x02851694 CBNZ W8, 0x285169C
	0x02851698 BL 0x1C16DFC
	0x0285169C LDR X8, [X19 + 0x20]
	0x028516A0 LDR X8, [X8 + 0xC0]
	0x028516A4 LDR X0, [X8 + 0x80]
	0x028516A8 ADD X8, X31, 0x8
	0x028516AC LDR X9, [X0]
	0x028516B0 BLR X9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Add X0, X0, 16
	007 Move X1, X31
	008 Call GCHandle.Free, X0
	009 Move X20, X31
	010 Compare X19, 0
	011 JumpIfEqual {22}
	012 Move X0, X19
	013 Move X1, X31
	014 Call Object.Finalize, X0
	015 Compare X20, 0
	016 JumpIfNotEqual {23}
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+32]
	020 Move X21, [X31+40]
	021 Return 
	022 Call 0x1C17F20
	023 Move X0, X20
	024 Call 0x1C17F18
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X21, X0
	027 Move X0, X21
	028 Call 0x3EB2AD0
	029 Move X20, [X0]
	030 Call 0x3EB2AE0
	031 Move X20, X31
	032 Move X21, X0
	033 Compare X19, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17F20
	036 Move X0, X19
	037 Move X1, X31
	038 Call Object.Finalize, X0
	039 Compare X20, 0
	040 JumpIfNotEqual {43}
	041 Move X0, X21
	042 Call 0x1D2D690
	043 Move X0, X20
	044 Call 0x1C17F18
	045 Call 0x1991590

