Type: System.Buffer

Method: System.Boolean InternalBlockCopy(System.Array src, System.Int32 srcOffsetBytes, System.Array dst, System.Int32 dstOffsetBytes, System.Int32 byteCount)

Disassembly:
	0x033A9750 BLR X9

ISIL:
	001 Call 0x1C3AC44
	002 Return X0

Method: System.Int32 IndexOfByte(System.Byte* src, System.Byte value, System.Int32 index, System.Int32 count)

Disassembly:
	0x033A9754 CBZ X0, 0x33A9190
	0x033A9758 MOV X1, X31
	0x033A975C MOV X29, X0
	0x033A9760 BL 0x3396C08
	0x033A9764 TBZ X0, 0x0, 0x33A9780
	0x033A9768 LDR X8, [X29]
	0x033A976C MOV X0, X29
	0x033A9770 LDR X9, [X8 + 0x428]
	0x033A9774 LDR X1, [X8 + 0x430]
	0x033A9778 BLR X9
	0x033A977C MOV X29, X0
	0x033A9780 CBZ X23, 0x33A9190
	0x033A9784 LDR W8, [X23 + 0x18]
	0x033A9788 CMP X25, X8
	0x033A978C B.CS 0x33A9F8C
	0x033A9790 LDR X8, [X24]
	0x033A9794 CBZ X8, 0x33A9190
	0x033A9798 LDR W9, [X8 + 0x18]
	0x033A979C CMP W19, W9
	0x033A97A0 B.CS 0x33A9F8C
	0x033A97A4 CBZ X26, 0x33A9190
	0x033A97A8 ADD X8, X8, X28, 0x2, LSL
	0x033A97AC LDRSW X8, [X8 + 0x20]
	0x033A97B0 LDR W9, [X26 + 0x18]
	0x033A97B4 CMP W8, W9
	0x033A97B8 B.CS 0x33A9F8C
	0x033A97BC LDR X0, [X22]
	0x033A97C0 ADD X8, X26, X8, 0x3, LSL
	0x033A97C4 LDR X21, [X8 + 0x20]
	0x033A97C8 LDR W9, [X0 + 0xE0]
	0x033A97CC CBNZ W9, 0x33A97D4
	0x033A97D0 BL 0x1C16DFC
	0x033A97D4 MOV X0, X29
	0x033A97D8 MOV X1, X21
	0x033A97DC MOV X2, X31
	0x033A97E0 BL 0x3395194
	0x033A97E4 TBNZ X0, 0x0, 0x33A9B20
	0x033A97E8 LDR W8, [X31 + 0x48]
	0x033A97EC TBZ X8, 0x12, 0x33A985C
	0x033A97F0 LDR W8, [X23 + 0x18]
	0x033A97F4 CMP X25, X8
	0x033A97F8 B.CS 0x33A9F8C
	0x033A97FC LDR X9, [X24]
	0x033A9800 CBZ X9, 0x33A9190
	0x033A9804 LDR W8, [X9 + 0x18]
	0x033A9808 CMP W19, W8
	0x033A980C B.CS 0x33A9F8C
	0x033A9810 LDR X8, [X31 + 0x58]
	0x033A9814 LDR X8, [X8]
	0x033A9818 CBZ X8, 0x33A9190
	0x033A981C ADD X9, X9, X28, 0x2, LSL
	0x033A9820 LDRSW X9, [X9 + 0x20]
	0x033A9824 LDR W10, [X8 + 0x18]
	0x033A9828 CMP W9, W10
	0x033A982C B.CS 0x33A9F8C
	0x033A9830 LDR X0, [X22]
	0x033A9834 ADD X8, X8, X9, 0x3, LSL
	0x033A9838 LDR X21, [X8 + 0x20]
	0x033A983C LDR W9, [X0 + 0xE0]
	0x033A9840 CBNZ W9, 0x33A984C
	0x033A9844 BL 0x1C16DFC
	0x033A9848 LDR X0, [X22]
	0x033A984C LDR X8, [X0 + 0xB8]
	0x033A9850 LDR X8, [X8 + 0x18]
	0x033A9854 CMP X21, X8
	0x033A9858 B.EQ 0x33A9B20
	0x033A985C LDR W8, [X23 + 0x18]
	0x033A9860 CMP X25, X8
	0x033A9864 B.CS 0x33A9F8C
	0x033A9868 LDR X8, [X24]

ISIL:
	001 Add X8, X0, W2
	002 And X31, X8, 3
	003 Compare W3, 0
	004 JumpIfEqual {44}
	005 Move W9, [X8]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Add X8, X8, 1
	008 Subtract W3, W3, 1
	009 And X31, X8, 3
	010 Add W2, W2, 1
	011 NotImplemented "Instruction CMP not yet implemented."
	012 And W10, W1, 255
	013 Or W11, W31, 0x1010101
	014 Move W9, 256
	015 Multiply W10, W10, W11
	016 Move W11, 0xFEFF
	017 NotImplemented "Instruction MOVK not yet implemented."
	018 NotImplemented "Instruction MOVK not yet implemented."
	019 Move W12, [X8]
	020 Xor W13, W12, W10
	021 Add W14, W13, W11
	022 Xor W13, W14, W13
	023 NotImplemented "Instruction BICS not yet implemented."
	024 And W12, W12, 255
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W12, [X8+1]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move W12, [X8+2]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W12, [X8+3]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Subtract W12, W3, 4
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Add X8, X8, 4
	035 Move W3, W12
	036 Move W12, W3
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Add W9, W12, 1
	039 Move W10, [X8]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Subtract W9, W9, 1
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Add X8, X8, 1
	044 Move TEMP, 0
	045 Not TEMP
	046 Move W2, TEMP
	047 Subtract W2, W8, W0
	048 Subtract W8, W8, W0
	049 Add W2, W8, 1
	050 Subtract W8, W8, W0
	051 Add W2, W8, 2
	052 Subtract W8, W8, W0
	053 Add W2, W8, 3
	054 Move W0, W2
	055 Return X0

Method: System.Int32 _ByteLength(System.Array array)

Disassembly:
	0x033A986C CBZ X8, 0x33A9190

ISIL:
	001 Call 0x1C3AD78
	002 Return X0

Method: System.Void ZeroMemory(System.Byte* src, System.Int64 len)

Disassembly:
	0x033A9870 LDR W9, [X8 + 0x18]
	0x033A9874 CMP W19, W9
	0x033A9878 B.CS 0x33A9F8C
	0x033A987C LDR X9, [X31 + 0x58]
	0x033A9880 LDR X9, [X9]
	0x033A9884 CBZ X9, 0x33A9190
	0x033A9888 ADD X8, X8, X28, 0x2, LSL
	0x033A988C LDRSW X8, [X8 + 0x20]
	0x033A9890 LDR W10, [X9 + 0x18]
	0x033A9894 CMP W8, W10
	0x033A9898 B.CS 0x33A9F8C
	0x033A989C ADD X8, X9, X8, 0x3, LSL
	0x033A98A0 LDR X8, [X8 + 0x20]
	0x033A98A4 CBZ X8, 0x33A9B20
	0x033A98A8 LDR X0, [X22]
	0x033A98AC ADRP X9, 0xD54000
	0x033A98B0 LDR W8, [X0 + 0xE0]
	0x033A98B4 LDR X9, [X9 + 0x968]
	0x033A98B8 LDR X21, [X9]
	0x033A98BC CBNZ W8, 0x33A98C4
	0x033A98C0 BL 0x1C16DFC
	0x033A98C4 MOV X0, X21
	0x033A98C8 MOV X1, X31
	0x033A98CC BL 0x338C698
	0x033A98D0 MOV X1, X0
	0x033A98D4 MOV X0, X29
	0x033A98D8 MOV X2, X31
	0x033A98DC BL 0x3395194
	0x033A98E0 TBNZ X0, 0x0, 0x33A9B20
	0x033A98E4 CBZ X29, 0x33A9190
	0x033A98E8 MOV X0, X29
	0x033A98EC MOV X1, X31
	0x033A98F0 BL 0x3397374

ISIL:
	001 Subtract X9, X1, 1
	002 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	003 Move X9, -42717184
	004 Move X11, -42721280
	005 Move V4, [X9+126]
	006 Move V2, [X11+121]
	007 Add X10, X1, 1
	008 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	009 Move TEMP, 1
	010 Not TEMP
	011 Move X12, TEMP
	012 Move X8, X31
	013 NotImplemented "Instruction MOVI not yet implemented."
	014 And X9, X10, 0xFFFFFFFF
	015 NotImplemented "Instruction INVALID not yet implemented."
	016 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	017 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	018 Or V5, V5, V2
	019 NotImplemented "Instruction INVALID not yet implemented."
	020 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	021 NotImplemented "Instruction INVALID not yet implemented."
	022 Move W10, S6
	023 Move TEMP, X10
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfNotEqual {29}
	027 Move X10, D5
	028 Move [X10], W31
	029 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	030 Move TEMP, X10
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {36}
	034 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	035 Move [X10], W31
	036 Add X8, X8, 2
	037 NotImplemented "Instruction CMP not yet implemented."
	038 NotImplemented "Instruction INVALID not yet implemented."
	039 Return 

Method: System.Void Memcpy(System.Byte* pDest, System.Int32 destIndex, System.Byte[] src, System.Int32 srcIndex, System.Int32 len)

Disassembly:
	0x033A98F4 LDR W8, [X23 + 0x18]
	0x033A98F8 CMP X25, X8
	0x033A98FC B.CS 0x33A9F8C
	0x033A9900 LDR X8, [X24]
	0x033A9904 CBZ X8, 0x33A9190
	0x033A9908 LDR W9, [X8 + 0x18]
	0x033A990C CMP W19, W9
	0x033A9910 B.CS 0x33A9F8C
	0x033A9914 ADD X8, X8, X28, 0x2, LSL
	0x033A9918 LDRSW X8, [X8 + 0x20]
	0x033A991C LDR W9, [X26 + 0x18]
	0x033A9920 CMP W8, W9

ISIL:
	001 Compare W4, 0
	002 JumpIfEqual {9}
	003 Compare X2, 0
	004 JumpIfEqual {10}
	005 Move W8, [X2+24]
	006 Compare W8, 0
	007 JumpIfEqual {10}
	008 Add X8, X2, 32
	009 Return 
	010 Move X8, X31
	011 Add X0, X0, W1
	012 Add X1, X8, W3
	013 Move W2, W4

Method: System.Void InternalMemcpy(System.Byte* dest, System.Byte* src, System.Int32 count)

Disassembly:
	0x033A9A04 ADRP X22, 0xD4A000

ISIL:
	001 Call 0x1C3ADA8
	002 Return 

Method: System.Int32 ByteLength(System.Array array)

Disassembly:
	0x033A9A08 LDR X22, [X22 + 0x6C0]
	0x033A9A0C TBNZ X0, 0x0, 0x33A9B20
	0x033A9A10 B 0x33A9B30
	0x033A9A14 ADRP X22, 0xD4A000
	0x033A9A18 LDR X22, [X22 + 0x6C0]
	0x033A9A1C TBNZ X0, 0x0, 0x33A9B20
	0x033A9A20 LDR W8, [X23 + 0x18]
	0x033A9A24 CMP X25, X8
	0x033A9A28 B.CS 0x33A9F8C
	0x033A9A2C LDR X8, [X24]
	0x033A9A30 CBZ X8, 0x33A9190
	0x033A9A34 LDR W9, [X8 + 0x18]
	0x033A9A38 CMP W19, W9
	0x033A9A3C B.CS 0x33A9F8C
	0x033A9A40 ADD X8, X8, X28, 0x2, LSL
	0x033A9A44 LDRSW X8, [X8 + 0x20]
	0x033A9A48 LDR W9, [X26 + 0x18]
	0x033A9A4C CMP W8, W9
	0x033A9A50 B.CS 0x33A9F8C
	0x033A9A54 LDR X9, [X29]
	0x033A9A58 ADD X8, X26, X8, 0x3, LSL
	0x033A9A5C LDR X1, [X8 + 0x20]
	0x033A9A60 MOV X0, X29
	0x033A9A64 LDR X8, [X9 + 0x2A8]
	0x033A9A68 LDR X2, [X9 + 0x2B0]
	0x033A9A6C BLR X8
	0x033A9A70 TBNZ X0, 0x0, 0x33A9B20
	0x033A9A74 LDR W8, [X23 + 0x18]
	0x033A9A78 CMP X25, X8
	0x033A9A7C B.CS 0x33A9F8C
	0x033A9A80 LDR X8, [X24]
	0x033A9A84 CBZ X8, 0x33A9190
	0x033A9A88 LDR W9, [X8 + 0x18]
	0x033A9A8C CMP W19, W9
	0x033A9A90 B.CS 0x33A9F8C
	0x033A9A94 ADD X8, X8, X28, 0x2, LSL
	0x033A9A98 LDRSW X8, [X8 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X0, 0
	004 JumpIfEqual {13}
	005 Call 0x1C3AD78
	006 Move TEMP, X0
	007 And TEMP, TEMP, -2147483648
	008 Compare TEMP, -2147483648
	009 JumpIfEqual {25}
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return X0
	013 Move X0, 0xD50000
	014 Move X0, [X0+1320]
	015 Call 0x1C17D08
	016 Call 0x1C17F10
	017 Move X19, X0
	018 Move X0, 0xD73000
	019 Move X0, [X0+1600]
	020 Call 0x1C17D08
	021 Move X1, X0
	022 Move X0, X19
	023 Move X2, X31
	024 Call ArgumentNullException..ctor, X0, X1
	025 Move X0, 0xD53000
	026 Move X0, [X0+1400]
	027 Call 0x1C17D08
	028 Call 0x1C17F10
	029 Move X19, X0
	030 Move X0, 0xD83000
	031 Move X0, [X0+3440]
	032 Call 0x1C17D08
	033 Move X1, X0
	034 Move X0, X19
	035 Move X2, X31
	036 Call ArgumentException..ctor, X0, X1
	037 Move X0, 0xD83000
	038 Move X0, [X0+3448]
	039 Call 0x1C17D08
	040 Move X1, X0
	041 Move X0, X19
	042 Call 0x1C17DEC

Method: System.Void BlockCopy(System.Array src, System.Int32 srcOffset, System.Array dst, System.Int32 dstOffset, System.Int32 count)

Disassembly:
	0x033A9A9C LDR W9, [X26 + 0x18]
	0x033A9AA0 CMP W8, W9
	0x033A9AA4 B.CS 0x33A9F8C
	0x033A9AA8 ADD X8, X26, X8, 0x3, LSL
	0x033A9AAC LDR X0, [X8 + 0x20]
	0x033A9AB0 CBZ X0, 0x33A9190
	0x033A9AB4 MOV X1, X31
	0x033A9AB8 BL 0x3397198
	0x033A9ABC TBZ X0, 0x0, 0x33A9B30
	0x033A9AC0 LDR W8, [X23 + 0x18]
	0x033A9AC4 CMP X25, X8
	0x033A9AC8 B.CS 0x33A9F8C
	0x033A9ACC LDR X9, [X24]
	0x033A9AD0 CBZ X9, 0x33A9190
	0x033A9AD4 LDR W8, [X9 + 0x18]
	0x033A9AD8 CMP W19, W8
	0x033A9ADC B.CS 0x33A9F8C
	0x033A9AE0 LDR X8, [X31 + 0x58]
	0x033A9AE4 LDR X8, [X8]
	0x033A9AE8 CBZ X8, 0x33A9190
	0x033A9AEC ADD X9, X9, X28, 0x2, LSL
	0x033A9AF0 LDRSW X9, [X9 + 0x20]
	0x033A9AF4 LDR W10, [X8 + 0x18]
	0x033A9AF8 CMP W9, W10
	0x033A9AFC B.CS 0x33A9F8C
	0x033A9B00 LDR X10, [X29]
	0x033A9B04 ADD X8, X8, X9, 0x3, LSL
	0x033A9B08 LDR X1, [X8 + 0x20]
	0x033A9B0C MOV X0, X29
	0x033A9B10 LDR X8, [X10 + 0x868]
	0x033A9B14 LDR X2, [X10 + 0x870]
	0x033A9B18 BLR X8
	0x033A9B1C TBZ X0, 0x0, 0x33A9B30
	0x033A9B20 ADD W19, W19, 0x1
	0x033A9B24 CMP W20, W19
	0x033A9B28 B.NE 0x33A972C
	0x033A9B2C MOV W19, W20
	0x033A9B30 LDR X28, [X31 + 0x58]
	0x033A9B34 ADRP X24, 0xD7D000
	0x033A9B38 LDR X24, [X24 + 0x538]
	0x033A9B3C B 0x33A9B44
	0x033A9B40 MOV W19, W31
	0x033A9B44 LDR X0, [X22]
	0x033A9B48 LDR X20, [X31 + 0x40]
	0x033A9B4C LDR W8, [X0 + 0xE0]
	0x033A9B50 CBNZ W8, 0x33A9B58
	0x033A9B54 BL 0x1C16DFC
	0x033A9B58 LDR X0, [X31 + 0x50]
	0x033A9B5C MOV X1, X31
	0x033A9B60 MOV X2, X31
	0x033A9B64 BL 0x3395F0C
	0x033A9B68 TBZ X0, 0x0, 0x33A9D14
	0x033A9B6C LDR W8, [X27 + 0x18]
	0x033A9B70 SUB W8, W8, 0x1
	0x033A9B74 CMP W19, W8
	0x033A9B78 B.NE 0x33A9D14
	0x033A9B7C LDR X8, [X28]
	0x033A9B80 LDR X27, [X31 + 0x38]
	0x033A9B84 CBZ X8, 0x33A9190
	0x033A9B88 MOV W9, W19
	0x033A9B8C SBFM X9, X9, 0x3D, 0x1F
	0x033A9B90 ADD X20, X9, 0x20
	0x033A9B94 LDR W8, [X8 + 0x18]
	0x033A9B98 CMP W19, W8
	0x033A9B9C B.GE 0x33A9D24
	0x033A9BA0 LDR X0, [X31 + 0x50]
	0x033A9BA4 CBZ X0, 0x33A9190
	0x033A9BA8 MOV X1, X31
	0x033A9BAC BL 0x3397374
	0x033A9BB0 CBZ X26, 0x33A9190
	0x033A9BB4 LDR W8, [X26 + 0x18]
	0x033A9BB8 CMP W19, W8
	0x033A9BBC B.CS 0x33A9F8C
	0x033A9BC0 ADRP X8, 0xD4A000
	0x033A9BC4 LDR X8, [X8 + 0x6C0]
	0x033A9BC8 MOV W22, W0
	0x033A9BCC LDR X21, [X26, X20, LSL]
	0x033A9BD0 LDR X0, [X8]
	0x033A9BD4 LDR W8, [X0 + 0xE0]
	0x033A9BD8 CBNZ W8, 0x33A9BE0
	0x033A9BDC BL 0x1C16DFC
	0x033A9BE0 MOV X0, X21
	0x033A9BE4 MOV X1, X31
	0x033A9BE8 MOV X2, X31
	0x033A9BEC BL 0x3395194
	0x033A9BF0 TBZ X22, 0x0, 0x33A9C7C
	0x033A9BF4 TBNZ X0, 0x0, 0x33A9D1C
	0x033A9BF8 LDR X8, [X28]
	0x033A9BFC CBZ X8, 0x33A9190
	0x033A9C00 LDR W9, [X8 + 0x18]
	0x033A9C04 CMP W19, W9
	0x033A9C08 B.CS 0x33A9F8C
	0x033A9C0C ADRP X9, 0xD82000
	0x033A9C10 LDR X9, [X9 + 0x538]
	0x033A9C14 LDR X22, [X8, X20, LSL]
	0x033A9C18 LDR X0, [X9]
	0x033A9C1C LDR W9, [X0 + 0xE0]
	0x033A9C20 CBNZ W9, 0x33A9C28
	0x033A9C24 BL 0x1C16DFC
	0x033A9C28 LDR X8, [X31 + 0x50]
	0x033A9C2C ADRP X9, 0xD73000
	0x033A9C30 LDR X8, [X8]
	0x033A9C34 LDR X9, [X9 + 0x4E8]
	0x033A9C38 LDRB W10, [X8 + 0x130]
	0x033A9C3C LDR X1, [X9]
	0x033A9C40 LDRB W9, [X1 + 0x130]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Compare X0, 0
	008 JumpIfEqual {52}
	009 Move X21, X2
	010 Compare X2, 0
	011 JumpIfEqual {59}
	012 Move W22, W1
	013 Move TEMP, X1
	014 And TEMP, TEMP, -2147483648
	015 Compare TEMP, -2147483648
	016 JumpIfEqual {71}
	017 Move W19, W3
	018 Move TEMP, X3
	019 And TEMP, TEMP, -2147483648
	020 Compare TEMP, -2147483648
	021 JumpIfEqual {78}
	022 Move W20, W4
	023 Move TEMP, X4
	024 And TEMP, TEMP, -2147483648
	025 Compare TEMP, -2147483648
	026 JumpIfEqual {85}
	027 Move W1, W22
	028 Move X2, X21
	029 Move W3, W19
	030 Move W4, W20
	031 Move X23, X0
	032 Call 0x1C3AC44
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {45}
	037 Move X0, X23
	038 Call Buffer.ByteLength, X0
	039 Subtract W8, W0, W20
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X0, X21
	042 Call Buffer.ByteLength, X0
	043 Subtract W8, W0, W20
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X30, [X31+48]
	050 Move X23, [X31+56]
	051 Return 
	052 Move X0, 0xD50000
	053 Move X0, [X0+1320]
	054 Call 0x1C17D08
	055 Call 0x1C17F10
	056 Move X19, X0
	057 Move X0, 0xD53000
	058 Move X0, [X0+1944]
	059 Move X0, 0xD50000
	060 Move X0, [X0+1320]
	061 Call 0x1C17D08
	062 Call 0x1C17F10
	063 Move X19, X0
	064 Move X0, 0xD53000
	065 Move X0, [X0+1952]
	066 Call 0x1C17D08
	067 Move X1, X0
	068 Move X0, X19
	069 Move X2, X31
	070 Call ArgumentNullException..ctor, X0, X1
	071 Move X0, 0xD53000
	072 Move X0, [X0+1888]
	073 Call 0x1C17D08
	074 Call 0x1C17F10
	075 Move X19, X0
	076 Move X0, 0xD83000
	077 Move X0, [X0+3456]
	078 Move X0, 0xD53000
	079 Move X0, [X0+1888]
	080 Call 0x1C17D08
	081 Call 0x1C17F10
	082 Move X19, X0
	083 Move X0, 0xD83000
	084 Move X0, [X0+3464]
	085 Move X0, 0xD53000
	086 Move X0, [X0+1888]
	087 Call 0x1C17D08
	088 Call 0x1C17F10
	089 Move X19, X0
	090 Move X0, 0xD73000
	091 Move X0, [X0+1608]
	092 Call 0x1C17D08
	093 Move X20, X0
	094 Move X0, 0xD73000
	095 Move X0, [X0+1648]
	096 Call 0x1C17D08
	097 Move X2, X0
	098 Move X0, X19
	099 Move X1, X20
	100 Move X3, X31
	101 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	102 Move X0, 0xD53000
	103 Move X0, [X0+1400]
	104 Call 0x1C17D08
	105 Call 0x1C17F10
	106 Move X19, X0
	107 Move X0, 0xD73000
	108 Move X0, [X0+1888]
	109 Call 0x1C17D08
	110 Move X1, X0
	111 Move X0, X19
	112 Move X2, X31
	113 Call ArgumentException..ctor, X0, X1
	114 Move X0, 0xD83000
	115 Move X0, [X0+3472]
	116 Call 0x1C17D08
	117 Move X1, X0
	118 Move X0, X19
	119 Call 0x1C17DEC

Method: System.Void MemoryCopy(System.Void* source, System.Void* destination, System.Int64 destinationSizeInBytes, System.Int64 sourceBytesToCopy)

Disassembly:
	0x033A9C44 CMP W10, W9
	0x033A9C48 B.CC 0x33AAC34
	0x033A9C4C LDR X8, [X8 + 0xC8]
	0x033A9C50 ADD X8, X8, X9, 0x3, LSL
	0x033A9C54 LDUR X8, [X8 - 0x8]
	0x033A9C58 CMP X8, X1
	0x033A9C5C B.NE 0x33AAC34
	0x033A9C60 LDR X1, [X31 + 0x50]
	0x033A9C64 MOV X0, X22
	0x033A9C68 BL 0x33AAF74
	0x033A9C6C ADRP X22, 0xD4A000
	0x033A9C70 LDR X22, [X22 + 0x6C0]
	0x033A9C74 TBNZ X0, 0x0, 0x33A9D00
	0x033A9C78 B 0x33A9D24
	0x033A9C7C ADRP X22, 0xD4A000
	0x033A9C80 LDR X22, [X22 + 0x6C0]
	0x033A9C84 TBNZ X0, 0x0, 0x33A9D00
	0x033A9C88 LDR W8, [X26 + 0x18]
	0x033A9C8C CMP W19, W8
	0x033A9C90 B.CS 0x33A9F8C
	0x033A9C94 LDR X0, [X31 + 0x50]
	0x033A9C98 LDR X1, [X26, X20, LSL]
	0x033A9C9C LDR X8, [X0]
	0x033A9CA0 LDR X9, [X8 + 0x2A8]
	0x033A9CA4 LDR X2, [X8 + 0x2B0]
	0x033A9CA8 BLR X9
	0x033A9CAC TBNZ X0, 0x0, 0x33A9D00
	0x033A9CB0 LDR W8, [X26 + 0x18]
	0x033A9CB4 CMP W19, W8
	0x033A9CB8 B.CS 0x33A9F8C
	0x033A9CBC LDR X0, [X26, X20, LSL]
	0x033A9CC0 CBZ X0, 0x33A9190
	0x033A9CC4 MOV X1, X31
	0x033A9CC8 BL 0x3397198
	0x033A9CCC TBZ X0, 0x0, 0x33A9D24

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, X3
	009 Move X19, X1
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move X20, X0
	012 Move W0, 23
	013 Move X1, X31
	014 Call ThrowHelper.ThrowArgumentOutOfRangeException, X0
	015 Move X8, 1
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Or X22, X31, 0x1FFFFFFFF
	018 Move X23, INVALID
	019 Move TEMP, 0
	020 Not TEMP
	021 Move W2, TEMP
	022 Move X0, X19
	023 Move X1, X20
	024 Move X24, X21
	025 Call Buffer.Memmove, X0, X1, X2
	026 Add X21, X21, X22
	027 Subtract X20, X20, 1
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Subtract X19, X19, 1
	030 Move X0, X19
	031 Move X1, X20
	032 Move W2, W21
	033 Move X20, [X31+48]
	034 Move X19, [X31+56]
	035 Move X22, [X31+32]
	036 Move X21, [X31+40]
	037 Move X24, [X31+16]
	038 Move X23, [X31+24]
	039 Move X30, [X31+64]

Method: System.Void memcpy4(System.Byte* dest, System.Byte* src, System.Int32 size)

Disassembly:
	0x033A9CF8 BLR X8
	0x033A9CFC TBZ X0, 0x0, 0x33A9D24
	0x033A9D00 LDR X8, [X28]
	0x033A9D04 ADD W19, W19, 0x1
	0x033A9D08 ADD X20, X20, 0x8
	0x033A9D0C CBNZ X8, 0x33A9B94
	0x033A9D10 B 0x33A9190
	0x033A9D14 LDR X27, [X31 + 0x38]
	0x033A9D18 B 0x33A9D28
	0x033A9D1C ADRP X22, 0xD4A000
	0x033A9D20 LDR X22, [X22 + 0x6C0]
	0x033A9D24 LDR X20, [X31 + 0x40]
	0x033A9D28 LDR X8, [X28]
	0x033A9D2C CBZ X8, 0x33A9190
	0x033A9D30 LDR W8, [X8 + 0x18]
	0x033A9D34 CMP W19, W8
	0x033A9D38 B.NE 0x33A9DF8
	0x033A9D3C CBZ X23, 0x33A9190
	0x033A9D40 LDR W8, [X23 + 0x18]
	0x033A9D44 LDR X21, [X31 + 0x50]
	0x033A9D48 CMP X25, X8
	0x033A9D4C B.CS 0x33A9F8C
	0x033A9D50 CMP W20, W8
	0x033A9D54 B.CS 0x33A9F8C
	0x033A9D58 ADD X8, X23, 0x20
	0x033A9D5C LDR X9, [X8, X25, LSL #3]
	0x033A9D60 MOV W10, W20
	0x033A9D64 SXTW X19, W10
	0x033A9D68 STR X9, [X8, X19, LSL #3]
	0x033A9D6C LDR X8, [X31 + 0x30]
	0x033A9D70 CBZ X8, 0x33A9190

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Move W8, [X1]
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Subtract W2, W2, 16
	005 Move [X0], W8
	006 Move W8, [X1+4]
	007 Move [X0+4], W8
	008 Move W8, [X1+8]
	009 Move [X0+8], W8
	010 Move W8, [X1+12]
	011 Add X1, X1, 16
	012 Move [X0+12], W8
	013 Add X0, X0, 16
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move W8, [X1+4]
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Subtract W2, W2, 4
	018 Move [X0+4], W8
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Add W8, W2, 1
	021 Move W9, [X1+1]
	022 Subtract W8, W8, 1
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move [X0+1], W9
	025 Return 

Method: System.Void memcpy2(System.Byte* dest, System.Byte* src, System.Int32 size)

Disassembly:
	0x033A9D74 LDR X20, [X31 + 0x30]
	0x033A9D78 CBZ X21, 0x33A9D90
	0x033A9D7C LDR X8, [X20]
	0x033A9D80 MOV X0, X21
	0x033A9D84 LDR X1, [X8 + 0x40]
	0x033A9D88 BL 0x1C16E00
	0x033A9D8C CBZ X0, 0x33AAC28
	0x033A9D90 LDR W8, [X20 + 0x18]
	0x033A9D94 LDR X9, [X31 + 0x40]
	0x033A9D98 CMP W9, W8
	0x033A9D9C B.CS 0x33A9F8C
	0x033A9DA0 ADD X8, X20, X19, 0x3, LSL
	0x033A9DA4 STR X21, [X8 + 0x20]
	0x033A9DA8 LDR W8, [X27 + 0x18]
	0x033A9DAC CMP X25, X8
	0x033A9DB0 B.CS 0x33A9F8C
	0x033A9DB4 LDR X9, [X31 + 0x28]
	0x033A9DB8 LDR X20, [X31 + 0x40]
	0x033A9DBC LDR X22, [X9]
	0x033A9DC0 CBZ X22, 0x33A9DDC
	0x033A9DC4 LDR X8, [X27]
	0x033A9DC8 MOV X0, X22
	0x033A9DCC LDR X1, [X8 + 0x40]
	0x033A9DD0 BL 0x1C16E00
	0x033A9DD4 CBZ X0, 0x33AAC28
	0x033A9DD8 LDR X8, [X27 + 0x18]
	0x033A9DDC CMP W20, W8

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction LDRH not yet implemented."
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Subtract W2, W2, 8
	005 NotImplemented "Instruction STRH not yet implemented."
	006 NotImplemented "Instruction LDRH not yet implemented."
	007 NotImplemented "Instruction STRH not yet implemented."
	008 NotImplemented "Instruction LDRH not yet implemented."
	009 NotImplemented "Instruction STRH not yet implemented."
	010 NotImplemented "Instruction LDRH not yet implemented."
	011 Add X1, X1, 8
	012 NotImplemented "Instruction STRH not yet implemented."
	013 Add X0, X0, 8
	014 NotImplemented "Instruction CMP not yet implemented."
	015 NotImplemented "Instruction LDRH not yet implemented."
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Subtract W2, W2, 2
	018 NotImplemented "Instruction STRH not yet implemented."
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move W8, [X1]
	021 Move [X0], W8
	022 Return 

Method: System.Void memcpy1(System.Byte* dest, System.Byte* src, System.Int32 size)

Disassembly:
	0x033A9DE0 B.CS 0x33A9F8C
	0x033A9DE4 ADD X8, X27, X19, 0x3, LSL
	0x033A9DE8 STR X22, [X8 + 0x20]
	0x033A9DEC ADRP X22, 0xD4A000
	0x033A9DF0 LDR X22, [X22 + 0x6C0]
	0x033A9DF4 ADD W20, W20, 0x1
	0x033A9DF8 LDR W8, [X27 + 0x18]
	0x033A9DFC ADD X25, X25, 0x1
	0x033A9E00 CMP X25, W8, SXTW
	0x033A9E04 B.LT 0x33A91C4
	0x033A9E08 B 0x33A9E1C
	0x033A9E0C ADRP X22, 0xD4A000
	0x033A9E10 LDR X28, [X31 + 0x58]
	0x033A9E14 LDR X22, [X22 + 0x6C0]
	0x033A9E18 B 0x33A9B34
	0x033A9E1C CMP W20, 0x1
	0x033A9E20 B.EQ 0x33A9F90
	0x033A9E24 LDR X9, [X31 + 0x20]
	0x033A9E28 CBZ W20, 0x33AAC94
	0x033A9E2C LDR X21, [X31 + 0x30]
	0x033A9E30 CMP W20, 0x2
	0x033A9E34 B.LT 0x33AA038
	0x033A9E38 CBZ W8, 0x33A9F8C
	0x033A9E3C MOV W10, W20
	0x033A9E40 SUB X10, X10, 0x2
	0x033A9E44 MOV X19, X31
	0x033A9E48 MOV X9, X31
	0x033A9E4C MOV W29, W31
	0x033A9E50 ADD X12, X21, 0x28
	0x033A9E54 ADD X11, X23, 0x28
	0x033A9E58 STR X10, [X31 + 0x40]
	0x033A9E5C ADD X10, X27, 0x28
	0x033A9E60 STR W31, [X31 + 0x1C]
	0x033A9E64 STP X11, X12, [X31 + 0x48]
	0x033A9E68 STR X10, [X31 + 0x28]
	0x033A9E6C CBZ X23, 0x33A9190
	0x033A9E70 LDR X10, [X23 + 0x18]
	0x033A9E74 CMP W29, W10
	0x033A9E78 B.CS 0x33A9F8C

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Move W8, [X1]
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Subtract W2, W2, 8
	005 Move [X0], W8
	006 Move W8, [X1+1]
	007 Move [X0+1], W8
	008 Move W8, [X1+2]
	009 Move [X0+2], W8
	010 Move W8, [X1+3]
	011 Move [X0+3], W8
	012 Move W8, [X1+4]
	013 Move [X0+4], W8
	014 Move W8, [X1+5]
	015 Move [X0+5], W8
	016 Move W8, [X1+6]
	017 Move [X0+6], W8
	018 Move W8, [X1+7]
	019 Add X1, X1, 8
	020 Move [X0+7], W8
	021 Add X0, X0, 8
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move W8, [X1]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Subtract W2, W2, 2
	026 Move [X0], W8
	027 Move W8, [X1+1]
	028 Add X1, X1, 2
	029 Move [X0+1], W8
	030 Add X0, X0, 2
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move W8, [X1]
	033 Move [X0], W8
	034 Return 

Method: System.Void Memcpy(System.Byte* dest, System.Byte* src, System.Int32 len)

Disassembly:
	0x033A9924 B.CS 0x33A9F8C
	0x033A9928 ADRP X9, 0xD4A000
	0x033A992C LDR X9, [X9 + 0x6C0]
	0x033A9930 MOV W22, W0
	0x033A9934 ADD X8, X26, X8, 0x3, LSL
	0x033A9938 LDR X21, [X8 + 0x20]
	0x033A993C LDR X0, [X9]
	0x033A9940 LDR W9, [X0 + 0xE0]
	0x033A9944 CBNZ W9, 0x33A994C
	0x033A9948 BL 0x1C16DFC
	0x033A994C MOV X0, X21
	0x033A9950 MOV X1, X31
	0x033A9954 MOV X2, X31
	0x033A9958 BL 0x3395194
	0x033A995C TBZ X22, 0x0, 0x33A9A14
	0x033A9960 TBNZ X0, 0x0, 0x33A9E0C
	0x033A9964 LDR W8, [X23 + 0x18]
	0x033A9968 CMP X25, X8
	0x033A996C B.CS 0x33A9F8C
	0x033A9970 LDR X9, [X24]
	0x033A9974 CBZ X9, 0x33A9190
	0x033A9978 LDR W8, [X9 + 0x18]
	0x033A997C CMP W19, W8
	0x033A9980 B.CS 0x33A9F8C
	0x033A9984 LDR X8, [X31 + 0x58]
	0x033A9988 LDR X8, [X8]
	0x033A998C CBZ X8, 0x33A9190
	0x033A9990 ADD X9, X9, X28, 0x2, LSL
	0x033A9994 LDRSW X9, [X9 + 0x20]
	0x033A9998 LDR W10, [X8 + 0x18]
	0x033A999C CMP W9, W10
	0x033A99A0 B.CS 0x33A9F8C
	0x033A99A4 ADRP X10, 0xD82000
	0x033A99A8 LDR X10, [X10 + 0x538]
	0x033A99AC ADD X8, X8, X9, 0x3, LSL
	0x033A99B0 LDR X22, [X8 + 0x20]
	0x033A99B4 LDR X0, [X10]
	0x033A99B8 LDR W9, [X0 + 0xE0]
	0x033A99BC CBNZ W9, 0x33A99C4
	0x033A99C0 BL 0x1C16DFC
	0x033A99C4 ADRP X9, 0xD73000
	0x033A99C8 LDR X8, [X29]
	0x033A99CC LDR X9, [X9 + 0x4E8]
	0x033A99D0 LDRB W10, [X8 + 0x130]
	0x033A99D4 LDR X1, [X9]
	0x033A99D8 LDRB W9, [X1 + 0x130]
	0x033A99DC CMP W10, W9
	0x033A99E0 B.CC 0x33AAC3C
	0x033A99E4 LDR X8, [X8 + 0xC8]
	0x033A99E8 ADD X8, X8, X9, 0x3, LSL
	0x033A99EC LDUR X8, [X8 - 0x8]
	0x033A99F0 CMP X8, X1
	0x033A99F4 B.NE 0x33AAC3C
	0x033A99F8 MOV X0, X22
	0x033A99FC MOV X1, X29
	0x033A9A00 BL 0x33AAF74

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W21, W2
	007 Move X19, X1
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move X20, X0
	010 Or W8, W19, W20
	011 And X31, X8, 3
	012 Subtract W8, W21, 1
	013 And W9, W20, W19
	014 Move TEMP, X9
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {21}
	018 Move W9, [X19+1]
	019 Move W21, W8
	020 Move [X20+1], W9
	021 Move TEMP, X20
	022 And TEMP, TEMP, 2
	023 Compare TEMP, 2
	024 JumpIfNotEqual {33}
	025 Subtract W8, W21, 2
	026 Move TEMP, X19
	027 And TEMP, TEMP, 2
	028 Compare TEMP, 2
	029 JumpIfNotEqual {33}
	030 NotImplemented "Instruction LDRH not yet implemented."
	031 Move W21, W8
	032 NotImplemented "Instruction STRH not yet implemented."
	033 Or W8, W20, W19
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {55}
	038 Move TEMP, X8
	039 And TEMP, TEMP, 2
	040 Compare TEMP, 2
	041 JumpIfEqual {59}
	042 Move X0, X20
	043 Move X1, X19
	044 Move W2, W21
	045 Call Buffer.memcpy4, X0, X1, X2
	046 Move W8, [X20]
	047 Add X0, X31, 8
	048 Move X1, X31
	049 Move [X31+8], X8
	050 Call Interlocked.Read, X0
	051 Move X0, X20
	052 Move X1, X19
	053 Move W2, W21
	054 Call 0x1C3ADA8
	055 Move X0, X20
	056 Move X1, X19
	057 Move W2, W21
	058 Call Buffer.memcpy1, X0, X1, X2
	059 Move X0, X20
	060 Move X1, X19
	061 Move W2, W21
	062 Call Buffer.memcpy2, X0, X1, X2
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X30, [X31+16]
	066 Move X21, [X31+24]
	067 Add X31, X31, 48
	068 Return 

Method: System.Void Memmove(System.Byte* dest, System.Byte* src, System.UInt32 len)

Disassembly:
	0x033A9CD0 LDR X8, [X28]
	0x033A9CD4 CBZ X8, 0x33A9190
	0x033A9CD8 LDR W9, [X8 + 0x18]
	0x033A9CDC CMP W19, W9
	0x033A9CE0 B.CS 0x33A9F8C
	0x033A9CE4 LDR X0, [X31 + 0x50]
	0x033A9CE8 LDR X1, [X8, X20, LSL]
	0x033A9CEC LDR X9, [X0]
	0x033A9CF0 LDR X8, [X9 + 0x868]
	0x033A9CF4 LDR X2, [X9 + 0x870]

ISIL:
	001 Subtract X8, X0, X1
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move W8, W2
	004 Subtract X9, X1, X0
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Call Buffer.Memcpy, X0, X1, X2
	007 Return 
	008 Move X3, X31
	009 Call RuntimeImports.Memmove, X0, X1, X2
	010 Return 

Method: System.Void Memmove(ref T destination, ref T source, System.UInt64 elementCount)

Disassembly:
	0x021A1720 BL 0x21DC9D4
	0x021A1724 LDR X8, [X19 + 0x38]

ISIL:
	001 Move X3, X31
	002 Call Buffer.Memmove, X0, X1, X2
	003 Return 

