Type: System.Decimal/DecCalc

Method: System.UInt32 get_High()

Disassembly:
	0x033DBE8C B.MI 0x33DBED4
	0x033DBE90 MOVZ X0, 0x34DB

ISIL:
	001 Move W0, [X0+4]
	002 Return X0

Method: System.Void set_High(System.UInt32 value)

Disassembly:
	0x033DBE94 MOVK X0, 0xD7B60000
	0x033DBE98 MOV W11, W12

ISIL:
	001 Move [X0+4], W1
	002 Return 

Method: System.UInt32 get_Low()

Disassembly:
	0x033DBE9C MOVK X0, 0xDE82
	0x033DBEA0 ADD X11, X11, 0x1

ISIL:
	001 Move W0, [X0+8]
	002 Return X0

Method: System.Void set_Low(System.UInt32 value)

Disassembly:
	0x033DBEA4 ADD X12, X20, W12, 0x2, UXTW
	0x033DBEA8 MOVK X0, 0x431B0000

ISIL:
	001 Move [X0+8], W1
	002 Return 

Method: System.UInt32 get_Mid()

Disassembly:
	0x033DBEAC LDR W13, [X12]
	0x033DBEB0 SUB X11, X11, 0x1

ISIL:
	001 Move W0, [X0+12]
	002 Return X0

Method: System.Void set_Mid(System.UInt32 value)

Disassembly:
	0x033DBEB4 CMP X11, 0x0
	0x033DBEB8 MOV X14, X13

ISIL:
	001 Move [X0+12], W1
	002 Return 

Method: System.Boolean get_IsNegative()

Disassembly:
	0x033DBEBC BFM X14, X10, 0x20, 0x1F
	0x00000000 INVALID
	0x033DBEC4 UBFM X10, X10, 0x12, 0x3F

ISIL:
	001 Move W8, [X0]
	002 Move W0, W8
	003 ShiftRight W0, 31
	004 And W0, W0, 0x7FFFFFFF
	005 Return X0

Method: System.UInt64 get_Low64()

Disassembly:
	0x033DBEC8 STR W10, [X12], #0xFFFFFFFFFFFFFFFC
	0x033DBECC MADD W10, W10, W17, W13

ISIL:
	001 Move X0, [X0+8]
	002 Return X0

Method: System.Void set_Low64(System.UInt64 value)

Disassembly:
	0x033DBED0 B.GT 0x33DBEAC
	0x033DBED4 MOVZ W11, 0xA120

ISIL:
	001 Move [X0+8], X1
	002 Return 

Method: System.UInt32 GetExponent(System.Single f)

Disassembly:
	0x033DBED8 MOVK W11, 0x70000
	0x033DBEDC B 0x33DC0E4
	0x033DBEE0 LDR X0, [X15]

ISIL:
	001 Move W8, S0
	002 Move W0, W8
	003 ShiftRight W0, 23
	004 And W0, W0, 0x3FFFFFFF
	005 Return X0

Method: System.UInt32 GetExponent(System.Double d)

Disassembly:
	0x033DBEE4 LDR W8, [X0 + 0xE0]
	0x033DBEE8 CBNZ W8, 0x33DBF68
	0x033DBEEC BL 0x1C16DFC

ISIL:
	001 Move X8, D0
	002 Move X0, X8
	003 ShiftRight X0, 52
	004 And X0, X0, 0x3FFFFFFF
	005 Return X0

Method: System.UInt64 UInt32x32To64(System.UInt32 a, System.UInt32 b)

Disassembly:
	0x033DBEF0 ADRP X15, 0xD51000
	0x033DBEF4 MOVZ X30, 0x594B

ISIL:
	001 NotImplemented "Instruction UMADDL not yet implemented."
	002 Return X0

Method: System.Void UInt64x64To128(System.UInt64 a, System.UInt64 b, ref System.Decimal/DecCalc result)

Disassembly:
	0x033DBEF8 MOVZ X7, 0xF7CF
	0x033DBEFC MOVZ X6, 0xF5C3
	0x033DBF00 MOVZ X3, 0x5A53
	0x033DBF04 LDR X15, [X15 + 0xDE8]
	0x033DBF08 MOVK X30, 0x38860000
	0x033DBF0C MOVK X7, 0xE3530000
	0x033DBF10 MOVK X6, 0x5C280000
	0x033DBF14 MOVK X3, 0xA09B0000
	0x033DBF18 MOVK X30, 0xC5D6
	0x033DBF1C MOVK X7, 0x9BA5
	0x033DBF20 MOVK X6, 0xC28F
	0x033DBF24 ORR X5, X31, 0xCCCCCCCCCCCCCCCC
	0x033DBF28 ADRP X4, 0xFFFFFFFFFD7BB000
	0x033DBF2C MOVK X3, 0xB82F
	0x033DBF30 MOVZ W2, 0x1F00
	0x033DBF34 MOVZ W1, 0x6980
	0x033DBF38 MOVZ W17, 0xBDC0
	0x033DBF3C MOVZ W16, 0x7960
	0x033DBF40 MOVK X30, 0x346D0000
	0x033DBF44 MOVK X7, 0x20C40000
	0x033DBF48 MOVK X6, 0x28F50000
	0x033DBF4C MOVK X5, 0xCCCD
	0x033DBF50 ADD X4, X4, 0xA2E
	0x033DBF54 MOVK X3, 0x440000
	0x033DBF58 MOVK W2, 0xFA0A0000
	0x033DBF5C MOVK W1, 0xFF670000
	0x033DBF60 MOVK W17, 0xFFF00000
	0x033DBF64 MOVK W16, 0xFFFE0000
	0x033DBF68 ADD X8, X20, W21, 0x2, UXTW
	0x033DBF6C LDR W10, [X8]
	0x033DBF70 MOVZ W9, 0xCA6B
	0x033DBF74 MOVK W9, 0x6B5F0000
	0x033DBF78 SUBS W12, W21, 0x1
	0x033DBF7C MUL X9, X10, X9
	0x033DBF80 UBFM X9, X9, 0x36, 0x3F
	0x033DBF84 MADD W10, W9, W1, W10
	0x033DBF88 B.MI 0x33DBFD0
	0x033DBF8C MOVZ X0, 0x42BD
	0x033DBF90 MOVK X0, 0xE57A0000
	0x033DBF94 MOV W11, W12
	0x033DBF98 MOVK X0, 0x94D5
	0x033DBF9C ADD X11, X11, 0x1
	0x033DBFA0 ADD X12, X20, W12, 0x2, UXTW
	0x033DBFA4 MOVK X0, 0xD6BF0000
	0x033DBFA8 LDR W13, [X12]
	0x033DBFAC SUB X11, X11, 0x1
	0x033DBFB0 CMP X11, 0x0
	0x033DBFB4 MOV X14, X13
	0x033DBFB8 BFM X14, X10, 0x20, 0x1F
	0x00000000 INVALID
	0x033DBFC0 UBFM X10, X10, 0x17, 0x3F
	0x033DBFC4 STR W10, [X12], #0xFFFFFFFFFFFFFFFC
	0x033DBFC8 MADD W10, W10, W1, W13
	0x033DBFCC B.GT 0x33DBFA8
	0x033DBFD0 MOVZ W11, 0x4B40
	0x033DBFD4 MOVK W11, 0x4C0000
	0x033DBFD8 B 0x33DC0E4
	0x033DBFDC LDR X0, [X15]
	0x033DBFE0 LDR W8, [X0 + 0xE0]
	0x033DBFE4 CBNZ W8, 0x33DC064
	0x033DBFE8 BL 0x1C16DFC
	0x033DBFEC ADRP X15, 0xD51000
	0x033DBFF0 MOVZ X30, 0x594B
	0x033DBFF4 MOVZ X7, 0xF7CF
	0x033DBFF8 MOVZ X6, 0xF5C3
	0x033DBFFC MOVZ X3, 0x5A53
	0x033DC000 LDR X15, [X15 + 0xDE8]
	0x033DC004 MOVK X30, 0x38860000
	0x033DC008 MOVK X7, 0xE3530000
	0x033DC00C MOVK X6, 0x5C280000
	0x033DC010 MOVK X3, 0xA09B0000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X23, 0x1003000
	010 Move X22, 0xD52000
	011 Move W8, [X23+839]
	012 Move X22, [X22+3560]
	013 Move X19, X2
	014 Move X21, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xD52000
	021 Move X0, [X0+3560]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+839], W8
	025 Move X0, [X22]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {32}
	029 Call 0x1C17DFC
	030 Move X0, [X22]
	031 Move W8, [X0+224]
	032 And X9, X20, 0
	033 Move X11, X21
	034 ShiftRight X11, 32
	035 And X11, X11, 0x7FFFFFFF
	036 NotImplemented "Instruction UMADDL not yet implemented."
	037 Move X20, X20
	038 ShiftRight X20, 32
	039 And X20, X20, 0x7FFFFFFF
	040 Multiply X9, X11, X9
	041 Multiply X11, X11, X20
	042 Add X25, X10, X9
	043 And X23, X21, 0
	044 Add X21, X11, X9
	045 NotImplemented "Instruction CSET not yet implemented."
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Multiply X8, X23, X20
	050 Add X20, X25, X8
	051 Add X8, X21, X8
	052 Add X8, X8, X24
	053 NotImplemented "Instruction CINC not yet implemented."
	054 Move X8, X21
	055 ShiftRight X8, 32
	056 And X8, X8, 0x7FFFFFFF
	057 Compare X8, 0
	058 JumpIfNotEqual {75}
	059 Move X0, [X22]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move [X19+8], X20
	065 Move [X19+4], W21
	066 Move X20, [X31+48]
	067 Move X19, [X31+56]
	068 Move X22, [X31+32]
	069 Move X21, [X31+40]
	070 Move X24, [X31+16]
	071 Move X23, [X31+24]
	072 Move X30, [X31+64]
	073 Move X25, [X31+72]
	074 Return 
	075 Move X0, 0xD19000
	076 Move X0, [X0+2136]
	077 Call 0x1C17D08
	078 Call 0x1C17F10
	079 Move X19, X0
	080 Move X0, 0xD50000
	081 Move X0, [X0+4072]
	082 Call 0x1C17D08
	083 Move X1, X0
	084 Move X0, X19
	085 Move X2, X31
	086 Call OverflowException..ctor, X0, X1
	087 Move X0, 0xD52000
	088 Move X0, [X0+3768]
	089 Call 0x1C17D08
	090 Move X1, X0
	091 Move X0, X19
	092 Call 0x1C17DEC

Method: System.UInt32 Div96By32(ref System.Decimal/DecCalc/Buf12 bufNum, System.UInt32 den)

Disassembly:
	0x033DC014 MOVK X30, 0xC5D6
	0x033DC018 MOVK X7, 0x9BA5
	0x033DC01C MOVK X6, 0xC28F
	0x033DC020 ORR X5, X31, 0xCCCCCCCCCCCCCCCC
	0x033DC024 ADRP X4, 0xFFFFFFFFFD7BA000
	0x033DC028 MOVK X3, 0xB82F
	0x033DC02C MOVZ W2, 0x1F00
	0x033DC030 MOVZ W1, 0x6980
	0x033DC034 MOVZ W17, 0xBDC0
	0x033DC038 MOVZ W16, 0x7960
	0x033DC03C MOVK X30, 0x346D0000
	0x033DC040 MOVK X7, 0x20C40000
	0x033DC044 MOVK X6, 0x28F50000
	0x033DC048 MOVK X5, 0xCCCD
	0x033DC04C ADD X4, X4, 0xA2E
	0x033DC050 MOVK X3, 0x440000
	0x033DC054 MOVK W2, 0xFA0A0000
	0x033DC058 MOVK W1, 0xFF670000
	0x033DC05C MOVK W17, 0xFFF00000
	0x033DC060 MOVK W16, 0xFFFE0000
	0x033DC064 ADD X8, X20, W21, 0x2, UXTW
	0x033DC068 LDR W10, [X8]
	0x033DC06C MOVZ W9, 0x3B89

ISIL:
	001 Move W8, [X0+8]
	002 Compare W8, 0
	003 JumpIfEqual {16}
	004 NotImplemented "Instruction LDUR not yet implemented."
	005 Move W8, [X0]
	006 Move W9, W1
	007 NotImplemented "Instruction UDIV not yet implemented."
	008 NotImplemented "Instruction MSUB not yet implemented."
	009 Move X10, X8
	010 NotImplemented "Instruction BFM not yet implemented."
	011 Move [X0+4], X11
	012 Compare X10, 0
	013 JumpIfEqual {24}
	014 NotImplemented "Instruction UDIV not yet implemented."
	015 Move [X0], W9
	016 Move X8, [X0]
	017 Compare X8, 0
	018 JumpIfEqual {24}
	019 Move W9, W1
	020 NotImplemented "Instruction UDIV not yet implemented."
	021 Move [X0], X9
	022 NotImplemented "Instruction MSUB not yet implemented."
	023 Return X0
	024 Move W0, W31
	025 Return X0

Method: System.Boolean Div96ByConst(ref System.UInt64 high64, ref System.UInt32 low, System.UInt32 pow)

Disassembly:
	0x033DC090 ADD X12, X20, W12, 0x2, UXTW
	0x033DC094 LDR W13, [X12]
	0x033DC098 SUB X11, X11, 0x1
	0x033DC09C CMP X11, 0x0
	0x033DC0A0 MOV X14, X13
	0x033DC0A4 BFM X14, X10, 0x20, 0x1F
	0x00000000 INVALID
	0x033DC0AC UBFM X10, X10, 0x1A, 0x3F
	0x033DC0B0 STR W10, [X12], #0xFFFFFFFFFFFFFFFC
	0x033DC0B4 MADD W10, W10, W2, W13
	0x033DC0B8 B.GT 0x33DC094
	0x033DC0BC MOVZ W11, 0xF080
	0x033DC0C0 MOVK W11, 0x2FA0000
	0x033DC0C4 B 0x33DC0E4
	0x033DC0C8 MOVZ W11, 0x32
	0x033DC0CC B 0x33DC0E4

ISIL:
	001 Move X10, [X0]
	002 Move W8, [X1]
	003 Move W11, W2
	004 NotImplemented "Instruction UDIV not yet implemented."
	005 NotImplemented "Instruction MSUB not yet implemented."
	006 Move X12, X8
	007 NotImplemented "Instruction BFM not yet implemented."
	008 NotImplemented "Instruction UDIV not yet implemented."
	009 Multiply W11, W10, W2
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move [X0], X9
	012 Move [X1], W10
	013 NotImplemented "Instruction CMP not yet implemented."
	014 NotImplemented "Instruction CSET not yet implemented."
	015 Return X0

Method: System.Void Unscale(ref System.UInt32 low, ref System.UInt64 high64, ref System.Int32 scale)

Disassembly:
	0x033DC0D0 MOVZ W11, 0x1F4
	0x033DC0D4 B 0x33DC0E4
	0x033DC0D8 MOVZ W11, 0x1388
	0x033DC0DC B 0x33DC0E4
	0x033DC0E0 MOVZ W11, 0xC350
	0x033DC0E4 CMP W9, 0x0
	0x033DC0E8 STR W9, [X8]
	0x033DC0EC CSET W8, EQ
	0x033DC0F0 CMP W21, 0x0
	0x033DC0F4 CSET W9, NE
	0x033DC0F8 AND W8, W9, W8, 0x0
	0x033DC0FC ORR W28, W28, W26, 0x0
	0x033DC100 SUBS W25, W25, 0x9
	0x033DC104 SUB W21, W21, W8
	0x033DC108 B.GT 0x33DB828
	0x033DC10C CMP W21, 0x3
	0x033DC110 B.CC 0x33DC120
	0x033DC114 LDR W26, [X31 + 0xC]
	0x033DC118 CBNZ W26, 0x33DC178
	0x033DC11C B 0x33DC1AC
	0x033DC120 LDR W26, [X31 + 0xC]
	0x033DC124 CMP W11, W10
	0x033DC128 B.HI 0x33DC188
	0x033DC12C LDR W8, [X20]
	0x033DC130 B.CC 0x33DC140
	0x033DC134 AND W9, W8, 0x1
	0x033DC138 ORR W9, W9, W28, 0x0
	0x033DC13C CBZ W9, 0x33DC188
	0x033DC140 ADDS W8, W8, 0x1
	0x033DC144 STR W8, [X20]
	0x033DC148 B.CC 0x33DC188
	0x033DC14C MOV W21, W31
	0x033DC150 ADD W21, W21, 0x1
	0x033DC154 LDR W8, [X20, W21, UXTW]
	0x033DC158 ADDS W8, W8, 0x1
	0x033DC15C STR W8, [X20, W21, UXTW]
	0x033DC160 B.CS 0x33DC150
	0x033DC164 CMP W21, 0x3
	0x033DC168 B.CC 0x33DC188
	0x033DC16C CBZ W26, 0x33DC1AC
	0x033DC170 MOV W10, W31
	0x033DC174 MOV W28, W31
	0x033DC178 SUB W26, W26, 0x1
	0x033DC17C STR W26, [X31 + 0xC]
	0x033DC180 MOVZ W25, 0x1
	0x033DC184 B 0x33DB828
	0x033DC188 MOV W0, W26
	0x033DC18C LDP X20, X19, [X31 + 0x60]
	0x033DC190 LDP X22, X21, [X31 + 0x50]
	0x033DC194 LDP X24, X23, [X31 + 0x40]
	0x033DC198 LDP X26, X25, [X31 + 0x30]
	0x033DC19C LDP X28, X27, [X31 + 0x20]
	0x033DC1A0 LDP X29, X30, [X31 + 0x10]
	0x033DC1A4 ADD X31, X31, 0x70
	0x033DC1A8 RET
	0x033DC1AC ADRP X0, 0xD17000
	0x033DC1B0 LDR X0, [X0 + 0x858]
	0x033DC1B4 BL 0x1C16D08
	0x033DC1B8 BL 0x1C16F10
	0x033DC1BC MOV X19, X0
	0x033DC1C0 ADRP X0, 0xD4E000
	0x033DC1C4 LDR X0, [X0 + 0xFE8]
	0x033DC1C8 BL 0x1C16D08
	0x033DC1CC MOV X1, X0
	0x033DC1D0 MOV X0, X19
	0x033DC1D4 MOV X2, X31
	0x033DC1D8 BL 0x338CB50
	0x033DC1DC ADRP X0, 0xD50000
	0x033DC1E0 LDR X0, [X0 + 0xEC0]
	0x033DC1E4 BL 0x1C16D08
	0x033DC1E8 MOV X1, X0
	0x033DC1EC MOV X0, X19
	0x033DC1F0 BL 0x1C16DEC
	0x033DC1F4 LDR W8, [X0, W1, UXTW]
	0x033DC1F8 SUBS W10, W1, 0x1
	0x033DC1FC UDIV W9, W8, W4
	0x033DC200 MSUB W8, W9, W4, W8
	0x033DC204 STR W9, [X2]
	0x033DC208 STR W8, [X3]
	0x033DC20C B.MI 0x33DC240
	0x033DC210 MOV W9, W4
	0x033DC214 ADD X10, X0, W10, 0x2, UXTW
	0x033DC218 LDR W11, [X10]
	0x033DC21C SUB W1, W1, 0x1
	0x033DC220 CMP W1, 0x0
	0x033DC224 MOV X12, X11
	0x033DC228 BFM X12, X8, 0x20, 0x1F
	0x033DC22C UDIV X8, X12, X9
	0x033DC230 STR W8, [X10], #0xFFFFFFFFFFFFFFFC
	0x033DC234 MSUB W8, W8, W4, W11
	0x033DC238 STR W8, [X3]
	0x033DC23C B.GT 0x33DC218
	0x033DC240 MOV W0, W4
	0x033DC244 RET
	0x033DC248 UBFM W8, W0, 0x10, 0xF
	0x033DC24C CMP W0, 0x10000
	0x033DC250 CSEL W8, W8, W0, CC
	0x033DC254 MOVZ W9, 0x11
	0x033DC258 UBFM W12, W8, 0x18, 0x1F
	0x033DC25C CSINC W9, W9, W31, CC
	0x033DC260 UBFM W10, W8, 0x18, 0x17
	0x033DC264 CMP W12, 0x0
	0x033DC268 CSEL W8, W10, W8, EQ
	0x033DC26C ORR W11, W9, 0x8
	0x033DC270 UBFM W12, W8, 0x1C, 0x1F
	0x033DC274 CSEL W9, W11, W9, EQ
	0x033DC278 UBFM W10, W8, 0x1C, 0x1B
	0x033DC27C CMP W12, 0x0
	0x033DC280 ORR W11, W9, 0x4
	0x033DC284 CSEL W8, W10, W8, EQ
	0x033DC288 CSEL W9, W11, W9, EQ
	0x033DC28C UBFM W12, W8, 0x1E, 0x1F
	0x033DC290 UBFM W10, W8, 0x1E, 0x1D
	0x033DC294 ORR W11, W9, 0x2
	0x033DC298 CMP W12, 0x0
	0x033DC29C CSEL W9, W11, W9, EQ
	0x033DC2A0 CSEL W8, W10, W8, EQ
	0x033DC2A4 ADD W0, W9, W8, 0x1F, ASR
	0x033DC2A8 RET
	0x033DC2AC STR X30, [X31 - 0x30]!
	0x033DC2B0 STP X22, X21, [X31 + 0x10]
	0x033DC2B4 STP X20, X19, [X31 + 0x20]
	0x033DC2B8 ADRP X22, 0x1001000
	0x033DC2BC LDRB W8, [X22 + 0x34E]
	0x033DC2C0 MOV W21, W2
	0x033DC2C4 MOV W20, W1
	0x033DC2C8 MOV X19, X0
	0x033DC2CC TBNZ X8, 0x0, 0x33DC2E4
	0x033DC2D0 ADRP X0, 0xD50000
	0x033DC2D4 LDR X0, [X0 + 0xDE8]
	0x033DC2D8 BL 0x1C16CF4
	0x033DC2DC MOVZ W8, 0x1
	0x033DC2E0 STRB W8, [X22 + 0x34E]
	0x033DC2E4 SUBS W20, W20, 0x1
	0x033DC2E8 B.MI 0x33DC38C
	0x033DC2EC LDP W10, W9, [X19]
	0x033DC2F0 MOVZ W8, 0x9999
	0x033DC2F4 MOVK W8, 0x19990000
	0x033DC2F8 ORR X11, X31, 0xCCCCCCCCCCCCCCCC
	0x033DC2FC MOVK X11, 0xCCCD
	0x033DC300 STR W8, [X19 + 0x8]
	0x033DC304 ORR X8, X9, 0x7FFFFFFFF
	0x00000000 INVALID
	0x033DC30C MOVN W12, 0x9
	0x033DC310 UBFM X14, X8, 0x3, 0x3F
	0x033DC314 MOV X13, X10
	0x033DC318 MADD W8, W14, W12, W9
	0x033DC31C BFM X13, X8, 0x20, 0x1F
	0x00000000 INVALID
	0x033DC324 UBFM X8, X8, 0x3, 0x3F
	0x033DC328 MADD W9, W8, W12, W10
	0x033DC32C CMP W9, 0x5
	0x033DC330 STP W8, W14, [X19]
	0x033DC334 B.HI 0x33DC344
	0x033DC338 B.NE 0x33DC378
	0x033DC33C TBNZ X8, 0x0, 0x33DC344
	0x033DC340 TBZ X21, 0x0, 0x33DC378

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x1002000
	009 Move W8, [X22+840]
	010 Move X19, X2
	011 Move X20, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xD51000
	018 Move X0, [X0+3560]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+840], W8
	022 Move W8, [X21]
	023 And W31, W8, 255
	024 And W31, W8, 15
	025 Move W9, [X19]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X9, 0xD51000
	028 Move X9, [X9+3560]
	029 Move X0, [X9]
	030 Move W9, [X0+224]
	031 Compare W9, 0
	032 JumpIfNotEqual {35}
	033 Call 0x1C17DFC
	034 Move W8, [X21]
	035 Move X10, [X20]
	036 Move X11, 0x594B
	037 NotImplemented "Instruction MOVK not yet implemented."
	038 NotImplemented "Instruction MOVK not yet implemented."
	039 NotImplemented "Instruction MOVK not yet implemented."
	040 NotImplemented "Instruction INVALID not yet implemented."
	041 Move TEMP, 0x270F
	042 Not TEMP
	043 Move W12, TEMP
	044 Move X9, X9
	045 ShiftRight X9, 11
	046 And X9, X9, 0x7FFFFFFF
	047 Move W13, W8
	048 NotImplemented "Instruction MADD not yet implemented."
	049 NotImplemented "Instruction BFM not yet implemented."
	050 NotImplemented "Instruction INVALID not yet implemented."
	051 Move X10, X10
	052 ShiftRight X10, 11
	053 And X10, X10, 0x7FFFFFFF
	054 Move W11, 0x2710
	055 Multiply W11, W10, W11
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move [X20], X9
	058 Move [X21], W10
	059 Move W8, [X19]
	060 Subtract W8, W8, 4
	061 Move [X19], W8
	062 Move W8, [X21]
	063 And W31, W8, 3
	064 Move W9, [X19]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X9, 0xD51000
	067 Move X9, [X9+3560]
	068 Move X0, [X9]
	069 Move W9, [X0+224]
	070 Compare W9, 0
	071 JumpIfNotEqual {74}
	072 Call 0x1C17DFC
	073 Move W8, [X21]
	074 Move X10, [X20]
	075 Move X11, 0xF5C3
	076 NotImplemented "Instruction MOVK not yet implemented."
	077 NotImplemented "Instruction MOVK not yet implemented."
	078 NotImplemented "Instruction MOVK not yet implemented."
	079 Move X9, X10
	080 ShiftRight X9, 2
	081 And X9, X9, 0x7FFFFFFF
	082 NotImplemented "Instruction INVALID not yet implemented."
	083 Move TEMP, 99
	084 Not TEMP
	085 Move W12, TEMP
	086 Move X9, X9
	087 ShiftRight X9, 2
	088 And X9, X9, 0x7FFFFFFF
	089 Move W13, W8
	090 NotImplemented "Instruction MADD not yet implemented."
	091 NotImplemented "Instruction BFM not yet implemented."
	092 Move X10, X13
	093 ShiftRight X10, 2
	094 And X10, X10, 0x7FFFFFFF
	095 NotImplemented "Instruction INVALID not yet implemented."
	096 Move X10, X10
	097 ShiftRight X10, 2
	098 And X10, X10, 0x7FFFFFFF
	099 Move W11, 100
	100 Multiply W11, W10, W11
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move [X20], X9
	103 Move [X21], W10
	104 Move W8, [X19]
	105 Subtract W8, W8, 2
	106 Move [X19], W8
	107 Move W8, [X21]
	108 Move TEMP, X8
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfEqual {146}
	112 Move W9, [X19]
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move X9, 0xD51000
	115 Move X9, [X9+3560]
	116 Move X0, [X9]
	117 Move W9, [X0+224]
	118 Compare W9, 0
	119 JumpIfNotEqual {122}
	120 Call 0x1C17DFC
	121 Move W8, [X21]
	122 Move X10, [X20]
	123 Or X11, X31, -3689348814741910324
	124 NotImplemented "Instruction MOVK not yet implemented."
	125 Move TEMP, 9
	126 Not TEMP
	127 Move W12, TEMP
	128 NotImplemented "Instruction INVALID not yet implemented."
	129 Move X9, X9
	130 ShiftRight X9, 3
	131 And X9, X9, 0x7FFFFFFF
	132 NotImplemented "Instruction MADD not yet implemented."
	133 Move W12, W8
	134 NotImplemented "Instruction BFM not yet implemented."
	135 NotImplemented "Instruction INVALID not yet implemented."
	136 Move X10, X10
	137 ShiftRight X10, 3
	138 And X10, X10, 0x7FFFFFFF
	139 Add W11, W10, W10
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Move [X20], X9
	142 Move [X21], W10
	143 Move W8, [X19]
	144 Subtract W8, W8, 1
	145 Move [X19], W8
	146 Move X20, [X31+48]
	147 Move X19, [X31+56]
	148 Move X22, [X31+32]
	149 Move X21, [X31+40]
	150 Move X24, [X31+16]
	151 Move X23, [X31+24]
	152 Move X30, [X31+64]
	153 Return 
	154 Move X23, 0xD51000
	155 Move W9, [X19]
	156 Move X23, [X23+3560]
	157 Move W22, 0xE100
	158 Move W24, 0x1F00
	159 NotImplemented "Instruction MOVK not yet implemented."
	160 NotImplemented "Instruction MOVK not yet implemented."
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move X0, [X23]
	163 Move W9, [X0+224]
	164 Compare W9, 0
	165 JumpIfNotEqual {168}
	166 Call 0x1C17DFC
	167 Move W8, [X21]
	168 Move X10, [X20]
	169 Move W11, W8
	170 NotImplemented "Instruction UDIV not yet implemented."
	171 NotImplemented "Instruction MADD not yet implemented."
	172 NotImplemented "Instruction BFM not yet implemented."
	173 NotImplemented "Instruction UDIV not yet implemented."
	174 Multiply W11, W10, W22
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Move [X20], X9
	177 Move [X21], W10
	178 Move W8, [X19]
	179 Subtract W9, W8, 8
	180 Move [X19], W9
	181 Move W8, [X21]
	182 And W31, W8, 255

Method: System.UInt32 Div96By64(ref System.Decimal/DecCalc/Buf12 bufNum, System.UInt64 den)

Disassembly:
	0x033DC344 ADRP X8, 0xD50000
	0x033DC348 LDR X8, [X8 + 0xDE8]
	0x033DC34C LDR X0, [X8]
	0x033DC350 LDR W8, [X0 + 0xE0]
	0x033DC354 CBNZ W8, 0x33DC35C
	0x033DC358 BL 0x1C16DFC
	0x033DC35C LDR X8, [X19]
	0x033DC360 ADDS X8, X8, 0x1
	0x033DC364 STR X8, [X19]
	0x033DC368 B.CC 0x33DC378
	0x033DC36C LDR W8, [X19 + 0x8]
	0x033DC370 ADD W8, W8, 0x1
	0x033DC374 STR W8, [X19 + 0x8]
	0x033DC378 MOV W0, W20
	0x033DC37C LDP X20, X19, [X31 + 0x20]
	0x033DC380 LDP X22, X21, [X31 + 0x10]
	0x033DC384 LDR X30, [X31], #0x30
	0x033DC388 RET
	0x033DC38C ADRP X0, 0xD17000
	0x033DC390 LDR X0, [X0 + 0x858]
	0x033DC394 BL 0x1C16D08
	0x033DC398 BL 0x1C16F10
	0x033DC39C MOV X19, X0
	0x033DC3A0 ADRP X0, 0xD4E000
	0x033DC3A4 LDR X0, [X0 + 0xFE8]
	0x033DC3A8 BL 0x1C16D08
	0x033DC3AC MOV X1, X0
	0x033DC3B0 MOV X0, X19
	0x033DC3B4 MOV X2, X31
	0x033DC3B8 BL 0x338CB50
	0x033DC3BC ADRP X0, 0xD50000
	0x033DC3C0 LDR X0, [X0 + 0xEC8]
	0x033DC3C4 BL 0x1C16D08
	0x033DC3C8 MOV X1, X0
	0x033DC3CC MOV X0, X19
	0x033DC3D0 BL 0x1C16DEC
	0x033DC3D4 LDR X8, [X0]
	0x033DC3D8 ADDS X8, X8, W1, UXTW
	0x033DC3DC STR X8, [X0]
	0x033DC3E0 B.CC 0x33DC3FC
	0x033DC3E4 LDR W8, [X0 + 0x8]
	0x033DC3E8 ADDS W8, W8, 0x1
	0x033DC3EC STR W8, [X0 + 0x8]
	0x033DC3F0 B.CC 0x33DC3FC
	0x033DC3F4 MOV W0, W31
	0x033DC3F8 RET
	0x033DC3FC MOVZ W0, 0x1
	0x033DC400 RET
	0x033DC404 STR X30, [X31 - 0x30]!
	0x033DC408 STP X22, X21, [X31 + 0x10]
	0x033DC40C STP X20, X19, [X31 + 0x20]
	0x033DC410 ADRP X21, 0x1001000
	0x033DC414 LDRB W8, [X21 + 0x34F]
	0x033DC418 MOV W19, W1
	0x033DC41C MOV X20, X0
	0x033DC420 TBNZ X8, 0x0, 0x33DC438
	0x033DC424 ADRP X0, 0xD50000
	0x033DC428 LDR X0, [X0 + 0xDE8]
	0x033DC42C BL 0x1C16CF4
	0x033DC430 MOVZ W8, 0x1
	0x033DC434 STRB W8, [X21 + 0x34F]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1002000
	007 Move W8, [X21+841]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD51000
	015 Move X0, [X0+3560]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+841], W8
	019 Move W9, [X19+8]
	020 Compare W9, 0
	021 JumpIfEqual {44}
	022 Move X8, X20
	023 ShiftRight X8, 32
	024 And X8, X8, 0x7FFFFFFF
	025 NotImplemented "Instruction CMP not yet implemented."
	026 NotImplemented "Instruction LDUR not yet implemented."
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X10, 0xD51000
	029 Move X10, [X10+3560]
	030 Move W22, [X19]
	031 NotImplemented "Instruction UDIV not yet implemented."
	032 NotImplemented "Instruction MSUB not yet implemented."
	033 Move X0, [X10]
	034 NotImplemented "Instruction BFM not yet implemented."
	035 Move W10, [X0+224]
	036 Compare W10, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 NotImplemented "Instruction UMADDL not yet implemented."
	040 Subtract X8, X22, X9
	041 Add X31, X9, X8
	042 Add X8, X8, X20
	043 Subtract W21, W21, 1
	044 Move X8, [X19]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move W21, W31
	047 Move X8, [X19]
	048 Move W21, W31
	049 Subtract X8, X8, X20
	050 Add X8, X8, X20
	051 Subtract W21, W21, 1
	052 Move [X19], X8
	053 NotImplemented "Instruction UDIV not yet implemented."
	054 And X9, X21, 0
	055 NotImplemented "Instruction MSUB not yet implemented."
	056 Move [X19], X8
	057 Move W0, W21
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X22, [X31+16]
	061 Move X21, [X31+24]
	062 Move X30, [X31+48]
	063 Return X0

Method: System.UInt32 Div128By96(ref System.Decimal/DecCalc/Buf16 bufNum, ref System.Decimal/DecCalc/Buf12 bufDen)

Disassembly:
	0x033DC438 LDR W21, [X20 + 0x8]
	0x033DC43C MOVZ W8, 0x9999
	0x033DC440 MOVK W8, 0x19990000
	0x033DC444 CMP W21, W8
	0x033DC448 B.HI 0x33DC4A8
	0x033DC44C ADRP X22, 0xD50000
	0x033DC450 LDR X22, [X22 + 0xDE8]
	0x033DC454 LDR X20, [X20]
	0x033DC458 LDR X0, [X22]
	0x033DC45C LDR W8, [X0 + 0xE0]
	0x033DC460 CBNZ W8, 0x33DC46C
	0x033DC464 BL 0x1C16DFC
	0x033DC468 LDR X0, [X22]
	0x033DC46C LDR X8, [X0 + 0xB8]
	0x033DC470 CMP W19, 0x14
	0x033DC474 LDR X8, [X8 + 0x18]
	0x033DC478 B.GE 0x33DC4C4
	0x033DC47C CMP W21, 0x4
	0x033DC480 B.CC 0x33DC528
	0x033DC484 B.NE 0x33DC4F8
	0x033DC488 MOVZ X9, 0x2CB9
	0x033DC48C MOVK X9, 0xB5A50000
	0x033DC490 MOVK X9, 0xFA09
	0x033DC494 MOVK X9, 0x4B820000
	0x033DC498 CMP X20, X9
	0x033DC49C B.LS 0x33DC528
	0x033DC4A0 MOVZ W0, 0x8
	0x033DC4A4 B 0x33DC568
	0x033DC4A8 MOV W0, W31
	0x033DC4AC ADDS W31, W0, W19
	0x033DC4B0 B.MI 0x33DC5A4
	0x033DC4B4 LDP X20, X19, [X31 + 0x20]
	0x033DC4B8 LDP X22, X21, [X31 + 0x10]
	0x033DC4BC LDR X30, [X31], #0x30
	0x033DC4C0 RET
	0x033DC4C4 CBZ X8, 0x33DC5EC
	0x033DC4C8 LDR W10, [X8 + 0x18]
	0x033DC4CC MOVZ W9, 0x1B
	0x033DC4D0 SUB X9, X9, W19, SXTW
	0x033DC4D4 CMP W9, W10
	0x033DC4D8 B.CS 0x33DC5F0
	0x033DC4DC ADD X9, X8, X9, 0x4, LSL
	0x033DC4E0 LDR W9, [X9 + 0x20]
	0x033DC4E4 CMP W21, W9
	0x033DC4E8 B.CS 0x33DC4F8
	0x033DC4EC MOVZ W8, 0x1C
	0x033DC4F0 SUB W0, W8, W19
	0x033DC4F4 B 0x33DC4AC
	0x033DC4F8 MOVZ W9, 0xA7C6
	0x033DC4FC CMP W21, W9
	0x033DC500 B.CC 0x33DC530
	0x033DC504 MOVZ W9, 0x8938
	0x033DC508 MOVK W9, 0x410000
	0x033DC50C CMP W21, W9
	0x033DC510 B.CC 0x33DC548
	0x033DC514 MOVZ W9, 0x5C28
	0x033DC518 MOVK W9, 0x28F0000
	0x033DC51C CMP W21, W9
	0x033DC520 MOVZ W9, 0x1
	0x033DC524 B 0x33DC564
	0x033DC528 MOVZ W0, 0x9
	0x033DC52C B 0x33DC4B4
	0x033DC530 CMP W21, 0x1AE
	0x033DC534 B.CC 0x33DC55C
	0x033DC538 MOVZ W9, 0x10C6
	0x033DC53C CMP W21, W9
	0x033DC540 MOVZ W9, 0x5
	0x033DC544 B 0x33DC564
	0x033DC548 MOVZ W9, 0x8DB8
	0x033DC54C MOVK W9, 0x60000
	0x033DC550 CMP W21, W9

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x1002000
	009 Move W8, [X20+842]
	010 Move X21, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xD51000
	017 Move X0, [X0+3560]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+842], W8
	021 Move X8, [X19+8]
	022 Move W22, [X21+8]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move W20, W31
	025 Move X9, 0xD51000
	026 Move X9, [X9+3560]
	027 Move W24, [X21]
	028 NotImplemented "Instruction UDIV not yet implemented."
	029 NotImplemented "Instruction MSUB not yet implemented."
	030 Move X0, [X9]
	031 Move W9, [X0+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move W8, [X21+4]
	036 And X9, X20, 0
	037 Move X12, [X19]
	038 Multiply X11, X9, X24
	039 Multiply X8, X9, X8
	040 Add X8, X8, X11
	041 NotImplemented "Instruction BFM not yet implemented."
	042 Move X10, X8
	043 ShiftRight X10, 32
	044 And X10, X10, 0x7FFFFFFF
	045 Subtract X9, X12, X11
	046 Add X31, X11, X9
	047 Subtract W8, W23, W10
	048 Subtract W8, W8, 1
	049 NotImplemented "Instruction ORN not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Add W31, W10, W8
	052 Move X10, [X21]
	053 Add X9, X12, X10
	054 Subtract X11, X9, X11
	055 Move X9, X11
	056 Add W11, W8, W22
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Subtract W20, W20, 1
	059 Move W8, W11
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Add W8, W11, 1
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Add X11, X9, X10
	064 Move [X19], X9
	065 Move [X19+8], W8
	066 Move W0, W20
	067 Move X20, [X31+48]
	068 Move X19, [X31+56]
	069 Move X22, [X31+32]
	070 Move X21, [X31+40]
	071 Move X24, [X31+16]
	072 Move X23, [X31+24]
	073 Move X30, [X31+64]
	074 Return X0

Method: System.UInt32 IncreaseScale(ref System.Decimal/DecCalc/Buf12 bufNum, System.UInt32 power)

Disassembly:
	0x033DC56C LDR W10, [X8 + 0x18]
	0x033DC570 SUB W9, W0, 0x1
	0x033DC574 CMP W9, W10
	0x033DC578 B.CS 0x33DC5F0
	0x033DC57C ADD X10, X8, W9, 0x4, UXTW
	0x033DC580 LDR W10, [X10 + 0x20]
	0x033DC584 CMP W21, W10
	0x033DC588 B.NE 0x33DC4AC
	0x033DC58C MOV W10, W9
	0x033DC590 ADD X8, X8, X10, 0x4, LSL
	0x033DC594 LDR X8, [X8 + 0x28]
	0x033DC598 CMP X20, X8
	0x033DC59C CSEL W0, W9, W0, HI
	0x033DC5A0 B 0x33DC4AC
	0x033DC5A4 ADRP X0, 0xD17000
	0x033DC5A8 LDR X0, [X0 + 0x858]
	0x033DC5AC BL 0x1C16D08
	0x033DC5B0 BL 0x1C16F10
	0x033DC5B4 MOV X19, X0
	0x033DC5B8 ADRP X0, 0xD4E000
	0x033DC5BC LDR X0, [X0 + 0xFE8]
	0x033DC5C0 BL 0x1C16D08
	0x033DC5C4 MOV X1, X0
	0x033DC5C8 MOV X0, X19
	0x033DC5CC MOV X2, X31
	0x033DC5D0 BL 0x338CB50
	0x033DC5D4 ADRP X0, 0xD50000
	0x033DC5D8 LDR X0, [X0 + 0xED0]
	0x033DC5DC BL 0x1C16D08
	0x033DC5E0 MOV X1, X0
	0x033DC5E4 MOV X0, X19
	0x033DC5E8 BL 0x1C16DEC
	0x033DC5EC BL 0x1C16F20
	0x033DC5F0 BL 0x1C16F28

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1002000
	007 Move X21, 0xD51000
	008 Move W8, [X22+843]
	009 Move X21, [X21+3560]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xD51000
	017 Move X0, [X0+3560]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+843], W8
	021 Move X0, [X21]
	022 Move W21, [X19]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move W8, [X19+4]
	028 Move W9, [X19+8]
	029 Move W10, W20
	030 Multiply X11, X21, X10
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Multiply X8, X8, X10
	034 Multiply X9, X9, X10
	035 Add X8, X8, X11
	036 Move [X19], W11
	037 Move [X19+4], W8
	038 Add X8, X9, X8
	039 Move [X19+8], W8
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X0, X8
	043 ShiftRight X0, 32
	044 And X0, X0, 0x7FFFFFFF
	045 Move X30, [X31+48]
	046 Return X0

Method: System.Void IncreaseScale64(ref System.Decimal/DecCalc/Buf12 bufNum, System.UInt32 power)

Disassembly:
	0x033DC5F4 STR X1, [X0]
	0x033DC5F8 RET
	0x033DC5FC STR X1, [X0 + 0x8]
	0x033DC600 RET
	0x033DC604 LDR X0, [X0]
	0x033DC608 RET
	0x033DC60C STR X30, [X31 - 0x50]!
	0x033DC610 STP X26, X25, [X31 + 0x10]
	0x033DC614 STP X24, X23, [X31 + 0x20]
	0x033DC618 STP X22, X21, [X31 + 0x30]
	0x033DC61C STP X20, X19, [X31 + 0x40]
	0x033DC620 ADRP X22, 0x1001000
	0x033DC624 ADRP X19, 0xD3F000
	0x033DC628 LDRB W8, [X22 + 0x352]
	0x033DC62C LDR X19, [X19 + 0x5F0]
	0x033DC630 MOV X20, X1
	0x033DC634 MOV X21, X0
	0x033DC638 TBNZ X8, 0x0, 0x33DC65C
	0x033DC63C ADRP X0, 0xD50000
	0x033DC640 LDR X0, [X0 + 0xDE8]
	0x033DC644 BL 0x1C16CF4
	0x033DC648 ADRP X0, 0xD3F000
	0x033DC64C LDR X0, [X0 + 0x5F0]
	0x033DC650 BL 0x1C16CF4
	0x033DC654 MOVZ W8, 0x1
	0x033DC658 STRB W8, [X22 + 0x352]
	0x033DC65C LDR X0, [X19]
	0x033DC660 LDR W8, [X20]
	0x033DC664 LDR W9, [X21]
	0x033DC668 LDR W10, [X0 + 0xE0]
	0x033DC66C SBFM W19, W8, 0x1F, 0x1F

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1002000
	007 Move X21, 0xD51000
	008 Move W8, [X22+844]
	009 Move X21, [X21+3560]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xD51000
	017 Move X0, [X0+3560]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+844], W8
	021 Move X0, [X21]
	022 Move W21, [X19]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move W8, [X19+4]
	028 Move W9, W20
	029 Multiply X10, X21, X9
	030 Move [X19], W10
	031 Multiply X8, X8, X9
	032 Add X8, X8, X10
	033 Move [X19+4], X8
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Return 

Method: System.Int32 ScaleResult(System.Decimal/DecCalc/Buf24* bufRes, System.UInt32 hiRes, System.Int32 scale)

Disassembly:
	0x033DC670 SUB W24, W8, W9
	0x033DC674 CBNZ W10, 0x33DC67C
	0x033DC678 BL 0x1C16DFC
	0x033DC67C ADRP X22, 0x1001000
	0x033DC680 LDRB W8, [X22 + 0x310]
	0x033DC684 ORR W19, W19, 0x1
	0x033DC688 TBNZ X8, 0x0, 0x33DC6A0
	0x033DC68C ADRP X0, 0xD3F000
	0x033DC690 LDR X0, [X0 + 0x5F0]
	0x033DC694 BL 0x1C16CF4
	0x033DC698 MOVZ W8, 0x1
	0x033DC69C STRB W8, [X22 + 0x310]
	0x033DC6A0 LDR X22, [X21 + 0x8]
	0x033DC6A4 LDR W8, [X21 + 0x4]
	0x033DC6A8 LDR X10, [X20 + 0x8]
	0x033DC6AC LDR W23, [X20 + 0x4]
	0x033DC6B0 CBZ W24, 0x33DC6CC
	0x033DC6B4 SBFM W9, W24, 0x10, 0x1F
	0x033DC6B8 TBNZ X24, 0x1F, 0x33DC6D8
	0x033DC6BC MOV W21, W23
	0x033DC6C0 MOV X20, X10
	0x033DC6C4 MOV W23, W8
	0x033DC6C8 B 0x33DC6EC
	0x033DC6CC MOV W21, W23
	0x033DC6D0 MOV X20, X10
	0x033DC6D4 B 0x33DC784
	0x033DC6D8 SUB W9, W31, W9
	0x033DC6DC SUB W19, W31, W19
	0x033DC6E0 MOV W21, W8
	0x033DC6E4 MOV X20, X22
	0x033DC6E8 MOV X22, X10
	0x033DC6EC ADRP X24, 0xD50000
	0x033DC6F0 LDR X24, [X24 + 0xDE8]
	0x033DC6F4 SXTW X25, W9
	0x033DC6F8 LDR X0, [X24]
	0x033DC6FC CMP X25, 0x8
	0x033DC700 B.LE 0x33DC710
	0x033DC704 MOVZ W26, 0xCA00
	0x033DC708 MOVK W26, 0x3B9A0000
	0x033DC70C B 0x33DC740
	0x033DC710 LDR W8, [X0 + 0xE0]
	0x033DC714 CBNZ W8, 0x33DC720
	0x033DC718 BL 0x1C16DFC
	0x033DC71C LDR X0, [X24]
	0x033DC720 LDR X8, [X0 + 0xB8]
	0x033DC724 LDR X8, [X8]
	0x033DC728 CBZ X8, 0x33DC7C4
	0x033DC72C LDR W9, [X8 + 0x18]
	0x033DC730 CMP W25, W9
	0x033DC734 B.CS 0x33DC7C8
	0x033DC738 ADD X8, X8, X25, 0x2, LSL
	0x033DC73C LDR W26, [X8 + 0x20]
	0x033DC740 LDR W8, [X0 + 0xE0]
	0x033DC744 CBNZ W8, 0x33DC74C
	0x033DC748 BL 0x1C16DFC
	0x033DC74C MOV W9, W26
	0x033DC750 UBFM X10, X22, 0x20, 0x3F
	0x033DC754 UMADDL X8, X22, X26, X31
	0x033DC758 MUL X9, X10, X9
	0x033DC75C ADD X9, X9, X8, 0x20, LSR
	0x033DC760 UBFM X10, X9, 0x20, 0x3F
	0x033DC764 UMADDL X23, X26, X23, X10
	0x033DC768 UBFM X10, X23, 0x20, 0x3F
	0x033DC76C CBNZ X10, 0x33DC7A8
	0x033DC770 BFM X8, X9, 0x20, 0x1F
	0x033DC774 SUBS X25, X25, 0x9
	0x033DC778 MOV X22, X8
	0x033DC77C B.GT 0x33DC6F8
	0x033DC780 MOV W8, W23
	0x033DC784 CMP W8, W21
	0x033DC788 B.NE 0x33DC79C
	0x033DC78C CMP X22, X20
	0x033DC790 B.NE 0x33DC7A4
	0x033DC794 MOV W19, W31
	0x033DC798 B 0x33DC7A8
	0x033DC79C CSNEG W0, W19, W19, CS
	0x033DC7A0 B 0x33DC7AC
	0x033DC7A4 CSNEG W19, W19, W19, CS
	0x033DC7A8 MOV W0, W19
	0x033DC7AC LDP X20, X19, [X31 + 0x40]
	0x033DC7B0 LDP X22, X21, [X31 + 0x30]
	0x033DC7B4 LDP X24, X23, [X31 + 0x20]
	0x033DC7B8 LDP X26, X25, [X31 + 0x10]
	0x033DC7BC LDR X30, [X31], #0x50
	0x033DC7C0 RET
	0x033DC7C4 BL 0x1C16F20
	0x033DC7C8 BL 0x1C16F28
	0x033DC7CC STR X1, [X0 + 0x10]
	0x033DC7D0 RET
	0x033DC7D4 STR X1, [X0 + 0x8]
	0x033DC7D8 RET
	0x033DC7DC STP X30, X27, [X31 - 0x50]!
	0x033DC7E0 STP X26, X25, [X31 + 0x10]
	0x033DC7E4 STP X24, X23, [X31 + 0x20]
	0x033DC7E8 STP X22, X21, [X31 + 0x30]
	0x033DC7EC STP X20, X19, [X31 + 0x40]
	0x033DC7F0 ADRP X26, 0x1001000
	0x033DC7F4 ADRP X27, 0xD40000
	0x033DC7F8 ADRP X19, 0xD50000
	0x033DC7FC ADRP X20, 0xD50000
	0x033DC800 ADRP X25, 0xD1F000
	0x033DC804 ADRP X24, 0xD50000
	0x033DC808 ADRP X23, 0xD48000
	0x033DC80C ADRP X22, 0xD50000
	0x033DC810 ADRP X21, 0xD50000
	0x033DC814 LDR X27, [X27 + 0xD08]
	0x033DC818 LDR X19, [X19 + 0xED8]
	0x033DC81C LDR X20, [X20 + 0xDE8]
	0x033DC820 LDRB W8, [X26 + 0x35B]
	0x033DC824 LDR X25, [X25 + 0x568]
	0x033DC828 LDR X24, [X24 + 0xEE0]
	0x033DC82C LDR X23, [X23 + 0x830]
	0x033DC830 LDR X22, [X22 + 0xEE8]
	0x033DC834 LDR X21, [X21 + 0xEF0]
	0x033DC838 TBNZ X8, 0x0, 0x33DC8A4
	0x033DC83C ADRP X0, 0xD50000
	0x033DC840 LDR X0, [X0 + 0xDE8]
	0x033DC844 BL 0x1C16CF4
	0x033DC848 ADRP X0, 0xD48000
	0x033DC84C LDR X0, [X0 + 0x830]
	0x033DC850 BL 0x1C16CF4
	0x033DC854 ADRP X0, 0xD50000
	0x033DC858 LDR X0, [X0 + 0xEF0]
	0x033DC85C BL 0x1C16CF4
	0x033DC860 ADRP X0, 0xD50000
	0x033DC864 LDR X0, [X0 + 0xEE8]
	0x033DC868 BL 0x1C16CF4
	0x033DC86C ADRP X0, 0xD50000
	0x033DC870 LDR X0, [X0 + 0xED8]
	0x033DC874 BL 0x1C16CF4
	0x033DC878 ADRP X0, 0xD50000
	0x033DC87C LDR X0, [X0 + 0xEE0]
	0x033DC880 BL 0x1C16CF4
	0x033DC884 ADRP X0, 0xD40000
	0x033DC888 LDR X0, [X0 + 0xD08]
	0x033DC88C BL 0x1C16CF4
	0x033DC890 ADRP X0, 0xD1F000
	0x033DC894 LDR X0, [X0 + 0x568]
	0x033DC898 BL 0x1C16CF4
	0x033DC89C MOVZ W8, 0x1
	0x033DC8A0 STRB W8, [X26 + 0x35B]
	0x033DC8A4 LDR X0, [X27]
	0x033DC8A8 MOVZ W1, 0xA
	0x033DC8AC BL 0x1C16D6C
	0x033DC8B0 LDR X1, [X19]
	0x033DC8B4 MOV X2, X31
	0x033DC8B8 MOV X19, X0
	0x033DC8BC BL 0x32C5BD8
	0x033DC8C0 LDR X8, [X20]
	0x033DC8C4 MOVZ W1, 0x13
	0x033DC8C8 LDR X8, [X8 + 0xB8]
	0x033DC8CC STR X19, [X8]
	0x033DC8D0 LDR X0, [X25]
	0x033DC8D4 BL 0x1C16D6C
	0x033DC8D8 LDR X1, [X24]
	0x033DC8DC MOV X2, X31
	0x033DC8E0 MOV X19, X0
	0x033DC8E4 BL 0x32C5BD8
	0x033DC8E8 LDR X8, [X20]
	0x033DC8EC MOVZ W1, 0x51
	0x033DC8F0 LDR X8, [X8 + 0xB8]
	0x033DC8F4 STR X19, [X8 + 0x8]
	0x033DC8F8 LDR X0, [X23]
	0x033DC8FC BL 0x1C16D6C
	0x033DC900 LDR X1, [X22]
	0x033DC904 MOV X2, X31
	0x033DC908 MOV X19, X0
	0x033DC90C BL 0x32C5BD8
	0x033DC910 LDR X8, [X20]
	0x033DC914 MOVZ W1, 0x8
	0x033DC918 LDR X8, [X8 + 0xB8]
	0x033DC91C STR X19, [X8 + 0x10]
	0x033DC920 LDR X0, [X21]
	0x033DC924 BL 0x1C16D6C
	0x033DC928 CBZ X0, 0x33DC9F4
	0x033DC92C LDR W8, [X0 + 0x18]
	0x033DC930 CBZ W8, 0x33DC9F0
	0x033DC934 ADRP X9, 0xFFFFFFFFFD70F000
	0x033DC938 LDR V0, [X9 + 0x2F]
	0x033DC93C CMP W8, 0x1
	0x033DC940 STR V0, [X0 + 0x2]
	0x033DC944 B.EQ 0x33DC9F0
	0x033DC948 ADRP X9, 0xFFFFFFFFFD710000
	0x033DC94C LDR V0, [X9 + 0x3C]
	0x033DC950 CMP W8, 0x2
	0x033DC954 STR V0, [X0 + 0x3]
	0x033DC958 B.LS 0x33DC9F0
	0x033DC95C ADRP X9, 0xFFFFFFFFFD710000
	0x033DC960 LDR V0, [X9 + 0x54]
	0x033DC964 CMP W8, 0x3
	0x033DC968 STR V0, [X0 + 0x4]
	0x033DC96C B.EQ 0x33DC9F0
	0x033DC970 ADRP X9, 0xFFFFFFFFFD70E000
	0x033DC974 LDR V0, [X9 + 0xAA]
	0x033DC978 CMP W8, 0x4
	0x033DC97C STR V0, [X0 + 0x5]
	0x033DC980 B.LS 0x33DC9F0
	0x033DC984 ADRP X9, 0xFFFFFFFFFD710000
	0x033DC988 LDR V0, [X9 + 0x62]
	0x033DC98C CMP W8, 0x5
	0x033DC990 STR V0, [X0 + 0x6]
	0x033DC994 B.EQ 0x33DC9F0
	0x033DC998 ADRP X9, 0xFFFFFFFFFD70F000
	0x033DC99C LDR V0, [X9 + 0xA9]
	0x033DC9A0 CMP W8, 0x6
	0x033DC9A4 STR V0, [X0 + 0x7]
	0x033DC9A8 B.LS 0x33DC9F0
	0x033DC9AC ADRP X9, 0xFFFFFFFFFD70E000
	0x033DC9B0 LDR V0, [X9 + 0x94]
	0x033DC9B4 CMP W8, 0x7
	0x033DC9B8 STR V0, [X0 + 0x8]
	0x033DC9BC B.EQ 0x33DC9F0
	0x033DC9C0 ADRP X8, 0xFFFFFFFFFD70E000
	0x033DC9C4 LDR V0, [X8 + 0x7A]
	0x033DC9C8 LDP X22, X21, [X31 + 0x30]
	0x033DC9CC LDP X24, X23, [X31 + 0x20]
	0x033DC9D0 LDP X26, X25, [X31 + 0x10]
	0x033DC9D4 STR V0, [X0 + 0x9]
	0x033DC9D8 LDR X8, [X20]
	0x033DC9DC LDP X20, X19, [X31 + 0x40]
	0x033DC9E0 LDR X8, [X8 + 0xB8]
	0x033DC9E4 STR X0, [X8 + 0x18]
	0x033DC9E8 LDP X30, X27, [X31], #0x50
	0x033DC9EC RET
	0x033DC9F0 BL 0x1C16F28
	0x033DC9F4 BL 0x1C16F20
	0x033DC9F8 MOV W8, W3
	0x033DC9FC BFM X8, X2, 0x20, 0x1F
	0x033DCA00 STR W1, [X0]
	0x033DCA04 STR X8, [X0 + 0x8]
	0x033DCA08 RET
	0x033DCA0C STP X30, X21, [X31 - 0x20]!
	0x033DCA10 STP X20, X19, [X31 + 0x10]
	0x033DCA14 ADRP X21, 0x1001000
	0x033DCA18 ADRP X20, 0xD50000
	0x033DCA1C LDRB W8, [X21 + 0x35C]
	0x033DCA20 LDR X20, [X20 + 0xEF8]
	0x033DCA24 MOV X19, X0
	0x033DCA28 TBNZ X8, 0x0, 0x33DCA40
	0x033DCA2C ADRP X0, 0xD50000
	0x033DCA30 LDR X0, [X0 + 0xEF8]
	0x033DCA34 BL 0x1C16CF4
	0x033DCA38 MOVZ W8, 0x1
	0x033DCA3C STRB W8, [X21 + 0x35C]
	0x033DCA40 MOVN W8, 0x0
	0x033DCA44 STR W8, [X19 + 0x8C]
	0x033DCA48 LDR X1, [X20]
	0x033DCA4C MOV X0, X19
	0x033DCA50 MOV X2, X31
	0x033DCA54 BL 0x338C8D8
	0x033DCA58 MOVZ W8, 0x152D
	0x033DCA5C MOVK W8, 0x80130000
	0x033DCA60 STR W8, [X19 + 0x60]
	0x033DCA64 LDP X20, X19, [X31 + 0x10]
	0x033DCA68 LDP X30, X21, [X31], #0x20
	0x033DCA6C RET
	0x033DCA70 STP X30, X23, [X31 - 0x30]!
	0x033DCA74 STP X22, X21, [X31 + 0x10]
	0x033DCA78 STP X20, X19, [X31 + 0x20]
	0x033DCA7C ADRP X23, 0x1001000
	0x033DCA80 ADRP X22, 0xD50000
	0x033DCA84 LDRB W8, [X23 + 0x35D]
	0x033DCA88 LDR X22, [X22 + 0xEF8]
	0x033DCA8C MOV X19, X2
	0x033DCA90 MOV W21, W1
	0x033DCA94 MOV X20, X0
	0x033DCA98 TBNZ X8, 0x0, 0x33DCAB0
	0x033DCA9C ADRP X0, 0xD50000
	0x033DCAA0 LDR X0, [X0 + 0xEF8]
	0x033DCAA4 BL 0x1C16CF4
	0x033DCAA8 MOVZ W8, 0x1
	0x033DCAAC STRB W8, [X23 + 0x35D]
	0x033DCAB0 MOVN W8, 0x0
	0x033DCAB4 STR W8, [X20 + 0x8C]
	0x033DCAB8 LDR X1, [X22]
	0x033DCABC MOV X0, X20
	0x033DCAC0 MOV X2, X31
	0x033DCAC4 BL 0x338C8D8
	0x033DCAC8 MOVZ W8, 0x152D
	0x033DCACC MOVK W8, 0x80130000
	0x033DCAD0 STR W8, [X20 + 0x60]
	0x033DCAD4 ADRP X22, 0x1001000
	0x033DCAD8 LDRB W8, [X22 + 0x35E]
	0x033DCADC TBNZ X8, 0x0, 0x33DCAF4
	0x033DCAE0 ADRP X0, 0xD50000
	0x033DCAE4 LDR X0, [X0 + 0xF00]
	0x033DCAE8 BL 0x1C16CF4
	0x033DCAEC MOVZ W8, 0x1
	0x033DCAF0 STRB W8, [X22 + 0x35E]
	0x033DCAF4 STR W21, [X20 + 0x8C]
	0x033DCAF8 CBZ X19, 0x33DCB18
	0x033DCAFC ADRP X8, 0xD50000
	0x033DCB00 LDR X8, [X8 + 0xF00]
	0x033DCB04 LDR X9, [X19]
	0x033DCB08 LDR X8, [X8]
	0x033DCB0C CMP X9, X8
	0x033DCB10 CSEL X8, X19, X31, EQ
	0x033DCB14 STR X8, [X20 + 0x90]
	0x033DCB18 LDP X20, X19, [X31 + 0x20]
	0x033DCB1C LDP X22, X21, [X31 + 0x10]
	0x033DCB20 LDP X30, X23, [X31], #0x30
	0x033DCB24 RET
	0x033DCB28 STR X30, [X31 - 0x30]!
	0x033DCB2C STP X22, X21, [X31 + 0x10]
	0x033DCB30 STP X20, X19, [X31 + 0x20]
	0x033DCB34 ADRP X22, 0x1001000
	0x033DCB38 LDRB W8, [X22 + 0x35E]
	0x033DCB3C MOV X19, X2
	0x033DCB40 MOV W21, W1
	0x033DCB44 MOV X20, X0
	0x033DCB48 TBNZ X8, 0x0, 0x33DCB60
	0x033DCB4C ADRP X0, 0xD50000
	0x033DCB50 LDR X0, [X0 + 0xF00]
	0x033DCB54 BL 0x1C16CF4
	0x033DCB58 MOVZ W8, 0x1
	0x033DCB5C STRB W8, [X22 + 0x35E]
	0x033DCB60 STR W21, [X20 + 0x8C]
	0x033DCB64 CBZ X19, 0x33DCB84
	0x033DCB68 ADRP X8, 0xD50000
	0x033DCB6C LDR X8, [X8 + 0xF00]
	0x033DCB70 LDR X9, [X19]
	0x033DCB74 LDR X8, [X8]
	0x033DCB78 CMP X9, X8
	0x033DCB7C CSEL X8, X19, X31, EQ
	0x033DCB80 STR X8, [X20 + 0x90]
	0x033DCB84 LDP X20, X19, [X31 + 0x20]
	0x033DCB88 LDP X22, X21, [X31 + 0x10]
	0x033DCB8C LDR X30, [X31], #0x30
	0x033DCB90 RET
	0x033DCB94 MOVN W8, 0x0
	0x033DCB98 MOV X4, X31
	0x033DCB9C STR W8, [X0 + 0x8C]
	0x033DCBA0 B 0x338CA74
	0x033DCBA4 AND W1, W1, 0x1
	0x033DCBA8 MOV W2, W31
	0x033DCBAC MOV X3, X31
	0x033DCBB0 B 0x33E3FA4
	0x033DCBB4 AND W1, W1, 0x1
	0x033DCBB8 MOV X3, X31
	0x033DCBBC B 0x33E3FA4
	0x033DCBC0 STR X30, [X31 - 0x20]!
	0x033DCBC4 STP X20, X19, [X31 + 0x10]
	0x033DCBC8 ADRP X20, 0x1001000
	0x033DCBCC LDRB W8, [X20 + 0x35F]
	0x033DCBD0 MOV X19, X0
	0x033DCBD4 TBNZ X8, 0x0, 0x33DCBEC
	0x033DCBD8 ADRP X0, 0xD1D000
	0x033DCBDC LDR X0, [X0 + 0xCC0]
	0x033DCBE0 BL 0x1C16CF4
	0x033DCBE4 MOVZ W8, 0x1
	0x033DCBE8 STRB W8, [X20 + 0x35F]
	0x033DCBEC LDR X0, [X19]
	0x033DCBF0 CBNZ X0, 0x33DCC2C
	0x033DCBF4 ADRP X8, 0xD1D000
	0x033DCBF8 LDR X8, [X8 + 0xCC0]
	0x033DCBFC LDR X0, [X8]
	0x033DCC00 BL 0x1C16F10
	0x033DCC04 MOV X1, X31
	0x033DCC08 MOV X20, X0
	0x033DCC0C BL 0x33BDD8C
	0x033DCC10 MOV X0, X19
	0x033DCC14 MOV X1, X20
	0x033DCC18 MOV X2, X31
	0x033DCC1C MOV X3, X31
	0x033DCC20 BL 0x33EB118
	0x033DCC24 CBNZ X0, 0x33DCC2C
	0x033DCC28 LDR X0, [X19]
	0x033DCC2C LDP X20, X19, [X31 + 0x10]
	0x033DCC30 LDR X30, [X31], #0x20
	0x033DCC34 RET
	0x033DCC38 STP X30, X21, [X31 - 0x20]!
	0x033DCC3C STP X20, X19, [X31 + 0x10]
	0x033DCC40 ADRP X20, 0x1001000
	0x033DCC44 ADRP X21, 0xD17000
	0x033DCC48 LDRB W8, [X20 + 0x360]
	0x033DCC4C LDR X21, [X21 + 0x7D0]
	0x033DCC50 MOV X19, X0
	0x033DCC54 TBNZ X8, 0x0, 0x33DCC6C
	0x033DCC58 ADRP X0, 0xD17000
	0x033DCC5C LDR X0, [X0 + 0x7D0]
	0x033DCC60 BL 0x1C16CF4
	0x033DCC64 MOVZ W8, 0x1
	0x033DCC68 STRB W8, [X20 + 0x360]
	0x033DCC6C LDR X0, [X21]
	0x033DCC70 LDR W8, [X0 + 0xE0]
	0x033DCC74 CBNZ W8, 0x33DCC7C
	0x033DCC78 BL 0x1C16DFC
	0x033DCC7C MOV X0, X19
	0x033DCC80 LDP X20, X19, [X31 + 0x10]
	0x033DCC84 MOV X1, X31
	0x033DCC88 LDP X30, X21, [X31], #0x20
	0x033DCC8C B 0x33B2C54
	0x033DCC90 STR X30, [X31 - 0x30]!
	0x033DCC94 STP X22, X21, [X31 + 0x10]
	0x033DCC98 STP X20, X19, [X31 + 0x20]
	0x033DCC9C ADRP X21, 0x1001000
	0x033DCCA0 ADRP X22, 0xD17000
	0x033DCCA4 LDRB W8, [X21 + 0x361]
	0x033DCCA8 LDR X22, [X22 + 0x7D0]
	0x033DCCAC MOV X19, X1
	0x033DCCB0 MOV X20, X0
	0x033DCCB4 TBNZ X8, 0x0, 0x33DCCCC
	0x033DCCB8 ADRP X0, 0xD17000
	0x033DCCBC LDR X0, [X0 + 0x7D0]
	0x033DCCC0 BL 0x1C16CF4
	0x033DCCC4 MOVZ W8, 0x1
	0x033DCCC8 STRB W8, [X21 + 0x361]
	0x033DCCCC LDR X0, [X22]
	0x033DCCD0 LDR W8, [X0 + 0xE0]
	0x033DCCD4 CBNZ W8, 0x33DCCDC
	0x033DCCD8 BL 0x1C16DFC
	0x033DCCDC MOV X0, X20
	0x033DCCE0 MOV X1, X19
	0x033DCCE4 LDP X20, X19, [X31 + 0x20]
	0x033DCCE8 LDP X22, X21, [X31 + 0x10]
	0x033DCCEC MOV X2, X31
	0x033DCCF0 LDR X30, [X31], #0x30
	0x033DCCF4 B 0x33B2C70
	0x033DCCF8 STR X30, [X31 - 0x40]!
	0x033DCCFC STP X24, X23, [X31 + 0x10]
	0x033DCD00 STP X22, X21, [X31 + 0x20]
	0x033DCD04 STP X20, X19, [X31 + 0x30]
	0x033DCD08 ADRP X24, 0x1001000
	0x033DCD0C ADRP X23, 0xD17000
	0x033DCD10 LDRB W8, [X24 + 0x362]
	0x033DCD14 LDR X23, [X23 + 0x7D0]
	0x033DCD18 MOV X19, X3
	0x033DCD1C MOV X20, X2
	0x033DCD20 MOV X21, X1
	0x033DCD24 MOV X22, X0
	0x033DCD28 TBNZ X8, 0x0, 0x33DCD40
	0x033DCD2C ADRP X0, 0xD17000
	0x033DCD30 LDR X0, [X0 + 0x7D0]
	0x033DCD34 BL 0x1C16CF4
	0x033DCD38 MOVZ W8, 0x1
	0x033DCD3C STRB W8, [X24 + 0x362]
	0x033DCD40 LDR X0, [X23]
	0x033DCD44 LDR W8, [X0 + 0xE0]
	0x033DCD48 CBNZ W8, 0x33DCD50
	0x033DCD4C BL 0x1C16DFC
	0x033DCD50 MOV X0, X22
	0x033DCD54 MOV X1, X21
	0x033DCD58 MOV X2, X20
	0x033DCD5C MOV X3, X19
	0x033DCD60 LDP X20, X19, [X31 + 0x30]
	0x033DCD64 LDP X22, X21, [X31 + 0x20]
	0x033DCD68 LDP X24, X23, [X31 + 0x10]
	0x033DCD6C MOV X4, X31
	0x033DCD70 LDR X30, [X31], #0x40
	0x033DCD74 B 0x33B2CD8
	0x033DCD78 AND W1, W1, 0x1
	0x033DCD7C MOVZ W2, 0x1
	0x033DCD80 MOV X3, X31
	0x033DCD84 B 0x33E3FA4
	0x033DCD88 STR X30, [X31 - 0x30]!
	0x033DCD8C STP X22, X21, [X31 + 0x10]
	0x033DCD90 STP X20, X19, [X31 + 0x20]
	0x033DCD94 LDR X8, [X2 + 0x8]
	0x033DCD98 STP X1, X2, [X0 + 0x20]
	0x033DCD9C MOV X19, X0
	0x033DCDA0 MOV X20, X2
	0x033DCDA4 STR X8, [X0 + 0x10]
	0x033DCDA8 LDRB W22, [X2 + 0x52]
	0x033DCDAC STR X0, [X0 + 0x40]
	0x033DCDB0 MOV X0, X2
	0x033DCDB4 MOV X21, X1
	0x033DCDB8 BL 0x1C16D84
	0x033DCDBC TBZ X0, 0x0, 0x33DCDD4
	0x033DCDC0 CMP W22, 0x1
	0x033DCDC4 B.NE 0x33DCDDC
	0x033DCDC8 ADRP X8, 0xFFFFFFFFFE7DF000
	0x033DCDCC ADD X8, X8, 0xDEC
	0x033DCDD0 B 0x33DCE50
	0x033DCDD4 CBZ W22, 0x33DCDF0
	0x033DCDD8 CBZ X21, 0x33DCE70
	0x033DCDDC LDR X8, [X19 + 0x10]
	0x033DCDE0 LDR X9, [X19 + 0x20]
	0x033DCDE4 STR X8, [X19 + 0x18]
	0x033DCDE8 STR X9, [X19 + 0x40]
	0x033DCDEC B 0x33DCE54
	0x033DCDF0 LDRB W8, [X19 + 0x70]
	0x033DCDF4 CBZ W8, 0x33DCE20
	0x033DCDF8 MOV X0, X20
	0x033DCDFC BL 0x1C16D7C
	0x033DCE00 MOV W21, W0
	0x033DCE04 MOV X0, X20
	0x033DCE08 BL 0x1C17238
	0x033DCE0C TBZ X21, 0x0, 0x33DCE2C
	0x033DCE10 TBZ X0, 0x0, 0x33DCE3C
	0x033DCE14 ADRP X8, 0xFFFFFFFFFE7DF000
	0x033DCE18 ADD X8, X8, 0xEE8
	0x033DCE1C B 0x33DCE50
	0x033DCE20 ADRP X8, 0xFFFFFFFFFE7DF000
	0x033DCE24 ADD X8, X8, 0xDCC
	0x033DCE28 B 0x33DCE50
	0x033DCE2C TBZ X0, 0x0, 0x33DCE48
	0x033DCE30 ADRP X8, 0xFFFFFFFFFE7DF000
	0x033DCE34 ADD X8, X8, 0xE28
	0x033DCE38 B 0x33DCE50
	0x033DCE3C ADRP X8, 0xFFFFFFFFFE7DF000
	0x033DCE40 ADD X8, X8, 0xEAC
	0x033DCE44 B 0x33DCE50
	0x033DCE48 ADRP X8, 0xFFFFFFFFFE7DF000
	0x033DCE4C ADD X8, X8, 0xDFC
	0x033DCE50 STR X8, [X19 + 0x18]
	0x033DCE54 ADRP X8, 0xFFFFFFFFFE7DF000
	0x033DCE58 ADD X8, X8, 0xD84
	0x033DCE5C STR X8, [X19 + 0x38]
	0x033DCE60 LDP X20, X19, [X31 + 0x20]
	0x033DCE64 LDP X22, X21, [X31 + 0x10]
	0x033DCE68 LDR X30, [X31], #0x30
	0x033DCE6C RET
	0x033DCE70 ADRP X1, 0xFFFFFFFFFD73F000
	0x033DCE74 ADD X1, X1, 0xEE3
	0x033DCE78 MOV X0, X31
	0x033DCE7C BL 0x1C16F3C
	0x033DCE80 MOV X1, X31
	0x033DCE84 BL 0x1C16DEC
	0x033DCE88 LDR X8, [X0 + 0x40]
	0x033DCE8C LDR X3, [X0 + 0x18]
	0x033DCE90 LDR X2, [X0 + 0x28]
	0x033DCE94 MOV X0, X8
	0x033DCE98 BR X3
	0x033DCE9C STP X30, X21, [X31 - 0x20]!
	0x033DCEA0 STP X20, X19, [X31 + 0x10]
	0x033DCEA4 ADRP X20, 0x1001000
	0x033DCEA8 ADRP X21, 0xD50000
	0x033DCEAC LDRB W8, [X20 + 0x363]
	0x033DCEB0 LDR X21, [X21 + 0xF08]
	0x033DCEB4 MOV X19, X0
	0x033DCEB8 TBNZ X8, 0x0, 0x33DCED0
	0x033DCEBC ADRP X0, 0xD50000
	0x033DCEC0 LDR X0, [X0 + 0xF08]
	0x033DCEC4 BL 0x1C16CF4
	0x033DCEC8 MOVZ W8, 0x1
	0x033DCECC STRB W8, [X20 + 0x363]
	0x033DCED0 LDR X1, [X21]
	0x033DCED4 MOV X0, X19
	0x033DCED8 LDP X20, X19, [X31 + 0x10]
	0x033DCEDC MOV X2, X31
	0x033DCEE0 LDP X30, X21, [X31], #0x20
	0x033DCEE4 B 0x338C8D8
	0x033DCEE8 MOV X4, X31
	0x033DCEEC B 0x338CA74
	0x033DCEF0 STR X30, [X31 - 0x30]!
	0x033DCEF4 STP X22, X21, [X31 + 0x10]
	0x033DCEF8 STP X20, X19, [X31 + 0x20]
	0x033DCEFC LDR X8, [X2 + 0x8]
	0x033DCF00 STP X1, X2, [X0 + 0x20]
	0x033DCF04 MOV X19, X0
	0x033DCF08 MOV X20, X2
	0x033DCF0C STR X8, [X0 + 0x10]
	0x033DCF10 LDRB W22, [X2 + 0x52]
	0x033DCF14 STR X0, [X0 + 0x40]
	0x033DCF18 MOV X0, X2
	0x033DCF1C MOV X21, X1
	0x033DCF20 BL 0x1C16D84
	0x033DCF24 TBZ X0, 0x0, 0x33DCF3C
	0x033DCF28 CMP W22, 0x1
	0x033DCF2C B.NE 0x33DCF44
	0x033DCF30 ADRP X8, 0xFFFFFFFFFE7DF000
	0x033DCF34 ADD X8, X8, 0xFDC
	0x033DCF38 B 0x33DCFB8
	0x033DCF3C CBZ W22, 0x33DCF58
	0x033DCF40 CBZ X21, 0x33DCFD8
	0x033DCF44 LDR X8, [X19 + 0x10]
	0x033DCF48 LDR X9, [X19 + 0x20]
	0x033DCF4C STR X8, [X19 + 0x18]
	0x033DCF50 STR X9, [X19 + 0x40]
	0x033DCF54 B 0x33DCFBC
	0x033DCF58 LDRB W8, [X19 + 0x70]
	0x033DCF5C CBZ W8, 0x33DCF88
	0x033DCF60 MOV X0, X20
	0x033DCF64 BL 0x1C16D7C
	0x033DCF68 MOV W21, W0
	0x033DCF6C MOV X0, X20
	0x033DCF70 BL 0x1C17238
	0x033DCF74 TBZ X21, 0x0, 0x33DCF94
	0x033DCF78 TBZ X0, 0x0, 0x33DCFA4
	0x033DCF7C ADRP X8, 0xFFFFFFFFFE7E0000
	0x033DCF80 ADD X8, X8, 0xD8
	0x033DCF84 B 0x33DCFB8
	0x033DCF88 ADRP X8, 0xFFFFFFFFFE7DF000
	0x033DCF8C ADD X8, X8, 0xFBC
	0x033DCF90 B 0x33DCFB8
	0x033DCF94 TBZ X0, 0x0, 0x33DCFB0
	0x033DCF98 ADRP X8, 0xFFFFFFFFFE7E0000
	0x033DCF9C ADD X8, X8, 0x18
	0x033DCFA0 B 0x33DCFB8
	0x033DCFA4 ADRP X8, 0xFFFFFFFFFE7E0000
	0x033DCFA8 ADD X8, X8, 0x9C
	0x033DCFAC B 0x33DCFB8
	0x033DCFB0 ADRP X8, 0xFFFFFFFFFE7DF000
	0x033DCFB4 ADD X8, X8, 0xFEC
	0x033DCFB8 STR X8, [X19 + 0x18]
	0x033DCFBC ADRP X8, 0xFFFFFFFFFE7DF000
	0x033DCFC0 ADD X8, X8, 0xF74
	0x033DCFC4 STR X8, [X19 + 0x38]
	0x033DCFC8 LDP X20, X19, [X31 + 0x20]
	0x033DCFCC LDP X22, X21, [X31 + 0x10]
	0x033DCFD0 LDR X30, [X31], #0x30
	0x033DCFD4 RET
	0x033DCFD8 ADRP X1, 0xFFFFFFFFFD73F000
	0x033DCFDC ADD X1, X1, 0xEE3
	0x033DCFE0 MOV X0, X31
	0x033DCFE4 BL 0x1C16F3C
	0x033DCFE8 MOV X1, X31
	0x033DCFEC BL 0x1C16DEC
	0x033DCFF0 LDR X8, [X0 + 0x40]
	0x033DCFF4 LDR X3, [X0 + 0x18]
	0x033DCFF8 LDR X2, [X0 + 0x28]
	0x033DCFFC MOV X0, X8
	0x033DD000 BR X3
	0x033DD004 STP X30, X21, [X31 - 0x20]!
	0x033DD008 STP X20, X19, [X31 + 0x10]
	0x033DD00C ADRP X20, 0x1000000
	0x033DD010 ADRP X21, 0xD4F000
	0x033DD014 LDRB W8, [X20 + 0x364]
	0x033DD018 LDR X21, [X21 + 0xF10]
	0x033DD01C MOV X19, X0
	0x033DD020 TBNZ X8, 0x0, 0x33DD038
	0x033DD024 ADRP X0, 0xD4F000
	0x033DD028 LDR X0, [X0 + 0xF10]
	0x033DD02C BL 0x1C16CF4
	0x033DD030 MOVZ W8, 0x1
	0x033DD034 STRB W8, [X20 + 0x364]
	0x033DD038 LDR X1, [X21]
	0x033DD03C MOV X0, X19
	0x033DD040 MOV X2, X31
	0x033DD044 BL 0x338C8D8
	0x033DD048 MOVZ W8, 0x1518
	0x033DD04C MOVK W8, 0x80130000
	0x033DD050 STR W8, [X19 + 0x60]
	0x033DD054 LDP X20, X19, [X31 + 0x10]
	0x033DD058 LDP X30, X21, [X31], #0x20
	0x033DD05C RET
	0x033DD060 STP X30, X19, [X31 - 0x10]!
	0x033DD064 MOV X2, X31
	0x033DD068 MOV X19, X0
	0x033DD06C BL 0x338C8D8
	0x033DD070 MOVZ W8, 0x1518
	0x033DD074 MOVK W8, 0x80130000
	0x033DD078 STR W8, [X19 + 0x60]
	0x033DD07C LDP X30, X19, [X31], #0x10
	0x033DD080 RET
	0x033DD084 MOV X4, X31
	0x033DD088 B 0x338CA74
	0x033DD08C STP X30, X21, [X31 - 0x20]!
	0x033DD090 STP X20, X19, [X31 + 0x10]
	0x033DD094 LDR X8, [X2 + 0x8]
	0x033DD098 STP X1, X2, [X0 + 0x20]
	0x033DD09C MOV X19, X0
	0x033DD0A0 MOV X20, X1
	0x033DD0A4 STR X8, [X0 + 0x10]
	0x033DD0A8 LDRB W21, [X2 + 0x52]
	0x033DD0AC STR X0, [X0 + 0x40]
	0x033DD0B0 MOV X0, X2
	0x033DD0B4 BL 0x1C16D84
	0x033DD0B8 TBZ X0, 0x0, 0x33DD0D0
	0x033DD0BC CBNZ W21, 0x33DD0D4
	0x033DD0C0 ADRP X8, 0xFFFFFFFFFE7DF000
	0x033DD0C4 ADD X8, X8, 0x1A4
	0x033DD0C8 STR X8, [X19 + 0x18]
	0x033DD0CC B 0x33DD0E4
	0x033DD0D0 CBZ X20, 0x33DD0FC
	0x033DD0D4 LDR X8, [X19 + 0x10]
	0x033DD0D8 LDR X9, [X19 + 0x20]
	0x033DD0DC STR X8, [X19 + 0x18]
	0x033DD0E0 STR X9, [X19 + 0x40]
	0x033DD0E4 ADRP X8, 0xFFFFFFFFFE7DF000
	0x033DD0E8 ADD X8, X8, 0x164
	0x033DD0EC STR X8, [X19 + 0x38]
	0x033DD0F0 LDP X20, X19, [X31 + 0x10]
	0x033DD0F4 LDP X30, X21, [X31], #0x20
	0x033DD0F8 RET
	0x033DD0FC ADRP X1, 0xFFFFFFFFFD73E000
	0x033DD100 ADD X1, X1, 0xEE3
	0x033DD104 MOV X0, X31
	0x033DD108 BL 0x1C16F3C
	0x033DD10C MOV X1, X31
	0x033DD110 BL 0x1C16DEC
	0x033DD114 LDR X8, [X0 + 0x40]
	0x033DD118 LDR X2, [X0 + 0x18]
	0x033DD11C LDR X1, [X0 + 0x28]
	0x033DD120 MOV X0, X8
	0x033DD124 BR X2
	0x033DD128 STP X30, X21, [X31 - 0x20]!
	0x033DD12C STP X20, X19, [X31 + 0x10]
	0x033DD130 ADRP X20, 0x1000000
	0x033DD134 ADRP X21, 0xD4F000
	0x033DD138 LDRB W8, [X20 + 0x365]
	0x033DD13C LDR X21, [X21 + 0xF18]
	0x033DD140 MOV X19, X0
	0x033DD144 TBNZ X8, 0x0, 0x33DD15C
	0x033DD148 ADRP X0, 0xD4F000
	0x033DD14C LDR X0, [X0 + 0xF18]
	0x033DD150 BL 0x1C16CF4
	0x033DD154 MOVZ W8, 0x1
	0x033DD158 STRB W8, [X20 + 0x365]
	0x033DD15C LDR X1, [X21]
	0x033DD160 MOV X0, X19
	0x033DD164 MOV X2, X31
	0x033DD168 BL 0x338C8D8
	0x033DD16C MOVZ W8, 0x1520
	0x033DD170 MOVK W8, 0x80130000
	0x033DD174 STR W8, [X19 + 0x60]
	0x033DD178 LDP X20, X19, [X31 + 0x10]
	0x033DD17C LDP X30, X21, [X31], #0x20
	0x033DD180 RET
	0x033DD184 STP X30, X19, [X31 - 0x10]!
	0x033DD188 MOV X2, X31
	0x033DD18C MOV X19, X0
	0x033DD190 BL 0x338C8D8
	0x033DD194 MOVZ W8, 0x1520
	0x033DD198 MOVK W8, 0x80130000
	0x033DD19C STR W8, [X19 + 0x60]
	0x033DD1A0 LDP X30, X19, [X31], #0x10
	0x033DD1A4 RET
	0x033DD1A8 MOV X4, X31
	0x033DD1AC B 0x338CA74
	0x033DD1B0 STR X30, [X31 - 0x20]!
	0x033DD1B4 STP X20, X19, [X31 + 0x10]
	0x033DD1B8 ADRP X20, 0x1000000
	0x033DD1BC ADRP X19, 0xD19000
	0x033DD1C0 LDRB W8, [X20 + 0x366]
	0x033DD1C4 LDR X19, [X19 + 0x128]
	0x033DD1C8 TBNZ X8, 0x0, 0x33DD1E0
	0x033DD1CC ADRP X0, 0xD19000
	0x033DD1D0 LDR X0, [X0 + 0x128]
	0x033DD1D4 BL 0x1C16CF4
	0x033DD1D8 MOVZ W8, 0x1
	0x033DD1DC STRB W8, [X20 + 0x366]
	0x033DD1E0 ADD X0, X31, 0x8
	0x033DD1E4 MOVN W5, 0x0
	0x033DD1E8 MOV W1, W31
	0x033DD1EC MOV W2, W31
	0x033DD1F0 MOV W3, W31

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X19, 0x1002000
	015 Move W8, [X19+845]
	016 Move W26, W2
	017 Move W21, W1
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0xD51000
	024 Move X0, [X0+3560]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X19+845], W8
	028 Move X15, 0xD51000
	029 Move X15, [X15+3560]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X0, [X15]
	032 Move W22, [X20]
	033 Move W19, W21
	034 ShiftRight W19, 27
	035 And W19, W19, 0x3FFFFFF
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {42}
	039 Call 0x1C17DFC
	040 Move X15, 0xD51000
	041 Move X15, [X15+3560]
	042 Move W8, W22
	043 ShiftRight W8, 16
	044 And W8, W8, 0x7FFF
	045 NotImplemented "Instruction CMP not yet implemented."
	046 NotImplemented "Instruction CSEL not yet implemented."
	047 Move W9, 17
	048 Move W12, W8
	049 ShiftRight W12, 24
	050 And W12, W12, 0x7FFFFFFF
	051 NotImplemented "Instruction CSINC not yet implemented."
	052 Move W11, W8
	053 ShiftRight W11, 24
	054 And W11, W11, 0x7FFFFF
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Or W12, W9, 8
	057 NotImplemented "Instruction CSEL not yet implemented."
	058 NotImplemented "Instruction CSEL not yet implemented."
	059 Move W12, W8
	060 ShiftRight W12, 28
	061 And W12, W12, 0x7FFFFFFF
	062 Move W11, W8
	063 ShiftRight W11, 28
	064 And W11, W11, 0x7FFFFFF
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Or W12, W9, 4
	067 NotImplemented "Instruction CSEL not yet implemented."
	068 NotImplemented "Instruction CSEL not yet implemented."
	069 Move W12, W8
	070 ShiftRight W12, 30
	071 And W12, W12, 0x7FFFFFFF
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Or W12, W9, 2
	074 Move W11, W8
	075 ShiftRight W11, 30
	076 And W11, W11, 0x1FFFFFFF
	077 NotImplemented "Instruction CSEL not yet implemented."
	078 NotImplemented "Instruction CSEL not yet implemented."
	079 Subtract W9, W19, W9
	080 Move W10, 77
	081 Add W8, W9, W8
	082 Move TEMP, 0x138C
	083 Not TEMP
	084 Move W9, TEMP
	085 NotImplemented "Instruction MADD not yet implemented."
	086 NotImplemented "Instruction SBFM not yet implemented."
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Add W8, W8, 1
	089 Move W8, W31
	090 Subtract W9, W26, 28
	091 NotImplemented "Instruction CMP not yet implemented."
	092 NotImplemented "Instruction CSEL not yet implemented."
	093 Compare W25, 0
	094 JumpIfEqual {765}
	095 Move X3, 0x5A53
	096 Move X6, 0xF5C3
	097 Move X7, 0xF7CF
	098 Move X30, 0x594B
	099 Move X24, 0xCEFD
	100 NotImplemented "Instruction MOVK not yet implemented."
	101 NotImplemented "Instruction MOVK not yet implemented."
	102 NotImplemented "Instruction MOVK not yet implemented."
	103 NotImplemented "Instruction MOVK not yet implemented."
	104 NotImplemented "Instruction MOVK not yet implemented."
	105 Move W16, 0x7960
	106 Move W17, 0xBDC0
	107 Move W1, 0x6980
	108 Move W2, 0x1F00
	109 Move W27, 0x3600
	110 NotImplemented "Instruction MOVK not yet implemented."
	111 Move X4, -42225664
	112 Or X5, X31, -3689348814741910324
	113 NotImplemented "Instruction MOVK not yet implemented."
	114 NotImplemented "Instruction MOVK not yet implemented."
	115 NotImplemented "Instruction MOVK not yet implemented."
	116 NotImplemented "Instruction MOVK not yet implemented."
	117 Move W10, W31
	118 Move W28, W31
	119 NotImplemented "Instruction MOVK not yet implemented."
	120 NotImplemented "Instruction MOVK not yet implemented."
	121 NotImplemented "Instruction MOVK not yet implemented."
	122 NotImplemented "Instruction MOVK not yet implemented."
	123 NotImplemented "Instruction MOVK not yet implemented."
	124 Subtract W26, W26, W25
	125 NotImplemented "Instruction MOVK not yet implemented."
	126 Add X4, X4, 2606
	127 Move TEMP, 9
	128 Not TEMP
	129 Move W19, TEMP
	130 NotImplemented "Instruction MOVK not yet implemented."
	131 Move TEMP, 99
	132 Not TEMP
	133 Move W22, TEMP
	134 NotImplemented "Instruction MOVK not yet implemented."
	135 Move TEMP, 999
	136 Not TEMP
	137 Move W29, TEMP
	138 NotImplemented "Instruction MOVK not yet implemented."
	139 Move TEMP, 0x270F
	140 Not TEMP
	141 Move W23, TEMP
	142 NotImplemented "Instruction MOVK not yet implemented."
	143 NotImplemented "Instruction MOVK not yet implemented."
	144 Move [X31+12], W26
	145 Subtract W8, W25, 1
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Move W26, W10
	148 NotImplemented "Instruction ADR not yet implemented."
	149 NotImplemented "Instruction LDRH not yet implemented."
	150 Add X9, X9, X10
	151 CallNoReturn X9
	152 Move X0, [X15]
	153 Move W8, [X0+224]
	154 Compare W8, 0
	155 JumpIfNotEqual {187}
	156 Call 0x1C17DFC
	157 Move X15, 0xD51000
	158 Move X30, 0x594B
	159 Move X7, 0xF7CF
	160 Move X6, 0xF5C3
	161 Move X3, 0x5A53
	162 Move X15, [X15+3560]
	163 NotImplemented "Instruction MOVK not yet implemented."
	164 NotImplemented "Instruction MOVK not yet implemented."
	165 NotImplemented "Instruction MOVK not yet implemented."
	166 NotImplemented "Instruction MOVK not yet implemented."
	167 NotImplemented "Instruction MOVK not yet implemented."
	168 NotImplemented "Instruction MOVK not yet implemented."
	169 NotImplemented "Instruction MOVK not yet implemented."
	170 Or X5, X31, -3689348814741910324
	171 Move X4, -42225664
	172 NotImplemented "Instruction MOVK not yet implemented."
	173 Move W2, 0x1F00
	174 Move W1, 0x6980
	175 Move W17, 0xBDC0
	176 Move W16, 0x7960
	177 NotImplemented "Instruction MOVK not yet implemented."
	178 NotImplemented "Instruction MOVK not yet implemented."
	179 NotImplemented "Instruction MOVK not yet implemented."
	180 NotImplemented "Instruction MOVK not yet implemented."
	181 Add X4, X4, 2606
	182 NotImplemented "Instruction MOVK not yet implemented."
	183 NotImplemented "Instruction MOVK not yet implemented."
	184 NotImplemented "Instruction MOVK not yet implemented."
	185 NotImplemented "Instruction MOVK not yet implemented."
	186 NotImplemented "Instruction MOVK not yet implemented."
	187 Add X8, X20, W21
	188 Move W10, [X8]
	189 Move W9, 0xCCCD
	190 NotImplemented "Instruction MOVK not yet implemented."
	191 Subtract W12, W21, 1
	192 Multiply X9, X10, X9
	193 Move X9, X9
	194 ShiftRight X9, 35
	195 And X9, X9, 0x7FFFFFFF
	196 NotImplemented "Instruction MADD not yet implemented."
	197 Move W11, W12
	198 Add X11, X11, 1
	199 Add X12, X20, W12
	200 Move W13, [X12]
	201 Subtract X11, X11, 1
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Move X14, X13
	204 NotImplemented "Instruction BFM not yet implemented."
	205 NotImplemented "Instruction INVALID not yet implemented."
	206 Move X10, X10
	207 ShiftRight X10, 3
	208 And X10, X10, 0x7FFFFFFF
	209 Move [X12-4], W10
	210 NotImplemented "Instruction MADD not yet implemented."
	211 Move W11, 5
	212 Move X0, [X15]
	213 Move W8, [X0+224]
	214 Compare W8, 0
	215 JumpIfNotEqual {247}
	216 Call 0x1C17DFC
	217 Move X15, 0xD51000
	218 Move X30, 0x594B
	219 Move X7, 0xF7CF
	220 Move X6, 0xF5C3
	221 Move X3, 0x5A53
	222 Move X15, [X15+3560]
	223 NotImplemented "Instruction MOVK not yet implemented."
	224 NotImplemented "Instruction MOVK not yet implemented."
	225 NotImplemented "Instruction MOVK not yet implemented."
	226 NotImplemented "Instruction MOVK not yet implemented."
	227 NotImplemented "Instruction MOVK not yet implemented."
	228 NotImplemented "Instruction MOVK not yet implemented."
	229 NotImplemented "Instruction MOVK not yet implemented."
	230 Or X5, X31, -3689348814741910324
	231 Move X4, -42225664
	232 NotImplemented "Instruction MOVK not yet implemented."
	233 Move W2, 0x1F00
	234 Move W1, 0x6980
	235 Move W17, 0xBDC0
	236 Move W16, 0x7960
	237 NotImplemented "Instruction MOVK not yet implemented."
	238 NotImplemented "Instruction MOVK not yet implemented."
	239 NotImplemented "Instruction MOVK not yet implemented."
	240 NotImplemented "Instruction MOVK not yet implemented."
	241 Add X4, X4, 2606
	242 NotImplemented "Instruction MOVK not yet implemented."
	243 NotImplemented "Instruction MOVK not yet implemented."
	244 NotImplemented "Instruction MOVK not yet implemented."
	245 NotImplemented "Instruction MOVK not yet implemented."
	246 NotImplemented "Instruction MOVK not yet implemented."
	247 Add X8, X20, W21
	248 Move W10, [X8]
	249 Move W11, 0x4B83
	250 NotImplemented "Instruction MOVK not yet implemented."
	251 Subtract W12, W21, 1
	252 Move W9, W10
	253 ShiftRight W9, 9
	254 And W9, W9, 0x7FFFFFFF
	255 NotImplemented "Instruction UMADDL not yet implemented."
	256 Move X9, X9
	257 ShiftRight X9, 39
	258 And X9, X9, 0x7FFFFFFF
	259 NotImplemented "Instruction MADD not yet implemented."
	260 Move W11, W12
	261 Add X11, X11, 1
	262 Add X12, X20, W12
	263 Move W13, [X12]
	264 Subtract X11, X11, 1
	265 NotImplemented "Instruction CMP not yet implemented."
	266 Move X14, X13
	267 NotImplemented "Instruction BFM not yet implemented."
	268 Move X10, X14
	269 ShiftRight X10, 9
	270 And X10, X10, 0x7FFFFFFF
	271 NotImplemented "Instruction INVALID not yet implemented."
	272 Move X10, X10
	273 ShiftRight X10, 11
	274 And X10, X10, 0x7FFFFFFF
	275 Move [X12-4], W10
	276 NotImplemented "Instruction MADD not yet implemented."
	277 Move W11, 0x6500
	278 NotImplemented "Instruction MOVK not yet implemented."
	279 Move X0, [X15]
	280 Move W8, [X0+224]
	281 Compare W8, 0
	282 JumpIfNotEqual {314}
	283 Call 0x1C17DFC
	284 Move X15, 0xD51000
	285 Move X30, 0x594B
	286 Move X7, 0xF7CF
	287 Move X6, 0xF5C3
	288 Move X3, 0x5A53
	289 Move X15, [X15+3560]
	290 NotImplemented "Instruction MOVK not yet implemented."
	291 NotImplemented "Instruction MOVK not yet implemented."
	292 NotImplemented "Instruction MOVK not yet implemented."
	293 NotImplemented "Instruction MOVK not yet implemented."
	294 NotImplemented "Instruction MOVK not yet implemented."
	295 NotImplemented "Instruction MOVK not yet implemented."
	296 NotImplemented "Instruction MOVK not yet implemented."
	297 Or X5, X31, -3689348814741910324
	298 Move X4, -42225664
	299 NotImplemented "Instruction MOVK not yet implemented."
	300 Move W2, 0x1F00
	301 Move W1, 0x6980
	302 Move W17, 0xBDC0
	303 Move W16, 0x7960
	304 NotImplemented "Instruction MOVK not yet implemented."
	305 NotImplemented "Instruction MOVK not yet implemented."
	306 NotImplemented "Instruction MOVK not yet implemented."
	307 NotImplemented "Instruction MOVK not yet implemented."
	308 Add X4, X4, 2606
	309 NotImplemented "Instruction MOVK not yet implemented."
	310 NotImplemented "Instruction MOVK not yet implemented."
	311 NotImplemented "Instruction MOVK not yet implemented."
	312 NotImplemented "Instruction MOVK not yet implemented."
	313 NotImplemented "Instruction MOVK not yet implemented."
	314 Add X8, X20, W21
	315 Move W10, [X8]
	316 Move W9, 0x851F
	317 NotImplemented "Instruction MOVK not yet implemented."
	318 Subtract W12, W21, 1
	319 Multiply X9, X10, X9
	320 Move X9, X9
	321 ShiftRight X9, 37
	322 And X9, X9, 0x7FFFFFFF
	323 NotImplemented "Instruction MADD not yet implemented."
	324 Move W11, W12
	325 Add X11, X11, 1
	326 Add X12, X20, W12
	327 Move W13, [X12]
	328 Subtract X11, X11, 1
	329 NotImplemented "Instruction CMP not yet implemented."
	330 Move X14, X13
	331 NotImplemented "Instruction BFM not yet implemented."
	332 Move X10, X14
	333 ShiftRight X10, 2
	334 And X10, X10, 0x7FFFFFFF
	335 NotImplemented "Instruction INVALID not yet implemented."
	336 Move X10, X10
	337 ShiftRight X10, 2
	338 And X10, X10, 0x7FFFFFFF
	339 Move [X12-4], W10
	340 NotImplemented "Instruction MADD not yet implemented."
	341 Move W11, 50
	342 Move X0, [X15]
	343 Move W8, [X0+224]
	344 Compare W8, 0
	345 JumpIfNotEqual {377}
	346 Call 0x1C17DFC
	347 Move X15, 0xD51000
	348 Move X30, 0x594B
	349 Move X7, 0xF7CF
	350 Move X6, 0xF5C3
	351 Move X3, 0x5A53
	352 Move X15, [X15+3560]
	353 NotImplemented "Instruction MOVK not yet implemented."
	354 NotImplemented "Instruction MOVK not yet implemented."
	355 NotImplemented "Instruction MOVK not yet implemented."
	356 NotImplemented "Instruction MOVK not yet implemented."
	357 NotImplemented "Instruction MOVK not yet implemented."
	358 NotImplemented "Instruction MOVK not yet implemented."
	359 NotImplemented "Instruction MOVK not yet implemented."
	360 Or X5, X31, -3689348814741910324
	361 Move X4, -42225664
	362 NotImplemented "Instruction MOVK not yet implemented."
	363 Move W2, 0x1F00
	364 Move W1, 0x6980
	365 Move W17, 0xBDC0
	366 Move W16, 0x7960
	367 NotImplemented "Instruction MOVK not yet implemented."
	368 NotImplemented "Instruction MOVK not yet implemented."
	369 NotImplemented "Instruction MOVK not yet implemented."
	370 NotImplemented "Instruction MOVK not yet implemented."
	371 Add X4, X4, 2606
	372 NotImplemented "Instruction MOVK not yet implemented."
	373 NotImplemented "Instruction MOVK not yet implemented."
	374 NotImplemented "Instruction MOVK not yet implemented."
	375 NotImplemented "Instruction MOVK not yet implemented."
	376 NotImplemented "Instruction MOVK not yet implemented."
	377 Add X8, X20, W21
	378 Move W10, [X8]
	379 Move W9, 0x4DD3
	380 NotImplemented "Instruction MOVK not yet implemented."
	381 Subtract W12, W21, 1
	382 Multiply X9, X10, X9
	383 Move X9, X9
	384 ShiftRight X9, 38
	385 And X9, X9, 0x7FFFFFFF
	386 NotImplemented "Instruction MADD not yet implemented."
	387 Move W11, W12
	388 Add X11, X11, 1
	389 Add X12, X20, W12
	390 Move W13, [X12]
	391 Subtract X11, X11, 1
	392 NotImplemented "Instruction CMP not yet implemented."
	393 Move X14, X13
	394 NotImplemented "Instruction BFM not yet implemented."
	395 Move X10, X14
	396 ShiftRight X10, 3
	397 And X10, X10, 0x7FFFFFFF
	398 NotImplemented "Instruction INVALID not yet implemented."
	399 Move X10, X10
	400 ShiftRight X10, 4
	401 And X10, X10, 0x7FFFFFFF
	402 Move [X12-4], W10
	403 NotImplemented "Instruction MADD not yet implemented."
	404 Move W11, 500
	405 Move X0, [X15]
	406 Move W8, [X0+224]
	407 Compare W8, 0
	408 JumpIfNotEqual {440}
	409 Call 0x1C17DFC
	410 Move X15, 0xD51000
	411 Move X30, 0x594B
	412 Move X7, 0xF7CF
	413 Move X6, 0xF5C3
	414 Move X3, 0x5A53
	415 Move X15, [X15+3560]
	416 NotImplemented "Instruction MOVK not yet implemented."
	417 NotImplemented "Instruction MOVK not yet implemented."
	418 NotImplemented "Instruction MOVK not yet implemented."
	419 NotImplemented "Instruction MOVK not yet implemented."
	420 NotImplemented "Instruction MOVK not yet implemented."
	421 NotImplemented "Instruction MOVK not yet implemented."
	422 NotImplemented "Instruction MOVK not yet implemented."
	423 Or X5, X31, -3689348814741910324
	424 Move X4, -42225664
	425 NotImplemented "Instruction MOVK not yet implemented."
	426 Move W2, 0x1F00
	427 Move W1, 0x6980
	428 Move W17, 0xBDC0
	429 Move W16, 0x7960
	430 NotImplemented "Instruction MOVK not yet implemented."
	431 NotImplemented "Instruction MOVK not yet implemented."
	432 NotImplemented "Instruction MOVK not yet implemented."
	433 NotImplemented "Instruction MOVK not yet implemented."
	434 Add X4, X4, 2606
	435 NotImplemented "Instruction MOVK not yet implemented."
	436 NotImplemented "Instruction MOVK not yet implemented."
	437 NotImplemented "Instruction MOVK not yet implemented."
	438 NotImplemented "Instruction MOVK not yet implemented."
	439 NotImplemented "Instruction MOVK not yet implemented."
	440 Add X8, X20, W21
	441 Move W10, [X8]
	442 Move W9, 0x1759
	443 NotImplemented "Instruction MOVK not yet implemented."
	444 Subtract W12, W21, 1
	445 Multiply X9, X10, X9
	446 Move X9, X9
	447 ShiftRight X9, 45
	448 And X9, X9, 0x7FFFFFFF
	449 NotImplemented "Instruction MADD not yet implemented."
	450 Move W11, W12
	451 Add X11, X11, 1
	452 Add X12, X20, W12
	453 Move W13, [X12]
	454 Subtract X11, X11, 1
	455 NotImplemented "Instruction CMP not yet implemented."
	456 Move X14, X13
	457 NotImplemented "Instruction BFM not yet implemented."
	458 NotImplemented "Instruction INVALID not yet implemented."
	459 Move X10, X10
	460 ShiftRight X10, 11
	461 And X10, X10, 0x7FFFFFFF
	462 Move [X12-4], W10
	463 NotImplemented "Instruction MADD not yet implemented."
	464 Move W11, 0x1388
	465 Move X0, [X15]
	466 Move W8, [X0+224]
	467 Compare W8, 0
	468 JumpIfNotEqual {500}
	469 Call 0x1C17DFC
	470 Move X15, 0xD51000
	471 Move X30, 0x594B
	472 Move X7, 0xF7CF
	473 Move X6, 0xF5C3
	474 Move X3, 0x5A53
	475 Move X15, [X15+3560]
	476 NotImplemented "Instruction MOVK not yet implemented."
	477 NotImplemented "Instruction MOVK not yet implemented."
	478 NotImplemented "Instruction MOVK not yet implemented."
	479 NotImplemented "Instruction MOVK not yet implemented."
	480 NotImplemented "Instruction MOVK not yet implemented."
	481 NotImplemented "Instruction MOVK not yet implemented."
	482 NotImplemented "Instruction MOVK not yet implemented."
	483 Or X5, X31, -3689348814741910324
	484 Move X4, -42225664
	485 NotImplemented "Instruction MOVK not yet implemented."
	486 Move W2, 0x1F00
	487 Move W1, 0x6980
	488 Move W17, 0xBDC0
	489 Move W16, 0x7960
	490 NotImplemented "Instruction MOVK not yet implemented."
	491 NotImplemented "Instruction MOVK not yet implemented."
	492 NotImplemented "Instruction MOVK not yet implemented."
	493 NotImplemented "Instruction MOVK not yet implemented."
	494 Add X4, X4, 2606
	495 NotImplemented "Instruction MOVK not yet implemented."
	496 NotImplemented "Instruction MOVK not yet implemented."
	497 NotImplemented "Instruction MOVK not yet implemented."
	498 NotImplemented "Instruction MOVK not yet implemented."
	499 NotImplemented "Instruction MOVK not yet implemented."
	500 Add X8, X20, W21
	501 Move W10, [X8]
	502 Move W11, 0x5AC5
	503 NotImplemented "Instruction MOVK not yet implemented."
	504 Subtract W12, W21, 1
	505 Move W9, W10
	506 ShiftRight W9, 5
	507 And W9, W9, 0x7FFFFFFF
	508 NotImplemented "Instruction UMADDL not yet implemented."
	509 Move X9, X9
	510 ShiftRight X9, 39
	511 And X9, X9, 0x7FFFFFFF
	512 NotImplemented "Instruction MADD not yet implemented."
	513 Move X0, 0x7843
	514 NotImplemented "Instruction MOVK not yet implemented."
	515 Move W11, W12
	516 NotImplemented "Instruction MOVK not yet implemented."
	517 Add X11, X11, 1
	518 Add X12, X20, W12
	519 NotImplemented "Instruction MOVK not yet implemented."
	520 Move W13, [X12]
	521 Subtract X11, X11, 1
	522 NotImplemented "Instruction CMP not yet implemented."
	523 Move X14, X13
	524 NotImplemented "Instruction BFM not yet implemented."
	525 Move X10, X14
	526 ShiftRight X10, 5
	527 And X10, X10, 0x7FFFFFFF
	528 NotImplemented "Instruction INVALID not yet implemented."
	529 Move X10, X10
	530 ShiftRight X10, 7
	531 And X10, X10, 0x7FFFFFFF
	532 Move [X12-4], W10
	533 NotImplemented "Instruction MADD not yet implemented."
	534 Move W11, 0xC350
	535 Move X0, [X15]
	536 Move W8, [X0+224]
	537 Compare W8, 0
	538 JumpIfNotEqual {570}
	539 Call 0x1C17DFC
	540 Move X15, 0xD51000
	541 Move X30, 0x594B
	542 Move X7, 0xF7CF
	543 Move X6, 0xF5C3
	544 Move X3, 0x5A53
	545 Move X15, [X15+3560]
	546 NotImplemented "Instruction MOVK not yet implemented."
	547 NotImplemented "Instruction MOVK not yet implemented."
	548 NotImplemented "Instruction MOVK not yet implemented."
	549 NotImplemented "Instruction MOVK not yet implemented."
	550 NotImplemented "Instruction MOVK not yet implemented."
	551 NotImplemented "Instruction MOVK not yet implemented."
	552 NotImplemented "Instruction MOVK not yet implemented."
	553 Or X5, X31, -3689348814741910324
	554 Move X4, -42225664
	555 NotImplemented "Instruction MOVK not yet implemented."
	556 Move W2, 0x1F00
	557 Move W1, 0x6980
	558 Move W17, 0xBDC0
	559 Move W16, 0x7960
	560 NotImplemented "Instruction MOVK not yet implemented."
	561 NotImplemented "Instruction MOVK not yet implemented."
	562 NotImplemented "Instruction MOVK not yet implemented."
	563 NotImplemented "Instruction MOVK not yet implemented."
	564 Add X4, X4, 2606
	565 NotImplemented "Instruction MOVK not yet implemented."
	566 NotImplemented "Instruction MOVK not yet implemented."
	567 NotImplemented "Instruction MOVK not yet implemented."
	568 NotImplemented "Instruction MOVK not yet implemented."
	569 NotImplemented "Instruction MOVK not yet implemented."
	570 Add X8, X20, W21
	571 Move W10, [X8]
	572 Move W9, 0xDE83
	573 NotImplemented "Instruction MOVK not yet implemented."
	574 Subtract W12, W21, 1
	575 Multiply X9, X10, X9
	576 Move X9, X9
	577 ShiftRight X9, 50
	578 And X9, X9, 0x7FFFFFFF
	579 NotImplemented "Instruction MADD not yet implemented."
	580 Move X0, 0x34DB
	581 NotImplemented "Instruction MOVK not yet implemented."
	582 Move W11, W12
	583 NotImplemented "Instruction MOVK not yet implemented."
	584 Add X11, X11, 1
	585 Add X12, X20, W12
	586 NotImplemented "Instruction MOVK not yet implemented."
	587 Move W13, [X12]
	588 Subtract X11, X11, 1
	589 NotImplemented "Instruction CMP not yet implemented."
	590 Move X14, X13
	591 NotImplemented "Instruction BFM not yet implemented."
	592 NotImplemented "Instruction INVALID not yet implemented."
	593 Move X10, X10
	594 ShiftRight X10, 18
	595 And X10, X10, 0x7FFFFFFF
	596 Move [X12-4], W10
	597 NotImplemented "Instruction MADD not yet implemented."
	598 Move W11, 0xA120
	599 NotImplemented "Instruction MOVK not yet implemented."
	600 Move X0, [X15]
	601 Move W8, [X0+224]
	602 Compare W8, 0
	603 JumpIfNotEqual {635}
	604 Call 0x1C17DFC
	605 Move X15, 0xD51000
	606 Move X30, 0x594B
	607 Move X7, 0xF7CF
	608 Move X6, 0xF5C3
	609 Move X3, 0x5A53
	610 Move X15, [X15+3560]
	611 NotImplemented "Instruction MOVK not yet implemented."
	612 NotImplemented "Instruction MOVK not yet implemented."
	613 NotImplemented "Instruction MOVK not yet implemented."
	614 NotImplemented "Instruction MOVK not yet implemented."
	615 NotImplemented "Instruction MOVK not yet implemented."
	616 NotImplemented "Instruction MOVK not yet implemented."
	617 NotImplemented "Instruction MOVK not yet implemented."
	618 Or X5, X31, -3689348814741910324
	619 Move X4, -42225664
	620 NotImplemented "Instruction MOVK not yet implemented."
	621 Move W2, 0x1F00
	622 Move W1, 0x6980
	623 Move W17, 0xBDC0
	624 Move W16, 0x7960
	625 NotImplemented "Instruction MOVK not yet implemented."
	626 NotImplemented "Instruction MOVK not yet implemented."
	627 NotImplemented "Instruction MOVK not yet implemented."
	628 NotImplemented "Instruction MOVK not yet implemented."
	629 Add X4, X4, 2606
	630 NotImplemented "Instruction MOVK not yet implemented."
	631 NotImplemented "Instruction MOVK not yet implemented."
	632 NotImplemented "Instruction MOVK not yet implemented."
	633 NotImplemented "Instruction MOVK not yet implemented."
	634 NotImplemented "Instruction MOVK not yet implemented."
	635 Add X8, X20, W21
	636 Move W10, [X8]
	637 Move W9, 0xCA6B
	638 NotImplemented "Instruction MOVK not yet implemented."
	639 Subtract W12, W21, 1
	640 Multiply X9, X10, X9
	641 Move X9, X9
	642 ShiftRight X9, 54
	643 And X9, X9, 0x7FFFFFFF
	644 NotImplemented "Instruction MADD not yet implemented."
	645 Move X0, 0x42BD
	646 NotImplemented "Instruction MOVK not yet implemented."
	647 Move W11, W12
	648 NotImplemented "Instruction MOVK not yet implemented."
	649 Add X11, X11, 1
	650 Add X12, X20, W12
	651 NotImplemented "Instruction MOVK not yet implemented."
	652 Move W13, [X12]
	653 Subtract X11, X11, 1
	654 NotImplemented "Instruction CMP not yet implemented."
	655 Move X14, X13
	656 NotImplemented "Instruction BFM not yet implemented."
	657 NotImplemented "Instruction INVALID not yet implemented."
	658 Move X10, X10
	659 ShiftRight X10, 23
	660 And X10, X10, 0x7FFFFFFF
	661 Move [X12-4], W10
	662 NotImplemented "Instruction MADD not yet implemented."
	663 Move W11, 0x4B40
	664 NotImplemented "Instruction MOVK not yet implemented."
	665 Move X0, [X15]
	666 Move W8, [X0+224]
	667 Compare W8, 0
	668 JumpIfNotEqual {700}
	669 Call 0x1C17DFC
	670 Move X15, 0xD51000
	671 Move X30, 0x594B
	672 Move X7, 0xF7CF
	673 Move X6, 0xF5C3
	674 Move X3, 0x5A53
	675 Move X15, [X15+3560]
	676 NotImplemented "Instruction MOVK not yet implemented."
	677 NotImplemented "Instruction MOVK not yet implemented."
	678 NotImplemented "Instruction MOVK not yet implemented."
	679 NotImplemented "Instruction MOVK not yet implemented."
	680 NotImplemented "Instruction MOVK not yet implemented."
	681 NotImplemented "Instruction MOVK not yet implemented."
	682 NotImplemented "Instruction MOVK not yet implemented."
	683 Or X5, X31, -3689348814741910324
	684 Move X4, -42229760
	685 NotImplemented "Instruction MOVK not yet implemented."
	686 Move W2, 0x1F00
	687 Move W1, 0x6980
	688 Move W17, 0xBDC0
	689 Move W16, 0x7960
	690 NotImplemented "Instruction MOVK not yet implemented."
	691 NotImplemented "Instruction MOVK not yet implemented."
	692 NotImplemented "Instruction MOVK not yet implemented."
	693 NotImplemented "Instruction MOVK not yet implemented."
	694 Add X4, X4, 2606
	695 NotImplemented "Instruction MOVK not yet implemented."
	696 NotImplemented "Instruction MOVK not yet implemented."
	697 NotImplemented "Instruction MOVK not yet implemented."
	698 NotImplemented "Instruction MOVK not yet implemented."
	699 NotImplemented "Instruction MOVK not yet implemented."
	700 Add X8, X20, W21
	701 Move W10, [X8]
	702 Move W9, 0x3B89
	703 NotImplemented "Instruction MOVK not yet implemented."
	704 Subtract W12, W21, 1
	705 Multiply X9, X10, X9
	706 Move X9, X9
	707 ShiftRight X9, 57
	708 And X9, X9, 0x7FFFFFFF
	709 NotImplemented "Instruction MADD not yet implemented."
	710 Move W11, W12
	711 Add X11, X11, 1
	712 Add X12, X20, W12
	713 Move W13, [X12]
	714 Subtract X11, X11, 1
	715 NotImplemented "Instruction CMP not yet implemented."
	716 Move X14, X13
	717 NotImplemented "Instruction BFM not yet implemented."
	718 NotImplemented "Instruction INVALID not yet implemented."
	719 Move X10, X10
	720 ShiftRight X10, 26
	721 And X10, X10, 0x7FFFFFFF
	722 Move [X12-4], W10
	723 NotImplemented "Instruction MADD not yet implemented."
	724 Move W11, 0xF080
	725 NotImplemented "Instruction MOVK not yet implemented."
	726 Move W11, 50
	727 Move W11, 500
	728 Move W11, 0x1388
	729 Move W11, 0xC350
	730 NotImplemented "Instruction CMP not yet implemented."
	731 Move [X8], W9
	732 NotImplemented "Instruction CSET not yet implemented."
	733 NotImplemented "Instruction CMP not yet implemented."
	734 NotImplemented "Instruction CSET not yet implemented."
	735 And W8, W9, W8
	736 Or W28, W28, W26
	737 Subtract W25, W25, 9
	738 Subtract W21, W21, W8
	739 NotImplemented "Instruction CMP not yet implemented."
	740 Move W26, [X31+12]
	741 Compare W26, 0
	742 JumpIfNotEqual {762}
	743 Move W26, [X31+12]
	744 NotImplemented "Instruction CMP not yet implemented."
	745 Move W8, [X20]
	746 And W9, W8, 1
	747 Or W9, W9, W28
	748 Compare W9, 0
	749 JumpIfEqual {765}
	750 Add W8, W8, 1
	751 Move [X20], W8
	752 Move W21, W31
	753 Add W21, W21, 1
	754 Move W8, [X20]
	755 Add W8, W8, 1
	756 Move [X20], W8
	757 NotImplemented "Instruction CMP not yet implemented."
	758 Compare W26, 0
	759 JumpIfEqual {780}
	760 Move W10, W31
	761 Move W28, W31
	762 Subtract W26, W26, 1
	763 Move [X31+12], W26
	764 Move W25, 1
	765 Move W0, W26
	766 Move X20, [X31+96]
	767 Move X19, [X31+104]
	768 Move X22, [X31+80]
	769 Move X21, [X31+88]
	770 Move X24, [X31+64]
	771 Move X23, [X31+72]
	772 Move X26, [X31+48]
	773 Move X25, [X31+56]
	774 Move X28, [X31+32]
	775 Move X27, [X31+40]
	776 Move X29, [X31+16]
	777 Move X30, [X31+24]
	778 Add X31, X31, 112
	779 Return X0
	780 Move X0, 0xD17000
	781 Move X0, [X0+2136]
	782 Call 0x1C17D08
	783 Call 0x1C17F10
	784 Move X19, X0
	785 Move X0, 0xD4E000
	786 Move X0, [X0+4072]
	787 Call 0x1C17D08
	788 Move X1, X0
	789 Move X0, X19
	790 Move X2, X31
	791 Call OverflowException..ctor, X0, X1
	792 Move X0, 0xD50000
	793 Move X0, [X0+3776]
	794 Call 0x1C17D08
	795 Move X1, X0
	796 Move X0, X19
	797 Call 0x1C17DEC

Method: System.UInt32 DivByConst(System.UInt32* result, System.UInt32 hiRes, out System.UInt32 quotient, out System.UInt32 remainder, System.UInt32 power)

Disassembly:
	0x033DD1F4 MOV W4, W31
	0x033DD1F8 MOV X6, X31
	0x033DD1FC STR X31, [X31 + 0x8]
	0x033DD200 BL 0x3393FE8
	0x033DD204 LDR X8, [X19]
	0x033DD208 LDR X9, [X31 + 0x8]
	0x033DD20C LDP X20, X19, [X31 + 0x10]
	0x033DD210 LDR X8, [X8 + 0xB8]
	0x033DD214 STR X9, [X8]
	0x033DD218 LDR X30, [X31], #0x20
	0x033DD21C RET
	0x033DD220 STP X30, X21, [X31 - 0x20]!
	0x033DD224 STP X20, X19, [X31 + 0x10]
	0x033DD228 ADRP X20, 0x1000000
	0x033DD22C ADRP X21, 0xD4F000
	0x033DD230 LDRB W8, [X20 + 0x367]
	0x033DD234 LDR X21, [X21 + 0xF20]
	0x033DD238 MOV X19, X0
	0x033DD23C TBNZ X8, 0x0, 0x33DD254
	0x033DD240 ADRP X0, 0xD4F000
	0x033DD244 LDR X0, [X0 + 0xF20]

ISIL:
	001 Move W8, [X0]
	002 Subtract W10, W1, 1
	003 NotImplemented "Instruction UDIV not yet implemented."
	004 NotImplemented "Instruction MSUB not yet implemented."
	005 Move [X2], W9
	006 Move [X3], W8
	007 Move W9, W4
	008 Add X10, X0, W10
	009 Move W11, [X10]
	010 Subtract W1, W1, 1
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X12, X11
	013 NotImplemented "Instruction BFM not yet implemented."
	014 NotImplemented "Instruction UDIV not yet implemented."
	015 Move [X10-4], W8
	016 NotImplemented "Instruction MSUB not yet implemented."
	017 Move [X3], W8
	018 Move W0, W4
	019 Return X0

Method: System.Int32 LeadingZeroCount(System.UInt32 value)

Disassembly:
	0x033DD248 BL 0x1C16CF4
	0x033DD24C MOVZ W8, 0x1
	0x033DD250 STRB W8, [X20 + 0x367]
	0x033DD254 LDR X1, [X21]
	0x033DD258 MOV X0, X19
	0x033DD25C MOV X2, X31
	0x033DD260 BL 0x3315AEC
	0x033DD264 MOVZ W8, 0x152C
	0x033DD268 MOVK W8, 0x80130000
	0x033DD26C STR W8, [X19 + 0x60]
	0x033DD270 LDP X20, X19, [X31 + 0x10]
	0x033DD274 LDP X30, X21, [X31], #0x20
	0x033DD278 RET
	0x033DD27C STP X30, X19, [X31 - 0x10]!
	0x033DD280 MOV X2, X31
	0x033DD284 MOV X19, X0
	0x033DD288 BL 0x3315AEC
	0x033DD28C MOVZ W8, 0x152C
	0x033DD290 MOVK W8, 0x80130000
	0x033DD294 STR W8, [X19 + 0x60]
	0x033DD298 LDP X30, X19, [X31], #0x10
	0x033DD29C RET
	0x033DD2A0 MOV X4, X31
	0x033DD2A4 B 0x3315BE4
	0x033DD2A8 MOV X0, X31

ISIL:
	001 Move W8, W0
	002 ShiftRight W8, 16
	003 And W8, W8, 0x7FFF
	004 NotImplemented "Instruction CMP not yet implemented."
	005 NotImplemented "Instruction CSEL not yet implemented."
	006 Move W9, 17
	007 Move W12, W8
	008 ShiftRight W12, 24
	009 And W12, W12, 0x7FFFFFFF
	010 NotImplemented "Instruction CSINC not yet implemented."
	011 Move W10, W8
	012 ShiftRight W10, 24
	013 And W10, W10, 0x7FFFFF
	014 NotImplemented "Instruction CMP not yet implemented."
	015 NotImplemented "Instruction CSEL not yet implemented."
	016 Or W11, W9, 8
	017 Move W12, W8
	018 ShiftRight W12, 28
	019 And W12, W12, 0x7FFFFFFF
	020 NotImplemented "Instruction CSEL not yet implemented."
	021 Move W10, W8
	022 ShiftRight W10, 28
	023 And W10, W10, 0x7FFFFFF
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Or W11, W9, 4
	026 NotImplemented "Instruction CSEL not yet implemented."
	027 NotImplemented "Instruction CSEL not yet implemented."
	028 Move W12, W8
	029 ShiftRight W12, 30
	030 And W12, W12, 0x7FFFFFFF
	031 Move W10, W8
	032 ShiftRight W10, 30
	033 And W10, W10, 0x1FFFFFFF
	034 Or W11, W9, 2
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSEL not yet implemented."
	037 NotImplemented "Instruction CSEL not yet implemented."
	038 Add W0, W9, W8
	039 Return X0

Method: System.Int32 OverflowUnscale(ref System.Decimal/DecCalc/Buf12 bufQuo, System.Int32 scale, System.Boolean sticky)

Disassembly:
	0x033DD2AC RET
	0x033DD2B0 STP X30, X19, [X31 - 0x10]!
	0x033DD2B4 LDR X8, [X0]
	0x033DD2B8 CBZ X8, 0x33DD2D0
	0x033DD2BC LDR W19, [X8 + 0x20]
	0x033DD2C0 BL 0x1C16D44
	0x033DD2C4 CMP W19, 0x1
	0x033DD2C8 CSET W0, GT
	0x033DD2CC B 0x33DD2D4
	0x033DD2D0 MOV W0, W31
	0x033DD2D4 LDP X30, X19, [X31], #0x10
	0x033DD2D8 RET
	0x033DD2DC STP X30, X19, [X31 - 0x10]!
	0x033DD2E0 LDR W19, [X0 + 0x20]
	0x033DD2E4 BL 0x1C16D44
	0x033DD2E8 CMP W19, 0x1
	0x033DD2EC CSET W0, GT
	0x033DD2F0 LDP X30, X19, [X31], #0x10
	0x033DD2F4 RET
	0x033DD2F8 LDR X8, [X0]
	0x033DD2FC CMP X8, 0x0
	0x033DD300 CSET W0, NE
	0x033DD304 RET
	0x033DD308 STR X1, [X0]
	0x033DD30C RET
	0x033DD310 STP X30, X21, [X31 - 0x20]!
	0x033DD314 STP X20, X19, [X31 + 0x10]
	0x033DD318 ADRP X21, 0x1000000
	0x033DD31C LDRB W8, [X21 + 0x368]
	0x033DD320 MOV W20, W1
	0x033DD324 MOV X19, X0
	0x033DD328 TBNZ X8, 0x0, 0x33DD34C
	0x033DD32C ADRP X0, 0xD18000
	0x033DD330 LDR X0, [X0 + 0xA50]
	0x033DD334 BL 0x1C16CF4
	0x033DD338 ADRP X0, 0xD1E000
	0x033DD33C LDR X0, [X0 + 0x7D8]
	0x033DD340 BL 0x1C16CF4
	0x033DD344 MOVZ W8, 0x1
	0x033DD348 STRB W8, [X21 + 0x368]
	0x033DD34C ADRP X21, 0xD1E000
	0x033DD350 LDR X21, [X21 + 0x7D8]
	0x033DD354 TBZ X20, 0x0, 0x33DD380
	0x033DD358 ADRP X20, 0xD18000
	0x033DD35C LDR X20, [X20 + 0xA50]
	0x033DD360 LDR X0, [X20]
	0x033DD364 LDR W8, [X0 + 0xE0]
	0x033DD368 CBNZ W8, 0x33DD374
	0x033DD36C BL 0x1C16DFC
	0x033DD370 LDR X0, [X20]
	0x033DD374 LDR X8, [X0 + 0xB8]
	0x033DD378 LDR X20, [X8]
	0x033DD37C B 0x33DD384
	0x033DD380 MOV X20, X31
	0x033DD384 LDR X0, [X21]
	0x033DD388 LDR W8, [X0 + 0xE0]
	0x033DD38C CBNZ W8, 0x33DD394
	0x033DD390 BL 0x1C16DFC
	0x033DD394 STR X20, [X19]
	0x033DD398 LDP X20, X19, [X31 + 0x10]
	0x033DD39C LDP X30, X21, [X31], #0x20
	0x033DD3A0 RET
	0x033DD3A4 SUB X31, X31, 0x50
	0x033DD3A8 STP X30, X23, [X31 + 0x20]
	0x033DD3AC STP X22, X21, [X31 + 0x30]
	0x033DD3B0 STP X20, X19, [X31 + 0x40]
	0x033DD3B4 ADRP X23, 0x1000000
	0x033DD3B8 ADRP X22, 0xD1E000
	0x033DD3BC MOV X19, X8
	0x033DD3C0 LDRB W8, [X23 + 0x369]
	0x033DD3C4 LDR X22, [X22 + 0x7D8]
	0x033DD3C8 MOV X20, X1
	0x033DD3CC MOV X21, X0
	0x033DD3D0 TBNZ X8, 0x0, 0x33DD3E8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1001000
	007 Move W8, [X22+846]
	008 Move W21, W2
	009 Move W20, W1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xD50000
	016 Move X0, [X0+3560]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+846], W8
	020 Subtract W20, W20, 1
	021 Move W10, [X19]
	022 Move W9, [X19+4]
	023 Move W8, 0x9999
	024 NotImplemented "Instruction MOVK not yet implemented."
	025 Or X11, X31, -3689348814741910324
	026 NotImplemented "Instruction MOVK not yet implemented."
	027 Move [X19+8], W8
	028 Or X8, X9, 0x7FFFFFFFF
	029 NotImplemented "Instruction INVALID not yet implemented."
	030 Move TEMP, 9
	031 Not TEMP
	032 Move W12, TEMP
	033 Move X14, X8
	034 ShiftRight X14, 3
	035 And X14, X14, 0x7FFFFFFF
	036 Move X13, X10
	037 NotImplemented "Instruction MADD not yet implemented."
	038 NotImplemented "Instruction BFM not yet implemented."
	039 NotImplemented "Instruction INVALID not yet implemented."
	040 Move X8, X8
	041 ShiftRight X8, 3
	042 And X8, X8, 0x7FFFFFFF
	043 NotImplemented "Instruction MADD not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move [X19], W8
	046 Move [X19+4], W14
	047 Move TEMP, X8
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {55}
	051 Move TEMP, X21
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {68}
	055 Move X8, 0xD50000
	056 Move X8, [X8+3560]
	057 Move X0, [X8]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X8, [X19]
	063 Add X8, X8, 1
	064 Move [X19], X8
	065 Move W8, [X19+8]
	066 Add W8, W8, 1
	067 Move [X19+8], W8
	068 Move W0, W20
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move X22, [X31+16]
	072 Move X21, [X31+24]
	073 Move X30, [X31+48]
	074 Return X0
	075 Move X0, 0xD17000
	076 Move X0, [X0+2136]
	077 Call 0x1C17D08
	078 Call 0x1C17F10
	079 Move X19, X0
	080 Move X0, 0xD4E000
	081 Move X0, [X0+4072]
	082 Call 0x1C17D08
	083 Move X1, X0
	084 Move X0, X19
	085 Move X2, X31
	086 Call OverflowException..ctor, X0, X1
	087 Move X0, 0xD50000
	088 Move X0, [X0+3784]
	089 Call 0x1C17D08
	090 Move X1, X0
	091 Move X0, X19
	092 Call 0x1C17DEC

Method: System.Int32 SearchScale(ref System.Decimal/DecCalc/Buf12 bufQuo, System.Int32 scale)

Disassembly:
	0x033DD404 LDR W9, [X0 + 0xE0]
	0x033DD408 LDR X22, [X8]
	0x033DD40C CBNZ W9, 0x33DD414
	0x033DD410 BL 0x1C16DFC
	0x033DD414 ADD X8, X31, 0x8
	0x033DD418 MOVZ W4, 0x1
	0x033DD41C MOV X0, X21
	0x033DD420 MOV X1, X22
	0x033DD424 MOV X2, X20
	0x033DD428 MOV W3, W31
	0x033DD42C BL 0x33DD49C
	0x033DD430 LDR X8, [X31 + 0x18]
	0x033DD434 LDUR V0, [X31 + 0x8]
	0x033DD438 LDP X22, X21, [X31 + 0x30]
	0x033DD43C LDP X30, X23, [X31 + 0x20]
	0x033DD440 STR X8, [X19 + 0x10]
	0x033DD444 STR V0, [X19]
	0x033DD448 LDP X20, X19, [X31 + 0x40]
	0x033DD44C ADD X31, X31, 0x50
	0x033DD450 RET
	0x033DD454 ADRP X0, 0xD1B000
	0x033DD458 LDR X0, [X0 + 0x528]
	0x033DD45C BL 0x1C16D08
	0x033DD460 BL 0x1C16F10
	0x033DD464 MOV X19, X0
	0x033DD468 ADRP X0, 0xD4F000
	0x033DD46C LDR X0, [X0 + 0xF28]
	0x033DD470 BL 0x1C16D08
	0x033DD474 MOV X1, X0
	0x033DD478 MOV X0, X19
	0x033DD47C MOV X2, X31
	0x033DD480 BL 0x330E100
	0x033DD484 ADRP X0, 0xD4F000
	0x033DD488 LDR X0, [X0 + 0xF30]
	0x033DD48C BL 0x1C16D08
	0x033DD490 MOV X1, X0
	0x033DD494 MOV X0, X19
	0x033DD498 BL 0x1C16DEC
	0x033DD49C SUB X31, X31, 0x60
	0x033DD4A0 STP X30, X25, [X31 + 0x20]
	0x033DD4A4 STP X24, X23, [X31 + 0x30]
	0x033DD4A8 STP X22, X21, [X31 + 0x40]
	0x033DD4AC STP X20, X19, [X31 + 0x50]
	0x033DD4B0 ADRP X25, 0x1000000
	0x033DD4B4 LDRB W9, [X25 + 0x36C]
	0x033DD4B8 MOV W23, W4
	0x033DD4BC MOV W24, W3
	0x033DD4C0 MOV X20, X2
	0x033DD4C4 MOV X21, X1
	0x033DD4C8 MOV X22, X0
	0x033DD4CC MOV X19, X8
	0x033DD4D0 TBNZ X9, 0x0, 0x33DD4E8
	0x033DD4D4 ADRP X0, 0xD3E000
	0x033DD4D8 LDR X0, [X0 + 0x580]
	0x033DD4DC BL 0x1C16CF4
	0x033DD4E0 MOVZ W8, 0x1
	0x033DD4E4 STRB W8, [X25 + 0x36C]
	0x033DD4E8 CBZ X21, 0x33DD580
	0x033DD4EC LDR X22, [X22]
	0x033DD4F0 CBZ X22, 0x33DD50C
	0x033DD4F4 TBZ X24, 0x0, 0x33DD518
	0x033DD4F8 BL 0x33DD700
	0x033DD4FC MOV X24, X0
	0x033DD500 TBNZ X23, 0x0, 0x33DD520
	0x033DD504 MOV X4, X31
	0x033DD508 B 0x33DD540
	0x033DD50C STP X31, X31, [X19]
	0x033DD510 STR X31, [X19 + 0x10]
	0x033DD514 B 0x33DD568
	0x033DD518 MOV X24, X31
	0x033DD51C TBZ X23, 0x0, 0x33DD504
	0x033DD520 ADRP X8, 0xD3E000
	0x033DD524 LDR X8, [X8 + 0x580]
	0x033DD528 LDR X0, [X8]
	0x033DD52C LDR W8, [X0 + 0xE0]
	0x033DD530 CBNZ W8, 0x33DD538
	0x033DD534 BL 0x1C16DFC
	0x033DD538 BL 0x33DD730
	0x033DD53C MOV X4, X0
	0x033DD540 ADD X8, X31, 0x8
	0x033DD544 MOV X0, X22
	0x033DD548 MOV X1, X21
	0x033DD54C MOV X2, X20
	0x033DD550 MOV X3, X24
	0x033DD554 BL 0x33DD780
	0x033DD558 LDR X8, [X31 + 0x18]
	0x033DD55C LDUR V0, [X31 + 0x8]
	0x033DD560 STR X8, [X19 + 0x10]
	0x033DD564 STR V0, [X19]
	0x033DD568 LDP X20, X19, [X31 + 0x50]
	0x033DD56C LDP X22, X21, [X31 + 0x40]
	0x033DD570 LDP X24, X23, [X31 + 0x30]
	0x033DD574 LDP X30, X25, [X31 + 0x20]
	0x033DD578 ADD X31, X31, 0x60
	0x033DD57C RET
	0x033DD580 ADRP X0, 0xD1B000
	0x033DD584 LDR X0, [X0 + 0x528]
	0x033DD588 BL 0x1C16D08
	0x033DD58C BL 0x1C16F10
	0x033DD590 MOV X19, X0
	0x033DD594 ADRP X0, 0xD4F000
	0x033DD598 LDR X0, [X0 + 0xF28]
	0x033DD59C BL 0x1C16D08
	0x033DD5A0 MOV X1, X0
	0x033DD5A4 MOV X0, X19
	0x033DD5A8 MOV X2, X31
	0x033DD5AC BL 0x330E100
	0x033DD5B0 ADRP X0, 0xD4F000
	0x033DD5B4 LDR X0, [X0 + 0xF38]
	0x033DD5B8 BL 0x1C16D08
	0x033DD5BC MOV X1, X0
	0x033DD5C0 MOV X0, X19
	0x033DD5C4 BL 0x1C16DEC
	0x033DD5C8 SUB X31, X31, 0x60
	0x033DD5CC STR X30, [X31 + 0x20]
	0x033DD5D0 STP X24, X23, [X31 + 0x30]
	0x033DD5D4 STP X22, X21, [X31 + 0x40]
	0x033DD5D8 STP X20, X19, [X31 + 0x50]
	0x033DD5DC ADRP X23, 0x1000000
	0x033DD5E0 ADRP X24, 0xD1E000
	0x033DD5E4 MOV X19, X8
	0x033DD5E8 LDRB W8, [X23 + 0x36A]
	0x033DD5EC LDR X24, [X24 + 0x7D8]
	0x033DD5F0 MOV X20, X2

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1001000
	007 Move W8, [X21+847]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD50000
	015 Move X0, [X0+3560]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+847], W8
	019 Move W21, [X20+8]
	020 Move W8, 0x9999
	021 NotImplemented "Instruction MOVK not yet implemented."
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X22, 0xD50000
	024 Move X22, [X22+3560]
	025 Move X20, [X20]
	026 Move X0, [X22]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1C17DFC
	031 Move X0, [X22]
	032 Move X8, [X0+184]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X8, [X8+24]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X9, 0x2CB9
	037 NotImplemented "Instruction MOVK not yet implemented."
	038 NotImplemented "Instruction MOVK not yet implemented."
	039 NotImplemented "Instruction MOVK not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move W0, 8
	042 Move W0, W31
	043 Add W31, W0, W19
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X30, [X31+48]
	049 Return X0
	050 Compare X8, 0
	051 JumpIfEqual {113}
	052 Move W10, [X8+24]
	053 Move W9, 27
	054 Subtract X9, X9, W19
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Add X9, X8, X9
	057 Move W9, [X9+32]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move W8, 28
	060 Subtract W0, W8, W19
	061 Move W9, 0xA7C6
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move W9, 0x8938
	064 NotImplemented "Instruction MOVK not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move W9, 0x5C28
	067 NotImplemented "Instruction MOVK not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move W9, 1
	070 Move W0, 9
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move W9, 0x10C6
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move W9, 5
	075 Move W9, 0x8DB8
	076 NotImplemented "Instruction MOVK not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move W9, 3
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move W9, 7
	081 NotImplemented "Instruction CINC not yet implemented."
	082 Compare X8, 0
	083 JumpIfEqual {113}
	084 Move W10, [X8+24]
	085 Subtract W9, W0, 1
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Add X10, X8, W9
	088 Move W10, [X10+32]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move W10, W9
	091 Add X8, X8, X10
	092 Move X8, [X8+40]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 NotImplemented "Instruction CSEL not yet implemented."
	095 Move X0, 0xD17000
	096 Move X0, [X0+2136]
	097 Call 0x1C17D08
	098 Call 0x1C17F10
	099 Move X19, X0
	100 Move X0, 0xD4E000
	101 Move X0, [X0+4072]
	102 Call 0x1C17D08
	103 Move X1, X0
	104 Move X0, X19
	105 Move X2, X31
	106 Call OverflowException..ctor, X0, X1
	107 Move X0, 0xD50000
	108 Move X0, [X0+3792]
	109 Call 0x1C17D08
	110 Move X1, X0
	111 Move X0, X19
	112 Call 0x1C17DEC
	113 Call 0x1C17F20
	114 Call 0x1C17F28

Method: System.Boolean Add32To96(ref System.Decimal/DecCalc/Buf12 bufNum, System.UInt32 value)

Disassembly:
	0x033DD3D4 ADRP X0, 0xD1E000
	0x033DD3D8 LDR X0, [X0 + 0x7D8]
	0x033DD3DC BL 0x1C16CF4
	0x033DD3E0 MOVZ W8, 0x1
	0x033DD3E4 STRB W8, [X23 + 0x369]
	0x033DD3E8 LDR X0, [X22]
	0x033DD3EC LDR W8, [X0 + 0xE0]
	0x033DD3F0 CBNZ W8, 0x33DD3FC
	0x033DD3F4 BL 0x1C16DFC
	0x033DD3F8 LDR X0, [X22]
	0x033DD3FC CBZ X20, 0x33DD454
	0x033DD400 LDR X8, [X0 + 0xB8]

ISIL:
	001 Move X8, [X0]
	002 Add X8, X8, W1
	003 Move [X0], X8
	004 Move W8, [X0+8]
	005 Add W8, W8, 1
	006 Move [X0+8], W8
	007 Move W0, W31
	008 Return X0
	009 Move W0, 1
	010 Return X0

Method: System.Void DecAddSub(ref System.Decimal/DecCalc d1, ref System.Decimal/DecCalc d2, System.Boolean sign)

Disassembly:
	0x033DA1F8 MSUB W11, W23, W10, W9
	0x033DA1FC MOV X9, X8
	0x033DA200 BFM X9, X11, 0x20, 0x1F
	0x033DA204 STUR X10, [X31 + 0x2C]
	0x033DA208 CBZ X9, 0x33DA3D8
	0x033DA20C UDIV X9, X9, X23
	0x033DA210 STR W9, [X31 + 0x28]
	0x033DA214 MSUB W26, W23, W9, W8
	0x033DA218 B 0x33DA3DC
	0x033DA21C LDR X0, [X25]
	0x033DA220 ADD X9, X31, 0x38
	0x033DA224 ORR X22, X9, 0x7
	0x033DA228 LDR W8, [X0 + 0xE0]
	0x033DA22C CBNZ W8, 0x33DA234
	0x033DA230 BL 0x1C16DFC
	0x033DA234 MOV X0, X22
	0x033DA238 MOV X1, X21
	0x033DA23C BL 0x33DB344
	0x033DA240 STR W0, [X31 + 0x2C]
	0x033DA244 ADD X0, X31, 0x38
	0x033DA248 MOV X1, X21
	0x033DA24C BL 0x33DB344
	0x033DA250 STR W0, [X31 + 0x28]
	0x033DA254 ADRP X27, 0xD19000
	0x033DA258 LDR X27, [X27 + 0x5A8]
	0x033DA25C MOV W26, W31
	0x033DA260 LDR X23, [X31 + 0x38]
	0x033DA264 LDR W22, [X31 + 0x24]
	0x033DA268 CBZ X23, 0x33DA2A0
	0x033DA26C CMP W22, 0x1C
	0x033DA270 B.EQ 0x33DA504
	0x033DA274 LDR X0, [X25]
	0x033DA278 LDR W8, [X0 + 0xE0]
	0x033DA27C CBNZ W8, 0x33DA284
	0x033DA280 BL 0x1C16DFC
	0x033DA284 ADD X0, X31, 0x28
	0x033DA288 MOV W1, W22
	0x033DA28C BL 0x33DC404
	0x033DA290 CBZ W0, 0x33DA504
	0x033DA294 MOV W22, W0
	0x033DA298 MOVZ W26, 0x1
	0x033DA29C B 0x33DA2C8
	0x033DA2A0 TBZ X22, 0x1F, 0x33DA5C4
	0x033DA2A4 LDR X0, [X27]
	0x033DA2A8 LDR W8, [X0 + 0xE0]
	0x033DA2AC CBNZ W8, 0x33DA2B4
	0x033DA2B0 BL 0x1C16DFC
	0x033DA2B4 SUB W1, W31, W22
	0x033DA2B8 MOVZ W0, 0x9
	0x033DA2BC MOV X2, X31
	0x033DA2C0 BL 0x337EE94
	0x033DA2C4 MOV W22, W0
	0x033DA2C8 LDR X0, [X25]
	0x033DA2CC LDR W8, [X0 + 0xE0]
	0x033DA2D0 CBNZ W8, 0x33DA2DC
	0x033DA2D4 BL 0x1C16DFC
	0x033DA2D8 LDR X0, [X25]
	0x033DA2DC LDR X8, [X0 + 0xB8]
	0x033DA2E0 LDR X8, [X8]
	0x033DA2E4 CBZ X8, 0x33DA65C
	0x033DA2E8 LDR W9, [X8 + 0x18]
	0x033DA2EC CMP W22, W9
	0x033DA2F0 B.CS 0x33DA660
	0x033DA2F4 ADD X8, X8, W22, 0x2, SXTW
	0x033DA2F8 LDR W9, [X31 + 0x24]
	0x033DA2FC LDR W23, [X8 + 0x20]
	0x033DA300 ADD X0, X31, 0x28
	0x033DA304 ADD W8, W9, W22
	0x033DA308 MOV W1, W23
	0x033DA30C STR W8, [X31 + 0x24]
	0x033DA310 BL 0x33DB56C
	0x033DA314 CBNZ W0, 0x33DA664
	0x033DA318 LDR X0, [X25]
	0x033DA31C LDR W8, [X0 + 0xE0]
	0x033DA320 CBNZ W8, 0x33DA328
	0x033DA324 BL 0x1C16DFC
	0x033DA328 ADD X0, X31, 0x38
	0x033DA32C MOV W1, W23
	0x033DA330 BL 0x33DB5F4
	0x033DA334 ADD X0, X31, 0x38
	0x033DA338 MOV X1, X21
	0x033DA33C BL 0x33DB344
	0x033DA340 LDR X8, [X31 + 0x28]
	0x033DA344 ADDS X8, X8, W0, UXTW
	0x033DA348 STR X8, [X31 + 0x28]
	0x033DA34C B.CC 0x33DA260
	0x033DA350 LDR W8, [X31 + 0x30]
	0x033DA354 ADDS W8, W8, 0x1
	0x033DA358 STR W8, [X31 + 0x30]
	0x033DA35C B.CC 0x33DA260
	0x033DA360 LDR X0, [X25]
	0x033DA364 LDR W21, [X31 + 0x24]
	0x033DA368 LDR X22, [X31 + 0x38]
	0x033DA36C LDR W8, [X0 + 0xE0]
	0x033DA370 CBNZ W8, 0x33DA378
	0x033DA374 BL 0x1C16DFC
	0x033DA378 CMP X22, 0x0
	0x033DA37C CSET W2, NE
	0x033DA380 ADD X0, X31, 0x28
	0x033DA384 MOV W1, W21
	0x033DA388 BL 0x33DC2AC
	0x033DA38C MOV W22, W0
	0x033DA390 STR W0, [X31 + 0x24]
	0x033DA394 TBZ X26, 0x0, 0x33DA5A0
	0x033DA398 B 0x33DA5C8
	0x033DA39C TBNZ X23, 0x1F, 0x33DA520
	0x033DA3A0 LDR W9, [X31 + 0x3C]
	0x033DA3A4 UBFM X8, X29, 0x3F, 0x3E
	0x033DA3A8 STR X8, [X31 + 0x38]
	0x033DA3AC EXTR W9, W23, W9, 0x1F
	0x033DA3B0 CMP W9, W26
	0x033DA3B4 STR W9, [X31 + 0x40]
	0x033DA3B8 B.HI 0x33DA520
	0x033DA3BC B.EQ 0x33DA50C
	0x033DA3C0 B 0x33DA5C8
	0x033DA3C4 CBZ X8, 0x33DA3D8
	0x033DA3C8 UDIV X9, X8, X23
	0x033DA3CC MSUB W26, W9, W23, W8
	0x033DA3D0 STR X9, [X31 + 0x28]
	0x033DA3D4 B 0x33DA3DC
	0x033DA3D8 MOV W26, W31
	0x033DA3DC ADRP X28, 0xD19000
	0x033DA3E0 LDR X28, [X28 + 0x5A8]
	0x033DA3E4 MOV W27, W31
	0x033DA3E8 CBZ W26, 0x33DA420
	0x033DA3EC CMP W22, 0x1C
	0x033DA3F0 B.EQ 0x33DA4E4
	0x033DA3F4 LDR X0, [X25]
	0x033DA3F8 LDR W8, [X0 + 0xE0]
	0x033DA3FC CBNZ W8, 0x33DA404
	0x033DA400 BL 0x1C16DFC
	0x033DA404 ADD X0, X31, 0x28
	0x033DA408 MOV W1, W22
	0x033DA40C BL 0x33DC404
	0x033DA410 CBZ W0, 0x33DA4E4
	0x033DA414 MOV W21, W0
	0x033DA418 MOVZ W27, 0x1
	0x033DA41C B 0x33DA448
	0x033DA420 TBZ X22, 0x1F, 0x33DA59C
	0x033DA424 LDR X0, [X28]
	0x033DA428 LDR W8, [X0 + 0xE0]
	0x033DA42C CBNZ W8, 0x33DA434
	0x033DA430 BL 0x1C16DFC
	0x033DA434 SUB W1, W31, W22
	0x033DA438 MOVZ W0, 0x9
	0x033DA43C MOV X2, X31
	0x033DA440 BL 0x337EE94
	0x033DA444 MOV W21, W0
	0x033DA448 LDR X0, [X25]
	0x033DA44C LDR W8, [X0 + 0xE0]
	0x033DA450 CBNZ W8, 0x33DA45C
	0x033DA454 BL 0x1C16DFC
	0x033DA458 LDR X0, [X25]
	0x033DA45C LDR X8, [X0 + 0xB8]
	0x033DA460 LDR X8, [X8]
	0x033DA464 CBZ X8, 0x33DA65C
	0x033DA468 LDR W9, [X8 + 0x18]
	0x033DA46C CMP W21, W9
	0x033DA470 B.CS 0x33DA660
	0x033DA474 ADD X8, X8, W21, 0x2, SXTW
	0x033DA478 LDR W9, [X31 + 0x24]
	0x033DA47C LDR W22, [X8 + 0x20]
	0x033DA480 ADD X0, X31, 0x28
	0x033DA484 ADD W8, W9, W21
	0x033DA488 MOV W1, W22
	0x033DA48C STR W8, [X31 + 0x24]
	0x033DA490 BL 0x33DB56C
	0x033DA494 CBNZ W0, 0x33DA664
	0x033DA498 LDR X0, [X25]
	0x033DA49C LDR W8, [X0 + 0xE0]
	0x033DA4A0 CBNZ W8, 0x33DA4A8
	0x033DA4A4 BL 0x1C16DFC
	0x033DA4A8 LDR X9, [X31 + 0x28]
	0x033DA4AC MOV W8, W26
	0x033DA4B0 MUL X8, X22, X8
	0x033DA4B4 UDIV X10, X8, X23
	0x033DA4B8 MSUB W26, W23, W10, W8
	0x033DA4BC ADDS X8, X9, W10, UXTW
	0x033DA4C0 STR X8, [X31 + 0x28]
	0x033DA4C4 B.CC 0x33DA4D8
	0x033DA4C8 LDR W8, [X31 + 0x30]
	0x033DA4CC ADDS W8, W8, 0x1
	0x033DA4D0 STR W8, [X31 + 0x30]
	0x033DA4D4 B.CS 0x33DA56C
	0x033DA4D8 LDR W22, [X31 + 0x24]
	0x033DA4DC CBNZ W26, 0x33DA3EC
	0x033DA4E0 B 0x33DA420
	0x033DA4E4 UBFM W8, W26, 0x1F, 0x1E
	0x033DA4E8 CMP W8, W26
	0x033DA4EC B.CC 0x33DA520
	0x033DA4F0 CMP W8, W23
	0x033DA4F4 B.CC 0x33DA5C8
	0x033DA4F8 CMP W8, W23
	0x033DA4FC B.LS 0x33DA518
	0x033DA500 B 0x33DA520
	0x033DA504 TBNZ X23, 0x0, 0x33DA520
	0x033DA508 UBFM X8, X23, 0x3F, 0x3E
	0x033DA50C CMP X8, X21
	0x033DA510 B.HI 0x33DA520
	0x033DA514 B.NE 0x33DA5C8
	0x033DA518 LDRB W8, [X31 + 0x28]
	0x033DA51C TBZ X8, 0x0, 0x33DA5C8
	0x033DA520 LDR X8, [X31 + 0x28]
	0x033DA524 ADDS X8, X8, 0x1
	0x033DA528 STR X8, [X31 + 0x28]
	0x033DA52C B.CC 0x33DA5C8
	0x033DA530 LDR W8, [X31 + 0x30]
	0x033DA534 ADDS W8, W8, 0x1
	0x033DA538 STR W8, [X31 + 0x30]
	0x033DA53C B.CC 0x33DA5C8
	0x033DA540 LDR X0, [X25]
	0x033DA544 LDR W21, [X31 + 0x24]
	0x033DA548 LDR W8, [X0 + 0xE0]
	0x033DA54C CBNZ W8, 0x33DA554
	0x033DA550 BL 0x1C16DFC
	0x033DA554 ADD X0, X31, 0x28
	0x033DA558 MOVZ W2, 0x1
	0x033DA55C MOV W1, W21
	0x033DA560 BL 0x33DC2AC
	0x033DA564 STR W0, [X31 + 0x24]
	0x033DA568 B 0x33DA5C8
	0x033DA56C LDR X0, [X25]
	0x033DA570 LDR W21, [X31 + 0x24]
	0x033DA574 LDR W8, [X0 + 0xE0]
	0x033DA578 CBNZ W8, 0x33DA580
	0x033DA57C BL 0x1C16DFC
	0x033DA580 CMP W26, 0x0
	0x033DA584 CSET W2, NE
	0x033DA588 ADD X0, X31, 0x28
	0x033DA58C MOV W1, W21
	0x033DA590 BL 0x33DC2AC
	0x033DA594 MOV W22, W0
	0x033DA598 STR W0, [X31 + 0x24]
	0x033DA59C TBNZ X27, 0x0, 0x33DA5C8
	0x033DA5A0 LDR X0, [X25]
	0x033DA5A4 LDR X21, [X31 + 0x28]
	0x033DA5A8 LDR W8, [X0 + 0xE0]
	0x033DA5AC CBNZ W8, 0x33DA5B4
	0x033DA5B0 BL 0x1C16DFC
	0x033DA5B4 STR X21, [X19 + 0x8]
	0x033DA5B8 LDR W8, [X31 + 0x30]
	0x033DA5BC STR W8, [X19 + 0x4]
	0x033DA5C0 B 0x33DA614
	0x033DA5C4 TBZ X26, 0x0, 0x33DA5A0
	0x033DA5C8 LDR W8, [X31 + 0x28]
	0x033DA5CC LDUR X9, [X31 + 0x2C]
	0x033DA5D0 LDR X0, [X25]
	0x033DA5D4 STR W8, [X31 + 0xC]
	0x033DA5D8 STR X9, [X31]
	0x033DA5DC LDR W8, [X0 + 0xE0]
	0x033DA5E0 CBNZ W8, 0x33DA5E8
	0x033DA5E4 BL 0x1C16DFC
	0x033DA5E8 ADD X0, X31, 0xC
	0x033DA5EC ADD X1, X31, 0x0
	0x033DA5F0 ADD X2, X31, 0x24
	0x033DA5F4 MOV X3, X31
	0x033DA5F8 BL 0x33E718C
	0x033DA5FC LDR W9, [X31 + 0xC]
	0x033DA600 LDR X8, [X31]
	0x033DA604 STP W9, W8, [X19 + 0x8]
	0x033DA608 UBFM X8, X8, 0x20, 0x3F
	0x033DA60C STR W8, [X19 + 0x4]
	0x033DA610 LDR W22, [X31 + 0x24]
	0x033DA614 LDR W8, [X19]
	0x033DA618 LDR W9, [X20]
	0x033DA61C EOR W8, W9, W8, 0x0
	0x033DA620 AND W8, W8, 0x80000000
	0x033DA624 ORR W8, W8, W22, 0x10
	0x033DA628 STR W8, [X19]
	0x033DA62C LDR X8, [X24 + 0x28]
	0x033DA630 LDR X9, [X31 + 0x48]
	0x033DA634 CMP X8, X9
	0x033DA638 B.NE 0x33DA6CC
	0x033DA63C LDP X20, X19, [X31 + 0xA0]
	0x033DA640 LDP X22, X21, [X31 + 0x90]
	0x033DA644 LDP X24, X23, [X31 + 0x80]
	0x033DA648 LDP X26, X25, [X31 + 0x70]
	0x033DA64C LDP X28, X27, [X31 + 0x60]
	0x033DA650 LDP X29, X30, [X31 + 0x50]
	0x033DA654 ADD X31, X31, 0xB0
	0x033DA658 RET
	0x033DA65C BL 0x1C16F20
	0x033DA660 BL 0x1C16F28
	0x033DA664 ADRP X0, 0xD19000
	0x033DA668 LDR X0, [X0 + 0x858]
	0x033DA66C BL 0x1C16D08
	0x033DA670 BL 0x1C16F10
	0x033DA674 MOV X19, X0
	0x033DA678 ADRP X0, 0xD50000
	0x033DA67C LDR X0, [X0 + 0xFE8]
	0x033DA680 BL 0x1C16D08
	0x033DA684 MOV X1, X0
	0x033DA688 MOV X0, X19
	0x033DA68C MOV X2, X31
	0x033DA690 BL 0x338CB50
	0x033DA694 ADRP X0, 0xD52000
	0x033DA698 LDR X0, [X0 + 0xE98]
	0x033DA69C BL 0x1C16D08
	0x033DA6A0 MOV X1, X0
	0x033DA6A4 MOV X0, X19
	0x033DA6A8 BL 0x1C16DEC
	0x033DA6AC ADRP X0, 0xD52000
	0x033DA6B0 LDR X0, [X0 + 0xEA0]
	0x033DA6B4 BL 0x1C16D08
	0x033DA6B8 BL 0x1C16F10
	0x033DA6BC MOV X1, X31
	0x033DA6C0 MOV X19, X0
	0x033DA6C4 BL 0x3365E00
	0x033DA6C8 B 0x33DA694
	0x033DA6CC BL 0x3EB1B20
	0x033DA6D0 SUB X31, X31, 0x50
	0x033DA6D4 STP X30, X21, [X31 + 0x30]
	0x033DA6D8 STP X20, X19, [X31 + 0x40]
	0x033DA6DC MRS X19, 0xC000
	0x033DA6E0 LDR X8, [X19 + 0x28]
	0x033DA6E4 ADRP X20, 0x1003000
	0x033DA6E8 ADRP X21, 0xD52000
	0x033DA6EC STR X8, [X31 + 0x28]
	0x033DA6F0 STP X0, X1, [X31 + 0x18]
	0x033DA6F4 STP X2, X3, [X31 + 0x8]
	0x033DA6F8 LDRB W8, [X20 + 0x338]
	0x033DA6FC LDR X21, [X21 + 0xDE8]
	0x033DA700 TBNZ X8, 0x0, 0x33DA718
	0x033DA704 ADRP X0, 0xD52000
	0x033DA708 LDR X0, [X0 + 0xDE8]
	0x033DA70C BL 0x1C16CF4
	0x033DA710 MOVZ W8, 0x1
	0x033DA714 STRB W8, [X20 + 0x338]
	0x033DA718 LDR X0, [X21]
	0x033DA71C LDR W8, [X0 + 0xE0]
	0x033DA720 CBNZ W8, 0x33DA728
	0x033DA724 BL 0x1C16DFC
	0x033DA728 ADD X0, X31, 0x18
	0x033DA72C ADD X1, X31, 0x8
	0x033DA730 BL 0x33D6F50
	0x033DA734 LDR X8, [X19 + 0x28]
	0x033DA738 LDR X9, [X31 + 0x28]
	0x033DA73C CMP W0, 0x0
	0x033DA740 CSET W0, EQ
	0x033DA744 CMP X8, X9
	0x033DA748 B.NE 0x33DA75C
	0x033DA74C LDP X20, X19, [X31 + 0x40]
	0x033DA750 LDP X30, X21, [X31 + 0x30]
	0x033DA754 ADD X31, X31, 0x50
	0x033DA758 RET
	0x033DA75C BL 0x3EB1B20
	0x033DA760 SUB X31, X31, 0x50
	0x033DA764 STP X30, X21, [X31 + 0x30]
	0x033DA768 STP X20, X19, [X31 + 0x40]
	0x033DA76C MRS X19, 0xC000
	0x033DA770 LDR X8, [X19 + 0x28]
	0x033DA774 ADRP X20, 0x1003000
	0x033DA778 ADRP X21, 0xD52000
	0x033DA77C STR X8, [X31 + 0x28]
	0x033DA780 STP X0, X1, [X31 + 0x18]
	0x033DA784 STP X2, X3, [X31 + 0x8]
	0x033DA788 LDRB W8, [X20 + 0x339]
	0x033DA78C LDR X21, [X21 + 0xDE8]
	0x033DA790 TBNZ X8, 0x0, 0x33DA7A8
	0x033DA794 ADRP X0, 0xD52000
	0x033DA798 LDR X0, [X0 + 0xDE8]
	0x033DA79C BL 0x1C16CF4
	0x033DA7A0 MOVZ W8, 0x1
	0x033DA7A4 STRB W8, [X20 + 0x339]
	0x033DA7A8 LDR X0, [X21]
	0x033DA7AC LDR W8, [X0 + 0xE0]
	0x033DA7B0 CBNZ W8, 0x33DA7B8
	0x033DA7B4 BL 0x1C16DFC
	0x033DA7B8 ADD X0, X31, 0x18
	0x033DA7BC ADD X1, X31, 0x8
	0x033DA7C0 BL 0x33D6F50
	0x033DA7C4 LDR X8, [X19 + 0x28]
	0x033DA7C8 LDR X9, [X31 + 0x28]
	0x033DA7CC CMP W0, 0x0
	0x033DA7D0 CSET W0, NE
	0x033DA7D4 CMP X8, X9
	0x033DA7D8 B.NE 0x33DA7EC
	0x033DA7DC LDP X20, X19, [X31 + 0x40]
	0x033DA7E0 LDP X30, X21, [X31 + 0x30]
	0x033DA7E4 ADD X31, X31, 0x50
	0x033DA7E8 RET
	0x033DA7EC BL 0x3EB1B20
	0x033DA7F0 MOVZ W0, 0xF
	0x033DA7F4 RET
	0x033DA7F8 STP X30, X21, [X31 - 0x20]!
	0x033DA7FC STP X20, X19, [X31 + 0x10]
	0x033DA800 ADRP X21, 0x1003000
	0x033DA804 ADRP X20, 0xD22000
	0x033DA808 LDRB W8, [X21 + 0x33A]
	0x033DA80C LDR X20, [X20 + 0x9E8]
	0x033DA810 MOV X19, X0
	0x033DA814 TBNZ X8, 0x0, 0x33DA82C
	0x033DA818 ADRP X0, 0xD22000
	0x033DA81C LDR X0, [X0 + 0x9E8]
	0x033DA820 BL 0x1C16CF4
	0x033DA824 MOVZ W8, 0x1
	0x033DA828 STRB W8, [X21 + 0x33A]
	0x033DA82C LDR X0, [X20]
	0x033DA830 LDP X20, X19, [X19]
	0x033DA834 LDR W8, [X0 + 0xE0]
	0x033DA838 CBNZ W8, 0x33DA840
	0x033DA83C BL 0x1C16DFC
	0x033DA840 MOV X0, X20
	0x033DA844 MOV X1, X19
	0x033DA848 LDP X20, X19, [X31 + 0x10]
	0x033DA84C MOV X2, X31
	0x033DA850 LDP X30, X21, [X31], #0x20
	0x033DA854 B 0x331E574
	0x033DA858 STR X30, [X31 - 0x20]!
	0x033DA85C STP X20, X19, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 NotImplemented "Instruction MRS not yet implemented."
	015 Move X8, [X28+40]
	016 Move X22, 0x1004000
	017 Move X23, 0xD53000
	018 Move W21, W2
	019 Move [X31+40], X8
	020 Move W8, [X22+848]
	021 Move X23, [X23+3560]
	022 Move X20, X1
	023 Move X19, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {33}
	028 Move X0, 0xD53000
	029 Move X0, [X0+3560]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X22+848], W8
	033 Move X0, [X23]
	034 Move [X31+16], X31
	035 Move [X31+24], X31
	036 Move [X31+32], X31
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move W24, [X19]
	042 Move W27, [X19+4]
	043 Move W8, [X20]
	044 Move X26, [X19+8]
	045 And W10, W21, 1
	046 Xor W9, W8, W24
	047 And W31, W9, 0xFF0000
	048 Move W9, W9
	049 ShiftRight W9, 31
	050 And W9, W9, 0x7FFFFFFF
	051 Move [X31+8], W9
	052 Move [X31+12], W10
	053 And W8, W8, 0xFF0000
	054 And W9, W24, 0x80000000
	055 Or W8, W8, W9
	056 Subtract W9, W8, W24
	057 Move [X31], X28
	058 NotImplemented "Instruction SBFM not yet implemented."
	059 Move W24, W8
	060 Compare W27, 0
	061 JumpIfNotEqual {143}
	062 Move X0, [X23]
	063 Move W11, [X31+8]
	064 Move W10, [X31+12]
	065 Xor W9, W24, 0x80000000
	066 Subtract W28, W31, W28
	067 Move W8, [X0+224]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 NotImplemented "Instruction CSEL not yet implemented."
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move X26, [X20+8]
	074 Move V0, [X19]
	075 Move W27, [X20+4]
	076 Move [X20], V0
	077 Compare W27, 0
	078 JumpIfNotEqual {143}
	079 Move X8, X26
	080 ShiftRight X8, 32
	081 And X8, X8, 0x7FFFFFFF
	082 Compare X8, 0
	083 JumpIfNotEqual {103}
	084 Compare W26, 0
	085 JumpIfEqual {392}
	086 Move W22, 0xCA00
	087 Move X28, W28
	088 NotImplemented "Instruction MOVK not yet implemented."
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X0, [X23]
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 And X8, X26, 0
	096 Multiply X26, X8, X22
	097 Move X8, X26
	098 ShiftRight X8, 32
	099 And X8, X8, 0x7FFFFFFF
	100 Subtract X28, X28, 9
	101 Compare X8, 0
	102 JumpIfEqual {89}
	103 Move X27, W28
	104 Move X28, [X31]
	105 Move X0, [X23]
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move W22, 0xCA00
	108 NotImplemented "Instruction MOVK not yet implemented."
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {114}
	112 Call 0x1C17DFC
	113 Move X0, [X23]
	114 Move X8, [X0+184]
	115 Move X8, [X8]
	116 Compare X8, 0
	117 JumpIfEqual {422}
	118 Move W9, [X8+24]
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Add X8, X8, X27
	121 Move W22, [X8+32]
	122 Move W8, [X0+224]
	123 Compare W8, 0
	124 JumpIfNotEqual {126}
	125 Call 0x1C17DFC
	126 Move W8, W22
	127 Move X9, X26
	128 ShiftRight X9, 32
	129 And X9, X9, 0x7FFFFFFF
	130 NotImplemented "Instruction UMADDL not yet implemented."
	131 Multiply X8, X9, X8
	132 Add X8, X8, X26
	133 NotImplemented "Instruction BFM not yet implemented."
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move X8, X8
	136 ShiftRight X8, 32
	137 And X8, X8, 0x7FFFFFFF
	138 Subtract X27, X27, 9
	139 Compare X8, 0
	140 JumpIfEqual {105}
	141 Move W28, W27
	142 Move W27, W8
	143 Move X28, W28
	144 Move X0, [X23]
	145 Subtract X29, X28, 9
	146 Move W22, 0xCA00
	147 NotImplemented "Instruction MOVK not yet implemented."
	148 Move W8, [X0+224]
	149 Compare W8, 0
	150 JumpIfNotEqual {153}
	151 Call 0x1C17DFC
	152 Move X0, [X23]
	153 Move X8, [X0+184]
	154 Move X8, [X8]
	155 Compare X8, 0
	156 JumpIfEqual {422}
	157 Move W9, [X8+24]
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Add X8, X8, X28
	160 Move W22, [X8+32]
	161 Move W8, [X0+224]
	162 Compare W8, 0
	163 JumpIfNotEqual {165}
	164 Call 0x1C17DFC
	165 Move W8, W22
	166 Move X9, X26
	167 ShiftRight X9, 32
	168 And X9, X9, 0x7FFFFFFF
	169 NotImplemented "Instruction UMADDL not yet implemented."
	170 Multiply X8, X9, X8
	171 Add X8, X8, X26
	172 Move X9, X8
	173 ShiftRight X9, 32
	174 And X9, X9, 0x7FFFFFFF
	175 NotImplemented "Instruction UMADDL not yet implemented."
	176 Move X9, X27
	177 ShiftRight X9, 32
	178 And X9, X9, 0x7FFFFFFF
	179 NotImplemented "Instruction BFM not yet implemented."
	180 Compare X9, 0
	181 JumpIfNotEqual {186}
	182 Add X8, X29, 9
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Move X28, X29
	185 Move X28, [X31]
	186 Subtract W28, W28, 9
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Move [X31+16], X26
	189 Move [X31+24], X27
	190 Move W27, 3
	191 Add X26, X31, 16
	192 Move W9, 0xCA00
	193 NotImplemented "Instruction CMP not yet implemented."
	194 NotImplemented "Instruction MOVK not yet implemented."
	195 Move X0, [X23]
	196 Move W8, [X0+224]
	197 Compare W8, 0
	198 JumpIfNotEqual {201}
	199 Call 0x1C17DFC
	200 Move X0, [X23]
	201 Move X8, [X0+184]
	202 Move X8, [X8]
	203 Compare X8, 0
	204 JumpIfEqual {422}
	205 Move W9, [X8+24]
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Add X8, X8, W28
	208 Move W9, [X8+32]
	209 Move W8, W31
	210 Move X22, X31
	211 Move W29, W9
	212 Move X0, [X23]
	213 Move W25, [X26]
	214 Move W21, W8
	215 Move W9, [X0+224]
	216 Compare W9, 0
	217 JumpIfNotEqual {219}
	218 Call 0x1C17DFC
	219 NotImplemented "Instruction MADD not yet implemented."
	220 Add W8, W21, 1
	221 NotImplemented "Instruction CMP not yet implemented."
	222 Move X22, X9
	223 ShiftRight X22, 32
	224 And X22, X22, 0x7FFFFFFF
	225 Move [X26], W9
	226 Compare W22, 0
	227 JumpIfEqual {230}
	228 Add W27, W27, 1
	229 Move [X26], W22
	230 Subtract W28, W28, 9
	231 Move X26, [X31+16]
	232 Move X0, [X23]
	233 Move X28, [X31]
	234 Move W8, [X0+224]
	235 Compare W8, 0
	236 JumpIfNotEqual {238}
	237 Call 0x1C17DFC
	238 Move W12, [X31+8]
	239 Move W11, [X31+12]
	240 Move X10, [X20+8]
	241 Move W8, [X31+24]
	242 Move W9, [X20+4]
	243 NotImplemented "Instruction CMP not yet implemented."
	244 Add X21, X10, X26
	245 Add W25, W9, W8
	246 Add W25, W25, 1
	247 NotImplemented "Instruction CMP not yet implemented."
	248 Subtract X21, X26, X10
	249 Subtract W25, W8, W9
	250 Subtract W25, W25, 1
	251 NotImplemented "Instruction CMP not yet implemented."
	252 Move W27, W8
	253 Move X0, [X23]
	254 Move W8, [X0+224]
	255 Compare W8, 0
	256 JumpIfNotEqual {258}
	257 Call 0x1C17DFC
	258 Move W10, [X31+8]
	259 Move W9, [X31+12]
	260 Move X8, [X20+8]
	261 NotImplemented "Instruction CMP not yet implemented."
	262 Move W9, [X20+4]
	263 Add X21, X8, X26
	264 Add W25, W9, W27
	265 Add W25, W25, 1
	266 NotImplemented "Instruction CMP not yet implemented."
	267 Move W9, [X20+4]
	268 Subtract X21, X26, X8
	269 Subtract W25, W27, W9
	270 Subtract W8, W25, 1
	271 NotImplemented "Instruction CMP not yet implemented."
	272 Move W25, W8
	273 NotImplemented "Instruction CMP not yet implemented."
	274 And W31, W24, 0xFF0000
	275 Move W8, W25
	276 Or X10, X31, -3689348814741910324
	277 NotImplemented "Instruction MOVK not yet implemented."
	278 Or X8, X8, 0x1FFFFFFFF
	279 NotImplemented "Instruction INVALID not yet implemented."
	280 Move TEMP, 9
	281 Not TEMP
	282 Move W11, TEMP
	283 Move X8, X8
	284 ShiftRight X8, 3
	285 And X8, X8, 0x7FFFFFFF
	286 NotImplemented "Instruction MADD not yet implemented."
	287 NotImplemented "Instruction EXTR not yet implemented."
	288 NotImplemented "Instruction INVALID not yet implemented."
	289 Move X13, X9
	290 ShiftRight X13, 3
	291 And X13, X13, 0x7FFFFFFF
	292 Move X9, X13
	293 ShiftRight X9, 32
	294 And X9, X9, 0x7FFFFFFF
	295 NotImplemented "Instruction MADD not yet implemented."
	296 And X13, X21, 0xFFFFFFFF
	297 NotImplemented "Instruction BFM not yet implemented."
	298 NotImplemented "Instruction INVALID not yet implemented."
	299 Move X10, X12
	300 ShiftRight X10, 3
	301 And X10, X10, 0x7FFFFFFF
	302 NotImplemented "Instruction MADD not yet implemented."
	303 Subtract W24, W24, 0x10000
	304 NotImplemented "Instruction CMP not yet implemented."
	305 NotImplemented "Instruction BFM not yet implemented."
	306 Move TEMP, X10
	307 And TEMP, TEMP, 1
	308 Compare TEMP, 1
	309 JumpIfEqual {390}
	310 NotImplemented "Instruction CMP not yet implemented."
	311 Move W25, W8
	312 Move X21, X9
	313 NotImplemented "Instruction CMP not yet implemented."
	314 NotImplemented "Instruction CMP not yet implemented."
	315 Subtract W8, W31, W25
	316 Xor W24, W24, 0x80000000
	317 Subtract X21, X31, X21
	318 NotImplemented "Instruction CSINV not yet implemented."
	319 Xor W24, W24, 0x80000000
	320 Subtract W25, W31, W25
	321 Subtract X21, X31, X21
	322 NotImplemented "Instruction CMP not yet implemented."
	323 Move W20, 3
	324 Add X8, X31, 16
	325 Move W9, [X8]
	326 Add W9, W9, 1
	327 Move [X8], W9
	328 Add W20, W20, 1
	329 NotImplemented "Instruction CMP not yet implemented."
	330 Add X8, X31, 16
	331 Move W9, 1
	332 Move [X8], W9
	333 NotImplemented "Instruction CMP not yet implemented."
	334 Move W8, 3
	335 Add X9, X31, 16
	336 Move W10, [X9]
	337 Add W11, W8, 1
	338 Subtract W12, W10, 1
	339 Move [X9], W12
	340 Move W8, W11
	341 Compare W10, 0
	342 JumpIfEqual {336}
	343 Add X8, X31, 16
	344 Move W8, [X8]
	345 Compare W8, 0
	346 JumpIfEqual {420}
	347 Move W20, W27
	348 Move X0, [X23]
	349 Move [X31+16], X21
	350 Move [X31+24], W25
	351 Move W8, [X0+224]
	352 Compare W8, 0
	353 JumpIfNotEqual {355}
	354 Call 0x1C17DFC
	355 Move W2, W24
	356 ShiftRight W2, 16
	357 And W2, W2, 0x7FFFFF
	358 Add X0, X31, 16
	359 Move W1, W20
	360 Call DecCalc.ScaleResult, X0, X1, X2
	361 Move X21, [X31+16]
	362 Move W25, [X31+24]
	363 And W8, W24, 0xFF00FFFF
	364 Or W24, W8, W0
	365 Move [X19], W24
	366 Move X0, [X23]
	367 Move W8, [X0+224]
	368 Compare W8, 0
	369 JumpIfNotEqual {371}
	370 Call 0x1C17DFC
	371 Move [X19+4], W25
	372 Move [X19+8], X21
	373 Move X8, [X28+40]
	374 Move X9, [X31+40]
	375 NotImplemented "Instruction CMP not yet implemented."
	376 Move X20, [X31+128]
	377 Move X19, [X31+136]
	378 Move X22, [X31+112]
	379 Move X21, [X31+120]
	380 Move X24, [X31+96]
	381 Move X23, [X31+104]
	382 Move X26, [X31+80]
	383 Move X25, [X31+88]
	384 Move X28, [X31+64]
	385 Move X27, [X31+72]
	386 Move X29, [X31+48]
	387 Move X30, [X31+56]
	388 Add X31, X31, 144
	389 Return 
	390 Add X21, X9, 1
	391 NotImplemented "Instruction CINC not yet implemented."
	392 Move V0, [X20]
	393 Move W12, [X31+8]
	394 Move W11, [X31+12]
	395 And W8, W24, 0x80000000
	396 Xor W10, W8, 0x80000000
	397 Move [X19], V0
	398 Move W9, [X20+2]
	399 NotImplemented "Instruction CMP not yet implemented."
	400 Move X28, [X31]
	401 NotImplemented "Instruction CSEL not yet implemented."
	402 NotImplemented "Instruction BFM not yet implemented."
	403 Move [X19], W8
	404 Move X0, [X23]
	405 Move W8, [X0+224]
	406 Compare W8, 0
	407 JumpIfNotEqual {410}
	408 Call 0x1C17DFC
	409 Move X0, [X23]
	410 Move X8, [X0+184]
	411 Move X8, [X8]
	412 Compare X8, 0
	413 JumpIfEqual {422}
	414 Move W9, [X8+24]
	415 NotImplemented "Instruction CMP not yet implemented."
	416 Add X8, X8, X28
	417 Move W8, [X8+32]
	418 Move W27, W31
	419 Multiply X26, X26, X8
	420 Subtract W20, W27, 1
	421 NotImplemented "Instruction CMP not yet implemented."
	422 Call 0x1C17F20
	423 Call 0x1C17F28
	424 Move X0, 0xD1A000
	425 Move X0, [X0+2136]
	426 Call 0x1C17D08
	427 Call 0x1C17F10
	428 Move X19, X0
	429 Move X0, 0xD51000
	430 Move X0, [X0+4072]
	431 Call 0x1C17D08
	432 Move X1, X0
	433 Move X0, X19
	434 Move X2, X31
	435 Call OverflowException..ctor, X0, X1
	436 Move X0, 0xD53000
	437 Move X0, [X0+3728]
	438 Call 0x1C17D08
	439 Move X1, X0
	440 Move X0, X19
	441 Call 0x1C17DEC
	442 Call 0x3EB2B20

Method: System.Int32 VarDecCmp(in System.Decimal d1, in System.Decimal d2)

Disassembly:
	0x033D7F50 CBNZ W8, 0x33D7F58
	0x033D7F54 BL 0x1C16DFC
	0x033D7F58 LDR W8, [X19]
	0x033D7F5C TBZ X8, 0x1F, 0x33D7F8C
	0x033D7F60 LDR X0, [X22]
	0x033D7F64 LDR W8, [X0 + 0xE0]
	0x033D7F68 CBNZ W8, 0x33D7F70
	0x033D7F6C BL 0x1C16DFC
	0x033D7F70 LDR X8, [X19 + 0x8]
	0x033D7F74 ADDS X8, X8, 0x1
	0x033D7F78 STR X8, [X19 + 0x8]
	0x033D7F7C B.CC 0x33D7F8C
	0x033D7F80 LDR W8, [X19 + 0x4]
	0x033D7F84 ADD W8, W8, 0x1
	0x033D7F88 STR W8, [X19 + 0x4]
	0x033D7F8C LDP X20, X19, [X31 + 0x30]
	0x033D7F90 LDP X22, X21, [X31 + 0x20]
	0x033D7F94 LDP X24, X23, [X31 + 0x10]
	0x033D7F98 LDP X30, X25, [X31], #0x40
	0x033D7F9C RET
	0x033D7FA0 BL 0x1C16F20
	0x033D7FA4 BL 0x1C16F28
	0x033D7FA8 STR X30, [X31 - 0x30]!
	0x033D7FAC STP X22, X21, [X31 + 0x10]
	0x033D7FB0 STP X20, X19, [X31 + 0x20]
	0x033D7FB4 ADRP X21, 0x1006000
	0x033D7FB8 ADRP X22, 0xD44000
	0x033D7FBC LDRB W8, [X21 + 0x325]
	0x033D7FC0 LDR X22, [X22 + 0x5F0]
	0x033D7FC4 MOV X19, X1
	0x033D7FC8 MOV X20, X0
	0x033D7FCC TBNZ X8, 0x0, 0x33D7FE4
	0x033D7FD0 ADRP X0, 0xD44000
	0x033D7FD4 LDR X0, [X0 + 0x5F0]
	0x033D7FD8 BL 0x1C16CF4
	0x033D7FDC MOVZ W8, 0x1
	0x033D7FE0 STRB W8, [X21 + 0x325]
	0x033D7FE4 LDR X0, [X22]
	0x033D7FE8 LDR W8, [X0 + 0xE0]
	0x033D7FEC CBNZ W8, 0x33D7FF4
	0x033D7FF0 BL 0x1C16DFC
	0x033D7FF4 MOV X0, X20
	0x033D7FF8 MOV X1, X19
	0x033D7FFC BL 0x33D8120
	0x033D8000 CMP W0, 0x100
	0x033D8004 B.CS 0x33D8018
	0x033D8008 LDP X20, X19, [X31 + 0x20]
	0x033D800C LDP X22, X21, [X31 + 0x10]
	0x033D8010 LDR X30, [X31], #0x30
	0x033D8014 RET
	0x033D8018 ADRP X0, 0xD1B000
	0x033D801C LDR X0, [X0 + 0x858]
	0x033D8020 BL 0x1C16D08
	0x033D8024 BL 0x1C16F10
	0x033D8028 MOV X19, X0
	0x033D802C ADRP X0, 0xD50000
	0x033D8030 LDR X0, [X0 + 0x80]
	0x033D8034 BL 0x1C16D08
	0x033D8038 MOV X1, X0
	0x033D803C MOV X0, X19
	0x033D8040 MOV X2, X31
	0x033D8044 BL 0x338CB50
	0x033D8048 ADRP X0, 0xD54000
	0x033D804C LDR X0, [X0 + 0xE50]
	0x033D8050 BL 0x1C16D08
	0x033D8054 MOV X1, X0
	0x033D8058 MOV X0, X19
	0x033D805C BL 0x1C16DEC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1007000
	007 Move X21, 0xD45000
	008 Move W8, [X22+849]
	009 Move X21, [X21+1520]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xD56000
	017 Move X0, [X0+3560]
	018 Call 0x1C17CF4
	019 Move X0, 0xD45000
	020 Move X0, [X0+1520]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+849], W8
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {31}
	028 Call 0x1C17DFC
	029 Move X0, [X21]
	030 Move W8, [X0+224]
	031 Move W10, [X20+8]
	032 Move W9, [X20+12]
	033 Move W11, [X20+4]
	034 Or W9, W9, W10
	035 Or W21, W9, W11
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move W9, [X19+8]
	040 Move W8, [X19+12]
	041 Move W10, [X19+4]
	042 Or W8, W8, W9
	043 Or W8, W8, W10
	044 Compare W21, 0
	045 JumpIfEqual {70}
	046 Compare W8, 0
	047 JumpIfEqual {75}
	048 Move W8, [X20]
	049 Move W9, [X19]
	050 Move W8, W8
	051 ShiftRight W8, 31
	052 And W8, W8, 0x7FFFFFFF
	053 Add W0, W8, W9
	054 Move X8, 0xD56000
	055 Move X8, [X8+3560]
	056 Move X0, [X8]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move X0, X19
	062 Move X1, X20
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X22, [X31+16]
	066 Move X21, [X31+24]
	067 Move X30, [X31+48]
	068 Call DecCalc.VarDecCmpSub, X0, X1
	069 Return X0
	070 Compare W8, 0
	071 JumpIfEqual {79}
	072 Move W8, [X19]
	073 NotImplemented "Instruction SBFM not yet implemented."
	074 Or W0, W8, 1
	075 Move W8, [X20]
	076 NotImplemented "Instruction SBFM not yet implemented."
	077 Or W8, W8, 1
	078 Subtract W0, W31, W8
	079 Move W0, W31
	080 Move X20, [X31+32]
	081 Move X19, [X31+40]
	082 Move X22, [X31+16]
	083 Move X21, [X31+24]
	084 Move X30, [X31+48]
	085 Return X0

Method: System.Int32 VarDecCmpSub(in System.Decimal d1, in System.Decimal d2)

Disassembly:
	0x033DD60C MOVZ W8, 0x1
	0x033DD610 STRB W8, [X23 + 0x36A]
	0x033DD614 LDR X0, [X24]
	0x033DD618 LDR W8, [X0 + 0xE0]
	0x033DD61C CBNZ W8, 0x33DD624
	0x033DD620 BL 0x1C16DFC
	0x033DD624 ADD X8, X31, 0x8
	0x033DD628 MOVZ W4, 0x1
	0x033DD62C MOV X0, X22
	0x033DD630 MOV X1, X21
	0x033DD634 MOV X2, X20
	0x033DD638 MOV W3, W31
	0x033DD63C BL 0x33DD49C
	0x033DD640 LDP X8, X30, [X31 + 0x18]
	0x033DD644 LDUR V0, [X31 + 0x8]
	0x033DD648 LDP X22, X21, [X31 + 0x40]
	0x033DD64C LDP X24, X23, [X31 + 0x30]
	0x033DD650 STR X8, [X19 + 0x10]
	0x033DD654 STR V0, [X19]
	0x033DD658 LDP X20, X19, [X31 + 0x50]
	0x033DD65C ADD X31, X31, 0x60
	0x033DD660 RET
	0x033DD664 SUB X31, X31, 0x60
	0x033DD668 STR X30, [X31 + 0x20]
	0x033DD66C STP X24, X23, [X31 + 0x30]
	0x033DD670 STP X22, X21, [X31 + 0x40]
	0x033DD674 STP X20, X19, [X31 + 0x50]
	0x033DD678 ADRP X23, 0x1000000
	0x033DD67C ADRP X24, 0xD1E000
	0x033DD680 MOV X19, X8
	0x033DD684 LDRB W8, [X23 + 0x36B]
	0x033DD688 LDR X24, [X24 + 0x7D8]
	0x033DD68C MOV X20, X2
	0x033DD690 MOV X21, X1
	0x033DD694 MOV X22, X0
	0x033DD698 TBNZ X8, 0x0, 0x33DD6B0
	0x033DD69C ADRP X0, 0xD1E000
	0x033DD6A0 LDR X0, [X0 + 0x7D8]
	0x033DD6A4 BL 0x1C16CF4
	0x033DD6A8 MOVZ W8, 0x1
	0x033DD6AC STRB W8, [X23 + 0x36B]
	0x033DD6B0 LDR X0, [X24]
	0x033DD6B4 LDR W8, [X0 + 0xE0]
	0x033DD6B8 CBNZ W8, 0x33DD6C0
	0x033DD6BC BL 0x1C16DFC
	0x033DD6C0 ADD X8, X31, 0x8
	0x033DD6C4 MOV X0, X22
	0x033DD6C8 MOV X1, X21
	0x033DD6CC MOV X2, X20
	0x033DD6D0 MOV W3, W31
	0x033DD6D4 MOV W4, W31
	0x033DD6D8 BL 0x33DD49C
	0x033DD6DC LDP X8, X30, [X31 + 0x18]
	0x033DD6E0 LDUR V0, [X31 + 0x8]
	0x033DD6E4 LDP X22, X21, [X31 + 0x40]
	0x033DD6E8 LDP X24, X23, [X31 + 0x30]
	0x033DD6EC STR X8, [X19 + 0x10]
	0x033DD6F0 STR V0, [X19]
	0x033DD6F4 LDP X20, X19, [X31 + 0x50]
	0x033DD6F8 ADD X31, X31, 0x60
	0x033DD6FC RET
	0x033DD700 STR X30, [X31 - 0x10]!
	0x033DD704 BL 0x33E3C68
	0x033DD708 CBZ X0, 0x33DD72C
	0x033DD70C LDR X8, [X0 + 0x30]
	0x033DD710 CBZ X8, 0x33DD724
	0x033DD714 LDR X0, [X8 + 0x10]
	0x033DD718 CBZ X0, 0x33DD724
	0x033DD71C LDR X30, [X31], #0x10
	0x033DD720 RET
	0x033DD724 LDR X30, [X31], #0x10
	0x033DD728 B 0x33E5C50
	0x033DD72C BL 0x1C16F20
	0x033DD730 STR X30, [X31 - 0x20]!
	0x033DD734 STP X20, X19, [X31 + 0x10]
	0x033DD738 ADRP X19, 0x1000000
	0x033DD73C ADRP X20, 0xD3E000
	0x033DD740 LDRB W8, [X19 + 0x3C7]
	0x033DD744 LDR X20, [X20 + 0x580]
	0x033DD748 TBNZ X8, 0x0, 0x33DD760
	0x033DD74C ADRP X0, 0xD3E000
	0x033DD750 LDR X0, [X0 + 0x580]
	0x033DD754 BL 0x1C16CF4
	0x033DD758 MOVZ W8, 0x1
	0x033DD75C STRB W8, [X19 + 0x3C7]
	0x033DD760 LDR X0, [X20]
	0x033DD764 LDR W8, [X0 + 0xE0]
	0x033DD768 CBNZ W8, 0x33DD770
	0x033DD76C BL 0x1C16DFC
	0x033DD770 LDP X20, X19, [X31 + 0x10]
	0x033DD774 MOV W1, W31
	0x033DD778 LDR X30, [X31], #0x20
	0x033DD77C B 0x33E5250
	0x033DD780 SUB X31, X31, 0x80
	0x033DD784 STR X30, [X31 + 0x20]
	0x033DD788 STP X28, X27, [X31 + 0x30]
	0x033DD78C STP X26, X25, [X31 + 0x40]
	0x033DD790 STP X24, X23, [X31 + 0x50]
	0x033DD794 STP X22, X21, [X31 + 0x60]
	0x033DD798 STP X20, X19, [X31 + 0x70]
	0x033DD79C ADRP X23, 0x1000000
	0x033DD7A0 LDRB W9, [X23 + 0x393]
	0x033DD7A4 MOV X24, X4
	0x033DD7A8 MOV X26, X3
	0x033DD7AC MOV X20, X2
	0x033DD7B0 MOV X21, X1
	0x033DD7B4 MOV X22, X0
	0x033DD7B8 MOV X19, X8
	0x033DD7BC TBNZ X9, 0x0, 0x33DD81C
	0x033DD7C0 ADRP X0, 0xD4F000
	0x033DD7C4 LDR X0, [X0 + 0xF40]
	0x033DD7C8 BL 0x1C16CF4

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x1001000
	011 Move X19, 0xD3F000
	012 Move W8, [X22+850]
	013 Move X19, [X19+1520]
	014 Move X20, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0xD50000
	021 Move X0, [X0+3560]
	022 Call 0x1C17CF4
	023 Move X0, 0xD3F000
	024 Move X0, [X0+1520]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+850], W8
	028 Move X0, [X19]
	029 Move W8, [X20]
	030 Move W9, [X21]
	031 Move W10, [X0+224]
	032 NotImplemented "Instruction SBFM not yet implemented."
	033 Subtract W24, W8, W9
	034 Compare W10, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X22, 0x1001000
	038 Move W8, [X22+784]
	039 Or W19, W19, 1
	040 Move TEMP, X8
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {49}
	044 Move X0, 0xD3F000
	045 Move X0, [X0+1520]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X22+784], W8
	049 Move X22, [X21+8]
	050 Move W8, [X21+4]
	051 Move X10, [X20+8]
	052 Move W23, [X20+4]
	053 Compare W24, 0
	054 JumpIfEqual {63}
	055 NotImplemented "Instruction SBFM not yet implemented."
	056 Move TEMP, X24
	057 And TEMP, TEMP, -2147483648
	058 Compare TEMP, -2147483648
	059 JumpIfEqual {65}
	060 Move W21, W23
	061 Move X20, X10
	062 Move W23, W8
	063 Move W21, W23
	064 Move X20, X10
	065 Subtract W9, W31, W9
	066 Subtract W19, W31, W19
	067 Move W21, W8
	068 Move X20, X22
	069 Move X22, X10
	070 Move X24, 0xD50000
	071 Move X24, [X24+3560]
	072 Move X25, W9
	073 Move X0, [X24]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move W26, 0xCA00
	076 NotImplemented "Instruction MOVK not yet implemented."
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {82}
	080 Call 0x1C17DFC
	081 Move X0, [X24]
	082 Move X8, [X0+184]
	083 Move X8, [X8]
	084 Compare X8, 0
	085 JumpIfEqual {130}
	086 Move W9, [X8+24]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Add X8, X8, X25
	089 Move W26, [X8+32]
	090 Move W8, [X0+224]
	091 Compare W8, 0
	092 JumpIfNotEqual {94}
	093 Call 0x1C17DFC
	094 Move W9, W26
	095 Move X10, X22
	096 ShiftRight X10, 32
	097 And X10, X10, 0x7FFFFFFF
	098 NotImplemented "Instruction UMADDL not yet implemented."
	099 Multiply X9, X10, X9
	100 Add X9, X9, X8
	101 Move X10, X9
	102 ShiftRight X10, 32
	103 And X10, X10, 0x7FFFFFFF
	104 NotImplemented "Instruction UMADDL not yet implemented."
	105 Move X10, X23
	106 ShiftRight X10, 32
	107 And X10, X10, 0x7FFFFFFF
	108 Compare X10, 0
	109 JumpIfNotEqual {119}
	110 NotImplemented "Instruction BFM not yet implemented."
	111 Subtract X25, X25, 9
	112 Move X22, X8
	113 Move W8, W23
	114 NotImplemented "Instruction CMP not yet implemented."
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move W19, W31
	117 NotImplemented "Instruction CSNEG not yet implemented."
	118 NotImplemented "Instruction CSNEG not yet implemented."
	119 Move W0, W19
	120 Move X20, [X31+64]
	121 Move X19, [X31+72]
	122 Move X22, [X31+48]
	123 Move X21, [X31+56]
	124 Move X24, [X31+32]
	125 Move X23, [X31+40]
	126 Move X26, [X31+16]
	127 Move X25, [X31+24]
	128 Move X30, [X31+80]
	129 Return X0
	130 Call 0x1C17F20
	131 Call 0x1C17F28

Method: System.Void VarDecMul(ref System.Decimal/DecCalc d1, ref System.Decimal/DecCalc d2)

Disassembly:
	0x033DA9C4 BL 0x1C16CF4
	0x033DA9C8 MOVZ W8, 0x1
	0x033DA9CC STRB W8, [X21 + 0x33D]
	0x033DA9D0 LDR X0, [X20]
	0x033DA9D4 LDP X20, X19, [X19]
	0x033DA9D8 LDR W8, [X0 + 0xE0]
	0x033DA9DC CBNZ W8, 0x33DA9E4
	0x033DA9E0 BL 0x1C16DFC
	0x033DA9E4 MOV X0, X20
	0x033DA9E8 MOV X1, X19
	0x033DA9EC LDP X20, X19, [X31 + 0x10]
	0x033DA9F0 MOV X2, X31
	0x033DA9F4 LDP X30, X21, [X31], #0x20
	0x033DA9F8 B 0x331FBBC
	0x033DA9FC STP X30, X21, [X31 - 0x20]!
	0x033DAA00 STP X20, X19, [X31 + 0x10]
	0x033DAA04 ADRP X21, 0x1003000
	0x033DAA08 ADRP X20, 0xD22000
	0x033DAA0C LDRB W8, [X21 + 0x33E]
	0x033DAA10 LDR X20, [X20 + 0x9E8]
	0x033DAA14 MOV X19, X0
	0x033DAA18 TBNZ X8, 0x0, 0x33DAA30
	0x033DAA1C ADRP X0, 0xD22000
	0x033DAA20 LDR X0, [X0 + 0x9E8]
	0x033DAA24 BL 0x1C16CF4
	0x033DAA28 MOVZ W8, 0x1
	0x033DAA2C STRB W8, [X21 + 0x33E]
	0x033DAA30 LDR X0, [X20]
	0x033DAA34 LDP X20, X19, [X19]
	0x033DAA38 LDR W8, [X0 + 0xE0]
	0x033DAA3C CBNZ W8, 0x33DAA44
	0x033DAA40 BL 0x1C16DFC
	0x033DAA44 MOV X0, X20
	0x033DAA48 MOV X1, X19
	0x033DAA4C LDP X20, X19, [X31 + 0x10]
	0x033DAA50 MOV X2, X31
	0x033DAA54 LDP X30, X21, [X31], #0x20
	0x033DAA58 B 0x3320104
	0x033DAA5C STP X30, X21, [X31 - 0x20]!
	0x033DAA60 STP X20, X19, [X31 + 0x10]
	0x033DAA64 ADRP X21, 0x1003000
	0x033DAA68 ADRP X20, 0xD22000
	0x033DAA6C LDRB W8, [X21 + 0x33F]
	0x033DAA70 LDR X20, [X20 + 0x9E8]
	0x033DAA74 MOV X19, X0
	0x033DAA78 TBNZ X8, 0x0, 0x33DAA90
	0x033DAA7C ADRP X0, 0xD22000
	0x033DAA80 LDR X0, [X0 + 0x9E8]
	0x033DAA84 BL 0x1C16CF4
	0x033DAA88 MOVZ W8, 0x1
	0x033DAA8C STRB W8, [X21 + 0x33F]
	0x033DAA90 LDR X0, [X20]
	0x033DAA94 LDP X20, X19, [X19]
	0x033DAA98 LDR W8, [X0 + 0xE0]
	0x033DAA9C CBNZ W8, 0x33DAAA4
	0x033DAAA0 BL 0x1C16DFC
	0x033DAAA4 MOV X0, X20
	0x033DAAA8 MOV X1, X19
	0x033DAAAC LDP X20, X19, [X31 + 0x10]
	0x033DAAB0 MOV X2, X31
	0x033DAAB4 LDP X30, X21, [X31], #0x20
	0x033DAAB8 B 0x33204F8
	0x033DAABC STP X30, X21, [X31 - 0x20]!
	0x033DAAC0 STP X20, X19, [X31 + 0x10]
	0x033DAAC4 ADRP X21, 0x1003000
	0x033DAAC8 ADRP X20, 0xD22000
	0x033DAACC LDRB W8, [X21 + 0x340]
	0x033DAAD0 LDR X20, [X20 + 0x9E8]
	0x033DAAD4 MOV X19, X0
	0x033DAAD8 TBNZ X8, 0x0, 0x33DAAF0
	0x033DAADC ADRP X0, 0xD22000
	0x033DAAE0 LDR X0, [X0 + 0x9E8]
	0x033DAAE4 BL 0x1C16CF4
	0x033DAAE8 MOVZ W8, 0x1
	0x033DAAEC STRB W8, [X21 + 0x340]
	0x033DAAF0 LDR X0, [X20]
	0x033DAAF4 LDP X20, X19, [X19]
	0x033DAAF8 LDR W8, [X0 + 0xE0]
	0x033DAAFC CBNZ W8, 0x33DAB04
	0x033DAB00 BL 0x1C16DFC
	0x033DAB04 MOV X0, X20
	0x033DAB08 MOV X1, X19
	0x033DAB0C LDP X20, X19, [X31 + 0x10]
	0x033DAB10 MOV X2, X31
	0x033DAB14 LDP X30, X21, [X31], #0x20
	0x033DAB18 B 0x3320AAC
	0x033DAB1C STP X30, X21, [X31 - 0x20]!
	0x033DAB20 STP X20, X19, [X31 + 0x10]
	0x033DAB24 ADRP X21, 0x1003000
	0x033DAB28 ADRP X20, 0xD22000
	0x033DAB2C LDRB W8, [X21 + 0x341]
	0x033DAB30 LDR X20, [X20 + 0x9E8]
	0x033DAB34 MOV X19, X0
	0x033DAB38 TBNZ X8, 0x0, 0x33DAB50
	0x033DAB3C ADRP X0, 0xD22000
	0x033DAB40 LDR X0, [X0 + 0x9E8]
	0x033DAB44 BL 0x1C16CF4
	0x033DAB48 MOVZ W8, 0x1
	0x033DAB4C STRB W8, [X21 + 0x341]
	0x033DAB50 LDR X0, [X20]
	0x033DAB54 LDP X20, X19, [X19]
	0x033DAB58 LDR W8, [X0 + 0xE0]
	0x033DAB5C CBNZ W8, 0x33DAB64
	0x033DAB60 BL 0x1C16DFC
	0x033DAB64 MOV X0, X20
	0x033DAB68 MOV X1, X19
	0x033DAB6C LDP X20, X19, [X31 + 0x10]
	0x033DAB70 MOV X2, X31
	0x033DAB74 LDP X30, X21, [X31], #0x20
	0x033DAB78 B 0x3320F18
	0x033DAB7C STP X30, X21, [X31 - 0x20]!
	0x033DAB80 STP X20, X19, [X31 + 0x10]
	0x033DAB84 ADRP X21, 0x1003000
	0x033DAB88 ADRP X20, 0xD22000
	0x033DAB8C LDRB W8, [X21 + 0x342]
	0x033DAB90 LDR X20, [X20 + 0x9E8]
	0x033DAB94 MOV X19, X0
	0x033DAB98 TBNZ X8, 0x0, 0x33DABB0
	0x033DAB9C ADRP X0, 0xD22000
	0x033DABA0 LDR X0, [X0 + 0x9E8]
	0x033DABA4 BL 0x1C16CF4
	0x033DABA8 MOVZ W8, 0x1
	0x033DABAC STRB W8, [X21 + 0x342]
	0x033DABB0 LDR X0, [X20]
	0x033DABB4 LDP X20, X19, [X19]
	0x033DABB8 LDR W8, [X0 + 0xE0]
	0x033DABBC CBNZ W8, 0x33DABC4
	0x033DABC0 BL 0x1C16DFC
	0x033DABC4 MOV X0, X20
	0x033DABC8 MOV X1, X19
	0x033DABCC LDP X20, X19, [X31 + 0x10]
	0x033DABD0 MOV X2, X31
	0x033DABD4 LDP X30, X21, [X31], #0x20
	0x033DABD8 B 0x33214CC
	0x033DABDC STP X30, X21, [X31 - 0x20]!
	0x033DABE0 STP X20, X19, [X31 + 0x10]
	0x033DABE4 ADRP X21, 0x1003000
	0x033DABE8 ADRP X20, 0xD22000
	0x033DABEC LDRB W8, [X21 + 0x343]
	0x033DABF0 LDR X20, [X20 + 0x9E8]
	0x033DABF4 MOV X19, X0
	0x033DABF8 TBNZ X8, 0x0, 0x33DAC10
	0x033DABFC ADRP X0, 0xD22000
	0x033DAC00 LDR X0, [X0 + 0x9E8]
	0x033DAC04 BL 0x1C16CF4
	0x033DAC08 MOVZ W8, 0x1
	0x033DAC0C STRB W8, [X21 + 0x343]
	0x033DAC10 LDR X0, [X20]
	0x033DAC14 LDP X20, X19, [X19]
	0x033DAC18 LDR W8, [X0 + 0xE0]
	0x033DAC1C CBNZ W8, 0x33DAC24
	0x033DAC20 BL 0x1C16DFC
	0x033DAC24 MOV X0, X20
	0x033DAC28 MOV X1, X19
	0x033DAC2C LDP X20, X19, [X31 + 0x10]
	0x033DAC30 MOV X2, X31
	0x033DAC34 LDP X30, X21, [X31], #0x20
	0x033DAC38 B 0x33217A0
	0x033DAC3C STP X30, X21, [X31 - 0x20]!
	0x033DAC40 STP X20, X19, [X31 + 0x10]
	0x033DAC44 ADRP X21, 0x1003000
	0x033DAC48 ADRP X20, 0xD22000
	0x033DAC4C LDRB W8, [X21 + 0x344]
	0x033DAC50 LDR X20, [X20 + 0x9E8]
	0x033DAC54 MOV X19, X0
	0x033DAC58 TBNZ X8, 0x0, 0x33DAC70
	0x033DAC5C ADRP X0, 0xD22000
	0x033DAC60 LDR X0, [X0 + 0x9E8]
	0x033DAC64 BL 0x1C16CF4
	0x033DAC68 MOVZ W8, 0x1
	0x033DAC6C STRB W8, [X21 + 0x344]
	0x033DAC70 LDR X0, [X20]
	0x033DAC74 LDP X20, X19, [X19]
	0x033DAC78 LDR W8, [X0 + 0xE0]
	0x033DAC7C CBNZ W8, 0x33DAC84
	0x033DAC80 BL 0x1C16DFC
	0x033DAC84 MOV X0, X20
	0x033DAC88 MOV X1, X19
	0x033DAC8C LDP X20, X19, [X31 + 0x10]
	0x033DAC90 MOV X2, X31
	0x033DAC94 LDP X30, X21, [X31], #0x20
	0x033DAC98 B 0x3321AE0
	0x033DAC9C LDP X8, X1, [X0]
	0x033DACA0 MOV X0, X8
	0x033DACA4 RET
	0x033DACA8 STR X30, [X31 - 0x20]!
	0x033DACAC STP X20, X19, [X31 + 0x10]
	0x033DACB0 ADRP X0, 0xD4E000
	0x033DACB4 LDR X0, [X0 + 0x30]
	0x033DACB8 BL 0x1C16D08
	0x033DACBC MOV X19, X0
	0x033DACC0 ADRP X0, 0xD4B000
	0x033DACC4 LDR X0, [X0 + 0xA0]
	0x033DACC8 BL 0x1C16D08
	0x033DACCC MOV X20, X0
	0x033DACD0 ADRP X0, 0xD4B000
	0x033DACD4 LDR X0, [X0 + 0x98]
	0x033DACD8 BL 0x1C16D08
	0x033DACDC MOV X2, X0
	0x033DACE0 MOV X0, X19
	0x033DACE4 MOV X1, X20
	0x033DACE8 MOV X3, X31
	0x033DACEC BL 0x320A264
	0x033DACF0 MOV X19, X0
	0x033DACF4 ADRP X0, 0xD21000
	0x033DACF8 LDR X0, [X0 + 0xC08]
	0x033DACFC BL 0x1C16D08
	0x033DAD00 BL 0x1C16F10
	0x033DAD04 MOV X1, X19
	0x033DAD08 MOV X2, X31
	0x033DAD0C MOV X20, X0
	0x033DAD10 BL 0x337B498
	0x033DAD14 ADRP X0, 0xD52000
	0x033DAD18 LDR X0, [X0 + 0xEB0]
	0x033DAD1C BL 0x1C16D08
	0x033DAD20 MOV X1, X0
	0x033DAD24 MOV X0, X20
	0x033DAD28 BL 0x1C16DEC
	0x033DAD2C SUB X31, X31, 0x60
	0x033DAD30 STP X30, X25, [X31 + 0x20]
	0x033DAD34 STP X24, X23, [X31 + 0x30]
	0x033DAD38 STP X22, X21, [X31 + 0x40]
	0x033DAD3C STP X20, X19, [X31 + 0x50]
	0x033DAD40 MRS X22, 0xC000
	0x033DAD44 LDR X8, [X22 + 0x28]
	0x033DAD48 ADRP X25, 0x1003000
	0x033DAD4C ADRP X24, 0xD41000
	0x033DAD50 ADRP X23, 0xD22000
	0x033DAD54 STR X8, [X31 + 0x18]
	0x033DAD58 LDRB W8, [X25 + 0x345]
	0x033DAD5C LDR X24, [X24 + 0x5F0]
	0x033DAD60 LDR X23, [X23 + 0x9E8]
	0x033DAD64 MOV X19, X2
	0x033DAD68 MOV X20, X1
	0x033DAD6C MOV X21, X0
	0x033DAD70 TBNZ X8, 0x0, 0x33DAD94
	0x033DAD74 ADRP X0, 0xD22000
	0x033DAD78 LDR X0, [X0 + 0x9E8]
	0x033DAD7C BL 0x1C16CF4
	0x033DAD80 ADRP X0, 0xD41000
	0x033DAD84 LDR X0, [X0 + 0x5F0]
	0x033DAD88 BL 0x1C16CF4
	0x033DAD8C MOVZ W8, 0x1
	0x033DAD90 STRB W8, [X25 + 0x345]
	0x033DAD94 LDR V0, [X21]
	0x033DAD98 LDR X0, [X24]
	0x033DAD9C ADD X1, X31, 0x0
	0x033DADA0 STR V0, [X31]
	0x033DADA4 BL 0x1C16E04
	0x033DADA8 LDR X8, [X23]
	0x033DADAC MOV X21, X0
	0x033DADB0 LDR W9, [X8 + 0xE0]
	0x033DADB4 CBNZ W9, 0x33DADC0
	0x033DADB8 MOV X0, X8
	0x033DADBC BL 0x1C16DFC
	0x033DADC0 MOV X0, X21
	0x033DADC4 MOV X1, X20
	0x033DADC8 MOV X2, X19
	0x033DADCC MOV X3, X31
	0x033DADD0 BL 0x3318718
	0x033DADD4 LDR X8, [X22 + 0x28]
	0x033DADD8 LDR X9, [X31 + 0x18]
	0x033DADDC CMP X8, X9
	0x033DADE0 B.NE 0x33DADFC
	0x033DADE4 LDP X20, X19, [X31 + 0x50]
	0x033DADE8 LDP X22, X21, [X31 + 0x40]
	0x033DADEC LDP X24, X23, [X31 + 0x30]
	0x033DADF0 LDP X30, X25, [X31 + 0x20]
	0x033DADF4 ADD X31, X31, 0x60
	0x033DADF8 RET
	0x033DADFC BL 0x3EB1B20
	0x033DAE00 STR X30, [X31 - 0x20]!
	0x033DAE04 STP X20, X19, [X31 + 0x10]
	0x033DAE08 ADRP X20, 0x1003000
	0x033DAE0C ADRP X19, 0xD41000
	0x033DAE10 LDRB W8, [X20 + 0x346]
	0x033DAE14 LDR X19, [X19 + 0x5F0]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+40], X27
	004 Move [X31+48], X26
	005 Move [X31+56], X25
	006 Move [X31+64], X24
	007 Move [X31+72], X23
	008 Move [X31+80], X22
	009 Move [X31+88], X21
	010 Move [X31+96], X20
	011 Move [X31+104], X19
	012 NotImplemented "Instruction MRS not yet implemented."
	013 Move X8, [X23+40]
	014 Move X21, 0x1004000
	015 Move X24, 0xD53000
	016 Move X20, X1
	017 Move [X31+24], X8
	018 Move W8, [X21+851]
	019 Move X24, [X24+3560]
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0xD53000
	026 Move X0, [X0+3560]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+851], W8
	030 Move X0, [X24]
	031 Move [X31], X31
	032 Move [X31+8], X31
	033 Move [X31+16], X31
	034 Move W21, [X19]
	035 Move W8, [X0+224]
	036 Move W26, [X20]
	037 Compare W8, 0
	038 JumpIfNotEqual {42}
	039 Call 0x1C17DFC
	040 Move X0, [X24]
	041 Move W8, [X0+224]
	042 Move W22, [X19+4]
	043 Move W25, [X19+12]
	044 Add W21, W26, W21
	045 Compare W8, 0
	046 JumpIfNotEqual {50}
	047 Call 0x1C17DFC
	048 Move X0, [X24]
	049 Move W8, [X0+224]
	050 Move W26, [X20+4]
	051 Move W27, [X20+12]
	052 Move W21, W21
	053 ShiftRight W21, 16
	054 And W21, W21, 0x7FFFFF
	055 Or W22, W25, W22
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Or W9, W27, W26
	060 Compare W22, 0
	061 JumpIfEqual {157}
	062 Compare W9, 0
	063 JumpIfEqual {180}
	064 Move W10, [X19+8]
	065 Move W9, [X19+12]
	066 Move W11, [X20+8]
	067 Move W8, [X20+12]
	068 Move X0, [X24]
	069 Multiply X12, X11, X10
	070 Multiply X10, X8, X10
	071 Add X10, X10, X12
	072 Multiply X11, X9, X11
	073 Add X10, X10, X11
	074 Move [X31], W12
	075 Move [X31+4], W10
	076 Move W11, [X0+224]
	077 Move X12, 1
	078 NotImplemented "Instruction BFM not yet implemented."
	079 Move X10, X10
	080 ShiftRight X10, 32
	081 And X10, X10, 0x7FFFFFFF
	082 NotImplemented "Instruction CSEL not yet implemented."
	083 Compare W11, 0
	084 JumpIfNotEqual {88}
	085 Call 0x1C17DFC
	086 Move W9, [X19+12]
	087 Move W8, [X20+12]
	088 Move W11, [X19+4]
	089 Move W10, [X20+4]
	090 NotImplemented "Instruction NOP not yet implemented."
	091 NotImplemented "Instruction MADD not yet implemented."
	092 Or W11, W10, W11
	093 Compare W11, 0
	094 JumpIfEqual {214}
	095 Move X0, [X24]
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {103}
	099 Call 0x1C17DFC
	100 Move X0, [X24]
	101 Move W10, [X20+4]
	102 Move W8, [X0+224]
	103 Move W9, [X19+8]
	104 Move W10, W10
	105 Multiply X26, X10, X9
	106 Add X25, X26, X22
	107 NotImplemented "Instruction CSET not yet implemented."
	108 Compare W8, 0
	109 JumpIfNotEqual {113}
	110 Call 0x1C17DFC
	111 Move X0, [X24]
	112 Move W8, [X0+224]
	113 Move W9, [X19+4]
	114 Move W10, [X20+8]
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move W11, 1
	117 NotImplemented "Instruction CINC not yet implemented."
	118 Multiply X9, X10, X9
	119 Add X9, X9, X25
	120 NotImplemented "Instruction CSEL not yet implemented."
	121 NotImplemented "Instruction EXTR not yet implemented."
	122 Move [X31+8], W9
	123 Compare W8, 0
	124 JumpIfNotEqual {128}
	125 Call 0x1C17DFC
	126 Move X0, [X24]
	127 Move W8, [X0+224]
	128 Move W9, [X19+12]
	129 Move W10, [X20+4]
	130 Multiply X9, X10, X9
	131 Add X26, X9, X22
	132 NotImplemented "Instruction CSET not yet implemented."
	133 Compare W8, 0
	134 JumpIfNotEqual {138}
	135 Call 0x1C17DFC
	136 Move X0, [X24]
	137 Move W8, [X0+224]
	138 Move W9, [X19+4]
	139 Move W10, [X20+12]
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Move W11, 1
	142 NotImplemented "Instruction CINC not yet implemented."
	143 Multiply X10, X10, X9
	144 Add X10, X10, X26
	145 NotImplemented "Instruction CSEL not yet implemented."
	146 NotImplemented "Instruction EXTR not yet implemented."
	147 Move [X31+12], W10
	148 Compare W8, 0
	149 JumpIfNotEqual {152}
	150 Call 0x1C17DFC
	151 Move W9, [X19+4]
	152 Move W8, [X20+4]
	153 NotImplemented "Instruction NOP not yet implemented."
	154 NotImplemented "Instruction MADD not yet implemented."
	155 Move [X31+16], X8
	156 Move W22, 5
	157 Move W8, [X19+8]
	158 Move W10, [X20+8]
	159 Multiply X22, X10, X8
	160 Compare W9, 0
	161 JumpIfEqual {275}
	162 Move W9, [X20+12]
	163 Multiply X9, X9, X8
	164 Add X10, X9, X22
	165 Move [X31], W22
	166 Move [X31+4], W10
	167 Move W9, [X20+4]
	168 Move X22, X10
	169 ShiftRight X22, 32
	170 And X22, X22, 0x7FFFFFFF
	171 Compare W9, 0
	172 JumpIfEqual {210}
	173 Move X0, [X24]
	174 Move W10, [X0+224]
	175 Compare W10, 0
	176 JumpIfNotEqual {201}
	177 Call 0x1C17DFC
	178 Move W8, [X19+8]
	179 Move W9, [X20+4]
	180 Move W8, [X20+8]
	181 Move W9, [X19+8]
	182 Move W10, [X19+12]
	183 Multiply X9, X9, X8
	184 Multiply X10, X10, X8
	185 Add X10, X10, X9
	186 Move [X31], W9
	187 Move [X31+4], W10
	188 Move W9, [X19+4]
	189 Move X22, X10
	190 ShiftRight X22, 32
	191 And X22, X22, 0x7FFFFFFF
	192 Compare W9, 0
	193 JumpIfEqual {210}
	194 Move X0, [X24]
	195 Move W10, [X0+224]
	196 Compare W10, 0
	197 JumpIfNotEqual {201}
	198 Call 0x1C17DFC
	199 Move W8, [X20+8]
	200 Move W9, [X19+4]
	201 Move W9, W9
	202 NotImplemented "Instruction MADD not yet implemented."
	203 Move X8, X22
	204 ShiftRight X8, 32
	205 And X8, X8, 0x7FFFFFFF
	206 Compare X8, 0
	207 JumpIfEqual {210}
	208 Move [X31+8], X22
	209 Move W22, 3
	210 Compare W22, 0
	211 JumpIfEqual {218}
	212 Move [X31+8], W22
	213 Move W22, 2
	214 Compare X22, 0
	215 JumpIfEqual {218}
	216 Move [X31+8], X22
	217 Move W22, 3
	218 Move W22, 1
	219 Add X9, X31, 0
	220 Move W8, [X9]
	221 Compare W8, 0
	222 JumpIfNotEqual {233}
	223 Add X9, X9, W22
	224 Move W8, W22
	225 Subtract X9, X9, 4
	226 Compare X8, 0
	227 JumpIfEqual {291}
	228 Move W10, [X9-4]
	229 Subtract X8, X8, 1
	230 Compare W10, 0
	231 JumpIfEqual {226}
	232 Move W22, W8
	233 NotImplemented "Instruction CMP not yet implemented."
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Move X0, [X24]
	236 Move W8, [X0+224]
	237 Compare W8, 0
	238 JumpIfNotEqual {240}
	239 Call 0x1C17DFC
	240 Add X0, X31, 0
	241 Move W1, W22
	242 Move W2, W21
	243 Call DecCalc.ScaleResult, X0, X1, X2
	244 Move W21, W0
	245 Move X0, [X24]
	246 Move X22, [X31]
	247 Move W8, [X0+224]
	248 Compare W8, 0
	249 JumpIfNotEqual {251}
	250 Call 0x1C17DFC
	251 Move [X19+8], X22
	252 Move W8, [X31+8]
	253 Move W9, [X19]
	254 Move [X19+4], W8
	255 Move W8, [X20]
	256 Xor W8, W9, W8
	257 And W8, W8, 0x80000000
	258 Or W8, W8, W21
	259 Move [X19], W8
	260 Move X8, [X23+40]
	261 Move X9, [X31+24]
	262 NotImplemented "Instruction CMP not yet implemented."
	263 Move X20, [X31+96]
	264 Move X19, [X31+104]
	265 Move X22, [X31+80]
	266 Move X21, [X31+88]
	267 Move X24, [X31+64]
	268 Move X23, [X31+72]
	269 Move X26, [X31+48]
	270 Move X25, [X31+56]
	271 Move X30, [X31+32]
	272 Move X27, [X31+40]
	273 Add X31, X31, 112
	274 Return 
	275 NotImplemented "Instruction CMP not yet implemented."
	276 Move X0, [X24]
	277 Move W21, W21
	278 ShiftRight W21, 16
	279 And W21, W21, 0x7FFF
	280 Move W8, [X0+224]
	281 Compare W8, 0
	282 JumpIfNotEqual {284}
	283 Call 0x1C17DFC
	284 Move [X19+8], X22
	285 Move W8, [X20]
	286 Move W9, [X19]
	287 Xor W8, W9, W8
	288 And W8, W8, 0x80000000
	289 Or W8, W8, W21
	290 NotImplemented "Instruction CMP not yet implemented."
	291 Move [X19], X31
	292 Move [X19+8], X31
	293 Move X0, [X24]
	294 Move W8, [X0+224]
	295 Compare W8, 0
	296 JumpIfNotEqual {299}
	297 Call 0x1C17DFC
	298 Move X0, [X24]
	299 Move X8, [X0+184]
	300 Move X8, [X8+8]
	301 Compare X8, 0
	302 JumpIfEqual {322}
	303 Move W10, [X8+24]
	304 Subtract W9, W21, 29
	305 NotImplemented "Instruction CMP not yet implemented."
	306 Add X8, X8, W9
	307 Move X10, [X8+32]
	308 NotImplemented "Instruction UDIV not yet implemented."
	309 NotImplemented "Instruction MSUB not yet implemented."
	310 NotImplemented "Instruction CMP not yet implemented."
	311 Move W21, 0x1C0000
	312 Move X22, X8
	313 Move X10, X10
	314 ShiftRight X10, 1
	315 And X10, X10, 0x7FFFFFFF
	316 NotImplemented "Instruction CMP not yet implemented."
	317 And X11, X8, 1
	318 NotImplemented "Instruction CSET not yet implemented."
	319 Or X9, X11, X9
	320 Add X22, X9, X8
	321 Move W21, 0x1C0000
	322 Call 0x1C17F20
	323 Call 0x1C17F28
	324 Call 0x3EB2B20

Method: System.Void VarDecFromR4(System.Single input, out System.Decimal/DecCalc result)

Disassembly:
	0x033D72D4 TBNZ X8, 0x0, 0x33D72F8
	0x033D72D8 ADRP X0, 0xD55000
	0x033D72DC LDR X0, [X0 + 0xDE8]
	0x033D72E0 BL 0x1C16CF4
	0x033D72E4 ADRP X0, 0xD44000
	0x033D72E8 LDR X0, [X0 + 0x5F0]
	0x033D72EC BL 0x1C16CF4
	0x033D72F0 MOVZ W8, 0x1
	0x033D72F4 STRB W8, [X20 + 0x358]
	0x033D72F8 LDR X0, [X21]
	0x033D72FC LDR W8, [X0 + 0xE0]
	0x033D7300 CBNZ W8, 0x33D7308
	0x033D7304 BL 0x1C16DFC
	0x033D7308 LDP W8, W9, [X19 + 0x8]
	0x033D730C LDR W10, [X19 + 0x4]
	0x033D7310 ORR W9, W9, W8, 0x0
	0x033D7314 ORR W9, W9, W10, 0x0
	0x033D7318 CBZ W9, 0x33D73B4
	0x033D731C LDR W20, [X19]
	0x033D7320 ANDS W31, W20, 0xFF0000
	0x033D7324 B.EQ 0x33D73C8
	0x033D7328 LDR X0, [X21]
	0x033D732C LDR W9, [X0 + 0xE0]
	0x033D7330 CBZ W9, 0x33D73BC
	0x033D7334 TBNZ X8, 0x0, 0x33D73C8
	0x033D7338 LDR X0, [X21]
	0x033D733C UBFM W9, W20, 0x10, 0x17
	0x033D7340 STR W9, [X31 + 0xC]
	0x033D7344 LDR W9, [X0 + 0xE0]
	0x033D7348 CBNZ W9, 0x33D7354
	0x033D734C BL 0x1C16DFC
	0x033D7350 LDR W8, [X19 + 0x8]
	0x033D7354 STR W8, [X31 + 0x8]
	0x033D7358 ADRP X10, 0xD55000
	0x033D735C LDR W8, [X19 + 0xC]
	0x033D7360 LDR W9, [X19 + 0x4]
	0x033D7364 LDR X10, [X10 + 0xDE8]
	0x033D7368 BFM X8, X9, 0x20, 0x1F
	0x033D736C LDR X0, [X10]
	0x033D7370 STR X8, [X31]
	0x033D7374 LDR W8, [X0 + 0xE0]
	0x033D7378 CBNZ W8, 0x33D7380
	0x033D737C BL 0x1C16DFC
	0x033D7380 ADD X0, X31, 0x8
	0x033D7384 ADD X1, X31, 0x0
	0x033D7388 ADD X2, X31, 0xC
	0x033D738C MOV X3, X31
	0x033D7390 BL 0x33E718C
	0x033D7394 LDP W11, W8, [X31 + 0x8]
	0x033D7398 LDP W10, W9, [X31]
	0x033D739C AND W12, W20, 0xFF00FFFF
	0x033D73A0 ORR W8, W12, W8, 0x10
	0x033D73A4 EOR W8, W8, W10, 0x0
	0x033D73A8 EOR W8, W8, W11, 0x0
	0x033D73AC EOR W0, W8, W9, 0x0
	0x033D73B0 B 0x33D73F0
	0x033D73B4 MOV W0, W31
	0x033D73B8 B 0x33D73F0
	0x033D73BC BL 0x1C16DFC
	0x033D73C0 LDR W8, [X19 + 0x8]
	0x033D73C4 TBZ X8, 0x0, 0x33D7338
	0x033D73C8 LDR X0, [X21]
	0x033D73CC LDR W9, [X0 + 0xE0]
	0x033D73D0 CBNZ W9, 0x33D73DC
	0x033D73D4 BL 0x1C16DFC
	0x033D73D8 LDR W8, [X19 + 0x8]
	0x033D73DC LDR W9, [X19 + 0x4]
	0x033D73E0 LDR W10, [X19 + 0xC]
	0x033D73E4 EOR W9, W9, W20, 0x0
	0x033D73E8 EOR W9, W9, W10, 0x0
	0x033D73EC EOR W0, W9, W8, 0x0
	0x033D73F0 LDP X20, X19, [X31 + 0x20]
	0x033D73F4 LDP X30, X21, [X31 + 0x10]
	0x033D73F8 ADD X31, X31, 0x30
	0x033D73FC RET
	0x033D7400 STP X30, X23, [X31 - 0x30]!
	0x033D7404 STP X22, X21, [X31 + 0x10]
	0x033D7408 STP X20, X19, [X31 + 0x20]
	0x033D740C ADRP X19, 0x1006000
	0x033D7410 ADRP X21, 0xD4B000
	0x033D7414 ADRP X23, 0xD51000
	0x033D7418 LDRB W8, [X19 + 0x31B]
	0x033D741C LDR X21, [X21 + 0x1D8]
	0x033D7420 LDR X23, [X23 + 0x78]
	0x033D7424 MOV X20, X0
	0x033D7428 TBNZ X8, 0x0, 0x33D744C
	0x033D742C ADRP X0, 0xD51000
	0x033D7430 LDR X0, [X0 + 0x78]
	0x033D7434 BL 0x1C16CF4
	0x033D7438 ADRP X0, 0xD4B000
	0x033D743C LDR X0, [X0 + 0x1D8]
	0x033D7440 BL 0x1C16CF4
	0x033D7444 MOVZ W8, 0x1
	0x033D7448 STRB W8, [X19 + 0x31B]
	0x033D744C LDR X1, [X21]
	0x033D7450 LDP X19, X20, [X20]
	0x033D7454 MOV X0, X31
	0x033D7458 BL 0x25BF134
	0x033D745C MOV X21, X0
	0x033D7460 MOV X0, X31
	0x033D7464 MOV X22, X1
	0x033D7468 BL 0x333AE98
	0x033D746C LDR X8, [X23]
	0x033D7470 MOV X23, X0
	0x033D7474 LDR W9, [X8 + 0xE0]
	0x033D7478 CBNZ W9, 0x33D7484
	0x033D747C MOV X0, X8
	0x033D7480 BL 0x1C16DFC
	0x033D7484 MOV X0, X19
	0x033D7488 MOV X1, X20
	0x033D748C MOV X2, X21
	0x033D7490 MOV X3, X22
	0x033D7494 LDP X20, X19, [X31 + 0x20]
	0x033D7498 LDP X22, X21, [X31 + 0x10]
	0x033D749C MOV X4, X23
	0x033D74A0 MOV X5, X31
	0x033D74A4 LDP X30, X23, [X31], #0x30
	0x033D74A8 B 0x338056C
	0x033D74AC STR X30, [X31 - 0x40]!
	0x033D74B0 STP X24, X23, [X31 + 0x10]
	0x033D74B4 STP X22, X21, [X31 + 0x20]
	0x033D74B8 STP X20, X19, [X31 + 0x30]
	0x033D74BC ADRP X20, 0x1006000
	0x033D74C0 ADRP X22, 0xD4B000
	0x033D74C4 ADRP X24, 0xD51000
	0x033D74C8 LDRB W8, [X20 + 0x31C]
	0x033D74CC LDR X22, [X22 + 0x1D8]
	0x033D74D0 LDR X24, [X24 + 0x78]
	0x033D74D4 MOV X19, X1
	0x033D74D8 MOV X21, X0
	0x033D74DC TBNZ X8, 0x0, 0x33D7500
	0x033D74E0 ADRP X0, 0xD51000
	0x033D74E4 LDR X0, [X0 + 0x78]
	0x033D74E8 BL 0x1C16CF4
	0x033D74EC ADRP X0, 0xD4B000
	0x033D74F0 LDR X0, [X0 + 0x1D8]
	0x033D74F4 BL 0x1C16CF4
	0x033D74F8 MOVZ W8, 0x1
	0x033D74FC STRB W8, [X20 + 0x31C]
	0x033D7500 LDR X1, [X22]
	0x033D7504 LDP X20, X21, [X21]
	0x033D7508 MOV X0, X31
	0x033D750C BL 0x25BF134
	0x033D7510 MOV X22, X0
	0x033D7514 MOV X23, X1
	0x033D7518 MOV X0, X19
	0x033D751C MOV X1, X31
	0x033D7520 BL 0x333ACEC
	0x033D7524 LDR X8, [X24]
	0x033D7528 MOV X19, X0
	0x033D752C LDR W9, [X8 + 0xE0]
	0x033D7530 CBNZ W9, 0x33D753C
	0x033D7534 MOV X0, X8
	0x033D7538 BL 0x1C16DFC
	0x033D753C MOV X0, X20
	0x033D7540 MOV X1, X21
	0x033D7544 MOV X2, X22
	0x033D7548 MOV X3, X23
	0x033D754C MOV X4, X19
	0x033D7550 LDP X20, X19, [X31 + 0x30]
	0x033D7554 LDP X22, X21, [X31 + 0x20]
	0x033D7558 LDP X24, X23, [X31 + 0x10]
	0x033D755C MOV X5, X31
	0x033D7560 LDR X30, [X31], #0x40
	0x033D7564 B 0x338056C
	0x033D7568 STR X30, [X31 - 0x40]!
	0x033D756C STP X24, X23, [X31 + 0x10]
	0x033D7570 STP X22, X21, [X31 + 0x20]
	0x033D7574 STP X20, X19, [X31 + 0x30]
	0x033D7578 ADRP X21, 0x1006000
	0x033D757C LDRB W8, [X21 + 0x31D]
	0x033D7580 MOV X19, X2
	0x033D7584 MOV X22, X1
	0x033D7588 MOV X20, X0
	0x033D758C TBNZ X8, 0x0, 0x33D75A4
	0x033D7590 ADRP X0, 0xD51000
	0x033D7594 LDR X0, [X0 + 0x78]
	0x033D7598 BL 0x1C16CF4
	0x033D759C MOVZ W8, 0x1
	0x033D75A0 STRB W8, [X21 + 0x31D]
	0x033D75A4 ADRP X23, 0x1002000
	0x033D75A8 LDRB W8, [X23 + 0x762]
	0x033D75AC LDP X21, X20, [X20]
	0x033D75B0 CBNZ W8, 0x33D75C8
	0x033D75B4 ADRP X0, 0xD43000
	0x033D75B8 LDR X0, [X0 + 0x290]
	0x033D75BC BL 0x1C16CF4
	0x033D75C0 MOVZ W8, 0x1
	0x033D75C4 STRB W8, [X23 + 0x762]
	0x033D75C8 ADRP X24, 0xD51000
	0x033D75CC LDR X24, [X24 + 0x78]
	0x033D75D0 CBZ X22, 0x33D75EC
	0x033D75D4 MOV X0, X22
	0x033D75D8 MOV X1, X31
	0x033D75DC BL 0x3225708
	0x033D75E0 LDR W22, [X22 + 0x10]
	0x033D75E4 MOV X23, X0
	0x033D75E8 B 0x33D75F0
	0x033D75EC MOV X23, X31
	0x033D75F0 MOV X0, X19
	0x033D75F4 MOV X1, X31
	0x033D75F8 BL 0x333ACEC
	0x033D75FC LDR X8, [X24]
	0x033D7600 MOV X19, X0
	0x033D7604 LDR W9, [X8 + 0xE0]
	0x033D7608 CBNZ W9, 0x33D7614
	0x033D760C MOV X0, X8
	0x033D7610 BL 0x1C16DFC
	0x033D7614 MOV X0, X21
	0x033D7618 MOV X1, X20
	0x033D761C MOV X2, X23
	0x033D7620 MOV X3, X22
	0x033D7624 MOV X4, X19
	0x033D7628 LDP X20, X19, [X31 + 0x30]
	0x033D762C LDP X22, X21, [X31 + 0x20]
	0x033D7630 LDP X24, X23, [X31 + 0x10]
	0x033D7634 MOV X5, X31
	0x033D7638 LDR X30, [X31], #0x40
	0x033D763C B 0x338056C
	0x033D7640 SUB X31, X31, 0x60
	0x033D7644 STP X30, X27, [X31 + 0x10]
	0x033D7648 STP X26, X25, [X31 + 0x20]
	0x033D764C STP X24, X23, [X31 + 0x30]
	0x033D7650 STP X22, X21, [X31 + 0x40]
	0x033D7654 STP X20, X19, [X31 + 0x50]
	0x033D7658 ADRP X25, 0x1006000
	0x033D765C ADRP X27, 0xD51000
	0x033D7660 LDRB W8, [X25 + 0x31E]
	0x033D7664 LDR X27, [X27 + 0x78]
	0x033D7668 MOV X24, X6
	0x033D766C MOV X21, X5
	0x033D7670 MOV X23, X4
	0x033D7674 MOV X19, X3
	0x033D7678 MOV X20, X2
	0x033D767C MOV X22, X1
	0x033D7680 MOV X26, X0
	0x033D7684 TBNZ X8, 0x0, 0x33D769C
	0x033D7688 ADRP X0, 0xD51000
	0x033D768C LDR X0, [X0 + 0x78]
	0x033D7690 BL 0x1C16CF4
	0x033D7694 MOVZ W8, 0x1
	0x033D7698 STRB W8, [X25 + 0x31E]
	0x033D769C LDP X25, X26, [X26]
	0x033D76A0 MOV X0, X24
	0x033D76A4 MOV X1, X31
	0x033D76A8 BL 0x333ACEC
	0x033D76AC LDR X8, [X27]
	0x033D76B0 MOV X24, X0
	0x033D76B4 LDR W9, [X8 + 0xE0]
	0x033D76B8 CBNZ W9, 0x33D76C4
	0x033D76BC MOV X0, X8
	0x033D76C0 BL 0x1C16DFC
	0x033D76C4 MOV X0, X25
	0x033D76C8 MOV X1, X26
	0x033D76CC MOV X2, X23
	0x033D76D0 MOV X3, X21
	0x033D76D4 MOV X4, X24
	0x033D76D8 MOV X5, X22
	0x033D76DC MOV X6, X20
	0x033D76E0 MOV X7, X19
	0x033D76E4 STR X31, [X31]
	0x033D76E8 BL 0x3382164
	0x033D76EC LDP X20, X19, [X31 + 0x50]

ISIL:
	001 Move [X31-64], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x1007000
	010 Move X20, 0xD56000
	011 Move W8, [X21+852]
	012 Move X20, [X20+3560]
	013 Move X19, X0
	014 Move V8, V0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xD56000
	020 Move X0, [X0+3560]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+852], W8
	024 Move [X19], X31
	025 Move [X19+8], X31
	026 Move X0, [X20]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move W8, S8
	032 Move W9, W8
	033 ShiftRight W9, 23
	034 And W9, W9, 0x3FFFFFFF
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move W8, 0xEDDF
	038 Move W10, 0x4D10
	039 Move W11, 0x1220
	040 NotImplemented "Instruction MOVK not yet implemented."
	041 NotImplemented "Instruction FCMP not yet implemented."
	042 NotImplemented "Instruction FNEG not yet implemented."
	043 NotImplemented "Instruction MOVK not yet implemented."
	044 Multiply W9, W9, W10
	045 Move W12, 6
	046 NotImplemented "Instruction FCSEL not yet implemented."
	047 Add W10, W8, 0x1D0000
	048 Add W23, W9, W11
	049 NotImplemented "Instruction CSET not yet implemented."
	050 NotImplemented "Instruction FCVT not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Subtract W22, W12, W23
	053 Move X8, -42909696
	054 Move V1, [X8+156]
	055 NotImplemented "Instruction FCMP not yet implemented."
	056 Add W31, W22, 1
	057 Move W22, W31
	058 Move X0, [X20]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move W8, 28
	061 NotImplemented "Instruction CSEL not yet implemented."
	062 Move W10, [X0+224]
	063 Compare W10, 0
	064 JumpIfNotEqual {67}
	065 Call 0x1C17DFC
	066 Move X0, [X20]
	067 Move X8, [X0+184]
	068 Move X8, [X8+16]
	069 Compare X8, 0
	070 JumpIfEqual {288}
	071 Move W9, [X8+24]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Add X8, X8, W22
	074 Move V0, [X8+32]
	075 Multiply D8, D0, D8
	076 Move X0, [X20]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {82}
	080 Call 0x1C17DFC
	081 Move X0, [X20]
	082 Move X8, [X0+184]
	083 Move X8, [X8+16]
	084 Compare X8, 0
	085 JumpIfEqual {288}
	086 Move W10, [X8+24]
	087 NotImplemented "Instruction SBFM not yet implemented."
	088 Subtract X9, X9, 6
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Add X8, X8, X9
	091 Move V0, [X8+32]
	092 NotImplemented "Instruction FDIV not yet implemented."
	093 Move X8, -42897408
	094 Move V0, [X8+1432]
	095 Move X9, 0x7FF00000
	096 Move D1, X9
	097 NotImplemented "Instruction FCMP not yet implemented."
	098 NotImplemented "Instruction CSET not yet implemented."
	099 NotImplemented "Instruction CMP not yet implemented."
	100 NotImplemented "Instruction CSET not yet implemented."
	101 Move D0, 8.000000000465661
	102 Or W8, W10, W8
	103 Multiply D0, D8, D0
	104 NotImplemented "Instruction CMP not yet implemented."
	105 NotImplemented "Instruction FCSEL not yet implemented."
	106 Move W10, 0x80000000
	107 NotImplemented "Instruction FCVTZS not yet implemented."
	108 NotImplemented "Instruction FCMP not yet implemented."
	109 NotImplemented "Instruction CSEL not yet implemented."
	110 NotImplemented "Instruction SCVTF not yet implemented."
	111 Subtract D0, D0, D1
	112 Move D1, 0.5
	113 NotImplemented "Instruction FCMP not yet implemented."
	114 Move TEMP, X23
	115 And TEMP, TEMP, 1
	116 Compare TEMP, 1
	117 JumpIfNotEqual {121}
	118 Move D1, 0.5
	119 NotImplemented "Instruction FCMP not yet implemented."
	120 Add W23, W23, 1
	121 Compare W23, 0
	122 JumpIfEqual {261}
	123 Xor W8, W8, 1
	124 Add W22, W22, W8
	125 Move W21, W21
	126 ShiftRight W21, 1
	127 And W21, W21, 0
	128 Move TEMP, X22
	129 And TEMP, TEMP, -2147483648
	130 Compare TEMP, -2147483648
	131 JumpIfEqual {190}
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move W8, 6
	134 NotImplemented "Instruction CSEL not yet implemented."
	135 Subtract W9, W8, 4
	136 And W10, W23, 15
	137 Compare W10, 0
	138 JumpIfNotEqual {151}
	139 Move W10, 0x1759
	140 NotImplemented "Instruction MOVK not yet implemented."
	141 NotImplemented "Instruction UMADDL not yet implemented."
	142 Move X10, X10
	143 ShiftRight X10, 45
	144 And X10, X10, 0x7FFFFFFF
	145 Move W11, 0x2710
	146 Multiply W11, W10, W11
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Subtract W22, W22, 4
	149 Move W8, W9
	150 Move W23, W10
	151 NotImplemented "Instruction CMP not yet implemented."
	152 And W9, W23, 3
	153 Compare W9, 0
	154 JumpIfNotEqual {166}
	155 Move W9, 0x851F
	156 NotImplemented "Instruction MOVK not yet implemented."
	157 NotImplemented "Instruction UMADDL not yet implemented."
	158 Move X24, X9
	159 ShiftRight X24, 37
	160 And X24, X24, 0x7FFFFFFF
	161 Move W9, 100
	162 Multiply W9, W24, W9
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Subtract W22, W22, 2
	165 Subtract W8, W8, 2
	166 Move W24, W23
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Move TEMP, X24
	169 And TEMP, TEMP, 1
	170 Compare TEMP, 1
	171 JumpIfEqual {183}
	172 Move W8, 0xCCCD
	173 NotImplemented "Instruction MOVK not yet implemented."
	174 NotImplemented "Instruction UMADDL not yet implemented."
	175 Move X8, X8
	176 ShiftRight X8, 35
	177 And X8, X8, 0x7FFFFFFF
	178 Add W9, W8, W8
	179 NotImplemented "Instruction CMP not yet implemented."
	180 NotImplemented "Instruction CSET not yet implemented."
	181 NotImplemented "Instruction CSEL not yet implemented."
	182 Subtract W22, W22, W9
	183 Move X0, [X20]
	184 Or W21, W21, W22
	185 Move W8, [X0+224]
	186 Compare W8, 0
	187 JumpIfNotEqual {189}
	188 Call 0x1C17DFC
	189 Move [X19+8], W24
	190 Add W31, W22, 9
	191 Move X0, [X20]
	192 Move W8, [X0+224]
	193 Compare W8, 0
	194 JumpIfNotEqual {197}
	195 Call 0x1C17DFC
	196 Move X0, [X20]
	197 Move X8, [X0+184]
	198 Move X8, [X8]
	199 Compare X8, 0
	200 JumpIfEqual {288}
	201 Add W31, W22, 19
	202 Move W10, [X8+24]
	203 Move TEMP, 8
	204 Not TEMP
	205 Move W9, TEMP
	206 Subtract W9, W9, W22
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Add X8, X8, W9
	209 Move W8, [X8+32]
	210 Move W9, W23
	211 Move W10, 0xCA00
	212 NotImplemented "Instruction MOVK not yet implemented."
	213 Multiply X8, X8, X9
	214 Move X9, X8
	215 ShiftRight X9, 32
	216 And X9, X9, 0x7FFFFFFF
	217 And X8, X8, 0
	218 Multiply X9, X9, X10
	219 Multiply X8, X8, X10
	220 Add X9, X9, X8
	221 Move [X19+8], W8
	222 Move [X19+12], W9
	223 Move X9, X9
	224 ShiftRight X9, 32
	225 And X9, X9, 0x7FFFFFFF
	226 Move [X19+4], W9
	227 Move X0, [X20]
	228 Move W8, [X0+224]
	229 Compare W8, 0
	230 JumpIfNotEqual {233}
	231 Call 0x1C17DFC
	232 Move X0, [X20]
	233 Move X8, [X0+184]
	234 Move X8, [X8]
	235 Compare X8, 0
	236 JumpIfEqual {288}
	237 Move W10, [X8+24]
	238 Subtract W9, W31, W22
	239 NotImplemented "Instruction CMP not yet implemented."
	240 Add X8, X8, W9
	241 Move W8, [X8+32]
	242 Move W9, W23
	243 Multiply X8, X8, X9
	244 Move [X19+8], X8
	245 Move W10, [X8+24]
	246 Move TEMP, 17
	247 Not TEMP
	248 Move W9, TEMP
	249 Subtract W9, W9, W22
	250 NotImplemented "Instruction CMP not yet implemented."
	251 Add X8, X8, W9
	252 Move W8, [X8+32]
	253 Move X1, 0xA7640000
	254 Move W9, W23
	255 NotImplemented "Instruction MOVK not yet implemented."
	256 Multiply X0, X8, X9
	257 NotImplemented "Instruction MOVK not yet implemented."
	258 Move X2, X19
	259 Call DecCalc.UInt64x64To128, X0, X1, X2
	260 Move [X19], W21
	261 Move X20, [X31+48]
	262 Move X19, [X31+56]
	263 Move X22, [X31+32]
	264 Move X21, [X31+40]
	265 Move X24, [X31+16]
	266 Move X23, [X31+24]
	267 Move X30, [X31+8]
	268 Move V8, [X31+64]
	269 Return 
	270 Move X0, 0xD1D000
	271 Move X0, [X0+2136]
	272 Call 0x1C17D08
	273 Call 0x1C17F10
	274 Move X19, X0
	275 Move X0, 0xD54000
	276 Move X0, [X0+4072]
	277 Call 0x1C17D08
	278 Move X1, X0
	279 Move X0, X19
	280 Move X2, X31
	281 Call OverflowException..ctor, X0, X1
	282 Move X0, 0xD56000
	283 Move X0, [X0+3568]
	284 Call 0x1C17D08
	285 Move X1, X0
	286 Move X0, X19
	287 Call 0x1C17DEC
	288 Call 0x1C17F20
	289 Call 0x1C17F28

Method: System.Void VarDecFromR8(System.Double input, out System.Decimal/DecCalc result)

Disassembly:
	0x033D7778 CBZ X20, 0x33D7794
	0x033D777C MOV X0, X20
	0x033D7780 MOV X1, X31
	0x033D7784 BL 0x3225708
	0x033D7788 LDR W21, [X20 + 0x10]
	0x033D778C MOV X20, X0
	0x033D7790 B 0x33D7798
	0x033D7794 MOV X21, X31
	0x033D7798 MOV X0, X19
	0x033D779C MOV X1, X31
	0x033D77A0 BL 0x333ACEC
	0x033D77A4 LDR X8, [X22]
	0x033D77A8 MOV X19, X0
	0x033D77AC LDR W9, [X8 + 0xE0]
	0x033D77B0 CBNZ W9, 0x33D77BC
	0x033D77B4 MOV X0, X8
	0x033D77B8 BL 0x1C16DFC
	0x033D77BC MOV X0, X20
	0x033D77C0 MOV X1, X21
	0x033D77C4 MOV X3, X19
	0x033D77C8 LDP X20, X19, [X31 + 0x20]
	0x033D77CC LDP X22, X21, [X31 + 0x10]
	0x033D77D0 MOVZ W2, 0x6F
	0x033D77D4 MOV X4, X31
	0x033D77D8 LDR X30, [X31], #0x30
	0x033D77DC B 0x338A4F0
	0x033D77E0 STP X30, X23, [X31 - 0x30]!
	0x033D77E4 STP X22, X21, [X31 + 0x10]
	0x033D77E8 STP X20, X19, [X31 + 0x20]
	0x033D77EC ADRP X22, 0x1006000
	0x033D77F0 LDRB W8, [X22 + 0x320]
	0x033D77F4 MOV X20, X2
	0x033D77F8 MOV W19, W1
	0x033D77FC MOV X21, X0
	0x033D7800 TBNZ X8, 0x0, 0x33D7818
	0x033D7804 ADRP X0, 0xD51000
	0x033D7808 LDR X0, [X0 + 0x78]
	0x033D780C BL 0x1C16CF4
	0x033D7810 MOVZ W8, 0x1
	0x033D7814 STRB W8, [X22 + 0x320]
	0x033D7818 MOV W0, W19
	0x033D781C MOV X1, X31
	0x033D7820 BL 0x333B408
	0x033D7824 CBNZ X21, 0x33D7834
	0x033D7828 MOVZ W0, 0x30
	0x033D782C MOV X1, X31
	0x033D7830 BL 0x338F3E0
	0x033D7834 ADRP X22, 0x1002000
	0x033D7838 LDRB W8, [X22 + 0x762]
	0x033D783C CBNZ W8, 0x33D7854
	0x033D7840 ADRP X0, 0xD43000
	0x033D7844 LDR X0, [X0 + 0x290]
	0x033D7848 BL 0x1C16CF4
	0x033D784C MOVZ W8, 0x1
	0x033D7850 STRB W8, [X22 + 0x762]
	0x033D7854 ADRP X23, 0xD51000
	0x033D7858 LDR X23, [X23 + 0x78]
	0x033D785C CBZ X21, 0x33D7878
	0x033D7860 MOV X0, X21
	0x033D7864 MOV X1, X31
	0x033D7868 BL 0x3225708
	0x033D786C LDR W21, [X21 + 0x10]
	0x033D7870 MOV X22, X0
	0x033D7874 B 0x33D787C
	0x033D7878 MOV X22, X31
	0x033D787C MOV X0, X20
	0x033D7880 MOV X1, X31
	0x033D7884 BL 0x333ACEC
	0x033D7888 LDR X8, [X23]
	0x033D788C MOV X20, X0
	0x033D7890 LDR W9, [X8 + 0xE0]
	0x033D7894 CBNZ W9, 0x33D78A0
	0x033D7898 MOV X0, X8
	0x033D789C BL 0x1C16DFC
	0x033D78A0 MOV X0, X22
	0x033D78A4 MOV X1, X21
	0x033D78A8 MOV W2, W19
	0x033D78AC MOV X3, X20
	0x033D78B0 LDP X20, X19, [X31 + 0x20]
	0x033D78B4 LDP X22, X21, [X31 + 0x10]
	0x033D78B8 MOV X4, X31
	0x033D78BC LDP X30, X23, [X31], #0x30
	0x033D78C0 B 0x338A4F0
	0x033D78C4 STR X30, [X31 - 0x30]!
	0x033D78C8 STP X22, X21, [X31 + 0x10]
	0x033D78CC STP X20, X19, [X31 + 0x20]
	0x033D78D0 ADRP X21, 0x1006000
	0x033D78D4 LDRB W8, [X21 + 0x321]
	0x033D78D8 MOV X19, X1
	0x033D78DC MOV X20, X0
	0x033D78E0 TBNZ X8, 0x0, 0x33D78F8
	0x033D78E4 ADRP X0, 0xD51000
	0x033D78E8 LDR X0, [X0 + 0x78]
	0x033D78EC BL 0x1C16CF4
	0x033D78F0 MOVZ W8, 0x1
	0x033D78F4 STRB W8, [X21 + 0x321]
	0x033D78F8 CBZ X20, 0x33D7980
	0x033D78FC ADRP X21, 0x1002000
	0x033D7900 ADRP X22, 0xD51000
	0x033D7904 LDRB W8, [X21 + 0x762]
	0x033D7908 LDR X22, [X22 + 0x78]
	0x033D790C CBNZ W8, 0x33D7924
	0x033D7910 ADRP X0, 0xD43000
	0x033D7914 LDR X0, [X0 + 0x290]
	0x033D7918 BL 0x1C16CF4
	0x033D791C MOVZ W8, 0x1
	0x033D7920 STRB W8, [X21 + 0x762]
	0x033D7924 MOV X0, X20
	0x033D7928 MOV X1, X31
	0x033D792C BL 0x3225708
	0x033D7930 LDR W20, [X20 + 0x10]
	0x033D7934 MOV X21, X0
	0x033D7938 MOV X0, X31
	0x033D793C BL 0x333AE98
	0x033D7940 LDR X8, [X22]
	0x033D7944 MOV X22, X0
	0x033D7948 LDR W9, [X8 + 0xE0]
	0x033D794C CBNZ W9, 0x33D7958
	0x033D7950 MOV X0, X8
	0x033D7954 BL 0x1C16DFC
	0x033D7958 MOV X0, X21
	0x033D795C MOV X1, X20
	0x033D7960 MOV X3, X22
	0x033D7964 MOV X4, X19
	0x033D7968 LDP X20, X19, [X31 + 0x20]
	0x033D796C LDP X22, X21, [X31 + 0x10]
	0x033D7970 MOVZ W2, 0x6F
	0x033D7974 MOV X5, X31
	0x033D7978 LDR X30, [X31], #0x30
	0x033D797C B 0x338B030
	0x033D7980 STP X31, X31, [X19]
	0x033D7984 LDP X20, X19, [X31 + 0x20]
	0x033D7988 LDP X22, X21, [X31 + 0x10]
	0x033D798C MOV W0, W31
	0x033D7990 LDR X30, [X31], #0x30
	0x033D7994 RET
	0x033D7998 STR X30, [X31 - 0x40]!
	0x033D799C STP X24, X23, [X31 + 0x10]
	0x033D79A0 STP X22, X21, [X31 + 0x20]
	0x033D79A4 STP X20, X19, [X31 + 0x30]
	0x033D79A8 ADRP X23, 0x1006000
	0x033D79AC LDRB W8, [X23 + 0x322]
	0x033D79B0 MOV X19, X3
	0x033D79B4 MOV X21, X2
	0x033D79B8 MOV W20, W1
	0x033D79BC MOV X22, X0
	0x033D79C0 TBNZ X8, 0x0, 0x33D79D8
	0x033D79C4 ADRP X0, 0xD51000
	0x033D79C8 LDR X0, [X0 + 0x78]
	0x033D79CC BL 0x1C16CF4
	0x033D79D0 MOVZ W8, 0x1
	0x033D79D4 STRB W8, [X23 + 0x322]
	0x033D79D8 MOV W0, W20
	0x033D79DC MOV X1, X31
	0x033D79E0 BL 0x333B408
	0x033D79E4 CBZ X22, 0x33D7A74
	0x033D79E8 ADRP X23, 0x1002000
	0x033D79EC ADRP X24, 0xD51000
	0x033D79F0 LDRB W8, [X23 + 0x762]
	0x033D79F4 LDR X24, [X24 + 0x78]
	0x033D79F8 CBNZ W8, 0x33D7A10
	0x033D79FC ADRP X0, 0xD43000
	0x033D7A00 LDR X0, [X0 + 0x290]
	0x033D7A04 BL 0x1C16CF4
	0x033D7A08 MOVZ W8, 0x1
	0x033D7A0C STRB W8, [X23 + 0x762]
	0x033D7A10 MOV X0, X22
	0x033D7A14 MOV X1, X31
	0x033D7A18 BL 0x3225708
	0x033D7A1C LDR W22, [X22 + 0x10]
	0x033D7A20 MOV X23, X0
	0x033D7A24 MOV X0, X21
	0x033D7A28 MOV X1, X31
	0x033D7A2C BL 0x333ACEC
	0x033D7A30 LDR X8, [X24]
	0x033D7A34 MOV X21, X0
	0x033D7A38 LDR W9, [X8 + 0xE0]
	0x033D7A3C CBNZ W9, 0x33D7A48
	0x033D7A40 MOV X0, X8
	0x033D7A44 BL 0x1C16DFC
	0x033D7A48 MOV X0, X23
	0x033D7A4C MOV X1, X22
	0x033D7A50 MOV W2, W20
	0x033D7A54 MOV X3, X21
	0x033D7A58 MOV X4, X19
	0x033D7A5C LDP X20, X19, [X31 + 0x30]
	0x033D7A60 LDP X22, X21, [X31 + 0x20]
	0x033D7A64 LDP X24, X23, [X31 + 0x10]
	0x033D7A68 MOV X5, X31
	0x033D7A6C LDR X30, [X31], #0x40
	0x033D7A70 B 0x338B030
	0x033D7A74 STP X31, X31, [X19]
	0x033D7A78 LDP X20, X19, [X31 + 0x30]
	0x033D7A7C LDP X22, X21, [X31 + 0x20]
	0x033D7A80 LDP X24, X23, [X31 + 0x10]
	0x033D7A84 MOV W0, W31
	0x033D7A88 LDR X30, [X31], #0x40
	0x033D7A8C RET
	0x033D7A90 SUB X31, X31, 0x50
	0x033D7A94 STR X30, [X31 + 0x20]
	0x033D7A98 STP X22, X21, [X31 + 0x30]
	0x033D7A9C STP X20, X19, [X31 + 0x40]
	0x033D7AA0 MRS X20, 0xC000
	0x033D7AA4 LDR X8, [X20 + 0x28]
	0x033D7AA8 ADRP X21, 0x1006000
	0x033D7AAC ADRP X22, 0xD44000
	0x033D7AB0 MOV W19, W2
	0x033D7AB4 STR X8, [X31 + 0x18]
	0x033D7AB8 STP X0, X1, [X31 + 0x8]
	0x033D7ABC LDRB W8, [X21 + 0x323]
	0x033D7AC0 LDR X22, [X22 + 0x5F0]
	0x033D7AC4 TBNZ X8, 0x0, 0x33D7ADC
	0x033D7AC8 ADRP X0, 0xD44000
	0x033D7ACC LDR X0, [X0 + 0x5F0]
	0x033D7AD0 BL 0x1C16CF4
	0x033D7AD4 MOVZ W8, 0x1
	0x033D7AD8 STRB W8, [X21 + 0x323]
	0x033D7ADC LDR X0, [X22]
	0x033D7AE0 LDR W8, [X0 + 0xE0]
	0x033D7AE4 CBNZ W8, 0x33D7AEC
	0x033D7AE8 BL 0x1C16DFC
	0x033D7AEC ADD X0, X31, 0x8
	0x033D7AF0 MOV W1, W19
	0x033D7AF4 MOV W2, W31
	0x033D7AF8 BL 0x33D7B24
	0x033D7AFC LDR X8, [X20 + 0x28]
	0x033D7B00 LDR X9, [X31 + 0x18]
	0x033D7B04 CMP X8, X9
	0x033D7B08 B.NE 0x33D7B20
	0x033D7B0C LDP X20, X19, [X31 + 0x40]
	0x033D7B10 LDP X22, X21, [X31 + 0x30]
	0x033D7B14 LDR X30, [X31 + 0x20]
	0x033D7B18 ADD X31, X31, 0x50
	0x033D7B1C RET
	0x033D7B20 BL 0x3EB1B20
	0x033D7B24 STR X30, [X31 - 0x30]!
	0x033D7B28 STP X22, X21, [X31 + 0x10]
	0x033D7B2C STP X20, X19, [X31 + 0x20]
	0x033D7B30 ADRP X22, 0x1006000
	0x033D7B34 LDRB W8, [X22 + 0x324]
	0x033D7B38 MOV W19, W2
	0x033D7B3C MOV W21, W1
	0x033D7B40 MOV X20, X0
	0x033D7B44 TBNZ X8, 0x0, 0x33D7B68
	0x033D7B48 ADRP X0, 0xD55000
	0x033D7B4C LDR X0, [X0 + 0xDE8]
	0x033D7B50 BL 0x1C16CF4
	0x033D7B54 ADRP X0, 0xD44000
	0x033D7B58 LDR X0, [X0 + 0x5F0]
	0x033D7B5C BL 0x1C16CF4
	0x033D7B60 MOVZ W8, 0x1
	0x033D7B64 STRB W8, [X22 + 0x324]
	0x033D7B68 CMP W21, 0x1D
	0x033D7B6C B.CS 0x33D7BEC
	0x033D7B70 CMP W19, 0x2
	0x033D7B74 B.CS 0x33D7C48
	0x033D7B78 ADRP X22, 0xD44000
	0x033D7B7C LDR X22, [X22 + 0x5F0]
	0x033D7B80 LDR X0, [X22]
	0x033D7B84 LDR W8, [X0 + 0xE0]
	0x033D7B88 CBNZ W8, 0x33D7B90
	0x033D7B8C BL 0x1C16DFC
	0x033D7B90 LDRB W8, [X20 + 0x2]

ISIL:
	001 Move [X31-64], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x1007000
	009 Move X21, 0xD56000
	010 Move W8, [X20+853]
	011 Move X21, [X21+3560]
	012 Move X19, X0
	013 Move V8, V0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xD56000
	019 Move X0, [X0+3560]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+853], W8
	023 Move [X19], X31
	024 Move [X19+8], X31
	025 Move X0, [X21]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X8, D8
	031 Move X9, X8
	032 ShiftRight X9, 52
	033 And X9, X9, 0x3FFFFFFF
	034 NotImplemented "Instruction CMP not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move W8, 0xA5DF
	037 Move W10, 0x4D10
	038 Move W11, 0x5A20
	039 NotImplemented "Instruction MOVK not yet implemented."
	040 NotImplemented "Instruction MOVK not yet implemented."
	041 Multiply W9, W9, W10
	042 NotImplemented "Instruction FCMP not yet implemented."
	043 NotImplemented "Instruction FNEG not yet implemented."
	044 Move W12, 14
	045 Add W10, W8, 0x1D0000
	046 Add W20, W9, W11
	047 NotImplemented "Instruction CSET not yet implemented."
	048 NotImplemented "Instruction FCSEL not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Subtract W23, W12, W20
	051 Move X8, -42897408
	052 Move V0, [X8+2456]
	053 NotImplemented "Instruction FCMP not yet implemented."
	054 Add W31, W23, 1
	055 Move W23, W31
	056 Move X0, [X21]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move W8, 28
	059 NotImplemented "Instruction CSEL not yet implemented."
	060 Move W10, [X0+224]
	061 Compare W10, 0
	062 JumpIfNotEqual {65}
	063 Call 0x1C17DFC
	064 Move X0, [X21]
	065 Move X8, [X0+184]
	066 Move X8, [X8+16]
	067 Compare X8, 0
	068 JumpIfEqual {289}
	069 Move W9, [X8+24]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Add X8, X8, W23
	072 Move V0, [X8+32]
	073 Multiply D8, D8, D0
	074 Move X0, [X21]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {80}
	078 Call 0x1C17DFC
	079 Move X0, [X21]
	080 Move X8, [X0+184]
	081 Move X8, [X8+16]
	082 Compare X8, 0
	083 JumpIfEqual {289}
	084 Move W10, [X8+24]
	085 NotImplemented "Instruction SBFM not yet implemented."
	086 Subtract X9, X9, 14
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Add X8, X8, X9
	089 Move V0, [X8+32]
	090 NotImplemented "Instruction FDIV not yet implemented."
	091 Move X8, -42897408
	092 Move V0, [X8+2216]
	093 Move X9, 0x7FF00000
	094 Move D1, X9
	095 NotImplemented "Instruction FCMP not yet implemented."
	096 NotImplemented "Instruction CSET not yet implemented."
	097 NotImplemented "Instruction CMP not yet implemented."
	098 NotImplemented "Instruction CSET not yet implemented."
	099 Move D0, 8.000000000465661
	100 Or W8, W10, W8
	101 Multiply D0, D8, D0
	102 NotImplemented "Instruction CMP not yet implemented."
	103 NotImplemented "Instruction FCSEL not yet implemented."
	104 Move X10, 0x80000000
	105 NotImplemented "Instruction FCVTZS not yet implemented."
	106 NotImplemented "Instruction FCMP not yet implemented."
	107 NotImplemented "Instruction CSEL not yet implemented."
	108 NotImplemented "Instruction SCVTF not yet implemented."
	109 Subtract D0, D0, D1
	110 Move D1, 0.5
	111 NotImplemented "Instruction FCMP not yet implemented."
	112 Move TEMP, X20
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfNotEqual {119}
	116 Move D1, 0.5
	117 NotImplemented "Instruction FCMP not yet implemented."
	118 Add X20, X20, 1
	119 Compare X20, 0
	120 JumpIfEqual {263}
	121 Xor W8, W8, 1
	122 Add W23, W23, W8
	123 Move W22, W22
	124 ShiftRight W22, 1
	125 And W22, W22, 0
	126 Move TEMP, X23
	127 And TEMP, TEMP, -2147483648
	128 Compare TEMP, -2147483648
	129 JumpIfEqual {154}
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Move W8, 14
	132 NotImplemented "Instruction CSEL not yet implemented."
	133 Subtract W9, W8, 8
	134 And X10, X20, 255
	135 Compare X10, 0
	136 JumpIfNotEqual {173}
	137 Move X10, 0xCEFD
	138 NotImplemented "Instruction MOVK not yet implemented."
	139 NotImplemented "Instruction MOVK not yet implemented."
	140 NotImplemented "Instruction MOVK not yet implemented."
	141 NotImplemented "Instruction INVALID not yet implemented."
	142 Move X11, X10
	143 ShiftRight X11, 26
	144 And X11, X11, 0x7FFFFFFF
	145 Move W10, 0xE100
	146 NotImplemented "Instruction MOVK not yet implemented."
	147 Multiply W10, W11, W10
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Move W10, W20
	150 Subtract W23, W23, 8
	151 Move W10, W11
	152 Move W8, W9
	153 Move X20, X11
	154 Move X0, [X21]
	155 Move W8, [X0+224]
	156 Compare W8, 0
	157 JumpIfNotEqual {160}
	158 Call 0x1C17DFC
	159 Move X0, [X21]
	160 Move X8, [X0+184]
	161 Add W31, W23, 9
	162 Move X8, [X8+8]
	163 Compare X8, 0
	164 JumpIfEqual {289}
	165 Move W10, [X8+24]
	166 NotImplemented "Instruction ORN not yet implemented."
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Add X8, X8, W9
	169 Move X1, [X8+32]
	170 Move X0, X20
	171 Move X2, X19
	172 Call DecCalc.UInt64x64To128, X0, X1, X2
	173 Move W10, W20
	174 Subtract W11, W8, 4
	175 And W9, W10, 15
	176 Compare W9, 0
	177 JumpIfNotEqual {192}
	178 Move X9, 0x594B
	179 NotImplemented "Instruction MOVK not yet implemented."
	180 NotImplemented "Instruction MOVK not yet implemented."
	181 NotImplemented "Instruction MOVK not yet implemented."
	182 NotImplemented "Instruction INVALID not yet implemented."
	183 Move X9, X9
	184 ShiftRight X9, 11
	185 And X9, X9, 0x7FFFFFFF
	186 Move W12, 0x2710
	187 Multiply W12, W9, W12
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Subtract W23, W23, 4
	190 Move W8, W11
	191 Move X20, X9
	192 Move W9, W10
	193 NotImplemented "Instruction CMP not yet implemented."
	194 And W10, W9, 3
	195 Compare W10, 0
	196 JumpIfNotEqual {214}
	197 Move X11, 0xF5C3
	198 NotImplemented "Instruction MOVK not yet implemented."
	199 NotImplemented "Instruction MOVK not yet implemented."
	200 Move X10, X20
	201 ShiftRight X10, 2
	202 And X10, X10, 0x7FFFFFFF
	203 NotImplemented "Instruction MOVK not yet implemented."
	204 NotImplemented "Instruction INVALID not yet implemented."
	205 Move X10, X10
	206 ShiftRight X10, 2
	207 And X10, X10, 0x7FFFFFFF
	208 Move W11, 100
	209 Multiply W11, W10, W11
	210 NotImplemented "Instruction CMP not yet implemented."
	211 Subtract W23, W23, 2
	212 Subtract W8, W8, 2
	213 Move X20, X10
	214 Move W10, W9
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Move TEMP, X10
	217 And TEMP, TEMP, 1
	218 Compare TEMP, 1
	219 JumpIfEqual {234}
	220 Or X8, X31, -3689348814741910324
	221 NotImplemented "Instruction MOVK not yet implemented."
	222 NotImplemented "Instruction INVALID not yet implemented."
	223 Move X8, X8
	224 ShiftRight X8, 3
	225 And X8, X8, 0x7FFFFFFF
	226 Add W9, W8, W8
	227 Move W9, W9
	228 ShiftRight W9, 31
	229 And W9, W9, 0x3FFFFFFF
	230 NotImplemented "Instruction CMP not yet implemented."
	231 NotImplemented "Instruction CSET not yet implemented."
	232 NotImplemented "Instruction CSEL not yet implemented."
	233 Subtract W23, W23, W9
	234 Move X0, [X21]
	235 Or W22, W22, W23
	236 Move W8, [X0+224]
	237 Compare W8, 0
	238 JumpIfNotEqual {240}
	239 Call 0x1C17DFC
	240 Move [X19+8], X20
	241 Move X8, [X8]
	242 Compare X8, 0
	243 JumpIfEqual {289}
	244 Move W10, [X8+24]
	245 Subtract W9, W31, W23
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Add X8, X8, W9
	248 Move W8, [X8+32]
	249 And X9, X20, 0
	250 Move X10, X20
	251 ShiftRight X10, 32
	252 And X10, X10, 0x7FFFFFFF
	253 Multiply X9, X9, X8
	254 Multiply X8, X10, X8
	255 Add X8, X8, X9
	256 Move [X19+8], W9
	257 Move [X19+12], W8
	258 Move X8, X8
	259 ShiftRight X8, 32
	260 And X8, X8, 0x7FFFFFFF
	261 Move [X19+4], W8
	262 Move [X19], W22
	263 Move X20, [X31+48]
	264 Move X19, [X31+56]
	265 Move X22, [X31+32]
	266 Move X21, [X31+40]
	267 Move X30, [X31+16]
	268 Move X23, [X31+24]
	269 Move V8, [X31+64]
	270 Return 
	271 Move X0, 0xD1D000
	272 Move X0, [X0+2136]
	273 Call 0x1C17D08
	274 Call 0x1C17F10
	275 Move X19, X0
	276 Move X0, 0xD54000
	277 Move X0, [X0+4072]
	278 Call 0x1C17D08
	279 Move X1, X0
	280 Move X0, X19
	281 Move X2, X31
	282 Call OverflowException..ctor, X0, X1
	283 Move X0, 0xD56000
	284 Move X0, [X0+3576]
	285 Call 0x1C17D08
	286 Move X1, X0
	287 Move X0, X19
	288 Call 0x1C17DEC
	289 Call 0x1C17F20
	290 Call 0x1C17F28

Method: System.Single VarR4FromDec(in System.Decimal value)

Disassembly:
	0x033D9DAC LDR X8, [X0 + 0xB8]
	0x033D9DB0 LDR X8, [X8 + 0x8]
	0x033D9DB4 CBZ X8, 0x33D9E0C
	0x033D9DB8 LDR W10, [X8 + 0x18]
	0x033D9DBC SUB W9, W21, 0x1D
	0x033D9DC0 CMP W9, W10
	0x033D9DC4 B.CS 0x33D9E10
	0x033D9DC8 ADD X8, X8, W9, 0x3, UXTW
	0x033D9DCC LDR X10, [X8 + 0x20]
	0x033D9DD0 UDIV X8, X22, X10
	0x033D9DD4 MSUB X9, X8, X10, X22
	0x033D9DD8 CMP X9, X10, LSR
	0x033D9DDC B.CS 0x33D9DEC
	0x033D9DE0 MOVZ W21, 0x1C0000
	0x033D9DE4 MOV X22, X8
	0x033D9DE8 B 0x33D9D60
	0x033D9DEC UBFM X10, X10, 0x1, 0x3F
	0x033D9DF0 CMP X9, X10
	0x033D9DF4 AND X11, X8, 0x1
	0x033D9DF8 CSET W9, HI
	0x033D9DFC ORR X9, X11, X9, 0x0
	0x033D9E00 ADD X22, X9, X8
	0x033D9E04 MOVZ W21, 0x1C0000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1005000
	006 Move X21, 0xD54000
	007 Move W8, [X20+854]
	008 Move X21, [X21+3560]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD54000
	015 Move X0, [X0+3560]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+854], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call DecCalc.VarR8FromDec, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 NotImplemented "Instruction INVALID not yet implemented."
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return V0

Method: System.Double VarR8FromDec(in System.Decimal value)

Disassembly:
	0x033D9790 LDP W12, W11, [X31 + 0x8]
	0x033D9794 AND W8, W24, 0x80000000
	0x033D9798 EOR W10, W8, 0x80000000
	0x033D979C STR V0, [X19]
	0x033D97A0 LDRB W9, [X20 + 0x2]
	0x033D97A4 CMP W12, W11
	0x033D97A8 LDR X28, [X31]
	0x033D97AC CSEL W8, W8, W10, EQ
	0x033D97B0 BFM W8, W9, 0x10, 0x7
	0x033D97B4 STR W8, [X19]
	0x033D97B8 B 0x33D9750
	0x033D97BC LDR X0, [X23]
	0x033D97C0 LDR W8, [X0 + 0xE0]
	0x033D97C4 CBNZ W8, 0x33D97D0
	0x033D97C8 BL 0x1C16DFC
	0x033D97CC LDR X0, [X23]
	0x033D97D0 LDR X8, [X0 + 0xB8]
	0x033D97D4 LDR X8, [X8]
	0x033D97D8 CBZ X8, 0x33D980C
	0x033D97DC LDR W9, [X8 + 0x18]
	0x033D97E0 CMP W28, W9
	0x033D97E4 B.CS 0x33D9810
	0x033D97E8 ADD X8, X8, X28, 0x2, LSL
	0x033D97EC LDR W8, [X8 + 0x20]
	0x033D97F0 MOV W27, W31
	0x033D97F4 MUL X26, X26, X8
	0x033D97F8 B 0x33D9454
	0x033D97FC SUB W20, W27, 0x1
	0x033D9800 CMP W20, 0x3
	0x033D9804 B.CS 0x33D96FC
	0x033D9808 B 0x33D9734
	0x033D980C BL 0x1C16F20
	0x033D9810 BL 0x1C16F28
	0x033D9814 ADRP X0, 0xD1A000
	0x033D9818 LDR X0, [X0 + 0x858]
	0x033D981C BL 0x1C16D08
	0x033D9820 BL 0x1C16F10
	0x033D9824 MOV X19, X0
	0x033D9828 ADRP X0, 0xD51000
	0x033D982C LDR X0, [X0 + 0xFE8]
	0x033D9830 BL 0x1C16D08
	0x033D9834 MOV X1, X0
	0x033D9838 MOV X0, X19
	0x033D983C MOV X2, X31
	0x033D9840 BL 0x338CB50
	0x033D9844 ADRP X0, 0xD53000
	0x033D9848 LDR X0, [X0 + 0xE90]
	0x033D984C BL 0x1C16D08
	0x033D9850 MOV X1, X0
	0x033D9854 MOV X0, X19
	0x033D9858 BL 0x1C16DEC
	0x033D985C BL 0x3EB1B20
	0x033D9860 SUB X31, X31, 0x50
	0x033D9864 STP X30, X21, [X31 + 0x30]
	0x033D9868 STP X20, X19, [X31 + 0x40]
	0x033D986C MRS X19, 0xC000
	0x033D9870 LDR X8, [X19 + 0x28]
	0x033D9874 ADRP X20, 0x1004000
	0x033D9878 ADRP X21, 0xD42000
	0x033D987C STR X8, [X31 + 0x28]
	0x033D9880 STP X0, X1, [X31 + 0x18]
	0x033D9884 STP X2, X3, [X31 + 0x8]
	0x033D9888 LDRB W8, [X20 + 0x335]
	0x033D988C LDR X21, [X21 + 0x5F0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x1005000
	007 Move X21, 0xD43000
	008 Move W8, [X20+855]
	009 Move X21, [X21+1520]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xD54000
	016 Move X0, [X0+3560]
	017 Call 0x1C17CF4
	018 Move X0, 0xD43000
	019 Move X0, [X0+1520]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+855], W8
	023 Move X0, [X21]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X20, 0x1005000
	029 Move X22, 0xD54000
	030 Move W8, [X20+784]
	031 Move X22, [X22+3560]
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {41}
	036 Move X0, 0xD43000
	037 Move X0, [X0+1520]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X20+784], W8
	041 Move X0, [X22]
	042 Move X21, [X19+8]
	043 Move W20, [X19+4]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {49}
	047 Call 0x1C17DFC
	048 Move X0, [X22]
	049 Move X8, [X0+184]
	050 Move X9, [X8+16]
	051 Compare X9, 0
	052 JumpIfEqual {77}
	053 Move W8, [X19]
	054 Move W11, [X9+24]
	055 Move X10, X8
	056 ShiftRight X10, 16
	057 And X10, X10, 0x7FFFFF
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Add X9, X9, X10
	060 Move X10, 0x43F00000
	061 Move V1, [X9+32]
	062 NotImplemented "Instruction UCVTF not yet implemented."
	063 Move D3, X10
	064 NotImplemented "Instruction UCVTF not yet implemented."
	065 Multiply D2, D2, D3
	066 Add D0, D2, D0
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X22, [X31+16]
	070 Move X21, [X31+24]
	071 NotImplemented "Instruction FDIV not yet implemented."
	072 NotImplemented "Instruction FNEG not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 NotImplemented "Instruction FCSEL not yet implemented."
	075 Move X30, [X31+48]
	076 Return V0
	077 Call 0x1C17F20
	078 Call 0x1C17F28

Method: System.Int32 GetHashCode(in System.Decimal d)

Disassembly:
	0x033D82B4 MOV X19, X1
	0x033D82B8 MOV X20, X0
	0x033D82BC TBNZ X8, 0x0, 0x33D82D4
	0x033D82C0 ADRP X0, 0xD43000
	0x033D82C4 LDR X0, [X0 + 0x5F0]
	0x033D82C8 BL 0x1C16CF4
	0x033D82CC MOVZ W8, 0x1
	0x033D82D0 STRB W8, [X21 + 0x326]
	0x033D82D4 LDR X0, [X22]
	0x033D82D8 LDR W8, [X0 + 0xE0]
	0x033D82DC CBNZ W8, 0x33D82E4
	0x033D82E0 BL 0x1C16DFC
	0x033D82E4 MOV X0, X20
	0x033D82E8 MOV X1, X19
	0x033D82EC BL 0x33D8410
	0x033D82F0 CMP W0, W0, SXTB
	0x033D82F4 B.NE 0x33D8308
	0x033D82F8 LDP X20, X19, [X31 + 0x20]
	0x033D82FC LDP X22, X21, [X31 + 0x10]
	0x033D8300 LDR X30, [X31], #0x30
	0x033D8304 RET
	0x033D8308 ADRP X0, 0xD1B000
	0x033D830C LDR X0, [X0 + 0x858]
	0x033D8310 BL 0x1C16D08
	0x033D8314 BL 0x1C16F10
	0x033D8318 MOV X19, X0
	0x033D831C ADRP X0, 0xD50000
	0x033D8320 LDR X0, [X0 + 0x1A0]
	0x033D8324 BL 0x1C16D08
	0x033D8328 MOV X1, X0
	0x033D832C MOV X0, X19
	0x033D8330 MOV X2, X31
	0x033D8334 BL 0x338CB50
	0x033D8338 ADRP X0, 0xD54000
	0x033D833C LDR X0, [X0 + 0xE60]
	0x033D8340 BL 0x1C16D08
	0x033D8344 MOV X1, X0
	0x033D8348 MOV X0, X19
	0x033D834C BL 0x1C16DEC
	0x033D8350 B 0x33D8354
	0x033D8354 MOV X19, X0
	0x033D8358 CMP W1, 0x1
	0x033D835C B.NE 0x33D8404
	0x033D8360 MOV X0, X19
	0x033D8364 BL 0x3EB1AD0
	0x033D8368 MOV X19, X0
	0x033D836C ADRP X0, 0xD1B000
	0x033D8370 LDR X0, [X0 + 0x858]
	0x033D8374 BL 0x1C16D08
	0x033D8378 LDR X8, [X19]
	0x033D837C LDR X1, [X8]
	0x033D8380 BL 0x1C17270
	0x033D8384 TBZ X0, 0x0, 0x33D83DC
	0x033D8388 LDR X19, [X19]
	0x033D838C BL 0x3EB1AE0
	0x033D8390 ADRP X0, 0xD1B000
	0x033D8394 LDR X0, [X0 + 0x858]
	0x033D8398 BL 0x1C16D08
	0x033D839C BL 0x1C16F10
	0x033D83A0 MOV X20, X0
	0x033D83A4 ADRP X0, 0xD50000
	0x033D83A8 LDR X0, [X0 + 0x1A0]
	0x033D83AC BL 0x1C16D08
	0x033D83B0 MOV X1, X0
	0x033D83B4 MOV X0, X20
	0x033D83B8 MOV X2, X19
	0x033D83BC MOV X3, X31
	0x033D83C0 BL 0x338CB74
	0x033D83C4 ADRP X0, 0xD54000
	0x033D83C8 LDR X0, [X0 + 0xE60]
	0x033D83CC BL 0x1C16D08
	0x033D83D0 MOV X1, X0
	0x033D83D4 MOV X0, X20
	0x033D83D8 BL 0x1C16DEC
	0x033D83DC MOVZ W0, 0x8
	0x033D83E0 BL 0x3EB1AF0
	0x033D83E4 LDR X8, [X19]
	0x033D83E8 STR X8, [X0]
	0x033D83EC ADRP X1, 0xADC000
	0x033D83F0 ADD X1, X1, 0xE58
	0x033D83F4 MOV X2, X31
	0x033D83F8 BL 0x3EB1B00
	0x033D83FC MOV X19, X0

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x1006000
	007 Move X21, 0xD44000
	008 Move W8, [X20+856]
	009 Move X21, [X21+1520]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xD55000
	016 Move X0, [X0+3560]
	017 Call 0x1C17CF4
	018 Move X0, 0xD44000
	019 Move X0, [X0+1520]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+856], W8
	023 Move X0, [X21]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move W8, [X19+8]
	029 Move W9, [X19+12]
	030 Move W10, [X19+4]
	031 Or W9, W9, W8
	032 Or W9, W9, W10
	033 Compare W9, 0
	034 JumpIfEqual {81}
	035 Move W20, [X19]
	036 And W31, W20, 0xFF0000
	037 Move X0, [X21]
	038 Move W9, [X0+224]
	039 Compare W9, 0
	040 JumpIfEqual {82}
	041 Move TEMP, X8
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {88}
	045 Move X0, [X21]
	046 Move W9, W20
	047 ShiftRight W9, 16
	048 And W9, W9, 0x7FFFFF
	049 Move [X31+12], W9
	050 Move W9, [X0+224]
	051 Compare W9, 0
	052 JumpIfNotEqual {55}
	053 Call 0x1C17DFC
	054 Move W8, [X19+8]
	055 Move [X31+8], W8
	056 Move X10, 0xD55000
	057 Move W8, [X19+12]
	058 Move W9, [X19+4]
	059 Move X10, [X10+3560]
	060 NotImplemented "Instruction BFM not yet implemented."
	061 Move X0, [X10]
	062 Move [X31], X8
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Add X0, X31, 8
	068 Add X1, X31, 0
	069 Add X2, X31, 12
	070 Move X3, X31
	071 Call 0x33E818C
	072 Move W11, [X31+8]
	073 Move W8, [X31+12]
	074 Move W10, [X31]
	075 Move W9, [X31+4]
	076 And W12, W20, 0xFF00FFFF
	077 Or W8, W12, W8
	078 Xor W8, W8, W10
	079 Xor W8, W8, W11
	080 Xor W0, W8, W9
	081 Move W0, W31
	082 Call 0x1C17DFC
	083 Move W8, [X19+8]
	084 Move TEMP, X8
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfNotEqual {45}
	088 Move X0, [X21]
	089 Move W9, [X0+224]
	090 Compare W9, 0
	091 JumpIfNotEqual {94}
	092 Call 0x1C17DFC
	093 Move W8, [X19+8]
	094 Move W9, [X19+4]
	095 Move W10, [X19+12]
	096 Xor W9, W9, W20
	097 Xor W9, W9, W10
	098 Xor W0, W9, W8
	099 Move X20, [X31+32]
	100 Move X19, [X31+40]
	101 Move X30, [X31+16]
	102 Move X21, [X31+24]
	103 Add X31, X31, 48
	104 Return X0

Method: System.Void VarDecDiv(ref System.Decimal/DecCalc d1, ref System.Decimal/DecCalc d2)

Disassembly:
	0x033DAEC8 LDR X0, [X0 + 0x8]
	0x033DAECC RET
	0x033DAED0 STR X1, [X0 + 0x8]
	0x033DAED4 RET
	0x033DAED8 FMOV W8, S0
	0x033DAEDC UBFM W0, W8, 0x17, 0x1E
	0x033DAEE0 RET
	0x033DAEE4 FMOV X8, D0
	0x033DAEE8 UBFM X0, X8, 0x34, 0x3E
	0x033DAEEC RET
	0x033DAEF0 UMADDL X0, X1, X0, X31
	0x033DAEF4 RET
	0x033DAEF8 STP X30, X25, [X31 - 0x40]!
	0x033DAEFC STP X24, X23, [X31 + 0x10]
	0x033DAF00 STP X22, X21, [X31 + 0x20]
	0x033DAF04 STP X20, X19, [X31 + 0x30]
	0x033DAF08 ADRP X23, 0x1003000
	0x033DAF0C ADRP X22, 0xD52000
	0x033DAF10 LDRB W8, [X23 + 0x347]
	0x033DAF14 LDR X22, [X22 + 0xDE8]
	0x033DAF18 MOV X19, X2
	0x033DAF1C MOV X21, X1
	0x033DAF20 MOV X20, X0
	0x033DAF24 TBNZ X8, 0x0, 0x33DAF3C
	0x033DAF28 ADRP X0, 0xD52000
	0x033DAF2C LDR X0, [X0 + 0xDE8]
	0x033DAF30 BL 0x1C16CF4
	0x033DAF34 MOVZ W8, 0x1
	0x033DAF38 STRB W8, [X23 + 0x347]
	0x033DAF3C LDR X0, [X22]
	0x033DAF40 LDR W8, [X0 + 0xE0]
	0x033DAF44 CBNZ W8, 0x33DAF54
	0x033DAF48 BL 0x1C16DFC
	0x033DAF4C LDR X0, [X22]
	0x033DAF50 LDR W8, [X0 + 0xE0]
	0x033DAF54 AND X9, X20, 0x0
	0x033DAF58 UBFM X11, X21, 0x20, 0x3F
	0x033DAF5C UMADDL X10, X21, X20, X31
	0x033DAF60 UBFM X20, X20, 0x20, 0x3F
	0x033DAF64 MUL X9, X11, X9
	0x033DAF68 MUL X11, X11, X20
	0x033DAF6C ADDS X25, X10, X9, 0x20, LSL
	0x033DAF70 AND X23, X21, 0x0
	0x033DAF74 ADD X21, X11, X9, 0x20, LSR
	0x033DAF78 CSET W24, CS
	0x033DAF7C CBNZ W8, 0x33DAF84
	0x033DAF80 BL 0x1C16DFC
	0x033DAF84 MUL X8, X23, X20
	0x033DAF88 ADDS X20, X25, X8, 0x20, LSL
	0x033DAF8C ADD X8, X21, X8, 0x20, LSR
	0x033DAF90 ADD X8, X8, X24
	0x033DAF94 CINC X21, X8, CS
	0x033DAF98 UBFM X8, X21, 0x20, 0x3F
	0x033DAF9C CBNZ X8, 0x33DAFCC
	0x033DAFA0 LDR X0, [X22]
	0x033DAFA4 LDR W8, [X0 + 0xE0]
	0x033DAFA8 CBNZ W8, 0x33DAFB0
	0x033DAFAC BL 0x1C16DFC
	0x033DAFB0 STR X20, [X19 + 0x8]
	0x033DAFB4 STR W21, [X19 + 0x4]
	0x033DAFB8 LDP X20, X19, [X31 + 0x30]
	0x033DAFBC LDP X22, X21, [X31 + 0x20]
	0x033DAFC0 LDP X24, X23, [X31 + 0x10]
	0x033DAFC4 LDP X30, X25, [X31], #0x40
	0x033DAFC8 RET
	0x033DAFCC ADRP X0, 0xD19000
	0x033DAFD0 LDR X0, [X0 + 0x858]
	0x033DAFD4 BL 0x1C16D08
	0x033DAFD8 BL 0x1C16F10
	0x033DAFDC MOV X19, X0
	0x033DAFE0 ADRP X0, 0xD50000
	0x033DAFE4 LDR X0, [X0 + 0xFE8]
	0x033DAFE8 BL 0x1C16D08
	0x033DAFEC MOV X1, X0
	0x033DAFF0 MOV X0, X19
	0x033DAFF4 MOV X2, X31
	0x033DAFF8 BL 0x338CB50
	0x033DAFFC ADRP X0, 0xD52000
	0x033DB000 LDR X0, [X0 + 0xEB8]
	0x033DB004 BL 0x1C16D08
	0x033DB008 MOV X1, X0
	0x033DB00C MOV X0, X19
	0x033DB010 BL 0x1C16DEC
	0x033DB014 LDR W8, [X0 + 0x8]
	0x033DB018 CBZ W8, 0x33DB04C
	0x033DB01C LDUR X10, [X0 + 0x4]
	0x033DB020 LDR W8, [X0]
	0x033DB024 MOV W9, W1
	0x033DB028 UDIV X11, X10, X9
	0x033DB02C MSUB W12, W11, W1, W10
	0x033DB030 MOV X10, X8
	0x033DB034 BFM X10, X12, 0x20, 0x1F
	0x033DB038 STUR X11, [X0 + 0x4]
	0x033DB03C CBZ X10, 0x33DB068
	0x033DB040 UDIV X9, X10, X9
	0x033DB044 STR W9, [X0]
	0x033DB048 B 0x33DB060
	0x033DB04C LDR X8, [X0]
	0x033DB050 CBZ X8, 0x33DB068
	0x033DB054 MOV W9, W1
	0x033DB058 UDIV X9, X8, X9
	0x033DB05C STR X9, [X0]
	0x033DB060 MSUB W0, W9, W1, W8
	0x033DB064 RET
	0x033DB068 MOV W0, W31
	0x033DB06C RET
	0x033DB070 LDUR X0, [X0 + 0x4]
	0x033DB074 RET
	0x033DB078 STUR X1, [X0 + 0x4]
	0x033DB07C RET
	0x033DB080 LDR X0, [X0]
	0x033DB084 RET
	0x033DB088 STR X1, [X0]
	0x033DB08C RET
	0x033DB090 LDR X10, [X0]
	0x033DB094 LDR W8, [X1]
	0x033DB098 MOV W11, W2
	0x033DB09C UDIV X9, X10, X11
	0x033DB0A0 MSUB W10, W9, W2, W10
	0x033DB0A4 MOV X12, X8
	0x033DB0A8 BFM X12, X10, 0x20, 0x1F
	0x033DB0AC UDIV X10, X12, X11
	0x033DB0B0 MUL W11, W10, W2
	0x033DB0B4 CMP W8, W11
	0x033DB0B8 B.NE 0x33DB0C4
	0x033DB0BC STR X9, [X0]
	0x033DB0C0 STR W10, [X1]
	0x033DB0C4 CMP W8, W11
	0x033DB0C8 CSET W0, EQ
	0x033DB0CC RET
	0x033DB0D0 STR X30, [X31 - 0x40]!
	0x033DB0D4 STP X24, X23, [X31 + 0x10]
	0x033DB0D8 STP X22, X21, [X31 + 0x20]
	0x033DB0DC STP X20, X19, [X31 + 0x30]
	0x033DB0E0 ADRP X22, 0x1002000
	0x033DB0E4 LDRB W8, [X22 + 0x348]
	0x033DB0E8 MOV X19, X2
	0x033DB0EC MOV X20, X1
	0x033DB0F0 MOV X21, X0
	0x033DB0F4 TBNZ X8, 0x0, 0x33DB10C
	0x033DB0F8 ADRP X0, 0xD51000
	0x033DB0FC LDR X0, [X0 + 0xDE8]
	0x033DB100 BL 0x1C16CF4
	0x033DB104 MOVZ W8, 0x1
	0x033DB108 STRB W8, [X22 + 0x348]
	0x033DB10C LDR W8, [X21]
	0x033DB110 ANDS W31, W8, 0xFF
	0x033DB114 B.EQ 0x33DB2C4
	0x033DB118 ANDS W31, W8, 0xF
	0x033DB11C B.NE 0x33DB1A4
	0x033DB120 LDR W9, [X19]
	0x033DB124 CMP W9, 0x4
	0x033DB128 B.LT 0x33DB1A4
	0x033DB12C ADRP X9, 0xD51000
	0x033DB130 LDR X9, [X9 + 0xDE8]
	0x033DB134 LDR X0, [X9]
	0x033DB138 LDR W9, [X0 + 0xE0]
	0x033DB13C CBNZ W9, 0x33DB148
	0x033DB140 BL 0x1C16DFC
	0x033DB144 LDR W8, [X21]
	0x033DB148 LDR X10, [X20]
	0x033DB14C MOVZ X11, 0x594B
	0x033DB150 MOVK X11, 0x38860000
	0x033DB154 MOVK X11, 0xC5D6
	0x033DB158 MOVK X11, 0x346D0000
	0x00000000 INVALID
	0x033DB160 MOVN W12, 0x270F
	0x033DB164 UBFM X9, X9, 0xB, 0x3F
	0x033DB168 MOV W13, W8
	0x033DB16C MADD W10, W9, W12, W10
	0x033DB170 BFM X13, X10, 0x20, 0x1F
	0x00000000 INVALID
	0x033DB178 UBFM X10, X10, 0xB, 0x3F
	0x033DB17C MOVZ W11, 0x2710
	0x033DB180 MUL W11, W10, W11
	0x033DB184 CMP W8, W11
	0x033DB188 B.NE 0x33DB1A4
	0x033DB18C STR X9, [X20]
	0x033DB190 STR W10, [X21]
	0x033DB194 LDR W8, [X19]
	0x033DB198 SUB W8, W8, 0x4
	0x033DB19C STR W8, [X19]
	0x033DB1A0 LDR W8, [X21]
	0x033DB1A4 ANDS W31, W8, 0x3
	0x033DB1A8 B.NE 0x33DB238
	0x033DB1AC LDR W9, [X19]
	0x033DB1B0 CMP W9, 0x2
	0x033DB1B4 B.LT 0x33DB238
	0x033DB1B8 ADRP X9, 0xD51000
	0x033DB1BC LDR X9, [X9 + 0xDE8]
	0x033DB1C0 LDR X0, [X9]
	0x033DB1C4 LDR W9, [X0 + 0xE0]
	0x033DB1C8 CBNZ W9, 0x33DB1D4
	0x033DB1CC BL 0x1C16DFC
	0x033DB1D0 LDR W8, [X21]
	0x033DB1D4 LDR X10, [X20]
	0x033DB1D8 MOVZ X11, 0xF5C3
	0x033DB1DC MOVK X11, 0x5C280000
	0x033DB1E0 MOVK X11, 0xC28F
	0x033DB1E4 MOVK X11, 0x28F50000
	0x033DB1E8 UBFM X9, X10, 0x2, 0x3F
	0x00000000 INVALID
	0x033DB1F0 MOVN W12, 0x63
	0x033DB1F4 UBFM X9, X9, 0x2, 0x3F
	0x033DB1F8 MOV W13, W8
	0x033DB1FC MADD W10, W9, W12, W10
	0x033DB200 BFM X13, X10, 0x20, 0x1F
	0x033DB204 UBFM X10, X13, 0x2, 0x3F
	0x00000000 INVALID
	0x033DB20C UBFM X10, X10, 0x2, 0x3F
	0x033DB210 MOVZ W11, 0x64
	0x033DB214 MUL W11, W10, W11
	0x033DB218 CMP W8, W11
	0x033DB21C B.NE 0x33DB238
	0x033DB220 STR X9, [X20]
	0x033DB224 STR W10, [X21]
	0x033DB228 LDR W8, [X19]
	0x033DB22C SUB W8, W8, 0x2
	0x033DB230 STR W8, [X19]
	0x033DB234 LDR W8, [X21]
	0x033DB238 TBNZ X8, 0x0, 0x33DB2B0
	0x033DB23C LDR W9, [X19]
	0x033DB240 CMP W9, 0x1
	0x033DB244 B.LT 0x33DB2B0
	0x033DB248 ADRP X9, 0xD51000
	0x033DB24C LDR X9, [X9 + 0xDE8]
	0x033DB250 LDR X0, [X9]
	0x033DB254 LDR W9, [X0 + 0xE0]
	0x033DB258 CBNZ W9, 0x33DB264
	0x033DB25C BL 0x1C16DFC
	0x033DB260 LDR W8, [X21]
	0x033DB264 LDR X10, [X20]
	0x033DB268 ORR X11, X31, 0xCCCCCCCCCCCCCCCC
	0x033DB26C MOVK X11, 0xCCCD
	0x033DB270 MOVN W12, 0x9
	0x00000000 INVALID
	0x033DB278 UBFM X9, X9, 0x3, 0x3F
	0x033DB27C MADD W10, W9, W12, W10
	0x033DB280 MOV W12, W8
	0x033DB284 BFM X12, X10, 0x20, 0x1F
	0x00000000 INVALID
	0x033DB28C UBFM X10, X10, 0x3, 0x3F
	0x033DB290 ADD W11, W10, W10, 0x2, LSL
	0x033DB294 CMP W8, W11, LSL
	0x033DB298 B.NE 0x33DB2B0
	0x033DB29C STR X9, [X20]
	0x033DB2A0 STR W10, [X21]
	0x033DB2A4 LDR W8, [X19]
	0x033DB2A8 SUB W8, W8, 0x1
	0x033DB2AC STR W8, [X19]
	0x033DB2B0 LDP X20, X19, [X31 + 0x30]
	0x033DB2B4 LDP X22, X21, [X31 + 0x20]
	0x033DB2B8 LDP X24, X23, [X31 + 0x10]
	0x033DB2BC LDR X30, [X31], #0x40
	0x033DB2C0 RET
	0x033DB2C4 ADRP X23, 0xD51000
	0x033DB2C8 LDR W9, [X19]
	0x033DB2CC LDR X23, [X23 + 0xDE8]
	0x033DB2D0 MOVZ W22, 0xE100
	0x033DB2D4 MOVZ W24, 0x1F00
	0x033DB2D8 MOVK W22, 0x5F50000
	0x033DB2DC MOVK W24, 0xFA0A0000
	0x033DB2E0 CMP W9, 0x8
	0x033DB2E4 B.LT 0x33DB118
	0x033DB2E8 LDR X0, [X23]
	0x033DB2EC LDR W9, [X0 + 0xE0]
	0x033DB2F0 CBNZ W9, 0x33DB2FC
	0x033DB2F4 BL 0x1C16DFC
	0x033DB2F8 LDR W8, [X21]
	0x033DB2FC LDR X10, [X20]
	0x033DB300 MOV W11, W8
	0x033DB304 UDIV X9, X10, X22
	0x033DB308 MADD W10, W9, W24, W10
	0x033DB30C BFM X11, X10, 0x20, 0x1F
	0x033DB310 UDIV X10, X11, X22
	0x033DB314 MUL W11, W10, W22
	0x033DB318 CMP W8, W11
	0x033DB31C B.NE 0x33DB118
	0x033DB320 STR X9, [X20]
	0x033DB324 STR W10, [X21]
	0x033DB328 LDR W8, [X19]
	0x033DB32C SUB W9, W8, 0x8
	0x033DB330 STR W9, [X19]
	0x033DB334 LDR W8, [X21]
	0x033DB338 ANDS W31, W8, 0xFF
	0x033DB33C B.EQ 0x33DB2E0
	0x033DB340 B 0x33DB118
	0x033DB344 STR X30, [X31 - 0x30]!
	0x033DB348 STP X22, X21, [X31 + 0x10]
	0x033DB34C STP X20, X19, [X31 + 0x20]
	0x033DB350 ADRP X21, 0x1002000
	0x033DB354 LDRB W8, [X21 + 0x349]
	0x033DB358 MOV X20, X1
	0x033DB35C MOV X19, X0
	0x033DB360 TBNZ X8, 0x0, 0x33DB378
	0x033DB364 ADRP X0, 0xD51000
	0x033DB368 LDR X0, [X0 + 0xDE8]
	0x033DB36C BL 0x1C16CF4
	0x033DB370 MOVZ W8, 0x1
	0x033DB374 STRB W8, [X21 + 0x349]
	0x033DB378 LDR W9, [X19 + 0x8]
	0x033DB37C CBZ W9, 0x33DB3E0
	0x033DB380 UBFM X8, X20, 0x20, 0x3F
	0x033DB384 CMP W9, W8
	0x033DB388 B.CS 0x33DB3F4
	0x033DB38C LDUR X9, [X19 + 0x4]
	0x033DB390 CMP X9, X8
	0x033DB394 B.CC 0x33DB3EC
	0x033DB398 ADRP X10, 0xD51000
	0x033DB39C LDR X10, [X10 + 0xDE8]
	0x033DB3A0 LDR W22, [X19]
	0x033DB3A4 UDIV X21, X9, X8
	0x033DB3A8 MSUB W8, W21, W8, W9
	0x033DB3AC LDR X0, [X10]
	0x033DB3B0 BFM X22, X8, 0x20, 0x1F
	0x033DB3B4 LDR W10, [X0 + 0xE0]
	0x033DB3B8 CBNZ W10, 0x33DB3C0
	0x033DB3BC BL 0x1C16DFC
	0x033DB3C0 UMADDL X9, X21, X20, X31
	0x033DB3C4 SUB X8, X22, X9
	0x033DB3C8 ADDS X31, X9, X8
	0x033DB3CC B.CC 0x33DB40C
	0x033DB3D0 ADDS X8, X8, X20
	0x033DB3D4 SUB W21, W21, 0x1
	0x033DB3D8 B.CC 0x33DB3D0
	0x033DB3DC B 0x33DB40C
	0x033DB3E0 LDR X8, [X19]
	0x033DB3E4 CMP X8, X20
	0x033DB3E8 B.CS 0x33DB414
	0x033DB3EC MOV W21, W31
	0x033DB3F0 B 0x33DB424
	0x033DB3F4 LDR X8, [X19]
	0x033DB3F8 MOV W21, W31
	0x033DB3FC SUB X8, X8, X20, 0x20, LSL
	0x033DB400 ADDS X8, X8, X20
	0x033DB404 SUB W21, W21, 0x1
	0x033DB408 B.CC 0x33DB400
	0x033DB40C STR X8, [X19]
	0x033DB410 B 0x33DB424
	0x033DB414 UDIV X21, X8, X20
	0x033DB418 AND X9, X21, 0x0
	0x033DB41C MSUB X8, X9, X20, X8
	0x033DB420 STR X8, [X19]
	0x033DB424 MOV W0, W21
	0x033DB428 LDP X20, X19, [X31 + 0x20]
	0x033DB42C LDP X22, X21, [X31 + 0x10]
	0x033DB430 LDR X30, [X31], #0x30
	0x033DB434 RET
	0x033DB438 STR X30, [X31 - 0x40]!
	0x033DB43C STP X24, X23, [X31 + 0x10]
	0x033DB440 STP X22, X21, [X31 + 0x20]
	0x033DB444 STP X20, X19, [X31 + 0x30]
	0x033DB448 ADRP X20, 0x1002000
	0x033DB44C LDRB W8, [X20 + 0x34A]
	0x033DB450 MOV X21, X1
	0x033DB454 MOV X19, X0
	0x033DB458 TBNZ X8, 0x0, 0x33DB470
	0x033DB45C ADRP X0, 0xD51000
	0x033DB460 LDR X0, [X0 + 0xDE8]
	0x033DB464 BL 0x1C16CF4
	0x033DB468 MOVZ W8, 0x1
	0x033DB46C STRB W8, [X20 + 0x34A]
	0x033DB470 LDR X8, [X19 + 0x8]
	0x033DB474 LDR W22, [X21 + 0x8]
	0x033DB478 CMP X8, X22
	0x033DB47C B.CS 0x33DB488
	0x033DB480 MOV W20, W31
	0x033DB484 B 0x33DB53C
	0x033DB488 ADRP X9, 0xD51000
	0x033DB48C LDR X9, [X9 + 0xDE8]
	0x033DB490 LDR W24, [X21]
	0x033DB494 UDIV X20, X8, X22
	0x033DB498 MSUB W23, W22, W20, W8
	0x033DB49C LDR X0, [X9]
	0x033DB4A0 LDR W9, [X0 + 0xE0]
	0x033DB4A4 CBNZ W9, 0x33DB4AC
	0x033DB4A8 BL 0x1C16DFC
	0x033DB4AC LDR W8, [X21 + 0x4]
	0x033DB4B0 AND X9, X20, 0x0
	0x033DB4B4 LDR X12, [X19]
	0x033DB4B8 MUL X11, X9, X24
	0x033DB4BC MUL X8, X9, X8
	0x033DB4C0 ADD X8, X8, X11, 0x20, LSR
	0x033DB4C4 BFM X11, X8, 0x20, 0x1F
	0x033DB4C8 UBFM X10, X8, 0x20, 0x3F
	0x033DB4CC SUB X9, X12, X11
	0x033DB4D0 ADDS X31, X11, X9
	0x033DB4D4 SUB W8, W23, W10
	0x033DB4D8 B.CC 0x33DB4F0
	0x033DB4DC SUB W8, W8, 0x1
	0x033DB4E0 ORN W10, W31, W10, 0x0
	0x033DB4E4 CMP W8, W10
	0x033DB4E8 B.CS 0x33DB4F8
	0x033DB4EC B 0x33DB534
	0x033DB4F0 ADDS W31, W10, W8
	0x033DB4F4 B.CC 0x33DB534
	0x033DB4F8 LDR X10, [X21]
	0x033DB4FC ADD X9, X12, X10
	0x033DB500 SUB X11, X9, X11
	0x033DB504 MOV X9, X11
	0x033DB508 ADD W11, W8, W22
	0x033DB50C CMP X9, X10
	0x033DB510 SUB W20, W20, 0x1
	0x033DB514 MOV W8, W11
	0x033DB518 B.CS 0x33DB528
	0x033DB51C CMP W11, W22
	0x033DB520 ADD W8, W11, 0x1
	0x033DB524 B.CC 0x33DB534
	0x033DB528 CMP W8, W22
	0x033DB52C ADD X11, X9, X10
	0x033DB530 B.CS 0x33DB504
	0x033DB534 STR X9, [X19]
	0x033DB538 STR W8, [X19 + 0x8]
	0x033DB53C MOV W0, W20
	0x033DB540 LDP X20, X19, [X31 + 0x30]
	0x033DB544 LDP X22, X21, [X31 + 0x20]
	0x033DB548 LDP X24, X23, [X31 + 0x10]
	0x033DB54C LDR X30, [X31], #0x40
	0x033DB550 RET
	0x033DB554 LDR X0, [X0 + 0x8]
	0x033DB558 RET
	0x033DB55C LDR X0, [X0]
	0x033DB560 RET
	0x033DB564 STR X1, [X0]
	0x033DB568 RET
	0x033DB56C STR X30, [X31 - 0x30]!
	0x033DB570 STP X22, X21, [X31 + 0x10]
	0x033DB574 STP X20, X19, [X31 + 0x20]
	0x033DB578 ADRP X22, 0x1002000
	0x033DB57C ADRP X21, 0xD51000
	0x033DB580 LDRB W8, [X22 + 0x34B]
	0x033DB584 LDR X21, [X21 + 0xDE8]
	0x033DB588 MOV W20, W1
	0x033DB58C MOV X19, X0
	0x033DB590 TBNZ X8, 0x0, 0x33DB5A8
	0x033DB594 ADRP X0, 0xD51000
	0x033DB598 LDR X0, [X0 + 0xDE8]
	0x033DB59C BL 0x1C16CF4
	0x033DB5A0 MOVZ W8, 0x1
	0x033DB5A4 STRB W8, [X22 + 0x34B]
	0x033DB5A8 LDR X0, [X21]
	0x033DB5AC LDR W21, [X19]
	0x033DB5B0 LDR W8, [X0 + 0xE0]
	0x033DB5B4 CBNZ W8, 0x33DB5BC
	0x033DB5B8 BL 0x1C16DFC
	0x033DB5BC LDP W8, W9, [X19 + 0x4]
	0x033DB5C0 MOV W10, W20
	0x033DB5C4 MUL X11, X21, X10
	0x033DB5C8 LDP X22, X21, [X31 + 0x10]
	0x033DB5CC MUL X8, X8, X10
	0x033DB5D0 MUL X9, X9, X10
	0x033DB5D4 ADD X8, X8, X11, 0x20, LSR
	0x033DB5D8 STP W11, W8, [X19]
	0x033DB5DC ADD X8, X9, X8, 0x20, LSR
	0x033DB5E0 STR W8, [X19 + 0x8]
	0x033DB5E4 LDP X20, X19, [X31 + 0x20]
	0x033DB5E8 UBFM X0, X8, 0x20, 0x3F
	0x033DB5EC LDR X30, [X31], #0x30
	0x033DB5F0 RET
	0x033DB5F4 STR X30, [X31 - 0x30]!
	0x033DB5F8 STP X22, X21, [X31 + 0x10]
	0x033DB5FC STP X20, X19, [X31 + 0x20]
	0x033DB600 ADRP X22, 0x1002000
	0x033DB604 ADRP X21, 0xD51000
	0x033DB608 LDRB W8, [X22 + 0x34C]
	0x033DB60C LDR X21, [X21 + 0xDE8]
	0x033DB610 MOV W20, W1
	0x033DB614 MOV X19, X0
	0x033DB618 TBNZ X8, 0x0, 0x33DB630
	0x033DB61C ADRP X0, 0xD51000
	0x033DB620 LDR X0, [X0 + 0xDE8]
	0x033DB624 BL 0x1C16CF4
	0x033DB628 MOVZ W8, 0x1
	0x033DB62C STRB W8, [X22 + 0x34C]
	0x033DB630 LDR X0, [X21]
	0x033DB634 LDR W21, [X19]
	0x033DB638 LDR W8, [X0 + 0xE0]
	0x033DB63C CBNZ W8, 0x33DB644
	0x033DB640 BL 0x1C16DFC
	0x033DB644 LDR W8, [X19 + 0x4]
	0x033DB648 MOV W9, W20
	0x033DB64C MUL X10, X21, X9
	0x033DB650 STR W10, [X19]
	0x033DB654 MUL X8, X8, X9
	0x033DB658 ADD X8, X8, X10, 0x20, LSR
	0x033DB65C STUR X8, [X19 + 0x4]
	0x033DB660 LDP X20, X19, [X31 + 0x20]
	0x033DB664 LDP X22, X21, [X31 + 0x10]
	0x033DB668 LDR X30, [X31], #0x30
	0x033DB66C RET
	0x033DB670 SUB X31, X31, 0x70
	0x033DB674 STP X29, X30, [X31 + 0x10]
	0x033DB678 STP X28, X27, [X31 + 0x20]
	0x033DB67C STP X26, X25, [X31 + 0x30]
	0x033DB680 STP X24, X23, [X31 + 0x40]
	0x033DB684 STP X22, X21, [X31 + 0x50]
	0x033DB688 STP X20, X19, [X31 + 0x60]
	0x033DB68C ADRP X19, 0x1002000
	0x033DB690 LDRB W8, [X19 + 0x34D]
	0x033DB694 MOV W26, W2
	0x033DB698 MOV W21, W1
	0x033DB69C MOV X20, X0
	0x033DB6A0 TBNZ X8, 0x0, 0x33DB6B8
	0x033DB6A4 ADRP X0, 0xD51000
	0x033DB6A8 LDR X0, [X0 + 0xDE8]
	0x033DB6AC BL 0x1C16CF4
	0x033DB6B0 MOVZ W8, 0x1
	0x033DB6B4 STRB W8, [X19 + 0x34D]
	0x033DB6B8 ADRP X15, 0xD51000
	0x033DB6BC LDR X15, [X15 + 0xDE8]
	0x033DB6C0 CMP W21, 0x3
	0x033DB6C4 B.CC 0x33DB76C
	0x033DB6C8 LDR X0, [X15]
	0x033DB6CC LDR W22, [X20, W21, UXTW]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+80], X29
	003 Move [X31+88], X30
	004 Move [X31+96], X28
	005 Move [X31+104], X27
	006 Move [X31+112], X26
	007 Move [X31+120], X25
	008 Move [X31+128], X24
	009 Move [X31+136], X23
	010 Move [X31+144], X22
	011 Move [X31+152], X21
	012 Move [X31+160], X20
	013 Move [X31+168], X19
	014 NotImplemented "Instruction MRS not yet implemented."
	015 Move X8, [X24+40]
	016 Move X21, 0x1004000
	017 Move X25, 0xD53000
	018 Move X20, X1
	019 Move [X31+72], X8
	020 Move W8, [X21+857]
	021 Move X25, [X25+3560]
	022 Move X19, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {35}
	027 Move X0, 0xD53000
	028 Move X0, [X0+3560]
	029 Call 0x1C17CF4
	030 Move X0, 0xD1A000
	031 Move X0, [X0+1448]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X21+857], W8
	035 Move [X31+40], X31
	036 Move [X31+48], X31
	037 Move [X31+56], X31
	038 Move [X31+64], X31
	039 Move [X31+16], X31
	040 Move [X31+24], X31
	041 Move [X31+12], W31
	042 Move [X31], X31
	043 Move W8, [X19]
	044 Move W9, [X20]
	045 Move X0, [X25]
	046 Subtract W8, W8, W9
	047 NotImplemented "Instruction SBFM not yet implemented."
	048 Move [X31+36], W22
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {55}
	052 Call 0x1C17DFC
	053 Move X0, [X25]
	054 Move W8, [X0+224]
	055 Move W9, [X20+4]
	056 Move W10, [X20+12]
	057 Or W21, W10, W9
	058 Compare W8, 0
	059 JumpIfEqual {232}
	060 Compare W21, 0
	061 JumpIfEqual {235}
	062 Move W21, [X20+4]
	063 Compare W21, 0
	064 JumpIfNotEqual {71}
	065 Move X0, [X25]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move W21, [X20+12]
	071 Move X0, [X25]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Move W8, W21
	077 ShiftRight W8, 16
	078 And W8, W8, 0x7FFF
	079 NotImplemented "Instruction CMP not yet implemented."
	080 NotImplemented "Instruction CSEL not yet implemented."
	081 Move W9, 17
	082 Move W12, W8
	083 ShiftRight W12, 24
	084 And W12, W12, 0x7FFFFFFF
	085 NotImplemented "Instruction CSINC not yet implemented."
	086 Move W11, W8
	087 ShiftRight W11, 24
	088 And W11, W11, 0x7FFFFF
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Or W12, W9, 8
	091 NotImplemented "Instruction CSEL not yet implemented."
	092 NotImplemented "Instruction CSEL not yet implemented."
	093 Move W12, W8
	094 ShiftRight W12, 28
	095 And W12, W12, 0x7FFFFFFF
	096 Move W11, W8
	097 ShiftRight W11, 28
	098 And W11, W11, 0x7FFFFFF
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Or W12, W9, 4
	101 NotImplemented "Instruction CSEL not yet implemented."
	102 Move X10, [X19+8]
	103 NotImplemented "Instruction CSEL not yet implemented."
	104 Move W12, W8
	105 ShiftRight W12, 30
	106 And W12, W12, 0x7FFFFFFF
	107 Move W11, W8
	108 ShiftRight W11, 30
	109 And W11, W11, 0x1FFFFFFF
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Or W12, W9, 2
	112 NotImplemented "Instruction CSEL not yet implemented."
	113 NotImplemented "Instruction CSEL not yet implemented."
	114 Add W11, W9, W8
	115 NotImplemented "Instruction LSLV not yet implemented."
	116 Move W8, [X19+12]
	117 Move W10, [X19+4]
	118 Move W9, 32
	119 Subtract W9, W9, W11
	120 NotImplemented "Instruction BFM not yet implemented."
	121 NotImplemented "Instruction LSRV not yet implemented."
	122 Move [X31+56], X12
	123 Move [X31+64], X8
	124 Move X10, [X20+8]
	125 Move W8, [X20+4]
	126 NotImplemented "Instruction LSLV not yet implemented."
	127 Compare W8, 0
	128 JumpIfEqual {260}
	129 Move X0, [X25]
	130 Move [X31+16], X21
	131 And W22, W9, 63
	132 Move W10, [X0+224]
	133 Compare W10, 0
	134 JumpIfNotEqual {137}
	135 Call 0x1C17DFC
	136 Move W8, [X20+4]
	137 Move W9, [X20+12]
	138 Add X0, X31, 56
	139 Add X1, X31, 16
	140 NotImplemented "Instruction BFM not yet implemented."
	141 NotImplemented "Instruction LSRV not yet implemented."
	142 Move [X31+24], W26
	143 Call DecCalc.Div128By96, X0, X1
	144 Move W8, W0
	145 Move [X31+40], X8
	146 Move X28, 0xD19000
	147 Move X28, [X28+1448]
	148 Move W27, W31
	149 Move X29, [X31+56]
	150 Move W23, [X31+64]
	151 Move W22, [X31+36]
	152 Or X8, X29, X23
	153 Compare X8, 0
	154 JumpIfEqual {168}
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Move X0, [X25]
	157 Move W8, [X0+224]
	158 Compare W8, 0
	159 JumpIfNotEqual {161}
	160 Call 0x1C17DFC
	161 Add X0, X31, 40
	162 Move W1, W22
	163 Call DecCalc.SearchScale, X0, X1
	164 Compare W0, 0
	165 JumpIfEqual {366}
	166 Move W22, W0
	167 Move W27, 1
	168 Move TEMP, X22
	169 And TEMP, TEMP, -2147483648
	170 Compare TEMP, -2147483648
	171 JumpIfNotEqual {505}
	172 Move X0, [X28]
	173 Move W8, [X0+224]
	174 Compare W8, 0
	175 JumpIfNotEqual {177}
	176 Call 0x1C17DFC
	177 Subtract W1, W31, W22
	178 Move W0, 9
	179 Move X2, X31
	180 Call Math.Min, X0, X1
	181 Move W22, W0
	182 Move X0, [X25]
	183 Move W8, [X0+224]
	184 Compare W8, 0
	185 JumpIfNotEqual {188}
	186 Call 0x1C17DFC
	187 Move X0, [X25]
	188 Move X8, [X0+184]
	189 Move X8, [X8]
	190 Compare X8, 0
	191 JumpIfEqual {568}
	192 Move W9, [X8+24]
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Add X8, X8, W22
	195 Move W9, [X31+36]
	196 Move W23, [X8+32]
	197 Add X0, X31, 40
	198 Add W8, W9, W22
	199 Move W1, W23
	200 Move [X31+36], W8
	201 Call DecCalc.IncreaseScale, X0, X1
	202 Compare W0, 0
	203 JumpIfNotEqual {570}
	204 Move X0, [X25]
	205 Move W8, [X0+224]
	206 Compare W8, 0
	207 JumpIfNotEqual {209}
	208 Call 0x1C17DFC
	209 Add X0, X31, 56
	210 Move W1, W23
	211 Call DecCalc.IncreaseScale, X0, X1
	212 Move [X31+68], W0
	213 Add X0, X31, 56
	214 Add X1, X31, 16
	215 Call DecCalc.Div128By96, X0, X1
	216 Move X8, [X31+40]
	217 Add X8, X8, W0
	218 Move [X31+40], X8
	219 Move W8, [X31+48]
	220 Add W8, W8, 1
	221 Move [X31+48], W8
	222 Move X0, [X25]
	223 Move W21, [X31+36]
	224 Move X22, [X31+56]
	225 Move X23, [X31+64]
	226 Move W8, [X0+224]
	227 Compare W8, 0
	228 JumpIfNotEqual {230}
	229 Call 0x1C17DFC
	230 Or X8, X23, X22
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Call 0x1C17DFC
	233 Compare W21, 0
	234 JumpIfNotEqual {62}
	235 Move W23, [X20+8]
	236 Compare W23, 0
	237 JumpIfEqual {588}
	238 Move X0, [X25]
	239 Move W8, [X0+224]
	240 Compare W8, 0
	241 JumpIfNotEqual {243}
	242 Call 0x1C17DFC
	243 Move X8, [X19+8]
	244 Move [X31+40], X8
	245 Move W9, [X19+4]
	246 Move [X31+48], W9
	247 Compare W9, 0
	248 JumpIfEqual {378}
	249 NotImplemented "Instruction LDUR not yet implemented."
	250 NotImplemented "Instruction UDIV not yet implemented."
	251 NotImplemented "Instruction MSUB not yet implemented."
	252 Move X9, X8
	253 NotImplemented "Instruction BFM not yet implemented."
	254 Move [X31+44], X10
	255 Compare X9, 0
	256 JumpIfEqual {383}
	257 NotImplemented "Instruction UDIV not yet implemented."
	258 Move [X31+40], W9
	259 NotImplemented "Instruction MSUB not yet implemented."
	260 Move X0, [X25]
	261 Add X9, X31, 56
	262 Or X22, X9, 7
	263 Move W8, [X0+224]
	264 Compare W8, 0
	265 JumpIfNotEqual {267}
	266 Call 0x1C17DFC
	267 Move X0, X22
	268 Move X1, X21
	269 Call DecCalc.Div96By64, X0, X1
	270 Move [X31+44], W0
	271 Add X0, X31, 56
	272 Move X1, X21
	273 Call DecCalc.Div96By64, X0, X1
	274 Move [X31+40], W0
	275 Move X27, 0xD19000
	276 Move X27, [X27+1448]
	277 Move W26, W31
	278 Move X23, [X31+56]
	279 Move W22, [X31+36]
	280 Compare X23, 0
	281 JumpIfEqual {295}
	282 NotImplemented "Instruction CMP not yet implemented."
	283 Move X0, [X25]
	284 Move W8, [X0+224]
	285 Compare W8, 0
	286 JumpIfNotEqual {288}
	287 Call 0x1C17DFC
	288 Add X0, X31, 40
	289 Move W1, W22
	290 Call DecCalc.SearchScale, X0, X1
	291 Compare W0, 0
	292 JumpIfEqual {462}
	293 Move W22, W0
	294 Move W26, 1
	295 Move TEMP, X22
	296 And TEMP, TEMP, -2147483648
	297 Compare TEMP, -2147483648
	298 JumpIfNotEqual {518}
	299 Move X0, [X27]
	300 Move W8, [X0+224]
	301 Compare W8, 0
	302 JumpIfNotEqual {304}
	303 Call 0x1C17DFC
	304 Subtract W1, W31, W22
	305 Move W0, 9
	306 Move X2, X31
	307 Call Math.Min, X0, X1
	308 Move W22, W0
	309 Move X0, [X25]
	310 Move W8, [X0+224]
	311 Compare W8, 0
	312 JumpIfNotEqual {315}
	313 Call 0x1C17DFC
	314 Move X0, [X25]
	315 Move X8, [X0+184]
	316 Move X8, [X8]
	317 Compare X8, 0
	318 JumpIfEqual {568}
	319 Move W9, [X8+24]
	320 NotImplemented "Instruction CMP not yet implemented."
	321 Add X8, X8, W22
	322 Move W9, [X31+36]
	323 Move W23, [X8+32]
	324 Add X0, X31, 40
	325 Add W8, W9, W22
	326 Move W1, W23
	327 Move [X31+36], W8
	328 Call DecCalc.IncreaseScale, X0, X1
	329 Compare W0, 0
	330 JumpIfNotEqual {570}
	331 Move X0, [X25]
	332 Move W8, [X0+224]
	333 Compare W8, 0
	334 JumpIfNotEqual {336}
	335 Call 0x1C17DFC
	336 Add X0, X31, 56
	337 Move W1, W23
	338 Call DecCalc.IncreaseScale64, X0, X1
	339 Add X0, X31, 56
	340 Move X1, X21
	341 Call DecCalc.Div96By64, X0, X1
	342 Move X8, [X31+40]
	343 Add X8, X8, W0
	344 Move [X31+40], X8
	345 Move W8, [X31+48]
	346 Add W8, W8, 1
	347 Move [X31+48], W8
	348 Move X0, [X25]
	349 Move W21, [X31+36]
	350 Move X22, [X31+56]
	351 Move W8, [X0+224]
	352 Compare W8, 0
	353 JumpIfNotEqual {355}
	354 Call 0x1C17DFC
	355 NotImplemented "Instruction CMP not yet implemented."
	356 NotImplemented "Instruction CSET not yet implemented."
	357 Add X0, X31, 40
	358 Move W1, W21
	359 Call DecCalc.OverflowUnscale, X0, X1, X2
	360 Move W22, W0
	361 Move [X31+36], W0
	362 Move TEMP, X26
	363 And TEMP, TEMP, 1
	364 Compare TEMP, 1
	365 JumpIfNotEqual {509}
	366 Move TEMP, X23
	367 And TEMP, TEMP, -2147483648
	368 Compare TEMP, -2147483648
	369 JumpIfEqual {475}
	370 Move W9, [X31+60]
	371 Move X8, X29
	372 ShiftRight X8, 63
	373 And X8, X8, 0x3FFFFFFF
	374 Move [X31+56], X8
	375 NotImplemented "Instruction EXTR not yet implemented."
	376 NotImplemented "Instruction CMP not yet implemented."
	377 Move [X31+64], W9
	378 Compare X8, 0
	379 JumpIfEqual {383}
	380 NotImplemented "Instruction UDIV not yet implemented."
	381 NotImplemented "Instruction MSUB not yet implemented."
	382 Move [X31+40], X9
	383 Move W26, W31
	384 Move X28, 0xD19000
	385 Move X28, [X28+1448]
	386 Move W27, W31
	387 Compare W26, 0
	388 JumpIfEqual {402}
	389 NotImplemented "Instruction CMP not yet implemented."
	390 Move X0, [X25]
	391 Move W8, [X0+224]
	392 Compare W8, 0
	393 JumpIfNotEqual {395}
	394 Call 0x1C17DFC
	395 Add X0, X31, 40
	396 Move W1, W22
	397 Call DecCalc.SearchScale, X0, X1
	398 Compare W0, 0
	399 JumpIfEqual {456}
	400 Move W21, W0
	401 Move W27, 1
	402 Move TEMP, X22
	403 And TEMP, TEMP, -2147483648
	404 Compare TEMP, -2147483648
	405 JumpIfNotEqual {505}
	406 Move X0, [X28]
	407 Move W8, [X0+224]
	408 Compare W8, 0
	409 JumpIfNotEqual {411}
	410 Call 0x1C17DFC
	411 Subtract W1, W31, W22
	412 Move W0, 9
	413 Move X2, X31
	414 Call Math.Min, X0, X1
	415 Move W21, W0
	416 Move X0, [X25]
	417 Move W8, [X0+224]
	418 Compare W8, 0
	419 JumpIfNotEqual {422}
	420 Call 0x1C17DFC
	421 Move X0, [X25]
	422 Move X8, [X0+184]
	423 Move X8, [X8]
	424 Compare X8, 0
	425 JumpIfEqual {568}
	426 Move W9, [X8+24]
	427 NotImplemented "Instruction CMP not yet implemented."
	428 Add X8, X8, W21
	429 Move W9, [X31+36]
	430 Move W22, [X8+32]
	431 Add X0, X31, 40
	432 Add W8, W9, W21
	433 Move W1, W22
	434 Move [X31+36], W8
	435 Call DecCalc.IncreaseScale, X0, X1
	436 Compare W0, 0
	437 JumpIfNotEqual {570}
	438 Move X0, [X25]
	439 Move W8, [X0+224]
	440 Compare W8, 0
	441 JumpIfNotEqual {443}
	442 Call 0x1C17DFC
	443 Move X9, [X31+40]
	444 Move W8, W26
	445 Multiply X8, X22, X8
	446 NotImplemented "Instruction UDIV not yet implemented."
	447 NotImplemented "Instruction MSUB not yet implemented."
	448 Add X8, X9, W10
	449 Move [X31+40], X8
	450 Move W8, [X31+48]
	451 Add W8, W8, 1
	452 Move [X31+48], W8
	453 Move W22, [X31+36]
	454 Compare W26, 0
	455 JumpIfNotEqual {389}
	456 Move W8, W26
	457 ShiftRight W8, 31
	458 And W8, W8, 0x3FFFFFFF
	459 NotImplemented "Instruction CMP not yet implemented."
	460 NotImplemented "Instruction CMP not yet implemented."
	461 NotImplemented "Instruction CMP not yet implemented."
	462 Move TEMP, X23
	463 And TEMP, TEMP, 1
	464 Compare TEMP, 1
	465 JumpIfEqual {475}
	466 Move X8, X23
	467 ShiftRight X8, 63
	468 And X8, X8, 0x3FFFFFFF
	469 NotImplemented "Instruction CMP not yet implemented."
	470 Move W8, [X31+40]
	471 Move TEMP, X8
	472 And TEMP, TEMP, 1
	473 Compare TEMP, 1
	474 JumpIfNotEqual {522}
	475 Move X8, [X31+40]
	476 Add X8, X8, 1
	477 Move [X31+40], X8
	478 Move W8, [X31+48]
	479 Add W8, W8, 1
	480 Move [X31+48], W8
	481 Move X0, [X25]
	482 Move W21, [X31+36]
	483 Move W8, [X0+224]
	484 Compare W8, 0
	485 JumpIfNotEqual {487}
	486 Call 0x1C17DFC
	487 Add X0, X31, 40
	488 Move W2, 1
	489 Move W1, W21
	490 Call DecCalc.OverflowUnscale, X0, X1, X2
	491 Move [X31+36], W0
	492 Move X0, [X25]
	493 Move W21, [X31+36]
	494 Move W8, [X0+224]
	495 Compare W8, 0
	496 JumpIfNotEqual {498}
	497 Call 0x1C17DFC
	498 NotImplemented "Instruction CMP not yet implemented."
	499 NotImplemented "Instruction CSET not yet implemented."
	500 Add X0, X31, 40
	501 Move W1, W21
	502 Call DecCalc.OverflowUnscale, X0, X1, X2
	503 Move W22, W0
	504 Move [X31+36], W0
	505 Move TEMP, X27
	506 And TEMP, TEMP, 1
	507 Compare TEMP, 1
	508 JumpIfEqual {522}
	509 Move X0, [X25]
	510 Move X21, [X31+40]
	511 Move W8, [X0+224]
	512 Compare W8, 0
	513 JumpIfNotEqual {515}
	514 Call 0x1C17DFC
	515 Move [X19+8], X21
	516 Move W8, [X31+48]
	517 Move [X19+4], W8
	518 Move TEMP, X26
	519 And TEMP, TEMP, 1
	520 Compare TEMP, 1
	521 JumpIfNotEqual {509}
	522 Move W8, [X31+40]
	523 NotImplemented "Instruction LDUR not yet implemented."
	524 Move X0, [X25]
	525 Move [X31+12], W8
	526 Move [X31], X9
	527 Move W8, [X0+224]
	528 Compare W8, 0
	529 JumpIfNotEqual {531}
	530 Call 0x1C17DFC
	531 Add X0, X31, 12
	532 Add X1, X31, 0
	533 Add X2, X31, 36
	534 Move X3, X31
	535 Call 0x33E818C
	536 Move W9, [X31+12]
	537 Move X8, [X31]
	538 Move [X19+8], W9
	539 Move [X19+12], W8
	540 Move X8, X8
	541 ShiftRight X8, 32
	542 And X8, X8, 0x7FFFFFFF
	543 Move [X19+4], W8
	544 Move W22, [X31+36]
	545 Move W8, [X19]
	546 Move W9, [X20]
	547 Xor W8, W9, W8
	548 And W8, W8, 0x80000000
	549 Or W8, W8, W22
	550 Move [X19], W8
	551 Move X8, [X24+40]
	552 Move X9, [X31+72]
	553 NotImplemented "Instruction CMP not yet implemented."
	554 Move X20, [X31+160]
	555 Move X19, [X31+168]
	556 Move X22, [X31+144]
	557 Move X21, [X31+152]
	558 Move X24, [X31+128]
	559 Move X23, [X31+136]
	560 Move X26, [X31+112]
	561 Move X25, [X31+120]
	562 Move X28, [X31+96]
	563 Move X27, [X31+104]
	564 Move X29, [X31+80]
	565 Move X30, [X31+88]
	566 Add X31, X31, 176
	567 Return 
	568 Call 0x1C17F20
	569 Call 0x1C17F28
	570 Move X0, 0xD19000
	571 Move X0, [X0+2136]
	572 Call 0x1C17D08
	573 Call 0x1C17F10
	574 Move X19, X0
	575 Move X0, 0xD50000
	576 Move X0, [X0+4072]
	577 Call 0x1C17D08
	578 Move X1, X0
	579 Move X0, X19
	580 Move X2, X31
	581 Call OverflowException..ctor, X0, X1
	582 Move X0, 0xD52000
	583 Move X0, [X0+3736]
	584 Call 0x1C17D08
	585 Move X1, X0
	586 Move X0, X19
	587 Call 0x1C17DEC
	588 Move X0, 0xD52000
	589 Move X0, [X0+3744]
	590 Call 0x1C17D08
	591 Call 0x1C17F10
	592 Move X1, X31
	593 Move X19, X0
	594 Call DivideByZeroException..ctor, X0
	595 Call 0x3EB2B20

Method: System.Void InternalRound(ref System.Decimal/DecCalc d, System.UInt32 scale, System.Decimal/DecCalc/RoundingMode mode)

Disassembly:
	0x033D8CE4 LDR X0, [X0 + 0x858]
	0x033D8CE8 BL 0x1C16D08
	0x033D8CEC BL 0x1C16F10
	0x033D8CF0 MOV X19, X0
	0x033D8CF4 ADRP X0, 0xD50000
	0x033D8CF8 LDR X0, [X0 + 0x200]
	0x033D8CFC BL 0x1C16D08
	0x033D8D00 MOV X1, X0
	0x033D8D04 MOV X0, X19
	0x033D8D08 MOV X2, X31
	0x033D8D0C BL 0x338CB50
	0x033D8D10 ADRP X0, 0xD54000
	0x033D8D14 LDR X0, [X0 + 0xE88]
	0x033D8D18 BL 0x1C16D08
	0x033D8D1C MOV X1, X0
	0x033D8D20 MOV X0, X19
	0x033D8D24 BL 0x1C16DEC
	0x033D8D28 BL 0x3EB1B20
	0x033D8D2C SUB X31, X31, 0x40
	0x033D8D30 STP X30, X21, [X31 + 0x20]
	0x033D8D34 STP X20, X19, [X31 + 0x30]
	0x033D8D38 MRS X19, 0xC000
	0x033D8D3C LDR X8, [X19 + 0x28]
	0x033D8D40 ADRP X20, 0x1005000
	0x033D8D44 ADRP X21, 0xD54000
	0x033D8D48 STR X8, [X31 + 0x18]
	0x033D8D4C STP X0, X1, [X31 + 0x8]
	0x033D8D50 LDRB W8, [X20 + 0x32E]
	0x033D8D54 LDR X21, [X21 + 0xDE8]
	0x033D8D58 TBNZ X8, 0x0, 0x33D8D70
	0x033D8D5C ADRP X0, 0xD54000
	0x033D8D60 LDR X0, [X0 + 0xDE8]
	0x033D8D64 BL 0x1C16CF4
	0x033D8D68 MOVZ W8, 0x1
	0x033D8D6C STRB W8, [X20 + 0x32E]
	0x033D8D70 LDR X0, [X21]
	0x033D8D74 LDR W8, [X0 + 0xE0]
	0x033D8D78 CBNZ W8, 0x33D8D80
	0x033D8D7C BL 0x1C16DFC
	0x033D8D80 ADD X0, X31, 0x8
	0x033D8D84 BL 0x33D8DAC
	0x033D8D88 LDR X8, [X19 + 0x28]
	0x033D8D8C LDR X9, [X31 + 0x18]
	0x033D8D90 CMP X8, X9
	0x033D8D94 B.NE 0x33D8DA8
	0x033D8D98 LDP X20, X19, [X31 + 0x30]
	0x033D8D9C LDP X30, X21, [X31 + 0x20]
	0x033D8DA0 ADD X31, X31, 0x40
	0x033D8DA4 RET
	0x033D8DA8 BL 0x3EB1B20
	0x033D8DAC STP X30, X21, [X31 - 0x20]!
	0x033D8DB0 STP X20, X19, [X31 + 0x10]
	0x033D8DB4 ADRP X20, 0x1005000
	0x033D8DB8 ADRP X21, 0xD54000
	0x033D8DBC LDRB W8, [X20 + 0x356]
	0x033D8DC0 LDR X21, [X21 + 0xDE8]
	0x033D8DC4 MOV X19, X0
	0x033D8DC8 TBNZ X8, 0x0, 0x33D8DE0
	0x033D8DCC ADRP X0, 0xD54000
	0x033D8DD0 LDR X0, [X0 + 0xDE8]
	0x033D8DD4 BL 0x1C16CF4
	0x033D8DD8 MOVZ W8, 0x1
	0x033D8DDC STRB W8, [X20 + 0x356]
	0x033D8DE0 LDR X0, [X21]
	0x033D8DE4 LDR W8, [X0 + 0xE0]
	0x033D8DE8 CBNZ W8, 0x33D8DF0
	0x033D8DEC BL 0x1C16DFC
	0x033D8DF0 MOV X0, X19
	0x033D8DF4 BL 0x33D8790
	0x033D8DF8 LDP X20, X19, [X31 + 0x10]
	0x00000000 INVALID
	0x033D8E00 LDP X30, X21, [X31], #0x20
	0x033D8E04 RET
	0x033D8E08 STP X30, X21, [X31 - 0x20]!
	0x033D8E0C STP X20, X19, [X31 + 0x10]
	0x033D8E10 ADRP X20, 0x1005000
	0x033D8E14 LDRB W8, [X20 + 0x32F]
	0x033D8E18 MOV X19, X0
	0x033D8E1C TBNZ X8, 0x0, 0x33D8E40
	0x033D8E20 ADRP X0, 0xD54000
	0x033D8E24 LDR X0, [X0 + 0xDE8]
	0x033D8E28 BL 0x1C16CF4
	0x033D8E2C ADRP X0, 0xD43000
	0x033D8E30 LDR X0, [X0 + 0x5F0]
	0x033D8E34 BL 0x1C16CF4
	0x033D8E38 MOVZ W8, 0x1
	0x033D8E3C STRB W8, [X20 + 0x32F]
	0x033D8E40 LDR W20, [X19]
	0x033D8E44 ANDS W31, W20, 0xFF0000
	0x033D8E48 B.EQ 0x33D8E94
	0x033D8E4C ADRP X8, 0xD43000
	0x033D8E50 LDR X8, [X8 + 0x5F0]
	0x033D8E54 ADRP X21, 0xD54000
	0x033D8E58 LDR X0, [X8]
	0x033D8E5C LDR W8, [X0 + 0xE0]
	0x033D8E60 LDR X21, [X21 + 0xDE8]
	0x033D8E64 CBNZ W8, 0x33D8E6C
	0x033D8E68 BL 0x1C16DFC
	0x033D8E6C LDR X0, [X21]
	0x033D8E70 LDR W8, [X0 + 0xE0]
	0x033D8E74 CBNZ W8, 0x33D8E7C
	0x033D8E78 BL 0x1C16DFC
	0x033D8E7C UBFM W1, W20, 0x10, 0x17
	0x033D8E80 MOV X0, X19
	0x033D8E84 LDP X20, X19, [X31 + 0x10]
	0x033D8E88 MOVZ W2, 0x2
	0x033D8E8C LDP X30, X21, [X31], #0x20
	0x033D8E90 B 0x33D7CE4
	0x033D8E94 LDP X20, X19, [X31 + 0x10]
	0x033D8E98 LDP X30, X21, [X31], #0x20
	0x033D8E9C RET
	0x033D8EA0 AND X1, X0, 0xFF
	0x033D8EA4 MOV X0, X31
	0x033D8EA8 RET
	0x033D8EAC SXTB W8, W0
	0x033D8EB0 AND X9, X0, 0xFF
	0x033D8EB4 CMP W8, 0x0
	0x033D8EB8 UBFM X0, X9, 0x28, 0x27
	0x033D8EBC CSNEG W1, W8, W8, PL
	0x033D8EC0 RET
	0x033D8EC4 SXTH W8, W0
	0x033D8EC8 AND X9, X0, 0xFFFF
	0x033D8ECC CMP W8, 0x0
	0x033D8ED0 UBFM X0, X9, 0x30, 0x2F
	0x033D8ED4 CSNEG W1, W8, W8, PL
	0x033D8ED8 RET
	0x033D8EDC AND X1, X0, 0xFFFF
	0x033D8EE0 MOV X0, X31
	0x033D8EE4 RET
	0x033D8EE8 AND W8, W0, 0x80000000
	0x033D8EEC CMP W0, 0x0
	0x033D8EF0 CSNEG W1, W0, W0, PL
	0x033D8EF4 MOV X0, X8
	0x033D8EF8 RET
	0x033D8EFC MOV W1, W0
	0x033D8F00 MOV X0, X31
	0x033D8F04 RET
	0x033D8F08 UBFM X8, X0, 0x20, 0x3F
	0x033D8F0C CMP X0, 0x0
	0x033D8F10 AND X8, X8, 0xFFFFFFFF
	0x033D8F14 CSNEG X1, X0, X0, PL
	0x033D8F18 MOV X0, X8
	0x033D8F1C RET
	0x033D8F20 MOV X1, X0
	0x033D8F24 MOV X0, X31
	0x033D8F28 RET
	0x033D8F2C SUB X31, X31, 0x30
	0x033D8F30 STP X30, X19, [X31 + 0x20]
	0x033D8F34 MRS X19, 0xC000
	0x033D8F38 LDR X8, [X19 + 0x28]
	0x033D8F3C ADD X0, X31, 0x8
	0x033D8F40 STR X8, [X31 + 0x18]
	0x033D8F44 STP X31, X31, [X31 + 0x8]
	0x033D8F48 BL 0x33D624C
	0x033D8F4C LDP X0, X1, [X31 + 0x8]
	0x033D8F50 LDR X8, [X19 + 0x28]
	0x033D8F54 LDR X9, [X31 + 0x18]
	0x033D8F58 CMP X8, X9
	0x033D8F5C B.NE 0x33D8F6C
	0x033D8F60 LDP X30, X19, [X31 + 0x20]
	0x033D8F64 ADD X31, X31, 0x30
	0x033D8F68 RET
	0x033D8F6C BL 0x3EB1B20
	0x033D8F70 SUB X31, X31, 0x30
	0x033D8F74 STP X30, X19, [X31 + 0x20]
	0x033D8F78 MRS X19, 0xC000
	0x033D8F7C LDR X8, [X19 + 0x28]
	0x033D8F80 ADD X0, X31, 0x8
	0x033D8F84 STR X8, [X31 + 0x18]
	0x033D8F88 STP X31, X31, [X31 + 0x8]
	0x033D8F8C BL 0x33D66F0
	0x033D8F90 LDP X0, X1, [X31 + 0x8]
	0x033D8F94 LDR X8, [X19 + 0x28]
	0x033D8F98 LDR X9, [X31 + 0x18]
	0x033D8F9C CMP X8, X9
	0x033D8FA0 B.NE 0x33D8FB0
	0x033D8FA4 LDP X30, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0x1006000
	010 Move W8, [X22+858]
	011 Move W20, W2
	012 Move W21, W1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xD55000
	019 Move X0, [X0+3560]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+858], W8
	023 Move W8, [X19]
	024 Move X22, 0xD55000
	025 Move X22, [X22+3560]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Subtract W8, W8, W21
	028 Move W23, W31
	029 Move [X19], W8
	030 Move W24, 0xCA00
	031 Move W25, 0x3600
	032 NotImplemented "Instruction MOVK not yet implemented."
	033 NotImplemented "Instruction MOVK not yet implemented."
	034 Move W8, [X19+4]
	035 Compare W8, 0
	036 JumpIfEqual {59}
	037 Move W9, [X19+12]
	038 NotImplemented "Instruction UDIV not yet implemented."
	039 NotImplemented "Instruction MADD not yet implemented."
	040 Move [X19+4], W10
	041 Or W11, W9, W8
	042 Compare W11, 0
	043 JumpIfEqual {49}
	044 Move X10, X9
	045 NotImplemented "Instruction BFM not yet implemented."
	046 NotImplemented "Instruction UDIV not yet implemented."
	047 Move [X19+12], W8
	048 NotImplemented "Instruction MADD not yet implemented."
	049 Move W9, [X19+8]
	050 Or W10, W9, W8
	051 Compare W10, 0
	052 JumpIfEqual {68}
	053 Move X10, X9
	054 NotImplemented "Instruction BFM not yet implemented."
	055 NotImplemented "Instruction UDIV not yet implemented."
	056 NotImplemented "Instruction MADD not yet implemented."
	057 Move W9, W10
	058 Move [X19+8], W10
	059 Move X0, [X22]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X8, [X19+8]
	065 NotImplemented "Instruction UDIV not yet implemented."
	066 Move [X19+8], X9
	067 NotImplemented "Instruction MADD not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Subtract W21, W21, 9
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Or W23, W8, W23
	072 Move X0, [X22]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {78}
	076 Call 0x1C17DFC
	077 Move X0, [X22]
	078 Move X8, [X0+184]
	079 Move X8, [X8]
	080 Compare X8, 0
	081 JumpIfEqual {192}
	082 Move W9, [X8+24]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Add X9, X8, W21
	085 Move W8, [X19+4]
	086 Move W21, [X9+32]
	087 Compare W8, 0
	088 JumpIfEqual {111}
	089 Move W9, [X19+12]
	090 NotImplemented "Instruction UDIV not yet implemented."
	091 NotImplemented "Instruction MSUB not yet implemented."
	092 Move [X19+4], W10
	093 Or W11, W9, W8
	094 Compare W11, 0
	095 JumpIfEqual {101}
	096 Move X10, X9
	097 NotImplemented "Instruction BFM not yet implemented."
	098 NotImplemented "Instruction UDIV not yet implemented."
	099 Move [X19+12], W8
	100 NotImplemented "Instruction MSUB not yet implemented."
	101 Move W9, [X19+8]
	102 Or W10, W9, W8
	103 Compare W10, 0
	104 Invalid "Jump target not found in method."
	105 Move X10, X9
	106 NotImplemented "Instruction BFM not yet implemented."
	107 NotImplemented "Instruction UDIV not yet implemented."
	108 NotImplemented "Instruction MSUB not yet implemented."
	109 Move W9, W10
	110 Move [X19+8], W10
	111 Move W8, [X0+224]
	112 Compare W8, 0
	113 JumpIfNotEqual {115}
	114 Call 0x1C17DFC
	115 Move X24, [X19+8]
	116 Compare X24, 0
	117 JumpIfEqual {128}
	118 Move X0, [X22]
	119 NotImplemented "Instruction UDIV not yet implemented."
	120 Move W8, [X0+224]
	121 Compare W8, 0
	122 JumpIfNotEqual {124}
	123 Call 0x1C17DFC
	124 Move [X19+8], X25
	125 NotImplemented "Instruction MSUB not yet implemented."
	126 Move W9, W25
	127 Move W21, W24
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move W9, W31
	130 Move W8, W31
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X11, -42209280
	133 Move W10, W20
	134 Add X11, X11, 2602
	135 NotImplemented "Instruction ADR not yet implemented."
	136 Move W13, [X11]
	137 Add X12, X12, X13
	138 CallNoReturn X12
	139 And W9, W9, 1
	140 Or W9, W9, W23
	141 NotImplemented "Instruction CMP not yet implemented."
	142 NotImplemented "Instruction CSET not yet implemented."
	143 NotImplemented "Instruction BFM not yet implemented."
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Or W8, W8, W23
	146 Compare W8, 0
	147 JumpIfEqual {183}
	148 Move X0, [X22]
	149 Move W8, [X0+224]
	150 Compare W8, 0
	151 JumpIfNotEqual {153}
	152 Call 0x1C17DFC
	153 Move W8, [X19]
	154 Move TEMP, X8
	155 And TEMP, TEMP, -2147483648
	156 Compare TEMP, -2147483648
	157 JumpIfNotEqual {172}
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Or W8, W8, W23
	160 Compare W8, 0
	161 JumpIfEqual {183}
	162 Move X0, [X22]
	163 Move W8, [X0+224]
	164 Compare W8, 0
	165 JumpIfNotEqual {167}
	166 Call 0x1C17DFC
	167 Move W8, [X19]
	168 Move TEMP, X8
	169 And TEMP, TEMP, -2147483648
	170 Compare TEMP, -2147483648
	171 JumpIfNotEqual {183}
	172 Move X0, [X22]
	173 Move W8, [X0+224]
	174 Compare W8, 0
	175 JumpIfNotEqual {177}
	176 Call 0x1C17DFC
	177 Move X8, [X19+8]
	178 Add X8, X8, 1
	179 Move [X19+8], X8
	180 Move W8, [X19+4]
	181 Add W8, W8, 1
	182 Move [X19+4], W8
	183 Move X20, [X31+48]
	184 Move X19, [X31+56]
	185 Move X22, [X31+32]
	186 Move X21, [X31+40]
	187 Move X24, [X31+16]
	188 Move X23, [X31+24]
	189 Move X30, [X31+64]
	190 Move X25, [X31+72]
	191 Return 
	192 Call 0x1C17F20
	193 Call 0x1C17F28

Method: System.UInt32 DecDivMod1E9(ref System.Decimal/DecCalc value)

Disassembly:
	0x033D718C ADD X1, X31, 0x0
	0x033D7190 MOV X0, X19
	0x033D7194 BL 0x33D6F50
	0x033D7198 CMP W0, 0x0
	0x033D719C CSET W0, EQ
	0x033D71A0 LDR X8, [X21 + 0x28]
	0x033D71A4 LDR X9, [X31 + 0x18]
	0x033D71A8 CMP X8, X9
	0x033D71AC B.NE 0x33D71C4
	0x033D71B0 LDP X20, X19, [X31 + 0x40]
	0x033D71B4 LDP X22, X21, [X31 + 0x30]
	0x033D71B8 LDR X30, [X31 + 0x20]
	0x033D71BC ADD X31, X31, 0x50
	0x033D71C0 RET
	0x033D71C4 BL 0x3EB1B20
	0x033D71C8 SUB X31, X31, 0x50
	0x033D71CC STR X30, [X31 + 0x20]
	0x033D71D0 STP X22, X21, [X31 + 0x30]
	0x033D71D4 STP X20, X19, [X31 + 0x40]
	0x033D71D8 MRS X20, 0xC000
	0x033D71DC LDR X8, [X20 + 0x28]
	0x033D71E0 ADRP X21, 0x1006000
	0x033D71E4 ADRP X22, 0xD55000
	0x033D71E8 MOV X19, X0
	0x033D71EC STR X8, [X31 + 0x18]

ISIL:
	001 Move W11, [X0+8]
	002 Move W8, [X0+12]
	003 Move W9, [X0+4]
	004 Move X10, 0x5A53
	005 NotImplemented "Instruction MOVK not yet implemented."
	006 Move X13, X8
	007 NotImplemented "Instruction MOVK not yet implemented."
	008 NotImplemented "Instruction BFM not yet implemented."
	009 NotImplemented "Instruction MOVK not yet implemented."
	010 Move X9, X13
	011 ShiftRight X9, 9
	012 And X9, X9, 0x7FFFFFFF
	013 Move W12, 0x3600
	014 NotImplemented "Instruction INVALID not yet implemented."
	015 NotImplemented "Instruction MOVK not yet implemented."
	016 Move X13, X9
	017 ShiftRight X13, 11
	018 And X13, X13, 0x7FFFFFFF
	019 Move [X0+12], W13
	020 NotImplemented "Instruction MADD not yet implemented."
	021 Move X13, X11
	022 NotImplemented "Instruction BFM not yet implemented."
	023 Move X8, X13
	024 ShiftRight X8, 9
	025 And X8, X8, 0x7FFFFFFF
	026 NotImplemented "Instruction INVALID not yet implemented."
	027 Move X10, X8
	028 ShiftRight X10, 11
	029 And X10, X10, 0x7FFFFFFF
	030 Move X9, X9
	031 ShiftRight X9, 43
	032 And X9, X9, 0x7FFFFFFF
	033 NotImplemented "Instruction MADD not yet implemented."
	034 Move [X0+4], W9
	035 Move [X0+8], W10
	036 Move W0, W8
	037 Return X0

Method: System.Void .cctor()

Disassembly:
	0x033DD7DC LDR X0, [X0 + 0xF48]
	0x033DD7E0 BL 0x1C16CF4
	0x033DD7E4 ADRP X0, 0xD4F000
	0x033DD7E8 LDR X0, [X0 + 0xF50]
	0x033DD7EC BL 0x1C16CF4
	0x033DD7F0 ADRP X0, 0xD4F000
	0x033DD7F4 LDR X0, [X0 + 0xF58]
	0x033DD7F8 BL 0x1C16CF4
	0x033DD7FC ADRP X0, 0xD4F000
	0x033DD800 LDR X0, [X0 + 0xF60]
	0x033DD804 BL 0x1C16CF4
	0x033DD808 ADRP X0, 0xD4F000
	0x033DD80C LDR X0, [X0 + 0xF68]
	0x033DD810 BL 0x1C16CF4
	0x033DD814 MOVZ W8, 0x1
	0x033DD818 STRB W8, [X23 + 0x393]
	0x033DD81C STP X31, X31, [X31 + 0x8]
	0x033DD820 STR X31, [X31 + 0x18]
	0x033DD824 LDR W23, [X22 + 0x20]
	0x033DD828 BL 0x1C16D44
	0x033DD82C CMP W23, 0x1
	0x033DD830 B.LE 0x33DD850
	0x033DD834 CBZ X21, 0x33DDA34
	0x033DD838 LDR X8, [X21 + 0x18]
	0x033DD83C LDR X0, [X21 + 0x40]
	0x033DD840 LDR X2, [X21 + 0x28]
	0x033DD844 MOV X1, X20
	0x033DD848 BLR X8
	0x033DD84C B 0x33DD858
	0x033DD850 LDRB W8, [X22 + 0x28]
	0x033DD854 CBZ W8, 0x33DD880
	0x033DD858 STP X31, X31, [X19]
	0x033DD85C STR X31, [X19 + 0x10]
	0x033DD860 LDP X20, X19, [X31 + 0x70]
	0x033DD864 LDP X22, X21, [X31 + 0x60]
	0x033DD868 LDP X24, X23, [X31 + 0x50]
	0x033DD86C LDP X26, X25, [X31 + 0x40]
	0x033DD870 LDP X28, X27, [X31 + 0x30]
	0x033DD874 LDR X30, [X31 + 0x20]
	0x033DD878 ADD X31, X31, 0x80
	0x033DD87C RET
	0x033DD880 MOV X0, X31
	0x033DD884 BL 0x33C151C
	0x033DD888 ADRP X28, 0xD18000
	0x033DD88C LDR X28, [X28 + 0xA50]
	0x033DD890 MOV W25, W0
	0x033DD894 LDR X8, [X28]
	0x033DD898 LDR W9, [X8 + 0xE0]
	0x033DD89C CBNZ W9, 0x33DD8AC
	0x033DD8A0 MOV X0, X8
	0x033DD8A4 BL 0x1C16DFC
	0x033DD8A8 LDR X8, [X28]
	0x033DD8AC LDR X8, [X8 + 0xB8]
	0x033DD8B0 LDR W27, [X8 + 0x10]
	0x033DD8B4 CBZ X26, 0x33DD8E4
	0x033DD8B8 ADRP X8, 0xD4F000
	0x033DD8BC LDR X8, [X8 + 0xF68]
	0x033DD8C0 LDR X0, [X8]
	0x033DD8C4 BL 0x1C16F10
	0x033DD8C8 MOV X1, X31
	0x033DD8CC MOV X23, X0
	0x033DD8D0 BL 0x33BDD8C
	0x033DD8D4 STP X21, X20, [X23 + 0x10]
	0x033DD8D8 STP X24, X22, [X23 + 0x20]
	0x033DD8DC STR X26, [X23 + 0x30]
	0x033DD8E0 B 0x33DD908
	0x033DD8E4 ADRP X8, 0xD4F000
	0x033DD8E8 LDR X8, [X8 + 0xF40]
	0x033DD8EC LDR X0, [X8]
	0x033DD8F0 BL 0x1C16F10
	0x033DD8F4 MOV X1, X31
	0x033DD8F8 MOV X23, X0
	0x033DD8FC BL 0x33BDD8C
	0x033DD900 STP X21, X20, [X23 + 0x10]
	0x033DD904 STP X24, X22, [X23 + 0x20]
	0x033DD908 MOV X24, X22
	0x033DD90C LDR X26, [X24 + 0x18]!
	0x033DD910 BL 0x1C16D44
	0x033DD914 CBNZ X26, 0x33DD968
	0x033DD918 LDR X0, [X28]
	0x033DD91C LDR W8, [X0 + 0xE0]
	0x033DD920 CBNZ W8, 0x33DD92C
	0x033DD924 BL 0x1C16DFC
	0x033DD928 LDR X0, [X28]
	0x033DD92C ADRP X9, 0xD4F000
	0x033DD930 LDR X8, [X0 + 0xB8]
	0x033DD934 LDR X9, [X9 + 0xF48]
	0x033DD938 LDR W1, [X8 + 0x10]
	0x033DD93C LDR X0, [X9]
	0x033DD940 BL 0x1C16D6C
	0x033DD944 MOV X26, X0
	0x033DD948 BL 0x1C16D44
	0x033DD94C MOV X0, X24
	0x033DD950 MOV X1, X26
	0x033DD954 MOV X2, X31
	0x033DD958 BL 0x1C24138
	0x033DD95C CMP X0, 0x0
	0x033DD960 CSEL X26, X26, X0, EQ
	0x033DD964 CBZ X26, 0x33DDA34
	0x033DD968 LDR W8, [X26 + 0x18]
	0x033DD96C SDIV W9, W25, W27
	0x033DD970 MSUB W27, W9, W27, W25
	0x033DD974 CMP W27, W8
	0x033DD978 B.CS 0x33DDA38
	0x033DD97C ADD X24, X26, W27, 0x3, SXTW
	0x033DD980 LDR X25, [X24 + 0x20]!
	0x033DD984 BL 0x1C16D44
	0x033DD988 CBNZ X25, 0x33DD9E4
	0x033DD98C ADRP X8, 0xD4F000
	0x033DD990 LDR X8, [X8 + 0xF60]
	0x033DD994 LDR X0, [X8]
	0x033DD998 BL 0x1C16F10
	0x033DD99C ADRP X8, 0xD4F000
	0x033DD9A0 LDR X8, [X8 + 0xF58]
	0x033DD9A4 MOVZ W1, 0x4
	0x033DD9A8 MOV X25, X0
	0x033DD9AC LDR X2, [X8]
	0x033DD9B0 BL 0x25FFC00
	0x033DD9B4 LDR W8, [X26 + 0x18]
	0x033DD9B8 CMP W27, W8
	0x033DD9BC B.CS 0x33DDA38
	0x033DD9C0 MOV X0, X24
	0x033DD9C4 MOV X1, X25
	0x033DD9C8 MOV X2, X31
	0x033DD9CC BL 0x1C24138
	0x033DD9D0 LDR W8, [X26 + 0x18]
	0x033DD9D4 CMP W27, W8
	0x033DD9D8 B.CS 0x33DDA38
	0x033DD9DC LDR X25, [X24]
	0x033DD9E0 CBZ X25, 0x33DDA34
	0x033DD9E4 ADRP X8, 0xD4F000
	0x033DD9E8 LDR X8, [X8 + 0xF50]
	0x033DD9EC MOV X0, X25
	0x033DD9F0 MOV X1, X23
	0x033DD9F4 LDR X2, [X8]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X26, 0x1001000
	012 Move X27, 0xD40000
	013 Move X19, 0xD50000
	014 Move X20, 0xD50000
	015 Move X25, 0xD1F000
	016 Move X24, 0xD50000
	017 Move X23, 0xD48000
	018 Move X22, 0xD50000
	019 Move X21, 0xD50000
	020 Move X27, [X27+3336]
	021 Move X19, [X19+3800]
	022 Move X20, [X20+3560]
	023 Move W8, [X26+859]
	024 Move X25, [X25+1384]
	025 Move X24, [X24+3808]
	026 Move X23, [X23+2096]
	027 Move X22, [X22+3816]
	028 Move X21, [X21+3824]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {59}
	033 Move X0, 0xD50000
	034 Move X0, [X0+3560]
	035 Call 0x1C17CF4
	036 Move X0, 0xD48000
	037 Move X0, [X0+2096]
	038 Call 0x1C17CF4
	039 Move X0, 0xD50000
	040 Move X0, [X0+3824]
	041 Call 0x1C17CF4
	042 Move X0, 0xD50000
	043 Move X0, [X0+3816]
	044 Call 0x1C17CF4
	045 Move X0, 0xD50000
	046 Move X0, [X0+3800]
	047 Call 0x1C17CF4
	048 Move X0, 0xD50000
	049 Move X0, [X0+3808]
	050 Call 0x1C17CF4
	051 Move X0, 0xD40000
	052 Move X0, [X0+3336]
	053 Call 0x1C17CF4
	054 Move X0, 0xD1F000
	055 Move X0, [X0+1384]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X26+859], W8
	059 Move X0, [X27]
	060 Move W1, 10
	061 Call 0x1C17D6C
	062 Move X1, [X19]
	063 Move X2, X31
	064 Move X19, X0
	065 Call RuntimeHelpers.InitializeArray, X0, X1
	066 Move X8, [X20]
	067 Move W1, 19
	068 Move X8, [X8+184]
	069 Move [X8], X19
	070 Move X0, [X25]
	071 Call 0x1C17D6C
	072 Move X1, [X24]
	073 Move X2, X31
	074 Move X19, X0
	075 Call RuntimeHelpers.InitializeArray, X0, X1
	076 Move X8, [X20]
	077 Move W1, 81
	078 Move X8, [X8+184]
	079 Move [X8+8], X19
	080 Move X0, [X23]
	081 Call 0x1C17D6C
	082 Move X1, [X22]
	083 Move X2, X31
	084 Move X19, X0
	085 Call RuntimeHelpers.InitializeArray, X0, X1
	086 Move X8, [X20]
	087 Move W1, 8
	088 Move X8, [X8+184]
	089 Move [X8+16], X19
	090 Move X0, [X21]
	091 Call 0x1C17D6C
	092 Compare X0, 0
	093 JumpIfEqual {143}
	094 Move W8, [X0+24]
	095 Compare W8, 0
	096 JumpIfEqual {142}
	097 Move X9, -42930176
	098 Move V0, [X9+47]
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move [X0+2], V0
	101 Move X9, -42926080
	102 Move V0, [X9+60]
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move [X0+3], V0
	105 Move X9, -42926080
	106 Move V0, [X9+84]
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move [X0+4], V0
	109 Move X9, -42934272
	110 Move V0, [X9+170]
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move [X0+5], V0
	113 Move X9, -42926080
	114 Move V0, [X9+98]
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move [X0+6], V0
	117 Move X9, -42930176
	118 Move V0, [X9+169]
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move [X0+7], V0
	121 Move X9, -42934272
	122 Move V0, [X9+148]
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move [X0+8], V0
	125 Move X8, -42934272
	126 Move V0, [X8+122]
	127 Move X22, [X31+48]
	128 Move X21, [X31+56]
	129 Move X24, [X31+32]
	130 Move X23, [X31+40]
	131 Move X26, [X31+16]
	132 Move X25, [X31+24]
	133 Move [X0+9], V0
	134 Move X8, [X20]
	135 Move X20, [X31+64]
	136 Move X19, [X31+72]
	137 Move X8, [X8+184]
	138 Move [X8+24], X0
	139 Move X30, [X31+80]
	140 Move X27, [X31+88]
	141 Return 
	142 Call 0x1C17F28
	143 Call 0x1C17F20

