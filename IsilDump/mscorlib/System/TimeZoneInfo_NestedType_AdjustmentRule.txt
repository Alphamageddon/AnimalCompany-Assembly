Type: System.TimeZoneInfo/AdjustmentRule

Method: System.DateTime get_DateStart()

Disassembly:
	0x03313528 LDRH W0, [X0 + 0x8]
	0x0331352C RET

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.DateTime get_DateEnd()

Disassembly:
	0x03313530 STP X30, X25, [X31 - 0x40]!
	0x03313534 STP X24, X23, [X31 + 0x10]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.TimeSpan get_DaylightDelta()

Disassembly:
	0x03313538 STP X22, X21, [X31 + 0x20]
	0x0331353C STP X20, X19, [X31 + 0x30]

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.TimeZoneInfo/TransitionTime get_DaylightTransitionStart()

Disassembly:
	0x03313540 MOV W20, W4
	0x03313544 MOV W21, W3
	0x03313548 MOV W22, W2
	0x0331354C MOV X23, X1
	0x03313550 MOV X24, X0

ISIL:
	001 Move X9, [X0+56]
	002 NotImplemented "Instruction LDUR not yet implemented."
	003 Move [X8+16], X9
	004 Move [X8], V0
	005 Return X0

Method: System.TimeZoneInfo/TransitionTime get_DaylightTransitionEnd()

Disassembly:
	0x03313554 MOV X0, X1
	0x03313558 MOV W1, W2
	0x0331355C MOV W2, W3
	0x03313560 MOV W3, W4
	0x03313564 MOV W4, W5

ISIL:
	001 Move X9, [X0+80]
	002 Move V0, [X0+4]
	003 Move [X8+16], X9
	004 Move [X8], V0
	005 Return X0

Method: System.TimeSpan get_BaseUtcOffsetDelta()

Disassembly:
	0x03313568 MOV W19, W5
	0x0331356C AND W25, W6, 0x1

ISIL:
	001 Move X0, [X0+88]
	002 Return X0

Method: System.Boolean get_NoDaylightTransitions()

Disassembly:
	0x03313570 BL 0x33135A0
	0x03313574 STR X23, [X24]

ISIL:
	001 Move W0, [X0+96]
	002 Return X0

Method: System.Boolean get_HasDaylightSaving()

Disassembly:
	0x0330F1AC BL 0x1C16F20
	0x0330F1B0 SUB X31, X31, 0x70
	0x0330F1B4 STP X30, X23, [X31 + 0x40]
	0x0330F1B8 STP X22, X21, [X31 + 0x50]
	0x0330F1BC STP X20, X19, [X31 + 0x60]
	0x0330F1C0 ADRP X21, 0x10CD000
	0x0330F1C4 LDRB W8, [X21 + 0xB55]
	0x0330F1C8 MOV X19, X1
	0x0330F1CC MOV X20, X0
	0x0330F1D0 TBNZ X8, 0x0, 0x330F1F4
	0x0330F1D4 ADRP X0, 0xDE5000
	0x0330F1D8 LDR X0, [X0 + 0x9F0]
	0x0330F1DC BL 0x1C16CF4
	0x0330F1E0 ADRP X0, 0xDE6000
	0x0330F1E4 LDR X0, [X0 + 0x570]
	0x0330F1E8 BL 0x1C16CF4
	0x0330F1EC MOVZ W8, 0x1
	0x0330F1F0 STRB W8, [X21 + 0xB55]
	0x0330F1F4 CBZ X19, 0x330F2F8
	0x0330F1F8 ADRP X23, 0xDE5000
	0x0330F1FC LDR X23, [X23 + 0x9F0]
	0x0330F200 LDR X21, [X20 + 0x10]
	0x0330F204 LDR X22, [X19 + 0x10]
	0x0330F208 LDR X0, [X23]
	0x0330F20C LDR W8, [X0 + 0xE0]
	0x0330F210 CBNZ W8, 0x330F218
	0x0330F214 BL 0x1C16DFC
	0x0330F218 MOV X0, X21
	0x0330F21C MOV X1, X22
	0x0330F220 MOV X2, X31
	0x0330F224 BL 0x3363078
	0x0330F228 TBZ X0, 0x0, 0x330F2F8
	0x0330F22C LDR X0, [X23]
	0x0330F230 LDR X21, [X20 + 0x18]
	0x0330F234 LDR X22, [X19 + 0x18]
	0x0330F238 LDR W8, [X0 + 0xE0]
	0x0330F23C CBNZ W8, 0x330F244
	0x0330F240 BL 0x1C16DFC
	0x0330F244 MOV X0, X21
	0x0330F248 MOV X1, X22
	0x0330F24C MOV X2, X31
	0x0330F250 BL 0x3363078
	0x0330F254 TBZ X0, 0x0, 0x330F2F8
	0x0330F258 ADRP X23, 0xDE6000
	0x0330F25C LDR X23, [X23 + 0x570]
	0x0330F260 LDR X21, [X20 + 0x20]
	0x0330F264 LDR X22, [X19 + 0x20]
	0x0330F268 LDR X0, [X23]
	0x0330F26C LDR W8, [X0 + 0xE0]
	0x0330F270 CBNZ W8, 0x330F278
	0x0330F274 BL 0x1C16DFC
	0x0330F278 MOV X0, X21
	0x0330F27C MOV X1, X22
	0x0330F280 MOV X2, X31
	0x0330F284 BL 0x3394CD8
	0x0330F288 TBZ X0, 0x0, 0x330F2F8
	0x0330F28C LDR X0, [X23]
	0x0330F290 LDR X21, [X20 + 0x58]
	0x0330F294 LDR X22, [X19 + 0x58]
	0x0330F298 LDR W8, [X0 + 0xE0]
	0x0330F29C CBNZ W8, 0x330F2A4
	0x0330F2A0 BL 0x1C16DFC
	0x0330F2A4 MOV X0, X21
	0x0330F2A8 MOV X1, X22
	0x0330F2AC MOV X2, X31
	0x0330F2B0 BL 0x3394CD8
	0x0330F2B4 TBZ X0, 0x0, 0x330F2F8
	0x0330F2B8 LDR X8, [X19 + 0x50]
	0x0330F2BC LDR V0, [X19 + 0x4]
	0x0330F2C0 ADD X0, X20, 0x40
	0x0330F2C4 ADD X1, X31, 0x20
	0x0330F2C8 STR X8, [X31 + 0x30]
	0x0330F2CC STR V0, [X31 + 0x2]
	0x0330F2D0 BL 0x33125AC
	0x0330F2D4 TBZ X0, 0x0, 0x330F2F8
	0x0330F2D8 LDR X8, [X19 + 0x38]
	0x0330F2DC LDUR V0, [X19 + 0x28]
	0x0330F2E0 ADD X0, X20, 0x28
	0x0330F2E4 ADD X1, X31, 0x0
	0x0330F2E8 STR X8, [X31 + 0x10]
	0x0330F2EC STR V0, [X31]
	0x0330F2F0 BL 0x33125AC
	0x0330F2F4 B 0x330F2FC
	0x0330F2F8 MOV W0, W31
	0x0330F2FC LDP X20, X19, [X31 + 0x60]
	0x0330F300 LDP X22, X21, [X31 + 0x50]
	0x0330F304 LDP X30, X23, [X31 + 0x40]
	0x0330F308 AND W0, W0, 0x1
	0x0330F30C ADD X31, X31, 0x70
	0x0330F310 RET

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+80], X30
	003 Move [X31+88], X21
	004 Move [X31+96], X20
	005 Move [X31+104], X19
	006 Move X20, 0x10CE000
	007 Move X21, 0xDE7000
	008 Move W8, [X20+2900]
	009 Move X21, [X21+1392]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xDE6000
	016 Move X0, [X0+2544]
	017 Call 0x1C17CF4
	018 Move X0, 0xDE7000
	019 Move X0, [X0+1392]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+2900], W8
	023 Move X0, [X21]
	024 Move X20, [X19+32]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X21]
	030 Move X8, [X0+184]
	031 Move X0, X20
	032 Move X2, X31
	033 Move X1, [X8]
	034 Call TimeSpan.op_Inequality, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {71}
	039 Move X8, [X19+56]
	040 NotImplemented "Instruction LDUR not yet implemented."
	041 Add X0, X31, 32
	042 Add X1, X31, 56
	043 Move [X31+56], X31
	044 Move [X31+64], X31
	045 Move [X31+48], X8
	046 Move [X31+2], V0
	047 Move [X31+72], X31
	048 Call TransitionTime.Equals, X0, X1
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {72}
	053 Move X21, 0xDE6000
	054 Move X21, [X21+2544]
	055 Move X20, [X19+40]
	056 Move X0, [X21]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {62}
	060 Call 0x1C17DFC
	061 Move X0, [X21]
	062 Move X8, [X0+184]
	063 Move X0, X20
	064 Move X2, X31
	065 Move X1, [X8+16]
	066 Call DateTime.op_Inequality, X0, X1
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {72}
	071 Move W0, 1
	072 Move X8, [X19+80]
	073 Move V0, [X19+4]
	074 Add X0, X31, 0
	075 Add X1, X31, 56
	076 Move [X31+56], X31
	077 Move [X31+64], X31
	078 Move [X31+16], X8
	079 Move [X31], V0
	080 Move [X31+72], X31
	081 Call TransitionTime.Equals, X0, X1
	082 Move TEMP, X0
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfNotEqual {93}
	086 Move W0, W31
	087 Move X20, [X31+96]
	088 Move X19, [X31+104]
	089 Move X30, [X31+80]
	090 Move X21, [X31+88]
	091 Add X31, X31, 112
	092 Return X0
	093 Move X20, 0xDE6000
	094 Move X20, [X20+2544]
	095 Move X19, [X19+64]
	096 Move X0, [X20]
	097 Move W8, [X0+224]
	098 Compare W8, 0
	099 JumpIfNotEqual {102}
	100 Call 0x1C17DFC
	101 Move X0, [X20]
	102 Move X8, [X0+184]
	103 Move D0, 1
	104 Move X1, X31
	105 Add X0, X8, 16
	106 Call DateTime.AddMilliseconds, X0, V0
	107 Move X1, X0
	108 Move X0, X19
	109 Move X20, [X31+96]
	110 Move X19, [X31+104]
	111 Move X30, [X31+80]
	112 Move X21, [X31+88]
	113 Move X2, X31
	114 Add X31, X31, 112
	115 Call DateTime.op_Inequality, X0, X1
	116 Return X0

Method: System.Boolean Equals(System.TimeZoneInfo/AdjustmentRule other)

Disassembly:
	0x033101B0 STRB W8, [X23 + 0xB39]
	0x033101B4 LDR X0, [X24]
	0x033101B8 LDR X22, [X22 + 0x30]
	0x033101BC LDR W8, [X0 + 0xE0]
	0x033101C0 CBNZ W8, 0x33101C8
	0x033101C4 BL 0x1C16DFC
	0x033101C8 ADRP X23, 0xDE4000
	0x033101CC LDR X23, [X23 + 0x9F0]
	0x033101D0 MOV X0, X22
	0x033101D4 MOV X1, X21
	0x033101D8 MOV X2, X31
	0x033101DC BL 0x3394C70
	0x033101E0 MOV X1, X20
	0x033101E4 MOV X2, X31
	0x033101E8 BL 0x3394C70
	0x033101EC STR X0, [X31]
	0x033101F0 TBZ X19, 0x0, 0x3310214
	0x033101F4 LDR X0, [X24]
	0x033101F8 LDR W8, [X0 + 0xE0]
	0x033101FC CBNZ W8, 0x3310204
	0x03310200 BL 0x1C16DFC
	0x03310204 ADD X0, X31, 0x0
	0x03310208 MOV X1, X31
	0x0331020C BL 0x33946A4
	0x03310210 STR X0, [X31]
	0x03310214 LDR X0, [X23]
	0x03310218 LDR W8, [X0 + 0xE0]
	0x0331021C CBNZ W8, 0x3310224
	0x03310220 BL 0x1C16DFC
	0x03310224 ADD X0, X31, 0x8
	0x03310228 MOV X1, X31
	0x0331022C BL 0x3361708
	0x03310230 LDR X8, [X24]
	0x03310234 MOV X19, X0
	0x03310238 LDR W9, [X8 + 0xE0]
	0x0331023C CBNZ W9, 0x3310248
	0x03310240 MOV X0, X8
	0x03310244 BL 0x1C16DFC
	0x03310248 LDR X8, [X23]
	0x0331024C LDR X9, [X31]
	0x03310250 MOV X1, X31
	0x03310254 LDR X8, [X8 + 0xB8]
	0x03310258 ADD X19, X9, X19
	0x0331025C ADD X0, X8, 0x18
	0x03310260 BL 0x3361708
	0x03310264 LDR X8, [X23]
	0x03310268 MOV X20, X0
	0x0331026C LDR W9, [X8 + 0xE0]
	0x03310270 CBNZ W9, 0x3310280
	0x03310274 MOV X0, X8
	0x03310278 BL 0x1C16DFC
	0x0331027C LDR X8, [X23]
	0x03310280 LDR X8, [X8 + 0xB8]
	0x03310284 CMP X19, X20
	0x03310288 B.LE 0x3310294
	0x0331028C LDR X0, [X8 + 0x18]
	0x03310290 B 0x33102C4
	0x03310294 ADD X0, X8, 0x10
	0x03310298 MOV X1, X31
	0x0331029C BL 0x3361708
	0x033102A0 CMP X19, X0
	0x033102A4 B.GE 0x33102CC
	0x033102A8 LDR X0, [X23]
	0x033102AC LDR W8, [X0 + 0xE0]
	0x033102B0 CBNZ W8, 0x33102BC
	0x033102B4 BL 0x1C16DFC
	0x033102B8 LDR X0, [X23]
	0x033102BC LDR X8, [X0 + 0xB8]
	0x033102C0 LDR X0, [X8 + 0x10]
	0x033102C4 STR X0, [X31 + 0x18]
	0x033102C8 B 0x33102E4
	0x033102CC ADD X0, X31, 0x18
	0x033102D0 MOV X1, X19
	0x033102D4 MOV X2, X31
	0x033102D8 STR X31, [X31 + 0x18]
	0x033102DC BL 0x335EEB0
	0x033102E0 LDR X0, [X31 + 0x18]
	0x033102E4 LDP X20, X19, [X31 + 0x40]
	0x033102E8 LDP X22, X21, [X31 + 0x30]
	0x033102EC LDP X24, X23, [X31 + 0x20]
	0x033102F0 LDR X30, [X31 + 0x10]
	0x033102F4 ADD X31, X31, 0x50
	0x033102F8 RET
	0x033102FC MOV W4, W31
	0x03310300 B 0x331015C
	0x03310304 SUB X31, X31, 0x40
	0x03310308 STP X30, X23, [X31 + 0x10]
	0x0331030C STP X22, X21, [X31 + 0x20]
	0x03310310 STP X20, X19, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X21, 0x10CD000
	009 Move W8, [X21+2901]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xDE5000
	017 Move X0, [X0+2544]
	018 Call 0x1C17CF4
	019 Move X0, 0xDE6000
	020 Move X0, [X0+1392]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+2901], W8
	024 Compare X19, 0
	025 JumpIfEqual {108}
	026 Move X23, 0xDE5000
	027 Move X23, [X23+2544]
	028 Move X21, [X20+16]
	029 Move X22, [X19+16]
	030 Move X0, [X23]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X21
	036 Move X1, X22
	037 Move X2, X31
	038 Call DateTime.op_Equality, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {108}
	043 Move X0, [X23]
	044 Move X21, [X20+24]
	045 Move X22, [X19+24]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, X21
	051 Move X1, X22
	052 Move X2, X31
	053 Call DateTime.op_Equality, X0, X1
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {108}
	058 Move X23, 0xDE6000
	059 Move X23, [X23+1392]
	060 Move X21, [X20+32]
	061 Move X22, [X19+32]
	062 Move X0, [X23]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Move X0, X21
	068 Move X1, X22
	069 Move X2, X31
	070 Call TimeSpan.op_Equality, X0, X1
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfNotEqual {108}
	075 Move X0, [X23]
	076 Move X21, [X20+88]
	077 Move X22, [X19+88]
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {82}
	081 Call 0x1C17DFC
	082 Move X0, X21
	083 Move X1, X22
	084 Move X2, X31
	085 Call TimeSpan.op_Equality, X0, X1
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {108}
	090 Move X8, [X19+80]
	091 Move V0, [X19+4]
	092 Add X0, X20, 64
	093 Add X1, X31, 32
	094 Move [X31+48], X8
	095 Move [X31+2], V0
	096 Call TransitionTime.Equals, X0, X1
	097 Move TEMP, X0
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfNotEqual {108}
	101 Move X8, [X19+56]
	102 NotImplemented "Instruction LDUR not yet implemented."
	103 Add X0, X20, 40
	104 Add X1, X31, 0
	105 Move [X31+16], X8
	106 Move [X31], V0
	107 Call TransitionTime.Equals, X0, X1
	108 Move W0, W31
	109 Move X20, [X31+96]
	110 Move X19, [X31+104]
	111 Move X22, [X31+80]
	112 Move X21, [X31+88]
	113 Move X30, [X31+64]
	114 Move X23, [X31+72]
	115 And W0, W0, 1
	116 Add X31, X31, 112
	117 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x03313684 CMP W8, 0x1
	0x03313688 B.NE 0x3313700
	0x0331368C LDR X0, [X23]
	0x03313690 LDR W8, [X0 + 0xE0]
	0x03313694 CBNZ W8, 0x331369C
	0x03313698 BL 0x1C16DFC
	0x0331369C ADD X0, X31, 0x18
	0x033136A0 MOV X1, X31
	0x033136A4 BL 0x3361708
	0x033136A8 MOVZ X8, 0x7E91
	0x033136AC MOVZ X9, 0x8650
	0x033136B0 MOVK X8, 0x3AFB0000
	0x033136B4 MOVK X9, 0xD6380000
	0x033136B8 MOVK X8, 0xCE70
	0x033136BC MOVK X9, 0x6DC5
	0x033136C0 MOVK X8, 0xD2880000
	0x033136C4 MOVK X9, 0x340000
	0x033136C8 MADD X8, X0, X8, X9
	0x033136CC MOVZ X9, 0x10CB
	0x033136D0 MOVK X9, 0xBAC70000
	0x033136D4 MOVK X9, 0x8DB8
	0x033136D8 EXTR X8, X8, X8, 0x4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x10CA000
	006 Move X21, 0xDE2000
	007 Move W8, [X20+2902]
	008 Move X21, [X21+2544]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDE2000
	015 Move X0, [X0+2544]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2902], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Add X0, X19, 16
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call DateTime.GetHashCode, X0
	031 Return X0

Method: System.Void .ctor(System.DateTime dateStart, System.DateTime dateEnd, System.TimeSpan daylightDelta, System.TimeZoneInfo/TransitionTime daylightTransitionStart, System.TimeZoneInfo/TransitionTime daylightTransitionEnd, System.TimeSpan baseUtcOffsetDelta, System.Boolean noDaylightTransitions)

Disassembly:
	0x033136DC MOVK X9, 0x60000
	0x033136E0 CMP X8, X9
	0x033136E4 B.CS 0x3313700
	0x033136E8 LDP X20, X19, [X31 + 0x40]
	0x033136EC LDP X22, X21, [X31 + 0x30]
	0x033136F0 LDP X24, X23, [X31 + 0x20]
	0x033136F4 LDR X30, [X31 + 0x10]
	0x033136F8 ADD X31, X31, 0x50
	0x033136FC RET
	0x03313700 ADRP X0, 0xDE8000
	0x03313704 LDR X0, [X0 + 0x578]
	0x03313708 BL 0x1C16D08
	0x0331370C BL 0x1C16F10
	0x03313710 MOV X19, X0
	0x03313714 ADRP X0, 0xE14000
	0x03313718 LDR X0, [X0 + 0xD90]
	0x0331371C B 0x331373C
	0x03313720 ADRP X0, 0xDE8000
	0x03313724 LDR X0, [X0 + 0x578]
	0x03313728 BL 0x1C16D08
	0x0331372C BL 0x1C16F10
	0x03313730 MOV X19, X0
	0x03313734 ADRP X0, 0xE14000
	0x03313738 LDR X0, [X0 + 0xD98]
	0x0331373C BL 0x1C16D08
	0x03313740 MOV X20, X0
	0x03313744 ADRP X0, 0xE14000
	0x03313748 LDR X0, [X0 + 0xDA0]
	0x0331374C BL 0x1C16D08
	0x03313750 MOV X2, X0
	0x03313754 MOV X0, X19
	0x03313758 MOV X1, X20
	0x0331375C BL 0x330E16C
	0x03313760 B 0x3313834
	0x03313764 ADRP X0, 0xDE8000
	0x03313768 LDR X0, [X0 + 0x760]
	0x0331376C BL 0x1C16D08
	0x03313770 BL 0x1C16F10
	0x03313774 MOV X19, X0
	0x03313778 ADRP X0, 0xE14000
	0x0331377C LDR X0, [X0 + 0xDA8]
	0x03313780 BL 0x1C16D08
	0x03313784 MOV X20, X0
	0x03313788 ADRP X0, 0xE14000
	0x0331378C LDR X0, [X0 + 0xDB0]
	0x03313790 B 0x3313820
	0x03313794 ADRP X0, 0xDE8000
	0x03313798 LDR X0, [X0 + 0x760]
	0x0331379C BL 0x1C16D08
	0x033137A0 BL 0x1C16F10

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+64], X30
	003 Move [X31+80], X26
	004 Move [X31+88], X25
	005 Move [X31+96], X24
	006 Move [X31+104], X23
	007 Move [X31+112], X22
	008 Move [X31+120], X21
	009 Move [X31+128], X20
	010 Move [X31+136], X19
	011 Move X25, X1
	012 Move X1, X31
	013 Move W19, W7
	014 Move X20, X6
	015 Move X21, X5
	016 Move X22, X4
	017 Move X23, X3
	018 Move X24, X2
	019 Move X26, X0
	020 Call Object..ctor, X0
	021 Move X8, [X22+16]
	022 Move V0, [X22]
	023 And W19, W19, 1
	024 Add X3, X31, 32
	025 Move [X31+48], X8
	026 Move [X31+2], V0
	027 Move X8, [X21+16]
	028 Move V0, [X21]
	029 Add X4, X31, 0
	030 Move X0, X25
	031 Move X1, X24
	032 Move X2, X23
	033 Move W5, W19
	034 Move [X31+16], X8
	035 Move [X31], V0
	036 Call AdjustmentRule.ValidateAdjustmentRule, X0, X1, X2, X3, X4, X5
	037 Move [X26+16], X25
	038 Move [X26+24], X24
	039 Move [X26+32], X23
	040 Move X8, [X22+16]
	041 Move V0, [X22]
	042 Move X24, [X31+96]
	043 Move X23, [X31+104]
	044 Move X30, [X31+64]
	045 Move [X26+56], X8
	046 Move [X26+40], V0
	047 Move V0, [X21]
	048 Move X8, [X21+16]
	049 Move [X26+96], W19
	050 Move X22, [X31+112]
	051 Move X21, [X31+120]
	052 Move [X26+4], V0
	053 Move [X26+80], X8
	054 Move [X26+88], X20
	055 Move X20, [X31+128]
	056 Move X19, [X31+136]
	057 Move X26, [X31+80]
	058 Move X25, [X31+88]
	059 Add X31, X31, 144
	060 Return 

Method: System.TimeZoneInfo/AdjustmentRule CreateAdjustmentRule(System.DateTime dateStart, System.DateTime dateEnd, System.TimeSpan daylightDelta, System.TimeZoneInfo/TransitionTime daylightTransitionStart, System.TimeZoneInfo/TransitionTime daylightTransitionEnd)

Disassembly:
	0x03313274 BL 0x32A9678
	0x03313278 CBZ X0, 0x33133E8
	0x0331327C ADRP X25, 0xE14000
	0x03313280 LDR X25, [X25 + 0xD30]
	0x03313284 LDR X8, [X0]
	0x03313288 LDR X1, [X25]
	0x0331328C LDR X8, [X8 + 0x40]
	0x03313290 LDR X9, [X1 + 0x40]
	0x03313294 CMP X8, X9
	0x03313298 B.NE 0x33133E4
	0x0331329C ADRP X26, 0xE14000
	0x033132A0 LDR X26, [X26 + 0xD50]
	0x033132A4 BL 0x1C16E08
	0x033132A8 LDR V0, [X0]
	0x033132AC LDR X8, [X0 + 0x10]
	0x033132B0 MOV X1, X31
	0x033132B4 STUR V0, [X19 + 0x28]
	0x033132B8 STR X8, [X19 + 0x38]
	0x033132BC LDR X0, [X24]
	0x033132C0 BL 0x338C698
	0x033132C4 LDR X1, [X26]
	0x033132C8 MOV X2, X0
	0x033132CC MOV X0, X20
	0x033132D0 MOV X3, X31
	0x033132D4 BL 0x32A9678
	0x033132D8 CBZ X0, 0x33133E8
	0x033132DC LDR X8, [X0]
	0x033132E0 LDR X1, [X25]
	0x033132E4 LDR X8, [X8 + 0x40]
	0x033132E8 LDR X9, [X1 + 0x40]
	0x033132EC CMP X8, X9
	0x033132F0 B.NE 0x33133E4
	0x033132F4 ADRP X24, 0xE14000
	0x033132F8 LDR X24, [X24 + 0xD48]
	0x033132FC BL 0x1C16E08
	0x03313300 LDR V0, [X0]
	0x03313304 LDR X8, [X0 + 0x10]
	0x03313308 MOV X1, X31
	0x0331330C STR V0, [X19 + 0x4]
	0x03313310 STR X8, [X19 + 0x50]
	0x03313314 LDR X0, [X21]
	0x03313318 BL 0x338C698
	0x0331331C LDR X1, [X24]
	0x03313320 MOV X2, X0
	0x03313324 MOV X0, X20
	0x03313328 MOV X3, X31
	0x0331332C BL 0x32A9880
	0x03313330 CBZ X0, 0x3313358
	0x03313334 LDR X8, [X0]
	0x03313338 LDR X1, [X23]
	0x0331333C LDR X8, [X8 + 0x40]
	0x03313340 LDR X9, [X1 + 0x40]
	0x03313344 CMP X8, X9
	0x03313348 B.NE 0x33133E4
	0x0331334C BL 0x1C16E08
	0x03313350 LDR X8, [X0]
	0x03313354 STR X8, [X19 + 0x58]
	0x03313358 ADRP X8, 0xE09000
	0x0331335C LDR X0, [X22]
	0x03313360 LDR X8, [X8 + 0x248]
	0x03313364 ADRP X22, 0xE14000
	0x03313368 LDR W9, [X0 + 0xE0]
	0x0331336C LDR X21, [X8]
	0x03313370 LDR X22, [X22 + 0xD58]
	0x03313374 CBNZ W9, 0x331337C
	0x03313378 BL 0x1C16DFC

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+144], X30
	003 Move [X31+152], X25
	004 Move [X31+160], X24
	005 Move [X31+168], X23
	006 Move [X31+176], X22
	007 Move [X31+184], X21
	008 Move [X31+192], X20
	009 Move [X31+200], X19
	010 Move X25, 0x10CA000
	011 Move X24, 0xDE3000
	012 Move W8, [X25+2903]
	013 Move X24, [X24+1392]
	014 Move X22, X4
	015 Move X23, X3
	016 Move X19, X2
	017 Move X20, X1
	018 Move X21, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xE15000
	024 Move X0, [X0+2944]
	025 Call 0x1C17CF4
	026 Move X0, 0xDE3000
	027 Move X0, [X0+1392]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+2903], W8
	031 Move X8, [X23+16]
	032 Move V0, [X23]
	033 Move X0, [X24]
	034 Move X23, 0xE15000
	035 Move [X31+128], X8
	036 Move [X31+7], V0
	037 Move X8, [X22+16]
	038 Move V0, [X22]
	039 Move [X31+96], X8
	040 Move [X31+5], V0
	041 Move W8, [X0+224]
	042 Move X23, [X23+2944]
	043 Compare W8, 0
	044 JumpIfNotEqual {47}
	045 Call 0x1C17DFC
	046 Move X0, [X24]
	047 Move X8, [X0+184]
	048 Move X0, [X23]
	049 Move X22, [X8]
	050 Call 0x1C17F10
	051 Move V0, [X31+7]
	052 Move X8, [X31+128]
	053 Move V1, [X31+5]
	054 Move X9, [X31+96]
	055 Add X4, X31, 48
	056 Add X5, X31, 16
	057 Move X1, X21
	058 Move X2, X20
	059 Move X3, X19
	060 Move X6, X22
	061 Move W7, W31
	062 Move X23, X0
	063 Move [X31+3], V0
	064 Move [X31+64], X8
	065 Move [X31+1], V1
	066 Move [X31+32], X9
	067 Call AdjustmentRule..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	068 Move X0, X23
	069 Move X20, [X31+192]
	070 Move X19, [X31+200]
	071 Move X22, [X31+176]
	072 Move X21, [X31+184]
	073 Move X24, [X31+160]
	074 Move X23, [X31+168]
	075 Move X30, [X31+144]
	076 Move X25, [X31+152]
	077 Add X31, X31, 208
	078 Return X0

Method: System.TimeZoneInfo/AdjustmentRule CreateAdjustmentRule(System.DateTime dateStart, System.DateTime dateEnd, System.TimeSpan daylightDelta, System.TimeZoneInfo/TransitionTime daylightTransitionStart, System.TimeZoneInfo/TransitionTime daylightTransitionEnd, System.TimeSpan baseUtcOffsetDelta, System.Boolean noDaylightTransitions)

Disassembly:
	0x0330C420 SUB X31, X31, 0x60
	0x0330C424 STP X30, X27, [X31 + 0x10]
	0x0330C428 STP X26, X25, [X31 + 0x20]
	0x0330C42C STP X24, X23, [X31 + 0x30]
	0x0330C430 STP X22, X21, [X31 + 0x40]
	0x0330C434 STP X20, X19, [X31 + 0x50]
	0x0330C438 STR W31, [X31 + 0xC]
	0x0330C43C CBZ X0, 0x330C618
	0x0330C440 MOV X20, X2
	0x0330C444 MOV X21, X1
	0x0330C448 MOV W1, W31
	0x0330C44C MOV X2, X31
	0x0330C450 MOV X19, X3
	0x0330C454 MOV X22, X0
	0x0330C458 BL 0x3222A1C
	0x0330C45C AND W8, W0, 0xFFFF
	0x0330C460 CMP W8, 0x4D
	0x0330C464 B.NE 0x330C5E8
	0x0330C468 MOVZ W1, 0x2E
	0x0330C46C MOV X0, X22
	0x0330C470 MOV X2, X31
	0x0330C474 BL 0x322BD98
	0x0330C478 SUBS W27, W0, 0x1
	0x0330C47C B.LT 0x330C5E8
	0x0330C480 ADD W24, W0, 0x1
	0x0330C484 MOV W25, W0
	0x0330C488 MOVZ W1, 0x2E
	0x0330C48C MOV X0, X22
	0x0330C490 MOV W2, W24
	0x0330C494 MOV X3, X31
	0x0330C498 BL 0x322BDA8
	0x0330C49C CMP W0, 0x1
	0x0330C4A0 B.LT 0x330C5E8
	0x0330C4A4 ADRP X26, 0x10CD000
	0x0330C4A8 LDRB W8, [X26 + 0x761]
	0x0330C4AC MOV W23, W0
	0x0330C4B0 CBNZ W8, 0x330C4C8
	0x0330C4B4 ADRP X0, 0xE0E000
	0x0330C4B8 LDR X0, [X0 + 0x290]
	0x0330C4BC BL 0x1C16CF4
	0x0330C4C0 MOVZ W8, 0x1
	0x0330C4C4 STRB W8, [X26 + 0x761]
	0x0330C4C8 LDR W8, [X22 + 0x10]
	0x0330C4CC CBZ W8, 0x330C4DC
	0x0330C4D0 SUB W8, W8, 0x1
	0x0330C4D4 CMP W8, W27
	0x0330C4D8 B.CS 0x330C4E8
	0x0330C4DC MOVZ W0, 0x18
	0x0330C4E0 MOV X1, X31
	0x0330C4E4 BL 0x339D764

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+80], X30
	003 Move [X31+88], X27
	004 Move [X31+96], X26
	005 Move [X31+104], X25
	006 Move [X31+112], X24
	007 Move [X31+120], X23
	008 Move [X31+128], X22
	009 Move [X31+136], X21
	010 Move [X31+144], X20
	011 Move [X31+152], X19
	012 Move X27, 0x10D1000
	013 Move X26, 0xE1C000
	014 Move W8, [X27+2904]
	015 Move X26, [X26+2944]
	016 Move W23, W6
	017 Move X19, X5
	018 Move X24, X4
	019 Move X25, X3
	020 Move X20, X2
	021 Move X21, X1
	022 Move X22, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {32}
	027 Move X0, 0xE1C000
	028 Move X0, [X0+2944]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X27+2904], W8
	032 Move X8, [X25+16]
	033 Move V0, [X25]
	034 Move X0, [X26]
	035 Move [X31+64], X8
	036 Move [X31+3], V0
	037 Move X8, [X24+16]
	038 Move V0, [X24]
	039 Move [X31+32], X8
	040 Move [X31+1], V0
	041 Call 0x1C17F10
	042 And W7, W23, 1
	043 Add X4, X31, 48
	044 Add X5, X31, 16
	045 Move X1, X22
	046 Move X2, X21
	047 Move X3, X20
	048 Move X6, X19
	049 Move X24, X0
	050 Call AdjustmentRule..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	051 Move X0, X24
	052 Move X20, [X31+144]
	053 Move X19, [X31+152]
	054 Move X22, [X31+128]
	055 Move X21, [X31+136]
	056 Move X24, [X31+112]
	057 Move X23, [X31+120]
	058 Move X26, [X31+96]
	059 Move X25, [X31+104]
	060 Move X30, [X31+80]
	061 Move X27, [X31+88]
	062 Add X31, X31, 160
	063 Return X0

Method: System.Boolean IsStartDateMarkerForBeginningOfYear()

Disassembly:
	0x03311650 MOVZ W25, 0x1
	0x03311654 B 0x3311310
	0x03311658 MOV W8, W31
	0x0331165C STRB W8, [X19]
	0x03311660 MOVZ W8, 0x1
	0x03311664 LDP X20, X19, [X31 + 0xB0]
	0x03311668 LDP X22, X21, [X31 + 0xA0]
	0x0331166C LDP X24, X23, [X31 + 0x90]
	0x03311670 LDP X26, X25, [X31 + 0x80]
	0x03311674 LDP X28, X27, [X31 + 0x70]
	0x03311678 LDP X29, X30, [X31 + 0x60]
	0x0331167C MOV W0, W8
	0x03311680 ADD X31, X31, 0xC0
	0x03311684 RET
	0x03311688 BL 0x1C16F20
	0x0331168C B 0x33116A4
	0x03311690 B 0x33116A4
	0x03311694 B 0x33116A4
	0x03311698 B 0x3311720
	0x0331169C B 0x33116A4
	0x033116A0 B 0x33116A4
	0x033116A4 MOV X21, X0
	0x033116A8 CMP W1, 0x1
	0x033116AC B.NE 0x331178C
	0x033116B0 MOV X0, X21
	0x033116B4 BL 0x3EB1AD0
	0x033116B8 MOV X19, X0
	0x033116BC ADRP X0, 0xDEA000
	0x033116C0 LDR X0, [X0 + 0x760]
	0x033116C4 BL 0x1C16D08
	0x033116C8 LDR X8, [X19]
	0x033116CC LDR X1, [X8]
	0x033116D0 BL 0x1C17270
	0x033116D4 TBZ X0, 0x0, 0x33116E0
	0x033116D8 BL 0x3EB1AE0
	0x033116DC B 0x3311660
	0x033116E0 MOVZ W0, 0x8
	0x033116E4 BL 0x3EB1AF0
	0x033116E8 LDR X8, [X19]
	0x033116EC STR X8, [X0]
	0x033116F0 ADRP X1, 0xBA3000
	0x033116F4 ADD X1, X1, 0xE58
	0x033116F8 MOV X2, X31
	0x033116FC BL 0x3EB1B00
	0x03311700 B 0x3311784
	0x03311704 MOV X21, X0
	0x03311708 BL 0x3EB1AE0
	0x0331170C B 0x331178C
	0x03311710 B 0x3311720
	0x03311714 B 0x3311720
	0x03311718 B 0x3311720
	0x0331171C B 0x3311720
	0x03311720 MOV X21, X0
	0x03311724 CMP W1, 0x1
	0x03311728 B.NE 0x331178C
	0x0331172C MOV X0, X21
	0x03311730 BL 0x3EB1AD0
	0x03311734 MOV X21, X0
	0x03311738 ADRP X0, 0xDEA000
	0x0331173C LDR X0, [X0 + 0x760]
	0x03311740 BL 0x1C16D08
	0x03311744 LDR X8, [X21]
	0x03311748 LDR X1, [X8]
	0x0331174C BL 0x1C17270
	0x03311750 TBZ X0, 0x0, 0x3311764
	0x03311754 BL 0x3EB1AE0
	0x03311758 LDRB W8, [X19]
	0x0331175C CBNZ W8, 0x3311660
	0x03311760 B 0x3311594
	0x03311764 MOVZ W0, 0x8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x10CC000
	005 Move W8, [X20+2905]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xDE4000
	012 Move X0, [X0+2544]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2905], W8
	016 Move W8, [X19+96]
	017 Compare W8, 0
	018 JumpIfNotEqual {61}
	019 Move W8, [X19+48]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move W8, [X19+50]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X20, 0xDE4000
	024 Move X8, [X19+40]
	025 Move X20, [X20+2544]
	026 Move [X31+8], X8
	027 Move X0, [X20]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Add X0, X31, 8
	033 Move X1, X31
	034 Call DateTime.get_Hour, X0
	035 Compare W0, 0
	036 JumpIfNotEqual {61}
	037 Move X8, [X19+40]
	038 Move X0, [X20]
	039 Move [X31+8], X8
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Add X0, X31, 8
	045 Move X1, X31
	046 Call DateTime.get_Minute, X0
	047 Compare W0, 0
	048 JumpIfNotEqual {61}
	049 Move X8, [X19+40]
	050 Move X0, [X20]
	051 Move [X31+8], X8
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Add X0, X31, 8
	057 Move X1, X31
	058 Call DateTime.get_Second, X0
	059 Compare W0, 0
	060 JumpIfEqual {66}
	061 Move W0, W31
	062 Move X20, [X31+16]
	063 Move X19, [X31+24]
	064 Move X30, [X31+32]
	065 Return X0
	066 Move X0, [X20]
	067 Add X20, X19, 16
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move X0, X20
	073 Move X1, X31
	074 Call DateTime.get_Year, X0
	075 Move W20, W0
	076 Add X0, X19, 24
	077 Move X1, X31
	078 Call DateTime.get_Year, X0
	079 NotImplemented "Instruction CMP not yet implemented."
	080 NotImplemented "Instruction CSET not yet implemented."

Method: System.Boolean IsEndDateMarkerForEndOfYear()

Disassembly:
	0x03311768 BL 0x3EB1AF0
	0x0331176C LDR X8, [X21]
	0x03311770 STR X8, [X0]
	0x03311774 ADRP X1, 0xBA3000
	0x03311778 ADD X1, X1, 0xE58
	0x0331177C MOV X2, X31
	0x03311780 BL 0x3EB1B00
	0x03311784 MOV X21, X0
	0x03311788 BL 0x3EB1AE0
	0x0331178C MOV X0, X21
	0x03311790 BL 0x1D2C690
	0x03311794 BL 0x1990590
	0x03311798 STR X30, [X31 - 0x30]!
	0x0331179C STP X22, X21, [X31 + 0x10]
	0x033117A0 STP X20, X19, [X31 + 0x20]
	0x033117A4 ADRP X20, 0x10CB000
	0x033117A8 ADRP X21, 0xE16000
	0x033117AC LDRB W8, [X20 + 0xB49]
	0x033117B0 LDR X21, [X21 + 0xA38]
	0x033117B4 MOV X19, X0
	0x033117B8 TBNZ X8, 0x0, 0x33117DC
	0x033117BC ADRP X0, 0xDE4000
	0x033117C0 LDR X0, [X0 + 0x570]
	0x033117C4 BL 0x1C16CF4
	0x033117C8 ADRP X0, 0xE16000
	0x033117CC LDR X0, [X0 + 0xA38]
	0x033117D0 BL 0x1C16CF4
	0x033117D4 MOVZ W8, 0x1
	0x033117D8 STRB W8, [X20 + 0xB49]
	0x033117DC LDR X0, [X21]
	0x033117E0 ADRP X22, 0xDE4000
	0x033117E4 LDR W8, [X0 + 0xE0]
	0x033117E8 LDR X22, [X22 + 0x570]
	0x033117EC CBNZ W8, 0x33117F8
	0x033117F0 BL 0x1C16DFC
	0x033117F4 LDR X0, [X21]
	0x033117F8 LDR X8, [X22]
	0x033117FC LDR X9, [X0 + 0xB8]
	0x03311800 LDR W10, [X8 + 0xE0]
	0x03311804 LDR X20, [X9 + 0x28]
	0x03311808 CBNZ W10, 0x3311814
	0x0331180C MOV X0, X8
	0x03311810 BL 0x1C16DFC
	0x03311814 MOV X0, X19
	0x03311818 MOV X1, X20
	0x0331181C MOV X2, X31
	0x03311820 BL 0x3394CF0
	0x03311824 TBZ X0, 0x0, 0x331183C
	0x03311828 LDP X20, X19, [X31 + 0x20]
	0x0331182C LDP X22, X21, [X31 + 0x10]
	0x03311830 MOVZ W0, 0x1
	0x03311834 LDR X30, [X31], #0x30
	0x03311838 RET
	0x0331183C LDR X0, [X21]
	0x03311840 LDR W8, [X0 + 0xE0]
	0x03311844 CBNZ W8, 0x3311850
	0x03311848 BL 0x1C16DFC
	0x0331184C LDR X0, [X21]
	0x03311850 LDR X8, [X22]
	0x03311854 LDR X9, [X0 + 0xB8]
	0x03311858 LDR W10, [X8 + 0xE0]
	0x0331185C LDR X20, [X9 + 0x20]
	0x03311860 CBNZ W10, 0x331186C
	0x03311864 MOV X0, X8
	0x03311868 BL 0x1C16DFC
	0x0331186C MOV X0, X19
	0x03311870 MOV X1, X20
	0x03311874 LDP X20, X19, [X31 + 0x20]
	0x03311878 LDP X22, X21, [X31 + 0x10]
	0x0331187C MOV X2, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x10CC000
	005 Move W8, [X20+2906]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xDE4000
	012 Move X0, [X0+2544]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2906], W8
	016 Move W8, [X19+96]
	017 Compare W8, 0
	018 JumpIfNotEqual {61}
	019 Move W8, [X19+72]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move W8, [X19+74]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X20, 0xDE4000
	024 Move X8, [X19+64]
	025 Move X20, [X20+2544]
	026 Move [X31+8], X8
	027 Move X0, [X20]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Add X0, X31, 8
	033 Move X1, X31
	034 Call DateTime.get_Hour, X0
	035 Compare W0, 0
	036 JumpIfNotEqual {61}
	037 Move X8, [X19+64]
	038 Move X0, [X20]
	039 Move [X31+8], X8
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Add X0, X31, 8
	045 Move X1, X31
	046 Call DateTime.get_Minute, X0
	047 Compare W0, 0
	048 JumpIfNotEqual {61}
	049 Move X8, [X19+64]
	050 Move X0, [X20]
	051 Move [X31+8], X8
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Add X0, X31, 8
	057 Move X1, X31
	058 Call DateTime.get_Second, X0
	059 Compare W0, 0
	060 JumpIfEqual {66}
	061 Move W0, W31
	062 Move X20, [X31+16]
	063 Move X19, [X31+24]
	064 Move X30, [X31+32]
	065 Return X0
	066 Move X0, [X20]
	067 Add X20, X19, 16
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move X0, X20
	073 Move X1, X31
	074 Call DateTime.get_Year, X0
	075 Move W20, W0
	076 Add X0, X19, 24
	077 Move X1, X31
	078 Call DateTime.get_Year, X0
	079 NotImplemented "Instruction CMP not yet implemented."
	080 NotImplemented "Instruction CSET not yet implemented."

Method: System.Void ValidateAdjustmentRule(System.DateTime dateStart, System.DateTime dateEnd, System.TimeSpan daylightDelta, System.TimeZoneInfo/TransitionTime daylightTransitionStart, System.TimeZoneInfo/TransitionTime daylightTransitionEnd, System.Boolean noDaylightTransitions)

Disassembly:
	0x033137A4 MOV X19, X0
	0x033137A8 ADRP X0, 0xE14000
	0x033137AC LDR X0, [X0 + 0xDB8]
	0x033137B0 BL 0x1C16D08
	0x033137B4 MOV X20, X0
	0x033137B8 ADRP X0, 0xE14000
	0x033137BC LDR X0, [X0 + 0xDC0]
	0x033137C0 B 0x3313820
	0x033137C4 ADRP X0, 0xDE8000
	0x033137C8 LDR X0, [X0 + 0x760]
	0x033137CC BL 0x1C16D08
	0x033137D0 BL 0x1C16F10
	0x033137D4 MOV X19, X0
	0x033137D8 ADRP X0, 0xE14000
	0x033137DC LDR X0, [X0 + 0xDC8]
	0x033137E0 BL 0x1C16D08
	0x033137E4 MOV X20, X0
	0x033137E8 ADRP X0, 0xE14000
	0x033137EC LDR X0, [X0 + 0xDD0]
	0x033137F0 B 0x3313820
	0x033137F4 ADRP X0, 0xDE8000
	0x033137F8 LDR X0, [X0 + 0x760]
	0x033137FC BL 0x1C16D08
	0x03313800 BL 0x1C16F10
	0x03313804 MOV X19, X0
	0x03313808 ADRP X0, 0xE14000
	0x0331380C LDR X0, [X0 + 0xDD8]
	0x03313810 BL 0x1C16D08
	0x03313814 MOV X20, X0
	0x03313818 ADRP X0, 0xE14000
	0x0331381C LDR X0, [X0 + 0xDE0]
	0x03313820 BL 0x1C16D08
	0x03313824 MOV X2, X0
	0x03313828 MOV X0, X19
	0x0331382C MOV X1, X20
	0x03313830 BL 0x3311888
	0x03313834 ADRP X0, 0xE14000
	0x03313838 LDR X0, [X0 + 0xDE8]
	0x0331383C BL 0x1C16D08
	0x03313840 MOV X1, X0
	0x03313844 MOV X0, X19
	0x03313848 BL 0x1C16DEC
	0x0331384C STR X30, [X31 - 0x20]!
	0x03313850 STP X20, X19, [X31 + 0x10]
	0x03313854 LDRB W1, [X0 + 0x8]
	0x03313858 LDR X8, [X0]
	0x0331385C LDRB W2, [X0 + 0x9]
	0x03313860 LDRB W3, [X0 + 0xA]
	0x03313864 LDR W4, [X0 + 0xC]
	0x03313868 MOV X0, X8
	0x0331386C BL 0x33135A0
	0x03313870 LDP X20, X19, [X31 + 0x10]
	0x03313874 LDR X30, [X31], #0x20
	0x03313878 RET
	0x0331387C CMP W1, 0x1
	0x03313880 MOV X19, X0
	0x03313884 B.NE 0x331392C
	0x03313888 MOV X0, X19
	0x0331388C BL 0x3EB1AD0
	0x03313890 MOV X19, X0
	0x03313894 ADRP X0, 0xDE8000
	0x03313898 LDR X0, [X0 + 0x578]
	0x0331389C BL 0x1C16D08
	0x033138A0 LDR X8, [X19]
	0x033138A4 LDR X1, [X8]
	0x033138A8 BL 0x1C17270
	0x033138AC TBZ X0, 0x0, 0x3313904
	0x033138B0 LDR X19, [X19]
	0x033138B4 BL 0x3EB1AE0
	0x033138B8 ADRP X0, 0xE0A000
	0x033138BC LDR X0, [X0 + 0x2E0]
	0x033138C0 BL 0x1C16D08
	0x033138C4 BL 0x1C16F10
	0x033138C8 MOV X20, X0
	0x033138CC ADRP X0, 0xE14000
	0x033138D0 LDR X0, [X0 + 0xC80]
	0x033138D4 BL 0x1C16D08
	0x033138D8 MOV X1, X0
	0x033138DC MOV X0, X20
	0x033138E0 MOV X2, X19
	0x033138E4 MOV X3, X31
	0x033138E8 BL 0x329F124
	0x033138EC ADRP X0, 0xE14000
	0x033138F0 LDR X0, [X0 + 0xDF0]
	0x033138F4 BL 0x1C16D08
	0x033138F8 MOV X1, X0
	0x033138FC MOV X0, X20
	0x03313900 BL 0x1C16DEC
	0x03313904 MOVZ W0, 0x8
	0x03313908 BL 0x3EB1AF0
	0x0331390C LDR X8, [X19]
	0x03313910 STR X8, [X0]
	0x03313914 ADRP X1, 0xBA1000
	0x03313918 ADD X1, X1, 0xE58
	0x0331391C MOV X2, X31
	0x03313920 BL 0x3EB1B00
	0x03313924 MOV X19, X0
	0x03313928 BL 0x3EB1AE0
	0x0331392C MOV X0, X19
	0x03313930 BL 0x1D2C690
	0x03313934 BL 0x1990590
	0x03313938 STR X30, [X31 - 0x50]!
	0x0331393C STP X26, X25, [X31 + 0x10]
	0x03313940 STP X24, X23, [X31 + 0x20]
	0x03313944 STP X22, X21, [X31 + 0x30]
	0x03313948 STP X20, X19, [X31 + 0x40]
	0x0331394C ADRP X21, 0x10C9000
	0x03313950 LDRB W8, [X21 + 0xB62]
	0x03313954 MOV X19, X1
	0x03313958 MOV X20, X0
	0x0331395C TBNZ X8, 0x0, 0x33139BC
	0x03313960 ADRP X0, 0xDE5000
	0x03313964 LDR X0, [X0 + 0xB78]
	0x03313968 BL 0x1C16CF4
	0x0331396C ADRP X0, 0xE14000
	0x03313970 LDR X0, [X0 + 0xDF8]
	0x03313974 BL 0x1C16CF4
	0x03313978 ADRP X0, 0xE14000
	0x0331397C LDR X0, [X0 + 0xE00]
	0x03313980 BL 0x1C16CF4
	0x03313984 ADRP X0, 0xE14000
	0x03313988 LDR X0, [X0 + 0xE08]
	0x0331398C BL 0x1C16CF4
	0x03313990 ADRP X0, 0xE14000
	0x03313994 LDR X0, [X0 + 0xE10]
	0x03313998 BL 0x1C16CF4
	0x0331399C ADRP X0, 0xE14000
	0x033139A0 LDR X0, [X0 + 0xE18]
	0x033139A4 BL 0x1C16CF4
	0x033139A8 ADRP X0, 0xE14000
	0x033139AC LDR X0, [X0 + 0xE20]
	0x033139B0 BL 0x1C16CF4
	0x033139B4 MOVZ W8, 0x1
	0x033139B8 STRB W8, [X21 + 0xB62]
	0x033139BC CBZ X19, 0x3313A9C
	0x033139C0 ADRP X8, 0xE14000
	0x033139C4 LDR X8, [X8 + 0xE18]
	0x033139C8 ADRP X21, 0xE14000
	0x033139CC ADRP X22, 0xE14000
	0x033139D0 ADRP X23, 0xE14000
	0x033139D4 LDR X21, [X21 + 0xDF8]
	0x033139D8 LDR X22, [X22 + 0xE10]
	0x033139DC LDR X23, [X23 + 0xE00]
	0x033139E0 LDR X2, [X20]
	0x033139E4 LDR X1, [X8]
	0x033139E8 ADRP X24, 0xDE5000
	0x033139EC ADRP X25, 0xE14000
	0x033139F0 ADRP X26, 0xE14000
	0x033139F4 LDR X24, [X24 + 0xB78]
	0x033139F8 LDR X25, [X25 + 0xE08]
	0x033139FC LDR X26, [X26 + 0xE20]
	0x03313A00 MOV X0, X19
	0x03313A04 MOV X3, X31
	0x03313A08 BL 0x32A9280
	0x03313A0C LDR X1, [X21]
	0x03313A10 LDRB W2, [X20 + 0x8]
	0x03313A14 MOV X0, X19
	0x03313A18 MOV X3, X31
	0x03313A1C BL 0x32A8D80
	0x03313A20 LDR X1, [X22]
	0x03313A24 LDRB W2, [X20 + 0x9]
	0x03313A28 MOV X0, X19
	0x03313A2C MOV X3, X31
	0x03313A30 BL 0x32A8D80
	0x03313A34 LDR X1, [X23]
	0x03313A38 LDRB W2, [X20 + 0xA]
	0x03313A3C MOV X0, X19
	0x03313A40 MOV X3, X31
	0x03313A44 BL 0x32A8D80
	0x03313A48 LDR W8, [X20 + 0xC]
	0x03313A4C LDR X0, [X24]
	0x03313A50 ADD X1, X31, 0xC
	0x03313A54 STR W8, [X31 + 0xC]
	0x03313A58 BL 0x1C16E04
	0x03313A5C LDR X1, [X25]
	0x03313A60 MOV X2, X0
	0x03313A64 MOV X0, X19
	0x03313A68 MOV X3, X31
	0x03313A6C BL 0x32A8BF0
	0x03313A70 LDRB W2, [X20 + 0x10]
	0x03313A74 LDR X1, [X26]
	0x03313A78 MOV X0, X19
	0x03313A7C MOV X3, X31
	0x03313A80 BL 0x32A8CA8
	0x03313A84 LDP X20, X19, [X31 + 0x40]
	0x03313A88 LDP X22, X21, [X31 + 0x30]
	0x03313A8C LDP X24, X23, [X31 + 0x20]
	0x03313A90 LDP X26, X25, [X31 + 0x10]
	0x03313A94 LDR X30, [X31], #0x50
	0x03313A98 RET
	0x03313A9C ADRP X0, 0xDE5000
	0x03313AA0 LDR X0, [X0 + 0x528]
	0x03313AA4 BL 0x1C16D08
	0x03313AA8 BL 0x1C16F10
	0x03313AAC MOV X19, X0
	0x03313AB0 ADRP X0, 0xE0A000
	0x03313AB4 LDR X0, [X0 + 0x2D8]
	0x03313AB8 BL 0x1C16D08
	0x03313ABC MOV X1, X0
	0x03313AC0 MOV X0, X19
	0x03313AC4 BL 0x330E100
	0x03313AC8 ADRP X0, 0xE14000
	0x03313ACC LDR X0, [X0 + 0xE28]
	0x03313AD0 BL 0x1C16D08
	0x03313AD4 MOV X1, X0
	0x03313AD8 MOV X0, X19
	0x03313ADC BL 0x1C16DEC
	0x03313AE0 STP X30, X23, [X31 - 0x30]!
	0x03313AE4 STP X22, X21, [X31 + 0x10]
	0x03313AE8 STP X20, X19, [X31 + 0x20]
	0x03313AEC ADRP X21, 0x10C9000
	0x03313AF0 LDRB W8, [X21 + 0xB63]
	0x03313AF4 MOV X20, X1
	0x03313AF8 MOV X19, X0
	0x03313AFC TBNZ X8, 0x0, 0x3313BBC
	0x03313B00 ADRP X0, 0xE09000
	0x03313B04 LDR X0, [X0 + 0x248]
	0x03313B08 BL 0x1C16CF4
	0x03313B0C ADRP X0, 0xDE0000
	0x03313B10 LDR X0, [X0 + 0xB58]
	0x03313B14 BL 0x1C16CF4
	0x03313B18 ADRP X0, 0xE07000
	0x03313B1C LDR X0, [X0 + 0xD68]
	0x03313B20 BL 0x1C16CF4
	0x03313B24 ADRP X0, 0xDE1000
	0x03313B28 LDR X0, [X0 + 0x9D8]
	0x03313B2C BL 0x1C16CF4
	0x03313B30 ADRP X0, 0xE11000
	0x03313B34 LDR X0, [X0 + 0xF38]
	0x03313B38 BL 0x1C16CF4
	0x03313B3C ADRP X0, 0xDE1000
	0x03313B40 LDR X0, [X0 + 0x9F0]
	0x03313B44 BL 0x1C16CF4
	0x03313B48 ADRP X0, 0xE14000
	0x03313B4C LDR X0, [X0 + 0xE30]
	0x03313B50 BL 0x1C16CF4
	0x03313B54 ADRP X0, 0xDE5000
	0x03313B58 LDR X0, [X0 + 0xB78]
	0x03313B5C BL 0x1C16CF4
	0x03313B60 ADRP X0, 0xDE0000
	0x03313B64 LDR X0, [X0 + 0x6C0]
	0x03313B68 BL 0x1C16CF4
	0x03313B6C ADRP X0, 0xE14000
	0x03313B70 LDR X0, [X0 + 0xDF8]
	0x03313B74 BL 0x1C16CF4
	0x03313B78 ADRP X0, 0xE14000
	0x03313B7C LDR X0, [X0 + 0xE00]
	0x03313B80 BL 0x1C16CF4
	0x03313B84 ADRP X0, 0xE14000
	0x03313B88 LDR X0, [X0 + 0xE08]
	0x03313B8C BL 0x1C16CF4
	0x03313B90 ADRP X0, 0xE14000
	0x03313B94 LDR X0, [X0 + 0xE10]
	0x03313B98 BL 0x1C16CF4
	0x03313B9C ADRP X0, 0xE14000
	0x03313BA0 LDR X0, [X0 + 0xE18]
	0x03313BA4 BL 0x1C16CF4
	0x03313BA8 ADRP X0, 0xE14000
	0x03313BAC LDR X0, [X0 + 0xE20]
	0x03313BB0 BL 0x1C16CF4
	0x03313BB4 MOVZ W8, 0x1
	0x03313BB8 STRB W8, [X21 + 0xB63]
	0x03313BBC CBZ X20, 0x3313E14
	0x03313BC0 ADRP X8, 0xDE0000
	0x03313BC4 LDR X8, [X8 + 0x6C0]
	0x03313BC8 ADRP X22, 0xE14000
	0x03313BCC LDR X0, [X8]
	0x03313BD0 ADRP X8, 0xE11000
	0x03313BD4 LDR X8, [X8 + 0xF38]
	0x03313BD8 LDR W9, [X0 + 0xE0]
	0x03313BDC LDR X21, [X8]
	0x03313BE0 LDR X22, [X22 + 0xE18]
	0x03313BE4 CBNZ W9, 0x3313BEC
	0x03313BE8 BL 0x1C16DFC
	0x03313BEC MOV X0, X21
	0x03313BF0 MOV X1, X31
	0x03313BF4 BL 0x338C698
	0x03313BF8 LDR X1, [X22]
	0x03313BFC MOV X2, X0
	0x03313C00 MOV X0, X20
	0x03313C04 MOV X3, X31
	0x03313C08 BL 0x32A9678
	0x03313C0C CBZ X0, 0x3313E0C
	0x03313C10 ADRP X8, 0xDE1000
	0x03313C14 LDR X8, [X8 + 0x9F0]
	0x03313C18 LDR X9, [X0]
	0x03313C1C LDR X1, [X8]
	0x03313C20 LDR X8, [X9 + 0x40]
	0x03313C24 LDR X9, [X1 + 0x40]
	0x03313C28 CMP X8, X9
	0x03313C2C B.NE 0x3313E10
	0x03313C30 ADRP X21, 0xE07000
	0x03313C34 ADRP X22, 0xE14000
	0x03313C38 LDR X21, [X21 + 0xD68]
	0x03313C3C LDR X22, [X22 + 0xDF8]
	0x03313C40 BL 0x1C16E08
	0x03313C44 LDR X8, [X0]
	0x03313C48 MOV X1, X31
	0x03313C4C STR X8, [X19]
	0x03313C50 LDR X0, [X21]
	0x03313C54 BL 0x338C698
	0x03313C58 LDR X1, [X22]
	0x03313C5C MOV X2, X0
	0x03313C60 MOV X0, X20
	0x03313C64 MOV X3, X31
	0x03313C68 BL 0x32A9678
	0x03313C6C CBZ X0, 0x3313E0C
	0x03313C70 ADRP X22, 0xDE1000
	0x03313C74 LDR X22, [X22 + 0x9D8]
	0x03313C78 LDR X8, [X0]
	0x03313C7C LDR X1, [X22]
	0x03313C80 LDR X8, [X8 + 0x40]
	0x03313C84 LDR X9, [X1 + 0x40]
	0x03313C88 CMP X8, X9

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X23, 0x10CA000
	009 Move [X31+48], X1
	010 Move [X31+56], X0
	011 Move [X31+40], X2
	012 Move X22, 0xDE2000
	013 Move W8, [X23+2907]
	014 Move X22, [X22+2544]
	015 Move W19, W5
	016 Move X21, X4
	017 Move X20, X3
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0xDE2000
	023 Move X0, [X0+2544]
	024 Call 0x1C17CF4
	025 Move X0, 0xDE3000
	026 Move X0, [X0+1392]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X23+2907], W8
	030 Move X0, [X22]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Add X0, X31, 56
	036 Move X1, X31
	037 Call DateTime.get_Kind, X0
	038 Compare W0, 0
	039 JumpIfEqual {49}
	040 Move X0, [X22]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Add X0, X31, 56
	046 Move X1, X31
	047 Call DateTime.get_Kind, X0
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X0, [X22]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Add X0, X31, 48
	055 Move X1, X31
	056 Call DateTime.get_Kind, X0
	057 Compare W0, 0
	058 JumpIfEqual {68}
	059 Move X0, [X22]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Add X0, X31, 48
	065 Move X1, X31
	066 Call DateTime.get_Kind, X0
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X8, [X21+16]
	069 Move V0, [X21]
	070 Add X1, X31, 16
	071 Move X0, X20
	072 Move [X31+32], X8
	073 Move [X31+1], V0
	074 Call TransitionTime.Equals, X0, X1
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfNotEqual {83}
	079 Move TEMP, X19
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfNotEqual {280}
	083 Move X0, [X22]
	084 Move X20, [X31+48]
	085 Move X19, [X31+56]
	086 Move W8, [X0+224]
	087 Compare W8, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1C17DFC
	090 Move X0, X19
	091 Move X1, X20
	092 Move X2, X31
	093 Call DateTime.op_GreaterThan, X0, X1
	094 Move TEMP, X0
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfEqual {291}
	098 Move X20, 0xDE3000
	099 Move X20, [X20+1392]
	100 Move X0, [X20]
	101 Move W8, [X0+224]
	102 Compare W8, 0
	103 JumpIfNotEqual {105}
	104 Call 0x1C17DFC
	105 Add X0, X31, 40
	106 Move X1, X31
	107 Call TimeSpan.get_TotalHours, X0
	108 Move D1, -16.000000001629815
	109 NotImplemented "Instruction FCMP not yet implemented."
	110 Move X0, [X20]
	111 Move W8, [X0+224]
	112 Compare W8, 0
	113 JumpIfNotEqual {115}
	114 Call 0x1C17DFC
	115 Add X0, X31, 40
	116 Move X1, X31
	117 Call TimeSpan.get_TotalHours, X0
	118 Move D1, 8.000000001396984
	119 NotImplemented "Instruction FCMP not yet implemented."
	120 Move X0, [X20]
	121 Move W8, [X0+224]
	122 Compare W8, 0
	123 JumpIfNotEqual {125}
	124 Call 0x1C17DFC
	125 Move X8, [X31+40]
	126 Move X9, 0x5A0B
	127 NotImplemented "Instruction MOVK not yet implemented."
	128 Move X10, 4096
	129 NotImplemented "Instruction MOVK not yet implemented."
	130 NotImplemented "Instruction MOVK not yet implemented."
	131 NotImplemented "Instruction MOVK not yet implemented."
	132 NotImplemented "Instruction MOVK not yet implemented."
	133 NotImplemented "Instruction MADD not yet implemented."
	134 Move X9, 0xF611
	135 NotImplemented "Instruction MOVK not yet implemented."
	136 NotImplemented "Instruction EXTR not yet implemented."
	137 NotImplemented "Instruction MOVK not yet implemented."
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X0, [X22]
	140 Move X19, [X31+56]
	141 Move W8, [X0+224]
	142 Compare W8, 0
	143 JumpIfNotEqual {146}
	144 Call 0x1C17DFC
	145 Move X0, [X22]
	146 Move X8, [X0+184]
	147 Move X0, X19
	148 Move X2, X31
	149 Move X1, [X8+16]
	150 Call DateTime.op_Inequality, X0, X1
	151 Move TEMP, X0
	152 And TEMP, TEMP, 1
	153 Compare TEMP, 1
	154 JumpIfNotEqual {190}
	155 Move X0, [X22]
	156 Move W8, [X0+224]
	157 Compare W8, 0
	158 JumpIfNotEqual {160}
	159 Call 0x1C17DFC
	160 Add X0, X31, 56
	161 Move X1, X31
	162 Call DateTime.get_Kind, X0
	163 Compare W0, 0
	164 JumpIfNotEqual {190}
	165 Move X0, [X22]
	166 Move W8, [X0+224]
	167 Compare W8, 0
	168 JumpIfNotEqual {170}
	169 Call 0x1C17DFC
	170 Add X0, X31, 56
	171 Move X1, X31
	172 Call DateTime.get_TimeOfDay, X0
	173 Move X8, [X20]
	174 Move X19, X0
	175 Move W9, [X8+224]
	176 Compare W9, 0
	177 JumpIfNotEqual {181}
	178 Move X0, X8
	179 Call 0x1C17DFC
	180 Move X8, [X20]
	181 Move X8, [X8+184]
	182 Move X0, X19
	183 Move X2, X31
	184 Move X1, [X8]
	185 Call TimeSpan.op_Inequality, X0, X1
	186 Move TEMP, X0
	187 And TEMP, TEMP, 1
	188 Compare TEMP, 1
	189 JumpIfEqual {323}
	190 Move X0, [X22]
	191 Move X19, [X31+48]
	192 Move W8, [X0+224]
	193 Compare W8, 0
	194 JumpIfNotEqual {197}
	195 Call 0x1C17DFC
	196 Move X0, [X22]
	197 Move X8, [X0+184]
	198 Move X0, X19
	199 Move X2, X31
	200 Move X1, [X8+24]
	201 Call DateTime.op_Inequality, X0, X1
	202 Move TEMP, X0
	203 And TEMP, TEMP, 1
	204 Compare TEMP, 1
	205 JumpIfNotEqual {241}
	206 Move X0, [X22]
	207 Move W8, [X0+224]
	208 Compare W8, 0
	209 JumpIfNotEqual {211}
	210 Call 0x1C17DFC
	211 Add X0, X31, 48
	212 Move X1, X31
	213 Call DateTime.get_Kind, X0
	214 Compare W0, 0
	215 JumpIfNotEqual {241}
	216 Move X0, [X22]
	217 Move W8, [X0+224]
	218 Compare W8, 0
	219 JumpIfNotEqual {221}
	220 Call 0x1C17DFC
	221 Add X0, X31, 48
	222 Move X1, X31
	223 Call DateTime.get_TimeOfDay, X0
	224 Move X8, [X20]
	225 Move X19, X0
	226 Move W9, [X8+224]
	227 Compare W9, 0
	228 JumpIfNotEqual {232}
	229 Move X0, X8
	230 Call 0x1C17DFC
	231 Move X8, [X20]
	232 Move X8, [X8+184]
	233 Move X0, X19
	234 Move X2, X31
	235 Move X1, [X8]
	236 Call TimeSpan.op_Inequality, X0, X1
	237 Move TEMP, X0
	238 And TEMP, TEMP, 1
	239 Compare TEMP, 1
	240 JumpIfEqual {334}
	241 Move X20, [X31+96]
	242 Move X19, [X31+104]
	243 Move X22, [X31+80]
	244 Move X21, [X31+88]
	245 Move X30, [X31+64]
	246 Move X23, [X31+72]
	247 Add X31, X31, 112
	248 Return 
	249 Move X8, [X31+40]
	250 Move X0, 0xDE3000
	251 Move [X31+8], X8
	252 Move X0, [X0+1392]
	253 Call 0x1C17D08
	254 Add X1, X31, 8
	255 Call 0x1C17E04
	256 Move X19, X0
	257 Move X0, 0xDE9000
	258 Move X0, [X0+1888]
	259 Call 0x1C17D08
	260 Call 0x1C17F10
	261 Move X20, X0
	262 Move X0, 0xE15000
	263 Move X0, [X0+3296]
	264 Call 0x1C17D08
	265 Move X21, X0
	266 Move X0, 0xE15000
	267 Move X0, [X0+2720]
	268 Call 0x1C17D08
	269 Move X3, X0
	270 Move X0, X20
	271 Move X1, X21
	272 Move X2, X19
	273 Call ArgumentOutOfRangeException..ctor, X0, X1, X2, X3
	274 Move X0, 0xE15000
	275 Move X0, [X0+3304]
	276 Call 0x1C17D08
	277 Move X1, X0
	278 Move X0, X20
	279 Call 0x1C17DEC
	280 Move X0, 0xDE9000
	281 Move X0, [X0+1400]
	282 Call 0x1C17D08
	283 Call 0x1C17F10
	284 Move X19, X0
	285 Move X0, 0xE15000
	286 Move X0, [X0+3312]
	287 Call 0x1C17D08
	288 Move X20, X0
	289 Move X0, 0xE15000
	290 Move X0, [X0+3320]
	291 Move X0, 0xDE9000
	292 Move X0, [X0+1400]
	293 Call 0x1C17D08
	294 Call 0x1C17F10
	295 Move X19, X0
	296 Move X0, 0xE15000
	297 Move X0, [X0+3328]
	298 Move X0, 0xDE9000
	299 Move X0, [X0+1400]
	300 Call 0x1C17D08
	301 Call 0x1C17F10
	302 Move X19, X0
	303 Move X0, 0xE15000
	304 Move X0, [X0+2728]
	305 Call 0x1C17D08
	306 Move X20, X0
	307 Move X0, 0xE15000
	308 Move X0, [X0+3296]
	309 Move X0, 0xDE9000
	310 Move X0, [X0+1400]
	311 Call 0x1C17D08
	312 Call 0x1C17F10
	313 Move X19, X0
	314 Move X0, 0xE15000
	315 Move X0, [X0+3336]
	316 Move X0, 0xDE9000
	317 Move X0, [X0+1400]
	318 Call 0x1C17D08
	319 Call 0x1C17F10
	320 Move X19, X0
	321 Move X0, 0xE15000
	322 Move X0, [X0+3336]
	323 Move X0, 0xDE9000
	324 Move X0, [X0+1400]
	325 Call 0x1C17D08
	326 Call 0x1C17F10
	327 Move X19, X0
	328 Move X0, 0xE15000
	329 Move X0, [X0+3344]
	330 Call 0x1C17D08
	331 Move X20, X0
	332 Move X0, 0xE15000
	333 Move X0, [X0+3352]
	334 Move X0, 0xDE9000
	335 Move X0, [X0+1400]
	336 Call 0x1C17D08
	337 Call 0x1C17F10
	338 Move X19, X0
	339 Move X0, 0xE15000
	340 Move X0, [X0+3344]
	341 Call 0x1C17D08
	342 Move X20, X0
	343 Move X0, 0xE15000
	344 Move X0, [X0+3360]
	345 Call 0x1C17D08
	346 Move X2, X0
	347 Move X0, X19
	348 Move X1, X20
	349 Call ArgumentException..ctor, X0, X1, X2
	350 Move X0, 0xE15000
	351 Move X0, [X0+3304]
	352 Call 0x1C17D08
	353 Move X1, X0
	354 Move X0, X19
	355 Call 0x1C17DEC

Method: System.Void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object sender)

Disassembly:
	0x03313CC8 LDR X8, [X0]
	0x03313CCC LDR X1, [X22]
	0x03313CD0 LDR X8, [X8 + 0x40]
	0x03313CD4 LDR X9, [X1 + 0x40]
	0x03313CD8 CMP X8, X9
	0x03313CDC B.NE 0x3313E10
	0x03313CE0 ADRP X23, 0xE14000
	0x03313CE4 LDR X23, [X23 + 0xE00]
	0x03313CE8 BL 0x1C16E08
	0x03313CEC LDRB W8, [X0]
	0x03313CF0 MOV X1, X31
	0x03313CF4 STRB W8, [X19 + 0x9]
	0x03313CF8 LDR X0, [X21]
	0x03313CFC BL 0x338C698
	0x03313D00 LDR X1, [X23]
	0x03313D04 MOV X2, X0
	0x03313D08 MOV X0, X20
	0x03313D0C MOV X3, X31
	0x03313D10 BL 0x32A9678
	0x03313D14 CBZ X0, 0x3313E0C
	0x03313D18 LDR X8, [X0]
	0x03313D1C LDR X1, [X22]
	0x03313D20 LDR X8, [X8 + 0x40]
	0x03313D24 LDR X9, [X1 + 0x40]
	0x03313D28 CMP X8, X9
	0x03313D2C B.NE 0x3313E10
	0x03313D30 ADRP X21, 0xE14000
	0x03313D34 ADRP X22, 0xE14000
	0x03313D38 LDR X21, [X21 + 0xE30]
	0x03313D3C LDR X22, [X22 + 0xE08]
	0x03313D40 BL 0x1C16E08
	0x03313D44 LDRB W8, [X0]
	0x03313D48 MOV X1, X31
	0x03313D4C STRB W8, [X19 + 0xA]
	0x03313D50 LDR X0, [X21]
	0x03313D54 BL 0x338C698
	0x03313D58 LDR X1, [X22]
	0x03313D5C MOV X2, X0
	0x03313D60 MOV X0, X20
	0x03313D64 MOV X3, X31
	0x03313D68 BL 0x32A9678
	0x03313D6C CBZ X0, 0x3313E0C
	0x03313D70 ADRP X8, 0xDE5000
	0x03313D74 LDR X8, [X8 + 0xB78]
	0x03313D78 LDR X9, [X0]
	0x03313D7C LDR X1, [X8]
	0x03313D80 LDR X8, [X9 + 0x40]
	0x03313D84 LDR X9, [X1 + 0x40]
	0x03313D88 CMP X8, X9
	0x03313D8C B.NE 0x3313E10
	0x03313D90 ADRP X21, 0xE09000
	0x03313D94 ADRP X22, 0xE14000
	0x03313D98 LDR X21, [X21 + 0x248]
	0x03313D9C LDR X22, [X22 + 0xE20]
	0x03313DA0 BL 0x1C16E08
	0x03313DA4 LDR W8, [X0]
	0x03313DA8 MOV X1, X31
	0x03313DAC STR W8, [X19 + 0xC]
	0x03313DB0 LDR X0, [X21]
	0x03313DB4 BL 0x338C698
	0x03313DB8 LDR X1, [X22]
	0x03313DBC MOV X2, X0
	0x03313DC0 MOV X0, X20
	0x03313DC4 MOV X3, X31
	0x03313DC8 BL 0x32A9678
	0x03313DCC CBZ X0, 0x3313E0C
	0x03313DD0 ADRP X8, 0xDE0000
	0x03313DD4 LDR X8, [X8 + 0xB58]
	0x03313DD8 LDR X9, [X0]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+80], X20
	004 Move [X31+88], X19
	005 NotImplemented "Instruction LDUR not yet implemented."
	006 Move X9, [X0+56]
	007 Move X8, [X0+16]
	008 Move X1, [X0+24]
	009 Move X2, [X0+32]
	010 Move [X31+2], V0
	011 Move [X31+48], X9
	012 Move X9, [X0+80]
	013 Move V0, [X0+4]
	014 Move [X31+16], X9
	015 Move [X31], V0
	016 Move W5, [X0+96]
	017 Add X3, X31, 32
	018 Add X4, X31, 0
	019 Move X0, X8
	020 Call AdjustmentRule.ValidateAdjustmentRule, X0, X1, X2, X3, X4, X5
	021 Move X20, [X31+80]
	022 Move X19, [X31+88]
	023 Move X30, [X31+64]
	024 Add X31, X31, 96
	025 Return 
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X19, X0
	028 Move X0, X19
	029 Call 0x3EB2AD0
	030 Move X19, X0
	031 Move X0, 0xDE9000
	032 Move X0, [X0+1400]
	033 Call 0x1C17D08
	034 Move X8, [X19]
	035 Move X1, [X8]
	036 Call 0x1C18270
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {62}
	041 Move X19, [X19]
	042 Call 0x3EB2AE0
	043 Move X0, 0xE0B000
	044 Move X0, [X0+736]
	045 Call 0x1C17D08
	046 Call 0x1C17F10
	047 Move X20, X0
	048 Move X0, 0xE15000
	049 Move X0, [X0+3200]
	050 Call 0x1C17D08
	051 Move X1, X0
	052 Move X0, X20
	053 Move X2, X19
	054 Move X3, X31
	055 Call SerializationException..ctor, X0, X1, X2
	056 Move X0, 0xE15000
	057 Move X0, [X0+3368]
	058 Call 0x1C17D08
	059 Move X1, X0
	060 Move X0, X20
	061 Call 0x1C17DEC
	062 Move W0, 8
	063 Call 0x3EB2AF0
	064 Move X8, [X19]
	065 Move [X0], X8
	066 Move X1, 0xBA2000
	067 Add X1, X1, 3672
	068 Move X2, X31
	069 Call 0x3EB2B00
	070 Move X19, X0
	071 Call 0x3EB2AE0
	072 Move X0, X19
	073 Call 0x1D2D690
	074 Call 0x1991590

Method: System.Void System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x03313DDC LDR X1, [X8]
	0x03313DE0 LDR X8, [X9 + 0x40]
	0x03313DE4 LDR X9, [X1 + 0x40]
	0x03313DE8 CMP X8, X9
	0x03313DEC B.NE 0x3313E10
	0x03313DF0 BL 0x1C16E08
	0x03313DF4 LDRB W8, [X0]
	0x03313DF8 LDP X22, X21, [X31 + 0x10]
	0x03313DFC STRB W8, [X19 + 0x10]
	0x03313E00 LDP X20, X19, [X31 + 0x20]
	0x03313E04 LDP X30, X23, [X31], #0x30
	0x03313E08 RET
	0x03313E0C BL 0x1C16F20
	0x03313E10 BL 0x1C171E0
	0x03313E14 ADRP X0, 0xDE5000
	0x03313E18 LDR X0, [X0 + 0x528]
	0x03313E1C BL 0x1C16D08
	0x03313E20 BL 0x1C16F10
	0x03313E24 MOV X19, X0
	0x03313E28 ADRP X0, 0xE0A000
	0x03313E2C LDR X0, [X0 + 0x2D8]
	0x03313E30 BL 0x1C16D08
	0x03313E34 MOV X1, X0
	0x03313E38 MOV X0, X19
	0x03313E3C BL 0x330E100
	0x03313E40 ADRP X0, 0xE14000
	0x03313E44 LDR X0, [X0 + 0xE38]
	0x03313E48 BL 0x1C16D08
	0x03313E4C MOV X1, X0
	0x03313E50 MOV X0, X19
	0x03313E54 BL 0x1C16DEC
	0x03313E58 SUB X31, X31, 0x60
	0x03313E5C STR X30, [X31 + 0x10]
	0x03313E60 STP X26, X25, [X31 + 0x20]
	0x03313E64 STP X24, X23, [X31 + 0x30]
	0x03313E68 STP X22, X21, [X31 + 0x40]
	0x03313E6C STP X20, X19, [X31 + 0x50]
	0x03313E70 ADRP X20, 0x10C9000
	0x03313E74 LDRB W8, [X20 + 0xB64]
	0x03313E78 MOV X19, X0
	0x03313E7C TBNZ X8, 0x0, 0x3313E94
	0x03313E80 ADRP X0, 0xE14000
	0x03313E84 LDR X0, [X0 + 0xA38]
	0x03313E88 BL 0x1C16CF4
	0x03313E8C MOVZ W8, 0x1
	0x03313E90 STRB W8, [X20 + 0xB64]
	0x03313E94 STRB W31, [X31 + 0x1C]
	0x03313E98 ADD X1, X31, 0x1C
	0x03313E9C MOV X0, X19
	0x03313EA0 MOV X2, X31
	0x03313EA4 BL 0x33DE64C
	0x03313EA8 LDR X20, [X19 + 0x10]
	0x03313EAC BL 0x1C16D44
	0x03313EB0 CBZ X20, 0x3313EBC
	0x03313EB4 MOV X21, X31
	0x03313EB8 B 0x3313F24
	0x03313EBC ADRP X20, 0xE14000
	0x03313EC0 LDR X20, [X20 + 0xA38]
	0x03313EC4 LDR X0, [X20]
	0x03313EC8 LDR W8, [X0 + 0xE0]
	0x03313ECC CBNZ W8, 0x3313ED4
	0x03313ED0 BL 0x1C16DFC
	0x03313ED4 BL 0x3308BAC
	0x03313ED8 CBZ X0, 0x3313F64
	0x03313EDC LDP X24, X21, [X0 + 0x28]
	0x03313EE0 LDP X26, X22, [X0 + 0x10]
	0x03313EE4 LDR X23, [X0 + 0x20]
	0x03313EE8 LDR X25, [X0 + 0x40]
	0x03313EEC LDR X0, [X20]
	0x03313EF0 BL 0x1C16F10
	0x03313EF4 MOV X20, X0
	0x03313EF8 MOV X1, X26
	0x03313EFC MOV X2, X21
	0x03313F00 MOV X3, X22
	0x03313F04 MOV X4, X23
	0x03313F08 MOV X5, X24
	0x03313F0C MOV X6, X25
	0x03313F10 MOV W7, W31
	0x03313F14 BL 0x330F3C0
	0x03313F18 BL 0x1C16D44
	0x03313F1C MOV X21, X31
	0x03313F20 STR X20, [X19 + 0x10]
	0x03313F24 LDRB W8, [X31 + 0x1C]
	0x03313F28 CBZ W8, 0x3313F38
	0x03313F2C MOV X0, X19
	0x03313F30 MOV X1, X31
	0x03313F34 BL 0x33E14E4
	0x03313F38 CBNZ X21, 0x3313F5C
	0x03313F3C MOV X0, X20
	0x03313F40 LDP X20, X19, [X31 + 0x50]
	0x03313F44 LDP X22, X21, [X31 + 0x40]
	0x03313F48 LDP X24, X23, [X31 + 0x30]
	0x03313F4C LDP X26, X25, [X31 + 0x20]
	0x03313F50 LDR X30, [X31 + 0x10]
	0x03313F54 ADD X31, X31, 0x60
	0x03313F58 RET
	0x03313F5C MOV X0, X21
	0x03313F60 BL 0x1C16F18
	0x03313F64 BL 0x1C16F20
	0x03313F68 B 0x3313F80
	0x03313F6C B 0x3313F80
	0x03313F70 B 0x3313F80
	0x03313F74 B 0x3313F80
	0x03313F78 B 0x3313F80
	0x03313F7C B 0x3313F80
	0x03313F80 MOV X20, X0
	0x03313F84 CMP W1, 0x1
	0x03313F88 B.NE 0x3313FA4
	0x03313F8C MOV X0, X20
	0x03313F90 BL 0x3EB1AD0
	0x03313F94 LDR X21, [X0]
	0x03313F98 BL 0x3EB1AE0
	0x03313F9C MOV X20, X31
	0x03313FA0 B 0x3313F24
	0x03313FA4 MOV X21, X31
	0x03313FA8 B 0x3313FB0
	0x03313FAC MOV X20, X0
	0x03313FB0 LDRB W8, [X31 + 0x1C]
	0x03313FB4 CBZ W8, 0x3313FC4
	0x03313FB8 MOV X0, X19
	0x03313FBC MOV X1, X31
	0x03313FC0 BL 0x33E14E4
	0x03313FC4 CBNZ X21, 0x3313FD0
	0x03313FC8 MOV X0, X20
	0x03313FCC BL 0x1D2C690
	0x03313FD0 MOV X0, X21
	0x03313FD4 BL 0x1C16F18
	0x03313FD8 BL 0x1990590
	0x03313FDC STR X30, [X31 - 0x30]!
	0x03313FE0 STP X22, X21, [X31 + 0x10]
	0x03313FE4 STP X20, X19, [X31 + 0x20]
	0x03313FE8 ADRP X21, 0x10C9000
	0x03313FEC LDRB W8, [X21 + 0xB66]
	0x03313FF0 MOV X20, X1
	0x03313FF4 MOV X19, X0
	0x03313FF8 TBNZ X8, 0x0, 0x3314010
	0x03313FFC ADRP X0, 0xE14000
	0x03314000 LDR X0, [X0 + 0xA38]
	0x03314004 BL 0x1C16CF4
	0x03314008 MOVZ W8, 0x1
	0x0331400C STRB W8, [X21 + 0xB66]
	0x03314010 LDR X1, [X19 + 0x10]
	0x03314014 MOVZ W2, 0x5
	0x03314018 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+80], X30
	003 Move [X31+96], X28
	004 Move [X31+104], X27
	005 Move [X31+112], X26
	006 Move [X31+120], X25
	007 Move [X31+128], X24
	008 Move [X31+136], X23
	009 Move [X31+144], X22
	010 Move [X31+152], X21
	011 Move [X31+160], X20
	012 Move [X31+168], X19
	013 Move X21, 0x10CA000
	014 Move W8, [X21+2908]
	015 Move X19, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {50}
	021 Move X0, 0xDE3000
	022 Move X0, [X0+1392]
	023 Call 0x1C17CF4
	024 Move X0, 0xE15000
	025 Move X0, [X0+3376]
	026 Call 0x1C17CF4
	027 Move X0, 0xE15000
	028 Move X0, [X0+3384]
	029 Call 0x1C17CF4
	030 Move X0, 0xE15000
	031 Move X0, [X0+3392]
	032 Call 0x1C17CF4
	033 Move X0, 0xE15000
	034 Move X0, [X0+3400]
	035 Call 0x1C17CF4
	036 Move X0, 0xE15000
	037 Move X0, [X0+3408]
	038 Call 0x1C17CF4
	039 Move X0, 0xE15000
	040 Move X0, [X0+3416]
	041 Call 0x1C17CF4
	042 Move X0, 0xE15000
	043 Move X0, [X0+3424]
	044 Call 0x1C17CF4
	045 Move X0, 0xE15000
	046 Move X0, [X0+3432]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X21+2908], W8
	050 Compare X19, 0
	051 JumpIfEqual {142}
	052 Move X8, 0xE15000
	053 Move X8, [X8+3424]
	054 Move X26, 0xE15000
	055 Move X22, 0xDE3000
	056 Move X27, 0xE15000
	057 Move X25, 0xE15000
	058 Move X28, 0xE15000
	059 Move X26, [X26+3432]
	060 Move X22, [X22+1392]
	061 Move X27, [X27+3392]
	062 Move X25, [X25+3376]
	063 Move X28, [X28+3384]
	064 Move X2, [X20+16]
	065 Move X1, [X8]
	066 Move X24, 0xE15000
	067 Move X23, 0xE15000
	068 Move X21, 0xE15000
	069 Move X24, [X24+3408]
	070 Move X23, [X23+3400]
	071 Move X21, [X21+3416]
	072 Move X0, X19
	073 Move X3, X31
	074 Call SerializationInfo.AddValue, X0, X1, X2
	075 Move X2, [X20+24]
	076 Move X1, [X26]
	077 Move X0, X19
	078 Move X3, X31
	079 Call SerializationInfo.AddValue, X0, X1, X2
	080 Move X8, [X20+32]
	081 Move X0, [X22]
	082 Add X1, X31, 88
	083 Move [X31+88], X8
	084 Call 0x1C17E04
	085 Move X1, [X27]
	086 Move X2, X0
	087 Move X0, X19
	088 Move X3, X31
	089 Call SerializationInfo.AddValue, X0, X1, X2
	090 Move X8, [X20+56]
	091 NotImplemented "Instruction LDUR not yet implemented."
	092 Move X0, [X25]
	093 Add X1, X31, 48
	094 Move [X31+64], X8
	095 Move [X31+3], V0
	096 Call 0x1C17E04
	097 Move X1, [X28]
	098 Move X2, X0
	099 Move X0, X19
	100 Move X3, X31
	101 Call SerializationInfo.AddValue, X0, X1, X2
	102 Move X8, [X20+80]
	103 Move V0, [X20+4]
	104 Move X0, [X25]
	105 Add X1, X31, 16
	106 Move [X31+32], X8
	107 Move [X31+1], V0
	108 Call 0x1C17E04
	109 Move X1, [X24]
	110 Move X2, X0
	111 Move X0, X19
	112 Move X3, X31
	113 Call SerializationInfo.AddValue, X0, X1, X2
	114 Move X8, [X20+88]
	115 Move X0, [X22]
	116 Add X1, X31, 8
	117 Move [X31+8], X8
	118 Call 0x1C17E04
	119 Move X1, [X23]
	120 Move X2, X0
	121 Move X0, X19
	122 Move X3, X31
	123 Call SerializationInfo.AddValue, X0, X1, X2
	124 Move W2, [X20+96]
	125 Move X1, [X21]
	126 Move X0, X19
	127 Move X3, X31
	128 Call SerializationInfo.AddValue, X0, X1, X2
	129 Move X20, [X31+160]
	130 Move X19, [X31+168]
	131 Move X22, [X31+144]
	132 Move X21, [X31+152]
	133 Move X24, [X31+128]
	134 Move X23, [X31+136]
	135 Move X26, [X31+112]
	136 Move X25, [X31+120]
	137 Move X28, [X31+96]
	138 Move X27, [X31+104]
	139 Move X30, [X31+80]
	140 Add X31, X31, 176
	141 Return 
	142 Move X0, 0xDE6000
	143 Move X0, [X0+1320]
	144 Call 0x1C17D08
	145 Call 0x1C17F10
	146 Move X19, X0
	147 Move X0, 0xE0B000
	148 Move X0, [X0+728]
	149 Call 0x1C17D08
	150 Move X1, X0
	151 Move X0, X19
	152 Call ArgumentNullException..ctor, X0, X1
	153 Move X0, 0xE14000
	154 Move X0, [X0+3440]
	155 Call 0x1C17D08
	156 Move X1, X0
	157 Move X0, X19
	158 Call 0x1C17DEC

Method: System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x0331401C MOV X3, X31
	0x03314020 BL 0x3226C60
	0x03314024 TBNZ X0, 0x0, 0x33140B8
	0x03314028 LDR X1, [X19 + 0x18]
	0x0331402C MOVZ W2, 0x5
	0x03314030 MOV X0, X20
	0x03314034 MOV X3, X31
	0x03314038 BL 0x3226C60
	0x0331403C TBNZ X0, 0x0, 0x33140B8
	0x03314040 ADRP X8, 0xE13000
	0x03314044 LDR X8, [X8 + 0xA38]
	0x03314048 LDP X22, X21, [X19 + 0x20]
	0x0331404C LDR X0, [X8]
	0x03314050 LDR W8, [X0 + 0xE0]
	0x03314054 CBNZ W8, 0x331405C
	0x03314058 BL 0x1C16DFC
	0x0331405C MOV X0, X20
	0x03314060 MOV X1, X22
	0x03314064 MOV X2, X21
	0x03314068 BL 0x3309D50
	0x0331406C TBZ X0, 0x0, 0x33140B8
	0x03314070 STR X20, [X19 + 0x30]
	0x03314074 CBZ X20, 0x33140CC
	0x03314078 LDR X1, [X19 + 0x38]
	0x0331407C MOVZ W2, 0x4
	0x03314080 MOV X0, X20
	0x03314084 MOV X3, X31
	0x03314088 BL 0x3226FBC
	0x0331408C TBZ X0, 0x0, 0x33140B0
	0x03314090 LDR X8, [X19 + 0x38]
	0x03314094 CBZ X8, 0x33140CC
	0x03314098 LDR X0, [X19 + 0x30]
	0x0331409C CBZ X0, 0x33140CC
	0x033140A0 LDR W1, [X8 + 0x10]
	0x033140A4 MOV X2, X31
	0x033140A8 BL 0x322B484
	0x033140AC STR X0, [X19 + 0x30]
	0x033140B0 MOVZ W0, 0x1
	0x033140B4 B 0x33140BC
	0x033140B8 MOV W0, W31
	0x033140BC LDP X20, X19, [X31 + 0x20]
	0x033140C0 LDP X22, X21, [X31 + 0x10]
	0x033140C4 LDR X30, [X31], #0x30
	0x033140C8 RET
	0x033140CC BL 0x1C16F20
	0x033140D0 STR X30, [X31 - 0x20]!
	0x033140D4 STP X20, X19, [X31 + 0x10]
	0x033140D8 ADRP X19, 0x10C8000
	0x033140DC ADRP X20, 0xE13000
	0x033140E0 LDRB W8, [X19 + 0xB67]
	0x033140E4 LDR X20, [X20 + 0xB38]
	0x033140E8 TBNZ X8, 0x0, 0x3314100
	0x033140EC ADRP X0, 0xE13000
	0x033140F0 LDR X0, [X0 + 0xB38]
	0x033140F4 BL 0x1C16CF4
	0x033140F8 MOVZ W8, 0x1
	0x033140FC STRB W8, [X19 + 0xB67]
	0x03314100 LDR X0, [X20]
	0x03314104 BL 0x1C16F10
	0x03314108 MOV X1, X31
	0x0331410C MOV X19, X0
	0x03314110 BL 0x33BDD8C
	0x03314114 LDR X8, [X20]
	0x03314118 LDR X8, [X8 + 0xB8]
	0x0331411C STR X19, [X8]
	0x03314120 LDP X20, X19, [X31 + 0x10]
	0x03314124 LDR X30, [X31], #0x20
	0x03314128 RET
	0x0331412C MOV X1, X31
	0x03314130 B 0x33BDD8C
	0x03314134 AND W8, W1, 0xFFFF
	0x03314138 CMP W8, 0x3E
	0x0331413C CSET W0, EQ
	0x03314140 RET
	0x03314144 STP X30, X21, [X31 - 0x20]!
	0x03314148 STP X20, X19, [X31 + 0x10]
	0x0331414C ADRP X21, 0x10C8000
	0x03314150 ADRP X20, 0xDE1000
	0x03314154 LDRB W8, [X21 + 0xB68]
	0x03314158 LDR X20, [X20 + 0x170]
	0x0331415C MOV W19, W1
	0x03314160 TBNZ X8, 0x0, 0x3314178
	0x03314164 ADRP X0, 0xDE1000
	0x03314168 LDR X0, [X0 + 0x170]
	0x0331416C BL 0x1C16CF4
	0x03314170 MOVZ W8, 0x1
	0x03314174 STRB W8, [X21 + 0xB68]
	0x03314178 LDR X0, [X20]
	0x0331417C LDR W8, [X0 + 0xE0]
	0x03314180 CBNZ W8, 0x3314188
	0x03314184 BL 0x1C16DFC
	0x03314188 MOV W0, W19
	0x0331418C BL 0x33141B4
	0x03314190 SUB W8, W19, 0x2B
	0x03314194 AND W8, W8, 0xFFFF
	0x03314198 CMP W8, 0x3
	0x0331419C LDP X20, X19, [X31 + 0x10]
	0x033141A0 CSET W8, CC
	0x033141A4 ORR W8, W8, W0, 0x0
	0x033141A8 AND W0, W8, 0x1
	0x033141AC LDP X30, X21, [X31], #0x20
	0x033141B0 RET
	0x033141B4 STP X30, X21, [X31 - 0x20]!
	0x033141B8 STP X20, X19, [X31 + 0x10]
	0x033141BC ADRP X20, 0x10C8000
	0x033141C0 ADRP X21, 0xDE1000
	0x033141C4 LDRB W8, [X20 + 0xBCC]
	0x033141C8 LDR X21, [X21 + 0x170]
	0x033141CC MOV W19, W0
	0x033141D0 TBNZ X8, 0x0, 0x33141E8
	0x033141D4 ADRP X0, 0xDE1000
	0x033141D8 LDR X0, [X0 + 0x170]
	0x033141DC BL 0x1C16CF4
	0x033141E0 MOVZ W8, 0x1
	0x033141E4 STRB W8, [X20 + 0xBCC]
	0x033141E8 LDR X0, [X21]
	0x033141EC LDR W8, [X0 + 0xE0]
	0x033141F0 CBNZ W8, 0x33141F8
	0x033141F4 BL 0x1C16DFC
	0x033141F8 AND W8, W19, 0xFFFF
	0x033141FC CMP W8, 0xFF
	0x03314200 B.HI 0x3314218
	0x03314204 SUB W8, W19, 0x30
	0x03314208 AND W8, W8, 0xFFFF
	0x0331420C CMP W8, 0xA
	0x03314210 CSET W0, CC
	0x03314214 B 0x331422C
	0x03314218 MOV W0, W19
	0x0331421C MOV X1, X31
	0x03314220 BL 0x330331C
	0x03314224 CMP W0, 0x8
	0x03314228 CSET W0, EQ
	0x0331422C LDP X20, X19, [X31 + 0x10]
	0x03314230 LDP X30, X21, [X31], #0x20
	0x03314234 RET
	0x03314238 STP X30, X21, [X31 - 0x20]!
	0x0331423C STP X20, X19, [X31 + 0x10]
	0x03314240 ADRP X21, 0x10C8000
	0x03314244 ADRP X20, 0xDE1000
	0x03314248 LDRB W8, [X21 + 0xB69]
	0x0331424C LDR X20, [X20 + 0x170]
	0x03314250 MOV W19, W1
	0x03314254 TBNZ X8, 0x0, 0x331426C
	0x03314258 ADRP X0, 0xDE1000
	0x0331425C LDR X0, [X0 + 0x170]
	0x03314260 BL 0x1C16CF4
	0x03314264 MOVZ W8, 0x1
	0x03314268 STRB W8, [X21 + 0xB69]
	0x0331426C LDR X0, [X20]
	0x03314270 LDR W8, [X0 + 0xE0]
	0x03314274 CBNZ W8, 0x331427C
	0x03314278 BL 0x1C16DFC
	0x0331427C MOV W0, W19
	0x03314280 BL 0x33141B4
	0x03314284 TBNZ X0, 0x0, 0x33142A4
	0x03314288 SUB W8, W19, 0x2B
	0x0331428C AND W9, W8, 0xFFFF
	0x03314290 CMP W9, 0xF
	0x03314294 B.HI 0x33142A4
	0x03314298 MOVZ W9, 0x7FFA
	0x0331429C LSRV W8, W9, W8
	0x033142A0 B 0x33142A8
	0x033142A4 ORN W8, W31, W0, 0x0
	0x033142A8 LDP X20, X19, [X31 + 0x10]
	0x033142AC AND W0, W8, 0x1
	0x033142B0 LDP X30, X21, [X31], #0x20
	0x033142B4 RET
	0x033142B8 AND W8, W1, 0xFFFF
	0x033142BC CMP W8, 0x2F
	0x033142C0 CSET W9, EQ
	0x033142C4 CMP W8, 0x2C
	0x033142C8 CSET W8, EQ
	0x033142CC ORR W0, W9, W8, 0x0
	0x033142D0 RET
	0x033142D4 AND W8, W1, 0xFFFF
	0x033142D8 CMP W8, 0x2C
	0x033142DC CSET W0, EQ
	0x033142E0 RET
	0x033142E4 SUB X31, X31, 0x30
	0x033142E8 STP X30, X21, [X31 + 0x10]
	0x033142EC STP X20, X19, [X31 + 0x20]
	0x033142F0 ADRP X21, 0x10C8000
	0x033142F4 LDRB W8, [X21 + 0xB6A]
	0x033142F8 MOV X19, X2
	0x033142FC MOV X20, X1
	0x03314300 TBNZ X8, 0x0, 0x3314318
	0x03314304 ADRP X0, 0xDE0000
	0x03314308 LDR X0, [X0 + 0x9F0]
	0x0331430C BL 0x1C16CF4
	0x03314310 MOVZ W8, 0x1
	0x03314314 STRB W8, [X21 + 0xB6A]
	0x03314318 CBZ X20, 0x3314364
	0x0331431C LDR X8, [X20 + 0x10]
	0x03314320 STR X8, [X31 + 0x8]
	0x03314324 CBZ X19, 0x3314364
	0x03314328 ADRP X8, 0xDE0000
	0x0331432C LDR X8, [X8 + 0x9F0]
	0x03314330 LDR X19, [X19 + 0x10]
	0x03314334 LDR X0, [X8]
	0x03314338 LDR W8, [X0 + 0xE0]
	0x0331433C CBNZ W8, 0x3314344
	0x03314340 BL 0x1C16DFC
	0x03314344 ADD X0, X31, 0x8
	0x03314348 MOV X1, X19
	0x0331434C MOV X2, X31
	0x03314350 BL 0x3360840
	0x03314354 LDP X20, X19, [X31 + 0x20]
	0x03314358 LDP X30, X21, [X31 + 0x10]
	0x0331435C ADD X31, X31, 0x30
	0x03314360 RET
	0x03314364 BL 0x1C16F20
	0x03314368 STP X30, X21, [X31 - 0x20]!
	0x0331436C STP X20, X19, [X31 + 0x10]
	0x03314370 LDR X8, [X2 + 0x8]
	0x03314374 STP X1, X2, [X0 + 0x20]
	0x03314378 MOV X19, X0
	0x0331437C MOV X20, X1
	0x03314380 STR X8, [X0 + 0x10]
	0x03314384 LDRB W21, [X2 + 0x52]
	0x03314388 STR X0, [X0 + 0x40]
	0x0331438C MOV X0, X2
	0x03314390 BL 0x1C16D84
	0x03314394 TBZ X0, 0x0, 0x33143AC
	0x03314398 CBNZ W21, 0x33143B0
	0x0331439C ADRP X8, 0xFFFFFFFFFE8A3000
	0x033143A0 ADD X8, X8, 0xEC0
	0x033143A4 STR X8, [X19 + 0x18]
	0x033143A8 B 0x33143C0
	0x033143AC CBZ X20, 0x33143D8
	0x033143B0 LDR X8, [X19 + 0x10]
	0x033143B4 LDR X9, [X19 + 0x20]
	0x033143B8 STR X8, [X19 + 0x18]
	0x033143BC STR X9, [X19 + 0x40]
	0x033143C0 ADRP X8, 0xFFFFFFFFFE8A3000
	0x033143C4 ADD X8, X8, 0xE80
	0x033143C8 STR X8, [X19 + 0x38]
	0x033143CC LDP X20, X19, [X31 + 0x10]
	0x033143D0 LDP X30, X21, [X31], #0x20
	0x033143D4 RET
	0x033143D8 ADRP X1, 0xFFFFFFFFFD807000
	0x033143DC ADD X1, X1, 0xEE3
	0x033143E0 MOV X0, X31
	0x033143E4 BL 0x1C16F3C
	0x033143E8 MOV X1, X31
	0x033143EC BL 0x1C16DEC
	0x033143F0 LDR X8, [X0 + 0x40]
	0x033143F4 LDR X2, [X0 + 0x18]
	0x033143F8 LDR X1, [X0 + 0x28]
	0x033143FC MOV X0, X8
	0x03314400 BR X2
	0x03314404 STR X30, [X31 - 0x30]!
	0x03314408 STP X22, X21, [X31 + 0x10]
	0x0331440C STP X20, X19, [X31 + 0x20]
	0x03314410 ADRP X21, 0x10C8000
	0x03314414 ADRP X20, 0xDDF000
	0x03314418 LDRB W8, [X21 + 0xB6B]
	0x0331441C LDR X20, [X20 + 0x7D0]
	0x03314420 MOV X19, X0
	0x03314424 TBNZ X8, 0x0, 0x331446C
	0x03314428 ADRP X0, 0xE13000
	0x0331442C LDR X0, [X0 + 0xE40]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x10C9000
	011 Move W8, [X21+2909]
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {68}
	018 Move X0, 0xE09000
	019 Move X0, [X0+584]
	020 Call 0x1C17CF4
	021 Move X0, 0xDE0000
	022 Move X0, [X0+2904]
	023 Call 0x1C17CF4
	024 Move X0, 0xE11000
	025 Move X0, [X0+3896]
	026 Call 0x1C17CF4
	027 Move X0, 0xDE1000
	028 Move X0, [X0+2544]
	029 Call 0x1C17CF4
	030 Move X0, 0xE12000
	031 Move X0, [X0+384]
	032 Call 0x1C17CF4
	033 Move X0, 0xDE2000
	034 Move X0, [X0+1392]
	035 Call 0x1C17CF4
	036 Move X0, 0xE14000
	037 Move X0, [X0+3448]
	038 Call 0x1C17CF4
	039 Move X0, 0xE14000
	040 Move X0, [X0+3376]
	041 Call 0x1C17CF4
	042 Move X0, 0xDE0000
	043 Move X0, [X0+1728]
	044 Call 0x1C17CF4
	045 Move X0, 0xE14000
	046 Move X0, [X0+3384]
	047 Call 0x1C17CF4
	048 Move X0, 0xE14000
	049 Move X0, [X0+3392]
	050 Call 0x1C17CF4
	051 Move X0, 0xE14000
	052 Move X0, [X0+3400]
	053 Call 0x1C17CF4
	054 Move X0, 0xE14000
	055 Move X0, [X0+3408]
	056 Call 0x1C17CF4
	057 Move X0, 0xE14000
	058 Move X0, [X0+3416]
	059 Call 0x1C17CF4
	060 Move X0, 0xE14000
	061 Move X0, [X0+3424]
	062 Call 0x1C17CF4
	063 Move X0, 0xE14000
	064 Move X0, [X0+3432]
	065 Call 0x1C17CF4
	066 Move W8, 1
	067 Move [X21+2909], W8
	068 Move X0, X19
	069 Move X1, X31
	070 Call Object..ctor, X0
	071 Compare X20, 0
	072 JumpIfEqual {259}
	073 Move X22, 0xDE0000
	074 Move X22, [X22+1728]
	075 Move X23, 0xE11000
	076 Move X24, 0xE14000
	077 Move X0, [X22]
	078 Move X23, [X23+3896]
	079 Move W8, [X0+224]
	080 Move X21, [X23]
	081 Move X24, [X24+3424]
	082 Compare W8, 0
	083 JumpIfNotEqual {85}
	084 Call 0x1C17DFC
	085 Move X0, X21
	086 Move X1, X31
	087 Call Type.GetTypeFromHandle, X0
	088 Move X1, [X24]
	089 Move X2, X0
	090 Move X0, X20
	091 Move X3, X31
	092 Call SerializationInfo.GetValue, X0, X1, X2
	093 Compare X0, 0
	094 JumpIfEqual {258}
	095 Move X21, 0xDE1000
	096 Move X21, [X21+2544]
	097 Move X8, [X0]
	098 Move X1, [X21]
	099 Move X8, [X8+64]
	100 Move X9, [X1+64]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X24, 0xE14000
	103 Move X24, [X24+3432]
	104 Call 0x1C17E08
	105 Move X8, [X0]
	106 Move X1, X31
	107 Move [X19+16], X8
	108 Move X0, [X23]
	109 Call Type.GetTypeFromHandle, X0
	110 Move X1, [X24]
	111 Move X2, X0
	112 Move X0, X20
	113 Move X3, X31
	114 Call SerializationInfo.GetValue, X0, X1, X2
	115 Compare X0, 0
	116 JumpIfEqual {258}
	117 Move X8, [X0]
	118 Move X1, [X21]
	119 Move X8, [X8+64]
	120 Move X9, [X1+64]
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move X21, 0xE12000
	123 Move X23, 0xE14000
	124 Move X21, [X21+384]
	125 Move X23, [X23+3392]
	126 Call 0x1C17E08
	127 Move X8, [X0]
	128 Move X1, X31
	129 Move [X19+24], X8
	130 Move X0, [X21]
	131 Call Type.GetTypeFromHandle, X0
	132 Move X1, [X23]
	133 Move X2, X0
	134 Move X0, X20
	135 Move X3, X31
	136 Call SerializationInfo.GetValue, X0, X1, X2
	137 Compare X0, 0
	138 JumpIfEqual {258}
	139 Move X23, 0xDE2000
	140 Move X23, [X23+1392]
	141 Move X8, [X0]
	142 Move X1, [X23]
	143 Move X8, [X8+64]
	144 Move X9, [X1+64]
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move X24, 0xE14000
	147 Move X25, 0xE14000
	148 Move X24, [X24+3448]
	149 Move X25, [X25+3384]
	150 Call 0x1C17E08
	151 Move X8, [X0]
	152 Move X1, X31
	153 Move [X19+32], X8
	154 Move X0, [X24]
	155 Call Type.GetTypeFromHandle, X0
	156 Move X1, [X25]
	157 Move X2, X0
	158 Move X0, X20
	159 Move X3, X31
	160 Call SerializationInfo.GetValue, X0, X1, X2
	161 Compare X0, 0
	162 JumpIfEqual {258}
	163 Move X25, 0xE14000
	164 Move X25, [X25+3376]
	165 Move X8, [X0]
	166 Move X1, [X25]
	167 Move X8, [X8+64]
	168 Move X9, [X1+64]
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Move X26, 0xE14000
	171 Move X26, [X26+3408]
	172 Call 0x1C17E08
	173 Move V0, [X0]
	174 Move X8, [X0+16]
	175 Move X1, X31
	176 Move [X19+40], V0
	177 Move [X19+56], X8
	178 Move X0, [X24]
	179 Call Type.GetTypeFromHandle, X0
	180 Move X1, [X26]
	181 Move X2, X0
	182 Move X0, X20
	183 Move X3, X31
	184 Call SerializationInfo.GetValue, X0, X1, X2
	185 Compare X0, 0
	186 JumpIfEqual {258}
	187 Move X8, [X0]
	188 Move X1, [X25]
	189 Move X8, [X8+64]
	190 Move X9, [X1+64]
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Move X24, 0xE14000
	193 Move X24, [X24+3400]
	194 Call 0x1C17E08
	195 Move V0, [X0]
	196 Move X8, [X0+16]
	197 Move X1, X31
	198 Move [X19+4], V0
	199 Move [X19+80], X8
	200 Move X0, [X21]
	201 Call Type.GetTypeFromHandle, X0
	202 Move X1, [X24]
	203 Move X2, X0
	204 Move X0, X20
	205 Move X3, X31
	206 Call SerializationInfo.GetValueNoThrow, X0, X1, X2
	207 Compare X0, 0
	208 JumpIfEqual {217}
	209 Move X8, [X0]
	210 Move X1, [X23]
	211 Move X8, [X8+64]
	212 Move X9, [X1+64]
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Call 0x1C17E08
	215 Move X8, [X0]
	216 Move [X19+88], X8
	217 Move X8, 0xE09000
	218 Move X0, [X22]
	219 Move X8, [X8+584]
	220 Move X22, 0xE14000
	221 Move W9, [X0+224]
	222 Move X21, [X8]
	223 Move X22, [X22+3416]
	224 Compare W9, 0
	225 JumpIfNotEqual {227}
	226 Call 0x1C17DFC
	227 Move X0, X21
	228 Move X1, X31
	229 Call Type.GetTypeFromHandle, X0
	230 Move X1, [X22]
	231 Move X2, X0
	232 Move X0, X20
	233 Move X3, X31
	234 Call SerializationInfo.GetValueNoThrow, X0, X1, X2
	235 Compare X0, 0
	236 JumpIfEqual {247}
	237 Move X8, 0xDE0000
	238 Move X8, [X8+2904]
	239 Move X9, [X0]
	240 Move X1, [X8]
	241 Move X8, [X9+64]
	242 Move X9, [X1+64]
	243 NotImplemented "Instruction CMP not yet implemented."
	244 Call 0x1C17E08
	245 Move W8, [X0]
	246 Move [X19+96], W8
	247 Move X20, [X31+64]
	248 Move X19, [X31+72]
	249 Move X22, [X31+48]
	250 Move X21, [X31+56]
	251 Move X24, [X31+32]
	252 Move X23, [X31+40]
	253 Move X26, [X31+16]
	254 Move X25, [X31+24]
	255 Move X30, [X31+80]
	256 Return 
	257 Call 0x1C181E0
	258 Call 0x1C17F20
	259 Move X0, 0xDE5000
	260 Move X0, [X0+1320]
	261 Call 0x1C17D08
	262 Call 0x1C17F10
	263 Move X19, X0
	264 Move X0, 0xE0A000
	265 Move X0, [X0+728]
	266 Call 0x1C17D08
	267 Move X1, X0
	268 Move X0, X19
	269 Call ArgumentNullException..ctor, X0, X1
	270 Move X0, 0xE14000
	271 Move X0, [X0+3456]
	272 Call 0x1C17D08
	273 Move X1, X0
	274 Move X0, X19
	275 Call 0x1C17DEC

Method: System.Void .ctor()

Disassembly:
	0x03314430 BL 0x1C16CF4
	0x03314434 ADRP X0, 0xDDF000
	0x03314438 LDR X0, [X0 + 0x7D0]
	0x0331443C BL 0x1C16CF4
	0x03314440 ADRP X0, 0xE13000
	0x03314444 LDR X0, [X0 + 0xE48]
	0x03314448 BL 0x1C16CF4
	0x0331444C ADRP X0, 0xE13000
	0x03314450 LDR X0, [X0 + 0xE50]
	0x03314454 BL 0x1C16CF4
	0x03314458 ADRP X0, 0xE13000
	0x0331445C LDR X0, [X0 + 0xE58]
	0x03314460 BL 0x1C16CF4
	0x03314464 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x10C9000
	005 Move X20, 0xE14000
	006 Move W8, [X19+2910]
	007 Move X20, [X20+3464]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xE14000
	013 Move X0, [X0+3464]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2910], W8
	017 Move X0, [X20]
	018 Call 0x1C17D9C

