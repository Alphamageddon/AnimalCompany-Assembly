Type: System.UnitySerializationHolder

Method: System.RuntimeType AddElementTypes(System.Runtime.Serialization.SerializationInfo info, System.RuntimeType type)

Disassembly:
	0x033BFB94 MOV X1, X20
	0x033BFB98 MOV X2, X19
	0x033BFB9C LDP X20, X19, [X31 + 0x20]
	0x033BFBA0 LDP X22, X21, [X31 + 0x10]
	0x033BFBA4 MOV X3, X31
	0x033BFBA8 LDR X30, [X31], #0x30
	0x033BFBAC B 0x3227E0C
	0x033BFBB0 STR X30, [X31 - 0x20]!
	0x033BFBB4 STP X20, X19, [X31 + 0x10]
	0x033BFBB8 ADRP X0, 0xD6D000
	0x033BFBBC LDR X0, [X0 + 0x548]
	0x033BFBC0 BL 0x1C16D08
	0x033BFBC4 MOV X19, X0
	0x033BFBC8 ADRP X0, 0xD34000
	0x033BFBCC LDR X0, [X0 + 0xB40]
	0x033BFBD0 BL 0x1C16D08
	0x033BFBD4 BL 0x1C16F10
	0x033BFBD8 MOV X1, X19
	0x033BFBDC MOV X2, X31
	0x033BFBE0 MOV X20, X0
	0x033BFBE4 BL 0x3379A44
	0x033BFBE8 ADRP X0, 0xD6D000
	0x033BFBEC LDR X0, [X0 + 0x550]
	0x033BFBF0 BL 0x1C16D08
	0x033BFBF4 MOV X1, X0
	0x033BFBF8 MOV X0, X20
	0x033BFBFC BL 0x1C16DEC
	0x033BFC00 STR X30, [X31 - 0x30]!
	0x033BFC04 STP X22, X21, [X31 + 0x10]
	0x033BFC08 STP X20, X19, [X31 + 0x20]
	0x033BFC0C ADRP X22, 0x101E000
	0x033BFC10 LDRB W8, [X22 + 0x215]
	0x033BFC14 MOV X20, X2
	0x033BFC18 MOV X21, X1
	0x033BFC1C MOV X19, X0
	0x033BFC20 TBNZ X8, 0x0, 0x33BFCA4
	0x033BFC24 ADRP X0, 0xD67000
	0x033BFC28 LDR X0, [X0 + 0x538]
	0x033BFC2C BL 0x1C16CF4
	0x033BFC30 ADRP X0, 0xD6C000
	0x033BFC34 LDR X0, [X0 + 0xDC8]
	0x033BFC38 BL 0x1C16CF4
	0x033BFC3C ADRP X0, 0xD66000
	0x033BFC40 LDR X0, [X0 + 0xD90]
	0x033BFC44 BL 0x1C16CF4
	0x033BFC48 ADRP X0, 0xD66000
	0x033BFC4C LDR X0, [X0 + 0xE00]
	0x033BFC50 BL 0x1C16CF4
	0x033BFC54 ADRP X0, 0xD6D000
	0x033BFC58 LDR X0, [X0 + 0x558]
	0x033BFC5C BL 0x1C16CF4
	0x033BFC60 ADRP X0, 0xD34000
	0x033BFC64 LDR X0, [X0 + 0x6C0]
	0x033BFC68 BL 0x1C16CF4
	0x033BFC6C ADRP X0, 0xD6D000
	0x033BFC70 LDR X0, [X0 + 0x560]
	0x033BFC74 BL 0x1C16CF4
	0x033BFC78 ADRP X0, 0xD6D000
	0x033BFC7C LDR X0, [X0 + 0x568]
	0x033BFC80 BL 0x1C16CF4
	0x033BFC84 ADRP X0, 0xD67000
	0x033BFC88 LDR X0, [X0 + 0x180]
	0x033BFC8C BL 0x1C16CF4
	0x033BFC90 ADRP X0, 0xD60000
	0x033BFC94 LDR X0, [X0 + 0x128]
	0x033BFC98 BL 0x1C16CF4
	0x033BFC9C MOVZ W8, 0x1
	0x033BFCA0 STRB W8, [X22 + 0x215]
	0x033BFCA4 LDR W8, [X19 + 0x48]
	0x033BFCA8 SUB W8, W8, 0x1
	0x033BFCAC CMP W8, 0x7
	0x033BFCB0 B.HI 0x33C00BC
	0x033BFCB4 ADRP X9, 0xFFFFFFFFFD7D7000
	0x033BFCB8 ADD X9, X9, 0x8F8
	0x033BFCBC ADR X10, 0x10
	0x033BFCC0 LDRB W11, [X9, X8, LSL]
	0x033BFCC4 ADD X10, X10, X11, 0x2, LSL
	0x033BFCC8 BR X10
	0x033BFCCC ADRP X19, 0xD6C000
	0x033BFCD0 LDR X19, [X19 + 0xDC8]
	0x033BFCD4 B 0x33BFCEC
	0x033BFCD8 ADRP X19, 0xD67000
	0x033BFCDC LDR X19, [X19 + 0x538]
	0x033BFCE0 B 0x33BFCEC
	0x033BFCE4 ADRP X19, 0xD66000
	0x033BFCE8 LDR X19, [X19 + 0xD90]
	0x033BFCEC LDR X0, [X19]
	0x033BFCF0 LDR W8, [X0 + 0xE0]
	0x033BFCF4 CBNZ W8, 0x33BFD00
	0x033BFCF8 BL 0x1C16DFC
	0x033BFCFC LDR X0, [X19]
	0x033BFD00 LDR X8, [X0 + 0xB8]
	0x033BFD04 LDR X21, [X8]
	0x033BFD08 B 0x33C0050
	0x033BFD0C LDR X20, [X19 + 0x38]
	0x033BFD10 CBZ X20, 0x33C0098
	0x033BFD14 LDR W8, [X20 + 0x10]
	0x033BFD18 CBZ W8, 0x33C0098
	0x033BFD1C LDR X0, [X19 + 0x40]
	0x033BFD20 CBZ X0, 0x33C00A8
	0x033BFD24 LDR W8, [X0 + 0x10]
	0x033BFD28 CBZ W8, 0x33BFFAC
	0x033BFD2C MOV X1, X31
	0x033BFD30 BL 0x32D59A8
	0x033BFD34 CBZ X0, 0x33C00A4
	0x033BFD38 LDR X8, [X0]
	0x033BFD3C LDR X1, [X19 + 0x38]
	0x033BFD40 LDP X20, X19, [X31 + 0x20]
	0x033BFD44 LDP X22, X21, [X31 + 0x10]
	0x033BFD48 LDR X5, [X8 + 0x278]
	0x033BFD4C LDR X4, [X8 + 0x280]
	0x033BFD50 MOVZ W2, 0x1
	0x033BFD54 MOV W3, W31
	0x033BFD58 LDR X30, [X31], #0x30
	0x033BFD5C BR X5
	0x033BFD60 LDR X8, [X19 + 0x38]
	0x033BFD64 CBZ X8, 0x33C0098
	0x033BFD68 LDR W8, [X8 + 0x10]
	0x033BFD6C CBZ W8, 0x33C0098
	0x033BFD70 LDR X0, [X19 + 0x40]
	0x033BFD74 CBZ X0, 0x33C00A8
	0x033BFD78 MOV X1, X31
	0x033BFD7C BL 0x32D59A8
	0x033BFD80 CBZ X0, 0x33C00A4
	0x033BFD84 LDR X8, [X0]
	0x033BFD88 LDR X1, [X19 + 0x38]
	0x033BFD8C LDR X9, [X8 + 0x288]
	0x033BFD90 LDR X2, [X8 + 0x290]
	0x033BFD94 BLR X9
	0x033BFD98 ADRP X8, 0xD66000
	0x033BFD9C LDR X8, [X8 + 0xE00]
	0x033BFDA0 MOV X21, X0
	0x033BFDA4 LDR X8, [X8]
	0x033BFDA8 LDR W9, [X8 + 0xE0]
	0x033BFDAC CBNZ W9, 0x33BFDB8
	0x033BFDB0 MOV X0, X8
	0x033BFDB4 BL 0x1C16DFC
	0x033BFDB8 MOV X0, X21
	0x033BFDBC MOV X1, X31
	0x033BFDC0 MOV X2, X31
	0x033BFDC4 BL 0x32CEF44
	0x033BFDC8 TBZ X0, 0x0, 0x33C0050
	0x033BFDCC ADRP X0, 0xD34000
	0x033BFDD0 LDR X0, [X0 + 0x9D0]
	0x033BFDD4 BL 0x1C16D08
	0x033BFDD8 MOVZ W1, 0x2
	0x033BFDDC BL 0x1C16D6C
	0x033BFDE0 LDR X20, [X19 + 0x38]
	0x033BFDE4 MOV X21, X0
	0x033BFDE8 BL 0x19903C0
	0x033BFDEC MOV X0, X21
	0x033BFDF0 MOV X1, X20
	0x033BFDF4 BL 0x19980B4
	0x033BFDF8 MOV X0, X21
	0x033BFDFC MOV X1, X31
	0x033BFE00 MOV X2, X20
	0x033BFE04 BL 0x1993444
	0x033BFE08 LDR X19, [X19 + 0x40]
	0x033BFE0C MOV X0, X21
	0x033BFE10 BL 0x19903C0
	0x033BFE14 MOV X0, X21
	0x033BFE18 MOV X1, X19
	0x033BFE1C BL 0x19980B4
	0x033BFE20 MOVZ W1, 0x1
	0x033BFE24 MOV X0, X21
	0x033BFE28 MOV X2, X19
	0x033BFE2C BL 0x1993444
	0x033BFE30 ADRP X0, 0xD6D000
	0x033BFE34 LDR X0, [X0 + 0x570]
	0x033BFE38 BL 0x1C16D08
	0x033BFE3C MOV X1, X21
	0x033BFE40 BL 0x33BFB40
	0x033BFE44 MOV X19, X0
	0x033BFE48 ADRP X0, 0xD5E000
	0x033BFE4C LDR X0, [X0 + 0x2E0]
	0x033BFE50 BL 0x1C16D08
	0x033BFE54 BL 0x1C16F10
	0x033BFE58 MOV X1, X19
	0x033BFE5C MOV X2, X31
	0x033BFE60 MOV X20, X0
	0x033BFE64 BL 0x329F100
	0x033BFE68 B 0x33C00EC
	0x033BFE6C LDR X8, [X19 + 0x38]
	0x033BFE70 CBZ X8, 0x33C0098
	0x033BFE74 LDR W8, [X8 + 0x10]
	0x033BFE78 CBZ W8, 0x33C0098
	0x033BFE7C LDR X0, [X19 + 0x40]
	0x033BFE80 CBZ X0, 0x33C00A8
	0x033BFE84 LDP X20, X19, [X31 + 0x20]
	0x033BFE88 LDP X22, X21, [X31 + 0x10]
	0x033BFE8C MOV X1, X31
	0x033BFE90 LDR X30, [X31], #0x30
	0x033BFE94 B 0x32D59A8
	0x033BFE98 LDR X8, [X19]
	0x033BFE9C MOVZ W9, 0x4
	0x033BFEA0 STR W9, [X19 + 0x48]
	0x033BFEA4 MOV X0, X19
	0x033BFEA8 LDP X9, X3, [X8 + 0x1A8]
	0x033BFEAC MOV X1, X21
	0x033BFEB0 MOV X2, X20
	0x033BFEB4 BLR X9
	0x033BFEB8 ADRP X8, 0xD34000
	0x033BFEBC LDR X8, [X8 + 0x6C0]
	0x033BFEC0 LDR X8, [X8]
	0x033BFEC4 CBZ X0, 0x33BFEDC
	0x033BFEC8 LDR X9, [X0]
	0x033BFECC LDRB W10, [X8 + 0x130]
	0x033BFED0 LDRB W11, [X9 + 0x130]
	0x033BFED4 CMP W11, W10
	0x033BFED8 B.CS 0x33BFFF8
	0x033BFEDC MOV X20, X31
	0x033BFEE0 B 0x33C000C
	0x033BFEE4 LDR X0, [X19 + 0x30]
	0x033BFEE8 MOV X1, X31
	0x033BFEEC MOV X2, X31
	0x033BFEF0 BL 0x32CE12C
	0x033BFEF4 TBZ X0, 0x0, 0x33BFF28
	0x033BFEF8 ADRP X8, 0xD34000
	0x033BFEFC LDR X8, [X8 + 0x6C0]
	0x033BFF00 LDR X20, [X19 + 0x28]
	0x033BFF04 LDR X0, [X8]
	0x033BFF08 LDR W8, [X0 + 0xE0]
	0x033BFF0C CBNZ W8, 0x33BFF14
	0x033BFF10 BL 0x1C16DFC
	0x033BFF14 MOV X0, X20
	0x033BFF18 MOV X1, X31
	0x033BFF1C MOV X2, X31
	0x033BFF20 BL 0x3395194
	0x033BFF24 TBNZ X0, 0x0, 0x33C0104
	0x033BFF28 LDR X0, [X19 + 0x30]
	0x033BFF2C MOV X1, X31
	0x033BFF30 MOV X2, X31
	0x033BFF34 BL 0x32CE114
	0x033BFF38 TBZ X0, 0x0, 0x33BFF74
	0x033BFF3C LDR X0, [X19 + 0x30]
	0x033BFF40 CBZ X0, 0x33C00A4
	0x033BFF44 LDR X8, [X0]
	0x033BFF48 LDR X9, [X8 + 0x2F8]
	0x033BFF4C LDR X1, [X8 + 0x300]
	0x033BFF50 BLR X9
	0x033BFF54 CBZ X0, 0x33C00A4
	0x033BFF58 LDRSW X8, [X19 + 0x20]
	0x033BFF5C LDR W9, [X0 + 0x18]
	0x033BFF60 CMP W8, W9
	0x033BFF64 B.CS 0x33C00B8

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X22, 0x101F000
	012 Move X23, 0xD36000
	013 Move X21, 0xD39000
	014 Move W8, [X22+528]
	015 Move X23, [X23+3632]
	016 Move X21, [X21+2928]
	017 Move X19, X1
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {49}
	023 Move X0, 0xD67000
	024 Move X0, [X0+336]
	025 Call 0x1C17CF4
	026 Move X0, 0xD36000
	027 Move X0, [X0+3600]
	028 Call 0x1C17CF4
	029 Move X0, 0xD36000
	030 Move X0, [X0+3608]
	031 Call 0x1C17CF4
	032 Move X0, 0xD39000
	033 Move X0, [X0+2928]
	034 Call 0x1C17CF4
	035 Move X0, 0xD36000
	036 Move X0, [X0+3632]
	037 Call 0x1C17CF4
	038 Move X0, 0xD5E000
	039 Move X0, [X0+1256]
	040 Call 0x1C17CF4
	041 Move X0, 0xD35000
	042 Move X0, [X0+1728]
	043 Call 0x1C17CF4
	044 Move X0, 0xD6E000
	045 Move X0, [X0+1272]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X22+528], W8
	049 Move X0, [X23]
	050 Call 0x1C17F10
	051 Move X1, [X21]
	052 Move X21, X0
	053 Call List`1<Int32>..ctor, X0
	054 Compare X19, 0
	055 JumpIfEqual {273}
	056 Move X0, X19
	057 Move X1, X31
	058 Call Type.get_HasElementType, X0
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {229}
	063 Move X22, 0xD36000
	064 Move X24, 0xD5E000
	065 Move X22, [X22+3600]
	066 Move X24, [X24+1256]
	067 Move W23, 3
	068 Move W25, 2
	069 Move W26, 1
	070 Move W27, 4
	071 Move X8, [X19]
	072 Move X0, X19
	073 Move X9, [X8+2312]
	074 Move X1, [X8+2320]
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {96}
	080 Compare X21, 0
	081 JumpIfEqual {273}
	082 Move W10, [X21+28]
	083 Move X8, [X21+16]
	084 Move X9, [X22]
	085 Add W10, W10, 1
	086 Move [X21+28], W10
	087 Compare X8, 0
	088 JumpIfEqual {273}
	089 NotImplemented "Instruction LDRSW not yet implemented."
	090 Move W11, [X8+24]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Add W9, W10, 1
	093 Add X8, X8, X10
	094 Move [X21+24], W9
	095 Move [X8+32], W23
	096 Move X0, X19
	097 Move X1, X31
	098 Call Type.get_IsArray, X0
	099 Move TEMP, X0
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfNotEqual {128}
	103 Move X8, [X19]
	104 Move X0, X19
	105 Move X9, [X8+1080]
	106 Move X1, [X8+1088]
	107 NotImplemented "Instruction BLR not yet implemented."
	108 Compare X21, 0
	109 JumpIfEqual {273}
	110 Move W10, [X21+28]
	111 Move X8, [X21+16]
	112 Move X9, [X22]
	113 Add W10, W10, 1
	114 Move [X21+28], W10
	115 Compare X8, 0
	116 JumpIfEqual {273}
	117 NotImplemented "Instruction LDRSW not yet implemented."
	118 Move W11, [X8+24]
	119 Move W1, W0
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Add W11, W10, 1
	122 Add X10, X8, X10
	123 Move [X21+24], W11
	124 Move [X10+32], W1
	125 Move W10, [X21+28]
	126 Add W10, W10, 1
	127 Move [X21+28], W10
	128 Move X0, X19
	129 Move X1, X31
	130 Call Type.get_IsPointer, X0
	131 Move TEMP, X0
	132 And TEMP, TEMP, 1
	133 Compare TEMP, 1
	134 JumpIfNotEqual {153}
	135 Compare X21, 0
	136 JumpIfEqual {273}
	137 Move W10, [X21+28]
	138 Move X8, [X21+16]
	139 Move X9, [X22]
	140 Add W10, W10, 1
	141 Move [X21+28], W10
	142 Compare X8, 0
	143 JumpIfEqual {273}
	144 NotImplemented "Instruction LDRSW not yet implemented."
	145 Move W11, [X8+24]
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Add W9, W10, 1
	148 Add X8, X8, X10
	149 Move [X21+24], W9
	150 Move [X8+32], W26
	151 Move X8, [X9+32]
	152 Move W1, 3
	153 Move X0, X19
	154 Move X1, X31
	155 Call Type.get_IsByRef, X0
	156 Move TEMP, X0
	157 And TEMP, TEMP, 1
	158 Compare TEMP, 1
	159 JumpIfNotEqual {205}
	160 Compare X21, 0
	161 JumpIfEqual {273}
	162 Move W10, [X21+28]
	163 Move X8, [X21+16]
	164 Move X9, [X22]
	165 Add W10, W10, 1
	166 Move [X21+28], W10
	167 Compare X8, 0
	168 JumpIfEqual {273}
	169 NotImplemented "Instruction LDRSW not yet implemented."
	170 Move W11, [X8+24]
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Add W9, W10, 1
	173 Add X8, X8, X10
	174 Move [X21+24], W9
	175 Move [X8+32], W27
	176 Move X8, [X9+32]
	177 Move X0, X21
	178 Move X8, [X8+192]
	179 Move X2, [X8+112]
	180 Call List`1<Int32>.AddWithResize, X0, X1
	181 Move W10, [X21+28]
	182 Move X8, [X21+16]
	183 Move X9, [X22]
	184 Add W10, W10, 1
	185 Move [X21+28], W10
	186 Compare X8, 0
	187 JumpIfEqual {273}
	188 NotImplemented "Instruction LDRSW not yet implemented."
	189 Move W11, [X8+24]
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Add W9, W10, 1
	192 Add X8, X8, X10
	193 Move [X21+24], W9
	194 Move [X8+32], W25
	195 Move X8, [X9+32]
	196 Move W1, 2
	197 Move X8, [X9+32]
	198 Move W1, 1
	199 Move X8, [X9+32]
	200 Move W1, 4
	201 Move X8, [X8+192]
	202 Move X2, [X8+112]
	203 Move X0, X21
	204 Call List`1<Int32>.AddWithResize, X0, X1
	205 Move X8, [X19]
	206 Move X0, X19
	207 Move X9, [X8+1064]
	208 Move X1, [X8+1072]
	209 NotImplemented "Instruction BLR not yet implemented."
	210 Compare X0, 0
	211 JumpIfEqual {273}
	212 Move X8, [X0]
	213 Move X1, [X24]
	214 Move X19, X0
	215 Move W10, [X8+304]
	216 Move W9, [X1+304]
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Move X8, [X8+200]
	219 Add X8, X8, X9
	220 NotImplemented "Instruction LDUR not yet implemented."
	221 NotImplemented "Instruction CMP not yet implemented."
	222 Move X0, X19
	223 Move X1, X31
	224 Call Type.get_HasElementType, X0
	225 Move TEMP, X0
	226 And TEMP, TEMP, 1
	227 Compare TEMP, 1
	228 JumpIfEqual {71}
	229 Compare X21, 0
	230 JumpIfEqual {273}
	231 Move X8, 0xD36000
	232 Move X8, [X8+3608]
	233 Move X22, 0xD67000
	234 Move X23, 0xD35000
	235 Move X0, X21
	236 Move X1, [X8]
	237 Move X22, [X22+336]
	238 Move X23, [X23+1728]
	239 Call List`1<Int32>.ToArray, X0
	240 Move X8, [X23]
	241 Move X22, [X22]
	242 Move X21, X0
	243 Move W9, [X8+224]
	244 Compare W9, 0
	245 JumpIfNotEqual {248}
	246 Move X0, X8
	247 Call 0x1C17DFC
	248 Move X0, X22
	249 Move X1, X31
	250 Call Type.GetTypeFromHandle, X0
	251 Compare X20, 0
	252 JumpIfEqual {273}
	253 Move X8, 0xD6E000
	254 Move X8, [X8+1272]
	255 Move X3, X0
	256 Move X0, X20
	257 Move X2, X21
	258 Move X1, [X8]
	259 Move X4, X31
	260 Call SerializationInfo.AddValue, X0, X1, X2, X3
	261 Move X0, X19
	262 Move X20, [X31+64]
	263 Move X19, [X31+72]
	264 Move X22, [X31+48]
	265 Move X21, [X31+56]
	266 Move X24, [X31+32]
	267 Move X23, [X31+40]
	268 Move X26, [X31+16]
	269 Move X25, [X31+24]
	270 Move X30, [X31+80]
	271 Move X27, [X31+88]
	272 Return X0
	273 Call 0x1C17F20
	274 Move X0, X19
	275 Call 0x1C181E0

Method: System.Type MakeElementTypes(System.Type type)

Disassembly:
	0x033BFF68 ADD X8, X0, X8, 0x3, LSL
	0x033BFF6C LDR X21, [X8 + 0x20]
	0x033BFF70 B 0x33C0050
	0x033BFF74 LDR X0, [X19 + 0x28]
	0x033BFF78 CBZ X0, 0x33C00A4
	0x033BFF7C LDR X8, [X0]
	0x033BFF80 LDR X9, [X8 + 0x468]
	0x033BFF84 LDR X1, [X8 + 0x470]
	0x033BFF88 BLR X9
	0x033BFF8C CBZ X0, 0x33C00A4
	0x033BFF90 LDRSW X8, [X19 + 0x20]
	0x033BFF94 LDR W9, [X0 + 0x18]
	0x033BFF98 CMP W8, W9
	0x033BFF9C B.CS 0x33C00B8
	0x033BFFA0 ADD X8, X0, X8, 0x3, LSL
	0x033BFFA4 LDR X1, [X8 + 0x20]
	0x033BFFA8 B 0x33C0084
	0x033BFFAC ADRP X8, 0xD34000
	0x033BFFB0 LDR X8, [X8 + 0x6C0]
	0x033BFFB4 LDR X0, [X8]
	0x033BFFB8 LDR W8, [X0 + 0xE0]
	0x033BFFBC CBNZ W8, 0x33BFFC4
	0x033BFFC0 BL 0x1C16DFC
	0x033BFFC4 ADRP X8, 0xD6D000
	0x033BFFC8 ADRP X9, 0xD6D000
	0x033BFFCC LDR X8, [X8 + 0x558]
	0x033BFFD0 LDR X9, [X9 + 0x560]
	0x033BFFD4 MOV X0, X20
	0x033BFFD8 LDP X20, X19, [X31 + 0x20]
	0x033BFFDC LDR X3, [X8]
	0x033BFFE0 LDR X4, [X9]
	0x033BFFE4 LDP X22, X21, [X31 + 0x10]
	0x033BFFE8 MOVZ W1, 0x1
	0x033BFFEC MOV W2, W31
	0x033BFFF0 LDR X30, [X31], #0x30
	0x033BFFF4 B 0x1C17148
	0x033BFFF8 LDR X9, [X9 + 0xC8]
	0x033BFFFC ADD X9, X9, X10, 0x3, LSL
	0x033C0000 LDUR X9, [X9 - 0x8]
	0x033C0004 CMP X9, X8
	0x033C0008 CSEL X20, X0, X31, EQ
	0x033C000C LDR X9, [X19 + 0x10]
	0x033C0010 MOVZ W10, 0x8
	0x033C0014 STR W10, [X19 + 0x48]
	0x033C0018 CBZ X9, 0x33C00A4
	0x033C001C LDR W10, [X9 + 0x18]
	0x033C0020 CBZ W10, 0x33C00B8
	0x033C0024 LDR W10, [X8 + 0xE0]
	0x033C0028 LDR X21, [X9 + 0x20]
	0x033C002C CBNZ W10, 0x33C0038
	0x033C0030 MOV X0, X8
	0x033C0034 BL 0x1C16DFC
	0x033C0038 MOV X0, X21
	0x033C003C MOV X1, X31
	0x033C0040 MOV X2, X31
	0x033C0044 BL 0x3395194
	0x033C0048 MOV X21, X31
	0x033C004C TBZ X0, 0x0, 0x33C0064
	0x033C0050 MOV X0, X21
	0x033C0054 LDP X20, X19, [X31 + 0x20]
	0x033C0058 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X0+24]
	007 Compare X8, 0
	008 JumpIfEqual {56}
	009 Move W22, [X8+24]
	010 Move X19, X0
	011 Move X0, X1
	012 Subtract W21, W22, 1
	013 Move X20, -42106880
	014 Add X20, X20, 2292
	015 Move W9, [X8+24]
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Add X10, X8, W21
	018 Move W10, [X10+32]
	019 Subtract W10, W10, 1
	020 NotImplemented "Instruction CMP not yet implemented."
	021 NotImplemented "Instruction ADR not yet implemented."
	022 Move W12, [X20]
	023 Add X11, X11, X12
	024 CallNoReturn X11
	025 Compare X0, 0
	026 JumpIfEqual {56}
	027 Move X8, [X0]
	028 Move X9, [X8+2280]
	029 Move X1, [X8+2288]
	030 Subtract W22, W22, 2
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Compare X0, 0
	033 JumpIfEqual {56}
	034 Move X9, [X0]
	035 Add X8, X8, W22
	036 Move W1, [X8+32]
	037 Move X8, [X9+2232]
	038 Move X2, [X9+2240]
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Compare X0, 0
	041 JumpIfEqual {56}
	042 Move X8, [X0]
	043 Move X9, [X8+2216]
	044 Move X1, [X8+2224]
	045 Compare X0, 0
	046 JumpIfEqual {56}
	047 Move X8, [X0]
	048 Move X9, [X8+2248]
	049 Move X1, [X8+2256]
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Move W22, W21
	052 Subtract W21, W22, 1
	053 Move X8, [X19+24]
	054 Compare X8, 0
	055 JumpIfNotEqual {15}
	056 Call 0x1C17F20
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X30, [X31+48]
	062 Return X0
	063 Call 0x1C17F28

Method: System.Void GetUnitySerializationInfo(System.Runtime.Serialization.SerializationInfo info, System.Int32 unityType)

Disassembly:
	0x033C005C LDR X30, [X31], #0x30
	0x033C0060 RET
	0x033C0064 CBZ X20, 0x33C00A4
	0x033C0068 LDR X8, [X20]
	0x033C006C LDR X1, [X19 + 0x10]
	0x033C0070 MOV X0, X20
	0x033C0074 LDR X9, [X8 + 0x8D8]
	0x033C0078 LDR X2, [X8 + 0x8E0]
	0x033C007C BLR X9
	0x033C0080 MOV X1, X0
	0x033C0084 MOV X0, X19
	0x033C0088 LDP X20, X19, [X31 + 0x20]
	0x033C008C LDP X22, X21, [X31 + 0x10]
	0x033C0090 LDR X30, [X31], #0x30
	0x033C0094 B 0x33BEF68
	0x033C0098 ADRP X8, 0xD5F000
	0x033C009C LDR X8, [X8 + 0x128]
	0x033C00A0 B 0x33C00B0
	0x033C00A4 BL 0x1C16F20
	0x033C00A8 ADRP X8, 0xD66000
	0x033C00AC LDR X8, [X8 + 0x180]
	0x033C00B0 LDR X1, [X8]
	0x033C00B4 BL 0x33BFAAC
	0x033C00B8 BL 0x1C16F28
	0x033C00BC ADRP X0, 0xD6C000
	0x033C00C0 LDR X0, [X0 + 0x578]
	0x033C00C4 BL 0x1C16D08
	0x033C00C8 MOV X19, X0
	0x033C00CC ADRP X0, 0xD3B000
	0x033C00D0 LDR X0, [X0 + 0x578]
	0x033C00D4 BL 0x1C16D08
	0x033C00D8 BL 0x1C16F10
	0x033C00DC MOV X1, X19
	0x033C00E0 MOV X2, X31
	0x033C00E4 MOV X20, X0
	0x033C00E8 BL 0x3314A68
	0x033C00EC ADRP X0, 0xD6C000
	0x033C00F0 LDR X0, [X0 + 0x560]
	0x033C00F4 BL 0x1C16D08
	0x033C00F8 MOV X1, X0
	0x033C00FC MOV X0, X20
	0x033C0100 BL 0x1C16DEC
	0x033C0104 ADRP X8, 0xD6C000
	0x033C0108 LDR X8, [X8 + 0x568]
	0x033C010C B 0x33C00B0
	0x033C0110 MOV W0, W31
	0x033C0114 RET
	0x033C0118 RET
	0x033C011C RET
	0x033C0120 B 0x1C247E4
	0x033C0124 B 0x1C243A8
	0x033C0128 B 0x1C243A8
	0x033C012C AND W1, W1, 0x1
	0x033C0130 B 0x1C24744
	0x033C0134 MOV W1, W31
	0x033C0138 B 0x1C24744
	0x033C013C B 0x1C24410
	0x033C0140 MOV X0, X31
	0x033C0144 RET
	0x033C0148 AND W3, W3, 0x1
	0x033C014C B 0x1C24654
	0x033C0150 STR X30, [X31 - 0x10]!
	0x033C0154 MOVZ W8, 0x1
	0x033C0158 ADD X4, X31, 0xC
	0x033C015C MOV X2, X31
	0x033C0160 MOV W3, W31
	0x033C0164 STR W8, [X31 + 0xC]
	0x033C0168 BL 0x33C0174
	0x033C016C LDR X30, [X31], #0x10
	0x033C0170 RET
	0x033C0174 STR X30, [X31 - 0x20]!
	0x033C0178 STP X20, X19, [X31 + 0x10]
	0x033C017C CBZ X1, 0x33C01BC
	0x033C0180 LDR W8, [X1 + 0x10]
	0x033C0184 MOV X19, X1
	0x033C0188 CBZ W8, 0x33C01F0
	0x033C018C AND W3, W3, 0x1
	0x033C0190 MOV X1, X19
	0x033C0194 BL 0x1C24654
	0x033C0198 MOV X1, X31
	0x033C019C MOV X2, X31
	0x033C01A0 MOV X20, X0
	0x033C01A4 BL 0x32D5BF8
	0x033C01A8 TBNZ X0, 0x0, 0x33C0238
	0x033C01AC MOV X0, X20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X23, 0x101E000
	010 Move X21, 0xD6D000
	011 Move X22, 0xD34000
	012 Move W8, [X23+529]
	013 Move X21, [X21+1280]
	014 Move X22, [X22+1728]
	015 Move W20, W1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {44}
	021 Move X0, 0xD5C000
	022 Move X0, [X0+2912]
	023 Call 0x1C17CF4
	024 Move X0, 0xD36000
	025 Move X0, [X0+632]
	026 Call 0x1C17CF4
	027 Move X0, 0xD34000
	028 Move X0, [X0+1728]
	029 Call 0x1C17CF4
	030 Move X0, 0xD6D000
	031 Move X0, [X0+1280]
	032 Call 0x1C17CF4
	033 Move X0, 0xD67000
	034 Move X0, [X0+384]
	035 Call 0x1C17CF4
	036 Move X0, 0xD6D000
	037 Move X0, [X0+1288]
	038 Call 0x1C17CF4
	039 Move X0, 0xD60000
	040 Move X0, [X0+296]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X23+529], W8
	044 Move X0, [X22]
	045 Move X21, [X21]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, X21
	051 Move X1, X31
	052 Call Type.GetTypeFromHandle, X0
	053 Compare X19, 0
	054 JumpIfEqual {99}
	055 Move X21, 0xD5C000
	056 Move X22, 0xD60000
	057 Move X23, 0xD6D000
	058 Move X24, 0xD36000
	059 Move X25, 0xD67000
	060 Move X21, [X21+2912]
	061 Move X22, [X22+296]
	062 Move X23, [X23+1288]
	063 Move X24, [X24+632]
	064 Move X25, [X25+384]
	065 Move X1, X0
	066 Move X0, X19
	067 Move X2, X31
	068 Call SerializationInfo.SetType, X0, X1
	069 Move X0, [X21]
	070 Move X1, X31
	071 Call Type.GetTypeFromHandle, X0
	072 Move X1, [X22]
	073 Move X3, X0
	074 Move X0, X19
	075 Move X2, X31
	076 Move X4, X31
	077 Call SerializationInfo.AddValue, X0, X1, X2, X3
	078 Move X1, [X23]
	079 Move X0, X19
	080 Move W2, W20
	081 Move X3, X31
	082 Call SerializationInfo.AddValue, X0, X1, X2
	083 Move X8, [X24]
	084 Move X1, [X25]
	085 Move X0, X19
	086 Move X20, [X31+48]
	087 Move X19, [X31+56]
	088 Move X8, [X8+184]
	089 Move X22, [X31+32]
	090 Move X21, [X31+40]
	091 Move X24, [X31+16]
	092 Move X23, [X31+24]
	093 Move X3, X31
	094 Move X2, [X8]
	095 Move X30, [X31+64]
	096 Move X25, [X31+72]
	097 Call SerializationInfo.AddValue, X0, X1, X2
	098 Return 
	099 Call 0x1C17F20

Method: System.Void GetUnitySerializationInfo(System.Runtime.Serialization.SerializationInfo info, System.RuntimeType type)

Disassembly:
	0x033C01B0 LDP X20, X19, [X31 + 0x10]
	0x033C01B4 LDR X30, [X31], #0x20
	0x033C01B8 RET
	0x033C01BC ADRP X0, 0xD38000
	0x033C01C0 LDR X0, [X0 + 0x528]
	0x033C01C4 BL 0x1C16D08
	0x033C01C8 BL 0x1C16F10
	0x033C01CC MOV X19, X0
	0x033C01D0 ADRP X0, 0xD6C000
	0x033C01D4 LDR X0, [X0 + 0x580]
	0x033C01D8 BL 0x1C16D08
	0x033C01DC MOV X1, X0
	0x033C01E0 MOV X0, X19
	0x033C01E4 MOV X2, X31
	0x033C01E8 BL 0x330E100
	0x033C01EC B 0x33C0220
	0x033C01F0 ADRP X0, 0xD3B000
	0x033C01F4 LDR X0, [X0 + 0x578]
	0x033C01F8 BL 0x1C16D08
	0x033C01FC BL 0x1C16F10
	0x033C0200 MOV X19, X0
	0x033C0204 ADRP X0, 0xD6C000
	0x033C0208 LDR X0, [X0 + 0x588]
	0x033C020C BL 0x1C16D08
	0x033C0210 MOV X1, X0
	0x033C0214 MOV X0, X19
	0x033C0218 MOV X2, X31
	0x033C021C BL 0x3314A68
	0x033C0220 ADRP X0, 0xD6C000
	0x033C0224 LDR X0, [X0 + 0x590]
	0x033C0228 BL 0x1C16D08
	0x033C022C MOV X1, X0
	0x033C0230 MOV X0, X19
	0x033C0234 BL 0x1C16DEC
	0x033C0238 ADRP X0, 0xD61000
	0x033C023C LDR X0, [X0 + 0x7A0]
	0x033C0240 BL 0x1C16D08
	0x033C0244 BL 0x1C16F10
	0x033C0248 MOV X1, X31
	0x033C024C MOV X2, X19
	0x033C0250 MOV X3, X31
	0x033C0254 MOV X20, X0
	0x033C0258 BL 0x32E1E8C
	0x033C025C ADRP X0, 0xD6C000
	0x033C0260 LDR X0, [X0 + 0x590]
	0x033C0264 BL 0x1C16D08
	0x033C0268 MOV X1, X0
	0x033C026C MOV X0, X20
	0x033C0270 BL 0x1C16DEC
	0x033C0274 B 0x1C243F0
	0x033C0278 B 0x1C243D8
	0x033C027C B 0x1C24820
	0x033C0280 B 0x1C24808
	0x033C0284 B 0x1C247CC
	0x033C0288 B 0x1C247C8
	0x033C028C B 0x1C247C8
	0x033C0290 B 0x1C247F0
	0x033C0294 SUB X31, X31, 0x40
	0x033C0298 STP X30, X23, [X31 + 0x10]
	0x033C029C STP X22, X21, [X31 + 0x20]
	0x033C02A0 STP X20, X19, [X31 + 0x30]
	0x033C02A4 ADRP X19, 0x101D000
	0x033C02A8 LDRB W8, [X19 + 0x216]
	0x033C02AC MOV X21, X3
	0x033C02B0 MOV X22, X2
	0x033C02B4 MOV X20, X1
	0x033C02B8 MOV W23, W0
	0x033C02BC TBNZ X8, 0x0, 0x33C02D4
	0x033C02C0 ADRP X0, 0xD64000
	0x033C02C4 LDR X0, [X0 + 0x9A0]
	0x033C02C8 BL 0x1C16CF4
	0x033C02CC MOVZ W8, 0x1
	0x033C02D0 STRB W8, [X19 + 0x216]
	0x033C02D4 STR X31, [X31 + 0x8]
	0x033C02D8 BL 0x1C243A8
	0x033C02DC MOV X19, X0
	0x033C02E0 MOV W0, W23
	0x033C02E4 BL 0x1C24820
	0x033C02E8 MOV W0, W23
	0x033C02EC BL 0x1C243F0
	0x033C02F0 CBZ X20, 0x33C0384
	0x033C02F4 ADRP X9, 0xD64000
	0x033C02F8 LDR X9, [X9 + 0x9A0]
	0x033C02FC LDR X8, [X20]
	0x033C0300 LDR X1, [X9]
	0x033C0304 LDRB W10, [X8 + 0x130]
	0x033C0308 LDRB W9, [X1 + 0x130]
	0x033C030C CMP W10, W9
	0x033C0310 B.CC 0x33C0374
	0x033C0314 LDR X8, [X8 + 0xC8]
	0x033C0318 ADD X8, X8, X9, 0x3, LSL
	0x033C031C LDUR X8, [X8 - 0x8]
	0x033C0320 CMP X8, X1
	0x033C0324 B.NE 0x33C0374
	0x033C0328 ADD X3, X31, 0x8
	0x033C032C MOV X0, X20
	0x033C0330 MOV X1, X22
	0x033C0334 MOV X2, X21
	0x033C0338 MOV X4, X31
	0x033C033C BL 0x32DB04C
	0x033C0340 LDR X21, [X31 + 0x8]
	0x033C0344 CBNZ X21, 0x33C0388
	0x033C0348 MOV X20, X0
	0x033C034C MOV X0, X19
	0x033C0350 BL 0x1C243D8
	0x033C0354 BL 0x1C24808
	0x033C0358 MOV X0, X20
	0x033C035C CBNZ X21, 0x33C037C
	0x033C0360 LDP X20, X19, [X31 + 0x30]
	0x033C0364 LDP X22, X21, [X31 + 0x20]
	0x033C0368 LDP X30, X23, [X31 + 0x10]
	0x033C036C ADD X31, X31, 0x40
	0x033C0370 RET
	0x033C0374 MOV X0, X20
	0x033C0378 BL 0x1C171E0
	0x033C037C MOV X0, X21
	0x033C0380 BL 0x1C16F18
	0x033C0384 BL 0x1C16F20
	0x033C0388 ADRP X0, 0xD6C000
	0x033C038C LDR X0, [X0 + 0x598]
	0x033C0390 BL 0x1C16D08
	0x033C0394 MOV X1, X0
	0x033C0398 MOV X0, X21
	0x033C039C BL 0x1C16DEC
	0x033C03A0 B 0x33C03B8
	0x033C03A4 B 0x33C03B8
	0x033C03A8 B 0x33C03B8
	0x033C03AC MOV X20, X0
	0x033C03B0 MOVZ W22, 0x1
	0x033C03B4 B 0x33C03C0
	0x033C03B8 MOV X20, X0
	0x033C03BC MOV W22, W31
	0x033C03C0 CMP W1, 0x1
	0x033C03C4 B.NE 0x33C03F0
	0x033C03C8 MOV X0, X20
	0x033C03CC BL 0x3EB1AD0
	0x033C03D0 LDR X21, [X0]
	0x033C03D4 BL 0x3EB1AE0
	0x033C03D8 MOV X0, X19
	0x033C03DC BL 0x1C243D8
	0x033C03E0 MOV X20, X31
	0x033C03E4 MOV X0, X31
	0x033C03E8 TBZ X22, 0x0, 0x33C0354
	0x033C03EC B 0x33C035C
	0x033C03F0 MOV X21, X31
	0x033C03F4 B 0x33C03FC
	0x033C03F8 MOV X20, X0
	0x033C03FC MOV X0, X19
	0x033C0400 BL 0x1C243D8
	0x033C0404 TBNZ X22, 0x0, 0x33C040C
	0x033C0408 BL 0x1C24808
	0x033C040C CBNZ X21, 0x33C0418
	0x033C0410 MOV X0, X20
	0x033C0414 BL 0x1D2C690
	0x033C0418 MOV X0, X21
	0x033C041C BL 0x1C16F18
	0x033C0420 BL 0x1990590
	0x033C0424 SUB X31, X31, 0x30
	0x033C0428 STR X30, [X31 + 0x10]
	0x033C042C STP X20, X19, [X31 + 0x20]
	0x033C0430 ADRP X20, 0x101D000
	0x033C0434 ADRP X19, 0xD6C000
	0x033C0438 LDRB W8, [X20 + 0x217]
	0x033C043C LDR X19, [X19 + 0x5A0]
	0x033C0440 TBNZ X8, 0x0, 0x33C0458
	0x033C0444 ADRP X0, 0xD6C000
	0x033C0448 LDR X0, [X0 + 0x5A0]
	0x033C044C BL 0x1C16CF4
	0x033C0450 MOVZ W8, 0x1
	0x033C0454 STRB W8, [X20 + 0x217]
	0x033C0458 LDR X8, [X19]
	0x033C045C STP X31, X31, [X31]
	0x033C0460 LDR X8, [X8 + 0xB8]
	0x033C0464 LDR X0, [X8]
	0x033C0468 CBNZ X0, 0x33C049C
	0x033C046C BL 0x337684C
	0x033C0470 STP X0, X1, [X31]
	0x033C0474 ADD X0, X31, 0x0
	0x033C0478 MOV X1, X31
	0x033C047C BL 0x337866C
	0x033C0480 BL 0x1C247F0
	0x033C0484 LDR X8, [X19]
	0x033C0488 LDR X8, [X8 + 0xB8]
	0x033C048C STR X0, [X8]
	0x033C0490 LDR X8, [X19]
	0x033C0494 LDR X8, [X8 + 0xB8]
	0x033C0498 LDR X0, [X8]
	0x033C049C LDP X20, X19, [X31 + 0x20]
	0x033C04A0 LDR X30, [X31 + 0x10]
	0x033C04A4 ADD X31, X31, 0x30
	0x033C04A8 RET
	0x033C04AC B 0x1C24408
	0x033C04B0 STR X30, [X31 - 0x10]!
	0x033C04B4 MOV X0, X31
	0x033C04B8 BL 0x33E6FD8
	0x033C04BC LDR X30, [X31], #0x10
	0x033C04C0 B 0x1C24408
	0x033C04C4 MOV X0, X31
	0x033C04C8 B 0x33E6FD8
	0x033C04CC B 0x1C247E4
	0x033C04D0 STR X30, [X31 - 0x30]!
	0x033C04D4 STP X22, X21, [X31 + 0x10]
	0x033C04D8 STP X20, X19, [X31 + 0x20]
	0x033C04DC ADRP X21, 0x101D000
	0x033C04E0 LDRB W8, [X21 + 0x218]
	0x033C04E4 MOV X20, X1
	0x033C04E8 MOV X19, X0
	0x033C04EC TBNZ X8, 0x0, 0x33C0504
	0x033C04F0 ADRP X0, 0xD6C000
	0x033C04F4 LDR X0, [X0 + 0x5A8]
	0x033C04F8 BL 0x1C16CF4
	0x033C04FC MOVZ W8, 0x1
	0x033C0500 STRB W8, [X21 + 0x218]
	0x033C0504 LDR X22, [X19 + 0x38]
	0x033C0508 CBZ X22, 0x33C0550
	0x033C050C ADRP X8, 0xD6C000
	0x033C0510 LDR X8, [X8 + 0x5A8]
	0x033C0514 LDR X0, [X8]
	0x033C0518 BL 0x1C16F10
	0x033C051C MOV X1, X20
	0x033C0520 MOV X2, X31
	0x033C0524 MOV X21, X0
	0x033C0528 BL 0x33163EC
	0x033C052C LDR X4, [X22 + 0x18]
	0x033C0530 LDR X0, [X22 + 0x40]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x101E000
	007 Move W8, [X21+530]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {49}
	014 Move X0, 0xD6D000
	015 Move X0, [X0+1296]
	016 Call 0x1C17CF4
	017 Move X0, 0xD5D000
	018 Move X0, [X0+1256]
	019 Call 0x1C17CF4
	020 Move X0, 0xD66000
	021 Move X0, [X0+392]
	022 Call 0x1C17CF4
	023 Move X0, 0xD67000
	024 Move X0, [X0+280]
	025 Call 0x1C17CF4
	026 Move X0, 0xD34000
	027 Move X0, [X0+1728]
	028 Call 0x1C17CF4
	029 Move X0, 0xD6D000
	030 Move X0, [X0+1280]
	031 Call 0x1C17CF4
	032 Move X0, 0xD6D000
	033 Move X0, [X0+1304]
	034 Call 0x1C17CF4
	035 Move X0, 0xD6D000
	036 Move X0, [X0+1312]
	037 Call 0x1C17CF4
	038 Move X0, 0xD6D000
	039 Move X0, [X0+1320]
	040 Call 0x1C17CF4
	041 Move X0, 0xD6D000
	042 Move X0, [X0+1288]
	043 Call 0x1C17CF4
	044 Move X0, 0xD67000
	045 Move X0, [X0+400]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X21+530], W8
	049 Compare X20, 0
	050 JumpIfEqual {249}
	051 Move X0, X20
	052 Move X1, X31
	053 Call Type.GetRootElementType, X0
	054 Compare X0, 0
	055 JumpIfEqual {249}
	056 Move X8, [X0]
	057 Move X9, [X8+936]
	058 Move X1, [X8+944]
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {155}
	064 Move X0, X19
	065 Move X1, X20
	066 Call UnitySerializationHolder.AddElementTypes, X0, X1
	067 Move X8, 0xD34000
	068 Move X8, [X8+1728]
	069 Move X9, 0xD6D000
	070 Move X20, X0
	071 Move X8, [X8]
	072 Move X9, [X9+1280]
	073 Move W10, [X8+224]
	074 Move X21, [X9]
	075 Compare W10, 0
	076 JumpIfNotEqual {79}
	077 Move X0, X8
	078 Call 0x1C17DFC
	079 Move X0, X21
	080 Move X1, X31
	081 Call Type.GetTypeFromHandle, X0
	082 Compare X19, 0
	083 JumpIfEqual {249}
	084 Move X1, X0
	085 Move X0, X19
	086 Move X2, X31
	087 Call SerializationInfo.SetType, X0, X1
	088 Move X8, 0xD6D000
	089 Move X8, [X8+1288]
	090 Move W2, 7
	091 Move X0, X19
	092 Move X3, X31
	093 Move X1, [X8]
	094 Call SerializationInfo.AddValue, X0, X1, X2
	095 Compare X20, 0
	096 JumpIfEqual {249}
	097 Move X8, [X20]
	098 Move X0, X20
	099 Move X9, [X8+1144]
	100 Move X1, [X8+1152]
	101 NotImplemented "Instruction BLR not yet implemented."
	102 Move X8, 0xD6D000
	103 Move X8, [X8+1304]
	104 Move W2, W0
	105 Move X0, X19
	106 Move X3, X31
	107 Move X1, [X8]
	108 Call SerializationInfo.AddValue, X0, X1, X2
	109 Move X8, [X20]
	110 Move X0, X20
	111 Move X9, [X8+792]
	112 Move X1, [X8+800]
	113 NotImplemented "Instruction BLR not yet implemented."
	114 Move X8, 0xD6D000
	115 Move X8, [X8+1296]
	116 Move X21, X0
	117 Move X1, X31
	118 Move X8, [X8]
	119 Move X0, X8
	120 Call Type.GetTypeFromHandle, X0
	121 Move X8, 0xD6D000
	122 Move X8, [X8+1312]
	123 Move X3, X0
	124 Move X0, X19
	125 Move X2, X21
	126 Move X1, [X8]
	127 Move X4, X31
	128 Call SerializationInfo.AddValue, X0, X1, X2, X3
	129 Move X8, [X20]
	130 Move X0, X20
	131 Move X9, [X8+440]
	132 Move X1, [X8+448]
	133 NotImplemented "Instruction BLR not yet implemented."
	134 Move X8, 0xD67000
	135 Move X8, [X8+280]
	136 Move X20, X0
	137 Move X1, X31
	138 Move X8, [X8]
	139 Move X0, X8
	140 Call Type.GetTypeFromHandle, X0
	141 Move X8, 0xD6D000
	142 Move X8, [X8+1320]
	143 Move X3, X0
	144 Move X0, X19
	145 Move X2, X20
	146 Move X1, [X8]
	147 Move X20, [X31+32]
	148 Move X19, [X31+40]
	149 Move X22, [X31+16]
	150 Move X21, [X31+24]
	151 Move X4, X31
	152 Move X30, [X31+48]
	153 Call SerializationInfo.AddValue, X0, X1, X2, X3
	154 Return 
	155 Move X8, [X20]
	156 Move X0, X20
	157 Move X9, [X8+984]
	158 Move X1, [X8+992]
	159 NotImplemented "Instruction BLR not yet implemented."
	160 Move TEMP, X0
	161 And TEMP, TEMP, 1
	162 Compare TEMP, 1
	163 JumpIfEqual {230}
	164 Move X8, [X20]
	165 Move X0, X20
	166 Move X9, [X8+648]
	167 Move X1, [X8+656]
	168 NotImplemented "Instruction BLR not yet implemented."
	169 Move TEMP, X0
	170 And TEMP, TEMP, 1
	171 Compare TEMP, 1
	172 JumpIfNotEqual {230}
	173 Move X0, X19
	174 Move X1, X20
	175 Call UnitySerializationHolder.AddElementTypes, X0, X1
	176 Compare X0, 0
	177 JumpIfEqual {249}
	178 Move X8, [X0]
	179 Move X20, X0
	180 Move X9, [X8+1128]
	181 Move X1, [X8+1136]
	182 NotImplemented "Instruction BLR not yet implemented."
	183 Move X8, 0xD34000
	184 Move X8, [X8+1728]
	185 Move X9, 0xD66000
	186 Move X21, X0
	187 Move X8, [X8]
	188 Move X9, [X9+392]
	189 Move W10, [X8+224]
	190 Move X22, [X9]
	191 Compare W10, 0
	192 JumpIfNotEqual {195}
	193 Move X0, X8
	194 Call 0x1C17DFC
	195 Move X0, X22
	196 Move X1, X31
	197 Call Type.GetTypeFromHandle, X0
	198 Compare X19, 0
	199 JumpIfEqual {249}
	200 Move X8, 0xD67000
	201 Move X8, [X8+400]
	202 Move X3, X0
	203 Move X0, X19
	204 Move X2, X21
	205 Move X1, [X8]
	206 Move X4, X31
	207 Call SerializationInfo.AddValue, X0, X1, X2, X3
	208 Move X8, [X20]
	209 Move X0, X20
	210 Move X9, [X8+1096]
	211 Move X1, [X8+1104]
	212 NotImplemented "Instruction BLR not yet implemented."
	213 Move X20, X0
	214 Compare X0, 0
	215 JumpIfEqual {227}
	216 Move X9, 0xD5D000
	217 Move X9, [X9+1256]
	218 Move X8, [X20]
	219 Move X1, [X9]
	220 Move W10, [X8+304]
	221 Move W9, [X1+304]
	222 NotImplemented "Instruction CMP not yet implemented."
	223 Move X8, [X8+200]
	224 Add X8, X8, X9
	225 NotImplemented "Instruction LDUR not yet implemented."
	226 NotImplemented "Instruction CMP not yet implemented."
	227 Compare X20, 0
	228 JumpIfEqual {249}
	229 Move W21, 8
	230 Move W21, 4
	231 Move X8, [X20]
	232 Move X0, X20
	233 Move X9, [X8+744]
	234 Move X1, [X8+752]
	235 NotImplemented "Instruction BLR not yet implemented."
	236 Move X22, X0
	237 Move X0, X20
	238 Move X1, X31
	239 Call RuntimeType.GetRuntimeAssembly, X0
	240 Move X3, X0
	241 Move X0, X19
	242 Move W1, W21
	243 Move X2, X22
	244 Move X20, [X31+32]
	245 Move X19, [X31+40]
	246 Move X22, [X31+16]
	247 Move X21, [X31+24]
	248 Move X30, [X31+48]
	249 Call 0x1C17F20
	250 Move X0, X20
	251 Call 0x1C181E0

Method: System.Void GetUnitySerializationInfo(System.Runtime.Serialization.SerializationInfo info, System.Int32 unityType, System.String data, System.Reflection.RuntimeAssembly assembly)

Disassembly:
	0x033C0534 LDR X3, [X22 + 0x28]
	0x033C0538 MOV X1, X19
	0x033C053C MOV X2, X21
	0x033C0540 LDP X20, X19, [X31 + 0x20]
	0x033C0544 LDP X22, X21, [X31 + 0x10]
	0x033C0548 LDR X30, [X31], #0x30
	0x033C054C BR X4
	0x033C0550 LDP X20, X19, [X31 + 0x20]
	0x033C0554 LDP X22, X21, [X31 + 0x10]
	0x033C0558 LDR X30, [X31], #0x30
	0x033C055C RET
	0x033C0560 STR X30, [X31 - 0x60]!
	0x033C0564 STP X28, X27, [X31 + 0x10]
	0x033C0568 STP X26, X25, [X31 + 0x20]
	0x033C056C STP X24, X23, [X31 + 0x30]
	0x033C0570 STP X22, X21, [X31 + 0x40]
	0x033C0574 STP X20, X19, [X31 + 0x50]
	0x033C0578 ADRP X23, 0x101D000
	0x033C057C LDRB W8, [X23 + 0x219]
	0x033C0580 MOV W20, W3
	0x033C0584 MOV X21, X2
	0x033C0588 MOV X19, X1
	0x033C058C MOV X22, X0
	0x033C0590 TBNZ X8, 0x0, 0x33C05FC
	0x033C0594 ADRP X0, 0xD6C000
	0x033C0598 LDR X0, [X0 + 0x5A0]
	0x033C059C BL 0x1C16CF4
	0x033C05A0 ADRP X0, 0xD35000
	0x033C05A4 LDR X0, [X0 + 0x220]
	0x033C05A8 BL 0x1C16CF4
	0x033C05AC ADRP X0, 0xD34000
	0x033C05B0 LDR X0, [X0 + 0x2F0]
	0x033C05B4 BL 0x1C16CF4
	0x033C05B8 ADRP X0, 0xD33000
	0x033C05BC LDR X0, [X0 + 0x718]
	0x033C05C0 BL 0x1C16CF4
	0x033C05C4 ADRP X0, 0xD34000
	0x033C05C8 LDR X0, [X0 + 0x250]
	0x033C05CC BL 0x1C16CF4
	0x033C05D0 ADRP X0, 0xD33000
	0x033C05D4 LDR X0, [X0 + 0x720]
	0x033C05D8 BL 0x1C16CF4
	0x033C05DC ADRP X0, 0xD6C000
	0x033C05E0 LDR X0, [X0 + 0x5B0]
	0x033C05E4 BL 0x1C16CF4
	0x033C05E8 ADRP X0, 0xD6C000
	0x033C05EC LDR X0, [X0 + 0x5B8]
	0x033C05F0 BL 0x1C16CF4
	0x033C05F4 MOVZ W8, 0x1
	0x033C05F8 STRB W8, [X23 + 0x219]
	0x033C05FC ANDS W31, W20, 0x1
	0x033C0600 MOVZ W8, 0x40
	0x033C0604 MOVZ W9, 0x80
	0x033C0608 CSEL X8, X9, X8, NE
	0x033C060C LDR X23, [X22, X8, LSL]
	0x033C0610 CBZ X23, 0x33C069C
	0x033C0614 ADRP X24, 0xD6C000
	0x033C0618 LDR X24, [X24 + 0x5A0]
	0x033C061C LDR X0, [X24]
	0x033C0620 BL 0x1C16D0C
	0x033C0624 TBZ X20, 0x0, 0x33C0638
	0x033C0628 LDR X20, [X0 + 0x10]
	0x033C062C CBNZ X20, 0x33C0680
	0x033C0630 MOVZ W25, 0x10
	0x033C0634 B 0x33C0644
	0x033C0638 LDR X20, [X0 + 0x8]
	0x033C063C CBNZ X20, 0x33C0680
	0x033C0640 MOVZ W25, 0x8
	0x033C0644 ADRP X8, 0xD33000
	0x033C0648 LDR X8, [X8 + 0x720]
	0x033C064C LDR X0, [X8]
	0x033C0650 BL 0x1C16F10
	0x033C0654 ADRP X8, 0xD33000
	0x033C0658 LDR X8, [X8 + 0x718]
	0x033C065C MOV X20, X0
	0x033C0660 LDR X1, [X8]
	0x033C0664 BL 0x2AA4804
	0x033C0668 LDR X0, [X24]
	0x033C066C BL 0x1C16D0C
	0x033C0670 STR X20, [X0, X25, LSL]
	0x033C0674 LDR X0, [X24]
	0x033C0678 BL 0x1C16D0C
	0x033C067C CBZ X20, 0x33C07C4
	0x033C0680 ADRP X8, 0xD35000
	0x033C0684 LDR X8, [X8 + 0x220]
	0x033C0688 MOV X0, X20
	0x033C068C MOV X1, X19
	0x033C0690 LDR X2, [X8]
	0x033C0694 BL 0x2AA528C
	0x033C0698 TBZ X0, 0x0, 0x33C06A4
	0x033C069C MOV X24, X31
	0x033C06A0 B 0x33C0790
	0x033C06A4 ADRP X8, 0xD34000
	0x033C06A8 LDR X8, [X8 + 0x250]
	0x033C06AC MOV X0, X20
	0x033C06B0 MOV X1, X19
	0x033C06B4 MOV X2, X31
	0x033C06B8 LDR X3, [X8]
	0x033C06BC BL 0x2AA5084

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x101E000
	010 Move X23, 0xD6D000
	011 Move X24, 0xD34000
	012 Move W8, [X25+531]
	013 Move X23, [X23+1280]
	014 Move X24, [X24+1728]
	015 Move X20, X3
	016 Move X22, X2
	017 Move W21, W1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {46}
	023 Move X0, 0xD5C000
	024 Move X0, [X0+2912]
	025 Call 0x1C17CF4
	026 Move X0, 0xD36000
	027 Move X0, [X0+632]
	028 Call 0x1C17CF4
	029 Move X0, 0xD34000
	030 Move X0, [X0+1728]
	031 Call 0x1C17CF4
	032 Move X0, 0xD6D000
	033 Move X0, [X0+1280]
	034 Call 0x1C17CF4
	035 Move X0, 0xD67000
	036 Move X0, [X0+384]
	037 Call 0x1C17CF4
	038 Move X0, 0xD6D000
	039 Move X0, [X0+1288]
	040 Call 0x1C17CF4
	041 Move X0, 0xD60000
	042 Move X0, [X0+296]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X25+531], W8
	046 Move X0, [X24]
	047 Move X23, [X23]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X0, X23
	053 Move X1, X31
	054 Call Type.GetTypeFromHandle, X0
	055 Compare X19, 0
	056 JumpIfEqual {117}
	057 Move X23, 0xD5C000
	058 Move X24, 0xD60000
	059 Move X25, 0xD6D000
	060 Move X23, [X23+2912]
	061 Move X24, [X24+296]
	062 Move X25, [X25+1288]
	063 Move X1, X0
	064 Move X0, X19
	065 Move X2, X31
	066 Call SerializationInfo.SetType, X0, X1
	067 Move X0, [X23]
	068 Move X1, X31
	069 Call Type.GetTypeFromHandle, X0
	070 Move X1, [X24]
	071 Move X3, X0
	072 Move X0, X19
	073 Move X2, X22
	074 Move X4, X31
	075 Call SerializationInfo.AddValue, X0, X1, X2, X3
	076 Move X1, [X25]
	077 Move X0, X19
	078 Move W2, W21
	079 Move X3, X31
	080 Call SerializationInfo.AddValue, X0, X1, X2
	081 Move X0, X20
	082 Move X1, X31
	083 Move X2, X31
	084 Call Assembly.op_Equality, X0, X1
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfNotEqual {94}
	089 Move X8, 0xD36000
	090 Move X8, [X8+632]
	091 Move X8, [X8]
	092 Move X8, [X8+184]
	093 Move X2, [X8]
	094 Compare X20, 0
	095 JumpIfEqual {117}
	096 Move X8, [X20]
	097 Move X0, X20
	098 Move X9, [X8+440]
	099 Move X1, [X8+448]
	100 NotImplemented "Instruction BLR not yet implemented."
	101 Move X2, X0
	102 Move X8, 0xD67000
	103 Move X8, [X8+384]
	104 Move X0, X19
	105 Move X20, [X31+48]
	106 Move X19, [X31+56]
	107 Move X22, [X31+32]
	108 Move X21, [X31+40]
	109 Move X1, [X8]
	110 Move X24, [X31+16]
	111 Move X23, [X31+24]
	112 Move X3, X31
	113 Move X30, [X31+64]
	114 Move X25, [X31+72]
	115 Call SerializationInfo.AddValue, X0, X1, X2
	116 Return 
	117 Call 0x1C17F20

Method: System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x033C06C0 LDR X8, [X23]
	0x033C06C4 LDP X9, X1, [X8 + 0x1D8]
	0x033C06C8 MOV X0, X23
	0x033C06CC BLR X9
	0x033C06D0 MOV X23, X0
	0x033C06D4 CBZ X0, 0x33C07C0
	0x033C06D8 LDR W8, [X23 + 0x18]
	0x033C06DC CMP W8, 0x1
	0x033C06E0 B.LT 0x33C0774
	0x033C06E4 ADRP X27, 0xD6C000
	0x033C06E8 ADRP X28, 0xD6C000
	0x033C06EC LDR X27, [X27 + 0x5B0]
	0x033C06F0 LDR X28, [X28 + 0x5B8]
	0x033C06F4 MOV W26, W31
	0x033C06F8 CMP W26, W8
	0x033C06FC B.CS 0x33C07B0
	0x033C0700 ADD X8, X23, W26, 0x3, SXTW
	0x033C0704 LDR X24, [X8 + 0x20]
	0x033C0708 LDR X0, [X27]
	0x033C070C BL 0x1C16F10
	0x033C0710 MOV X25, X0
	0x033C0714 MOV X1, X19
	0x033C0718 MOV X2, X21
	0x033C071C MOV X3, X31
	0x033C0720 BL 0x338ECB0
	0x033C0724 CBZ X24, 0x33C07B4
	0x033C0728 LDR X1, [X28]
	0x033C072C LDR X8, [X24]
	0x033C0730 CMP X8, X1
	0x033C0734 B.NE 0x33C07B8
	0x033C0738 LDR X0, [X24 + 0x40]
	0x033C073C LDR X8, [X24 + 0x18]
	0x033C0740 LDR X3, [X24 + 0x28]
	0x033C0744 MOV X1, X22
	0x033C0748 MOV X2, X25
	0x033C074C BLR X8
	0x033C0750 MOV X24, X0
	0x033C0754 MOV X1, X31
	0x033C0758 MOV X2, X31
	0x033C075C BL 0x32D5C48
	0x033C0760 TBNZ X0, 0x0, 0x33C0778
	0x033C0764 LDR W8, [X23 + 0x18]
	0x033C0768 ADD W26, W26, 0x1
	0x033C076C CMP W26, W8
	0x033C0770 B.LT 0x33C06F8
	0x033C0774 MOV X24, X31
	0x033C0778 ADRP X8, 0xD34000
	0x033C077C LDR X8, [X8 + 0x2F0]
	0x033C0780 MOV X0, X20
	0x033C0784 MOV X1, X19
	0x033C0788 LDR X2, [X8]
	0x033C078C BL 0x2AA64F8
	0x033C0790 MOV X0, X24
	0x033C0794 LDP X20, X19, [X31 + 0x50]
	0x033C0798 LDP X22, X21, [X31 + 0x40]
	0x033C079C LDP X24, X23, [X31 + 0x30]
	0x033C07A0 LDP X26, X25, [X31 + 0x20]
	0x033C07A4 LDP X28, X27, [X31 + 0x10]
	0x033C07A8 LDR X30, [X31], #0x60
	0x033C07AC RET
	0x033C07B0 BL 0x1C16F28
	0x033C07B4 BL 0x1C16F20
	0x033C07B8 MOV X0, X24
	0x033C07BC BL 0x1C171E0
	0x033C07C0 BL 0x1C16F20
	0x033C07C4 BL 0x1C16F20
	0x033C07C8 B 0x33C07E0
	0x033C07CC B 0x33C07E0
	0x033C07D0 B 0x33C07E0
	0x033C07D4 B 0x33C07E0
	0x033C07D8 B 0x33C07E0
	0x033C07DC B 0x33C07E0
	0x033C07E0 MOV X21, X0
	0x033C07E4 CMP W1, 0x1
	0x033C07E8 B.NE 0x33C0820
	0x033C07EC MOV X0, X21
	0x033C07F0 BL 0x3EB1AD0
	0x033C07F4 LDR X22, [X0]
	0x033C07F8 BL 0x3EB1AE0
	0x033C07FC ADRP X8, 0xD34000
	0x033C0800 LDR X8, [X8 + 0x2F0]
	0x033C0804 MOV X0, X20
	0x033C0808 MOV X1, X19
	0x033C080C LDR X2, [X8]
	0x033C0810 BL 0x2AA64F8
	0x033C0814 CBZ X22, 0x33C069C
	0x033C0818 MOV X0, X22
	0x033C081C BL 0x1C16F18
	0x033C0820 MOV X22, X31
	0x033C0824 B 0x33C082C
	0x033C0828 MOV X21, X0
	0x033C082C ADRP X8, 0xD34000
	0x033C0830 LDR X8, [X8 + 0x2F0]
	0x033C0834 LDR X2, [X8]
	0x033C0838 MOV X0, X20
	0x033C083C MOV X1, X19
	0x033C0840 BL 0x2AA64F8
	0x033C0844 CBNZ X22, 0x33C0850
	0x033C0848 MOV X0, X21
	0x033C084C BL 0x1D2C690
	0x033C0850 MOV X0, X22
	0x033C0854 BL 0x1C16F18
	0x033C0858 BL 0x1990590
	0x033C085C STP X30, X27, [X31 - 0x50]!
	0x033C0860 STP X26, X25, [X31 + 0x10]
	0x033C0864 STP X24, X23, [X31 + 0x20]
	0x033C0868 STP X22, X21, [X31 + 0x30]
	0x033C086C STP X20, X19, [X31 + 0x40]
	0x033C0870 ADRP X20, 0x101D000
	0x033C0874 LDRB W8, [X20 + 0x21A]
	0x033C0878 MOV X19, X1
	0x033C087C MOV X21, X0
	0x033C0880 TBNZ X8, 0x0, 0x33C08EC
	0x033C0884 ADRP X0, 0xD6C000
	0x033C0888 LDR X0, [X0 + 0x5A0]
	0x033C088C BL 0x1C16CF4
	0x033C0890 ADRP X0, 0xD35000
	0x033C0894 LDR X0, [X0 + 0x220]
	0x033C0898 BL 0x1C16CF4
	0x033C089C ADRP X0, 0xD34000
	0x033C08A0 LDR X0, [X0 + 0x2F0]
	0x033C08A4 BL 0x1C16CF4
	0x033C08A8 ADRP X0, 0xD33000
	0x033C08AC LDR X0, [X0 + 0x718]
	0x033C08B0 BL 0x1C16CF4
	0x033C08B4 ADRP X0, 0xD34000
	0x033C08B8 LDR X0, [X0 + 0x250]
	0x033C08BC BL 0x1C16CF4
	0x033C08C0 ADRP X0, 0xD33000
	0x033C08C4 LDR X0, [X0 + 0x720]
	0x033C08C8 BL 0x1C16CF4
	0x033C08CC ADRP X0, 0xD6C000
	0x033C08D0 LDR X0, [X0 + 0x5B0]
	0x033C08D4 BL 0x1C16CF4
	0x033C08D8 ADRP X0, 0xD6C000
	0x033C08DC LDR X0, [X0 + 0x5B8]
	0x033C08E0 BL 0x1C16CF4
	0x033C08E4 MOVZ W8, 0x1
	0x033C08E8 STRB W8, [X20 + 0x21A]
	0x033C08EC LDR X8, [X21 + 0x60]
	0x033C08F0 CBZ X8, 0x33C0964
	0x033C08F4 ADRP X22, 0xD6C000
	0x033C08F8 LDR X22, [X22 + 0x5A0]
	0x033C08FC LDR X0, [X22]
	0x033C0900 BL 0x1C16D0C
	0x033C0904 LDR X20, [X0]
	0x033C0908 CBNZ X20, 0x33C0948
	0x033C090C ADRP X8, 0xD33000
	0x033C0910 LDR X8, [X8 + 0x720]
	0x033C0914 LDR X0, [X8]
	0x033C0918 BL 0x1C16F10
	0x033C091C ADRP X8, 0xD33000
	0x033C0920 LDR X8, [X8 + 0x718]
	0x033C0924 MOV X20, X0
	0x033C0928 LDR X1, [X8]
	0x033C092C BL 0x2AA4804
	0x033C0930 LDR X0, [X22]
	0x033C0934 BL 0x1C16D0C
	0x033C0938 STR X20, [X0]
	0x033C093C LDR X0, [X22]
	0x033C0940 BL 0x1C16D0C
	0x033C0944 CBZ X20, 0x33C0A8C
	0x033C0948 ADRP X8, 0xD35000
	0x033C094C LDR X8, [X8 + 0x220]
	0x033C0950 MOV X0, X20
	0x033C0954 MOV X1, X19
	0x033C0958 LDR X2, [X8]
	0x033C095C BL 0x2AA528C
	0x033C0960 TBZ X0, 0x0, 0x33C096C
	0x033C0964 MOV X23, X31
	0x033C0968 B 0x33C0A58
	0x033C096C ADRP X8, 0xD34000
	0x033C0970 LDR X8, [X8 + 0x250]
	0x033C0974 MOV X0, X20
	0x033C0978 MOV X1, X19
	0x033C097C MOV X2, X31
	0x033C0980 LDR X3, [X8]
	0x033C0984 BL 0x2AA5084
	0x033C0988 LDR X0, [X21 + 0x60]
	0x033C098C CBZ X0, 0x33C0A84
	0x033C0990 LDR X8, [X0]
	0x033C0994 LDP X9, X1, [X8 + 0x1D8]
	0x033C0998 BLR X9
	0x033C099C MOV X22, X0
	0x033C09A0 CBZ X0, 0x33C0A88
	0x033C09A4 LDR W8, [X22 + 0x18]
	0x033C09A8 CMP W8, 0x1
	0x033C09AC B.LT 0x33C0A3C
	0x033C09B0 ADRP X26, 0xD6C000
	0x033C09B4 ADRP X27, 0xD6C000
	0x033C09B8 LDR X26, [X26 + 0x5B0]
	0x033C09BC LDR X27, [X27 + 0x5B8]
	0x033C09C0 MOV W25, W31
	0x033C09C4 CMP W25, W8
	0x033C09C8 B.CS 0x33C0A74
	0x033C09CC ADD X8, X22, W25, 0x3, SXTW
	0x033C09D0 LDR X23, [X8 + 0x20]
	0x033C09D4 LDR X0, [X26]
	0x033C09D8 BL 0x1C16F10
	0x033C09DC MOV X24, X0
	0x033C09E0 MOV X1, X19
	0x033C09E4 MOV X2, X31
	0x033C09E8 BL 0x338EC44
	0x033C09EC CBZ X23, 0x33C0A78
	0x033C09F0 LDR X1, [X27]
	0x033C09F4 LDR X8, [X23]
	0x033C09F8 CMP X8, X1
	0x033C09FC B.NE 0x33C0A7C
	0x033C0A00 LDR X0, [X23 + 0x40]
	0x033C0A04 LDR X8, [X23 + 0x18]
	0x033C0A08 LDR X3, [X23 + 0x28]
	0x033C0A0C MOV X1, X21
	0x033C0A10 MOV X2, X24
	0x033C0A14 BLR X8
	0x033C0A18 MOV X23, X0
	0x033C0A1C MOV X1, X31
	0x033C0A20 MOV X2, X31
	0x033C0A24 BL 0x32D5C48
	0x033C0A28 TBNZ X0, 0x0, 0x33C0A40
	0x033C0A2C LDR W8, [X22 + 0x18]
	0x033C0A30 ADD W25, W25, 0x1
	0x033C0A34 CMP W25, W8
	0x033C0A38 B.LT 0x33C09C4
	0x033C0A3C MOV X23, X31
	0x033C0A40 ADRP X8, 0xD34000
	0x033C0A44 LDR X8, [X8 + 0x2F0]
	0x033C0A48 MOV X0, X20
	0x033C0A4C MOV X1, X19
	0x033C0A50 LDR X2, [X8]
	0x033C0A54 BL 0x2AA64F8
	0x033C0A58 MOV X0, X23
	0x033C0A5C LDP X20, X19, [X31 + 0x40]
	0x033C0A60 LDP X22, X21, [X31 + 0x30]
	0x033C0A64 LDP X24, X23, [X31 + 0x20]
	0x033C0A68 LDP X26, X25, [X31 + 0x10]
	0x033C0A6C LDP X30, X27, [X31], #0x50
	0x033C0A70 RET
	0x033C0A74 BL 0x1C16F28
	0x033C0A78 BL 0x1C16F20
	0x033C0A7C MOV X0, X23
	0x033C0A80 BL 0x1C171E0
	0x033C0A84 BL 0x1C16F20
	0x033C0A88 BL 0x1C16F20
	0x033C0A8C BL 0x1C16F20
	0x033C0A90 B 0x33C0AAC
	0x033C0A94 B 0x33C0AAC
	0x033C0A98 B 0x33C0AAC
	0x033C0A9C B 0x33C0AAC
	0x033C0AA0 B 0x33C0AAC
	0x033C0AA4 B 0x33C0AAC
	0x033C0AA8 B 0x33C0AAC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x101E000
	007 Move W8, [X21+532]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {64}
	014 Move X0, 0xD66000
	015 Move X0, [X0+336]
	016 Call 0x1C17CF4
	017 Move X0, 0xD35000
	018 Move X0, [X0+3672]
	019 Call 0x1C17CF4
	020 Move X0, 0xD6D000
	021 Move X0, [X0+1296]
	022 Call 0x1C17CF4
	023 Move X0, 0xD64000
	024 Move X0, [X0+3448]
	025 Call 0x1C17CF4
	026 Move X0, 0xD66000
	027 Move X0, [X0+392]
	028 Call 0x1C17CF4
	029 Move X0, 0xD3C000
	030 Move X0, [X0+3168]
	031 Call 0x1C17CF4
	032 Move X0, 0xD67000
	033 Move X0, [X0+280]
	034 Call 0x1C17CF4
	035 Move X0, 0xD34000
	036 Move X0, [X0+1728]
	037 Call 0x1C17CF4
	038 Move X0, 0xD6D000
	039 Move X0, [X0+1304]
	040 Call 0x1C17CF4
	041 Move X0, 0xD6D000
	042 Move X0, [X0+1272]
	043 Call 0x1C17CF4
	044 Move X0, 0xD6D000
	045 Move X0, [X0+1312]
	046 Call 0x1C17CF4
	047 Move X0, 0xD67000
	048 Move X0, [X0+384]
	049 Call 0x1C17CF4
	050 Move X0, 0xD6D000
	051 Move X0, [X0+1320]
	052 Call 0x1C17CF4
	053 Move X0, 0xD6D000
	054 Move X0, [X0+1288]
	055 Call 0x1C17CF4
	056 Move X0, 0xD67000
	057 Move X0, [X0+400]
	058 Call 0x1C17CF4
	059 Move X0, 0xD60000
	060 Move X0, [X0+296]
	061 Call 0x1C17CF4
	062 Move W8, 1
	063 Move [X21+532], W8
	064 Compare X20, 0
	065 JumpIfEqual {242}
	066 Move X8, 0xD6D000
	067 Move X8, [X8+1288]
	068 Move X0, X20
	069 Move X2, X31
	070 Move X1, [X8]
	071 Call SerializationInfo.GetInt32, X0, X1
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move [X19+72], W0
	074 NotImplemented "Instruction CMP not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X22, 0xD34000
	077 Move X22, [X22+1728]
	078 Move X8, 0xD6D000
	079 Move X0, [X22]
	080 Move X8, [X8+1296]
	081 Move W9, [X0+224]
	082 Move X21, [X8]
	083 Compare W9, 0
	084 JumpIfNotEqual {86}
	085 Call 0x1C17DFC
	086 Move X0, X21
	087 Move X1, X31
	088 Call Type.GetTypeFromHandle, X0
	089 Move X8, 0xD6D000
	090 Move X8, [X8+1312]
	091 Move X2, X0
	092 Move X0, X20
	093 Move X3, X31
	094 Move X1, [X8]
	095 Call SerializationInfo.GetValue, X0, X1, X2
	096 Compare X0, 0
	097 JumpIfEqual {105}
	098 Move X8, 0xD64000
	099 Move X8, [X8+3448]
	100 Move X9, [X0]
	101 Move X8, [X8]
	102 Move W11, [X9+304]
	103 Move W10, [X8+304]
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X8, X31
	106 Move X8, 0xD34000
	107 Move X8, [X8+1728]
	108 Move X0, [X8]
	109 Move X8, 0xD66000
	110 Move X8, [X8+392]
	111 Move W9, [X0+224]
	112 Move X21, [X8]
	113 Compare W9, 0
	114 JumpIfNotEqual {116}
	115 Call 0x1C17DFC
	116 Move X0, X21
	117 Move X1, X31
	118 Call Type.GetTypeFromHandle, X0
	119 Move X8, 0xD67000
	120 Move X8, [X8+400]
	121 Move X2, X0
	122 Move X0, X20
	123 Move X3, X31
	124 Move X1, [X8]
	125 Call SerializationInfo.GetValue, X0, X1, X2
	126 Move X22, 0xD3C000
	127 Move X22, [X22+3168]
	128 Move X21, X0
	129 Move X1, [X22]
	130 Call 0x1C17E00
	131 Move [X19+16], X0
	132 Move X1, [X22]
	133 Move X0, X21
	134 Call 0x1C17E00
	135 Move X8, 0xD66000
	136 Move X8, [X8+336]
	137 Move X1, X31
	138 Move X0, [X8]
	139 Call Type.GetTypeFromHandle, X0
	140 Move X8, 0xD6D000
	141 Move X8, [X8+1272]
	142 Move X2, X0
	143 Move X0, X20
	144 Move X3, X31
	145 Move X1, [X8]
	146 Call SerializationInfo.GetValue, X0, X1, X2
	147 Move X22, 0xD35000
	148 Move X22, [X22+3672]
	149 Move X21, X0
	150 Move X1, [X22]
	151 Call 0x1C17E00
	152 Move [X19+24], X0
	153 Move X1, [X22]
	154 Move X0, X21
	155 Call 0x1C17E00
	156 Move X8, 0xD60000
	157 Move X8, [X8+296]
	158 Move X0, X20
	159 Move X2, X31
	160 Move X1, [X8]
	161 Call SerializationInfo.GetString, X0, X1
	162 Move [X19+56], X0
	163 Move X8, 0xD67000
	164 Move X8, [X8+384]
	165 Move X0, X20
	166 Move X2, X31
	167 Move X1, [X8]
	168 Call SerializationInfo.GetString, X0, X1
	169 Move [X19+64], X0
	170 Move X20, [X31+32]
	171 Move X19, [X31+40]
	172 Move X22, [X31+16]
	173 Move X21, [X31+24]
	174 Move X30, [X31+48]
	175 Return 
	176 Move X9, [X9+200]
	177 Add X9, X9, X10
	178 NotImplemented "Instruction LDUR not yet implemented."
	179 NotImplemented "Instruction CMP not yet implemented."
	180 NotImplemented "Instruction CSEL not yet implemented."
	181 Move [X19+48], X8
	182 Move X8, 0xD67000
	183 Move X8, [X8+280]
	184 Move X1, X31
	185 Move X0, [X8]
	186 Call Type.GetTypeFromHandle, X0
	187 Move X8, 0xD6D000
	188 Move X8, [X8+1320]
	189 Move X2, X0
	190 Move X0, X20
	191 Move X3, X31
	192 Move X1, [X8]
	193 Call SerializationInfo.GetValue, X0, X1, X2
	194 Compare X0, 0
	195 JumpIfEqual {201}
	196 Move X9, [X0]
	197 Move X8, [X22]
	198 Move W11, [X9+304]
	199 Move W10, [X8+304]
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Move X8, X31
	202 Move X9, [X9+200]
	203 Add X9, X9, X10
	204 NotImplemented "Instruction LDUR not yet implemented."
	205 NotImplemented "Instruction CMP not yet implemented."
	206 NotImplemented "Instruction CSEL not yet implemented."
	207 Move [X19+40], X8
	208 Move X8, 0xD6D000
	209 Move X8, [X8+1304]
	210 Move X0, X20
	211 Move X2, X31
	212 Move X1, [X8]
	213 Call SerializationInfo.GetInt32, X0, X1
	214 Move [X19+32], W0
	215 Move X8, 0xD66000
	216 Move X8, [X8+336]
	217 Move X1, X31
	218 Move X0, [X8]
	219 Call Type.GetTypeFromHandle, X0
	220 Move X8, 0xD6D000
	221 Move X8, [X8+1272]
	222 Move X2, X0
	223 Move X0, X20
	224 Move X3, X31
	225 Move X1, [X8]
	226 Call SerializationInfo.GetValue, X0, X1, X2
	227 Move X21, 0xD35000
	228 Move X21, [X21+3672]
	229 Move X20, X0
	230 Move X1, [X21]
	231 Call 0x1C17E00
	232 Move [X19+24], X0
	233 Move X1, [X21]
	234 Move X0, X20
	235 Move X20, [X31+32]
	236 Move X19, [X31+40]
	237 Move X22, [X31+16]
	238 Move X21, [X31+24]
	239 Move X30, [X31+48]
	240 Call 0x1C17E00
	241 Return 
	242 Move X0, 0xD39000
	243 Move X0, [X0+1320]
	244 Call 0x1C17D08
	245 Call 0x1C17F10
	246 Move X19, X0
	247 Move X0, 0xD5E000
	248 Move X0, [X0+728]
	249 Call 0x1C17D08
	250 Move X1, X0
	251 Move X0, X19
	252 Move X2, X31
	253 Call ArgumentNullException..ctor, X0, X1
	254 Move X0, 0xD6D000
	255 Move X0, [X0+1328]
	256 Call 0x1C17D08
	257 Move X1, X0
	258 Move X0, X19
	259 Call 0x1C17DEC

Method: System.Void ThrowInsufficientInformation(System.String field)

Disassembly:
	0x033C0AAC MOV X21, X0
	0x033C0AB0 CMP W1, 0x1
	0x033C0AB4 B.NE 0x33C0AEC
	0x033C0AB8 MOV X0, X21
	0x033C0ABC BL 0x3EB1AD0
	0x033C0AC0 LDR X22, [X0]
	0x033C0AC4 BL 0x3EB1AE0
	0x033C0AC8 ADRP X8, 0xD34000
	0x033C0ACC LDR X8, [X8 + 0x2F0]
	0x033C0AD0 MOV X0, X20
	0x033C0AD4 MOV X1, X19
	0x033C0AD8 LDR X2, [X8]
	0x033C0ADC BL 0x2AA64F8
	0x033C0AE0 CBZ X22, 0x33C0964
	0x033C0AE4 MOV X0, X22
	0x033C0AE8 BL 0x1C16F18
	0x033C0AEC MOV X22, X31
	0x033C0AF0 B 0x33C0AF8
	0x033C0AF4 MOV X21, X0
	0x033C0AF8 ADRP X8, 0xD34000
	0x033C0AFC LDR X8, [X8 + 0x2F0]
	0x033C0B00 LDR X2, [X8]
	0x033C0B04 MOV X0, X20
	0x033C0B08 MOV X1, X19
	0x033C0B0C BL 0x2AA64F8
	0x033C0B10 CBNZ X22, 0x33C0B1C
	0x033C0B14 MOV X0, X21
	0x033C0B18 BL 0x1D2C690
	0x033C0B1C MOV X0, X22
	0x033C0B20 BL 0x1C16F18
	0x033C0B24 BL 0x1990590
	0x033C0B28 LDR X8, [X0 + 0x48]
	0x033C0B2C CBZ X8, 0x33C0B48
	0x033C0B30 MOV X1, X0
	0x033C0B34 LDR X4, [X8 + 0x18]
	0x033C0B38 LDR X0, [X8 + 0x40]
	0x033C0B3C LDR X3, [X8 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0xD34000
	005 Move X0, [X0+2512]
	006 Move X19, X1
	007 Call 0x1C17D08
	008 Move W1, 1
	009 Call 0x1C17D6C
	010 Move X20, X0
	011 Call 0x19913C0
	012 Move X0, X20
	013 Move X1, X19
	014 Call 0x19990B4
	015 Move X0, X20
	016 Move X1, X31
	017 Move X2, X19
	018 Call 0x1994444
	019 Move X0, 0xD6D000
	020 Move X0, [X0+1336]
	021 Call 0x1C17D08
	022 Move X1, X20
	023 Call Environment.GetResourceString, X0, X1
	024 Move X19, X0
	025 Move X0, 0xD5E000
	026 Move X0, [X0+736]
	027 Call 0x1C17D08
	028 Call 0x1C17F10
	029 Move X1, X19
	030 Move X2, X31
	031 Move X20, X0
	032 Call SerializationException..ctor, X0, X1
	033 Move X0, 0xD6D000
	034 Move X0, [X0+1344]
	035 Call 0x1C17D08
	036 Move X1, X0
	037 Move X0, X20
	038 Call 0x1C17DEC

Method: System.Void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x033C0BB0 MOV X19, X0
	0x033C0BB4 LDR W9, [X8 + 0xE0]
	0x033C0BB8 CBNZ W9, 0x33C0BC4
	0x033C0BBC MOV X0, X8
	0x033C0BC0 BL 0x1C16DFC
	0x033C0BC4 MOV X0, X20
	0x033C0BC8 MOV X1, X31
	0x033C0BCC BL 0x338C698
	0x033C0BD0 LDR X8, [X21]
	0x033C0BD4 MOV X20, X0
	0x033C0BD8 LDR W9, [X8 + 0xE0]
	0x033C0BDC CBNZ W9, 0x33C0BE8
	0x033C0BE0 MOV X0, X8
	0x033C0BE4 BL 0x1C16DFC
	0x033C0BE8 MOV X0, X19
	0x033C0BEC MOV X1, X31
	0x033C0BF0 MOV X2, X20
	0x033C0BF4 MOV X3, X31
	0x033C0BF8 BL 0x327F244
	0x033C0BFC MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0xD6D000
	005 Move X0, [X0+1352]
	006 Call 0x1C17D08
	007 Move X19, X0
	008 Move X0, 0xD34000
	009 Move X0, [X0+2880]
	010 Call 0x1C17D08
	011 Call 0x1C17F10
	012 Move X1, X19
	013 Move X2, X31
	014 Move X20, X0
	015 Call NotSupportedException..ctor, X0, X1
	016 Move X0, 0xD6D000
	017 Move X0, [X0+1360]
	018 Call 0x1C17D08
	019 Move X1, X0
	020 Move X0, X20
	021 Call 0x1C17DEC

Method: System.Object GetRealObject(System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x033C0C00 BL 0x328E564
	0x033C0C04 CBZ X0, 0x33C0C20
	0x033C0C08 LDR X8, [X0]
	0x033C0C0C LDP X20, X19, [X31 + 0x10]
	0x033C0C10 LDR X2, [X8 + 0x3B8]
	0x033C0C14 LDR X1, [X8 + 0x3C0]
	0x033C0C18 LDP X30, X21, [X31], #0x20
	0x033C0C1C BR X2
	0x033C0C20 BL 0x1C16F20
	0x033C0C24 STP X30, X23, [X31 - 0x30]!
	0x033C0C28 STP X22, X21, [X31 + 0x10]
	0x033C0C2C STP X20, X19, [X31 + 0x20]
	0x033C0C30 ADRP X23, 0x101D000
	0x033C0C34 LDRB W8, [X23 + 0x21C]
	0x033C0C38 MOV X20, X4
	0x033C0C3C MOV X19, X3
	0x033C0C40 MOV X21, X2
	0x033C0C44 MOV X22, X1
	0x033C0C48 TBNZ X8, 0x0, 0x33C0C78
	0x033C0C4C ADRP X0, 0xD63000
	0x033C0C50 LDR X0, [X0 + 0xD08]
	0x033C0C54 BL 0x1C16CF4
	0x033C0C58 ADRP X0, 0xD3B000
	0x033C0C5C LDR X0, [X0 + 0x558]
	0x033C0C60 BL 0x1C16CF4
	0x033C0C64 ADRP X0, 0xD6C000
	0x033C0C68 LDR X0, [X0 + 0x5C8]
	0x033C0C6C BL 0x1C16CF4
	0x033C0C70 MOVZ W8, 0x1
	0x033C0C74 STRB W8, [X23 + 0x21C]
	0x033C0C78 ADRP X23, 0xD63000
	0x033C0C7C LDR X23, [X23 + 0xD08]
	0x033C0C80 CBZ X22, 0x33C0CBC
	0x033C0C84 ADRP X8, 0xD3B000
	0x033C0C88 LDR X8, [X8 + 0x558]
	0x033C0C8C LDR X0, [X8]
	0x033C0C90 BL 0x1C16F10
	0x033C0C94 MOV X1, X22
	0x033C0C98 MOV X2, X31
	0x033C0C9C MOV X21, X0
	0x033C0CA0 BL 0x32E2528
	0x033C0CA4 MOV X0, X21
	0x033C0CA8 MOV X1, X31
	0x033C0CAC MOV X2, X31
	0x033C0CB0 BL 0x328E314
	0x033C0CB4 MOV X22, X0
	0x033C0CB8 B 0x33C0CDC
	0x033C0CBC ADRP X8, 0xD6C000
	0x033C0CC0 LDR X8, [X8 + 0x5C8]
	0x033C0CC4 LDR X0, [X8]
	0x033C0CC8 BL 0x1C16F10
	0x033C0CCC MOV X1, X21
	0x033C0CD0 MOV X2, X31
	0x033C0CD4 MOV X22, X0
	0x033C0CD8 BL 0x3298F40
	0x033C0CDC LDR X0, [X23]
	0x033C0CE0 LDR W8, [X0 + 0xE0]
	0x033C0CE4 CBNZ W8, 0x33C0CEC
	0x033C0CE8 BL 0x1C16DFC
	0x033C0CEC MOV X0, X22
	0x033C0CF0 MOV X1, X31
	0x033C0CF4 BL 0x328CE58
	0x033C0CF8 MOV X1, X31
	0x033C0CFC MOV X21, X0
	0x033C0D00 BL 0x3295A3C
	0x033C0D04 MOV X8, X0
	0x033C0D08 MOV X0, X31
	0x033C0D0C STR X8, [X20]
	0x033C0D10 CBNZ X8, 0x33C0D34
	0x033C0D14 MOV X0, X21
	0x033C0D18 MOV X1, X31
	0x033C0D1C BL 0x328E34C
	0x033C0D20 CBZ X0, 0x33C0D48
	0x033C0D24 LDR X8, [X0]
	0x033C0D28 LDR X9, [X8 + 0x3B8]
	0x033C0D2C LDR X1, [X8 + 0x3C0]
	0x033C0D30 BLR X9
	0x033C0D34 STR X0, [X19]
	0x033C0D38 LDP X20, X19, [X31 + 0x20]
	0x033C0D3C LDP X22, X21, [X31 + 0x10]
	0x033C0D40 LDP X30, X23, [X31], #0x30
	0x033C0D44 RET
	0x033C0D48 BL 0x1C16F20
	0x033C0D4C STR X30, [X31 - 0x30]!
	0x033C0D50 STP X22, X21, [X31 + 0x10]
	0x033C0D54 STP X20, X19, [X31 + 0x20]
	0x033C0D58 ADRP X21, 0x101D000
	0x033C0D5C LDRB W8, [X21 + 0x21D]
	0x033C0D60 MOV X19, X1
	0x033C0D64 MOV X20, X0
	0x033C0D68 TBNZ X8, 0x0, 0x33C0D80
	0x033C0D6C ADRP X0, 0xD6C000
	0x033C0D70 LDR X0, [X0 + 0x5B8]
	0x033C0D74 BL 0x1C16CF4
	0x033C0D78 MOVZ W8, 0x1
	0x033C0D7C STRB W8, [X21 + 0x21D]
	0x033C0D80 ADRP X22, 0xD6C000
	0x033C0D84 LDR X21, [X20 + 0x40]!
	0x033C0D88 LDR X22, [X22 + 0x5B8]
	0x033C0D8C MOV X0, X21
	0x033C0D90 MOV X1, X19
	0x033C0D94 BL 0x33C0DE4
	0x033C0D98 MOV X8, X0
	0x033C0D9C CBZ X0, 0x33C0DB0
	0x033C0DA0 LDR X1, [X22]
	0x033C0DA4 LDR X9, [X8]
	0x033C0DA8 CMP X9, X1
	0x033C0DAC B.NE 0x33C0DDC
	0x033C0DB0 MOV X0, X20
	0x033C0DB4 MOV X1, X8
	0x033C0DB8 MOV X2, X21
	0x033C0DBC BL 0x1C24138
	0x033C0DC0 CMP X21, X0
	0x033C0DC4 MOV X21, X0
	0x033C0DC8 B.NE 0x33C0D8C
	0x033C0DCC LDP X20, X19, [X31 + 0x20]
	0x033C0DD0 LDP X22, X21, [X31 + 0x10]
	0x033C0DD4 LDR X30, [X31], #0x30
	0x033C0DD8 RET
	0x033C0DDC MOV X0, X8
	0x033C0DE0 BL 0x1C171E0
	0x033C0DE4 STR X30, [X31 - 0x30]!
	0x033C0DE8 STP X22, X21, [X31 + 0x10]
	0x033C0DEC STP X20, X19, [X31 + 0x20]
	0x033C0DF0 ADRP X21, 0x101D000
	0x033C0DF4 LDRB W8, [X21 + 0x26F]
	0x033C0DF8 MOV X19, X1
	0x033C0DFC MOV X20, X0
	0x033C0E00 TBNZ X8, 0x0, 0x33C0E18
	0x033C0E04 ADRP X0, 0xD33000
	0x033C0E08 LDR X0, [X0 + 0x6C0]
	0x033C0E0C BL 0x1C16CF4
	0x033C0E10 MOVZ W8, 0x1
	0x033C0E14 STRB W8, [X21 + 0x26F]
	0x033C0E18 CBZ X20, 0x33C0E8C
	0x033C0E1C CBZ X19, 0x33C0E88
	0x033C0E20 MOV X0, X20
	0x033C0E24 BL 0x1C25764
	0x033C0E28 MOV X21, X0
	0x033C0E2C MOV X0, X19
	0x033C0E30 BL 0x1C25764
	0x033C0E34 ADRP X8, 0xD33000
	0x033C0E38 LDR X8, [X8 + 0x6C0]
	0x033C0E3C MOV X22, X0
	0x033C0E40 LDR X8, [X8]
	0x033C0E44 LDR W9, [X8 + 0xE0]
	0x033C0E48 CBNZ W9, 0x33C0E54
	0x033C0E4C MOV X0, X8
	0x033C0E50 BL 0x1C16DFC
	0x033C0E54 MOV X0, X21
	0x033C0E58 MOV X1, X22
	0x033C0E5C MOV X2, X31
	0x033C0E60 BL 0x3395F0C
	0x033C0E64 TBNZ X0, 0x0, 0x33C0EA0
	0x033C0E68 LDR X8, [X20]
	0x033C0E6C MOV X0, X20
	0x033C0E70 MOV X1, X19
	0x033C0E74 LDP X20, X19, [X31 + 0x20]
	0x033C0E78 LDP X3, X2, [X8 + 0x1E8]
	0x033C0E7C LDP X22, X21, [X31 + 0x10]
	0x033C0E80 LDR X30, [X31], #0x30
	0x033C0E84 BR X3
	0x033C0E88 MOV X19, X20
	0x033C0E8C MOV X0, X19
	0x033C0E90 LDP X20, X19, [X31 + 0x20]
	0x033C0E94 LDP X22, X21, [X31 + 0x10]
	0x033C0E98 LDR X30, [X31], #0x30
	0x033C0E9C RET
	0x033C0EA0 MOV X0, X20
	0x033C0EA4 BL 0x1C25764
	0x033C0EA8 CBNZ X0, 0x33C0EB0
	0x033C0EAC BL 0x1C16F20
	0x033C0EB0 LDR X8, [X0]
	0x033C0EB4 LDR X9, [X8 + 0x2E8]
	0x033C0EB8 LDR X1, [X8 + 0x2F0]
	0x033C0EBC BLR X9
	0x033C0EC0 MOV X20, X0
	0x033C0EC4 MOV X0, X19
	0x033C0EC8 BL 0x1C25764
	0x033C0ECC MOV X19, X0
	0x033C0ED0 BL 0x19903C0
	0x033C0ED4 LDR X8, [X19]
	0x033C0ED8 MOV X0, X19
	0x033C0EDC LDR X9, [X8 + 0x2E8]
	0x033C0EE0 LDR X1, [X8 + 0x2F0]
	0x033C0EE4 BLR X9
	0x033C0EE8 MOV X19, X0
	0x033C0EEC ADRP X0, 0xD6C000
	0x033C0EF0 LDR X0, [X0 + 0x5D0]
	0x033C0EF4 BL 0x1C16D08
	0x033C0EF8 MOV X1, X20
	0x033C0EFC MOV X2, X19
	0x033C0F00 MOV X3, X31
	0x033C0F04 BL 0x3227BD4
	0x033C0F08 MOV X19, X0
	0x033C0F0C ADRP X0, 0xD3B000
	0x033C0F10 LDR X0, [X0 + 0x578]
	0x033C0F14 BL 0x1C16D08
	0x033C0F18 BL 0x1C16F10
	0x033C0F1C MOV X1, X19
	0x033C0F20 MOV X2, X31
	0x033C0F24 MOV X20, X0
	0x033C0F28 BL 0x3314A68
	0x033C0F2C ADRP X0, 0xD6C000
	0x033C0F30 LDR X0, [X0 + 0x5D8]
	0x033C0F34 BL 0x1C16D08
	0x033C0F38 MOV X1, X0
	0x033C0F3C MOV X0, X20
	0x033C0F40 BL 0x1C16DEC
	0x033C0F44 STR X30, [X31 - 0x30]!
	0x033C0F48 STP X22, X21, [X31 + 0x10]
	0x033C0F4C STP X20, X19, [X31 + 0x20]
	0x033C0F50 ADRP X21, 0x101D000
	0x033C0F54 LDRB W8, [X21 + 0x21E]
	0x033C0F58 MOV X19, X1
	0x033C0F5C MOV X20, X0
	0x033C0F60 TBNZ X8, 0x0, 0x33C0F78
	0x033C0F64 ADRP X0, 0xD6C000
	0x033C0F68 LDR X0, [X0 + 0x5B8]
	0x033C0F6C BL 0x1C16CF4
	0x033C0F70 MOVZ W8, 0x1
	0x033C0F74 STRB W8, [X21 + 0x21E]
	0x033C0F78 ADRP X22, 0xD6C000
	0x033C0F7C LDR X21, [X20 + 0x40]!
	0x033C0F80 LDR X22, [X22 + 0x5B8]
	0x033C0F84 MOV X0, X21
	0x033C0F88 MOV X1, X19
	0x033C0F8C BL 0x33C0FDC
	0x033C0F90 MOV X8, X0
	0x033C0F94 CBZ X0, 0x33C0FA8
	0x033C0F98 LDR X1, [X22]
	0x033C0F9C LDR X9, [X8]
	0x033C0FA0 CMP X9, X1
	0x033C0FA4 B.NE 0x33C0FD4
	0x033C0FA8 MOV X0, X20
	0x033C0FAC MOV X1, X8
	0x033C0FB0 MOV X2, X21
	0x033C0FB4 BL 0x1C24138
	0x033C0FB8 CMP X21, X0
	0x033C0FBC MOV X21, X0
	0x033C0FC0 B.NE 0x33C0F84
	0x033C0FC4 LDP X20, X19, [X31 + 0x20]
	0x033C0FC8 LDP X22, X21, [X31 + 0x10]
	0x033C0FCC LDR X30, [X31], #0x30
	0x033C0FD0 RET
	0x033C0FD4 MOV X0, X8
	0x033C0FD8 BL 0x1C171E0
	0x033C0FDC STR X30, [X31 - 0x30]!
	0x033C0FE0 STP X22, X21, [X31 + 0x10]
	0x033C0FE4 STP X20, X19, [X31 + 0x20]
	0x033C0FE8 ADRP X21, 0x101D000
	0x033C0FEC LDRB W8, [X21 + 0x270]
	0x033C0FF0 MOV X19, X1
	0x033C0FF4 MOV X20, X0
	0x033C0FF8 TBNZ X8, 0x0, 0x33C1010
	0x033C0FFC ADRP X0, 0xD33000
	0x033C1000 LDR X0, [X0 + 0x6C0]
	0x033C1004 BL 0x1C16CF4
	0x033C1008 MOVZ W8, 0x1
	0x033C100C STRB W8, [X21 + 0x270]
	0x033C1010 CBZ X20, 0x33C1080
	0x033C1014 CBZ X19, 0x33C1080
	0x033C1018 MOV X0, X20
	0x033C101C BL 0x1C25764
	0x033C1020 MOV X21, X0
	0x033C1024 MOV X0, X19
	0x033C1028 BL 0x1C25764
	0x033C102C ADRP X8, 0xD32000
	0x033C1030 LDR X8, [X8 + 0x6C0]
	0x033C1034 MOV X22, X0
	0x033C1038 LDR X8, [X8]
	0x033C103C LDR W9, [X8 + 0xE0]
	0x033C1040 CBNZ W9, 0x33C104C
	0x033C1044 MOV X0, X8
	0x033C1048 BL 0x1C16DFC
	0x033C104C MOV X0, X21
	0x033C1050 MOV X1, X22
	0x033C1054 MOV X2, X31
	0x033C1058 BL 0x3395F0C
	0x033C105C TBNZ X0, 0x0, 0x33C1094
	0x033C1060 LDR X8, [X20]
	0x033C1064 MOV X0, X20
	0x033C1068 MOV X1, X19
	0x033C106C LDP X20, X19, [X31 + 0x20]
	0x033C1070 LDP X3, X2, [X8 + 0x1F8]
	0x033C1074 LDP X22, X21, [X31 + 0x10]
	0x033C1078 LDR X30, [X31], #0x30
	0x033C107C BR X3
	0x033C1080 MOV X0, X20
	0x033C1084 LDP X20, X19, [X31 + 0x20]
	0x033C1088 LDP X22, X21, [X31 + 0x10]
	0x033C108C LDR X30, [X31], #0x30
	0x033C1090 RET
	0x033C1094 MOV X0, X20
	0x033C1098 BL 0x1C25764
	0x033C109C CBNZ X0, 0x33C10A4
	0x033C10A0 BL 0x1C16F20
	0x033C10A4 LDR X8, [X0]
	0x033C10A8 LDR X9, [X8 + 0x2E8]
	0x033C10AC LDR X1, [X8 + 0x2F0]
	0x033C10B0 BLR X9
	0x033C10B4 MOV X20, X0
	0x033C10B8 MOV X0, X19
	0x033C10BC BL 0x1C25764
	0x033C10C0 MOV X19, X0
	0x033C10C4 BL 0x19903C0
	0x033C10C8 LDR X8, [X19]
	0x033C10CC MOV X0, X19
	0x033C10D0 LDR X9, [X8 + 0x2E8]
	0x033C10D4 LDR X1, [X8 + 0x2F0]
	0x033C10D8 BLR X9
	0x033C10DC MOV X19, X0
	0x033C10E0 ADRP X0, 0xD6B000
	0x033C10E4 LDR X0, [X0 + 0x5D0]
	0x033C10E8 BL 0x1C16D08
	0x033C10EC MOV X1, X20
	0x033C10F0 MOV X2, X19
	0x033C10F4 MOV X3, X31
	0x033C10F8 BL 0x3227BD4
	0x033C10FC MOV X19, X0
	0x033C1100 ADRP X0, 0xD3A000
	0x033C1104 LDR X0, [X0 + 0x578]
	0x033C1108 BL 0x1C16D08
	0x033C110C BL 0x1C16F10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x101E000
	007 Move W8, [X22+533]
	008 Move X20, X2
	009 Move X21, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {47}
	015 Move X0, 0xD67000
	016 Move X0, [X0+1336]
	017 Call 0x1C17CF4
	018 Move X0, 0xD6C000
	019 Move X0, [X0+3528]
	020 Call 0x1C17CF4
	021 Move X0, 0xD66000
	022 Move X0, [X0+3472]
	023 Call 0x1C17CF4
	024 Move X0, 0xD66000
	025 Move X0, [X0+3584]
	026 Call 0x1C17CF4
	027 Move X0, 0xD6D000
	028 Move X0, [X0+1368]
	029 Call 0x1C17CF4
	030 Move X0, 0xD34000
	031 Move X0, [X0+1728]
	032 Call 0x1C17CF4
	033 Move X0, 0xD6D000
	034 Move X0, [X0+1376]
	035 Call 0x1C17CF4
	036 Move X0, 0xD6D000
	037 Move X0, [X0+1384]
	038 Call 0x1C17CF4
	039 Move X0, 0xD67000
	040 Move X0, [X0+384]
	041 Call 0x1C17CF4
	042 Move X0, 0xD60000
	043 Move X0, [X0+296]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X22+533], W8
	047 Move W8, [X19+72]
	048 Subtract W8, W8, 1
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X9, -42110976
	051 Add X9, X9, 2296
	052 NotImplemented "Instruction ADR not yet implemented."
	053 Move W11, [X9]
	054 Add X10, X10, X11
	055 CallNoReturn X10
	056 Move X19, 0xD6C000
	057 Move X19, [X19+3528]
	058 Move X19, 0xD67000
	059 Move X19, [X19+1336]
	060 Move X19, 0xD66000
	061 Move X19, [X19+3472]
	062 Move X0, [X19]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {68}
	066 Call 0x1C17DFC
	067 Move X0, [X19]
	068 Move X8, [X0+184]
	069 Move X21, [X8]
	070 Move X20, [X19+56]
	071 Compare X20, 0
	072 JumpIfEqual {343}
	073 Move W8, [X20+16]
	074 Compare W8, 0
	075 JumpIfEqual {343}
	076 Move X0, [X19+64]
	077 Compare X0, 0
	078 JumpIfEqual {346}
	079 Move W8, [X0+16]
	080 Compare W8, 0
	081 JumpIfEqual {268}
	082 Move X1, X31
	083 Call Assembly.Load, X0
	084 Compare X0, 0
	085 JumpIfEqual {345}
	086 Move X8, [X0]
	087 Move X1, [X19+56]
	088 Move X20, [X31+32]
	089 Move X19, [X31+40]
	090 Move X22, [X31+16]
	091 Move X21, [X31+24]
	092 Move X5, [X8+632]
	093 Move X4, [X8+640]
	094 Move W2, 1
	095 Move W3, W31
	096 Move X30, [X31+48]
	097 CallNoReturn X5
	098 Move X8, [X19+56]
	099 Compare X8, 0
	100 JumpIfEqual {343}
	101 Move W8, [X8+16]
	102 Compare W8, 0
	103 JumpIfEqual {343}
	104 Move X0, [X19+64]
	105 Compare X0, 0
	106 JumpIfEqual {346}
	107 Move X1, X31
	108 Call Assembly.Load, X0
	109 Compare X0, 0
	110 JumpIfEqual {345}
	111 Move X8, [X0]
	112 Move X1, [X19+56]
	113 Move X9, [X8+648]
	114 Move X2, [X8+656]
	115 NotImplemented "Instruction BLR not yet implemented."
	116 Move X8, 0xD66000
	117 Move X8, [X8+3584]
	118 Move X21, X0
	119 Move X8, [X8]
	120 Move W9, [X8+224]
	121 Compare W9, 0
	122 JumpIfNotEqual {125}
	123 Move X0, X8
	124 Call 0x1C17DFC
	125 Move X0, X21
	126 Move X1, X31
	127 Move X2, X31
	128 Call Module.op_Equality, X0, X1
	129 Move TEMP, X0
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfNotEqual {319}
	133 Move X0, 0xD34000
	134 Move X0, [X0+2512]
	135 Call 0x1C17D08
	136 Move W1, 2
	137 Call 0x1C17D6C
	138 Move X20, [X19+56]
	139 Move X21, X0
	140 Call 0x19913C0
	141 Move X0, X21
	142 Move X1, X20
	143 Call 0x19990B4
	144 Move X0, X21
	145 Move X1, X31
	146 Move X2, X20
	147 Call 0x1994444
	148 Move X19, [X19+64]
	149 Move X0, X21
	150 Call 0x19913C0
	151 Move X0, X21
	152 Move X1, X19
	153 Call 0x19990B4
	154 Move W1, 1
	155 Move X0, X21
	156 Move X2, X19
	157 Call 0x1994444
	158 Move X0, 0xD6D000
	159 Move X0, [X0+1392]
	160 Call 0x1C17D08
	161 Move X1, X21
	162 Call Environment.GetResourceString, X0, X1
	163 Move X19, X0
	164 Move X0, 0xD5E000
	165 Move X0, [X0+736]
	166 Call 0x1C17D08
	167 Call 0x1C17F10
	168 Move X1, X19
	169 Move X2, X31
	170 Move X20, X0
	171 Call SerializationException..ctor, X0, X1
	172 Move X8, [X19+56]
	173 Compare X8, 0
	174 JumpIfEqual {343}
	175 Move W8, [X8+16]
	176 Compare W8, 0
	177 JumpIfEqual {343}
	178 Move X0, [X19+64]
	179 Compare X0, 0
	180 JumpIfEqual {346}
	181 Move X20, [X31+32]
	182 Move X19, [X31+40]
	183 Move X22, [X31+16]
	184 Move X21, [X31+24]
	185 Move X1, X31
	186 Move X30, [X31+48]
	187 Call Assembly.Load, X0
	188 Return X0
	189 Move X8, [X19]
	190 Move W9, 4
	191 Move [X19+72], W9
	192 Move X0, X19
	193 Move X9, [X8+424]
	194 Move X3, [X8+432]
	195 Move X1, X21
	196 Move X2, X20
	197 NotImplemented "Instruction BLR not yet implemented."
	198 Move X8, 0xD34000
	199 Move X8, [X8+1728]
	200 Move X8, [X8]
	201 Compare X0, 0
	202 JumpIfEqual {207}
	203 Move X9, [X0]
	204 Move W10, [X8+304]
	205 Move W11, [X9+304]
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Move X20, X31
	208 Move X0, [X19+48]
	209 Move X1, X31
	210 Move X2, X31
	211 Call MethodBase.op_Equality, X0, X1
	212 Move TEMP, X0
	213 And TEMP, TEMP, 1
	214 Compare TEMP, 1
	215 JumpIfNotEqual {232}
	216 Move X8, 0xD34000
	217 Move X8, [X8+1728]
	218 Move X20, [X19+40]
	219 Move X0, [X8]
	220 Move W8, [X0+224]
	221 Compare W8, 0
	222 JumpIfNotEqual {224}
	223 Call 0x1C17DFC
	224 Move X0, X20
	225 Move X1, X31
	226 Move X2, X31
	227 Call Type.op_Equality, X0, X1
	228 Move TEMP, X0
	229 And TEMP, TEMP, 1
	230 Compare TEMP, 1
	231 JumpIfEqual {369}
	232 Move X0, [X19+48]
	233 Move X1, X31
	234 Move X2, X31
	235 Call MethodBase.op_Inequality, X0, X1
	236 Move TEMP, X0
	237 And TEMP, TEMP, 1
	238 Compare TEMP, 1
	239 JumpIfNotEqual {254}
	240 Move X0, [X19+48]
	241 Compare X0, 0
	242 JumpIfEqual {345}
	243 Move X8, [X0]
	244 Move X9, [X8+760]
	245 Move X1, [X8+768]
	246 NotImplemented "Instruction BLR not yet implemented."
	247 Compare X0, 0
	248 JumpIfEqual {345}
	249 NotImplemented "Instruction LDRSW not yet implemented."
	250 Move W9, [X0+24]
	251 NotImplemented "Instruction CMP not yet implemented."
	252 Add X8, X0, X8
	253 Move X21, [X8+32]
	254 Move X0, [X19+40]
	255 Compare X0, 0
	256 JumpIfEqual {345}
	257 Move X8, [X0]
	258 Move X9, [X8+1128]
	259 Move X1, [X8+1136]
	260 NotImplemented "Instruction BLR not yet implemented."
	261 Compare X0, 0
	262 JumpIfEqual {345}
	263 NotImplemented "Instruction LDRSW not yet implemented."
	264 Move W9, [X0+24]
	265 NotImplemented "Instruction CMP not yet implemented."
	266 Add X8, X0, X8
	267 Move X1, [X8+32]
	268 Move X8, 0xD34000
	269 Move X8, [X8+1728]
	270 Move X0, [X8]
	271 Move W8, [X0+224]
	272 Compare W8, 0
	273 JumpIfNotEqual {275}
	274 Call 0x1C17DFC
	275 Move X8, 0xD6D000
	276 Move X9, 0xD6D000
	277 Move X8, [X8+1368]
	278 Move X9, [X9+1376]
	279 Move X0, X20
	280 Move X20, [X31+32]
	281 Move X19, [X31+40]
	282 Move X3, [X8]
	283 Move X4, [X9]
	284 Move X22, [X31+16]
	285 Move X21, [X31+24]
	286 Move W1, 1
	287 Move W2, W31
	288 Move X30, [X31+48]
	289 Call 0x1C18148
	290 Return X0
	291 Move X9, [X9+200]
	292 Add X9, X9, X10
	293 NotImplemented "Instruction LDUR not yet implemented."
	294 NotImplemented "Instruction CMP not yet implemented."
	295 NotImplemented "Instruction CSEL not yet implemented."
	296 Move X9, [X19+16]
	297 Move W10, 8
	298 Move [X19+72], W10
	299 Compare X9, 0
	300 JumpIfEqual {345}
	301 Move W10, [X9+24]
	302 Compare W10, 0
	303 JumpIfEqual {350}
	304 Move W10, [X8+224]
	305 Move X21, [X9+32]
	306 Compare W10, 0
	307 JumpIfNotEqual {310}
	308 Move X0, X8
	309 Call 0x1C17DFC
	310 Move X0, X21
	311 Move X1, X31
	312 Move X2, X31
	313 Call Type.op_Equality, X0, X1
	314 Move X21, X31
	315 Move TEMP, X0
	316 And TEMP, TEMP, 1
	317 Compare TEMP, 1
	318 JumpIfNotEqual {326}
	319 Move X0, X21
	320 Move X20, [X31+32]
	321 Move X19, [X31+40]
	322 Move X22, [X31+16]
	323 Move X21, [X31+24]
	324 Move X30, [X31+48]
	325 Return X0
	326 Compare X20, 0
	327 JumpIfEqual {345}
	328 Move X8, [X20]
	329 Move X1, [X19+16]
	330 Move X0, X20
	331 Move X9, [X8+2264]
	332 Move X2, [X8+2272]
	333 NotImplemented "Instruction BLR not yet implemented."
	334 Move X1, X0
	335 Move X0, X19
	336 Move X20, [X31+32]
	337 Move X19, [X31+40]
	338 Move X22, [X31+16]
	339 Move X21, [X31+24]
	340 Move X30, [X31+48]
	341 Call UnitySerializationHolder.MakeElementTypes, X0, X1
	342 Return X0
	343 Move X8, 0xD5F000
	344 Move X8, [X8+296]
	345 Call 0x1C17F20
	346 Move X8, 0xD66000
	347 Move X8, [X8+384]
	348 Move X1, [X8]
	349 Call UnitySerializationHolder.ThrowInsufficientInformation, X0, X1
	350 Call 0x1C17F28
	351 Move X0, 0xD6C000
	352 Move X0, [X0+1400]
	353 Call 0x1C17D08
	354 Move X19, X0
	355 Move X0, 0xD3B000
	356 Move X0, [X0+1400]
	357 Call 0x1C17D08
	358 Call 0x1C17F10
	359 Move X1, X19
	360 Move X2, X31
	361 Move X20, X0
	362 Call ArgumentException..ctor, X0, X1
	363 Move X0, 0xD6C000
	364 Move X0, [X0+1376]
	365 Call 0x1C17D08
	366 Move X1, X0
	367 Move X0, X20
	368 Call 0x1C17DEC
	369 Move X8, 0xD6C000
	370 Move X8, [X8+1384]

