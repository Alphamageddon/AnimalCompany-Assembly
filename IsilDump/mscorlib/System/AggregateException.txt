Type: System.AggregateException

Method: System.Void .ctor()

Disassembly:
	0x03315404 LDR X0, [X21]
	0x03315408 BL 0x1C16F10
	0x0331540C LDR X1, [X19]
	0x03315410 MOV X21, X0
	0x03315414 BL 0x301B7C4
	0x03315418 CBZ X21, 0x33156C8
	0x0331541C ADRP X25, 0xE12000
	0x03315420 LDR X25, [X25 + 0xF10]
	0x03315424 LDR W10, [X21 + 0x1C]
	0x03315428 LDR X8, [X21 + 0x10]
	0x0331542C LDR X9, [X25]
	0x03315430 ADD W10, W10, 0x1
	0x03315434 STR W10, [X21 + 0x1C]
	0x03315438 CBZ X8, 0x33156C8
	0x0331543C LDRSW X10, [X21 + 0x18]
	0x03315440 LDR W11, [X8 + 0x18]
	0x03315444 STR X24, [X31 + 0x8]
	0x03315448 CMP W10, W11
	0x0331544C B.CS 0x3315464
	0x03315450 ADD W9, W10, 0x1
	0x03315454 ADD X8, X8, X10, 0x3, LSL
	0x03315458 STR W9, [X21 + 0x18]
	0x0331545C STR X24, [X8 + 0x20]
	0x03315460 B 0x3315480
	0x03315464 LDR X8, [X9 + 0x20]
	0x03315468 MOV X0, X21
	0x0331546C MOV X1, X24
	0x03315470 LDR X8, [X8 + 0xC0]
	0x03315474 LDR X2, [X8 + 0x70]
	0x03315478 BL 0x301BF90
	0x0331547C LDR W9, [X21 + 0x18]
	0x03315480 ADRP X26, 0xE10000
	0x03315484 LDR X26, [X26 + 0x8D0]
	0x03315488 CMP W9, 0x1
	0x0331548C B.LT 0x3315674
	0x03315490 ADRP X27, 0xE12000
	0x03315494 ADRP X28, 0xE12000
	0x03315498 ADRP X29, 0xE12000
	0x0331549C ADRP X19, 0xE12000
	0x033154A0 LDR X27, [X27 + 0xF20]
	0x033154A4 LDR X28, [X28 + 0xE78]
	0x033154A8 LDR X29, [X29 + 0xE60]
	0x033154AC LDR X19, [X19 + 0xF08]
	0x033154B0 MOV W22, W31
	0x033154B4 LDR X2, [X27]
	0x033154B8 MOV X0, X21
	0x033154BC MOV W1, W22
	0x033154C0 BL 0x301BCCC
	0x033154C4 CBZ X0, 0x33156C8
	0x033154C8 LDR X23, [X0 + 0x90]
	0x033154CC CBZ X23, 0x33156C8
	0x033154D0 MOV W24, W31
	0x033154D4 ADD W22, W22, 0x1
	0x033154D8 LDR X8, [X23]
	0x033154DC LDR X1, [X28]
	0x033154E0 LDRH W9, [X8 + 0x12E]
	0x033154E4 CBZ X9, 0x3315508
	0x033154E8 LDR X10, [X8 + 0xB0]
	0x033154EC ADD X10, X10, 0x8
	0x033154F0 LDUR X11, [X10 - 0x8]
	0x033154F4 CMP X11, X1
	0x033154F8 B.EQ 0x3315518
	0x033154FC SUBS X9, X9, 0x1
	0x03315500 ADD X10, X10, 0x10
	0x03315504 B.NE 0x33154F0
	0x03315508 MOV X0, X23
	0x0331550C MOV W2, W31
	0x03315510 BL 0x1C5C788
	0x03315514 B 0x3315524
	0x03315518 LDRSW X9, [X10]
	0x0331551C ADD X8, X8, X9, 0x4, LSL
	0x03315520 ADD X0, X8, 0x138
	0x03315524 LDP X8, X1, [X0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x10C8000
	007 Move X20, 0xDDF000
	008 Move W8, [X21+2923]
	009 Move X20, [X20+2000]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0xE13000
	016 Move X0, [X0+3648]
	017 Call 0x1C17CF4
	018 Move X0, 0xDDF000
	019 Move X0, [X0+2000]
	020 Call 0x1C17CF4
	021 Move X0, 0xE13000
	022 Move X0, [X0+3656]
	023 Call 0x1C17CF4
	024 Move X0, 0xE13000
	025 Move X0, [X0+3664]
	026 Call 0x1C17CF4
	027 Move X0, 0xE13000
	028 Move X0, [X0+3672]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+2923], W8
	032 Move X0, [X20]
	033 Move X21, 0xE13000
	034 Move X20, 0xE13000
	035 Move W8, [X0+224]
	036 Move X21, [X21+3672]
	037 Move X20, [X20+3648]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X1, [X21]
	042 Move X0, X19
	043 Move X2, X31
	044 Call Exception..ctor, X0, X1
	045 Move X20, [X20]
	046 Move X8, [X20+56]
	047 Compare X8, 0
	048 JumpIfNotEqual {52}
	049 Move X0, X20
	050 Call 0x1C5D6E0
	051 Move X8, [X20+56]
	052 Move X0, [X8+16]
	053 Move W8, [X0+309]
	054 Move TEMP, X8
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {59}
	058 Call 0x1C5D684
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X8, [X20+56]
	064 Move X22, 0xE13000
	065 Move X21, 0xE13000
	066 Move X0, [X8+16]
	067 Move W8, [X0+309]
	068 Move X22, [X22+3664]
	069 Move X21, [X21+3656]
	070 Move TEMP, X8
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfEqual {75}
	074 Call 0x1C5D684
	075 Move X8, [X0+184]
	076 Move X0, [X22]
	077 Move X20, [X8]
	078 Call 0x1C17F10
	079 Move X2, [X21]
	080 Move X1, X20
	081 Move X21, X0
	082 Call ReadOnlyCollection`1<Object>..ctor, X0, X1
	083 Move [X19+144], X21
	084 Move X20, [X31+32]
	085 Move X19, [X31+40]
	086 Move X22, [X31+16]
	087 Move X21, [X31+24]
	088 Move X30, [X31+48]
	089 Return 

Method: System.Void .ctor(System.Collections.Generic.IEnumerable`1<System.Exception> innerExceptions)

Disassembly:
	0x03315528 MOV X0, X23
	0x0331552C BLR X8
	0x03315530 CMP W24, W0
	0x03315534 B.GE 0x3315668
	0x03315538 LDR X8, [X23]
	0x0331553C LDR X1, [X29]
	0x03315540 LDRH W9, [X8 + 0x12E]
	0x03315544 CBZ X9, 0x3315568
	0x03315548 LDR X10, [X8 + 0xB0]
	0x0331554C ADD X10, X10, 0x8
	0x03315550 LDUR X11, [X10 - 0x8]
	0x03315554 CMP X11, X1
	0x03315558 B.EQ 0x3315578
	0x0331555C SUBS X9, X9, 0x1
	0x03315560 ADD X10, X10, 0x10
	0x03315564 B.NE 0x3315550
	0x03315568 MOV X0, X23
	0x0331556C MOV W2, W31
	0x03315570 BL 0x1C5C788
	0x03315574 B 0x3315584
	0x03315578 LDRSW X9, [X10]
	0x0331557C ADD X8, X8, X9, 0x4, LSL

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x10C8000
	007 Move X22, 0xE13000
	008 Move W8, [X21+2924]
	009 Move X22, [X22+3672]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xE13000
	017 Move X0, [X0+3672]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2924], W8
	021 Move X1, [X22]
	022 Move X0, X20
	023 Move X2, X19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]

Method: System.Void .ctor(System.Exception[] innerExceptions)

Disassembly:
	0x0331563C LDRSW X10, [X21 + 0x18]
	0x03315640 LDR W11, [X8 + 0x18]
	0x03315644 CMP W10, W11
	0x03315648 B.CS 0x331565C
	0x0331564C ADD W9, W10, 0x1
	0x03315650 ADD X8, X8, X10, 0x3, LSL
	0x03315654 STR W9, [X21 + 0x18]
	0x03315658 B 0x3315600
	0x0331565C LDR X8, [X9 + 0x20]
	0x03315660 MOV X0, X21
	0x03315664 B 0x3315610
	0x03315668 LDR W8, [X21 + 0x18]
	0x0331566C CMP W8, W22
	0x03315670 B.GT 0x33154B4
	0x03315674 LDR X0, [X31 + 0x8]
	0x03315678 LDR X8, [X0]
	0x0331567C LDP X9, X1, [X8 + 0x188]
	0x03315680 BLR X9
	0x03315684 LDR X8, [X26]
	0x03315688 MOV X19, X0
	0x0331568C MOV X0, X8
	0x03315690 BL 0x1C16F10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x10C8000
	007 Move X22, 0xE13000
	008 Move W8, [X21+2925]
	009 Move X22, [X22+3672]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xE13000
	017 Move X0, [X0+3672]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2925], W8
	021 Move X1, [X22]
	022 Move X0, X20
	023 Move X2, X19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Call AggregateException..ctor, X0, X1, X2
	030 Return 

Method: System.Void .ctor(System.String message, System.Collections.Generic.IEnumerable`1<System.Exception> innerExceptions)

Disassembly:
	0x03315580 ADD X0, X8, 0x138
	0x03315584 LDP X8, X2, [X0]
	0x03315588 MOV X0, X23
	0x0331558C MOV W1, W24
	0x03315590 BLR X8
	0x03315594 CBZ X0, 0x331561C
	0x03315598 LDR X9, [X0]
	0x0331559C LDR X8, [X26]
	0x033155A0 MOV X1, X0
	0x033155A4 LDRB W11, [X9 + 0x130]
	0x033155A8 LDRB W10, [X8 + 0x130]
	0x033155AC CMP W11, W10
	0x033155B0 B.CC 0x33155C8
	0x033155B4 LDR X9, [X9 + 0xC8]
	0x033155B8 ADD X9, X9, X10, 0x3, LSL
	0x033155BC LDUR X9, [X9 - 0x8]
	0x033155C0 CMP X9, X8
	0x033155C4 B.EQ 0x3315624
	0x033155C8 CBZ X20, 0x33156C8
	0x033155CC LDR W10, [X20 + 0x1C]
	0x033155D0 LDR X8, [X20 + 0x10]
	0x033155D4 LDR X9, [X19]
	0x033155D8 ADD W10, W10, 0x1
	0x033155DC STR W10, [X20 + 0x1C]
	0x033155E0 CBZ X8, 0x33156C8
	0x033155E4 LDRSW X10, [X20 + 0x18]
	0x033155E8 LDR W11, [X8 + 0x18]
	0x033155EC CMP W10, W11
	0x033155F0 B.CS 0x3315608
	0x033155F4 ADD W9, W10, 0x1
	0x033155F8 ADD X8, X8, X10, 0x3, LSL
	0x033155FC STR W9, [X20 + 0x18]
	0x03315600 STR X1, [X8 + 0x20]
	0x03315604 B 0x331561C
	0x03315608 LDR X8, [X9 + 0x20]
	0x0331560C MOV X0, X20
	0x03315610 LDR X8, [X8 + 0xC0]
	0x03315614 LDR X2, [X8 + 0x70]
	0x03315618 BL 0x301BF90
	0x0331561C ADD W24, W24, 0x1
	0x03315620 B 0x33154D8
	0x03315624 LDR W10, [X21 + 0x1C]
	0x03315628 LDR X8, [X21 + 0x10]
	0x0331562C LDR X9, [X25]
	0x03315630 ADD W10, W10, 0x1
	0x03315634 STR W10, [X21 + 0x1C]
	0x03315638 CBZ X8, 0x33156C8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x10C8000
	008 Move X23, 0xE13000
	009 Move W8, [X22+2926]
	010 Move X23, [X23+3680]
	011 Move X21, X2
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xE13000
	019 Move X0, [X0+3680]
	020 Call 0x1C17CF4
	021 Move X0, 0xE13000
	022 Move X0, [X0+3688]
	023 Call 0x1C17CF4
	024 Move X0, 0xE13000
	025 Move X0, [X0+3696]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+2926], W8
	029 Move X1, [X23]
	030 Move X0, X21
	031 Call 0x1C17E00
	032 Move X22, X0
	033 Compare X0, 0
	034 JumpIfNotEqual {48}
	035 Compare X21, 0
	036 JumpIfEqual {47}
	037 Move X8, 0xE13000
	038 Move X8, [X8+3696]
	039 Move X0, [X8]
	040 Call 0x1C17F10
	041 Move X8, 0xE13000
	042 Move X8, [X8+3688]
	043 Move X1, X21
	044 Move X22, X0
	045 Move X2, [X8]
	046 Call List`1<Object>..ctor, X0, X1
	047 Move X22, X31
	048 Move X0, X20
	049 Move X1, X19
	050 Move X2, X22
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X30, [X31+48]
	056 Move X23, [X31+56]
	057 Call AggregateException..ctor, X0, X1, X2
	058 Return 

Method: System.Void .ctor(System.String message, System.Exception[] innerExceptions)

Disassembly:
	0x03315694 MOV X1, X19

ISIL:
No ISIL was generated
Method: System.Void .ctor(System.String message, System.Collections.Generic.IList`1<System.Exception> innerExceptions)

Disassembly:
	0x03315698 MOV X2, X20
	0x0331569C MOV X21, X0
	0x033156A0 BL 0x3314698
	0x033156A4 MOV X0, X21
	0x033156A8 LDP X20, X19, [X31 + 0x60]
	0x033156AC LDP X22, X21, [X31 + 0x50]
	0x033156B0 LDP X24, X23, [X31 + 0x40]
	0x033156B4 LDP X26, X25, [X31 + 0x30]
	0x033156B8 LDP X28, X27, [X31 + 0x20]
	0x033156BC LDP X29, X30, [X31 + 0x10]
	0x033156C0 ADD X31, X31, 0x70
	0x033156C4 RET
	0x033156C8 BL 0x1C16F20
	0x033156CC STR X30, [X31 - 0x40]!
	0x033156D0 STP X24, X23, [X31 + 0x10]
	0x033156D4 STP X22, X21, [X31 + 0x20]
	0x033156D8 STP X20, X19, [X31 + 0x30]
	0x033156DC ADRP X20, 0x10C7000
	0x033156E0 LDRB W8, [X20 + 0xB76]
	0x033156E4 MOV X19, X0
	0x033156E8 TBNZ X8, 0x0, 0x3315718
	0x033156EC ADRP X0, 0xE12000
	0x033156F0 LDR X0, [X0 + 0xEE8]
	0x033156F4 BL 0x1C16CF4
	0x033156F8 ADRP X0, 0xE12000
	0x033156FC LDR X0, [X0 + 0xF28]
	0x03315700 BL 0x1C16CF4
	0x03315704 ADRP X0, 0xE12000
	0x03315708 LDR X0, [X0 + 0xF30]
	0x0331570C BL 0x1C16CF4
	0x03315710 MOVZ W8, 0x1
	0x03315714 STRB W8, [X20 + 0xB76]
	0x03315718 LDR X0, [X19 + 0x90]
	0x0331571C CBZ X0, 0x3315800
	0x03315720 ADRP X22, 0xE12000
	0x03315724 LDR X22, [X22 + 0xEE8]
	0x03315728 LDR X1, [X22]
	0x0331572C BL 0x25518BC
	0x03315730 CBZ W0, 0x331583C
	0x03315734 MOVZ W0, 0x10
	0x03315738 MOV X1, X31
	0x0331573C BL 0x3235A9C
	0x03315740 MOV X20, X0
	0x03315744 MOV X0, X19
	0x03315748 MOV X1, X31
	0x0331574C BL 0x33B3134
	0x03315750 CBZ X20, 0x3315800
	0x03315754 MOV X1, X0
	0x03315758 MOV X0, X20
	0x0331575C MOV X2, X31
	0x03315760 BL 0x32333E0
	0x03315764 MOVZ W1, 0x20
	0x03315768 MOV X0, X20
	0x0331576C MOV X2, X31
	0x03315770 BL 0x3233D30
	0x03315774 LDR X0, [X19 + 0x90]
	0x03315778 CBZ X0, 0x3315800
	0x0331577C ADRP X23, 0xE12000
	0x03315780 ADRP X24, 0xE12000
	0x03315784 LDR X23, [X23 + 0xF28]
	0x03315788 LDR X24, [X24 + 0xF30]
	0x0331578C MOV W21, W31
	0x03315790 LDR X1, [X22]
	0x03315794 BL 0x25518BC
	0x03315798 CMP W21, W0
	0x0331579C B.GE 0x3315804
	0x033157A0 MOVZ W1, 0x28
	0x033157A4 MOV X0, X20
	0x033157A8 MOV X2, X31
	0x033157AC BL 0x3233D30
	0x033157B0 LDR X0, [X19 + 0x90]
	0x033157B4 CBZ X0, 0x3315800
	0x033157B8 LDR X2, [X23]
	0x033157BC MOV W1, W21
	0x033157C0 BL 0x2551944
	0x033157C4 CBZ X0, 0x3315800
	0x033157C8 LDR X8, [X0]
	0x033157CC LDP X9, X1, [X8 + 0x188]
	0x033157D0 BLR X9
	0x033157D4 MOV X1, X0
	0x033157D8 MOV X0, X20
	0x033157DC MOV X2, X31
	0x033157E0 BL 0x32333E0
	0x033157E4 LDR X1, [X24]
	0x033157E8 MOV X0, X20
	0x033157EC MOV X2, X31
	0x033157F0 BL 0x32333E0
	0x033157F4 LDR X0, [X19 + 0x90]
	0x033157F8 ADD W21, W21, 0x1
	0x033157FC CBNZ X0, 0x3315790
	0x03315800 BL 0x1C16F20
	0x03315804 MOV X0, X20
	0x03315808 MOV X1, X31
	0x0331580C BL 0x323260C
	0x03315810 SUB W1, W0, 0x1
	0x03315814 MOV X0, X20
	0x03315818 MOV X2, X31
	0x0331581C BL 0x3232ADC
	0x03315820 MOV X0, X20
	0x03315824 LDP X20, X19, [X31 + 0x30]
	0x03315828 LDP X22, X21, [X31 + 0x20]
	0x0331582C LDP X24, X23, [X31 + 0x10]
	0x03315830 MOV X1, X31
	0x03315834 LDR X30, [X31], #0x40
	0x03315838 B 0x3235BE8
	0x0331583C MOV X0, X19
	0x03315840 LDP X20, X19, [X31 + 0x30]
	0x03315844 LDP X22, X21, [X31 + 0x20]
	0x03315848 LDP X24, X23, [X31 + 0x10]
	0x0331584C MOV X1, X31
	0x03315850 LDR X30, [X31], #0x40
	0x03315854 B 0x33B3134
	0x03315858 SUB X31, X31, 0x70
	0x0331585C STP X29, X30, [X31 + 0x10]
	0x03315860 STP X28, X27, [X31 + 0x20]
	0x03315864 STP X26, X25, [X31 + 0x30]
	0x03315868 STP X24, X23, [X31 + 0x40]
	0x0331586C STP X22, X21, [X31 + 0x50]
	0x03315870 STP X20, X19, [X31 + 0x60]
	0x03315874 ADRP X20, 0x10C7000
	0x03315878 ADRP X21, 0xDDE000
	0x0331587C LDRB W8, [X20 + 0xB77]
	0x03315880 LDR X21, [X21 + 0x8F0]
	0x03315884 MOV X19, X0
	0x03315888 TBNZ X8, 0x0, 0x33158F4
	0x0331588C ADRP X0, 0xDE0000
	0x03315890 LDR X0, [X0 + 0xC48]
	0x03315894 BL 0x1C16CF4
	0x03315898 ADRP X0, 0xDDE000
	0x0331589C LDR X0, [X0 + 0x758]
	0x033158A0 BL 0x1C16CF4
	0x033158A4 ADRP X0, 0xE12000
	0x033158A8 LDR X0, [X0 + 0xEE8]
	0x033158AC BL 0x1C16CF4
	0x033158B0 ADRP X0, 0xE12000
	0x033158B4 LDR X0, [X0 + 0xF28]
	0x033158B8 BL 0x1C16CF4
	0x033158BC ADRP X0, 0xDDE000
	0x033158C0 LDR X0, [X0 + 0x8F0]
	0x033158C4 BL 0x1C16CF4
	0x033158C8 ADRP X0, 0xE12000
	0x033158CC LDR X0, [X0 + 0xF38]
	0x033158D0 BL 0x1C16CF4
	0x033158D4 ADRP X0, 0xE12000
	0x033158D8 LDR X0, [X0 + 0xF40]
	0x033158DC BL 0x1C16CF4
	0x033158E0 ADRP X0, 0xE12000
	0x033158E4 LDR X0, [X0 + 0xF48]
	0x033158E8 BL 0x1C16CF4
	0x033158EC MOVZ W8, 0x1
	0x033158F0 STRB W8, [X20 + 0xB77]
	0x033158F4 LDR X0, [X21]
	0x033158F8 BL 0x1C16F10
	0x033158FC MOV X1, X31
	0x03315900 MOV X20, X0
	0x03315904 BL 0x3231AC4
	0x03315908 MOV X0, X19
	0x0331590C MOV X1, X31
	0x03315910 BL 0x33B342C
	0x03315914 CBZ X20, 0x3315A38
	0x03315918 MOV X1, X0
	0x0331591C MOV X0, X20
	0x03315920 MOV X2, X31
	0x03315924 BL 0x32333E0
	0x03315928 LDR X0, [X19 + 0x90]
	0x0331592C CBZ X0, 0x3315A38
	0x03315930 ADRP X23, 0xE12000
	0x03315934 ADRP X24, 0xE12000
	0x03315938 ADRP X25, 0xDE0000
	0x0331593C ADRP X26, 0xDDE000
	0x03315940 ADRP X27, 0xE12000
	0x03315944 ADRP X28, 0xE12000
	0x03315948 ADRP X29, 0xE12000
	0x0331594C LDR X23, [X23 + 0xEE8]
	0x03315950 LDR X24, [X24 + 0xF48]
	0x03315954 LDR X25, [X25 + 0xC48]
	0x03315958 LDR X26, [X26 + 0x758]
	0x0331595C LDR X27, [X27 + 0xF38]
	0x03315960 LDR X28, [X28 + 0xF28]
	0x03315964 LDR X29, [X29 + 0xF40]
	0x03315968 MOV W21, W31
	0x0331596C LDR X1, [X23]
	0x03315970 BL 0x25518BC
	0x03315974 CMP W21, W0
	0x03315978 B.GE 0x3315A3C
	0x0331597C MOV X0, X20
	0x03315980 MOV X1, X31
	0x03315984 BL 0x3233888
	0x03315988 LDR X1, [X24]
	0x0331598C MOV X0, X20
	0x03315990 MOV X2, X31
	0x03315994 BL 0x32333E0
	0x03315998 LDR X0, [X25]
	0x0331599C LDR W8, [X0 + 0xE0]
	0x033159A0 CBNZ W8, 0x33159A8
	0x033159A4 BL 0x1C16DFC
	0x033159A8 MOV X0, X31
	0x033159AC BL 0x3338524
	0x033159B0 MOV X22, X0
	0x033159B4 LDR X0, [X26]
	0x033159B8 ADD X1, X31, 0xC
	0x033159BC STR W21, [X31 + 0xC]
	0x033159C0 BL 0x1C16E04
	0x033159C4 LDR X2, [X27]
	0x033159C8 MOV X3, X0
	0x033159CC MOV X0, X20
	0x033159D0 MOV X1, X22
	0x033159D4 MOV X4, X31
	0x033159D8 BL 0x3234F08
	0x033159DC LDR X0, [X19 + 0x90]
	0x033159E0 CBZ X0, 0x3315A38
	0x033159E4 LDR X2, [X28]
	0x033159E8 MOV W1, W21
	0x033159EC BL 0x2551944
	0x033159F0 CBZ X0, 0x3315A38
	0x033159F4 LDR X8, [X0]
	0x033159F8 LDP X9, X1, [X8 + 0x168]
	0x033159FC BLR X9
	0x03315A00 MOV X1, X0
	0x03315A04 MOV X0, X20
	0x03315A08 MOV X2, X31
	0x03315A0C BL 0x32333E0
	0x03315A10 LDR X1, [X29]
	0x03315A14 MOV X0, X20
	0x03315A18 MOV X2, X31
	0x03315A1C BL 0x32333E0
	0x03315A20 MOV X0, X20
	0x03315A24 MOV X1, X31
	0x03315A28 BL 0x3233888
	0x03315A2C LDR X0, [X19 + 0x90]
	0x03315A30 ADD W21, W21, 0x1
	0x03315A34 CBNZ X0, 0x331596C
	0x03315A38 BL 0x1C16F20
	0x03315A3C LDR X8, [X20]
	0x03315A40 MOV X0, X20
	0x03315A44 LDP X9, X1, [X8 + 0x168]
	0x03315A48 BLR X9
	0x03315A4C LDP X20, X19, [X31 + 0x60]
	0x03315A50 LDP X22, X21, [X31 + 0x50]
	0x03315A54 LDP X24, X23, [X31 + 0x40]
	0x03315A58 LDP X26, X25, [X31 + 0x30]
	0x03315A5C LDP X28, X27, [X31 + 0x20]
	0x03315A60 LDP X29, X30, [X31 + 0x10]
	0x03315A64 ADD X31, X31, 0x70

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X22, 0x10C8000
	013 Move W8, [X22+2927]
	014 Move X20, X2
	015 Move X21, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {41}
	021 Move X0, 0xE11000
	022 Move X0, [X0+2248]
	023 Call 0x1C17CF4
	024 Move X0, 0xDDF000
	025 Move X0, [X0+2000]
	026 Call 0x1C17CF4
	027 Move X0, 0xE13000
	028 Move X0, [X0+3704]
	029 Call 0x1C17CF4
	030 Move X0, 0xE13000
	031 Move X0, [X0+3680]
	032 Call 0x1C17CF4
	033 Move X0, 0xE13000
	034 Move X0, [X0+3656]
	035 Call 0x1C17CF4
	036 Move X0, 0xE13000
	037 Move X0, [X0+3664]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X22+2927], W8
	041 Move X26, 0xDDF000
	042 Move X26, [X26+2000]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 NotImplemented "Instruction CSEL not yet implemented."
	045 NotImplemented "Instruction CSEL not yet implemented."
	046 Compare X20, 0
	047 JumpIfEqual {231}
	048 Move X25, 0xE13000
	049 Move X8, [X20]
	050 Move X25, [X25+3704]
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 Move X1, [X25]
	053 Compare X9, 0
	054 JumpIfEqual {61}
	055 Move X10, [X8+176]
	056 Add X10, X10, 8
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Subtract X9, X9, 1
	060 Add X10, X10, 16
	061 Move X0, X20
	062 Move W2, W31
	063 Call 0x1C5D788
	064 NotImplemented "Instruction LDRSW not yet implemented."
	065 Add X8, X8, X9
	066 Add X0, X8, 312
	067 Move X8, [X0]
	068 Move X1, [X0+8]
	069 Move X24, 0xE13000
	070 Move X24, [X24+3680]
	071 Move X0, X20
	072 NotImplemented "Instruction BLR not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 NotImplemented "Instruction CSEL not yet implemented."
	075 NotImplemented "Instruction CSEL not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X8, [X20]
	078 Move X1, [X24]
	079 NotImplemented "Instruction LDRH not yet implemented."
	080 Compare X9, 0
	081 JumpIfEqual {88}
	082 Move X10, [X8+176]
	083 Add X10, X10, 8
	084 NotImplemented "Instruction LDUR not yet implemented."
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Subtract X9, X9, 1
	087 Add X10, X10, 16
	088 Move X0, X20
	089 Move W2, W31
	090 Call 0x1C5D788
	091 Move X23, X31
	092 Move X21, X27
	093 Move X22, X28
	094 NotImplemented "Instruction LDRSW not yet implemented."
	095 Add X8, X8, X9
	096 Add X0, X8, 312
	097 Move X8, [X0]
	098 Move X2, [X0+8]
	099 Move X0, X20
	100 Move W1, W31
	101 NotImplemented "Instruction BLR not yet implemented."
	102 Move X23, X0
	103 Move X0, [X26]
	104 Move W8, [X0+224]
	105 Compare W8, 0
	106 JumpIfNotEqual {108}
	107 Call 0x1C17DFC
	108 Move X26, 0xE11000
	109 Move X26, [X26+2248]
	110 Move X0, X21
	111 Move X1, X22
	112 Move X2, X23
	113 Move X3, X31
	114 Call Exception..ctor, X0, X1, X2
	115 Move X8, [X20]
	116 Move X1, [X25]
	117 NotImplemented "Instruction LDRH not yet implemented."
	118 Compare X9, 0
	119 JumpIfEqual {126}
	120 Move X10, [X8+176]
	121 Add X10, X10, 8
	122 NotImplemented "Instruction LDUR not yet implemented."
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Subtract X9, X9, 1
	125 Add X10, X10, 16
	126 Move X0, X20
	127 Move W2, W31
	128 Call 0x1C5D788
	129 NotImplemented "Instruction LDRSW not yet implemented."
	130 Add X8, X8, X9
	131 Add X0, X8, 312
	132 Move X8, [X0]
	133 Move X1, [X0+8]
	134 Move X0, X20
	135 NotImplemented "Instruction BLR not yet implemented."
	136 Move X8, [X26]
	137 Move W1, W0
	138 Move X0, X8
	139 Call 0x1C17D6C
	140 Compare X0, 0
	141 JumpIfEqual {252}
	142 Move W8, [X0+24]
	143 Move X21, X0
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move X22, X31
	146 Move X8, [X20]
	147 Move X1, [X24]
	148 NotImplemented "Instruction LDRH not yet implemented."
	149 Compare X9, 0
	150 JumpIfEqual {157}
	151 Move X10, [X8+176]
	152 Add X10, X10, 8
	153 NotImplemented "Instruction LDUR not yet implemented."
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Subtract X9, X9, 1
	156 Add X10, X10, 16
	157 Move X0, X20
	158 Move W2, W31
	159 Call 0x1C5D788
	160 NotImplemented "Instruction LDRSW not yet implemented."
	161 Add X8, X8, X9
	162 Add X0, X8, 312
	163 Move X8, [X0]
	164 Move X2, [X0+8]
	165 Move X0, X20
	166 Move W1, W22
	167 NotImplemented "Instruction BLR not yet implemented."
	168 Move X23, X0
	169 Compare X0, 0
	170 JumpIfEqual {206}
	171 Move X8, [X21]
	172 Move X0, X23
	173 Move X1, [X8+64]
	174 Call 0x1C17E00
	175 Compare X0, 0
	176 JumpIfEqual {228}
	177 Move W8, [X21+24]
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Add X9, X21, X22
	180 Add X22, X22, 1
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Move [X9+32], X23
	183 Move X8, 0xE13000
	184 Move X8, [X8+3664]
	185 Move X20, 0xE13000
	186 Move X0, [X8]
	187 Move X20, [X20+3656]
	188 Call 0x1C17F10
	189 Move X2, [X20]
	190 Move X1, X21
	191 Move X20, X0
	192 Call ReadOnlyCollection`1<Object>..ctor, X0, X1
	193 Move [X19+144], X20
	194 Move X20, [X31+80]
	195 Move X19, [X31+88]
	196 Move X22, [X31+64]
	197 Move X21, [X31+72]
	198 Move X24, [X31+48]
	199 Move X23, [X31+56]
	200 Move X26, [X31+32]
	201 Move X25, [X31+40]
	202 Move X28, [X31+16]
	203 Move X27, [X31+24]
	204 Move X30, [X31+96]
	205 Return 
	206 Move W8, [X21+24]
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Add X8, X21, X22
	209 Move [X8+32], X23
	210 Move X0, 0xDE7000
	211 Move X0, [X0+1400]
	212 Call 0x1C17D08
	213 Call 0x1C17F10
	214 Move X19, X0
	215 Move X0, 0xE13000
	216 Move X0, [X0+3712]
	217 Call 0x1C17D08
	218 Move X1, X0
	219 Move X0, X19
	220 Call ArgumentException..ctor, X0, X1
	221 Move X0, 0xE13000
	222 Move X0, [X0+3720]
	223 Call 0x1C17D08
	224 Move X1, X0
	225 Move X0, X19
	226 Call 0x1C17DEC
	227 Call 0x1C17F28
	228 Call 0x1C17F44
	229 Move X1, X31
	230 Call 0x1C17DEC
	231 Move X0, [X26]
	232 Move W8, [X0+224]
	233 Compare W8, 0
	234 JumpIfNotEqual {236}
	235 Call 0x1C17DFC
	236 Move X0, X19
	237 Move X1, X21
	238 Move X2, X31
	239 Move X3, X31
	240 Call Exception..ctor, X0, X1, X2
	241 Move X0, 0xDE4000
	242 Move X0, [X0+1320]
	243 Call 0x1C17D08
	244 Call 0x1C17F10
	245 Move X19, X0
	246 Move X0, 0xE13000
	247 Move X0, [X0+3728]
	248 Call 0x1C17D08
	249 Move X1, X0
	250 Move X0, X19
	251 Call ArgumentNullException..ctor, X0, X1
	252 Call 0x1C17F20

Method: System.Void .ctor(System.Collections.Generic.IEnumerable`1<System.Runtime.ExceptionServices.ExceptionDispatchInfo> innerExceptionInfos)

Disassembly:
	0x03315A8C ADRP X0, 0xDDE000
	0x03315A90 LDR X0, [X0 + 0x7D0]
	0x03315A94 BL 0x1C16CF4
	0x03315A98 ADRP X0, 0xE12000
	0x03315A9C LDR X0, [X0 + 0xF50]
	0x03315AA0 BL 0x1C16CF4
	0x03315AA4 MOVZ W8, 0x1
	0x03315AA8 STRB W8, [X21 + 0xB78]
	0x03315AAC LDR X0, [X20]
	0x03315AB0 ADRP X20, 0xE12000
	0x03315AB4 LDR W8, [X0 + 0xE0]
	0x03315AB8 LDR X20, [X20 + 0xF50]
	0x03315ABC CBNZ W8, 0x3315AC4
	0x03315AC0 BL 0x1C16DFC
	0x03315AC4 LDR X1, [X20]
	0x03315AC8 MOV X0, X19
	0x03315ACC MOV X2, X31
	0x03315AD0 BL 0x33B2C70
	0x03315AD4 MOVZ W8, 0x1600
	0x03315AD8 MOVK W8, 0x80130000
	0x03315ADC STR W8, [X19 + 0x60]
	0x03315AE0 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x10C8000
	007 Move X22, 0xE13000
	008 Move W8, [X21+2928]
	009 Move X22, [X22+3672]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xE13000
	017 Move X0, [X0+3672]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2928], W8
	021 Move X1, [X22]
	022 Move X0, X20
	023 Move X2, X19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]

Method: System.Void .ctor(System.String message, System.Collections.Generic.IEnumerable`1<System.Runtime.ExceptionServices.ExceptionDispatchInfo> innerExceptionInfos)

Disassembly:
	0x03315AE4 LDP X30, X21, [X31], #0x20
	0x03315AE8 RET
	0x03315AEC STR X30, [X31 - 0x30]!
	0x03315AF0 STP X22, X21, [X31 + 0x10]
	0x03315AF4 STP X20, X19, [X31 + 0x20]
	0x03315AF8 ADRP X21, 0x10C7000
	0x03315AFC ADRP X22, 0xDDE000
	0x03315B00 LDRB W8, [X21 + 0xB79]
	0x03315B04 LDR X22, [X22 + 0x7D0]
	0x03315B08 MOV X20, X1
	0x03315B0C MOV X19, X0
	0x03315B10 TBNZ X8, 0x0, 0x3315B28
	0x03315B14 ADRP X0, 0xDDE000
	0x03315B18 LDR X0, [X0 + 0x7D0]
	0x03315B1C BL 0x1C16CF4
	0x03315B20 MOVZ W8, 0x1
	0x03315B24 STRB W8, [X21 + 0xB79]
	0x03315B28 LDR X0, [X22]
	0x03315B2C LDR W8, [X0 + 0xE0]
	0x03315B30 CBNZ W8, 0x3315B38
	0x03315B34 BL 0x1C16DFC
	0x03315B38 MOV X0, X19
	0x03315B3C MOV X1, X20
	0x03315B40 MOV X2, X31
	0x03315B44 BL 0x33B2C70
	0x03315B48 MOVZ W8, 0x1600
	0x03315B4C MOVK W8, 0x80130000
	0x03315B50 STR W8, [X19 + 0x60]
	0x03315B54 LDP X20, X19, [X31 + 0x20]
	0x03315B58 LDP X22, X21, [X31 + 0x10]
	0x03315B5C LDR X30, [X31], #0x30
	0x03315B60 RET
	0x03315B64 STP X30, X23, [X31 - 0x30]!
	0x03315B68 STP X22, X21, [X31 + 0x10]
	0x03315B6C STP X20, X19, [X31 + 0x20]
	0x03315B70 ADRP X22, 0x10C7000
	0x03315B74 ADRP X23, 0xDDE000
	0x03315B78 LDRB W8, [X22 + 0xB7A]
	0x03315B7C LDR X23, [X23 + 0x7D0]
	0x03315B80 MOV X20, X2
	0x03315B84 MOV X21, X1
	0x03315B88 MOV X19, X0
	0x03315B8C TBNZ X8, 0x0, 0x3315BA4
	0x03315B90 ADRP X0, 0xDDE000
	0x03315B94 LDR X0, [X0 + 0x7D0]
	0x03315B98 BL 0x1C16CF4
	0x03315B9C MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x10C8000
	008 Move X23, 0xE13000
	009 Move W8, [X22+2929]
	010 Move X23, [X23+3736]
	011 Move X21, X2
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xE13000
	019 Move X0, [X0+3736]
	020 Call 0x1C17CF4
	021 Move X0, 0xE13000
	022 Move X0, [X0+3744]
	023 Call 0x1C17CF4
	024 Move X0, 0xE13000
	025 Move X0, [X0+3752]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+2929], W8
	029 Move X1, [X23]
	030 Move X0, X21
	031 Call 0x1C17E00
	032 Move X22, X0
	033 Compare X0, 0
	034 JumpIfNotEqual {48}
	035 Compare X21, 0
	036 JumpIfEqual {47}
	037 Move X8, 0xE13000
	038 Move X8, [X8+3752]
	039 Move X0, [X8]
	040 Call 0x1C17F10
	041 Move X8, 0xE13000
	042 Move X8, [X8+3744]
	043 Move X1, X21
	044 Move X22, X0
	045 Move X2, [X8]
	046 Call List`1<Object>..ctor, X0, X1
	047 Move X22, X31
	048 Move X0, X20
	049 Move X1, X19
	050 Move X2, X22
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X30, [X31+48]
	056 Move X23, [X31+56]

Method: System.Void .ctor(System.String message, System.Collections.Generic.IList`1<System.Runtime.ExceptionServices.ExceptionDispatchInfo> innerExceptionInfos)

Disassembly:
	0x03315BA0 STRB W8, [X22 + 0xB7A]
	0x03315BA4 LDR X0, [X23]
	0x03315BA8 LDR W8, [X0 + 0xE0]
	0x03315BAC CBNZ W8, 0x3315BB4
	0x03315BB0 BL 0x1C16DFC
	0x03315BB4 MOV X0, X19
	0x03315BB8 MOV X1, X21
	0x03315BBC MOV X2, X20
	0x03315BC0 MOV X3, X31
	0x03315BC4 BL 0x33B2CA0
	0x03315BC8 MOVZ W8, 0x1600
	0x03315BCC MOVK W8, 0x80130000
	0x03315BD0 STR W8, [X19 + 0x60]
	0x03315BD4 LDP X20, X19, [X31 + 0x20]
	0x03315BD8 LDP X22, X21, [X31 + 0x10]
	0x03315BDC LDP X30, X23, [X31], #0x30
	0x03315BE0 RET
	0x03315BE4 STR X30, [X31 - 0x40]!
	0x03315BE8 STP X24, X23, [X31 + 0x10]
	0x03315BEC STP X22, X21, [X31 + 0x20]
	0x03315BF0 STP X20, X19, [X31 + 0x30]
	0x03315BF4 ADRP X24, 0x10C7000
	0x03315BF8 ADRP X23, 0xDDE000
	0x03315BFC LDRB W8, [X24 + 0xB7B]
	0x03315C00 LDR X23, [X23 + 0x7D0]
	0x03315C04 MOV X19, X3
	0x03315C08 MOV X20, X2
	0x03315C0C MOV X21, X1
	0x03315C10 MOV X22, X0
	0x03315C14 TBNZ X8, 0x0, 0x3315C2C
	0x03315C18 ADRP X0, 0xDDE000
	0x03315C1C LDR X0, [X0 + 0x7D0]
	0x03315C20 BL 0x1C16CF4
	0x03315C24 MOVZ W8, 0x1
	0x03315C28 STRB W8, [X24 + 0xB7B]
	0x03315C2C LDR X0, [X23]
	0x03315C30 LDR W8, [X0 + 0xE0]
	0x03315C34 CBNZ W8, 0x3315C3C
	0x03315C38 BL 0x1C16DFC
	0x03315C3C MOV X0, X22
	0x03315C40 MOV X1, X21
	0x03315C44 MOV X2, X20
	0x03315C48 MOV X3, X19
	0x03315C4C LDP X20, X19, [X31 + 0x30]
	0x03315C50 LDP X22, X21, [X31 + 0x20]
	0x03315C54 LDP X24, X23, [X31 + 0x10]
	0x03315C58 MOV X4, X31
	0x03315C5C LDR X30, [X31], #0x40
	0x03315C60 B 0x33B2CD8
	0x03315C64 STP X30, X21, [X31 - 0x20]!
	0x03315C68 STP X20, X19, [X31 + 0x10]
	0x03315C6C ADRP X20, 0x10C7000
	0x03315C70 ADRP X21, 0xE12000
	0x03315C74 LDRB W8, [X20 + 0xB7C]
	0x03315C78 LDR X21, [X21 + 0xF58]
	0x03315C7C MOV X19, X0
	0x03315C80 TBNZ X8, 0x0, 0x3315C98
	0x03315C84 ADRP X0, 0xE12000
	0x03315C88 LDR X0, [X0 + 0xF58]
	0x03315C8C BL 0x1C16CF4
	0x03315C90 MOVZ W8, 0x1
	0x03315C94 STRB W8, [X20 + 0xB7C]
	0x03315C98 LDR X1, [X21]
	0x03315C9C MOV X0, X19
	0x03315CA0 MOV X2, X31
	0x03315CA4 BL 0x338C8D8
	0x03315CA8 MOVZ W8, 0x57
	0x03315CAC MOVK W8, 0x80070000
	0x03315CB0 STR W8, [X19 + 0x60]
	0x03315CB4 LDP X20, X19, [X31 + 0x10]
	0x03315CB8 LDP X30, X21, [X31], #0x20
	0x03315CBC RET
	0x03315CC0 STP X30, X19, [X31 - 0x10]!
	0x03315CC4 MOV X3, X31
	0x03315CC8 MOV X19, X0
	0x03315CCC BL 0x338C990
	0x03315CD0 MOVZ W8, 0x57
	0x03315CD4 MOVK W8, 0x80070000
	0x03315CD8 STR W8, [X19 + 0x60]
	0x03315CDC LDP X30, X19, [X31], #0x10
	0x03315CE0 RET
	0x03315CE4 STR X30, [X31 - 0x20]!
	0x03315CE8 STP X20, X19, [X31 + 0x10]
	0x03315CEC MOV X19, X2
	0x03315CF0 MOV X2, X3
	0x03315CF4 MOV X3, X31
	0x03315CF8 MOV X20, X0
	0x03315CFC BL 0x338C990
	0x03315D00 MOVZ W8, 0x57
	0x03315D04 MOVK W8, 0x80070000
	0x03315D08 STR X19, [X20 + 0x90]
	0x03315D0C STR W8, [X20 + 0x60]
	0x03315D10 LDP X20, X19, [X31 + 0x10]
	0x03315D14 LDR X30, [X31], #0x20
	0x03315D18 RET
	0x03315D1C STP X30, X23, [X31 - 0x30]!
	0x03315D20 STP X22, X21, [X31 + 0x10]
	0x03315D24 STP X20, X19, [X31 + 0x20]
	0x03315D28 ADRP X23, 0x10C7000
	0x03315D2C LDRB W8, [X23 + 0xB7D]
	0x03315D30 MOV X21, X3
	0x03315D34 MOV X22, X2
	0x03315D38 MOV X20, X1
	0x03315D3C MOV X19, X0
	0x03315D40 TBNZ X8, 0x0, 0x3315D58
	0x03315D44 ADRP X0, 0xE12000
	0x03315D48 LDR X0, [X0 + 0xF60]
	0x03315D4C BL 0x1C16CF4
	0x03315D50 MOVZ W8, 0x1
	0x03315D54 STRB W8, [X23 + 0xB7D]
	0x03315D58 MOV X0, X19
	0x03315D5C MOV X1, X20
	0x03315D60 MOV X2, X22
	0x03315D64 MOV X3, X21
	0x03315D68 MOV X4, X31
	0x03315D6C BL 0x338CA74
	0x03315D70 CBZ X20, 0x3315DA0
	0x03315D74 ADRP X8, 0xE12000
	0x03315D78 LDR X8, [X8 + 0xF60]
	0x03315D7C MOV X0, X20
	0x03315D80 MOV X2, X31
	0x03315D84 LDR X1, [X8]
	0x03315D88 BL 0x32A9F64
	0x03315D8C STR X0, [X19 + 0x90]
	0x03315D90 LDP X20, X19, [X31 + 0x20]
	0x03315D94 LDP X22, X21, [X31 + 0x10]
	0x03315D98 LDP X30, X23, [X31], #0x30
	0x03315D9C RET
	0x03315DA0 BL 0x1C16F20
	0x03315DA4 STP X30, X25, [X31 - 0x40]!
	0x03315DA8 STP X24, X23, [X31 + 0x10]
	0x03315DAC STP X22, X21, [X31 + 0x20]
	0x03315DB0 STP X20, X19, [X31 + 0x30]
	0x03315DB4 ADRP X25, 0x10C7000
	0x03315DB8 ADRP X23, 0xE06000
	0x03315DBC ADRP X24, 0xDDE000
	0x03315DC0 LDRB W8, [X25 + 0xB7E]
	0x03315DC4 LDR X23, [X23 + 0xB60]
	0x03315DC8 LDR X24, [X24 + 0x6C0]
	0x03315DCC MOV X21, X3
	0x03315DD0 MOV X22, X2
	0x03315DD4 MOV X19, X1
	0x03315DD8 MOV X20, X0
	0x03315DDC TBNZ X8, 0x0, 0x3315E0C
	0x03315DE0 ADRP X0, 0xE06000
	0x03315DE4 LDR X0, [X0 + 0xB60]
	0x03315DE8 BL 0x1C16CF4
	0x03315DEC ADRP X0, 0xDDE000
	0x03315DF0 LDR X0, [X0 + 0x6C0]
	0x03315DF4 BL 0x1C16CF4
	0x03315DF8 ADRP X0, 0xE12000
	0x03315DFC LDR X0, [X0 + 0xF60]
	0x03315E00 BL 0x1C16CF4
	0x03315E04 MOVZ W8, 0x1
	0x03315E08 STRB W8, [X25 + 0xB7E]
	0x03315E0C MOV X0, X20
	0x03315E10 MOV X1, X19
	0x03315E14 MOV X2, X22
	0x03315E18 MOV X3, X21
	0x03315E1C MOV X4, X31
	0x03315E20 BL 0x33B3620
	0x03315E24 LDR X0, [X24]
	0x03315E28 LDR X20, [X20 + 0x90]
	0x03315E2C LDR X21, [X23]
	0x03315E30 LDR W8, [X0 + 0xE0]
	0x03315E34 CBNZ W8, 0x3315E3C
	0x03315E38 BL 0x1C16DFC
	0x03315E3C MOV X0, X21
	0x03315E40 MOV X1, X31
	0x03315E44 BL 0x338C698
	0x03315E48 CBZ X19, 0x3315E7C
	0x03315E4C ADRP X8, 0xE12000
	0x03315E50 LDR X8, [X8 + 0xF60]
	0x03315E54 MOV X3, X0
	0x03315E58 MOV X0, X19
	0x03315E5C MOV X2, X20
	0x03315E60 LDR X1, [X8]
	0x03315E64 LDP X20, X19, [X31 + 0x30]
	0x03315E68 LDP X22, X21, [X31 + 0x20]
	0x03315E6C LDP X24, X23, [X31 + 0x10]
	0x03315E70 MOV X4, X31
	0x03315E74 LDP X30, X25, [X31], #0x40
	0x03315E78 B 0x32A89BC
	0x03315E7C BL 0x1C16F20
	0x03315E80 STR X30, [X31 - 0x20]!
	0x03315E84 STP X20, X19, [X31 + 0x10]
	0x03315E88 ADRP X20, 0x10C7000
	0x03315E8C LDRB W8, [X20 + 0xB7F]
	0x03315E90 MOV X19, X0
	0x03315E94 TBNZ X8, 0x0, 0x3315EAC
	0x03315E98 ADRP X0, 0xE12000
	0x03315E9C LDR X0, [X0 + 0xF68]
	0x03315EA0 BL 0x1C16CF4
	0x03315EA4 MOVZ W8, 0x1
	0x03315EA8 STRB W8, [X20 + 0xB7F]
	0x03315EAC MOV X0, X19
	0x03315EB0 MOV X1, X31
	0x03315EB4 BL 0x33B3134
	0x03315EB8 LDR X8, [X19 + 0x90]
	0x03315EBC MOV X20, X0
	0x03315EC0 MOV X1, X31
	0x03315EC4 MOV X0, X8
	0x03315EC8 BL 0x32277A8
	0x03315ECC TBZ X0, 0x0, 0x3315EE0
	0x03315ED0 MOV X0, X20
	0x03315ED4 LDP X20, X19, [X31 + 0x10]
	0x03315ED8 LDR X30, [X31], #0x20
	0x03315EDC RET
	0x03315EE0 ADRP X8, 0xE12000
	0x03315EE4 LDR X8, [X8 + 0xF68]
	0x03315EE8 LDR X1, [X19 + 0x90]
	0x03315EEC MOV X2, X31
	0x03315EF0 LDR X0, [X8]
	0x03315EF4 BL 0x32094D4
	0x03315EF8 MOV X19, X0
	0x03315EFC MOV X0, X31
	0x03315F00 BL 0x33C1548
	0x03315F04 MOV X1, X0
	0x03315F08 MOV X0, X20
	0x03315F0C MOV X2, X19
	0x03315F10 LDP X20, X19, [X31 + 0x10]
	0x03315F14 MOV X3, X31
	0x03315F18 LDR X30, [X31], #0x20
	0x03315F1C B 0x32274B8
	0x03315F20 STP X30, X21, [X31 - 0x20]!
	0x03315F24 STP X20, X19, [X31 + 0x10]
	0x03315F28 ADRP X20, 0x10C7000
	0x03315F2C ADRP X21, 0xE12000
	0x03315F30 LDRB W8, [X20 + 0xB80]
	0x03315F34 LDR X21, [X21 + 0xC50]
	0x03315F38 MOV X19, X0
	0x03315F3C TBNZ X8, 0x0, 0x3315F54
	0x03315F40 ADRP X0, 0xE12000
	0x03315F44 LDR X0, [X0 + 0xC50]
	0x03315F48 BL 0x1C16CF4
	0x03315F4C MOVZ W8, 0x1
	0x03315F50 STRB W8, [X20 + 0xB80]
	0x03315F54 LDR X1, [X21]
	0x03315F58 MOV X0, X19
	0x03315F5C MOV X2, X31
	0x03315F60 BL 0x338C8D8
	0x03315F64 MOVZ W8, 0x4003
	0x03315F68 MOVK W8, 0x80000000
	0x03315F6C STR W8, [X19 + 0x60]
	0x03315F70 LDP X20, X19, [X31 + 0x10]
	0x03315F74 LDP X30, X21, [X31], #0x20
	0x03315F78 RET
	0x03315F7C STR X30, [X31 - 0x20]!
	0x03315F80 STP X20, X19, [X31 + 0x10]
	0x03315F84 MOV X19, X1
	0x03315F88 MOV X1, X2
	0x03315F8C MOV X2, X31
	0x03315F90 MOV X20, X0
	0x03315F94 BL 0x338C8D8
	0x03315F98 MOVZ W8, 0x4003
	0x03315F9C MOVK W8, 0x80000000
	0x03315FA0 STR X19, [X20 + 0x90]
	0x03315FA4 STR W8, [X20 + 0x60]
	0x03315FA8 LDP X20, X19, [X31 + 0x10]
	0x03315FAC LDR X30, [X31], #0x20
	0x03315FB0 RET
	0x03315FB4 B 0x3315D1C
	0x03315FB8 STP X30, X21, [X31 - 0x20]!
	0x03315FBC STP X20, X19, [X31 + 0x10]
	0x03315FC0 ADRP X20, 0x10C7000
	0x03315FC4 ADRP X21, 0xE08000
	0x03315FC8 LDRB W8, [X20 + 0xB82]
	0x03315FCC LDR X21, [X21 + 0xEE0]
	0x03315FD0 MOV X19, X0
	0x03315FD4 TBNZ X8, 0x0, 0x3315FEC
	0x03315FD8 ADRP X0, 0xE08000
	0x03315FDC LDR X0, [X0 + 0xEE0]
	0x03315FE0 BL 0x1C16CF4
	0x03315FE4 MOVZ W8, 0x1
	0x03315FE8 STRB W8, [X20 + 0xB82]

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0x10C8000
	013 Move W8, [X21+2930]
	014 Move X20, X2
	015 Move X23, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {41}
	021 Move X0, 0xE11000
	022 Move X0, [X0+2248]
	023 Call 0x1C17CF4
	024 Move X0, 0xDDF000
	025 Move X0, [X0+2000]
	026 Call 0x1C17CF4
	027 Move X0, 0xE13000
	028 Move X0, [X0+3760]
	029 Call 0x1C17CF4
	030 Move X0, 0xE13000
	031 Move X0, [X0+3736]
	032 Call 0x1C17CF4
	033 Move X0, 0xE13000
	034 Move X0, [X0+3656]
	035 Call 0x1C17CF4
	036 Move X0, 0xE13000
	037 Move X0, [X0+3664]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X21+2930], W8
	041 Move X26, 0xDDF000
	042 Move X26, [X26+2000]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 NotImplemented "Instruction CSEL not yet implemented."
	045 NotImplemented "Instruction CSEL not yet implemented."
	046 Compare X20, 0
	047 JumpIfEqual {264}
	048 Move X25, 0xE13000
	049 Move X8, [X20]
	050 Move X25, [X25+3760]
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 Move X1, [X25]
	053 Compare X9, 0
	054 JumpIfEqual {61}
	055 Move X10, [X8+176]
	056 Add X10, X10, 8
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Subtract X9, X9, 1
	060 Add X10, X10, 16
	061 Move X0, X20
	062 Move W2, W31
	063 Call 0x1C5D788
	064 NotImplemented "Instruction LDRSW not yet implemented."
	065 Add X8, X8, X9
	066 Add X0, X8, 312
	067 Move X8, [X0]
	068 Move X1, [X0+8]
	069 Move X24, 0xE13000
	070 Move X24, [X24+3736]
	071 Move X0, X20
	072 NotImplemented "Instruction BLR not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 NotImplemented "Instruction CSEL not yet implemented."
	075 NotImplemented "Instruction CSEL not yet implemented."
	076 Move X8, [X20]
	077 Move X1, [X24]
	078 NotImplemented "Instruction LDRH not yet implemented."
	079 Compare X9, 0
	080 JumpIfEqual {87}
	081 Move X10, [X8+176]
	082 Add X10, X10, 8
	083 NotImplemented "Instruction LDUR not yet implemented."
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Subtract X9, X9, 1
	086 Add X10, X10, 16
	087 Move X0, X20
	088 Move W2, W31
	089 Call 0x1C5D788
	090 Move X23, X31
	091 NotImplemented "Instruction LDRSW not yet implemented."
	092 Add X8, X8, X9
	093 Add X0, X8, 312
	094 Move X8, [X0]
	095 Move X2, [X0+8]
	096 Move X0, X20
	097 Move W1, W31
	098 NotImplemented "Instruction BLR not yet implemented."
	099 NotImplemented "Instruction CMP not yet implemented."
	100 NotImplemented "Instruction CSEL not yet implemented."
	101 NotImplemented "Instruction CSEL not yet implemented."
	102 Compare X0, 0
	103 JumpIfEqual {118}
	104 Move X8, [X20]
	105 Move X1, [X24]
	106 NotImplemented "Instruction LDRH not yet implemented."
	107 Compare X9, 0
	108 JumpIfEqual {115}
	109 Move X10, [X8+176]
	110 Add X10, X10, 8
	111 NotImplemented "Instruction LDUR not yet implemented."
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Subtract X9, X9, 1
	114 Add X10, X10, 16
	115 Move X0, X20
	116 Move W2, W31
	117 Call 0x1C5D788
	118 Move X23, X31
	119 Move X21, X27
	120 Move X22, X28
	121 NotImplemented "Instruction LDRSW not yet implemented."
	122 Add X8, X8, X9
	123 Add X0, X8, 312
	124 Move X8, [X0]
	125 Move X2, [X0+8]
	126 Move X0, X20
	127 Move W1, W31
	128 NotImplemented "Instruction BLR not yet implemented."
	129 Compare X0, 0
	130 JumpIfEqual {263}
	131 Move X23, [X0+16]
	132 Move X0, [X26]
	133 Move W8, [X0+224]
	134 Compare W8, 0
	135 JumpIfNotEqual {137}
	136 Call 0x1C17DFC
	137 Move X26, 0xE11000
	138 Move X26, [X26+2248]
	139 Move X0, X21
	140 Move X1, X22
	141 Move X2, X23
	142 Move X3, X31
	143 Call Exception..ctor, X0, X1, X2
	144 Move X8, [X20]
	145 Move X1, [X25]
	146 NotImplemented "Instruction LDRH not yet implemented."
	147 Compare X9, 0
	148 JumpIfEqual {155}
	149 Move X10, [X8+176]
	150 Add X10, X10, 8
	151 NotImplemented "Instruction LDUR not yet implemented."
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Subtract X9, X9, 1
	154 Add X10, X10, 16
	155 Move X0, X20
	156 Move W2, W31
	157 Call 0x1C5D788
	158 NotImplemented "Instruction LDRSW not yet implemented."
	159 Add X8, X8, X9
	160 Add X0, X8, 312
	161 Move X8, [X0]
	162 Move X1, [X0+8]
	163 Move X0, X20
	164 NotImplemented "Instruction BLR not yet implemented."
	165 Move X8, [X26]
	166 Move W1, W0
	167 Move X0, X8
	168 Call 0x1C17D6C
	169 Compare X0, 0
	170 JumpIfEqual {263}
	171 Move W8, [X0+24]
	172 Move X21, X0
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Move W22, W31
	175 Move X8, [X20]
	176 Move X1, [X24]
	177 NotImplemented "Instruction LDRH not yet implemented."
	178 Compare X9, 0
	179 JumpIfEqual {186}
	180 Move X10, [X8+176]
	181 Add X10, X10, 8
	182 NotImplemented "Instruction LDUR not yet implemented."
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Subtract X9, X9, 1
	185 Add X10, X10, 16
	186 Move X0, X20
	187 Move W2, W31
	188 Call 0x1C5D788
	189 NotImplemented "Instruction LDRSW not yet implemented."
	190 Add X8, X8, X9
	191 Add X0, X8, 312
	192 Move X8, [X0]
	193 Move X2, [X0+8]
	194 Move X0, X20
	195 Move W1, W22
	196 NotImplemented "Instruction BLR not yet implemented."
	197 Add X25, X21, W22
	198 Compare X0, 0
	199 JumpIfEqual {212}
	200 Move X23, [X0+16]
	201 Compare X23, 0
	202 JumpIfEqual {209}
	203 Move X8, [X21]
	204 Move X0, X23
	205 Move X1, [X8+64]
	206 Call 0x1C17E00
	207 Compare X0, 0
	208 JumpIfEqual {260}
	209 Move X8, [X21+24]
	210 NotImplemented "Instruction CMP not yet implemented."
	211 Move [X25+32], X23
	212 Move X8, [X21+24]
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Move X9, [X25+32]
	215 Compare X9, 0
	216 JumpIfEqual {243}
	217 Add W22, W22, 1
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Move X8, 0xE13000
	220 Move X8, [X8+3664]
	221 Move X20, 0xE13000
	222 Move X0, [X8]
	223 Move X20, [X20+3656]
	224 Call 0x1C17F10
	225 Move X2, [X20]
	226 Move X1, X21
	227 Move X20, X0
	228 Call ReadOnlyCollection`1<Object>..ctor, X0, X1
	229 Move [X19+144], X20
	230 Move X20, [X31+80]
	231 Move X19, [X31+88]
	232 Move X22, [X31+64]
	233 Move X21, [X31+72]
	234 Move X24, [X31+48]
	235 Move X23, [X31+56]
	236 Move X26, [X31+32]
	237 Move X25, [X31+40]
	238 Move X28, [X31+16]
	239 Move X27, [X31+24]
	240 Move X30, [X31+96]
	241 Return 
	242 Call 0x1C17F28
	243 Move X0, 0xDE7000
	244 Move X0, [X0+1400]
	245 Call 0x1C17D08
	246 Call 0x1C17F10
	247 Move X19, X0
	248 Move X0, 0xE13000
	249 Move X0, [X0+3712]
	250 Call 0x1C17D08
	251 Move X1, X0
	252 Move X0, X19
	253 Call ArgumentException..ctor, X0, X1
	254 Move X0, 0xE13000
	255 Move X0, [X0+3768]
	256 Call 0x1C17D08
	257 Move X1, X0
	258 Move X0, X19
	259 Call 0x1C17DEC
	260 Call 0x1C17F44
	261 Move X1, X31
	262 Call 0x1C17DEC
	263 Call 0x1C17F20
	264 Move X0, [X26]
	265 Move W8, [X0+224]
	266 Compare W8, 0
	267 JumpIfNotEqual {269}
	268 Call 0x1C17DFC
	269 Move X0, X19
	270 Move X1, X23
	271 Move X2, X31
	272 Move X3, X31
	273 Call Exception..ctor, X0, X1, X2
	274 Move X0, 0xDE4000
	275 Move X0, [X0+1320]
	276 Call 0x1C17D08
	277 Call 0x1C17F10
	278 Move X19, X0
	279 Move X0, 0xE13000
	280 Move X0, [X0+3776]
	281 Call 0x1C17D08
	282 Move X1, X0
	283 Move X0, X19
	284 Call ArgumentNullException..ctor, X0, X1

Method: System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x03315FEC LDR X1, [X21]
	0x03315FF0 MOV X0, X19
	0x03315FF4 MOV X2, X31
	0x03315FF8 BL 0x338C8D8
	0x03315FFC MOVZ W8, 0x1502
	0x03316000 MOVK W8, 0x80130000
	0x03316004 STR W8, [X19 + 0x60]
	0x03316008 LDP X20, X19, [X31 + 0x10]
	0x0331600C LDP X30, X21, [X31], #0x20
	0x03316010 RET
	0x03316014 STR X30, [X31 - 0x30]!
	0x03316018 STP X22, X21, [X31 + 0x10]
	0x0331601C STP X20, X19, [X31 + 0x20]
	0x03316020 ADRP X21, 0x10C6000
	0x03316024 ADRP X22, 0xE07000
	0x03316028 LDRB W8, [X21 + 0xB83]
	0x0331602C LDR X22, [X22 + 0xEE0]
	0x03316030 MOV X20, X1
	0x03316034 MOV X19, X0
	0x03316038 TBNZ X8, 0x0, 0x3316050
	0x0331603C ADRP X0, 0xE07000
	0x03316040 LDR X0, [X0 + 0xEE0]
	0x03316044 BL 0x1C16CF4
	0x03316048 MOVZ W8, 0x1
	0x0331604C STRB W8, [X21 + 0xB83]
	0x03316050 LDR X1, [X22]
	0x03316054 MOV X0, X19
	0x03316058 MOV X2, X31
	0x0331605C BL 0x338C8D8
	0x03316060 MOVZ W8, 0x1502
	0x03316064 MOVK W8, 0x80130000
	0x03316068 STR X20, [X19 + 0x90]
	0x0331606C STR W8, [X19 + 0x60]
	0x03316070 LDP X20, X19, [X31 + 0x20]
	0x03316074 LDP X22, X21, [X31 + 0x10]
	0x03316078 LDR X30, [X31], #0x30
	0x0331607C RET
	0x03316080 STP X30, X25, [X31 - 0x40]!
	0x03316084 STP X24, X23, [X31 + 0x10]
	0x03316088 STP X22, X21, [X31 + 0x20]
	0x0331608C STP X20, X19, [X31 + 0x30]
	0x03316090 ADRP X25, 0x10C6000
	0x03316094 ADRP X23, 0xDE7000
	0x03316098 ADRP X24, 0xDDD000
	0x0331609C LDRB W8, [X25 + 0xB84]
	0x033160A0 LDR X23, [X23 + 0x968]
	0x033160A4 LDR X24, [X24 + 0x6C0]
	0x033160A8 MOV X21, X3
	0x033160AC MOV X22, X2
	0x033160B0 MOV X20, X1
	0x033160B4 MOV X19, X0
	0x033160B8 TBNZ X8, 0x0, 0x33160E8
	0x033160BC ADRP X0, 0xDE7000
	0x033160C0 LDR X0, [X0 + 0x968]
	0x033160C4 BL 0x1C16CF4
	0x033160C8 ADRP X0, 0xDDD000
	0x033160CC LDR X0, [X0 + 0x6C0]
	0x033160D0 BL 0x1C16CF4
	0x033160D4 ADRP X0, 0xE11000
	0x033160D8 LDR X0, [X0 + 0xF70]
	0x033160DC BL 0x1C16CF4
	0x033160E0 MOVZ W8, 0x1
	0x033160E4 STRB W8, [X25 + 0xB84]
	0x033160E8 MOV X0, X19
	0x033160EC MOV X1, X20
	0x033160F0 MOV X2, X22
	0x033160F4 MOV X3, X21
	0x033160F8 BL 0x3315D1C
	0x033160FC LDR X0, [X24]
	0x03316100 LDR X21, [X23]
	0x03316104 LDR W8, [X0 + 0xE0]
	0x03316108 CBNZ W8, 0x3316110
	0x0331610C BL 0x1C16DFC
	0x03316110 MOV X0, X21
	0x03316114 MOV X1, X31
	0x03316118 BL 0x338C698
	0x0331611C CBZ X20, 0x3316154
	0x03316120 ADRP X8, 0xE11000
	0x03316124 LDR X8, [X8 + 0xF70]
	0x03316128 MOV X2, X0
	0x0331612C MOV X0, X20
	0x03316130 MOV X3, X31
	0x03316134 LDR X1, [X8]
	0x03316138 BL 0x32A9678
	0x0331613C STR X0, [X19 + 0x98]
	0x03316140 LDP X20, X19, [X31 + 0x30]
	0x03316144 LDP X22, X21, [X31 + 0x20]
	0x03316148 LDP X24, X23, [X31 + 0x10]
	0x0331614C LDP X30, X25, [X31], #0x40
	0x03316150 RET
	0x03316154 BL 0x1C16F20
	0x03316158 STP X30, X25, [X31 - 0x40]!
	0x0331615C STP X24, X23, [X31 + 0x10]
	0x03316160 STP X22, X21, [X31 + 0x20]
	0x03316164 STP X20, X19, [X31 + 0x30]
	0x03316168 ADRP X25, 0x10C6000
	0x0331616C ADRP X23, 0xDE7000
	0x03316170 ADRP X24, 0xDDD000
	0x03316174 LDRB W8, [X25 + 0xB85]
	0x03316178 LDR X23, [X23 + 0x968]
	0x0331617C LDR X24, [X24 + 0x6C0]
	0x03316180 MOV X21, X3
	0x03316184 MOV X22, X2
	0x03316188 MOV X19, X1
	0x0331618C MOV X20, X0
	0x03316190 TBNZ X8, 0x0, 0x33161C0
	0x03316194 ADRP X0, 0xDE7000
	0x03316198 LDR X0, [X0 + 0x968]
	0x0331619C BL 0x1C16CF4
	0x033161A0 ADRP X0, 0xDDD000
	0x033161A4 LDR X0, [X0 + 0x6C0]
	0x033161A8 BL 0x1C16CF4
	0x033161AC ADRP X0, 0xE11000
	0x033161B0 LDR X0, [X0 + 0xF70]
	0x033161B4 BL 0x1C16CF4
	0x033161B8 MOVZ W8, 0x1
	0x033161BC STRB W8, [X25 + 0xB85]
	0x033161C0 MOV X0, X20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x10C8000
	009 Move X23, 0xDDE000
	010 Move W8, [X24+2931]
	011 Call 0x3EB2624
	012 Return 
	013 Move X21, X3
	014 Move X22, X2
	015 Move X20, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {44}
	021 Move X0, 0xE10000
	022 Move X0, [X0+3696]
	023 Call 0x1C17CF4
	024 Move X0, 0xE10000
	025 Move X0, [X0+2248]
	026 Call 0x1C17CF4
	027 Move X0, 0xDDE000
	028 Move X0, [X0+2000]
	029 Call 0x1C17CF4
	030 Move X0, 0xE12000
	031 Move X0, [X0+3656]
	032 Call 0x1C17CF4
	033 Move X0, 0xE12000
	034 Move X0, [X0+3664]
	035 Call 0x1C17CF4
	036 Move X0, 0xDDE000
	037 Move X0, [X0+1728]
	038 Call 0x1C17CF4
	039 Move X0, 0xE12000
	040 Move X0, [X0+3784]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X24+2931], W8
	044 Move X0, [X23]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Move X0, X19
	050 Move X1, X20
	051 Move X2, X22
	052 Move X3, X21
	053 Move X4, X31
	054 Call Exception..ctor, X0, X1, X2
	055 Compare X20, 0
	056 JumpIfEqual {103}
	057 Move X8, 0xDDE000
	058 Move X8, [X8+1728]
	059 Move X23, 0xE12000
	060 Move X22, 0xE10000
	061 Move X0, [X8]
	062 Move X8, 0xE10000
	063 Move X8, [X8+3696]
	064 Move W9, [X0+224]
	065 Move X21, [X8]
	066 Move X23, [X23+3784]
	067 Move X22, [X22+2248]
	068 Compare W9, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 Move X0, X21
	072 Move X1, X31
	073 Call Type.GetTypeFromHandle, X0
	074 Move X1, [X23]
	075 Move X2, X0
	076 Move X0, X20
	077 Move X3, X31
	078 Call SerializationInfo.GetValue, X0, X1, X2
	079 Move X1, [X22]
	080 Call 0x1C17E00
	081 Compare X0, 0
	082 JumpIfEqual {114}
	083 Move X8, 0xE12000
	084 Move X8, [X8+3664]
	085 Move X20, X0
	086 Move X21, 0xE12000
	087 Move X0, [X8]
	088 Move X21, [X21+3656]
	089 Call 0x1C17F10
	090 Move X2, [X21]
	091 Move X1, X20
	092 Move X21, X0
	093 Call ReadOnlyCollection`1<Object>..ctor, X0, X1
	094 Move [X19+144], X21
	095 Move X20, [X31+48]
	096 Move X19, [X31+56]
	097 Move X22, [X31+32]
	098 Move X21, [X31+40]
	099 Move X24, [X31+16]
	100 Move X23, [X31+24]
	101 Move X30, [X31+64]
	102 Return 
	103 Move X0, 0xDE3000
	104 Move X0, [X0+1320]
	105 Call 0x1C17D08
	106 Call 0x1C17F10
	107 Move X19, X0
	108 Move X0, 0xE08000
	109 Move X0, [X0+728]
	110 Call 0x1C17D08
	111 Move X1, X0
	112 Move X0, X19
	113 Call ArgumentNullException..ctor, X0, X1
	114 Move X0, 0xE08000
	115 Move X0, [X0+736]
	116 Call 0x1C17D08
	117 Call 0x1C17F10
	118 Move X19, X0
	119 Move X0, 0xE12000
	120 Move X0, [X0+3792]
	121 Call 0x1C17D08
	122 Move X1, X0
	123 Move X0, X19
	124 Move X2, X31
	125 Call SerializationException..ctor, X0, X1
	126 Move X0, 0xE12000
	127 Move X0, [X0+3800]
	128 Call 0x1C17D08
	129 Move X1, X0
	130 Move X0, X19
	131 Call 0x1C17DEC

Method: System.Void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x033161C4 MOV X1, X19
	0x033161C8 MOV X2, X22
	0x033161CC MOV X3, X21
	0x033161D0 BL 0x3315DA4
	0x033161D4 LDR X0, [X24]
	0x033161D8 LDR X20, [X20 + 0x98]
	0x033161DC LDR X21, [X23]
	0x033161E0 LDR W8, [X0 + 0xE0]
	0x033161E4 CBNZ W8, 0x33161EC
	0x033161E8 BL 0x1C16DFC
	0x033161EC MOV X0, X21
	0x033161F0 MOV X1, X31
	0x033161F4 BL 0x338C698
	0x033161F8 CBZ X19, 0x331622C
	0x033161FC ADRP X8, 0xE11000
	0x03316200 LDR X8, [X8 + 0xF70]
	0x03316204 MOV X3, X0
	0x03316208 MOV X0, X19
	0x0331620C MOV X2, X20
	0x03316210 LDR X1, [X8]
	0x03316214 LDP X20, X19, [X31 + 0x30]
	0x03316218 LDP X22, X21, [X31 + 0x20]
	0x0331621C LDP X24, X23, [X31 + 0x10]
	0x03316220 MOV X4, X31
	0x03316224 LDP X30, X25, [X31], #0x40
	0x03316228 B 0x32A89BC
	0x0331622C BL 0x1C16F20
	0x03316230 STR X30, [X31 - 0x20]!
	0x03316234 STP X20, X19, [X31 + 0x10]
	0x03316238 ADRP X20, 0x10C6000
	0x0331623C LDRB W8, [X20 + 0xB86]
	0x03316240 MOV X19, X0
	0x03316244 TBNZ X8, 0x0, 0x331625C
	0x03316248 ADRP X0, 0xE11000
	0x0331624C LDR X0, [X0 + 0xF78]
	0x03316250 BL 0x1C16CF4
	0x03316254 MOVZ W8, 0x1
	0x03316258 STRB W8, [X20 + 0xB86]
	0x0331625C MOV X0, X19
	0x03316260 BL 0x3315E80
	0x03316264 LDR X8, [X19 + 0x98]
	0x03316268 MOV X19, X0
	0x0331626C CBZ X8, 0x33162CC
	0x03316270 LDR X9, [X8]
	0x03316274 ADRP X20, 0xE11000
	0x03316278 MOV X0, X8
	0x0331627C LDP X10, X1, [X9 + 0x168]
	0x03316280 LDR X20, [X20 + 0xF78]
	0x03316284 BLR X10
	0x03316288 LDR X8, [X20]
	0x0331628C MOV X1, X0
	0x03316290 MOV X2, X31
	0x03316294 MOV X0, X8
	0x03316298 BL 0x32094D4
	0x0331629C MOV X20, X0
	0x033162A0 CBZ X19, 0x33162C8
	0x033162A4 MOV X0, X31
	0x033162A8 BL 0x33C1548
	0x033162AC MOV X1, X0
	0x033162B0 MOV X0, X19
	0x033162B4 MOV X2, X20
	0x033162B8 LDP X20, X19, [X31 + 0x10]
	0x033162BC MOV X3, X31
	0x033162C0 LDR X30, [X31], #0x20
	0x033162C4 B 0x32274B8
	0x033162C8 MOV X19, X20
	0x033162CC MOV X0, X19
	0x033162D0 LDP X20, X19, [X31 + 0x10]
	0x033162D4 LDR X30, [X31], #0x20
	0x033162D8 RET
	0x033162DC STP X30, X21, [X31 - 0x20]!
	0x033162E0 STP X20, X19, [X31 + 0x10]
	0x033162E4 ADRP X20, 0x10C6000
	0x033162E8 ADRP X21, 0xE11000
	0x033162EC LDRB W8, [X20 + 0xB87]
	0x033162F0 LDR X21, [X21 + 0xF80]
	0x033162F4 MOV X19, X0
	0x033162F8 TBNZ X8, 0x0, 0x3316310
	0x033162FC ADRP X0, 0xE11000
	0x03316300 LDR X0, [X0 + 0xF80]
	0x03316304 BL 0x1C16CF4
	0x03316308 MOVZ W8, 0x1
	0x0331630C STRB W8, [X20 + 0xB87]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x10C7000
	008 Move W8, [X23+2932]
	009 Move X21, X3
	010 Move X22, X2
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {37}
	017 Move X0, 0xE10000
	018 Move X0, [X0+3696]
	019 Call 0x1C17CF4
	020 Move X0, 0xE10000
	021 Move X0, [X0+2248]
	022 Call 0x1C17CF4
	023 Move X0, 0xE12000
	024 Move X0, [X0+3808]
	025 Call 0x1C17CF4
	026 Move X0, 0xE12000
	027 Move X0, [X0+3816]
	028 Call 0x1C17CF4
	029 Move X0, 0xDDE000
	030 Move X0, [X0+1728]
	031 Call 0x1C17CF4
	032 Move X0, 0xE12000
	033 Move X0, [X0+3784]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X23+2932], W8
	037 Move X0, X20
	038 Move X1, X19
	039 Move X2, X22
	040 Move X3, X21
	041 Move X4, X31
	042 Call Exception.GetObjectData, X0, X1, X2
	043 Move X0, [X20+144]
	044 Compare X0, 0
	045 JumpIfEqual {97}
	046 Move X8, 0xE12000
	047 Move X8, [X8+3816]
	048 Move X21, 0xE10000
	049 Move X1, [X8]
	050 Move X21, [X21+2248]
	051 Call ReadOnlyCollection`1<Object>.get_Count, X0
	052 Move X8, [X21]
	053 Move W1, W0
	054 Move X0, X8
	055 Call 0x1C17D6C
	056 Move X8, [X20+144]
	057 Compare X8, 0
	058 JumpIfEqual {97}
	059 Move X9, 0xE12000
	060 Move X9, [X9+3808]
	061 Move X21, 0xE10000
	062 Move X22, 0xDDE000
	063 Move X20, X0
	064 Move X3, [X9]
	065 Move X21, [X21+3696]
	066 Move X22, [X22+1728]
	067 Move X0, X8
	068 Move X1, X20
	069 Move W2, W31
	070 Call ReadOnlyCollection`1<Object>.CopyTo, X0, X1, X2
	071 Move X0, [X22]
	072 Move X21, [X21]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Move X0, X21
	078 Move X1, X31
	079 Call Type.GetTypeFromHandle, X0
	080 Compare X19, 0
	081 JumpIfEqual {97}
	082 Move X8, 0xE12000
	083 Move X8, [X8+3784]
	084 Move X3, X0
	085 Move X0, X19
	086 Move X2, X20
	087 Move X1, [X8]
	088 Move X20, [X31+32]
	089 Move X19, [X31+40]
	090 Move X22, [X31+16]
	091 Move X21, [X31+24]
	092 Move X4, X31
	093 Move X30, [X31+48]
	094 Move X23, [X31+56]
	095 Call SerializationInfo.AddValue, X0, X1, X2, X3
	096 Return 
	097 Call 0x1C17F20

Method: System.Collections.ObjectModel.ReadOnlyCollection`1<System.Exception> get_InnerExceptions()

Disassembly:
	0x03316310 LDR X1, [X21]
	0x03316314 MOV X0, X19

ISIL:
	001 Move X0, [X0+144]
	002 Return X0

Method: System.AggregateException Flatten()

Disassembly:
	0x03316318 MOV X2, X31
	0x0331631C BL 0x338C8D8
	0x03316320 MOVZ W8, 0x216
	0x03316324 MOVK W8, 0x80070000
	0x03316328 STR W8, [X19 + 0x60]
	0x0331632C LDP X20, X19, [X31 + 0x10]
	0x03316330 LDP X30, X21, [X31], #0x20
	0x03316334 RET
	0x03316338 STP X30, X19, [X31 - 0x10]!
	0x0331633C MOV X2, X31
	0x03316340 MOV X19, X0
	0x03316344 BL 0x338C8D8
	0x03316348 MOVZ W8, 0x216
	0x0331634C MOVK W8, 0x80070000
	0x03316350 STR W8, [X19 + 0x60]
	0x03316354 LDP X30, X19, [X31], #0x10
	0x03316358 RET
	0x0331635C STP X30, X19, [X31 - 0x10]!
	0x03316360 MOV X3, X31
	0x03316364 MOV X19, X0
	0x03316368 BL 0x338C990
	0x0331636C MOVZ W8, 0x216
	0x03316370 MOVK W8, 0x80070000
	0x03316374 STR W8, [X19 + 0x60]
	0x03316378 LDP X30, X19, [X31], #0x10
	0x0331637C RET
	0x03316380 MOV X4, X31
	0x03316384 B 0x338CA74
	0x03316388 STP X30, X21, [X31 - 0x20]!
	0x0331638C STP X20, X19, [X31 + 0x10]
	0x03316390 ADRP X20, 0x10C6000
	0x03316394 ADRP X21, 0xE11000
	0x03316398 LDRB W8, [X20 + 0xB88]
	0x0331639C LDR X21, [X21 + 0xF88]
	0x033163A0 MOV X19, X0
	0x033163A4 TBNZ X8, 0x0, 0x33163BC
	0x033163A8 ADRP X0, 0xE11000
	0x033163AC LDR X0, [X0 + 0xF88]
	0x033163B0 BL 0x1C16CF4
	0x033163B4 MOVZ W8, 0x1
	0x033163B8 STRB W8, [X20 + 0xB88]
	0x033163BC LDR X1, [X21]
	0x033163C0 MOV X0, X19
	0x033163C4 MOV X2, X31
	0x033163C8 BL 0x338C8D8
	0x033163CC MOVZ W8, 0x1503
	0x033163D0 MOVK W8, 0x80130000
	0x033163D4 STR W8, [X19 + 0x60]
	0x033163D8 LDP X20, X19, [X31 + 0x10]
	0x033163DC LDP X30, X21, [X31], #0x20
	0x033163E0 RET
	0x033163E4 MOV X4, X31
	0x033163E8 B 0x338CA74
	0x033163EC STR X30, [X31 - 0x30]!
	0x033163F0 STP X22, X21, [X31 + 0x10]
	0x033163F4 STP X20, X19, [X31 + 0x20]
	0x033163F8 ADRP X21, 0x10C6000
	0x033163FC ADRP X22, 0xE09000
	0x03316400 LDRB W8, [X21 + 0xB89]
	0x03316404 LDR X22, [X22 + 0x158]
	0x03316408 MOV X19, X1
	0x0331640C MOV X20, X0
	0x03316410 TBNZ X8, 0x0, 0x3316428
	0x03316414 ADRP X0, 0xE09000
	0x03316418 LDR X0, [X0 + 0x158]
	0x0331641C BL 0x1C16CF4
	0x03316420 MOVZ W8, 0x1
	0x03316424 STRB W8, [X21 + 0xB89]
	0x03316428 LDR X0, [X22]
	0x0331642C LDR W8, [X0 + 0xE0]
	0x03316430 CBNZ W8, 0x3316438
	0x03316434 BL 0x1C16DFC
	0x03316438 MOV X0, X20
	0x0331643C MOV X1, X31
	0x03316440 BL 0x33671B0
	0x03316444 STR X19, [X20 + 0x10]
	0x03316448 LDP X20, X19, [X31 + 0x20]
	0x0331644C LDP X22, X21, [X31 + 0x10]
	0x03316450 LDR X30, [X31], #0x30
	0x03316454 RET
	0x03316458 STR X30, [X31 - 0x30]!
	0x0331645C STP X22, X21, [X31 + 0x10]
	0x03316460 STP X20, X19, [X31 + 0x20]
	0x03316464 LDR X8, [X2 + 0x8]
	0x03316468 STP X1, X2, [X0 + 0x20]
	0x0331646C MOV X19, X0
	0x03316470 MOV X20, X2
	0x03316474 STR X8, [X0 + 0x10]
	0x03316478 LDRB W22, [X2 + 0x52]
	0x0331647C STR X0, [X0 + 0x40]
	0x03316480 MOV X0, X2
	0x03316484 MOV X21, X1
	0x03316488 BL 0x1C16D84
	0x0331648C TBZ X0, 0x0, 0x33164A4
	0x03316490 CMP W22, 0x2
	0x03316494 B.NE 0x33164E0
	0x03316498 ADRP X8, 0xFFFFFFFFFE8A1000
	0x0331649C ADD X8, X8, 0xF50
	0x033164A0 B 0x3316524
	0x033164A4 CMP W22, 0x1
	0x033164A8 B.NE 0x33164DC
	0x033164AC LDRB W8, [X19 + 0x70]
	0x033164B0 CBZ W8, 0x33164F4
	0x033164B4 MOV X0, X20
	0x033164B8 BL 0x1C16D7C
	0x033164BC MOV W21, W0
	0x033164C0 MOV X0, X20
	0x033164C4 BL 0x1C17238
	0x033164C8 TBZ X21, 0x0, 0x3316500
	0x033164CC TBZ X0, 0x0, 0x3316510
	0x033164D0 ADRP X8, 0xFFFFFFFFFE8A2000
	0x033164D4 ADD X8, X8, 0x6C
	0x033164D8 B 0x3316524
	0x033164DC CBZ X21, 0x3316544
	0x033164E0 LDR X8, [X19 + 0x10]
	0x033164E4 LDR X9, [X19 + 0x20]
	0x033164E8 STR X8, [X19 + 0x18]
	0x033164EC STR X9, [X19 + 0x40]
	0x033164F0 B 0x3316528
	0x033164F4 ADRP X8, 0xFFFFFFFFFE8A1000
	0x033164F8 ADD X8, X8, 0xF2C
	0x033164FC B 0x3316524
	0x03316500 TBZ X0, 0x0, 0x331651C
	0x03316504 ADRP X8, 0xFFFFFFFFFE8A1000
	0x03316508 ADD X8, X8, 0xF94
	0x0331650C B 0x3316524
	0x03316510 ADRP X8, 0xFFFFFFFFFE8A2000
	0x03316514 ADD X8, X8, 0x20
	0x03316518 B 0x3316524
	0x0331651C ADRP X8, 0xFFFFFFFFFE8A1000
	0x03316520 ADD X8, X8, 0xF64
	0x03316524 STR X8, [X19 + 0x18]
	0x03316528 ADRP X8, 0xFFFFFFFFFE8A1000
	0x0331652C ADD X8, X8, 0xED4
	0x03316530 STR X8, [X19 + 0x38]
	0x03316534 LDP X20, X19, [X31 + 0x20]
	0x03316538 LDP X22, X21, [X31 + 0x10]
	0x0331653C LDR X30, [X31], #0x30
	0x03316540 RET
	0x03316544 ADRP X1, 0xFFFFFFFFFD805000
	0x03316548 ADD X1, X1, 0xEE3
	0x0331654C MOV X0, X31
	0x03316550 BL 0x1C16F3C
	0x03316554 MOV X1, X31
	0x03316558 BL 0x1C16DEC
	0x0331655C LDR X8, [X0 + 0x40]
	0x03316560 LDR X4, [X0 + 0x18]
	0x03316564 LDR X3, [X0 + 0x28]
	0x03316568 MOV X0, X8
	0x0331656C BR X4
	0x03316570 STR X30, [X31 - 0x30]!
	0x03316574 STP X22, X21, [X31 + 0x10]
	0x03316578 STP X20, X19, [X31 + 0x20]
	0x0331657C LDR X8, [X2 + 0x8]
	0x03316580 STP X1, X2, [X0 + 0x20]
	0x03316584 MOV X19, X0
	0x03316588 MOV X20, X2
	0x0331658C STR X8, [X0 + 0x10]
	0x03316590 LDRB W22, [X2 + 0x52]
	0x03316594 STR X0, [X0 + 0x40]
	0x03316598 MOV X0, X2
	0x0331659C MOV X21, X1
	0x033165A0 BL 0x1C16D84
	0x033165A4 TBZ X0, 0x0, 0x33165BC
	0x033165A8 CMP W22, 0x1
	0x033165AC B.NE 0x33165C4
	0x033165B0 ADRP X8, 0xFFFFFFFFFE8A2000
	0x033165B4 ADD X8, X8, 0x168
	0x033165B8 B 0x3316638
	0x033165BC CBZ W22, 0x33165D8
	0x033165C0 CBZ X21, 0x3316658
	0x033165C4 LDR X8, [X19 + 0x10]
	0x033165C8 LDR X9, [X19 + 0x20]
	0x033165CC STR X8, [X19 + 0x18]
	0x033165D0 STR X9, [X19 + 0x40]
	0x033165D4 B 0x331663C
	0x033165D8 LDRB W8, [X19 + 0x70]
	0x033165DC CBZ W8, 0x3316608
	0x033165E0 MOV X0, X20
	0x033165E4 BL 0x1C16D7C
	0x033165E8 MOV W21, W0
	0x033165EC MOV X0, X20
	0x033165F0 BL 0x1C17238
	0x033165F4 TBZ X21, 0x0, 0x3316614
	0x033165F8 TBZ X0, 0x0, 0x3316624
	0x033165FC ADRP X8, 0xFFFFFFFFFE8A2000
	0x03316600 ADD X8, X8, 0x264
	0x03316604 B 0x3316638
	0x03316608 ADRP X8, 0xFFFFFFFFFE8A2000
	0x0331660C ADD X8, X8, 0x148
	0x03316610 B 0x3316638
	0x03316614 TBZ X0, 0x0, 0x3316630
	0x03316618 ADRP X8, 0xFFFFFFFFFE8A2000
	0x0331661C ADD X8, X8, 0x1A4
	0x03316620 B 0x3316638
	0x03316624 ADRP X8, 0xFFFFFFFFFE8A2000
	0x03316628 ADD X8, X8, 0x228
	0x0331662C B 0x3316638
	0x03316630 ADRP X8, 0xFFFFFFFFFE8A2000
	0x03316634 ADD X8, X8, 0x178
	0x03316638 STR X8, [X19 + 0x18]
	0x0331663C ADRP X8, 0xFFFFFFFFFE8A2000
	0x03316640 ADD X8, X8, 0x100
	0x03316644 STR X8, [X19 + 0x38]
	0x03316648 LDP X20, X19, [X31 + 0x20]
	0x0331664C LDP X22, X21, [X31 + 0x10]
	0x03316650 LDR X30, [X31], #0x30
	0x03316654 RET
	0x03316658 ADRP X1, 0xFFFFFFFFFD805000
	0x0331665C ADD X1, X1, 0xEE3
	0x03316660 MOV X0, X31
	0x03316664 BL 0x1C16F3C
	0x03316668 MOV X1, X31
	0x0331666C BL 0x1C16DEC
	0x03316670 LDR X8, [X0 + 0x40]
	0x03316674 LDR X3, [X0 + 0x18]
	0x03316678 LDR X2, [X0 + 0x28]
	0x0331667C MOV X0, X8
	0x03316680 BR X3
	0x03316684 SUB X31, X31, 0x20
	0x03316688 STP X31, X30, [X31 + 0x8]
	0x0331668C STR X1, [X31]
	0x03316690 ADD X1, X31, 0x0
	0x03316694 BL 0x1C16CB0
	0x03316698 LDR X30, [X31 + 0x10]
	0x0331669C ADD X31, X31, 0x20
	0x033166A0 RET
	0x033166A4 MOV X0, X1
	0x033166A8 MOV X1, X31
	0x033166AC B 0x1C16CB4
	0x033166B0 STR X30, [X31 - 0x20]!
	0x033166B4 STP X20, X19, [X31 + 0x10]
	0x033166B8 MOV W19, W1
	0x033166BC MOVZ W8, 0x7FFF
	0x033166C0 MOVZ W9, 0x1
	0x033166C4 MOV X1, X31
	0x033166C8 MOV X20, X0

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X22, 0x10C7000
	015 Move X23, 0xE12000
	016 Move X20, 0xE12000
	017 Move X21, 0xE12000
	018 Move X19, 0xE12000
	019 Move W8, [X22+2933]
	020 Move X23, [X23+3696]
	021 Move X20, [X20+3824]
	022 Move X21, [X21+3832]
	023 Move X19, [X19+3840]
	024 Move X24, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {64}
	029 Move X0, 0xE10000
	030 Move X0, [X0+2256]
	031 Call 0x1C17CF4
	032 Move X0, 0xE12000
	033 Move X0, [X0+3704]
	034 Call 0x1C17CF4
	035 Move X0, 0xE12000
	036 Move X0, [X0+3680]
	037 Call 0x1C17CF4
	038 Move X0, 0xE12000
	039 Move X0, [X0+3848]
	040 Call 0x1C17CF4
	041 Move X0, 0xE12000
	042 Move X0, [X0+3856]
	043 Call 0x1C17CF4
	044 Move X0, 0xE12000
	045 Move X0, [X0+3840]
	046 Call 0x1C17CF4
	047 Move X0, 0xE12000
	048 Move X0, [X0+3824]
	049 Call 0x1C17CF4
	050 Move X0, 0xE12000
	051 Move X0, [X0+3864]
	052 Call 0x1C17CF4
	053 Move X0, 0xE12000
	054 Move X0, [X0+3872]
	055 Call 0x1C17CF4
	056 Move X0, 0xE12000
	057 Move X0, [X0+3832]
	058 Call 0x1C17CF4
	059 Move X0, 0xE12000
	060 Move X0, [X0+3696]
	061 Call 0x1C17CF4
	062 Move W8, 1
	063 Move [X22+2933], W8
	064 Move X0, [X23]
	065 Call 0x1C17F10
	066 Move X1, [X20]
	067 Move X20, X0
	068 Call List`1<Object>..ctor, X0
	069 Move X0, [X21]
	070 Call 0x1C17F10
	071 Move X1, [X19]
	072 Move X21, X0
	073 Call List`1<Object>..ctor, X0
	074 Compare X21, 0
	075 JumpIfEqual {246}
	076 Move X25, 0xE12000
	077 Move X25, [X25+3856]
	078 Move W10, [X21+28]
	079 Move X8, [X21+16]
	080 Move X9, [X25]
	081 Add W10, W10, 1
	082 Move [X21+28], W10
	083 Compare X8, 0
	084 JumpIfEqual {246}
	085 NotImplemented "Instruction LDRSW not yet implemented."
	086 Move W11, [X8+24]
	087 Move [X31+8], X24
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Add W9, W10, 1
	090 Add X8, X8, X10
	091 Move [X21+24], W9
	092 Move [X8+32], X24
	093 Move X8, [X9+32]
	094 Move X0, X21
	095 Move X1, X24
	096 Move X8, [X8+192]
	097 Move X2, [X8+112]
	098 Call List`1<Object>.AddWithResize, X0, X1
	099 Move W9, [X21+24]
	100 Move X26, 0xE10000
	101 Move X26, [X26+2256]
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X27, 0xE12000
	104 Move X28, 0xE12000
	105 Move X29, 0xE12000
	106 Move X19, 0xE12000
	107 Move X27, [X27+3872]
	108 Move X28, [X28+3704]
	109 Move X29, [X29+3680]
	110 Move X19, [X19+3848]
	111 Move W22, W31
	112 Move X2, [X27]
	113 Move X0, X21
	114 Move W1, W22
	115 Call List`1<Object>.get_Item, X0, X1
	116 Compare X0, 0
	117 JumpIfEqual {246}
	118 Move X23, [X0+144]
	119 Compare X23, 0
	120 JumpIfEqual {246}
	121 Move W24, W31
	122 Add W22, W22, 1
	123 Move X8, [X23]
	124 Move X1, [X28]
	125 NotImplemented "Instruction LDRH not yet implemented."
	126 Compare X9, 0
	127 JumpIfEqual {134}
	128 Move X10, [X8+176]
	129 Add X10, X10, 8
	130 NotImplemented "Instruction LDUR not yet implemented."
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Subtract X9, X9, 1
	133 Add X10, X10, 16
	134 Move X0, X23
	135 Move W2, W31
	136 Call 0x1C5D788
	137 NotImplemented "Instruction LDRSW not yet implemented."
	138 Add X8, X8, X9
	139 Add X0, X8, 312
	140 Move X8, [X0]
	141 Move X1, [X0+8]
	142 Move X0, X23
	143 NotImplemented "Instruction BLR not yet implemented."
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move X8, [X23]
	146 Move X1, [X29]
	147 NotImplemented "Instruction LDRH not yet implemented."
	148 Compare X9, 0
	149 JumpIfEqual {156}
	150 Move X10, [X8+176]
	151 Add X10, X10, 8
	152 NotImplemented "Instruction LDUR not yet implemented."
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Subtract X9, X9, 1
	155 Add X10, X10, 16
	156 Move X0, X23
	157 Move W2, W31
	158 Call 0x1C5D788
	159 NotImplemented "Instruction LDRSW not yet implemented."
	160 Add X8, X8, X9
	161 Add X0, X8, 312
	162 Move X8, [X0]
	163 Move X2, [X0+8]
	164 Move X0, X23
	165 Move W1, W24
	166 NotImplemented "Instruction BLR not yet implemented."
	167 Compare X0, 0
	168 JumpIfEqual {200}
	169 Move X9, [X0]
	170 Move X8, [X26]
	171 Move X1, X0
	172 Move W11, [X9+304]
	173 Move W10, [X8+304]
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Move X9, [X9+200]
	176 Add X9, X9, X10
	177 NotImplemented "Instruction LDUR not yet implemented."
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Compare X20, 0
	180 JumpIfEqual {246}
	181 Move W10, [X20+28]
	182 Move X8, [X20+16]
	183 Move X9, [X19]
	184 Add W10, W10, 1
	185 Move [X20+28], W10
	186 Compare X8, 0
	187 JumpIfEqual {246}
	188 NotImplemented "Instruction LDRSW not yet implemented."
	189 Move W11, [X8+24]
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Add W9, W10, 1
	192 Add X8, X8, X10
	193 Move [X20+24], W9
	194 Move [X8+32], X1
	195 Move X8, [X9+32]
	196 Move X0, X20
	197 Move X8, [X8+192]
	198 Move X2, [X8+112]
	199 Call List`1<Object>.AddWithResize, X0, X1
	200 Add W24, W24, 1
	201 Move W10, [X21+28]
	202 Move X8, [X21+16]
	203 Move X9, [X25]
	204 Add W10, W10, 1
	205 Move [X21+28], W10
	206 Compare X8, 0
	207 JumpIfEqual {246}
	208 NotImplemented "Instruction LDRSW not yet implemented."
	209 Move W11, [X8+24]
	210 NotImplemented "Instruction CMP not yet implemented."
	211 Add W9, W10, 1
	212 Add X8, X8, X10
	213 Move [X21+24], W9
	214 Move X8, [X9+32]
	215 Move X0, X21
	216 Move W8, [X21+24]
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Move X0, [X31+8]
	219 Move X8, [X0]
	220 Move X9, [X8+392]
	221 Move X1, [X8+400]
	222 NotImplemented "Instruction BLR not yet implemented."
	223 Move X8, [X26]
	224 Move X19, X0
	225 Move X0, X8
	226 Call 0x1C17F10
	227 Move X1, X19
	228 Move X2, X20
	229 Move X21, X0
	230 Call AggregateException..ctor, X0, X1, X2
	231 Move X0, X21
	232 Move X20, [X31+96]
	233 Move X19, [X31+104]
	234 Move X22, [X31+80]
	235 Move X21, [X31+88]
	236 Move X24, [X31+64]
	237 Move X23, [X31+72]
	238 Move X26, [X31+48]
	239 Move X25, [X31+56]
	240 Move X28, [X31+32]
	241 Move X27, [X31+40]
	242 Move X29, [X31+16]
	243 Move X30, [X31+24]
	244 Add X31, X31, 112
	245 Return X0
	246 Call 0x1C17F20

Method: System.String get_Message()

Disassembly:
	0x033166CC STR W8, [X0 + 0x10]
	0x033166D0 STRB W9, [X0 + 0x15]
	0x033166D4 BL 0x33A51F0
	0x033166D8 STR W19, [X20 + 0x10]
	0x033166DC LDP X20, X19, [X31 + 0x10]
	0x033166E0 LDR X30, [X31], #0x20
	0x033166E4 RET
	0x033166E8 LDRB W0, [X0 + 0x14]
	0x033166EC RET
	0x033166F0 AND W8, W1, 0x1
	0x033166F4 STRB W8, [X0 + 0x14]
	0x033166F8 RET
	0x033166FC LDRB W0, [X0 + 0x15]
	0x03316700 RET
	0x03316704 AND W8, W1, 0x1
	0x03316708 STRB W8, [X0 + 0x15]
	0x0331670C RET
	0x03316710 STP X30, X21, [X31 - 0x20]!
	0x03316714 STP X20, X19, [X31 + 0x10]
	0x03316718 ADRP X19, 0x10C6000
	0x0331671C ADRP X20, 0xE11000
	0x03316720 LDRB W8, [X19 + 0xB8A]
	0x03316724 LDR X20, [X20 + 0xF90]
	0x03316728 TBNZ X8, 0x0, 0x3316740
	0x0331672C ADRP X0, 0xE11000
	0x03316730 LDR X0, [X0 + 0xF90]
	0x03316734 BL 0x1C16CF4
	0x03316738 MOVZ W8, 0x1
	0x0331673C STRB W8, [X19 + 0xB8A]
	0x03316740 LDR X0, [X20]
	0x03316744 BL 0x1C16F10
	0x03316748 MOVZ W21, 0x7FFF
	0x0331674C MOVZ W8, 0x1
	0x03316750 MOV X1, X31
	0x03316754 MOV X19, X0
	0x03316758 STR W21, [X0 + 0x10]
	0x0331675C STRB W8, [X0 + 0x15]
	0x03316760 BL 0x33A51F0
	0x03316764 STR W21, [X19 + 0x10]
	0x03316768 LDR X8, [X20]
	0x0331676C LDR X8, [X8 + 0xB8]
	0x03316770 STR X19, [X8]
	0x03316774 LDP X20, X19, [X31 + 0x10]
	0x03316778 LDP X30, X21, [X31], #0x20
	0x0331677C RET
	0x03316780 STP X30, X21, [X31 - 0x20]!
	0x03316784 STP X20, X19, [X31 + 0x10]
	0x03316788 ADRP X20, 0x10C6000
	0x0331678C ADRP X21, 0xE11000
	0x03316790 LDRB W8, [X20 + 0xB8B]
	0x03316794 LDR X21, [X21 + 0xF98]
	0x03316798 MOV X19, X0
	0x0331679C TBNZ X8, 0x0, 0x33167B4
	0x033167A0 ADRP X0, 0xE11000
	0x033167A4 LDR X0, [X0 + 0xF98]
	0x033167A8 BL 0x1C16CF4
	0x033167AC MOVZ W8, 0x1
	0x033167B0 STRB W8, [X20 + 0xB8B]
	0x033167B4 LDR X1, [X21]
	0x033167B8 MOV X0, X19
	0x033167BC MOV X2, X31
	0x033167C0 BL 0x338C8D8
	0x033167C4 MOVZ W8, 0xB
	0x033167C8 MOVK W8, 0x80070000
	0x033167CC STR W8, [X19 + 0x60]
	0x033167D0 LDP X20, X19, [X31 + 0x10]
	0x033167D4 LDP X30, X21, [X31], #0x20
	0x033167D8 RET
	0x033167DC STP X30, X19, [X31 - 0x10]!
	0x033167E0 MOV X2, X31
	0x033167E4 MOV X19, X0
	0x033167E8 BL 0x338C8D8
	0x033167EC MOVZ W8, 0xB
	0x033167F0 MOVK W8, 0x80070000
	0x033167F4 STR W8, [X19 + 0x60]
	0x033167F8 LDP X30, X19, [X31], #0x10
	0x033167FC RET
	0x03316800 STP X30, X19, [X31 - 0x10]!
	0x03316804 MOV X3, X31
	0x03316808 MOV X19, X0
	0x0331680C BL 0x338C990
	0x03316810 MOVZ W8, 0xB
	0x03316814 MOVK W8, 0x80070000
	0x03316818 STR W8, [X19 + 0x60]
	0x0331681C LDP X30, X19, [X31], #0x10
	0x03316820 RET
	0x03316824 STR X30, [X31 - 0x20]!
	0x03316828 STP X20, X19, [X31 + 0x10]
	0x0331682C MOV X19, X2
	0x03316830 MOV X2, X31
	0x03316834 MOV X20, X0
	0x03316838 BL 0x338C8D8
	0x0331683C MOVZ W8, 0xB
	0x03316840 MOVK W8, 0x80070000
	0x03316844 STR W8, [X20 + 0x60]
	0x03316848 STR X19, [X20 + 0x90]
	0x0331684C LDP X20, X19, [X31 + 0x10]
	0x03316850 LDR X30, [X31], #0x20
	0x03316854 RET

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x10C7000
	009 Move W8, [X20+2934]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0xE12000
	016 Move X0, [X0+3816]
	017 Call 0x1C17CF4
	018 Move X0, 0xE12000
	019 Move X0, [X0+3880]
	020 Call 0x1C17CF4
	021 Move X0, 0xE12000
	022 Move X0, [X0+3888]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+2934], W8
	026 Move X0, [X19+144]
	027 Compare X0, 0
	028 JumpIfEqual {91}
	029 Move X22, 0xE12000
	030 Move X22, [X22+3816]
	031 Move X1, [X22]
	032 Call ReadOnlyCollection`1<Object>.get_Count, X0
	033 Compare W0, 0
	034 JumpIfEqual {110}
	035 Move W0, 16
	036 Move X1, X31
	037 Call StringBuilderCache.Acquire, X0
	038 Move X20, X0
	039 Move X0, X19
	040 Move X1, X31
	041 Call Exception.get_Message, X0
	042 Compare X20, 0
	043 JumpIfEqual {91}
	044 Move X1, X0
	045 Move X0, X20
	046 Move X2, X31
	047 Call StringBuilder.Append, X0, X1
	048 Move W1, 32
	049 Move X0, X20
	050 Move X2, X31
	051 Call StringBuilder.Append, X0, X1
	052 Move X0, [X19+144]
	053 Compare X0, 0
	054 JumpIfEqual {91}
	055 Move X23, 0xE12000
	056 Move X24, 0xE12000
	057 Move X23, [X23+3880]
	058 Move X24, [X24+3888]
	059 Move W21, W31
	060 Move X1, [X22]
	061 Call ReadOnlyCollection`1<Object>.get_Count, X0
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move W1, 40
	064 Move X0, X20
	065 Move X2, X31
	066 Call StringBuilder.Append, X0, X1
	067 Move X0, [X19+144]
	068 Compare X0, 0
	069 JumpIfEqual {91}
	070 Move X2, [X23]
	071 Move W1, W21
	072 Call ReadOnlyCollection`1<Object>.get_Item, X0, X1
	073 Compare X0, 0
	074 JumpIfEqual {91}
	075 Move X8, [X0]
	076 Move X9, [X8+392]
	077 Move X1, [X8+400]
	078 NotImplemented "Instruction BLR not yet implemented."
	079 Move X1, X0
	080 Move X0, X20
	081 Move X2, X31
	082 Call StringBuilder.Append, X0, X1
	083 Move X1, [X24]
	084 Move X0, X20
	085 Move X2, X31
	086 Call StringBuilder.Append, X0, X1
	087 Move X0, [X19+144]
	088 Add W21, W21, 1
	089 Compare X0, 0
	090 JumpIfNotEqual {60}
	091 Call 0x1C17F20
	092 Move X0, X20
	093 Move X1, X31
	094 Call StringBuilder.get_Length, X0
	095 Subtract W1, W0, 1
	096 Move X0, X20
	097 Move X2, X31
	098 Call StringBuilder.set_Length, X0, X1
	099 Move X0, X20
	100 Move X20, [X31+48]
	101 Move X19, [X31+56]
	102 Move X22, [X31+32]
	103 Move X21, [X31+40]
	104 Move X24, [X31+16]
	105 Move X23, [X31+24]
	106 Move X1, X31
	107 Move X30, [X31+64]
	108 Call StringBuilderCache.GetStringAndRelease, X0
	109 Return X0
	110 Move X0, X19
	111 Move X20, [X31+48]
	112 Move X19, [X31+56]
	113 Move X22, [X31+32]
	114 Move X21, [X31+40]
	115 Move X24, [X31+16]
	116 Move X23, [X31+24]
	117 Move X1, X31
	118 Move X30, [X31+64]
	119 Call Exception.get_Message, X0
	120 Return X0

Method: System.String ToString()

Disassembly:
	0x03316858 STP X30, X23, [X31 - 0x30]!
	0x0331685C STP X22, X21, [X31 + 0x10]
	0x03316860 STP X20, X19, [X31 + 0x20]
	0x03316864 ADRP X23, 0x10C6000
	0x03316868 LDRB W8, [X23 + 0xB8C]
	0x0331686C MOV X21, X3
	0x03316870 MOV X22, X2
	0x03316874 MOV X20, X1
	0x03316878 MOV X19, X0
	0x0331687C TBNZ X8, 0x0, 0x33168A0
	0x03316880 ADRP X0, 0xE11000
	0x03316884 LDR X0, [X0 + 0xFA0]
	0x03316888 BL 0x1C16CF4
	0x0331688C ADRP X0, 0xE11000
	0x03316890 LDR X0, [X0 + 0xFA8]
	0x03316894 BL 0x1C16CF4
	0x03316898 MOVZ W8, 0x1
	0x0331689C STRB W8, [X23 + 0xB8C]
	0x033168A0 MOV X0, X19
	0x033168A4 MOV X1, X20
	0x033168A8 MOV X2, X22
	0x033168AC MOV X3, X21
	0x033168B0 MOV X4, X31
	0x033168B4 BL 0x338CA74
	0x033168B8 CBZ X20, 0x3316904
	0x033168BC ADRP X8, 0xE11000
	0x033168C0 LDR X8, [X8 + 0xFA0]
	0x033168C4 ADRP X21, 0xE11000
	0x033168C8 MOV X0, X20
	0x033168CC MOV X2, X31
	0x033168D0 LDR X1, [X8]
	0x033168D4 LDR X21, [X21 + 0xFA8]
	0x033168D8 BL 0x32A9F64
	0x033168DC STR X0, [X19 + 0x90]
	0x033168E0 LDR X1, [X21]
	0x033168E4 MOV X0, X20
	0x033168E8 MOV X2, X31
	0x033168EC BL 0x32A9F64
	0x033168F0 STR X0, [X19 + 0x98]
	0x033168F4 LDP X20, X19, [X31 + 0x20]
	0x033168F8 LDP X22, X21, [X31 + 0x10]
	0x033168FC LDP X30, X23, [X31], #0x30
	0x03316900 RET
	0x03316904 BL 0x1C16F20
	0x03316908 STP X30, X25, [X31 - 0x40]!
	0x0331690C STP X24, X23, [X31 + 0x10]
	0x03316910 STP X22, X21, [X31 + 0x20]
	0x03316914 STP X20, X19, [X31 + 0x30]
	0x03316918 ADRP X25, 0x10C6000
	0x0331691C ADRP X23, 0xE05000
	0x03316920 ADRP X24, 0xDDD000
	0x03316924 LDRB W8, [X25 + 0xB8D]
	0x03316928 LDR X23, [X23 + 0xB60]
	0x0331692C LDR X24, [X24 + 0x6C0]
	0x03316930 MOV X21, X3
	0x03316934 MOV X22, X2
	0x03316938 MOV X19, X1
	0x0331693C MOV X20, X0
	0x03316940 TBNZ X8, 0x0, 0x331697C
	0x03316944 ADRP X0, 0xE05000
	0x03316948 LDR X0, [X0 + 0xB60]
	0x0331694C BL 0x1C16CF4
	0x03316950 ADRP X0, 0xDDD000
	0x03316954 LDR X0, [X0 + 0x6C0]
	0x03316958 BL 0x1C16CF4
	0x0331695C ADRP X0, 0xE11000
	0x03316960 LDR X0, [X0 + 0xFA0]
	0x03316964 BL 0x1C16CF4
	0x03316968 ADRP X0, 0xE11000
	0x0331696C LDR X0, [X0 + 0xFA8]
	0x03316970 BL 0x1C16CF4
	0x03316974 MOVZ W8, 0x1
	0x03316978 STRB W8, [X25 + 0xB8D]
	0x0331697C MOV X0, X20
	0x03316980 MOV X1, X19
	0x03316984 MOV X2, X22
	0x03316988 MOV X3, X21
	0x0331698C MOV X4, X31
	0x03316990 BL 0x33B3620
	0x03316994 LDR X0, [X24]
	0x03316998 LDR X21, [X20 + 0x90]
	0x0331699C LDR X22, [X23]
	0x033169A0 LDR W8, [X0 + 0xE0]
	0x033169A4 CBNZ W8, 0x33169AC
	0x033169A8 BL 0x1C16DFC
	0x033169AC MOV X0, X22
	0x033169B0 MOV X1, X31
	0x033169B4 BL 0x338C698
	0x033169B8 CBZ X19, 0x3316A1C
	0x033169BC ADRP X8, 0xE11000
	0x033169C0 LDR X8, [X8 + 0xFA0]
	0x033169C4 ADRP X22, 0xE11000
	0x033169C8 MOV X3, X0
	0x033169CC MOV X0, X19
	0x033169D0 LDR X1, [X8]
	0x033169D4 LDR X22, [X22 + 0xFA8]
	0x033169D8 MOV X2, X21
	0x033169DC MOV X4, X31
	0x033169E0 BL 0x32A89BC
	0x033169E4 LDR X0, [X23]
	0x033169E8 LDR X20, [X20 + 0x98]
	0x033169EC MOV X1, X31
	0x033169F0 BL 0x338C698
	0x033169F4 LDR X1, [X22]
	0x033169F8 MOV X3, X0
	0x033169FC MOV X0, X19
	0x03316A00 MOV X2, X20
	0x03316A04 LDP X20, X19, [X31 + 0x30]
	0x03316A08 LDP X22, X21, [X31 + 0x20]
	0x03316A0C LDP X24, X23, [X31 + 0x10]
	0x03316A10 MOV X4, X31
	0x03316A14 LDP X30, X25, [X31], #0x40
	0x03316A18 B 0x32A89BC
	0x03316A1C BL 0x1C16F20
	0x03316A20 STP X30, X19, [X31 - 0x10]!
	0x03316A24 MOV X19, X0
	0x03316A28 BL 0x3316A38
	0x03316A2C LDR X0, [X19 + 0x18]
	0x03316A30 LDP X30, X19, [X31], #0x10
	0x03316A34 RET
	0x03316A38 STR X30, [X31 - 0x20]!
	0x03316A3C STP X20, X19, [X31 + 0x10]
	0x03316A40 ADRP X20, 0x10C6000
	0x03316A44 LDRB W8, [X20 + 0xB8E]
	0x03316A48 MOV X19, X0
	0x03316A4C TBNZ X8, 0x0, 0x3316A64
	0x03316A50 ADRP X0, 0xE11000
	0x03316A54 LDR X0, [X0 + 0xF98]
	0x03316A58 BL 0x1C16CF4
	0x03316A5C MOVZ W8, 0x1
	0x03316A60 STRB W8, [X20 + 0xB8E]
	0x03316A64 LDR X8, [X19 + 0x18]
	0x03316A68 CBNZ X8, 0x3316AA4

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X20, 0x10C7000
	015 Move X21, 0xDDE000
	016 Move W8, [X20+2935]
	017 Move X21, [X21+2288]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {49}
	023 Move X0, 0xDE0000
	024 Move X0, [X0+3144]
	025 Call 0x1C17CF4
	026 Move X0, 0xDDE000
	027 Move X0, [X0+1880]
	028 Call 0x1C17CF4
	029 Move X0, 0xE12000
	030 Move X0, [X0+3816]
	031 Call 0x1C17CF4
	032 Move X0, 0xE12000
	033 Move X0, [X0+3880]
	034 Call 0x1C17CF4
	035 Move X0, 0xDDE000
	036 Move X0, [X0+2288]
	037 Call 0x1C17CF4
	038 Move X0, 0xE12000
	039 Move X0, [X0+3896]
	040 Call 0x1C17CF4
	041 Move X0, 0xE12000
	042 Move X0, [X0+3904]
	043 Call 0x1C17CF4
	044 Move X0, 0xE12000
	045 Move X0, [X0+3912]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X20+2935], W8
	049 Move X0, [X21]
	050 Call 0x1C17F10
	051 Move X1, X31
	052 Move X20, X0
	053 Call StringBuilder..ctor, X0
	054 Move X0, X19
	055 Move X1, X31
	056 Call Exception.ToString, X0
	057 Compare X20, 0
	058 JumpIfEqual {136}
	059 Move X1, X0
	060 Move X0, X20
	061 Move X2, X31
	062 Call StringBuilder.Append, X0, X1
	063 Move X0, [X19+144]
	064 Compare X0, 0
	065 JumpIfEqual {136}
	066 Move X23, 0xE12000
	067 Move X24, 0xE12000
	068 Move X25, 0xDE0000
	069 Move X26, 0xDDE000
	070 Move X27, 0xE12000
	071 Move X28, 0xE12000
	072 Move X29, 0xE12000
	073 Move X23, [X23+3816]
	074 Move X24, [X24+3912]
	075 Move X25, [X25+3144]
	076 Move X26, [X26+1880]
	077 Move X27, [X27+3896]
	078 Move X28, [X28+3880]
	079 Move X29, [X29+3904]
	080 Move W21, W31
	081 Move X1, [X23]
	082 Call ReadOnlyCollection`1<Object>.get_Count, X0
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X0, X20
	085 Move X1, X31
	086 Call StringBuilder.AppendLine, X0
	087 Move X1, [X24]
	088 Move X0, X20
	089 Move X2, X31
	090 Call StringBuilder.Append, X0, X1
	091 Move X0, [X25]
	092 Move W8, [X0+224]
	093 Compare W8, 0
	094 JumpIfNotEqual {96}
	095 Call 0x1C17DFC
	096 Move X0, X31
	097 Call CultureInfo.get_InvariantCulture
	098 Move X22, X0
	099 Move X0, [X26]
	100 Add X1, X31, 12
	101 Move [X31+12], W21
	102 Call 0x1C17E04
	103 Move X2, [X27]
	104 Move X3, X0
	105 Move X0, X20
	106 Move X1, X22
	107 Move X4, X31
	108 Call StringBuilder.AppendFormat, X0, X1, X2, X3
	109 Move X0, [X19+144]
	110 Compare X0, 0
	111 JumpIfEqual {136}
	112 Move X2, [X28]
	113 Move W1, W21
	114 Call ReadOnlyCollection`1<Object>.get_Item, X0, X1
	115 Compare X0, 0
	116 JumpIfEqual {136}
	117 Move X8, [X0]
	118 Move X9, [X8+360]
	119 Move X1, [X8+368]
	120 NotImplemented "Instruction BLR not yet implemented."
	121 Move X1, X0
	122 Move X0, X20
	123 Move X2, X31
	124 Call StringBuilder.Append, X0, X1
	125 Move X1, [X29]
	126 Move X0, X20
	127 Move X2, X31
	128 Call StringBuilder.Append, X0, X1
	129 Move X0, X20
	130 Move X1, X31
	131 Call StringBuilder.AppendLine, X0
	132 Move X0, [X19+144]
	133 Add W21, W21, 1
	134 Compare X0, 0
	135 JumpIfNotEqual {81}
	136 Call 0x1C17F20
	137 Move X8, [X20]
	138 Move X0, X20
	139 Move X9, [X8+360]
	140 Move X1, [X8+368]
	141 NotImplemented "Instruction BLR not yet implemented."
	142 Move X20, [X31+96]
	143 Move X19, [X31+104]
	144 Move X22, [X31+80]
	145 Move X21, [X31+88]
	146 Move X24, [X31+64]
	147 Move X23, [X31+72]
	148 Move X26, [X31+48]
	149 Move X25, [X31+56]
	150 Move X28, [X31+32]
	151 Move X27, [X31+40]
	152 Move X29, [X31+16]
	153 Move X30, [X31+24]
	154 Add X31, X31, 112
	155 Return X0

