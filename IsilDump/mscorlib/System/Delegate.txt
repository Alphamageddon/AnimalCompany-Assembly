Type: System.Delegate

Method: System.Reflection.MethodInfo get_Method()

Disassembly:
	0x033C5268 LDR X5, [X8]
	0x033C526C MOV X3, X31
	0x033C5270 MOV X4, X23

ISIL:
	001 Move X8, [X0]
	002 Move X2, [X8+440]
	003 Move X1, [X8+448]
	004 CallNoReturn X2

Method: System.Reflection.MethodInfo GetVirtualMethod_internal()

Disassembly:
	0x033C5274 MOV X6, X31

ISIL:
	001 Call 0x1C88838
	002 Return X0

Method: System.Object get_Target()

Disassembly:
	0x033C5278 BL 0x33976A4
	0x033C527C MOV X1, X31

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Delegate CreateDelegate_internal(System.Type type, System.Object target, System.Reflection.MethodInfo info, System.Boolean throwOnBindFailure)

Disassembly:
	0x033C5280 MOV X2, X31
	0x033C5284 MOV X25, X0

ISIL:
	001 And W3, W3, 1
	002 Call 0x1C887B4
	003 Return X0

Method: System.Boolean arg_type_match(System.Type delArgType, System.Type argType)

Disassembly:
	0x033C5288 BL 0x32CE528
	0x033C528C TBZ X0, 0x0, 0x33C52D0
	0x033C5290 LDR X8, [X22]
	0x033C5294 MOV X0, X22
	0x033C5298 LDR X9, [X8 + 0x3B8]
	0x033C529C LDR X1, [X8 + 0x3C0]
	0x033C52A0 BLR X9
	0x033C52A4 CBZ X25, 0x33C5334
	0x033C52A8 LDR X8, [X25]
	0x033C52AC MOV X26, X0
	0x033C52B0 MOV X0, X25
	0x033C52B4 LDR X9, [X8 + 0x3B8]
	0x033C52B8 LDR X1, [X8 + 0x3C0]
	0x033C52BC BLR X9
	0x033C52C0 MOV X1, X0
	0x033C52C4 MOV X0, X26
	0x033C52C8 BL 0x33C457C
	0x033C52CC TBNZ X0, 0x0, 0x33C52F0
	0x033C52D0 LDR X8, [X21]
	0x033C52D4 MOV X0, X21
	0x033C52D8 LDR X9, [X8 + 0x818]
	0x033C52DC LDR X1, [X8 + 0x820]
	0x033C52E0 BLR X9
	0x033C52E4 MOV X21, X0
	0x033C52E8 B 0x33C51E8
	0x033C52EC MOV X25, X31
	0x033C52F0 MOV X0, X25
	0x033C52F4 MOV X1, X31
	0x033C52F8 MOV X2, X31
	0x033C52FC BL 0x32C2354
	0x033C5300 TBZ X0, 0x0, 0x33C530C
	0x033C5304 LDR W8, [X31 + 0x8]
	0x033C5308 TBNZ X8, 0x0, 0x33C53E4
	0x033C530C ANDS W31, W0, 0x1
	0x033C5310 CSEL X0, X31, X25, NE
	0x033C5314 LDP X20, X19, [X31 + 0x60]
	0x033C5318 LDP X22, X21, [X31 + 0x50]
	0x033C531C LDP X24, X23, [X31 + 0x40]
	0x033C5320 LDP X26, X25, [X31 + 0x30]
	0x033C5324 LDP X28, X27, [X31 + 0x20]
	0x033C5328 LDP X29, X30, [X31 + 0x10]
	0x033C532C ADD X31, X31, 0x70
	0x033C5330 RET
	0x033C5334 BL 0x1C16F20
	0x033C5338 BL 0x1C16F28
	0x033C533C BL 0x1C16F44
	0x033C5340 MOV X1, X31
	0x033C5344 BL 0x1C16DEC
	0x033C5348 ADRP X0, 0xD33000
	0x033C534C LDR X0, [X0 + 0x528]
	0x033C5350 BL 0x1C16D08
	0x033C5354 BL 0x1C16F10
	0x033C5358 MOV X19, X0
	0x033C535C ADRP X0, 0xD36000
	0x033C5360 LDR X0, [X0 + 0x5E8]
	0x033C5364 B 0x33C5384
	0x033C5368 ADRP X0, 0xD33000
	0x033C536C LDR X0, [X0 + 0x528]
	0x033C5370 BL 0x1C16D08
	0x033C5374 BL 0x1C16F10
	0x033C5378 MOV X19, X0
	0x033C537C ADRP X0, 0xD2F000
	0x033C5380 LDR X0, [X0 + 0x6E8]
	0x033C5384 BL 0x1C16D08
	0x033C5388 MOV X1, X0
	0x033C538C MOV X0, X19
	0x033C5390 MOV X2, X31
	0x033C5394 BL 0x330E100
	0x033C5398 B 0x33C53CC
	0x033C539C ADRP X0, 0xD36000
	0x033C53A0 LDR X0, [X0 + 0x578]
	0x033C53A4 BL 0x1C16D08
	0x033C53A8 BL 0x1C16F10
	0x033C53AC MOV X19, X0
	0x033C53B0 ADRP X0, 0xD67000
	0x033C53B4 LDR X0, [X0 + 0x810]
	0x033C53B8 BL 0x1C16D08
	0x033C53BC MOV X1, X0
	0x033C53C0 MOV X0, X19
	0x033C53C4 MOV X2, X31
	0x033C53C8 BL 0x3314A68
	0x033C53CC ADRP X0, 0xD67000
	0x033C53D0 LDR X0, [X0 + 0x818]
	0x033C53D4 BL 0x1C16D08
	0x033C53D8 MOV X1, X0
	0x033C53DC MOV X0, X19
	0x033C53E0 BL 0x1C16DEC
	0x033C53E4 ADRP X0, 0xD67000
	0x033C53E8 LDR X0, [X0 + 0x820]
	0x033C53EC BL 0x1C16D08
	0x033C53F0 MOV X20, X0
	0x033C53F4 ADRP X0, 0xD67000
	0x033C53F8 LDR X0, [X0 + 0x828]
	0x033C53FC BL 0x1C16D08
	0x033C5400 MOV X2, X0
	0x033C5404 MOV X0, X20
	0x033C5408 MOV X1, X19
	0x033C540C MOV X3, X31
	0x033C5410 BL 0x32274B8
	0x033C5414 MOV X19, X0
	0x033C5418 ADRP X0, 0xD36000
	0x033C541C LDR X0, [X0 + 0x578]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1019000
	007 Move X22, 0xD2F000
	008 Move W8, [X21+612]
	009 Move X22, [X22+1728]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xD2F000
	017 Move X0, [X0+3576]
	018 Call 0x1C17CF4
	019 Move X0, 0xD2F000
	020 Move X0, [X0+1728]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+612], W8
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X19
	030 Move X1, X20
	031 Move X2, X31
	032 Call Type.op_Equality, X0, X1
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {44}
	037 Move W0, 1
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 Return X0
	044 Compare X20, 0
	045 JumpIfEqual {136}
	046 Move X0, X20
	047 Move X1, X31
	048 Call Type.get_IsValueType, X0
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {63}
	053 Move X8, [X20]
	054 Move X0, X20
	055 Move X1, X19
	056 Move X9, [X8+680]
	057 Move X2, [X8+688]
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfEqual {37}
	063 Compare X19, 0
	064 JumpIfEqual {136}
	065 Move X8, [X19]
	066 Move X0, X19
	067 Move X9, [X8+1416]
	068 Move X1, [X8+1424]
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfNotEqual {99}
	074 Move X8, 0xD2F000
	075 Move X8, [X8+3576]
	076 Move X0, [X8]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Move X0, X19
	082 Move X1, X31
	083 Call Enum.GetUnderlyingType, X0
	084 Move X8, [X22]
	085 Move X21, X0
	086 Move W9, [X8+224]
	087 Compare W9, 0
	088 JumpIfNotEqual {91}
	089 Move X0, X8
	090 Call 0x1C17DFC
	091 Move X0, X21
	092 Move X1, X20
	093 Move X2, X31
	094 Call Type.op_Equality, X0, X1
	095 Move TEMP, X0
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfEqual {37}
	099 Move X8, [X20]
	100 Move X0, X20
	101 Move X9, [X8+1416]
	102 Move X1, [X8+1424]
	103 NotImplemented "Instruction BLR not yet implemented."
	104 Move TEMP, X0
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfNotEqual {135}
	108 Move X8, 0xD2F000
	109 Move X8, [X8+3576]
	110 Move X0, [X8]
	111 Move W8, [X0+224]
	112 Compare W8, 0
	113 JumpIfNotEqual {115}
	114 Call 0x1C17DFC
	115 Move X0, X20
	116 Move X1, X31
	117 Call Enum.GetUnderlyingType, X0
	118 Move X8, [X22]
	119 Move X20, X0
	120 Move W9, [X8+224]
	121 Compare W9, 0
	122 JumpIfNotEqual {125}
	123 Move X0, X8
	124 Call 0x1C17DFC
	125 Move X0, X20
	126 Move X1, X19
	127 Move X20, [X31+32]
	128 Move X19, [X31+40]
	129 Move X22, [X31+16]
	130 Move X21, [X31+24]
	131 Move X2, X31
	132 Move X30, [X31+48]
	133 Call Type.op_Equality, X0, X1
	134 Return X0
	135 Move W0, W31
	136 Call 0x1C17F20

Method: System.Boolean arg_type_match_this(System.Type delArgType, System.Type argType, System.Boolean boxedThis)

Disassembly:
	0x033C5420 BL 0x1C16D08
	0x033C5424 BL 0x1C16F10
	0x033C5428 MOV X1, X19
	0x033C542C MOV X2, X31
	0x033C5430 MOV X20, X0
	0x033C5434 BL 0x3314A68
	0x033C5438 ADRP X0, 0xD67000
	0x033C543C LDR X0, [X0 + 0x818]
	0x033C5440 BL 0x1C16D08
	0x033C5444 MOV X1, X0
	0x033C5448 MOV X0, X20
	0x033C544C BL 0x1C16DEC
	0x033C5450 STP X30, X25, [X31 - 0x40]!
	0x033C5454 STP X24, X23, [X31 + 0x10]
	0x033C5458 STP X22, X21, [X31 + 0x20]
	0x033C545C STP X20, X19, [X31 + 0x30]
	0x033C5460 ADRP X24, 0x1018000
	0x033C5464 ADRP X25, 0xD2E000
	0x033C5468 LDRB W8, [X24 + 0x269]
	0x033C546C LDR X25, [X25 + 0x6C0]
	0x033C5470 MOV W22, W4
	0x033C5474 MOV W23, W3
	0x033C5478 MOV X20, X2
	0x033C547C MOV X21, X1
	0x033C5480 MOV X19, X0
	0x033C5484 TBNZ X8, 0x0, 0x33C549C
	0x033C5488 ADRP X0, 0xD2E000
	0x033C548C LDR X0, [X0 + 0x6C0]
	0x033C5490 BL 0x1C16CF4
	0x033C5494 MOVZ W8, 0x1
	0x033C5498 STRB W8, [X24 + 0x269]
	0x033C549C LDR X0, [X25]
	0x033C54A0 LDR W8, [X0 + 0xE0]
	0x033C54A4 CBNZ W8, 0x33C54AC
	0x033C54A8 BL 0x1C16DFC
	0x033C54AC MOV X0, X21
	0x033C54B0 MOV X1, X31
	0x033C54B4 MOV X2, X31
	0x033C54B8 BL 0x3395194
	0x033C54BC TBNZ X0, 0x0, 0x33C5530
	0x033C54C0 AND W22, W22, 0x1
	0x033C54C4 AND W4, W23, 0x1
	0x033C54C8 MOVZ W3, 0x8
	0x033C54CC MOV X0, X19
	0x033C54D0 MOV X1, X21
	0x033C54D4 MOV X2, X20
	0x033C54D8 MOV W5, W22
	0x033C54DC BL 0x33C4FFC
	0x033C54E0 MOV X1, X31
	0x033C54E4 MOV X2, X31
	0x033C54E8 MOV X20, X0
	0x033C54EC BL 0x32C2354
	0x033C54F0 TBZ X0, 0x0, 0x33C550C
	0x033C54F4 LDP X20, X19, [X31 + 0x30]
	0x033C54F8 LDP X22, X21, [X31 + 0x20]
	0x033C54FC LDP X24, X23, [X31 + 0x10]
	0x033C5500 MOV X0, X31
	0x033C5504 LDP X30, X25, [X31], #0x40
	0x033C5508 RET
	0x033C550C MOV X0, X19
	0x033C5510 MOV X2, X20
	0x033C5514 MOV W3, W22
	0x033C5518 LDP X20, X19, [X31 + 0x30]
	0x033C551C LDP X22, X21, [X31 + 0x20]
	0x033C5520 LDP X24, X23, [X31 + 0x10]
	0x033C5524 MOV X1, X31
	0x033C5528 LDP X30, X25, [X31], #0x40
	0x033C552C B 0x1C877B4
	0x033C5530 ADRP X0, 0xD33000
	0x033C5534 LDR X0, [X0 + 0x528]
	0x033C5538 BL 0x1C16D08
	0x033C553C BL 0x1C16F10
	0x033C5540 MOV X19, X0
	0x033C5544 ADRP X0, 0xD67000
	0x033C5548 LDR X0, [X0 + 0x480]
	0x033C554C BL 0x1C16D08
	0x033C5550 MOV X1, X0
	0x033C5554 MOV X0, X19
	0x033C5558 MOV X2, X31
	0x033C555C BL 0x330E100
	0x033C5560 ADRP X0, 0xD67000
	0x033C5564 LDR X0, [X0 + 0x830]
	0x033C5568 BL 0x1C16D08
	0x033C556C MOV X1, X0
	0x033C5570 MOV X0, X19
	0x033C5574 BL 0x1C16DEC
	0x033C5578 MOVZ W4, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1019000
	007 Move W8, [X22+613]
	008 Move W21, W2
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xD2F000
	016 Move X0, [X0+1728]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+613], W8
	020 Compare X19, 0
	021 JumpIfEqual {120}
	022 Move X0, X19
	023 Move X1, X31
	024 Call Type.get_IsValueType, X0
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {64}
	029 Compare X20, 0
	030 JumpIfEqual {120}
	031 Move X0, X20
	032 Move X1, X31
	033 Call Type.get_IsByRef, X0
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {91}
	038 Move X8, [X20]
	039 Move X0, X20
	040 Move X9, [X8+1064]
	041 Move X1, [X8+1072]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move X8, 0xD2F000
	044 Move X8, [X8+1728]
	045 Move X22, X0
	046 Move X8, [X8]
	047 Move W9, [X8+224]
	048 Compare W9, 0
	049 JumpIfNotEqual {52}
	050 Move X0, X8
	051 Call 0x1C17DFC
	052 Move X0, X22
	053 Move X1, X19
	054 Move X2, X31
	055 Call Type.op_Equality, X0, X1
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {113}
	060 Move TEMP, X21
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {95}
	064 Move X8, 0xD2F000
	065 Move X8, [X8+1728]
	066 Move X0, [X8]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 Move X0, X20
	072 Move X1, X19
	073 Move X2, X31
	074 Call Type.op_Equality, X0, X1
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfNotEqual {80}
	079 Move W0, 1
	080 Move X8, [X19]
	081 Move X0, X19
	082 Move X1, X20
	083 Move X20, [X31+32]
	084 Move X19, [X31+40]
	085 Move X3, [X8+680]
	086 Move X2, [X8+688]
	087 Move X22, [X31+16]
	088 Move X21, [X31+24]
	089 Move X30, [X31+48]
	090 CallNoReturn X3
	091 Move TEMP, X21
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfNotEqual {112}
	095 Move X8, 0xD2F000
	096 Move X8, [X8+1728]
	097 Move X0, [X8]
	098 Move W8, [X0+224]
	099 Compare W8, 0
	100 JumpIfNotEqual {102}
	101 Call 0x1C17DFC
	102 Move X0, X20
	103 Move X1, X19
	104 Move X20, [X31+32]
	105 Move X19, [X31+40]
	106 Move X22, [X31+16]
	107 Move X21, [X31+24]
	108 Move X2, X31
	109 Move X30, [X31+48]
	110 Call Type.op_Equality, X0, X1
	111 Return X0
	112 Move W0, W31
	113 Move X20, [X31+32]
	114 Move X19, [X31+40]
	115 Move X22, [X31+16]
	116 Move X21, [X31+24]
	117 And W0, W0, 1
	118 Move X30, [X31+48]
	119 Return X0
	120 Call 0x1C17F20

Method: System.Boolean return_type_match(System.Type delReturnType, System.Type returnType)

Disassembly:
	0x033C557C MOV W3, W31
	0x033C5580 B 0x33C5450
	0x033C5584 STP X30, X23, [X31 - 0x30]!
	0x033C5588 STP X22, X21, [X31 + 0x10]
	0x033C558C STP X20, X19, [X31 + 0x20]
	0x033C5590 CBZ X1, 0x33C5618
	0x033C5594 MOV X20, X0
	0x033C5598 MOV X0, X1
	0x033C559C MOV W21, W4
	0x033C55A0 MOV W23, W3
	0x033C55A4 MOV X22, X2
	0x033C55A8 MOV X19, X1
	0x033C55AC BL 0x1C25764
	0x033C55B0 AND W21, W21, 0x1
	0x033C55B4 MOV X1, X0
	0x033C55B8 AND W4, W23, 0x1
	0x033C55BC MOVZ W3, 0x4
	0x033C55C0 MOV X0, X20
	0x033C55C4 MOV X2, X22
	0x033C55C8 MOV W5, W21
	0x033C55CC BL 0x33C4FFC
	0x033C55D0 MOV X1, X31
	0x033C55D4 MOV X2, X31
	0x033C55D8 MOV X22, X0
	0x033C55DC BL 0x32C2354
	0x033C55E0 TBZ X0, 0x0, 0x33C55F8
	0x033C55E4 LDP X20, X19, [X31 + 0x20]
	0x033C55E8 LDP X22, X21, [X31 + 0x10]
	0x033C55EC MOV X0, X31
	0x033C55F0 LDP X30, X23, [X31], #0x30
	0x033C55F4 RET
	0x033C55F8 MOV X0, X20
	0x033C55FC MOV X1, X19
	0x033C5600 MOV X2, X22
	0x033C5604 MOV W3, W21
	0x033C5608 LDP X20, X19, [X31 + 0x20]
	0x033C560C LDP X22, X21, [X31 + 0x10]
	0x033C5610 LDP X30, X23, [X31], #0x30
	0x033C5614 B 0x1C877B4
	0x033C5618 ADRP X0, 0xD33000
	0x033C561C LDR X0, [X0 + 0x528]
	0x033C5620 BL 0x1C16D08
	0x033C5624 BL 0x1C16F10
	0x033C5628 MOV X19, X0
	0x033C562C ADRP X0, 0xD67000
	0x033C5630 LDR X0, [X0 + 0x480]
	0x033C5634 BL 0x1C16D08
	0x033C5638 MOV X1, X0
	0x033C563C MOV X0, X19
	0x033C5640 MOV X2, X31
	0x033C5644 BL 0x330E100
	0x033C5648 ADRP X0, 0xD67000
	0x033C564C LDR X0, [X0 + 0x838]
	0x033C5650 BL 0x1C16D08
	0x033C5654 MOV X1, X0
	0x033C5658 MOV X0, X19
	0x033C565C BL 0x1C16DEC
	0x033C5660 LDR X8, [X0]
	0x033C5664 LDP X3, X2, [X8 + 0x198]
	0x033C5668 BR X3
	0x033C566C STP X30, X21, [X31 - 0x20]!
	0x033C5670 STP X20, X19, [X31 + 0x10]
	0x033C5674 ADRP X20, 0x1018000
	0x033C5678 ADRP X21, 0xD67000
	0x033C567C LDRB W8, [X20 + 0x26A]
	0x033C5680 LDR X21, [X21 + 0x7D0]
	0x033C5684 MOV X19, X0
	0x033C5688 TBNZ X8, 0x0, 0x33C56AC
	0x033C568C ADRP X0, 0xD67000
	0x033C5690 LDR X0, [X0 + 0x7D0]
	0x033C5694 BL 0x1C16CF4
	0x033C5698 ADRP X0, 0xD67000
	0x033C569C LDR X0, [X0 + 0x7D8]
	0x033C56A0 BL 0x1C16CF4
	0x033C56A4 MOVZ W8, 0x1
	0x033C56A8 STRB W8, [X20 + 0x26A]
	0x033C56AC LDR X0, [X21]
	0x033C56B0 BL 0x1C16F10
	0x033C56B4 LDR X8, [X19 + 0x58]
	0x033C56B8 CBZ X8, 0x33C5754
	0x033C56BC MOV X20, X0
	0x033C56C0 MOV X0, X8
	0x033C56C4 MOV X1, X31
	0x033C56C8 BL 0x32CE414
	0x033C56CC TBZ X0, 0x0, 0x33C5744
	0x033C56D0 LDR X8, [X19 + 0x20]
	0x033C56D4 CBNZ X8, 0x33C5738
	0x033C56D8 MOV X0, X19
	0x033C56DC BL 0x1C25764
	0x033C56E0 CBZ X0, 0x33C5754
	0x033C56E4 ADRP X8, 0xD67000
	0x033C56E8 LDR X8, [X8 + 0x7D8]
	0x033C56EC MOV X2, X31
	0x033C56F0 LDR X1, [X8]
	0x033C56F4 BL 0x33975F8
	0x033C56F8 CBZ X0, 0x33C5754
	0x033C56FC LDR X8, [X0]
	0x033C5700 LDR X9, [X8 + 0x368]
	0x033C5704 LDR X1, [X8 + 0x370]
	0x033C5708 BLR X9
	0x033C570C LDR X8, [X19 + 0x58]
	0x033C5710 CBZ X8, 0x33C5754
	0x033C5714 LDR X9, [X8]
	0x033C5718 MOV W21, W0
	0x033C571C MOV X0, X8
	0x033C5720 LDR X10, [X9 + 0x368]
	0x033C5724 LDR X1, [X9 + 0x370]
	0x033C5728 BLR X10
	0x033C572C ADD W8, W21, 0x1
	0x033C5730 CMP W8, W0
	0x033C5734 B.NE 0x33C5744
	0x033C5738 CBZ X20, 0x33C5754
	0x033C573C MOVZ W8, 0x1
	0x033C5740 STRB W8, [X20 + 0x20]
	0x033C5744 STR X20, [X19 + 0x68]
	0x033C5748 LDP X20, X19, [X31 + 0x10]
	0x033C574C LDP X30, X21, [X31], #0x20
	0x033C5750 RET
	0x033C5754 BL 0x1C16F20
	0x033C5758 SUB X31, X31, 0x40
	0x033C575C STP X30, X23, [X31 + 0x10]
	0x033C5760 STP X22, X21, [X31 + 0x20]
	0x033C5764 STP X20, X19, [X31 + 0x30]
	0x033C5768 ADRP X20, 0x1018000
	0x033C576C LDRB W8, [X20 + 0x26B]
	0x033C5770 MOV X21, X1
	0x033C5774 MOV X19, X0
	0x033C5778 STR X1, [X31 + 0x8]
	0x033C577C TBNZ X8, 0x0, 0x33C57AC
	0x033C5780 ADRP X0, 0xD67000
	0x033C5784 LDR X0, [X0 + 0x840]
	0x033C5788 BL 0x1C16CF4
	0x033C578C ADRP X0, 0xD2E000
	0x033C5790 LDR X0, [X0 + 0x9D0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x1019000
	008 Move X23, 0xD2F000
	009 Move W8, [X21+614]
	010 Move X23, [X23+1728]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xD2F000
	018 Move X0, [X0+3576]
	019 Call 0x1C17CF4
	020 Move X0, 0xD2F000
	021 Move X0, [X0+1728]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+614], W8
	025 Move X0, [X23]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X20
	031 Move X1, X19
	032 Move X2, X31
	033 Call Type.op_Equality, X0, X1
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {47}
	038 Move W0, 1
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 And W0, W0, 1
	044 Move X30, [X31+48]
	045 Move X23, [X31+56]
	046 Return X0
	047 Compare X20, 0
	048 JumpIfEqual {180}
	049 Move X0, X20
	050 Move X1, X31
	051 Call Type.get_IsValueType, X0
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {58}
	056 Compare X19, 0
	057 JumpIfNotEqual {70}
	058 Compare X19, 0
	059 JumpIfEqual {180}
	060 Move X8, [X19]
	061 Move X0, X19
	062 Move X1, X20
	063 Move X9, [X8+680]
	064 Move X2, [X8+688]
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfEqual {38}
	070 Move X8, [X19]
	071 Move X0, X19
	072 Move X9, [X8+1416]
	073 Move X1, [X8+1424]
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Move X8, [X20]
	076 Move W22, W0
	077 Move X0, X20
	078 Move X9, [X8+1416]
	079 Move X1, [X8+1424]
	080 NotImplemented "Instruction BLR not yet implemented."
	081 Move W21, W0
	082 Move TEMP, X22
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfNotEqual {113}
	086 Move TEMP, X21
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {113}
	090 Move X8, 0xD2F000
	091 Move X8, [X8+3576]
	092 Move X0, [X8]
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {97}
	096 Call 0x1C17DFC
	097 Move X0, X19
	098 Move X1, X31
	099 Call Enum.GetUnderlyingType, X0
	100 Move X19, X0
	101 Move X0, X20
	102 Move X1, X31
	103 Call Enum.GetUnderlyingType, X0
	104 Move X8, [X23]
	105 Move X20, X0
	106 Move W9, [X8+224]
	107 Compare W9, 0
	108 JumpIfNotEqual {111}
	109 Move X0, X8
	110 Call 0x1C17DFC
	111 Move X0, X19
	112 Move X1, X20
	113 Move TEMP, X22
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfNotEqual {147}
	117 Move X8, 0xD2F000
	118 Move X8, [X8+3576]
	119 Move X0, [X8]
	120 Move W8, [X0+224]
	121 Compare W8, 0
	122 JumpIfNotEqual {124}
	123 Call 0x1C17DFC
	124 Move X0, X19
	125 Move X1, X31
	126 Call Enum.GetUnderlyingType, X0
	127 Move X8, [X23]
	128 Move X22, X0
	129 Move W9, [X8+224]
	130 Compare W9, 0
	131 JumpIfNotEqual {134}
	132 Move X0, X8
	133 Call 0x1C17DFC
	134 Move X0, X22
	135 Move X1, X20
	136 Move X2, X31
	137 Call Type.op_Equality, X0, X1
	138 Move TEMP, X0
	139 And TEMP, TEMP, 1
	140 Compare TEMP, 1
	141 JumpIfEqual {39}
	142 Xor W8, W21, 1
	143 Move TEMP, X8
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfNotEqual {151}
	147 Move TEMP, X21
	148 And TEMP, TEMP, 1
	149 Compare TEMP, 1
	150 JumpIfNotEqual {179}
	151 Move X8, 0xD2F000
	152 Move X8, [X8+3576]
	153 Move X0, [X8]
	154 Move W8, [X0+224]
	155 Compare W8, 0
	156 JumpIfNotEqual {158}
	157 Call 0x1C17DFC
	158 Move X0, X20
	159 Move X1, X31
	160 Call Enum.GetUnderlyingType, X0
	161 Move X8, [X23]
	162 Move X20, X0
	163 Move W9, [X8+224]
	164 Compare W9, 0
	165 JumpIfNotEqual {168}
	166 Move X0, X8
	167 Call 0x1C17DFC
	168 Move X0, X20
	169 Move X1, X19
	170 Move X20, [X31+32]
	171 Move X19, [X31+40]
	172 Move X22, [X31+16]
	173 Move X21, [X31+24]
	174 Move X2, X31
	175 Move X30, [X31+48]
	176 Move X23, [X31+56]
	177 Call Type.op_Equality, X0, X1
	178 Return X0
	179 Move W0, W31
	180 Call 0x1C17F20

Method: System.Delegate CreateDelegate(System.Type type, System.Object firstArgument, System.Reflection.MethodInfo method, System.Boolean throwOnBindFailure, System.Boolean allowClosed)

Disassembly:
	0x033C5794 BL 0x1C16CF4
	0x033C5798 ADRP X0, 0xD36000
	0x033C579C LDR X0, [X0 + 0xC60]
	0x033C57A0 BL 0x1C16CF4
	0x033C57A4 MOVZ W8, 0x1
	0x033C57A8 STRB W8, [X20 + 0x26B]
	0x033C57AC LDR X8, [X19]
	0x033C57B0 MOV X0, X19
	0x033C57B4 LDP X9, X1, [X8 + 0x1B8]
	0x033C57B8 BLR X9
	0x033C57BC MOV X1, X31
	0x033C57C0 MOV X2, X31
	0x033C57C4 BL 0x32C2354
	0x033C57C8 TBZ X0, 0x0, 0x33C587C
	0x033C57CC CBZ X21, 0x33C584C
	0x033C57D0 ADRP X8, 0xD36000
	0x033C57D4 LDR X8, [X8 + 0xC60]
	0x033C57D8 LDR W1, [X21 + 0x18]
	0x033C57DC LDR X0, [X8]
	0x033C57E0 BL 0x1C16D6C
	0x033C57E4 MOV X20, X0
	0x033C57E8 MOVZ W22, 0x4
	0x033C57EC LDR W8, [X21 + 0x18]
	0x033C57F0 SUB X23, X22, 0x4
	0x033C57F4 CMP W23, W8
	0x033C57F8 B.GE 0x33C5850
	0x033C57FC CMP W23, W8
	0x033C5800 B.CS 0x33C5A10
	0x033C5804 LDR X0, [X21, X22, LSL #3]
	0x033C5808 CBZ X0, 0x33C584C
	0x033C580C BL 0x1C25764
	0x033C5810 CBZ X20, 0x33C584C
	0x033C5814 MOV X21, X0
	0x033C5818 CBZ X0, 0x33C5830
	0x033C581C LDR X8, [X20]
	0x033C5820 MOV X0, X21
	0x033C5824 LDR X1, [X8 + 0x40]
	0x033C5828 BL 0x1C16E00
	0x033C582C CBZ X0, 0x33C5A14
	0x033C5830 LDR W8, [X20 + 0x18]
	0x033C5834 CMP W23, W8
	0x033C5838 B.CS 0x33C5A10
	0x033C583C STR X21, [X20, X22, LSL #3]
	0x033C5840 LDR X21, [X31 + 0x8]
	0x033C5844 ADD X22, X22, 0x1
	0x033C5848 CBNZ X21, 0x33C57EC
	0x033C584C BL 0x1C16F20
	0x033C5850 LDR X0, [X19 + 0x20]
	0x033C5854 CBZ X0, 0x33C584C
	0x033C5858 BL 0x1C25764
	0x033C585C LDR X8, [X19 + 0x68]
	0x033C5860 CBZ X8, 0x33C584C
	0x033C5864 CBZ X0, 0x33C584C
	0x033C5868 LDR X1, [X8 + 0x18]
	0x033C586C MOV X2, X20
	0x033C5870 MOV X3, X31
	0x033C5874 BL 0x3397674
	0x033C5878 STR X0, [X19 + 0x58]
	0x033C587C LDR X8, [X19 + 0x68]
	0x033C5880 LDR X20, [X19 + 0x20]
	0x033C5884 CBNZ X8, 0x33C5890
	0x033C5888 MOV X0, X19
	0x033C588C BL 0x33C566C
	0x033C5890 LDR X8, [X19]
	0x033C5894 MOV X0, X19
	0x033C5898 LDP X9, X1, [X8 + 0x1B8]
	0x033C589C BLR X9
	0x033C58A0 CBZ X0, 0x33C584C
	0x033C58A4 MOV X1, X31
	0x033C58A8 BL 0x32CE414
	0x033C58AC TBZ X0, 0x0, 0x33C5938
	0x033C58B0 LDR X8, [X19 + 0x68]
	0x033C58B4 CBZ X8, 0x33C584C
	0x033C58B8 LDRB W8, [X8 + 0x20]
	0x033C58BC CBZ W8, 0x33C59D8
	0x033C58C0 CBZ X21, 0x33C5990
	0x033C58C4 ADRP X9, 0xD67000
	0x033C58C8 LDR W8, [X21 + 0x18]
	0x033C58CC LDR X9, [X9 + 0x840]
	0x033C58D0 ADD X0, X31, 0x8
	0x033C58D4 ADD W1, W8, 0x1
	0x033C58D8 LDR X2, [X9]
	0x033C58DC BL 0x2142E6C
	0x033C58E0 LDR X0, [X31 + 0x8]
	0x033C58E4 CBZ X0, 0x33C584C
	0x033C58E8 LDR W8, [X0 + 0x18]
	0x033C58EC MOVZ W3, 0x1
	0x033C58F0 MOV W1, W31
	0x033C58F4 MOV X2, X0
	0x033C58F8 SUB W4, W8, 0x1
	0x033C58FC MOV X5, X31
	0x033C5900 BL 0x339FCE8
	0x033C5904 LDR X21, [X31 + 0x8]
	0x033C5908 CBZ X21, 0x33C584C
	0x033C590C CBZ X20, 0x33C5924
	0x033C5910 LDR X8, [X21]
	0x033C5914 MOV X0, X20
	0x033C5918 LDR X1, [X8 + 0x40]
	0x033C591C BL 0x1C16E00
	0x033C5920 CBZ X0, 0x33C5A14
	0x033C5924 LDR W8, [X21 + 0x18]
	0x033C5928 CBZ W8, 0x33C5A10
	0x033C592C STR X20, [X21 + 0x20]
	0x033C5930 MOV X20, X31
	0x033C5934 B 0x33C59D8
	0x033C5938 LDR X8, [X19 + 0x20]
	0x033C593C CBNZ X8, 0x33C59D8
	0x033C5940 CBZ X21, 0x33C59D8
	0x033C5944 LDR X8, [X21 + 0x18]
	0x033C5948 CBZ X8, 0x33C59D8
	0x033C594C CBZ W8, 0x33C5A10
	0x033C5950 LDR X20, [X21 + 0x20]
	0x033C5954 SUB W4, W8, 0x1
	0x033C5958 MOVZ W1, 0x1
	0x033C595C MOV X0, X21
	0x033C5960 MOV X2, X21
	0x033C5964 MOV W3, W31
	0x033C5968 MOV X5, X31
	0x033C596C BL 0x339FCE8
	0x033C5970 ADRP X9, 0xD67000
	0x033C5974 LDR W8, [X21 + 0x18]
	0x033C5978 LDR X9, [X9 + 0x840]
	0x033C597C ADD X0, X31, 0x8
	0x033C5980 SUB W1, W8, 0x1
	0x033C5984 LDR X2, [X9]
	0x033C5988 BL 0x2142E6C
	0x033C598C B 0x33C59D8
	0x033C5990 ADRP X8, 0xD2E000
	0x033C5994 LDR X8, [X8 + 0x9D0]
	0x033C5998 MOVZ W1, 0x1
	0x033C599C LDR X0, [X8]
	0x033C59A0 BL 0x1C16D6C
	0x033C59A4 CBZ X0, 0x33C584C
	0x033C59A8 MOV X21, X0
	0x033C59AC CBZ X20, 0x33C59C4
	0x033C59B0 LDR X8, [X21]
	0x033C59B4 MOV X0, X20
	0x033C59B8 LDR X1, [X8 + 0x40]
	0x033C59BC BL 0x1C16E00
	0x033C59C0 CBZ X0, 0x33C5A14
	0x033C59C4 LDR W8, [X21 + 0x18]
	0x033C59C8 CBZ W8, 0x33C5A10
	0x033C59CC STR X20, [X21 + 0x20]
	0x033C59D0 MOV X20, X31
	0x033C59D4 STR X21, [X31 + 0x8]
	0x033C59D8 LDR X8, [X19]
	0x033C59DC MOV X0, X19
	0x033C59E0 LDP X9, X1, [X8 + 0x1B8]
	0x033C59E4 BLR X9
	0x033C59E8 CBZ X0, 0x33C584C
	0x033C59EC LDR X2, [X31 + 0x8]
	0x033C59F0 MOV X1, X20
	0x033C59F4 MOV X3, X31
	0x033C59F8 BL 0x32CE4E0
	0x033C59FC LDP X20, X19, [X31 + 0x30]
	0x033C5A00 LDP X22, X21, [X31 + 0x20]
	0x033C5A04 LDP X30, X23, [X31 + 0x10]
	0x033C5A08 ADD X31, X31, 0x40
	0x033C5A0C RET
	0x033C5A10 BL 0x1C16F28
	0x033C5A14 BL 0x1C16F44
	0x033C5A18 MOV X1, X31
	0x033C5A1C BL 0x1C16DEC
	0x033C5A20 B 0x1C25760
	0x033C5A24 B 0x1C25760
	0x033C5A28 STR X30, [X31 - 0x30]!
	0x033C5A2C STP X22, X21, [X31 + 0x10]
	0x033C5A30 STP X20, X19, [X31 + 0x20]
	0x033C5A34 ADRP X21, 0x1018000
	0x033C5A38 LDRB W8, [X21 + 0x26C]
	0x033C5A3C MOV X20, X1
	0x033C5A40 MOV X19, X0
	0x033C5A44 TBNZ X8, 0x0, 0x33C5A68
	0x033C5A48 ADRP X0, 0xD56000
	0x033C5A4C LDR X0, [X0 + 0x870]
	0x033C5A50 BL 0x1C16CF4
	0x033C5A54 ADRP X0, 0xD2E000
	0x033C5A58 LDR X0, [X0 + 0x6C0]
	0x033C5A5C BL 0x1C16CF4
	0x033C5A60 MOVZ W8, 0x1
	0x033C5A64 STRB W8, [X21 + 0x26C]
	0x033C5A68 CBZ X20, 0x33C5B60
	0x033C5A6C ADRP X8, 0xD56000
	0x033C5A70 LDR X8, [X8 + 0x870]
	0x033C5A74 LDR X9, [X20]
	0x033C5A78 LDR X8, [X8]
	0x033C5A7C LDRB W11, [X9 + 0x130]
	0x033C5A80 LDRB W10, [X8 + 0x130]
	0x033C5A84 CMP W11, W10
	0x033C5A88 B.CC 0x33C5B60
	0x033C5A8C LDR X9, [X9 + 0xC8]
	0x033C5A90 ADD X9, X9, X10, 0x3, LSL
	0x033C5A94 LDUR X9, [X9 - 0x8]
	0x033C5A98 CMP X9, X8
	0x033C5A9C CSEL X20, X20, X31, EQ
	0x033C5AA0 B.NE 0x33C5B60
	0x033C5AA4 CBZ X20, 0x33C5BD8
	0x033C5AA8 LDR X8, [X20 + 0x20]
	0x033C5AAC LDR X9, [X19 + 0x20]
	0x033C5AB0 CMP X8, X9
	0x033C5AB4 B.NE 0x33C5B60
	0x033C5AB8 LDR X8, [X20]
	0x033C5ABC MOV X0, X20
	0x033C5AC0 LDP X9, X1, [X8 + 0x1B8]
	0x033C5AC4 BLR X9
	0x033C5AC8 LDR X8, [X19]
	0x033C5ACC MOV X21, X0
	0x033C5AD0 MOV X0, X19
	0x033C5AD4 LDP X9, X1, [X8 + 0x1B8]
	0x033C5AD8 BLR X9
	0x033C5ADC MOV X1, X0
	0x033C5AE0 MOV X0, X21
	0x033C5AE4 MOV X2, X31
	0x033C5AE8 BL 0x32C2354
	0x033C5AEC TBZ X0, 0x0, 0x33C5B60
	0x033C5AF0 LDR X9, [X20 + 0x68]
	0x033C5AF4 LDR X8, [X19 + 0x68]
	0x033C5AF8 CBZ X9, 0x33C5B74
	0x033C5AFC LDR X21, [X9 + 0x10]
	0x033C5B00 CBZ X8, 0x33C5B9C
	0x033C5B04 ADRP X9, 0xD2E000
	0x033C5B08 LDR X9, [X9 + 0x6C0]
	0x033C5B0C LDR X22, [X8 + 0x10]
	0x033C5B10 LDR X0, [X9]
	0x033C5B14 LDR W9, [X0 + 0xE0]
	0x033C5B18 CBNZ W9, 0x33C5B20
	0x033C5B1C BL 0x1C16DFC
	0x033C5B20 MOV X0, X21
	0x033C5B24 MOV X1, X22
	0x033C5B28 MOV X2, X31
	0x033C5B2C BL 0x3395194
	0x033C5B30 TBZ X0, 0x0, 0x33C5B60
	0x033C5B34 LDR X8, [X20 + 0x68]
	0x033C5B38 CBZ X8, 0x33C5BD8
	0x033C5B3C LDR X9, [X19 + 0x68]
	0x033C5B40 CBZ X9, 0x33C5BD8
	0x033C5B44 LDR X0, [X8 + 0x18]
	0x033C5B48 LDR X1, [X9 + 0x18]
	0x033C5B4C LDP X20, X19, [X31 + 0x20]
	0x033C5B50 LDP X22, X21, [X31 + 0x10]
	0x033C5B54 MOV X2, X31
	0x033C5B58 LDR X30, [X31], #0x30
	0x033C5B5C B 0x321BA08
	0x033C5B60 MOV W0, W31
	0x033C5B64 LDP X20, X19, [X31 + 0x20]
	0x033C5B68 LDP X22, X21, [X31 + 0x10]
	0x033C5B6C LDR X30, [X31], #0x30
	0x033C5B70 RET
	0x033C5B74 CBZ X8, 0x33C5BD0
	0x033C5B78 ADRP X9, 0xD2E000
	0x033C5B7C LDR X9, [X9 + 0x6C0]
	0x033C5B80 LDR X19, [X8 + 0x10]
	0x033C5B84 LDR X0, [X9]
	0x033C5B88 LDR W9, [X0 + 0xE0]
	0x033C5B8C CBNZ W9, 0x33C5B94
	0x033C5B90 BL 0x1C16DFC
	0x033C5B94 MOV X0, X19
	0x033C5B98 B 0x33C5BB8
	0x033C5B9C ADRP X8, 0xD2E000
	0x033C5BA0 LDR X8, [X8 + 0x6C0]
	0x033C5BA4 LDR X0, [X8]
	0x033C5BA8 LDR W8, [X0 + 0xE0]
	0x033C5BAC CBNZ W8, 0x33C5BB4
	0x033C5BB0 BL 0x1C16DFC
	0x033C5BB4 MOV X0, X21
	0x033C5BB8 LDP X20, X19, [X31 + 0x20]
	0x033C5BBC LDP X22, X21, [X31 + 0x10]
	0x033C5BC0 MOV X1, X31
	0x033C5BC4 MOV X2, X31
	0x033C5BC8 LDR X30, [X31], #0x30
	0x033C5BCC B 0x3395194
	0x033C5BD0 MOVZ W0, 0x1
	0x033C5BD4 B 0x33C5B64
	0x033C5BD8 BL 0x1C16F20
	0x033C5BDC STR X30, [X31 - 0x20]!
	0x033C5BE0 STP X20, X19, [X31 + 0x10]
	0x033C5BE4 LDR X8, [X0]
	0x033C5BE8 MOV X19, X0
	0x033C5BEC LDP X9, X1, [X8 + 0x1B8]
	0x033C5BF0 BLR X9
	0x033C5BF4 MOV X1, X31
	0x033C5BF8 MOV X2, X31
	0x033C5BFC MOV X20, X0
	0x033C5C00 BL 0x32CE528
	0x033C5C04 TBZ X0, 0x0, 0x33C5C18
	0x033C5C08 CBZ X20, 0x33C5C50
	0x033C5C0C LDR X8, [X20]
	0x033C5C10 MOV X0, X20
	0x033C5C14 B 0x33C5C28
	0x033C5C18 MOV X0, X19
	0x033C5C1C BL 0x1C25764
	0x033C5C20 CBZ X0, 0x33C5C50
	0x033C5C24 LDR X8, [X0]
	0x033C5C28 LDP X9, X1, [X8 + 0x158]
	0x033C5C2C BLR X9
	0x033C5C30 MOV W20, W0
	0x033C5C34 LDR X0, [X19 + 0x20]
	0x033C5C38 MOV X1, X31
	0x033C5C3C BL 0x32C5C48
	0x033C5C40 EOR W0, W0, W20, 0x0
	0x033C5C44 LDP X20, X19, [X31 + 0x10]
	0x033C5C48 LDR X30, [X31], #0x20
	0x033C5C4C RET
	0x033C5C50 BL 0x1C16F20
	0x033C5C54 STR X30, [X31 - 0x20]!
	0x033C5C58 STP X20, X19, [X31 + 0x10]
	0x033C5C5C ADRP X20, 0x1018000
	0x033C5C60 LDRB W8, [X20 + 0x26D]
	0x033C5C64 MOV X19, X0
	0x033C5C68 TBNZ X8, 0x0, 0x33C5C80
	0x033C5C6C ADRP X0, 0xD5F000
	0x033C5C70 LDR X0, [X0 + 0x278]
	0x033C5C74 BL 0x1C16CF4
	0x033C5C78 MOVZ W8, 0x1
	0x033C5C7C STRB W8, [X20 + 0x26D]
	0x033C5C80 LDR X0, [X19 + 0x58]
	0x033C5C84 MOV X1, X31
	0x033C5C88 MOV X2, X31
	0x033C5C8C BL 0x32CE528
	0x033C5C90 TBNZ X0, 0x0, 0x33C5D18
	0x033C5C94 LDR X0, [X19 + 0x28]
	0x033C5C98 CBZ X0, 0x33C5D18
	0x033C5C9C LDRB W8, [X19 + 0x70]
	0x033C5CA0 CBZ W8, 0x33C5CB4
	0x033C5CA4 MOV X0, X19
	0x033C5CA8 BL 0x1C87838
	0x033C5CAC STR X0, [X19 + 0x58]
	0x033C5CB0 B 0x33C5D18
	0x033C5CB4 MOV X1, X31
	0x033C5CB8 BL 0x32DAEE8
	0x033C5CBC CBZ X0, 0x33C5CAC
	0x033C5CC0 ADRP X8, 0xD5F000
	0x033C5CC4 LDR X8, [X8 + 0x278]
	0x033C5CC8 LDR X9, [X0]
	0x033C5CCC LDR X1, [X8]
	0x033C5CD0 LDRB W10, [X9 + 0x130]
	0x033C5CD4 LDRB W8, [X1 + 0x130]
	0x033C5CD8 CMP W10, W8
	0x033C5CDC B.CC 0x33C5D28
	0x033C5CE0 LDR X10, [X9 + 0xC8]
	0x033C5CE4 SUB X9, X8, 0x1
	0x033C5CE8 LDR X10, [X10, X9, LSL #3]
	0x033C5CEC CMP X10, X1
	0x033C5CF0 B.NE 0x33C5D28
	0x033C5CF4 STR X0, [X19 + 0x58]
	0x033C5CF8 LDR X10, [X0]
	0x033C5CFC LDRB W11, [X10 + 0x130]
	0x033C5D00 CMP W11, W8
	0x033C5D04 B.CC 0x33C5D28
	0x033C5D08 LDR X8, [X10 + 0xC8]
	0x033C5D0C LDR X8, [X8, X9, LSL #3]
	0x033C5D10 CMP X8, X1
	0x033C5D14 B.NE 0x33C5D28
	0x033C5D18 LDR X0, [X19 + 0x58]
	0x033C5D1C LDP X20, X19, [X31 + 0x10]
	0x033C5D20 LDR X30, [X31], #0x20
	0x033C5D24 RET
	0x033C5D28 BL 0x1C171E0
	0x033C5D2C CMP X0, X1
	0x033C5D30 CSET W0, NE
	0x033C5D34 RET
	0x033C5D38 B 0x33C5D3C
	0x033C5D3C STR X30, [X31 - 0x60]!
	0x033C5D40 STP X28, X27, [X31 + 0x10]
	0x033C5D44 STP X26, X25, [X31 + 0x20]
	0x033C5D48 STP X24, X23, [X31 + 0x30]
	0x033C5D4C STP X22, X21, [X31 + 0x40]
	0x033C5D50 STP X20, X19, [X31 + 0x50]
	0x033C5D54 ADRP X21, 0x1018000
	0x033C5D58 LDRB W8, [X21 + 0x272]
	0x033C5D5C MOV X19, X1
	0x033C5D60 MOV X20, X0
	0x033C5D64 TBNZ X8, 0x0, 0x33C5DB8
	0x033C5D68 ADRP X0, 0xD67000
	0x033C5D6C LDR X0, [X0 + 0x848]
	0x033C5D70 BL 0x1C16CF4
	0x033C5D74 ADRP X0, 0xD5F000
	0x033C5D78 LDR X0, [X0 + 0xB78]
	0x033C5D7C BL 0x1C16CF4
	0x033C5D80 ADRP X0, 0xD2E000
	0x033C5D84 LDR X0, [X0 + 0x6C0]
	0x033C5D88 BL 0x1C16CF4
	0x033C5D8C ADRP X0, 0xD67000
	0x033C5D90 LDR X0, [X0 + 0x850]
	0x033C5D94 BL 0x1C16CF4
	0x033C5D98 ADRP X0, 0xD67000
	0x033C5D9C LDR X0, [X0 + 0x480]
	0x033C5DA0 BL 0x1C16CF4
	0x033C5DA4 ADRP X0, 0xD2F000
	0x033C5DA8 LDR X0, [X0 + 0x6E8]
	0x033C5DAC BL 0x1C16CF4
	0x033C5DB0 MOVZ W8, 0x1
	0x033C5DB4 STRB W8, [X21 + 0x272]
	0x033C5DB8 CBZ X20, 0x33C5F7C
	0x033C5DBC LDR X8, [X20]
	0x033C5DC0 MOV X0, X20
	0x033C5DC4 LDP X9, X1, [X8 + 0x1D8]
	0x033C5DC8 BLR X9
	0x033C5DCC STR W31, [X31 + 0xC]
	0x033C5DD0 CBZ X0, 0x33C5F7C
	0x033C5DD4 LDR W9, [X0 + 0x18]
	0x033C5DD8 MOV X20, X0
	0x033C5DDC CMP W9, 0x1
	0x033C5DE0 B.LT 0x33C5F1C
	0x033C5DE4 ADRP X24, 0xD67000
	0x033C5DE8 ADRP X25, 0xD67000
	0x033C5DEC ADRP X26, 0xD2F000
	0x033C5DF0 ADRP X27, 0xD67000
	0x033C5DF4 LDR X24, [X24 + 0x848]
	0x033C5DF8 LDR X25, [X25 + 0x850]
	0x033C5DFC LDR X26, [X26 + 0x6E8]
	0x033C5E00 LDR X27, [X27 + 0x480]
	0x033C5E04 MOV W8, W31
	0x033C5E08 MOV X28, X31
	0x033C5E0C CMP W8, W9
	0x033C5E10 B.CS 0x33C5F80
	0x033C5E14 ADD X8, X20, W8, 0x3, SXTW
	0x033C5E18 LDR X21, [X8 + 0x20]
	0x033C5E1C CBZ X21, 0x33C5F7C
	0x033C5E20 LDR X8, [X21 + 0x20]
	0x033C5E24 CBZ X8, 0x33C5E50
	0x033C5E28 ADD X0, X31, 0xC
	0x033C5E2C MOV X1, X31
	0x033C5E30 BL 0x337B6E0
	0x033C5E34 LDR X8, [X27]
	0x033C5E38 MOV X1, X0
	0x033C5E3C MOV X2, X31
	0x033C5E40 MOV X0, X8
	0x033C5E44 BL 0x321B938
	0x033C5E48 MOV X23, X0
	0x033C5E4C B 0x33C5E54
	0x033C5E50 MOV X23, X31
	0x033C5E54 LDR X0, [X24]
	0x033C5E58 BL 0x1C16F10
	0x033C5E5C MOV X1, X21
	0x033C5E60 MOV X2, X23
	0x033C5E64 MOV X22, X0
	0x033C5E68 BL 0x33C65D4
	0x033C5E6C CBZ X28, 0x33C5E84
	0x033C5E70 STR X22, [X28 + 0x40]
	0x033C5E74 LDR X2, [X21 + 0x20]
	0x033C5E78 CBZ X2, 0x33C5EB4
	0x033C5E7C CBNZ X19, 0x33C5EA4
	0x033C5E80 B 0x33C5F7C
	0x033C5E84 CBZ X19, 0x33C5F7C
	0x033C5E88 LDR X1, [X25]
	0x033C5E8C MOV X0, X19
	0x033C5E90 MOV X2, X22
	0x033C5E94 MOV X3, X31
	0x033C5E98 BL 0x32A8BF0
	0x033C5E9C LDR X2, [X21 + 0x20]
	0x033C5EA0 CBZ X2, 0x33C5EB4
	0x033C5EA4 MOV X0, X19
	0x033C5EA8 MOV X1, X23
	0x033C5EAC MOV X3, X31
	0x033C5EB0 BL 0x32A8BF0
	0x033C5EB4 ADD X0, X31, 0xC
	0x033C5EB8 MOV X1, X31
	0x033C5EBC BL 0x337B6E0
	0x033C5EC0 LDR X8, [X26]
	0x033C5EC4 MOV X1, X0
	0x033C5EC8 MOV X2, X31
	0x033C5ECC MOV X0, X8
	0x033C5ED0 BL 0x321B938
	0x033C5ED4 LDR X8, [X21]
	0x033C5ED8 MOV X23, X0
	0x033C5EDC MOV X0, X21
	0x033C5EE0 LDP X9, X1, [X8 + 0x1B8]
	0x033C5EE4 BLR X9
	0x033C5EE8 CBZ X19, 0x33C5F7C
	0x033C5EEC MOV X2, X0
	0x033C5EF0 MOV X0, X19
	0x033C5EF4 MOV X1, X23
	0x033C5EF8 MOV X3, X31
	0x033C5EFC BL 0x32A8BF0
	0x033C5F00 LDR W8, [X31 + 0xC]
	0x033C5F04 MOV X28, X22
	0x033C5F08 ADD W8, W8, 0x1
	0x033C5F0C STR W8, [X31 + 0xC]
	0x033C5F10 LDR W9, [X20 + 0x18]
	0x033C5F14 CMP W8, W9
	0x033C5F18 B.LT 0x33C5E0C
	0x033C5F1C ADRP X8, 0xD2E000
	0x033C5F20 LDR X8, [X8 + 0x6C0]
	0x033C5F24 LDR X0, [X8]
	0x033C5F28 ADRP X8, 0xD5F000
	0x033C5F2C LDR X8, [X8 + 0xB78]
	0x033C5F30 LDR W9, [X0 + 0xE0]
	0x033C5F34 LDR X20, [X8]
	0x033C5F38 CBNZ W9, 0x33C5F40
	0x033C5F3C BL 0x1C16DFC
	0x033C5F40 MOV X0, X20
	0x033C5F44 MOV X1, X31
	0x033C5F48 BL 0x338C698
	0x033C5F4C CBZ X19, 0x33C5F7C
	0x033C5F50 MOV X1, X0
	0x033C5F54 MOV X0, X19
	0x033C5F58 MOV X2, X31
	0x033C5F5C BL 0x32A8510
	0x033C5F60 LDP X20, X19, [X31 + 0x50]
	0x033C5F64 LDP X22, X21, [X31 + 0x40]
	0x033C5F68 LDP X24, X23, [X31 + 0x30]
	0x033C5F6C LDP X26, X25, [X31 + 0x20]
	0x033C5F70 LDP X28, X27, [X31 + 0x10]
	0x033C5F74 LDR X30, [X31], #0x60
	0x033C5F78 RET
	0x033C5F7C BL 0x1C16F20
	0x033C5F80 BL 0x1C16F28
	0x033C5F84 STP X30, X21, [X31 - 0x20]!
	0x033C5F88 STP X20, X19, [X31 + 0x10]
	0x033C5F8C ADRP X20, 0x1018000
	0x033C5F90 ADRP X21, 0xD67000
	0x033C5F94 LDRB W8, [X20 + 0x26E]
	0x033C5F98 LDR X21, [X21 + 0x858]
	0x033C5F9C MOV X19, X0
	0x033C5FA0 TBNZ X8, 0x0, 0x33C5FB8
	0x033C5FA4 ADRP X0, 0xD67000
	0x033C5FA8 LDR X0, [X0 + 0x858]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X20, 0x1019000
	015 Move X23, 0xD2F000
	016 Move W8, [X20+615]
	017 Move X23, [X23+1728]
	018 Move W26, W4
	019 Move W28, W3
	020 Move X19, X2
	021 Move X21, X1
	022 Move X22, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {41}
	027 Move X0, 0xD68000
	028 Move X0, [X0+2000]
	029 Call 0x1C17CF4
	030 Move X0, 0xD61000
	031 Move X0, [X0+1800]
	032 Call 0x1C17CF4
	033 Move X0, 0xD2F000
	034 Move X0, [X0+1728]
	035 Call 0x1C17CF4
	036 Move X0, 0xD68000
	037 Move X0, [X0+2008]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X20+615], W8
	041 Move X0, [X23]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X0, X22
	047 Move X1, X31
	048 Move X2, X31
	049 Call Type.op_Equality, X0, X1
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {546}
	054 Move X0, X19
	055 Move X1, X31
	056 Move X2, X31
	057 Call MethodInfo.op_Equality, X0, X1
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfEqual {553}
	062 Move X8, 0xD61000
	063 Move X0, [X23]
	064 Move X8, [X8+1800]
	065 Move W9, [X0+224]
	066 Move X23, [X8]
	067 Compare W9, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move X0, X23
	071 Move X1, X31
	072 Call Type.GetTypeFromHandle, X0
	073 Compare X22, 0
	074 JumpIfEqual {545}
	075 Move X8, [X22]
	076 Move X1, X0
	077 Move X0, X22
	078 Move X9, [X8+664]
	079 Move X2, [X8+672]
	080 NotImplemented "Instruction BLR not yet implemented."
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfNotEqual {565}
	085 Move X8, 0xD68000
	086 Move X8, [X8+2008]
	087 Move X0, X22
	088 Move X2, X31
	089 Move X1, [X8]
	090 Call Type.GetMethod, X0, X1
	091 Compare X0, 0
	092 JumpIfEqual {545}
	093 Move X8, [X0]
	094 Move X23, X0
	095 Move X9, [X8+952]
	096 Move X1, [X8+960]
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Compare X19, 0
	099 JumpIfEqual {545}
	100 Move X8, [X19]
	101 Move X24, X0
	102 Move X0, X19
	103 Move X9, [X8+952]
	104 Move X1, [X8+960]
	105 NotImplemented "Instruction BLR not yet implemented."
	106 Move X1, X0
	107 Move X0, X24
	108 Call Delegate.return_type_match, X0, X1
	109 Move TEMP, X0
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfNotEqual {140}
	113 Move X8, [X23]
	114 Move X0, X23
	115 Move X9, [X8+856]
	116 Move X1, [X8+864]
	117 NotImplemented "Instruction BLR not yet implemented."
	118 Move X8, [X19]
	119 Move X23, X0
	120 Move X0, X19
	121 Move X9, [X8+856]
	122 Move X1, [X8+864]
	123 NotImplemented "Instruction BLR not yet implemented."
	124 Move X25, X0
	125 Move X0, X19
	126 Move X1, X31
	127 Call MethodBase.get_IsStatic, X0
	128 Compare X25, 0
	129 JumpIfEqual {545}
	130 Compare X23, 0
	131 JumpIfEqual {545}
	132 Move W8, [X25+24]
	133 Compare X21, 0
	134 JumpIfEqual {151}
	135 Move W9, [X23+24]
	136 Move TEMP, X0
	137 And TEMP, TEMP, 1
	138 Compare TEMP, 1
	139 JumpIfEqual {157}
	140 Move TEMP, X28
	141 And TEMP, TEMP, 1
	142 Compare TEMP, 1
	143 JumpIfNotEqual {460}
	144 Move X0, 0xD37000
	145 Move X0, [X0+1400]
	146 Call 0x1C17D08
	147 Call 0x1C17F10
	148 Move X19, X0
	149 Move X0, 0xD68000
	150 Move X0, [X0+2016]
	151 Move TEMP, X0
	152 And TEMP, TEMP, 1
	153 Compare TEMP, 1
	154 JumpIfNotEqual {159}
	155 Move W9, [X23+24]
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Add W9, W9, 1
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Move W9, [X23+24]
	160 Add W10, W8, 1
	161 NotImplemented "Instruction CMP not yet implemented."
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Move TEMP, X28
	164 And TEMP, TEMP, 1
	165 Compare TEMP, 1
	166 JumpIfNotEqual {460}
	167 Move X0, 0xD62000
	168 Move X0, [X0+1360]
	169 Call 0x1C17D08
	170 Call 0x1C17F10
	171 Move X19, X0
	172 Move X0, 0xD68000
	173 Move X0, [X0+2024]
	174 Call 0x1C17D08
	175 Move X1, X0
	176 Move X0, X19
	177 Move X2, X31
	178 Call TargetParameterCountException..ctor, X0, X1
	179 Move X8, 0xD68000
	180 Move X8, [X8+2000]
	181 Move X0, [X8]
	182 Call 0x1C17F10
	183 Move X24, X0
	184 Move X0, X19
	185 Move X1, X31
	186 Call MethodBase.get_IsStatic, X0
	187 Move W27, W0
	188 Compare X21, 0
	189 JumpIfEqual {254}
	190 Move X0, X21
	191 Call 0x1C26764
	192 Move X26, X0
	193 Move [X31+12], W28
	194 Move TEMP, X27
	195 And TEMP, TEMP, 1
	196 Compare TEMP, 1
	197 JumpIfNotEqual {280}
	198 Move W8, [X25+24]
	199 Compare W8, 0
	200 JumpIfEqual {449}
	201 Move X0, [X25+32]
	202 Compare X0, 0
	203 JumpIfEqual {545}
	204 Move X8, [X0]
	205 Move X9, [X8+472]
	206 Move X1, [X8+480]
	207 NotImplemented "Instruction BLR not yet implemented."
	208 Move X1, X0
	209 Move X0, X26
	210 Call Delegate.arg_type_match, X0, X1
	211 Move W8, [X25+24]
	212 Move W26, W0
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Move X28, X31
	215 Add X29, X25, 40
	216 Move W8, [X23+24]
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Add X8, X23, W28
	219 Move X0, [X8+32]
	220 Compare X0, 0
	221 JumpIfEqual {545}
	222 Move X8, [X0]
	223 Add X20, X28, 1
	224 Move X9, [X8+472]
	225 Move X1, [X8+480]
	226 NotImplemented "Instruction BLR not yet implemented."
	227 Move W8, [X25+24]
	228 NotImplemented "Instruction CMP not yet implemented."
	229 Move X27, X0
	230 Move X0, [X29]
	231 Compare X0, 0
	232 JumpIfEqual {545}
	233 Move X8, [X0]
	234 Move X9, [X8+472]
	235 Move X1, [X8+480]
	236 NotImplemented "Instruction BLR not yet implemented."
	237 Move X1, X0
	238 Move X0, X27
	239 Call Delegate.arg_type_match, X0, X1
	240 Move W8, [X25+24]
	241 Add X28, X28, 1
	242 Add W9, W28, 1
	243 And W26, W26, W0
	244 NotImplemented "Instruction CMP not yet implemented."
	245 Compare X24, 0
	246 JumpIfEqual {545}
	247 Move W28, [X31+12]
	248 Move W8, 1
	249 Move [X24+32], W8
	250 Move TEMP, X26
	251 And TEMP, TEMP, 1
	252 Compare TEMP, 1
	253 JumpIfNotEqual {456}
	254 Move TEMP, X27
	255 And TEMP, TEMP, 1
	256 Compare TEMP, 1
	257 JumpIfNotEqual {322}
	258 Move X8, [X23+24]
	259 Move W10, [X25+24]
	260 Add W9, W8, 1
	261 NotImplemented "Instruction CMP not yet implemented."
	262 Compare W9, 0
	263 JumpIfEqual {449}
	264 Move X0, [X25+32]
	265 Compare X0, 0
	266 JumpIfEqual {545}
	267 Move X8, [X0]
	268 Move X9, [X8+472]
	269 Move X1, [X8+480]
	270 NotImplemented "Instruction BLR not yet implemented."
	271 Compare X0, 0
	272 JumpIfEqual {545}
	273 Move X1, X31
	274 Call Type.get_IsValueType, X0
	275 Move TEMP, X0
	276 And TEMP, TEMP, 1
	277 Compare TEMP, 1
	278 JumpIfNotEqual {475}
	279 Move W9, W31
	280 Move X8, [X19]
	281 Move X0, X19
	282 Move [X31], X24
	283 Move X9, [X8+440]
	284 Move X1, [X8+448]
	285 NotImplemented "Instruction BLR not yet implemented."
	286 Move X1, X0
	287 Move W2, 1
	288 Move X0, X26
	289 Call Delegate.arg_type_match_this, X0, X1, X2
	290 Move W8, [X25+24]
	291 Move W26, W0
	292 NotImplemented "Instruction CMP not yet implemented."
	293 Move X28, X31
	294 Add X29, X25, 32
	295 Add X24, X23, 32
	296 Move W8, [X23+24]
	297 NotImplemented "Instruction CMP not yet implemented."
	298 Move X0, [X24]
	299 Compare X0, 0
	300 JumpIfEqual {545}
	301 Move X8, [X0]
	302 Move X9, [X8+472]
	303 Move X1, [X8+480]
	304 NotImplemented "Instruction BLR not yet implemented."
	305 Move W8, [X25+24]
	306 NotImplemented "Instruction CMP not yet implemented."
	307 Move X27, X0
	308 Move X0, [X29]
	309 Compare X0, 0
	310 JumpIfEqual {545}
	311 Move X8, [X0]
	312 Move X9, [X8+472]
	313 Move X1, [X8+480]
	314 NotImplemented "Instruction BLR not yet implemented."
	315 Move X1, X0
	316 Move X0, X27
	317 Call Delegate.arg_type_match, X0, X1
	318 Move W8, [X25+24]
	319 Add X28, X28, 1
	320 And W26, W26, W0
	321 NotImplemented "Instruction CMP not yet implemented."
	322 Move W9, [X25+24]
	323 Move X8, [X23+24]
	324 Move [X31+12], W28
	325 Move [X31], X24
	326 Add W10, W9, 1
	327 NotImplemented "Instruction CMP not yet implemented."
	328 Compare W10, 0
	329 JumpIfEqual {449}
	330 Move X0, [X23+32]
	331 Compare X0, 0
	332 JumpIfEqual {545}
	333 Move X8, [X0]
	334 Move X9, [X8+472]
	335 Move X1, [X8+480]
	336 NotImplemented "Instruction BLR not yet implemented."
	337 Move X8, [X19]
	338 Move X26, X0
	339 Move X0, X19
	340 Move X9, [X8+440]
	341 Move X1, [X8+448]
	342 NotImplemented "Instruction BLR not yet implemented."
	343 Move X1, X0
	344 Move X0, X26
	345 Move W2, W31
	346 Call Delegate.arg_type_match_this, X0, X1, X2
	347 Move W8, [X25+24]
	348 Move W26, W0
	349 NotImplemented "Instruction CMP not yet implemented."
	350 Move X29, X31
	351 Add X24, X25, 32
	352 Add X28, X23, 40
	353 Move W8, [X23+24]
	354 Add X20, X29, 1
	355 NotImplemented "Instruction CMP not yet implemented."
	356 Move X0, [X28]
	357 Compare X0, 0
	358 JumpIfEqual {545}
	359 Move X8, [X0]
	360 Move X9, [X8+472]
	361 Move X1, [X8+480]
	362 NotImplemented "Instruction BLR not yet implemented."
	363 Move W8, [X25+24]
	364 NotImplemented "Instruction CMP not yet implemented."
	365 Move X27, X0
	366 Move X0, [X24]
	367 Compare X0, 0
	368 JumpIfEqual {545}
	369 Move X8, [X0]
	370 Move X9, [X8+472]
	371 Move X1, [X8+480]
	372 NotImplemented "Instruction BLR not yet implemented."
	373 Move X1, X0
	374 Move X0, X27
	375 Call Delegate.arg_type_match, X0, X1
	376 NotImplemented "Instruction LDRSW not yet implemented."
	377 And W26, W26, W0
	378 Move X29, X20
	379 NotImplemented "Instruction CMP not yet implemented."
	380 NotImplemented "Instruction CMP not yet implemented."
	381 Move [X31], X24
	382 Move [X31+12], W28
	383 Compare W8, 0
	384 JumpIfEqual {449}
	385 Move X28, X31
	386 Add X29, X25, 32
	387 Add X24, X23, 32
	388 Move W26, 1
	389 Move X0, [X24]
	390 Compare X0, 0
	391 JumpIfEqual {545}
	392 Move X8, [X0]
	393 Move X9, [X8+472]
	394 Move X1, [X8+480]
	395 NotImplemented "Instruction BLR not yet implemented."
	396 Move W8, [X25+24]
	397 NotImplemented "Instruction CMP not yet implemented."
	398 Move X27, X0
	399 Move X0, [X29]
	400 Compare X0, 0
	401 JumpIfEqual {545}
	402 Move X8, [X0]
	403 Move X9, [X8+472]
	404 Move X1, [X8+480]
	405 NotImplemented "Instruction BLR not yet implemented."
	406 Move X1, X0
	407 Move X0, X27
	408 Call Delegate.arg_type_match, X0, X1
	409 Move W8, [X25+24]
	410 Add W9, W28, 1
	411 And W26, W26, W0
	412 NotImplemented "Instruction CMP not yet implemented."
	413 Move W8, [X23+24]
	414 Add X28, X28, 1
	415 NotImplemented "Instruction CMP not yet implemented."
	416 NotImplemented "Instruction CMP not yet implemented."
	417 Compare W8, 0
	418 JumpIfEqual {449}
	419 Move X28, X31
	420 Add X29, X23, 32
	421 Add X24, X25, 32
	422 Move X0, [X29]
	423 Compare X0, 0
	424 JumpIfEqual {545}
	425 Move X8, [X0]
	426 Move X9, [X8+472]
	427 Move X1, [X8+480]
	428 NotImplemented "Instruction BLR not yet implemented."
	429 Move W8, [X25+24]
	430 NotImplemented "Instruction CMP not yet implemented."
	431 Move X27, X0
	432 Move X0, [X24]
	433 Compare X0, 0
	434 JumpIfEqual {545}
	435 Move X8, [X0]
	436 Move X9, [X8+472]
	437 Move X1, [X8+480]
	438 NotImplemented "Instruction BLR not yet implemented."
	439 Move X1, X0
	440 Move X0, X27
	441 Call Delegate.arg_type_match, X0, X1
	442 Move W8, [X25+24]
	443 Add W9, W28, 1
	444 And W26, W26, W0
	445 NotImplemented "Instruction CMP not yet implemented."
	446 Move W8, [X23+24]
	447 Add X28, X28, 1
	448 NotImplemented "Instruction CMP not yet implemented."
	449 Call 0x1C17F28
	450 Move W28, [X31+12]
	451 Move X24, [X31]
	452 Move TEMP, X26
	453 And TEMP, TEMP, 1
	454 Compare TEMP, 1
	455 JumpIfEqual {532}
	456 Move TEMP, X28
	457 And TEMP, TEMP, 1
	458 Compare TEMP, 1
	459 JumpIfEqual {583}
	460 Move X0, X31
	461 Move X20, [X31+96]
	462 Move X19, [X31+104]
	463 Move X22, [X31+80]
	464 Move X21, [X31+88]
	465 Move X24, [X31+64]
	466 Move X23, [X31+72]
	467 Move X26, [X31+48]
	468 Move X25, [X31+56]
	469 Move X28, [X31+32]
	470 Move X27, [X31+40]
	471 Move X29, [X31+16]
	472 Move X30, [X31+24]
	473 Add X31, X31, 112
	474 Return X0
	475 Move W8, [X25+24]
	476 Compare W8, 0
	477 JumpIfEqual {449}
	478 Move X0, [X25+32]
	479 Compare X0, 0
	480 JumpIfEqual {545}
	481 Move X8, [X0]
	482 Move X9, [X8+472]
	483 Move X1, [X8+480]
	484 NotImplemented "Instruction BLR not yet implemented."
	485 Compare X0, 0
	486 JumpIfEqual {545}
	487 Move X1, X31
	488 Call Type.get_IsByRef, X0
	489 NotImplemented "Instruction ORN not yet implemented."
	490 And W9, W8, 1
	491 Move W8, [X23+24]
	492 Move W20, W28
	493 And W27, W26, W9
	494 NotImplemented "Instruction CMP not yet implemented."
	495 Move X28, X31
	496 Add X29, X23, 32
	497 NotImplemented "Instruction CMP not yet implemented."
	498 Move X0, [X29]
	499 Compare X0, 0
	500 JumpIfEqual {545}
	501 Move X8, [X0]
	502 Move X9, [X8+472]
	503 Move X1, [X8+480]
	504 NotImplemented "Instruction BLR not yet implemented."
	505 Move W9, [X25+24]
	506 Add X8, X28, 1
	507 NotImplemented "Instruction CMP not yet implemented."
	508 Add X8, X25, W8
	509 Move X26, X0
	510 Move X0, [X8+32]
	511 Compare X0, 0
	512 JumpIfEqual {545}
	513 Move X8, [X0]
	514 Move X9, [X8+472]
	515 Move X1, [X8+480]
	516 NotImplemented "Instruction BLR not yet implemented."
	517 Move X1, X0
	518 Move X0, X26
	519 Call Delegate.arg_type_match, X0, X1
	520 Move W8, [X23+24]
	521 And W9, W0, W27
	522 Add X28, X28, 1
	523 And W27, W9, 1
	524 NotImplemented "Instruction CMP not yet implemented."
	525 Compare X24, 0
	526 JumpIfEqual {545}
	527 Move W8, 1
	528 Move W28, W20
	529 Move [X24+32], W8
	530 Compare W27, 0
	531 JumpIfEqual {456}
	532 And W3, W28, 1
	533 Move X0, X22
	534 Move X1, X21
	535 Move X2, X19
	536 Call 0x1C887B4
	537 Compare X0, 0
	538 JumpIfEqual {543}
	539 Move [X0+96], X19
	540 Compare X24, 0
	541 JumpIfEqual {461}
	542 Move [X0+104], X24
	543 Compare X24, 0
	544 JumpIfEqual {461}
	545 Call 0x1C17F20
	546 Move X0, 0xD34000
	547 Move X0, [X0+1320]
	548 Call 0x1C17D08
	549 Call 0x1C17F10
	550 Move X19, X0
	551 Move X0, 0xD37000
	552 Move X0, [X0+1512]
	553 Move X0, 0xD34000
	554 Move X0, [X0+1320]
	555 Call 0x1C17D08
	556 Call 0x1C17F10
	557 Move X19, X0
	558 Move X0, 0xD30000
	559 Move X0, [X0+1768]
	560 Call 0x1C17D08
	561 Move X1, X0
	562 Move X0, X19
	563 Move X2, X31
	564 Call ArgumentNullException..ctor, X0, X1
	565 Move X0, 0xD37000
	566 Move X0, [X0+1400]
	567 Call 0x1C17D08
	568 Call 0x1C17F10
	569 Move X19, X0
	570 Move X0, 0xD68000
	571 Move X0, [X0+2032]
	572 Call 0x1C17D08
	573 Move X1, X0
	574 Move X0, X19
	575 Move X2, X31
	576 Call ArgumentException..ctor, X0, X1
	577 Move X0, 0xD68000
	578 Move X0, [X0+2040]
	579 Call 0x1C17D08
	580 Move X1, X0
	581 Move X0, X19
	582 Call 0x1C17DEC
	583 Move X0, 0xD37000
	584 Move X0, [X0+1400]
	585 Call 0x1C17D08
	586 Call 0x1C17F10
	587 Move X19, X0
	588 Move X0, 0xD68000
	589 Move X0, [X0+2048]

Method: System.Delegate CreateDelegate(System.Type type, System.Object firstArgument, System.Reflection.MethodInfo method)

Disassembly:
	0x033C5FAC BL 0x1C16CF4
	0x033C5FB0 MOVZ W8, 0x1
	0x033C5FB4 STRB W8, [X20 + 0x26E]

ISIL:
	001 Move W3, 1
	002 Move W4, 1
	003 Call Delegate.CreateDelegate, X0, X1, X2, X3, X4
	004 Return X0

Method: System.Delegate CreateDelegate(System.Type type, System.Reflection.MethodInfo method, System.Boolean throwOnBindFailure)

Disassembly:
	0x033C5FB8 LDR X0, [X21]
	0x033C5FBC MOVZ W1, 0x1
	0x033C5FC0 BL 0x1C16D6C
	0x033C5FC4 CBZ X0, 0x33C6000
	0x033C5FC8 MOV X20, X0
	0x033C5FCC CBZ X19, 0x33C5FE4

ISIL:
	001 Move X8, X1
	002 And W3, W2, 1
	003 Move X1, X31
	004 Move X2, X8
	005 Move W4, W31
	006 Call Delegate.CreateDelegate, X0, X1, X2, X3, X4
	007 Return X0

Method: System.Delegate CreateDelegate(System.Type type, System.Reflection.MethodInfo method)

Disassembly:
	0x033C5FD0 LDR X8, [X20]
	0x033C5FD4 MOV X0, X19
	0x033C5FD8 LDR X1, [X8 + 0x40]
	0x033C5FDC BL 0x1C16E00
	0x033C5FE0 CBZ X0, 0x33C6008

ISIL:
	001 Move X2, X1
	002 Move W3, 1
	003 Move X1, X31
	004 Move W4, W31
	005 Call Delegate.CreateDelegate, X0, X1, X2, X3, X4
	006 Return X0

Method: System.Delegate CreateDelegate(System.Type type, System.Object target, System.String method)

Disassembly:
	0x033C5FE4 LDR W8, [X20 + 0x18]
	0x033C5FE8 CBZ W8, 0x33C6004
	0x033C5FEC STR X19, [X20 + 0x20]

ISIL:
	001 Move W4, 1
	002 Move W3, W31
	003 Call Delegate.CreateDelegate, X0, X1, X2, X3, X4
	004 Return X0

Method: System.Reflection.MethodInfo GetCandidateMethod(System.Type type, System.Type target, System.String method, System.Reflection.BindingFlags bflags, System.Boolean ignoreCase, System.Boolean throwOnBindFailure)

Disassembly:
	0x033C5FFC RET
	0x033C6000 BL 0x1C16F20
	0x033C6004 BL 0x1C16F28
	0x033C6008 BL 0x1C16F44
	0x033C600C MOV X1, X31
	0x033C6010 BL 0x1C16DEC
	0x033C6014 STP X30, X21, [X31 - 0x20]!
	0x033C6018 STP X20, X19, [X31 + 0x10]
	0x033C601C CBZ X0, 0x33C6068
	0x033C6020 LDR X8, [X0 + 0x18]
	0x033C6024 MOV X19, X0
	0x033C6028 CMP W8, 0x1
	0x033C602C B.LT 0x33C6064
	0x033C6030 MOV X20, X31
	0x033C6034 MOV X0, X31
	0x033C6038 AND X8, X8, 0x0
	0x033C603C ADD X21, X19, 0x20
	0x033C6040 CMP X20, W8, UXTW
	0x033C6044 B.CS 0x33C6074
	0x033C6048 LDR X1, [X21, X20, LSL #3]
	0x033C604C BL 0x33C0DE4
	0x033C6050 LDR W8, [X19 + 0x18]
	0x033C6054 ADD X20, X20, 0x1
	0x033C6058 CMP X20, W8, SXTW
	0x033C605C B.LT 0x33C6040
	0x033C6060 B 0x33C6068
	0x033C6064 MOV X0, X31
	0x033C6068 LDP X20, X19, [X31 + 0x10]
	0x033C606C LDP X30, X21, [X31], #0x20
	0x033C6070 RET
	0x033C6074 BL 0x1C16F28
	0x033C6078 STR X30, [X31 - 0x20]!
	0x033C607C STP X20, X19, [X31 + 0x10]
	0x033C6080 ADRP X0, 0xD2F000
	0x033C6084 LDR X0, [X0 + 0x278]
	0x033C6088 BL 0x1C16D08
	0x033C608C LDR X8, [X0 + 0xB8]
	0x033C6090 ADRP X0, 0xD66000
	0x033C6094 LDR X19, [X8]
	0x033C6098 LDR X0, [X0 + 0x860]
	0x033C609C BL 0x1C16D08
	0x033C60A0 BL 0x1C16F10
	0x033C60A4 MOV X1, X19
	0x033C60A8 MOV X2, X31
	0x033C60AC MOV X20, X0
	0x033C60B0 BL 0x3380254
	0x033C60B4 ADRP X0, 0xD66000
	0x033C60B8 LDR X0, [X0 + 0x868]
	0x033C60BC BL 0x1C16D08
	0x033C60C0 MOV X1, X0
	0x033C60C4 MOV X0, X20
	0x033C60C8 BL 0x1C16DEC
	0x033C60CC STP X30, X19, [X31 - 0x10]!
	0x033C60D0 LDR X8, [X0]
	0x033C60D4 MOV X19, X0
	0x033C60D8 LDP X9, X2, [X8 + 0x138]
	0x033C60DC BLR X9
	0x033C60E0 ANDS W31, W0, 0x1
	0x033C60E4 CSEL X0, X31, X19, NE
	0x033C60E8 LDP X30, X19, [X31], #0x10
	0x033C60EC RET
	0x033C60F0 ORR X8, X0, X1, 0x0
	0x033C60F4 CMP X8, 0x0
	0x033C60F8 CSET W8, EQ
	0x033C60FC CBZ X0, 0x33C6110
	0x033C6100 CBZ X1, 0x33C6110
	0x033C6104 LDR X8, [X0]
	0x033C6108 LDP X3, X2, [X8 + 0x138]
	0x033C610C BR X3
	0x033C6110 MOV W0, W8
	0x033C6114 RET
	0x033C6118 ORR X8, X0, X1, 0x0
	0x033C611C CMP X8, 0x0
	0x033C6120 CSET W8, EQ
	0x033C6124 CBZ X0, 0x33C6144
	0x033C6128 CBZ X1, 0x33C6144
	0x033C612C STR X30, [X31 - 0x10]!
	0x033C6130 LDR X8, [X0]
	0x033C6134 LDP X9, X2, [X8 + 0x138]
	0x033C6138 BLR X9
	0x033C613C MOV W8, W0
	0x033C6140 LDR X30, [X31], #0x10
	0x033C6144 ORN W8, W31, W8, 0x0
	0x033C6148 AND W0, W8, 0x1
	0x033C614C RET
	0x033C6150 B 0x1C877F8
	0x033C6154 STR X30, [X31 - 0x50]!
	0x033C6158 STP X26, X25, [X31 + 0x10]
	0x033C615C STP X24, X23, [X31 + 0x20]
	0x033C6160 STP X22, X21, [X31 + 0x30]
	0x033C6164 STP X20, X19, [X31 + 0x40]
	0x033C6168 ADRP X23, 0x1017000
	0x033C616C ADRP X21, 0xD66000
	0x033C6170 ADRP X22, 0xD2D000
	0x033C6174 LDRB W8, [X23 + 0x271]
	0x033C6178 LDR X21, [X21 + 0x870]
	0x033C617C LDR X22, [X22 + 0x6C0]
	0x033C6180 MOV X20, X1
	0x033C6184 MOV X19, X0
	0x033C6188 TBNZ X8, 0x0, 0x33C61D0
	0x033C618C ADRP X0, 0xD66000
	0x033C6190 LDR X0, [X0 + 0x870]
	0x033C6194 BL 0x1C16CF4
	0x033C6198 ADRP X0, 0xD66000
	0x033C619C LDR X0, [X0 + 0x848]
	0x033C61A0 BL 0x1C16CF4
	0x033C61A4 ADRP X0, 0xD66000
	0x033C61A8 LDR X0, [X0 + 0x858]
	0x033C61AC BL 0x1C16CF4
	0x033C61B0 ADRP X0, 0xD2D000
	0x033C61B4 LDR X0, [X0 + 0x6C0]
	0x033C61B8 BL 0x1C16CF4
	0x033C61BC ADRP X0, 0xD66000
	0x033C61C0 LDR X0, [X0 + 0x850]
	0x033C61C4 BL 0x1C16CF4
	0x033C61C8 MOVZ W8, 0x1
	0x033C61CC STRB W8, [X23 + 0x271]
	0x033C61D0 LDR X0, [X22]
	0x033C61D4 LDR X21, [X21]
	0x033C61D8 LDR W8, [X0 + 0xE0]
	0x033C61DC CBNZ W8, 0x33C61E4
	0x033C61E0 BL 0x1C16DFC
	0x033C61E4 MOV X0, X21
	0x033C61E8 MOV X1, X31
	0x033C61EC BL 0x338C698
	0x033C61F0 CBZ X20, 0x33C6340
	0x033C61F4 ADRP X8, 0xD66000
	0x033C61F8 LDR X8, [X8 + 0x850]
	0x033C61FC MOV X2, X0
	0x033C6200 MOV X0, X20
	0x033C6204 MOV X3, X31
	0x033C6208 LDR X1, [X8]
	0x033C620C BL 0x32A9678
	0x033C6210 CBZ X0, 0x33C6280
	0x033C6214 ADRP X9, 0xD66000
	0x033C6218 LDR X9, [X9 + 0x848]
	0x033C621C LDR X8, [X0]
	0x033C6220 MOV X21, X0
	0x033C6224 LDR X1, [X9]
	0x033C6228 LDRB W10, [X8 + 0x130]
	0x033C622C LDRB W9, [X1 + 0x130]
	0x033C6230 CMP W10, W9
	0x033C6234 B.CC 0x33C6354
	0x033C6238 LDR X8, [X8 + 0xC8]
	0x033C623C ADD X8, X8, X9, 0x3, LSL
	0x033C6240 LDUR X8, [X8 - 0x8]
	0x033C6244 CMP X8, X1
	0x033C6248 B.NE 0x33C6354
	0x033C624C MOV W24, W31
	0x033C6250 MOV X8, X21
	0x033C6254 LDR X8, [X8 + 0x40]
	0x033C6258 ADD W24, W24, 0x1
	0x033C625C CBNZ X8, 0x33C6254
	0x033C6260 CMP W24, 0x1
	0x033C6264 B.NE 0x33C629C
	0x033C6268 CBZ X21, 0x33C6340
	0x033C626C MOV X0, X21
	0x033C6270 MOV X1, X20
	0x033C6274 MOV W2, W31
	0x033C6278 BL 0x33C635C
	0x033C627C B 0x33C6324
	0x033C6280 ADRP X8, 0xD66000
	0x033C6284 LDR X8, [X8 + 0x858]
	0x033C6288 MOV W1, W31
	0x033C628C LDR X0, [X8]
	0x033C6290 BL 0x1C16D6C
	0x033C6294 MOV X22, X0
	0x033C6298 B 0x33C631C
	0x033C629C ADRP X8, 0xD66000
	0x033C62A0 LDR X8, [X8 + 0x858]
	0x033C62A4 MOV W1, W24
	0x033C62A8 LDR X0, [X8]
	0x033C62AC BL 0x1C16D6C
	0x033C62B0 CMP W24, 0x1
	0x033C62B4 MOV X22, X0
	0x033C62B8 B.LT 0x33C631C
	0x033C62BC MOV X23, X31
	0x033C62C0 ADD X25, X22, 0x20
	0x033C62C4 MOV W26, W24
	0x033C62C8 CBZ X21, 0x33C6340
	0x033C62CC MOV X0, X21
	0x033C62D0 MOV X1, X20
	0x033C62D4 MOV W2, W23
	0x033C62D8 BL 0x33C635C
	0x033C62DC CBZ X22, 0x33C6340
	0x033C62E0 MOV X24, X0
	0x033C62E4 CBZ X0, 0x33C62FC
	0x033C62E8 LDR X8, [X22]
	0x033C62EC MOV X0, X24
	0x033C62F0 LDR X1, [X8 + 0x40]
	0x033C62F4 BL 0x1C16E00
	0x033C62F8 CBZ X0, 0x33C6348
	0x033C62FC LDR W8, [X22 + 0x18]
	0x033C6300 CMP X23, X8
	0x033C6304 B.CS 0x33C6344
	0x033C6308 STR X24, [X25, X23, LSL #3]
	0x033C630C LDR X21, [X21 + 0x40]
	0x033C6310 ADD X23, X23, 0x1
	0x033C6314 CMP X26, X23
	0x033C6318 B.NE 0x33C62C8
	0x033C631C MOV X0, X22
	0x033C6320 BL 0x33C6014
	0x033C6324 STR X0, [X19 + 0x10]
	0x033C6328 LDP X20, X19, [X31 + 0x40]
	0x033C632C LDP X22, X21, [X31 + 0x30]
	0x033C6330 LDP X24, X23, [X31 + 0x20]
	0x033C6334 LDP X26, X25, [X31 + 0x10]
	0x033C6338 LDR X30, [X31], #0x50
	0x033C633C RET
	0x033C6340 BL 0x1C16F20
	0x033C6344 BL 0x1C16F28
	0x033C6348 BL 0x1C16F44
	0x033C634C MOV X1, X31
	0x033C6350 BL 0x1C16DEC
	0x033C6354 MOV X0, X21
	0x033C6358 BL 0x1C171E0
	0x033C635C STR X30, [X31 - 0x40]!
	0x033C6360 STP X24, X23, [X31 + 0x10]
	0x033C6364 STP X22, X21, [X31 + 0x20]
	0x033C6368 STP X20, X19, [X31 + 0x30]
	0x033C636C ADRP X21, 0x1017000
	0x033C6370 LDRB W8, [X21 + 0x273]
	0x033C6374 MOV X20, X1
	0x033C6378 MOV X19, X0
	0x033C637C STR W2, [X31 + 0xC]
	0x033C6380 TBNZ X8, 0x0, 0x33C63C8
	0x033C6384 ADRP X0, 0xD66000
	0x033C6388 LDR X0, [X0 + 0x878]
	0x033C638C BL 0x1C16CF4
	0x033C6390 ADRP X0, 0xD5E000
	0x033C6394 LDR X0, [X0 + 0x278]
	0x033C6398 BL 0x1C16CF4
	0x033C639C ADRP X0, 0xD37000
	0x033C63A0 LDR X0, [X0 + 0x968]
	0x033C63A4 BL 0x1C16CF4
	0x033C63A8 ADRP X0, 0xD2D000
	0x033C63AC LDR X0, [X0 + 0x6C0]
	0x033C63B0 BL 0x1C16CF4
	0x033C63B4 ADRP X0, 0xD2E000
	0x033C63B8 LDR X0, [X0 + 0x6E8]
	0x033C63BC BL 0x1C16CF4
	0x033C63C0 MOVZ W8, 0x1
	0x033C63C4 STRB W8, [X21 + 0x273]
	0x033C63C8 ADRP X23, 0xD2D000
	0x033C63CC LDR X0, [X19 + 0x20]
	0x033C63D0 LDR X23, [X23 + 0x6C0]
	0x033C63D4 CBZ X0, 0x33C6434
	0x033C63D8 LDR X8, [X0]
	0x033C63DC ADRP X21, 0xD37000
	0x033C63E0 LDP X9, X1, [X8 + 0x168]
	0x033C63E4 LDR X21, [X21 + 0x968]
	0x033C63E8 BLR X9
	0x033C63EC LDR X8, [X23]
	0x033C63F0 LDR X22, [X21]
	0x033C63F4 MOV X21, X0
	0x033C63F8 LDR W9, [X8 + 0xE0]
	0x033C63FC CBNZ W9, 0x33C6408
	0x033C6400 MOV X0, X8
	0x033C6404 BL 0x1C16DFC
	0x033C6408 MOV X0, X22
	0x033C640C MOV X1, X31
	0x033C6410 BL 0x338C698
	0x033C6414 CBZ X20, 0x33C65C8
	0x033C6418 MOV X2, X0
	0x033C641C MOV X0, X20
	0x033C6420 MOV X1, X21
	0x033C6424 MOV X3, X31
	0x033C6428 BL 0x32A9678
	0x033C642C MOV X21, X0
	0x033C6430 B 0x33C6438
	0x033C6434 MOV X21, X31
	0x033C6438 ADRP X22, 0xD2E000
	0x033C643C ADRP X24, 0xD66000
	0x033C6440 LDR X22, [X22 + 0x6E8]
	0x033C6444 LDR X24, [X24 + 0x878]
	0x033C6448 ADD X0, X31, 0xC
	0x033C644C MOV X1, X31

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X20, 0x1018000
	015 Move X28, 0xD2E000
	016 Move W8, [X20+616]
	017 Move X28, [X28+1728]
	018 Move W24, W5
	019 Move W25, W4
	020 Move W27, W3
	021 Move X19, X2
	022 Move X21, X1
	023 Move X22, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {45}
	028 Move X0, 0xD67000
	029 Move X0, [X0+2056]
	030 Call 0x1C17CF4
	031 Move X0, 0xD60000
	032 Move X0, [X0+1800]
	033 Call 0x1C17CF4
	034 Move X0, 0xD36000
	035 Move X0, [X0+3168]
	036 Call 0x1C17CF4
	037 Move X0, 0xD2E000
	038 Move X0, [X0+1728]
	039 Call 0x1C17CF4
	040 Move X0, 0xD67000
	041 Move X0, [X0+2008]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X20+616], W8
	045 Move X0, [X28]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, X22
	051 Move X1, X31
	052 Move X2, X31
	053 Call Type.op_Equality, X0, X1
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {266}
	058 Compare X19, 0
	059 JumpIfEqual {273}
	060 Move X8, 0xD60000
	061 Move X0, [X28]
	062 Move X8, [X8+1800]
	063 Move W9, [X0+224]
	064 Move X23, [X8]
	065 Compare W9, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Move X0, X23
	069 Move X1, X31
	070 Call Type.GetTypeFromHandle, X0
	071 Compare X22, 0
	072 JumpIfEqual {261}
	073 Move X8, [X22]
	074 Move X1, X0
	075 Move X0, X22
	076 Move X9, [X8+664]
	077 Move X2, [X8+672]
	078 NotImplemented "Instruction BLR not yet implemented."
	079 Move TEMP, X0
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfNotEqual {285}
	083 Move X8, 0xD67000
	084 Move X8, [X8+2008]
	085 Move X0, X22
	086 Move X2, X31
	087 Move X1, [X8]
	088 Call Type.GetMethod, X0, X1
	089 Compare X0, 0
	090 JumpIfEqual {261}
	091 Move X8, [X0]
	092 Move X22, X0
	093 Move [X31+8], W24
	094 Move [X31+12], W25
	095 Move X9, [X8+856]
	096 Move X1, [X8+864]
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Compare X0, 0
	099 JumpIfEqual {261}
	100 Move X8, 0xD36000
	101 Move X8, [X8+3168]
	102 Move X26, X0
	103 Move W1, [X26+24]
	104 Move W25, W27
	105 Move X0, [X8]
	106 Call 0x1C17D6C
	107 Move W8, [X26+24]
	108 Move X23, X0
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X29, X31
	111 Add X20, X23, 32
	112 Add X24, X26, 32
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move X0, [X24]
	115 Compare X0, 0
	116 JumpIfEqual {261}
	117 Move X8, [X0]
	118 Move X9, [X8+472]
	119 Move X1, [X8+480]
	120 NotImplemented "Instruction BLR not yet implemented."
	121 Compare X23, 0
	122 JumpIfEqual {261}
	123 Move X27, X0
	124 Compare X0, 0
	125 JumpIfEqual {132}
	126 Move X8, [X23]
	127 Move X0, X27
	128 Move X1, [X8+64]
	129 Call 0x1C17E00
	130 Compare X0, 0
	131 JumpIfEqual {263}
	132 Move W8, [X23+24]
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move [X20], X27
	135 Move W8, [X26+24]
	136 Add X29, X29, 1
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move X27, 0xD67000
	139 Move X27, [X27+2056]
	140 Move W10, [X31+12]
	141 Move W8, 50
	142 NotImplemented "Instruction MOVK not yet implemented."
	143 Or W9, W8, 1
	144 And W31, W10, 1
	145 NotImplemented "Instruction CSEL not yet implemented."
	146 Or W24, W8, W25
	147 Move X0, [X28]
	148 Move W8, [X0+224]
	149 Compare W8, 0
	150 JumpIfNotEqual {152}
	151 Call 0x1C17DFC
	152 Move X0, X21
	153 Move X1, X31
	154 Move X2, X31
	155 Call Type.op_Inequality, X0, X1
	156 Move TEMP, X0
	157 And TEMP, TEMP, 1
	158 Compare TEMP, 1
	159 JumpIfNotEqual {231}
	160 Move X25, [X27]
	161 Move X8, [X25+56]
	162 Compare X8, 0
	163 JumpIfNotEqual {167}
	164 Move X0, X25
	165 Call 0x1C5D6E0
	166 Move X8, [X25+56]
	167 Move X0, [X8+16]
	168 Move W8, [X0+309]
	169 Move TEMP, X8
	170 And TEMP, TEMP, 1
	171 Compare TEMP, 1
	172 JumpIfEqual {174}
	173 Call 0x1C5D684
	174 Move W8, [X0+224]
	175 Compare W8, 0
	176 JumpIfNotEqual {178}
	177 Call 0x1C17DFC
	178 Move X8, [X25+56]
	179 Move X0, [X8+16]
	180 Move W8, [X0+309]
	181 Move TEMP, X8
	182 And TEMP, TEMP, 1
	183 Compare TEMP, 1
	184 JumpIfEqual {186}
	185 Call 0x1C5D684
	186 Compare X21, 0
	187 JumpIfEqual {261}
	188 Move X8, [X0+184]
	189 Move X0, X21
	190 Move X1, X19
	191 Move W2, W24
	192 Move X5, [X8]
	193 Move X3, X31
	194 Move X4, X23
	195 Move X6, X31
	196 Call Type.GetMethod, X0, X1, X2, X3, X4, X5
	197 Move X1, X31
	198 Move X2, X31
	199 Move X25, X0
	200 Call MethodInfo.op_Inequality, X0, X1
	201 Move TEMP, X0
	202 And TEMP, TEMP, 1
	203 Compare TEMP, 1
	204 JumpIfNotEqual {225}
	205 Move X8, [X22]
	206 Move X0, X22
	207 Move X9, [X8+952]
	208 Move X1, [X8+960]
	209 NotImplemented "Instruction BLR not yet implemented."
	210 Compare X25, 0
	211 JumpIfEqual {261}
	212 Move X8, [X25]
	213 Move X26, X0
	214 Move X0, X25
	215 Move X9, [X8+952]
	216 Move X1, [X8+960]
	217 NotImplemented "Instruction BLR not yet implemented."
	218 Move X1, X0
	219 Move X0, X26
	220 Call Delegate.return_type_match, X0, X1
	221 Move TEMP, X0
	222 And TEMP, TEMP, 1
	223 Compare TEMP, 1
	224 JumpIfEqual {232}
	225 Move X8, [X21]
	226 Move X0, X21
	227 Move X9, [X8+2072]
	228 Move X1, [X8+2080]
	229 NotImplemented "Instruction BLR not yet implemented."
	230 Move X21, X0
	231 Move X25, X31
	232 Move X0, X25
	233 Move X1, X31
	234 Move X2, X31
	235 Call MethodInfo.op_Equality, X0, X1
	236 Move TEMP, X0
	237 And TEMP, TEMP, 1
	238 Compare TEMP, 1
	239 JumpIfNotEqual {245}
	240 Move W8, [X31+8]
	241 Move TEMP, X8
	242 And TEMP, TEMP, 1
	243 Compare TEMP, 1
	244 JumpIfEqual {303}
	245 And W31, W0, 1
	246 NotImplemented "Instruction CSEL not yet implemented."
	247 Move X20, [X31+96]
	248 Move X19, [X31+104]
	249 Move X22, [X31+80]
	250 Move X21, [X31+88]
	251 Move X24, [X31+64]
	252 Move X23, [X31+72]
	253 Move X26, [X31+48]
	254 Move X25, [X31+56]
	255 Move X28, [X31+32]
	256 Move X27, [X31+40]
	257 Move X29, [X31+16]
	258 Move X30, [X31+24]
	259 Add X31, X31, 112
	260 Return X0
	261 Call 0x1C17F20
	262 Call 0x1C17F28
	263 Call 0x1C17F44
	264 Move X1, X31
	265 Call 0x1C17DEC
	266 Move X0, 0xD33000
	267 Move X0, [X0+1320]
	268 Call 0x1C17D08
	269 Call 0x1C17F10
	270 Move X19, X0
	271 Move X0, 0xD36000
	272 Move X0, [X0+1512]
	273 Move X0, 0xD33000
	274 Move X0, [X0+1320]
	275 Call 0x1C17D08
	276 Call 0x1C17F10
	277 Move X19, X0
	278 Move X0, 0xD2F000
	279 Move X0, [X0+1768]
	280 Call 0x1C17D08
	281 Move X1, X0
	282 Move X0, X19
	283 Move X2, X31
	284 Call ArgumentNullException..ctor, X0, X1
	285 Move X0, 0xD36000
	286 Move X0, [X0+1400]
	287 Call 0x1C17D08
	288 Call 0x1C17F10
	289 Move X19, X0
	290 Move X0, 0xD67000
	291 Move X0, [X0+2064]
	292 Call 0x1C17D08
	293 Move X1, X0
	294 Move X0, X19
	295 Move X2, X31
	296 Call ArgumentException..ctor, X0, X1
	297 Move X0, 0xD67000
	298 Move X0, [X0+2072]
	299 Call 0x1C17D08
	300 Move X1, X0
	301 Move X0, X19
	302 Call 0x1C17DEC
	303 Move X0, 0xD67000
	304 Move X0, [X0+2080]
	305 Call 0x1C17D08
	306 Move X20, X0
	307 Move X0, 0xD67000
	308 Move X0, [X0+2088]
	309 Call 0x1C17D08
	310 Move X2, X0
	311 Move X0, X20
	312 Move X1, X19
	313 Move X3, X31
	314 Call String.Concat, X0, X1, X2
	315 Move X19, X0
	316 Move X0, 0xD36000
	317 Move X0, [X0+1400]
	318 Call 0x1C17D08
	319 Call 0x1C17F10
	320 Move X1, X19
	321 Move X2, X31
	322 Move X20, X0
	323 Call ArgumentException..ctor, X0, X1
	324 Move X0, 0xD67000
	325 Move X0, [X0+2072]
	326 Call 0x1C17D08
	327 Move X1, X0
	328 Move X0, X20
	329 Call 0x1C17DEC

Method: System.Delegate CreateDelegate(System.Type type, System.Type target, System.String method, System.Boolean ignoreCase, System.Boolean throwOnBindFailure)

Disassembly:
	0x033C6450 BL 0x337B6E0
	0x033C6454 LDR X8, [X22]
	0x033C6458 MOV X1, X0
	0x033C645C MOV X2, X31
	0x033C6460 MOV X0, X8
	0x033C6464 BL 0x321B938
	0x033C6468 LDR X8, [X23]
	0x033C646C LDR X23, [X24]
	0x033C6470 MOV X22, X0
	0x033C6474 LDR W9, [X8 + 0xE0]
	0x033C6478 CBNZ W9, 0x33C6484
	0x033C647C MOV X0, X8
	0x033C6480 BL 0x1C16DFC
	0x033C6484 MOV X0, X23
	0x033C6488 MOV X1, X31
	0x033C648C BL 0x338C698
	0x033C6490 CBZ X20, 0x33C65C8
	0x033C6494 MOV X2, X0
	0x033C6498 MOV X0, X20
	0x033C649C MOV X1, X22
	0x033C64A0 MOV X3, X31
	0x033C64A4 BL 0x32A9880
	0x033C64A8 MOV X20, X0
	0x033C64AC CBZ X0, 0x33C64E4
	0x033C64B0 ADRP X9, 0xD5E000
	0x033C64B4 LDR X9, [X9 + 0x278]
	0x033C64B8 LDR X8, [X20]
	0x033C64BC LDR X1, [X9]
	0x033C64C0 LDRB W10, [X8 + 0x130]
	0x033C64C4 LDRB W9, [X1 + 0x130]
	0x033C64C8 CMP W10, W9
	0x033C64CC B.CC 0x33C65CC
	0x033C64D0 LDR X8, [X8 + 0xC8]
	0x033C64D4 ADD X8, X8, X9, 0x3, LSL
	0x033C64D8 LDUR X8, [X8 - 0x8]
	0x033C64DC CMP X8, X1
	0x033C64E0 B.NE 0x33C65CC
	0x033C64E4 LDR X0, [X19 + 0x18]
	0x033C64E8 MOV X1, X31
	0x033C64EC BL 0x32D59A8
	0x033C64F0 CBZ X0, 0x33C65C8
	0x033C64F4 LDR X8, [X0]
	0x033C64F8 LDR X1, [X19 + 0x10]
	0x033C64FC LDR X9, [X8 + 0x238]
	0x033C6500 LDR X2, [X8 + 0x240]
	0x033C6504 BLR X9
	0x033C6508 MOV X22, X0
	0x033C650C MOV X0, X20
	0x033C6510 MOV X1, X31
	0x033C6514 MOV X2, X31
	0x033C6518 CBZ X21, 0x33C6540
	0x033C651C BL 0x32C2354
	0x033C6520 TBZ X0, 0x0, 0x33C655C
	0x033C6524 LDR X2, [X19 + 0x38]
	0x033C6528 MOVZ W4, 0x1
	0x033C652C MOV X0, X22
	0x033C6530 MOV X1, X21
	0x033C6534 MOV W3, W31
	0x033C6538 BL 0x33C5584
	0x033C653C B 0x33C65B4
	0x033C6540 BL 0x32CE528
	0x033C6544 TBZ X0, 0x0, 0x33C6578
	0x033C6548 MOVZ W3, 0x1
	0x033C654C MOVZ W4, 0x1
	0x033C6550 MOV X0, X22
	0x033C6554 MOV X1, X31
	0x033C6558 B 0x33C656C
	0x033C655C MOVZ W3, 0x1
	0x033C6560 MOVZ W4, 0x1
	0x033C6564 MOV X0, X22
	0x033C6568 MOV X1, X21
	0x033C656C MOV X2, X20
	0x033C6570 BL 0x33C4794
	0x033C6574 B 0x33C65B4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0x1018000
	010 Move X25, 0xD2E000
	011 Move W8, [X24+617]
	012 Move X25, [X25+1728]
	013 Move W22, W4
	014 Move W23, W3
	015 Move X20, X2
	016 Move X21, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0xD2E000
	023 Move X0, [X0+1728]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X24+617], W8
	027 Move X0, [X25]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X21
	033 Move X1, X31
	034 Move X2, X31
	035 Call Type.op_Equality, X0, X1
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {80}
	040 And W22, W22, 1
	041 And W4, W23, 1
	042 Move W3, 8
	043 Move X0, X19
	044 Move X1, X21
	045 Move X2, X20
	046 Move W5, W22
	047 Call Delegate.GetCandidateMethod, X0, X1, X2, X3, X4, X5
	048 Move X1, X31
	049 Move X2, X31
	050 Move X20, X0
	051 Call MethodInfo.op_Equality, X0, X1
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {66}
	056 Move X20, [X31+48]
	057 Move X19, [X31+56]
	058 Move X22, [X31+32]
	059 Move X21, [X31+40]
	060 Move X24, [X31+16]
	061 Move X23, [X31+24]
	062 Move X0, X31
	063 Move X30, [X31+64]
	064 Move X25, [X31+72]
	065 Return X0
	066 Move X0, X19
	067 Move X2, X20
	068 Move W3, W22
	069 Move X20, [X31+48]
	070 Move X19, [X31+56]
	071 Move X22, [X31+32]
	072 Move X21, [X31+40]
	073 Move X24, [X31+16]
	074 Move X23, [X31+24]
	075 Move X1, X31
	076 Move X30, [X31+64]
	077 Move X25, [X31+72]
	078 Call 0x1C887B4
	079 Return X0
	080 Move X0, 0xD33000
	081 Move X0, [X0+1320]
	082 Call 0x1C17D08
	083 Call 0x1C17F10
	084 Move X19, X0
	085 Move X0, 0xD67000
	086 Move X0, [X0+1152]
	087 Call 0x1C17D08
	088 Move X1, X0
	089 Move X0, X19
	090 Move X2, X31
	091 Call ArgumentNullException..ctor, X0, X1
	092 Move X0, 0xD67000
	093 Move X0, [X0+2096]
	094 Call 0x1C17D08
	095 Move X1, X0
	096 Move X0, X19
	097 Call 0x1C17DEC

Method: System.Delegate CreateDelegate(System.Type type, System.Type target, System.String method)

Disassembly:
	0x033C6578 LDR X0, [X19 + 0x28]
	0x033C657C MOV X1, X31
	0x033C6580 BL 0x32D59A8

ISIL:
	001 Move W4, 1
	002 Move W3, W31
	003 Call Delegate.CreateDelegate, X0, X1, X2, X3, X4
	004 Return X0

Method: System.Delegate CreateDelegate(System.Type type, System.Object target, System.String method, System.Boolean ignoreCase, System.Boolean throwOnBindFailure)

Disassembly:
	0x033C6584 CBZ X0, 0x33C65C8
	0x033C6588 LDR X8, [X0]
	0x033C658C LDR X1, [X19 + 0x30]
	0x033C6590 LDR X9, [X8 + 0x238]
	0x033C6594 LDR X2, [X8 + 0x240]
	0x033C6598 BLR X9
	0x033C659C LDR X2, [X19 + 0x38]
	0x033C65A0 MOV X1, X0
	0x033C65A4 MOVZ W4, 0x1
	0x033C65A8 MOV X0, X22
	0x033C65AC MOV W3, W31
	0x033C65B0 BL 0x33C5450
	0x033C65B4 LDP X20, X19, [X31 + 0x30]
	0x033C65B8 LDP X22, X21, [X31 + 0x20]
	0x033C65BC LDP X24, X23, [X31 + 0x10]
	0x033C65C0 LDR X30, [X31], #0x40
	0x033C65C4 RET
	0x033C65C8 BL 0x1C16F20
	0x033C65CC MOV X0, X20
	0x033C65D0 BL 0x1C171E0
	0x033C65D4 STP X30, X21, [X31 - 0x20]!
	0x033C65D8 STP X20, X19, [X31 + 0x10]
	0x033C65DC CBZ X1, 0x33C66EC
	0x033C65E0 MOV X19, X0
	0x033C65E4 MOV X0, X1
	0x033C65E8 MOV X21, X2
	0x033C65EC MOV X20, X1
	0x033C65F0 BL 0x1C25764
	0x033C65F4 CBZ X0, 0x33C66EC
	0x033C65F8 LDR X8, [X0]
	0x033C65FC LDR X9, [X8 + 0x2E8]
	0x033C6600 LDR X1, [X8 + 0x2F0]
	0x033C6604 BLR X9
	0x033C6608 STR X0, [X19 + 0x10]
	0x033C660C MOV X0, X20
	0x033C6610 BL 0x1C25764
	0x033C6614 CBZ X0, 0x33C66EC
	0x033C6618 LDR X8, [X0]
	0x033C661C LDR X9, [X8 + 0x2F8]
	0x033C6620 LDR X1, [X8 + 0x300]
	0x033C6624 BLR X9
	0x033C6628 CBZ X0, 0x33C66EC
	0x033C662C LDR X8, [X0]
	0x033C6630 LDP X9, X1, [X8 + 0x1B8]
	0x033C6634 BLR X9
	0x033C6638 STP X0, X21, [X19 + 0x18]
	0x033C663C LDR X8, [X20]
	0x033C6640 MOV X0, X20
	0x033C6644 LDP X9, X1, [X8 + 0x1B8]
	0x033C6648 BLR X9
	0x033C664C CBZ X0, 0x33C66EC
	0x033C6650 LDR X8, [X0]
	0x033C6654 LDP X9, X1, [X8 + 0x1B8]
	0x033C6658 BLR X9
	0x033C665C CBZ X0, 0x33C66EC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Compare X1, 0
	008 JumpIfEqual {52}
	009 Move X20, X0
	010 Move X0, X1
	011 Move W21, W4
	012 Move W23, W3
	013 Move X22, X2
	014 Move X19, X1
	015 Call 0x1C26764
	016 And W21, W21, 1
	017 Move X1, X0
	018 And W4, W23, 1
	019 Move W3, 4
	020 Move X0, X20
	021 Move X2, X22
	022 Move W5, W21
	023 Call Delegate.GetCandidateMethod, X0, X1, X2, X3, X4, X5
	024 Move X1, X31
	025 Move X2, X31
	026 Move X22, X0
	027 Call MethodInfo.op_Equality, X0, X1
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {40}
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X0, X31
	037 Move X30, [X31+48]
	038 Move X23, [X31+56]
	039 Return X0
	040 Move X0, X20
	041 Move X1, X19
	042 Move X2, X22
	043 Move W3, W21
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X30, [X31+48]
	049 Move X23, [X31+56]
	050 Call 0x1C887B4
	051 Return X0
	052 Move X0, 0xD33000
	053 Move X0, [X0+1320]
	054 Call 0x1C17D08
	055 Call 0x1C17F10
	056 Move X19, X0
	057 Move X0, 0xD67000
	058 Move X0, [X0+1152]
	059 Call 0x1C17D08
	060 Move X1, X0
	061 Move X0, X19
	062 Move X2, X31
	063 Call ArgumentNullException..ctor, X0, X1
	064 Move X0, 0xD67000
	065 Move X0, [X0+2104]
	066 Call 0x1C17D08
	067 Move X1, X0
	068 Move X0, X19
	069 Call 0x1C17DEC

Method: System.Delegate CreateDelegate(System.Type type, System.Object target, System.String method, System.Boolean ignoreCase)

Disassembly:
	0x033C5FF0 MOV X0, X20
	0x033C5FF4 LDP X20, X19, [X31 + 0x10]
	0x033C5FF8 LDP X30, X21, [X31], #0x20

ISIL:
	001 And W3, W3, 1
	002 Move W4, 1
	003 Call Delegate.CreateDelegate, X0, X1, X2, X3, X4
	004 Return X0

Method: System.Object DynamicInvoke(System.Object[] args)

Disassembly:
	0x033C6660 LDR X8, [X0]
	0x033C6664 LDR X9, [X8 + 0x2F8]
	0x033C6668 LDR X1, [X8 + 0x300]

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+408]
	003 Move X2, [X8+416]
	004 CallNoReturn X3

Method: System.Void InitializeDelegateData()

Disassembly:
	0x033C666C BLR X9
	0x033C6670 CBZ X0, 0x33C66EC
	0x033C6674 LDR X8, [X0]
	0x033C6678 LDP X9, X1, [X8 + 0x1B8]
	0x033C667C BLR X9
	0x033C6680 STR X0, [X19 + 0x28]
	0x033C6684 LDR X8, [X20]
	0x033C6688 MOV X0, X20
	0x033C668C LDP X9, X1, [X8 + 0x1B8]
	0x033C6690 BLR X9
	0x033C6694 CBZ X0, 0x33C66EC
	0x033C6698 LDR X8, [X0]
	0x033C669C LDP X9, X1, [X8 + 0x1B8]
	0x033C66A0 BLR X9
	0x033C66A4 CBZ X0, 0x33C66EC
	0x033C66A8 LDR X8, [X0]
	0x033C66AC LDR X9, [X8 + 0x2E8]
	0x033C66B0 LDR X1, [X8 + 0x2F0]
	0x033C66B4 BLR X9
	0x033C66B8 STR X0, [X19 + 0x30]
	0x033C66BC LDR X8, [X20]
	0x033C66C0 MOV X0, X20
	0x033C66C4 LDP X9, X1, [X8 + 0x1B8]
	0x033C66C8 BLR X9
	0x033C66CC CBZ X0, 0x33C66EC
	0x033C66D0 LDR X8, [X0]
	0x033C66D4 LDP X9, X1, [X8 + 0x1A8]
	0x033C66D8 BLR X9
	0x033C66DC STR X0, [X19 + 0x38]
	0x033C66E0 LDP X20, X19, [X31 + 0x10]
	0x033C66E4 LDP X30, X21, [X31], #0x20
	0x033C66E8 RET
	0x033C66EC BL 0x1C16F20
	0x033C66F0 STP X30, X19, [X31 - 0x10]!
	0x033C66F4 ADRP X0, 0xD2D000
	0x033C66F8 LDR X0, [X0 + 0xB40]
	0x033C66FC BL 0x1C16D08
	0x033C6700 BL 0x1C16F10
	0x033C6704 MOV X1, X31
	0x033C6708 MOV X19, X0
	0x033C670C BL 0x3380310
	0x033C6710 ADRP X0, 0xD66000
	0x033C6714 LDR X0, [X0 + 0x880]
	0x033C6718 BL 0x1C16D08
	0x033C671C MOV X1, X0
	0x033C6720 MOV X0, X19
	0x033C6724 BL 0x1C16DEC
	0x033C6728 LDR X0, [X0 + 0x10]
	0x033C672C RET
	0x033C6730 SXTW X8, W1
	0x033C6734 STR X8, [X0]
	0x033C6738 RET
	0x033C673C STR X1, [X0]
	0x033C6740 RET
	0x033C6744 STR X1, [X0]
	0x033C6748 RET
	0x033C674C STP X30, X21, [X31 - 0x20]!
	0x033C6750 STP X20, X19, [X31 + 0x10]
	0x033C6754 ADRP X21, 0x1017000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1018000
	006 Move X21, 0xD67000
	007 Move W8, [X20+618]
	008 Move X21, [X21+2000]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xD67000
	015 Move X0, [X0+2000]
	016 Call 0x1C17CF4
	017 Move X0, 0xD67000
	018 Move X0, [X0+2008]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+618], W8
	022 Move X0, [X21]
	023 Call 0x1C17F10
	024 Move X8, [X19+88]
	025 Compare X8, 0
	026 JumpIfEqual {74}
	027 Move X20, X0
	028 Move X0, X8
	029 Move X1, X31
	030 Call MethodBase.get_IsStatic, X0
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {68}
	035 Move X8, [X19+32]
	036 Compare X8, 0
	037 JumpIfNotEqual {64}
	038 Move X0, X19
	039 Call 0x1C26764
	040 Compare X0, 0
	041 JumpIfEqual {74}
	042 Move X8, 0xD67000
	043 Move X8, [X8+2008]
	044 Move X2, X31
	045 Move X1, [X8]
	046 Call Type.GetMethod, X0, X1
	047 Compare X0, 0
	048 JumpIfEqual {74}
	049 Move X8, [X0]
	050 Move X9, [X8+872]
	051 Move X1, [X8+880]
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move X8, [X19+88]
	054 Compare X8, 0
	055 JumpIfEqual {74}
	056 Move X9, [X8]
	057 Move W21, W0
	058 Move X0, X8
	059 Move X10, [X9+872]
	060 Move X1, [X9+880]
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Add W8, W21, 1
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Compare X20, 0
	065 JumpIfEqual {74}
	066 Move W8, 1
	067 Move [X20+32], W8
	068 Move [X19+104], X20
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move X30, [X31+32]
	072 Move X21, [X31+40]
	073 Return 
	074 Call 0x1C17F20

Method: System.Object DynamicInvokeImpl(System.Object[] args)

Disassembly:
	0x033C6758 LDRB W8, [X21 + 0x274]
	0x033C675C MOV X20, X1
	0x033C6760 MOV X19, X0
	0x033C6764 TBNZ X8, 0x0, 0x33C677C
	0x033C6768 ADRP X0, 0xD37000
	0x033C676C LDR X0, [X0 + 0xEC8]
	0x033C6770 BL 0x1C16CF4
	0x033C6774 MOVZ W8, 0x1
	0x033C6778 STRB W8, [X21 + 0x274]
	0x033C677C CBZ X20, 0x33C67A8
	0x033C6780 ADRP X8, 0xD37000
	0x033C6784 LDR X8, [X8 + 0xEC8]
	0x033C6788 MOV X0, X20
	0x033C678C MOV X2, X31
	0x033C6790 LDR X1, [X8]
	0x033C6794 BL 0x32A9C7C
	0x033C6798 STR X0, [X19]
	0x033C679C LDP X20, X19, [X31 + 0x10]
	0x033C67A0 LDP X30, X21, [X31], #0x20
	0x033C67A4 RET
	0x033C67A8 BL 0x1C16F20
	0x033C67AC MOVZ W0, 0x8
	0x033C67B0 RET
	0x033C67B4 STP X30, X21, [X31 - 0x20]!
	0x033C67B8 STP X20, X19, [X31 + 0x10]
	0x033C67BC ADRP X21, 0x1017000
	0x033C67C0 LDRB W8, [X21 + 0x275]
	0x033C67C4 MOV X19, X1
	0x033C67C8 MOV X20, X0
	0x033C67CC TBNZ X8, 0x0, 0x33C67E4
	0x033C67D0 ADRP X0, 0xD37000
	0x033C67D4 LDR X0, [X0 + 0xEC8]
	0x033C67D8 BL 0x1C16CF4
	0x033C67DC MOVZ W8, 0x1
	0x033C67E0 STRB W8, [X21 + 0x275]
	0x033C67E4 CBZ X19, 0x33C680C
	0x033C67E8 ADRP X8, 0xD37000
	0x033C67EC LDR X8, [X8 + 0xEC8]
	0x033C67F0 LDR X2, [X20]
	0x033C67F4 MOV X0, X19
	0x033C67F8 LDP X20, X19, [X31 + 0x10]
	0x033C67FC LDR X1, [X8]
	0x033C6800 MOV X3, X31
	0x033C6804 LDP X30, X21, [X31], #0x20
	0x033C6808 B 0x32A8FFC
	0x033C680C ADRP X0, 0xD32000
	0x033C6810 LDR X0, [X0 + 0x528]
	0x033C6814 BL 0x1C16D08
	0x033C6818 BL 0x1C16F10
	0x033C681C MOV X19, X0
	0x033C6820 ADRP X0, 0xD57000
	0x033C6824 LDR X0, [X0 + 0x2D8]
	0x033C6828 BL 0x1C16D08
	0x033C682C MOV X1, X0
	0x033C6830 MOV X0, X19
	0x033C6834 MOV X2, X31
	0x033C6838 BL 0x330E100
	0x033C683C ADRP X0, 0xD66000
	0x033C6840 LDR X0, [X0 + 0x888]
	0x033C6844 BL 0x1C16D08
	0x033C6848 MOV X1, X0
	0x033C684C MOV X0, X19
	0x033C6850 BL 0x1C16DEC
	0x033C6854 LDR X0, [X0]
	0x033C6858 RET
	0x033C685C STP X30, X21, [X31 - 0x20]!
	0x033C6860 STP X20, X19, [X31 + 0x10]
	0x033C6864 ADRP X21, 0x1017000
	0x033C6868 LDRB W8, [X21 + 0x276]
	0x033C686C MOV X20, X1
	0x033C6870 MOV X19, X0
	0x033C6874 TBNZ X8, 0x0, 0x33C688C
	0x033C6878 ADRP X0, 0xD56000
	0x033C687C LDR X0, [X0 + 0xF20]
	0x033C6880 BL 0x1C16CF4
	0x033C6884 MOVZ W8, 0x1
	0x033C6888 STRB W8, [X21 + 0x276]
	0x033C688C CBZ X20, 0x33C68A8
	0x033C6890 ADRP X8, 0xD56000
	0x033C6894 LDR X8, [X8 + 0xF20]
	0x033C6898 LDR X9, [X20]
	0x033C689C LDR X8, [X8]
	0x033C68A0 CMP X9, X8
	0x033C68A4 B.EQ 0x33C68B0
	0x033C68A8 MOV W0, W31
	0x033C68AC B 0x33C68C8
	0x033C68B0 MOV X0, X20
	0x033C68B4 BL 0x1C16E08
	0x033C68B8 LDR X8, [X0]
	0x033C68BC LDR X9, [X19]
	0x033C68C0 CMP X8, X9
	0x033C68C4 CSET W0, EQ
	0x033C68C8 LDP X20, X19, [X31 + 0x10]
	0x033C68CC LDP X30, X21, [X31], #0x20
	0x033C68D0 RET
	0x033C68D4 LDR W0, [X0]
	0x033C68D8 RET
	0x033C68DC LDR X0, [X0]
	0x033C68E0 RET
	0x033C68E4 STR X30, [X31 - 0x10]!
	0x033C68E8 LDR X8, [X0]
	0x033C68EC ADD X0, X31, 0x8
	0x033C68F0 MOV X1, X31
	0x033C68F4 MOV X2, X31
	0x033C68F8 MOV X3, X31
	0x033C68FC STR X8, [X31 + 0x8]
	0x033C6900 BL 0x337CDE0
	0x033C6904 LDR X30, [X31], #0x10
	0x033C6908 RET
	0x033C690C STR X30, [X31 - 0x10]!
	0x033C6910 LDR X8, [X0]
	0x033C6914 ADD X0, X31, 0x8
	0x033C6918 MOV X2, X31
	0x033C691C MOV X3, X31
	0x033C6920 STR X8, [X31 + 0x8]
	0x033C6924 BL 0x337CDE0
	0x033C6928 LDR X30, [X31], #0x10
	0x033C692C RET
	0x033C6930 SXTW X0, W0
	0x033C6934 RET
	0x033C6938 RET
	0x033C693C RET
	0x033C6940 RET
	0x033C6944 RET
	0x033C6948 RET
	0x033C694C ADD X0, X0, W1, SXTW
	0x033C6950 RET
	0x033C6954 ADD X0, X0, W1, SXTW
	0x033C6958 RET
	0x033C695C SUB X0, X0, W1, SXTW
	0x033C6960 RET
	0x033C6964 LDR X8, [X0]
	0x033C6968 CMP X8, 0x0
	0x033C696C CSET W0, EQ
	0x033C6970 RET
	0x033C6974 LDR X8, [X0]
	0x033C6978 CMP X8, X1
	0x033C697C CSET W0, EQ
	0x033C6980 RET
	0x033C6984 STP X30, X21, [X31 - 0x20]!
	0x033C6988 STP X20, X19, [X31 + 0x10]
	0x033C698C ADRP X20, 0x1017000
	0x033C6990 ADRP X21, 0xD2D000
	0x033C6994 ADRP X19, 0xD66000
	0x033C6998 LDRB W8, [X20 + 0x277]
	0x033C699C LDR X21, [X21 + 0x618]
	0x033C69A0 LDR X19, [X19 + 0x890]
	0x033C69A4 TBNZ X8, 0x0, 0x33C69C8
	0x033C69A8 ADRP X0, 0xD2D000
	0x033C69AC LDR X0, [X0 + 0x618]
	0x033C69B0 BL 0x1C16CF4
	0x033C69B4 ADRP X0, 0xD66000
	0x033C69B8 LDR X0, [X0 + 0x890]
	0x033C69BC BL 0x1C16CF4
	0x033C69C0 MOVZ W8, 0x1
	0x033C69C4 STRB W8, [X20 + 0x277]
	0x033C69C8 LDR X0, [X21]
	0x033C69CC MOVZ W1, 0x681
	0x033C69D0 BL 0x1C16D6C
	0x033C69D4 LDR X1, [X19]
	0x033C69D8 MOV X2, X31
	0x033C69DC MOV X19, X0
	0x033C69E0 BL 0x32C5BD8
	0x033C69E4 MOV X0, X19
	0x033C69E8 LDP X20, X19, [X31 + 0x10]
	0x033C69EC LDP X30, X21, [X31], #0x20
	0x033C69F0 RET
	0x033C69F4 STP X30, X21, [X31 - 0x20]!
	0x033C69F8 STP X20, X19, [X31 + 0x10]
	0x033C69FC ADRP X20, 0x1017000
	0x033C6A00 ADRP X21, 0xD2D000
	0x033C6A04 ADRP X19, 0xD66000
	0x033C6A08 LDRB W8, [X20 + 0x278]
	0x033C6A0C LDR X21, [X21 + 0x618]
	0x033C6A10 LDR X19, [X19 + 0x898]
	0x033C6A14 TBNZ X8, 0x0, 0x33C6A38
	0x033C6A18 ADRP X0, 0xD2D000
	0x033C6A1C LDR X0, [X0 + 0x618]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x1018000
	009 Move W8, [X20+619]
	010 Move X21, X1
	011 Move X19, X0
	012 Move [X31+8], X1
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0xD67000
	018 Move X0, [X0+2112]
	019 Call 0x1C17CF4
	020 Move X0, 0xD2E000
	021 Move X0, [X0+2512]
	022 Call 0x1C17CF4
	023 Move X0, 0xD36000
	024 Move X0, [X0+3168]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+619], W8
	028 Move X8, [X19]
	029 Move X0, X19
	030 Move X9, [X8+440]
	031 Move X1, [X8+448]
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Move X1, X31
	034 Move X2, X31
	035 Call MethodInfo.op_Equality, X0, X1
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {90}
	040 Compare X21, 0
	041 JumpIfEqual {75}
	042 Move X8, 0xD36000
	043 Move X8, [X8+3168]
	044 Move W1, [X21+24]
	045 Move X0, [X8]
	046 Call 0x1C17D6C
	047 Move X20, X0
	048 Move W22, 4
	049 Move W8, [X21+24]
	050 Subtract X23, X22, 4
	051 NotImplemented "Instruction CMP not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X0, [X21]
	054 Compare X0, 0
	055 JumpIfEqual {75}
	056 Call 0x1C26764
	057 Compare X20, 0
	058 JumpIfEqual {75}
	059 Move X21, X0
	060 Compare X0, 0
	061 JumpIfEqual {68}
	062 Move X8, [X20]
	063 Move X0, X21
	064 Move X1, [X8+64]
	065 Call 0x1C17E00
	066 Compare X0, 0
	067 JumpIfEqual {217}
	068 Move W8, [X20+24]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move [X20], X21
	071 Move X21, [X31+8]
	072 Add X22, X22, 1
	073 Compare X21, 0
	074 JumpIfNotEqual {49}
	075 Call 0x1C17F20
	076 Move X0, [X19+32]
	077 Compare X0, 0
	078 JumpIfEqual {75}
	079 Call 0x1C26764
	080 Move X8, [X19+104]
	081 Compare X8, 0
	082 JumpIfEqual {75}
	083 Compare X0, 0
	084 JumpIfEqual {75}
	085 Move X1, [X8+24]
	086 Move X2, X20
	087 Move X3, X31
	088 Call Type.GetMethod, X0, X1, X2
	089 Move [X19+88], X0
	090 Move X8, [X19+104]
	091 Move X20, [X19+32]
	092 Compare X8, 0
	093 JumpIfNotEqual {96}
	094 Move X0, X19
	095 Call Delegate.InitializeDelegateData, X0
	096 Move X8, [X19]
	097 Move X0, X19
	098 Move X9, [X8+440]
	099 Move X1, [X8+448]
	100 NotImplemented "Instruction BLR not yet implemented."
	101 Compare X0, 0
	102 JumpIfEqual {75}
	103 Move X1, X31
	104 Call MethodBase.get_IsStatic, X0
	105 Move TEMP, X0
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfNotEqual {150}
	109 Move X8, [X19+104]
	110 Compare X8, 0
	111 JumpIfEqual {75}
	112 Move W8, [X8+32]
	113 Compare W8, 0
	114 JumpIfEqual {197}
	115 Compare X21, 0
	116 JumpIfEqual {175}
	117 Move X9, 0xD67000
	118 Move W8, [X21+24]
	119 Move X9, [X9+2112]
	120 Add X0, X31, 8
	121 Add W1, W8, 1
	122 Move X2, [X9]
	123 Call Array.Resize, X0, X1
	124 Move X0, [X31+8]
	125 Compare X0, 0
	126 JumpIfEqual {75}
	127 Move W8, [X0+24]
	128 Move W3, 1
	129 Move W1, W31
	130 Move X2, X0
	131 Subtract W4, W8, 1
	132 Move X5, X31
	133 Call Array.Copy, X0, X1, X2, X3, X4
	134 Move X21, [X31+8]
	135 Compare X21, 0
	136 JumpIfEqual {75}
	137 Compare X20, 0
	138 JumpIfEqual {145}
	139 Move X8, [X21]
	140 Move X0, X20
	141 Move X1, [X8+64]
	142 Call 0x1C17E00
	143 Compare X0, 0
	144 JumpIfEqual {217}
	145 Move W8, [X21+24]
	146 Compare W8, 0
	147 JumpIfEqual {216}
	148 Move [X21+32], X20
	149 Move X20, X31
	150 Move X8, [X19+32]
	151 Compare X8, 0
	152 JumpIfNotEqual {197}
	153 Compare X21, 0
	154 JumpIfEqual {197}
	155 Move X8, [X21+24]
	156 Compare X8, 0
	157 JumpIfEqual {197}
	158 Compare W8, 0
	159 JumpIfEqual {216}
	160 Move X20, [X21+32]
	161 Subtract W4, W8, 1
	162 Move W1, 1
	163 Move X0, X21
	164 Move X2, X21
	165 Move W3, W31
	166 Move X5, X31
	167 Call Array.Copy, X0, X1, X2, X3, X4
	168 Move X9, 0xD67000
	169 Move W8, [X21+24]
	170 Move X9, [X9+2112]
	171 Add X0, X31, 8
	172 Subtract W1, W8, 1
	173 Move X2, [X9]
	174 Call Array.Resize, X0, X1
	175 Move X8, 0xD2E000
	176 Move X8, [X8+2512]
	177 Move W1, 1
	178 Move X0, [X8]
	179 Call 0x1C17D6C
	180 Compare X0, 0
	181 JumpIfEqual {75}
	182 Move X21, X0
	183 Compare X20, 0
	184 JumpIfEqual {191}
	185 Move X8, [X21]
	186 Move X0, X20
	187 Move X1, [X8+64]
	188 Call 0x1C17E00
	189 Compare X0, 0
	190 JumpIfEqual {217}
	191 Move W8, [X21+24]
	192 Compare W8, 0
	193 JumpIfEqual {216}
	194 Move [X21+32], X20
	195 Move X20, X31
	196 Move [X31+8], X21
	197 Move X8, [X19]
	198 Move X0, X19
	199 Move X9, [X8+440]
	200 Move X1, [X8+448]
	201 NotImplemented "Instruction BLR not yet implemented."
	202 Compare X0, 0
	203 JumpIfEqual {75}
	204 Move X2, [X31+8]
	205 Move X1, X20
	206 Move X3, X31
	207 Call MethodBase.Invoke, X0, X1, X2
	208 Move X20, [X31+48]
	209 Move X19, [X31+56]
	210 Move X22, [X31+32]
	211 Move X21, [X31+40]
	212 Move X30, [X31+16]
	213 Move X23, [X31+24]
	214 Add X31, X31, 64
	215 Return X0
	216 Call 0x1C17F28
	217 Call 0x1C17F44
	218 Move X1, X31
	219 Call 0x1C17DEC

Method: System.Object Clone()

Disassembly:
	0x033C6A20 BL 0x1C16CF4

ISIL:
	001 Call 0x1C26760
	002 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x033C6A28 LDR X0, [X0 + 0x898]
	0x033C6A2C BL 0x1C16CF4
	0x033C6A30 MOVZ W8, 0x1
	0x033C6A34 STRB W8, [X20 + 0x278]
	0x033C6A38 LDR X0, [X21]
	0x033C6A3C MOVZ W1, 0x834
	0x033C6A40 BL 0x1C16D6C
	0x033C6A44 LDR X1, [X19]
	0x033C6A48 MOV X2, X31
	0x033C6A4C MOV X19, X0
	0x033C6A50 BL 0x32C5BD8
	0x033C6A54 MOV X0, X19
	0x033C6A58 LDP X20, X19, [X31 + 0x10]
	0x033C6A5C LDP X30, X21, [X31], #0x20
	0x033C6A60 RET
	0x033C6A64 STP X30, X21, [X31 - 0x20]!
	0x033C6A68 STP X20, X19, [X31 + 0x10]
	0x033C6A6C ADRP X20, 0x1017000
	0x033C6A70 ADRP X21, 0xD2D000
	0x033C6A74 ADRP X19, 0xD66000
	0x033C6A78 LDRB W8, [X20 + 0x279]
	0x033C6A7C LDR X21, [X21 + 0x618]
	0x033C6A80 LDR X19, [X19 + 0x8A0]
	0x033C6A84 TBNZ X8, 0x0, 0x33C6AA8
	0x033C6A88 ADRP X0, 0xD2D000
	0x033C6A8C LDR X0, [X0 + 0x618]
	0x033C6A90 BL 0x1C16CF4
	0x033C6A94 ADRP X0, 0xD66000
	0x033C6A98 LDR X0, [X0 + 0x8A0]
	0x033C6A9C BL 0x1C16CF4
	0x033C6AA0 MOVZ W8, 0x1
	0x033C6AA4 STRB W8, [X20 + 0x279]
	0x033C6AA8 LDR X0, [X21]
	0x033C6AAC MOVZ W1, 0x5AA
	0x033C6AB0 BL 0x1C16D6C
	0x033C6AB4 LDR X1, [X19]
	0x033C6AB8 MOV X2, X31
	0x033C6ABC MOV X19, X0
	0x033C6AC0 BL 0x32C5BD8
	0x033C6AC4 MOV X0, X19
	0x033C6AC8 LDP X20, X19, [X31 + 0x10]
	0x033C6ACC LDP X30, X21, [X31], #0x20
	0x033C6AD0 RET
	0x033C6AD4 STP X30, X19, [X31 - 0x10]!
	0x033C6AD8 ADRP X0, 0xD2D000
	0x033C6ADC LDR X0, [X0 + 0xB40]
	0x033C6AE0 BL 0x1C16D08
	0x033C6AE4 BL 0x1C16F10
	0x033C6AE8 MOV X1, X31
	0x033C6AEC MOV X19, X0
	0x033C6AF0 BL 0x3380310
	0x033C6AF4 ADRP X0, 0xD66000
	0x033C6AF8 LDR X0, [X0 + 0x8A8]
	0x033C6AFC BL 0x1C16D08
	0x033C6B00 MOV X1, X0
	0x033C6B04 MOV X0, X19
	0x033C6B08 BL 0x1C16DEC
	0x033C6B0C STP X30, X19, [X31 - 0x10]!
	0x033C6B10 ADRP X0, 0xD2D000
	0x033C6B14 LDR X0, [X0 + 0xB40]
	0x033C6B18 BL 0x1C16D08
	0x033C6B1C BL 0x1C16F10
	0x033C6B20 MOV X1, X31
	0x033C6B24 MOV X19, X0
	0x033C6B28 BL 0x3380310
	0x033C6B2C ADRP X0, 0xD66000
	0x033C6B30 LDR X0, [X0 + 0x8B0]
	0x033C6B34 BL 0x1C16D08
	0x033C6B38 MOV X1, X0
	0x033C6B3C MOV X0, X19
	0x033C6B40 BL 0x1C16DEC
	0x033C6B44 STP X30, X19, [X31 - 0x10]!
	0x033C6B48 ADRP X0, 0xD2D000
	0x033C6B4C LDR X0, [X0 + 0xB40]
	0x033C6B50 BL 0x1C16D08
	0x033C6B54 BL 0x1C16F10
	0x033C6B58 MOV X1, X31
	0x033C6B5C MOV X19, X0
	0x033C6B60 BL 0x3380310
	0x033C6B64 ADRP X0, 0xD66000
	0x033C6B68 LDR X0, [X0 + 0x8B8]
	0x033C6B6C BL 0x1C16D08
	0x033C6B70 MOV X1, X0
	0x033C6B74 MOV X0, X19
	0x033C6B78 BL 0x1C16DEC
	0x033C6B7C STP X30, X19, [X31 - 0x10]!
	0x033C6B80 ADRP X0, 0xD2D000
	0x033C6B84 LDR X0, [X0 + 0xB40]
	0x033C6B88 BL 0x1C16D08
	0x033C6B8C BL 0x1C16F10
	0x033C6B90 MOV X1, X31
	0x033C6B94 MOV X19, X0
	0x033C6B98 BL 0x3380310
	0x033C6B9C ADRP X0, 0xD66000
	0x033C6BA0 LDR X0, [X0 + 0x8C0]
	0x033C6BA4 BL 0x1C16D08
	0x033C6BA8 MOV X1, X0
	0x033C6BAC MOV X0, X19
	0x033C6BB0 BL 0x1C16DEC
	0x033C6BB4 RET
	0x033C6BB8 STP X30, X21, [X31 - 0x20]!
	0x033C6BBC STP X20, X19, [X31 + 0x10]
	0x033C6BC0 ADRP X20, 0x1017000
	0x033C6BC4 LDRB W8, [X20 + 0x27C]
	0x033C6BC8 MOV X19, X0
	0x033C6BCC TBNZ X8, 0x0, 0x33C6C08
	0x033C6BD0 ADRP X0, 0xD54000
	0x033C6BD4 LDR X0, [X0 + 0xD80]
	0x033C6BD8 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1018000
	007 Move W8, [X21+620]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xD56000
	015 Move X0, [X0+2160]
	016 Call 0x1C17CF4
	017 Move X0, 0xD2E000
	018 Move X0, [X0+1728]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+620], W8
	022 Compare X20, 0
	023 JumpIfEqual {99}
	024 Move X8, 0xD56000
	025 Move X8, [X8+2160]
	026 Move X9, [X20]
	027 Move X8, [X8]
	028 Move W11, [X9+304]
	029 Move W10, [X8+304]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X9, [X9+200]
	032 Add X9, X9, X10
	033 NotImplemented "Instruction LDUR not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 NotImplemented "Instruction CSEL not yet implemented."
	036 Compare X20, 0
	037 JumpIfEqual {135}
	038 Move X8, [X20+32]
	039 Move X9, [X19+32]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X8, [X20]
	042 Move X0, X20
	043 Move X9, [X8+440]
	044 Move X1, [X8+448]
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move X8, [X19]
	047 Move X21, X0
	048 Move X0, X19
	049 Move X9, [X8+440]
	050 Move X1, [X8+448]
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move X1, X0
	053 Move X0, X21
	054 Move X2, X31
	055 Call MethodInfo.op_Equality, X0, X1
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {99}
	060 Move X9, [X20+104]
	061 Move X8, [X19+104]
	062 Compare X9, 0
	063 JumpIfEqual {106}
	064 Move X21, [X9+16]
	065 Compare X8, 0
	066 JumpIfEqual {117}
	067 Move X9, 0xD2E000
	068 Move X9, [X9+1728]
	069 Move X22, [X8+16]
	070 Move X0, [X9]
	071 Move W9, [X0+224]
	072 Compare W9, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Move X0, X21
	076 Move X1, X22
	077 Move X2, X31
	078 Call Type.op_Equality, X0, X1
	079 Move TEMP, X0
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfNotEqual {99}
	083 Move X8, [X20+104]
	084 Compare X8, 0
	085 JumpIfEqual {135}
	086 Move X9, [X19+104]
	087 Compare X9, 0
	088 JumpIfEqual {135}
	089 Move X0, [X8+24]
	090 Move X1, [X9+24]
	091 Move X20, [X31+32]
	092 Move X19, [X31+40]
	093 Move X22, [X31+16]
	094 Move X21, [X31+24]
	095 Move X2, X31
	096 Move X30, [X31+48]
	097 Call String.op_Equality, X0, X1
	098 Return X0
	099 Move W0, W31
	100 Move X20, [X31+32]
	101 Move X19, [X31+40]
	102 Move X22, [X31+16]
	103 Move X21, [X31+24]
	104 Move X30, [X31+48]
	105 Return X0
	106 Compare X8, 0
	107 JumpIfEqual {134}
	108 Move X9, 0xD2E000
	109 Move X9, [X9+1728]
	110 Move X19, [X8+16]
	111 Move X0, [X9]
	112 Move W9, [X0+224]
	113 Compare W9, 0
	114 JumpIfNotEqual {116}
	115 Call 0x1C17DFC
	116 Move X0, X19
	117 Move X8, 0xD2E000
	118 Move X8, [X8+1728]
	119 Move X0, [X8]
	120 Move W8, [X0+224]
	121 Compare W8, 0
	122 JumpIfNotEqual {124}
	123 Call 0x1C17DFC
	124 Move X0, X21
	125 Move X20, [X31+32]
	126 Move X19, [X31+40]
	127 Move X22, [X31+16]
	128 Move X21, [X31+24]
	129 Move X1, X31
	130 Move X2, X31
	131 Move X30, [X31+48]
	132 Call Type.op_Equality, X0, X1
	133 Return X0
	134 Move W0, 1
	135 Call 0x1C17F20

Method: System.Int32 GetHashCode()

Disassembly:
	0x033C6BDC ADRP X0, 0xD60000
	0x033C6BE0 LDR X0, [X0 + 0x3E0]
	0x033C6BE4 BL 0x1C16CF4
	0x033C6BE8 ADRP X0, 0xD56000
	0x033C6BEC LDR X0, [X0 + 0x4E8]
	0x033C6BF0 BL 0x1C16CF4
	0x033C6BF4 ADRP X0, 0xD2D000
	0x033C6BF8 LDR X0, [X0 + 0x6C0]
	0x033C6BFC BL 0x1C16CF4
	0x033C6C00 MOVZ W8, 0x1
	0x033C6C04 STRB W8, [X20 + 0x27C]
	0x033C6C08 ADRP X20, 0xD2D000
	0x033C6C0C LDR X20, [X20 + 0x6C0]
	0x033C6C10 CBZ X19, 0x33C6C7C
	0x033C6C14 LDR X9, [X19]
	0x033C6C18 LDR X8, [X20]
	0x033C6C1C LDRB W11, [X9 + 0x130]
	0x033C6C20 LDRB W10, [X8 + 0x130]
	0x033C6C24 CMP W11, W10
	0x033C6C28 B.CC 0x33C6C7C
	0x033C6C2C LDR X12, [X9 + 0xC8]
	0x033C6C30 ADD X13, X12, X10, 0x3, LSL
	0x033C6C34 LDUR X13, [X13 - 0x8]
	0x033C6C38 CMP X13, X8
	0x033C6C3C B.NE 0x33C6C68
	0x033C6C40 ADRP X13, 0xD56000
	0x033C6C44 LDR X13, [X13 + 0x4E8]
	0x033C6C48 LDR X13, [X13]
	0x033C6C4C LDRB W14, [X13 + 0x130]
	0x033C6C50 CMP W11, W14

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0]
	005 Move X19, X0
	006 Move X9, [X8+440]
	007 Move X1, [X8+448]
	008 NotImplemented "Instruction BLR not yet implemented."
	009 Move X1, X31
	010 Move X2, X31
	011 Move X20, X0
	012 Call MethodInfo.op_Inequality, X0, X1
	013 Move TEMP, X0
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfNotEqual {21}
	017 Compare X20, 0
	018 JumpIfEqual {38}
	019 Move X8, [X20]
	020 Move X0, X20
	021 Move X0, X19
	022 Call 0x1C26764
	023 Compare X0, 0
	024 JumpIfEqual {38}
	025 Move X8, [X0]
	026 Move X9, [X8+344]
	027 Move X1, [X8+352]
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Move W20, W0
	030 Move X0, [X19+32]
	031 Move X1, X31
	032 Call RuntimeHelpers.GetHashCode, X0
	033 Xor W0, W0, W20
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return X0
	038 Call 0x1C17F20

Method: System.Reflection.MethodInfo GetMethodImpl()

Disassembly:
	0x033C6C54 B.CC 0x33C6C68
	0x033C6C58 ADD X11, X12, X14, 0x3, LSL
	0x033C6C5C LDUR X11, [X11 - 0x8]
	0x033C6C60 CMP X11, X13
	0x033C6C64 B.EQ 0x33C6D78
	0x033C6C68 LDR X9, [X9 + 0xC8]
	0x033C6C6C ADD X9, X9, X10, 0x3, LSL
	0x033C6C70 LDUR X9, [X9 - 0x8]
	0x033C6C74 CMP X9, X8
	0x033C6C78 B.EQ 0x33C6D68
	0x033C6C7C ADRP X21, 0xD60000
	0x033C6C80 LDR X21, [X21 + 0x3E0]
	0x033C6C84 LDR X0, [X21]
	0x033C6C88 LDR W8, [X0 + 0xE0]
	0x033C6C8C CBNZ W8, 0x33C6C98
	0x033C6C90 BL 0x1C16DFC
	0x033C6C94 LDR X0, [X21]
	0x033C6C98 LDR X8, [X0 + 0xB8]
	0x033C6C9C MOV X1, X31
	0x033C6CA0 MOV X2, X31
	0x033C6CA4 LDR X0, [X8]
	0x033C6CA8 BL 0x32D5BF8
	0x033C6CAC TBZ X0, 0x0, 0x33C6D10
	0x033C6CB0 ADRP X8, 0xD54000
	0x033C6CB4 LDR X0, [X20]
	0x033C6CB8 LDR X8, [X8 + 0xD80]
	0x033C6CBC LDR W9, [X0 + 0xE0]
	0x033C6CC0 LDR X20, [X8]
	0x033C6CC4 CBNZ W9, 0x33C6CCC
	0x033C6CC8 BL 0x1C16DFC
	0x033C6CCC MOV X0, X20
	0x033C6CD0 MOV X1, X31
	0x033C6CD4 BL 0x338C698
	0x033C6CD8 CBZ X0, 0x33C6D80
	0x033C6CDC LDR X8, [X0]
	0x033C6CE0 LDR X9, [X8 + 0x2F8]
	0x033C6CE4 LDR X1, [X8 + 0x300]
	0x033C6CE8 BLR X9
	0x033C6CEC LDR X8, [X21]
	0x033C6CF0 MOV X20, X0
	0x033C6CF4 LDR W9, [X8 + 0xE0]
	0x033C6CF8 CBNZ W9, 0x33C6D08
	0x033C6CFC MOV X0, X8
	0x033C6D00 BL 0x1C16DFC
	0x033C6D04 LDR X8, [X21]
	0x033C6D08 LDR X8, [X8 + 0xB8]
	0x033C6D0C STR X20, [X8]
	0x033C6D10 CBZ X19, 0x33C6D80
	0x033C6D14 MOV X0, X19
	0x033C6D18 BL 0x1C25764
	0x033C6D1C CBZ X0, 0x33C6D80
	0x033C6D20 LDR X8, [X0]
	0x033C6D24 LDR X9, [X8 + 0x2F8]
	0x033C6D28 LDR X1, [X8 + 0x300]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1018000
	005 Move W8, [X20+621]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xD5F000
	012 Move X0, [X0+632]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+621], W8
	016 Move X0, [X19+88]
	017 Move X1, X31
	018 Move X2, X31
	019 Call MethodInfo.op_Inequality, X0, X1
	020 Move TEMP, X0
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {55}
	024 Move X0, [X19+40]
	025 Compare X0, 0
	026 JumpIfEqual {55}
	027 Move W8, [X19+112]
	028 Compare W8, 0
	029 JumpIfEqual {33}
	030 Move X0, X19
	031 Call 0x1C88838
	032 Move [X19+88], X0
	033 Move X1, X31
	034 Call RuntimeMethodInfo.GetMethodFromHandleNoGenericCheck, X0
	035 Compare X0, 0
	036 JumpIfEqual {32}
	037 Move X8, 0xD5F000
	038 Move X8, [X8+632]
	039 Move X9, [X0]
	040 Move X1, [X8]
	041 Move W10, [X9+304]
	042 Move W8, [X1+304]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X10, [X9+200]
	045 Subtract X9, X8, 1
	046 Move X10, [X10]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move [X19+88], X0
	049 Move X10, [X0]
	050 Move W11, [X10+304]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X8, [X10+200]
	053 Move X8, [X8]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X0, [X19+88]
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X30, [X31+32]
	059 Return X0
	060 Call 0x1C181E0

Method: System.Void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x033C6D38 LDR W9, [X8 + 0xE0]

ISIL:
No ISIL was generated
Method: System.Delegate[] GetInvocationList()

Disassembly:
	0x033C6F84 BLR X9
	0x033C6F88 TBNZ X0, 0x0, 0x33C7004
	0x033C6F8C LDR W8, [X20 + 0x18]
	0x033C6F90 ADD X21, X21, 0x1
	0x033C6F94 CMP W21, W8
	0x033C6F98 B.LT 0x33C6F54
	0x033C6F9C ADRP X8, 0xD2D000
	0x033C6FA0 LDR X8, [X8 + 0x9C8]
	0x033C6FA4 LDR X19, [X8]
	0x033C6FA8 LDR X8, [X19 + 0x38]
	0x033C6FAC CBNZ X8, 0x33C6FBC
	0x033C6FB0 MOV X0, X19
	0x033C6FB4 BL 0x1C5C6E0
	0x033C6FB8 LDR X8, [X19 + 0x38]
	0x033C6FBC LDR X0, [X8 + 0x10]
	0x033C6FC0 LDRB W8, [X0 + 0x135]
	0x033C6FC4 TBNZ X8, 0x0, 0x33C6FCC
	0x033C6FC8 BL 0x1C5C684
	0x033C6FCC LDR W8, [X0 + 0xE0]
	0x033C6FD0 CBNZ W8, 0x33C6FD8
	0x033C6FD4 BL 0x1C16DFC
	0x033C6FD8 LDR X8, [X19 + 0x38]
	0x033C6FDC LDR X0, [X8 + 0x10]
	0x033C6FE0 LDRB W8, [X0 + 0x135]
	0x033C6FE4 TBNZ X8, 0x0, 0x33C6FEC
	0x033C6FE8 BL 0x1C5C684
	0x033C6FEC LDR X8, [X0 + 0xB8]
	0x033C6FF0 LDR X20, [X8]
	0x033C6FF4 MOV X0, X20
	0x033C6FF8 LDP X20, X19, [X31 + 0x10]
	0x033C6FFC LDP X30, X21, [X31], #0x20
	0x033C7000 RET
	0x033C7004 LDR W8, [X20 + 0x18]
	0x033C7008 CMP W8, 0x1
	0x033C700C B.EQ 0x33C6FF4
	0x033C7010 ADRP X8, 0xD2C000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1018000
	006 Move X21, 0xD67000
	007 Move W8, [X20+622]
	008 Move X21, [X21+2136]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD67000
	015 Move X0, [X0+2136]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+622], W8
	019 Move X0, [X21]
	020 Move W1, 1
	021 Call 0x1C17D6C
	022 Compare X0, 0
	023 JumpIfEqual {43}
	024 Move X20, X0
	025 Compare X19, 0
	026 JumpIfEqual {33}
	027 Move X8, [X20]
	028 Move X0, X19
	029 Move X1, [X8+64]
	030 Call 0x1C17E00
	031 Compare X0, 0
	032 JumpIfEqual {45}
	033 Move W8, [X20+24]
	034 Compare W8, 0
	035 JumpIfEqual {44}
	036 Move [X20+32], X19
	037 Move X0, X20
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Return X0
	043 Call 0x1C17F20
	044 Call 0x1C17F28
	045 Call 0x1C17F44
	046 Move X1, X31
	047 Call 0x1C17DEC

Method: System.Delegate Combine(System.Delegate a, System.Delegate b)

Disassembly:
	0x033C1DE4 B 0x33C1C94
	0x033C1DE8 BL 0x1C87BC4
	0x033C1DEC CMP W0, 0x6
	0x033C1DF0 B.NE 0x33C1C8C
	0x033C1DF4 ADRP X8, 0xD6B000
	0x033C1DF8 LDR X8, [X8 + 0x680]
	0x033C1DFC B 0x33C1C94
	0x033C1E00 BL 0x1C87BC4
	0x033C1E04 CMP W0, 0x6
	0x033C1E08 B.NE 0x33C1E70
	0x033C1E0C LDR X0, [X23]
	0x033C1E10 LDR W8, [X0 + 0xE0]
	0x033C1E14 CBNZ W8, 0x33C1E1C
	0x033C1E18 BL 0x1C16DFC
	0x033C1E1C ADRP X8, 0xD6B000
	0x033C1E20 LDR X8, [X8 + 0x648]
	0x033C1E24 B 0x33C1E50
	0x033C1E28 ADRP X8, 0xD6B000
	0x033C1E2C LDR X8, [X8 + 0x6C0]
	0x033C1E30 B 0x33C1C94
	0x033C1E34 ADRP X8, 0xD6B000
	0x033C1E38 ADRP X9, 0xD6B000
	0x033C1E3C LDR X8, [X8 + 0x660]
	0x033C1E40 LDR X9, [X9 + 0x6A8]
	0x033C1E44 B 0x33C1E80
	0x033C1E48 ADRP X8, 0xD6B000
	0x033C1E4C LDR X8, [X8 + 0x6A0]
	0x033C1E50 LDR X1, [X8]
	0x033C1E54 MOV X0, X19
	0x033C1E58 LDP X20, X19, [X31 + 0x30]
	0x033C1E5C LDP X22, X21, [X31 + 0x20]
	0x033C1E60 LDP X24, X23, [X31 + 0x10]
	0x033C1E64 MOV X2, X31
	0x033C1E68 LDP X30, X25, [X31], #0x40
	0x033C1E6C B 0x32FCE04
	0x033C1E70 ADRP X8, 0xD6B000
	0x033C1E74 ADRP X9, 0xD6B000
	0x033C1E78 LDR X8, [X8 + 0x650]
	0x033C1E7C LDR X9, [X9 + 0x648]
	0x033C1E80 LDR X2, [X8]
	0x033C1E84 LDR X3, [X9]
	0x033C1E88 MOV X0, X21
	0x033C1E8C MOV X1, X19
	0x033C1E90 LDP X20, X19, [X31 + 0x30]
	0x033C1E94 LDP X22, X21, [X31 + 0x20]
	0x033C1E98 LDP X24, X23, [X31 + 0x10]
	0x033C1E9C LDP X30, X25, [X31], #0x40
	0x033C1EA0 B 0x33C1EEC
	0x033C1EA4 ADRP X0, 0xD3A000
	0x033C1EA8 LDR X0, [X0 + 0x578]
	0x033C1EAC BL 0x1C16D08
	0x033C1EB0 BL 0x1C16F10
	0x033C1EB4 MOV X19, X0
	0x033C1EB8 ADRP X0, 0xD6B000
	0x033C1EBC LDR X0, [X0 + 0x6E0]
	0x033C1EC0 BL 0x1C16D08
	0x033C1EC4 MOV X1, X0
	0x033C1EC8 MOV X0, X19
	0x033C1ECC MOV X2, X31
	0x033C1ED0 BL 0x3314A68
	0x033C1ED4 ADRP X0, 0xD6B000
	0x033C1ED8 LDR X0, [X0 + 0x6E8]
	0x033C1EDC BL 0x1C16D08
	0x033C1EE0 MOV X1, X0
	0x033C1EE4 MOV X0, X19
	0x033C1EE8 BL 0x1C16DEC
	0x033C1EEC STP X30, X25, [X31 - 0x40]!
	0x033C1EF0 STP X24, X23, [X31 + 0x10]
	0x033C1EF4 STP X22, X21, [X31 + 0x20]
	0x033C1EF8 STP X20, X19, [X31 + 0x30]
	0x033C1EFC ADRP X23, 0x101C000
	0x033C1F00 LDRB W8, [X23 + 0x229]
	0x033C1F04 MOV X19, X3
	0x033C1F08 MOV X22, X2
	0x033C1F0C MOV X20, X1
	0x033C1F10 MOV X21, X0
	0x033C1F14 TBNZ X8, 0x0, 0x33C1F74
	0x033C1F18 ADRP X0, 0xD32000
	0x033C1F1C LDR X0, [X0 + 0xE00]
	0x033C1F20 BL 0x1C16CF4
	0x033C1F24 ADRP X0, 0xD59000
	0x033C1F28 LDR X0, [X0 + 0x1D0]
	0x033C1F2C BL 0x1C16CF4
	0x033C1F30 ADRP X0, 0xD61000
	0x033C1F34 LDR X0, [X0 + 0xCC8]
	0x033C1F38 BL 0x1C16CF4
	0x033C1F3C ADRP X0, 0xD34000
	0x033C1F40 LDR X0, [X0 + 0x278]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x101D000
	007 Move W8, [X21+623]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD33000
	015 Move X0, [X0+1728]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+623], W8
	019 Compare X20, 0
	020 JumpIfEqual {57}
	021 Compare X19, 0
	022 JumpIfEqual {56}
	023 Move X0, X20
	024 Call 0x1C26764
	025 Move X21, X0
	026 Move X0, X19
	027 Call 0x1C26764
	028 Move X8, 0xD33000
	029 Move X8, [X8+1728]
	030 Move X22, X0
	031 Move X8, [X8]
	032 Move W9, [X8+224]
	033 Compare W9, 0
	034 JumpIfNotEqual {37}
	035 Move X0, X8
	036 Call 0x1C17DFC
	037 Move X0, X21
	038 Move X1, X22
	039 Move X2, X31
	040 Call Type.op_Inequality, X0, X1
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {64}
	045 Move X8, [X20]
	046 Move X0, X20
	047 Move X1, X19
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X3, [X8+488]
	051 Move X2, [X8+496]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X30, [X31+48]
	055 CallNoReturn X3
	056 Move X19, X20
	057 Move X0, X19
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X22, [X31+16]
	061 Move X21, [X31+24]
	062 Move X30, [X31+48]
	063 Return X0
	064 Move X0, X20
	065 Call 0x1C26764
	066 Compare X0, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17F20
	069 Move X8, [X0]
	070 Move X9, [X8+744]
	071 Move X1, [X8+752]
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Move X20, X0
	074 Move X0, X19
	075 Call 0x1C26764
	076 Move X19, X0
	077 Call 0x19913C0
	078 Move X8, [X19]
	079 Move X0, X19
	080 Move X9, [X8+744]
	081 Move X1, [X8+752]
	082 NotImplemented "Instruction BLR not yet implemented."
	083 Move X19, X0
	084 Move X0, 0xD6C000
	085 Move X0, [X0+1488]
	086 Call 0x1C17D08
	087 Move X1, X20
	088 Move X2, X19
	089 Move X3, X31
	090 Call String.Format, X0, X1, X2
	091 Move X19, X0
	092 Move X0, 0xD3B000
	093 Move X0, [X0+1400]
	094 Call 0x1C17D08
	095 Call 0x1C17F10
	096 Move X1, X19
	097 Move X2, X31
	098 Move X20, X0
	099 Call ArgumentException..ctor, X0, X1
	100 Move X0, 0xD6C000
	101 Move X0, [X0+1496]
	102 Call 0x1C17D08
	103 Move X1, X0
	104 Move X0, X20
	105 Call 0x1C17DEC

Method: System.Delegate Combine(System.Delegate[] delegates)

Disassembly:
	0x033C7014 LDR X8, [X8 + 0x9D0]
	0x033C7018 MOVZ W1, 0x1
	0x033C701C LDR X0, [X8]
	0x033C7020 BL 0x1C16D6C
	0x033C7024 LDR W8, [X20 + 0x18]
	0x033C7028 CMP W21, W8
	0x033C702C B.CS 0x33C7070
	0x033C7030 MOV X19, X0
	0x033C7034 CBZ X0, 0x33C706C
	0x033C7038 ADD X8, X20, X21, 0x3, LSL
	0x033C703C LDR X20, [X8 + 0x20]
	0x033C7040 CBZ X20, 0x33C7058
	0x033C7044 LDR X8, [X19]
	0x033C7048 MOV X0, X20
	0x033C704C LDR X1, [X8 + 0x40]
	0x033C7050 BL 0x1C16E00
	0x033C7054 CBZ X0, 0x33C7074
	0x033C7058 LDR W8, [X19 + 0x18]
	0x033C705C CBZ W8, 0x33C7070
	0x033C7060 STR X20, [X19 + 0x20]
	0x033C7064 MOV X20, X19
	0x033C7068 B 0x33C6FF4
	0x033C706C BL 0x1C16F20
	0x033C7070 BL 0x1C16F28
	0x033C7074 BL 0x1C16F44

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X0, 0
	006 JumpIfEqual {21}
	007 Move X8, [X0+24]
	008 Move X19, X0
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X20, X31
	011 Move X0, X31
	012 And X8, X8, 0
	013 Add X21, X19, 32
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X1, [X21]
	016 Call Delegate.Combine, X0, X1
	017 Move W8, [X19+24]
	018 Add X20, X20, 1
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X0, X31
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Return X0
	026 Call 0x1C17F28

Method: System.Delegate CombineImpl(System.Delegate d)

Disassembly:
	0x033C7078 MOV X1, X31
	0x033C707C BL 0x1C16DEC
	0x033C7080 STP X30, X21, [X31 - 0x20]!
	0x033C7084 STP X20, X19, [X31 + 0x10]
	0x033C7088 ADRP X20, 0x1016000
	0x033C708C LDRB W8, [X20 + 0x27E]
	0x033C7090 MOV X19, X0
	0x033C7094 TBNZ X8, 0x0, 0x33C70C4
	0x033C7098 ADRP X0, 0xD65000
	0x033C709C LDR X0, [X0 + 0x8C8]
	0x033C70A0 BL 0x1C16CF4
	0x033C70A4 ADRP X0, 0xD2C000
	0x033C70A8 LDR X0, [X0 + 0x9D0]
	0x033C70AC BL 0x1C16CF4
	0x033C70B0 ADRP X0, 0xD65000
	0x033C70B4 LDR X0, [X0 + 0x8D0]
	0x033C70B8 BL 0x1C16CF4
	0x033C70BC MOVZ W8, 0x1
	0x033C70C0 STRB W8, [X20 + 0x27E]
	0x033C70C4 CBZ X19, 0x33C71D4
	0x033C70C8 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0xD2F000
	005 Move X0, [X0+632]
	006 Call 0x1C17D08
	007 Move X8, [X0+184]
	008 Move X0, 0xD66000
	009 Move X19, [X8]
	010 Move X0, [X0+2144]
	011 Call 0x1C17D08
	012 Call 0x1C17F10
	013 Move X1, X19
	014 Move X2, X31
	015 Move X20, X0
	016 Call MulticastNotSupportedException..ctor, X0, X1
	017 Move X0, 0xD66000
	018 Move X0, [X0+2152]
	019 Call 0x1C17D08
	020 Move X1, X0
	021 Move X0, X20
	022 Call 0x1C17DEC

Method: System.Delegate Remove(System.Delegate source, System.Delegate value)

Disassembly:
	0x033C1FDC BL 0x32E57A8
	0x033C1FE0 TBZ X0, 0x0, 0x33C2194
	0x033C1FE4 ADRP X8, 0xD61000
	0x033C1FE8 LDR X8, [X8 + 0xCC8]
	0x033C1FEC LDR X0, [X8]
	0x033C1FF0 BL 0x1C16F10
	0x033C1FF4 MOV X21, X0
	0x033C1FF8 MOV X1, X23
	0x033C1FFC MOV X2, X31
	0x033C2000 BL 0x32E6824
	0x033C2004 CBZ X21, 0x33C21E0
	0x033C2008 LDR X8, [X21]
	0x033C200C LDP X9, X1, [X8 + 0x1F8]
	0x033C2010 MOV X0, X21
	0x033C2014 BLR X9
	0x033C2018 CBZ X0, 0x33C20C8
	0x033C201C MOV X1, X31
	0x033C2020 BL 0x322B8DC
	0x033C2024 MOV X23, X0
	0x033C2028 CBZ X0, 0x33C21DC
	0x033C202C MOVZ W1, 0x3D
	0x033C2030 MOV X0, X23
	0x033C2034 MOV X2, X31
	0x033C2038 BL 0x322BD98
	0x033C203C MOV W24, W0
	0x033C2040 CMP W0, 0x9
	0x033C2044 B.LT 0x33C2008
	0x033C2048 MOV X0, X23
	0x033C204C MOV W1, W31
	0x033C2050 MOV W2, W24
	0x033C2054 MOV X3, X31
	0x033C2058 BL 0x3228DE4
	0x033C205C MOV X1, X22
	0x033C2060 MOV X2, X31
	0x033C2064 BL 0x321BA08
	0x033C2068 TBZ X0, 0x0, 0x33C2008
	0x033C206C ADD W1, W24, 0x1
	0x033C2070 MOV X0, X23
	0x033C2074 MOV X2, X31
	0x033C2078 BL 0x322B484
	0x033C207C CBZ X0, 0x33C21EC
	0x033C2080 MOVZ W1, 0x22
	0x033C2084 MOV X2, X31
	0x033C2088 BL 0x322BA1C
	0x033C208C MOV X23, X0
	0x033C2090 CBZ X0, 0x33C21F0
	0x033C2094 ADRP X8, 0xD6A000
	0x033C2098 LDR X8, [X8 + 0x6F0]
	0x033C209C LDR X1, [X8]
	0x033C20A0 MOV X0, X23
	0x033C20A4 MOV X2, X31
	0x033C20A8 BL 0x322E96C
	0x033C20AC TBZ X0, 0x0, 0x33C20D8
	0x033C20B0 MOVZ W1, 0x6
	0x033C20B4 MOV X0, X23
	0x033C20B8 MOV X2, X31
	0x033C20BC BL 0x322B484
	0x033C20C0 MOV X23, X0
	0x033C20C4 B 0x33C20F4
	0x033C20C8 MOV X23, X31
	0x033C20CC MOV X22, X31
	0x033C20D0 MOVZ W24, 0xB
	0x033C20D4 B 0x33C2124
	0x033C20D8 ADRP X8, 0xD32000
	0x033C20DC LDR X8, [X8 + 0xEC8]
	0x033C20E0 LDR X1, [X8]
	0x033C20E4 MOV X0, X23
	0x033C20E8 MOV X2, X31
	0x033C20EC BL 0x322E96C
	0x033C20F0 TBNZ X0, 0x0, 0x33C2118
	0x033C20F4 LDR X0, [X25]
	0x033C20F8 LDR W8, [X0 + 0xE0]
	0x033C20FC CBNZ W8, 0x33C2104
	0x033C2100 BL 0x1C16DFC
	0x033C2104 MOV X0, X20
	0x033C2108 MOV X1, X23
	0x033C210C MOV X2, X31
	0x033C2110 BL 0x32FCE04
	0x033C2114 MOV X23, X0
	0x033C2118 MOV X22, X31
	0x033C211C MOVZ W24, 0xA
	0x033C2120 CBZ X21, 0x33C2184
	0x033C2124 ADRP X10, 0xD31000
	0x033C2128 LDR X8, [X21]
	0x033C212C LDR X10, [X10 + 0xE00]
	0x033C2130 LDRH W9, [X8 + 0x12E]
	0x033C2134 LDR X1, [X10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x101D000
	007 Move W8, [X21+624]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD33000
	015 Move X0, [X0+1728]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+624], W8
	019 Compare X20, 0
	020 JumpIfEqual {56}
	021 Compare X19, 0
	022 JumpIfEqual {56}
	023 Move X0, X20
	024 Call 0x1C26764
	025 Move X21, X0
	026 Move X0, X19
	027 Call 0x1C26764
	028 Move X8, 0xD32000
	029 Move X8, [X8+1728]
	030 Move X22, X0
	031 Move X8, [X8]
	032 Move W9, [X8+224]
	033 Compare W9, 0
	034 JumpIfNotEqual {37}
	035 Move X0, X8
	036 Call 0x1C17DFC
	037 Move X0, X21
	038 Move X1, X22
	039 Move X2, X31
	040 Call Type.op_Inequality, X0, X1
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {63}
	045 Move X8, [X20]
	046 Move X0, X20
	047 Move X1, X19
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X3, [X8+504]
	051 Move X2, [X8+512]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X30, [X31+48]
	055 CallNoReturn X3
	056 Move X0, X20
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X30, [X31+48]
	062 Return X0
	063 Move X0, X20
	064 Call 0x1C26764
	065 Compare X0, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17F20
	068 Move X8, [X0]
	069 Move X9, [X8+744]
	070 Move X1, [X8+752]
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move X20, X0
	073 Move X0, X19
	074 Call 0x1C26764
	075 Move X19, X0
	076 Call 0x19913C0
	077 Move X8, [X19]
	078 Move X0, X19
	079 Move X9, [X8+744]
	080 Move X1, [X8+752]
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Move X19, X0
	083 Move X0, 0xD6B000
	084 Move X0, [X0+1488]
	085 Call 0x1C17D08
	086 Move X1, X20
	087 Move X2, X19
	088 Move X3, X31
	089 Call String.Format, X0, X1, X2
	090 Move X19, X0
	091 Move X0, 0xD3A000
	092 Move X0, [X0+1400]
	093 Call 0x1C17D08
	094 Call 0x1C17F10
	095 Move X1, X19
	096 Move X2, X31
	097 Move X20, X0
	098 Call ArgumentException..ctor, X0, X1
	099 Move X0, 0xD6B000
	100 Move X0, [X0+1504]
	101 Call 0x1C17D08
	102 Move X1, X0
	103 Move X0, X20
	104 Call 0x1C17DEC

Method: System.Delegate RemoveImpl(System.Delegate d)

Disassembly:
	0x033C70CC MOV X1, X31
	0x033C70D0 BL 0x339702C
	0x033C70D4 MOV W20, W0
	0x033C70D8 TBNZ X0, 0xC, 0x33C70E8
	0x033C70DC TBNZ X20, 0xD, 0x33C7114
	0x033C70E0 MOV X19, X31
	0x033C70E4 B 0x33C71C4
	0x033C70E8 ADRP X8, 0xD2C000
	0x033C70EC LDR X8, [X8 + 0x9D0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move X19, X0
	005 Move X9, [X8+312]
	006 Move X2, [X8+320]
	007 NotImplemented "Instruction BLR not yet implemented."
	008 And W31, W0, 1
	009 NotImplemented "Instruction CSEL not yet implemented."
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return X0

Method: System.Boolean op_Equality(System.Delegate d1, System.Delegate d2)

Disassembly:
	0x033C70F0 ANDS W31, W20, 0x2000
	0x033C70F4 LDR X0, [X8]
	0x033C70F8 MOVZ W8, 0x1
	0x033C70FC CINC W1, W8, NE
	0x033C7100 BL 0x1C16D6C
	0x033C7104 MOV X19, X0
	0x033C7108 TBNZ X20, 0xD, 0x33C712C
	0x033C710C MOV W21, W31
	0x033C7110 B 0x33C7178
	0x033C7114 ADRP X8, 0xD2C000

ISIL:
	001 Or X8, X0, X1
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Compare X0, 0
	005 JumpIfEqual {12}
	006 Compare X1, 0
	007 JumpIfEqual {12}
	008 Move X8, [X0]
	009 Move X3, [X8+312]
	010 Move X2, [X8+320]
	011 CallNoReturn X3
	012 Move W0, W8
	013 Return X0

Method: System.Boolean op_Inequality(System.Delegate d1, System.Delegate d2)

Disassembly:
	0x033C7118 LDR X8, [X8 + 0x9D0]
	0x033C711C UBFM W1, W20, 0xD, 0xD
	0x033C7120 LDR X0, [X8]
	0x033C7124 BL 0x1C16D6C
	0x033C7128 MOV X19, X0
	0x033C712C ADRP X8, 0xD65000
	0x033C7130 LDR X8, [X8 + 0x8D0]
	0x033C7134 LDR X0, [X8]
	0x033C7138 BL 0x1C16F10
	0x033C713C MOV X1, X31
	0x033C7140 MOV X21, X0
	0x033C7144 BL 0x338FB68
	0x033C7148 CBZ X19, 0x33C71D4
	0x033C714C CBZ X21, 0x33C7164

ISIL:
	001 Or X8, X0, X1
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Compare X0, 0
	005 JumpIfEqual {15}
	006 Compare X1, 0
	007 JumpIfEqual {15}
	008 Move [X31-16], X30
	009 Move X8, [X0]
	010 Move X9, [X8+312]
	011 Move X2, [X8+320]
	012 NotImplemented "Instruction BLR not yet implemented."
	013 Move W8, W0
	014 Move X30, [X31+16]
	015 NotImplemented "Instruction ORN not yet implemented."
	016 And W0, W8, 1
	017 Return X0

Method: System.MulticastDelegate AllocDelegateLike_internal(System.Delegate d)

Disassembly:
	0x033C7150 LDR X8, [X19]

ISIL:
	001 Call 0x1C887F8
	002 Return X0

