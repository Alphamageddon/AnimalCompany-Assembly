Type: System.Span`1

Method: System.Void .ctor(T[] array)

Disassembly:
	0x025FBE44 UNIMPLEMENTED
	0x00000000 INVALID
	0x025FBE4C UNIMPLEMENTED
	0x025FBE50 UNIMPLEMENTED
	0x025FBE54 ORR V4.16B, V4.16B, V0.16B
	0x00000000 INVALID
	0x025FBE5C UNIMPLEMENTED
	0x025FBE60 UNIMPLEMENTED

ISIL:
	001 Compare X1, 0
	002 JumpIfEqual {8}
	003 Add X8, X1, 32
	004 Move [X0], X8
	005 Move X8, [X1+24]
	006 Move [X0+8], W8
	007 Return 
	008 Move [X0], X31
	009 Move [X0+8], X31
	010 Return 

Method: System.Void .ctor(T[] array, System.Int32 start, System.Int32 length)

Disassembly:
	0x025FBE64 FMOV W10, S5
	0x025FBE68 TBZ X10, 0x0, 0x25FBE74
	0x025FBE6C FMOV X10, D4
	0x025FBE70 STR W1, [X8, X10, LSL]
	0x025FBE74 UNIMPLEMENTED
	0x025FBE78 TBZ X10, 0x0, 0x25FBE84
	0x025FBE7C UNIMPLEMENTED
	0x025FBE80 STR W1, [X8, X10, LSL]
	0x025FBE84 ADD X11, X11, 0x2
	0x025FBE88 CMP X9, X11
	0x00000000 INVALID
	0x025FBE90 B.NE 0x25FBE50
	0x025FBE94 RET
	0x025FBE98 STP X30, X23, [X31 - 0x30]!
	0x025FBE9C STP X22, X21, [X31 + 0x10]
	0x025FBEA0 STP X20, X19, [X31 + 0x20]
	0x025FBEA4 MOV X21, X0
	0x025FBEA8 LDR X0, [X3 + 0x20]
	0x025FBEAC LDR W23, [X21 + 0x8]
	0x025FBEB0 MOV X20, X3
	0x025FBEB4 MOV X22, X2
	0x025FBEB8 LDRB W8, [X0 + 0x135]
	0x025FBEBC MOV X19, X1
	0x025FBEC0 TBNZ X8, 0x0, 0x25FBEC8
	0x025FBEC4 BL 0x1C5C684
	0x025FBEC8 CMP W23, W22
	0x025FBECC B.LS 0x25FBEE4
	0x025FBED0 LDP X20, X19, [X31 + 0x20]
	0x025FBED4 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W20, W3
	007 Move W21, W2
	008 Move X19, X0
	009 Compare X1, 0
	010 JumpIfEqual {21}
	011 Move W8, [X1+24]
	012 Move X22, X1
	013 Subtract W8, W8, W21
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X0, X31
	016 Call ThrowHelper.ThrowArgumentOutOfRangeException
	017 Add X8, X22, W21
	018 Add X8, X8, 32
	019 Move [X19], X8
	020 Move [X19+8], W20
	021 Or W8, W20, W21
	022 Compare W8, 0
	023 JumpIfEqual {26}
	024 Move X0, X31
	025 Call ThrowHelper.ThrowArgumentOutOfRangeException
	026 Move [X19], X31
	027 Move [X19+8], X31
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return 

Method: System.Void .ctor(System.Void* pointer, System.Int32 length)

Disassembly:
	0x025FBED8 MOV X0, X31
	0x025FBEDC LDP X30, X23, [X31], #0x30
	0x025FBEE0 B 0x339D5E4
	0x025FBEE4 LDR X0, [X20 + 0x20]
	0x025FBEE8 LDR X20, [X21]
	0x025FBEEC LDRSW X21, [X21 + 0x8]
	0x025FBEF0 LDRB W8, [X0 + 0x135]
	0x025FBEF4 TBNZ X8, 0x0, 0x25FBEFC
	0x025FBEF8 BL 0x1C5C684
	0x025FBEFC LDR X8, [X0 + 0xC0]
	0x025FBF00 MOV X0, X19
	0x025FBF04 MOV X1, X20
	0x025FBF08 MOV X2, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W19, W2
	006 Move X21, X1
	007 Move X20, X0
	008 Move TEMP, X2
	009 And TEMP, TEMP, -2147483648
	010 Compare TEMP, -2147483648
	011 JumpIfNotEqual {14}
	012 Move X0, X31
	013 Call ThrowHelper.ThrowArgumentOutOfRangeException
	014 Move [X20], X21
	015 Move [X20+8], W19
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X30, [X31+32]
	019 Move X21, [X31+40]
	020 Return 

Method: System.Void .ctor(ref T ptr, System.Int32 length)

Disassembly:
	0x025FBF0C LDR X3, [X8 + 0x78]
	0x025FBF10 LDP X20, X19, [X31 + 0x20]
	0x025FBF14 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X0], X1
	002 Move [X0+8], W2
	003 Return 

Method: T get_Item(System.Int32 index)

Disassembly:
	0x025FBF18 LDP X30, X23, [X31], #0x30
	0x025FBF1C B 0x21A0734
	0x025FBF20 STP X30, X23, [X31 - 0x30]!
	0x025FBF24 STP X22, X21, [X31 + 0x10]
	0x025FBF28 STP X20, X19, [X31 + 0x20]
	0x025FBF2C MOV X22, X0
	0x025FBF30 LDR X0, [X3 + 0x20]
	0x025FBF34 LDR W23, [X22 + 0x8]
	0x025FBF38 MOV X21, X3
	0x025FBF3C MOV X19, X2
	0x025FBF40 LDRB W8, [X0 + 0x135]
	0x025FBF44 MOV X20, X1
	0x025FBF48 TBNZ X8, 0x0, 0x25FBF50
	0x025FBF4C BL 0x1C5C684

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+8]
	005 Move X19, X0
	006 Move W20, W1
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move X0, X31
	009 Call ThrowHelper.ThrowIndexOutOfRangeException
	010 Move X8, [X19]
	011 Add X0, X8, W20
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Return X0

Method: T GetPinnableReference()

Disassembly:
	0x025FBF50 CMP W23, W19
	0x025FBF54 B.HI 0x25FBF88
	0x025FBF58 LDR X0, [X21 + 0x20]
	0x025FBF5C LDR X21, [X22]
	0x025FBF60 LDRSW X22, [X22 + 0x8]
	0x025FBF64 LDRB W8, [X0 + 0x135]

ISIL:
	001 Move W8, [X0+8]
	002 Compare W8, 0
	003 JumpIfEqual {6}
	004 Move X0, [X0]
	005 Return X0
	006 Move X0, X31
	007 Return X0

Method: System.Void Clear()

Disassembly:
	0x025FBF68 TBNZ X8, 0x0, 0x25FBF70
	0x025FBF6C BL 0x1C5C684
	0x025FBF70 LDR X8, [X0 + 0xC0]
	0x025FBF74 MOV X0, X20
	0x025FBF78 MOV X1, X21

ISIL:
	001 Move X8, [X0]
	002 NotImplemented "Instruction LDRSW not yet implemented."
	003 Move X2, X31
	004 Move X0, X8
	005 Call SpanHelpers.ClearWithoutReferences, X0, X1
	006 Return 

Method: System.Void Fill(T value)

Disassembly:
	0x025FBF7C MOV X2, X22
	0x025FBF80 LDR X3, [X8 + 0x78]
	0x025FBF84 BL 0x21A0734
	0x025FBF88 CMP W23, W19
	0x025FBF8C LDP X20, X19, [X31 + 0x20]
	0x025FBF90 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move W2, [X0+8]
	002 Compare W2, 0
	003 JumpIfEqual {8}
	004 Move X0, [X0]
	005 Move X3, X31
	006 Call Unsafe.InitBlockUnaligned, X0, X1, X2
	007 Return 
	008 Return 

Method: System.Void CopyTo(System.Span`1<T> destination)

Disassembly:
	0x025FBF94 CSET W0, LS
	0x025FBF98 LDP X30, X23, [X31], #0x30
	0x025FBF9C RET
	0x025FBFA0 STR X30, [X31 - 0x20]!
	0x025FBFA4 STP X20, X19, [X31 + 0x10]
	0x025FBFA8 LDR X8, [X2 + 0x20]
	0x025FBFAC MOV X19, X1
	0x025FBFB0 MOV X20, X0
	0x025FBFB4 LDRB W9, [X8 + 0x135]
	0x025FBFB8 TBNZ X9, 0x0, 0x25FBFC4
	0x025FBFBC MOV X0, X8
	0x025FBFC0 BL 0x1C5C684
	0x025FBFC4 AND X1, X19, 0x0
	0x025FBFC8 MOV X0, X20
	0x025FBFCC LDP X20, X19, [X31 + 0x10]
	0x025FBFD0 LDR X30, [X31], #0x20
	0x025FBFD4 RET
	0x025FBFD8 SUB X31, X31, 0x40
	0x025FBFDC STP X30, X23, [X31 + 0x10]
	0x025FBFE0 STP X22, X21, [X31 + 0x20]
	0x025FBFE4 STP X20, X19, [X31 + 0x30]
	0x025FBFE8 ADRP X21, 0x1DDE000
	0x025FBFEC LDRB W8, [X21 + 0xFDA]
	0x025FBFF0 MOV X20, X1
	0x025FBFF4 MOV X19, X0
	0x025FBFF8 TBNZ X8, 0x0, 0x25FC034
	0x025FBFFC ADRP X0, 0x1B1F000
	0x025FC000 LDR X0, [X0 + 0xD70]
	0x025FC004 BL 0x1C16CF4
	0x025FC008 ADRP X0, 0x1AF7000
	0x025FC00C LDR X0, [X0 + 0x758]
	0x025FC010 BL 0x1C16CF4
	0x025FC014 ADRP X0, 0x1AF7000
	0x025FC018 LDR X0, [X0 + 0x6C0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, X0
	008 Move X0, [X3+32]
	009 Move W23, [X21+8]
	010 Move X20, X3
	011 Move X22, X2
	012 Move W8, [X0+309]
	013 Move X19, X1
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {19}
	018 Call 0x1C5D684
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X20, [X31+32]
	021 Move X19, [X31+40]
	022 Move X22, [X31+16]
	023 Move X21, [X31+24]
	024 Move X0, X31
	025 Move X30, [X31+48]
	026 Move X23, [X31+56]
	027 Call ThrowHelper.ThrowArgumentException_DestinationTooShort
	028 Return 
	029 Move X0, [X20+32]
	030 Move X20, [X21]
	031 NotImplemented "Instruction LDRSW not yet implemented."
	032 Move W8, [X0+309]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {38}
	037 Call 0x1C5D684
	038 Move X8, [X0+192]
	039 Move X0, X19
	040 Move X1, X20
	041 Move X2, X21
	042 Move X3, [X8+120]
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X30, [X31+48]
	048 Move X23, [X31+56]
	049 Call 0x21A1720, X0, X1, X2
	050 Return 

Method: System.Boolean TryCopyTo(System.Span`1<T> destination)

Disassembly:
	0x025FC01C BL 0x1C16CF4
	0x025FC020 ADRP X0, 0x1B21000
	0x025FC024 LDR X0, [X0 + 0x300]
	0x025FC028 BL 0x1C16CF4
	0x025FC02C MOVZ W8, 0x1
	0x025FC030 STRB W8, [X21 + 0xFDA]
	0x025FC034 LDR X0, [X20 + 0x20]
	0x025FC038 ADRP X22, 0x1AF7000
	0x025FC03C LDRB W8, [X0 + 0x135]
	0x025FC040 LDR X22, [X22 + 0x6C0]
	0x025FC044 TBNZ X8, 0x0, 0x25FC04C
	0x025FC048 BL 0x1C5C684
	0x025FC04C LDR X8, [X22]
	0x025FC050 LDR X9, [X0 + 0xC0]
	0x025FC054 ADRP X23, 0x1B1E000
	0x025FC058 LDR W10, [X8 + 0xE0]
	0x025FC05C LDR X21, [X9 + 0x48]
	0x025FC060 LDR X23, [X23 + 0xD70]
	0x025FC064 CBNZ W10, 0x25FC070
	0x025FC068 MOV X0, X8
	0x025FC06C BL 0x1C16DFC
	0x025FC070 MOV X0, X21
	0x025FC074 MOV X1, X31
	0x025FC078 BL 0x338C698
	0x025FC07C LDR X8, [X23]
	0x025FC080 MOV X21, X0
	0x025FC084 MOV X1, X31
	0x025FC088 MOV X0, X8
	0x025FC08C BL 0x338C698
	0x025FC090 MOV X1, X0
	0x025FC094 MOV X0, X21
	0x025FC098 MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, X0
	008 Move X0, [X3+32]
	009 Move W23, [X22+8]
	010 Move X21, X3
	011 Move X19, X2
	012 Move W8, [X0+309]
	013 Move X20, X1
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {19}
	018 Call 0x1C5D684
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X0, [X21+32]
	021 Move X21, [X22]
	022 NotImplemented "Instruction LDRSW not yet implemented."
	023 Move W8, [X0+309]
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {29}
	028 Call 0x1C5D684
	029 Move X8, [X0+192]
	030 Move X0, X20
	031 Move X1, X21
	032 Move X2, X22
	033 Move X3, [X8+120]
	034 Call 0x21A1720, X0, X1, X2
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 NotImplemented "Instruction CSET not yet implemented."
	041 Move X30, [X31+48]
	042 Move X23, [X31+56]
	043 Return X0

Method: System.ReadOnlySpan`1<T> op_Implicit(System.Span`1<T> span)

Disassembly:
	0x025FC09C BL 0x3395194
	0x025FC0A0 TBZ X0, 0x0, 0x25FC0CC
	0x025FC0A4 LDR X1, [X19]
	0x025FC0A8 LDR W3, [X19 + 0x8]
	0x025FC0AC LDP X20, X19, [X31 + 0x30]
	0x025FC0B0 LDP X22, X21, [X31 + 0x20]
	0x025FC0B4 LDP X30, X23, [X31 + 0x10]
	0x025FC0B8 MOV X0, X31
	0x025FC0BC MOV W2, W31
	0x025FC0C0 MOV X4, X31
	0x025FC0C4 ADD X31, X31, 0x40
	0x025FC0C8 B 0x322EAD4
	0x025FC0CC LDR X0, [X20 + 0x20]
	0x025FC0D0 LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X2+32]
	005 Move X19, X1
	006 Move X20, X0
	007 Move W9, [X8+309]
	008 Move TEMP, X9
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {14}
	012 Move X0, X8
	013 Call 0x1C5D684
	014 And X1, X19, 0
	015 Move X0, X20
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X30, [X31+32]
	019 Return X0

Method: System.String ToString()

Disassembly:
	0x025FC0D4 TBNZ X8, 0x0, 0x25FC0DC
	0x025FC0D8 BL 0x1C5C684
	0x025FC0DC LDR X8, [X22]
	0x025FC0E0 LDR X9, [X0 + 0xC0]
	0x025FC0E4 LDR W10, [X8 + 0xE0]
	0x025FC0E8 LDR X20, [X9 + 0x48]
	0x025FC0EC CBNZ W10, 0x25FC0F8
	0x025FC0F0 MOV X0, X8
	0x025FC0F4 BL 0x1C16DFC
	0x025FC0F8 MOV X0, X20
	0x025FC0FC MOV X1, X31
	0x025FC100 BL 0x338C698
	0x025FC104 CBZ X0, 0x25FC168
	0x025FC108 LDR X8, [X0]
	0x025FC10C LDP X9, X1, [X8 + 0x1A8]
	0x025FC110 BLR X9
	0x025FC114 ADRP X9, 0x1AF7000
	0x025FC118 LDR W8, [X19 + 0x8]
	0x025FC11C LDR X9, [X9 + 0x758]
	0x025FC120 MOV X20, X0
	0x025FC124 ADD X1, X31, 0xC
	0x025FC128 STR W8, [X31 + 0xC]
	0x025FC12C LDR X0, [X9]
	0x025FC130 BL 0x1C16E04
	0x025FC134 ADRP X8, 0x1B21000
	0x025FC138 LDR X8, [X8 + 0x300]
	0x025FC13C MOV X2, X0
	0x025FC140 MOV X1, X20
	0x025FC144 MOV X3, X31
	0x025FC148 LDR X8, [X8]
	0x025FC14C MOV X0, X8
	0x025FC150 BL 0x3227BD4
	0x025FC154 LDP X20, X19, [X31 + 0x30]
	0x025FC158 LDP X22, X21, [X31 + 0x20]
	0x025FC15C LDP X30, X23, [X31 + 0x10]
	0x025FC160 ADD X31, X31, 0x40
	0x025FC164 RET
	0x025FC168 BL 0x1C16F20
	0x025FC16C STR X30, [X31 - 0x30]!
	0x025FC170 STP X22, X21, [X31 + 0x10]
	0x025FC174 STP X20, X19, [X31 + 0x20]
	0x025FC178 LDR W22, [X0 + 0x8]
	0x025FC17C MOV X20, X0
	0x025FC180 MOV W19, W1
	0x025FC184 MOV X21, X2
	0x025FC188 CMP W22, W1
	0x025FC18C B.CS 0x25FC19C
	0x025FC190 MOV X0, X31
	0x025FC194 BL 0x339D6EC
	0x025FC198 LDR W22, [X20 + 0x8]
	0x025FC19C LDR X0, [X21 + 0x20]
	0x025FC1A0 LDR X20, [X20]
	0x025FC1A4 LDRB W8, [X0 + 0x135]
	0x025FC1A8 TBNZ X8, 0x0, 0x25FC1B0
	0x025FC1AC BL 0x1C5C684
	0x025FC1B0 SUB W1, W22, W19
	0x025FC1B4 ADD X0, X20, W19, 0x2, SXTW
	0x025FC1B8 LDP X20, X19, [X31 + 0x20]
	0x025FC1BC LDP X22, X21, [X31 + 0x10]
	0x025FC1C0 LDR X30, [X31], #0x30
	0x025FC1C4 RET
	0x025FC1C8 STR X30, [X31 - 0x30]!
	0x025FC1CC STP X22, X21, [X31 + 0x10]
	0x025FC1D0 STP X20, X19, [X31 + 0x20]
	0x025FC1D4 LDR W8, [X0 + 0x8]
	0x025FC1D8 MOV X21, X3
	0x025FC1DC MOV X22, X0
	0x025FC1E0 MOV W19, W1
	0x025FC1E4 SUBS W8, W8, W1
	0x025FC1E8 MOV W20, W2
	0x025FC1EC B.CC 0x25FC1F8
	0x025FC1F0 CMP W8, W20
	0x025FC1F4 B.CS 0x25FC200
	0x025FC1F8 MOV X0, X31
	0x025FC1FC BL 0x339D6EC
	0x025FC200 LDR X0, [X21 + 0x20]
	0x025FC204 LDR X21, [X22]
	0x025FC208 LDRB W8, [X0 + 0x135]
	0x025FC20C TBNZ X8, 0x0, 0x25FC214
	0x025FC210 BL 0x1C5C684
	0x025FC214 ADD X0, X21, W19, 0x2, SXTW
	0x025FC218 MOV W1, W20
	0x025FC21C LDP X20, X19, [X31 + 0x20]
	0x025FC220 LDP X22, X21, [X31 + 0x10]
	0x025FC224 LDR X30, [X31], #0x30
	0x025FC228 RET
	0x025FC22C STR X30, [X31 - 0x30]!
	0x025FC230 STP X22, X21, [X31 + 0x10]
	0x025FC234 STP X20, X19, [X31 + 0x20]
	0x025FC238 MOV X19, X0
	0x025FC23C LDR X0, [X1 + 0x20]
	0x025FC240 LDR W21, [X19 + 0x8]
	0x025FC244 ADD X8, X0, 0x135
	0x025FC248 LDRH W8, [X8]
	0x025FC24C CBZ W21, 0x25FC2B8
	0x025FC250 MOV X20, X1
	0x025FC254 TBNZ X8, 0x0, 0x25FC25C
	0x025FC258 BL 0x1C5C684
	0x025FC25C LDR X8, [X0 + 0xC0]
	0x025FC260 LDR X0, [X8 + 0xA0]
	0x025FC264 LDRB W8, [X0 + 0x135]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x1DDE000
	009 Move W8, [X21+4056]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x1B1F000
	017 Move X0, [X0+3440]
	018 Call 0x1C17CF4
	019 Move X0, 0x1AF8000
	020 Move X0, [X0+1880]
	021 Call 0x1C17CF4
	022 Move X0, 0x1AF8000
	023 Move X0, [X0+1728]
	024 Call 0x1C17CF4
	025 Move X0, 0x1B22000
	026 Move X0, [X0+768]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+4056], W8
	030 Move X0, [X20+32]
	031 Move X22, 0x1AF8000
	032 Move W8, [X0+309]
	033 Move X22, [X22+1728]
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {39}
	038 Call 0x1C5D684
	039 Move X8, [X22]
	040 Move X9, [X0+192]
	041 Move X23, 0x1B1F000
	042 Move W10, [X8+224]
	043 Move X21, [X9+72]
	044 Move X23, [X23+3440]
	045 Compare W10, 0
	046 JumpIfNotEqual {49}
	047 Move X0, X8
	048 Call 0x1C17DFC
	049 Move X0, X21
	050 Move X1, X31
	051 Call Type.GetTypeFromHandle, X0
	052 Move X8, [X23]
	053 Move X21, X0
	054 Move X1, X31
	055 Move X0, X8
	056 Call Type.GetTypeFromHandle, X0
	057 Move X1, X0
	058 Move X0, X21
	059 Move X2, X31
	060 Call Type.op_Equality, X0, X1
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {79}
	065 Move X1, [X19]
	066 Move W3, [X19+8]
	067 Move X20, [X31+48]
	068 Move X19, [X31+56]
	069 Move X22, [X31+32]
	070 Move X21, [X31+40]
	071 Move X30, [X31+16]
	072 Move X23, [X31+24]
	073 Move X0, X31
	074 Move W2, W31
	075 Move X4, X31
	076 Add X31, X31, 64
	077 Call String.CreateString, X0, X1, X2, X3
	078 Return X0
	079 Move X0, [X20+32]
	080 Move W8, [X0+309]
	081 Move TEMP, X8
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfEqual {86}
	085 Call 0x1C5D684
	086 Move X8, [X22]
	087 Move X9, [X0+192]
	088 Move W10, [X8+224]
	089 Move X20, [X9+72]
	090 Compare W10, 0
	091 JumpIfNotEqual {94}
	092 Move X0, X8
	093 Call 0x1C17DFC
	094 Move X0, X20
	095 Move X1, X31
	096 Call Type.GetTypeFromHandle, X0
	097 Compare X0, 0
	098 JumpIfEqual {127}
	099 Move X8, [X0]
	100 Move X9, [X8+424]
	101 Move X1, [X8+432]
	102 NotImplemented "Instruction BLR not yet implemented."
	103 Move X9, 0x1AF8000
	104 Move W8, [X19+8]
	105 Move X9, [X9+1880]
	106 Move X20, X0
	107 Add X1, X31, 12
	108 Move [X31+12], W8
	109 Move X0, [X9]
	110 Call 0x1C17E04
	111 Move X8, 0x1B22000
	112 Move X8, [X8+768]
	113 Move X2, X0
	114 Move X1, X20
	115 Move X3, X31
	116 Move X8, [X8]
	117 Move X0, X8
	118 Call String.Format, X0, X1, X2
	119 Move X20, [X31+48]
	120 Move X19, [X31+56]
	121 Move X22, [X31+32]
	122 Move X21, [X31+40]
	123 Move X30, [X31+16]
	124 Move X23, [X31+24]
	125 Add X31, X31, 64
	126 Return X0
	127 Call 0x1C17F20

Method: System.Span`1<T> Slice(System.Int32 start)

Disassembly:
	0x025FC268 TBNZ X8, 0x0, 0x25FC270
	0x025FC26C BL 0x1C5C684
	0x025FC270 MOV W1, W21
	0x025FC274 BL 0x1C16D6C
	0x025FC278 CBZ X0, 0x25FC328
	0x025FC27C MOV X21, X0
	0x025FC280 LDR X0, [X20 + 0x20]
	0x025FC284 LDR X20, [X19]
	0x025FC288 LDRSW X19, [X19 + 0x8]
	0x025FC28C ADD X22, X21, 0x20
	0x025FC290 LDRB W8, [X0 + 0x135]
	0x025FC294 TBNZ X8, 0x0, 0x25FC29C
	0x025FC298 BL 0x1C5C684
	0x025FC29C LDR X8, [X0 + 0xC0]
	0x025FC2A0 MOV X0, X22
	0x025FC2A4 MOV X1, X20
	0x025FC2A8 MOV X2, X19
	0x025FC2AC LDR X3, [X8 + 0x78]
	0x025FC2B0 BL 0x21A0734
	0x025FC2B4 B 0x25FC314
	0x025FC2B8 TBNZ X8, 0x0, 0x25FC2C0
	0x025FC2BC BL 0x1C5C684
	0x025FC2C0 LDR X8, [X0 + 0xC0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W22, [X0+8]
	007 Move X20, X0
	008 Move W19, W1
	009 Move X21, X2
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move X0, X31
	012 Call ThrowHelper.ThrowArgumentOutOfRangeException
	013 Move W22, [X20+8]
	014 Move X0, [X21+32]
	015 Move X20, [X20]
	016 Move W8, [X0+309]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {22}
	021 Call 0x1C5D684
	022 Subtract W1, W22, W19
	023 Add X0, X20, W19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Return X0

Method: System.Span`1<T> Slice(System.Int32 start, System.Int32 length)

Disassembly:
	0x025FC2C4 LDR X19, [X8 + 0x98]
	0x025FC2C8 LDR X8, [X19 + 0x38]
	0x025FC2CC CBNZ X8, 0x25FC2DC
	0x025FC2D0 MOV X0, X19
	0x025FC2D4 BL 0x1C5C6E0
	0x025FC2D8 LDR X8, [X19 + 0x38]
	0x025FC2DC LDR X0, [X8 + 0x10]
	0x025FC2E0 LDRB W8, [X0 + 0x135]
	0x025FC2E4 TBNZ X8, 0x0, 0x25FC2EC
	0x025FC2E8 BL 0x1C5C684
	0x025FC2EC LDR W8, [X0 + 0xE0]
	0x025FC2F0 CBNZ W8, 0x25FC2F8
	0x025FC2F4 BL 0x1C16DFC
	0x025FC2F8 LDR X8, [X19 + 0x38]
	0x025FC2FC LDR X0, [X8 + 0x10]
	0x025FC300 LDRB W8, [X0 + 0x135]
	0x025FC304 TBNZ X8, 0x0, 0x25FC30C
	0x025FC308 BL 0x1C5C684
	0x025FC30C LDR X8, [X0 + 0xB8]
	0x025FC310 LDR X21, [X8]
	0x025FC314 MOV X0, X21
	0x025FC318 LDP X20, X19, [X31 + 0x20]
	0x025FC31C LDP X22, X21, [X31 + 0x10]
	0x025FC320 LDR X30, [X31], #0x30
	0x025FC324 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W8, [X0+8]
	007 Move X21, X3
	008 Move X22, X0
	009 Move W19, W1
	010 Subtract W8, W8, W1
	011 Move W20, W2
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X0, X31
	014 Call ThrowHelper.ThrowArgumentOutOfRangeException
	015 Move X0, [X21+32]
	016 Move X21, [X22]
	017 Move W8, [X0+309]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {23}
	022 Call 0x1C5D684
	023 Add X0, X21, W19
	024 Move W1, W20
	025 Move X20, [X31+32]
	026 Move X19, [X31+40]
	027 Move X22, [X31+16]
	028 Move X21, [X31+24]
	029 Move X30, [X31+48]
	030 Return X0

Method: T[] ToArray()

Disassembly:
	0x025FC328 BL 0x1C16F20
	0x025FC32C LDR W0, [X0 + 0x8]
	0x025FC330 RET
	0x025FC334 STR X30, [X31 - 0x20]!
	0x025FC338 STP X20, X19, [X31 + 0x10]
	0x025FC33C ADRP X0, 0x1AF7000
	0x025FC340 LDR X0, [X0 + 0xB40]
	0x025FC344 MOV X19, X2
	0x025FC348 BL 0x1C16D08
	0x025FC34C BL 0x1C16F10
	0x025FC350 MOV X20, X0
	0x025FC354 ADRP X0, 0x1B21000
	0x025FC358 LDR X0, [X0 + 0x90]
	0x025FC35C BL 0x1C16D08
	0x025FC360 MOV X1, X0
	0x025FC364 MOV X0, X20
	0x025FC368 MOV X2, X31
	0x025FC36C BL 0x3379A44
	0x025FC370 MOV X0, X20
	0x025FC374 MOV X1, X19
	0x025FC378 BL 0x1C16DEC
	0x025FC37C STR X30, [X31 - 0x20]!
	0x025FC380 STP X20, X19, [X31 + 0x10]
	0x025FC384 ADRP X0, 0x1AF7000
	0x025FC388 LDR X0, [X0 + 0xB40]
	0x025FC38C MOV X19, X1
	0x025FC390 BL 0x1C16D08
	0x025FC394 BL 0x1C16F10
	0x025FC398 MOV X20, X0
	0x025FC39C ADRP X0, 0x1B21000
	0x025FC3A0 LDR X0, [X0 + 0x98]
	0x025FC3A4 BL 0x1C16D08
	0x025FC3A8 MOV X1, X0
	0x025FC3AC MOV X0, X20
	0x025FC3B0 MOV X2, X31
	0x025FC3B4 BL 0x3379A44
	0x025FC3B8 MOV X0, X20
	0x025FC3BC MOV X1, X19
	0x025FC3C0 BL 0x1C16DEC
	0x025FC3C4 STP X30, X19, [X31 - 0x10]!
	0x025FC3C8 LDR X8, [X1 + 0x20]
	0x025FC3CC MOV X19, X0
	0x025FC3D0 LDRB W9, [X8 + 0x135]
	0x025FC3D4 TBNZ X9, 0x0, 0x25FC3E0
	0x025FC3D8 MOV X0, X8
	0x025FC3DC BL 0x1C5C684
	0x025FC3E0 CBZ X19, 0x25FC3F0
	0x025FC3E4 LDR W1, [X19 + 0x18]
	0x025FC3E8 ADD X0, X19, 0x20
	0x025FC3EC B 0x25FC3F8
	0x025FC3F0 MOV X0, X31
	0x025FC3F4 MOV X1, X31
	0x025FC3F8 LDP X30, X19, [X31], #0x10
	0x025FC3FC RET
	0x025FC400 CBZ X1, 0x25FC418
	0x025FC404 ADD X8, X1, 0x20
	0x025FC408 STR X8, [X0]
	0x025FC40C LDR X8, [X1 + 0x18]
	0x025FC410 STR W8, [X0 + 0x8]
	0x025FC414 RET
	0x025FC418 STP X31, X31, [X0]
	0x025FC41C RET
	0x025FC420 STR X30, [X31 - 0x30]!
	0x025FC424 STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X0
	007 Move X0, [X1+32]
	008 Move W21, [X19+8]
	009 Add X8, X0, 309
	010 NotImplemented "Instruction LDRH not yet implemented."
	011 Compare W21, 0
	012 JumpIfEqual {48}
	013 Move X20, X1
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {19}
	018 Call 0x1C5D684
	019 Move X8, [X0+192]
	020 Move X0, [X8+160]
	021 Move W8, [X0+309]
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {27}
	026 Call 0x1C5D684
	027 Move W1, W21
	028 Call 0x1C17D6C
	029 Compare X0, 0
	030 JumpIfEqual {89}
	031 Move X21, X0
	032 Move X0, [X20+32]
	033 Move X20, [X19]
	034 NotImplemented "Instruction LDRSW not yet implemented."
	035 Add X22, X21, 32
	036 Move W8, [X0+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {42}
	041 Call 0x1C5D684
	042 Move X8, [X0+192]
	043 Move X0, X22
	044 Move X1, X20
	045 Move X2, X19
	046 Move X3, [X8+120]
	047 Call 0x21A1720, X0, X1, X2
	048 Move TEMP, X8
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {53}
	052 Call 0x1C5D684
	053 Move X8, [X0+192]
	054 Move X19, [X8+152]
	055 Move X8, [X19+56]
	056 Compare X8, 0
	057 JumpIfNotEqual {61}
	058 Move X0, X19
	059 Call 0x1C5D6E0
	060 Move X8, [X19+56]
	061 Move X0, [X8+16]
	062 Move W8, [X0+309]
	063 Move TEMP, X8
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfEqual {68}
	067 Call 0x1C5D684
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move X8, [X19+56]
	073 Move X0, [X8+16]
	074 Move W8, [X0+309]
	075 Move TEMP, X8
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfEqual {80}
	079 Call 0x1C5D684
	080 Move X8, [X0+184]
	081 Move X21, [X8]
	082 Move X0, X21
	083 Move X20, [X31+32]
	084 Move X19, [X31+40]
	085 Move X22, [X31+16]
	086 Move X21, [X31+24]
	087 Move X30, [X31+48]
	088 Return X0
	089 Call 0x1C17F20

Method: System.Int32 get_Length()

Disassembly:
	0x025FC428 STP X20, X19, [X31 + 0x20]
	0x025FC42C MOV W20, W3

ISIL:
	001 Move W0, [X0+8]
	002 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x025FC430 MOV W21, W2
	0x025FC434 MOV X19, X0
	0x025FC438 CBZ X1, 0x25FC470
	0x025FC43C LDR W8, [X1 + 0x18]
	0x025FC440 MOV X22, X1
	0x025FC444 SUBS W8, W8, W21
	0x025FC448 B.CC 0x25FC454
	0x025FC44C CMP W8, W20
	0x025FC450 B.CS 0x25FC45C
	0x025FC454 MOV X0, X31
	0x025FC458 BL 0x339D6EC
	0x025FC45C ADD X8, X22, W21, 0x1, SXTW
	0x025FC460 ADD X8, X8, 0x20
	0x025FC464 STR X8, [X19]
	0x025FC468 STR W20, [X19 + 0x8]
	0x025FC46C B 0x25FC484
	0x025FC470 ORR W8, W20, W21, 0x0
	0x025FC474 CBZ W8, 0x25FC480

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0x1AF8000
	005 Move X0, [X0+2880]
	006 Move X19, X2
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X20, X0
	010 Move X0, 0x1B22000
	011 Move X0, [X0+144]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X20
	015 Move X2, X31
	016 Call NotSupportedException..ctor, X0, X1
	017 Move X0, X20
	018 Move X1, X19
	019 Call 0x1C17DEC

Method: System.Int32 GetHashCode()

Disassembly:
	0x025FC478 MOV X0, X31
	0x025FC47C BL 0x339D6EC
	0x025FC480 STP X31, X31, [X19]
	0x025FC484 LDP X20, X19, [X31 + 0x20]
	0x025FC488 LDP X22, X21, [X31 + 0x10]
	0x025FC48C LDR X30, [X31], #0x30
	0x025FC490 RET
	0x025FC494 STP X30, X21, [X31 - 0x20]!
	0x025FC498 STP X20, X19, [X31 + 0x10]
	0x025FC49C MOV W19, W2
	0x025FC4A0 MOV X21, X1
	0x025FC4A4 MOV X20, X0
	0x025FC4A8 TBZ X2, 0x1F, 0x25FC4B4
	0x025FC4AC MOV X0, X31
	0x025FC4B0 BL 0x339D6EC
	0x025FC4B4 STR X21, [X20]
	0x025FC4B8 STR W19, [X20 + 0x8]
	0x025FC4BC LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0x1AF8000
	005 Move X0, [X0+2880]
	006 Move X19, X1
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X20, X0
	010 Move X0, 0x1B22000
	011 Move X0, [X0+152]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X20
	015 Move X2, X31
	016 Call NotSupportedException..ctor, X0, X1
	017 Move X0, X20
	018 Move X1, X19
	019 Call 0x1C17DEC

Method: System.Span`1<T> op_Implicit(T[] array)

Disassembly:
	0x025FC4C0 LDP X30, X21, [X31], #0x20
	0x025FC4C4 RET
	0x025FC4C8 STR X1, [X0]
	0x025FC4CC STR W2, [X0 + 0x8]
	0x025FC4D0 RET
	0x025FC4D4 STR X30, [X31 - 0x20]!
	0x025FC4D8 STP X20, X19, [X31 + 0x10]
	0x025FC4DC LDR W8, [X0 + 0x8]
	0x025FC4E0 MOV X19, X0
	0x025FC4E4 MOV W20, W1
	0x025FC4E8 CMP W8, W1
	0x025FC4EC B.HI 0x25FC4F8
	0x025FC4F0 MOV X0, X31
	0x025FC4F4 BL 0x339D674
	0x025FC4F8 LDR X8, [X19]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X1+32]
	004 Move X19, X0
	005 Move W9, [X8+309]
	006 Move TEMP, X9
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfEqual {12}
	010 Move X0, X8
	011 Call 0x1C5D684
	012 Compare X19, 0
	013 JumpIfEqual {16}
	014 Move W1, [X19+24]
	015 Add X0, X19, 32
	016 Move X0, X31
	017 Move X1, X31
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 Return X0

