Type: System.Array/SorterObjectArray

Method: System.Void .ctor(System.Object[] keys, System.Object[] items, System.Collections.IComparer comparer)

Disassembly:
	0x033A458C B.EQ 0x33A4704
	0x033A4590 LDR X0, [X20]
	0x033A4594 CBZ X0, 0x33A4718
	0x033A4598 LDR X22, [X20 + 0x10]
	0x033A459C MOV W1, W21
	0x033A45A0 MOV X2, X31
	0x033A45A4 BL 0x3395BDC
	0x033A45A8 LDR X8, [X20]
	0x033A45AC CBZ X8, 0x33A4718
	0x033A45B0 MOV X23, X0
	0x033A45B4 MOV X0, X8
	0x033A45B8 MOV W1, W19
	0x033A45BC MOV X2, X31
	0x033A45C0 BL 0x3395BDC
	0x033A45C4 CBZ X22, 0x33A4718
	0x033A45C8 ADRP X10, 0xD79000
	0x033A45CC LDR X8, [X22]
	0x033A45D0 LDR X10, [X10 + 0x918]
	0x033A45D4 MOV X24, X0
	0x033A45D8 LDRH W9, [X8 + 0x12E]
	0x033A45DC LDR X1, [X10]
	0x033A45E0 CBZ X9, 0x33A4604
	0x033A45E4 LDR X10, [X8 + 0xB0]
	0x033A45E8 ADD X10, X10, 0x8
	0x033A45EC LDUR X11, [X10 - 0x8]
	0x033A45F0 CMP X11, X1
	0x033A45F4 B.EQ 0x33A4614
	0x033A45F8 SUBS X9, X9, 0x1
	0x033A45FC ADD X10, X10, 0x10
	0x033A4600 B.NE 0x33A45EC
	0x033A4604 MOV X0, X22

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x103A000
	008 Move W8, [X23+319]
	009 Move X22, X3
	010 Move X19, X2
	011 Move X20, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xD79000
	018 Move X0, [X0+3376]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+319], W8
	022 Compare X22, 0
	023 JumpIfNotEqual {34}
	024 Move X22, 0xD79000
	025 Move X22, [X22+3376]
	026 Move X0, [X22]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1C17DFC
	031 Move X0, [X22]
	032 Move X8, [X0+184]
	033 Move X22, [X8]
	034 Move [X21], X20
	035 Move [X21+8], X19
	036 Move [X21+16], X22
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X30, [X31+48]
	042 Move X23, [X31+56]
	043 Return 

Method: System.Void SwapIfGreaterWithItems(System.Int32 a, System.Int32 b)

Disassembly:
	0x033A4608 MOV W2, W31
	0x033A460C BL 0x1C5C788
	0x033A4610 B 0x33A4620
	0x033A4614 LDRSW X9, [X10]
	0x033A4618 ADD X8, X8, X9, 0x4, LSL
	0x033A461C ADD X0, X8, 0x138
	0x033A4620 LDP X8, X3, [X0]
	0x033A4624 MOV X0, X22
	0x033A4628 MOV X1, X23
	0x033A462C MOV X2, X24
	0x033A4630 BLR X8
	0x033A4634 CMP W0, 0x1
	0x033A4638 B.LT 0x33A4704
	0x033A463C LDR X0, [X20]
	0x033A4640 CBZ X0, 0x33A4718
	0x033A4644 MOV W1, W21
	0x033A4648 MOV X2, X31
	0x033A464C BL 0x3395BDC
	0x033A4650 LDR X23, [X20]
	0x033A4654 CBZ X23, 0x33A4718
	0x033A4658 MOV X22, X0
	0x033A465C MOV X0, X23
	0x033A4660 MOV W1, W19
	0x033A4664 MOV X2, X31
	0x033A4668 BL 0x3395BDC
	0x033A466C MOV X1, X0
	0x033A4670 MOV X0, X23
	0x033A4674 MOV W2, W21
	0x033A4678 MOV X3, X31
	0x033A467C BL 0x339F798
	0x033A4680 LDR X0, [X20]
	0x033A4684 CBZ X0, 0x33A4718
	0x033A4688 MOV X1, X22
	0x033A468C MOV W2, W19
	0x033A4690 MOV X3, X31
	0x033A4694 BL 0x339F798
	0x033A4698 LDR X0, [X20 + 0x8]
	0x033A469C CBZ X0, 0x33A4704
	0x033A46A0 MOV W1, W21
	0x033A46A4 MOV X2, X31
	0x033A46A8 BL 0x3395BDC
	0x033A46AC LDR X23, [X20 + 0x8]
	0x033A46B0 CBZ X23, 0x33A4718
	0x033A46B4 MOV X22, X0
	0x033A46B8 MOV X0, X23
	0x033A46BC MOV W1, W19
	0x033A46C0 MOV X2, X31
	0x033A46C4 BL 0x3395BDC
	0x033A46C8 MOV X1, X0
	0x033A46CC MOV X0, X23
	0x033A46D0 MOV W2, W21
	0x033A46D4 MOV X3, X31
	0x033A46D8 BL 0x339F798
	0x033A46DC LDR X0, [X20 + 0x8]
	0x033A46E0 CBZ X0, 0x33A4718
	0x033A46E4 MOV X1, X22
	0x033A46E8 MOV W2, W19
	0x033A46EC LDP X20, X19, [X31 + 0x30]
	0x033A46F0 LDP X22, X21, [X31 + 0x20]
	0x033A46F4 LDP X24, X23, [X31 + 0x10]
	0x033A46F8 MOV X3, X31
	0x033A46FC LDR X30, [X31], #0x40
	0x033A4700 B 0x339F798
	0x033A4704 LDP X20, X19, [X31 + 0x30]
	0x033A4708 LDP X22, X21, [X31 + 0x20]
	0x033A470C LDP X24, X23, [X31 + 0x10]
	0x033A4710 LDR X30, [X31], #0x40
	0x033A4714 RET
	0x033A4718 BL 0x1C16F20
	0x033A471C STP X30, X23, [X31 - 0x30]!
	0x033A4720 STP X22, X21, [X31 + 0x10]
	0x033A4724 STP X20, X19, [X31 + 0x20]
	0x033A4728 MOV X20, X0
	0x033A472C LDR X0, [X0]
	0x033A4730 CBZ X0, 0x33A4804
	0x033A4734 MOV W19, W2
	0x033A4738 MOV X2, X31
	0x033A473C MOV W21, W1
	0x033A4740 BL 0x3395BDC
	0x033A4744 LDR X23, [X20]
	0x033A4748 CBZ X23, 0x33A4804
	0x033A474C MOV X22, X0
	0x033A4750 MOV X0, X23
	0x033A4754 MOV W1, W19
	0x033A4758 MOV X2, X31
	0x033A475C BL 0x3395BDC
	0x033A4760 MOV X1, X0
	0x033A4764 MOV X0, X23
	0x033A4768 MOV W2, W21
	0x033A476C MOV X3, X31
	0x033A4770 BL 0x339F798
	0x033A4774 LDR X0, [X20]
	0x033A4778 CBZ X0, 0x33A4804
	0x033A477C MOV X1, X22
	0x033A4780 MOV W2, W19
	0x033A4784 MOV X3, X31
	0x033A4788 BL 0x339F798
	0x033A478C LDR X0, [X20 + 0x8]
	0x033A4790 CBZ X0, 0x33A47F4
	0x033A4794 MOV W1, W21
	0x033A4798 MOV X2, X31
	0x033A479C BL 0x3395BDC
	0x033A47A0 LDR X23, [X20 + 0x8]
	0x033A47A4 CBZ X23, 0x33A4804
	0x033A47A8 MOV X22, X0
	0x033A47AC MOV X0, X23
	0x033A47B0 MOV W1, W19
	0x033A47B4 MOV X2, X31
	0x033A47B8 BL 0x3395BDC
	0x033A47BC MOV X1, X0
	0x033A47C0 MOV X0, X23
	0x033A47C4 MOV W2, W21
	0x033A47C8 MOV X3, X31
	0x033A47CC BL 0x339F798
	0x033A47D0 LDR X0, [X20 + 0x8]
	0x033A47D4 CBZ X0, 0x33A4804
	0x033A47D8 MOV X1, X22
	0x033A47DC MOV W2, W19
	0x033A47E0 LDP X20, X19, [X31 + 0x20]
	0x033A47E4 LDP X22, X21, [X31 + 0x10]
	0x033A47E8 MOV X3, X31
	0x033A47EC LDP X30, X23, [X31], #0x30
	0x033A47F0 B 0x339F798
	0x033A47F4 LDP X20, X19, [X31 + 0x20]
	0x033A47F8 LDP X22, X21, [X31 + 0x10]
	0x033A47FC LDP X30, X23, [X31], #0x30
	0x033A4800 RET
	0x033A4804 BL 0x1C16F20
	0x033A4808 B 0x33A480C
	0x033A480C STP X30, X21, [X31 - 0x20]!
	0x033A4810 STP X20, X19, [X31 + 0x10]
	0x033A4814 CMP W2, 0x2
	0x033A4818 B.LT 0x33A4858
	0x033A481C MOV X19, X0
	0x033A4820 LDR X0, [X0]
	0x033A4824 CBZ X0, 0x33A4864
	0x033A4828 MOV W21, W2
	0x033A482C MOV W20, W1
	0x033A4830 MOV X1, X31
	0x033A4834 BL 0x3395B7C

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X22, 0x103A000
	012 Move W8, [X22+320]
	013 Move W19, W2
	014 Move W21, W1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xD7A000
	021 Move X0, [X0+2328]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+320], W8
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X8, [X20]
	027 Compare X8, 0
	028 JumpIfEqual {153}
	029 Move W9, [X8+24]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X22, [X20+16]
	033 Compare X22, 0
	034 JumpIfEqual {153}
	035 Move X26, W21
	036 Move X25, W19
	037 Add X10, X8, X26
	038 Add X8, X8, X25
	039 Move X24, [X10+32]
	040 Move X10, 0xD7A000
	041 Move X9, [X22]
	042 Move X23, [X8+32]
	043 Move X10, [X10+2328]
	044 NotImplemented "Instruction LDRH not yet implemented."
	045 Move X1, [X10]
	046 Compare X8, 0
	047 JumpIfEqual {54}
	048 Move X10, [X9+176]
	049 Add X10, X10, 8
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Subtract X8, X8, 1
	053 Add X10, X10, 16
	054 Move X0, X22
	055 Move W2, W31
	056 Call 0x1C5D788
	057 NotImplemented "Instruction LDRSW not yet implemented."
	058 Add X8, X9, X8
	059 Add X0, X8, 312
	060 Move X8, [X0]
	061 Move X3, [X0+8]
	062 Move X0, X22
	063 Move X1, X24
	064 Move X2, X23
	065 NotImplemented "Instruction BLR not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X27, [X20]
	068 Compare X27, 0
	069 JumpIfEqual {153}
	070 Move W8, [X27+24]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Add X24, X27, X26
	073 Add X24, X24, 32
	074 Move X22, [X24]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Add X9, X27, X25
	077 Move X23, [X9+32]
	078 Compare X23, 0
	079 JumpIfEqual {87}
	080 Move X8, [X27]
	081 Move X0, X23
	082 Move X1, [X8+64]
	083 Call 0x1C17E00
	084 Compare X0, 0
	085 JumpIfEqual {154}
	086 Move W8, [X27+24]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move [X24], X23
	089 Move X23, [X20]
	090 Compare X23, 0
	091 JumpIfEqual {153}
	092 Compare X22, 0
	093 JumpIfEqual {100}
	094 Move X8, [X23]
	095 Move X0, X22
	096 Move X1, [X8+64]
	097 Call 0x1C17E00
	098 Compare X0, 0
	099 JumpIfEqual {154}
	100 Move W8, [X23+24]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Add X8, X23, X25
	103 Move [X8+32], X22
	104 Move X27, [X20+8]
	105 Compare X27, 0
	106 JumpIfEqual {141}
	107 Move W8, [X27+24]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Add X24, X27, X26
	110 Add X24, X24, 32
	111 Move X22, [X24]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Add X9, X27, X25
	114 Move X23, [X9+32]
	115 Compare X23, 0
	116 JumpIfEqual {124}
	117 Move X8, [X27]
	118 Move X0, X23
	119 Move X1, [X8+64]
	120 Call 0x1C17E00
	121 Compare X0, 0
	122 JumpIfEqual {154}
	123 Move W8, [X27+24]
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move [X24], X23
	126 Move X20, [X20+8]
	127 Compare X20, 0
	128 JumpIfEqual {153}
	129 Compare X22, 0
	130 JumpIfEqual {137}
	131 Move X8, [X20]
	132 Move X0, X22
	133 Move X1, [X8+64]
	134 Call 0x1C17E00
	135 Compare X0, 0
	136 JumpIfEqual {154}
	137 Move W8, [X20+24]
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Add X8, X20, X25
	140 Move [X8+32], X22
	141 Move X20, [X31+64]
	142 Move X19, [X31+72]
	143 Move X22, [X31+48]
	144 Move X21, [X31+56]
	145 Move X24, [X31+32]
	146 Move X23, [X31+40]
	147 Move X26, [X31+16]
	148 Move X25, [X31+24]
	149 Move X30, [X31+80]
	150 Move X27, [X31+88]
	151 Return 
	152 Call 0x1C17F28
	153 Call 0x1C17F20
	154 Call 0x1C17F44
	155 Move X1, X31
	156 Call 0x1C17DEC

Method: System.Void Swap(System.Int32 i, System.Int32 j)

Disassembly:
	0x033A4838 MOV X1, X31
	0x033A483C BL 0x335DCF4
	0x033A4840 ADD W8, W20, W21
	0x033A4844 SUB W2, W8, 0x1
	0x033A4848 UBFM W3, W0, 0x1F, 0x1E
	0x033A484C MOV X0, X19
	0x033A4850 MOV W1, W20
	0x033A4854 BL 0x33A4960
	0x033A4858 LDP X20, X19, [X31 + 0x10]
	0x033A485C LDP X30, X21, [X31], #0x20
	0x033A4860 RET
	0x033A4864 BL 0x1C16F20
	0x033A4868 B 0x33A4870
	0x033A486C B 0x33A4870
	0x033A4870 MOV X20, X0
	0x033A4874 CMP W1, 0x1
	0x033A4878 B.NE 0x33A4954
	0x033A487C MOV X0, X20
	0x033A4880 BL 0x3EB1AD0
	0x033A4884 MOV X20, X0
	0x033A4888 ADRP X0, 0xD59000
	0x033A488C LDR X0, [X0 + 0xF78]
	0x033A4890 BL 0x1C16D08
	0x033A4894 LDR X8, [X20]
	0x033A4898 LDR X1, [X8]
	0x033A489C BL 0x1C17270
	0x033A48A0 TBZ X0, 0x0, 0x33A48BC
	0x033A48A4 BL 0x3EB1AE0
	0x033A48A8 LDR X0, [X19 + 0x10]
	0x033A48AC LDP X20, X19, [X31 + 0x10]
	0x033A48B0 MOV X1, X31
	0x033A48B4 LDP X30, X21, [X31], #0x20
	0x033A48B8 B 0x335DD1C
	0x033A48BC ADRP X0, 0xD4F000
	0x033A48C0 LDR X0, [X0 + 0x7D0]
	0x033A48C4 BL 0x1C16D08
	0x033A48C8 LDR X8, [X20]
	0x033A48CC LDR X1, [X8]
	0x033A48D0 BL 0x1C17270
	0x033A48D4 TBZ X0, 0x0, 0x33A492C
	0x033A48D8 LDR X19, [X20]
	0x033A48DC BL 0x3EB1AE0
	0x033A48E0 ADRP X0, 0xD4F000
	0x033A48E4 LDR X0, [X0 + 0x5B0]
	0x033A48E8 BL 0x1C16D08
	0x033A48EC BL 0x1C16F10
	0x033A48F0 MOV X20, X0
	0x033A48F4 ADRP X0, 0xD78000
	0x033A48F8 LDR X0, [X0 + 0xBC0]
	0x033A48FC BL 0x1C16D08
	0x033A4900 MOV X1, X0
	0x033A4904 MOV X0, X20
	0x033A4908 MOV X2, X19
	0x033A490C MOV X3, X31
	0x033A4910 BL 0x337DF40
	0x033A4914 ADRP X0, 0xD87000
	0x033A4918 LDR X0, [X0 + 0xBD8]
	0x033A491C BL 0x1C16D08
	0x033A4920 MOV X1, X0
	0x033A4924 MOV X0, X20
	0x033A4928 BL 0x1C16DEC
	0x033A492C MOVZ W0, 0x8
	0x033A4930 BL 0x3EB1AF0
	0x033A4934 LDR X8, [X20]
	0x033A4938 STR X8, [X0]
	0x033A493C ADRP X1, 0xB10000
	0x033A4940 ADD X1, X1, 0xE58
	0x033A4944 MOV X2, X31
	0x033A4948 BL 0x3EB1B00
	0x033A494C MOV X20, X0
	0x033A4950 BL 0x3EB1AE0
	0x033A4954 MOV X0, X20
	0x033A4958 BL 0x1D2C690
	0x033A495C BL 0x1990590
	0x033A4960 STP X30, X23, [X31 - 0x30]!
	0x033A4964 STP X22, X21, [X31 + 0x10]
	0x033A4968 STP X20, X19, [X31 + 0x20]
	0x033A496C CMP W2, W1
	0x033A4970 B.LE 0x33A4A08
	0x033A4974 MOV W19, W2
	0x033A4978 MOV W20, W1
	0x033A497C MOV X21, X0
	0x033A4980 SUB W22, W3, 0x1
	0x033A4984 SUB W8, W19, W20
	0x033A4988 ADD W9, W8, 0x1
	0x033A498C CMP W9, 0x10
	0x033A4990 B.LE 0x33A49D8
	0x033A4994 ADDS W31, W22, 0x1
	0x033A4998 B.EQ 0x33A4A18

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X27, [X0]
	012 Compare X27, 0
	013 JumpIfEqual {102}
	014 Move W8, [X27+24]
	015 Move W21, W1
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move X25, W21
	018 Add X26, X27, X25
	019 Add X26, X26, 32
	020 Move X22, [X26]
	021 Move W19, W2
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X24, W19
	024 Add X9, X27, X24
	025 Move X23, [X9+32]
	026 Move X20, X0
	027 Compare X23, 0
	028 JumpIfEqual {36}
	029 Move X8, [X27]
	030 Move X0, X23
	031 Move X1, [X8+64]
	032 Call 0x1C17E00
	033 Compare X0, 0
	034 JumpIfEqual {103}
	035 Move W8, [X27+24]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move [X26], X23
	038 Move X23, [X20]
	039 Compare X23, 0
	040 JumpIfEqual {102}
	041 Compare X22, 0
	042 JumpIfEqual {49}
	043 Move X8, [X23]
	044 Move X0, X22
	045 Move X1, [X8+64]
	046 Call 0x1C17E00
	047 Compare X0, 0
	048 JumpIfEqual {103}
	049 Move W8, [X23+24]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Add X8, X23, X24
	052 Move [X8+32], X22
	053 Move X26, [X20+8]
	054 Compare X26, 0
	055 JumpIfEqual {90}
	056 Move W8, [X26+24]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Add X25, X26, X25
	059 Add X25, X25, 32
	060 Move X22, [X25]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Add X9, X26, X24
	063 Move X23, [X9+32]
	064 Compare X23, 0
	065 JumpIfEqual {73}
	066 Move X8, [X26]
	067 Move X0, X23
	068 Move X1, [X8+64]
	069 Call 0x1C17E00
	070 Compare X0, 0
	071 JumpIfEqual {103}
	072 Move W8, [X26+24]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move [X25], X23
	075 Move X20, [X20+8]
	076 Compare X20, 0
	077 JumpIfEqual {102}
	078 Compare X22, 0
	079 JumpIfEqual {86}
	080 Move X8, [X20]
	081 Move X0, X22
	082 Move X1, [X8+64]
	083 Call 0x1C17E00
	084 Compare X0, 0
	085 JumpIfEqual {103}
	086 Move W8, [X20+24]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Add X8, X20, X24
	089 Move [X8+32], X22
	090 Move X20, [X31+64]
	091 Move X19, [X31+72]
	092 Move X22, [X31+48]
	093 Move X21, [X31+56]
	094 Move X24, [X31+32]
	095 Move X23, [X31+40]
	096 Move X26, [X31+16]
	097 Move X25, [X31+24]
	098 Move X30, [X31+80]
	099 Move X27, [X31+88]
	100 Return 
	101 Call 0x1C17F28
	102 Call 0x1C17F20
	103 Call 0x1C17F44
	104 Move X1, X31
	105 Call 0x1C17DEC

Method: System.Void Sort(System.Int32 left, System.Int32 length)

Disassembly:
	0x033A499C MOV X0, X21

ISIL:
No ISIL was generated
Method: System.Void IntrospectiveSort(System.Int32 left, System.Int32 length)

Disassembly:
	0x033A49A0 MOV W1, W20
	0x033A49A4 MOV W2, W19
	0x033A49A8 BL 0x33A4CFC
	0x033A49AC MOV W23, W0
	0x033A49B0 ADD W1, W0, 0x1
	0x033A49B4 MOV X0, X21
	0x033A49B8 MOV W2, W19
	0x033A49BC MOV W3, W22
	0x033A49C0 BL 0x33A4960
	0x033A49C4 SUB W19, W23, 0x1
	0x033A49C8 CMP W19, W20
	0x033A49CC SUB W22, W22, 0x1
	0x033A49D0 B.GT 0x33A4984
	0x033A49D4 B 0x33A4A08
	0x033A49D8 CBZ W8, 0x33A4A08
	0x033A49DC CMP W8, 0x2
	0x033A49E0 B.EQ 0x33A4A34
	0x033A49E4 MOV X0, X21
	0x033A49E8 MOV W1, W20
	0x033A49EC CMP W8, 0x1
	0x033A49F0 B.EQ 0x33A4A60
	0x033A49F4 MOV W2, W19
	0x033A49F8 LDP X20, X19, [X31 + 0x20]
	0x033A49FC LDP X22, X21, [X31 + 0x10]
	0x033A4A00 LDP X30, X23, [X31], #0x30
	0x033A4A04 B 0x33A4A74
	0x033A4A08 LDP X20, X19, [X31 + 0x20]
	0x033A4A0C LDP X22, X21, [X31 + 0x10]
	0x033A4A10 LDP X30, X23, [X31], #0x30
	0x033A4A14 RET
	0x033A4A18 MOV X0, X21
	0x033A4A1C MOV W1, W20
	0x033A4A20 MOV W2, W19
	0x033A4A24 LDP X20, X19, [X31 + 0x20]
	0x033A4A28 LDP X22, X21, [X31 + 0x10]
	0x033A4A2C LDP X30, X23, [X31], #0x30
	0x033A4A30 B 0x33A4C5C
	0x033A4A34 SUB W22, W19, 0x1
	0x033A4A38 MOV X0, X21
	0x033A4A3C MOV W1, W20
	0x033A4A40 MOV W2, W22
	0x033A4A44 BL 0x33A454C
	0x033A4A48 MOV X0, X21
	0x033A4A4C MOV W1, W20
	0x033A4A50 MOV W2, W19
	0x033A4A54 BL 0x33A454C
	0x033A4A58 MOV X0, X21
	0x033A4A5C MOV W1, W22
	0x033A4A60 MOV W2, W19
	0x033A4A64 LDP X20, X19, [X31 + 0x20]
	0x033A4A68 LDP X22, X21, [X31 + 0x10]
	0x033A4A6C LDP X30, X23, [X31], #0x30
	0x033A4A70 B 0x33A454C
	0x033A4A74 STR X30, [X31 - 0x60]!
	0x033A4A78 STP X28, X27, [X31 + 0x10]
	0x033A4A7C STP X26, X25, [X31 + 0x20]
	0x033A4A80 STP X24, X23, [X31 + 0x30]
	0x033A4A84 STP X22, X21, [X31 + 0x40]
	0x033A4A88 STP X20, X19, [X31 + 0x50]
	0x033A4A8C ADRP X22, 0x1039000
	0x033A4A90 LDRB W8, [X22 + 0x148]
	0x033A4A94 MOV W19, W2
	0x033A4A98 MOV W20, W1
	0x033A4A9C MOV X21, X0
	0x033A4AA0 TBNZ X8, 0x0, 0x33A4AB8
	0x033A4AA4 ADRP X0, 0xD79000
	0x033A4AA8 LDR X0, [X0 + 0x918]
	0x033A4AAC BL 0x1C16CF4
	0x033A4AB0 MOVZ W8, 0x1
	0x033A4AB4 STRB W8, [X22 + 0x148]
	0x033A4AB8 CMP W20, W19
	0x033A4ABC B.GE 0x33A4C3C
	0x033A4AC0 ADRP X28, 0xD79000
	0x033A4AC4 LDR X28, [X28 + 0x918]
	0x033A4AC8 MOV W23, W20
	0x033A4ACC LDR X0, [X21]
	0x033A4AD0 CBZ X0, 0x33A4C58
	0x033A4AD4 ADD W22, W23, 0x1
	0x033A4AD8 MOV W1, W22
	0x033A4ADC MOV X2, X31
	0x033A4AE0 BL 0x3395BDC
	0x033A4AE4 LDR X8, [X21 + 0x8]
	0x033A4AE8 MOV X25, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move X8, [X0]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfEqual {28}
	010 Move W0, [X8+24]
	011 Move W21, W2
	012 Move W20, W1
	013 Move X1, X31
	014 Call IntrospectiveSortUtilities.FloorLog2PlusOne, X0
	015 Add W8, W20, W21
	016 Subtract W2, W8, 1
	017 Move W3, W0
	018 ShiftRight W3, 31
	019 And W3, W3, 0x3FFFFFFF
	020 Move X0, X19
	021 Move W1, W20
	022 Call SorterObjectArray.IntroSort, X0, X1, X2, X3
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return 
	028 Call 0x1C17F20
	029 Move X20, X0
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X0, X20
	032 Call 0x3EB2AD0
	033 Move X20, X0
	034 Move X0, 0xD5A000
	035 Move X0, [X0+3960]
	036 Call 0x1C17D08
	037 Move X8, [X20]
	038 Move X1, [X8]
	039 Call 0x1C18270
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {53}
	044 Call 0x3EB2AE0
	045 Move X0, [X19+16]
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X1, X31
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Call IntrospectiveSortUtilities.ThrowOrIgnoreBadComparer, X0
	052 Return 
	053 Move X0, 0xD50000
	054 Move X0, [X0+2000]
	055 Call 0x1C17D08
	056 Move X8, [X20]
	057 Move X1, [X8]
	058 Call 0x1C18270
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {84}
	063 Move X19, [X20]
	064 Call 0x3EB2AE0
	065 Move X0, 0xD50000
	066 Move X0, [X0+1456]
	067 Call 0x1C17D08
	068 Call 0x1C17F10
	069 Move X20, X0
	070 Move X0, 0xD79000
	071 Move X0, [X0+3008]
	072 Call 0x1C17D08
	073 Move X1, X0
	074 Move X0, X20
	075 Move X2, X19
	076 Move X3, X31
	077 Call InvalidOperationException..ctor, X0, X1, X2
	078 Move X0, 0xD88000
	079 Move X0, [X0+3024]
	080 Call 0x1C17D08
	081 Move X1, X0
	082 Move X0, X20
	083 Call 0x1C17DEC
	084 Move W0, 8
	085 Call 0x3EB2AF0
	086 Move X8, [X20]
	087 Move [X0], X8
	088 Move X1, 0xB11000
	089 Add X1, X1, 3672
	090 Move X2, X31
	091 Call 0x3EB2B00
	092 Move X20, X0
	093 Call 0x3EB2AE0
	094 Move X0, X20
	095 Call 0x1D2D690
	096 Call 0x1991590

Method: System.Void IntroSort(System.Int32 lo, System.Int32 hi, System.Int32 depthLimit)

Disassembly:
	0x033A4AEC CBZ X8, 0x33A4B08
	0x033A4AF0 MOV X0, X8
	0x033A4AF4 MOV W1, W22
	0x033A4AF8 MOV X2, X31
	0x033A4AFC BL 0x3395BDC
	0x033A4B00 MOV X24, X0
	0x033A4B04 B 0x33A4B0C
	0x033A4B08 MOV X24, X31
	0x033A4B0C CMP W23, W20
	0x033A4B10 B.LT 0x33A4BFC
	0x033A4B14 LDR X0, [X21]
	0x033A4B18 CBZ X0, 0x33A4C58
	0x033A4B1C LDR X26, [X21 + 0x10]
	0x033A4B20 MOV W1, W23
	0x033A4B24 MOV X2, X31
	0x033A4B28 BL 0x3395BDC
	0x033A4B2C CBZ X26, 0x33A4C58
	0x033A4B30 LDR X8, [X26]
	0x033A4B34 LDR X1, [X28]
	0x033A4B38 MOV X27, X0
	0x033A4B3C LDRH W9, [X8 + 0x12E]
	0x033A4B40 CBZ X9, 0x33A4B64
	0x033A4B44 LDR X10, [X8 + 0xB0]
	0x033A4B48 ADD X10, X10, 0x8
	0x033A4B4C LDUR X11, [X10 - 0x8]
	0x033A4B50 CMP X11, X1
	0x033A4B54 B.EQ 0x33A4B74
	0x033A4B58 SUBS X9, X9, 0x1
	0x033A4B5C ADD X10, X10, 0x10
	0x033A4B60 B.NE 0x33A4B4C
	0x033A4B64 MOV X0, X26
	0x033A4B68 MOV W2, W31
	0x033A4B6C BL 0x1C5C788
	0x033A4B70 B 0x33A4B80
	0x033A4B74 LDRSW X9, [X10]
	0x033A4B78 ADD X8, X8, X9, 0x4, LSL
	0x033A4B7C ADD X0, X8, 0x138
	0x033A4B80 LDP X8, X3, [X0]
	0x033A4B84 MOV X0, X26
	0x033A4B88 MOV X1, X25
	0x033A4B8C MOV X2, X27
	0x033A4B90 BLR X8
	0x033A4B94 TBZ X0, 0x1F, 0x33A4BFC
	0x033A4B98 LDR X27, [X21]
	0x033A4B9C CBZ X27, 0x33A4C58
	0x033A4BA0 MOV X0, X27
	0x033A4BA4 MOV W1, W23
	0x033A4BA8 MOV X2, X31
	0x033A4BAC BL 0x3395BDC
	0x033A4BB0 ADD W26, W23, 0x1
	0x033A4BB4 MOV X1, X0
	0x033A4BB8 MOV X0, X27
	0x033A4BBC MOV W2, W26
	0x033A4BC0 MOV X3, X31
	0x033A4BC4 BL 0x339F798
	0x033A4BC8 LDR X27, [X21 + 0x8]
	0x033A4BCC CBZ X27, 0x33A4BF4
	0x033A4BD0 MOV X0, X27
	0x033A4BD4 MOV W1, W23
	0x033A4BD8 MOV X2, X31
	0x033A4BDC BL 0x3395BDC
	0x033A4BE0 MOV X1, X0
	0x033A4BE4 MOV X0, X27
	0x033A4BE8 MOV W2, W26
	0x033A4BEC MOV X3, X31
	0x033A4BF0 BL 0x339F798
	0x033A4BF4 SUB W23, W23, 0x1
	0x033A4BF8 B 0x33A4B0C
	0x033A4BFC LDR X0, [X21]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move W19, W2
	009 Move W20, W1
	010 Move X21, X0
	011 Subtract W22, W3, 1
	012 Subtract W8, W19, W20
	013 Add W9, W8, 1
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Add W31, W22, 1
	016 Move X0, X21
	017 Move W1, W20
	018 Move W2, W19
	019 Call SorterObjectArray.PickPivotAndPartition, X0, X1, X2
	020 Move W23, W0
	021 Add W1, W0, 1
	022 Move X0, X21
	023 Move W2, W19
	024 Move W3, W22
	025 Call SorterObjectArray.IntroSort, X0, X1, X2, X3
	026 Subtract W19, W23, 1
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Subtract W22, W22, 1
	029 Compare W8, 0
	030 JumpIfEqual {42}
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X0, X21
	033 Move W1, W20
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move W2, W19
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X30, [X31+48]
	041 Move X23, [X31+56]
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 Move X23, [X31+56]
	048 Return 
	049 Move X0, X21
	050 Move W1, W20
	051 Move W2, W19
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X22, [X31+16]
	055 Move X21, [X31+24]
	056 Move X30, [X31+48]
	057 Move X23, [X31+56]
	058 Call SorterObjectArray.Heapsort, X0, X1, X2
	059 Return 
	060 Subtract W22, W19, 1
	061 Move X0, X21
	062 Move W1, W20
	063 Move W2, W22
	064 Call SorterObjectArray.SwapIfGreaterWithItems, X0, X1, X2
	065 Move X0, X21
	066 Move W1, W20
	067 Move W2, W19
	068 Call SorterObjectArray.SwapIfGreaterWithItems, X0, X1, X2
	069 Move X0, X21
	070 Move W1, W22
	071 Move W2, W19
	072 Move X20, [X31+32]
	073 Move X19, [X31+40]
	074 Move X22, [X31+16]
	075 Move X21, [X31+24]
	076 Move X30, [X31+48]
	077 Move X23, [X31+56]
	078 Call SorterObjectArray.SwapIfGreaterWithItems, X0, X1, X2
	079 Return 

Method: System.Int32 PickPivotAndPartition(System.Int32 lo, System.Int32 hi)

Disassembly:
	0x033A4F48 STR W3, [X31 + 0xC]
	0x033A4F4C TBNZ X8, 0x0, 0x33A4F64
	0x033A4F50 ADRP X0, 0xD79000
	0x033A4F54 LDR X0, [X0 + 0x918]
	0x033A4F58 BL 0x1C16CF4
	0x033A4F5C MOVZ W8, 0x1
	0x033A4F60 STRB W8, [X20 + 0x147]
	0x033A4F64 LDR X0, [X19]
	0x033A4F68 CBZ X0, 0x33A51E4
	0x033A4F6C LDR W8, [X31 + 0xC]
	0x033A4F70 MOV X2, X31
	0x033A4F74 SUB W28, W8, 0x1
	0x033A4F78 ADD W23, W28, W24
	0x033A4F7C MOV W1, W23
	0x033A4F80 BL 0x3395BDC
	0x033A4F84 LDR X8, [X19 + 0x8]
	0x033A4F88 MOV X22, X0
	0x033A4F8C CBZ X8, 0x33A4FA8
	0x033A4F90 MOV X0, X8
	0x033A4F94 MOV W1, W23
	0x033A4F98 MOV X2, X31
	0x033A4F9C BL 0x3395BDC
	0x033A4FA0 STR X0, [X31]
	0x033A4FA4 B 0x33A4FAC
	0x033A4FA8 STR X31, [X31]
	0x033A4FAC CMP W21, 0x0
	0x033A4FB0 CINC W8, W21, LT
	0x033A4FB4 SBFM W23, W8, 0x1, 0x1F
	0x033A4FB8 CMP W23, W24
	0x033A4FBC B.GE 0x33A4FC8
	0x033A4FC0 MOV W29, W24
	0x033A4FC4 B 0x33A5174
	0x033A4FC8 ADRP X20, 0xD79000
	0x033A4FCC LDR X20, [X20 + 0x918]
	0x033A4FD0 UBFM W29, W24, 0x1F, 0x1E
	0x033A4FD4 CMP W29, W21
	0x033A4FD8 B.GE 0x33A5084
	0x033A4FDC LDR X0, [X19]
	0x033A4FE0 CBZ X0, 0x33A51E4
	0x033A4FE4 LDR W8, [X31 + 0xC]
	0x033A4FE8 LDR X25, [X19 + 0x10]
	0x033A4FEC MOV X2, X31
	0x033A4FF0 ADD W27, W29, W8
	0x033A4FF4 SUB W1, W27, 0x1
	0x033A4FF8 BL 0x3395BDC
	0x033A4FFC LDR X8, [X19]
	0x033A5000 CBZ X8, 0x33A51E4
	0x033A5004 MOV X26, X0
	0x033A5008 MOV X0, X8
	0x033A500C MOV W1, W27
	0x033A5010 MOV X2, X31
	0x033A5014 BL 0x3395BDC
	0x033A5018 CBZ X25, 0x33A51E4
	0x033A501C LDR X8, [X25]
	0x033A5020 LDR X1, [X20]
	0x033A5024 MOV X27, X0
	0x033A5028 LDRH W9, [X8 + 0x12E]
	0x033A502C CBZ X9, 0x33A5050
	0x033A5030 LDR X10, [X8 + 0xB0]
	0x033A5034 ADD X10, X10, 0x8
	0x033A5038 LDUR X11, [X10 - 0x8]
	0x033A503C CMP X11, X1
	0x033A5040 B.EQ 0x33A5060
	0x033A5044 SUBS X9, X9, 0x1
	0x033A5048 ADD X10, X10, 0x10
	0x033A504C B.NE 0x33A5038
	0x033A5050 MOV X0, X25
	0x033A5054 MOV W2, W31
	0x033A5058 BL 0x1C5C788
	0x033A505C B 0x33A506C
	0x033A5060 LDRSW X9, [X10]
	0x033A5064 ADD X8, X8, X9, 0x4, LSL
	0x033A5068 ADD X0, X8, 0x138
	0x033A506C LDP X8, X3, [X0]
	0x033A5070 MOV X0, X25
	0x033A5074 MOV X1, X26
	0x033A5078 MOV X2, X27
	0x033A507C BLR X8
	0x033A5080 ORR W29, W29, W0, 0x1F
	0x033A5084 LDR X0, [X19]
	0x033A5088 CBZ X0, 0x33A51E4
	0x033A508C LDR X26, [X19 + 0x10]
	0x033A5090 ADD W25, W28, W29
	0x033A5094 MOV W1, W25
	0x033A5098 MOV X2, X31
	0x033A509C BL 0x3395BDC
	0x033A50A0 CBZ X26, 0x33A51E4
	0x033A50A4 LDR X8, [X26]
	0x033A50A8 LDR X1, [X20]
	0x033A50AC MOV X27, X0
	0x033A50B0 LDRH W9, [X8 + 0x12E]
	0x033A50B4 CBZ X9, 0x33A50D8
	0x033A50B8 LDR X10, [X8 + 0xB0]
	0x033A50BC ADD X10, X10, 0x8
	0x033A50C0 LDUR X11, [X10 - 0x8]
	0x033A50C4 CMP X11, X1
	0x033A50C8 B.EQ 0x33A50E8
	0x033A50CC SUBS X9, X9, 0x1
	0x033A50D0 ADD X10, X10, 0x10
	0x033A50D4 B.NE 0x33A50C0
	0x033A50D8 MOV X0, X26
	0x033A50DC MOV W2, W31
	0x033A50E0 BL 0x1C5C788
	0x033A50E4 B 0x33A50F4
	0x033A50E8 LDRSW X9, [X10]
	0x033A50EC ADD X8, X8, X9, 0x4, LSL
	0x033A50F0 ADD X0, X8, 0x138
	0x033A50F4 LDP X8, X3, [X0]
	0x033A50F8 MOV X0, X26
	0x033A50FC MOV X1, X22
	0x033A5100 MOV X2, X27
	0x033A5104 BLR X8
	0x033A5108 TBZ X0, 0x1F, 0x33A4FC0
	0x033A510C LDR X26, [X19]
	0x033A5110 CBZ X26, 0x33A51E4
	0x033A5114 MOV X0, X26
	0x033A5118 MOV W1, W25
	0x033A511C MOV X2, X31
	0x033A5120 BL 0x3395BDC
	0x033A5124 ADD W24, W28, W24
	0x033A5128 MOV X1, X0
	0x033A512C MOV X0, X26
	0x033A5130 MOV W2, W24
	0x033A5134 MOV X3, X31
	0x033A5138 BL 0x339F798
	0x033A513C LDR X26, [X19 + 0x8]
	0x033A5140 CBZ X26, 0x33A5168
	0x033A5144 MOV X0, X26
	0x033A5148 MOV W1, W25
	0x033A514C MOV X2, X31
	0x033A5150 BL 0x3395BDC
	0x033A5154 MOV X1, X0
	0x033A5158 MOV X0, X26
	0x033A515C MOV W2, W24
	0x033A5160 MOV X3, X31
	0x033A5164 BL 0x339F798
	0x033A5168 CMP W29, W23
	0x033A516C MOV W24, W29
	0x033A5170 B.LE 0x33A4FD0

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x103A000
	011 Move W8, [X22+321]
	012 Move W21, W2
	013 Move W19, W1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xD7A000
	020 Move X0, [X0+2328]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+321], W8
	024 Subtract W8, W21, W19
	025 NotImplemented "Instruction CMP not yet implemented."
	026 NotImplemented "Instruction CINC not yet implemented."
	027 Add W23, W19, W8
	028 Move X0, X20
	029 Move W1, W19
	030 Move W2, W23
	031 Call SorterObjectArray.SwapIfGreaterWithItems, X0, X1, X2
	032 Move X0, X20
	033 Move W1, W19
	034 Move W2, W21
	035 Call SorterObjectArray.SwapIfGreaterWithItems, X0, X1, X2
	036 Move X0, X20
	037 Move W1, W23
	038 Move W2, W21
	039 Call SorterObjectArray.SwapIfGreaterWithItems, X0, X1, X2
	040 Move X8, [X20]
	041 Compare X8, 0
	042 JumpIfEqual {152}
	043 Move W9, [X8+24]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Add X8, X8, W23
	046 Move X22, [X8+32]
	047 Subtract W21, W21, 1
	048 Move X0, X20
	049 Move W1, W23
	050 Move W2, W21
	051 Call SorterObjectArray.Swap, X0, X1, X2
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X26, 0xD79000
	054 Move X26, [X26+2328]
	055 Move W23, W21
	056 Move X9, [X20]
	057 Compare X9, 0
	058 JumpIfEqual {152}
	059 Move W8, [X9+24]
	060 Add W19, W19, 1
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X24, [X20+16]
	063 Compare X24, 0
	064 JumpIfEqual {152}
	065 Move X8, [X24]
	066 Add X9, X9, W19
	067 Move X25, [X9+32]
	068 Move X1, [X26]
	069 NotImplemented "Instruction LDRH not yet implemented."
	070 Compare X9, 0
	071 JumpIfEqual {78}
	072 Move X10, [X8+176]
	073 Add X10, X10, 8
	074 NotImplemented "Instruction LDUR not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Subtract X9, X9, 1
	077 Add X10, X10, 16
	078 Move X0, X24
	079 Move W2, W31
	080 Call 0x1C5D788
	081 NotImplemented "Instruction LDRSW not yet implemented."
	082 Add X8, X8, X9
	083 Add X0, X8, 312
	084 Move X8, [X0]
	085 Move X3, [X0+8]
	086 Move X0, X24
	087 Move X1, X25
	088 Move X2, X22
	089 NotImplemented "Instruction BLR not yet implemented."
	090 Move TEMP, X0
	091 And TEMP, TEMP, -2147483648
	092 Compare TEMP, -2147483648
	093 JumpIfEqual {56}
	094 Move X9, [X20]
	095 Compare X9, 0
	096 JumpIfEqual {152}
	097 Move W8, [X9+24]
	098 Subtract W23, W23, 1
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X24, [X20+16]
	101 Compare X24, 0
	102 JumpIfEqual {152}
	103 Move X8, [X24]
	104 Add X9, X9, W23
	105 Move X25, [X9+32]
	106 Move X1, [X26]
	107 NotImplemented "Instruction LDRH not yet implemented."
	108 Compare X9, 0
	109 JumpIfEqual {116}
	110 Move X10, [X8+176]
	111 Add X10, X10, 8
	112 NotImplemented "Instruction LDUR not yet implemented."
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Subtract X9, X9, 1
	115 Add X10, X10, 16
	116 Move X0, X24
	117 Move W2, W31
	118 Call 0x1C5D788
	119 NotImplemented "Instruction LDRSW not yet implemented."
	120 Add X8, X8, X9
	121 Add X0, X8, 312
	122 Move X8, [X0]
	123 Move X3, [X0+8]
	124 Move X0, X24
	125 Move X1, X22
	126 Move X2, X25
	127 NotImplemented "Instruction BLR not yet implemented."
	128 Move TEMP, X0
	129 And TEMP, TEMP, -2147483648
	130 Compare TEMP, -2147483648
	131 JumpIfEqual {94}
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move X0, X20
	134 Move W1, W19
	135 Move W2, W23
	136 Call SorterObjectArray.Swap, X0, X1, X2
	137 Move X0, X20
	138 Move W1, W19
	139 Move W2, W21
	140 Call SorterObjectArray.Swap, X0, X1, X2
	141 Move W0, W19
	142 Move X20, [X31+64]
	143 Move X19, [X31+72]
	144 Move X22, [X31+48]
	145 Move X21, [X31+56]
	146 Move X24, [X31+32]
	147 Move X23, [X31+40]
	148 Move X26, [X31+16]
	149 Move X25, [X31+24]
	150 Move X30, [X31+80]
	151 Return X0
	152 Call 0x1C17F20
	153 Call 0x1C17F28

Method: System.Void Heapsort(System.Int32 lo, System.Int32 hi)

Disassembly:
	0x033A4EA8 LDRSW X9, [X10]
	0x033A4EAC ADD X8, X8, X9, 0x4, LSL
	0x033A4EB0 ADD X0, X8, 0x138
	0x033A4EB4 LDP X8, X3, [X0]
	0x033A4EB8 MOV X0, X24
	0x033A4EBC MOV X1, X22
	0x033A4EC0 MOV X2, X25
	0x033A4EC4 BLR X8
	0x033A4EC8 TBNZ X0, 0x1F, 0x33A4E44
	0x033A4ECC CMP W19, W23
	0x033A4ED0 B.GE 0x33A4EE8
	0x033A4ED4 MOV X0, X20
	0x033A4ED8 MOV W1, W19
	0x033A4EDC MOV W2, W23
	0x033A4EE0 BL 0x33A471C
	0x033A4EE4 B 0x33A4DBC
	0x033A4EE8 MOV X0, X20
	0x033A4EEC MOV W1, W19
	0x033A4EF0 MOV W2, W21
	0x033A4EF4 BL 0x33A471C
	0x033A4EF8 MOV W0, W19
	0x033A4EFC LDP X20, X19, [X31 + 0x40]
	0x033A4F00 LDP X22, X21, [X31 + 0x30]
	0x033A4F04 LDP X24, X23, [X31 + 0x20]
	0x033A4F08 LDP X26, X25, [X31 + 0x10]
	0x033A4F0C LDR X30, [X31], #0x50
	0x033A4F10 RET
	0x033A4F14 BL 0x1C16F20
	0x033A4F18 SUB X31, X31, 0x70
	0x033A4F1C STP X29, X30, [X31 + 0x10]
	0x033A4F20 STP X28, X27, [X31 + 0x20]
	0x033A4F24 STP X26, X25, [X31 + 0x30]
	0x033A4F28 STP X24, X23, [X31 + 0x40]
	0x033A4F2C STP X22, X21, [X31 + 0x50]
	0x033A4F30 STP X20, X19, [X31 + 0x60]
	0x033A4F34 ADRP X20, 0x1039000
	0x033A4F38 LDRB W8, [X20 + 0x147]
	0x033A4F3C MOV W21, W2
	0x033A4F40 MOV W24, W1
	0x033A4F44 MOV X19, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Subtract W8, W2, W1
	008 Add W22, W8, 1
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move W19, W2
	011 Move W20, W1
	012 Move X21, X0
	013 Move W23, W22
	014 ShiftRight W23, 1
	015 And W23, W23, 0x7FFFFFFF
	016 Move X0, X21
	017 Move W1, W23
	018 Move W2, W22
	019 Move W3, W20
	020 Call SorterObjectArray.DownHeap, X0, X1, X2, X3
	021 Subtract W23, W23, 1
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Subtract W23, W31, W20
	024 Move X0, X21
	025 Move W1, W20
	026 Move W2, W19
	027 Add W22, W23, W19
	028 Call SorterObjectArray.Swap, X0, X1, X2
	029 Move W1, 1
	030 Move X0, X21
	031 Move W2, W22
	032 Move W3, W20
	033 Call SorterObjectArray.DownHeap, X0, X1, X2, X3
	034 Subtract W19, W19, 1
	035 Add W8, W23, W19
	036 Add W8, W8, 2
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 Move X23, [X31+56]
	044 Return 

Method: System.Void DownHeap(System.Int32 i, System.Int32 n, System.Int32 lo)

Disassembly:
	0x033A5174 LDR X0, [X19]
	0x033A5178 CBZ X0, 0x33A51E4
	0x033A517C ADD W20, W28, W29
	0x033A5180 MOV X1, X22
	0x033A5184 MOV W2, W20
	0x033A5188 MOV X3, X31
	0x033A518C BL 0x339F798
	0x033A5190 LDR X0, [X19 + 0x8]
	0x033A5194 CBZ X0, 0x33A51C4
	0x033A5198 LDR X1, [X31]
	0x033A519C MOV W2, W20
	0x033A51A0 LDP X20, X19, [X31 + 0x60]
	0x033A51A4 LDP X22, X21, [X31 + 0x50]
	0x033A51A8 LDP X24, X23, [X31 + 0x40]
	0x033A51AC LDP X26, X25, [X31 + 0x30]
	0x033A51B0 LDP X28, X27, [X31 + 0x20]
	0x033A51B4 LDP X29, X30, [X31 + 0x10]
	0x033A51B8 MOV X3, X31
	0x033A51BC ADD X31, X31, 0x70
	0x033A51C0 B 0x339F798
	0x033A51C4 LDP X20, X19, [X31 + 0x60]
	0x033A51C8 LDP X22, X21, [X31 + 0x50]
	0x033A51CC LDP X24, X23, [X31 + 0x40]
	0x033A51D0 LDP X26, X25, [X31 + 0x30]
	0x033A51D4 LDP X28, X27, [X31 + 0x20]
	0x033A51D8 LDP X29, X30, [X31 + 0x10]
	0x033A51DC ADD X31, X31, 0x70
	0x033A51E0 RET
	0x033A51E4 BL 0x1C16F20
	0x033A51E8 MOV X1, X31
	0x033A51EC B 0x33BDD8C
	0x033A51F0 MOV X1, X31
	0x033A51F4 B 0x33BDD8C
	0x033A51F8 STR X30, [X31 - 0x20]!
	0x033A51FC STP X20, X19, [X31 + 0x10]
	0x033A5200 MOV X19, X1
	0x033A5204 MOV X1, X31
	0x033A5208 MOV X20, X0
	0x033A520C BL 0x33BDD8C
	0x033A5210 STR X19, [X20 + 0x10]
	0x033A5214 LDP X20, X19, [X31 + 0x10]
	0x033A5218 LDR X30, [X31], #0x20
	0x033A521C RET
	0x033A5220 STR X30, [X31 - 0x20]!
	0x033A5224 STP X20, X19, [X31 + 0x10]
	0x033A5228 MOV X19, X1
	0x033A522C MOV X1, X31
	0x033A5230 MOV X20, X0
	0x033A5234 BL 0x33BDD8C
	0x033A5238 STR X19, [X20 + 0x10]
	0x033A523C LDP X20, X19, [X31 + 0x10]
	0x033A5240 LDR X30, [X31], #0x20
	0x033A5244 RET
	0x033A5248 STR X30, [X31 - 0x20]!
	0x033A524C STP X20, X19, [X31 + 0x10]
	0x033A5250 MOV X19, X1
	0x033A5254 MOV X1, X31
	0x033A5258 MOV X20, X0
	0x033A525C BL 0x33BDD8C
	0x033A5260 STR X19, [X20 + 0x10]
	0x033A5264 LDP X20, X19, [X31 + 0x10]
	0x033A5268 LDR X30, [X31], #0x20
	0x033A526C RET
	0x033A5270 STP X30, X21, [X31 - 0x20]!
	0x033A5274 STP X20, X19, [X31 + 0x10]
	0x033A5278 MOV X19, X0
	0x033A527C LDR X0, [X0 + 0x10]
	0x033A5280 CBZ X0, 0x33A5288
	0x033A5284 BL 0x33A530C
	0x033A5288 MOV X0, X19
	0x033A528C LDP X20, X19, [X31 + 0x10]
	0x033A5290 MOV X1, X31
	0x033A5294 LDP X30, X21, [X31], #0x20
	0x033A5298 B 0x33CB4DC
	0x033A529C CMP W1, 0x1
	0x033A52A0 MOV X21, X0
	0x033A52A4 B.NE 0x33A52D4
	0x033A52A8 MOV X0, X21
	0x033A52AC BL 0x3EB1AD0
	0x033A52B0 LDR X20, [X0]
	0x033A52B4 BL 0x3EB1AE0
	0x033A52B8 MOV X0, X19
	0x033A52BC MOV X1, X31
	0x033A52C0 BL 0x33CB4DC
	0x033A52C4 CBNZ X20, 0x33A52DC
	0x033A52C8 LDP X20, X19, [X31 + 0x10]
	0x033A52CC LDP X30, X21, [X31], #0x20
	0x033A52D0 RET
	0x033A52D4 MOV X20, X31
	0x033A52D8 B 0x33A52E8
	0x033A52DC MOV X0, X20
	0x033A52E0 BL 0x1C16F18
	0x033A52E4 MOV X21, X0
	0x033A52E8 MOV X0, X19
	0x033A52EC MOV X1, X31
	0x033A52F0 BL 0x33CB4DC
	0x033A52F4 CBNZ X20, 0x33A5300
	0x033A52F8 MOV X0, X21
	0x033A52FC BL 0x1D2C690
	0x033A5300 MOV X0, X20
	0x033A5304 BL 0x1C16F18
	0x033A5308 BL 0x1990590
	0x033A530C STR X30, [X31 - 0x10]!
	0x033A5310 MOV X1, X0
	0x033A5314 LDR X0, [X0 + 0x18]
	0x033A5318 CBZ X0, 0x33A5324
	0x033A531C LDR X30, [X31], #0x10
	0x033A5320 B 0x33A53E0
	0x033A5324 BL 0x1C16F20
	0x033A5328 LDR X0, [X0 + 0x10]
	0x033A532C RET
	0x033A5330 STR X30, [X31 - 0x20]!
	0x033A5334 STP X20, X19, [X31 + 0x10]
	0x033A5338 MOV X19, X1
	0x033A533C MOV X1, X31
	0x033A5340 MOV X20, X0
	0x033A5344 BL 0x33BDD8C
	0x033A5348 STR X19, [X20 + 0x18]
	0x033A534C LDP X20, X19, [X31 + 0x10]
	0x033A5350 LDR X30, [X31], #0x20
	0x033A5354 RET
	0x033A5358 LDR X0, [X0 + 0x10]
	0x033A535C RET
	0x033A5360 STR X1, [X0 + 0x10]
	0x033A5364 RET
	0x033A5368 LDR X0, [X0 + 0x18]
	0x033A536C RET
	0x033A5370 STP X30, X23, [X31 - 0x30]!
	0x033A5374 STP X22, X21, [X31 + 0x10]
	0x033A5378 STP X20, X19, [X31 + 0x20]
	0x033A537C ADRP X23, 0x1038000
	0x033A5380 ADRP X22, 0xD86000
	0x033A5384 LDRB W8, [X23 + 0x149]
	0x033A5388 LDR X22, [X22 + 0xBE0]
	0x033A538C MOV W20, W2
	0x033A5390 MOV X21, X1
	0x033A5394 MOV X19, X0
	0x033A5398 TBNZ X8, 0x0, 0x33A53B0
	0x033A539C ADRP X0, 0xD86000
	0x033A53A0 LDR X0, [X0 + 0xBE0]
	0x033A53A4 BL 0x1C16CF4
	0x033A53A8 MOVZ W8, 0x1
	0x033A53AC STRB W8, [X23 + 0x149]
	0x033A53B0 MOV X0, X19
	0x033A53B4 MOV X1, X31
	0x033A53B8 BL 0x33BDD8C
	0x033A53BC STR X21, [X19 + 0x18]
	0x033A53C0 LDR X0, [X22]
	0x033A53C4 MOV W1, W20
	0x033A53C8 BL 0x1C16D6C
	0x033A53CC STR X0, [X19 + 0x10]
	0x033A53D0 LDP X20, X19, [X31 + 0x20]
	0x033A53D4 LDP X22, X21, [X31 + 0x10]
	0x033A53D8 LDP X30, X23, [X31], #0x30
	0x033A53DC RET
	0x033A53E0 SUB X31, X31, 0x30
	0x033A53E4 STP X30, X21, [X31 + 0x10]
	0x033A53E8 STP X20, X19, [X31 + 0x20]
	0x033A53EC ADRP X21, 0x1038000
	0x033A53F0 LDRB W8, [X21 + 0x14C]
	0x033A53F4 MOV X20, X1
	0x033A53F8 MOV X19, X0
	0x033A53FC TBNZ X8, 0x0, 0x33A5414
	0x033A5400 ADRP X0, 0xD86000
	0x033A5404 LDR X0, [X0 + 0xBE8]
	0x033A5408 BL 0x1C16CF4
	0x033A540C MOVZ W8, 0x1
	0x033A5410 STRB W8, [X21 + 0x14C]
	0x033A5414 MOV X0, X31
	0x033A5418 STRB W31, [X31 + 0xC]
	0x033A541C BL 0x32C5C58
	0x033A5420 ADD X1, X31, 0xC
	0x033A5424 MOV X0, X19
	0x033A5428 MOV X2, X31
	0x033A542C BL 0x33DE64C
	0x033A5430 LDR X0, [X19 + 0x20]
	0x033A5434 CBZ X0, 0x33A5480
	0x033A5438 ADRP X8, 0xD86000
	0x033A543C LDR X8, [X8 + 0xBE8]
	0x033A5440 LDR X2, [X8]
	0x033A5444 MOV X1, X20
	0x033A5448 BL 0x301D7A8
	0x033A544C MOV X20, X31
	0x033A5450 LDRB W8, [X31 + 0xC]
	0x033A5454 CBZ W8, 0x33A5464
	0x033A5458 MOV X0, X19
	0x033A545C MOV X1, X31
	0x033A5460 BL 0x33E14E4
	0x033A5464 CBNZ X20, 0x33A5478
	0x033A5468 LDP X20, X19, [X31 + 0x20]
	0x033A546C LDP X30, X21, [X31 + 0x10]
	0x033A5470 ADD X31, X31, 0x30
	0x033A5474 RET
	0x033A5478 MOV X0, X20
	0x033A547C BL 0x1C16F18
	0x033A5480 BL 0x1C16F20
	0x033A5484 B 0x33A548C
	0x033A5488 B 0x33A548C
	0x033A548C MOV X21, X0
	0x033A5490 CMP W1, 0x1
	0x033A5494 B.NE 0x33A54AC
	0x033A5498 MOV X0, X21
	0x033A549C BL 0x3EB1AD0
	0x033A54A0 LDR X20, [X0]
	0x033A54A4 BL 0x3EB1AE0
	0x033A54A8 B 0x33A5450
	0x033A54AC MOV X20, X31
	0x033A54B0 B 0x33A54B8
	0x033A54B4 MOV X21, X0
	0x033A54B8 LDRB W8, [X31 + 0xC]
	0x033A54BC CBZ W8, 0x33A54CC
	0x033A54C0 MOV X0, X19
	0x033A54C4 MOV X1, X31
	0x033A54C8 BL 0x33E14E4
	0x033A54CC CBNZ X20, 0x33A54D8

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X20, 0x1039000
	015 Move W8, [X20+322]
	016 Move W23, W2
	017 Move W24, W1
	018 Move X19, X0
	019 Move [X31+12], W3
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0xD79000
	025 Move X0, [X0+2328]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+322], W8
	029 Move X22, [X19]
	030 Compare X22, 0
	031 JumpIfEqual {232}
	032 Move W8, [X31+12]
	033 Move W9, [X22+24]
	034 Subtract W28, W8, 1
	035 Add W8, W28, W24
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X8, W8
	038 Add X10, X22, X8
	039 Move X9, [X19+8]
	040 Move X21, [X10+32]
	041 Compare X9, 0
	042 JumpIfEqual {48}
	043 Move W10, [X9+24]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Add X8, X9, X8
	046 Move X8, [X8+32]
	047 Move [X31], X8
	048 Move [X31], X31
	049 NotImplemented "Instruction CMP not yet implemented."
	050 NotImplemented "Instruction CINC not yet implemented."
	051 NotImplemented "Instruction SBFM not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move W20, W24
	054 ShiftRight W20, 31
	055 And W20, W20, 0x3FFFFFFF
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X9, [X19]
	058 Compare X9, 0
	059 JumpIfEqual {232}
	060 Move W8, [X31+12]
	061 Move W11, [X9+24]
	062 Add W10, W20, W8
	063 Subtract W8, W10, 1
	064 NotImplemented "Instruction CMP not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X25, [X19+16]
	067 Compare X25, 0
	068 JumpIfEqual {232}
	069 Add X11, X9, W8
	070 Move X8, [X25]
	071 Add X9, X9, W10
	072 Move X10, 0xD79000
	073 Move X26, [X11+32]
	074 Move X27, [X9+32]
	075 NotImplemented "Instruction LDRH not yet implemented."
	076 Move X10, [X10+2328]
	077 Move X1, [X10]
	078 Compare X9, 0
	079 JumpIfEqual {86}
	080 Move X10, [X8+176]
	081 Add X10, X10, 8
	082 NotImplemented "Instruction LDUR not yet implemented."
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Subtract X9, X9, 1
	085 Add X10, X10, 16
	086 Move X0, X25
	087 Move W2, W31
	088 Call 0x1C5D788
	089 NotImplemented "Instruction LDRSW not yet implemented."
	090 Add X8, X8, X9
	091 Add X0, X8, 312
	092 Move X8, [X0]
	093 Move X3, [X0+8]
	094 Move X0, X25
	095 Move X1, X26
	096 Move X2, X27
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Or W20, W20, W0
	099 Move X9, [X19]
	100 Compare X9, 0
	101 JumpIfEqual {232}
	102 Move W8, [X9+24]
	103 Add W10, W28, W20
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X25, [X19+16]
	106 Compare X25, 0
	107 JumpIfEqual {232}
	108 Move X8, [X25]
	109 Move X27, W10
	110 Add X9, X9, X27
	111 Move X10, 0xD79000
	112 Move X26, [X9+32]
	113 NotImplemented "Instruction LDRH not yet implemented."
	114 Move X10, [X10+2328]
	115 Move X1, [X10]
	116 Compare X9, 0
	117 JumpIfEqual {124}
	118 Move X10, [X8+176]
	119 Add X10, X10, 8
	120 NotImplemented "Instruction LDUR not yet implemented."
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Subtract X9, X9, 1
	123 Add X10, X10, 16
	124 Move X0, X25
	125 Move W2, W31
	126 Call 0x1C5D788
	127 NotImplemented "Instruction LDRSW not yet implemented."
	128 Add X8, X8, X9
	129 Add X0, X8, 312
	130 Move X8, [X0]
	131 Move X3, [X0+8]
	132 Move X0, X25
	133 Move X1, X21
	134 Move X2, X26
	135 NotImplemented "Instruction BLR not yet implemented."
	136 Move TEMP, X0
	137 And TEMP, TEMP, -2147483648
	138 Compare TEMP, -2147483648
	139 JumpIfNotEqual {182}
	140 Move X22, [X19]
	141 Compare X22, 0
	142 JumpIfEqual {232}
	143 Move W8, [X22+24]
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Add X9, X22, X27
	146 Move X25, [X9+32]
	147 Compare X25, 0
	148 JumpIfEqual {156}
	149 Move X8, [X22]
	150 Move X0, X25
	151 Move X1, [X8+64]
	152 Call 0x1C17E00
	153 Compare X0, 0
	154 JumpIfEqual {233}
	155 Move W8, [X22+24]
	156 Add W9, W28, W24
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Move X26, W9
	159 Add X8, X22, X26
	160 Move [X8+32], X25
	161 Move X22, [X19+8]
	162 Compare X22, 0
	163 JumpIfEqual {180}
	164 Move W8, [X22+24]
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Add X9, X22, X27
	167 Move X24, [X9+32]
	168 Compare X24, 0
	169 JumpIfEqual {177}
	170 Move X8, [X22]
	171 Move X0, X24
	172 Move X1, [X8+64]
	173 Call 0x1C17E00
	174 Compare X0, 0
	175 JumpIfEqual {233}
	176 Move W8, [X22+24]
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Add X8, X22, X26
	179 Move [X8+32], X24
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Move W24, W20
	182 Move W20, W24
	183 Move X22, [X19]
	184 Move W24, W20
	185 Compare X22, 0
	186 JumpIfEqual {232}
	187 Compare X21, 0
	188 JumpIfEqual {195}
	189 Move X8, [X22]
	190 Move X0, X21
	191 Move X1, [X8+64]
	192 Call 0x1C17E00
	193 Compare X0, 0
	194 JumpIfEqual {233}
	195 Move W9, [X22+24]
	196 Add W8, W28, W24
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Move X20, W8
	199 Add X8, X22, X20
	200 Move [X8+32], X21
	201 Move X19, [X19+8]
	202 Compare X19, 0
	203 JumpIfEqual {217}
	204 Move X21, [X31]
	205 Compare X21, 0
	206 JumpIfEqual {213}
	207 Move X8, [X19]
	208 Move X0, X21
	209 Move X1, [X8+64]
	210 Call 0x1C17E00
	211 Compare X0, 0
	212 JumpIfEqual {233}
	213 Move W8, [X19+24]
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Add X8, X19, X20
	216 Move [X8+32], X21
	217 Move X20, [X31+96]
	218 Move X19, [X31+104]
	219 Move X22, [X31+80]
	220 Move X21, [X31+88]
	221 Move X24, [X31+64]
	222 Move X23, [X31+72]
	223 Move X26, [X31+48]
	224 Move X25, [X31+56]
	225 Move X28, [X31+32]
	226 Move X27, [X31+40]
	227 Move X29, [X31+16]
	228 Move X30, [X31+24]
	229 Add X31, X31, 112
	230 Return 
	231 Call 0x1C17F28
	232 Call 0x1C17F20
	233 Call 0x1C17F44
	234 Move X1, X31
	235 Call 0x1C17DEC

Method: System.Void InsertionSort(System.Int32 lo, System.Int32 hi)

Disassembly:
	0x033A4C00 CBZ X0, 0x33A4C58
	0x033A4C04 ADD W23, W23, 0x1
	0x033A4C08 MOV X1, X25
	0x033A4C0C MOV W2, W23
	0x033A4C10 MOV X3, X31
	0x033A4C14 BL 0x339F798
	0x033A4C18 LDR X0, [X21 + 0x8]
	0x033A4C1C CBZ X0, 0x33A4C30
	0x033A4C20 MOV X1, X24
	0x033A4C24 MOV W2, W23
	0x033A4C28 MOV X3, X31
	0x033A4C2C BL 0x339F798
	0x033A4C30 CMP W22, W19
	0x033A4C34 MOV W23, W22
	0x033A4C38 B.NE 0x33A4ACC
	0x033A4C3C LDP X20, X19, [X31 + 0x50]
	0x033A4C40 LDP X22, X21, [X31 + 0x40]
	0x033A4C44 LDP X24, X23, [X31 + 0x30]
	0x033A4C48 LDP X26, X25, [X31 + 0x20]
	0x033A4C4C LDP X28, X27, [X31 + 0x10]
	0x033A4C50 LDR X30, [X31], #0x60
	0x033A4C54 RET
	0x033A4C58 BL 0x1C16F20
	0x033A4C5C STP X30, X23, [X31 - 0x30]!
	0x033A4C60 STP X22, X21, [X31 + 0x10]
	0x033A4C64 STP X20, X19, [X31 + 0x20]
	0x033A4C68 SUB W8, W2, W1
	0x033A4C6C ADD W22, W8, 0x1
	0x033A4C70 CMP W22, 0x2
	0x033A4C74 B.LT 0x33A4CEC
	0x033A4C78 MOV W19, W2
	0x033A4C7C MOV W20, W1
	0x033A4C80 MOV X21, X0
	0x033A4C84 UBFM W23, W22, 0x1, 0x1F
	0x033A4C88 MOV X0, X21
	0x033A4C8C MOV W1, W23
	0x033A4C90 MOV W2, W22
	0x033A4C94 MOV W3, W20
	0x033A4C98 BL 0x33A4F18
	0x033A4C9C SUBS W23, W23, 0x1
	0x033A4CA0 B.GT 0x33A4C88
	0x033A4CA4 CMP W22, 0x2
	0x033A4CA8 B.LT 0x33A4CEC
	0x033A4CAC SUB W23, W31, W20
	0x033A4CB0 MOV X0, X21
	0x033A4CB4 MOV W1, W20
	0x033A4CB8 MOV W2, W19
	0x033A4CBC ADD W22, W23, W19
	0x033A4CC0 BL 0x33A471C
	0x033A4CC4 MOVZ W1, 0x1
	0x033A4CC8 MOV X0, X21
	0x033A4CCC MOV W2, W22
	0x033A4CD0 MOV W3, W20
	0x033A4CD4 BL 0x33A4F18
	0x033A4CD8 SUB W19, W19, 0x1
	0x033A4CDC ADD W8, W23, W19
	0x033A4CE0 ADD W8, W8, 0x2
	0x033A4CE4 CMP W8, 0x2
	0x033A4CE8 B.GT 0x33A4CB0
	0x033A4CEC LDP X20, X19, [X31 + 0x20]
	0x033A4CF0 LDP X22, X21, [X31 + 0x10]
	0x033A4CF4 LDP X30, X23, [X31], #0x30
	0x033A4CF8 RET
	0x033A4CFC STR X30, [X31 - 0x50]!
	0x033A4D00 STP X26, X25, [X31 + 0x10]
	0x033A4D04 STP X24, X23, [X31 + 0x20]
	0x033A4D08 STP X22, X21, [X31 + 0x30]
	0x033A4D0C STP X20, X19, [X31 + 0x40]
	0x033A4D10 ADRP X22, 0x1039000
	0x033A4D14 LDRB W8, [X22 + 0x146]
	0x033A4D18 MOV W21, W2
	0x033A4D1C MOV W19, W1
	0x033A4D20 MOV X20, X0
	0x033A4D24 TBNZ X8, 0x0, 0x33A4D3C
	0x033A4D28 ADRP X0, 0xD79000
	0x033A4D2C LDR X0, [X0 + 0x918]
	0x033A4D30 BL 0x1C16CF4
	0x033A4D34 MOVZ W8, 0x1
	0x033A4D38 STRB W8, [X22 + 0x146]
	0x033A4D3C SUB W8, W21, W19
	0x033A4D40 CMP W8, 0x0
	0x033A4D44 CINC W8, W8, LT
	0x033A4D48 ADD W23, W19, W8, 0x1, ASR
	0x033A4D4C MOV X0, X20
	0x033A4D50 MOV W1, W19
	0x033A4D54 MOV W2, W23
	0x033A4D58 BL 0x33A454C
	0x033A4D5C MOV X0, X20
	0x033A4D60 MOV W1, W19
	0x033A4D64 MOV W2, W21
	0x033A4D68 BL 0x33A454C
	0x033A4D6C MOV X0, X20
	0x033A4D70 MOV W1, W23
	0x033A4D74 MOV W2, W21
	0x033A4D78 BL 0x33A454C
	0x033A4D7C LDR X0, [X20]
	0x033A4D80 CBZ X0, 0x33A4F14
	0x033A4D84 MOV W1, W23
	0x033A4D88 MOV X2, X31
	0x033A4D8C BL 0x3395BDC
	0x033A4D90 SUB W21, W21, 0x1
	0x033A4D94 MOV X22, X0
	0x033A4D98 MOV X0, X20
	0x033A4D9C MOV W1, W23
	0x033A4DA0 MOV W2, W21
	0x033A4DA4 BL 0x33A471C
	0x033A4DA8 CMP W21, W19
	0x033A4DAC B.LE 0x33A4EE8
	0x033A4DB0 ADRP X26, 0xD79000
	0x033A4DB4 LDR X26, [X26 + 0x918]
	0x033A4DB8 MOV W23, W21
	0x033A4DBC LDR X0, [X20]
	0x033A4DC0 CBZ X0, 0x33A4F14
	0x033A4DC4 LDR X24, [X20 + 0x10]
	0x033A4DC8 ADD W19, W19, 0x1
	0x033A4DCC MOV W1, W19
	0x033A4DD0 MOV X2, X31
	0x033A4DD4 BL 0x3395BDC
	0x033A4DD8 CBZ X24, 0x33A4F14
	0x033A4DDC LDR X8, [X24]
	0x033A4DE0 LDR X1, [X26]
	0x033A4DE4 MOV X25, X0
	0x033A4DE8 LDRH W9, [X8 + 0x12E]
	0x033A4DEC CBZ X9, 0x33A4E10
	0x033A4DF0 LDR X10, [X8 + 0xB0]
	0x033A4DF4 ADD X10, X10, 0x8
	0x033A4DF8 LDUR X11, [X10 - 0x8]
	0x033A4DFC CMP X11, X1
	0x033A4E00 B.EQ 0x33A4E20
	0x033A4E04 SUBS X9, X9, 0x1
	0x033A4E08 ADD X10, X10, 0x10
	0x033A4E0C B.NE 0x33A4DF8
	0x033A4E10 MOV X0, X24
	0x033A4E14 MOV W2, W31
	0x033A4E18 BL 0x1C5C788
	0x033A4E1C B 0x33A4E2C
	0x033A4E20 LDRSW X9, [X10]
	0x033A4E24 ADD X8, X8, X9, 0x4, LSL
	0x033A4E28 ADD X0, X8, 0x138
	0x033A4E2C LDP X8, X3, [X0]
	0x033A4E30 MOV X0, X24
	0x033A4E34 MOV X1, X25
	0x033A4E38 MOV X2, X22
	0x033A4E3C BLR X8
	0x033A4E40 TBNZ X0, 0x1F, 0x33A4DBC
	0x033A4E44 LDR X0, [X20]
	0x033A4E48 CBZ X0, 0x33A4F14
	0x033A4E4C LDR X24, [X20 + 0x10]
	0x033A4E50 SUB W23, W23, 0x1
	0x033A4E54 MOV W1, W23
	0x033A4E58 MOV X2, X31
	0x033A4E5C BL 0x3395BDC
	0x033A4E60 CBZ X24, 0x33A4F14
	0x033A4E64 LDR X8, [X24]
	0x033A4E68 LDR X1, [X26]
	0x033A4E6C MOV X25, X0
	0x033A4E70 LDRH W9, [X8 + 0x12E]
	0x033A4E74 CBZ X9, 0x33A4E98
	0x033A4E78 LDR X10, [X8 + 0xB0]
	0x033A4E7C ADD X10, X10, 0x8
	0x033A4E80 LDUR X11, [X10 - 0x8]
	0x033A4E84 CMP X11, X1
	0x033A4E88 B.EQ 0x33A4EA8
	0x033A4E8C SUBS X9, X9, 0x1
	0x033A4E90 ADD X10, X10, 0x10
	0x033A4E94 B.NE 0x33A4E80
	0x033A4E98 MOV X0, X24
	0x033A4E9C MOV W2, W31
	0x033A4EA0 BL 0x1C5C788
	0x033A4EA4 B 0x33A4EB4

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X22, 0x103A000
	015 Move W8, [X22+323]
	016 Move W21, W2
	017 Move W19, W1
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0xD7A000
	024 Move X0, [X0+2328]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+323], W8
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X8, W21
	030 Move [X31], X8
	031 Move X27, 0xD7A000
	032 Move X27, [X27+2328]
	033 Move X23, W19
	034 Move [X31+8], X23
	035 Move X24, [X20]
	036 Compare X24, 0
	037 JumpIfEqual {185}
	038 Move W8, [X24+24]
	039 Add X28, X23, 1
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Add X9, X24, X28
	042 Move X8, [X20+8]
	043 Move X22, [X9+32]
	044 Compare X8, 0
	045 JumpIfEqual {50}
	046 Move W9, [X8+24]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Add X8, X8, X28
	049 Move X21, [X8+32]
	050 Move X21, X31
	051 Move X8, [X31+8]
	052 Move W29, W23
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move W8, [X24+24]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X23, [X20+16]
	057 Compare X23, 0
	058 JumpIfEqual {185}
	059 Move X8, [X23]
	060 Move X26, W29
	061 Add X9, X24, X26
	062 Move X24, [X9+32]
	063 NotImplemented "Instruction LDRH not yet implemented."
	064 Move X1, [X27]
	065 Compare X9, 0
	066 JumpIfEqual {73}
	067 Move X10, [X8+176]
	068 Add X10, X10, 8
	069 NotImplemented "Instruction LDUR not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Subtract X9, X9, 1
	072 Add X10, X10, 16
	073 Move X0, X23
	074 Move W2, W31
	075 Call 0x1C5D788
	076 NotImplemented "Instruction LDRSW not yet implemented."
	077 Add X8, X8, X9
	078 Add X0, X8, 312
	079 Move X8, [X0]
	080 Move X3, [X0+8]
	081 Move X0, X23
	082 Move X1, X22
	083 Move X2, X24
	084 NotImplemented "Instruction BLR not yet implemented."
	085 Move TEMP, X0
	086 And TEMP, TEMP, -2147483648
	087 Compare TEMP, -2147483648
	088 JumpIfNotEqual {134}
	089 Move X25, [X20]
	090 Compare X25, 0
	091 JumpIfEqual {185}
	092 Move W8, [X25+24]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Add X9, X25, X26
	095 Move X23, [X9+32]
	096 Compare X23, 0
	097 JumpIfEqual {105}
	098 Move X8, [X25]
	099 Move X0, X23
	100 Move X1, [X8+64]
	101 Call 0x1C17E00
	102 Compare X0, 0
	103 JumpIfEqual {186}
	104 Move W8, [X25+24]
	105 Add W9, W29, 1
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move X24, W9
	108 Add X8, X25, X24
	109 Move [X8+32], X23
	110 Move X25, [X20+8]
	111 Compare X25, 0
	112 JumpIfEqual {129}
	113 Move W8, [X25+24]
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Add X9, X25, X26
	116 Move X23, [X9+32]
	117 Compare X23, 0
	118 JumpIfEqual {126}
	119 Move X8, [X25]
	120 Move X0, X23
	121 Move X1, [X8+64]
	122 Call 0x1C17E00
	123 Compare X0, 0
	124 JumpIfEqual {186}
	125 Move W8, [X25+24]
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Add X8, X25, X24
	128 Move [X8+32], X23
	129 Subtract W29, W29, 1
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Move X24, [X20]
	132 Compare X24, 0
	133 JumpIfNotEqual {54}
	134 Move X24, [X20]
	135 Move W23, W29
	136 Compare X24, 0
	137 JumpIfEqual {185}
	138 Compare X22, 0
	139 JumpIfEqual {146}
	140 Move X8, [X24]
	141 Move X0, X22
	142 Move X1, [X8+64]
	143 Call 0x1C17E00
	144 Compare X0, 0
	145 JumpIfEqual {186}
	146 Move W9, [X24+24]
	147 Add W8, W23, 1
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Move X23, W8
	150 Add X8, X24, X23
	151 Move [X8+32], X22
	152 Move X22, [X20+8]
	153 Compare X22, 0
	154 JumpIfEqual {167}
	155 Compare X21, 0
	156 JumpIfEqual {163}
	157 Move X8, [X22]
	158 Move X0, X21
	159 Move X1, [X8+64]
	160 Call 0x1C17E00
	161 Compare X0, 0
	162 JumpIfEqual {186}
	163 Move W8, [X22+24]
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Add X8, X22, X23
	166 Move [X8+32], X21
	167 Move X8, [X31]
	168 Move X23, X28
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Move X20, [X31+96]
	171 Move X19, [X31+104]
	172 Move X22, [X31+80]
	173 Move X21, [X31+88]
	174 Move X24, [X31+64]
	175 Move X23, [X31+72]
	176 Move X26, [X31+48]
	177 Move X25, [X31+56]
	178 Move X28, [X31+32]
	179 Move X27, [X31+40]
	180 Move X29, [X31+16]
	181 Move X30, [X31+24]
	182 Add X31, X31, 112
	183 Return 
	184 Call 0x1C17F28
	185 Call 0x1C17F20
	186 Call 0x1C17F44
	187 Move X1, X31
	188 Call 0x1C17DEC

