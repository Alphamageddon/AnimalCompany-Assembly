Type: System.ValueType

Method: System.Void .ctor()

Disassembly:
	0x033D6414 SBFM X9, X23, 0x10, 0x1F
	0x033D6418 SUB X9, X9, 0x6

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Boolean InternalEquals(System.Object o1, System.Object o2, out System.Object[] fields)

Disassembly:
	0x033D641C CMP W9, W10

ISIL:
	001 Call 0x1C8933C
	002 Return X0

Method: System.Boolean DefaultEquals(System.Object o1, System.Object o2)

Disassembly:
	0x033D6420 B.CS 0x33D66EC
	0x033D6424 ADD X8, X8, X9, 0x3, LSL
	0x033D6428 LDR V0, [X8 + 0x20]
	0x033D642C FDIV D8, D8, D0
	0x033D6430 ADRP X8, 0xFFFFFFFFFD717000
	0x033D6434 LDR V0, [X8 + 0x598]
	0x033D6438 MOVZ X9, 0x7FF00000
	0x033D643C FMOV D1, X9
	0x033D6440 FCMP D8, D0
	0x033D6444 CSET W8, PL
	0x033D6448 CMP W22, 0x1B
	0x033D644C CSET W10, GT
	0x033D6450 FMOV D0, 8.000000000465661
	0x033D6454 ORR W8, W10, W8, 0x0
	0x033D6458 FMUL D0, D8, D0
	0x033D645C CMP W8, 0x0
	0x033D6460 FCSEL D0, D8, D0, NE
	0x033D6464 MOVZ W10, 0x80000000
	0x033D6468 FCVTZS W9, D0
	0x033D646C FCMP D0, D1
	0x033D6470 CSEL W23, W10, W9, EQ
	0x033D6474 SCVTF D1, W23
	0x033D6478 FSUB D0, D0, D1
	0x033D647C FMOV D1, 0.5
	0x033D6480 FCMP D0, D1
	0x033D6484 B.GT 0x33D6498
	0x033D6488 TBZ X23, 0x0, 0x33D649C
	0x033D648C FMOV D1, 0.5
	0x033D6490 FCMP D0, D1
	0x033D6494 B.NE 0x33D649C
	0x033D6498 ADD W23, W23, 0x1
	0x033D649C CBZ W23, 0x33D6688
	0x033D64A0 EOR W8, W8, 0x1
	0x033D64A4 ADD W22, W22, W8
	0x033D64A8 UBFM W21, W21, 0x1, 0x0
	0x033D64AC TBNZ X22, 0x1F, 0x33D6584
	0x033D64B0 CMP W22, 0x6
	0x033D64B4 MOVZ W8, 0x6
	0x033D64B8 CSEL W8, W22, W8, LT
	0x033D64BC SUBS W9, W8, 0x4
	0x033D64C0 B.LT 0x33D64F8
	0x033D64C4 AND W10, W23, 0xF
	0x033D64C8 CBNZ W10, 0x33D64F8
	0x033D64CC MOVZ W10, 0x1759
	0x033D64D0 MOVK W10, 0xD1B70000
	0x033D64D4 UMADDL X10, X23, X10, X31
	0x033D64D8 UBFM X10, X10, 0x2D, 0x3F
	0x033D64DC MOVZ W11, 0x2710
	0x033D64E0 MUL W11, W10, W11
	0x033D64E4 CMP W23, W11
	0x033D64E8 B.NE 0x33D64F8
	0x033D64EC SUB W22, W22, 0x4
	0x033D64F0 MOV W8, W9
	0x033D64F4 MOV W23, W10
	0x033D64F8 CMP W8, 0x1
	0x033D64FC B.LE 0x33D6534
	0x033D6500 AND W9, W23, 0x3
	0x033D6504 CBNZ W9, 0x33D6534
	0x033D6508 MOVZ W9, 0x851F
	0x033D650C MOVK W9, 0x51EB0000
	0x033D6510 UMADDL X9, X23, X9, X31
	0x033D6514 UBFM X24, X9, 0x25, 0x3F
	0x033D6518 MOVZ W9, 0x64
	0x033D651C MUL W9, W24, W9
	0x033D6520 CMP W23, W9
	0x033D6524 B.NE 0x33D6534
	0x033D6528 SUB W22, W22, 0x2
	0x033D652C SUB W8, W8, 0x2
	0x033D6530 B 0x33D6538
	0x033D6534 MOV W24, W23
	0x033D6538 CMP W8, 0x1
	0x033D653C B.LT 0x33D6568
	0x033D6540 TBNZ X24, 0x0, 0x33D6568
	0x033D6544 MOVZ W8, 0xCCCD
	0x033D6548 MOVK W8, 0xCCCC0000
	0x033D654C UMADDL X8, X24, X8, X31
	0x033D6550 UBFM X8, X8, 0x23, 0x3F
	0x033D6554 ADD W9, W8, W8, 0x2, LSL
	0x033D6558 CMP W24, W9, LSL
	0x033D655C CSET W9, EQ
	0x033D6560 CSEL W24, W8, W24, EQ
	0x033D6564 SUB W22, W22, W9
	0x033D6568 LDR X0, [X20]
	0x033D656C ORR W21, W21, W22, 0x10
	0x033D6570 LDR W8, [X0 + 0xE0]
	0x033D6574 CBNZ W8, 0x33D657C
	0x033D6578 BL 0x1C16DFC
	0x033D657C STR W24, [X19 + 0x8]
	0x033D6580 B 0x33D6684
	0x033D6584 ADDS W31, W22, 0x9
	0x033D6588 B.GE 0x33D6604
	0x033D658C LDR X0, [X20]
	0x033D6590 LDR W8, [X0 + 0xE0]
	0x033D6594 CBNZ W8, 0x33D65A0
	0x033D6598 BL 0x1C16DFC
	0x033D659C LDR X0, [X20]
	0x033D65A0 LDR X8, [X0 + 0xB8]
	0x033D65A4 LDR X8, [X8]
	0x033D65A8 CBZ X8, 0x33D66E8
	0x033D65AC ADDS W31, W22, 0x13
	0x033D65B0 B.LE 0x33D664C
	0x033D65B4 LDR W10, [X8 + 0x18]
	0x033D65B8 MOVN W9, 0x8
	0x033D65BC SUB W9, W9, W22
	0x033D65C0 CMP W9, W10
	0x033D65C4 B.CS 0x33D66EC
	0x033D65C8 ADD X8, X8, W9, 0x2, UXTW
	0x033D65CC LDR W8, [X8 + 0x20]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x1008000
	009 Move W8, [X21+743]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xD47000
	017 Move X0, [X0+1256]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+743], W8
	021 Or X8, X20, X19
	022 NotImplemented "Instruction CMP not yet implemented."
	023 NotImplemented "Instruction CSET not yet implemented."
	024 Move [X31+8], X31
	025 Compare X20, 0
	026 JumpIfEqual {111}
	027 Compare X19, 0
	028 JumpIfEqual {111}
	029 Move X0, X20
	030 Move X1, X31
	031 Call "il2cpp_vm_object_is_inst", X0
	032 Move X21, X0
	033 Move X0, X19
	034 Move X1, X31
	035 Call "il2cpp_vm_object_is_inst", X0
	036 Move X23, 0xD47000
	037 Move X23, [X23+1256]
	038 Move X22, X0
	039 Move X1, [X23]
	040 Compare X0, 0
	041 JumpIfEqual {50}
	042 Move X8, [X22]
	043 Move W9, [X1+304]
	044 Move W10, [X8+304]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X8, [X8+200]
	047 Add X8, X8, X9
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move W8, [X1+224]
	051 Compare W8, 0
	052 JumpIfEqual {55}
	053 Compare X21, 0
	054 JumpIfNotEqual {60}
	055 Move X0, X1
	056 Call 0x1C17DFC
	057 Move X1, [X23]
	058 Compare X21, 0
	059 JumpIfEqual {68}
	060 Move X8, [X21]
	061 Move W9, [X1+304]
	062 Move W10, [X8+304]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X8, [X8+200]
	065 Add X8, X8, X9
	066 NotImplemented "Instruction LDUR not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X0, X21
	069 Move X1, X22
	070 Move X2, X31
	071 Call RuntimeType.op_Inequality, X0, X1
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {77}
	076 Move W0, W31
	077 Add X2, X31, 8
	078 Move X0, X20
	079 Move X1, X19
	080 Call 0x1C8933C
	081 Move X8, [X31+8]
	082 Compare X8, 0
	083 JumpIfEqual {111}
	084 Move W9, W31
	085 Move W10, [X8+24]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Add W19, W9, 1
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Add X9, X8, W9
	090 Move X0, [X9+32]
	091 Add X9, X8, W19
	092 Move X1, [X9+32]
	093 Compare X0, 0
	094 JumpIfEqual {104}
	095 Move X8, [X0]
	096 Move X9, [X8+312]
	097 Move X2, [X8+320]
	098 NotImplemented "Instruction BLR not yet implemented."
	099 Move TEMP, X0
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfNotEqual {76}
	103 Move X8, [X31+8]
	104 Compare X1, 0
	105 JumpIfNotEqual {76}
	106 Add W9, W19, 1
	107 Compare X8, 0
	108 JumpIfNotEqual {85}
	109 Call 0x1C17F20
	110 Move W0, 1
	111 Move X20, [X31+48]
	112 Move X19, [X31+56]
	113 Move X22, [X31+32]
	114 Move X21, [X31+40]
	115 Move X30, [X31+16]
	116 Move X23, [X31+24]
	117 And W0, W0, 1
	118 Add X31, X31, 64
	119 Return X0
	120 Call 0x1C17F28
	121 Move X0, X22
	122 Call 0x1C181E0
	123 Move X0, X21
	124 Call 0x1C181E0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x033D65D0 MOV W9, W23

ISIL:
	001 Call ValueType.DefaultEquals, X0, X1
	002 Return X0

Method: System.Int32 InternalGetHashCode(System.Object o, out System.Object[] fields)

Disassembly:
	0x033D65D4 MOVZ W10, 0xCA00

ISIL:
	001 Call 0x1C89650
	002 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x033D65D8 MOVK W10, 0x3B9A0000
	0x033D65DC MUL X8, X8, X9
	0x033D65E0 UBFM X9, X8, 0x20, 0x3F
	0x033D65E4 AND X8, X8, 0x0
	0x033D65E8 MUL X9, X9, X10
	0x033D65EC MUL X8, X8, X10
	0x033D65F0 ADD X9, X9, X8, 0x20, LSR
	0x033D65F4 STP W8, W9, [X19 + 0x8]
	0x033D65F8 UBFM X9, X9, 0x20, 0x3F
	0x033D65FC STR W9, [X19 + 0x4]
	0x033D6600 B 0x33D6684
	0x033D6604 LDR X0, [X20]
	0x033D6608 LDR W8, [X0 + 0xE0]
	0x033D660C CBNZ W8, 0x33D6618
	0x033D6610 BL 0x1C16DFC
	0x033D6614 LDR X0, [X20]
	0x033D6618 LDR X8, [X0 + 0xB8]
	0x033D661C LDR X8, [X8]
	0x033D6620 CBZ X8, 0x33D66E8
	0x033D6624 LDR W10, [X8 + 0x18]
	0x033D6628 SUB W9, W31, W22
	0x033D662C CMP W9, W10
	0x033D6630 B.CS 0x33D66EC
	0x033D6634 ADD X8, X8, W9, 0x2, UXTW
	0x033D6638 LDR W8, [X8 + 0x20]
	0x033D663C MOV W9, W23
	0x033D6640 MUL X8, X8, X9
	0x033D6644 STR X8, [X19 + 0x8]
	0x033D6648 B 0x33D6684
	0x033D664C LDR W10, [X8 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Add X1, X31, 8
	005 Move [X31+8], X31
	006 Call 0x1C89650
	007 Move X8, [X31+8]
	008 Move W19, W0
	009 Compare X8, 0
	010 JumpIfEqual {29}
	011 Move X20, X31
	012 Move W9, [X8+24]
	013 NotImplemented "Instruction CMP not yet implemented."
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Add X9, X8, X20
	016 Move X0, [X9+32]
	017 Compare X0, 0
	018 JumpIfEqual {25}
	019 Move X8, [X0]
	020 Move X9, [X8+344]
	021 Move X1, [X8+352]
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Move X8, [X31+8]
	024 Xor W19, W0, W19
	025 Add X20, X20, 1
	026 Compare X8, 0
	027 JumpIfNotEqual {12}
	028 Call 0x1C17F20
	029 Move W0, W19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Return X0
	034 Call 0x1C17F28

Method: System.String ToString()

Disassembly:
	0x033D6650 MOVN W9, 0x11
	0x033D6654 SUB W9, W9, W22
	0x033D6658 CMP W9, W10
	0x033D665C B.CS 0x33D66EC
	0x033D6660 ADD X8, X8, W9, 0x2, UXTW
	0x033D6664 LDR W8, [X8 + 0x20]
	0x033D6668 MOVZ X1, 0xA7640000
	0x033D666C MOV W9, W23
	0x033D6670 MOVK X1, 0xB6B3
	0x033D6674 MUL X0, X8, X9

ISIL:
	001 Move [X31-16], X30
	002 Move X1, X31
	003 Call "il2cpp_vm_object_is_inst", X0
	004 Compare X0, 0
	005 JumpIfEqual {11}
	006 Move X8, [X0]
	007 Move X2, [X8+744]
	008 Move X1, [X8+752]
	009 Move X30, [X31+16]
	010 CallNoReturn X2
	011 Call 0x1C17F20

