Type: System.DateTime

Method: System.Void .ctor(System.Int64 ticks)

Disassembly:
	0x0335FEB0 MOV X19, X0
	0x0335FEB4 ADRP X0, 0xD9E000
	0x0335FEB8 LDR X0, [X0 + 0xEC8]
	0x0335FEBC BL 0x1C16D08
	0x0335FEC0 MOV X20, X0
	0x0335FEC4 ADRP X0, 0xDCB000
	0x0335FEC8 LDR X0, [X0 + 0x988]
	0x0335FECC BL 0x1C16D08
	0x0335FED0 MOV X2, X0
	0x0335FED4 MOV X0, X19
	0x0335FED8 MOV X1, X20
	0x0335FEDC MOV X3, X31
	0x0335FEE0 BL 0x3311888
	0x0335FEE4 ADRP X0, 0xDCB000
	0x0335FEE8 LDR X0, [X0 + 0x990]
	0x0335FEEC BL 0x1C16D08
	0x0335FEF0 MOV X1, X0
	0x0335FEF4 MOV X0, X19
	0x0335FEF8 BL 0x1C16DEC
	0x0335FEFC STR D8, [X31 - 0x30]!
	0x0335FF00 STP X30, X21, [X31 + 0x10]
	0x0335FF04 STP X20, X19, [X31 + 0x20]
	0x0335FF08 ADRP X20, 0x107D000
	0x0335FF0C ADRP X21, 0xD95000
	0x0335FF10 LDRB W8, [X20 + 0xE35]
	0x0335FF14 LDR X21, [X21 + 0x9F0]
	0x0335FF18 MOV V8.16B, V0.16B
	0x0335FF1C MOV X19, X0
	0x0335FF20 TBNZ X8, 0x0, 0x335FF38
	0x0335FF24 ADRP X0, 0xD95000
	0x0335FF28 LDR X0, [X0 + 0x9F0]
	0x0335FF2C BL 0x1C16CF4
	0x0335FF30 MOVZ W8, 0x1
	0x0335FF34 STRB W8, [X20 + 0xE35]
	0x0335FF38 LDR X0, [X21]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, 0x4000
	005 NotImplemented "Instruction MOVK not yet implemented."
	006 NotImplemented "Instruction MOVK not yet implemented."
	007 NotImplemented "Instruction MOVK not yet implemented."
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move [X0], X1
	012 Move X30, [X31+32]
	013 Return 
	014 Move X0, 0xD9D000
	015 Move X0, [X0+1888]
	016 Call 0x1C17D08
	017 Call 0x1C17F10
	018 Move X19, X0
	019 Move X0, 0xDCC000
	020 Move X0, [X0+2288]
	021 Call 0x1C17D08
	022 Move X20, X0
	023 Move X0, 0xDCC000
	024 Move X0, [X0+2296]
	025 Call 0x1C17D08
	026 Move X2, X0
	027 Move X0, X19
	028 Move X1, X20
	029 Move X3, X31
	030 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	031 Move X0, 0xDCC000
	032 Move X0, [X0+2304]
	033 Call 0x1C17D08
	034 Move X1, X0
	035 Move X0, X19
	036 Call 0x1C17DEC

Method: System.Void .ctor(System.UInt64 dateData)

Disassembly:
	0x0335FF3C LDR W8, [X0 + 0xE0]
	0x0335FF40 CBNZ W8, 0x335FF48

ISIL:
	001 Move [X0], X1
	002 Return 

Method: System.Void .ctor(System.Int64 ticks, System.DateTimeKind kind)

Disassembly:
	0x0335FF44 BL 0x1C16DFC
	0x0335FF48 MOV X0, X19
	0x0335FF4C LDP X20, X19, [X31 + 0x20]
	0x0335FF50 LDP X30, X21, [X31 + 0x10]
	0x0335FF54 MOVZ W1, 0x5C00
	0x0335FF58 MOVK W1, 0x5260000
	0x0335FF5C MOV V0.16B, V8.16B
	0x0335FF60 LDR V8, [X31], #0x30
	0x0335FF64 B 0x335FDD4
	0x0335FF68 STR D8, [X31 - 0x30]!
	0x0335FF6C STP X30, X21, [X31 + 0x10]
	0x0335FF70 STP X20, X19, [X31 + 0x20]
	0x0335FF74 ADRP X20, 0x107D000
	0x0335FF78 ADRP X21, 0xD95000
	0x0335FF7C LDRB W8, [X20 + 0xE36]
	0x0335FF80 LDR X21, [X21 + 0x9F0]
	0x0335FF84 MOV V8.16B, V0.16B
	0x0335FF88 MOV X19, X0
	0x0335FF8C TBNZ X8, 0x0, 0x335FFA4
	0x0335FF90 ADRP X0, 0xD95000
	0x0335FF94 LDR X0, [X0 + 0x9F0]
	0x0335FF98 BL 0x1C16CF4
	0x0335FF9C MOVZ W8, 0x1
	0x0335FFA0 STRB W8, [X20 + 0xE36]
	0x0335FFA4 LDR X0, [X21]
	0x0335FFA8 LDR W8, [X0 + 0xE0]
	0x0335FFAC CBNZ W8, 0x335FFB4
	0x0335FFB0 BL 0x1C16DFC
	0x0335FFB4 MOV X0, X19
	0x0335FFB8 LDP X20, X19, [X31 + 0x20]
	0x0335FFBC LDP X30, X21, [X31 + 0x10]
	0x0335FFC0 MOVZ W1, 0x1
	0x0335FFC4 MOV V0.16B, V8.16B
	0x0335FFC8 LDR V8, [X31], #0x30
	0x0335FFCC B 0x335FDD4
	0x0335FFD0 STR D8, [X31 - 0x30]!
	0x0335FFD4 STP X30, X21, [X31 + 0x10]
	0x0335FFD8 STP X20, X19, [X31 + 0x20]
	0x0335FFDC ADRP X20, 0x107D000
	0x0335FFE0 ADRP X21, 0xD95000
	0x0335FFE4 LDRB W8, [X20 + 0xE37]
	0x0335FFE8 LDR X21, [X21 + 0x9F0]
	0x0335FFEC MOV V8.16B, V0.16B
	0x0335FFF0 MOV X19, X0
	0x0335FFF4 TBNZ X8, 0x0, 0x336000C
	0x0335FFF8 ADRP X0, 0xD95000
	0x0335FFFC LDR X0, [X0 + 0x9F0]
	0x03360000 BL 0x1C16CF4
	0x03360004 MOVZ W8, 0x1
	0x03360008 STRB W8, [X20 + 0xE37]
	0x0336000C LDR X0, [X21]
	0x03360010 LDR W8, [X0 + 0xE0]
	0x03360014 CBNZ W8, 0x336001C
	0x03360018 BL 0x1C16DFC
	0x0336001C MOV X0, X19
	0x03360020 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, 0x4000
	005 NotImplemented "Instruction MOVK not yet implemented."
	006 NotImplemented "Instruction MOVK not yet implemented."
	007 NotImplemented "Instruction MOVK not yet implemented."
	008 NotImplemented "Instruction CMP not yet implemented."
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X20, [X31+16]
	011 Move X19, [X31+24]
	012 Or X8, X1, X2
	013 Move [X0], X8
	014 Move X30, [X31+32]
	015 Return 
	016 Move X0, 0xD9D000
	017 Move X0, [X0+1888]
	018 Call 0x1C17D08
	019 Call 0x1C17F10
	020 Move X19, X0
	021 Move X0, 0xDCC000
	022 Move X0, [X0+2288]
	023 Call 0x1C17D08
	024 Move X20, X0
	025 Move X0, 0xDCC000
	026 Move X0, [X0+2296]
	027 Call 0x1C17D08
	028 Move X2, X0
	029 Move X0, X19
	030 Move X1, X20
	031 Move X3, X31
	032 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	033 Move X0, 0xD9D000
	034 Move X0, [X0+1400]
	035 Call 0x1C17D08
	036 Call 0x1C17F10
	037 Move X19, X0
	038 Move X0, 0xDCC000
	039 Move X0, [X0+2312]
	040 Call 0x1C17D08
	041 Move X20, X0
	042 Move X0, 0xDCC000
	043 Move X0, [X0+2320]
	044 Call 0x1C17D08
	045 Move X2, X0
	046 Move X0, X19
	047 Move X1, X20
	048 Move X3, X31
	049 Call ArgumentException..ctor, X0, X1, X2
	050 Move X0, 0xDCB000
	051 Move X0, [X0+2328]
	052 Call 0x1C17D08
	053 Move X1, X0
	054 Move X0, X19
	055 Call 0x1C17DEC

Method: System.Void .ctor(System.Int64 ticks, System.DateTimeKind kind, System.Boolean isAmbiguousDst)

Disassembly:
	0x03360024 LDP X30, X21, [X31 + 0x10]
	0x03360028 MOVZ W1, 0xEA60
	0x0336002C MOV V0.16B, V8.16B
	0x03360030 LDR V8, [X31], #0x30
	0x03360034 B 0x335FDD4
	0x03360038 SUB X31, X31, 0x40
	0x0336003C STP X30, X23, [X31 + 0x10]
	0x03360040 STP X22, X21, [X31 + 0x20]
	0x03360044 STP X20, X19, [X31 + 0x30]
	0x03360048 ADRP X21, 0x107C000
	0x0336004C LDRB W8, [X21 + 0xE38]
	0x03360050 MOV W20, W1
	0x03360054 MOV X19, X0
	0x03360058 TBNZ X8, 0x0, 0x3360070
	0x0336005C ADRP X0, 0xD94000
	0x03360060 LDR X0, [X0 + 0x9F0]
	0x03360064 BL 0x1C16CF4
	0x03360068 MOVZ W8, 0x1
	0x0336006C STRB W8, [X21 + 0xE38]
	0x03360070 MOVZ W8, 0xD4C0
	0x03360074 MOVK W8, 0x10000
	0x03360078 MOVZ W9, 0xA981
	0x0336007C ADD W8, W20, W8
	0x03360080 MOVK W9, 0x30000
	0x03360084 CMP W8, W9
	0x03360088 STR X31, [X31 + 0x8]
	0x0336008C STR W31, [X31 + 0x4]
	0x03360090 B.CS 0x33601EC
	0x03360094 ADRP X22, 0xD94000
	0x03360098 LDR X22, [X22 + 0x9F0]
	0x0336009C LDR X0, [X22]
	0x033600A0 LDR W8, [X0 + 0xE0]
	0x033600A4 CBNZ W8, 0x33600AC
	0x033600A8 BL 0x1C16DFC
	0x033600AC ADD X1, X31, 0xC
	0x033600B0 ADD X2, X31, 0x8
	0x033600B4 ADD X3, X31, 0x4
	0x033600B8 MOV X0, X19
	0x033600BC BL 0x3360278
	0x033600C0 LDR W8, [X31 + 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, 0x4000
	005 NotImplemented "Instruction MOVK not yet implemented."
	006 NotImplemented "Instruction MOVK not yet implemented."
	007 NotImplemented "Instruction MOVK not yet implemented."
	008 NotImplemented "Instruction CMP not yet implemented."
	009 And W31, W3, 1
	010 Move X8, 0x80000000
	011 Move X9, 0xC0000000
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 NotImplemented "Instruction CSEL not yet implemented."
	015 Or X8, X8, X1
	016 Move [X0], X8
	017 Move X30, [X31+32]
	018 Return 
	019 Move X0, 0xD9C000
	020 Move X0, [X0+1888]
	021 Call 0x1C17D08
	022 Call 0x1C17F10
	023 Move X19, X0
	024 Move X0, 0xDCB000
	025 Move X0, [X0+2288]
	026 Call 0x1C17D08
	027 Move X20, X0
	028 Move X0, 0xDCB000
	029 Move X0, [X0+2296]
	030 Call 0x1C17D08
	031 Move X2, X0
	032 Move X0, X19
	033 Move X1, X20
	034 Move X3, X31
	035 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	036 Move X0, 0xDCB000
	037 Move X0, [X0+2336]
	038 Call 0x1C17D08
	039 Move X1, X0
	040 Move X0, X19
	041 Call 0x1C17DEC

Method: System.Void .ctor(System.Int32 year, System.Int32 month, System.Int32 day)

Disassembly:
	0x033600C4 ADD W8, W8, W20
	0x033600C8 SUBS W9, W8, 0x1
	0x033600CC B.MI 0x33600F8
	0x033600D0 MOVZ W8, 0xAAAB
	0x033600D4 MOVK W8, 0xAAAA0000
	0x033600D8 LDR W11, [X31 + 0xC]
	0x033600DC UMADDL X8, X9, X8, X31
	0x033600E0 MOVZ W10, 0xC
	0x033600E4 UBFM X8, X8, 0x23, 0x3F
	0x033600E8 MSUB W9, W8, W10, W9
	0x033600EC ADD W20, W9, 0x1
	0x033600F0 ADD W21, W11, W8
	0x033600F4 B 0x336013C
	0x033600F8 MOVZ W10, 0xAAAB
	0x033600FC MOVZ W14, 0xAAAB
	0x03360100 SUB W9, W31, W8
	0x03360104 MOVK W10, 0xAAAA0000
	0x03360108 LDR W12, [X31 + 0xC]
	0x0336010C SUB W13, W8, 0xC
	0x03360110 MOVK W14, 0x2AAA0000
	0x03360114 UMADDL X9, X9, X10, X31
	0x03360118 SMADDL X10, X13, X14, X31
	0x0336011C MOVZ W11, 0xC
	0x03360120 UBFM X9, X9, 0x23, 0x3F
	0x03360124 UBFM X13, X10, 0x3F, 0x3F
	0x03360128 SBFM X10, X10, 0x21, 0x3F
	0x0336012C MADD W8, W9, W11, W8
	0x03360130 ADD W9, W10, W13
	0x03360134 ADD W20, W8, 0xC
	0x03360138 ADD W21, W12, W9
	0x0336013C SUB W8, W21, 0x1
	0x03360140 MOVZ W9, 0x270F

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x107D000
	009 Move X24, 0xD95000
	010 Move W8, [X23+3629]
	011 Move X24, [X24+2544]
	012 Move W20, W3
	013 Move W21, W2
	014 Move W22, W1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xD95000
	021 Move X0, [X0+2544]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+3629], W8
	025 Move X0, [X24]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move W0, W22
	031 Move W1, W21
	032 Move W2, W20
	033 Call DateTime.DateToTicks, X0, X1, X2
	034 Move [X19], X0
	035 Move X20, [X31+48]
	036 Move X19, [X31+56]
	037 Move X22, [X31+32]
	038 Move X21, [X31+40]
	039 Move X24, [X31+16]
	040 Move X23, [X31+24]
	041 Move X30, [X31+64]
	042 Return 

Method: System.Void .ctor(System.Int32 year, System.Int32 month, System.Int32 day, System.Int32 hour, System.Int32 minute, System.Int32 second)

Disassembly:
	0x033602FC MOVZ W11, 0xC54F
	0x03360300 MUL X10, X8, X10
	0x03360304 MOVK W11, 0xFFFD0000
	0x03360308 MOVZ W12, 0x81FB
	0x0336030C UBFM X10, X10, 0x2F, 0x3F
	0x03360310 MOVK W12, 0xE5AC0000
	0x03360314 MADD W8, W10, W11, W8
	0x03360318 ADD W11, W8, W11
	0x0336031C SMADDL X12, X8, X12, X31
	0x03360320 MOVZ W13, 0x8EAC
	0x03360324 ADD W11, W11, 0x1
	0x03360328 UBFM X12, X12, 0x20, 0x3F
	0x0336032C CMP W11, W13
	0x03360330 MOVZ W13, 0x190
	0x03360334 ADD W12, W12, W8
	0x03360338 MUL W10, W10, W13
	0x0336033C SBFM W13, W12, 0xF, 0x1F
	0x03360340 MOVZ W14, 0x3
	0x03360344 ADD W12, W13, W12, 0x1F, LSR
	0x03360348 MOVN W15, 0x8EAB
	0x0336034C MOVZ W9, 0xB073
	0x03360350 CSEL W12, W14, W12, CC
	0x03360354 MOVK W9, 0x166D0000
	0x03360358 MADD W8, W12, W15, W8
	0x0336035C MOVZ W15, 0x64
	0x03360360 ORR W10, W10, 0x1
	0x03360364 SMADDL X9, X8, X9, X31
	0x03360368 MADD W10, W12, W15, W10
	0x0336036C UBFM X15, X9, 0x20, 0x3F
	0x03360370 UBFM X9, X9, 0x3F, 0x3F
	0x03360374 MOVN W11, 0x5B4
	0x03360378 MOVZ W13, 0xF9B1
	0x0336037C ADD W9, W9, W15, 0x7, ASR
	0x03360380 MOVK W13, 0xB38C0000
	0x03360384 MOVN W15, 0x88F7
	0x03360388 MADD W22, W9, W11, W8
	0x0336038C ADD W15, W8, W15
	0x03360390 ADD W8, W10, W9, 0x2, LSL
	0x03360394 SMADDL X9, X22, X13, X31
	0x03360398 UBFM X9, X9, 0x20, 0x3F
	0x0336039C SUB W10, W22, 0x5B4
	0x033603A0 ADD W9, W9, W22
	0x033603A4 CMP W10, 0x16D

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X26, 0x107D000
	012 Move X27, 0xD95000
	013 Move W8, [X26+3630]
	014 Move X27, [X27+2544]
	015 Move W19, W6
	016 Move W21, W5
	017 Move W22, W4
	018 Move W23, W3
	019 Move W24, W2
	020 Move W25, W1
	021 Move X20, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0xD95000
	027 Move X0, [X0+2544]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X26+3630], W8
	031 Move X0, [X27]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move W0, W25
	037 Move W1, W24
	038 Move W2, W23
	039 Call DateTime.DateToTicks, X0, X1, X2
	040 Move X23, X0
	041 Move W0, W22
	042 Move W1, W21
	043 Move W2, W19
	044 Call DateTime.TimeToTicks, X0, X1, X2
	045 Add X8, X0, X23
	046 Move [X20], X8
	047 Move X20, [X31+64]
	048 Move X19, [X31+72]
	049 Move X22, [X31+48]
	050 Move X21, [X31+56]
	051 Move X24, [X31+32]
	052 Move X23, [X31+40]
	053 Move X26, [X31+16]
	054 Move X25, [X31+24]
	055 Move X30, [X31+80]
	056 Move X27, [X31+88]
	057 Return 

Method: System.Void .ctor(System.Int32 year, System.Int32 month, System.Int32 day, System.Int32 hour, System.Int32 minute, System.Int32 second, System.DateTimeKind kind)

Disassembly:
	0x0336047C ADRP X21, 0x107C000
	0x03360480 LDRB W8, [X21 + 0xE41]
	0x03360484 MOV W19, W1
	0x03360488 MOV W20, W0
	0x0336048C TBNZ X8, 0x0, 0x33604A4
	0x03360490 ADRP X0, 0xD94000
	0x03360494 LDR X0, [X0 + 0x9F0]
	0x03360498 BL 0x1C16CF4
	0x0336049C MOVZ W8, 0x1
	0x033604A0 STRB W8, [X21 + 0xE41]
	0x033604A4 SUB W21, W19, 0x1
	0x033604A8 CMP W21, 0xC
	0x033604AC B.CS 0x336053C
	0x033604B0 ADRP X22, 0xD94000
	0x033604B4 LDR X22, [X22 + 0x9F0]
	0x033604B8 LDR X0, [X22]
	0x033604BC LDR W8, [X0 + 0xE0]
	0x033604C0 CBNZ W8, 0x33604C8
	0x033604C4 BL 0x1C16DFC
	0x033604C8 MOV W0, W20
	0x033604CC BL 0x33608A8
	0x033604D0 LDR X8, [X22]
	0x033604D4 MOV W20, W0
	0x033604D8 LDR W9, [X8 + 0xE0]
	0x033604DC CBNZ W9, 0x33604EC
	0x033604E0 MOV X0, X8
	0x033604E4 BL 0x1C16DFC
	0x033604E8 LDR X8, [X22]
	0x033604EC LDR X8, [X8 + 0xB8]
	0x033604F0 ANDS W31, W20, 0x1
	0x033604F4 ADD X9, X8, 0x8
	0x033604F8 CSEL X8, X9, X8, NE
	0x033604FC LDR X8, [X8]
	0x03360500 CBZ X8, 0x3360598
	0x03360504 LDR W9, [X8 + 0x18]
	0x03360508 CMP W9, W19
	0x0336050C B.LS 0x3360538
	0x03360510 CMP W21, W9
	0x03360514 B.CS 0x3360538
	0x03360518 ADD X8, X8, 0x20
	0x0336051C LDR W9, [X8, W19, UXTW]
	0x03360520 LDR W8, [X8, W21, UXTW]
	0x03360524 LDP X20, X19, [X31 + 0x20]
	0x03360528 LDP X22, X21, [X31 + 0x10]
	0x0336052C SUB W0, W9, W8
	0x03360530 LDR X30, [X31], #0x30
	0x03360534 RET
	0x03360538 BL 0x1C16F28
	0x0336053C ADRP X0, 0xD9B000
	0x03360540 LDR X0, [X0 + 0x760]
	0x03360544 BL 0x1C16D08
	0x03360548 BL 0x1C16F10
	0x0336054C MOV X19, X0
	0x03360550 ADRP X0, 0xDC7000
	0x03360554 LDR X0, [X0 + 0xDA8]
	0x03360558 BL 0x1C16D08
	0x0336055C MOV X20, X0
	0x03360560 ADRP X0, 0xDC8000
	0x03360564 LDR X0, [X0 + 0x8C8]
	0x03360568 BL 0x1C16D08
	0x0336056C MOV X2, X0
	0x03360570 MOV X0, X19
	0x03360574 MOV X1, X20
	0x03360578 MOV X3, X31
	0x0336057C BL 0x3311888
	0x03360580 ADRP X0, 0xDCA000
	0x03360584 LDR X0, [X0 + 0x9B0]
	0x03360588 BL 0x1C16D08
	0x0336058C MOV X1, X0
	0x03360590 MOV X0, X19

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X27, 0x107D000
	012 Move W8, [X27+3631]
	013 Move W19, W7
	014 Move W20, W6
	015 Move W22, W5
	016 Move W23, W4
	017 Move W24, W3
	018 Move W25, W2
	019 Move W26, W1
	020 Move X21, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0xD95000
	026 Move X0, [X0+2544]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X27+3631], W8
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X8, 0xD95000
	032 Move X8, [X8+2544]
	033 Move X0, [X8]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move W0, W26
	039 Move W1, W25
	040 Move W2, W24
	041 Call DateTime.DateToTicks, X0, X1, X2
	042 Move X24, X0
	043 Move W0, W23
	044 Move W1, W22
	045 Move W2, W20
	046 Call DateTime.TimeToTicks, X0, X1, X2
	047 Add X8, X0, X24
	048 Or X8, X8, X19
	049 Move [X21], X8
	050 Move X20, [X31+64]
	051 Move X19, [X31+72]
	052 Move X22, [X31+48]
	053 Move X21, [X31+56]
	054 Move X24, [X31+32]
	055 Move X23, [X31+40]
	056 Move X26, [X31+16]
	057 Move X25, [X31+24]
	058 Move X30, [X31+80]
	059 Move X27, [X31+88]
	060 Return 
	061 Move X0, 0xD9C000
	062 Move X0, [X0+1400]
	063 Call 0x1C17D08
	064 Call 0x1C17F10
	065 Move X19, X0
	066 Move X0, 0xDCB000
	067 Move X0, [X0+2312]
	068 Call 0x1C17D08
	069 Move X20, X0
	070 Move X0, 0xDCB000
	071 Move X0, [X0+2320]
	072 Call 0x1C17D08
	073 Move X2, X0
	074 Move X0, X19
	075 Move X1, X20
	076 Move X3, X31
	077 Call ArgumentException..ctor, X0, X1, X2
	078 Move X0, 0xDCB000
	079 Move X0, [X0+2360]
	080 Call 0x1C17D08
	081 Move X1, X0
	082 Move X0, X19
	083 Call 0x1C17DEC

Method: System.Void .ctor(System.Int32 year, System.Int32 month, System.Int32 day, System.Int32 hour, System.Int32 minute, System.Int32 second, System.Int32 millisecond)

Disassembly:
	0x03360594 BL 0x1C16DEC
	0x03360598 BL 0x1C16F20
	0x0336059C STR D8, [X31 - 0x30]!
	0x033605A0 STP X30, X21, [X31 + 0x10]
	0x033605A4 STP X20, X19, [X31 + 0x20]
	0x033605A8 ADRP X20, 0x107C000
	0x033605AC ADRP X21, 0xD94000
	0x033605B0 LDRB W8, [X20 + 0xE39]
	0x033605B4 LDR X21, [X21 + 0x9F0]
	0x033605B8 MOV V8.16B, V0.16B
	0x033605BC MOV X19, X0
	0x033605C0 TBNZ X8, 0x0, 0x33605D8
	0x033605C4 ADRP X0, 0xD94000
	0x033605C8 LDR X0, [X0 + 0x9F0]
	0x033605CC BL 0x1C16CF4
	0x033605D0 MOVZ W8, 0x1
	0x033605D4 STRB W8, [X20 + 0xE39]
	0x033605D8 LDR X0, [X21]
	0x033605DC LDR W8, [X0 + 0xE0]
	0x033605E0 CBNZ W8, 0x33605E8
	0x033605E4 BL 0x1C16DFC
	0x033605E8 MOV X0, X19
	0x033605EC LDP X20, X19, [X31 + 0x20]
	0x033605F0 LDP X30, X21, [X31 + 0x10]
	0x033605F4 MOVZ W1, 0x3E8
	0x033605F8 MOV V0.16B, V8.16B
	0x033605FC LDR V8, [X31], #0x30
	0x03360600 B 0x335FDD4
	0x03360604 STP X30, X21, [X31 - 0x20]!
	0x03360608 STP X20, X19, [X31 + 0x10]
	0x0336060C ADRP X21, 0x107C000
	0x03360610 LDRB W8, [X21 + 0xE3B]
	0x03360614 MOV W19, W1
	0x03360618 MOV X20, X0
	0x0336061C TBNZ X8, 0x0, 0x3360634
	0x03360620 ADRP X0, 0xD94000
	0x03360624 LDR X0, [X0 + 0x9F0]
	0x03360628 BL 0x1C16CF4
	0x0336062C MOVZ W8, 0x1
	0x03360630 STRB W8, [X21 + 0xE3B]
	0x03360634 MOVZ W8, 0x2710
	0x03360638 ADD W8, W19, W8
	0x0336063C MOVZ W9, 0x4E21
	0x03360640 CMP W8, W9
	0x03360644 B.CS 0x3360678
	0x03360648 ADRP X8, 0xD94000
	0x0336064C LDR X8, [X8 + 0x9F0]
	0x03360650 LDR X0, [X8]
	0x03360654 LDR W8, [X0 + 0xE0]
	0x03360658 CBNZ W8, 0x3360660
	0x0336065C BL 0x1C16DFC
	0x03360660 ADD W8, W19, W19, 0x1, LSL
	0x03360664 MOV X0, X20
	0x03360668 LDP X20, X19, [X31 + 0x10]
	0x0336066C UBFM W1, W8, 0x1E, 0x1D
	0x03360670 LDP X30, X21, [X31], #0x20
	0x03360674 B 0x3360038
	0x03360678 ADRP X0, 0xD9B000
	0x0336067C LDR X0, [X0 + 0x760]
	0x03360680 BL 0x1C16D08
	0x03360684 BL 0x1C16F10
	0x03360688 MOV X19, X0
	0x0336068C ADRP X0, 0xDCA000
	0x03360690 LDR X0, [X0 + 0x9B8]
	0x03360694 BL 0x1C16D08
	0x03360698 MOV X20, X0
	0x0336069C ADRP X0, 0xDCA000
	0x033606A0 LDR X0, [X0 + 0x9C0]
	0x033606A4 BL 0x1C16D08
	0x033606A8 MOV X2, X0
	0x033606AC MOV X0, X19
	0x033606B0 MOV X1, X20
	0x033606B4 MOV X3, X31
	0x033606B8 BL 0x3311888
	0x033606BC ADRP X0, 0xDCA000
	0x033606C0 LDR X0, [X0 + 0x9C8]
	0x033606C4 BL 0x1C16D08
	0x033606C8 MOV X1, X0
	0x033606CC MOV X0, X19
	0x033606D0 BL 0x1C16DEC
	0x033606D4 STR X30, [X31 - 0x30]!
	0x033606D8 STP X22, X21, [X31 + 0x10]
	0x033606DC STP X20, X19, [X31 + 0x20]
	0x033606E0 ADRP X21, 0x107C000
	0x033606E4 ADRP X22, 0xD94000
	0x033606E8 LDRB W8, [X21 + 0xE3C]
	0x033606EC LDR X22, [X22 + 0x9F0]
	0x033606F0 MOV X19, X1
	0x033606F4 MOV X20, X0
	0x033606F8 TBNZ X8, 0x0, 0x3360710
	0x033606FC ADRP X0, 0xD94000
	0x03360700 LDR X0, [X0 + 0x9F0]
	0x03360704 BL 0x1C16CF4
	0x03360708 MOVZ W8, 0x1
	0x0336070C STRB W8, [X21 + 0xE3C]
	0x03360710 LDR X0, [X22]
	0x03360714 LDR W8, [X0 + 0xE0]
	0x03360718 CBNZ W8, 0x3360720
	0x0336071C BL 0x1C16DFC
	0x03360720 AND X8, X20, 0x3FFFFFFF
	0x03360724 AND X9, X19, 0x3FFFFFFF
	0x03360728 CMP X8, X9
	0x0336072C B.LS 0x3360738
	0x03360730 MOVZ W0, 0x1
	0x03360734 B 0x336073C
	0x03360738 CSINV W0, W31, W31, CS
	0x0336073C LDP X20, X19, [X31 + 0x20]
	0x03360740 LDP X22, X21, [X31 + 0x10]
	0x03360744 LDR X30, [X31], #0x30
	0x03360748 RET
	0x0336074C STP X30, X21, [X31 - 0x20]!
	0x03360750 STP X20, X19, [X31 + 0x10]
	0x03360754 ADRP X21, 0x107C000
	0x03360758 LDRB W8, [X21 + 0xE3D]
	0x0336075C MOV X19, X1
	0x03360760 MOV X20, X0

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X27, 0x107D000
	013 Move W8, [X27+3632]
	014 Move W19, W7
	015 Move W21, W6
	016 Move W22, W5
	017 Move W23, W4
	018 Move W24, W3
	019 Move W25, W2
	020 Move W26, W1
	021 Move X20, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0xD95000
	027 Move X0, [X0+2544]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X27+3632], W8
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X8, 0xD95000
	033 Move X8, [X8+2544]
	034 Move X0, [X8]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move W0, W26
	040 Move W1, W25
	041 Move W2, W24
	042 Call DateTime.DateToTicks, X0, X1, X2
	043 Move X24, X0
	044 Move W0, W23
	045 Move W1, W22
	046 Move W2, W21
	047 Call DateTime.TimeToTicks, X0, X1, X2
	048 Move X9, 0x4000
	049 Move W8, 0x2710
	050 NotImplemented "Instruction MOVK not yet implemented."
	051 NotImplemented "Instruction UMADDL not yet implemented."
	052 NotImplemented "Instruction MOVK not yet implemented."
	053 Add X8, X8, X0
	054 NotImplemented "Instruction MOVK not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move [X20], X8
	057 Move X20, [X31+80]
	058 Move X19, [X31+88]
	059 Move X22, [X31+64]
	060 Move X21, [X31+72]
	061 Move X24, [X31+48]
	062 Move X23, [X31+56]
	063 Move X26, [X31+32]
	064 Move X25, [X31+40]
	065 Move X30, [X31+16]
	066 Move X27, [X31+24]
	067 Add X31, X31, 96
	068 Return 
	069 Move [X31+12], W31
	070 Move X19, 0xD94000
	071 Move X19, [X19+1880]
	072 Move X0, X19
	073 Call 0x1C17D08
	074 Add X1, X31, 12
	075 Call 0x1C17E04
	076 Move X20, X0
	077 Move W8, 999
	078 Move X0, X19
	079 Move [X31+8], W8
	080 Call 0x1C17D08
	081 Add X1, X31, 8
	082 Call 0x1C17E04
	083 Move X19, X0
	084 Move X0, 0xDC3000
	085 Move X0, [X0+880]
	086 Call 0x1C17D08
	087 Move X1, X20
	088 Move X2, X19
	089 Move X3, X31
	090 Call SR.Format, X0, X1, X2
	091 Move X19, X0
	092 Move X0, 0xD9C000
	093 Move X0, [X0+1888]
	094 Call 0x1C17D08
	095 Call 0x1C17F10
	096 Move X20, X0
	097 Move X0, 0xDC9000
	098 Move X0, [X0+1472]
	099 Call 0x1C17D08
	100 Move X1, X0
	101 Move X0, X20
	102 Move X2, X19
	103 Move X3, X31
	104 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	105 Move X0, 0xDCB000
	106 Move X0, [X0+2368]
	107 Call 0x1C17D08
	108 Move X1, X0
	109 Move X0, X20
	110 Call 0x1C17DEC
	111 Move X0, 0xD9C000
	112 Move X0, [X0+1400]
	113 Call 0x1C17D08
	114 Call 0x1C17F10
	115 Move X19, X0
	116 Move X0, 0xDCB000
	117 Move X0, [X0+2376]
	118 Call 0x1C17D08
	119 Move X1, X0
	120 Move X0, X19
	121 Move X2, X31
	122 Call ArgumentException..ctor, X0, X1
	123 Move X0, 0xDCB000
	124 Move X0, [X0+2368]
	125 Call 0x1C17D08
	126 Move X1, X0
	127 Move X0, X19
	128 Call 0x1C17DEC

Method: System.Void .ctor(System.Int32 year, System.Int32 month, System.Int32 day, System.Int32 hour, System.Int32 minute, System.Int32 second, System.Int32 millisecond, System.DateTimeKind kind)

Disassembly:
	0x03360764 TBNZ X8, 0x0, 0x336077C
	0x03360768 ADRP X0, 0xD94000
	0x0336076C LDR X0, [X0 + 0x9F0]
	0x03360770 BL 0x1C16CF4
	0x03360774 MOVZ W8, 0x1
	0x03360778 STRB W8, [X21 + 0xE3D]
	0x0336077C CBZ X19, 0x33607AC
	0x03360780 ADRP X21, 0xD94000
	0x03360784 LDR X21, [X21 + 0x9F0]
	0x03360788 LDR X8, [X19]
	0x0336078C LDR X0, [X21]
	0x03360790 CMP X8, X0
	0x03360794 B.NE 0x33607F4
	0x03360798 LDR W8, [X0 + 0xE0]
	0x0336079C LDR X20, [X20]
	0x033607A0 CBZ W8, 0x33607BC
	0x033607A4 MOV X1, X0
	0x033607A8 B 0x33607C8
	0x033607AC LDP X20, X19, [X31 + 0x10]
	0x033607B0 MOVZ W0, 0x1
	0x033607B4 LDP X30, X21, [X31], #0x20
	0x033607B8 RET
	0x033607BC BL 0x1C16DFC
	0x033607C0 LDR X1, [X21]
	0x033607C4 LDR X0, [X19]
	0x033607C8 LDR X8, [X0 + 0x40]
	0x033607CC LDR X9, [X1 + 0x40]
	0x033607D0 MOV X0, X19
	0x033607D4 CMP X8, X9
	0x033607D8 B.NE 0x336083C
	0x033607DC BL 0x1C16E08
	0x033607E0 LDR X1, [X0]
	0x033607E4 MOV X0, X20
	0x033607E8 LDP X20, X19, [X31 + 0x10]
	0x033607EC LDP X30, X21, [X31], #0x20
	0x033607F0 B 0x33606D4
	0x033607F4 ADRP X0, 0xD9B000
	0x033607F8 LDR X0, [X0 + 0x578]
	0x033607FC BL 0x1C16D08
	0x03360800 BL 0x1C16F10
	0x03360804 MOV X19, X0
	0x03360808 ADRP X0, 0xDCA000
	0x0336080C LDR X0, [X0 + 0x9D0]
	0x03360810 BL 0x1C16D08
	0x03360814 MOV X1, X0
	0x03360818 MOV X0, X19
	0x0336081C MOV X2, X31
	0x03360820 BL 0x3314A68
	0x03360824 ADRP X0, 0xDCA000
	0x03360828 LDR X0, [X0 + 0x9D8]
	0x0336082C BL 0x1C16D08
	0x03360830 MOV X1, X0
	0x03360834 MOV X0, X19
	0x03360838 BL 0x1C16DEC
	0x0336083C BL 0x1C171E0
	0x03360840 STR X30, [X31 - 0x30]!
	0x03360844 STP X22, X21, [X31 + 0x10]
	0x03360848 STP X20, X19, [X31 + 0x20]
	0x0336084C ADRP X22, 0x107C000
	0x03360850 ADRP X21, 0xD94000
	0x03360854 LDRB W8, [X22 + 0xE3E]
	0x03360858 LDR X21, [X21 + 0x9F0]
	0x0336085C MOV X19, X1
	0x03360860 MOV X20, X0
	0x03360864 TBNZ X8, 0x0, 0x336087C
	0x03360868 ADRP X0, 0xD94000
	0x0336086C LDR X0, [X0 + 0x9F0]
	0x03360870 BL 0x1C16CF4
	0x03360874 MOVZ W8, 0x1
	0x03360878 STRB W8, [X22 + 0xE3E]
	0x0336087C LDR X0, [X21]
	0x03360880 LDR X20, [X20]
	0x03360884 LDR W8, [X0 + 0xE0]
	0x03360888 CBNZ W8, 0x3360890
	0x0336088C BL 0x1C16DFC
	0x03360890 MOV X0, X20
	0x03360894 MOV X1, X19
	0x03360898 LDP X20, X19, [X31 + 0x20]
	0x0336089C LDP X22, X21, [X31 + 0x10]
	0x033608A0 LDR X30, [X31], #0x30
	0x033608A4 B 0x33606D4
	0x033608A8 SUB W8, W0, 0x1
	0x033608AC MOVZ W9, 0x270F
	0x033608B0 CMP W8, W9
	0x033608B4 B.CS 0x336090C
	0x033608B8 ANDS W31, W0, 0x3
	0x033608BC B.EQ 0x33608C8
	0x033608C0 MOV W0, W31
	0x033608C4 RET
	0x033608C8 MOVZ W9, 0x5C29
	0x033608CC AND W8, W0, 0xFFFF
	0x033608D0 MOVK W9, 0xC28F0000
	0x033608D4 MUL W8, W8, W9
	0x033608D8 MOVZ W10, 0x5C28
	0x033608DC EXTR W9, W8, W8, 0x2
	0x033608E0 MOVK W10, 0x28F0000
	0x033608E4 CMP W9, W10
	0x033608E8 B.LS 0x33608F4
	0x033608EC MOVZ W0, 0x1
	0x033608F0 RET
	0x033608F4 MOVZ W9, 0xD70B
	0x033608F8 EXTR W8, W8, W8, 0x4
	0x033608FC MOVK W9, 0xA30000
	0x03360900 CMP W8, W9
	0x03360904 CSET W0, CC
	0x03360908 RET
	0x0336090C STR X30, [X31 - 0x20]!
	0x03360910 STP X20, X19, [X31 + 0x10]
	0x03360914 ADRP X0, 0xD9B000
	0x03360918 LDR X0, [X0 + 0x760]
	0x0336091C BL 0x1C16D08
	0x03360920 BL 0x1C16F10
	0x03360924 MOV X19, X0
	0x03360928 ADRP X0, 0xDC8000
	0x0336092C LDR X0, [X0 + 0x5A8]
	0x03360930 BL 0x1C16D08
	0x03360934 MOV X20, X0
	0x03360938 ADRP X0, 0xDCA000
	0x0336093C LDR X0, [X0 + 0x9E0]
	0x03360940 BL 0x1C16D08
	0x03360944 MOV X2, X0
	0x03360948 MOV X0, X19
	0x0336094C MOV X1, X20
	0x03360950 MOV X3, X31
	0x03360954 BL 0x3311888
	0x03360958 ADRP X0, 0xDCA000
	0x0336095C LDR X0, [X0 + 0x9E8]
	0x03360960 BL 0x1C16D08
	0x03360964 MOV X1, X0
	0x03360968 MOV X0, X19
	0x0336096C BL 0x1C16DEC
	0x03360970 STP X30, X21, [X31 - 0x20]!
	0x03360974 STP X20, X19, [X31 + 0x10]
	0x03360978 ADRP X21, 0x107C000
	0x0336097C LDRB W8, [X21 + 0xE42]
	0x03360980 MOV X19, X1
	0x03360984 MOV X20, X0
	0x03360988 TBNZ X8, 0x0, 0x33609A0

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X27, 0x107D000
	013 Move W8, [X27+3633]
	014 Move W19, W7
	015 Move W21, W6
	016 Move W22, W5
	017 Move W23, W4
	018 Move W24, W3
	019 Move W25, W2
	020 Move W26, W1
	021 Move X20, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0xD95000
	027 Move X0, [X0+2544]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X27+3633], W8
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move W27, [X31+96]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X8, 0xD95000
	035 Move X8, [X8+2544]
	036 Move X0, [X8]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move W0, W26
	042 Move W1, W25
	043 Move W2, W24
	044 Call DateTime.DateToTicks, X0, X1, X2
	045 Move X24, X0
	046 Move W0, W23
	047 Move W1, W22
	048 Move W2, W21
	049 Call DateTime.TimeToTicks, X0, X1, X2
	050 Move X9, 0x4000
	051 Move W8, 0x2710
	052 NotImplemented "Instruction MOVK not yet implemented."
	053 NotImplemented "Instruction UMADDL not yet implemented."
	054 NotImplemented "Instruction MOVK not yet implemented."
	055 Add X8, X8, X0
	056 NotImplemented "Instruction MOVK not yet implemented."
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Or X8, X8, X27
	059 Move [X20], X8
	060 Move X20, [X31+80]
	061 Move X19, [X31+88]
	062 Move X22, [X31+64]
	063 Move X21, [X31+72]
	064 Move X24, [X31+48]
	065 Move X23, [X31+56]
	066 Move X26, [X31+32]
	067 Move X25, [X31+40]
	068 Move X30, [X31+16]
	069 Move X27, [X31+24]
	070 Add X31, X31, 96
	071 Return 
	072 Move [X31+12], W31
	073 Move X19, 0xD94000
	074 Move X19, [X19+1880]
	075 Move X0, X19
	076 Call 0x1C17D08
	077 Add X1, X31, 12
	078 Call 0x1C17E04
	079 Move X20, X0
	080 Move W8, 999
	081 Move X0, X19
	082 Move [X31+8], W8
	083 Call 0x1C17D08
	084 Add X1, X31, 8
	085 Call 0x1C17E04
	086 Move X19, X0
	087 Move X0, 0xDC3000
	088 Move X0, [X0+880]
	089 Call 0x1C17D08
	090 Move X1, X20
	091 Move X2, X19
	092 Move X3, X31
	093 Call SR.Format, X0, X1, X2
	094 Move X19, X0
	095 Move X0, 0xD9C000
	096 Move X0, [X0+1888]
	097 Call 0x1C17D08
	098 Call 0x1C17F10
	099 Move X20, X0
	100 Move X0, 0xDC9000
	101 Move X0, [X0+1472]
	102 Call 0x1C17D08
	103 Move X1, X0
	104 Move X0, X20
	105 Move X2, X19
	106 Move X3, X31
	107 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	108 Move X0, 0xDCB000
	109 Move X0, [X0+2384]
	110 Call 0x1C17D08
	111 Move X1, X0
	112 Move X0, X20
	113 Call 0x1C17DEC
	114 Move X0, 0xD9C000
	115 Move X0, [X0+1400]
	116 Call 0x1C17D08
	117 Call 0x1C17F10
	118 Move X19, X0
	119 Move X0, 0xDCB000
	120 Move X0, [X0+2312]
	121 Call 0x1C17D08
	122 Move X20, X0
	123 Move X0, 0xDCB000
	124 Move X0, [X0+2320]
	125 Call 0x1C17D08
	126 Move X2, X0
	127 Move X0, X19
	128 Move X1, X20
	129 Move X3, X31
	130 Call ArgumentException..ctor, X0, X1, X2
	131 Move X0, 0xD9C000
	132 Move X0, [X0+1400]
	133 Call 0x1C17D08
	134 Call 0x1C17F10
	135 Move X19, X0
	136 Move X0, 0xDCB000
	137 Move X0, [X0+2376]
	138 Call 0x1C17D08
	139 Move X1, X0
	140 Move X0, X19
	141 Move X2, X31
	142 Call ArgumentException..ctor, X0, X1
	143 Move X0, 0xDCB000
	144 Move X0, [X0+2384]
	145 Call 0x1C17D08
	146 Move X1, X0
	147 Move X0, X19
	148 Call 0x1C17DEC

Method: System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x0336098C ADRP X0, 0xD94000
	0x03360990 LDR X0, [X0 + 0x9F0]
	0x03360994 BL 0x1C16CF4
	0x03360998 MOVZ W8, 0x1
	0x0336099C STRB W8, [X21 + 0xE42]
	0x033609A0 CBZ X19, 0x33609BC
	0x033609A4 ADRP X21, 0xD94000
	0x033609A8 LDR X21, [X21 + 0x9F0]
	0x033609AC LDR X8, [X19]
	0x033609B0 LDR X0, [X21]
	0x033609B4 CMP X8, X0
	0x033609B8 B.EQ 0x33609C4
	0x033609BC MOV W0, W31
	0x033609C0 B 0x3360A0C
	0x033609C4 LDR W8, [X0 + 0xE0]
	0x033609C8 CBZ W8, 0x33609D4
	0x033609CC MOV X1, X0
	0x033609D0 B 0x33609E0
	0x033609D4 BL 0x1C16DFC
	0x033609D8 LDR X1, [X21]
	0x033609DC LDR X0, [X19]
	0x033609E0 LDR X8, [X0 + 0x40]
	0x033609E4 LDR X9, [X1 + 0x40]
	0x033609E8 CMP X8, X9
	0x033609EC B.NE 0x3360A18
	0x033609F0 LDR X20, [X20]
	0x033609F4 MOV X0, X19
	0x033609F8 BL 0x1C16E08
	0x033609FC LDR X8, [X0]
	0x03360A00 EOR X8, X8, X20, 0x0
	0x03360A04 ANDS X31, X8, 0x3FFFFFFF
	0x03360A08 CSET W0, EQ
	0x03360A0C LDP X20, X19, [X31 + 0x10]
	0x03360A10 LDP X30, X21, [X31], #0x20
	0x03360A14 RET
	0x03360A18 MOV X0, X19
	0x03360A1C BL 0x1C171E0
	0x03360A20 STR X30, [X31 - 0x30]!
	0x03360A24 STP X22, X21, [X31 + 0x10]
	0x03360A28 STP X20, X19, [X31 + 0x20]
	0x03360A2C ADRP X21, 0x107C000
	0x03360A30 ADRP X22, 0xD94000
	0x03360A34 LDRB W8, [X21 + 0xE43]
	0x03360A38 LDR X22, [X22 + 0x9F0]
	0x03360A3C MOV X19, X1
	0x03360A40 MOV X20, X0
	0x03360A44 TBNZ X8, 0x0, 0x3360A5C
	0x03360A48 ADRP X0, 0xD94000
	0x03360A4C LDR X0, [X0 + 0x9F0]
	0x03360A50 BL 0x1C16CF4
	0x03360A54 MOVZ W8, 0x1
	0x03360A58 STRB W8, [X21 + 0xE43]
	0x03360A5C LDR X0, [X22]
	0x03360A60 LDR W8, [X0 + 0xE0]
	0x03360A64 CBNZ W8, 0x3360A6C
	0x03360A68 BL 0x1C16DFC
	0x03360A6C LDR X8, [X20]
	0x03360A70 LDP X22, X21, [X31 + 0x10]
	0x03360A74 EOR X8, X8, X19, 0x0
	0x03360A78 LDP X20, X19, [X31 + 0x20]
	0x03360A7C ANDS X31, X8, 0x3FFFFFFF
	0x03360A80 CSET W0, EQ
	0x03360A84 LDR X30, [X31], #0x30
	0x03360A88 RET
	0x03360A8C SUB X31, X31, 0x40
	0x03360A90 STR X30, [X31 + 0x10]
	0x03360A94 STP X22, X21, [X31 + 0x20]
	0x03360A98 STP X20, X19, [X31 + 0x30]
	0x03360A9C ADRP X19, 0x107C000
	0x03360AA0 LDRB W8, [X19 + 0xE44]
	0x03360AA4 MOV X20, X0
	0x03360AA8 TBNZ X8, 0x0, 0x3360AD8
	0x03360AAC ADRP X0, 0xD94000
	0x03360AB0 LDR X0, [X0 + 0x9F0]
	0x03360AB4 BL 0x1C16CF4
	0x03360AB8 ADRP X0, 0xD95000
	0x03360ABC LDR X0, [X0 + 0x570]
	0x03360AC0 BL 0x1C16CF4
	0x03360AC4 ADRP X0, 0xDC7000
	0x03360AC8 LDR X0, [X0 + 0xA38]
	0x03360ACC BL 0x1C16CF4
	0x03360AD0 MOVZ W8, 0x1
	0x03360AD4 STRB W8, [X19 + 0xE44]
	0x03360AD8 ADRP X21, 0xD94000
	0x03360ADC LDR X21, [X21 + 0x9F0]
	0x03360AE0 STRB W31, [X31 + 0x8]
	0x03360AE4 TBNZ X20, 0x0, 0x3360B08
	0x03360AE8 LDR X0, [X21]
	0x03360AEC LDR W8, [X0 + 0xE0]
	0x03360AF0 CBNZ W8, 0x3360AF8
	0x03360AF4 BL 0x1C16DFC
	0x03360AF8 MOV X0, X20
	0x03360AFC BL 0x3360CF4
	0x03360B00 STR X0, [X31 + 0x18]
	0x03360B04 B 0x3360C84
	0x03360B08 MOVZ X8, 0x4000
	0x03360B0C MOVK X8, 0xD5960000
	0x03360B10 MOVZ X22, 0x4000
	0x03360B14 MOVK X8, 0xFF36
	0x03360B18 MOVK X22, 0xF4370000
	0x03360B1C AND X19, X20, 0x3FFFFFFF
	0x03360B20 MOVK X8, 0x3FFF0000
	0x03360B24 MOVK X22, 0x2875
	0x03360B28 CMP X19, X8
	0x03360B2C MOVK X22, 0x2BCA0000
	0x03360B30 B.HI 0x3360B98
	0x03360B34 CMP X19, X22
	0x03360B38 STRB W31, [X31 + 0xC]
	0x03360B3C B.CS 0x3360BE4
	0x03360B40 ADD X0, X31, 0x0
	0x03360B44 MOVZ W2, 0x1
	0x03360B48 MOV X1, X19
	0x03360B4C STR X31, [X31]
	0x03360B50 BL 0x335EF44
	0x03360B54 ADRP X8, 0xDC7000
	0x03360B58 LDR X8, [X8 + 0xA38]
	0x03360B5C STRB W31, [X31 + 0x8]
	0x03360B60 LDR X0, [X8]
	0x03360B64 LDR W8, [X0 + 0xE0]
	0x03360B68 CBNZ W8, 0x3360B70
	0x03360B6C BL 0x1C16DFC
	0x03360B70 MOV X0, X31
	0x03360B74 BL 0x330A840
	0x03360B78 LDR X8, [X31]
	0x03360B7C MOV X1, X0
	0x03360B80 ADD X2, X31, 0x8
	0x03360B84 ADD X3, X31, 0xC
	0x03360B88 MOV X0, X8
	0x03360B8C MOV X4, X31
	0x03360B90 BL 0x330A8C0
	0x03360B94 B 0x3360C2C
	0x03360B98 LDR X0, [X21]
	0x03360B9C STRB W31, [X31 + 0xC]
	0x03360BA0 LDR W8, [X0 + 0xE0]
	0x03360BA4 CBNZ W8, 0x3360BB0
	0x03360BA8 BL 0x1C16DFC
	0x03360BAC LDR X0, [X21]
	0x03360BB0 ADRP X8, 0xDC7000
	0x03360BB4 LDR X8, [X8 + 0xA38]
	0x03360BB8 LDR X9, [X0 + 0xB8]
	0x03360BBC ORR X19, X20, 0xFFFFFFFFFFFFFFFF
	0x03360BC0 LDR X8, [X8]
	0x03360BC4 LDR X21, [X9 + 0x10]
	0x03360BC8 LDR W10, [X8 + 0xE0]
	0x03360BCC CBNZ W10, 0x3360BD8
	0x03360BD0 MOV X0, X8
	0x03360BD4 BL 0x1C16DFC
	0x03360BD8 MOVZ W1, 0x2
	0x03360BDC MOV X0, X21
	0x03360BE0 B 0x3360C24
	0x03360BE4 LDR X0, [X21]
	0x03360BE8 LDR W8, [X0 + 0xE0]
	0x03360BEC CBNZ W8, 0x3360BF8
	0x03360BF0 BL 0x1C16DFC
	0x03360BF4 LDR X0, [X21]
	0x03360BF8 ADRP X8, 0xDC7000
	0x03360BFC LDR X8, [X8 + 0xA38]
	0x03360C00 LDR X9, [X0 + 0xB8]
	0x03360C04 LDR X8, [X8]
	0x03360C08 LDR X20, [X9 + 0x18]
	0x03360C0C LDR W10, [X8 + 0xE0]
	0x03360C10 CBNZ W10, 0x3360C1C
	0x03360C14 MOV X0, X8
	0x03360C18 BL 0x1C16DFC
	0x03360C1C MOVZ W1, 0x2
	0x03360C20 MOV X0, X20
	0x03360C24 MOV X2, X31
	0x03360C28 BL 0x330D814
	0x03360C2C ADRP X8, 0xD95000
	0x03360C30 LDR X8, [X8 + 0x570]
	0x03360C34 MOV X20, X0
	0x03360C38 LDR X8, [X8]
	0x03360C3C LDR W9, [X8 + 0xE0]
	0x03360C40 CBNZ W9, 0x3360C4C
	0x03360C44 MOV X0, X8
	0x03360C48 BL 0x1C16DFC
	0x03360C4C MOVZ X9, 0xC000

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X21, 0x107D000
	014 Move W8, [X21+3634]
	015 Move X20, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {38}
	021 Move X0, 0xD9D000
	022 Move X0, [X0+2536]
	023 Call 0x1C17CF4
	024 Move X0, 0xD96000
	025 Move X0, [X0+3144]
	026 Call 0x1C17CF4
	027 Move X0, 0xD95000
	028 Move X0, [X0+2544]
	029 Call 0x1C17CF4
	030 Move X0, 0xDCB000
	031 Move X0, [X0+2392]
	032 Call 0x1C17CF4
	033 Move X0, 0xDCB000
	034 Move X0, [X0+2288]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X21+3634], W8
	038 Compare X20, 0
	039 JumpIfEqual {169}
	040 Move X0, X20
	041 Move X1, X31
	042 Call SerializationInfo.GetEnumerator, X0
	043 Compare X0, 0
	044 JumpIfEqual {181}
	045 Move X25, 0xDCB000
	046 Move X26, 0xD96000
	047 Move X27, 0xD9D000
	048 Move X28, 0xDCB000
	049 Move X25, [X25+2288]
	050 Move X26, [X26+3144]
	051 Move X27, [X27+2536]
	052 Move X28, [X28+2392]
	053 Move X20, X0
	054 Move X21, X31
	055 Move X22, X31
	056 Move W29, W31
	057 Move W24, W31
	058 Move X0, X20
	059 Move X1, X31
	060 Call SerializationInfoEnumerator.MoveNext, X0
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {134}
	065 Move X0, X20
	066 Move X1, X31
	067 Call SerializationInfoEnumerator.get_Name, X0
	068 Move X1, [X25]
	069 Move X2, X31
	070 Move X23, X0
	071 Call String.op_Equality, X0, X1
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfEqual {109}
	076 Move X1, [X28]
	077 Move X0, X23
	078 Move X2, X31
	079 Call String.op_Equality, X0, X1
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {58}
	084 Move X0, X20
	085 Move X1, X31
	086 Call SerializationInfoEnumerator.get_Value, X0
	087 Move X8, [X26]
	088 Move X21, X0
	089 Move W9, [X8+224]
	090 Compare W9, 0
	091 JumpIfNotEqual {94}
	092 Move X0, X8
	093 Call 0x1C17DFC
	094 Move X0, X31
	095 Call CultureInfo.get_InvariantCulture
	096 Move X8, [X27]
	097 Move X23, X0
	098 Move W9, [X8+224]
	099 Compare W9, 0
	100 JumpIfNotEqual {103}
	101 Move X0, X8
	102 Call 0x1C17DFC
	103 Move X0, X21
	104 Move X1, X23
	105 Move X2, X31
	106 Call Convert.ToUInt64, X0, X1
	107 Move X21, X0
	108 Move W29, 1
	109 Move X0, X20
	110 Move X1, X31
	111 Call SerializationInfoEnumerator.get_Value, X0
	112 Move X8, [X26]
	113 Move X22, X0
	114 Move W9, [X8+224]
	115 Compare W9, 0
	116 JumpIfNotEqual {119}
	117 Move X0, X8
	118 Call 0x1C17DFC
	119 Move X0, X31
	120 Call CultureInfo.get_InvariantCulture
	121 Move X8, [X27]
	122 Move X23, X0
	123 Move W9, [X8+224]
	124 Compare W9, 0
	125 JumpIfNotEqual {128}
	126 Move X0, X8
	127 Call 0x1C17DFC
	128 Move X0, X22
	129 Move X1, X23
	130 Move X2, X31
	131 Call Convert.ToInt64, X0, X1
	132 Move X22, X0
	133 Move W24, 1
	134 And W31, W29, 1
	135 Or W9, W29, W24
	136 NotImplemented "Instruction CSEL not yet implemented."
	137 Move TEMP, X9
	138 And TEMP, TEMP, 1
	139 Compare TEMP, 1
	140 JumpIfNotEqual {182}
	141 Move [X19], X8
	142 Move X9, 0xD95000
	143 Move X9, [X9+2544]
	144 Move X0, [X9]
	145 Move W9, [X0+224]
	146 Compare W9, 0
	147 JumpIfNotEqual {150}
	148 Call 0x1C17DFC
	149 Move X8, [X19]
	150 Move X9, 0x4000
	151 NotImplemented "Instruction MOVK not yet implemented."
	152 NotImplemented "Instruction MOVK not yet implemented."
	153 And X8, X8, 0x3FFFFFFF
	154 NotImplemented "Instruction MOVK not yet implemented."
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Move X20, [X31+80]
	157 Move X19, [X31+88]
	158 Move X22, [X31+64]
	159 Move X21, [X31+72]
	160 Move X24, [X31+48]
	161 Move X23, [X31+56]
	162 Move X26, [X31+32]
	163 Move X25, [X31+40]
	164 Move X28, [X31+16]
	165 Move X27, [X31+24]
	166 Move X29, [X31+96]
	167 Move X30, [X31+104]
	168 Return 
	169 Move X0, 0xD99000
	170 Move X0, [X0+1320]
	171 Call 0x1C17D08
	172 Call 0x1C17F10
	173 Move X19, X0
	174 Move X0, 0xDBE000
	175 Move X0, [X0+728]
	176 Call 0x1C17D08
	177 Move X1, X0
	178 Move X0, X19
	179 Move X2, X31
	180 Call ArgumentNullException..ctor, X0, X1
	181 Call 0x1C17F20
	182 Move X0, 0xDBE000
	183 Move X0, [X0+736]
	184 Call 0x1C17D08
	185 Call 0x1C17F10
	186 Move X19, X0
	187 Move X0, 0xDCB000
	188 Move X0, [X0+2400]
	189 Move X0, 0xDBE000
	190 Move X0, [X0+736]
	191 Call 0x1C17D08
	192 Call 0x1C17F10
	193 Move X19, X0
	194 Move X0, 0xDCB000
	195 Move X0, [X0+2408]
	196 Call 0x1C17D08
	197 Move X1, X0
	198 Move X0, X19
	199 Move X2, X31
	200 Call SerializationException..ctor, X0, X1
	201 Move X0, 0xDCB000
	202 Move X0, [X0+2416]
	203 Call 0x1C17D08
	204 Move X1, X0
	205 Move X0, X19
	206 Call 0x1C17DEC

Method: System.Int64 get_InternalTicks()

Disassembly:
	0x03360C50 MOVK X9, 0x2A690000
	0x03360C54 ADD X8, X20, X19
	0x03360C58 MOVK X9, 0xC9

ISIL:
	001 Move X8, [X0]
	002 And X0, X8, 0x3FFFFFFF
	003 Return X0

Method: System.UInt64 get_InternalKind()

Disassembly:
	0x03360C5C ADD X9, X8, X9
	0x03360C60 CMP X8, 0x0
	0x03360C64 CSEL X1, X8, X9, GE

ISIL:
	001 Move X8, [X0]
	002 And X0, X8, -1
	003 Return X0

Method: System.DateTime Add(System.TimeSpan value)

Disassembly:
	0x03360C68 CMP X1, X22
	0x03360C6C B.CS 0x3360C98
	0x03360C70 LDRB W3, [X31 + 0xC]
	0x03360C74 ADD X0, X31, 0x18
	0x03360C78 STR X31, [X31 + 0x18]
	0x03360C7C BL 0x335F024
	0x03360C80 LDR X0, [X31 + 0x18]
	0x03360C84 LDP X20, X19, [X31 + 0x30]
	0x03360C88 LDP X22, X21, [X31 + 0x20]
	0x03360C8C LDR X30, [X31 + 0x10]
	0x03360C90 ADD X31, X31, 0x40
	0x03360C94 RET
	0x03360C98 ADRP X0, 0xD9B000
	0x03360C9C LDR X0, [X0 + 0x578]
	0x03360CA0 BL 0x1C16D08
	0x03360CA4 BL 0x1C16F10
	0x03360CA8 MOV X19, X0
	0x03360CAC ADRP X0, 0xDCA000
	0x03360CB0 LDR X0, [X0 + 0x9F0]
	0x03360CB4 BL 0x1C16D08
	0x03360CB8 MOV X20, X0
	0x03360CBC ADRP X0, 0xDCA000
	0x03360CC0 LDR X0, [X0 + 0x958]
	0x03360CC4 BL 0x1C16D08
	0x03360CC8 MOV X2, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x107D000
	007 Move X22, 0xD95000
	008 Move W8, [X21+3635]
	009 Move X22, [X22+2544]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xD95000
	017 Move X0, [X0+2544]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3635], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]

Method: System.DateTime Add(System.Double value, System.Int32 scale)

Disassembly:
	0x03360DD4 ADRP X21, 0xDCA000
	0x03360DD8 LDR X0, [X8]
	0x03360DDC LDR W8, [X0 + 0xE0]
	0x03360DE0 LDR X22, [X22 + 0x8F0]
	0x03360DE4 LDR X21, [X21 + 0x958]
	0x03360DE8 CBNZ W8, 0x3360DF0
	0x03360DEC BL 0x1C16DFC
	0x03360DF0 LDR X8, [X20]
	0x03360DF4 LDR X1, [X22]
	0x03360DF8 MOV X0, X19
	0x03360DFC MOV X3, X31
	0x03360E00 AND X2, X8, 0x3FFFFFFF
	0x03360E04 BL 0x32A8FFC
	0x03360E08 LDR X2, [X20]
	0x03360E0C LDR X1, [X21]
	0x03360E10 MOV X0, X19
	0x03360E14 LDP X20, X19, [X31 + 0x20]
	0x03360E18 LDP X22, X21, [X31 + 0x10]
	0x03360E1C MOV X3, X31
	0x03360E20 LDR X30, [X31], #0x30
	0x03360E24 B 0x32A90D0
	0x03360E28 ADRP X0, 0xD98000
	0x03360E2C LDR X0, [X0 + 0x528]
	0x03360E30 BL 0x1C16D08
	0x03360E34 BL 0x1C16F10
	0x03360E38 MOV X19, X0
	0x03360E3C ADRP X0, 0xDBD000
	0x03360E40 LDR X0, [X0 + 0x2D8]
	0x03360E44 BL 0x1C16D08
	0x03360E48 MOV X1, X0
	0x03360E4C MOV X0, X19
	0x03360E50 MOV X2, X31
	0x03360E54 BL 0x330E100
	0x03360E58 ADRP X0, 0xDCA000
	0x03360E5C LDR X0, [X0 + 0xA08]
	0x03360E60 BL 0x1C16D08
	0x03360E64 MOV X1, X0
	0x03360E68 MOV X0, X19
	0x03360E6C BL 0x1C16DEC
	0x03360E70 STR X30, [X31 - 0x30]!
	0x03360E74 STP X22, X21, [X31 + 0x10]
	0x03360E78 STP X20, X19, [X31 + 0x20]
	0x03360E7C ADRP X21, 0x107C000
	0x03360E80 ADRP X22, 0xD94000
	0x03360E84 LDRB W8, [X21 + 0xE46]
	0x03360E88 LDR X22, [X22 + 0x9F0]
	0x03360E8C MOV W19, W1
	0x03360E90 MOV X20, X0
	0x03360E94 TBNZ X8, 0x0, 0x3360EAC
	0x03360E98 ADRP X0, 0xD94000
	0x03360E9C LDR X0, [X0 + 0x9F0]
	0x03360EA0 BL 0x1C16CF4
	0x03360EA4 MOVZ W8, 0x1
	0x03360EA8 STRB W8, [X21 + 0xE46]
	0x03360EAC LDR X0, [X22]
	0x03360EB0 LDR W8, [X0 + 0xE0]
	0x03360EB4 CBNZ W8, 0x3360EBC
	0x03360EB8 BL 0x1C16DFC
	0x03360EBC AND X1, X20, 0x3FFFFFFF
	0x03360EC0 ADD X0, X31, 0x8
	0x03360EC4 MOV W2, W19
	0x03360EC8 STR X31, [X31 + 0x8]
	0x03360ECC BL 0x335EF44
	0x03360ED0 LDR X0, [X31 + 0x8]
	0x03360ED4 LDP X20, X19, [X31 + 0x20]
	0x03360ED8 LDP X22, X21, [X31 + 0x10]
	0x03360EDC LDR X30, [X31], #0x30
	0x03360EE0 RET
	0x03360EE4 STP X30, X21, [X31 - 0x20]!
	0x03360EE8 STP X20, X19, [X31 + 0x10]
	0x03360EEC ADRP X20, 0x107C000
	0x03360EF0 ADRP X21, 0xD94000
	0x03360EF4 LDRB W8, [X20 + 0xE47]
	0x03360EF8 LDR X21, [X21 + 0x9F0]

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x107D000
	007 Move W8, [X21+3636]
	008 Move W20, W1
	009 Move V8, V0
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xD95000
	016 Move X0, [X0+2544]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+3636], W8
	020 NotImplemented "Instruction SCVTF not yet implemented."
	021 NotImplemented "Instruction FCMP not yet implemented."
	022 Move D1, 0.5
	023 Move D2, -0.5
	024 Multiply D0, D0, D8
	025 Move X8, 0x7FF00000
	026 NotImplemented "Instruction FCSEL not yet implemented."
	027 Move D2, X8
	028 Add D0, D1, D0
	029 Move X9, 0x80000000
	030 Move X10, 0xB3FF
	031 NotImplemented "Instruction FCVTZS not yet implemented."
	032 NotImplemented "Instruction FCMP not yet implemented."
	033 NotImplemented "Instruction MOVK not yet implemented."
	034 NotImplemented "Instruction CSEL not yet implemented."
	035 Move X9, 0x67FF
	036 NotImplemented "Instruction MOVK not yet implemented."
	037 NotImplemented "Instruction MOVK not yet implemented."
	038 NotImplemented "Instruction MOVK not yet implemented."
	039 NotImplemented "Instruction MOVK not yet implemented."
	040 Add X8, X20, X10
	041 NotImplemented "Instruction MOVK not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X8, 0xD95000
	044 Move X8, [X8+2544]
	045 Move X0, [X8]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move W8, 0x2710
	051 Multiply X1, X20, X8
	052 Move X0, X19
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X30, [X31+16]
	056 Move X21, [X31+24]
	057 Move V8, [X31+48]
	058 Call DateTime.AddTicks, X0, X1
	059 Return X0
	060 Move X0, 0xD9C000
	061 Move X0, [X0+1888]
	062 Call 0x1C17D08
	063 Call 0x1C17F10
	064 Move X19, X0
	065 Move X0, 0xD9E000
	066 Move X0, [X0+3784]
	067 Call 0x1C17D08
	068 Move X20, X0
	069 Move X0, 0xDCB000
	070 Move X0, [X0+2440]
	071 Call 0x1C17D08
	072 Move X2, X0
	073 Move X0, X19
	074 Move X1, X20
	075 Move X3, X31
	076 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	077 Move X0, 0xDCB000
	078 Move X0, [X0+2448]
	079 Call 0x1C17D08
	080 Move X1, X0
	081 Move X0, X19
	082 Call 0x1C17DEC

Method: System.DateTime AddDays(System.Double value)

Disassembly:
	0x03360EFC MOV X19, X0
	0x03360F00 TBNZ X8, 0x0, 0x3360F18
	0x03360F04 ADRP X0, 0xD94000
	0x03360F08 LDR X0, [X0 + 0x9F0]
	0x03360F0C BL 0x1C16CF4
	0x03360F10 MOVZ W8, 0x1
	0x03360F14 STRB W8, [X20 + 0xE47]
	0x03360F18 LDR X0, [X21]
	0x03360F1C LDR W8, [X0 + 0xE0]
	0x03360F20 CBNZ W8, 0x3360F28
	0x03360F24 BL 0x1C16DFC
	0x03360F28 LDR X8, [X19]
	0x03360F2C MOVZ X9, 0x81E3
	0x03360F30 MOVK X9, 0xE2050000
	0x03360F34 MOVK X9, 0xFF1D
	0x03360F38 MOVK X9, 0xA2E30000
	0x03360F3C AND X10, X8, 0x3FFFFFFF
	0x00000000 INVALID
	0x03360F44 MOVZ X10, 0xC000
	0x03360F48 MOVK X10, 0x2A690000
	0x03360F4C LDP X20, X19, [X31 + 0x10]
	0x03360F50 UBFM X9, X9, 0x27, 0x3F
	0x03360F54 MOVK X10, 0xC9
	0x03360F58 AND X8, X8, 0xFFFFFFFFFFFFFFFF
	0x03360F5C MUL X9, X9, X10
	0x03360F60 ORR X0, X9, X8, 0x0
	0x03360F64 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x107D000
	007 Move X21, 0xD95000
	008 Move W8, [X20+3637]
	009 Move X21, [X21+2544]
	010 Move V8, V0
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xD95000
	017 Move X0, [X0+2544]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+3637], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X19
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X30, [X31+16]
	030 Move X21, [X31+24]
	031 Move W1, 0x5C00
	032 NotImplemented "Instruction MOVK not yet implemented."
	033 Move V0, V8
	034 Move V8, [X31+48]
	035 Call DateTime.Add, X0, V0, X1
	036 Return X0

Method: System.DateTime AddMilliseconds(System.Double value)

Disassembly:
	0x03360F68 RET
	0x03360F6C STR X30, [X31 - 0x30]!
	0x03360F70 STP X22, X21, [X31 + 0x10]
	0x03360F74 STP X20, X19, [X31 + 0x20]
	0x03360F78 ADRP X22, 0x107C000
	0x03360F7C ADRP X21, 0xD94000
	0x03360F80 LDRB W8, [X22 + 0xE48]
	0x03360F84 LDR X21, [X21 + 0x9F0]
	0x03360F88 MOV W19, W1
	0x03360F8C MOV X20, X0
	0x03360F90 TBNZ X8, 0x0, 0x3360FA8
	0x03360F94 ADRP X0, 0xD94000
	0x03360F98 LDR X0, [X0 + 0x9F0]
	0x03360F9C BL 0x1C16CF4
	0x03360FA0 MOVZ W8, 0x1
	0x03360FA4 STRB W8, [X22 + 0xE48]
	0x03360FA8 LDR X0, [X21]
	0x03360FAC LDR W8, [X0 + 0xE0]
	0x03360FB0 CBNZ W8, 0x3360FB8
	0x03360FB4 BL 0x1C16DFC
	0x03360FB8 LDR X8, [X20]
	0x03360FBC MOVZ X9, 0x81E3
	0x03360FC0 MOVK X9, 0xE2050000
	0x03360FC4 MOVK X9, 0xFF1D
	0x03360FC8 MOVK X9, 0xA2E30000
	0x03360FCC AND X8, X8, 0x3FFFFFFF

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x107D000
	007 Move X21, 0xD95000
	008 Move W8, [X20+3638]
	009 Move X21, [X21+2544]
	010 Move V8, V0
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xD95000
	017 Move X0, [X0+2544]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+3638], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X19
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X30, [X31+16]
	030 Move X21, [X31+24]
	031 Move W1, 1
	032 Move V0, V8
	033 Move V8, [X31+48]
	034 Call DateTime.Add, X0, V0, X1
	035 Return X0

Method: System.DateTime AddMinutes(System.Double value)

Disassembly:
	0x03360FD0 MOVZ W10, 0x6BD
	0x00000000 INVALID
	0x03360FD8 MOVK W10, 0x396B0000
	0x03360FDC UBFM X8, X8, 0x27, 0x3F
	0x03360FE0 MOVZ W11, 0xC54F
	0x03360FE4 MUL X9, X8, X10
	0x03360FE8 MOVK W11, 0xFFFD0000
	0x03360FEC UBFM X10, X9, 0x2F, 0x3F
	0x03360FF0 MADD W9, W10, W11, W8
	0x03360FF4 MOVZ W12, 0x81FB
	0x03360FF8 ADD W8, W9, W11
	0x03360FFC MOVK W12, 0xE5AC0000
	0x03361000 MOVZ W13, 0x8EAC
	0x03361004 ADD W8, W8, 0x1
	0x03361008 CMP W8, W13
	0x0336100C SMADDL X8, X9, X12, X31
	0x03361010 UBFM X8, X8, 0x20, 0x3F
	0x03361014 ADD W8, W8, W9
	0x03361018 SBFM W12, W8, 0xF, 0x1F
	0x0336101C MOVZ W14, 0x3
	0x03361020 ADD W8, W12, W8, 0x1F, LSR
	0x03361024 MOVN W15, 0x8EAB
	0x03361028 MOVZ W16, 0xB073
	0x0336102C CSEL W8, W14, W8, CC
	0x03361030 MOVK W16, 0x166D0000
	0x03361034 MADD W9, W8, W15, W9

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x107D000
	007 Move X21, 0xD95000
	008 Move W8, [X20+3639]
	009 Move X21, [X21+2544]
	010 Move V8, V0
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xD95000
	017 Move X0, [X0+2544]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+3639], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X19
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X30, [X31+16]
	030 Move X21, [X31+24]
	031 Move W1, 0xEA60
	032 Move V0, V8
	033 Move V8, [X31+48]
	034 Call DateTime.Add, X0, V0, X1
	035 Return X0

Method: System.DateTime AddMonths(System.Int32 months)

Disassembly:
	0x03361038 SMADDL X12, X9, X16, X31
	0x0336103C UBFM X13, X12, 0x20, 0x3F
	0x03361040 UBFM X12, X12, 0x3F, 0x3F
	0x03361044 MOVN W11, 0x5B4
	0x03361048 MOVZ W17, 0xF9B1
	0x0336104C ADD W12, W12, W13, 0x7, ASR
	0x03361050 MOVK W17, 0xB38C0000
	0x03361054 MADD W13, W12, W11, W9
	0x03361058 SMADDL X11, X13, X17, X31
	0x0336105C UBFM X11, X11, 0x20, 0x3F
	0x03361060 ADD W11, W11, W13
	0x03361064 SBFM W15, W11, 0x8, 0x1F
	0x03361068 ADD W11, W15, W11, 0x1F, LSR
	0x0336106C SUB W15, W13, 0x5B4
	0x03361070 CMP W15, 0x16D
	0x03361074 CSEL W11, W14, W11, CC
	0x03361078 CBZ W19, 0x3361094
	0x0336107C MOVN W10, 0x16C
	0x03361080 CMP W19, 0x1
	0x03361084 MADD W20, W11, W10, W13
	0x03361088 B.NE 0x33610B4
	0x0336108C ADD W0, W20, 0x1
	0x03361090 B 0x3361150
	0x03361094 MOVZ W9, 0x190
	0x03361098 MUL W9, W10, W9
	0x0336109C MOVZ W10, 0x64
	0x033610A0 ORR W9, W9, 0x1
	0x033610A4 MADD W8, W8, W10, W9
	0x033610A8 ADD W8, W8, W12, 0x2, LSL
	0x033610AC ADD W0, W8, W11
	0x033610B0 B 0x3361150
	0x033610B4 LDR X0, [X21]
	0x033610B8 MOVN W10, 0x88F7
	0x033610BC CMP W11, 0x3
	0x033610C0 ADD W9, W9, W10
	0x033610C4 CSET W11, NE
	0x033610C8 CMP W9, 0x5B5
	0x033610CC CSET W9, CC
	0x033610D0 LDR W10, [X0 + 0xE0]
	0x033610D4 CMP W8, 0x3
	0x033610D8 CSET W8, NE
	0x033610DC AND W8, W8, W9, 0x0
	0x033610E0 ORR W22, W8, W11, 0x0
	0x033610E4 CBNZ W10, 0x33610F0
	0x033610E8 BL 0x1C16DFC
	0x033610EC LDR X0, [X21]
	0x033610F0 LDR X8, [X0 + 0xB8]
	0x033610F4 CMP W22, 0x0
	0x033610F8 ADD X9, X8, 0x8
	0x033610FC CSEL X8, X8, X9, NE
	0x03361100 LDR X8, [X8]
	0x03361104 CBZ X8, 0x3361164
	0x03361108 LDR X9, [X8 + 0x18]
	0x0336110C SBFM W0, W20, 0x5, 0x1F
	0x03361110 ADD W0, W0, 0x1
	0x03361114 CMP W0, W9
	0x03361118 B.CS 0x3361160
	0x0336111C ADD X10, X8, W0, 0x2, SXTW
	0x03361120 LDR W10, [X10 + 0x20]
	0x03361124 CMP W20, W10
	0x03361128 B.GE 0x3361110
	0x0336112C CMP W19, 0x2
	0x03361130 B.EQ 0x3361150
	0x03361134 SUB W10, W0, 0x1
	0x03361138 CMP W10, W9
	0x0336113C B.CS 0x3361160
	0x03361140 ADD X8, X8, W10, 0x2, SXTW
	0x03361144 LDR W8, [X8 + 0x20]
	0x03361148 SUB W8, W20, W8
	0x0336114C ADD W0, W8, 0x1
	0x03361150 LDP X20, X19, [X31 + 0x20]
	0x03361154 LDP X22, X21, [X31 + 0x10]
	0x03361158 LDR X30, [X31], #0x30
	0x0336115C RET
	0x03361160 BL 0x1C16F28
	0x03361164 BL 0x1C16F20
	0x03361168 STP X30, X21, [X31 - 0x20]!
	0x0336116C STP X20, X19, [X31 + 0x10]
	0x03361170 ADRP X20, 0x107B000
	0x03361174 ADRP X21, 0xD93000
	0x03361178 LDRB W8, [X20 + 0xE4A]
	0x0336117C LDR X21, [X21 + 0x9F0]
	0x03361180 MOV X19, X0
	0x03361184 TBNZ X8, 0x0, 0x336119C
	0x03361188 ADRP X0, 0xD93000
	0x0336118C LDR X0, [X0 + 0x9F0]
	0x03361190 BL 0x1C16CF4
	0x03361194 MOVZ W8, 0x1
	0x03361198 STRB W8, [X20 + 0xE4A]
	0x0336119C LDR X0, [X21]
	0x033611A0 LDR W8, [X0 + 0xE0]
	0x033611A4 CBNZ W8, 0x33611AC
	0x033611A8 BL 0x1C16DFC
	0x033611AC MOV X0, X19
	0x033611B0 LDP X20, X19, [X31 + 0x10]
	0x033611B4 MOVZ W1, 0x3
	0x033611B8 LDP X30, X21, [X31], #0x20
	0x033611BC B 0x3360F6C
	0x033611C0 STP X30, X21, [X31 - 0x20]!
	0x033611C4 STP X20, X19, [X31 + 0x10]
	0x033611C8 ADRP X20, 0x107B000
	0x033611CC ADRP X21, 0xD93000
	0x033611D0 LDRB W8, [X20 + 0xE4B]
	0x033611D4 LDR X21, [X21 + 0x9F0]
	0x033611D8 MOV X19, X0
	0x033611DC TBNZ X8, 0x0, 0x33611F4
	0x033611E0 ADRP X0, 0xD93000
	0x033611E4 LDR X0, [X0 + 0x9F0]
	0x033611E8 BL 0x1C16CF4
	0x033611EC MOVZ W8, 0x1
	0x033611F0 STRB W8, [X20 + 0xE4B]
	0x033611F4 LDR X0, [X21]
	0x033611F8 LDR W8, [X0 + 0xE0]
	0x033611FC CBNZ W8, 0x3361204
	0x03361200 BL 0x1C16DFC
	0x03361204 LDR X8, [X19]
	0x03361208 MOVZ X9, 0x81E3
	0x0336120C MOVK X9, 0xE2050000
	0x03361210 MOVK X9, 0xFF1D
	0x03361214 MOVK X9, 0xA2E30000
	0x03361218 AND X8, X8, 0x3FFFFFFF
	0x00000000 INVALID
	0x03361220 UBFM X8, X8, 0x27, 0x3F
	0x03361224 MOVZ W9, 0x4925
	0x03361228 ADD W8, W8, 0x1
	0x0336122C MOVK W9, 0x24920000
	0x03361230 UMADDL X9, X8, X9, X31
	0x03361234 UBFM X9, X9, 0x20, 0x3F
	0x03361238 SUB W10, W8, W9
	0x0336123C ADD W9, W9, W10, 0x1, LSR
	0x03361240 LDP X20, X19, [X31 + 0x10]
	0x03361244 UBFM W9, W9, 0x2, 0x1F
	0x03361248 SUB W9, W9, W9, 0x3, LSL
	0x0336124C ADD W0, W8, W9
	0x03361250 LDP X30, X21, [X31], #0x20
	0x03361254 RET
	0x03361258 STP X30, X21, [X31 - 0x20]!
	0x0336125C STP X20, X19, [X31 + 0x10]
	0x03361260 ADRP X20, 0x107B000
	0x03361264 ADRP X21, 0xD93000
	0x03361268 LDRB W8, [X20 + 0xE4C]
	0x0336126C LDR X21, [X21 + 0x9F0]
	0x03361270 MOV X19, X0
	0x03361274 TBNZ X8, 0x0, 0x336128C

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x107C000
	009 Move W8, [X21+3640]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xD94000
	017 Move X0, [X0+2544]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3640], W8
	021 Move W8, 0xD4C0
	022 NotImplemented "Instruction MOVK not yet implemented."
	023 Move W9, 0xA981
	024 Add W8, W20, W8
	025 NotImplemented "Instruction MOVK not yet implemented."
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move [X31+8], X31
	028 Move [X31+4], W31
	029 Move X22, 0xD94000
	030 Move X22, [X22+2544]
	031 Move X0, [X22]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Add X1, X31, 12
	037 Add X2, X31, 8
	038 Add X3, X31, 4
	039 Move X0, X19
	040 Call DateTime.GetDatePart, X0, X1, X2, X3
	041 Move W8, [X31+8]
	042 Add W8, W8, W20
	043 Subtract W9, W8, 1
	044 Move W8, 0xAAAB
	045 NotImplemented "Instruction MOVK not yet implemented."
	046 Move W11, [X31+12]
	047 NotImplemented "Instruction UMADDL not yet implemented."
	048 Move W10, 12
	049 Move X8, X8
	050 ShiftRight X8, 35
	051 And X8, X8, 0x7FFFFFFF
	052 NotImplemented "Instruction MSUB not yet implemented."
	053 Add W20, W9, 1
	054 Add W21, W11, W8
	055 Move W10, 0xAAAB
	056 Move W14, 0xAAAB
	057 Subtract W9, W31, W8
	058 NotImplemented "Instruction MOVK not yet implemented."
	059 Move W12, [X31+12]
	060 Subtract W13, W8, 12
	061 NotImplemented "Instruction MOVK not yet implemented."
	062 NotImplemented "Instruction UMADDL not yet implemented."
	063 NotImplemented "Instruction SMADDL not yet implemented."
	064 Move W11, 12
	065 Move X9, X9
	066 ShiftRight X9, 35
	067 And X9, X9, 0x7FFFFFFF
	068 Move X13, X10
	069 ShiftRight X13, 63
	070 And X13, X13, 0x7FFFFFFF
	071 NotImplemented "Instruction SBFM not yet implemented."
	072 NotImplemented "Instruction MADD not yet implemented."
	073 Add W9, W10, W13
	074 Add W20, W8, 12
	075 Add W21, W12, W9
	076 Subtract W8, W21, 1
	077 Move W9, 0x270F
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move X0, [X22]
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Move W0, W21
	085 Move W1, W20
	086 Call DateTime.DaysInMonth, X0, X1
	087 Move X8, [X22]
	088 Move W23, [X31+4]
	089 Move W22, W0
	090 Move W9, [X8+224]
	091 Compare W9, 0
	092 JumpIfNotEqual {95}
	093 Move X0, X8
	094 Call 0x1C17DFC
	095 NotImplemented "Instruction CMP not yet implemented."
	096 NotImplemented "Instruction CSEL not yet implemented."
	097 Move W0, W21
	098 Move W1, W20
	099 Call DateTime.DateToTicks, X0, X1, X2
	100 Move X8, [X19]
	101 Move X9, 0x81E3
	102 NotImplemented "Instruction MOVK not yet implemented."
	103 NotImplemented "Instruction MOVK not yet implemented."
	104 NotImplemented "Instruction MOVK not yet implemented."
	105 And X10, X8, 0x3FFFFFFF
	106 Move X11, 0xC000
	107 NotImplemented "Instruction INVALID not yet implemented."
	108 NotImplemented "Instruction MOVK not yet implemented."
	109 Move X9, X9
	110 ShiftRight X9, 39
	111 And X9, X9, 0x7FFFFFFF
	112 NotImplemented "Instruction MOVK not yet implemented."
	113 Move X20, [X31+48]
	114 Move X19, [X31+56]
	115 Move X22, [X31+32]
	116 Move X21, [X31+40]
	117 Move X30, [X31+16]
	118 Move X23, [X31+24]
	119 NotImplemented "Instruction NOP not yet implemented."
	120 NotImplemented "Instruction MSUB not yet implemented."
	121 And X8, X8, -1
	122 Add X9, X9, X0
	123 Or X0, X9, X8
	124 Add X31, X31, 64
	125 Return X0
	126 Move X0, 0xD9B000
	127 Move X0, [X0+1888]
	128 Call 0x1C17D08
	129 Call 0x1C17F10
	130 Move X19, X0
	131 Move X0, 0xDCA000
	132 Move X0, [X0+2456]
	133 Call 0x1C17D08
	134 Move X20, X0
	135 Move X0, 0xDCA000
	136 Move X0, [X0+2464]
	137 Move X0, 0xD9B000
	138 Move X0, [X0+1888]
	139 Call 0x1C17D08
	140 Call 0x1C17F10
	141 Move X19, X0
	142 Move X0, 0xDCA000
	143 Move X0, [X0+2456]
	144 Call 0x1C17D08
	145 Move X20, X0
	146 Move X0, 0xDCA000
	147 Move X0, [X0+2424]
	148 Call 0x1C17D08
	149 Move X2, X0
	150 Move X0, X19
	151 Move X1, X20
	152 Move X3, X31
	153 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	154 Move X0, 0xDCA000
	155 Move X0, [X0+2472]
	156 Call 0x1C17D08
	157 Move X1, X0
	158 Move X0, X19
	159 Call 0x1C17DEC

Method: System.DateTime AddSeconds(System.Double value)

Disassembly:
	0x0336159C LDR X19, [X19 + 0x9F0]
	0x033615A0 TBNZ X8, 0x0, 0x33615D0
	0x033615A4 ADRP X0, 0xD93000
	0x033615A8 LDR X0, [X0 + 0x9F0]
	0x033615AC BL 0x1C16CF4
	0x033615B0 ADRP X0, 0xD94000
	0x033615B4 LDR X0, [X0 + 0x570]
	0x033615B8 BL 0x1C16CF4
	0x033615BC ADRP X0, 0xDC6000
	0x033615C0 LDR X0, [X0 + 0xA38]
	0x033615C4 BL 0x1C16CF4
	0x033615C8 MOVZ W8, 0x1
	0x033615CC STRB W8, [X20 + 0xE53]
	0x033615D0 LDR X0, [X19]
	0x033615D4 ADRP X21, 0xDC6000
	0x033615D8 LDR W8, [X0 + 0xE0]
	0x033615DC LDR X21, [X21 + 0xA38]
	0x033615E0 CBNZ W8, 0x33615E8
	0x033615E4 BL 0x1C16DFC
	0x033615E8 ADRP X20, 0xD94000
	0x033615EC LDR X20, [X20 + 0x570]
	0x033615F0 BL 0x33616A4
	0x033615F4 MOV X19, X0
	0x033615F8 LDR X0, [X21]
	0x033615FC STR X19, [X31 + 0x10]
	0x03361600 STRB W31, [X31 + 0xC]

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x107C000
	007 Move X21, 0xD94000
	008 Move W8, [X20+3641]
	009 Move X21, [X21+2544]
	010 Move V8, V0
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xD94000
	017 Move X0, [X0+2544]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+3641], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X19
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X30, [X31+16]
	030 Move X21, [X31+24]
	031 Move W1, 1000
	032 Move V0, V8
	033 Move V8, [X31+48]
	034 Call DateTime.Add, X0, V0, X1
	035 Return X0

Method: System.DateTime AddTicks(System.Int64 value)

Disassembly:
	0x03360CCC MOV X0, X19
	0x03360CD0 MOV X1, X20
	0x03360CD4 MOV X3, X31
	0x03360CD8 BL 0x330E16C
	0x03360CDC ADRP X0, 0xDCA000
	0x03360CE0 LDR X0, [X0 + 0x9F8]
	0x03360CE4 BL 0x1C16D08
	0x03360CE8 MOV X1, X0
	0x03360CEC MOV X0, X19
	0x03360CF0 BL 0x1C16DEC
	0x03360CF4 MOVZ X9, 0x4000
	0x03360CF8 MOVK X9, 0xF4370000
	0x03360CFC MOVK X9, 0x2875
	0x03360D00 AND X8, X0, 0x3FFFFFFF
	0x03360D04 MOVK X9, 0x2BCA0000
	0x03360D08 CMP X8, X9
	0x03360D0C B.CS 0x3360D14
	0x03360D10 RET
	0x03360D14 STR X30, [X31 - 0x20]!
	0x03360D18 STP X20, X19, [X31 + 0x10]
	0x03360D1C ADRP X0, 0xD9B000
	0x03360D20 LDR X0, [X0 + 0x578]
	0x03360D24 BL 0x1C16D08
	0x03360D28 BL 0x1C16F10
	0x03360D2C MOV X19, X0
	0x03360D30 ADRP X0, 0xDCA000
	0x03360D34 LDR X0, [X0 + 0x9F0]
	0x03360D38 BL 0x1C16D08
	0x03360D3C MOV X20, X0
	0x03360D40 ADRP X0, 0xDCA000
	0x03360D44 LDR X0, [X0 + 0x958]
	0x03360D48 BL 0x1C16D08
	0x03360D4C MOV X2, X0
	0x03360D50 MOV X0, X19
	0x03360D54 MOV X1, X20
	0x03360D58 MOV X3, X31
	0x03360D5C BL 0x330E16C
	0x03360D60 ADRP X0, 0xDCA000
	0x03360D64 LDR X0, [X0 + 0xA00]
	0x03360D68 BL 0x1C16D08
	0x03360D6C MOV X1, X0
	0x03360D70 MOV X0, X19
	0x03360D74 BL 0x1C16DEC
	0x03360D78 STR X30, [X31 - 0x30]!
	0x03360D7C STP X22, X21, [X31 + 0x10]
	0x03360D80 STP X20, X19, [X31 + 0x20]
	0x03360D84 ADRP X21, 0x107C000
	0x03360D88 LDRB W8, [X21 + 0xE45]
	0x03360D8C MOV X19, X1
	0x03360D90 MOV X20, X0
	0x03360D94 TBNZ X8, 0x0, 0x3360DC4
	0x03360D98 ADRP X0, 0xD94000
	0x03360D9C LDR X0, [X0 + 0x9F0]
	0x03360DA0 BL 0x1C16CF4
	0x03360DA4 ADRP X0, 0xDCA000
	0x03360DA8 LDR X0, [X0 + 0x958]
	0x03360DAC BL 0x1C16CF4
	0x03360DB0 ADRP X0, 0xDCA000
	0x03360DB4 LDR X0, [X0 + 0x8F0]
	0x03360DB8 BL 0x1C16CF4
	0x03360DBC MOVZ W8, 0x1
	0x03360DC0 STRB W8, [X21 + 0xE45]
	0x03360DC4 CBZ X19, 0x3360E28
	0x03360DC8 ADRP X8, 0xD94000
	0x03360DCC LDR X8, [X8 + 0x9F0]
	0x03360DD0 ADRP X22, 0xDCA000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x107D000
	007 Move X21, 0xD95000
	008 Move W8, [X22+3642]
	009 Move X21, [X21+2544]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xD95000
	017 Move X0, [X0+2544]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3642], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X8, [X20]
	027 And X22, X8, 0x3FFFFFFF
	028 Subtract X9, X31, X22
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X9, 0x3FFF
	031 NotImplemented "Instruction MOVK not yet implemented."
	032 NotImplemented "Instruction MOVK not yet implemented."
	033 NotImplemented "Instruction MOVK not yet implemented."
	034 Subtract X9, X9, X22
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X0, [X21]
	037 Move W9, [X0+224]
	038 Compare W9, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1C17DFC
	041 Move X8, [X20]
	042 Add X9, X22, X19
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 And X8, X8, -1
	048 Or X0, X8, X9
	049 Move X30, [X31+48]
	050 Return X0
	051 Move X0, 0xD9C000
	052 Move X0, [X0+1888]
	053 Call 0x1C17D08
	054 Call 0x1C17F10
	055 Move X19, X0
	056 Move X0, 0xD9E000
	057 Move X0, [X0+3784]
	058 Call 0x1C17D08
	059 Move X20, X0
	060 Move X0, 0xDCB000
	061 Move X0, [X0+2424]
	062 Call 0x1C17D08
	063 Move X2, X0
	064 Move X0, X19
	065 Move X1, X20
	066 Move X3, X31
	067 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	068 Move X0, 0xDCB000
	069 Move X0, [X0+2432]
	070 Call 0x1C17D08
	071 Move X1, X0
	072 Move X0, X19
	073 Call 0x1C17DEC

Method: System.DateTime AddYears(System.Int32 value)

Disassembly:
	0x03361604 LDR W8, [X0 + 0xE0]
	0x03361608 CBNZ W8, 0x3361610
	0x0336160C BL 0x1C16DFC
	0x03361610 ADD X1, X31, 0xC
	0x03361614 MOV X0, X19
	0x03361618 MOV X2, X31
	0x0336161C BL 0x330A7C8
	0x03361620 LDR X8, [X20]
	0x03361624 MOV X19, X0
	0x03361628 LDR W9, [X8 + 0xE0]
	0x0336162C CBNZ W9, 0x3361638
	0x03361630 MOV X0, X8
	0x03361634 BL 0x1C16DFC
	0x03361638 ADD X0, X31, 0x10
	0x0336163C BL 0x3361708
	0x03361640 MOVZ X8, 0x4000
	0x03361644 MOVK X8, 0xF4370000
	0x03361648 MOVK X8, 0x2875
	0x0336164C ADD X1, X0, X19
	0x03361650 MOVK X8, 0x2BCA0000
	0x03361654 CMP X1, X8
	0x03361658 B.GE 0x3361678
	0x0336165C TBNZ X1, 0x0, 0x336168C
	0x03361660 LDRB W3, [X31 + 0xC]
	0x03361664 ADD X0, X31, 0x18
	0x03361668 STR X31, [X31 + 0x18]
	0x0336166C BL 0x335F024
	0x03361670 LDR X0, [X31 + 0x18]
	0x03361674 B 0x3361694
	0x03361678 MOVZ X0, 0x3FFF
	0x0336167C MOVK X0, 0xF4370000
	0x03361680 MOVK X0, 0x2875
	0x03361684 MOVK X0, 0xABCA0000
	0x03361688 B 0x3361690
	0x0336168C MOVZ X0, 0x80000000
	0x03361690 STR X0, [X31 + 0x18]
	0x03361694 LDP X20, X19, [X31 + 0x30]
	0x03361698 LDP X30, X21, [X31 + 0x20]
	0x0336169C ADD X31, X31, 0x40
	0x033616A0 RET
	0x033616A4 STR X30, [X31 - 0x20]!
	0x033616A8 STP X20, X19, [X31 + 0x10]
	0x033616AC ADRP X19, 0x107B000
	0x033616B0 ADRP X20, 0xD93000
	0x033616B4 LDRB W8, [X19 + 0xE74]
	0x033616B8 LDR X20, [X20 + 0x9F0]
	0x033616BC TBNZ X8, 0x0, 0x33616D4
	0x033616C0 ADRP X0, 0xD93000
	0x033616C4 LDR X0, [X0 + 0x9F0]
	0x033616C8 BL 0x1C16CF4
	0x033616CC MOVZ W8, 0x1
	0x033616D0 STRB W8, [X19 + 0xE74]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x107C000
	006 Move W8, [X21+3643]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xD94000
	014 Move X0, [X0+2544]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3643], W8
	018 Move W8, 0x2710
	019 Add W8, W19, W8
	020 Move W9, 0x4E21
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X8, 0xD94000
	023 Move X8, [X8+2544]
	024 Move X0, [X8]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Add W8, W19, W19
	030 Move X0, X20
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move W1, W8
	034 ShiftRight W1, 30
	035 And W1, W1, 0x1FFFFFFF
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Call DateTime.AddMonths, X0, X1
	039 Return X0
	040 Move X0, 0xD9B000
	041 Move X0, [X0+1888]
	042 Call 0x1C17D08
	043 Call 0x1C17F10
	044 Move X19, X0
	045 Move X0, 0xDCA000
	046 Move X0, [X0+2488]
	047 Call 0x1C17D08
	048 Move X20, X0
	049 Move X0, 0xDCA000
	050 Move X0, [X0+2496]
	051 Call 0x1C17D08
	052 Move X2, X0
	053 Move X0, X19
	054 Move X1, X20
	055 Move X3, X31
	056 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	057 Move X0, 0xDCA000
	058 Move X0, [X0+2504]
	059 Call 0x1C17D08
	060 Move X1, X0
	061 Move X0, X19
	062 Call 0x1C17DEC

Method: System.Int32 Compare(System.DateTime t1, System.DateTime t2)

Disassembly:
	0x033616D4 LDR X0, [X20]
	0x033616D8 LDR W8, [X0 + 0xE0]
	0x033616DC CBNZ W8, 0x33616E4
	0x033616E0 BL 0x1C16DFC
	0x033616E4 BL 0x1C25758
	0x033616E8 MOVZ X8, 0x22770000
	0x033616EC MOVK X8, 0xCE17
	0x033616F0 LDP X20, X19, [X31 + 0x10]
	0x033616F4 MOVK X8, 0x7010000
	0x033616F8 ADD X8, X0, X8
	0x033616FC ORR X0, X8, 0x7FFFFFFFFFFFFFFF
	0x03361700 LDR X30, [X31], #0x20
	0x03361704 RET
	0x03361708 STP X30, X21, [X31 - 0x20]!
	0x0336170C STP X20, X19, [X31 + 0x10]
	0x03361710 ADRP X20, 0x107B000
	0x03361714 ADRP X21, 0xD93000
	0x03361718 LDRB W8, [X20 + 0xE55]
	0x0336171C LDR X21, [X21 + 0x9F0]
	0x03361720 MOV X19, X0
	0x03361724 TBNZ X8, 0x0, 0x336173C
	0x03361728 ADRP X0, 0xD93000
	0x0336172C LDR X0, [X0 + 0x9F0]
	0x03361730 BL 0x1C16CF4
	0x03361734 MOVZ W8, 0x1
	0x03361738 STRB W8, [X20 + 0xE55]
	0x0336173C LDR X0, [X21]
	0x03361740 LDR W8, [X0 + 0xE0]
	0x03361744 CBNZ W8, 0x336174C
	0x03361748 BL 0x1C16DFC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x107C000
	007 Move X22, 0xD94000
	008 Move W8, [X21+3644]
	009 Move X22, [X22+2544]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xD94000
	017 Move X0, [X0+2544]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3644], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 And X8, X20, 0x3FFFFFFF
	027 And X9, X19, 0x3FFFFFFF
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move W0, 1
	030 NotImplemented "Instruction CSINV not yet implemented."
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X30, [X31+48]
	036 Return X0

Method: System.Int32 CompareTo(System.Object value)

Disassembly:
	0x0336174C LDR X8, [X19]
	0x03361750 LDP X20, X19, [X31 + 0x10]
	0x03361754 AND X0, X8, 0x3FFFFFFF
	0x03361758 LDP X30, X21, [X31], #0x20
	0x0336175C RET
	0x03361760 STP X30, X21, [X31 - 0x20]!
	0x03361764 STP X20, X19, [X31 + 0x10]
	0x03361768 ADRP X20, 0x107B000
	0x0336176C ADRP X21, 0xD93000
	0x03361770 LDRB W8, [X20 + 0xE54]
	0x03361774 LDR X21, [X21 + 0x9F0]
	0x03361778 MOV X19, X0
	0x0336177C TBNZ X8, 0x0, 0x3361794
	0x03361780 ADRP X0, 0xD93000
	0x03361784 LDR X0, [X0 + 0x9F0]
	0x03361788 BL 0x1C16CF4
	0x0336178C MOVZ W8, 0x1
	0x03361790 STRB W8, [X20 + 0xE54]
	0x03361794 LDR X0, [X21]
	0x03361798 LDR W8, [X0 + 0xE0]
	0x0336179C CBNZ W8, 0x33617A4
	0x033617A0 BL 0x1C16DFC
	0x033617A4 LDR X8, [X19]
	0x033617A8 MOVZ X9, 0x42BD
	0x033617AC MOVK X9, 0xE57A0000
	0x033617B0 MOVK X9, 0x94D5
	0x033617B4 MOVK X9, 0xD6BF0000
	0x033617B8 AND X8, X8, 0x3FFFFFFF
	0x033617BC ORR X10, X31, 0x8888888888888888
	0x00000000 INVALID
	0x033617C4 MOVK X10, 0x8889
	0x033617C8 UBFM X8, X8, 0x17, 0x3F
	0x033617CC LDP X20, X19, [X31 + 0x10]
	0x00000000 INVALID
	0x033617D4 UBFM X9, X9, 0x5, 0x3F
	0x033617D8 MOVZ W10, 0x3C
	0x033617DC MSUB W0, W9, W10, W8
	0x033617E0 LDP X30, X21, [X31], #0x20
	0x033617E4 RET
	0x033617E8 STP X30, X21, [X31 - 0x20]!
	0x033617EC STP X20, X19, [X31 + 0x10]
	0x033617F0 ADRP X20, 0x107B000
	0x033617F4 ADRP X21, 0xD93000
	0x033617F8 LDRB W8, [X20 + 0xE56]
	0x033617FC LDR X21, [X21 + 0x9F0]
	0x03361800 MOV X19, X0
	0x03361804 TBNZ X8, 0x0, 0x336181C
	0x03361808 ADRP X0, 0xD93000
	0x0336180C LDR X0, [X0 + 0x9F0]
	0x03361810 BL 0x1C16CF4
	0x03361814 MOVZ W8, 0x1
	0x03361818 STRB W8, [X20 + 0xE56]
	0x0336181C LDR X0, [X21]
	0x03361820 LDR W8, [X0 + 0xE0]
	0x03361824 CBNZ W8, 0x336182C
	0x03361828 BL 0x1C16DFC
	0x0336182C LDR X8, [X19]
	0x03361830 MOVZ X9, 0x81E3
	0x03361834 MOVK X9, 0xE2050000
	0x03361838 MOVK X9, 0xFF1D
	0x0336183C MOVK X9, 0xA2E30000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x107C000
	006 Move W8, [X21+3645]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xD94000
	014 Move X0, [X0+2544]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3645], W8
	018 Compare X19, 0
	019 JumpIfEqual {30}
	020 Move X21, 0xD94000
	021 Move X21, [X21+2544]
	022 Move X8, [X19]
	023 Move X0, [X21]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W8, [X0+224]
	026 Move X20, [X20]
	027 Compare W8, 0
	028 JumpIfEqual {36}
	029 Move X1, X0
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move W0, 1
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return X0
	036 Call 0x1C17DFC
	037 Move X1, [X21]
	038 Move X0, [X19]
	039 Move X8, [X0+64]
	040 Move X9, [X1+64]
	041 Move X0, X19
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Call 0x1C17E08
	044 Move X1, [X0]
	045 Move X0, X20
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Call DateTime.Compare, X0, X1
	051 Return X0
	052 Move X0, 0xD9B000
	053 Move X0, [X0+1400]
	054 Call 0x1C17D08
	055 Call 0x1C17F10
	056 Move X19, X0
	057 Move X0, 0xDCA000
	058 Move X0, [X0+2512]
	059 Call 0x1C17D08
	060 Move X1, X0
	061 Move X0, X19
	062 Move X2, X31
	063 Call ArgumentException..ctor, X0, X1
	064 Move X0, 0xDCA000
	065 Move X0, [X0+2520]
	066 Call 0x1C17D08
	067 Move X1, X0
	068 Move X0, X19
	069 Call 0x1C17DEC
	070 Call 0x1C181E0

Method: System.Int32 CompareTo(System.DateTime value)

Disassembly:
	0x03361840 AND X8, X8, 0x3FFFFFFF
	0x03361844 MOVZ X10, 0xC000
	0x03361848 LDP X20, X19, [X31 + 0x10]
	0x00000000 INVALID
	0x03361850 MOVK X10, 0x2A690000
	0x03361854 UBFM X9, X9, 0x27, 0x3F
	0x03361858 MOVK X10, 0xC9
	0x0336185C MSUB X0, X9, X10, X8
	0x03361860 LDP X30, X21, [X31], #0x20
	0x03361864 RET
	0x03361868 STP X30, X21, [X31 - 0x20]!
	0x0336186C STP X20, X19, [X31 + 0x10]
	0x03361870 ADRP X20, 0x107B000
	0x03361874 ADRP X21, 0xD93000
	0x03361878 LDRB W8, [X20 + 0xE57]
	0x0336187C LDR X21, [X21 + 0x9F0]
	0x03361880 MOV X19, X0
	0x03361884 TBNZ X8, 0x0, 0x336189C
	0x03361888 ADRP X0, 0xD93000
	0x0336188C LDR X0, [X0 + 0x9F0]
	0x03361890 BL 0x1C16CF4
	0x03361894 MOVZ W8, 0x1
	0x03361898 STRB W8, [X20 + 0xE57]
	0x0336189C LDR X0, [X21]
	0x033618A0 LDR W8, [X0 + 0xE0]
	0x033618A4 CBNZ W8, 0x33618AC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x107C000
	007 Move X21, 0xD94000
	008 Move W8, [X22+3646]
	009 Move X21, [X21+2544]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xD94000
	017 Move X0, [X0+2544]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3646], W8
	021 Move X0, [X21]
	022 Move X20, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X20
	028 Move X1, X19
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X30, [X31+48]
	034 Call DateTime.Compare, X0, X1
	035 Return X0

Method: System.Int64 DateToTicks(System.Int32 year, System.Int32 month, System.Int32 day)

Disassembly:
	0x03360144 CMP W8, W9
	0x03360148 B.CS 0x336021C
	0x0336014C LDR X0, [X22]
	0x03360150 LDR W8, [X0 + 0xE0]
	0x03360154 CBNZ W8, 0x336015C
	0x03360158 BL 0x1C16DFC
	0x0336015C MOV W0, W21
	0x03360160 MOV W1, W20
	0x03360164 BL 0x3360470
	0x03360168 LDR X8, [X22]
	0x0336016C LDR W23, [X31 + 0x4]
	0x03360170 MOV W22, W0
	0x03360174 LDR W9, [X8 + 0xE0]
	0x03360178 CBNZ W9, 0x3360184
	0x0336017C MOV X0, X8
	0x03360180 BL 0x1C16DFC
	0x03360184 CMP W23, W22
	0x03360188 CSEL W2, W22, W23, GT
	0x0336018C MOV W0, W21
	0x03360190 MOV W1, W20
	0x03360194 BL 0x335F144
	0x03360198 LDR X8, [X19]
	0x0336019C MOVZ X9, 0x81E3
	0x033601A0 MOVK X9, 0xE2050000
	0x033601A4 MOVK X9, 0xFF1D
	0x033601A8 MOVK X9, 0xA2E30000
	0x033601AC AND X10, X8, 0x3FFFFFFF
	0x033601B0 MOVZ X11, 0xC000
	0x00000000 INVALID
	0x033601B8 MOVK X11, 0x2A690000
	0x033601BC UBFM X9, X9, 0x27, 0x3F
	0x033601C0 MOVK X11, 0xC9
	0x033601C4 LDP X20, X19, [X31 + 0x30]
	0x033601C8 LDP X22, X21, [X31 + 0x20]
	0x033601CC LDP X30, X23, [X31 + 0x10]
	0x033601D0 NOP
	0x033601D4 MSUB X9, X9, X11, X10
	0x033601D8 AND X8, X8, 0xFFFFFFFFFFFFFFFF
	0x033601DC ADD X9, X9, X0
	0x033601E0 ORR X0, X9, X8, 0x0
	0x033601E4 ADD X31, X31, 0x40
	0x033601E8 RET
	0x033601EC ADRP X0, 0xD9B000
	0x033601F0 LDR X0, [X0 + 0x760]
	0x033601F4 BL 0x1C16D08
	0x033601F8 BL 0x1C16F10
	0x033601FC MOV X19, X0
	0x03360200 ADRP X0, 0xDCA000
	0x03360204 LDR X0, [X0 + 0x998]
	0x03360208 BL 0x1C16D08
	0x0336020C MOV X20, X0
	0x03360210 ADRP X0, 0xDCA000
	0x03360214 LDR X0, [X0 + 0x9A0]
	0x03360218 B 0x3360248
	0x0336021C ADRP X0, 0xD9B000
	0x03360220 LDR X0, [X0 + 0x760]
	0x03360224 BL 0x1C16D08
	0x03360228 BL 0x1C16F10
	0x0336022C MOV X19, X0
	0x03360230 ADRP X0, 0xDCA000
	0x03360234 LDR X0, [X0 + 0x998]
	0x03360238 BL 0x1C16D08
	0x0336023C MOV X20, X0
	0x03360240 ADRP X0, 0xDCA000
	0x03360244 LDR X0, [X0 + 0x978]
	0x03360248 BL 0x1C16D08
	0x0336024C MOV X2, X0
	0x03360250 MOV X0, X19
	0x03360254 MOV X1, X20
	0x03360258 MOV X3, X31
	0x0336025C BL 0x3311888
	0x03360260 ADRP X0, 0xDCA000
	0x03360264 LDR X0, [X0 + 0x9A8]
	0x03360268 BL 0x1C16D08
	0x0336026C MOV X1, X0
	0x03360270 MOV X0, X19
	0x03360274 BL 0x1C16DEC
	0x03360278 STR X30, [X31 - 0x40]!
	0x0336027C STP X24, X23, [X31 + 0x10]
	0x03360280 STP X22, X21, [X31 + 0x20]
	0x03360284 STP X20, X19, [X31 + 0x30]
	0x03360288 ADRP X24, 0x107C000
	0x0336028C ADRP X23, 0xD94000
	0x03360290 LDRB W8, [X24 + 0xE49]
	0x03360294 LDR X23, [X23 + 0x9F0]
	0x03360298 MOV X19, X3
	0x0336029C MOV X20, X2
	0x033602A0 MOV X21, X1
	0x033602A4 MOV X22, X0
	0x033602A8 TBNZ X8, 0x0, 0x33602C0
	0x033602AC ADRP X0, 0xD94000
	0x033602B0 LDR X0, [X0 + 0x9F0]
	0x033602B4 BL 0x1C16CF4
	0x033602B8 MOVZ W8, 0x1
	0x033602BC STRB W8, [X24 + 0xE49]
	0x033602C0 LDR X0, [X23]
	0x033602C4 LDR W8, [X0 + 0xE0]
	0x033602C8 CBNZ W8, 0x33602D4
	0x033602CC BL 0x1C16DFC
	0x033602D0 LDR X0, [X23]
	0x033602D4 LDR X8, [X22]
	0x033602D8 MOVZ X9, 0x81E3
	0x033602DC MOVK X9, 0xE2050000
	0x033602E0 MOVK X9, 0xFF1D
	0x033602E4 MOVK X9, 0xA2E30000
	0x033602E8 AND X8, X8, 0x3FFFFFFF
	0x033602EC MOVZ W10, 0x6BD
	0x00000000 INVALID
	0x033602F4 MOVK W10, 0x396B0000
	0x033602F8 UBFM X8, X8, 0x27, 0x3F

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x107D000
	009 Move W8, [X22+3647]
	010 Move W19, W2
	011 Move W20, W1
	012 Move W21, W0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xD95000
	018 Move X0, [X0+2544]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+3647], W8
	022 Subtract W22, W21, 1
	023 Move W8, 0x270E
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Subtract W23, W20, 1
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X24, 0xD95000
	028 Move X24, [X24+2544]
	029 Move X0, [X24]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move W0, W21
	035 Call DateTime.IsLeapYear, X0
	036 Move X8, [X24]
	037 Move W21, W0
	038 Move W9, [X8+224]
	039 Compare W9, 0
	040 JumpIfNotEqual {44}
	041 Move X0, X8
	042 Call 0x1C17DFC
	043 Move X8, [X24]
	044 Move X8, [X8+184]
	045 And W31, W21, 1
	046 Add X9, X8, 8
	047 NotImplemented "Instruction CSEL not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X8, [X8]
	050 Compare X8, 0
	051 JumpIfEqual {126}
	052 Move W9, [X8+24]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Add X8, X8, 32
	056 Move W9, [X8]
	057 Move W8, [X8]
	058 Subtract W9, W9, W8
	059 NotImplemented "Instruction CMP not yet implemented."
	060 NotImplemented "Instruction SXTH not yet implemented."
	061 Move W11, 0x7AE1
	062 Move W12, 0x851F
	063 NotImplemented "Instruction MOVK not yet implemented."
	064 NotImplemented "Instruction MOVK not yet implemented."
	065 Move W13, W10
	066 ShiftRight W13, 29
	067 And W13, W13, 0x3FFFFFFF
	068 Move W9, 365
	069 NotImplemented "Instruction SMADDL not yet implemented."
	070 NotImplemented "Instruction SMADDL not yet implemented."
	071 Add W12, W22, W13
	072 NotImplemented "Instruction MADD not yet implemented."
	073 Move X13, X11
	074 ShiftRight X13, 63
	075 And X13, X13, 0x7FFFFFFF
	076 Move X11, X11
	077 ShiftRight X11, 37
	078 And X11, X11, 0x7FFFFFFF
	079 NotImplemented "Instruction SXTH not yet implemented."
	080 Move X14, X10
	081 ShiftRight X14, 63
	082 And X14, X14, 0x7FFFFFFF
	083 Move X10, X10
	084 ShiftRight X10, 39
	085 And X10, X10, 0x7FFFFFFF
	086 Add W11, W11, W13
	087 Add W9, W9, W12
	088 Add W10, W10, W14
	089 Add W9, W9, W11
	090 Add W9, W9, W10
	091 Add W8, W9, W8
	092 Move X9, 0xC000
	093 Move X20, [X31+48]
	094 Move X19, [X31+56]
	095 Move X22, [X31+32]
	096 Move X21, [X31+40]
	097 Move X24, [X31+16]
	098 Move X23, [X31+24]
	099 Subtract W8, W8, 1
	100 NotImplemented "Instruction MOVK not yet implemented."
	101 Move X8, W8
	102 NotImplemented "Instruction MOVK not yet implemented."
	103 Multiply X0, X8, X9
	104 Move X30, [X31+64]
	105 Return X0
	106 Move X0, 0xD9C000
	107 Move X0, [X0+1888]
	108 Call 0x1C17D08
	109 Call 0x1C17F10
	110 Move X19, X0
	111 Move X0, 0xDC9000
	112 Move X0, [X0+2232]
	113 Call 0x1C17D08
	114 Move X2, X0
	115 Move X0, X19
	116 Move X1, X31
	117 Move X3, X31
	118 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	119 Move X0, 0xDCB000
	120 Move X0, [X0+2344]
	121 Call 0x1C17D08
	122 Move X1, X0
	123 Move X0, X19
	124 Call 0x1C17DEC
	125 Call 0x1C17F28
	126 Call 0x1C17F20

Method: System.Int64 TimeToTicks(System.Int32 hour, System.Int32 minute, System.Int32 second)

Disassembly:
	0x033603A8 SBFM W10, W9, 0x8, 0x1F
	0x033603AC ADD W9, W10, W9, 0x1F, LSR
	0x033603B0 CSEL W24, W14, W9, CC
	0x033603B4 ADD W8, W8, W24
	0x033603B8 CMP W24, 0x3
	0x033603BC STR W8, [X21]
	0x033603C0 CSET W8, NE
	0x033603C4 CMP W15, 0x5B5
	0x033603C8 CSET W9, CC
	0x033603CC LDR W10, [X0 + 0xE0]
	0x033603D0 CMP W12, 0x3
	0x033603D4 CSET W11, NE
	0x033603D8 AND W9, W11, W9, 0x0
	0x033603DC ORR W21, W9, W8, 0x0
	0x033603E0 CBNZ W10, 0x33603EC
	0x033603E4 BL 0x1C16DFC
	0x033603E8 LDR X0, [X23]
	0x033603EC LDR X8, [X0 + 0xB8]
	0x033603F0 CMP W21, 0x0
	0x033603F4 ADD X9, X8, 0x8
	0x033603F8 CSEL X8, X8, X9, NE
	0x033603FC LDR X8, [X8]
	0x03360400 CBZ X8, 0x336046C
	0x03360404 LDR X10, [X8 + 0x18]
	0x03360408 MOVN W9, 0x16C
	0x0336040C MADD W9, W24, W9, W22
	0x03360410 SBFM W11, W9, 0x5, 0x1F
	0x03360414 ADD W11, W11, 0x1
	0x03360418 CMP W11, W10
	0x0336041C B.CS 0x3360468
	0x03360420 ADD X12, X8, W11, 0x2, SXTW
	0x03360424 LDR W12, [X12 + 0x20]
	0x03360428 CMP W9, W12
	0x0336042C B.GE 0x3360414
	0x03360430 SUB W12, W11, 0x1
	0x03360434 CMP W12, W10
	0x03360438 STR W11, [X20]
	0x0336043C B.CS 0x3360468
	0x03360440 ADD X8, X8, W12, 0x2, SXTW
	0x03360444 LDR W8, [X8 + 0x20]
	0x03360448 LDP X22, X21, [X31 + 0x20]
	0x0336044C LDP X24, X23, [X31 + 0x10]
	0x03360450 SUB W8, W9, W8
	0x03360454 ADD W8, W8, 0x1
	0x03360458 STR W8, [X19]
	0x0336045C LDP X20, X19, [X31 + 0x30]
	0x03360460 LDR X30, [X31], #0x40
	0x03360464 RET
	0x03360468 BL 0x1C16F28
	0x0336046C BL 0x1C16F20
	0x03360470 STR X30, [X31 - 0x30]!
	0x03360474 STP X22, X21, [X31 + 0x10]
	0x03360478 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x107D000
	007 Move W8, [X22+3648]
	008 Move W19, W2
	009 Move W20, W1
	010 Move W21, W0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xD96000
	016 Move X0, [X0+1392]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+3648], W8
	020 NotImplemented "Instruction CMP not yet implemented."
	021 NotImplemented "Instruction CMP not yet implemented."
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X8, 0xD96000
	024 Move X8, [X8+1392]
	025 Move X0, [X8]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move W0, W21
	031 Move W1, W20
	032 Move W2, W19
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X3, X31
	038 Move X30, [X31+48]
	039 Call TimeSpan.TimeToTicks, X0, X1, X2
	040 Return X0
	041 Move X0, 0xD9C000
	042 Move X0, [X0+1888]
	043 Call 0x1C17D08
	044 Call 0x1C17F10
	045 Move X19, X0
	046 Move X0, 0xDC9000
	047 Move X0, [X0+1464]
	048 Call 0x1C17D08
	049 Move X2, X0
	050 Move X0, X19
	051 Move X1, X31
	052 Move X3, X31
	053 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	054 Move X0, 0xDCB000
	055 Move X0, [X0+2352]
	056 Call 0x1C17D08
	057 Move X1, X0
	058 Move X0, X19
	059 Call 0x1C17DEC

Method: System.Int32 DaysInMonth(System.Int32 year, System.Int32 month)

Disassembly:
	0x03361470 AND X8, X8, 0x3FFFFFFF
	0x03361474 MOVK X10, 0x9BA5
	0x00000000 INVALID
	0x0336147C MOVK X10, 0x20C40000
	0x03361480 UBFM X9, X8, 0xB, 0x3F
	0x03361484 UBFM X8, X8, 0xE, 0x3F
	0x03361488 LDP X20, X19, [X31 + 0x10]
	0x00000000 INVALID
	0x03361490 UBFM X8, X8, 0x4, 0x3F
	0x03361494 MOVZ W10, 0x3E8
	0x03361498 MSUB W0, W8, W10, W9
	0x0336149C LDP X30, X21, [X31], #0x20
	0x033614A0 RET
	0x033614A4 STP X30, X21, [X31 - 0x20]!
	0x033614A8 STP X20, X19, [X31 + 0x10]
	0x033614AC ADRP X20, 0x107B000
	0x033614B0 ADRP X21, 0xD93000
	0x033614B4 LDRB W8, [X20 + 0xE51]
	0x033614B8 LDR X21, [X21 + 0x9F0]
	0x033614BC MOV X19, X0
	0x033614C0 TBNZ X8, 0x0, 0x33614D8
	0x033614C4 ADRP X0, 0xD93000
	0x033614C8 LDR X0, [X0 + 0x9F0]
	0x033614CC BL 0x1C16CF4
	0x033614D0 MOVZ W8, 0x1
	0x033614D4 STRB W8, [X20 + 0xE51]
	0x033614D8 LDR X0, [X21]
	0x033614DC LDR W8, [X0 + 0xE0]
	0x033614E0 CBNZ W8, 0x33614E8
	0x033614E4 BL 0x1C16DFC
	0x033614E8 LDR X8, [X19]
	0x033614EC MOVZ X9, 0xBEA7
	0x033614F0 MOVK X9, 0x5D70000
	0x033614F4 MOVK X9, 0x9EC2
	0x033614F8 MOVK X9, 0xE5100000
	0x033614FC AND X8, X8, 0x3FFFFFFF
	0x03361500 ORR X10, X31, 0x8888888888888888
	0x00000000 INVALID
	0x03361508 MOVK X10, 0x8889
	0x0336150C UBFM X8, X8, 0x1D, 0x3F
	0x03361510 LDP X20, X19, [X31 + 0x10]
	0x00000000 INVALID
	0x03361518 UBFM X9, X9, 0x5, 0x3F
	0x0336151C MOVZ W10, 0x3C
	0x03361520 MSUB W0, W9, W10, W8
	0x03361524 LDP X30, X21, [X31], #0x20
	0x03361528 RET
	0x0336152C STP X30, X21, [X31 - 0x20]!
	0x03361530 STP X20, X19, [X31 + 0x10]
	0x03361534 ADRP X20, 0x107B000
	0x03361538 ADRP X21, 0xD93000
	0x0336153C LDRB W8, [X20 + 0xE52]
	0x03361540 LDR X21, [X21 + 0x9F0]
	0x03361544 MOV X19, X0
	0x03361548 TBNZ X8, 0x0, 0x3361560
	0x0336154C ADRP X0, 0xD93000
	0x03361550 LDR X0, [X0 + 0x9F0]
	0x03361554 BL 0x1C16CF4
	0x03361558 MOVZ W8, 0x1
	0x0336155C STRB W8, [X20 + 0xE52]
	0x03361560 LDR X0, [X21]
	0x03361564 LDR W8, [X0 + 0xE0]
	0x03361568 CBNZ W8, 0x3361570
	0x0336156C BL 0x1C16DFC
	0x03361570 MOV X0, X19
	0x03361574 LDP X20, X19, [X31 + 0x10]
	0x03361578 MOVZ W1, 0x2
	0x0336157C LDP X30, X21, [X31], #0x20
	0x03361580 B 0x3360F6C
	0x03361584 SUB X31, X31, 0x40
	0x03361588 STP X30, X21, [X31 + 0x20]
	0x0336158C STP X20, X19, [X31 + 0x30]
	0x03361590 ADRP X20, 0x107B000
	0x03361594 ADRP X19, 0xD93000
	0x03361598 LDRB W8, [X20 + 0xE53]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x107C000
	007 Move W8, [X21+3649]
	008 Move W19, W1
	009 Move W20, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD94000
	015 Move X0, [X0+2544]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3649], W8
	019 Subtract W21, W19, 1
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X22, 0xD94000
	022 Move X22, [X22+2544]
	023 Move X0, [X22]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move W0, W20
	029 Call DateTime.IsLeapYear, X0
	030 Move X8, [X22]
	031 Move W20, W0
	032 Move W9, [X8+224]
	033 Compare W9, 0
	034 JumpIfNotEqual {38}
	035 Move X0, X8
	036 Call 0x1C17DFC
	037 Move X8, [X22]
	038 Move X8, [X8+184]
	039 And W31, W20, 1
	040 Add X9, X8, 8
	041 NotImplemented "Instruction CSEL not yet implemented."
	042 Move X8, [X8]
	043 Compare X8, 0
	044 JumpIfEqual {82}
	045 Move W9, [X8+24]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Add X8, X8, 32
	049 Move W9, [X8]
	050 Move W8, [X8]
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Subtract W0, W9, W8
	056 Move X30, [X31+48]
	057 Return X0
	058 Call 0x1C17F28
	059 Move X0, 0xD9B000
	060 Move X0, [X0+1888]
	061 Call 0x1C17D08
	062 Call 0x1C17F10
	063 Move X19, X0
	064 Move X0, 0xDC7000
	065 Move X0, [X0+3496]
	066 Call 0x1C17D08
	067 Move X20, X0
	068 Move X0, 0xDC8000
	069 Move X0, [X0+2248]
	070 Call 0x1C17D08
	071 Move X2, X0
	072 Move X0, X19
	073 Move X1, X20
	074 Move X3, X31
	075 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	076 Move X0, 0xDCA000
	077 Move X0, [X0+2480]
	078 Call 0x1C17D08
	079 Move X1, X0
	080 Move X0, X19
	081 Call 0x1C17DEC
	082 Call 0x1C17F20

Method: System.Boolean Equals(System.Object value)

Disassembly:
	0x03361970 LDR X8, [X21]
	0x03361974 MOV X21, X0
	0x03361978 LDR W9, [X8 + 0xE0]
	0x0336197C CBNZ W9, 0x3361988
	0x03361980 MOV X0, X8
	0x03361984 BL 0x1C16DFC
	0x03361988 MOV X0, X20
	0x0336198C MOV X1, X19
	0x03361990 LDP X20, X19, [X31 + 0x10]
	0x03361994 MOV X2, X21
	0x03361998 MOV W3, W31
	0x0336199C LDP X30, X21, [X31], #0x20
	0x033619A0 B 0x33619A4
	0x033619A4 SUB X31, X31, 0xC0
	0x033619A8 STR X30, [X31 + 0x80]
	0x033619AC STP X24, X23, [X31 + 0x90]
	0x033619B0 STP X22, X21, [X31 + 0xA0]
	0x033619B4 STP X20, X19, [X31 + 0xB0]
	0x033619B8 ADRP X24, 0x107B000
	0x033619BC ADRP X23, 0xDC7000
	0x033619C0 LDRB W8, [X24 + 0xEE6]
	0x033619C4 LDR X23, [X23 + 0x588]
	0x033619C8 MOV W19, W3
	0x033619CC MOV X20, X2
	0x033619D0 MOV X21, X1
	0x033619D4 MOV X22, X0
	0x033619D8 TBNZ X8, 0x0, 0x33619F0
	0x033619DC ADRP X0, 0xDC7000
	0x033619E0 LDR X0, [X0 + 0x588]
	0x033619E4 BL 0x1C16CF4
	0x033619E8 MOVZ W8, 0x1
	0x033619EC STRB W8, [X24 + 0xEE6]
	0x033619F0 MOVI V0.2D, 0x0
	0x033619F4 ADD X0, X31, 0x0
	0x033619F8 MOV X1, X22
	0x033619FC MOV X2, X21
	0x03361A00 MOV X3, X31
	0x03361A04 STP V0, V0, [X31 + 0x60]
	0x03361A08 STP V0, V0, [X31 + 0x40]
	0x03361A0C STP V0, V0, [X31 + 0x20]
	0x03361A10 STP V0, V0, [X31]
	0x03361A14 BL 0x33766A0
	0x03361A18 LDR X0, [X23]
	0x03361A1C LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x107C000
	006 Move W8, [X21+3650]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xD94000
	014 Move X0, [X0+2544]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3650], W8
	018 Compare X19, 0
	019 JumpIfEqual {25}
	020 Move X21, 0xD94000
	021 Move X21, [X21+2544]
	022 Move X8, [X19]
	023 Move X0, [X21]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W0, W31
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfEqual {30}
	029 Move X1, X0
	030 Call 0x1C17DFC
	031 Move X1, [X21]
	032 Move X0, [X19]
	033 Move X8, [X0+64]
	034 Move X9, [X1+64]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X20, [X20]
	037 Move X0, X19
	038 Call 0x1C17E08
	039 Move X8, [X0]
	040 Xor X8, X8, X20
	041 And X31, X8, 0x3FFFFFFF
	042 NotImplemented "Instruction CSET not yet implemented."
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Return X0
	048 Move X0, X19
	049 Call 0x1C181E0

Method: System.Boolean Equals(System.DateTime value)

Disassembly:
	0x03361A20 CBNZ W8, 0x3361A28
	0x03361A24 BL 0x1C16DFC
	0x03361A28 ADD X4, X31, 0x0
	0x03361A2C MOV X0, X22
	0x03361A30 MOV X1, X21
	0x03361A34 MOV X2, X20
	0x03361A38 MOV W3, W19
	0x03361A3C BL 0x336FC74
	0x03361A40 TBZ X0, 0x0, 0x3361A60
	0x03361A44 LDR X0, [X31 + 0x38]
	0x03361A48 LDP X20, X19, [X31 + 0xB0]
	0x03361A4C LDP X22, X21, [X31 + 0xA0]
	0x03361A50 LDP X24, X23, [X31 + 0x90]
	0x03361A54 LDR X30, [X31 + 0x80]
	0x03361A58 ADD X31, X31, 0xC0
	0x03361A5C RET
	0x03361A60 ADRP X0, 0xDC7000
	0x03361A64 LDR X0, [X0 + 0x588]
	0x03361A68 BL 0x1C16D08
	0x03361A6C BL 0x19903D0
	0x03361A70 ADD X0, X31, 0x0
	0x03361A74 BL 0x336AD3C
	0x03361A78 MOV X19, X0
	0x03361A7C ADRP X0, 0xDC9000
	0x03361A80 LDR X0, [X0 + 0xA10]
	0x03361A84 BL 0x1C16D08
	0x03361A88 MOV X1, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x107C000
	007 Move X22, 0xD94000
	008 Move W8, [X21+3651]
	009 Move X22, [X22+2544]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xD94000
	017 Move X0, [X0+2544]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3651], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X8, [X20]
	027 Move X22, [X31+16]
	028 Move X21, [X31+24]
	029 Xor X8, X8, X19
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 And X31, X8, 0x3FFFFFFF
	033 NotImplemented "Instruction CSET not yet implemented."
	034 Move X30, [X31+48]
	035 Return X0

Method: System.DateTime FromBinary(System.Int64 dateData)

Disassembly:
	0x03361A8C MOV X0, X19
	0x03361A90 BL 0x1C16DEC
	0x03361A94 STR X30, [X31 - 0x30]!
	0x03361A98 STP X22, X21, [X31 + 0x10]
	0x03361A9C STP X20, X19, [X31 + 0x20]
	0x03361AA0 ADRP X21, 0x107B000
	0x03361AA4 LDRB W8, [X21 + 0xE59]
	0x03361AA8 MOV X19, X1
	0x03361AAC MOV X20, X0
	0x03361AB0 TBNZ X8, 0x0, 0x3361AD4
	0x03361AB4 ADRP X0, 0xDC7000
	0x03361AB8 LDR X0, [X0 + 0x328]
	0x03361ABC BL 0x1C16CF4
	0x03361AC0 ADRP X0, 0xDC7000
	0x03361AC4 LDR X0, [X0 + 0x588]
	0x03361AC8 BL 0x1C16CF4
	0x03361ACC MOVZ W8, 0x1
	0x03361AD0 STRB W8, [X21 + 0xE59]
	0x03361AD4 CBNZ X20, 0x3361AE4
	0x03361AD8 MOVZ W0, 0x30
	0x03361ADC MOV X1, X31
	0x03361AE0 BL 0x338F3E0
	0x03361AE4 ADRP X21, 0x1078000
	0x03361AE8 LDRB W8, [X21 + 0x762]
	0x03361AEC CBNZ W8, 0x3361B04
	0x03361AF0 ADRP X0, 0xDB9000
	0x03361AF4 LDR X0, [X0 + 0x290]
	0x03361AF8 BL 0x1C16CF4
	0x03361AFC MOVZ W8, 0x1
	0x03361B00 STRB W8, [X21 + 0x762]
	0x03361B04 ADRP X22, 0xDC7000
	0x03361B08 LDR X22, [X22 + 0x328]
	0x03361B0C CBZ X20, 0x3361B28
	0x03361B10 MOV X0, X20
	0x03361B14 MOV X1, X31
	0x03361B18 BL 0x3225708
	0x03361B1C LDR W20, [X20 + 0x10]
	0x03361B20 MOV X21, X0
	0x03361B24 B 0x3361B2C
	0x03361B28 MOV X21, X31
	0x03361B2C LDR X0, [X22]
	0x03361B30 ADRP X22, 0xDC7000
	0x03361B34 LDR W8, [X0 + 0xE0]
	0x03361B38 LDR X22, [X22 + 0x588]
	0x03361B3C CBNZ W8, 0x3361B44
	0x03361B40 BL 0x1C16DFC
	0x03361B44 MOV X0, X19
	0x03361B48 MOV X1, X31
	0x03361B4C BL 0x3324CFC
	0x03361B50 LDR X8, [X22]
	0x03361B54 MOV X19, X0
	0x03361B58 LDR W9, [X8 + 0xE0]
	0x03361B5C CBNZ W9, 0x3361B68
	0x03361B60 MOV X0, X8
	0x03361B64 BL 0x1C16DFC
	0x03361B68 MOV X0, X21
	0x03361B6C MOV X1, X20
	0x03361B70 MOV X2, X19
	0x03361B74 LDP X20, X19, [X31 + 0x20]
	0x03361B78 LDP X22, X21, [X31 + 0x10]
	0x03361B7C MOV W3, W31
	0x03361B80 LDR X30, [X31], #0x30
	0x03361B84 B 0x33619A4
	0x03361B88 STP X30, X23, [X31 - 0x30]!
	0x03361B8C STP X22, X21, [X31 + 0x10]
	0x03361B90 STP X20, X19, [X31 + 0x20]
	0x03361B94 ADRP X22, 0x107B000
	0x03361B98 ADRP X23, 0xDC7000
	0x03361B9C LDRB W8, [X22 + 0xE5A]
	0x03361BA0 LDR X23, [X23 + 0x328]
	0x03361BA4 MOV W19, W2
	0x03361BA8 MOV X20, X1
	0x03361BAC MOV X21, X0
	0x03361BB0 TBNZ X8, 0x0, 0x3361BE0
	0x03361BB4 ADRP X0, 0xDC7000
	0x03361BB8 LDR X0, [X0 + 0x328]
	0x03361BBC BL 0x1C16CF4
	0x03361BC0 ADRP X0, 0xDC7000
	0x03361BC4 LDR X0, [X0 + 0x588]
	0x03361BC8 BL 0x1C16CF4
	0x03361BCC ADRP X0, 0xDC9000
	0x03361BD0 LDR X0, [X0 + 0xA18]
	0x03361BD4 BL 0x1C16CF4
	0x03361BD8 MOVZ W8, 0x1
	0x03361BDC STRB W8, [X22 + 0xE5A]
	0x03361BE0 LDR X0, [X23]
	0x03361BE4 ADRP X22, 0xDC9000
	0x03361BE8 LDR W8, [X0 + 0xE0]
	0x03361BEC LDR X22, [X22 + 0xA18]
	0x03361BF0 CBNZ W8, 0x3361BF8
	0x03361BF4 BL 0x1C16DFC
	0x03361BF8 LDR X1, [X22]
	0x03361BFC MOV W0, W19
	0x03361C00 MOV X2, X31
	0x03361C04 BL 0x3326EE8
	0x03361C08 CBNZ X21, 0x3361C18
	0x03361C0C MOVZ W0, 0x30
	0x03361C10 MOV X1, X31
	0x03361C14 BL 0x338F3E0
	0x03361C18 ADRP X22, 0x1078000
	0x03361C1C LDRB W8, [X22 + 0x762]
	0x03361C20 CBZ W8, 0x3361C40
	0x03361C24 CBZ X21, 0x3361C58
	0x03361C28 MOV X0, X21
	0x03361C2C MOV X1, X31
	0x03361C30 BL 0x3225708
	0x03361C34 LDR W21, [X21 + 0x10]
	0x03361C38 MOV X22, X0
	0x03361C3C B 0x3361C5C
	0x03361C40 ADRP X0, 0xDB9000
	0x03361C44 LDR X0, [X0 + 0x290]
	0x03361C48 BL 0x1C16CF4
	0x03361C4C MOVZ W8, 0x1
	0x03361C50 STRB W8, [X22 + 0x762]
	0x03361C54 CBNZ X21, 0x3361C28
	0x03361C58 MOV X22, X31
	0x03361C5C LDR X0, [X23]
	0x03361C60 ADRP X23, 0xDC7000
	0x03361C64 LDR W8, [X0 + 0xE0]
	0x03361C68 LDR X23, [X23 + 0x588]
	0x03361C6C CBNZ W8, 0x3361C74
	0x03361C70 BL 0x1C16DFC
	0x03361C74 MOV X0, X20
	0x03361C78 MOV X1, X31
	0x03361C7C BL 0x3324CFC
	0x03361C80 LDR X8, [X23]
	0x03361C84 MOV X20, X0
	0x03361C88 LDR W9, [X8 + 0xE0]
	0x03361C8C CBNZ W9, 0x3361C98
	0x03361C90 MOV X0, X8
	0x03361C94 BL 0x1C16DFC
	0x03361C98 MOV X0, X22
	0x03361C9C MOV X1, X21
	0x03361CA0 MOV X2, X20
	0x03361CA4 MOV W3, W19
	0x03361CA8 LDP X20, X19, [X31 + 0x20]
	0x03361CAC LDP X22, X21, [X31 + 0x10]
	0x03361CB0 LDP X30, X23, [X31], #0x30
	0x03361CB4 B 0x33619A4
	0x03361CB8 STP X30, X25, [X31 - 0x40]!
	0x03361CBC STP X24, X23, [X31 + 0x10]
	0x03361CC0 STP X22, X21, [X31 + 0x20]
	0x03361CC4 STP X20, X19, [X31 + 0x30]
	0x03361CC8 ADRP X23, 0x107B000
	0x03361CCC ADRP X24, 0xDC7000
	0x03361CD0 LDRB W8, [X23 + 0xE5B]
	0x03361CD4 LDR X24, [X24 + 0x328]
	0x03361CD8 MOV W19, W3
	0x03361CDC MOV X20, X2
	0x03361CE0 MOV X21, X1
	0x03361CE4 MOV X22, X0
	0x03361CE8 TBNZ X8, 0x0, 0x3361D18
	0x03361CEC ADRP X0, 0xDC7000
	0x03361CF0 LDR X0, [X0 + 0x328]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X19, 0x107C000
	008 Move W8, [X19+3652]
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xD94000
	015 Move X0, [X0+2544]
	016 Call 0x1C17CF4
	017 Move X0, 0xD95000
	018 Move X0, [X0+1392]
	019 Call 0x1C17CF4
	020 Move X0, 0xDC7000
	021 Move X0, [X0+2616]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X19+3652], W8
	025 Move X21, 0xD94000
	026 Move X21, [X21+2544]
	027 Move [X31+8], W31
	028 Move TEMP, X20
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {40}
	032 Move X0, [X21]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X20
	038 Call DateTime.FromBinaryRaw, X0
	039 Move [X31+24], X0
	040 Move X8, 0x4000
	041 NotImplemented "Instruction MOVK not yet implemented."
	042 Move X22, 0x4000
	043 NotImplemented "Instruction MOVK not yet implemented."
	044 NotImplemented "Instruction MOVK not yet implemented."
	045 And X19, X20, 0x3FFFFFFF
	046 NotImplemented "Instruction MOVK not yet implemented."
	047 NotImplemented "Instruction MOVK not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 NotImplemented "Instruction MOVK not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move [X31+12], W31
	052 Add X0, X31, 0
	053 Move W2, 1
	054 Move X1, X19
	055 Move [X31], X31
	056 Call DateTime..ctor, X0, X1, X2
	057 Move X8, 0xDC7000
	058 Move X8, [X8+2616]
	059 Move [X31+8], W31
	060 Move X0, [X8]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Move X0, X31
	066 Call TimeZoneInfo.get_Local
	067 Move X8, [X31]
	068 Move X1, X0
	069 Add X2, X31, 8
	070 Add X3, X31, 12
	071 Move X0, X8
	072 Move X4, X31
	073 Call TimeZoneInfo.GetUtcOffsetFromUtc, X0, X1, X2, X3
	074 Move X0, [X21]
	075 Move [X31+12], W31
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {81}
	079 Call 0x1C17DFC
	080 Move X0, [X21]
	081 Move X8, 0xDC7000
	082 Move X8, [X8+2616]
	083 Move X9, [X0+184]
	084 Or X19, X20, -1
	085 Move X8, [X8]
	086 Move X21, [X9+16]
	087 Move W10, [X8+224]
	088 Compare W10, 0
	089 JumpIfNotEqual {92}
	090 Move X0, X8
	091 Call 0x1C17DFC
	092 Move W1, 2
	093 Move X0, X21
	094 Move X0, [X21]
	095 Move W8, [X0+224]
	096 Compare W8, 0
	097 JumpIfNotEqual {100}
	098 Call 0x1C17DFC
	099 Move X0, [X21]
	100 Move X8, 0xDC7000
	101 Move X8, [X8+2616]
	102 Move X9, [X0+184]
	103 Move X8, [X8]
	104 Move X20, [X9+24]
	105 Move W10, [X8+224]
	106 Compare W10, 0
	107 JumpIfNotEqual {110}
	108 Move X0, X8
	109 Call 0x1C17DFC
	110 Move W1, 2
	111 Move X0, X20
	112 Move X2, X31
	113 Call TimeZoneInfo.GetLocalUtcOffset, X0, X1
	114 Move X8, 0xD95000
	115 Move X8, [X8+1392]
	116 Move X20, X0
	117 Move X8, [X8]
	118 Move W9, [X8+224]
	119 Compare W9, 0
	120 JumpIfNotEqual {123}
	121 Move X0, X8
	122 Call 0x1C17DFC
	123 Move X9, 0xC000
	124 NotImplemented "Instruction MOVK not yet implemented."
	125 Add X8, X20, X19
	126 NotImplemented "Instruction MOVK not yet implemented."
	127 Add X9, X8, X9
	128 NotImplemented "Instruction CMP not yet implemented."
	129 NotImplemented "Instruction CSEL not yet implemented."
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Move W3, [X31+12]
	132 Add X0, X31, 24
	133 Move [X31+24], X31
	134 Call DateTime..ctor, X0, X1, X2, X3
	135 Move X0, [X31+24]
	136 Move X20, [X31+48]
	137 Move X19, [X31+56]
	138 Move X22, [X31+32]
	139 Move X21, [X31+40]
	140 Move X30, [X31+16]
	141 Add X31, X31, 64
	142 Return X0
	143 Move X0, 0xD9B000
	144 Move X0, [X0+1400]
	145 Call 0x1C17D08
	146 Call 0x1C17F10
	147 Move X19, X0
	148 Move X0, 0xDCA000
	149 Move X0, [X0+2544]
	150 Call 0x1C17D08
	151 Move X20, X0
	152 Move X0, 0xDCA000
	153 Move X0, [X0+2392]
	154 Call 0x1C17D08
	155 Move X2, X0
	156 Move X0, X19
	157 Move X1, X20
	158 Move X3, X31
	159 Call ArgumentException..ctor, X0, X1, X2
	160 Move X0, 0xDCA000
	161 Move X0, [X0+2552]
	162 Call 0x1C17D08
	163 Move X1, X0
	164 Move X0, X19
	165 Call 0x1C17DEC

Method: System.DateTime FromBinaryRaw(System.Int64 dateData)

Disassembly:
	0x03361CF4 BL 0x1C16CF4
	0x03361CF8 ADRP X0, 0xDC7000
	0x03361CFC LDR X0, [X0 + 0x588]
	0x03361D00 BL 0x1C16CF4
	0x03361D04 ADRP X0, 0xDC7000
	0x03361D08 LDR X0, [X0 + 0xAB8]
	0x03361D0C BL 0x1C16CF4
	0x03361D10 MOVZ W8, 0x1
	0x03361D14 STRB W8, [X23 + 0xE5B]
	0x03361D18 LDR X0, [X24]
	0x03361D1C ADRP X23, 0xDC7000
	0x03361D20 LDR W8, [X0 + 0xE0]
	0x03361D24 LDR X23, [X23 + 0xAB8]
	0x03361D28 CBNZ W8, 0x3361D30
	0x03361D2C BL 0x1C16DFC
	0x03361D30 LDR X1, [X23]
	0x03361D34 MOV W0, W19
	0x03361D38 MOV X2, X31
	0x03361D3C BL 0x3326EE8
	0x03361D40 CBZ X22, 0x3361DA4
	0x03361D44 CBZ X21, 0x3361DB4
	0x03361D48 ADRP X23, 0x1078000
	0x03361D4C LDRB W8, [X23 + 0x762]
	0x03361D50 CBZ W8, 0x3361DC4
	0x03361D54 CBZ X22, 0x3361DDC
	0x03361D58 MOV X0, X22
	0x03361D5C MOV X1, X31
	0x03361D60 BL 0x3225708
	0x03361D64 LDRB W8, [X23 + 0x762]
	0x03361D68 LDR W25, [X22 + 0x10]
	0x03361D6C MOV X22, X0
	0x03361D70 CBNZ W8, 0x3361D88
	0x03361D74 ADRP X0, 0xDB9000

ISIL:
	001 Move X9, 0x4000
	002 NotImplemented "Instruction MOVK not yet implemented."
	003 NotImplemented "Instruction MOVK not yet implemented."
	004 And X8, X0, 0x3FFFFFFF
	005 NotImplemented "Instruction MOVK not yet implemented."
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Return X0
	008 Move [X31-32], X30
	009 Move [X31+16], X20
	010 Move [X31+24], X19
	011 Move X0, 0xD9B000
	012 Move X0, [X0+1400]
	013 Call 0x1C17D08
	014 Call 0x1C17F10
	015 Move X19, X0
	016 Move X0, 0xDCA000
	017 Move X0, [X0+2544]
	018 Call 0x1C17D08
	019 Move X20, X0
	020 Move X0, 0xDCA000
	021 Move X0, [X0+2392]
	022 Call 0x1C17D08
	023 Move X2, X0
	024 Move X0, X19
	025 Move X1, X20
	026 Move X3, X31
	027 Call ArgumentException..ctor, X0, X1, X2
	028 Move X0, 0xDCA000
	029 Move X0, [X0+2560]
	030 Call 0x1C17D08
	031 Move X1, X0
	032 Move X0, X19
	033 Call 0x1C17DEC

Method: System.Void System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x03361D78 LDR X0, [X0 + 0x290]
	0x03361D7C BL 0x1C16CF4
	0x03361D80 MOVZ W8, 0x1
	0x03361D84 STRB W8, [X23 + 0x762]
	0x03361D88 CBZ X21, 0x3361DE4
	0x03361D8C MOV X0, X21
	0x03361D90 MOV X1, X31
	0x03361D94 BL 0x3225708
	0x03361D98 LDR W21, [X21 + 0x10]
	0x03361D9C MOV X23, X0
	0x03361DA0 B 0x3361DE8
	0x03361DA4 MOVZ W0, 0x30
	0x03361DA8 MOV X1, X31
	0x03361DAC BL 0x338F3E0
	0x03361DB0 CBNZ X21, 0x3361D48
	0x03361DB4 MOVZ W0, 0x32
	0x03361DB8 MOV X1, X31
	0x03361DBC BL 0x338F3E0
	0x03361DC0 B 0x3361D48
	0x03361DC4 ADRP X0, 0xDB9000
	0x03361DC8 LDR X0, [X0 + 0x290]
	0x03361DCC BL 0x1C16CF4
	0x03361DD0 MOVZ W8, 0x1
	0x03361DD4 STRB W8, [X23 + 0x762]
	0x03361DD8 CBNZ X22, 0x3361D58
	0x03361DDC MOV W25, W31
	0x03361DE0 CBNZ X21, 0x3361D8C
	0x03361DE4 MOV X23, X31
	0x03361DE8 LDR X0, [X24]
	0x03361DEC ADRP X24, 0xDC7000
	0x03361DF0 LDR W8, [X0 + 0xE0]
	0x03361DF4 LDR X24, [X24 + 0x588]
	0x03361DF8 CBNZ W8, 0x3361E00
	0x03361DFC BL 0x1C16DFC
	0x03361E00 MOV X0, X20
	0x03361E04 MOV X1, X31
	0x03361E08 BL 0x3324CFC
	0x03361E0C LDR X8, [X24]
	0x03361E10 MOV X20, X0
	0x03361E14 LDR W9, [X8 + 0xE0]
	0x03361E18 CBNZ W9, 0x3361E24
	0x03361E1C MOV X0, X8
	0x03361E20 BL 0x1C16DFC
	0x03361E24 MOV X0, X22
	0x03361E28 MOV X2, X23
	0x03361E2C MOV X3, X21
	0x03361E30 MOV X4, X20
	0x03361E34 MOV W5, W19
	0x03361E38 LDP X20, X19, [X31 + 0x30]
	0x03361E3C LDP X22, X21, [X31 + 0x20]
	0x03361E40 LDP X24, X23, [X31 + 0x10]
	0x03361E44 MOV W1, W25
	0x03361E48 LDP X30, X25, [X31], #0x40
	0x03361E4C B 0x3361E50
	0x03361E50 SUB X31, X31, 0xD0
	0x03361E54 STR X30, [X31 + 0x80]
	0x03361E58 STP X26, X25, [X31 + 0x90]
	0x03361E5C STP X24, X23, [X31 + 0xA0]
	0x03361E60 STP X22, X21, [X31 + 0xB0]
	0x03361E64 STP X20, X19, [X31 + 0xC0]
	0x03361E68 ADRP X26, 0x107B000
	0x03361E6C ADRP X25, 0xDC7000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x107C000
	007 Move W8, [X21+3653]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xD94000
	015 Move X0, [X0+2544]
	016 Call 0x1C17CF4
	017 Move X0, 0xDCA000
	018 Move X0, [X0+2392]
	019 Call 0x1C17CF4
	020 Move X0, 0xDCA000
	021 Move X0, [X0+2288]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3653], W8
	025 Compare X19, 0
	026 JumpIfEqual {55}
	027 Move X8, 0xD94000
	028 Move X8, [X8+2544]
	029 Move X22, 0xDCA000
	030 Move X21, 0xDCA000
	031 Move X0, [X8]
	032 Move W8, [X0+224]
	033 Move X22, [X22+2288]
	034 Move X21, [X21+2392]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X8, [X20]
	039 Move X1, [X22]
	040 Move X0, X19
	041 Move X3, X31
	042 And X2, X8, 0x3FFFFFFF
	043 Call SerializationInfo.AddValue, X0, X1, X2
	044 Move X2, [X20]
	045 Move X1, [X21]
	046 Move X0, X19
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move X3, X31
	052 Move X30, [X31+48]
	053 Call SerializationInfo.AddValue, X0, X1, X2
	054 Return 
	055 Move X0, 0xD98000
	056 Move X0, [X0+1320]
	057 Call 0x1C17D08
	058 Call 0x1C17F10
	059 Move X19, X0
	060 Move X0, 0xDBD000
	061 Move X0, [X0+728]
	062 Call 0x1C17D08
	063 Move X1, X0
	064 Move X0, X19
	065 Move X2, X31
	066 Call ArgumentNullException..ctor, X0, X1
	067 Move X0, 0xDCA000
	068 Move X0, [X0+2568]
	069 Call 0x1C17D08
	070 Move X1, X0
	071 Move X0, X19
	072 Call 0x1C17DEC

Method: System.DateTime SpecifyKind(System.DateTime value, System.DateTimeKind kind)

Disassembly:
	0x03361E70 LDRB W8, [X26 + 0xEC4]
	0x03361E74 LDR X25, [X25 + 0x588]
	0x03361E78 MOV W19, W5
	0x03361E7C MOV X20, X4
	0x03361E80 MOV X21, X3
	0x03361E84 MOV X22, X2
	0x03361E88 MOV X23, X1
	0x03361E8C MOV X24, X0
	0x03361E90 TBNZ X8, 0x0, 0x3361EA8
	0x03361E94 ADRP X0, 0xDC7000
	0x03361E98 LDR X0, [X0 + 0x588]
	0x03361E9C BL 0x1C16CF4
	0x03361EA0 MOVZ W8, 0x1
	0x03361EA4 STRB W8, [X26 + 0xEC4]
	0x03361EA8 MOVI V0.2D, 0x0
	0x03361EAC ADD X0, X31, 0x0
	0x03361EB0 MOV X1, X24
	0x03361EB4 MOV X2, X23
	0x03361EB8 MOV X3, X31
	0x03361EBC STP V0, V0, [X31 + 0x60]
	0x03361EC0 STP V0, V0, [X31 + 0x40]
	0x03361EC4 STP V0, V0, [X31 + 0x20]
	0x03361EC8 STP V0, V0, [X31]
	0x03361ECC BL 0x33766A0
	0x03361ED0 LDR X0, [X25]
	0x03361ED4 LDR W8, [X0 + 0xE0]
	0x03361ED8 CBNZ W8, 0x3361EE0
	0x03361EDC BL 0x1C16DFC
	0x03361EE0 ADD X6, X31, 0x0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x107C000
	007 Move X22, 0xD94000
	008 Move W8, [X21+3654]
	009 Move X22, [X22+2544]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xD94000
	017 Move X0, [X0+2544]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3654], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 And X1, X20, 0x3FFFFFFF
	027 Add X0, X31, 8
	028 Move W2, W19
	029 Move [X31+8], X31
	030 Call DateTime..ctor, X0, X1, X2
	031 Move X0, [X31+8]
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X30, [X31+48]
	037 Return X0

Method: System.DateTime get_Date()

Disassembly:
	0x03361EE4 MOV X0, X24
	0x03361EE8 MOV X1, X23
	0x03361EEC MOV X2, X22
	0x03361EF0 MOV X3, X21
	0x03361EF4 MOV X4, X20
	0x03361EF8 MOV W5, W19
	0x03361EFC BL 0x336AC38
	0x03361F00 TBZ X0, 0x0, 0x3361F24
	0x03361F04 LDR X0, [X31 + 0x38]
	0x03361F08 LDP X20, X19, [X31 + 0xC0]
	0x03361F0C LDP X22, X21, [X31 + 0xB0]
	0x03361F10 LDP X24, X23, [X31 + 0xA0]
	0x03361F14 LDP X26, X25, [X31 + 0x90]
	0x03361F18 LDR X30, [X31 + 0x80]
	0x03361F1C ADD X31, X31, 0xD0
	0x03361F20 RET
	0x03361F24 ADRP X0, 0xDC7000
	0x03361F28 LDR X0, [X0 + 0x588]
	0x03361F2C BL 0x1C16D08
	0x03361F30 BL 0x19903D0
	0x03361F34 ADD X0, X31, 0x0
	0x03361F38 BL 0x336AD3C
	0x03361F3C MOV X19, X0
	0x03361F40 ADRP X0, 0xDC9000
	0x03361F44 LDR X0, [X0 + 0xA20]
	0x03361F48 BL 0x1C16D08
	0x03361F4C MOV X1, X0
	0x03361F50 MOV X0, X19
	0x03361F54 BL 0x1C16DEC
	0x03361F58 STR X30, [X31 - 0x30]!
	0x03361F5C STP X22, X21, [X31 + 0x10]
	0x03361F60 STP X20, X19, [X31 + 0x20]
	0x03361F64 ADRP X21, 0x107B000
	0x03361F68 ADRP X22, 0xD93000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x107C000
	006 Move X21, 0xD94000
	007 Move W8, [X20+3655]
	008 Move X21, [X21+2544]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD94000
	015 Move X0, [X0+2544]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3655], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X8, [X19]
	025 Move X9, 0x81E3
	026 NotImplemented "Instruction MOVK not yet implemented."
	027 NotImplemented "Instruction MOVK not yet implemented."
	028 NotImplemented "Instruction MOVK not yet implemented."
	029 And X10, X8, 0x3FFFFFFF
	030 NotImplemented "Instruction INVALID not yet implemented."
	031 Move X10, 0xC000
	032 NotImplemented "Instruction MOVK not yet implemented."
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X9, X9
	036 ShiftRight X9, 39
	037 And X9, X9, 0x7FFFFFFF
	038 NotImplemented "Instruction MOVK not yet implemented."
	039 And X8, X8, -1
	040 Multiply X9, X9, X10
	041 Or X0, X9, X8
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Return X0

Method: System.Int32 GetDatePart(System.Int32 part)

Disassembly:
	0x03361F6C LDRB W8, [X21 + 0xE5C]
	0x03361F70 LDR X22, [X22 + 0x9F0]
	0x03361F74 MOV X19, X1
	0x03361F78 MOV X20, X0
	0x03361F7C TBNZ X8, 0x0, 0x3361F94
	0x03361F80 ADRP X0, 0xD93000
	0x03361F84 LDR X0, [X0 + 0x9F0]
	0x03361F88 BL 0x1C16CF4
	0x03361F8C MOVZ W8, 0x1
	0x03361F90 STRB W8, [X21 + 0xE5C]
	0x03361F94 LDR X0, [X22]
	0x03361F98 LDR W8, [X0 + 0xE0]
	0x03361F9C CBNZ W8, 0x3361FA4
	0x03361FA0 BL 0x1C16DFC
	0x03361FA4 LDR X8, [X20]
	0x03361FA8 AND X9, X19, 0x3FFFFFFF
	0x03361FAC LDP X20, X19, [X31 + 0x20]
	0x03361FB0 LDP X22, X21, [X31 + 0x10]
	0x03361FB4 AND X8, X8, 0x3FFFFFFF
	0x03361FB8 SUB X0, X8, X9
	0x03361FBC LDR X30, [X31], #0x30
	0x03361FC0 RET
	0x03361FC4 STP X30, X21, [X31 - 0x20]!
	0x03361FC8 STP X20, X19, [X31 + 0x10]
	0x03361FCC ADRP X20, 0x107B000
	0x03361FD0 ADRP X21, 0xD93000
	0x03361FD4 LDRB W8, [X20 + 0xE5D]
	0x03361FD8 LDR X21, [X21 + 0x9F0]
	0x03361FDC MOV X19, X0
	0x03361FE0 TBNZ X8, 0x0, 0x3361FF8
	0x03361FE4 ADRP X0, 0xD93000
	0x03361FE8 LDR X0, [X0 + 0x9F0]
	0x03361FEC BL 0x1C16CF4
	0x03361FF0 MOVZ W8, 0x1
	0x03361FF4 STRB W8, [X20 + 0xE5D]
	0x03361FF8 LDR X0, [X21]
	0x03361FFC LDR W8, [X0 + 0xE0]
	0x03362000 CBNZ W8, 0x3362008
	0x03362004 BL 0x1C16DFC
	0x03362008 MOV X0, X19
	0x0336200C LDP X20, X19, [X31 + 0x10]
	0x03362010 MOV W1, W31
	0x03362014 LDP X30, X21, [X31], #0x20
	0x03362018 B 0x336201C
	0x0336201C SUB X31, X31, 0x40
	0x03362020 STR X30, [X31 + 0x10]
	0x03362024 STP X22, X21, [X31 + 0x20]
	0x03362028 STP X20, X19, [X31 + 0x30]
	0x0336202C ADRP X21, 0x107A000
	0x03362030 ADRP X22, 0xD92000
	0x03362034 LDRB W8, [X21 + 0xE5E]
	0x03362038 LDR X22, [X22 + 0x9F0]
	0x0336203C MOV W19, W1
	0x03362040 MOV X20, X0
	0x03362044 TBNZ X8, 0x0, 0x3362074
	0x03362048 ADRP X0, 0xD92000
	0x0336204C LDR X0, [X0 + 0x9F0]
	0x03362050 BL 0x1C16CF4
	0x03362054 ADRP X0, 0xD93000
	0x03362058 LDR X0, [X0 + 0x570]
	0x0336205C BL 0x1C16CF4
	0x03362060 ADRP X0, 0xDC5000
	0x03362064 LDR X0, [X0 + 0xA38]
	0x03362068 BL 0x1C16CF4
	0x0336206C MOVZ W8, 0x1
	0x03362070 STRB W8, [X21 + 0xE5E]
	0x03362074 LDR X0, [X22]
	0x03362078 LDR W8, [X0 + 0xE0]
	0x0336207C CBNZ W8, 0x3362084
	0x03362080 BL 0x1C16DFC
	0x03362084 MOV X0, X20
	0x03362088 BL 0x336139C
	0x0336208C CMP W0, 0x2
	0x03362090 B.NE 0x336209C
	0x03362094 LDR X0, [X20]
	0x03362098 B 0x3362170
	0x0336209C ADRP X8, 0xDC5000
	0x033620A0 LDR X8, [X8 + 0xA38]
	0x033620A4 STRB W31, [X31 + 0xC]
	0x033620A8 STRB W31, [X31 + 0x8]
	0x033620AC LDR X21, [X20]
	0x033620B0 LDR X0, [X8]
	0x033620B4 LDR W8, [X0 + 0xE0]
	0x033620B8 CBNZ W8, 0x33620C0
	0x033620BC BL 0x1C16DFC
	0x033620C0 MOV X0, X31
	0x033620C4 BL 0x330A840
	0x033620C8 MOV X1, X0
	0x033620CC ADD X2, X31, 0xC
	0x033620D0 ADD X3, X31, 0x8
	0x033620D4 MOV X0, X21
	0x033620D8 MOV X4, X31
	0x033620DC BL 0x330A8C0
	0x033620E0 ADRP X8, 0xD93000
	0x033620E4 LDR X8, [X8 + 0x570]
	0x033620E8 MOV X21, X0
	0x033620EC LDR X8, [X8]
	0x033620F0 LDR W9, [X8 + 0xE0]
	0x033620F4 CBNZ W9, 0x3362100
	0x033620F8 MOV X0, X8
	0x033620FC BL 0x1C16DFC
	0x03362100 LDR X0, [X22]
	0x03362104 LDR W8, [X0 + 0xE0]
	0x03362108 CBNZ W8, 0x3362110
	0x0336210C BL 0x1C16DFC
	0x03362110 MOV X0, X20
	0x03362114 BL 0x3361708
	0x03362118 MOVZ X8, 0x4000
	0x0336211C MOVK X8, 0xF4370000
	0x03362120 MOVK X8, 0x2875
	0x03362124 ADD X1, X0, X21
	0x03362128 MOVK X8, 0x2BCA0000
	0x0336212C CMP X1, X8
	0x03362130 B.GE 0x3362150
	0x03362134 TBNZ X1, 0x0, 0x3362168
	0x03362138 LDRB W3, [X31 + 0x8]
	0x0336213C ADD X0, X31, 0x18
	0x03362140 STR X31, [X31 + 0x18]
	0x03362144 BL 0x335F024
	0x03362148 LDR X0, [X31 + 0x18]
	0x0336214C B 0x3362174
	0x03362150 TBNZ X19, 0x0, 0x3362188
	0x03362154 MOVZ X0, 0x3FFF
	0x03362158 MOVK X0, 0xF4370000
	0x0336215C MOVK X0, 0x2875
	0x03362160 MOVK X0, 0xABCA0000
	0x03362164 B 0x3362170

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x107C000
	007 Move X21, 0xD94000
	008 Move W8, [X22+3656]
	009 Move X21, [X21+2544]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xD94000
	017 Move X0, [X0+2544]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3656], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X8, [X20]
	027 Move X9, 0x81E3
	028 NotImplemented "Instruction MOVK not yet implemented."
	029 NotImplemented "Instruction MOVK not yet implemented."
	030 NotImplemented "Instruction MOVK not yet implemented."
	031 And X8, X8, 0x3FFFFFFF
	032 Move W10, 1725
	033 NotImplemented "Instruction INVALID not yet implemented."
	034 NotImplemented "Instruction MOVK not yet implemented."
	035 Move X8, X8
	036 ShiftRight X8, 39
	037 And X8, X8, 0x7FFFFFFF
	038 Move W11, 0xC54F
	039 Multiply X9, X8, X10
	040 NotImplemented "Instruction MOVK not yet implemented."
	041 Move X10, X9
	042 ShiftRight X10, 47
	043 And X10, X10, 0x7FFFFFFF
	044 NotImplemented "Instruction MADD not yet implemented."
	045 Move W12, 0x81FB
	046 Add W8, W9, W11
	047 NotImplemented "Instruction MOVK not yet implemented."
	048 Move W13, 0x8EAC
	049 Add W8, W8, 1
	050 NotImplemented "Instruction CMP not yet implemented."
	051 NotImplemented "Instruction SMADDL not yet implemented."
	052 Move X8, X8
	053 ShiftRight X8, 32
	054 And X8, X8, 0x7FFFFFFF
	055 Add W8, W8, W9
	056 NotImplemented "Instruction SBFM not yet implemented."
	057 Move W14, 3
	058 Add W8, W12, W8
	059 Move TEMP, 0x8EAB
	060 Not TEMP
	061 Move W15, TEMP
	062 Move W16, 0xB073
	063 NotImplemented "Instruction CSEL not yet implemented."
	064 NotImplemented "Instruction MOVK not yet implemented."
	065 NotImplemented "Instruction MADD not yet implemented."
	066 NotImplemented "Instruction SMADDL not yet implemented."
	067 Move X13, X12
	068 ShiftRight X13, 32
	069 And X13, X13, 0x7FFFFFFF
	070 Move X12, X12
	071 ShiftRight X12, 63
	072 And X12, X12, 0x7FFFFFFF
	073 Move TEMP, 1460
	074 Not TEMP
	075 Move W11, TEMP
	076 Move W17, 0xF9B1
	077 Add W12, W12, W13
	078 NotImplemented "Instruction MOVK not yet implemented."
	079 NotImplemented "Instruction MADD not yet implemented."
	080 NotImplemented "Instruction SMADDL not yet implemented."
	081 Move X11, X11
	082 ShiftRight X11, 32
	083 And X11, X11, 0x7FFFFFFF
	084 Add W11, W11, W13
	085 NotImplemented "Instruction SBFM not yet implemented."
	086 Add W11, W15, W11
	087 Subtract W15, W13, 1460
	088 NotImplemented "Instruction CMP not yet implemented."
	089 NotImplemented "Instruction CSEL not yet implemented."
	090 Compare W19, 0
	091 JumpIfEqual {98}
	092 Move TEMP, 364
	093 Not TEMP
	094 Move W10, TEMP
	095 NotImplemented "Instruction CMP not yet implemented."
	096 NotImplemented "Instruction MADD not yet implemented."
	097 Add W0, W20, 1
	098 Move W9, 400
	099 Multiply W9, W10, W9
	100 Move W10, 100
	101 Or W9, W9, 1
	102 NotImplemented "Instruction MADD not yet implemented."
	103 Add W8, W8, W12
	104 Add W0, W8, W11
	105 Move X0, [X21]
	106 Move TEMP, 0x88F7
	107 Not TEMP
	108 Move W10, TEMP
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Add W9, W9, W10
	111 NotImplemented "Instruction CSET not yet implemented."
	112 NotImplemented "Instruction CMP not yet implemented."
	113 NotImplemented "Instruction CSET not yet implemented."
	114 Move W10, [X0+224]
	115 NotImplemented "Instruction CMP not yet implemented."
	116 NotImplemented "Instruction CSET not yet implemented."
	117 And W8, W8, W9
	118 Or W22, W8, W11
	119 Compare W10, 0
	120 JumpIfNotEqual {123}
	121 Call 0x1C17DFC
	122 Move X0, [X21]
	123 Move X8, [X0+184]
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Add X9, X8, 8
	126 NotImplemented "Instruction CSEL not yet implemented."
	127 Move X8, [X8]
	128 Compare X8, 0
	129 JumpIfEqual {151}
	130 Move X9, [X8+24]
	131 NotImplemented "Instruction SBFM not yet implemented."
	132 Add W0, W0, 1
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Add X10, X8, W0
	135 Move W10, [X10+32]
	136 NotImplemented "Instruction CMP not yet implemented."
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Subtract W10, W0, 1
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Add X8, X8, W10
	141 Move W8, [X8+32]
	142 Subtract W8, W20, W8
	143 Add W0, W8, 1
	144 Move X20, [X31+32]
	145 Move X19, [X31+40]
	146 Move X22, [X31+16]
	147 Move X21, [X31+24]
	148 Move X30, [X31+48]
	149 Return X0
	150 Call 0x1C17F28
	151 Call 0x1C17F20

Method: System.Void GetDatePart(out System.Int32 year, out System.Int32 month, out System.Int32 day)

Disassembly:
	0x03361278 ADRP X0, 0xD93000
	0x0336127C LDR X0, [X0 + 0x9F0]
	0x03361280 BL 0x1C16CF4
	0x03361284 MOVZ W8, 0x1
	0x03361288 STRB W8, [X20 + 0xE4C]
	0x0336128C LDR X0, [X21]
	0x03361290 LDR W8, [X0 + 0xE0]
	0x03361294 CBNZ W8, 0x336129C
	0x03361298 BL 0x1C16DFC
	0x0336129C LDP W9, W8, [X19]
	0x033612A0 LDP X20, X19, [X31 + 0x10]
	0x033612A4 AND W8, W8, 0x3FFFFFFF
	0x033612A8 EOR W0, W8, W9, 0x0
	0x033612AC LDP X30, X21, [X31], #0x20
	0x033612B0 RET
	0x033612B4 STP X30, X21, [X31 - 0x20]!
	0x033612B8 STP X20, X19, [X31 + 0x10]
	0x033612BC ADRP X20, 0x107B000
	0x033612C0 ADRP X21, 0xD93000
	0x033612C4 LDRB W8, [X20 + 0xE4D]
	0x033612C8 LDR X21, [X21 + 0x9F0]
	0x033612CC MOV X19, X0
	0x033612D0 TBNZ X8, 0x0, 0x33612E8
	0x033612D4 ADRP X0, 0xD93000
	0x033612D8 LDR X0, [X0 + 0x9F0]
	0x033612DC BL 0x1C16CF4
	0x033612E0 MOVZ W8, 0x1
	0x033612E4 STRB W8, [X20 + 0xE4D]
	0x033612E8 LDR X0, [X21]
	0x033612EC LDR W8, [X0 + 0xE0]
	0x033612F0 CBNZ W8, 0x33612F8
	0x033612F4 BL 0x1C16DFC
	0x033612F8 LDR X8, [X19]
	0x033612FC MOVZ X9, 0x10B5
	0x03361300 MOVK X9, 0x34C20000
	0x03361304 MOVK X9, 0x7FAB
	0x03361308 MOVK X9, 0x3D150000
	0x0336130C AND X8, X8, 0x3FFFFFFF
	0x03361310 MOVZ W10, 0xAAAB
	0x00000000 INVALID
	0x03361318 MOVK W10, 0xAAAA0000
	0x0336131C UBFM X8, X8, 0x21, 0x3F
	0x03361320 LDP X20, X19, [X31 + 0x10]
	0x03361324 MUL X9, X8, X10
	0x03361328 UBFM X9, X9, 0x24, 0x3F
	0x0336132C MOVZ W10, 0x18
	0x03361330 MSUB W0, W9, W10, W8
	0x03361334 LDP X30, X21, [X31], #0x20
	0x03361338 RET
	0x0336133C STP X30, X21, [X31 - 0x20]!
	0x03361340 STP X20, X19, [X31 + 0x10]
	0x03361344 ADRP X20, 0x107B000
	0x03361348 ADRP X21, 0xD93000
	0x0336134C LDRB W8, [X20 + 0xE4E]
	0x03361350 LDR X21, [X21 + 0x9F0]
	0x03361354 MOV X19, X0
	0x03361358 TBNZ X8, 0x0, 0x3361370
	0x0336135C ADRP X0, 0xD93000
	0x03361360 LDR X0, [X0 + 0x9F0]
	0x03361364 BL 0x1C16CF4
	0x03361368 MOVZ W8, 0x1
	0x0336136C STRB W8, [X20 + 0xE4E]
	0x03361370 LDR X0, [X21]
	0x03361374 LDR W8, [X0 + 0xE0]
	0x03361378 CBNZ W8, 0x3361380
	0x0336137C BL 0x1C16DFC
	0x03361380 LDR X8, [X19]
	0x03361384 LDP X20, X19, [X31 + 0x10]
	0x03361388 UBFM X8, X8, 0x3E, 0x3F
	0x0336138C CMP X8, 0x2
	0x03361390 CSET W0, HI
	0x03361394 LDP X30, X21, [X31], #0x20
	0x03361398 RET
	0x0336139C STP X30, X21, [X31 - 0x20]!
	0x033613A0 STP X20, X19, [X31 + 0x10]
	0x033613A4 ADRP X20, 0x107B000
	0x033613A8 ADRP X21, 0xD93000
	0x033613AC LDRB W8, [X20 + 0xE4F]
	0x033613B0 LDR X21, [X21 + 0x9F0]
	0x033613B4 MOV X19, X0
	0x033613B8 TBNZ X8, 0x0, 0x33613D0
	0x033613BC ADRP X0, 0xD93000
	0x033613C0 LDR X0, [X0 + 0x9F0]
	0x033613C4 BL 0x1C16CF4
	0x033613C8 MOVZ W8, 0x1
	0x033613CC STRB W8, [X20 + 0xE4F]
	0x033613D0 LDR X0, [X21]
	0x033613D4 LDR W8, [X0 + 0xE0]
	0x033613D8 CBNZ W8, 0x33613E0
	0x033613DC BL 0x1C16DFC
	0x033613E0 LDR X8, [X19]
	0x033613E4 ANDS X8, X8, 0xFFFFFFFFFFFFFFFF
	0x033613E8 B.EQ 0x3361400
	0x033613EC MOVZ X9, 0x40000000
	0x033613F0 CMP X8, X9
	0x033613F4 MOVZ W8, 0x1
	0x033613F8 CINC W0, W8, NE
	0x033613FC B 0x3361404
	0x03361400 MOV W0, W31
	0x03361404 LDP X20, X19, [X31 + 0x10]
	0x03361408 LDP X30, X21, [X31], #0x20
	0x0336140C RET
	0x03361410 STP X30, X21, [X31 - 0x20]!
	0x03361414 STP X20, X19, [X31 + 0x10]
	0x03361418 ADRP X20, 0x107B000
	0x0336141C ADRP X21, 0xD93000
	0x03361420 LDRB W8, [X20 + 0xE50]
	0x03361424 LDR X21, [X21 + 0x9F0]
	0x03361428 MOV X19, X0
	0x0336142C TBNZ X8, 0x0, 0x3361444
	0x03361430 ADRP X0, 0xD93000
	0x03361434 LDR X0, [X0 + 0x9F0]
	0x03361438 BL 0x1C16CF4
	0x0336143C MOVZ W8, 0x1
	0x03361440 STRB W8, [X20 + 0xE50]
	0x03361444 LDR X0, [X21]
	0x03361448 LDR W8, [X0 + 0xE0]
	0x0336144C CBNZ W8, 0x3361454
	0x03361450 BL 0x1C16DFC
	0x03361454 LDR X8, [X19]
	0x03361458 MOVZ X9, 0x594B
	0x0336145C MOVK X9, 0x38860000
	0x03361460 MOVK X9, 0xC5D6
	0x03361464 MOVZ X10, 0xF7CF
	0x03361468 MOVK X9, 0x346D0000
	0x0336146C MOVK X10, 0xE3530000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x107C000
	009 Move X23, 0xD94000
	010 Move W8, [X24+3657]
	011 Move X23, [X23+2544]
	012 Move X19, X3
	013 Move X20, X2
	014 Move X21, X1
	015 Move X22, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xD94000
	021 Move X0, [X0+2544]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+3657], W8
	025 Move X0, [X23]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1C17DFC
	030 Move X0, [X23]
	031 Move X8, [X22]
	032 Move X9, 0x81E3
	033 NotImplemented "Instruction MOVK not yet implemented."
	034 NotImplemented "Instruction MOVK not yet implemented."
	035 NotImplemented "Instruction MOVK not yet implemented."
	036 And X8, X8, 0x3FFFFFFF
	037 Move W10, 1725
	038 NotImplemented "Instruction INVALID not yet implemented."
	039 NotImplemented "Instruction MOVK not yet implemented."
	040 Move X8, X8
	041 ShiftRight X8, 39
	042 And X8, X8, 0x7FFFFFFF
	043 Move W11, 0xC54F
	044 Multiply X10, X8, X10
	045 NotImplemented "Instruction MOVK not yet implemented."
	046 Move W12, 0x81FB
	047 Move X10, X10
	048 ShiftRight X10, 47
	049 And X10, X10, 0x7FFFFFFF
	050 NotImplemented "Instruction MOVK not yet implemented."
	051 NotImplemented "Instruction MADD not yet implemented."
	052 Add W11, W8, W11
	053 NotImplemented "Instruction SMADDL not yet implemented."
	054 Move W13, 0x8EAC
	055 Add W11, W11, 1
	056 Move X12, X12
	057 ShiftRight X12, 32
	058 And X12, X12, 0x7FFFFFFF
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move W13, 400
	061 Add W12, W12, W8
	062 Multiply W10, W10, W13
	063 NotImplemented "Instruction SBFM not yet implemented."
	064 Move W14, 3
	065 Add W12, W13, W12
	066 Move TEMP, 0x8EAB
	067 Not TEMP
	068 Move W15, TEMP
	069 Move W9, 0xB073
	070 NotImplemented "Instruction CSEL not yet implemented."
	071 NotImplemented "Instruction MOVK not yet implemented."
	072 NotImplemented "Instruction MADD not yet implemented."
	073 Move W15, 100
	074 Or W10, W10, 1
	075 NotImplemented "Instruction SMADDL not yet implemented."
	076 NotImplemented "Instruction MADD not yet implemented."
	077 Move X15, X9
	078 ShiftRight X15, 32
	079 And X15, X15, 0x7FFFFFFF
	080 Move X9, X9
	081 ShiftRight X9, 63
	082 And X9, X9, 0x7FFFFFFF
	083 Move TEMP, 1460
	084 Not TEMP
	085 Move W11, TEMP
	086 Move W13, 0xF9B1
	087 Add W9, W9, W15
	088 NotImplemented "Instruction MOVK not yet implemented."
	089 Move TEMP, 0x88F7
	090 Not TEMP
	091 Move W15, TEMP
	092 NotImplemented "Instruction MADD not yet implemented."
	093 Add W15, W8, W15
	094 Add W8, W10, W9
	095 NotImplemented "Instruction SMADDL not yet implemented."
	096 Move X9, X9
	097 ShiftRight X9, 32
	098 And X9, X9, 0x7FFFFFFF
	099 Subtract W10, W22, 1460
	100 Add W9, W9, W22
	101 NotImplemented "Instruction CMP not yet implemented."
	102 NotImplemented "Instruction SBFM not yet implemented."
	103 Add W9, W10, W9
	104 NotImplemented "Instruction CSEL not yet implemented."
	105 Add W8, W8, W24
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move [X21], W8
	108 NotImplemented "Instruction CSET not yet implemented."
	109 NotImplemented "Instruction CMP not yet implemented."
	110 NotImplemented "Instruction CSET not yet implemented."
	111 Move W10, [X0+224]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 NotImplemented "Instruction CSET not yet implemented."
	114 And W9, W11, W9
	115 Or W21, W9, W8
	116 Compare W10, 0
	117 JumpIfNotEqual {120}
	118 Call 0x1C17DFC
	119 Move X0, [X23]
	120 Move X8, [X0+184]
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Add X9, X8, 8
	123 NotImplemented "Instruction CSEL not yet implemented."
	124 Move X8, [X8]
	125 Compare X8, 0
	126 JumpIfEqual {155}
	127 Move X10, [X8+24]
	128 Move TEMP, 364
	129 Not TEMP
	130 Move W9, TEMP
	131 NotImplemented "Instruction MADD not yet implemented."
	132 NotImplemented "Instruction SBFM not yet implemented."
	133 Add W11, W11, 1
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Add X12, X8, W11
	136 Move W12, [X12+32]
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Subtract W12, W11, 1
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move [X20], W11
	141 Add X8, X8, W12
	142 Move W8, [X8+32]
	143 Move X22, [X31+32]
	144 Move X21, [X31+40]
	145 Move X24, [X31+16]
	146 Move X23, [X31+24]
	147 Subtract W8, W9, W8
	148 Add W8, W8, 1
	149 Move [X19], W8
	150 Move X20, [X31+48]
	151 Move X19, [X31+56]
	152 Move X30, [X31+64]
	153 Return 
	154 Call 0x1C17F28
	155 Call 0x1C17F20

Method: System.Int32 get_Day()

Disassembly:
	0x03362168 TBNZ X19, 0x0, 0x3362188
	0x0336216C MOVZ X0, 0x80000000
	0x03362170 STR X0, [X31 + 0x18]
	0x03362174 LDP X20, X19, [X31 + 0x30]
	0x03362178 LDP X22, X21, [X31 + 0x20]
	0x0336217C LDR X30, [X31 + 0x10]
	0x03362180 ADD X31, X31, 0x40
	0x03362184 RET
	0x03362188 ADRP X0, 0xD99000
	0x0336218C LDR X0, [X0 + 0x578]
	0x03362190 BL 0x1C16D08
	0x03362194 BL 0x1C16F10
	0x03362198 MOV X19, X0
	0x0336219C ADRP X0, 0xDBB000
	0x033621A0 LDR X0, [X0 + 0xEE0]
	0x033621A4 BL 0x1C16D08
	0x033621A8 MOV X1, X0
	0x033621AC MOV X0, X19
	0x033621B0 MOV X2, X31
	0x033621B4 BL 0x3314A68
	0x033621B8 ADRP X0, 0xDC8000
	0x033621BC LDR X0, [X0 + 0xA28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x107B000
	006 Move X21, 0xD93000
	007 Move W8, [X20+3658]
	008 Move X21, [X21+2544]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD93000
	015 Move X0, [X0+2544]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3658], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move W1, 3
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call DateTime.GetDatePart, X0, X1
	031 Return X0

Method: System.DayOfWeek get_DayOfWeek()

Disassembly:
	0x033621C0 BL 0x1C16D08
	0x033621C4 MOV X1, X0
	0x033621C8 MOV X0, X19
	0x033621CC BL 0x1C16DEC
	0x033621D0 STP X30, X21, [X31 - 0x20]!
	0x033621D4 STP X20, X19, [X31 + 0x10]
	0x033621D8 ADRP X21, 0x107A000
	0x033621DC ADRP X20, 0xDC6000
	0x033621E0 LDRB W8, [X21 + 0xE5F]
	0x033621E4 LDR X20, [X20 + 0x548]
	0x033621E8 MOV X19, X0
	0x033621EC TBNZ X8, 0x0, 0x3362204
	0x033621F0 ADRP X0, 0xDC6000
	0x033621F4 LDR X0, [X0 + 0x548]
	0x033621F8 BL 0x1C16CF4
	0x033621FC MOVZ W8, 0x1
	0x03362200 STRB W8, [X21 + 0xE5F]
	0x03362204 LDR X0, [X20]
	0x03362208 LDR X19, [X19]
	0x0336220C LDR W8, [X0 + 0xE0]
	0x03362210 CBNZ W8, 0x3362218
	0x03362214 BL 0x1C16DFC
	0x03362218 MOV X0, X19
	0x0336221C LDP X20, X19, [X31 + 0x10]
	0x03362220 MOV X1, X31
	0x03362224 MOV X2, X31
	0x03362228 LDP X30, X21, [X31], #0x20
	0x0336222C B 0x3362230
	0x03362230 STP X30, X23, [X31 - 0x30]!
	0x03362234 STP X22, X21, [X31 + 0x10]
	0x03362238 STP X20, X19, [X31 + 0x20]
	0x0336223C ADRP X23, 0x107A000
	0x03362240 ADRP X22, 0xDC6000
	0x03362244 LDRB W8, [X23 + 0xEBB]
	0x03362248 LDR X22, [X22 + 0x548]
	0x0336224C MOV X19, X2
	0x03362250 MOV X20, X1
	0x03362254 MOV X21, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x107B000
	006 Move X21, 0xD93000
	007 Move W8, [X20+3659]
	008 Move X21, [X21+2544]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD93000
	015 Move X0, [X0+2544]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3659], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X8, [X19]
	025 Move X9, 0x81E3
	026 NotImplemented "Instruction MOVK not yet implemented."
	027 NotImplemented "Instruction MOVK not yet implemented."
	028 NotImplemented "Instruction MOVK not yet implemented."
	029 And X8, X8, 0x3FFFFFFF
	030 NotImplemented "Instruction INVALID not yet implemented."
	031 Move X8, X8
	032 ShiftRight X8, 39
	033 And X8, X8, 0x7FFFFFFF
	034 Move W9, 0x4925
	035 Add W8, W8, 1
	036 NotImplemented "Instruction MOVK not yet implemented."
	037 NotImplemented "Instruction UMADDL not yet implemented."
	038 Move X9, X9
	039 ShiftRight X9, 32
	040 And X9, X9, 0x7FFFFFFF
	041 Subtract W10, W8, W9
	042 Add W9, W9, W10
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move W9, W9
	046 ShiftRight W9, 2
	047 And W9, W9, 0x7FFFFFFF
	048 Subtract W9, W9, W9
	049 Add W0, W8, W9
	050 Move X30, [X31+32]
	051 Move X21, [X31+40]
	052 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x03362258 TBNZ X8, 0x0, 0x3362270
	0x0336225C ADRP X0, 0xDC6000
	0x03362260 LDR X0, [X0 + 0x548]
	0x03362264 BL 0x1C16CF4
	0x03362268 MOVZ W8, 0x1
	0x0336226C STRB W8, [X23 + 0xEBB]
	0x03362270 LDR X0, [X22]
	0x03362274 LDR W8, [X0 + 0xE0]
	0x03362278 CBNZ W8, 0x3362284
	0x0336227C BL 0x1C16DFC
	0x03362280 LDR X0, [X22]
	0x03362284 LDR X8, [X0 + 0xB8]
	0x03362288 MOV X0, X21
	0x0336228C MOV X1, X20
	0x03362290 MOV X2, X19
	0x03362294 LDR X3, [X8]
	0x03362298 LDP X20, X19, [X31 + 0x20]
	0x0336229C LDP X22, X21, [X31 + 0x10]
	0x033622A0 LDP X30, X23, [X31], #0x30
	0x033622A4 B 0x33650EC
	0x033622A8 STR X30, [X31 - 0x30]!
	0x033622AC STP X22, X21, [X31 + 0x10]
	0x033622B0 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x107B000
	006 Move X21, 0xD93000
	007 Move W8, [X20+3660]
	008 Move X21, [X21+2544]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD93000
	015 Move X0, [X0+2544]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3660], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move W9, [X19]
	025 Move W8, [X19+4]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 And W8, W8, 0x3FFFFFFF
	029 Xor W0, W8, W9
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Return X0

Method: System.Int32 get_Hour()

Disassembly:
	0x033622B4 ADRP X22, 0x107A000
	0x033622B8 ADRP X21, 0xDC6000
	0x033622BC LDRB W8, [X22 + 0xE60]
	0x033622C0 LDR X21, [X21 + 0x548]
	0x033622C4 MOV X19, X1
	0x033622C8 MOV X20, X0
	0x033622CC TBNZ X8, 0x0, 0x33622E4
	0x033622D0 ADRP X0, 0xDC6000
	0x033622D4 LDR X0, [X0 + 0x548]
	0x033622D8 BL 0x1C16CF4
	0x033622DC MOVZ W8, 0x1
	0x033622E0 STRB W8, [X22 + 0xE60]
	0x033622E4 LDR X0, [X21]
	0x033622E8 LDR X20, [X20]
	0x033622EC LDR W8, [X0 + 0xE0]
	0x033622F0 CBNZ W8, 0x33622F8
	0x033622F4 BL 0x1C16DFC
	0x033622F8 MOV X0, X20
	0x033622FC MOV X1, X19
	0x03362300 LDP X20, X19, [X31 + 0x20]
	0x03362304 LDP X22, X21, [X31 + 0x10]
	0x03362308 MOV X2, X31
	0x0336230C LDR X30, [X31], #0x30
	0x03362310 B 0x3362230
	0x03362314 STR X30, [X31 - 0x30]!
	0x03362318 STP X22, X21, [X31 + 0x10]
	0x0336231C STP X20, X19, [X31 + 0x20]
	0x03362320 ADRP X22, 0x107A000
	0x03362324 ADRP X21, 0xDC6000
	0x03362328 LDRB W8, [X22 + 0xE61]
	0x0336232C LDR X21, [X21 + 0x548]
	0x03362330 MOV X19, X1
	0x03362334 MOV X20, X0
	0x03362338 TBNZ X8, 0x0, 0x3362350

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x107B000
	006 Move X21, 0xD93000
	007 Move W8, [X20+3661]
	008 Move X21, [X21+2544]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD93000
	015 Move X0, [X0+2544]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3661], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X8, [X19]
	025 Move X9, 0x10B5
	026 NotImplemented "Instruction MOVK not yet implemented."
	027 NotImplemented "Instruction MOVK not yet implemented."
	028 NotImplemented "Instruction MOVK not yet implemented."
	029 And X8, X8, 0x3FFFFFFF
	030 Move W10, 0xAAAB
	031 NotImplemented "Instruction INVALID not yet implemented."
	032 NotImplemented "Instruction MOVK not yet implemented."
	033 Move X8, X8
	034 ShiftRight X8, 33
	035 And X8, X8, 0x7FFFFFFF
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Multiply X9, X8, X10
	039 Move X9, X9
	040 ShiftRight X9, 36
	041 And X9, X9, 0x7FFFFFFF
	042 Move W10, 24
	043 NotImplemented "Instruction MSUB not yet implemented."
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Return X0

Method: System.Boolean IsAmbiguousDaylightSavingTime()

Disassembly:
	0x0336233C ADRP X0, 0xDC6000
	0x03362340 LDR X0, [X0 + 0x548]
	0x03362344 BL 0x1C16CF4
	0x03362348 MOVZ W8, 0x1
	0x0336234C STRB W8, [X22 + 0xE61]
	0x03362350 LDR X0, [X21]
	0x03362354 LDR X20, [X20]
	0x03362358 LDR W8, [X0 + 0xE0]
	0x0336235C CBNZ W8, 0x3362364
	0x03362360 BL 0x1C16DFC
	0x03362364 MOV X0, X20
	0x03362368 MOV X2, X19
	0x0336236C LDP X20, X19, [X31 + 0x20]
	0x03362370 LDP X22, X21, [X31 + 0x10]
	0x03362374 MOV X1, X31
	0x03362378 LDR X30, [X31], #0x30
	0x0336237C B 0x3362230
	0x03362380 STP X30, X23, [X31 - 0x30]!
	0x03362384 STP X22, X21, [X31 + 0x10]
	0x03362388 STP X20, X19, [X31 + 0x20]
	0x0336238C ADRP X23, 0x107A000
	0x03362390 ADRP X22, 0xDC6000
	0x03362394 LDRB W8, [X23 + 0xE62]
	0x03362398 LDR X22, [X22 + 0x548]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x107B000
	006 Move X21, 0xD93000
	007 Move W8, [X20+3662]
	008 Move X21, [X21+2544]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD93000
	015 Move X0, [X0+2544]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3662], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X8, [X19]
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X8, X8
	028 ShiftRight X8, 62
	029 And X8, X8, 0x7FFFFFFF
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSET not yet implemented."
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return X0

Method: System.DateTimeKind get_Kind()

Disassembly:
	0x0336239C MOV X19, X2
	0x033623A0 MOV X20, X1
	0x033623A4 MOV X21, X0
	0x033623A8 TBNZ X8, 0x0, 0x33623C0
	0x033623AC ADRP X0, 0xDC6000
	0x033623B0 LDR X0, [X0 + 0x548]
	0x033623B4 BL 0x1C16CF4
	0x033623B8 MOVZ W8, 0x1
	0x033623BC STRB W8, [X23 + 0xE62]
	0x033623C0 LDR X0, [X22]
	0x033623C4 LDR X21, [X21]
	0x033623C8 LDR W8, [X0 + 0xE0]
	0x033623CC CBNZ W8, 0x33623D4
	0x033623D0 BL 0x1C16DFC
	0x033623D4 MOV X0, X21
	0x033623D8 MOV X1, X20
	0x033623DC MOV X2, X19
	0x033623E0 LDP X20, X19, [X31 + 0x20]
	0x033623E4 LDP X22, X21, [X31 + 0x10]
	0x033623E8 LDP X30, X23, [X31], #0x30
	0x033623EC B 0x3362230
	0x033623F0 STP X30, X27, [X31 - 0x50]!
	0x033623F4 STP X26, X25, [X31 + 0x10]
	0x033623F8 STP X24, X23, [X31 + 0x20]
	0x033623FC STP X22, X21, [X31 + 0x30]
	0x03362400 STP X20, X19, [X31 + 0x40]
	0x03362404 ADRP X27, 0x107A000
	0x03362408 ADRP X26, 0xDC6000
	0x0336240C LDRB W8, [X27 + 0xE63]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x107B000
	006 Move X21, 0xD93000
	007 Move W8, [X20+3663]
	008 Move X21, [X21+2544]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD93000
	015 Move X0, [X0+2544]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3663], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X8, [X19]
	025 And X8, X8, -1
	026 Move X9, 0x40000000
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move W8, 1
	029 NotImplemented "Instruction CINC not yet implemented."
	030 Move W0, W31
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return X0

Method: System.Int32 get_Millisecond()

Disassembly:
	0x03362410 LDR X26, [X26 + 0x548]
	0x03362414 MOV X19, X6
	0x03362418 MOV X20, X5
	0x0336241C MOV X21, X4
	0x03362420 MOV X22, X3
	0x03362424 MOV X23, X2
	0x03362428 MOV X24, X1
	0x0336242C MOV X25, X0
	0x03362430 TBNZ X8, 0x0, 0x3362448
	0x03362434 ADRP X0, 0xDC6000
	0x03362438 LDR X0, [X0 + 0x548]
	0x0336243C BL 0x1C16CF4
	0x03362440 MOVZ W8, 0x1
	0x03362444 STRB W8, [X27 + 0xE63]
	0x03362448 LDR X0, [X26]
	0x0336244C LDR X25, [X25]
	0x03362450 LDR W8, [X0 + 0xE0]
	0x03362454 CBNZ W8, 0x336245C
	0x03362458 BL 0x1C16DFC
	0x0336245C MOV X0, X25
	0x03362460 MOV X1, X24
	0x03362464 MOV X2, X23
	0x03362468 MOV X3, X22
	0x0336246C MOV X4, X21
	0x03362470 MOV X5, X20
	0x03362474 MOV X6, X19
	0x03362478 LDP X20, X19, [X31 + 0x40]
	0x0336247C LDP X22, X21, [X31 + 0x30]
	0x03362480 LDP X24, X23, [X31 + 0x20]
	0x03362484 LDP X26, X25, [X31 + 0x10]
	0x03362488 LDP X30, X27, [X31], #0x50
	0x0336248C B 0x3362490
	0x03362490 SUB X31, X31, 0x60
	0x03362494 STP X30, X27, [X31 + 0x10]
	0x03362498 STP X26, X25, [X31 + 0x20]
	0x0336249C STP X24, X23, [X31 + 0x30]
	0x033624A0 STP X22, X21, [X31 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x107B000
	006 Move X21, 0xD93000
	007 Move W8, [X20+3664]
	008 Move X21, [X21+2544]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD93000
	015 Move X0, [X0+2544]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3664], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X8, [X19]
	025 Move X9, 0x594B
	026 NotImplemented "Instruction MOVK not yet implemented."
	027 NotImplemented "Instruction MOVK not yet implemented."
	028 Move X10, 0xF7CF
	029 NotImplemented "Instruction MOVK not yet implemented."
	030 NotImplemented "Instruction MOVK not yet implemented."
	031 And X8, X8, 0x3FFFFFFF
	032 NotImplemented "Instruction MOVK not yet implemented."
	033 NotImplemented "Instruction INVALID not yet implemented."
	034 NotImplemented "Instruction MOVK not yet implemented."
	035 Move X9, X8
	036 ShiftRight X9, 11
	037 And X9, X9, 0x7FFFFFFF
	038 Move X8, X8
	039 ShiftRight X8, 14
	040 And X8, X8, 0x7FFFFFFF
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 NotImplemented "Instruction INVALID not yet implemented."
	044 Move X8, X8
	045 ShiftRight X8, 4
	046 And X8, X8, 0x7FFFFFFF
	047 Move W10, 1000
	048 NotImplemented "Instruction MSUB not yet implemented."
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return X0

Method: System.Int32 get_Minute()

Disassembly:
	0x033624A4 STP X20, X19, [X31 + 0x50]
	0x033624A8 ADRP X27, 0x107A000
	0x033624AC ADRP X26, 0xDC6000
	0x033624B0 LDRB W8, [X27 + 0xEBD]
	0x033624B4 LDR X26, [X26 + 0x548]
	0x033624B8 MOV X19, X6
	0x033624BC MOV X20, X5
	0x033624C0 MOV X21, X4
	0x033624C4 MOV X22, X3
	0x033624C8 MOV X23, X2
	0x033624CC MOV X24, X1
	0x033624D0 MOV X25, X0
	0x033624D4 TBNZ X8, 0x0, 0x33624EC
	0x033624D8 ADRP X0, 0xDC6000
	0x033624DC LDR X0, [X0 + 0x548]
	0x033624E0 BL 0x1C16CF4
	0x033624E4 MOVZ W8, 0x1
	0x033624E8 STRB W8, [X27 + 0xEBD]
	0x033624EC LDR X0, [X26]
	0x033624F0 LDR W8, [X0 + 0xE0]
	0x033624F4 CBNZ W8, 0x3362500
	0x033624F8 BL 0x1C16DFC
	0x033624FC LDR X0, [X26]
	0x03362500 LDR X8, [X0 + 0xB8]
	0x03362504 MOV X0, X25
	0x03362508 MOV X1, X24
	0x0336250C MOV X2, X23
	0x03362510 LDR X7, [X8]
	0x03362514 MOV X3, X22
	0x03362518 MOV X4, X21
	0x0336251C MOV X5, X20
	0x03362520 MOV X6, X19
	0x03362524 BL 0x3365628
	0x03362528 LDP X20, X19, [X31 + 0x50]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x107B000
	006 Move X21, 0xD93000
	007 Move W8, [X20+3665]
	008 Move X21, [X21+2544]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD93000
	015 Move X0, [X0+2544]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3665], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X8, [X19]
	025 Move X9, 0xBEA7
	026 NotImplemented "Instruction MOVK not yet implemented."
	027 NotImplemented "Instruction MOVK not yet implemented."
	028 NotImplemented "Instruction MOVK not yet implemented."
	029 And X8, X8, 0x3FFFFFFF
	030 Or X10, X31, -8608480567731124088
	031 NotImplemented "Instruction INVALID not yet implemented."
	032 NotImplemented "Instruction MOVK not yet implemented."
	033 Move X8, X8
	034 ShiftRight X8, 29
	035 And X8, X8, 0x7FFFFFFF
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 NotImplemented "Instruction INVALID not yet implemented."
	039 Move X9, X9
	040 ShiftRight X9, 5
	041 And X9, X9, 0x7FFFFFFF
	042 Move W10, 60
	043 NotImplemented "Instruction MSUB not yet implemented."
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Return X0

Method: System.Int32 get_Month()

Disassembly:
	0x0336252C LDP X22, X21, [X31 + 0x40]
	0x03362530 LDP X24, X23, [X31 + 0x30]
	0x03362534 LDP X26, X25, [X31 + 0x20]
	0x03362538 LDP X30, X27, [X31 + 0x10]
	0x0336253C AND W0, W0, 0x1
	0x03362540 ADD X31, X31, 0x60
	0x03362544 RET
	0x03362548 STP X30, X21, [X31 - 0x20]!
	0x0336254C STP X20, X19, [X31 + 0x10]
	0x03362550 ADRP X21, 0x107A000
	0x03362554 ADRP X20, 0xDC5000
	0x03362558 LDRB W8, [X21 + 0xE64]
	0x0336255C LDR X20, [X20 + 0xA38]
	0x03362560 MOV X19, X0
	0x03362564 TBNZ X8, 0x0, 0x336257C
	0x03362568 ADRP X0, 0xDC5000
	0x0336256C LDR X0, [X0 + 0xA38]
	0x03362570 BL 0x1C16CF4
	0x03362574 MOVZ W8, 0x1
	0x03362578 STRB W8, [X21 + 0xE64]
	0x0336257C LDR X0, [X20]
	0x03362580 LDR X19, [X19]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x107B000
	006 Move X21, 0xD93000
	007 Move W8, [X20+3666]
	008 Move X21, [X21+2544]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD93000
	015 Move X0, [X0+2544]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3666], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move W1, 2
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call DateTime.GetDatePart, X0, X1
	031 Return X0

Method: System.DateTime get_Now()

Disassembly:
	0x03362584 LDR W8, [X0 + 0xE0]
	0x03362588 CBNZ W8, 0x3362590
	0x0336258C BL 0x1C16DFC
	0x03362590 MOV X0, X19
	0x03362594 LDP X20, X19, [X31 + 0x10]
	0x03362598 MOVZ W1, 0x2
	0x0336259C MOV X2, X31
	0x033625A0 LDP X30, X21, [X31], #0x20
	0x033625A4 B 0x330EE04
	0x033625A8 STR X30, [X31 - 0x30]!
	0x033625AC STP X22, X21, [X31 + 0x10]
	0x033625B0 STP X20, X19, [X31 + 0x20]
	0x033625B4 ADRP X21, 0x107A000
	0x033625B8 LDRB W8, [X21 + 0xE65]
	0x033625BC MOV X19, X1
	0x033625C0 MOV X20, X0
	0x033625C4 TBNZ X8, 0x0, 0x33625E8
	0x033625C8 ADRP X0, 0xDC6000
	0x033625CC LDR X0, [X0 + 0x328]
	0x033625D0 BL 0x1C16CF4
	0x033625D4 ADRP X0, 0xDC6000
	0x033625D8 LDR X0, [X0 + 0x588]
	0x033625DC BL 0x1C16CF4
	0x033625E0 MOVZ W8, 0x1
	0x033625E4 STRB W8, [X21 + 0xE65]
	0x033625E8 CBZ X20, 0x3362688
	0x033625EC ADRP X22, 0x1077000
	0x033625F0 ADRP X21, 0xDC6000
	0x033625F4 LDRB W8, [X22 + 0x762]
	0x033625F8 LDR X21, [X21 + 0x328]
	0x033625FC CBNZ W8, 0x3362614
	0x03362600 ADRP X0, 0xDB8000
	0x03362604 LDR X0, [X0 + 0x290]
	0x03362608 BL 0x1C16CF4
	0x0336260C MOVZ W8, 0x1
	0x03362610 STRB W8, [X22 + 0x762]
	0x03362614 ADRP X22, 0xDC6000
	0x03362618 LDR X22, [X22 + 0x588]
	0x0336261C MOV X0, X20
	0x03362620 MOV X1, X31
	0x03362624 BL 0x3225708
	0x03362628 LDR X8, [X21]
	0x0336262C LDR W20, [X20 + 0x10]
	0x03362630 MOV X21, X0
	0x03362634 LDR W9, [X8 + 0xE0]
	0x03362638 CBNZ W9, 0x3362644
	0x0336263C MOV X0, X8
	0x03362640 BL 0x1C16DFC
	0x03362644 MOV X0, X31
	0x03362648 BL 0x3324BF0
	0x0336264C LDR X8, [X22]
	0x03362650 MOV X22, X0
	0x03362654 LDR W9, [X8 + 0xE0]
	0x03362658 CBNZ W9, 0x3362664
	0x0336265C MOV X0, X8
	0x03362660 BL 0x1C16DFC
	0x03362664 MOV X0, X21
	0x03362668 MOV X1, X20
	0x0336266C MOV X2, X22
	0x03362670 MOV X4, X19
	0x03362674 LDP X20, X19, [X31 + 0x20]
	0x03362678 LDP X22, X21, [X31 + 0x10]
	0x0336267C MOV W3, W31
	0x03362680 LDR X30, [X31], #0x30
	0x03362684 B 0x33626A0
	0x03362688 STR X31, [X19]
	0x0336268C LDP X20, X19, [X31 + 0x20]
	0x03362690 LDP X22, X21, [X31 + 0x10]
	0x03362694 MOV W0, W31
	0x03362698 LDR X30, [X31], #0x30
	0x0336269C RET
	0x033626A0 SUB X31, X31, 0xC0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X20, 0x107B000
	007 Move X19, 0xD93000
	008 Move W8, [X20+3667]
	009 Move X19, [X19+2544]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xD93000
	015 Move X0, [X0+2544]
	016 Call 0x1C17CF4
	017 Move X0, 0xD94000
	018 Move X0, [X0+1392]
	019 Call 0x1C17CF4
	020 Move X0, 0xDC6000
	021 Move X0, [X0+2616]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+3667], W8
	025 Move X0, [X19]
	026 Move X21, 0xDC6000
	027 Move W8, [X0+224]
	028 Move X21, [X21+2616]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X20, 0xD94000
	033 Move X20, [X20+1392]
	034 Call DateTime.get_UtcNow
	035 Move X19, X0
	036 Move X0, [X21]
	037 Move [X31+16], X19
	038 Move [X31+12], W31
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Add X1, X31, 12
	044 Move X0, X19
	045 Move X2, X31
	046 Call TimeZoneInfo.GetDateTimeNowUtcOffsetFromUtc, X0, X1
	047 Move X8, [X20]
	048 Move X19, X0
	049 Move W9, [X8+224]
	050 Compare W9, 0
	051 JumpIfNotEqual {54}
	052 Move X0, X8
	053 Call 0x1C17DFC
	054 Add X0, X31, 16
	055 Call DateTime.get_Ticks, X0
	056 Move X8, 0x4000
	057 NotImplemented "Instruction MOVK not yet implemented."
	058 NotImplemented "Instruction MOVK not yet implemented."
	059 Add X1, X0, X19
	060 NotImplemented "Instruction MOVK not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move TEMP, X1
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {75}
	066 Move W3, [X31+12]
	067 Add X0, X31, 24
	068 Move [X31+24], X31
	069 Call DateTime..ctor, X0, X1, X2, X3
	070 Move X0, [X31+24]
	071 Move X0, 0x3FFF
	072 NotImplemented "Instruction MOVK not yet implemented."
	073 NotImplemented "Instruction MOVK not yet implemented."
	074 NotImplemented "Instruction MOVK not yet implemented."
	075 Move X0, 0x80000000
	076 Move [X31+24], X0
	077 Move X20, [X31+48]
	078 Move X19, [X31+56]
	079 Move X30, [X31+32]
	080 Move X21, [X31+40]
	081 Add X31, X31, 64
	082 Return X0

Method: System.Int32 get_Second()

Disassembly:
	0x03362760 LDR X0, [X25]
	0x03362764 LDR W8, [X0 + 0xE0]
	0x03362768 CBNZ W8, 0x3362770
	0x0336276C BL 0x1C16DFC
	0x03362770 ADD X4, X31, 0x0
	0x03362774 MOV X0, X23
	0x03362778 MOV X1, X22
	0x0336277C MOV X2, X21
	0x03362780 MOV W3, W20
	0x03362784 BL 0x336FC74
	0x03362788 TBZ X0, 0x0, 0x3362794
	0x0336278C LDR X8, [X31 + 0x38]
	0x03362790 STR X8, [X19]
	0x03362794 LDP X20, X19, [X31 + 0xB0]
	0x03362798 LDP X22, X21, [X31 + 0xA0]
	0x0336279C LDP X24, X23, [X31 + 0x90]
	0x033627A0 LDP X30, X25, [X31 + 0x80]
	0x033627A4 AND W0, W0, 0x1
	0x033627A8 ADD X31, X31, 0xC0
	0x033627AC RET
	0x033627B0 STR X30, [X31 - 0x40]!
	0x033627B4 STP X24, X23, [X31 + 0x10]
	0x033627B8 STP X22, X21, [X31 + 0x20]
	0x033627BC STP X20, X19, [X31 + 0x30]
	0x033627C0 ADRP X24, 0x107A000
	0x033627C4 ADRP X23, 0xDC6000
	0x033627C8 LDRB W8, [X24 + 0xE66]
	0x033627CC LDR X23, [X23 + 0x328]
	0x033627D0 MOV X19, X3
	0x033627D4 MOV W20, W2
	0x033627D8 MOV X21, X1
	0x033627DC MOV X22, X0
	0x033627E0 TBNZ X8, 0x0, 0x3362810
	0x033627E4 ADRP X0, 0xDC6000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x107B000
	006 Move X21, 0xD93000
	007 Move W8, [X20+3668]
	008 Move X21, [X21+2544]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD93000
	015 Move X0, [X0+2544]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3668], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X8, [X19]
	025 Move X9, 0x42BD
	026 NotImplemented "Instruction MOVK not yet implemented."
	027 NotImplemented "Instruction MOVK not yet implemented."
	028 NotImplemented "Instruction MOVK not yet implemented."
	029 And X8, X8, 0x3FFFFFFF
	030 Or X10, X31, -8608480567731124088
	031 NotImplemented "Instruction INVALID not yet implemented."
	032 NotImplemented "Instruction MOVK not yet implemented."
	033 Move X8, X8
	034 ShiftRight X8, 23
	035 And X8, X8, 0x7FFFFFFF
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 NotImplemented "Instruction INVALID not yet implemented."
	039 Move X9, X9
	040 ShiftRight X9, 5
	041 And X9, X9, 0x7FFFFFFF
	042 Move W10, 60
	043 NotImplemented "Instruction MSUB not yet implemented."
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Return X0

Method: System.Int64 get_Ticks()

Disassembly:
	0x03362708 STP V0, V0, [X31 + 0x40]
	0x0336270C STP V0, V0, [X31 + 0x20]
	0x03362710 STP V0, V0, [X31]
	0x03362714 ADRP X25, 0xDC6000
	0x03362718 LDR W8, [X0 + 0xE0]
	0x0336271C LDR X25, [X25 + 0x588]
	0x03362720 CBNZ W8, 0x3362730
	0x03362724 BL 0x1C16DFC
	0x03362728 LDR X0, [X24]
	0x0336272C MOVI V0.2D, 0x0
	0x03362730 LDR X8, [X0 + 0xB8]
	0x03362734 ADD X0, X31, 0x0
	0x03362738 MOV X1, X23
	0x0336273C MOV X2, X22
	0x03362740 LDR X8, [X8 + 0x10]
	0x03362744 MOV X3, X31
	0x03362748 STR X8, [X19]
	0x0336274C STP V0, V0, [X31 + 0x60]
	0x03362750 STP V0, V0, [X31 + 0x40]
	0x03362754 STP V0, V0, [X31 + 0x20]
	0x03362758 STP V0, V0, [X31]
	0x0336275C BL 0x33766A0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x107B000
	006 Move X21, 0xD93000
	007 Move W8, [X20+3669]
	008 Move X21, [X21+2544]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD93000
	015 Move X0, [X0+2544]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3669], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X8, [X19]
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 And X0, X8, 0x3FFFFFFF
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0

Method: System.TimeSpan get_TimeOfDay()

Disassembly:
	0x033627E8 LDR X0, [X0 + 0x328]
	0x033627EC BL 0x1C16CF4
	0x033627F0 ADRP X0, 0xDC6000
	0x033627F4 LDR X0, [X0 + 0x588]
	0x033627F8 BL 0x1C16CF4
	0x033627FC ADRP X0, 0xDC8000
	0x03362800 LDR X0, [X0 + 0xA18]
	0x03362804 BL 0x1C16CF4
	0x03362808 MOVZ W8, 0x1
	0x0336280C STRB W8, [X24 + 0xE66]
	0x03362810 LDR X0, [X23]
	0x03362814 ADRP X24, 0xDC8000
	0x03362818 LDR W8, [X0 + 0xE0]
	0x0336281C LDR X24, [X24 + 0xA18]
	0x03362820 CBNZ W8, 0x3362828
	0x03362824 BL 0x1C16DFC
	0x03362828 LDR X1, [X24]
	0x0336282C MOV W0, W20
	0x03362830 MOV X2, X31
	0x03362834 BL 0x3326EE8
	0x03362838 CBZ X22, 0x33628D8
	0x0336283C ADRP X24, 0x1077000
	0x03362840 LDRB W8, [X24 + 0x762]
	0x03362844 CBNZ W8, 0x336285C
	0x03362848 ADRP X0, 0xDB8000
	0x0336284C LDR X0, [X0 + 0x290]
	0x03362850 BL 0x1C16CF4
	0x03362854 MOVZ W8, 0x1
	0x03362858 STRB W8, [X24 + 0x762]
	0x0336285C ADRP X24, 0xDC6000
	0x03362860 LDR X24, [X24 + 0x588]
	0x03362864 MOV X0, X22

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x107B000
	006 Move X21, 0xD93000
	007 Move W8, [X20+3670]
	008 Move X21, [X21+2544]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD93000
	015 Move X0, [X0+2544]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3670], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X8, [X19]
	025 Move X9, 0x81E3
	026 NotImplemented "Instruction MOVK not yet implemented."
	027 NotImplemented "Instruction MOVK not yet implemented."
	028 NotImplemented "Instruction MOVK not yet implemented."
	029 And X8, X8, 0x3FFFFFFF
	030 Move X10, 0xC000
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 NotImplemented "Instruction INVALID not yet implemented."
	034 NotImplemented "Instruction MOVK not yet implemented."
	035 Move X9, X9
	036 ShiftRight X9, 39
	037 And X9, X9, 0x7FFFFFFF
	038 NotImplemented "Instruction MOVK not yet implemented."
	039 NotImplemented "Instruction MSUB not yet implemented."
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Return X0

Method: System.Int32 get_Year()

Disassembly:
	0x03362868 MOV X1, X31
	0x0336286C BL 0x3225708
	0x03362870 LDR X8, [X23]
	0x03362874 LDR W22, [X22 + 0x10]
	0x03362878 MOV X23, X0
	0x0336287C LDR W9, [X8 + 0xE0]
	0x03362880 CBNZ W9, 0x336288C
	0x03362884 MOV X0, X8
	0x03362888 BL 0x1C16DFC
	0x0336288C MOV X0, X21
	0x03362890 MOV X1, X31
	0x03362894 BL 0x3324CFC
	0x03362898 LDR X8, [X24]
	0x0336289C MOV X21, X0
	0x033628A0 LDR W9, [X8 + 0xE0]
	0x033628A4 CBNZ W9, 0x33628B0
	0x033628A8 MOV X0, X8
	0x033628AC BL 0x1C16DFC
	0x033628B0 MOV X0, X23
	0x033628B4 MOV X1, X22
	0x033628B8 MOV X2, X21
	0x033628BC MOV W3, W20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x107B000
	006 Move X21, 0xD93000
	007 Move W8, [X20+3671]
	008 Move X21, [X21+2544]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD93000
	015 Move X0, [X0+2544]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3671], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move W1, W31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call DateTime.GetDatePart, X0, X1
	031 Return X0

Method: System.Boolean IsLeapYear(System.Int32 year)

Disassembly:
	0x033618A8 BL 0x1C16DFC
	0x033618AC MOV X0, X19
	0x033618B0 LDP X20, X19, [X31 + 0x10]
	0x033618B4 MOV W1, W31
	0x033618B8 LDP X30, X21, [X31], #0x20
	0x033618BC B 0x3360F6C
	0x033618C0 STP X30, X21, [X31 - 0x20]!
	0x033618C4 STP X20, X19, [X31 + 0x10]
	0x033618C8 ADRP X20, 0x107B000
	0x033618CC LDRB W8, [X20 + 0xE58]
	0x033618D0 MOV X19, X0
	0x033618D4 TBNZ X8, 0x0, 0x33618F8
	0x033618D8 ADRP X0, 0xDC7000
	0x033618DC LDR X0, [X0 + 0x328]
	0x033618E0 BL 0x1C16CF4
	0x033618E4 ADRP X0, 0xDC7000
	0x033618E8 LDR X0, [X0 + 0x588]
	0x033618EC BL 0x1C16CF4
	0x033618F0 MOVZ W8, 0x1
	0x033618F4 STRB W8, [X20 + 0xE58]
	0x033618F8 CBNZ X19, 0x3361908
	0x033618FC MOVZ W0, 0x30
	0x03361900 MOV X1, X31
	0x03361904 BL 0x338F3E0
	0x03361908 ADRP X20, 0x1078000
	0x0336190C LDRB W8, [X20 + 0x762]
	0x03361910 CBNZ W8, 0x3361928
	0x03361914 ADRP X0, 0xDB9000
	0x03361918 LDR X0, [X0 + 0x290]
	0x0336191C BL 0x1C16CF4
	0x03361920 MOVZ W8, 0x1
	0x03361924 STRB W8, [X20 + 0x762]
	0x03361928 ADRP X21, 0xDC7000
	0x0336192C LDR X21, [X21 + 0x328]
	0x03361930 CBZ X19, 0x336194C
	0x03361934 MOV X0, X19
	0x03361938 MOV X1, X31
	0x0336193C BL 0x3225708
	0x03361940 LDR W19, [X19 + 0x10]
	0x03361944 MOV X20, X0
	0x03361948 B 0x3361950
	0x0336194C MOV X20, X31
	0x03361950 LDR X0, [X21]
	0x03361954 ADRP X21, 0xDC7000
	0x03361958 LDR W8, [X0 + 0xE0]
	0x0336195C LDR X21, [X21 + 0x588]
	0x03361960 CBNZ W8, 0x3361968
	0x03361964 BL 0x1C16DFC
	0x03361968 MOV X0, X31
	0x0336196C BL 0x3324BF0

ISIL:
	001 Subtract W8, W0, 1
	002 Move W9, 0x270F
	003 NotImplemented "Instruction CMP not yet implemented."
	004 And W31, W0, 3
	005 Move W0, W31
	006 Return X0
	007 Move W9, 0x5C29
	008 And W8, W0, 0xFFFF
	009 NotImplemented "Instruction MOVK not yet implemented."
	010 Multiply W8, W8, W9
	011 Move W10, 0x5C28
	012 NotImplemented "Instruction EXTR not yet implemented."
	013 NotImplemented "Instruction MOVK not yet implemented."
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move W0, 1
	016 Return X0
	017 Move W9, 0xD70B
	018 NotImplemented "Instruction EXTR not yet implemented."
	019 NotImplemented "Instruction MOVK not yet implemented."
	020 NotImplemented "Instruction CMP not yet implemented."
	021 NotImplemented "Instruction CSET not yet implemented."
	022 Return X0
	023 Move [X31-32], X30
	024 Move [X31+16], X20
	025 Move [X31+24], X19
	026 Move X0, 0xD9B000
	027 Move X0, [X0+1888]
	028 Call 0x1C17D08
	029 Call 0x1C17F10
	030 Move X19, X0
	031 Move X0, 0xDC8000
	032 Move X0, [X0+1448]
	033 Call 0x1C17D08
	034 Move X20, X0
	035 Move X0, 0xDCA000
	036 Move X0, [X0+2528]
	037 Call 0x1C17D08
	038 Move X2, X0
	039 Move X0, X19
	040 Move X1, X20
	041 Move X3, X31
	042 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	043 Move X0, 0xDCA000
	044 Move X0, [X0+2536]
	045 Call 0x1C17D08
	046 Move X1, X0
	047 Move X0, X19
	048 Call 0x1C17DEC

Method: System.DateTime Parse(System.String s)

Disassembly:
	0x033628C0 MOV X4, X19
	0x033628C4 LDP X20, X19, [X31 + 0x30]
	0x033628C8 LDP X22, X21, [X31 + 0x20]
	0x033628CC LDP X24, X23, [X31 + 0x10]
	0x033628D0 LDR X30, [X31], #0x40
	0x033628D4 B 0x33626A0
	0x033628D8 STR X31, [X19]
	0x033628DC LDP X20, X19, [X31 + 0x30]
	0x033628E0 LDP X22, X21, [X31 + 0x20]
	0x033628E4 LDP X24, X23, [X31 + 0x10]
	0x033628E8 MOV W0, W31
	0x033628EC LDR X30, [X31], #0x40
	0x033628F0 RET
	0x033628F4 STR X30, [X31 - 0x50]!
	0x033628F8 STP X26, X25, [X31 + 0x10]
	0x033628FC STP X24, X23, [X31 + 0x20]
	0x03362900 STP X22, X21, [X31 + 0x30]
	0x03362904 STP X20, X19, [X31 + 0x40]
	0x03362908 ADRP X24, 0x107A000
	0x0336290C ADRP X25, 0xDC6000
	0x03362910 LDRB W8, [X24 + 0xE67]
	0x03362914 LDR X25, [X25 + 0x328]
	0x03362918 MOV X19, X4
	0x0336291C MOV W20, W3
	0x03362920 MOV X21, X2
	0x03362924 MOV X22, X1
	0x03362928 MOV X23, X0
	0x0336292C TBNZ X8, 0x0, 0x336295C
	0x03362930 ADRP X0, 0xDC6000
	0x03362934 LDR X0, [X0 + 0x328]
	0x03362938 BL 0x1C16CF4
	0x0336293C ADRP X0, 0xDC6000
	0x03362940 LDR X0, [X0 + 0x588]
	0x03362944 BL 0x1C16CF4
	0x03362948 ADRP X0, 0xDC6000
	0x0336294C LDR X0, [X0 + 0xAB8]
	0x03362950 BL 0x1C16CF4
	0x03362954 MOVZ W8, 0x1
	0x03362958 STRB W8, [X24 + 0xE67]
	0x0336295C LDR X0, [X25]
	0x03362960 ADRP X24, 0xDC6000
	0x03362964 LDR W8, [X0 + 0xE0]
	0x03362968 LDR X24, [X24 + 0xAB8]
	0x0336296C CBNZ W8, 0x3362974
	0x03362970 BL 0x1C16DFC
	0x03362974 LDR X1, [X24]
	0x03362978 MOV W0, W20
	0x0336297C MOV X2, X31
	0x03362980 BL 0x3326EE8
	0x03362984 CBZ X23, 0x3362A64
	0x03362988 CBZ X22, 0x3362A64
	0x0336298C ADRP X26, 0x1077000
	0x03362990 LDRB W8, [X26 + 0x762]
	0x03362994 CBNZ W8, 0x33629AC
	0x03362998 ADRP X0, 0xDB8000
	0x0336299C LDR X0, [X0 + 0x290]
	0x033629A0 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x107B000
	006 Move W8, [X20+3672]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0xDC7000
	013 Move X0, [X0+808]
	014 Call 0x1C17CF4
	015 Move X0, 0xDC7000
	016 Move X0, [X0+1416]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3672], W8
	020 Compare X19, 0
	021 JumpIfNotEqual {25}
	022 Move W0, 48
	023 Move X1, X31
	024 Call ThrowHelper.ThrowArgumentNullException, X0
	025 Move X20, 0x1078000
	026 Move W8, [X20+1890]
	027 Compare W8, 0
	028 JumpIfNotEqual {34}
	029 Move X0, 0xDB9000
	030 Move X0, [X0+656]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+1890], W8
	034 Move X21, 0xDC7000
	035 Move X21, [X21+808]
	036 Compare X19, 0
	037 JumpIfEqual {43}
	038 Move X0, X19
	039 Move X1, X31
	040 Call String.GetRawStringData, X0
	041 Move W19, [X19+16]
	042 Move X20, X0
	043 Move X20, X31
	044 Move X0, [X21]
	045 Move X21, 0xDC7000
	046 Move W8, [X0+224]
	047 Move X21, [X21+1416]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X0, X31
	052 Call DateTimeFormatInfo.get_CurrentInfo
	053 Move X8, [X21]
	054 Move X21, X0
	055 Move W9, [X8+224]
	056 Compare W9, 0
	057 JumpIfNotEqual {60}
	058 Move X0, X8
	059 Call 0x1C17DFC
	060 Move X0, X20
	061 Move X1, X19
	062 Move X20, [X31+16]
	063 Move X19, [X31+24]
	064 Move X2, X21
	065 Move W3, W31
	066 Move X30, [X31+32]
	067 Move X21, [X31+40]

Method: System.DateTime Parse(System.String s, System.IFormatProvider provider)

Disassembly:
	0x03362A94 STP X22, X21, [X31 + 0xB0]
	0x03362A98 STP X20, X19, [X31 + 0xC0]
	0x03362A9C ADRP X27, 0x107A000
	0x03362AA0 ADRP X26, 0xD92000
	0x03362AA4 LDRB W8, [X27 + 0xEC5]
	0x03362AA8 LDR X26, [X26 + 0x9F0]
	0x03362AAC MOV X19, X6
	0x03362AB0 MOV W20, W5
	0x03362AB4 MOV X21, X4
	0x03362AB8 MOV X22, X3
	0x03362ABC MOV X23, X2
	0x03362AC0 MOV X24, X1
	0x03362AC4 MOV X25, X0
	0x03362AC8 TBNZ X8, 0x0, 0x3362AEC
	0x03362ACC ADRP X0, 0xDC6000
	0x03362AD0 LDR X0, [X0 + 0x588]
	0x03362AD4 BL 0x1C16CF4
	0x03362AD8 ADRP X0, 0xD92000
	0x03362ADC LDR X0, [X0 + 0x9F0]
	0x03362AE0 BL 0x1C16CF4
	0x03362AE4 MOVZ W8, 0x1
	0x03362AE8 STRB W8, [X27 + 0xEC5]
	0x03362AEC LDR X0, [X26]
	0x03362AF0 MOVI V0.2D, 0x0
	0x03362AF4 STP V0, V0, [X31 + 0x60]
	0x03362AF8 STP V0, V0, [X31 + 0x40]
	0x03362AFC STP V0, V0, [X31 + 0x20]
	0x03362B00 STP V0, V0, [X31]
	0x03362B04 ADRP X27, 0xDC6000
	0x03362B08 LDR W8, [X0 + 0xE0]
	0x03362B0C LDR X27, [X27 + 0x588]
	0x03362B10 CBNZ W8, 0x3362B20
	0x03362B14 BL 0x1C16DFC
	0x03362B18 LDR X0, [X26]
	0x03362B1C MOVI V0.2D, 0x0
	0x03362B20 LDR X8, [X0 + 0xB8]
	0x03362B24 ADD X0, X31, 0x0
	0x03362B28 MOV X1, X25
	0x03362B2C MOV X2, X24
	0x03362B30 LDR X8, [X8 + 0x10]
	0x03362B34 MOV X3, X31
	0x03362B38 STR X8, [X19]
	0x03362B3C STP V0, V0, [X31 + 0x60]
	0x03362B40 STP V0, V0, [X31 + 0x40]
	0x03362B44 STP V0, V0, [X31 + 0x20]
	0x03362B48 STP V0, V0, [X31]
	0x03362B4C BL 0x33766A0
	0x03362B50 LDR X0, [X27]
	0x03362B54 LDR W8, [X0 + 0xE0]
	0x03362B58 CBNZ W8, 0x3362B60
	0x03362B5C BL 0x1C16DFC
	0x03362B60 ADD X6, X31, 0x0
	0x03362B64 MOV X0, X25
	0x03362B68 MOV X1, X24
	0x03362B6C MOV X2, X23
	0x03362B70 MOV X3, X22
	0x03362B74 MOV X4, X21
	0x03362B78 MOV W5, W20
	0x03362B7C BL 0x336AC38
	0x03362B80 TBZ X0, 0x0, 0x3362B8C
	0x03362B84 LDR X8, [X31 + 0x38]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x107B000
	007 Move W8, [X21+3673]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xDC7000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move X0, 0xDC7000
	018 Move X0, [X0+1416]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3673], W8
	022 Compare X20, 0
	023 JumpIfNotEqual {27}
	024 Move W0, 48
	025 Move X1, X31
	026 Call ThrowHelper.ThrowArgumentNullException, X0
	027 Move X21, 0x1078000
	028 Move W8, [X21+1890]
	029 Compare W8, 0
	030 JumpIfNotEqual {36}
	031 Move X0, 0xDB9000
	032 Move X0, [X0+656]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X21+1890], W8
	036 Move X22, 0xDC7000
	037 Move X22, [X22+808]
	038 Compare X20, 0
	039 JumpIfEqual {45}
	040 Move X0, X20
	041 Move X1, X31
	042 Call String.GetRawStringData, X0
	043 Move W20, [X20+16]
	044 Move X21, X0
	045 Move X21, X31
	046 Move X0, [X22]
	047 Move X22, 0xDC7000
	048 Move W8, [X0+224]
	049 Move X22, [X22+1416]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X0, X19
	054 Move X1, X31
	055 Call DateTimeFormatInfo.GetInstance, X0
	056 Move X8, [X22]
	057 Move X19, X0
	058 Move W9, [X8+224]
	059 Compare W9, 0
	060 JumpIfNotEqual {63}
	061 Move X0, X8
	062 Call 0x1C17DFC
	063 Move X0, X21
	064 Move X1, X20
	065 Move X2, X19
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X22, [X31+16]
	069 Move X21, [X31+24]
	070 Move W3, W31
	071 Move X30, [X31+48]
	072 Call DateTimeParse.Parse, X0, X1, X2
	073 Return X0

Method: System.DateTime Parse(System.String s, System.IFormatProvider provider, System.Globalization.DateTimeStyles styles)

Disassembly:
	0x03362B88 STR X8, [X19]
	0x03362B8C LDP X20, X19, [X31 + 0xC0]
	0x03362B90 LDP X22, X21, [X31 + 0xB0]
	0x03362B94 LDP X24, X23, [X31 + 0xA0]
	0x03362B98 LDP X26, X25, [X31 + 0x90]
	0x03362B9C LDP X30, X27, [X31 + 0x80]
	0x03362BA0 AND W0, W0, 0x1
	0x03362BA4 ADD X31, X31, 0xD0
	0x03362BA8 RET
	0x03362BAC STP X30, X25, [X31 - 0x40]!
	0x03362BB0 STP X24, X23, [X31 + 0x10]
	0x03362BB4 STP X22, X21, [X31 + 0x20]
	0x03362BB8 STP X20, X19, [X31 + 0x30]
	0x03362BBC ADRP X25, 0x107A000
	0x03362BC0 ADRP X24, 0xDC6000
	0x03362BC4 LDRB W8, [X25 + 0xE68]
	0x03362BC8 LDR X24, [X24 + 0x328]
	0x03362BCC MOV X19, X4
	0x03362BD0 MOV W20, W3
	0x03362BD4 MOV X22, X2
	0x03362BD8 MOV X21, X1
	0x03362BDC MOV X23, X0
	0x03362BE0 TBNZ X8, 0x0, 0x3362C10
	0x03362BE4 ADRP X0, 0xDC6000
	0x03362BE8 LDR X0, [X0 + 0x328]
	0x03362BEC BL 0x1C16CF4
	0x03362BF0 ADRP X0, 0xDC6000
	0x03362BF4 LDR X0, [X0 + 0x588]
	0x03362BF8 BL 0x1C16CF4
	0x03362BFC ADRP X0, 0xDC6000
	0x03362C00 LDR X0, [X0 + 0xAB8]
	0x03362C04 BL 0x1C16CF4
	0x03362C08 MOVZ W8, 0x1
	0x03362C0C STRB W8, [X25 + 0xE68]
	0x03362C10 LDR X0, [X24]
	0x03362C14 ADRP X25, 0xDC6000
	0x03362C18 LDR W8, [X0 + 0xE0]
	0x03362C1C LDR X25, [X25 + 0xAB8]
	0x03362C20 CBNZ W8, 0x3362C28
	0x03362C24 BL 0x1C16DFC
	0x03362C28 LDR X1, [X25]
	0x03362C2C MOV W0, W20
	0x03362C30 MOV X2, X31
	0x03362C34 BL 0x3326EE8
	0x03362C38 CBZ X23, 0x3362CDC
	0x03362C3C ADRP X25, 0x1077000
	0x03362C40 LDRB W8, [X25 + 0x762]
	0x03362C44 CBNZ W8, 0x3362C5C
	0x03362C48 ADRP X0, 0xDB8000
	0x03362C4C LDR X0, [X0 + 0x290]
	0x03362C50 BL 0x1C16CF4
	0x03362C54 MOVZ W8, 0x1
	0x03362C58 STRB W8, [X25 + 0x762]
	0x03362C5C ADRP X25, 0xDC6000
	0x03362C60 LDR X25, [X25 + 0x588]
	0x03362C64 MOV X0, X23
	0x03362C68 MOV X1, X31
	0x03362C6C BL 0x3225708
	0x03362C70 LDR X8, [X24]
	0x03362C74 LDR W23, [X23 + 0x10]
	0x03362C78 MOV X24, X0
	0x03362C7C LDR W9, [X8 + 0xE0]
	0x03362C80 CBNZ W9, 0x3362C8C
	0x03362C84 MOV X0, X8
	0x03362C88 BL 0x1C16DFC
	0x03362C8C MOV X0, X22
	0x03362C90 MOV X1, X31
	0x03362C94 BL 0x3324CFC
	0x03362C98 LDR X8, [X25]
	0x03362C9C MOV X22, X0
	0x03362CA0 LDR W9, [X8 + 0xE0]
	0x03362CA4 CBNZ W9, 0x3362CB0
	0x03362CA8 MOV X0, X8
	0x03362CAC BL 0x1C16DFC
	0x03362CB0 MOV X0, X24
	0x03362CB4 MOV X1, X23

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x107B000
	008 Move X23, 0xDC7000
	009 Move W8, [X22+3674]
	010 Move X23, [X23+808]
	011 Move W19, W2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xDC7000
	019 Move X0, [X0+808]
	020 Call 0x1C17CF4
	021 Move X0, 0xDC7000
	022 Move X0, [X0+1416]
	023 Call 0x1C17CF4
	024 Move X0, 0xDC9000
	025 Move X0, [X0+2584]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+3674], W8
	029 Move X0, [X23]
	030 Move X22, 0xDC9000
	031 Move W8, [X0+224]
	032 Move X22, [X22+2584]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X1, [X22]
	037 Move W0, W19
	038 Move X2, X31
	039 Call DateTimeFormatInfo.ValidateStyles, X0, X1
	040 Compare X21, 0
	041 JumpIfNotEqual {45}
	042 Move W0, 48
	043 Move X1, X31
	044 Call ThrowHelper.ThrowArgumentNullException, X0
	045 Move X22, 0x1078000
	046 Move W8, [X22+1890]
	047 Compare W8, 0
	048 JumpIfEqual {56}
	049 Compare X21, 0
	050 JumpIfEqual {63}
	051 Move X0, X21
	052 Move X1, X31
	053 Call String.GetRawStringData, X0
	054 Move W21, [X21+16]
	055 Move X22, X0
	056 Move X0, 0xDB9000
	057 Move X0, [X0+656]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X22+1890], W8
	061 Compare X21, 0
	062 JumpIfNotEqual {51}
	063 Move X22, X31
	064 Move X0, [X23]
	065 Move X23, 0xDC7000
	066 Move W8, [X0+224]
	067 Move X23, [X23+1416]
	068 Compare W8, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 Move X0, X20
	072 Move X1, X31
	073 Call DateTimeFormatInfo.GetInstance, X0
	074 Move X8, [X23]
	075 Move X20, X0
	076 Move W9, [X8+224]
	077 Compare W9, 0
	078 JumpIfNotEqual {81}
	079 Move X0, X8
	080 Call 0x1C17DFC
	081 Move X0, X22
	082 Move X1, X21
	083 Move X2, X20
	084 Move W3, W19
	085 Move X20, [X31+32]
	086 Move X19, [X31+40]
	087 Move X22, [X31+16]
	088 Move X21, [X31+24]
	089 Move X30, [X31+48]
	090 Move X23, [X31+56]
	091 Call DateTimeParse.Parse, X0, X1, X2
	092 Return X0

Method: System.DateTime ParseExact(System.String s, System.String format, System.IFormatProvider provider, System.Globalization.DateTimeStyles style)

Disassembly:
	0x03362CB8 MOV X2, X21
	0x03362CBC MOV X3, X22
	0x03362CC0 MOV W4, W20
	0x03362CC4 MOV X5, X19
	0x03362CC8 LDP X20, X19, [X31 + 0x30]
	0x03362CCC LDP X22, X21, [X31 + 0x20]
	0x03362CD0 LDP X24, X23, [X31 + 0x10]
	0x03362CD4 LDP X30, X25, [X31], #0x40
	0x03362CD8 B 0x3362CF8
	0x03362CDC STR X31, [X19]
	0x03362CE0 LDP X20, X19, [X31 + 0x30]
	0x03362CE4 LDP X22, X21, [X31 + 0x20]
	0x03362CE8 LDP X24, X23, [X31 + 0x10]
	0x03362CEC MOV W0, W31
	0x03362CF0 LDP X30, X25, [X31], #0x40
	0x03362CF4 RET
	0x03362CF8 SUB X31, X31, 0xD0
	0x03362CFC STR X30, [X31 + 0x80]
	0x03362D00 STP X26, X25, [X31 + 0x90]
	0x03362D04 STP X24, X23, [X31 + 0xA0]
	0x03362D08 STP X22, X21, [X31 + 0xB0]
	0x03362D0C STP X20, X19, [X31 + 0xC0]
	0x03362D10 ADRP X26, 0x107A000
	0x03362D14 ADRP X25, 0xD92000
	0x03362D18 LDRB W8, [X26 + 0xEC8]
	0x03362D1C LDR X25, [X25 + 0x9F0]
	0x03362D20 MOV X19, X5
	0x03362D24 MOV W20, W4
	0x03362D28 MOV X21, X3
	0x03362D2C MOV X22, X2
	0x03362D30 MOV X23, X1
	0x03362D34 MOV X24, X0
	0x03362D38 TBNZ X8, 0x0, 0x3362D5C
	0x03362D3C ADRP X0, 0xDC6000
	0x03362D40 LDR X0, [X0 + 0x588]
	0x03362D44 BL 0x1C16CF4
	0x03362D48 ADRP X0, 0xD92000
	0x03362D4C LDR X0, [X0 + 0x9F0]
	0x03362D50 BL 0x1C16CF4
	0x03362D54 MOVZ W8, 0x1
	0x03362D58 STRB W8, [X26 + 0xEC8]
	0x03362D5C LDR X0, [X25]
	0x03362D60 MOVI V0.2D, 0x0
	0x03362D64 STP V0, V0, [X31 + 0x60]
	0x03362D68 STP V0, V0, [X31 + 0x40]
	0x03362D6C STP V0, V0, [X31 + 0x20]
	0x03362D70 STP V0, V0, [X31]
	0x03362D74 ADRP X26, 0xDC6000
	0x03362D78 LDR W8, [X0 + 0xE0]
	0x03362D7C LDR X26, [X26 + 0x588]
	0x03362D80 CBNZ W8, 0x3362D90
	0x03362D84 BL 0x1C16DFC
	0x03362D88 LDR X0, [X25]
	0x03362D8C MOVI V0.2D, 0x0
	0x03362D90 LDR X8, [X0 + 0xB8]
	0x03362D94 ADD X0, X31, 0x0
	0x03362D98 MOV X1, X24
	0x03362D9C MOV X2, X23
	0x03362DA0 LDR X8, [X8 + 0x10]
	0x03362DA4 MOV X3, X31
	0x03362DA8 STR X8, [X19]
	0x03362DAC STP V0, V0, [X31 + 0x60]
	0x03362DB0 STP V0, V0, [X31 + 0x40]
	0x03362DB4 STP V0, V0, [X31 + 0x20]
	0x03362DB8 STP V0, V0, [X31]
	0x03362DBC BL 0x33766A0
	0x03362DC0 LDR X0, [X26]
	0x03362DC4 LDR W8, [X0 + 0xE0]
	0x03362DC8 CBNZ W8, 0x3362DD0
	0x03362DCC BL 0x1C16DFC
	0x03362DD0 ADD X5, X31, 0x0
	0x03362DD4 MOV X0, X24
	0x03362DD8 MOV X1, X23
	0x03362DDC MOV X2, X22
	0x03362DE0 MOV X3, X21
	0x03362DE4 MOV W4, W20
	0x03362DE8 BL 0x336B72C
	0x03362DEC TBZ X0, 0x0, 0x3362DF8
	0x03362DF0 LDR X8, [X31 + 0x38]
	0x03362DF4 STR X8, [X19]
	0x03362DF8 LDP X20, X19, [X31 + 0xC0]
	0x03362DFC LDP X22, X21, [X31 + 0xB0]
	0x03362E00 LDP X24, X23, [X31 + 0xA0]
	0x03362E04 LDP X26, X25, [X31 + 0x90]
	0x03362E08 LDR X30, [X31 + 0x80]
	0x03362E0C AND W0, W0, 0x1
	0x03362E10 ADD X31, X31, 0xD0
	0x03362E14 RET
	0x03362E18 STR X30, [X31 - 0x30]!
	0x03362E1C STP X22, X21, [X31 + 0x10]
	0x03362E20 STP X20, X19, [X31 + 0x20]
	0x03362E24 ADRP X22, 0x107A000
	0x03362E28 ADRP X21, 0xD92000
	0x03362E2C LDRB W8, [X22 + 0xE69]
	0x03362E30 LDR X21, [X21 + 0x9F0]
	0x03362E34 MOV X19, X1
	0x03362E38 MOV X20, X0
	0x03362E3C TBNZ X8, 0x0, 0x3362E54
	0x03362E40 ADRP X0, 0xD92000
	0x03362E44 LDR X0, [X0 + 0x9F0]
	0x03362E48 BL 0x1C16CF4
	0x03362E4C MOVZ W8, 0x1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X23, 0x107B000
	010 Move X24, 0xDC7000
	011 Move W8, [X23+3675]
	012 Move X24, [X24+808]
	013 Move W19, W3
	014 Move X20, X2
	015 Move X21, X1
	016 Move X22, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {32}
	021 Move X0, 0xDC7000
	022 Move X0, [X0+808]
	023 Call 0x1C17CF4
	024 Move X0, 0xDC7000
	025 Move X0, [X0+1416]
	026 Call 0x1C17CF4
	027 Move X0, 0xDC7000
	028 Move X0, [X0+2744]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X23+3675], W8
	032 Move X0, [X24]
	033 Move X23, 0xDC7000
	034 Move W8, [X0+224]
	035 Move X23, [X23+2744]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X1, [X23]
	040 Move W0, W19
	041 Move X2, X31
	042 Call DateTimeFormatInfo.ValidateStyles, X0, X1
	043 Compare X22, 0
	044 JumpIfEqual {73}
	045 Compare X21, 0
	046 JumpIfEqual {78}
	047 Move X23, 0x1078000
	048 Move W8, [X23+1890]
	049 Compare W8, 0
	050 JumpIfEqual {81}
	051 Compare X22, 0
	052 JumpIfEqual {88}
	053 Move X0, X22
	054 Move X1, X31
	055 Call String.GetRawStringData, X0
	056 Move W8, [X23+1890]
	057 Move W25, [X22+16]
	058 Move X22, X0
	059 Compare W8, 0
	060 JumpIfNotEqual {66}
	061 Move X0, 0xDB9000
	062 Move X0, [X0+656]
	063 Call 0x1C17CF4
	064 Move W8, 1
	065 Move [X23+1890], W8
	066 Compare X21, 0
	067 JumpIfEqual {91}
	068 Move X0, X21
	069 Move X1, X31
	070 Call String.GetRawStringData, X0
	071 Move W21, [X21+16]
	072 Move X23, X0
	073 Move W0, 48
	074 Move X1, X31
	075 Call ThrowHelper.ThrowArgumentNullException, X0
	076 Compare X21, 0
	077 JumpIfNotEqual {47}
	078 Move W0, 50
	079 Move X1, X31
	080 Call ThrowHelper.ThrowArgumentNullException, X0
	081 Move X0, 0xDB9000
	082 Move X0, [X0+656]
	083 Call 0x1C17CF4
	084 Move W8, 1
	085 Move [X23+1890], W8
	086 Compare X22, 0
	087 JumpIfNotEqual {53}
	088 Move W25, W31
	089 Compare X21, 0
	090 JumpIfNotEqual {68}
	091 Move X23, X31
	092 Move X0, [X24]
	093 Move X24, 0xDC7000
	094 Move W8, [X0+224]
	095 Move X24, [X24+1416]
	096 Compare W8, 0
	097 JumpIfNotEqual {99}
	098 Call 0x1C17DFC
	099 Move X0, X20
	100 Move X1, X31
	101 Call DateTimeFormatInfo.GetInstance, X0
	102 Move X8, [X24]
	103 Move X20, X0
	104 Move W9, [X8+224]
	105 Compare W9, 0
	106 JumpIfNotEqual {109}
	107 Move X0, X8
	108 Call 0x1C17DFC
	109 Move X0, X22
	110 Move X2, X23
	111 Move X3, X21
	112 Move X4, X20
	113 Move W5, W19
	114 Move X20, [X31+48]
	115 Move X19, [X31+56]
	116 Move X22, [X31+32]
	117 Move X21, [X31+40]
	118 Move X24, [X31+16]
	119 Move X23, [X31+24]
	120 Move W1, W25
	121 Move X30, [X31+64]
	122 Move X25, [X31+72]

Method: System.TimeSpan Subtract(System.DateTime value)

Disassembly:
	0x03362F58 LDR W8, [X0 + 0xE0]
	0x03362F5C CBNZ W8, 0x3362F64
	0x03362F60 BL 0x1C16DFC
	0x03362F64 AND X8, X19, 0x3FFFFFFF
	0x03362F68 SUBS X22, X8, X20
	0x03362F6C B.LT 0x3362FB4
	0x03362F70 MOVZ X9, 0xC001
	0x03362F74 MOVK X9, 0xBC80000
	0x03362F78 MOVK X9, 0xD78A
	0x03362F7C MOVK X9, 0xD4350000
	0x03362F80 ADD X8, X8, X9
	0x03362F84 CMP X8, X20
	0x03362F88 B.GT 0x3362FB4
	0x03362F8C LDR X0, [X21]
	0x03362F90 LDR W8, [X0 + 0xE0]
	0x03362F94 CBNZ W8, 0x3362F9C
	0x03362F98 BL 0x1C16DFC
	0x03362F9C AND X8, X19, 0xFFFFFFFFFFFFFFFF
	0x03362FA0 ORR X0, X22, X8, 0x0
	0x03362FA4 LDP X20, X19, [X31 + 0x20]
	0x03362FA8 LDP X22, X21, [X31 + 0x10]
	0x03362FAC LDR X30, [X31], #0x30
	0x03362FB0 RET
	0x03362FB4 ADRP X0, 0xD99000
	0x03362FB8 LDR X0, [X0 + 0x760]
	0x03362FBC BL 0x1C16D08
	0x03362FC0 BL 0x1C16F10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x107B000
	007 Move X22, 0xD93000
	008 Move W8, [X21+3676]
	009 Move X22, [X22+2544]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xD93000
	017 Move X0, [X0+2544]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3676], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X8, [X20]
	027 And X9, X19, 0x3FFFFFFF
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 And X8, X8, 0x3FFFFFFF
	033 Subtract X0, X8, X9
	034 Move X30, [X31+48]
	035 Return X0

Method: System.DateTime ToLocalTime()

Disassembly:
	0x03362FC4 MOV X19, X0
	0x03362FC8 ADRP X0, 0xDC3000
	0x03362FCC LDR X0, [X0 + 0x718]
	0x03362FD0 BL 0x1C16D08
	0x03362FD4 MOV X20, X0
	0x03362FD8 ADRP X0, 0xDC8000
	0x03362FDC LDR X0, [X0 + 0x978]
	0x03362FE0 BL 0x1C16D08
	0x03362FE4 MOV X2, X0
	0x03362FE8 MOV X0, X19
	0x03362FEC MOV X1, X20
	0x03362FF0 MOV X3, X31
	0x03362FF4 BL 0x3311888
	0x03362FF8 ADRP X0, 0xDC8000
	0x03362FFC LDR X0, [X0 + 0xA38]
	0x03363000 BL 0x1C16D08
	0x03363004 MOV X1, X0
	0x03363008 MOV X0, X19
	0x0336300C BL 0x1C16DEC
	0x03363010 STR X30, [X31 - 0x30]!
	0x03363014 STP X22, X21, [X31 + 0x10]
	0x03363018 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x107B000
	006 Move X21, 0xD93000
	007 Move W8, [X20+3677]
	008 Move X21, [X21+2544]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD93000
	015 Move X0, [X0+2544]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3677], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move W1, W31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]

Method: System.DateTime ToLocalTime(System.Boolean throwOnOverflow)

Disassembly:
	0x0336301C ADRP X21, 0x1079000
	0x03363020 ADRP X22, 0xD91000
	0x03363024 LDRB W8, [X21 + 0xE6B]
	0x03363028 LDR X22, [X22 + 0x9F0]
	0x0336302C MOV X19, X1
	0x03363030 MOV X20, X0
	0x03363034 TBNZ X8, 0x0, 0x336304C
	0x03363038 ADRP X0, 0xD91000
	0x0336303C LDR X0, [X0 + 0x9F0]
	0x03363040 BL 0x1C16CF4
	0x03363044 MOVZ W8, 0x1
	0x03363048 STRB W8, [X21 + 0xE6B]
	0x0336304C LDR X0, [X22]
	0x03363050 LDR W8, [X0 + 0xE0]
	0x03363054 CBNZ W8, 0x336305C
	0x03363058 BL 0x1C16DFC
	0x0336305C AND X8, X20, 0x3FFFFFFF
	0x03363060 AND X9, X19, 0x3FFFFFFF
	0x03363064 LDP X20, X19, [X31 + 0x20]
	0x03363068 LDP X22, X21, [X31 + 0x10]
	0x0336306C SUB X0, X8, X9
	0x03363070 LDR X30, [X31], #0x30
	0x03363074 RET
	0x03363078 STR X30, [X31 - 0x30]!
	0x0336307C STP X22, X21, [X31 + 0x10]
	0x03363080 STP X20, X19, [X31 + 0x20]
	0x03363084 ADRP X21, 0x1079000
	0x03363088 ADRP X22, 0xD91000
	0x0336308C LDRB W8, [X21 + 0xE6C]
	0x03363090 LDR X22, [X22 + 0x9F0]
	0x03363094 MOV X19, X1
	0x03363098 MOV X20, X0
	0x0336309C TBNZ X8, 0x0, 0x33630B4
	0x033630A0 ADRP X0, 0xD91000
	0x033630A4 LDR X0, [X0 + 0x9F0]
	0x033630A8 BL 0x1C16CF4
	0x033630AC MOVZ W8, 0x1
	0x033630B0 STRB W8, [X21 + 0xE6C]
	0x033630B4 LDR X0, [X22]
	0x033630B8 LDR W8, [X0 + 0xE0]
	0x033630BC CBNZ W8, 0x33630C4
	0x033630C0 BL 0x1C16DFC
	0x033630C4 EOR X8, X19, X20, 0x0
	0x033630C8 LDP X20, X19, [X31 + 0x20]
	0x033630CC LDP X22, X21, [X31 + 0x10]
	0x033630D0 ANDS X31, X8, 0x3FFFFFFF
	0x033630D4 CSET W0, EQ
	0x033630D8 LDR X30, [X31], #0x30
	0x033630DC RET
	0x033630E0 STR X30, [X31 - 0x30]!
	0x033630E4 STP X22, X21, [X31 + 0x10]
	0x033630E8 STP X20, X19, [X31 + 0x20]
	0x033630EC ADRP X21, 0x1079000
	0x033630F0 ADRP X22, 0xD91000
	0x033630F4 LDRB W8, [X21 + 0xE6D]
	0x033630F8 LDR X22, [X22 + 0x9F0]
	0x033630FC MOV X19, X1
	0x03363100 MOV X20, X0
	0x03363104 TBNZ X8, 0x0, 0x336311C
	0x03363108 ADRP X0, 0xD91000
	0x0336310C LDR X0, [X0 + 0x9F0]
	0x03363110 BL 0x1C16CF4
	0x03363114 MOVZ W8, 0x1
	0x03363118 STRB W8, [X21 + 0xE6D]
	0x0336311C LDR X0, [X22]
	0x03363120 LDR W8, [X0 + 0xE0]
	0x03363124 CBNZ W8, 0x336312C
	0x03363128 BL 0x1C16DFC
	0x0336312C EOR X8, X19, X20, 0x0
	0x03363130 LDP X20, X19, [X31 + 0x20]
	0x03363134 LDP X22, X21, [X31 + 0x10]
	0x03363138 ANDS X31, X8, 0x3FFFFFFF
	0x0336313C CSET W0, NE
	0x03363140 LDR X30, [X31], #0x30
	0x03363144 RET
	0x03363148 STR X30, [X31 - 0x30]!
	0x0336314C STP X22, X21, [X31 + 0x10]
	0x03363150 STP X20, X19, [X31 + 0x20]
	0x03363154 ADRP X21, 0x1079000
	0x03363158 ADRP X22, 0xD91000
	0x0336315C LDRB W8, [X21 + 0xE6E]
	0x03363160 LDR X22, [X22 + 0x9F0]
	0x03363164 MOV X19, X1
	0x03363168 MOV X20, X0
	0x0336316C TBNZ X8, 0x0, 0x3363184
	0x03363170 ADRP X0, 0xD91000
	0x03363174 LDR X0, [X0 + 0x9F0]
	0x03363178 BL 0x1C16CF4
	0x0336317C MOVZ W8, 0x1
	0x03363180 STRB W8, [X21 + 0xE6E]
	0x03363184 LDR X0, [X22]
	0x03363188 LDR W8, [X0 + 0xE0]
	0x0336318C CBNZ W8, 0x3363194
	0x03363190 BL 0x1C16DFC
	0x03363194 AND X8, X20, 0x3FFFFFFF
	0x03363198 AND X9, X19, 0x3FFFFFFF
	0x0336319C LDP X20, X19, [X31 + 0x20]
	0x033631A0 LDP X22, X21, [X31 + 0x10]
	0x033631A4 CMP X8, X9
	0x033631A8 CSET W0, CC
	0x033631AC LDR X30, [X31], #0x30
	0x033631B0 RET
	0x033631B4 STR X30, [X31 - 0x30]!
	0x033631B8 STP X22, X21, [X31 + 0x10]
	0x033631BC STP X20, X19, [X31 + 0x20]
	0x033631C0 ADRP X21, 0x1079000
	0x033631C4 ADRP X22, 0xD91000
	0x033631C8 LDRB W8, [X21 + 0xE6F]
	0x033631CC LDR X22, [X22 + 0x9F0]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X21, 0x107A000
	008 Move X22, 0xD92000
	009 Move W8, [X21+3678]
	010 Move X22, [X22+2544]
	011 Move W19, W1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0xD92000
	018 Move X0, [X0+2544]
	019 Call 0x1C17CF4
	020 Move X0, 0xD93000
	021 Move X0, [X0+1392]
	022 Call 0x1C17CF4
	023 Move X0, 0xDC5000
	024 Move X0, [X0+2616]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+3678], W8
	028 Move X0, [X22]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X20
	034 Call DateTime.get_Kind, X0
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X0, [X20]
	037 Move X8, 0xDC5000
	038 Move X8, [X8+2616]
	039 Move [X31+12], W31
	040 Move [X31+8], W31
	041 Move X21, [X20]
	042 Move X0, [X8]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X0, X31
	048 Call TimeZoneInfo.get_Local
	049 Move X1, X0
	050 Add X2, X31, 12
	051 Add X3, X31, 8
	052 Move X0, X21
	053 Move X4, X31
	054 Call TimeZoneInfo.GetUtcOffsetFromUtc, X0, X1, X2, X3
	055 Move X8, 0xD93000
	056 Move X8, [X8+1392]
	057 Move X21, X0
	058 Move X8, [X8]
	059 Move W9, [X8+224]
	060 Compare W9, 0
	061 JumpIfNotEqual {64}
	062 Move X0, X8
	063 Call 0x1C17DFC
	064 Move X0, [X22]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Move X0, X20
	070 Call DateTime.get_Ticks, X0
	071 Move X8, 0x4000
	072 NotImplemented "Instruction MOVK not yet implemented."
	073 NotImplemented "Instruction MOVK not yet implemented."
	074 Add X1, X0, X21
	075 NotImplemented "Instruction MOVK not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move TEMP, X1
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfEqual {94}
	081 Move W3, [X31+8]
	082 Add X0, X31, 24
	083 Move [X31+24], X31
	084 Call DateTime..ctor, X0, X1, X2, X3
	085 Move X0, [X31+24]
	086 Move TEMP, X19
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfEqual {107}
	090 Move X0, 0x3FFF
	091 NotImplemented "Instruction MOVK not yet implemented."
	092 NotImplemented "Instruction MOVK not yet implemented."
	093 NotImplemented "Instruction MOVK not yet implemented."
	094 Move TEMP, X19
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfEqual {107}
	098 Move X0, 0x80000000
	099 Move [X31+24], X0
	100 Move X20, [X31+48]
	101 Move X19, [X31+56]
	102 Move X22, [X31+32]
	103 Move X21, [X31+40]
	104 Move X30, [X31+16]
	105 Add X31, X31, 64
	106 Return X0
	107 Move X0, 0xD99000
	108 Move X0, [X0+1400]
	109 Call 0x1C17D08
	110 Call 0x1C17F10
	111 Move X19, X0
	112 Move X0, 0xDBB000
	113 Move X0, [X0+3808]
	114 Call 0x1C17D08
	115 Move X1, X0
	116 Move X0, X19
	117 Move X2, X31
	118 Call ArgumentException..ctor, X0, X1
	119 Move X0, 0xDC8000
	120 Move X0, [X0+2600]
	121 Call 0x1C17D08
	122 Move X1, X0
	123 Move X0, X19
	124 Call 0x1C17DEC

Method: System.String ToString()

Disassembly:
	0x033631D0 MOV X19, X1
	0x033631D4 MOV X20, X0
	0x033631D8 TBNZ X8, 0x0, 0x33631F0
	0x033631DC ADRP X0, 0xD91000
	0x033631E0 LDR X0, [X0 + 0x9F0]
	0x033631E4 BL 0x1C16CF4
	0x033631E8 MOVZ W8, 0x1
	0x033631EC STRB W8, [X21 + 0xE6F]
	0x033631F0 LDR X0, [X22]
	0x033631F4 LDR W8, [X0 + 0xE0]
	0x033631F8 CBNZ W8, 0x3363200
	0x033631FC BL 0x1C16DFC
	0x03363200 AND X8, X20, 0x3FFFFFFF
	0x03363204 AND X9, X19, 0x3FFFFFFF
	0x03363208 LDP X20, X19, [X31 + 0x20]
	0x0336320C LDP X22, X21, [X31 + 0x10]
	0x03363210 CMP X8, X9
	0x03363214 CSET W0, LS
	0x03363218 LDR X30, [X31], #0x30
	0x0336321C RET
	0x03363220 STR X30, [X31 - 0x30]!
	0x03363224 STP X22, X21, [X31 + 0x10]
	0x03363228 STP X20, X19, [X31 + 0x20]
	0x0336322C ADRP X21, 0x1079000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x107A000
	006 Move X20, 0xDC6000
	007 Move W8, [X21+3679]
	008 Move X20, [X20+1352]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDC6000
	015 Move X0, [X0+1352]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3679], W8
	019 Move X0, [X20]
	020 Move X19, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X2, X31
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]

Method: System.String ToString(System.String format)

Disassembly:
	0x033632A8 MOV X19, X1
	0x033632AC MOV X20, X0
	0x033632B0 TBNZ X8, 0x0, 0x33632C8
	0x033632B4 ADRP X0, 0xD91000
	0x033632B8 LDR X0, [X0 + 0x9F0]
	0x033632BC BL 0x1C16CF4
	0x033632C0 MOVZ W8, 0x1
	0x033632C4 STRB W8, [X21 + 0xE71]
	0x033632C8 LDR X0, [X22]
	0x033632CC LDR W8, [X0 + 0xE0]
	0x033632D0 CBNZ W8, 0x33632D8
	0x033632D4 BL 0x1C16DFC
	0x033632D8 AND X8, X20, 0x3FFFFFFF
	0x033632DC AND X9, X19, 0x3FFFFFFF
	0x033632E0 LDP X20, X19, [X31 + 0x20]
	0x033632E4 LDP X22, X21, [X31 + 0x10]
	0x033632E8 CMP X8, X9
	0x033632EC CSET W0, CS
	0x033632F0 LDR X30, [X31], #0x30
	0x033632F4 RET
	0x033632F8 MOVZ W0, 0x10
	0x033632FC RET
	0x03363300 STR X30, [X31 - 0x20]!
	0x03363304 STP X20, X19, [X31 + 0x10]
	0x03363308 ADRP X0, 0xDC5000
	0x0336330C LDR X0, [X0 + 0x30]
	0x03363310 BL 0x1C16D08

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x107A000
	007 Move X21, 0xDC6000
	008 Move W8, [X22+3680]
	009 Move X21, [X21+1352]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xDC6000
	017 Move X0, [X0+1352]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3680], W8
	021 Move X0, [X21]
	022 Move X20, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X20
	028 Move X1, X19
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X2, X31
	034 Move X30, [X31+48]
	035 Call DateTimeFormat.Format, X0, X1, X2
	036 Return X0

Method: System.String ToString(System.IFormatProvider provider)

Disassembly:
	0x03363314 MOV X19, X0
	0x03363318 ADRP X0, 0xDC2000
	0x0336331C LDR X0, [X0 + 0x98]
	0x03363320 BL 0x1C16D08
	0x03363324 MOV X20, X0
	0x03363328 ADRP X0, 0xDC2000
	0x0336332C LDR X0, [X0 + 0xA8]
	0x03363330 BL 0x1C16D08
	0x03363334 MOV X2, X0
	0x03363338 MOV X0, X19
	0x0336333C MOV X1, X20
	0x03363340 MOV X3, X31
	0x03363344 BL 0x320A264
	0x03363348 MOV X19, X0
	0x0336334C ADRP X0, 0xD98000
	0x03363350 LDR X0, [X0 + 0xC08]
	0x03363354 BL 0x1C16D08
	0x03363358 BL 0x1C16F10
	0x0336335C MOV X1, X19
	0x03363360 MOV X2, X31
	0x03363364 MOV X20, X0
	0x03363368 BL 0x337B498
	0x0336336C ADRP X0, 0xDC7000
	0x03363370 LDR X0, [X0 + 0xA40]
	0x03363374 BL 0x1C16D08
	0x03363378 MOV X1, X0
	0x0336337C MOV X0, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x107A000
	007 Move X21, 0xDC6000
	008 Move W8, [X22+3681]
	009 Move X21, [X21+1352]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xDC6000
	017 Move X0, [X0+1352]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3681], W8
	021 Move X0, [X21]
	022 Move X20, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X20
	028 Move X2, X19
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X1, X31
	034 Move X30, [X31+48]
	035 Call DateTimeFormat.Format, X0, X1, X2
	036 Return X0

Method: System.String ToString(System.String format, System.IFormatProvider provider)

Disassembly:
	0x03363380 BL 0x1C16DEC
	0x03363384 STR X30, [X31 - 0x20]!
	0x03363388 STP X20, X19, [X31 + 0x10]
	0x0336338C ADRP X0, 0xDC5000
	0x03363390 LDR X0, [X0 + 0x30]
	0x03363394 BL 0x1C16D08
	0x03363398 MOV X19, X0
	0x0336339C ADRP X0, 0xDC2000
	0x033633A0 LDR X0, [X0 + 0x98]
	0x033633A4 BL 0x1C16D08
	0x033633A8 MOV X20, X0
	0x033633AC ADRP X0, 0xDC2000
	0x033633B0 LDR X0, [X0 + 0xE0]
	0x033633B4 BL 0x1C16D08
	0x033633B8 MOV X2, X0
	0x033633BC MOV X0, X19
	0x033633C0 MOV X1, X20
	0x033633C4 MOV X3, X31
	0x033633C8 BL 0x320A264
	0x033633CC MOV X19, X0
	0x033633D0 ADRP X0, 0xD98000
	0x033633D4 LDR X0, [X0 + 0xC08]
	0x033633D8 BL 0x1C16D08
	0x033633DC BL 0x1C16F10
	0x033633E0 MOV X1, X19
	0x033633E4 MOV X2, X31
	0x033633E8 MOV X20, X0
	0x033633EC BL 0x337B498

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x107A000
	008 Move X22, 0xDC6000
	009 Move W8, [X23+3682]
	010 Move X22, [X22+1352]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xDC6000
	019 Move X0, [X0+1352]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+3682], W8
	023 Move X0, [X22]
	024 Move X21, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X21
	030 Move X1, X20
	031 Move X2, X19
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X30, [X31+48]
	037 Move X23, [X31+56]
	038 Call DateTimeFormat.Format, X0, X1, X2
	039 Return X0

Method: System.Boolean TryFormat(System.Span`1<System.Char> destination, out System.Int32 charsWritten, System.ReadOnlySpan`1<System.Char> format = null, System.IFormatProvider provider = null)

Disassembly:
	0x033633F0 ADRP X0, 0xDC7000
	0x033633F4 LDR X0, [X0 + 0xA48]
	0x033633F8 BL 0x1C16D08
	0x033633FC MOV X1, X0
	0x03363400 MOV X0, X20
	0x03363404 BL 0x1C16DEC
	0x03363408 STR X30, [X31 - 0x20]!
	0x0336340C STP X20, X19, [X31 + 0x10]
	0x03363410 ADRP X0, 0xDC5000
	0x03363414 LDR X0, [X0 + 0x30]
	0x03363418 BL 0x1C16D08
	0x0336341C MOV X19, X0
	0x03363420 ADRP X0, 0xDC2000
	0x03363424 LDR X0, [X0 + 0x98]
	0x03363428 BL 0x1C16D08
	0x0336342C MOV X20, X0
	0x03363430 ADRP X0, 0xDC2000
	0x03363434 LDR X0, [X0 + 0xB0]
	0x03363438 BL 0x1C16D08
	0x0336343C MOV X2, X0
	0x03363440 MOV X0, X19
	0x03363444 MOV X1, X20
	0x03363448 MOV X3, X31
	0x0336344C BL 0x320A264
	0x03363450 MOV X19, X0
	0x03363454 ADRP X0, 0xD98000
	0x03363458 LDR X0, [X0 + 0xC08]
	0x0336345C BL 0x1C16D08
	0x03363460 BL 0x1C16F10
	0x03363464 MOV X1, X19
	0x03363468 MOV X2, X31
	0x0336346C MOV X20, X0
	0x03363470 BL 0x337B498
	0x03363474 ADRP X0, 0xDC7000
	0x03363478 LDR X0, [X0 + 0xA50]
	0x0336347C BL 0x1C16D08
	0x03363480 MOV X1, X0
	0x03363484 MOV X0, X20
	0x03363488 BL 0x1C16DEC
	0x0336348C STR X30, [X31 - 0x20]!

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X27, 0x107A000
	012 Move X26, 0xDC6000
	013 Move W8, [X27+3683]
	014 Move X26, [X26+1352]
	015 Move X19, X6
	016 Move X20, X5
	017 Move X21, X4
	018 Move X22, X3
	019 Move X23, X2
	020 Move X24, X1
	021 Move X25, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0xDC6000
	027 Move X0, [X0+1352]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X27+3683], W8
	031 Move X0, [X26]
	032 Move X25, [X25]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X25
	038 Move X1, X24
	039 Move X2, X23
	040 Move X3, X22
	041 Move X4, X21
	042 Move X5, X20
	043 Move X6, X19
	044 Move X20, [X31+64]
	045 Move X19, [X31+72]
	046 Move X22, [X31+48]
	047 Move X21, [X31+56]
	048 Move X24, [X31+32]
	049 Move X23, [X31+40]
	050 Move X26, [X31+16]
	051 Move X25, [X31+24]
	052 Move X30, [X31+80]
	053 Move X27, [X31+88]

Method: System.DateTime ToUniversalTime()

Disassembly:
	0x03363548 MOV X0, X19
	0x0336354C MOV X1, X20
	0x03363550 MOV X3, X31
	0x03363554 BL 0x320A264
	0x03363558 MOV X19, X0
	0x0336355C ADRP X0, 0xD98000
	0x03363560 LDR X0, [X0 + 0xC08]
	0x03363564 BL 0x1C16D08
	0x03363568 BL 0x1C16F10
	0x0336356C MOV X1, X19
	0x03363570 MOV X2, X31
	0x03363574 MOV X20, X0
	0x03363578 BL 0x337B498
	0x0336357C ADRP X0, 0xDC7000
	0x03363580 LDR X0, [X0 + 0xA60]
	0x03363584 BL 0x1C16D08
	0x03363588 MOV X1, X0
	0x0336358C MOV X0, X20
	0x03363590 BL 0x1C16DEC
	0x03363594 STR X30, [X31 - 0x20]!
	0x03363598 STP X20, X19, [X31 + 0x10]
	0x0336359C ADRP X0, 0xDC5000
	0x033635A0 LDR X0, [X0 + 0x30]
	0x033635A4 BL 0x1C16D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x107A000
	006 Move X20, 0xDC5000
	007 Move W8, [X21+3684]
	008 Move X20, [X20+2616]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDC5000
	015 Move X0, [X0+2616]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3684], W8
	019 Move X0, [X20]
	020 Move X19, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move W1, 2
	029 Move X2, X31
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Call TimeZoneInfo.ConvertTimeToUtc, X0, X1
	033 Return X0

Method: System.Boolean TryParse(System.String s, out System.DateTime result)

Disassembly:
	0x033635A8 MOV X19, X0
	0x033635AC ADRP X0, 0xDC2000
	0x033635B0 LDR X0, [X0 + 0x98]
	0x033635B4 BL 0x1C16D08
	0x033635B8 MOV X20, X0
	0x033635BC ADRP X0, 0xDC2000
	0x033635C0 LDR X0, [X0 + 0x90]
	0x033635C4 BL 0x1C16D08
	0x033635C8 MOV X2, X0
	0x033635CC MOV X0, X19
	0x033635D0 MOV X1, X20
	0x033635D4 MOV X3, X31
	0x033635D8 BL 0x320A264
	0x033635DC MOV X19, X0
	0x033635E0 ADRP X0, 0xD98000
	0x033635E4 LDR X0, [X0 + 0xC08]
	0x033635E8 BL 0x1C16D08
	0x033635EC BL 0x1C16F10
	0x033635F0 MOV X1, X19
	0x033635F4 MOV X2, X31
	0x033635F8 MOV X20, X0
	0x033635FC BL 0x337B498
	0x03363600 ADRP X0, 0xDC7000
	0x03363604 LDR X0, [X0 + 0xA68]
	0x03363608 BL 0x1C16D08
	0x0336360C MOV X1, X0
	0x03363610 MOV X0, X20
	0x03363614 BL 0x1C16DEC
	0x03363618 STR X30, [X31 - 0x20]!
	0x0336361C STP X20, X19, [X31 + 0x10]
	0x03363620 ADRP X0, 0xDC5000
	0x03363624 LDR X0, [X0 + 0x30]
	0x03363628 BL 0x1C16D08
	0x0336362C MOV X19, X0
	0x03363630 ADRP X0, 0xDC2000
	0x03363634 LDR X0, [X0 + 0x98]
	0x03363638 BL 0x1C16D08
	0x0336363C MOV X20, X0
	0x03363640 ADRP X0, 0xDC2000
	0x03363644 LDR X0, [X0 + 0xD8]
	0x03363648 BL 0x1C16D08
	0x0336364C MOV X2, X0
	0x03363650 MOV X0, X19
	0x03363654 MOV X1, X20
	0x03363658 MOV X3, X31
	0x0336365C BL 0x320A264
	0x03363660 MOV X19, X0
	0x03363664 ADRP X0, 0xD98000
	0x03363668 LDR X0, [X0 + 0xC08]
	0x0336366C BL 0x1C16D08
	0x03363670 BL 0x1C16F10
	0x03363674 MOV X1, X19
	0x03363678 MOV X2, X31
	0x0336367C MOV X20, X0
	0x03363680 BL 0x337B498
	0x03363684 ADRP X0, 0xDC7000
	0x03363688 LDR X0, [X0 + 0xA70]
	0x0336368C BL 0x1C16D08
	0x03363690 MOV X1, X0
	0x03363694 MOV X0, X20
	0x03363698 BL 0x1C16DEC
	0x0336369C STR X30, [X31 - 0x20]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x107A000
	007 Move W8, [X21+3685]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xDC6000
	015 Move X0, [X0+808]
	016 Call 0x1C17CF4
	017 Move X0, 0xDC6000
	018 Move X0, [X0+1416]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3685], W8
	022 Compare X20, 0
	023 JumpIfEqual {67}
	024 Move X22, 0x1077000
	025 Move X21, 0xDC6000
	026 Move W8, [X22+1890]
	027 Move X21, [X21+808]
	028 Compare W8, 0
	029 JumpIfNotEqual {35}
	030 Move X0, 0xDB8000
	031 Move X0, [X0+656]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+1890], W8
	035 Move X22, 0xDC6000
	036 Move X22, [X22+1416]
	037 Move X0, X20
	038 Move X1, X31
	039 Call String.GetRawStringData, X0
	040 Move X8, [X21]
	041 Move W20, [X20+16]
	042 Move X21, X0
	043 Move W9, [X8+224]
	044 Compare W9, 0
	045 JumpIfNotEqual {48}
	046 Move X0, X8
	047 Call 0x1C17DFC
	048 Move X0, X31
	049 Call DateTimeFormatInfo.get_CurrentInfo
	050 Move X8, [X22]
	051 Move X22, X0
	052 Move W9, [X8+224]
	053 Compare W9, 0
	054 JumpIfNotEqual {57}
	055 Move X0, X8
	056 Call 0x1C17DFC
	057 Move X0, X21
	058 Move X1, X20
	059 Move X2, X22
	060 Move X4, X19
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X22, [X31+16]
	064 Move X21, [X31+24]
	065 Move W3, W31
	066 Move X30, [X31+48]
	067 Move [X19], X31
	068 Move X20, [X31+32]
	069 Move X19, [X31+40]
	070 Move X22, [X31+16]
	071 Move X21, [X31+24]
	072 Move W0, W31
	073 Move X30, [X31+48]
	074 Return X0

Method: System.Boolean TryParse(System.String s, System.IFormatProvider provider, System.Globalization.DateTimeStyles styles, out System.DateTime result)

Disassembly:
	0x033637B0 LDR X0, [X0 + 0x30]
	0x033637B4 BL 0x1C16D08
	0x033637B8 MOV X19, X0
	0x033637BC ADRP X0, 0xDC2000
	0x033637C0 LDR X0, [X0 + 0x98]
	0x033637C4 BL 0x1C16D08
	0x033637C8 MOV X20, X0
	0x033637CC ADRP X0, 0xDC2000
	0x033637D0 LDR X0, [X0 + 0xD0]
	0x033637D4 BL 0x1C16D08
	0x033637D8 MOV X2, X0
	0x033637DC MOV X0, X19
	0x033637E0 MOV X1, X20
	0x033637E4 MOV X3, X31
	0x033637E8 BL 0x320A264
	0x033637EC MOV X19, X0
	0x033637F0 ADRP X0, 0xD98000
	0x033637F4 LDR X0, [X0 + 0xC08]
	0x033637F8 BL 0x1C16D08
	0x033637FC BL 0x1C16F10
	0x03363800 MOV X1, X19
	0x03363804 MOV X2, X31
	0x03363808 MOV X20, X0
	0x0336380C BL 0x337B498
	0x03363810 ADRP X0, 0xDC7000
	0x03363814 LDR X0, [X0 + 0xA88]
	0x03363818 BL 0x1C16D08
	0x0336381C MOV X1, X0
	0x03363820 MOV X0, X20
	0x03363824 BL 0x1C16DEC
	0x03363828 STR X30, [X31 - 0x20]!
	0x0336382C STP X20, X19, [X31 + 0x10]
	0x03363830 ADRP X0, 0xDC5000
	0x03363834 LDR X0, [X0 + 0x30]
	0x03363838 BL 0x1C16D08
	0x0336383C MOV X19, X0
	0x03363840 ADRP X0, 0xDC2000
	0x03363844 LDR X0, [X0 + 0x98]
	0x03363848 BL 0x1C16D08
	0x0336384C MOV X20, X0
	0x03363850 ADRP X0, 0xDC2000
	0x03363854 LDR X0, [X0 + 0xE8]
	0x03363858 BL 0x1C16D08
	0x0336385C MOV X2, X0
	0x03363860 MOV X0, X19
	0x03363864 MOV X1, X20
	0x03363868 MOV X3, X31
	0x0336386C BL 0x320A264
	0x03363870 MOV X19, X0
	0x03363874 ADRP X0, 0xD98000
	0x03363878 LDR X0, [X0 + 0xC08]
	0x0336387C BL 0x1C16D08
	0x03363880 BL 0x1C16F10
	0x03363884 MOV X1, X19
	0x03363888 MOV X2, X31
	0x0336388C MOV X20, X0
	0x03363890 BL 0x337B498
	0x03363894 ADRP X0, 0xDC7000
	0x03363898 LDR X0, [X0 + 0xA90]
	0x0336389C BL 0x1C16D08
	0x033638A0 MOV X1, X0
	0x033638A4 MOV X0, X20
	0x033638A8 BL 0x1C16DEC
	0x033638AC STR X30, [X31 - 0x20]!
	0x033638B0 STP X20, X19, [X31 + 0x10]
	0x033638B4 ADRP X0, 0xDC5000
	0x033638B8 LDR X0, [X0 + 0x30]
	0x033638BC BL 0x1C16D08
	0x033638C0 MOV X19, X0
	0x033638C4 ADRP X0, 0xDC2000
	0x033638C8 LDR X0, [X0 + 0x98]
	0x033638CC BL 0x1C16D08
	0x033638D0 MOV X20, X0
	0x033638D4 ADRP X0, 0xDC2000
	0x033638D8 LDR X0, [X0 + 0xF0]
	0x033638DC BL 0x1C16D08
	0x033638E0 MOV X2, X0
	0x033638E4 MOV X0, X19
	0x033638E8 MOV X1, X20
	0x033638EC MOV X3, X31
	0x033638F0 BL 0x320A264

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x107A000
	009 Move X23, 0xDC6000
	010 Move W8, [X24+3686]
	011 Move X23, [X23+808]
	012 Move X19, X3
	013 Move W20, W2
	014 Move X21, X1
	015 Move X22, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0xDC6000
	021 Move X0, [X0+808]
	022 Call 0x1C17CF4
	023 Move X0, 0xDC6000
	024 Move X0, [X0+1416]
	025 Call 0x1C17CF4
	026 Move X0, 0xDC8000
	027 Move X0, [X0+2584]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X24+3686], W8
	031 Move X0, [X23]
	032 Move X24, 0xDC8000
	033 Move W8, [X0+224]
	034 Move X24, [X24+2584]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X1, [X24]
	039 Move W0, W20
	040 Move X2, X31
	041 Call DateTimeFormatInfo.ValidateStyles, X0, X1
	042 Compare X22, 0
	043 JumpIfEqual {90}
	044 Move X24, 0x1077000
	045 Move W8, [X24+1890]
	046 Compare W8, 0
	047 JumpIfNotEqual {53}
	048 Move X0, 0xDB8000
	049 Move X0, [X0+656]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X24+1890], W8
	053 Move X24, 0xDC6000
	054 Move X24, [X24+1416]
	055 Move X0, X22
	056 Move X1, X31
	057 Call String.GetRawStringData, X0
	058 Move X8, [X23]
	059 Move W22, [X22+16]
	060 Move X23, X0
	061 Move W9, [X8+224]
	062 Compare W9, 0
	063 JumpIfNotEqual {66}
	064 Move X0, X8
	065 Call 0x1C17DFC
	066 Move X0, X21
	067 Move X1, X31
	068 Call DateTimeFormatInfo.GetInstance, X0
	069 Move X8, [X24]
	070 Move X21, X0
	071 Move W9, [X8+224]
	072 Compare W9, 0
	073 JumpIfNotEqual {76}
	074 Move X0, X8
	075 Call 0x1C17DFC
	076 Move X0, X23
	077 Move X1, X22
	078 Move X2, X21
	079 Move W3, W20
	080 Move X4, X19
	081 Move X20, [X31+48]
	082 Move X19, [X31+56]
	083 Move X22, [X31+32]
	084 Move X21, [X31+40]
	085 Move X24, [X31+16]
	086 Move X23, [X31+24]
	087 Move X30, [X31+64]
	088 Call DateTimeParse.TryParse, X0, X1, X2, X3
	089 Return X0
	090 Move [X19], X31
	091 Move X20, [X31+48]
	092 Move X19, [X31+56]
	093 Move X22, [X31+32]
	094 Move X21, [X31+40]
	095 Move X24, [X31+16]
	096 Move X23, [X31+24]
	097 Move W0, W31
	098 Move X30, [X31+64]
	099 Return X0

Method: System.Boolean TryParseExact(System.String s, System.String format, System.IFormatProvider provider, System.Globalization.DateTimeStyles style, out System.DateTime result)

Disassembly:
	0x033638F4 MOV X19, X0
	0x033638F8 ADRP X0, 0xD98000
	0x033638FC LDR X0, [X0 + 0xC08]
	0x03363900 BL 0x1C16D08
	0x03363904 BL 0x1C16F10
	0x03363908 MOV X1, X19
	0x0336390C MOV X2, X31
	0x03363910 MOV X20, X0
	0x03363914 BL 0x337B498
	0x03363918 ADRP X0, 0xDC7000
	0x0336391C LDR X0, [X0 + 0xA98]
	0x03363920 BL 0x1C16D08
	0x03363924 MOV X1, X0
	0x03363928 MOV X0, X20
	0x0336392C BL 0x1C16DEC
	0x03363930 STR X30, [X31 - 0x20]!
	0x03363934 STP X20, X19, [X31 + 0x10]
	0x03363938 ADRP X0, 0xDC5000
	0x0336393C LDR X0, [X0 + 0x30]
	0x03363940 BL 0x1C16D08
	0x03363944 MOV X19, X0
	0x03363948 ADRP X0, 0xDC2000
	0x0336394C LDR X0, [X0 + 0x98]
	0x03363950 BL 0x1C16D08
	0x03363954 MOV X20, X0
	0x03363958 ADRP X0, 0xDC2000
	0x0336395C LDR X0, [X0 + 0xA0]
	0x03363960 BL 0x1C16D08
	0x03363964 MOV X2, X0
	0x03363968 MOV X0, X19
	0x0336396C MOV X1, X20
	0x03363970 MOV X3, X31
	0x03363974 BL 0x320A264
	0x03363978 MOV X19, X0
	0x0336397C ADRP X0, 0xD98000
	0x03363980 LDR X0, [X0 + 0xC08]
	0x03363984 BL 0x1C16D08
	0x03363988 BL 0x1C16F10
	0x0336398C MOV X1, X19
	0x03363990 MOV X2, X31
	0x03363994 MOV X20, X0
	0x03363998 BL 0x337B498
	0x0336399C ADRP X0, 0xDC7000
	0x033639A0 LDR X0, [X0 + 0xAA0]
	0x033639A4 BL 0x1C16D08
	0x033639A8 MOV X1, X0
	0x033639AC MOV X0, X20
	0x033639B0 BL 0x1C16DEC
	0x033639B4 LDR X0, [X0]
	0x033639B8 RET
	0x033639BC STR X30, [X31 - 0x40]!
	0x033639C0 STP X24, X23, [X31 + 0x10]
	0x033639C4 STP X22, X21, [X31 + 0x20]
	0x033639C8 STP X20, X19, [X31 + 0x30]
	0x033639CC ADRP X24, 0x1079000
	0x033639D0 ADRP X23, 0xD91000
	0x033639D4 ADRP X22, 0xD99000
	0x033639D8 LDRB W8, [X24 + 0xE72]
	0x033639DC LDR X23, [X23 + 0x9F0]
	0x033639E0 LDR X22, [X22 + 0x9E8]
	0x033639E4 MOV X19, X2
	0x033639E8 MOV X20, X1
	0x033639EC MOV X21, X0
	0x033639F0 TBNZ X8, 0x0, 0x3363A14
	0x033639F4 ADRP X0, 0xD99000
	0x033639F8 LDR X0, [X0 + 0x9E8]
	0x033639FC BL 0x1C16CF4
	0x03363A00 ADRP X0, 0xD91000
	0x03363A04 LDR X0, [X0 + 0x9F0]
	0x03363A08 BL 0x1C16CF4
	0x03363A0C MOVZ W8, 0x1
	0x03363A10 STRB W8, [X24 + 0xE72]
	0x03363A14 LDR X8, [X21]
	0x03363A18 LDR X0, [X23]
	0x03363A1C ADD X1, X31, 0x8
	0x03363A20 STR X8, [X31 + 0x8]
	0x03363A24 BL 0x1C16E04
	0x03363A28 LDR X8, [X22]
	0x03363A2C MOV X21, X0
	0x03363A30 LDR W9, [X8 + 0xE0]
	0x03363A34 CBNZ W9, 0x3363A40
	0x03363A38 MOV X0, X8
	0x03363A3C BL 0x1C16DFC
	0x03363A40 MOV X0, X21
	0x03363A44 MOV X1, X20
	0x03363A48 MOV X2, X19
	0x03363A4C MOV X3, X31
	0x03363A50 BL 0x3318718
	0x03363A54 LDP X20, X19, [X31 + 0x30]
	0x03363A58 LDP X22, X21, [X31 + 0x20]
	0x03363A5C LDP X24, X23, [X31 + 0x10]
	0x03363A60 LDR X30, [X31], #0x40
	0x03363A64 RET
	0x03363A68 SUB X31, X31, 0x70
	0x03363A6C STP X29, X30, [X31 + 0x10]
	0x03363A70 STP X28, X27, [X31 + 0x20]
	0x03363A74 STP X26, X25, [X31 + 0x30]
	0x03363A78 STP X24, X23, [X31 + 0x40]
	0x03363A7C STP X22, X21, [X31 + 0x50]
	0x03363A80 STP X20, X19, [X31 + 0x60]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X24, 0x107A000
	011 Move X25, 0xDC6000
	012 Move W8, [X24+3687]
	013 Move X25, [X25+808]
	014 Move X19, X4
	015 Move W20, W3
	016 Move X21, X2
	017 Move X22, X1
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {34}
	023 Move X0, 0xDC6000
	024 Move X0, [X0+808]
	025 Call 0x1C17CF4
	026 Move X0, 0xDC6000
	027 Move X0, [X0+1416]
	028 Call 0x1C17CF4
	029 Move X0, 0xDC6000
	030 Move X0, [X0+2744]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X24+3687], W8
	034 Move X0, [X25]
	035 Move X24, 0xDC6000
	036 Move W8, [X0+224]
	037 Move X24, [X24+2744]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X1, [X24]
	042 Move W0, W20
	043 Move X2, X31
	044 Call DateTimeFormatInfo.ValidateStyles, X0, X1
	045 Compare X23, 0
	046 JumpIfEqual {110}
	047 Compare X22, 0
	048 JumpIfEqual {110}
	049 Move X26, 0x1077000
	050 Move W8, [X26+1890]
	051 Compare W8, 0
	052 JumpIfNotEqual {58}
	053 Move X0, 0xDB8000
	054 Move X0, [X0+656]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X26+1890], W8
	058 Move X0, X23
	059 Move X1, X31
	060 Call String.GetRawStringData, X0
	061 Move W8, [X26+1890]
	062 Move W23, [X23+16]
	063 Move X24, X0
	064 Compare W8, 0
	065 JumpIfNotEqual {71}
	066 Move X0, 0xDB8000
	067 Move X0, [X0+656]
	068 Call 0x1C17CF4
	069 Move W8, 1
	070 Move [X26+1890], W8
	071 Move X26, 0xDC6000
	072 Move X26, [X26+1416]
	073 Move X0, X22
	074 Move X1, X31
	075 Call String.GetRawStringData, X0
	076 Move X8, [X25]
	077 Move W22, [X22+16]
	078 Move X25, X0
	079 Move W9, [X8+224]
	080 Compare W9, 0
	081 JumpIfNotEqual {84}
	082 Move X0, X8
	083 Call 0x1C17DFC
	084 Move X0, X21
	085 Move X1, X31
	086 Call DateTimeFormatInfo.GetInstance, X0
	087 Move X8, [X26]
	088 Move X21, X0
	089 Move W9, [X8+224]
	090 Compare W9, 0
	091 JumpIfNotEqual {94}
	092 Move X0, X8
	093 Call 0x1C17DFC
	094 Move X0, X24
	095 Move X1, X23
	096 Move X2, X25
	097 Move X3, X22
	098 Move X4, X21
	099 Move W5, W20
	100 Move X6, X19
	101 Move X20, [X31+64]
	102 Move X19, [X31+72]
	103 Move X22, [X31+48]
	104 Move X21, [X31+56]
	105 Move X24, [X31+32]
	106 Move X23, [X31+40]
	107 Move X26, [X31+16]
	108 Move X25, [X31+24]
	109 Move X30, [X31+80]
	110 Move [X19], X31
	111 Move X20, [X31+64]
	112 Move X19, [X31+72]
	113 Move X22, [X31+48]
	114 Move X21, [X31+56]
	115 Move X24, [X31+32]
	116 Move X23, [X31+40]
	117 Move X26, [X31+16]
	118 Move X25, [X31+24]
	119 Move W0, W31
	120 Move X30, [X31+80]
	121 Return X0

Method: System.Boolean TryParseExact(System.String s, System.String[] formats, System.IFormatProvider provider, System.Globalization.DateTimeStyles style, out System.DateTime result)

Disassembly:
	0x03363BAC CMP W9, W24
	0x03363BB0 B.LT 0x3363C30
	0x03363BB4 LDR W9, [X8 + 0xE0]
	0x03363BB8 CBNZ W9, 0x3363BC4
	0x03363BBC MOV X0, X8
	0x03363BC0 BL 0x1C16DFC
	0x03363BC4 MOV W0, W26
	0x03363BC8 MOV W1, W25
	0x03363BCC MOV W2, W24
	0x03363BD0 BL 0x335F144
	0x03363BD4 MOV X24, X0
	0x03363BD8 MOV W0, W23
	0x03363BDC MOV W1, W22
	0x03363BE0 MOV W2, W21
	0x03363BE4 BL 0x335F3A8
	0x03363BE8 MOVZ W8, 0x2710
	0x03363BEC UMADDL X8, X20, X8, X24
	0x03363BF0 ADD X1, X8, X0
	0x03363BF4 MOVZ X8, 0x3FFF
	0x03363BF8 MOVK X8, 0xF4370000
	0x03363BFC MOVK X8, 0x2875
	0x03363C00 MOVK X8, 0x2BCA0000
	0x03363C04 CMP X1, X8
	0x03363C08 B.HI 0x3363C2C
	0x03363C0C ADD X0, X31, 0x8
	0x03363C10 MOV W2, W31
	0x03363C14 STR X31, [X31 + 0x8]
	0x03363C18 BL 0x335EF44
	0x03363C1C LDR X8, [X31 + 0x8]
	0x03363C20 MOVZ W0, 0x1
	0x03363C24 STR X8, [X19]
	0x03363C28 B 0x3363C30
	0x03363C2C MOV W0, W31
	0x03363C30 LDP X20, X19, [X31 + 0x60]
	0x03363C34 LDP X22, X21, [X31 + 0x50]
	0x03363C38 LDP X24, X23, [X31 + 0x40]
	0x03363C3C LDP X26, X25, [X31 + 0x30]
	0x03363C40 LDP X28, X27, [X31 + 0x20]
	0x03363C44 LDP X29, X30, [X31 + 0x10]
	0x03363C48 ADD X31, X31, 0x70
	0x03363C4C RET
	0x03363C50 BL 0x1C16F28
	0x03363C54 BL 0x1C16F20
	0x03363C58 B 0x1C25758
	0x03363C5C LDR X0, [X0]
	0x03363C60 RET
	0x03363C64 STP X30, X23, [X31 - 0x30]!
	0x03363C68 STP X22, X21, [X31 + 0x10]
	0x03363C6C STP X20, X19, [X31 + 0x20]
	0x03363C70 ADRP X23, 0x1079000
	0x03363C74 ADRP X22, 0xD91000
	0x03363C78 ADRP X19, 0xDC5000
	0x03363C7C ADRP X20, 0xD91000
	0x03363C80 ADRP X21, 0xDC5000
	0x03363C84 LDRB W8, [X23 + 0xE75]
	0x03363C88 LDR X22, [X22 + 0xE58]
	0x03363C8C LDR X19, [X19 + 0x908]
	0x03363C90 LDR X20, [X20 + 0x9F0]
	0x03363C94 LDR X21, [X21 + 0x910]
	0x03363C98 TBNZ X8, 0x0, 0x3363CD4
	0x03363C9C ADRP X0, 0xD91000
	0x03363CA0 LDR X0, [X0 + 0x9F0]
	0x03363CA4 BL 0x1C16CF4
	0x03363CA8 ADRP X0, 0xD91000
	0x03363CAC LDR X0, [X0 + 0xE58]
	0x03363CB0 BL 0x1C16CF4
	0x03363CB4 ADRP X0, 0xDC5000
	0x03363CB8 LDR X0, [X0 + 0x908]
	0x03363CBC BL 0x1C16CF4
	0x03363CC0 ADRP X0, 0xDC5000
	0x03363CC4 LDR X0, [X0 + 0x910]
	0x03363CC8 BL 0x1C16CF4
	0x03363CCC MOVZ W8, 0x1
	0x03363CD0 STRB W8, [X23 + 0xE75]
	0x03363CD4 LDR X0, [X22]
	0x03363CD8 MOVZ W1, 0xD
	0x03363CDC BL 0x1C16D6C
	0x03363CE0 LDR X1, [X19]
	0x03363CE4 MOV X2, X31
	0x03363CE8 MOV X19, X0
	0x03363CEC BL 0x32C5BD8
	0x03363CF0 LDR X8, [X20]
	0x03363CF4 MOVZ W1, 0xD

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x107A000
	010 Move X24, 0xDC6000
	011 Move W8, [X25+3688]
	012 Move X24, [X24+808]
	013 Move X19, X4
	014 Move W20, W3
	015 Move X22, X2
	016 Move X21, X1
	017 Move X23, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {33}
	022 Move X0, 0xDC6000
	023 Move X0, [X0+808]
	024 Call 0x1C17CF4
	025 Move X0, 0xDC6000
	026 Move X0, [X0+1416]
	027 Call 0x1C17CF4
	028 Move X0, 0xDC6000
	029 Move X0, [X0+2744]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X25+3688], W8
	033 Move X0, [X24]
	034 Move X25, 0xDC6000
	035 Move W8, [X0+224]
	036 Move X25, [X25+2744]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X1, [X25]
	041 Move W0, W20
	042 Move X2, X31
	043 Call DateTimeFormatInfo.ValidateStyles, X0, X1
	044 Compare X23, 0
	045 JumpIfEqual {92}
	046 Move X25, 0x1077000
	047 Move W8, [X25+1890]
	048 Compare W8, 0
	049 JumpIfNotEqual {55}
	050 Move X0, 0xDB8000
	051 Move X0, [X0+656]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X25+1890], W8
	055 Move X25, 0xDC6000
	056 Move X25, [X25+1416]
	057 Move X0, X23
	058 Move X1, X31
	059 Call String.GetRawStringData, X0
	060 Move X8, [X24]
	061 Move W23, [X23+16]
	062 Move X24, X0
	063 Move W9, [X8+224]
	064 Compare W9, 0
	065 JumpIfNotEqual {68}
	066 Move X0, X8
	067 Call 0x1C17DFC
	068 Move X0, X22
	069 Move X1, X31
	070 Call DateTimeFormatInfo.GetInstance, X0
	071 Move X8, [X25]
	072 Move X22, X0
	073 Move W9, [X8+224]
	074 Compare W9, 0
	075 JumpIfNotEqual {78}
	076 Move X0, X8
	077 Call 0x1C17DFC
	078 Move X0, X24
	079 Move X1, X23
	080 Move X2, X21
	081 Move X3, X22
	082 Move W4, W20
	083 Move X5, X19
	084 Move X20, [X31+48]
	085 Move X19, [X31+56]
	086 Move X22, [X31+32]
	087 Move X21, [X31+40]
	088 Move X24, [X31+16]
	089 Move X23, [X31+24]
	090 Move X30, [X31+64]
	091 Move X25, [X31+72]
	092 Move [X19], X31
	093 Move X20, [X31+48]
	094 Move X19, [X31+56]
	095 Move X22, [X31+32]
	096 Move X21, [X31+40]
	097 Move X24, [X31+16]
	098 Move X23, [X31+24]
	099 Move W0, W31
	100 Move X30, [X31+64]
	101 Move X25, [X31+72]
	102 Return X0

Method: System.DateTime op_Addition(System.DateTime d, System.TimeSpan t)

Disassembly:
	0x03363E18 ADRP X21, 0xD92000
	0x03363E1C LDRB W8, [X20 + 0xE8B]
	0x03363E20 LDR X21, [X21 + 0x570]
	0x03363E24 MOV X19, X0
	0x03363E28 TBNZ X8, 0x0, 0x3363E40
	0x03363E2C ADRP X0, 0xD92000
	0x03363E30 LDR X0, [X0 + 0x570]
	0x03363E34 BL 0x1C16CF4
	0x03363E38 MOVZ W8, 0x1
	0x03363E3C STRB W8, [X20 + 0xE8B]
	0x03363E40 LDR X0, [X21]
	0x03363E44 LDR W8, [X0 + 0xE0]
	0x03363E48 CBNZ W8, 0x3363E50
	0x03363E4C BL 0x1C16DFC
	0x03363E50 MOVZ X8, 0xF7D5
	0x03363E54 MOVK X8, 0x40BA0000
	0x03363E58 MOVK X8, 0x13D8
	0x03363E5C MOVK X8, 0x1CA20000
	0x03363E60 SMULH X8, X19, X8, X31
	0x03363E64 SBFM X9, X8, 0x1A, 0x3F
	0x03363E68 ADD X20, X9, X8, 0x3F, LSR
	0x03363E6C MOVZ W8, 0x4600
	0x03363E70 MOVK W8, 0x23C30000
	0x03363E74 MSUB X8, X20, X8, X19
	0x03363E78 CBNZ X8, 0x3363EC0
	0x03363E7C MOVZ X8, 0xB000
	0x03363E80 MOVK X8, 0x58BD0000
	0x03363E84 MOVZ X9, 0x6001
	0x03363E88 MOVK X8, 0x75
	0x03363E8C MOVK X9, 0xB17B0000
	0x03363E90 ADD X8, X19, X8
	0x03363E94 MOVK X9, 0xEA
	0x03363E98 CMP X8, X9
	0x03363E9C B.CS 0x3363F08
	0x03363EA0 LDR X0, [X21]
	0x03363EA4 LDR W8, [X0 + 0xE0]
	0x03363EA8 CBNZ W8, 0x3363EB0
	0x03363EAC BL 0x1C16DFC
	0x03363EB0 MOV W0, W20
	0x03363EB4 LDP X20, X19, [X31 + 0x10]
	0x03363EB8 LDP X30, X21, [X31], #0x20
	0x03363EBC RET
	0x03363EC0 ADRP X0, 0xD98000
	0x03363EC4 LDR X0, [X0 + 0x578]
	0x03363EC8 BL 0x1C16D08
	0x03363ECC BL 0x1C16F10
	0x03363ED0 MOV X19, X0
	0x03363ED4 ADRP X0, 0xDC7000
	0x03363ED8 LDR X0, [X0 + 0xAA8]
	0x03363EDC BL 0x1C16D08
	0x03363EE0 MOV X20, X0
	0x03363EE4 ADRP X0, 0xDBF000
	0x03363EE8 LDR X0, [X0 + 0xD90]
	0x03363EEC BL 0x1C16D08
	0x03363EF0 MOV X2, X0
	0x03363EF4 MOV X0, X19
	0x03363EF8 MOV X1, X20
	0x03363EFC MOV X3, X31
	0x03363F00 BL 0x330E16C
	0x03363F04 B 0x3363F4C
	0x03363F08 ADRP X0, 0xD98000
	0x03363F0C LDR X0, [X0 + 0x760]
	0x03363F10 BL 0x1C16D08
	0x03363F14 BL 0x1C16F10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x107A000
	007 Move X21, 0xD92000
	008 Move W8, [X22+3689]
	009 Move X21, [X21+2544]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xD92000
	017 Move X0, [X0+2544]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3689], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 And X22, X20, 0x3FFFFFFF
	027 Subtract X8, X31, X22
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X8, 0x3FFF
	030 NotImplemented "Instruction MOVK not yet implemented."
	031 NotImplemented "Instruction MOVK not yet implemented."
	032 NotImplemented "Instruction MOVK not yet implemented."
	033 Subtract X8, X8, X22
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X0, [X21]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 And X8, X20, -1
	041 Add X9, X22, X19
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Or X0, X9, X8
	047 Move X30, [X31+48]
	048 Return X0
	049 Move X0, 0xD99000
	050 Move X0, [X0+1888]
	051 Call 0x1C17D08
	052 Call 0x1C17F10
	053 Move X19, X0
	054 Move X0, 0xDC3000
	055 Move X0, [X0+1816]
	056 Call 0x1C17D08
	057 Move X20, X0
	058 Move X0, 0xDC8000
	059 Move X0, [X0+2424]
	060 Call 0x1C17D08
	061 Move X2, X0
	062 Move X0, X19
	063 Move X1, X20
	064 Move X3, X31
	065 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	066 Move X0, 0xDC8000
	067 Move X0, [X0+2608]
	068 Call 0x1C17D08
	069 Move X1, X0
	070 Move X0, X19
	071 Call 0x1C17DEC

Method: System.DateTime op_Subtraction(System.DateTime d, System.TimeSpan t)

Disassembly:
	0x03363F18 MOV X19, X0
	0x03363F1C ADRP X0, 0xDBF000
	0x03363F20 LDR X0, [X0 + 0xD90]
	0x03363F24 BL 0x1C16D08
	0x03363F28 MOV X20, X0
	0x03363F2C ADRP X0, 0xDC7000
	0x03363F30 LDR X0, [X0 + 0xAB0]
	0x03363F34 BL 0x1C16D08
	0x03363F38 MOV X2, X0
	0x03363F3C MOV X0, X19
	0x03363F40 MOV X1, X20
	0x03363F44 MOV X3, X31
	0x03363F48 BL 0x3311888
	0x03363F4C ADRP X0, 0xDC7000
	0x03363F50 LDR X0, [X0 + 0xAB8]
	0x03363F54 BL 0x1C16D08
	0x03363F58 MOV X1, X0
	0x03363F5C MOV X0, X19
	0x03363F60 BL 0x1C16DEC
	0x03363F64 SUB X31, X31, 0x30
	0x03363F68 STP X30, X21, [X31 + 0x10]
	0x03363F6C STP X20, X19, [X31 + 0x20]
	0x03363F70 ADRP X21, 0x1079000
	0x03363F74 STR X0, [X31]
	0x03363F78 ADRP X20, 0xD91000
	0x03363F7C LDRB W8, [X21 + 0xE8C]
	0x03363F80 LDR X20, [X20 + 0x9F0]
	0x03363F84 MOV X19, X1
	0x03363F88 TBNZ X8, 0x0, 0x3363FAC
	0x03363F8C ADRP X0, 0xD91000
	0x03363F90 LDR X0, [X0 + 0x9F0]
	0x03363F94 BL 0x1C16CF4
	0x03363F98 ADRP X0, 0xD92000
	0x03363F9C LDR X0, [X0 + 0x570]
	0x03363FA0 BL 0x1C16CF4
	0x03363FA4 MOVZ W8, 0x1
	0x03363FA8 STRB W8, [X21 + 0xE8C]
	0x03363FAC LDR X0, [X20]
	0x03363FB0 ADRP X20, 0xD92000
	0x03363FB4 LDR W8, [X0 + 0xE0]
	0x03363FB8 LDR X20, [X20 + 0x570]
	0x03363FBC CBNZ W8, 0x3363FC4
	0x03363FC0 BL 0x1C16DFC
	0x03363FC4 ADD X0, X31, 0x0
	0x03363FC8 BL 0x3361708
	0x03363FCC LDR X8, [X20]
	0x03363FD0 MOV X20, X0
	0x03363FD4 LDR W9, [X8 + 0xE0]
	0x03363FD8 CBNZ W9, 0x3363FE4
	0x03363FDC MOV X0, X8
	0x03363FE0 BL 0x1C16DFC
	0x03363FE4 MOVZ X8, 0x4000
	0x03363FE8 MOVK X8, 0xF4370000
	0x03363FEC MOVK X8, 0x2875
	0x03363FF0 SUB X1, X20, X19
	0x03363FF4 MOVK X8, 0x2BCA0000
	0x03363FF8 CMP X1, X8
	0x03363FFC B.CS 0x3364024
	0x03364000 ADD X0, X31, 0x8
	0x03364004 MOV W2, W31
	0x03364008 STR X31, [X31 + 0x8]
	0x0336400C BL 0x335EF44

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x107A000
	007 Move X21, 0xD92000
	008 Move W8, [X22+3690]
	009 Move X21, [X21+2544]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xD92000
	017 Move X0, [X0+2544]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3690], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 And X8, X19, 0x3FFFFFFF
	027 Subtract X22, X8, X20
	028 Move X9, 0xC001
	029 NotImplemented "Instruction MOVK not yet implemented."
	030 NotImplemented "Instruction MOVK not yet implemented."
	031 NotImplemented "Instruction MOVK not yet implemented."
	032 Add X8, X8, X9
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X0, [X21]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 And X8, X19, -1
	040 Or X0, X22, X8
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Move X30, [X31+48]
	046 Return X0
	047 Move X0, 0xD99000
	048 Move X0, [X0+1888]
	049 Call 0x1C17D08
	050 Call 0x1C17F10
	051 Move X19, X0
	052 Move X0, 0xDC3000
	053 Move X0, [X0+1816]
	054 Call 0x1C17D08
	055 Move X20, X0
	056 Move X0, 0xDC8000
	057 Move X0, [X0+2424]
	058 Call 0x1C17D08
	059 Move X2, X0
	060 Move X0, X19
	061 Move X1, X20
	062 Move X3, X31
	063 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	064 Move X0, 0xDC8000
	065 Move X0, [X0+2616]
	066 Call 0x1C17D08
	067 Move X1, X0
	068 Move X0, X19
	069 Call 0x1C17DEC

Method: System.TimeSpan op_Subtraction(System.DateTime d1, System.DateTime d2)

Disassembly:
	0x03364010 LDR X0, [X31 + 0x8]
	0x03364014 LDP X20, X19, [X31 + 0x20]
	0x03364018 LDP X30, X21, [X31 + 0x10]
	0x0336401C ADD X31, X31, 0x30
	0x03364020 RET
	0x03364024 ADRP X0, 0xD97000
	0x03364028 LDR X0, [X0 + 0x760]
	0x0336402C BL 0x1C16D08
	0x03364030 BL 0x1C16F10
	0x03364034 MOV X19, X0
	0x03364038 ADRP X0, 0xDBE000
	0x0336403C LDR X0, [X0 + 0xD90]
	0x03364040 BL 0x1C16D08
	0x03364044 MOV X20, X0
	0x03364048 ADRP X0, 0xDC6000
	0x0336404C LDR X0, [X0 + 0xAC0]
	0x03364050 BL 0x1C16D08
	0x03364054 MOV X2, X0
	0x03364058 MOV X0, X19
	0x0336405C MOV X1, X20
	0x03364060 MOV X3, X31
	0x03364064 BL 0x3311888
	0x03364068 ADRP X0, 0xDC6000
	0x0336406C LDR X0, [X0 + 0xAC8]
	0x03364070 BL 0x1C16D08
	0x03364074 MOV X1, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1079000
	007 Move X22, 0xD91000
	008 Move W8, [X21+3691]
	009 Move X22, [X22+2544]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xD91000
	017 Move X0, [X0+2544]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3691], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 And X8, X20, 0x3FFFFFFF
	027 And X9, X19, 0x3FFFFFFF
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Subtract X0, X8, X9
	033 Move X30, [X31+48]
	034 Return X0

Method: System.Boolean op_Equality(System.DateTime d1, System.DateTime d2)

Disassembly:
	0x03364078 MOV X0, X19
	0x0336407C BL 0x1C16DEC
	0x03364080 STR X30, [X31 - 0x30]!
	0x03364084 STP X22, X21, [X31 + 0x10]
	0x03364088 STP X20, X19, [X31 + 0x20]
	0x0336408C ADRP X21, 0x1078000
	0x03364090 STR X1, [X31 + 0x8]
	0x03364094 ADRP X22, 0xD90000
	0x03364098 LDRB W8, [X21 + 0xE77]
	0x0336409C LDR X22, [X22 + 0x9F0]
	0x033640A0 MOV X20, X1
	0x033640A4 MOV X19, X0
	0x033640A8 TBNZ X8, 0x0, 0x33640E4
	0x033640AC ADRP X0, 0xD91000
	0x033640B0 LDR X0, [X0 + 0xA58]
	0x033640B4 BL 0x1C16CF4
	0x033640B8 ADRP X0, 0xD90000
	0x033640BC LDR X0, [X0 + 0x9F0]
	0x033640C0 BL 0x1C16CF4
	0x033640C4 ADRP X0, 0xD91000
	0x033640C8 LDR X0, [X0 + 0x570]
	0x033640CC BL 0x1C16CF4
	0x033640D0 ADRP X0, 0xDC3000
	0x033640D4 LDR X0, [X0 + 0xA38]
	0x033640D8 BL 0x1C16CF4
	0x033640DC MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1079000
	007 Move X22, 0xD91000
	008 Move W8, [X21+3692]
	009 Move X22, [X22+2544]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xD91000
	017 Move X0, [X0+2544]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3692], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Xor X8, X19, X20
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X22, [X31+16]
	030 Move X21, [X31+24]
	031 And X31, X8, 0x3FFFFFFF
	032 NotImplemented "Instruction CSET not yet implemented."
	033 Move X30, [X31+48]
	034 Return X0

Method: System.Boolean op_Inequality(System.DateTime d1, System.DateTime d2)

Disassembly:
	0x033640E0 STRB W8, [X21 + 0xE77]
	0x033640E4 LDR X0, [X22]
	0x033640E8 LDR W8, [X0 + 0xE0]
	0x033640EC CBNZ W8, 0x33640F4
	0x033640F0 BL 0x1C16DFC
	0x033640F4 ADRP X22, 0xD91000
	0x033640F8 LDR X22, [X22 + 0xA58]
	0x033640FC ADD X0, X31, 0x8
	0x03364100 BL 0x336139C
	0x03364104 CMP W0, 0x1
	0x03364108 B.NE 0x336412C
	0x0336410C ADRP X8, 0xD91000
	0x03364110 LDR X8, [X8 + 0x570]
	0x03364114 LDR X0, [X8]
	0x03364118 LDR W8, [X0 + 0xE0]
	0x0336411C CBNZ W8, 0x3364124
	0x03364120 BL 0x1C16DFC
	0x03364124 MOV X21, X31
	0x03364128 B 0x3364158
	0x0336412C ADRP X8, 0xDC3000
	0x03364130 LDR X8, [X8 + 0xA38]
	0x03364134 LDR X0, [X8]
	0x03364138 LDR W8, [X0 + 0xE0]
	0x0336413C CBNZ W8, 0x3364144
	0x03364140 BL 0x1C16DFC
	0x03364144 MOVZ W1, 0x2

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1079000
	007 Move X22, 0xD91000
	008 Move W8, [X21+3693]
	009 Move X22, [X22+2544]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xD91000
	017 Move X0, [X0+2544]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3693], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Xor X8, X19, X20
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X22, [X31+16]
	030 Move X21, [X31+24]
	031 And X31, X8, 0x3FFFFFFF
	032 NotImplemented "Instruction CSET not yet implemented."
	033 Move X30, [X31+48]
	034 Return X0

Method: System.Boolean op_LessThan(System.DateTime t1, System.DateTime t2)

Disassembly:
	0x03364148 MOV X0, X20
	0x0336414C MOV X2, X31
	0x03364150 BL 0x330D814
	0x03364154 MOV X21, X0
	0x03364158 LDR X0, [X22]
	0x0336415C LDR W8, [X0 + 0xE0]
	0x03364160 CBNZ W8, 0x3364168
	0x03364164 BL 0x1C16DFC
	0x03364168 MOV X0, X21
	0x0336416C BL 0x3363E0C
	0x03364170 STRH W0, [X19 + 0x8]
	0x03364174 MOV X0, X20
	0x03364178 MOV X1, X21
	0x0336417C BL 0x3363F64
	0x03364180 STR X0, [X19]
	0x03364184 LDP X20, X19, [X31 + 0x20]
	0x03364188 LDP X22, X21, [X31 + 0x10]
	0x0336418C LDR X30, [X31], #0x30
	0x03364190 RET
	0x03364194 SUB X31, X31, 0x30
	0x03364198 STR X30, [X31 + 0x10]
	0x0336419C STP X20, X19, [X31 + 0x20]
	0x033641A0 ADRP X19, 0x1078000
	0x033641A4 ADRP X20, 0xD90000
	0x033641A8 LDRB W8, [X19 + 0xE78]
	0x033641AC LDR X20, [X20 + 0x9F0]
	0x033641B0 TBNZ X8, 0x0, 0x33641C8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1079000
	007 Move X22, 0xD91000
	008 Move W8, [X21+3694]
	009 Move X22, [X22+2544]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xD91000
	017 Move X0, [X0+2544]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3694], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 And X8, X20, 0x3FFFFFFF
	027 And X9, X19, 0x3FFFFFFF
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction CSET not yet implemented."
	034 Move X30, [X31+48]
	035 Return X0

Method: System.Boolean op_LessThanOrEqual(System.DateTime t1, System.DateTime t2)

Disassembly:
	0x033641B4 ADRP X0, 0xD90000
	0x033641B8 LDR X0, [X0 + 0x9F0]
	0x033641BC BL 0x1C16CF4
	0x033641C0 MOVZ W8, 0x1
	0x033641C4 STRB W8, [X19 + 0xE78]
	0x033641C8 LDR X0, [X20]
	0x033641CC LDR W8, [X0 + 0xE0]
	0x033641D0 CBNZ W8, 0x33641D8
	0x033641D4 BL 0x1C16DFC
	0x033641D8 BL 0x33616A4
	0x033641DC MOV X1, X0
	0x033641E0 ADD X0, X31, 0x0
	0x033641E4 STP X31, X31, [X31]
	0x033641E8 BL 0x3364080
	0x033641EC LDP X0, X1, [X31]
	0x033641F0 LDP X20, X19, [X31 + 0x20]
	0x033641F4 LDR X30, [X31 + 0x10]
	0x033641F8 ADD X31, X31, 0x30
	0x033641FC RET
	0x03364200 STP X30, X21, [X31 - 0x20]!
	0x03364204 STP X20, X19, [X31 + 0x10]
	0x03364208 ADRP X21, 0x1078000
	0x0336420C ADRP X20, 0xD90000
	0x03364210 LDRB W8, [X21 + 0xE79]
	0x03364214 LDR X20, [X20 + 0x9F0]
	0x03364218 MOV X19, X0
	0x0336421C TBNZ X8, 0x0, 0x3364234

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1079000
	007 Move X22, 0xD91000
	008 Move W8, [X21+3695]
	009 Move X22, [X22+2544]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xD91000
	017 Move X0, [X0+2544]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3695], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 And X8, X20, 0x3FFFFFFF
	027 And X9, X19, 0x3FFFFFFF
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction CSET not yet implemented."
	034 Move X30, [X31+48]
	035 Return X0

Method: System.Boolean op_GreaterThan(System.DateTime t1, System.DateTime t2)

Disassembly:
	0x03364220 ADRP X0, 0xD90000
	0x03364224 LDR X0, [X0 + 0x9F0]
	0x03364228 BL 0x1C16CF4
	0x0336422C MOVZ W8, 0x1
	0x03364230 STRB W8, [X21 + 0xE79]
	0x03364234 LDR X0, [X20]
	0x03364238 LDR X19, [X19]
	0x0336423C LDR W8, [X0 + 0xE0]
	0x03364240 CBNZ W8, 0x3364248
	0x03364244 BL 0x1C16DFC
	0x03364248 MOV X0, X19
	0x0336424C LDP X20, X19, [X31 + 0x10]
	0x03364250 MOVZ W1, 0x1
	0x03364254 LDP X30, X21, [X31], #0x20
	0x03364258 B 0x3360E70
	0x0336425C SUB X31, X31, 0x30
	0x03364260 STP X30, X21, [X31 + 0x10]
	0x03364264 STP X20, X19, [X31 + 0x20]
	0x03364268 ADRP X21, 0x1078000
	0x0336426C ADRP X19, 0xD91000
	0x03364270 LDRB W8, [X21 + 0xE7A]
	0x03364274 LDR X19, [X19 + 0xA58]
	0x03364278 MOV X20, X0
	0x0336427C TBNZ X8, 0x0, 0x33642A0
	0x03364280 ADRP X0, 0xD91000
	0x03364284 LDR X0, [X0 + 0xA58]
	0x03364288 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1079000
	007 Move X22, 0xD91000
	008 Move W8, [X21+3696]
	009 Move X22, [X22+2544]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xD91000
	017 Move X0, [X0+2544]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3696], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 And X8, X20, 0x3FFFFFFF
	027 And X9, X19, 0x3FFFFFFF
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction CSET not yet implemented."
	034 Move X30, [X31+48]
	035 Return X0

Method: System.Boolean op_GreaterThanOrEqual(System.DateTime t1, System.DateTime t2)

Disassembly:
	0x0336428C ADRP X0, 0xD90000
	0x03364290 LDR X0, [X0 + 0x9F0]
	0x03364294 BL 0x1C16CF4
	0x03364298 MOVZ W8, 0x1
	0x0336429C STRB W8, [X21 + 0xE7A]
	0x033642A0 LDR X0, [X19]
	0x033642A4 ADRP X21, 0xD90000
	0x033642A8 LDR X19, [X20]
	0x033642AC LDR W8, [X0 + 0xE0]
	0x033642B0 LDR X21, [X21 + 0x9F0]
	0x033642B4 CBNZ W8, 0x33642BC
	0x033642B8 BL 0x1C16DFC
	0x033642BC LDRSH W2, [X20 + 0x8]
	0x033642C0 ADD X0, X31, 0x8
	0x033642C4 MOV W1, W31
	0x033642C8 MOV W3, W31
	0x033642CC MOV X4, X31
	0x033642D0 STR X31, [X31 + 0x8]
	0x033642D4 BL 0x3393ED0
	0x033642D8 LDR X0, [X21]
	0x033642DC LDR X20, [X31 + 0x8]
	0x033642E0 LDR W8, [X0 + 0xE0]
	0x033642E4 CBNZ W8, 0x33642EC
	0x033642E8 BL 0x1C16DFC
	0x033642EC MOV X0, X19
	0x033642F0 MOV X1, X20
	0x033642F4 BL 0x3362E18

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1079000
	007 Move X22, 0xD91000
	008 Move W8, [X21+3697]
	009 Move X22, [X22+2544]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xD91000
	017 Move X0, [X0+2544]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3697], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 And X8, X20, 0x3FFFFFFF
	027 And X9, X19, 0x3FFFFFFF
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction CSET not yet implemented."
	034 Move X30, [X31+48]
	035 Return X0

Method: System.TypeCode GetTypeCode()

Disassembly:
	0x033642F8 STR X0, [X31 + 0x8]
	0x033642FC ADD X0, X31, 0x8

ISIL:
	001 Move W0, 16
	002 Return X0

Method: System.Boolean System.IConvertible.ToBoolean(System.IFormatProvider provider)

Disassembly:
	0x03364300 BL 0x3361708
	0x03364304 MOV X1, X0
	0x03364308 ADD X0, X31, 0x0
	0x0336430C MOV W2, W31
	0x03364310 STR X31, [X31]
	0x03364314 BL 0x335EF44
	0x03364318 LDR X0, [X31]
	0x0336431C LDP X20, X19, [X31 + 0x20]
	0x03364320 LDP X30, X21, [X31 + 0x10]
	0x03364324 ADD X31, X31, 0x30
	0x03364328 RET
	0x0336432C STR X30, [X31 - 0x10]!
	0x03364330 LDRSH W2, [X0 + 0x8]
	0x03364334 ADD X0, X31, 0x8
	0x03364338 MOV W1, W31
	0x0336433C MOV W3, W31
	0x03364340 MOV X4, X31
	0x03364344 STR X31, [X31 + 0x8]
	0x03364348 BL 0x3393ED0
	0x0336434C LDR X0, [X31 + 0x8]
	0x03364350 LDR X30, [X31], #0x10
	0x03364354 RET
	0x03364358 SUB X31, X31, 0x40
	0x0336435C STR X30, [X31 + 0x10]
	0x03364360 STP X22, X21, [X31 + 0x20]
	0x03364364 STP X20, X19, [X31 + 0x30]
	0x03364368 ADRP X21, 0x1078000
	0x0336436C LDRB W8, [X21 + 0xE7B]
	0x03364370 MOV X20, X1
	0x03364374 MOV X19, X0
	0x03364378 TBNZ X8, 0x0, 0x336439C
	0x0336437C ADRP X0, 0xD91000
	0x03364380 LDR X0, [X0 + 0xA58]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0xDC5000
	005 Move X0, [X0+48]
	006 Call 0x1C17D08
	007 Move X19, X0
	008 Move X0, 0xDC2000
	009 Move X0, [X0+152]
	010 Call 0x1C17D08
	011 Move X20, X0
	012 Move X0, 0xDC2000
	013 Move X0, [X0+168]
	014 Call 0x1C17D08
	015 Move X2, X0
	016 Move X0, X19
	017 Move X1, X20
	018 Move X3, X31
	019 Call SR.Format, X0, X1, X2
	020 Move X19, X0
	021 Move X0, 0xD98000
	022 Move X0, [X0+3080]
	023 Call 0x1C17D08
	024 Call 0x1C17F10
	025 Move X1, X19
	026 Move X2, X31
	027 Move X20, X0
	028 Call InvalidCastException..ctor, X0, X1
	029 Move X0, 0xDC7000
	030 Move X0, [X0+2624]
	031 Call 0x1C17D08
	032 Move X1, X0
	033 Move X0, X20
	034 Call 0x1C17DEC

Method: System.Char System.IConvertible.ToChar(System.IFormatProvider provider)

Disassembly:
	0x03364384 BL 0x1C16CF4
	0x03364388 ADRP X0, 0xD90000
	0x0336438C LDR X0, [X0 + 0x9F0]
	0x03364390 BL 0x1C16CF4
	0x03364394 MOVZ W8, 0x1
	0x03364398 STRB W8, [X21 + 0xE7B]
	0x0336439C CBZ X20, 0x336441C
	0x033643A0 ADRP X22, 0xD91000
	0x033643A4 LDR X22, [X22 + 0xA58]
	0x033643A8 LDR X9, [X20]
	0x033643AC LDR X8, [X22]
	0x033643B0 CMP X9, X8
	0x033643B4 B.NE 0x3364458
	0x033643B8 ADRP X21, 0xD90000
	0x033643BC LDR X21, [X21 + 0x9F0]
	0x033643C0 MOV X0, X20
	0x033643C4 BL 0x1C16E08
	0x033643C8 LDR V0, [X0]
	0x033643CC LDR X0, [X22]
	0x033643D0 STR V0, [X31]
	0x033643D4 LDR W8, [X0 + 0xE0]
	0x033643D8 CBNZ W8, 0x33643E0
	0x033643DC BL 0x1C16DFC
	0x033643E0 ADD X0, X31, 0x0
	0x033643E4 BL 0x3364200
	0x033643E8 MOV X20, X0
	0x033643EC MOV X0, X19
	0x033643F0 BL 0x3364200
	0x033643F4 LDR X8, [X21]
	0x033643F8 MOV X19, X0
	0x033643FC LDR W9, [X8 + 0xE0]
	0x03364400 CBNZ W9, 0x336440C
	0x03364404 MOV X0, X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0xDC5000
	005 Move X0, [X0+48]
	006 Call 0x1C17D08
	007 Move X19, X0
	008 Move X0, 0xDC2000
	009 Move X0, [X0+152]
	010 Call 0x1C17D08
	011 Move X20, X0
	012 Move X0, 0xDC2000
	013 Move X0, [X0+224]
	014 Call 0x1C17D08
	015 Move X2, X0
	016 Move X0, X19
	017 Move X1, X20
	018 Move X3, X31
	019 Call SR.Format, X0, X1, X2
	020 Move X19, X0
	021 Move X0, 0xD98000
	022 Move X0, [X0+3080]
	023 Call 0x1C17D08
	024 Call 0x1C17F10
	025 Move X1, X19
	026 Move X2, X31
	027 Move X20, X0
	028 Call InvalidCastException..ctor, X0, X1
	029 Move X0, 0xDC7000
	030 Move X0, [X0+2632]
	031 Call 0x1C17D08
	032 Move X1, X0
	033 Move X0, X20
	034 Call 0x1C17DEC

Method: System.SByte System.IConvertible.ToSByte(System.IFormatProvider provider)

Disassembly:
	0x03364408 BL 0x1C16DFC
	0x0336440C MOV X0, X19
	0x03364410 MOV X1, X20
	0x03364414 BL 0x3363220
	0x03364418 TBZ X0, 0x0, 0x3364424
	0x0336441C MOVZ W0, 0x1
	0x03364420 B 0x3364444
	0x03364424 LDR X0, [X21]
	0x03364428 LDR W8, [X0 + 0xE0]
	0x0336442C CBNZ W8, 0x3364434
	0x03364430 BL 0x1C16DFC
	0x03364434 MOV X0, X19
	0x03364438 MOV X1, X20
	0x0336443C BL 0x3363148
	0x03364440 SBFM W0, W0, 0x0, 0x0
	0x03364444 LDP X20, X19, [X31 + 0x30]
	0x03364448 LDP X22, X21, [X31 + 0x20]
	0x0336444C LDR X30, [X31 + 0x10]
	0x03364450 ADD X31, X31, 0x40
	0x03364454 RET
	0x03364458 ADRP X0, 0xD97000
	0x0336445C LDR X0, [X0 + 0x578]
	0x03364460 BL 0x1C16D08
	0x03364464 BL 0x1C16F10
	0x03364468 MOV X19, X0
	0x0336446C ADRP X0, 0xDC6000
	0x03364470 LDR X0, [X0 + 0xAD0]
	0x03364474 BL 0x1C16D08
	0x03364478 MOV X1, X0
	0x0336447C MOV X0, X19
	0x03364480 MOV X2, X31
	0x03364484 BL 0x3314A68
	0x03364488 ADRP X0, 0xDC6000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0xDC5000
	005 Move X0, [X0+48]
	006 Call 0x1C17D08
	007 Move X19, X0
	008 Move X0, 0xDC2000
	009 Move X0, [X0+152]
	010 Call 0x1C17D08
	011 Move X20, X0
	012 Move X0, 0xDC2000
	013 Move X0, [X0+176]
	014 Call 0x1C17D08
	015 Move X2, X0
	016 Move X0, X19
	017 Move X1, X20
	018 Move X3, X31
	019 Call SR.Format, X0, X1, X2
	020 Move X19, X0
	021 Move X0, 0xD98000
	022 Move X0, [X0+3080]
	023 Call 0x1C17D08
	024 Call 0x1C17F10
	025 Move X1, X19
	026 Move X2, X31
	027 Move X20, X0
	028 Call InvalidCastException..ctor, X0, X1
	029 Move X0, 0xDC7000
	030 Move X0, [X0+2640]
	031 Call 0x1C17D08
	032 Move X1, X0
	033 Move X0, X20
	034 Call 0x1C17DEC

Method: System.Byte System.IConvertible.ToByte(System.IFormatProvider provider)

Disassembly:
	0x0336448C LDR X0, [X0 + 0xAD8]
	0x03364490 BL 0x1C16D08
	0x03364494 MOV X1, X0
	0x03364498 MOV X0, X19
	0x0336449C BL 0x1C16DEC
	0x033644A0 SUB X31, X31, 0x30
	0x033644A4 STP X30, X21, [X31 + 0x10]
	0x033644A8 STP X20, X19, [X31 + 0x20]
	0x033644AC ADRP X21, 0x1078000
	0x033644B0 STP X1, X2, [X31]
	0x033644B4 ADRP X20, 0xD91000
	0x033644B8 LDRB W8, [X21 + 0xE7C]
	0x033644BC LDR X20, [X20 + 0xA58]
	0x033644C0 MOV X19, X0
	0x033644C4 TBNZ X8, 0x0, 0x33644E8
	0x033644C8 ADRP X0, 0xD91000
	0x033644CC LDR X0, [X0 + 0xA58]
	0x033644D0 BL 0x1C16CF4
	0x033644D4 ADRP X0, 0xD90000
	0x033644D8 LDR X0, [X0 + 0x9F0]
	0x033644DC BL 0x1C16CF4
	0x033644E0 MOVZ W8, 0x1
	0x033644E4 STRB W8, [X21 + 0xE7C]
	0x033644E8 LDR X0, [X20]
	0x033644EC ADRP X21, 0xD90000
	0x033644F0 LDR W8, [X0 + 0xE0]
	0x033644F4 LDR X21, [X21 + 0x9F0]
	0x033644F8 CBNZ W8, 0x3364500
	0x033644FC BL 0x1C16DFC
	0x03364500 ADD X0, X31, 0x0
	0x03364504 BL 0x3364200
	0x03364508 MOV X20, X0
	0x0336450C MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0xDC5000
	005 Move X0, [X0+48]
	006 Call 0x1C17D08
	007 Move X19, X0
	008 Move X0, 0xDC2000
	009 Move X0, [X0+152]
	010 Call 0x1C17D08
	011 Move X20, X0
	012 Move X0, 0xDC2000
	013 Move X0, [X0+128]
	014 Call 0x1C17D08
	015 Move X2, X0
	016 Move X0, X19
	017 Move X1, X20
	018 Move X3, X31
	019 Call SR.Format, X0, X1, X2
	020 Move X19, X0
	021 Move X0, 0xD98000
	022 Move X0, [X0+3080]
	023 Call 0x1C17D08
	024 Call 0x1C17F10
	025 Move X1, X19
	026 Move X2, X31
	027 Move X20, X0
	028 Call InvalidCastException..ctor, X0, X1
	029 Move X0, 0xDC7000
	030 Move X0, [X0+2648]
	031 Call 0x1C17D08
	032 Move X1, X0
	033 Move X0, X20
	034 Call 0x1C17DEC

Method: System.Int16 System.IConvertible.ToInt16(System.IFormatProvider provider)

Disassembly:
	0x03364510 BL 0x3364200
	0x03364514 LDR X8, [X21]
	0x03364518 MOV X19, X0
	0x0336451C LDR W9, [X8 + 0xE0]
	0x03364520 CBNZ W9, 0x336452C
	0x03364524 MOV X0, X8
	0x03364528 BL 0x1C16DFC
	0x0336452C MOV X0, X19
	0x03364530 MOV X1, X20
	0x03364534 BL 0x3363220
	0x03364538 TBZ X0, 0x0, 0x3364544
	0x0336453C MOVZ W0, 0x1
	0x03364540 B 0x3364564
	0x03364544 LDR X0, [X21]
	0x03364548 LDR W8, [X0 + 0xE0]
	0x0336454C CBNZ W8, 0x3364554
	0x03364550 BL 0x1C16DFC
	0x03364554 MOV X0, X19
	0x03364558 MOV X1, X20
	0x0336455C BL 0x3363148
	0x03364560 SBFM W0, W0, 0x0, 0x0
	0x03364564 LDP X20, X19, [X31 + 0x20]
	0x03364568 LDP X30, X21, [X31 + 0x10]
	0x0336456C ADD X31, X31, 0x30
	0x03364570 RET
	0x03364574 SUB X31, X31, 0x40
	0x03364578 STP X30, X21, [X31 + 0x20]
	0x0336457C STP X20, X19, [X31 + 0x30]
	0x03364580 ADRP X21, 0x1078000
	0x03364584 LDRB W8, [X21 + 0xE7D]
	0x03364588 MOV X19, X1
	0x0336458C MOV X20, X0
	0x03364590 TBNZ X8, 0x0, 0x33645B4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0xDC5000
	005 Move X0, [X0+48]
	006 Call 0x1C17D08
	007 Move X19, X0
	008 Move X0, 0xDC2000
	009 Move X0, [X0+152]
	010 Call 0x1C17D08
	011 Move X20, X0
	012 Move X0, 0xDC2000
	013 Move X0, [X0+184]
	014 Call 0x1C17D08
	015 Move X2, X0
	016 Move X0, X19
	017 Move X1, X20
	018 Move X3, X31
	019 Call SR.Format, X0, X1, X2
	020 Move X19, X0
	021 Move X0, 0xD98000
	022 Move X0, [X0+3080]
	023 Call 0x1C17D08
	024 Call 0x1C17F10
	025 Move X1, X19
	026 Move X2, X31
	027 Move X20, X0
	028 Call InvalidCastException..ctor, X0, X1
	029 Move X0, 0xDC7000
	030 Move X0, [X0+2656]
	031 Call 0x1C17D08
	032 Move X1, X0
	033 Move X0, X20
	034 Call 0x1C17DEC

Method: System.UInt16 System.IConvertible.ToUInt16(System.IFormatProvider provider)

Disassembly:
	0x03364594 ADRP X0, 0xD91000
	0x03364598 LDR X0, [X0 + 0xA58]
	0x0336459C BL 0x1C16CF4
	0x033645A0 ADRP X0, 0xD90000
	0x033645A4 LDR X0, [X0 + 0x9F0]
	0x033645A8 BL 0x1C16CF4
	0x033645AC MOVZ W8, 0x1
	0x033645B0 STRB W8, [X21 + 0xE7D]
	0x033645B4 CBZ X19, 0x33645D0
	0x033645B8 ADRP X21, 0xD91000
	0x033645BC LDR X21, [X21 + 0xA58]
	0x033645C0 LDR X8, [X19]
	0x033645C4 LDR X0, [X21]
	0x033645C8 CMP X8, X0
	0x033645CC B.EQ 0x33645D8
	0x033645D0 MOV W0, W31
	0x033645D4 B 0x336464C
	0x033645D8 LDR W8, [X0 + 0xE0]
	0x033645DC CBNZ W8, 0x33645E4
	0x033645E0 BL 0x1C16DFC
	0x033645E4 MOV X0, X20
	0x033645E8 BL 0x3364200
	0x033645EC STR X0, [X31 + 0x18]
	0x033645F0 LDR X8, [X19]
	0x033645F4 LDR X1, [X21]
	0x033645F8 MOV X0, X19
	0x033645FC LDR X8, [X8 + 0x40]
	0x03364600 LDR X9, [X1 + 0x40]
	0x03364604 CMP X8, X9
	0x03364608 B.NE 0x3364660
	0x0336460C BL 0x1C16E08
	0x03364610 LDR V0, [X0]
	0x03364614 ADD X0, X31, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0xDC5000
	005 Move X0, [X0+48]
	006 Call 0x1C17D08
	007 Move X19, X0
	008 Move X0, 0xDC2000
	009 Move X0, [X0+152]
	010 Call 0x1C17D08
	011 Move X20, X0
	012 Move X0, 0xDC2000
	013 Move X0, [X0+144]
	014 Call 0x1C17D08
	015 Move X2, X0
	016 Move X0, X19
	017 Move X1, X20
	018 Move X3, X31
	019 Call SR.Format, X0, X1, X2
	020 Move X19, X0
	021 Move X0, 0xD98000
	022 Move X0, [X0+3080]
	023 Call 0x1C17D08
	024 Call 0x1C17F10
	025 Move X1, X19
	026 Move X2, X31
	027 Move X20, X0
	028 Call InvalidCastException..ctor, X0, X1
	029 Move X0, 0xDC7000
	030 Move X0, [X0+2664]
	031 Call 0x1C17D08
	032 Move X1, X0
	033 Move X0, X20
	034 Call 0x1C17DEC

Method: System.Int32 System.IConvertible.ToInt32(System.IFormatProvider provider)

Disassembly:
	0x03364618 STR V0, [X31]
	0x0336461C BL 0x3364200
	0x03364620 ADRP X8, 0xD90000
	0x03364624 LDR X8, [X8 + 0x9F0]
	0x03364628 MOV X19, X0
	0x0336462C LDR X8, [X8]
	0x03364630 LDR W9, [X8 + 0xE0]
	0x03364634 CBNZ W9, 0x3364640
	0x03364638 MOV X0, X8
	0x0336463C BL 0x1C16DFC
	0x03364640 ADD X0, X31, 0x18
	0x03364644 MOV X1, X19
	0x03364648 BL 0x3360A20
	0x0336464C LDP X20, X19, [X31 + 0x30]
	0x03364650 LDP X30, X21, [X31 + 0x20]
	0x03364654 AND W0, W0, 0x1
	0x03364658 ADD X31, X31, 0x40
	0x0336465C RET
	0x03364660 BL 0x1C171E0
	0x03364664 SUB X31, X31, 0x40
	0x03364668 STP X30, X21, [X31 + 0x20]
	0x0336466C STP X20, X19, [X31 + 0x30]
	0x03364670 ADRP X21, 0x1078000
	0x03364674 STP X1, X2, [X31 + 0x10]
	0x03364678 ADRP X20, 0xD91000
	0x0336467C LDRB W8, [X21 + 0xE7E]
	0x03364680 LDR X20, [X20 + 0xA58]
	0x03364684 MOV X19, X0
	0x03364688 TBNZ X8, 0x0, 0x33646AC
	0x0336468C ADRP X0, 0xD91000
	0x03364690 LDR X0, [X0 + 0xA58]
	0x03364694 BL 0x1C16CF4
	0x03364698 ADRP X0, 0xD90000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0xDC5000
	005 Move X0, [X0+48]
	006 Call 0x1C17D08
	007 Move X19, X0
	008 Move X0, 0xDC2000
	009 Move X0, [X0+152]
	010 Call 0x1C17D08
	011 Move X20, X0
	012 Move X0, 0xDC2000
	013 Move X0, [X0+216]
	014 Call 0x1C17D08
	015 Move X2, X0
	016 Move X0, X19
	017 Move X1, X20
	018 Move X3, X31
	019 Call SR.Format, X0, X1, X2
	020 Move X19, X0
	021 Move X0, 0xD98000
	022 Move X0, [X0+3080]
	023 Call 0x1C17D08
	024 Call 0x1C17F10
	025 Move X1, X19
	026 Move X2, X31
	027 Move X20, X0
	028 Call InvalidCastException..ctor, X0, X1
	029 Move X0, 0xDC7000
	030 Move X0, [X0+2672]
	031 Call 0x1C17D08
	032 Move X1, X0
	033 Move X0, X20
	034 Call 0x1C17DEC

Method: System.UInt32 System.IConvertible.ToUInt32(System.IFormatProvider provider)

Disassembly:
	0x0336469C LDR X0, [X0 + 0x9F0]
	0x033646A0 BL 0x1C16CF4
	0x033646A4 MOVZ W8, 0x1
	0x033646A8 STRB W8, [X21 + 0xE7E]
	0x033646AC LDR X0, [X20]
	0x033646B0 ADRP X20, 0xD90000
	0x033646B4 LDR W8, [X0 + 0xE0]
	0x033646B8 LDR X20, [X20 + 0x9F0]
	0x033646BC CBNZ W8, 0x33646C4
	0x033646C0 BL 0x1C16DFC
	0x033646C4 MOV X0, X19
	0x033646C8 BL 0x3364200
	0x033646CC STR X0, [X31 + 0x8]
	0x033646D0 ADD X0, X31, 0x10
	0x033646D4 BL 0x3364200
	0x033646D8 LDR X8, [X20]
	0x033646DC MOV X19, X0
	0x033646E0 LDR W9, [X8 + 0xE0]
	0x033646E4 CBNZ W9, 0x33646F0
	0x033646E8 MOV X0, X8
	0x033646EC BL 0x1C16DFC
	0x033646F0 ADD X0, X31, 0x8
	0x033646F4 MOV X1, X19
	0x033646F8 BL 0x3360A20
	0x033646FC LDP X20, X19, [X31 + 0x30]
	0x03364700 LDP X30, X21, [X31 + 0x20]
	0x03364704 AND W0, W0, 0x1
	0x03364708 ADD X31, X31, 0x40
	0x0336470C RET
	0x03364710 SUB X31, X31, 0x40
	0x03364714 STR X30, [X31 + 0x20]
	0x03364718 STP X20, X19, [X31 + 0x30]
	0x0336471C ADRP X20, 0x1078000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0xDC5000
	005 Move X0, [X0+48]
	006 Call 0x1C17D08
	007 Move X19, X0
	008 Move X0, 0xDC2000
	009 Move X0, [X0+152]
	010 Call 0x1C17D08
	011 Move X20, X0
	012 Move X0, 0xDC2000
	013 Move X0, [X0+192]
	014 Call 0x1C17D08
	015 Move X2, X0
	016 Move X0, X19
	017 Move X1, X20
	018 Move X3, X31
	019 Call SR.Format, X0, X1, X2
	020 Move X19, X0
	021 Move X0, 0xD98000
	022 Move X0, [X0+3080]
	023 Call 0x1C17D08
	024 Call 0x1C17F10
	025 Move X1, X19
	026 Move X2, X31
	027 Move X20, X0
	028 Call InvalidCastException..ctor, X0, X1
	029 Move X0, 0xDC7000
	030 Move X0, [X0+2680]
	031 Call 0x1C17D08
	032 Move X1, X0
	033 Move X0, X20
	034 Call 0x1C17DEC

Method: System.Int64 System.IConvertible.ToInt64(System.IFormatProvider provider)

Disassembly:
	0x03364720 LDRB W8, [X20 + 0xE7F]
	0x03364724 MOV X19, X0
	0x03364728 TBNZ X8, 0x0, 0x3364740
	0x0336472C ADRP X0, 0xD91000
	0x03364730 LDR X0, [X0 + 0x570]
	0x03364734 BL 0x1C16CF4
	0x03364738 MOVZ W8, 0x1
	0x0336473C STRB W8, [X20 + 0xE7F]
	0x03364740 MOVZ X8, 0xF700
	0x03364744 MOVK X8, 0x77910000
	0x03364748 MOVZ X9, 0x3880
	0x0336474C MOVK X8, 0xE
	0x03364750 MOVK X9, 0x77860000
	0x03364754 ADD X8, X19, X8
	0x03364758 MOVK X9, 0x49
	0x0336475C CMP X8, X9
	0x03364760 B.CS 0x33647C4
	0x03364764 ADRP X20, 0xD91000
	0x03364768 LDR X20, [X20 + 0x570]
	0x0336476C LDR X0, [X20]
	0x03364770 LDR W8, [X0 + 0xE0]
	0x03364774 CBNZ W8, 0x3364780
	0x03364778 BL 0x1C16DFC
	0x0336477C LDR X0, [X20]
	0x03364780 LDR X8, [X0 + 0xB8]
	0x03364784 MOVZ X9, 0x8000
	0x03364788 MOVK X9, 0xF7B50000
	0x0336478C MOVK X9, 0x7FF5
	0x03364790 LDR X2, [X8]
	0x03364794 MOVZ W8, 0x9680
	0x03364798 MOVK W8, 0x980000
	0x0336479C MOVK X9, 0x89F0000
	0x033647A0 MADD X1, X19, X8, X9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0xDC5000
	005 Move X0, [X0+48]
	006 Call 0x1C17D08
	007 Move X19, X0
	008 Move X0, 0xDC2000
	009 Move X0, [X0+152]
	010 Call 0x1C17D08
	011 Move X20, X0
	012 Move X0, 0xDC2000
	013 Move X0, [X0+200]
	014 Call 0x1C17D08
	015 Move X2, X0
	016 Move X0, X19
	017 Move X1, X20
	018 Move X3, X31
	019 Call SR.Format, X0, X1, X2
	020 Move X19, X0
	021 Move X0, 0xD98000
	022 Move X0, [X0+3080]
	023 Call 0x1C17D08
	024 Call 0x1C17F10
	025 Move X1, X19
	026 Move X2, X31
	027 Move X20, X0
	028 Call InvalidCastException..ctor, X0, X1
	029 Move X0, 0xDC7000
	030 Move X0, [X0+2688]
	031 Call 0x1C17D08
	032 Move X1, X0
	033 Move X0, X20
	034 Call 0x1C17DEC

Method: System.UInt64 System.IConvertible.ToUInt64(System.IFormatProvider provider)

Disassembly:
	0x033647A4 ADD X0, X31, 0x10
	0x033647A8 STP X31, X31, [X31 + 0x10]
	0x033647AC BL 0x3363D54
	0x033647B0 LDP X0, X1, [X31 + 0x10]
	0x033647B4 LDP X20, X19, [X31 + 0x30]
	0x033647B8 LDR X30, [X31 + 0x20]
	0x033647BC ADD X31, X31, 0x40
	0x033647C0 RET
	0x033647C4 MOVN X8, 0xF6FF
	0x033647C8 MOVK X8, 0x886E0000
	0x033647CC MOVK X8, 0xFFF1
	0x033647D0 STR X8, [X31 + 0x28]
	0x033647D4 ADRP X19, 0xD91000
	0x033647D8 LDR X19, [X19 + 0xA60]
	0x033647DC MOV X0, X19
	0x033647E0 BL 0x1C16D08
	0x033647E4 ADD X1, X31, 0x28
	0x033647E8 BL 0x1C16E04
	0x033647EC MOVZ X8, 0x417F
	0x033647F0 MOVK X8, 0xFFF40000
	0x033647F4 MOV X20, X0
	0x033647F8 MOVK X8, 0x3A
	0x033647FC MOV X0, X19
	0x03364800 STR X8, [X31 + 0x8]
	0x03364804 BL 0x1C16D08
	0x03364808 ADD X1, X31, 0x8
	0x0336480C BL 0x1C16E04
	0x03364810 MOV X19, X0
	0x03364814 ADRP X0, 0xDBE000
	0x03364818 LDR X0, [X0 + 0x370]
	0x0336481C BL 0x1C16D08
	0x03364820 MOV X1, X20
	0x03364824 MOV X2, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0xDC5000
	005 Move X0, [X0+48]
	006 Call 0x1C17D08
	007 Move X19, X0
	008 Move X0, 0xDC2000
	009 Move X0, [X0+152]
	010 Call 0x1C17D08
	011 Move X20, X0
	012 Move X0, 0xDC2000
	013 Move X0, [X0+208]
	014 Call 0x1C17D08
	015 Move X2, X0
	016 Move X0, X19
	017 Move X1, X20
	018 Move X3, X31
	019 Call SR.Format, X0, X1, X2
	020 Move X19, X0
	021 Move X0, 0xD98000
	022 Move X0, [X0+3080]
	023 Call 0x1C17D08
	024 Call 0x1C17F10
	025 Move X1, X19
	026 Move X2, X31
	027 Move X20, X0
	028 Call InvalidCastException..ctor, X0, X1
	029 Move X0, 0xDC7000
	030 Move X0, [X0+2696]
	031 Call 0x1C17D08
	032 Move X1, X0
	033 Move X0, X20
	034 Call 0x1C17DEC

Method: System.Single System.IConvertible.ToSingle(System.IFormatProvider provider)

Disassembly:
	0x03364828 MOV X3, X31
	0x0336482C BL 0x320A264
	0x03364830 MOV X19, X0
	0x03364834 ADRP X0, 0xD97000
	0x03364838 LDR X0, [X0 + 0x760]
	0x0336483C BL 0x1C16D08
	0x03364840 BL 0x1C16F10
	0x03364844 MOV X20, X0
	0x03364848 ADRP X0, 0xDC6000
	0x0336484C LDR X0, [X0 + 0xAE0]
	0x03364850 BL 0x1C16D08
	0x03364854 MOV X1, X0
	0x03364858 MOV X0, X20
	0x0336485C MOV X2, X19
	0x03364860 MOV X3, X31
	0x03364864 BL 0x3311888
	0x03364868 ADRP X0, 0xDC6000
	0x0336486C LDR X0, [X0 + 0xAE8]
	0x03364870 BL 0x1C16D08
	0x03364874 MOV X1, X0
	0x03364878 MOV X0, X20
	0x0336487C BL 0x1C16DEC
	0x03364880 SUB X31, X31, 0x30
	0x03364884 STP X30, X21, [X31 + 0x10]
	0x03364888 STP X20, X19, [X31 + 0x20]
	0x0336488C ADRP X20, 0x1078000
	0x03364890 ADRP X21, 0xD91000
	0x03364894 LDRB W8, [X20 + 0xE80]
	0x03364898 LDR X21, [X21 + 0xA58]
	0x0336489C MOV X19, X0
	0x033648A0 TBNZ X8, 0x0, 0x33648B8
	0x033648A4 ADRP X0, 0xD91000
	0x033648A8 LDR X0, [X0 + 0xA58]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0xDC5000
	005 Move X0, [X0+48]
	006 Call 0x1C17D08
	007 Move X19, X0
	008 Move X0, 0xDC2000
	009 Move X0, [X0+152]
	010 Call 0x1C17D08
	011 Move X20, X0
	012 Move X0, 0xDC2000
	013 Move X0, [X0+232]
	014 Call 0x1C17D08
	015 Move X2, X0
	016 Move X0, X19
	017 Move X1, X20
	018 Move X3, X31
	019 Call SR.Format, X0, X1, X2
	020 Move X19, X0
	021 Move X0, 0xD98000
	022 Move X0, [X0+3080]
	023 Call 0x1C17D08
	024 Call 0x1C17F10
	025 Move X1, X19
	026 Move X2, X31
	027 Move X20, X0
	028 Call InvalidCastException..ctor, X0, X1
	029 Move X0, 0xDC7000
	030 Move X0, [X0+2704]
	031 Call 0x1C17D08
	032 Move X1, X0
	033 Move X0, X20
	034 Call 0x1C17DEC

Method: System.Double System.IConvertible.ToDouble(System.IFormatProvider provider)

Disassembly:
	0x033648AC BL 0x1C16CF4
	0x033648B0 MOVZ W8, 0x1
	0x033648B4 STRB W8, [X20 + 0xE80]
	0x033648B8 LDR X0, [X21]
	0x033648BC LDR W8, [X0 + 0xE0]
	0x033648C0 CBNZ W8, 0x33648C8
	0x033648C4 BL 0x1C16DFC
	0x033648C8 LDRSH W2, [X19 + 0x8]
	0x033648CC STR X31, [X31 + 0x8]
	0x033648D0 ADD X0, X31, 0x8
	0x033648D4 MOV W1, W31
	0x033648D8 MOV W3, W31
	0x033648DC MOV X4, X31
	0x033648E0 BL 0x3393ED0
	0x033648E4 LDR X0, [X31 + 0x8]
	0x033648E8 BL 0x3363E0C
	0x033648EC MOV X0, X19
	0x033648F0 BL 0x336425C
	0x033648F4 LDRSH W2, [X19 + 0x8]
	0x033648F8 MOV X20, X0
	0x033648FC STR X31, [X31 + 0x8]
	0x03364900 ADD X0, X31, 0x8
	0x03364904 MOV W1, W31
	0x03364908 MOV W3, W31
	0x0336490C MOV X4, X31
	0x03364910 BL 0x3393ED0
	0x03364914 LDR X1, [X31 + 0x8]
	0x03364918 MOV X0, X20
	0x0336491C BL 0x3363F64
	0x03364920 LDP X20, X19, [X31 + 0x20]
	0x03364924 LDP X30, X21, [X31 + 0x10]
	0x03364928 ADD X31, X31, 0x30
	0x0336492C RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0xDC5000
	005 Move X0, [X0+48]
	006 Call 0x1C17D08
	007 Move X19, X0
	008 Move X0, 0xDC2000
	009 Move X0, [X0+152]
	010 Call 0x1C17D08
	011 Move X20, X0
	012 Move X0, 0xDC2000
	013 Move X0, [X0+240]
	014 Call 0x1C17D08
	015 Move X2, X0
	016 Move X0, X19
	017 Move X1, X20
	018 Move X3, X31
	019 Call SR.Format, X0, X1, X2
	020 Move X19, X0
	021 Move X0, 0xD98000
	022 Move X0, [X0+3080]
	023 Call 0x1C17D08
	024 Call 0x1C17F10
	025 Move X1, X19
	026 Move X2, X31
	027 Move X20, X0
	028 Call InvalidCastException..ctor, X0, X1
	029 Move X0, 0xDC7000
	030 Move X0, [X0+2712]
	031 Call 0x1C17D08
	032 Move X1, X0
	033 Move X0, X20
	034 Call 0x1C17DEC

Method: System.Decimal System.IConvertible.ToDecimal(System.IFormatProvider provider)

Disassembly:
	0x03364930 B 0x3364944
	0x03364934 B 0x3364944
	0x03364938 B 0x3364944
	0x0336493C B 0x3364944
	0x03364940 B 0x3364944
	0x03364944 MOV X19, X0
	0x03364948 CMP W1, 0x1
	0x0336494C B.NE 0x33649F4
	0x03364950 MOV X0, X19
	0x03364954 BL 0x3EB1AD0
	0x03364958 MOV X19, X0
	0x0336495C ADRP X0, 0xD97000
	0x03364960 LDR X0, [X0 + 0x578]
	0x03364964 BL 0x1C16D08
	0x03364968 LDR X8, [X19]
	0x0336496C LDR X1, [X8]
	0x03364970 BL 0x1C17270
	0x03364974 TBZ X0, 0x0, 0x33649CC
	0x03364978 LDR X19, [X19]
	0x0336497C BL 0x3EB1AE0
	0x03364980 ADRP X0, 0xDB9000
	0x03364984 LDR X0, [X0 + 0x2E0]
	0x03364988 BL 0x1C16D08
	0x0336498C BL 0x1C16F10
	0x03364990 MOV X20, X0
	0x03364994 ADRP X0, 0xDC3000
	0x03364998 LDR X0, [X0 + 0xC80]
	0x0336499C BL 0x1C16D08
	0x033649A0 MOV X1, X0
	0x033649A4 MOV X0, X20
	0x033649A8 MOV X2, X19
	0x033649AC MOV X3, X31
	0x033649B0 BL 0x329F124

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0xDC5000
	005 Move X0, [X0+48]
	006 Call 0x1C17D08
	007 Move X19, X0
	008 Move X0, 0xDC2000
	009 Move X0, [X0+152]
	010 Call 0x1C17D08
	011 Move X20, X0
	012 Move X0, 0xDC2000
	013 Move X0, [X0+160]
	014 Call 0x1C17D08
	015 Move X2, X0
	016 Move X0, X19
	017 Move X1, X20
	018 Move X3, X31
	019 Call SR.Format, X0, X1, X2
	020 Move X19, X0
	021 Move X0, 0xD98000
	022 Move X0, [X0+3080]
	023 Call 0x1C17D08
	024 Call 0x1C17F10
	025 Move X1, X19
	026 Move X2, X31
	027 Move X20, X0
	028 Call InvalidCastException..ctor, X0, X1
	029 Move X0, 0xDC7000
	030 Move X0, [X0+2720]
	031 Call 0x1C17D08
	032 Move X1, X0
	033 Move X0, X20
	034 Call 0x1C17DEC

Method: System.DateTime System.IConvertible.ToDateTime(System.IFormatProvider provider)

Disassembly:
	0x033649B4 ADRP X0, 0xDC6000
	0x033649B8 LDR X0, [X0 + 0xAF0]

ISIL:
	001 Move X0, [X0]
	002 Return X0

Method: System.Object System.IConvertible.ToType(System.Type type, System.IFormatProvider provider)

Disassembly:
	0x033649BC BL 0x1C16D08
	0x033649C0 MOV X1, X0
	0x033649C4 MOV X0, X20
	0x033649C8 BL 0x1C16DEC
	0x033649CC MOVZ W0, 0x8
	0x033649D0 BL 0x3EB1AF0
	0x033649D4 LDR X8, [X19]
	0x033649D8 STR X8, [X0]
	0x033649DC ADRP X1, 0xB50000
	0x033649E0 ADD X1, X1, 0xE58
	0x033649E4 MOV X2, X31
	0x033649E8 BL 0x3EB1B00
	0x033649EC MOV X19, X0
	0x033649F0 BL 0x3EB1AE0
	0x033649F4 MOV X0, X19
	0x033649F8 BL 0x1D2C690
	0x033649FC BL 0x1990590
	0x03364A00 STP X30, X21, [X31 - 0x20]!
	0x03364A04 STP X20, X19, [X31 + 0x10]
	0x03364A08 ADRP X21, 0x1078000
	0x03364A0C LDRB W8, [X21 + 0xE81]
	0x03364A10 MOV X19, X1
	0x03364A14 MOV X20, X0
	0x03364A18 TBNZ X8, 0x0, 0x3364A3C
	0x03364A1C ADRP X0, 0xDC6000
	0x03364A20 LDR X0, [X0 + 0xAF8]
	0x03364A24 BL 0x1C16CF4
	0x03364A28 ADRP X0, 0xDC1000
	0x03364A2C LDR X0, [X0 + 0x98]
	0x03364A30 BL 0x1C16CF4
	0x03364A34 MOVZ W8, 0x1
	0x03364A38 STRB W8, [X21 + 0xE81]
	0x03364A3C CBZ X19, 0x3364A80
	0x03364A40 ADRP X8, 0xDC1000
	0x03364A44 LDR X8, [X8 + 0x98]
	0x03364A48 LDR X2, [X20]
	0x03364A4C ADRP X21, 0xDC6000
	0x03364A50 MOV X0, X19
	0x03364A54 LDR X1, [X8]
	0x03364A58 LDR X21, [X21 + 0xAF8]
	0x03364A5C MOV X3, X31
	0x03364A60 BL 0x32A9280
	0x03364A64 LDR X1, [X21]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x1079000
	009 Move X23, 0xD91000
	010 Move X22, 0xD99000
	011 Move W8, [X24+3698]
	012 Move X23, [X23+2544]
	013 Move X22, [X22+2536]
	014 Move X19, X2
	015 Move X20, X1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xD99000
	022 Move X0, [X0+2536]
	023 Call 0x1C17CF4
	024 Move X0, 0xD91000
	025 Move X0, [X0+2544]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X24+3698], W8
	029 Move X8, [X21]
	030 Move X0, [X23]
	031 Add X1, X31, 8
	032 Move [X31+8], X8
	033 Call 0x1C17E04
	034 Move X8, [X22]
	035 Move X21, X0
	036 Move W9, [X8+224]
	037 Compare W9, 0
	038 JumpIfNotEqual {41}
	039 Move X0, X8
	040 Call 0x1C17DFC
	041 Move X0, X21
	042 Move X1, X20
	043 Move X2, X19
	044 Move X3, X31
	045 Call Convert.DefaultToType, X0, X1, X2
	046 Move X20, [X31+48]
	047 Move X19, [X31+56]
	048 Move X22, [X31+32]
	049 Move X21, [X31+40]
	050 Move X24, [X31+16]
	051 Move X23, [X31+24]
	052 Move X30, [X31+64]
	053 Return X0

Method: System.Boolean TryCreate(System.Int32 year, System.Int32 month, System.Int32 day, System.Int32 hour, System.Int32 minute, System.Int32 second, System.Int32 millisecond, out System.DateTime result)

Disassembly:
	0x03364A68 LDRH W2, [X20 + 0x8]
	0x03364A6C MOV X0, X19
	0x03364A70 LDP X20, X19, [X31 + 0x10]
	0x03364A74 MOV X3, X31
	0x03364A78 LDP X30, X21, [X31], #0x20
	0x03364A7C B 0x32A8E54
	0x03364A80 ADRP X0, 0xD94000
	0x03364A84 LDR X0, [X0 + 0x528]
	0x03364A88 BL 0x1C16D08
	0x03364A8C BL 0x1C16F10
	0x03364A90 MOV X19, X0
	0x03364A94 ADRP X0, 0xDB9000
	0x03364A98 LDR X0, [X0 + 0x2D8]
	0x03364A9C BL 0x1C16D08
	0x03364AA0 MOV X1, X0
	0x03364AA4 MOV X0, X19
	0x03364AA8 MOV X2, X31
	0x03364AAC BL 0x330E100
	0x03364AB0 ADRP X0, 0xDC6000
	0x03364AB4 LDR X0, [X0 + 0xB00]
	0x03364AB8 BL 0x1C16D08
	0x03364ABC MOV X1, X0
	0x03364AC0 MOV X0, X19
	0x03364AC4 BL 0x1C16DEC
	0x03364AC8 STR X30, [X31 - 0x30]!
	0x03364ACC STP X22, X21, [X31 + 0x10]
	0x03364AD0 STP X20, X19, [X31 + 0x20]
	0x03364AD4 ADRP X21, 0x1078000
	0x03364AD8 LDRB W8, [X21 + 0xE82]
	0x03364ADC MOV X20, X1
	0x03364AE0 MOV X19, X0
	0x03364AE4 TBNZ X8, 0x0, 0x3364B44
	0x03364AE8 ADRP X0, 0xDC0000
	0x03364AEC LDR X0, [X0 + 0xF38]
	0x03364AF0 BL 0x1C16CF4
	0x03364AF4 ADRP X0, 0xD90000
	0x03364AF8 LDR X0, [X0 + 0x9F0]
	0x03364AFC BL 0x1C16CF4
	0x03364B00 ADRP X0, 0xDB6000
	0x03364B04 LDR X0, [X0 + 0xD78]
	0x03364B08 BL 0x1C16CF4
	0x03364B0C ADRP X0, 0xD93000
	0x03364B10 LDR X0, [X0 + 0x628]
	0x03364B14 BL 0x1C16CF4
	0x03364B18 ADRP X0, 0xD8F000
	0x03364B1C LDR X0, [X0 + 0x6C0]
	0x03364B20 BL 0x1C16CF4
	0x03364B24 ADRP X0, 0xDC6000
	0x03364B28 LDR X0, [X0 + 0xAF8]
	0x03364B2C BL 0x1C16CF4
	0x03364B30 ADRP X0, 0xDC1000
	0x03364B34 LDR X0, [X0 + 0x98]
	0x03364B38 BL 0x1C16CF4
	0x03364B3C MOVZ W8, 0x1
	0x03364B40 STRB W8, [X21 + 0xE82]
	0x03364B44 CBZ X20, 0x3364C3C
	0x03364B48 ADRP X8, 0xD8F000
	0x03364B4C LDR X8, [X8 + 0x6C0]
	0x03364B50 ADRP X22, 0xDC1000
	0x03364B54 LDR X0, [X8]
	0x03364B58 ADRP X8, 0xDC0000
	0x03364B5C LDR X8, [X8 + 0xF38]
	0x03364B60 LDR W9, [X0 + 0xE0]
	0x03364B64 LDR X21, [X8]
	0x03364B68 LDR X22, [X22 + 0x98]
	0x03364B6C CBNZ W9, 0x3364B74
	0x03364B70 BL 0x1C16DFC
	0x03364B74 MOV X0, X21
	0x03364B78 MOV X1, X31
	0x03364B7C BL 0x338C698
	0x03364B80 LDR X1, [X22]
	0x03364B84 MOV X2, X0
	0x03364B88 MOV X0, X20
	0x03364B8C MOV X3, X31
	0x03364B90 BL 0x32A9678
	0x03364B94 CBZ X0, 0x3364C34
	0x03364B98 ADRP X8, 0xD90000
	0x03364B9C LDR X8, [X8 + 0x9F0]
	0x03364BA0 LDR X9, [X0]
	0x03364BA4 LDR X1, [X8]
	0x03364BA8 LDR X8, [X9 + 0x40]
	0x03364BAC LDR X9, [X1 + 0x40]
	0x03364BB0 CMP X8, X9
	0x03364BB4 B.NE 0x3364C38
	0x03364BB8 ADRP X21, 0xDB6000
	0x03364BBC ADRP X22, 0xDC6000
	0x03364BC0 LDR X21, [X21 + 0xD78]
	0x03364BC4 LDR X22, [X22 + 0xAF8]
	0x03364BC8 BL 0x1C16E08
	0x03364BCC LDR X8, [X0]
	0x03364BD0 MOV X1, X31
	0x03364BD4 STR X8, [X19]
	0x03364BD8 LDR X0, [X21]
	0x03364BDC BL 0x338C698
	0x03364BE0 LDR X1, [X22]
	0x03364BE4 MOV X2, X0
	0x03364BE8 MOV X0, X20
	0x03364BEC MOV X3, X31
	0x03364BF0 BL 0x32A9678
	0x03364BF4 CBZ X0, 0x3364C34
	0x03364BF8 ADRP X8, 0xD93000
	0x03364BFC LDR X8, [X8 + 0x628]
	0x03364C00 LDR X9, [X0]
	0x03364C04 LDR X1, [X8]
	0x03364C08 LDR X8, [X9 + 0x40]
	0x03364C0C LDR X9, [X1 + 0x40]
	0x03364C10 CMP X8, X9
	0x03364C14 B.NE 0x3364C38
	0x03364C18 BL 0x1C16E08
	0x03364C1C LDRH W8, [X0]
	0x03364C20 LDP X22, X21, [X31 + 0x10]
	0x03364C24 STRH W8, [X19 + 0x8]
	0x03364C28 LDP X20, X19, [X31 + 0x20]
	0x03364C2C LDR X30, [X31], #0x30
	0x03364C30 RET
	0x03364C34 BL 0x1C16F20
	0x03364C38 BL 0x1C171E0
	0x03364C3C ADRP X0, 0xD94000
	0x03364C40 LDR X0, [X0 + 0x528]
	0x03364C44 BL 0x1C16D08
	0x03364C48 BL 0x1C16F10
	0x03364C4C MOV X19, X0
	0x03364C50 ADRP X0, 0xDB9000
	0x03364C54 LDR X0, [X0 + 0x2D8]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X27, 0x1079000
	015 Move X29, 0xD91000
	016 Move W8, [X27+3699]
	017 Move X29, [X29+2544]
	018 Move X19, X7
	019 Move W20, W6
	020 Move W21, W5
	021 Move W22, W4
	022 Move W23, W3
	023 Move W24, W2
	024 Move W25, W1
	025 Move W26, W0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {35}
	030 Move X0, 0xD91000
	031 Move X0, [X0+2544]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X27+3699], W8
	035 Move X8, [X29]
	036 Move W9, [X8+224]
	037 Compare W9, 0
	038 JumpIfNotEqual {42}
	039 Move X0, X8
	040 Call 0x1C17DFC
	041 Move X8, [X29]
	042 Move X8, [X8+184]
	043 Subtract W28, W25, 1
	044 Move W0, W31
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X8, [X8+16]
	047 Move [X19], X8
	048 Subtract W8, W26, 1
	049 Move W9, 0x270E
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X0, [X29]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move W0, W26
	057 Call DateTime.IsLeapYear, X0
	058 Move X8, [X29]
	059 Move W27, W0
	060 Move W9, [X8+224]
	061 Compare W9, 0
	062 JumpIfNotEqual {66}
	063 Move X0, X8
	064 Call 0x1C17DFC
	065 Move X8, [X29]
	066 Move X9, [X8+184]
	067 And W31, W27, 1
	068 Add X10, X9, 8
	069 NotImplemented "Instruction CSEL not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X9, [X9]
	072 Compare X9, 0
	073 JumpIfEqual {132}
	074 Move W10, [X9+24]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move W0, W31
	079 NotImplemented "Instruction CMP not yet implemented."
	080 NotImplemented "Instruction CMP not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Add X9, X9, 32
	083 Move W10, [X9]
	084 Move W9, [X9]
	085 Subtract W9, W10, W9
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move W9, [X8+224]
	088 Compare W9, 0
	089 JumpIfNotEqual {92}
	090 Move X0, X8
	091 Call 0x1C17DFC
	092 Move W0, W26
	093 Move W1, W25
	094 Move W2, W24
	095 Call DateTime.DateToTicks, X0, X1, X2
	096 Move X24, X0
	097 Move W0, W23
	098 Move W1, W22
	099 Move W2, W21
	100 Call DateTime.TimeToTicks, X0, X1, X2
	101 Move W8, 0x2710
	102 NotImplemented "Instruction UMADDL not yet implemented."
	103 Add X1, X8, X0
	104 Move X8, 0x3FFF
	105 NotImplemented "Instruction MOVK not yet implemented."
	106 NotImplemented "Instruction MOVK not yet implemented."
	107 NotImplemented "Instruction MOVK not yet implemented."
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Add X0, X31, 8
	110 Move W2, W31
	111 Move [X31+8], X31
	112 Call DateTime..ctor, X0, X1, X2
	113 Move X8, [X31+8]
	114 Move W0, 1
	115 Move [X19], X8
	116 Move W0, W31
	117 Move X20, [X31+96]
	118 Move X19, [X31+104]
	119 Move X22, [X31+80]
	120 Move X21, [X31+88]
	121 Move X24, [X31+64]
	122 Move X23, [X31+72]
	123 Move X26, [X31+48]
	124 Move X25, [X31+56]
	125 Move X28, [X31+32]
	126 Move X27, [X31+40]
	127 Move X29, [X31+16]
	128 Move X30, [X31+24]
	129 Add X31, X31, 112
	130 Return X0
	131 Call 0x1C17F28
	132 Call 0x1C17F20

Method: System.DateTime get_UtcNow()

Disassembly:
	0x033626A4 STP X30, X25, [X31 + 0x80]
	0x033626A8 STP X24, X23, [X31 + 0x90]
	0x033626AC STP X22, X21, [X31 + 0xA0]
	0x033626B0 STP X20, X19, [X31 + 0xB0]
	0x033626B4 ADRP X25, 0x107A000
	0x033626B8 ADRP X24, 0xD92000
	0x033626BC LDRB W8, [X25 + 0xEE8]
	0x033626C0 LDR X24, [X24 + 0x9F0]
	0x033626C4 MOV X19, X4
	0x033626C8 MOV W20, W3
	0x033626CC MOV X21, X2
	0x033626D0 MOV X22, X1
	0x033626D4 MOV X23, X0
	0x033626D8 TBNZ X8, 0x0, 0x33626FC
	0x033626DC ADRP X0, 0xDC6000
	0x033626E0 LDR X0, [X0 + 0x588]
	0x033626E4 BL 0x1C16CF4
	0x033626E8 ADRP X0, 0xD92000
	0x033626EC LDR X0, [X0 + 0x9F0]
	0x033626F0 BL 0x1C16CF4
	0x033626F4 MOVZ W8, 0x1
	0x033626F8 STRB W8, [X25 + 0xEE8]
	0x033626FC LDR X0, [X24]
	0x03362700 MOVI V0.2D, 0x0
	0x03362704 STP V0, V0, [X31 + 0x60]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x107B000
	005 Move X20, 0xD93000
	006 Move W8, [X19+3700]
	007 Move X20, [X20+2544]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xD93000
	013 Move X0, [X0+2544]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3700], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Call 0x1C26758
	023 Move X8, 0x22770000
	024 NotImplemented "Instruction MOVK not yet implemented."
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 NotImplemented "Instruction MOVK not yet implemented."
	028 Add X8, X0, X8
	029 Or X0, X8, 0x7FFFFFFFFFFFFFFF
	030 Move X30, [X31+32]
	031 Return X0

Method: System.Int64 GetSystemTimeAsFileTime()

Disassembly:
	0x03364C58 BL 0x1C16D08

ISIL:
	001 Call 0x1C26758
	002 Return X0

Method: System.Int64 ToBinaryRaw()

Disassembly:
	0x03364C5C MOV X1, X0
	0x03364C60 MOV X0, X19

ISIL:
	001 Move X0, [X0]
	002 Return X0

Method: System.Void .cctor()

Disassembly:
	0x03364C64 MOV X2, X31
	0x03364C68 BL 0x330E100
	0x03364C6C ADRP X0, 0xDC6000
	0x03364C70 LDR X0, [X0 + 0xB08]
	0x03364C74 BL 0x1C16D08
	0x03364C78 MOV X1, X0
	0x03364C7C MOV X0, X19
	0x03364C80 BL 0x1C16DEC
	0x03364C84 SUB X31, X31, 0x30
	0x03364C88 STP X30, X21, [X31 + 0x10]
	0x03364C8C STP X20, X19, [X31 + 0x20]
	0x03364C90 ADRP X21, 0x1078000
	0x03364C94 ADRP X20, 0xD91000
	0x03364C98 LDRB W8, [X21 + 0xE83]
	0x03364C9C LDR X20, [X20 + 0xA58]
	0x03364CA0 MOV X19, X0
	0x03364CA4 TBNZ X8, 0x0, 0x3364CC8
	0x03364CA8 ADRP X0, 0xD91000
	0x03364CAC LDR X0, [X0 + 0xA58]
	0x03364CB0 BL 0x1C16CF4
	0x03364CB4 ADRP X0, 0xD90000
	0x03364CB8 LDR X0, [X0 + 0x9F0]
	0x03364CBC BL 0x1C16CF4
	0x03364CC0 MOVZ W8, 0x1
	0x03364CC4 STRB W8, [X21 + 0xE83]
	0x03364CC8 LDR X0, [X20]
	0x03364CCC ADRP X20, 0xD90000
	0x03364CD0 LDR W8, [X0 + 0xE0]
	0x03364CD4 LDR X20, [X20 + 0x9F0]
	0x03364CD8 CBNZ W8, 0x3364CE0
	0x03364CDC BL 0x1C16DFC
	0x03364CE0 MOV X0, X19
	0x03364CE4 BL 0x3364200
	0x03364CE8 LDR X8, [X20]
	0x03364CEC STR X0, [X31 + 0x8]
	0x03364CF0 LDR W9, [X8 + 0xE0]
	0x03364CF4 CBNZ W9, 0x3364D00
	0x03364CF8 MOV X0, X8
	0x03364CFC BL 0x1C16DFC
	0x03364D00 ADD X0, X31, 0x8
	0x03364D04 BL 0x3361258
	0x03364D08 LDP X20, X19, [X31 + 0x20]
	0x03364D0C LDP X30, X21, [X31 + 0x10]
	0x03364D10 ADD X31, X31, 0x30
	0x03364D14 RET
	0x03364D18 SUB X31, X31, 0x50
	0x03364D1C STR X30, [X31 + 0x20]
	0x03364D20 STP X22, X21, [X31 + 0x30]
	0x03364D24 STP X20, X19, [X31 + 0x40]
	0x03364D28 ADRP X20, 0x1078000
	0x03364D2C LDRB W8, [X20 + 0xE84]
	0x03364D30 MOV X19, X0
	0x03364D34 TBNZ X8, 0x0, 0x3364D64
	0x03364D38 ADRP X0, 0xDC4000
	0x03364D3C LDR X0, [X0 + 0x328]
	0x03364D40 BL 0x1C16CF4
	0x03364D44 ADRP X0, 0xDC4000
	0x03364D48 LDR X0, [X0 + 0x588]
	0x03364D4C BL 0x1C16CF4
	0x03364D50 ADRP X0, 0xD90000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x1079000
	008 Move X22, 0xD91000
	009 Move X19, 0xDC5000
	010 Move X20, 0xD91000
	011 Move X21, 0xDC5000
	012 Move W8, [X23+3701]
	013 Move X22, [X22+3672]
	014 Move X19, [X19+2312]
	015 Move X20, [X20+2544]
	016 Move X21, [X21+2320]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {35}
	021 Move X0, 0xD91000
	022 Move X0, [X0+2544]
	023 Call 0x1C17CF4
	024 Move X0, 0xD91000
	025 Move X0, [X0+3672]
	026 Call 0x1C17CF4
	027 Move X0, 0xDC5000
	028 Move X0, [X0+2312]
	029 Call 0x1C17CF4
	030 Move X0, 0xDC5000
	031 Move X0, [X0+2320]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X23+3701], W8
	035 Move X0, [X22]
	036 Move W1, 13
	037 Call 0x1C17D6C
	038 Move X1, [X19]
	039 Move X2, X31
	040 Move X19, X0
	041 Call RuntimeHelpers.InitializeArray, X0, X1
	042 Move X8, [X20]
	043 Move W1, 13
	044 Move X8, [X8+184]
	045 Move [X8], X19
	046 Move X0, [X22]
	047 Call 0x1C17D6C
	048 Move X1, [X21]
	049 Move X2, X31
	050 Move X19, X0
	051 Call RuntimeHelpers.InitializeArray, X0, X1
	052 Move X8, [X20]
	053 Move X9, -42438656
	054 Move V0, [X9+214]
	055 Move X9, 0x8000
	056 Move X8, [X8+184]
	057 NotImplemented "Instruction MOVK not yet implemented."
	058 Move X22, [X31+16]
	059 Move X21, [X31+24]
	060 NotImplemented "Instruction MOVK not yet implemented."
	061 Move [X8+8], X19
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 NotImplemented "Instruction MOVK not yet implemented."
	065 Move [X8+1], V0
	066 Move [X8+32], X9
	067 Move X30, [X31+48]
	068 Move X23, [X31+56]
	069 Return 

