Type: System.ValueTuple`4

Method: System.Void .ctor(T1 item1, T2 item2, T3 item3, T4 item4)

Disassembly:
	0x027C92B4 MOV W2, W20
	0x027C92B8 MOV X4, X31
	0x027C92BC BL 0x339BD1C
	0x027C92C0 LDP X20, X19, [X31 + 0x30]
	0x027C92C4 LDP X22, X21, [X31 + 0x20]
	0x027C92C8 LDP X24, X23, [X31 + 0x10]

ISIL:
	001 And W8, W1, 1
	002 And W9, W2, 1
	003 Move [X0], W8
	004 Move [X0+1], W9
	005 Move [X0+8], X3
	006 Move [X0+16], X4
	007 Return 

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x027C92CC LDR X30, [X31], #0x40
	0x027C92D0 RET
	0x027C92D4 BL 0x1C16F20
	0x027C92D8 STR X30, [X31 - 0x20]!
	0x027C92DC STP X20, X19, [X31 + 0x10]
	0x027C92E0 LDR X8, [X2 + 0x20]
	0x027C92E4 MOV X19, X1
	0x027C92E8 MOV X20, X0
	0x027C92EC LDRB W9, [X8 + 0x135]
	0x027C92F0 TBNZ X9, 0x0, 0x27C9300
	0x027C92F4 MOV X0, X8
	0x027C92F8 BL 0x1C5C684
	0x027C92FC MOV X8, X0
	0x027C9300 LDR X8, [X8 + 0xC0]
	0x027C9304 MOV X0, X20
	0x027C9308 MOV X1, X19
	0x027C930C LDP X20, X19, [X31 + 0x10]
	0x027C9310 LDR X2, [X8 + 0x160]
	0x027C9314 LDR X30, [X31], #0x20
	0x027C9318 B 0x27C906C
	0x027C931C SUB X31, X31, 0x40
	0x027C9320 STP X30, X23, [X31 + 0x10]
	0x027C9324 STP X22, X21, [X31 + 0x20]
	0x027C9328 STP X20, X19, [X31 + 0x30]
	0x027C932C ADRP X22, 0x1C11000
	0x027C9330 ADRP X19, 0x192A000
	0x027C9334 LDRB W8, [X22 + 0x961]
	0x027C9338 LDR X19, [X19 + 0xAC8]
	0x027C933C MOV X21, X1
	0x027C9340 MOV X20, X0
	0x027C9344 TBNZ X8, 0x0, 0x27C938C
	0x027C9348 ADRP X0, 0x192A000
	0x027C934C LDR X0, [X0 + 0xB58]
	0x027C9350 BL 0x1C16CF4
	0x027C9354 ADRP X0, 0x192A000
	0x027C9358 LDR X0, [X0 + 0xAC8]
	0x027C935C BL 0x1C16CF4
	0x027C9360 ADRP X0, 0x192A000
	0x027C9364 LDR X0, [X0 + 0x838]
	0x027C9368 BL 0x1C16CF4
	0x027C936C ADRP X0, 0x1935000
	0x027C9370 LDR X0, [X0 + 0x310]
	0x027C9374 BL 0x1C16CF4
	0x027C9378 ADRP X0, 0x192B000
	0x027C937C LDR X0, [X0 + 0x608]
	0x027C9380 BL 0x1C16CF4
	0x027C9384 MOVZ W8, 0x1
	0x027C9388 STRB W8, [X22 + 0x961]
	0x027C938C LDR X0, [X19]
	0x027C9390 MOVZ W1, 0x9
	0x027C9394 STP X31, X31, [X31]
	0x027C9398 BL 0x1C16D6C
	0x027C939C CBZ X0, 0x27C9528
	0x027C93A0 LDR W8, [X0 + 0x18]
	0x027C93A4 MOV X19, X0
	0x027C93A8 CBZ W8, 0x27C9524
	0x027C93AC ADRP X8, 0x1935000
	0x027C93B0 LDR X8, [X8 + 0x310]
	0x027C93B4 ADRP X22, 0x192A000
	0x027C93B8 LDR X8, [X8]
	0x027C93BC LDR X22, [X22 + 0xB58]
	0x027C93C0 STR X8, [X19 + 0x20]
	0x027C93C4 LDR X0, [X22]
	0x027C93C8 LDR W8, [X0 + 0xE0]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Move X8, [X2+32]
	007 Move X20, X2
	008 Move X21, X1
	009 Move X19, X0
	010 Move W9, [X8+309]
	011 Move TEMP, X9
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {18}
	015 Move X0, X8
	016 Call 0x1C5D684
	017 Move X8, X0
	018 Move X8, [X8+192]
	019 Move X0, [X8+8]
	020 Move W8, [X0+309]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {26}
	025 Call 0x1C5D684
	026 Compare X21, 0
	027 JumpIfEqual {30}
	028 Move X8, [X21]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W0, W31
	031 Move X0, [X20+32]
	032 Move W8, [X0+309]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {38}
	037 Call 0x1C5D684
	038 Move X8, [X0+192]
	039 Move X1, [X8+8]
	040 Move W8, [X1+309]
	041 Move TEMP, X8
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {48}
	045 Move X0, X1
	046 Call 0x1C5D684
	047 Move X1, X0
	048 Move X8, [X21]
	049 Move X9, [X1+64]
	050 Move X0, X21
	051 Move X8, [X8+64]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Call 0x1C17E08
	054 Move X8, [X0+16]
	055 Move V0, [X0]
	056 Move [X31+16], X8
	057 Move [X31], V0
	058 Move X0, [X20+32]
	059 Move W8, [X0+309]
	060 Move TEMP, X8
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {65}
	064 Call 0x1C5D684
	065 Move X8, [X0+192]
	066 Move V0, [X31]
	067 Move X9, [X31+16]
	068 Add X1, X31, 32
	069 Move X2, [X8+40]
	070 Move X0, X19
	071 Move [X31+2], V0
	072 Move [X31+48], X9
	073 Call 0x27C93CC, X0, X1
	074 Move X20, [X31+80]
	075 Move X19, [X31+88]
	076 Move X30, [X31+64]
	077 Move X21, [X31+72]
	078 And W0, W0, 1
	079 Add X31, X31, 96
	080 Return X0
	081 Call 0x1C181E0

Method: System.Boolean Equals(System.ValueTuple`4<T1, T2, T3, T4> other)

Disassembly:
	0x027C93CC CBNZ W8, 0x27C93D4
	0x027C93D0 BL 0x1C16DFC
	0x027C93D4 LDR X0, [X21 + 0x20]
	0x027C93D8 LDRB W8, [X0 + 0x135]
	0x027C93DC TBNZ X8, 0x0, 0x27C93E4
	0x027C93E0 BL 0x1C5C684
	0x027C93E4 LDR X8, [X0 + 0xC0]
	0x027C93E8 MOV X0, X20
	0x027C93EC LDR X1, [X8 + 0x168]
	0x027C93F0 BL 0x33176C4
	0x027C93F4 LDR W8, [X19 + 0x18]
	0x027C93F8 CMP W8, 0x1
	0x027C93FC B.LS 0x27C9524
	0x027C9400 CMP W8, 0x2
	0x027C9404 STR X0, [X19 + 0x28]
	0x027C9408 B.EQ 0x27C9524
	0x027C940C ADRP X23, 0x192A000
	0x027C9410 LDR X23, [X23 + 0x838]
	0x027C9414 LDR X8, [X23]
	0x027C9418 STR X8, [X19 + 0x30]
	0x027C941C LDR X0, [X22]
	0x027C9420 ADD X22, X20, 0x1
	0x027C9424 LDR W8, [X0 + 0xE0]
	0x027C9428 CBNZ W8, 0x27C9430
	0x027C942C BL 0x1C16DFC
	0x027C9430 LDR X0, [X21 + 0x20]
	0x027C9434 LDRB W8, [X0 + 0x135]
	0x027C9438 TBNZ X8, 0x0, 0x27C9440
	0x027C943C BL 0x1C5C684
	0x027C9440 LDR X8, [X0 + 0xC0]
	0x027C9444 MOV X0, X22
	0x027C9448 LDR X1, [X8 + 0x170]
	0x027C944C BL 0x33176C4
	0x027C9450 LDR X8, [X19 + 0x18]
	0x027C9454 CMP W8, 0x3
	0x027C9458 B.LS 0x27C9524
	0x027C945C CMP W8, 0x4
	0x027C9460 STR X0, [X19 + 0x38]
	0x027C9464 B.EQ 0x27C9524
	0x027C9468 LDR X9, [X23]
	0x027C946C STR X9, [X19 + 0x40]
	0x027C9470 LDR X9, [X20 + 0x8]
	0x027C9474 STR X9, [X31 + 0x8]
	0x027C9478 CBZ X9, 0x27C9498
	0x027C947C LDR X0, [X31 + 0x8]
	0x027C9480 CBZ X0, 0x27C9528
	0x027C9484 LDR X8, [X0]
	0x027C9488 LDP X9, X1, [X8 + 0x168]
	0x027C948C BLR X9
	0x027C9490 LDR X8, [X19 + 0x18]
	0x027C9494 B 0x27C949C
	0x027C9498 MOV X0, X31
	0x027C949C CMP W8, 0x5
	0x027C94A0 B.LS 0x27C9524
	0x027C94A4 CMP W8, 0x6
	0x027C94A8 STR X0, [X19 + 0x48]
	0x027C94AC B.EQ 0x27C9524
	0x027C94B0 LDR X9, [X23]
	0x027C94B4 STR X9, [X19 + 0x50]
	0x027C94B8 LDR X9, [X20 + 0x10]
	0x027C94BC STR X9, [X31]
	0x027C94C0 CBZ X9, 0x27C94E0
	0x027C94C4 LDR X0, [X31]
	0x027C94C8 CBZ X0, 0x27C9528
	0x027C94CC LDR X8, [X0]
	0x027C94D0 LDP X9, X1, [X8 + 0x168]
	0x027C94D4 BLR X9
	0x027C94D8 LDR X8, [X19 + 0x18]
	0x027C94DC B 0x27C94E4
	0x027C94E0 MOV X0, X31
	0x027C94E4 CMP W8, 0x7

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X21, X2
	007 Move X19, X1
	008 Move X20, X0
	009 Move W9, [X8+309]
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X8
	015 Call 0x1C5D684
	016 Move X8, X0
	017 Move X8, [X8+192]
	018 Move X0, [X8+56]
	019 Call 0x21199DC
	020 Compare X0, 0
	021 JumpIfEqual {106}
	022 Move X8, [X0]
	023 Move W9, [X19]
	024 Move W1, [X20]
	025 Move X10, [X8+440]
	026 Move X3, [X8+448]
	027 And W2, W9, 1
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {100}
	033 Move X0, [X21+32]
	034 Move W8, [X0+309]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {40}
	039 Call 0x1C5D684
	040 Move X8, [X0+192]
	041 Move X0, [X8+88]
	042 Call 0x21199DC
	043 Compare X0, 0
	044 JumpIfEqual {106}
	045 Move X8, [X0]
	046 Move W9, [X19+1]
	047 Move W1, [X20+1]
	048 Move X10, [X8+440]
	049 Move X3, [X8+448]
	050 And W2, W9, 1
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {100}
	056 Move X0, [X21+32]
	057 Move W8, [X0+309]
	058 Move TEMP, X8
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfEqual {63}
	062 Call 0x1C5D684
	063 Move X8, [X0+192]
	064 Move X0, [X8+120]
	065 Call 0x211C0E8
	066 Compare X0, 0
	067 JumpIfEqual {106}
	068 Move X8, [X0]
	069 Move X2, [X19+8]
	070 Move X1, [X20+8]
	071 Move X9, [X8+440]
	072 Move X3, [X8+448]
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {100}
	078 Move X0, [X21+32]
	079 Move W8, [X0+309]
	080 Move TEMP, X8
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfEqual {85}
	084 Call 0x1C5D684
	085 Move X8, [X0+192]
	086 Move X0, [X8+152]
	087 Call 0x211C0E8
	088 Compare X0, 0
	089 JumpIfEqual {106}
	090 Move X8, [X0]
	091 Move X2, [X19+16]
	092 Move X1, [X20+16]
	093 Move X20, [X31+16]
	094 Move X19, [X31+24]
	095 Move X4, [X8+440]
	096 Move X3, [X8+448]
	097 Move X30, [X31+32]
	098 Move X21, [X31+40]
	099 CallNoReturn X4
	100 Move X20, [X31+16]
	101 Move X19, [X31+24]
	102 Move W0, W31
	103 Move X30, [X31+32]
	104 Move X21, [X31+40]
	105 Return X0
	106 Call 0x1C17F20

Method: System.Boolean System.Collections.IStructuralEquatable.Equals(System.Object other, System.Collections.IEqualityComparer comparer)

Disassembly:
	0x027C94E8 B.LS 0x27C9524
	0x027C94EC CMP W8, 0x8
	0x027C94F0 STR X0, [X19 + 0x58]
	0x027C94F4 B.EQ 0x27C9524
	0x027C94F8 ADRP X8, 0x192B000
	0x027C94FC LDR X8, [X8 + 0x608]
	0x027C9500 MOV X0, X19
	0x027C9504 LDP X22, X21, [X31 + 0x20]
	0x027C9508 LDP X30, X23, [X31 + 0x10]
	0x027C950C LDR X8, [X8]
	0x027C9510 MOV X1, X31
	0x027C9514 STR X8, [X19 + 0x60]
	0x027C9518 LDP X20, X19, [X31 + 0x30]
	0x027C951C ADD X31, X31, 0x40
	0x027C9520 B 0x32278CC
	0x027C9524 BL 0x1C16F28
	0x027C9528 BL 0x1C16F20
	0x027C952C SUB X31, X31, 0x40
	0x027C9530 STP X30, X23, [X31 + 0x10]
	0x027C9534 STP X22, X21, [X31 + 0x20]
	0x027C9538 STP X20, X19, [X31 + 0x30]
	0x027C953C ADRP X23, 0x1C11000
	0x027C9540 ADRP X19, 0x192A000
	0x027C9544 ADRP X22, 0x192A000
	0x027C9548 LDRB W8, [X23 + 0x962]
	0x027C954C LDR X19, [X19 + 0xAC8]
	0x027C9550 LDR X22, [X22 + 0xB58]
	0x027C9554 MOV X21, X1
	0x027C9558 MOV X20, X0
	0x027C955C TBNZ X8, 0x0, 0x27C9598
	0x027C9560 ADRP X0, 0x192A000
	0x027C9564 LDR X0, [X0 + 0xB58]
	0x027C9568 BL 0x1C16CF4
	0x027C956C ADRP X0, 0x192A000
	0x027C9570 LDR X0, [X0 + 0xAC8]
	0x027C9574 BL 0x1C16CF4
	0x027C9578 ADRP X0, 0x192A000
	0x027C957C LDR X0, [X0 + 0x838]
	0x027C9580 BL 0x1C16CF4
	0x027C9584 ADRP X0, 0x192B000
	0x027C9588 LDR X0, [X0 + 0x608]
	0x027C958C BL 0x1C16CF4
	0x027C9590 MOVZ W8, 0x1
	0x027C9594 STRB W8, [X23 + 0x962]
	0x027C9598 LDR X0, [X19]
	0x027C959C MOVZ W1, 0x8
	0x027C95A0 STP X31, X31, [X31]
	0x027C95A4 BL 0x1C16D6C
	0x027C95A8 LDR X8, [X22]
	0x027C95AC MOV X19, X0
	0x027C95B0 LDR W9, [X8 + 0xE0]
	0x027C95B4 CBNZ W9, 0x27C95C0
	0x027C95B8 MOV X0, X8
	0x027C95BC BL 0x1C16DFC
	0x027C95C0 LDR X0, [X21 + 0x20]
	0x027C95C4 LDRB W8, [X0 + 0x135]
	0x027C95C8 TBNZ X8, 0x0, 0x27C95D0
	0x027C95CC BL 0x1C5C684
	0x027C95D0 LDR X8, [X0 + 0xC0]
	0x027C95D4 MOV X0, X20
	0x027C95D8 LDR X1, [X8 + 0x168]
	0x027C95DC BL 0x33176C4
	0x027C95E0 CBZ X19, 0x27C9714
	0x027C95E4 LDR W8, [X19 + 0x18]
	0x027C95E8 CBZ W8, 0x27C9710
	0x027C95EC CMP W8, 0x1
	0x027C95F0 STR X0, [X19 + 0x20]
	0x027C95F4 B.EQ 0x27C9710
	0x027C95F8 ADRP X23, 0x192A000
	0x027C95FC LDR X23, [X23 + 0x838]
	0x027C9600 LDR X8, [X23]
	0x027C9604 STR X8, [X19 + 0x28]
	0x027C9608 LDR X0, [X22]
	0x027C960C ADD X22, X20, 0x1
	0x027C9610 LDR W8, [X0 + 0xE0]
	0x027C9614 CBNZ W8, 0x27C961C
	0x027C9618 BL 0x1C16DFC
	0x027C961C LDR X0, [X21 + 0x20]
	0x027C9620 LDRB W8, [X0 + 0x135]
	0x027C9624 TBNZ X8, 0x0, 0x27C962C
	0x027C9628 BL 0x1C5C684
	0x027C962C LDR X8, [X0 + 0xC0]
	0x027C9630 MOV X0, X22
	0x027C9634 LDR X1, [X8 + 0x170]
	0x027C9638 BL 0x33176C4
	0x027C963C LDR X8, [X19 + 0x18]
	0x027C9640 CMP W8, 0x2
	0x027C9644 B.LS 0x27C9710
	0x027C9648 CMP W8, 0x3
	0x027C964C STR X0, [X19 + 0x30]
	0x027C9650 B.EQ 0x27C9710
	0x027C9654 LDR X9, [X23]
	0x027C9658 STR X9, [X19 + 0x38]
	0x027C965C LDR X9, [X20 + 0x8]
	0x027C9660 STR X9, [X31 + 0x8]
	0x027C9664 CBZ X9, 0x27C9684
	0x027C9668 LDR X0, [X31 + 0x8]
	0x027C966C CBZ X0, 0x27C9714
	0x027C9670 LDR X8, [X0]
	0x027C9674 LDP X9, X1, [X8 + 0x168]
	0x027C9678 BLR X9
	0x027C967C LDR X8, [X19 + 0x18]
	0x027C9680 B 0x27C9688
	0x027C9684 MOV X0, X31
	0x027C9688 CMP W8, 0x4
	0x027C968C B.LS 0x27C9710
	0x027C9690 CMP W8, 0x5
	0x027C9694 STR X0, [X19 + 0x40]
	0x027C9698 B.EQ 0x27C9710
	0x027C969C LDR X9, [X23]
	0x027C96A0 STR X9, [X19 + 0x48]
	0x027C96A4 LDR X9, [X20 + 0x10]
	0x027C96A8 STR X9, [X31]
	0x027C96AC CBZ X9, 0x27C96CC
	0x027C96B0 LDR X0, [X31]
	0x027C96B4 CBZ X0, 0x27C9714
	0x027C96B8 LDR X8, [X0]
	0x027C96BC LDP X9, X1, [X8 + 0x168]
	0x027C96C0 BLR X9
	0x027C96C4 LDR X8, [X19 + 0x18]
	0x027C96C8 B 0x27C96D0
	0x027C96CC MOV X0, X31
	0x027C96D0 CMP W8, 0x6
	0x027C96D4 B.LS 0x27C9710
	0x027C96D8 CMP W8, 0x7
	0x027C96DC STR X0, [X19 + 0x50]
	0x027C96E0 B.EQ 0x27C9710
	0x027C96E4 ADRP X8, 0x192B000
	0x027C96E8 LDR X8, [X8 + 0x608]
	0x027C96EC MOV X0, X19
	0x027C96F0 LDP X22, X21, [X31 + 0x20]
	0x027C96F4 LDP X30, X23, [X31 + 0x10]
	0x027C96F8 LDR X8, [X8]
	0x027C96FC MOV X1, X31
	0x027C9700 STR X8, [X19 + 0x58]
	0x027C9704 LDP X20, X19, [X31 + 0x30]
	0x027C9708 ADD X31, X31, 0x40
	0x027C970C B 0x32278CC
	0x027C9710 BL 0x1C16F28
	0x027C9714 BL 0x1C16F20
	0x027C9718 MOVZ W0, 0x4
	0x027C971C RET
	0x027C9720 STP S0, S1, [X0]
	0x027C9724 STP S2, S3, [X0 + 0x8]
	0x027C9728 STP S4, S5, [X0 + 0x10]
	0x027C972C STP W1, W2, [X0 + 0x18]
	0x027C9730 RET
	0x027C9734 SUB X31, X31, 0x60
	0x027C9738 STP X30, X21, [X31 + 0x40]
	0x027C973C STP X20, X19, [X31 + 0x50]
	0x027C9740 LDR X8, [X2 + 0x20]
	0x027C9744 MOV X20, X2
	0x027C9748 MOV X21, X1
	0x027C974C MOV X19, X0
	0x027C9750 LDRB W9, [X8 + 0x135]
	0x027C9754 TBNZ X9, 0x0, 0x27C9764
	0x027C9758 MOV X0, X8
	0x027C975C BL 0x1C5C684
	0x027C9760 MOV X8, X0
	0x027C9764 LDR X8, [X8 + 0xC0]
	0x027C9768 LDR X0, [X8 + 0x8]
	0x027C976C LDRB W8, [X0 + 0x135]
	0x027C9770 TBNZ X8, 0x0, 0x27C9778
	0x027C9774 BL 0x1C5C684
	0x027C9778 CBZ X21, 0x27C9788
	0x027C977C LDR X8, [X21]
	0x027C9780 CMP X8, X0
	0x027C9784 B.EQ 0x27C9790
	0x027C9788 MOV W0, W31
	0x027C978C B 0x27C980C
	0x027C9790 LDR X0, [X20 + 0x20]
	0x027C9794 LDRB W8, [X0 + 0x135]
	0x027C9798 TBNZ X8, 0x0, 0x27C97A0
	0x027C979C BL 0x1C5C684
	0x027C97A0 LDR X8, [X0 + 0xC0]
	0x027C97A4 LDR X1, [X8 + 0x8]
	0x027C97A8 LDRB W8, [X1 + 0x135]
	0x027C97AC TBNZ X8, 0x0, 0x27C97BC
	0x027C97B0 MOV X0, X1
	0x027C97B4 BL 0x1C5C684
	0x027C97B8 MOV X1, X0
	0x027C97BC LDR X8, [X21]
	0x027C97C0 LDR X9, [X1 + 0x40]
	0x027C97C4 MOV X0, X21
	0x027C97C8 LDR X8, [X8 + 0x40]
	0x027C97CC CMP X8, X9
	0x027C97D0 B.NE 0x27C9820
	0x027C97D4 BL 0x1C16E08
	0x027C97D8 LDP V1, V0, [X0]
	0x027C97DC STP V1, V0, [X31]
	0x027C97E0 LDR X0, [X20 + 0x20]
	0x027C97E4 LDRB W8, [X0 + 0x135]
	0x027C97E8 TBNZ X8, 0x0, 0x27C97F0
	0x027C97EC BL 0x1C5C684
	0x027C97F0 LDR X8, [X0 + 0xC0]
	0x027C97F4 LDP V0, V1, [X31]
	0x027C97F8 ADD X1, X31, 0x20
	0x027C97FC MOV X0, X19
	0x027C9800 LDR X2, [X8 + 0x28]
	0x027C9804 STP V0, V1, [X31 + 0x20]
	0x027C9808 BL 0x27C9824
	0x027C980C LDP X20, X19, [X31 + 0x50]
	0x027C9810 LDP X30, X21, [X31 + 0x40]
	0x027C9814 AND W0, W0, 0x1
	0x027C9818 ADD X31, X31, 0x60
	0x027C981C RET
	0x027C9820 BL 0x1C171E0
	0x027C9824 STP X30, X21, [X31 - 0x20]!
	0x027C9828 STP X20, X19, [X31 + 0x10]
	0x027C982C LDR X8, [X2 + 0x20]
	0x027C9830 MOV X21, X2
	0x027C9834 MOV X19, X1
	0x027C9838 MOV X20, X0
	0x027C983C LDRB W9, [X8 + 0x135]
	0x027C9840 TBNZ X9, 0x0, 0x27C9850

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X22, 0x1C12000
	013 Move W8, [X22+2397]
	014 Move X23, X3
	015 Move X19, X2
	016 Move X21, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x1955000
	023 Move X0, [X0+2304]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+2397], W8
	027 Compare X21, 0
	028 JumpIfEqual {235}
	029 Move X0, [X23+32]
	030 Move W8, [X0+309]
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {36}
	035 Call 0x1C5D684
	036 Move X8, [X0+192]
	037 Move X0, [X8+8]
	038 Move W8, [X0+309]
	039 Move TEMP, X8
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {44}
	043 Call 0x1C5D684
	044 Move X8, [X21]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X0, [X23+32]
	047 Move W8, [X0+309]
	048 Move TEMP, X8
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {53}
	052 Call 0x1C5D684
	053 Move X8, [X0+192]
	054 Move X1, [X8+8]
	055 Move W8, [X1+309]
	056 Move TEMP, X8
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {63}
	060 Move X0, X1
	061 Call 0x1C5D684
	062 Move X1, X0
	063 Move X8, [X21]
	064 Move X9, [X1+64]
	065 Move X0, X21
	066 Move X8, [X8+64]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Call 0x1C17E08
	069 Move W8, [X20]
	070 Move X27, [X0]
	071 Move X22, [X0+8]
	072 Move X21, [X0+16]
	073 Move [X31+12], W8
	074 Move X0, [X23+32]
	075 Move W8, [X0+309]
	076 Move TEMP, X8
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfEqual {81}
	080 Call 0x1C5D684
	081 Move X8, [X0+192]
	082 Add X1, X31, 12
	083 Move X0, [X8]
	084 Call 0x1C17E04
	085 And W8, W27, 1
	086 Move [X31+8], W8
	087 Move X8, [X23+32]
	088 Move X24, X0
	089 Move W9, [X8+309]
	090 Move TEMP, X9
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfEqual {97}
	094 Move X0, X8
	095 Call 0x1C5D684
	096 Move X8, X0
	097 Move X8, [X8+192]
	098 Add X1, X31, 8
	099 Move X0, [X8]
	100 Call 0x1C17E04
	101 Compare X19, 0
	102 JumpIfEqual {259}
	103 Move X26, 0x1955000
	104 Move X8, [X19]
	105 Move X26, [X26+2304]
	106 Move X25, X0
	107 NotImplemented "Instruction LDRH not yet implemented."
	108 Move X1, [X26]
	109 Compare X9, 0
	110 JumpIfEqual {117}
	111 Move X10, [X8+176]
	112 Add X10, X10, 8
	113 NotImplemented "Instruction LDUR not yet implemented."
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Subtract X9, X9, 1
	116 Add X10, X10, 16
	117 Move X0, X19
	118 Move W2, W31
	119 Call 0x1C5D788
	120 NotImplemented "Instruction LDRSW not yet implemented."
	121 Add X8, X8, X9
	122 Add X0, X8, 312
	123 Move X8, [X0]
	124 Move X3, [X0+8]
	125 Move X0, X19
	126 Move X1, X24
	127 Move X2, X25
	128 NotImplemented "Instruction BLR not yet implemented."
	129 Move TEMP, X0
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfNotEqual {235}
	133 Move W8, [X20+1]
	134 Move [X31+4], W8
	135 Move X0, [X23+32]
	136 Move W8, [X0+309]
	137 Move TEMP, X8
	138 And TEMP, TEMP, 1
	139 Compare TEMP, 1
	140 JumpIfEqual {142}
	141 Call 0x1C5D684
	142 Move X8, [X0+192]
	143 Add X1, X31, 4
	144 Move X0, [X8+16]
	145 Call 0x1C17E04
	146 Move W8, W27
	147 ShiftRight W8, 8
	148 And W8, W8, 255
	149 Move [X31], W8
	150 Move X8, [X23+32]
	151 Move X23, X0
	152 Move W9, [X8+309]
	153 Move TEMP, X9
	154 And TEMP, TEMP, 1
	155 Compare TEMP, 1
	156 JumpIfEqual {160}
	157 Move X0, X8
	158 Call 0x1C5D684
	159 Move X8, X0
	160 Move X8, [X8+192]
	161 Add X1, X31, 0
	162 Move X0, [X8+16]
	163 Call 0x1C17E04
	164 Move X8, [X19]
	165 Move X1, [X26]
	166 Move X24, X0
	167 NotImplemented "Instruction LDRH not yet implemented."
	168 Compare X9, 0
	169 JumpIfEqual {176}
	170 Move X10, [X8+176]
	171 Add X10, X10, 8
	172 NotImplemented "Instruction LDUR not yet implemented."
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Subtract X9, X9, 1
	175 Add X10, X10, 16
	176 Move X0, X19
	177 Move W2, W31
	178 Call 0x1C5D788
	179 NotImplemented "Instruction LDRSW not yet implemented."
	180 Add X8, X8, X9
	181 Add X0, X8, 312
	182 Move X8, [X0]
	183 Move X3, [X0+8]
	184 Move X0, X19
	185 Move X1, X23
	186 Move X2, X24
	187 NotImplemented "Instruction BLR not yet implemented."
	188 Move TEMP, X0
	189 And TEMP, TEMP, 1
	190 Compare TEMP, 1
	191 JumpIfNotEqual {235}
	192 Move X8, [X19]
	193 Move X23, [X20+8]
	194 Move X1, [X26]
	195 NotImplemented "Instruction LDRH not yet implemented."
	196 Compare X9, 0
	197 JumpIfEqual {204}
	198 Move X10, [X8+176]
	199 Add X10, X10, 8
	200 NotImplemented "Instruction LDUR not yet implemented."
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Subtract X9, X9, 1
	203 Add X10, X10, 16
	204 Move X0, X19
	205 Move W2, W31
	206 Call 0x1C5D788
	207 NotImplemented "Instruction LDRSW not yet implemented."
	208 Add X8, X8, X9
	209 Add X0, X8, 312
	210 Move X8, [X0]
	211 Move X3, [X0+8]
	212 Move X0, X19
	213 Move X1, X23
	214 Move X2, X22
	215 NotImplemented "Instruction BLR not yet implemented."
	216 Move TEMP, X0
	217 And TEMP, TEMP, 1
	218 Compare TEMP, 1
	219 JumpIfNotEqual {235}
	220 Move X8, [X19]
	221 Move X20, [X20+16]
	222 Move X1, [X26]
	223 NotImplemented "Instruction LDRH not yet implemented."
	224 Compare X9, 0
	225 JumpIfEqual {232}
	226 Move X10, [X8+176]
	227 Add X10, X10, 8
	228 NotImplemented "Instruction LDUR not yet implemented."
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Subtract X9, X9, 1
	231 Add X10, X10, 16
	232 Move X0, X19
	233 Move W2, W31
	234 Call 0x1C5D788
	235 Move W0, W31
	236 Move X20, [X31+80]
	237 Move X19, [X31+88]
	238 Move X22, [X31+64]
	239 Move X21, [X31+72]
	240 Move X24, [X31+48]
	241 Move X23, [X31+56]
	242 Move X26, [X31+32]
	243 Move X25, [X31+40]
	244 Move X30, [X31+16]
	245 Move X27, [X31+24]
	246 And W0, W0, 1
	247 Add X31, X31, 96
	248 Return X0
	249 NotImplemented "Instruction LDRSW not yet implemented."
	250 Add X8, X8, X9
	251 Add X0, X8, 312
	252 Move X8, [X0]
	253 Move X3, [X0+8]
	254 Move X0, X19
	255 Move X1, X20
	256 Move X2, X21
	257 NotImplemented "Instruction BLR not yet implemented."
	258 Call 0x1C181E0
	259 Call 0x1C17F20

Method: System.Int32 System.IComparable.CompareTo(System.Object other)

Disassembly:
	0x027C9844 MOV X0, X8
	0x027C9848 BL 0x1C5C684
	0x027C984C MOV X8, X0
	0x027C9850 LDR X8, [X8 + 0xC0]
	0x027C9854 LDR X0, [X8 + 0x38]
	0x027C9858 BL 0x211D66C
	0x027C985C CBZ X0, 0x27C9944
	0x027C9860 LDR X8, [X0]
	0x027C9864 LDP S4, S5, [X19 + 0x4]
	0x027C9868 LDR V3, [X19]
	0x027C986C LDP S1, S2, [X20 + 0x4]
	0x027C9870 LDR V0, [X20]
	0x027C9874 LDP X9, X1, [X8 + 0x1B8]
	0x027C9878 BLR X9
	0x027C987C TBZ X0, 0x0, 0x27C9934
	0x027C9880 LDR X0, [X21 + 0x20]
	0x027C9884 LDRB W8, [X0 + 0x135]
	0x027C9888 TBNZ X8, 0x0, 0x27C9890
	0x027C988C BL 0x1C5C684
	0x027C9890 LDR X8, [X0 + 0xC0]
	0x027C9894 LDR X0, [X8 + 0x58]
	0x027C9898 BL 0x211D66C
	0x027C989C CBZ X0, 0x27C9944
	0x027C98A0 LDR X8, [X0]
	0x027C98A4 LDP S4, S5, [X19 + 0x10]
	0x027C98A8 LDR V3, [X19 + 0xC]
	0x027C98AC LDP S1, S2, [X20 + 0x10]
	0x027C98B0 LDR V0, [X20 + 0xC]
	0x027C98B4 LDP X9, X1, [X8 + 0x1B8]
	0x027C98B8 BLR X9
	0x027C98BC TBZ X0, 0x0, 0x27C9934
	0x027C98C0 LDR X0, [X21 + 0x20]
	0x027C98C4 LDRB W8, [X0 + 0x135]
	0x027C98C8 TBNZ X8, 0x0, 0x27C98D0
	0x027C98CC BL 0x1C5C684
	0x027C98D0 LDR X8, [X0 + 0xC0]
	0x027C98D4 LDR X0, [X8 + 0x78]
	0x027C98D8 BL 0x211A010
	0x027C98DC CBZ X0, 0x27C9944
	0x027C98E0 LDR X8, [X0]
	0x027C98E4 LDR W2, [X19 + 0x18]
	0x027C98E8 LDR W1, [X20 + 0x18]
	0x027C98EC LDP X9, X3, [X8 + 0x1B8]
	0x027C98F0 BLR X9
	0x027C98F4 TBZ X0, 0x0, 0x27C9934
	0x027C98F8 LDR X0, [X21 + 0x20]
	0x027C98FC LDRB W8, [X0 + 0x135]
	0x027C9900 TBNZ X8, 0x0, 0x27C9908
	0x027C9904 BL 0x1C5C684
	0x027C9908 LDR X8, [X0 + 0xC0]
	0x027C990C LDR X0, [X8 + 0x98]
	0x027C9910 BL 0x211A010
	0x027C9914 CBZ X0, 0x27C9944
	0x027C9918 LDR X8, [X0]
	0x027C991C LDR W2, [X19 + 0x1C]
	0x027C9920 LDR W1, [X20 + 0x1C]
	0x027C9924 LDP X20, X19, [X31 + 0x10]
	0x027C9928 LDP X4, X3, [X8 + 0x1B8]
	0x027C992C LDP X30, X21, [X31], #0x20
	0x027C9930 BR X4
	0x027C9934 LDP X20, X19, [X31 + 0x10]
	0x027C9938 MOV W0, W31
	0x027C993C LDP X30, X21, [X31], #0x20
	0x027C9940 RET
	0x027C9944 BL 0x1C16F20
	0x027C9948 SUB X31, X31, 0xB0
	0x027C994C STR X30, [X31 + 0x60]
	0x027C9950 STP X26, X25, [X31 + 0x70]
	0x027C9954 STP X24, X23, [X31 + 0x80]
	0x027C9958 STP X22, X21, [X31 + 0x90]
	0x027C995C STP X20, X19, [X31 + 0xA0]
	0x027C9960 ADRP X23, 0x1C11000
	0x027C9964 LDRB W8, [X23 + 0x963]
	0x027C9968 MOV X20, X3
	0x027C996C MOV X19, X2
	0x027C9970 MOV X22, X1
	0x027C9974 MOV X21, X0
	0x027C9978 TBNZ X8, 0x0, 0x27C9990
	0x027C997C ADRP X0, 0x1954000
	0x027C9980 LDR X0, [X0 + 0x900]
	0x027C9984 BL 0x1C16CF4
	0x027C9988 MOVZ W8, 0x1
	0x027C998C STRB W8, [X23 + 0x963]
	0x027C9990 CBZ X22, 0x27C9D40
	0x027C9994 LDR X0, [X20 + 0x20]
	0x027C9998 LDRB W8, [X0 + 0x135]
	0x027C999C TBNZ X8, 0x0, 0x27C99A4
	0x027C99A0 BL 0x1C5C684
	0x027C99A4 LDR X8, [X0 + 0xC0]
	0x027C99A8 LDR X0, [X8 + 0x8]
	0x027C99AC LDRB W8, [X0 + 0x135]
	0x027C99B0 TBNZ X8, 0x0, 0x27C99B8
	0x027C99B4 BL 0x1C5C684
	0x027C99B8 LDR X8, [X22]
	0x027C99BC CMP X8, X0
	0x027C99C0 B.NE 0x27C9D40
	0x027C99C4 LDR X0, [X20 + 0x20]
	0x027C99C8 LDRB W8, [X0 + 0x135]
	0x027C99CC TBNZ X8, 0x0, 0x27C99D4
	0x027C99D0 BL 0x1C5C684
	0x027C99D4 LDR X8, [X0 + 0xC0]
	0x027C99D8 LDR X1, [X8 + 0x8]
	0x027C99DC LDRB W8, [X1 + 0x135]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Compare X1, 0
	007 JumpIfEqual {71}
	008 Move X20, X0
	009 Move X0, [X2+32]
	010 Move X19, X2
	011 Move X21, X1
	012 Move W8, [X0+309]
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {18}
	017 Call 0x1C5D684
	018 Move X8, [X0+192]
	019 Move X0, [X8+8]
	020 Move W8, [X0+309]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {26}
	025 Call 0x1C5D684
	026 Move X8, [X21]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X0, [X19+32]
	029 Move W8, [X0+309]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {35}
	034 Call 0x1C5D684
	035 Move X8, [X0+192]
	036 Move X1, [X8+8]
	037 Move W8, [X1+309]
	038 Move TEMP, X8
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {45}
	042 Move X0, X1
	043 Call 0x1C5D684
	044 Move X1, X0
	045 Move X8, [X21]
	046 Move X9, [X1+64]
	047 Move X0, X21
	048 Move X8, [X8+64]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Call 0x1C17E08
	051 Move X8, [X0+16]
	052 Move V0, [X0]
	053 Move [X31+16], X8
	054 Move [X31], V0
	055 Move X0, [X19+32]
	056 Move W8, [X0+309]
	057 Move TEMP, X8
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfEqual {62}
	061 Call 0x1C5D684
	062 Move X8, [X0+192]
	063 Move V0, [X31]
	064 Move X9, [X31+16]
	065 Add X1, X31, 32
	066 Move X2, [X8+184]
	067 Move X0, X20
	068 Move [X31+2], V0
	069 Move [X31+48], X9
	070 Call 0x27C99E0, X0, X1
	071 Move W0, 1
	072 Move X20, [X31+80]
	073 Move X19, [X31+88]
	074 Move X30, [X31+64]
	075 Move X21, [X31+72]
	076 Add X31, X31, 96
	077 Return X0
	078 Move X8, [X20+16]
	079 Move V0, [X20]
	080 Move [X31+48], X8
	081 Move [X31+2], V0
	082 Move X0, [X19+32]
	083 Call 0x199C99C
	084 Move X8, [X0+192]
	085 Add X1, X31, 32
	086 Move X0, [X8+8]
	087 Call 0x1C17E04
	088 Move X1, X31
	089 Call "il2cpp_vm_object_is_inst", X0
	090 Move X20, X0
	091 Call 0x19913C0
	092 Move X8, [X20]
	093 Move X0, X20
	094 Move X9, [X8+360]
	095 Move X1, [X8+368]
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Move X20, X0
	098 Move X0, 0x1955000
	099 Move X0, [X0+2336]
	100 Call 0x1C17D08
	101 Move X1, X20
	102 Move X2, X31
	103 Call SR.Format, X0, X1
	104 Move X20, X0
	105 Move X0, 0x1933000
	106 Move X0, [X0+1400]
	107 Call 0x1C17D08
	108 Call 0x1C17F10
	109 Move X21, X0
	110 Move X0, 0x1955000
	111 Move X0, [X0+2344]
	112 Call 0x1C17D08
	113 Move X2, X0
	114 Move X0, X21
	115 Move X1, X20
	116 Move X3, X31
	117 Call ArgumentException..ctor, X0, X1, X2
	118 Move X0, X21
	119 Move X1, X19
	120 Call 0x1C17DEC
	121 Call 0x1C181E0

Method: System.Int32 CompareTo(System.ValueTuple`4<T1, T2, T3, T4> other)

Disassembly:
	0x027C99E0 TBNZ X8, 0x0, 0x27C99F0
	0x027C99E4 MOV X0, X1
	0x027C99E8 BL 0x1C5C684
	0x027C99EC MOV X1, X0
	0x027C99F0 LDR X8, [X22]
	0x027C99F4 LDR X9, [X1 + 0x40]
	0x027C99F8 MOV X0, X22
	0x027C99FC LDR X8, [X8 + 0x40]
	0x027C9A00 CMP X8, X9
	0x027C9A04 B.NE 0x27C9D88
	0x027C9A08 BL 0x1C16E08
	0x027C9A0C LDR V0, [X0]
	0x027C9A10 LDR X8, [X0 + 0x10]
	0x027C9A14 STR V0, [X31 + 0x4]
	0x027C9A18 STR X8, [X31 + 0x50]
	0x027C9A1C LDR W8, [X21 + 0x8]
	0x027C9A20 LDR X9, [X21]
	0x027C9A24 LDP W26, W24, [X0 + 0x18]
	0x027C9A28 STR W8, [X31 + 0x18]
	0x027C9A2C STR X9, [X31 + 0x10]
	0x027C9A30 LDR X0, [X20 + 0x20]
	0x027C9A34 LDRB W8, [X0 + 0x135]
	0x027C9A38 TBNZ X8, 0x0, 0x27C9A40
	0x027C9A3C BL 0x1C5C684
	0x027C9A40 LDR X8, [X0 + 0xC0]
	0x027C9A44 ADD X1, X31, 0x10
	0x027C9A48 LDR X0, [X8]
	0x027C9A4C BL 0x1C16E04
	0x027C9A50 LDR W8, [X31 + 0x48]
	0x027C9A54 LDR X9, [X31 + 0x40]
	0x027C9A58 MOV X22, X0
	0x027C9A5C STR W8, [X31 + 0x38]
	0x027C9A60 STR X9, [X31 + 0x30]
	0x027C9A64 LDR X8, [X20 + 0x20]
	0x027C9A68 LDRB W9, [X8 + 0x135]
	0x027C9A6C TBNZ X9, 0x0, 0x27C9A7C
	0x027C9A70 MOV X0, X8
	0x027C9A74 BL 0x1C5C684
	0x027C9A78 MOV X8, X0
	0x027C9A7C LDR X8, [X8 + 0xC0]
	0x027C9A80 ADD X1, X31, 0x30
	0x027C9A84 LDR X0, [X8]
	0x027C9A88 BL 0x1C16E04
	0x027C9A8C CBZ X19, 0x27C9D8C
	0x027C9A90 ADRP X25, 0x1954000
	0x027C9A94 LDR X8, [X19]
	0x027C9A98 LDR X25, [X25 + 0x900]
	0x027C9A9C MOV X23, X0
	0x027C9AA0 LDRH W9, [X8 + 0x12E]
	0x027C9AA4 LDR X1, [X25]
	0x027C9AA8 CBZ X9, 0x27C9ACC
	0x027C9AAC LDR X10, [X8 + 0xB0]
	0x027C9AB0 ADD X10, X10, 0x8
	0x027C9AB4 LDUR X11, [X10 - 0x8]
	0x027C9AB8 CMP X11, X1
	0x027C9ABC B.EQ 0x27C9ADC
	0x027C9AC0 SUBS X9, X9, 0x1
	0x027C9AC4 ADD X10, X10, 0x10
	0x027C9AC8 B.NE 0x27C9AB4
	0x027C9ACC MOV X0, X19
	0x027C9AD0 MOV W2, W31
	0x027C9AD4 BL 0x1C5C788
	0x027C9AD8 B 0x27C9AE8
	0x027C9ADC LDRSW X9, [X10]
	0x027C9AE0 ADD X8, X8, X9, 0x4, LSL
	0x027C9AE4 ADD X0, X8, 0x138
	0x027C9AE8 LDP X8, X3, [X0]
	0x027C9AEC MOV X0, X19
	0x027C9AF0 MOV X1, X22
	0x027C9AF4 MOV X2, X23

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X21, X2
	007 Move X19, X1
	008 Move X20, X0
	009 Move W9, [X8+309]
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X8
	015 Call 0x1C5D684
	016 Move X8, X0
	017 Move X8, [X8+192]
	018 Move X0, [X8+192]
	019 Call Comparer`1<Boolean>.get_Default
	020 Compare X0, 0
	021 JumpIfEqual {99}
	022 Move X8, [X0]
	023 Move W9, [X19]
	024 Move W1, [X20]
	025 Move X10, [X8+408]
	026 Move X3, [X8+416]
	027 And W2, W9, 1
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Compare W0, 0
	030 JumpIfNotEqual {72}
	031 Move X0, [X21+32]
	032 Move W8, [X0+309]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {38}
	037 Call 0x1C5D684
	038 Move X8, [X0+192]
	039 Move X0, [X8+224]
	040 Call Comparer`1<Boolean>.get_Default
	041 Compare X0, 0
	042 JumpIfEqual {99}
	043 Move X8, [X0]
	044 Move W9, [X19+1]
	045 Move W1, [X20+1]
	046 Move X10, [X8+408]
	047 Move X3, [X8+416]
	048 And W2, W9, 1
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Compare W0, 0
	051 JumpIfNotEqual {72}
	052 Move X0, [X21+32]
	053 Move W8, [X0+309]
	054 Move TEMP, X8
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {59}
	058 Call 0x1C5D684
	059 Move X8, [X0+192]
	060 Move X0, [X8+256]
	061 Call Comparer`1<Object>.get_Default
	062 Compare X0, 0
	063 JumpIfEqual {99}
	064 Move X8, [X0]
	065 Move X2, [X19+8]
	066 Move X1, [X20+8]
	067 Move X9, [X8+408]
	068 Move X3, [X8+416]
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Compare W0, 0
	071 JumpIfEqual {77}
	072 Move X20, [X31+16]
	073 Move X19, [X31+24]
	074 Move X30, [X31+32]
	075 Move X21, [X31+40]
	076 Return X0
	077 Move X0, [X21+32]
	078 Move W8, [X0+309]
	079 Move TEMP, X8
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfEqual {84}
	083 Call 0x1C5D684
	084 Move X8, [X0+192]
	085 Move X0, [X8+288]
	086 Call Comparer`1<Object>.get_Default
	087 Compare X0, 0
	088 JumpIfEqual {99}
	089 Move X8, [X0]
	090 Move X2, [X19+16]
	091 Move X1, [X20+16]
	092 Move X20, [X31+16]
	093 Move X19, [X31+24]
	094 Move X4, [X8+408]
	095 Move X3, [X8+416]
	096 Move X30, [X31+32]
	097 Move X21, [X31+40]
	098 CallNoReturn X4
	099 Call 0x1C17F20

Method: System.Int32 System.Collections.IStructuralComparable.CompareTo(System.Object other, System.Collections.IComparer comparer)

Disassembly:
	0x027C9AF8 BLR X8
	0x027C9AFC TBZ X0, 0x0, 0x27C9D40
	0x027C9B00 LDR W8, [X21 + 0x14]
	0x027C9B04 LDUR X9, [X21 + 0xC]
	0x027C9B08 STR W8, [X31 + 0x38]
	0x027C9B0C STR X9, [X31 + 0x30]
	0x027C9B10 LDR X0, [X20 + 0x20]
	0x027C9B14 LDRB W8, [X0 + 0x135]
	0x027C9B18 TBNZ X8, 0x0, 0x27C9B20
	0x027C9B1C BL 0x1C5C684
	0x027C9B20 LDR X8, [X0 + 0xC0]
	0x027C9B24 ADD X1, X31, 0x30
	0x027C9B28 LDR X0, [X8 + 0x10]
	0x027C9B2C BL 0x1C16E04
	0x027C9B30 LDR X8, [X31 + 0x50]
	0x027C9B34 LDR V0, [X31 + 0x4]
	0x027C9B38 MOV X22, X0
	0x027C9B3C STR X8, [X31 + 0x20]
	0x027C9B40 STR V0, [X31 + 0x1]
	0x027C9B44 LDUR X8, [X31 + 0x1C]
	0x027C9B48 LDR W9, [X31 + 0x24]
	0x027C9B4C STR X8, [X31]
	0x027C9B50 STR W9, [X31 + 0x8]
	0x027C9B54 LDR X8, [X20 + 0x20]
	0x027C9B58 LDRB W9, [X8 + 0x135]
	0x027C9B5C TBNZ X9, 0x0, 0x27C9B6C
	0x027C9B60 MOV X0, X8
	0x027C9B64 BL 0x1C5C684
	0x027C9B68 MOV X8, X0
	0x027C9B6C LDR X8, [X8 + 0xC0]
	0x027C9B70 ADD X1, X31, 0x0
	0x027C9B74 LDR X0, [X8 + 0x10]
	0x027C9B78 BL 0x1C16E04
	0x027C9B7C LDR X8, [X19]
	0x027C9B80 LDR X1, [X25]
	0x027C9B84 MOV X23, X0
	0x027C9B88 LDRH W9, [X8 + 0x12E]
	0x027C9B8C CBZ X9, 0x27C9BB0
	0x027C9B90 LDR X10, [X8 + 0xB0]
	0x027C9B94 ADD X10, X10, 0x8
	0x027C9B98 LDUR X11, [X10 - 0x8]
	0x027C9B9C CMP X11, X1
	0x027C9BA0 B.EQ 0x27C9BC0
	0x027C9BA4 SUBS X9, X9, 0x1
	0x027C9BA8 ADD X10, X10, 0x10
	0x027C9BAC B.NE 0x27C9B98
	0x027C9BB0 MOV X0, X19
	0x027C9BB4 MOV W2, W31
	0x027C9BB8 BL 0x1C5C788
	0x027C9BBC B 0x27C9BCC
	0x027C9BC0 LDRSW X9, [X10]
	0x027C9BC4 ADD X8, X8, X9, 0x4, LSL
	0x027C9BC8 ADD X0, X8, 0x138
	0x027C9BCC LDP X8, X3, [X0]
	0x027C9BD0 MOV X0, X19
	0x027C9BD4 MOV X1, X22
	0x027C9BD8 MOV X2, X23
	0x027C9BDC BLR X8
	0x027C9BE0 TBZ X0, 0x0, 0x27C9D40
	0x027C9BE4 LDR W8, [X21 + 0x18]
	0x027C9BE8 STR W8, [X31 + 0x10]
	0x027C9BEC LDR X0, [X20 + 0x20]
	0x027C9BF0 LDRB W8, [X0 + 0x135]
	0x027C9BF4 TBNZ X8, 0x0, 0x27C9BFC
	0x027C9BF8 BL 0x1C5C684
	0x027C9BFC LDR X8, [X0 + 0xC0]
	0x027C9C00 ADD X1, X31, 0x10
	0x027C9C04 LDR X0, [X8 + 0x18]
	0x027C9C08 BL 0x1C16E04
	0x027C9C0C STR W26, [X31 + 0x30]
	0x027C9C10 LDR X8, [X20 + 0x20]
	0x027C9C14 MOV X22, X0
	0x027C9C18 LDRB W9, [X8 + 0x135]
	0x027C9C1C TBNZ X9, 0x0, 0x27C9C2C
	0x027C9C20 MOV X0, X8
	0x027C9C24 BL 0x1C5C684
	0x027C9C28 MOV X8, X0
	0x027C9C2C LDR X8, [X8 + 0xC0]
	0x027C9C30 ADD X1, X31, 0x30
	0x027C9C34 LDR X0, [X8 + 0x18]
	0x027C9C38 BL 0x1C16E04
	0x027C9C3C LDR X8, [X19]
	0x027C9C40 LDR X1, [X25]
	0x027C9C44 MOV X23, X0
	0x027C9C48 LDRH W9, [X8 + 0x12E]
	0x027C9C4C CBZ X9, 0x27C9C70
	0x027C9C50 LDR X10, [X8 + 0xB0]
	0x027C9C54 ADD X10, X10, 0x8
	0x027C9C58 LDUR X11, [X10 - 0x8]
	0x027C9C5C CMP X11, X1
	0x027C9C60 B.EQ 0x27C9C80
	0x027C9C64 SUBS X9, X9, 0x1
	0x027C9C68 ADD X10, X10, 0x10
	0x027C9C6C B.NE 0x27C9C58
	0x027C9C70 MOV X0, X19
	0x027C9C74 MOV W2, W31
	0x027C9C78 BL 0x1C5C788
	0x027C9C7C B 0x27C9C8C
	0x027C9C80 LDRSW X9, [X10]
	0x027C9C84 ADD X8, X8, X9, 0x4, LSL
	0x027C9C88 ADD X0, X8, 0x138
	0x027C9C8C LDP X8, X3, [X0]
	0x027C9C90 MOV X0, X19
	0x027C9C94 MOV X1, X22
	0x027C9C98 MOV X2, X23
	0x027C9C9C BLR X8
	0x027C9CA0 TBZ X0, 0x0, 0x27C9D40
	0x027C9CA4 LDR W8, [X21 + 0x1C]
	0x027C9CA8 STR W8, [X31 + 0x10]
	0x027C9CAC LDR X0, [X20 + 0x20]
	0x027C9CB0 LDRB W8, [X0 + 0x135]
	0x027C9CB4 TBNZ X8, 0x0, 0x27C9CBC
	0x027C9CB8 BL 0x1C5C684
	0x027C9CBC LDR X8, [X0 + 0xC0]
	0x027C9CC0 ADD X1, X31, 0x10
	0x027C9CC4 LDR X0, [X8 + 0x20]
	0x027C9CC8 BL 0x1C16E04
	0x027C9CCC STR W24, [X31 + 0x30]
	0x027C9CD0 LDR X8, [X20 + 0x20]
	0x027C9CD4 MOV X20, X0
	0x027C9CD8 LDRB W9, [X8 + 0x135]
	0x027C9CDC TBNZ X9, 0x0, 0x27C9CEC
	0x027C9CE0 MOV X0, X8
	0x027C9CE4 BL 0x1C5C684
	0x027C9CE8 MOV X8, X0
	0x027C9CEC LDR X8, [X8 + 0xC0]
	0x027C9CF0 ADD X1, X31, 0x30
	0x027C9CF4 LDR X0, [X8 + 0x20]
	0x027C9CF8 BL 0x1C16E04
	0x027C9CFC LDR X8, [X19]
	0x027C9D00 LDR X1, [X25]
	0x027C9D04 MOV X21, X0
	0x027C9D08 LDRH W9, [X8 + 0x12E]
	0x027C9D0C CBZ X9, 0x27C9D30
	0x027C9D10 LDR X10, [X8 + 0xB0]
	0x027C9D14 ADD X10, X10, 0x8
	0x027C9D18 LDUR X11, [X10 - 0x8]
	0x027C9D1C CMP X11, X1
	0x027C9D20 B.EQ 0x27C9D64
	0x027C9D24 SUBS X9, X9, 0x1
	0x027C9D28 ADD X10, X10, 0x10
	0x027C9D2C B.NE 0x27C9D18
	0x027C9D30 MOV X0, X19
	0x027C9D34 MOV W2, W31
	0x027C9D38 BL 0x1C5C788
	0x027C9D3C B 0x27C9D70
	0x027C9D40 MOV W0, W31
	0x027C9D44 LDP X20, X19, [X31 + 0xA0]
	0x027C9D48 LDP X22, X21, [X31 + 0x90]
	0x027C9D4C LDP X24, X23, [X31 + 0x80]
	0x027C9D50 LDP X26, X25, [X31 + 0x70]
	0x027C9D54 LDR X30, [X31 + 0x60]
	0x027C9D58 AND W0, W0, 0x1
	0x027C9D5C ADD X31, X31, 0xB0
	0x027C9D60 RET
	0x027C9D64 LDRSW X9, [X10]
	0x027C9D68 ADD X8, X8, X9, 0x4, LSL
	0x027C9D6C ADD X0, X8, 0x138
	0x027C9D70 LDP X8, X3, [X0]
	0x027C9D74 MOV X0, X19
	0x027C9D78 MOV X1, X20
	0x027C9D7C MOV X2, X21
	0x027C9D80 BLR X8
	0x027C9D84 B 0x27C9D44
	0x027C9D88 BL 0x1C171E0
	0x027C9D8C BL 0x1C16F20
	0x027C9D90 SUB X31, X31, 0x60
	0x027C9D94 STP X30, X21, [X31 + 0x40]
	0x027C9D98 STP X20, X19, [X31 + 0x50]
	0x027C9D9C CBZ X1, 0x27C9E5C
	0x027C9DA0 MOV X20, X0
	0x027C9DA4 LDR X0, [X2 + 0x20]
	0x027C9DA8 MOV X19, X2
	0x027C9DAC MOV X21, X1
	0x027C9DB0 LDRB W8, [X0 + 0x135]
	0x027C9DB4 TBNZ X8, 0x0, 0x27C9DBC
	0x027C9DB8 BL 0x1C5C684
	0x027C9DBC LDR X8, [X0 + 0xC0]
	0x027C9DC0 LDR X0, [X8 + 0x8]
	0x027C9DC4 LDRB W8, [X0 + 0x135]
	0x027C9DC8 TBNZ X8, 0x0, 0x27C9DD0
	0x027C9DCC BL 0x1C5C684
	0x027C9DD0 LDR X8, [X21]
	0x027C9DD4 CMP X8, X0
	0x027C9DD8 B.NE 0x27C9E70
	0x027C9DDC LDR X0, [X19 + 0x20]
	0x027C9DE0 LDRB W8, [X0 + 0x135]
	0x027C9DE4 TBNZ X8, 0x0, 0x27C9DEC
	0x027C9DE8 BL 0x1C5C684
	0x027C9DEC LDR X8, [X0 + 0xC0]
	0x027C9DF0 LDR X1, [X8 + 0x8]
	0x027C9DF4 LDRB W8, [X1 + 0x135]
	0x027C9DF8 TBNZ X8, 0x0, 0x27C9E08
	0x027C9DFC MOV X0, X1
	0x027C9E00 BL 0x1C5C684
	0x027C9E04 MOV X1, X0
	0x027C9E08 LDR X8, [X21]
	0x027C9E0C LDR X9, [X1 + 0x40]
	0x027C9E10 MOV X0, X21
	0x027C9E14 LDR X8, [X8 + 0x40]
	0x027C9E18 CMP X8, X9
	0x027C9E1C B.NE 0x27C9F10
	0x027C9E20 BL 0x1C16E08
	0x027C9E24 LDP V1, V0, [X0]
	0x027C9E28 STP V1, V0, [X31]
	0x027C9E2C LDR X0, [X19 + 0x20]
	0x027C9E30 LDRB W8, [X0 + 0x135]
	0x027C9E34 TBNZ X8, 0x0, 0x27C9E3C
	0x027C9E38 BL 0x1C5C684
	0x027C9E3C LDR X8, [X0 + 0xC0]
	0x027C9E40 LDP V0, V1, [X31]
	0x027C9E44 ADD X1, X31, 0x20
	0x027C9E48 MOV X0, X20
	0x027C9E4C LDR X2, [X8 + 0xB8]
	0x027C9E50 STP V0, V1, [X31 + 0x20]
	0x027C9E54 BL 0x27C9F14
	0x027C9E58 B 0x27C9E60
	0x027C9E5C MOVZ W0, 0x1
	0x027C9E60 LDP X20, X19, [X31 + 0x50]
	0x027C9E64 LDP X30, X21, [X31 + 0x40]
	0x027C9E68 ADD X31, X31, 0x60
	0x027C9E6C RET
	0x027C9E70 LDP V1, V0, [X20]
	0x027C9E74 STP V1, V0, [X31 + 0x20]
	0x027C9E78 LDR X0, [X19 + 0x20]
	0x027C9E7C BL 0x199B99C
	0x027C9E80 LDR X8, [X0 + 0xC0]
	0x027C9E84 ADD X1, X31, 0x20
	0x027C9E88 LDR X0, [X8 + 0x8]
	0x027C9E8C BL 0x1C16E04
	0x027C9E90 MOV X1, X31
	0x027C9E94 BL 0x33BE520
	0x027C9E98 MOV X20, X0
	0x027C9E9C BL 0x19903C0
	0x027C9EA0 LDR X8, [X20]
	0x027C9EA4 MOV X0, X20
	0x027C9EA8 LDP X9, X1, [X8 + 0x168]
	0x027C9EAC BLR X9
	0x027C9EB0 MOV X20, X0
	0x027C9EB4 ADRP X0, 0x1954000
	0x027C9EB8 LDR X0, [X0 + 0x920]
	0x027C9EBC BL 0x1C16D08
	0x027C9EC0 MOV X1, X20
	0x027C9EC4 MOV X2, X31
	0x027C9EC8 BL 0x32094D4
	0x027C9ECC MOV X20, X0
	0x027C9ED0 ADRP X0, 0x1932000
	0x027C9ED4 LDR X0, [X0 + 0x578]
	0x027C9ED8 BL 0x1C16D08
	0x027C9EDC BL 0x1C16F10
	0x027C9EE0 MOV X21, X0
	0x027C9EE4 ADRP X0, 0x1954000
	0x027C9EE8 LDR X0, [X0 + 0x928]
	0x027C9EEC BL 0x1C16D08
	0x027C9EF0 MOV X2, X0
	0x027C9EF4 MOV X0, X21

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+48], X30
	003 Move [X31+56], X27
	004 Move [X31+64], X26
	005 Move [X31+72], X25
	006 Move [X31+80], X24
	007 Move [X31+88], X23
	008 Move [X31+96], X22
	009 Move [X31+104], X21
	010 Move [X31+112], X20
	011 Move [X31+120], X19
	012 Move X23, 0x1C12000
	013 Move W8, [X23+2398]
	014 Move X22, X3
	015 Move X19, X2
	016 Move X21, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x1955000
	023 Move X0, [X0+2328]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+2398], W8
	027 Compare X21, 0
	028 JumpIfEqual {120}
	029 Move X0, [X22+32]
	030 Move W8, [X0+309]
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {36}
	035 Call 0x1C5D684
	036 Move X8, [X0+192]
	037 Move X0, [X8+8]
	038 Move W8, [X0+309]
	039 Move TEMP, X8
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {44}
	043 Call 0x1C5D684
	044 Move X8, [X21]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X0, [X22+32]
	047 Move W8, [X0+309]
	048 Move TEMP, X8
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {53}
	052 Call 0x1C5D684
	053 Move X8, [X0+192]
	054 Move X1, [X8+8]
	055 Move W8, [X1+309]
	056 Move TEMP, X8
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {63}
	060 Move X0, X1
	061 Call 0x1C5D684
	062 Move X1, X0
	063 Move X8, [X21]
	064 Move X9, [X1+64]
	065 Move X0, X21
	066 Move X8, [X8+64]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Call 0x1C17E08
	069 Move W8, [X20]
	070 Move X27, [X0]
	071 Move X23, [X0+8]
	072 Move X21, [X0+16]
	073 Move [X31+16], W8
	074 Move X0, [X22+32]
	075 Move W8, [X0+309]
	076 Move TEMP, X8
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfEqual {81}
	080 Call 0x1C5D684
	081 Move X8, [X0+192]
	082 Add X1, X31, 16
	083 Move X0, [X8]
	084 Call 0x1C17E04
	085 And W8, W27, 1
	086 Move [X31+12], W8
	087 Move X8, [X22+32]
	088 Move X24, X0
	089 Move W9, [X8+309]
	090 Move TEMP, X9
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfEqual {97}
	094 Move X0, X8
	095 Call 0x1C5D684
	096 Move X8, X0
	097 Move X8, [X8+192]
	098 Add X1, X31, 12
	099 Move X0, [X8]
	100 Call 0x1C17E04
	101 Compare X19, 0
	102 JumpIfEqual {295}
	103 Move X26, 0x1955000
	104 Move X8, [X19]
	105 Move X26, [X26+2328]
	106 Move X25, X0
	107 NotImplemented "Instruction LDRH not yet implemented."
	108 Move X1, [X26]
	109 Compare X9, 0
	110 JumpIfEqual {117}
	111 Move X10, [X8+176]
	112 Add X10, X10, 8
	113 NotImplemented "Instruction LDUR not yet implemented."
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Subtract X9, X9, 1
	116 Add X10, X10, 16
	117 Move X0, X19
	118 Move W2, W31
	119 Call 0x1C5D788
	120 Move W0, 1
	121 NotImplemented "Instruction LDRSW not yet implemented."
	122 Add X8, X8, X9
	123 Add X0, X8, 312
	124 Move X8, [X0]
	125 Move X3, [X0+8]
	126 Move X0, X19
	127 Move X1, X24
	128 Move X2, X25
	129 NotImplemented "Instruction BLR not yet implemented."
	130 Compare W0, 0
	131 JumpIfNotEqual {239}
	132 Move W8, [X20+1]
	133 Move [X31+16], W8
	134 Move X0, [X22+32]
	135 Move W8, [X0+309]
	136 Move TEMP, X8
	137 And TEMP, TEMP, 1
	138 Compare TEMP, 1
	139 JumpIfEqual {141}
	140 Call 0x1C5D684
	141 Move X8, [X0+192]
	142 Add X1, X31, 16
	143 Move X0, [X8+16]
	144 Call 0x1C17E04
	145 Move W8, W27
	146 ShiftRight W8, 8
	147 And W8, W8, 255
	148 Move [X31+12], W8
	149 Move X8, [X22+32]
	150 Move X22, X0
	151 Move W9, [X8+309]
	152 Move TEMP, X9
	153 And TEMP, TEMP, 1
	154 Compare TEMP, 1
	155 JumpIfEqual {159}
	156 Move X0, X8
	157 Call 0x1C5D684
	158 Move X8, X0
	159 Move X8, [X8+192]
	160 Add X1, X31, 12
	161 Move X0, [X8+16]
	162 Call 0x1C17E04
	163 Move X8, [X19]
	164 Move X1, [X26]
	165 Move X24, X0
	166 NotImplemented "Instruction LDRH not yet implemented."
	167 Compare X9, 0
	168 JumpIfEqual {175}
	169 Move X10, [X8+176]
	170 Add X10, X10, 8
	171 NotImplemented "Instruction LDUR not yet implemented."
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Subtract X9, X9, 1
	174 Add X10, X10, 16
	175 Move X0, X19
	176 Move W2, W31
	177 Call 0x1C5D788
	178 NotImplemented "Instruction LDRSW not yet implemented."
	179 Add X8, X8, X9
	180 Add X0, X8, 312
	181 Move X8, [X0]
	182 Move X3, [X0+8]
	183 Move X0, X19
	184 Move X1, X22
	185 Move X2, X24
	186 NotImplemented "Instruction BLR not yet implemented."
	187 Compare W0, 0
	188 JumpIfNotEqual {239}
	189 Move X8, [X19]
	190 Move X22, [X20+8]
	191 Move X1, [X26]
	192 NotImplemented "Instruction LDRH not yet implemented."
	193 Compare X9, 0
	194 JumpIfEqual {201}
	195 Move X10, [X8+176]
	196 Add X10, X10, 8
	197 NotImplemented "Instruction LDUR not yet implemented."
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Subtract X9, X9, 1
	200 Add X10, X10, 16
	201 Move X0, X19
	202 Move W2, W31
	203 Call 0x1C5D788
	204 NotImplemented "Instruction LDRSW not yet implemented."
	205 Add X8, X8, X9
	206 Add X0, X8, 312
	207 Move X8, [X0]
	208 Move X3, [X0+8]
	209 Move X0, X19
	210 Move X1, X22
	211 Move X2, X23
	212 NotImplemented "Instruction BLR not yet implemented."
	213 Compare W0, 0
	214 JumpIfNotEqual {239}
	215 Move X8, [X19]
	216 Move X20, [X20+16]
	217 Move X1, [X26]
	218 NotImplemented "Instruction LDRH not yet implemented."
	219 Compare X9, 0
	220 JumpIfEqual {227}
	221 Move X10, [X8+176]
	222 Add X10, X10, 8
	223 NotImplemented "Instruction LDUR not yet implemented."
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Subtract X9, X9, 1
	226 Add X10, X10, 16
	227 Move X0, X19
	228 Move W2, W31
	229 Call 0x1C5D788
	230 NotImplemented "Instruction LDRSW not yet implemented."
	231 Add X8, X8, X9
	232 Add X0, X8, 312
	233 Move X8, [X0]
	234 Move X3, [X0+8]
	235 Move X0, X19
	236 Move X1, X20
	237 Move X2, X21
	238 NotImplemented "Instruction BLR not yet implemented."
	239 Move X20, [X31+112]
	240 Move X19, [X31+120]
	241 Move X22, [X31+96]
	242 Move X21, [X31+104]
	243 Move X24, [X31+80]
	244 Move X23, [X31+88]
	245 Move X26, [X31+64]
	246 Move X25, [X31+72]
	247 Move X30, [X31+48]
	248 Move X27, [X31+56]
	249 Add X31, X31, 128
	250 Return X0
	251 Move X8, [X20+16]
	252 Move V0, [X20]
	253 Move [X31+32], X8
	254 Move [X31+1], V0
	255 Move X0, [X22+32]
	256 Call 0x199C99C
	257 Move X8, [X0+192]
	258 Add X1, X31, 16
	259 Move X0, [X8+8]
	260 Call 0x1C17E04
	261 Move X1, X31
	262 Call "il2cpp_vm_object_is_inst", X0
	263 Move X19, X0
	264 Call 0x19913C0
	265 Move X8, [X19]
	266 Move X0, X19
	267 Move X9, [X8+360]
	268 Move X1, [X8+368]
	269 NotImplemented "Instruction BLR not yet implemented."
	270 Move X19, X0
	271 Move X0, 0x1955000
	272 Move X0, [X0+2336]
	273 Call 0x1C17D08
	274 Move X1, X19
	275 Move X2, X31
	276 Call SR.Format, X0, X1
	277 Move X19, X0
	278 Move X0, 0x1933000
	279 Move X0, [X0+1400]
	280 Call 0x1C17D08
	281 Call 0x1C17F10
	282 Move X20, X0
	283 Move X0, 0x1955000
	284 Move X0, [X0+2344]
	285 Call 0x1C17D08
	286 Move X2, X0
	287 Move X0, X20
	288 Move X1, X19
	289 Move X3, X31
	290 Call ArgumentException..ctor, X0, X1, X2
	291 Move X0, X20
	292 Move X1, X22
	293 Call 0x1C17DEC
	294 Call 0x1C181E0
	295 Call 0x1C17F20

Method: System.Int32 GetHashCode()

Disassembly:
	0x027C9EF8 MOV X1, X20
	0x027C9EFC MOV X3, X31
	0x027C9F00 BL 0x330E16C
	0x027C9F04 MOV X0, X21
	0x027C9F08 MOV X1, X19
	0x027C9F0C BL 0x1C16DEC
	0x027C9F10 BL 0x1C171E0
	0x027C9F14 STP X30, X21, [X31 - 0x20]!
	0x027C9F18 STP X20, X19, [X31 + 0x10]
	0x027C9F1C LDR X8, [X2 + 0x20]
	0x027C9F20 MOV X21, X2
	0x027C9F24 MOV X19, X1
	0x027C9F28 MOV X20, X0
	0x027C9F2C LDRB W9, [X8 + 0x135]
	0x027C9F30 TBNZ X9, 0x0, 0x27C9F40
	0x027C9F34 MOV X0, X8
	0x027C9F38 BL 0x1C5C684
	0x027C9F3C MOV X8, X0
	0x027C9F40 LDR X8, [X8 + 0xC0]
	0x027C9F44 LDR X0, [X8 + 0xC0]
	0x027C9F48 BL 0x293B5DC
	0x027C9F4C CBZ X0, 0x27CA030
	0x027C9F50 LDR X8, [X0]
	0x027C9F54 LDP S4, S5, [X19 + 0x4]
	0x027C9F58 LDR V3, [X19]
	0x027C9F5C LDP S1, S2, [X20 + 0x4]
	0x027C9F60 LDR V0, [X20]
	0x027C9F64 LDP X9, X1, [X8 + 0x198]
	0x027C9F68 BLR X9
	0x027C9F6C CBNZ W0, 0x27C9FE8
	0x027C9F70 LDR X0, [X21 + 0x20]
	0x027C9F74 LDRB W8, [X0 + 0x135]
	0x027C9F78 TBNZ X8, 0x0, 0x27C9F80
	0x027C9F7C BL 0x1C5C684
	0x027C9F80 LDR X8, [X0 + 0xC0]
	0x027C9F84 LDR X0, [X8 + 0xE0]
	0x027C9F88 BL 0x293B5DC
	0x027C9F8C CBZ X0, 0x27CA030
	0x027C9F90 LDR X8, [X0]
	0x027C9F94 LDP S4, S5, [X19 + 0x10]
	0x027C9F98 LDR V3, [X19 + 0xC]
	0x027C9F9C LDP S1, S2, [X20 + 0x10]
	0x027C9FA0 LDR V0, [X20 + 0xC]
	0x027C9FA4 LDP X9, X1, [X8 + 0x198]
	0x027C9FA8 BLR X9
	0x027C9FAC CBNZ W0, 0x27C9FE8
	0x027C9FB0 LDR X0, [X21 + 0x20]
	0x027C9FB4 LDRB W8, [X0 + 0x135]
	0x027C9FB8 TBNZ X8, 0x0, 0x27C9FC0
	0x027C9FBC BL 0x1C5C684
	0x027C9FC0 LDR X8, [X0 + 0xC0]
	0x027C9FC4 LDR X0, [X8 + 0x100]
	0x027C9FC8 BL 0x291DF4C
	0x027C9FCC CBZ X0, 0x27CA030
	0x027C9FD0 LDR X8, [X0]
	0x027C9FD4 LDR W2, [X19 + 0x18]
	0x027C9FD8 LDR W1, [X20 + 0x18]
	0x027C9FDC LDP X9, X3, [X8 + 0x198]
	0x027C9FE0 BLR X9
	0x027C9FE4 CBZ W0, 0x27C9FF4
	0x027C9FE8 LDP X20, X19, [X31 + 0x10]
	0x027C9FEC LDP X30, X21, [X31], #0x20
	0x027C9FF0 RET
	0x027C9FF4 LDR X0, [X21 + 0x20]
	0x027C9FF8 LDRB W8, [X0 + 0x135]
	0x027C9FFC TBNZ X8, 0x0, 0x27CA004
	0x027CA000 BL 0x1C5C684
	0x027CA004 LDR X8, [X0 + 0xC0]
	0x027CA008 LDR X0, [X8 + 0x120]
	0x027CA00C BL 0x291DF4C
	0x027CA010 CBZ X0, 0x27CA030
	0x027CA014 LDR X8, [X0]
	0x027CA018 LDR W2, [X19 + 0x1C]
	0x027CA01C LDR W1, [X20 + 0x1C]
	0x027CA020 LDP X20, X19, [X31 + 0x10]
	0x027CA024 LDP X4, X3, [X8 + 0x198]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X20, 0x1C12000
	008 Move X22, 0x192B000
	009 Move W8, [X20+2399]
	010 Move X22, [X22+2904]
	011 Move X21, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x192B000
	018 Move X0, [X0+2904]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+2399], W8
	022 Move X0, [X22]
	023 Move [X31+8], X31
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, [X21+32]
	029 Move W8, [X0+309]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {35}
	034 Call 0x1C5D684
	035 Move X8, [X0+192]
	036 Move X0, X19
	037 Move X1, [X8+320]
	038 Call Boolean.GetHashCode, X0
	039 Move W20, W0
	040 Move X0, [X22]
	041 Add X22, X19, 1
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X0, [X21+32]
	047 Move W8, [X0+309]
	048 Move TEMP, X8
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {53}
	052 Call 0x1C5D684
	053 Move X8, [X0+192]
	054 Move X0, X22
	055 Move X1, [X8+328]
	056 Call Boolean.GetHashCode, X0
	057 Move X8, [X19+8]
	058 Move W21, W0
	059 Move [X31+24], X8
	060 Compare X8, 0
	061 JumpIfEqual {70}
	062 Move X0, [X31+24]
	063 Compare X0, 0
	064 JumpIfEqual {96}
	065 Move X8, [X0]
	066 Move X9, [X8+344]
	067 Move X1, [X8+352]
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Move W22, W0
	070 Move W22, W31
	071 Move X8, [X19+16]
	072 Move [X31+8], X8
	073 Compare X8, 0
	074 JumpIfEqual {83}
	075 Move X0, [X31+8]
	076 Compare X0, 0
	077 JumpIfEqual {96}
	078 Move X8, [X0]
	079 Move X9, [X8+344]
	080 Move X1, [X8+352]
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Move W3, W0
	083 Move W3, W31
	084 Move W0, W20
	085 Move W1, W21
	086 Move W2, W22
	087 Move X20, [X31+48]
	088 Move X19, [X31+56]
	089 Move X22, [X31+32]
	090 Move X21, [X31+40]
	091 Move X30, [X31+16]
	092 Move X4, X31
	093 Add X31, X31, 64
	094 Call ValueTuple.CombineHashCodes, X0, X1, X2, X3
	095 Return X0
	096 Call 0x1C17F20

Method: System.Int32 System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer comparer)

Disassembly:
	0x027CA028 LDP X30, X21, [X31], #0x20
	0x027CA02C BR X4
	0x027CA030 BL 0x1C16F20
	0x027CA034 SUB X31, X31, 0xB0
	0x027CA038 STR X30, [X31 + 0x60]
	0x027CA03C STP X26, X25, [X31 + 0x70]
	0x027CA040 STP X24, X23, [X31 + 0x80]
	0x027CA044 STP X22, X21, [X31 + 0x90]
	0x027CA048 STP X20, X19, [X31 + 0xA0]
	0x027CA04C ADRP X23, 0x1C10000
	0x027CA050 LDRB W8, [X23 + 0x964]
	0x027CA054 MOV X20, X3
	0x027CA058 MOV X19, X2
	0x027CA05C MOV X22, X1
	0x027CA060 MOV X21, X0
	0x027CA064 TBNZ X8, 0x0, 0x27CA07C
	0x027CA068 ADRP X0, 0x1953000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X2+32]
	005 Move X19, X1
	006 Move X20, X0
	007 Move W9, [X8+309]
	008 Move TEMP, X9
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {15}
	012 Move X0, X8
	013 Call 0x1C5D684
	014 Move X8, X0
	015 Move X8, [X8+192]
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X2, [X8+352]
	021 Move X30, [X31+32]

Method: System.Int32 GetHashCodeCore(System.Collections.IEqualityComparer comparer)

Disassembly:
	0x027CA06C LDR X0, [X0 + 0x918]
	0x027CA070 BL 0x1C16CF4
	0x027CA074 MOVZ W8, 0x1
	0x027CA078 STRB W8, [X23 + 0x964]
	0x027CA07C CBZ X22, 0x27CA1C8
	0x027CA080 LDR X0, [X20 + 0x20]
	0x027CA084 LDRB W8, [X0 + 0x135]
	0x027CA088 TBNZ X8, 0x0, 0x27CA090
	0x027CA08C BL 0x1C5C684
	0x027CA090 LDR X8, [X0 + 0xC0]
	0x027CA094 LDR X0, [X8 + 0x8]
	0x027CA098 LDRB W8, [X0 + 0x135]
	0x027CA09C TBNZ X8, 0x0, 0x27CA0A4
	0x027CA0A0 BL 0x1C5C684
	0x027CA0A4 LDR X8, [X22]
	0x027CA0A8 CMP X8, X0
	0x027CA0AC B.NE 0x27CA470
	0x027CA0B0 LDR X0, [X20 + 0x20]
	0x027CA0B4 LDRB W8, [X0 + 0x135]
	0x027CA0B8 TBNZ X8, 0x0, 0x27CA0C0
	0x027CA0BC BL 0x1C5C684
	0x027CA0C0 LDR X8, [X0 + 0xC0]
	0x027CA0C4 LDR X1, [X8 + 0x8]
	0x027CA0C8 LDRB W8, [X1 + 0x135]
	0x027CA0CC TBNZ X8, 0x0, 0x27CA0DC
	0x027CA0D0 MOV X0, X1
	0x027CA0D4 BL 0x1C5C684
	0x027CA0D8 MOV X1, X0
	0x027CA0DC LDR X8, [X22]
	0x027CA0E0 LDR X9, [X1 + 0x40]
	0x027CA0E4 MOV X0, X22
	0x027CA0E8 LDR X8, [X8 + 0x40]
	0x027CA0EC CMP X8, X9
	0x027CA0F0 B.NE 0x27CA510
	0x027CA0F4 BL 0x1C16E08
	0x027CA0F8 LDR V0, [X0]
	0x027CA0FC LDR X8, [X0 + 0x10]
	0x027CA100 STR V0, [X31 + 0x4]
	0x027CA104 STR X8, [X31 + 0x50]
	0x027CA108 LDR W8, [X21 + 0x8]
	0x027CA10C LDR X9, [X21]
	0x027CA110 LDP W26, W24, [X0 + 0x18]
	0x027CA114 STR W8, [X31 + 0x18]
	0x027CA118 STR X9, [X31 + 0x10]
	0x027CA11C LDR X0, [X20 + 0x20]
	0x027CA120 LDRB W8, [X0 + 0x135]
	0x027CA124 TBNZ X8, 0x0, 0x27CA12C
	0x027CA128 BL 0x1C5C684
	0x027CA12C LDR X8, [X0 + 0xC0]
	0x027CA130 ADD X1, X31, 0x10
	0x027CA134 LDR X0, [X8]
	0x027CA138 BL 0x1C16E04
	0x027CA13C LDR W8, [X31 + 0x48]
	0x027CA140 LDR X9, [X31 + 0x40]
	0x027CA144 MOV X22, X0
	0x027CA148 STR W8, [X31 + 0x38]
	0x027CA14C STR X9, [X31 + 0x30]
	0x027CA150 LDR X8, [X20 + 0x20]
	0x027CA154 LDRB W9, [X8 + 0x135]
	0x027CA158 TBNZ X9, 0x0, 0x27CA168
	0x027CA15C MOV X0, X8
	0x027CA160 BL 0x1C5C684
	0x027CA164 MOV X8, X0
	0x027CA168 LDR X8, [X8 + 0xC0]
	0x027CA16C ADD X1, X31, 0x30
	0x027CA170 LDR X0, [X8]
	0x027CA174 BL 0x1C16E04
	0x027CA178 CBZ X19, 0x27CA514
	0x027CA17C ADRP X25, 0x1953000
	0x027CA180 LDR X8, [X19]
	0x027CA184 LDR X25, [X25 + 0x918]
	0x027CA188 MOV X23, X0
	0x027CA18C LDRH W9, [X8 + 0x12E]
	0x027CA190 LDR X1, [X25]
	0x027CA194 CBZ X9, 0x27CA1B8
	0x027CA198 LDR X10, [X8 + 0xB0]
	0x027CA19C ADD X10, X10, 0x8
	0x027CA1A0 LDUR X11, [X10 - 0x8]
	0x027CA1A4 CMP X11, X1
	0x027CA1A8 B.EQ 0x27CA1D0
	0x027CA1AC SUBS X9, X9, 0x1
	0x027CA1B0 ADD X10, X10, 0x10
	0x027CA1B4 B.NE 0x27CA1A0
	0x027CA1B8 MOV X0, X19
	0x027CA1BC MOV W2, W31
	0x027CA1C0 BL 0x1C5C788
	0x027CA1C4 B 0x27CA1DC
	0x027CA1C8 MOVZ W0, 0x1
	0x027CA1CC B 0x27CA454
	0x027CA1D0 LDRSW X9, [X10]
	0x027CA1D4 ADD X8, X8, X9, 0x4, LSL
	0x027CA1D8 ADD X0, X8, 0x138
	0x027CA1DC LDP X8, X3, [X0]
	0x027CA1E0 MOV X0, X19
	0x027CA1E4 MOV X1, X22
	0x027CA1E8 MOV X2, X23
	0x027CA1EC BLR X8
	0x027CA1F0 CBNZ W0, 0x27CA454
	0x027CA1F4 LDR W8, [X21 + 0x14]
	0x027CA1F8 LDUR X9, [X21 + 0xC]
	0x027CA1FC STR W8, [X31 + 0x38]
	0x027CA200 STR X9, [X31 + 0x30]
	0x027CA204 LDR X0, [X20 + 0x20]
	0x027CA208 LDRB W8, [X0 + 0x135]
	0x027CA20C TBNZ X8, 0x0, 0x27CA214
	0x027CA210 BL 0x1C5C684
	0x027CA214 LDR X8, [X0 + 0xC0]
	0x027CA218 ADD X1, X31, 0x30
	0x027CA21C LDR X0, [X8 + 0x10]
	0x027CA220 BL 0x1C16E04
	0x027CA224 LDR X8, [X31 + 0x50]
	0x027CA228 LDR V0, [X31 + 0x4]
	0x027CA22C MOV X22, X0
	0x027CA230 STR X8, [X31 + 0x20]
	0x027CA234 STR V0, [X31 + 0x1]
	0x027CA238 LDUR X8, [X31 + 0x1C]
	0x027CA23C LDR W9, [X31 + 0x24]
	0x027CA240 STR X8, [X31]
	0x027CA244 STR W9, [X31 + 0x8]
	0x027CA248 LDR X8, [X20 + 0x20]
	0x027CA24C LDRB W9, [X8 + 0x135]
	0x027CA250 TBNZ X9, 0x0, 0x27CA260
	0x027CA254 MOV X0, X8
	0x027CA258 BL 0x1C5C684
	0x027CA25C MOV X8, X0
	0x027CA260 LDR X8, [X8 + 0xC0]
	0x027CA264 ADD X1, X31, 0x0
	0x027CA268 LDR X0, [X8 + 0x10]
	0x027CA26C BL 0x1C16E04
	0x027CA270 LDR X8, [X19]
	0x027CA274 LDR X1, [X25]
	0x027CA278 MOV X23, X0
	0x027CA27C LDRH W9, [X8 + 0x12E]
	0x027CA280 CBZ X9, 0x27CA2A4
	0x027CA284 LDR X10, [X8 + 0xB0]
	0x027CA288 ADD X10, X10, 0x8
	0x027CA28C LDUR X11, [X10 - 0x8]
	0x027CA290 CMP X11, X1
	0x027CA294 B.EQ 0x27CA2B4
	0x027CA298 SUBS X9, X9, 0x1
	0x027CA29C ADD X10, X10, 0x10
	0x027CA2A0 B.NE 0x27CA28C
	0x027CA2A4 MOV X0, X19
	0x027CA2A8 MOV W2, W31
	0x027CA2AC BL 0x1C5C788
	0x027CA2B0 B 0x27CA2C0
	0x027CA2B4 LDRSW X9, [X10]
	0x027CA2B8 ADD X8, X8, X9, 0x4, LSL
	0x027CA2BC ADD X0, X8, 0x138
	0x027CA2C0 LDP X8, X3, [X0]
	0x027CA2C4 MOV X0, X19
	0x027CA2C8 MOV X1, X22
	0x027CA2CC MOV X2, X23
	0x027CA2D0 BLR X8
	0x027CA2D4 CBNZ W0, 0x27CA454

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x1C11000
	009 Move W8, [X22+2400]
	010 Move X21, X2
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x1954000
	018 Move X0, [X0+2304]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+2400], W8
	022 Move W8, [X20]
	023 Move [X31+12], W8
	024 Move X0, [X21+32]
	025 Move W8, [X0+309]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {31}
	030 Call 0x1C5D684
	031 Move X8, [X0+192]
	032 Add X1, X31, 12
	033 Move X0, [X8]
	034 Call 0x1C17E04
	035 Compare X19, 0
	036 JumpIfEqual {167}
	037 Move X24, 0x1954000
	038 Move X8, [X19]
	039 Move X24, [X24+2304]
	040 Move X22, X0
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Move X1, [X24]
	043 Compare X9, 0
	044 JumpIfEqual {51}
	045 Move X10, [X8+176]
	046 Add X10, X10, 8
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract X9, X9, 1
	050 Add X10, X10, 16
	051 Move W2, 1
	052 Move X0, X19
	053 Call 0x1C5D788
	054 Move W9, [X10]
	055 Add W9, W9, 1
	056 Add X8, X8, W9
	057 Add X0, X8, 312
	058 Move X8, [X0]
	059 Move X2, [X0+8]
	060 Move X0, X19
	061 Move X1, X22
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move W8, [X20+1]
	064 Move [X31+8], W8
	065 Move X8, [X21+32]
	066 Move W21, W0
	067 Move W9, [X8+309]
	068 Move TEMP, X9
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfEqual {75}
	072 Move X0, X8
	073 Call 0x1C5D684
	074 Move X8, X0
	075 Move X8, [X8+192]
	076 Add X1, X31, 8
	077 Move X0, [X8+16]
	078 Call 0x1C17E04
	079 Move X8, [X19]
	080 Move X1, [X24]
	081 Move X22, X0
	082 NotImplemented "Instruction LDRH not yet implemented."
	083 Compare X9, 0
	084 JumpIfEqual {91}
	085 Move X10, [X8+176]
	086 Add X10, X10, 8
	087 NotImplemented "Instruction LDUR not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Subtract X9, X9, 1
	090 Add X10, X10, 16
	091 Move W2, 1
	092 Move X0, X19
	093 Call 0x1C5D788
	094 Move W9, [X10]
	095 Add W9, W9, 1
	096 Add X8, X8, W9
	097 Add X0, X8, 312
	098 Move X8, [X0]
	099 Move X2, [X0+8]
	100 Move X0, X19
	101 Move X1, X22
	102 NotImplemented "Instruction BLR not yet implemented."
	103 Move X8, [X19]
	104 Move X23, [X20+8]
	105 Move X1, [X24]
	106 Move W22, W0
	107 NotImplemented "Instruction LDRH not yet implemented."
	108 Compare X9, 0
	109 JumpIfEqual {116}
	110 Move X10, [X8+176]
	111 Add X10, X10, 8
	112 NotImplemented "Instruction LDUR not yet implemented."
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Subtract X9, X9, 1
	115 Add X10, X10, 16
	116 Move W2, 1
	117 Move X0, X19
	118 Call 0x1C5D788
	119 Move W9, [X10]
	120 Add W9, W9, 1
	121 Add X8, X8, W9
	122 Add X0, X8, 312
	123 Move X8, [X0]
	124 Move X2, [X0+8]
	125 Move X0, X19
	126 Move X1, X23
	127 NotImplemented "Instruction BLR not yet implemented."
	128 Move X8, [X19]
	129 Move X23, [X20+16]
	130 Move X1, [X24]
	131 Move W20, W0
	132 NotImplemented "Instruction LDRH not yet implemented."
	133 Compare X9, 0
	134 JumpIfEqual {141}
	135 Move X10, [X8+176]
	136 Add X10, X10, 8
	137 NotImplemented "Instruction LDUR not yet implemented."
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Subtract X9, X9, 1
	140 Add X10, X10, 16
	141 Move W2, 1
	142 Move X0, X19
	143 Call 0x1C5D788
	144 Move W9, [X10]
	145 Add W9, W9, 1
	146 Add X8, X8, W9
	147 Add X0, X8, 312
	148 Move X8, [X0]
	149 Move X2, [X0+8]
	150 Move X0, X19
	151 Move X1, X23
	152 NotImplemented "Instruction BLR not yet implemented."
	153 Move W3, W0
	154 Move W0, W21
	155 Move W1, W22
	156 Move W2, W20
	157 Move X4, X31
	158 Call ValueTuple.CombineHashCodes, X0, X1, X2, X3
	159 Move X20, [X31+48]
	160 Move X19, [X31+56]
	161 Move X22, [X31+32]
	162 Move X21, [X31+40]
	163 Move X24, [X31+16]
	164 Move X23, [X31+24]
	165 Move X30, [X31+64]
	166 Return X0
	167 Call 0x1C17F20

Method: System.Int32 System.IValueTupleInternal.GetHashCode(System.Collections.IEqualityComparer comparer)

Disassembly:
	0x027CA2D8 LDR W8, [X21 + 0x18]
	0x027CA2DC STR W8, [X31 + 0x10]
	0x027CA2E0 LDR X0, [X20 + 0x20]
	0x027CA2E4 LDRB W8, [X0 + 0x135]
	0x027CA2E8 TBNZ X8, 0x0, 0x27CA2F0
	0x027CA2EC BL 0x1C5C684
	0x027CA2F0 LDR X8, [X0 + 0xC0]
	0x027CA2F4 ADD X1, X31, 0x10
	0x027CA2F8 LDR X0, [X8 + 0x18]
	0x027CA2FC BL 0x1C16E04
	0x027CA300 STR W26, [X31 + 0x30]
	0x027CA304 LDR X8, [X20 + 0x20]
	0x027CA308 MOV X22, X0
	0x027CA30C LDRB W9, [X8 + 0x135]
	0x027CA310 TBNZ X9, 0x0, 0x27CA320
	0x027CA314 MOV X0, X8
	0x027CA318 BL 0x1C5C684

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X2+32]
	005 Move X19, X1
	006 Move X20, X0
	007 Move W9, [X8+309]
	008 Move TEMP, X9
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {15}
	012 Move X0, X8
	013 Call 0x1C5D684
	014 Move X8, X0
	015 Move X8, [X8+192]
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X2, [X8+352]
	021 Move X30, [X31+32]
	022 Call 0x27CA06C, X0, X1
	023 Return X0

Method: System.String ToString()

Disassembly:
	0x027CA31C MOV X8, X0
	0x027CA320 LDR X8, [X8 + 0xC0]
	0x027CA324 ADD X1, X31, 0x30
	0x027CA328 LDR X0, [X8 + 0x18]
	0x027CA32C BL 0x1C16E04
	0x027CA330 LDR X8, [X19]
	0x027CA334 LDR X1, [X25]
	0x027CA338 MOV X23, X0
	0x027CA33C LDRH W9, [X8 + 0x12E]
	0x027CA340 CBZ X9, 0x27CA364
	0x027CA344 LDR X10, [X8 + 0xB0]
	0x027CA348 ADD X10, X10, 0x8
	0x027CA34C LDUR X11, [X10 - 0x8]
	0x027CA350 CMP X11, X1
	0x027CA354 B.EQ 0x27CA374
	0x027CA358 SUBS X9, X9, 0x1
	0x027CA35C ADD X10, X10, 0x10
	0x027CA360 B.NE 0x27CA34C
	0x027CA364 MOV X0, X19
	0x027CA368 MOV W2, W31
	0x027CA36C BL 0x1C5C788
	0x027CA370 B 0x27CA380
	0x027CA374 LDRSW X9, [X10]
	0x027CA378 ADD X8, X8, X9, 0x4, LSL
	0x027CA37C ADD X0, X8, 0x138
	0x027CA380 LDP X8, X3, [X0]
	0x027CA384 MOV X0, X19
	0x027CA388 MOV X1, X22
	0x027CA38C MOV X2, X23
	0x027CA390 BLR X8
	0x027CA394 CBNZ W0, 0x27CA454
	0x027CA398 LDR W8, [X21 + 0x1C]
	0x027CA39C STR W8, [X31 + 0x10]
	0x027CA3A0 LDR X0, [X20 + 0x20]
	0x027CA3A4 LDRB W8, [X0 + 0x135]
	0x027CA3A8 TBNZ X8, 0x0, 0x27CA3B0
	0x027CA3AC BL 0x1C5C684
	0x027CA3B0 LDR X8, [X0 + 0xC0]
	0x027CA3B4 ADD X1, X31, 0x10
	0x027CA3B8 LDR X0, [X8 + 0x20]
	0x027CA3BC BL 0x1C16E04
	0x027CA3C0 STR W24, [X31 + 0x30]
	0x027CA3C4 LDR X8, [X20 + 0x20]
	0x027CA3C8 MOV X20, X0
	0x027CA3CC LDRB W9, [X8 + 0x135]
	0x027CA3D0 TBNZ X9, 0x0, 0x27CA3E0
	0x027CA3D4 MOV X0, X8
	0x027CA3D8 BL 0x1C5C684
	0x027CA3DC MOV X8, X0
	0x027CA3E0 LDR X8, [X8 + 0xC0]
	0x027CA3E4 ADD X1, X31, 0x30
	0x027CA3E8 LDR X0, [X8 + 0x20]
	0x027CA3EC BL 0x1C16E04
	0x027CA3F0 LDR X8, [X19]
	0x027CA3F4 LDR X1, [X25]
	0x027CA3F8 MOV X21, X0
	0x027CA3FC LDRH W9, [X8 + 0x12E]
	0x027CA400 CBZ X9, 0x27CA424
	0x027CA404 LDR X10, [X8 + 0xB0]
	0x027CA408 ADD X10, X10, 0x8
	0x027CA40C LDUR X11, [X10 - 0x8]
	0x027CA410 CMP X11, X1
	0x027CA414 B.EQ 0x27CA434
	0x027CA418 SUBS X9, X9, 0x1
	0x027CA41C ADD X10, X10, 0x10
	0x027CA420 B.NE 0x27CA40C
	0x027CA424 MOV X0, X19
	0x027CA428 MOV W2, W31
	0x027CA42C BL 0x1C5C788
	0x027CA430 B 0x27CA440
	0x027CA434 LDRSW X9, [X10]
	0x027CA438 ADD X8, X8, X9, 0x4, LSL
	0x027CA43C ADD X0, X8, 0x138
	0x027CA440 LDP X8, X3, [X0]
	0x027CA444 MOV X0, X19
	0x027CA448 MOV X1, X20
	0x027CA44C MOV X2, X21
	0x027CA450 BLR X8
	0x027CA454 LDP X20, X19, [X31 + 0xA0]
	0x027CA458 LDP X22, X21, [X31 + 0x90]
	0x027CA45C LDP X24, X23, [X31 + 0x80]
	0x027CA460 LDP X26, X25, [X31 + 0x70]
	0x027CA464 LDR X30, [X31 + 0x60]
	0x027CA468 ADD X31, X31, 0xB0
	0x027CA46C RET
	0x027CA470 LDP V1, V0, [X21]
	0x027CA474 STP V1, V0, [X31 + 0x40]
	0x027CA478 LDR X0, [X20 + 0x20]
	0x027CA47C BL 0x199B99C
	0x027CA480 LDR X8, [X0 + 0xC0]
	0x027CA484 ADD X1, X31, 0x40
	0x027CA488 LDR X0, [X8 + 0x8]
	0x027CA48C BL 0x1C16E04
	0x027CA490 MOV X1, X31
	0x027CA494 BL 0x33BE520
	0x027CA498 MOV X19, X0
	0x027CA49C BL 0x19903C0
	0x027CA4A0 LDR X8, [X19]
	0x027CA4A4 MOV X0, X19
	0x027CA4A8 LDP X9, X1, [X8 + 0x168]
	0x027CA4AC BLR X9
	0x027CA4B0 MOV X19, X0
	0x027CA4B4 ADRP X0, 0x1953000
	0x027CA4B8 LDR X0, [X0 + 0x920]
	0x027CA4BC BL 0x1C16D08
	0x027CA4C0 MOV X1, X19
	0x027CA4C4 MOV X2, X31
	0x027CA4C8 BL 0x32094D4
	0x027CA4CC MOV X19, X0
	0x027CA4D0 ADRP X0, 0x1931000
	0x027CA4D4 LDR X0, [X0 + 0x578]
	0x027CA4D8 BL 0x1C16D08
	0x027CA4DC BL 0x1C16F10
	0x027CA4E0 MOV X21, X0
	0x027CA4E4 ADRP X0, 0x1953000
	0x027CA4E8 LDR X0, [X0 + 0x928]
	0x027CA4EC BL 0x1C16D08
	0x027CA4F0 MOV X2, X0
	0x027CA4F4 MOV X0, X21
	0x027CA4F8 MOV X1, X19
	0x027CA4FC MOV X3, X31
	0x027CA500 BL 0x330E16C
	0x027CA504 MOV X0, X21
	0x027CA508 MOV X1, X20
	0x027CA50C BL 0x1C16DEC
	0x027CA510 BL 0x1C171E0
	0x027CA514 BL 0x1C16F20
	0x027CA518 STP X30, X27, [X31 - 0x50]!
	0x027CA51C STP X26, X25, [X31 + 0x10]
	0x027CA520 STP X24, X23, [X31 + 0x20]
	0x027CA524 STP X22, X21, [X31 + 0x30]
	0x027CA528 STP X20, X19, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x1C11000
	009 Move X19, 0x192A000
	010 Move W8, [X22+2401]
	011 Move X19, [X19+2760]
	012 Move X21, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {35}
	018 Move X0, 0x192A000
	019 Move X0, [X0+2904]
	020 Call 0x1C17CF4
	021 Move X0, 0x192A000
	022 Move X0, [X0+2760]
	023 Call 0x1C17CF4
	024 Move X0, 0x192A000
	025 Move X0, [X0+2104]
	026 Call 0x1C17CF4
	027 Move X0, 0x1935000
	028 Move X0, [X0+784]
	029 Call 0x1C17CF4
	030 Move X0, 0x192B000
	031 Move X0, [X0+1544]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+2401], W8
	035 Move X0, [X19]
	036 Move W1, 9
	037 Move [X31], X31
	038 Move [X31+8], X31
	039 Call 0x1C17D6C
	040 Compare X0, 0
	041 JumpIfEqual {149}
	042 Move W8, [X0+24]
	043 Move X19, X0
	044 Compare W8, 0
	045 JumpIfEqual {148}
	046 Move X8, 0x1935000
	047 Move X8, [X8+784]
	048 Move X22, 0x192A000
	049 Move X8, [X8]
	050 Move X22, [X22+2904]
	051 Move [X19+32], X8
	052 Move X0, [X22]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Move X0, [X21+32]
	058 Move W8, [X0+309]
	059 Move TEMP, X8
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfEqual {64}
	063 Call 0x1C5D684
	064 Move X8, [X0+192]
	065 Move X0, X20
	066 Move X1, [X8+360]
	067 Call Boolean.ToString, X0
	068 Move W8, [X19+24]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move [X19+40], X0
	072 Move X23, 0x192A000
	073 Move X23, [X23+2104]
	074 Move X8, [X23]
	075 Move [X19+48], X8
	076 Move X0, [X22]
	077 Add X22, X20, 1
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {82}
	081 Call 0x1C17DFC
	082 Move X0, [X21+32]
	083 Move W8, [X0+309]
	084 Move TEMP, X8
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfEqual {89}
	088 Call 0x1C5D684
	089 Move X8, [X0+192]
	090 Move X0, X22
	091 Move X1, [X8+368]
	092 Call Boolean.ToString, X0
	093 Move X8, [X19+24]
	094 NotImplemented "Instruction CMP not yet implemented."
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move [X19+56], X0
	097 Move X9, [X23]
	098 Move [X19+64], X9
	099 Move X9, [X20+8]
	100 Move [X31+8], X9
	101 Compare X9, 0
	102 JumpIfEqual {111}
	103 Move X0, [X31+8]
	104 Compare X0, 0
	105 JumpIfEqual {149}
	106 Move X8, [X0]
	107 Move X9, [X8+360]
	108 Move X1, [X8+368]
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Move X8, [X19+24]
	111 Move X0, X31
	112 NotImplemented "Instruction CMP not yet implemented."
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move [X19+72], X0
	115 Move X9, [X23]
	116 Move [X19+80], X9
	117 Move X9, [X20+16]
	118 Move [X31], X9
	119 Compare X9, 0
	120 JumpIfEqual {129}
	121 Move X0, [X31]
	122 Compare X0, 0
	123 JumpIfEqual {149}
	124 Move X8, [X0]
	125 Move X9, [X8+360]
	126 Move X1, [X8+368]
	127 NotImplemented "Instruction BLR not yet implemented."
	128 Move X8, [X19+24]
	129 Move X0, X31
	130 NotImplemented "Instruction CMP not yet implemented."
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move [X19+88], X0
	133 Move X8, 0x192B000
	134 Move X8, [X8+1544]
	135 Move X0, X19
	136 Move X22, [X31+32]
	137 Move X21, [X31+40]
	138 Move X30, [X31+16]
	139 Move X23, [X31+24]
	140 Move X8, [X8]
	141 Move X1, X31
	142 Move [X19+96], X8
	143 Move X20, [X31+48]
	144 Move X19, [X31+56]
	145 Add X31, X31, 64
	146 Call String.Concat, X0
	147 Return X0
	148 Call 0x1C17F28
	149 Call 0x1C17F20

Method: System.String System.IValueTupleInternal.ToStringEnd()

Disassembly:
	0x027CA52C LDR X8, [X1 + 0x20]
	0x027CA530 MOV X21, X1
	0x027CA534 MOV X19, X0
	0x027CA538 LDRB W9, [X8 + 0x135]
	0x027CA53C TBNZ X9, 0x0, 0x27CA548
	0x027CA540 MOV X0, X8
	0x027CA544 BL 0x1C5C684
	0x027CA548 MOV X0, X19
	0x027CA54C MOV X1, X31
	0x027CA550 BL 0x338FE0C
	0x027CA554 MOV W20, W0
	0x027CA558 ADD X0, X19, 0x4
	0x027CA55C MOV X1, X31
	0x027CA560 BL 0x338FE0C
	0x027CA564 MOV W22, W0
	0x027CA568 ADD X0, X19, 0x8
	0x027CA56C MOV X1, X31
	0x027CA570 BL 0x338FE0C
	0x027CA574 LDR X8, [X21 + 0x20]
	0x027CA578 MOV W23, W0
	0x027CA57C LDRB W9, [X8 + 0x135]
	0x027CA580 TBNZ X9, 0x0, 0x27CA58C
	0x027CA584 MOV X0, X8
	0x027CA588 BL 0x1C5C684
	0x027CA58C ADD X0, X19, 0xC
	0x027CA590 MOV X1, X31
	0x027CA594 BL 0x338FE0C
	0x027CA598 MOV W24, W0
	0x027CA59C ADD X0, X19, 0x10
	0x027CA5A0 MOV X1, X31
	0x027CA5A4 BL 0x338FE0C
	0x027CA5A8 MOV W25, W0
	0x027CA5AC ADD X0, X19, 0x14
	0x027CA5B0 MOV X1, X31
	0x027CA5B4 BL 0x338FE0C
	0x027CA5B8 MOV W26, W0
	0x027CA5BC LDR X0, [X21 + 0x20]
	0x027CA5C0 ADD X27, X19, 0x18
	0x027CA5C4 LDRB W8, [X0 + 0x135]
	0x027CA5C8 TBNZ X8, 0x0, 0x27CA5D0
	0x027CA5CC BL 0x1C5C684
	0x027CA5D0 LDR X8, [X0 + 0xC0]
	0x027CA5D4 MOV X0, X27
	0x027CA5D8 LDR X1, [X8 + 0x150]
	0x027CA5DC BL 0x337B6D8
	0x027CA5E0 LDR X8, [X21 + 0x20]
	0x027CA5E4 MOV W21, W0
	0x027CA5E8 LDRB W9, [X8 + 0x135]
	0x027CA5EC TBNZ X9, 0x0, 0x27CA5FC
	0x027CA5F0 MOV X0, X8
	0x027CA5F4 BL 0x1C5C684
	0x027CA5F8 MOV X8, X0
	0x027CA5FC LDR X8, [X8 + 0xC0]
	0x027CA600 ADD X0, X19, 0x1C
	0x027CA604 EOR W9, W24, W25, 0x2
	0x027CA608 EOR W19, W9, W26, 0x2
	0x027CA60C LDR X1, [X8 + 0x158]
	0x027CA610 EOR W8, W20, W22, 0x2
	0x027CA614 EOR W20, W8, W23, 0x2
	0x027CA618 BL 0x337B6D8
	0x027CA61C MOV W3, W0
	0x027CA620 MOV W0, W20
	0x027CA624 MOV W1, W19
	0x027CA628 MOV W2, W21
	0x027CA62C LDP X20, X19, [X31 + 0x40]
	0x027CA630 LDP X22, X21, [X31 + 0x30]
	0x027CA634 LDP X24, X23, [X31 + 0x20]
	0x027CA638 LDP X26, X25, [X31 + 0x10]
	0x027CA63C MOV X4, X31
	0x027CA640 LDP X30, X27, [X31], #0x50
	0x027CA644 B 0x339BD1C
	0x027CA648 STR X30, [X31 - 0x20]!
	0x027CA64C STP X20, X19, [X31 + 0x10]
	0x027CA650 LDR X8, [X2 + 0x20]
	0x027CA654 MOV X19, X1
	0x027CA658 MOV X20, X0
	0x027CA65C LDRB W9, [X8 + 0x135]
	0x027CA660 TBNZ X9, 0x0, 0x27CA670
	0x027CA664 MOV X0, X8
	0x027CA668 BL 0x1C5C684
	0x027CA66C MOV X8, X0
	0x027CA670 LDR X8, [X8 + 0xC0]
	0x027CA674 MOV X0, X20
	0x027CA678 MOV X1, X19
	0x027CA67C LDP X20, X19, [X31 + 0x10]
	0x027CA680 LDR X2, [X8 + 0x160]
	0x027CA684 LDR X30, [X31], #0x20
	0x027CA688 B 0x27CA68C
	0x027CA68C SUB X31, X31, 0x70
	0x027CA690 STP X30, X25, [X31 + 0x30]
	0x027CA694 STP X24, X23, [X31 + 0x40]
	0x027CA698 STP X22, X21, [X31 + 0x50]
	0x027CA69C STP X20, X19, [X31 + 0x60]
	0x027CA6A0 ADRP X22, 0x1C10000
	0x027CA6A4 LDRB W8, [X22 + 0x965]
	0x027CA6A8 MOV X20, X2
	0x027CA6AC MOV X19, X1
	0x027CA6B0 MOV X21, X0
	0x027CA6B4 TBNZ X8, 0x0, 0x27CA6CC
	0x027CA6B8 ADRP X0, 0x1953000
	0x027CA6BC LDR X0, [X0 + 0x900]
	0x027CA6C0 BL 0x1C16CF4
	0x027CA6C4 MOVZ W8, 0x1
	0x027CA6C8 STRB W8, [X22 + 0x965]
	0x027CA6CC LDR W8, [X21 + 0x8]
	0x027CA6D0 LDR X9, [X21]
	0x027CA6D4 STR W8, [X31 + 0x28]
	0x027CA6D8 STR X9, [X31 + 0x20]
	0x027CA6DC LDR X0, [X20 + 0x20]
	0x027CA6E0 LDRB W8, [X0 + 0x135]
	0x027CA6E4 TBNZ X8, 0x0, 0x27CA6EC
	0x027CA6E8 BL 0x1C5C684
	0x027CA6EC LDR X8, [X0 + 0xC0]
	0x027CA6F0 ADD X1, X31, 0x20
	0x027CA6F4 LDR X0, [X8]
	0x027CA6F8 BL 0x1C16E04
	0x027CA6FC CBZ X19, 0x27CA96C
	0x027CA700 ADRP X25, 0x1953000
	0x027CA704 LDR X8, [X19]
	0x027CA708 LDR X25, [X25 + 0x900]
	0x027CA70C MOV X22, X0
	0x027CA710 LDRH W9, [X8 + 0x12E]
	0x027CA714 LDR X1, [X25]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x1C11000
	009 Move X19, 0x192A000
	010 Move X22, 0x192A000
	011 Move W8, [X23+2402]
	012 Move X19, [X19+2760]
	013 Move X22, [X22+2904]
	014 Move X21, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0x192A000
	021 Move X0, [X0+2904]
	022 Call 0x1C17CF4
	023 Move X0, 0x192A000
	024 Move X0, [X0+2760]
	025 Call 0x1C17CF4
	026 Move X0, 0x192A000
	027 Move X0, [X0+2104]
	028 Call 0x1C17CF4
	029 Move X0, 0x192B000
	030 Move X0, [X0+1544]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X23+2402], W8
	034 Move X0, [X19]
	035 Move W1, 8
	036 Move [X31], X31
	037 Move [X31+8], X31
	038 Call 0x1C17D6C
	039 Move X8, [X22]
	040 Move X19, X0
	041 Move W9, [X8+224]
	042 Compare W9, 0
	043 JumpIfNotEqual {46}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move X0, [X21+32]
	047 Move W8, [X0+309]
	048 Move TEMP, X8
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {53}
	052 Call 0x1C5D684
	053 Move X8, [X0+192]
	054 Move X0, X20
	055 Move X1, [X8+360]
	056 Call Boolean.ToString, X0
	057 Compare X19, 0
	058 JumpIfEqual {141}
	059 Move W8, [X19+24]
	060 Compare W8, 0
	061 JumpIfEqual {140}
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move [X19+32], X0
	064 Move X23, 0x192A000
	065 Move X23, [X23+2104]
	066 Move X8, [X23]
	067 Move [X19+40], X8
	068 Move X0, [X22]
	069 Add X22, X20, 1
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Move X0, [X21+32]
	075 Move W8, [X0+309]
	076 Move TEMP, X8
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfEqual {81}
	080 Call 0x1C5D684
	081 Move X8, [X0+192]
	082 Move X0, X22
	083 Move X1, [X8+368]
	084 Call Boolean.ToString, X0
	085 Move X8, [X19+24]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move [X19+48], X0
	089 Move X9, [X23]
	090 Move [X19+56], X9
	091 Move X9, [X20+8]
	092 Move [X31+8], X9
	093 Compare X9, 0
	094 JumpIfEqual {103}
	095 Move X0, [X31+8]
	096 Compare X0, 0
	097 JumpIfEqual {141}
	098 Move X8, [X0]
	099 Move X9, [X8+360]
	100 Move X1, [X8+368]
	101 NotImplemented "Instruction BLR not yet implemented."
	102 Move X8, [X19+24]
	103 Move X0, X31
	104 NotImplemented "Instruction CMP not yet implemented."
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move [X19+64], X0
	107 Move X9, [X23]
	108 Move [X19+72], X9
	109 Move X9, [X20+16]
	110 Move [X31], X9
	111 Compare X9, 0
	112 JumpIfEqual {121}
	113 Move X0, [X31]
	114 Compare X0, 0
	115 JumpIfEqual {141}
	116 Move X8, [X0]
	117 Move X9, [X8+360]
	118 Move X1, [X8+368]
	119 NotImplemented "Instruction BLR not yet implemented."
	120 Move X8, [X19+24]
	121 Move X0, X31
	122 NotImplemented "Instruction CMP not yet implemented."
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move [X19+80], X0
	125 Move X8, 0x192B000
	126 Move X8, [X8+1544]
	127 Move X0, X19
	128 Move X22, [X31+32]
	129 Move X21, [X31+40]
	130 Move X30, [X31+16]
	131 Move X23, [X31+24]
	132 Move X8, [X8]
	133 Move X1, X31
	134 Move [X19+88], X8
	135 Move X20, [X31+48]
	136 Move X19, [X31+56]
	137 Add X31, X31, 64
	138 Call String.Concat, X0
	139 Return X0
	140 Call 0x1C17F28
	141 Call 0x1C17F20

Method: System.Int32 System.Runtime.CompilerServices.ITuple.get_Length()

Disassembly:
	0x027CA718 CBZ X9, 0x27CA73C
	0x027CA71C LDR X10, [X8 + 0xB0]

ISIL:
	001 Move W0, 4
	002 Return X0

