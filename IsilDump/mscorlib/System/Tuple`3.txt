Type: System.Tuple`3

Method: T1 get_Item1()

Disassembly:
	0x02706630 LDUR X11, [X10 - 0x8]
	0x02706634 CMP X11, X1

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: T2 get_Item2()

Disassembly:
	0x02706638 B.EQ 0x2706660
	0x0270663C SUBS X9, X9, 0x1
	0x02706640 ADD X10, X10, 0x10

ISIL:
	001 Move X8, [X0+24]
	002 Move X1, [X0+32]
	003 Move X0, X8
	004 Return X0

Method: T3 get_Item3()

Disassembly:
	0x02706644 B.NE 0x2706630
	0x02706648 MOV X0, X19

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void .ctor(T1 item1, T2 item2, T3 item3)

Disassembly:
	0x0270664C MOV W2, W31
	0x02706650 BL 0x1C5C788
	0x02706654 B 0x270666C
	0x02706658 MOVZ W0, 0x1
	0x0270665C B 0x27066F0
	0x02706660 LDRSW X9, [X10]
	0x02706664 ADD X8, X8, X9, 0x4, LSL
	0x02706668 ADD X0, X8, 0x138
	0x0270666C LDP X8, X3, [X0]
	0x02706670 MOV X0, X19
	0x02706674 MOV X1, X23
	0x02706678 MOV X2, X22
	0x0270667C BLR X8
	0x02706680 CBNZ W0, 0x27066F0
	0x02706684 LDR X8, [X19]
	0x02706688 LDR X23, [X20 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, X1
	008 Move X1, X31
	009 Move X19, X4
	010 Move X20, X3
	011 Move X21, X2
	012 Move X23, X0
	013 Call Object..ctor, X0
	014 Move [X23+16], X22
	015 Move [X23+24], X21
	016 Move [X23+32], X20
	017 Move [X23+40], X19
	018 Move X20, [X31+32]
	019 Move X19, [X31+40]
	020 Move X22, [X31+16]
	021 Move X21, [X31+24]
	022 Move X30, [X31+48]
	023 Move X23, [X31+56]
	024 Return 

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x0270668C LDR X22, [X21 + 0x18]
	0x02706690 LDR X1, [X24]
	0x02706694 LDRH W9, [X8 + 0x12E]
	0x02706698 CBZ X9, 0x27066BC
	0x0270669C LDR X10, [X8 + 0xB0]
	0x027066A0 ADD X10, X10, 0x8
	0x027066A4 LDUR X11, [X10 - 0x8]
	0x027066A8 CMP X11, X1
	0x027066AC B.EQ 0x27066CC
	0x027066B0 SUBS X9, X9, 0x1
	0x027066B4 ADD X10, X10, 0x10
	0x027066B8 B.NE 0x27066A4
	0x027066BC MOV X0, X19
	0x027066C0 MOV W2, W31
	0x027066C4 BL 0x1C5C788
	0x027066C8 B 0x27066D8
	0x027066CC LDRSW X9, [X10]
	0x027066D0 ADD X8, X8, X9, 0x4, LSL
	0x027066D4 ADD X0, X8, 0x138
	0x027066D8 LDP X8, X3, [X0]
	0x027066DC MOV X0, X19
	0x027066E0 MOV X1, X23
	0x027066E4 MOV X2, X22
	0x027066E8 BLR X8
	0x027066EC CBZ W0, 0x2706704
	0x027066F0 LDP X20, X19, [X31 + 0x30]
	0x027066F4 LDP X22, X21, [X31 + 0x20]
	0x027066F8 LDP X24, X23, [X31 + 0x10]
	0x027066FC LDR X30, [X31], #0x40
	0x02706700 RET
	0x02706704 LDR X8, [X19]
	0x02706708 LDR X22, [X20 + 0x20]
	0x0270670C LDR X20, [X21 + 0x20]
	0x02706710 LDR X1, [X24]
	0x02706714 LDRH W9, [X8 + 0x12E]
	0x02706718 CBZ X9, 0x270673C
	0x0270671C LDR X10, [X8 + 0xB0]
	0x02706720 ADD X10, X10, 0x8
	0x02706724 LDUR X11, [X10 - 0x8]
	0x02706728 CMP X11, X1
	0x0270672C B.EQ 0x270674C
	0x02706730 SUBS X9, X9, 0x1
	0x02706734 ADD X10, X10, 0x10
	0x02706738 B.NE 0x2706724
	0x0270673C MOV X0, X19
	0x02706740 MOV W2, W31
	0x02706744 BL 0x1C5C788
	0x02706748 B 0x2706758
	0x0270674C LDRSW X9, [X10]
	0x02706750 ADD X8, X8, X9, 0x4, LSL
	0x02706754 ADD X0, X8, 0x138
	0x02706758 LDP X4, X3, [X0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1CD5000
	007 Move X22, 0x1A18000
	008 Move W8, [X21+1481]
	009 Move X22, [X22+2288]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x1A18000
	017 Move X0, [X0+2288]
	018 Call 0x1C17CF4
	019 Move X0, 0x1A18000
	020 Move X0, [X0+2296]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+1481], W8
	024 Move X0, [X22]
	025 Call 0x211C0E8
	026 Compare X20, 0
	027 JumpIfEqual {59}
	028 Move X10, 0x1A18000
	029 Move X8, [X20]
	030 Move X10, [X10+2296]
	031 Move X21, X0
	032 NotImplemented "Instruction LDRH not yet implemented."
	033 Move X1, [X10]
	034 Compare X9, 0
	035 JumpIfEqual {42}
	036 Move X10, [X8+176]
	037 Add X10, X10, 8
	038 NotImplemented "Instruction LDUR not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Subtract X9, X9, 1
	041 Add X10, X10, 16
	042 Move X0, X20
	043 Move W2, W31
	044 Call 0x1C5D788
	045 NotImplemented "Instruction LDRSW not yet implemented."
	046 Add X8, X8, X9
	047 Add X0, X8, 312
	048 Move X4, [X0]
	049 Move X3, [X0+8]
	050 Move X0, X20
	051 Move X1, X19
	052 Move X2, X21
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move X30, [X31+48]
	058 CallNoReturn X4
	059 Call 0x1C17F20

Method: System.Boolean System.Collections.IStructuralEquatable.Equals(System.Object other, System.Collections.IEqualityComparer comparer)

Disassembly:
	0x0270675C MOV X0, X19
	0x02706760 MOV X1, X22
	0x02706764 MOV X2, X20
	0x02706768 LDP X20, X19, [X31 + 0x30]
	0x0270676C LDP X22, X21, [X31 + 0x20]
	0x02706770 LDP X24, X23, [X31 + 0x10]
	0x02706774 LDR X30, [X31], #0x40
	0x02706778 BR X4
	0x0270677C MOV X0, X20
	0x02706780 BL 0x19903C0
	0x02706784 MOV X0, X20
	0x02706788 MOV X1, X31
	0x0270678C BL 0x33BE520
	0x02706790 MOV X19, X0
	0x02706794 BL 0x19903C0
	0x02706798 LDR X8, [X19]
	0x0270679C MOV X0, X19
	0x027067A0 LDP X9, X1, [X8 + 0x168]
	0x027067A4 BLR X9
	0x027067A8 MOV X19, X0
	0x027067AC ADRP X0, 0x1A17000
	0x027067B0 LDR X0, [X0 + 0x920]
	0x027067B4 BL 0x1C16D08
	0x027067B8 MOV X1, X19
	0x027067BC MOV X2, X31
	0x027067C0 BL 0x32094D4
	0x027067C4 MOV X19, X0
	0x027067C8 ADRP X0, 0x19F5000
	0x027067CC LDR X0, [X0 + 0x578]
	0x027067D0 BL 0x1C16D08
	0x027067D4 BL 0x1C16F10
	0x027067D8 MOV X20, X0
	0x027067DC ADRP X0, 0x1A17000
	0x027067E0 LDR X0, [X0 + 0x928]
	0x027067E4 BL 0x1C16D08
	0x027067E8 MOV X2, X0
	0x027067EC MOV X0, X20
	0x027067F0 MOV X1, X19
	0x027067F4 MOV X3, X31
	0x027067F8 BL 0x330E16C
	0x027067FC MOV X0, X20
	0x02706800 MOV X1, X22
	0x02706804 BL 0x1C16DEC
	0x02706808 BL 0x1C16F20
	0x0270680C STP X30, X21, [X31 - 0x20]!
	0x02706810 STP X20, X19, [X31 + 0x10]
	0x02706814 ADRP X20, 0x1CD4000
	0x02706818 ADRP X21, 0x1A17000
	0x0270681C LDRB W8, [X20 + 0x5D5]
	0x02706820 LDR X21, [X21 + 0x8F0]
	0x02706824 MOV X19, X0
	0x02706828 TBNZ X8, 0x0, 0x270684C
	0x0270682C ADRP X0, 0x1A17000
	0x02706830 LDR X0, [X0 + 0x8F0]
	0x02706834 BL 0x1C16CF4
	0x02706838 ADRP X0, 0x1A17000
	0x0270683C LDR X0, [X0 + 0x8F8]
	0x02706840 BL 0x1C16CF4
	0x02706844 MOVZ W8, 0x1
	0x02706848 STRB W8, [X20 + 0x5D5]
	0x0270684C LDR X0, [X21]
	0x02706850 BL 0x211B0E8
	0x02706854 CBZ X19, 0x27068CC
	0x02706858 ADRP X10, 0x1A17000
	0x0270685C LDR X8, [X19]
	0x02706860 LDR X10, [X10 + 0x8F8]
	0x02706864 MOV X20, X0
	0x02706868 LDRH W9, [X8 + 0x12E]
	0x0270686C LDR X1, [X10]
	0x02706870 CBZ X9, 0x2706894
	0x02706874 LDR X10, [X8 + 0xB0]
	0x02706878 ADD X10, X10, 0x8
	0x0270687C LDUR X11, [X10 - 0x8]
	0x02706880 CMP X11, X1
	0x02706884 B.EQ 0x27068A4
	0x02706888 SUBS X9, X9, 0x1
	0x0270688C ADD X10, X10, 0x10
	0x02706890 B.NE 0x270687C
	0x02706894 MOVZ W2, 0x1
	0x02706898 MOV X0, X19
	0x0270689C BL 0x1C5C788
	0x027068A0 B 0x27068B4
	0x027068A4 LDR W9, [X10]
	0x027068A8 ADD W9, W9, 0x1
	0x027068AC ADD X8, X8, W9, 0x4, SXTW
	0x027068B0 ADD X0, X8, 0x138
	0x027068B4 LDP X3, X2, [X0]
	0x027068B8 MOV X0, X19
	0x027068BC MOV X1, X20
	0x027068C0 LDP X20, X19, [X31 + 0x10]
	0x027068C4 LDP X30, X21, [X31], #0x20
	0x027068C8 BR X3
	0x027068CC BL 0x1C16F20
	0x027068D0 STP X30, X23, [X31 - 0x30]!
	0x027068D4 STP X22, X21, [X31 + 0x10]
	0x027068D8 STP X20, X19, [X31 + 0x20]
	0x027068DC ADRP X21, 0x1CD4000
	0x027068E0 LDRB W8, [X21 + 0x5D6]
	0x027068E4 MOV X19, X1
	0x027068E8 MOV X20, X0
	0x027068EC TBNZ X8, 0x0, 0x2706904
	0x027068F0 ADRP X0, 0x1A17000
	0x027068F4 LDR X0, [X0 + 0x900]
	0x027068F8 BL 0x1C16CF4
	0x027068FC MOVZ W8, 0x1
	0x02706900 STRB W8, [X21 + 0x5D6]
	0x02706904 CBZ X19, 0x2706A64
	0x02706908 ADRP X23, 0x1A17000
	0x0270690C LDR X8, [X19]
	0x02706910 LDR X23, [X23 + 0x900]
	0x02706914 LDR X21, [X20 + 0x10]
	0x02706918 LDRH W9, [X8 + 0x12E]
	0x0270691C LDR X1, [X23]
	0x02706920 CBZ X9, 0x2706944
	0x02706924 LDR X10, [X8 + 0xB0]
	0x02706928 ADD X10, X10, 0x8
	0x0270692C LDUR X11, [X10 - 0x8]
	0x02706930 CMP X11, X1
	0x02706934 B.EQ 0x2706954
	0x02706938 SUBS X9, X9, 0x1
	0x0270693C ADD X10, X10, 0x10
	0x02706940 B.NE 0x270692C
	0x02706944 MOVZ W2, 0x1
	0x02706948 MOV X0, X19
	0x0270694C BL 0x1C5C788
	0x02706950 B 0x2706964
	0x02706954 LDR W9, [X10]
	0x02706958 ADD W9, W9, 0x1
	0x0270695C ADD X8, X8, W9, 0x4, SXTW
	0x02706960 ADD X0, X8, 0x138
	0x02706964 LDP X8, X2, [X0]
	0x02706968 MOV X0, X19
	0x0270696C MOV X1, X21
	0x02706970 BLR X8
	0x02706974 LDR X8, [X19]
	0x02706978 LDR X22, [X20 + 0x18]
	0x0270697C LDR X1, [X23]
	0x02706980 MOV W21, W0
	0x02706984 LDRH W9, [X8 + 0x12E]
	0x02706988 CBZ X9, 0x27069AC
	0x0270698C LDR X10, [X8 + 0xB0]
	0x02706990 ADD X10, X10, 0x8
	0x02706994 LDUR X11, [X10 - 0x8]
	0x02706998 CMP X11, X1

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+40], X25
	004 Move [X31+48], X24
	005 Move [X31+56], X23
	006 Move [X31+64], X22
	007 Move [X31+72], X21
	008 Move [X31+80], X20
	009 Move [X31+88], X19
	010 Move X23, 0x1CD5000
	011 Move W8, [X23+1482]
	012 Move X21, X3
	013 Move X19, X2
	014 Move X22, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x1A18000
	021 Move X0, [X0+2304]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+1482], W8
	025 Compare X22, 0
	026 JumpIfEqual {140}
	027 Move X8, [X21+32]
	028 Move X8, [X8+192]
	029 Move X0, [X8]
	030 Move W8, [X0+309]
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {36}
	035 Call 0x1C5D684
	036 Move X8, [X22]
	037 Move W9, [X0+304]
	038 Move W10, [X8+304]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X8, [X8+200]
	041 Add X8, X8, X9
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 NotImplemented "Instruction CSEL not yet implemented."
	045 Compare X24, 0
	046 JumpIfEqual {161}
	047 Compare X19, 0
	048 JumpIfEqual {161}
	049 Move X25, 0x1A18000
	050 Move X8, [X19]
	051 Move X23, [X20+16]
	052 Move X22, [X24+16]
	053 Move X25, [X25+2304]
	054 NotImplemented "Instruction LDRH not yet implemented."
	055 Move X1, [X25]
	056 Compare X9, 0
	057 JumpIfEqual {64}
	058 Move X10, [X8+176]
	059 Add X10, X10, 8
	060 NotImplemented "Instruction LDUR not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Subtract X9, X9, 1
	063 Add X10, X10, 16
	064 Move X0, X19
	065 Move W2, W31
	066 Call 0x1C5D788
	067 NotImplemented "Instruction LDRSW not yet implemented."
	068 Add X8, X8, X9
	069 Add X0, X8, 312
	070 Move X8, [X0]
	071 Move X3, [X0+8]
	072 Move X0, X19
	073 Move X1, X23
	074 Move X2, X22
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {140}
	080 NotImplemented "Instruction LDUR not yet implemented."
	081 Add X1, X31, 16
	082 Move [X31+1], V0
	083 Move X8, [X21+32]
	084 Move X8, [X8+192]
	085 Move X0, [X8+16]
	086 Call 0x1C17E04
	087 NotImplemented "Instruction LDUR not yet implemented."
	088 Add X1, X31, 0
	089 Move [X31], V0
	090 Move X8, [X21+32]
	091 Move X21, X0
	092 Move X8, [X8+192]
	093 Move X8, [X8+16]
	094 Move X0, X8
	095 Call 0x1C17E04
	096 Move X8, [X19]
	097 Move X1, [X25]
	098 Move X22, X0
	099 NotImplemented "Instruction LDRH not yet implemented."
	100 Compare X9, 0
	101 JumpIfEqual {108}
	102 Move X10, [X8+176]
	103 Add X10, X10, 8
	104 NotImplemented "Instruction LDUR not yet implemented."
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Subtract X9, X9, 1
	107 Add X10, X10, 16
	108 Move X0, X19
	109 Move W2, W31
	110 Call 0x1C5D788
	111 NotImplemented "Instruction LDRSW not yet implemented."
	112 Add X8, X8, X9
	113 Add X0, X8, 312
	114 Move X8, [X0]
	115 Move X3, [X0+8]
	116 Move X0, X19
	117 Move X1, X21
	118 Move X2, X22
	119 NotImplemented "Instruction BLR not yet implemented."
	120 Move TEMP, X0
	121 And TEMP, TEMP, 1
	122 Compare TEMP, 1
	123 JumpIfNotEqual {140}
	124 Move X8, [X19]
	125 Move X21, [X20+40]
	126 Move X20, [X24+40]
	127 Move X1, [X25]
	128 NotImplemented "Instruction LDRH not yet implemented."
	129 Compare X9, 0
	130 JumpIfEqual {137}
	131 Move X10, [X8+176]
	132 Add X10, X10, 8
	133 NotImplemented "Instruction LDUR not yet implemented."
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Subtract X9, X9, 1
	136 Add X10, X10, 16
	137 Move X0, X19
	138 Move W2, W31
	139 Call 0x1C5D788
	140 Move W0, W31
	141 Move X20, [X31+80]
	142 Move X19, [X31+88]
	143 Move X22, [X31+64]
	144 Move X21, [X31+72]
	145 Move X24, [X31+48]
	146 Move X23, [X31+56]
	147 Move X30, [X31+32]
	148 Move X25, [X31+40]
	149 And W0, W0, 1
	150 Add X31, X31, 96
	151 Return X0
	152 NotImplemented "Instruction LDRSW not yet implemented."
	153 Add X8, X8, X9
	154 Add X0, X8, 312
	155 Move X8, [X0]
	156 Move X3, [X0+8]
	157 Move X0, X19
	158 Move X1, X21
	159 Move X2, X20
	160 NotImplemented "Instruction BLR not yet implemented."
	161 Call 0x1C17F20

Method: System.Int32 System.IComparable.CompareTo(System.Object obj)

Disassembly:
	0x0270699C B.EQ 0x27069BC
	0x027069A0 SUBS X9, X9, 0x1
	0x027069A4 ADD X10, X10, 0x10
	0x027069A8 B.NE 0x2706994
	0x027069AC MOVZ W2, 0x1
	0x027069B0 MOV X0, X19
	0x027069B4 BL 0x1C5C788
	0x027069B8 B 0x27069CC
	0x027069BC LDR W9, [X10]
	0x027069C0 ADD W9, W9, 0x1
	0x027069C4 ADD X8, X8, W9, 0x4, SXTW
	0x027069C8 ADD X0, X8, 0x138
	0x027069CC LDP X8, X2, [X0]
	0x027069D0 MOV X0, X19
	0x027069D4 MOV X1, X22
	0x027069D8 BLR X8
	0x027069DC LDR X8, [X19]
	0x027069E0 LDR X22, [X20 + 0x20]
	0x027069E4 LDR X1, [X23]
	0x027069E8 MOV W20, W0
	0x027069EC LDRH W9, [X8 + 0x12E]
	0x027069F0 CBZ X9, 0x2706A14
	0x027069F4 LDR X10, [X8 + 0xB0]
	0x027069F8 ADD X10, X10, 0x8
	0x027069FC LDUR X11, [X10 - 0x8]
	0x02706A00 CMP X11, X1
	0x02706A04 B.EQ 0x2706A24
	0x02706A08 SUBS X9, X9, 0x1
	0x02706A0C ADD X10, X10, 0x10
	0x02706A10 B.NE 0x27069FC
	0x02706A14 MOVZ W2, 0x1
	0x02706A18 MOV X0, X19
	0x02706A1C BL 0x1C5C788
	0x02706A20 B 0x2706A34
	0x02706A24 LDR W9, [X10]
	0x02706A28 ADD W9, W9, 0x1
	0x02706A2C ADD X8, X8, W9, 0x4, SXTW
	0x02706A30 ADD X0, X8, 0x138
	0x02706A34 LDP X8, X2, [X0]
	0x02706A38 MOV X0, X19
	0x02706A3C MOV X1, X22
	0x02706A40 BLR X8
	0x02706A44 MOV W2, W0
	0x02706A48 MOV W0, W21
	0x02706A4C MOV W1, W20
	0x02706A50 LDP X20, X19, [X31 + 0x20]
	0x02706A54 LDP X22, X21, [X31 + 0x10]
	0x02706A58 MOV X3, X31
	0x02706A5C LDP X30, X23, [X31], #0x30
	0x02706A60 B 0x3394E08
	0x02706A64 BL 0x1C16F20
	0x02706A68 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1CD5000
	007 Move X22, 0x1A18000
	008 Move W8, [X21+1483]
	009 Move X22, [X22+2312]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x1A18000
	017 Move X0, [X0+2312]
	018 Call 0x1C17CF4
	019 Move X0, 0x1A18000
	020 Move X0, [X0+2320]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+1483], W8
	024 Move X0, [X22]
	025 Call Comparer`1<Object>.get_Default
	026 Compare X20, 0
	027 JumpIfEqual {59}
	028 Move X10, 0x1A18000
	029 Move X8, [X20]
	030 Move X10, [X10+2320]
	031 Move X21, X0
	032 NotImplemented "Instruction LDRH not yet implemented."
	033 Move X1, [X10]
	034 Compare X9, 0
	035 JumpIfEqual {42}
	036 Move X10, [X8+176]
	037 Add X10, X10, 8
	038 NotImplemented "Instruction LDUR not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Subtract X9, X9, 1
	041 Add X10, X10, 16
	042 Move X0, X20
	043 Move W2, W31
	044 Call 0x1C5D788
	045 NotImplemented "Instruction LDRSW not yet implemented."
	046 Add X8, X8, X9
	047 Add X0, X8, 312
	048 Move X4, [X0]
	049 Move X3, [X0+8]
	050 Move X0, X20
	051 Move X1, X19
	052 Move X2, X21
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move X30, [X31+48]
	058 CallNoReturn X4
	059 Call 0x1C17F20

Method: System.Int32 System.Collections.IStructuralComparable.CompareTo(System.Object other, System.Collections.IComparer comparer)

Disassembly:
	0x02706A6C STP X20, X19, [X31 + 0x10]
	0x02706A70 ADRP X20, 0x1CD4000
	0x02706A74 ADRP X21, 0x19ED000
	0x02706A78 LDRB W8, [X20 + 0x5D7]
	0x02706A7C LDR X21, [X21 + 0x8F0]
	0x02706A80 MOV X19, X0
	0x02706A84 TBNZ X8, 0x0, 0x2706AA8
	0x02706A88 ADRP X0, 0x1A17000
	0x02706A8C LDR X0, [X0 + 0x930]
	0x02706A90 BL 0x1C16CF4
	0x02706A94 ADRP X0, 0x19ED000
	0x02706A98 LDR X0, [X0 + 0x8F0]
	0x02706A9C BL 0x1C16CF4
	0x02706AA0 MOVZ W8, 0x1
	0x02706AA4 STRB W8, [X20 + 0x5D7]
	0x02706AA8 LDR X0, [X21]
	0x02706AAC BL 0x1C16F10
	0x02706AB0 MOV X1, X31
	0x02706AB4 MOV X20, X0
	0x02706AB8 BL 0x3231AC4
	0x02706ABC CBZ X20, 0x2706B40
	0x02706AC0 MOVZ W1, 0x28
	0x02706AC4 MOV X0, X20
	0x02706AC8 MOV X2, X31
	0x02706ACC BL 0x3233D30
	0x02706AD0 CBZ X19, 0x2706B40
	0x02706AD4 ADRP X10, 0x1A17000
	0x02706AD8 LDR X8, [X19]
	0x02706ADC LDR X10, [X10 + 0x930]
	0x02706AE0 LDRH W9, [X8 + 0x12E]
	0x02706AE4 LDR X1, [X10]
	0x02706AE8 CBZ X9, 0x2706B0C
	0x02706AEC LDR X10, [X8 + 0xB0]
	0x02706AF0 ADD X10, X10, 0x8
	0x02706AF4 LDUR X11, [X10 - 0x8]
	0x02706AF8 CMP X11, X1
	0x02706AFC B.EQ 0x2706B1C
	0x02706B00 SUBS X9, X9, 0x1
	0x02706B04 ADD X10, X10, 0x10
	0x02706B08 B.NE 0x2706AF4
	0x02706B0C MOV X0, X19
	0x02706B10 MOV W2, W31
	0x02706B14 BL 0x1C5C788
	0x02706B18 B 0x2706B28
	0x02706B1C LDRSW X9, [X10]
	0x02706B20 ADD X8, X8, X9, 0x4, LSL
	0x02706B24 ADD X0, X8, 0x138
	0x02706B28 LDP X3, X2, [X0]
	0x02706B2C MOV X0, X19
	0x02706B30 MOV X1, X20
	0x02706B34 LDP X20, X19, [X31 + 0x10]
	0x02706B38 LDP X30, X21, [X31], #0x20
	0x02706B3C BR X3
	0x02706B40 BL 0x1C16F20
	0x02706B44 STP X30, X21, [X31 - 0x20]!
	0x02706B48 STP X20, X19, [X31 + 0x10]
	0x02706B4C ADRP X21, 0x1CD4000
	0x02706B50 LDRB W8, [X21 + 0x5D8]
	0x02706B54 MOV X19, X1
	0x02706B58 MOV X20, X0
	0x02706B5C TBNZ X8, 0x0, 0x2706B74
	0x02706B60 ADRP X0, 0x19ED000
	0x02706B64 LDR X0, [X0 + 0x838]
	0x02706B68 BL 0x1C16CF4
	0x02706B6C MOVZ W8, 0x1
	0x02706B70 STRB W8, [X21 + 0x5D8]
	0x02706B74 CBZ X19, 0x2706BF8
	0x02706B78 LDR X1, [X20 + 0x10]
	0x02706B7C ADRP X21, 0x19ED000
	0x02706B80 LDR X21, [X21 + 0x838]
	0x02706B84 MOV X0, X19
	0x02706B88 MOV X2, X31
	0x02706B8C BL 0x3233F90
	0x02706B90 LDR X1, [X21]
	0x02706B94 MOV X0, X19
	0x02706B98 MOV X2, X31
	0x02706B9C BL 0x32333E0
	0x02706BA0 LDR X1, [X20 + 0x18]
	0x02706BA4 MOV X0, X19
	0x02706BA8 MOV X2, X31
	0x02706BAC BL 0x3233F90
	0x02706BB0 LDR X1, [X21]
	0x02706BB4 MOV X0, X19
	0x02706BB8 MOV X2, X31
	0x02706BBC BL 0x32333E0
	0x02706BC0 LDR X1, [X20 + 0x20]
	0x02706BC4 MOV X0, X19
	0x02706BC8 MOV X2, X31
	0x02706BCC BL 0x3233F90
	0x02706BD0 MOVZ W1, 0x29
	0x02706BD4 MOV X0, X19
	0x02706BD8 MOV X2, X31
	0x02706BDC BL 0x3233D30
	0x02706BE0 LDR X8, [X19]
	0x02706BE4 MOV X0, X19
	0x02706BE8 LDP X20, X19, [X31 + 0x10]
	0x02706BEC LDP X2, X1, [X8 + 0x168]
	0x02706BF0 LDP X30, X21, [X31], #0x20
	0x02706BF4 BR X2
	0x02706BF8 BL 0x1C16F20
	0x02706BFC MOVZ W0, 0x3
	0x02706C00 RET
	0x02706C04 STP X29, X30, [X31 - 0x30]!
	0x02706C08 STP X22, X21, [X31 + 0x10]
	0x02706C0C STP X20, X19, [X31 + 0x20]
	0x02706C10 ADD X29, X31, 0x0
	0x02706C14 SUB X31, X31, 0x10
	0x02706C18 MRS X22, 0xC000
	0x02706C1C LDR X8, [X22 + 0x28]
	0x02706C20 MOV X19, X1
	0x02706C24 STUR X8, [X29 - 0x8]
	0x02706C28 LDR X8, [X2 + 0x20]
	0x02706C2C LDR X8, [X8 + 0xC0]
	0x02706C30 LDP X8, X9, [X8]
	0x02706C34 LDR W20, [X9 + 0xFC]
	0x02706C38 ADD X9, X31, 0x0
	0x02706C3C ADD X10, X20, 0xF
	0x02706C40 AND X10, X10, 0x1FFFFFFFF
	0x02706C44 SUB X21, X9, X10
	0x02706C48 ADD X31, X21, 0x0
	0x02706C4C LDR X1, [X8 + 0x80]
	0x02706C50 BL 0x1C16D18
	0x02706C54 MOV X1, X0
	0x02706C58 MOV X0, X21
	0x02706C5C MOV X2, X20
	0x02706C60 BL 0x3EB1AC0
	0x02706C64 MOV X0, X19
	0x02706C68 MOV X1, X21
	0x02706C6C MOV X2, X20
	0x02706C70 BL 0x3EB1AC0
	0x02706C74 LDR X8, [X22 + 0x28]
	0x02706C78 LDUR X9, [X29 - 0x8]
	0x02706C7C CMP X8, X9
	0x02706C80 B.NE 0x2706C98
	0x02706C84 ADD X31, X29, 0x0
	0x02706C88 LDP X20, X19, [X31 + 0x20]
	0x02706C8C LDP X22, X21, [X31 + 0x10]
	0x02706C90 LDP X29, X30, [X31], #0x30
	0x02706C94 RET
	0x02706C98 BL 0x3EB1B20
	0x02706C9C STP X29, X30, [X31 - 0x30]!
	0x02706CA0 STP X22, X21, [X31 + 0x10]
	0x02706CA4 STP X20, X19, [X31 + 0x20]
	0x02706CA8 ADD X29, X31, 0x0
	0x02706CAC SUB X31, X31, 0x10
	0x02706CB0 MRS X22, 0xC000
	0x02706CB4 LDR X8, [X22 + 0x28]
	0x02706CB8 MOV X19, X1
	0x02706CBC STUR X8, [X29 - 0x8]
	0x02706CC0 LDR X8, [X2 + 0x20]
	0x02706CC4 LDR X8, [X8 + 0xC0]
	0x02706CC8 LDR X9, [X8 + 0x10]
	0x02706CCC LDR W20, [X9 + 0xFC]
	0x02706CD0 ADD X9, X31, 0x0
	0x02706CD4 ADD X10, X20, 0xF
	0x02706CD8 AND X10, X10, 0x1FFFFFFFF
	0x02706CDC SUB X21, X9, X10
	0x02706CE0 ADD X31, X21, 0x0
	0x02706CE4 LDR X8, [X8]
	0x02706CE8 LDR X8, [X8 + 0x80]
	0x02706CEC ADD X1, X8, 0x20
	0x02706CF0 BL 0x1C16D18
	0x02706CF4 MOV X1, X0
	0x02706CF8 MOV X0, X21
	0x02706CFC MOV X2, X20
	0x02706D00 BL 0x3EB1AC0
	0x02706D04 MOV X0, X19
	0x02706D08 MOV X1, X21
	0x02706D0C MOV X2, X20
	0x02706D10 BL 0x3EB1AC0
	0x02706D14 LDR X8, [X22 + 0x28]
	0x02706D18 LDUR X9, [X29 - 0x8]
	0x02706D1C CMP X8, X9
	0x02706D20 B.NE 0x2706D38
	0x02706D24 ADD X31, X29, 0x0
	0x02706D28 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+40], X25
	004 Move [X31+48], X24
	005 Move [X31+56], X23
	006 Move [X31+64], X22
	007 Move [X31+72], X21
	008 Move [X31+80], X20
	009 Move [X31+88], X19
	010 Move X23, 0x1CD5000
	011 Move W8, [X23+1484]
	012 Move X22, X3
	013 Move X19, X2
	014 Move X21, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x1A18000
	021 Move X0, [X0+2328]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+1484], W8
	025 Compare X21, 0
	026 JumpIfEqual {64}
	027 Move X8, [X22+32]
	028 Move X8, [X8+192]
	029 Move X0, [X8]
	030 Move W8, [X0+309]
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {36}
	035 Call 0x1C5D684
	036 Move X8, [X21]
	037 Move W9, [X0+304]
	038 Move W10, [X8+304]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X8, [X8+200]
	041 Add X8, X8, X9
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Compare X19, 0
	045 JumpIfEqual {189}
	046 Move X25, 0x1A18000
	047 Move X8, [X19]
	048 Move X25, [X25+2328]
	049 Move X24, [X20+16]
	050 Move X23, [X21+16]
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 Move X1, [X25]
	053 Compare X9, 0
	054 JumpIfEqual {61}
	055 Move X10, [X8+176]
	056 Add X10, X10, 8
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Subtract X9, X9, 1
	060 Add X10, X10, 16
	061 Move X0, X19
	062 Move W2, W31
	063 Call 0x1C5D788
	064 Move W0, 1
	065 NotImplemented "Instruction LDRSW not yet implemented."
	066 Add X8, X8, X9
	067 Add X0, X8, 312
	068 Move X8, [X0]
	069 Move X3, [X0+8]
	070 Move X0, X19
	071 Move X1, X24
	072 Move X2, X23
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Compare W0, 0
	075 JumpIfNotEqual {143}
	076 NotImplemented "Instruction LDUR not yet implemented."
	077 Add X1, X31, 16
	078 Move [X31+1], V0
	079 Move X8, [X22+32]
	080 Move X8, [X8+192]
	081 Move X0, [X8+16]
	082 Call 0x1C17E04
	083 NotImplemented "Instruction LDUR not yet implemented."
	084 Add X1, X31, 0
	085 Move [X31], V0
	086 Move X8, [X22+32]
	087 Move X22, X0
	088 Move X8, [X8+192]
	089 Move X8, [X8+16]
	090 Move X0, X8
	091 Call 0x1C17E04
	092 Move X8, [X19]
	093 Move X1, [X25]
	094 Move X23, X0
	095 NotImplemented "Instruction LDRH not yet implemented."
	096 Compare X9, 0
	097 JumpIfEqual {104}
	098 Move X10, [X8+176]
	099 Add X10, X10, 8
	100 NotImplemented "Instruction LDUR not yet implemented."
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Subtract X9, X9, 1
	103 Add X10, X10, 16
	104 Move X0, X19
	105 Move W2, W31
	106 Call 0x1C5D788
	107 NotImplemented "Instruction LDRSW not yet implemented."
	108 Add X8, X8, X9
	109 Add X0, X8, 312
	110 Move X8, [X0]
	111 Move X3, [X0+8]
	112 Move X0, X19
	113 Move X1, X22
	114 Move X2, X23
	115 NotImplemented "Instruction BLR not yet implemented."
	116 Compare W0, 0
	117 JumpIfNotEqual {143}
	118 Move X8, [X19]
	119 Move X22, [X20+40]
	120 Move X20, [X21+40]
	121 Move X1, [X25]
	122 NotImplemented "Instruction LDRH not yet implemented."
	123 Compare X9, 0
	124 JumpIfEqual {131}
	125 Move X10, [X8+176]
	126 Add X10, X10, 8
	127 NotImplemented "Instruction LDUR not yet implemented."
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Subtract X9, X9, 1
	130 Add X10, X10, 16
	131 Move X0, X19
	132 Move W2, W31
	133 Call 0x1C5D788
	134 NotImplemented "Instruction LDRSW not yet implemented."
	135 Add X8, X8, X9
	136 Add X0, X8, 312
	137 Move X8, [X0]
	138 Move X3, [X0+8]
	139 Move X0, X19
	140 Move X1, X22
	141 Move X2, X20
	142 NotImplemented "Instruction BLR not yet implemented."
	143 Move X20, [X31+80]
	144 Move X19, [X31+88]
	145 Move X22, [X31+64]
	146 Move X21, [X31+72]
	147 Move X24, [X31+48]
	148 Move X23, [X31+56]
	149 Move X30, [X31+32]
	150 Move X25, [X31+40]
	151 Add X31, X31, 96
	152 Return X0
	153 Move X0, X20
	154 Call 0x19913C0
	155 Move X0, X20
	156 Move X1, X31
	157 Call "il2cpp_vm_object_is_inst", X0
	158 Move X19, X0
	159 Call 0x19913C0
	160 Move X8, [X19]
	161 Move X0, X19
	162 Move X9, [X8+360]
	163 Move X1, [X8+368]
	164 NotImplemented "Instruction BLR not yet implemented."
	165 Move X19, X0
	166 Move X0, 0x1A18000
	167 Move X0, [X0+2336]
	168 Call 0x1C17D08
	169 Move X1, X19
	170 Move X2, X31
	171 Call SR.Format, X0, X1
	172 Move X19, X0
	173 Move X0, 0x19F6000
	174 Move X0, [X0+1400]
	175 Call 0x1C17D08
	176 Call 0x1C17F10
	177 Move X20, X0
	178 Move X0, 0x1A18000
	179 Move X0, [X0+2344]
	180 Call 0x1C17D08
	181 Move X2, X0
	182 Move X0, X20
	183 Move X1, X19
	184 Move X3, X31
	185 Call ArgumentException..ctor, X0, X1, X2
	186 Move X0, X20
	187 Move X1, X22
	188 Call 0x1C17DEC
	189 Call 0x1C17F20

Method: System.Int32 GetHashCode()

Disassembly:
	0x02706D2C LDP X22, X21, [X31 + 0x10]
	0x02706D30 LDP X29, X30, [X31], #0x30
	0x02706D34 RET
	0x02706D38 BL 0x3EB1B20
	0x02706D3C STP X29, X30, [X31 - 0x30]!
	0x02706D40 STP X22, X21, [X31 + 0x10]
	0x02706D44 STP X20, X19, [X31 + 0x20]
	0x02706D48 ADD X29, X31, 0x0
	0x02706D4C SUB X31, X31, 0x10
	0x02706D50 MRS X22, 0xC000
	0x02706D54 LDR X8, [X22 + 0x28]
	0x02706D58 MOV X19, X1
	0x02706D5C STUR X8, [X29 - 0x8]
	0x02706D60 LDR X8, [X2 + 0x20]
	0x02706D64 LDR X8, [X8 + 0xC0]
	0x02706D68 LDR X9, [X8 + 0x18]
	0x02706D6C LDR W20, [X9 + 0xFC]
	0x02706D70 ADD X9, X31, 0x0
	0x02706D74 ADD X10, X20, 0xF
	0x02706D78 AND X10, X10, 0x1FFFFFFFF
	0x02706D7C SUB X21, X9, X10
	0x02706D80 ADD X31, X21, 0x0
	0x02706D84 LDR X8, [X8]
	0x02706D88 LDR X8, [X8 + 0x80]
	0x02706D8C ADD X1, X8, 0x40
	0x02706D90 BL 0x1C16D18
	0x02706D94 MOV X1, X0
	0x02706D98 MOV X0, X21
	0x02706D9C MOV X2, X20
	0x02706DA0 BL 0x3EB1AC0
	0x02706DA4 MOV X0, X19
	0x02706DA8 MOV X1, X21
	0x02706DAC MOV X2, X20
	0x02706DB0 BL 0x3EB1AC0
	0x02706DB4 LDR X8, [X22 + 0x28]
	0x02706DB8 LDUR X9, [X29 - 0x8]
	0x02706DBC CMP X8, X9
	0x02706DC0 B.NE 0x2706DD8
	0x02706DC4 ADD X31, X29, 0x0
	0x02706DC8 LDP X20, X19, [X31 + 0x20]
	0x02706DCC LDP X22, X21, [X31 + 0x10]
	0x02706DD0 LDP X29, X30, [X31], #0x30
	0x02706DD4 RET
	0x02706DD8 BL 0x3EB1B20
	0x02706DDC STP X29, X30, [X31 - 0x60]!
	0x02706DE0 STP X28, X27, [X31 + 0x10]
	0x02706DE4 STP X26, X25, [X31 + 0x20]
	0x02706DE8 STP X24, X23, [X31 + 0x30]
	0x02706DEC STP X22, X21, [X31 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1CD5000
	006 Move X21, 0x1A18000
	007 Move W8, [X20+1485]
	008 Move X21, [X21+2288]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x1A18000
	015 Move X0, [X0+2288]
	016 Call 0x1C17CF4
	017 Move X0, 0x1A18000
	018 Move X0, [X0+2296]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+1485], W8
	022 Move X0, [X21]
	023 Call 0x211C0E8
	024 Compare X19, 0
	025 JumpIfEqual {56}
	026 Move X10, 0x1A18000
	027 Move X8, [X19]
	028 Move X10, [X10+2296]
	029 Move X20, X0
	030 NotImplemented "Instruction LDRH not yet implemented."
	031 Move X1, [X10]
	032 Compare X9, 0
	033 JumpIfEqual {40}
	034 Move X10, [X8+176]
	035 Add X10, X10, 8
	036 NotImplemented "Instruction LDUR not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Subtract X9, X9, 1
	039 Add X10, X10, 16
	040 Move W2, 1
	041 Move X0, X19
	042 Call 0x1C5D788
	043 Move W9, [X10]
	044 Add W9, W9, 1
	045 Add X8, X8, W9
	046 Add X0, X8, 312
	047 Move X3, [X0]
	048 Move X2, [X0+8]
	049 Move X0, X19
	050 Move X1, X20
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 CallNoReturn X3
	056 Call 0x1C17F20

Method: System.Int32 System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer comparer)

Disassembly:
	0x02706DF0 STP X20, X19, [X31 + 0x50]
	0x02706DF4 ADD X29, X31, 0x0
	0x02706DF8 SUB X31, X31, 0x40
	0x02706DFC STP X2, X3, [X29 - 0x38]
	0x02706E00 MRS X8, 0xC000
	0x02706E04 STUR X8, [X29 - 0x28]
	0x02706E08 LDR X8, [X8 + 0x28]
	0x02706E0C MOV X21, X4
	0x02706E10 MOV X26, X1
	0x02706E14 MOV X22, X0
	0x02706E18 STUR X8, [X29 - 0x8]
	0x02706E1C STP X2, X1, [X29 - 0x18]
	0x02706E20 STUR X3, [X29 - 0x20]
	0x02706E24 LDR X8, [X4 + 0x20]
	0x02706E28 LDR X8, [X8 + 0xC0]
	0x02706E2C LDP X9, X10, [X8 + 0x8]
	0x02706E30 LDR X8, [X8 + 0x18]
	0x02706E34 LDR W27, [X9 + 0xFC]
	0x02706E38 LDR W25, [X10 + 0xFC]
	0x02706E3C LDR W20, [X8 + 0xFC]
	0x02706E40 ADD X8, X31, 0x0
	0x02706E44 ADD X9, X27, 0xF
	0x02706E48 AND X9, X9, 0x1FFFFFFFF
	0x02706E4C SUB X28, X8, X9
	0x02706E50 ADD X31, X28, 0x0
	0x02706E54 ADD X9, X25, 0xF
	0x02706E58 ADD X8, X31, 0x0
	0x02706E5C AND X9, X9, 0x1FFFFFFFF
	0x02706E60 SUB X19, X8, X9
	0x02706E64 ADD X31, X19, 0x0
	0x02706E68 ADD X9, X20, 0xF
	0x02706E6C ADD X8, X31, 0x0
	0x02706E70 AND X9, X9, 0x1FFFFFFFF
	0x02706E74 SUB X24, X8, X9
	0x02706E78 ADD X31, X24, 0x0
	0x02706E7C MOV X1, X31
	0x02706E80 BL 0x33BDD8C
	0x02706E84 LDR X23, [X21 + 0x20]
	0x02706E88 MOV X0, X28
	0x02706E8C MOV X2, X27
	0x02706E90 LDR X8, [X23 + 0xC0]
	0x02706E94 LDR X8, [X8 + 0x8]
	0x02706E98 LDR W8, [X8 + 0x28]
	0x02706E9C CMP W8, 0x0
	0x02706EA0 SUB X8, X29, 0x10
	0x02706EA4 CSEL X1, X26, X8, LT
	0x02706EA8 BL 0x3EB1AC0
	0x02706EAC LDR X8, [X23 + 0xC0]
	0x02706EB0 MOV X0, X22
	0x02706EB4 MOV X2, X28
	0x02706EB8 MOV W3, W27
	0x02706EBC LDR X8, [X8]
	0x02706EC0 LDR X1, [X8 + 0x80]
	0x02706EC4 BL 0x1C16D1C
	0x02706EC8 LDR X23, [X21 + 0x20]
	0x02706ECC LDUR X9, [X29 - 0x38]
	0x02706ED0 MOV X0, X19
	0x02706ED4 MOV X2, X25
	0x02706ED8 LDR X8, [X23 + 0xC0]
	0x02706EDC LDR X8, [X8 + 0x10]
	0x02706EE0 LDR W8, [X8 + 0x28]
	0x02706EE4 CMP W8, 0x0
	0x02706EE8 SUB X8, X29, 0x18
	0x02706EEC CSEL X1, X9, X8, LT
	0x02706EF0 BL 0x3EB1AC0
	0x02706EF4 LDR X8, [X23 + 0xC0]
	0x02706EF8 MOV X0, X22
	0x02706EFC MOV X2, X19
	0x02706F00 MOV W3, W25
	0x02706F04 LDR X8, [X8]
	0x02706F08 LDR X8, [X8 + 0x80]
	0x02706F0C ADD X1, X8, 0x20
	0x02706F10 BL 0x1C16D1C
	0x02706F14 LDR X19, [X21 + 0x20]
	0x02706F18 LDUR X9, [X29 - 0x30]
	0x02706F1C MOV X0, X24
	0x02706F20 MOV X2, X20
	0x02706F24 LDR X8, [X19 + 0xC0]
	0x02706F28 LDR X8, [X8 + 0x18]
	0x02706F2C LDR W8, [X8 + 0x28]
	0x02706F30 CMP W8, 0x0
	0x02706F34 SUB X8, X29, 0x20
	0x02706F38 CSEL X1, X9, X8, LT
	0x02706F3C BL 0x3EB1AC0
	0x02706F40 LDR X8, [X19 + 0xC0]
	0x02706F44 MOV X0, X22
	0x02706F48 MOV X2, X24
	0x02706F4C MOV W3, W20
	0x02706F50 LDR X8, [X8]
	0x02706F54 LDR X8, [X8 + 0x80]
	0x02706F58 ADD X1, X8, 0x40
	0x02706F5C BL 0x1C16D1C
	0x02706F60 LDUR X8, [X29 - 0x28]
	0x02706F64 LDR X8, [X8 + 0x28]
	0x02706F68 LDUR X9, [X29 - 0x8]
	0x02706F6C CMP X8, X9
	0x02706F70 B.NE 0x2706F94
	0x02706F74 ADD X31, X29, 0x0
	0x02706F78 LDP X20, X19, [X31 + 0x50]
	0x02706F7C LDP X22, X21, [X31 + 0x40]
	0x02706F80 LDP X24, X23, [X31 + 0x30]
	0x02706F84 LDP X26, X25, [X31 + 0x20]
	0x02706F88 LDP X28, X27, [X31 + 0x10]
	0x02706F8C LDP X29, X30, [X31], #0x60
	0x02706F90 RET
	0x02706F94 BL 0x3EB1B20
	0x02706F98 STR X30, [X31 - 0x30]!
	0x02706F9C STP X22, X21, [X31 + 0x10]
	0x02706FA0 STP X20, X19, [X31 + 0x20]
	0x02706FA4 ADRP X21, 0x1CD4000
	0x02706FA8 ADRP X22, 0x1A17000
	0x02706FAC LDRB W8, [X21 + 0x5D9]
	0x02706FB0 LDR X22, [X22 + 0x8F0]
	0x02706FB4 MOV X19, X1

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x1CD5000
	009 Move W8, [X22+1486]
	010 Move X21, X2
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x1A18000
	018 Move X0, [X0+2304]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+1486], W8
	022 Compare X19, 0
	023 JumpIfEqual {121}
	024 Move X23, 0x1A18000
	025 Move X8, [X19]
	026 Move X23, [X23+2304]
	027 Move X22, [X20+16]
	028 NotImplemented "Instruction LDRH not yet implemented."
	029 Move X1, [X23]
	030 Compare X9, 0
	031 JumpIfEqual {38}
	032 Move X10, [X8+176]
	033 Add X10, X10, 8
	034 NotImplemented "Instruction LDUR not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Subtract X9, X9, 1
	037 Add X10, X10, 16
	038 Move W2, 1
	039 Move X0, X19
	040 Call 0x1C5D788
	041 Move W9, [X10]
	042 Add W9, W9, 1
	043 Add X8, X8, W9
	044 Add X0, X8, 312
	045 Move X8, [X0]
	046 Move X2, [X0+8]
	047 Move X0, X19
	048 Move X1, X22
	049 NotImplemented "Instruction BLR not yet implemented."
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 Add X1, X31, 0
	052 Move [X31], V0
	053 Move X8, [X21+32]
	054 Move W21, W0
	055 Move X8, [X8+192]
	056 Move X8, [X8+16]
	057 Move X0, X8
	058 Call 0x1C17E04
	059 Move X8, [X19]
	060 Move X1, [X23]
	061 Move X22, X0
	062 NotImplemented "Instruction LDRH not yet implemented."
	063 Compare X9, 0
	064 JumpIfEqual {71}
	065 Move X10, [X8+176]
	066 Add X10, X10, 8
	067 NotImplemented "Instruction LDUR not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Subtract X9, X9, 1
	070 Add X10, X10, 16
	071 Move W2, 1
	072 Move X0, X19
	073 Call 0x1C5D788
	074 Move W9, [X10]
	075 Add W9, W9, 1
	076 Add X8, X8, W9
	077 Add X0, X8, 312
	078 Move X8, [X0]
	079 Move X2, [X0+8]
	080 Move X0, X19
	081 Move X1, X22
	082 NotImplemented "Instruction BLR not yet implemented."
	083 Move X8, [X19]
	084 Move X22, [X20+40]
	085 Move X1, [X23]
	086 Move W20, W0
	087 NotImplemented "Instruction LDRH not yet implemented."
	088 Compare X9, 0
	089 JumpIfEqual {96}
	090 Move X10, [X8+176]
	091 Add X10, X10, 8
	092 NotImplemented "Instruction LDUR not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Subtract X9, X9, 1
	095 Add X10, X10, 16
	096 Move W2, 1
	097 Move X0, X19
	098 Call 0x1C5D788
	099 Move W9, [X10]
	100 Add W9, W9, 1
	101 Add X8, X8, W9
	102 Add X0, X8, 312
	103 Move X8, [X0]
	104 Move X2, [X0+8]
	105 Move X0, X19
	106 Move X1, X22
	107 NotImplemented "Instruction BLR not yet implemented."
	108 Move W2, W0
	109 Move W0, W21
	110 Move W1, W20
	111 Move X3, X31
	112 Call Tuple.CombineHashCodes, X0, X1, X2
	113 Move X20, [X31+48]
	114 Move X19, [X31+56]
	115 Move X22, [X31+32]
	116 Move X21, [X31+40]
	117 Move X30, [X31+16]
	118 Move X23, [X31+24]
	119 Add X31, X31, 64
	120 Return X0
	121 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x02706FB8 MOV X20, X0
	0x02706FBC TBNZ X8, 0x0, 0x2706FE0
	0x02706FC0 ADRP X0, 0x1A17000
	0x02706FC4 LDR X0, [X0 + 0x8F0]
	0x02706FC8 BL 0x1C16CF4
	0x02706FCC ADRP X0, 0x1A17000
	0x02706FD0 LDR X0, [X0 + 0x8F8]
	0x02706FD4 BL 0x1C16CF4
	0x02706FD8 MOVZ W8, 0x1
	0x02706FDC STRB W8, [X21 + 0x5D9]
	0x02706FE0 LDR X0, [X22]
	0x02706FE4 BL 0x211B0E8
	0x02706FE8 CBZ X20, 0x2707064
	0x02706FEC ADRP X10, 0x1A17000
	0x02706FF0 LDR X8, [X20]
	0x02706FF4 LDR X10, [X10 + 0x8F8]
	0x02706FF8 MOV X21, X0
	0x02706FFC LDRH W9, [X8 + 0x12E]
	0x02707000 LDR X1, [X10]
	0x02707004 CBZ X9, 0x2707028
	0x02707008 LDR X10, [X8 + 0xB0]
	0x0270700C ADD X10, X10, 0x8
	0x02707010 LDUR X11, [X10 - 0x8]
	0x02707014 CMP X11, X1
	0x02707018 B.EQ 0x2707038
	0x0270701C SUBS X9, X9, 0x1
	0x02707020 ADD X10, X10, 0x10
	0x02707024 B.NE 0x2707010
	0x02707028 MOV X0, X20
	0x0270702C MOV W2, W31
	0x02707030 BL 0x1C5C788
	0x02707034 B 0x2707044
	0x02707038 LDRSW X9, [X10]
	0x0270703C ADD X8, X8, X9, 0x4, LSL
	0x02707040 ADD X0, X8, 0x138
	0x02707044 LDP X4, X3, [X0]
	0x02707048 MOV X0, X20
	0x0270704C MOV X1, X19
	0x02707050 MOV X2, X21
	0x02707054 LDP X20, X19, [X31 + 0x20]
	0x02707058 LDP X22, X21, [X31 + 0x10]
	0x0270705C LDR X30, [X31], #0x30
	0x02707060 BR X4
	0x02707064 BL 0x1C16F20
	0x02707068 STP X29, X30, [X31 - 0x60]!
	0x0270706C STP X28, X27, [X31 + 0x10]
	0x02707070 STP X26, X25, [X31 + 0x20]
	0x02707074 STP X24, X23, [X31 + 0x30]
	0x02707078 STP X22, X21, [X31 + 0x40]
	0x0270707C STP X20, X19, [X31 + 0x50]
	0x02707080 ADD X29, X31, 0x0
	0x02707084 SUB X31, X31, 0x30
	0x02707088 STUR X2, [X29 - 0x10]
	0x0270708C MRS X24, 0xC000
	0x02707090 LDR X8, [X24 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1CD5000
	006 Move X21, 0x19EE000
	007 Move W8, [X20+1487]
	008 Move X21, [X21+2288]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x1A18000
	015 Move X0, [X0+2352]
	016 Call 0x1C17CF4
	017 Move X0, 0x19EE000
	018 Move X0, [X0+2288]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+1487], W8
	022 Move X0, [X21]
	023 Call 0x1C17F10
	024 Move X1, X31
	025 Move X20, X0
	026 Call StringBuilder..ctor, X0
	027 Compare X20, 0
	028 JumpIfEqual {63}
	029 Move W1, 40
	030 Move X0, X20
	031 Move X2, X31
	032 Call StringBuilder.Append, X0, X1
	033 Compare X19, 0
	034 JumpIfEqual {63}
	035 Move X10, 0x1A17000
	036 Move X8, [X19]
	037 Move X10, [X10+2352]
	038 NotImplemented "Instruction LDRH not yet implemented."
	039 Move X1, [X10]
	040 Compare X9, 0
	041 JumpIfEqual {48}
	042 Move X10, [X8+176]
	043 Add X10, X10, 8
	044 NotImplemented "Instruction LDUR not yet implemented."
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Subtract X9, X9, 1
	047 Add X10, X10, 16
	048 Move X0, X19
	049 Move W2, W31
	050 Call 0x1C5D788
	051 NotImplemented "Instruction LDRSW not yet implemented."
	052 Add X8, X8, X9
	053 Add X0, X8, 312
	054 Move X3, [X0]
	055 Move X2, [X0+8]
	056 Move X0, X19
	057 Move X1, X20
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move X30, [X31+32]
	061 Move X21, [X31+40]
	062 CallNoReturn X3
	063 Call 0x1C17F20

Method: System.String System.ITupleInternal.ToString(System.Text.StringBuilder sb)

Disassembly:
	0x02707094 ADRP X19, 0x1CD3000
	0x02707098 MOV X20, X3
	0x0270709C MOV X21, X1
	0x027070A0 STUR X8, [X29 - 0x8]
	0x027070A4 LDRB W8, [X19 + 0x5DA]
	0x027070A8 STUR X0, [X29 - 0x18]
	0x027070AC TBNZ X8, 0x0, 0x27070C4
	0x027070B0 ADRP X0, 0x1A16000
	0x027070B4 LDR X0, [X0 + 0x900]
	0x027070B8 BL 0x1C16CF4
	0x027070BC MOVZ W8, 0x1
	0x027070C0 STRB W8, [X19 + 0x5DA]
	0x027070C4 LDR X8, [X20 + 0x20]
	0x027070C8 LDR X8, [X8 + 0xC0]
	0x027070CC LDP X9, X10, [X8 + 0x8]
	0x027070D0 LDR X11, [X8 + 0x18]
	0x027070D4 LDR W23, [X9 + 0xFC]
	0x027070D8 LDR W26, [X10 + 0xFC]
	0x027070DC LDR W11, [X11 + 0xFC]
	0x027070E0 ADD X9, X31, 0x0
	0x027070E4 ADD X10, X23, 0xF
	0x027070E8 AND X10, X10, 0x1FFFFFFFF
	0x027070EC SUB X22, X9, X10
	0x027070F0 ADD X31, X22, 0x0
	0x027070F4 ADD X9, X31, 0x0
	0x027070F8 SUB X19, X9, X10
	0x027070FC ADD X31, X19, 0x0
	0x02707100 ADD X10, X26, 0xF
	0x02707104 ADD X9, X31, 0x0
	0x02707108 AND X10, X10, 0x1FFFFFFFF
	0x0270710C SUB X28, X9, X10
	0x02707110 ADD X31, X28, 0x0
	0x02707114 ADD X9, X31, 0x0
	0x02707118 SUB X27, X9, X10
	0x0270711C ADD X31, X27, 0x0
	0x02707120 ADD X10, X11, 0xF
	0x02707124 ADD X9, X31, 0x0
	0x02707128 AND X10, X10, 0x1FFFFFFFF
	0x0270712C SUB X25, X9, X10
	0x02707130 ADD X31, X25, 0x0
	0x02707134 ADD X9, X31, 0x0
	0x02707138 SUB X9, X9, X10
	0x0270713C ADD X31, X9, 0x0
	0x02707140 CBZ X21, 0x2707444
	0x02707144 LDR X0, [X8]
	0x02707148 STP X9, X11, [X29 - 0x28]
	0x0270714C LDRB W8, [X0 + 0x135]
	0x02707150 TBNZ X8, 0x0, 0x2707158
	0x02707154 BL 0x1C5C684
	0x02707158 LDR X8, [X21]
	0x0270715C LDRB W9, [X0 + 0x130]
	0x02707160 LDRB W10, [X8 + 0x130]
	0x02707164 CMP W10, W9
	0x02707168 B.CC 0x2707444
	0x0270716C LDR X8, [X8 + 0xC8]
	0x02707170 ADD X8, X8, X9, 0x3, LSL
	0x02707174 LDUR X8, [X8 - 0x8]
	0x02707178 CMP X8, X0
	0x0270717C B.NE 0x2707444

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X22, 0x1CD4000
	008 Move W8, [X22+1488]
	009 Move X21, X2
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x19ED000
	017 Move X0, [X0+2104]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1488], W8
	021 Compare X19, 0
	022 JumpIfEqual {68}
	023 Move X1, [X20+16]
	024 Move X22, 0x19ED000
	025 Move X22, [X22+2104]
	026 Move X0, X19
	027 Move X2, X31
	028 Call StringBuilder.Append, X0, X1
	029 Move X1, [X22]
	030 Move X0, X19
	031 Move X2, X31
	032 Call StringBuilder.Append, X0, X1
	033 NotImplemented "Instruction LDUR not yet implemented."
	034 Add X1, X31, 0
	035 Move [X31], V0
	036 Move X8, [X21+32]
	037 Move X8, [X8+192]
	038 Move X0, [X8+16]
	039 Call 0x1C17E04
	040 Move X1, X0
	041 Move X0, X19
	042 Move X2, X31
	043 Call StringBuilder.Append, X0, X1
	044 Move X1, [X22]
	045 Move X0, X19
	046 Move X2, X31
	047 Call StringBuilder.Append, X0, X1
	048 Move X1, [X20+40]
	049 Move X0, X19
	050 Move X2, X31
	051 Call StringBuilder.Append, X0, X1
	052 Move W1, 41
	053 Move X0, X19
	054 Move X2, X31
	055 Call StringBuilder.Append, X0, X1
	056 Move X8, [X19]
	057 Move X0, X19
	058 Move X9, [X8+360]
	059 Move X1, [X8+368]
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Move X20, [X31+48]
	062 Move X19, [X31+56]
	063 Move X22, [X31+32]
	064 Move X21, [X31+40]
	065 Move X30, [X31+16]
	066 Add X31, X31, 64
	067 Return X0
	068 Call 0x1C17F20

Method: System.Int32 System.Runtime.CompilerServices.ITuple.get_Length()

Disassembly:
	0x02707180 LDR X8, [X20 + 0x20]
	0x02707184 LDUR X0, [X29 - 0x18]

ISIL:
	001 Move W0, 3
	002 Return X0

