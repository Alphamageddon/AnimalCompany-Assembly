Type: System.TimeSpan

Method: System.Void .ctor(System.Int64 ticks)

Disassembly:
	0x03394EC8 BLR X9
	0x03394ECC LDR X8, [X21]

ISIL:
	001 Move [X0], X1
	002 Return 

Method: System.Void .ctor(System.Int32 hours, System.Int32 minutes, System.Int32 seconds)

Disassembly:
	0x03394ED0 TBZ X0, 0x0, 0x3395118
	0x03394ED4 LDR X9, [X8 + 0x888]
	0x03394ED8 LDR X1, [X8 + 0x890]
	0x03394EDC MOV X0, X21
	0x03394EE0 BLR X9
	0x03394EE4 MOV X21, X0
	0x03394EE8 ADRP X24, 0xD5F000
	0x03394EEC LDR X24, [X24 + 0x6C0]
	0x03394EF0 ADRP X8, 0xD87000
	0x03394EF4 LDR X0, [X24]
	0x03394EF8 LDR X8, [X8 + 0xB60]
	0x03394EFC LDR W9, [X0 + 0xE0]
	0x03394F00 LDR X22, [X8]
	0x03394F04 CBNZ W9, 0x3394F0C
	0x03394F08 BL 0x1C16DFC
	0x03394F0C MOV X0, X22
	0x03394F10 BL 0x338C698
	0x03394F14 CMP X21, X0
	0x03394F18 B.EQ 0x3394FC4
	0x03394F1C LDR X0, [X24]
	0x03394F20 LDR W8, [X0 + 0xE0]
	0x03394F24 CBNZ W8, 0x3394F2C
	0x03394F28 BL 0x1C16DFC
	0x03394F2C MOV X0, X21
	0x03394F30 BL 0x33951A0
	0x03394F34 TBZ X0, 0x0, 0x339508C
	0x03394F38 LDR X8, [X20]
	0x03394F3C MOV X0, X20
	0x03394F40 LDR X9, [X8 + 0x888]
	0x03394F44 LDR X1, [X8 + 0x890]
	0x03394F48 BLR X9
	0x03394F4C CBZ X0, 0x339500C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x104A000
	009 Move X24, 0xD62000
	010 Move W8, [X23+108]
	011 Move X24, [X24+1392]
	012 Move W20, W3
	013 Move W21, W2
	014 Move W22, W1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xD62000
	021 Move X0, [X0+1392]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+108], W8
	025 Move X0, [X24]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move W0, W22
	031 Move W1, W21
	032 Move W2, W20
	033 Call TimeSpan.TimeToTicks, X0, X1, X2
	034 Move [X19], X0
	035 Move X20, [X31+48]
	036 Move X19, [X31+56]
	037 Move X22, [X31+32]
	038 Move X21, [X31+40]
	039 Move X24, [X31+16]
	040 Move X23, [X31+24]
	041 Move X30, [X31+64]
	042 Return 

Method: System.Void .ctor(System.Int32 days, System.Int32 hours, System.Int32 minutes, System.Int32 seconds, System.Int32 milliseconds)

Disassembly:
	0x03394FE8 BL 0x22E75A0
	0x03394FEC LDP X20, X19, [X31 + 0x40]
	0x03394FF0 LDP X22, X21, [X31 + 0x30]
	0x03394FF4 LDP X24, X23, [X31 + 0x20]
	0x03394FF8 LDR X30, [X31 + 0x10]
	0x03394FFC ORN W8, W31, W0, 0x0
	0x03395000 UBFM W0, W8, 0x1F, 0x1F
	0x03395004 ADD X31, X31, 0x50
	0x03395008 RET
	0x0339500C BL 0x1C16F20
	0x03395010 ADRP X0, 0xD63000
	0x03395014 LDR X0, [X0 + 0x528]
	0x03395018 BL 0x1C16D08
	0x0339501C BL 0x1C16F10
	0x03395020 MOV X19, X0
	0x03395024 ADRP X0, 0xD68000
	0x03395028 LDR X0, [X0 + 0xEC8]
	0x0339502C BL 0x1C16D08
	0x03395030 MOV X1, X0
	0x03395034 MOV X0, X19
	0x03395038 MOV X2, X31
	0x0339503C BL 0x330E100
	0x03395040 B 0x33950BC
	0x03395044 ADRP X0, 0xD66000
	0x03395048 LDR X0, [X0 + 0x578]
	0x0339504C BL 0x1C16D08
	0x03395050 BL 0x1C16F10
	0x03395054 MOV X19, X0
	0x03395058 ADRP X0, 0xD96000
	0x0339505C LDR X0, [X0 + 0x3B8]
	0x03395060 BL 0x1C16D08
	0x03395064 MOV X20, X0
	0x03395068 ADRP X0, 0xD96000
	0x0339506C LDR X0, [X0 + 0x3C0]
	0x03395070 BL 0x1C16D08
	0x03395074 MOV X2, X0
	0x03395078 MOV X0, X19
	0x0339507C MOV X1, X20
	0x03395080 MOV X3, X31
	0x03395084 BL 0x330E16C
	0x03395088 B 0x33950BC
	0x0339508C ADRP X0, 0xD5E000
	0x03395090 LDR X0, [X0 + 0x5B0]
	0x03395094 BL 0x1C16D08
	0x03395098 BL 0x1C16F10
	0x0339509C MOV X19, X0
	0x033950A0 ADRP X0, 0xD96000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, 0x5180
	004 NotImplemented "Instruction MOVK not yet implemented."
	005 NotImplemented "Instruction SMADDL not yet implemented."
	006 Move W9, 3600
	007 NotImplemented "Instruction SMADDL not yet implemented."
	008 Move W9, 60
	009 NotImplemented "Instruction SMADDL not yet implemented."
	010 Move W10, 1000
	011 Move X9, 0x8865
	012 Add X8, X8, W4
	013 NotImplemented "Instruction MOVK not yet implemented."
	014 Multiply X8, X8, X10
	015 Move X10, 0x10CB
	016 NotImplemented "Instruction MOVK not yet implemented."
	017 NotImplemented "Instruction MOVK not yet implemented."
	018 NotImplemented "Instruction MOVK not yet implemented."
	019 Add X8, X8, W5
	020 NotImplemented "Instruction MOVK not yet implemented."
	021 Add X9, X8, X9
	022 NotImplemented "Instruction MOVK not yet implemented."
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move W9, 0x2710
	025 Multiply X8, X8, X9
	026 Move [X0], X8
	027 Move X30, [X31+16]
	028 Move X19, [X31+24]
	029 Return 
	030 Move X0, 0xD67000
	031 Move X0, [X0+1888]
	032 Call 0x1C17D08
	033 Call 0x1C17F10
	034 Move X19, X0
	035 Move X0, 0xD97000
	036 Move X0, [X0+856]
	037 Call 0x1C17D08
	038 Move X2, X0
	039 Move X0, X19
	040 Move X1, X31
	041 Move X3, X31
	042 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	043 Move X0, 0xD97000
	044 Move X0, [X0+872]
	045 Call 0x1C17D08
	046 Move X1, X0
	047 Move X0, X19
	048 Call 0x1C17DEC

Method: System.Int64 get_Ticks()

Disassembly:
	0x033950A4 LDR X0, [X0 + 0x3C8]
	0x033950A8 BL 0x1C16D08

ISIL:
	001 Move X0, [X0]
	002 Return X0

Method: System.Int32 get_Hours()

Disassembly:
	0x033950AC MOV X1, X0
	0x033950B0 MOV X0, X19
	0x033950B4 MOV X2, X31
	0x033950B8 BL 0x337DF1C
	0x033950BC ADRP X0, 0xD96000
	0x033950C0 LDR X0, [X0 + 0x3D0]
	0x033950C4 BL 0x1C16D08
	0x033950C8 MOV X1, X0
	0x033950CC MOV X0, X19
	0x033950D0 BL 0x1C16DEC
	0x033950D4 MOV X0, X21
	0x033950D8 BL 0x19903C0
	0x033950DC LDR X8, [X21]
	0x033950E0 MOV X0, X21
	0x033950E4 LDP X9, X1, [X8 + 0x168]
	0x033950E8 BLR X9
	0x033950EC MOV X19, X0

ISIL:
	001 Move X8, [X0]
	002 Move X9, 0x10B5
	003 NotImplemented "Instruction MOVK not yet implemented."
	004 NotImplemented "Instruction MOVK not yet implemented."
	005 NotImplemented "Instruction MOVK not yet implemented."
	006 NotImplemented "Instruction SMULH not yet implemented."
	007 Move W10, 0xAAAB
	008 NotImplemented "Instruction SBFM not yet implemented."
	009 NotImplemented "Instruction MOVK not yet implemented."
	010 Add X8, X9, X8
	011 Multiply X9, X8, X10
	012 Move X10, X9
	013 ShiftRight X10, 63
	014 And X10, X10, 0x7FFFFFFF
	015 NotImplemented "Instruction SBFM not yet implemented."
	016 Add W9, W9, W10
	017 Move W10, 24
	018 NotImplemented "Instruction MSUB not yet implemented."
	019 Return X0

Method: System.Int32 get_Milliseconds()

Disassembly:
	0x033950F0 MOV X0, X22
	0x033950F4 BL 0x19903C0
	0x033950F8 LDR X8, [X22]
	0x033950FC MOV X0, X22
	0x03395100 LDP X9, X1, [X8 + 0x168]
	0x03395104 BLR X9
	0x03395108 MOV X20, X0
	0x0339510C ADRP X0, 0xD96000
	0x03395110 LDR X0, [X0 + 0x3D8]
	0x03395114 B 0x3395144
	0x03395118 LDP X9, X1, [X8 + 0x168]
	0x0339511C MOV X0, X21
	0x03395120 BLR X9
	0x03395124 LDR X8, [X20]
	0x03395128 MOV X19, X0
	0x0339512C MOV X0, X20
	0x03395130 LDP X9, X1, [X8 + 0x168]
	0x03395134 BLR X9
	0x03395138 MOV X20, X0

ISIL:
	001 Move X8, [X0]
	002 Move X9, 0x594B
	003 NotImplemented "Instruction MOVK not yet implemented."
	004 NotImplemented "Instruction MOVK not yet implemented."
	005 NotImplemented "Instruction MOVK not yet implemented."
	006 Move X10, 0xF7CF
	007 NotImplemented "Instruction MOVK not yet implemented."
	008 NotImplemented "Instruction SMULH not yet implemented."
	009 NotImplemented "Instruction MOVK not yet implemented."
	010 NotImplemented "Instruction SBFM not yet implemented."
	011 NotImplemented "Instruction MOVK not yet implemented."
	012 Add X8, X9, X8
	013 NotImplemented "Instruction SMULH not yet implemented."
	014 Move X10, X9
	015 ShiftRight X10, 63
	016 And X10, X10, 0x7FFFFFFF
	017 Move X9, X9
	018 ShiftRight X9, 7
	019 And X9, X9, 0x7FFFFFFF
	020 Add W9, W9, W10
	021 Move W10, 1000
	022 NotImplemented "Instruction MSUB not yet implemented."
	023 Return X0

Method: System.Int32 get_Minutes()

Disassembly:
	0x0339513C ADRP X0, 0xD96000
	0x03395140 LDR X0, [X0 + 0x3E0]
	0x03395144 BL 0x1C16D08
	0x03395148 MOV X1, X19
	0x0339514C MOV X2, X20
	0x03395150 MOV X3, X31
	0x03395154 BL 0x320A264
	0x03395158 MOV X19, X0
	0x0339515C ADRP X0, 0xD66000
	0x03395160 LDR X0, [X0 + 0x578]
	0x03395164 BL 0x1C16D08
	0x03395168 BL 0x1C16F10
	0x0339516C MOV X1, X19
	0x03395170 MOV X2, X31
	0x03395174 MOV X20, X0
	0x03395178 BL 0x3314A68
	0x0339517C ADRP X0, 0xD96000
	0x03395180 LDR X0, [X0 + 0x3D0]

ISIL:
	001 Move X8, [X0]
	002 Move X9, 0xF7D5
	003 NotImplemented "Instruction MOVK not yet implemented."
	004 NotImplemented "Instruction MOVK not yet implemented."
	005 NotImplemented "Instruction MOVK not yet implemented."
	006 NotImplemented "Instruction SMULH not yet implemented."
	007 Or X10, X31, -8608480567731124088
	008 NotImplemented "Instruction SBFM not yet implemented."
	009 NotImplemented "Instruction MOVK not yet implemented."
	010 Add X8, X9, X8
	011 NotImplemented "Instruction SMULH not yet implemented."
	012 Add X9, X9, X8
	013 Move X10, X9
	014 ShiftRight X10, 63
	015 And X10, X10, 0x7FFFFFFF
	016 Move X9, X9
	017 ShiftRight X9, 5
	018 And X9, X9, 0x7FFFFFFF
	019 Add W9, W9, W10
	020 Move W10, 60
	021 NotImplemented "Instruction MSUB not yet implemented."
	022 Return X0

Method: System.Int32 get_Seconds()

Disassembly:
	0x03395184 BL 0x1C16D08
	0x03395188 MOV X1, X0
	0x0339518C MOV X0, X20
	0x03395190 BL 0x1C16DEC
	0x03395194 CMP X0, X1
	0x03395198 CSET W0, EQ
	0x0339519C RET
	0x033951A0 STR X30, [X31 - 0x30]!
	0x033951A4 STP X22, X21, [X31 + 0x10]
	0x033951A8 STP X20, X19, [X31 + 0x20]
	0x033951AC ADRP X22, 0x1048000
	0x033951B0 ADRP X20, 0xD85000
	0x033951B4 ADRP X21, 0xD5E000
	0x033951B8 LDRB W8, [X22 + 0x82]
	0x033951BC LDR X20, [X20 + 0xD80]
	0x033951C0 LDR X21, [X21 + 0x6C0]
	0x033951C4 MOV X19, X0
	0x033951C8 TBNZ X8, 0x0, 0x3395258
	0x033951CC ADRP X0, 0xD87000

ISIL:
	001 Move X8, [X0]
	002 Move X9, 0x42BD
	003 NotImplemented "Instruction MOVK not yet implemented."
	004 NotImplemented "Instruction MOVK not yet implemented."
	005 NotImplemented "Instruction MOVK not yet implemented."
	006 NotImplemented "Instruction SMULH not yet implemented."
	007 Add X8, X9, X8
	008 Or X10, X31, -8608480567731124088
	009 NotImplemented "Instruction SBFM not yet implemented."
	010 NotImplemented "Instruction MOVK not yet implemented."
	011 Add X8, X9, X8
	012 NotImplemented "Instruction SMULH not yet implemented."
	013 Add X9, X9, X8
	014 Move X10, X9
	015 ShiftRight X10, 63
	016 And X10, X10, 0x7FFFFFFF
	017 Move X9, X9
	018 ShiftRight X9, 5
	019 And X9, X9, 0x7FFFFFFF
	020 Add W9, W9, W10
	021 Move W10, 60
	022 NotImplemented "Instruction MSUB not yet implemented."
	023 Return X0

Method: System.Double get_TotalDays()

Disassembly:
	0x033951D0 LDR X0, [X0 + 0x248]
	0x033951D4 BL 0x1C16CF4
	0x033951D8 ADRP X0, 0xD85000
	0x033951DC LDR X0, [X0 + 0xD68]
	0x033951E0 BL 0x1C16CF4
	0x033951E4 ADRP X0, 0xD85000

ISIL:
	001 Move V0, [X0]
	002 Move X8, -42622976
	003 Move V1, [X8+1168]
	004 NotImplemented "Instruction SCVTF not yet implemented."
	005 Multiply D0, D0, D1
	006 Return V0

Method: System.Double get_TotalHours()

Disassembly:
	0x033951E8 LDR X0, [X0 + 0xD70]
	0x033951EC BL 0x1C16CF4
	0x033951F0 ADRP X0, 0xD85000
	0x033951F4 LDR X0, [X0 + 0xD78]
	0x033951F8 BL 0x1C16CF4
	0x033951FC ADRP X0, 0xD85000

ISIL:
	001 Move V0, [X0]
	002 Move X8, -42622976
	003 Move V1, [X8+16]
	004 NotImplemented "Instruction SCVTF not yet implemented."
	005 Multiply D0, D0, D1
	006 Return V0

Method: System.Double get_TotalMilliseconds()

Disassembly:
	0x03395200 LDR X0, [X0 + 0xD80]
	0x03395204 BL 0x1C16CF4
	0x03395208 ADRP X0, 0xD85000
	0x0339520C LDR X0, [X0 + 0xD88]
	0x03395210 BL 0x1C16CF4
	0x03395214 ADRP X0, 0xD85000
	0x03395218 LDR X0, [X0 + 0xD90]
	0x0339521C BL 0x1C16CF4
	0x03395220 ADRP X0, 0xD5E000
	0x03395224 LDR X0, [X0 + 0x6C0]
	0x03395228 BL 0x1C16CF4
	0x0339522C ADRP X0, 0xD85000
	0x03395230 LDR X0, [X0 + 0xD98]

ISIL:
	001 Move V1, [X0]
	002 Move X8, -42627072
	003 Move V2, [X8+984]
	004 Move X8, -42627072
	005 Move V0, [X8+2104]
	006 NotImplemented "Instruction SCVTF not yet implemented."
	007 Multiply D1, D1, D2
	008 NotImplemented "Instruction FCMP not yet implemented."
	009 Move X8, -42627072
	010 Move V0, [X8+2752]
	011 NotImplemented "Instruction FMAX not yet implemented."
	012 Return V0

Method: System.Double get_TotalSeconds()

Disassembly:
	0x03395234 BL 0x1C16CF4
	0x03395238 ADRP X0, 0xD85000
	0x0339523C LDR X0, [X0 + 0xDA0]
	0x03395240 BL 0x1C16CF4
	0x03395244 ADRP X0, 0xD85000
	0x03395248 LDR X0, [X0 + 0xDA8]

ISIL:
	001 Move V0, [X0]
	002 Move X8, -42627072
	003 Move V1, [X8+2112]
	004 NotImplemented "Instruction SCVTF not yet implemented."
	005 Multiply D0, D0, D1
	006 Return V0

Method: System.TimeSpan Add(System.TimeSpan ts)

Disassembly:
	0x0339524C BL 0x1C16CF4
	0x03395250 MOVZ W8, 0x1
	0x03395254 STRB W8, [X22 + 0x82]
	0x03395258 LDR X0, [X21]
	0x0339525C LDR X20, [X20]
	0x03395260 LDR W8, [X0 + 0xE0]
	0x03395264 CBNZ W8, 0x339526C
	0x03395268 BL 0x1C16DFC
	0x0339526C MOV X0, X20
	0x03395270 BL 0x338C698
	0x03395274 CMP X0, X19
	0x03395278 B.EQ 0x339540C
	0x0339527C ADRP X8, 0xD85000
	0x03395280 LDR X0, [X21]
	0x03395284 LDR X8, [X8 + 0xD78]
	0x03395288 LDR W9, [X0 + 0xE0]
	0x0339528C LDR X20, [X8]
	0x03395290 CBNZ W9, 0x3395298
	0x03395294 BL 0x1C16DFC
	0x03395298 MOV X0, X20
	0x0339529C BL 0x338C698
	0x033952A0 CMP X0, X19
	0x033952A4 B.EQ 0x339540C
	0x033952A8 ADRP X8, 0xD85000
	0x033952AC LDR X0, [X21]
	0x033952B0 LDR X8, [X8 + 0xD98]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Xor X9, X8, X1
	005 Add X0, X8, X1
	006 Move TEMP, X9
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfEqual {15}
	010 Xor X8, X0, X8
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {18}
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Return X0
	018 Move X0, 0xD5F000
	019 Move X0, [X0+2136]
	020 Call 0x1C17D08
	021 Call 0x1C17F10
	022 Move X19, X0
	023 Move X0, 0xD97000
	024 Move X0, [X0+856]
	025 Call 0x1C17D08
	026 Move X1, X0
	027 Move X0, X19
	028 Call OverflowException..ctor, X0, X1
	029 Move X0, 0xD97000
	030 Move X0, [X0+880]
	031 Call 0x1C17D08
	032 Move X1, X0
	033 Move X0, X19
	034 Call 0x1C17DEC

Method: System.Int32 CompareTo(System.Object value)

Disassembly:
	0x033952B4 LDR W9, [X0 + 0xE0]
	0x033952B8 LDR X20, [X8]
	0x033952BC CBNZ W9, 0x33952C4
	0x033952C0 BL 0x1C16DFC
	0x033952C4 MOV X0, X20
	0x033952C8 BL 0x338C698
	0x033952CC CMP X0, X19
	0x033952D0 B.EQ 0x339540C
	0x033952D4 ADRP X8, 0xD85000
	0x033952D8 LDR X0, [X21]
	0x033952DC LDR X8, [X8 + 0xD68]
	0x033952E0 LDR W9, [X0 + 0xE0]
	0x033952E4 LDR X20, [X8]
	0x033952E8 CBNZ W9, 0x33952F0
	0x033952EC BL 0x1C16DFC
	0x033952F0 MOV X0, X20
	0x033952F4 BL 0x338C698
	0x033952F8 CMP X0, X19
	0x033952FC B.EQ 0x339540C
	0x03395300 ADRP X8, 0xD85000
	0x03395304 LDR X0, [X21]
	0x03395308 LDR X8, [X8 + 0xD90]
	0x0339530C LDR W9, [X0 + 0xE0]
	0x03395310 LDR X20, [X8]
	0x03395314 CBNZ W9, 0x339531C
	0x03395318 BL 0x1C16DFC
	0x0339531C MOV X0, X20
	0x03395320 BL 0x338C698
	0x03395324 CMP X0, X19
	0x03395328 B.EQ 0x339540C
	0x0339532C ADRP X8, 0xD85000
	0x03395330 LDR X0, [X21]
	0x03395334 LDR X8, [X8 + 0xDA0]
	0x03395338 LDR W9, [X0 + 0xE0]
	0x0339533C LDR X20, [X8]
	0x03395340 CBNZ W9, 0x3395348
	0x03395344 BL 0x1C16DFC
	0x03395348 MOV X0, X20
	0x0339534C BL 0x338C698
	0x03395350 CMP X0, X19
	0x03395354 B.EQ 0x339540C
	0x03395358 ADRP X8, 0xD85000
	0x0339535C LDR X0, [X21]
	0x03395360 LDR X8, [X8 + 0xD88]
	0x03395364 LDR W9, [X0 + 0xE0]
	0x03395368 LDR X20, [X8]
	0x0339536C CBNZ W9, 0x3395374
	0x03395370 BL 0x1C16DFC
	0x03395374 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1049000
	006 Move W8, [X21+109]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xD61000
	014 Move X0, [X0+1392]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+109], W8
	018 Compare X20, 0
	019 JumpIfEqual {30}
	020 Move X8, 0xD61000
	021 Move X8, [X8+1392]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X0, X20
	026 Call 0x1C17E08
	027 Move X8, [X0]
	028 Move X9, [X19]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W0, 1
	031 NotImplemented "Instruction CSINV not yet implemented."
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return X0
	037 Move X0, 0xD67000
	038 Move X0, [X0+1400]
	039 Call 0x1C17D08
	040 Call 0x1C17F10
	041 Move X19, X0
	042 Move X0, 0xD97000
	043 Move X0, [X0+888]
	044 Call 0x1C17D08
	045 Move X1, X0
	046 Move X0, X19
	047 Move X2, X31
	048 Call ArgumentException..ctor, X0, X1
	049 Move X0, 0xD97000
	050 Move X0, [X0+896]
	051 Call 0x1C17D08
	052 Move X1, X0
	053 Move X0, X19
	054 Call 0x1C17DEC

Method: System.Int32 CompareTo(System.TimeSpan value)

Disassembly:
	0x03395378 BL 0x338C698
	0x0339537C CMP X0, X19
	0x03395380 B.EQ 0x339540C
	0x03395384 ADRP X8, 0xD85000
	0x03395388 LDR X0, [X21]
	0x0339538C LDR X8, [X8 + 0xDA8]
	0x03395390 LDR W9, [X0 + 0xE0]

ISIL:
	001 Move X8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move W0, 1
	004 Return X0
	005 NotImplemented "Instruction CSINV not yet implemented."
	006 Return X0

Method: System.TimeSpan FromDays(System.Double value)

Disassembly:
	0x03395394 LDR X20, [X8]
	0x03395398 CBNZ W9, 0x33953A0
	0x0339539C BL 0x1C16DFC
	0x033953A0 MOV X0, X20
	0x033953A4 BL 0x338C698
	0x033953A8 CMP X0, X19
	0x033953AC B.EQ 0x339540C
	0x033953B0 ADRP X8, 0xD85000
	0x033953B4 LDR X0, [X21]
	0x033953B8 LDR X8, [X8 + 0xD70]
	0x033953BC LDR W9, [X0 + 0xE0]
	0x033953C0 LDR X20, [X8]
	0x033953C4 CBNZ W9, 0x33953CC
	0x033953C8 BL 0x1C16DFC
	0x033953CC MOV X0, X20
	0x033953D0 BL 0x338C698
	0x033953D4 CMP X0, X19
	0x033953D8 B.EQ 0x339540C
	0x033953DC ADRP X8, 0xD87000
	0x033953E0 LDR X0, [X21]
	0x033953E4 LDR X8, [X8 + 0x248]
	0x033953E8 LDR W9, [X0 + 0xE0]
	0x033953EC LDR X20, [X8]
	0x033953F0 CBNZ W9, 0x33953F8
	0x033953F4 BL 0x1C16DFC

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x1049000
	006 Move X20, 0xD61000
	007 Move W8, [X19+110]
	008 Move X20, [X20+1392]
	009 Move V8, V0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD61000
	015 Move X0, [X0+1392]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X19+110], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+8]
	027 Move W0, 0x5C00
	028 NotImplemented "Instruction MOVK not yet implemented."
	029 Move V0, V8
	030 Move V8, [X31+32]

Method: System.Boolean Equals(System.Object value)

Disassembly:
	0x033954EC MOV X23, X0
	0x033954F0 LDR W9, [X8 + 0xE0]
	0x033954F4 CBNZ W9, 0x3395500
	0x033954F8 MOV X0, X8
	0x033954FC BL 0x1C16DFC
	0x03395500 MOV X0, X23
	0x03395504 MOV X1, X31
	0x03395508 BL 0x33AEFD8
	0x0339550C CBZ X21, 0x3395578
	0x03395510 LDR W8, [X21 + 0x18]
	0x03395514 CMP X22, X8
	0x03395518 B.CS 0x339557C
	0x0339551C STR X0, [X25, X22, LSL #3]
	0x03395520 MOV X0, X20
	0x03395524 ADD X22, X22, 0x1
	0x03395528 BL 0x3395B7C
	0x0339552C CMP X22, W0, SXTW
	0x03395530 B.LT 0x33954DC
	0x03395534 LDR X0, [X24]
	0x03395538 ADRP X20, 0xD96000
	0x0339553C LDR W8, [X0 + 0xE0]
	0x03395540 LDR X20, [X20 + 0x3E8]
	0x03395544 CBNZ W8, 0x339554C
	0x03395548 BL 0x1C16DFC
	0x0339554C MOV X0, X19
	0x03395550 MOV X1, X31
	0x03395554 BL 0x33AEFD8
	0x03395558 LDR X2, [X20]
	0x0339555C MOV X1, X0
	0x03395560 MOV X0, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1049000
	006 Move W8, [X21+111]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xD61000
	014 Move X0, [X0+1392]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+111], W8
	018 Compare X19, 0
	019 JumpIfEqual {25}
	020 Move X8, 0xD61000
	021 Move X8, [X8+1392]
	022 Move X9, [X19]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W0, W31
	026 Move X20, [X20]
	027 Move X0, X19
	028 Call 0x1C17E08
	029 Move X8, [X0]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSET not yet implemented."
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return X0

Method: System.Boolean Equals(System.TimeSpan obj)

Disassembly:
	0x03395564 LDP X20, X19, [X31 + 0x30]
	0x03395568 LDP X22, X21, [X31 + 0x20]
	0x0339556C LDP X24, X23, [X31 + 0x10]
	0x03395570 LDP X30, X25, [X31], #0x40

ISIL:
	001 Move X8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x03395574 B 0x22C9A48
	0x03395578 BL 0x1C16F20
	0x0339557C BL 0x1C16F28

ISIL:
	001 Move W8, [X0]
	002 Move W9, [X0+4]
	003 Xor W0, W9, W8
	004 Return X0

Method: System.TimeSpan FromHours(System.Double value)

Disassembly:
	0x03395580 SUB X31, X31, 0x40
	0x03395584 STR X30, [X31 + 0x10]
	0x03395588 STP X22, X21, [X31 + 0x20]
	0x0339558C STP X20, X19, [X31 + 0x30]
	0x03395590 ADRP X21, 0x1048000
	0x03395594 LDRB W8, [X21 + 0x7F]
	0x03395598 MOV X20, X1
	0x0339559C MOV X19, X0
	0x033955A0 TBNZ X8, 0x0, 0x33955B8
	0x033955A4 ADRP X0, 0xD5E000
	0x033955A8 LDR X0, [X0 + 0x6C0]
	0x033955AC BL 0x1C16CF4
	0x033955B0 MOVZ W8, 0x1
	0x033955B4 STRB W8, [X21 + 0x7F]
	0x033955B8 CBZ X20, 0x33956AC
	0x033955BC LDR X8, [X19]
	0x033955C0 MOV X0, X19
	0x033955C4 LDR X9, [X8 + 0x588]
	0x033955C8 LDR X1, [X8 + 0x590]
	0x033955CC BLR X9
	0x033955D0 TBZ X0, 0x0, 0x33956E0
	0x033955D4 MOV X0, X20
	0x033955D8 MOV X1, X31
	0x033955DC BL 0x33BE520
	0x033955E0 CBZ X0, 0x33956A8

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x1049000
	006 Move X20, 0xD61000
	007 Move W8, [X19+112]
	008 Move X20, [X20+1392]
	009 Move V8, V0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD61000
	015 Move X0, [X0+1392]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X19+112], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+8]
	027 Move W0, 0xEE80
	028 NotImplemented "Instruction MOVK not yet implemented."
	029 Move V0, V8
	030 Move V8, [X31+32]
	031 Call TimeSpan.Interval, V0, X0
	032 Return X0

Method: System.TimeSpan Interval(System.Double value, System.Int32 scale)

Disassembly:
	0x033953F8 MOV X0, X20
	0x033953FC BL 0x338C698
	0x03395400 CMP X0, X19
	0x03395404 CSET W0, EQ
	0x03395408 B 0x3395410
	0x0339540C MOVZ W0, 0x1
	0x03395410 LDP X20, X19, [X31 + 0x20]
	0x03395414 LDP X22, X21, [X31 + 0x10]
	0x03395418 LDR X30, [X31], #0x30
	0x0339541C RET
	0x03395420 SUB X31, X31, 0x20
	0x03395424 STP X30, X31, [X31 + 0x10]
	0x03395428 ADD X1, X31, 0x18
	0x0339542C ADD X2, X31, 0x8
	0x03395430 STR X31, [X31 + 0x8]
	0x03395434 BL 0x3395814
	0x03395438 LDP X0, X30, [X31 + 0x8]
	0x0339543C ADD X31, X31, 0x20
	0x03395440 RET
	0x03395444 STP X30, X25, [X31 - 0x40]!
	0x03395448 STP X24, X23, [X31 + 0x10]
	0x0339544C STP X22, X21, [X31 + 0x20]
	0x03395450 STP X20, X19, [X31 + 0x30]
	0x03395454 ADRP X21, 0x1048000
	0x03395458 LDRB W8, [X21 + 0x81]
	0x0339545C MOV X19, X1
	0x03395460 MOV X20, X0
	0x03395464 TBNZ X8, 0x0, 0x3395494
	0x03395468 ADRP X0, 0xD96000
	0x0339546C LDR X0, [X0 + 0x3E8]
	0x03395470 BL 0x1C16CF4
	0x03395474 ADRP X0, 0xD5E000
	0x03395478 LDR X0, [X0 + 0xDF8]
	0x0339547C BL 0x1C16CF4
	0x03395480 ADRP X0, 0xD66000
	0x03395484 LDR X0, [X0 + 0x568]
	0x03395488 BL 0x1C16CF4
	0x0339548C MOVZ W8, 0x1
	0x03395490 STRB W8, [X21 + 0x81]
	0x03395494 CBZ X20, 0x3395578
	0x03395498 ADRP X21, 0xD66000
	0x0339549C ADRP X24, 0xD5E000
	0x033954A0 LDR X21, [X21 + 0x568]
	0x033954A4 LDR X24, [X24 + 0xDF8]
	0x033954A8 MOV X0, X20
	0x033954AC BL 0x3395B7C
	0x033954B0 LDR X8, [X21]
	0x033954B4 MOV W1, W0
	0x033954B8 MOV X0, X8
	0x033954BC BL 0x1C16D6C
	0x033954C0 MOV X21, X0
	0x033954C4 MOV X0, X20
	0x033954C8 BL 0x3395B7C
	0x033954CC CMP W0, 0x1
	0x033954D0 B.LT 0x3395534
	0x033954D4 MOV X22, X31
	0x033954D8 ADD X25, X21, 0x20
	0x033954DC MOV X0, X20
	0x033954E0 MOV W1, W22
	0x033954E4 BL 0x3395BDC
	0x033954E8 LDR X8, [X24]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, D0
	004 Move X9, 1
	005 And X8, X8, 0x7FFFFFFF
	006 NotImplemented "Instruction MOVK not yet implemented."
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction SCVTF not yet implemented."
	009 Move X8, -42627072
	010 NotImplemented "Instruction FCMP not yet implemented."
	011 Multiply D0, D1, D0
	012 Move V1, [X8+2104]
	013 Move D2, 0.5
	014 Move D3, -0.5
	015 NotImplemented "Instruction FCSEL not yet implemented."
	016 Add D0, D2, D0
	017 NotImplemented "Instruction FCMP not yet implemented."
	018 Move X8, -42627072
	019 Move V1, [X8+2752]
	020 NotImplemented "Instruction FCMP not yet implemented."
	021 Move X10, 0x7FF00000
	022 NotImplemented "Instruction FCVTZS not yet implemented."
	023 Move W9, 0x2710
	024 Move D1, X10
	025 Multiply X8, X8, X9
	026 NotImplemented "Instruction FCMP not yet implemented."
	027 NotImplemented "Instruction CSEL not yet implemented."
	028 Move X30, [X31+16]
	029 Move X19, [X31+24]
	030 Return X0
	031 Move X0, 0xD67000
	032 Move X0, [X0+1400]
	033 Call 0x1C17D08
	034 Call 0x1C17F10
	035 Move X19, X0
	036 Move X0, 0xD97000
	037 Move X0, [X0+904]
	038 Call 0x1C17D08
	039 Move X1, X0
	040 Move X0, X19
	041 Move X2, X31
	042 Call ArgumentException..ctor, X0, X1
	043 Move X0, 0xD5F000
	044 Move X0, [X0+2136]
	045 Call 0x1C17D08
	046 Call 0x1C17F10
	047 Move X19, X0
	048 Move X0, 0xD97000
	049 Move X0, [X0+856]
	050 Call 0x1C17D08
	051 Move X1, X0
	052 Move X0, X19
	053 Call OverflowException..ctor, X0, X1
	054 Move X0, 0xD97000
	055 Move X0, [X0+912]
	056 Call 0x1C17D08
	057 Move X1, X0
	058 Move X0, X19
	059 Call 0x1C17DEC

Method: System.TimeSpan FromMilliseconds(System.Double value)

Disassembly:
	0x033955E4 LDR X8, [X0]
	0x033955E8 ADRP X22, 0xD5E000
	0x033955EC MOV X21, X0
	0x033955F0 LDR X9, [X8 + 0x588]
	0x033955F4 LDR X1, [X8 + 0x590]
	0x033955F8 LDR X22, [X22 + 0x6C0]
	0x033955FC BLR X9
	0x03395600 TBNZ X0, 0x0, 0x3395620
	0x03395604 LDR X0, [X22]
	0x03395608 LDR W8, [X0 + 0xE0]
	0x0339560C CBNZ W8, 0x3395614
	0x03395610 BL 0x1C16DFC
	0x03395614 MOV X0, X21
	0x03395618 BL 0x33951A0
	0x0339561C TBZ X0, 0x0, 0x3395714
	0x03395620 ADD X1, X31, 0x18
	0x03395624 ADD X2, X31, 0x8
	0x03395628 MOV X0, X19
	0x0339562C STR X31, [X31 + 0x18]
	0x03395630 STR X31, [X31 + 0x8]
	0x03395634 BL 0x3395814
	0x03395638 LDR X0, [X22]
	0x0339563C LDR X21, [X31 + 0x8]
	0x03395640 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x1049000
	006 Move X20, 0xD61000
	007 Move W8, [X19+113]
	008 Move X20, [X20+1392]
	009 Move V8, V0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD61000
	015 Move X0, [X0+1392]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X19+113], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+8]
	027 Move W0, 1
	028 Move V0, V8
	029 Move V8, [X31+32]
	030 Call TimeSpan.Interval, V0, X0
	031 Return X0

Method: System.TimeSpan FromMinutes(System.Double value)

Disassembly:
	0x03395644 CBNZ W8, 0x339564C
	0x03395648 BL 0x1C16DFC
	0x0339564C MOV X0, X21
	0x03395650 MOV X1, X20
	0x03395654 BL 0x3395444
	0x03395658 TBNZ X0, 0x1F, 0x3395690
	0x0339565C LDR X8, [X19]
	0x03395660 MOV W20, W0
	0x03395664 MOV X0, X19
	0x03395668 LDR X9, [X8 + 0x268]
	0x0339566C LDR X1, [X8 + 0x270]
	0x03395670 BLR X9
	0x03395674 CBZ X0, 0x33956A8
	0x03395678 LDR W8, [X0 + 0x18]
	0x0339567C CMP W20, W8
	0x03395680 B.CS 0x3395710
	0x03395684 ADD X8, X0, W20, 0x3, UXTW
	0x03395688 LDR X0, [X8 + 0x20]
	0x0339568C B 0x3395694
	0x03395690 MOV X0, X31
	0x03395694 LDP X20, X19, [X31 + 0x30]
	0x03395698 LDP X22, X21, [X31 + 0x20]
	0x0339569C LDR X30, [X31 + 0x10]
	0x033956A0 ADD X31, X31, 0x40

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x1049000
	006 Move X20, 0xD61000
	007 Move W8, [X19+114]
	008 Move X20, [X20+1392]
	009 Move V8, V0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD61000
	015 Move X0, [X0+1392]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X19+114], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+8]
	027 Move W0, 0xEA60
	028 Move V0, V8
	029 Move V8, [X31+32]
	030 Call TimeSpan.Interval, V0, X0
	031 Return X0

Method: System.TimeSpan Negate()

Disassembly:
	0x033956A4 RET
	0x033956A8 BL 0x1C16F20
	0x033956AC ADRP X0, 0xD63000
	0x033956B0 LDR X0, [X0 + 0x528]
	0x033956B4 BL 0x1C16D08
	0x033956B8 BL 0x1C16F10
	0x033956BC MOV X19, X0
	0x033956C0 ADRP X0, 0xD68000
	0x033956C4 LDR X0, [X0 + 0xEC8]
	0x033956C8 BL 0x1C16D08
	0x033956CC MOV X1, X0
	0x033956D0 MOV X0, X19
	0x033956D4 MOV X2, X31
	0x033956D8 BL 0x330E100
	0x033956DC B 0x3395758
	0x033956E0 ADRP X0, 0xD66000
	0x033956E4 LDR X0, [X0 + 0x578]
	0x033956E8 BL 0x1C16D08
	0x033956EC BL 0x1C16F10
	0x033956F0 MOV X19, X0
	0x033956F4 ADRP X0, 0xD96000
	0x033956F8 LDR X0, [X0 + 0x3B8]
	0x033956FC BL 0x1C16D08
	0x03395700 MOV X20, X0
	0x03395704 ADRP X0, 0xD96000
	0x03395708 LDR X0, [X0 + 0x3C0]
	0x0339570C B 0x3395740
	0x03395710 BL 0x1C16F28
	0x03395714 ADRP X0, 0xD66000
	0x03395718 LDR X0, [X0 + 0x578]
	0x0339571C BL 0x1C16D08
	0x03395720 BL 0x1C16F10
	0x03395724 MOV X19, X0
	0x03395728 ADRP X0, 0xD96000
	0x0339572C LDR X0, [X0 + 0x3F0]
	0x03395730 BL 0x1C16D08
	0x03395734 MOV X20, X0
	0x03395738 ADRP X0, 0xD68000
	0x0339573C LDR X0, [X0 + 0xEC8]
	0x03395740 BL 0x1C16D08
	0x03395744 MOV X2, X0
	0x03395748 MOV X0, X19
	0x0339574C MOV X1, X20
	0x03395750 MOV X3, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1049000
	006 Move X20, 0xD61000
	007 Move W8, [X21+115]
	008 Move X20, [X20+1392]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD61000
	015 Move X0, [X0+1392]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+115], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X9, [X0+184]
	026 Move X8, [X19]
	027 Move X9, [X9+16]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Subtract X0, X31, X8
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return X0
	035 Move X0, 0xD5F000
	036 Move X0, [X0+2136]
	037 Call 0x1C17D08
	038 Call 0x1C17F10
	039 Move X19, X0
	040 Move X0, 0xD96000
	041 Move X0, [X0+3824]
	042 Call 0x1C17D08
	043 Move X1, X0
	044 Move X0, X19
	045 Call OverflowException..ctor, X0, X1
	046 Move X0, 0xD97000
	047 Move X0, [X0+920]
	048 Call 0x1C17D08
	049 Move X1, X0
	050 Move X0, X19
	051 Call 0x1C17DEC

Method: System.TimeSpan FromSeconds(System.Double value)

Disassembly:
	0x03395754 BL 0x330E16C
	0x03395758 ADRP X0, 0xD96000
	0x0339575C LDR X0, [X0 + 0x3F8]
	0x03395760 BL 0x1C16D08
	0x03395764 MOV X1, X0
	0x03395768 MOV X0, X19
	0x0339576C BL 0x1C16DEC
	0x03395770 SUB X31, X31, 0x30
	0x03395774 STP X30, X31, [X31 + 0x10]
	0x03395778 STP X20, X19, [X31 + 0x20]
	0x0339577C STR X31, [X31 + 0x8]
	0x03395780 LDR X8, [X0]
	0x03395784 MOV X19, X0
	0x03395788 LDR X9, [X8 + 0x588]
	0x0339578C LDR X1, [X8 + 0x590]
	0x03395790 BLR X9
	0x03395794 TBZ X0, 0x0, 0x33957B8
	0x03395798 ADD X1, X31, 0x18
	0x0339579C ADD X2, X31, 0x8
	0x033957A0 MOV X0, X19
	0x033957A4 BL 0x3395814
	0x033957A8 LDP X30, X0, [X31 + 0x10]
	0x033957AC LDP X20, X19, [X31 + 0x20]
	0x033957B0 ADD X31, X31, 0x30

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x1049000
	006 Move X20, 0xD61000
	007 Move W8, [X19+116]
	008 Move X20, [X20+1392]
	009 Move V8, V0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD61000
	015 Move X0, [X0+1392]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X19+116], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+8]
	027 Move W0, 1000
	028 Move V0, V8
	029 Move V8, [X31+32]
	030 Call TimeSpan.Interval, V0, X0
	031 Return X0

Method: System.TimeSpan Subtract(System.TimeSpan ts)

Disassembly:
	0x033957B4 RET
	0x033957B8 ADRP X0, 0xD66000
	0x033957BC LDR X0, [X0 + 0x578]
	0x033957C0 BL 0x1C16D08
	0x033957C4 BL 0x1C16F10
	0x033957C8 MOV X19, X0
	0x033957CC ADRP X0, 0xD96000
	0x033957D0 LDR X0, [X0 + 0x3B8]
	0x033957D4 BL 0x1C16D08
	0x033957D8 MOV X20, X0
	0x033957DC ADRP X0, 0xD96000
	0x033957E0 LDR X0, [X0 + 0x3C0]
	0x033957E4 BL 0x1C16D08
	0x033957E8 MOV X2, X0
	0x033957EC MOV X0, X19
	0x033957F0 MOV X1, X20
	0x033957F4 MOV X3, X31
	0x033957F8 BL 0x330E16C
	0x033957FC ADRP X0, 0xD96000
	0x03395800 LDR X0, [X0 + 0x400]
	0x03395804 BL 0x1C16D08
	0x03395808 MOV X1, X0
	0x0339580C MOV X0, X19
	0x03395810 BL 0x1C16DEC
	0x03395814 SUB X31, X31, 0x80
	0x03395818 STP X29, X30, [X31 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Subtract X0, X8, X1
	005 Xor X9, X8, X1
	006 Xor X8, X0, X8
	007 And X31, X8, X9
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Return X0
	011 Move X0, 0xD5F000
	012 Move X0, [X0+2136]
	013 Call 0x1C17D08
	014 Call 0x1C17F10
	015 Move X19, X0
	016 Move X0, 0xD97000
	017 Move X0, [X0+856]
	018 Call 0x1C17D08
	019 Move X1, X0
	020 Move X0, X19
	021 Call OverflowException..ctor, X0, X1
	022 Move X0, 0xD97000
	023 Move X0, [X0+928]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1C17DEC

Method: System.TimeSpan FromTicks(System.Int64 value)

Disassembly:
	0x0339581C STP X28, X27, [X31 + 0x30]

ISIL:
	001 Return X0

Method: System.Int64 TimeToTicks(System.Int32 hour, System.Int32 minute, System.Int32 second)

Disassembly:
	0x03394F50 LDR X8, [X0]
	0x03394F54 MOV X22, X0
	0x03394F58 LDR X9, [X8 + 0x808]
	0x03394F5C LDR X1, [X8 + 0x810]
	0x03394F60 BLR X9
	0x03394F64 CBZ X21, 0x339500C
	0x03394F68 LDR X8, [X21]
	0x03394F6C MOV W23, W0
	0x03394F70 MOV X0, X21
	0x03394F74 LDR X9, [X8 + 0x808]
	0x03394F78 LDR X1, [X8 + 0x810]
	0x03394F7C BLR X9
	0x03394F80 CMP W23, W0
	0x03394F84 B.NE 0x33950D4
	0x03394F88 ADD X1, X31, 0x18
	0x03394F8C ADD X2, X31, 0x8
	0x03394F90 MOV X0, X20
	0x03394F94 STR X31, [X31 + 0x18]
	0x03394F98 STR X31, [X31 + 0x8]
	0x03394F9C BL 0x3395814
	0x03394FA0 LDR X0, [X24]
	0x03394FA4 LDR X20, [X31 + 0x8]
	0x03394FA8 LDR W8, [X0 + 0xE0]
	0x03394FAC CBNZ W8, 0x3394FB4
	0x03394FB0 BL 0x1C16DFC
	0x03394FB4 MOV X0, X20
	0x03394FB8 MOV X1, X19
	0x03394FBC BL 0x3395444
	0x03394FC0 B 0x3394FEC
	0x03394FC4 LDR X8, [X20]
	0x03394FC8 MOV X0, X20
	0x03394FCC LDR X9, [X8 + 0x268]
	0x03394FD0 LDR X1, [X8 + 0x270]
	0x03394FD4 BLR X9
	0x03394FD8 ADRP X8, 0xD97000
	0x03394FDC LDR X8, [X8 + 0x3B0]
	0x03394FE0 MOV X1, X19
	0x03394FE4 LDR X2, [X8]

ISIL:
	001 Move W8, 3600
	002 Move W9, 60
	003 Move X10, 0xD5E5
	004 NotImplemented "Instruction SMADDL not yet implemented."
	005 NotImplemented "Instruction MOVK not yet implemented."
	006 NotImplemented "Instruction SMADDL not yet implemented."
	007 NotImplemented "Instruction MOVK not yet implemented."
	008 Add X8, X8, W2
	009 Add X9, X8, X10
	010 Move X10, 0xABCB
	011 NotImplemented "Instruction MOVK not yet implemented."
	012 NotImplemented "Instruction MOVK not yet implemented."
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move W9, 0x9680
	015 NotImplemented "Instruction MOVK not yet implemented."
	016 Multiply X0, X8, X9
	017 Return X0
	018 Move [X31-16], X30
	019 Move [X31-8], X19
	020 Move X0, 0xD68000
	021 Move X0, [X0+1888]
	022 Call 0x1C17D08
	023 Call 0x1C17F10
	024 Move X19, X0
	025 Move X0, 0xD98000
	026 Move X0, [X0+856]
	027 Call 0x1C17D08
	028 Move X2, X0
	029 Move X0, X19
	030 Move X1, X31
	031 Move X3, X31
	032 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	033 Move X0, 0xD98000
	034 Move X0, [X0+864]
	035 Call 0x1C17D08
	036 Move X1, X0
	037 Move X0, X19
	038 Call 0x1C17DEC

Method: System.Boolean TryParse(System.String input, System.IFormatProvider formatProvider, out System.TimeSpan result)

Disassembly:
	0x03395820 STP X26, X25, [X31 + 0x40]
	0x03395824 STP X24, X23, [X31 + 0x50]
	0x03395828 STP X22, X21, [X31 + 0x60]
	0x0339582C STP X20, X19, [X31 + 0x70]
	0x03395830 ADRP X19, 0x1048000
	0x03395834 LDRB W8, [X19 + 0x80]
	0x03395838 MOV X27, X2
	0x0339583C MOV X21, X0
	0x03395840 STR X1, [X31 + 0x10]
	0x03395844 TBNZ X8, 0x0, 0x3395880
	0x03395848 ADRP X0, 0xD88000
	0x0339584C LDR X0, [X0 + 0x908]
	0x03395850 BL 0x1C16CF4
	0x03395854 ADRP X0, 0xD88000
	0x03395858 LDR X0, [X0 + 0x918]
	0x0339585C BL 0x1C16CF4
	0x03395860 ADRP X0, 0xD5E000
	0x03395864 LDR X0, [X0 + 0x9D0]
	0x03395868 BL 0x1C16CF4
	0x0339586C ADRP X0, 0xD5E000
	0x03395870 LDR X0, [X0 + 0xAC8]
	0x03395874 BL 0x1C16CF4
	0x03395878 MOVZ W8, 0x1
	0x0339587C STRB W8, [X19 + 0x80]
	0x03395880 LDR X8, [X21]
	0x03395884 MOVZ W1, 0x38
	0x03395888 MOV X0, X21
	0x0339588C LDR X9, [X8 + 0x688]
	0x03395890 LDR X2, [X8 + 0x690]
	0x03395894 BLR X9
	0x03395898 CBZ X0, 0x3395B6C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X2
	007 Compare X0, 0
	008 JumpIfEqual {34}
	009 Move X22, 0x1045000
	010 Move W8, [X22+1890]
	011 Move X20, X1
	012 Move X21, X0
	013 Compare W8, 0
	014 JumpIfNotEqual {20}
	015 Move X0, 0xD86000
	016 Move X0, [X0+656]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1890], W8
	020 Move X0, X21
	021 Move X1, X31
	022 Call String.GetRawStringData, X0
	023 Move W1, [X21+16]
	024 Move X2, X20
	025 Move X3, X19
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move X4, X31
	031 Move X30, [X31+48]
	032 Call TimeSpanParse.TryParse, X0, X1, X2
	033 Return X0
	034 Move [X19], X31
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 Return X0

Method: System.Boolean TryParseExact(System.String input, System.String format, System.IFormatProvider formatProvider, out System.TimeSpan result)

Disassembly:
	0x0339589C ADRP X8, 0xD5E000
	0x033958A0 LDR X8, [X8 + 0x9D0]
	0x033958A4 MOV X23, X0
	0x033958A8 LDR W1, [X23 + 0x18]
	0x033958AC ADRP X19, 0xD5E000
	0x033958B0 LDR X0, [X8]
	0x033958B4 LDR X19, [X19 + 0xAC8]
	0x033958B8 BL 0x1C16D6C
	0x033958BC LDR X8, [X19]
	0x033958C0 LDR W1, [X23 + 0x18]
	0x033958C4 MOV X21, X0
	0x033958C8 MOV X0, X8
	0x033958CC BL 0x1C16D6C
	0x033958D0 LDR W8, [X23 + 0x18]
	0x033958D4 MOV X22, X0
	0x033958D8 CMP W8, 0x1
	0x033958DC B.LT 0x3395984
	0x033958E0 MOV X19, X31
	0x033958E4 ADD X20, X21, 0x20
	0x033958E8 ADD X25, X22, 0x20
	0x033958EC ADD X26, X23, 0x20
	0x033958F0 CMP W19, W8
	0x033958F4 B.CS 0x3395B68
	0x033958F8 LDR X0, [X26, X19, LSL #3]
	0x033958FC CBZ X0, 0x3395B6C
	0x03395900 LDR X8, [X0]
	0x03395904 LDP X9, X1, [X8 + 0x1A8]
	0x03395908 BLR X9
	0x0339590C CBZ X22, 0x3395B6C
	0x03395910 LDR W8, [X22 + 0x18]
	0x03395914 CMP W19, W8
	0x03395918 B.CS 0x3395B68
	0x0339591C STR X0, [X25, X19, LSL #3]
	0x03395920 LDR W8, [X23 + 0x18]
	0x03395924 CMP W19, W8
	0x03395928 B.CS 0x3395B68
	0x0339592C LDR X0, [X26, X19, LSL #3]
	0x03395930 CBZ X0, 0x3395B6C
	0x03395934 LDR X8, [X0]
	0x03395938 LDR X9, [X8 + 0x308]
	0x0339593C LDR X1, [X8 + 0x310]
	0x03395940 BLR X9
	0x03395944 CBZ X21, 0x3395B6C
	0x03395948 MOV X24, X0
	0x0339594C CBZ X0, 0x3395964
	0x03395950 LDR X8, [X21]
	0x03395954 MOV X0, X24
	0x03395958 LDR X1, [X8 + 0x40]
	0x0339595C BL 0x1C16E00
	0x03395960 CBZ X0, 0x3395B70
	0x03395964 LDR W8, [X21 + 0x18]
	0x03395968 CMP W19, W8
	0x0339596C B.CS 0x3395B68

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, X3
	009 Compare X0, 0
	010 JumpIfEqual {58}
	011 Move X21, X1
	012 Compare X1, 0
	013 JumpIfEqual {58}
	014 Move X24, 0x1045000
	015 Move W8, [X24+1890]
	016 Move X20, X2
	017 Move X22, X0
	018 Compare W8, 0
	019 JumpIfNotEqual {25}
	020 Move X0, 0xD86000
	021 Move X0, [X0+656]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+1890], W8
	025 Move X0, X22
	026 Move X1, X31
	027 Call String.GetRawStringData, X0
	028 Move W8, [X24+1890]
	029 Move W22, [X22+16]
	030 Move X23, X0
	031 Compare W8, 0
	032 JumpIfNotEqual {38}
	033 Move X0, 0xD86000
	034 Move X0, [X0+656]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X24+1890], W8
	038 Move X0, X21
	039 Move X1, X31
	040 Call String.GetRawStringData, X0
	041 Move W3, [X21+16]
	042 Move X2, X0
	043 Move X0, X23
	044 Move X1, X22
	045 Move X4, X20
	046 Move X6, X19
	047 Move X20, [X31+48]
	048 Move X19, [X31+56]
	049 Move X22, [X31+32]
	050 Move X21, [X31+40]
	051 Move X24, [X31+16]
	052 Move X23, [X31+24]
	053 Move W5, W31
	054 Move X7, X31
	055 Move X30, [X31+64]
	056 Call TimeSpanParse.TryParseExact, X0, X1, X2, X3, X4
	057 Return X0
	058 Move [X19], X31
	059 Move X20, [X31+48]
	060 Move X19, [X31+56]
	061 Move X22, [X31+32]
	062 Move X21, [X31+40]
	063 Move X24, [X31+16]
	064 Move X23, [X31+24]
	065 Move W0, W31
	066 Move X30, [X31+64]
	067 Return X0

Method: System.String ToString()

Disassembly:
	0x03395970 STR X24, [X20, X19, LSL #3]
	0x03395974 LDR W8, [X23 + 0x18]
	0x03395978 ADD X19, X19, 0x1
	0x0339597C CMP W19, W8
	0x03395980 B.LT 0x33958F0
	0x03395984 STR X27, [X31 + 0x8]
	0x03395988 ADRP X8, 0xD88000
	0x0339598C LDR X8, [X8 + 0x908]
	0x03395990 LDR X0, [X8]
	0x03395994 BL 0x29286B0
	0x03395998 CBZ X21, 0x3395B6C
	0x0339599C LDR X8, [X21 + 0x18]
	0x033959A0 CMP W8, 0x2
	0x033959A4 B.LT 0x3395B38
	0x033959A8 ADRP X27, 0xD88000
	0x033959AC LDR X27, [X27 + 0x918]
	0x033959B0 MOV X23, X0
	0x033959B4 AND X8, X8, 0x0
	0x033959B8 MOVZ W19, 0x1
	0x033959BC CBZ X22, 0x3395B6C
	0x033959C0 LDR W9, [X22 + 0x18]
	0x033959C4 CMP X19, X9
	0x033959C8 B.CS 0x3395B68
	0x033959CC CMP X19, W8, UXTW
	0x033959D0 B.CS 0x3395B68

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1049000
	006 Move X20, 0xD94000
	007 Move W8, [X21+117]
	008 Move X20, [X20+1328]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD94000
	015 Move X0, [X0+1328]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+117], W8
	019 Move X0, [X20]
	020 Move X19, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X2, X31
	030 Move X3, X31
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Call TimeSpanFormat.Format, X0, X1, X2
	034 Return X0

Method: System.String ToString(System.String format)

Disassembly:
	0x033959D4 ADD X9, X22, X19, 0x3, LSL
	0x033959D8 ADD X10, X21, X19, 0x3, LSL
	0x033959DC LDR X9, [X9 + 0x20]
	0x033959E0 LDR X24, [X10 + 0x20]
	0x033959E4 MOV W20, W31
	0x033959E8 MOV X26, X19
	0x033959EC STR X9, [X31 + 0x18]
	0x033959F0 SUB X29, X26, 0x1
	0x033959F4 CMP W29, W8
	0x033959F8 B.CS 0x3395B68
	0x033959FC ADD X28, X21, X29, 0x3, LSL
	0x03395A00 LDR X25, [X28 + 0x20]!
	0x03395A04 CBZ X23, 0x3395B6C
	0x03395A08 LDR X8, [X23]
	0x03395A0C LDR X1, [X27]
	0x03395A10 LDRH W9, [X8 + 0x12E]
	0x03395A14 CBZ X9, 0x3395A38
	0x03395A18 LDR X10, [X8 + 0xB0]
	0x03395A1C ADD X10, X10, 0x8
	0x03395A20 LDUR X11, [X10 - 0x8]
	0x03395A24 CMP X11, X1
	0x03395A28 B.EQ 0x3395A48
	0x03395A2C SUBS X9, X9, 0x1
	0x03395A30 ADD X10, X10, 0x10
	0x03395A34 B.NE 0x3395A20
	0x03395A38 MOV X0, X23
	0x03395A3C MOV W2, W31
	0x03395A40 BL 0x1C5C788

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1049000
	007 Move X21, 0xD94000
	008 Move W8, [X22+118]
	009 Move X21, [X21+1328]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xD94000
	017 Move X0, [X0+1328]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+118], W8
	021 Move X0, [X21]
	022 Move X20, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X20
	028 Move X1, X19
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X2, X31
	034 Move X3, X31
	035 Move X30, [X31+48]
	036 Call TimeSpanFormat.Format, X0, X1, X2
	037 Return X0

Method: System.String ToString(System.String format, System.IFormatProvider formatProvider)

Disassembly:
	0x03395A44 B 0x3395A54
	0x03395A48 LDRSW X9, [X10]
	0x03395A4C ADD X8, X8, X9, 0x4, LSL
	0x03395A50 ADD X0, X8, 0x138
	0x03395A54 LDP X8, X3, [X0]
	0x03395A58 MOV X0, X23
	0x03395A5C MOV X1, X25
	0x03395A60 MOV X2, X24
	0x03395A64 BLR X8
	0x03395A68 CMP W0, 0x0
	0x03395A6C B.LE 0x3395ADC
	0x03395A70 LDR W8, [X22 + 0x18]
	0x03395A74 CMP W29, W8
	0x03395A78 B.CS 0x3395B68
	0x03395A7C CMP W26, W8
	0x03395A80 B.CS 0x3395B68
	0x03395A84 ADD X8, X22, 0x20
	0x03395A88 LDR X9, [X8, X29, LSL #3]
	0x03395A8C STR X9, [X8, X26, LSL #3]
	0x03395A90 LDR X8, [X21 + 0x18]
	0x03395A94 CMP W29, W8
	0x03395A98 B.CS 0x3395B68
	0x03395A9C LDR X25, [X28]
	0x03395AA0 CBZ X25, 0x3395ABC
	0x03395AA4 LDR X8, [X21]
	0x03395AA8 MOV X0, X25
	0x03395AAC LDR X1, [X8 + 0x40]
	0x03395AB0 BL 0x1C16E00
	0x03395AB4 CBZ X0, 0x3395B70

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x1049000
	008 Move X22, 0xD94000
	009 Move W8, [X23+119]
	010 Move X22, [X22+1328]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xD94000
	019 Move X0, [X0+1328]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+119], W8
	023 Move X0, [X22]
	024 Move X21, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X21
	030 Move X1, X20
	031 Move X2, X19
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X3, X31
	037 Move X30, [X31+48]
	038 Move X23, [X31+56]
	039 Call TimeSpanFormat.Format, X0, X1, X2
	040 Return X0

Method: System.Boolean TryFormat(System.Span`1<System.Char> destination, out System.Int32 charsWritten, System.ReadOnlySpan`1<System.Char> format = null, System.IFormatProvider formatProvider = null)

Disassembly:
	0x03395AB8 LDR X8, [X21 + 0x18]
	0x03395ABC CMP W8, W26
	0x03395AC0 B.LS 0x3395B68
	0x03395AC4 ADD X9, X21, X26, 0x3, LSL
	0x03395AC8 MOVZ W20, 0x1
	0x03395ACC MOV X26, X29
	0x03395AD0 STR X25, [X9 + 0x20]
	0x03395AD4 CBNZ X29, 0x33959F0
	0x03395AD8 B 0x3395AE0
	0x03395ADC TBZ X20, 0x0, 0x3395B28
	0x03395AE0 LDR W8, [X22 + 0x18]
	0x03395AE4 CMP W26, W8
	0x03395AE8 B.CS 0x3395B68
	0x03395AEC LDR X9, [X31 + 0x18]
	0x03395AF0 SXTW X20, W26
	0x03395AF4 ADD X8, X22, X20, 0x3, LSL
	0x03395AF8 STR X9, [X8 + 0x20]
	0x03395AFC CBZ X24, 0x3395B14
	0x03395B00 LDR X8, [X21]
	0x03395B04 MOV X0, X24
	0x03395B08 LDR X1, [X8 + 0x40]
	0x03395B0C BL 0x1C16E00
	0x03395B10 CBZ X0, 0x3395B70
	0x03395B14 LDR W8, [X21 + 0x18]
	0x03395B18 CMP W20, W8
	0x03395B1C B.CS 0x3395B68
	0x03395B20 ADD X8, X21, X20, 0x3, LSL
	0x03395B24 STR X24, [X8 + 0x20]
	0x03395B28 LDR W8, [X21 + 0x18]
	0x03395B2C ADD X19, X19, 0x1
	0x03395B30 CMP X19, W8, SXTW
	0x03395B34 B.LT 0x33959BC
	0x03395B38 LDR X8, [X31 + 0x10]
	0x03395B3C LDP X20, X19, [X31 + 0x70]
	0x03395B40 LDP X24, X23, [X31 + 0x50]
	0x03395B44 LDP X26, X25, [X31 + 0x40]
	0x03395B48 STR X22, [X8]
	0x03395B4C LDR X8, [X31 + 0x8]
	0x03395B50 LDP X28, X27, [X31 + 0x30]
	0x03395B54 LDP X29, X30, [X31 + 0x20]
	0x03395B58 STR X21, [X8]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X27, 0x1049000
	012 Move X26, 0xD94000
	013 Move W8, [X27+120]
	014 Move X26, [X26+1328]
	015 Move X19, X6
	016 Move X20, X5
	017 Move X21, X4
	018 Move X22, X3
	019 Move X23, X2
	020 Move X24, X1
	021 Move X25, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0xD94000
	027 Move X0, [X0+1328]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X27+120], W8
	031 Move X0, [X26]
	032 Move X25, [X25]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X25
	038 Move X1, X24
	039 Move X2, X23
	040 Move X3, X22
	041 Move X4, X21
	042 Move X5, X20
	043 Move X6, X19
	044 Move X20, [X31+64]
	045 Move X19, [X31+72]
	046 Move X22, [X31+48]
	047 Move X21, [X31+56]
	048 Move X24, [X31+32]
	049 Move X23, [X31+40]
	050 Move X26, [X31+16]
	051 Move X25, [X31+24]
	052 Move X7, X31
	053 Move X30, [X31+80]
	054 Move X27, [X31+88]
	055 Call TimeSpanFormat.TryFormat, X0, X1, X2, X3, X4
	056 Return X0

Method: System.TimeSpan op_UnaryNegation(System.TimeSpan t)

Disassembly:
	0x03395B5C LDP X22, X21, [X31 + 0x60]
	0x03395B60 ADD X31, X31, 0x80
	0x03395B64 RET
	0x03395B68 BL 0x1C16F28
	0x03395B6C BL 0x1C16F20
	0x03395B70 BL 0x1C16F44
	0x03395B74 MOV X1, X31
	0x03395B78 BL 0x1C16DEC
	0x03395B7C STP X30, X21, [X31 - 0x20]!
	0x03395B80 STP X20, X19, [X31 + 0x10]
	0x03395B84 MOV W1, W31
	0x03395B88 MOV X19, X0
	0x03395B8C BL 0x1C24CE8
	0x03395B90 MOV W20, W0
	0x03395B94 MOV X0, X19
	0x03395B98 BL 0x1C24D70
	0x03395B9C CMP W0, 0x2
	0x03395BA0 B.LT 0x3395BCC
	0x03395BA4 MOVZ W21, 0x1
	0x03395BA8 MOV X0, X19
	0x03395BAC MOV W1, W21
	0x03395BB0 BL 0x1C24CE8
	0x03395BB4 MUL W20, W0, W20
	0x03395BB8 MOV X0, X19
	0x03395BBC ADD W21, W21, 0x1
	0x03395BC0 BL 0x1C24D70
	0x03395BC4 CMP W21, W0
	0x03395BC8 B.LT 0x3395BA8
	0x03395BCC MOV W0, W20
	0x03395BD0 LDP X20, X19, [X31 + 0x10]
	0x03395BD4 LDP X30, X21, [X31], #0x20
	0x03395BD8 RET
	0x03395BDC STR X30, [X31 - 0x30]!
	0x03395BE0 STP X22, X21, [X31 + 0x10]
	0x03395BE4 STP X20, X19, [X31 + 0x20]
	0x03395BE8 MOV W20, W1
	0x03395BEC MOV X19, X0
	0x03395BF0 BL 0x1C24D70
	0x03395BF4 CMP W0, 0x1
	0x03395BF8 B.NE 0x3395CC8
	0x03395BFC MOV X0, X19
	0x03395C00 MOV W1, W31
	0x03395C04 BL 0x1C24D2C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1049000
	006 Move X20, 0xD61000
	007 Move W8, [X21+121]
	008 Move X20, [X20+1392]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD61000
	015 Move X0, [X0+1392]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+121], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move X8, [X8+16]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Subtract X0, X31, X19
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return X0
	034 Move X0, 0xD5F000
	035 Move X0, [X0+2136]
	036 Call 0x1C17D08
	037 Call 0x1C17F10
	038 Move X19, X0
	039 Move X0, 0xD96000
	040 Move X0, [X0+3824]
	041 Call 0x1C17D08
	042 Move X1, X0
	043 Move X0, X19
	044 Call OverflowException..ctor, X0, X1
	045 Move X0, 0xD97000
	046 Move X0, [X0+936]
	047 Call 0x1C17D08
	048 Move X1, X0
	049 Move X0, X19
	050 Call 0x1C17DEC

Method: System.TimeSpan op_Subtraction(System.TimeSpan t1, System.TimeSpan t2)

Disassembly:
	0x03395C08 CMP W0, W20
	0x03395C0C B.GT 0x3395C90
	0x03395C10 MOV W21, W0
	0x03395C14 MOV X0, X19
	0x03395C18 MOV W1, W31
	0x03395C1C BL 0x1C24D2C
	0x03395C20 MOV W22, W0
	0x03395C24 MOV X0, X19
	0x03395C28 MOV W1, W31
	0x03395C2C BL 0x1C24CE8
	0x03395C30 ADD W8, W22, W0
	0x03395C34 SUB W8, W8, 0x1
	0x03395C38 CMP W8, W20
	0x03395C3C B.LT 0x3395C90
	0x03395C40 MOV X0, X19
	0x03395C44 MOV X1, X31
	0x03395C48 BL 0x33BE520
	0x03395C4C CBZ X0, 0x3395CC4
	0x03395C50 LDR X8, [X0]
	0x03395C54 LDR X9, [X8 + 0x428]
	0x03395C58 LDR X1, [X8 + 0x430]
	0x03395C5C BLR X9
	0x03395C60 CBZ X0, 0x3395CC4
	0x03395C64 LDR X8, [X0]
	0x03395C68 LDR X9, [X8 + 0x388]
	0x03395C6C LDR X1, [X8 + 0x390]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x1049000
	007 Move [X31+8], X0
	008 Move X21, 0xD61000
	009 Move W8, [X20+122]
	010 Move X21, [X21+1392]
	011 Move X19, X1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xD61000
	017 Move X0, [X0+1392]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+122], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X31, 8
	027 Move X1, X19
	028 Call TimeSpan.Subtract, X0, X1
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X30, [X31+16]
	032 Move X21, [X31+24]
	033 Add X31, X31, 48
	034 Return X0

Method: System.TimeSpan op_Addition(System.TimeSpan t1, System.TimeSpan t2)

Disassembly:
	0x03395C70 BLR X9
	0x03395C74 TBNZ X0, 0x0, 0x3395CFC
	0x03395C78 SUB W1, W20, W21
	0x03395C7C MOV X0, X19
	0x03395C80 LDP X20, X19, [X31 + 0x20]
	0x03395C84 LDP X22, X21, [X31 + 0x10]
	0x03395C88 LDR X30, [X31], #0x30
	0x03395C8C B 0x1C24EAC
	0x03395C90 ADRP X0, 0xD68000
	0x03395C94 LDR X0, [X0 + 0xF78]
	0x03395C98 BL 0x1C16D08
	0x03395C9C BL 0x1C16F10
	0x03395CA0 MOV X19, X0
	0x03395CA4 ADRP X0, 0xD96000
	0x03395CA8 LDR X0, [X0 + 0x408]
	0x03395CAC BL 0x1C16D08
	0x03395CB0 MOV X1, X0
	0x03395CB4 MOV X0, X19
	0x03395CB8 MOV X2, X31
	0x03395CBC BL 0x3379B6C
	0x03395CC0 B 0x3395D2C
	0x03395CC4 BL 0x1C16F20
	0x03395CC8 ADRP X0, 0xD66000
	0x03395CCC LDR X0, [X0 + 0x578]
	0x03395CD0 BL 0x1C16D08
	0x03395CD4 BL 0x1C16F10

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x1049000
	007 Move [X31+8], X0
	008 Move X21, 0xD61000
	009 Move W8, [X20+123]
	010 Move X21, [X21+1392]
	011 Move X19, X1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xD61000
	017 Move X0, [X0+1392]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+123], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X31, 8
	027 Move X1, X19
	028 Call TimeSpan.Add, X0, X1
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X30, [X31+16]
	032 Move X21, [X31+24]
	033 Add X31, X31, 48
	034 Return X0

Method: System.Boolean op_Equality(System.TimeSpan t1, System.TimeSpan t2)

Disassembly:
	0x03395CD8 MOV X19, X0
	0x03395CDC ADRP X0, 0xD87000
	0x03395CE0 LDR X0, [X0 + 0x308]

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 Return X0

Method: System.Boolean op_Inequality(System.TimeSpan t1, System.TimeSpan t2)

Disassembly:
	0x03395CE4 BL 0x1C16D08
	0x03395CE8 MOV X1, X0
	0x03395CEC MOV X0, X19

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 Return X0

Method: System.Boolean op_LessThan(System.TimeSpan t1, System.TimeSpan t2)

Disassembly:
	0x03395CF0 MOV X2, X31
	0x03395CF4 BL 0x3314A68
	0x03395CF8 B 0x3395D2C

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 Return X0

Method: System.Boolean op_LessThanOrEqual(System.TimeSpan t1, System.TimeSpan t2)

Disassembly:
	0x03395CFC ADRP X0, 0xD5E000
	0x03395D00 LDR X0, [X0 + 0xB40]
	0x03395D04 BL 0x1C16D08

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 Return X0

Method: System.Boolean op_GreaterThan(System.TimeSpan t1, System.TimeSpan t2)

Disassembly:
	0x03395D08 BL 0x1C16F10
	0x03395D0C MOV X19, X0
	0x03395D10 ADRP X0, 0xD96000

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 Return X0

Method: System.Boolean op_GreaterThanOrEqual(System.TimeSpan t1, System.TimeSpan t2)

Disassembly:
	0x03395D14 LDR X0, [X0 + 0x410]
	0x03395D18 BL 0x1C16D08
	0x03395D1C MOV X1, X0

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 Return X0

Method: System.Void .cctor()

Disassembly:
	0x03395D20 MOV X0, X19
	0x03395D24 MOV X2, X31
	0x03395D28 BL 0x3379A44
	0x03395D2C ADRP X0, 0xD96000
	0x03395D30 LDR X0, [X0 + 0x418]
	0x03395D34 BL 0x1C16D08
	0x03395D38 MOV X1, X0
	0x03395D3C MOV X0, X19
	0x03395D40 BL 0x1C16DEC
	0x03395D44 STP X30, X23, [X31 - 0x30]!
	0x03395D48 STP X22, X21, [X31 + 0x10]
	0x03395D4C STP X20, X19, [X31 + 0x20]
	0x03395D50 ADRP X20, 0x1048000
	0x03395D54 LDRB W8, [X20 + 0x83]
	0x03395D58 MOV X19, X0
	0x03395D5C TBNZ X8, 0x0, 0x3395D8C
	0x03395D60 ADRP X0, 0xD90000
	0x03395D64 LDR X0, [X0 + 0xC08]
	0x03395D68 BL 0x1C16CF4
	0x03395D6C ADRP X0, 0xD93000
	0x03395D70 LDR X0, [X0 + 0x2D0]
	0x03395D74 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x1049000
	005 Move X20, 0xD61000
	006 Move W8, [X19+124]
	007 Move X20, [X20+1392]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xD61000
	013 Move X0, [X0+1392]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+124], W8
	017 Move X8, [X20]
	018 Move X9, -42639360
	019 Move V0, [X9+100]
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X8, [X8+184]
	023 Move X9, 0x80000000
	024 Move [X8], V0
	025 Move [X8+16], X9
	026 Move X30, [X31+32]
	027 Return 

