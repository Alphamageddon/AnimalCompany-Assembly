Type: System.Resources.ResourceSet

Method: System.Void .ctor()

Disassembly:
	0x032CCCAC BL 0x3314A68
	0x032CCCB0 ADRP X0, 0xE59000
	0x032CCCB4 LDR X0, [X0 + 0xC20]
	0x032CCCB8 BL 0x1C16D08
	0x032CCCBC MOV X1, X0
	0x032CCCC0 MOV X0, X19
	0x032CCCC4 BL 0x1C16DEC

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call Object..ctor, X0
	006 Move X0, X19
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]

Method: System.Void .ctor(System.Boolean junk)

Disassembly:
	0x032C6E1C CMP W25, W24
	0x032C6E20 B.EQ 0x32C6E50

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void CommonInit()

Disassembly:
	0x032CCCC8 STR X30, [X31 - 0x30]!
	0x032CCCCC STP X22, X21, [X31 + 0x10]
	0x032CCCD0 STP X20, X19, [X31 + 0x20]
	0x032CCCD4 LDR X8, [X2 + 0x8]
	0x032CCCD8 STP X1, X2, [X0 + 0x20]
	0x032CCCDC MOV X19, X0
	0x032CCCE0 MOV X20, X2
	0x032CCCE4 STR X8, [X0 + 0x10]
	0x032CCCE8 LDRB W22, [X2 + 0x52]
	0x032CCCEC STR X0, [X0 + 0x40]
	0x032CCCF0 MOV X0, X2
	0x032CCCF4 MOV X21, X1
	0x032CCCF8 BL 0x1C16D84
	0x032CCCFC TBZ X0, 0x0, 0x32CCD14
	0x032CCD00 CMP W22, 0x2
	0x032CCD04 B.NE 0x32CCD50
	0x032CCD08 ADRP X8, 0xFFFFFFFFFE8EA000
	0x032CCD0C ADD X8, X8, 0x50C
	0x032CCD10 B 0x32CCD94
	0x032CCD14 CMP W22, 0x1
	0x032CCD18 B.NE 0x32CCD4C
	0x032CCD1C LDRB W8, [X19 + 0x70]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1111000
	006 Move X21, 0xE58000
	007 Move W8, [X20+2266]
	008 Move X21, [X21+3512]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE58000
	015 Move X0, [X0+3512]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2266], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call Hashtable..ctor, X0
	024 Move [X19+24], X20
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return 

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x032C7178 MOV X0, X19
	0x032C717C MOV W1, W20
	0x032C7180 BL 0x32C9C14
	0x032C7184 ADRP X8, 0xE2C000
	0x032C7188 LDR X8, [X8 + 0x6C0]
	0x032C718C ADRP X9, 0xE54000
	0x032C7190 MOV X21, X0
	0x032C7194 LDR X8, [X8]
	0x032C7198 LDR X9, [X9 + 0xB60]
	0x032C719C LDR W10, [X8 + 0xE0]
	0x032C71A0 LDR X22, [X9]
	0x032C71A4 CBNZ W10, 0x32C71B0
	0x032C71A8 MOV X0, X8
	0x032C71AC BL 0x1C16DFC
	0x032C71B0 MOV X0, X22
	0x032C71B4 MOV X1, X31
	0x032C71B8 BL 0x338C698
	0x032C71BC MOV X1, X0
	0x032C71C0 MOV X0, X21
	0x032C71C4 MOV X2, X31
	0x032C71C8 BL 0x3395F0C
	0x032C71CC TBZ X0, 0x0, 0x32C725C
	0x032C71D0 ADRP X0, 0xE2C000
	0x032C71D4 LDR X0, [X0 + 0x9D0]
	0x032C71D8 BL 0x1C16D08
	0x032C71DC MOVZ W1, 0x1
	0x032C71E0 BL 0x1C16D6C
	0x032C71E4 MOV X21, X0
	0x032C71E8 MOV X0, X19
	0x032C71EC MOV W1, W20
	0x032C71F0 BL 0x32C9C14
	0x032C71F4 MOV X19, X0
	0x032C71F8 BL 0x19903C0
	0x032C71FC LDR X8, [X19]
	0x032C7200 MOV X0, X19
	0x032C7204 LDR X9, [X8 + 0x2E8]
	0x032C7208 LDR X1, [X8 + 0x2F0]
	0x032C720C BLR X9
	0x032C7210 MOV X19, X0
	0x032C7214 MOV X0, X21
	0x032C7218 BL 0x19903C0
	0x032C721C MOV X0, X21
	0x032C7220 MOV X1, X19
	0x032C7224 BL 0x19980B4
	0x032C7228 MOV X0, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1116000
	006 Move W8, [X21+2267]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xE5F000
	014 Move X0, [X0+2488]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2267], W8
	018 Move TEMP, X20
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfNotEqual {49}
	022 Move X20, [X19+16]
	023 Move [X19+16], X31
	024 Compare X20, 0
	025 JumpIfEqual {49}
	026 Move X10, 0xE5F000
	027 Move X8, [X20]
	028 Move X10, [X10+2488]
	029 NotImplemented "Instruction LDRH not yet implemented."
	030 Move X1, [X10]
	031 Compare X9, 0
	032 JumpIfEqual {39}
	033 Move X10, [X8+176]
	034 Add X10, X10, 8
	035 NotImplemented "Instruction LDUR not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Subtract X9, X9, 1
	038 Add X10, X10, 16
	039 Move X0, X20
	040 Move W2, W31
	041 Call 0x1C5D788
	042 NotImplemented "Instruction LDRSW not yet implemented."
	043 Add X8, X8, X9
	044 Add X0, X8, 312
	045 Move X8, [X0]
	046 Move X1, [X0+8]
	047 Move X0, X20
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Move [X19+16], X31
	050 Move [X19+24], X31
	051 Move [X19+32], X31
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X30, [X31+32]
	055 Move X21, [X31+40]
	056 Return 

Method: System.Void Dispose()

Disassembly:
	0x032CCD20 CBZ W8, 0x32CCD64
	0x032CCD24 MOV X0, X20
	0x032CCD28 BL 0x1C16D7C
	0x032CCD2C MOV W21, W0

ISIL:
	001 Move X8, [X0]
	002 Move W1, 1
	003 Move X3, [X8+408]
	004 Move X2, [X8+416]
	005 CallNoReturn X3

Method: System.Collections.IDictionaryEnumerator GetEnumerator()

Disassembly:
	0x032CCD30 MOV X0, X20

ISIL:
No ISIL was generated
Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x032CCDB0 RET

ISIL:
	001 Call ResourceSet.GetEnumeratorHelper, X0
	002 Return X0

Method: System.Collections.IDictionaryEnumerator GetEnumeratorHelper()

Disassembly:
	0x032CCD34 BL 0x1C17238
	0x032CCD38 TBZ X21, 0x0, 0x32CCD70
	0x032CCD3C TBZ X0, 0x0, 0x32CCD80
	0x032CCD40 ADRP X8, 0xFFFFFFFFFE8EA000
	0x032CCD44 ADD X8, X8, 0x628
	0x032CCD48 B 0x32CCD94
	0x032CCD4C CBZ X21, 0x32CCDB4
	0x032CCD50 LDR X8, [X19 + 0x10]
	0x032CCD54 LDR X9, [X19 + 0x20]
	0x032CCD58 STR X8, [X19 + 0x18]
	0x032CCD5C STR X9, [X19 + 0x40]
	0x032CCD60 B 0x32CCD98
	0x032CCD64 ADRP X8, 0xFFFFFFFFFE8EA000
	0x032CCD68 ADD X8, X8, 0x4E8
	0x032CCD6C B 0x32CCD94
	0x032CCD70 TBZ X0, 0x0, 0x32CCD8C
	0x032CCD74 ADRP X8, 0xFFFFFFFFFE8EA000
	0x032CCD78 ADD X8, X8, 0x550
	0x032CCD7C B 0x32CCD94
	0x032CCD80 ADRP X8, 0xFFFFFFFFFE8EA000
	0x032CCD84 ADD X8, X8, 0x5DC
	0x032CCD88 B 0x32CCD94
	0x032CCD8C ADRP X8, 0xFFFFFFFFFE8EA000
	0x032CCD90 ADD X8, X8, 0x520
	0x032CCD94 STR X8, [X19 + 0x18]
	0x032CCD98 ADRP X8, 0xFFFFFFFFFE8EA000
	0x032CCD9C ADD X8, X8, 0x490
	0x032CCDA0 STR X8, [X19 + 0x38]
	0x032CCDA4 LDP X20, X19, [X31 + 0x20]
	0x032CCDA8 LDP X22, X21, [X31 + 0x10]
	0x032CCDAC LDR X30, [X31], #0x30

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, [X0+24]
	005 Compare X0, 0
	006 JumpIfEqual {14}
	007 Move X8, [X0]
	008 Move X20, [X31+16]
	009 Move X19, [X31+24]
	010 Move X2, [X8+760]
	011 Move X1, [X8+768]
	012 Move X30, [X31+32]
	013 CallNoReturn X2
	014 Move X0, 0xE5A000
	015 Move X0, [X0+2496]
	016 Call 0x1C17D08
	017 Move X1, X31
	018 Call Environment.GetResourceString, X0
	019 Move X19, X0
	020 Move X0, 0xE51000
	021 Move X0, [X0+1208]
	022 Call 0x1C17D08
	023 Call 0x1C17F10
	024 Move X1, X31
	025 Move X2, X19
	026 Move X3, X31
	027 Move X20, X0
	028 Call ObjectDisposedException..ctor, X0, X1, X2
	029 Move X0, 0xE5A000
	030 Move X0, [X0+2992]
	031 Call 0x1C17D08
	032 Move X1, X0
	033 Move X0, X20
	034 Call 0x1C17DEC

Method: System.String GetString(System.String name)

Disassembly:
	0x032CCDB4 ADRP X1, 0xFFFFFFFFFD84F000
	0x032CCDB8 ADD X1, X1, 0xEE3
	0x032CCDBC MOV X0, X31
	0x032CCDC0 BL 0x1C16F3C
	0x032CCDC4 MOV X1, X31
	0x032CCDC8 BL 0x1C16DEC
	0x032CCDCC LDR X8, [X0 + 0x40]
	0x032CCDD0 LDR X4, [X0 + 0x18]
	0x032CCDD4 LDR X3, [X0 + 0x28]
	0x032CCDD8 MOV X0, X8
	0x032CCDDC BR X4
	0x032CCDE0 MOV X1, X31
	0x032CCDE4 B 0x33BDD8C
	0x032CCDE8 MOVZ W0, 0x4
	0x032CCDEC RET
	0x032CCDF0 STR X30, [X31 - 0x10]!
	0x032CCDF4 LDR X8, [X0]
	0x032CCDF8 LDR X9, [X8 + 0x248]
	0x032CCDFC LDR X1, [X8 + 0x250]
	0x032CCE00 BLR X9
	0x032CCE04 UBFM W0, W0, 0x5, 0x5
	0x032CCE08 LDR X30, [X31], #0x10
	0x032CCE0C RET
	0x032CCE10 STR X30, [X31 - 0x10]!
	0x032CCE14 LDR X8, [X0]
	0x032CCE18 LDR X9, [X8 + 0x248]
	0x032CCE1C LDR X1, [X8 + 0x250]
	0x032CCE20 BLR X9
	0x032CCE24 UBFM W0, W0, 0x6, 0x6
	0x032CCE28 LDR X30, [X31], #0x10
	0x032CCE2C RET
	0x032CCE30 STR X30, [X31 - 0x10]!
	0x032CCE34 LDR X8, [X0]
	0x032CCE38 LDR X9, [X8 + 0x248]
	0x032CCE3C LDR X1, [X8 + 0x250]
	0x032CCE40 BLR X9
	0x032CCE44 UBFM W0, W0, 0x7, 0x7
	0x032CCE48 LDR X30, [X31], #0x10
	0x032CCE4C RET
	0x032CCE50 STR X30, [X31 - 0x10]!
	0x032CCE54 LDR X8, [X0]
	0x032CCE58 LDR X9, [X8 + 0x248]
	0x032CCE5C LDR X1, [X8 + 0x250]
	0x032CCE60 BLR X9
	0x032CCE64 UBFM W0, W0, 0x4, 0x4
	0x032CCE68 LDR X30, [X31], #0x10
	0x032CCE6C RET
	0x032CCE70 STR X30, [X31 - 0x10]!
	0x032CCE74 LDR X8, [X0]
	0x032CCE78 LDR X9, [X8 + 0x248]
	0x032CCE7C LDR X1, [X8 + 0x250]
	0x032CCE80 BLR X9
	0x032CCE84 AND W8, W0, 0x7
	0x032CCE88 CMP W8, 0x6
	0x032CCE8C CSET W0, EQ
	0x032CCE90 LDR X30, [X31], #0x10
	0x032CCE94 RET
	0x032CCE98 MOV X2, X31
	0x032CCE9C B 0x33CB4A4
	0x032CCEA0 MOV X1, X31
	0x032CCEA4 B 0x33CB4E0
	0x032CCEA8 CMP X0, X1
	0x032CCEAC B.EQ 0x32CCEC8
	0x032CCEB0 MOV W8, W31
	0x032CCEB4 CBZ X0, 0x32CCECC
	0x032CCEB8 CBZ X1, 0x32CCECC
	0x032CCEBC LDR X8, [X0]
	0x032CCEC0 LDP X3, X2, [X8 + 0x138]
	0x032CCEC4 BR X3
	0x032CCEC8 MOVZ W8, 0x1
	0x032CCECC MOV W0, W8
	0x032CCED0 RET
	0x032CCED4 CMP X0, X1
	0x032CCED8 B.EQ 0x32CCF04
	0x032CCEDC MOVZ W8, 0x1
	0x032CCEE0 CBZ X0, 0x32CCF08
	0x032CCEE4 CBZ X1, 0x32CCF08
	0x032CCEE8 STR X30, [X31 - 0x10]!
	0x032CCEEC LDR X8, [X0]
	0x032CCEF0 LDP X9, X2, [X8 + 0x138]
	0x032CCEF4 BLR X9
	0x032CCEF8 EOR W8, W0, 0x1
	0x032CCEFC LDR X30, [X31], #0x10
	0x032CCF00 B 0x32CCF08
	0x032CCF04 MOV W8, W31
	0x032CCF08 AND W0, W8, 0x1
	0x032CCF0C RET
	0x032CCF10 STP X30, X23, [X31 - 0x30]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1111000
	006 Move W8, [X21+2268]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xE2A000
	014 Move X0, [X0+632]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2268], W8
	018 Move X0, X20
	019 Move X1, X19
	020 Call ResourceSet.GetObjectInternal, X0, X1
	021 Compare X0, 0
	022 JumpIfEqual {28}
	023 Move X8, 0xE2A000
	024 Move X8, [X8+632]
	025 Move X1, [X8]
	026 Move X8, [X0]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Return X0
	033 Call 0x1C181E0
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X20, X0
	036 Move X0, X20
	037 Call 0x3EB2AD0
	038 Move X20, X0
	039 Move X0, 0xE30000
	040 Move X0, [X0+3080]
	041 Call 0x1C17D08
	042 Move X8, [X20]
	043 Move X1, [X8]
	044 Call 0x1C18270
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {85}
	049 Call 0x3EB2AE0
	050 Move X0, 0xE28000
	051 Move X0, [X0+2512]
	052 Call 0x1C17D08
	053 Move W1, 1
	054 Call 0x1C17D6C
	055 Move X20, X0
	056 Call 0x19913C0
	057 Move X0, X20
	058 Move X1, X19
	059 Call 0x19990B4
	060 Move X0, X20
	061 Move X1, X31
	062 Move X2, X19
	063 Call 0x1994444
	064 Move X0, 0xE5A000
	065 Move X0, [X0+3000]
	066 Call 0x1C17D08
	067 Move X1, X20
	068 Move X2, X31
	069 Call Environment.GetResourceString, X0, X1
	070 Move X19, X0
	071 Move X0, 0xE28000
	072 Move X0, [X0+1456]
	073 Call 0x1C17D08
	074 Call 0x1C17F10
	075 Move X1, X19
	076 Move X2, X31
	077 Move X20, X0
	078 Call InvalidOperationException..ctor, X0, X1
	079 Move X0, 0xE5A000
	080 Move X0, [X0+3008]
	081 Call 0x1C17D08
	082 Move X1, X0
	083 Move X0, X20
	084 Call 0x1C17DEC
	085 Move W0, 8
	086 Call 0x3EB2AF0
	087 Move X8, [X20]
	088 Move [X0], X8
	089 Move X1, 0xBE9000
	090 Add X1, X1, 3672
	091 Move X2, X31
	092 Call 0x3EB2B00
	093 Move X20, X0
	094 Call 0x3EB2AE0
	095 Move X0, X20
	096 Call 0x1D2D690
	097 Call 0x1991590

Method: System.String GetString(System.String name, System.Boolean ignoreCase)

Disassembly:
	0x032CCFDC MOV X1, X0
	0x032CCFE0 MOV X0, X19
	0x032CCFE4 BL 0x1C16DEC
	0x032CCFE8 STP X30, X19, [X31 - 0x10]!
	0x032CCFEC ADRP X0, 0xE27000
	0x032CCFF0 LDR X0, [X0 + 0xB40]
	0x032CCFF4 BL 0x1C16D08
	0x032CCFF8 BL 0x1C16F10
	0x032CCFFC MOV X19, X0
	0x032CD000 ADRP X0, 0xE58000
	0x032CD004 LDR X0, [X0 + 0xC28]
	0x032CD008 BL 0x1C16D08
	0x032CD00C MOV X1, X0
	0x032CD010 MOV X0, X19
	0x032CD014 MOV X2, X31
	0x032CD018 BL 0x3379A44
	0x032CD01C ADRP X0, 0xE58000
	0x032CD020 LDR X0, [X0 + 0xC38]
	0x032CD024 BL 0x1C16D08
	0x032CD028 MOV X1, X0
	0x032CD02C MOV X0, X19
	0x032CD030 BL 0x1C16DEC
	0x032CD034 B 0x1C84174
	0x032CD038 STP X30, X19, [X31 - 0x10]!
	0x032CD03C MOV X1, X31
	0x032CD040 MOV X2, X31
	0x032CD044 MOV X19, X0
	0x032CD048 BL 0x33BE5B0
	0x032CD04C TBNZ X0, 0x0, 0x32CD060
	0x032CD050 MOV X0, X19
	0x032CD054 MOV X1, X31
	0x032CD058 LDP X30, X19, [X31], #0x10
	0x032CD05C B 0x1C84174
	0x032CD060 ADRP X0, 0xE2E000
	0x032CD064 LDR X0, [X0 + 0x578]
	0x032CD068 BL 0x1C16D08
	0x032CD06C BL 0x1C16F10
	0x032CD070 MOV X19, X0
	0x032CD074 ADRP X0, 0xE58000
	0x032CD078 LDR X0, [X0 + 0xC10]
	0x032CD07C BL 0x1C16D08
	0x032CD080 MOV X1, X0
	0x032CD084 MOV X0, X19
	0x032CD088 MOV X2, X31
	0x032CD08C BL 0x3314A68
	0x032CD090 ADRP X0, 0xE58000
	0x032CD094 LDR X0, [X0 + 0xC40]
	0x032CD098 BL 0x1C16D08
	0x032CD09C MOV X1, X0
	0x032CD0A0 MOV X0, X19
	0x032CD0A4 BL 0x1C16DEC
	0x032CD0A8 STR X30, [X31 - 0x20]!
	0x032CD0AC STP X20, X19, [X31 + 0x10]
	0x032CD0B0 MOV X19, X1
	0x032CD0B4 MOV X1, X31
	0x032CD0B8 MOV X2, X31
	0x032CD0BC MOV X20, X0
	0x032CD0C0 BL 0x33BE5B0
	0x032CD0C4 TBNZ X0, 0x0, 0x32CD0E4
	0x032CD0C8 MOV X0, X20
	0x032CD0CC MOV X1, X19
	0x032CD0D0 BL 0x1C84174
	0x032CD0D4 CBZ X0, 0x32CD104
	0x032CD0D8 LDP X20, X19, [X31 + 0x10]
	0x032CD0DC LDR X30, [X31], #0x20
	0x032CD0E0 RET
	0x032CD0E4 ADRP X0, 0xE2E000
	0x032CD0E8 LDR X0, [X0 + 0x578]
	0x032CD0EC BL 0x1C16D08
	0x032CD0F0 BL 0x1C16F10
	0x032CD0F4 MOV X19, X0
	0x032CD0F8 ADRP X0, 0xE58000
	0x032CD0FC LDR X0, [X0 + 0xC10]
	0x032CD100 B 0x32CD120
	0x032CD104 ADRP X0, 0xE2E000
	0x032CD108 LDR X0, [X0 + 0x578]
	0x032CD10C BL 0x1C16D08
	0x032CD110 BL 0x1C16F10
	0x032CD114 MOV X19, X0
	0x032CD118 ADRP X0, 0xE58000
	0x032CD11C LDR X0, [X0 + 0xC48]
	0x032CD120 BL 0x1C16D08
	0x032CD124 MOV X1, X0
	0x032CD128 MOV X0, X19
	0x032CD12C MOV X2, X31
	0x032CD130 BL 0x3314A68
	0x032CD134 ADRP X0, 0xE58000
	0x032CD138 LDR X0, [X0 + 0xC50]
	0x032CD13C BL 0x1C16D08
	0x032CD140 MOV X1, X0
	0x032CD144 MOV X0, X19
	0x032CD148 BL 0x1C16DEC
	0x032CD14C STP X30, X19, [X31 - 0x10]!
	0x032CD150 ADRP X0, 0xE54000
	0x032CD154 LDR X0, [X0 + 0xBE8]
	0x032CD158 BL 0x1C16D08
	0x032CD15C BL 0x1C16F10
	0x032CD160 MOV X19, X0
	0x032CD164 ADRP X0, 0xE58000
	0x032CD168 LDR X0, [X0 + 0xC58]
	0x032CD16C BL 0x1C16D08
	0x032CD170 MOV X1, X0
	0x032CD174 MOV X0, X19
	0x032CD178 MOV X2, X31
	0x032CD17C BL 0x338C8D8
	0x032CD180 ADRP X0, 0xE58000
	0x032CD184 LDR X0, [X0 + 0xC60]
	0x032CD188 BL 0x1C16D08
	0x032CD18C MOV X1, X0
	0x032CD190 MOV X0, X19
	0x032CD194 BL 0x1C16DEC
	0x032CD198 B 0x1C4C018
	0x032CD19C STP X30, X23, [X31 - 0x30]!
	0x032CD1A0 STP X22, X21, [X31 + 0x10]
	0x032CD1A4 STP X20, X19, [X31 + 0x20]
	0x032CD1A8 ADRP X19, 0x110F000
	0x032CD1AC LDRB W8, [X19 + 0x8E5]
	0x032CD1B0 MOV X20, X0
	0x032CD1B4 TBNZ X8, 0x0, 0x32CD1E4
	0x032CD1B8 ADRP X0, 0xE58000
	0x032CD1BC LDR X0, [X0 + 0xC68]
	0x032CD1C0 BL 0x1C16CF4
	0x032CD1C4 ADRP X0, 0xE58000
	0x032CD1C8 LDR X0, [X0 + 0xC70]
	0x032CD1CC BL 0x1C16CF4
	0x032CD1D0 ADRP X0, 0xE26000
	0x032CD1D4 LDR X0, [X0 + 0x9D0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1111000
	007 Move W8, [X22+2269]
	008 Move W20, W2
	009 Move X19, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xE29000
	016 Move X0, [X0+632]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2269], W8
	020 Move X22, 0xE29000
	021 Move X22, [X22+632]
	022 Move X0, X21
	023 Move X1, X19
	024 Call ResourceSet.GetObjectInternal, X0, X1
	025 Compare X0, 0
	026 JumpIfEqual {31}
	027 Move X1, [X22]
	028 Move X8, [X0]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Call 0x1C181E0
	031 Move TEMP, X20
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {44}
	035 Move X0, X21
	036 Move X1, X19
	037 Call ResourceSet.GetCaseInsensitiveObjectInternal, X0, X1
	038 Compare X0, 0
	039 JumpIfEqual {45}
	040 Move X1, [X22]
	041 Move X8, [X0]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Call 0x1C181E0
	044 Move X0, X31
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X30, [X31+48]
	050 Return X0
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X20, X0
	053 Move X0, X20
	054 Call 0x3EB2AD0
	055 Move X20, X0
	056 Move X0, 0xE2F000
	057 Move X0, [X0+3080]
	058 Call 0x1C17D08
	059 Move X8, [X20]
	060 Move X1, [X8]
	061 Call 0x1C18270
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {91}
	066 Move W0, 8
	067 Call 0x3EB2AF0
	068 Move X8, [X20]
	069 Move [X0], X8
	070 Move X1, 0xBE8000
	071 Add X1, X1, 3672
	072 Move X2, X31
	073 Call 0x3EB2B00
	074 Move X20, X0
	075 Call 0x3EB2AE0
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X20, X0
	078 Move X0, X20
	079 Call 0x3EB2AD0
	080 Move X20, X0
	081 Move X0, 0xE2F000
	082 Move X0, [X0+3080]
	083 Call 0x1C17D08
	084 Move X8, [X20]
	085 Move X1, [X8]
	086 Call 0x1C18270
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfNotEqual {127}
	091 Call 0x3EB2AE0
	092 Move X0, 0xE27000
	093 Move X0, [X0+2512]
	094 Call 0x1C17D08
	095 Move W1, 1
	096 Call 0x1C17D6C
	097 Move X20, X0
	098 Call 0x19913C0
	099 Move X0, X20
	100 Move X1, X19
	101 Call 0x19990B4
	102 Move X0, X20
	103 Move X1, X31
	104 Move X2, X19
	105 Call 0x1994444
	106 Move X0, 0xE59000
	107 Move X0, [X0+3000]
	108 Call 0x1C17D08
	109 Move X1, X20
	110 Move X2, X31
	111 Call Environment.GetResourceString, X0, X1
	112 Move X19, X0
	113 Move X0, 0xE27000
	114 Move X0, [X0+1456]
	115 Call 0x1C17D08
	116 Call 0x1C17F10
	117 Move X1, X19
	118 Move X2, X31
	119 Move X20, X0
	120 Call InvalidOperationException..ctor, X0, X1
	121 Move X0, 0xE59000
	122 Move X0, [X0+3024]
	123 Call 0x1C17D08
	124 Move X1, X0
	125 Move X0, X20
	126 Call 0x1C17DEC
	127 Move W0, 8
	128 Call 0x3EB2AF0
	129 Move X8, [X20]
	130 Move [X0], X8
	131 Move X1, 0xBE8000
	132 Add X1, X1, 3672
	133 Move X2, X31
	134 Call 0x3EB2B00
	135 Move X20, X0
	136 Call 0x3EB2AE0
	137 Move X0, X20
	138 Call 0x1D2D690
	139 Call 0x1991590

Method: System.Object GetObject(System.String name)

Disassembly:
	0x032CD4A4 CBZ X0, 0x32CD924

ISIL:
	001 Call ResourceSet.GetObjectInternal, X0, X1
	002 Return X0

Method: System.Object GetObject(System.String name, System.Boolean ignoreCase)

Disassembly:
	0x032CD4A8 MOV X1, X31
	0x032CD4AC UBFM W19, W19, 0x7, 0x7
	0x032CD4B0 BL 0x3397170
	0x032CD4B4 AND W8, W0, 0x1
	0x032CD4B8 MOV X0, X21
	0x032CD4BC ADD W19, W19, W8
	0x032CD4C0 BL 0x1C4C018
	0x032CD4C4 MOV X20, X0
	0x032CD4C8 CBZ X0, 0x32CD4D4
	0x032CD4CC ADD W19, W19, 0x1
	0x032CD4D0 B 0x32CD4D8
	0x032CD4D4 CBZ W19, 0x32CD8FC
	0x032CD4D8 ADRP X8, 0xE58000
	0x032CD4DC LDR X8, [X8 + 0xC78]
	0x032CD4E0 ADRP X28, 0xE26000
	0x032CD4E4 ADRP X23, 0xE58000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W21, W2
	006 Move X19, X1
	007 Move X20, X0
	008 Call ResourceSet.GetObjectInternal, X0, X1
	009 Compare X0, 0
	010 JumpIfNotEqual {23}
	011 Move TEMP, X21
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfNotEqual {23}
	015 Move X0, X20
	016 Move X1, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+32]
	020 Move X21, [X31+40]
	021 Call ResourceSet.GetCaseInsensitiveObjectInternal, X0, X1
	022 Return X0
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0

Method: System.Object GetObjectInternal(System.String name)

Disassembly:
	0x032CCF14 STP X22, X21, [X31 + 0x10]
	0x032CCF18 STP X20, X19, [X31 + 0x20]
	0x032CCF1C ADRP X22, 0x1110000
	0x032CCF20 ADRP X23, 0xE27000
	0x032CCF24 LDRB W8, [X22 + 0x8E4]
	0x032CCF28 LDR X23, [X23 + 0x6C0]
	0x032CCF2C MOV X19, X2
	0x032CCF30 MOV X20, X1
	0x032CCF34 MOV X21, X0
	0x032CCF38 TBNZ X8, 0x0, 0x32CCF50
	0x032CCF3C ADRP X0, 0xE27000
	0x032CCF40 LDR X0, [X0 + 0x6C0]
	0x032CCF44 BL 0x1C16CF4
	0x032CCF48 MOVZ W8, 0x1
	0x032CCF4C STRB W8, [X22 + 0x8E4]
	0x032CCF50 LDR X0, [X23]
	0x032CCF54 LDR W8, [X0 + 0xE0]
	0x032CCF58 CBNZ W8, 0x32CCF60
	0x032CCF5C BL 0x1C16DFC
	0x032CCF60 MOV X0, X31
	0x032CCF64 BL 0x33981F8
	0x032CCF68 LDR X8, [X21]
	0x032CCF6C MOV X4, X0
	0x032CCF70 MOV X0, X21
	0x032CCF74 MOV X1, X20
	0x032CCF78 LDR X7, [X8 + 0x2E8]
	0x032CCF7C LDR X6, [X8 + 0x2F0]
	0x032CCF80 MOV X2, X19
	0x032CCF84 LDP X20, X19, [X31 + 0x20]
	0x032CCF88 LDP X22, X21, [X31 + 0x10]
	0x032CCF8C MOV W3, W31
	0x032CCF90 MOV X5, X31
	0x032CCF94 LDP X30, X23, [X31], #0x30
	0x032CCF98 BR X7
	0x032CCF9C STP X30, X19, [X31 - 0x10]!
	0x032CCFA0 ADRP X0, 0xE27000
	0x032CCFA4 LDR X0, [X0 + 0xB40]
	0x032CCFA8 BL 0x1C16D08
	0x032CCFAC BL 0x1C16F10
	0x032CCFB0 MOV X19, X0
	0x032CCFB4 ADRP X0, 0xE59000
	0x032CCFB8 LDR X0, [X0 + 0xC28]
	0x032CCFBC BL 0x1C16D08
	0x032CCFC0 MOV X1, X0
	0x032CCFC4 MOV X0, X19
	0x032CCFC8 MOV X2, X31
	0x032CCFCC BL 0x3379A44
	0x032CCFD0 ADRP X0, 0xE59000
	0x032CCFD4 LDR X0, [X0 + 0xC30]
	0x032CCFD8 BL 0x1C16D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {16}
	006 Move X0, [X0+24]
	007 Compare X0, 0
	008 JumpIfEqual {34}
	009 Move X8, [X0]
	010 Move X20, [X31+16]
	011 Move X19, [X31+24]
	012 Move X3, [X8+728]
	013 Move X2, [X8+736]
	014 Move X30, [X31+32]
	015 CallNoReturn X3
	016 Move X0, 0xE2D000
	017 Move X0, [X0+1320]
	018 Call 0x1C17D08
	019 Call 0x1C17F10
	020 Move X19, X0
	021 Move X0, 0xE30000
	022 Move X0, [X0+1416]
	023 Call 0x1C17D08
	024 Move X1, X0
	025 Move X0, X19
	026 Move X2, X31
	027 Call ArgumentNullException..ctor, X0, X1
	028 Move X0, 0xE5A000
	029 Move X0, [X0+3016]
	030 Call 0x1C17D08
	031 Move X1, X0
	032 Move X0, X19
	033 Call 0x1C17DEC
	034 Move X0, 0xE5A000
	035 Move X0, [X0+2496]
	036 Call 0x1C17D08
	037 Move X1, X31
	038 Call Environment.GetResourceString, X0
	039 Move X19, X0
	040 Move X0, 0xE51000
	041 Move X0, [X0+1208]
	042 Call 0x1C17D08
	043 Call 0x1C17F10
	044 Move X1, X31
	045 Move X2, X19
	046 Move X3, X31
	047 Move X20, X0
	048 Call ObjectDisposedException..ctor, X0, X1, X2
	049 Move X0, 0xE5A000
	050 Move X0, [X0+3016]
	051 Call 0x1C17D08
	052 Move X1, X0
	053 Move X0, X20
	054 Call 0x1C17DEC

Method: System.Object GetCaseInsensitiveObjectInternal(System.String name)

Disassembly:
	0x032CD1D8 BL 0x1C16CF4
	0x032CD1DC MOVZ W8, 0x1
	0x032CD1E0 STRB W8, [X19 + 0x8E5]
	0x032CD1E4 LDR X8, [X20]
	0x032CD1E8 MOV X0, X20
	0x032CD1EC LDR X9, [X8 + 0x248]
	0x032CD1F0 LDR X1, [X8 + 0x250]
	0x032CD1F4 BLR X9
	0x032CD1F8 LDR X8, [X20]
	0x032CD1FC MOV W19, W0
	0x032CD200 MOV X0, X20
	0x032CD204 LDP X9, X1, [X8 + 0x1B8]
	0x032CD208 BLR X9
	0x032CD20C CBZ X0, 0x32CD398
	0x032CD210 MOV X1, X31
	0x032CD214 UBFM W19, W19, 0x7, 0x7
	0x032CD218 BL 0x3397170
	0x032CD21C AND W8, W0, 0x1
	0x032CD220 MOV X0, X20
	0x032CD224 ADD W21, W19, W8
	0x032CD228 BL 0x1C4C018
	0x032CD22C MOV X19, X0
	0x032CD230 CBZ X0, 0x32CD23C
	0x032CD234 ADD W21, W21, 0x1
	0x032CD238 B 0x32CD240
	0x032CD23C CBZ W21, 0x32CD380
	0x032CD240 ADRP X8, 0xE26000
	0x032CD244 LDR X8, [X8 + 0x9D0]
	0x032CD248 MOV W1, W21
	0x032CD24C LDR X0, [X8]
	0x032CD250 BL 0x1C16D6C
	0x032CD254 LDR X8, [X20]
	0x032CD258 MOV X21, X0
	0x032CD25C MOV X0, X20
	0x032CD260 LDR X9, [X8 + 0x248]
	0x032CD264 LDR X1, [X8 + 0x250]
	0x032CD268 BLR X9
	0x032CD26C TBNZ X0, 0x7, 0x32CD278
	0x032CD270 MOV W23, W31
	0x032CD274 B 0x32CD2C0
	0x032CD278 ADRP X8, 0xE58000
	0x032CD27C LDR X8, [X8 + 0xC70]
	0x032CD280 LDR X0, [X8]
	0x032CD284 BL 0x1C16F10
	0x032CD288 MOV X1, X31
	0x032CD28C MOV X22, X0
	0x032CD290 BL 0x3380280
	0x032CD294 CBZ X21, 0x32CD398
	0x032CD298 CBZ X22, 0x32CD2B0
	0x032CD29C LDR X8, [X21]
	0x032CD2A0 MOV X0, X22
	0x032CD2A4 LDR X1, [X8 + 0x40]
	0x032CD2A8 BL 0x1C16E00
	0x032CD2AC CBZ X0, 0x32CD3A0
	0x032CD2B0 LDR W8, [X21 + 0x18]
	0x032CD2B4 CBZ W8, 0x32CD39C
	0x032CD2B8 MOVZ W23, 0x1
	0x032CD2BC STR X22, [X21 + 0x20]
	0x032CD2C0 LDR X8, [X20]
	0x032CD2C4 MOV X0, X20
	0x032CD2C8 LDP X9, X1, [X8 + 0x1B8]
	0x032CD2CC BLR X9
	0x032CD2D0 CBZ X0, 0x32CD398
	0x032CD2D4 MOV X1, X31
	0x032CD2D8 BL 0x3397170
	0x032CD2DC TBZ X0, 0x0, 0x32CD34C
	0x032CD2E0 LDR X8, [X20]
	0x032CD2E4 MOV X0, X20
	0x032CD2E8 LDR X9, [X8 + 0x318]
	0x032CD2EC LDR X1, [X8 + 0x320]
	0x032CD2F0 BLR X9
	0x032CD2F4 ADRP X8, 0xE58000
	0x032CD2F8 LDR X8, [X8 + 0xC68]
	0x032CD2FC MOV W22, W0
	0x032CD300 LDR X8, [X8]
	0x032CD304 MOV X0, X8
	0x032CD308 BL 0x1C16F10
	0x032CD30C MOV X1, X31
	0x032CD310 MOV X20, X0
	0x032CD314 BL 0x33A51F0
	0x032CD318 STR W22, [X20 + 0x10]
	0x032CD31C CBZ X21, 0x32CD398
	0x032CD320 LDR X8, [X21]
	0x032CD324 MOV X0, X20
	0x032CD328 LDR X1, [X8 + 0x40]
	0x032CD32C BL 0x1C16E00
	0x032CD330 CBZ X0, 0x32CD3A0
	0x032CD334 LDR W8, [X21 + 0x18]
	0x032CD338 CMP W23, W8
	0x032CD33C B.CS 0x32CD39C
	0x032CD340 ADD X8, X21, W23, 0x3, UXTW
	0x032CD344 ADD W23, W23, 0x1
	0x032CD348 STR X20, [X8 + 0x20]
	0x032CD34C CBZ X19, 0x32CD384
	0x032CD350 CBZ X21, 0x32CD398
	0x032CD354 LDR X8, [X21]
	0x032CD358 MOV X0, X19
	0x032CD35C LDR X1, [X8 + 0x40]
	0x032CD360 BL 0x1C16E00
	0x032CD364 CBZ X0, 0x32CD3A0
	0x032CD368 LDR W8, [X21 + 0x18]
	0x032CD36C CMP W23, W8
	0x032CD370 B.CS 0x32CD39C
	0x032CD374 ADD X8, X21, W23, 0x3, UXTW
	0x032CD378 STR X19, [X8 + 0x20]
	0x032CD37C B 0x32CD384
	0x032CD380 MOV X21, X31
	0x032CD384 MOV X0, X21
	0x032CD388 LDP X20, X19, [X31 + 0x20]
	0x032CD38C LDP X22, X21, [X31 + 0x10]
	0x032CD390 LDP X30, X23, [X31], #0x30
	0x032CD394 RET
	0x032CD398 BL 0x1C16F20
	0x032CD39C BL 0x1C16F28
	0x032CD3A0 BL 0x1C16F44
	0x032CD3A4 MOV X1, X31
	0x032CD3A8 BL 0x1C16DEC
	0x032CD3AC SUB X31, X31, 0x80
	0x032CD3B0 STP X29, X30, [X31 + 0x20]
	0x032CD3B4 STP X28, X27, [X31 + 0x30]
	0x032CD3B8 STP X26, X25, [X31 + 0x40]
	0x032CD3BC STP X24, X23, [X31 + 0x50]
	0x032CD3C0 STP X22, X21, [X31 + 0x60]
	0x032CD3C4 STP X20, X19, [X31 + 0x70]
	0x032CD3C8 ADRP X19, 0x110F000
	0x032CD3CC LDRB W8, [X19 + 0x8E6]
	0x032CD3D0 MOV X21, X0
	0x032CD3D4 TBNZ X8, 0x0, 0x32CD47C
	0x032CD3D8 ADRP X0, 0xE58000
	0x032CD3DC LDR X0, [X0 + 0xC78]
	0x032CD3E0 BL 0x1C16CF4
	0x032CD3E4 ADRP X0, 0xE58000
	0x032CD3E8 LDR X0, [X0 + 0xC80]
	0x032CD3EC BL 0x1C16CF4
	0x032CD3F0 ADRP X0, 0xE58000
	0x032CD3F4 LDR X0, [X0 + 0xC88]
	0x032CD3F8 BL 0x1C16CF4
	0x032CD3FC ADRP X0, 0xE58000
	0x032CD400 LDR X0, [X0 + 0xC90]
	0x032CD404 BL 0x1C16CF4
	0x032CD408 ADRP X0, 0xE58000
	0x032CD40C LDR X0, [X0 + 0xC98]
	0x032CD410 BL 0x1C16CF4
	0x032CD414 ADRP X0, 0xE4D000
	0x032CD418 LDR X0, [X0 + 0xD80]
	0x032CD41C BL 0x1C16CF4
	0x032CD420 ADRP X0, 0xE26000
	0x032CD424 LDR X0, [X0 + 0x758]
	0x032CD428 BL 0x1C16CF4
	0x032CD42C ADRP X0, 0xE58000
	0x032CD430 LDR X0, [X0 + 0xCA0]
	0x032CD434 BL 0x1C16CF4
	0x032CD438 ADRP X0, 0xE58000
	0x032CD43C LDR X0, [X0 + 0xCA8]
	0x032CD440 BL 0x1C16CF4
	0x032CD444 ADRP X0, 0xE2E000
	0x032CD448 LDR X0, [X0 + 0xC60]
	0x032CD44C BL 0x1C16CF4
	0x032CD450 ADRP X0, 0xE26000
	0x032CD454 LDR X0, [X0 + 0x6C0]
	0x032CD458 BL 0x1C16CF4
	0x032CD45C ADRP X0, 0xE58000
	0x032CD460 LDR X0, [X0 + 0xCB0]
	0x032CD464 BL 0x1C16CF4
	0x032CD468 ADRP X0, 0xE58000
	0x032CD46C LDR X0, [X0 + 0xCB8]
	0x032CD470 BL 0x1C16CF4
	0x032CD474 MOVZ W8, 0x1
	0x032CD478 STRB W8, [X19 + 0x8E6]
	0x032CD47C LDR X8, [X21]
	0x032CD480 MOV X0, X21
	0x032CD484 LDR X9, [X8 + 0x248]
	0x032CD488 LDR X1, [X8 + 0x250]
	0x032CD48C BLR X9
	0x032CD490 LDR X8, [X21]
	0x032CD494 MOV W19, W0
	0x032CD498 MOV X0, X21
	0x032CD49C LDP X9, X1, [X8 + 0x1B8]
	0x032CD4A0 BLR X9

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x1110000
	010 Move W8, [X21+2270]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0xE57000
	018 Move X0, [X0+3512]
	019 Call 0x1C17CF4
	020 Move X0, 0xE54000
	021 Move X0, [X0+3968]
	022 Call 0x1C17CF4
	023 Move X0, 0xE27000
	024 Move X0, [X0+3608]
	025 Call 0x1C17CF4
	026 Move X0, 0xE34000
	027 Move X0, [X0+752]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+2270], W8
	031 Move X22, [X20+24]
	032 Compare X22, 0
	033 JumpIfEqual {177}
	034 Move X21, [X20+32]
	035 Compare X21, 0
	036 JumpIfNotEqual {162}
	037 Move X21, 0xE34000
	038 Move X21, [X21+752]
	039 Move X0, [X21]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X23, 0x1110000
	045 Move W8, [X23+2342]
	046 Compare W8, 0
	047 JumpIfNotEqual {53}
	048 Move X0, 0xE34000
	049 Move X0, [X0+752]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X23+2342], W8
	053 Move X0, [X21]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {59}
	057 Call 0x1C17DFC
	058 Move X0, [X21]
	059 Move X9, 0xE57000
	060 Move X8, [X0+184]
	061 Move X9, [X9+3512]
	062 Move X23, [X8+24]
	063 Move X0, [X9]
	064 Call 0x1C17F10
	065 Move X1, X23
	066 Move X2, X31
	067 Move X21, X0
	068 Call Hashtable..ctor, X0, X1
	069 Move X8, [X22]
	070 Move X0, X22
	071 Move X9, [X8+760]
	072 Move X1, [X8+768]
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Compare X0, 0
	075 JumpIfEqual {176}
	076 Move X24, 0xE27000
	077 Move X25, 0xE54000
	078 Move X24, [X24+3608]
	079 Move X25, [X25+3968]
	080 Move X22, X0
	081 Move X8, [X22]
	082 Move X1, [X24]
	083 NotImplemented "Instruction LDRH not yet implemented."
	084 Compare X9, 0
	085 JumpIfEqual {92}
	086 Move X10, [X8+176]
	087 Add X10, X10, 8
	088 NotImplemented "Instruction LDUR not yet implemented."
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Subtract X9, X9, 1
	091 Add X10, X10, 16
	092 Move X0, X22
	093 Move W2, W31
	094 Call 0x1C5D788
	095 NotImplemented "Instruction LDRSW not yet implemented."
	096 Add X8, X8, X9
	097 Add X0, X8, 312
	098 Move X8, [X0]
	099 Move X1, [X0+8]
	100 Move X0, X22
	101 NotImplemented "Instruction BLR not yet implemented."
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfNotEqual {159}
	106 Move X8, [X22]
	107 Move X1, [X25]
	108 NotImplemented "Instruction LDRH not yet implemented."
	109 Compare X9, 0
	110 JumpIfEqual {117}
	111 Move X10, [X8+176]
	112 Add X10, X10, 8
	113 NotImplemented "Instruction LDUR not yet implemented."
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Subtract X9, X9, 1
	116 Add X10, X10, 16
	117 Move X0, X22
	118 Move W2, W31
	119 Call 0x1C5D788
	120 NotImplemented "Instruction LDRSW not yet implemented."
	121 Add X8, X8, X9
	122 Add X0, X8, 312
	123 Move X8, [X0]
	124 Move X1, [X0+8]
	125 Move X0, X22
	126 NotImplemented "Instruction BLR not yet implemented."
	127 Move X8, [X22]
	128 Move X1, [X25]
	129 Move X23, X0
	130 NotImplemented "Instruction LDRH not yet implemented."
	131 Compare X9, 0
	132 JumpIfEqual {139}
	133 Move X10, [X8+176]
	134 Add X10, X10, 8
	135 NotImplemented "Instruction LDUR not yet implemented."
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Subtract X9, X9, 1
	138 Add X10, X10, 16
	139 Move W2, 1
	140 Move X0, X22
	141 Call 0x1C5D788
	142 Move W9, [X10]
	143 Add W9, W9, 1
	144 Add X8, X8, W9
	145 Add X0, X8, 312
	146 Move X8, [X0]
	147 Move X1, [X0+8]
	148 Move X0, X22
	149 NotImplemented "Instruction BLR not yet implemented."
	150 Compare X21, 0
	151 JumpIfEqual {176}
	152 Move X8, [X21]
	153 Move X2, X0
	154 Move X0, X21
	155 Move X1, X23
	156 Move X9, [X8+632]
	157 Move X3, [X8+640]
	158 NotImplemented "Instruction BLR not yet implemented."
	159 Move [X20+32], X21
	160 Compare X21, 0
	161 JumpIfEqual {176}
	162 Move X8, [X21]
	163 Move X0, X21
	164 Move X1, X19
	165 Move X20, [X31+48]
	166 Move X19, [X31+56]
	167 Move X3, [X8+728]
	168 Move X2, [X8+736]
	169 Move X22, [X31+32]
	170 Move X21, [X31+40]
	171 Move X24, [X31+16]
	172 Move X23, [X31+24]
	173 Move X30, [X31+64]
	174 Move X25, [X31+72]
	175 CallNoReturn X3
	176 Call 0x1C17F20
	177 Move X0, 0xE59000
	178 Move X0, [X0+2496]
	179 Call 0x1C17D08
	180 Move X1, X31
	181 Call Environment.GetResourceString, X0
	182 Move X19, X0
	183 Move X0, 0xE50000
	184 Move X0, [X0+1208]
	185 Call 0x1C17D08
	186 Call 0x1C17F10
	187 Move X1, X31
	188 Move X2, X19
	189 Move X3, X31
	190 Move X20, X0
	191 Call ObjectDisposedException..ctor, X0, X1, X2
	192 Move X0, 0xE59000
	193 Move X0, [X0+3032]
	194 Call 0x1C17D08
	195 Move X1, X0
	196 Move X0, X20
	197 Call 0x1C17DEC

