Type: System.Resources.ManifestBasedResourceGroveler

Method: System.Void .ctor(System.Resources.ResourceManager/ResourceManagerMediator mediator)

Disassembly:
	0x032C8C94 ADRP X0, 0xE58000
	0x032C8C98 LDR X0, [X0 + 0xC08]
	0x032C8C9C BL 0x1C16D08
	0x032C8CA0 BL 0x1C16F10
	0x032C8CA4 MOV X1, X19
	0x032C8CA8 MOV X2, X31
	0x032C8CAC MOV X20, X0
	0x032C8CB0 BL 0x33674A0
	0x032C8CB4 ADRP X0, 0xE5D000
	0x032C8CB8 LDR X0, [X0 + 0xAE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], X19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Globalization.CultureInfo GetNeutralResourcesLanguage(System.Reflection.Assembly a, ref System.Resources.UltimateResourceFallbackLocation fallbackLocation)

Disassembly:
	0x032C8CBC BL 0x1C16D08
	0x032C8CC0 MOV X1, X0
	0x032C8CC4 MOV X0, X20
	0x032C8CC8 BL 0x1C16DEC
	0x032C8CCC BL 0x1C16F20
	0x032C8CD0 BL 0x1C16F28
	0x032C8CD4 B 0x32C8CD8
	0x032C8CD8 STR X30, [X31 - 0x20]!
	0x032C8CDC STP X20, X19, [X31 + 0x10]
	0x032C8CE0 ADRP X20, 0x1114000
	0x032C8CE4 LDRB W8, [X20 + 0x8CB]
	0x032C8CE8 MOV X19, X0
	0x032C8CEC TBNZ X8, 0x0, 0x32C8D04
	0x032C8CF0 ADRP X0, 0xE5D000
	0x032C8CF4 LDR X0, [X0 + 0xA18]
	0x032C8CF8 BL 0x1C16CF4
	0x032C8CFC MOVZ W8, 0x1
	0x032C8D00 STRB W8, [X20 + 0x8CB]
	0x032C8D04 LDR X8, [X19 + 0x18]
	0x032C8D08 CBZ X8, 0x32C8D48
	0x032C8D0C ADRP X8, 0xE5D000
	0x032C8D10 LDR X8, [X8 + 0xA18]
	0x032C8D14 LDR X0, [X8]
	0x032C8D18 BL 0x1C16F10
	0x032C8D1C MOV X1, X31
	0x032C8D20 MOV X20, X0
	0x032C8D24 BL 0x33BDD8C
	0x032C8D28 ADRP X8, 0xFFFFFFFFFD826000
	0x032C8D2C LDR V0, [X8 + 0x390]
	0x032C8D30 STR X19, [X20 + 0x10]
	0x032C8D34 MOV X0, X20
	0x032C8D38 STUR D0, [X20 + 0x1C]
	0x032C8D3C LDP X20, X19, [X31 + 0x10]
	0x032C8D40 LDR X30, [X31], #0x20
	0x032C8D44 RET
	0x032C8D48 ADRP X0, 0xE5D000
	0x032C8D4C LDR X0, [X0 + 0xA20]
	0x032C8D50 BL 0x1C16D08
	0x032C8D54 MOV X1, X31
	0x032C8D58 BL 0x33BDD84
	0x032C8D5C MOV X19, X0
	0x032C8D60 ADRP X0, 0xE2B000
	0x032C8D64 LDR X0, [X0 + 0x5B0]
	0x032C8D68 BL 0x1C16D08
	0x032C8D6C BL 0x1C16F10
	0x032C8D70 MOV X1, X19
	0x032C8D74 MOV X2, X31
	0x032C8D78 MOV X20, X0
	0x032C8D7C BL 0x337DF1C
	0x032C8D80 ADRP X0, 0xE5D000
	0x032C8D84 LDR X0, [X0 + 0xAE8]
	0x032C8D88 BL 0x1C16D08
	0x032C8D8C MOV X1, X0
	0x032C8D90 MOV X0, X20
	0x032C8D94 BL 0x1C16DEC
	0x032C8D98 STR X30, [X31 - 0x20]!
	0x032C8D9C STP X20, X19, [X31 + 0x10]
	0x032C8DA0 MOV X19, X1
	0x032C8DA4 MOV X1, X31
	0x032C8DA8 MOV X20, X0
	0x032C8DAC BL 0x33BDD8C
	0x032C8DB0 ADRP X8, 0xFFFFFFFFFD826000
	0x032C8DB4 LDR V0, [X8 + 0x390]
	0x032C8DB8 STR X19, [X20 + 0x10]
	0x032C8DBC STUR D0, [X20 + 0x1C]
	0x032C8DC0 LDP X20, X19, [X31 + 0x10]
	0x032C8DC4 LDR X30, [X31], #0x20
	0x032C8DC8 RET
	0x032C8DCC STR X30, [X31 - 0x40]!
	0x032C8DD0 STP X24, X23, [X31 + 0x10]
	0x032C8DD4 STP X22, X21, [X31 + 0x20]
	0x032C8DD8 STP X20, X19, [X31 + 0x30]
	0x032C8DDC ADRP X20, 0x1114000
	0x032C8DE0 LDRB W8, [X20 + 0x8CE]
	0x032C8DE4 MOV X19, X1
	0x032C8DE8 MOV X21, X0
	0x032C8DEC TBNZ X8, 0x0, 0x32C8E10
	0x032C8DF0 ADRP X0, 0xE2B000
	0x032C8DF4 LDR X0, [X0 + 0x618]
	0x032C8DF8 BL 0x1C16CF4
	0x032C8DFC ADRP X0, 0xE5D000
	0x032C8E00 LDR X0, [X0 + 0x998]
	0x032C8E04 BL 0x1C16CF4
	0x032C8E08 MOVZ W8, 0x1
	0x032C8E0C STRB W8, [X20 + 0x8CE]
	0x032C8E10 LDR X0, [X21 + 0x10]
	0x032C8E14 CBZ X0, 0x32C8F64
	0x032C8E18 MOV X1, X31
	0x032C8E1C BL 0x32F5EE4
	0x032C8E20 TBNZ X0, 0x1F, 0x32C8FB8
	0x032C8E24 ADRP X24, 0xE5D000
	0x032C8E28 MOV W20, W0
	0x032C8E2C LDR X0, [X21 + 0x70]
	0x032C8E30 LDR X24, [X24 + 0x998]
	0x032C8E34 CBZ X0, 0x32C8EC8
	0x032C8E38 MOV X1, X31
	0x032C8E3C BL 0x32EAA34
	0x032C8E40 LDR X8, [X21 + 0x70]
	0x032C8E44 CBZ X8, 0x32C8F64
	0x032C8E48 LDR X9, [X8]
	0x032C8E4C MOV X22, X0
	0x032C8E50 MOV W1, W20
	0x032C8E54 MOVZ W2, 0x1
	0x032C8E58 LDR X10, [X9 + 0x338]
	0x032C8E5C LDR X3, [X9 + 0x340]
	0x032C8E60 MOV X0, X8
	0x032C8E64 BLR X10
	0x032C8E68 LDR X0, [X21 + 0x70]
	0x032C8E6C CBZ X0, 0x32C8F64
	0x032C8E70 LDR X8, [X0]
	0x032C8E74 LDP X9, X1, [X8 + 0x1F8]
	0x032C8E78 BLR X9
	0x032C8E7C LDR X8, [X21 + 0x70]
	0x032C8E80 CBZ X8, 0x32C8F64
	0x032C8E84 LDR X9, [X8]
	0x032C8E88 MOV X21, X0
	0x032C8E8C MOV X0, X8
	0x032C8E90 LDP X10, X1, [X9 + 0x1E8]
	0x032C8E94 BLR X10
	0x032C8E98 CMP X21, X0
	0x032C8E9C CSEL X21, X31, X22, GT
	0x032C8EA0 B.GT 0x32C8FC4
	0x032C8EA4 LDR X0, [X24]
	0x032C8EA8 LDR W8, [X0 + 0xE0]
	0x032C8EAC CBNZ W8, 0x32C8EB4
	0x032C8EB0 BL 0x1C16DFC
	0x032C8EB4 MOV X0, X21
	0x032C8EB8 MOV W1, W20
	0x032C8EBC MOV X2, X19
	0x032C8EC0 BL 0x32C7B78
	0x032C8EC4 B 0x32C8F48
	0x032C8EC8 ADRP X8, 0xE2B000
	0x032C8ECC LDR X8, [X8 + 0x618]
	0x032C8ED0 MOV W1, W20
	0x032C8ED4 LDR X0, [X8]
	0x032C8ED8 BL 0x1C16D6C
	0x032C8EDC CMP W20, 0x1
	0x032C8EE0 MOV X22, X0
	0x032C8EE4 B.LT 0x32C8F20
	0x032C8EE8 MOV W23, W20
	0x032C8EEC LDR X0, [X21 + 0x10]
	0x032C8EF0 CBZ X0, 0x32C8F64
	0x032C8EF4 LDR X8, [X0]
	0x032C8EF8 SUB W2, W20, W23
	0x032C8EFC MOV X1, X22
	0x032C8F00 MOV W3, W23
	0x032C8F04 LDR X9, [X8 + 0x2B8]
	0x032C8F08 LDR X4, [X8 + 0x2C0]
	0x032C8F0C BLR X9
	0x032C8F10 CBZ W0, 0x32C8F68
	0x032C8F14 SUB W23, W23, W0
	0x032C8F18 CMP W23, 0x0
	0x032C8F1C B.GT 0x32C8EEC
	0x032C8F20 LDR X0, [X24]
	0x032C8F24 LDR W8, [X0 + 0xE0]
	0x032C8F28 CBNZ W8, 0x32C8F30
	0x032C8F2C BL 0x1C16DFC
	0x032C8F30 CMP W20, 0x0
	0x032C8F34 CINC W8, W20, LT
	0x032C8F38 SBFM W1, W8, 0x1, 0x1F
	0x032C8F3C MOV X0, X22
	0x032C8F40 MOV X2, X19
	0x032C8F44 BL 0x32C7B04
	0x032C8F48 LDP X20, X19, [X31 + 0x30]
	0x032C8F4C LDP X22, X21, [X31 + 0x20]
	0x032C8F50 LDP X24, X23, [X31 + 0x10]
	0x032C8F54 CMP W0, 0x0
	0x032C8F58 CSET W0, EQ
	0x032C8F5C LDR X30, [X31], #0x40
	0x032C8F60 RET
	0x032C8F64 BL 0x1C16F20
	0x032C8F68 ADRP X0, 0xE5D000
	0x032C8F6C LDR X0, [X0 + 0xAF0]
	0x032C8F70 BL 0x1C16D08
	0x032C8F74 MOV X1, X31
	0x032C8F78 BL 0x33BDD84
	0x032C8F7C MOV X19, X0
	0x032C8F80 ADRP X0, 0xE5D000
	0x032C8F84 LDR X0, [X0 + 0x4C8]
	0x032C8F88 BL 0x1C16D08
	0x032C8F8C BL 0x1C16F10
	0x032C8F90 MOV X1, X19
	0x032C8F94 MOV X2, X31
	0x032C8F98 MOV X20, X0
	0x032C8F9C BL 0x33167DC
	0x032C8FA0 ADRP X0, 0xE5D000
	0x032C8FA4 LDR X0, [X0 + 0xAF8]
	0x032C8FA8 BL 0x1C16D08
	0x032C8FAC MOV X1, X0
	0x032C8FB0 MOV X0, X20
	0x032C8FB4 BL 0x1C16DEC
	0x032C8FB8 ADRP X0, 0xE5D000
	0x032C8FBC LDR X0, [X0 + 0xAC8]
	0x032C8FC0 B 0x32C8F70
	0x032C8FC4 ADRP X0, 0xE5D000
	0x032C8FC8 LDR X0, [X0 + 0xB00]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X21, 0x1115000
	008 Move W8, [X21+2241]
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xE2E000
	016 Move X0, [X0+3144]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+2241], W8
	020 Move X21, 0xE2E000
	021 Move X21, [X21+3144]
	022 Add X1, X31, 24
	023 Add X2, X31, 12
	024 Move X0, X19
	025 Move [X31+24], X31
	026 NotImplemented "Instruction STRH not yet implemented."
	027 Call ManifestBasedResourceGroveler.GetNeutralResourcesLanguageAttribute, X0, X1, X2
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {44}
	032 NotImplemented "Instruction LDRH not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move [X20], W22
	035 Move X0, [X21]
	036 Move X20, [X31+24]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, X20
	042 Move X1, X31
	043 Call CultureInfo.GetCultureInfo, X0
	044 Move [X20], W31
	045 Move X0, [X21]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, X31
	051 Call CultureInfo.get_InvariantCulture
	052 Move X20, [X31+48]
	053 Move X19, [X31+56]
	054 Move X22, [X31+32]
	055 Move X21, [X31+40]
	056 Move X30, [X31+16]
	057 Add X31, X31, 64
	058 Return X0
	059 Move X0, 0xE2C000
	060 Move X0, [X0+2512]
	061 Call 0x1C17D08
	062 Move W1, 1
	063 Call 0x1C17D6C
	064 Move X19, X0
	065 NotImplemented "Instruction STRH not yet implemented."
	066 Move X0, 0xE30000
	067 Move X0, [X0+1576]
	068 Call 0x1C17D08
	069 Add X1, X31, 8
	070 Call 0x1C17E04
	071 Move X20, X0
	072 Move X0, X19
	073 Call 0x19913C0
	074 Move X0, X19
	075 Move X1, X20
	076 Call 0x19990B4
	077 Move X0, X19
	078 Move X1, X31
	079 Move X2, X20
	080 Call 0x1994444
	081 Move X0, 0xE5E000
	082 Move X0, [X0+2624]
	083 Call 0x1C17D08
	084 Move X1, X19
	085 Move X2, X31
	086 Call Environment.GetResourceString, X0, X1
	087 Move X19, X0
	088 Move X0, 0xE34000
	089 Move X0, [X0+1400]
	090 Call 0x1C17D08
	091 Call 0x1C17F10
	092 Move X1, X19
	093 Move X2, X31
	094 Move X20, X0
	095 Call ArgumentException..ctor, X0, X1
	096 Move X0, 0xE5E000
	097 Move X0, [X0+2632]
	098 Call 0x1C17D08
	099 Move X1, X0
	100 Move X0, X20
	101 Call 0x1C17DEC
	102 Move X21, X0
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move X0, X21
	105 Call 0x3EB2AD0
	106 Move X21, X0
	107 Move X0, 0xE34000
	108 Move X0, [X0+1400]
	109 Call 0x1C17D08
	110 Move X8, [X21]
	111 Move X1, [X8]
	112 Call 0x1C18270
	113 Move TEMP, X0
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfNotEqual {150}
	117 Move X21, [X21]
	118 Call 0x3EB2AE0
	119 Move X0, 0xE36000
	120 Move X0, [X0+2408]
	121 Call 0x1C17D08
	122 Move X22, X0
	123 Move X0, 0xE2C000
	124 Move X0, [X0+1728]
	125 Call 0x1C17D08
	126 Move W8, [X0+224]
	127 Compare W8, 0
	128 JumpIfNotEqual {130}
	129 Call 0x1C17DFC
	130 Move X0, X22
	131 Move X1, X31
	132 Call Type.GetTypeFromHandle, X0
	133 Compare X0, 0
	134 JumpIfEqual {158}
	135 Move X8, [X0]
	136 Move X9, [X8+760]
	137 Move X1, [X8+768]
	138 NotImplemented "Instruction BLR not yet implemented."
	139 Move X1, X0
	140 Move X0, X19
	141 Move X2, X31
	142 Call Assembly.op_Equality, X0, X1
	143 Move TEMP, X0
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfNotEqual {159}
	147 Move X0, 0xE2E000
	148 Move X0, [X0+3144]
	149 Call 0x1C17D08
	150 Move W0, 8
	151 Call 0x3EB2AF0
	152 Move X8, [X21]
	153 Move [X0], X8
	154 Move X1, 0xBED000
	155 Add X1, X1, 3672
	156 Move X2, X31
	157 Call 0x3EB2B00
	158 Call 0x1C17F20
	159 Move X0, 0xE2C000
	160 Move X0, [X0+2512]
	161 Call 0x1C17D08
	162 Move W1, 2
	163 Call 0x1C17D6C
	164 Move X22, X0
	165 Move X0, X19
	166 Call 0x19913C0
	167 Move X8, [X19]
	168 Move X0, X19
	169 Move X9, [X8+360]
	170 Move X1, [X8+368]
	171 NotImplemented "Instruction BLR not yet implemented."
	172 Move X19, X0
	173 Move X0, X22
	174 Call 0x19913C0
	175 Move X0, X22
	176 Move X1, X19
	177 Call 0x19990B4
	178 Move X0, X22
	179 Move X1, X31
	180 Move X2, X19
	181 Call 0x1994444
	182 Move X0, X22
	183 Call 0x19913C0
	184 Move X0, X22
	185 Move X1, X20
	186 Call 0x19990B4
	187 Move W1, 1
	188 Move X0, X22
	189 Move X2, X20
	190 Call 0x1994444
	191 Move X0, 0xE5E000
	192 Move X0, [X0+2640]
	193 Call 0x1C17D08
	194 Move X1, X22
	195 Move X2, X31
	196 Call Environment.GetResourceString, X0, X1
	197 Move X19, X0
	198 Move X0, 0xE34000
	199 Move X0, [X0+1400]
	200 Call 0x1C17D08
	201 Call 0x1C17F10
	202 Move X1, X19
	203 Move X2, X21
	204 Move X3, X31
	205 Move X20, X0
	206 Call ArgumentException..ctor, X0, X1, X2
	207 Move X21, X0
	208 Call 0x3EB2AE0
	209 Move X0, X21
	210 Call 0x1D2D690
	211 Call 0x1991590

Method: System.Boolean GetNeutralResourcesLanguageAttribute(System.Reflection.Assembly assembly, ref System.String cultureName, ref System.Int16 fallbackLocation)

Disassembly:
	0x032C8FCC B 0x32C8F70
	0x032C8FD0 STR X30, [X31 - 0x40]!
	0x032C8FD4 STP X24, X23, [X31 + 0x10]
	0x032C8FD8 STP X22, X21, [X31 + 0x20]
	0x032C8FDC STP X20, X19, [X31 + 0x30]
	0x032C8FE0 ADRP X20, 0x1114000
	0x032C8FE4 LDRB W8, [X20 + 0x8CF]
	0x032C8FE8 MOV X22, X2
	0x032C8FEC MOV W23, W1
	0x032C8FF0 MOV X19, X0
	0x032C8FF4 TBNZ X8, 0x0, 0x32C900C
	0x032C8FF8 ADRP X0, 0xE2B000
	0x032C8FFC LDR X0, [X0 + 0x618]
	0x032C9000 BL 0x1C16CF4
	0x032C9004 MOVZ W8, 0x1
	0x032C9008 STRB W8, [X20 + 0x8CF]
	0x032C900C MOV X0, X19
	0x032C9010 MOV W1, W23
	0x032C9014 BL 0x32C8BBC
	0x032C9018 MOV W20, W0
	0x032C901C STRB W31, [X31 + 0xC]
	0x032C9020 ADD X1, X31, 0xC
	0x032C9024 MOV X0, X19
	0x032C9028 MOV X2, X31
	0x032C902C BL 0x33DE64C
	0x032C9030 LDR X0, [X19 + 0x10]
	0x032C9034 CBZ X0, 0x32C9338
	0x032C9038 LDR X8, [X0]
	0x032C903C LDP X9, X1, [X8 + 0x188]
	0x032C9040 BLR X9

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1115000
	008 Move X23, 0xE5E000
	009 Move W8, [X22+2242]
	010 Move X23, [X23+2648]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xE5E000
	019 Move X0, [X0+2648]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2242], W8
	023 Move X1, [X23]
	024 Move X0, X21
	025 Call 0x21A985C, X0
	026 Compare X0, 0
	027 JumpIfEqual {32}
	028 Move X8, [X0+16]
	029 Move [X20], X8
	030 Move W8, [X0+24]
	031 NotImplemented "Instruction STRH not yet implemented."
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 NotImplemented "Instruction CSET not yet implemented."
	038 Move X30, [X31+48]
	039 Move X23, [X31+56]
	040 Return X0

