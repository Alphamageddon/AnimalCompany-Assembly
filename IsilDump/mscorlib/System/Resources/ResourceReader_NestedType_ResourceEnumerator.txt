Type: System.Resources.ResourceReader/ResourceEnumerator

Method: System.Void .ctor(System.Resources.ResourceReader reader)

Disassembly:
	0x032C9D98 MOV X23, X0
	0x032C9D9C CBZ X0, 0x32C9E0C
	0x032C9DA0 LDR X8, [X23]
	0x032C9DA4 LDR X1, [X25]
	0x032C9DA8 LDRB W10, [X8 + 0x130]
	0x032C9DAC LDRB W9, [X1 + 0x130]
	0x032C9DB0 CMP W10, W9
	0x032C9DB4 B.CC 0x32C9EF4
	0x032C9DB8 LDR X8, [X8 + 0xC8]
	0x032C9DBC ADD X8, X8, X9, 0x3, LSL
	0x032C9DC0 LDUR X8, [X8 - 0x8]
	0x032C9DC4 CMP X8, X1
	0x032C9DC8 B.NE 0x32C9EF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move X8, -41787392
	009 Move V0, [X8+912]
	010 Move [X20+16], X19
	011 Move [X20+28], D0
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x032C8548 MOV X0, X20
	0x032C854C MOV X2, X31
	0x032C8550 BL 0x322BD98
	0x032C8554 MOV W21, W0
	0x032C8558 ADDS W31, W0, 0x1
	0x032C855C MOV W4, W0
	0x032C8560 B.NE 0x32C8568
	0x032C8564 LDR W4, [X20 + 0x10]
	0x032C8568 CBZ X22, 0x32C8750
	0x032C856C LDR W8, [X22 + 0x10]
	0x032C8570 CMP W4, W8
	0x032C8574 B.NE 0x32C8648
	0x032C8578 MOVZ W5, 0x4
	0x032C857C MOV X0, X20
	0x032C8580 MOV W1, W31
	0x032C8584 MOV X2, X22
	0x032C8588 MOV W3, W31
	0x032C858C MOV X6, X31
	0x032C8590 BL 0x3225DC8
	0x032C8594 CMP W0, 0x0
	0x032C8598 MOV W8, W0
	0x032C859C CSET W0, EQ
	0x032C85A0 ADDS W31, W21, 0x1
	0x032C85A4 B.EQ 0x32C864C
	0x032C85A8 CBNZ W8, 0x32C864C
	0x032C85AC ADRP X23, 0xE2D000
	0x032C85B0 LDR X23, [X23 + 0x170]
	0x032C85B4 ADD W21, W21, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move X9, [X0+16]
	003 Compare X9, 0
	004 JumpIfEqual {26}
	005 Move W8, [X0+28]
	006 Move W9, [X9+104]
	007 Move W10, 0x80000000
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Subtract W9, W9, 1
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move W10, 1
	012 Move [X0+24], W10
	013 Add W10, W8, 1
	014 Move [X0+24], W31
	015 Move W10, 0x80000000
	016 Move W11, 0x80000000
	017 NotImplemented "Instruction CMP not yet implemented."
	018 NotImplemented "Instruction CSET not yet implemented."
	019 NotImplemented "Instruction CMP not yet implemented."
	020 NotImplemented "Instruction CSET not yet implemented."
	021 And W8, W11, W8
	022 Move [X0+28], W10
	023 Move W0, W8
	024 Move X30, [X31+16]
	025 Return X0
	026 Call 0x1C17F20

Method: System.Object get_Key()

Disassembly:
	0x032C8498 LDRB W8, [X21 + 0x8C6]
	0x032C849C LDR X20, [X20 + 0xDB8]
	0x032C84A0 MOV X19, X0
	0x032C84A4 TBNZ X8, 0x0, 0x32C84BC
	0x032C84A8 ADRP X0, 0xE5B000
	0x032C84AC LDR X0, [X0 + 0xDB8]
	0x032C84B0 BL 0x1C16CF4
	0x032C84B4 MOVZ W8, 0x1
	0x032C84B8 STRB W8, [X21 + 0x8C6]
	0x032C84BC LDR X8, [X19 + 0x48]
	0x032C84C0 LDRB W9, [X19 + 0x38]
	0x032C84C4 STR X8, [X19 + 0x40]
	0x032C84C8 STRB W9, [X19 + 0x39]
	0x032C84CC LDR X0, [X20]
	0x032C84D0 BL 0x1C16F10
	0x032C84D4 MOV X1, X31
	0x032C84D8 MOV X20, X0
	0x032C84DC BL 0x335A0A0
	0x032C84E0 STR X20, [X19 + 0x10]
	0x032C84E4 LDP X20, X19, [X31 + 0x10]
	0x032C84E8 LDP X30, X21, [X31], #0x20
	0x032C84EC RET
	0x032C84F0 STP X30, X23, [X31 - 0x30]!
	0x032C84F4 STP X22, X21, [X31 + 0x10]
	0x032C84F8 STP X20, X19, [X31 + 0x20]
	0x032C84FC ADRP X21, 0x1114000
	0x032C8500 LDRB W8, [X21 + 0x8C7]
	0x032C8504 MOV X19, X2
	0x032C8508 MOV X22, X1
	0x032C850C MOV X20, X0
	0x032C8510 TBNZ X8, 0x0, 0x32C8540
	0x032C8514 ADRP X0, 0xE5C000
	0x032C8518 LDR X0, [X0 + 0xF00]
	0x032C851C BL 0x1C16CF4
	0x032C8520 ADRP X0, 0xE2D000
	0x032C8524 LDR X0, [X0 + 0x170]
	0x032C8528 BL 0x1C16CF4
	0x032C852C ADRP X0, 0xE5C000
	0x032C8530 LDR X0, [X0 + 0xF10]
	0x032C8534 BL 0x1C16CF4
	0x032C8538 MOVZ W8, 0x1
	0x032C853C STRB W8, [X21 + 0x8C7]
	0x032C8540 CBZ X20, 0x32C8750
	0x032C8544 MOVZ W1, 0x2C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W1, [X0+28]
	005 Move W8, 0x80000000
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move W8, [X0+24]
	008 Compare W8, 0
	009 JumpIfEqual {25}
	010 Move X8, [X0+16]
	011 Compare X8, 0
	012 JumpIfEqual {27}
	013 Move X9, [X8+24]
	014 Compare X9, 0
	015 JumpIfEqual {28}
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Add X2, X0, 32
	019 Move X0, X8
	020 Move X30, [X31+32]
	021 Call ResourceReader.AllocateStringForNameIndex, X0, X1, X2
	022 Return X0
	023 Move X0, 0xE57000
	024 Move X0, [X0+3136]
	025 Move X0, 0xE57000
	026 Move X0, [X0+3144]
	027 Call 0x1C17F20
	028 Move X0, 0xE5E000
	029 Move X0, [X0+2592]
	030 Call 0x1C17D08
	031 Move X1, X31
	032 Call Environment.GetResourceString, X0
	033 Move X19, X0
	034 Move X0, 0xE2C000
	035 Move X0, [X0+1456]
	036 Call 0x1C17D08
	037 Call 0x1C17F10
	038 Move X1, X19
	039 Move X2, X31
	040 Move X20, X0
	041 Call InvalidOperationException..ctor, X0, X1
	042 Move X0, 0xE5E000
	043 Move X0, [X0+2600]
	044 Call 0x1C17D08
	045 Move X1, X0
	046 Move X0, X20
	047 Call 0x1C17DEC

Method: System.Object get_Current()

Disassembly:
	0x032CC7D4 B 0x33BDD8C
	0x032CC7D8 MOV X1, X31
	0x032CC7DC B 0x33BDD8C
	0x032CC7E0 MOVZ W0, 0x1
	0x032CC7E4 RET
	0x032CC7E8 LDR X8, [X0]
	0x032CC7EC MOV X3, X1
	0x032CC7F0 MOVZ W1, 0x200
	0x032CC7F4 MOV X2, X31
	0x032CC7F8 LDR X6, [X8 + 0x3A8]
	0x032CC7FC LDR X5, [X8 + 0x3B0]
	0x032CC800 MOV X4, X31
	0x032CC804 BR X6
	0x032CC808 MOV X2, X31
	0x032CC80C B 0x33CB4A4
	0x032CC810 MOV X2, X31
	0x032CC814 B 0x33CB4A4
	0x032CC818 MOV X1, X31
	0x032CC81C B 0x33CB4E0
	0x032CC820 MOV X1, X31
	0x032CC824 B 0x33CB4E0
	0x032CC828 CMP X0, X1
	0x032CC82C B.EQ 0x32CC848
	0x032CC830 MOV W8, W31
	0x032CC834 CBZ X0, 0x32CC84C

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1111000
	007 Move X20, 0xE30000
	008 Move W8, [X21+2264]
	009 Move X20, [X20+3856]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xE30000
	016 Move X0, [X0+3856]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+2264], W8
	020 Move X0, X19
	021 Call ResourceEnumerator.get_Entry, X0
	022 Move X8, [X20]
	023 Move [X31], X0
	024 Move [X31+8], X1
	025 Add X1, X31, 0
	026 Move X0, X8
	027 Call 0x1C17E04
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X30, [X31+16]
	031 Move X21, [X31+24]
	032 Add X31, X31, 48
	033 Return X0

Method: System.Int32 get_DataPosition()

Disassembly:
	0x032CCB78 MOV X21, X31
	0x032CCB7C MOV X0, X21

ISIL:
	001 Move W0, [X0+32]
	002 Return X0

Method: System.Collections.DictionaryEntry get_Entry()

Disassembly:
	0x032CC838 CBZ X1, 0x32CC84C
	0x032CC83C LDR X8, [X0]
	0x032CC840 LDP X3, X2, [X8 + 0x138]
	0x032CC844 BR X3
	0x032CC848 MOVZ W8, 0x1
	0x032CC84C MOV W0, W8
	0x032CC850 RET
	0x032CC854 STR X30, [X31 - 0x30]!
	0x032CC858 STP X22, X21, [X31 + 0x10]
	0x032CC85C STP X20, X19, [X31 + 0x20]
	0x032CC860 ADRP X21, 0x1110000
	0x032CC864 ADRP X22, 0xE51000
	0x032CC868 LDRB W8, [X21 + 0x8E0]
	0x032CC86C LDR X22, [X22 + 0x978]
	0x032CC870 MOV X19, X1
	0x032CC874 MOV X20, X0
	0x032CC878 TBNZ X8, 0x0, 0x32CC890
	0x032CC87C ADRP X0, 0xE51000
	0x032CC880 LDR X0, [X0 + 0x978]
	0x032CC884 BL 0x1C16CF4
	0x032CC888 MOVZ W8, 0x1
	0x032CC88C STRB W8, [X21 + 0x8E0]
	0x032CC890 LDR X0, [X22]
	0x032CC894 LDR W8, [X0 + 0xE0]
	0x032CC898 CBNZ W8, 0x32CC8A0
	0x032CC89C BL 0x1C16DFC
	0x032CC8A0 CMP X20, X19
	0x032CC8A4 B.EQ 0x32CC8D0
	0x032CC8A8 MOVZ W8, 0x1
	0x032CC8AC CBZ X20, 0x32CC8D4
	0x032CC8B0 CBZ X19, 0x32CC8D4
	0x032CC8B4 LDR X8, [X20]
	0x032CC8B8 MOV X0, X20
	0x032CC8BC MOV X1, X19
	0x032CC8C0 LDP X9, X2, [X8 + 0x138]
	0x032CC8C4 BLR X9
	0x032CC8C8 EOR W8, W0, 0x1
	0x032CC8CC B 0x32CC8D4
	0x032CC8D0 MOV W8, W31
	0x032CC8D4 LDP X20, X19, [X31 + 0x20]
	0x032CC8D8 LDP X22, X21, [X31 + 0x10]
	0x032CC8DC AND W0, W8, 0x1
	0x032CC8E0 LDR X30, [X31], #0x30
	0x032CC8E4 RET
	0x032CC8E8 STR X30, [X31 - 0x30]!
	0x032CC8EC STP X22, X21, [X31 + 0x10]
	0x032CC8F0 STP X20, X19, [X31 + 0x20]
	0x032CC8F4 ADRP X22, 0x1110000
	0x032CC8F8 ADRP X21, 0xE59000
	0x032CC8FC ADRP X20, 0xE51000
	0x032CC900 ADRP X19, 0xE59000
	0x032CC904 LDRB W8, [X22 + 0x8E1]
	0x032CC908 LDR X21, [X21 + 0xBF0]
	0x032CC90C LDR X20, [X20 + 0x978]
	0x032CC910 LDR X19, [X19 + 0xBF8]
	0x032CC914 TBNZ X8, 0x0, 0x32CC944
	0x032CC918 ADRP X0, 0xE51000
	0x032CC91C LDR X0, [X0 + 0x978]
	0x032CC920 BL 0x1C16CF4
	0x032CC924 ADRP X0, 0xE59000
	0x032CC928 LDR X0, [X0 + 0xBF0]
	0x032CC92C BL 0x1C16CF4
	0x032CC930 ADRP X0, 0xE59000
	0x032CC934 LDR X0, [X0 + 0xBF8]
	0x032CC938 BL 0x1C16CF4
	0x032CC93C MOVZ W8, 0x1
	0x032CC940 STRB W8, [X22 + 0x8E1]
	0x032CC944 LDR X8, [X20]
	0x032CC948 LDR X9, [X21]
	0x032CC94C LDP X22, X21, [X31 + 0x10]
	0x032CC950 LDR X8, [X8 + 0xB8]
	0x032CC954 STR X9, [X8]
	0x032CC958 LDR X8, [X20]
	0x032CC95C LDR X9, [X19]
	0x032CC960 LDP X20, X19, [X31 + 0x20]
	0x032CC964 LDR X8, [X8 + 0xB8]
	0x032CC968 STR X9, [X8 + 0x8]
	0x032CC96C LDR X30, [X31], #0x30
	0x032CC970 RET
	0x032CC974 STP X30, X21, [X31 - 0x20]!
	0x032CC978 STP X20, X19, [X31 + 0x10]
	0x032CC97C ADRP X20, 0x1110000
	0x032CC980 ADRP X21, 0xE59000
	0x032CC984 LDRB W8, [X20 + 0x8E2]
	0x032CC988 LDR X21, [X21 + 0xC00]
	0x032CC98C MOV X19, X0
	0x032CC990 TBNZ X8, 0x0, 0x32CC9A8
	0x032CC994 ADRP X0, 0xE59000
	0x032CC998 LDR X0, [X0 + 0xC00]
	0x032CC99C BL 0x1C16CF4
	0x032CC9A0 MOVZ W8, 0x1
	0x032CC9A4 STRB W8, [X20 + 0x8E2]
	0x032CC9A8 LDR X1, [X21]
	0x032CC9AC MOV X0, X19
	0x032CC9B0 MOV X2, X31
	0x032CC9B4 MOV X3, X31
	0x032CC9B8 BL 0x33674C4
	0x032CC9BC MOVZ W8, 0x1605
	0x032CC9C0 MOVK W8, 0x80130000
	0x032CC9C4 STR W8, [X19 + 0x60]
	0x032CC9C8 LDP X20, X19, [X31 + 0x10]
	0x032CC9CC LDP X30, X21, [X31], #0x20
	0x032CC9D0 RET
	0x032CC9D4 STP X30, X19, [X31 - 0x10]!
	0x032CC9D8 MOV X2, X31
	0x032CC9DC MOV X3, X31
	0x032CC9E0 MOV X19, X0
	0x032CC9E4 BL 0x33674C4
	0x032CC9E8 MOVZ W8, 0x1605
	0x032CC9EC MOVK W8, 0x80130000
	0x032CC9F0 STR W8, [X19 + 0x60]
	0x032CC9F4 LDP X30, X19, [X31], #0x10
	0x032CC9F8 RET
	0x032CC9FC STP X30, X19, [X31 - 0x10]!
	0x032CCA00 MOV X3, X31
	0x032CCA04 MOV X19, X0
	0x032CCA08 BL 0x33674C4
	0x032CCA0C MOVZ W8, 0x1605
	0x032CCA10 MOVK W8, 0x80130000
	0x032CCA14 STR W8, [X19 + 0x60]
	0x032CCA18 LDP X30, X19, [X31], #0x10
	0x032CCA1C RET
	0x032CCA20 MOV X4, X31
	0x032CCA24 B 0x33674E8
	0x032CCA28 STR X30, [X31 - 0x20]!
	0x032CCA2C STP X20, X19, [X31 + 0x10]
	0x032CCA30 MOV X19, X1
	0x032CCA34 MOV X1, X31
	0x032CCA38 MOV X20, X0
	0x032CCA3C BL 0x33A51F0
	0x032CCA40 STR X19, [X20 + 0x10]
	0x032CCA44 LDP X20, X19, [X31 + 0x10]
	0x032CCA48 LDR X30, [X31], #0x20
	0x032CCA4C RET
	0x032CCA50 LDR X0, [X0 + 0x10]
	0x032CCA54 RET
	0x032CCA58 MOV X1, X31
	0x032CCA5C B 0x33BDD8C
	0x032CCA60 MOV X1, X31
	0x032CCA64 B 0x33BDD8C
	0x032CCA68 MOVZ W0, 0x2
	0x032CCA6C RET
	0x032CCA70 STR X30, [X31 - 0x30]!
	0x032CCA74 STP X22, X21, [X31 + 0x10]
	0x032CCA78 STP X20, X19, [X31 + 0x20]
	0x032CCA7C ADRP X20, 0x1110000
	0x032CCA80 LDRB W8, [X20 + 0x8E3]
	0x032CCA84 MOV X19, X0
	0x032CCA88 TBNZ X8, 0x0, 0x32CCAAC
	0x032CCA8C ADRP X0, 0xE59000
	0x032CCA90 LDR X0, [X0 + 0xC08]
	0x032CCA94 BL 0x1C16CF4
	0x032CCA98 ADRP X0, 0xE27000
	0x032CCA9C LDR X0, [X0 + 0x6C0]
	0x032CCAA0 BL 0x1C16CF4
	0x032CCAA4 MOVZ W8, 0x1
	0x032CCAA8 STRB W8, [X20 + 0x8E3]
	0x032CCAAC LDR X8, [X19]
	0x032CCAB0 MOVZ W1, 0x1
	0x032CCAB4 MOV X0, X19
	0x032CCAB8 LDR X9, [X8 + 0x248]
	0x032CCABC LDR X2, [X8 + 0x250]
	0x032CCAC0 BLR X9
	0x032CCAC4 CBZ X0, 0x32CCB90
	0x032CCAC8 LDR X8, [X0]
	0x032CCACC ADRP X19, 0xE59000
	0x032CCAD0 ADRP X20, 0xE27000
	0x032CCAD4 LDR X9, [X8 + 0x358]
	0x032CCAD8 LDR X1, [X8 + 0x360]
	0x032CCADC LDR X19, [X19 + 0xC08]
	0x032CCAE0 LDR X20, [X20 + 0x6C0]
	0x032CCAE4 BLR X9
	0x032CCAE8 LDR X8, [X20]
	0x032CCAEC LDR X20, [X19]
	0x032CCAF0 MOV X19, X0
	0x032CCAF4 LDR W9, [X8 + 0xE0]
	0x032CCAF8 CBNZ W9, 0x32CCB04
	0x032CCAFC MOV X0, X8
	0x032CCB00 BL 0x1C16DFC
	0x032CCB04 MOV X0, X20
	0x032CCB08 MOV X1, X31
	0x032CCB0C BL 0x338C698
	0x032CCB10 CBZ X19, 0x32CCB90
	0x032CCB14 LDR W8, [X19 + 0x18]
	0x032CCB18 CMP W8, 0x1
	0x032CCB1C B.LT 0x32CCB78
	0x032CCB20 MOV X20, X0
	0x032CCB24 MOV W22, W31
	0x032CCB28 CMP W22, W8
	0x032CCB2C B.CS 0x32CCB94
	0x032CCB30 ADD X8, X19, W22, 0x3, SXTW
	0x032CCB34 LDR X0, [X8 + 0x20]
	0x032CCB38 CBZ X0, 0x32CCB90
	0x032CCB3C LDR X8, [X0]
	0x032CCB40 LDP X9, X1, [X8 + 0x1D8]
	0x032CCB44 BLR X9
	0x032CCB48 CBZ X0, 0x32CCB90
	0x032CCB4C LDR X8, [X0]
	0x032CCB50 MOV X1, X20
	0x032CCB54 MOV X21, X0
	0x032CCB58 LDR X9, [X8 + 0x298]
	0x032CCB5C LDR X2, [X8 + 0x2A0]
	0x032CCB60 BLR X9
	0x032CCB64 TBNZ X0, 0x0, 0x32CCB7C
	0x032CCB68 LDR W8, [X19 + 0x18]
	0x032CCB6C ADD W22, W22, 0x1
	0x032CCB70 CMP W22, W8
	0x032CCB74 B.LT 0x32CCB28

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X19, 0x1111000
	011 Move W8, [X19+2265]
	012 Move X22, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xE5A000
	018 Move X0, [X0+2520]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X19+2265], W8
	022 Move [X31+24], W31
	023 Move [X31+8], X31
	024 Move [X31+16], X31
	025 Move W8, [X22+28]
	026 Move W9, 0x80000000
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move W8, [X22+24]
	029 Compare W8, 0
	030 JumpIfEqual {138}
	031 Move X19, [X22+16]
	032 Compare X19, 0
	033 JumpIfEqual {140}
	034 Move X8, [X19+24]
	035 Compare X8, 0
	036 JumpIfEqual {141}
	037 Move [X31+28], W31
	038 Add X1, X31, 28
	039 Move X0, X19
	040 Move X2, X31
	041 Call Monitor.Enter, X0, X1
	042 Move X8, [X22+16]
	043 Compare X8, 0
	044 JumpIfEqual {163}
	045 Move X21, [X8+24]
	046 Move [X31+24], W31
	047 Add X1, X31, 24
	048 Move X0, X21
	049 Move X2, X31
	050 Call Monitor.Enter, X0, X1
	051 Move X0, [X22+16]
	052 Compare X0, 0
	053 JumpIfEqual {164}
	054 Move W1, [X22+28]
	055 Add X2, X22, 32
	056 Call ResourceReader.AllocateStringForNameIndex, X0, X1, X2
	057 Move X8, [X22+16]
	058 Move X20, X0
	059 Compare X8, 0
	060 JumpIfEqual {165}
	061 Move X0, [X8+24]
	062 Compare X0, 0
	063 JumpIfEqual {166}
	064 Move X8, 0xE5A000
	065 Move X8, [X8+2520]
	066 Move X3, [X8]
	067 Add X2, X31, 8
	068 Move X1, X20
	069 Call Dictionary`2<Object, ResourceLocator>.TryGetValue, X0, X1, X2
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfNotEqual {77}
	074 Move X23, [X31+8]
	075 Compare X23, 0
	076 JumpIfNotEqual {88}
	077 Move W1, [X22+32]
	078 Move X0, [X22+16]
	079 Add W31, W1, 1
	080 Compare X0, 0
	081 JumpIfEqual {169}
	082 Call ResourceReader.LoadObject, X0, X1
	083 Compare X0, 0
	084 JumpIfEqual {170}
	085 Move W1, [X22+28]
	086 Call ResourceReader.GetValueForNameIndex, X0, X1
	087 Move X23, X0
	088 Move X22, X31
	089 Move W25, W31
	090 Move W24, 14
	091 Move W8, [X31+24]
	092 Compare W8, 0
	093 JumpIfEqual {97}
	094 Move X0, X21
	095 Move X1, X31
	096 Call Monitor.Exit, X0
	097 Compare X22, 0
	098 JumpIfNotEqual {167}
	099 Move X21, X31
	100 Move TEMP, X25
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfNotEqual {106}
	104 Move W24, W31
	105 Move X22, X21
	106 Move W8, [X31+28]
	107 Compare W8, 0
	108 JumpIfEqual {112}
	109 Move X0, X19
	110 Move X1, X31
	111 Call Monitor.Exit, X0
	112 Compare X22, 0
	113 JumpIfNotEqual {161}
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Compare W24, 0
	116 JumpIfNotEqual {124}
	117 Add X0, X31, 32
	118 Move X1, X20
	119 Move X2, X23
	120 Move X3, X31
	121 Move [X31+32], X31
	122 Move [X31+40], X31
	123 Call DictionaryEntry..ctor, X0, X1, X2
	124 Move X0, [X31+32]
	125 Move X1, [X31+40]
	126 Move X20, [X31+96]
	127 Move X19, [X31+104]
	128 Move X22, [X31+80]
	129 Move X21, [X31+88]
	130 Move X24, [X31+64]
	131 Move X23, [X31+72]
	132 Move X30, [X31+48]
	133 Move X25, [X31+56]
	134 Add X31, X31, 112
	135 Return X0
	136 Move X0, 0xE53000
	137 Move X0, [X0+3136]
	138 Move X0, 0xE53000
	139 Move X0, [X0+3144]
	140 Call 0x1C17F20
	141 Move X0, 0xE5A000
	142 Move X0, [X0+2592]
	143 Call 0x1C17D08
	144 Move X1, X31
	145 Call Environment.GetResourceString, X0
	146 Move X19, X0
	147 Move X0, 0xE28000
	148 Move X0, [X0+1456]
	149 Call 0x1C17D08
	150 Call 0x1C17F10
	151 Move X1, X19
	152 Move X2, X31
	153 Move X20, X0
	154 Call InvalidOperationException..ctor, X0, X1
	155 Move X0, 0xE5A000
	156 Move X0, [X0+2968]
	157 Call 0x1C17D08
	158 Move X1, X0
	159 Move X0, X20
	160 Call 0x1C17DEC
	161 Move X0, X22
	162 Call 0x1C17F18
	163 Call 0x1C17F20
	164 Call 0x1C17F20
	165 Call 0x1C17F20
	166 Call 0x1C17F20
	167 Move X0, X22
	168 Call 0x1C17F18
	169 Call 0x1C17F20
	170 Call 0x1C17F20
	171 Move X24, X1
	172 Move X25, X0
	173 Move X24, X1
	174 Move X25, X0
	175 Move X20, X31
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Move X0, X25
	178 Call 0x3EB2AD0
	179 Move X22, [X0]
	180 Call 0x3EB2AE0
	181 Move W24, W31
	182 Move X23, X31
	183 Move W25, 1
	184 Move X22, X31
	185 Move W8, [X31+24]
	186 Compare W8, 0
	187 JumpIfEqual {191}
	188 Move X0, X21
	189 Move X1, X31
	190 Call Monitor.Exit, X0
	191 Compare X22, 0
	192 JumpIfNotEqual {194}
	193 Move X23, X31
	194 Move X0, X22
	195 Call 0x1C17F18
	196 Move X24, X1
	197 Move X25, X0
	198 Move X24, X1
	199 Move X25, X0
	200 Move X23, X31
	201 Move X20, X31
	202 Move X24, X1
	203 Move X25, X0
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Move X0, X25
	206 Call 0x3EB2AD0
	207 Move X21, [X0]
	208 Call 0x3EB2AE0
	209 Move X21, X31
	210 Move X25, X0
	211 Move W8, [X31+28]
	212 Compare W8, 0
	213 JumpIfEqual {217}
	214 Move X0, X19
	215 Move X1, X31
	216 Call Monitor.Exit, X0
	217 Compare X21, 0
	218 JumpIfNotEqual {221}
	219 Move X0, X25
	220 Call 0x1D2D690
	221 Move X0, X21
	222 Call 0x1C17F18
	223 Call 0x1991590

Method: System.Object get_Value()

Disassembly:
	0x032CCB80 LDP X20, X19, [X31 + 0x20]
	0x032CCB84 LDP X22, X21, [X31 + 0x10]
	0x032CCB88 LDR X30, [X31], #0x30
	0x032CCB8C RET
	0x032CCB90 BL 0x1C16F20
	0x032CCB94 BL 0x1C16F28
	0x032CCB98 MOV X2, X31
	0x032CCB9C B 0x33CB4A4
	0x032CCBA0 MOV X2, X31
	0x032CCBA4 B 0x33CB4A4
	0x032CCBA8 MOV X1, X31
	0x032CCBAC B 0x33CB4E0
	0x032CCBB0 MOV X1, X31
	0x032CCBB4 B 0x33CB4E0
	0x032CCBB8 CMP X0, X1
	0x032CCBBC B.EQ 0x32CCBD8
	0x032CCBC0 MOV W8, W31
	0x032CCBC4 CBZ X0, 0x32CCBDC
	0x032CCBC8 CBZ X1, 0x32CCBDC
	0x032CCBCC LDR X8, [X0]
	0x032CCBD0 LDP X3, X2, [X8 + 0x138]
	0x032CCBD4 BR X3
	0x032CCBD8 MOVZ W8, 0x1
	0x032CCBDC MOV W0, W8
	0x032CCBE0 RET
	0x032CCBE4 CMP X0, X1
	0x032CCBE8 B.EQ 0x32CCC14
	0x032CCBEC MOVZ W8, 0x1
	0x032CCBF0 CBZ X0, 0x32CCC18
	0x032CCBF4 CBZ X1, 0x32CCC18
	0x032CCBF8 STR X30, [X31 - 0x10]!
	0x032CCBFC LDR X8, [X0]
	0x032CCC00 LDP X9, X2, [X8 + 0x138]
	0x032CCC04 BLR X9
	0x032CCC08 EOR W8, W0, 0x1
	0x032CCC0C LDR X30, [X31], #0x10
	0x032CCC10 B 0x32CCC18
	0x032CCC14 MOV W8, W31
	0x032CCC18 AND W0, W8, 0x1
	0x032CCC1C RET
	0x032CCC20 B 0x1C71818
	0x032CCC24 STR X30, [X31 - 0x20]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W1, [X0+28]
	005 Move W8, 0x80000000
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move W8, [X0+24]
	008 Compare W8, 0
	009 JumpIfEqual {23}
	010 Move X0, [X0+16]
	011 Compare X0, 0
	012 JumpIfEqual {25}
	013 Move X8, [X0+24]
	014 Compare X8, 0
	015 JumpIfEqual {26}
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X30, [X31+32]
	019 Call ResourceReader.GetValueForNameIndex, X0, X1
	020 Return X0
	021 Move X0, 0xE53000
	022 Move X0, [X0+3136]
	023 Move X0, 0xE53000
	024 Move X0, [X0+3144]
	025 Call 0x1C17F20
	026 Move X0, 0xE5A000
	027 Move X0, [X0+2592]
	028 Call 0x1C17D08
	029 Move X1, X31
	030 Call Environment.GetResourceString, X0
	031 Move X19, X0
	032 Move X0, 0xE28000
	033 Move X0, [X0+1456]
	034 Call 0x1C17D08
	035 Call 0x1C17F10
	036 Move X1, X19
	037 Move X2, X31
	038 Move X20, X0
	039 Call InvalidOperationException..ctor, X0, X1
	040 Move X0, 0xE5A000
	041 Move X0, [X0+2976]
	042 Call 0x1C17D08
	043 Move X1, X0
	044 Move X0, X20
	045 Call 0x1C17DEC

Method: System.Void Reset()

Disassembly:
	0x032CCC28 STP X20, X19, [X31 + 0x10]
	0x032CCC2C MOV X19, X1
	0x032CCC30 MOV X1, X31
	0x032CCC34 MOV X2, X31
	0x032CCC38 MOV X20, X0
	0x032CCC3C BL 0x33BE5B0
	0x032CCC40 TBNZ X0, 0x0, 0x32CCC60
	0x032CCC44 MOV X0, X20
	0x032CCC48 MOV X1, X19
	0x032CCC4C BL 0x1C71818
	0x032CCC50 CBZ X0, 0x32CCC80
	0x032CCC54 LDP X20, X19, [X31 + 0x10]
	0x032CCC58 LDR X30, [X31], #0x20
	0x032CCC5C RET
	0x032CCC60 ADRP X0, 0xE2F000
	0x032CCC64 LDR X0, [X0 + 0x578]
	0x032CCC68 BL 0x1C16D08
	0x032CCC6C BL 0x1C16F10
	0x032CCC70 MOV X19, X0
	0x032CCC74 ADRP X0, 0xE59000
	0x032CCC78 LDR X0, [X0 + 0xC10]
	0x032CCC7C B 0x32CCC9C
	0x032CCC80 ADRP X0, 0xE2F000
	0x032CCC84 LDR X0, [X0 + 0x578]
	0x032CCC88 BL 0x1C16D08
	0x032CCC8C BL 0x1C16F10
	0x032CCC90 MOV X19, X0
	0x032CCC94 ADRP X0, 0xE59000
	0x032CCC98 LDR X0, [X0 + 0xC18]
	0x032CCC9C BL 0x1C16D08
	0x032CCCA0 MOV X1, X0
	0x032CCCA4 MOV X0, X19
	0x032CCCA8 MOV X2, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+16]
	005 Compare X8, 0
	006 JumpIfEqual {19}
	007 Move X8, [X8+24]
	008 Compare X8, 0
	009 JumpIfEqual {20}
	010 Move X20, [X31+16]
	011 Move X19, [X31+24]
	012 Move TEMP, 0
	013 Not TEMP
	014 Move W8, TEMP
	015 Move [X0+24], W31
	016 Move [X0+28], W8
	017 Move X30, [X31+32]
	018 Return 
	019 Call 0x1C17F20
	020 Move X0, 0xE5A000
	021 Move X0, [X0+2592]
	022 Call 0x1C17D08
	023 Move X1, X31
	024 Call Environment.GetResourceString, X0
	025 Move X19, X0
	026 Move X0, 0xE28000
	027 Move X0, [X0+1456]
	028 Call 0x1C17D08
	029 Call 0x1C17F10
	030 Move X1, X19
	031 Move X2, X31
	032 Move X20, X0
	033 Call InvalidOperationException..ctor, X0, X1
	034 Move X0, 0xE5A000
	035 Move X0, [X0+2984]
	036 Call 0x1C17D08
	037 Move X1, X0
	038 Move X0, X20
	039 Call 0x1C17DEC

