Type: System.Resources.ResourceReader

Method: System.Void .ctor(System.IO.Stream stream, System.Collections.Generic.Dictionary`2<System.String, System.Resources.ResourceLocator> resCache)

Disassembly:
	0x032C6E24 LDR W8, [X19 + 0x68]
	0x032C6E28 MOV W25, W23
	0x032C6E2C SUB W8, W8, 0x1
	0x032C6E30 CMP W23, W8
	0x032C6E34 B.GE 0x32C6E50
	0x032C6E38 ADD W23, W25, 0x1
	0x032C6E3C MOV X0, X19
	0x032C6E40 MOV W1, W23
	0x032C6E44 BL 0x32C8B78
	0x032C6E48 CMP W0, W22
	0x032C6E4C B.EQ 0x32C6E24
	0x032C6E50 STRB W31, [X31 + 0xC]
	0x032C6E54 ADD X1, X31, 0xC
	0x032C6E58 MOV X0, X19
	0x032C6E5C MOV X2, X31
	0x032C6E60 BL 0x33DE64C
	0x032C6E64 CMP W21, W25
	0x032C6E68 B.GT 0x32C6ECC
	0x032C6E6C LDR X0, [X19 + 0x10]
	0x032C6E70 CBZ X0, 0x32C6F68
	0x032C6E74 LDR X8, [X0]
	0x032C6E78 LDP X9, X1, [X8 + 0x188]
	0x032C6E7C BLR X9
	0x032C6E80 LDR X23, [X19 + 0x20]
	0x032C6E84 MOV X22, X0
	0x032C6E88 MOV X0, X19
	0x032C6E8C MOV W1, W21
	0x032C6E90 BL 0x32C8BBC
	0x032C6E94 CBZ X22, 0x32C6F64
	0x032C6E98 LDR X8, [X22]
	0x032C6E9C ADD X1, X23, W0, SXTW
	0x032C6EA0 LDR X9, [X8 + 0x338]
	0x032C6EA4 LDR X3, [X8 + 0x340]
	0x032C6EA8 MOV X0, X22
	0x032C6EAC MOV W2, W31
	0x032C6EB0 BLR X9
	0x032C6EB4 MOV X0, X19
	0x032C6EB8 MOV X1, X20
	0x032C6EBC BL 0x32C8DCC
	0x032C6EC0 TBNZ X0, 0x0, 0x32C6ED8
	0x032C6EC4 ADD W21, W21, 0x1
	0x032C6EC8 B 0x32C6E64
	0x032C6ECC MOV X22, X31
	0x032C6ED0 MOVN W21, 0x0
	0x032C6ED4 B 0x32C6F30
	0x032C6ED8 LDR X0, [X19 + 0x10]
	0x032C6EDC CBZ X0, 0x32C6FAC
	0x032C6EE0 LDR X8, [X0]
	0x032C6EE4 LDR X1, [X8 + 0x230]
	0x032C6EE8 LDR X9, [X8 + 0x228]
	0x032C6EEC BLR X9
	0x032C6EF0 MOV W21, W0
	0x032C6EF4 TBNZ X0, 0x1F, 0x32C6F74
	0x032C6EF8 LDR X0, [X19 + 0x10]
	0x032C6EFC CBZ X0, 0x32C6FB0
	0x032C6F00 LDR X8, [X0]
	0x032C6F04 LDP X9, X1, [X8 + 0x188]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x1117000
	008 Move X22, 0xE60000
	009 Move W8, [X23+2250]
	010 Move X22, [X22+520]
	011 Move X21, X2
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xE60000
	019 Move X0, [X0+520]
	020 Call 0x1C17CF4
	021 Move X0, 0xE3B000
	022 Move X0, [X0+3592]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+2250], W8
	026 Move X0, X19
	027 Move X1, X31
	028 Call Object..ctor, X0
	029 Move X0, X31
	030 Move [X19+24], X21
	031 Call Encoding.get_UTF8
	032 Move X8, [X22]
	033 Move X21, X0
	034 Move X0, X8
	035 Call 0x1C17F10
	036 Move X1, X20
	037 Move X2, X21
	038 Move X3, X31
	039 Move X22, X0
	040 Call BinaryReader..ctor, X0, X1, X2
	041 Move [X19+16], X22
	042 Compare X20, 0
	043 JumpIfEqual {51}
	044 Move X8, 0xE3B000
	045 Move X8, [X8+3592]
	046 Move X9, [X20]
	047 Move X8, [X8]
	048 Move W11, [X9+304]
	049 Move W10, [X8+304]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X8, X31
	052 Move X9, [X9+200]
	053 Add X9, X9, X10
	054 NotImplemented "Instruction LDUR not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 NotImplemented "Instruction CSEL not yet implemented."
	057 Move [X19+112], X8
	058 Move X0, X19
	059 Move X20, [X31+32]
	060 Move X19, [X31+40]
	061 Move X22, [X31+16]
	062 Move X21, [X31+24]
	063 Move X30, [X31+48]
	064 Move X23, [X31+56]
	065 Call ResourceReader.ReadResources, X0
	066 Return 

Method: System.Void Close()

Disassembly:
	0x032C713C MOV W2, W31
	0x032C7140 LDR X10, [X8 + 0x338]
	0x032C7144 LDR X3, [X8 + 0x340]
	0x032C7148 ADD X1, X9, W20, SXTW
	0x032C714C BLR X10
	0x032C7150 LDR X0, [X19 + 0x10]
	0x032C7154 CBZ X0, 0x32C72B4
	0x032C7158 MOV X1, X31
	0x032C715C BL 0x32F5EE4
	0x032C7160 LDR W8, [X19 + 0x78]
	0x032C7164 MOV W20, W0
	0x032C7168 CMP W8, 0x1
	0x032C716C B.NE 0x32C724C
	0x032C7170 ADDS W31, W20, 0x1
	0x032C7174 B.EQ 0x32C7284

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, X0
	004 Move X19, X0
	005 Add X8, X8, 16
	006 Move X0, [X8]
	007 Compare X0, 0
	008 JumpIfEqual {20}
	009 Move [X8], X31
	010 Move [X8+8], X31
	011 Move X8, [X0]
	012 Move X9, [X8+408]
	013 Move X1, [X8+416]
	014 NotImplemented "Instruction BLR not yet implemented."
	015 NotImplemented "Instruction MOVI not yet implemented."
	016 Move [X19+16], X31
	017 Move [X19+112], X31
	018 Move [X19+48], V0
	019 Move [X19+56], V0
	020 Move X30, [X31+16]
	021 Move X19, [X31+24]
	022 Return 

Method: System.Void Dispose()

Disassembly:
	0x032C9A84 MOV X1, X31
	0x032C9A88 BL 0x33BDD84
	0x032C9A8C MOV X20, X0
	0x032C9A90 ADRP X0, 0xE5C000
	0x032C9A94 LDR X0, [X0 + 0x4C8]
	0x032C9A98 BL 0x1C16D08
	0x032C9A9C BL 0x1C16F10
	0x032C9AA0 MOV X1, X20
	0x032C9AA4 MOV X2, X19
	0x032C9AA8 MOV X3, X31
	0x032C9AAC MOV X21, X0
	0x032C9AB0 BL 0x3316800
	0x032C9AB4 ADRP X0, 0xE5C000
	0x032C9AB8 LDR X0, [X0 + 0xB30]
	0x032C9ABC BL 0x1C16D08

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, X0
	004 Move X19, X0
	005 Add X8, X8, 16
	006 Move X0, [X8]
	007 Compare X0, 0
	008 JumpIfEqual {20}
	009 Move [X8], X31
	010 Move [X8+8], X31
	011 Move X8, [X0]
	012 Move X9, [X8+408]
	013 Move X1, [X8+416]
	014 NotImplemented "Instruction BLR not yet implemented."
	015 NotImplemented "Instruction MOVI not yet implemented."
	016 Move [X19+16], X31
	017 Move [X19+112], X31
	018 Move [X19+48], V0
	019 Move [X19+56], V0
	020 Move X30, [X31+16]
	021 Move X19, [X31+24]
	022 Return 

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x032C9A44 B.NE 0x32C9B10
	0x032C9A48 MOV X0, X19
	0x032C9A4C BL 0x3EB1AD0
	0x032C9A50 MOV X19, X0
	0x032C9A54 ADRP X0, 0xE5C000
	0x032C9A58 LDR X0, [X0 + 0x3D8]
	0x032C9A5C BL 0x1C16D08
	0x032C9A60 LDR X8, [X19]
	0x032C9A64 LDR X1, [X8]
	0x032C9A68 BL 0x1C17270
	0x032C9A6C TBZ X0, 0x0, 0x32C9ACC
	0x032C9A70 LDR X19, [X19]
	0x032C9A74 BL 0x3EB1AE0
	0x032C9A78 ADRP X0, 0xE5C000
	0x032C9A7C LDR X0, [X0 + 0xB28]
	0x032C9A80 BL 0x1C16D08

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+16]
	005 Compare X0, 0
	006 JumpIfEqual {22}
	007 Move [X19+24], X31
	008 Move TEMP, X1
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfNotEqual {17}
	012 Move [X19+16], X31
	013 Move X8, [X0]
	014 Move X9, [X8+408]
	015 Move X1, [X8+416]
	016 NotImplemented "Instruction BLR not yet implemented."
	017 NotImplemented "Instruction MOVI not yet implemented."
	018 Move [X19+16], X31
	019 Move [X19+112], X31
	020 Move [X19+48], V0
	021 Move [X19+56], V0
	022 Move X30, [X31+16]
	023 Move X19, [X31+24]
	024 Return 

Method: System.Int32 ReadUnalignedI4(System.Int32* p)

Disassembly:
	0x032C9AC0 MOV X1, X0
	0x032C9AC4 MOV X0, X21

ISIL:
	001 Move W0, [X0]
	002 Return X0

Method: System.Void SkipString()

Disassembly:
	0x032C9AC8 BL 0x1C16DEC
	0x032C9ACC ADRP X0, 0xE32000
	0x032C9AD0 LDR X0, [X0 + 0x760]
	0x032C9AD4 BL 0x1C16D08
	0x032C9AD8 LDR X8, [X19]
	0x032C9ADC LDR X1, [X8]
	0x032C9AE0 BL 0x1C17270
	0x032C9AE4 TBNZ X0, 0x0, 0x32C9A70
	0x032C9AE8 MOVZ W0, 0x8
	0x032C9AEC BL 0x3EB1AF0
	0x032C9AF0 LDR X8, [X19]
	0x032C9AF4 STR X8, [X0]
	0x032C9AF8 ADRP X1, 0xBEB000
	0x032C9AFC ADD X1, X1, 0xE58
	0x032C9B00 MOV X2, X31
	0x032C9B04 BL 0x3EB1B00
	0x032C9B08 MOV X19, X0
	0x032C9B0C BL 0x3EB1AE0
	0x032C9B10 MOV X0, X19
	0x032C9B14 BL 0x1D2C690
	0x032C9B18 BL 0x1990590
	0x032C9B1C STP X30, X21, [X31 - 0x20]!
	0x032C9B20 STP X20, X19, [X31 + 0x10]
	0x032C9B24 BL 0x32CAA10
	0x032C9B28 LDP X20, X19, [X31 + 0x10]
	0x032C9B2C LDP X30, X21, [X31], #0x20
	0x032C9B30 RET
	0x032C9B34 CMP W1, 0x1
	0x032C9B38 MOV X19, X0
	0x032C9B3C B.NE 0x32C9C08
	0x032C9B40 MOV X0, X19
	0x032C9B44 BL 0x3EB1AD0
	0x032C9B48 MOV X19, X0
	0x032C9B4C ADRP X0, 0xE5C000
	0x032C9B50 LDR X0, [X0 + 0x3D8]
	0x032C9B54 BL 0x1C16D08
	0x032C9B58 LDR X8, [X19]
	0x032C9B5C LDR X1, [X8]
	0x032C9B60 BL 0x1C17270
	0x032C9B64 TBZ X0, 0x0, 0x32C9BC4
	0x032C9B68 LDR X19, [X19]
	0x032C9B6C BL 0x3EB1AE0
	0x032C9B70 ADRP X0, 0xE5C000
	0x032C9B74 LDR X0, [X0 + 0xB28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X0
	005 Move X0, [X0+16]
	006 Compare X0, 0
	007 JumpIfEqual {33}
	008 Move X1, X31
	009 Call BinaryReader.Read7BitEncodedInt, X0
	010 Move TEMP, X0
	011 And TEMP, TEMP, -2147483648
	012 Compare TEMP, -2147483648
	013 JumpIfEqual {34}
	014 Move W19, W0
	015 Move X0, [X20+16]
	016 Compare X0, 0
	017 JumpIfEqual {33}
	018 Move X8, [X0]
	019 Move X9, [X8+392]
	020 Move X1, [X8+400]
	021 NotImplemented "Instruction BLR not yet implemented."
	022 Compare X0, 0
	023 JumpIfEqual {33}
	024 Move X8, [X0]
	025 Move W1, W19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move W2, 1
	029 Move X4, [X8+824]
	030 Move X3, [X8+832]
	031 Move X30, [X31+32]
	032 CallNoReturn X4
	033 Call 0x1C17F20
	034 Move X0, 0xE5D000
	035 Move X0, [X0+2760]
	036 Call 0x1C17D08
	037 Move X1, X31
	038 Call Environment.GetResourceString, X0
	039 Move X19, X0
	040 Move X0, 0xE5D000
	041 Move X0, [X0+1224]
	042 Call 0x1C17D08
	043 Call 0x1C17F10
	044 Move X1, X19
	045 Move X2, X31
	046 Move X20, X0
	047 Call BadImageFormatException..ctor, X0, X1
	048 Move X0, 0xE5D000
	049 Move X0, [X0+2768]
	050 Call 0x1C17D08
	051 Move X1, X0
	052 Move X0, X20
	053 Call 0x1C17DEC

Method: System.Int32 GetNameHash(System.Int32 index)

Disassembly:
	0x032C9B78 BL 0x1C16D08
	0x032C9B7C MOV X1, X31
	0x032C9B80 BL 0x33BDD84
	0x032C9B84 MOV X20, X0
	0x032C9B88 ADRP X0, 0xE5C000
	0x032C9B8C LDR X0, [X0 + 0x4C8]
	0x032C9B90 BL 0x1C16D08
	0x032C9B94 BL 0x1C16F10
	0x032C9B98 MOV X1, X20
	0x032C9B9C MOV X2, X19
	0x032C9BA0 MOV X3, X31
	0x032C9BA4 MOV X21, X0
	0x032C9BA8 BL 0x3316800
	0x032C9BAC ADRP X0, 0xE5C000
	0x032C9BB0 LDR X0, [X0 + 0xB38]
	0x032C9BB4 BL 0x1C16D08
	0x032C9BB8 MOV X1, X0

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+112]
	003 Compare X8, 0
	004 JumpIfEqual {7}
	005 Move X8, [X0+56]
	006 Move W0, [X8]
	007 Move X8, [X0+48]
	008 Compare X8, 0
	009 JumpIfEqual {16}
	010 Move W9, [X8+24]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Add X8, X8, W1
	013 Move W0, [X8+32]
	014 Move X30, [X31+16]
	015 Return X0
	016 Call 0x1C17F20
	017 Call 0x1C17F28

Method: System.Int32 GetNamePosition(System.Int32 index)

Disassembly:
	0x032C9BBC MOV X0, X21
	0x032C9BC0 BL 0x1C16DEC
	0x032C9BC4 ADRP X0, 0xE32000
	0x032C9BC8 LDR X0, [X0 + 0x760]
	0x032C9BCC BL 0x1C16D08
	0x032C9BD0 LDR X8, [X19]
	0x032C9BD4 LDR X1, [X8]
	0x032C9BD8 BL 0x1C17270
	0x032C9BDC TBNZ X0, 0x0, 0x32C9B68
	0x032C9BE0 MOVZ W0, 0x8
	0x032C9BE4 BL 0x3EB1AF0
	0x032C9BE8 LDR X8, [X19]
	0x032C9BEC STR X8, [X0]
	0x032C9BF0 ADRP X1, 0xBEB000
	0x032C9BF4 ADD X1, X1, 0xE58
	0x032C9BF8 MOV X2, X31
	0x032C9BFC BL 0x3EB1B00
	0x032C9C00 MOV X19, X0
	0x032C9C04 BL 0x3EB1AE0
	0x032C9C08 MOV X0, X19
	0x032C9C0C BL 0x1D2C690
	0x032C9C10 BL 0x1990590
	0x032C9C14 STR X30, [X31 - 0x50]!
	0x032C9C18 STP X26, X25, [X31 + 0x10]
	0x032C9C1C STP X24, X23, [X31 + 0x20]
	0x032C9C20 STP X22, X21, [X31 + 0x30]
	0x032C9C24 STP X20, X19, [X31 + 0x40]
	0x032C9C28 ADRP X21, 0x1113000
	0x032C9C2C LDRB W8, [X21 + 0x8D7]
	0x032C9C30 MOV W20, W1
	0x032C9C34 MOV X19, X0
	0x032C9C38 TBNZ X8, 0x0, 0x32C9C74
	0x032C9C3C ADRP X0, 0xE5C000
	0x032C9C40 LDR X0, [X0 + 0xB40]
	0x032C9C44 BL 0x1C16CF4
	0x032C9C48 ADRP X0, 0xE53000
	0x032C9C4C LDR X0, [X0 + 0x4E8]
	0x032C9C50 BL 0x1C16CF4
	0x032C9C54 ADRP X0, 0xE32000
	0x032C9C58 LDR X0, [X0 + 0x5C8]
	0x032C9C5C BL 0x1C16CF4
	0x032C9C60 ADRP X0, 0xE2A000
	0x032C9C64 LDR X0, [X0 + 0x6C0]
	0x032C9C68 BL 0x1C16CF4
	0x032C9C6C MOVZ W8, 0x1
	0x032C9C70 STRB W8, [X21 + 0x8D7]
	0x032C9C74 TBNZ X20, 0x1F, 0x32C9EA0
	0x032C9C78 LDR X8, [X19 + 0x50]
	0x032C9C7C CBZ X8, 0x32C9E9C
	0x032C9C80 LDR W9, [X8 + 0x18]
	0x032C9C84 CMP W9, W20
	0x032C9C88 B.LE 0x32C9EA0
	0x032C9C8C B.LS 0x32C9EF0
	0x032C9C90 ADRP X25, 0xE53000
	0x032C9C94 LDR X25, [X25 + 0x4E8]
	0x032C9C98 MOV W24, W20
	0x032C9C9C ADD X8, X8, X24, 0x3, LSL
	0x032C9CA0 LDR X21, [X8 + 0x20]
	0x032C9CA4 LDR X0, [X25]
	0x032C9CA8 LDR W9, [X0 + 0xE0]
	0x032C9CAC CBNZ W9, 0x32C9CB4
	0x032C9CB0 BL 0x1C16DFC
	0x032C9CB4 MOV X0, X21
	0x032C9CB8 MOV X1, X31
	0x032C9CBC MOV X2, X31
	0x032C9CC0 BL 0x33A6674
	0x032C9CC4 TBZ X0, 0x0, 0x32C9E64
	0x032C9CC8 LDR X0, [X19 + 0x10]
	0x032C9CCC CBZ X0, 0x32C9E9C
	0x032C9CD0 LDR X8, [X0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+112]
	005 Compare X8, 0
	006 JumpIfEqual {13}
	007 Move X8, [X0+72]
	008 Move W8, [X8]
	009 Move TEMP, X8
	010 And TEMP, TEMP, -2147483648
	011 Compare TEMP, -2147483648
	012 JumpIfNotEqual {24}
	013 Move X8, [X0+64]
	014 Compare X8, 0
	015 JumpIfEqual {77}
	016 Move W9, [X8+24]
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Add X8, X8, W1
	019 Move W8, [X8+32]
	020 Move TEMP, X8
	021 And TEMP, TEMP, -2147483648
	022 Compare TEMP, -2147483648
	023 JumpIfEqual {33}
	024 Move X10, [X0+32]
	025 Move X9, [X0+40]
	026 Subtract X9, X9, X10
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move W0, W8
	031 Move X30, [X31+32]
	032 Return X0
	033 Move X0, 0xE2B000
	034 Move X0, [X0+2512]
	035 Move W20, W8
	036 Call 0x1C17D08
	037 Move W1, 1
	038 Call 0x1C17D6C
	039 Move X19, X0
	040 Move [X31+12], W20
	041 Move X0, 0xE2B000
	042 Move X0, [X0+1880]
	043 Call 0x1C17D08
	044 Add X1, X31, 12
	045 Call 0x1C17E04
	046 Move X20, X0
	047 Move X0, X19
	048 Call 0x19913C0
	049 Move X0, X19
	050 Move X1, X20
	051 Call 0x19990B4
	052 Move X0, X19
	053 Move X1, X31
	054 Move X2, X20
	055 Call 0x1994444
	056 Move X0, 0xE5D000
	057 Move X0, [X0+2776]
	058 Call 0x1C17D08
	059 Move X1, X19
	060 Move X2, X31
	061 Call Environment.GetResourceString, X0, X1
	062 Move X19, X0
	063 Move X0, 0xE58000
	064 Move X0, [X0+3080]
	065 Call 0x1C17D08
	066 Call 0x1C17F10
	067 Move X1, X19
	068 Move X2, X31
	069 Move X20, X0
	070 Call FormatException..ctor, X0, X1
	071 Move X0, 0xE5D000
	072 Move X0, [X0+2784]
	073 Call 0x1C17D08
	074 Move X1, X0
	075 Move X0, X20
	076 Call 0x1C17DEC
	077 Call 0x1C17F20
	078 Call 0x1C17F28

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x032C9CD4 LDP X9, X1, [X8 + 0x188]

ISIL:
No ISIL was generated
Method: System.Collections.IDictionaryEnumerator GetEnumerator()

Disassembly:
	0x032C9CD8 BLR X9
	0x032C9CDC CBZ X0, 0x32C9E9C
	0x032C9CE0 LDR X8, [X0]
	0x032C9CE4 LDP X9, X1, [X8 + 0x1F8]
	0x032C9CE8 BLR X9
	0x032C9CEC LDR X8, [X19 + 0x10]
	0x032C9CF0 MOV X21, X0
	0x032C9CF4 CBZ X8, 0x32C9F04
	0x032C9CF8 LDR X9, [X8]
	0x032C9CFC LDP X10, X1, [X9 + 0x188]
	0x032C9D00 MOV X0, X8
	0x032C9D04 BLR X10
	0x032C9D08 LDR X8, [X19 + 0x58]
	0x032C9D0C CBZ X8, 0x32C9F08
	0x032C9D10 LDR W9, [X8 + 0x18]
	0x032C9D14 CMP W9, W20
	0x032C9D18 B.LS 0x32C9F14
	0x032C9D1C CBZ X0, 0x32C9F18
	0x032C9D20 LDR X9, [X0]
	0x032C9D24 ADD X8, X8, X24, 0x2, LSL
	0x032C9D28 LDRSW X1, [X8 + 0x20]
	0x032C9D2C LDR X8, [X9 + 0x208]
	0x032C9D30 LDR X2, [X9 + 0x210]
	0x032C9D34 BLR X8
	0x032C9D38 LDR X0, [X19 + 0x10]
	0x032C9D3C CBZ X0, 0x32C9F1C
	0x032C9D40 LDR X8, [X0]
	0x032C9D44 LDR X1, [X8 + 0x2A0]
	0x032C9D48 LDR X9, [X8 + 0x298]
	0x032C9D4C BLR X9
	0x032C9D50 ADRP X8, 0xE2A000
	0x032C9D54 LDR X8, [X8 + 0x6C0]
	0x032C9D58 MOV X22, X0
	0x032C9D5C LDR X26, [X19 + 0x50]
	0x032C9D60 LDR X0, [X8]
	0x032C9D64 LDR W8, [X0 + 0xE0]
	0x032C9D68 CBNZ W8, 0x32C9D70
	0x032C9D6C BL 0x1C16DFC
	0x032C9D70 ADRP X8, 0xE32000
	0x032C9D74 ADRP X9, 0xE5C000
	0x032C9D78 LDR X8, [X8 + 0x5C8]
	0x032C9D7C LDR X9, [X9 + 0xB40]
	0x032C9D80 LDR X2, [X8]
	0x032C9D84 LDR X3, [X9]
	0x032C9D88 MOVZ W1, 0x1
	0x032C9D8C MOV X0, X22
	0x032C9D90 BL 0x1C170BC
	0x032C9D94 CBZ X26, 0x32C9F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1114000
	005 Move W8, [X20+2251]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE5D000
	012 Move X0, [X0+2584]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2251], W8
	016 Move X8, [X19+24]
	017 Compare X8, 0
	018 JumpIfEqual {35}
	019 Move X8, 0xE5D000
	020 Move X8, [X8+2584]
	021 Move X0, [X8]
	022 Call 0x1C17F10
	023 Move X1, X31
	024 Move X20, X0
	025 Call Object..ctor, X0
	026 Move X8, -41787392
	027 Move V0, [X8+912]
	028 Move [X20+16], X19
	029 Move X0, X20
	030 Move [X20+28], D0
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Return X0
	035 Move X0, 0xE5D000
	036 Move X0, [X0+2592]
	037 Call 0x1C17D08
	038 Move X1, X31
	039 Call Environment.GetResourceString, X0
	040 Move X19, X0
	041 Move X0, 0xE2B000
	042 Move X0, [X0+1456]
	043 Call 0x1C17D08
	044 Call 0x1C17F10
	045 Move X1, X19
	046 Move X2, X31
	047 Move X20, X0
	048 Call InvalidOperationException..ctor, X0, X1
	049 Move X0, 0xE5D000
	050 Move X0, [X0+2792]
	051 Call 0x1C17D08
	052 Move X1, X0
	053 Move X0, X20
	054 Call 0x1C17DEC

Method: System.Resources.ResourceReader/ResourceEnumerator GetEnumeratorInternal()

Disassembly:
	0x032C8430 CMP W11, W8
	0x032C8434 B.CC 0x32C8448
	0x032C8438 LDR X8, [X10 + 0xC8]
	0x032C843C LDR X8, [X8, X9, LSL #3]
	0x032C8440 CMP X8, X1
	0x032C8444 B.EQ 0x32C8450
	0x032C8448 BL 0x1C171E0
	0x032C844C STR X31, [X19 + 0x48]
	0x032C8450 LDRB W8, [X19 + 0x38]
	0x032C8454 CBZ W8, 0x32C8470
	0x032C8458 LDR X8, [X19 + 0x28]
	0x032C845C CBNZ X8, 0x32C8470
	0x032C8460 LDR X0, [X19 + 0x20]
	0x032C8464 ADD X1, X19, 0x3C
	0x032C8468 BL 0x32C7CBC
	0x032C846C STR X0, [X19 + 0x28]
	0x032C8470 LDP X20, X19, [X31 + 0x40]
	0x032C8474 LDP X22, X21, [X31 + 0x30]
	0x032C8478 LDP X24, X23, [X31 + 0x20]
	0x032C847C LDP X26, X25, [X31 + 0x10]
	0x032C8480 LDR X30, [X31], #0x50
	0x032C8484 RET
	0x032C8488 STP X30, X21, [X31 - 0x20]!
	0x032C848C STP X20, X19, [X31 + 0x10]
	0x032C8490 ADRP X21, 0x1114000
	0x032C8494 ADRP X20, 0xE5B000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1115000
	006 Move X21, 0xE5E000
	007 Move W8, [X20+2252]
	008 Move X21, [X21+2584]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE5E000
	015 Move X0, [X0+2584]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2252], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call Object..ctor, X0
	024 Move X8, -41783296
	025 Move V0, [X8+912]
	026 Move [X20+16], X19
	027 Move X0, X20
	028 Move [X20+28], D0
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return X0

Method: System.Int32 FindPosForResource(System.String name)

Disassembly:
	0x032C7D2C LDR X20, [X31 + 0x18]
	0x032C7D30 LDR W8, [X0 + 0xE0]
	0x032C7D34 CBNZ W8, 0x32C7D3C
	0x032C7D38 BL 0x1C16DFC
	0x032C7D3C MOV X0, X20
	0x032C7D40 MOV X1, X31
	0x032C7D44 BL 0x333C3F8
	0x032C7D48 B 0x32C7D68
	0x032C7D4C STR W31, [X20]
	0x032C7D50 LDR X0, [X21]
	0x032C7D54 LDR W8, [X0 + 0xE0]
	0x032C7D58 CBNZ W8, 0x32C7D60
	0x032C7D5C BL 0x1C16DFC
	0x032C7D60 MOV X0, X31
	0x032C7D64 BL 0x3338524
	0x032C7D68 LDP X20, X19, [X31 + 0x30]
	0x032C7D6C LDP X22, X21, [X31 + 0x20]
	0x032C7D70 LDR X30, [X31 + 0x10]
	0x032C7D74 ADD X31, X31, 0x40
	0x032C7D78 RET
	0x032C7D7C ADRP X0, 0xE2C000
	0x032C7D80 LDR X0, [X0 + 0x9D0]
	0x032C7D84 BL 0x1C16D08
	0x032C7D88 MOVZ W1, 0x1
	0x032C7D8C BL 0x1C16D6C
	0x032C7D90 MOV X19, X0
	0x032C7D94 STRH W22, [X31 + 0x8]
	0x032C7D98 ADRP X0, 0xE30000
	0x032C7D9C LDR X0, [X0 + 0x628]
	0x032C7DA0 BL 0x1C16D08
	0x032C7DA4 ADD X1, X31, 0x8
	0x032C7DA8 BL 0x1C16E04
	0x032C7DAC MOV X20, X0
	0x032C7DB0 MOV X0, X19
	0x032C7DB4 BL 0x19903C0
	0x032C7DB8 MOV X0, X19
	0x032C7DBC MOV X1, X20
	0x032C7DC0 BL 0x19980B4
	0x032C7DC4 MOV X0, X19
	0x032C7DC8 MOV X1, X31
	0x032C7DCC MOV X2, X20
	0x032C7DD0 BL 0x1993444
	0x032C7DD4 ADRP X0, 0xE5E000
	0x032C7DD8 LDR X0, [X0 + 0xA40]
	0x032C7DDC BL 0x1C16D08
	0x032C7DE0 MOV X1, X19
	0x032C7DE4 MOV X2, X31
	0x032C7DE8 BL 0x33BFB40
	0x032C7DEC MOV X19, X0
	0x032C7DF0 ADRP X0, 0xE34000
	0x032C7DF4 LDR X0, [X0 + 0x578]
	0x032C7DF8 BL 0x1C16D08
	0x032C7DFC BL 0x1C16F10
	0x032C7E00 MOV X1, X19
	0x032C7E04 MOV X2, X31
	0x032C7E08 MOV X20, X0
	0x032C7E0C BL 0x3314A68
	0x032C7E10 ADRP X0, 0xE5E000
	0x032C7E14 LDR X0, [X0 + 0xA48]
	0x032C7E18 BL 0x1C16D08
	0x032C7E1C MOV X1, X0
	0x032C7E20 MOV X0, X20
	0x032C7E24 BL 0x1C16DEC
	0x032C7E28 B 0x32C7E2C
	0x032C7E2C MOV X21, X0
	0x032C7E30 CMP W1, 0x1
	0x032C7E34 B.NE 0x32C7FC0
	0x032C7E38 MOV X0, X21
	0x032C7E3C BL 0x3EB1AD0
	0x032C7E40 MOV X21, X0
	0x032C7E44 ADRP X0, 0xE34000
	0x032C7E48 LDR X0, [X0 + 0x578]
	0x032C7E4C BL 0x1C16D08
	0x032C7E50 LDR X8, [X21]
	0x032C7E54 LDR X1, [X8]
	0x032C7E58 BL 0x1C17270
	0x032C7E5C TBZ X0, 0x0, 0x32C7ED4
	0x032C7E60 LDR X21, [X21]
	0x032C7E64 BL 0x3EB1AE0
	0x032C7E68 ADRP X0, 0xE36000
	0x032C7E6C LDR X0, [X0 + 0x968]
	0x032C7E70 BL 0x1C16D08
	0x032C7E74 MOV X22, X0
	0x032C7E78 ADRP X0, 0xE2C000
	0x032C7E7C LDR X0, [X0 + 0x6C0]
	0x032C7E80 BL 0x1C16D08
	0x032C7E84 LDR W8, [X0 + 0xE0]
	0x032C7E88 CBNZ W8, 0x32C7E90
	0x032C7E8C BL 0x1C16DFC
	0x032C7E90 MOV X0, X22
	0x032C7E94 MOV X1, X31
	0x032C7E98 BL 0x338C698
	0x032C7E9C CBZ X0, 0x32C7EF4
	0x032C7EA0 LDR X8, [X0]
	0x032C7EA4 LDR X9, [X8 + 0x2F8]
	0x032C7EA8 LDR X1, [X8 + 0x300]
	0x032C7EAC BLR X9
	0x032C7EB0 MOV X1, X0
	0x032C7EB4 MOV X0, X19
	0x032C7EB8 MOV X2, X31
	0x032C7EBC BL 0x32D5BF8
	0x032C7EC0 TBZ X0, 0x0, 0x32C7EF8
	0x032C7EC4 ADRP X0, 0xE2E000
	0x032C7EC8 LDR X0, [X0 + 0xC48]
	0x032C7ECC BL 0x1C16D08
	0x032C7ED0 B 0x32C7D54
	0x032C7ED4 MOVZ W0, 0x8
	0x032C7ED8 BL 0x3EB1AF0
	0x032C7EDC LDR X8, [X21]
	0x032C7EE0 STR X8, [X0]
	0x032C7EE4 ADRP X1, 0xBED000
	0x032C7EE8 ADD X1, X1, 0xE58
	0x032C7EEC MOV X2, X31
	0x032C7EF0 BL 0x3EB1B00
	0x032C7EF4 BL 0x1C16F20
	0x032C7EF8 ADRP X0, 0xE2C000
	0x032C7EFC LDR X0, [X0 + 0x9D0]
	0x032C7F00 BL 0x1C16D08
	0x032C7F04 MOVZ W1, 0x2
	0x032C7F08 BL 0x1C16D6C
	0x032C7F0C MOV X22, X0
	0x032C7F10 MOV X0, X19
	0x032C7F14 BL 0x19903C0
	0x032C7F18 LDR X8, [X19]
	0x032C7F1C MOV X0, X19
	0x032C7F20 LDP X9, X1, [X8 + 0x168]
	0x032C7F24 BLR X9
	0x032C7F28 MOV X19, X0
	0x032C7F2C MOV X0, X22
	0x032C7F30 BL 0x19903C0
	0x032C7F34 MOV X0, X22
	0x032C7F38 MOV X1, X19
	0x032C7F3C BL 0x19980B4
	0x032C7F40 MOV X0, X22
	0x032C7F44 MOV X1, X31
	0x032C7F48 MOV X2, X19
	0x032C7F4C BL 0x1993444
	0x032C7F50 MOV X0, X22
	0x032C7F54 BL 0x19903C0
	0x032C7F58 MOV X0, X22
	0x032C7F5C MOV X1, X20
	0x032C7F60 BL 0x19980B4
	0x032C7F64 MOVZ W1, 0x1
	0x032C7F68 MOV X0, X22
	0x032C7F6C MOV X2, X20
	0x032C7F70 BL 0x1993444
	0x032C7F74 ADRP X0, 0xE5E000
	0x032C7F78 LDR X0, [X0 + 0xA50]
	0x032C7F7C BL 0x1C16D08
	0x032C7F80 MOV X1, X22
	0x032C7F84 MOV X2, X31
	0x032C7F88 BL 0x33BFB40
	0x032C7F8C MOV X19, X0
	0x032C7F90 ADRP X0, 0xE34000
	0x032C7F94 LDR X0, [X0 + 0x578]
	0x032C7F98 BL 0x1C16D08
	0x032C7F9C BL 0x1C16F10
	0x032C7FA0 MOV X1, X19
	0x032C7FA4 MOV X2, X21
	0x032C7FA8 MOV X3, X31
	0x032C7FAC MOV X20, X0
	0x032C7FB0 BL 0x3315CC0
	0x032C7FB4 B 0x32C7E10
	0x032C7FB8 MOV X21, X0
	0x032C7FBC BL 0x3EB1AE0
	0x032C7FC0 MOV X0, X21
	0x032C7FC4 BL 0x1D2C690
	0x032C7FC8 BL 0x1990590
	0x032C7FCC STP X30, X23, [X31 - 0x30]!
	0x032C7FD0 STP X22, X21, [X31 + 0x10]
	0x032C7FD4 STP X20, X19, [X31 + 0x20]
	0x032C7FD8 ADRP X22, 0x1115000
	0x032C7FDC ADRP X23, 0xE5E000
	0x032C7FE0 LDRB W8, [X22 + 0x8C2]
	0x032C7FE4 LDR X23, [X23 + 0xA58]
	0x032C7FE8 MOV X19, X2
	0x032C7FEC MOV X20, X1
	0x032C7FF0 MOV X21, X0
	0x032C7FF4 TBNZ X8, 0x0, 0x32C800C
	0x032C7FF8 ADRP X0, 0xE5E000
	0x032C7FFC LDR X0, [X0 + 0xA58]
	0x032C8000 BL 0x1C16CF4
	0x032C8004 MOVZ W8, 0x1
	0x032C8008 STRB W8, [X22 + 0x8C2]
	0x032C800C LDR X1, [X23]
	0x032C8010 MOV X0, X21
	0x032C8014 BL 0x21A885C
	0x032C8018 CBZ X0, 0x32C802C
	0x032C801C LDR X8, [X0 + 0x10]
	0x032C8020 STR X8, [X20]
	0x032C8024 LDR W8, [X0 + 0x18]
	0x032C8028 STRH W8, [X19]
	0x032C802C LDP X20, X19, [X31 + 0x20]
	0x032C8030 LDP X22, X21, [X31 + 0x10]
	0x032C8034 CMP X0, 0x0
	0x032C8038 CSET W0, NE
	0x032C803C LDP X30, X23, [X31], #0x30
	0x032C8040 RET
	0x032C8044 STR X30, [X31 - 0x20]!
	0x032C8048 STP X20, X19, [X31 + 0x10]
	0x032C804C ADRP X20, 0x1114000
	0x032C8050 LDRB W8, [X20 + 0x8C3]
	0x032C8054 MOV X19, X0
	0x032C8058 TBNZ X8, 0x0, 0x32C8070
	0x032C805C ADRP X0, 0xE59000
	0x032C8060 LDR X0, [X0 + 0xAD0]
	0x032C8064 BL 0x1C16CF4
	0x032C8068 MOVZ W8, 0x1
	0x032C806C STRB W8, [X20 + 0x8C3]
	0x032C8070 MOV X0, X31
	0x032C8074 BL 0x32D5B04
	0x032C8078 CBZ X0, 0x32C80D8
	0x032C807C ADRP X8, 0xE59000
	0x032C8080 LDR X8, [X8 + 0xAD0]
	0x032C8084 LDR X9, [X0]
	0x032C8088 LDR X1, [X8]
	0x032C808C LDRB W10, [X9 + 0x130]
	0x032C8090 LDRB W8, [X1 + 0x130]
	0x032C8094 CMP W10, W8
	0x032C8098 B.CC 0x32C80E8
	0x032C809C LDR X10, [X9 + 0xC8]
	0x032C80A0 SUB X9, X8, 0x1
	0x032C80A4 LDR X10, [X10, X9, LSL #3]
	0x032C80A8 CMP X10, X1
	0x032C80AC B.NE 0x32C80E8
	0x032C80B0 STR X0, [X19 + 0x48]
	0x032C80B4 LDR X10, [X0]
	0x032C80B8 LDRB W11, [X10 + 0x130]
	0x032C80BC CMP W11, W8
	0x032C80C0 B.CC 0x32C80D4
	0x032C80C4 LDR X8, [X10 + 0xC8]
	0x032C80C8 LDR X8, [X8, X9, LSL #3]
	0x032C80CC CMP X8, X1
	0x032C80D0 B.EQ 0x32C80DC
	0x032C80D4 BL 0x1C171E0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x1116000
	011 Move X22, 0xE5F000
	012 Move W8, [X21+2253]
	013 Move X22, [X22+2456]
	014 Move X20, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xE5F000
	021 Move X0, [X0+2456]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2253], W8
	025 Move X0, [X22]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X20
	031 Call FastResourceComparer.HashFunction, X0
	032 Move W8, [X19+104]
	033 Subtract W25, W8, 1
	034 Move W22, W0
	035 Move W23, W31
	036 Move TEMP, 0
	037 Not TEMP
	038 Move W21, TEMP
	039 Add W8, W23, W25
	040 NotImplemented "Instruction SBFM not yet implemented."
	041 Move X0, X19
	042 Move W1, W24
	043 Call ResourceReader.GetNameHash, X0, X1
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Add W23, W24, 1
	047 Subtract W25, W24, 1
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move TEMP, 0
	050 Not TEMP
	051 Move W21, TEMP
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move W21, W23
	054 Move W23, W24
	055 Move W21, W23
	056 Subtract W23, W23, 1
	057 Move X0, X19
	058 Move W1, W23
	059 Call ResourceReader.GetNameHash, X0, X1
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move W23, W24
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move W8, [X19+104]
	064 Move W25, W23
	065 Subtract W8, W8, 1
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Add W23, W25, 1
	068 Move X0, X19
	069 Move W1, W23
	070 Call ResourceReader.GetNameHash, X0, X1
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move [X31+12], W31
	073 Add X1, X31, 12
	074 Move X0, X19
	075 Move X2, X31
	076 Call Monitor.Enter, X0, X1
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X0, [X19+16]
	079 Compare X0, 0
	080 JumpIfEqual {160}
	081 Move X8, [X0]
	082 Move X9, [X8+392]
	083 Move X1, [X8+400]
	084 NotImplemented "Instruction BLR not yet implemented."
	085 Move X23, [X19+32]
	086 Move X22, X0
	087 Move X0, X19
	088 Move W1, W21
	089 Call ResourceReader.GetNamePosition, X0, X1
	090 Compare X22, 0
	091 JumpIfEqual {159}
	092 Move X8, [X22]
	093 Add X1, X23, W0
	094 Move X9, [X8+824]
	095 Move X3, [X8+832]
	096 Move X0, X22
	097 Move W2, W31
	098 NotImplemented "Instruction BLR not yet implemented."
	099 Move X0, X19
	100 Move X1, X20
	101 Call ResourceReader.CompareStringEqualsName, X0, X1
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfEqual {111}
	106 Add W21, W21, 1
	107 Move X22, X31
	108 Move TEMP, 0
	109 Not TEMP
	110 Move W21, TEMP
	111 Move X0, [X19+16]
	112 Compare X0, 0
	113 JumpIfEqual {178}
	114 Move X8, [X0]
	115 Move X1, [X8+560]
	116 Move X9, [X8+552]
	117 NotImplemented "Instruction BLR not yet implemented."
	118 Move W21, W0
	119 Move TEMP, X0
	120 And TEMP, TEMP, -2147483648
	121 Compare TEMP, -2147483648
	122 JumpIfEqual {163}
	123 Move X0, [X19+16]
	124 Compare X0, 0
	125 JumpIfEqual {179}
	126 Move X8, [X0]
	127 Move X9, [X8+392]
	128 Move X1, [X8+400]
	129 NotImplemented "Instruction BLR not yet implemented."
	130 Compare X0, 0
	131 JumpIfEqual {180}
	132 Move X8, [X0]
	133 Move X9, [X8+488]
	134 Move X1, [X8+496]
	135 NotImplemented "Instruction BLR not yet implemented."
	136 Move X8, [X19+40]
	137 Subtract X8, X0, X8
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X22, X31
	140 Move W8, [X31+12]
	141 Compare W8, 0
	142 JumpIfEqual {146}
	143 Move X0, X19
	144 Move X1, X31
	145 Call Monitor.Exit, X0
	146 Compare X22, 0
	147 JumpIfNotEqual {161}
	148 Move W0, W21
	149 Move X20, [X31+64]
	150 Move X19, [X31+72]
	151 Move X22, [X31+48]
	152 Move X21, [X31+56]
	153 Move X24, [X31+32]
	154 Move X23, [X31+40]
	155 Move X30, [X31+16]
	156 Move X25, [X31+24]
	157 Add X31, X31, 80
	158 Return X0
	159 Call 0x1C17F20
	160 Call 0x1C17F20
	161 Move X0, X22
	162 Call 0x1C17F18
	163 Move X0, 0xE2D000
	164 Move X0, [X0+2512]
	165 Call 0x1C17D08
	166 Move W1, 1
	167 Call 0x1C17D6C
	168 Move X20, X0
	169 Move [X31+8], W21
	170 Move X0, 0xE2D000
	171 Move X0, [X0+1880]
	172 Call 0x1C17D08
	173 Add X1, X31, 8
	174 Call 0x1C17E04
	175 Compare X20, 0
	176 JumpIfNotEqual {181}
	177 Call 0x1C17F20
	178 Call 0x1C17F20
	179 Call 0x1C17F20
	180 Call 0x1C17F20
	181 Move X21, X0
	182 Compare X0, 0
	183 JumpIfNotEqual {188}
	184 Move W8, [X20+24]
	185 Compare W8, 0
	186 JumpIfNotEqual {197}
	187 Call 0x1C17F28
	188 Move X8, [X20]
	189 Move X1, [X8+64]
	190 Move X0, X21
	191 Call 0x1C17E00
	192 Compare X0, 0
	193 JumpIfNotEqual {184}
	194 Call 0x1C17F44
	195 Move X1, X31
	196 Call 0x1C17DEC
	197 Move [X20+32], X21
	198 Move X0, 0xE5F000
	199 Move X0, [X0+2544]
	200 Call 0x1C17D08
	201 Move X1, X20
	202 Move X2, X31
	203 Call Environment.GetResourceString, X0, X1
	204 Move X20, X0
	205 Move X0, 0xE59000
	206 Move X0, [X0+3080]
	207 Call 0x1C17D08
	208 Call 0x1C17F10
	209 Move X21, X0
	210 Move X1, X20
	211 Move X2, X31
	212 Call FormatException..ctor, X0, X1
	213 Move X0, 0xE5E000
	214 Move X0, [X0+2552]
	215 Call 0x1C17D08
	216 Move X1, X0
	217 Move X0, X21
	218 Call 0x1C17DEC
	219 Move X20, X0
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Move X0, X20
	222 Call 0x3EB2AD0
	223 Move X22, [X0]
	224 Call 0x3EB2AE0
	225 Move X22, X31
	226 Move X20, X0
	227 Move W8, [X31+12]
	228 Compare W8, 0
	229 JumpIfEqual {233}
	230 Move X0, X19
	231 Move X1, X31
	232 Call Monitor.Exit, X0
	233 Compare X22, 0
	234 JumpIfNotEqual {237}
	235 Move X0, X20
	236 Call 0x1D2D690
	237 Move X0, X22
	238 Call 0x1C17F18
	239 Call 0x1991590

Method: System.Boolean CompareStringEqualsName(System.String name)

Disassembly:
	0x032C9DCC LDR X8, [X26]
	0x032C9DD0 LDR X1, [X8 + 0x40]
	0x032C9DD4 MOV X0, X23
	0x032C9DD8 BL 0x1C16E00
	0x032C9DDC CBZ X0, 0x32C9F28
	0x032C9DE0 LDR X8, [X23]
	0x032C9DE4 LDR X1, [X25]
	0x032C9DE8 LDRB W10, [X8 + 0x130]
	0x032C9DEC LDRB W9, [X1 + 0x130]
	0x032C9DF0 CMP W10, W9
	0x032C9DF4 B.CC 0x32C9EFC
	0x032C9DF8 LDR X8, [X8 + 0xC8]
	0x032C9DFC ADD X8, X8, X9, 0x3, LSL
	0x032C9E00 LDUR X8, [X8 - 0x8]
	0x032C9E04 CMP X8, X1
	0x032C9E08 B.NE 0x32C9EFC
	0x032C9E0C LDR W8, [X26 + 0x18]
	0x032C9E10 CMP W8, W20
	0x032C9E14 B.LS 0x32C9F24
	0x032C9E18 ADD X8, X26, X24, 0x3, LSL
	0x032C9E1C MOV X22, X31
	0x032C9E20 STR X23, [X8 + 0x20]
	0x032C9E24 MOVZ W23, 0x6
	0x032C9E28 LDR X0, [X19 + 0x10]
	0x032C9E2C CBZ X0, 0x32C9E9C
	0x032C9E30 LDR X8, [X0]
	0x032C9E34 LDP X9, X1, [X8 + 0x188]
	0x032C9E38 BLR X9
	0x032C9E3C CBZ X0, 0x32C9E9C
	0x032C9E40 LDR X8, [X0]
	0x032C9E44 MOV X1, X21
	0x032C9E48 LDR X9, [X8 + 0x208]
	0x032C9E4C LDR X2, [X8 + 0x210]
	0x032C9E50 BLR X9
	0x032C9E54 CBNZ X22, 0x32C9F0C
	0x032C9E58 CMP W23, 0x6
	0x032C9E5C B.EQ 0x32C9E64
	0x032C9E60 CBNZ W23, 0x32C9E80
	0x032C9E64 LDR X8, [X19 + 0x50]
	0x032C9E68 CBZ X8, 0x32C9E9C
	0x032C9E6C LDR W9, [X8 + 0x18]
	0x032C9E70 CMP W9, W20
	0x032C9E74 B.LS 0x32C9EF0
	0x032C9E78 ADD X8, X8, X24, 0x3, LSL
	0x032C9E7C LDR X8, [X8 + 0x20]
	0x032C9E80 LDP X20, X19, [X31 + 0x40]
	0x032C9E84 LDP X22, X21, [X31 + 0x30]
	0x032C9E88 LDP X24, X23, [X31 + 0x20]
	0x032C9E8C LDP X26, X25, [X31 + 0x10]
	0x032C9E90 MOV X0, X8
	0x032C9E94 LDR X30, [X31], #0x50
	0x032C9E98 RET
	0x032C9E9C BL 0x1C16F20
	0x032C9EA0 ADRP X0, 0xE5C000
	0x032C9EA4 LDR X0, [X0 + 0xB48]
	0x032C9EA8 BL 0x1C16D08
	0x032C9EAC MOV X1, X31
	0x032C9EB0 BL 0x33BDD84
	0x032C9EB4 MOV X19, X0
	0x032C9EB8 ADRP X0, 0xE5C000
	0x032C9EBC LDR X0, [X0 + 0x4C8]
	0x032C9EC0 BL 0x1C16D08
	0x032C9EC4 BL 0x1C16F10
	0x032C9EC8 MOV X1, X19
	0x032C9ECC MOV X2, X31
	0x032C9ED0 MOV X20, X0
	0x032C9ED4 BL 0x33167DC
	0x032C9ED8 ADRP X0, 0xE5C000
	0x032C9EDC LDR X0, [X0 + 0xB40]
	0x032C9EE0 BL 0x1C16D08
	0x032C9EE4 MOV X1, X0
	0x032C9EE8 MOV X0, X20
	0x032C9EEC BL 0x1C16DEC
	0x032C9EF0 BL 0x1C16F28
	0x032C9EF4 MOV X0, X23
	0x032C9EF8 BL 0x1C171E0
	0x032C9EFC MOV X0, X23
	0x032C9F00 BL 0x1C171E0
	0x032C9F04 BL 0x1C16F20
	0x032C9F08 BL 0x1C16F20
	0x032C9F0C MOV X0, X22
	0x032C9F10 BL 0x1C16F18
	0x032C9F14 BL 0x1C16F28
	0x032C9F18 BL 0x1C16F20
	0x032C9F1C BL 0x1C16F20
	0x032C9F20 BL 0x1C16F20
	0x032C9F24 BL 0x1C16F28
	0x032C9F28 BL 0x1C16F44
	0x032C9F2C MOV X1, X31
	0x032C9F30 BL 0x1C16DEC
	0x032C9F34 B 0x32C9F50
	0x032C9F38 B 0x32C9F50
	0x032C9F3C B 0x32C9F50
	0x032C9F40 B 0x32C9F50
	0x032C9F44 B 0x32C9F50
	0x032C9F48 B 0x32C9F50
	0x032C9F4C B 0x32C9F50
	0x032C9F50 MOV X23, X0
	0x032C9F54 CMP W1, 0x1
	0x032C9F58 B.NE 0x32C9F74
	0x032C9F5C MOV X0, X23
	0x032C9F60 BL 0x3EB1AD0
	0x032C9F64 LDR X22, [X0]
	0x032C9F68 BL 0x3EB1AE0
	0x032C9F6C MOV W23, W31
	0x032C9F70 B 0x32C9E28
	0x032C9F74 MOV X22, X31
	0x032C9F78 B 0x32C9F80
	0x032C9F7C MOV X23, X0
	0x032C9F80 LDR X0, [X19 + 0x10]
	0x032C9F84 CBNZ X0, 0x32C9F8C
	0x032C9F88 BL 0x1C16F20
	0x032C9F8C LDR X8, [X0]
	0x032C9F90 LDP X9, X1, [X8 + 0x188]
	0x032C9F94 BLR X9
	0x032C9F98 CBNZ X0, 0x32C9FA0
	0x032C9F9C BL 0x1C16F20
	0x032C9FA0 LDR X8, [X0]
	0x032C9FA4 LDR X9, [X8 + 0x208]
	0x032C9FA8 LDR X2, [X8 + 0x210]
	0x032C9FAC MOV X1, X21
	0x032C9FB0 BLR X9
	0x032C9FB4 CBNZ X22, 0x32C9FC0
	0x032C9FB8 MOV X0, X23
	0x032C9FBC BL 0x1D2C690
	0x032C9FC0 MOV X0, X22
	0x032C9FC4 BL 0x1C16F18
	0x032C9FC8 BL 0x1990590
	0x032C9FCC STR X30, [X31 - 0x10]!

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x1114000
	009 Move W8, [X20+2254]
	010 Move X19, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xE2B000
	017 Move X0, [X0+1560]
	018 Call 0x1C17CF4
	019 Move X0, 0xE5D000
	020 Move X0, [X0+2456]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+2254], W8
	024 Move X0, [X21+16]
	025 Compare X0, 0
	026 JumpIfEqual {122}
	027 Move X1, X31
	028 Call BinaryReader.Read7BitEncodedInt, X0
	029 Move TEMP, X0
	030 And TEMP, TEMP, -2147483648
	031 Compare TEMP, -2147483648
	032 JumpIfEqual {143}
	033 Move X24, 0xE5D000
	034 Move W20, W0
	035 Move X0, [X21+112]
	036 Move X24, [X24+2456]
	037 Compare X0, 0
	038 JumpIfEqual {79}
	039 Move X1, X31
	040 Call UnmanagedMemoryStream.get_PositionPointer, X0
	041 Move X8, [X21+112]
	042 Compare X8, 0
	043 JumpIfEqual {122}
	044 Move X9, [X8]
	045 Move X22, X0
	046 Move W1, W20
	047 Move W2, 1
	048 Move X10, [X9+824]
	049 Move X3, [X9+832]
	050 Move X0, X8
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move X0, [X21+112]
	053 Compare X0, 0
	054 JumpIfEqual {122}
	055 Move X8, [X0]
	056 Move X9, [X8+504]
	057 Move X1, [X8+512]
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move X8, [X21+112]
	060 Compare X8, 0
	061 JumpIfEqual {122}
	062 Move X9, [X8]
	063 Move X21, X0
	064 Move X0, X8
	065 Move X10, [X9+488]
	066 Move X1, [X9+496]
	067 NotImplemented "Instruction BLR not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 NotImplemented "Instruction CSEL not yet implemented."
	070 Move X0, [X24]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Move X0, X21
	076 Move W1, W20
	077 Move X2, X19
	078 Call FastResourceComparer.CompareOrdinal, X0, X1, X2
	079 Move X8, 0xE2B000
	080 Move X8, [X8+1560]
	081 Move W1, W20
	082 Move X0, [X8]
	083 Call 0x1C17D6C
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X22, X0
	086 Move W23, W20
	087 Move X0, [X21+16]
	088 Compare X0, 0
	089 JumpIfEqual {122}
	090 Move X8, [X0]
	091 Subtract W2, W20, W23
	092 Move X1, X22
	093 Move W3, W23
	094 Move X9, [X8+696]
	095 Move X4, [X8+704]
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Compare W0, 0
	098 JumpIfEqual {123}
	099 Subtract W23, W23, W0
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X0, [X24]
	102 Move W8, [X0+224]
	103 Compare W8, 0
	104 JumpIfNotEqual {106}
	105 Call 0x1C17DFC
	106 NotImplemented "Instruction CMP not yet implemented."
	107 NotImplemented "Instruction CINC not yet implemented."
	108 NotImplemented "Instruction SBFM not yet implemented."
	109 Move X0, X22
	110 Move X2, X19
	111 Call FastResourceComparer.CompareOrdinal, X0, X1, X2
	112 Move X20, [X31+48]
	113 Move X19, [X31+56]
	114 Move X22, [X31+32]
	115 Move X21, [X31+40]
	116 Move X24, [X31+16]
	117 Move X23, [X31+24]
	118 NotImplemented "Instruction CMP not yet implemented."
	119 NotImplemented "Instruction CSET not yet implemented."
	120 Move X30, [X31+64]
	121 Return X0
	122 Call 0x1C17F20
	123 Move X0, 0xE5D000
	124 Move X0, [X0+2800]
	125 Call 0x1C17D08
	126 Move X1, X31
	127 Call Environment.GetResourceString, X0
	128 Move X19, X0
	129 Move X0, 0xE5D000
	130 Move X0, [X0+1224]
	131 Call 0x1C17D08
	132 Call 0x1C17F10
	133 Move X1, X19
	134 Move X2, X31
	135 Move X20, X0
	136 Call BadImageFormatException..ctor, X0, X1
	137 Move X0, 0xE5D000
	138 Move X0, [X0+2808]
	139 Call 0x1C17D08
	140 Move X1, X0
	141 Move X0, X20
	142 Call 0x1C17DEC
	143 Move X0, 0xE5D000
	144 Move X0, [X0+2760]
	145 Move X0, 0xE5D000
	146 Move X0, [X0+2816]

Method: System.String AllocateStringForNameIndex(System.Int32 index, out System.Int32 dataOffset)

Disassembly:
	0x032C9FD0 STR W31, [X31 + 0xC]
	0x032C9FD4 LDR W8, [X0 + 0x78]
	0x032C9FD8 CMP W8, 0x1
	0x032C9FDC B.NE 0x32C9FE8
	0x032C9FE0 BL 0x32C9A24
	0x032C9FE4 B 0x32C9FF0
	0x032C9FE8 ADD X2, X31, 0xC
	0x032C9FEC BL 0x32C9B1C
	0x032C9FF0 LDR X30, [X31], #0x10
	0x032C9FF4 RET
	0x032C9FF8 SUB X31, X31, 0x70
	0x032C9FFC STR X30, [X31 + 0x30]
	0x032CA000 STP X24, X23, [X31 + 0x40]
	0x032CA004 STP X22, X21, [X31 + 0x50]
	0x032CA008 STP X20, X19, [X31 + 0x60]
	0x032CA00C MRS X23, 0xC000
	0x032CA010 LDR X8, [X23 + 0x28]
	0x032CA014 ADRP X21, 0x1112000
	0x032CA018 MOV W20, W1
	0x032CA01C MOV X19, X0
	0x032CA020 STR X8, [X31 + 0x28]
	0x032CA024 LDRB W8, [X21 + 0x8D2]
	0x032CA028 TBNZ X8, 0x0, 0x32CA190
	0x032CA02C ADRP X0, 0xE50000
	0x032CA030 LDR X0, [X0 + 0xD68]
	0x032CA034 BL 0x1C16CF4
	0x032CA038 ADRP X0, 0xE2A000
	0x032CA03C LDR X0, [X0 + 0x9D8]
	0x032CA040 BL 0x1C16CF4
	0x032CA044 ADRP X0, 0xE5A000
	0x032CA048 LDR X0, [X0 + 0xF38]
	0x032CA04C BL 0x1C16CF4
	0x032CA050 ADRP X0, 0xE2A000
	0x032CA054 LDR X0, [X0 + 0x9F0]
	0x032CA058 BL 0x1C16CF4
	0x032CA05C ADRP X0, 0xE5B000
	0x032CA060 LDR X0, [X0 + 0x140]
	0x032CA064 BL 0x1C16CF4
	0x032CA068 ADRP X0, 0xE51000
	0x032CA06C LDR X0, [X0 + 0x5F0]
	0x032CA070 BL 0x1C16CF4
	0x032CA074 ADRP X0, 0xE51000
	0x032CA078 LDR X0, [X0 + 0xA78]
	0x032CA07C BL 0x1C16CF4
	0x032CA080 ADRP X0, 0xE2C000
	0x032CA084 LDR X0, [X0 + 0x978]
	0x032CA088 BL 0x1C16CF4
	0x032CA08C ADRP X0, 0xE50000
	0x032CA090 LDR X0, [X0 + 0xD78]
	0x032CA094 BL 0x1C16CF4
	0x032CA098 ADRP X0, 0xE2D000
	0x032CA09C LDR X0, [X0 + 0x628]
	0x032CA0A0 BL 0x1C16CF4
	0x032CA0A4 ADRP X0, 0xE2A000
	0x032CA0A8 LDR X0, [X0 + 0xE58]
	0x032CA0AC BL 0x1C16CF4
	0x032CA0B0 ADRP X0, 0xE50000
	0x032CA0B4 LDR X0, [X0 + 0xD80]
	0x032CA0B8 BL 0x1C16CF4
	0x032CA0BC ADRP X0, 0xE29000
	0x032CA0C0 LDR X0, [X0 + 0x758]
	0x032CA0C4 BL 0x1C16CF4
	0x032CA0C8 ADRP X0, 0xE50000
	0x032CA0CC LDR X0, [X0 + 0xD88]
	0x032CA0D0 BL 0x1C16CF4
	0x032CA0D4 ADRP X0, 0xE2B000
	0x032CA0D8 LDR X0, [X0 + 0xA60]
	0x032CA0DC BL 0x1C16CF4
	0x032CA0E0 ADRP X0, 0xE50000
	0x032CA0E4 LDR X0, [X0 + 0xD90]
	0x032CA0E8 BL 0x1C16CF4
	0x032CA0EC ADRP X0, 0xE52000
	0x032CA0F0 LDR X0, [X0 + 0x6B0]
	0x032CA0F4 BL 0x1C16CF4
	0x032CA0F8 ADRP X0, 0xE51000
	0x032CA0FC LDR X0, [X0 + 0xA80]
	0x032CA100 BL 0x1C16CF4
	0x032CA104 ADRP X0, 0xE29000
	0x032CA108 LDR X0, [X0 + 0xA90]
	0x032CA10C BL 0x1C16CF4
	0x032CA110 ADRP X0, 0xE51000
	0x032CA114 LDR X0, [X0 + 0xB60]
	0x032CA118 BL 0x1C16CF4
	0x032CA11C ADRP X0, 0xE5B000
	0x032CA120 LDR X0, [X0 + 0x180]
	0x032CA124 BL 0x1C16CF4
	0x032CA128 ADRP X0, 0xE2B000
	0x032CA12C LDR X0, [X0 + 0x570]
	0x032CA130 BL 0x1C16CF4
	0x032CA134 ADRP X0, 0xE29000
	0x032CA138 LDR X0, [X0 + 0x6C0]
	0x032CA13C BL 0x1C16CF4
	0x032CA140 ADRP X0, 0xE50000
	0x032CA144 LDR X0, [X0 + 0xD98]
	0x032CA148 BL 0x1C16CF4
	0x032CA14C ADRP X0, 0xE2E000
	0x032CA150 LDR X0, [X0 + 0x658]
	0x032CA154 BL 0x1C16CF4
	0x032CA158 ADRP X0, 0xE50000
	0x032CA15C LDR X0, [X0 + 0xDA0]
	0x032CA160 BL 0x1C16CF4
	0x032CA164 ADRP X0, 0xE31000
	0x032CA168 LDR X0, [X0 + 0x720]
	0x032CA16C BL 0x1C16CF4
	0x032CA170 ADRP X0, 0xE50000
	0x032CA174 LDR X0, [X0 + 0xDA8]
	0x032CA178 BL 0x1C16CF4
	0x032CA17C ADRP X0, 0xE2A000
	0x032CA180 LDR X0, [X0 + 0x758]
	0x032CA184 BL 0x1C16CF4
	0x032CA188 MOVZ W8, 0x1
	0x032CA18C STRB W8, [X21 + 0x8D2]
	0x032CA190 LDR X0, [X19 + 0x10]
	0x032CA194 CBZ X0, 0x32CA834
	0x032CA198 LDR X8, [X0]
	0x032CA19C LDP X9, X1, [X8 + 0x188]
	0x032CA1A0 BLR X9
	0x032CA1A4 CBZ X0, 0x32CA834
	0x032CA1A8 LDR X8, [X0]
	0x032CA1AC LDR X9, [X19 + 0x28]
	0x032CA1B0 MOV W2, W31
	0x032CA1B4 LDR X10, [X8 + 0x338]
	0x032CA1B8 LDR X3, [X8 + 0x340]
	0x032CA1BC ADD X1, X9, W20, SXTW
	0x032CA1C0 BLR X10
	0x032CA1C4 LDR X0, [X19 + 0x10]
	0x032CA1C8 CBZ X0, 0x32CA834
	0x032CA1CC MOV X1, X31
	0x032CA1D0 BL 0x32F5EE4
	0x032CA1D4 ADDS W31, W0, 0x1
	0x032CA1D8 B.EQ 0x32CA254
	0x032CA1DC ADRP X21, 0xE51000
	0x032CA1E0 ADRP X24, 0xE29000
	0x032CA1E4 LDR X21, [X21 + 0xB60]
	0x032CA1E8 LDR X24, [X24 + 0x6C0]
	0x032CA1EC MOV W20, W0
	0x032CA1F0 MOV X0, X19
	0x032CA1F4 MOV W1, W20
	0x032CA1F8 BL 0x32C9C14
	0x032CA1FC LDR X8, [X24]
	0x032CA200 LDR X22, [X21]
	0x032CA204 MOV X21, X0
	0x032CA208 LDR W9, [X8 + 0xE0]
	0x032CA20C CBNZ W9, 0x32CA218
	0x032CA210 MOV X0, X8
	0x032CA214 BL 0x1C16DFC
	0x032CA218 MOV X0, X22
	0x032CA21C MOV X1, X31
	0x032CA220 BL 0x338C698
	0x032CA224 MOV X1, X0
	0x032CA228 MOV X0, X21
	0x032CA22C MOV X2, X31
	0x032CA230 BL 0x3395194
	0x032CA234 TBZ X0, 0x0, 0x32CA25C
	0x032CA238 LDR X0, [X19 + 0x10]
	0x032CA23C CBZ X0, 0x32CA834
	0x032CA240 LDR X8, [X0]
	0x032CA244 LDR X9, [X8 + 0x298]
	0x032CA248 LDR X1, [X8 + 0x2A0]
	0x032CA24C BLR X9
	0x032CA250 B 0x32CA38C
	0x032CA254 MOV X0, X31
	0x032CA258 B 0x32CA38C
	0x032CA25C ADRP X8, 0xE50000
	0x032CA260 LDR X0, [X24]
	0x032CA264 LDR X8, [X8 + 0xD80]
	0x032CA268 LDR W9, [X0 + 0xE0]
	0x032CA26C LDR X22, [X8]
	0x032CA270 CBNZ W9, 0x32CA278
	0x032CA274 BL 0x1C16DFC
	0x032CA278 MOV X0, X22
	0x032CA27C MOV X1, X31
	0x032CA280 BL 0x338C698
	0x032CA284 MOV X1, X0
	0x032CA288 MOV X0, X21
	0x032CA28C MOV X2, X31
	0x032CA290 BL 0x3395194
	0x032CA294 TBZ X0, 0x0, 0x32CA2C4
	0x032CA298 LDR X0, [X19 + 0x10]
	0x032CA29C CBZ X0, 0x32CA834
	0x032CA2A0 LDR X8, [X0]
	0x032CA2A4 LDR X9, [X8 + 0x228]
	0x032CA2A8 LDR X1, [X8 + 0x230]
	0x032CA2AC BLR X9
	0x032CA2B0 ADRP X8, 0xE29000
	0x032CA2B4 LDR X8, [X8 + 0x758]
	0x032CA2B8 LDR X8, [X8]
	0x032CA2BC STR W0, [X31 + 0x18]
	0x032CA2C0 B 0x32CA380
	0x032CA2C4 ADRP X8, 0xE50000
	0x032CA2C8 LDR X0, [X24]
	0x032CA2CC LDR X8, [X8 + 0xD68]
	0x032CA2D0 LDR W9, [X0 + 0xE0]
	0x032CA2D4 LDR X22, [X8]
	0x032CA2D8 CBNZ W9, 0x32CA2E0
	0x032CA2DC BL 0x1C16DFC
	0x032CA2E0 MOV X0, X22
	0x032CA2E4 MOV X1, X31
	0x032CA2E8 BL 0x338C698
	0x032CA2EC MOV X1, X0
	0x032CA2F0 MOV X0, X21
	0x032CA2F4 MOV X2, X31
	0x032CA2F8 BL 0x3395194
	0x032CA2FC TBZ X0, 0x0, 0x32CA320
	0x032CA300 LDR X0, [X19 + 0x10]
	0x032CA304 CBZ X0, 0x32CA834
	0x032CA308 LDR X8, [X0]
	0x032CA30C LDP X9, X1, [X8 + 0x1D8]
	0x032CA310 BLR X9
	0x032CA314 ADRP X8, 0xE2A000
	0x032CA318 LDR X8, [X8 + 0x9D8]
	0x032CA31C B 0x32CA378
	0x032CA320 ADRP X8, 0xE50000
	0x032CA324 LDR X0, [X24]
	0x032CA328 LDR X8, [X8 + 0xD90]
	0x032CA32C LDR W9, [X0 + 0xE0]
	0x032CA330 LDR X22, [X8]
	0x032CA334 CBNZ W9, 0x32CA33C
	0x032CA338 BL 0x1C16DFC
	0x032CA33C MOV X0, X22
	0x032CA340 MOV X1, X31
	0x032CA344 BL 0x338C698
	0x032CA348 MOV X1, X0
	0x032CA34C MOV X0, X21
	0x032CA350 MOV X2, X31
	0x032CA354 BL 0x3395194
	0x032CA358 TBZ X0, 0x0, 0x32CA3B4
	0x032CA35C LDR X0, [X19 + 0x10]
	0x032CA360 CBZ X0, 0x32CA834
	0x032CA364 LDR X8, [X0]
	0x032CA368 LDP X9, X1, [X8 + 0x1E8]
	0x032CA36C BLR X9
	0x032CA370 ADRP X8, 0xE52000
	0x032CA374 LDR X8, [X8 + 0x6B0]
	0x032CA378 LDR X8, [X8]
	0x032CA37C STRB W0, [X31 + 0x18]
	0x032CA380 ADD X1, X31, 0x18
	0x032CA384 MOV X0, X8
	0x032CA388 BL 0x1C16E04
	0x032CA38C LDR X8, [X23 + 0x28]
	0x032CA390 LDR X9, [X31 + 0x28]
	0x032CA394 CMP X8, X9
	0x032CA398 B.NE 0x32CA83C
	0x032CA39C LDP X20, X19, [X31 + 0x60]
	0x032CA3A0 LDP X22, X21, [X31 + 0x50]
	0x032CA3A4 LDP X24, X23, [X31 + 0x40]
	0x032CA3A8 LDR X30, [X31 + 0x30]
	0x032CA3AC ADD X31, X31, 0x70
	0x032CA3B0 RET
	0x032CA3B4 ADRP X8, 0xE50000
	0x032CA3B8 LDR X0, [X24]
	0x032CA3BC LDR X8, [X8 + 0xD78]
	0x032CA3C0 LDR W9, [X0 + 0xE0]
	0x032CA3C4 LDR X22, [X8]
	0x032CA3C8 CBNZ W9, 0x32CA3D0
	0x032CA3CC BL 0x1C16DFC
	0x032CA3D0 MOV X0, X22
	0x032CA3D4 MOV X1, X31
	0x032CA3D8 BL 0x338C698
	0x032CA3DC MOV X1, X0
	0x032CA3E0 MOV X0, X21
	0x032CA3E4 MOV X2, X31
	0x032CA3E8 BL 0x3395194
	0x032CA3EC TBZ X0, 0x0, 0x32CA41C
	0x032CA3F0 LDR X0, [X19 + 0x10]
	0x032CA3F4 CBZ X0, 0x32CA834
	0x032CA3F8 LDR X8, [X0]
	0x032CA3FC LDR X9, [X8 + 0x208]
	0x032CA400 LDR X1, [X8 + 0x210]
	0x032CA404 BLR X9
	0x032CA408 ADRP X8, 0xE2D000
	0x032CA40C LDR X8, [X8 + 0x628]
	0x032CA410 LDR X8, [X8]
	0x032CA414 STRH W0, [X31 + 0x18]
	0x032CA418 B 0x32CA380
	0x032CA41C ADRP X8, 0xE50000
	0x032CA420 LDR X0, [X24]
	0x032CA424 LDR X8, [X8 + 0xD88]
	0x032CA428 LDR W9, [X0 + 0xE0]
	0x032CA42C LDR X22, [X8]
	0x032CA430 CBNZ W9, 0x32CA438
	0x032CA434 BL 0x1C16DFC
	0x032CA438 MOV X0, X22
	0x032CA43C MOV X1, X31
	0x032CA440 BL 0x338C698
	0x032CA444 MOV X1, X0
	0x032CA448 MOV X0, X21
	0x032CA44C MOV X2, X31
	0x032CA450 BL 0x3395194
	0x032CA454 TBZ X0, 0x0, 0x32CA484
	0x032CA458 LDR X0, [X19 + 0x10]
	0x032CA45C CBZ X0, 0x32CA834
	0x032CA460 LDR X8, [X0]
	0x032CA464 LDR X9, [X8 + 0x248]
	0x032CA468 LDR X1, [X8 + 0x250]
	0x032CA46C BLR X9
	0x032CA470 ADRP X8, 0xE2B000
	0x032CA474 LDR X8, [X8 + 0xA60]
	0x032CA478 LDR X8, [X8]
	0x032CA47C STR X0, [X31 + 0x18]
	0x032CA480 B 0x32CA380
	0x032CA484 ADRP X8, 0xE50000
	0x032CA488 LDR X0, [X24]
	0x032CA48C LDR X8, [X8 + 0xD98]
	0x032CA490 LDR W9, [X0 + 0xE0]
	0x032CA494 LDR X22, [X8]
	0x032CA498 CBNZ W9, 0x32CA4A0
	0x032CA49C BL 0x1C16DFC
	0x032CA4A0 MOV X0, X22
	0x032CA4A4 MOV X1, X31
	0x032CA4A8 BL 0x338C698
	0x032CA4AC MOV X1, X0
	0x032CA4B0 MOV X0, X21
	0x032CA4B4 MOV X2, X31
	0x032CA4B8 BL 0x3395194
	0x032CA4BC TBZ X0, 0x0, 0x32CA4E4
	0x032CA4C0 LDR X0, [X19 + 0x10]
	0x032CA4C4 CBZ X0, 0x32CA834
	0x032CA4C8 LDR X8, [X0]
	0x032CA4CC LDR X9, [X8 + 0x218]
	0x032CA4D0 LDR X1, [X8 + 0x220]
	0x032CA4D4 BLR X9
	0x032CA4D8 ADRP X8, 0xE2E000
	0x032CA4DC LDR X8, [X8 + 0x658]
	0x032CA4E0 B 0x32CA410
	0x032CA4E4 ADRP X8, 0xE50000
	0x032CA4E8 LDR X0, [X24]
	0x032CA4EC LDR X8, [X8 + 0xDA0]
	0x032CA4F0 LDR W9, [X0 + 0xE0]
	0x032CA4F4 LDR X22, [X8]
	0x032CA4F8 CBNZ W9, 0x32CA500
	0x032CA4FC BL 0x1C16DFC
	0x032CA500 MOV X0, X22
	0x032CA504 MOV X1, X31
	0x032CA508 BL 0x338C698
	0x032CA50C MOV X1, X0
	0x032CA510 MOV X0, X21
	0x032CA514 MOV X2, X31
	0x032CA518 BL 0x3395194
	0x032CA51C TBZ X0, 0x0, 0x32CA544
	0x032CA520 LDR X0, [X19 + 0x10]
	0x032CA524 CBZ X0, 0x32CA834
	0x032CA528 LDR X8, [X0]
	0x032CA52C LDR X9, [X8 + 0x238]
	0x032CA530 LDR X1, [X8 + 0x240]
	0x032CA534 BLR X9
	0x032CA538 ADRP X8, 0xE31000
	0x032CA53C LDR X8, [X8 + 0x720]
	0x032CA540 B 0x32CA2B8
	0x032CA544 ADRP X8, 0xE50000
	0x032CA548 LDR X0, [X24]
	0x032CA54C LDR X8, [X8 + 0xDA8]
	0x032CA550 LDR W9, [X0 + 0xE0]
	0x032CA554 LDR X22, [X8]
	0x032CA558 CBNZ W9, 0x32CA560
	0x032CA55C BL 0x1C16DFC
	0x032CA560 MOV X0, X22
	0x032CA564 MOV X1, X31
	0x032CA568 BL 0x338C698
	0x032CA56C MOV X1, X0
	0x032CA570 MOV X0, X21
	0x032CA574 MOV X2, X31
	0x032CA578 BL 0x3395194
	0x032CA57C TBZ X0, 0x0, 0x32CA5A4
	0x032CA580 LDR X0, [X19 + 0x10]
	0x032CA584 CBZ X0, 0x32CA834
	0x032CA588 LDR X8, [X0]
	0x032CA58C LDR X9, [X8 + 0x258]
	0x032CA590 LDR X1, [X8 + 0x260]
	0x032CA594 BLR X9
	0x032CA598 ADRP X8, 0xE2A000
	0x032CA59C LDR X8, [X8 + 0x758]
	0x032CA5A0 B 0x32CA478
	0x032CA5A4 ADRP X8, 0xE51000
	0x032CA5A8 LDR X0, [X24]
	0x032CA5AC LDR X8, [X8 + 0xA80]
	0x032CA5B0 LDR W9, [X0 + 0xE0]
	0x032CA5B4 LDR X22, [X8]
	0x032CA5B8 CBNZ W9, 0x32CA5C0
	0x032CA5BC BL 0x1C16DFC
	0x032CA5C0 MOV X0, X22
	0x032CA5C4 MOV X1, X31
	0x032CA5C8 BL 0x338C698
	0x032CA5CC MOV X1, X0
	0x032CA5D0 MOV X0, X21
	0x032CA5D4 MOV X2, X31
	0x032CA5D8 BL 0x3395194
	0x032CA5DC TBZ X0, 0x0, 0x32CA608
	0x032CA5E0 LDR X0, [X19 + 0x10]
	0x032CA5E4 CBZ X0, 0x32CA834
	0x032CA5E8 LDR X8, [X0]
	0x032CA5EC LDR X9, [X8 + 0x268]
	0x032CA5F0 LDR X1, [X8 + 0x270]
	0x032CA5F4 BLR X9
	0x032CA5F8 ADRP X8, 0xE29000
	0x032CA5FC LDR X8, [X8 + 0xA90]
	0x032CA600 STR S0, [X31 + 0x18]
	0x032CA604 B 0x32CA668
	0x032CA608 ADRP X8, 0xE51000
	0x032CA60C LDR X0, [X24]
	0x032CA610 LDR X8, [X8 + 0xA78]
	0x032CA614 LDR W9, [X0 + 0xE0]
	0x032CA618 LDR X22, [X8]
	0x032CA61C CBNZ W9, 0x32CA624
	0x032CA620 BL 0x1C16DFC
	0x032CA624 MOV X0, X22
	0x032CA628 MOV X1, X31
	0x032CA62C BL 0x338C698
	0x032CA630 MOV X1, X0
	0x032CA634 MOV X0, X21
	0x032CA638 MOV X2, X31
	0x032CA63C BL 0x3395194
	0x032CA640 TBZ X0, 0x0, 0x32CA674
	0x032CA644 LDR X0, [X19 + 0x10]
	0x032CA648 CBZ X0, 0x32CA834
	0x032CA64C LDR X8, [X0]
	0x032CA650 LDR X9, [X8 + 0x278]
	0x032CA654 LDR X1, [X8 + 0x280]
	0x032CA658 BLR X9
	0x032CA65C ADRP X8, 0xE2C000
	0x032CA660 LDR X8, [X8 + 0x978]
	0x032CA664 STR D0, [X31 + 0x18]
	0x032CA668 LDR X0, [X8]
	0x032CA66C ADD X1, X31, 0x18
	0x032CA670 B 0x32CA388
	0x032CA674 ADRP X8, 0xE5A000
	0x032CA678 LDR X0, [X24]
	0x032CA67C LDR X8, [X8 + 0xF38]
	0x032CA680 LDR W9, [X0 + 0xE0]
	0x032CA684 LDR X22, [X8]
	0x032CA688 CBNZ W9, 0x32CA690
	0x032CA68C BL 0x1C16DFC
	0x032CA690 MOV X0, X22
	0x032CA694 MOV X1, X31
	0x032CA698 BL 0x338C698
	0x032CA69C MOV X1, X0
	0x032CA6A0 MOV X0, X21
	0x032CA6A4 MOV X2, X31
	0x032CA6A8 BL 0x3395194
	0x032CA6AC TBZ X0, 0x0, 0x32CA6F8
	0x032CA6B0 LDR X0, [X19 + 0x10]
	0x032CA6B4 CBZ X0, 0x32CA834
	0x032CA6B8 LDR X8, [X0]
	0x032CA6BC LDR X9, [X8 + 0x248]
	0x032CA6C0 LDR X1, [X8 + 0x250]
	0x032CA6C4 BLR X9
	0x032CA6C8 MOV X1, X0
	0x032CA6CC ADD X0, X31, 0x18
	0x032CA6D0 MOV X2, X31
	0x032CA6D4 STR X31, [X31 + 0x18]
	0x032CA6D8 BL 0x335EEB0
	0x032CA6DC ADRP X9, 0xE2A000
	0x032CA6E0 LDR X8, [X31 + 0x18]
	0x032CA6E4 LDR X9, [X9 + 0x9F0]
	0x032CA6E8 STR X8, [X31]
	0x032CA6EC LDR X0, [X9]
	0x032CA6F0 ADD X1, X31, 0x0
	0x032CA6F4 B 0x32CA388
	0x032CA6F8 ADRP X8, 0xE5B000
	0x032CA6FC LDR X0, [X24]
	0x032CA700 LDR X8, [X8 + 0x180]
	0x032CA704 LDR W9, [X0 + 0xE0]
	0x032CA708 LDR X22, [X8]
	0x032CA70C CBNZ W9, 0x32CA714
	0x032CA710 BL 0x1C16DFC
	0x032CA714 MOV X0, X22
	0x032CA718 MOV X1, X31
	0x032CA71C BL 0x338C698
	0x032CA720 MOV X1, X0
	0x032CA724 MOV X0, X21
	0x032CA728 MOV X2, X31
	0x032CA72C BL 0x3395194
	0x032CA730 TBZ X0, 0x0, 0x32CA758
	0x032CA734 LDR X0, [X19 + 0x10]
	0x032CA738 CBZ X0, 0x32CA834
	0x032CA73C LDR X8, [X0]
	0x032CA740 LDR X9, [X8 + 0x248]
	0x032CA744 LDR X1, [X8 + 0x250]
	0x032CA748 BLR X9
	0x032CA74C ADRP X8, 0xE2B000
	0x032CA750 LDR X8, [X8 + 0x570]
	0x032CA754 B 0x32CA478
	0x032CA758 ADRP X8, 0xE5B000
	0x032CA75C LDR X0, [X24]
	0x032CA760 LDR X8, [X8 + 0x140]
	0x032CA764 LDR W9, [X0 + 0xE0]
	0x032CA768 LDR X22, [X8]
	0x032CA76C CBNZ W9, 0x32CA774
	0x032CA770 BL 0x1C16DFC
	0x032CA774 MOV X0, X22
	0x032CA778 MOV X1, X31
	0x032CA77C BL 0x338C698
	0x032CA780 MOV X1, X0
	0x032CA784 MOV X0, X21

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x1114000
	009 Move W8, [X20+2255]
	010 Move X22, X2
	011 Move W23, W1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xE2B000
	018 Move X0, [X0+1560]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+2255], W8
	022 Move X0, X19
	023 Move W1, W23
	024 Call ResourceReader.GetNamePosition, X0, X1
	025 Move W20, W0
	026 Move [X31+12], W31
	027 Add X1, X31, 12
	028 Move X0, X19
	029 Move X2, X31
	030 Call Monitor.Enter, X0, X1
	031 Move X0, [X19+16]
	032 Compare X0, 0
	033 JumpIfEqual {263}
	034 Move X8, [X0]
	035 Move X9, [X8+392]
	036 Move X1, [X8+400]
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Compare X0, 0
	039 JumpIfEqual {264}
	040 Move X8, [X0]
	041 Move X9, [X19+32]
	042 Move X10, [X8+824]
	043 Move X3, [X8+832]
	044 Move X8, W20
	045 Add X1, X9, X8
	046 Move W2, W31
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Move X0, [X19+16]
	049 Compare X0, 0
	050 JumpIfEqual {265}
	051 Move X1, X31
	052 Call BinaryReader.Read7BitEncodedInt, X0
	053 Move W20, W0
	054 Move TEMP, X0
	055 And TEMP, TEMP, -2147483648
	056 Compare TEMP, -2147483648
	057 JumpIfEqual {266}
	058 Move X0, [X19+112]
	059 Compare X0, 0
	060 JumpIfEqual {136}
	061 Move X8, [X0]
	062 Move X9, [X8+504]
	063 Move X1, [X8+512]
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Move X21, X0
	066 Move X0, [X19+112]
	067 Compare X0, 0
	068 JumpIfEqual {303}
	069 Move X8, [X0]
	070 Move X9, [X8+488]
	071 Move X1, [X8+496]
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Subtract X8, X0, W20
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X0, [X19+112]
	076 Compare X0, 0
	077 JumpIfEqual {319}
	078 Move X1, X31
	079 Call UnmanagedMemoryStream.get_PositionPointer, X0
	080 Move X1, X0
	081 Move W3, W20
	082 ShiftRight W3, 1
	083 And W3, W3, 0x7FFFFFFF
	084 Move X0, X31
	085 Move W2, W31
	086 Move X4, X31
	087 Call String.CreateString, X0, X1, X2, X3
	088 Move X21, [X19+112]
	089 Compare X21, 0
	090 JumpIfEqual {320}
	091 Move X8, [X21]
	092 Move X23, X0
	093 Move X9, [X8+504]
	094 Move X1, [X8+512]
	095 Move X0, X21
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Move X8, [X21]
	098 Move X9, [X8+520]
	099 Move X2, [X8+528]
	100 Move W8, W20
	101 Add X1, X0, X8
	102 Move X0, X21
	103 NotImplemented "Instruction BLR not yet implemented."
	104 Move X0, [X19+16]
	105 Compare X0, 0
	106 JumpIfEqual {321}
	107 Move X8, [X0]
	108 Move X1, [X8+560]
	109 Move X9, [X8+552]
	110 NotImplemented "Instruction BLR not yet implemented."
	111 Move W21, W0
	112 Move [X22], W0
	113 Move TEMP, X0
	114 And TEMP, TEMP, -2147483648
	115 Compare TEMP, -2147483648
	116 JumpIfEqual {245}
	117 Move X0, [X19+16]
	118 Compare X0, 0
	119 JumpIfEqual {322}
	120 Move X8, [X0]
	121 Move X9, [X8+392]
	122 Move X1, [X8+400]
	123 NotImplemented "Instruction BLR not yet implemented."
	124 Compare X0, 0
	125 JumpIfEqual {323}
	126 Move X8, [X0]
	127 Move X9, [X8+488]
	128 Move X1, [X8+496]
	129 NotImplemented "Instruction BLR not yet implemented."
	130 Move X8, [X19+40]
	131 Subtract X8, X0, X8
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move X22, X31
	134 Move X21, X31
	135 Move W24, 20
	136 Move X8, 0xE2A000
	137 Move X8, [X8+1560]
	138 Move X0, [X8]
	139 Move W1, W20
	140 Call 0x1C17D6C
	141 Move X21, X0
	142 Move X0, [X19+16]
	143 NotImplemented "Instruction CMP not yet implemented."
	144 NotImplemented "Instruction CSET not yet implemented."
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move W24, W20
	147 Move TEMP, X8
	148 And TEMP, TEMP, 1
	149 Compare TEMP, 1
	150 JumpIfEqual {229}
	151 Move X8, [X0]
	152 Subtract W2, W20, W24
	153 Move X9, [X8+696]
	154 Move X4, [X8+704]
	155 Move X1, X21
	156 Move W3, W24
	157 NotImplemented "Instruction BLR not yet implemented."
	158 Move W8, W0
	159 Compare W0, 0
	160 JumpIfEqual {230}
	161 Move X0, [X19+16]
	162 Subtract W24, W24, W8
	163 NotImplemented "Instruction CMP not yet implemented."
	164 NotImplemented "Instruction CSET not yet implemented."
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Compare W8, 0
	167 JumpIfNotEqual {324}
	168 Move X8, [X0]
	169 Move X1, [X8+560]
	170 Move X9, [X8+552]
	171 NotImplemented "Instruction BLR not yet implemented."
	172 Move W23, W0
	173 Move [X22], W0
	174 Move TEMP, X0
	175 And TEMP, TEMP, -2147483648
	176 Compare TEMP, -2147483648
	177 JumpIfEqual {286}
	178 Move X0, [X19+16]
	179 Compare X0, 0
	180 JumpIfEqual {325}
	181 Move X8, [X0]
	182 Move X9, [X8+392]
	183 Move X1, [X8+400]
	184 NotImplemented "Instruction BLR not yet implemented."
	185 Compare X0, 0
	186 JumpIfEqual {326}
	187 Move X8, [X0]
	188 Move X9, [X8+488]
	189 Move X1, [X8+496]
	190 NotImplemented "Instruction BLR not yet implemented."
	191 Move X8, [X19+40]
	192 Subtract X8, X0, X8
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Move X22, X31
	195 Move X23, X31
	196 Move W24, 30
	197 Move W8, [X31+12]
	198 Compare W8, 0
	199 JumpIfEqual {203}
	200 Move X0, X19
	201 Move X1, X31
	202 Call Monitor.Exit, X0
	203 Compare X22, 0
	204 JumpIfNotEqual {261}
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Compare W24, 0
	207 JumpIfNotEqual {220}
	208 Move X0, X31
	209 Call Encoding.get_Unicode
	210 Compare X0, 0
	211 JumpIfEqual {302}
	212 Move X8, [X0]
	213 Move X1, X21
	214 Move W2, W31
	215 Move W3, W20
	216 Move X9, [X8+904]
	217 Move X4, [X8+912]
	218 NotImplemented "Instruction BLR not yet implemented."
	219 Move X23, X0
	220 Move X0, X23
	221 Move X20, [X31+48]
	222 Move X19, [X31+56]
	223 Move X22, [X31+32]
	224 Move X21, [X31+40]
	225 Move X24, [X31+16]
	226 Move X23, [X31+24]
	227 Move X30, [X31+64]
	228 Return X0
	229 Call 0x1C17F20
	230 Move X0, 0xE2A000
	231 Move X0, [X0+2512]
	232 Call 0x1C17D08
	233 Move W1, 1
	234 Call 0x1C17D6C
	235 Move X22, X0
	236 Move [X31+8], W23
	237 Move X0, 0xE2A000
	238 Move X0, [X0+1880]
	239 Call 0x1C17D08
	240 Add X1, X31, 8
	241 Call 0x1C17E04
	242 Compare X22, 0
	243 JumpIfNotEqual {327}
	244 Call 0x1C17F20
	245 Move X0, 0xE2A000
	246 Move X0, [X0+2512]
	247 Call 0x1C17D08
	248 Move W1, 1
	249 Call 0x1C17D6C
	250 Move W8, [X22]
	251 Move X21, X0
	252 Move [X31+8], W8
	253 Move X0, 0xE2A000
	254 Move X0, [X0+1880]
	255 Call 0x1C17D08
	256 Add X1, X31, 8
	257 Call 0x1C17E04
	258 Compare X21, 0
	259 JumpIfNotEqual {365}
	260 Call 0x1C17F20
	261 Move X0, X22
	262 Call 0x1C17F18
	263 Call 0x1C17F20
	264 Call 0x1C17F20
	265 Call 0x1C17F20
	266 Move X0, 0xE5C000
	267 Move X0, [X0+2760]
	268 Call 0x1C17D08
	269 Move X1, X31
	270 Call Environment.GetResourceString, X0
	271 Move X21, X0
	272 Move X0, 0xE5C000
	273 Move X0, [X0+1224]
	274 Call 0x1C17D08
	275 Call 0x1C17F10
	276 Move X22, X0
	277 Move X1, X21
	278 Move X2, X31
	279 Call BadImageFormatException..ctor, X0, X1
	280 Move X0, 0xE5C000
	281 Move X0, [X0+2824]
	282 Call 0x1C17D08
	283 Move X1, X0
	284 Move X0, X22
	285 Call 0x1C17DEC
	286 Move X0, 0xE2A000
	287 Move X0, [X0+2512]
	288 Call 0x1C17D08
	289 Move W1, 1
	290 Call 0x1C17D6C
	291 Move W8, [X22]
	292 Move X23, X0
	293 Move [X31+8], W8
	294 Move X0, 0xE2A000
	295 Move X0, [X0+1880]
	296 Call 0x1C17D08
	297 Add X1, X31, 8
	298 Call 0x1C17E04
	299 Compare X23, 0
	300 JumpIfNotEqual {372}
	301 Call 0x1C17F20
	302 Call 0x1C17F20
	303 Call 0x1C17F20
	304 Move X0, 0xE2A000
	305 Move X0, [X0+2512]
	306 Call 0x1C17D08
	307 Move W1, 1
	308 Call 0x1C17D6C
	309 Move X21, X0
	310 Move [X31+8], W23
	311 Move X0, 0xE2A000
	312 Move X0, [X0+1880]
	313 Call 0x1C17D08
	314 Add X1, X31, 8
	315 Call 0x1C17E04
	316 Compare X21, 0
	317 JumpIfNotEqual {379}
	318 Call 0x1C17F20
	319 Call 0x1C17F20
	320 Call 0x1C17F20
	321 Call 0x1C17F20
	322 Call 0x1C17F20
	323 Call 0x1C17F20
	324 Call 0x1C17F20
	325 Call 0x1C17F20
	326 Call 0x1C17F20
	327 Move X23, X0
	328 Compare X0, 0
	329 JumpIfNotEqual {334}
	330 Move W8, [X22+24]
	331 Compare W8, 0
	332 JumpIfNotEqual {343}
	333 Call 0x1C17F28
	334 Move X8, [X22]
	335 Move X1, [X8+64]
	336 Move X0, X23
	337 Call 0x1C17E00
	338 Compare X0, 0
	339 JumpIfNotEqual {330}
	340 Call 0x1C17F44
	341 Move X1, X31
	342 Call 0x1C17DEC
	343 Move [X22+32], X23
	344 Move X0, 0xE5C000
	345 Move X0, [X0+2832]
	346 Call 0x1C17D08
	347 Move X1, X22
	348 Move X2, X31
	349 Call Environment.GetResourceString, X0, X1
	350 Move X22, X0
	351 Move X0, 0xE5C000
	352 Move X0, [X0+984]
	353 Call 0x1C17D08
	354 Call 0x1C17F10
	355 Move X23, X0
	356 Move X1, X22
	357 Move X2, X31
	358 Call EndOfStreamException..ctor, X0, X1
	359 Move X0, 0xE5C000
	360 Move X0, [X0+2824]
	361 Call 0x1C17D08
	362 Move X1, X0
	363 Move X0, X23
	364 Call 0x1C17DEC
	365 Move X22, X0
	366 Compare X0, 0
	367 JumpIfNotEqual {386}
	368 Move W8, [X21+24]
	369 Compare W8, 0
	370 JumpIfNotEqual {395}
	371 Call 0x1C17F28
	372 Move X22, X0
	373 Compare X0, 0
	374 JumpIfNotEqual {417}
	375 Move W8, [X23+24]
	376 Compare W8, 0
	377 JumpIfNotEqual {435}
	378 Call 0x1C17F28
	379 Move X22, X0
	380 Compare X0, 0
	381 JumpIfNotEqual {426}
	382 Move W8, [X21+24]
	383 Compare W8, 0
	384 JumpIfNotEqual {457}
	385 Call 0x1C17F28
	386 Move X8, [X21]
	387 Move X1, [X8+64]
	388 Move X0, X22
	389 Call 0x1C17E00
	390 Compare X0, 0
	391 JumpIfNotEqual {368}
	392 Call 0x1C17F44
	393 Move X1, X31
	394 Call 0x1C17DEC
	395 Move [X21+32], X22
	396 Move X0, 0xE5C000
	397 Move X0, [X0+2544]
	398 Call 0x1C17D08
	399 Move X1, X21
	400 Move X2, X31
	401 Call Environment.GetResourceString, X0, X1
	402 Move X21, X0
	403 Move X0, 0xE57000
	404 Move X0, [X0+3080]
	405 Call 0x1C17D08
	406 Call 0x1C17F10
	407 Move X22, X0
	408 Move X1, X21
	409 Move X2, X31
	410 Call FormatException..ctor, X0, X1
	411 Move X0, 0xE5C000
	412 Move X0, [X0+2824]
	413 Call 0x1C17D08
	414 Move X1, X0
	415 Move X0, X22
	416 Call 0x1C17DEC
	417 Move X8, [X23]
	418 Move X1, [X8+64]
	419 Move X0, X22
	420 Call 0x1C17E00
	421 Compare X0, 0
	422 JumpIfNotEqual {375}
	423 Call 0x1C17F44
	424 Move X1, X31
	425 Call 0x1C17DEC
	426 Move X8, [X21]
	427 Move X1, [X8+64]
	428 Move X0, X22
	429 Call 0x1C17E00
	430 Compare X0, 0
	431 JumpIfNotEqual {382}
	432 Call 0x1C17F44
	433 Move X1, X31
	434 Call 0x1C17DEC
	435 Move [X23+32], X22
	436 Move X0, 0xE5C000
	437 Move X0, [X0+2544]
	438 Call 0x1C17D08
	439 Move X1, X23
	440 Move X2, X31
	441 Call Environment.GetResourceString, X0, X1
	442 Move X22, X0
	443 Move X0, 0xE57000
	444 Move X0, [X0+3080]
	445 Call 0x1C17D08
	446 Call 0x1C17F10
	447 Move X23, X0
	448 Move X1, X22
	449 Move X2, X31
	450 Call FormatException..ctor, X0, X1
	451 Move X0, 0xE5C000
	452 Move X0, [X0+2824]
	453 Call 0x1C17D08
	454 Move X1, X0
	455 Move X0, X23
	456 Call 0x1C17DEC
	457 Move [X21+32], X22
	458 Move X0, 0xE5C000
	459 Move X0, [X0+2840]
	460 Call 0x1C17D08
	461 Move X1, X21
	462 Move X2, X31
	463 Call Environment.GetResourceString, X0, X1
	464 Move X21, X0
	465 Move X0, 0xE5C000
	466 Move X0, [X0+1224]
	467 Call 0x1C17D08
	468 Call 0x1C17F10
	469 Move X22, X0
	470 Move X1, X21
	471 Move X2, X31
	472 Call BadImageFormatException..ctor, X0, X1
	473 Move X0, 0xE5C000
	474 Move X0, [X0+2824]
	475 Call 0x1C17D08
	476 Move X1, X0
	477 Move X0, X22
	478 Call 0x1C17DEC
	479 Move X23, X0
	480 Move W20, W31
	481 Move X23, X0
	482 Move X21, X31
	483 Move X23, X0
	484 NotImplemented "Instruction CMP not yet implemented."
	485 Move X0, X23
	486 Call 0x3EB2AD0
	487 Move X22, [X0]
	488 Call 0x3EB2AE0
	489 Move W24, W31
	490 Move X23, X31
	491 Move X22, X31
	492 Move X23, X0
	493 Move W8, [X31+12]
	494 Compare W8, 0
	495 JumpIfEqual {499}
	496 Move X0, X19
	497 Move X1, X31
	498 Call Monitor.Exit, X0
	499 Compare X22, 0
	500 JumpIfNotEqual {503}
	501 Move X0, X23
	502 Call 0x1D2D690
	503 Move X0, X22
	504 Call 0x1C17F18
	505 Call 0x1991590

Method: System.Object GetValueForNameIndex(System.Int32 index)

Disassembly:
	0x032CA788 MOV X2, X31
	0x032CA78C BL 0x3395194
	0x032CA790 TBZ X0, 0x0, 0x32CA824
	0x032CA794 ADRP X8, 0xE2A000
	0x032CA798 LDR X8, [X8 + 0xE58]
	0x032CA79C MOVZ W1, 0x4
	0x032CA7A0 LDR X0, [X8]
	0x032CA7A4 BL 0x1C16D6C
	0x032CA7A8 CBZ X0, 0x32CA834
	0x032CA7AC LDR W8, [X0 + 0x18]
	0x032CA7B0 MOV X20, X0
	0x032CA7B4 CMP W8, 0x1
	0x032CA7B8 B.LT 0x32CA7F8
	0x032CA7BC MOV X21, X31
	0x032CA7C0 ADD X22, X20, 0x20
	0x032CA7C4 LDR X0, [X19 + 0x10]
	0x032CA7C8 CBZ X0, 0x32CA834
	0x032CA7CC LDR X8, [X0]
	0x032CA7D0 LDR X9, [X8 + 0x228]
	0x032CA7D4 LDR X1, [X8 + 0x230]
	0x032CA7D8 BLR X9
	0x032CA7DC LDR W8, [X20 + 0x18]
	0x032CA7E0 CMP X21, X8
	0x032CA7E4 B.CS 0x32CA838
	0x032CA7E8 STR W0, [X22, X21, LSL #2]
	0x032CA7EC ADD X21, X21, 0x1
	0x032CA7F0 CMP X21, W8, SXTW
	0x032CA7F4 B.LT 0x32CA7C4
	0x032CA7F8 ADD X0, X31, 0x18
	0x032CA7FC MOV X1, X20
	0x032CA800 MOV X2, X31
	0x032CA804 STP X31, X31, [X31 + 0x18]
	0x032CA808 BL 0x33D6BB4
	0x032CA80C ADRP X8, 0xE51000
	0x032CA810 LDUR V0, [X31 + 0x18]
	0x032CA814 LDR X8, [X8 + 0x5F0]
	0x032CA818 STR V0, [X31]
	0x032CA81C LDR X0, [X8]
	0x032CA820 B 0x32CA6F0
	0x032CA824 MOV X0, X19
	0x032CA828 MOV W1, W20
	0x032CA82C BL 0x32CA840
	0x032CA830 B 0x32CA38C
	0x032CA834 BL 0x1C16F20
	0x032CA838 BL 0x1C16F28
	0x032CA83C BL 0x3EB1B20
	0x032CA840 STP X30, X21, [X31 - 0x20]!
	0x032CA844 STP X20, X19, [X31 + 0x10]
	0x032CA848 ADRP X21, 0x1112000
	0x032CA84C LDRB W8, [X21 + 0x8D4]
	0x032CA850 MOV W20, W1
	0x032CA854 MOV X19, X0
	0x032CA858 TBNZ X8, 0x0, 0x32CA870
	0x032CA85C ADRP X0, 0xE29000
	0x032CA860 LDR X0, [X0 + 0x6C0]
	0x032CA864 BL 0x1C16CF4
	0x032CA868 MOVZ W8, 0x1
	0x032CA86C STRB W8, [X21 + 0x8D4]
	0x032CA870 MOV X0, X19
	0x032CA874 MOV W1, W20
	0x032CA878 BL 0x32C9C14
	0x032CA87C LDR X8, [X19 + 0x10]
	0x032CA880 CBZ X8, 0x32CA904
	0x032CA884 LDR X9, [X8]
	0x032CA888 LDR X19, [X19 + 0x60]
	0x032CA88C MOV X20, X0
	0x032CA890 MOV X0, X8
	0x032CA894 LDP X10, X1, [X9 + 0x188]
	0x032CA898 BLR X10
	0x032CA89C CBZ X19, 0x32CA904
	0x032CA8A0 MOV X1, X0
	0x032CA8A4 MOV X0, X19
	0x032CA8A8 MOV X2, X31
	0x032CA8AC BL 0x32B09A8
	0x032CA8B0 CBZ X0, 0x32CA904
	0x032CA8B4 ADRP X21, 0xE29000
	0x032CA8B8 LDR X21, [X21 + 0x6C0]
	0x032CA8BC MOV X1, X31
	0x032CA8C0 MOV X19, X0
	0x032CA8C4 BL 0x33BE520
	0x032CA8C8 LDR X8, [X21]
	0x032CA8CC MOV X21, X0
	0x032CA8D0 LDR W9, [X8 + 0xE0]
	0x032CA8D4 CBNZ W9, 0x32CA8E0
	0x032CA8D8 MOV X0, X8
	0x032CA8DC BL 0x1C16DFC
	0x032CA8E0 MOV X0, X21
	0x032CA8E4 MOV X1, X20
	0x032CA8E8 MOV X2, X31
	0x032CA8EC BL 0x3395F0C
	0x032CA8F0 TBNZ X0, 0x0, 0x32CA908
	0x032CA8F4 MOV X0, X19
	0x032CA8F8 LDP X20, X19, [X31 + 0x10]
	0x032CA8FC LDP X30, X21, [X31], #0x20
	0x032CA900 RET
	0x032CA904 BL 0x1C16F20
	0x032CA908 ADRP X0, 0xE29000
	0x032CA90C LDR X0, [X0 + 0x9D0]
	0x032CA910 BL 0x1C16D08
	0x032CA914 MOVZ W1, 0x2
	0x032CA918 BL 0x1C16D6C
	0x032CA91C MOV X21, X0
	0x032CA920 MOV X0, X20
	0x032CA924 BL 0x19903C0
	0x032CA928 LDR X8, [X20]
	0x032CA92C MOV X0, X20
	0x032CA930 LDR X9, [X8 + 0x2E8]
	0x032CA934 LDR X1, [X8 + 0x2F0]
	0x032CA938 BLR X9
	0x032CA93C MOV X20, X0
	0x032CA940 MOV X0, X21
	0x032CA944 BL 0x19903C0
	0x032CA948 MOV X0, X21
	0x032CA94C MOV X1, X20
	0x032CA950 BL 0x19980B4
	0x032CA954 MOV X0, X21
	0x032CA958 MOV X1, X31
	0x032CA95C MOV X2, X20
	0x032CA960 BL 0x1993444
	0x032CA964 MOV X0, X19
	0x032CA968 BL 0x19903C0
	0x032CA96C MOV X0, X19
	0x032CA970 MOV X1, X31
	0x032CA974 BL 0x33BE520
	0x032CA978 MOV X19, X0
	0x032CA97C BL 0x19903C0
	0x032CA980 LDR X8, [X19]
	0x032CA984 MOV X0, X19
	0x032CA988 LDR X9, [X8 + 0x2E8]
	0x032CA98C LDR X1, [X8 + 0x2F0]
	0x032CA990 BLR X9
	0x032CA994 MOV X19, X0
	0x032CA998 MOV X0, X21
	0x032CA99C BL 0x19903C0
	0x032CA9A0 MOV X0, X21
	0x032CA9A4 MOV X1, X19
	0x032CA9A8 BL 0x19980B4
	0x032CA9AC MOVZ W1, 0x1
	0x032CA9B0 MOV X0, X21
	0x032CA9B4 MOV X2, X19
	0x032CA9B8 BL 0x1993444
	0x032CA9BC ADRP X0, 0xE5B000
	0x032CA9C0 LDR X0, [X0 + 0xB50]
	0x032CA9C4 BL 0x1C16D08
	0x032CA9C8 MOV X1, X21
	0x032CA9CC MOV X2, X31
	0x032CA9D0 BL 0x33BFB40
	0x032CA9D4 MOV X19, X0
	0x032CA9D8 ADRP X0, 0xE5B000
	0x032CA9DC LDR X0, [X0 + 0x4C8]
	0x032CA9E0 BL 0x1C16D08
	0x032CA9E4 BL 0x1C16F10
	0x032CA9E8 MOV X1, X19
	0x032CA9EC MOV X2, X31
	0x032CA9F0 MOV X20, X0
	0x032CA9F4 BL 0x33167DC
	0x032CA9F8 ADRP X0, 0xE5B000
	0x032CA9FC LDR X0, [X0 + 0xB58]
	0x032CAA00 BL 0x1C16D08
	0x032CAA04 MOV X1, X0
	0x032CAA08 MOV X0, X20
	0x032CAA0C BL 0x1C16DEC
	0x032CAA10 SUB X31, X31, 0x50
	0x032CAA14 STP X30, X23, [X31 + 0x20]
	0x032CAA18 STP X22, X21, [X31 + 0x30]
	0x032CAA1C STP X20, X19, [X31 + 0x40]
	0x032CAA20 MRS X22, 0xC000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X0
	007 Move [X31+8], W31
	008 Call ResourceReader.GetNamePosition, X0, X1
	009 Move W20, W0
	010 Move [X31+12], W31
	011 Add X1, X31, 12
	012 Move X0, X19
	013 Move X2, X31
	014 Call Monitor.Enter, X0, X1
	015 Move X0, [X19+16]
	016 Compare X0, 0
	017 JumpIfEqual {105}
	018 Move X8, [X0]
	019 Move X9, [X8+392]
	020 Move X1, [X8+400]
	021 NotImplemented "Instruction BLR not yet implemented."
	022 Compare X0, 0
	023 JumpIfEqual {106}
	024 Move X8, [X0]
	025 Move X9, [X19+32]
	026 Move X10, [X8+824]
	027 Move X3, [X8+832]
	028 Move X8, W20
	029 Add X1, X9, X8
	030 Move W2, W31
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X0, X19
	033 Call ResourceReader.SkipString, X0
	034 Move X0, [X19+16]
	035 Compare X0, 0
	036 JumpIfEqual {107}
	037 Move X8, [X0]
	038 Move X1, [X8+560]
	039 Move X9, [X8+552]
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move W20, W0
	042 Move TEMP, X0
	043 And TEMP, TEMP, -2147483648
	044 Compare TEMP, -2147483648
	045 JumpIfEqual {88}
	046 Move X0, [X19+16]
	047 Compare X0, 0
	048 JumpIfEqual {108}
	049 Move X8, [X0]
	050 Move X9, [X8+392]
	051 Move X1, [X8+400]
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Compare X0, 0
	054 JumpIfEqual {109}
	055 Move X8, [X0]
	056 Move X9, [X8+488]
	057 Move X1, [X8+496]
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move X8, [X19+40]
	060 Subtract X8, X0, X8
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move W8, [X19+120]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X0, X19
	065 Move W1, W20
	066 Call ResourceReader.LoadObjectV1, X0, X1
	067 Add X2, X31, 8
	068 Move X0, X19
	069 Move W1, W20
	070 Call ResourceReader.LoadObjectV2, X0, X1, X2
	071 Move X20, X0
	072 Move X21, X31
	073 Move W8, [X31+12]
	074 Compare W8, 0
	075 JumpIfEqual {79}
	076 Move X0, X19
	077 Move X1, X31
	078 Call Monitor.Exit, X0
	079 Compare X21, 0
	080 JumpIfNotEqual {103}
	081 Move X0, X20
	082 Move X20, [X31+32]
	083 Move X19, [X31+40]
	084 Move X30, [X31+16]
	085 Move X21, [X31+24]
	086 Add X31, X31, 48
	087 Return X0
	088 Move X0, 0xE2A000
	089 Move X0, [X0+2512]
	090 Call 0x1C17D08
	091 Move W1, 1
	092 Call 0x1C17D6C
	093 Move X21, X0
	094 Move [X31+4], W20
	095 Move X0, 0xE2A000
	096 Move X0, [X0+1880]
	097 Call 0x1C17D08
	098 Add X1, X31, 4
	099 Call 0x1C17E04
	100 Compare X21, 0
	101 JumpIfNotEqual {110}
	102 Call 0x1C17F20
	103 Move X0, X21
	104 Call 0x1C17F18
	105 Call 0x1C17F20
	106 Call 0x1C17F20
	107 Call 0x1C17F20
	108 Call 0x1C17F20
	109 Call 0x1C17F20
	110 Move X20, X0
	111 Compare X0, 0
	112 JumpIfNotEqual {117}
	113 Move W8, [X21+24]
	114 Compare W8, 0
	115 JumpIfNotEqual {126}
	116 Call 0x1C17F28
	117 Move X8, [X21]
	118 Move X1, [X8+64]
	119 Move X0, X20
	120 Call 0x1C17E00
	121 Compare X0, 0
	122 JumpIfNotEqual {113}
	123 Call 0x1C17F44
	124 Move X1, X31
	125 Call 0x1C17DEC
	126 Move [X21+32], X20
	127 Move X0, 0xE5C000
	128 Move X0, [X0+2544]
	129 Call 0x1C17D08
	130 Move X1, X21
	131 Move X2, X31
	132 Call Environment.GetResourceString, X0, X1
	133 Move X20, X0
	134 Move X0, 0xE57000
	135 Move X0, [X0+3080]
	136 Call 0x1C17D08
	137 Call 0x1C17F10
	138 Move X21, X0
	139 Move X1, X20
	140 Move X2, X31
	141 Call FormatException..ctor, X0, X1
	142 Move X0, 0xE5C000
	143 Move X0, [X0+2848]
	144 Call 0x1C17D08
	145 Move X1, X0
	146 Move X0, X21
	147 Call 0x1C17DEC
	148 Move X20, X0
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Move X0, X20
	151 Call 0x3EB2AD0
	152 Move X21, [X0]
	153 Call 0x3EB2AE0
	154 Move X20, X31
	155 Move X21, X31
	156 Move X20, X0
	157 Move W8, [X31+12]
	158 Compare W8, 0
	159 JumpIfEqual {163}
	160 Move X0, X19
	161 Move X1, X31
	162 Call Monitor.Exit, X0
	163 Compare X21, 0
	164 JumpIfNotEqual {167}
	165 Move X0, X20
	166 Call 0x1D2D690
	167 Move X0, X21
	168 Call 0x1C17F18
	169 Call 0x1991590

Method: System.String LoadString(System.Int32 pos)

Disassembly:
	0x032C80D8 STR X0, [X19 + 0x48]
	0x032C80DC LDP X20, X19, [X31 + 0x10]
	0x032C80E0 LDR X30, [X31], #0x20
	0x032C80E4 RET
	0x032C80E8 BL 0x1C171E0
	0x032C80EC CMP W1, 0x1
	0x032C80F0 MOV X19, X0
	0x032C80F4 B.NE 0x32C8154
	0x032C80F8 MOV X0, X19
	0x032C80FC BL 0x3EB1AD0
	0x032C8100 MOV X19, X0
	0x032C8104 ADRP X0, 0xE31000
	0x032C8108 LDR X0, [X0 + 0xCC0]
	0x032C810C BL 0x1C16D08
	0x032C8110 LDR X8, [X19]
	0x032C8114 LDR X1, [X8]
	0x032C8118 BL 0x1C17270
	0x032C811C TBZ X0, 0x0, 0x32C812C
	0x032C8120 LDP X20, X19, [X31 + 0x10]
	0x032C8124 LDR X30, [X31], #0x20
	0x032C8128 B 0x3EB1AE0
	0x032C812C MOVZ W0, 0x8
	0x032C8130 BL 0x3EB1AF0
	0x032C8134 LDR X8, [X19]
	0x032C8138 STR X8, [X0]
	0x032C813C ADRP X1, 0xBEC000
	0x032C8140 ADD X1, X1, 0xE58
	0x032C8144 MOV X2, X31
	0x032C8148 BL 0x3EB1B00
	0x032C814C MOV X19, X0
	0x032C8150 BL 0x3EB1AE0
	0x032C8154 MOV X0, X19
	0x032C8158 BL 0x1D2C690
	0x032C815C BL 0x1990590
	0x032C8160 STP X30, X23, [X31 - 0x30]!
	0x032C8164 STP X22, X21, [X31 + 0x10]
	0x032C8168 STP X20, X19, [X31 + 0x20]
	0x032C816C ADRP X23, 0x1114000
	0x032C8170 ADRP X20, 0xE5D000
	0x032C8174 ADRP X22, 0xE5D000
	0x032C8178 ADRP X21, 0xE5D000
	0x032C817C LDRB W8, [X23 + 0x8C4]
	0x032C8180 LDR X20, [X20 + 0xA60]
	0x032C8184 LDR X22, [X22 + 0xA68]
	0x032C8188 LDR X21, [X21 + 0xA70]
	0x032C818C MOV X19, X0
	0x032C8190 TBNZ X8, 0x0, 0x32C81C0
	0x032C8194 ADRP X0, 0xE5D000
	0x032C8198 LDR X0, [X0 + 0xA60]
	0x032C819C BL 0x1C16CF4
	0x032C81A0 ADRP X0, 0xE5D000
	0x032C81A4 LDR X0, [X0 + 0xA70]
	0x032C81A8 BL 0x1C16CF4
	0x032C81AC ADRP X0, 0xE5D000
	0x032C81B0 LDR X0, [X0 + 0xA68]
	0x032C81B4 BL 0x1C16CF4
	0x032C81B8 MOVZ W8, 0x1
	0x032C81BC STRB W8, [X23 + 0x8C4]
	0x032C81C0 MOV X0, X19
	0x032C81C4 MOV X1, X31
	0x032C81C8 BL 0x33BDD8C
	0x032C81CC MOV X0, X19
	0x032C81D0 BL 0x32C8044
	0x032C81D4 LDR X0, [X20]
	0x032C81D8 BL 0x1C16F10
	0x032C81DC MOV X1, X31
	0x032C81E0 MOV X20, X0
	0x032C81E4 BL 0x33BDD8C
	0x032C81E8 STR X20, [X19 + 0x30]
	0x032C81EC LDR X0, [X22]
	0x032C81F0 BL 0x1C16F10
	0x032C81F4 MOV X1, X19
	0x032C81F8 MOV X20, X0
	0x032C81FC BL 0x32C8234
	0x032C8200 LDR X0, [X21]
	0x032C8204 BL 0x1C16F10
	0x032C8208 MOV X1, X31
	0x032C820C MOV X21, X0
	0x032C8210 BL 0x33BDD8C
	0x032C8214 STR X20, [X21 + 0x10]
	0x032C8218 STR X21, [X19 + 0x50]
	0x032C821C LDP X20, X19, [X31 + 0x20]
	0x032C8220 LDP X22, X21, [X31 + 0x10]
	0x032C8224 LDP X30, X23, [X31], #0x30
	0x032C8228 RET
	0x032C822C MOV X1, X31
	0x032C8230 B 0x33BDD8C
	0x032C8234 STR X30, [X31 - 0x20]!
	0x032C8238 STP X20, X19, [X31 + 0x10]
	0x032C823C MOV X19, X1
	0x032C8240 MOV X1, X31
	0x032C8244 MOV X20, X0
	0x032C8248 BL 0x33BDD8C
	0x032C824C CBZ X19, 0x32C8260
	0x032C8250 STR X19, [X20 + 0x10]
	0x032C8254 LDP X20, X19, [X31 + 0x10]
	0x032C8258 LDR X30, [X31], #0x20
	0x032C825C RET
	0x032C8260 ADRP X0, 0xE30000
	0x032C8264 LDR X0, [X0 + 0x528]
	0x032C8268 BL 0x1C16D08
	0x032C826C BL 0x1C16F10
	0x032C8270 MOV X19, X0
	0x032C8274 ADRP X0, 0xE2D000
	0x032C8278 LDR X0, [X0 + 0x60]
	0x032C827C BL 0x1C16D08
	0x032C8280 MOV X1, X0
	0x032C8284 MOV X0, X19
	0x032C8288 MOV X2, X31
	0x032C828C BL 0x330E100
	0x032C8290 ADRP X0, 0xE5D000
	0x032C8294 LDR X0, [X0 + 0xA78]
	0x032C8298 BL 0x1C16D08
	0x032C829C MOV X1, X0
	0x032C82A0 MOV X0, X19
	0x032C82A4 BL 0x1C16DEC
	0x032C82A8 STR X31, [X0 + 0x18]
	0x032C82AC STR X31, [X0 + 0x50]
	0x032C82B0 STR X31, [X0 + 0x30]
	0x032C82B4 RET
	0x032C82B8 STR X30, [X31 - 0x50]!
	0x032C82BC STP X26, X25, [X31 + 0x10]
	0x032C82C0 STP X24, X23, [X31 + 0x20]
	0x032C82C4 STP X22, X21, [X31 + 0x30]
	0x032C82C8 STP X20, X19, [X31 + 0x40]
	0x032C82CC ADRP X25, 0x1114000
	0x032C82D0 ADRP X26, 0xE5D000
	0x032C82D4 ADRP X20, 0xE5D000
	0x032C82D8 ADRP X24, 0xE5D000
	0x032C82DC ADRP X23, 0xE5D000
	0x032C82E0 ADRP X21, 0xE5D000
	0x032C82E4 ADRP X22, 0xE5D000
	0x032C82E8 LDR X26, [X26 + 0xA80]
	0x032C82EC LDRB W8, [X25 + 0x8C5]
	0x032C82F0 LDR X20, [X20 + 0xA88]
	0x032C82F4 LDR X24, [X24 + 0xA60]
	0x032C82F8 LDR X23, [X23 + 0xA68]
	0x032C82FC LDR X21, [X21 + 0xA70]
	0x032C8300 LDR X22, [X22 + 0xA90]
	0x032C8304 MOV X19, X0
	0x032C8308 TBNZ X8, 0x0, 0x32C8368
	0x032C830C ADRP X0, 0xE5D000
	0x032C8310 LDR X0, [X0 + 0xA60]
	0x032C8314 BL 0x1C16CF4
	0x032C8318 ADRP X0, 0xE5D000
	0x032C831C LDR X0, [X0 + 0xA88]
	0x032C8320 BL 0x1C16CF4
	0x032C8324 ADRP X0, 0xE5D000
	0x032C8328 LDR X0, [X0 + 0xA80]
	0x032C832C BL 0x1C16CF4
	0x032C8330 ADRP X0, 0xE5D000
	0x032C8334 LDR X0, [X0 + 0xA90]
	0x032C8338 BL 0x1C16CF4
	0x032C833C ADRP X0, 0xE5D000
	0x032C8340 LDR X0, [X0 + 0xA70]
	0x032C8344 BL 0x1C16CF4
	0x032C8348 ADRP X0, 0xE5D000
	0x032C834C LDR X0, [X0 + 0xA68]
	0x032C8350 BL 0x1C16CF4
	0x032C8354 ADRP X0, 0xE59000
	0x032C8358 LDR X0, [X0 + 0xAD0]
	0x032C835C BL 0x1C16CF4
	0x032C8360 MOVZ W8, 0x1
	0x032C8364 STRB W8, [X25 + 0x8C5]
	0x032C8368 LDR X0, [X26]
	0x032C836C BL 0x1C16F10
	0x032C8370 LDR X1, [X20]
	0x032C8374 MOV X20, X0
	0x032C8378 BL 0x2AA4804
	0x032C837C STR X20, [X19 + 0x18]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X21, 0x1115000
	008 Move W8, [X21+2256]
	009 Move W20, W1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xE54000
	016 Move X0, [X0+2912]
	017 Call 0x1C17CF4
	018 Move X0, 0xE2C000
	019 Move X0, [X0+1728]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+2256], W8
	023 Move X0, [X19+16]
	024 Compare X0, 0
	025 JumpIfEqual {133}
	026 Move X8, [X0]
	027 Move X9, [X8+392]
	028 Move X1, [X8+400]
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Compare X0, 0
	031 JumpIfEqual {133}
	032 Move X8, [X0]
	033 Move X9, [X19+40]
	034 Move W2, W31
	035 Move X10, [X8+824]
	036 Move X3, [X8+832]
	037 Add X1, X9, W20
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Move X0, [X19+16]
	040 Compare X0, 0
	041 JumpIfEqual {133}
	042 Move X1, X31
	043 Call BinaryReader.Read7BitEncodedInt, X0
	044 Move W8, [X19+120]
	045 Move W20, W0
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Add W31, W20, 1
	048 Move X0, X19
	049 Move W1, W20
	050 Call ResourceReader.FindType, X0, X1
	051 Move X8, 0xE2C000
	052 Move X8, [X8+1728]
	053 Move X9, 0xE54000
	054 Move X21, X0
	055 Move X8, [X8]
	056 Move X9, [X9+2912]
	057 Move W10, [X8+224]
	058 Move X22, [X9]
	059 Compare W10, 0
	060 JumpIfNotEqual {63}
	061 Move X0, X8
	062 Call 0x1C17DFC
	063 Move X0, X22
	064 Move X1, X31
	065 Call Type.GetTypeFromHandle, X0
	066 Move X1, X0
	067 Move X0, X21
	068 Move X2, X31
	069 Call Type.op_Inequality, X0, X1
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfNotEqual {106}
	074 Move X0, 0xE2C000
	075 Move X0, [X0+2512]
	076 Call 0x1C17D08
	077 Move W1, 1
	078 Call 0x1C17D6C
	079 Move X21, X0
	080 Move X0, X19
	081 Move W1, W20
	082 Call ResourceReader.FindType, X0, X1
	083 Move X19, X0
	084 Call 0x19913C0
	085 Move X8, [X19]
	086 Move X0, X19
	087 Move X9, [X8+744]
	088 Move X1, [X8+752]
	089 NotImplemented "Instruction BLR not yet implemented."
	090 Move X19, X0
	091 Move X0, X21
	092 Call 0x19913C0
	093 Move X0, X21
	094 Move X1, X19
	095 Call 0x19990B4
	096 Move X0, X21
	097 Move X1, X31
	098 Move X2, X19
	099 Call 0x1994444
	100 Move X0, 0xE5E000
	101 Move X0, [X0+2560]
	102 Call 0x1C17D08
	103 Move X1, X21
	104 NotImplemented "Instruction CMP not yet implemented."
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move X0, [X19+16]
	107 Compare X0, 0
	108 JumpIfEqual {133}
	109 Move X8, [X0]
	110 Move X20, [X31+64]
	111 Move X19, [X31+72]
	112 Move X22, [X31+48]
	113 Move X21, [X31+56]
	114 Move X30, [X31+32]
	115 Move X2, [X8+664]
	116 Move X1, [X8+672]
	117 Add X31, X31, 80
	118 CallNoReturn X2
	119 Move X20, [X31+64]
	120 Move X19, [X31+72]
	121 Move X22, [X31+48]
	122 Move X21, [X31+56]
	123 Move X30, [X31+32]
	124 Move X0, X31
	125 Add X31, X31, 80
	126 Return X0
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Subtract W1, W20, 64
	129 Move X0, X19
	130 Call ResourceReader.FindType, X0, X1
	131 Compare X0, 0
	132 JumpIfNotEqual {146}
	133 Call 0x1C17F20
	134 Move X0, 0xE5E000
	135 Move X0, [X0+2568]
	136 Call 0x1C17D08
	137 Move TEMP, 0
	138 Not TEMP
	139 Move X8, TEMP
	140 Move [X31+8], X0
	141 Move [X31+16], X8
	142 Add X0, X31, 8
	143 Move X1, X31
	144 Move [X31+24], W20
	145 Call Enum.ToString, X0
	146 Move X8, [X0]
	147 Move X9, [X8+744]
	148 Move X1, [X8+752]
	149 NotImplemented "Instruction BLR not yet implemented."
	150 Move X19, X0
	151 Move X0, 0xE2C000
	152 Move X0, [X0+2512]
	153 Call 0x1C17D08
	154 Move W1, 1
	155 Call 0x1C17D6C
	156 Move X20, X0
	157 Call 0x19913C0
	158 Move X0, X20
	159 Move X1, X19
	160 Call 0x19990B4
	161 Move X0, X20
	162 Move X1, X31
	163 Move X2, X19
	164 Call 0x1994444
	165 Move X0, 0xE5E000
	166 Move X0, [X0+2560]
	167 Call 0x1C17D08
	168 Move X1, X20
	169 Move X2, X31
	170 Call Environment.GetResourceString, X0, X1
	171 Move X19, X0
	172 Move X0, 0xE2C000
	173 Move X0, [X0+1456]
	174 Call 0x1C17D08
	175 Call 0x1C17F10
	176 Move X1, X19
	177 Move X2, X31
	178 Move X20, X0
	179 Call InvalidOperationException..ctor, X0, X1
	180 Move X0, 0xE5E000
	181 Move X0, [X0+2576]
	182 Call 0x1C17D08
	183 Move X1, X0
	184 Move X0, X20
	185 Call 0x1C17DEC

Method: System.Object LoadObject(System.Int32 pos)

Disassembly:
	0x032CAFCC LDP X9, X1, [X8 + 0x188]
	0x032CAFD0 BLR X9
	0x032CAFD4 CBZ X0, 0x32CB064
	0x032CAFD8 LDR X8, [X0]
	0x032CAFDC LDP X9, X1, [X8 + 0x1E8]
	0x032CAFE0 BLR X9
	0x032CAFE4 CMP X0, W20, UXTW
	0x032CAFE8 B.LT 0x32CB0B8
	0x032CAFEC LDR X0, [X23]
	0x032CAFF0 CBZ X0, 0x32CB064
	0x032CAFF4 LDR X8, [X0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31+12], W31
	003 Move W8, [X0+120]
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Call ResourceReader.LoadObjectV1, X0, X1
	006 Add X2, X31, 12
	007 Call ResourceReader.LoadObjectV2, X0, X1, X2
	008 Move X30, [X31+16]
	009 Return X0

Method: System.Object LoadObject(System.Int32 pos, out System.Resources.ResourceTypeCode typeCode)

Disassembly:
	0x032C8380 LDR X0, [X24]
	0x032C8384 BL 0x1C16F10
	0x032C8388 MOV X1, X31
	0x032C838C MOV X20, X0
	0x032C8390 BL 0x33BDD8C
	0x032C8394 STR X20, [X19 + 0x30]
	0x032C8398 LDR X0, [X23]
	0x032C839C BL 0x1C16F10
	0x032C83A0 MOV X1, X19
	0x032C83A4 MOV X20, X0
	0x032C83A8 BL 0x32C8234
	0x032C83AC LDRB W8, [X19 + 0x38]
	0x032C83B0 CMP W8, 0x0
	0x032C83B4 CSEL X8, X22, X21, EQ
	0x032C83B8 LDR X0, [X8]
	0x032C83BC BL 0x1C16F10
	0x032C83C0 MOV X1, X31
	0x032C83C4 MOV X21, X0
	0x032C83C8 BL 0x33BDD8C
	0x032C83CC STR X20, [X21 + 0x10]
	0x032C83D0 LDR X0, [X19 + 0x48]
	0x032C83D4 MOV X1, X31
	0x032C83D8 MOV X2, X31
	0x032C83DC STR X21, [X19 + 0x50]
	0x032C83E0 BL 0x32D5BF8
	0x032C83E4 TBZ X0, 0x0, 0x32C8450
	0x032C83E8 LDR X0, [X19 + 0x40]
	0x032C83EC CBZ X0, 0x32C844C
	0x032C83F0 ADRP X8, 0xE59000
	0x032C83F4 LDR X8, [X8 + 0xAD0]
	0x032C83F8 LDR X9, [X0]
	0x032C83FC LDR X1, [X8]
	0x032C8400 LDRB W10, [X9 + 0x130]
	0x032C8404 LDRB W8, [X1 + 0x130]
	0x032C8408 CMP W10, W8
	0x032C840C B.CC 0x32C8448
	0x032C8410 LDR X10, [X9 + 0xC8]
	0x032C8414 SUB X9, X8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1115000
	007 Move W8, [X22+2257]
	008 Move X19, X2
	009 Move W20, W1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xE2E000
	016 Move X0, [X0+632]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2257], W8
	020 Move W8, [X21+120]
	021 Move X0, X21
	022 Move W1, W20
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Call ResourceReader.LoadObjectV1, X0, X1
	025 Move W8, 64
	026 Compare X0, 0
	027 JumpIfEqual {34}
	028 Move X9, 0xE2E000
	029 Move X9, [X9+632]
	030 Move X10, [X0]
	031 Move X9, [X9]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction CSINC not yet implemented."
	034 Move [X19], W8
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 Return X0
	041 Move X2, X19
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 Call ResourceReader.LoadObjectV2, X0, X1, X2
	048 Return X0

Method: System.Object LoadObjectV1(System.Int32 pos)

Disassembly:
	0x032CAA24 LDR X8, [X22 + 0x28]
	0x032CAA28 ADRP X23, 0x1112000
	0x032CAA2C MOV X20, X2
	0x032CAA30 MOV W21, W1
	0x032CAA34 STR X8, [X31 + 0x18]
	0x032CAA38 LDRB W8, [X23 + 0x8D3]
	0x032CAA3C MOV X19, X0
	0x032CAA40 TBNZ X8, 0x0, 0x32CAB24
	0x032CAA44 ADRP X0, 0xE29000
	0x032CAA48 LDR X0, [X0 + 0xB58]
	0x032CAA4C BL 0x1C16CF4
	0x032CAA50 ADRP X0, 0xE29000
	0x032CAA54 LDR X0, [X0 + 0x618]
	0x032CAA58 BL 0x1C16CF4
	0x032CAA5C ADRP X0, 0xE2A000
	0x032CAA60 LDR X0, [X0 + 0x9D8]
	0x032CAA64 BL 0x1C16CF4
	0x032CAA68 ADRP X0, 0xE2B000
	0x032CAA6C LDR X0, [X0 + 0x170]
	0x032CAA70 BL 0x1C16CF4
	0x032CAA74 ADRP X0, 0xE2A000
	0x032CAA78 LDR X0, [X0 + 0x9F0]
	0x032CAA7C BL 0x1C16CF4
	0x032CAA80 ADRP X0, 0xE51000
	0x032CAA84 LDR X0, [X0 + 0x5F0]
	0x032CAA88 BL 0x1C16CF4
	0x032CAA8C ADRP X0, 0xE2C000
	0x032CAA90 LDR X0, [X0 + 0x978]
	0x032CAA94 BL 0x1C16CF4
	0x032CAA98 ADRP X0, 0xE2D000
	0x032CAA9C LDR X0, [X0 + 0x628]
	0x032CAAA0 BL 0x1C16CF4
	0x032CAAA4 ADRP X0, 0xE29000
	0x032CAAA8 LDR X0, [X0 + 0x758]
	0x032CAAAC BL 0x1C16CF4
	0x032CAAB0 ADRP X0, 0xE2B000
	0x032CAAB4 LDR X0, [X0 + 0xA60]
	0x032CAAB8 BL 0x1C16CF4
	0x032CAABC ADRP X0, 0xE5B000
	0x032CAAC0 LDR X0, [X0 + 0xB60]
	0x032CAAC4 BL 0x1C16CF4
	0x032CAAC8 ADRP X0, 0xE52000
	0x032CAACC LDR X0, [X0 + 0x6B0]
	0x032CAAD0 BL 0x1C16CF4
	0x032CAAD4 ADRP X0, 0xE29000
	0x032CAAD8 LDR X0, [X0 + 0xA90]
	0x032CAADC BL 0x1C16CF4
	0x032CAAE0 ADRP X0, 0xE2B000
	0x032CAAE4 LDR X0, [X0 + 0x570]
	0x032CAAE8 BL 0x1C16CF4
	0x032CAAEC ADRP X0, 0xE2E000
	0x032CAAF0 LDR X0, [X0 + 0x658]
	0x032CAAF4 BL 0x1C16CF4
	0x032CAAF8 ADRP X0, 0xE31000
	0x032CAAFC LDR X0, [X0 + 0x720]
	0x032CAB00 BL 0x1C16CF4
	0x032CAB04 ADRP X0, 0xE2A000
	0x032CAB08 LDR X0, [X0 + 0x758]
	0x032CAB0C BL 0x1C16CF4
	0x032CAB10 ADRP X0, 0xE36000
	0x032CAB14 LDR X0, [X0 + 0xE08]
	0x032CAB18 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Call ResourceReader._LoadObjectV1, X0, X1
	006 Move X20, [X31+16]
	007 Move X19, [X31+24]
	008 Move X30, [X31+32]
	009 Move X21, [X31+40]
	010 Return X0
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X19, X0
	013 Move X0, X19
	014 Call 0x3EB2AD0
	015 Move X19, X0
	016 Move X0, 0xE5C000
	017 Move X0, [X0+984]
	018 Call 0x1C17D08
	019 Move X8, [X19]
	020 Move X1, [X8]
	021 Call 0x1C18270
	022 Move TEMP, X0
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfNotEqual {49}
	026 Move X19, [X19]
	027 Call 0x3EB2AE0
	028 Move X0, 0xE5C000
	029 Move X0, [X0+2856]
	030 Call 0x1C17D08
	031 Move X1, X31
	032 Call Environment.GetResourceString, X0
	033 Move X20, X0
	034 Move X0, 0xE5C000
	035 Move X0, [X0+1224]
	036 Call 0x1C17D08
	037 Call 0x1C17F10
	038 Move X1, X20
	039 Move X2, X19
	040 Move X3, X31
	041 Move X21, X0
	042 Call BadImageFormatException..ctor, X0, X1, X2
	043 Move X0, 0xE5C000
	044 Move X0, [X0+2864]
	045 Call 0x1C17D08
	046 Move X1, X0
	047 Move X0, X21
	048 Call 0x1C17DEC
	049 Move X0, 0xE32000
	050 Move X0, [X0+1888]
	051 Call 0x1C17D08
	052 Move X8, [X19]
	053 Move X1, [X8]
	054 Call 0x1C18270
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {26}
	059 Move W0, 8
	060 Call 0x3EB2AF0
	061 Move X8, [X19]
	062 Move [X0], X8
	063 Move X1, 0xBEB000
	064 Add X1, X1, 3672
	065 Move X2, X31
	066 Call 0x3EB2B00
	067 Move X19, X0
	068 Call 0x3EB2AE0
	069 Move X0, X19
	070 Call 0x1D2D690
	071 Call 0x1991590

Method: System.Object _LoadObjectV1(System.Int32 pos)

Disassembly:
	0x032CAFF8 MOV W1, W20
	0x032CAFFC LDR X9, [X8 + 0x2C8]
	0x032CB000 LDR X2, [X8 + 0x2D0]
	0x032CB004 BLR X9
	0x032CB008 LDR X8, [X22 + 0x28]
	0x032CB00C LDR X9, [X31 + 0x18]
	0x032CB010 CMP X8, X9
	0x032CB014 B.EQ 0x32CAEEC
	0x032CB018 BL 0x3EB1B20
	0x032CB01C LDR X0, [X23]
	0x032CB020 CBZ X0, 0x32CB064
	0x032CB024 LDR X8, [X0]
	0x032CB028 MOV W1, W20
	0x032CB02C LDR X9, [X8 + 0x2C8]
	0x032CB030 LDR X2, [X8 + 0x2D0]
	0x032CB034 BLR X9
	0x032CB038 ADRP X8, 0xE5A000
	0x032CB03C LDR X8, [X8 + 0xB60]
	0x032CB040 MOV X19, X0
	0x032CB044 LDR X8, [X8]
	0x032CB048 MOV X0, X8
	0x032CB04C BL 0x1C16F10
	0x032CB050 MOV X1, X19
	0x032CB054 MOV X2, X31
	0x032CB058 MOV X21, X0
	0x032CB05C BL 0x32E5A48
	0x032CB060 B 0x32CAED8
	0x032CB064 BL 0x1C16F20
	0x032CB068 ADRP X0, 0xE5A000
	0x032CB06C LDR X0, [X0 + 0xB28]
	0x032CB070 BL 0x1C16D08
	0x032CB074 MOV X1, X31
	0x032CB078 BL 0x33BDD84
	0x032CB07C MOV X19, X0
	0x032CB080 ADRP X0, 0xE5A000
	0x032CB084 LDR X0, [X0 + 0x4C8]
	0x032CB088 BL 0x1C16D08
	0x032CB08C BL 0x1C16F10
	0x032CB090 MOV X1, X19
	0x032CB094 MOV X2, X31
	0x032CB098 MOV X20, X0
	0x032CB09C BL 0x33167DC
	0x032CB0A0 ADRP X0, 0xE5A000
	0x032CB0A4 LDR X0, [X0 + 0xB68]
	0x032CB0A8 BL 0x1C16D08
	0x032CB0AC MOV X1, X0
	0x032CB0B0 MOV X0, X20
	0x032CB0B4 BL 0x1C16DEC
	0x032CB0B8 ADRP X0, 0xE28000
	0x032CB0BC LDR X0, [X0 + 0x9D0]
	0x032CB0C0 BL 0x1C16D08
	0x032CB0C4 MOVZ W1, 0x1
	0x032CB0C8 BL 0x1C16D6C
	0x032CB0CC MOV X19, X0
	0x032CB0D0 STR W20, [X31 + 0x8]
	0x032CB0D4 ADRP X0, 0xE28000
	0x032CB0D8 LDR X0, [X0 + 0x758]
	0x032CB0DC BL 0x1C16D08
	0x032CB0E0 ADD X1, X31, 0x8
	0x032CB0E4 BL 0x1C16E04
	0x032CB0E8 MOV X20, X0
	0x032CB0EC MOV X0, X19
	0x032CB0F0 BL 0x19903C0
	0x032CB0F4 MOV X0, X19
	0x032CB0F8 MOV X1, X20
	0x032CB0FC BL 0x19980B4
	0x032CB100 MOV X0, X19
	0x032CB104 MOV X1, X31
	0x032CB108 MOV X2, X20
	0x032CB10C BL 0x1993444
	0x032CB110 ADRP X0, 0xE5A000
	0x032CB114 LDR X0, [X0 + 0xB70]
	0x032CB118 BL 0x1C16D08
	0x032CB11C MOV X1, X19
	0x032CB120 MOV X2, X31
	0x032CB124 BL 0x33BFB40
	0x032CB128 B 0x32CB07C
	0x032CB12C SUB X31, X31, 0x40
	0x032CB130 STP X30, X23, [X31 + 0x10]
	0x032CB134 STP X22, X21, [X31 + 0x20]
	0x032CB138 STP X20, X19, [X31 + 0x30]
	0x032CB13C ADRP X20, 0x1111000
	0x032CB140 LDRB W8, [X20 + 0x8D6]
	0x032CB144 MOV X19, X0
	0x032CB148 TBNZ X8, 0x0, 0x32CB184
	0x032CB14C ADRP X0, 0xE59000
	0x032CB150 LDR X0, [X0 + 0xF00]
	0x032CB154 BL 0x1C16CF4
	0x032CB158 ADRP X0, 0xE29000
	0x032CB15C LDR X0, [X0 + 0xE58]
	0x032CB160 BL 0x1C16CF4
	0x032CB164 ADRP X0, 0xE5A000
	0x032CB168 LDR X0, [X0 + 0xA98]
	0x032CB16C BL 0x1C16CF4
	0x032CB170 ADRP X0, 0xE59000
	0x032CB174 LDR X0, [X0 + 0xBD0]
	0x032CB178 BL 0x1C16CF4
	0x032CB17C MOVZ W8, 0x1
	0x032CB180 STRB W8, [X20 + 0x8D6]
	0x032CB184 LDR X0, [X19 + 0x10]
	0x032CB188 CBZ X0, 0x32CB53C
	0x032CB18C LDR X8, [X0]
	0x032CB190 ADRP X23, 0xE5A000
	0x032CB194 LDR X9, [X8 + 0x228]
	0x032CB198 LDR X1, [X8 + 0x230]
	0x032CB19C LDR X23, [X23 + 0xA98]
	0x032CB1A0 BLR X9
	0x032CB1A4 LDR X8, [X23]
	0x032CB1A8 MOV W20, W0
	0x032CB1AC LDR W9, [X8 + 0xE0]
	0x032CB1B0 CBNZ W9, 0x32CB1C0
	0x032CB1B4 MOV X0, X8
	0x032CB1B8 BL 0x1C16DFC
	0x032CB1BC LDR X8, [X23]
	0x032CB1C0 LDR X8, [X8 + 0xB8]
	0x032CB1C4 LDR W8, [X8]
	0x032CB1C8 CMP W20, W8
	0x032CB1CC B.NE 0x32CB668
	0x032CB1D0 LDR X0, [X19 + 0x10]
	0x032CB1D4 CBZ X0, 0x32CB53C
	0x032CB1D8 LDR X8, [X0]
	0x032CB1DC LDR X9, [X8 + 0x228]
	0x032CB1E0 LDR X1, [X8 + 0x230]
	0x032CB1E4 BLR X9
	0x032CB1E8 LDR X8, [X19 + 0x10]
	0x032CB1EC CBZ X8, 0x32CB53C
	0x032CB1F0 LDR X9, [X8]
	0x032CB1F4 MOV W21, W0
	0x032CB1F8 MOV X0, X8
	0x032CB1FC LDR X10, [X9 + 0x228]
	0x032CB200 LDR X1, [X9 + 0x230]
	0x032CB204 BLR X10
	0x032CB208 ORR W8, W0, W21, 0x0
	0x032CB20C TBNZ X8, 0x1F, 0x32CB618
	0x032CB210 MOV W20, W0
	0x032CB214 LDR X0, [X19 + 0x10]
	0x032CB218 CBZ X0, 0x32CB53C
	0x032CB21C LDR X8, [X0]
	0x032CB220 CMP W21, 0x2
	0x032CB224 B.GE 0x32CB2A0
	0x032CB228 LDR X9, [X8 + 0x298]
	0x032CB22C LDR X1, [X8 + 0x2A0]
	0x032CB230 BLR X9
	0x032CB234 LDR X8, [X23]
	0x032CB238 MOV X20, X0
	0x032CB23C LDR W9, [X8 + 0xE0]
	0x032CB240 CBNZ W9, 0x32CB250
	0x032CB244 MOV X0, X8
	0x032CB248 BL 0x1C16DFC
	0x032CB24C LDR X8, [X23]
	0x032CB250 ADRP X9, 0xE59000
	0x032CB254 LDR X8, [X8 + 0xB8]
	0x032CB258 LDR X9, [X9 + 0xF00]
	0x032CB25C LDR X21, [X8 + 0x20]
	0x032CB260 LDR X0, [X9]
	0x032CB264 BL 0x1C16F10
	0x032CB268 MOV X1, X21
	0x032CB26C MOV X2, X31
	0x032CB270 MOV X22, X0
	0x032CB274 BL 0x32D5CD4
	0x032CB278 LDR X8, [X23]
	0x032CB27C MOV X0, X20
	0x032CB280 MOV X2, X22
	0x032CB284 LDR X8, [X8 + 0xB8]
	0x032CB288 LDR X1, [X8 + 0x10]
	0x032CB28C BL 0x32C84F0
	0x032CB290 TBZ X0, 0x0, 0x32CB75C
	0x032CB294 MOV X0, X19
	0x032CB298 BL 0x32C8AC8
	0x032CB29C B 0x32CB2C4
	0x032CB2A0 LDP X9, X1, [X8 + 0x188]
	0x032CB2A4 BLR X9
	0x032CB2A8 CBZ X0, 0x32CB53C
	0x032CB2AC LDR X8, [X0]
	0x032CB2B0 MOV W1, W20
	0x032CB2B4 MOVZ W2, 0x1
	0x032CB2B8 LDR X9, [X8 + 0x338]
	0x032CB2BC LDR X3, [X8 + 0x340]
	0x032CB2C0 BLR X9
	0x032CB2C4 LDR X0, [X19 + 0x10]
	0x032CB2C8 CBZ X0, 0x32CB53C
	0x032CB2CC LDR X8, [X0]
	0x032CB2D0 LDR X9, [X8 + 0x228]
	0x032CB2D4 LDR X1, [X8 + 0x230]
	0x032CB2D8 BLR X9
	0x032CB2DC SUB W8, W0, 0x1
	0x032CB2E0 MOV W20, W0
	0x032CB2E4 CMP W8, 0x2
	0x032CB2E8 B.CS 0x32CB680
	0x032CB2EC LDR X0, [X19 + 0x10]
	0x032CB2F0 STR W20, [X19 + 0x78]
	0x032CB2F4 CBZ X0, 0x32CB53C
	0x032CB2F8 LDR X8, [X0]
	0x032CB2FC LDR X9, [X8 + 0x228]
	0x032CB300 LDR X1, [X8 + 0x230]
	0x032CB304 BLR X9
	0x032CB308 STR W0, [X19 + 0x68]
	0x032CB30C TBNZ X0, 0x1F, 0x32CB618
	0x032CB310 LDR X0, [X19 + 0x10]
	0x032CB314 CBZ X0, 0x32CB53C
	0x032CB318 LDR X8, [X0]
	0x032CB31C LDR X9, [X8 + 0x228]
	0x032CB320 LDR X1, [X8 + 0x230]
	0x032CB324 BLR X9
	0x032CB328 TBNZ X0, 0x1F, 0x32CB618
	0x032CB32C ADRP X8, 0xE59000
	0x032CB330 LDR X8, [X8 + 0xBD0]
	0x032CB334 MOV W21, W0
	0x032CB338 ADRP X22, 0xE29000
	0x032CB33C MOV W1, W21
	0x032CB340 LDR X0, [X8]
	0x032CB344 LDR X22, [X22 + 0xE58]
	0x032CB348 BL 0x1C16D6C
	0x032CB34C STR X0, [X19 + 0x50]
	0x032CB350 LDR X0, [X22]
	0x032CB354 MOV W1, W21
	0x032CB358 BL 0x1C16D6C
	0x032CB35C STR X0, [X19 + 0x58]
	0x032CB360 CBZ W21, 0x32CB3D4
	0x032CB364 MOV X20, X0
	0x032CB368 LDR X0, [X19 + 0x10]
	0x032CB36C CBZ X0, 0x32CB53C
	0x032CB370 MOV W8, W21
	0x032CB374 MOV X23, X31
	0x032CB378 SUB X21, X8, 0x1
	0x032CB37C LDR X8, [X0]
	0x032CB380 LDP X9, X1, [X8 + 0x188]
	0x032CB384 BLR X9
	0x032CB388 CBZ X0, 0x32CB53C
	0x032CB38C LDR X8, [X0]
	0x032CB390 LDP X9, X1, [X8 + 0x1F8]
	0x032CB394 BLR X9
	0x032CB398 CBZ X20, 0x32CB53C
	0x032CB39C LDR W8, [X20 + 0x18]
	0x032CB3A0 CMP X23, X8
	0x032CB3A4 B.CS 0x32CB614
	0x032CB3A8 ADD X8, X20, X23, 0x2, LSL
	0x032CB3AC STR W0, [X8 + 0x20]
	0x032CB3B0 MOV X0, X19
	0x032CB3B4 BL 0x32C8AC8
	0x032CB3B8 CMP X21, X23
	0x032CB3BC B.EQ 0x32CB3D4
	0x032CB3C0 LDR X0, [X19 + 0x10]
	0x032CB3C4 LDR X20, [X19 + 0x58]
	0x032CB3C8 ADD X23, X23, 0x1
	0x032CB3CC CBNZ X0, 0x32CB37C
	0x032CB3D0 B 0x32CB53C
	0x032CB3D4 LDR X0, [X19 + 0x10]
	0x032CB3D8 CBZ X0, 0x32CB53C
	0x032CB3DC LDR X8, [X0]
	0x032CB3E0 LDP X9, X1, [X8 + 0x188]
	0x032CB3E4 BLR X9
	0x032CB3E8 CBZ X0, 0x32CB53C
	0x032CB3EC LDR X8, [X0]
	0x032CB3F0 LDP X9, X1, [X8 + 0x1F8]
	0x032CB3F4 BLR X9
	0x032CB3F8 ANDS W8, W0, 0x7
	0x032CB3FC B.EQ 0x32CB420
	0x032CB400 ORR W20, W8, 0xFFFFFFF8
	0x032CB404 LDR X0, [X19 + 0x10]
	0x032CB408 CBZ X0, 0x32CB53C
	0x032CB40C LDR X8, [X0]
	0x032CB410 LDP X9, X1, [X8 + 0x1D8]
	0x032CB414 BLR X9
	0x032CB418 ADDS W20, W20, 0x1
	0x032CB41C B.CC 0x32CB404
	0x032CB420 LDR X0, [X19 + 0x70]
	0x032CB424 LDR W20, [X19 + 0x68]
	0x032CB428 CBZ X0, 0x32CB4CC
	0x032CB42C UBFM X8, X20, 0x1D, 0x1F
	0x032CB430 CBNZ W8, 0x32CB618
	0x032CB434 MOV X1, X31
	0x032CB438 BL 0x32EAA34
	0x032CB43C LDR X8, [X19 + 0x70]
	0x032CB440 STR X0, [X19 + 0x38]
	0x032CB444 CBZ X8, 0x32CB53C
	0x032CB448 LDR X9, [X8]
	0x032CB44C UBFM X1, X20, 0x3E, 0x3D
	0x032CB450 MOVZ W2, 0x1
	0x032CB454 MOV X0, X8
	0x032CB458 LDR X10, [X9 + 0x338]
	0x032CB45C LDR X3, [X9 + 0x340]
	0x032CB460 BLR X10
	0x032CB464 LDR X0, [X19 + 0x70]
	0x032CB468 CBZ X0, 0x32CB53C
	0x032CB46C MOV X1, X31
	0x032CB470 BL 0x32EAA34
	0x032CB474 LDR W20, [X19 + 0x68]
	0x032CB478 LDR X0, [X19 + 0x70]
	0x032CB47C CBZ X0, 0x32CB540
	0x032CB480 UBFM W8, W20, 0x1D, 0x1F
	0x032CB484 CBNZ W8, 0x32CB618
	0x032CB488 MOV X1, X31
	0x032CB48C BL 0x32EAA34
	0x032CB490 LDR X8, [X19 + 0x70]
	0x032CB494 STR X0, [X19 + 0x48]
	0x032CB498 CBZ X8, 0x32CB53C
	0x032CB49C LDR X9, [X8]
	0x032CB4A0 UBFM W1, W20, 0x1E, 0x1D
	0x032CB4A4 MOVZ W2, 0x1
	0x032CB4A8 MOV X0, X8
	0x032CB4AC LDR X10, [X9 + 0x338]
	0x032CB4B0 LDR X3, [X9 + 0x340]
	0x032CB4B4 BLR X10
	0x032CB4B8 LDR X0, [X19 + 0x70]
	0x032CB4BC CBZ X0, 0x32CB53C
	0x032CB4C0 MOV X1, X31
	0x032CB4C4 BL 0x32EAA34
	0x032CB4C8 B 0x32CB5A8
	0x032CB4CC LDR X0, [X22]
	0x032CB4D0 MOV W1, W20
	0x032CB4D4 BL 0x1C16D6C
	0x032CB4D8 LDR W20, [X19 + 0x68]
	0x032CB4DC STR X0, [X19 + 0x30]
	0x032CB4E0 CMP W20, 0x1
	0x032CB4E4 B.LT 0x32CB478
	0x032CB4E8 MOV X21, X0
	0x032CB4EC LDR X0, [X19 + 0x10]
	0x032CB4F0 CBZ X0, 0x32CB53C
	0x032CB4F4 MOV X23, X31
	0x032CB4F8 LDR X8, [X0]
	0x032CB4FC LDR X9, [X8 + 0x228]
	0x032CB500 LDR X1, [X8 + 0x230]
	0x032CB504 BLR X9
	0x032CB508 CBZ X21, 0x32CB53C
	0x032CB50C LDR W8, [X21 + 0x18]
	0x032CB510 CMP X23, X8
	0x032CB514 B.CS 0x32CB614
	0x032CB518 ADD X8, X21, X23, 0x2, LSL
	0x032CB51C STR W0, [X8 + 0x20]
	0x032CB520 LDRSW X20, [X19 + 0x68]
	0x032CB524 ADD X23, X23, 0x1
	0x032CB528 CMP X23, X20
	0x032CB52C B.GE 0x32CB478
	0x032CB530 LDR X0, [X19 + 0x10]
	0x032CB534 LDR X21, [X19 + 0x30]
	0x032CB538 CBNZ X0, 0x32CB4F8
	0x032CB53C BL 0x1C16F20
	0x032CB540 LDR X0, [X22]
	0x032CB544 MOV W1, W20
	0x032CB548 BL 0x1C16D6C
	0x032CB54C LDR W8, [X19 + 0x68]
	0x032CB550 STR X0, [X19 + 0x40]
	0x032CB554 CMP W8, 0x1
	0x032CB558 B.LT 0x32CB5A8
	0x032CB55C MOV X20, X31
	0x032CB560 LDR X0, [X19 + 0x10]
	0x032CB564 CBZ X0, 0x32CB53C
	0x032CB568 LDR X8, [X0]
	0x032CB56C LDR X9, [X8 + 0x228]
	0x032CB570 LDR X1, [X8 + 0x230]
	0x032CB574 BLR X9
	0x032CB578 TBNZ X0, 0x1F, 0x32CB618
	0x032CB57C LDR X8, [X19 + 0x40]
	0x032CB580 CBZ X8, 0x32CB53C
	0x032CB584 LDR W9, [X8 + 0x18]
	0x032CB588 CMP X20, X9
	0x032CB58C B.CS 0x32CB614
	0x032CB590 ADD X8, X8, X20, 0x2, LSL
	0x032CB594 STR W0, [X8 + 0x20]
	0x032CB598 LDRSW X8, [X19 + 0x68]
	0x032CB59C ADD X20, X20, 0x1
	0x032CB5A0 CMP X20, X8
	0x032CB5A4 B.LT 0x32CB560
	0x032CB5A8 LDR X0, [X19 + 0x10]
	0x032CB5AC CBZ X0, 0x32CB53C
	0x032CB5B0 LDR X8, [X0]
	0x032CB5B4 LDR X9, [X8 + 0x228]
	0x032CB5B8 LDR X1, [X8 + 0x230]
	0x032CB5BC BLR X9
	0x032CB5C0 SXTW X8, W0
	0x032CB5C4 STR X8, [X19 + 0x28]
	0x032CB5C8 TBNZ X0, 0x1F, 0x32CB618
	0x032CB5CC LDR X0, [X19 + 0x10]
	0x032CB5D0 CBZ X0, 0x32CB53C
	0x032CB5D4 LDR X8, [X0]
	0x032CB5D8 LDP X9, X1, [X8 + 0x188]
	0x032CB5DC BLR X9
	0x032CB5E0 CBZ X0, 0x32CB53C
	0x032CB5E4 LDR X8, [X0]
	0x032CB5E8 LDP X9, X1, [X8 + 0x1F8]
	0x032CB5EC BLR X9
	0x032CB5F0 LDR X8, [X19 + 0x28]
	0x032CB5F4 STR X0, [X19 + 0x20]
	0x032CB5F8 CMP X8, X0
	0x032CB5FC B.LT 0x32CB618
	0x032CB600 LDP X20, X19, [X31 + 0x30]
	0x032CB604 LDP X22, X21, [X31 + 0x20]
	0x032CB608 LDP X30, X23, [X31 + 0x10]
	0x032CB60C ADD X31, X31, 0x40
	0x032CB610 RET
	0x032CB614 BL 0x1C16F28
	0x032CB618 ADRP X0, 0xE5A000
	0x032CB61C LDR X0, [X0 + 0xAB8]
	0x032CB620 BL 0x1C16D08
	0x032CB624 MOV X1, X31
	0x032CB628 BL 0x33BDD84
	0x032CB62C MOV X19, X0
	0x032CB630 ADRP X0, 0xE5A000
	0x032CB634 LDR X0, [X0 + 0x4C8]
	0x032CB638 BL 0x1C16D08
	0x032CB63C BL 0x1C16F10
	0x032CB640 MOV X1, X19
	0x032CB644 MOV X2, X31
	0x032CB648 MOV X20, X0
	0x032CB64C BL 0x33167DC
	0x032CB650 ADRP X0, 0xE5A000
	0x032CB654 LDR X0, [X0 + 0xB78]
	0x032CB658 BL 0x1C16D08
	0x032CB65C MOV X1, X0
	0x032CB660 MOV X0, X20
	0x032CB664 BL 0x1C16DEC
	0x032CB668 ADRP X0, 0xE5A000
	0x032CB66C LDR X0, [X0 + 0xB80]
	0x032CB670 BL 0x1C16D08
	0x032CB674 MOV X1, X31
	0x032CB678 BL 0x33BDD84
	0x032CB67C B 0x32CB734
	0x032CB680 ADRP X0, 0xE28000
	0x032CB684 LDR X0, [X0 + 0x9D0]
	0x032CB688 BL 0x1C16D08
	0x032CB68C MOVZ W1, 0x2
	0x032CB690 MOVZ W21, 0x2
	0x032CB694 BL 0x1C16D6C
	0x032CB698 STR W21, [X31 + 0xC]
	0x032CB69C ADRP X21, 0xE28000
	0x032CB6A0 LDR X21, [X21 + 0x758]
	0x032CB6A4 MOV X19, X0
	0x032CB6A8 MOV X0, X21
	0x032CB6AC BL 0x1C16D08
	0x032CB6B0 ADD X1, X31, 0xC
	0x032CB6B4 BL 0x1C16E04
	0x032CB6B8 MOV X22, X0
	0x032CB6BC MOV X0, X19
	0x032CB6C0 BL 0x19903C0
	0x032CB6C4 MOV X0, X19
	0x032CB6C8 MOV X1, X22
	0x032CB6CC BL 0x19980B4
	0x032CB6D0 MOV X0, X19
	0x032CB6D4 MOV X1, X31
	0x032CB6D8 MOV X2, X22
	0x032CB6DC BL 0x1993444
	0x032CB6E0 MOV X0, X21
	0x032CB6E4 STR W20, [X31 + 0x8]
	0x032CB6E8 BL 0x1C16D08
	0x032CB6EC ADD X1, X31, 0x8
	0x032CB6F0 BL 0x1C16E04
	0x032CB6F4 MOV X20, X0
	0x032CB6F8 MOV X0, X19
	0x032CB6FC BL 0x19903C0
	0x032CB700 MOV X0, X19
	0x032CB704 MOV X1, X20
	0x032CB708 BL 0x19980B4
	0x032CB70C MOVZ W1, 0x1
	0x032CB710 MOV X0, X19
	0x032CB714 MOV X2, X20
	0x032CB718 BL 0x1993444
	0x032CB71C ADRP X0, 0xE5A000
	0x032CB720 LDR X0, [X0 + 0xB88]
	0x032CB724 BL 0x1C16D08
	0x032CB728 MOV X1, X19
	0x032CB72C MOV X2, X31
	0x032CB730 BL 0x33BFB40
	0x032CB734 MOV X19, X0
	0x032CB738 ADRP X0, 0xE30000
	0x032CB73C LDR X0, [X0 + 0x578]
	0x032CB740 BL 0x1C16D08
	0x032CB744 BL 0x1C16F10
	0x032CB748 MOV X1, X19
	0x032CB74C MOV X2, X31
	0x032CB750 MOV X20, X0
	0x032CB754 BL 0x3314A68
	0x032CB758 B 0x32CB650
	0x032CB75C ADRP X0, 0xE28000
	0x032CB760 LDR X0, [X0 + 0x9D0]
	0x032CB764 BL 0x1C16D08
	0x032CB768 MOVZ W1, 0x1
	0x032CB76C BL 0x1C16D6C
	0x032CB770 MOV X19, X0
	0x032CB774 BL 0x19903C0
	0x032CB778 MOV X0, X19
	0x032CB77C MOV X1, X20
	0x032CB780 BL 0x19980B4
	0x032CB784 MOV X0, X19
	0x032CB788 MOV X1, X31
	0x032CB78C MOV X2, X20
	0x032CB790 BL 0x1993444
	0x032CB794 ADRP X0, 0xE5A000
	0x032CB798 LDR X0, [X0 + 0xB90]
	0x032CB79C BL 0x1C16D08
	0x032CB7A0 MOV X1, X19
	0x032CB7A4 MOV X2, X31
	0x032CB7A8 BL 0x33BFB40
	0x032CB7AC MOV X19, X0
	0x032CB7B0 ADRP X0, 0xE28000
	0x032CB7B4 LDR X0, [X0 + 0xB40]
	0x032CB7B8 BL 0x1C16D08
	0x032CB7BC BL 0x1C16F10
	0x032CB7C0 MOV X1, X19
	0x032CB7C4 MOV X2, X31
	0x032CB7C8 MOV X20, X0
	0x032CB7CC BL 0x3379A44
	0x032CB7D0 B 0x32CB650
	0x032CB7D4 SUB X31, X31, 0x30
	0x032CB7D8 STP X30, X21, [X31 + 0x10]
	0x032CB7DC STP X20, X19, [X31 + 0x20]
	0x032CB7E0 ADRP X21, 0x1111000
	0x032CB7E4 ADRP X20, 0xE30000
	0x032CB7E8 LDRB W8, [X21 + 0x8D8]
	0x032CB7EC LDR X20, [X20 + 0xF10]
	0x032CB7F0 MOV X19, X0
	0x032CB7F4 TBNZ X8, 0x0, 0x32CB80C
	0x032CB7F8 ADRP X0, 0xE30000
	0x032CB7FC LDR X0, [X0 + 0xF10]
	0x032CB800 BL 0x1C16CF4
	0x032CB804 MOVZ W8, 0x1
	0x032CB808 STRB W8, [X21 + 0x8D8]
	0x032CB80C MOV X0, X19
	0x032CB810 BL 0x32CB838
	0x032CB814 LDR X8, [X20]
	0x032CB818 STP X0, X1, [X31]
	0x032CB81C ADD X1, X31, 0x0
	0x032CB820 MOV X0, X8
	0x032CB824 BL 0x1C16E04
	0x032CB828 LDP X20, X19, [X31 + 0x20]
	0x032CB82C LDP X30, X21, [X31 + 0x10]
	0x032CB830 ADD X31, X31, 0x30
	0x032CB834 RET
	0x032CB838 SUB X31, X31, 0x70
	0x032CB83C STP X30, X25, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+64], X24
	004 Move [X31+72], X23
	005 Move [X31+80], X22
	006 Move [X31+88], X21
	007 Move [X31+96], X20
	008 Move [X31+104], X19
	009 NotImplemented "Instruction MRS not yet implemented."
	010 Move X8, [X23+40]
	011 Move X21, 0x1112000
	012 Move W20, W1
	013 Move X19, X0
	014 Move [X31+40], X8
	015 Move W8, [X21+2258]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {109}
	020 Move X0, 0xE50000
	021 Move X0, [X0+3432]
	022 Call 0x1C17CF4
	023 Move X0, 0xE2A000
	024 Move X0, [X0+2520]
	025 Call 0x1C17CF4
	026 Move X0, 0xE5A000
	027 Move X0, [X0+3896]
	028 Call 0x1C17CF4
	029 Move X0, 0xE2A000
	030 Move X0, [X0+2544]
	031 Call 0x1C17CF4
	032 Move X0, 0xE5B000
	033 Move X0, [X0+320]
	034 Call 0x1C17CF4
	035 Move X0, 0xE51000
	036 Move X0, [X0+1520]
	037 Call 0x1C17CF4
	038 Move X0, 0xE51000
	039 Move X0, [X0+2680]
	040 Call 0x1C17CF4
	041 Move X0, 0xE2C000
	042 Move X0, [X0+2424]
	043 Call 0x1C17CF4
	044 Move X0, 0xE50000
	045 Move X0, [X0+3448]
	046 Call 0x1C17CF4
	047 Move X0, 0xE2D000
	048 Move X0, [X0+1576]
	049 Call 0x1C17CF4
	050 Move X0, 0xE2A000
	051 Move X0, [X0+3672]
	052 Call 0x1C17CF4
	053 Move X0, 0xE50000
	054 Move X0, [X0+3456]
	055 Call 0x1C17CF4
	056 Move X0, 0xE29000
	057 Move X0, [X0+1880]
	058 Call 0x1C17CF4
	059 Move X0, 0xE50000
	060 Move X0, [X0+3464]
	061 Call 0x1C17CF4
	062 Move X0, 0xE2B000
	063 Move X0, [X0+2656]
	064 Call 0x1C17CF4
	065 Move X0, 0xE50000
	066 Move X0, [X0+3472]
	067 Call 0x1C17CF4
	068 Move X0, 0xE52000
	069 Move X0, [X0+1712]
	070 Call 0x1C17CF4
	071 Move X0, 0xE51000
	072 Move X0, [X0+2688]
	073 Call 0x1C17CF4
	074 Move X0, 0xE29000
	075 Move X0, [X0+2704]
	076 Call 0x1C17CF4
	077 Move X0, 0xE51000
	078 Move X0, [X0+2912]
	079 Call 0x1C17CF4
	080 Move X0, 0xE5B000
	081 Move X0, [X0+384]
	082 Call 0x1C17CF4
	083 Move X0, 0xE2B000
	084 Move X0, [X0+1392]
	085 Call 0x1C17CF4
	086 Move X0, 0xE29000
	087 Move X0, [X0+1728]
	088 Call 0x1C17CF4
	089 Move X0, 0xE50000
	090 Move X0, [X0+3480]
	091 Call 0x1C17CF4
	092 Move X0, 0xE2E000
	093 Move X0, [X0+1624]
	094 Call 0x1C17CF4
	095 Move X0, 0xE50000
	096 Move X0, [X0+3488]
	097 Call 0x1C17CF4
	098 Move X0, 0xE31000
	099 Move X0, [X0+1824]
	100 Call 0x1C17CF4
	101 Move X0, 0xE50000
	102 Move X0, [X0+3496]
	103 Call 0x1C17CF4
	104 Move X0, 0xE2A000
	105 Move X0, [X0+1880]
	106 Call 0x1C17CF4
	107 Move W8, 1
	108 Move [X21+2258], W8
	109 Move X0, [X19+16]
	110 Compare X0, 0
	111 JumpIfEqual {595}
	112 Move X8, [X0]
	113 Move X9, [X8+392]
	114 Move X1, [X8+400]
	115 NotImplemented "Instruction BLR not yet implemented."
	116 Compare X0, 0
	117 JumpIfEqual {595}
	118 Move X8, [X0]
	119 Move X9, [X19+40]
	120 Move W2, W31
	121 Move X10, [X8+824]
	122 Move X3, [X8+832]
	123 Add X1, X9, W20
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Move X0, [X19+16]
	126 Compare X0, 0
	127 JumpIfEqual {595}
	128 Move X1, X31
	129 Call BinaryReader.Read7BitEncodedInt, X0
	130 Add W31, W0, 1
	131 Move X21, 0xE51000
	132 Move X24, 0xE29000
	133 Move X21, [X21+2912]
	134 Move X24, [X24+1728]
	135 Move W20, W0
	136 Move X0, X19
	137 Move W1, W20
	138 Call ResourceReader.FindType, X0, X1
	139 Move X8, [X24]
	140 Move X22, [X21]
	141 Move X21, X0
	142 Move W9, [X8+224]
	143 Compare W9, 0
	144 JumpIfNotEqual {147}
	145 Move X0, X8
	146 Call 0x1C17DFC
	147 Move X0, X22
	148 Move X1, X31
	149 Call Type.GetTypeFromHandle, X0
	150 Move X1, X0
	151 Move X0, X21
	152 Move X2, X31
	153 Call Type.op_Equality, X0, X1
	154 Move TEMP, X0
	155 And TEMP, TEMP, 1
	156 Compare TEMP, 1
	157 JumpIfNotEqual {166}
	158 Move X0, [X19+16]
	159 Compare X0, 0
	160 JumpIfEqual {595}
	161 Move X8, [X0]
	162 Move X9, [X8+664]
	163 Move X1, [X8+672]
	164 NotImplemented "Instruction BLR not yet implemented."
	165 Move X0, X31
	166 Move X8, 0xE50000
	167 Move X0, [X24]
	168 Move X8, [X8+3456]
	169 Move W9, [X0+224]
	170 Move X22, [X8]
	171 Compare W9, 0
	172 JumpIfNotEqual {174}
	173 Call 0x1C17DFC
	174 Move X0, X22
	175 Move X1, X31
	176 Call Type.GetTypeFromHandle, X0
	177 Move X1, X0
	178 Move X0, X21
	179 Move X2, X31
	180 Call Type.op_Equality, X0, X1
	181 Move TEMP, X0
	182 And TEMP, TEMP, 1
	183 Compare TEMP, 1
	184 JumpIfNotEqual {196}
	185 Move X0, [X19+16]
	186 Compare X0, 0
	187 JumpIfEqual {595}
	188 Move X8, [X0]
	189 Move X9, [X8+552]
	190 Move X1, [X8+560]
	191 NotImplemented "Instruction BLR not yet implemented."
	192 Move X8, 0xE29000
	193 Move X8, [X8+1880]
	194 Move X8, [X8]
	195 Move [X31+24], W0
	196 Move X8, 0xE50000
	197 Move X0, [X24]
	198 Move X8, [X8+3432]
	199 Move W9, [X0+224]
	200 Move X22, [X8]
	201 Compare W9, 0
	202 JumpIfNotEqual {204}
	203 Call 0x1C17DFC
	204 Move X0, X22
	205 Move X1, X31
	206 Call Type.GetTypeFromHandle, X0
	207 Move X1, X0
	208 Move X0, X21
	209 Move X2, X31
	210 Call Type.op_Equality, X0, X1
	211 Move TEMP, X0
	212 And TEMP, TEMP, 1
	213 Compare TEMP, 1
	214 JumpIfNotEqual {224}
	215 Move X0, [X19+16]
	216 Compare X0, 0
	217 JumpIfEqual {595}
	218 Move X8, [X0]
	219 Move X9, [X8+472]
	220 Move X1, [X8+480]
	221 NotImplemented "Instruction BLR not yet implemented."
	222 Move X8, 0xE2A000
	223 Move X8, [X8+2520]
	224 Move X8, 0xE50000
	225 Move X0, [X24]
	226 Move X8, [X8+3472]
	227 Move W9, [X0+224]
	228 Move X22, [X8]
	229 Compare W9, 0
	230 JumpIfNotEqual {232}
	231 Call 0x1C17DFC
	232 Move X0, X22
	233 Move X1, X31
	234 Call Type.GetTypeFromHandle, X0
	235 Move X1, X0
	236 Move X0, X21
	237 Move X2, X31
	238 Call Type.op_Equality, X0, X1
	239 Move TEMP, X0
	240 And TEMP, TEMP, 1
	241 Compare TEMP, 1
	242 JumpIfNotEqual {269}
	243 Move X0, [X19+16]
	244 Compare X0, 0
	245 JumpIfEqual {595}
	246 Move X8, [X0]
	247 Move X9, [X8+488]
	248 Move X1, [X8+496]
	249 NotImplemented "Instruction BLR not yet implemented."
	250 Move X8, 0xE52000
	251 Move X8, [X8+1712]
	252 Move X8, [X8]
	253 Move [X31+24], W0
	254 Add X1, X31, 24
	255 Move X0, X8
	256 Call 0x1C17E04
	257 Move X8, [X23+40]
	258 Move X9, [X31+40]
	259 NotImplemented "Instruction CMP not yet implemented."
	260 Move X20, [X31+96]
	261 Move X19, [X31+104]
	262 Move X22, [X31+80]
	263 Move X21, [X31+88]
	264 Move X24, [X31+64]
	265 Move X23, [X31+72]
	266 Move X30, [X31+48]
	267 Add X31, X31, 112
	268 Return X0
	269 Move X8, 0xE50000
	270 Move X0, [X24]
	271 Move X8, [X8+3448]
	272 Move W9, [X0+224]
	273 Move X22, [X8]
	274 Compare W9, 0
	275 JumpIfNotEqual {277}
	276 Call 0x1C17DFC
	277 Move X0, X22
	278 Move X1, X31
	279 Call Type.GetTypeFromHandle, X0
	280 Move X1, X0
	281 Move X0, X21
	282 Move X2, X31
	283 Call Type.op_Equality, X0, X1
	284 Move TEMP, X0
	285 And TEMP, TEMP, 1
	286 Compare TEMP, 1
	287 JumpIfNotEqual {299}
	288 Move X0, [X19+16]
	289 Compare X0, 0
	290 JumpIfEqual {595}
	291 Move X8, [X0]
	292 Move X9, [X8+520]
	293 Move X1, [X8+528]
	294 NotImplemented "Instruction BLR not yet implemented."
	295 Move X8, 0xE2D000
	296 Move X8, [X8+1576]
	297 Move X8, [X8]
	298 NotImplemented "Instruction STRH not yet implemented."
	299 Move X8, 0xE50000
	300 Move X0, [X24]
	301 Move X8, [X8+3464]
	302 Move W9, [X0+224]
	303 Move X22, [X8]
	304 Compare W9, 0
	305 JumpIfNotEqual {307}
	306 Call 0x1C17DFC
	307 Move X0, X22
	308 Move X1, X31
	309 Call Type.GetTypeFromHandle, X0
	310 Move X1, X0
	311 Move X0, X21
	312 Move X2, X31
	313 Call Type.op_Equality, X0, X1
	314 Move TEMP, X0
	315 And TEMP, TEMP, 1
	316 Compare TEMP, 1
	317 JumpIfNotEqual {329}
	318 Move X0, [X19+16]
	319 Compare X0, 0
	320 JumpIfEqual {595}
	321 Move X8, [X0]
	322 Move X9, [X8+584]
	323 Move X1, [X8+592]
	324 NotImplemented "Instruction BLR not yet implemented."
	325 Move X8, 0xE2B000
	326 Move X8, [X8+2656]
	327 Move X8, [X8]
	328 Move [X31+24], X0
	329 Move X8, 0xE50000
	330 Move X0, [X24]
	331 Move X8, [X8+3480]
	332 Move W9, [X0+224]
	333 Move X22, [X8]
	334 Compare W9, 0
	335 JumpIfNotEqual {337}
	336 Call 0x1C17DFC
	337 Move X0, X22
	338 Move X1, X31
	339 Call Type.GetTypeFromHandle, X0
	340 Move X1, X0
	341 Move X0, X21
	342 Move X2, X31
	343 Call Type.op_Equality, X0, X1
	344 Move TEMP, X0
	345 And TEMP, TEMP, 1
	346 Compare TEMP, 1
	347 JumpIfNotEqual {357}
	348 Move X0, [X19+16]
	349 Compare X0, 0
	350 JumpIfEqual {595}
	351 Move X8, [X0]
	352 Move X9, [X8+536]
	353 Move X1, [X8+544]
	354 NotImplemented "Instruction BLR not yet implemented."
	355 Move X8, 0xE2E000
	356 Move X8, [X8+1624]
	357 Move X8, 0xE50000
	358 Move X0, [X24]
	359 Move X8, [X8+3488]
	360 Move W9, [X0+224]
	361 Move X22, [X8]
	362 Compare W9, 0
	363 JumpIfNotEqual {365}
	364 Call 0x1C17DFC
	365 Move X0, X22
	366 Move X1, X31
	367 Call Type.GetTypeFromHandle, X0
	368 Move X1, X0
	369 Move X0, X21
	370 Move X2, X31
	371 Call Type.op_Equality, X0, X1
	372 Move TEMP, X0
	373 And TEMP, TEMP, 1
	374 Compare TEMP, 1
	375 JumpIfNotEqual {385}
	376 Move X0, [X19+16]
	377 Compare X0, 0
	378 JumpIfEqual {595}
	379 Move X8, [X0]
	380 Move X9, [X8+568]
	381 Move X1, [X8+576]
	382 NotImplemented "Instruction BLR not yet implemented."
	383 Move X8, 0xE31000
	384 Move X8, [X8+1824]
	385 Move X8, 0xE50000
	386 Move X0, [X24]
	387 Move X8, [X8+3496]
	388 Move W9, [X0+224]
	389 Move X22, [X8]
	390 Compare W9, 0
	391 JumpIfNotEqual {393}
	392 Call 0x1C17DFC
	393 Move X0, X22
	394 Move X1, X31
	395 Call Type.GetTypeFromHandle, X0
	396 Move X1, X0
	397 Move X0, X21
	398 Move X2, X31
	399 Call Type.op_Equality, X0, X1
	400 Move TEMP, X0
	401 And TEMP, TEMP, 1
	402 Compare TEMP, 1
	403 JumpIfNotEqual {413}
	404 Move X0, [X19+16]
	405 Compare X0, 0
	406 JumpIfEqual {595}
	407 Move X8, [X0]
	408 Move X9, [X8+600]
	409 Move X1, [X8+608]
	410 NotImplemented "Instruction BLR not yet implemented."
	411 Move X8, 0xE2A000
	412 Move X8, [X8+1880]
	413 Move X8, 0xE51000
	414 Move X0, [X24]
	415 Move X8, [X8+2688]
	416 Move W9, [X0+224]
	417 Move X22, [X8]
	418 Compare W9, 0
	419 JumpIfNotEqual {421}
	420 Call 0x1C17DFC
	421 Move X0, X22
	422 Move X1, X31
	423 Call Type.GetTypeFromHandle, X0
	424 Move X1, X0
	425 Move X0, X21
	426 Move X2, X31
	427 Call Type.op_Equality, X0, X1
	428 Move TEMP, X0
	429 And TEMP, TEMP, 1
	430 Compare TEMP, 1
	431 JumpIfNotEqual {442}
	432 Move X0, [X19+16]
	433 Compare X0, 0
	434 JumpIfEqual {595}
	435 Move X8, [X0]
	436 Move X9, [X8+616]
	437 Move X1, [X8+624]
	438 NotImplemented "Instruction BLR not yet implemented."
	439 Move X8, 0xE29000
	440 Move X8, [X8+2704]
	441 Move [X31+24], S0
	442 Move X8, 0xE51000
	443 Move X0, [X24]
	444 Move X8, [X8+2680]
	445 Move W9, [X0+224]
	446 Move X22, [X8]
	447 Compare W9, 0
	448 JumpIfNotEqual {450}
	449 Call 0x1C17DFC
	450 Move X0, X22
	451 Move X1, X31
	452 Call Type.GetTypeFromHandle, X0
	453 Move X1, X0
	454 Move X0, X21
	455 Move X2, X31
	456 Call Type.op_Equality, X0, X1
	457 Move TEMP, X0
	458 And TEMP, TEMP, 1
	459 Compare TEMP, 1
	460 JumpIfNotEqual {473}
	461 Move X0, [X19+16]
	462 Compare X0, 0
	463 JumpIfEqual {595}
	464 Move X8, [X0]
	465 Move X9, [X8+632]
	466 Move X1, [X8+640]
	467 NotImplemented "Instruction BLR not yet implemented."
	468 Move X8, 0xE2C000
	469 Move X8, [X8+2424]
	470 Move [X31+24], D0
	471 Move X0, [X8]
	472 Add X1, X31, 24
	473 Move X8, 0xE5A000
	474 Move X0, [X24]
	475 Move X8, [X8+3896]
	476 Move W9, [X0+224]
	477 Move X22, [X8]
	478 Compare W9, 0
	479 JumpIfNotEqual {481}
	480 Call 0x1C17DFC
	481 Move X0, X22
	482 Move X1, X31
	483 Call Type.GetTypeFromHandle, X0
	484 Move X1, X0
	485 Move X0, X21
	486 Move X2, X31
	487 Call Type.op_Equality, X0, X1
	488 Move TEMP, X0
	489 And TEMP, TEMP, 1
	490 Compare TEMP, 1
	491 JumpIfNotEqual {510}
	492 Move X0, [X19+16]
	493 Compare X0, 0
	494 JumpIfEqual {595}
	495 Move X8, [X0]
	496 Move X9, [X8+584]
	497 Move X1, [X8+592]
	498 NotImplemented "Instruction BLR not yet implemented."
	499 Move X1, X0
	500 Add X0, X31, 24
	501 Move X2, X31
	502 Move [X31+24], X31
	503 Call DateTime..ctor, X0, X1
	504 Move X9, 0xE2A000
	505 Move X8, [X31+24]
	506 Move X9, [X9+2544]
	507 Move [X31], X8
	508 Move X0, [X9]
	509 Add X1, X31, 0
	510 Move X8, 0xE5B000
	511 Move X0, [X24]
	512 Move X8, [X8+384]
	513 Move W9, [X0+224]
	514 Move X22, [X8]
	515 Compare W9, 0
	516 JumpIfNotEqual {518}
	517 Call 0x1C17DFC
	518 Move X0, X22
	519 Move X1, X31
	520 Call Type.GetTypeFromHandle, X0
	521 Move X1, X0
	522 Move X0, X21
	523 Move X2, X31
	524 Call Type.op_Equality, X0, X1
	525 Move TEMP, X0
	526 And TEMP, TEMP, 1
	527 Compare TEMP, 1
	528 JumpIfNotEqual {538}
	529 Move X0, [X19+16]
	530 Compare X0, 0
	531 JumpIfEqual {595}
	532 Move X8, [X0]
	533 Move X9, [X8+584]
	534 Move X1, [X8+592]
	535 NotImplemented "Instruction BLR not yet implemented."
	536 Move X8, 0xE2B000
	537 Move X8, [X8+1392]
	538 Move X8, 0xE5B000
	539 Move X0, [X24]
	540 Move X8, [X8+320]
	541 Move W9, [X0+224]
	542 Move X22, [X8]
	543 Compare W9, 0
	544 JumpIfNotEqual {546}
	545 Call 0x1C17DFC
	546 Move X0, X22
	547 Move X1, X31
	548 Call Type.GetTypeFromHandle, X0
	549 Move X1, X0
	550 Move X0, X21
	551 Move X2, X31
	552 Call Type.op_Equality, X0, X1
	553 Move TEMP, X0
	554 And TEMP, TEMP, 1
	555 Compare TEMP, 1
	556 JumpIfNotEqual {592}
	557 Move X8, 0xE2A000
	558 Move X8, [X8+3672]
	559 Move W1, 4
	560 Move X0, [X8]
	561 Call 0x1C17D6C
	562 Compare X0, 0
	563 JumpIfEqual {595}
	564 Move W8, [X0+24]
	565 Move X20, X0
	566 NotImplemented "Instruction CMP not yet implemented."
	567 Move X21, X31
	568 Add X22, X20, 32
	569 Move X0, [X19+16]
	570 Compare X0, 0
	571 JumpIfEqual {595}
	572 Move X8, [X0]
	573 Move X9, [X8+552]
	574 Move X1, [X8+560]
	575 NotImplemented "Instruction BLR not yet implemented."
	576 Move W8, [X20+24]
	577 NotImplemented "Instruction CMP not yet implemented."
	578 Move [X22], W0
	579 Add X21, X21, 1
	580 NotImplemented "Instruction CMP not yet implemented."
	581 Add X0, X31, 24
	582 Move X1, X20
	583 Move X2, X31
	584 Move [X31+24], X31
	585 Move [X31+32], X31
	586 Call Decimal..ctor, X0, X1
	587 Move X8, 0xE51000
	588 NotImplemented "Instruction LDUR not yet implemented."
	589 Move X8, [X8+1520]
	590 Move [X31], V0
	591 Move X0, [X8]
	592 Move X0, X19
	593 Move W1, W20
	594 Call ResourceReader.DeserializeObject, X0, X1
	595 Call 0x1C17F20
	596 Call 0x1C17F28
	597 Call 0x3EB2B20

Method: System.Object LoadObjectV2(System.Int32 pos, out System.Resources.ResourceTypeCode typeCode)

Disassembly:
	0x032CAB1C MOVZ W8, 0x1
	0x032CAB20 STRB W8, [X23 + 0x8D3]
	0x032CAB24 MOV X23, X19
	0x032CAB28 LDR X0, [X23 + 0x10]!
	0x032CAB2C CBZ X0, 0x32CB064
	0x032CAB30 LDR X8, [X0]
	0x032CAB34 LDP X9, X1, [X8 + 0x188]
	0x032CAB38 BLR X9
	0x032CAB3C CBZ X0, 0x32CB064
	0x032CAB40 LDR X8, [X0]
	0x032CAB44 LDR X9, [X19 + 0x28]
	0x032CAB48 MOV W2, W31
	0x032CAB4C LDR X10, [X8 + 0x338]
	0x032CAB50 LDR X3, [X8 + 0x340]
	0x032CAB54 ADD X1, X9, W21, SXTW
	0x032CAB58 BLR X10
	0x032CAB5C LDR X0, [X19 + 0x10]
	0x032CAB60 CBZ X0, 0x32CB064
	0x032CAB64 MOV X1, X31
	0x032CAB68 BL 0x32F5EE4
	0x032CAB6C CMP W0, 0x21
	0x032CAB70 STR W0, [X20]
	0x032CAB74 B.HI 0x32CAFA8
	0x032CAB78 ADRP X9, 0xFFFFFFFFFD8CC000
	0x032CAB7C MOV W8, W0
	0x032CAB80 ADD X9, X9, 0x5B0
	0x032CAB84 ADR X10, 0x14
	0x032CAB88 LDRH W11, [X9, X8, LSL #1]
	0x032CAB8C ADD X10, X10, X11, 0x2, LSL
	0x032CAB90 MOV X21, X31
	0x032CAB94 BR X10
	0x032CAB98 LDR X0, [X23]
	0x032CAB9C CBZ X0, 0x32CB064
	0x032CABA0 LDR X8, [X0]
	0x032CABA4 LDR X9, [X8 + 0x298]
	0x032CABA8 LDR X1, [X8 + 0x2A0]
	0x032CABAC BLR X9
	0x032CABB0 B 0x32CB008
	0x032CABB4 LDR X0, [X23]
	0x032CABB8 CBZ X0, 0x32CB064
	0x032CABBC LDR X8, [X0]
	0x032CABC0 LDR X9, [X8 + 0x248]
	0x032CABC4 LDR X1, [X8 + 0x250]
	0x032CABC8 BLR X9
	0x032CABCC ADRP X8, 0xE2B000
	0x032CABD0 LDR X8, [X8 + 0x570]
	0x032CABD4 B 0x32CAE48
	0x032CABD8 LDR X0, [X23]
	0x032CABDC CBZ X0, 0x32CB064
	0x032CABE0 LDR X8, [X0]
	0x032CABE4 LDR X9, [X8 + 0x228]
	0x032CABE8 LDR X1, [X8 + 0x230]
	0x032CABEC BLR X9
	0x032CABF0 MOV W20, W0
	0x032CABF4 TBNZ X0, 0x1F, 0x32CB0B8
	0x032CABF8 LDR X0, [X19 + 0x70]
	0x032CABFC CBZ X0, 0x32CAFC0
	0x032CAC00 LDR X8, [X0]
	0x032CAC04 LDP X9, X1, [X8 + 0x1E8]
	0x032CAC08 BLR X9
	0x032CAC0C LDR X8, [X19 + 0x70]
	0x032CAC10 CBZ X8, 0x32CB064

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Call ResourceReader._LoadObjectV2, X0, X1, X2
	006 Move X20, [X31+16]
	007 Move X19, [X31+24]
	008 Move X30, [X31+32]
	009 Move X21, [X31+40]
	010 Return X0
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X19, X0
	013 Move X0, X19
	014 Call 0x3EB2AD0
	015 Move X19, X0
	016 Move X0, 0xE5C000
	017 Move X0, [X0+984]
	018 Call 0x1C17D08
	019 Move X8, [X19]
	020 Move X1, [X8]
	021 Call 0x1C18270
	022 Move TEMP, X0
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfNotEqual {49}
	026 Move X19, [X19]
	027 Call 0x3EB2AE0
	028 Move X0, 0xE5C000
	029 Move X0, [X0+2856]
	030 Call 0x1C17D08
	031 Move X1, X31
	032 Call Environment.GetResourceString, X0
	033 Move X20, X0
	034 Move X0, 0xE5C000
	035 Move X0, [X0+1224]
	036 Call 0x1C17D08
	037 Call 0x1C17F10
	038 Move X1, X20
	039 Move X2, X19
	040 Move X3, X31
	041 Move X21, X0
	042 Call BadImageFormatException..ctor, X0, X1, X2
	043 Move X0, 0xE5C000
	044 Move X0, [X0+2872]
	045 Call 0x1C17D08
	046 Move X1, X0
	047 Move X0, X21
	048 Call 0x1C17DEC
	049 Move X0, 0xE32000
	050 Move X0, [X0+1888]
	051 Call 0x1C17D08
	052 Move X8, [X19]
	053 Move X1, [X8]
	054 Call 0x1C18270
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {26}
	059 Move W0, 8
	060 Call 0x3EB2AF0
	061 Move X8, [X19]
	062 Move [X0], X8
	063 Move X1, 0xBEB000
	064 Add X1, X1, 3672
	065 Move X2, X31
	066 Call 0x3EB2B00
	067 Move X19, X0
	068 Call 0x3EB2AE0
	069 Move X0, X19
	070 Call 0x1D2D690
	071 Call 0x1991590

Method: System.Object _LoadObjectV2(System.Int32 pos, out System.Resources.ResourceTypeCode typeCode)

Disassembly:
	0x032CBA10 LDR X0, [X0 + 0x5B0]
	0x032CBA14 BL 0x1C16D08
	0x032CBA18 BL 0x1C16F10
	0x032CBA1C MOV X1, X19
	0x032CBA20 MOV X2, X31
	0x032CBA24 MOV X20, X0
	0x032CBA28 BL 0x337DF1C
	0x032CBA2C ADRP X0, 0xE5A000
	0x032CBA30 LDR X0, [X0 + 0xB98]
	0x032CBA34 BL 0x1C16D08
	0x032CBA38 MOV X1, X0
	0x032CBA3C MOV X0, X20
	0x032CBA40 BL 0x1C16DEC
	0x032CBA44 MOV X0, X22
	0x032CBA48 BL 0x1C16F18
	0x032CBA4C BL 0x1C16F20
	0x032CBA50 BL 0x1C16F20
	0x032CBA54 BL 0x1C16F20
	0x032CBA58 BL 0x1C16F20
	0x032CBA5C MOV X0, X22
	0x032CBA60 BL 0x1C16F18
	0x032CBA64 BL 0x1C16F20
	0x032CBA68 BL 0x1C16F20
	0x032CBA6C B 0x32CBA84
	0x032CBA70 B 0x32CBA84
	0x032CBA74 B 0x32CBA84
	0x032CBA78 B 0x32CBA84
	0x032CBA7C B 0x32CBA84
	0x032CBA80 B 0x32CBA84
	0x032CBA84 MOV X24, X1
	0x032CBA88 MOV X25, X0
	0x032CBA8C B 0x32CBAA4
	0x032CBA90 B 0x32CBA98
	0x032CBA94 B 0x32CBA98
	0x032CBA98 MOV X24, X1
	0x032CBA9C MOV X25, X0
	0x032CBAA0 MOV X20, X31
	0x032CBAA4 CMP W24, 0x1
	0x032CBAA8 B.NE 0x32CBACC
	0x032CBAAC MOV X0, X25
	0x032CBAB0 BL 0x3EB1AD0
	0x032CBAB4 LDR X22, [X0]
	0x032CBAB8 BL 0x3EB1AE0
	0x032CBABC MOV W24, W31
	0x032CBAC0 MOV X23, X31
	0x032CBAC4 MOVZ W25, 0x1
	0x032CBAC8 B 0x32CB958
	0x032CBACC MOV X22, X31
	0x032CBAD0 LDRB W8, [X31 + 0x18]
	0x032CBAD4 CBZ W8, 0x32CBAE4
	0x032CBAD8 MOV X0, X21
	0x032CBADC MOV X1, X31
	0x032CBAE0 BL 0x33E14E4
	0x032CBAE4 CBNZ X22, 0x32CBAF0
	0x032CBAE8 MOV X23, X31
	0x032CBAEC B 0x32CBB24
	0x032CBAF0 MOV X0, X22
	0x032CBAF4 BL 0x1C16F18
	0x032CBAF8 MOV X24, X1
	0x032CBAFC MOV X25, X0
	0x032CBB00 B 0x32CBAD0
	0x032CBB04 B 0x32CBB08
	0x032CBB08 MOV X24, X1
	0x032CBB0C MOV X25, X0
	0x032CBB10 MOV X23, X31
	0x032CBB14 MOV X20, X31
	0x032CBB18 B 0x32CBB24
	0x032CBB1C MOV X24, X1
	0x032CBB20 MOV X25, X0
	0x032CBB24 CMP W24, 0x1
	0x032CBB28 B.NE 0x32CBB40
	0x032CBB2C MOV X0, X25
	0x032CBB30 BL 0x3EB1AD0
	0x032CBB34 LDR X21, [X0]
	0x032CBB38 BL 0x3EB1AE0
	0x032CBB3C B 0x32CB978
	0x032CBB40 MOV X21, X31
	0x032CBB44 B 0x32CBB4C
	0x032CBB48 MOV X25, X0
	0x032CBB4C LDRB W8, [X31 + 0x1C]
	0x032CBB50 CBZ W8, 0x32CBB60
	0x032CBB54 MOV X0, X19
	0x032CBB58 MOV X1, X31
	0x032CBB5C BL 0x33E14E4
	0x032CBB60 CBNZ X21, 0x32CBB6C
	0x032CBB64 MOV X0, X25
	0x032CBB68 BL 0x1D2C690
	0x032CBB6C MOV X0, X21
	0x032CBB70 BL 0x1C16F18
	0x032CBB74 BL 0x1990590
	0x032CBB78 LDR W0, [X0 + 0x20]
	0x032CBB7C RET
	0x032CBB80 STR X30, [X31 - 0x20]!
	0x032CBB84 STP X20, X19, [X31 + 0x10]
	0x032CBB88 LDR W1, [X0 + 0x1C]
	0x032CBB8C MOVZ W8, 0x80000000
	0x032CBB90 CMP W1, W8
	0x032CBB94 B.EQ 0x32CBBBC
	0x032CBB98 LDRB W8, [X0 + 0x18]
	0x032CBB9C CBZ W8, 0x32CBBC8
	0x032CBBA0 LDR X0, [X0 + 0x10]
	0x032CBBA4 CBZ X0, 0x32CBBD4
	0x032CBBA8 LDR X8, [X0 + 0x18]
	0x032CBBAC CBZ X8, 0x32CBBD8
	0x032CBBB0 LDP X20, X19, [X31 + 0x10]
	0x032CBBB4 LDR X30, [X31], #0x20
	0x032CBBB8 B 0x32C9788
	0x032CBBBC ADRP X0, 0xE53000
	0x032CBBC0 LDR X0, [X0 + 0xC40]
	0x032CBBC4 B 0x32CBBE0
	0x032CBBC8 ADRP X0, 0xE53000
	0x032CBBCC LDR X0, [X0 + 0xC48]
	0x032CBBD0 B 0x32CBBE0
	0x032CBBD4 BL 0x1C16F20
	0x032CBBD8 ADRP X0, 0xE5A000
	0x032CBBDC LDR X0, [X0 + 0xA20]
	0x032CBBE0 BL 0x1C16D08
	0x032CBBE4 MOV X1, X31
	0x032CBBE8 BL 0x33BDD84
	0x032CBBEC MOV X19, X0
	0x032CBBF0 ADRP X0, 0xE28000
	0x032CBBF4 LDR X0, [X0 + 0x5B0]
	0x032CBBF8 BL 0x1C16D08
	0x032CBBFC BL 0x1C16F10
	0x032CBC00 MOV X1, X19
	0x032CBC04 MOV X2, X31
	0x032CBC08 MOV X20, X0
	0x032CBC0C BL 0x337DF1C
	0x032CBC10 ADRP X0, 0xE5A000
	0x032CBC14 LDR X0, [X0 + 0xBA0]
	0x032CBC18 BL 0x1C16D08
	0x032CBC1C MOV X1, X0
	0x032CBC20 MOV X0, X20
	0x032CBC24 BL 0x1C16DEC
	0x032CBC28 STR X30, [X31 - 0x20]!
	0x032CBC2C STP X20, X19, [X31 + 0x10]
	0x032CBC30 LDR X8, [X0 + 0x10]
	0x032CBC34 CBZ X8, 0x32CBC58
	0x032CBC38 LDR X8, [X8 + 0x18]
	0x032CBC3C CBZ X8, 0x32CBC5C
	0x032CBC40 LDP X20, X19, [X31 + 0x10]
	0x032CBC44 MOVN W8, 0x0
	0x032CBC48 STRB W31, [X0 + 0x18]
	0x032CBC4C STR W8, [X0 + 0x1C]
	0x032CBC50 LDR X30, [X31], #0x20
	0x032CBC54 RET
	0x032CBC58 BL 0x1C16F20
	0x032CBC5C ADRP X0, 0xE5A000
	0x032CBC60 LDR X0, [X0 + 0xA20]
	0x032CBC64 BL 0x1C16D08
	0x032CBC68 MOV X1, X31
	0x032CBC6C BL 0x33BDD84
	0x032CBC70 MOV X19, X0
	0x032CBC74 ADRP X0, 0xE28000
	0x032CBC78 LDR X0, [X0 + 0x5B0]
	0x032CBC7C BL 0x1C16D08
	0x032CBC80 BL 0x1C16F10
	0x032CBC84 MOV X1, X19
	0x032CBC88 MOV X2, X31
	0x032CBC8C MOV X20, X0
	0x032CBC90 BL 0x337DF1C
	0x032CBC94 ADRP X0, 0xE5A000
	0x032CBC98 LDR X0, [X0 + 0xBA8]
	0x032CBC9C BL 0x1C16D08
	0x032CBCA0 MOV X1, X0
	0x032CBCA4 MOV X0, X20
	0x032CBCA8 BL 0x1C16DEC
	0x032CBCAC STP X30, X19, [X31 - 0x10]!
	0x032CBCB0 MOV X1, X31
	0x032CBCB4 MOV X19, X0
	0x032CBCB8 BL 0x33BDD8C
	0x032CBCBC MOV X0, X19
	0x032CBCC0 LDP X30, X19, [X31], #0x10
	0x032CBCC4 B 0x32CBCC8
	0x032CBCC8 STP X30, X21, [X31 - 0x20]!
	0x032CBCCC STP X20, X19, [X31 + 0x10]
	0x032CBCD0 ADRP X20, 0x1111000
	0x032CBCD4 ADRP X21, 0xE58000
	0x032CBCD8 LDRB W8, [X20 + 0x8DA]
	0x032CBCDC LDR X21, [X21 + 0xDB8]
	0x032CBCE0 MOV X19, X0
	0x032CBCE4 TBNZ X8, 0x0, 0x32CBCFC
	0x032CBCE8 ADRP X0, 0xE58000
	0x032CBCEC LDR X0, [X0 + 0xDB8]
	0x032CBCF0 BL 0x1C16CF4
	0x032CBCF4 MOVZ W8, 0x1
	0x032CBCF8 STRB W8, [X20 + 0x8DA]
	0x032CBCFC LDR X0, [X21]
	0x032CBD00 BL 0x1C16F10
	0x032CBD04 MOV X1, X31
	0x032CBD08 MOV X20, X0
	0x032CBD0C BL 0x335A0A0
	0x032CBD10 STR X20, [X19 + 0x18]
	0x032CBD14 LDP X20, X19, [X31 + 0x10]
	0x032CBD18 LDP X30, X21, [X31], #0x20
	0x032CBD1C RET
	0x032CBD20 LDR X8, [X0]
	0x032CBD24 MOVZ W1, 0x1
	0x032CBD28 LDP X3, X2, [X8 + 0x198]
	0x032CBD2C BR X3
	0x032CBD30 B 0x32CBD34
	0x032CBD34 STR X30, [X31 - 0x20]!
	0x032CBD38 STP X20, X19, [X31 + 0x10]
	0x032CBD3C LDR X0, [X0 + 0x18]
	0x032CBD40 CBZ X0, 0x32CBD5C
	0x032CBD44 LDR X8, [X0]
	0x032CBD48 LDP X20, X19, [X31 + 0x10]
	0x032CBD4C LDR X2, [X8 + 0x2F8]
	0x032CBD50 LDR X1, [X8 + 0x300]
	0x032CBD54 LDR X30, [X31], #0x20
	0x032CBD58 BR X2
	0x032CBD5C ADRP X0, 0xE5A000
	0x032CBD60 LDR X0, [X0 + 0x9C0]
	0x032CBD64 BL 0x1C16D08
	0x032CBD68 MOV X1, X31
	0x032CBD6C BL 0x33BDD84
	0x032CBD70 MOV X19, X0
	0x032CBD74 ADRP X0, 0xE51000
	0x032CBD78 LDR X0, [X0 + 0x4B8]
	0x032CBD7C BL 0x1C16D08
	0x032CBD80 BL 0x1C16F10
	0x032CBD84 MOV X1, X31
	0x032CBD88 MOV X2, X19
	0x032CBD8C MOV X3, X31
	0x032CBD90 MOV X20, X0
	0x032CBD94 BL 0x338C410
	0x032CBD98 ADRP X0, 0xE5A000
	0x032CBD9C LDR X0, [X0 + 0xBB0]
	0x032CBDA0 BL 0x1C16D08
	0x032CBDA4 MOV X1, X0
	0x032CBDA8 MOV X0, X20
	0x032CBDAC BL 0x1C16DEC
	0x032CBDB0 B 0x32CBD34
	0x032CBDB4 STP X30, X21, [X31 - 0x20]!
	0x032CBDB8 STP X20, X19, [X31 + 0x10]
	0x032CBDBC ADRP X21, 0x1111000
	0x032CBDC0 LDRB W8, [X21 + 0x8DC]
	0x032CBDC4 MOV X19, X1
	0x032CBDC8 MOV X20, X0
	0x032CBDCC TBNZ X8, 0x0, 0x32CBDE4
	0x032CBDD0 ADRP X0, 0xE2A000
	0x032CBDD4 LDR X0, [X0 + 0x278]
	0x032CBDD8 BL 0x1C16CF4
	0x032CBDDC MOVZ W8, 0x1
	0x032CBDE0 STRB W8, [X21 + 0x8DC]
	0x032CBDE4 MOV X0, X20
	0x032CBDE8 MOV X1, X19
	0x032CBDEC BL 0x32CBF14
	0x032CBDF0 CBZ X0, 0x32CBE0C
	0x032CBDF4 ADRP X8, 0xE2A000
	0x032CBDF8 LDR X8, [X8 + 0x278]
	0x032CBDFC LDR X1, [X8]
	0x032CBE00 LDR X8, [X0]
	0x032CBE04 CMP X8, X1
	0x032CBE08 B.NE 0x32CBE18
	0x032CBE0C LDP X20, X19, [X31 + 0x10]
	0x032CBE10 LDP X30, X21, [X31], #0x20
	0x032CBE14 RET
	0x032CBE18 BL 0x1C171E0
	0x032CBE1C CMP W1, 0x1
	0x032CBE20 MOV X20, X0
	0x032CBE24 B.NE 0x32CBF08
	0x032CBE28 MOV X0, X20
	0x032CBE2C BL 0x3EB1AD0
	0x032CBE30 MOV X20, X0
	0x032CBE34 ADRP X0, 0xE30000
	0x032CBE38 LDR X0, [X0 + 0xC08]
	0x032CBE3C BL 0x1C16D08
	0x032CBE40 LDR X8, [X20]
	0x032CBE44 LDR X1, [X8]
	0x032CBE48 BL 0x1C17270
	0x032CBE4C TBZ X0, 0x0, 0x32CBEE0
	0x032CBE50 BL 0x3EB1AE0
	0x032CBE54 ADRP X0, 0xE28000
	0x032CBE58 LDR X0, [X0 + 0x9D0]
	0x032CBE5C BL 0x1C16D08
	0x032CBE60 MOVZ W1, 0x1
	0x032CBE64 BL 0x1C16D6C
	0x032CBE68 MOV X20, X0
	0x032CBE6C BL 0x19903C0
	0x032CBE70 MOV X0, X20
	0x032CBE74 MOV X1, X19
	0x032CBE78 BL 0x19980B4
	0x032CBE7C MOV X0, X20
	0x032CBE80 MOV X1, X31
	0x032CBE84 MOV X2, X19
	0x032CBE88 BL 0x1993444
	0x032CBE8C ADRP X0, 0xE5A000
	0x032CBE90 LDR X0, [X0 + 0xBB8]
	0x032CBE94 BL 0x1C16D08
	0x032CBE98 MOV X1, X20
	0x032CBE9C MOV X2, X31
	0x032CBEA0 BL 0x33BFB40
	0x032CBEA4 MOV X19, X0
	0x032CBEA8 ADRP X0, 0xE28000
	0x032CBEAC LDR X0, [X0 + 0x5B0]
	0x032CBEB0 BL 0x1C16D08
	0x032CBEB4 BL 0x1C16F10
	0x032CBEB8 MOV X1, X19
	0x032CBEBC MOV X2, X31
	0x032CBEC0 MOV X20, X0
	0x032CBEC4 BL 0x337DF1C
	0x032CBEC8 ADRP X0, 0xE5A000
	0x032CBECC LDR X0, [X0 + 0xBC0]
	0x032CBED0 BL 0x1C16D08
	0x032CBED4 MOV X1, X0
	0x032CBED8 MOV X0, X20
	0x032CBEDC BL 0x1C16DEC
	0x032CBEE0 MOVZ W0, 0x8
	0x032CBEE4 BL 0x3EB1AF0
	0x032CBEE8 LDR X8, [X20]
	0x032CBEEC STR X8, [X0]
	0x032CBEF0 ADRP X1, 0xBE9000
	0x032CBEF4 ADD X1, X1, 0xE58
	0x032CBEF8 MOV X2, X31
	0x032CBEFC BL 0x3EB1B00
	0x032CBF00 MOV X20, X0
	0x032CBF04 BL 0x3EB1AE0
	0x032CBF08 MOV X0, X20
	0x032CBF0C BL 0x1D2C690
	0x032CBF10 BL 0x1990590
	0x032CBF14 STR X30, [X31 - 0x20]!
	0x032CBF18 STP X20, X19, [X31 + 0x10]
	0x032CBF1C CBZ X1, 0x32CBF40
	0x032CBF20 LDR X0, [X0 + 0x18]
	0x032CBF24 CBZ X0, 0x32CBF88
	0x032CBF28 LDR X8, [X0]
	0x032CBF2C LDP X20, X19, [X31 + 0x10]
	0x032CBF30 LDR X3, [X8 + 0x2D8]
	0x032CBF34 LDR X2, [X8 + 0x2E0]
	0x032CBF38 LDR X30, [X31], #0x20
	0x032CBF3C BR X3
	0x032CBF40 ADRP X0, 0xE2D000
	0x032CBF44 LDR X0, [X0 + 0x528]
	0x032CBF48 BL 0x1C16D08
	0x032CBF4C BL 0x1C16F10
	0x032CBF50 MOV X19, X0
	0x032CBF54 ADRP X0, 0xE30000
	0x032CBF58 LDR X0, [X0 + 0x588]
	0x032CBF5C BL 0x1C16D08
	0x032CBF60 MOV X1, X0
	0x032CBF64 MOV X0, X19
	0x032CBF68 MOV X2, X31
	0x032CBF6C BL 0x330E100
	0x032CBF70 ADRP X0, 0xE5A000
	0x032CBF74 LDR X0, [X0 + 0xBC8]
	0x032CBF78 BL 0x1C16D08
	0x032CBF7C MOV X1, X0
	0x032CBF80 MOV X0, X19
	0x032CBF84 BL 0x1C16DEC
	0x032CBF88 ADRP X0, 0xE5A000
	0x032CBF8C LDR X0, [X0 + 0x9C0]
	0x032CBF90 BL 0x1C16D08
	0x032CBF94 MOV X1, X31
	0x032CBF98 BL 0x33BDD84
	0x032CBF9C MOV X19, X0
	0x032CBFA0 ADRP X0, 0xE51000
	0x032CBFA4 LDR X0, [X0 + 0x4B8]
	0x032CBFA8 BL 0x1C16D08
	0x032CBFAC BL 0x1C16F10
	0x032CBFB0 MOV X1, X31
	0x032CBFB4 MOV X2, X19
	0x032CBFB8 MOV X3, X31
	0x032CBFBC MOV X20, X0
	0x032CBFC0 BL 0x338C410
	0x032CBFC4 ADRP X0, 0xE5A000
	0x032CBFC8 LDR X0, [X0 + 0xBC8]
	0x032CBFCC BL 0x1C16D08
	0x032CBFD0 MOV X1, X0
	0x032CBFD4 MOV X0, X20
	0x032CBFD8 BL 0x1C16DEC
	0x032CBFDC STR X30, [X31 - 0x30]!
	0x032CBFE0 STP X22, X21, [X31 + 0x10]
	0x032CBFE4 STP X20, X19, [X31 + 0x20]
	0x032CBFE8 ADRP X22, 0x1111000
	0x032CBFEC LDRB W8, [X22 + 0x8DD]
	0x032CBFF0 MOV W20, W2
	0x032CBFF4 MOV X19, X1
	0x032CBFF8 MOV X21, X0
	0x032CBFFC TBNZ X8, 0x0, 0x32CC014
	0x032CC000 ADRP X0, 0xE29000
	0x032CC004 LDR X0, [X0 + 0x278]
	0x032CC008 BL 0x1C16CF4
	0x032CC00C MOVZ W8, 0x1
	0x032CC010 STRB W8, [X22 + 0x8DD]
	0x032CC014 ADRP X22, 0xE29000
	0x032CC018 LDR X22, [X22 + 0x278]
	0x032CC01C MOV X0, X21
	0x032CC020 MOV X1, X19
	0x032CC024 BL 0x32CBF14
	0x032CC028 CBZ X0, 0x32CC040
	0x032CC02C LDR X1, [X22]
	0x032CC030 LDR X8, [X0]
	0x032CC034 CMP X8, X1
	0x032CC038 B.EQ 0x32CC06C
	0x032CC03C BL 0x1C171E0
	0x032CC040 TBZ X20, 0x0, 0x32CC068
	0x032CC044 MOV X0, X21
	0x032CC048 MOV X1, X19
	0x032CC04C BL 0x32CC1D8
	0x032CC050 CBZ X0, 0x32CC06C
	0x032CC054 LDR X1, [X22]
	0x032CC058 LDR X8, [X0]
	0x032CC05C CMP X8, X1
	0x032CC060 B.EQ 0x32CC06C
	0x032CC064 BL 0x1C171E0
	0x032CC068 MOV X0, X31
	0x032CC06C LDP X20, X19, [X31 + 0x20]
	0x032CC070 LDP X22, X21, [X31 + 0x10]
	0x032CC074 LDR X30, [X31], #0x30
	0x032CC078 RET
	0x032CC07C CMP W1, 0x1
	0x032CC080 MOV X20, X0
	0x032CC084 B.NE 0x32CC1CC
	0x032CC088 MOV X0, X20
	0x032CC08C BL 0x3EB1AD0
	0x032CC090 MOV X20, X0
	0x032CC094 ADRP X0, 0xE2F000
	0x032CC098 LDR X0, [X0 + 0xC08]
	0x032CC09C BL 0x1C16D08
	0x032CC0A0 LDR X8, [X20]
	0x032CC0A4 LDR X1, [X8]
	0x032CC0A8 BL 0x1C17270
	0x032CC0AC TBNZ X0, 0x0, 0x32CC114
	0x032CC0B0 MOVZ W0, 0x8
	0x032CC0B4 BL 0x3EB1AF0
	0x032CC0B8 LDR X8, [X20]
	0x032CC0BC STR X8, [X0]
	0x032CC0C0 ADRP X1, 0xBE8000
	0x032CC0C4 ADD X1, X1, 0xE58
	0x032CC0C8 MOV X2, X31
	0x032CC0CC BL 0x3EB1B00
	0x032CC0D0 B 0x32CC1C4
	0x032CC0D4 MOV X20, X0
	0x032CC0D8 BL 0x3EB1AE0
	0x032CC0DC B 0x32CC1CC
	0x032CC0E0 CMP W1, 0x1
	0x032CC0E4 MOV X20, X0
	0x032CC0E8 B.NE 0x32CC1CC
	0x032CC0EC MOV X0, X20
	0x032CC0F0 BL 0x3EB1AD0
	0x032CC0F4 MOV X20, X0
	0x032CC0F8 ADRP X0, 0xE2F000
	0x032CC0FC LDR X0, [X0 + 0xC08]
	0x032CC100 BL 0x1C16D08
	0x032CC104 LDR X8, [X20]
	0x032CC108 LDR X1, [X8]
	0x032CC10C BL 0x1C17270
	0x032CC110 TBZ X0, 0x0, 0x32CC1A4
	0x032CC114 BL 0x3EB1AE0
	0x032CC118 ADRP X0, 0xE27000
	0x032CC11C LDR X0, [X0 + 0x9D0]
	0x032CC120 BL 0x1C16D08
	0x032CC124 MOVZ W1, 0x1
	0x032CC128 BL 0x1C16D6C

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 NotImplemented "Instruction MRS not yet implemented."
	009 Move X8, [X22+40]
	010 Move X23, 0x1112000
	011 Move X20, X2
	012 Move W21, W1
	013 Move [X31+24], X8
	014 Move W8, [X23+2259]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {76}
	020 Move X0, 0xE29000
	021 Move X0, [X0+2904]
	022 Call 0x1C17CF4
	023 Move X0, 0xE29000
	024 Move X0, [X0+1560]
	025 Call 0x1C17CF4
	026 Move X0, 0xE2A000
	027 Move X0, [X0+2520]
	028 Call 0x1C17CF4
	029 Move X0, 0xE2B000
	030 Move X0, [X0+368]
	031 Call 0x1C17CF4
	032 Move X0, 0xE2A000
	033 Move X0, [X0+2544]
	034 Call 0x1C17CF4
	035 Move X0, 0xE51000
	036 Move X0, [X0+1520]
	037 Call 0x1C17CF4
	038 Move X0, 0xE2C000
	039 Move X0, [X0+2424]
	040 Call 0x1C17CF4
	041 Move X0, 0xE2D000
	042 Move X0, [X0+1576]
	043 Call 0x1C17CF4
	044 Move X0, 0xE29000
	045 Move X0, [X0+1880]
	046 Call 0x1C17CF4
	047 Move X0, 0xE2B000
	048 Move X0, [X0+2656]
	049 Call 0x1C17CF4
	050 Move X0, 0xE5B000
	051 Move X0, [X0+2912]
	052 Call 0x1C17CF4
	053 Move X0, 0xE52000
	054 Move X0, [X0+1712]
	055 Call 0x1C17CF4
	056 Move X0, 0xE29000
	057 Move X0, [X0+2704]
	058 Call 0x1C17CF4
	059 Move X0, 0xE2B000
	060 Move X0, [X0+1392]
	061 Call 0x1C17CF4
	062 Move X0, 0xE2E000
	063 Move X0, [X0+1624]
	064 Call 0x1C17CF4
	065 Move X0, 0xE31000
	066 Move X0, [X0+1824]
	067 Call 0x1C17CF4
	068 Move X0, 0xE2A000
	069 Move X0, [X0+1880]
	070 Call 0x1C17CF4
	071 Move X0, 0xE36000
	072 Move X0, [X0+3592]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X23+2259], W8
	076 Move X23, X19
	077 Add X23, X23, 16
	078 Move X0, [X23]
	079 Compare X0, 0
	080 JumpIfEqual {439}
	081 Move X8, [X0]
	082 Move X9, [X8+392]
	083 Move X1, [X8+400]
	084 NotImplemented "Instruction BLR not yet implemented."
	085 Compare X0, 0
	086 JumpIfEqual {439}
	087 Move X8, [X0]
	088 Move X9, [X19+40]
	089 Move W2, W31
	090 Move X10, [X8+824]
	091 Move X3, [X8+832]
	092 Add X1, X9, W21
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Move X0, [X19+16]
	095 Compare X0, 0
	096 JumpIfEqual {439}
	097 Move X1, X31
	098 Call BinaryReader.Read7BitEncodedInt, X0
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move [X20], W0
	101 Move X9, -41107456
	102 Move W8, W0
	103 Add X9, X9, 1456
	104 NotImplemented "Instruction ADR not yet implemented."
	105 NotImplemented "Instruction LDRH not yet implemented."
	106 Add X10, X10, X11
	107 Move X21, X31
	108 CallNoReturn X10
	109 Move X0, [X23]
	110 Compare X0, 0
	111 JumpIfEqual {439}
	112 Move X8, [X0]
	113 Move X9, [X8+664]
	114 Move X1, [X8+672]
	115 NotImplemented "Instruction BLR not yet implemented."
	116 Move X0, [X23]
	117 Compare X0, 0
	118 JumpIfEqual {439}
	119 Move X8, [X0]
	120 Move X9, [X8+584]
	121 Move X1, [X8+592]
	122 NotImplemented "Instruction BLR not yet implemented."
	123 Move X8, 0xE2B000
	124 Move X8, [X8+1392]
	125 Move X0, [X23]
	126 Compare X0, 0
	127 JumpIfEqual {439}
	128 Move X8, [X0]
	129 Move X9, [X8+552]
	130 Move X1, [X8+560]
	131 NotImplemented "Instruction BLR not yet implemented."
	132 Move W20, W0
	133 Move TEMP, X0
	134 And TEMP, TEMP, -2147483648
	135 Compare TEMP, -2147483648
	136 JumpIfEqual {460}
	137 Move X0, [X19+112]
	138 Compare X0, 0
	139 JumpIfEqual {395}
	140 Move X8, [X0]
	141 Move X9, [X8+488]
	142 Move X1, [X8+496]
	143 NotImplemented "Instruction BLR not yet implemented."
	144 Move X8, [X19+112]
	145 Compare X8, 0
	146 JumpIfEqual {439}
	147 Move X9, [X8]
	148 Move X21, X0
	149 Move X0, X8
	150 Move X10, [X9+504]
	151 Move X1, [X9+512]
	152 NotImplemented "Instruction BLR not yet implemented."
	153 Subtract X8, X21, X0
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move X8, 0xE29000
	156 Move X8, [X8+1560]
	157 Move W1, W20
	158 Move X0, [X8]
	159 Call 0x1C17D6C
	160 Move X8, [X19+112]
	161 Compare X8, 0
	162 JumpIfEqual {439}
	163 Move X9, [X8]
	164 Move X21, X0
	165 Move X0, X8
	166 Move X1, X21
	167 Move X10, [X9+856]
	168 Move X4, [X9+864]
	169 Move W2, W31
	170 Move W3, W20
	171 NotImplemented "Instruction BLR not yet implemented."
	172 Move X0, [X23]
	173 Compare X0, 0
	174 JumpIfEqual {439}
	175 Move X8, [X0]
	176 Move X9, [X8+616]
	177 Move X1, [X8+624]
	178 NotImplemented "Instruction BLR not yet implemented."
	179 Move X8, 0xE29000
	180 Move X8, [X8+2704]
	181 Move [X31+8], S0
	182 Move X0, [X23]
	183 Compare X0, 0
	184 JumpIfEqual {439}
	185 Move X8, [X0]
	186 Move X9, [X8+520]
	187 Move X1, [X8+528]
	188 NotImplemented "Instruction BLR not yet implemented."
	189 Move X8, 0xE2D000
	190 Move X8, [X8+1576]
	191 Move X0, [X23]
	192 Compare X0, 0
	193 JumpIfEqual {439}
	194 Move X8, [X0]
	195 Move X9, [X8+536]
	196 Move X1, [X8+544]
	197 NotImplemented "Instruction BLR not yet implemented."
	198 Move X8, 0xE2E000
	199 Move X8, [X8+1624]
	200 Move X0, [X23]
	201 Compare X0, 0
	202 JumpIfEqual {439}
	203 Move X8, [X0]
	204 Move X9, [X8+568]
	205 Move X1, [X8+576]
	206 NotImplemented "Instruction BLR not yet implemented."
	207 Move X8, 0xE31000
	208 Move X8, [X8+1824]
	209 Move X0, [X23]
	210 Compare X0, 0
	211 JumpIfEqual {439}
	212 Move X8, [X0]
	213 Move X9, [X8+456]
	214 Move X1, [X8+464]
	215 NotImplemented "Instruction BLR not yet implemented."
	216 Move X8, 0xE29000
	217 Move X8, [X8+2904]
	218 And W9, W0, 1
	219 Move [X31+8], W9
	220 Move X0, [X23]
	221 Compare X0, 0
	222 JumpIfEqual {439}
	223 Move X8, [X0]
	224 Move X9, [X8+536]
	225 Move X1, [X8+544]
	226 NotImplemented "Instruction BLR not yet implemented."
	227 Move X8, 0xE2B000
	228 Move X8, [X8+368]
	229 Move X8, [X8]
	230 NotImplemented "Instruction STRH not yet implemented."
	231 Move X0, [X23]
	232 Compare X0, 0
	233 JumpIfEqual {439}
	234 Move X8, [X0]
	235 Move X9, [X8+488]
	236 Move X1, [X8+496]
	237 NotImplemented "Instruction BLR not yet implemented."
	238 Move X8, 0xE52000
	239 Move X8, [X8+1712]
	240 Move X0, [X23]
	241 Compare X0, 0
	242 JumpIfEqual {439}
	243 Move X8, [X0]
	244 Move X9, [X8+600]
	245 Move X1, [X8+608]
	246 NotImplemented "Instruction BLR not yet implemented."
	247 Move X8, 0xE2A000
	248 Move X8, [X8+1880]
	249 Move X0, [X23]
	250 Compare X0, 0
	251 JumpIfEqual {439}
	252 Move X8, [X0]
	253 Move X9, [X8+632]
	254 Move X1, [X8+640]
	255 NotImplemented "Instruction BLR not yet implemented."
	256 Move X8, 0xE2C000
	257 Move X8, [X8+2424]
	258 Move [X31+8], D0
	259 Move X0, [X8]
	260 Add X1, X31, 8
	261 Move X0, [X23]
	262 Compare X0, 0
	263 JumpIfEqual {439}
	264 Move X8, [X0]
	265 Move X9, [X8+472]
	266 Move X1, [X8+480]
	267 NotImplemented "Instruction BLR not yet implemented."
	268 Move X8, 0xE2A000
	269 Move X8, [X8+2520]
	270 Move X8, [X8]
	271 Move [X31+8], W0
	272 Move X0, [X23]
	273 Compare X0, 0
	274 JumpIfEqual {439}
	275 Move X8, [X0]
	276 Move X9, [X8+552]
	277 Move X1, [X8+560]
	278 NotImplemented "Instruction BLR not yet implemented."
	279 Move X8, 0xE29000
	280 Move X8, [X8+1880]
	281 Move X8, [X8]
	282 Move [X31+8], W0
	283 Move X0, [X23]
	284 Compare X0, 0
	285 JumpIfEqual {439}
	286 Move X8, [X0]
	287 Move X9, [X8+584]
	288 Move X1, [X8+592]
	289 NotImplemented "Instruction BLR not yet implemented."
	290 Move X8, 0xE2B000
	291 Move X8, [X8+2656]
	292 Move X8, [X8]
	293 Move X0, [X23]
	294 Compare X0, 0
	295 JumpIfEqual {439}
	296 Move X8, [X0]
	297 Move X9, [X8+648]
	298 Move X1, [X8+656]
	299 NotImplemented "Instruction BLR not yet implemented."
	300 Move X8, 0xE51000
	301 Move X8, [X8+1520]
	302 Move [X31+8], X0
	303 Move [X31+16], X1
	304 Move X8, [X8]
	305 Move X0, [X23]
	306 Compare X0, 0
	307 JumpIfEqual {439}
	308 Move X8, [X0]
	309 Move X9, [X8+584]
	310 Move X1, [X8+592]
	311 NotImplemented "Instruction BLR not yet implemented."
	312 Move X20, 0xE2A000
	313 Move X20, [X20+2544]
	314 Move X19, X0
	315 Move X8, [X20]
	316 Move W9, [X8+224]
	317 Compare W9, 0
	318 JumpIfNotEqual {321}
	319 Move X0, X8
	320 Call 0x1C17DFC
	321 Move X0, X19
	322 Move X1, X31
	323 Call DateTime.FromBinary, X0
	324 Move X8, [X20]
	325 Move [X31+8], X0
	326 Add X1, X31, 8
	327 Move X0, X8
	328 Call 0x1C17E04
	329 Move X21, X0
	330 Move X8, [X22+40]
	331 Move X9, [X31+24]
	332 NotImplemented "Instruction CMP not yet implemented."
	333 Move X0, X21
	334 Move X20, [X31+64]
	335 Move X19, [X31+72]
	336 Move X22, [X31+48]
	337 Move X21, [X31+56]
	338 Move X30, [X31+32]
	339 Move X23, [X31+40]
	340 Add X31, X31, 80
	341 Return X0
	342 Move X0, [X23]
	343 Compare X0, 0
	344 JumpIfEqual {439}
	345 Move X8, [X0]
	346 Move X9, [X8+552]
	347 Move X1, [X8+560]
	348 NotImplemented "Instruction BLR not yet implemented."
	349 Move W20, W0
	350 Move TEMP, X0
	351 And TEMP, TEMP, -2147483648
	352 Compare TEMP, -2147483648
	353 JumpIfEqual {460}
	354 Move X0, [X19+112]
	355 Compare X0, 0
	356 JumpIfEqual {421}
	357 Move X8, [X0]
	358 Move X9, [X8+488]
	359 Move X1, [X8+496]
	360 NotImplemented "Instruction BLR not yet implemented."
	361 Move X8, [X19+112]
	362 Compare X8, 0
	363 JumpIfEqual {439}
	364 Move X9, [X8]
	365 Move X21, X0
	366 Move X0, X8
	367 Move X10, [X9+504]
	368 Move X1, [X9+512]
	369 NotImplemented "Instruction BLR not yet implemented."
	370 Subtract X8, X21, X0
	371 NotImplemented "Instruction CMP not yet implemented."
	372 Move X0, [X19+112]
	373 Compare X0, 0
	374 JumpIfEqual {439}
	375 Move X1, X31
	376 Move W19, W20
	377 Call UnmanagedMemoryStream.get_PositionPointer, X0
	378 Move X8, 0xE36000
	379 Move X8, [X8+3592]
	380 Move X20, X0
	381 Move X8, [X8]
	382 Move X0, X8
	383 Call 0x1C17F10
	384 Move W4, 1
	385 Move X1, X20
	386 Move X2, X19
	387 Move X3, X19
	388 Move X5, X31
	389 Move X21, X0
	390 Call UnmanagedMemoryStream..ctor, X0, X1, X2, X3, X4
	391 NotImplemented "Instruction CMP not yet implemented."
	392 Subtract W1, W0, 64
	393 Move X0, X19
	394 Call ResourceReader.DeserializeObject, X0, X1
	395 Move X0, [X23]
	396 Compare X0, 0
	397 JumpIfEqual {439}
	398 Move X8, [X0]
	399 Move X9, [X8+392]
	400 Move X1, [X8+400]
	401 NotImplemented "Instruction BLR not yet implemented."
	402 Compare X0, 0
	403 JumpIfEqual {439}
	404 Move X8, [X0]
	405 Move X9, [X8+488]
	406 Move X1, [X8+496]
	407 NotImplemented "Instruction BLR not yet implemented."
	408 NotImplemented "Instruction CMP not yet implemented."
	409 Move X0, [X23]
	410 Compare X0, 0
	411 JumpIfEqual {439}
	412 Move X8, [X0]
	413 Move W1, W20
	414 Move X9, [X8+712]
	415 Move X2, [X8+720]
	416 NotImplemented "Instruction BLR not yet implemented."
	417 Move X8, [X22+40]
	418 Move X9, [X31+24]
	419 NotImplemented "Instruction CMP not yet implemented."
	420 Call 0x3EB2B20
	421 Move X0, [X23]
	422 Compare X0, 0
	423 JumpIfEqual {439}
	424 Move X8, [X0]
	425 Move W1, W20
	426 Move X9, [X8+712]
	427 Move X2, [X8+720]
	428 NotImplemented "Instruction BLR not yet implemented."
	429 Move X8, 0xE5A000
	430 Move X8, [X8+2912]
	431 Move X19, X0
	432 Move X8, [X8]
	433 Move X0, X8
	434 Call 0x1C17F10
	435 Move X1, X19
	436 Move X2, X31
	437 Move X21, X0
	438 Call PinnedBufferMemoryStream..ctor, X0, X1
	439 Call 0x1C17F20
	440 Move X0, 0xE5A000
	441 Move X0, [X0+2856]
	442 Call 0x1C17D08
	443 Move X1, X31
	444 Call Environment.GetResourceString, X0
	445 Move X19, X0
	446 Move X0, 0xE5A000
	447 Move X0, [X0+1224]
	448 Call 0x1C17D08
	449 Call 0x1C17F10
	450 Move X1, X19
	451 Move X2, X31
	452 Move X20, X0
	453 Call BadImageFormatException..ctor, X0, X1
	454 Move X0, 0xE5A000
	455 Move X0, [X0+2920]
	456 Call 0x1C17D08
	457 Move X1, X0
	458 Move X0, X20
	459 Call 0x1C17DEC
	460 Move X0, 0xE28000
	461 Move X0, [X0+2512]
	462 Call 0x1C17D08
	463 Move W1, 1
	464 Call 0x1C17D6C
	465 Move X19, X0
	466 Move [X31+8], W20
	467 Move X0, 0xE28000
	468 Move X0, [X0+1880]
	469 Call 0x1C17D08
	470 Add X1, X31, 8
	471 Call 0x1C17E04
	472 Move X20, X0
	473 Move X0, X19
	474 Call 0x19913C0
	475 Move X0, X19
	476 Move X1, X20
	477 Call 0x19990B4
	478 Move X0, X19
	479 Move X1, X31
	480 Move X2, X20
	481 Call 0x1994444
	482 Move X0, 0xE5A000
	483 Move X0, [X0+2928]
	484 Call 0x1C17D08
	485 Move X1, X19
	486 Move X2, X31
	487 Call Environment.GetResourceString, X0, X1

Method: System.Object DeserializeObject(System.Int32 typeIndex)

Disassembly:
	0x032CB840 STP X24, X23, [X31 + 0x40]
	0x032CB844 STP X22, X21, [X31 + 0x50]
	0x032CB848 STP X20, X19, [X31 + 0x60]
	0x032CB84C ADRP X19, 0x1111000
	0x032CB850 LDRB W8, [X19 + 0x8D9]
	0x032CB854 MOV X22, X0
	0x032CB858 TBNZ X8, 0x0, 0x32CB870
	0x032CB85C ADRP X0, 0xE5A000
	0x032CB860 LDR X0, [X0 + 0x9D8]
	0x032CB864 BL 0x1C16CF4
	0x032CB868 MOVZ W8, 0x1
	0x032CB86C STRB W8, [X19 + 0x8D9]
	0x032CB870 STRB W31, [X31 + 0x18]
	0x032CB874 STP X31, X31, [X31 + 0x8]
	0x032CB878 LDR W8, [X22 + 0x1C]
	0x032CB87C MOVZ W9, 0x80000000
	0x032CB880 CMP W8, W9
	0x032CB884 B.EQ 0x32CB9D8
	0x032CB888 LDRB W8, [X22 + 0x18]
	0x032CB88C CBZ W8, 0x32CB9E4
	0x032CB890 LDR X19, [X22 + 0x10]
	0x032CB894 CBZ X19, 0x32CB9F0
	0x032CB898 LDR X8, [X19 + 0x18]
	0x032CB89C CBZ X8, 0x32CB9F4
	0x032CB8A0 STRB W31, [X31 + 0x1C]
	0x032CB8A4 ADD X1, X31, 0x1C
	0x032CB8A8 MOV X0, X19
	0x032CB8AC MOV X2, X31
	0x032CB8B0 BL 0x33DE64C
	0x032CB8B4 LDR X8, [X22 + 0x10]
	0x032CB8B8 CBZ X8, 0x32CBA4C
	0x032CB8BC LDR X21, [X8 + 0x18]
	0x032CB8C0 STRB W31, [X31 + 0x18]
	0x032CB8C4 ADD X1, X31, 0x18
	0x032CB8C8 MOV X0, X21
	0x032CB8CC MOV X2, X31
	0x032CB8D0 BL 0x33DE64C
	0x032CB8D4 LDR X0, [X22 + 0x10]
	0x032CB8D8 CBZ X0, 0x32CBA50
	0x032CB8DC LDR W1, [X22 + 0x1C]
	0x032CB8E0 ADD X2, X22, 0x20
	0x032CB8E4 BL 0x32C8FD0
	0x032CB8E8 LDR X8, [X22 + 0x10]
	0x032CB8EC MOV X20, X0
	0x032CB8F0 CBZ X8, 0x32CBA54
	0x032CB8F4 LDR X0, [X8 + 0x18]
	0x032CB8F8 CBZ X0, 0x32CBA58
	0x032CB8FC ADRP X8, 0xE5A000
	0x032CB900 LDR X8, [X8 + 0x9D8]
	0x032CB904 LDR X3, [X8]
	0x032CB908 ADD X2, X31, 0x8
	0x032CB90C MOV X1, X20
	0x032CB910 BL 0x2AB3454
	0x032CB914 TBZ X0, 0x0, 0x32CB920
	0x032CB918 LDR X23, [X31 + 0x8]
	0x032CB91C CBNZ X23, 0x32CB94C
	0x032CB920 LDR W1, [X22 + 0x20]
	0x032CB924 LDR X0, [X22 + 0x10]
	0x032CB928 ADDS W31, W1, 0x1
	0x032CB92C B.EQ 0x32CB93C
	0x032CB930 CBZ X0, 0x32CBA64
	0x032CB934 BL 0x32C9FCC
	0x032CB938 B 0x32CB948
	0x032CB93C CBZ X0, 0x32CBA68
	0x032CB940 LDR W1, [X22 + 0x1C]
	0x032CB944 BL 0x32C9788
	0x032CB948 MOV X23, X0
	0x032CB94C MOV X22, X31
	0x032CB950 MOV W25, W31
	0x032CB954 MOVZ W24, 0xE
	0x032CB958 LDRB W8, [X31 + 0x18]
	0x032CB95C CBZ W8, 0x32CB96C
	0x032CB960 MOV X0, X21
	0x032CB964 MOV X1, X31
	0x032CB968 BL 0x33E14E4
	0x032CB96C CBNZ X22, 0x32CBA5C
	0x032CB970 MOV X21, X31
	0x032CB974 TBZ X25, 0x0, 0x32CB980
	0x032CB978 MOV W24, W31
	0x032CB97C MOV X22, X21
	0x032CB980 LDRB W8, [X31 + 0x1C]
	0x032CB984 CBZ W8, 0x32CB994
	0x032CB988 MOV X0, X19
	0x032CB98C MOV X1, X31
	0x032CB990 BL 0x33E14E4
	0x032CB994 CBNZ X22, 0x32CBA44
	0x032CB998 CMP W24, 0xE
	0x032CB99C B.EQ 0x32CB9A4
	0x032CB9A0 CBNZ W24, 0x32CB9BC
	0x032CB9A4 ADD X0, X31, 0x20
	0x032CB9A8 MOV X1, X20
	0x032CB9AC MOV X2, X23
	0x032CB9B0 MOV X3, X31
	0x032CB9B4 STP X31, X31, [X31 + 0x20]
	0x032CB9B8 BL 0x335035C
	0x032CB9BC LDP X0, X1, [X31 + 0x20]
	0x032CB9C0 LDP X20, X19, [X31 + 0x60]
	0x032CB9C4 LDP X22, X21, [X31 + 0x50]
	0x032CB9C8 LDP X24, X23, [X31 + 0x40]
	0x032CB9CC LDP X30, X25, [X31 + 0x30]
	0x032CB9D0 ADD X31, X31, 0x70
	0x032CB9D4 RET
	0x032CB9D8 ADRP X0, 0xE53000
	0x032CB9DC LDR X0, [X0 + 0xC40]
	0x032CB9E0 B 0x32CB9FC
	0x032CB9E4 ADRP X0, 0xE53000
	0x032CB9E8 LDR X0, [X0 + 0xC48]
	0x032CB9EC B 0x32CB9FC
	0x032CB9F0 BL 0x1C16F20
	0x032CB9F4 ADRP X0, 0xE5A000
	0x032CB9F8 LDR X0, [X0 + 0xA20]
	0x032CB9FC BL 0x1C16D08
	0x032CBA00 MOV X1, X31
	0x032CBA04 BL 0x33BDD84
	0x032CBA08 MOV X19, X0
	0x032CBA0C ADRP X0, 0xE28000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1112000
	006 Move W8, [X21+2260]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xE29000
	014 Move X0, [X0+1728]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2260], W8
	018 Move X0, X19
	019 Move W1, W20
	020 Call ResourceReader.FindType, X0, X1
	021 Move X8, [X19+16]
	022 Compare X8, 0
	023 JumpIfEqual {65}
	024 Move X9, [X8]
	025 Move X19, [X19+96]
	026 Move X20, X0
	027 Move X0, X8
	028 Move X10, [X9+392]
	029 Move X1, [X9+400]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Compare X19, 0
	032 JumpIfEqual {65}
	033 Move X1, X0
	034 Move X0, X19
	035 Move X2, X31
	036 Call BinaryFormatter.Deserialize, X0, X1
	037 Compare X0, 0
	038 JumpIfEqual {65}
	039 Move X21, 0xE29000
	040 Move X21, [X21+1728]
	041 Move X1, X31
	042 Move X19, X0
	043 Call "il2cpp_vm_object_is_inst", X0
	044 Move X8, [X21]
	045 Move X21, X0
	046 Move W9, [X8+224]
	047 Compare W9, 0
	048 JumpIfNotEqual {51}
	049 Move X0, X8
	050 Call 0x1C17DFC
	051 Move X0, X21
	052 Move X1, X20
	053 Move X2, X31
	054 Call Type.op_Inequality, X0, X1
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {66}
	059 Move X0, X19
	060 Move X20, [X31+16]
	061 Move X19, [X31+24]
	062 Move X30, [X31+32]
	063 Move X21, [X31+40]
	064 Return X0
	065 Call 0x1C17F20
	066 Move X0, 0xE29000
	067 Move X0, [X0+2512]
	068 Call 0x1C17D08
	069 Move W1, 2
	070 Call 0x1C17D6C
	071 Move X21, X0
	072 Move X0, X20
	073 Call 0x19913C0
	074 Move X8, [X20]
	075 Move X0, X20
	076 Move X9, [X8+744]
	077 Move X1, [X8+752]
	078 NotImplemented "Instruction BLR not yet implemented."
	079 Move X20, X0
	080 Move X0, X21
	081 Call 0x19913C0
	082 Move X0, X21
	083 Move X1, X20
	084 Call 0x19990B4
	085 Move X0, X21
	086 Move X1, X31
	087 Move X2, X20
	088 Call 0x1994444
	089 Move X0, X19
	090 Call 0x19913C0
	091 Move X0, X19
	092 Move X1, X31
	093 Call "il2cpp_vm_object_is_inst", X0
	094 Move X19, X0
	095 Call 0x19913C0
	096 Move X8, [X19]
	097 Move X0, X19
	098 Move X9, [X8+744]
	099 Move X1, [X8+752]
	100 NotImplemented "Instruction BLR not yet implemented."
	101 Move X19, X0
	102 Move X0, X21
	103 Call 0x19913C0
	104 Move X0, X21
	105 Move X1, X19
	106 Call 0x19990B4
	107 Move W1, 1
	108 Move X0, X21
	109 Move X2, X19
	110 Call 0x1994444
	111 Move X0, 0xE5B000
	112 Move X0, [X0+2896]
	113 Call 0x1C17D08
	114 Move X1, X21
	115 Move X2, X31
	116 Call Environment.GetResourceString, X0, X1
	117 Move X19, X0
	118 Move X0, 0xE5B000
	119 Move X0, [X0+1224]
	120 Call 0x1C17D08
	121 Call 0x1C17F10
	122 Move X1, X19
	123 Move X2, X31
	124 Move X20, X0
	125 Call BadImageFormatException..ctor, X0, X1
	126 Move X0, 0xE5B000
	127 Move X0, [X0+2904]
	128 Call 0x1C17D08
	129 Move X1, X0
	130 Move X0, X20
	131 Call 0x1C17DEC

Method: System.Void ReadResources()

Disassembly:
	0x032C98E0 BL 0x1C16F20
	0x032C98E4 MOV X0, X21
	0x032C98E8 BL 0x1C16F18
	0x032C98EC BL 0x1C16F20
	0x032C98F0 BL 0x1C16F20
	0x032C98F4 BL 0x1C16F20
	0x032C98F8 BL 0x1C16F20
	0x032C98FC BL 0x1C16F20
	0x032C9900 MOV X20, X0
	0x032C9904 CBNZ X0, 0x32C9914
	0x032C9908 LDR W8, [X21 + 0x18]
	0x032C990C CBNZ W8, 0x32C9934
	0x032C9910 BL 0x1C16F28
	0x032C9914 LDR X8, [X21]
	0x032C9918 LDR X1, [X8 + 0x40]
	0x032C991C MOV X0, X20
	0x032C9920 BL 0x1C16E00
	0x032C9924 CBNZ X0, 0x32C9908
	0x032C9928 BL 0x1C16F44
	0x032C992C MOV X1, X31
	0x032C9930 BL 0x1C16DEC
	0x032C9934 STR X20, [X21 + 0x20]
	0x032C9938 ADRP X0, 0xE5C000
	0x032C993C LDR X0, [X0 + 0x9F0]
	0x032C9940 BL 0x1C16D08
	0x032C9944 MOV X1, X21
	0x032C9948 MOV X2, X31
	0x032C994C BL 0x33BFB40
	0x032C9950 MOV X20, X0
	0x032C9954 ADRP X0, 0xE57000
	0x032C9958 LDR X0, [X0 + 0xC08]
	0x032C995C BL 0x1C16D08
	0x032C9960 BL 0x1C16F10
	0x032C9964 MOV X21, X0
	0x032C9968 MOV X1, X20
	0x032C996C MOV X2, X31
	0x032C9970 BL 0x33674A0
	0x032C9974 ADRP X0, 0xE5C000
	0x032C9978 LDR X0, [X0 + 0xB20]
	0x032C997C BL 0x1C16D08
	0x032C9980 MOV X1, X0
	0x032C9984 MOV X0, X21
	0x032C9988 BL 0x1C16DEC
	0x032C998C B 0x32C99C8
	0x032C9990 B 0x32C99C8
	0x032C9994 B 0x32C99C8
	0x032C9998 B 0x32C99C8
	0x032C999C B 0x32C99C8
	0x032C99A0 B 0x32C99C8
	0x032C99A4 B 0x32C99C8
	0x032C99A8 B 0x32C99C8
	0x032C99AC B 0x32C99C8
	0x032C99B0 B 0x32C99C8
	0x032C99B4 B 0x32C99C8
	0x032C99B8 B 0x32C99C8
	0x032C99BC B 0x32C99C8
	0x032C99C0 B 0x32C99C8
	0x032C99C4 B 0x32C99C8
	0x032C99C8 MOV X20, X0
	0x032C99CC CMP W1, 0x1
	0x032C99D0 B.NE 0x32C99EC
	0x032C99D4 MOV X0, X20
	0x032C99D8 BL 0x3EB1AD0
	0x032C99DC LDR X21, [X0]
	0x032C99E0 BL 0x3EB1AE0
	0x032C99E4 MOV X20, X31
	0x032C99E8 B 0x32C9880
	0x032C99EC MOV X21, X31
	0x032C99F0 B 0x32C99F8
	0x032C99F4 MOV X20, X0
	0x032C99F8 LDRB W8, [X31 + 0xC]
	0x032C99FC CBZ W8, 0x32C9A0C
	0x032C9A00 MOV X0, X19
	0x032C9A04 MOV X1, X31
	0x032C9A08 BL 0x33E14E4
	0x032C9A0C CBNZ X21, 0x32C9A18
	0x032C9A10 MOV X0, X20
	0x032C9A14 BL 0x1D2C690
	0x032C9A18 MOV X0, X21
	0x032C9A1C BL 0x1C16F18
	0x032C9A20 BL 0x1990590
	0x032C9A24 STP X30, X21, [X31 - 0x20]!
	0x032C9A28 STP X20, X19, [X31 + 0x10]
	0x032C9A2C BL 0x32C9FF8
	0x032C9A30 LDP X20, X19, [X31 + 0x10]
	0x032C9A34 LDP X30, X21, [X31], #0x20
	0x032C9A38 RET
	0x032C9A3C CMP W1, 0x1
	0x032C9A40 MOV X19, X0

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1114000
	007 Move X20, 0xE57000
	008 Move W8, [X21+2261]
	009 Move X20, [X20+208]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xE57000
	016 Move X0, [X0+208]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+2261], W8
	020 Add X0, X31, 0
	021 Move W1, 12
	022 Move X2, X31
	023 Move [X31], X31
	024 Move [X31+8], X31
	025 Call StreamingContext..ctor, X0, X1
	026 Move X0, [X20]
	027 Call 0x1C17F10
	028 Move X2, [X31]
	029 Move X3, [X31+8]
	030 Move X1, X31
	031 Move X4, X31
	032 Move X20, X0
	033 Call BinaryFormatter..ctor, X0, X1, X2
	034 Move [X19+96], X20
	035 Move X0, X19
	036 Call ResourceReader._ReadResources, X0
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X30, [X31+16]
	040 Move X21, [X31+24]
	041 Add X31, X31, 48
	042 Return 
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X19, X0
	045 Move X0, X19
	046 Call 0x3EB2AD0
	047 Move X19, X0
	048 Move X0, 0xE5D000
	049 Move X0, [X0+984]
	050 Call 0x1C17D08
	051 Move X8, [X19]
	052 Move X1, [X8]
	053 Call 0x1C18270
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {81}
	058 Move X19, [X19]
	059 Call 0x3EB2AE0
	060 Move X0, 0xE5D000
	061 Move X0, [X0+2744]
	062 Call 0x1C17D08
	063 Move X1, X31
	064 Call Environment.GetResourceString, X0
	065 Move X20, X0
	066 Move X0, 0xE5D000
	067 Move X0, [X0+1224]
	068 Call 0x1C17D08
	069 Call 0x1C17F10
	070 Move X1, X20
	071 Move X2, X19
	072 Move X3, X31
	073 Move X21, X0
	074 Call BadImageFormatException..ctor, X0, X1, X2
	075 Move X0, 0xE5D000
	076 Move X0, [X0+2752]
	077 Call 0x1C17D08
	078 Move X1, X0
	079 Move X0, X21
	080 Call 0x1C17DEC
	081 Move X0, 0xE35000
	082 Move X0, [X0+3960]
	083 Call 0x1C17D08
	084 Move X8, [X19]
	085 Move X1, [X8]
	086 Call 0x1C18270
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfEqual {58}
	091 Move W0, 8
	092 Call 0x3EB2AF0
	093 Move X8, [X19]
	094 Move [X0], X8
	095 Move X1, 0xBEC000
	096 Add X1, X1, 3672
	097 Move X2, X31
	098 Call 0x3EB2B00
	099 Move X19, X0
	100 Call 0x3EB2AE0
	101 Move X0, X19
	102 Call 0x1D2D690
	103 Call 0x1991590

Method: System.Void _ReadResources()

Disassembly:
	0x032CC12C MOV X20, X0
	0x032CC130 BL 0x19903C0
	0x032CC134 MOV X0, X20
	0x032CC138 MOV X1, X19
	0x032CC13C BL 0x19980B4
	0x032CC140 MOV X0, X20
	0x032CC144 MOV X1, X31
	0x032CC148 MOV X2, X19
	0x032CC14C BL 0x1993444
	0x032CC150 ADRP X0, 0xE59000
	0x032CC154 LDR X0, [X0 + 0xBB8]
	0x032CC158 BL 0x1C16D08
	0x032CC15C MOV X1, X20
	0x032CC160 MOV X2, X31
	0x032CC164 BL 0x33BFB40
	0x032CC168 MOV X19, X0
	0x032CC16C ADRP X0, 0xE27000
	0x032CC170 LDR X0, [X0 + 0x5B0]
	0x032CC174 BL 0x1C16D08
	0x032CC178 BL 0x1C16F10
	0x032CC17C MOV X1, X19
	0x032CC180 MOV X2, X31
	0x032CC184 MOV X20, X0
	0x032CC188 BL 0x337DF1C
	0x032CC18C ADRP X0, 0xE59000
	0x032CC190 LDR X0, [X0 + 0xBD0]
	0x032CC194 BL 0x1C16D08
	0x032CC198 MOV X1, X0
	0x032CC19C MOV X0, X20
	0x032CC1A0 BL 0x1C16DEC
	0x032CC1A4 MOVZ W0, 0x8
	0x032CC1A8 BL 0x3EB1AF0
	0x032CC1AC LDR X8, [X20]
	0x032CC1B0 STR X8, [X0]
	0x032CC1B4 ADRP X1, 0xBE8000
	0x032CC1B8 ADD X1, X1, 0xE58
	0x032CC1BC MOV X2, X31
	0x032CC1C0 BL 0x3EB1B00
	0x032CC1C4 MOV X20, X0
	0x032CC1C8 BL 0x3EB1AE0
	0x032CC1CC MOV X0, X20
	0x032CC1D0 BL 0x1D2C690
	0x032CC1D4 BL 0x1990590
	0x032CC1D8 STP X30, X25, [X31 - 0x40]!
	0x032CC1DC STP X24, X23, [X31 + 0x10]
	0x032CC1E0 STP X22, X21, [X31 + 0x20]
	0x032CC1E4 STP X20, X19, [X31 + 0x30]
	0x032CC1E8 ADRP X21, 0x1110000
	0x032CC1EC LDRB W8, [X21 + 0x8DE]
	0x032CC1F0 MOV X19, X1
	0x032CC1F4 MOV X20, X0
	0x032CC1F8 TBNZ X8, 0x0, 0x32CC234
	0x032CC1FC ADRP X0, 0xE57000
	0x032CC200 LDR X0, [X0 + 0xDB8]
	0x032CC204 BL 0x1C16CF4
	0x032CC208 ADRP X0, 0xE54000
	0x032CC20C LDR X0, [X0 + 0xF80]
	0x032CC210 BL 0x1C16CF4
	0x032CC214 ADRP X0, 0xE27000
	0x032CC218 LDR X0, [X0 + 0xE18]
	0x032CC21C BL 0x1C16CF4
	0x032CC220 ADRP X0, 0xE34000
	0x032CC224 LDR X0, [X0 + 0x2F0]
	0x032CC228 BL 0x1C16CF4
	0x032CC22C MOVZ W8, 0x1
	0x032CC230 STRB W8, [X21 + 0x8DE]
	0x032CC234 LDR X22, [X20 + 0x18]
	0x032CC238 CBZ X22, 0x32CC450
	0x032CC23C LDR X21, [X20 + 0x20]
	0x032CC240 CBNZ X21, 0x32CC424
	0x032CC244 ADRP X21, 0xE34000
	0x032CC248 LDR X21, [X21 + 0x2F0]
	0x032CC24C LDR X0, [X21]
	0x032CC250 LDR W8, [X0 + 0xE0]
	0x032CC254 CBNZ W8, 0x32CC25C
	0x032CC258 BL 0x1C16DFC
	0x032CC25C ADRP X23, 0x1110000
	0x032CC260 LDRB W8, [X23 + 0x926]
	0x032CC264 CBNZ W8, 0x32CC27C
	0x032CC268 ADRP X0, 0xE34000
	0x032CC26C LDR X0, [X0 + 0x2F0]
	0x032CC270 BL 0x1C16CF4
	0x032CC274 MOVZ W8, 0x1
	0x032CC278 STRB W8, [X23 + 0x926]
	0x032CC27C LDR X0, [X21]
	0x032CC280 LDR W8, [X0 + 0xE0]
	0x032CC284 CBNZ W8, 0x32CC290
	0x032CC288 BL 0x1C16DFC
	0x032CC28C LDR X0, [X21]
	0x032CC290 ADRP X9, 0xE57000
	0x032CC294 LDR X8, [X0 + 0xB8]
	0x032CC298 LDR X9, [X9 + 0xDB8]
	0x032CC29C LDR X23, [X8 + 0x18]
	0x032CC2A0 LDR X0, [X9]
	0x032CC2A4 BL 0x1C16F10
	0x032CC2A8 MOV X1, X23
	0x032CC2AC MOV X2, X31
	0x032CC2B0 MOV X21, X0
	0x032CC2B4 BL 0x335A378
	0x032CC2B8 LDR X8, [X22]
	0x032CC2BC MOV X0, X22
	0x032CC2C0 LDR X9, [X8 + 0x2F8]
	0x032CC2C4 LDR X1, [X8 + 0x300]
	0x032CC2C8 BLR X9
	0x032CC2CC CBZ X0, 0x32CC44C
	0x032CC2D0 ADRP X24, 0xE27000
	0x032CC2D4 ADRP X25, 0xE54000
	0x032CC2D8 LDR X24, [X24 + 0xE18]
	0x032CC2DC LDR X25, [X25 + 0xF80]
	0x032CC2E0 MOV X22, X0
	0x032CC2E4 LDR X8, [X22]
	0x032CC2E8 LDR X1, [X24]
	0x032CC2EC LDRH W9, [X8 + 0x12E]
	0x032CC2F0 CBZ X9, 0x32CC314
	0x032CC2F4 LDR X10, [X8 + 0xB0]
	0x032CC2F8 ADD X10, X10, 0x8
	0x032CC2FC LDUR X11, [X10 - 0x8]
	0x032CC300 CMP X11, X1
	0x032CC304 B.EQ 0x32CC324
	0x032CC308 SUBS X9, X9, 0x1
	0x032CC30C ADD X10, X10, 0x10
	0x032CC310 B.NE 0x32CC2FC
	0x032CC314 MOV X0, X22
	0x032CC318 MOV W2, W31
	0x032CC31C BL 0x1C5C788
	0x032CC320 B 0x32CC330
	0x032CC324 LDRSW X9, [X10]
	0x032CC328 ADD X8, X8, X9, 0x4, LSL
	0x032CC32C ADD X0, X8, 0x138
	0x032CC330 LDP X8, X1, [X0]
	0x032CC334 MOV X0, X22
	0x032CC338 BLR X8
	0x032CC33C TBZ X0, 0x0, 0x32CC41C
	0x032CC340 LDR X8, [X22]
	0x032CC344 LDR X1, [X25]
	0x032CC348 LDRH W9, [X8 + 0x12E]
	0x032CC34C CBZ X9, 0x32CC370
	0x032CC350 LDR X10, [X8 + 0xB0]
	0x032CC354 ADD X10, X10, 0x8
	0x032CC358 LDUR X11, [X10 - 0x8]
	0x032CC35C CMP X11, X1
	0x032CC360 B.EQ 0x32CC380
	0x032CC364 SUBS X9, X9, 0x1
	0x032CC368 ADD X10, X10, 0x10
	0x032CC36C B.NE 0x32CC358
	0x032CC370 MOV X0, X22
	0x032CC374 MOV W2, W31
	0x032CC378 BL 0x1C5C788
	0x032CC37C B 0x32CC38C
	0x032CC380 LDRSW X9, [X10]
	0x032CC384 ADD X8, X8, X9, 0x4, LSL
	0x032CC388 ADD X0, X8, 0x138
	0x032CC38C LDP X8, X1, [X0]
	0x032CC390 MOV X0, X22
	0x032CC394 BLR X8
	0x032CC398 LDR X8, [X22]
	0x032CC39C LDR X1, [X25]
	0x032CC3A0 MOV X23, X0
	0x032CC3A4 LDRH W9, [X8 + 0x12E]
	0x032CC3A8 CBZ X9, 0x32CC3CC
	0x032CC3AC LDR X10, [X8 + 0xB0]
	0x032CC3B0 ADD X10, X10, 0x8
	0x032CC3B4 LDUR X11, [X10 - 0x8]
	0x032CC3B8 CMP X11, X1
	0x032CC3BC B.EQ 0x32CC3DC
	0x032CC3C0 SUBS X9, X9, 0x1
	0x032CC3C4 ADD X10, X10, 0x10
	0x032CC3C8 B.NE 0x32CC3B4
	0x032CC3CC MOVZ W2, 0x1
	0x032CC3D0 MOV X0, X22
	0x032CC3D4 BL 0x1C5C788
	0x032CC3D8 B 0x32CC3EC
	0x032CC3DC LDR W9, [X10]
	0x032CC3E0 ADD W9, W9, 0x1
	0x032CC3E4 ADD X8, X8, W9, 0x4, SXTW
	0x032CC3E8 ADD X0, X8, 0x138
	0x032CC3EC LDP X8, X1, [X0]
	0x032CC3F0 MOV X0, X22
	0x032CC3F4 BLR X8
	0x032CC3F8 CBZ X21, 0x32CC44C
	0x032CC3FC LDR X8, [X21]
	0x032CC400 MOV X2, X0
	0x032CC404 MOV X0, X21
	0x032CC408 MOV X1, X23
	0x032CC40C LDR X9, [X8 + 0x278]
	0x032CC410 LDR X3, [X8 + 0x280]
	0x032CC414 BLR X9
	0x032CC418 B 0x32CC2E4
	0x032CC41C STR X21, [X20 + 0x20]
	0x032CC420 CBZ X21, 0x32CC44C
	0x032CC424 LDR X8, [X21]
	0x032CC428 MOV X0, X21
	0x032CC42C MOV X1, X19
	0x032CC430 LDP X20, X19, [X31 + 0x30]
	0x032CC434 LDR X3, [X8 + 0x2D8]
	0x032CC438 LDR X2, [X8 + 0x2E0]
	0x032CC43C LDP X22, X21, [X31 + 0x20]
	0x032CC440 LDP X24, X23, [X31 + 0x10]
	0x032CC444 LDP X30, X25, [X31], #0x40
	0x032CC448 BR X3
	0x032CC44C BL 0x1C16F20
	0x032CC450 ADRP X0, 0xE59000
	0x032CC454 LDR X0, [X0 + 0x9C0]
	0x032CC458 BL 0x1C16D08
	0x032CC45C MOV X1, X31
	0x032CC460 BL 0x33BDD84
	0x032CC464 MOV X19, X0
	0x032CC468 ADRP X0, 0xE50000
	0x032CC46C LDR X0, [X0 + 0x4B8]
	0x032CC470 BL 0x1C16D08
	0x032CC474 BL 0x1C16F10
	0x032CC478 MOV X1, X31
	0x032CC47C MOV X2, X19
	0x032CC480 MOV X3, X31
	0x032CC484 MOV X20, X0
	0x032CC488 BL 0x338C410
	0x032CC48C ADRP X0, 0xE59000
	0x032CC490 LDR X0, [X0 + 0xBD8]
	0x032CC494 BL 0x1C16D08
	0x032CC498 MOV X1, X0
	0x032CC49C MOV X0, X20
	0x032CC4A0 BL 0x1C16DEC
	0x032CC4A4 B 0x32CBF14
	0x032CC4A8 STP X30, X21, [X31 - 0x20]!
	0x032CC4AC STP X20, X19, [X31 + 0x10]
	0x032CC4B0 MOV W21, W2
	0x032CC4B4 MOV X19, X1
	0x032CC4B8 MOV X20, X0
	0x032CC4BC BL 0x32CBF14
	0x032CC4C0 CBNZ X0, 0x32CC4DC
	0x032CC4C4 TBZ X21, 0x0, 0x32CC4DC
	0x032CC4C8 MOV X0, X20
	0x032CC4CC MOV X1, X19
	0x032CC4D0 LDP X20, X19, [X31 + 0x10]
	0x032CC4D4 LDP X30, X21, [X31], #0x20
	0x032CC4D8 B 0x32CC1D8
	0x032CC4DC LDP X20, X19, [X31 + 0x10]
	0x032CC4E0 LDP X30, X21, [X31], #0x20
	0x032CC4E4 RET
	0x032CC4E8 STP X30, X21, [X31 - 0x20]!
	0x032CC4EC STP X20, X19, [X31 + 0x10]
	0x032CC4F0 ADRP X20, 0x1110000
	0x032CC4F4 ADRP X21, 0xE59000
	0x032CC4F8 LDRB W8, [X20 + 0x8DF]
	0x032CC4FC LDR X21, [X21 + 0xBE0]
	0x032CC500 MOV X19, X0
	0x032CC504 TBNZ X8, 0x0, 0x32CC51C
	0x032CC508 ADRP X0, 0xE59000
	0x032CC50C LDR X0, [X0 + 0xBE0]
	0x032CC510 BL 0x1C16CF4
	0x032CC514 MOVZ W8, 0x1
	0x032CC518 STRB W8, [X20 + 0x8DF]
	0x032CC51C LDR X1, [X21]
	0x032CC520 MOV X0, X19
	0x032CC524 MOV X2, X31
	0x032CC528 BL 0x338C8D8
	0x032CC52C MOVZ W8, 0x211D
	0x032CC530 MOVK W8, 0x80000000
	0x032CC534 STR W8, [X19 + 0x60]
	0x032CC538 LDP X20, X19, [X31 + 0x10]
	0x032CC53C LDP X30, X21, [X31], #0x20
	0x032CC540 RET
	0x032CC544 STP X30, X19, [X31 - 0x10]!
	0x032CC548 MOV X2, X31
	0x032CC54C MOV X19, X0
	0x032CC550 BL 0x338C8D8
	0x032CC554 MOVZ W8, 0x211D
	0x032CC558 MOVK W8, 0x80000000
	0x032CC55C STR W8, [X19 + 0x60]
	0x032CC560 LDP X30, X19, [X31], #0x10
	0x032CC564 RET
	0x032CC568 MOV X4, X31
	0x032CC56C B 0x338CA74
	0x032CC570 STR X30, [X31 - 0x20]!
	0x032CC574 STP X20, X19, [X31 + 0x10]
	0x032CC578 MOV X19, X1
	0x032CC57C MOV X1, X31
	0x032CC580 MOV X20, X0
	0x032CC584 BL 0x33A51F0
	0x032CC588 STR X19, [X20 + 0x10]
	0x032CC58C LDP X20, X19, [X31 + 0x10]
	0x032CC590 LDR X30, [X31], #0x20
	0x032CC594 RET
	0x032CC598 STR X30, [X31 - 0x20]!
	0x032CC59C STP X20, X19, [X31 + 0x10]
	0x032CC5A0 MOV X19, X1
	0x032CC5A4 MOV X1, X31
	0x032CC5A8 MOV X20, X0
	0x032CC5AC BL 0x33A51F0
	0x032CC5B0 STR X19, [X20 + 0x10]
	0x032CC5B4 LDP X20, X19, [X31 + 0x10]
	0x032CC5B8 LDR X30, [X31], #0x20
	0x032CC5BC RET
	0x032CC5C0 STR X30, [X31 - 0x20]!
	0x032CC5C4 STP X20, X19, [X31 + 0x10]
	0x032CC5C8 MOV X19, X1
	0x032CC5CC MOV X1, X31
	0x032CC5D0 MOV X20, X0
	0x032CC5D4 BL 0x33A51F0
	0x032CC5D8 STR X19, [X20 + 0x10]
	0x032CC5DC LDP X20, X19, [X31 + 0x10]
	0x032CC5E0 LDR X30, [X31], #0x20
	0x032CC5E4 RET
	0x032CC5E8 STR X30, [X31 - 0x20]!
	0x032CC5EC STP X20, X19, [X31 + 0x10]
	0x032CC5F0 MOV X19, X1
	0x032CC5F4 MOV X1, X31
	0x032CC5F8 MOV X20, X0
	0x032CC5FC BL 0x33A51F0
	0x032CC600 STR X19, [X20 + 0x10]
	0x032CC604 LDP X20, X19, [X31 + 0x10]
	0x032CC608 LDR X30, [X31], #0x20
	0x032CC60C RET
	0x032CC610 STR X30, [X31 - 0x20]!
	0x032CC614 STP X20, X19, [X31 + 0x10]
	0x032CC618 AND W20, W1, 0x1
	0x032CC61C MOV X1, X31
	0x032CC620 MOV X19, X0
	0x032CC624 BL 0x33A51F0
	0x032CC628 STRB W20, [X19 + 0x10]
	0x032CC62C LDP X20, X19, [X31 + 0x10]
	0x032CC630 LDR X30, [X31], #0x20
	0x032CC634 RET
	0x032CC638 STR X30, [X31 - 0x20]!
	0x032CC63C STP X20, X19, [X31 + 0x10]
	0x032CC640 MOV X19, X1
	0x032CC644 MOV X1, X31
	0x032CC648 MOV X20, X0
	0x032CC64C BL 0x33A51F0
	0x032CC650 STR X19, [X20 + 0x10]
	0x032CC654 LDP X20, X19, [X31 + 0x10]
	0x032CC658 LDR X30, [X31], #0x20
	0x032CC65C RET
	0x032CC660 STR X30, [X31 - 0x20]!
	0x032CC664 STP X20, X19, [X31 + 0x10]
	0x032CC668 MOV X19, X1
	0x032CC66C MOV X1, X31
	0x032CC670 MOV X20, X0
	0x032CC674 BL 0x33A51F0
	0x032CC678 CBZ X19, 0x32CC68C
	0x032CC67C STR X19, [X20 + 0x10]
	0x032CC680 LDP X20, X19, [X31 + 0x10]
	0x032CC684 LDR X30, [X31], #0x20
	0x032CC688 RET
	0x032CC68C ADRP X0, 0xE2C000
	0x032CC690 LDR X0, [X0 + 0x528]
	0x032CC694 BL 0x1C16D08
	0x032CC698 BL 0x1C16F10
	0x032CC69C MOV X19, X0
	0x032CC6A0 ADRP X0, 0xE59000
	0x032CC6A4 LDR X0, [X0 + 0xA30]
	0x032CC6A8 BL 0x1C16D08
	0x032CC6AC MOV X1, X0
	0x032CC6B0 MOV X0, X19
	0x032CC6B4 MOV X2, X31
	0x032CC6B8 BL 0x330E100
	0x032CC6BC ADRP X0, 0xE59000
	0x032CC6C0 LDR X0, [X0 + 0xBE8]
	0x032CC6C4 BL 0x1C16D08
	0x032CC6C8 MOV X1, X0
	0x032CC6CC MOV X0, X19
	0x032CC6D0 BL 0x1C16DEC
	0x032CC6D4 STR X30, [X31 - 0x20]!
	0x032CC6D8 STP X20, X19, [X31 + 0x10]
	0x032CC6DC MOV X19, X1
	0x032CC6E0 MOV X1, X31
	0x032CC6E4 MOV X20, X0
	0x032CC6E8 BL 0x33A51F0
	0x032CC6EC STR X19, [X20 + 0x10]
	0x032CC6F0 LDP X20, X19, [X31 + 0x10]
	0x032CC6F4 LDR X30, [X31], #0x20
	0x032CC6F8 RET
	0x032CC6FC STR X30, [X31 - 0x20]!
	0x032CC700 STP X20, X19, [X31 + 0x10]
	0x032CC704 MOV X19, X1
	0x032CC708 MOV X1, X31
	0x032CC70C MOV X20, X0
	0x032CC710 BL 0x33A51F0
	0x032CC714 STR X19, [X20 + 0x10]
	0x032CC718 LDP X20, X19, [X31 + 0x10]
	0x032CC71C LDR X30, [X31], #0x20
	0x032CC720 RET
	0x032CC724 STP X30, X21, [X31 - 0x20]!
	0x032CC728 STP X20, X19, [X31 + 0x10]
	0x032CC72C MOV X20, X1
	0x032CC730 MOV X1, X31
	0x032CC734 MOV X19, X2
	0x032CC738 MOV X21, X0
	0x032CC73C BL 0x33A51F0
	0x032CC740 STP X20, X19, [X21 + 0x10]
	0x032CC744 LDP X20, X19, [X31 + 0x10]
	0x032CC748 LDP X30, X21, [X31], #0x20
	0x032CC74C RET
	0x032CC750 STR X30, [X31 - 0x20]!
	0x032CC754 STP X20, X19, [X31 + 0x10]
	0x032CC758 MOV X19, X1
	0x032CC75C MOV X1, X31
	0x032CC760 MOV X20, X0
	0x032CC764 BL 0x33A51F0
	0x032CC768 STR X19, [X20 + 0x10]
	0x032CC76C LDP X20, X19, [X31 + 0x10]
	0x032CC770 LDR X30, [X31], #0x20
	0x032CC774 RET
	0x032CC778 STR X30, [X31 - 0x20]!
	0x032CC77C STP X20, X19, [X31 + 0x10]
	0x032CC780 MOV X19, X1
	0x032CC784 MOV X1, X31
	0x032CC788 MOV X20, X0
	0x032CC78C BL 0x33A51F0
	0x032CC790 STR X19, [X20 + 0x10]
	0x032CC794 LDP X20, X19, [X31 + 0x10]
	0x032CC798 LDR X30, [X31], #0x20
	0x032CC79C RET
	0x032CC7A0 STR X30, [X31 - 0x20]!
	0x032CC7A4 STP X20, X19, [X31 + 0x10]
	0x032CC7A8 MOV X19, X1
	0x032CC7AC MOV X1, X31
	0x032CC7B0 MOV X20, X0
	0x032CC7B4 BL 0x33A51F0
	0x032CC7B8 STR X19, [X20 + 0x10]
	0x032CC7BC LDP X20, X19, [X31 + 0x10]
	0x032CC7C0 LDR X30, [X31], #0x20
	0x032CC7C4 RET
	0x032CC7C8 MOV X1, X31
	0x032CC7CC B 0x33BDD8C
	0x032CC7D0 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x1111000
	009 Move W8, [X20+2262]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0xE59000
	016 Move X0, [X0+3840]
	017 Call 0x1C17CF4
	018 Move X0, 0xE29000
	019 Move X0, [X0+3672]
	020 Call 0x1C17CF4
	021 Move X0, 0xE5A000
	022 Move X0, [X0+2712]
	023 Call 0x1C17CF4
	024 Move X0, 0xE59000
	025 Move X0, [X0+3024]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+2262], W8
	029 Move X0, [X19+16]
	030 Compare X0, 0
	031 JumpIfEqual {309}
	032 Move X8, [X0]
	033 Move X23, 0xE5A000
	034 Move X9, [X8+552]
	035 Move X1, [X8+560]
	036 Move X23, [X23+2712]
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move X8, [X23]
	039 Move W20, W0
	040 Move W9, [X8+224]
	041 Compare W9, 0
	042 JumpIfNotEqual {46}
	043 Move X0, X8
	044 Call 0x1C17DFC
	045 Move X8, [X23]
	046 Move X8, [X8+184]
	047 Move W8, [X8]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X0, [X19+16]
	050 Compare X0, 0
	051 JumpIfEqual {309}
	052 Move X8, [X0]
	053 Move X9, [X8+552]
	054 Move X1, [X8+560]
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Move X8, [X19+16]
	057 Compare X8, 0
	058 JumpIfEqual {309}
	059 Move X9, [X8]
	060 Move W21, W0
	061 Move X0, X8
	062 Move X10, [X9+552]
	063 Move X1, [X9+560]
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Or W8, W0, W21
	066 Move TEMP, X8
	067 And TEMP, TEMP, -2147483648
	068 Compare TEMP, -2147483648
	069 JumpIfEqual {376}
	070 Move W20, W0
	071 Move X0, [X19+16]
	072 Compare X0, 0
	073 JumpIfEqual {309}
	074 Move X8, [X0]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X9, [X8+664]
	077 Move X1, [X8+672]
	078 NotImplemented "Instruction BLR not yet implemented."
	079 Move X8, [X23]
	080 Move X20, X0
	081 Move W9, [X8+224]
	082 Compare W9, 0
	083 JumpIfNotEqual {87}
	084 Move X0, X8
	085 Call 0x1C17DFC
	086 Move X8, [X23]
	087 Move X9, 0xE59000
	088 Move X8, [X8+184]
	089 Move X9, [X9+3840]
	090 Move X21, [X8+32]
	091 Move X0, [X9]
	092 Call 0x1C17F10
	093 Move X1, X21
	094 Move X2, X31
	095 Move X22, X0
	096 Call AssemblyName..ctor, X0, X1
	097 Move X8, [X23]
	098 Move X0, X20
	099 Move X2, X22
	100 Move X8, [X8+184]
	101 Move X1, [X8+16]
	102 Call ResourceManager.CompareNames, X0, X1, X2
	103 Move TEMP, X0
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfNotEqual {455}
	107 Move X0, X19
	108 Call ResourceReader.SkipString, X0
	109 Move X9, [X8+392]
	110 Move X1, [X8+400]
	111 NotImplemented "Instruction BLR not yet implemented."
	112 Compare X0, 0
	113 JumpIfEqual {309}
	114 Move X8, [X0]
	115 Move W1, W20
	116 Move W2, 1
	117 Move X9, [X8+824]
	118 Move X3, [X8+832]
	119 NotImplemented "Instruction BLR not yet implemented."
	120 Move X0, [X19+16]
	121 Compare X0, 0
	122 JumpIfEqual {309}
	123 Move X8, [X0]
	124 Move X9, [X8+552]
	125 Move X1, [X8+560]
	126 NotImplemented "Instruction BLR not yet implemented."
	127 Subtract W8, W0, 1
	128 Move W20, W0
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move X0, [X19+16]
	131 Move [X19+120], W20
	132 Compare X0, 0
	133 JumpIfEqual {309}
	134 Move X8, [X0]
	135 Move X9, [X8+552]
	136 Move X1, [X8+560]
	137 NotImplemented "Instruction BLR not yet implemented."
	138 Move [X19+104], W0
	139 Move TEMP, X0
	140 And TEMP, TEMP, -2147483648
	141 Compare TEMP, -2147483648
	142 JumpIfEqual {376}
	143 Move X0, [X19+16]
	144 Compare X0, 0
	145 JumpIfEqual {309}
	146 Move X8, [X0]
	147 Move X9, [X8+552]
	148 Move X1, [X8+560]
	149 NotImplemented "Instruction BLR not yet implemented."
	150 Move TEMP, X0
	151 And TEMP, TEMP, -2147483648
	152 Compare TEMP, -2147483648
	153 JumpIfEqual {376}
	154 Move X8, 0xE59000
	155 Move X8, [X8+3024]
	156 Move W21, W0
	157 Move X22, 0xE29000
	158 Move W1, W21
	159 Move X0, [X8]
	160 Move X22, [X22+3672]
	161 Call 0x1C17D6C
	162 Move [X19+80], X0
	163 Move X0, [X22]
	164 Move W1, W21
	165 Call 0x1C17D6C
	166 Move [X19+88], X0
	167 Compare W21, 0
	168 JumpIfEqual {200}
	169 Move X20, X0
	170 Move X0, [X19+16]
	171 Compare X0, 0
	172 JumpIfEqual {309}
	173 Move W8, W21
	174 Move X23, X31
	175 Subtract X21, X8, 1
	176 Move X8, [X0]
	177 Move X9, [X8+392]
	178 Move X1, [X8+400]
	179 NotImplemented "Instruction BLR not yet implemented."
	180 Compare X0, 0
	181 JumpIfEqual {309}
	182 Move X8, [X0]
	183 Move X9, [X8+504]
	184 Move X1, [X8+512]
	185 NotImplemented "Instruction BLR not yet implemented."
	186 Compare X20, 0
	187 JumpIfEqual {309}
	188 Move W8, [X20+24]
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Add X8, X20, X23
	191 Move [X8+32], W0
	192 Move X0, X19
	193 Call ResourceReader.SkipString, X0
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Move X0, [X19+16]
	196 Move X20, [X19+88]
	197 Add X23, X23, 1
	198 Compare X0, 0
	199 JumpIfNotEqual {176}
	200 Move X0, [X19+16]
	201 Compare X0, 0
	202 JumpIfEqual {309}
	203 Move X8, [X0]
	204 Move X9, [X8+392]
	205 Move X1, [X8+400]
	206 NotImplemented "Instruction BLR not yet implemented."
	207 Compare X0, 0
	208 JumpIfEqual {309}
	209 Move X8, [X0]
	210 Move X9, [X8+504]
	211 Move X1, [X8+512]
	212 NotImplemented "Instruction BLR not yet implemented."
	213 And W8, W0, 7
	214 Or W20, W8, 0xFFFFFFF8
	215 Move X0, [X19+16]
	216 Compare X0, 0
	217 JumpIfEqual {309}
	218 Move X8, [X0]
	219 Move X9, [X8+472]
	220 Move X1, [X8+480]
	221 NotImplemented "Instruction BLR not yet implemented."
	222 Add W20, W20, 1
	223 Move X0, [X19+112]
	224 Move W20, [X19+104]
	225 Compare X0, 0
	226 JumpIfEqual {281}
	227 Move X8, X20
	228 ShiftRight X8, 29
	229 And X8, X8, 0x7FFFFFFF
	230 Compare W8, 0
	231 JumpIfNotEqual {376}
	232 Move X1, X31
	233 Call UnmanagedMemoryStream.get_PositionPointer, X0
	234 Move X8, [X19+112]
	235 Move [X19+56], X0
	236 Compare X8, 0
	237 JumpIfEqual {309}
	238 Move X9, [X8]
	239 Move X1, X20
	240 ShiftRight X1, 62
	241 And X1, X1, 0x1FFFFFFF
	242 Move W2, 1
	243 Move X0, X8
	244 Move X10, [X9+824]
	245 Move X3, [X9+832]
	246 NotImplemented "Instruction BLR not yet implemented."
	247 Move X0, [X19+112]
	248 Compare X0, 0
	249 JumpIfEqual {309}
	250 Move X1, X31
	251 Call UnmanagedMemoryStream.get_PositionPointer, X0
	252 Move W20, [X19+104]
	253 Move X0, [X19+112]
	254 Compare X0, 0
	255 JumpIfEqual {310}
	256 Move W8, W20
	257 ShiftRight W8, 29
	258 And W8, W8, 0x7FFFFFFF
	259 Compare W8, 0
	260 JumpIfNotEqual {376}
	261 Move X1, X31
	262 Call UnmanagedMemoryStream.get_PositionPointer, X0
	263 Move X8, [X19+112]
	264 Move [X19+72], X0
	265 Compare X8, 0
	266 JumpIfEqual {309}
	267 Move X9, [X8]
	268 Move W1, W20
	269 ShiftRight W1, 30
	270 And W1, W1, 0x1FFFFFFF
	271 Move W2, 1
	272 Move X0, X8
	273 Move X10, [X9+824]
	274 Move X3, [X9+832]
	275 NotImplemented "Instruction BLR not yet implemented."
	276 Move X0, [X19+112]
	277 Compare X0, 0
	278 JumpIfEqual {309}
	279 Move X1, X31
	280 Call UnmanagedMemoryStream.get_PositionPointer, X0
	281 Move X0, [X22]
	282 Move W1, W20
	283 Call 0x1C17D6C
	284 Move W20, [X19+104]
	285 Move [X19+48], X0
	286 NotImplemented "Instruction CMP not yet implemented."
	287 Move X21, X0
	288 Move X0, [X19+16]
	289 Compare X0, 0
	290 JumpIfEqual {309}
	291 Move X23, X31
	292 Move X8, [X0]
	293 Move X9, [X8+552]
	294 Move X1, [X8+560]
	295 NotImplemented "Instruction BLR not yet implemented."
	296 Compare X21, 0
	297 JumpIfEqual {309}
	298 Move W8, [X21+24]
	299 NotImplemented "Instruction CMP not yet implemented."
	300 Add X8, X21, X23
	301 Move [X8+32], W0
	302 NotImplemented "Instruction LDRSW not yet implemented."
	303 Add X23, X23, 1
	304 NotImplemented "Instruction CMP not yet implemented."
	305 Move X0, [X19+16]
	306 Move X21, [X19+48]
	307 Compare X0, 0
	308 JumpIfNotEqual {292}
	309 Call 0x1C17F20
	310 Move X0, [X22]
	311 Move W1, W20
	312 Call 0x1C17D6C
	313 Move W8, [X19+104]
	314 Move [X19+64], X0
	315 NotImplemented "Instruction CMP not yet implemented."
	316 Move X20, X31
	317 Move X0, [X19+16]
	318 Compare X0, 0
	319 JumpIfEqual {309}
	320 Move X8, [X0]
	321 Move X9, [X8+552]
	322 Move X1, [X8+560]
	323 NotImplemented "Instruction BLR not yet implemented."
	324 Move TEMP, X0
	325 And TEMP, TEMP, -2147483648
	326 Compare TEMP, -2147483648
	327 JumpIfEqual {376}
	328 Move X8, [X19+64]
	329 Compare X8, 0
	330 JumpIfEqual {309}
	331 Move W9, [X8+24]
	332 NotImplemented "Instruction CMP not yet implemented."
	333 Add X8, X8, X20
	334 Move [X8+32], W0
	335 NotImplemented "Instruction LDRSW not yet implemented."
	336 Add X20, X20, 1
	337 NotImplemented "Instruction CMP not yet implemented."
	338 Move X0, [X19+16]
	339 Compare X0, 0
	340 JumpIfEqual {309}
	341 Move X8, [X0]
	342 Move X9, [X8+552]
	343 Move X1, [X8+560]
	344 NotImplemented "Instruction BLR not yet implemented."
	345 Move X8, W0
	346 Move [X19+40], X8
	347 Move TEMP, X0
	348 And TEMP, TEMP, -2147483648
	349 Compare TEMP, -2147483648
	350 JumpIfEqual {376}
	351 Move X0, [X19+16]
	352 Compare X0, 0
	353 JumpIfEqual {309}
	354 Move X8, [X0]
	355 Move X9, [X8+392]
	356 Move X1, [X8+400]
	357 NotImplemented "Instruction BLR not yet implemented."
	358 Compare X0, 0
	359 JumpIfEqual {309}
	360 Move X8, [X0]
	361 Move X9, [X8+504]
	362 Move X1, [X8+512]
	363 NotImplemented "Instruction BLR not yet implemented."
	364 Move X8, [X19+40]
	365 Move [X19+32], X0
	366 NotImplemented "Instruction CMP not yet implemented."
	367 Move X20, [X31+48]
	368 Move X19, [X31+56]
	369 Move X22, [X31+32]
	370 Move X21, [X31+40]
	371 Move X30, [X31+16]
	372 Move X23, [X31+24]
	373 Add X31, X31, 64
	374 Return 
	375 Call 0x1C17F28
	376 Move X0, 0xE5A000
	377 Move X0, [X0+2744]
	378 Call 0x1C17D08
	379 Move X1, X31
	380 Call Environment.GetResourceString, X0
	381 Move X19, X0
	382 Move X0, 0xE5A000
	383 Move X0, [X0+1224]
	384 Call 0x1C17D08
	385 Call 0x1C17F10
	386 Move X1, X19
	387 Move X2, X31
	388 Move X20, X0
	389 Call BadImageFormatException..ctor, X0, X1
	390 Move X0, 0xE5A000
	391 Move X0, [X0+2936]
	392 Call 0x1C17D08
	393 Move X1, X0
	394 Move X0, X20
	395 Call 0x1C17DEC
	396 Move X0, 0xE5A000
	397 Move X0, [X0+2944]
	398 Call 0x1C17D08
	399 Move X1, X31
	400 Call Environment.GetResourceString, X0
	401 Move X0, 0xE28000
	402 Move X0, [X0+2512]
	403 Call 0x1C17D08
	404 Move W1, 2
	405 Move W21, 2
	406 Call 0x1C17D6C
	407 Move [X31+12], W21
	408 Move X21, 0xE28000
	409 Move X21, [X21+1880]
	410 Move X19, X0
	411 Move X0, X21
	412 Call 0x1C17D08
	413 Add X1, X31, 12
	414 Call 0x1C17E04
	415 Move X22, X0
	416 Move X0, X19
	417 Call 0x19913C0
	418 Move X0, X19
	419 Move X1, X22
	420 Call 0x19990B4
	421 Move X0, X19
	422 Move X1, X31
	423 Move X2, X22
	424 Call 0x1994444
	425 Move X0, X21
	426 Move [X31+8], W20
	427 Call 0x1C17D08
	428 Add X1, X31, 8
	429 Call 0x1C17E04
	430 Move X20, X0
	431 Move X0, X19
	432 Call 0x19913C0
	433 Move X0, X19
	434 Move X1, X20
	435 Call 0x19990B4
	436 Move W1, 1
	437 Move X0, X19
	438 Move X2, X20
	439 Call 0x1994444
	440 Move X0, 0xE5A000
	441 Move X0, [X0+2952]
	442 Call 0x1C17D08
	443 Move X1, X19
	444 Move X2, X31
	445 Call Environment.GetResourceString, X0, X1
	446 Move X19, X0
	447 Move X0, 0xE30000
	448 Move X0, [X0+1400]
	449 Call 0x1C17D08
	450 Call 0x1C17F10
	451 Move X1, X19
	452 Move X2, X31
	453 Move X20, X0
	454 Call ArgumentException..ctor, X0, X1
	455 Move X0, 0xE28000
	456 Move X0, [X0+2512]
	457 Call 0x1C17D08
	458 Move W1, 1
	459 Call 0x1C17D6C
	460 Move X19, X0
	461 Call 0x19913C0
	462 Move X0, X19
	463 Move X1, X20
	464 Call 0x19990B4
	465 Move X0, X19
	466 Move X1, X31
	467 Move X2, X20
	468 Call 0x1994444
	469 Move X0, 0xE5A000
	470 Move X0, [X0+2960]
	471 Call 0x1C17D08
	472 Move X1, X19
	473 Move X2, X31
	474 Call Environment.GetResourceString, X0, X1
	475 Move X19, X0
	476 Move X0, 0xE28000
	477 Move X0, [X0+2880]
	478 Call 0x1C17D08
	479 Call 0x1C17F10
	480 Move X1, X19
	481 Move X2, X31
	482 Move X20, X0
	483 Call NotSupportedException..ctor, X0, X1

Method: System.RuntimeType FindType(System.Int32 typeIndex)

Disassembly:
	0x032CAC14 LDR X9, [X8]
	0x032CAC18 MOV X21, X0
	0x032CAC1C MOV X0, X8
	0x032CAC20 LDP X10, X1, [X9 + 0x1F8]
	0x032CAC24 BLR X10
	0x032CAC28 SUB X8, X21, X0
	0x032CAC2C CMP X8, W20, UXTW
	0x032CAC30 B.LT 0x32CB0B8
	0x032CAC34 ADRP X8, 0xE29000
	0x032CAC38 LDR X8, [X8 + 0x618]
	0x032CAC3C MOV W1, W20
	0x032CAC40 LDR X0, [X8]
	0x032CAC44 BL 0x1C16D6C
	0x032CAC48 LDR X8, [X19 + 0x70]
	0x032CAC4C CBZ X8, 0x32CB064
	0x032CAC50 LDR X9, [X8]
	0x032CAC54 MOV X21, X0
	0x032CAC58 MOV X0, X8
	0x032CAC5C MOV X1, X21
	0x032CAC60 LDR X10, [X9 + 0x358]
	0x032CAC64 LDR X4, [X9 + 0x360]
	0x032CAC68 MOV W2, W31
	0x032CAC6C MOV W3, W20
	0x032CAC70 BLR X10
	0x032CAC74 B 0x32CAED8
	0x032CAC78 LDR X0, [X23]
	0x032CAC7C CBZ X0, 0x32CB064
	0x032CAC80 LDR X8, [X0]
	0x032CAC84 LDR X9, [X8 + 0x268]
	0x032CAC88 LDR X1, [X8 + 0x270]
	0x032CAC8C BLR X9
	0x032CAC90 ADRP X8, 0xE29000
	0x032CAC94 LDR X8, [X8 + 0xA90]
	0x032CAC98 STR S0, [X31 + 0x8]
	0x032CAC9C B 0x32CADC8
	0x032CACA0 LDR X0, [X23]
	0x032CACA4 CBZ X0, 0x32CB064
	0x032CACA8 LDR X8, [X0]
	0x032CACAC LDR X9, [X8 + 0x208]
	0x032CACB0 LDR X1, [X8 + 0x210]
	0x032CACB4 BLR X9
	0x032CACB8 ADRP X8, 0xE2D000
	0x032CACBC LDR X8, [X8 + 0x628]
	0x032CACC0 B 0x32CAD54
	0x032CACC4 LDR X0, [X23]
	0x032CACC8 CBZ X0, 0x32CB064
	0x032CACCC LDR X8, [X0]
	0x032CACD0 LDR X9, [X8 + 0x218]
	0x032CACD4 LDR X1, [X8 + 0x220]
	0x032CACD8 BLR X9
	0x032CACDC ADRP X8, 0xE2E000
	0x032CACE0 LDR X8, [X8 + 0x658]
	0x032CACE4 B 0x32CAD54
	0x032CACE8 LDR X0, [X23]
	0x032CACEC CBZ X0, 0x32CB064
	0x032CACF0 LDR X8, [X0]
	0x032CACF4 LDR X9, [X8 + 0x238]
	0x032CACF8 LDR X1, [X8 + 0x240]
	0x032CACFC BLR X9
	0x032CAD00 ADRP X8, 0xE31000
	0x032CAD04 LDR X8, [X8 + 0x720]
	0x032CAD08 B 0x32CAE1C
	0x032CAD0C LDR X0, [X23]
	0x032CAD10 CBZ X0, 0x32CB064
	0x032CAD14 LDR X8, [X0]
	0x032CAD18 LDP X9, X1, [X8 + 0x1C8]
	0x032CAD1C BLR X9
	0x032CAD20 ADRP X8, 0xE29000
	0x032CAD24 LDR X8, [X8 + 0xB58]
	0x032CAD28 AND W9, W0, 0x1
	0x032CAD2C STRB W9, [X31 + 0x8]
	0x032CAD30 B 0x32CAE74
	0x032CAD34 LDR X0, [X23]
	0x032CAD38 CBZ X0, 0x32CB064
	0x032CAD3C LDR X8, [X0]
	0x032CAD40 LDR X9, [X8 + 0x218]
	0x032CAD44 LDR X1, [X8 + 0x220]
	0x032CAD48 BLR X9
	0x032CAD4C ADRP X8, 0xE2B000
	0x032CAD50 LDR X8, [X8 + 0x170]
	0x032CAD54 LDR X8, [X8]
	0x032CAD58 STRH W0, [X31 + 0x8]
	0x032CAD5C B 0x32CAEC8
	0x032CAD60 LDR X0, [X23]
	0x032CAD64 CBZ X0, 0x32CB064
	0x032CAD68 LDR X8, [X0]
	0x032CAD6C LDP X9, X1, [X8 + 0x1E8]
	0x032CAD70 BLR X9
	0x032CAD74 ADRP X8, 0xE52000
	0x032CAD78 LDR X8, [X8 + 0x6B0]
	0x032CAD7C B 0x32CADF0
	0x032CAD80 LDR X0, [X23]
	0x032CAD84 CBZ X0, 0x32CB064
	0x032CAD88 LDR X8, [X0]
	0x032CAD8C LDR X9, [X8 + 0x258]
	0x032CAD90 LDR X1, [X8 + 0x260]
	0x032CAD94 BLR X9
	0x032CAD98 ADRP X8, 0xE2A000
	0x032CAD9C LDR X8, [X8 + 0x758]
	0x032CADA0 B 0x32CAE48
	0x032CADA4 LDR X0, [X23]
	0x032CADA8 CBZ X0, 0x32CB064
	0x032CADAC LDR X8, [X0]
	0x032CADB0 LDR X9, [X8 + 0x278]
	0x032CADB4 LDR X1, [X8 + 0x280]
	0x032CADB8 BLR X9
	0x032CADBC ADRP X8, 0xE2C000
	0x032CADC0 LDR X8, [X8 + 0x978]
	0x032CADC4 STR D0, [X31 + 0x8]
	0x032CADC8 LDR X0, [X8]
	0x032CADCC ADD X1, X31, 0x8
	0x032CADD0 B 0x32CAED0
	0x032CADD4 LDR X0, [X23]
	0x032CADD8 CBZ X0, 0x32CB064
	0x032CADDC LDR X8, [X0]
	0x032CADE0 LDP X9, X1, [X8 + 0x1D8]
	0x032CADE4 BLR X9
	0x032CADE8 ADRP X8, 0xE2A000
	0x032CADEC LDR X8, [X8 + 0x9D8]
	0x032CADF0 LDR X8, [X8]
	0x032CADF4 STRB W0, [X31 + 0x8]
	0x032CADF8 B 0x32CAEC8
	0x032CADFC LDR X0, [X23]
	0x032CAE00 CBZ X0, 0x32CB064
	0x032CAE04 LDR X8, [X0]
	0x032CAE08 LDR X9, [X8 + 0x228]
	0x032CAE0C LDR X1, [X8 + 0x230]
	0x032CAE10 BLR X9
	0x032CAE14 ADRP X8, 0xE29000
	0x032CAE18 LDR X8, [X8 + 0x758]
	0x032CAE1C LDR X8, [X8]
	0x032CAE20 STR W0, [X31 + 0x8]
	0x032CAE24 B 0x32CAEC8
	0x032CAE28 LDR X0, [X23]
	0x032CAE2C CBZ X0, 0x32CB064
	0x032CAE30 LDR X8, [X0]
	0x032CAE34 LDR X9, [X8 + 0x248]
	0x032CAE38 LDR X1, [X8 + 0x250]
	0x032CAE3C BLR X9
	0x032CAE40 ADRP X8, 0xE2B000
	0x032CAE44 LDR X8, [X8 + 0xA60]
	0x032CAE48 LDR X8, [X8]
	0x032CAE4C B 0x32CAEC4
	0x032CAE50 LDR X0, [X23]
	0x032CAE54 CBZ X0, 0x32CB064
	0x032CAE58 LDR X8, [X0]
	0x032CAE5C LDR X9, [X8 + 0x288]
	0x032CAE60 LDR X1, [X8 + 0x290]
	0x032CAE64 BLR X9
	0x032CAE68 ADRP X8, 0xE51000
	0x032CAE6C LDR X8, [X8 + 0x5F0]
	0x032CAE70 STP X0, X1, [X31 + 0x8]
	0x032CAE74 LDR X8, [X8]
	0x032CAE78 B 0x32CAEC8
	0x032CAE7C LDR X0, [X23]
	0x032CAE80 CBZ X0, 0x32CB064
	0x032CAE84 LDR X8, [X0]
	0x032CAE88 LDR X9, [X8 + 0x248]
	0x032CAE8C LDR X1, [X8 + 0x250]
	0x032CAE90 BLR X9
	0x032CAE94 ADRP X20, 0xE2A000
	0x032CAE98 LDR X20, [X20 + 0x9F0]
	0x032CAE9C MOV X19, X0
	0x032CAEA0 LDR X8, [X20]
	0x032CAEA4 LDR W9, [X8 + 0xE0]
	0x032CAEA8 CBNZ W9, 0x32CAEB4
	0x032CAEAC MOV X0, X8
	0x032CAEB0 BL 0x1C16DFC
	0x032CAEB4 MOV X0, X19
	0x032CAEB8 MOV X1, X31
	0x032CAEBC BL 0x3360A8C
	0x032CAEC0 LDR X8, [X20]
	0x032CAEC4 STR X0, [X31 + 0x8]
	0x032CAEC8 ADD X1, X31, 0x8
	0x032CAECC MOV X0, X8
	0x032CAED0 BL 0x1C16E04
	0x032CAED4 MOV X21, X0
	0x032CAED8 LDR X8, [X22 + 0x28]
	0x032CAEDC LDR X9, [X31 + 0x18]
	0x032CAEE0 CMP X8, X9
	0x032CAEE4 B.NE 0x32CB018
	0x032CAEE8 MOV X0, X21
	0x032CAEEC LDP X20, X19, [X31 + 0x40]
	0x032CAEF0 LDP X22, X21, [X31 + 0x30]
	0x032CAEF4 LDP X30, X23, [X31 + 0x20]
	0x032CAEF8 ADD X31, X31, 0x50
	0x032CAEFC RET
	0x032CAF00 LDR X0, [X23]
	0x032CAF04 CBZ X0, 0x32CB064
	0x032CAF08 LDR X8, [X0]
	0x032CAF0C LDR X9, [X8 + 0x228]
	0x032CAF10 LDR X1, [X8 + 0x230]
	0x032CAF14 BLR X9
	0x032CAF18 MOV W20, W0
	0x032CAF1C TBNZ X0, 0x1F, 0x32CB0B8
	0x032CAF20 LDR X0, [X19 + 0x70]
	0x032CAF24 CBZ X0, 0x32CB01C
	0x032CAF28 LDR X8, [X0]
	0x032CAF2C LDP X9, X1, [X8 + 0x1E8]
	0x032CAF30 BLR X9
	0x032CAF34 LDR X8, [X19 + 0x70]
	0x032CAF38 CBZ X8, 0x32CB064
	0x032CAF3C LDR X9, [X8]
	0x032CAF40 MOV X21, X0
	0x032CAF44 MOV X0, X8
	0x032CAF48 LDP X10, X1, [X9 + 0x1F8]
	0x032CAF4C BLR X10
	0x032CAF50 SUB X8, X21, X0
	0x032CAF54 CMP X8, W20, UXTW
	0x032CAF58 B.LT 0x32CB0B8
	0x032CAF5C LDR X0, [X19 + 0x70]
	0x032CAF60 CBZ X0, 0x32CB064
	0x032CAF64 MOV X1, X31
	0x032CAF68 MOV W19, W20
	0x032CAF6C BL 0x32EAA34
	0x032CAF70 ADRP X8, 0xE36000
	0x032CAF74 LDR X8, [X8 + 0xE08]
	0x032CAF78 MOV X20, X0
	0x032CAF7C LDR X8, [X8]
	0x032CAF80 MOV X0, X8
	0x032CAF84 BL 0x1C16F10
	0x032CAF88 MOVZ W4, 0x1
	0x032CAF8C MOV X1, X20
	0x032CAF90 MOV X2, X19
	0x032CAF94 MOV X3, X19
	0x032CAF98 MOV X5, X31
	0x032CAF9C MOV X21, X0
	0x032CAFA0 BL 0x32EA60C
	0x032CAFA4 B 0x32CAED8
	0x032CAFA8 CMP W0, 0x3F
	0x032CAFAC B.LE 0x32CB068
	0x032CAFB0 SUB W1, W0, 0x40
	0x032CAFB4 MOV X0, X19
	0x032CAFB8 BL 0x32CA840
	0x032CAFBC B 0x32CB008
	0x032CAFC0 LDR X0, [X23]
	0x032CAFC4 CBZ X0, 0x32CB064
	0x032CAFC8 LDR X8, [X0]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x1113000
	011 Move W8, [X21+2263]
	012 Move W20, W1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0xE5C000
	019 Move X0, [X0+2880]
	020 Call 0x1C17CF4
	021 Move X0, 0xE53000
	022 Move X0, [X0+1256]
	023 Call 0x1C17CF4
	024 Move X0, 0xE32000
	025 Move X0, [X0+1480]
	026 Call 0x1C17CF4
	027 Move X0, 0xE2A000
	028 Move X0, [X0+1728]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+2263], W8
	032 Move TEMP, X20
	033 And TEMP, TEMP, -2147483648
	034 Compare TEMP, -2147483648
	035 JumpIfEqual {192}
	036 Move X8, [X19+80]
	037 Compare X8, 0
	038 JumpIfEqual {191}
	039 Move W9, [X8+24]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X25, 0xE53000
	042 Move X25, [X25+1256]
	043 Move W24, W20
	044 Add X8, X8, X24
	045 Move X21, [X8+32]
	046 Move X0, [X25]
	047 Move W9, [X0+224]
	048 Compare W9, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X0, X21
	052 Move X1, X31
	053 Move X2, X31
	054 Call RuntimeType.op_Equality, X0, X1
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {173}
	059 Move X0, [X19+16]
	060 Compare X0, 0
	061 JumpIfEqual {191}
	062 Move X8, [X0]
	063 Move X9, [X8+392]
	064 Move X1, [X8+400]
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Compare X0, 0
	067 JumpIfEqual {191}
	068 Move X8, [X0]
	069 Move X9, [X8+504]
	070 Move X1, [X8+512]
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move X8, [X19+16]
	073 Move X21, X0
	074 Compare X8, 0
	075 JumpIfEqual {217}
	076 Move X9, [X8]
	077 Move X10, [X9+392]
	078 Move X1, [X9+400]
	079 Move X0, X8
	080 NotImplemented "Instruction BLR not yet implemented."
	081 Move X8, [X19+88]
	082 Compare X8, 0
	083 JumpIfEqual {218}
	084 Move W9, [X8+24]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Compare X0, 0
	087 JumpIfEqual {222}
	088 Move X9, [X0]
	089 Add X8, X8, X24
	090 NotImplemented "Instruction LDRSW not yet implemented."
	091 Move X8, [X9+520]
	092 Move X2, [X9+528]
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Move X0, [X19+16]
	095 Compare X0, 0
	096 JumpIfEqual {223}
	097 Move X8, [X0]
	098 Move X1, [X8+672]
	099 Move X9, [X8+664]
	100 NotImplemented "Instruction BLR not yet implemented."
	101 Move X8, 0xE2A000
	102 Move X8, [X8+1728]
	103 Move X22, X0
	104 Move X26, [X19+80]
	105 Move X0, [X8]
	106 Move W8, [X0+224]
	107 Compare W8, 0
	108 JumpIfNotEqual {110}
	109 Call 0x1C17DFC
	110 Move X8, 0xE32000
	111 Move X9, 0xE5C000
	112 Move X8, [X8+1480]
	113 Move X9, [X9+2880]
	114 Move X2, [X8]
	115 Move X3, [X9]
	116 Move W1, 1
	117 Move X0, X22
	118 Call 0x1C180BC
	119 Compare X26, 0
	120 JumpIfEqual {224}
	121 Move X23, X0
	122 Compare X0, 0
	123 JumpIfEqual {148}
	124 Move X8, [X23]
	125 Move X1, [X25]
	126 Move W10, [X8+304]
	127 Move W9, [X1+304]
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move X8, [X8+200]
	130 Add X8, X8, X9
	131 NotImplemented "Instruction LDUR not yet implemented."
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move X8, [X26]
	134 Move X1, [X8+64]
	135 Move X0, X23
	136 Call 0x1C17E00
	137 Compare X0, 0
	138 JumpIfEqual {226}
	139 Move X8, [X23]
	140 Move X1, [X25]
	141 Move W10, [X8+304]
	142 Move W9, [X1+304]
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move X8, [X8+200]
	145 Add X8, X8, X9
	146 NotImplemented "Instruction LDUR not yet implemented."
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move W8, [X26+24]
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Add X8, X26, X24
	151 Move X22, X31
	152 Move [X8+32], X23
	153 Move W23, 6
	154 Move X0, [X19+16]
	155 Compare X0, 0
	156 JumpIfEqual {191}
	157 Move X8, [X0]
	158 Move X9, [X8+392]
	159 Move X1, [X8+400]
	160 NotImplemented "Instruction BLR not yet implemented."
	161 Compare X0, 0
	162 JumpIfEqual {191}
	163 Move X8, [X0]
	164 Move X1, X21
	165 Move X9, [X8+520]
	166 Move X2, [X8+528]
	167 NotImplemented "Instruction BLR not yet implemented."
	168 Compare X22, 0
	169 JumpIfNotEqual {219}
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Compare W23, 0
	172 JumpIfNotEqual {180}
	173 Move X8, [X19+80]
	174 Compare X8, 0
	175 JumpIfEqual {191}
	176 Move W9, [X8+24]
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Add X8, X8, X24
	179 Move X8, [X8+32]
	180 Move X20, [X31+64]
	181 Move X19, [X31+72]
	182 Move X22, [X31+48]
	183 Move X21, [X31+56]
	184 Move X24, [X31+32]
	185 Move X23, [X31+40]
	186 Move X26, [X31+16]
	187 Move X25, [X31+24]
	188 Move X0, X8
	189 Move X30, [X31+80]
	190 Return X0
	191 Call 0x1C17F20
	192 Move X0, 0xE5C000
	193 Move X0, [X0+2888]
	194 Call 0x1C17D08
	195 Move X1, X31
	196 Call Environment.GetResourceString, X0
	197 Move X19, X0
	198 Move X0, 0xE5C000
	199 Move X0, [X0+1224]
	200 Call 0x1C17D08
	201 Call 0x1C17F10
	202 Move X1, X19
	203 Move X2, X31
	204 Move X20, X0
	205 Call BadImageFormatException..ctor, X0, X1
	206 Move X0, 0xE5C000
	207 Move X0, [X0+2880]
	208 Call 0x1C17D08
	209 Move X1, X0
	210 Move X0, X20
	211 Call 0x1C17DEC
	212 Call 0x1C17F28
	213 Move X0, X23
	214 Call 0x1C181E0
	215 Move X0, X23
	216 Call 0x1C181E0
	217 Call 0x1C17F20
	218 Call 0x1C17F20
	219 Move X0, X22
	220 Call 0x1C17F18
	221 Call 0x1C17F28
	222 Call 0x1C17F20
	223 Call 0x1C17F20
	224 Call 0x1C17F20
	225 Call 0x1C17F28
	226 Call 0x1C17F44
	227 Move X1, X31
	228 Call 0x1C17DEC
	229 Move X23, X0
	230 NotImplemented "Instruction CMP not yet implemented."
	231 Move X0, X23
	232 Call 0x3EB2AD0
	233 Move X22, [X0]
	234 Call 0x3EB2AE0
	235 Move W23, W31
	236 Move X22, X31
	237 Move X23, X0
	238 Move X0, [X19+16]
	239 Compare X0, 0
	240 JumpIfNotEqual {242}
	241 Call 0x1C17F20
	242 Move X8, [X0]
	243 Move X9, [X8+392]
	244 Move X1, [X8+400]
	245 NotImplemented "Instruction BLR not yet implemented."
	246 Compare X0, 0
	247 JumpIfNotEqual {249}
	248 Call 0x1C17F20
	249 Move X8, [X0]
	250 Move X9, [X8+520]
	251 Move X2, [X8+528]
	252 Move X1, X21
	253 NotImplemented "Instruction BLR not yet implemented."
	254 Compare X22, 0
	255 JumpIfNotEqual {258}
	256 Move X0, X23
	257 Call 0x1D2D690
	258 Move X0, X22
	259 Call 0x1C17F18
	260 Call 0x1991590

