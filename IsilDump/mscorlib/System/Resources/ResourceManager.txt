Type: System.Resources.ResourceManager

Method: System.Void Init()

Disassembly:
	0x032C9044 CBZ X0, 0x32C933C
	0x032C9048 LDR X8, [X0]
	0x032C904C LDR X9, [X19 + 0x20]
	0x032C9050 LDR X10, [X8 + 0x338]
	0x032C9054 LDR X3, [X8 + 0x340]
	0x032C9058 SXTW X8, W20
	0x032C905C ADD X1, X9, X8
	0x032C9060 MOV W2, W31
	0x032C9064 BLR X10
	0x032C9068 LDR X0, [X19 + 0x10]
	0x032C906C CBZ X0, 0x32C9340
	0x032C9070 MOV X1, X31
	0x032C9074 BL 0x32F5EE4
	0x032C9078 MOV W20, W0
	0x032C907C TBNZ X0, 0x1F, 0x32C9344
	0x032C9080 LDR X0, [X19 + 0x70]
	0x032C9084 CBZ X0, 0x32C9180
	0x032C9088 LDR X8, [X0]
	0x032C908C LDP X9, X1, [X8 + 0x1F8]
	0x032C9090 BLR X9
	0x032C9094 MOV X21, X0
	0x032C9098 LDR X0, [X19 + 0x70]
	0x032C909C CBZ X0, 0x32C93D4
	0x032C90A0 LDR X8, [X0]
	0x032C90A4 LDP X9, X1, [X8 + 0x1E8]
	0x032C90A8 BLR X9
	0x032C90AC SUB X8, X0, W20, UXTW
	0x032C90B0 CMP X21, X8
	0x032C90B4 B.GT 0x32C93D8
	0x032C90B8 LDR X0, [X19 + 0x70]
	0x032C90BC CBZ X0, 0x32C9410
	0x032C90C0 MOV X1, X31
	0x032C90C4 BL 0x32EAA34
	0x032C90C8 MOV X1, X0
	0x032C90CC UBFM W3, W20, 0x1, 0x1F
	0x032C90D0 MOV X0, X31
	0x032C90D4 MOV W2, W31
	0x032C90D8 MOV X4, X31
	0x032C90DC BL 0x322EAD4
	0x032C90E0 LDR X21, [X19 + 0x70]
	0x032C90E4 CBZ X21, 0x32C9414
	0x032C90E8 LDR X8, [X21]
	0x032C90EC MOV X23, X0
	0x032C90F0 LDP X9, X1, [X8 + 0x1F8]
	0x032C90F4 MOV X0, X21
	0x032C90F8 BLR X9
	0x032C90FC LDR X8, [X21]
	0x032C9100 LDR X9, [X8 + 0x208]
	0x032C9104 LDR X2, [X8 + 0x210]
	0x032C9108 MOV W8, W20
	0x032C910C ADD X1, X0, X8
	0x032C9110 MOV X0, X21
	0x032C9114 BLR X9
	0x032C9118 LDR X0, [X19 + 0x10]
	0x032C911C CBZ X0, 0x32C9418
	0x032C9120 LDR X8, [X0]
	0x032C9124 LDR X1, [X8 + 0x230]
	0x032C9128 LDR X9, [X8 + 0x228]
	0x032C912C BLR X9
	0x032C9130 MOV W21, W0
	0x032C9134 STR W0, [X22]
	0x032C9138 TBNZ X0, 0x1F, 0x32C92F4
	0x032C913C LDR X0, [X19 + 0x10]
	0x032C9140 CBZ X0, 0x32C941C
	0x032C9144 LDR X8, [X0]
	0x032C9148 LDP X9, X1, [X8 + 0x188]
	0x032C914C BLR X9
	0x032C9150 CBZ X0, 0x32C9420
	0x032C9154 LDR X8, [X0]
	0x032C9158 LDP X9, X1, [X8 + 0x1E8]
	0x032C915C BLR X9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1114000
	005 Move W8, [X20+2243]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE59000
	012 Move X0, [X0+2768]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2243], W8
	016 Move X0, X31
	017 Call Assembly.GetCallingAssembly
	018 Compare X0, 0
	019 JumpIfEqual {39}
	020 Move X8, 0xE59000
	021 Move X8, [X8+2768]
	022 Move X9, [X0]
	023 Move X1, [X8]
	024 Move W10, [X9+304]
	025 Move W8, [X1+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X10, [X9+200]
	028 Subtract X9, X8, 1
	029 Move X10, [X10]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move [X19+72], X0
	032 Move X10, [X0]
	033 Move W11, [X10+304]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X8, [X10+200]
	036 Move X8, [X8]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Call 0x1C181E0
	039 Move [X19+72], X0
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Return 
	044 Call 0x1C181E0
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X19, X0
	047 Move X0, X19
	048 Call 0x3EB2AD0
	049 Move X19, X0
	050 Move X0, 0xE31000
	051 Move X0, [X0+3264]
	052 Call 0x1C17D08
	053 Move X8, [X19]
	054 Move X1, [X8]
	055 Call 0x1C18270
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {65}
	060 Move X20, [X31+16]
	061 Move X19, [X31+24]
	062 Move X30, [X31+32]
	063 Call 0x3EB2AE0
	064 Return 
	065 Move W0, 8
	066 Call 0x3EB2AF0
	067 Move X8, [X19]
	068 Move [X0], X8
	069 Move X1, 0xBEC000
	070 Add X1, X1, 3672
	071 Move X2, X31
	072 Call 0x3EB2B00
	073 Move X19, X0
	074 Call 0x3EB2AE0
	075 Move X0, X19
	076 Call 0x1D2D690
	077 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x032C9160 LDR X8, [X19 + 0x28]
	0x032C9164 SUB X8, X0, X8
	0x032C9168 CMP X8, W21, UXTW
	0x032C916C B.LE 0x32C92F4
	0x032C9170 MOV X22, X31
	0x032C9174 MOV X21, X31
	0x032C9178 MOVZ W24, 0x14
	0x032C917C B 0x32C9250
	0x032C9180 ADRP X8, 0xE2A000
	0x032C9184 LDR X8, [X8 + 0x618]
	0x032C9188 LDR X0, [X8]
	0x032C918C MOV W1, W20
	0x032C9190 BL 0x1C16D6C
	0x032C9194 MOV X21, X0
	0x032C9198 LDR X0, [X19 + 0x10]
	0x032C919C CMP X0, 0x0
	0x032C91A0 CSET W8, EQ
	0x032C91A4 CMP W20, 0x1
	0x032C91A8 B.LT 0x32C91F0
	0x032C91AC MOV W24, W20
	0x032C91B0 TBNZ X8, 0x0, 0x32C92B8
	0x032C91B4 LDR X8, [X0]
	0x032C91B8 SUB W2, W20, W24
	0x032C91BC LDR X9, [X8 + 0x2B8]
	0x032C91C0 LDR X4, [X8 + 0x2C0]
	0x032C91C4 MOV X1, X21
	0x032C91C8 MOV W3, W24
	0x032C91CC BLR X9
	0x032C91D0 MOV W8, W0
	0x032C91D4 CBZ W0, 0x32C92BC
	0x032C91D8 LDR X0, [X19 + 0x10]
	0x032C91DC SUB W24, W24, W8
	0x032C91E0 CMP X0, 0x0
	0x032C91E4 CSET W8, EQ
	0x032C91E8 CMP W24, 0x0
	0x032C91EC B.GT 0x32C91B0
	0x032C91F0 CBNZ W8, 0x32C9424
	0x032C91F4 LDR X8, [X0]
	0x032C91F8 LDR X1, [X8 + 0x230]
	0x032C91FC LDR X9, [X8 + 0x228]
	0x032C9200 BLR X9
	0x032C9204 MOV W23, W0
	0x032C9208 STR W0, [X22]
	0x032C920C TBNZ X0, 0x1F, 0x32C9394
	0x032C9210 LDR X0, [X19 + 0x10]
	0x032C9214 CBZ X0, 0x32C9428
	0x032C9218 LDR X8, [X0]
	0x032C921C LDP X9, X1, [X8 + 0x188]
	0x032C9220 BLR X9
	0x032C9224 CBZ X0, 0x32C942C
	0x032C9228 LDR X8, [X0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x1114000
	008 Move X20, 0xE5D000
	009 Move X22, 0xE5D000
	010 Move X21, 0xE5D000
	011 Move W8, [X23+2244]
	012 Move X20, [X20+2656]
	013 Move X22, [X22+2664]
	014 Move X21, [X21+2672]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0xE5D000
	021 Move X0, [X0+2656]
	022 Call 0x1C17CF4
	023 Move X0, 0xE5D000
	024 Move X0, [X0+2672]
	025 Call 0x1C17CF4
	026 Move X0, 0xE5D000
	027 Move X0, [X0+2664]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X23+2244], W8
	031 Move X0, X19
	032 Move X1, X31
	033 Call Object..ctor, X0
	034 Move X0, X19
	035 Call ResourceManager.Init, X0
	036 Move X0, [X20]
	037 Call 0x1C17F10
	038 Move X1, X31
	039 Move X20, X0
	040 Call Object..ctor, X0
	041 Move [X19+48], X20
	042 Move X0, [X22]
	043 Call 0x1C17F10
	044 Move X1, X19
	045 Move X20, X0
	046 Call ResourceManagerMediator..ctor, X0, X1
	047 Move X0, [X21]
	048 Call 0x1C17F10
	049 Move X1, X31
	050 Move X21, X0
	051 Call Object..ctor, X0
	052 Move [X21+16], X20
	053 Move [X19+80], X21
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X30, [X31+48]
	059 Move X23, [X31+56]
	060 Return 

Method: System.Void OnDeserializing(System.Runtime.Serialization.StreamingContext ctx)

Disassembly:
	0x032C92A8 LDP X22, X21, [X31 + 0x20]
	0x032C92AC LDP X24, X23, [X31 + 0x10]
	0x032C92B0 LDR X30, [X31], #0x40
	0x032C92B4 RET

ISIL:
	001 Move [X0+24], X31
	002 Move [X0+80], X31
	003 Move [X0+48], X31
	004 Return 

Method: System.Void OnDeserialized(System.Runtime.Serialization.StreamingContext ctx)

Disassembly:
	0x032C92B8 BL 0x1C16F20
	0x032C92BC ADRP X0, 0xE2A000
	0x032C92C0 LDR X0, [X0 + 0x9D0]
	0x032C92C4 BL 0x1C16D08
	0x032C92C8 MOVZ W1, 0x1
	0x032C92CC BL 0x1C16D6C
	0x032C92D0 MOV X22, X0
	0x032C92D4 STR W23, [X31 + 0x8]
	0x032C92D8 ADRP X0, 0xE2A000
	0x032C92DC LDR X0, [X0 + 0x758]
	0x032C92E0 BL 0x1C16D08
	0x032C92E4 ADD X1, X31, 0x8
	0x032C92E8 BL 0x1C16E04
	0x032C92EC CBNZ X22, 0x32C9430
	0x032C92F0 BL 0x1C16F20
	0x032C92F4 ADRP X0, 0xE2A000
	0x032C92F8 LDR X0, [X0 + 0x9D0]
	0x032C92FC BL 0x1C16D08
	0x032C9300 MOVZ W1, 0x1
	0x032C9304 BL 0x1C16D6C
	0x032C9308 LDR W8, [X22]
	0x032C930C MOV X21, X0
	0x032C9310 STR W8, [X31 + 0x8]
	0x032C9314 ADRP X0, 0xE2A000
	0x032C9318 LDR X0, [X0 + 0x758]
	0x032C931C BL 0x1C16D08
	0x032C9320 ADD X1, X31, 0x8
	0x032C9324 BL 0x1C16E04
	0x032C9328 CBNZ X21, 0x32C94BC
	0x032C932C BL 0x1C16F20
	0x032C9330 MOV X0, X22
	0x032C9334 BL 0x1C16F18
	0x032C9338 BL 0x1C16F20
	0x032C933C BL 0x1C16F20
	0x032C9340 BL 0x1C16F20
	0x032C9344 ADRP X0, 0xE5C000
	0x032C9348 LDR X0, [X0 + 0xAC8]
	0x032C934C BL 0x1C16D08
	0x032C9350 MOV X1, X31
	0x032C9354 BL 0x33BDD84
	0x032C9358 MOV X21, X0
	0x032C935C ADRP X0, 0xE5C000
	0x032C9360 LDR X0, [X0 + 0x4C8]
	0x032C9364 BL 0x1C16D08
	0x032C9368 BL 0x1C16F10
	0x032C936C MOV X22, X0
	0x032C9370 MOV X1, X21
	0x032C9374 MOV X2, X31
	0x032C9378 BL 0x33167DC
	0x032C937C ADRP X0, 0xE5C000
	0x032C9380 LDR X0, [X0 + 0xB08]
	0x032C9384 BL 0x1C16D08
	0x032C9388 MOV X1, X0
	0x032C938C MOV X0, X22
	0x032C9390 BL 0x1C16DEC
	0x032C9394 ADRP X0, 0xE2A000
	0x032C9398 LDR X0, [X0 + 0x9D0]
	0x032C939C BL 0x1C16D08
	0x032C93A0 MOVZ W1, 0x1
	0x032C93A4 BL 0x1C16D6C
	0x032C93A8 LDR W8, [X22]
	0x032C93AC MOV X23, X0
	0x032C93B0 STR W8, [X31 + 0x8]
	0x032C93B4 ADRP X0, 0xE2A000
	0x032C93B8 LDR X0, [X0 + 0x758]
	0x032C93BC BL 0x1C16D08
	0x032C93C0 ADD X1, X31, 0x8
	0x032C93C4 BL 0x1C16E04
	0x032C93C8 CBNZ X23, 0x32C94D0
	0x032C93CC BL 0x1C16F20
	0x032C93D0 BL 0x1C16F20
	0x032C93D4 BL 0x1C16F20
	0x032C93D8 ADRP X0, 0xE2A000
	0x032C93DC LDR X0, [X0 + 0x9D0]
	0x032C93E0 BL 0x1C16D08
	0x032C93E4 MOVZ W1, 0x1
	0x032C93E8 BL 0x1C16D6C
	0x032C93EC MOV X21, X0
	0x032C93F0 STR W23, [X31 + 0x8]
	0x032C93F4 ADRP X0, 0xE2A000
	0x032C93F8 LDR X0, [X0 + 0x758]
	0x032C93FC BL 0x1C16D08
	0x032C9400 ADD X1, X31, 0x8
	0x032C9404 BL 0x1C16E04
	0x032C9408 CBNZ X21, 0x32C94E4
	0x032C940C BL 0x1C16F20
	0x032C9410 BL 0x1C16F20
	0x032C9414 BL 0x1C16F20
	0x032C9418 BL 0x1C16F20
	0x032C941C BL 0x1C16F20
	0x032C9420 BL 0x1C16F20
	0x032C9424 BL 0x1C16F20
	0x032C9428 BL 0x1C16F20
	0x032C942C BL 0x1C16F20
	0x032C9430 MOV X23, X0
	0x032C9434 CBNZ X0, 0x32C9444
	0x032C9438 LDR W8, [X22 + 0x18]
	0x032C943C CBNZ W8, 0x32C9464
	0x032C9440 BL 0x1C16F28
	0x032C9444 LDR X8, [X22]
	0x032C9448 LDR X1, [X8 + 0x40]
	0x032C944C MOV X0, X23
	0x032C9450 BL 0x1C16E00
	0x032C9454 CBNZ X0, 0x32C9438
	0x032C9458 BL 0x1C16F44
	0x032C945C MOV X1, X31
	0x032C9460 BL 0x1C16DEC
	0x032C9464 STR X23, [X22 + 0x20]
	0x032C9468 ADRP X0, 0xE5C000
	0x032C946C LDR X0, [X0 + 0xB10]
	0x032C9470 BL 0x1C16D08
	0x032C9474 MOV X1, X22
	0x032C9478 MOV X2, X31
	0x032C947C BL 0x33BFB40
	0x032C9480 MOV X22, X0
	0x032C9484 ADRP X0, 0xE5C000

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x1114000
	011 Move X26, 0xE5D000
	012 Move X20, 0xE5D000
	013 Move X24, 0xE5D000
	014 Move X23, 0xE5D000
	015 Move X21, 0xE5D000
	016 Move X22, 0xE5D000
	017 Move X26, [X26+2688]
	018 Move W8, [X25+2245]
	019 Move X20, [X20+2696]
	020 Move X24, [X24+2656]
	021 Move X23, [X23+2664]
	022 Move X21, [X21+2672]
	023 Move X22, [X22+2704]
	024 Move X19, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {52}
	029 Move X0, 0xE5D000
	030 Move X0, [X0+2656]
	031 Call 0x1C17CF4
	032 Move X0, 0xE5D000
	033 Move X0, [X0+2696]
	034 Call 0x1C17CF4
	035 Move X0, 0xE5D000
	036 Move X0, [X0+2688]
	037 Call 0x1C17CF4
	038 Move X0, 0xE5D000
	039 Move X0, [X0+2704]
	040 Call 0x1C17CF4
	041 Move X0, 0xE5D000
	042 Move X0, [X0+2672]
	043 Call 0x1C17CF4
	044 Move X0, 0xE5D000
	045 Move X0, [X0+2664]
	046 Call 0x1C17CF4
	047 Move X0, 0xE59000
	048 Move X0, [X0+2768]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X25+2245], W8
	052 Move X0, [X26]
	053 Call 0x1C17F10
	054 Move X1, [X20]
	055 Move X20, X0
	056 Call Dictionary`2<Object, Object>..ctor, X0
	057 Move [X19+24], X20
	058 Move X0, [X24]
	059 Call 0x1C17F10
	060 Move X1, X31
	061 Move X20, X0
	062 Call Object..ctor, X0
	063 Move [X19+48], X20
	064 Move X0, [X23]
	065 Call 0x1C17F10
	066 Move X1, X19
	067 Move X20, X0
	068 Call ResourceManagerMediator..ctor, X0, X1
	069 Move W8, [X19+56]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 NotImplemented "Instruction CSEL not yet implemented."
	072 Move X0, [X8]
	073 Call 0x1C17F10
	074 Move X1, X31
	075 Move X21, X0
	076 Call Object..ctor, X0
	077 Move [X21+16], X20
	078 Move X0, [X19+72]
	079 Move X1, X31
	080 Move X2, X31
	081 Move [X19+80], X21
	082 Call Assembly.op_Equality, X0, X1
	083 Move TEMP, X0
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfNotEqual {110}
	087 Move X0, [X19+64]
	088 Compare X0, 0
	089 JumpIfEqual {109}
	090 Move X8, 0xE59000
	091 Move X8, [X8+2768]
	092 Move X9, [X0]
	093 Move X1, [X8]
	094 Move W10, [X9+304]
	095 Move W8, [X1+304]
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move X10, [X9+200]
	098 Subtract X9, X8, 1
	099 Move X10, [X10]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move [X19+72], X0
	102 Move X10, [X0]
	103 Move W11, [X10+304]
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X8, [X10+200]
	106 Move X8, [X8]
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Call 0x1C181E0
	109 Move [X19+72], X31
	110 Move W8, [X19+56]
	111 Compare W8, 0
	112 JumpIfEqual {120}
	113 Move X8, [X19+40]
	114 Compare X8, 0
	115 JumpIfNotEqual {120}
	116 Move X0, [X19+32]
	117 Add X1, X19, 60
	118 Call ManifestBasedResourceGroveler.GetNeutralResourcesLanguage, X0, X1
	119 Move [X19+40], X0
	120 Move X20, [X31+64]
	121 Move X19, [X31+72]
	122 Move X22, [X31+48]
	123 Move X21, [X31+56]
	124 Move X24, [X31+32]
	125 Move X23, [X31+40]
	126 Move X26, [X31+16]
	127 Move X25, [X31+24]
	128 Move X30, [X31+80]
	129 Return 

Method: System.Void OnSerializing(System.Runtime.Serialization.StreamingContext ctx)

Disassembly:
	0x032C9488 LDR X0, [X0 + 0x3D8]
	0x032C948C BL 0x1C16D08
	0x032C9490 BL 0x1C16F10
	0x032C9494 MOV X23, X0
	0x032C9498 MOV X1, X22
	0x032C949C MOV X2, X31
	0x032C94A0 BL 0x32E1770
	0x032C94A4 ADRP X0, 0xE5C000
	0x032C94A8 LDR X0, [X0 + 0xB08]
	0x032C94AC BL 0x1C16D08
	0x032C94B0 MOV X1, X0
	0x032C94B4 MOV X0, X23
	0x032C94B8 BL 0x1C16DEC
	0x032C94BC MOV X22, X0
	0x032C94C0 CBNZ X0, 0x32C94F8
	0x032C94C4 LDR W8, [X21 + 0x18]
	0x032C94C8 CBNZ W8, 0x32C9518
	0x032C94CC BL 0x1C16F28
	0x032C94D0 MOV X22, X0
	0x032C94D4 CBNZ X0, 0x32C9570
	0x032C94D8 LDR W8, [X23 + 0x18]
	0x032C94DC CBNZ W8, 0x32C95B0
	0x032C94E0 BL 0x1C16F28
	0x032C94E4 MOV X22, X0
	0x032C94E8 CBNZ X0, 0x32C9590
	0x032C94EC LDR W8, [X21 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1114000
	006 Move X20, 0xE5B000
	007 Move W8, [X21+2246]
	008 Move X20, [X20+3512]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE5B000
	015 Move X0, [X0+3512]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2246], W8
	019 Move X8, [X19+72]
	020 Move W9, [X19+56]
	021 Move [X19+64], X8
	022 Move [X19+57], W9
	023 Move X0, [X20]
	024 Call 0x1C17F10
	025 Move X1, X31
	026 Move X20, X0
	027 Call Hashtable..ctor, X0
	028 Move [X19+16], X20
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return 

Method: System.Boolean CompareNames(System.String asmTypeName1, System.String typeName2, System.Reflection.AssemblyName asmName2)

Disassembly:
	0x032C94F0 CBNZ W8, 0x32C9608
	0x032C94F4 BL 0x1C16F28
	0x032C94F8 LDR X8, [X21]
	0x032C94FC LDR X1, [X8 + 0x40]
	0x032C9500 MOV X0, X22
	0x032C9504 BL 0x1C16E00
	0x032C9508 CBNZ X0, 0x32C94C4
	0x032C950C BL 0x1C16F44
	0x032C9510 MOV X1, X31
	0x032C9514 BL 0x1C16DEC
	0x032C9518 STR X22, [X21 + 0x20]
	0x032C951C ADRP X0, 0xE5C000
	0x032C9520 LDR X0, [X0 + 0x9F0]
	0x032C9524 BL 0x1C16D08
	0x032C9528 MOV X1, X21
	0x032C952C MOV X2, X31
	0x032C9530 BL 0x33BFB40
	0x032C9534 MOV X21, X0
	0x032C9538 ADRP X0, 0xE57000
	0x032C953C LDR X0, [X0 + 0xC08]
	0x032C9540 BL 0x1C16D08
	0x032C9544 BL 0x1C16F10
	0x032C9548 MOV X22, X0
	0x032C954C MOV X1, X21
	0x032C9550 MOV X2, X31
	0x032C9554 BL 0x33674A0
	0x032C9558 ADRP X0, 0xE5C000
	0x032C955C LDR X0, [X0 + 0xB08]
	0x032C9560 BL 0x1C16D08
	0x032C9564 MOV X1, X0
	0x032C9568 MOV X0, X22
	0x032C956C BL 0x1C16DEC
	0x032C9570 LDR X8, [X23]
	0x032C9574 LDR X1, [X8 + 0x40]
	0x032C9578 MOV X0, X22
	0x032C957C BL 0x1C16E00
	0x032C9580 CBNZ X0, 0x32C94D8
	0x032C9584 BL 0x1C16F44
	0x032C9588 MOV X1, X31
	0x032C958C BL 0x1C16DEC
	0x032C9590 LDR X8, [X21]
	0x032C9594 LDR X1, [X8 + 0x40]
	0x032C9598 MOV X0, X22
	0x032C959C BL 0x1C16E00
	0x032C95A0 CBNZ X0, 0x32C94EC
	0x032C95A4 BL 0x1C16F44
	0x032C95A8 MOV X1, X31
	0x032C95AC BL 0x1C16DEC
	0x032C95B0 STR X22, [X23 + 0x20]
	0x032C95B4 ADRP X0, 0xE5C000
	0x032C95B8 LDR X0, [X0 + 0x9F0]
	0x032C95BC BL 0x1C16D08
	0x032C95C0 MOV X1, X23
	0x032C95C4 MOV X2, X31
	0x032C95C8 BL 0x33BFB40
	0x032C95CC MOV X22, X0
	0x032C95D0 ADRP X0, 0xE57000
	0x032C95D4 LDR X0, [X0 + 0xC08]
	0x032C95D8 BL 0x1C16D08
	0x032C95DC BL 0x1C16F10
	0x032C95E0 MOV X23, X0
	0x032C95E4 MOV X1, X22
	0x032C95E8 MOV X2, X31
	0x032C95EC BL 0x33674A0
	0x032C95F0 ADRP X0, 0xE5C000
	0x032C95F4 LDR X0, [X0 + 0xB08]
	0x032C95F8 BL 0x1C16D08
	0x032C95FC MOV X1, X0
	0x032C9600 MOV X0, X23
	0x032C9604 BL 0x1C16DEC
	0x032C9608 STR X22, [X21 + 0x20]
	0x032C960C ADRP X0, 0xE5C000
	0x032C9610 LDR X0, [X0 + 0xB18]
	0x032C9614 BL 0x1C16D08
	0x032C9618 MOV X1, X21
	0x032C961C MOV X2, X31
	0x032C9620 BL 0x33BFB40
	0x032C9624 MOV X21, X0
	0x032C9628 ADRP X0, 0xE5C000
	0x032C962C LDR X0, [X0 + 0x4C8]
	0x032C9630 BL 0x1C16D08
	0x032C9634 BL 0x1C16F10
	0x032C9638 MOV X22, X0
	0x032C963C MOV X1, X21
	0x032C9640 MOV X2, X31
	0x032C9644 BL 0x33167DC
	0x032C9648 ADRP X0, 0xE5C000
	0x032C964C LDR X0, [X0 + 0xB08]
	0x032C9650 BL 0x1C16D08
	0x032C9654 MOV X1, X0
	0x032C9658 MOV X0, X22
	0x032C965C BL 0x1C16DEC
	0x032C9660 B 0x32C9710
	0x032C9664 B 0x32C9728
	0x032C9668 B 0x32C9710
	0x032C966C B 0x32C9710
	0x032C9670 B 0x32C9728
	0x032C9674 B 0x32C9710
	0x032C9678 B 0x32C9728
	0x032C967C B 0x32C9728
	0x032C9680 B 0x32C9710
	0x032C9684 B 0x32C9728
	0x032C9688 B 0x32C9710
	0x032C968C B 0x32C9710
	0x032C9690 B 0x32C9728
	0x032C9694 B 0x32C9728
	0x032C9698 B 0x32C9728
	0x032C969C B 0x32C9728
	0x032C96A0 B 0x32C9710
	0x032C96A4 B 0x32C9710
	0x032C96A8 B 0x32C9728
	0x032C96AC B 0x32C9710
	0x032C96B0 B 0x32C9710
	0x032C96B4 B 0x32C9710
	0x032C96B8 B 0x32C9710
	0x032C96BC B 0x32C9710
	0x032C96C0 B 0x32C9710
	0x032C96C4 B 0x32C9710
	0x032C96C8 B 0x32C9710
	0x032C96CC B 0x32C9710
	0x032C96D0 B 0x32C9710
	0x032C96D4 B 0x32C9710
	0x032C96D8 B 0x32C9710
	0x032C96DC B 0x32C9710
	0x032C96E0 B 0x32C9728
	0x032C96E4 B 0x32C9710
	0x032C96E8 B 0x32C9710
	0x032C96EC B 0x32C9704
	0x032C96F0 B 0x32C9704
	0x032C96F4 B 0x32C9704
	0x032C96F8 B 0x32C9704
	0x032C96FC B 0x32C9704
	0x032C9700 B 0x32C9704
	0x032C9704 MOV X23, X0
	0x032C9708 MOV W20, W31
	0x032C970C B 0x32C9714
	0x032C9710 MOV X23, X0
	0x032C9714 MOV X21, X31
	0x032C9718 B 0x32C972C
	0x032C971C B 0x32C9728
	0x032C9720 B 0x32C9728
	0x032C9724 B 0x32C9728
	0x032C9728 MOV X23, X0
	0x032C972C CMP W1, 0x1
	0x032C9730 B.NE 0x32C9750
	0x032C9734 MOV X0, X23
	0x032C9738 BL 0x3EB1AD0
	0x032C973C LDR X22, [X0]
	0x032C9740 BL 0x3EB1AE0
	0x032C9744 MOV W24, W31
	0x032C9748 MOV X23, X31
	0x032C974C B 0x32C9250
	0x032C9750 MOV X22, X31
	0x032C9754 B 0x32C975C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x1114000
	008 Move W8, [X21+2247]
	009 Move X19, X2
	010 Move X22, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0xE5C000
	017 Move X0, [X0+3840]
	018 Call 0x1C17CF4
	019 Move X0, 0xE2D000
	020 Move X0, [X0+368]
	021 Call 0x1C17CF4
	022 Move X0, 0xE5C000
	023 Move X0, [X0+3856]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+2247], W8
	027 Compare X20, 0
	028 JumpIfEqual {169}
	029 Move W1, 44
	030 Move X0, X20
	031 Move X2, X31
	032 Call String.IndexOf, X0, X1
	033 Move W21, W0
	034 Add W31, W0, 1
	035 Move W4, W0
	036 Move W4, [X20+16]
	037 Compare X22, 0
	038 JumpIfEqual {169}
	039 Move W8, [X22+16]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move W5, 4
	042 Move X0, X20
	043 Move W1, W31
	044 Move X2, X22
	045 Move W3, W31
	046 Move X6, X31
	047 Call String.Compare, X0, X1, X2, X3, X4, X5
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move W8, W0
	050 NotImplemented "Instruction CSET not yet implemented."
	051 Add W31, W21, 1
	052 Compare W8, 0
	053 JumpIfNotEqual {101}
	054 Move X23, 0xE2D000
	055 Move X23, [X23+368]
	056 Add W21, W21, 1
	057 Move X0, X20
	058 Move W1, W21
	059 Move X2, X31
	060 Call String.get_Chars, X0, X1
	061 Move X8, [X23]
	062 Move W22, W0
	063 Move W9, [X8+224]
	064 Compare W9, 0
	065 JumpIfNotEqual {68}
	066 Move X0, X8
	067 Call 0x1C17DFC
	068 Move W0, W22
	069 Move X1, X31
	070 Call Char.IsWhiteSpace, X0
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfEqual {56}
	075 Move X0, X20
	076 Move W1, W21
	077 Move X2, X31
	078 Call String.Substring, X0, X1
	079 Move X8, 0xE5C000
	080 Move X8, [X8+3840]
	081 Move X21, X0
	082 Move X8, [X8]
	083 Move X0, X8
	084 Call 0x1C17F10
	085 Move X1, X21
	086 Move X2, X31
	087 Move X20, X0
	088 Call AssemblyName..ctor, X0, X1
	089 Compare X20, 0
	090 JumpIfEqual {169}
	091 Compare X19, 0
	092 JumpIfEqual {169}
	093 Move X0, [X20+16]
	094 Move X1, [X19+16]
	095 Move W2, 5
	096 Move X3, X31
	097 Call String.Compare, X0, X1, X2
	098 Compare W0, 0
	099 JumpIfEqual {108}
	100 Move W0, W31
	101 Move X20, [X31+32]
	102 Move X19, [X31+40]
	103 Move X22, [X31+16]
	104 Move X21, [X31+24]
	105 Move X30, [X31+48]
	106 Move X23, [X31+56]
	107 Return X0
	108 Move X8, 0xE5C000
	109 Move X0, [X20+16]
	110 Move X8, [X8+3856]
	111 Move W2, 5
	112 Move X3, X31
	113 Move X1, [X8]
	114 Call String.Compare, X0, X1, X2
	115 Compare W0, 0
	116 JumpIfEqual {168}
	117 Move X0, [X20+48]
	118 Compare X0, 0
	119 JumpIfEqual {137}
	120 Move X8, [X19+48]
	121 Compare X8, 0
	122 JumpIfEqual {137}
	123 Move X8, [X0]
	124 Move X9, [X8+408]
	125 Move X1, [X8+416]
	126 NotImplemented "Instruction BLR not yet implemented."
	127 Move X8, [X19+48]
	128 Compare X8, 0
	129 JumpIfEqual {169}
	130 Move X9, [X8]
	131 Move W21, W0
	132 Move X0, X8
	133 Move X10, [X9+408]
	134 Move X1, [X9+416]
	135 NotImplemented "Instruction BLR not yet implemented."
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move X0, X20
	138 Move X1, X31
	139 Call AssemblyName.GetPublicKeyToken, X0
	140 Move X20, X0
	141 Move X0, X19
	142 Move X1, X31
	143 Call AssemblyName.GetPublicKeyToken, X0
	144 Move X8, X0
	145 Move W0, 1
	146 Compare X20, 0
	147 JumpIfEqual {101}
	148 Compare X8, 0
	149 JumpIfEqual {101}
	150 Move W9, [X20+24]
	151 Move W10, [X8+24]
	152 NotImplemented "Instruction CMP not yet implemented."
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move W10, W31
	155 Subtract W9, W31, W9
	156 Add W31, W9, W10
	157 Move X10, W10
	158 Add X11, X20, X10
	159 Add X12, X8, X10
	160 Move W11, [X11+32]
	161 Move W12, [X12+32]
	162 Add W13, W9, W10
	163 NotImplemented "Instruction CMP not yet implemented."
	164 NotImplemented "Instruction CSET not yet implemented."
	165 Add W31, W13, 1
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Add W10, W10, 1
	168 Move W0, 1
	169 Call 0x1C17F20
	170 Call 0x1C17F28

Method: System.Void .cctor()

Disassembly:
	0x032C9758 MOV X23, X0
	0x032C975C LDRB W8, [X31 + 0xC]
	0x032C9760 CBZ W8, 0x32C9770
	0x032C9764 MOV X0, X19
	0x032C9768 MOV X1, X31
	0x032C976C BL 0x33E14E4
	0x032C9770 CBNZ X22, 0x32C977C
	0x032C9774 MOV X0, X23
	0x032C9778 BL 0x1D2C690
	0x032C977C MOV X0, X22
	0x032C9780 BL 0x1C16F18
	0x032C9784 BL 0x1990590
	0x032C9788 SUB X31, X31, 0x30
	0x032C978C STP X30, X21, [X31 + 0x10]
	0x032C9790 STP X20, X19, [X31 + 0x20]
	0x032C9794 MOV X19, X0
	0x032C9798 STR W31, [X31 + 0x8]
	0x032C979C BL 0x32C8BBC
	0x032C97A0 MOV W20, W0
	0x032C97A4 STRB W31, [X31 + 0xC]
	0x032C97A8 ADD X1, X31, 0xC
	0x032C97AC MOV X0, X19
	0x032C97B0 MOV X2, X31
	0x032C97B4 BL 0x33DE64C
	0x032C97B8 LDR X0, [X19 + 0x10]
	0x032C97BC CBZ X0, 0x32C98EC
	0x032C97C0 LDR X8, [X0]
	0x032C97C4 LDP X9, X1, [X8 + 0x188]
	0x032C97C8 BLR X9
	0x032C97CC CBZ X0, 0x32C98F0
	0x032C97D0 LDR X8, [X0]
	0x032C97D4 LDR X9, [X19 + 0x20]
	0x032C97D8 LDR X10, [X8 + 0x338]
	0x032C97DC LDR X3, [X8 + 0x340]
	0x032C97E0 SXTW X8, W20
	0x032C97E4 ADD X1, X9, X8
	0x032C97E8 MOV W2, W31
	0x032C97EC BLR X10
	0x032C97F0 MOV X0, X19
	0x032C97F4 BL 0x32C8AC8
	0x032C97F8 LDR X0, [X19 + 0x10]
	0x032C97FC CBZ X0, 0x32C98F4
	0x032C9800 LDR X8, [X0]
	0x032C9804 LDR X1, [X8 + 0x230]
	0x032C9808 LDR X9, [X8 + 0x228]
	0x032C980C BLR X9
	0x032C9810 MOV W20, W0
	0x032C9814 TBNZ X0, 0x1F, 0x32C98AC
	0x032C9818 LDR X0, [X19 + 0x10]
	0x032C981C CBZ X0, 0x32C98F8
	0x032C9820 LDR X8, [X0]
	0x032C9824 LDP X9, X1, [X8 + 0x188]
	0x032C9828 BLR X9
	0x032C982C CBZ X0, 0x32C98FC
	0x032C9830 LDR X8, [X0]
	0x032C9834 LDP X9, X1, [X8 + 0x1E8]
	0x032C9838 BLR X9
	0x032C983C LDR X8, [X19 + 0x28]
	0x032C9840 SUB X8, X0, X8
	0x032C9844 CMP X8, W20, UXTW
	0x032C9848 B.LE 0x32C98AC
	0x032C984C LDR W8, [X19 + 0x78]
	0x032C9850 CMP W8, 0x1
	0x032C9854 B.NE 0x32C9868
	0x032C9858 MOV X0, X19
	0x032C985C MOV W1, W20
	0x032C9860 BL 0x32C9A24
	0x032C9864 B 0x32C9878
	0x032C9868 ADD X2, X31, 0x8
	0x032C986C MOV X0, X19
	0x032C9870 MOV W1, W20
	0x032C9874 BL 0x32C9B1C
	0x032C9878 MOV X20, X0
	0x032C987C MOV X21, X31
	0x032C9880 LDRB W8, [X31 + 0xC]
	0x032C9884 CBZ W8, 0x32C9894
	0x032C9888 MOV X0, X19
	0x032C988C MOV X1, X31
	0x032C9890 BL 0x33E14E4
	0x032C9894 CBNZ X21, 0x32C98E4
	0x032C9898 MOV X0, X20
	0x032C989C LDP X20, X19, [X31 + 0x20]
	0x032C98A0 LDP X30, X21, [X31 + 0x10]
	0x032C98A4 ADD X31, X31, 0x30
	0x032C98A8 RET
	0x032C98AC ADRP X0, 0xE2A000
	0x032C98B0 LDR X0, [X0 + 0x9D0]
	0x032C98B4 BL 0x1C16D08
	0x032C98B8 MOVZ W1, 0x1
	0x032C98BC BL 0x1C16D6C
	0x032C98C0 MOV X21, X0
	0x032C98C4 STR W20, [X31 + 0x4]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1114000
	007 Move X20, 0xE5D000
	008 Move X19, 0xE5D000
	009 Move X21, 0xE2B000
	010 Move W8, [X22+2248]
	011 Move X20, [X20+2712]
	012 Move X19, [X19+2720]
	013 Move X21, [X21+1728]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {35}
	018 Move X0, 0xE5D000
	019 Move X0, [X0+2712]
	020 Call 0x1C17CF4
	021 Move X0, 0xE5D000
	022 Move X0, [X0+2728]
	023 Call 0x1C17CF4
	024 Move X0, 0xE5D000
	025 Move X0, [X0+2720]
	026 Call 0x1C17CF4
	027 Move X0, 0xE5D000
	028 Move X0, [X0+2736]
	029 Call 0x1C17CF4
	030 Move X0, 0xE2B000
	031 Move X0, [X0+1728]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+2248], W8
	035 Move X8, [X20]
	036 Move X9, -41791488
	037 Move V0, [X9+2592]
	038 Move X8, [X8+184]
	039 Move [X8], D0
	040 Move X0, [X21]
	041 Move X21, 0xE5D000
	042 Move X19, [X19]
	043 Move W8, [X0+224]
	044 Move X21, [X21+2728]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, X19
	049 Move X1, X31
	050 Call Type.GetTypeFromHandle, X0
	051 Move X8, [X20]
	052 Move X1, X31
	053 Move X8, [X8+184]
	054 Move [X8+8], X0
	055 Move X0, [X21]
	056 Call Type.GetTypeFromHandle, X0
	057 Compare X0, 0
	058 JumpIfEqual {105}
	059 Move X8, [X0]
	060 Move X19, 0xE5D000
	061 Move X9, [X8+744]
	062 Move X1, [X8+752]
	063 Move X19, [X19+2736]
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Move X8, [X20]
	066 Move X1, X31
	067 Move X8, [X8+184]
	068 Move [X8+16], X0
	069 Move X0, [X19]
	070 Call Type.GetTypeFromHandle, X0
	071 Compare X0, 0
	072 JumpIfEqual {105}
	073 Move X8, [X0]
	074 Move X9, [X8+744]
	075 Move X1, [X8+752]
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Move X8, [X20]
	078 Move X1, X31
	079 Move X8, [X8+184]
	080 Move [X8+24], X0
	081 Move X0, [X21]
	082 Call Type.GetTypeFromHandle, X0
	083 Compare X0, 0
	084 JumpIfEqual {105}
	085 Move X8, [X0]
	086 Move X9, [X8+760]
	087 Move X1, [X8+768]
	088 NotImplemented "Instruction BLR not yet implemented."
	089 Compare X0, 0
	090 JumpIfEqual {105}
	091 Move X8, [X0]
	092 Move X9, [X8+440]
	093 Move X1, [X8+448]
	094 NotImplemented "Instruction BLR not yet implemented."
	095 Move X8, [X20]
	096 Move X20, [X31+32]
	097 Move X19, [X31+40]
	098 Move X22, [X31+16]
	099 Move X21, [X31+24]
	100 Move X8, [X8+184]
	101 Move [X8+32], X0
	102 Move [X8+40], W31
	103 Move X30, [X31+48]
	104 Return 
	105 Call 0x1C17F20

