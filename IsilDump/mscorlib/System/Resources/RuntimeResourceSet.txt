Type: System.Resources.RuntimeResourceSet

Method: System.Void .ctor(System.String fileName)

Disassembly:
	0x032C6CEC LDR X8, [X8 + 0x278]
	0x032C6CF0 LDR X1, [X8]
	0x032C6CF4 LDR X8, [X0]
	0x032C6CF8 CMP X8, X1
	0x032C6CFC B.NE 0x32C6D10
	0x032C6D00 LDP X20, X19, [X31 + 0x20]
	0x032C6D04 LDP X22, X21, [X31 + 0x10]
	0x032C6D08 LDR X30, [X31], #0x30
	0x032C6D0C RET
	0x032C6D10 BL 0x1C171E0
	0x032C6D14 MOV W2, W31
	0x032C6D18 MOV W3, W31
	0x032C6D1C B 0x32C63A0
	0x032C6D20 AND W2, W2, 0x1
	0x032C6D24 MOV W3, W31
	0x032C6D28 B 0x32C63A0
	0x032C6D2C SUB X31, X31, 0x50
	0x032C6D30 STP X30, X25, [X31 + 0x10]
	0x032C6D34 STP X24, X23, [X31 + 0x20]
	0x032C6D38 STP X22, X21, [X31 + 0x30]
	0x032C6D3C STP X20, X19, [X31 + 0x40]
	0x032C6D40 ADRP X21, 0x1116000
	0x032C6D44 ADRP X22, 0xE5F000
	0x032C6D48 LDRB W8, [X21 + 0x8CD]
	0x032C6D4C LDR X22, [X22 + 0x998]
	0x032C6D50 MOV X20, X1
	0x032C6D54 MOV X19, X0
	0x032C6D58 TBNZ X8, 0x0, 0x32C6D70
	0x032C6D5C ADRP X0, 0xE5F000
	0x032C6D60 LDR X0, [X0 + 0x998]
	0x032C6D64 BL 0x1C16CF4
	0x032C6D68 MOVZ W8, 0x1
	0x032C6D6C STRB W8, [X21 + 0x8CD]
	0x032C6D70 LDR X0, [X22]
	0x032C6D74 LDR W8, [X0 + 0xE0]
	0x032C6D78 CBNZ W8, 0x32C6D80
	0x032C6D7C BL 0x1C16DFC
	0x032C6D80 MOV X0, X20
	0x032C6D84 BL 0x32C7834
	0x032C6D88 LDR W8, [X19 + 0x68]
	0x032C6D8C SUBS W25, W8, 0x1
	0x032C6D90 B.MI 0x32C6DE0
	0x032C6D94 MOV W22, W0
	0x032C6D98 MOV W23, W31
	0x032C6D9C MOVN W21, 0x0
	0x032C6DA0 ADD W8, W23, W25
	0x032C6DA4 SBFM W24, W8, 0x1, 0x1F
	0x032C6DA8 MOV X0, X19
	0x032C6DAC MOV W1, W24
	0x032C6DB0 BL 0x32C8B78
	0x032C6DB4 CMP W0, W22
	0x032C6DB8 B.EQ 0x32C6DE8
	0x032C6DBC B.GE 0x32C6DD0
	0x032C6DC0 CMP W24, W25
	0x032C6DC4 ADD W23, W24, 0x1
	0x032C6DC8 B.LT 0x32C6DA0
	0x032C6DCC B 0x32C6DE0
	0x032C6DD0 SUB W25, W24, 0x1
	0x032C6DD4 CMP W23, W24
	0x032C6DD8 B.LT 0x32C6DA0
	0x032C6DDC B 0x32C6F48
	0x032C6DE0 MOVN W21, 0x0
	0x032C6DE4 B 0x32C6F48
	0x032C6DE8 CMP W23, W24
	0x032C6DEC MOV W21, W23
	0x032C6DF0 B.EQ 0x32C6E1C
	0x032C6DF4 MOV W23, W24
	0x032C6DF8 MOV W21, W23
	0x032C6DFC SUBS W23, W23, 0x1
	0x032C6E00 B.LT 0x32C6E18
	0x032C6E04 MOV X0, X19
	0x032C6E08 MOV W1, W23
	0x032C6E0C BL 0x32C8B78
	0x032C6E10 CMP W0, W22
	0x032C6E14 B.EQ 0x32C6DF8
	0x032C6E18 MOV W23, W24

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0x1117000
	010 Move X21, 0xE60000
	011 Move W8, [X22+2228]
	012 Move X21, [X21+2456]
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {36}
	019 Move X0, 0xE60000
	020 Move X0, [X0+2464]
	021 Call 0x1C17CF4
	022 Move X0, 0xE60000
	023 Move X0, [X0+2472]
	024 Call 0x1C17CF4
	025 Move X0, 0xE60000
	026 Move X0, [X0+2456]
	027 Call 0x1C17CF4
	028 Move X0, 0xE5C000
	029 Move X0, [X0+1648]
	030 Call 0x1C17CF4
	031 Move X0, 0xE60000
	032 Move X0, [X0+2480]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X22+2228], W8
	036 Move X25, 0xE60000
	037 Move X22, 0xE60000
	038 Move X24, 0xE5C000
	039 Move X23, 0xE60000
	040 Move X25, [X25+2472]
	041 Move X22, [X22+2464]
	042 Move X24, [X24+1648]
	043 Move X23, [X23+2480]
	044 Move X0, X19
	045 Move X1, X31
	046 Call Object..ctor, X0
	047 Move X0, [X21]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {53}
	051 Call 0x1C17DFC
	052 Move X0, [X21]
	053 Move X8, [X0+184]
	054 Move X0, [X25]
	055 Move X21, [X8]
	056 Call 0x1C17F10
	057 Move X2, [X22]
	058 Move X1, X21
	059 Move X22, X0
	060 Call Dictionary`2<Object, ResourceLocator>..ctor, X0, X1
	061 Move [X19+40], X22
	062 Move X0, [X24]
	063 Call 0x1C17F10
	064 Move W2, 3
	065 Move W3, 1
	066 Move W4, 1
	067 Move X1, X20
	068 Move X5, X31
	069 Move X21, X0
	070 Call FileStream..ctor, X0, X1, X2, X3, X4
	071 Move X0, [X23]
	072 Move X20, [X19+40]
	073 Call 0x1C17F10
	074 Move X1, X21
	075 Move X2, X20
	076 Move X22, X0
	077 Call ResourceReader..ctor, X0, X1, X2
	078 Move [X19+48], X22
	079 Move [X19+16], X22
	080 Move X20, [X31+48]
	081 Move X19, [X31+56]
	082 Move X22, [X31+32]
	083 Move X21, [X31+40]
	084 Move X24, [X31+16]
	085 Move X23, [X31+24]
	086 Move X30, [X31+64]
	087 Move X25, [X31+72]
	088 Return 

Method: System.Void .ctor(System.IO.Stream stream)

Disassembly:
	0x032C6F08 BLR X9
	0x032C6F0C CBZ X0, 0x32C6FB4
	0x032C6F10 LDR X8, [X0]
	0x032C6F14 LDP X9, X1, [X8 + 0x1E8]
	0x032C6F18 BLR X9
	0x032C6F1C LDR X8, [X19 + 0x28]
	0x032C6F20 SUB X8, X0, X8
	0x032C6F24 CMP X8, W21, UXTW
	0x032C6F28 B.LE 0x32C6F74
	0x032C6F2C MOV X22, X31
	0x032C6F30 LDRB W8, [X31 + 0xC]
	0x032C6F34 CBZ W8, 0x32C6F44
	0x032C6F38 MOV X0, X19
	0x032C6F3C MOV X1, X31
	0x032C6F40 BL 0x33E14E4
	0x032C6F44 CBNZ X22, 0x32C6F6C
	0x032C6F48 MOV W0, W21
	0x032C6F4C LDP X20, X19, [X31 + 0x40]
	0x032C6F50 LDP X22, X21, [X31 + 0x30]
	0x032C6F54 LDP X24, X23, [X31 + 0x20]
	0x032C6F58 LDP X30, X25, [X31 + 0x10]
	0x032C6F5C ADD X31, X31, 0x50
	0x032C6F60 RET
	0x032C6F64 BL 0x1C16F20
	0x032C6F68 BL 0x1C16F20
	0x032C6F6C MOV X0, X22
	0x032C6F70 BL 0x1C16F18
	0x032C6F74 ADRP X0, 0xE2D000
	0x032C6F78 LDR X0, [X0 + 0x9D0]
	0x032C6F7C BL 0x1C16D08
	0x032C6F80 MOVZ W1, 0x1
	0x032C6F84 BL 0x1C16D6C
	0x032C6F88 MOV X20, X0
	0x032C6F8C STR W21, [X31 + 0x8]
	0x032C6F90 ADRP X0, 0xE2D000
	0x032C6F94 LDR X0, [X0 + 0x758]
	0x032C6F98 BL 0x1C16D08
	0x032C6F9C ADD X1, X31, 0x8
	0x032C6FA0 BL 0x1C16E04
	0x032C6FA4 CBNZ X20, 0x32C6FB8
	0x032C6FA8 BL 0x1C16F20
	0x032C6FAC BL 0x1C16F20
	0x032C6FB0 BL 0x1C16F20
	0x032C6FB4 BL 0x1C16F20
	0x032C6FB8 MOV X21, X0
	0x032C6FBC CBNZ X0, 0x32C6FCC
	0x032C6FC0 LDR W8, [X20 + 0x18]
	0x032C6FC4 CBNZ W8, 0x32C6FEC
	0x032C6FC8 BL 0x1C16F28
	0x032C6FCC LDR X8, [X20]
	0x032C6FD0 LDR X1, [X8 + 0x40]
	0x032C6FD4 MOV X0, X21
	0x032C6FD8 BL 0x1C16E00
	0x032C6FDC CBNZ X0, 0x32C6FC0
	0x032C6FE0 BL 0x1C16F44
	0x032C6FE4 MOV X1, X31
	0x032C6FE8 BL 0x1C16DEC
	0x032C6FEC STR X21, [X20 + 0x20]
	0x032C6FF0 ADRP X0, 0xE5F000
	0x032C6FF4 LDR X0, [X0 + 0x9F0]
	0x032C6FF8 BL 0x1C16D08

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x1117000
	009 Move X21, 0xE60000
	010 Move W8, [X22+2229]
	011 Move X21, [X21+2456]
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0xE60000
	019 Move X0, [X0+2464]
	020 Call 0x1C17CF4
	021 Move X0, 0xE60000
	022 Move X0, [X0+2472]
	023 Call 0x1C17CF4
	024 Move X0, 0xE60000
	025 Move X0, [X0+2456]
	026 Call 0x1C17CF4
	027 Move X0, 0xE60000
	028 Move X0, [X0+2480]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X22+2229], W8
	032 Move X24, 0xE60000
	033 Move X22, 0xE60000
	034 Move X23, 0xE60000
	035 Move X24, [X24+2472]
	036 Move X22, [X22+2464]
	037 Move X23, [X23+2480]
	038 Move X0, X19
	039 Move X1, X31
	040 Call Object..ctor, X0
	041 Move X0, [X21]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {47}
	045 Call 0x1C17DFC
	046 Move X0, [X21]
	047 Move X8, [X0+184]
	048 Move X0, [X24]
	049 Move X21, [X8]
	050 Call 0x1C17F10
	051 Move X2, [X22]
	052 Move X1, X21
	053 Move X22, X0
	054 Call Dictionary`2<Object, ResourceLocator>..ctor, X0, X1
	055 Move [X19+40], X22
	056 Move X0, [X23]
	057 Call 0x1C17F10
	058 Move X1, X20
	059 Move X2, X22
	060 Move X21, X0
	061 Call ResourceReader..ctor, X0, X1, X2
	062 Move [X19+48], X21
	063 Move [X19+16], X21
	064 Move X20, [X31+48]
	065 Move X19, [X31+56]
	066 Move X22, [X31+32]
	067 Move X21, [X31+40]
	068 Move X24, [X31+16]
	069 Move X23, [X31+24]
	070 Move X30, [X31+64]
	071 Return 

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x032C6FFC MOV X1, X20
	0x032C7000 MOV X2, X31
	0x032C7004 BL 0x33BFB40
	0x032C7008 MOV X20, X0
	0x032C700C ADRP X0, 0xE59000
	0x032C7010 LDR X0, [X0 + 0xC08]
	0x032C7014 BL 0x1C16D08
	0x032C7018 BL 0x1C16F10
	0x032C701C MOV X21, X0
	0x032C7020 MOV X1, X20
	0x032C7024 MOV X2, X31
	0x032C7028 BL 0x33674A0
	0x032C702C ADRP X0, 0xE5E000
	0x032C7030 LDR X0, [X0 + 0x9F8]
	0x032C7034 BL 0x1C16D08
	0x032C7038 MOV X1, X0
	0x032C703C MOV X0, X21
	0x032C7040 BL 0x1C16DEC
	0x032C7044 B 0x32C7080
	0x032C7048 B 0x32C7080
	0x032C704C B 0x32C7080
	0x032C7050 B 0x32C7080
	0x032C7054 B 0x32C7080
	0x032C7058 B 0x32C7080
	0x032C705C B 0x32C7080
	0x032C7060 B 0x32C7080
	0x032C7064 B 0x32C7080
	0x032C7068 B 0x32C7080
	0x032C706C B 0x32C7080
	0x032C7070 B 0x32C7080
	0x032C7074 B 0x32C7080
	0x032C7078 B 0x32C7080
	0x032C707C B 0x32C7080
	0x032C7080 MOV X20, X0
	0x032C7084 CMP W1, 0x1
	0x032C7088 B.NE 0x32C70A0
	0x032C708C MOV X0, X20
	0x032C7090 BL 0x3EB1AD0
	0x032C7094 LDR X22, [X0]
	0x032C7098 BL 0x3EB1AE0
	0x032C709C B 0x32C6ED0
	0x032C70A0 MOV X22, X31
	0x032C70A4 B 0x32C70AC
	0x032C70A8 MOV X20, X0
	0x032C70AC LDRB W8, [X31 + 0xC]
	0x032C70B0 CBZ W8, 0x32C70C0
	0x032C70B4 MOV X0, X19
	0x032C70B8 MOV X1, X31
	0x032C70BC BL 0x33E14E4
	0x032C70C0 CBNZ X22, 0x32C70CC
	0x032C70C4 MOV X0, X20
	0x032C70C8 BL 0x1D2C690
	0x032C70CC MOV X0, X22
	0x032C70D0 BL 0x1C16F18
	0x032C70D4 BL 0x1990590
	0x032C70D8 SUB X31, X31, 0x50
	0x032C70DC STR X30, [X31 + 0x20]
	0x032C70E0 STP X22, X21, [X31 + 0x30]
	0x032C70E4 STP X20, X19, [X31 + 0x40]
	0x032C70E8 ADRP X21, 0x1115000
	0x032C70EC LDRB W8, [X21 + 0x8D0]
	0x032C70F0 MOV W20, W1
	0x032C70F4 MOV X19, X0
	0x032C70F8 TBNZ X8, 0x0, 0x32C711C
	0x032C70FC ADRP X0, 0xE54000
	0x032C7100 LDR X0, [X0 + 0xB60]
	0x032C7104 BL 0x1C16CF4
	0x032C7108 ADRP X0, 0xE2C000
	0x032C710C LDR X0, [X0 + 0x6C0]
	0x032C7110 BL 0x1C16CF4
	0x032C7114 MOVZ W8, 0x1
	0x032C7118 STRB W8, [X21 + 0x8D0]
	0x032C711C LDR X0, [X19 + 0x10]
	0x032C7120 CBZ X0, 0x32C72B4
	0x032C7124 LDR X8, [X0]
	0x032C7128 LDP X9, X1, [X8 + 0x188]
	0x032C712C BLR X9
	0x032C7130 CBZ X0, 0x32C72B4
	0x032C7134 LDR X8, [X0]
	0x032C7138 LDR X9, [X19 + 0x28]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move [X31+12], W31
	009 Move X19, [X0+16]
	010 Compare X19, 0
	011 JumpIfEqual {66}
	012 Move X20, X0
	013 Move W21, W1
	014 Move TEMP, X1
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {60}
	018 Move [X31+12], W31
	019 Add X1, X31, 12
	020 Move X0, X19
	021 Move X2, X31
	022 Call Monitor.Enter, X0, X1
	023 Move X22, [X20+48]
	024 Move [X20+40], X31
	025 Compare X22, 0
	026 JumpIfEqual {44}
	027 Move X8, X22
	028 Add X8, X8, 16
	029 Move X0, [X8]
	030 Compare X0, 0
	031 JumpIfEqual {43}
	032 Move [X8], X31
	033 Move [X8+8], X31
	034 Move X8, [X0]
	035 Move X9, [X8+408]
	036 Move X1, [X8+416]
	037 NotImplemented "Instruction BLR not yet implemented."
	038 NotImplemented "Instruction MOVI not yet implemented."
	039 Move [X22+16], X31
	040 Move [X22+112], X31
	041 Move [X22+48], V0
	042 Move [X22+56], V0
	043 Move [X20+48], X31
	044 Move [X20+56], X31
	045 Move W1, 1
	046 Move X0, X20
	047 Call ResourceSet.Dispose, X0, X1
	048 Move X22, X31
	049 Move W23, W31
	050 Move W8, [X31+12]
	051 Compare W8, 0
	052 JumpIfEqual {56}
	053 Move X0, X19
	054 Move X1, X31
	055 Call Monitor.Exit, X0
	056 Compare X22, 0
	057 JumpIfNotEqual {74}
	058 Compare W23, 0
	059 JumpIfEqual {66}
	060 And W1, W21, 1
	061 Move X0, X20
	062 Move [X20+40], X31
	063 Move [X20+48], X31
	064 Move [X20+56], X31
	065 Call ResourceSet.Dispose, X0, X1
	066 Move X20, [X31+48]
	067 Move X19, [X31+56]
	068 Move X22, [X31+32]
	069 Move X21, [X31+40]
	070 Move X30, [X31+16]
	071 Move X23, [X31+24]
	072 Add X31, X31, 64
	073 Return 
	074 Move X0, X22
	075 Call 0x1C17F18
	076 Move X23, X0
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X0, X23
	079 Call 0x3EB2AD0
	080 Move X22, [X0]
	081 Call 0x3EB2AE0
	082 Move W23, 1
	083 Move X22, X31
	084 Move X23, X0
	085 Move W8, [X31+12]
	086 Compare W8, 0
	087 JumpIfEqual {91}
	088 Move X0, X19
	089 Move X1, X31
	090 Call Monitor.Exit, X0
	091 Compare X22, 0
	092 JumpIfNotEqual {95}
	093 Move X0, X23
	094 Call 0x1D2D690
	095 Move X0, X22
	096 Call 0x1C17F18
	097 Call 0x1991590

Method: System.Collections.IDictionaryEnumerator GetEnumerator()

Disassembly:
	0x032C722C MOV X1, X31

ISIL:
No ISIL was generated
Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x032C732C ADRP X0, 0xE5E000

ISIL:
	001 Call RuntimeResourceSet.GetEnumeratorHelper, X0
	002 Return X0

Method: System.Collections.IDictionaryEnumerator GetEnumeratorHelper()

Disassembly:
	0x032C7230 MOV X2, X19
	0x032C7234 BL 0x1993444
	0x032C7238 ADRP X0, 0xE5E000
	0x032C723C LDR X0, [X0 + 0xA00]
	0x032C7240 BL 0x1C16D08
	0x032C7244 MOV X1, X21
	0x032C7248 B 0x32C733C
	0x032C724C CMP W20, 0x2
	0x032C7250 B.CS 0x32C729C
	0x032C7254 CMP W20, 0x1
	0x032C7258 B.NE 0x32C7284
	0x032C725C LDR X0, [X19 + 0x10]
	0x032C7260 CBZ X0, 0x32C72B4
	0x032C7264 LDR X8, [X0]
	0x032C7268 LDP X20, X19, [X31 + 0x40]
	0x032C726C LDP X22, X21, [X31 + 0x30]
	0x032C7270 LDR X30, [X31 + 0x20]
	0x032C7274 LDR X2, [X8 + 0x298]
	0x032C7278 LDR X1, [X8 + 0x2A0]
	0x032C727C ADD X31, X31, 0x50
	0x032C7280 BR X2
	0x032C7284 LDP X20, X19, [X31 + 0x40]
	0x032C7288 LDP X22, X21, [X31 + 0x30]
	0x032C728C LDR X30, [X31 + 0x20]
	0x032C7290 MOV X0, X31
	0x032C7294 ADD X31, X31, 0x50
	0x032C7298 RET
	0x032C729C CMP W20, 0x3F
	0x032C72A0 B.LE 0x32C72B8
	0x032C72A4 SUB W1, W20, 0x40
	0x032C72A8 MOV X0, X19
	0x032C72AC BL 0x32C9C14
	0x032C72B0 CBNZ X0, 0x32C72E0
	0x032C72B4 BL 0x1C16F20
	0x032C72B8 ADRP X0, 0xE5E000
	0x032C72BC LDR X0, [X0 + 0xA08]
	0x032C72C0 BL 0x1C16D08
	0x032C72C4 MOVN X8, 0x0
	0x032C72C8 STP X0, X8, [X31 + 0x8]
	0x032C72CC ADD X0, X31, 0x8
	0x032C72D0 MOV X1, X31
	0x032C72D4 STR W20, [X31 + 0x18]
	0x032C72D8 BL 0x33B162C
	0x032C72DC B 0x32C72F0
	0x032C72E0 LDR X8, [X0]
	0x032C72E4 LDR X9, [X8 + 0x2E8]
	0x032C72E8 LDR X1, [X8 + 0x2F0]
	0x032C72EC BLR X9
	0x032C72F0 MOV X19, X0
	0x032C72F4 ADRP X0, 0xE2C000
	0x032C72F8 LDR X0, [X0 + 0x9D0]
	0x032C72FC BL 0x1C16D08
	0x032C7300 MOVZ W1, 0x1
	0x032C7304 BL 0x1C16D6C
	0x032C7308 MOV X20, X0
	0x032C730C BL 0x19903C0
	0x032C7310 MOV X0, X20
	0x032C7314 MOV X1, X19
	0x032C7318 BL 0x19980B4
	0x032C731C MOV X0, X20
	0x032C7320 MOV X1, X31
	0x032C7324 MOV X2, X19
	0x032C7328 BL 0x1993444

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1116000
	005 Move W8, [X20+2230]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE5F000
	012 Move X0, [X0+2488]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2230], W8
	016 Move X8, [X19+16]
	017 Compare X8, 0
	018 JumpIfEqual {51}
	019 Move X9, [X19+40]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 NotImplemented "Instruction CSEL not yet implemented."
	022 Compare X9, 0
	023 JumpIfEqual {51}
	024 Move X10, 0xE5F000
	025 Move X8, [X19]
	026 Move X10, [X10+2488]
	027 NotImplemented "Instruction LDRH not yet implemented."
	028 Move X1, [X10]
	029 Compare X9, 0
	030 JumpIfEqual {37}
	031 Move X10, [X8+176]
	032 Add X10, X10, 8
	033 NotImplemented "Instruction LDUR not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Subtract X9, X9, 1
	036 Add X10, X10, 16
	037 Move W2, 1
	038 Move X0, X19
	039 Call 0x1C5D788
	040 Move W9, [X10]
	041 Add W9, W9, 1
	042 Add X8, X8, W9
	043 Add X0, X8, 312
	044 Move X2, [X0]
	045 Move X1, [X0+8]
	046 Move X0, X19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 CallNoReturn X2
	051 Move X0, 0xE56000
	052 Move X0, [X0+1208]
	053 Call 0x1C17D08
	054 Call 0x1C17F10
	055 Move X19, X0
	056 Move X0, 0xE5F000
	057 Move X0, [X0+2496]
	058 Call 0x1C17D08
	059 Move X2, X0
	060 Move X0, X19
	061 Move X1, X31
	062 Move X3, X31
	063 Call ObjectDisposedException..ctor, X0, X1, X2
	064 Move X0, 0xE5F000
	065 Move X0, [X0+2504]
	066 Call 0x1C17D08
	067 Move X1, X0
	068 Move X0, X19
	069 Call 0x1C17DEC

Method: System.String GetString(System.String key)

Disassembly:
	0x032C7330 LDR X0, [X0 + 0xA00]
	0x032C7334 BL 0x1C16D08
	0x032C7338 MOV X1, X20
	0x032C733C MOV X2, X31
	0x032C7340 BL 0x33BFB40
	0x032C7344 MOV X19, X0
	0x032C7348 ADRP X0, 0xE2C000
	0x032C734C LDR X0, [X0 + 0x5B0]
	0x032C7350 BL 0x1C16D08
	0x032C7354 BL 0x1C16F10
	0x032C7358 MOV X1, X19
	0x032C735C MOV X2, X31
	0x032C7360 MOV X20, X0
	0x032C7364 BL 0x337DF1C
	0x032C7368 ADRP X0, 0xE5E000
	0x032C736C LDR X0, [X0 + 0xA10]
	0x032C7370 BL 0x1C16D08
	0x032C7374 MOV X1, X0
	0x032C7378 MOV X0, X20
	0x032C737C BL 0x1C16DEC
	0x032C7380 STR X30, [X31 - 0x30]!
	0x032C7384 STP X22, X21, [X31 + 0x10]
	0x032C7388 STP X20, X19, [X31 + 0x20]
	0x032C738C ADRP X22, 0x1115000
	0x032C7390 LDRB W8, [X22 + 0x8D1]
	0x032C7394 MOV X19, X2
	0x032C7398 MOV W20, W1
	0x032C739C MOV X21, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1116000
	006 Move W8, [X21+2231]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xE2F000
	014 Move X0, [X0+632]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2231], W8
	018 Move W3, 1
	019 Move X0, X20
	020 Move X1, X19
	021 Move W2, W31
	022 Call RuntimeResourceSet.GetObject, X0, X1, X2, X3
	023 Compare X0, 0
	024 JumpIfEqual {30}
	025 Move X8, 0xE2F000
	026 Move X8, [X8+632]
	027 Move X1, [X8]
	028 Move X8, [X0]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return X0
	035 Call 0x1C181E0

Method: System.String GetString(System.String key, System.Boolean ignoreCase)

Disassembly:
	0x032C7C98 STP X20, X19, [X31 + 0x10]
	0x032C7C9C MOV X19, X1
	0x032C7CA0 MOV X1, X31
	0x032C7CA4 MOV X20, X0
	0x032C7CA8 BL 0x33BDD8C
	0x032C7CAC STR X19, [X20 + 0x10]
	0x032C7CB0 LDP X20, X19, [X31 + 0x10]
	0x032C7CB4 LDR X30, [X31], #0x20
	0x032C7CB8 RET
	0x032C7CBC SUB X31, X31, 0x40
	0x032C7CC0 STR X30, [X31 + 0x10]
	0x032C7CC4 STP X22, X21, [X31 + 0x20]
	0x032C7CC8 STP X20, X19, [X31 + 0x30]
	0x032C7CCC ADRP X21, 0x1115000
	0x032C7CD0 LDRB W8, [X21 + 0x8C1]
	0x032C7CD4 MOV X20, X1
	0x032C7CD8 MOV X19, X0
	0x032C7CDC TBNZ X8, 0x0, 0x32C7CF4
	0x032C7CE0 ADRP X0, 0xE2E000
	0x032C7CE4 LDR X0, [X0 + 0xC48]
	0x032C7CE8 BL 0x1C16CF4
	0x032C7CEC MOVZ W8, 0x1
	0x032C7CF0 STRB W8, [X21 + 0x8C1]
	0x032C7CF4 ADRP X21, 0xE2E000
	0x032C7CF8 LDR X21, [X21 + 0xC48]
	0x032C7CFC ADD X1, X31, 0x18
	0x032C7D00 ADD X2, X31, 0xC
	0x032C7D04 MOV X0, X19
	0x032C7D08 STR X31, [X31 + 0x18]
	0x032C7D0C STRH W31, [X31 + 0xC]
	0x032C7D10 BL 0x32C7FCC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1116000
	007 Move W8, [X22+2232]
	008 Move W21, W2
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xE2F000
	016 Move X0, [X0+632]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2232], W8
	020 And W2, W21, 1
	021 Move W3, 1
	022 Move X0, X20
	023 Move X1, X19
	024 Call RuntimeResourceSet.GetObject, X0, X1, X2, X3
	025 Compare X0, 0
	026 JumpIfEqual {32}
	027 Move X8, 0xE2F000
	028 Move X8, [X8+632]
	029 Move X1, [X8]
	030 Move X8, [X0]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X30, [X31+48]
	037 Return X0
	038 Call 0x1C181E0

Method: System.Object GetObject(System.String key)

Disassembly:
	0x032C7D14 TBZ X0, 0x0, 0x32C7D4C
	0x032C7D18 LDRH W22, [X31 + 0xC]
	0x032C7D1C CMP W22, 0x2

ISIL:
	001 Move W2, W31
	002 Move W3, W31
	003 Call RuntimeResourceSet.GetObject, X0, X1, X2, X3
	004 Return X0

Method: System.Object GetObject(System.String key, System.Boolean ignoreCase)

Disassembly:
	0x032C7D20 B.CS 0x32C7D7C
	0x032C7D24 STR W22, [X20]
	0x032C7D28 LDR X0, [X21]

ISIL:
	001 And W2, W2, 1
	002 Move W3, W31
	003 Call RuntimeResourceSet.GetObject, X0, X1, X2, X3
	004 Return X0

Method: System.Object GetObject(System.String key, System.Boolean ignoreCase, System.Boolean isString)

Disassembly:
	0x032C73A0 TBNZ X8, 0x0, 0x32C73B8
	0x032C73A4 ADRP X0, 0xE2E000
	0x032C73A8 LDR X0, [X0 + 0x278]
	0x032C73AC BL 0x1C16CF4
	0x032C73B0 MOVZ W8, 0x1
	0x032C73B4 STRB W8, [X22 + 0x8D1]
	0x032C73B8 LDR W8, [X21 + 0x78]
	0x032C73BC MOV X0, X21
	0x032C73C0 MOV W1, W20
	0x032C73C4 CMP W8, 0x1
	0x032C73C8 B.NE 0x32C7404
	0x032C73CC BL 0x32C9A24
	0x032C73D0 MOVZ W8, 0x40
	0x032C73D4 CBZ X0, 0x32C73F0
	0x032C73D8 ADRP X9, 0xE2E000
	0x032C73DC LDR X9, [X9 + 0x278]
	0x032C73E0 LDR X10, [X0]
	0x032C73E4 LDR X9, [X9]
	0x032C73E8 CMP X10, X9
	0x032C73EC CSINC W8, W8, W31, NE
	0x032C73F0 STR W8, [X19]
	0x032C73F4 LDP X20, X19, [X31 + 0x20]
	0x032C73F8 LDP X22, X21, [X31 + 0x10]
	0x032C73FC LDR X30, [X31], #0x30
	0x032C7400 RET
	0x032C7404 MOV X2, X19
	0x032C7408 LDP X20, X19, [X31 + 0x20]
	0x032C740C LDP X22, X21, [X31 + 0x10]
	0x032C7410 LDR X30, [X31], #0x30
	0x032C7414 B 0x32C9B1C
	0x032C7418 CMP W0, 0x11
	0x032C741C CSET W0, LT
	0x032C7420 RET
	0x032C7424 STR W1, [X0 + 0x8]
	0x032C7428 STR X2, [X0]
	0x032C742C RET
	0x032C7430 STP X30, X21, [X31 - 0x20]!
	0x032C7434 STP X20, X19, [X31 + 0x10]
	0x032C7438 ADRP X20, 0x1115000
	0x032C743C ADRP X21, 0xE5E000
	0x032C7440 LDRB W8, [X20 + 0x8CC]
	0x032C7444 LDR X21, [X21 + 0xA18]
	0x032C7448 MOV X19, X0
	0x032C744C TBNZ X8, 0x0, 0x32C7464
	0x032C7450 ADRP X0, 0xE5E000
	0x032C7454 LDR X0, [X0 + 0xA18]
	0x032C7458 BL 0x1C16CF4
	0x032C745C MOVZ W8, 0x1
	0x032C7460 STRB W8, [X20 + 0x8CC]
	0x032C7464 LDR X0, [X21]
	0x032C7468 BL 0x1C16F10
	0x032C746C MOV X1, X31
	0x032C7470 MOV X20, X0
	0x032C7474 BL 0x33BDD8C
	0x032C7478 ADRP X8, 0xFFFFFFFFFD827000
	0x032C747C LDR V0, [X8 + 0x390]
	0x032C7480 STR X19, [X20 + 0x10]
	0x032C7484 MOV X0, X20
	0x032C7488 STUR D0, [X20 + 0x1C]
	0x032C748C LDP X20, X19, [X31 + 0x10]
	0x032C7490 LDP X30, X21, [X31], #0x20
	0x032C7494 RET
	0x032C7498 STR X30, [X31 - 0x20]!
	0x032C749C STP X20, X19, [X31 + 0x10]
	0x032C74A0 LDR W1, [X0 + 0x1C]
	0x032C74A4 MOVZ W8, 0x80000000
	0x032C74A8 CMP W1, W8
	0x032C74AC B.EQ 0x32C74DC
	0x032C74B0 LDRB W8, [X0 + 0x18]
	0x032C74B4 CBZ W8, 0x32C74E8
	0x032C74B8 LDR X8, [X0 + 0x10]
	0x032C74BC CBZ X8, 0x32C74F4
	0x032C74C0 LDR X9, [X8 + 0x18]
	0x032C74C4 CBZ X9, 0x32C74F8
	0x032C74C8 LDP X20, X19, [X31 + 0x10]
	0x032C74CC ADD X2, X0, 0x20
	0x032C74D0 MOV X0, X8
	0x032C74D4 LDR X30, [X31], #0x20
	0x032C74D8 B 0x32C8FD0
	0x032C74DC ADRP X0, 0xE57000
	0x032C74E0 LDR X0, [X0 + 0xC40]
	0x032C74E4 B 0x32C7500
	0x032C74E8 ADRP X0, 0xE57000
	0x032C74EC LDR X0, [X0 + 0xC48]
	0x032C74F0 B 0x32C7500
	0x032C74F4 BL 0x1C16F20
	0x032C74F8 ADRP X0, 0xE5E000
	0x032C74FC LDR X0, [X0 + 0xA20]
	0x032C7500 BL 0x1C16D08
	0x032C7504 MOV X1, X31
	0x032C7508 BL 0x33BDD84
	0x032C750C MOV X19, X0
	0x032C7510 ADRP X0, 0xE2C000
	0x032C7514 LDR X0, [X0 + 0x5B0]
	0x032C7518 BL 0x1C16D08
	0x032C751C BL 0x1C16F10
	0x032C7520 MOV X1, X19
	0x032C7524 MOV X2, X31
	0x032C7528 MOV X20, X0
	0x032C752C BL 0x337DF1C
	0x032C7530 ADRP X0, 0xE5E000
	0x032C7534 LDR X0, [X0 + 0xA28]
	0x032C7538 BL 0x1C16D08
	0x032C753C MOV X1, X0
	0x032C7540 MOV X0, X20
	0x032C7544 BL 0x1C16DEC
	0x032C7548 STR X30, [X31 - 0x10]!
	0x032C754C LDR X9, [X0 + 0x10]
	0x032C7550 CBZ X9, 0x32C75B4
	0x032C7554 LDR W8, [X0 + 0x1C]
	0x032C7558 LDR W9, [X9 + 0x68]
	0x032C755C MOVZ W10, 0x80000000
	0x032C7560 CMP W8, W10
	0x032C7564 SUB W9, W9, 0x1
	0x032C7568 B.EQ 0x32C7584
	0x032C756C CMP W8, W9
	0x032C7570 B.EQ 0x32C7584
	0x032C7574 MOVZ W10, 0x1
	0x032C7578 STRB W10, [X0 + 0x18]
	0x032C757C ADD W10, W8, 0x1
	0x032C7580 B 0x32C758C
	0x032C7584 STRB W31, [X0 + 0x18]
	0x032C7588 MOVZ W10, 0x80000000
	0x032C758C MOVZ W11, 0x80000000
	0x032C7590 CMP W8, W11
	0x032C7594 CSET W11, NE
	0x032C7598 CMP W8, W9
	0x032C759C CSET W8, NE
	0x032C75A0 AND W8, W11, W8, 0x0
	0x032C75A4 STR W10, [X0 + 0x1C]
	0x032C75A8 MOV W0, W8
	0x032C75AC LDR X30, [X31], #0x10
	0x032C75B0 RET
	0x032C75B4 BL 0x1C16F20
	0x032C75B8 STR X30, [X31 - 0x50]!
	0x032C75BC STP X26, X25, [X31 + 0x10]
	0x032C75C0 STP X24, X23, [X31 + 0x20]
	0x032C75C4 STP X22, X21, [X31 + 0x30]
	0x032C75C8 STP X20, X19, [X31 + 0x40]
	0x032C75CC ADRP X23, 0x1115000
	0x032C75D0 LDRB W8, [X23 + 0x8BA]
	0x032C75D4 MOV W22, W5
	0x032C75D8 MOV X21, X4
	0x032C75DC MOV X20, X3
	0x032C75E0 MOV X19, X2
	0x032C75E4 MOV X24, X1
	0x032C75E8 MOV X25, X0
	0x032C75EC TBNZ X8, 0x0, 0x32C7604
	0x032C75F0 ADRP X0, 0xE5E000
	0x032C75F4 LDR X0, [X0 + 0x9E0]
	0x032C75F8 BL 0x1C16CF4
	0x032C75FC MOVZ W8, 0x1
	0x032C7600 STRB W8, [X23 + 0x8BA]
	0x032C7604 STR W31, [X31 + 0xC]
	0x032C7608 CBZ X24, 0x32C7628
	0x032C760C MOV X0, X24
	0x032C7610 LDP X20, X19, [X31 + 0x40]
	0x032C7614 LDP X22, X21, [X31 + 0x30]
	0x032C7618 LDP X24, X23, [X31 + 0x20]
	0x032C761C LDP X26, X25, [X31 + 0x10]
	0x032C7620 LDR X30, [X31], #0x50
	0x032C7624 RET
	0x032C7628 LDR X23, [X25 + 0x10]
	0x032C762C STRB W31, [X31 + 0x8]
	0x032C7630 ADD X1, X31, 0x8
	0x032C7634 MOV X0, X23
	0x032C7638 MOV X2, X31
	0x032C763C BL 0x33DE64C
	0x032C7640 LDR X0, [X25 + 0x30]
	0x032C7644 CBZ X0, 0x32C76C4
	0x032C7648 ADD X2, X31, 0xC
	0x032C764C MOV W1, W19
	0x032C7650 BL 0x32C7380
	0x032C7654 MOV X24, X0
	0x032C7658 MOV X25, X31
	0x032C765C MOVZ W26, 0x3
	0x032C7660 LDRB W8, [X31 + 0x8]
	0x032C7664 CBZ W8, 0x32C7674
	0x032C7668 MOV X0, X23
	0x032C766C MOV X1, X31
	0x032C7670 BL 0x33E14E4
	0x032C7674 CBNZ X25, 0x32C76BC
	0x032C7678 CMP W26, 0x3
	0x032C767C B.EQ 0x32C7684
	0x032C7680 CBNZ W26, 0x32C760C
	0x032C7684 LDR W8, [X31 + 0xC]
	0x032C7688 CMP W8, 0x10
	0x032C768C B.GT 0x32C760C
	0x032C7690 TBNZ X22, 0x0, 0x32C760C
	0x032C7694 CBZ X21, 0x32C76C8
	0x032C7698 ADRP X8, 0xE5E000
	0x032C769C LDR X8, [X8 + 0x9E0]
	0x032C76A0 MOV X0, X21
	0x032C76A4 MOV X1, X20
	0x032C76A8 MOV X2, X24
	0x032C76AC LDR X4, [X8]
	0x032C76B0 MOV X3, X19
	0x032C76B4 BL 0x2AB19EC
	0x032C76B8 B 0x32C760C
	0x032C76BC MOV X0, X25
	0x032C76C0 BL 0x1C16F18
	0x032C76C4 BL 0x1C16F20
	0x032C76C8 BL 0x1C16F20
	0x032C76CC B 0x32C76D4
	0x032C76D0 B 0x32C76D4
	0x032C76D4 MOV X24, X0
	0x032C76D8 CMP W1, 0x1
	0x032C76DC B.NE 0x32C76FC
	0x032C76E0 MOV X0, X24
	0x032C76E4 BL 0x3EB1AD0
	0x032C76E8 LDR X25, [X0]
	0x032C76EC BL 0x3EB1AE0
	0x032C76F0 MOV W26, W31
	0x032C76F4 MOV X24, X31
	0x032C76F8 B 0x32C7660
	0x032C76FC MOV X25, X31
	0x032C7700 B 0x32C7708
	0x032C7704 MOV X24, X0
	0x032C7708 LDRB W8, [X31 + 0x8]
	0x032C770C CBZ W8, 0x32C771C
	0x032C7710 MOV X0, X23
	0x032C7714 MOV X1, X31
	0x032C7718 BL 0x33E14E4
	0x032C771C CBNZ X25, 0x32C7728
	0x032C7720 MOV X0, X24
	0x032C7724 BL 0x1D2C690
	0x032C7728 MOV X0, X25
	0x032C772C BL 0x1C16F18
	0x032C7730 BL 0x1990590
	0x032C7734 STR X30, [X31 - 0x20]!
	0x032C7738 STP X20, X19, [X31 + 0x10]
	0x032C773C MOV X19, X1
	0x032C7740 MOV X1, X31
	0x032C7744 MOV X20, X0
	0x032C7748 BL 0x33A51F0
	0x032C774C CBZ X19, 0x32C7760
	0x032C7750 STR X19, [X20 + 0x10]
	0x032C7754 LDP X20, X19, [X31 + 0x10]
	0x032C7758 LDR X30, [X31], #0x20
	0x032C775C RET
	0x032C7760 ADRP X0, 0xE31000
	0x032C7764 LDR X0, [X0 + 0x528]
	0x032C7768 BL 0x1C16D08
	0x032C776C BL 0x1C16F10
	0x032C7770 MOV X19, X0
	0x032C7774 ADRP X0, 0xE5E000
	0x032C7778 LDR X0, [X0 + 0xA30]
	0x032C777C BL 0x1C16D08
	0x032C7780 MOV X1, X0
	0x032C7784 MOV X0, X19
	0x032C7788 MOV X2, X31
	0x032C778C BL 0x330E100
	0x032C7790 ADRP X0, 0xE5E000
	0x032C7794 LDR X0, [X0 + 0xA38]
	0x032C7798 BL 0x1C16D08
	0x032C779C MOV X1, X0
	0x032C77A0 MOV X0, X19
	0x032C77A4 BL 0x1C16DEC
	0x032C77A8 STP X30, X21, [X31 - 0x20]!
	0x032C77AC STP X20, X19, [X31 + 0x10]
	0x032C77B0 ADRP X20, 0x1115000
	0x032C77B4 ADRP X21, 0xE5E000
	0x032C77B8 LDRB W8, [X20 + 0x8BB]
	0x032C77BC LDR X21, [X21 + 0x998]
	0x032C77C0 MOV X19, X1
	0x032C77C4 TBNZ X8, 0x0, 0x32C77E8
	0x032C77C8 ADRP X0, 0xE5E000
	0x032C77CC LDR X0, [X0 + 0x998]
	0x032C77D0 BL 0x1C16CF4
	0x032C77D4 ADRP X0, 0xE2E000
	0x032C77D8 LDR X0, [X0 + 0x278]
	0x032C77DC BL 0x1C16CF4
	0x032C77E0 MOVZ W8, 0x1
	0x032C77E4 STRB W8, [X20 + 0x8BB]
	0x032C77E8 LDR X0, [X21]
	0x032C77EC LDR W8, [X0 + 0xE0]
	0x032C77F0 CBZ W8, 0x32C77FC
	0x032C77F4 CBNZ X19, 0x32C7804
	0x032C77F8 B 0x32C781C
	0x032C77FC BL 0x1C16DFC
	0x032C7800 CBZ X19, 0x32C781C
	0x032C7804 ADRP X8, 0xE2E000
	0x032C7808 LDR X8, [X8 + 0x278]
	0x032C780C LDR X1, [X8]
	0x032C7810 LDR X8, [X19]
	0x032C7814 CMP X8, X1
	0x032C7818 B.NE 0x32C782C
	0x032C781C MOV X0, X19
	0x032C7820 LDP X20, X19, [X31 + 0x10]
	0x032C7824 LDP X30, X21, [X31], #0x20
	0x032C7828 B 0x32C7834
	0x032C782C MOV X0, X19
	0x032C7830 BL 0x1C171E0
	0x032C7834 STP X30, X21, [X31 - 0x20]!
	0x032C7838 STP X20, X19, [X31 + 0x10]
	0x032C783C CBZ X0, 0x32C789C
	0x032C7840 LDR W8, [X0 + 0x10]
	0x032C7844 MOV X19, X0
	0x032C7848 CMP W8, 0x1
	0x032C784C B.LT 0x32C7888
	0x032C7850 MOV W21, W31
	0x032C7854 MOVZ W20, 0x1505
	0x032C7858 MOV X0, X19
	0x032C785C MOV W1, W21
	0x032C7860 MOV X2, X31
	0x032C7864 BL 0x3222A1C
	0x032C7868 LDR W8, [X19 + 0x10]
	0x032C786C ADD W9, W20, W20, 0x5, LSL
	0x032C7870 AND W10, W0, 0xFFFF
	0x032C7874 ADD W21, W21, 0x1
	0x032C7878 CMP W21, W8
	0x032C787C EOR W20, W9, W10, 0x0
	0x032C7880 B.LT 0x32C7858
	0x032C7884 B 0x32C788C
	0x032C7888 MOVZ W20, 0x1505
	0x032C788C MOV W0, W20
	0x032C7890 LDP X20, X19, [X31 + 0x10]
	0x032C7894 LDP X30, X21, [X31], #0x20
	0x032C7898 RET
	0x032C789C BL 0x1C16F20
	0x032C78A0 STP X30, X21, [X31 - 0x20]!
	0x032C78A4 STP X20, X19, [X31 + 0x10]
	0x032C78A8 ADRP X20, 0x1115000
	0x032C78AC ADRP X21, 0xE5E000
	0x032C78B0 LDRB W8, [X20 + 0x8BC]
	0x032C78B4 LDR X21, [X21 + 0x998]
	0x032C78B8 MOV X19, X1
	0x032C78BC TBNZ X8, 0x0, 0x32C78D4
	0x032C78C0 ADRP X0, 0xE5E000
	0x032C78C4 LDR X0, [X0 + 0x998]
	0x032C78C8 BL 0x1C16CF4
	0x032C78CC MOVZ W8, 0x1
	0x032C78D0 STRB W8, [X20 + 0x8BC]
	0x032C78D4 LDR X0, [X21]
	0x032C78D8 LDR W8, [X0 + 0xE0]
	0x032C78DC CBNZ W8, 0x32C78E4
	0x032C78E0 BL 0x1C16DFC
	0x032C78E4 MOV X0, X19
	0x032C78E8 LDP X20, X19, [X31 + 0x10]
	0x032C78EC LDP X30, X21, [X31], #0x20
	0x032C78F0 B 0x32C7834
	0x032C78F4 STP X30, X21, [X31 - 0x20]!
	0x032C78F8 STP X20, X19, [X31 + 0x10]
	0x032C78FC ADRP X21, 0x1115000
	0x032C7900 LDRB W8, [X21 + 0x8BD]
	0x032C7904 MOV X19, X2
	0x032C7908 MOV X20, X1
	0x032C790C TBNZ X8, 0x0, 0x32C7924
	0x032C7910 ADRP X0, 0xE2E000
	0x032C7914 LDR X0, [X0 + 0x278]
	0x032C7918 BL 0x1C16CF4
	0x032C791C MOVZ W8, 0x1
	0x032C7920 STRB W8, [X21 + 0x8BD]
	0x032C7924 CMP X20, X19
	0x032C7928 B.EQ 0x32C7970
	0x032C792C ADRP X8, 0xE2E000
	0x032C7930 LDR X8, [X8 + 0x278]
	0x032C7934 LDR X1, [X8]
	0x032C7938 CBZ X19, 0x32C7948
	0x032C793C LDR X8, [X19]
	0x032C7940 CMP X8, X1
	0x032C7944 B.NE 0x32C7980
	0x032C7948 CBZ X20, 0x32C7958
	0x032C794C LDR X8, [X20]
	0x032C7950 CMP X8, X1
	0x032C7954 B.NE 0x32C7988
	0x032C7958 MOV X0, X20
	0x032C795C MOV X1, X19
	0x032C7960 LDP X20, X19, [X31 + 0x10]
	0x032C7964 MOV X2, X31
	0x032C7968 LDP X30, X21, [X31], #0x20
	0x032C796C B 0x32261E8
	0x032C7970 LDP X20, X19, [X31 + 0x10]
	0x032C7974 MOV W0, W31
	0x032C7978 LDP X30, X21, [X31], #0x20
	0x032C797C RET
	0x032C7980 MOV X0, X19
	0x032C7984 BL 0x1C171E0
	0x032C7988 MOV X0, X20
	0x032C798C BL 0x1C171E0
	0x032C7990 MOV X0, X1
	0x032C7994 MOV X1, X2
	0x032C7998 MOV X2, X31
	0x032C799C B 0x32261E8
	0x032C79A0 MOV X0, X1
	0x032C79A4 MOV X1, X2
	0x032C79A8 MOV X2, X31
	0x032C79AC B 0x3226C14
	0x032C79B0 STP X30, X21, [X31 - 0x20]!
	0x032C79B4 STP X20, X19, [X31 + 0x10]
	0x032C79B8 ADRP X21, 0x1115000
	0x032C79BC LDRB W8, [X21 + 0x8BE]
	0x032C79C0 MOV X19, X2
	0x032C79C4 MOV X20, X1
	0x032C79C8 TBNZ X8, 0x0, 0x32C79E0
	0x032C79CC ADRP X0, 0xE2E000
	0x032C79D0 LDR X0, [X0 + 0x278]
	0x032C79D4 BL 0x1C16CF4
	0x032C79D8 MOVZ W8, 0x1
	0x032C79DC STRB W8, [X21 + 0x8BE]
	0x032C79E0 CMP X20, X19
	0x032C79E4 B.EQ 0x32C7A2C
	0x032C79E8 ADRP X8, 0xE2E000
	0x032C79EC LDR X8, [X8 + 0x278]
	0x032C79F0 LDR X1, [X8]
	0x032C79F4 CBZ X19, 0x32C7A04
	0x032C79F8 LDR X8, [X19]
	0x032C79FC CMP X8, X1
	0x032C7A00 B.NE 0x32C7A3C
	0x032C7A04 CBZ X20, 0x32C7A14
	0x032C7A08 LDR X8, [X20]
	0x032C7A0C CMP X8, X1
	0x032C7A10 B.NE 0x32C7A44
	0x032C7A14 MOV X0, X20
	0x032C7A18 MOV X1, X19
	0x032C7A1C LDP X20, X19, [X31 + 0x10]
	0x032C7A20 MOV X2, X31
	0x032C7A24 LDP X30, X21, [X31], #0x20
	0x032C7A28 B 0x3226C14
	0x032C7A2C LDP X20, X19, [X31 + 0x10]
	0x032C7A30 MOVZ W0, 0x1
	0x032C7A34 LDP X30, X21, [X31], #0x20
	0x032C7A38 RET
	0x032C7A3C MOV X0, X19
	0x032C7A40 BL 0x1C171E0
	0x032C7A44 MOV X0, X20
	0x032C7A48 BL 0x1C171E0
	0x032C7A4C STR X30, [X31 - 0x40]!
	0x032C7A50 STP X24, X23, [X31 + 0x10]
	0x032C7A54 STP X22, X21, [X31 + 0x20]
	0x032C7A58 STP X20, X19, [X31 + 0x30]
	0x032C7A5C CBZ X0, 0x32C7B00
	0x032C7A60 LDR W9, [X0 + 0x10]
	0x032C7A64 MOV W19, W2
	0x032C7A68 MOV X20, X0
	0x032C7A6C CMP W9, W2
	0x032C7A70 CSEL W8, W2, W9, GT
	0x032C7A74 CBZ W2, 0x32C7A90
	0x032C7A78 CBZ X1, 0x32C7A9C
	0x032C7A7C LDR W9, [X1 + 0x18]
	0x032C7A80 ADD X10, X1, 0x20
	0x032C7A84 CMP W9, 0x0
	0x032C7A88 CSEL X22, X31, X10, EQ
	0x032C7A8C B 0x32C7AA0
	0x032C7A90 CMP W9, 0x0
	0x032C7A94 CSINV W0, W31, W31, EQ
	0x032C7A98 B 0x32C7AEC
	0x032C7A9C MOV X22, X31
	0x032C7AA0 SUBS W23, W8, 0x1
	0x032C7AA4 B.LT 0x32C7AE4
	0x032C7AA8 MOV W21, W31
	0x032C7AAC LDRH W24, [X22]
	0x032C7AB0 MOV X0, X20
	0x032C7AB4 MOV W1, W21
	0x032C7AB8 MOV X2, X31
	0x032C7ABC BL 0x3222A1C
	0x032C7AC0 AND W8, W0, 0xFFFF
	0x032C7AC4 CMP W23, W21
	0x032C7AC8 SUB W0, W8, W24
	0x032C7ACC B.EQ 0x32C7AE0
	0x032C7AD0 ADD W21, W21, 0x1
	0x032C7AD4 ADD X22, X22, 0x2
	0x032C7AD8 CBZ W0, 0x32C7AAC
	0x032C7ADC B 0x32C7AEC
	0x032C7AE0 CBNZ W0, 0x32C7AEC
	0x032C7AE4 LDR W8, [X20 + 0x10]
	0x032C7AE8 SUB W0, W8, W19
	0x032C7AEC LDP X20, X19, [X31 + 0x30]
	0x032C7AF0 LDP X22, X21, [X31 + 0x20]
	0x032C7AF4 LDP X24, X23, [X31 + 0x10]
	0x032C7AF8 LDR X30, [X31], #0x40
	0x032C7AFC RET
	0x032C7B00 BL 0x1C16F20
	0x032C7B04 STP X30, X23, [X31 - 0x30]!
	0x032C7B08 STP X22, X21, [X31 + 0x10]
	0x032C7B0C STP X20, X19, [X31 + 0x20]
	0x032C7B10 ADRP X22, 0x1115000
	0x032C7B14 ADRP X23, 0xE5E000
	0x032C7B18 LDRB W8, [X22 + 0x8BF]
	0x032C7B1C LDR X23, [X23 + 0x998]
	0x032C7B20 MOV X20, X2
	0x032C7B24 MOV W19, W1
	0x032C7B28 MOV X21, X0
	0x032C7B2C TBNZ X8, 0x0, 0x32C7B44
	0x032C7B30 ADRP X0, 0xE5E000
	0x032C7B34 LDR X0, [X0 + 0x998]
	0x032C7B38 BL 0x1C16CF4
	0x032C7B3C MOVZ W8, 0x1
	0x032C7B40 STRB W8, [X22 + 0x8BF]
	0x032C7B44 LDR X0, [X23]
	0x032C7B48 LDR W8, [X0 + 0xE0]
	0x032C7B4C CBNZ W8, 0x32C7B54
	0x032C7B50 BL 0x1C16DFC
	0x032C7B54 MOV X0, X20
	0x032C7B58 MOV X1, X21
	0x032C7B5C MOV W2, W19
	0x032C7B60 BL 0x32C7A4C
	0x032C7B64 LDP X20, X19, [X31 + 0x20]
	0x032C7B68 LDP X22, X21, [X31 + 0x10]
	0x032C7B6C SUB W0, W31, W0
	0x032C7B70 LDP X30, X23, [X31], #0x30
	0x032C7B74 RET
	0x032C7B78 STR X30, [X31 - 0x40]!
	0x032C7B7C STP X24, X23, [X31 + 0x10]
	0x032C7B80 STP X22, X21, [X31 + 0x20]
	0x032C7B84 STP X20, X19, [X31 + 0x30]
	0x032C7B88 CBZ X2, 0x32C7C04
	0x032C7B8C LDR W8, [X2 + 0x10]
	0x032C7B90 SBFM W9, W1, 0x1, 0x1F
	0x032C7B94 MOV X20, X2
	0x032C7B98 MOV W19, W1
	0x032C7B9C CMP W9, W8
	0x032C7BA0 CSEL W8, W8, W9, GT
	0x032C7BA4 SUBS W23, W8, 0x1
	0x032C7BA8 B.LT 0x32C7BE8
	0x032C7BAC MOV X21, X0
	0x032C7BB0 MOV W22, W31
	0x032C7BB4 LDRH W24, [X21]
	0x032C7BB8 MOV X0, X20
	0x032C7BBC MOV W1, W22
	0x032C7BC0 MOV X2, X31
	0x032C7BC4 BL 0x3222A1C
	0x032C7BC8 CMP W23, W22
	0x032C7BCC SUB W0, W24, W0, UXTH
	0x032C7BD0 B.EQ 0x32C7BE4
	0x032C7BD4 ADD W22, W22, 0x1
	0x032C7BD8 ADD X21, X21, 0x2
	0x032C7BDC CBZ W0, 0x32C7BB4
	0x032C7BE0 B 0x32C7BF0
	0x032C7BE4 CBNZ W0, 0x32C7BF0
	0x032C7BE8 LDR W8, [X20 + 0x10]
	0x032C7BEC SUB W0, W19, W8, 0x1, LSL
	0x032C7BF0 LDP X20, X19, [X31 + 0x30]
	0x032C7BF4 LDP X22, X21, [X31 + 0x20]
	0x032C7BF8 LDP X24, X23, [X31 + 0x10]
	0x032C7BFC LDR X30, [X31], #0x40
	0x032C7C00 RET
	0x032C7C04 BL 0x1C16F20
	0x032C7C08 MOV X1, X31
	0x032C7C0C B 0x33BDD8C
	0x032C7C10 STR X30, [X31 - 0x20]!
	0x032C7C14 STP X20, X19, [X31 + 0x10]
	0x032C7C18 ADRP X19, 0x1115000
	0x032C7C1C ADRP X20, 0xE5E000
	0x032C7C20 LDRB W8, [X19 + 0x8C0]
	0x032C7C24 LDR X20, [X20 + 0x998]
	0x032C7C28 TBNZ X8, 0x0, 0x32C7C40
	0x032C7C2C ADRP X0, 0xE5E000
	0x032C7C30 LDR X0, [X0 + 0x998]
	0x032C7C34 BL 0x1C16CF4
	0x032C7C38 MOVZ W8, 0x1
	0x032C7C3C STRB W8, [X19 + 0x8C0]
	0x032C7C40 LDR X0, [X20]
	0x032C7C44 BL 0x1C16F10
	0x032C7C48 MOV X1, X31
	0x032C7C4C MOV X19, X0
	0x032C7C50 BL 0x33BDD8C
	0x032C7C54 LDR X8, [X20]
	0x032C7C58 LDR X8, [X8 + 0xB8]
	0x032C7C5C STR X19, [X8]
	0x032C7C60 LDP X20, X19, [X31 + 0x10]
	0x032C7C64 LDR X30, [X31], #0x20
	0x032C7C68 RET
	0x032C7C6C STR X30, [X31 - 0x20]!
	0x032C7C70 STP X20, X19, [X31 + 0x10]
	0x032C7C74 MOV X19, X1
	0x032C7C78 MOV X1, X31
	0x032C7C7C MOV X20, X0
	0x032C7C80 BL 0x33BDD8C
	0x032C7C84 STR X19, [X20 + 0x10]
	0x032C7C88 LDP X20, X19, [X31 + 0x10]
	0x032C7C8C LDR X30, [X31], #0x20
	0x032C7C90 RET
	0x032C7C94 STR X30, [X31 - 0x20]!

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X19, 0x1116000
	015 Move W8, [X19+2233]
	016 Move W23, W3
	017 Move W22, W2
	018 Move X20, X1
	019 Move X21, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {56}
	024 Move X0, 0xE5F000
	025 Move X0, [X0+2512]
	026 Call 0x1C17CF4
	027 Move X0, 0xE5F000
	028 Move X0, [X0+2520]
	029 Call 0x1C17CF4
	030 Move X0, 0xE5F000
	031 Move X0, [X0+2464]
	032 Call 0x1C17CF4
	033 Move X0, 0xE5F000
	034 Move X0, [X0+2528]
	035 Call 0x1C17CF4
	036 Move X0, 0xE5F000
	037 Move X0, [X0+2472]
	038 Call 0x1C17CF4
	039 Move X0, 0xE5A000
	040 Move X0, [X0+3968]
	041 Call 0x1C17CF4
	042 Move X0, 0xE2D000
	043 Move X0, [X0+3608]
	044 Call 0x1C17CF4
	045 Move X0, 0xE5F000
	046 Move X0, [X0+2488]
	047 Call 0x1C17CF4
	048 Move X0, 0xE3A000
	049 Move X0, [X0+752]
	050 Call 0x1C17CF4
	051 Move X0, 0xE2F000
	052 Move X0, [X0+632]
	053 Call 0x1C17CF4
	054 Move W8, 1
	055 Move [X19+2233], W8
	056 Move [X31+32], X31
	057 Move [X31+40], X31
	058 Move [X31+24], W31
	059 Move [X31+20], W31
	060 Compare X20, 0
	061 JumpIfEqual {491}
	062 Move X27, [X21+16]
	063 Compare X27, 0
	064 JumpIfEqual {475}
	065 Move X8, [X21+40]
	066 Compare X8, 0
	067 JumpIfEqual {475}
	068 Move [X31+28], W31
	069 Add X1, X31, 28
	070 Move X0, X27
	071 Move X2, X31
	072 Call Monitor.Enter, X0, X1
	073 Move X8, [X21+16]
	074 Compare X8, 0
	075 JumpIfEqual {511}
	076 Move X28, 0xE5F000
	077 Move X8, [X21+48]
	078 Move X28, [X28+2520]
	079 Compare X8, 0
	080 JumpIfEqual {166}
	081 Move X0, [X21+40]
	082 Compare X0, 0
	083 JumpIfEqual {531}
	084 Move X3, [X28]
	085 Add X2, X31, 32
	086 Move X1, X20
	087 Call Dictionary`2<Object, ResourceLocator>.TryGetValue, X0, X1, X2
	088 Move X8, [X31+32]
	089 Move W9, [X31+40]
	090 And W31, W0, 1
	091 NotImplemented "Instruction CSEL not yet implemented."
	092 NotImplemented "Instruction CSINV not yet implemented."
	093 Compare X25, 0
	094 JumpIfNotEqual {102}
	095 Add W31, W24, 1
	096 Move X0, [X21+48]
	097 Compare X0, 0
	098 JumpIfEqual {537}
	099 Move X1, X20
	100 Call ResourceReader.FindPosForResource, X0, X1
	101 Move W24, W0
	102 Compare X25, 0
	103 JumpIfNotEqual {159}
	104 Add W31, W24, 1
	105 Move X0, [X21+48]
	106 Move TEMP, X23
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfNotEqual {117}
	110 Compare X0, 0
	111 JumpIfEqual {542}
	112 Move W1, W24
	113 Call ResourceReader.LoadString, X0, X1
	114 Move X25, X0
	115 Move W8, 1
	116 Move [X31+24], W8
	117 Compare X0, 0
	118 JumpIfEqual {544}
	119 Add X2, X31, 24
	120 Move W1, W24
	121 Call ResourceReader.LoadObject, X0, X1, X2
	122 Move W8, [X31+24]
	123 Move X25, X0
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move X8, X25
	126 Move X8, X31
	127 Move [X31+32], X8
	128 Move [X31+40], W24
	129 Move [X31+44], W31
	130 Move X26, [X21+40]
	131 Move [X31+20], W31
	132 Add X1, X31, 20
	133 Move X0, X26
	134 Move X2, X31
	135 Call Monitor.Enter, X0, X1
	136 Move X0, [X21+40]
	137 Compare X0, 0
	138 JumpIfEqual {539}
	139 Move X8, 0xE5F000
	140 Move X2, [X31+32]
	141 Move X3, [X31+40]
	142 Move X8, [X8+2528]
	143 Move X4, [X8]
	144 Move X1, X20
	145 Call Dictionary`2<Object, ResourceLocator>.set_Item, X0, X1, X2
	146 Move X23, X31
	147 Move W19, 15
	148 Move W8, [X31+20]
	149 Compare W8, 0
	150 JumpIfEqual {154}
	151 Move X0, X26
	152 Move X1, X31
	153 Call Monitor.Exit, X0
	154 Compare X23, 0
	155 JumpIfNotEqual {540}
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Compare W19, 0
	158 JumpIfNotEqual {248}
	159 Move X23, X31
	160 Compare X25, 0
	161 JumpIfNotEqual {446}
	162 Move TEMP, X22
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfNotEqual {446}
	166 Move W8, [X21+64]
	167 Compare W8, 0
	168 JumpIfNotEqual {400}
	169 Move TEMP, X22
	170 And TEMP, TEMP, 1
	171 Compare TEMP, 1
	172 JumpIfNotEqual {211}
	173 Move X8, [X21+56]
	174 Compare X8, 0
	175 JumpIfNotEqual {211}
	176 Move X19, 0xE3A000
	177 Move X19, [X19+752]
	178 Move X0, [X19]
	179 Move W8, [X0+224]
	180 Compare W8, 0
	181 JumpIfNotEqual {183}
	182 Call 0x1C17DFC
	183 Move X23, 0x1116000
	184 Move W8, [X23+2342]
	185 Compare W8, 0
	186 JumpIfNotEqual {192}
	187 Move X0, 0xE3A000
	188 Move X0, [X0+752]
	189 Call 0x1C17CF4
	190 Move W8, 1
	191 Move [X23+2342], W8
	192 Move X0, [X19]
	193 Move W8, [X0+224]
	194 Compare W8, 0
	195 JumpIfNotEqual {198}
	196 Call 0x1C17DFC
	197 Move X0, [X19]
	198 Move X9, 0xE5F000
	199 Move X8, [X0+184]
	200 Move X9, [X9+2472]
	201 Move X24, [X8+24]
	202 Move X0, [X9]
	203 Call 0x1C17F10
	204 Move X8, 0xE5F000
	205 Move X8, [X8+2464]
	206 Move X23, X0
	207 Move X2, [X8]
	208 Move X1, X24
	209 Call Dictionary`2<Object, ResourceLocator>..ctor, X0, X1
	210 Move [X21+56], X23
	211 Move X0, [X21+48]
	212 Compare X0, 0
	213 JumpIfEqual {250}
	214 Call ResourceReader.GetEnumeratorInternal, X0
	215 Move X23, X0
	216 Compare X0, 0
	217 JumpIfEqual {546}
	218 Move X19, 0xE2F000
	219 Move X25, 0xE5F000
	220 Move X19, [X19+632]
	221 Move X25, [X25+2512]
	222 Move X24, X31
	223 Move X0, X23
	224 Call ResourceEnumerator.MoveNext, X0
	225 Move TEMP, X0
	226 And TEMP, TEMP, 1
	227 Compare TEMP, 1
	228 JumpIfNotEqual {398}
	229 Move X0, X23
	230 Call ResourceEnumerator.get_Key, X0
	231 Move X8, X0
	232 Compare X0, 0
	233 JumpIfEqual {237}
	234 Move X1, [X19]
	235 Move X9, [X8]
	236 NotImplemented "Instruction CMP not yet implemented."
	237 Move X0, [X21+56]
	238 Compare X0, 0
	239 JumpIfEqual {469}
	240 Move W9, [X23+32]
	241 Move X4, [X25]
	242 And X10, X24, 0
	243 Or X24, X10, X9
	244 Move X1, X8
	245 Move X2, X31
	246 Move X3, X24
	247 Call Dictionary`2<Object, ResourceLocator>.Add, X0, X1, X2
	248 Move X23, X31
	249 Move X25, X31
	250 Move X23, [X21+16]
	251 Move [X31+8], X27
	252 Compare X23, 0
	253 JumpIfEqual {548}
	254 Move X10, 0xE5F000
	255 Move X8, [X23]
	256 Move X10, [X10+2488]
	257 NotImplemented "Instruction LDRH not yet implemented."
	258 Move X1, [X10]
	259 Compare X9, 0
	260 JumpIfEqual {267}
	261 Move X10, [X8+176]
	262 Add X10, X10, 8
	263 NotImplemented "Instruction LDUR not yet implemented."
	264 NotImplemented "Instruction CMP not yet implemented."
	265 Subtract X9, X9, 1
	266 Add X10, X10, 16
	267 Move W2, 1
	268 Move X0, X23
	269 Call 0x1C5D788
	270 Move W9, [X10]
	271 Add W9, W9, 1
	272 Add X8, X8, W9
	273 Add X0, X8, 312
	274 Move X8, [X0]
	275 Move X1, [X0+8]
	276 Move X0, X23
	277 NotImplemented "Instruction BLR not yet implemented."
	278 Move X23, X0
	279 Compare X0, 0
	280 JumpIfEqual {549}
	281 Move X29, 0xE2D000
	282 Move X28, 0xE5A000
	283 Move X27, 0xE2F000
	284 Move X19, 0xE5F000
	285 Move X29, [X29+3608]
	286 Move X28, [X28+3968]
	287 Move X27, [X27+632]
	288 Move X19, [X19+2512]
	289 Move X24, X31
	290 Move X8, [X23]
	291 Move X1, [X29]
	292 NotImplemented "Instruction LDRH not yet implemented."
	293 Compare X9, 0
	294 JumpIfEqual {301}
	295 Move X10, [X8+176]
	296 Add X10, X10, 8
	297 NotImplemented "Instruction LDUR not yet implemented."
	298 NotImplemented "Instruction CMP not yet implemented."
	299 Subtract X9, X9, 1
	300 Add X10, X10, 16
	301 Move X0, X23
	302 Move W2, W31
	303 Call 0x1C5D788
	304 NotImplemented "Instruction LDRSW not yet implemented."
	305 Add X8, X8, X9
	306 Add X0, X8, 312
	307 Move X8, [X0]
	308 Move X1, [X0+8]
	309 Move X0, X23
	310 NotImplemented "Instruction BLR not yet implemented."
	311 Move TEMP, X0
	312 And TEMP, TEMP, 1
	313 Compare TEMP, 1
	314 JumpIfNotEqual {365}
	315 Move X8, [X23]
	316 Move X1, [X28]
	317 NotImplemented "Instruction LDRH not yet implemented."
	318 Compare X9, 0
	319 JumpIfEqual {326}
	320 Move X10, [X8+176]
	321 Add X10, X10, 8
	322 NotImplemented "Instruction LDUR not yet implemented."
	323 NotImplemented "Instruction CMP not yet implemented."
	324 Subtract X9, X9, 1
	325 Add X10, X10, 16
	326 Move W2, 2
	327 Move X0, X23
	328 Call 0x1C5D788
	329 Move W9, [X10]
	330 Add W9, W9, 2
	331 Add X8, X8, W9
	332 Add X0, X8, 312
	333 Move X8, [X0]
	334 Move X1, [X0+8]
	335 Move X0, X23
	336 NotImplemented "Instruction BLR not yet implemented."
	337 Move X25, X0
	338 Move X26, X1
	339 Compare X0, 0
	340 JumpIfEqual {344}
	341 Move X1, [X27]
	342 Move X8, [X25]
	343 NotImplemented "Instruction CMP not yet implemented."
	344 Move X0, [X21+40]
	345 Compare X0, 0
	346 JumpIfEqual {474}
	347 Move X4, [X19]
	348 Or X24, X24, 0
	349 Move X1, X25
	350 Move X2, X26
	351 Move X3, X24
	352 Call Dictionary`2<Object, ResourceLocator>.Add, X0, X1, X2
	353 Move TEMP, X22
	354 And TEMP, TEMP, 1
	355 Compare TEMP, 1
	356 JumpIfNotEqual {290}
	357 Move X0, [X21+56]
	358 Compare X0, 0
	359 JumpIfEqual {490}
	360 Move X4, [X19]
	361 Move X1, X25
	362 Move X2, X26
	363 Move X3, X24
	364 Call Dictionary`2<Object, ResourceLocator>.Add, X0, X1, X2
	365 Move X28, 0xE5F000
	366 Move X27, [X31+8]
	367 Move X28, [X28+2520]
	368 Move TEMP, X22
	369 And TEMP, TEMP, 1
	370 Compare TEMP, 1
	371 JumpIfEqual {398}
	372 Move X23, [X21+16]
	373 Compare X23, 0
	374 JumpIfEqual {550}
	375 Move X8, [X23]
	376 Move X10, 0xE5F000
	377 NotImplemented "Instruction LDRH not yet implemented."
	378 Move X10, [X10+2488]
	379 Move X1, [X10]
	380 Compare X9, 0
	381 JumpIfEqual {388}
	382 Move X10, [X8+176]
	383 Add X10, X10, 8
	384 NotImplemented "Instruction LDUR not yet implemented."
	385 NotImplemented "Instruction CMP not yet implemented."
	386 Subtract X9, X9, 1
	387 Add X10, X10, 16
	388 Move X0, X23
	389 Move W2, W31
	390 Call 0x1C5D788
	391 NotImplemented "Instruction LDRSW not yet implemented."
	392 Add X8, X8, X9
	393 Add X0, X8, 312
	394 Move X8, [X0]
	395 Move X1, [X0+8]
	396 Move X0, X23
	397 NotImplemented "Instruction BLR not yet implemented."
	398 Move W8, 1
	399 Move [X21+64], W8
	400 Move X8, [X21+48]
	401 Compare X8, 0
	402 JumpIfEqual {423}
	403 Move X0, [X21+40]
	404 Compare X0, 0
	405 JumpIfEqual {533}
	406 Move X3, [X28]
	407 Add X2, X31, 32
	408 Move X1, X20
	409 Call Dictionary`2<Object, ResourceLocator>.TryGetValue, X0, X1, X2
	410 Move TEMP, X0
	411 And TEMP, TEMP, 1
	412 Compare TEMP, 1
	413 JumpIfNotEqual {423}
	414 Move X1, [X31+32]
	415 Move X2, [X31+40]
	416 Move X4, [X21+40]
	417 Move X0, X21
	418 Move X3, X20
	419 Move W5, W31
	420 Call RuntimeResourceSet.ResolveResourceLocator, X0, X1, X2, X3, X4
	421 Move X25, X0
	422 Move W8, W31
	423 Move X25, X31
	424 Move W8, 1
	425 And W31, W22, W8
	426 Move X0, [X21+56]
	427 Compare X0, 0
	428 JumpIfEqual {535}
	429 Move X3, [X28]
	430 Add X2, X31, 32
	431 Move X1, X20
	432 Call Dictionary`2<Object, ResourceLocator>.TryGetValue, X0, X1, X2
	433 Move TEMP, X0
	434 And TEMP, TEMP, 1
	435 Compare TEMP, 1
	436 JumpIfNotEqual {445}
	437 Move X1, [X31+32]
	438 Move X2, [X31+40]
	439 Move X4, [X21+40]
	440 Move W5, 1
	441 Move X0, X21
	442 Move X3, X20
	443 Call RuntimeResourceSet.ResolveResourceLocator, X0, X1, X2, X3, X4
	444 Move X25, X0
	445 Move X23, X31
	446 Move W8, [X31+28]
	447 Compare W8, 0
	448 JumpIfEqual {452}
	449 Move X0, X27
	450 Move X1, X31
	451 Call Monitor.Exit, X0
	452 Compare X23, 0
	453 JumpIfNotEqual {509}
	454 Move X0, X25
	455 Move X20, [X31+128]
	456 Move X19, [X31+136]
	457 Move X22, [X31+112]
	458 Move X21, [X31+120]
	459 Move X24, [X31+96]
	460 Move X23, [X31+104]
	461 Move X26, [X31+80]
	462 Move X25, [X31+88]
	463 Move X28, [X31+64]
	464 Move X27, [X31+72]
	465 Move X29, [X31+48]
	466 Move X30, [X31+56]
	467 Add X31, X31, 144
	468 Return X0
	469 Move [X31+8], X27
	470 Call 0x1C17F20
	471 Move X0, X8
	472 Move [X31+8], X27
	473 Call 0x1C181E0
	474 Call 0x1C17F20
	475 Move X0, 0xE56000
	476 Move X0, [X0+1208]
	477 Call 0x1C17D08
	478 Call 0x1C17F10
	479 Move X19, X0
	480 Move X0, 0xE5F000
	481 Move X0, [X0+2496]
	482 Call 0x1C17D08
	483 Move X2, X0
	484 Move X0, X19
	485 Move X1, X31
	486 Move X3, X31
	487 Call ObjectDisposedException..ctor, X0, X1, X2
	488 Move X0, X25
	489 Call 0x1C181E0
	490 Call 0x1C17F20
	491 Move X0, 0xE32000
	492 Move X0, [X0+1320]
	493 Call 0x1C17D08
	494 Call 0x1C17F10
	495 Move X19, X0
	496 Move X0, 0xE57000
	497 Move X0, [X0+112]
	498 Call 0x1C17D08
	499 Move X1, X0
	500 Move X0, X19
	501 Move X2, X31
	502 Call ArgumentNullException..ctor, X0, X1
	503 Move X0, 0xE5F000
	504 Move X0, [X0+2536]
	505 Call 0x1C17D08
	506 Move X1, X0
	507 Move X0, X19
	508 Call 0x1C17DEC
	509 Move X0, X23
	510 Call 0x1C17F18
	511 Move [X31+8], X27
	512 Move X0, 0xE56000
	513 Move X0, [X0+1208]
	514 Call 0x1C17D08
	515 Call 0x1C17F10
	516 Move X20, X0
	517 Move X0, 0xE5F000
	518 Move X0, [X0+2496]
	519 Call 0x1C17D08
	520 Move X2, X0
	521 Move X0, X20
	522 Move X1, X31
	523 Move X3, X31
	524 Call ObjectDisposedException..ctor, X0, X1, X2
	525 Move X0, 0xE5F000
	526 Move X0, [X0+2536]
	527 Call 0x1C17D08
	528 Move X1, X0
	529 Move X0, X20
	530 Call 0x1C17DEC
	531 Move [X31+8], X27
	532 Call 0x1C17F20
	533 Move [X31+8], X27
	534 Call 0x1C17F20
	535 Move [X31+8], X27
	536 Call 0x1C17F20
	537 Move [X31+8], X27
	538 Call 0x1C17F20
	539 Call 0x1C17F20
	540 Move X0, X23
	541 Call 0x1C17F18
	542 Move [X31+8], X27
	543 Call 0x1C17F20
	544 Move [X31+8], X27
	545 Call 0x1C17F20
	546 Move [X31+8], X27
	547 Call 0x1C17F20
	548 Call 0x1C17F20
	549 Call 0x1C17F20
	550 Call 0x1C17F20
	551 Move X23, X1
	552 Move X24, X0
	553 NotImplemented "Instruction CMP not yet implemented."
	554 Move [X31+8], X27
	555 Move X0, X24
	556 Call 0x3EB2AD0
	557 Move X8, [X0]
	558 Move [X31], X8
	559 Call 0x3EB2AE0
	560 Move X23, [X31]
	561 Move X27, [X31+8]
	562 Move W19, W31
	563 Move [X31], X31
	564 Move W8, [X31+20]
	565 Compare W8, 0
	566 JumpIfEqual {570}
	567 Move X0, X26
	568 Move X1, X31
	569 Call Monitor.Exit, X0
	570 Move X8, [X31]
	571 Compare X8, 0
	572 JumpIfEqual {580}
	573 Move X0, [X31]
	574 Call 0x1C17F18
	575 Move X23, X1
	576 Move X24, X0
	577 Move [X31+8], X27
	578 Move X23, X1
	579 Move X24, X0
	580 NotImplemented "Instruction CMP not yet implemented."
	581 Move X0, X24
	582 Call 0x3EB2AD0
	583 Move X23, [X0]
	584 Call 0x3EB2AE0
	585 Move X27, [X31+8]
	586 Move X23, X31
	587 Move X24, X0
	588 Move W8, [X31+28]
	589 Compare W8, 0
	590 JumpIfEqual {594}
	591 Move X0, [X31+8]
	592 Move X1, X31
	593 Call Monitor.Exit, X0
	594 Compare X23, 0
	595 JumpIfNotEqual {598}
	596 Move X0, X24
	597 Call 0x1D2D690
	598 Move X0, X23
	599 Call 0x1C17F18
	600 Call 0x1991590

Method: System.Object ResolveResourceLocator(System.Resources.ResourceLocator resLocation, System.String key, System.Collections.Generic.Dictionary`2<System.String, System.Resources.ResourceLocator> copyOfCache, System.Boolean keyInWrongCase)

Disassembly:
	0x032C85B8 MOV X0, X20
	0x032C85BC MOV W1, W21
	0x032C85C0 MOV X2, X31
	0x032C85C4 BL 0x3222A1C
	0x032C85C8 LDR X8, [X23]
	0x032C85CC MOV W22, W0
	0x032C85D0 LDR W9, [X8 + 0xE0]
	0x032C85D4 CBNZ W9, 0x32C85E0
	0x032C85D8 MOV X0, X8
	0x032C85DC BL 0x1C16DFC
	0x032C85E0 MOV W0, W22
	0x032C85E4 MOV X1, X31
	0x032C85E8 BL 0x3317FCC
	0x032C85EC TBNZ X0, 0x0, 0x32C85B4
	0x032C85F0 MOV X0, X20
	0x032C85F4 MOV W1, W21
	0x032C85F8 MOV X2, X31
	0x032C85FC BL 0x322B484
	0x032C8600 ADRP X8, 0xE5C000
	0x032C8604 LDR X8, [X8 + 0xF00]
	0x032C8608 MOV X21, X0
	0x032C860C LDR X8, [X8]
	0x032C8610 MOV X0, X8
	0x032C8614 BL 0x1C16F10
	0x032C8618 MOV X1, X21
	0x032C861C MOV X2, X31
	0x032C8620 MOV X20, X0
	0x032C8624 BL 0x32D5CD4
	0x032C8628 CBZ X20, 0x32C8750
	0x032C862C CBZ X19, 0x32C8750
	0x032C8630 LDR X0, [X20 + 0x10]
	0x032C8634 LDR X1, [X19 + 0x10]
	0x032C8638 MOVZ W2, 0x5
	0x032C863C MOV X3, X31
	0x032C8640 BL 0x322590C
	0x032C8644 CBZ W0, 0x32C865C
	0x032C8648 MOV W0, W31
	0x032C864C LDP X20, X19, [X31 + 0x20]
	0x032C8650 LDP X22, X21, [X31 + 0x10]
	0x032C8654 LDP X30, X23, [X31], #0x30
	0x032C8658 RET
	0x032C865C ADRP X8, 0xE5C000
	0x032C8660 LDR X0, [X20 + 0x10]
	0x032C8664 LDR X8, [X8 + 0xF10]
	0x032C8668 MOVZ W2, 0x5
	0x032C866C MOV X3, X31
	0x032C8670 LDR X1, [X8]
	0x032C8674 BL 0x322590C
	0x032C8678 CBZ W0, 0x32C8748
	0x032C867C LDR X0, [X20 + 0x30]
	0x032C8680 CBZ X0, 0x32C86BC
	0x032C8684 LDR X8, [X19 + 0x30]
	0x032C8688 CBZ X8, 0x32C86BC
	0x032C868C LDR X8, [X0]
	0x032C8690 LDP X9, X1, [X8 + 0x198]
	0x032C8694 BLR X9
	0x032C8698 LDR X8, [X19 + 0x30]
	0x032C869C CBZ X8, 0x32C8750
	0x032C86A0 LDR X9, [X8]
	0x032C86A4 MOV W21, W0
	0x032C86A8 MOV X0, X8
	0x032C86AC LDP X10, X1, [X9 + 0x198]
	0x032C86B0 BLR X10
	0x032C86B4 CMP W21, W0
	0x032C86B8 B.NE 0x32C8648
	0x032C86BC MOV X0, X20
	0x032C86C0 MOV X1, X31
	0x032C86C4 BL 0x32D6BF0
	0x032C86C8 MOV X20, X0
	0x032C86CC MOV X0, X19
	0x032C86D0 MOV X1, X31
	0x032C86D4 BL 0x32D6BF0
	0x032C86D8 MOV X8, X0
	0x032C86DC MOVZ W0, 0x1
	0x032C86E0 CBZ X20, 0x32C864C
	0x032C86E4 CBZ X8, 0x32C864C
	0x032C86E8 LDR W9, [X20 + 0x18]
	0x032C86EC LDR W10, [X8 + 0x18]
	0x032C86F0 CMP W9, W10
	0x032C86F4 B.NE 0x32C8648
	0x032C86F8 CMP W9, 0x1
	0x032C86FC B.LT 0x32C8748
	0x032C8700 MOV W10, W31
	0x032C8704 SUB W9, W31, W9
	0x032C8708 ADDS W31, W9, W10
	0x032C870C B.EQ 0x32C8754
	0x032C8710 SXTW X10, W10
	0x032C8714 ADD X11, X20, X10
	0x032C8718 ADD X12, X8, X10
	0x032C871C LDRB W11, [X11 + 0x20]
	0x032C8720 LDRB W12, [X12 + 0x20]
	0x032C8724 ADD W13, W9, W10
	0x032C8728 CMP W11, W12
	0x032C872C CSET W0, EQ
	0x032C8730 ADDS W31, W13, 0x1

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X23, 0x1115000
	011 Move W8, [X23+2234]
	012 Move W22, W5
	013 Move X21, X4
	014 Move X20, X3
	015 Move X19, X2
	016 Move X24, X1
	017 Move X25, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0xE5E000
	023 Move X0, [X0+2528]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+2234], W8
	027 Move [X31+12], W31
	028 Compare X24, 0
	029 JumpIfEqual {41}
	030 Move X0, X24
	031 Move X20, [X31+64]
	032 Move X19, [X31+72]
	033 Move X22, [X31+48]
	034 Move X21, [X31+56]
	035 Move X24, [X31+32]
	036 Move X23, [X31+40]
	037 Move X26, [X31+16]
	038 Move X25, [X31+24]
	039 Move X30, [X31+80]
	040 Return X0
	041 Move X23, [X25+16]
	042 Move [X31+8], W31
	043 Add X1, X31, 8
	044 Move X0, X23
	045 Move X2, X31
	046 Call Monitor.Enter, X0, X1
	047 Move X0, [X25+48]
	048 Compare X0, 0
	049 JumpIfEqual {85}
	050 Add X2, X31, 12
	051 Move W1, W19
	052 Call ResourceReader.LoadObject, X0, X1, X2
	053 Move X24, X0
	054 Move X25, X31
	055 Move W26, 3
	056 Move W8, [X31+8]
	057 Compare W8, 0
	058 JumpIfEqual {62}
	059 Move X0, X23
	060 Move X1, X31
	061 Call Monitor.Exit, X0
	062 Compare X25, 0
	063 JumpIfNotEqual {83}
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Compare W26, 0
	066 JumpIfNotEqual {30}
	067 Move W8, [X31+12]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move TEMP, X22
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfEqual {30}
	073 Compare X21, 0
	074 JumpIfEqual {86}
	075 Move X8, 0xE5E000
	076 Move X8, [X8+2528]
	077 Move X0, X21
	078 Move X1, X20
	079 Move X2, X24
	080 Move X4, [X8]
	081 Move X3, X19
	082 Call Dictionary`2<Object, ResourceLocator>.set_Item, X0, X1, X2
	083 Move X0, X25
	084 Call 0x1C17F18
	085 Call 0x1C17F20
	086 Call 0x1C17F20
	087 Move X24, X0
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X0, X24
	090 Call 0x3EB2AD0
	091 Move X25, [X0]
	092 Call 0x3EB2AE0
	093 Move W26, W31
	094 Move X24, X31
	095 Move X25, X31
	096 Move X24, X0
	097 Move W8, [X31+8]
	098 Compare W8, 0
	099 JumpIfEqual {103}
	100 Move X0, X23
	101 Move X1, X31
	102 Call Monitor.Exit, X0
	103 Compare X25, 0
	104 JumpIfNotEqual {107}
	105 Move X0, X24
	106 Call 0x1D2D690
	107 Move X0, X25
	108 Call 0x1C17F18
	109 Call 0x1991590

