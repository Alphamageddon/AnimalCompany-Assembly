Type: System.Resources.FastResourceComparer

Method: System.Int32 GetHashCode(System.Object key)

Disassembly:
	0x032C87A8 BL 0x1C16CF4
	0x032C87AC ADRP X0, 0xE5D000
	0x032C87B0 LDR X0, [X0 + 0xAB0]
	0x032C87B4 BL 0x1C16CF4
	0x032C87B8 ADRP X0, 0xE2B000
	0x032C87BC LDR X0, [X0 + 0x6C0]
	0x032C87C0 BL 0x1C16CF4
	0x032C87C4 MOVZ W8, 0x1
	0x032C87C8 STRB W8, [X22 + 0x8C8]
	0x032C87CC LDR X8, [X20]
	0x032C87D0 ADRP X9, 0xFFFFFFFFFD825000
	0x032C87D4 LDR V0, [X9 + 0xA20]
	0x032C87D8 LDR X8, [X8 + 0xB8]
	0x032C87DC STR D0, [X8]
	0x032C87E0 LDR X0, [X21]
	0x032C87E4 ADRP X21, 0xE5D000
	0x032C87E8 LDR X19, [X19]
	0x032C87EC LDR W8, [X0 + 0xE0]
	0x032C87F0 LDR X21, [X21 + 0xAA8]
	0x032C87F4 CBNZ W8, 0x32C87FC
	0x032C87F8 BL 0x1C16DFC
	0x032C87FC MOV X0, X19
	0x032C8800 MOV X1, X31
	0x032C8804 BL 0x338C698
	0x032C8808 LDR X8, [X20]
	0x032C880C MOV X1, X31
	0x032C8810 LDR X8, [X8 + 0xB8]
	0x032C8814 STR X0, [X8 + 0x8]
	0x032C8818 LDR X0, [X21]
	0x032C881C BL 0x338C698
	0x032C8820 CBZ X0, 0x32C88C4
	0x032C8824 LDR X8, [X0]
	0x032C8828 ADRP X19, 0xE5D000
	0x032C882C LDR X9, [X8 + 0x2E8]
	0x032C8830 LDR X1, [X8 + 0x2F0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1115000
	006 Move X21, 0xE5E000
	007 Move W8, [X20+2235]
	008 Move X21, [X21+2456]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xE5E000
	015 Move X0, [X0+2456]
	016 Call 0x1C17CF4
	017 Move X0, 0xE2E000
	018 Move X0, [X0+632]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+2235], W8
	022 Move X0, [X21]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfEqual {28}
	026 Compare X19, 0
	027 JumpIfNotEqual {31}
	028 Call 0x1C17DFC
	029 Compare X19, 0
	030 JumpIfEqual {36}
	031 Move X8, 0xE2E000
	032 Move X8, [X8+632]
	033 Move X1, [X8]
	034 Move X8, [X19]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X0, X19
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Move X0, X19
	042 Call 0x1C181E0

Method: System.Int32 GetHashCode(System.String key)

Disassembly:
	0x032C88A0 BLR X9
	0x032C88A4 LDR X8, [X20]
	0x032C88A8 LDP X20, X19, [X31 + 0x20]
	0x032C88AC LDP X22, X21, [X31 + 0x10]
	0x032C88B0 LDR X8, [X8 + 0xB8]
	0x032C88B4 STR X0, [X8 + 0x20]
	0x032C88B8 STR W31, [X8 + 0x28]
	0x032C88BC LDR X30, [X31], #0x30
	0x032C88C0 RET
	0x032C88C4 BL 0x1C16F20
	0x032C88C8 LDR W0, [X0 + 0x8]
	0x032C88CC RET
	0x032C88D0 LDR X0, [X0]
	0x032C88D4 RET
	0x032C88D8 STR X1, [X0]
	0x032C88DC RET
	0x032C88E0 SUB X31, X31, 0x30
	0x032C88E4 STP X30, X21, [X31 + 0x10]
	0x032C88E8 STP X20, X19, [X31 + 0x20]
	0x032C88EC ADRP X21, 0x1114000
	0x032C88F0 ADRP X20, 0xE57000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1115000
	006 Move X21, 0xE5E000
	007 Move W8, [X20+2236]
	008 Move X21, [X21+2456]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE5E000
	015 Move X0, [X0+2456]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2236], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call FastResourceComparer.HashFunction, X0
	030 Return X0

Method: System.Int32 HashFunction(System.String key)

Disassembly:
	0x032C8834 LDR X19, [X19 + 0xAB0]
	0x032C8838 BLR X9
	0x032C883C LDR X8, [X20]
	0x032C8840 MOV X1, X31
	0x032C8844 LDR X8, [X8 + 0xB8]
	0x032C8848 STR X0, [X8 + 0x10]
	0x032C884C LDR X0, [X19]
	0x032C8850 BL 0x338C698
	0x032C8854 CBZ X0, 0x32C88C4
	0x032C8858 LDR X8, [X0]
	0x032C885C LDR X9, [X8 + 0x2E8]
	0x032C8860 LDR X1, [X8 + 0x2F0]
	0x032C8864 BLR X9
	0x032C8868 LDR X8, [X20]
	0x032C886C MOV X1, X31
	0x032C8870 LDR X8, [X8 + 0xB8]
	0x032C8874 STR X0, [X8 + 0x18]
	0x032C8878 LDR X0, [X21]
	0x032C887C BL 0x338C698
	0x032C8880 CBZ X0, 0x32C88C4
	0x032C8884 LDR X8, [X0]
	0x032C8888 LDR X9, [X8 + 0x2F8]
	0x032C888C LDR X1, [X8 + 0x300]
	0x032C8890 BLR X9
	0x032C8894 CBZ X0, 0x32C88C4
	0x032C8898 LDR X8, [X0]
	0x032C889C LDP X9, X1, [X8 + 0x1B8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X0, 0
	006 JumpIfEqual {29}
	007 Move W8, [X0+16]
	008 Move X19, X0
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move W21, W31
	011 Move W20, 0x1505
	012 Move X0, X19
	013 Move W1, W21
	014 Move X2, X31
	015 Call String.get_Chars, X0, X1
	016 Move W8, [X19+16]
	017 Add W9, W20, W20
	018 And W10, W0, 0xFFFF
	019 Add W21, W21, 1
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Xor W20, W9, W10
	022 Move W20, 0x1505
	023 Move W0, W20
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Move X21, [X31+40]
	028 Return X0
	029 Call 0x1C17F20

Method: System.Int32 Compare(System.Object a, System.Object b)

Disassembly:
	0x032C88F4 LDRB W8, [X21 + 0x8D5]
	0x032C88F8 LDR X20, [X20 + 0xD0]
	0x032C88FC MOV X19, X0
	0x032C8900 TBNZ X8, 0x0, 0x32C8918
	0x032C8904 ADRP X0, 0xE57000
	0x032C8908 LDR X0, [X0 + 0xD0]
	0x032C890C BL 0x1C16CF4
	0x032C8910 MOVZ W8, 0x1
	0x032C8914 STRB W8, [X21 + 0x8D5]
	0x032C8918 ADD X0, X31, 0x0
	0x032C891C MOVZ W1, 0xC
	0x032C8920 MOV X2, X31
	0x032C8924 STP X31, X31, [X31]
	0x032C8928 BL 0x32AA0D0
	0x032C892C LDR X0, [X20]
	0x032C8930 BL 0x1C16F10
	0x032C8934 LDP X2, X3, [X31]
	0x032C8938 MOV X1, X31
	0x032C893C MOV X4, X31
	0x032C8940 MOV X20, X0
	0x032C8944 BL 0x32B095C
	0x032C8948 STR X20, [X19 + 0x60]
	0x032C894C MOV X0, X19
	0x032C8950 BL 0x32CB12C
	0x032C8954 LDP X20, X19, [X31 + 0x20]
	0x032C8958 LDP X30, X21, [X31 + 0x10]
	0x032C895C ADD X31, X31, 0x30
	0x032C8960 RET
	0x032C8964 CMP W1, 0x1
	0x032C8968 MOV X19, X0
	0x032C896C B.NE 0x32C8A38
	0x032C8970 MOV X0, X19
	0x032C8974 BL 0x3EB1AD0
	0x032C8978 MOV X19, X0
	0x032C897C ADRP X0, 0xE5D000
	0x032C8980 LDR X0, [X0 + 0x3D8]
	0x032C8984 BL 0x1C16D08
	0x032C8988 LDR X8, [X19]
	0x032C898C LDR X1, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1115000
	006 Move W8, [X21+2237]
	007 Move X19, X2
	008 Move X20, X1
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xE2E000
	014 Move X0, [X0+632]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2237], W8
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move X8, 0xE2E000
	020 Move X8, [X8+632]
	021 Move X1, [X8]
	022 Compare X19, 0
	023 JumpIfEqual {26}
	024 Move X8, [X19]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Compare X20, 0
	027 JumpIfEqual {30}
	028 Move X8, [X20]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X0, X20
	031 Move X1, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X2, X31
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Call String.CompareOrdinal, X0, X1
	038 Return X0
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move W0, W31
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Return X0
	045 Move X0, X19
	046 Call 0x1C181E0
	047 Move X0, X20
	048 Call 0x1C181E0

Method: System.Int32 Compare(System.String a, System.String b)

Disassembly:
	0x032C8990 BL 0x1C17270
	0x032C8994 TBZ X0, 0x0, 0x32C89F4
	0x032C8998 LDR X19, [X19]
	0x032C899C BL 0x3EB1AE0

ISIL:
	001 Move X0, X1
	002 Move X1, X2
	003 Move X2, X31
	004 Call String.CompareOrdinal, X0, X1
	005 Return X0

Method: System.Boolean Equals(System.String a, System.String b)

Disassembly:
	0x032C89A0 ADRP X0, 0xE5D000
	0x032C89A4 LDR X0, [X0 + 0xAB8]
	0x032C89A8 BL 0x1C16D08
	0x032C89AC MOV X1, X31

ISIL:
	001 Move X0, X1
	002 Move X1, X2
	003 Move X2, X31
	004 Call String.Equals, X0, X1
	005 Return X0

Method: System.Boolean Equals(System.Object a, System.Object b)

Disassembly:
	0x032C89B0 BL 0x33BDD84
	0x032C89B4 MOV X20, X0
	0x032C89B8 ADRP X0, 0xE5D000
	0x032C89BC LDR X0, [X0 + 0x4C8]
	0x032C89C0 BL 0x1C16D08
	0x032C89C4 BL 0x1C16F10
	0x032C89C8 MOV X1, X20
	0x032C89CC MOV X2, X19
	0x032C89D0 MOV X3, X31
	0x032C89D4 MOV X21, X0
	0x032C89D8 BL 0x3316800
	0x032C89DC ADRP X0, 0xE5D000
	0x032C89E0 LDR X0, [X0 + 0xAC0]
	0x032C89E4 BL 0x1C16D08
	0x032C89E8 MOV X1, X0
	0x032C89EC MOV X0, X21
	0x032C89F0 BL 0x1C16DEC
	0x032C89F4 ADRP X0, 0xE35000
	0x032C89F8 LDR X0, [X0 + 0xF78]
	0x032C89FC BL 0x1C16D08
	0x032C8A00 LDR X8, [X19]
	0x032C8A04 LDR X1, [X8]
	0x032C8A08 BL 0x1C17270
	0x032C8A0C TBNZ X0, 0x0, 0x32C8998
	0x032C8A10 MOVZ W0, 0x8
	0x032C8A14 BL 0x3EB1AF0
	0x032C8A18 LDR X8, [X19]
	0x032C8A1C STR X8, [X0]
	0x032C8A20 ADRP X1, 0xBEC000
	0x032C8A24 ADD X1, X1, 0xE58
	0x032C8A28 MOV X2, X31
	0x032C8A2C BL 0x3EB1B00
	0x032C8A30 MOV X19, X0
	0x032C8A34 BL 0x3EB1AE0
	0x032C8A38 MOV X0, X19
	0x032C8A3C BL 0x1D2C690
	0x032C8A40 BL 0x1990590
	0x032C8A44 STP X30, X19, [X31 - 0x10]!
	0x032C8A48 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1115000
	006 Move W8, [X21+2238]
	007 Move X19, X2
	008 Move X20, X1
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xE2E000
	014 Move X0, [X0+632]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2238], W8
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move X8, 0xE2E000
	020 Move X8, [X8+632]
	021 Move X1, [X8]
	022 Compare X19, 0
	023 JumpIfEqual {26}
	024 Move X8, [X19]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Compare X20, 0
	027 JumpIfEqual {30}
	028 Move X8, [X20]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X0, X20
	031 Move X1, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X2, X31
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Call String.Equals, X0, X1
	038 Return X0
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move W0, 1
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Return X0
	045 Move X0, X19
	046 Call 0x1C181E0
	047 Move X0, X20
	048 Call 0x1C181E0

Method: System.Int32 CompareOrdinal(System.String a, System.Byte[] bytes, System.Int32 bCharLength)

Disassembly:
	0x032C8A4C LDR X0, [X0 + 0x10]
	0x032C8A50 CBZ X0, 0x32C8A7C
	0x032C8A54 STR X31, [X19 + 0x18]
	0x032C8A58 TBZ X1, 0x0, 0x32C8A6C
	0x032C8A5C STR X31, [X19 + 0x10]
	0x032C8A60 LDR X8, [X0]
	0x032C8A64 LDP X9, X1, [X8 + 0x198]
	0x032C8A68 BLR X9
	0x032C8A6C MOVI V0.2D, 0x0
	0x032C8A70 STR X31, [X19 + 0x10]
	0x032C8A74 STR X31, [X19 + 0x70]
	0x032C8A78 STP V0, V0, [X19 + 0x30]
	0x032C8A7C LDP X30, X19, [X31], #0x10
	0x032C8A80 RET
	0x032C8A84 STP X30, X19, [X31 - 0x10]!
	0x032C8A88 MOV X8, X0
	0x032C8A8C MOV X19, X0
	0x032C8A90 LDR X0, [X8 + 0x10]!
	0x032C8A94 CBZ X0, 0x32C8AB8
	0x032C8A98 STP X31, X31, [X8]
	0x032C8A9C LDR X8, [X0]
	0x032C8AA0 LDP X9, X1, [X8 + 0x198]
	0x032C8AA4 BLR X9
	0x032C8AA8 MOVI V0.2D, 0x0
	0x032C8AAC STR X31, [X19 + 0x10]
	0x032C8AB0 STR X31, [X19 + 0x70]
	0x032C8AB4 STP V0, V0, [X19 + 0x30]
	0x032C8AB8 LDP X30, X19, [X31], #0x10
	0x032C8ABC RET
	0x032C8AC0 LDR W0, [X0]
	0x032C8AC4 RET
	0x032C8AC8 STR X30, [X31 - 0x20]!
	0x032C8ACC STP X20, X19, [X31 + 0x10]
	0x032C8AD0 MOV X20, X0
	0x032C8AD4 LDR X0, [X0 + 0x10]
	0x032C8AD8 CBZ X0, 0x32C8B24
	0x032C8ADC MOV X1, X31
	0x032C8AE0 BL 0x32F5EE4
	0x032C8AE4 TBNZ X0, 0x1F, 0x32C8B28
	0x032C8AE8 MOV W19, W0
	0x032C8AEC LDR X0, [X20 + 0x10]
	0x032C8AF0 CBZ X0, 0x32C8B24
	0x032C8AF4 LDR X8, [X0]
	0x032C8AF8 LDP X9, X1, [X8 + 0x188]
	0x032C8AFC BLR X9
	0x032C8B00 CBZ X0, 0x32C8B24

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Compare X0, 0
	009 JumpIfEqual {52}
	010 Move W9, [X0+16]
	011 Move W19, W2
	012 Move X20, X0
	013 NotImplemented "Instruction CMP not yet implemented."
	014 NotImplemented "Instruction CSEL not yet implemented."
	015 Compare W2, 0
	016 JumpIfEqual {23}
	017 Compare X1, 0
	018 JumpIfEqual {25}
	019 Move W9, [X1+24]
	020 Add X10, X1, 32
	021 NotImplemented "Instruction CMP not yet implemented."
	022 NotImplemented "Instruction CSEL not yet implemented."
	023 NotImplemented "Instruction CMP not yet implemented."
	024 NotImplemented "Instruction CSINV not yet implemented."
	025 Move X22, X31
	026 Subtract W23, W8, 1
	027 Move W21, W31
	028 NotImplemented "Instruction LDRH not yet implemented."
	029 Move X0, X20
	030 Move W1, W21
	031 Move X2, X31
	032 Call String.get_Chars, X0, X1
	033 And W8, W0, 0xFFFF
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Subtract W0, W8, W24
	036 Add W21, W21, 1
	037 Add X22, X22, 2
	038 Compare W0, 0
	039 JumpIfEqual {28}
	040 Compare W0, 0
	041 JumpIfNotEqual {44}
	042 Move W8, [X20+16]
	043 Subtract W0, W8, W19
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return X0
	052 Call 0x1C17F20

Method: System.Int32 CompareOrdinal(System.Byte[] bytes, System.Int32 aCharLength, System.String b)

Disassembly:
	0x032C8B04 LDR X8, [X0]
	0x032C8B08 MOV W1, W19
	0x032C8B0C LDP X20, X19, [X31 + 0x10]
	0x032C8B10 MOVZ W2, 0x1
	0x032C8B14 LDR X4, [X8 + 0x338]
	0x032C8B18 LDR X3, [X8 + 0x340]
	0x032C8B1C LDR X30, [X31], #0x20
	0x032C8B20 BR X4
	0x032C8B24 BL 0x1C16F20
	0x032C8B28 ADRP X0, 0xE5D000
	0x032C8B2C LDR X0, [X0 + 0xAC8]
	0x032C8B30 BL 0x1C16D08
	0x032C8B34 MOV X1, X31
	0x032C8B38 BL 0x33BDD84
	0x032C8B3C MOV X19, X0
	0x032C8B40 ADRP X0, 0xE5D000
	0x032C8B44 LDR X0, [X0 + 0x4C8]
	0x032C8B48 BL 0x1C16D08
	0x032C8B4C BL 0x1C16F10
	0x032C8B50 MOV X1, X19
	0x032C8B54 MOV X2, X31
	0x032C8B58 MOV X20, X0
	0x032C8B5C BL 0x33167DC
	0x032C8B60 ADRP X0, 0xE5D000
	0x032C8B64 LDR X0, [X0 + 0xAD0]
	0x032C8B68 BL 0x1C16D08
	0x032C8B6C MOV X1, X0
	0x032C8B70 MOV X0, X20
	0x032C8B74 BL 0x1C16DEC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1115000
	008 Move X23, 0xE5E000
	009 Move W8, [X22+2239]
	010 Move X23, [X23+2456]
	011 Move X20, X2
	012 Move W19, W1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xE5E000
	019 Move X0, [X0+2456]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2239], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X21
	030 Move W2, W19
	031 Call FastResourceComparer.CompareOrdinal, X0, X1, X2
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Subtract W0, W31, W0
	037 Move X30, [X31+48]
	038 Move X23, [X31+56]
	039 Return X0

Method: System.Int32 CompareOrdinal(System.Byte* a, System.Int32 byteLen, System.String b)

Disassembly:
	0x032C8B78 STR X30, [X31 - 0x10]!
	0x032C8B7C LDR X8, [X0 + 0x70]
	0x032C8B80 CBZ X8, 0x32C8B90
	0x032C8B84 LDR X8, [X0 + 0x38]
	0x032C8B88 LDR W0, [X8, W1, SXTW]
	0x032C8B8C B 0x32C8BAC
	0x032C8B90 LDR X8, [X0 + 0x30]
	0x032C8B94 CBZ X8, 0x32C8BB4
	0x032C8B98 LDR W9, [X8 + 0x18]
	0x032C8B9C CMP W9, W1
	0x032C8BA0 B.LS 0x32C8BB8
	0x032C8BA4 ADD X8, X8, W1, 0x2, SXTW
	0x032C8BA8 LDR W0, [X8 + 0x20]
	0x032C8BAC LDR X30, [X31], #0x10
	0x032C8BB0 RET
	0x032C8BB4 BL 0x1C16F20
	0x032C8BB8 BL 0x1C16F28
	0x032C8BBC STR X30, [X31 - 0x20]!
	0x032C8BC0 STP X20, X19, [X31 + 0x10]
	0x032C8BC4 LDR X8, [X0 + 0x70]
	0x032C8BC8 CBZ X8, 0x32C8BDC
	0x032C8BCC LDR X8, [X0 + 0x48]
	0x032C8BD0 LDR W8, [X8, W1, SXTW]
	0x032C8BD4 TBZ X8, 0x1F, 0x32C8BFC
	0x032C8BD8 B 0x32C8C1C
	0x032C8BDC LDR X8, [X0 + 0x40]
	0x032C8BE0 CBZ X8, 0x32C8CCC
	0x032C8BE4 LDR W9, [X8 + 0x18]
	0x032C8BE8 CMP W9, W1
	0x032C8BEC B.LS 0x32C8CD0
	0x032C8BF0 ADD X8, X8, W1, 0x2, SXTW
	0x032C8BF4 LDR W8, [X8 + 0x20]
	0x032C8BF8 TBNZ X8, 0x1F, 0x32C8C1C
	0x032C8BFC LDP X10, X9, [X0 + 0x20]
	0x032C8C00 SUB X9, X9, X10
	0x032C8C04 CMP X9, W8, UXTW

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Compare X2, 0
	009 JumpIfEqual {42}
	010 Move W8, [X2+16]
	011 NotImplemented "Instruction SBFM not yet implemented."
	012 Move X20, X2
	013 Move W19, W1
	014 NotImplemented "Instruction CMP not yet implemented."
	015 NotImplemented "Instruction CSEL not yet implemented."
	016 Subtract W23, W8, 1
	017 Move X21, X0
	018 Move W22, W31
	019 NotImplemented "Instruction LDRH not yet implemented."
	020 Move X0, X20
	021 Move W1, W22
	022 Move X2, X31
	023 Call String.get_Chars, X0, X1
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Subtract W0, W24, W0
	026 Add W22, W22, 1
	027 Add X21, X21, 2
	028 Compare W0, 0
	029 JumpIfEqual {19}
	030 Compare W0, 0
	031 JumpIfNotEqual {34}
	032 Move W8, [X20+16]
	033 Subtract W0, W19, W8
	034 Move X20, [X31+48]
	035 Move X19, [X31+56]
	036 Move X22, [X31+32]
	037 Move X21, [X31+40]
	038 Move X24, [X31+16]
	039 Move X23, [X31+24]
	040 Move X30, [X31+64]
	041 Return X0
	042 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x032C8C08 B.LT 0x32C8C1C
	0x032C8C0C LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void .cctor()

Disassembly:
	0x032C8C10 MOV W0, W8
	0x032C8C14 LDR X30, [X31], #0x20
	0x032C8C18 RET
	0x032C8C1C ADRP X0, 0xE2B000
	0x032C8C20 LDR X0, [X0 + 0x9D0]
	0x032C8C24 MOV W20, W8
	0x032C8C28 BL 0x1C16D08
	0x032C8C2C MOVZ W1, 0x1
	0x032C8C30 BL 0x1C16D6C
	0x032C8C34 MOV X19, X0
	0x032C8C38 STR W20, [X31 + 0xC]
	0x032C8C3C ADRP X0, 0xE2B000
	0x032C8C40 LDR X0, [X0 + 0x758]
	0x032C8C44 BL 0x1C16D08
	0x032C8C48 ADD X1, X31, 0xC
	0x032C8C4C BL 0x1C16E04
	0x032C8C50 MOV X20, X0
	0x032C8C54 MOV X0, X19
	0x032C8C58 BL 0x19903C0
	0x032C8C5C MOV X0, X19
	0x032C8C60 MOV X1, X20
	0x032C8C64 BL 0x19980B4
	0x032C8C68 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x1115000
	005 Move X20, 0xE5E000
	006 Move W8, [X19+2240]
	007 Move X20, [X20+2456]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xE5E000
	013 Move X0, [X0+2456]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2240], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

