Type: System.TermInfoReader

Method: System.Void .ctor(System.String term, System.String filename)

Disassembly:
	0x033CDB9C B 0x33CDC04
	0x033CDBA0 LDR X1, [X19 + 0x48]
	0x033CDBA4 MOV X0, X19
	0x033CDBA8 BL 0x33CCB74
	0x033CDBAC STR X31, [X19 + 0x18]
	0x033CDBB0 LDP X20, X19, [X31 + 0x10]
	0x033CDBB4 LDP X30, X21, [X31], #0x20
	0x033CDBB8 RET
	0x033CDBBC LDR W8, [X19 + 0x18]
	0x033CDBC0 ADD W9, W8, 0x7
	0x033CDBC4 CMP W8, 0x0
	0x033CDBC8 CSEL W9, W9, W8, LT
	0x033CDBCC AND W9, W9, 0xFFFFFFF8
	0x033CDBD0 SUB W8, W8, W9
	0x033CDBD4 SUB W20, W8, 0x8
	0x033CDBD8 MOV X0, X19
	0x033CDBDC BL 0x33CDA2C
	0x033CDBE0 ADDS W20, W20, 0x1
	0x033CDBE4 B.CC 0x33CDBD8
	0x033CDBE8 ADRP X8, 0xD52000
	0x033CDBEC LDR X8, [X8 + 0xB8]
	0x033CDBF0 MOV X0, X19
	0x033CDBF4 LDP X20, X19, [X31 + 0x10]
	0x033CDBF8 LDR X1, [X8]
	0x033CDBFC LDP X30, X21, [X31], #0x20
	0x033CDC00 B 0x33CCB74
	0x033CDC04 STR X30, [X31 - 0x30]!
	0x033CDC08 STP X22, X21, [X31 + 0x10]
	0x033CDC0C STP X20, X19, [X31 + 0x20]
	0x033CDC10 ADRP X22, 0x1010000
	0x033CDC14 LDRB W8, [X22 + 0x2AE]
	0x033CDC18 MOV W19, W2
	0x033CDC1C MOV W20, W1
	0x033CDC20 MOV X21, X0
	0x033CDC24 TBNZ X8, 0x0, 0x33CDC3C
	0x033CDC28 ADRP X0, 0xD5F000
	0x033CDC2C LDR X0, [X0 + 0xB30]
	0x033CDC30 BL 0x1C16CF4
	0x033CDC34 MOVZ W8, 0x1
	0x033CDC38 STRB W8, [X22 + 0x2AE]
	0x033CDC3C LDRB W8, [X21 + 0xA0]
	0x033CDC40 CBNZ W8, 0x33CDC4C
	0x033CDC44 MOV X0, X21
	0x033CDC48 BL 0x33CCEF0
	0x033CDC4C MOV X0, X21
	0x033CDC50 BL 0x33CE3DC
	0x033CDC54 TBNZ X20, 0x1F, 0x33CDCE0
	0x033CDC58 LDR W8, [X21 + 0x7C]
	0x033CDC5C CMP W8, W20
	0x033CDC60 B.LE 0x33CDCE0
	0x033CDC64 TBNZ X19, 0x1F, 0x33CDD10
	0x033CDC68 LDR W8, [X21 + 0x78]
	0x033CDC6C CMP W8, W19
	0x033CDC70 B.LE 0x33CDD10
	0x033CDC74 LDR X22, [X21 + 0xC8]
	0x033CDC78 CBZ X22, 0x33CDD5C
	0x033CDC7C ADRP X8, 0xD5F000
	0x033CDC80 LDR X8, [X8 + 0xB30]
	0x033CDC84 MOVZ W1, 0x2
	0x033CDC88 LDR X0, [X8]
	0x033CDC8C BL 0x1C16D6C
	0x033CDC90 CBZ X0, 0x33CDDA4
	0x033CDC94 LDR W8, [X0 + 0x18]
	0x033CDC98 MOV X1, X0
	0x033CDC9C CBZ W8, 0x33CDD58
	0x033CDCA0 MOV W9, W19
	0x033CDCA4 CMP W8, 0x1
	0x033CDCA8 STP X9, X31, [X1 + 0x20]
	0x033CDCAC B.EQ 0x33CDD58
	0x033CDCB0 MOV W8, W20
	0x033CDCB4 MOV X0, X22
	0x033CDCB8 STP X8, X31, [X1 + 0x30]
	0x033CDCBC BL 0x33CE158
	0x033CDCC0 MOV X1, X0
	0x033CDCC4 MOV X0, X21
	0x033CDCC8 BL 0x33CCB74
	0x033CDCCC STP W20, W19, [X21 + 0x18]
	0x033CDCD0 LDP X20, X19, [X31 + 0x20]
	0x033CDCD4 LDP X22, X21, [X31 + 0x10]
	0x033CDCD8 LDR X30, [X31], #0x30
	0x033CDCDC RET
	0x033CDCE0 ADRP X0, 0xD2E000
	0x033CDCE4 LDR X0, [X0 + 0x760]
	0x033CDCE8 BL 0x1C16D08
	0x033CDCEC BL 0x1C16F10
	0x033CDCF0 MOV X19, X0
	0x033CDCF4 ADRP X0, 0xD5F000
	0x033CDCF8 LDR X0, [X0 + 0xB38]
	0x033CDCFC BL 0x1C16D08
	0x033CDD00 MOV X20, X0
	0x033CDD04 ADRP X0, 0xD5F000
	0x033CDD08 LDR X0, [X0 + 0xB40]
	0x033CDD0C B 0x33CDD3C
	0x033CDD10 ADRP X0, 0xD2E000
	0x033CDD14 LDR X0, [X0 + 0x760]
	0x033CDD18 BL 0x1C16D08
	0x033CDD1C BL 0x1C16F10
	0x033CDD20 MOV X19, X0
	0x033CDD24 ADRP X0, 0xD5F000
	0x033CDD28 LDR X0, [X0 + 0xB48]
	0x033CDD2C BL 0x1C16D08
	0x033CDD30 MOV X20, X0
	0x033CDD34 ADRP X0, 0xD5F000
	0x033CDD38 LDR X0, [X0 + 0xB50]
	0x033CDD3C BL 0x1C16D08
	0x033CDD40 MOV X2, X0
	0x033CDD44 MOV X0, X19
	0x033CDD48 MOV X1, X20
	0x033CDD4C MOV X3, X31
	0x033CDD50 BL 0x3311888
	0x033CDD54 B 0x33CDD8C
	0x033CDD58 BL 0x1C16F28
	0x033CDD5C ADRP X0, 0xD26000
	0x033CDD60 LDR X0, [X0 + 0xB40]
	0x033CDD64 BL 0x1C16D08
	0x033CDD68 BL 0x1C16F10
	0x033CDD6C MOV X19, X0
	0x033CDD70 ADRP X0, 0xD5F000
	0x033CDD74 LDR X0, [X0 + 0xB58]
	0x033CDD78 BL 0x1C16D08
	0x033CDD7C MOV X1, X0
	0x033CDD80 MOV X0, X19
	0x033CDD84 MOV X2, X31
	0x033CDD88 BL 0x3379A44
	0x033CDD8C ADRP X0, 0xD5F000
	0x033CDD90 LDR X0, [X0 + 0xB60]
	0x033CDD94 BL 0x1C16D08
	0x033CDD98 MOV X1, X0
	0x033CDD9C MOV X0, X19
	0x033CDDA0 BL 0x1C16DEC
	0x033CDDA4 BL 0x1C16F20
	0x033CDDA8 STP X30, X19, [X31 - 0x10]!
	0x033CDDAC AND W1, W1, 0xFFFF
	0x033CDDB0 MOV W2, W31
	0x033CDDB4 MOV X19, X0
	0x033CDDB8 BL 0x33CDDD0
	0x033CDDBC AND X2, X1, 0x0
	0x033CDDC0 MOV X1, X0
	0x033CDDC4 MOV X0, X19
	0x033CDDC8 LDP X30, X19, [X31], #0x10
	0x033CDDCC B 0x33CDAF0
	0x033CDDD0 CMP W1, 0x13
	0x033CDDD4 B.LE 0x33CDE0C
	0x033CDDD8 SUB W8, W1, 0x2A
	0x033CDDDC CMP W8, 0x5
	0x033CDDE0 B.HI 0x33CDE6C
	0x033CDDE4 ADRP X9, 0xFFFFFFFFFD7C9000
	0x033CDDE8 ADD X9, X9, 0x944
	0x033CDDEC ADR X10, 0x10
	0x033CDDF0 LDRB W11, [X9, X8, LSL]
	0x033CDDF4 ADD X10, X10, X11, 0x2, LSL
	0x033CDDF8 BR X10
	0x033CDDFC MOV W5, W31
	0x033CDE00 MOV W3, W31
	0x033CDE04 MOVZ W8, 0x6A
	0x033CDE08 B 0x33CDE34
	0x033CDE0C CMP W1, 0x13
	0x033CDE10 B.HI 0x33CDEAC
	0x033CDE14 MOVZ W8, 0x1
	0x033CDE18 LSLV W8, W8, W1
	0x033CDE1C MOVZ W9, 0x3300
	0x033CDE20 ANDS W31, W8, W9, 0x0
	0x033CDE24 B.EQ 0x33CDE8C
	0x033CDE28 MOV W5, W31
	0x033CDE2C MOV W3, W31
	0x033CDE30 MOV W8, W1
	0x033CDE34 SUB X31, X31, 0x20
	0x033CDE38 STR X30, [X31 + 0x10]
	0x033CDE3C AND W4, W2, 0x1
	0x033CDE40 ADD X0, X31, 0x0
	0x033CDE44 MOV W2, W8
	0x033CDE48 MOV X6, X31
	0x033CDE4C STR W31, [X31 + 0x8]
	0x033CDE50 STR X31, [X31]
	0x033CDE54 BL 0x339D33C
	0x033CDE58 LDR X0, [X31]
	0x033CDE5C LDR W1, [X31 + 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1011000
	007 Move W8, [X21+722]
	008 Move X19, X2
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xD27000
	015 Move X0, [X0+1560]
	016 Call 0x1C17CF4
	017 Move X0, 0xD27000
	018 Move X0, [X0+3584]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+722], W8
	022 Move X22, 0xD27000
	023 Move X22, [X22+3584]
	024 Move X0, X19
	025 Move X1, X31
	026 Call File.OpenRead, X0
	027 Move X19, X0
	028 Compare X0, 0
	029 JumpIfEqual {96}
	030 Move X8, [X19]
	031 Move X9, [X8+488]
	032 Move X1, [X8+496]
	033 Move X0, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X1, X0
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X8, 0xD27000
	038 Move X8, [X8+1560]
	039 Move X0, [X8]
	040 Call 0x1C17D6C
	041 Move X1, X0
	042 Move [X20+32], X1
	043 Compare X1, 0
	044 JumpIfEqual {117}
	045 Move X8, [X19]
	046 Move W3, [X1+24]
	047 Move X9, [X8+856]
	048 Move X4, [X8+864]
	049 Move X0, X19
	050 Move W2, W31
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move X8, [X20+32]
	053 Compare X8, 0
	054 JumpIfEqual {118}
	055 Move W9, [X8+24]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Add X21, X20, 40
	058 Move X0, X20
	059 Move X1, X8
	060 Move X2, X21
	061 Call TermInfoReader.ReadHeader, X0, X1, X2
	062 Move X1, [X20+32]
	063 Move X0, X20
	064 Move X2, X21
	065 Call TermInfoReader.ReadNames, X0, X1, X2
	066 Move X20, X31
	067 Move X8, [X19]
	068 Move X1, [X22]
	069 NotImplemented "Instruction LDRH not yet implemented."
	070 Compare X9, 0
	071 JumpIfEqual {78}
	072 Move X10, [X8+176]
	073 Add X10, X10, 8
	074 NotImplemented "Instruction LDUR not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Subtract X9, X9, 1
	077 Add X10, X10, 16
	078 Move X0, X19
	079 Move W2, W31
	080 Call 0x1C5D788
	081 NotImplemented "Instruction LDRSW not yet implemented."
	082 Add X8, X8, X9
	083 Add X0, X8, 312
	084 Move X8, [X0]
	085 Move X1, [X0+8]
	086 Move X0, X19
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Compare X20, 0
	089 JumpIfNotEqual {97}
	090 Move X20, [X31+32]
	091 Move X19, [X31+40]
	092 Move X22, [X31+16]
	093 Move X21, [X31+24]
	094 Move X30, [X31+48]
	095 Return 
	096 Call 0x1C17F20
	097 Move X0, X20
	098 Call 0x1C17F18
	099 Move X0, 0xD27000
	100 Move X0, [X0+2000]
	101 Call 0x1C17D08
	102 Call 0x1C17F10
	103 Move X20, X0
	104 Move X0, 0xD60000
	105 Move X0, [X0+2744]
	106 Call 0x1C17D08
	107 Move X1, X0
	108 Move X0, X20
	109 Move X2, X31
	110 Call Exception..ctor, X0, X1
	111 Move X0, 0xD60000
	112 Move X0, [X0+2752]
	113 Call 0x1C17D08
	114 Move X1, X0
	115 Move X0, X20
	116 Call 0x1C17DEC
	117 Call 0x1C17F20
	118 Call 0x1C17F20
	119 Move X0, 0xD27000
	120 Move X0, [X0+2000]
	121 Call 0x1C17D08
	122 Call 0x1C17F10
	123 Move X20, X0
	124 Move X0, 0xD60000
	125 Move X0, [X0+2760]
	126 Call 0x1C17D08
	127 Move X1, X0
	128 Move X0, X20
	129 Move X2, X31
	130 Call Exception..ctor, X0, X1
	131 Move X0, 0xD60000
	132 Move X0, [X0+2752]
	133 Call 0x1C17D08
	134 Move X1, X0
	135 Move X0, X20
	136 Call 0x1C17DEC
	137 Move X21, X0
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X0, X21
	140 Call 0x3EB2AD0
	141 Move X20, [X0]
	142 Call 0x3EB2AE0
	143 Compare X19, 0
	144 JumpIfNotEqual {67}
	145 Move X20, X31
	146 Move X21, X0
	147 Compare X19, 0
	148 JumpIfEqual {170}
	149 Move X8, [X19]
	150 Move X1, [X22]
	151 NotImplemented "Instruction LDRH not yet implemented."
	152 Compare X9, 0
	153 JumpIfEqual {160}
	154 Move X10, [X8+176]
	155 Add X10, X10, 8
	156 NotImplemented "Instruction LDUR not yet implemented."
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Subtract X9, X9, 1
	159 Add X10, X10, 16
	160 Move X0, X19
	161 Move W2, W31
	162 Call 0x1C5D788
	163 NotImplemented "Instruction LDRSW not yet implemented."
	164 Add X8, X8, X9
	165 Add X0, X8, 312
	166 Move X8, [X0]
	167 Move X1, [X0+8]
	168 Move X0, X19
	169 NotImplemented "Instruction BLR not yet implemented."
	170 Compare X20, 0
	171 JumpIfNotEqual {174}
	172 Move X0, X21
	173 Call 0x1D2D690
	174 Move X0, X20
	175 Call 0x1C17F18
	176 Call 0x1991590

Method: System.Void .ctor(System.String term, System.Byte[] buffer)

Disassembly:
	0x033CDE60 LDR X30, [X31 + 0x10]
	0x033CDE64 ADD X31, X31, 0x20
	0x033CDE68 RET
	0x033CDE6C CMP W1, 0x1B
	0x033CDE70 B.EQ 0x33CDE28
	0x033CDE74 CMP W1, 0x20
	0x033CDE78 B.NE 0x33CDEAC
	0x033CDE7C MOV W5, W31
	0x033CDE80 MOV W3, W31
	0x033CDE84 MOVZ W8, 0x20
	0x033CDE88 B 0x33CDE34
	0x033CDE8C CMP W1, 0xA
	0x033CDE90 B.EQ 0x33CDF28
	0x033CDE94 CMP W1, 0x13
	0x033CDE98 B.NE 0x33CDEAC
	0x033CDE9C MOV W5, W31
	0x033CDEA0 MOV W3, W31
	0x033CDEA4 MOVZ W8, 0x13
	0x033CDEA8 B 0x33CDE34
	0x033CDEAC SUB W8, W1, 0x1
	0x033CDEB0 CMP W8, 0x19
	0x033CDEB4 B.LS 0x33CDEE8
	0x033CDEB8 SUB W8, W1, 0x61
	0x033CDEBC CMP W8, 0x19
	0x033CDEC0 B.LS 0x33CDF38
	0x033CDEC4 SUB W8, W1, 0x41
	0x033CDEC8 CMP W8, 0x1A
	0x033CDECC B.CC 0x33CDF48
	0x033CDED0 SUB W8, W1, 0x30
	0x033CDED4 CMP W8, 0xA
	0x033CDED8 MOV W5, W31
	0x033CDEDC MOV W3, W31
	0x033CDEE0 CSEL W8, W1, W31, CC
	0x033CDEE4 B 0x33CDE34

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X2, 0
	006 JumpIfEqual {23}
	007 Add X21, X0, 40
	008 Move X19, X2
	009 Move [X0+32], X2
	010 Move X1, X2
	011 Move X2, X21
	012 Move X20, X0
	013 Call TermInfoReader.ReadHeader, X0, X1, X2
	014 Move X0, X20
	015 Move X1, X19
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X2, X21
	019 Move X30, [X31+32]
	020 Move X21, [X31+40]
	021 Call TermInfoReader.ReadNames, X0, X1, X2
	022 Return 
	023 Move X0, 0xD2C000
	024 Move X0, [X0+1320]
	025 Call 0x1C17D08
	026 Call 0x1C17F10
	027 Move X19, X0
	028 Move X0, 0xD52000
	029 Move X0, [X0+3912]
	030 Call 0x1C17D08
	031 Move X1, X0
	032 Move X0, X19
	033 Move X2, X31
	034 Call ArgumentNullException..ctor, X0, X1
	035 Move X0, 0xD60000
	036 Move X0, [X0+2768]
	037 Call 0x1C17D08
	038 Move X1, X0
	039 Move X0, X19
	040 Call 0x1C17DEC

Method: System.Void DetermineVersion(System.Int16 magic)

Disassembly:
	0x033D3B54 B.LE 0x33D3B74
	0x033D3B58 MOV X0, X20
	0x033D3B5C MOV W1, W25
	0x033D3B60 MOV X3, X31
	0x033D3B64 BL 0x3228DE4
	0x033D3B68 CBZ X21, 0x33D41A4
	0x033D3B6C MOV X1, X0
	0x033D3B70 B 0x33D3B90
	0x033D3B74 B.NE 0x33D3B98
	0x033D3B78 CBZ X21, 0x33D41A4
	0x033D3B7C ADRP X8, 0xD22000
	0x033D3B80 LDR X8, [X8 + 0x278]
	0x033D3B84 LDR X8, [X8]
	0x033D3B88 LDR X8, [X8 + 0xB8]
	0x033D3B8C LDR X1, [X8]
	0x033D3B90 MOV X0, X21
	0x033D3B94 BL 0x33D4ED8
	0x033D3B98 CBZ W26, 0x33D417C
	0x033D3B9C LDR W8, [X20 + 0x10]
	0x033D3BA0 CMP W24, W8
	0x033D3BA4 B.GE 0x33D417C
	0x033D3BA8 ADRP X28, 0xD59000
	0x033D3BAC LDR X28, [X28 + 0xCB0]
	0x033D3BB0 AND W27, W22, W23, 0x0
	0x033D3BB4 MOV X0, X20
	0x033D3BB8 MOV W1, W24
	0x033D3BBC MOV X2, X31
	0x033D3BC0 BL 0x3222A1C
	0x033D3BC4 AND W8, W0, 0xFFFF
	0x033D3BC8 CMP W8, 0x2A
	0x033D3BCC B.HI 0x33D3C4C
	0x033D3BD0 CMP W8, 0x26
	0x033D3BD4 B.EQ 0x33D3D80
	0x033D3BD8 CMP W8, 0x2A
	0x033D3BDC B.NE 0x33D4210
	0x033D3BE0 CBZ X21, 0x33D41A4
	0x033D3BE4 LDRB W8, [X21 + 0x38]
	0x033D3BE8 CBNZ W8, 0x33D42B4
	0x033D3BEC LDR W8, [X20 + 0x10]
	0x033D3BF0 ADD W9, W24, 0x1
	0x033D3BF4 CMP W9, W8
	0x033D3BF8 B.GE 0x33D3DD0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 And W8, W1, 0xFFFF
	005 NotImplemented "Instruction CMP not yet implemented."
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move W8, 4
	008 Move W8, 2
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move [X0+44], W8
	012 Move X30, [X31+32]
	013 Return 
	014 NotImplemented "Instruction STRH not yet implemented."
	015 Move X0, 0xD25000
	016 Move X0, [X0+1576]
	017 Call 0x1C17D08
	018 Add X1, X31, 12
	019 Call 0x1C17E04
	020 Move X19, X0
	021 Move X0, 0xD5A000
	022 Move X0, [X0+3096]
	023 Call 0x1C17D08
	024 Move X1, X19
	025 Move X2, X31
	026 Call String.Format, X0, X1
	027 Move X19, X0
	028 Move X0, 0xD21000
	029 Move X0, [X0+2000]
	030 Call 0x1C17D08
	031 Call 0x1C17F10
	032 Move X1, X19
	033 Move X2, X31
	034 Move X20, X0
	035 Call Exception..ctor, X0, X1
	036 Move X0, 0xD5A000
	037 Move X0, [X0+3104]
	038 Call 0x1C17D08
	039 Move X1, X0
	040 Move X0, X20
	041 Call 0x1C17DEC

Method: System.Void ReadHeader(System.Byte[] buffer, ref System.Int32 position)

Disassembly:
	0x033D3A60 MOV X2, X31
	0x033D3A64 BL 0x3222A1C
	0x033D3A68 AND W8, W0, 0xFFFF
	0x033D3A6C CMP W8, 0x5A
	0x033D3A70 B.GT 0x33D3ABC
	0x033D3A74 SUB W8, W8, 0x26
	0x033D3A78 CMP W8, 0x6
	0x033D3A7C B.HI 0x33D3ADC
	0x033D3A80 ADR X9, 0x10
	0x033D3A84 LDRH W10, [X26, X8, LSL #1]
	0x033D3A88 ADD X9, X9, X10, 0x2, LSL
	0x033D3A8C BR X9
	0x033D3A90 SUB W2, W24, W25
	0x033D3A94 MOV X0, X20
	0x033D3A98 MOV W1, W25
	0x033D3A9C MOV X3, X31
	0x033D3AA0 BL 0x3228DE4
	0x033D3AA4 CBZ X21, 0x33D41A4
	0x033D3AA8 MOV X1, X0
	0x033D3AAC MOV X0, X21
	0x033D3AB0 BL 0x33D4ED8
	0x033D3AB4 ADD W25, W24, 0x1
	0x033D3AB8 B 0x33D3ADC
	0x033D3ABC CMP W8, 0x5C
	0x033D3AC0 B.NE 0x33D3ACC
	0x033D3AC4 ADD W24, W24, 0x1
	0x033D3AC8 B 0x33D3ADC
	0x033D3ACC CMP W8, 0x5B
	0x033D3AD0 B.EQ 0x33D3B04
	0x033D3AD4 CMP W8, 0x5D
	0x033D3AD8 B.EQ 0x33D4098
	0x033D3ADC ADD W24, W24, 0x1
	0x033D3AE0 STR W24, [X31 + 0xC]
	0x033D3AE4 LDR W8, [X20 + 0x10]
	0x033D3AE8 CMP W24, W8
	0x033D3AEC B.LT 0x33D3A58
	0x033D3AF0 MOV W26, W31
	0x033D3AF4 B 0x33D3B50
	0x033D3AF8 MOV W26, W31
	0x033D3AFC MOV W25, W24
	0x033D3B00 B 0x33D3B50
	0x033D3B04 MOV X0, X20
	0x033D3B08 MOV W1, W24
	0x033D3B0C MOV X2, X31
	0x033D3B10 BL 0x3222A1C
	0x033D3B14 AND W8, W0, 0xFFFF
	0x033D3B18 CMP W8, 0x5B
	0x033D3B1C B.EQ 0x33D3B24

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X2
	006 Move W2, [X2]
	007 Move X20, X1
	008 Move X21, X0
	009 Call TermInfoReader.GetInt16, X0, X1, X2
	010 Move W8, [X19]
	011 Move W1, W0
	012 Move X0, X21
	013 Add W8, W8, 2
	014 Move [X19], W8
	015 Call TermInfoReader.DetermineVersion, X0, X1
	016 Move W2, [X19]
	017 Move X1, X20
	018 Call TermInfoReader.GetInt16, X0, X1, X2
	019 Move W8, [X19]
	020 Move X1, X20
	021 Add W2, W8, 2
	022 Move [X19], W2
	023 Call TermInfoReader.GetInt16, X0, X1, X2
	024 NotImplemented "Instruction SXTH not yet implemented."
	025 Move [X21+16], W8
	026 Move W8, [X19]
	027 Move X1, X20
	028 Add W2, W8, 2
	029 Move [X19], W2
	030 Call TermInfoReader.GetInt16, X0, X1, X2
	031 NotImplemented "Instruction SXTH not yet implemented."
	032 Move [X21+20], W8
	033 Move W8, [X19]
	034 Move X1, X20
	035 Add W2, W8, 2
	036 Move [X19], W2
	037 Call TermInfoReader.GetInt16, X0, X1, X2
	038 NotImplemented "Instruction SXTH not yet implemented."
	039 Move [X21+24], W8
	040 Move W8, [X19]
	041 Move X1, X20
	042 Add W2, W8, 2
	043 Move [X19], W2
	044 Call TermInfoReader.GetInt16, X0, X1, X2
	045 Move W8, [X19]
	046 Add W8, W8, 2
	047 Move [X19], W8
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Move X21, [X31+40]
	052 Return 

Method: System.Void ReadNames(System.Byte[] buffer, ref System.Int32 position)

Disassembly:
	0x033D3B20 TBNZ X22, 0x0, 0x33D4460
	0x033D3B24 SUB W2, W24, W25
	0x033D3B28 MOV X0, X20
	0x033D3B2C MOV W1, W25
	0x033D3B30 MOV X3, X31
	0x033D3B34 BL 0x3228DE4
	0x033D3B38 CBZ X21, 0x33D41A4
	0x033D3B3C MOV X1, X0
	0x033D3B40 MOV X0, X21
	0x033D3B44 BL 0x33D4ED8
	0x033D3B48 ADD W25, W24, 0x1
	0x033D3B4C MOVZ W26, 0x1
	0x033D3B50 SUBS W2, W24, W25

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X2
	004 Move W2, [X2]
	005 Call TermInfoReader.GetString, X0, X1, X2
	006 Compare X0, 0
	007 JumpIfEqual {16}
	008 Move W8, [X19]
	009 Move W9, [X0+16]
	010 Add W8, W8, W9
	011 Add W8, W8, 1
	012 Move [X19], W8
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Return 
	016 Call 0x1C17F20

Method: System.Int32 Get(System.TermInfoNumbers number)

Disassembly:
	0x033CE73C CMP W10, W9
	0x033CE740 B.CS 0x33CE7C4
	0x033CE744 ADD X8, X8, W10, 0x1, SXTW
	0x033CE748 LDRH W1, [X8 + 0x20]
	0x033CE74C CMP W1, 0x7F
	0x033CE750 B.NE 0x33CE7B8
	0x033CE754 ADD X0, X31, 0x10
	0x033CE758 MOVZ W1, 0x8
	0x033CE75C MOVZ W2, 0x8
	0x033CE760 MOVZ W4, 0x1
	0x033CE764 MOV W3, W31
	0x033CE768 MOV W5, W31
	0x033CE76C MOV X6, X31
	0x033CE770 STR W31, [X31 + 0x18]
	0x033CE774 STR X31, [X31 + 0x10]
	0x033CE778 BL 0x339D33C
	0x033CE77C ADRP X10, 0xD5D000
	0x033CE780 LDR X8, [X31 + 0x10]
	0x033CE784 LDR W9, [X31 + 0x18]
	0x033CE788 LDR X10, [X10 + 0x698]
	0x033CE78C LDR X0, [X10]
	0x033CE790 B 0x33CE690
	0x033CE794 MOV X0, X31
	0x033CE798 LDP X20, X19, [X31 + 0x40]

ISIL:
	001 Move [X31-16], X30
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move W8, [X0+20]
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Move TEMP, 0
	006 Not TEMP
	007 Move W0, TEMP
	008 Move W9, [X0+16]
	009 Move W10, [X0+40]
	010 Move W11, [X0+44]
	011 Move X8, [X0+32]
	012 Add W9, W9, W10
	013 NotImplemented "Instruction CMP not yet implemented."
	014 NotImplemented "Instruction CINC not yet implemented."
	015 And W10, W10, 0xFFFFFFFE
	016 Subtract W10, W9, W10
	017 NotImplemented "Instruction CMP not yet implemented."
	018 NotImplemented "Instruction MADD not yet implemented."
	019 NotImplemented "Instruction CINC not yet implemented."
	020 Move X1, X8
	021 Call TermInfoReader.GetInt16, X0, X1, X2
	022 NotImplemented "Instruction SXTH not yet implemented."
	023 Move X30, [X31+16]
	024 Return X0

Method: System.String Get(System.TermInfoStrings tstr)

Disassembly:
	0x033CE6AC STR W8, [X19 + 0x88]
	0x033CE6B0 B.LT 0x33CE6B8
	0x033CE6B4 STR X31, [X19 + 0x88]
	0x033CE6B8 MOV W1, W20
	0x033CE6BC MOV W2, W31
	0x033CE6C0 BL 0x33CDDD0
	0x033CE6C4 ADRP X8, 0xD5D000
	0x033CE6C8 LDR X8, [X8 + 0x698]
	0x033CE6CC STR X0, [X31 + 0x10]
	0x033CE6D0 STR W1, [X31 + 0x18]
	0x033CE6D4 ADD X1, X31, 0x10
	0x033CE6D8 LDR X8, [X8]
	0x033CE6DC MOV X0, X8
	0x033CE6E0 BL 0x1C16E04
	0x033CE6E4 B 0x33CE798
	0x033CE6E8 LDR X8, [X19 + 0x80]
	0x033CE6EC CBZ X8, 0x33CE7C0
	0x033CE6F0 LDRSW X10, [X19 + 0x88]
	0x033CE6F4 LDR W9, [X8 + 0x18]
	0x033CE6F8 CMP W10, W9
	0x033CE6FC B.CS 0x33CE7C4
	0x033CE700 ADD X11, X8, X10, 0x1, LSL
	0x033CE704 LDRH W11, [X11 + 0x20]
	0x033CE708 CMP W11, 0x1B
	0x033CE70C B.NE 0x33CE794
	0x033CE710 LDR W11, [X19 + 0x8C]
	0x033CE714 SUB W12, W11, W10
	0x033CE718 CMP W12, 0x2
	0x033CE71C B.LT 0x33CE794
	0x033CE720 ADD W10, W10, 0x2
	0x033CE724 CMP W10, W11
	0x033CE728 STR W10, [X19 + 0x88]
	0x033CE72C B.LT 0x33CE738
	0x033CE730 MOV W10, W31
	0x033CE734 STR X31, [X19 + 0x88]
	0x033CE738 ADD W10, W10, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Move W8, [X0+24]
	006 Move X19, X0
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move W9, [X19+40]
	009 Move W12, [X19+44]
	010 Move W10, [X19+16]
	011 Move W11, [X19+20]
	012 Move X8, [X19+32]
	013 Add W9, W10, W9
	014 NotImplemented "Instruction CMP not yet implemented."
	015 NotImplemented "Instruction CINC not yet implemented."
	016 And W10, W10, 0xFFFFFFFE
	017 Subtract W10, W9, W10
	018 NotImplemented "Instruction CMP not yet implemented."
	019 NotImplemented "Instruction MADD not yet implemented."
	020 NotImplemented "Instruction CINC not yet implemented."
	021 Add W2, W20, W1
	022 Move X1, X8
	023 Call TermInfoReader.GetInt16, X0, X1, X2
	024 NotImplemented "Instruction ORN not yet implemented."
	025 And W31, W8, 0xFFFF
	026 Move W8, [X19+24]
	027 Move X1, [X19+32]
	028 Add W9, W20, W0
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Add W2, W9, W8
	032 Move X30, [X31+32]
	033 Call TermInfoReader.GetString, X0, X1, X2
	034 Return X0
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X0, X31
	038 Move X30, [X31+32]
	039 Return X0

Method: System.Byte[] GetStringBytes(System.TermInfoStrings tstr)

Disassembly:
	0x033D27B0 AND W0, W0, 0x1
	0x033D27B4 RET
	0x033D27B8 CMP W0, 0x0
	0x033D27BC CSET W0, NE
	0x033D27C0 RET
	0x033D27C4 STR X30, [X31 - 0x30]!
	0x033D27C8 STP X22, X21, [X31 + 0x10]
	0x033D27CC STP X20, X19, [X31 + 0x20]
	0x033D27D0 ADRP X22, 0x100B000
	0x033D27D4 LDRB W8, [X22 + 0x2B4]
	0x033D27D8 MOV W21, W2
	0x033D27DC MOV W20, W1
	0x033D27E0 MOV X19, X0
	0x033D27E4 TBNZ X8, 0x0, 0x33D2808
	0x033D27E8 ADRP X0, 0xD2A000
	0x033D27EC LDR X0, [X0 + 0x8D8]
	0x033D27F0 BL 0x1C16CF4
	0x033D27F4 ADRP X0, 0xD23000
	0x033D27F8 LDR X0, [X0 + 0x278]
	0x033D27FC BL 0x1C16CF4
	0x033D2800 MOVZ W8, 0x1
	0x033D2804 STRB W8, [X22 + 0x2B4]
	0x033D2808 CBZ W21, 0x33D2890
	0x033D280C ADRP X8, 0xD2A000
	0x033D2810 LDR X8, [X8 + 0x8D8]
	0x033D2814 MOV W1, W21
	0x033D2818 LDR X0, [X8]
	0x033D281C BL 0x1C16D6C
	0x033D2820 CMP W21, 0x1
	0x033D2824 MOV X1, X0
	0x033D2828 B.LT 0x33D2878
	0x033D282C CBZ X19, 0x33D28B8
	0x033D2830 LDR W9, [X19 + 0x18]
	0x033D2834 MOV X8, X31
	0x033D2838 MOV W10, W21
	0x033D283C ADD X11, X1, 0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Move W8, [X0+24]
	006 Move X19, X0
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move W9, [X19+40]
	009 Move W12, [X19+44]
	010 Move W10, [X19+16]
	011 Move W11, [X19+20]
	012 Move X8, [X19+32]
	013 Add W9, W10, W9
	014 NotImplemented "Instruction CMP not yet implemented."
	015 NotImplemented "Instruction CINC not yet implemented."
	016 And W10, W10, 0xFFFFFFFE
	017 Subtract W10, W9, W10
	018 NotImplemented "Instruction CMP not yet implemented."
	019 NotImplemented "Instruction MADD not yet implemented."
	020 NotImplemented "Instruction CINC not yet implemented."
	021 Add W2, W20, W1
	022 Move X1, X8
	023 Call TermInfoReader.GetInt16, X0, X1, X2
	024 NotImplemented "Instruction ORN not yet implemented."
	025 And W31, W8, 0xFFFF
	026 Move W8, [X19+24]
	027 Move X1, [X19+32]
	028 Add W9, W20, W0
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Add W2, W9, W8
	032 Move X30, [X31+32]
	033 Call TermInfoReader.GetStringBytes, X0, X1, X2
	034 Return X0
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X0, X31
	038 Move X30, [X31+32]
	039 Return X0

Method: System.Int16 GetInt16(System.Byte[] buffer, System.Int32 offset)

Disassembly:
	0x033D3BFC MOV W26, W31
	0x033D3C00 ADD W29, W24, W26
	0x033D3C04 ADD W25, W29, 0x1
	0x033D3C08 MOV X0, X20
	0x033D3C0C MOV W1, W25
	0x033D3C10 MOV X2, X31
	0x033D3C14 BL 0x3222A1C
	0x033D3C18 AND W8, W0, 0xFFFF
	0x033D3C1C CMP W8, 0x2A
	0x033D3C20 B.NE 0x33D3DE4
	0x033D3C24 STR W25, [X31 + 0xC]
	0x033D3C28 LDR W9, [X20 + 0x10]
	0x033D3C2C ADD W26, W26, 0x1
	0x033D3C30 ADD W8, W24, W26
	0x033D3C34 ADD W10, W8, 0x1
	0x033D3C38 CMP W10, W9
	0x033D3C3C B.LT 0x33D3C00
	0x033D3C40 ADD W26, W26, 0x1
	0x033D3C44 MOV W24, W8
	0x033D3C48 B 0x33D3DEC

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {19}
	004 Move W9, [X1+24]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Add W8, W2, 1
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Add X9, X1, W2
	009 Add X8, X1, W8
	010 Move W9, [X9+32]
	011 Move W8, [X8+32]
	012 And W10, W9, W8
	013 NotImplemented "Instruction BFM not yet implemented."
	014 NotImplemented "Instruction CMP not yet implemented."
	015 NotImplemented "Instruction CSINV not yet implemented."
	016 Move X30, [X31+16]
	017 Return X0
	018 Call 0x1C17F28
	019 Call 0x1C17F20

Method: System.String GetString(System.Byte[] buffer, System.Int32 offset)

Disassembly:
	0x033D3C4C CMP W8, 0x2C
	0x033D3C50 B.EQ 0x33D3D98
	0x033D3C54 CMP W8, 0x5B
	0x033D3C58 B.NE 0x33D40D0
	0x033D3C5C CBZ X21, 0x33D41A4
	0x033D3C60 LDRB W8, [X21 + 0x38]
	0x033D3C64 CBNZ W8, 0x33D42F4
	0x033D3C68 ADD W8, W24, 0x1
	0x033D3C6C STR W8, [X31 + 0xC]
	0x033D3C70 LDR W9, [X20 + 0x10]
	0x033D3C74 CMP W8, W9
	0x033D3C78 B.GE 0x33D4314
	0x033D3C7C ADD X1, X31, 0xC
	0x033D3C80 MOV X0, X20
	0x033D3C84 BL 0x33D50F0
	0x033D3C88 LDR W24, [X31 + 0xC]
	0x033D3C8C MOV X0, X20
	0x033D3C90 MOV X2, X31
	0x033D3C94 MOV W1, W24
	0x033D3C98 BL 0x3222A1C
	0x033D3C9C AND W8, W0, 0xFFFF
	0x033D3CA0 CMP W8, 0x2C
	0x033D3CA4 B.EQ 0x33D3CE0
	0x033D3CA8 MOV X0, X20
	0x033D3CAC MOV W1, W24
	0x033D3CB0 MOV X2, X31
	0x033D3CB4 BL 0x3222A1C
	0x033D3CB8 AND W8, W0, 0xFFFF
	0x033D3CBC CMP W8, 0x2A
	0x033D3CC0 B.EQ 0x33D3CE0
	0x033D3CC4 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X1, 0
	006 JumpIfEqual {36}
	007 Move W8, [X1+24]
	008 Move W19, W2
	009 Move X20, X1
	010 Subtract W8, W8, W2
	011 NotImplemented "Instruction CSEL not yet implemented."
	012 Move W21, W31
	013 Add W9, W19, W21
	014 Add X9, X20, W9
	015 Move W9, [X9+32]
	016 Compare W9, 0
	017 JumpIfEqual {21}
	018 Add W21, W21, 1
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Call 0x1C17F28
	021 Move X0, X31
	022 Call Encoding.get_ASCII
	023 Compare X0, 0
	024 JumpIfEqual {36}
	025 Move X8, [X0]
	026 Move X1, X20
	027 Move W2, W19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X5, [X8+904]
	031 Move X4, [X8+912]
	032 Move W3, W21
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 CallNoReturn X5
	036 Call 0x1C17F20

Method: System.Byte[] GetStringBytes(System.Byte[] buffer, System.Int32 offset)

Disassembly:
	0x033D3CC8 MOV W1, W24
	0x033D3CCC MOV X2, X31
	0x033D3CD0 BL 0x3222A1C
	0x033D3CD4 AND W8, W0, 0xFFFF
	0x033D3CD8 CMP W8, 0x5D
	0x033D3CDC B.NE 0x33D3E98
	0x033D3CE0 LDR W8, [X20 + 0x10]
	0x033D3CE4 CMP W24, W8
	0x033D3CE8 B.GE 0x33D3DD8
	0x033D3CEC MOV W29, W31
	0x033D3CF0 MOVZ W25, 0x1
	0x033D3CF4 MOV X0, X20
	0x033D3CF8 MOV W1, W24
	0x033D3CFC MOV X2, X31
	0x033D3D00 BL 0x3222A1C
	0x033D3D04 AND W8, W0, 0xFFFF
	0x033D3D08 CMP W8, 0x5D
	0x033D3D0C B.EQ 0x33D3E18
	0x033D3D10 MOV X0, X20
	0x033D3D14 MOV W1, W24
	0x033D3D18 MOV X2, X31
	0x033D3D1C BL 0x3222A1C
	0x033D3D20 AND W8, W0, 0xFFFF
	0x033D3D24 CMP W8, 0x2A
	0x033D3D28 B.NE 0x33D3D38
	0x033D3D2C TBNZ X29, 0x0, 0x33D41A8
	0x033D3D30 MOVZ W29, 0x1
	0x033D3D34 B 0x33D3D58
	0x033D3D38 MOV X0, X20
	0x033D3D3C MOV W1, W24
	0x033D3D40 MOV X2, X31
	0x033D3D44 BL 0x3222A1C
	0x033D3D48 AND W8, W0, 0xFFFF
	0x033D3D4C CMP W8, 0x2C
	0x033D3D50 B.NE 0x33D41C8
	0x033D3D54 ADD W25, W25, 0x1
	0x033D3D58 ADD W8, W24, 0x1
	0x033D3D5C ADD X1, X31, 0xC
	0x033D3D60 MOV X0, X20
	0x033D3D64 STR W8, [X31 + 0xC]
	0x033D3D68 BL 0x33D50F0
	0x033D3D6C LDR W24, [X31 + 0xC]
	0x033D3D70 LDR W8, [X20 + 0x10]
	0x033D3D74 CMP W24, W8
	0x033D3D78 B.LT 0x33D3CF4
	0x033D3D7C B 0x33D3E1C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x100B000
	007 Move W8, [X21+723]
	008 Move W19, W2
	009 Move X20, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD21000
	015 Move X0, [X0+1560]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+723], W8
	019 Compare X20, 0
	020 JumpIfEqual {53}
	021 Move W8, [X20+24]
	022 Subtract W8, W8, W19
	023 NotImplemented "Instruction CSEL not yet implemented."
	024 Move X9, 0xD21000
	025 Move X9, [X9+1560]
	026 Move W21, W31
	027 Add W10, W19, W21
	028 Add X10, X20, W10
	029 Move W10, [X10+32]
	030 Compare W10, 0
	031 JumpIfEqual {35}
	032 Add W21, W21, 1
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Call 0x1C17F28
	035 Move X0, [X9]
	036 Move W1, W21
	037 Call 0x1C17D6C
	038 Move X22, X0
	039 Move X0, X20
	040 Move W1, W19
	041 Move X2, X22
	042 Move W3, W31
	043 Move W4, W21
	044 Move X5, X31
	045 Call Buffer.InternalBlockCopy, X0, X1, X2, X3, X4
	046 Move X0, X22
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move X30, [X31+48]
	052 Return X0
	053 Call 0x1C17F20

