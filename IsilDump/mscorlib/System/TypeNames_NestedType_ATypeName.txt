Type: System.TypeNames/ATypeName

Method: System.String get_DisplayName()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Boolean Equals(System.TypeName other)

Disassembly:
	0x033D3D80 CBZ X21, 0x33D41A4
	0x033D3D84 LDRB W8, [X21 + 0x38]
	0x033D3D88 CBNZ W8, 0x33D42D4
	0x033D3D8C MOVZ W8, 0x1
	0x033D3D90 STRB W8, [X21 + 0x38]
	0x033D3D94 B 0x33D3E80
	0x033D3D98 TBNZ X27, 0x0, 0x33D40FC
	0x033D3D9C TBNZ X22, 0x0, 0x33D417C
	0x033D3DA0 TBZ X23, 0x0, 0x33D3E80
	0x033D3DA4 ADD W1, W24, 0x1
	0x033D3DA8 MOV X0, X20
	0x033D3DAC MOV X2, X31
	0x033D3DB0 BL 0x322B484
	0x033D3DB4 CBZ X0, 0x33D41A4
	0x033D3DB8 MOV X1, X31
	0x033D3DBC BL 0x322B8DC
	0x033D3DC0 CBZ X21, 0x33D41A4
	0x033D3DC4 STR X0, [X21 + 0x18]
	0x033D3DC8 LDR W24, [X20 + 0x10]
	0x033D3DCC B 0x33D3E80
	0x033D3DD0 MOVZ W26, 0x1
	0x033D3DD4 B 0x33D3DEC
	0x033D3DD8 MOV W29, W31
	0x033D3DDC MOVZ W25, 0x1
	0x033D3DE0 B 0x33D3E1C
	0x033D3DE4 ADD W26, W26, 0x1
	0x033D3DE8 MOV W24, W29
	0x033D3DEC ADRP X8, 0xD59000
	0x033D3DF0 LDR X8, [X8 + 0xCC8]
	0x033D3DF4 LDR X0, [X8]
	0x033D3DF8 BL 0x1C16F10
	0x033D3DFC MOV X1, X31
	0x033D3E00 MOV X25, X0
	0x033D3E04 BL 0x33BDD8C
	0x033D3E08 MOV X0, X21
	0x033D3E0C MOV X1, X25
	0x033D3E10 STR W26, [X25 + 0x10]
	0x033D3E14 B 0x33D3E7C
	0x033D3E18 LDR W8, [X20 + 0x10]
	0x033D3E1C CMP W24, W8
	0x033D3E20 B.GE 0x33D4294
	0x033D3E24 MOV X0, X20
	0x033D3E28 MOV W1, W24
	0x033D3E2C MOV X2, X31
	0x033D3E30 BL 0x3222A1C
	0x033D3E34 AND W8, W0, 0xFFFF
	0x033D3E38 CMP W8, 0x5D
	0x033D3E3C B.NE 0x33D4294
	0x033D3E40 CMP W25, 0x2
	0x033D3E44 CSET W8, LT
	0x033D3E48 ORN W8, W8, W29, 0x0
	0x033D3E4C TBZ X8, 0x0, 0x33D437C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x100B000
	006 Move W8, [X21+724]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xD5A000
	014 Move X0, [X0+3112]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+724], W8
	018 Compare X19, 0
	019 JumpIfEqual {42}
	020 Move X8, [X20]
	021 Move X21, 0xD5A000
	022 Move X0, X20
	023 Move X9, [X8+408]
	024 Move X1, [X8+416]
	025 Move X21, [X21+3112]
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Move X8, [X19]
	028 Move X1, [X21]
	029 Move X20, X0
	030 NotImplemented "Instruction LDRH not yet implemented."
	031 Compare X9, 0
	032 JumpIfEqual {39}
	033 Move X10, [X8+176]
	034 Add X10, X10, 8
	035 NotImplemented "Instruction LDUR not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Subtract X9, X9, 1
	038 Add X10, X10, 16
	039 Move X0, X19
	040 Move W2, W31
	041 Call 0x1C5D788
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move W0, W31
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Return X0
	048 NotImplemented "Instruction LDRSW not yet implemented."
	049 Add X8, X8, X9
	050 Add X0, X8, 312
	051 Move X8, [X0]
	052 Move X1, [X0+8]
	053 Move X0, X19
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Move X1, X0
	056 Move X0, X20
	057 Move X20, [X31+16]
	058 Move X19, [X31+24]
	059 Move X2, X31
	060 Move X30, [X31+32]
	061 Move X21, [X31+40]
	062 Call String.op_Equality, X0, X1
	063 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x033D3E50 ADRP X8, 0xD59000
	0x033D3E54 LDR X8, [X8 + 0xCA8]
	0x033D3E58 LDR X0, [X8]
	0x033D3E5C BL 0x1C16F10
	0x033D3E60 AND W2, W29, 0x1
	0x033D3E64 MOV W1, W25
	0x033D3E68 MOV X3, X31
	0x033D3E6C MOV X26, X0
	0x033D3E70 BL 0x33D2F6C
	0x033D3E74 MOV X0, X21

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Move X9, [X8+408]
	004 Move X1, [X8+416]
	005 NotImplemented "Instruction BLR not yet implemented."
	006 Compare X0, 0
	007 JumpIfEqual {13}
	008 Move X8, [X0]
	009 Move X2, [X8+344]
	010 Move X1, [X8+352]
	011 Move X30, [X31+16]
	012 CallNoReturn X2
	013 Call 0x1C17F20

Method: System.Boolean Equals(System.Object other)

Disassembly:
	0x033D3E78 MOV X1, X26
	0x033D3E7C BL 0x33D5004
	0x033D3E80 ADD W24, W24, 0x1
	0x033D3E84 STR W24, [X31 + 0xC]
	0x033D3E88 LDR W8, [X20 + 0x10]
	0x033D3E8C CMP W24, W8
	0x033D3E90 B.LT 0x33D3BB4
	0x033D3E94 B 0x33D417C
	0x033D3E98 ADRP X8, 0xD59000
	0x033D3E9C LDR X8, [X8 + 0xCC0]
	0x033D3EA0 LDR X0, [X8]
	0x033D3EA4 BL 0x1C16F10
	0x033D3EA8 ADRP X8, 0xD59000
	0x033D3EAC LDR X8, [X8 + 0xCB8]
	0x033D3EB0 MOV X25, X0
	0x033D3EB4 LDR X1, [X8]
	0x033D3EB8 BL 0x301B7C4
	0x033D3EBC LDR X8, [X21 + 0x30]
	0x033D3EC0 CBNZ X8, 0x33D4480
	0x033D3EC4 LDR W8, [X20 + 0x10]
	0x033D3EC8 CMP W24, W8
	0x033D3ECC B.GE 0x33D406C
	0x033D3ED0 ADD X1, X31, 0xC
	0x033D3ED4 MOV X0, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x100B000
	007 Move X22, 0xD5A000
	008 Move W8, [X21+725]
	009 Move X22, [X22+3112]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xD5A000
	017 Move X0, [X0+3112]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+725], W8
	021 Move X1, [X22]
	022 Move X0, X20
	023 Call 0x1C17E00
	024 Move X1, X0
	025 Move X0, X19
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move X30, [X31+48]
	031 Call ATypeName.Equals, X0, X1
	032 Return X0

Method: System.Void .ctor()

Disassembly:
	0x033D3ED8 BL 0x33D50F0

ISIL:
	001 Return 

