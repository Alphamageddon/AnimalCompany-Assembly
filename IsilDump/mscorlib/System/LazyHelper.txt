Type: System.LazyHelper

Method: System.LazyState get_State()

Disassembly:
	0x0337F134 FCMP D0, D1
	0x0337F138 B.NE 0x337F164

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Void .ctor(System.LazyState state)

Disassembly:
	0x0337F13C LDR V0, [X31 + 0x18]
	0x0337F140 FMOV D1, 1
	0x0337F144 FCVTZS X8, D0
	0x0337F148 FADD D1, D0, D1
	0x0337F14C ANDS X31, X8, 0x1
	0x0337F150 FCSEL D10, D0, D1, EQ
	0x0337F154 B 0x337F16C
	0x0337F158 FADD D0, D8, D1
	0x0337F15C FRINTP D10, D0
	0x0337F160 B 0x337F16C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void .ctor(System.Threading.LazyThreadSafetyMode mode, System.Exception exception)

Disassembly:
	0x0337F164 FADD D0, D8, D1
	0x0337F168 FRINTM D10, D0
	0x0337F16C FDIV D8, D10, D9
	0x0337F170 STR D8, [X31 + 0x8]
	0x0337F174 MOV V0.16B, V8.16B
	0x0337F178 LDP X20, X19, [X31 + 0x40]
	0x0337F17C LDP X30, X21, [X31 + 0x30]
	0x0337F180 LDP D9, D8, [X31 + 0x20]
	0x0337F184 LDR V10, [X31 + 0x10]
	0x0337F188 ADD X31, X31, 0x50
	0x0337F18C RET
	0x0337F190 ADRP X0, 0xD7C000
	0x0337F194 LDR X0, [X0 + 0x760]
	0x0337F198 BL 0x1C16D08
	0x0337F19C BL 0x1C16F10
	0x0337F1A0 MOV X19, X0
	0x0337F1A4 ADRP X0, 0xDAB000
	0x0337F1A8 LDR X0, [X0 + 0xF08]
	0x0337F1AC BL 0x1C16D08
	0x0337F1B0 MOV X20, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W21, W1
	006 Move X1, X31
	007 Move X20, X2
	008 Move X19, X0
	009 Call Object..ctor, X0
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move X8, -41844736
	012 Add X8, X8, 2148
	013 Move W8, [X8]
	014 Move [X19+16], W8
	015 Move X0, X20
	016 Move X1, X31
	017 Call ExceptionDispatchInfo.Capture, X0
	018 Move [X19+24], X0
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X30, [X31+32]
	022 Move X21, [X31+40]
	023 Return 

Method: System.Void ThrowException()

Disassembly:
	0x0337F1B4 ADRP X0, 0xDAB000
	0x0337F1B8 LDR X0, [X0 + 0xF10]
	0x0337F1BC BL 0x1C16D08
	0x0337F1C0 MOV X2, X0
	0x0337F1C4 MOV X0, X19
	0x0337F1C8 MOV X1, X20
	0x0337F1CC MOV X3, X31

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+24]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call ExceptionDispatchInfo.Throw, X0
	008 Return 
	009 Call 0x1C17F20

Method: System.LazyHelper Create(System.Threading.LazyThreadSafetyMode mode, System.Boolean useDefaultConstructor)

Disassembly:
	0x0337F1D0 BL 0x3311888
	0x0337F1D4 ADRP X0, 0xDAB000
	0x0337F1D8 LDR X0, [X0 + 0xF18]
	0x0337F1DC BL 0x1C16D08
	0x0337F1E0 MOV X1, X0
	0x0337F1E4 MOV X0, X19
	0x0337F1E8 BL 0x1C16DEC
	0x0337F1EC STR W19, [X31 + 0x18]
	0x0337F1F0 ADRP X0, 0xDAB000
	0x0337F1F4 LDR X0, [X0 + 0xF20]
	0x0337F1F8 BL 0x1C16D08
	0x0337F1FC ADD X1, X31, 0x18
	0x0337F200 BL 0x1C16E04
	0x0337F204 MOV X19, X0
	0x0337F208 ADRP X0, 0xDAB000
	0x0337F20C LDR X0, [X0 + 0xF28]
	0x0337F210 BL 0x1C16D08
	0x0337F214 MOV X20, X0
	0x0337F218 ADRP X0, 0xDAB000
	0x0337F21C LDR X0, [X0 + 0xF30]
	0x0337F220 BL 0x1C16D08
	0x0337F224 MOV X2, X0
	0x0337F228 MOV X0, X20
	0x0337F22C MOV X1, X19
	0x0337F230 MOV X3, X31
	0x0337F234 BL 0x320A264
	0x0337F238 MOV X19, X0
	0x0337F23C ADRP X0, 0xD7C000
	0x0337F240 LDR X0, [X0 + 0x578]
	0x0337F244 BL 0x1C16D08
	0x0337F248 BL 0x1C16F10
	0x0337F24C MOV X20, X0
	0x0337F250 ADRP X0, 0xDA5000
	0x0337F254 LDR X0, [X0 + 0x68]
	0x0337F258 BL 0x1C16D08
	0x0337F25C MOV X2, X0
	0x0337F260 MOV X0, X20
	0x0337F264 MOV X1, X19
	0x0337F268 MOV X3, X31
	0x0337F26C BL 0x330E16C
	0x0337F270 ADRP X0, 0xDAB000
	0x0337F274 LDR X0, [X0 + 0xF18]
	0x0337F278 BL 0x1C16D08
	0x0337F27C MOV X1, X0
	0x0337F280 MOV X0, X20
	0x0337F284 BL 0x1C16DEC
	0x0337F288 BL 0x1C16F20
	0x0337F28C BL 0x1C16F28
	0x0337F290 STR D8, [X31 - 0x30]!
	0x0337F294 STP X30, X21, [X31 + 0x10]
	0x0337F298 STP X20, X19, [X31 + 0x20]
	0x0337F29C ADRP X20, 0x105D000
	0x0337F2A0 ADRP X21, 0xD74000
	0x0337F2A4 LDRB W8, [X20 + 0xF9B]
	0x0337F2A8 LDR X21, [X21 + 0x5A8]
	0x0337F2AC MOV W19, W0
	0x0337F2B0 MOV V8.16B, V0.16B
	0x0337F2B4 TBNZ X8, 0x0, 0x337F2CC
	0x0337F2B8 ADRP X0, 0xD74000
	0x0337F2BC LDR X0, [X0 + 0x5A8]
	0x0337F2C0 BL 0x1C16CF4
	0x0337F2C4 MOVZ W8, 0x1
	0x0337F2C8 STRB W8, [X20 + 0xF9B]
	0x0337F2CC LDR X0, [X21]
	0x0337F2D0 LDR W8, [X0 + 0xE0]
	0x0337F2D4 CBNZ W8, 0x337F2DC
	0x0337F2D8 BL 0x1C16DFC
	0x0337F2DC MOV W1, W19
	0x0337F2E0 LDP X20, X19, [X31 + 0x20]
	0x0337F2E4 LDP X30, X21, [X31 + 0x10]
	0x0337F2E8 MOV V0.16B, V8.16B
	0x0337F2EC MOV W0, W31
	0x0337F2F0 LDR V8, [X31], #0x30
	0x0337F2F4 B 0x337EFF0
	0x0337F2F8 B 0x1C50A68
	0x0337F2FC FCMP D0, 0x0
	0x0337F300 B.PL 0x337F30C
	0x0337F304 MOVN W0, 0x0
	0x0337F308 RET
	0x0337F30C B.LE 0x337F318
	0x0337F310 MOVZ W0, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x105E000
	006 Move W8, [X21+3982]
	007 Move W19, W1
	008 Move W20, W0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xDA1000
	014 Move X0, [X0+248]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3982], W8
	018 NotImplemented "Instruction CMP not yet implemented."
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Compare W20, 0
	021 JumpIfNotEqual {69}
	022 Move X20, 0xDA1000
	023 Move X20, [X20+248]
	024 Move X0, [X20]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X20]
	030 Move X8, [X0+184]
	031 Move TEMP, X19
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {62}
	035 Move X19, [X8]
	036 Move X8, 0xDA1000
	037 Move X8, [X8+248]
	038 And W31, W19, 1
	039 Move X0, [X8]
	040 Move W8, 7
	041 NotImplemented "Instruction CINC not yet implemented."
	042 Call 0x1C17F10
	043 Move X1, X31
	044 Move X19, X0
	045 Call Object..ctor, X0
	046 Move [X19+16], W20
	047 Move X20, 0xDA1000
	048 Move X20, [X20+248]
	049 Move X0, [X20]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {55}
	053 Call 0x1C17DFC
	054 Move X0, [X20]
	055 Move X8, [X0+184]
	056 Move TEMP, X19
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {61}
	060 Move X19, [X8+16]
	061 Move X19, [X8+24]
	062 Move X19, [X8+8]
	063 Move X0, X19
	064 Move X20, [X31+16]
	065 Move X19, [X31+24]
	066 Move X30, [X31+32]
	067 Move X21, [X31+40]
	068 Return X0
	069 Move X0, 0xD7D000
	070 Move X0, [X0+1888]
	071 Call 0x1C17D08
	072 Call 0x1C17F10
	073 Move X19, X0
	074 Move X0, 0xDA6000
	075 Move X0, [X0+104]
	076 Call 0x1C17D08
	077 Move X20, X0
	078 Move X0, 0xDAC000
	079 Move X0, [X0+3800]
	080 Call 0x1C17D08
	081 Move X2, X0
	082 Move X0, X19
	083 Move X1, X20
	084 Move X3, X31
	085 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	086 Move X0, 0xDAC000
	087 Move X0, [X0+3808]
	088 Call 0x1C17D08
	089 Move X1, X0
	090 Move X0, X19
	091 Call 0x1C17DEC

Method: System.Object CreateViaDefaultConstructor(System.Type type)

Disassembly:
	0x0337F314 RET
	0x0337F318 FCMP D0, 0x0
	0x0337F31C B.NE 0x337F328
	0x0337F320 MOV W0, W31
	0x0337F324 RET
	0x0337F328 STP X30, X19, [X31 - 0x10]!
	0x0337F32C ADRP X0, 0xDA2000
	0x0337F330 LDR X0, [X0 + 0x560]
	0x0337F334 BL 0x1C16D08
	0x0337F338 BL 0x1C16F10
	0x0337F33C MOV X19, X0
	0x0337F340 ADRP X0, 0xDAB000
	0x0337F344 LDR X0, [X0 + 0xF38]
	0x0337F348 BL 0x1C16D08
	0x0337F34C MOV X1, X0
	0x0337F350 MOV X0, X19
	0x0337F354 MOV X2, X31
	0x0337F358 BL 0x3316338
	0x0337F35C ADRP X0, 0xDAB000
	0x0337F360 LDR X0, [X0 + 0xF40]
	0x0337F364 BL 0x1C16D08
	0x0337F368 MOV X1, X0
	0x0337F36C MOV X0, X19
	0x0337F370 BL 0x1C16DEC
	0x0337F374 SUB X9, X31, X0
	0x0337F378 SBFM X8, X0, 0x3F, 0x3F
	0x0337F37C UBFM X9, X9, 0x3F, 0x3F
	0x0337F380 ORR W0, W8, W9, 0x0
	0x0337F384 RET
	0x0337F388 SUB X31, X31, 0x30
	0x0337F38C STP D0, D8, [X31 + 0x8]
	0x0337F390 STR X30, [X31 + 0x18]
	0x0337F394 STP X20, X19, [X31 + 0x20]
	0x0337F398 ADRP X19, 0x105D000
	0x0337F39C ADRP X20, 0xD74000
	0x0337F3A0 LDRB W8, [X19 + 0xF9D]
	0x0337F3A4 LDR X20, [X20 + 0x5A8]
	0x0337F3A8 MOV V8.16B, V0.16B
	0x0337F3AC TBNZ X8, 0x0, 0x337F3C4
	0x0337F3B0 ADRP X0, 0xD74000
	0x0337F3B4 LDR X0, [X0 + 0x5A8]
	0x0337F3B8 BL 0x1C16CF4
	0x0337F3BC MOVZ W8, 0x1
	0x0337F3C0 STRB W8, [X19 + 0xF9D]
	0x0337F3C4 LDR X0, [X20]
	0x0337F3C8 LDR W8, [X0 + 0xE0]
	0x0337F3CC CBNZ W8, 0x337F3D4
	0x0337F3D0 BL 0x1C16DFC
	0x0337F3D4 ADD X0, X31, 0x8
	0x0337F3D8 MOV V0.16B, V8.16B

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Call Activator.CreateInstance, X0
	005 Move X30, [X31+16]
	006 Move X19, [X31+24]
	007 Return X0
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move X19, X0
	010 Move X0, X19
	011 Call 0x3EB2AD0
	012 Move X19, X0
	013 Move X0, 0xD9E000
	014 Move X0, [X0+40]
	015 Call 0x1C17D08
	016 Move X8, [X19]
	017 Move X1, [X8]
	018 Call 0x1C18270
	019 Move TEMP, X0
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfNotEqual {42}
	023 Call 0x3EB2AE0
	024 Move X0, 0xD9E000
	025 Move X0, [X0+48]
	026 Call 0x1C17D08
	027 Call 0x1C17F10
	028 Move X19, X0
	029 Move X0, 0xD9E000
	030 Move X0, [X0+56]
	031 Call 0x1C17D08
	032 Move X1, X0
	033 Move X0, X19
	034 Move X2, X31
	035 Call MissingMemberException..ctor, X0, X1
	036 Move X0, 0xDAC000
	037 Move X0, [X0+3816]
	038 Call 0x1C17D08
	039 Move X1, X0
	040 Move X0, X19
	041 Call 0x1C17DEC
	042 Move W0, 8
	043 Call 0x3EB2AF0
	044 Move X8, [X19]
	045 Move [X0], X8
	046 Move X1, 0xB36000
	047 Add X1, X1, 3672
	048 Move X2, X31
	049 Call 0x3EB2B00
	050 Move X19, X0
	051 Call 0x3EB2AE0
	052 Move X0, X19
	053 Call 0x1D2D690
	054 Call 0x1991590

Method: System.Void .cctor()

Disassembly:
	0x0337F3DC BL 0x1C50A68
	0x0337F3E0 LDP D0, D8, [X31 + 0x8]
	0x0337F3E4 LDP X20, X19, [X31 + 0x20]
	0x0337F3E8 LDR X30, [X31 + 0x18]
	0x0337F3EC ADD X31, X31, 0x30
	0x0337F3F0 RET
	0x0337F3F4 FABS D0, D0
	0x0337F3F8 RET
	0x0337F3FC FABS S0, S0
	0x0337F400 RET
	0x0337F404 B 0x3EB1B80
	0x0337F408 B 0x3EB1D60
	0x0337F40C B 0x3EB1D70
	0x0337F410 B 0x3EB1D80
	0x0337F414 FRINTP D0, D0
	0x0337F418 RET
	0x0337F41C B 0x3EB1BF0
	0x0337F420 B 0x3EB1D90
	0x0337F424 B 0x3EB1DA0
	0x0337F428 FRINTM D0, D0
	0x0337F42C RET
	0x0337F430 B 0x3EB1C20
	0x0337F434 B 0x3EB1DB0
	0x0337F438 B 0x1C50A6C
	0x0337F43C B 0x3EB1C30
	0x0337F440 B 0x3EB1DC0
	0x0337F444 FSQRT D0, D0
	0x0337F448 RET
	0x0337F44C B 0x3EB1DD0
	0x0337F450 B 0x3EB1DE0
	0x0337F454 STR X30, [X31 - 0x30]!
	0x0337F458 STP X22, X21, [X31 + 0x10]
	0x0337F45C STP X20, X19, [X31 + 0x20]
	0x0337F460 ADRP X22, 0x105D000
	0x0337F464 ADRP X20, 0xD74000
	0x0337F468 ADRP X21, 0xDA5000
	0x0337F46C ADRP X19, 0xDAB000
	0x0337F470 LDRB W8, [X22 + 0xF9E]
	0x0337F474 LDR X20, [X20 + 0x5A8]
	0x0337F478 LDR X21, [X21 + 0x830]
	0x0337F47C LDR X19, [X19 + 0xF48]
	0x0337F480 TBNZ X8, 0x0, 0x337F4B0
	0x0337F484 ADRP X0, 0xDA5000
	0x0337F488 LDR X0, [X0 + 0x830]
	0x0337F48C BL 0x1C16CF4
	0x0337F490 ADRP X0, 0xD74000
	0x0337F494 LDR X0, [X0 + 0x5A8]
	0x0337F498 BL 0x1C16CF4
	0x0337F49C ADRP X0, 0xDAB000
	0x0337F4A0 LDR X0, [X0 + 0xF48]
	0x0337F4A4 BL 0x1C16CF4
	0x0337F4A8 MOVZ W8, 0x1
	0x0337F4AC STRB W8, [X22 + 0xF9E]
	0x0337F4B0 LDR X8, [X20]
	0x0337F4B4 MOVZ X9, 0x8000
	0x0337F4B8 MOVK X9, 0x37E00000
	0x0337F4BC MOVK X9, 0xC379
	0x0337F4C0 LDR X8, [X8 + 0xB8]
	0x0337F4C4 MOVK X9, 0x43410000
	0x0337F4C8 MOVZ W1, 0x10
	0x0337F4CC STR X9, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x105E000
	005 Move X20, 0xDA1000
	006 Move W8, [X19+3983]
	007 Move X20, [X20+248]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xDA1000
	013 Move X0, [X0+248]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3983], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move [X19+16], W31
	023 Move X8, [X20]
	024 Move X8, [X8+184]
	025 Move [X8], X19
	026 Move X0, [X20]
	027 Call 0x1C17F10
	028 Move X1, X31
	029 Move X19, X0
	030 Call Object..ctor, X0
	031 Move W8, 1
	032 Move [X19+16], W8
	033 Move X0, [X20]
	034 Move X8, [X0+184]
	035 Move [X8+8], X19
	036 Call 0x1C17F10
	037 Move X1, X31
	038 Move X19, X0
	039 Call Object..ctor, X0
	040 Move W8, 3
	041 Move [X19+16], W8
	042 Move X0, [X20]
	043 Move X8, [X0+184]
	044 Move [X8+16], X19
	045 Call 0x1C17F10
	046 Move X1, X31
	047 Move X19, X0
	048 Call Object..ctor, X0
	049 Move W8, 4
	050 Move [X19+16], W8
	051 Move X0, [X20]
	052 Move X8, [X0+184]
	053 Move [X8+24], X19
	054 Call 0x1C17F10
	055 Move X1, X31
	056 Move X19, X0
	057 Call Object..ctor, X0
	058 Move W8, 5
	059 Move [X19+16], W8
	060 Move X8, [X20]
	061 Move X8, [X8+184]
	062 Move [X8+32], X19
	063 Move X20, [X31+16]
	064 Move X19, [X31+24]
	065 Move X30, [X31+32]
	066 Return 

