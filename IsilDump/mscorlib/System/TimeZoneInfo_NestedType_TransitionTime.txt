Type: System.TimeZoneInfo/TransitionTime

Method: System.DateTime get_TimeOfDay()

Disassembly:
	0x03314468 STRB W8, [X21 + 0xB6B]
	0x0331446C LDR X0, [X20]

ISIL:
	001 Move X0, [X0]
	002 Return X0

Method: System.Int32 get_Month()

Disassembly:
	0x03314470 ADRP X21, 0xE13000
	0x03314474 ADRP X20, 0xE13000

ISIL:
	001 Move W0, [X0+8]
	002 Return X0

Method: System.Int32 get_Week()

Disassembly:
	0x03314478 LDR W8, [X0 + 0xE0]
	0x0331447C LDR X21, [X21 + 0xE58]

ISIL:
	001 Move W0, [X0+9]
	002 Return X0

Method: System.Int32 get_Day()

Disassembly:
	0x03314480 LDR X20, [X20 + 0xE40]
	0x03314484 CBNZ W8, 0x331448C

ISIL:
	001 Move W0, [X0+10]
	002 Return X0

Method: System.DayOfWeek get_DayOfWeek()

Disassembly:
	0x03314488 BL 0x1C16DFC
	0x0331448C LDR X1, [X21]

ISIL:
	001 Move W0, [X0+12]
	002 Return X0

Method: System.Boolean get_IsFixedDateRule()

Disassembly:
	0x03314490 MOV X0, X19
	0x03314494 MOV X2, X31

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x03314498 BL 0x33B2C70
	0x0331449C LDR X20, [X20]
	0x033144A0 LDR X8, [X20 + 0x38]
	0x033144A4 CBNZ X8, 0x33144B4
	0x033144A8 MOV X0, X20
	0x033144AC BL 0x1C5C6E0
	0x033144B0 LDR X8, [X20 + 0x38]
	0x033144B4 LDR X0, [X8 + 0x10]
	0x033144B8 LDRB W8, [X0 + 0x135]
	0x033144BC TBNZ X8, 0x0, 0x33144C4
	0x033144C0 BL 0x1C5C684
	0x033144C4 LDR W8, [X0 + 0xE0]
	0x033144C8 CBNZ W8, 0x33144D0
	0x033144CC BL 0x1C16DFC
	0x033144D0 LDR X8, [X20 + 0x38]
	0x033144D4 ADRP X22, 0xE13000
	0x033144D8 ADRP X21, 0xE13000
	0x033144DC LDR X0, [X8 + 0x10]
	0x033144E0 LDRB W8, [X0 + 0x135]
	0x033144E4 LDR X22, [X22 + 0xE50]
	0x033144E8 LDR X21, [X21 + 0xE48]
	0x033144EC TBNZ X8, 0x0, 0x33144F4
	0x033144F0 BL 0x1C5C684
	0x033144F4 LDR X8, [X0 + 0xB8]
	0x033144F8 LDR X0, [X22]
	0x033144FC LDR X20, [X8]
	0x03314500 BL 0x1C16F10
	0x03314504 LDR X2, [X21]
	0x03314508 MOV X1, X20
	0x0331450C MOV X21, X0
	0x03314510 BL 0x2551884
	0x03314514 STR X21, [X19 + 0x90]
	0x03314518 LDP X20, X19, [X31 + 0x20]
	0x0331451C LDP X22, X21, [X31 + 0x10]
	0x03314520 LDR X30, [X31], #0x30
	0x03314524 RET

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0x10C9000
	007 Move W8, [X21+2911]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE14000
	015 Move X0, [X0+3376]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2911], W8
	019 Compare X20, 0
	020 JumpIfEqual {26}
	021 Move X8, 0xE14000
	022 Move X8, [X8+3376]
	023 Move X9, [X20]
	024 Move X8, [X8]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W0, W31
	027 Move X0, X20
	028 Call 0x1C17E08
	029 Move V0, [X0]
	030 Move X8, [X0+16]
	031 Add X1, X31, 0
	032 Move X0, X19
	033 Move [X31], V0
	034 Move [X31+16], X8
	035 Call TransitionTime.Equals, X0, X1
	036 Move X20, [X31+48]
	037 Move X19, [X31+56]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 And W0, W0, 1
	041 Add X31, X31, 64
	042 Return X0

Method: System.Boolean op_Inequality(System.TimeZoneInfo/TransitionTime t1, System.TimeZoneInfo/TransitionTime t2)

Disassembly:
	0x03313578 STRB W22, [X24 + 0x8]
	0x0331357C STRB W21, [X24 + 0x9]
	0x03313580 STRB W20, [X24 + 0xA]
	0x03313584 STR W19, [X24 + 0xC]
	0x03313588 STRB W25, [X24 + 0x10]
	0x0331358C LDP X20, X19, [X31 + 0x30]
	0x03313590 LDP X22, X21, [X31 + 0x20]
	0x03313594 LDP X24, X23, [X31 + 0x10]
	0x03313598 LDP X30, X25, [X31], #0x40
	0x0331359C RET
	0x033135A0 SUB X31, X31, 0x50
	0x033135A4 STP X30, X0, [X31 + 0x10]
	0x033135A8 STP X24, X23, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move X8, [X1+16]
	004 Move V0, [X1]
	005 Add X1, X31, 0
	006 Move [X31+16], X8
	007 Move [X31], V0
	008 Call TransitionTime.Equals, X0, X1
	009 Move X30, [X31+32]
	010 NotImplemented "Instruction ORN not yet implemented."
	011 And W0, W8, 1
	012 Add X31, X31, 48
	013 Return X0

Method: System.Boolean Equals(System.TimeZoneInfo/TransitionTime other)

Disassembly:
	0x033135AC STP X22, X21, [X31 + 0x30]
	0x033135B0 STP X20, X19, [X31 + 0x40]
	0x033135B4 ADRP X24, 0x10C9000
	0x033135B8 ADRP X23, 0xDE1000
	0x033135BC LDRB W8, [X24 + 0xB61]
	0x033135C0 LDR X23, [X23 + 0x9F0]
	0x033135C4 MOV W19, W4
	0x033135C8 MOV W21, W3
	0x033135CC MOV W20, W2
	0x033135D0 MOV W22, W1
	0x033135D4 TBNZ X8, 0x0, 0x33135EC
	0x033135D8 ADRP X0, 0xDE1000
	0x033135DC LDR X0, [X0 + 0x9F0]
	0x033135E0 BL 0x1C16CF4
	0x033135E4 MOVZ W8, 0x1
	0x033135E8 STRB W8, [X24 + 0xB61]
	0x033135EC LDR X0, [X23]
	0x033135F0 STR X31, [X31 + 0x8]
	0x033135F4 STR W31, [X31 + 0x4]
	0x033135F8 LDR W8, [X0 + 0xE0]
	0x033135FC CBNZ W8, 0x3313604
	0x03313600 BL 0x1C16DFC
	0x03313604 ADD X0, X31, 0x18
	0x03313608 MOV X1, X31
	0x0331360C BL 0x336139C
	0x03313610 CBNZ W0, 0x3313720
	0x03313614 SUB W8, W22, 0x1
	0x03313618 CMP W8, 0xC
	0x0331361C B.CS 0x3313764
	0x03313620 SUB W8, W21, 0x1
	0x03313624 CMP W8, 0x1F
	0x03313628 B.CS 0x3313794
	0x0331362C SUB W8, W20, 0x1
	0x03313630 CMP W8, 0x5
	0x03313634 B.CS 0x33137C4
	0x03313638 CMP W19, 0x7
	0x0331363C B.CS 0x33137F4
	0x03313640 LDR X0, [X23]
	0x03313644 LDR W8, [X0 + 0xE0]
	0x03313648 CBNZ W8, 0x3313650
	0x0331364C BL 0x1C16DFC
	0x03313650 ADD X0, X31, 0x18
	0x03313654 ADD X1, X31, 0xC
	0x03313658 ADD X2, X31, 0x8
	0x0331365C ADD X3, X31, 0x4
	0x03313660 MOV X4, X31
	0x03313664 BL 0x3360278
	0x03313668 LDR W8, [X31 + 0xC]
	0x0331366C CMP W8, 0x1
	0x03313670 B.NE 0x3313700
	0x03313674 LDR W8, [X31 + 0x8]
	0x03313678 CMP W8, 0x1
	0x0331367C B.NE 0x3313700
	0x03313680 LDR W8, [X31 + 0x4]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x10CA000
	007 Move W8, [X21+2912]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDE2000
	015 Move X0, [X0+2544]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2912], W8
	019 Move W8, [X19+16]
	020 Move W9, [X20+16]
	021 And W8, W8, 1
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X8, 0xDE2000
	024 Move X8, [X8+2544]
	025 Move X21, [X20]
	026 Move X22, [X19]
	027 Move X0, [X8]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X21
	033 Move X1, X22
	034 Move X2, X31
	035 Call DateTime.op_Equality, X0, X1
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {53}
	040 Move W8, [X20+8]
	041 Move W9, [X19+8]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move W8, [X19+16]
	044 Move TEMP, X8
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {60}
	048 Move W8, [X20+9]
	049 Move W9, [X19+9]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move W8, [X20+12]
	052 Move W9, [X19+12]
	053 Move W0, W31
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X30, [X31+48]
	059 Return X0
	060 Move W8, [X20+10]
	061 Move W9, [X19+10]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 NotImplemented "Instruction CSET not yet implemented."

Method: System.Int32 GetHashCode()

Disassembly:
	0x03314528 STR X30, [X31 - 0x30]!
	0x0331452C STP X22, X21, [X31 + 0x10]

ISIL:
	001 NotImplemented "Instruction LDRH not yet implemented."
	002 Return X0

Method: System.Void .ctor(System.DateTime timeOfDay, System.Int32 month, System.Int32 week, System.Int32 day, System.DayOfWeek dayOfWeek, System.Boolean isFixedDateRule)

Disassembly:
	0x03314530 STP X20, X19, [X31 + 0x20]
	0x03314534 ADRP X21, 0x10C8000
	0x03314538 ADRP X22, 0xE13000
	0x0331453C LDRB W8, [X21 + 0xB6C]
	0x03314540 LDR X22, [X22 + 0xE58]
	0x03314544 MOV X19, X1
	0x03314548 MOV X20, X0
	0x0331454C TBNZ X8, 0x0, 0x3314564
	0x03314550 ADRP X0, 0xE13000
	0x03314554 LDR X0, [X0 + 0xE58]
	0x03314558 BL 0x1C16CF4
	0x0331455C MOVZ W8, 0x1
	0x03314560 STRB W8, [X21 + 0xB6C]
	0x03314564 LDR X1, [X22]
	0x03314568 MOV X0, X20
	0x0331456C MOV X2, X19
	0x03314570 LDP X20, X19, [X31 + 0x20]
	0x03314574 LDP X22, X21, [X31 + 0x10]
	0x03314578 LDR X30, [X31], #0x30
	0x0331457C B 0x3314580
	0x03314580 STP X30, X23, [X31 - 0x30]!
	0x03314584 STP X22, X21, [X31 + 0x10]
	0x03314588 STP X20, X19, [X31 + 0x20]
	0x0331458C ADRP X22, 0x10C8000
	0x03314590 ADRP X23, 0xE13000
	0x03314594 LDRB W8, [X22 + 0xB6E]
	0x03314598 LDR X23, [X23 + 0xE60]
	0x0331459C MOV X21, X2

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move W20, W4
	010 Move W21, W3
	011 Move W22, W2
	012 Move X23, X1
	013 Move X24, X0
	014 Move X0, X1
	015 Move W1, W2
	016 Move W2, W3
	017 Move W3, W4
	018 Move W4, W5
	019 Move W19, W5
	020 And W25, W6, 1
	021 Call TransitionTime.ValidateTransitionTime, X0, X1, X2, X3, X4
	022 Move [X24], X23
	023 Move [X24+8], W22
	024 Move [X24+9], W21
	025 Move [X24+10], W20
	026 Move [X24+12], W19
	027 Move [X24+16], W25
	028 Move X20, [X31+48]
	029 Move X19, [X31+56]
	030 Move X22, [X31+32]
	031 Move X21, [X31+40]
	032 Move X24, [X31+16]
	033 Move X23, [X31+24]
	034 Move X30, [X31+64]
	035 Move X25, [X31+72]
	036 Return 

Method: System.TimeZoneInfo/TransitionTime CreateFixedDateRule(System.DateTime timeOfDay, System.Int32 month, System.Int32 day)

Disassembly:
	0x0330C79C MOVZ W10, 0x1
	0x0330C7A0 CMP W9, 0x2
	0x0330C7A4 B.LT 0x330C7C8
	0x0330C7A8 ADD X11, X8, W10, 0x2, SXTW
	0x0330C7AC LDR W11, [X11 + 0x20]
	0x0330C7B0 CMP W23, W11
	0x0330C7B4 B.LE 0x330C7C8
	0x0330C7B8 ADD W10, W10, 0x1
	0x0330C7BC CMP W9, W10
	0x0330C7C0 B.NE 0x330C7A8
	0x0330C7C4 MOV W10, W9
	0x0330C7C8 SUB W11, W10, 0x1
	0x0330C7CC CMP W11, W9
	0x0330C7D0 STR W10, [X20]
	0x0330C7D4 B.CS 0x330C848
	0x0330C7D8 ADD X8, X8, W11, 0x2, SXTW
	0x0330C7DC LDR W8, [X8 + 0x20]
	0x0330C7E0 LDP X22, X21, [X31 + 0x20]
	0x0330C7E4 SUB W8, W23, W8
	0x0330C7E8 STR W8, [X19]
	0x0330C7EC LDP X20, X19, [X31 + 0x30]
	0x0330C7F0 LDP X24, X23, [X31 + 0x10]
	0x0330C7F4 LDP X30, X25, [X31], #0x40
	0x0330C7F8 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move W19, W2
	008 Move W2, 1
	009 Move W3, W19
	010 Move W4, W31
	011 Move W20, W1
	012 Move X21, X0
	013 Move X22, X8
	014 Move [X8], X31
	015 Move [X8+8], X31
	016 Move [X8+16], X31
	017 Move W23, 1
	018 Call TransitionTime.ValidateTransitionTime, X0, X1, X2, X3, X4
	019 Move [X22], X21
	020 Move [X22+8], W20
	021 Move [X22+9], W23
	022 Move [X22+10], W19
	023 Move [X22+12], W31
	024 Move [X22+16], W23
	025 Move X20, [X31+32]
	026 Move X19, [X31+40]
	027 Move X22, [X31+16]
	028 Move X21, [X31+24]
	029 Move X30, [X31+48]
	030 Move X23, [X31+56]
	031 Return X0

Method: System.TimeZoneInfo/TransitionTime CreateFloatingDateRule(System.DateTime timeOfDay, System.Int32 month, System.Int32 week, System.DayOfWeek dayOfWeek)

Disassembly:
	0x0330D61C LDRB W8, [X22 + 0xB25]
	0x0330D620 LDR X21, [X21 + 0xA38]
	0x0330D624 MOV X19, X1
	0x0330D628 MOV X20, X0
	0x0330D62C TBNZ X8, 0x0, 0x330D644
	0x0330D630 ADRP X0, 0xE1A000
	0x0330D634 LDR X0, [X0 + 0xA38]
	0x0330D638 BL 0x1C16CF4
	0x0330D63C MOVZ W8, 0x1
	0x0330D640 STRB W8, [X22 + 0xB25]
	0x0330D644 LDR X0, [X21]
	0x0330D648 LDR W8, [X0 + 0xE0]
	0x0330D64C CBNZ W8, 0x330D658
	0x0330D650 BL 0x1C16DFC
	0x0330D654 LDR X0, [X21]
	0x0330D658 LDR X8, [X0 + 0xB8]
	0x0330D65C MOV X0, X20
	0x0330D660 MOV X1, X19
	0x0330D664 LDP X20, X19, [X31 + 0x20]
	0x0330D668 LDR X3, [X8 + 0x8]
	0x0330D66C LDP X22, X21, [X31 + 0x10]
	0x0330D670 MOVZ W2, 0x2
	0x0330D674 LDR X30, [X31], #0x30
	0x0330D678 B 0x330D67C
	0x0330D67C SUB X31, X31, 0x40
	0x0330D680 STP X30, X23, [X31 + 0x10]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move W19, W3
	009 Move W3, 1
	010 Move W4, W19
	011 Move W20, W2
	012 Move W21, W1
	013 Move X22, X0
	014 Move X23, X8
	015 Move [X8], X31
	016 Move [X8+8], X31
	017 Move [X8+16], X31
	018 Move W24, 1
	019 Call TransitionTime.ValidateTransitionTime, X0, X1, X2, X3, X4
	020 Move [X23], X22
	021 Move [X23+8], W21
	022 Move [X23+9], W20
	023 Move [X23+10], W24
	024 Move [X23+12], W19
	025 Move [X23+16], W31
	026 Move X20, [X31+48]
	027 Move X19, [X31+56]
	028 Move X22, [X31+32]
	029 Move X21, [X31+40]
	030 Move X24, [X31+16]
	031 Move X23, [X31+24]
	032 Move X30, [X31+64]
	033 Return X0

Method: System.Void ValidateTransitionTime(System.DateTime timeOfDay, System.Int32 month, System.Int32 week, System.Int32 day, System.DayOfWeek dayOfWeek)

Disassembly:
	0x033145A0 MOV X19, X1
	0x033145A4 MOV X20, X0
	0x033145A8 TBNZ X8, 0x0, 0x33145D8
	0x033145AC ADRP X0, 0xE13000
	0x033145B0 LDR X0, [X0 + 0xE60]
	0x033145B4 BL 0x1C16CF4
	0x033145B8 ADRP X0, 0xE13000
	0x033145BC LDR X0, [X0 + 0xE68]
	0x033145C0 BL 0x1C16CF4
	0x033145C4 ADRP X0, 0xE13000
	0x033145C8 LDR X0, [X0 + 0xE70]
	0x033145CC BL 0x1C16CF4
	0x033145D0 MOVZ W8, 0x1
	0x033145D4 STRB W8, [X22 + 0xB6E]
	0x033145D8 LDR X1, [X23]
	0x033145DC MOV X0, X21
	0x033145E0 BL 0x1C16E00
	0x033145E4 MOV X22, X0
	0x033145E8 CBNZ X0, 0x3314620
	0x033145EC CBZ X21, 0x331461C
	0x033145F0 ADRP X8, 0xE13000
	0x033145F4 LDR X8, [X8 + 0xE70]
	0x033145F8 LDR X0, [X8]
	0x033145FC BL 0x1C16F10
	0x03314600 ADRP X8, 0xE13000
	0x03314604 LDR X8, [X8 + 0xE68]
	0x03314608 MOV X1, X21
	0x0331460C MOV X22, X0
	0x03314610 LDR X2, [X8]
	0x03314614 BL 0x301B8E0
	0x03314618 B 0x3314620
	0x0331461C MOV X22, X31
	0x03314620 MOV X0, X20
	0x03314624 MOV X1, X19
	0x03314628 MOV X2, X22
	0x0331462C LDP X20, X19, [X31 + 0x20]
	0x03314630 LDP X22, X21, [X31 + 0x10]
	0x03314634 LDP X30, X23, [X31], #0x30
	0x03314638 B 0x3314698
	0x0331463C STR X30, [X31 - 0x30]!
	0x03314640 STP X22, X21, [X31 + 0x10]
	0x03314644 STP X20, X19, [X31 + 0x20]
	0x03314648 ADRP X21, 0x10C8000
	0x0331464C ADRP X22, 0xE13000
	0x03314650 LDRB W8, [X21 + 0xB6D]
	0x03314654 LDR X22, [X22 + 0xE58]
	0x03314658 MOV X19, X1
	0x0331465C MOV X20, X0
	0x03314660 TBNZ X8, 0x0, 0x3314678
	0x03314664 ADRP X0, 0xE13000
	0x03314668 LDR X0, [X0 + 0xE58]
	0x0331466C BL 0x1C16CF4
	0x03314670 MOVZ W8, 0x1
	0x03314674 STRB W8, [X21 + 0xB6D]
	0x03314678 LDR X1, [X22]
	0x0331467C MOV X0, X20
	0x03314680 MOV X2, X19
	0x03314684 LDP X20, X19, [X31 + 0x20]
	0x03314688 LDP X22, X21, [X31 + 0x10]
	0x0331468C LDR X30, [X31], #0x30
	0x03314690 B 0x3314698
	0x03314694 B 0x3314698
	0x03314698 STR X30, [X31 - 0x60]!
	0x0331469C STP X28, X27, [X31 + 0x10]
	0x033146A0 STP X26, X25, [X31 + 0x20]
	0x033146A4 STP X24, X23, [X31 + 0x30]
	0x033146A8 STP X22, X21, [X31 + 0x40]
	0x033146AC STP X20, X19, [X31 + 0x50]
	0x033146B0 ADRP X22, 0x10C8000
	0x033146B4 LDRB W8, [X22 + 0xB6F]
	0x033146B8 MOV X20, X2
	0x033146BC MOV X21, X1
	0x033146C0 MOV X19, X0
	0x033146C4 TBNZ X8, 0x0, 0x3314718
	0x033146C8 ADRP X0, 0xE11000
	0x033146CC LDR X0, [X0 + 0x8C8]
	0x033146D0 BL 0x1C16CF4
	0x033146D4 ADRP X0, 0xDDF000
	0x033146D8 LDR X0, [X0 + 0x7D0]
	0x033146DC BL 0x1C16CF4
	0x033146E0 ADRP X0, 0xE13000
	0x033146E4 LDR X0, [X0 + 0xE78]
	0x033146E8 BL 0x1C16CF4
	0x033146EC ADRP X0, 0xE13000
	0x033146F0 LDR X0, [X0 + 0xE60]
	0x033146F4 BL 0x1C16CF4
	0x033146F8 ADRP X0, 0xE13000
	0x033146FC LDR X0, [X0 + 0xE48]
	0x03314700 BL 0x1C16CF4
	0x03314704 ADRP X0, 0xE13000
	0x03314708 LDR X0, [X0 + 0xE50]
	0x0331470C BL 0x1C16CF4
	0x03314710 MOVZ W8, 0x1
	0x03314714 STRB W8, [X22 + 0xB6F]
	0x03314718 ADRP X26, 0xDDF000
	0x0331471C LDR X26, [X26 + 0x7D0]
	0x03314720 CMP X20, 0x0
	0x03314724 CSEL X27, X31, X19, EQ
	0x03314728 CSEL X28, X31, X21, EQ
	0x0331472C CBZ X20, 0x3314A10
	0x03314730 ADRP X25, 0xE13000
	0x03314734 LDR X8, [X20]
	0x03314738 LDR X25, [X25 + 0xE78]
	0x0331473C LDRH W9, [X8 + 0x12E]
	0x03314740 LDR X1, [X25]
	0x03314744 CBZ X9, 0x3314768
	0x03314748 LDR X10, [X8 + 0xB0]
	0x0331474C ADD X10, X10, 0x8
	0x03314750 LDUR X11, [X10 - 0x8]
	0x03314754 CMP X11, X1
	0x03314758 B.EQ 0x3314778
	0x0331475C SUBS X9, X9, 0x1
	0x03314760 ADD X10, X10, 0x10
	0x03314764 B.NE 0x3314750
	0x03314768 MOV X0, X20
	0x0331476C MOV W2, W31
	0x03314770 BL 0x1C5C788
	0x03314774 B 0x3314784
	0x03314778 LDRSW X9, [X10]
	0x0331477C ADD X8, X8, X9, 0x4, LSL
	0x03314780 ADD X0, X8, 0x138
	0x03314784 LDP X8, X1, [X0]
	0x03314788 ADRP X24, 0xE13000
	0x0331478C LDR X24, [X24 + 0xE60]
	0x03314790 MOV X0, X20
	0x03314794 BLR X8
	0x03314798 CMP W0, 0x0
	0x0331479C CSEL X21, X27, X31, GT
	0x033147A0 CSEL X22, X28, X31, GT
	0x033147A4 CMP W0, 0x1
	0x033147A8 B.LT 0x33147EC
	0x033147AC LDR X8, [X20]
	0x033147B0 LDR X1, [X24]
	0x033147B4 LDRH W9, [X8 + 0x12E]
	0x033147B8 CBZ X9, 0x33147DC
	0x033147BC LDR X10, [X8 + 0xB0]
	0x033147C0 ADD X10, X10, 0x8
	0x033147C4 LDUR X11, [X10 - 0x8]
	0x033147C8 CMP X11, X1
	0x033147CC B.EQ 0x33147FC
	0x033147D0 SUBS X9, X9, 0x1
	0x033147D4 ADD X10, X10, 0x10
	0x033147D8 B.NE 0x33147C4
	0x033147DC MOV X0, X20
	0x033147E0 MOV W2, W31
	0x033147E4 BL 0x1C5C788
	0x033147E8 B 0x3314808
	0x033147EC MOV X23, X31
	0x033147F0 MOV X21, X27
	0x033147F4 MOV X22, X28
	0x033147F8 B 0x331481C
	0x033147FC LDRSW X9, [X10]
	0x03314800 ADD X8, X8, X9, 0x4, LSL
	0x03314804 ADD X0, X8, 0x138
	0x03314808 LDP X8, X2, [X0]
	0x0331480C MOV X0, X20
	0x03314810 MOV W1, W31
	0x03314814 BLR X8
	0x03314818 MOV X23, X0
	0x0331481C LDR X0, [X26]
	0x03314820 LDR W8, [X0 + 0xE0]
	0x03314824 CBNZ W8, 0x331482C
	0x03314828 BL 0x1C16DFC
	0x0331482C ADRP X26, 0xE11000
	0x03314830 LDR X26, [X26 + 0x8C8]
	0x03314834 MOV X0, X21
	0x03314838 MOV X1, X22
	0x0331483C MOV X2, X23
	0x03314840 MOV X3, X31
	0x03314844 BL 0x33B2CA0
	0x03314848 LDR X8, [X20]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X0
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X24, 0x10C9000
	011 Move X23, 0xDE1000
	012 Move W8, [X24+2913]
	013 Move X23, [X23+2544]
	014 Move W19, W4
	015 Move W21, W3
	016 Move W20, W2
	017 Move W22, W1
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0xDE1000
	023 Move X0, [X0+2544]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X24+2913], W8
	027 Move X0, [X23]
	028 Move [X31+8], X31
	029 Move [X31+4], W31
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Add X0, X31, 24
	035 Move X1, X31
	036 Call DateTime.get_Kind, X0
	037 Compare W0, 0
	038 JumpIfNotEqual {102}
	039 Subtract W8, W22, 1
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Subtract W8, W21, 1
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Subtract W8, W20, 1
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X0, [X23]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Add X0, X31, 24
	052 Add X1, X31, 12
	053 Add X2, X31, 8
	054 Add X3, X31, 4
	055 Move X4, X31
	056 Call DateTime.GetDatePart, X0, X1, X2, X3
	057 Move W8, [X31+12]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move W8, [X31+8]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move W8, [X31+4]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X0, [X23]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Add X0, X31, 24
	069 Move X1, X31
	070 Call DateTime.get_Ticks, X0
	071 Move X8, 0x7E91
	072 Move X9, 0x8650
	073 NotImplemented "Instruction MOVK not yet implemented."
	074 NotImplemented "Instruction MOVK not yet implemented."
	075 NotImplemented "Instruction MOVK not yet implemented."
	076 NotImplemented "Instruction MOVK not yet implemented."
	077 NotImplemented "Instruction MOVK not yet implemented."
	078 NotImplemented "Instruction MOVK not yet implemented."
	079 NotImplemented "Instruction MADD not yet implemented."
	080 Move X9, 0x10CB
	081 NotImplemented "Instruction MOVK not yet implemented."
	082 NotImplemented "Instruction MOVK not yet implemented."
	083 NotImplemented "Instruction EXTR not yet implemented."
	084 NotImplemented "Instruction MOVK not yet implemented."
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X20, [X31+64]
	087 Move X19, [X31+72]
	088 Move X22, [X31+48]
	089 Move X21, [X31+56]
	090 Move X24, [X31+32]
	091 Move X23, [X31+40]
	092 Move X30, [X31+16]
	093 Add X31, X31, 80
	094 Return 
	095 Move X0, 0xDE8000
	096 Move X0, [X0+1400]
	097 Call 0x1C17D08
	098 Call 0x1C17F10
	099 Move X19, X0
	100 Move X0, 0xE14000
	101 Move X0, [X0+3472]
	102 Move X0, 0xDE8000
	103 Move X0, [X0+1400]
	104 Call 0x1C17D08
	105 Call 0x1C17F10
	106 Move X19, X0
	107 Move X0, 0xE14000
	108 Move X0, [X0+3480]
	109 Call 0x1C17D08
	110 Move X20, X0
	111 Move X0, 0xE14000
	112 Move X0, [X0+3488]
	113 Call 0x1C17D08
	114 Move X2, X0
	115 Move X0, X19
	116 Move X1, X20
	117 Call ArgumentException..ctor, X0, X1, X2
	118 Move X0, 0xDE8000
	119 Move X0, [X0+1888]
	120 Call 0x1C17D08
	121 Call 0x1C17F10
	122 Move X19, X0
	123 Move X0, 0xE14000
	124 Move X0, [X0+3496]
	125 Call 0x1C17D08
	126 Move X20, X0
	127 Move X0, 0xE14000
	128 Move X0, [X0+3504]
	129 Move X0, 0xDE8000
	130 Move X0, [X0+1888]
	131 Call 0x1C17D08
	132 Call 0x1C17F10
	133 Move X19, X0
	134 Move X0, 0xE14000
	135 Move X0, [X0+3512]
	136 Call 0x1C17D08
	137 Move X20, X0
	138 Move X0, 0xE14000
	139 Move X0, [X0+3520]
	140 Move X0, 0xDE8000
	141 Move X0, [X0+1888]
	142 Call 0x1C17D08
	143 Call 0x1C17F10
	144 Move X19, X0
	145 Move X0, 0xE14000
	146 Move X0, [X0+3528]
	147 Call 0x1C17D08
	148 Move X20, X0
	149 Move X0, 0xE14000
	150 Move X0, [X0+3536]
	151 Move X0, 0xDE8000
	152 Move X0, [X0+1888]
	153 Call 0x1C17D08
	154 Call 0x1C17F10
	155 Move X19, X0
	156 Move X0, 0xE14000
	157 Move X0, [X0+3544]
	158 Call 0x1C17D08
	159 Move X20, X0
	160 Move X0, 0xE14000
	161 Move X0, [X0+3552]
	162 Call 0x1C17D08
	163 Move X2, X0
	164 Move X0, X19
	165 Move X1, X20
	166 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	167 Move X0, 0xE14000
	168 Move X0, [X0+3560]
	169 Call 0x1C17D08
	170 Move X1, X0
	171 Move X0, X19
	172 Call 0x1C17DEC

Method: System.Void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object sender)

Disassembly:
	0x0331484C LDR X1, [X25]
	0x03314850 LDRH W9, [X8 + 0x12E]
	0x03314854 CBZ X9, 0x3314878
	0x03314858 LDR X10, [X8 + 0xB0]
	0x0331485C ADD X10, X10, 0x8
	0x03314860 LDUR X11, [X10 - 0x8]
	0x03314864 CMP X11, X1
	0x03314868 B.EQ 0x3314888
	0x0331486C SUBS X9, X9, 0x1
	0x03314870 ADD X10, X10, 0x10
	0x03314874 B.NE 0x3314860
	0x03314878 MOV X0, X20
	0x0331487C MOV W2, W31
	0x03314880 BL 0x1C5C788
	0x03314884 B 0x3314894
	0x03314888 LDRSW X9, [X10]
	0x0331488C ADD X8, X8, X9, 0x4, LSL
	0x03314890 ADD X0, X8, 0x138
	0x03314894 LDP X8, X1, [X0]
	0x03314898 MOV X0, X20
	0x0331489C BLR X8
	0x033148A0 LDR X8, [X26]
	0x033148A4 MOV W1, W0
	0x033148A8 MOV X0, X8
	0x033148AC BL 0x1C16D6C
	0x033148B0 CBZ X0, 0x3314A64
	0x033148B4 LDR W8, [X0 + 0x18]
	0x033148B8 MOV X21, X0
	0x033148BC CMP W8, 0x1
	0x033148C0 B.LT 0x3314960
	0x033148C4 MOV X22, X31
	0x033148C8 LDR X8, [X20]
	0x033148CC LDR X1, [X24]
	0x033148D0 LDRH W9, [X8 + 0x12E]
	0x033148D4 CBZ X9, 0x33148F8
	0x033148D8 LDR X10, [X8 + 0xB0]
	0x033148DC ADD X10, X10, 0x8
	0x033148E0 LDUR X11, [X10 - 0x8]
	0x033148E4 CMP X11, X1
	0x033148E8 B.EQ 0x3314908
	0x033148EC SUBS X9, X9, 0x1
	0x033148F0 ADD X10, X10, 0x10
	0x033148F4 B.NE 0x33148E0
	0x033148F8 MOV X0, X20
	0x033148FC MOV W2, W31
	0x03314900 BL 0x1C5C788
	0x03314904 B 0x3314914
	0x03314908 LDRSW X9, [X10]
	0x0331490C ADD X8, X8, X9, 0x4, LSL
	0x03314910 ADD X0, X8, 0x138
	0x03314914 LDP X8, X2, [X0]
	0x03314918 MOV X0, X20
	0x0331491C MOV W1, W22
	0x03314920 BLR X8
	0x03314924 MOV X23, X0
	0x03314928 CBZ X0, 0x33149A8
	0x0331492C LDR X8, [X21]
	0x03314930 MOV X0, X23
	0x03314934 LDR X1, [X8 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W1, [X0+8]
	005 Move X8, [X0]
	006 Move W2, [X0+9]
	007 Move W3, [X0+10]
	008 Move W4, [X0+12]
	009 Move X0, X8
	010 Call TransitionTime.ValidateTransitionTime, X0, X1, X2, X3, X4
	011 Move X20, [X31+16]
	012 Move X19, [X31+24]
	013 Move X30, [X31+32]
	014 Return 
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move X19, X0
	017 Move X0, X19
	018 Call 0x3EB2AD0
	019 Move X19, X0
	020 Move X0, 0xDE8000
	021 Move X0, [X0+1400]
	022 Call 0x1C17D08
	023 Move X8, [X19]
	024 Move X1, [X8]
	025 Call 0x1C18270
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {51}
	030 Move X19, [X19]
	031 Call 0x3EB2AE0
	032 Move X0, 0xE0A000
	033 Move X0, [X0+736]
	034 Call 0x1C17D08
	035 Call 0x1C17F10
	036 Move X20, X0
	037 Move X0, 0xE14000
	038 Move X0, [X0+3200]
	039 Call 0x1C17D08
	040 Move X1, X0
	041 Move X0, X20
	042 Move X2, X19
	043 Move X3, X31
	044 Call SerializationException..ctor, X0, X1, X2
	045 Move X0, 0xE14000
	046 Move X0, [X0+3568]
	047 Call 0x1C17D08
	048 Move X1, X0
	049 Move X0, X20
	050 Call 0x1C17DEC
	051 Move W0, 8
	052 Call 0x3EB2AF0
	053 Move X8, [X19]
	054 Move [X0], X8
	055 Move X1, 0xBA1000
	056 Add X1, X1, 3672
	057 Move X2, X31
	058 Call 0x3EB2B00
	059 Move X19, X0
	060 Call 0x3EB2AE0
	061 Move X0, X19
	062 Call 0x1D2D690
	063 Call 0x1991590

Method: System.Void System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x03314938 BL 0x1C16E00
	0x0331493C CBZ X0, 0x3314A04
	0x03314940 LDR W8, [X21 + 0x18]
	0x03314944 CMP X22, X8
	0x03314948 B.CS 0x3314A00
	0x0331494C ADD X9, X21, X22, 0x3, LSL
	0x03314950 ADD X22, X22, 0x1
	0x03314954 CMP X22, W8, SXTW
	0x03314958 STR X23, [X9 + 0x20]
	0x0331495C B.LT 0x33148C8
	0x03314960 ADRP X8, 0xE13000
	0x03314964 LDR X8, [X8 + 0xE50]
	0x03314968 ADRP X20, 0xE13000
	0x0331496C LDR X0, [X8]
	0x03314970 LDR X20, [X20 + 0xE48]
	0x03314974 BL 0x1C16F10
	0x03314978 LDR X2, [X20]
	0x0331497C MOV X1, X21
	0x03314980 MOV X20, X0
	0x03314984 BL 0x2551884
	0x03314988 STR X20, [X19 + 0x90]
	0x0331498C LDP X20, X19, [X31 + 0x50]
	0x03314990 LDP X22, X21, [X31 + 0x40]
	0x03314994 LDP X24, X23, [X31 + 0x30]
	0x03314998 LDP X26, X25, [X31 + 0x20]
	0x0331499C LDP X28, X27, [X31 + 0x10]
	0x033149A0 LDR X30, [X31], #0x60
	0x033149A4 RET
	0x033149A8 LDR W8, [X21 + 0x18]
	0x033149AC CMP X22, X8
	0x033149B0 B.CS 0x3314A00
	0x033149B4 ADD X8, X21, X22, 0x3, LSL
	0x033149B8 STR X23, [X8 + 0x20]
	0x033149BC ADRP X0, 0xDE7000
	0x033149C0 LDR X0, [X0 + 0x578]
	0x033149C4 BL 0x1C16D08
	0x033149C8 BL 0x1C16F10
	0x033149CC MOV X19, X0
	0x033149D0 ADRP X0, 0xE13000
	0x033149D4 LDR X0, [X0 + 0xE80]
	0x033149D8 BL 0x1C16D08
	0x033149DC MOV X1, X0
	0x033149E0 MOV X0, X19
	0x033149E4 BL 0x3314A68
	0x033149E8 ADRP X0, 0xE13000
	0x033149EC LDR X0, [X0 + 0xE88]
	0x033149F0 BL 0x1C16D08
	0x033149F4 MOV X1, X0
	0x033149F8 MOV X0, X19
	0x033149FC BL 0x1C16DEC
	0x03314A00 BL 0x1C16F28
	0x03314A04 BL 0x1C16F44
	0x03314A08 MOV X1, X31
	0x03314A0C BL 0x1C16DEC
	0x03314A10 LDR X0, [X26]
	0x03314A14 LDR W8, [X0 + 0xE0]
	0x03314A18 CBNZ W8, 0x3314A20
	0x03314A1C BL 0x1C16DFC
	0x03314A20 MOV X0, X19
	0x03314A24 MOV X1, X21
	0x03314A28 MOV X2, X31
	0x03314A2C MOV X3, X31
	0x03314A30 BL 0x33B2CA0
	0x03314A34 ADRP X0, 0xDE4000
	0x03314A38 LDR X0, [X0 + 0x528]
	0x03314A3C BL 0x1C16D08
	0x03314A40 BL 0x1C16F10
	0x03314A44 MOV X19, X0
	0x03314A48 ADRP X0, 0xE13000
	0x03314A4C LDR X0, [X0 + 0xE90]
	0x03314A50 BL 0x1C16D08
	0x03314A54 MOV X1, X0
	0x03314A58 MOV X0, X19
	0x03314A5C BL 0x330E100
	0x03314A60 B 0x33149E8
	0x03314A64 BL 0x1C16F20
	0x03314A68 STP X30, X19, [X31 - 0x10]!
	0x03314A6C MOV X2, X31
	0x03314A70 MOV X19, X0
	0x03314A74 BL 0x338C8D8
	0x03314A78 MOVZ W8, 0x57
	0x03314A7C MOVK W8, 0x80070000
	0x03314A80 STR W8, [X19 + 0x60]
	0x03314A84 LDP X30, X19, [X31], #0x10
	0x03314A88 RET
	0x03314A8C STR X30, [X31 - 0x30]!
	0x03314A90 STP X22, X21, [X31 + 0x10]
	0x03314A94 STP X20, X19, [X31 + 0x20]
	0x03314A98 ADRP X21, 0x10C8000
	0x03314A9C ADRP X22, 0xE13000
	0x03314AA0 LDRB W8, [X21 + 0xB70]
	0x03314AA4 LDR X22, [X22 + 0xE58]
	0x03314AA8 MOV X19, X1
	0x03314AAC MOV X20, X0
	0x03314AB0 TBNZ X8, 0x0, 0x3314AC8
	0x03314AB4 ADRP X0, 0xE13000
	0x03314AB8 LDR X0, [X0 + 0xE58]
	0x03314ABC BL 0x1C16CF4
	0x03314AC0 MOVZ W8, 0x1
	0x03314AC4 STRB W8, [X21 + 0xB70]
	0x03314AC8 LDR X1, [X22]
	0x03314ACC MOV X0, X20
	0x03314AD0 MOV X2, X19
	0x03314AD4 LDP X20, X19, [X31 + 0x20]
	0x03314AD8 LDP X22, X21, [X31 + 0x10]
	0x03314ADC LDR X30, [X31], #0x30

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x10C9000
	011 Move W8, [X21+2914]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {41}
	018 Move X0, 0xDE5000
	019 Move X0, [X0+2936]
	020 Call 0x1C17CF4
	021 Move X0, 0xE14000
	022 Move X0, [X0+3576]
	023 Call 0x1C17CF4
	024 Move X0, 0xE14000
	025 Move X0, [X0+3584]
	026 Call 0x1C17CF4
	027 Move X0, 0xE14000
	028 Move X0, [X0+3592]
	029 Call 0x1C17CF4
	030 Move X0, 0xE14000
	031 Move X0, [X0+3600]
	032 Call 0x1C17CF4
	033 Move X0, 0xE14000
	034 Move X0, [X0+3608]
	035 Call 0x1C17CF4
	036 Move X0, 0xE14000
	037 Move X0, [X0+3616]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X21+2914], W8
	041 Compare X19, 0
	042 JumpIfEqual {102}
	043 Move X8, 0xE14000
	044 Move X8, [X8+3608]
	045 Move X21, 0xE14000
	046 Move X22, 0xE14000
	047 Move X23, 0xE14000
	048 Move X21, [X21+3576]
	049 Move X22, [X22+3600]
	050 Move X23, [X23+3584]
	051 Move X2, [X20]
	052 Move X1, [X8]
	053 Move X24, 0xDE5000
	054 Move X25, 0xE14000
	055 Move X26, 0xE14000
	056 Move X24, [X24+2936]
	057 Move X25, [X25+3592]
	058 Move X26, [X26+3616]
	059 Move X0, X19
	060 Move X3, X31
	061 Call SerializationInfo.AddValue, X0, X1, X2
	062 Move X1, [X21]
	063 Move W2, [X20+8]
	064 Move X0, X19
	065 Move X3, X31
	066 Call SerializationInfo.AddValue, X0, X1, X2
	067 Move X1, [X22]
	068 Move W2, [X20+9]
	069 Move X0, X19
	070 Move X3, X31
	071 Call SerializationInfo.AddValue, X0, X1, X2
	072 Move X1, [X23]
	073 Move W2, [X20+10]
	074 Move X0, X19
	075 Move X3, X31
	076 Call SerializationInfo.AddValue, X0, X1, X2
	077 Move W8, [X20+12]
	078 Move X0, [X24]
	079 Add X1, X31, 12
	080 Move [X31+12], W8
	081 Call 0x1C17E04
	082 Move X1, [X25]
	083 Move X2, X0
	084 Move X0, X19
	085 Move X3, X31
	086 Call SerializationInfo.AddValue, X0, X1, X2
	087 Move W2, [X20+16]
	088 Move X1, [X26]
	089 Move X0, X19
	090 Move X3, X31
	091 Call SerializationInfo.AddValue, X0, X1, X2
	092 Move X20, [X31+64]
	093 Move X19, [X31+72]
	094 Move X22, [X31+48]
	095 Move X21, [X31+56]
	096 Move X24, [X31+32]
	097 Move X23, [X31+40]
	098 Move X26, [X31+16]
	099 Move X25, [X31+24]
	100 Move X30, [X31+80]
	101 Return 
	102 Move X0, 0xDE5000
	103 Move X0, [X0+1320]
	104 Call 0x1C17D08
	105 Call 0x1C17F10
	106 Move X19, X0
	107 Move X0, 0xE0A000
	108 Move X0, [X0+728]
	109 Call 0x1C17D08
	110 Move X1, X0
	111 Move X0, X19
	112 Call ArgumentNullException..ctor, X0, X1
	113 Move X0, 0xE14000
	114 Move X0, [X0+3624]
	115 Call 0x1C17D08
	116 Move X1, X0
	117 Move X0, X19
	118 Call 0x1C17DEC

Method: System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x03314AE0 B 0x3314AE4
	0x03314AE4 STP X30, X23, [X31 - 0x30]!
	0x03314AE8 STP X22, X21, [X31 + 0x10]
	0x03314AEC STP X20, X19, [X31 + 0x20]
	0x03314AF0 ADRP X22, 0x10C8000
	0x03314AF4 ADRP X23, 0xE13000
	0x03314AF8 LDRB W8, [X22 + 0xB71]
	0x03314AFC LDR X23, [X23 + 0xE98]
	0x03314B00 MOV X21, X2
	0x03314B04 MOV X19, X1
	0x03314B08 MOV X20, X0
	0x03314B0C TBNZ X8, 0x0, 0x3314B3C
	0x03314B10 ADRP X0, 0xE13000
	0x03314B14 LDR X0, [X0 + 0xE98]
	0x03314B18 BL 0x1C16CF4
	0x03314B1C ADRP X0, 0xE13000
	0x03314B20 LDR X0, [X0 + 0xEA0]
	0x03314B24 BL 0x1C16CF4
	0x03314B28 ADRP X0, 0xE13000
	0x03314B2C LDR X0, [X0 + 0xEA8]
	0x03314B30 BL 0x1C16CF4
	0x03314B34 MOVZ W8, 0x1
	0x03314B38 STRB W8, [X22 + 0xB71]
	0x03314B3C LDR X1, [X23]
	0x03314B40 MOV X0, X21
	0x03314B44 BL 0x1C16E00
	0x03314B48 MOV X22, X0
	0x03314B4C CBNZ X0, 0x3314B84
	0x03314B50 CBZ X21, 0x3314B80
	0x03314B54 ADRP X8, 0xE13000
	0x03314B58 LDR X8, [X8 + 0xEA8]
	0x03314B5C LDR X0, [X8]
	0x03314B60 BL 0x1C16F10
	0x03314B64 ADRP X8, 0xE13000
	0x03314B68 LDR X8, [X8 + 0xEA0]
	0x03314B6C MOV X1, X21
	0x03314B70 MOV X22, X0
	0x03314B74 LDR X2, [X8]
	0x03314B78 BL 0x301B8E0
	0x03314B7C B 0x3314B84
	0x03314B80 MOV X22, X31
	0x03314B84 MOV X0, X20
	0x03314B88 MOV X1, X19
	0x03314B8C MOV X2, X22
	0x03314B90 LDP X20, X19, [X31 + 0x20]
	0x03314B94 LDP X22, X21, [X31 + 0x10]
	0x03314B98 LDP X30, X23, [X31], #0x30
	0x03314B9C B 0x3314BA0
	0x03314BA0 STR X30, [X31 - 0x60]!
	0x03314BA4 STP X28, X27, [X31 + 0x10]
	0x03314BA8 STP X26, X25, [X31 + 0x20]
	0x03314BAC STP X24, X23, [X31 + 0x30]
	0x03314BB0 STP X22, X21, [X31 + 0x40]
	0x03314BB4 STP X20, X19, [X31 + 0x50]
	0x03314BB8 ADRP X21, 0x10C8000
	0x03314BBC LDRB W8, [X21 + 0xB72]
	0x03314BC0 MOV X20, X2
	0x03314BC4 MOV X23, X1
	0x03314BC8 MOV X19, X0
	0x03314BCC TBNZ X8, 0x0, 0x3314C20
	0x03314BD0 ADRP X0, 0xE11000
	0x03314BD4 LDR X0, [X0 + 0x8C8]
	0x03314BD8 BL 0x1C16CF4
	0x03314BDC ADRP X0, 0xDDF000
	0x03314BE0 LDR X0, [X0 + 0x7D0]
	0x03314BE4 BL 0x1C16CF4
	0x03314BE8 ADRP X0, 0xE13000
	0x03314BEC LDR X0, [X0 + 0xEB0]
	0x03314BF0 BL 0x1C16CF4
	0x03314BF4 ADRP X0, 0xE13000
	0x03314BF8 LDR X0, [X0 + 0xE98]
	0x03314BFC BL 0x1C16CF4
	0x03314C00 ADRP X0, 0xE13000
	0x03314C04 LDR X0, [X0 + 0xE48]
	0x03314C08 BL 0x1C16CF4
	0x03314C0C ADRP X0, 0xE13000
	0x03314C10 LDR X0, [X0 + 0xE50]
	0x03314C14 BL 0x1C16CF4
	0x03314C18 MOVZ W8, 0x1
	0x03314C1C STRB W8, [X21 + 0xB72]
	0x03314C20 ADRP X26, 0xDDF000
	0x03314C24 LDR X26, [X26 + 0x7D0]
	0x03314C28 CMP X20, 0x0
	0x03314C2C CSEL X21, X31, X19, EQ
	0x03314C30 CSEL X22, X31, X23, EQ
	0x03314C34 CBZ X20, 0x3314F98
	0x03314C38 ADRP X25, 0xE13000
	0x03314C3C LDR X8, [X20]
	0x03314C40 LDR X25, [X25 + 0xEB0]
	0x03314C44 LDRH W9, [X8 + 0x12E]
	0x03314C48 LDR X1, [X25]
	0x03314C4C CBZ X9, 0x3314C70
	0x03314C50 LDR X10, [X8 + 0xB0]
	0x03314C54 ADD X10, X10, 0x8
	0x03314C58 LDUR X11, [X10 - 0x8]
	0x03314C5C CMP X11, X1
	0x03314C60 B.EQ 0x3314C80
	0x03314C64 SUBS X9, X9, 0x1
	0x03314C68 ADD X10, X10, 0x10
	0x03314C6C B.NE 0x3314C58
	0x03314C70 MOV X0, X20
	0x03314C74 MOV W2, W31
	0x03314C78 BL 0x1C5C788
	0x03314C7C B 0x3314C8C
	0x03314C80 LDRSW X9, [X10]
	0x03314C84 ADD X8, X8, X9, 0x4, LSL
	0x03314C88 ADD X0, X8, 0x138
	0x03314C8C LDP X8, X1, [X0]
	0x03314C90 ADRP X24, 0xE13000
	0x03314C94 LDR X24, [X24 + 0xE98]
	0x03314C98 MOV X0, X20
	0x03314C9C BLR X8
	0x03314CA0 CMP W0, 0x1
	0x03314CA4 CSEL X27, X31, X21, LT
	0x03314CA8 CSEL X28, X31, X22, LT
	0x03314CAC B.LT 0x3314CF0
	0x03314CB0 LDR X8, [X20]
	0x03314CB4 LDR X1, [X24]
	0x03314CB8 LDRH W9, [X8 + 0x12E]
	0x03314CBC CBZ X9, 0x3314CE0
	0x03314CC0 LDR X10, [X8 + 0xB0]
	0x03314CC4 ADD X10, X10, 0x8
	0x03314CC8 LDUR X11, [X10 - 0x8]
	0x03314CCC CMP X11, X1
	0x03314CD0 B.EQ 0x3314CF8
	0x03314CD4 SUBS X9, X9, 0x1
	0x03314CD8 ADD X10, X10, 0x10
	0x03314CDC B.NE 0x3314CC8
	0x03314CE0 MOV X0, X20
	0x03314CE4 MOV W2, W31
	0x03314CE8 BL 0x1C5C788
	0x03314CEC B 0x3314D04
	0x03314CF0 MOV X23, X31
	0x03314CF4 B 0x3314D98
	0x03314CF8 LDRSW X9, [X10]
	0x03314CFC ADD X8, X8, X9, 0x4, LSL
	0x03314D00 ADD X0, X8, 0x138
	0x03314D04 LDP X8, X2, [X0]
	0x03314D08 MOV X0, X20
	0x03314D0C MOV W1, W31
	0x03314D10 BLR X8
	0x03314D14 CMP X0, 0x0
	0x03314D18 CSEL X21, X31, X27, EQ
	0x03314D1C CSEL X22, X31, X28, EQ
	0x03314D20 CBZ X0, 0x3314D64
	0x03314D24 LDR X8, [X20]
	0x03314D28 LDR X1, [X24]
	0x03314D2C LDRH W9, [X8 + 0x12E]
	0x03314D30 CBZ X9, 0x3314D54
	0x03314D34 LDR X10, [X8 + 0xB0]
	0x03314D38 ADD X10, X10, 0x8
	0x03314D3C LDUR X11, [X10 - 0x8]
	0x03314D40 CMP X11, X1
	0x03314D44 B.EQ 0x3314D74
	0x03314D48 SUBS X9, X9, 0x1
	0x03314D4C ADD X10, X10, 0x10
	0x03314D50 B.NE 0x3314D3C
	0x03314D54 MOV X0, X20
	0x03314D58 MOV W2, W31
	0x03314D5C BL 0x1C5C788
	0x03314D60 B 0x3314D80
	0x03314D64 MOV X23, X31
	0x03314D68 MOV X21, X27
	0x03314D6C MOV X22, X28
	0x03314D70 B 0x3314D98
	0x03314D74 LDRSW X9, [X10]
	0x03314D78 ADD X8, X8, X9, 0x4, LSL
	0x03314D7C ADD X0, X8, 0x138
	0x03314D80 LDP X8, X2, [X0]
	0x03314D84 MOV X0, X20
	0x03314D88 MOV W1, W31
	0x03314D8C BLR X8
	0x03314D90 CBZ X0, 0x3314F94
	0x03314D94 LDR X23, [X0 + 0x10]
	0x03314D98 LDR X0, [X26]
	0x03314D9C LDR W8, [X0 + 0xE0]
	0x03314DA0 CBNZ W8, 0x3314DA8
	0x03314DA4 BL 0x1C16DFC
	0x03314DA8 ADRP X26, 0xE11000
	0x03314DAC LDR X26, [X26 + 0x8C8]
	0x03314DB0 MOV X0, X21
	0x03314DB4 MOV X1, X22
	0x03314DB8 MOV X2, X23
	0x03314DBC MOV X3, X31
	0x03314DC0 BL 0x33B2CA0
	0x03314DC4 LDR X8, [X20]
	0x03314DC8 LDR X1, [X25]
	0x03314DCC LDRH W9, [X8 + 0x12E]
	0x03314DD0 CBZ X9, 0x3314DF4
	0x03314DD4 LDR X10, [X8 + 0xB0]
	0x03314DD8 ADD X10, X10, 0x8
	0x03314DDC LDUR X11, [X10 - 0x8]
	0x03314DE0 CMP X11, X1
	0x03314DE4 B.EQ 0x3314E04
	0x03314DE8 SUBS X9, X9, 0x1
	0x03314DEC ADD X10, X10, 0x10
	0x03314DF0 B.NE 0x3314DDC
	0x03314DF4 MOV X0, X20
	0x03314DF8 MOV W2, W31
	0x03314DFC BL 0x1C5C788
	0x03314E00 B 0x3314E10
	0x03314E04 LDRSW X9, [X10]
	0x03314E08 ADD X8, X8, X9, 0x4, LSL
	0x03314E0C ADD X0, X8, 0x138
	0x03314E10 LDP X8, X1, [X0]
	0x03314E14 MOV X0, X20
	0x03314E18 BLR X8
	0x03314E1C LDR X8, [X26]
	0x03314E20 MOV W1, W0
	0x03314E24 MOV X0, X8
	0x03314E28 BL 0x1C16D6C
	0x03314E2C CBZ X0, 0x3314F94
	0x03314E30 LDR W8, [X0 + 0x18]
	0x03314E34 MOV X21, X0
	0x03314E38 CMP W8, 0x1
	0x03314E3C B.LT 0x3314EF8
	0x03314E40 MOV W22, W31
	0x03314E44 LDR X8, [X20]
	0x03314E48 LDR X1, [X24]
	0x03314E4C LDRH W9, [X8 + 0x12E]
	0x03314E50 CBZ X9, 0x3314E74
	0x03314E54 LDR X10, [X8 + 0xB0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x10C9000
	008 Move W8, [X21+2915]
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {62}
	015 Move X0, 0xE09000
	016 Move X0, [X0+584]
	017 Call 0x1C17CF4
	018 Move X0, 0xDE0000
	019 Move X0, [X0+2904]
	020 Call 0x1C17CF4
	021 Move X0, 0xE07000
	022 Move X0, [X0+3432]
	023 Call 0x1C17CF4
	024 Move X0, 0xDE1000
	025 Move X0, [X0+2520]
	026 Call 0x1C17CF4
	027 Move X0, 0xE11000
	028 Move X0, [X0+3896]
	029 Call 0x1C17CF4
	030 Move X0, 0xDE1000
	031 Move X0, [X0+2544]
	032 Call 0x1C17CF4
	033 Move X0, 0xE14000
	034 Move X0, [X0+3632]
	035 Call 0x1C17CF4
	036 Move X0, 0xDE5000
	037 Move X0, [X0+2936]
	038 Call 0x1C17CF4
	039 Move X0, 0xDE0000
	040 Move X0, [X0+1728]
	041 Call 0x1C17CF4
	042 Move X0, 0xE14000
	043 Move X0, [X0+3576]
	044 Call 0x1C17CF4
	045 Move X0, 0xE14000
	046 Move X0, [X0+3584]
	047 Call 0x1C17CF4
	048 Move X0, 0xE14000
	049 Move X0, [X0+3592]
	050 Call 0x1C17CF4
	051 Move X0, 0xE14000
	052 Move X0, [X0+3600]
	053 Call 0x1C17CF4
	054 Move X0, 0xE14000
	055 Move X0, [X0+3608]
	056 Call 0x1C17CF4
	057 Move X0, 0xE14000
	058 Move X0, [X0+3616]
	059 Call 0x1C17CF4
	060 Move W8, 1
	061 Move [X21+2915], W8
	062 Compare X20, 0
	063 JumpIfEqual {217}
	064 Move X8, 0xDE0000
	065 Move X8, [X8+1728]
	066 Move X22, 0xE14000
	067 Move X0, [X8]
	068 Move X8, 0xE11000
	069 Move X8, [X8+3896]
	070 Move W9, [X0+224]
	071 Move X21, [X8]
	072 Move X22, [X22+3608]
	073 Compare W9, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Move X0, X21
	077 Move X1, X31
	078 Call Type.GetTypeFromHandle, X0
	079 Move X1, [X22]
	080 Move X2, X0
	081 Move X0, X20
	082 Move X3, X31
	083 Call SerializationInfo.GetValue, X0, X1, X2
	084 Compare X0, 0
	085 JumpIfEqual {215}
	086 Move X8, 0xDE1000
	087 Move X8, [X8+2544]
	088 Move X9, [X0]
	089 Move X1, [X8]
	090 Move X8, [X9+64]
	091 Move X9, [X1+64]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move X21, 0xE07000
	094 Move X22, 0xE14000
	095 Move X21, [X21+3432]
	096 Move X22, [X22+3576]
	097 Call 0x1C17E08
	098 Move X8, [X0]
	099 Move X1, X31
	100 Move [X19], X8
	101 Move X0, [X21]
	102 Call Type.GetTypeFromHandle, X0
	103 Move X1, [X22]
	104 Move X2, X0
	105 Move X0, X20
	106 Move X3, X31
	107 Call SerializationInfo.GetValue, X0, X1, X2
	108 Compare X0, 0
	109 JumpIfEqual {215}
	110 Move X22, 0xDE1000
	111 Move X22, [X22+2520]
	112 Move X8, [X0]
	113 Move X1, [X22]
	114 Move X8, [X8+64]
	115 Move X9, [X1+64]
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X23, 0xE14000
	118 Move X23, [X23+3600]
	119 Call 0x1C17E08
	120 Move W8, [X0]
	121 Move X1, X31
	122 Move [X19+8], W8
	123 Move X0, [X21]
	124 Call Type.GetTypeFromHandle, X0
	125 Move X1, [X23]
	126 Move X2, X0
	127 Move X0, X20
	128 Move X3, X31
	129 Call SerializationInfo.GetValue, X0, X1, X2
	130 Compare X0, 0
	131 JumpIfEqual {215}
	132 Move X8, [X0]
	133 Move X1, [X22]
	134 Move X8, [X8+64]
	135 Move X9, [X1+64]
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move X23, 0xE14000
	138 Move X23, [X23+3584]
	139 Call 0x1C17E08
	140 Move W8, [X0]
	141 Move X1, X31
	142 Move [X19+9], W8
	143 Move X0, [X21]
	144 Call Type.GetTypeFromHandle, X0
	145 Move X1, [X23]
	146 Move X2, X0
	147 Move X0, X20
	148 Move X3, X31
	149 Call SerializationInfo.GetValue, X0, X1, X2
	150 Compare X0, 0
	151 JumpIfEqual {215}
	152 Move X8, [X0]
	153 Move X1, [X22]
	154 Move X8, [X8+64]
	155 Move X9, [X1+64]
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Move X21, 0xE14000
	158 Move X22, 0xE14000
	159 Move X21, [X21+3632]
	160 Move X22, [X22+3592]
	161 Call 0x1C17E08
	162 Move W8, [X0]
	163 Move X1, X31
	164 Move [X19+10], W8
	165 Move X0, [X21]
	166 Call Type.GetTypeFromHandle, X0
	167 Move X1, [X22]
	168 Move X2, X0
	169 Move X0, X20
	170 Move X3, X31
	171 Call SerializationInfo.GetValue, X0, X1, X2
	172 Compare X0, 0
	173 JumpIfEqual {215}
	174 Move X8, 0xDE5000
	175 Move X8, [X8+2936]
	176 Move X9, [X0]
	177 Move X1, [X8]
	178 Move X8, [X9+64]
	179 Move X9, [X1+64]
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Move X21, 0xE09000
	182 Move X22, 0xE14000
	183 Move X21, [X21+584]
	184 Move X22, [X22+3616]
	185 Call 0x1C17E08
	186 Move W8, [X0]
	187 Move X1, X31
	188 Move [X19+12], W8
	189 Move X0, [X21]
	190 Call Type.GetTypeFromHandle, X0
	191 Move X1, [X22]
	192 Move X2, X0
	193 Move X0, X20
	194 Move X3, X31
	195 Call SerializationInfo.GetValue, X0, X1, X2
	196 Compare X0, 0
	197 JumpIfEqual {215}
	198 Move X8, 0xDE0000
	199 Move X8, [X8+2904]
	200 Move X9, [X0]
	201 Move X1, [X8]
	202 Move X8, [X9+64]
	203 Move X9, [X1+64]
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Call 0x1C17E08
	206 Move W8, [X0]
	207 Move X22, [X31+16]
	208 Move X21, [X31+24]
	209 Move [X19+16], W8
	210 Move X20, [X31+32]
	211 Move X19, [X31+40]
	212 Move X30, [X31+48]
	213 Move X23, [X31+56]
	214 Return 
	215 Call 0x1C17F20
	216 Call 0x1C181E0
	217 Move X0, 0xDE5000
	218 Move X0, [X0+1320]
	219 Call 0x1C17D08
	220 Call 0x1C17F10
	221 Move X19, X0
	222 Move X0, 0xE0A000
	223 Move X0, [X0+728]
	224 Call 0x1C17D08
	225 Move X1, X0
	226 Move X0, X19
	227 Call ArgumentNullException..ctor, X0, X1
	228 Move X0, 0xE14000
	229 Move X0, [X0+3640]
	230 Call 0x1C17D08
	231 Move X1, X0
	232 Move X0, X19
	233 Call 0x1C17DEC

