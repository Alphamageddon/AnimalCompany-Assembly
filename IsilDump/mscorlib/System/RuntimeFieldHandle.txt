Type: System.RuntimeFieldHandle

Method: System.Void .ctor(System.IntPtr v)

Disassembly:
	0x033CC51C B 0x1C3D7AC
	0x033CC520 B 0x1C3A09C

ISIL:
	001 Move [X0], X1
	002 Return 

Method: System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x033CC524 B 0x1C3D7DC
	0x033CC528 MOV X8, X0
	0x033CC52C MOV X0, X1
	0x033CC530 MOV X1, X8
	0x033CC534 B 0x1C3D708
	0x033CC538 B 0x1C3D708
	0x033CC53C B 0x1C3D6AC
	0x033CC540 B 0x1C3D73C
	0x033CC544 STR X30, [X31 - 0x10]!
	0x033CC548 CBZ X0, 0x33CC560
	0x033CC54C CBZ X1, 0x33CC560
	0x033CC550 LDR X0, [X0 + 0x10]
	0x033CC554 LDR X1, [X1 + 0x10]
	0x033CC558 LDR X30, [X31], #0x10
	0x033CC55C B 0x1C3D5B4
	0x033CC560 BL 0x1C16F20
	0x033CC564 B 0x1C3D5B4
	0x033CC568 AND W3, W3, 0x1
	0x033CC56C AND W4, W4, 0x1
	0x033CC570 AND W5, W5, 0x1
	0x033CC574 B 0x1C3D868
	0x033CC578 STR X30, [X31 - 0x40]!
	0x033CC57C STP X24, X23, [X31 + 0x10]
	0x033CC580 STP X22, X21, [X31 + 0x20]
	0x033CC584 STP X20, X19, [X31 + 0x30]
	0x033CC588 ADRP X24, 0x1011000
	0x033CC58C LDRB W8, [X24 + 0x29F]
	0x033CC590 MOV X22, X4
	0x033CC594 MOV W23, W3
	0x033CC598 MOV W21, W2
	0x033CC59C MOV W19, W1
	0x033CC5A0 MOV X20, X0
	0x033CC5A4 TBNZ X8, 0x0, 0x33CC5C8
	0x033CC5A8 ADRP X0, 0xD50000
	0x033CC5AC LDR X0, [X0 + 0x4E8]
	0x033CC5B0 BL 0x1C16CF4
	0x033CC5B4 ADRP X0, 0xD29000
	0x033CC5B8 LDR X0, [X0 + 0x278]
	0x033CC5BC BL 0x1C16CF4
	0x033CC5C0 MOVZ W8, 0x1
	0x033CC5C4 STRB W8, [X24 + 0x29F]
	0x033CC5C8 CBZ X20, 0x33CC72C
	0x033CC5CC ADRP X8, 0xD29000
	0x033CC5D0 LDR X8, [X8 + 0x278]
	0x033CC5D4 MOV X0, X20
	0x033CC5D8 MOV X2, X31
	0x033CC5DC LDR X8, [X8]
	0x033CC5E0 LDR X8, [X8 + 0xB8]
	0x033CC5E4 LDR X1, [X8]
	0x033CC5E8 BL 0x321BA08
	0x033CC5EC TBZ X0, 0x0, 0x33CC5FC
	0x033CC5F0 TBNZ X19, 0x0, 0x33CC760
	0x033CC5F4 MOV X21, X31
	0x033CC5F8 B 0x33CC714
	0x033CC5FC TBZ X23, 0x0, 0x33CC6C4
	0x033CC600 MOVZ W1, 0x2C
	0x033CC604 MOV X0, X20
	0x033CC608 MOV X2, X31
	0x033CC60C BL 0x322BD98
	0x033CC610 CMP W0, 0x1
	0x033CC614 B.LT 0x33CC790
	0x033CC618 LDR W8, [X20 + 0x10]
	0x033CC61C MOV W22, W0
	0x033CC620 SUB W8, W8, 0x1
	0x033CC624 CMP W0, W8
	0x033CC628 B.EQ 0x33CC790
	0x033CC62C ADD W1, W22, 0x1
	0x033CC630 MOV X0, X20
	0x033CC634 MOV X2, X31
	0x033CC638 BL 0x322B484
	0x033CC63C MOV X1, X31
	0x033CC640 BL 0x32D59D0
	0x033CC644 MOV X23, X0
	0x033CC648 MOV X0, X20
	0x033CC64C MOV W1, W31
	0x033CC650 MOV W2, W22
	0x033CC654 MOV X3, X31
	0x033CC658 BL 0x3228DE4
	0x033CC65C CBZ X23, 0x33CC7EC
	0x033CC660 LDR X8, [X23]
	0x033CC664 MOV X1, X0
	0x033CC668 AND W2, W19, 0x1
	0x033CC66C AND W3, W21, 0x1
	0x033CC670 LDR X9, [X8 + 0x278]
	0x033CC674 LDR X4, [X8 + 0x280]
	0x033CC678 MOV X0, X23
	0x033CC67C BLR X9
	0x033CC680 MOV X21, X0
	0x033CC684 CBZ X0, 0x33CC714
	0x033CC688 ADRP X9, 0xD50000
	0x033CC68C LDR X9, [X9 + 0x4E8]
	0x033CC690 LDR X8, [X21]
	0x033CC694 LDR X1, [X9]
	0x033CC698 LDRB W10, [X8 + 0x130]
	0x033CC69C LDRB W9, [X1 + 0x130]
	0x033CC6A0 CMP W10, W9
	0x033CC6A4 B.CC 0x33CC6BC
	0x033CC6A8 LDR X8, [X8 + 0xC8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1012000
	007 Move W8, [X21+660]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0xD61000
	015 Move X0, [X0+2568]
	016 Call 0x1C17CF4
	017 Move X0, 0xD59000
	018 Move X0, [X0+2992]
	019 Call 0x1C17CF4
	020 Move X0, 0xD28000
	021 Move X0, [X0+1728]
	022 Call 0x1C17CF4
	023 Move X0, 0xD61000
	024 Move X0, [X0+2576]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+660], W8
	028 Compare X20, 0
	029 JumpIfEqual {76}
	030 Move X8, 0xD28000
	031 Move X8, [X8+1728]
	032 Move X22, 0xD61000
	033 Move X0, [X8]
	034 Move X8, 0xD61000
	035 Move X8, [X8+2568]
	036 Move W9, [X0+224]
	037 Move X21, [X8]
	038 Move X22, [X22+2576]
	039 Compare W9, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X21
	043 Move X1, X31
	044 Call Type.GetTypeFromHandle, X0
	045 Move X1, [X22]
	046 Move X2, X0
	047 Move X0, X20
	048 Move X3, X31
	049 Call SerializationInfo.GetValue, X0, X1, X2
	050 Compare X0, 0
	051 JumpIfEqual {88}
	052 Move X9, 0xD59000
	053 Move X9, [X9+2992]
	054 Move X8, [X0]
	055 Move X1, [X9]
	056 Move W10, [X8+304]
	057 Move W9, [X1+304]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X10, [X8+200]
	060 Add X9, X10, X9
	061 NotImplemented "Instruction LDUR not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X9, [X8+696]
	064 Move X1, [X8+704]
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move [X19], X0
	067 Compare X0, 0
	068 JumpIfEqual {89}
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move X22, [X31+16]
	072 Move X21, [X31+24]
	073 Move X30, [X31+48]
	074 Return 
	075 Call 0x1C181E0
	076 Move X0, 0xD2D000
	077 Move X0, [X0+1320]
	078 Call 0x1C17D08
	079 Call 0x1C17F10
	080 Move X19, X0
	081 Move X0, 0xD52000
	082 Move X0, [X0+728]
	083 Call 0x1C17D08
	084 Move X1, X0
	085 Move X0, X19
	086 Move X2, X31
	087 Call ArgumentNullException..ctor, X0, X1
	088 Call 0x1C17F20
	089 Move X0, 0xD52000
	090 Move X0, [X0+736]
	091 Call 0x1C17D08
	092 Call 0x1C17F10
	093 Move X19, X0
	094 Move X0, 0xD61000
	095 Move X0, [X0+2584]
	096 Call 0x1C17D08
	097 Move X1, X0
	098 Move X0, X19
	099 Move X2, X31
	100 Call SerializationException..ctor, X0, X1
	101 Move X0, 0xD61000
	102 Move X0, [X0+2592]
	103 Call 0x1C17D08
	104 Move X1, X0
	105 Move X0, X19
	106 Call 0x1C17DEC

Method: System.IntPtr get_Value()

Disassembly:
	0x033CC6AC ADD X8, X8, X9, 0x3, LSL
	0x033CC6B0 LDUR X8, [X8 - 0x8]

ISIL:
	001 Move X0, [X0]
	002 Return X0

Method: System.Void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x033CC6B4 CMP X8, X1
	0x033CC6B8 B.EQ 0x33CC714
	0x033CC6BC MOV X0, X21
	0x033CC6C0 BL 0x1C171E0
	0x033CC6C4 AND W3, W19, 0x1
	0x033CC6C8 AND W4, W21, 0x1
	0x033CC6CC MOV X0, X20
	0x033CC6D0 MOV X1, X22
	0x033CC6D4 MOV X2, X31
	0x033CC6D8 MOV W5, W31
	0x033CC6DC BL 0x1C3D868
	0x033CC6E0 MOV X21, X0
	0x033CC6E4 TBZ X19, 0x0, 0x33CC714
	0x033CC6E8 ADRP X8, 0xD50000
	0x033CC6EC LDR X8, [X8 + 0x4E8]
	0x033CC6F0 LDR X0, [X8]
	0x033CC6F4 LDR W8, [X0 + 0xE0]
	0x033CC6F8 CBNZ W8, 0x33CC700
	0x033CC6FC BL 0x1C16DFC
	0x033CC700 MOV X0, X21
	0x033CC704 MOV X1, X31
	0x033CC708 MOV X2, X31
	0x033CC70C BL 0x33A6674
	0x033CC710 TBNZ X0, 0x0, 0x33CC7F0
	0x033CC714 MOV X0, X21
	0x033CC718 LDP X20, X19, [X31 + 0x30]
	0x033CC71C LDP X22, X21, [X31 + 0x20]
	0x033CC720 LDP X24, X23, [X31 + 0x10]
	0x033CC724 LDR X30, [X31], #0x40
	0x033CC728 RET
	0x033CC72C ADRP X0, 0xD2C000
	0x033CC730 LDR X0, [X0 + 0x528]
	0x033CC734 BL 0x1C16D08
	0x033CC738 BL 0x1C16F10
	0x033CC73C MOV X19, X0
	0x033CC740 ADRP X0, 0xD59000
	0x033CC744 LDR X0, [X0 + 0x970]
	0x033CC748 BL 0x1C16D08
	0x033CC74C MOV X1, X0
	0x033CC750 MOV X0, X19
	0x033CC754 MOV X2, X31
	0x033CC758 BL 0x330E100
	0x033CC75C B 0x33CC7D4
	0x033CC760 ADRP X0, 0xD59000
	0x033CC764 LDR X0, [X0 + 0x4B8]
	0x033CC768 BL 0x1C16D08
	0x033CC76C BL 0x1C16F10
	0x033CC770 MOV X19, X0
	0x033CC774 ADRP X0, 0xD60000
	0x033CC778 LDR X0, [X0 + 0xA88]
	0x033CC77C BL 0x1C16D08
	0x033CC780 MOV X1, X0
	0x033CC784 MOV X0, X19
	0x033CC788 BL 0x33BE6D8
	0x033CC78C B 0x33CC7D4
	0x033CC790 ADRP X0, 0xD2F000
	0x033CC794 LDR X0, [X0 + 0x578]
	0x033CC798 BL 0x1C16D08
	0x033CC79C BL 0x1C16F10
	0x033CC7A0 MOV X19, X0
	0x033CC7A4 ADRP X0, 0xD60000
	0x033CC7A8 LDR X0, [X0 + 0xA90]
	0x033CC7AC BL 0x1C16D08
	0x033CC7B0 MOV X20, X0
	0x033CC7B4 ADRP X0, 0xD59000
	0x033CC7B8 LDR X0, [X0 + 0x970]
	0x033CC7BC BL 0x1C16D08
	0x033CC7C0 MOV X2, X0
	0x033CC7C4 MOV X0, X19
	0x033CC7C8 MOV X1, X20
	0x033CC7CC MOV X3, X31
	0x033CC7D0 BL 0x330E16C
	0x033CC7D4 ADRP X0, 0xD60000
	0x033CC7D8 LDR X0, [X0 + 0xA98]
	0x033CC7DC BL 0x1C16D08
	0x033CC7E0 MOV X1, X0
	0x033CC7E4 MOV X0, X19
	0x033CC7E8 BL 0x1C16DEC
	0x033CC7EC BL 0x1C16F20
	0x033CC7F0 ADRP X0, 0xD60000
	0x033CC7F4 LDR X0, [X0 + 0xAA0]
	0x033CC7F8 BL 0x1C16D08
	0x033CC7FC MOV X19, X0
	0x033CC800 ADRP X0, 0xD2F000
	0x033CC804 LDR X0, [X0 + 0x9B0]
	0x033CC808 BL 0x1C16D08
	0x033CC80C MOV X2, X0
	0x033CC810 MOV X0, X19
	0x033CC814 MOV X1, X20
	0x033CC818 MOV X3, X31
	0x033CC81C BL 0x32274B8
	0x033CC820 MOV X19, X0
	0x033CC824 ADRP X0, 0xD59000
	0x033CC828 LDR X0, [X0 + 0x4B8]
	0x033CC82C BL 0x1C16D08
	0x033CC830 BL 0x1C16F10
	0x033CC834 MOV X1, X19
	0x033CC838 MOV X20, X0
	0x033CC83C BL 0x33BE6D8
	0x033CC840 ADRP X0, 0xD60000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1012000
	007 Move W8, [X21+661]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0xD61000
	015 Move X0, [X0+2568]
	016 Call 0x1C17CF4
	017 Move X0, 0xD59000
	018 Move X0, [X0+2992]
	019 Call 0x1C17CF4
	020 Move X0, 0xD28000
	021 Move X0, [X0+1728]
	022 Call 0x1C17CF4
	023 Move X0, 0xD61000
	024 Move X0, [X0+2576]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+661], W8
	028 Compare X19, 0
	029 JumpIfEqual {80}
	030 Move X0, [X20]
	031 Compare X0, 0
	032 JumpIfEqual {92}
	033 Move X20, 0xD61000
	034 Move X21, 0xD28000
	035 Move X22, 0xD61000
	036 Move X20, [X20+2568]
	037 Move X21, [X21+1728]
	038 Move X22, [X22+2576]
	039 Move X1, X31
	040 Call FieldInfo.GetFieldFromHandle, X0
	041 Move X8, [X21]
	042 Move X21, [X20]
	043 Move X20, X0
	044 Move W9, [X8+224]
	045 Compare W9, 0
	046 JumpIfNotEqual {49}
	047 Move X0, X8
	048 Call 0x1C17DFC
	049 Move X0, X21
	050 Move X1, X31
	051 Call Type.GetTypeFromHandle, X0
	052 Move X1, [X22]
	053 Move X3, X0
	054 Compare X20, 0
	055 JumpIfEqual {67}
	056 Move X8, 0xD59000
	057 Move X8, [X8+2992]
	058 Move X9, [X20]
	059 Move X8, [X8]
	060 Move W11, [X9+304]
	061 Move W10, [X8+304]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X9, [X9+200]
	064 Add X9, X9, X10
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X0, X19
	068 Move X2, X20
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move X22, [X31+16]
	072 Move X21, [X31+24]
	073 Move X4, X31
	074 Move X30, [X31+48]
	075 Call SerializationInfo.AddValue, X0, X1, X2, X3
	076 Return 
	077 Move X0, X20
	078 Move X1, X8
	079 Call 0x1C181E0
	080 Move X0, 0xD2D000
	081 Move X0, [X0+1320]
	082 Call 0x1C17D08
	083 Call 0x1C17F10
	084 Move X19, X0
	085 Move X0, 0xD52000
	086 Move X0, [X0+728]
	087 Call 0x1C17D08
	088 Move X1, X0
	089 Move X0, X19
	090 Move X2, X31
	091 Call ArgumentNullException..ctor, X0, X1
	092 Move X0, 0xD52000
	093 Move X0, [X0+736]
	094 Call 0x1C17D08
	095 Call 0x1C17F10
	096 Move X19, X0
	097 Move X0, 0xD61000
	098 Move X0, [X0+2600]
	099 Call 0x1C17D08
	100 Move X1, X0
	101 Move X0, X19
	102 Move X2, X31
	103 Call SerializationException..ctor, X0, X1
	104 Move X0, 0xD61000
	105 Move X0, [X0+2608]
	106 Call 0x1C17D08
	107 Move X1, X0
	108 Move X0, X19
	109 Call 0x1C17DEC

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x033CC844 LDR X0, [X0 + 0xA98]
	0x033CC848 BL 0x1C16D08
	0x033CC84C MOV X1, X0
	0x033CC850 MOV X0, X20
	0x033CC854 BL 0x1C16DEC
	0x033CC858 CMP W1, 0x1
	0x033CC85C MOV X20, X0
	0x033CC860 B.NE 0x33CC8C8
	0x033CC864 MOV X0, X20
	0x033CC868 BL 0x3EB1AD0
	0x033CC86C MOV X20, X0
	0x033CC870 ADRP X0, 0xD2D000
	0x033CC874 LDR X0, [X0 + 0xCC0]
	0x033CC878 BL 0x1C16D08
	0x033CC87C LDR X8, [X20]
	0x033CC880 LDR X1, [X8]
	0x033CC884 BL 0x1C17270
	0x033CC888 TBZ X0, 0x0, 0x33CC8A0
	0x033CC88C LDR X20, [X20]
	0x033CC890 BL 0x3EB1AE0
	0x033CC894 TBZ X19, 0x0, 0x33CC5F4
	0x033CC898 MOV X0, X20
	0x033CC89C BL 0x1C16F18
	0x033CC8A0 MOVZ W0, 0x8
	0x033CC8A4 BL 0x3EB1AF0
	0x033CC8A8 LDR X8, [X20]
	0x033CC8AC STR X8, [X0]
	0x033CC8B0 ADRP X1, 0xAE8000
	0x033CC8B4 ADD X1, X1, 0xE58
	0x033CC8B8 MOV X2, X31
	0x033CC8BC BL 0x3EB1B00
	0x033CC8C0 MOV X20, X0
	0x033CC8C4 BL 0x3EB1AE0
	0x033CC8C8 MOV X0, X20
	0x033CC8CC BL 0x1D2C690
	0x033CC8D0 BL 0x1990590
	0x033CC8D4 STR X30, [X31 - 0x30]!
	0x033CC8D8 STP X22, X21, [X31 + 0x10]
	0x033CC8DC STP X20, X19, [X31 + 0x20]
	0x033CC8E0 ADRP X21, 0x1011000
	0x033CC8E4 LDRB W8, [X21 + 0x2A0]
	0x033CC8E8 MOV X19, X1
	0x033CC8EC MOV X20, X0
	0x033CC8F0 TBNZ X8, 0x0, 0x33CC920
	0x033CC8F4 ADRP X0, 0xD27000
	0x033CC8F8 LDR X0, [X0 + 0x758]
	0x033CC8FC BL 0x1C16CF4
	0x033CC900 ADRP X0, 0xD4E000
	0x033CC904 LDR X0, [X0 + 0x1D0]
	0x033CC908 BL 0x1C16CF4
	0x033CC90C ADRP X0, 0xD60000
	0x033CC910 LDR X0, [X0 + 0xAA8]
	0x033CC914 BL 0x1C16CF4
	0x033CC918 MOVZ W8, 0x1
	0x033CC91C STRB W8, [X21 + 0x2A0]
	0x033CC920 CBZ X19, 0x33CC9FC
	0x033CC924 ADRP X21, 0xD27000
	0x033CC928 ADRP X22, 0xD60000
	0x033CC92C LDR X21, [X21 + 0x758]
	0x033CC930 LDR X22, [X22 + 0xAA8]
	0x033CC934 MOV X0, X19
	0x033CC938 MOV W1, W31
	0x033CC93C MOV X2, X31

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x1012000
	009 Move W8, [X21+662]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xD61000
	017 Move X0, [X0+2616]
	018 Call 0x1C17CF4
	019 Move X0, 0xD28000
	020 Move X0, [X0+1728]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+662], W8
	024 Compare X19, 0
	025 JumpIfEqual {54}
	026 Move X23, 0xD61000
	027 Move X23, [X23+2616]
	028 Move X8, [X20]
	029 Move X22, 0xD28000
	030 Add X1, X31, 8
	031 Move X0, [X23]
	032 Move X22, [X22+1728]
	033 Move [X31+8], X8
	034 Call 0x1C17E04
	035 Call 0x1C26764
	036 Move X21, X0
	037 Move X0, X19
	038 Call 0x1C26764
	039 Move X8, [X22]
	040 Move X22, X0
	041 Move W9, [X8+224]
	042 Compare W9, 0
	043 JumpIfNotEqual {46}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move X0, X21
	047 Move X1, X22
	048 Move X2, X31
	049 Call Type.op_Inequality, X0, X1
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {55}
	054 Move W0, W31
	055 Move X8, [X19]
	056 Move X1, [X23]
	057 Move X8, [X8+64]
	058 Move X9, [X1+64]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X20, [X20]
	061 Move X0, X19
	062 Call 0x1C17E08
	063 Move X8, [X0]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 NotImplemented "Instruction CSET not yet implemented."
	066 Move X20, [X31+48]
	067 Move X19, [X31+56]
	068 Move X22, [X31+32]
	069 Move X21, [X31+40]
	070 Move X30, [X31+16]
	071 Move X23, [X31+24]
	072 Add X31, X31, 64
	073 Return X0
	074 Move X0, X19
	075 Call 0x1C181E0

Method: System.Int32 GetHashCode()

Disassembly:
	0x033CC940 BL 0x3222A1C
	0x033CC944 LDR X8, [X21]

ISIL:
	001 Move W0, [X0]
	002 Return X0

Method: System.Void SetValueInternal(System.Reflection.FieldInfo fi, System.Object obj, System.Object value)

Disassembly:
	0x033CC948 AND W9, W0, 0xFFFF

ISIL:
	001 Call 0x1C189F0
	002 Return 

Method: System.Void SetValue(System.Reflection.RuntimeFieldInfo field, System.Object obj, System.Object value, System.RuntimeType fieldType, System.Reflection.FieldAttributes fieldAttr, System.RuntimeType declaringType, ref System.Boolean domainInitialized)

Disassembly:
	0x033CC94C ADD X1, X31, 0xC

ISIL:
	001 Call 0x1C189F0
	002 Return 

Method: System.Void SetValueDirect(System.Reflection.RuntimeFieldInfo field, System.RuntimeType fieldType, System.Void* pTypedRef, System.Object value, System.RuntimeType contextType)

Disassembly:
	0x033CC950 STR W9, [X31 + 0xC]

ISIL:
	001 Call 0x1C188A0
	002 Return 

