Type: System.Tuple`2

Method: T1 get_Item1()

Disassembly:
	0x02703D34 MOV X0, X19
	0x02703D38 BL 0x1C5C788
	0x02703D3C B 0x2703D50

ISIL:
	001 Move X8, [X0+16]
	002 Move X1, [X0+24]
	003 Move X0, X8
	004 Return X0

Method: T2 get_Item2()

Disassembly:
	0x02703D40 LDR W9, [X10]
	0x02703D44 ADD W9, W9, 0x1

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void .ctor(T1 item1, T2 item2)

Disassembly:
	0x02703D48 ADD X8, X8, W9, 0x4, SXTW
	0x02703D4C ADD X0, X8, 0x138
	0x02703D50 LDP X3, X2, [X0]
	0x02703D54 MOV X0, X19
	0x02703D58 MOV X1, X20
	0x02703D5C LDP X20, X19, [X31 + 0x10]
	0x02703D60 LDP X30, X21, [X31], #0x20
	0x02703D64 BR X3
	0x02703D68 BL 0x1C16F20
	0x02703D6C STR X30, [X31 - 0x30]!
	0x02703D70 STP X22, X21, [X31 + 0x10]
	0x02703D74 STP X20, X19, [X31 + 0x20]
	0x02703D78 ADRP X21, 0x1CD7000
	0x02703D7C LDRB W8, [X21 + 0x5BE]
	0x02703D80 MOV X19, X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, X1
	007 Move X1, X31
	008 Move X19, X3
	009 Move X20, X2
	010 Move X22, X0
	011 Call Object..ctor, X0
	012 Move [X22+16], X21
	013 Move [X22+24], X20
	014 Move [X22+32], X19
	015 Move X20, [X31+32]
	016 Move X19, [X31+40]
	017 Move X22, [X31+16]
	018 Move X21, [X31+24]
	019 Move X30, [X31+48]
	020 Return 

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x02703D84 MOV X20, X0
	0x02703D88 TBNZ X8, 0x0, 0x2703DA0
	0x02703D8C ADRP X0, 0x1A1A000
	0x02703D90 LDR X0, [X0 + 0x900]
	0x02703D94 BL 0x1C16CF4
	0x02703D98 MOVZ W8, 0x1
	0x02703D9C STRB W8, [X21 + 0x5BE]
	0x02703DA0 CBZ X19, 0x2703E94
	0x02703DA4 ADRP X22, 0x1A1A000
	0x02703DA8 LDR X8, [X19]
	0x02703DAC LDR X22, [X22 + 0x900]
	0x02703DB0 LDR X21, [X20 + 0x10]
	0x02703DB4 LDRH W9, [X8 + 0x12E]
	0x02703DB8 LDR X1, [X22]
	0x02703DBC CBZ X9, 0x2703DE0
	0x02703DC0 LDR X10, [X8 + 0xB0]
	0x02703DC4 ADD X10, X10, 0x8
	0x02703DC8 LDUR X11, [X10 - 0x8]
	0x02703DCC CMP X11, X1
	0x02703DD0 B.EQ 0x2703DF0
	0x02703DD4 SUBS X9, X9, 0x1
	0x02703DD8 ADD X10, X10, 0x10
	0x02703DDC B.NE 0x2703DC8
	0x02703DE0 MOVZ W2, 0x1
	0x02703DE4 MOV X0, X19
	0x02703DE8 BL 0x1C5C788
	0x02703DEC B 0x2703E00
	0x02703DF0 LDR W9, [X10]
	0x02703DF4 ADD W9, W9, 0x1
	0x02703DF8 ADD X8, X8, W9, 0x4, SXTW
	0x02703DFC ADD X0, X8, 0x138
	0x02703E00 LDP X8, X2, [X0]
	0x02703E04 MOV X0, X19
	0x02703E08 MOV X1, X21
	0x02703E0C BLR X8
	0x02703E10 LDR X8, [X19]
	0x02703E14 LDR X21, [X20 + 0x18]
	0x02703E18 LDR X1, [X22]
	0x02703E1C MOV W20, W0
	0x02703E20 LDRH W9, [X8 + 0x12E]
	0x02703E24 CBZ X9, 0x2703E48
	0x02703E28 LDR X10, [X8 + 0xB0]
	0x02703E2C ADD X10, X10, 0x8
	0x02703E30 LDUR X11, [X10 - 0x8]
	0x02703E34 CMP X11, X1
	0x02703E38 B.EQ 0x2703E58
	0x02703E3C SUBS X9, X9, 0x1
	0x02703E40 ADD X10, X10, 0x10
	0x02703E44 B.NE 0x2703E30
	0x02703E48 MOVZ W2, 0x1
	0x02703E4C MOV X0, X19
	0x02703E50 BL 0x1C5C788

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1CD8000
	007 Move X22, 0x1A1B000
	008 Move W8, [X21+1457]
	009 Move X22, [X22+2288]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x1A1B000
	017 Move X0, [X0+2288]
	018 Call 0x1C17CF4
	019 Move X0, 0x1A1B000
	020 Move X0, [X0+2296]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+1457], W8
	024 Move X0, [X22]
	025 Call 0x211C0E8
	026 Compare X20, 0
	027 JumpIfEqual {59}
	028 Move X10, 0x1A1B000
	029 Move X8, [X20]
	030 Move X10, [X10+2296]
	031 Move X21, X0
	032 NotImplemented "Instruction LDRH not yet implemented."
	033 Move X1, [X10]
	034 Compare X9, 0
	035 JumpIfEqual {42}
	036 Move X10, [X8+176]
	037 Add X10, X10, 8
	038 NotImplemented "Instruction LDUR not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Subtract X9, X9, 1
	041 Add X10, X10, 16
	042 Move X0, X20
	043 Move W2, W31
	044 Call 0x1C5D788
	045 NotImplemented "Instruction LDRSW not yet implemented."
	046 Add X8, X8, X9
	047 Add X0, X8, 312
	048 Move X4, [X0]
	049 Move X3, [X0+8]
	050 Move X0, X20
	051 Move X1, X19
	052 Move X2, X21
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move X30, [X31+48]
	058 CallNoReturn X4
	059 Call 0x1C17F20

Method: System.Boolean System.Collections.IStructuralEquatable.Equals(System.Object other, System.Collections.IEqualityComparer comparer)

Disassembly:
	0x02703E54 B 0x2703E68
	0x02703E58 LDR W9, [X10]
	0x02703E5C ADD W9, W9, 0x1
	0x02703E60 ADD X8, X8, W9, 0x4, SXTW
	0x02703E64 ADD X0, X8, 0x138
	0x02703E68 LDP X8, X2, [X0]
	0x02703E6C MOV X0, X19
	0x02703E70 MOV X1, X21
	0x02703E74 BLR X8
	0x02703E78 MOV W1, W0
	0x02703E7C MOV W0, W20
	0x02703E80 LDP X20, X19, [X31 + 0x20]
	0x02703E84 LDP X22, X21, [X31 + 0x10]
	0x02703E88 MOV X2, X31
	0x02703E8C LDR X30, [X31], #0x30
	0x02703E90 B 0x3394DFC
	0x02703E94 BL 0x1C16F20
	0x02703E98 STP X30, X21, [X31 - 0x20]!
	0x02703E9C STP X20, X19, [X31 + 0x10]
	0x02703EA0 ADRP X20, 0x1CD7000
	0x02703EA4 ADRP X21, 0x19F0000
	0x02703EA8 LDRB W8, [X20 + 0x5BF]
	0x02703EAC LDR X21, [X21 + 0x8F0]
	0x02703EB0 MOV X19, X0
	0x02703EB4 TBNZ X8, 0x0, 0x2703ED8
	0x02703EB8 ADRP X0, 0x1A1A000
	0x02703EBC LDR X0, [X0 + 0x930]
	0x02703EC0 BL 0x1C16CF4
	0x02703EC4 ADRP X0, 0x19F0000
	0x02703EC8 LDR X0, [X0 + 0x8F0]
	0x02703ECC BL 0x1C16CF4
	0x02703ED0 MOVZ W8, 0x1
	0x02703ED4 STRB W8, [X20 + 0x5BF]
	0x02703ED8 LDR X0, [X21]
	0x02703EDC BL 0x1C16F10
	0x02703EE0 MOV X1, X31
	0x02703EE4 MOV X20, X0
	0x02703EE8 BL 0x3231AC4
	0x02703EEC CBZ X20, 0x2703F70
	0x02703EF0 MOVZ W1, 0x28
	0x02703EF4 MOV X0, X20
	0x02703EF8 MOV X2, X31
	0x02703EFC BL 0x3233D30
	0x02703F00 CBZ X19, 0x2703F70
	0x02703F04 ADRP X10, 0x1A1A000
	0x02703F08 LDR X8, [X19]
	0x02703F0C LDR X10, [X10 + 0x930]
	0x02703F10 LDRH W9, [X8 + 0x12E]
	0x02703F14 LDR X1, [X10]
	0x02703F18 CBZ X9, 0x2703F3C
	0x02703F1C LDR X10, [X8 + 0xB0]
	0x02703F20 ADD X10, X10, 0x8
	0x02703F24 LDUR X11, [X10 - 0x8]
	0x02703F28 CMP X11, X1
	0x02703F2C B.EQ 0x2703F4C
	0x02703F30 SUBS X9, X9, 0x1
	0x02703F34 ADD X10, X10, 0x10
	0x02703F38 B.NE 0x2703F24
	0x02703F3C MOV X0, X19
	0x02703F40 MOV W2, W31
	0x02703F44 BL 0x1C5C788
	0x02703F48 B 0x2703F58
	0x02703F4C LDRSW X9, [X10]
	0x02703F50 ADD X8, X8, X9, 0x4, LSL
	0x02703F54 ADD X0, X8, 0x138
	0x02703F58 LDP X3, X2, [X0]
	0x02703F5C MOV X0, X19
	0x02703F60 MOV X1, X20
	0x02703F64 LDP X20, X19, [X31 + 0x10]
	0x02703F68 LDP X30, X21, [X31], #0x20
	0x02703F6C BR X3
	0x02703F70 BL 0x1C16F20
	0x02703F74 STP X30, X21, [X31 - 0x20]!
	0x02703F78 STP X20, X19, [X31 + 0x10]
	0x02703F7C ADRP X21, 0x1CD7000
	0x02703F80 LDRB W8, [X21 + 0x5C0]
	0x02703F84 MOV X19, X1
	0x02703F88 MOV X20, X0
	0x02703F8C TBNZ X8, 0x0, 0x2703FA4
	0x02703F90 ADRP X0, 0x19F0000
	0x02703F94 LDR X0, [X0 + 0x838]
	0x02703F98 BL 0x1C16CF4
	0x02703F9C MOVZ W8, 0x1
	0x02703FA0 STRB W8, [X21 + 0x5C0]
	0x02703FA4 CBZ X19, 0x2704008
	0x02703FA8 LDR X1, [X20 + 0x10]
	0x02703FAC ADRP X21, 0x19F0000
	0x02703FB0 LDR X21, [X21 + 0x838]
	0x02703FB4 MOV X0, X19
	0x02703FB8 MOV X2, X31
	0x02703FBC BL 0x3233F90
	0x02703FC0 LDR X1, [X21]
	0x02703FC4 MOV X0, X19
	0x02703FC8 MOV X2, X31
	0x02703FCC BL 0x32333E0
	0x02703FD0 LDR X1, [X20 + 0x18]
	0x02703FD4 MOV X0, X19
	0x02703FD8 MOV X2, X31
	0x02703FDC BL 0x3233F90
	0x02703FE0 MOVZ W1, 0x29
	0x02703FE4 MOV X0, X19
	0x02703FE8 MOV X2, X31
	0x02703FEC BL 0x3233D30
	0x02703FF0 LDR X8, [X19]
	0x02703FF4 MOV X0, X19
	0x02703FF8 LDP X20, X19, [X31 + 0x10]
	0x02703FFC LDP X2, X1, [X8 + 0x168]
	0x02704000 LDP X30, X21, [X31], #0x20
	0x02704004 BR X2
	0x02704008 BL 0x1C16F20
	0x0270400C MOVZ W0, 0x2
	0x02704010 RET
	0x02704014 STP X29, X30, [X31 - 0x30]!
	0x02704018 STP X22, X21, [X31 + 0x10]
	0x0270401C STP X20, X19, [X31 + 0x20]
	0x02704020 ADD X29, X31, 0x0

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X23, 0x1CD8000
	010 Move W8, [X23+1458]
	011 Move X22, X3
	012 Move X19, X2
	013 Move X21, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x1A1B000
	020 Move X0, [X0+2304]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X23+1458], W8
	024 Compare X21, 0
	025 JumpIfEqual {109}
	026 Move X8, [X22+32]
	027 Move X8, [X8+192]
	028 Move X0, [X8]
	029 Move W8, [X0+309]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {35}
	034 Call 0x1C5D684
	035 Move X8, [X21]
	036 Move W9, [X0+304]
	037 Move W10, [X8+304]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X8, [X8+200]
	040 Add X8, X8, X9
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction CSEL not yet implemented."
	044 Move V0, [X20+1]
	045 Add X1, X31, 16
	046 Move [X31+1], V0
	047 Move X8, [X22+32]
	048 Move X8, [X8+192]
	049 Move X0, [X8+8]
	050 Call 0x1C17E04
	051 Compare X23, 0
	052 JumpIfEqual {129}
	053 Move V0, [X23+1]
	054 Move X21, X0
	055 Add X1, X31, 0
	056 Move [X31], V0
	057 Move X8, [X22+32]
	058 Move X8, [X8+192]
	059 Move X0, [X8+8]
	060 Call 0x1C17E04
	061 Compare X19, 0
	062 JumpIfEqual {129}
	063 Move X24, 0x1A1B000
	064 Move X8, [X19]
	065 Move X24, [X24+2304]
	066 Move X22, X0
	067 NotImplemented "Instruction LDRH not yet implemented."
	068 Move X1, [X24]
	069 Compare X9, 0
	070 JumpIfEqual {77}
	071 Move X10, [X8+176]
	072 Add X10, X10, 8
	073 NotImplemented "Instruction LDUR not yet implemented."
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Subtract X9, X9, 1
	076 Add X10, X10, 16
	077 Move X0, X19
	078 Move W2, W31
	079 Call 0x1C5D788
	080 NotImplemented "Instruction LDRSW not yet implemented."
	081 Add X8, X8, X9
	082 Add X0, X8, 312
	083 Move X8, [X0]
	084 Move X3, [X0+8]
	085 Move X0, X19
	086 Move X1, X21
	087 Move X2, X22
	088 NotImplemented "Instruction BLR not yet implemented."
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfNotEqual {109}
	093 Move X8, [X19]
	094 Move X21, [X20+32]
	095 Move X20, [X23+32]
	096 Move X1, [X24]
	097 NotImplemented "Instruction LDRH not yet implemented."
	098 Compare X9, 0
	099 JumpIfEqual {106}
	100 Move X10, [X8+176]
	101 Add X10, X10, 8
	102 NotImplemented "Instruction LDUR not yet implemented."
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Subtract X9, X9, 1
	105 Add X10, X10, 16
	106 Move X0, X19
	107 Move W2, W31
	108 Call 0x1C5D788
	109 Move W0, W31
	110 Move X20, [X31+80]
	111 Move X19, [X31+88]
	112 Move X22, [X31+64]
	113 Move X21, [X31+72]
	114 Move X24, [X31+48]
	115 Move X23, [X31+56]
	116 Move X30, [X31+32]
	117 And W0, W0, 1
	118 Add X31, X31, 96
	119 Return X0
	120 NotImplemented "Instruction LDRSW not yet implemented."
	121 Add X8, X8, X9
	122 Add X0, X8, 312
	123 Move X8, [X0]
	124 Move X3, [X0+8]
	125 Move X0, X19
	126 Move X1, X21
	127 Move X2, X20
	128 NotImplemented "Instruction BLR not yet implemented."
	129 Call 0x1C17F20

Method: System.Int32 System.IComparable.CompareTo(System.Object obj)

Disassembly:
	0x02704024 SUB X31, X31, 0x10
	0x02704028 MRS X22, 0xC000
	0x0270402C LDR X8, [X22 + 0x28]
	0x02704030 MOV X19, X1
	0x02704034 STUR X8, [X29 - 0x8]
	0x02704038 LDR X8, [X2 + 0x20]
	0x0270403C LDR X8, [X8 + 0xC0]
	0x02704040 LDP X8, X9, [X8]
	0x02704044 LDR W20, [X9 + 0xFC]
	0x02704048 ADD X9, X31, 0x0
	0x0270404C ADD X10, X20, 0xF
	0x02704050 AND X10, X10, 0x1FFFFFFFF
	0x02704054 SUB X21, X9, X10
	0x02704058 ADD X31, X21, 0x0
	0x0270405C LDR X1, [X8 + 0x80]
	0x02704060 BL 0x1C16D18
	0x02704064 MOV X1, X0
	0x02704068 MOV X0, X21
	0x0270406C MOV X2, X20
	0x02704070 BL 0x3EB1AC0
	0x02704074 MOV X0, X19
	0x02704078 MOV X1, X21
	0x0270407C MOV X2, X20
	0x02704080 BL 0x3EB1AC0
	0x02704084 LDR X8, [X22 + 0x28]
	0x02704088 LDUR X9, [X29 - 0x8]
	0x0270408C CMP X8, X9
	0x02704090 B.NE 0x27040A8
	0x02704094 ADD X31, X29, 0x0
	0x02704098 LDP X20, X19, [X31 + 0x20]
	0x0270409C LDP X22, X21, [X31 + 0x10]
	0x027040A0 LDP X29, X30, [X31], #0x30
	0x027040A4 RET
	0x027040A8 BL 0x3EB1B20
	0x027040AC STP X29, X30, [X31 - 0x30]!
	0x027040B0 STP X22, X21, [X31 + 0x10]
	0x027040B4 STP X20, X19, [X31 + 0x20]
	0x027040B8 ADD X29, X31, 0x0
	0x027040BC SUB X31, X31, 0x10
	0x027040C0 MRS X22, 0xC000
	0x027040C4 LDR X8, [X22 + 0x28]
	0x027040C8 MOV X19, X1
	0x027040CC STUR X8, [X29 - 0x8]
	0x027040D0 LDR X8, [X2 + 0x20]
	0x027040D4 LDR X8, [X8 + 0xC0]
	0x027040D8 LDR X9, [X8 + 0x10]
	0x027040DC LDR W20, [X9 + 0xFC]
	0x027040E0 ADD X9, X31, 0x0
	0x027040E4 ADD X10, X20, 0xF
	0x027040E8 AND X10, X10, 0x1FFFFFFFF
	0x027040EC SUB X21, X9, X10
	0x027040F0 ADD X31, X21, 0x0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1CD7000
	007 Move X22, 0x1A1A000
	008 Move W8, [X21+1459]
	009 Move X22, [X22+2312]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x1A1A000
	017 Move X0, [X0+2312]
	018 Call 0x1C17CF4
	019 Move X0, 0x1A1A000
	020 Move X0, [X0+2320]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+1459], W8
	024 Move X0, [X22]
	025 Call Comparer`1<Object>.get_Default
	026 Compare X20, 0
	027 JumpIfEqual {59}
	028 Move X10, 0x1A1A000
	029 Move X8, [X20]
	030 Move X10, [X10+2320]
	031 Move X21, X0
	032 NotImplemented "Instruction LDRH not yet implemented."
	033 Move X1, [X10]
	034 Compare X9, 0
	035 JumpIfEqual {42}
	036 Move X10, [X8+176]
	037 Add X10, X10, 8
	038 NotImplemented "Instruction LDUR not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Subtract X9, X9, 1
	041 Add X10, X10, 16
	042 Move X0, X20
	043 Move W2, W31
	044 Call 0x1C5D788
	045 NotImplemented "Instruction LDRSW not yet implemented."
	046 Add X8, X8, X9
	047 Add X0, X8, 312
	048 Move X4, [X0]
	049 Move X3, [X0+8]
	050 Move X0, X20
	051 Move X1, X19
	052 Move X2, X21
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move X30, [X31+48]
	058 CallNoReturn X4
	059 Call 0x1C17F20

Method: System.Int32 System.Collections.IStructuralComparable.CompareTo(System.Object other, System.Collections.IComparer comparer)

Disassembly:
	0x027040F4 LDR X8, [X8]
	0x027040F8 LDR X8, [X8 + 0x80]
	0x027040FC ADD X1, X8, 0x20
	0x02704100 BL 0x1C16D18
	0x02704104 MOV X1, X0
	0x02704108 MOV X0, X21
	0x0270410C MOV X2, X20
	0x02704110 BL 0x3EB1AC0
	0x02704114 MOV X0, X19
	0x02704118 MOV X1, X21
	0x0270411C MOV X2, X20
	0x02704120 BL 0x3EB1AC0
	0x02704124 LDR X8, [X22 + 0x28]
	0x02704128 LDUR X9, [X29 - 0x8]
	0x0270412C CMP X8, X9
	0x02704130 B.NE 0x2704148
	0x02704134 ADD X31, X29, 0x0
	0x02704138 LDP X20, X19, [X31 + 0x20]
	0x0270413C LDP X22, X21, [X31 + 0x10]
	0x02704140 LDP X29, X30, [X31], #0x30
	0x02704144 RET
	0x02704148 BL 0x3EB1B20
	0x0270414C STP X29, X30, [X31 - 0x60]!
	0x02704150 STP X28, X27, [X31 + 0x10]
	0x02704154 STP X26, X25, [X31 + 0x20]
	0x02704158 STP X24, X23, [X31 + 0x30]
	0x0270415C STP X22, X21, [X31 + 0x40]
	0x02704160 STP X20, X19, [X31 + 0x50]
	0x02704164 ADD X29, X31, 0x0
	0x02704168 SUB X31, X31, 0x20
	0x0270416C MRS X27, 0xC000
	0x02704170 LDR X8, [X27 + 0x28]
	0x02704174 MOV X21, X3
	0x02704178 MOV X20, X2
	0x0270417C MOV X22, X1
	0x02704180 STUR X8, [X29 - 0x8]
	0x02704184 STP X2, X1, [X29 - 0x18]
	0x02704188 LDR X8, [X3 + 0x20]
	0x0270418C MOV X24, X0
	0x02704190 LDR X8, [X8 + 0xC0]
	0x02704194 LDP X9, X8, [X8 + 0x8]
	0x02704198 LDR W23, [X9 + 0xFC]
	0x0270419C LDR W19, [X8 + 0xFC]
	0x027041A0 ADD X8, X31, 0x0
	0x027041A4 ADD X9, X23, 0xF
	0x027041A8 AND X9, X9, 0x1FFFFFFFF
	0x027041AC SUB X25, X8, X9
	0x027041B0 ADD X31, X25, 0x0
	0x027041B4 ADD X9, X19, 0xF
	0x027041B8 ADD X8, X31, 0x0
	0x027041BC AND X9, X9, 0x1FFFFFFFF
	0x027041C0 SUB X26, X8, X9
	0x027041C4 ADD X31, X26, 0x0
	0x027041C8 MOV X1, X31
	0x027041CC BL 0x33BDD8C
	0x027041D0 LDR X28, [X21 + 0x20]
	0x027041D4 MOV X0, X25
	0x027041D8 MOV X2, X23
	0x027041DC LDR X8, [X28 + 0xC0]
	0x027041E0 LDR X8, [X8 + 0x8]
	0x027041E4 LDR W8, [X8 + 0x28]
	0x027041E8 CMP W8, 0x0
	0x027041EC SUB X8, X29, 0x10
	0x027041F0 CSEL X1, X22, X8, LT
	0x027041F4 BL 0x3EB1AC0
	0x027041F8 LDR X8, [X28 + 0xC0]
	0x027041FC MOV X0, X24
	0x02704200 MOV X2, X25
	0x02704204 MOV W3, W23
	0x02704208 LDR X8, [X8]
	0x0270420C LDR X1, [X8 + 0x80]
	0x02704210 BL 0x1C16D1C
	0x02704214 LDR X21, [X21 + 0x20]
	0x02704218 MOV X0, X26
	0x0270421C MOV X2, X19
	0x02704220 LDR X8, [X21 + 0xC0]
	0x02704224 LDR X8, [X8 + 0x10]
	0x02704228 LDR W8, [X8 + 0x28]
	0x0270422C CMP W8, 0x0
	0x02704230 SUB X8, X29, 0x18
	0x02704234 CSEL X1, X20, X8, LT
	0x02704238 BL 0x3EB1AC0
	0x0270423C LDR X8, [X21 + 0xC0]
	0x02704240 MOV X0, X24
	0x02704244 MOV X2, X26
	0x02704248 MOV W3, W19
	0x0270424C LDR X8, [X8]
	0x02704250 LDR X8, [X8 + 0x80]
	0x02704254 ADD X1, X8, 0x20
	0x02704258 BL 0x1C16D1C
	0x0270425C LDR X8, [X27 + 0x28]
	0x02704260 LDUR X9, [X29 - 0x8]
	0x02704264 CMP X8, X9
	0x02704268 B.NE 0x270428C
	0x0270426C ADD X31, X29, 0x0
	0x02704270 LDP X20, X19, [X31 + 0x50]
	0x02704274 LDP X22, X21, [X31 + 0x40]
	0x02704278 LDP X24, X23, [X31 + 0x30]
	0x0270427C LDP X26, X25, [X31 + 0x20]
	0x02704280 LDP X28, X27, [X31 + 0x10]
	0x02704284 LDP X29, X30, [X31], #0x60
	0x02704288 RET
	0x0270428C BL 0x3EB1B20
	0x02704290 STR X30, [X31 - 0x30]!
	0x02704294 STP X22, X21, [X31 + 0x10]
	0x02704298 STP X20, X19, [X31 + 0x20]
	0x0270429C ADRP X21, 0x1CD6000
	0x027042A0 ADRP X22, 0x1A19000
	0x027042A4 LDRB W8, [X21 + 0x5C1]
	0x027042A8 LDR X22, [X22 + 0x8F0]
	0x027042AC MOV X19, X1
	0x027042B0 MOV X20, X0
	0x027042B4 TBNZ X8, 0x0, 0x27042D8
	0x027042B8 ADRP X0, 0x1A19000
	0x027042BC LDR X0, [X0 + 0x8F0]
	0x027042C0 BL 0x1C16CF4
	0x027042C4 ADRP X0, 0x1A19000
	0x027042C8 LDR X0, [X0 + 0x8F8]
	0x027042CC BL 0x1C16CF4
	0x027042D0 MOVZ W8, 0x1
	0x027042D4 STRB W8, [X21 + 0x5C1]
	0x027042D8 LDR X0, [X22]
	0x027042DC BL 0x211B0E8
	0x027042E0 CBZ X20, 0x270435C
	0x027042E4 ADRP X10, 0x1A19000
	0x027042E8 LDR X8, [X20]
	0x027042EC LDR X10, [X10 + 0x8F8]
	0x027042F0 MOV X21, X0
	0x027042F4 LDRH W9, [X8 + 0x12E]
	0x027042F8 LDR X1, [X10]
	0x027042FC CBZ X9, 0x2704320
	0x02704300 LDR X10, [X8 + 0xB0]
	0x02704304 ADD X10, X10, 0x8
	0x02704308 LDUR X11, [X10 - 0x8]
	0x0270430C CMP X11, X1
	0x02704310 B.EQ 0x2704330
	0x02704314 SUBS X9, X9, 0x1
	0x02704318 ADD X10, X10, 0x10
	0x0270431C B.NE 0x2704308
	0x02704320 MOV X0, X20
	0x02704324 MOV W2, W31
	0x02704328 BL 0x1C5C788
	0x0270432C B 0x270433C
	0x02704330 LDRSW X9, [X10]
	0x02704334 ADD X8, X8, X9, 0x4, LSL
	0x02704338 ADD X0, X8, 0x138
	0x0270433C LDP X4, X3, [X0]
	0x02704340 MOV X0, X20
	0x02704344 MOV X1, X19

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X23, 0x1CD7000
	010 Move W8, [X23+1460]
	011 Move X22, X3
	012 Move X19, X2
	013 Move X21, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x1A1A000
	020 Move X0, [X0+2328]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X23+1460], W8
	024 Compare X21, 0
	025 JumpIfEqual {78}
	026 Move X8, [X22+32]
	027 Move X8, [X8+192]
	028 Move X0, [X8]
	029 Move W8, [X0+309]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {35}
	034 Call 0x1C5D684
	035 Move X8, [X21]
	036 Move W9, [X0+304]
	037 Move W10, [X8+304]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X8, [X8+200]
	040 Add X8, X8, X9
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move V0, [X20+1]
	044 Add X1, X31, 16
	045 Move [X31+1], V0
	046 Move X8, [X22+32]
	047 Move X8, [X8+192]
	048 Move X0, [X8+8]
	049 Call 0x1C17E04
	050 Move V0, [X21+1]
	051 Add X1, X31, 0
	052 Move [X31], V0
	053 Move X8, [X22+32]
	054 Move X22, X0
	055 Move X8, [X8+192]
	056 Move X8, [X8+8]
	057 Move X0, X8
	058 Call 0x1C17E04
	059 Compare X19, 0
	060 JumpIfEqual {160}
	061 Move X24, 0x1A1A000
	062 Move X8, [X19]
	063 Move X24, [X24+2328]
	064 Move X23, X0
	065 NotImplemented "Instruction LDRH not yet implemented."
	066 Move X1, [X24]
	067 Compare X9, 0
	068 JumpIfEqual {75}
	069 Move X10, [X8+176]
	070 Add X10, X10, 8
	071 NotImplemented "Instruction LDUR not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Subtract X9, X9, 1
	074 Add X10, X10, 16
	075 Move X0, X19
	076 Move W2, W31
	077 Call 0x1C5D788
	078 Move W0, 1
	079 NotImplemented "Instruction LDRSW not yet implemented."
	080 Add X8, X8, X9
	081 Add X0, X8, 312
	082 Move X8, [X0]
	083 Move X3, [X0+8]
	084 Move X0, X19
	085 Move X1, X22
	086 Move X2, X23
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Compare W0, 0
	089 JumpIfNotEqual {115}
	090 Move X8, [X19]
	091 Move X22, [X20+32]
	092 Move X20, [X21+32]
	093 Move X1, [X24]
	094 NotImplemented "Instruction LDRH not yet implemented."
	095 Compare X9, 0
	096 JumpIfEqual {103}
	097 Move X10, [X8+176]
	098 Add X10, X10, 8
	099 NotImplemented "Instruction LDUR not yet implemented."
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Subtract X9, X9, 1
	102 Add X10, X10, 16
	103 Move X0, X19
	104 Move W2, W31
	105 Call 0x1C5D788
	106 NotImplemented "Instruction LDRSW not yet implemented."
	107 Add X8, X8, X9
	108 Add X0, X8, 312
	109 Move X8, [X0]
	110 Move X3, [X0+8]
	111 Move X0, X19
	112 Move X1, X22
	113 Move X2, X20
	114 NotImplemented "Instruction BLR not yet implemented."
	115 Move X20, [X31+80]
	116 Move X19, [X31+88]
	117 Move X22, [X31+64]
	118 Move X21, [X31+72]
	119 Move X24, [X31+48]
	120 Move X23, [X31+56]
	121 Move X30, [X31+32]
	122 Add X31, X31, 96
	123 Return X0
	124 Move X0, X20
	125 Call 0x19913C0
	126 Move X0, X20
	127 Move X1, X31
	128 Call "il2cpp_vm_object_is_inst", X0
	129 Move X19, X0
	130 Call 0x19913C0
	131 Move X8, [X19]
	132 Move X0, X19
	133 Move X9, [X8+360]
	134 Move X1, [X8+368]
	135 NotImplemented "Instruction BLR not yet implemented."
	136 Move X19, X0
	137 Move X0, 0x1A1A000
	138 Move X0, [X0+2336]
	139 Call 0x1C17D08
	140 Move X1, X19
	141 Move X2, X31
	142 Call SR.Format, X0, X1
	143 Move X19, X0
	144 Move X0, 0x19F8000
	145 Move X0, [X0+1400]
	146 Call 0x1C17D08
	147 Call 0x1C17F10
	148 Move X20, X0
	149 Move X0, 0x1A1A000
	150 Move X0, [X0+2344]
	151 Call 0x1C17D08
	152 Move X2, X0
	153 Move X0, X20
	154 Move X1, X19
	155 Move X3, X31
	156 Call ArgumentException..ctor, X0, X1, X2
	157 Move X0, X20
	158 Move X1, X22
	159 Call 0x1C17DEC
	160 Call 0x1C17F20

Method: System.Int32 GetHashCode()

Disassembly:
	0x02704348 MOV X2, X21
	0x0270434C LDP X20, X19, [X31 + 0x20]
	0x02704350 LDP X22, X21, [X31 + 0x10]
	0x02704354 LDR X30, [X31], #0x30
	0x02704358 BR X4
	0x0270435C BL 0x1C16F20
	0x02704360 STP X29, X30, [X31 - 0x60]!
	0x02704364 STP X28, X27, [X31 + 0x10]
	0x02704368 STP X26, X25, [X31 + 0x20]
	0x0270436C STP X24, X23, [X31 + 0x30]
	0x02704370 STP X22, X21, [X31 + 0x40]
	0x02704374 STP X20, X19, [X31 + 0x50]
	0x02704378 ADD X29, X31, 0x0
	0x0270437C SUB X31, X31, 0x10
	0x02704380 STUR X2, [X29 - 0x10]
	0x02704384 MRS X19, 0xC000
	0x02704388 LDR X8, [X19 + 0x28]
	0x0270438C ADRP X22, 0x1CD6000
	0x02704390 MOV X20, X3
	0x02704394 MOV X21, X1
	0x02704398 STUR X8, [X29 - 0x8]
	0x0270439C LDRB W8, [X22 + 0x5C2]
	0x027043A0 MOV X24, X0
	0x027043A4 TBNZ X8, 0x0, 0x27043BC
	0x027043A8 ADRP X0, 0x1A19000
	0x027043AC LDR X0, [X0 + 0x900]
	0x027043B0 BL 0x1C16CF4
	0x027043B4 MOVZ W8, 0x1
	0x027043B8 STRB W8, [X22 + 0x5C2]
	0x027043BC LDR X8, [X20 + 0x20]
	0x027043C0 LDR X8, [X8 + 0xC0]
	0x027043C4 LDP X9, X10, [X8 + 0x8]
	0x027043C8 LDR W26, [X9 + 0xFC]
	0x027043CC LDR W22, [X10 + 0xFC]
	0x027043D0 ADD X9, X31, 0x0
	0x027043D4 ADD X10, X26, 0xF
	0x027043D8 AND X10, X10, 0x1FFFFFFFF
	0x027043DC SUB X28, X9, X10
	0x027043E0 ADD X31, X28, 0x0
	0x027043E4 ADD X9, X31, 0x0
	0x027043E8 SUB X27, X9, X10
	0x027043EC ADD X31, X27, 0x0
	0x027043F0 ADD X10, X22, 0xF
	0x027043F4 ADD X9, X31, 0x0
	0x027043F8 AND X10, X10, 0x1FFFFFFFF
	0x027043FC SUB X25, X9, X10
	0x02704400 ADD X31, X25, 0x0
	0x02704404 ADD X9, X31, 0x0
	0x02704408 SUB X23, X9, X10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1CD7000
	006 Move X21, 0x1A1A000
	007 Move W8, [X20+1461]
	008 Move X21, [X21+2288]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x1A1A000
	015 Move X0, [X0+2288]
	016 Call 0x1C17CF4
	017 Move X0, 0x1A1A000
	018 Move X0, [X0+2296]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+1461], W8
	022 Move X0, [X21]
	023 Call 0x211C0E8
	024 Compare X19, 0
	025 JumpIfEqual {56}
	026 Move X10, 0x1A1A000
	027 Move X8, [X19]
	028 Move X10, [X10+2296]
	029 Move X20, X0
	030 NotImplemented "Instruction LDRH not yet implemented."
	031 Move X1, [X10]
	032 Compare X9, 0
	033 JumpIfEqual {40}
	034 Move X10, [X8+176]
	035 Add X10, X10, 8
	036 NotImplemented "Instruction LDUR not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Subtract X9, X9, 1
	039 Add X10, X10, 16
	040 Move W2, 1
	041 Move X0, X19
	042 Call 0x1C5D788
	043 Move W9, [X10]
	044 Add W9, W9, 1
	045 Add X8, X8, W9
	046 Add X0, X8, 312
	047 Move X3, [X0]
	048 Move X2, [X0+8]
	049 Move X0, X19
	050 Move X1, X20
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 CallNoReturn X3
	056 Call 0x1C17F20

Method: System.Int32 System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer comparer)

Disassembly:
	0x0270440C ADD X31, X23, 0x0
	0x02704410 CBZ X21, 0x2704614
	0x02704414 LDR X0, [X8]
	0x02704418 LDRB W8, [X0 + 0x135]
	0x0270441C TBNZ X8, 0x0, 0x2704424
	0x02704420 BL 0x1C5C684
	0x02704424 LDR X8, [X21]
	0x02704428 LDRB W9, [X0 + 0x130]
	0x0270442C LDRB W10, [X8 + 0x130]
	0x02704430 CMP W10, W9
	0x02704434 B.CC 0x2704614
	0x02704438 LDR X8, [X8 + 0xC8]
	0x0270443C ADD X8, X8, X9, 0x3, LSL
	0x02704440 LDUR X8, [X8 - 0x8]
	0x02704444 CMP X8, X0
	0x02704448 B.NE 0x2704614
	0x0270444C LDR X8, [X20 + 0x20]
	0x02704450 MOV X0, X24
	0x02704454 LDR X8, [X8 + 0xC0]
	0x02704458 LDR X8, [X8]
	0x0270445C LDR X1, [X8 + 0x80]
	0x02704460 BL 0x1C16D18
	0x02704464 MOV X1, X0
	0x02704468 MOV X0, X28
	0x0270446C MOV X2, X26
	0x02704470 BL 0x3EB1AC0
	0x02704474 LDR X8, [X20 + 0x20]
	0x02704478 MOV X1, X28
	0x0270447C LDR X8, [X8 + 0xC0]
	0x02704480 LDR X0, [X8 + 0x8]
	0x02704484 BL 0x1C16E04
	0x02704488 LDR X8, [X20 + 0x20]
	0x0270448C MOV X28, X0
	0x02704490 MOV X0, X21
	0x02704494 LDR X8, [X8 + 0xC0]
	0x02704498 LDR X8, [X8]
	0x0270449C LDR X1, [X8 + 0x80]
	0x027044A0 BL 0x1C16D18
	0x027044A4 MOV X1, X0
	0x027044A8 MOV X0, X27
	0x027044AC MOV X2, X26
	0x027044B0 BL 0x3EB1AC0
	0x027044B4 LDR X8, [X20 + 0x20]
	0x027044B8 MOV X1, X27
	0x027044BC LDR X8, [X8 + 0xC0]
	0x027044C0 LDR X0, [X8 + 0x8]
	0x027044C4 BL 0x1C16E04
	0x027044C8 LDUR X27, [X29 - 0x10]
	0x027044CC CBZ X27, 0x2704674
	0x027044D0 ADRP X10, 0x1A19000
	0x027044D4 LDR X8, [X27]
	0x027044D8 LDR X10, [X10 + 0x900]
	0x027044DC MOV X26, X0
	0x027044E0 LDRH W9, [X8 + 0x12E]
	0x027044E4 LDR X1, [X10]
	0x027044E8 CBZ X9, 0x270450C
	0x027044EC LDR X10, [X8 + 0xB0]
	0x027044F0 ADD X10, X10, 0x8
	0x027044F4 LDUR X11, [X10 - 0x8]
	0x027044F8 CMP X11, X1
	0x027044FC B.EQ 0x270451C
	0x02704500 SUBS X9, X9, 0x1
	0x02704504 ADD X10, X10, 0x10
	0x02704508 B.NE 0x27044F4
	0x0270450C MOV X0, X27
	0x02704510 MOV W2, W31
	0x02704514 BL 0x1C5C788
	0x02704518 B 0x2704528
	0x0270451C LDRSW X9, [X10]
	0x02704520 ADD X8, X8, X9, 0x4, LSL
	0x02704524 ADD X0, X8, 0x138
	0x02704528 LDP X8, X3, [X0]
	0x0270452C MOV X0, X27
	0x02704530 MOV X1, X28
	0x02704534 MOV X2, X26
	0x02704538 BLR X8
	0x0270453C TBZ X0, 0x0, 0x2704614
	0x02704540 LDR X8, [X20 + 0x20]
	0x02704544 MOV X0, X24
	0x02704548 LDR X8, [X8 + 0xC0]
	0x0270454C LDR X8, [X8]
	0x02704550 LDR X8, [X8 + 0x80]
	0x02704554 ADD X1, X8, 0x20
	0x02704558 BL 0x1C16D18
	0x0270455C MOV X1, X0
	0x02704560 MOV X0, X25

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X22, 0x1CD7000
	008 Move W8, [X22+1462]
	009 Move X21, X2
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x1A1A000
	017 Move X0, [X0+2304]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1462], W8
	021 Move V0, [X20+1]
	022 Add X1, X31, 0
	023 Move [X31], V0
	024 Move X8, [X21+32]
	025 Move X8, [X8+192]
	026 Move X0, [X8+8]
	027 Call 0x1C17E04
	028 Compare X19, 0
	029 JumpIfEqual {92}
	030 Move X22, 0x1A1A000
	031 Move X8, [X19]
	032 Move X22, [X22+2304]
	033 Move X21, X0
	034 NotImplemented "Instruction LDRH not yet implemented."
	035 Move X1, [X22]
	036 Compare X9, 0
	037 JumpIfEqual {44}
	038 Move X10, [X8+176]
	039 Add X10, X10, 8
	040 NotImplemented "Instruction LDUR not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Subtract X9, X9, 1
	043 Add X10, X10, 16
	044 Move W2, 1
	045 Move X0, X19
	046 Call 0x1C5D788
	047 Move W9, [X10]
	048 Add W9, W9, 1
	049 Add X8, X8, W9
	050 Add X0, X8, 312
	051 Move X8, [X0]
	052 Move X2, [X0+8]
	053 Move X0, X19
	054 Move X1, X21
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Move X8, [X19]
	057 Move X21, [X20+32]
	058 Move X1, [X22]
	059 Move W20, W0
	060 NotImplemented "Instruction LDRH not yet implemented."
	061 Compare X9, 0
	062 JumpIfEqual {69}
	063 Move X10, [X8+176]
	064 Add X10, X10, 8
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Subtract X9, X9, 1
	068 Add X10, X10, 16
	069 Move W2, 1
	070 Move X0, X19
	071 Call 0x1C5D788
	072 Move W9, [X10]
	073 Add W9, W9, 1
	074 Add X8, X8, W9
	075 Add X0, X8, 312
	076 Move X8, [X0]
	077 Move X2, [X0+8]
	078 Move X0, X19
	079 Move X1, X21
	080 NotImplemented "Instruction BLR not yet implemented."
	081 Move W1, W0
	082 Move W0, W20
	083 Move X2, X31
	084 Call Tuple.CombineHashCodes, X0, X1
	085 Move X20, [X31+48]
	086 Move X19, [X31+56]
	087 Move X22, [X31+32]
	088 Move X21, [X31+40]
	089 Move X30, [X31+16]
	090 Add X31, X31, 64
	091 Return X0
	092 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x02704564 MOV X2, X22
	0x02704568 BL 0x3EB1AC0
	0x0270456C LDR X8, [X20 + 0x20]
	0x02704570 MOV X1, X25
	0x02704574 LDR X8, [X8 + 0xC0]
	0x02704578 LDR X0, [X8 + 0x10]
	0x0270457C BL 0x1C16E04
	0x02704580 LDR X8, [X20 + 0x20]
	0x02704584 MOV X24, X0
	0x02704588 MOV X0, X21
	0x0270458C LDR X8, [X8 + 0xC0]
	0x02704590 LDR X8, [X8]
	0x02704594 LDR X8, [X8 + 0x80]
	0x02704598 ADD X1, X8, 0x20
	0x0270459C BL 0x1C16D18
	0x027045A0 MOV X1, X0
	0x027045A4 MOV X0, X23
	0x027045A8 MOV X2, X22
	0x027045AC BL 0x3EB1AC0
	0x027045B0 LDR X8, [X20 + 0x20]
	0x027045B4 MOV X1, X23
	0x027045B8 LDR X8, [X8 + 0xC0]
	0x027045BC LDR X0, [X8 + 0x10]
	0x027045C0 BL 0x1C16E04
	0x027045C4 LDR X8, [X27]
	0x027045C8 ADRP X10, 0x1A19000
	0x027045CC MOV X20, X0
	0x027045D0 LDRH W9, [X8 + 0x12E]
	0x027045D4 LDR X10, [X10 + 0x900]
	0x027045D8 LDR X1, [X10]
	0x027045DC CBZ X9, 0x2704600
	0x027045E0 LDR X10, [X8 + 0xB0]
	0x027045E4 ADD X10, X10, 0x8
	0x027045E8 LDUR X11, [X10 - 0x8]
	0x027045EC CMP X11, X1
	0x027045F0 B.EQ 0x270464C
	0x027045F4 SUBS X9, X9, 0x1
	0x027045F8 ADD X10, X10, 0x10
	0x027045FC B.NE 0x27045E8
	0x02704600 LDUR X21, [X29 - 0x10]
	0x02704604 MOV W2, W31
	0x02704608 MOV X0, X21
	0x0270460C BL 0x1C5C788
	0x02704610 B 0x270465C
	0x02704614 MOV W0, W31
	0x02704618 LDR X8, [X19 + 0x28]
	0x0270461C LDUR X9, [X29 - 0x8]
	0x02704620 CMP X8, X9
	0x02704624 B.NE 0x2704678
	0x02704628 AND W0, W0, 0x1
	0x0270462C ADD X31, X29, 0x0
	0x02704630 LDP X20, X19, [X31 + 0x50]
	0x02704634 LDP X22, X21, [X31 + 0x40]
	0x02704638 LDP X24, X23, [X31 + 0x30]
	0x0270463C LDP X26, X25, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1CD7000
	006 Move X21, 0x19F0000
	007 Move W8, [X20+1463]
	008 Move X21, [X21+2288]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x1A1A000
	015 Move X0, [X0+2352]
	016 Call 0x1C17CF4
	017 Move X0, 0x19F0000
	018 Move X0, [X0+2288]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+1463], W8
	022 Move X0, [X21]
	023 Call 0x1C17F10
	024 Move X1, X31
	025 Move X20, X0
	026 Call StringBuilder..ctor, X0
	027 Compare X20, 0
	028 JumpIfEqual {63}
	029 Move W1, 40
	030 Move X0, X20
	031 Move X2, X31
	032 Call StringBuilder.Append, X0, X1
	033 Compare X19, 0
	034 JumpIfEqual {63}
	035 Move X10, 0x1A1A000
	036 Move X8, [X19]
	037 Move X10, [X10+2352]
	038 NotImplemented "Instruction LDRH not yet implemented."
	039 Move X1, [X10]
	040 Compare X9, 0
	041 JumpIfEqual {48}
	042 Move X10, [X8+176]
	043 Add X10, X10, 8
	044 NotImplemented "Instruction LDUR not yet implemented."
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Subtract X9, X9, 1
	047 Add X10, X10, 16
	048 Move X0, X19
	049 Move W2, W31
	050 Call 0x1C5D788
	051 NotImplemented "Instruction LDRSW not yet implemented."
	052 Add X8, X8, X9
	053 Add X0, X8, 312
	054 Move X3, [X0]
	055 Move X2, [X0+8]
	056 Move X0, X19
	057 Move X1, X20
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move X30, [X31+32]
	061 Move X21, [X31+40]
	062 CallNoReturn X3
	063 Call 0x1C17F20

Method: System.String System.ITupleInternal.ToString(System.Text.StringBuilder sb)

Disassembly:
	0x02704640 LDP X28, X27, [X31 + 0x10]
	0x02704644 LDP X29, X30, [X31], #0x60
	0x02704648 RET
	0x0270464C LDRSW X9, [X10]
	0x02704650 LDUR X21, [X29 - 0x10]
	0x02704654 ADD X8, X8, X9, 0x4, LSL
	0x02704658 ADD X0, X8, 0x138
	0x0270465C LDP X8, X3, [X0]
	0x02704660 MOV X0, X21
	0x02704664 MOV X1, X24
	0x02704668 MOV X2, X20
	0x0270466C BLR X8
	0x02704670 B 0x2704618
	0x02704674 BL 0x1C16F20
	0x02704678 BL 0x3EB1B20
	0x0270467C STR X30, [X31 - 0x30]!
	0x02704680 STP X22, X21, [X31 + 0x10]
	0x02704684 STP X20, X19, [X31 + 0x20]
	0x02704688 ADRP X21, 0x1CD6000
	0x0270468C ADRP X22, 0x1A19000
	0x02704690 LDRB W8, [X21 + 0x5C3]
	0x02704694 LDR X22, [X22 + 0x908]
	0x02704698 MOV X19, X1
	0x0270469C MOV X20, X0
	0x027046A0 TBNZ X8, 0x0, 0x27046C4
	0x027046A4 ADRP X0, 0x1A19000
	0x027046A8 LDR X0, [X0 + 0x908]
	0x027046AC BL 0x1C16CF4
	0x027046B0 ADRP X0, 0x1A19000
	0x027046B4 LDR X0, [X0 + 0x910]
	0x027046B8 BL 0x1C16CF4
	0x027046BC MOVZ W8, 0x1
	0x027046C0 STRB W8, [X21 + 0x5C3]
	0x027046C4 LDR X0, [X22]
	0x027046C8 BL 0x29286B0
	0x027046CC CBZ X20, 0x2704748
	0x027046D0 ADRP X10, 0x1A19000
	0x027046D4 LDR X8, [X20]
	0x027046D8 LDR X10, [X10 + 0x910]
	0x027046DC MOV X21, X0
	0x027046E0 LDRH W9, [X8 + 0x12E]
	0x027046E4 LDR X1, [X10]
	0x027046E8 CBZ X9, 0x270470C
	0x027046EC LDR X10, [X8 + 0xB0]
	0x027046F0 ADD X10, X10, 0x8
	0x027046F4 LDUR X11, [X10 - 0x8]
	0x027046F8 CMP X11, X1
	0x027046FC B.EQ 0x270471C
	0x02704700 SUBS X9, X9, 0x1
	0x02704704 ADD X10, X10, 0x10
	0x02704708 B.NE 0x27046F4

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X22, 0x1CD7000
	008 Move W8, [X22+1464]
	009 Move X21, X2
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x19F0000
	017 Move X0, [X0+2104]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1464], W8
	021 Move V0, [X20+1]
	022 Add X1, X31, 0
	023 Move [X31], V0
	024 Move X8, [X21+32]
	025 Move X8, [X8+192]
	026 Move X0, [X8+8]
	027 Call 0x1C17E04
	028 Compare X19, 0
	029 JumpIfEqual {60}
	030 Move X21, 0x19F0000
	031 Move X21, [X21+2104]
	032 Move X1, X0
	033 Move X0, X19
	034 Move X2, X31
	035 Call StringBuilder.Append, X0, X1
	036 Move X1, [X21]
	037 Move X0, X19
	038 Move X2, X31
	039 Call StringBuilder.Append, X0, X1
	040 Move X1, [X20+32]
	041 Move X0, X19
	042 Move X2, X31
	043 Call StringBuilder.Append, X0, X1
	044 Move W1, 41
	045 Move X0, X19
	046 Move X2, X31
	047 Call StringBuilder.Append, X0, X1
	048 Move X8, [X19]
	049 Move X0, X19
	050 Move X9, [X8+360]
	051 Move X1, [X8+368]
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move X20, [X31+48]
	054 Move X19, [X31+56]
	055 Move X22, [X31+32]
	056 Move X21, [X31+40]
	057 Move X30, [X31+16]
	058 Add X31, X31, 64
	059 Return X0
	060 Call 0x1C17F20

Method: System.Int32 System.Runtime.CompilerServices.ITuple.get_Length()

Disassembly:
	0x0270470C MOV X0, X20
	0x02704710 MOV W2, W31

ISIL:
	001 Move W0, 2
	002 Return X0

