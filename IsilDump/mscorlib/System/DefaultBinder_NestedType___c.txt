Type: System.DefaultBinder/<>c

Method: System.Void .cctor()

Disassembly:
	0x033AF3F0 CMP X8, X0
	0x033AF3F4 CSEL X23, X20, X31, EQ
	0x033AF3F8 LDR W8, [X0 + 0xE0]
	0x033AF3FC CBNZ W8, 0x33AF404
	0x033AF400 BL 0x1C16DFC
	0x033AF404 CBZ X23, 0x33AF604
	0x033AF408 CBZ X20, 0x33AF840
	0x033AF40C LDR X8, [X20]
	0x033AF410 MOV X0, X20
	0x033AF414 LDR X9, [X8 + 0x588]
	0x033AF418 LDR X1, [X8 + 0x590]
	0x033AF41C BLR X9
	0x033AF420 TBZ X0, 0x0, 0x33AF610
	0x033AF424 CBZ X22, 0x33AF560
	0x033AF428 MOV X0, X22
	0x033AF42C MOV X1, X31
	0x033AF430 BL 0x322B8DC
	0x033AF434 CBZ X0, 0x33AF840
	0x033AF438 LDR W8, [X0 + 0x10]
	0x033AF43C MOV X22, X0
	0x033AF440 CBZ W8, 0x33AF57C
	0x033AF444 MOV X0, X22
	0x033AF448 MOV W1, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x102F000
	005 Move X20, 0xD7D000
	006 Move W8, [X19+376]
	007 Move X20, [X20+3584]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xD7D000
	013 Move X0, [X0+3584]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+376], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x033AF44C MOV X2, X31
	0x033AF450 BL 0x3222A1C

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Boolean <SelectProperty>b__2_0(System.Type t)

Disassembly:
	0x033AF454 ADRP X8, 0xD46000
	0x033AF458 LDR X8, [X8 + 0x170]
	0x033AF45C MOV W24, W0
	0x033AF460 LDR X8, [X8]
	0x033AF464 LDR W9, [X8 + 0xE0]
	0x033AF468 CBNZ W9, 0x33AF474
	0x033AF46C MOV X0, X8
	0x033AF470 BL 0x1C16DFC
	0x033AF474 MOV W0, W24
	0x033AF478 MOV X1, X31
	0x033AF47C BL 0x33141B4
	0x033AF480 TBNZ X0, 0x0, 0x33AF4BC
	0x033AF484 MOV X0, X22
	0x033AF488 MOV W1, W31
	0x033AF48C MOV X2, X31
	0x033AF490 BL 0x3222A1C
	0x033AF494 AND W8, W0, 0xFFFF
	0x033AF498 CMP W8, 0x2D
	0x033AF49C B.EQ 0x33AF4BC
	0x033AF4A0 MOV X0, X22
	0x033AF4A4 MOV W1, W31
	0x033AF4A8 MOV X2, X31
	0x033AF4AC BL 0x3222A1C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x102F000
	006 Move X21, 0xD45000
	007 Move W8, [X20+377]
	008 Move X21, [X21+1728]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD45000
	015 Move X0, [X0+1728]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+377], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X31
	028 Move X2, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call Type.op_Inequality, X0, X1
	032 Return X0

