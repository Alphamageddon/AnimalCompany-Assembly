Type: System.ArraySpec

Method: System.Void .ctor(System.Int32 dimensions, System.Boolean bound)

Disassembly:
	0x033D3F6C BL 0x33D3970
	0x033D3F70 CBZ X25, 0x33D41A4
	0x033D3F74 LDR W10, [X25 + 0x1C]
	0x033D3F78 LDR X8, [X25 + 0x10]

ISIL:
	001 And W8, W2, 1
	002 Move [X0+16], W1
	003 Move [X0+20], W8
	004 Return 

Method: System.Type Resolve(System.Type type)

Disassembly:
	0x033D3F7C LDR X9, [X28]
	0x033D3F80 ADD W10, W10, 0x1
	0x033D3F84 STR W10, [X25 + 0x1C]
	0x033D3F88 CBZ X8, 0x33D41A4
	0x033D3F8C LDRSW X10, [X25 + 0x18]
	0x033D3F90 LDR W11, [X8 + 0x18]
	0x033D3F94 MOV X1, X0
	0x033D3F98 CMP W10, W11
	0x033D3F9C B.CS 0x33D4000
	0x033D3FA0 ADD W9, W10, 0x1
	0x033D3FA4 ADD X8, X8, X10, 0x3, LSL
	0x033D3FA8 STR W9, [X25 + 0x18]
	0x033D3FAC STR X1, [X8 + 0x20]
	0x033D3FB0 B 0x33D4014
	0x033D3FB4 LDR X8, [X9 + 0x20]
	0x033D3FB8 MOV X0, X25
	0x033D3FBC LDR X8, [X8 + 0xC0]
	0x033D3FC0 LDR X2, [X8 + 0x70]
	0x033D3FC4 BL 0x301BF90
	0x033D3FC8 LDR W24, [X31 + 0xC]
	0x033D3FCC MOV X1, X20
	0x033D3FD0 MOV W0, W24
	0x033D3FD4 BL 0x33D51A0
	0x033D3FD8 MOV X0, X20
	0x033D3FDC MOV W1, W24
	0x033D3FE0 MOV X2, X31

ISIL:
	001 Move [X31-16], X30
	002 Move W9, [X0+20]
	003 Move X8, X1
	004 Compare W9, 0
	005 JumpIfEqual {10}
	006 Compare X8, 0
	007 JumpIfEqual {28}
	008 Move X9, [X8]
	009 Move W1, 1
	010 Move W1, [X0+16]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Compare X8, 0
	013 JumpIfEqual {28}
	014 Move X9, [X8]
	015 Move X0, X8
	016 Move X2, [X9+2216]
	017 Move X1, [X9+2224]
	018 Move X30, [X31+16]
	019 CallNoReturn X2
	020 Compare X8, 0
	021 JumpIfEqual {28}
	022 Move X9, [X8]
	023 Move X3, [X9+2232]
	024 Move X2, [X9+2240]
	025 Move X0, X8
	026 Move X30, [X31+16]
	027 CallNoReturn X3
	028 Call 0x1C17F20

Method: System.Text.StringBuilder Append(System.Text.StringBuilder sb)

Disassembly:
	0x033D3FE4 BL 0x3222A1C
	0x033D3FE8 AND W8, W0, 0xFFFF
	0x033D3FEC CMP W8, 0x5D
	0x033D3FF0 B.NE 0x33D439C
	0x033D3FF4 ADD W24, W24, 0x1
	0x033D3FF8 STR W24, [X31 + 0xC]
	0x033D3FFC B 0x33D4018
	0x033D4000 LDR X8, [X9 + 0x20]
	0x033D4004 MOV X0, X25
	0x033D4008 LDR X8, [X8 + 0xC0]
	0x033D400C LDR X2, [X8 + 0x70]
	0x033D4010 BL 0x301BF90
	0x033D4014 LDR W24, [X31 + 0xC]
	0x033D4018 MOV W0, W24
	0x033D401C MOV X1, X20
	0x033D4020 BL 0x33D51A0
	0x033D4024 MOV X0, X20
	0x033D4028 MOV W1, W24
	0x033D402C MOV X2, X31
	0x033D4030 BL 0x3222A1C
	0x033D4034 AND W8, W0, 0xFFFF
	0x033D4038 CMP W8, 0x5D
	0x033D403C B.EQ 0x33D4068
	0x033D4040 MOV X0, X20
	0x033D4044 MOV W1, W24
	0x033D4048 MOV X2, X31
	0x033D404C BL 0x3222A1C
	0x033D4050 AND W8, W0, 0xFFFF
	0x033D4054 CMP W8, 0x2C
	0x033D4058 B.NE 0x33D4334
	0x033D405C ADD W24, W24, 0x1
	0x033D4060 STR W24, [X31 + 0xC]
	0x033D4064 B 0x33D3EC4
	0x033D4068 LDR W8, [X20 + 0x10]
	0x033D406C CMP W24, W8
	0x033D4070 B.GE 0x33D4440
	0x033D4074 MOV X0, X20
	0x033D4078 MOV W1, W24
	0x033D407C MOV X2, X31
	0x033D4080 BL 0x3222A1C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x100B000
	006 Move W8, [X21+727]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xD52000
	014 Move X0, [X0+3720]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+727], W8
	018 Compare X20, 0
	019 JumpIfEqual {55}
	020 Move W8, [X19+20]
	021 Compare W8, 0
	022 JumpIfEqual {34}
	023 Move X8, 0xD52000
	024 Move X8, [X8+3720]
	025 Move X0, X20
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X2, X31
	029 Move X1, [X8]
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Call StringBuilder.Append, X0, X1
	033 Return X0
	034 Move W1, 91
	035 Move X0, X20
	036 Move X2, X31
	037 Call StringBuilder.Append, X0, X1
	038 Compare X0, 0
	039 JumpIfEqual {55}
	040 Move W8, [X19+16]
	041 Move W1, 44
	042 Move X3, X31
	043 Subtract W2, W8, 1
	044 Call StringBuilder.Append, X0, X1, X2
	045 Compare X0, 0
	046 JumpIfEqual {55}
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move W1, 93
	050 Move X2, X31
	051 Move X30, [X31+32]
	052 Move X21, [X31+40]
	053 Call StringBuilder.Append, X0, X1
	054 Return X0
	055 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x033D4084 AND W8, W0, 0xFFFF
	0x033D4088 CMP W8, 0x5D
	0x033D408C B.NE 0x33D4440
	0x033D4090 STR X25, [X21 + 0x28]
	0x033D4094 B 0x33D3E80
	0x033D4098 SUB W2, W24, W25
	0x033D409C MOV X0, X20
	0x033D40A0 MOV W1, W25
	0x033D40A4 MOV X3, X31
	0x033D40A8 BL 0x3228DE4
	0x033D40AC CBZ X21, 0x33D41A4
	0x033D40B0 MOV X1, X0
	0x033D40B4 MOV X0, X21
	0x033D40B8 BL 0x33D4ED8
	0x033D40BC ADD W25, W24, 0x1
	0x033D40C0 MOVZ W26, 0x1
	0x033D40C4 TBZ X22, 0x0, 0x33D3B50
	0x033D40C8 TBZ X23, 0x0, 0x33D417C
	0x033D40CC B 0x33D3B50
	0x033D40D0 CMP W8, 0x5D
	0x033D40D4 B.NE 0x33D4210
	0x033D40D8 TBNZ X22, 0x0, 0x33D417C
	0x033D40DC ADRP X0, 0xD27000
	0x033D40E0 LDR X0, [X0 + 0x578]
	0x033D40E4 BL 0x1C16D08
	0x033D40E8 BL 0x1C16F10
	0x033D40EC MOV X19, X0
	0x033D40F0 ADRP X0, 0xD58000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x100A000
	006 Move X21, 0xD20000
	007 Move W8, [X20+728]
	008 Move X21, [X21+2288]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD20000
	015 Move X0, [X0+2288]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+728], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call StringBuilder..ctor, X0
	024 Move X0, X19
	025 Move X1, X20
	026 Call ArraySpec.Append, X0, X1
	027 Compare X0, 0
	028 JumpIfEqual {37}
	029 Move X8, [X0]
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X2, [X8+360]
	033 Move X1, [X8+368]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 CallNoReturn X2
	037 Call 0x1C17F20

