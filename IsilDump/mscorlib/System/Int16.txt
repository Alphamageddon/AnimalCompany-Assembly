Type: System.Int16

Method: System.Int32 CompareTo(System.Object value)

Disassembly:
	0x0337AB98 MOV X3, X0
	0x0337AB9C MOV X0, X20
	0x0337ABA0 LDP X20, X19, [X31 + 0x10]
	0x0337ABA4 MOVZ W2, 0x7
	0x0337ABA8 MOV X1, X21
	0x0337ABAC LDP X30, X21, [X31], #0x20
	0x0337ABB0 B 0x337ABB4
	0x0337ABB4 STR X30, [X31 - 0x40]!
	0x0337ABB8 STP X24, X23, [X31 + 0x10]
	0x0337ABBC STP X22, X21, [X31 + 0x20]
	0x0337ABC0 STP X20, X19, [X31 + 0x30]
	0x0337ABC4 ADRP X23, 0x1062000
	0x0337ABC8 ADRP X24, 0xDAE000
	0x0337ABCC LDRB W8, [X23 + 0xF45]
	0x0337ABD0 LDR X24, [X24 + 0x78]
	0x0337ABD4 MOV X20, X3
	0x0337ABD8 MOV W19, W2
	0x0337ABDC MOV X21, X1
	0x0337ABE0 MOV X22, X0
	0x0337ABE4 TBNZ X8, 0x0, 0x337ABFC
	0x0337ABE8 ADRP X0, 0xDAE000
	0x0337ABEC LDR X0, [X0 + 0x78]
	0x0337ABF0 BL 0x1C16CF4
	0x0337ABF4 MOVZ W8, 0x1
	0x0337ABF8 STRB W8, [X23 + 0xF45]
	0x0337ABFC LDR X0, [X24]
	0x0337AC00 LDR W8, [X0 + 0xE0]
	0x0337AC04 CBNZ W8, 0x337AC0C
	0x0337AC08 BL 0x1C16DFC
	0x0337AC0C MOV X0, X22
	0x0337AC10 MOV X1, X21
	0x0337AC14 MOV W2, W19
	0x0337AC18 MOV X3, X20
	0x0337AC1C BL 0x337ADF4
	0x0337AC20 TBNZ X19, 0x9, 0x337AC74
	0x0337AC24 CMP W0, W0, SXTH
	0x0337AC28 B.EQ 0x337AC7C
	0x0337AC2C ADRP X0, 0xD79000
	0x0337AC30 LDR X0, [X0 + 0x858]
	0x0337AC34 BL 0x1C16D08
	0x0337AC38 BL 0x1C16F10
	0x0337AC3C MOV X19, X0
	0x0337AC40 ADRP X0, 0xDAE000
	0x0337AC44 LDR X0, [X0 + 0x1B0]
	0x0337AC48 BL 0x1C16D08
	0x0337AC4C MOV X1, X0
	0x0337AC50 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1063000
	006 Move W8, [X21+3903]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xD7E000
	014 Move X0, [X0+1576]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3903], W8
	018 Compare X19, 0
	019 JumpIfEqual {30}
	020 Move X8, 0xD7E000
	021 Move X8, [X8+1576]
	022 Move X9, [X19]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 NotImplemented "Instruction LDRSH not yet implemented."
	026 Move X0, X19
	027 Call 0x1C17E08
	028 NotImplemented "Instruction LDRSH not yet implemented."
	029 Subtract W0, W20, W8
	030 Move W0, 1
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return X0
	036 Move X0, 0xD82000
	037 Move X0, [X0+1400]
	038 Call 0x1C17D08
	039 Call 0x1C17F10
	040 Move X19, X0
	041 Move X0, 0xDB1000
	042 Move X0, [X0+3696]
	043 Call 0x1C17D08
	044 Move X1, X0
	045 Move X0, X19
	046 Move X2, X31
	047 Call ArgumentException..ctor, X0, X1
	048 Move X0, 0xDB1000
	049 Move X0, [X0+3704]
	050 Call 0x1C17D08
	051 Move X1, X0
	052 Move X0, X19
	053 Call 0x1C17DEC

Method: System.Int32 CompareTo(System.Int16 value)

Disassembly:
	0x0337AC54 MOV X2, X31
	0x0337AC58 BL 0x338CB50
	0x0337AC5C ADRP X0, 0xDB0000

ISIL:
	001 NotImplemented "Instruction LDRSH not yet implemented."
	002 Subtract W0, W8, W1
	003 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x0337AC60 LDR X0, [X0 + 0xE80]
	0x0337AC64 BL 0x1C16D08
	0x0337AC68 MOV X1, X0
	0x0337AC6C MOV X0, X19
	0x0337AC70 BL 0x1C16DEC
	0x0337AC74 CMP W0, 0x10000
	0x0337AC78 B.CS 0x337AC2C
	0x0337AC7C LDP X20, X19, [X31 + 0x30]
	0x0337AC80 LDP X22, X21, [X31 + 0x20]
	0x0337AC84 LDP X24, X23, [X31 + 0x10]
	0x0337AC88 LDR X30, [X31], #0x40
	0x0337AC8C RET
	0x0337AC90 B 0x337AC94
	0x0337AC94 MOV X19, X0
	0x0337AC98 CMP W1, 0x1
	0x0337AC9C B.NE 0x337AD44
	0x0337ACA0 MOV X0, X19
	0x0337ACA4 BL 0x3EB1AD0
	0x0337ACA8 MOV X19, X0
	0x0337ACAC ADRP X0, 0xD79000
	0x0337ACB0 LDR X0, [X0 + 0x858]
	0x0337ACB4 BL 0x1C16D08
	0x0337ACB8 LDR X8, [X19]
	0x0337ACBC LDR X1, [X8]
	0x0337ACC0 BL 0x1C17270
	0x0337ACC4 TBZ X0, 0x0, 0x337AD1C
	0x0337ACC8 LDR X19, [X19]
	0x0337ACCC BL 0x3EB1AE0
	0x0337ACD0 ADRP X0, 0xD79000
	0x0337ACD4 LDR X0, [X0 + 0x858]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1063000
	006 Move W8, [X21+3904]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xD7E000
	014 Move X0, [X0+1576]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3904], W8
	018 Compare X19, 0
	019 JumpIfEqual {25}
	020 Move X8, 0xD7E000
	021 Move X8, [X8+1576]
	022 Move X9, [X19]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W0, W31
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X0, X19
	028 Call 0x1C17E08
	029 NotImplemented "Instruction LDRH not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSET not yet implemented."
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return X0

Method: System.Boolean Equals(System.Int16 obj)

Disassembly:
	0x0337ACD8 BL 0x1C16D08
	0x0337ACDC BL 0x1C16F10
	0x0337ACE0 MOV X20, X0
	0x0337ACE4 ADRP X0, 0xDAE000

ISIL:
	001 NotImplemented "Instruction LDRH not yet implemented."
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x0337ACE8 LDR X0, [X0 + 0x1B0]
	0x0337ACEC BL 0x1C16D08
	0x0337ACF0 MOV X1, X0

ISIL:
	001 NotImplemented "Instruction LDRH not yet implemented."
	002 NotImplemented "Instruction BFM not yet implemented."
	003 Return X0

Method: System.String ToString()

Disassembly:
	0x0337ACF4 MOV X0, X20
	0x0337ACF8 MOV X2, X19
	0x0337ACFC MOV X3, X31
	0x0337AD00 BL 0x338CB74
	0x0337AD04 ADRP X0, 0xDB0000
	0x0337AD08 LDR X0, [X0 + 0xE80]
	0x0337AD0C BL 0x1C16D08
	0x0337AD10 MOV X1, X0
	0x0337AD14 MOV X0, X20
	0x0337AD18 BL 0x1C16DEC
	0x0337AD1C MOVZ W0, 0x8
	0x0337AD20 BL 0x3EB1AF0
	0x0337AD24 LDR X8, [X19]
	0x0337AD28 STR X8, [X0]
	0x0337AD2C ADRP X1, 0xB3A000
	0x0337AD30 ADD X1, X1, 0xE58
	0x0337AD34 MOV X2, X31
	0x0337AD38 BL 0x3EB1B00
	0x0337AD3C MOV X19, X0
	0x0337AD40 BL 0x3EB1AE0
	0x0337AD44 MOV X0, X19
	0x0337AD48 BL 0x1D2C690
	0x0337AD4C BL 0x1990590
	0x0337AD50 STR X30, [X31 - 0x30]!
	0x0337AD54 STP X22, X21, [X31 + 0x10]
	0x0337AD58 STP X20, X19, [X31 + 0x20]
	0x0337AD5C MOV W19, W1
	0x0337AD60 MOV X21, X0
	0x0337AD64 MOV W0, W1
	0x0337AD68 MOV X1, X31
	0x0337AD6C MOV X20, X2
	0x0337AD70 BL 0x333B33C
	0x0337AD74 CBNZ X21, 0x337AD84
	0x0337AD78 MOVZ W0, 0x30
	0x0337AD7C MOV X1, X31
	0x0337AD80 BL 0x338F3E0
	0x0337AD84 ADRP X22, 0x105F000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1063000
	007 Move X20, 0xDA9000
	008 Move X21, 0xDAF000
	009 Move W8, [X22+3905]
	010 Move X20, [X20+472]
	011 Move X21, [X21+120]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xDAF000
	018 Move X0, [X0+120]
	019 Call 0x1C17CF4
	020 Move X0, 0xDA9000
	021 Move X0, [X0+472]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+3905], W8
	025 Move X1, [X20]
	026 NotImplemented "Instruction LDRSH not yet implemented."
	027 Move X0, X31
	028 Call ReadOnlySpan`1<Char>.op_Implicit, X0
	029 Move X20, X0
	030 Move X0, [X21]
	031 Move X21, X1
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move W0, W19
	037 Move X1, X20
	038 Move X2, X21
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X3, X31
	044 Move X30, [X31+48]

Method: System.String ToString(System.IFormatProvider provider)

Disassembly:
	0x0337B024 ADRP X21, 0x1061000
	0x0337B028 ADRP X20, 0xD81000
	0x0337B02C LDRB W8, [X21 + 0xF47]
	0x0337B030 LDR X20, [X20 + 0x9E8]
	0x0337B034 MOV X19, X0
	0x0337B038 TBNZ X8, 0x0, 0x337B050
	0x0337B03C ADRP X0, 0xD81000
	0x0337B040 LDR X0, [X0 + 0x9E8]
	0x0337B044 BL 0x1C16CF4
	0x0337B048 MOVZ W8, 0x1
	0x0337B04C STRB W8, [X21 + 0xF47]
	0x0337B050 LDR X0, [X20]
	0x0337B054 LDRH W19, [X19]
	0x0337B058 LDR W8, [X0 + 0xE0]
	0x0337B05C CBNZ W8, 0x337B064
	0x0337B060 BL 0x1C16DFC
	0x0337B064 MOV W0, W19
	0x0337B068 LDP X20, X19, [X31 + 0x10]
	0x0337B06C MOV X1, X31
	0x0337B070 LDP X30, X21, [X31], #0x20
	0x0337B074 B 0x331E834
	0x0337B078 STP X30, X21, [X31 - 0x20]!
	0x0337B07C STP X20, X19, [X31 + 0x10]
	0x0337B080 ADRP X21, 0x1061000
	0x0337B084 ADRP X20, 0xD81000
	0x0337B088 LDRB W8, [X21 + 0xF48]
	0x0337B08C LDR X20, [X20 + 0x9E8]
	0x0337B090 MOV X19, X0
	0x0337B094 TBNZ X8, 0x0, 0x337B0AC
	0x0337B098 ADRP X0, 0xD81000
	0x0337B09C LDR X0, [X0 + 0x9E8]
	0x0337B0A0 BL 0x1C16CF4
	0x0337B0A4 MOVZ W8, 0x1
	0x0337B0A8 STRB W8, [X21 + 0xF48]
	0x0337B0AC LDR X0, [X20]
	0x0337B0B0 LDRH W19, [X19]
	0x0337B0B4 LDR W8, [X0 + 0xE0]
	0x0337B0B8 CBNZ W8, 0x337B0C0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x1062000
	008 Move X21, 0xDA8000
	009 Move X22, 0xDAE000
	010 Move W8, [X23+3906]
	011 Move X21, [X21+472]
	012 Move X22, [X22+120]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xDAE000
	020 Move X0, [X0+120]
	021 Call 0x1C17CF4
	022 Move X0, 0xDA8000
	023 Move X0, [X0+472]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+3906], W8
	027 Move X1, [X21]
	028 NotImplemented "Instruction LDRSH not yet implemented."
	029 Move X0, X31
	030 Call ReadOnlySpan`1<Char>.op_Implicit, X0
	031 Move X21, X0
	032 Move X0, [X22]
	033 Move X22, X1
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move W0, W20
	039 Move X1, X21
	040 Move X2, X22
	041 Move X3, X19
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 Move X23, [X31+56]
	048 Call Number.FormatInt32, X0, X1, X2
	049 Return X0

Method: System.String ToString(System.String format, System.IFormatProvider provider)

Disassembly:
	0x0337B0BC BL 0x1C16DFC
	0x0337B0C0 MOV W0, W19
	0x0337B0C4 LDP X20, X19, [X31 + 0x10]
	0x0337B0C8 MOV X1, X31
	0x0337B0CC LDP X30, X21, [X31], #0x20
	0x0337B0D0 B 0x331ECD4
	0x0337B0D4 STP X30, X21, [X31 - 0x20]!
	0x0337B0D8 STP X20, X19, [X31 + 0x10]
	0x0337B0DC ADRP X21, 0x1061000
	0x0337B0E0 ADRP X20, 0xD81000
	0x0337B0E4 LDRB W8, [X21 + 0xF49]
	0x0337B0E8 LDR X20, [X20 + 0x9E8]
	0x0337B0EC MOV X19, X0
	0x0337B0F0 TBNZ X8, 0x0, 0x337B108
	0x0337B0F4 ADRP X0, 0xD81000
	0x0337B0F8 LDR X0, [X0 + 0x9E8]
	0x0337B0FC BL 0x1C16CF4
	0x0337B100 MOVZ W8, 0x1
	0x0337B104 STRB W8, [X21 + 0xF49]
	0x0337B108 LDR X0, [X20]
	0x0337B10C LDRH W19, [X19]
	0x0337B110 LDR W8, [X0 + 0xE0]
	0x0337B114 CBNZ W8, 0x337B11C
	0x0337B118 BL 0x1C16DFC
	0x0337B11C MOV W0, W19
	0x0337B120 LDP X20, X19, [X31 + 0x10]
	0x0337B124 MOV X1, X31
	0x0337B128 LDP X30, X21, [X31], #0x20
	0x0337B12C B 0x331F37C
	0x0337B130 LDRH W0, [X0]
	0x0337B134 RET
	0x0337B138 STP X30, X21, [X31 - 0x20]!
	0x0337B13C STP X20, X19, [X31 + 0x10]
	0x0337B140 ADRP X21, 0x1061000
	0x0337B144 ADRP X20, 0xD81000
	0x0337B148 LDRB W8, [X21 + 0xF4A]
	0x0337B14C LDR X20, [X20 + 0x9E8]
	0x0337B150 MOV X19, X0
	0x0337B154 TBNZ X8, 0x0, 0x337B16C
	0x0337B158 ADRP X0, 0xD81000
	0x0337B15C LDR X0, [X0 + 0x9E8]
	0x0337B160 BL 0x1C16CF4
	0x0337B164 MOVZ W8, 0x1
	0x0337B168 STRB W8, [X21 + 0xF4A]
	0x0337B16C LDR X0, [X20]
	0x0337B170 LDRH W19, [X19]
	0x0337B174 LDR W8, [X0 + 0xE0]
	0x0337B178 CBNZ W8, 0x337B180
	0x0337B17C BL 0x1C16DFC
	0x0337B180 MOV W0, W19
	0x0337B184 LDP X20, X19, [X31 + 0x10]
	0x0337B188 MOV X1, X31
	0x0337B18C LDP X30, X21, [X31], #0x20
	0x0337B190 B 0x331FE94
	0x0337B194 STP X30, X21, [X31 - 0x20]!
	0x0337B198 STP X20, X19, [X31 + 0x10]
	0x0337B19C ADRP X21, 0x1061000
	0x0337B1A0 ADRP X20, 0xD81000
	0x0337B1A4 LDRB W8, [X21 + 0xF4B]
	0x0337B1A8 LDR X20, [X20 + 0x9E8]
	0x0337B1AC MOV X19, X0
	0x0337B1B0 TBNZ X8, 0x0, 0x337B1C8
	0x0337B1B4 ADRP X0, 0xD81000
	0x0337B1B8 LDR X0, [X0 + 0x9E8]
	0x0337B1BC BL 0x1C16CF4
	0x0337B1C0 MOVZ W8, 0x1
	0x0337B1C4 STRB W8, [X21 + 0xF4B]
	0x0337B1C8 LDR X0, [X20]
	0x0337B1CC LDRH W19, [X19]
	0x0337B1D0 LDR W8, [X0 + 0xE0]
	0x0337B1D4 CBNZ W8, 0x337B1DC
	0x0337B1D8 BL 0x1C16DFC
	0x0337B1DC MOV W0, W19
	0x0337B1E0 LDP X20, X19, [X31 + 0x10]
	0x0337B1E4 MOV X1, X31
	0x0337B1E8 LDP X30, X21, [X31], #0x20
	0x0337B1EC B 0x3320388
	0x0337B1F0 STP X30, X21, [X31 - 0x20]!
	0x0337B1F4 STP X20, X19, [X31 + 0x10]
	0x0337B1F8 ADRP X21, 0x1061000
	0x0337B1FC ADRP X20, 0xD81000
	0x0337B200 LDRB W8, [X21 + 0xF4C]
	0x0337B204 LDR X20, [X20 + 0x9E8]
	0x0337B208 MOV X19, X0
	0x0337B20C TBNZ X8, 0x0, 0x337B224
	0x0337B210 ADRP X0, 0xD81000
	0x0337B214 LDR X0, [X0 + 0x9E8]
	0x0337B218 BL 0x1C16CF4
	0x0337B21C MOVZ W8, 0x1
	0x0337B220 STRB W8, [X21 + 0xF4C]
	0x0337B224 LDR X0, [X20]
	0x0337B228 LDRH W19, [X19]
	0x0337B22C LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1062000
	008 Move W8, [X22+3907]
	009 Move X19, X2
	010 Move X20, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xDAE000
	017 Move X0, [X0+120]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3907], W8
	021 Move X23, 0xDAE000
	022 NotImplemented "Instruction LDRSH not yet implemented."
	023 Move X23, [X23+120]
	024 Compare X20, 0
	025 JumpIfEqual {76}
	026 Move TEMP, X22
	027 And TEMP, TEMP, -2147483648
	028 Compare TEMP, -2147483648
	029 JumpIfNotEqual {76}
	030 Move W8, [X20+16]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X0, X20
	033 Move W1, W31
	034 Move X2, X31
	035 Call String.get_Chars, X0, X1
	036 And W8, W0, 0xFFFF
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X0, X20
	039 Move W1, W31
	040 Move X2, X31
	041 Call String.get_Chars, X0, X1
	042 And W8, W0, 0xFFFF
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X22, 0x105F000
	045 Move W8, [X22+1890]
	046 NotImplemented "Instruction LDRH not yet implemented."
	047 Compare W8, 0
	048 JumpIfNotEqual {54}
	049 Move X0, 0xDA0000
	050 Move X0, [X0+656]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X22+1890], W8
	054 Move X0, X20
	055 Move X1, X31
	056 Call String.GetRawStringData, X0
	057 Move X8, [X23]
	058 Move W20, [X20+16]
	059 Move X22, X0
	060 Move W9, [X8+224]
	061 Compare W9, 0
	062 JumpIfNotEqual {65}
	063 Move X0, X8
	064 Call 0x1C17DFC
	065 Move W0, W21
	066 Move X1, X22
	067 Move X2, X20
	068 Move X3, X19
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move X22, [X31+16]
	072 Move X21, [X31+24]
	073 Move X30, [X31+48]
	074 Move X23, [X31+56]
	075 NotImplemented "Instruction LDRH not yet implemented."
	076 Move X21, 0x105F000
	077 Move W8, [X21+1890]
	078 Compare W8, 0
	079 JumpIfNotEqual {85}
	080 Move X0, 0xDA0000
	081 Move X0, [X0+656]
	082 Call 0x1C17CF4
	083 Move W8, 1
	084 Move [X21+1890], W8
	085 NotImplemented "Instruction SXTH not yet implemented."
	086 Compare X20, 0
	087 JumpIfEqual {93}
	088 Move X0, X20
	089 Move X1, X31
	090 Call String.GetRawStringData, X0
	091 Move W20, [X20+16]
	092 Move X22, X0
	093 Move X22, X31
	094 Move X0, [X23]
	095 Move W8, [X0+224]
	096 Compare W8, 0
	097 JumpIfNotEqual {99}
	098 Call 0x1C17DFC
	099 Move W0, W21
	100 Move X1, X22
	101 Move X2, X20
	102 Move X3, X19
	103 Move X20, [X31+32]
	104 Move X19, [X31+40]
	105 Move X22, [X31+16]
	106 Move X21, [X31+24]
	107 Move X30, [X31+48]
	108 Move X23, [X31+56]
	109 Call Number.FormatInt32, X0, X1, X2
	110 Return X0

Method: System.Boolean TryFormat(System.Span`1<System.Char> destination, out System.Int32 charsWritten, System.ReadOnlySpan`1<System.Char> format = null, System.IFormatProvider provider = null)

Disassembly:
	0x0337B494 BL 0x1C16DEC
	0x0337B498 STP X30, X19, [X31 - 0x10]!
	0x0337B49C MOV X2, X31
	0x0337B4A0 MOV X19, X0
	0x0337B4A4 BL 0x338C8D8
	0x0337B4A8 MOVZ W8, 0x4002
	0x0337B4AC MOVK W8, 0x80000000
	0x0337B4B0 STR W8, [X19 + 0x60]
	0x0337B4B4 LDP X30, X19, [X31], #0x10
	0x0337B4B8 RET
	0x0337B4BC STR X30, [X31 - 0x40]!
	0x0337B4C0 STP X24, X23, [X31 + 0x10]
	0x0337B4C4 STP X22, X21, [X31 + 0x20]
	0x0337B4C8 STP X20, X19, [X31 + 0x30]
	0x0337B4CC ADRP X24, 0x1061000
	0x0337B4D0 ADRP X23, 0xD7C000
	0x0337B4D4 ADRP X22, 0xD81000
	0x0337B4D8 LDRB W8, [X24 + 0xF52]
	0x0337B4DC LDR X23, [X23 + 0x628]
	0x0337B4E0 LDR X22, [X22 + 0x9E8]
	0x0337B4E4 MOV X19, X2
	0x0337B4E8 MOV X20, X1
	0x0337B4EC MOV X21, X0
	0x0337B4F0 TBNZ X8, 0x0, 0x337B514
	0x0337B4F4 ADRP X0, 0xD81000
	0x0337B4F8 LDR X0, [X0 + 0x9E8]
	0x0337B4FC BL 0x1C16CF4
	0x0337B500 ADRP X0, 0xD7C000
	0x0337B504 LDR X0, [X0 + 0x628]
	0x0337B508 BL 0x1C16CF4
	0x0337B50C MOVZ W8, 0x1
	0x0337B510 STRB W8, [X24 + 0xF52]
	0x0337B514 LDRH W8, [X21]
	0x0337B518 LDR X0, [X23]
	0x0337B51C ADD X1, X31, 0xC
	0x0337B520 STRH W8, [X31 + 0xC]
	0x0337B524 BL 0x1C16E04
	0x0337B528 LDR X8, [X22]
	0x0337B52C MOV X21, X0
	0x0337B530 LDR W9, [X8 + 0xE0]
	0x0337B534 CBNZ W9, 0x337B540
	0x0337B538 MOV X0, X8
	0x0337B53C BL 0x1C16DFC
	0x0337B540 MOV X0, X21
	0x0337B544 MOV X1, X20
	0x0337B548 MOV X2, X19
	0x0337B54C MOV X3, X31
	0x0337B550 BL 0x3318718
	0x0337B554 LDP X20, X19, [X31 + 0x30]
	0x0337B558 LDP X22, X21, [X31 + 0x20]
	0x0337B55C LDP X24, X23, [X31 + 0x10]
	0x0337B560 LDR X30, [X31], #0x40
	0x0337B564 RET
	0x0337B568 STP X30, X21, [X31 - 0x20]!
	0x0337B56C STP X20, X19, [X31 + 0x10]
	0x0337B570 ADRP X21, 0x1061000
	0x0337B574 LDRB W8, [X21 + 0xF53]
	0x0337B578 MOV X20, X1
	0x0337B57C MOV X19, X0
	0x0337B580 TBNZ X8, 0x0, 0x337B598
	0x0337B584 ADRP X0, 0xD78000
	0x0337B588 LDR X0, [X0 + 0x758]
	0x0337B58C BL 0x1C16CF4
	0x0337B590 MOVZ W8, 0x1
	0x0337B594 STRB W8, [X21 + 0xF53]
	0x0337B598 CBZ X20, 0x337B5D4
	0x0337B59C ADRP X8, 0xD78000
	0x0337B5A0 LDR X8, [X8 + 0x758]
	0x0337B5A4 LDR X9, [X20]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x1062000
	011 Move W8, [X26+3908]
	012 Move X20, X6
	013 Move X23, X5
	014 Move X24, X4
	015 Move X19, X3
	016 Move X21, X2
	017 Move X22, X1
	018 Move X25, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xDAE000
	024 Move X0, [X0+120]
	025 Call 0x1C17CF4
	026 Move X0, 0xDA8000
	027 Move X0, [X0+40]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X26+3908], W8
	031 NotImplemented "Instruction LDRSH not yet implemented."
	032 Move X8, 0xDAE000
	033 Move X8, [X8+120]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 And W25, W9, 0xFFFF
	036 Move TEMP, X9
	037 And TEMP, TEMP, -2147483648
	038 Compare TEMP, -2147483648
	039 JumpIfNotEqual {64}
	040 NotImplemented "Instruction LDRH not yet implemented."
	041 Or W9, W9, 32
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X0, [X8]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move W0, W25
	049 Move X1, X24
	050 Move X2, X23
	051 Move X3, X20
	052 Move X4, X22
	053 Move X5, X21
	054 Move X6, X19
	055 Move X20, [X31+64]
	056 Move X19, [X31+72]
	057 Move X22, [X31+48]
	058 Move X21, [X31+56]
	059 Move X24, [X31+32]
	060 Move X23, [X31+40]
	061 Move X26, [X31+16]
	062 Move X25, [X31+24]
	063 Move X30, [X31+80]
	064 Move X0, [X8]
	065 NotImplemented "Instruction SXTH not yet implemented."
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move W0, W25
	071 Move X1, X24
	072 Move X2, X23
	073 Move X3, X20
	074 Move X4, X22
	075 Move X5, X21
	076 Move X6, X19
	077 Move X20, [X31+64]
	078 Move X19, [X31+72]
	079 Move X22, [X31+48]
	080 Move X21, [X31+56]
	081 Move X24, [X31+32]
	082 Move X23, [X31+40]
	083 Move X26, [X31+16]
	084 Move X25, [X31+24]
	085 Move X30, [X31+80]
	086 Call Number.TryFormatInt32, X0, X1, X2, X3, X4
	087 Return X0

Method: System.Int16 Parse(System.String s, System.IFormatProvider provider)

Disassembly:
	0x0337BB28 CBNZ W8, 0x337BB40
	0x0337BB2C ADRP X0, 0xD9F000
	0x0337BB30 LDR X0, [X0 + 0x290]
	0x0337BB34 BL 0x1C16CF4
	0x0337BB38 MOVZ W8, 0x1
	0x0337BB3C STRB W8, [X21 + 0x762]
	0x0337BB40 ADRP X22, 0xDAD000
	0x0337BB44 LDR X22, [X22 + 0x78]
	0x0337BB48 CBZ X20, 0x337BB64
	0x0337BB4C MOV X0, X20
	0x0337BB50 MOV X1, X31
	0x0337BB54 BL 0x3225708
	0x0337BB58 LDR W20, [X20 + 0x10]
	0x0337BB5C MOV X21, X0
	0x0337BB60 B 0x337BB68
	0x0337BB64 MOV X21, X31
	0x0337BB68 MOV X0, X31
	0x0337BB6C BL 0x333AE98
	0x0337BB70 LDR X8, [X22]
	0x0337BB74 MOV X22, X0
	0x0337BB78 LDR W9, [X8 + 0xE0]
	0x0337BB7C CBNZ W9, 0x337BB88
	0x0337BB80 MOV X0, X8
	0x0337BB84 BL 0x1C16DFC
	0x0337BB88 MOV X0, X21
	0x0337BB8C MOV X1, X20
	0x0337BB90 MOV W2, W19
	0x0337BB94 MOV X3, X22
	0x0337BB98 LDP X20, X19, [X31 + 0x20]
	0x0337BB9C LDP X22, X21, [X31 + 0x10]
	0x0337BBA0 LDR X30, [X31], #0x30
	0x0337BBA4 B 0x337ADF4
	0x0337BBA8 STR X30, [X31 - 0x30]!
	0x0337BBAC STP X22, X21, [X31 + 0x10]
	0x0337BBB0 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X1
	006 Move X20, X0
	007 Compare X0, 0
	008 JumpIfNotEqual {12}
	009 Move W0, 48
	010 Move X1, X31
	011 Call ThrowHelper.ThrowArgumentNullException, X0
	012 Move X21, 0x105F000
	013 Move W8, [X21+1890]
	014 Compare W8, 0
	015 JumpIfEqual {23}
	016 Compare X20, 0
	017 JumpIfEqual {30}
	018 Move X0, X20
	019 Move X1, X31
	020 Call String.GetRawStringData, X0
	021 Move W21, [X20+16]
	022 Move X20, X0
	023 Move X0, 0xDA0000
	024 Move X0, [X0+656]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+1890], W8
	028 Compare X20, 0
	029 JumpIfNotEqual {18}
	030 Move X21, X31
	031 Move X0, X19
	032 Move X1, X31
	033 Call NumberFormatInfo.GetInstance, X0
	034 Move X3, X0
	035 Move X0, X20
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move W2, 7
	039 Move X1, X21
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]

Method: System.Int16 Parse(System.String s, System.Globalization.NumberStyles style, System.IFormatProvider provider)

Disassembly:
	0x0337BD50 LDP X30, X23, [X31], #0x30
	0x0337BD54 B 0x337ADF4
	0x0337BD58 STR X30, [X31 - 0x40]!
	0x0337BD5C STP X24, X23, [X31 + 0x10]
	0x0337BD60 STP X22, X21, [X31 + 0x20]
	0x0337BD64 STP X20, X19, [X31 + 0x30]
	0x0337BD68 ADRP X24, 0x1061000
	0x0337BD6C ADRP X23, 0xDAD000
	0x0337BD70 LDRB W8, [X24 + 0xF5E]
	0x0337BD74 LDR X23, [X23 + 0x78]
	0x0337BD78 MOV X22, X3
	0x0337BD7C MOV W19, W2
	0x0337BD80 MOV X20, X1
	0x0337BD84 MOV X21, X0
	0x0337BD88 TBNZ X8, 0x0, 0x337BDA0
	0x0337BD8C ADRP X0, 0xDAD000
	0x0337BD90 LDR X0, [X0 + 0x78]
	0x0337BD94 BL 0x1C16CF4
	0x0337BD98 MOVZ W8, 0x1
	0x0337BD9C STRB W8, [X24 + 0xF5E]
	0x0337BDA0 MOV W0, W19
	0x0337BDA4 MOV X1, X31
	0x0337BDA8 BL 0x333B33C
	0x0337BDAC MOV X0, X22
	0x0337BDB0 MOV X1, X31
	0x0337BDB4 BL 0x333ACEC
	0x0337BDB8 LDR X8, [X23]
	0x0337BDBC MOV X22, X0
	0x0337BDC0 LDR W9, [X8 + 0xE0]
	0x0337BDC4 CBNZ W9, 0x337BDD0
	0x0337BDC8 MOV X0, X8
	0x0337BDCC BL 0x1C16DFC
	0x0337BDD0 MOV X0, X21
	0x0337BDD4 MOV X1, X20
	0x0337BDD8 MOV W2, W19
	0x0337BDDC MOV X3, X22
	0x0337BDE0 LDP X20, X19, [X31 + 0x30]
	0x0337BDE4 LDP X22, X21, [X31 + 0x20]
	0x0337BDE8 LDP X24, X23, [X31 + 0x10]
	0x0337BDEC LDR X30, [X31], #0x40
	0x0337BDF0 B 0x337ADF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W19, W1
	007 Move X21, X0
	008 Move W0, W1
	009 Move X1, X31
	010 Move X20, X2
	011 Call NumberFormatInfo.ValidateParseStyleInteger, X0
	012 Compare X21, 0
	013 JumpIfNotEqual {17}
	014 Move W0, 48
	015 Move X1, X31
	016 Call ThrowHelper.ThrowArgumentNullException, X0
	017 Move X22, 0x105F000
	018 Move W8, [X22+1890]
	019 Compare W8, 0
	020 JumpIfEqual {28}
	021 Compare X21, 0
	022 JumpIfEqual {35}
	023 Move X0, X21
	024 Move X1, X31
	025 Call String.GetRawStringData, X0
	026 Move W21, [X21+16]
	027 Move X22, X0
	028 Move X0, 0xDA0000
	029 Move X0, [X0+656]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X22+1890], W8
	033 Compare X21, 0
	034 JumpIfNotEqual {23}
	035 Move X22, X31
	036 Move X0, X20
	037 Move X1, X31
	038 Call NumberFormatInfo.GetInstance, X0
	039 Move X3, X0
	040 Move X0, X22
	041 Move X1, X21
	042 Move W2, W19
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X30, [X31+48]
	048 Call Int16.Parse, X0, X1, X2
	049 Return X0

Method: System.Int16 Parse(System.ReadOnlySpan`1<System.Char> s, System.Globalization.NumberStyles style, System.Globalization.NumberFormatInfo info)

Disassembly:
	0x0337BBB4 ADRP X21, 0x1061000
	0x0337BBB8 LDRB W8, [X21 + 0xF5C]
	0x0337BBBC MOV X19, X1
	0x0337BBC0 MOV X20, X0
	0x0337BBC4 TBNZ X8, 0x0, 0x337BBDC
	0x0337BBC8 ADRP X0, 0xDAD000
	0x0337BBCC LDR X0, [X0 + 0x78]
	0x0337BBD0 BL 0x1C16CF4
	0x0337BBD4 MOVZ W8, 0x1
	0x0337BBD8 STRB W8, [X21 + 0xF5C]
	0x0337BBDC CBNZ X20, 0x337BBEC
	0x0337BBE0 MOVZ W0, 0x30
	0x0337BBE4 MOV X1, X31
	0x0337BBE8 BL 0x338F3E0
	0x0337BBEC ADRP X21, 0x105E000
	0x0337BBF0 LDRB W8, [X21 + 0x762]
	0x0337BBF4 CBNZ W8, 0x337BC0C
	0x0337BBF8 ADRP X0, 0xD9F000
	0x0337BBFC LDR X0, [X0 + 0x290]
	0x0337BC00 BL 0x1C16CF4
	0x0337BC04 MOVZ W8, 0x1
	0x0337BC08 STRB W8, [X21 + 0x762]
	0x0337BC0C ADRP X22, 0xDAD000
	0x0337BC10 LDR X22, [X22 + 0x78]
	0x0337BC14 CBZ X20, 0x337BC30
	0x0337BC18 MOV X0, X20
	0x0337BC1C MOV X1, X31
	0x0337BC20 BL 0x3225708
	0x0337BC24 LDR W21, [X20 + 0x10]
	0x0337BC28 MOV X20, X0
	0x0337BC2C B 0x337BC34
	0x0337BC30 MOV X21, X31
	0x0337BC34 MOV X0, X19
	0x0337BC38 MOV X1, X31
	0x0337BC3C BL 0x333ACEC
	0x0337BC40 LDR X8, [X22]
	0x0337BC44 MOV X19, X0
	0x0337BC48 LDR W9, [X8 + 0xE0]
	0x0337BC4C CBNZ W9, 0x337BC58
	0x0337BC50 MOV X0, X8
	0x0337BC54 BL 0x1C16DFC
	0x0337BC58 MOV X0, X20
	0x0337BC5C MOV X1, X21
	0x0337BC60 MOV X3, X19
	0x0337BC64 LDP X20, X19, [X31 + 0x20]
	0x0337BC68 LDP X22, X21, [X31 + 0x10]
	0x0337BC6C MOVZ W2, 0x7
	0x0337BC70 LDR X30, [X31], #0x30
	0x0337BC74 B 0x337ADF4
	0x0337BC78 STP X30, X23, [X31 - 0x30]!
	0x0337BC7C STP X22, X21, [X31 + 0x10]
	0x0337BC80 STP X20, X19, [X31 + 0x20]
	0x0337BC84 ADRP X22, 0x1061000
	0x0337BC88 LDRB W8, [X22 + 0xF5D]
	0x0337BC8C MOV X20, X2
	0x0337BC90 MOV W19, W1
	0x0337BC94 MOV X21, X0
	0x0337BC98 TBNZ X8, 0x0, 0x337BCB0
	0x0337BC9C ADRP X0, 0xDAD000
	0x0337BCA0 LDR X0, [X0 + 0x78]
	0x0337BCA4 BL 0x1C16CF4
	0x0337BCA8 MOVZ W8, 0x1
	0x0337BCAC STRB W8, [X22 + 0xF5D]
	0x0337BCB0 MOV W0, W19
	0x0337BCB4 MOV X1, X31
	0x0337BCB8 BL 0x333B33C
	0x0337BCBC CBNZ X21, 0x337BCCC
	0x0337BCC0 MOVZ W0, 0x30
	0x0337BCC4 MOV X1, X31
	0x0337BCC8 BL 0x338F3E0
	0x0337BCCC ADRP X22, 0x105E000
	0x0337BCD0 LDRB W8, [X22 + 0x762]
	0x0337BCD4 CBNZ W8, 0x337BCEC
	0x0337BCD8 ADRP X0, 0xD9F000
	0x0337BCDC LDR X0, [X0 + 0x290]
	0x0337BCE0 BL 0x1C16CF4
	0x0337BCE4 MOVZ W8, 0x1
	0x0337BCE8 STRB W8, [X22 + 0x762]
	0x0337BCEC ADRP X23, 0xDAD000
	0x0337BCF0 LDR X23, [X23 + 0x78]
	0x0337BCF4 CBZ X21, 0x337BD10
	0x0337BCF8 MOV X0, X21
	0x0337BCFC MOV X1, X31
	0x0337BD00 BL 0x3225708
	0x0337BD04 LDR W21, [X21 + 0x10]
	0x0337BD08 MOV X22, X0
	0x0337BD0C B 0x337BD14
	0x0337BD10 MOV X22, X31
	0x0337BD14 MOV X0, X20
	0x0337BD18 MOV X1, X31
	0x0337BD1C BL 0x333ACEC
	0x0337BD20 LDR X8, [X23]
	0x0337BD24 MOV X20, X0
	0x0337BD28 LDR W9, [X8 + 0xE0]
	0x0337BD2C CBNZ W9, 0x337BD38
	0x0337BD30 MOV X0, X8
	0x0337BD34 BL 0x1C16DFC
	0x0337BD38 MOV X0, X22
	0x0337BD3C MOV X1, X21
	0x0337BD40 MOV W2, W19
	0x0337BD44 MOV X3, X20
	0x0337BD48 LDP X20, X19, [X31 + 0x20]
	0x0337BD4C LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x1062000
	009 Move X24, 0xDAE000
	010 Move W8, [X23+3909]
	011 Move X24, [X24+120]
	012 Move X20, X3
	013 Move W19, W2
	014 Move X21, X1
	015 Move X22, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xDAE000
	021 Move X0, [X0+120]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+3909], W8
	025 Move X0, [X24]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X22
	031 Move X1, X21
	032 Move W2, W19
	033 Move X3, X20
	034 Call Number.ParseInt32, X0, X1, X2
	035 Move TEMP, X19
	036 And TEMP, TEMP, 512
	037 Compare TEMP, 512
	038 JumpIfEqual {58}
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X0, 0xD79000
	041 Move X0, [X0+2136]
	042 Call 0x1C17D08
	043 Call 0x1C17F10
	044 Move X19, X0
	045 Move X0, 0xDAE000
	046 Move X0, [X0+432]
	047 Call 0x1C17D08
	048 Move X1, X0
	049 Move X0, X19
	050 Move X2, X31
	051 Call OverflowException..ctor, X0, X1
	052 Move X0, 0xDB0000
	053 Move X0, [X0+3712]
	054 Call 0x1C17D08
	055 Move X1, X0
	056 Move X0, X19
	057 Call 0x1C17DEC
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X20, [X31+48]
	060 Move X19, [X31+56]
	061 Move X22, [X31+32]
	062 Move X21, [X31+40]
	063 Move X24, [X31+16]
	064 Move X23, [X31+24]
	065 Move X30, [X31+64]
	066 Return X0
	067 Move X19, X0
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X0, X19
	070 Call 0x3EB2AD0
	071 Move X19, X0
	072 Move X0, 0xD79000
	073 Move X0, [X0+2136]
	074 Call 0x1C17D08
	075 Move X8, [X19]
	076 Move X1, [X8]
	077 Call 0x1C18270
	078 Move TEMP, X0
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfNotEqual {103}
	082 Move X19, [X19]
	083 Call 0x3EB2AE0
	084 Move X0, 0xD79000
	085 Move X0, [X0+2136]
	086 Call 0x1C17D08
	087 Call 0x1C17F10
	088 Move X20, X0
	089 Move X0, 0xDAE000
	090 Move X0, [X0+432]
	091 Call 0x1C17D08
	092 Move X1, X0
	093 Move X0, X20
	094 Move X2, X19
	095 Move X3, X31
	096 Call OverflowException..ctor, X0, X1, X2
	097 Move X0, 0xDB0000
	098 Move X0, [X0+3712]
	099 Call 0x1C17D08
	100 Move X1, X0
	101 Move X0, X20
	102 Call 0x1C17DEC
	103 Move W0, 8
	104 Call 0x3EB2AF0
	105 Move X8, [X19]
	106 Move [X0], X8
	107 Move X1, 0xB3A000
	108 Add X1, X1, 3672
	109 Move X2, X31
	110 Call 0x3EB2B00
	111 Move X19, X0
	112 Call 0x3EB2AE0
	113 Move X0, X19
	114 Call 0x1D2D690
	115 Call 0x1991590

Method: System.TypeCode GetTypeCode()

Disassembly:
	0x0337BFB8 MOV W5, W31
	0x0337BFBC BL 0x338A028

ISIL:
	001 Move W0, 7
	002 Return X0

Method: System.Boolean System.IConvertible.ToBoolean(System.IFormatProvider provider)

Disassembly:
	0x0337BFC0 MOV W8, W0
	0x0337BFC4 MOV W0, W31
	0x0337BFC8 TBZ X8, 0x0, 0x337C018
	0x0337BFCC LDR X0, [X25]
	0x0337BFD0 LDR W8, [X0 + 0xE0]
	0x0337BFD4 CBNZ W8, 0x337BFDC
	0x0337BFD8 BL 0x1C16DFC
	0x0337BFDC ADD X0, X31, 0x10
	0x0337BFE0 MOV X1, X19
	0x0337BFE4 BL 0x3387248
	0x0337BFE8 B 0x337C018
	0x0337BFEC LDR X0, [X25]
	0x0337BFF0 STRB W31, [X31 + 0xC]
	0x0337BFF4 LDR W8, [X0 + 0xE0]
	0x0337BFF8 CBNZ W8, 0x337C000
	0x0337BFFC BL 0x1C16DFC
	0x0337C000 ADD X5, X31, 0xC
	0x0337C004 MOV X0, X22
	0x0337C008 MOV X1, X21
	0x0337C00C MOV W2, W20
	0x0337C010 MOV X4, X19
	0x0337C014 BL 0x3387B84
	0x0337C018 LDR X8, [X24 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1062000
	006 Move X20, 0xD82000
	007 Move W8, [X21+3910]
	008 Move X20, [X20+2536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD82000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3910], W8
	019 Move X0, [X20]
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W0, W19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call Convert.ToBoolean, X0
	032 Return X0

Method: System.Char System.IConvertible.ToChar(System.IFormatProvider provider)

Disassembly:
	0x0337C01C LDR X9, [X31 + 0x98]
	0x0337C020 CMP X8, X9
	0x0337C024 B.NE 0x337C044
	0x0337C028 LDP X20, X19, [X31 + 0xD0]
	0x0337C02C LDP X22, X21, [X31 + 0xC0]
	0x0337C030 LDP X24, X23, [X31 + 0xB0]
	0x0337C034 LDP X30, X25, [X31 + 0xA0]
	0x0337C038 AND W0, W0, 0x1
	0x0337C03C ADD X31, X31, 0xE0
	0x0337C040 RET
	0x0337C044 BL 0x3EB1B20
	0x0337C048 STP X30, X23, [X31 - 0x30]!
	0x0337C04C STP X22, X21, [X31 + 0x10]
	0x0337C050 STP X20, X19, [X31 + 0x20]
	0x0337C054 ADRP X23, 0x1060000
	0x0337C058 ADRP X22, 0xDAC000
	0x0337C05C LDRB W8, [X23 + 0xF60]
	0x0337C060 LDR X22, [X22 + 0x78]
	0x0337C064 MOV X19, X2
	0x0337C068 MOV X20, X1
	0x0337C06C MOV X21, X0
	0x0337C070 TBNZ X8, 0x0, 0x337C088
	0x0337C074 ADRP X0, 0xDAC000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1061000
	006 Move X20, 0xD81000
	007 Move W8, [X21+3911]
	008 Move X20, [X20+2536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD81000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3911], W8
	019 Move X0, [X20]
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W0, W19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call Convert.ToChar, X0
	032 Return X0

Method: System.SByte System.IConvertible.ToSByte(System.IFormatProvider provider)

Disassembly:
	0x0337C078 LDR X0, [X0 + 0x78]
	0x0337C07C BL 0x1C16CF4
	0x0337C080 MOVZ W8, 0x1
	0x0337C084 STRB W8, [X23 + 0xF60]
	0x0337C088 MOV X0, X31
	0x0337C08C BL 0x333AE98
	0x0337C090 LDR X8, [X22]
	0x0337C094 MOV X22, X0
	0x0337C098 LDR W9, [X8 + 0xE0]
	0x0337C09C CBNZ W9, 0x337C0A8
	0x0337C0A0 MOV X0, X8
	0x0337C0A4 BL 0x1C16DFC
	0x0337C0A8 MOV X0, X21
	0x0337C0AC MOV X1, X20
	0x0337C0B0 MOV X3, X22
	0x0337C0B4 MOV X4, X19
	0x0337C0B8 LDP X20, X19, [X31 + 0x20]
	0x0337C0BC LDP X22, X21, [X31 + 0x10]
	0x0337C0C0 MOVZ W2, 0x7
	0x0337C0C4 LDP X30, X23, [X31], #0x30
	0x0337C0C8 B 0x337BEC4
	0x0337C0CC STR X30, [X31 - 0x40]!
	0x0337C0D0 STP X24, X23, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1061000
	006 Move X20, 0xD81000
	007 Move W8, [X21+3912]
	008 Move X20, [X20+2536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD81000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3912], W8
	019 Move X0, [X20]
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W0, W19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call Convert.ToSByte, X0
	032 Return X0

Method: System.Byte System.IConvertible.ToByte(System.IFormatProvider provider)

Disassembly:
	0x0337C0D4 STP X22, X21, [X31 + 0x20]
	0x0337C0D8 STP X20, X19, [X31 + 0x30]
	0x0337C0DC ADRP X23, 0x1060000
	0x0337C0E0 LDRB W8, [X23 + 0xF61]
	0x0337C0E4 MOV X19, X3
	0x0337C0E8 MOV X21, X2
	0x0337C0EC MOV W20, W1
	0x0337C0F0 MOV X22, X0
	0x0337C0F4 TBNZ X8, 0x0, 0x337C10C
	0x0337C0F8 ADRP X0, 0xDAC000
	0x0337C0FC LDR X0, [X0 + 0x78]
	0x0337C100 BL 0x1C16CF4
	0x0337C104 MOVZ W8, 0x1
	0x0337C108 STRB W8, [X23 + 0xF61]
	0x0337C10C MOV W0, W20
	0x0337C110 MOV X1, X31
	0x0337C114 BL 0x333B33C
	0x0337C118 CBZ X22, 0x337C1A4
	0x0337C11C ADRP X23, 0x105D000
	0x0337C120 ADRP X24, 0xDAC000
	0x0337C124 LDRB W8, [X23 + 0x762]
	0x0337C128 LDR X24, [X24 + 0x78]
	0x0337C12C CBNZ W8, 0x337C144

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1061000
	006 Move X20, 0xD81000
	007 Move W8, [X21+3913]
	008 Move X20, [X20+2536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD81000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3913], W8
	019 Move X0, [X20]
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W0, W19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call Convert.ToByte, X0
	032 Return X0

Method: System.Int16 System.IConvertible.ToInt16(System.IFormatProvider provider)

Disassembly:
	0x0337C130 ADRP X0, 0xD9E000
	0x0337C134 LDR X0, [X0 + 0x290]

ISIL:
	001 NotImplemented "Instruction LDRH not yet implemented."
	002 Return X0

Method: System.UInt16 System.IConvertible.ToUInt16(System.IFormatProvider provider)

Disassembly:
	0x0337C138 BL 0x1C16CF4
	0x0337C13C MOVZ W8, 0x1
	0x0337C140 STRB W8, [X23 + 0x762]
	0x0337C144 MOV X0, X22
	0x0337C148 MOV X1, X31
	0x0337C14C BL 0x3225708
	0x0337C150 LDR W22, [X22 + 0x10]
	0x0337C154 MOV X23, X0
	0x0337C158 MOV X0, X21
	0x0337C15C MOV X1, X31
	0x0337C160 BL 0x333ACEC
	0x0337C164 LDR X8, [X24]
	0x0337C168 MOV X21, X0
	0x0337C16C LDR W9, [X8 + 0xE0]
	0x0337C170 CBNZ W9, 0x337C17C
	0x0337C174 MOV X0, X8
	0x0337C178 BL 0x1C16DFC
	0x0337C17C MOV X0, X23
	0x0337C180 MOV X1, X22
	0x0337C184 MOV W2, W20
	0x0337C188 MOV X3, X21
	0x0337C18C MOV X4, X19
	0x0337C190 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1061000
	006 Move X20, 0xD81000
	007 Move W8, [X21+3914]
	008 Move X20, [X20+2536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD81000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3914], W8
	019 Move X0, [X20]
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W0, W19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call Convert.ToUInt16, X0
	032 Return X0

Method: System.Int32 System.IConvertible.ToInt32(System.IFormatProvider provider)

Disassembly:
	0x0337C194 LDP X22, X21, [X31 + 0x20]
	0x0337C198 LDP X24, X23, [X31 + 0x10]
	0x0337C19C LDR X30, [X31], #0x40
	0x0337C1A0 B 0x337BEC4
	0x0337C1A4 STR W31, [X19]
	0x0337C1A8 LDP X20, X19, [X31 + 0x30]
	0x0337C1AC LDP X22, X21, [X31 + 0x20]
	0x0337C1B0 LDP X24, X23, [X31 + 0x10]
	0x0337C1B4 MOV W0, W31
	0x0337C1B8 LDR X30, [X31], #0x40
	0x0337C1BC RET
	0x0337C1C0 STP X30, X25, [X31 - 0x40]!
	0x0337C1C4 STP X24, X23, [X31 + 0x10]
	0x0337C1C8 STP X22, X21, [X31 + 0x20]
	0x0337C1CC STP X20, X19, [X31 + 0x30]
	0x0337C1D0 ADRP X25, 0x1060000
	0x0337C1D4 ADRP X24, 0xDAC000
	0x0337C1D8 LDRB W8, [X25 + 0xF62]
	0x0337C1DC LDR X24, [X24 + 0x78]
	0x0337C1E0 MOV X19, X4
	0x0337C1E4 MOV X23, X3
	0x0337C1E8 MOV W20, W2
	0x0337C1EC MOV X21, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1061000
	006 Move X20, 0xD81000
	007 Move W8, [X21+3915]
	008 Move X20, [X20+2536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD81000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3915], W8
	019 Move X0, [X20]
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W0, W19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call Convert.ToInt32, X0
	032 Return X0

Method: System.UInt32 System.IConvertible.ToUInt32(System.IFormatProvider provider)

Disassembly:
	0x0337C1F0 MOV X22, X0
	0x0337C1F4 TBNZ X8, 0x0, 0x337C20C
	0x0337C1F8 ADRP X0, 0xDAC000
	0x0337C1FC LDR X0, [X0 + 0x78]
	0x0337C200 BL 0x1C16CF4
	0x0337C204 MOVZ W8, 0x1
	0x0337C208 STRB W8, [X25 + 0xF62]
	0x0337C20C MOV W0, W20
	0x0337C210 MOV X1, X31
	0x0337C214 BL 0x333B33C
	0x0337C218 MOV X0, X23
	0x0337C21C MOV X1, X31
	0x0337C220 BL 0x333ACEC
	0x0337C224 LDR X8, [X24]
	0x0337C228 MOV X23, X0
	0x0337C22C LDR W9, [X8 + 0xE0]
	0x0337C230 CBNZ W9, 0x337C23C
	0x0337C234 MOV X0, X8
	0x0337C238 BL 0x1C16DFC
	0x0337C23C MOV X0, X22
	0x0337C240 MOV X1, X21
	0x0337C244 MOV W2, W20
	0x0337C248 MOV X3, X23

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1061000
	006 Move X20, 0xD81000
	007 Move W8, [X21+3916]
	008 Move X20, [X20+2536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD81000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3916], W8
	019 Move X0, [X20]
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W0, W19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call Convert.ToUInt32, X0
	032 Return X0

Method: System.Int64 System.IConvertible.ToInt64(System.IFormatProvider provider)

Disassembly:
	0x0337C24C MOV X4, X19
	0x0337C250 LDP X20, X19, [X31 + 0x30]
	0x0337C254 LDP X22, X21, [X31 + 0x20]
	0x0337C258 LDP X24, X23, [X31 + 0x10]
	0x0337C25C LDP X30, X25, [X31], #0x40
	0x0337C260 B 0x337BEC4
	0x0337C264 MOVZ W0, 0x9
	0x0337C268 RET
	0x0337C26C STP X30, X21, [X31 - 0x20]!
	0x0337C270 STP X20, X19, [X31 + 0x10]
	0x0337C274 ADRP X21, 0x1060000
	0x0337C278 ADRP X20, 0xD80000
	0x0337C27C LDRB W8, [X21 + 0xF63]
	0x0337C280 LDR X20, [X20 + 0x9E8]
	0x0337C284 MOV X19, X0
	0x0337C288 TBNZ X8, 0x0, 0x337C2A0
	0x0337C28C ADRP X0, 0xD80000
	0x0337C290 LDR X0, [X0 + 0x9E8]
	0x0337C294 BL 0x1C16CF4
	0x0337C298 MOVZ W8, 0x1
	0x0337C29C STRB W8, [X21 + 0xF63]
	0x0337C2A0 LDR X0, [X20]
	0x0337C2A4 LDR W19, [X19]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1061000
	006 Move X20, 0xD81000
	007 Move W8, [X21+3917]
	008 Move X20, [X20+2536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD81000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3917], W8
	019 Move X0, [X20]
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W0, W19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call Convert.ToInt64, X0
	032 Return X0

Method: System.UInt64 System.IConvertible.ToUInt64(System.IFormatProvider provider)

Disassembly:
	0x0337C2A8 LDR W8, [X0 + 0xE0]
	0x0337C2AC CBNZ W8, 0x337C2B4
	0x0337C2B0 BL 0x1C16DFC
	0x0337C2B4 MOV W0, W19
	0x0337C2B8 LDP X20, X19, [X31 + 0x10]
	0x0337C2BC MOV X1, X31
	0x0337C2C0 LDP X30, X21, [X31], #0x20
	0x0337C2C4 B 0x331E45C
	0x0337C2C8 STP X30, X21, [X31 - 0x20]!
	0x0337C2CC STP X20, X19, [X31 + 0x10]
	0x0337C2D0 ADRP X21, 0x1060000
	0x0337C2D4 ADRP X20, 0xD80000
	0x0337C2D8 LDRB W8, [X21 + 0xF64]
	0x0337C2DC LDR X20, [X20 + 0x9E8]
	0x0337C2E0 MOV X19, X0
	0x0337C2E4 TBNZ X8, 0x0, 0x337C2FC
	0x0337C2E8 ADRP X0, 0xD80000
	0x0337C2EC LDR X0, [X0 + 0x9E8]
	0x0337C2F0 BL 0x1C16CF4
	0x0337C2F4 MOVZ W8, 0x1
	0x0337C2F8 STRB W8, [X21 + 0xF64]
	0x0337C2FC LDR X0, [X20]
	0x0337C300 LDR W19, [X19]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1061000
	006 Move X20, 0xD81000
	007 Move W8, [X21+3918]
	008 Move X20, [X20+2536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD81000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3918], W8
	019 Move X0, [X20]
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W0, W19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call Convert.ToUInt64, X0
	032 Return X0

Method: System.Single System.IConvertible.ToSingle(System.IFormatProvider provider)

Disassembly:
	0x0337C304 LDR W8, [X0 + 0xE0]
	0x0337C308 CBNZ W8, 0x337C310
	0x0337C30C BL 0x1C16DFC
	0x0337C310 MOV W0, W19
	0x0337C314 LDP X20, X19, [X31 + 0x10]
	0x0337C318 MOV X1, X31
	0x0337C31C LDP X30, X21, [X31], #0x20
	0x0337C320 B 0x331E88C
	0x0337C324 STP X30, X21, [X31 - 0x20]!
	0x0337C328 STP X20, X19, [X31 + 0x10]
	0x0337C32C ADRP X21, 0x1060000
	0x0337C330 ADRP X20, 0xD80000
	0x0337C334 LDRB W8, [X21 + 0xF65]
	0x0337C338 LDR X20, [X20 + 0x9E8]
	0x0337C33C MOV X19, X0
	0x0337C340 TBNZ X8, 0x0, 0x337C358
	0x0337C344 ADRP X0, 0xD80000
	0x0337C348 LDR X0, [X0 + 0x9E8]
	0x0337C34C BL 0x1C16CF4
	0x0337C350 MOVZ W8, 0x1
	0x0337C354 STRB W8, [X21 + 0xF65]
	0x0337C358 LDR X0, [X20]
	0x0337C35C LDR W19, [X19]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1061000
	006 Move X20, 0xD81000
	007 Move W8, [X21+3919]
	008 Move X20, [X20+2536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD81000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3919], W8
	019 Move X0, [X20]
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W0, W19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call Convert.ToSingle, X0
	032 Return V0

Method: System.Double System.IConvertible.ToDouble(System.IFormatProvider provider)

Disassembly:
	0x0337C360 LDR W8, [X0 + 0xE0]
	0x0337C364 CBNZ W8, 0x337C36C
	0x0337C368 BL 0x1C16DFC
	0x0337C36C MOV W0, W19
	0x0337C370 LDP X20, X19, [X31 + 0x10]
	0x0337C374 MOV X1, X31
	0x0337C378 LDP X30, X21, [X31], #0x20
	0x0337C37C B 0x331ED90
	0x0337C380 STP X30, X21, [X31 - 0x20]!
	0x0337C384 STP X20, X19, [X31 + 0x10]
	0x0337C388 ADRP X21, 0x1060000
	0x0337C38C ADRP X20, 0xD80000
	0x0337C390 LDRB W8, [X21 + 0xF66]
	0x0337C394 LDR X20, [X20 + 0x9E8]
	0x0337C398 MOV X19, X0
	0x0337C39C TBNZ X8, 0x0, 0x337C3B4
	0x0337C3A0 ADRP X0, 0xD80000
	0x0337C3A4 LDR X0, [X0 + 0x9E8]
	0x0337C3A8 BL 0x1C16CF4
	0x0337C3AC MOVZ W8, 0x1
	0x0337C3B0 STRB W8, [X21 + 0xF66]
	0x0337C3B4 LDR X0, [X20]
	0x0337C3B8 LDR W19, [X19]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1061000
	006 Move X20, 0xD81000
	007 Move W8, [X21+3920]
	008 Move X20, [X20+2536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD81000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3920], W8
	019 Move X0, [X20]
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W0, W19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call Convert.ToDouble, X0
	032 Return V0

Method: System.Decimal System.IConvertible.ToDecimal(System.IFormatProvider provider)

Disassembly:
	0x0337C3BC LDR W8, [X0 + 0xE0]
	0x0337C3C0 CBNZ W8, 0x337C3C8
	0x0337C3C4 BL 0x1C16DFC
	0x0337C3C8 MOV W0, W19
	0x0337C3CC LDP X20, X19, [X31 + 0x10]
	0x0337C3D0 MOV X1, X31
	0x0337C3D4 LDP X30, X21, [X31], #0x20
	0x0337C3D8 B 0x331F434
	0x0337C3DC STP X30, X21, [X31 - 0x20]!
	0x0337C3E0 STP X20, X19, [X31 + 0x10]
	0x0337C3E4 ADRP X21, 0x1060000
	0x0337C3E8 ADRP X20, 0xD80000
	0x0337C3EC LDRB W8, [X21 + 0xF67]
	0x0337C3F0 LDR X20, [X20 + 0x9E8]
	0x0337C3F4 MOV X19, X0
	0x0337C3F8 TBNZ X8, 0x0, 0x337C410
	0x0337C3FC ADRP X0, 0xD80000
	0x0337C400 LDR X0, [X0 + 0x9E8]
	0x0337C404 BL 0x1C16CF4
	0x0337C408 MOVZ W8, 0x1
	0x0337C40C STRB W8, [X21 + 0xF67]
	0x0337C410 LDR X0, [X20]
	0x0337C414 LDR W19, [X19]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1061000
	006 Move X20, 0xD81000
	007 Move W8, [X21+3921]
	008 Move X20, [X20+2536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD81000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3921], W8
	019 Move X0, [X20]
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W0, W19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call Convert.ToDecimal, X0
	032 Return X0

Method: System.DateTime System.IConvertible.ToDateTime(System.IFormatProvider provider)

Disassembly:
	0x0337C418 LDR W8, [X0 + 0xE0]
	0x0337C41C CBNZ W8, 0x337C424
	0x0337C420 BL 0x1C16DFC
	0x0337C424 MOV W0, W19
	0x0337C428 LDP X20, X19, [X31 + 0x10]
	0x0337C42C MOV X1, X31
	0x0337C430 LDP X30, X21, [X31], #0x20
	0x0337C434 B 0x331F9A0
	0x0337C438 STP X30, X21, [X31 - 0x20]!
	0x0337C43C STP X20, X19, [X31 + 0x10]
	0x0337C440 ADRP X21, 0x1060000
	0x0337C444 ADRP X20, 0xD80000
	0x0337C448 LDRB W8, [X21 + 0xF68]
	0x0337C44C LDR X20, [X20 + 0x9E8]
	0x0337C450 MOV X19, X0
	0x0337C454 TBNZ X8, 0x0, 0x337C46C
	0x0337C458 ADRP X0, 0xD80000
	0x0337C45C LDR X0, [X0 + 0x9E8]
	0x0337C460 BL 0x1C16CF4
	0x0337C464 MOVZ W8, 0x1
	0x0337C468 STRB W8, [X21 + 0xF68]
	0x0337C46C LDR X0, [X20]
	0x0337C470 LDR W19, [X19]
	0x0337C474 LDR W8, [X0 + 0xE0]
	0x0337C478 CBNZ W8, 0x337C480
	0x0337C47C BL 0x1C16DFC
	0x0337C480 MOV W0, W19
	0x0337C484 LDP X20, X19, [X31 + 0x10]
	0x0337C488 MOV X1, X31
	0x0337C48C LDP X30, X21, [X31], #0x20
	0x0337C490 B 0x331FEE8
	0x0337C494 LDR W0, [X0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0xDAD000
	005 Move X0, [X0+48]
	006 Call 0x1C17D08
	007 Move X19, X0
	008 Move X0, 0xDAA000
	009 Move X0, [X0+184]
	010 Call 0x1C17D08
	011 Move X20, X0
	012 Move X0, 0xDAA000
	013 Move X0, [X0+152]
	014 Call 0x1C17D08
	015 Move X2, X0
	016 Move X0, X19
	017 Move X1, X20
	018 Move X3, X31
	019 Call SR.Format, X0, X1, X2
	020 Move X19, X0
	021 Move X0, 0xD80000
	022 Move X0, [X0+3080]
	023 Call 0x1C17D08
	024 Call 0x1C17F10
	025 Move X1, X19
	026 Move X20, X0
	027 Call InvalidCastException..ctor, X0, X1
	028 Move X0, 0xDAF000
	029 Move X0, [X0+3720]
	030 Call 0x1C17D08
	031 Move X1, X0
	032 Move X0, X20
	033 Call 0x1C17DEC

Method: System.Object System.IConvertible.ToType(System.Type type, System.IFormatProvider provider)

Disassembly:
	0x0337C4BC ADRP X0, 0xD80000
	0x0337C4C0 LDR X0, [X0 + 0x9E8]
	0x0337C4C4 BL 0x1C16CF4
	0x0337C4C8 MOVZ W8, 0x1
	0x0337C4CC STRB W8, [X21 + 0xF69]
	0x0337C4D0 LDR X0, [X20]
	0x0337C4D4 LDR W19, [X19]
	0x0337C4D8 LDR W8, [X0 + 0xE0]
	0x0337C4DC CBNZ W8, 0x337C4E4
	0x0337C4E0 BL 0x1C16DFC
	0x0337C4E4 MOV W0, W19
	0x0337C4E8 LDP X20, X19, [X31 + 0x10]
	0x0337C4EC MOV X1, X31
	0x0337C4F0 LDP X30, X21, [X31], #0x20
	0x0337C4F4 B 0x33208A4
	0x0337C4F8 STP X30, X21, [X31 - 0x20]!
	0x0337C4FC STP X20, X19, [X31 + 0x10]
	0x0337C500 ADRP X21, 0x1060000
	0x0337C504 ADRP X20, 0xD80000
	0x0337C508 LDRB W8, [X21 + 0xF6A]
	0x0337C50C LDR X20, [X20 + 0x9E8]
	0x0337C510 MOV X19, X0
	0x0337C514 TBNZ X8, 0x0, 0x337C52C
	0x0337C518 ADRP X0, 0xD80000
	0x0337C51C LDR X0, [X0 + 0x9E8]
	0x0337C520 BL 0x1C16CF4
	0x0337C524 MOVZ W8, 0x1
	0x0337C528 STRB W8, [X21 + 0xF6A]
	0x0337C52C LDR X0, [X20]
	0x0337C530 LDR W19, [X19]
	0x0337C534 LDR W8, [X0 + 0xE0]
	0x0337C538 CBNZ W8, 0x337C540
	0x0337C53C BL 0x1C16DFC
	0x0337C540 MOV W0, W19
	0x0337C544 LDP X20, X19, [X31 + 0x10]
	0x0337C548 MOV X1, X31
	0x0337C54C LDP X30, X21, [X31], #0x20
	0x0337C550 B 0x3320D48
	0x0337C554 STP X30, X21, [X31 - 0x20]!
	0x0337C558 STP X20, X19, [X31 + 0x10]
	0x0337C55C ADRP X21, 0x1060000
	0x0337C560 ADRP X20, 0xD80000
	0x0337C564 LDRB W8, [X21 + 0xF6B]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x1061000
	009 Move X23, 0xD7C000
	010 Move X22, 0xD81000
	011 Move W8, [X24+3922]
	012 Move X23, [X23+1576]
	013 Move X22, [X22+2536]
	014 Move X19, X2
	015 Move X20, X1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xD81000
	022 Move X0, [X0+2536]
	023 Call 0x1C17CF4
	024 Move X0, 0xD7C000
	025 Move X0, [X0+1576]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X24+3922], W8
	029 NotImplemented "Instruction LDRH not yet implemented."
	030 Move X0, [X23]
	031 Add X1, X31, 12
	032 NotImplemented "Instruction STRH not yet implemented."
	033 Call 0x1C17E04
	034 Move X8, [X22]
	035 Move X21, X0
	036 Move W9, [X8+224]
	037 Compare W9, 0
	038 JumpIfNotEqual {41}
	039 Move X0, X8
	040 Call 0x1C17DFC
	041 Move X0, X21
	042 Move X1, X20
	043 Move X2, X19
	044 Move X3, X31
	045 Call Convert.DefaultToType, X0, X1, X2
	046 Move X20, [X31+48]
	047 Move X19, [X31+56]
	048 Move X22, [X31+32]
	049 Move X21, [X31+40]
	050 Move X24, [X31+16]
	051 Move X23, [X31+24]
	052 Move X30, [X31+64]
	053 Return X0

