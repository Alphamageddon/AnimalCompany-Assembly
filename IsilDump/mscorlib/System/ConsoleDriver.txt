Type: System.ConsoleDriver

Method: System.Void .cctor()

Disassembly:
	0x033C4D5C LDR X8, [X0]
	0x033C4D60 LDP X9, X1, [X8 + 0x1D8]
	0x033C4D64 BLR X9
	0x033C4D68 LDR W8, [X25 + 0x18]
	0x033C4D6C CMP W28, W8
	0x033C4D70 B.CS 0x33C4DBC
	0x033C4D74 MOV X27, X0
	0x033C4D78 LDR X0, [X24, X28, LSL #3]
	0x033C4D7C CBZ X0, 0x33C4EEC
	0x033C4D80 LDR X8, [X0]
	0x033C4D84 LDP X9, X1, [X8 + 0x1D8]
	0x033C4D88 BLR X9
	0x033C4D8C MOV X1, X0
	0x033C4D90 MOV X0, X27
	0x033C4D94 BL 0x33C4288
	0x033C4D98 LDR W8, [X25 + 0x18]
	0x033C4D9C ADD W9, W28, 0x1
	0x033C4DA0 AND W26, W26, W0, 0x0
	0x033C4DA4 CMP W9, W8
	0x033C4DA8 B.GE 0x33C4DC0
	0x033C4DAC LDR W8, [X23 + 0x18]
	0x033C4DB0 ADD X28, X28, 0x1
	0x033C4DB4 CMP W28, W8
	0x033C4DB8 B.CC 0x33C4D54
	0x033C4DBC BL 0x1C16F28
	0x033C4DC0 LDR W28, [X31 + 0xC]
	0x033C4DC4 LDR X24, [X31]
	0x033C4DC8 TBNZ X26, 0x0, 0x33C4EC0
	0x033C4DCC TBNZ X28, 0x0, 0x33C4F8C
	0x033C4DD0 MOV X0, X31
	0x033C4DD4 LDP X20, X19, [X31 + 0x60]
	0x033C4DD8 LDP X22, X21, [X31 + 0x50]
	0x033C4DDC LDP X24, X23, [X31 + 0x40]
	0x033C4DE0 LDP X26, X25, [X31 + 0x30]
	0x033C4DE4 LDP X28, X27, [X31 + 0x20]
	0x033C4DE8 LDP X29, X30, [X31 + 0x10]
	0x033C4DEC ADD X31, X31, 0x70
	0x033C4DF0 RET
	0x033C4DF4 LDR W8, [X25 + 0x18]
	0x033C4DF8 CBZ W8, 0x33C4DBC
	0x033C4DFC LDR X0, [X25 + 0x20]
	0x033C4E00 CBZ X0, 0x33C4EEC
	0x033C4E04 LDR X8, [X0]
	0x033C4E08 LDP X9, X1, [X8 + 0x1D8]
	0x033C4E0C BLR X9
	0x033C4E10 CBZ X0, 0x33C4EEC
	0x033C4E14 MOV X1, X31
	0x033C4E18 BL 0x3396C08
	0x033C4E1C ORN W8, W31, W0, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x101A000
	005 Move W8, [X19+604]
	006 Move TEMP, X8
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfEqual {21}
	010 Move X0, 0xD64000
	011 Move X0, [X0+1976]
	012 Call 0x1C17CF4
	013 Move X0, 0xD69000
	014 Move X0, [X0+1944]
	015 Call 0x1C17CF4
	016 Move X0, 0xD69000
	017 Move X0, [X0+1952]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X19+604], W8
	021 Move X20, 0xD64000
	022 Move X20, [X20+1976]
	023 Call ConsoleDriver.get_IsConsole
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {48}
	028 Call 0x1C88BC4
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Call ConsoleDriver.CreateWindowsConsoleDriver
	031 Move X8, 0xD69000
	032 Move X8, [X8+1944]
	033 Move X0, [X8]
	034 Call Environment.internalGetEnvironmentVariable, X0
	035 Move X8, 0xD69000
	036 Move X8, [X8+1952]
	037 Move X2, X31
	038 Move X19, X0
	039 Move X1, [X8]
	040 Call String.op_Equality, X0, X1
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {56}
	045 Move X8, [X20]
	046 Move X8, [X8+184]
	047 Move [X8+8], W31
	048 Call ConsoleDriver.CreateNullConsoleDriver
	049 Move X8, [X20]
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X8, [X8+184]
	053 Move [X8], X0
	054 Move X30, [X31+32]
	055 Return 
	056 Move X0, X19
	057 Call ConsoleDriver.CreateTermInfoDriver, X0

Method: System.IConsoleDriver CreateNullConsoleDriver()

Disassembly:
	0x033C4E20 AND W9, W8, 0x1
	0x033C4E24 LDR W8, [X23 + 0x18]
	0x033C4E28 MOV W20, W28
	0x033C4E2C AND W27, W26, W9, 0x0
	0x033C4E30 CMP W8, 0x1
	0x033C4E34 B.LT 0x33C4EAC
	0x033C4E38 MOV X28, X31
	0x033C4E3C ADD X29, X23, 0x20
	0x033C4E40 CMP W28, W8
	0x033C4E44 B.CS 0x33C4DBC
	0x033C4E48 LDR X0, [X29, X28, LSL #3]
	0x033C4E4C CBZ X0, 0x33C4EEC
	0x033C4E50 LDR X8, [X0]
	0x033C4E54 LDP X9, X1, [X8 + 0x1D8]
	0x033C4E58 BLR X9
	0x033C4E5C LDR W9, [X25 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x101A000
	005 Move X20, 0xD69000
	006 Move W8, [X19+605]
	007 Move X20, [X20+1960]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xD69000
	013 Move X0, [X0+1960]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+605], W8
	017 Move X0, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Call 0x1C17F10
	022 Return X0

Method: System.IConsoleDriver CreateWindowsConsoleDriver()

Disassembly:
	0x033C4E60 ADD X8, X28, 0x1
	0x033C4E64 CMP W8, W9
	0x033C4E68 B.CS 0x33C4DBC
	0x033C4E6C ADD X8, X25, W8, 0x3, SXTW
	0x033C4E70 MOV X26, X0
	0x033C4E74 LDR X0, [X8 + 0x20]
	0x033C4E78 CBZ X0, 0x33C4EEC
	0x033C4E7C LDR X8, [X0]
	0x033C4E80 LDP X9, X1, [X8 + 0x1D8]
	0x033C4E84 BLR X9
	0x033C4E88 MOV X1, X0
	0x033C4E8C MOV X0, X26
	0x033C4E90 BL 0x33C4288
	0x033C4E94 LDR W8, [X23 + 0x18]
	0x033C4E98 AND W9, W0, W27, 0x0
	0x033C4E9C ADD X28, X28, 0x1
	0x033C4EA0 AND W27, W9, 0x1
	0x033C4EA4 CMP W28, W8
	0x033C4EA8 B.LT 0x33C4E40
	0x033C4EAC CBZ X24, 0x33C4EEC
	0x033C4EB0 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x101A000
	005 Move X20, 0xD69000
	006 Move W8, [X19+606]
	007 Move X20, [X20+1968]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xD69000
	013 Move X0, [X0+1968]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+606], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call WindowsConsoleDriver..ctor, X0
	022 Move X0, X19
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Return X0

Method: System.IConsoleDriver CreateTermInfoDriver(System.String term)

Disassembly:
	0x033C4EB4 MOV W28, W20
	0x033C4EB8 STRB W8, [X24 + 0x20]
	0x033C4EBC CBZ W27, 0x33C4DCC
	0x033C4EC0 AND W3, W28, 0x1
	0x033C4EC4 MOV X0, X22
	0x033C4EC8 MOV X1, X21
	0x033C4ECC MOV X2, X19
	0x033C4ED0 BL 0x1C877B4
	0x033C4ED4 CBZ X0, 0x33C4EE8
	0x033C4ED8 STR X19, [X0 + 0x60]
	0x033C4EDC CBZ X24, 0x33C4DD4
	0x033C4EE0 STR X24, [X0 + 0x68]
	0x033C4EE4 B 0x33C4DD4
	0x033C4EE8 CBZ X24, 0x33C4DD4
	0x033C4EEC BL 0x1C16F20
	0x033C4EF0 ADRP X0, 0xD34000
	0x033C4EF4 LDR X0, [X0 + 0x528]
	0x033C4EF8 BL 0x1C16D08
	0x033C4EFC BL 0x1C16F10
	0x033C4F00 MOV X19, X0
	0x033C4F04 ADRP X0, 0xD37000
	0x033C4F08 LDR X0, [X0 + 0x5E8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x101A000
	006 Move X21, 0xD64000
	007 Move W8, [X20+607]
	008 Move X21, [X21+1984]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD64000
	015 Move X0, [X0+1984]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+607], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X19
	022 Move X20, X0
	023 Call TermInfoDriver..ctor, X0, X1
	024 Move X0, X20
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return X0

Method: System.Void set_ForegroundColor(System.ConsoleColor value)

Disassembly:
	0x033C4518 LDR X2, [X8 + 0x2B0]
	0x033C451C LDP X22, X21, [X31 + 0x10]
	0x033C4520 LDR X30, [X31], #0x30
	0x033C4524 BR X3
	0x033C4528 TBZ X21, 0x0, 0x33C4560
	0x033C452C ADRP X8, 0xD2F000
	0x033C4530 LDR X8, [X8 + 0x6C0]
	0x033C4534 LDR X0, [X8]
	0x033C4538 LDR W8, [X0 + 0xE0]
	0x033C453C CBNZ W8, 0x33C4544
	0x033C4540 BL 0x1C16DFC
	0x033C4544 MOV X0, X20
	0x033C4548 MOV X1, X19
	0x033C454C LDP X20, X19, [X31 + 0x20]
	0x033C4550 LDP X22, X21, [X31 + 0x10]
	0x033C4554 MOV X2, X31
	0x033C4558 LDR X30, [X31], #0x30
	0x033C455C B 0x3395194
	0x033C4560 MOV W0, W31
	0x033C4564 LDP X20, X19, [X31 + 0x20]
	0x033C4568 LDP X22, X21, [X31 + 0x10]
	0x033C456C AND W0, W0, 0x1
	0x033C4570 LDR X30, [X31], #0x30
	0x033C4574 RET
	0x033C4578 BL 0x1C16F20
	0x033C457C STP X30, X23, [X31 - 0x30]!
	0x033C4580 STP X22, X21, [X31 + 0x10]
	0x033C4584 STP X20, X19, [X31 + 0x20]
	0x033C4588 ADRP X21, 0x1019000
	0x033C458C ADRP X23, 0xD2F000
	0x033C4590 LDRB W8, [X21 + 0x266]
	0x033C4594 LDR X23, [X23 + 0x6C0]
	0x033C4598 MOV X20, X1
	0x033C459C MOV X19, X0
	0x033C45A0 TBNZ X8, 0x0, 0x33C45C4
	0x033C45A4 ADRP X0, 0xD2F000
	0x033C45A8 LDR X0, [X0 + 0xDF8]
	0x033C45AC BL 0x1C16CF4
	0x033C45B0 ADRP X0, 0xD2F000
	0x033C45B4 LDR X0, [X0 + 0x6C0]
	0x033C45B8 BL 0x1C16CF4
	0x033C45BC MOVZ W8, 0x1
	0x033C45C0 STRB W8, [X21 + 0x266]
	0x033C45C4 LDR X0, [X23]
	0x033C45C8 LDR W8, [X0 + 0xE0]
	0x033C45CC CBNZ W8, 0x33C45D4
	0x033C45D0 BL 0x1C16DFC
	0x033C45D4 MOV X0, X20
	0x033C45D8 MOV X1, X19
	0x033C45DC MOV X2, X31
	0x033C45E0 BL 0x3395194
	0x033C45E4 TBZ X0, 0x0, 0x33C4600
	0x033C45E8 MOVZ W0, 0x1
	0x033C45EC LDP X20, X19, [X31 + 0x20]
	0x033C45F0 LDP X22, X21, [X31 + 0x10]
	0x033C45F4 AND W0, W0, 0x1
	0x033C45F8 LDP X30, X23, [X31], #0x30
	0x033C45FC RET
	0x033C4600 CBZ X20, 0x33C4790
	0x033C4604 MOV X0, X20
	0x033C4608 MOV X1, X31
	0x033C460C BL 0x33970C4
	0x033C4610 TBZ X0, 0x0, 0x33C461C
	0x033C4614 CBNZ X19, 0x33C463C
	0x033C4618 B 0x33C4790
	0x033C461C CBZ X19, 0x33C4790
	0x033C4620 LDR X8, [X19]
	0x033C4624 MOV X0, X19
	0x033C4628 MOV X1, X20
	0x033C462C LDR X9, [X8 + 0x2A8]
	0x033C4630 LDR X2, [X8 + 0x2B0]
	0x033C4634 BLR X9
	0x033C4638 TBNZ X0, 0x0, 0x33C45E8
	0x033C463C LDR X8, [X19]
	0x033C4640 MOV X0, X19
	0x033C4644 LDR X9, [X8 + 0x588]
	0x033C4648 LDR X1, [X8 + 0x590]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x101A000
	005 Move W8, [X20+608]
	006 Move W19, W0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xD64000
	012 Move X0, [X0+1976]
	013 Call 0x1C17CF4
	014 Move X0, 0xD69000
	015 Move X0, [X0+1888]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+608], W8
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X20, 0xD64000
	021 Move X20, [X20+1976]
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X20]
	028 Move X8, [X0+184]
	029 Move X20, [X8]
	030 Compare X20, 0
	031 JumpIfEqual {82}
	032 Move X10, 0xD69000
	033 Move X8, [X20]
	034 Move X10, [X10+1888]
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 Move X1, [X10]
	037 Compare X9, 0
	038 JumpIfEqual {45}
	039 Move X10, [X8+176]
	040 Add X10, X10, 8
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Subtract X9, X9, 1
	044 Add X10, X10, 16
	045 Move X0, X20
	046 Move W2, W31
	047 Call 0x1C5D788
	048 NotImplemented "Instruction LDRSW not yet implemented."
	049 Add X8, X8, X9
	050 Add X0, X8, 312
	051 Move X3, [X0]
	052 Move X2, [X0+8]
	053 Move X0, X20
	054 Move W1, W19
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move X30, [X31+32]
	058 CallNoReturn X3
	059 Move X0, 0xD38000
	060 Move X0, [X0+1888]
	061 Call 0x1C17D08
	062 Call 0x1C17F10
	063 Move X19, X0
	064 Move X0, 0xD3A000
	065 Move X0, [X0+3784]
	066 Call 0x1C17D08
	067 Move X20, X0
	068 Move X0, 0xD69000
	069 Move X0, [X0+1896]
	070 Call 0x1C17D08
	071 Move X2, X0
	072 Move X0, X19
	073 Move X1, X20
	074 Move X3, X31
	075 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	076 Move X0, 0xD69000
	077 Move X0, [X0+1904]
	078 Call 0x1C17D08
	079 Move X1, X0
	080 Move X0, X19
	081 Call 0x1C17DEC
	082 Call 0x1C17F20

Method: System.ConsoleKeyInfo ReadKey(System.Boolean intercept)

Disassembly:
	0x033C4700 CBNZ W9, 0x33C470C
	0x033C4704 MOV X0, X8
	0x033C4708 BL 0x1C16DFC
	0x033C470C MOV X0, X22
	0x033C4710 MOV X1, X20
	0x033C4714 MOV X2, X31
	0x033C4718 BL 0x3395194
	0x033C471C TBNZ X0, 0x0, 0x33C45EC
	0x033C4720 EOR W8, W21, 0x1
	0x033C4724 TBZ X8, 0x0, 0x33C4730
	0x033C4728 B 0x33C45EC
	0x033C472C TBZ X21, 0x0, 0x33C4788
	0x033C4730 ADRP X8, 0xD2F000
	0x033C4734 LDR X8, [X8 + 0xDF8]
	0x033C4738 LDR X0, [X8]
	0x033C473C LDR W8, [X0 + 0xE0]
	0x033C4740 CBNZ W8, 0x33C4748
	0x033C4744 BL 0x1C16DFC
	0x033C4748 MOV X0, X20
	0x033C474C MOV X1, X31
	0x033C4750 BL 0x33AFB1C
	0x033C4754 LDR X8, [X23]
	0x033C4758 MOV X20, X0
	0x033C475C LDR W9, [X8 + 0xE0]
	0x033C4760 CBNZ W9, 0x33C476C
	0x033C4764 MOV X0, X8
	0x033C4768 BL 0x1C16DFC
	0x033C476C MOV X0, X20
	0x033C4770 MOV X1, X19
	0x033C4774 LDP X20, X19, [X31 + 0x20]
	0x033C4778 LDP X22, X21, [X31 + 0x10]
	0x033C477C MOV X2, X31
	0x033C4780 LDP X30, X23, [X31], #0x30
	0x033C4784 B 0x3395194
	0x033C4788 MOV W0, W31
	0x033C478C B 0x33C45EC
	0x033C4790 BL 0x1C16F20
	0x033C4794 SUB X31, X31, 0x70
	0x033C4798 STP X29, X30, [X31 + 0x10]
	0x033C479C STP X28, X27, [X31 + 0x20]
	0x033C47A0 STP X26, X25, [X31 + 0x30]
	0x033C47A4 STP X24, X23, [X31 + 0x40]
	0x033C47A8 STP X22, X21, [X31 + 0x50]
	0x033C47AC STP X20, X19, [X31 + 0x60]
	0x033C47B0 ADRP X20, 0x1019000
	0x033C47B4 ADRP X23, 0xD2F000
	0x033C47B8 LDRB W8, [X20 + 0x267]
	0x033C47BC LDR X23, [X23 + 0x6C0]
	0x033C47C0 MOV W26, W4
	0x033C47C4 MOV W28, W3
	0x033C47C8 MOV X19, X2
	0x033C47CC MOV X21, X1
	0x033C47D0 MOV X22, X0
	0x033C47D4 TBNZ X8, 0x0, 0x33C4810
	0x033C47D8 ADRP X0, 0xD68000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x101A000
	006 Move X20, 0xD64000
	007 Move W8, [X21+609]
	008 Move X20, [X20+1976]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xD64000
	015 Move X0, [X0+1976]
	016 Call 0x1C17CF4
	017 Move X0, 0xD69000
	018 Move X0, [X0+1888]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+609], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X20]
	028 Move X8, [X0+184]
	029 Move X20, [X8]
	030 Compare X20, 0
	031 JumpIfEqual {63}
	032 Move X10, 0xD69000
	033 Move X8, [X20]
	034 Move X10, [X10+1888]
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 Move X1, [X10]
	037 Compare X9, 0
	038 JumpIfEqual {45}
	039 Move X10, [X8+176]
	040 Add X10, X10, 8
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Subtract X9, X9, 1
	044 Add X10, X10, 16
	045 Move W2, 1
	046 Move X0, X20
	047 Call 0x1C5D788
	048 Move W9, [X10]
	049 Add W9, W9, 1
	050 Add X8, X8, W9
	051 Add X0, X8, 312
	052 Move X8, [X0]
	053 Move X2, [X0+8]
	054 And W1, W19, 1
	055 Move X0, X20
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Move X20, [X31+16]
	058 Move X19, [X31+24]
	059 And X1, X1, 0
	060 Move X30, [X31+32]
	061 Move X21, [X31+40]
	062 Return X0
	063 Call 0x1C17F20

Method: System.Void ResetColor()

Disassembly:
	0x033C4828 MOV X2, X31
	0x033C482C BL 0x3395194
	0x033C4830 TBNZ X0, 0x0, 0x33C4EF0
	0x033C4834 MOV X0, X19
	0x033C4838 MOV X1, X31
	0x033C483C MOV X2, X31
	0x033C4840 BL 0x32C2354
	0x033C4844 TBNZ X0, 0x0, 0x33C4F10
	0x033C4848 ADRP X8, 0xD61000
	0x033C484C LDR X0, [X23]
	0x033C4850 LDR X8, [X8 + 0x708]
	0x033C4854 LDR W9, [X0 + 0xE0]
	0x033C4858 LDR X23, [X8]
	0x033C485C CBNZ W9, 0x33C4864
	0x033C4860 BL 0x1C16DFC
	0x033C4864 MOV X0, X23
	0x033C4868 MOV X1, X31
	0x033C486C BL 0x338C698
	0x033C4870 CBZ X22, 0x33C4EEC
	0x033C4874 LDR X8, [X22]
	0x033C4878 MOV X1, X0
	0x033C487C MOV X0, X22
	0x033C4880 LDR X9, [X8 + 0x298]
	0x033C4884 LDR X2, [X8 + 0x2A0]
	0x033C4888 BLR X9
	0x033C488C TBZ X0, 0x0, 0x33C4F44
	0x033C4890 ADRP X8, 0xD68000
	0x033C4894 LDR X8, [X8 + 0x7D8]
	0x033C4898 MOV X0, X22
	0x033C489C MOV X2, X31
	0x033C48A0 LDR X1, [X8]
	0x033C48A4 BL 0x33975F8
	0x033C48A8 CBZ X0, 0x33C4EEC
	0x033C48AC LDR X8, [X0]
	0x033C48B0 MOV X23, X0
	0x033C48B4 LDR X9, [X8 + 0x3B8]
	0x033C48B8 LDR X1, [X8 + 0x3C0]
	0x033C48BC BLR X9
	0x033C48C0 CBZ X19, 0x33C4EEC
	0x033C48C4 LDR X8, [X19]
	0x033C48C8 MOV X24, X0
	0x033C48CC MOV X0, X19
	0x033C48D0 LDR X9, [X8 + 0x3B8]
	0x033C48D4 LDR X1, [X8 + 0x3C0]
	0x033C48D8 BLR X9
	0x033C48DC MOV X1, X0
	0x033C48E0 MOV X0, X24
	0x033C48E4 BL 0x33C457C
	0x033C48E8 TBZ X0, 0x0, 0x33C4944
	0x033C48EC LDR X8, [X23]
	0x033C48F0 MOV X0, X23

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x101A000
	005 Move X19, 0xD64000
	006 Move W8, [X20+610]
	007 Move X19, [X19+1976]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0xD64000
	013 Move X0, [X0+1976]
	014 Call 0x1C17CF4
	015 Move X0, 0xD69000
	016 Move X0, [X0+1888]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+610], W8
	020 Move X0, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {26}
	024 Call 0x1C17DFC
	025 Move X0, [X19]
	026 Move X8, [X0+184]
	027 Move X19, [X8]
	028 Compare X19, 0
	029 JumpIfEqual {57}
	030 Move X10, 0xD69000
	031 Move X8, [X19]
	032 Move X10, [X10+1888]
	033 NotImplemented "Instruction LDRH not yet implemented."
	034 Move X1, [X10]
	035 Compare X9, 0
	036 JumpIfEqual {43}
	037 Move X10, [X8+176]
	038 Add X10, X10, 8
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Subtract X9, X9, 1
	042 Add X10, X10, 16
	043 Move W2, 2
	044 Move X0, X19
	045 Call 0x1C5D788
	046 Move W9, [X10]
	047 Add W9, W9, 2
	048 Add X8, X8, W9
	049 Add X0, X8, 312
	050 Move X2, [X0]
	051 Move X1, [X0+8]
	052 Move X0, X19
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X30, [X31+32]
	056 CallNoReturn X2
	057 Call 0x1C17F20

Method: System.Boolean get_IsConsole()

Disassembly:
	0x033C3B9C STR D0, [X31 + 0x20]
	0x033C3BA0 STRB W13, [X31 + 0x2C]
	0x033C3BA4 BL 0x1C1729C
	0x033C3BA8 MOV X8, X0
	0x033C3BAC STR X0, [X19 + 0x250]
	0x033C3BB0 BLR X8
	0x033C3BB4 LDP X30, X19, [X31 + 0x30]
	0x033C3BB8 ADD X31, X31, 0x40
	0x033C3BBC RET
	0x033C3BC0 STR X30, [X31 - 0x20]!
	0x033C3BC4 STP X20, X19, [X31 + 0x10]
	0x033C3BC8 ADRP X20, 0x101A000
	0x033C3BCC LDRB W8, [X20 + 0x258]
	0x033C3BD0 MOV W19, W0
	0x033C3BD4 TBNZ X8, 0x0, 0x33C3BEC
	0x033C3BD8 ADRP X0, 0xD38000
	0x033C3BDC LDR X0, [X0 + 0x958]
	0x033C3BE0 BL 0x1C16CF4
	0x033C3BE4 MOVZ W8, 0x1
	0x033C3BE8 STRB W8, [X20 + 0x258]
	0x033C3BEC CBNZ W19, 0x33C3C0C
	0x033C3BF0 ADRP X8, 0xD38000
	0x033C3BF4 LDR X8, [X8 + 0x958]
	0x033C3BF8 LDR X0, [X8]
	0x033C3BFC LDR W8, [X0 + 0xE0]
	0x033C3C00 CBNZ W8, 0x33C3C08
	0x033C3C04 BL 0x1C16DFC
	0x033C3C08 BL 0x33C38F4
	0x033C3C0C CMP W19, 0x0
	0x033C3C10 LDP X20, X19, [X31 + 0x10]
	0x033C3C14 CSET W0, EQ
	0x033C3C18 LDR X30, [X31], #0x20
	0x033C3C1C RET
	0x033C3C20 STR X30, [X31 - 0x30]!
	0x033C3C24 STP X22, X21, [X31 + 0x10]
	0x033C3C28 STP X20, X19, [X31 + 0x20]
	0x033C3C2C ADRP X22, 0x101A000
	0x033C3C30 ADRP X20, 0xD69000
	0x033C3C34 ADRP X21, 0xD69000
	0x033C3C38 ADRP X19, 0xD69000
	0x033C3C3C LDRB W8, [X22 + 0x25B]
	0x033C3C40 LDR X20, [X20 + 0x718]
	0x033C3C44 LDR X21, [X21 + 0x788]
	0x033C3C48 LDR X19, [X19 + 0x790]
	0x033C3C4C TBNZ X8, 0x0, 0x33C3C7C
	0x033C3C50 ADRP X0, 0xD69000
	0x033C3C54 LDR X0, [X0 + 0x788]
	0x033C3C58 BL 0x1C16CF4
	0x033C3C5C ADRP X0, 0xD69000
	0x033C3C60 LDR X0, [X0 + 0x790]
	0x033C3C64 BL 0x1C16CF4
	0x033C3C68 ADRP X0, 0xD69000
	0x033C3C6C LDR X0, [X0 + 0x718]
	0x033C3C70 BL 0x1C16CF4
	0x033C3C74 MOVZ W8, 0x1
	0x033C3C78 STRB W8, [X22 + 0x25B]
	0x033C3C7C LDR X8, [X20]
	0x033C3C80 LDR X8, [X8 + 0xB8]
	0x033C3C84 STRB W31, [X8]
	0x033C3C88 LDR X0, [X21]
	0x033C3C8C BL 0x1C16F10
	0x033C3C90 LDR X2, [X19]
	0x033C3C94 MOV X1, X31
	0x033C3C98 MOV X19, X0
	0x033C3C9C BL 0x33C3CBC
	0x033C3CA0 LDR X8, [X20]
	0x033C3CA4 LDP X22, X21, [X31 + 0x10]
	0x033C3CA8 LDR X8, [X8 + 0xB8]
	0x033C3CAC STR X19, [X8 + 0x8]
	0x033C3CB0 LDP X20, X19, [X31 + 0x20]
	0x033C3CB4 LDR X30, [X31], #0x30
	0x033C3CB8 RET
	0x033C3CBC STP X30, X21, [X31 - 0x20]!
	0x033C3CC0 STP X20, X19, [X31 + 0x10]
	0x033C3CC4 LDR X8, [X2 + 0x8]
	0x033C3CC8 STP X1, X2, [X0 + 0x20]
	0x033C3CCC MOV X19, X0
	0x033C3CD0 MOV X20, X1
	0x033C3CD4 STR X8, [X0 + 0x10]
	0x033C3CD8 LDRB W21, [X2 + 0x52]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x101B000
	006 Move X20, 0xD65000
	007 Move W8, [X19+611]
	008 Move X20, [X20+1976]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xD65000
	014 Move X0, [X0+1976]
	015 Call 0x1C17CF4
	016 Move X0, 0xD5F000
	017 Move X0, [X0+4008]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X19+611], W8
	021 Move X0, [X20]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {27}
	025 Call 0x1C17DFC
	026 Move X0, [X20]
	027 Move X8, [X0+184]
	028 Move W9, [X8+9]
	029 Compare W9, 0
	030 JumpIfEqual {40}
	031 Move W9, [X0+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {37}
	034 Call 0x1C17DFC
	035 Move X8, [X20]
	036 Move X8, [X8+184]
	037 Move W8, [X8+8]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CSET not yet implemented."
	040 Move X21, 0xD5F000
	041 Move X21, [X21+4008]
	042 Move X0, [X21]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X0, X31
	048 Call MonoIO.get_ConsoleOutput
	049 Move X8, [X20]
	050 Move X19, X0
	051 Move W9, [X8+224]
	052 Compare W9, 0
	053 JumpIfNotEqual {56}
	054 Move X0, X8
	055 Call 0x1C17DFC
	056 Move X0, X19
	057 Call 0x1C885C0
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {79}
	062 Move X0, [X21]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Move X0, X31
	068 Call MonoIO.get_ConsoleInput
	069 Move X8, [X20]
	070 Move X19, X0
	071 Move W9, [X8+224]
	072 Compare W9, 0
	073 JumpIfNotEqual {76}
	074 Move X0, X8
	075 Call 0x1C17DFC
	076 Move X0, X19
	077 Call 0x1C885C0
	078 Move W19, W0
	079 Move W19, W31
	080 Move X0, [X20]
	081 Move W8, [X0+224]
	082 Compare W8, 0
	083 JumpIfNotEqual {86}
	084 Call 0x1C17DFC
	085 Move X0, [X20]
	086 Move X8, [X0+184]
	087 And W9, W19, 1
	088 Move W10, 1
	089 Move [X8+8], W9
	090 Move [X8+9], W10
	091 And W0, W19, 1
	092 Move X20, [X31+16]
	093 Move X19, [X31+24]
	094 Move X30, [X31+32]
	095 Move X21, [X31+40]
	096 Return X0

Method: System.Boolean Isatty(System.IntPtr handle)

Disassembly:
	0x033C5250 BL 0x1C5C684

ISIL:
	001 Call 0x1C885C0
	002 Return X0

Method: System.Int32 InternalKeyAvailable(System.Int32 ms_timeout)

Disassembly:
	0x033C5254 CBZ X21, 0x33C5334

ISIL:
	001 Call 0x1C88668
	002 Return X0

Method: System.Boolean TtySetup(System.String keypadXmit, System.String teardown, out System.Byte[] control_characters, out System.Int32* address)

Disassembly:
	0x033C5258 LDR X8, [X0 + 0xB8]

ISIL:
	001 Call 0x1C8866C
	002 Return X0

Method: System.Boolean SetEcho(System.Boolean wantEcho)

Disassembly:
	0x033C525C MOV X0, X21
	0x033C5260 MOV X1, X19

ISIL:
	001 And W0, W0, 1
	002 Call 0x1C887AC
	003 Return X0

