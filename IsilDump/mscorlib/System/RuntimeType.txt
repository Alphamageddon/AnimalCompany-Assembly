Type: System.RuntimeType

Method: System.RuntimeType GetType(System.String typeName, System.Boolean throwOnError, System.Boolean ignoreCase, System.Boolean reflectionOnly, ref System.Threading.StackCrawlMark stackMark)

Disassembly:
	0x033B502C RET
	0x033B5030 BL 0x1C16F28
	0x033B5034 BL 0x1C16F20
	0x033B5038 SUB X31, X31, 0x60
	0x033B503C STR X30, [X31 + 0x20]
	0x033B5040 STP X24, X23, [X31 + 0x30]
	0x033B5044 STP X22, X21, [X31 + 0x40]
	0x033B5048 STP X20, X19, [X31 + 0x50]
	0x033B504C ADRP X24, 0x1028000
	0x033B5050 LDRB W8, [X24 + 0x1F9]
	0x033B5054 MOV X23, X4
	0x033B5058 MOV W19, W3
	0x033B505C MOV W20, W2
	0x033B5060 MOV X22, X1
	0x033B5064 MOV X21, X0
	0x033B5068 TBNZ X8, 0x0, 0x33B508C
	0x033B506C ADRP X0, 0xD77000
	0x033B5070 LDR X0, [X0 + 0x80]
	0x033B5074 BL 0x1C16CF4
	0x033B5078 ADRP X0, 0xD6F000
	0x033B507C LDR X0, [X0 + 0x9A0]
	0x033B5080 BL 0x1C16CF4
	0x033B5084 MOVZ W8, 0x1
	0x033B5088 STRB W8, [X24 + 0x1F9]
	0x033B508C ADD X0, X31, 0x28
	0x033B5090 MOV X1, X23

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {10}
	003 And W1, W1, 1
	004 And W2, W2, 1
	005 And W3, W3, 1
	006 Move W5, W31
	007 Move X6, X31
	008 Call RuntimeTypeHandle.GetTypeByName, X0, X1, X2, X3, X4, X5
	009 Return X0
	010 Move [X31-16], X30
	011 Move [X31-8], X19
	012 Move X0, 0xD44000
	013 Move X0, [X0+1320]
	014 Call 0x1C17D08
	015 Call 0x1C17F10
	016 Move X19, X0
	017 Move X0, 0xD71000
	018 Move X0, [X0+2416]
	019 Call 0x1C17D08
	020 Move X1, X0
	021 Move X0, X19
	022 Move X2, X31
	023 Call ArgumentNullException..ctor, X0, X1
	024 Move X0, 0xD78000
	025 Move X0, [X0+64]
	026 Call 0x1C17D08
	027 Move X1, X0
	028 Move X0, X19
	029 Call 0x1C17DEC

Method: System.Void ThrowIfTypeNeverValidGenericArgument(System.RuntimeType type)

Disassembly:
	0x033B5094 MOV X2, X31
	0x033B5098 STR X31, [X31 + 0x28]
	0x033B509C STP X31, X31, [X31 + 0x10]
	0x033B50A0 STR X31, [X31 + 0x8]
	0x033B50A4 BL 0x33CBEF0
	0x033B50A8 ADD X0, X31, 0x10
	0x033B50AC MOV X1, X22
	0x033B50B0 MOV X2, X31
	0x033B50B4 BL 0x320B030
	0x033B50B8 ADD X0, X31, 0x10
	0x033B50BC MOV X1, X31
	0x033B50C0 BL 0x320B21C
	0x033B50C4 MOV X1, X0
	0x033B50C8 MOV X0, X21
	0x033B50CC MOV W2, W20
	0x033B50D0 MOV W3, W19
	0x033B50D4 BL 0x1C3B734
	0x033B50D8 MOV X1, X0
	0x033B50DC ADD X0, X31, 0x8
	0x033B50E0 MOV X2, X31
	0x033B50E4 BL 0x320B1A0
	0x033B50E8 ADD X0, X31, 0x8
	0x033B50EC MOV X1, X31
	0x033B50F0 BL 0x320B1DC
	0x033B50F4 ADRP X8, 0xD77000
	0x033B50F8 LDR X8, [X8 + 0x80]
	0x033B50FC MOV W21, W0
	0x033B5100 LDR X0, [X8]
	0x033B5104 MOV W1, W21
	0x033B5108 BL 0x1C16D6C
	0x033B510C MOV X19, X0
	0x033B5110 CMP W21, 0x1
	0x033B5114 B.LT 0x33B51DC
	0x033B5118 ADRP X22, 0xD6F000
	0x033B511C LDR X22, [X22 + 0x9A0]
	0x033B5120 MOV X20, X31
	0x033B5124 MOV W23, W21
	0x033B5128 ADD X24, X19, 0x20
	0x033B512C ADD X0, X31, 0x8
	0x033B5130 MOV W1, W20
	0x033B5134 MOV X2, X31
	0x033B5138 BL 0x320B1F8
	0x033B513C LDR X1, [X31 + 0x28]
	0x033B5140 MOV X2, X31
	0x033B5144 BL 0x32DAEFC
	0x033B5148 CBZ X19, 0x33B5228
	0x033B514C MOV X21, X0
	0x033B5150 CBZ X0, 0x33B51C0
	0x033B5154 LDR X8, [X21]
	0x033B5158 LDR X1, [X22]
	0x033B515C LDRB W10, [X8 + 0x130]
	0x033B5160 LDRB W9, [X1 + 0x130]
	0x033B5164 CMP W10, W9
	0x033B5168 B.CC 0x33B5220
	0x033B516C LDR X8, [X8 + 0xC8]
	0x033B5170 ADD X8, X8, X9, 0x3, LSL
	0x033B5174 LDUR X8, [X8 - 0x8]
	0x033B5178 CMP X8, X1
	0x033B517C B.NE 0x33B5220
	0x033B5180 LDR X8, [X19]
	0x033B5184 LDR X1, [X8 + 0x40]
	0x033B5188 MOV X0, X21
	0x033B518C BL 0x1C16E00
	0x033B5190 CBZ X0, 0x33B5230
	0x033B5194 LDR X8, [X21]
	0x033B5198 LDR X1, [X22]
	0x033B519C LDRB W10, [X8 + 0x130]
	0x033B51A0 LDRB W9, [X1 + 0x130]
	0x033B51A4 CMP W10, W9
	0x033B51A8 B.CC 0x33B5218
	0x033B51AC LDR X8, [X8 + 0xC8]
	0x033B51B0 ADD X8, X8, X9, 0x3, LSL
	0x033B51B4 LDUR X8, [X8 - 0x8]
	0x033B51B8 CMP X8, X1
	0x033B51BC B.NE 0x33B5218
	0x033B51C0 LDR W8, [X19 + 0x18]
	0x033B51C4 CMP X20, X8
	0x033B51C8 B.CS 0x33B522C
	0x033B51CC STR X21, [X24, X20, LSL #3]
	0x033B51D0 ADD X20, X20, 0x1
	0x033B51D4 CMP X23, X20
	0x033B51D8 B.NE 0x33B512C
	0x033B51DC MOV X22, X31
	0x033B51E0 ADD X0, X31, 0x8
	0x033B51E4 MOV X1, X31
	0x033B51E8 BL 0x320B1C0
	0x033B51EC CBNZ X22, 0x33B523C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1029000
	005 Move W8, [X20+446]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xD3F000
	012 Move X0, [X0+1728]
	013 Call 0x1C17CF4
	014 Move X0, 0xD70000
	015 Move X0, [X0+2064]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+446], W8
	019 Compare X19, 0
	020 JumpIfEqual {104}
	021 Move X0, X19
	022 Move X1, X31
	023 Call Type.get_IsPointer, X0
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {60}
	028 Move X0, X19
	029 Move X1, X31
	030 Call Type.get_IsByRef, X0
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {60}
	035 Move X8, 0xD3F000
	036 Move X8, [X8+1728]
	037 Move X0, [X8]
	038 Move X8, 0xD70000
	039 Move X8, [X8+2064]
	040 Move W9, [X0+224]
	041 Move X20, [X8]
	042 Compare W9, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X20
	046 Move X1, X31
	047 Call Type.GetTypeFromHandle, X0
	048 Move X1, X0
	049 Move X0, X19
	050 Move X2, X31
	051 Call Type.op_Equality, X0, X1
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {60}
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X30, [X31+32]
	059 Return 
	060 Move X0, 0xD3F000
	061 Move X0, [X0+2512]
	062 Call 0x1C17D08
	063 Move W1, 1
	064 Call 0x1C17D6C
	065 Move X20, X0
	066 Move X0, X19
	067 Call 0x19913C0
	068 Move X8, [X19]
	069 Move X0, X19
	070 Move X9, [X8+360]
	071 Move X1, [X8+368]
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Move X19, X0
	074 Move X0, X20
	075 Call 0x19913C0
	076 Move X0, X20
	077 Move X1, X19
	078 Call 0x19990B4
	079 Move X0, X20
	080 Move X1, X31
	081 Move X2, X19
	082 Call 0x1994444
	083 Move X0, 0xD78000
	084 Move X0, [X0+72]
	085 Call 0x1C17D08
	086 Move X1, X20
	087 Move X2, X31
	088 Call Environment.GetResourceString, X0, X1
	089 Move X19, X0
	090 Move X0, 0xD47000
	091 Move X0, [X0+1400]
	092 Call 0x1C17D08
	093 Call 0x1C17F10
	094 Move X1, X19
	095 Move X2, X31
	096 Move X20, X0
	097 Call ArgumentException..ctor, X0, X1
	098 Move X0, 0xD78000
	099 Move X0, [X0+80]
	100 Call 0x1C17D08
	101 Move X1, X0
	102 Move X0, X20
	103 Call 0x1C17DEC
	104 Call 0x1C17F20

Method: System.Void SanityCheckGenericArguments(System.RuntimeType[] genericArguments, System.RuntimeType[] genericParamters)

Disassembly:
	0x033B51F0 ADD X0, X31, 0x10
	0x033B51F4 MOV X1, X31
	0x033B51F8 BL 0x320B264
	0x033B51FC MOV X0, X19
	0x033B5200 LDP X20, X19, [X31 + 0x50]
	0x033B5204 LDP X22, X21, [X31 + 0x40]
	0x033B5208 LDP X24, X23, [X31 + 0x30]
	0x033B520C LDR X30, [X31 + 0x20]
	0x033B5210 ADD X31, X31, 0x60
	0x033B5214 RET
	0x033B5218 MOV X0, X21
	0x033B521C BL 0x1C171E0
	0x033B5220 MOV X0, X21
	0x033B5224 BL 0x1C171E0
	0x033B5228 BL 0x1C16F20
	0x033B522C BL 0x1C16F28
	0x033B5230 BL 0x1C16F44
	0x033B5234 MOV X1, X31
	0x033B5238 BL 0x1C16DEC
	0x033B523C MOV X0, X22
	0x033B5240 BL 0x1C16F18
	0x033B5244 B 0x33B5270
	0x033B5248 B 0x33B5270
	0x033B524C B 0x33B525C
	0x033B5250 MOV X21, X1
	0x033B5254 MOV X20, X0
	0x033B5258 B 0x33B52AC
	0x033B525C MOV X21, X1
	0x033B5260 MOV X20, X0
	0x033B5264 B 0x33B52A8
	0x033B5268 B 0x33B5270
	0x033B526C B 0x33B5270
	0x033B5270 CMP W1, 0x1
	0x033B5274 B.NE 0x33B528C
	0x033B5278 BL 0x3EB1AD0
	0x033B527C LDR X22, [X0]
	0x033B5280 BL 0x3EB1AE0
	0x033B5284 MOV X19, X31
	0x033B5288 B 0x33B51E0
	0x033B528C MOV X21, X1
	0x033B5290 MOV X20, X0
	0x033B5294 MOV X22, X31
	0x033B5298 ADD X0, X31, 0x8
	0x033B529C MOV X1, X31
	0x033B52A0 BL 0x320B1C0
	0x033B52A4 CBNZ X22, 0x33B52E4
	0x033B52A8 MOV X19, X31
	0x033B52AC CMP W21, 0x1
	0x033B52B0 B.NE 0x33B52DC
	0x033B52B4 MOV X0, X20
	0x033B52B8 BL 0x3EB1AD0
	0x033B52BC LDR X21, [X0]
	0x033B52C0 BL 0x3EB1AE0
	0x033B52C4 ADD X0, X31, 0x10
	0x033B52C8 MOV X1, X31
	0x033B52CC BL 0x320B264
	0x033B52D0 CBZ X21, 0x33B51FC
	0x033B52D4 MOV X0, X21
	0x033B52D8 BL 0x1C16F18
	0x033B52DC MOV X21, X31
	0x033B52E0 B 0x33B52FC
	0x033B52E4 MOV X0, X22
	0x033B52E8 BL 0x1C16F18
	0x033B52EC MOV X21, X1
	0x033B52F0 MOV X20, X0
	0x033B52F4 B 0x33B5298
	0x033B52F8 MOV X20, X0
	0x033B52FC ADD X0, X31, 0x10
	0x033B5300 MOV X1, X31
	0x033B5304 BL 0x320B264
	0x033B5308 CBNZ X21, 0x33B5314
	0x033B530C MOV X0, X20
	0x033B5310 BL 0x1D2C690
	0x033B5314 MOV X0, X21
	0x033B5318 BL 0x1C16F18
	0x033B531C BL 0x1990590
	0x033B5320 SUB X31, X31, 0xA0
	0x033B5324 STP X29, X30, [X31 + 0x40]
	0x033B5328 STP X28, X27, [X31 + 0x50]
	0x033B532C STP X26, X25, [X31 + 0x60]
	0x033B5330 STP X24, X23, [X31 + 0x70]
	0x033B5334 STP X22, X21, [X31 + 0x80]
	0x033B5338 STP X20, X19, [X31 + 0x90]
	0x033B533C ADRP X19, 0x1028000
	0x033B5340 STR X1, [X31 + 0x38]
	0x033B5344 ADRP X26, 0xD67000
	0x033B5348 MOV X28, X8
	0x033B534C LDRB W8, [X19 + 0x1C9]
	0x033B5350 LDR X26, [X26 + 0x4E8]
	0x033B5354 MOV W23, W5
	0x033B5358 MOV X20, X4
	0x033B535C MOV W21, W3
	0x033B5360 MOV W22, W2
	0x033B5364 MOV X24, X0
	0x033B5368 TBNZ X8, 0x0, 0x33B53A4
	0x033B536C ADRP X0, 0xD68000
	0x033B5370 LDR X0, [X0 + 0x978]
	0x033B5374 BL 0x1C16CF4
	0x033B5378 ADRP X0, 0xD77000
	0x033B537C LDR X0, [X0 + 0x88]
	0x033B5380 BL 0x1C16CF4
	0x033B5384 ADRP X0, 0xD77000
	0x033B5388 LDR X0, [X0 + 0x90]
	0x033B538C BL 0x1C16CF4
	0x033B5390 ADRP X0, 0xD67000
	0x033B5394 LDR X0, [X0 + 0x4E8]
	0x033B5398 BL 0x1C16CF4
	0x033B539C MOVZ W8, 0x1
	0x033B53A0 STRB W8, [X19 + 0x1C9]
	0x033B53A4 LDR X0, [X26]
	0x033B53A8 STRB W31, [X31 + 0x34]
	0x033B53AC STRB W31, [X31 + 0x30]
	0x033B53B0 STR W31, [X31 + 0x2C]
	0x033B53B4 STP X31, X31, [X31 + 0x10]
	0x033B53B8 STR X31, [X31 + 0x20]
	0x033B53BC LDR W8, [X0 + 0xE0]
	0x033B53C0 CBNZ W8, 0x33B53C8
	0x033B53C4 BL 0x1C16DFC
	0x033B53C8 ADRP X25, 0xD77000
	0x033B53CC LDR X25, [X25 + 0x90]
	0x033B53D0 AND W2, W23, 0x1
	0x033B53D4 ADD X1, X31, 0x38
	0x033B53D8 ADD X3, X31, 0x34
	0x033B53DC ADD X4, X31, 0x30
	0x033B53E0 ADD X5, X31, 0x2C
	0x033B53E4 MOV W0, W22
	0x033B53E8 BL 0x33B4524
	0x033B53EC LDRB W27, [X31 + 0x34]
	0x033B53F0 LDR X23, [X31 + 0x38]
	0x033B53F4 CBNZ W27, 0x33B5404
	0x033B53F8 CBZ X23, 0x33B5404
	0x033B53FC LDR W8, [X23 + 0x10]
	0x033B5400 CBZ W8, 0x33B5474

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x1029000
	009 Move W8, [X21+447]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xD68000
	017 Move X0, [X0+1256]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+447], W8
	021 Compare X20, 0
	022 JumpIfEqual {64}
	023 Move W8, [X20+24]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X23, 0xD68000
	026 Move X23, [X23+1256]
	027 Move X22, X31
	028 Add X24, X20, 32
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X0, [X23]
	031 Move X21, [X24]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Compare X21, 0
	037 JumpIfEqual {64}
	038 Move W8, [X20+24]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X0, [X23]
	041 Move X21, [X24]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X0, X21
	047 Call RuntimeType.ThrowIfTypeNeverValidGenericArgument, X0
	048 Move X8, [X20+24]
	049 Add X22, X22, 1
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Compare X19, 0
	052 JumpIfEqual {77}
	053 Move W9, [X19+24]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X20, [X31+48]
	056 Move X19, [X31+56]
	057 Move X22, [X31+32]
	058 Move X21, [X31+40]
	059 Move X24, [X31+16]
	060 Move X23, [X31+24]
	061 Move X30, [X31+64]
	062 Return 
	063 Call 0x1C17F28
	064 Move X0, 0xD44000
	065 Move X0, [X0+1320]
	066 Call 0x1C17D08
	067 Call 0x1C17F10
	068 Move X1, X31
	069 Move X19, X0
	070 Call ArgumentNullException..ctor, X0
	071 Move X0, 0xD78000
	072 Move X0, [X0+88]
	073 Call 0x1C17D08
	074 Move X1, X0
	075 Move X0, X19
	076 Call 0x1C17DEC
	077 Call 0x1C17F20
	078 Move X0, 0xD3F000
	079 Move X0, [X0+2512]
	080 Call 0x1C17D08
	081 Move W1, 2
	082 Call 0x1C17D6C
	083 Move X21, X0
	084 Move X0, X20
	085 Call 0x19913C0
	086 Move X8, [X20+24]
	087 Move X20, 0xD3F000
	088 Move [X31+12], W8
	089 Move X20, [X20+1880]
	090 Move X0, X20
	091 Call 0x1C17D08
	092 Add X1, X31, 12
	093 Call 0x1C17E04
	094 Move X22, X0
	095 Move X0, X21
	096 Call 0x19913C0
	097 Move X0, X21
	098 Move X1, X22
	099 Call 0x19990B4
	100 Move X0, X21
	101 Move X1, X31
	102 Move X2, X22
	103 Call 0x1994444
	104 Move X0, X19
	105 Call 0x19913C0
	106 Move X8, [X19+24]
	107 Move X0, X20
	108 Move [X31+8], W8
	109 Call 0x1C17D08
	110 Add X1, X31, 8
	111 Call 0x1C17E04
	112 Move X19, X0
	113 Move X0, X21
	114 Call 0x19913C0
	115 Move X0, X21
	116 Move X1, X19
	117 Call 0x19990B4
	118 Move W1, 1
	119 Move X0, X21
	120 Move X2, X19
	121 Call 0x1994444
	122 Move X0, 0xD78000
	123 Move X0, [X0+96]
	124 Call 0x1C17D08
	125 Move X1, X21
	126 Move X2, X31
	127 Call Environment.GetResourceString, X0, X1
	128 Move X19, X0
	129 Move X0, 0xD47000
	130 Move X0, [X0+1400]
	131 Call 0x1C17D08
	132 Call 0x1C17F10
	133 Move X1, X19
	134 Move X2, X31
	135 Move X20, X0
	136 Call ArgumentException..ctor, X0, X1
	137 Move X0, 0xD78000
	138 Move X0, [X0+88]
	139 Call 0x1C17D08
	140 Move X1, X0
	141 Move X0, X20
	142 Call 0x1C17DEC

Method: System.Void SplitName(System.String fullname, out System.String name, out System.String ns)

Disassembly:
	0x033B5404 MOV X0, X23
	0x033B5408 MOV X1, X31
	0x033B540C BL 0x32277A8
	0x033B5410 TBNZ X0, 0x0, 0x33B5490
	0x033B5414 ADRP X19, 0xD68000
	0x033B5418 LDR X19, [X19 + 0x978]
	0x033B541C LDR X0, [X19]
	0x033B5420 LDR W8, [X0 + 0xE0]
	0x033B5424 CBNZ W8, 0x33B5430
	0x033B5428 BL 0x1C16DFC
	0x033B542C LDR X0, [X19]
	0x033B5430 LDR X8, [X0 + 0xB8]
	0x033B5434 MOV X0, X23
	0x033B5438 MOV X2, X31
	0x033B543C LDR X1, [X8]
	0x033B5440 BL 0x3226EF8
	0x033B5444 TBZ X0, 0x0, 0x33B5490
	0x033B5448 LDR X0, [X19]
	0x033B544C LDR W8, [X0 + 0xE0]
	0x033B5450 CBNZ W8, 0x33B545C
	0x033B5454 BL 0x1C16DFC
	0x033B5458 LDR X0, [X19]
	0x033B545C LDR X8, [X0 + 0xB8]
	0x033B5460 MOV X0, X23
	0x033B5464 MOV X2, X31
	0x033B5468 LDR X1, [X8 + 0x8]
	0x033B546C BL 0x3226EF8
	0x033B5470 TBZ X0, 0x0, 0x33B5490
	0x033B5474 LDR X2, [X25]
	0x033B5478 MOV X0, X28
	0x033B547C MOV W1, W31
	0x033B5480 STP X31, X31, [X28]
	0x033B5484 STR X31, [X28 + 0x10]
	0x033B5488 BL 0x2EF1B28
	0x033B548C B 0x33B5574
	0x033B5490 MOV X0, X24
	0x033B5494 MOV W1, W22
	0x033B5498 MOV X2, X24
	0x033B549C STR X28, [X31 + 0x8]
	0x033B54A0 BL 0x33B559C
	0x033B54A4 CBZ X0, 0x33B5598
	0x033B54A8 LDR W1, [X0 + 0x18]
	0x033B54AC LDR X2, [X25]
	0x033B54B0 MOV X24, X0
	0x033B54B4 ADD X0, X31, 0x10
	0x033B54B8 BL 0x2EF1B28
	0x033B54BC LDR X8, [X24 + 0x18]
	0x033B54C0 CMP W8, 0x1
	0x033B54C4 B.LT 0x33B5560
	0x033B54C8 LDRB W29, [X31 + 0x30]
	0x033B54CC MOV X28, X31
	0x033B54D0 AND X8, X8, 0x0
	0x033B54D4 ADD X19, X24, 0x20
	0x033B54D8 CMP X28, W8, UXTW
	0x033B54DC B.CS 0x33B5594
	0x033B54E0 LDR X0, [X26]
	0x033B54E4 LDR X25, [X19, X28, LSL #3]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1029000
	007 Move W8, [X22+448]
	008 Move X21, X2
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xD3F000
	016 Move X0, [X0+2440]
	017 Call 0x1C17CF4
	018 Move X0, 0xD48000
	019 Move X0, [X0+1936]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+448], W8
	023 Move [X19], X31
	024 Move [X21], X31
	025 Compare X20, 0
	026 JumpIfEqual {57}
	027 Move X8, 0xD48000
	028 Move X8, [X8+1936]
	029 Move W2, 4
	030 Move X0, X20
	031 Move X3, X31
	032 Move X1, [X8]
	033 Call String.LastIndexOf, X0, X1, X2
	034 Add W31, W0, 1
	035 Move W22, W0
	036 Move X0, X20
	037 Move W1, W31
	038 Move W2, W22
	039 Move X3, X31
	040 Call String.Substring, X0, X1, X2
	041 Move [X21], X0
	042 Compare X0, 0
	043 JumpIfEqual {63}
	044 Move W8, [X0+16]
	045 Move W9, [X20+16]
	046 NotImplemented "Instruction ORN not yet implemented."
	047 Add W2, W9, W8
	048 Add W1, W22, 1
	049 Move X0, X20
	050 Move X3, X31
	051 Call String.Substring, X0, X1, X2
	052 Move X20, X0
	053 Move X8, 0xD3F000
	054 Move X8, [X8+2440]
	055 Move X20, [X8]
	056 Move [X19], X20
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X30, [X31+48]
	062 Return 
	063 Call 0x1C17F20

Method: System.Reflection.BindingFlags FilterPreCalculate(System.Boolean isPublic, System.Boolean isInherited, System.Boolean isStatic)

Disassembly:
	0x033B54E8 LDR W8, [X0 + 0xE0]
	0x033B54EC CBNZ W8, 0x33B54F4
	0x033B54F0 BL 0x1C16DFC
	0x033B54F4 MOV X0, X25
	0x033B54F8 MOV W1, W22
	0x033B54FC MOV W2, W21
	0x033B5500 MOV X3, X20
	0x033B5504 BL 0x33B4D14
	0x033B5508 TBZ X0, 0x0, 0x33B5550
	0x033B550C CBZ W27, 0x33B5538
	0x033B5510 LDR X0, [X26]
	0x033B5514 LDR W8, [X0 + 0xE0]
	0x033B5518 CBNZ W8, 0x33B5520
	0x033B551C BL 0x1C16DFC
	0x033B5520 CMP W29, 0x0

ISIL:
	001 And W31, W0, 1
	002 Move W8, 32
	003 Move W9, 16
	004 Move W10, 6
	005 NotImplemented "Instruction CSEL not yet implemented."
	006 Move W9, 74
	007 And W31, W2, 1
	008 Move W11, 4
	009 NotImplemented "Instruction CSEL not yet implemented."
	010 Move W10, 8
	011 NotImplemented "Instruction CSEL not yet implemented."
	012 And W31, W1, 1
	013 NotImplemented "Instruction CSEL not yet implemented."
	014 Or W0, W8, W9
	015 Return X0

Method: System.Void FilterHelper(System.Reflection.BindingFlags bindingFlags, ref System.String name, System.Boolean allowPrefixLookup, out System.Boolean prefixLookup, out System.Boolean ignoreCase, out System.RuntimeType/MemberListType listType)

Disassembly:
	0x033B5524 CSET W2, NE
	0x033B5528 MOV X0, X25
	0x033B552C MOV X1, X23
	0x033B5530 BL 0x33B46D0
	0x033B5534 TBZ X0, 0x0, 0x33B5550
	0x033B5538 ADRP X8, 0xD77000
	0x033B553C LDR X8, [X8 + 0x88]
	0x033B5540 ADD X0, X31, 0x10
	0x033B5544 MOV X1, X25
	0x033B5548 LDR X2, [X8]
	0x033B554C BL 0x2EF1D14
	0x033B5550 LDR W8, [X24 + 0x18]
	0x033B5554 ADD X28, X28, 0x1
	0x033B5558 CMP X28, W8, SXTW
	0x033B555C B.LT 0x33B54D8
	0x033B5560 LDR X8, [X31 + 0x20]
	0x033B5564 LDR V0, [X31 + 0x1]
	0x033B5568 LDR X9, [X31 + 0x8]
	0x033B556C STR X8, [X9 + 0x10]
	0x033B5570 STR V0, [X9]
	0x033B5574 LDP X20, X19, [X31 + 0x90]
	0x033B5578 LDP X22, X21, [X31 + 0x80]
	0x033B557C LDP X24, X23, [X31 + 0x70]
	0x033B5580 LDP X26, X25, [X31 + 0x60]
	0x033B5584 LDP X28, X27, [X31 + 0x50]
	0x033B5588 LDP X29, X30, [X31 + 0x40]
	0x033B558C ADD X31, X31, 0xA0
	0x033B5590 RET
	0x033B5594 BL 0x1C16F28
	0x033B5598 BL 0x1C16F20
	0x033B559C SUB X31, X31, 0x50
	0x033B55A0 STR X30, [X31 + 0x10]
	0x033B55A4 STP X24, X23, [X31 + 0x20]
	0x033B55A8 STP X22, X21, [X31 + 0x30]
	0x033B55AC STP X20, X19, [X31 + 0x40]
	0x033B55B0 ADRP X22, 0x1028000
	0x033B55B4 LDRB W8, [X22 + 0x1FA]
	0x033B55B8 MOV X21, X2
	0x033B55BC MOV W19, W1
	0x033B55C0 MOV X20, X0
	0x033B55C4 TBNZ X8, 0x0, 0x33B55E8
	0x033B55C8 ADRP X0, 0xD77000
	0x033B55CC LDR X0, [X0 + 0x98]
	0x033B55D0 BL 0x1C16CF4
	0x033B55D4 ADRP X0, 0xD71000
	0x033B55D8 LDR X0, [X0 + 0x1D8]
	0x033B55DC BL 0x1C16CF4
	0x033B55E0 MOVZ W8, 0x1
	0x033B55E4 STRB W8, [X22 + 0x1FA]
	0x033B55E8 ADD X0, X31, 0x18
	0x033B55EC MOV X1, X21
	0x033B55F0 MOV X2, X31
	0x033B55F4 STR X31, [X31 + 0x18]
	0x033B55F8 STR X31, [X31 + 0x8]
	0x033B55FC BL 0x33CBEF0
	0x033B5600 MOV X0, X20
	0x033B5604 MOV W1, W19
	0x033B5608 BL 0x1C3A0CC
	0x033B560C MOV X1, X0
	0x033B5610 ADD X0, X31, 0x8
	0x033B5614 MOV X2, X31
	0x033B5618 BL 0x320B1A0
	0x033B561C ADD X0, X31, 0x8
	0x033B5620 MOV X1, X31
	0x033B5624 BL 0x320B1DC
	0x033B5628 ADRP X8, 0xD77000
	0x033B562C LDR X8, [X8 + 0x98]
	0x033B5630 MOV W21, W0
	0x033B5634 LDR X0, [X8]
	0x033B5638 MOV W1, W21
	0x033B563C BL 0x1C16D6C
	0x033B5640 MOV X19, X0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0x1029000
	010 Move W8, [X24+449]
	011 Move X19, X5
	012 Move X23, X4
	013 Move X20, X3
	014 Move W22, W2
	015 Move X21, X1
	016 Move W25, W0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xD41000
	022 Move X0, [X0+3144]
	023 Call 0x1C17CF4
	024 Move X0, 0xD71000
	025 Move X0, [X0+3824]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X24+449], W8
	029 Move [X20], W31
	030 Move [X23], W31
	031 Move X24, [X21]
	032 Compare X24, 0
	033 JumpIfEqual {85}
	034 Move TEMP, X25
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {39}
	038 Move W8, 1
	039 Move X8, 0xD41000
	040 Move X8, [X8+3144]
	041 Move X0, [X8]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X0, X31
	047 Call CultureInfo.get_InvariantCulture
	048 Move X1, X0
	049 Move X0, X24
	050 Move X2, X31
	051 Call String.ToLower, X0, X1
	052 Move W8, 1
	053 Move [X21], X0
	054 Move [X23], W8
	055 Move W8, 2
	056 Move [X19], W8
	057 Move TEMP, X22
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {86}
	061 Move X0, [X21]
	062 Compare X0, 0
	063 JumpIfEqual {95}
	064 Move X8, 0xD71000
	065 Move X8, [X8+3824]
	066 Move W2, 4
	067 Move X3, X31
	068 Move X1, [X8]
	069 Call String.EndsWith, X0, X1, X2
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfNotEqual {86}
	074 Move X0, [X21]
	075 Compare X0, 0
	076 JumpIfEqual {95}
	077 Move W8, [X0+16]
	078 Move W1, W31
	079 Move X3, X31
	080 Subtract W2, W8, 1
	081 Call String.Substring, X0, X1, X2
	082 Move W8, 1
	083 Move [X21], X0
	084 Move [X20], W8
	085 Move [X19], W31
	086 Move X20, [X31+48]
	087 Move X19, [X31+56]
	088 Move X22, [X31+32]
	089 Move X21, [X31+40]
	090 Move X24, [X31+16]
	091 Move X23, [X31+24]
	092 Move X30, [X31+64]
	093 Move X25, [X31+72]
	094 Return 
	095 Call 0x1C17F20

Method: System.Void FilterHelper(System.Reflection.BindingFlags bindingFlags, ref System.String name, out System.Boolean ignoreCase, out System.RuntimeType/MemberListType listType)

Disassembly:
	0x033B5644 CMP W21, 0x1
	0x033B5648 B.LT 0x33B5710
	0x033B564C ADRP X22, 0xD71000
	0x033B5650 LDR X22, [X22 + 0x1D8]
	0x033B5654 MOV X20, X31
	0x033B5658 MOV W23, W21
	0x033B565C ADD X24, X19, 0x20
	0x033B5660 ADD X0, X31, 0x8
	0x033B5664 MOV W1, W20
	0x033B5668 MOV X2, X31
	0x033B566C BL 0x320B1F8
	0x033B5670 LDR X1, [X31 + 0x18]
	0x033B5674 MOV X2, X31
	0x033B5678 BL 0x32DAEFC
	0x033B567C CBZ X19, 0x33B5748
	0x033B5680 MOV X21, X0
	0x033B5684 CBZ X0, 0x33B56F4
	0x033B5688 LDR X8, [X21]
	0x033B568C LDR X1, [X22]
	0x033B5690 LDRB W10, [X8 + 0x130]
	0x033B5694 LDRB W9, [X1 + 0x130]
	0x033B5698 CMP W10, W9
	0x033B569C B.CC 0x33B5740
	0x033B56A0 LDR X8, [X8 + 0xC8]
	0x033B56A4 ADD X8, X8, X9, 0x3, LSL
	0x033B56A8 LDUR X8, [X8 - 0x8]
	0x033B56AC CMP X8, X1
	0x033B56B0 B.NE 0x33B5740
	0x033B56B4 LDR X8, [X19]
	0x033B56B8 LDR X1, [X8 + 0x40]
	0x033B56BC MOV X0, X21
	0x033B56C0 BL 0x1C16E00
	0x033B56C4 CBZ X0, 0x33B5750
	0x033B56C8 LDR X8, [X21]
	0x033B56CC LDR X1, [X22]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x1029000
	009 Move X23, 0xD68000
	010 Move W8, [X24+450]
	011 Move X23, [X23+1256]
	012 Move X19, X3
	013 Move X20, X2
	014 Move X21, X1
	015 Move W22, W0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xD68000
	021 Move X0, [X0+1256]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+450], W8
	025 Move X0, [X23]
	026 Move [X31+12], W31
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Add X3, X31, 12
	032 Move W0, W22
	033 Move X1, X21
	034 Move W2, W31
	035 Move X4, X20
	036 Move X5, X19
	037 Call RuntimeType.FilterHelper, X0, X1, X2, X3, X4, X5
	038 Move X20, [X31+48]
	039 Move X19, [X31+56]
	040 Move X22, [X31+32]
	041 Move X21, [X31+40]
	042 Move X24, [X31+16]
	043 Move X23, [X31+24]
	044 Move X30, [X31+64]
	045 Return 

Method: System.Boolean FilterApplyPrefixLookup(System.Reflection.MemberInfo memberInfo, System.String name, System.Boolean ignoreCase)

Disassembly:
	0x033B56D0 LDRB W10, [X8 + 0x130]
	0x033B56D4 LDRB W9, [X1 + 0x130]
	0x033B56D8 CMP W10, W9
	0x033B56DC B.CC 0x33B5738
	0x033B56E0 LDR X8, [X8 + 0xC8]
	0x033B56E4 ADD X8, X8, X9, 0x3, LSL
	0x033B56E8 LDUR X8, [X8 - 0x8]
	0x033B56EC CMP X8, X1
	0x033B56F0 B.NE 0x33B5738
	0x033B56F4 LDR W8, [X19 + 0x18]
	0x033B56F8 CMP X20, X8
	0x033B56FC B.CS 0x33B574C
	0x033B5700 STR X21, [X24, X20, LSL #3]
	0x033B5704 ADD X20, X20, 0x1
	0x033B5708 CMP X23, X20
	0x033B570C B.NE 0x33B5660
	0x033B5710 ADD X0, X31, 0x8
	0x033B5714 MOV X1, X31
	0x033B5718 BL 0x320B1C0
	0x033B571C MOV X0, X19
	0x033B5720 LDP X20, X19, [X31 + 0x40]
	0x033B5724 LDP X22, X21, [X31 + 0x30]
	0x033B5728 LDP X24, X23, [X31 + 0x20]
	0x033B572C LDR X30, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X0, 0
	005 JumpIfEqual {33}
	006 Move X8, [X0]
	007 Move X19, X1
	008 Move W20, W2
	009 Move X9, [X8+424]
	010 Move X1, [X8+432]
	011 NotImplemented "Instruction BLR not yet implemented."
	012 Compare X0, 0
	013 JumpIfEqual {33}
	014 Move TEMP, X20
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {19}
	018 Move W2, 5
	019 Move W2, 4
	020 Move X1, X19
	021 Move X3, X31
	022 Call String.StartsWith, X0, X1, X2
	023 Move TEMP, X0
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfNotEqual {28}
	027 Move W0, 1
	028 Move W0, W31
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Return X0
	033 Call 0x1C17F20

Method: System.Boolean FilterApplyBase(System.Reflection.MemberInfo memberInfo, System.Reflection.BindingFlags bindingFlags, System.Boolean isPublic, System.Boolean isNonProtectedInternal, System.Boolean isStatic, System.String name, System.Boolean prefixLookup)

Disassembly:
	0x033B5730 ADD X31, X31, 0x50
	0x033B5734 RET
	0x033B5738 MOV X0, X21
	0x033B573C BL 0x1C171E0
	0x033B5740 MOV X0, X21
	0x033B5744 BL 0x1C171E0
	0x033B5748 BL 0x1C16F20
	0x033B574C BL 0x1C16F28
	0x033B5750 BL 0x1C16F44
	0x033B5754 MOV X1, X31
	0x033B5758 BL 0x1C16DEC
	0x033B575C B 0x33B576C
	0x033B5760 B 0x33B576C
	0x033B5764 B 0x33B576C
	0x033B5768 B 0x33B576C
	0x033B576C MOV X19, X0
	0x033B5770 CMP W1, 0x1
	0x033B5774 B.NE 0x33B57A4
	0x033B5778 MOV X0, X19
	0x033B577C BL 0x3EB1AD0
	0x033B5780 LDR X20, [X0]
	0x033B5784 BL 0x3EB1AE0
	0x033B5788 ADD X0, X31, 0x8
	0x033B578C MOV X1, X31
	0x033B5790 BL 0x320B1C0
	0x033B5794 MOV X19, X31
	0x033B5798 CBZ X20, 0x33B571C
	0x033B579C MOV X0, X20
	0x033B57A0 BL 0x1C16F18
	0x033B57A4 MOV X20, X31
	0x033B57A8 B 0x33B57B0
	0x033B57AC MOV X19, X0
	0x033B57B0 ADD X0, X31, 0x8
	0x033B57B4 MOV X1, X31
	0x033B57B8 BL 0x320B1C0
	0x033B57BC CBNZ X20, 0x33B57C8
	0x033B57C0 MOV X0, X19
	0x033B57C4 BL 0x1D2C690
	0x033B57C8 MOV X0, X20
	0x033B57CC BL 0x1C16F18
	0x033B57D0 BL 0x1990590
	0x033B57D4 SUB X31, X31, 0xA0
	0x033B57D8 STP X29, X30, [X31 + 0x40]
	0x033B57DC STP X28, X27, [X31 + 0x50]
	0x033B57E0 STP X26, X25, [X31 + 0x60]
	0x033B57E4 STP X24, X23, [X31 + 0x70]
	0x033B57E8 STP X22, X21, [X31 + 0x80]
	0x033B57EC STP X20, X19, [X31 + 0x90]
	0x033B57F0 ADRP X19, 0x1028000
	0x033B57F4 STR X8, [X31 + 0x8]
	0x033B57F8 LDRB W8, [X19 + 0x1CA]
	0x033B57FC MOV W21, W4
	0x033B5800 MOV X20, X3
	0x033B5804 MOV W23, W2
	0x033B5808 MOV X22, X0
	0x033B580C STR X1, [X31 + 0x38]
	0x033B5810 TBNZ X8, 0x0, 0x33B5840
	0x033B5814 ADRP X0, 0xD77000
	0x033B5818 LDR X0, [X0 + 0xA0]
	0x033B581C BL 0x1C16CF4
	0x033B5820 ADRP X0, 0xD77000
	0x033B5824 LDR X0, [X0 + 0xA8]
	0x033B5828 BL 0x1C16CF4
	0x033B582C ADRP X0, 0xD67000
	0x033B5830 LDR X0, [X0 + 0x4E8]
	0x033B5834 BL 0x1C16CF4
	0x033B5838 MOVZ W8, 0x1
	0x033B583C STRB W8, [X19 + 0x1CA]
	0x033B5840 STRB W31, [X31 + 0x34]
	0x033B5844 STRB W31, [X31 + 0x30]
	0x033B5848 STR W31, [X31 + 0x2C]
	0x033B584C ADRP X8, 0xD67000
	0x033B5850 LDR X8, [X8 + 0x4E8]
	0x033B5854 STP X31, X31, [X31 + 0x10]
	0x033B5858 STR X31, [X31 + 0x20]
	0x033B585C LDR X0, [X8]
	0x033B5860 LDR W8, [X0 + 0xE0]
	0x033B5864 CBNZ W8, 0x33B586C
	0x033B5868 BL 0x1C16DFC
	0x033B586C AND W2, W21, 0x1
	0x033B5870 ADD X1, X31, 0x38
	0x033B5874 ADD X3, X31, 0x34
	0x033B5878 ADD X4, X31, 0x30
	0x033B587C ADD X5, X31, 0x2C
	0x033B5880 MOV W0, W23
	0x033B5884 BL 0x33B4524
	0x033B5888 LDR X21, [X31 + 0x38]
	0x033B588C LDR W3, [X31 + 0x2C]
	0x033B5890 MOV X0, X22
	0x033B5894 MOV W2, W23
	0x033B5898 MOV X1, X21
	0x033B589C MOV X4, X22
	0x033B58A0 BL 0x33B59E0
	0x033B58A4 CBZ X0, 0x33B59D8
	0x033B58A8 ADRP X8, 0xD77000
	0x033B58AC LDR X8, [X8 + 0xA8]
	0x033B58B0 LDR W1, [X0 + 0x18]
	0x033B58B4 MOV X22, X0
	0x033B58B8 ADD X0, X31, 0x10
	0x033B58BC LDR X2, [X8]
	0x033B58C0 BL 0x2EF1B28
	0x033B58C4 LDR W8, [X22 + 0x18]
	0x033B58C8 CMP W8, 0x1
	0x033B58CC B.LT 0x33B59A4
	0x033B58D0 ADRP X29, 0xD77000
	0x033B58D4 LDRB W27, [X31 + 0x34]
	0x033B58D8 LDRB W28, [X31 + 0x30]
	0x033B58DC LDR X29, [X29 + 0xA0]
	0x033B58E0 MOV X26, X31
	0x033B58E4 EOR W19, W23, 0x2
	0x033B58E8 ADD X25, X22, 0x20
	0x033B58EC CMP W26, W8
	0x033B58F0 B.CS 0x33B59DC
	0x033B58F4 LDR X23, [X25, X26, LSL #3]
	0x033B58F8 CBZ X23, 0x33B59D8
	0x033B58FC MOV X0, X23
	0x033B5900 MOV X1, X31
	0x033B5904 BL 0x32DE1EC
	0x033B5908 MOV W24, W0
	0x033B590C MOV X0, X23
	0x033B5910 MOV X1, X31
	0x033B5914 BL 0x32DE1EC
	0x033B5918 AND W8, W24, W19, 0x0

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x1029000
	011 Move W8, [X26+451]
	012 Move W24, W6
	013 Move X23, X5
	014 Move W20, W4
	015 Move W21, W3
	016 Move W25, W2
	017 Move W22, W1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xD70000
	024 Move X0, [X0+632]
	025 Call 0x1C17CF4
	026 Move X0, 0xD68000
	027 Move X0, [X0+1256]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X26+451], W8
	031 Move TEMP, X25
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {39}
	035 Move TEMP, X22
	036 And TEMP, TEMP, 16
	037 Compare TEMP, 16
	038 JumpIfEqual {43}
	039 Move TEMP, X22
	040 And TEMP, TEMP, 32
	041 Compare TEMP, 32
	042 JumpIfNotEqual {59}
	043 Compare X19, 0
	044 JumpIfEqual {181}
	045 Move X8, [X19]
	046 Move X0, X19
	047 Move X9, [X8+440]
	048 Move X1, [X8+448]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move X8, [X19]
	051 Move X25, X0
	052 Move X0, X19
	053 Move X9, [X8+456]
	054 Move X1, [X8+464]
	055 NotImplemented "Instruction BLR not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 NotImplemented "Instruction CSET not yet implemented."
	058 And W31, W25, W22
	059 Move W0, W31
	060 Move X20, [X31+64]
	061 Move X19, [X31+72]
	062 Move X22, [X31+48]
	063 Move X21, [X31+56]
	064 Move X24, [X31+32]
	065 Move X23, [X31+40]
	066 Move X26, [X31+16]
	067 Move X25, [X31+24]
	068 Move X30, [X31+80]
	069 Return X0
	070 Move X8, [X19]
	071 Move X0, X19
	072 Move X9, [X8+408]
	073 Move X1, [X8+416]
	074 NotImplemented "Instruction BLR not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X8, [X19]
	077 Move X0, X19
	078 Move X9, [X8+408]
	079 Move X1, [X8+416]
	080 NotImplemented "Instruction BLR not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move TEMP, X24
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfNotEqual {101}
	086 Move X8, 0xD68000
	087 Move X8, [X8+1256]
	088 Move X0, [X8]
	089 Move W8, [X0+224]
	090 Compare W8, 0
	091 JumpIfNotEqual {93}
	092 Call 0x1C17DFC
	093 And W2, W22, 1
	094 Move X0, X19
	095 Move X1, X23
	096 Call RuntimeType.FilterApplyPrefixLookup, X0, X1, X2
	097 Move TEMP, X0
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfNotEqual {59}
	101 Move TEMP, X22
	102 And TEMP, TEMP, 4
	103 Compare TEMP, 4
	104 JumpIfNotEqual {176}
	105 Move TEMP, X22
	106 And TEMP, TEMP, 32
	107 Compare TEMP, 32
	108 JumpIfNotEqual {176}
	109 Move W8, W22
	110 ShiftRight W8, 1
	111 And W8, W8, 0x7FFFFFFF
	112 NotImplemented "Instruction BIC not yet implemented."
	113 And W8, W8, W25
	114 Compare W8, 0
	115 JumpIfEqual {176}
	116 Move TEMP, X20
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfEqual {176}
	120 Move X8, 0xD70000
	121 Move X8, [X8+632]
	122 Move X9, [X19]
	123 Move X8, [X8]
	124 Move W11, [X9+304]
	125 Move W10, [X8+304]
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move X0, X31
	128 Move X1, X31
	129 Move X2, X31
	130 Call MethodInfo.op_Equality, X0, X1
	131 Move TEMP, X0
	132 And TEMP, TEMP, 1
	133 Compare TEMP, 1
	134 JumpIfEqual {59}
	135 Move TEMP, X20
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfNotEqual {177}
	139 Move W0, W31
	140 Move TEMP, X22
	141 And TEMP, TEMP, 8
	142 Compare TEMP, 8
	143 JumpIfNotEqual {60}
	144 NotImplemented "Instruction BIC not yet implemented."
	145 Compare W8, 0
	146 JumpIfEqual {82}
	147 Move X9, [X9+200]
	148 Move X1, X31
	149 Move X2, X31
	150 Add X9, X9, X10
	151 NotImplemented "Instruction LDUR not yet implemented."
	152 NotImplemented "Instruction CMP not yet implemented."
	153 NotImplemented "Instruction CSEL not yet implemented."
	154 Move X0, X19
	155 Call MethodInfo.op_Equality, X0, X1
	156 Move TEMP, X0
	157 And TEMP, TEMP, 1
	158 Compare TEMP, 1
	159 JumpIfEqual {59}
	160 Compare X19, 0
	161 JumpIfEqual {181}
	162 Move X0, X19
	163 Move X1, X31
	164 Call MethodBase.get_IsVirtual, X0
	165 Move TEMP, X0
	166 And TEMP, TEMP, 1
	167 Compare TEMP, 1
	168 JumpIfEqual {176}
	169 Move X0, X19
	170 Move X1, X31
	171 Call MethodBase.get_IsAbstract, X0
	172 Move TEMP, X0
	173 And TEMP, TEMP, 1
	174 Compare TEMP, 1
	175 JumpIfNotEqual {59}
	176 Move W0, 1
	177 Move TEMP, X22
	178 And TEMP, TEMP, 4
	179 Compare TEMP, 4
	180 JumpIfNotEqual {59}
	181 Call 0x1C17F20

Method: System.Boolean FilterApplyType(System.Type type, System.Reflection.BindingFlags bindingFlags, System.String name, System.Boolean prefixLookup, System.String ns)

Disassembly:
	0x033B591C CMP W8, W0
	0x033B5920 B.NE 0x33B5994
	0x033B5924 CBZ W27, 0x33B5958
	0x033B5928 ADRP X8, 0xD67000
	0x033B592C LDR X8, [X8 + 0x4E8]
	0x033B5930 LDR X0, [X8]
	0x033B5934 LDR W8, [X0 + 0xE0]
	0x033B5938 CBNZ W8, 0x33B5940
	0x033B593C BL 0x1C16DFC
	0x033B5940 CMP W28, 0x0
	0x033B5944 CSET W2, NE
	0x033B5948 MOV X0, X23
	0x033B594C MOV X1, X21
	0x033B5950 BL 0x33B46D0
	0x033B5954 TBZ X0, 0x0, 0x33B5994
	0x033B5958 CBZ X20, 0x33B5984
	0x033B595C LDR X8, [X23]
	0x033B5960 MOV X0, X23
	0x033B5964 LDR X9, [X8 + 0x258]
	0x033B5968 LDR X1, [X8 + 0x260]
	0x033B596C BLR X9
	0x033B5970 CBZ X0, 0x33B59D8
	0x033B5974 LDR W8, [X0 + 0x18]
	0x033B5978 LDR W9, [X20 + 0x18]
	0x033B597C CMP W8, W9
	0x033B5980 B.NE 0x33B5994
	0x033B5984 LDR X2, [X29]
	0x033B5988 ADD X0, X31, 0x10
	0x033B598C MOV X1, X23
	0x033B5990 BL 0x2EF1D14
	0x033B5994 LDR W8, [X22 + 0x18]
	0x033B5998 ADD X26, X26, 0x1
	0x033B599C CMP W26, W8
	0x033B59A0 B.LT 0x33B58EC
	0x033B59A4 LDR X8, [X31 + 0x20]
	0x033B59A8 LDR V0, [X31 + 0x1]
	0x033B59AC LDR X9, [X31 + 0x8]
	0x033B59B0 LDP X20, X19, [X31 + 0x90]
	0x033B59B4 LDP X22, X21, [X31 + 0x80]
	0x033B59B8 LDP X24, X23, [X31 + 0x70]
	0x033B59BC LDP X26, X25, [X31 + 0x60]
	0x033B59C0 LDP X28, X27, [X31 + 0x50]
	0x033B59C4 LDP X29, X30, [X31 + 0x40]
	0x033B59C8 STR X8, [X9 + 0x10]
	0x033B59CC STR V0, [X9]
	0x033B59D0 ADD X31, X31, 0xA0
	0x033B59D4 RET
	0x033B59D8 BL 0x1C16F20
	0x033B59DC BL 0x1C16F28
	0x033B59E0 SUB X31, X31, 0x60
	0x033B59E4 STR X30, [X31 + 0x20]
	0x033B59E8 STP X24, X23, [X31 + 0x30]
	0x033B59EC STP X22, X21, [X31 + 0x40]
	0x033B59F0 STP X20, X19, [X31 + 0x50]
	0x033B59F4 ADRP X24, 0x1028000
	0x033B59F8 LDRB W8, [X24 + 0x1FB]
	0x033B59FC MOV X23, X4
	0x033B5A00 MOV W19, W3
	0x033B5A04 MOV W20, W2
	0x033B5A08 MOV X22, X1
	0x033B5A0C MOV X21, X0
	0x033B5A10 TBNZ X8, 0x0, 0x33B5A34
	0x033B5A14 ADRP X0, 0xD77000
	0x033B5A18 LDR X0, [X0 + 0xB0]
	0x033B5A1C BL 0x1C16CF4
	0x033B5A20 ADRP X0, 0xD71000
	0x033B5A24 LDR X0, [X0 + 0x1E0]
	0x033B5A28 BL 0x1C16CF4
	0x033B5A2C MOVZ W8, 0x1
	0x033B5A30 STRB W8, [X24 + 0x1FB]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0x1029000
	010 Move W8, [X24+452]
	011 Move X19, X4
	012 Move W23, W3
	013 Move X21, X2
	014 Move W22, W1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xD68000
	021 Move X0, [X0+1256]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+452], W8
	025 Compare X20, 0
	026 JumpIfEqual {91}
	027 Move X25, 0xD68000
	028 Move X25, [X25+1256]
	029 Move X0, X20
	030 Move X1, X31
	031 Call Type.get_IsNestedPublic, X0
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {37}
	036 Move W24, 1
	037 Move X0, X20
	038 Move X1, X31
	039 Call Type.get_IsPublic, X0
	040 Move W24, W0
	041 Move X0, X20
	042 Move X1, X31
	043 Call Type.get_IsNestedAssembly, X0
	044 Move X8, [X25]
	045 Move W25, W0
	046 Move W9, [X8+224]
	047 Compare W9, 0
	048 JumpIfNotEqual {51}
	049 Move X0, X8
	050 Call 0x1C17DFC
	051 And W2, W24, 1
	052 And W3, W25, 1
	053 And W6, W23, 1
	054 Move X0, X20
	055 Move W1, W22
	056 Move W4, W31
	057 Move X5, X21
	058 Call RuntimeType.FilterApplyBase, X0, X1, X2, X3, X4, X5, X6
	059 Move W8, W0
	060 Move W0, W31
	061 Move TEMP, X8
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {82}
	065 Compare X19, 0
	066 JumpIfEqual {81}
	067 Move X8, [X20]
	068 Move X0, X20
	069 Move X9, [X8+712]
	070 Move X1, [X8+720]
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move X1, X0
	073 Move X0, X19
	074 Move X2, X31
	075 Call String.op_Inequality, X0, X1
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {81}
	080 Move W0, W31
	081 Move W0, 1
	082 Move X20, [X31+48]
	083 Move X19, [X31+56]
	084 Move X22, [X31+32]
	085 Move X21, [X31+40]
	086 Move X24, [X31+16]
	087 Move X23, [X31+24]
	088 Move X30, [X31+64]
	089 Move X25, [X31+72]
	090 Return X0
	091 Call 0x1C17F20

Method: System.Boolean FilterApplyMethodInfo(System.Reflection.RuntimeMethodInfo method, System.Reflection.BindingFlags bindingFlags, System.Reflection.CallingConventions callConv, System.Type[] argumentTypes)

Disassembly:
	0x033B5A34 ADD X0, X31, 0x28
	0x033B5A38 MOV X1, X23
	0x033B5A3C MOV X2, X31
	0x033B5A40 STR X31, [X31 + 0x28]
	0x033B5A44 STP X31, X31, [X31 + 0x10]
	0x033B5A48 STR X31, [X31 + 0x8]
	0x033B5A4C BL 0x33CBEF0
	0x033B5A50 ADD X0, X31, 0x10
	0x033B5A54 MOV X1, X22
	0x033B5A58 MOV X2, X31
	0x033B5A5C BL 0x320B030
	0x033B5A60 ADD X0, X31, 0x10
	0x033B5A64 MOV X1, X31
	0x033B5A68 BL 0x320B21C
	0x033B5A6C MOV X1, X0
	0x033B5A70 MOV X0, X21
	0x033B5A74 MOV W2, W20
	0x033B5A78 MOV W3, W19
	0x033B5A7C BL 0x1C3C430
	0x033B5A80 MOV X1, X0
	0x033B5A84 ADD X0, X31, 0x8
	0x033B5A88 MOV X2, X31
	0x033B5A8C BL 0x320B1A0
	0x033B5A90 ADD X0, X31, 0x8
	0x033B5A94 MOV X1, X31
	0x033B5A98 BL 0x320B1DC
	0x033B5A9C ADRP X8, 0xD77000
	0x033B5AA0 LDR X8, [X8 + 0xB0]
	0x033B5AA4 MOV W21, W0
	0x033B5AA8 LDR X0, [X8]
	0x033B5AAC MOV W1, W21
	0x033B5AB0 BL 0x1C16D6C
	0x033B5AB4 MOV X19, X0
	0x033B5AB8 CMP W21, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x1029000
	008 Move W8, [X23+453]
	009 Move X19, X3
	010 Move W20, W2
	011 Move W21, W1
	012 Move X22, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xD68000
	018 Move X0, [X0+1256]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+453], W8
	022 Compare X22, 0
	023 JumpIfEqual {44}
	024 Move X23, 0xD68000
	025 Move X23, [X23+1256]
	026 Move X0, X22
	027 Move X1, X31
	028 Call RuntimeMethodInfo.get_BindingFlags, X0
	029 Move X0, [X23]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X22
	035 Move W2, W21
	036 Move W3, W20
	037 Move X4, X19
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 Move X23, [X31+56]
	044 Call 0x1C17F20

Method: System.Boolean FilterApplyConstructorInfo(System.Reflection.RuntimeConstructorInfo constructor, System.Reflection.BindingFlags bindingFlags, System.Reflection.CallingConventions callConv, System.Type[] argumentTypes)

Disassembly:
	0x033B5D14 BL 0x1C16CF4
	0x033B5D18 ADRP X0, 0xD77000
	0x033B5D1C LDR X0, [X0 + 0xC0]
	0x033B5D20 BL 0x1C16CF4
	0x033B5D24 ADRP X0, 0xD67000
	0x033B5D28 LDR X0, [X0 + 0x4E8]
	0x033B5D2C BL 0x1C16CF4
	0x033B5D30 MOVZ W8, 0x1
	0x033B5D34 STRB W8, [X19 + 0x1CB]
	0x033B5D38 LDR X0, [X24]
	0x033B5D3C STRB W31, [X31 + 0x34]
	0x033B5D40 STRB W31, [X31 + 0x30]
	0x033B5D44 STR W31, [X31 + 0x2C]
	0x033B5D48 STP X31, X31, [X31 + 0x10]
	0x033B5D4C STR X31, [X31 + 0x20]
	0x033B5D50 LDR W8, [X0 + 0xE0]
	0x033B5D54 CBNZ W8, 0x33B5D5C
	0x033B5D58 BL 0x1C16DFC
	0x033B5D5C AND W2, W20, 0x1
	0x033B5D60 ADD X1, X31, 0x38
	0x033B5D64 ADD X3, X31, 0x34
	0x033B5D68 ADD X4, X31, 0x30
	0x033B5D6C ADD X5, X31, 0x2C
	0x033B5D70 MOV W0, W22
	0x033B5D74 BL 0x33B4524
	0x033B5D78 LDR X20, [X31 + 0x38]
	0x033B5D7C LDR W3, [X31 + 0x2C]
	0x033B5D80 MOV X0, X21
	0x033B5D84 MOV X4, X21
	0x033B5D88 MOV X1, X20
	0x033B5D8C BL 0x33B5E98
	0x033B5D90 CBZ X0, 0x33B5E94
	0x033B5D94 ADRP X8, 0xD77000
	0x033B5D98 LDR X8, [X8 + 0xC0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x1029000
	008 Move W8, [X23+454]
	009 Move X19, X3
	010 Move W20, W2
	011 Move W21, W1
	012 Move X22, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xD68000
	018 Move X0, [X0+1256]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+454], W8
	022 Compare X22, 0
	023 JumpIfEqual {46}
	024 Move X23, 0xD68000
	025 Move X23, [X23+1256]
	026 Move X0, X22
	027 Move X1, X31
	028 Call RuntimeConstructorInfo.get_BindingFlags, X0
	029 Move X0, [X23]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X22
	035 Move W2, W21
	036 Move W3, W20
	037 Move X4, X19
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 Move X23, [X31+56]
	044 Call RuntimeType.FilterApplyMethodBase, X0, X1, X2, X3, X4
	045 Return X0
	046 Call 0x1C17F20

Method: System.Boolean FilterApplyMethodBase(System.Reflection.MethodBase methodBase, System.Reflection.BindingFlags methodFlags, System.Reflection.BindingFlags bindingFlags, System.Reflection.CallingConventions callConv, System.Type[] argumentTypes)

Disassembly:
	0x033B5ABC B.LT 0x33B5B84
	0x033B5AC0 ADRP X22, 0xD71000
	0x033B5AC4 LDR X22, [X22 + 0x1E0]
	0x033B5AC8 MOV X20, X31
	0x033B5ACC MOV W23, W21
	0x033B5AD0 ADD X24, X19, 0x20
	0x033B5AD4 ADD X0, X31, 0x8
	0x033B5AD8 MOV W1, W20
	0x033B5ADC MOV X2, X31
	0x033B5AE0 BL 0x320B1F8
	0x033B5AE4 LDR X1, [X31 + 0x28]
	0x033B5AE8 MOV X2, X31
	0x033B5AEC BL 0x32DEFA0
	0x033B5AF0 CBZ X19, 0x33B5BD0
	0x033B5AF4 MOV X21, X0
	0x033B5AF8 CBZ X0, 0x33B5B68
	0x033B5AFC LDR X8, [X21]
	0x033B5B00 LDR X1, [X22]
	0x033B5B04 LDRB W10, [X8 + 0x130]
	0x033B5B08 LDRB W9, [X1 + 0x130]
	0x033B5B0C CMP W10, W9
	0x033B5B10 B.CC 0x33B5BC8
	0x033B5B14 LDR X8, [X8 + 0xC8]
	0x033B5B18 ADD X8, X8, X9, 0x3, LSL
	0x033B5B1C LDUR X8, [X8 - 0x8]
	0x033B5B20 CMP X8, X1
	0x033B5B24 B.NE 0x33B5BC8
	0x033B5B28 LDR X8, [X19]
	0x033B5B2C LDR X1, [X8 + 0x40]
	0x033B5B30 MOV X0, X21
	0x033B5B34 BL 0x1C16E00
	0x033B5B38 CBZ X0, 0x33B5BD8
	0x033B5B3C LDR X8, [X21]
	0x033B5B40 LDR X1, [X22]
	0x033B5B44 LDRB W10, [X8 + 0x130]
	0x033B5B48 LDRB W9, [X1 + 0x130]
	0x033B5B4C CMP W10, W9
	0x033B5B50 B.CC 0x33B5BC0
	0x033B5B54 LDR X8, [X8 + 0xC8]
	0x033B5B58 ADD X8, X8, X9, 0x3, LSL
	0x033B5B5C LDUR X8, [X8 - 0x8]
	0x033B5B60 CMP X8, X1
	0x033B5B64 B.NE 0x33B5BC0
	0x033B5B68 LDR W8, [X19 + 0x18]
	0x033B5B6C CMP X20, X8
	0x033B5B70 B.CS 0x33B5BD4
	0x033B5B74 STR X21, [X24, X20, LSL #3]
	0x033B5B78 ADD X20, X20, 0x1
	0x033B5B7C CMP X23, X20
	0x033B5B80 B.NE 0x33B5AD4
	0x033B5B84 MOV X22, X31
	0x033B5B88 ADD X0, X31, 0x8
	0x033B5B8C MOV X1, X31
	0x033B5B90 BL 0x320B1C0
	0x033B5B94 CBNZ X22, 0x33B5BE4
	0x033B5B98 ADD X0, X31, 0x10
	0x033B5B9C MOV X1, X31
	0x033B5BA0 BL 0x320B264
	0x033B5BA4 MOV X0, X19
	0x033B5BA8 LDP X20, X19, [X31 + 0x50]
	0x033B5BAC LDP X22, X21, [X31 + 0x40]
	0x033B5BB0 LDP X24, X23, [X31 + 0x30]
	0x033B5BB4 LDR X30, [X31 + 0x20]
	0x033B5BB8 ADD X31, X31, 0x60
	0x033B5BBC RET
	0x033B5BC0 MOV X0, X21
	0x033B5BC4 BL 0x1C171E0
	0x033B5BC8 MOV X0, X21
	0x033B5BCC BL 0x1C171E0
	0x033B5BD0 BL 0x1C16F20
	0x033B5BD4 BL 0x1C16F28
	0x033B5BD8 BL 0x1C16F44
	0x033B5BDC MOV X1, X31
	0x033B5BE0 BL 0x1C16DEC
	0x033B5BE4 MOV X0, X22
	0x033B5BE8 BL 0x1C16F18
	0x033B5BEC B 0x33B5C18
	0x033B5BF0 B 0x33B5C18
	0x033B5BF4 B 0x33B5C04
	0x033B5BF8 MOV X21, X1
	0x033B5BFC MOV X20, X0
	0x033B5C00 B 0x33B5C54
	0x033B5C04 MOV X21, X1
	0x033B5C08 MOV X20, X0
	0x033B5C0C B 0x33B5C50
	0x033B5C10 B 0x33B5C18
	0x033B5C14 B 0x33B5C18
	0x033B5C18 CMP W1, 0x1
	0x033B5C1C B.NE 0x33B5C34
	0x033B5C20 BL 0x3EB1AD0
	0x033B5C24 LDR X22, [X0]
	0x033B5C28 BL 0x3EB1AE0
	0x033B5C2C MOV X19, X31
	0x033B5C30 B 0x33B5B88
	0x033B5C34 MOV X21, X1
	0x033B5C38 MOV X20, X0
	0x033B5C3C MOV X22, X31
	0x033B5C40 ADD X0, X31, 0x8
	0x033B5C44 MOV X1, X31
	0x033B5C48 BL 0x320B1C0
	0x033B5C4C CBNZ X22, 0x33B5C8C
	0x033B5C50 MOV X19, X31
	0x033B5C54 CMP W21, 0x1
	0x033B5C58 B.NE 0x33B5C84
	0x033B5C5C MOV X0, X20
	0x033B5C60 BL 0x3EB1AD0
	0x033B5C64 LDR X21, [X0]
	0x033B5C68 BL 0x3EB1AE0
	0x033B5C6C ADD X0, X31, 0x10
	0x033B5C70 MOV X1, X31
	0x033B5C74 BL 0x320B264
	0x033B5C78 CBZ X21, 0x33B5BA4
	0x033B5C7C MOV X0, X21
	0x033B5C80 BL 0x1C16F18
	0x033B5C84 MOV X21, X31
	0x033B5C88 B 0x33B5CA4
	0x033B5C8C MOV X0, X22
	0x033B5C90 BL 0x1C16F18
	0x033B5C94 MOV X21, X1
	0x033B5C98 MOV X20, X0
	0x033B5C9C B 0x33B5C40
	0x033B5CA0 MOV X20, X0
	0x033B5CA4 ADD X0, X31, 0x10
	0x033B5CA8 MOV X1, X31
	0x033B5CAC BL 0x320B264
	0x033B5CB0 CBNZ X21, 0x33B5CBC
	0x033B5CB4 MOV X0, X20
	0x033B5CB8 BL 0x1D2C690
	0x033B5CBC MOV X0, X21
	0x033B5CC0 BL 0x1C16F18
	0x033B5CC4 BL 0x1990590
	0x033B5CC8 SUB X31, X31, 0xA0
	0x033B5CCC STP X29, X30, [X31 + 0x40]
	0x033B5CD0 STP X28, X27, [X31 + 0x50]
	0x033B5CD4 STP X26, X25, [X31 + 0x60]
	0x033B5CD8 STP X24, X23, [X31 + 0x70]
	0x033B5CDC STP X22, X21, [X31 + 0x80]
	0x033B5CE0 STP X20, X19, [X31 + 0x90]
	0x033B5CE4 STR X8, [X31 + 0x8]
	0x033B5CE8 ADRP X19, 0x1028000
	0x033B5CEC STR X1, [X31 + 0x38]
	0x033B5CF0 ADRP X24, 0xD67000
	0x033B5CF4 LDRB W8, [X19 + 0x1CB]
	0x033B5CF8 LDR X24, [X24 + 0x4E8]
	0x033B5CFC MOV W20, W3
	0x033B5D00 MOV W22, W2
	0x033B5D04 MOV X21, X0
	0x033B5D08 TBNZ X8, 0x0, 0x33B5D38
	0x033B5D0C ADRP X0, 0xD77000
	0x033B5D10 LDR X0, [X0 + 0xB8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x1029000
	008 Move W8, [X23+455]
	009 Move X19, X4
	010 Move W20, W3
	011 Move W21, W2
	012 Move X22, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xD77000
	018 Move X0, [X0+3496]
	019 Call 0x1C17CF4
	020 Move X0, 0xD3F000
	021 Move X0, [X0+1728]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+455], W8
	025 And W31, W20, 3
	026 Compare X19, 0
	027 JumpIfEqual {182}
	028 Compare X22, 0
	029 JumpIfEqual {191}
	030 Move X8, [X22]
	031 Move X0, X22
	032 Move X9, [X8+920]
	033 Move X1, [X8+928]
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Compare X0, 0
	036 JumpIfEqual {191}
	037 Move X10, [X19+24]
	038 Move X9, [X0+24]
	039 Move X20, X0
	040 And X8, X10, 0
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move W11, 256
	043 NotImplemented "Instruction MOVK not yet implemented."
	044 And W11, W21, W11
	045 NotImplemented "Instruction CMP not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Compare X8, 0
	048 JumpIfEqual {70}
	049 Move X21, X31
	050 And X9, X9, 0
	051 Add X22, X19, 32
	052 Add X23, X20, 32
	053 Move X0, [X22]
	054 Compare X0, 0
	055 JumpIfEqual {65}
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X1, [X23]
	058 Move X2, X31
	059 Call SignatureTypeExtensions.MatchesParameterTypeExactly, X0, X1
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {183}
	064 Move W9, [X20+24]
	065 Add X21, X21, 1
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move W8, [X19+24]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X8, X9
	070 Call 0x1C17F28
	071 Move TEMP, X20
	072 And TEMP, TEMP, 2
	073 Compare TEMP, 2
	074 JumpIfNotEqual {86}
	075 Compare X22, 0
	076 JumpIfEqual {191}
	077 Move X8, [X22]
	078 Move X0, X22
	079 Move X9, [X8+632]
	080 Move X1, [X8+640]
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Move TEMP, X0
	083 And TEMP, TEMP, 2
	084 Compare TEMP, 2
	085 JumpIfNotEqual {183}
	086 Move TEMP, X20
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {26}
	090 Compare X22, 0
	091 JumpIfEqual {191}
	092 Move X8, [X22]
	093 Move X0, X22
	094 Move X9, [X8+632]
	095 Move X1, [X8+640]
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Move TEMP, X0
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfEqual {26}
	101 Move W11, 0x3300
	102 And W31, W21, W11
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move X8, [X22]
	105 Move X0, X22
	106 Move X9, [X8+632]
	107 Move X1, [X8+640]
	108 NotImplemented "Instruction BLR not yet implemented."
	109 Move TEMP, X0
	110 And TEMP, TEMP, 2
	111 Compare TEMP, 2
	112 JumpIfNotEqual {131}
	113 Move TEMP, X21
	114 And TEMP, TEMP, 0x40000
	115 Compare TEMP, 0x40000
	116 JumpIfNotEqual {131}
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move X8, X8
	119 ShiftRight X8, 32
	120 And X8, X8, 0x7FFFFFFF
	121 Add X8, X20, X8
	122 Move X0, [X8+32]
	123 Compare X0, 0
	124 JumpIfEqual {191}
	125 Move X1, X31
	126 Call ParameterInfo.get_IsOptional, X0
	127 Move TEMP, X0
	128 And TEMP, TEMP, 1
	129 Compare TEMP, 1
	130 JumpIfEqual {182}
	131 Move X8, [X20+24]
	132 Compare X8, 0
	133 JumpIfEqual {183}
	134 Move W10, [X19+24]
	135 Subtract W9, W8, 1
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Compare W8, 0
	138 JumpIfEqual {70}
	139 Add X8, X20, W9
	140 Move X19, [X8+32]
	141 Compare X19, 0
	142 JumpIfEqual {191}
	143 Move X8, [X19]
	144 Move X0, X19
	145 Move X9, [X8+472]
	146 Move X1, [X8+480]
	147 NotImplemented "Instruction BLR not yet implemented."
	148 Compare X0, 0
	149 JumpIfEqual {191}
	150 Move X1, X31
	151 Call Type.get_IsArray, X0
	152 Move TEMP, X0
	153 And TEMP, TEMP, 1
	154 Compare TEMP, 1
	155 JumpIfNotEqual {183}
	156 Move X8, 0xD3F000
	157 Move X8, [X8+1728]
	158 Move X0, [X8]
	159 Move X8, 0xD77000
	160 Move X8, [X8+3496]
	161 Move W9, [X0+224]
	162 Move X20, [X8]
	163 Compare W9, 0
	164 JumpIfNotEqual {166}
	165 Call 0x1C17DFC
	166 Move X0, X20
	167 Move X1, X31
	168 Call Type.GetTypeFromHandle, X0
	169 Move X8, [X19]
	170 Move X1, X0
	171 Move X0, X19
	172 Move W2, W31
	173 Move X9, [X8+520]
	174 Move X3, [X8+528]
	175 NotImplemented "Instruction BLR not yet implemented."
	176 Move W8, W0
	177 Move W0, W31
	178 Move TEMP, X8
	179 And TEMP, TEMP, 1
	180 Compare TEMP, 1
	181 JumpIfNotEqual {184}
	182 Move W0, 1
	183 Move W0, W31
	184 Move X20, [X31+32]
	185 Move X19, [X31+40]
	186 Move X22, [X31+16]
	187 Move X21, [X31+24]
	188 Move X30, [X31+48]
	189 Move X23, [X31+56]
	190 Return X0
	191 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x033B5D9C LDR W1, [X0 + 0x18]
	0x033B5DA0 MOV X21, X0
	0x033B5DA4 ADD X0, X31, 0x10
	0x033B5DA8 LDR X2, [X8]
	0x033B5DAC BL 0x2EF1B28
	0x033B5DB0 LDR W8, [X21 + 0x18]
	0x033B5DB4 CMP W8, 0x1
	0x033B5DB8 B.LT 0x33B5E5C
	0x033B5DBC ADRP X28, 0xD77000
	0x033B5DC0 LDRB W26, [X31 + 0x34]
	0x033B5DC4 LDRB W27, [X31 + 0x30]
	0x033B5DC8 LDR X28, [X28 + 0xB8]
	0x033B5DCC MOV X25, X31
	0x033B5DD0 EOR W29, W22, 0x2
	0x033B5DD4 ADD X19, X21, 0x20
	0x033B5DD8 CMP W25, W8

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Call TypeInfo..ctor, X0
	005 Move X0, 0xD3F000
	006 Move X0, [X0+2880]
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X1, X31
	010 Move X19, X0
	011 Call NotSupportedException..ctor, X0
	012 Move X0, 0xD78000
	013 Move X0, [X0+104]
	014 Call 0x1C17D08
	015 Move X1, X0
	016 Move X0, X19
	017 Call 0x1C17DEC

Method: System.RuntimeType/ListBuilder`1<System.Reflection.MethodInfo> GetMethodCandidates(System.String name, System.Reflection.BindingFlags bindingAttr, System.Reflection.CallingConventions callConv, System.Type[] types, System.Int32 genericParamCount, System.Boolean allowPrefixLookup)

Disassembly:
	0x033B5DDC B.CS 0x33B5E90
	0x033B5DE0 LDR X22, [X19, X25, LSL #3]
	0x033B5DE4 CBZ X22, 0x33B5E94
	0x033B5DE8 MOV X0, X22
	0x033B5DEC MOV X1, X31
	0x033B5DF0 BL 0x32D9320
	0x033B5DF4 MOV W23, W0
	0x033B5DF8 MOV X0, X22
	0x033B5DFC MOV X1, X31
	0x033B5E00 BL 0x32D9320
	0x033B5E04 AND W8, W23, W29, 0x0
	0x033B5E08 CMP W8, W0
	0x033B5E0C B.NE 0x33B5E4C
	0x033B5E10 CBZ W26, 0x33B5E3C
	0x033B5E14 LDR X0, [X24]
	0x033B5E18 LDR W8, [X0 + 0xE0]
	0x033B5E1C CBNZ W8, 0x33B5E24
	0x033B5E20 BL 0x1C16DFC
	0x033B5E24 CMP W27, 0x0
	0x033B5E28 CSET W2, NE
	0x033B5E2C MOV X0, X22
	0x033B5E30 MOV X1, X20
	0x033B5E34 BL 0x33B46D0
	0x033B5E38 TBZ X0, 0x0, 0x33B5E4C
	0x033B5E3C LDR X2, [X28]
	0x033B5E40 ADD X0, X31, 0x10
	0x033B5E44 MOV X1, X22
	0x033B5E48 BL 0x2EF1D14
	0x033B5E4C LDR W8, [X21 + 0x18]
	0x033B5E50 ADD X25, X25, 0x1
	0x033B5E54 CMP W25, W8
	0x033B5E58 B.LT 0x33B5DD8
	0x033B5E5C LDR X8, [X31 + 0x20]
	0x033B5E60 LDR V0, [X31 + 0x1]
	0x033B5E64 LDR X9, [X31 + 0x8]
	0x033B5E68 LDP X20, X19, [X31 + 0x90]
	0x033B5E6C LDP X22, X21, [X31 + 0x80]
	0x033B5E70 LDP X24, X23, [X31 + 0x70]
	0x033B5E74 LDP X26, X25, [X31 + 0x60]
	0x033B5E78 LDP X28, X27, [X31 + 0x50]
	0x033B5E7C LDP X29, X30, [X31 + 0x40]
	0x033B5E80 STR X8, [X9 + 0x10]
	0x033B5E84 STR V0, [X9]
	0x033B5E88 ADD X31, X31, 0xA0
	0x033B5E8C RET
	0x033B5E90 BL 0x1C16F28
	0x033B5E94 BL 0x1C16F20
	0x033B5E98 SUB X31, X31, 0x50
	0x033B5E9C STP X30, X23, [X31 + 0x20]
	0x033B5EA0 STP X22, X21, [X31 + 0x30]
	0x033B5EA4 STP X20, X19, [X31 + 0x40]
	0x033B5EA8 ADRP X23, 0x1028000
	0x033B5EAC LDRB W8, [X23 + 0x1FE]
	0x033B5EB0 MOV X22, X4
	0x033B5EB4 MOV W19, W3
	0x033B5EB8 MOV X21, X1
	0x033B5EBC MOV X20, X0
	0x033B5EC0 TBNZ X8, 0x0, 0x33B5EE4
	0x033B5EC4 ADRP X0, 0xD77000
	0x033B5EC8 LDR X0, [X0 + 0xC8]
	0x033B5ECC BL 0x1C16CF4
	0x033B5ED0 ADRP X0, 0xD77000
	0x033B5ED4 LDR X0, [X0 + 0xD0]
	0x033B5ED8 BL 0x1C16CF4
	0x033B5EDC MOVZ W8, 0x1
	0x033B5EE0 STRB W8, [X23 + 0x1FE]
	0x033B5EE4 ADD X0, X31, 0x18
	0x033B5EE8 MOV X1, X22
	0x033B5EEC MOV X2, X31
	0x033B5EF0 STP X31, X31, [X31 + 0x10]
	0x033B5EF4 STP X31, X31, [X31]
	0x033B5EF8 BL 0x33CBEF0
	0x033B5EFC ADD X0, X31, 0x8
	0x033B5F00 MOV X1, X21
	0x033B5F04 MOV X2, X31
	0x033B5F08 BL 0x320B030
	0x033B5F0C ADD X0, X31, 0x8
	0x033B5F10 MOV X1, X31
	0x033B5F14 BL 0x320B21C
	0x033B5F18 MOV X1, X0
	0x033B5F1C MOV X0, X20
	0x033B5F20 MOV W2, W19
	0x033B5F24 BL 0x1C3A228
	0x033B5F28 MOV X1, X0
	0x033B5F2C ADD X0, X31, 0x0
	0x033B5F30 MOV X2, X31
	0x033B5F34 BL 0x320B1A0
	0x033B5F38 ADD X0, X31, 0x0
	0x033B5F3C MOV X1, X31
	0x033B5F40 BL 0x320B1DC
	0x033B5F44 ADRP X8, 0xD77000
	0x033B5F48 LDR X8, [X8 + 0xC8]
	0x033B5F4C MOV W21, W0
	0x033B5F50 LDR X0, [X8]
	0x033B5F54 MOV W1, W21
	0x033B5F58 BL 0x1C16D6C
	0x033B5F5C MOV X19, X0
	0x033B5F60 CMP W21, 0x1
	0x033B5F64 B.LT 0x33B5FCC
	0x033B5F68 ADRP X22, 0xD77000
	0x033B5F6C LDR X22, [X22 + 0xD0]
	0x033B5F70 MOV X20, X31
	0x033B5F74 MOV W21, W21
	0x033B5F78 ADD X23, X19, 0x20
	0x033B5F7C ADD X0, X31, 0x0
	0x033B5F80 MOV W1, W20
	0x033B5F84 MOV X2, X31
	0x033B5F88 BL 0x320B1F8
	0x033B5F8C LDR X1, [X31 + 0x18]
	0x033B5F90 MOV X2, X31
	0x033B5F94 BL 0x32CCC24
	0x033B5F98 CBZ X19, 0x33B6004
	0x033B5F9C CBZ X0, 0x33B5FB0
	0x033B5FA0 LDR X1, [X22]
	0x033B5FA4 LDR X8, [X0]
	0x033B5FA8 CMP X8, X1
	0x033B5FAC B.NE 0x33B600C
	0x033B5FB0 LDR W8, [X19 + 0x18]
	0x033B5FB4 CMP X20, X8
	0x033B5FB8 B.CS 0x33B6008
	0x033B5FBC STR X0, [X23, X20, LSL #3]
	0x033B5FC0 ADD X20, X20, 0x1
	0x033B5FC4 CMP X21, X20
	0x033B5FC8 B.NE 0x33B5F7C
	0x033B5FCC MOV X21, X31
	0x033B5FD0 ADD X0, X31, 0x0
	0x033B5FD4 MOV X1, X31
	0x033B5FD8 BL 0x320B1C0
	0x033B5FDC CBNZ X21, 0x33B6010
	0x033B5FE0 ADD X0, X31, 0x8
	0x033B5FE4 MOV X1, X31
	0x033B5FE8 BL 0x320B264
	0x033B5FEC MOV X0, X19
	0x033B5FF0 LDP X20, X19, [X31 + 0x40]
	0x033B5FF4 LDP X22, X21, [X31 + 0x30]
	0x033B5FF8 LDP X30, X23, [X31 + 0x20]
	0x033B5FFC ADD X31, X31, 0x50
	0x033B6000 RET
	0x033B6004 BL 0x1C16F20
	0x033B6008 BL 0x1C16F28
	0x033B600C BL 0x1C171E0
	0x033B6010 MOV X0, X21
	0x033B6014 BL 0x1C16F18
	0x033B6018 B 0x33B6044
	0x033B601C B 0x33B6044
	0x033B6020 B 0x33B6030
	0x033B6024 MOV X20, X1
	0x033B6028 MOV X22, X0
	0x033B602C B 0x33B6084
	0x033B6030 MOV X20, X1
	0x033B6034 MOV X22, X0

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+80], X29
	003 Move [X31+88], X30
	004 Move [X31+96], X28
	005 Move [X31+104], X27
	006 Move [X31+112], X26
	007 Move [X31+120], X25
	008 Move [X31+128], X24
	009 Move [X31+136], X23
	010 Move [X31+144], X22
	011 Move [X31+152], X21
	012 Move [X31+160], X20
	013 Move [X31+168], X19
	014 Move X21, 0x1029000
	015 Move [X31+8], X8
	016 Move W8, [X21+456]
	017 Move W24, W6
	018 Move W19, W5
	019 Move X20, X4
	020 Move W22, W3
	021 Move W23, W2
	022 Move X25, X0
	023 Move [X31+72], X1
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {39}
	028 Move X0, 0xD78000
	029 Move X0, [X0+112]
	030 Call 0x1C17CF4
	031 Move X0, 0xD78000
	032 Move X0, [X0+120]
	033 Call 0x1C17CF4
	034 Move X0, 0xD68000
	035 Move X0, [X0+1256]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X21+456], W8
	039 Move [X31+68], W31
	040 Move [X31+64], W31
	041 Move [X31+60], W31
	042 Move X8, 0xD68000
	043 Move X8, [X8+1256]
	044 Move [X31+32], X31
	045 Move [X31+40], X31
	046 Move [X31+48], X31
	047 Move X0, [X8]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 And W2, W24, 1
	053 Add X1, X31, 72
	054 Add X3, X31, 68
	055 Add X4, X31, 64
	056 Add X5, X31, 60
	057 Move W0, W23
	058 Call RuntimeType.FilterHelper, X0, X1, X2, X3, X4, X5
	059 Move X1, [X31+72]
	060 Move W3, [X31+60]
	061 Move X0, X25
	062 Move W2, W23
	063 Move X4, X25
	064 Move [X31+24], X1
	065 Call RuntimeType.GetMethodsByName, X0, X1, X2, X3, X4
	066 Compare X0, 0
	067 JumpIfEqual {174}
	068 Move X8, 0xD78000
	069 Move X8, [X8+120]
	070 Move W1, [X0+24]
	071 Move X25, X0
	072 Add X0, X31, 32
	073 Move X2, [X8]
	074 Call 0x2EF2B28, X0, X1
	075 Move X8, [X25+24]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move W29, [X31+68]
	078 Move W9, [X31+64]
	079 Move X28, X31
	080 And X8, X8, 0
	081 Add X21, X25, 32
	082 Move [X31+20], W9
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X26, [X21]
	085 Add W31, W19, 1
	086 Compare X26, 0
	087 JumpIfEqual {174}
	088 Move X8, [X26]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 NotImplemented "Instruction CSET not yet implemented."
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X9, [X8+728]
	093 Move X1, [X8+736]
	094 Move X0, X26
	095 NotImplemented "Instruction CSET not yet implemented."
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Or W9, W24, W0
	098 And W8, W27, W0
	099 And W9, W9, 1
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X8, [X26]
	102 Move X0, X26
	103 Move X9, [X8+760]
	104 Move X1, [X8+768]
	105 NotImplemented "Instruction BLR not yet implemented."
	106 Compare X0, 0
	107 JumpIfEqual {174}
	108 Move W8, [X0+24]
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X8, 0xD68000
	111 Move X8, [X8+1256]
	112 Move X0, [X8]
	113 Move W8, [X0+224]
	114 Compare W8, 0
	115 JumpIfNotEqual {117}
	116 Call 0x1C17DFC
	117 Move X0, X26
	118 Move W1, W23
	119 Move W2, W22
	120 Move X3, X20
	121 Call RuntimeType.FilterApplyMethodInfo, X0, X1, X2, X3
	122 Move TEMP, X0
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfNotEqual {151}
	126 Compare W29, 0
	127 JumpIfEqual {145}
	128 Move X8, 0xD68000
	129 Move X8, [X8+1256]
	130 Move X0, [X8]
	131 Move W8, [X0+224]
	132 Compare W8, 0
	133 JumpIfNotEqual {135}
	134 Call 0x1C17DFC
	135 Move W8, [X31+20]
	136 Move X1, [X31+24]
	137 Move X0, X26
	138 NotImplemented "Instruction CMP not yet implemented."
	139 NotImplemented "Instruction CSET not yet implemented."
	140 Call RuntimeType.FilterApplyPrefixLookup, X0, X1, X2
	141 Move TEMP, X0
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfNotEqual {151}
	145 Move X8, 0xD78000
	146 Move X8, [X8+112]
	147 Add X0, X31, 32
	148 Move X1, X26
	149 Move X2, [X8]
	150 Call 0x2EF2D14, X0, X1
	151 Move W8, [X25+24]
	152 Add X28, X28, 1
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move X8, [X31+48]
	155 Move V0, [X31+2]
	156 Move X9, [X31+8]
	157 Move X20, [X31+160]
	158 Move X19, [X31+168]
	159 Move X22, [X31+144]
	160 Move X21, [X31+152]
	161 Move X24, [X31+128]
	162 Move X23, [X31+136]
	163 Move X26, [X31+112]
	164 Move X25, [X31+120]
	165 Move X28, [X31+96]
	166 Move X27, [X31+104]
	167 Move X29, [X31+80]
	168 Move X30, [X31+88]
	169 Move [X9+16], X8
	170 Move [X9], V0
	171 Add X31, X31, 176
	172 Return X0
	173 Call 0x1C17F28
	174 Call 0x1C17F20

Method: System.RuntimeType/ListBuilder`1<System.Reflection.ConstructorInfo> GetConstructorCandidates(System.String name, System.Reflection.BindingFlags bindingAttr, System.Reflection.CallingConventions callConv, System.Type[] types, System.Boolean allowPrefixLookup)

Disassembly:
	0x033B6320 ADD X0, X31, 0x28
	0x033B6324 MOV X1, X23
	0x033B6328 MOV X2, X31
	0x033B632C STR X31, [X31 + 0x28]
	0x033B6330 STP X31, X31, [X31 + 0x10]
	0x033B6334 STR X31, [X31 + 0x8]
	0x033B6338 BL 0x33CBEF0
	0x033B633C ADD X0, X31, 0x10
	0x033B6340 MOV X1, X22
	0x033B6344 MOV X2, X31
	0x033B6348 BL 0x320B030
	0x033B634C ADD X0, X31, 0x10
	0x033B6350 MOV X1, X31
	0x033B6354 BL 0x320B21C
	0x033B6358 MOV X1, X0
	0x033B635C MOV X0, X21
	0x033B6360 MOV W2, W20
	0x033B6364 MOV W3, W19
	0x033B6368 BL 0x1C3AA10
	0x033B636C MOV X1, X0
	0x033B6370 ADD X0, X31, 0x8
	0x033B6374 MOV X2, X31
	0x033B6378 BL 0x320B1A0
	0x033B637C ADD X0, X31, 0x8
	0x033B6380 MOV X1, X31
	0x033B6384 BL 0x320B1DC
	0x033B6388 ADRP X8, 0xD76000
	0x033B638C LDR X8, [X8 + 0xE8]
	0x033B6390 MOV W21, W0
	0x033B6394 LDR X0, [X8]
	0x033B6398 MOV W1, W21
	0x033B639C BL 0x1C16D6C
	0x033B63A0 MOV X19, X0
	0x033B63A4 CMP W21, 0x1
	0x033B63A8 B.LT 0x33B6470
	0x033B63AC ADRP X22, 0xD6E000
	0x033B63B0 LDR X22, [X22 + 0xBB0]
	0x033B63B4 MOV X20, X31
	0x033B63B8 MOV W23, W21
	0x033B63BC ADD X24, X19, 0x20
	0x033B63C0 ADD X0, X31, 0x8
	0x033B63C4 MOV W1, W20
	0x033B63C8 MOV X2, X31
	0x033B63CC BL 0x320B1F8
	0x033B63D0 LDR X1, [X31 + 0x28]
	0x033B63D4 MOV X2, X31
	0x033B63D8 BL 0x32CD0A8
	0x033B63DC CBZ X19, 0x33B64BC
	0x033B63E0 MOV X21, X0
	0x033B63E4 CBZ X0, 0x33B6454
	0x033B63E8 LDR X8, [X21]
	0x033B63EC LDR X1, [X22]
	0x033B63F0 LDRB W10, [X8 + 0x130]
	0x033B63F4 LDRB W9, [X1 + 0x130]
	0x033B63F8 CMP W10, W9
	0x033B63FC B.CC 0x33B64B4
	0x033B6400 LDR X8, [X8 + 0xC8]
	0x033B6404 ADD X8, X8, X9, 0x3, LSL
	0x033B6408 LDUR X8, [X8 - 0x8]
	0x033B640C CMP X8, X1
	0x033B6410 B.NE 0x33B64B4
	0x033B6414 LDR X8, [X19]
	0x033B6418 LDR X1, [X8 + 0x40]
	0x033B641C MOV X0, X21
	0x033B6420 BL 0x1C16E00
	0x033B6424 CBZ X0, 0x33B64C4
	0x033B6428 LDR X8, [X21]
	0x033B642C LDR X1, [X22]
	0x033B6430 LDRB W10, [X8 + 0x130]
	0x033B6434 LDRB W9, [X1 + 0x130]
	0x033B6438 CMP W10, W9
	0x033B643C B.CC 0x33B64AC
	0x033B6440 LDR X8, [X8 + 0xC8]
	0x033B6444 ADD X8, X8, X9, 0x3, LSL
	0x033B6448 LDUR X8, [X8 - 0x8]
	0x033B644C CMP X8, X1
	0x033B6450 B.NE 0x33B64AC
	0x033B6454 LDR W8, [X19 + 0x18]
	0x033B6458 CMP X20, X8
	0x033B645C B.CS 0x33B64C0
	0x033B6460 STR X21, [X24, X20, LSL #3]
	0x033B6464 ADD X20, X20, 0x1
	0x033B6468 CMP X23, X20
	0x033B646C B.NE 0x33B63C0
	0x033B6470 MOV X22, X31
	0x033B6474 ADD X0, X31, 0x8
	0x033B6478 MOV X1, X31
	0x033B647C BL 0x320B1C0
	0x033B6480 CBNZ X22, 0x33B64D0
	0x033B6484 ADD X0, X31, 0x10
	0x033B6488 MOV X1, X31
	0x033B648C BL 0x320B264
	0x033B6490 MOV X0, X19
	0x033B6494 LDP X20, X19, [X31 + 0x50]
	0x033B6498 LDP X22, X21, [X31 + 0x40]
	0x033B649C LDP X24, X23, [X31 + 0x30]
	0x033B64A0 LDR X30, [X31 + 0x20]
	0x033B64A4 ADD X31, X31, 0x60
	0x033B64A8 RET
	0x033B64AC MOV X0, X21
	0x033B64B0 BL 0x1C171E0
	0x033B64B4 MOV X0, X21
	0x033B64B8 BL 0x1C171E0
	0x033B64BC BL 0x1C16F20
	0x033B64C0 BL 0x1C16F28
	0x033B64C4 BL 0x1C16F44
	0x033B64C8 MOV X1, X31
	0x033B64CC BL 0x1C16DEC
	0x033B64D0 MOV X0, X22
	0x033B64D4 BL 0x1C16F18
	0x033B64D8 B 0x33B6504
	0x033B64DC B 0x33B6504
	0x033B64E0 B 0x33B64F0
	0x033B64E4 MOV X21, X1
	0x033B64E8 MOV X20, X0
	0x033B64EC B 0x33B6540
	0x033B64F0 MOV X21, X1
	0x033B64F4 MOV X20, X0
	0x033B64F8 B 0x33B653C
	0x033B64FC B 0x33B6504
	0x033B6500 B 0x33B6504
	0x033B6504 CMP W1, 0x1
	0x033B6508 B.NE 0x33B6520
	0x033B650C BL 0x3EB1AD0
	0x033B6510 LDR X22, [X0]
	0x033B6514 BL 0x3EB1AE0
	0x033B6518 MOV X19, X31
	0x033B651C B 0x33B6474
	0x033B6520 MOV X21, X1
	0x033B6524 MOV X20, X0
	0x033B6528 MOV X22, X31
	0x033B652C ADD X0, X31, 0x8
	0x033B6530 MOV X1, X31
	0x033B6534 BL 0x320B1C0
	0x033B6538 CBNZ X22, 0x33B6578
	0x033B653C MOV X19, X31
	0x033B6540 CMP W21, 0x1
	0x033B6544 B.NE 0x33B6570
	0x033B6548 MOV X0, X20
	0x033B654C BL 0x3EB1AD0
	0x033B6550 LDR X21, [X0]
	0x033B6554 BL 0x3EB1AE0
	0x033B6558 ADD X0, X31, 0x10
	0x033B655C MOV X1, X31
	0x033B6560 BL 0x320B264
	0x033B6564 CBZ X21, 0x33B6490
	0x033B6568 MOV X0, X21
	0x033B656C BL 0x1C16F18
	0x033B6570 MOV X21, X31
	0x033B6574 B 0x33B6590
	0x033B6578 MOV X0, X22
	0x033B657C BL 0x1C16F18
	0x033B6580 MOV X21, X1
	0x033B6584 MOV X20, X0
	0x033B6588 B 0x33B652C
	0x033B658C MOV X20, X0
	0x033B6590 ADD X0, X31, 0x10
	0x033B6594 MOV X1, X31
	0x033B6598 BL 0x320B264

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X19, 0x1028000
	015 Move [X31+56], X1
	016 Move X26, 0xD67000
	017 Move X28, X8
	018 Move W8, [X19+457]
	019 Move X26, [X26+1256]
	020 Move W23, W5
	021 Move X20, X4
	022 Move W21, W3
	023 Move W22, W2
	024 Move X24, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {43}
	029 Move X0, 0xD68000
	030 Move X0, [X0+2424]
	031 Call 0x1C17CF4
	032 Move X0, 0xD77000
	033 Move X0, [X0+136]
	034 Call 0x1C17CF4
	035 Move X0, 0xD77000
	036 Move X0, [X0+144]
	037 Call 0x1C17CF4
	038 Move X0, 0xD67000
	039 Move X0, [X0+1256]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X19+457], W8
	043 Move X0, [X26]
	044 Move [X31+52], W31
	045 Move [X31+48], W31
	046 Move [X31+44], W31
	047 Move [X31+16], X31
	048 Move [X31+24], X31
	049 Move [X31+32], X31
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move X25, 0xD77000
	055 Move X25, [X25+144]
	056 And W2, W23, 1
	057 Add X1, X31, 56
	058 Add X3, X31, 52
	059 Add X4, X31, 48
	060 Add X5, X31, 44
	061 Move W0, W22
	062 Call RuntimeType.FilterHelper, X0, X1, X2, X3, X4, X5
	063 Move W27, [X31+52]
	064 Move X23, [X31+56]
	065 Compare W27, 0
	066 JumpIfNotEqual {72}
	067 Compare X23, 0
	068 JumpIfEqual {72}
	069 Move W8, [X23+16]
	070 Compare W8, 0
	071 JumpIfEqual {111}
	072 Move X0, X23
	073 Move X1, X31
	074 Call String.IsNullOrEmpty, X0
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfEqual {118}
	079 Move X19, 0xD68000
	080 Move X19, [X19+2424]
	081 Move X0, [X19]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {87}
	085 Call 0x1C17DFC
	086 Move X0, [X19]
	087 Move X8, [X0+184]
	088 Move X0, X23
	089 Move X2, X31
	090 Move X1, [X8]
	091 Call String.op_Inequality, X0, X1
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfNotEqual {118}
	096 Move X0, [X19]
	097 Move W8, [X0+224]
	098 Compare W8, 0
	099 JumpIfNotEqual {102}
	100 Call 0x1C17DFC
	101 Move X0, [X19]
	102 Move X8, [X0+184]
	103 Move X0, X23
	104 Move X2, X31
	105 Move X1, [X8+8]
	106 Call String.op_Inequality, X0, X1
	107 Move TEMP, X0
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfNotEqual {118}
	111 Move X2, [X25]
	112 Move X0, X28
	113 Move W1, W31
	114 Move [X28], X31
	115 Move [X28+8], X31
	116 Move [X28+16], X31
	117 Call 0x2EF2B28, X0, X1
	118 Move X0, X24
	119 Move W1, W22
	120 Move X2, X24
	121 Move [X31+8], X28
	122 Call RuntimeType.GetConstructors_internal, X0, X1, X2
	123 Compare X0, 0
	124 JumpIfEqual {197}
	125 Move W1, [X0+24]
	126 Move X2, [X25]
	127 Move X24, X0
	128 Add X0, X31, 16
	129 Call 0x2EF2B28, X0, X1
	130 Move X8, [X24+24]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move W29, [X31+48]
	133 Move X28, X31
	134 And X8, X8, 0
	135 Add X19, X24, 32
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move X0, [X26]
	138 Move X25, [X19]
	139 Move W8, [X0+224]
	140 Compare W8, 0
	141 JumpIfNotEqual {143}
	142 Call 0x1C17DFC
	143 Move X0, X25
	144 Move W1, W22
	145 Move W2, W21
	146 Move X3, X20
	147 Call RuntimeType.FilterApplyConstructorInfo, X0, X1, X2, X3
	148 Move TEMP, X0
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfNotEqual {174}
	152 Compare W27, 0
	153 JumpIfEqual {168}
	154 Move X0, [X26]
	155 Move W8, [X0+224]
	156 Compare W8, 0
	157 JumpIfNotEqual {159}
	158 Call 0x1C17DFC
	159 NotImplemented "Instruction CMP not yet implemented."
	160 NotImplemented "Instruction CSET not yet implemented."
	161 Move X0, X25
	162 Move X1, X23
	163 Call RuntimeType.FilterApplyPrefixLookup, X0, X1, X2
	164 Move TEMP, X0
	165 And TEMP, TEMP, 1
	166 Compare TEMP, 1
	167 JumpIfNotEqual {174}
	168 Move X8, 0xD77000
	169 Move X8, [X8+136]
	170 Add X0, X31, 16
	171 Move X1, X25
	172 Move X2, [X8]
	173 Call 0x2EF2D14, X0, X1
	174 Move W8, [X24+24]
	175 Add X28, X28, 1
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Move X8, [X31+32]
	178 Move V0, [X31+1]
	179 Move X9, [X31+8]
	180 Move [X9+16], X8
	181 Move [X9], V0
	182 Move X20, [X31+144]
	183 Move X19, [X31+152]
	184 Move X22, [X31+128]
	185 Move X21, [X31+136]
	186 Move X24, [X31+112]
	187 Move X23, [X31+120]
	188 Move X26, [X31+96]
	189 Move X25, [X31+104]
	190 Move X28, [X31+80]
	191 Move X27, [X31+88]
	192 Move X29, [X31+64]
	193 Move X30, [X31+72]
	194 Add X31, X31, 160
	195 Return X0
	196 Call 0x1C17F28
	197 Call 0x1C17F20

Method: System.RuntimeType/ListBuilder`1<System.Reflection.PropertyInfo> GetPropertyCandidates(System.String name, System.Reflection.BindingFlags bindingAttr, System.Type[] types, System.Boolean allowPrefixLookup)

Disassembly:
	0x033B67D4 STRB W8, [X23 + 0x1FF]
	0x033B67D8 STP X31, X31, [X31 + 0x10]
	0x033B67DC STR X31, [X31 + 0x8]
	0x033B67E0 CBZ X22, 0x33B6840
	0x033B67E4 MOV X0, X22
	0x033B67E8 MOV X1, X31
	0x033B67EC BL 0x33D2EDC
	0x033B67F0 CBZ X0, 0x33B6A18
	0x033B67F4 ADRP X10, 0xD76000
	0x033B67F8 LDR X8, [X0]
	0x033B67FC LDR X10, [X10 + 0x100]
	0x033B6800 MOV X22, X0
	0x033B6804 LDRH W9, [X8 + 0x12E]
	0x033B6808 LDR X1, [X10]
	0x033B680C CBZ X9, 0x33B6830
	0x033B6810 LDR X10, [X8 + 0xB0]
	0x033B6814 ADD X10, X10, 0x8
	0x033B6818 LDUR X11, [X10 - 0x8]
	0x033B681C CMP X11, X1
	0x033B6820 B.EQ 0x33B6848
	0x033B6824 SUBS X9, X9, 0x1
	0x033B6828 ADD X10, X10, 0x10
	0x033B682C B.NE 0x33B6818
	0x033B6830 MOV X0, X22
	0x033B6834 MOV W2, W31
	0x033B6838 BL 0x1C5C788
	0x033B683C B 0x33B6854
	0x033B6840 MOV X1, X31
	0x033B6844 B 0x33B6864
	0x033B6848 LDRSW X9, [X10]
	0x033B684C ADD X8, X8, X9, 0x4, LSL
	0x033B6850 ADD X0, X8, 0x138
	0x033B6854 LDP X8, X1, [X0]
	0x033B6858 MOV X0, X22
	0x033B685C BLR X8
	0x033B6860 MOV X1, X0
	0x033B6864 ADD X0, X31, 0x10
	0x033B6868 MOV X2, X31
	0x033B686C BL 0x320B030
	0x033B6870 ADD X0, X31, 0x10
	0x033B6874 MOV X1, X31
	0x033B6878 BL 0x320B21C
	0x033B687C MOV X1, X0
	0x033B6880 MOV X0, X21
	0x033B6884 MOV W2, W20
	0x033B6888 MOV W3, W19
	0x033B688C BL 0x1C3BC74
	0x033B6890 MOV X1, X0
	0x033B6894 ADD X0, X31, 0x8
	0x033B6898 MOV X2, X31
	0x033B689C BL 0x320B1A0
	0x033B68A0 ADD X0, X31, 0x8
	0x033B68A4 MOV X1, X31
	0x033B68A8 BL 0x320B1DC
	0x033B68AC ADRP X8, 0xD6E000
	0x033B68B0 LDR X8, [X8 + 0xBD0]
	0x033B68B4 MOV W21, W0
	0x033B68B8 LDR X0, [X8]
	0x033B68BC MOV W1, W21
	0x033B68C0 BL 0x1C16D6C
	0x033B68C4 MOV X19, X0
	0x033B68C8 CMP W21, 0x1
	0x033B68CC B.LT 0x33B69B0
	0x033B68D0 ADRP X22, 0xD3D000
	0x033B68D4 ADRP X23, 0xD66000
	0x033B68D8 LDR X22, [X22 + 0x6C0]
	0x033B68DC LDR X23, [X23 + 0x4E8]
	0x033B68E0 MOV X20, X31
	0x033B68E4 MOV W24, W21
	0x033B68E8 ADD X25, X19, 0x20
	0x033B68EC ADD X0, X31, 0x8
	0x033B68F0 MOV W1, W20
	0x033B68F4 MOV X2, X31
	0x033B68F8 BL 0x320B1F8
	0x033B68FC MOV X21, X0
	0x033B6900 LDR X0, [X22]
	0x033B6904 LDR W8, [X0 + 0xE0]
	0x033B6908 CBNZ W8, 0x33B6910
	0x033B690C BL 0x1C16DFC
	0x033B6910 MOV X0, X21
	0x033B6914 MOV X1, X31
	0x033B6918 BL 0x338C698
	0x033B691C CBZ X19, 0x33B69FC
	0x033B6920 MOV X21, X0
	0x033B6924 CBZ X0, 0x33B6994
	0x033B6928 LDR X8, [X21]
	0x033B692C LDR X1, [X23]
	0x033B6930 LDRB W10, [X8 + 0x130]
	0x033B6934 LDRB W9, [X1 + 0x130]
	0x033B6938 CMP W10, W9
	0x033B693C B.CC 0x33B69EC
	0x033B6940 LDR X8, [X8 + 0xC8]
	0x033B6944 ADD X8, X8, X9, 0x3, LSL
	0x033B6948 LDUR X8, [X8 - 0x8]
	0x033B694C CMP X8, X1
	0x033B6950 B.NE 0x33B69EC
	0x033B6954 LDR X8, [X19]
	0x033B6958 LDR X1, [X8 + 0x40]
	0x033B695C MOV X0, X21
	0x033B6960 BL 0x1C16E00
	0x033B6964 CBZ X0, 0x33B6A04
	0x033B6968 LDR X8, [X21]
	0x033B696C LDR X1, [X23]
	0x033B6970 LDRB W10, [X8 + 0x130]
	0x033B6974 LDRB W9, [X1 + 0x130]
	0x033B6978 CMP W10, W9
	0x033B697C B.CC 0x33B69F4
	0x033B6980 LDR X8, [X8 + 0xC8]
	0x033B6984 ADD X8, X8, X9, 0x3, LSL
	0x033B6988 LDUR X8, [X8 - 0x8]
	0x033B698C CMP X8, X1
	0x033B6990 B.NE 0x33B69F4
	0x033B6994 LDR W8, [X19 + 0x18]
	0x033B6998 CMP X20, X8
	0x033B699C B.CS 0x33B6A00
	0x033B69A0 STR X21, [X25, X20, LSL #3]
	0x033B69A4 ADD X20, X20, 0x1
	0x033B69A8 CMP X24, X20
	0x033B69AC B.NE 0x33B68EC
	0x033B69B0 MOV X22, X31
	0x033B69B4 ADD X0, X31, 0x8
	0x033B69B8 MOV X1, X31
	0x033B69BC BL 0x320B1C0
	0x033B69C0 CBNZ X22, 0x33B6A10
	0x033B69C4 ADD X0, X31, 0x10
	0x033B69C8 MOV X1, X31
	0x033B69CC BL 0x320B264
	0x033B69D0 MOV X0, X19
	0x033B69D4 LDP X20, X19, [X31 + 0x50]
	0x033B69D8 LDP X22, X21, [X31 + 0x40]
	0x033B69DC LDP X24, X23, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X19, 0x1028000
	015 Move [X31+8], X8
	016 Move W8, [X19+458]
	017 Move W21, W4
	018 Move X20, X3
	019 Move W23, W2
	020 Move X22, X0
	021 Move [X31+56], X1
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {37}
	026 Move X0, 0xD77000
	027 Move X0, [X0+160]
	028 Call 0x1C17CF4
	029 Move X0, 0xD77000
	030 Move X0, [X0+168]
	031 Call 0x1C17CF4
	032 Move X0, 0xD67000
	033 Move X0, [X0+1256]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X19+458], W8
	037 Move [X31+52], W31
	038 Move [X31+48], W31
	039 Move [X31+44], W31
	040 Move X8, 0xD67000
	041 Move X8, [X8+1256]
	042 Move [X31+16], X31
	043 Move [X31+24], X31
	044 Move [X31+32], X31
	045 Move X0, [X8]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 And W2, W21, 1
	051 Add X1, X31, 56
	052 Add X3, X31, 52
	053 Add X4, X31, 48
	054 Add X5, X31, 44
	055 Move W0, W23
	056 Call RuntimeType.FilterHelper, X0, X1, X2, X3, X4, X5
	057 Move X21, [X31+56]
	058 Move W3, [X31+44]
	059 Move X0, X22
	060 Move W2, W23
	061 Move X1, X21
	062 Move X4, X22
	063 Call RuntimeType.GetPropertiesByName, X0, X1, X2, X3, X4
	064 Compare X0, 0
	065 JumpIfEqual {151}
	066 Move X8, 0xD77000
	067 Move X8, [X8+168]
	068 Move W1, [X0+24]
	069 Move X22, X0
	070 Add X0, X31, 16
	071 Move X2, [X8]
	072 Call 0x2EF2B28, X0, X1
	073 Move W8, [X22+24]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X29, 0xD77000
	076 Move W27, [X31+52]
	077 Move W28, [X31+48]
	078 Move X29, [X29+160]
	079 Move X26, X31
	080 Xor W19, W23, 2
	081 Add X25, X22, 32
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X23, [X25]
	084 Compare X23, 0
	085 JumpIfEqual {151}
	086 Move X0, X23
	087 Move X1, X31
	088 Call RuntimePropertyInfo.get_BindingFlags, X0
	089 Move W24, W0
	090 Move X0, X23
	091 Move X1, X31
	092 Call RuntimePropertyInfo.get_BindingFlags, X0
	093 And W8, W24, W19
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Compare W27, 0
	096 JumpIfEqual {113}
	097 Move X8, 0xD67000
	098 Move X8, [X8+1256]
	099 Move X0, [X8]
	100 Move W8, [X0+224]
	101 Compare W8, 0
	102 JumpIfNotEqual {104}
	103 Call 0x1C17DFC
	104 NotImplemented "Instruction CMP not yet implemented."
	105 NotImplemented "Instruction CSET not yet implemented."
	106 Move X0, X23
	107 Move X1, X21
	108 Call RuntimeType.FilterApplyPrefixLookup, X0, X1, X2
	109 Move TEMP, X0
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfNotEqual {129}
	113 Compare X20, 0
	114 JumpIfEqual {125}
	115 Move X8, [X23]
	116 Move X0, X23
	117 Move X9, [X8+600]
	118 Move X1, [X8+608]
	119 NotImplemented "Instruction BLR not yet implemented."
	120 Compare X0, 0
	121 JumpIfEqual {151}
	122 Move W8, [X0+24]
	123 Move W9, [X20+24]
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move X2, [X29]
	126 Add X0, X31, 16
	127 Move X1, X23
	128 Call 0x2EF2D14, X0, X1
	129 Move W8, [X22+24]
	130 Add X26, X26, 1
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X8, [X31+32]
	133 Move V0, [X31+1]
	134 Move X9, [X31+8]
	135 Move X20, [X31+144]
	136 Move X19, [X31+152]
	137 Move X22, [X31+128]
	138 Move X21, [X31+136]
	139 Move X24, [X31+112]
	140 Move X23, [X31+120]
	141 Move X26, [X31+96]
	142 Move X25, [X31+104]
	143 Move X28, [X31+80]
	144 Move X27, [X31+88]
	145 Move X29, [X31+64]
	146 Move X30, [X31+72]
	147 Move [X9+16], X8
	148 Move [X9], V0
	149 Add X31, X31, 160
	150 Return X0
	151 Call 0x1C17F20
	152 Call 0x1C17F28

Method: System.RuntimeType/ListBuilder`1<System.Reflection.EventInfo> GetEventCandidates(System.String name, System.Reflection.BindingFlags bindingAttr, System.Boolean allowPrefixLookup)

Disassembly:
	0x033B6CC8 MOV X20, X0
	0x033B6CCC TBNZ X8, 0x0, 0x33B6CE4
	0x033B6CD0 ADRP X0, 0xD76000
	0x033B6CD4 LDR X0, [X0 + 0x120]
	0x033B6CD8 BL 0x1C16CF4
	0x033B6CDC MOVZ W8, 0x1
	0x033B6CE0 STRB W8, [X22 + 0x1D1]
	0x033B6CE4 ADD X8, X31, 0x8
	0x033B6CE8 MOV X0, X20
	0x033B6CEC MOV X1, X31
	0x033B6CF0 MOV W2, W19
	0x033B6CF4 MOV W3, W31
	0x033B6CF8 STP X31, X31, [X31 + 0x8]
	0x033B6CFC STR X31, [X31 + 0x18]
	0x033B6D00 BL 0x33B60F8
	0x033B6D04 LDR X1, [X21]
	0x033B6D08 ADD X0, X31, 0x8
	0x033B6D0C BL 0x2EF1B6C
	0x033B6D10 LDP X20, X19, [X31 + 0x40]
	0x033B6D14 LDP X22, X21, [X31 + 0x30]
	0x033B6D18 LDR X30, [X31 + 0x20]
	0x033B6D1C ADD X31, X31, 0x50
	0x033B6D20 RET
	0x033B6D24 SUB X31, X31, 0x110
	0x033B6D28 STP X29, X30, [X31 + 0xB0]
	0x033B6D2C STP X28, X27, [X31 + 0xC0]
	0x033B6D30 STP X26, X25, [X31 + 0xD0]
	0x033B6D34 STP X24, X23, [X31 + 0xE0]
	0x033B6D38 STP X22, X21, [X31 + 0xF0]
	0x033B6D3C STP X20, X19, [X31 + 0x100]
	0x033B6D40 ADRP X28, 0x1027000
	0x033B6D44 ADRP X27, 0xD6E000
	0x033B6D48 ADRP X26, 0xD76000
	0x033B6D4C ADRP X25, 0xD76000
	0x033B6D50 ADRP X24, 0xD76000
	0x033B6D54 ADRP X23, 0xD76000
	0x033B6D58 ADRP X22, 0xD76000
	0x033B6D5C ADRP X21, 0xD76000
	0x033B6D60 LDR X27, [X27 + 0xBA8]
	0x033B6D64 LDR X26, [X26 + 0x128]
	0x033B6D68 LDRB W8, [X28 + 0x1D2]
	0x033B6D6C LDR X25, [X25 + 0x130]
	0x033B6D70 LDR X24, [X24 + 0x138]
	0x033B6D74 LDR X23, [X23 + 0x140]
	0x033B6D78 LDR X22, [X22 + 0x148]
	0x033B6D7C LDR X21, [X21 + 0x150]
	0x033B6D80 MOV W19, W1
	0x033B6D84 MOV X20, X0
	0x033B6D88 TBNZ X8, 0x0, 0x33B6E30
	0x033B6D8C ADRP X0, 0xD76000
	0x033B6D90 LDR X0, [X0 + 0x130]
	0x033B6D94 BL 0x1C16CF4
	0x033B6D98 ADRP X0, 0xD76000
	0x033B6D9C LDR X0, [X0 + 0x140]
	0x033B6DA0 BL 0x1C16CF4
	0x033B6DA4 ADRP X0, 0xD76000
	0x033B6DA8 LDR X0, [X0 + 0x138]
	0x033B6DAC BL 0x1C16CF4
	0x033B6DB0 ADRP X0, 0xD76000
	0x033B6DB4 LDR X0, [X0 + 0x128]
	0x033B6DB8 BL 0x1C16CF4
	0x033B6DBC ADRP X0, 0xD76000
	0x033B6DC0 LDR X0, [X0 + 0x150]
	0x033B6DC4 BL 0x1C16CF4
	0x033B6DC8 ADRP X0, 0xD76000
	0x033B6DCC LDR X0, [X0 + 0x148]
	0x033B6DD0 BL 0x1C16CF4
	0x033B6DD4 ADRP X0, 0xD76000
	0x033B6DD8 LDR X0, [X0 + 0x158]
	0x033B6DDC BL 0x1C16CF4
	0x033B6DE0 ADRP X0, 0xD76000
	0x033B6DE4 LDR X0, [X0 + 0x160]
	0x033B6DE8 BL 0x1C16CF4
	0x033B6DEC ADRP X0, 0xD76000
	0x033B6DF0 LDR X0, [X0 + 0x168]
	0x033B6DF4 BL 0x1C16CF4
	0x033B6DF8 ADRP X0, 0xD76000
	0x033B6DFC LDR X0, [X0 + 0x170]
	0x033B6E00 BL 0x1C16CF4
	0x033B6E04 ADRP X0, 0xD76000
	0x033B6E08 LDR X0, [X0 + 0x178]
	0x033B6E0C BL 0x1C16CF4
	0x033B6E10 ADRP X0, 0xD76000
	0x033B6E14 LDR X0, [X0 + 0x180]
	0x033B6E18 BL 0x1C16CF4
	0x033B6E1C ADRP X0, 0xD6E000
	0x033B6E20 LDR X0, [X0 + 0xBA8]
	0x033B6E24 BL 0x1C16CF4
	0x033B6E28 MOVZ W8, 0x1
	0x033B6E2C STRB W8, [X28 + 0x1D2]
	0x033B6E30 ADD X8, X31, 0x98
	0x033B6E34 MOVZ W3, 0x3
	0x033B6E38 MOVN W5, 0x0
	0x033B6E3C MOV X0, X20
	0x033B6E40 MOV X1, X31
	0x033B6E44 MOV W2, W19
	0x033B6E48 MOV X4, X31
	0x033B6E4C MOV W6, W31
	0x033B6E50 STP X31, X31, [X31 + 0x98]
	0x033B6E54 STR X31, [X31 + 0xA8]
	0x033B6E58 STP X31, X31, [X31 + 0x80]
	0x033B6E5C STR X31, [X31 + 0x90]
	0x033B6E60 STP X31, X31, [X31 + 0x68]
	0x033B6E64 STR X31, [X31 + 0x78]
	0x033B6E68 STP X31, X31, [X31 + 0x50]
	0x033B6E6C STR X31, [X31 + 0x60]
	0x033B6E70 STP X31, X31, [X31 + 0x38]
	0x033B6E74 STR X31, [X31 + 0x48]
	0x033B6E78 STP X31, X31, [X31 + 0x20]
	0x033B6E7C STR X31, [X31 + 0x30]
	0x033B6E80 BL 0x33B4DDC
	0x033B6E84 ADD X8, X31, 0x8
	0x033B6E88 MOVZ W3, 0x3
	0x033B6E8C MOV X0, X20
	0x033B6E90 MOV X1, X31
	0x033B6E94 MOV W2, W19

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move [X31+8], X8
	015 Move X19, 0x1028000
	016 Move [X31+56], X1
	017 Move X24, 0xD67000
	018 Move W8, [X19+459]
	019 Move X24, [X24+1256]
	020 Move W20, W3
	021 Move W22, W2
	022 Move X21, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {38}
	027 Move X0, 0xD77000
	028 Move X0, [X0+184]
	029 Call 0x1C17CF4
	030 Move X0, 0xD77000
	031 Move X0, [X0+192]
	032 Call 0x1C17CF4
	033 Move X0, 0xD67000
	034 Move X0, [X0+1256]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X19+459], W8
	038 Move X0, [X24]
	039 Move [X31+52], W31
	040 Move [X31+48], W31
	041 Move [X31+44], W31
	042 Move [X31+16], X31
	043 Move [X31+24], X31
	044 Move [X31+32], X31
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 And W2, W20, 1
	050 Add X1, X31, 56
	051 Add X3, X31, 52
	052 Add X4, X31, 48
	053 Add X5, X31, 44
	054 Move W0, W22
	055 Call RuntimeType.FilterHelper, X0, X1, X2, X3, X4, X5
	056 Move X20, [X31+56]
	057 Move W3, [X31+44]
	058 Move X0, X21
	059 Move X4, X21
	060 Move X1, X20
	061 Call RuntimeType.GetEvents_internal, X0, X1, X2, X3, X4
	062 Compare X0, 0
	063 JumpIfEqual {136}
	064 Move X8, 0xD77000
	065 Move X8, [X8+192]
	066 Move W1, [X0+24]
	067 Move X21, X0
	068 Add X0, X31, 16
	069 Move X2, [X8]
	070 Call 0x2EF2B28, X0, X1
	071 Move W8, [X21+24]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X28, 0xD77000
	074 Move W26, [X31+52]
	075 Move W27, [X31+48]
	076 Move X28, [X28+184]
	077 Move X25, X31
	078 Xor W29, W22, 2
	079 Add X19, X21, 32
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X22, [X19]
	082 Compare X22, 0
	083 JumpIfEqual {136}
	084 Move X0, X22
	085 Move X1, X31
	086 Call RuntimeEventInfo.get_BindingFlags, X0
	087 Move W23, W0
	088 Move X0, X22
	089 Move X1, X31
	090 Call RuntimeEventInfo.get_BindingFlags, X0
	091 And W8, W23, W29
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Compare W26, 0
	094 JumpIfEqual {109}
	095 Move X0, [X24]
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {100}
	099 Call 0x1C17DFC
	100 NotImplemented "Instruction CMP not yet implemented."
	101 NotImplemented "Instruction CSET not yet implemented."
	102 Move X0, X22
	103 Move X1, X20
	104 Call RuntimeType.FilterApplyPrefixLookup, X0, X1, X2
	105 Move TEMP, X0
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfNotEqual {113}
	109 Move X2, [X28]
	110 Add X0, X31, 16
	111 Move X1, X22
	112 Call 0x2EF2D14, X0, X1
	113 Move W8, [X21+24]
	114 Add X25, X25, 1
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X8, [X31+32]
	117 Move V0, [X31+1]
	118 Move X9, [X31+8]
	119 Move X20, [X31+144]
	120 Move X19, [X31+152]
	121 Move X22, [X31+128]
	122 Move X21, [X31+136]
	123 Move X24, [X31+112]
	124 Move X23, [X31+120]
	125 Move X26, [X31+96]
	126 Move X25, [X31+104]
	127 Move X28, [X31+80]
	128 Move X27, [X31+88]
	129 Move X29, [X31+64]
	130 Move X30, [X31+72]
	131 Move [X9+16], X8
	132 Move [X9], V0
	133 Add X31, X31, 160
	134 Return X0
	135 Call 0x1C17F28
	136 Call 0x1C17F20

Method: System.RuntimeType/ListBuilder`1<System.Reflection.FieldInfo> GetFieldCandidates(System.String name, System.Reflection.BindingFlags bindingAttr, System.Boolean allowPrefixLookup)

Disassembly:
	0x033B70F8 CBZ X0, 0x33B723C
	0x033B70FC LDR X8, [X0]
	0x033B7100 MOV X23, X0
	0x033B7104 LDR X9, [X8 + 0x398]
	0x033B7108 LDR X1, [X8 + 0x3A0]
	0x033B710C BLR X9
	0x033B7110 CBZ X0, 0x33B7208
	0x033B7114 LDR X8, [X0 + 0x18]
	0x033B7118 CBZ X8, 0x33B7208
	0x033B711C TBNZ X21, 0x10, 0x33B713C
	0x033B7120 CBZ X22, 0x33B7184
	0x033B7124 ADRP X8, 0xD75000
	0x033B7128 LDR X8, [X8 + 0x110]
	0x033B712C ADD X0, X31, 0x20
	0x033B7130 LDR X1, [X8]
	0x033B7134 BL 0x2EF1B6C
	0x033B7138 B 0x33B71C0
	0x033B713C ADRP X8, 0xD75000
	0x033B7140 LDR X8, [X8 + 0x110]
	0x033B7144 ADD X0, X31, 0x20
	0x033B7148 LDR X1, [X8]
	0x033B714C BL 0x2EF1B6C
	0x033B7150 ADRP X8, 0xD74000
	0x033B7154 LDR X8, [X8 + 0x538]
	0x033B7158 MOV X20, X0
	0x033B715C LDR X8, [X8]
	0x033B7160 LDR W9, [X8 + 0xE0]
	0x033B7164 CBNZ W9, 0x33B7170
	0x033B7168 MOV X0, X8
	0x033B716C BL 0x1C16DFC
	0x033B7170 MOV X0, X20
	0x033B7174 MOV X1, X19
	0x033B7178 BL 0x33AD150
	0x033B717C CBNZ X0, 0x33B71E4
	0x033B7180 B 0x33B7204
	0x033B7184 ADRP X8, 0xD3C000
	0x033B7188 LDR X8, [X8 + 0x6C0]
	0x033B718C LDR X0, [X8]
	0x033B7190 LDR W8, [X0 + 0xE0]
	0x033B7194 CBNZ W8, 0x33B719C
	0x033B7198 BL 0x1C16DFC
	0x033B719C MOV X0, X31
	0x033B71A0 BL 0x33981F8
	0x033B71A4 ADRP X8, 0xD75000
	0x033B71A8 LDR X8, [X8 + 0x110]
	0x033B71AC MOV X22, X0
	0x033B71B0 ADD X0, X31, 0x20
	0x033B71B4 LDR X1, [X8]
	0x033B71B8 BL 0x2EF1B6C
	0x033B71BC CBZ X22, 0x33B723C
	0x033B71C0 LDR X8, [X22]
	0x033B71C4 MOV X2, X0
	0x033B71C8 MOV X0, X22
	0x033B71CC MOV W1, W21
	0x033B71D0 LDP X9, X5, [X8 + 0x1B8]
	0x033B71D4 MOV X3, X19
	0x033B71D8 MOV X4, X20
	0x033B71DC BLR X9
	0x033B71E0 CBZ X0, 0x33B7204
	0x033B71E4 ADRP X8, 0xD66000
	0x033B71E8 LDR X8, [X8 + 0x978]
	0x033B71EC LDR X9, [X0]
	0x033B71F0 LDR X8, [X8]
	0x033B71F4 LDRB W11, [X9 + 0x130]
	0x033B71F8 LDRB W10, [X8 + 0x130]
	0x033B71FC CMP W11, W10
	0x033B7200 B.CS 0x33B7224
	0x033B7204 MOV X23, X31
	0x033B7208 MOV X0, X23
	0x033B720C LDP X20, X19, [X31 + 0x70]
	0x033B7210 LDP X22, X21, [X31 + 0x60]
	0x033B7214 LDP X24, X23, [X31 + 0x50]
	0x033B7218 LDR X30, [X31 + 0x40]
	0x033B721C ADD X31, X31, 0x80
	0x033B7220 RET
	0x033B7224 LDR X9, [X9 + 0xC8]
	0x033B7228 ADD X9, X9, X10, 0x3, LSL
	0x033B722C LDUR X9, [X9 - 0x8]
	0x033B7230 CMP X9, X8
	0x033B7234 CSEL X23, X0, X31, EQ
	0x033B7238 B 0x33B7208
	0x033B723C BL 0x1C16F20
	0x033B7240 SUB X31, X31, 0x70
	0x033B7244 STR X30, [X31 + 0x20]
	0x033B7248 STP X26, X25, [X31 + 0x30]
	0x033B724C STP X24, X23, [X31 + 0x40]
	0x033B7250 STP X22, X21, [X31 + 0x50]
	0x033B7254 STP X20, X19, [X31 + 0x60]
	0x033B7258 ADRP X26, 0x1026000
	0x033B725C LDRB W8, [X26 + 0x1D4]
	0x033B7260 MOV X21, X6
	0x033B7264 MOV X20, X5
	0x033B7268 MOV X19, X4
	0x033B726C MOV X23, X3
	0x033B7270 MOV W22, W2
	0x033B7274 MOV X24, X1
	0x033B7278 MOV X25, X0
	0x033B727C TBNZ X8, 0x0, 0x33B72C4
	0x033B7280 ADRP X0, 0xD74000
	0x033B7284 LDR X0, [X0 + 0x538]
	0x033B7288 BL 0x1C16CF4
	0x033B728C ADRP X0, 0xD75000
	0x033B7290 LDR X0, [X0 + 0x118]
	0x033B7294 BL 0x1C16CF4
	0x033B7298 ADRP X0, 0xD75000
	0x033B729C LDR X0, [X0 + 0x170]
	0x033B72A0 BL 0x1C16CF4
	0x033B72A4 ADRP X0, 0xD75000
	0x033B72A8 LDR X0, [X0 + 0x190]
	0x033B72AC BL 0x1C16CF4
	0x033B72B0 ADRP X0, 0xD3C000
	0x033B72B4 LDR X0, [X0 + 0x6C0]
	0x033B72B8 BL 0x1C16CF4
	0x033B72BC MOVZ W8, 0x1
	0x033B72C0 STRB W8, [X26 + 0x1D4]
	0x033B72C4 STP X31, X31, [X31 + 0x8]
	0x033B72C8 STR X31, [X31 + 0x18]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move [X31+8], X8
	015 Move X19, 0x1027000
	016 Move [X31+56], X1
	017 Move X24, 0xD66000
	018 Move W8, [X19+460]
	019 Move X24, [X24+1256]
	020 Move W20, W3
	021 Move W22, W2
	022 Move X21, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {38}
	027 Move X0, 0xD76000
	028 Move X0, [X0+216]
	029 Call 0x1C17CF4
	030 Move X0, 0xD76000
	031 Move X0, [X0+224]
	032 Call 0x1C17CF4
	033 Move X0, 0xD66000
	034 Move X0, [X0+1256]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X19+460], W8
	038 Move X0, [X24]
	039 Move [X31+52], W31
	040 Move [X31+48], W31
	041 Move [X31+44], W31
	042 Move [X31+16], X31
	043 Move [X31+24], X31
	044 Move [X31+32], X31
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 And W2, W20, 1
	050 Add X1, X31, 56
	051 Add X3, X31, 52
	052 Add X4, X31, 48
	053 Add X5, X31, 44
	054 Move W0, W22
	055 Call RuntimeType.FilterHelper, X0, X1, X2, X3, X4, X5
	056 Move X20, [X31+56]
	057 Move W3, [X31+44]
	058 Move X0, X21
	059 Move W2, W22
	060 Move X1, X20
	061 Move X4, X21
	062 Call RuntimeType.GetFields_internal, X0, X1, X2, X3, X4
	063 Compare X0, 0
	064 JumpIfEqual {137}
	065 Move X8, 0xD76000
	066 Move X8, [X8+224]
	067 Move W1, [X0+24]
	068 Move X21, X0
	069 Add X0, X31, 16
	070 Move X2, [X8]
	071 Call 0x2EF2B28, X0, X1
	072 Move W8, [X21+24]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X28, 0xD76000
	075 Move W26, [X31+52]
	076 Move W27, [X31+48]
	077 Move X28, [X28+216]
	078 Move X25, X31
	079 Xor W29, W22, 2
	080 Add X19, X21, 32
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X22, [X19]
	083 Compare X22, 0
	084 JumpIfEqual {137}
	085 Move X0, X22
	086 Move X1, X31
	087 Call RuntimeFieldInfo.get_BindingFlags, X0
	088 Move W23, W0
	089 Move X0, X22
	090 Move X1, X31
	091 Call RuntimeFieldInfo.get_BindingFlags, X0
	092 And W8, W23, W29
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Compare W26, 0
	095 JumpIfEqual {110}
	096 Move X0, [X24]
	097 Move W8, [X0+224]
	098 Compare W8, 0
	099 JumpIfNotEqual {101}
	100 Call 0x1C17DFC
	101 NotImplemented "Instruction CMP not yet implemented."
	102 NotImplemented "Instruction CSET not yet implemented."
	103 Move X0, X22
	104 Move X1, X20
	105 Call RuntimeType.FilterApplyPrefixLookup, X0, X1, X2
	106 Move TEMP, X0
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfNotEqual {114}
	110 Move X2, [X28]
	111 Add X0, X31, 16
	112 Move X1, X22
	113 Call 0x2EF2D14, X0, X1
	114 Move W8, [X21+24]
	115 Add X25, X25, 1
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X8, [X31+32]
	118 Move V0, [X31+1]
	119 Move X9, [X31+8]
	120 Move X20, [X31+144]
	121 Move X19, [X31+152]
	122 Move X22, [X31+128]
	123 Move X21, [X31+136]
	124 Move X24, [X31+112]
	125 Move X23, [X31+120]
	126 Move X26, [X31+96]
	127 Move X25, [X31+104]
	128 Move X28, [X31+80]
	129 Move X27, [X31+88]
	130 Move X29, [X31+64]
	131 Move X30, [X31+72]
	132 Move [X9+16], X8
	133 Move [X9], V0
	134 Add X31, X31, 160
	135 Return X0
	136 Call 0x1C17F28
	137 Call 0x1C17F20

Method: System.RuntimeType/ListBuilder`1<System.Type> GetNestedTypeCandidates(System.String fullname, System.Reflection.BindingFlags bindingAttr, System.Boolean allowPrefixLookup)

Disassembly:
	0x033B75B4 BL 0x32D9320
	0x033B75B8 AND W8, W22, W24, 0x0
	0x033B75BC CMP W8, W0
	0x033B75C0 B.NE 0x33B75DC
	0x033B75C4 MOV X0, X20
	0x033B75C8 MOV X1, X31
	0x033B75CC MOV X2, X31
	0x033B75D0 BL 0x32CCBE4
	0x033B75D4 TBNZ X0, 0x0, 0x33B7618
	0x033B75D8 MOV X20, X21
	0x033B75DC LDR W8, [X19 + 0x18]
	0x033B75E0 ADD W23, W23, 0x1
	0x033B75E4 CMP W23, W8
	0x033B75E8 B.LT 0x33B7588
	0x033B75EC B 0x33B75F4
	0x033B75F0 MOV X20, X31
	0x033B75F4 MOV X0, X20
	0x033B75F8 LDP X20, X19, [X31 + 0x40]
	0x033B75FC LDP X22, X21, [X31 + 0x30]
	0x033B7600 LDP X24, X23, [X31 + 0x20]
	0x033B7604 LDR X30, [X31 + 0x10]
	0x033B7608 ADD X31, X31, 0x50
	0x033B760C RET
	0x033B7610 BL 0x1C16F20
	0x033B7614 BL 0x1C16F28
	0x033B7618 ADRP X0, 0xD6E000
	0x033B761C LDR X0, [X0 + 0xBE0]
	0x033B7620 BL 0x1C16D08
	0x033B7624 MOV X1, X31
	0x033B7628 BL 0x33BDD84
	0x033B762C MOV X19, X0
	0x033B7630 ADRP X0, 0xD6E000
	0x033B7634 LDR X0, [X0 + 0x7A0]
	0x033B7638 BL 0x1C16D08
	0x033B763C BL 0x1C16F10
	0x033B7640 MOV X1, X19
	0x033B7644 MOV X2, X31
	0x033B7648 MOV X20, X0
	0x033B764C BL 0x32CC544
	0x033B7650 ADRP X0, 0xD75000
	0x033B7654 LDR X0, [X0 + 0x1A0]
	0x033B7658 BL 0x1C16D08
	0x033B765C MOV X1, X0
	0x033B7660 MOV X0, X20
	0x033B7664 BL 0x1C16DEC
	0x033B7668 ADRP X0, 0xD41000
	0x033B766C LDR X0, [X0 + 0x528]
	0x033B7670 BL 0x1C16D08
	0x033B7674 BL 0x1C16F10
	0x033B7678 MOV X1, X31
	0x033B767C MOV X19, X0
	0x033B7680 BL 0x3315F20
	0x033B7684 ADRP X0, 0xD75000
	0x033B7688 LDR X0, [X0 + 0x1A0]
	0x033B768C BL 0x1C16D08
	0x033B7690 MOV X1, X0
	0x033B7694 MOV X0, X19
	0x033B7698 BL 0x1C16DEC
	0x033B769C SUB X31, X31, 0x50
	0x033B76A0 STP X30, X25, [X31 + 0x10]
	0x033B76A4 STP X24, X23, [X31 + 0x20]
	0x033B76A8 STP X22, X21, [X31 + 0x30]
	0x033B76AC STP X20, X19, [X31 + 0x40]
	0x033B76B0 ADRP X22, 0x1026000
	0x033B76B4 LDRB W8, [X22 + 0x1D6]
	0x033B76B8 MOV W21, W2
	0x033B76BC MOV X20, X1
	0x033B76C0 MOV X19, X0
	0x033B76C4 STR X1, [X31 + 0x8]
	0x033B76C8 TBNZ X8, 0x0, 0x33B76E0
	0x033B76CC ADRP X0, 0xD65000
	0x033B76D0 LDR X0, [X0 + 0x4E8]
	0x033B76D4 BL 0x1C16CF4
	0x033B76D8 MOVZ W8, 0x1
	0x033B76DC STRB W8, [X22 + 0x1D6]
	0x033B76E0 STRB W31, [X31 + 0x4]
	0x033B76E4 STR W31, [X31]
	0x033B76E8 CBZ X20, 0x33B7950
	0x033B76EC ADRP X8, 0xD65000
	0x033B76F0 LDR X8, [X8 + 0x4E8]
	0x033B76F4 LDR X0, [X8]
	0x033B76F8 LDR W8, [X0 + 0xE0]
	0x033B76FC CBNZ W8, 0x33B7704
	0x033B7700 BL 0x1C16DFC
	0x033B7704 ADD X1, X31, 0x8
	0x033B7708 ADD X2, X31, 0x4
	0x033B770C ADD X3, X31, 0x0
	0x033B7710 MOV W0, W21
	0x033B7714 BL 0x33B4644
	0x033B7718 LDR X1, [X31 + 0x8]
	0x033B771C LDR W3, [X31]
	0x033B7720 MOV X0, X19
	0x033B7724 MOV W2, W21
	0x033B7728 MOV X4, X19
	0x033B772C BL 0x33B62CC
	0x033B7730 CBZ X0, 0x33B78F8
	0x033B7734 LDR W8, [X0 + 0x18]
	0x033B7738 MOV X20, X0
	0x033B773C CMP W8, 0x1
	0x033B7740 B.LT 0x33B78AC
	0x033B7744 MOV W24, W31
	0x033B7748 MOV W23, W31
	0x033B774C MOV X19, X31
	0x033B7750 EOR W25, W21, 0x2
	0x033B7754 CMP W24, W8
	0x033B7758 B.CS 0x33B78FC
	0x033B775C ADD X8, X20, W24, 0x3, SXTW
	0x033B7760 LDR X21, [X8 + 0x20]
	0x033B7764 CBZ X21, 0x33B78F8
	0x033B7768 MOV X0, X21
	0x033B776C MOV X1, X31

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X24, 0x1027000
	015 Move X25, 0xD66000
	016 Move X19, X8
	017 Move W8, [X24+461]
	018 Move X25, [X25+1256]
	019 Move W21, W3
	020 Move W20, W2
	021 Move X23, X1
	022 Move X22, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {38}
	027 Move X0, 0xD76000
	028 Move X0, [X0+240]
	029 Call 0x1C17CF4
	030 Move X0, 0xD76000
	031 Move X0, [X0+248]
	032 Call 0x1C17CF4
	033 Move X0, 0xD66000
	034 Move X0, [X0+1256]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X24+461], W8
	038 Move X0, [X25]
	039 Move [X31+60], W31
	040 Move [X31+56], W31
	041 Move [X31+40], X31
	042 Move [X31+48], X31
	043 Move [X31+36], W31
	044 Move [X31+8], X31
	045 Move [X31+16], X31
	046 Move [X31+24], X31
	047 Move W8, [X0+224]
	048 And W20, W20, 0xFFFFFFF7
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Add X1, X31, 48
	053 Add X2, X31, 40
	054 Move X0, X23
	055 Call RuntimeType.SplitName, X0, X1, X2
	056 And W2, W21, 1
	057 Add X1, X31, 48
	058 Add X3, X31, 60
	059 Add X4, X31, 56
	060 Add X5, X31, 36
	061 Move W0, W20
	062 Call RuntimeType.FilterHelper, X0, X1, X2, X3, X4, X5
	063 Move X21, [X31+48]
	064 Move W3, [X31+36]
	065 Move X0, X22
	066 Move W2, W20
	067 Move X1, X21
	068 Call RuntimeType.GetNestedTypes_internal, X0, X1, X2, X3
	069 Compare X0, 0
	070 JumpIfEqual {131}
	071 Move X8, 0xD76000
	072 Move X8, [X8+248]
	073 Move W1, [X0+24]
	074 Move X22, X0
	075 Add X0, X31, 8
	076 Move X2, [X8]
	077 Call 0x2EF2B28, X0, X1
	078 Move X8, [X22+24]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X28, 0xD76000
	081 Move W27, [X31+60]
	082 Move X23, [X31+40]
	083 Move X28, [X28+240]
	084 Move X26, X31
	085 And X8, X8, 0
	086 Add X29, X22, 32
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X0, [X25]
	089 Move X24, [X29]
	090 Move W8, [X0+224]
	091 Compare W8, 0
	092 JumpIfNotEqual {94}
	093 Call 0x1C17DFC
	094 NotImplemented "Instruction CMP not yet implemented."
	095 NotImplemented "Instruction CSET not yet implemented."
	096 Move X0, X24
	097 Move W1, W20
	098 Move X2, X21
	099 Move X4, X23
	100 Call RuntimeType.FilterApplyType, X0, X1, X2, X3, X4
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfNotEqual {109}
	105 Move X2, [X28]
	106 Add X0, X31, 8
	107 Move X1, X24
	108 Call 0x2EF2D14, X0, X1
	109 Move W8, [X22+24]
	110 Add X26, X26, 1
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move X8, [X31+24]
	113 NotImplemented "Instruction LDUR not yet implemented."
	114 Move X22, [X31+128]
	115 Move X21, [X31+136]
	116 Move X24, [X31+112]
	117 Move X23, [X31+120]
	118 Move [X19+16], X8
	119 Move [X19], V0
	120 Move X20, [X31+144]
	121 Move X19, [X31+152]
	122 Move X26, [X31+96]
	123 Move X25, [X31+104]
	124 Move X28, [X31+80]
	125 Move X27, [X31+88]
	126 Move X29, [X31+64]
	127 Move X30, [X31+72]
	128 Add X31, X31, 160
	129 Return X0
	130 Call 0x1C17F28
	131 Call 0x1C17F20

Method: System.Reflection.MethodInfo[] GetMethods(System.Reflection.BindingFlags bindingAttr)

Disassembly:
	0x033B7AFC BLR X9
	0x033B7B00 MOV X1, X20
	0x033B7B04 MOV W2, W21
	0x033B7B08 MOV X3, X31
	0x033B7B0C BL 0x3226C60
	0x033B7B10 TBZ X0, 0x0, 0x33B7B88
	0x033B7B14 CBNZ X23, 0x33B7B34
	0x033B7B18 LDR X0, [X27]
	0x033B7B1C BL 0x1C16F10
	0x033B7B20 LDR X2, [X28]
	0x033B7B24 MOVZ W1, 0x2
	0x033B7B28 MOV X23, X0
	0x033B7B2C BL 0x301B830
	0x033B7B30 CBZ X23, 0x33B7C80
	0x033B7B34 LDR W10, [X23 + 0x1C]
	0x033B7B38 LDR X8, [X23 + 0x10]
	0x033B7B3C LDR X9, [X29]
	0x033B7B40 ADD W10, W10, 0x1
	0x033B7B44 STR W10, [X23 + 0x1C]
	0x033B7B48 CBZ X8, 0x33B7C80
	0x033B7B4C LDRSW X10, [X23 + 0x18]
	0x033B7B50 LDR W11, [X8 + 0x18]
	0x033B7B54 CMP W10, W11
	0x033B7B58 B.CS 0x33B7B70
	0x033B7B5C ADD W9, W10, 0x1
	0x033B7B60 ADD X8, X8, X10, 0x3, LSL
	0x033B7B64 STR W9, [X23 + 0x18]
	0x033B7B68 STR X24, [X8 + 0x20]
	0x033B7B6C B 0x33B7B88
	0x033B7B70 LDR X8, [X9 + 0x20]
	0x033B7B74 MOV X0, X23
	0x033B7B78 MOV X1, X24
	0x033B7B7C LDR X8, [X8 + 0xC0]
	0x033B7B80 LDR X2, [X8 + 0x70]
	0x033B7B84 BL 0x301BF90

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X22, 0x1027000
	008 Move X21, 0xD76000
	009 Move W8, [X22+462]
	010 Move X21, [X21+264]
	011 Move W19, W1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xD76000
	018 Move X0, [X0+264]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+462], W8
	022 Add X8, X31, 8
	023 Move W3, 3
	024 Move TEMP, 0
	025 Not TEMP
	026 Move W5, TEMP
	027 Move X0, X20
	028 Move X1, X31
	029 Move W2, W19
	030 Move X4, X31
	031 Move W6, W31
	032 Move [X31+8], X31
	033 Move [X31+16], X31
	034 Move [X31+24], X31
	035 Call RuntimeType.GetMethodCandidates, X0, X1, X2, X3, X4, X5, X6
	036 Move X1, [X21]
	037 Add X0, X31, 8
	038 Call 0x2EF2B6C, X0
	039 Move X20, [X31+64]
	040 Move X19, [X31+72]
	041 Move X22, [X31+48]
	042 Move X21, [X31+56]
	043 Move X30, [X31+32]
	044 Add X31, X31, 80
	045 Return X0

Method: System.Reflection.ConstructorInfo[] GetConstructors(System.Reflection.BindingFlags bindingAttr)

Disassembly:
	0x033B7B88 LDR W8, [X22 + 0x18]
	0x033B7B8C ADD W26, W26, 0x1
	0x033B7B90 CMP W26, W8
	0x033B7B94 B.LT 0x33B7AB4
	0x033B7B98 CBNZ X23, 0x33B7BA8
	0x033B7B9C B 0x33B7C54
	0x033B7BA0 MOV X23, X31
	0x033B7BA4 CBZ X23, 0x33B7C54
	0x033B7BA8 ADRP X8, 0xD75000
	0x033B7BAC LDR X8, [X8 + 0x1B8]
	0x033B7BB0 MOV X0, X23
	0x033B7BB4 LDR X1, [X8]
	0x033B7BB8 BL 0x301DDC4
	0x033B7BBC CBZ X0, 0x33B7C80
	0x033B7BC0 LDR X8, [X0 + 0x18]
	0x033B7BC4 MOV X21, X0
	0x033B7BC8 CMP W8, 0x1
	0x033B7BCC B.LT 0x33B7C50
	0x033B7BD0 LDR X22, [X31 + 0x8]
	0x033B7BD4 MOV X27, X31
	0x033B7BD8 MOV X24, X31
	0x033B7BDC AND X8, X8, 0x0
	0x033B7BE0 ADD X26, X21, 0x20
	0x033B7BE4 CMP X24, W8, UXTW
	0x033B7BE8 B.CS 0x33B7C84
	0x033B7BEC LDR X0, [X25]
	0x033B7BF0 LDR X23, [X26, X24, LSL #3]
	0x033B7BF4 LDR W8, [X0 + 0xE0]
	0x033B7BF8 CBNZ W8, 0x33B7C00
	0x033B7BFC BL 0x1C16DFC
	0x033B7C00 MOV X0, X23
	0x033B7C04 MOV W1, W19
	0x033B7C08 MOV X2, X20
	0x033B7C0C MOV W3, W31
	0x033B7C10 MOV X4, X22
	0x033B7C14 BL 0x33B491C
	0x033B7C18 TBZ X0, 0x0, 0x33B7C34
	0x033B7C1C LDR X0, [X25]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+80], X22
	004 Move [X31+88], X21
	005 Move [X31+96], X20
	006 Move [X31+104], X19
	007 Move X22, 0x1027000
	008 Move X21, 0xD76000
	009 Move W8, [X22+463]
	010 Move X21, [X21+272]
	011 Move W19, W1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xD76000
	018 Move X0, [X0+272]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+463], W8
	022 Add X8, X31, 8
	023 Move W3, 3
	024 Move X0, X20
	025 Move X1, X31
	026 Move W2, W19
	027 Move X4, X31
	028 Move W5, W31
	029 Move [X31+32], X31
	030 Move [X31+40], X31
	031 Move [X31+48], X31
	032 Call RuntimeType.GetConstructorCandidates, X0, X1, X2, X3, X4, X5
	033 NotImplemented "Instruction LDUR not yet implemented."
	034 Move X8, [X31+24]
	035 Move X1, [X21]
	036 Add X0, X31, 32
	037 Move [X31+2], V0
	038 Move [X31+48], X8
	039 Call 0x2EF2B6C, X0
	040 Move X20, [X31+96]
	041 Move X19, [X31+104]
	042 Move X22, [X31+80]
	043 Move X21, [X31+88]
	044 Move X30, [X31+64]
	045 Add X31, X31, 112
	046 Return X0

Method: System.Reflection.PropertyInfo[] GetProperties(System.Reflection.BindingFlags bindingAttr)

Disassembly:
	0x033B7C20 LDR W8, [X0 + 0xE0]
	0x033B7C24 CBNZ W8, 0x33B7C2C
	0x033B7C28 BL 0x1C16DFC
	0x033B7C2C CBZ X27, 0x33B7C38
	0x033B7C30 B 0x33B7C88
	0x033B7C34 MOV X23, X27
	0x033B7C38 LDR W8, [X21 + 0x18]
	0x033B7C3C ADD X24, X24, 0x1
	0x033B7C40 MOV X27, X23
	0x033B7C44 CMP X24, W8, SXTW
	0x033B7C48 B.LT 0x33B7BE4
	0x033B7C4C B 0x33B7C54
	0x033B7C50 MOV X23, X31
	0x033B7C54 MOV X0, X23
	0x033B7C58 LDP X20, X19, [X31 + 0x70]
	0x033B7C5C LDP X22, X21, [X31 + 0x60]
	0x033B7C60 LDP X24, X23, [X31 + 0x50]
	0x033B7C64 LDP X26, X25, [X31 + 0x40]
	0x033B7C68 LDP X28, X27, [X31 + 0x30]
	0x033B7C6C LDP X29, X30, [X31 + 0x20]
	0x033B7C70 ADD X31, X31, 0x80
	0x033B7C74 RET
	0x033B7C78 MOV X0, X24
	0x033B7C7C BL 0x1C171E0
	0x033B7C80 BL 0x1C16F20
	0x033B7C84 BL 0x1C16F28
	0x033B7C88 ADRP X0, 0xD6E000
	0x033B7C8C LDR X0, [X0 + 0xBE0]
	0x033B7C90 BL 0x1C16D08
	0x033B7C94 MOV X1, X31
	0x033B7C98 BL 0x33BDD84
	0x033B7C9C MOV X19, X0
	0x033B7CA0 ADRP X0, 0xD6E000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X22, 0x1027000
	008 Move X21, 0xD76000
	009 Move W8, [X22+464]
	010 Move X21, [X21+280]
	011 Move W19, W1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xD76000
	018 Move X0, [X0+280]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+464], W8
	022 Add X8, X31, 8
	023 Move X0, X20
	024 Move X1, X31
	025 Move W2, W19
	026 Move X3, X31
	027 Move W4, W31
	028 Move [X31+8], X31
	029 Move [X31+16], X31
	030 Move [X31+24], X31
	031 Call RuntimeType.GetPropertyCandidates, X0, X1, X2, X3, X4
	032 Move X1, [X21]
	033 Add X0, X31, 8
	034 Call 0x2EF2B6C, X0
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X22, [X31+48]
	038 Move X21, [X31+56]
	039 Move X30, [X31+32]
	040 Add X31, X31, 80
	041 Return X0

Method: System.Reflection.FieldInfo[] GetFields(System.Reflection.BindingFlags bindingAttr)

Disassembly:
	0x033B7CA4 LDR X0, [X0 + 0x7A0]
	0x033B7CA8 BL 0x1C16D08
	0x033B7CAC BL 0x1C16F10
	0x033B7CB0 MOV X1, X19
	0x033B7CB4 MOV X2, X31
	0x033B7CB8 MOV X20, X0
	0x033B7CBC BL 0x32CC544
	0x033B7CC0 ADRP X0, 0xD75000
	0x033B7CC4 LDR X0, [X0 + 0x1D0]
	0x033B7CC8 BL 0x1C16D08
	0x033B7CCC MOV X1, X0
	0x033B7CD0 MOV X0, X20
	0x033B7CD4 BL 0x1C16DEC
	0x033B7CD8 ADRP X0, 0xD41000
	0x033B7CDC LDR X0, [X0 + 0x528]
	0x033B7CE0 BL 0x1C16D08
	0x033B7CE4 BL 0x1C16F10
	0x033B7CE8 MOV X1, X31
	0x033B7CEC MOV X19, X0
	0x033B7CF0 BL 0x3315F20
	0x033B7CF4 ADRP X0, 0xD75000
	0x033B7CF8 LDR X0, [X0 + 0x1D0]
	0x033B7CFC BL 0x1C16D08
	0x033B7D00 MOV X1, X0
	0x033B7D04 MOV X0, X19
	0x033B7D08 BL 0x1C16DEC
	0x033B7D0C SUB X31, X31, 0x70
	0x033B7D10 STP X30, X27, [X31 + 0x20]
	0x033B7D14 STP X26, X25, [X31 + 0x30]
	0x033B7D18 STP X24, X23, [X31 + 0x40]
	0x033B7D1C STP X22, X21, [X31 + 0x50]
	0x033B7D20 STP X20, X19, [X31 + 0x60]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X22, 0x1027000
	008 Move X21, 0xD76000
	009 Move W8, [X22+465]
	010 Move X21, [X21+288]
	011 Move W19, W1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xD76000
	018 Move X0, [X0+288]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+465], W8
	022 Add X8, X31, 8
	023 Move X0, X20
	024 Move X1, X31
	025 Move W2, W19
	026 Move W3, W31
	027 Move [X31+8], X31
	028 Move [X31+16], X31
	029 Move [X31+24], X31
	030 Call RuntimeType.GetFieldCandidates, X0, X1, X2, X3
	031 Move X1, [X21]
	032 Add X0, X31, 8
	033 Call 0x2EF2B6C, X0
	034 Move X20, [X31+64]
	035 Move X19, [X31+72]
	036 Move X22, [X31+48]
	037 Move X21, [X31+56]
	038 Move X30, [X31+32]
	039 Add X31, X31, 80
	040 Return X0

Method: System.Reflection.MemberInfo[] GetMembers(System.Reflection.BindingFlags bindingAttr)

Disassembly:
	0x033B7D24 ADRP X22, 0x1026000
	0x033B7D28 LDRB W8, [X22 + 0x1D8]
	0x033B7D2C MOV W19, W2
	0x033B7D30 MOV X20, X1
	0x033B7D34 MOV X21, X0
	0x033B7D38 TBNZ X8, 0x0, 0x33B7D50
	0x033B7D3C ADRP X0, 0xD65000
	0x033B7D40 LDR X0, [X0 + 0x4E8]
	0x033B7D44 BL 0x1C16CF4
	0x033B7D48 MOVZ W8, 0x1
	0x033B7D4C STRB W8, [X22 + 0x1D8]
	0x033B7D50 STRB W31, [X31 + 0x1C]
	0x033B7D54 STP X31, X31, [X31 + 0x8]
	0x033B7D58 STR W31, [X31 + 0x4]
	0x033B7D5C CBZ X20, 0x33B7EC4
	0x033B7D60 ADRP X24, 0xD65000
	0x033B7D64 LDR X24, [X24 + 0x4E8]
	0x033B7D68 AND W19, W19, 0xFFFFFFF7
	0x033B7D6C LDR X0, [X24]
	0x033B7D70 LDR W8, [X0 + 0xE0]
	0x033B7D74 CBNZ W8, 0x33B7D7C
	0x033B7D78 BL 0x1C16DFC
	0x033B7D7C ADD X1, X31, 0x10
	0x033B7D80 ADD X2, X31, 0x8
	0x033B7D84 MOV X0, X20
	0x033B7D88 BL 0x33B4404
	0x033B7D8C ADD X1, X31, 0x10
	0x033B7D90 ADD X2, X31, 0x1C
	0x033B7D94 ADD X3, X31, 0x4
	0x033B7D98 MOV W0, W19
	0x033B7D9C BL 0x33B4644
	0x033B7DA0 LDR X20, [X31 + 0x10]
	0x033B7DA4 LDR W3, [X31 + 0x4]
	0x033B7DA8 MOV X0, X21
	0x033B7DAC MOV W2, W19
	0x033B7DB0 MOV X1, X20
	0x033B7DB4 BL 0x33B6770
	0x033B7DB8 CBZ X0, 0x33B7EF8
	0x033B7DBC LDR X8, [X0 + 0x18]
	0x033B7DC0 MOV X21, X0
	0x033B7DC4 CMP W8, 0x1
	0x033B7DC8 B.LT 0x33B7E4C
	0x033B7DCC LDR X22, [X31 + 0x8]
	0x033B7DD0 MOV X27, X31
	0x033B7DD4 MOV X25, X31
	0x033B7DD8 AND X8, X8, 0x0
	0x033B7DDC ADD X26, X21, 0x20
	0x033B7DE0 CMP X25, W8, UXTW
	0x033B7DE4 B.CS 0x33B7E70
	0x033B7DE8 LDR X0, [X24]
	0x033B7DEC LDR X23, [X26, X25, LSL #3]
	0x033B7DF0 LDR W8, [X0 + 0xE0]
	0x033B7DF4 CBNZ W8, 0x33B7DFC
	0x033B7DF8 BL 0x1C16DFC
	0x033B7DFC MOV X0, X23
	0x033B7E00 MOV W1, W19
	0x033B7E04 MOV X2, X20
	0x033B7E08 MOV W3, W31
	0x033B7E0C MOV X4, X22
	0x033B7E10 BL 0x33B491C
	0x033B7E14 TBZ X0, 0x0, 0x33B7E30
	0x033B7E18 LDR X0, [X24]
	0x033B7E1C LDR W8, [X0 + 0xE0]
	0x033B7E20 CBNZ W8, 0x33B7E28
	0x033B7E24 BL 0x1C16DFC
	0x033B7E28 CBZ X27, 0x33B7E34
	0x033B7E2C B 0x33B7E74
	0x033B7E30 MOV X23, X27
	0x033B7E34 LDR W8, [X21 + 0x18]
	0x033B7E38 ADD X25, X25, 0x1
	0x033B7E3C MOV X27, X23
	0x033B7E40 CMP X25, W8, SXTW
	0x033B7E44 B.LT 0x33B7DE0
	0x033B7E48 B 0x33B7E50
	0x033B7E4C MOV X23, X31
	0x033B7E50 MOV X0, X23
	0x033B7E54 LDP X20, X19, [X31 + 0x60]
	0x033B7E58 LDP X22, X21, [X31 + 0x50]
	0x033B7E5C LDP X24, X23, [X31 + 0x40]
	0x033B7E60 LDP X26, X25, [X31 + 0x30]
	0x033B7E64 LDP X30, X27, [X31 + 0x20]
	0x033B7E68 ADD X31, X31, 0x70
	0x033B7E6C RET
	0x033B7E70 BL 0x1C16F28
	0x033B7E74 ADRP X0, 0xD6E000
	0x033B7E78 LDR X0, [X0 + 0xBE0]
	0x033B7E7C BL 0x1C16D08
	0x033B7E80 MOV X1, X31
	0x033B7E84 BL 0x33BDD84
	0x033B7E88 MOV X19, X0
	0x033B7E8C ADRP X0, 0xD6E000
	0x033B7E90 LDR X0, [X0 + 0x7A0]
	0x033B7E94 BL 0x1C16D08
	0x033B7E98 BL 0x1C16F10
	0x033B7E9C MOV X1, X19
	0x033B7EA0 MOV X2, X31
	0x033B7EA4 MOV X20, X0
	0x033B7EA8 BL 0x32CC544
	0x033B7EAC ADRP X0, 0xD75000
	0x033B7EB0 LDR X0, [X0 + 0x1D8]
	0x033B7EB4 BL 0x1C16D08
	0x033B7EB8 MOV X1, X0
	0x033B7EBC MOV X0, X20
	0x033B7EC0 BL 0x1C16DEC
	0x033B7EC4 ADRP X0, 0xD41000
	0x033B7EC8 LDR X0, [X0 + 0x528]
	0x033B7ECC BL 0x1C16D08
	0x033B7ED0 BL 0x1C16F10
	0x033B7ED4 MOV X1, X31
	0x033B7ED8 MOV X19, X0
	0x033B7EDC BL 0x3315F20
	0x033B7EE0 ADRP X0, 0xD75000
	0x033B7EE4 LDR X0, [X0 + 0x1D8]
	0x033B7EE8 BL 0x1C16D08
	0x033B7EEC MOV X1, X0
	0x033B7EF0 MOV X0, X19
	0x033B7EF4 BL 0x1C16DEC
	0x033B7EF8 BL 0x1C16F20
	0x033B7EFC SUB X31, X31, 0x120
	0x033B7F00 STP X29, X30, [X31 + 0xE0]
	0x033B7F04 STP X24, X23, [X31 + 0xF0]
	0x033B7F08 STP X22, X21, [X31 + 0x100]
	0x033B7F0C STP X20, X19, [X31 + 0x110]
	0x033B7F10 ADRP X23, 0x1026000
	0x033B7F14 LDRB W8, [X23 + 0x1D9]
	0x033B7F18 MOV W20, W3
	0x033B7F1C MOV W19, W2
	0x033B7F20 MOV X21, X1
	0x033B7F24 MOV X22, X0
	0x033B7F28 TBNZ X8, 0x0, 0x33B8024
	0x033B7F2C ADRP X0, 0xD75000
	0x033B7F30 LDR X0, [X0 + 0x130]
	0x033B7F34 BL 0x1C16CF4
	0x033B7F38 ADRP X0, 0xD75000
	0x033B7F3C LDR X0, [X0 + 0x140]
	0x033B7F40 BL 0x1C16CF4
	0x033B7F44 ADRP X0, 0xD75000
	0x033B7F48 LDR X0, [X0 + 0x138]
	0x033B7F4C BL 0x1C16CF4
	0x033B7F50 ADRP X0, 0xD75000
	0x033B7F54 LDR X0, [X0 + 0x128]
	0x033B7F58 BL 0x1C16CF4
	0x033B7F5C ADRP X0, 0xD75000
	0x033B7F60 LDR X0, [X0 + 0x150]
	0x033B7F64 BL 0x1C16CF4
	0x033B7F68 ADRP X0, 0xD75000
	0x033B7F6C LDR X0, [X0 + 0x148]
	0x033B7F70 BL 0x1C16CF4
	0x033B7F74 ADRP X0, 0xD75000
	0x033B7F78 LDR X0, [X0 + 0x120]
	0x033B7F7C BL 0x1C16CF4
	0x033B7F80 ADRP X0, 0xD75000
	0x033B7F84 LDR X0, [X0 + 0x108]
	0x033B7F88 BL 0x1C16CF4
	0x033B7F8C ADRP X0, 0xD75000
	0x033B7F90 LDR X0, [X0 + 0x1E0]
	0x033B7F94 BL 0x1C16CF4
	0x033B7F98 ADRP X0, 0xD75000
	0x033B7F9C LDR X0, [X0 + 0x1E8]
	0x033B7FA0 BL 0x1C16CF4
	0x033B7FA4 ADRP X0, 0xD75000
	0x033B7FA8 LDR X0, [X0 + 0x110]
	0x033B7FAC BL 0x1C16CF4
	0x033B7FB0 ADRP X0, 0xD75000
	0x033B7FB4 LDR X0, [X0 + 0x118]
	0x033B7FB8 BL 0x1C16CF4
	0x033B7FBC ADRP X0, 0xD75000
	0x033B7FC0 LDR X0, [X0 + 0x158]
	0x033B7FC4 BL 0x1C16CF4
	0x033B7FC8 ADRP X0, 0xD75000
	0x033B7FCC LDR X0, [X0 + 0x160]
	0x033B7FD0 BL 0x1C16CF4
	0x033B7FD4 ADRP X0, 0xD75000
	0x033B7FD8 LDR X0, [X0 + 0x168]
	0x033B7FDC BL 0x1C16CF4
	0x033B7FE0 ADRP X0, 0xD75000
	0x033B7FE4 LDR X0, [X0 + 0x170]
	0x033B7FE8 BL 0x1C16CF4
	0x033B7FEC ADRP X0, 0xD75000
	0x033B7FF0 LDR X0, [X0 + 0x178]
	0x033B7FF4 BL 0x1C16CF4
	0x033B7FF8 ADRP X0, 0xD75000
	0x033B7FFC LDR X0, [X0 + 0x180]
	0x033B8000 BL 0x1C16CF4
	0x033B8004 ADRP X0, 0xD6C000
	0x033B8008 LDR X0, [X0 + 0xBA8]

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+176], X29
	003 Move [X31+184], X30
	004 Move [X31+192], X28
	005 Move [X31+200], X27
	006 Move [X31+208], X26
	007 Move [X31+216], X25
	008 Move [X31+224], X24
	009 Move [X31+232], X23
	010 Move [X31+240], X22
	011 Move [X31+248], X21
	012 Move [X31+256], X20
	013 Move [X31+264], X19
	014 Move X28, 0x1027000
	015 Move X27, 0xD6E000
	016 Move X26, 0xD76000
	017 Move X25, 0xD76000
	018 Move X24, 0xD76000
	019 Move X23, 0xD76000
	020 Move X22, 0xD76000
	021 Move X21, 0xD76000
	022 Move X27, [X27+2984]
	023 Move X26, [X26+296]
	024 Move W8, [X28+466]
	025 Move X25, [X25+304]
	026 Move X24, [X24+312]
	027 Move X23, [X23+320]
	028 Move X22, [X22+328]
	029 Move X21, [X21+336]
	030 Move W19, W1
	031 Move X20, X0
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {77}
	036 Move X0, 0xD76000
	037 Move X0, [X0+304]
	038 Call 0x1C17CF4
	039 Move X0, 0xD76000
	040 Move X0, [X0+320]
	041 Call 0x1C17CF4
	042 Move X0, 0xD76000
	043 Move X0, [X0+312]
	044 Call 0x1C17CF4
	045 Move X0, 0xD76000
	046 Move X0, [X0+296]
	047 Call 0x1C17CF4
	048 Move X0, 0xD76000
	049 Move X0, [X0+336]
	050 Call 0x1C17CF4
	051 Move X0, 0xD76000
	052 Move X0, [X0+328]
	053 Call 0x1C17CF4
	054 Move X0, 0xD76000
	055 Move X0, [X0+344]
	056 Call 0x1C17CF4
	057 Move X0, 0xD76000
	058 Move X0, [X0+352]
	059 Call 0x1C17CF4
	060 Move X0, 0xD76000
	061 Move X0, [X0+360]
	062 Call 0x1C17CF4
	063 Move X0, 0xD76000
	064 Move X0, [X0+368]
	065 Call 0x1C17CF4
	066 Move X0, 0xD76000
	067 Move X0, [X0+376]
	068 Call 0x1C17CF4
	069 Move X0, 0xD76000
	070 Move X0, [X0+384]
	071 Call 0x1C17CF4
	072 Move X0, 0xD6E000
	073 Move X0, [X0+2984]
	074 Call 0x1C17CF4
	075 Move W8, 1
	076 Move [X28+466], W8
	077 Add X8, X31, 152
	078 Move W3, 3
	079 Move TEMP, 0
	080 Not TEMP
	081 Move W5, TEMP
	082 Move X0, X20
	083 Move X1, X31
	084 Move W2, W19
	085 Move X4, X31
	086 Move W6, W31
	087 Move [X31+152], X31
	088 Move [X31+160], X31
	089 Move [X31+168], X31
	090 Move [X31+128], X31
	091 Move [X31+136], X31
	092 Move [X31+144], X31
	093 Move [X31+104], X31
	094 Move [X31+112], X31
	095 Move [X31+120], X31
	096 Move [X31+80], X31
	097 Move [X31+88], X31
	098 Move [X31+96], X31
	099 Move [X31+56], X31
	100 Move [X31+64], X31
	101 Move [X31+72], X31
	102 Move [X31+32], X31
	103 Move [X31+40], X31
	104 Move [X31+48], X31
	105 Call RuntimeType.GetMethodCandidates, X0, X1, X2, X3, X4, X5, X6
	106 Add X8, X31, 8
	107 Move W3, 3
	108 Move X0, X20
	109 Move X1, X31
	110 Move W2, W19
	111 Move X4, X31
	112 Move W5, W31
	113 Call RuntimeType.GetConstructorCandidates, X0, X1, X2, X3, X4, X5
	114 Move X8, [X31+24]
	115 NotImplemented "Instruction LDUR not yet implemented."
	116 Move X0, X20
	117 Move X1, X31
	118 Move [X31+144], X8
	119 Add X8, X31, 104
	120 Move W2, W19
	121 Move X3, X31
	122 Move W4, W31
	123 Move [X31+8], V0
	124 Call RuntimeType.GetPropertyCandidates, X0, X1, X2, X3, X4
	125 Add X8, X31, 80
	126 Move X0, X20
	127 Move X1, X31
	128 Move W2, W19
	129 Move W3, W31
	130 Call RuntimeType.GetEventCandidates, X0, X1, X2, X3
	131 Add X8, X31, 56
	132 Move X0, X20
	133 Move X1, X31
	134 Move W2, W19
	135 Move W3, W31
	136 Call RuntimeType.GetFieldCandidates, X0, X1, X2, X3
	137 Add X8, X31, 32
	138 Move X0, X20
	139 Move X1, X31
	140 Move W2, W19
	141 Move W3, W31
	142 Call RuntimeType.GetNestedTypeCandidates, X0, X1, X2, X3
	143 Move W8, [X31+168]
	144 Move W9, [X31+144]
	145 Move W10, [X31+120]
	146 Move W11, [X31+96]
	147 Move W12, [X31+72]
	148 Move W13, [X31+48]
	149 Add W8, W9, W8
	150 Move X0, [X27]
	151 Add W8, W8, W10
	152 Add W8, W8, W11
	153 Add W8, W8, W12
	154 Add W1, W8, W13
	155 Call 0x1C17D6C
	156 Move X3, [X26]
	157 Move X19, X0
	158 Add X0, X31, 152
	159 Move X1, X19
	160 Move W2, W31
	161 Call 0x2EF2C78, X0, X1, X2
	162 Move W20, [X31+168]
	163 Move X3, [X25]
	164 Add X0, X31, 128
	165 Move X1, X19
	166 Move W2, W20
	167 Call 0x2EF2C78, X0, X1, X2
	168 Move W8, [X31+144]
	169 Move X3, [X24]
	170 Add X0, X31, 104
	171 Move X1, X19
	172 Add W20, W8, W20
	173 Move W2, W20
	174 Call 0x2EF2C78, X0, X1, X2
	175 Move W8, [X31+120]
	176 Move X3, [X23]
	177 Add X0, X31, 80
	178 Move X1, X19
	179 Add W20, W8, W20
	180 Move W2, W20
	181 Call 0x2EF2C78, X0, X1, X2
	182 Move W8, [X31+96]
	183 Move X3, [X22]
	184 Add X0, X31, 56
	185 Move X1, X19
	186 Add W20, W8, W20
	187 Move W2, W20
	188 Call 0x2EF2C78, X0, X1, X2
	189 Move W8, [X31+72]
	190 Move X3, [X21]
	191 Add X0, X31, 32
	192 Move X1, X19
	193 Add W2, W8, W20
	194 Call 0x2EF2C78, X0, X1, X2
	195 Move X0, X19
	196 Move X20, [X31+256]
	197 Move X19, [X31+264]
	198 Move X22, [X31+240]
	199 Move X21, [X31+248]
	200 Move X24, [X31+224]
	201 Move X23, [X31+232]
	202 Move X26, [X31+208]
	203 Move X25, [X31+216]
	204 Move X28, [X31+192]
	205 Move X27, [X31+200]
	206 Move X29, [X31+176]
	207 Move X30, [X31+184]
	208 Add X31, X31, 272
	209 Return X0

Method: System.Reflection.ConstructorInfo GetConstructorImpl(System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, System.Type[] types, System.Reflection.ParameterModifier[] modifiers)

Disassembly:
	0x033B800C BL 0x1C16CF4
	0x033B8010 ADRP X0, 0xD73000
	0x033B8014 LDR X0, [X0 + 0xCD0]
	0x033B8018 BL 0x1C16CF4
	0x033B801C MOVZ W8, 0x1
	0x033B8020 STRB W8, [X23 + 0x1D9]
	0x033B8024 CBZ X21, 0x33B8378
	0x033B8028 ADD X24, X31, 0xA0
	0x033B802C STP X31, X31, [X31 + 0xC0]
	0x033B8030 STR X31, [X31 + 0xD0]
	0x033B8034 STP X31, X31, [X31 + 0xA8]
	0x033B8038 STR X31, [X31 + 0xA0]
	0x033B803C STP X31, X31, [X31 + 0x88]
	0x033B8040 STR X31, [X31 + 0x80]
	0x033B8044 STP X31, X31, [X31 + 0x68]
	0x033B8048 STR X31, [X31 + 0x60]
	0x033B804C STP X31, X31, [X31 + 0x48]
	0x033B8050 STR X31, [X31 + 0x40]
	0x033B8054 STP X31, X31, [X31 + 0x20]
	0x033B8058 STR X31, [X31 + 0x30]
	0x033B805C TBNZ X19, 0x3, 0x33B8078
	0x033B8060 MOV W23, W31
	0x033B8064 TBNZ X19, 0x0, 0x33B80CC
	0x033B8068 TBNZ X19, 0x4, 0x33B8120
	0x033B806C TBNZ X19, 0x1, 0x33B8170
	0x033B8070 TBNZ X19, 0x2, 0x33B81BC
	0x033B8074 B 0x33B8204
	0x033B8078 ADD X8, X31, 0x8
	0x033B807C MOVZ W3, 0x3
	0x033B8080 MOVN W5, 0x0
	0x033B8084 MOVZ W6, 0x1
	0x033B8088 MOV X0, X22
	0x033B808C MOV X1, X21
	0x033B8090 MOV W2, W20
	0x033B8094 MOV X4, X31
	0x033B8098 BL 0x33B4DDC
	0x033B809C LDUR V0, [X31 + 0x8]
	0x033B80A0 LDR X8, [X31 + 0x18]
	0x033B80A4 CMP W19, 0x8
	0x033B80A8 STR V0, [X24 + 0x2]
	0x033B80AC STR X8, [X31 + 0xD0]
	0x033B80B0 B.NE 0x33B80C4
	0x033B80B4 ADRP X8, 0xD74000
	0x033B80B8 LDR X8, [X8 + 0x108]
	0x033B80BC ADD X0, X31, 0xC0
	0x033B80C0 B 0x33B8254
	0x033B80C4 LDR W23, [X31 + 0xD0]
	0x033B80C8 TBZ X19, 0x0, 0x33B8068
	0x033B80CC ADD X8, X31, 0x8
	0x033B80D0 MOVZ W3, 0x3
	0x033B80D4 MOVZ W5, 0x1
	0x033B80D8 MOV X0, X22
	0x033B80DC MOV X1, X21
	0x033B80E0 MOV W2, W20
	0x033B80E4 MOV X4, X31
	0x033B80E8 BL 0x33B5320
	0x033B80EC LDUR V0, [X31 + 0x8]
	0x033B80F0 LDR X8, [X31 + 0x18]
	0x033B80F4 CMP W19, 0x1
	0x033B80F8 STR V0, [X24]
	0x033B80FC STR X8, [X31 + 0xB0]
	0x033B8100 B.NE 0x33B8114
	0x033B8104 ADRP X8, 0xD74000
	0x033B8108 LDR X8, [X8 + 0x110]
	0x033B810C ADD X0, X31, 0xA0
	0x033B8110 B 0x33B8254
	0x033B8114 LDR W8, [X31 + 0xB0]
	0x033B8118 ADD W23, W8, W23
	0x033B811C TBZ X19, 0x4, 0x33B806C
	0x033B8120 ADD X8, X31, 0x8
	0x033B8124 MOVZ W4, 0x1
	0x033B8128 MOV X0, X22
	0x033B812C MOV X1, X21
	0x033B8130 MOV W2, W20
	0x033B8134 MOV X3, X31
	0x033B8138 BL 0x33B57D4
	0x033B813C LDUR V0, [X31 + 0x8]
	0x033B8140 LDR X8, [X31 + 0x18]
	0x033B8144 CMP W19, 0x10
	0x033B8148 STR V0, [X31 + 0x8]
	0x033B814C STR X8, [X31 + 0x90]
	0x033B8150 B.NE 0x33B8164
	0x033B8154 ADRP X8, 0xD74000
	0x033B8158 LDR X8, [X8 + 0x118]
	0x033B815C ADD X0, X31, 0x80
	0x033B8160 B 0x33B8254
	0x033B8164 LDR W8, [X31 + 0x90]
	0x033B8168 ADD W23, W8, W23
	0x033B816C TBZ X19, 0x1, 0x33B8070
	0x033B8170 ADD X8, X31, 0x8
	0x033B8174 MOVZ W3, 0x1
	0x033B8178 MOV X0, X22
	0x033B817C MOV X1, X21
	0x033B8180 MOV W2, W20
	0x033B8184 BL 0x33B5CC8
	0x033B8188 LDUR V0, [X31 + 0x8]
	0x033B818C LDR X8, [X31 + 0x18]
	0x033B8190 CMP W19, 0x2
	0x033B8194 STR V0, [X31 + 0x6]
	0x033B8198 STR X8, [X31 + 0x70]
	0x033B819C B.NE 0x33B81B0
	0x033B81A0 ADRP X8, 0xD74000
	0x033B81A4 LDR X8, [X8 + 0x1E8]
	0x033B81A8 ADD X0, X31, 0x60
	0x033B81AC B 0x33B8254
	0x033B81B0 LDR W8, [X31 + 0x70]
	0x033B81B4 ADD W23, W8, W23
	0x033B81B8 TBZ X19, 0x2, 0x33B8204
	0x033B81BC ADD X8, X31, 0x8
	0x033B81C0 MOVZ W3, 0x1
	0x033B81C4 MOV X0, X22
	0x033B81C8 MOV X1, X21
	0x033B81CC MOV W2, W20
	0x033B81D0 BL 0x33B60F8
	0x033B81D4 LDUR V0, [X31 + 0x8]
	0x033B81D8 LDR X8, [X31 + 0x18]
	0x033B81DC CMP W19, 0x4
	0x033B81E0 STR V0, [X31 + 0x4]
	0x033B81E4 STR X8, [X31 + 0x50]
	0x033B81E8 B.NE 0x33B81FC
	0x033B81EC ADRP X8, 0xD74000
	0x033B81F0 LDR X8, [X8 + 0x120]
	0x033B81F4 ADD X0, X31, 0x40
	0x033B81F8 B 0x33B8254
	0x033B81FC LDR W8, [X31 + 0x50]
	0x033B8200 ADD W23, W8, W23
	0x033B8204 MOVZ W8, 0xA0
	0x033B8208 ANDS W31, W19, W8, 0x0
	0x033B820C B.EQ 0x33B8284
	0x033B8210 ADD X8, X31, 0x8
	0x033B8214 MOVZ W3, 0x1
	0x033B8218 MOV X0, X22
	0x033B821C MOV X1, X21
	0x033B8220 MOV W2, W20
	0x033B8224 BL 0x33B65B4
	0x033B8228 LDUR V0, [X31 + 0x8]
	0x033B822C LDR X8, [X31 + 0x18]
	0x033B8230 CMP W19, 0x80
	0x033B8234 STR V0, [X31 + 0x2]
	0x033B8238 STR X8, [X31 + 0x30]
	0x033B823C B.EQ 0x33B8248

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+80], X24
	004 Move [X31+88], X23
	005 Move [X31+96], X22
	006 Move [X31+104], X21
	007 Move [X31+112], X20
	008 Move [X31+120], X19
	009 Move X24, 0x1026000
	010 Move W8, [X24+467]
	011 Move X20, X5
	012 Move X19, X4
	013 Move X22, X2
	014 Move W21, W1
	015 Move X23, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {40}
	020 Move X0, 0xD66000
	021 Move X0, [X0+2424]
	022 Call 0x1C17CF4
	023 Move X0, 0xD74000
	024 Move X0, [X0+1336]
	025 Call 0x1C17CF4
	026 Move X0, 0xD75000
	027 Move X0, [X0+272]
	028 Call 0x1C17CF4
	029 Move X0, 0xD75000
	030 Move X0, [X0+344]
	031 Call 0x1C17CF4
	032 Move X0, 0xD75000
	033 Move X0, [X0+392]
	034 Call 0x1C17CF4
	035 Move X0, 0xD3C000
	036 Move X0, [X0+1728]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X24+467], W8
	040 Add X8, X31, 8
	041 Move W3, 3
	042 Move X0, X23
	043 Move X1, X31
	044 Move W2, W21
	045 Move X4, X19
	046 Move W5, W31
	047 Move [X31+32], X31
	048 Move [X31+40], X31
	049 Move [X31+48], X31
	050 Call RuntimeType.GetConstructorCandidates, X0, X1, X2, X3, X4, X5
	051 Move X8, [X31+24]
	052 NotImplemented "Instruction LDUR not yet implemented."
	053 Move [X31+48], X8
	054 Move [X31+2], V0
	055 Compare W8, 0
	056 JumpIfEqual {146}
	057 Compare X19, 0
	058 JumpIfEqual {162}
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X8, [X19+24]
	061 Compare X8, 0
	062 JumpIfNotEqual {81}
	063 Move X8, 0xD75000
	064 Move X8, [X8+392]
	065 Add X0, X31, 32
	066 Move W1, W31
	067 Move X2, [X8]
	068 Call 0x2EF2B34, X0, X1
	069 Compare X0, 0
	070 JumpIfEqual {162}
	071 Move X8, [X0]
	072 Move X23, X0
	073 Move X9, [X8+920]
	074 Move X1, [X8+928]
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Compare X0, 0
	077 JumpIfEqual {147}
	078 Move X8, [X0+24]
	079 Compare X8, 0
	080 JumpIfEqual {147}
	081 Move TEMP, X21
	082 And TEMP, TEMP, 0x10000
	083 Compare TEMP, 0x10000
	084 JumpIfEqual {92}
	085 Compare X22, 0
	086 JumpIfEqual {111}
	087 Move X8, 0xD75000
	088 Move X8, [X8+272]
	089 Add X0, X31, 32
	090 Move X1, [X8]
	091 Call 0x2EF2B6C, X0
	092 Move X8, 0xD75000
	093 Move X8, [X8+272]
	094 Add X0, X31, 32
	095 Move X1, [X8]
	096 Call 0x2EF2B6C, X0
	097 Move X8, 0xD74000
	098 Move X8, [X8+1336]
	099 Move X20, X0
	100 Move X8, [X8]
	101 Move W9, [X8+224]
	102 Compare W9, 0
	103 JumpIfNotEqual {106}
	104 Move X0, X8
	105 Call 0x1C17DFC
	106 Move X0, X20
	107 Move X1, X19
	108 Call DefaultBinder.ExactBinding, X0, X1, X2
	109 Compare X0, 0
	110 JumpIfNotEqual {139}
	111 Move X8, 0xD3C000
	112 Move X8, [X8+1728]
	113 Move X0, [X8]
	114 Move W8, [X0+224]
	115 Compare W8, 0
	116 JumpIfNotEqual {118}
	117 Call 0x1C17DFC
	118 Move X0, X31
	119 Call Type.get_DefaultBinder
	120 Move X8, 0xD75000
	121 Move X8, [X8+272]
	122 Move X22, X0
	123 Add X0, X31, 32
	124 Move X1, [X8]
	125 Call 0x2EF2B6C, X0
	126 Compare X22, 0
	127 JumpIfEqual {162}
	128 Move X8, [X22]
	129 Move X2, X0
	130 Move X0, X22
	131 Move W1, W21
	132 Move X9, [X8+440]
	133 Move X5, [X8+448]
	134 Move X3, X19
	135 Move X4, X20
	136 NotImplemented "Instruction BLR not yet implemented."
	137 Compare X0, 0
	138 JumpIfEqual {146}
	139 Move X8, 0xD66000
	140 Move X8, [X8+2424]
	141 Move X9, [X0]
	142 Move X8, [X8]
	143 Move W11, [X9+304]
	144 Move W10, [X8+304]
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move X23, X31
	147 Move X0, X23
	148 Move X20, [X31+112]
	149 Move X19, [X31+120]
	150 Move X22, [X31+96]
	151 Move X21, [X31+104]
	152 Move X24, [X31+80]
	153 Move X23, [X31+88]
	154 Move X30, [X31+64]
	155 Add X31, X31, 128
	156 Return X0
	157 Move X9, [X9+200]
	158 Add X9, X9, X10
	159 NotImplemented "Instruction LDUR not yet implemented."
	160 NotImplemented "Instruction CMP not yet implemented."
	161 NotImplemented "Instruction CSEL not yet implemented."
	162 Call 0x1C17F20

Method: System.Reflection.PropertyInfo GetPropertyImpl(System.String name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Type returnType, System.Type[] types, System.Reflection.ParameterModifier[] modifiers)

Disassembly:
	0x033B8240 CMP W19, 0x20
	0x033B8244 B.NE 0x33B827C
	0x033B8248 ADRP X8, 0xD74000
	0x033B824C LDR X8, [X8 + 0x1E0]
	0x033B8250 ADD X0, X31, 0x20
	0x033B8254 LDR X1, [X8]
	0x033B8258 BL 0x2EF1B6C
	0x033B825C MOV X19, X0
	0x033B8260 MOV X0, X19
	0x033B8264 LDP X20, X19, [X31 + 0x110]
	0x033B8268 LDP X22, X21, [X31 + 0x100]
	0x033B826C LDP X24, X23, [X31 + 0xF0]
	0x033B8270 LDP X29, X30, [X31 + 0xE0]
	0x033B8274 ADD X31, X31, 0x120
	0x033B8278 RET
	0x033B827C LDR W8, [X31 + 0x30]
	0x033B8280 ADD W23, W8, W23
	0x033B8284 ADRP X8, 0xD73000
	0x033B8288 ADRP X9, 0xD6C000
	0x033B828C LDR X8, [X8 + 0xCD0]
	0x033B8290 LDR X9, [X9 + 0xBA8]
	0x033B8294 CMP W19, 0x9
	0x033B8298 MOV W1, W23
	0x033B829C CSEL X8, X8, X9, EQ
	0x033B82A0 LDR X0, [X8]
	0x033B82A4 BL 0x1C16D6C
	0x033B82A8 ADRP X8, 0xD74000
	0x033B82AC LDR X8, [X8 + 0x128]
	0x033B82B0 MOV X19, X0
	0x033B82B4 ADD X0, X31, 0xC0
	0x033B82B8 MOV X1, X19
	0x033B82BC LDR X3, [X8]
	0x033B82C0 MOV W2, W31
	0x033B82C4 BL 0x2EF1C78
	0x033B82C8 ADRP X8, 0xD74000
	0x033B82CC LDR W20, [X31 + 0xD0]
	0x033B82D0 LDR X8, [X8 + 0x130]
	0x033B82D4 ADD X0, X31, 0xA0
	0x033B82D8 MOV X1, X19
	0x033B82DC MOV W2, W20
	0x033B82E0 LDR X3, [X8]
	0x033B82E4 BL 0x2EF1C78
	0x033B82E8 ADRP X9, 0xD74000
	0x033B82EC LDR W8, [X31 + 0xB0]
	0x033B82F0 LDR X9, [X9 + 0x138]
	0x033B82F4 ADD X0, X31, 0x80
	0x033B82F8 MOV X1, X19
	0x033B82FC ADD W20, W8, W20
	0x033B8300 LDR X3, [X9]
	0x033B8304 MOV W2, W20
	0x033B8308 BL 0x2EF1C78
	0x033B830C ADRP X9, 0xD74000
	0x033B8310 LDR W8, [X31 + 0x90]
	0x033B8314 LDR X9, [X9 + 0x140]
	0x033B8318 ADD X0, X31, 0x60
	0x033B831C MOV X1, X19
	0x033B8320 ADD W20, W8, W20
	0x033B8324 LDR X3, [X9]
	0x033B8328 MOV W2, W20
	0x033B832C BL 0x2EF1C78
	0x033B8330 ADRP X9, 0xD74000
	0x033B8334 LDR W8, [X31 + 0x70]
	0x033B8338 LDR X9, [X9 + 0x148]
	0x033B833C ADD X0, X31, 0x40
	0x033B8340 MOV X1, X19
	0x033B8344 ADD W20, W8, W20
	0x033B8348 LDR X3, [X9]
	0x033B834C MOV W2, W20
	0x033B8350 BL 0x2EF1C78
	0x033B8354 ADRP X9, 0xD74000
	0x033B8358 LDR W8, [X31 + 0x50]
	0x033B835C LDR X9, [X9 + 0x150]
	0x033B8360 ADD X0, X31, 0x20
	0x033B8364 MOV X1, X19
	0x033B8368 ADD W2, W8, W20
	0x033B836C LDR X3, [X9]
	0x033B8370 BL 0x2EF1C78
	0x033B8374 B 0x33B8260
	0x033B8378 ADRP X0, 0xD40000
	0x033B837C LDR X0, [X0 + 0x528]
	0x033B8380 BL 0x1C16D08
	0x033B8384 BL 0x1C16F10
	0x033B8388 MOV X1, X31
	0x033B838C MOV X19, X0
	0x033B8390 BL 0x3315F20
	0x033B8394 ADRP X0, 0xD74000
	0x033B8398 LDR X0, [X0 + 0x1F0]
	0x033B839C BL 0x1C16D08
	0x033B83A0 MOV X1, X0
	0x033B83A4 MOV X0, X19
	0x033B83A8 BL 0x1C16DEC
	0x033B83AC MOV X1, X31
	0x033B83B0 B 0x33CC51C
	0x033B83B4 MOV X1, X31
	0x033B83B8 B 0x33CC51C
	0x033B83BC MOV X1, X31
	0x033B83C0 B 0x33CC514
	0x033B83C4 MOV X1, X31
	0x033B83C8 B 0x33CC514
	0x033B83CC STR X30, [X31 - 0x10]!
	0x033B83D0 MOV X1, X0
	0x033B83D4 ADD X0, X31, 0x8
	0x033B83D8 MOV X2, X31
	0x033B83DC STR X31, [X31 + 0x8]
	0x033B83E0 BL 0x33CBEF0
	0x033B83E4 LDR X0, [X31 + 0x8]
	0x033B83E8 LDR X30, [X31], #0x10
	0x033B83EC RET
	0x033B83F0 MOV X2, X31
	0x033B83F4 B 0x33CC43C
	0x033B83F8 STP X30, X21, [X31 - 0x20]!
	0x033B83FC STP X20, X19, [X31 + 0x10]
	0x033B8400 ADRP X21, 0x1025000
	0x033B8404 LDRB W8, [X21 + 0x1DA]
	0x033B8408 MOV X20, X1
	0x033B840C MOV X19, X0
	0x033B8410 TBNZ X8, 0x0, 0x33B8428
	0x033B8414 ADRP X0, 0xD64000
	0x033B8418 LDR X0, [X0 + 0x4E8]
	0x033B841C BL 0x1C16CF4
	0x033B8420 MOVZ W8, 0x1
	0x033B8424 STRB W8, [X21 + 0x1DA]
	0x033B8428 CBZ X20, 0x33B84C0
	0x033B842C CMP X20, X19
	0x033B8430 B.EQ 0x33B8474
	0x033B8434 LDR X8, [X20]
	0x033B8438 MOV X0, X20
	0x033B843C LDR X9, [X8 + 0x328]
	0x033B8440 LDR X1, [X8 + 0x330]
	0x033B8444 BLR X9
	0x033B8448 ADRP X8, 0xD64000
	0x033B844C LDR X8, [X8 + 0x4E8]
	0x033B8450 LDR X8, [X8]
	0x033B8454 CBZ X0, 0x33B846C
	0x033B8458 LDR X9, [X0]
	0x033B845C LDRB W10, [X8 + 0x130]
	0x033B8460 LDRB W11, [X9 + 0x130]
	0x033B8464 CMP W11, W10
	0x033B8468 B.CS 0x33B847C
	0x033B846C MOV X20, X31
	0x033B8470 B 0x33B8490
	0x033B8474 MOVZ W0, 0x1
	0x033B8478 B 0x33B84C4
	0x033B847C LDR X9, [X9 + 0xC8]
	0x033B8480 ADD X9, X9, X10, 0x3, LSL
	0x033B8484 LDUR X9, [X9 - 0x8]
	0x033B8488 CMP X9, X8
	0x033B848C CSEL X20, X0, X31, EQ
	0x033B8490 LDR W9, [X8 + 0xE0]
	0x033B8494 CBZ W9, 0x33B84B4
	0x033B8498 CBZ X20, 0x33B84C0
	0x033B849C MOV X0, X20
	0x033B84A0 MOV X1, X19
	0x033B84A4 LDP X20, X19, [X31 + 0x10]
	0x033B84A8 MOV X2, X31
	0x033B84AC LDP X30, X21, [X31], #0x20
	0x033B84B0 B 0x33CC528
	0x033B84B4 MOV X0, X8
	0x033B84B8 BL 0x1C16DFC
	0x033B84BC CBNZ X20, 0x33B849C
	0x033B84C0 MOV W0, W31
	0x033B84C4 LDP X20, X19, [X31 + 0x10]
	0x033B84C8 LDP X30, X21, [X31], #0x20
	0x033B84CC RET
	0x033B84D0 STP X30, X21, [X31 - 0x20]!
	0x033B84D4 STP X20, X19, [X31 + 0x10]
	0x033B84D8 ADRP X21, 0x1025000

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+48], X26
	004 Move [X31+56], X25
	005 Move [X31+64], X24
	006 Move [X31+72], X23
	007 Move [X31+80], X22
	008 Move [X31+88], X21
	009 Move [X31+96], X20
	010 Move [X31+104], X19
	011 Move X26, 0x1026000
	012 Move W8, [X26+468]
	013 Move X21, X6
	014 Move X20, X5
	015 Move X19, X4
	016 Move X23, X3
	017 Move W22, W2
	018 Move X24, X1
	019 Move X25, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {41}
	024 Move X0, 0xD74000
	025 Move X0, [X0+1336]
	026 Call 0x1C17CF4
	027 Move X0, 0xD75000
	028 Move X0, [X0+280]
	029 Call 0x1C17CF4
	030 Move X0, 0xD75000
	031 Move X0, [X0+368]
	032 Call 0x1C17CF4
	033 Move X0, 0xD75000
	034 Move X0, [X0+400]
	035 Call 0x1C17CF4
	036 Move X0, 0xD3C000
	037 Move X0, [X0+1728]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X26+468], W8
	041 Move [X31+8], X31
	042 Move [X31+16], X31
	043 Move [X31+24], X31
	044 Compare X24, 0
	045 JumpIfEqual {160}
	046 Add X8, X31, 8
	047 Move X0, X25
	048 Move X1, X24
	049 Move W2, W22
	050 Move X3, X20
	051 Move W4, W31
	052 Call RuntimeType.GetPropertyCandidates, X0, X1, X2, X3, X4
	053 Move W8, [X31+24]
	054 Compare W8, 0
	055 JumpIfEqual {88}
	056 Compare X20, 0
	057 JumpIfEqual {61}
	058 Move X9, [X20+24]
	059 Compare X9, 0
	060 JumpIfNotEqual {91}
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X8, 0xD75000
	063 Move X8, [X8+400]
	064 Add X0, X31, 8
	065 Move W1, W31
	066 Move X2, [X8]
	067 Call 0x2EF2B34, X0, X1
	068 Move X20, X0
	069 Compare X19, 0
	070 JumpIfEqual {148}
	071 Compare X20, 0
	072 JumpIfEqual {193}
	073 Move X8, [X20]
	074 Move X0, X20
	075 Move X9, [X8+584]
	076 Move X1, [X8+592]
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Move X8, [X19]
	079 Move X1, X0
	080 Move X0, X19
	081 Move X9, [X8+2168]
	082 Move X2, [X8+2176]
	083 NotImplemented "Instruction BLR not yet implemented."
	084 Move TEMP, X0
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfEqual {148}
	088 Move X20, X31
	089 Compare X19, 0
	090 JumpIfEqual {173}
	091 Move TEMP, X22
	092 And TEMP, TEMP, 0x10000
	093 Compare TEMP, 0x10000
	094 JumpIfEqual {102}
	095 Compare X23, 0
	096 JumpIfEqual {120}
	097 Move X8, 0xD75000
	098 Move X8, [X8+280]
	099 Add X0, X31, 8
	100 Move X1, [X8]
	101 Call 0x2EF2B6C, X0
	102 Move X8, 0xD75000
	103 Move X8, [X8+280]
	104 Add X0, X31, 8
	105 Move X1, [X8]
	106 Call 0x2EF2B6C, X0
	107 Move X8, 0xD74000
	108 Move X8, [X8+1336]
	109 Move X21, X0
	110 Move X8, [X8]
	111 Move W9, [X8+224]
	112 Compare W9, 0
	113 JumpIfNotEqual {116}
	114 Move X0, X8
	115 Call 0x1C17DFC
	116 Move X0, X21
	117 Move X1, X19
	118 Move X2, X20
	119 Call DefaultBinder.ExactPropertyBinding, X0, X1, X2, X3
	120 Move X8, 0xD3C000
	121 Move X8, [X8+1728]
	122 Move X0, [X8]
	123 Move W8, [X0+224]
	124 Compare W8, 0
	125 JumpIfNotEqual {127}
	126 Call 0x1C17DFC
	127 Move X0, X31
	128 Call Type.get_DefaultBinder
	129 Move X8, 0xD75000
	130 Move X8, [X8+280]
	131 Move X23, X0
	132 Add X0, X31, 8
	133 Move X1, [X8]
	134 Call 0x2EF2B6C, X0
	135 Compare X23, 0
	136 JumpIfEqual {193}
	137 Move X8, [X23]
	138 Move X2, X0
	139 Move X0, X23
	140 Move W1, W22
	141 Move X9, [X8+456]
	142 Move X6, [X8+464]
	143 Move X3, X19
	144 Move X4, X20
	145 Move X5, X21
	146 NotImplemented "Instruction BLR not yet implemented."
	147 Move X20, X0
	148 Move X0, X20
	149 Move X20, [X31+96]
	150 Move X19, [X31+104]
	151 Move X22, [X31+80]
	152 Move X21, [X31+88]
	153 Move X24, [X31+64]
	154 Move X23, [X31+72]
	155 Move X26, [X31+48]
	156 Move X25, [X31+56]
	157 Move X30, [X31+32]
	158 Add X31, X31, 112
	159 Return X0
	160 Move X0, 0xD41000
	161 Move X0, [X0+1320]
	162 Call 0x1C17D08
	163 Call 0x1C17F10
	164 Move X1, X31
	165 Move X19, X0
	166 Call ArgumentNullException..ctor, X0
	167 Move X0, 0xD75000
	168 Move X0, [X0+408]
	169 Call 0x1C17D08
	170 Move X1, X0
	171 Move X0, X19
	172 Call 0x1C17DEC
	173 Move X0, 0xD6E000
	174 Move X0, [X0+3040]
	175 Call 0x1C17D08
	176 Move X1, X31
	177 Call Environment.GetResourceString, X0
	178 Move X19, X0
	179 Move X0, 0xD6E000
	180 Move X0, [X0+1952]
	181 Call 0x1C17D08
	182 Call 0x1C17F10
	183 Move X1, X19
	184 Move X2, X31
	185 Move X20, X0
	186 Call AmbiguousMatchException..ctor, X0, X1
	187 Move X0, 0xD75000
	188 Move X0, [X0+408]
	189 Call 0x1C17D08
	190 Move X1, X0
	191 Move X0, X20
	192 Call 0x1C17DEC
	193 Call 0x1C17F20

Method: System.Reflection.EventInfo GetEvent(System.String name, System.Reflection.BindingFlags bindingAttr)

Disassembly:
	0x033B84DC LDRB W8, [X21 + 0x1DB]
	0x033B84E0 MOV X20, X1
	0x033B84E4 MOV X19, X0
	0x033B84E8 TBNZ X8, 0x0, 0x33B8500
	0x033B84EC ADRP X0, 0xD64000
	0x033B84F0 LDR X0, [X0 + 0x4E8]
	0x033B84F4 BL 0x1C16CF4
	0x033B84F8 MOVZ W8, 0x1
	0x033B84FC STRB W8, [X21 + 0x1DB]
	0x033B8500 CBZ X20, 0x33B8568
	0x033B8504 ADRP X9, 0xD64000
	0x033B8508 LDR X9, [X9 + 0x4E8]
	0x033B850C LDR X8, [X20]
	0x033B8510 LDR X0, [X9]
	0x033B8514 LDRB W10, [X8 + 0x130]
	0x033B8518 LDRB W9, [X0 + 0x130]
	0x033B851C CMP W10, W9
	0x033B8520 B.CC 0x33B8568
	0x033B8524 LDR X8, [X8 + 0xC8]
	0x033B8528 ADD X8, X8, X9, 0x3, LSL
	0x033B852C LDUR X8, [X8 - 0x8]
	0x033B8530 CMP X8, X0
	0x033B8534 CSEL X20, X20, X31, EQ
	0x033B8538 CBZ X20, 0x33B8568
	0x033B853C LDR W8, [X0 + 0xE0]
	0x033B8540 CBNZ W8, 0x33B8548
	0x033B8544 BL 0x1C16DFC
	0x033B8548 CMP X20, X19
	0x033B854C B.EQ 0x33B8578
	0x033B8550 MOV X0, X19
	0x033B8554 MOV X1, X20
	0x033B8558 LDP X20, X19, [X31 + 0x10]
	0x033B855C MOV X2, X31
	0x033B8560 LDP X30, X21, [X31], #0x20
	0x033B8564 B 0x33CC4E8
	0x033B8568 MOV W0, W31
	0x033B856C LDP X20, X19, [X31 + 0x10]
	0x033B8570 LDP X30, X21, [X31], #0x20
	0x033B8574 RET
	0x033B8578 MOVZ W0, 0x1
	0x033B857C B 0x33B856C
	0x033B8580 B 0x33B8584
	0x033B8584 STR X30, [X31 - 0x40]!
	0x033B8588 STP X24, X23, [X31 + 0x10]
	0x033B858C STP X22, X21, [X31 + 0x20]
	0x033B8590 STP X20, X19, [X31 + 0x30]
	0x033B8594 ADRP X20, 0x1025000
	0x033B8598 LDRB W8, [X20 + 0x1DC]
	0x033B859C MOV X19, X0
	0x033B85A0 TBNZ X8, 0x0, 0x33B85B8
	0x033B85A4 ADRP X0, 0xD64000
	0x033B85A8 LDR X0, [X0 + 0x4E8]
	0x033B85AC BL 0x1C16CF4
	0x033B85B0 MOVZ W8, 0x1
	0x033B85B4 STRB W8, [X20 + 0x1DC]
	0x033B85B8 MOV X0, X19
	0x033B85BC MOV X1, X31
	0x033B85C0 BL 0x33962E8
	0x033B85C4 MOV X20, X31
	0x033B85C8 TBNZ X0, 0x0, 0x33B8720
	0x033B85CC MOV X0, X19
	0x033B85D0 MOV X1, X31
	0x033B85D4 BL 0x33CC520
	0x033B85D8 TBZ X0, 0x0, 0x33B8738
	0x033B85DC LDR X8, [X19]
	0x033B85E0 MOV X0, X19
	0x033B85E4 LDR X9, [X8 + 0x498]
	0x033B85E8 LDR X1, [X8 + 0x4A0]
	0x033B85EC BLR X9
	0x033B85F0 ADRP X23, 0xD64000
	0x033B85F4 LDR X23, [X23 + 0x4E8]
	0x033B85F8 MOV X21, X0
	0x033B85FC LDR X8, [X23]
	0x033B8600 LDR W9, [X8 + 0xE0]
	0x033B8604 CBNZ W9, 0x33B8610
	0x033B8608 MOV X0, X8
	0x033B860C BL 0x1C16DFC
	0x033B8610 CBZ X21, 0x33B8760
	0x033B8614 LDR X8, [X23]
	0x033B8618 LDR X9, [X8 + 0xB8]
	0x033B861C LDR W8, [X21 + 0x18]
	0x033B8620 LDR X20, [X9 + 0x10]
	0x033B8624 CMP W8, 0x1
	0x033B8628 B.LT 0x33B86C8
	0x033B862C MOV W24, W31
	0x033B8630 CMP W24, W8
	0x033B8634 B.CS 0x33B875C
	0x033B8638 ADD X8, X21, W24, 0x3, SXTW
	0x033B863C LDR X22, [X8 + 0x20]
	0x033B8640 CBZ X22, 0x33B8760
	0x033B8644 LDR X8, [X22]
	0x033B8648 LDR X1, [X23]
	0x033B864C LDRB W10, [X8 + 0x130]
	0x033B8650 LDRB W9, [X1 + 0x130]
	0x033B8654 CMP W10, W9
	0x033B8658 B.CC 0x33B8754
	0x033B865C LDR X8, [X8 + 0xC8]
	0x033B8660 ADD X8, X8, X9, 0x3, LSL
	0x033B8664 LDUR X8, [X8 - 0x8]
	0x033B8668 CMP X8, X1
	0x033B866C B.NE 0x33B8754
	0x033B8670 MOV X0, X22
	0x033B8674 MOV X1, X31
	0x033B8678 BL 0x33962E8
	0x033B867C TBNZ X0, 0x0, 0x33B86B8
	0x033B8680 LDR X8, [X22]
	0x033B8684 MOV X0, X22
	0x033B8688 LDR X9, [X8 + 0x3A8]
	0x033B868C LDR X1, [X8 + 0x3B0]
	0x033B8690 BLR X9
	0x033B8694 TBZ X0, 0x0, 0x33B86B4
	0x033B8698 LDR X8, [X22]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X1
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x1026000
	011 Move W8, [X22+469]
	012 Move W21, W2
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xD65000
	020 Move X0, [X0+1256]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+469], W8
	024 Move [X31+12], W31
	025 Move [X31+8], W31
	026 Compare X20, 0
	027 JumpIfEqual {112}
	028 Move X8, 0xD65000
	029 Move X8, [X8+1256]
	030 Move X0, [X8]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Add X1, X31, 24
	036 Add X2, X31, 12
	037 Add X3, X31, 8
	038 Move W0, W21
	039 Call RuntimeType.FilterHelper, X0, X1, X2, X3
	040 Move X1, [X31+24]
	041 Move W3, [X31+8]
	042 Move X0, X19
	043 Move X4, X19
	044 Call RuntimeType.GetEvents_internal, X0, X1, X2, X3, X4
	045 Compare X0, 0
	046 JumpIfEqual {90}
	047 Move W8, [X0+24]
	048 Move X19, X0
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move W23, W31
	051 Move X20, X31
	052 Xor W24, W21, 2
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Add X8, X19, W23
	055 Move X21, [X8+32]
	056 Compare X21, 0
	057 JumpIfEqual {90}
	058 Move X0, X21
	059 Move X1, X31
	060 Call RuntimeEventInfo.get_BindingFlags, X0
	061 Move W22, W0
	062 Move X0, X21
	063 Move X1, X31
	064 Call RuntimeEventInfo.get_BindingFlags, X0
	065 And W8, W22, W24
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X0, X20
	068 Move X1, X31
	069 Move X2, X31
	070 Call EventInfo.op_Inequality, X0, X1
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfEqual {92}
	075 Move X20, X21
	076 Move W8, [X19+24]
	077 Add W23, W23, 1
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move X20, X31
	080 Move X0, X20
	081 Move X20, [X31+64]
	082 Move X19, [X31+72]
	083 Move X22, [X31+48]
	084 Move X21, [X31+56]
	085 Move X24, [X31+32]
	086 Move X23, [X31+40]
	087 Move X30, [X31+16]
	088 Add X31, X31, 80
	089 Return X0
	090 Call 0x1C17F20
	091 Call 0x1C17F28
	092 Move X0, 0xD6E000
	093 Move X0, [X0+3040]
	094 Call 0x1C17D08
	095 Move X1, X31
	096 Call Environment.GetResourceString, X0
	097 Move X19, X0
	098 Move X0, 0xD6E000
	099 Move X0, [X0+1952]
	100 Call 0x1C17D08
	101 Call 0x1C17F10
	102 Move X1, X19
	103 Move X2, X31
	104 Move X20, X0
	105 Call AmbiguousMatchException..ctor, X0, X1
	106 Move X0, 0xD75000
	107 Move X0, [X0+416]
	108 Call 0x1C17D08
	109 Move X1, X0
	110 Move X0, X20
	111 Call 0x1C17DEC
	112 Move X0, 0xD41000
	113 Move X0, [X0+1320]
	114 Call 0x1C17D08
	115 Call 0x1C17F10
	116 Move X1, X31
	117 Move X19, X0
	118 Call ArgumentNullException..ctor, X0
	119 Move X0, 0xD75000
	120 Move X0, [X0+416]
	121 Call 0x1C17D08
	122 Move X1, X0
	123 Move X0, X19
	124 Call 0x1C17DEC

Method: System.Reflection.FieldInfo GetField(System.String name, System.Reflection.BindingFlags bindingAttr)

Disassembly:
	0x033B869C MOV X0, X22
	0x033B86A0 LDR X9, [X8 + 0x488]
	0x033B86A4 LDR X1, [X8 + 0x490]
	0x033B86A8 BLR X9
	0x033B86AC ANDS W31, W0, 0xC
	0x033B86B0 B.EQ 0x33B86B8
	0x033B86B4 MOV X20, X22
	0x033B86B8 LDR W8, [X21 + 0x18]
	0x033B86BC ADD W24, W24, 0x1
	0x033B86C0 CMP W24, W8
	0x033B86C4 B.LT 0x33B8630
	0x033B86C8 LDR X0, [X23]
	0x033B86CC LDR W8, [X0 + 0xE0]
	0x033B86D0 CBNZ W8, 0x33B86DC
	0x033B86D4 BL 0x1C16DFC
	0x033B86D8 LDR X0, [X23]
	0x033B86DC LDR X8, [X0 + 0xB8]
	0x033B86E0 LDR X8, [X8 + 0x10]
	0x033B86E4 CMP X20, X8
	0x033B86E8 B.NE 0x33B8720
	0x033B86EC LDR X8, [X19]
	0x033B86F0 MOV X0, X19
	0x033B86F4 LDR X9, [X8 + 0x488]
	0x033B86F8 LDR X1, [X8 + 0x490]
	0x033B86FC BLR X9
	0x033B8700 TBZ X0, 0x3, 0x33B8720
	0x033B8704 LDR X0, [X23]
	0x033B8708 LDR W8, [X0 + 0xE0]
	0x033B870C CBNZ W8, 0x33B8718
	0x033B8710 BL 0x1C16DFC
	0x033B8714 LDR X0, [X23]
	0x033B8718 LDR X8, [X0 + 0xB8]
	0x033B871C LDR X20, [X8]
	0x033B8720 MOV X0, X20
	0x033B8724 LDP X20, X19, [X31 + 0x30]
	0x033B8728 LDP X22, X21, [X31 + 0x20]
	0x033B872C LDP X24, X23, [X31 + 0x10]
	0x033B8730 LDR X30, [X31], #0x40
	0x033B8734 RET
	0x033B8738 MOV X0, X19
	0x033B873C LDP X20, X19, [X31 + 0x30]
	0x033B8740 LDP X22, X21, [X31 + 0x20]
	0x033B8744 LDP X24, X23, [X31 + 0x10]
	0x033B8748 MOV X1, X31
	0x033B874C LDR X30, [X31], #0x40
	0x033B8750 B 0x33CC524
	0x033B8754 MOV X0, X22
	0x033B8758 BL 0x1C171E0
	0x033B875C BL 0x1C16F28
	0x033B8760 BL 0x1C16F20
	0x033B8764 RET
	0x033B8768 MOV X1, X31
	0x033B876C B 0x33CC32C
	0x033B8770 MOV X1, X31
	0x033B8774 B 0x33CC454
	0x033B8778 MOV X1, X31
	0x033B877C B 0x33CC37C
	0x033B8780 MOV X1, X31
	0x033B8784 B 0x33CC340
	0x033B8788 MOV X1, X31
	0x033B878C B 0x33CC398
	0x033B8790 MOV W1, W31
	0x033B8794 MOV X2, X31
	0x033B8798 B 0x33CC444
	0x033B879C STR X30, [X31 - 0x30]!
	0x033B87A0 STP X22, X21, [X31 + 0x10]
	0x033B87A4 STP X20, X19, [X31 + 0x20]
	0x033B87A8 ADRP X20, 0x1025000
	0x033B87AC ADRP X21, 0xD73000
	0x033B87B0 ADRP X22, 0xD3B000
	0x033B87B4 LDRB W8, [X20 + 0x1DD]
	0x033B87B8 LDR X21, [X21 + 0x488]
	0x033B87BC LDR X22, [X22 + 0x6C0]
	0x033B87C0 MOV X19, X0
	0x033B87C4 TBNZ X8, 0x0, 0x33B87F4
	0x033B87C8 ADRP X0, 0xD70000
	0x033B87CC LDR X0, [X0 + 0x2D0]
	0x033B87D0 BL 0x1C16CF4
	0x033B87D4 ADRP X0, 0xD3B000
	0x033B87D8 LDR X0, [X0 + 0x6C0]
	0x033B87DC BL 0x1C16CF4
	0x033B87E0 ADRP X0, 0xD73000
	0x033B87E4 LDR X0, [X0 + 0x488]
	0x033B87E8 BL 0x1C16CF4
	0x033B87EC MOVZ W8, 0x1
	0x033B87F0 STRB W8, [X20 + 0x1DD]
	0x033B87F4 LDR X0, [X22]
	0x033B87F8 LDR X20, [X21]
	0x033B87FC LDR W8, [X0 + 0xE0]
	0x033B8800 CBNZ W8, 0x33B8808
	0x033B8804 BL 0x1C16DFC
	0x033B8808 MOV X0, X20
	0x033B880C MOV X1, X31
	0x033B8810 BL 0x338C698
	0x033B8814 MOV X1, X0
	0x033B8818 MOV X0, X19
	0x033B881C MOV X2, X31
	0x033B8820 BL 0x3395194
	0x033B8824 TBNZ X0, 0x0, 0x33B8864
	0x033B8828 ADRP X8, 0xD70000
	0x033B882C LDR X0, [X22]
	0x033B8830 LDR X8, [X8 + 0x2D0]
	0x033B8834 LDR W9, [X0 + 0xE0]
	0x033B8838 LDR X20, [X8]
	0x033B883C CBNZ W9, 0x33B8844
	0x033B8840 BL 0x1C16DFC
	0x033B8844 MOV X0, X20
	0x033B8848 MOV X1, X31
	0x033B884C BL 0x338C698
	0x033B8850 MOV X1, X0
	0x033B8854 MOV X0, X19
	0x033B8858 MOV X2, X31
	0x033B885C BL 0x3395194
	0x033B8860 TBZ X0, 0x0, 0x33B8878
	0x033B8864 LDP X20, X19, [X31 + 0x20]
	0x033B8868 LDP X22, X21, [X31 + 0x10]
	0x033B886C MOV W0, W31
	0x033B8870 LDR X30, [X31], #0x30
	0x033B8874 RET
	0x033B8878 LDR X0, [X22]
	0x033B887C LDR X20, [X21]
	0x033B8880 LDR W8, [X0 + 0xE0]
	0x033B8884 CBNZ W8, 0x33B888C
	0x033B8888 BL 0x1C16DFC
	0x033B888C MOV X0, X20
	0x033B8890 MOV X1, X31
	0x033B8894 BL 0x338C698
	0x033B8898 LDR X8, [X19]
	0x033B889C MOV X1, X0
	0x033B88A0 MOV X0, X19
	0x033B88A4 LDP X20, X19, [X31 + 0x20]
	0x033B88A8 LDR X3, [X8 + 0x298]
	0x033B88AC LDR X2, [X8 + 0x2A0]
	0x033B88B0 LDP X22, X21, [X31 + 0x10]
	0x033B88B4 LDR X30, [X31], #0x30
	0x033B88B8 BR X3
	0x033B88BC STP X30, X21, [X31 - 0x20]!
	0x033B88C0 STP X20, X19, [X31 + 0x10]
	0x033B88C4 ADRP X21, 0x1025000
	0x033B88C8 ADRP X20, 0xD64000
	0x033B88CC LDRB W8, [X21 + 0x1DE]
	0x033B88D0 LDR X20, [X20 + 0x4E8]
	0x033B88D4 MOV X19, X0
	0x033B88D8 TBNZ X8, 0x0, 0x33B88F0
	0x033B88DC ADRP X0, 0xD64000
	0x033B88E0 LDR X0, [X0 + 0x4E8]
	0x033B88E4 BL 0x1C16CF4
	0x033B88E8 MOVZ W8, 0x1
	0x033B88EC STRB W8, [X21 + 0x1DE]
	0x033B88F0 MOV X0, X19
	0x033B88F4 BL 0x33B8584
	0x033B88F8 LDR X8, [X20]
	0x033B88FC MOV X19, X0
	0x033B8900 LDR W9, [X8 + 0xE0]
	0x033B8904 CBNZ W9, 0x33B8914
	0x033B8908 MOV X0, X8
	0x033B890C BL 0x1C16DFC
	0x033B8910 LDR X8, [X20]
	0x033B8914 LDR X8, [X8 + 0xB8]
	0x033B8918 LDR X8, [X8 + 0x8]
	0x033B891C CMP X19, X8
	0x033B8920 LDP X20, X19, [X31 + 0x10]
	0x033B8924 CSET W0, EQ
	0x033B8928 LDP X30, X21, [X31], #0x20
	0x033B892C RET
	0x033B8930 MOV X1, X31
	0x033B8934 B 0x33CC3F8
	0x033B8938 STR X30, [X31 - 0x20]!
	0x033B893C STP X20, X19, [X31 + 0x10]
	0x033B8940 LDR X8, [X0]
	0x033B8944 MOV X19, X0
	0x033B8948 LDR X9, [X8 + 0x3A8]
	0x033B894C LDR X1, [X8 + 0x3B0]
	0x033B8950 BLR X9
	0x033B8954 TBZ X0, 0x0, 0x33B8968
	0x033B8958 MOV X0, X19
	0x033B895C LDP X20, X19, [X31 + 0x10]
	0x033B8960 LDR X30, [X31], #0x20
	0x033B8964 B 0x33B89B8
	0x033B8968 ADRP X0, 0xD6D000
	0x033B896C LDR X0, [X0 + 0xEC0]
	0x033B8970 BL 0x1C16D08
	0x033B8974 MOV X1, X31
	0x033B8978 BL 0x33BDD84
	0x033B897C MOV X19, X0
	0x033B8980 ADRP X0, 0xD3B000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x1026000
	011 Move W8, [X22+470]
	012 Move W21, W2
	013 Move X20, X1
	014 Move X19, X0
	015 Move [X31+8], X1
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xD65000
	021 Move X0, [X0+1256]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+470], W8
	025 Move [X31+4], W31
	026 Move [X31], W31
	027 Compare X20, 0
	028 JumpIfEqual {223}
	029 Move X8, 0xD65000
	030 Move X8, [X8+1256]
	031 Move X0, [X8]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Add X1, X31, 8
	037 Add X2, X31, 4
	038 Add X3, X31, 0
	039 Move W0, W21
	040 Call RuntimeType.FilterHelper, X0, X1, X2, X3
	041 Move X1, [X31+8]
	042 Move W3, [X31]
	043 Move X0, X19
	044 Move W2, W21
	045 Move X4, X19
	046 Call RuntimeType.GetFields_internal, X0, X1, X2, X3, X4
	047 Compare X0, 0
	048 JumpIfEqual {201}
	049 Move W8, [X0+24]
	050 Move X20, X0
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move W24, W31
	053 Move W23, W31
	054 Move X19, X31
	055 Xor W25, W21, 2
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Add X8, X20, W24
	058 Move X21, [X8+32]
	059 Compare X21, 0
	060 JumpIfEqual {201}
	061 Move X0, X21
	062 Move X1, X31
	063 Call RuntimeFieldInfo.get_BindingFlags, X0
	064 Move W22, W0
	065 Move X0, X21
	066 Move X1, X31
	067 Call RuntimeFieldInfo.get_BindingFlags, X0
	068 And W8, W22, W25
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X0, X19
	071 Move X1, X31
	072 Move X2, X31
	073 Call FieldInfo.op_Inequality, X0, X1
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {115}
	078 Move X8, [X21]
	079 Move X0, X21
	080 Move X9, [X8+440]
	081 Move X1, [X8+448]
	082 NotImplemented "Instruction BLR not yet implemented."
	083 Compare X19, 0
	084 JumpIfEqual {201}
	085 Move X8, [X19]
	086 Move X22, X0
	087 Move X0, X19
	088 Move X9, [X8+440]
	089 Move X1, [X8+448]
	090 NotImplemented "Instruction BLR not yet implemented."
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X8, [X19]
	093 Move X0, X19
	094 Move X9, [X8+440]
	095 Move X1, [X8+448]
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Compare X0, 0
	098 JumpIfEqual {201}
	099 Move X1, X31
	100 Call Type.get_IsInterface, X0
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfNotEqual {115}
	105 Move X8, [X21]
	106 Move X0, X21
	107 Move X9, [X8+440]
	108 Move X1, [X8+448]
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Compare X0, 0
	111 JumpIfEqual {201}
	112 Move X1, X31
	113 Call Type.get_IsInterface, X0
	114 Or W23, W23, W0
	115 Move X0, X19
	116 Move X1, X31
	117 Move X2, X31
	118 Call FieldInfo.op_Equality, X0, X1
	119 Move TEMP, X0
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfEqual {161}
	123 Move X8, [X21]
	124 Move X0, X21
	125 Move X9, [X8+440]
	126 Move X1, [X8+448]
	127 NotImplemented "Instruction BLR not yet implemented."
	128 Compare X19, 0
	129 JumpIfEqual {201}
	130 Move X8, [X19]
	131 Move X22, X0
	132 Move X0, X19
	133 Move X9, [X8+440]
	134 Move X1, [X8+448]
	135 NotImplemented "Instruction BLR not yet implemented."
	136 Compare X22, 0
	137 JumpIfEqual {201}
	138 Move X8, [X22]
	139 Move X1, X0
	140 Move X0, X22
	141 Move X9, [X8+664]
	142 Move X2, [X8+672]
	143 NotImplemented "Instruction BLR not yet implemented."
	144 Move TEMP, X0
	145 And TEMP, TEMP, 1
	146 Compare TEMP, 1
	147 JumpIfEqual {161}
	148 Move X8, [X19]
	149 Move X0, X19
	150 Move X9, [X8+440]
	151 Move X1, [X8+448]
	152 NotImplemented "Instruction BLR not yet implemented."
	153 Compare X0, 0
	154 JumpIfEqual {201}
	155 Move X1, X31
	156 Call Type.get_IsInterface, X0
	157 Move TEMP, X0
	158 And TEMP, TEMP, 1
	159 Compare TEMP, 1
	160 JumpIfNotEqual {162}
	161 Move X19, X21
	162 Move W8, [X20+24]
	163 Add W24, W24, 1
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move TEMP, X23
	166 And TEMP, TEMP, 1
	167 Compare TEMP, 1
	168 JumpIfEqual {175}
	169 Move X19, X31
	170 Move W23, W31
	171 Move TEMP, X23
	172 And TEMP, TEMP, 1
	173 Compare TEMP, 1
	174 JumpIfNotEqual {190}
	175 Compare X19, 0
	176 JumpIfEqual {201}
	177 Move X8, [X19]
	178 Move X0, X19
	179 Move X9, [X8+440]
	180 Move X1, [X8+448]
	181 NotImplemented "Instruction BLR not yet implemented."
	182 Compare X0, 0
	183 JumpIfEqual {201}
	184 Move X1, X31
	185 Call Type.get_IsInterface, X0
	186 Move TEMP, X0
	187 And TEMP, TEMP, 1
	188 Compare TEMP, 1
	189 JumpIfEqual {203}
	190 Move X0, X19
	191 Move X20, [X31+64]
	192 Move X19, [X31+72]
	193 Move X22, [X31+48]
	194 Move X21, [X31+56]
	195 Move X24, [X31+32]
	196 Move X23, [X31+40]
	197 Move X30, [X31+16]
	198 Move X25, [X31+24]
	199 Add X31, X31, 80
	200 Return X0
	201 Call 0x1C17F20
	202 Call 0x1C17F28
	203 Move X0, 0xD6E000
	204 Move X0, [X0+3040]
	205 Call 0x1C17D08
	206 Move X1, X31
	207 Call Environment.GetResourceString, X0
	208 Move X19, X0
	209 Move X0, 0xD6E000
	210 Move X0, [X0+1952]
	211 Call 0x1C17D08
	212 Call 0x1C17F10
	213 Move X1, X19
	214 Move X2, X31
	215 Move X20, X0
	216 Call AmbiguousMatchException..ctor, X0, X1
	217 Move X0, 0xD75000
	218 Move X0, [X0+424]
	219 Call 0x1C17D08
	220 Move X1, X0
	221 Move X0, X20
	222 Call 0x1C17DEC
	223 Move X0, 0xD41000
	224 Move X0, [X0+1320]
	225 Call 0x1C17D08
	226 Call 0x1C17F10
	227 Move X1, X31
	228 Move X19, X0
	229 Call ArgumentNullException..ctor, X0
	230 Move X0, 0xD75000
	231 Move X0, [X0+424]
	232 Call 0x1C17D08
	233 Move X1, X0
	234 Move X0, X19
	235 Call 0x1C17DEC

Method: System.Type GetInterface(System.String fullname, System.Boolean ignoreCase)

Disassembly:
	0x033B8984 LDR X0, [X0 + 0x5B0]
	0x033B8988 BL 0x1C16D08
	0x033B898C BL 0x1C16F10
	0x033B8990 MOV X1, X19
	0x033B8994 MOV X2, X31
	0x033B8998 MOV X20, X0
	0x033B899C BL 0x337DF1C
	0x033B89A0 ADRP X0, 0xD74000
	0x033B89A4 LDR X0, [X0 + 0x1F8]
	0x033B89A8 BL 0x1C16D08
	0x033B89AC MOV X1, X0
	0x033B89B0 MOV X0, X20
	0x033B89B4 BL 0x1C16DEC
	0x033B89B8 SUB X31, X31, 0x20
	0x033B89BC STP X30, X31, [X31 + 0x10]
	0x033B89C0 MOV X1, X31
	0x033B89C4 BL 0x33CC540
	0x033B89C8 MOV X1, X0
	0x033B89CC ADD X0, X31, 0x8
	0x033B89D0 MOV X2, X31
	0x033B89D4 STR X31, [X31 + 0x8]
	0x033B89D8 BL 0x320AAA8
	0x033B89DC LDR X8, [X31 + 0x8]
	0x033B89E0 ADD X0, X31, 0x18
	0x033B89E4 MOV X1, X31
	0x033B89E8 STR X8, [X31 + 0x18]
	0x033B89EC BL 0x320ABF8
	0x033B89F0 LDR X30, [X31 + 0x10]
	0x033B89F4 ADD X31, X31, 0x20
	0x033B89F8 RET
	0x033B89FC MOV X1, X31
	0x033B8A00 B 0x33CC3DC
	0x033B8A04 MOV X1, X31
	0x033B8A08 B 0x33CC3B4
	0x033B8A0C STR X30, [X31 - 0x20]!
	0x033B8A10 STP X20, X19, [X31 + 0x10]
	0x033B8A14 LDR X8, [X0]
	0x033B8A18 MOV X19, X0
	0x033B8A1C LDR X9, [X8 + 0x348]
	0x033B8A20 LDR X1, [X8 + 0x350]
	0x033B8A24 BLR X9
	0x033B8A28 TBZ X0, 0x0, 0x33B8A40
	0x033B8A2C MOV X0, X19
	0x033B8A30 LDP X20, X19, [X31 + 0x10]
	0x033B8A34 MOV X1, X31
	0x033B8A38 LDR X30, [X31], #0x20
	0x033B8A3C B 0x33CC510
	0x033B8A40 ADRP X0, 0xD6D000
	0x033B8A44 LDR X0, [X0 + 0xE90]
	0x033B8A48 BL 0x1C16D08
	0x033B8A4C MOV X1, X31
	0x033B8A50 BL 0x33BDD84
	0x033B8A54 MOV X19, X0
	0x033B8A58 ADRP X0, 0xD43000
	0x033B8A5C LDR X0, [X0 + 0x578]
	0x033B8A60 BL 0x1C16D08
	0x033B8A64 BL 0x1C16F10
	0x033B8A68 MOV X1, X19
	0x033B8A6C MOV X2, X31
	0x033B8A70 MOV X20, X0
	0x033B8A74 BL 0x3314A68
	0x033B8A78 ADRP X0, 0xD74000
	0x033B8A7C LDR X0, [X0 + 0x200]
	0x033B8A80 BL 0x1C16D08
	0x033B8A84 MOV X1, X0
	0x033B8A88 MOV X0, X20
	0x033B8A8C BL 0x1C16DEC
	0x033B8A90 MOV X1, X31
	0x033B8A94 B 0x33CC518
	0x033B8A98 STR X30, [X31 - 0x20]!
	0x033B8A9C STP X20, X19, [X31 + 0x10]
	0x033B8AA0 ADRP X20, 0x1025000
	0x033B8AA4 LDRB W8, [X20 + 0x1DF]
	0x033B8AA8 MOV X19, X0
	0x033B8AAC TBNZ X8, 0x0, 0x33B8AD0
	0x033B8AB0 ADRP X0, 0xD3B000
	0x033B8AB4 LDR X0, [X0 + 0xDF8]
	0x033B8AB8 BL 0x1C16CF4
	0x033B8ABC ADRP X0, 0xD3B000
	0x033B8AC0 LDR X0, [X0 + 0xAC8]
	0x033B8AC4 BL 0x1C16CF4
	0x033B8AC8 MOVZ W8, 0x1
	0x033B8ACC STRB W8, [X20 + 0x1DF]
	0x033B8AD0 LDR X8, [X19]
	0x033B8AD4 MOV X0, X19
	0x033B8AD8 LDR X9, [X8 + 0x588]
	0x033B8ADC LDR X1, [X8 + 0x590]
	0x033B8AE0 BLR X9
	0x033B8AE4 TBZ X0, 0x0, 0x33B8B4C
	0x033B8AE8 ADRP X8, 0xD3B000
	0x033B8AEC LDR X8, [X8 + 0xDF8]
	0x033B8AF0 LDR X0, [X8]
	0x033B8AF4 LDR W8, [X0 + 0xE0]
	0x033B8AF8 CBNZ W8, 0x33B8B00
	0x033B8AFC BL 0x1C16DFC
	0x033B8B00 MOV X0, X19
	0x033B8B04 BL 0x33B04A8
	0x033B8B08 CBZ X0, 0x33B8BB0
	0x033B8B0C ADRP X8, 0xD3B000
	0x033B8B10 LDR X8, [X8 + 0xAC8]
	0x033B8B14 MOV X19, X0
	0x033B8B18 LDR W1, [X19 + 0x18]
	0x033B8B1C LDR X0, [X8]
	0x033B8B20 BL 0x1C16D6C
	0x033B8B24 LDR W2, [X19 + 0x18]
	0x033B8B28 MOV X20, X0
	0x033B8B2C MOV X0, X19
	0x033B8B30 MOV X1, X20
	0x033B8B34 MOV X3, X31
	0x033B8B38 BL 0x33A0C7C
	0x033B8B3C MOV X0, X20
	0x033B8B40 LDP X20, X19, [X31 + 0x10]
	0x033B8B44 LDR X30, [X31], #0x20
	0x033B8B48 RET
	0x033B8B4C ADRP X0, 0xD73000
	0x033B8B50 LDR X0, [X0 + 0x3B8]
	0x033B8B54 BL 0x1C16D08
	0x033B8B58 MOV X1, X31
	0x033B8B5C BL 0x33BDD84
	0x033B8B60 MOV X19, X0
	0x033B8B64 ADRP X0, 0xD43000
	0x033B8B68 LDR X0, [X0 + 0x578]
	0x033B8B6C BL 0x1C16D08
	0x033B8B70 BL 0x1C16F10
	0x033B8B74 MOV X20, X0
	0x033B8B78 ADRP X0, 0xD73000
	0x033B8B7C LDR X0, [X0 + 0x3C0]
	0x033B8B80 BL 0x1C16D08
	0x033B8B84 MOV X2, X0
	0x033B8B88 MOV X0, X20
	0x033B8B8C MOV X1, X19
	0x033B8B90 MOV X3, X31
	0x033B8B94 BL 0x330E16C
	0x033B8B98 ADRP X0, 0xD74000
	0x033B8B9C LDR X0, [X0 + 0x208]
	0x033B8BA0 BL 0x1C16D08
	0x033B8BA4 MOV X1, X0
	0x033B8BA8 MOV X0, X20
	0x033B8BAC BL 0x1C16DEC
	0x033B8BB0 BL 0x1C16F20
	0x033B8BB4 STP X30, X25, [X31 - 0x40]!
	0x033B8BB8 STP X24, X23, [X31 + 0x10]
	0x033B8BBC STP X22, X21, [X31 + 0x20]
	0x033B8BC0 STP X20, X19, [X31 + 0x30]
	0x033B8BC4 ADRP X20, 0x1025000
	0x033B8BC8 LDRB W8, [X20 + 0x1E0]
	0x033B8BCC MOV X19, X0
	0x033B8BD0 TBNZ X8, 0x0, 0x33B8BE8
	0x033B8BD4 ADRP X0, 0xD3B000
	0x033B8BD8 LDR X0, [X0 + 0xDF8]
	0x033B8BDC BL 0x1C16CF4
	0x033B8BE0 MOVZ W8, 0x1
	0x033B8BE4 STRB W8, [X20 + 0x1E0]
	0x033B8BE8 LDR X8, [X19]
	0x033B8BEC MOV X0, X19
	0x033B8BF0 LDR X9, [X8 + 0x588]
	0x033B8BF4 LDR X1, [X8 + 0x590]
	0x033B8BF8 BLR X9
	0x033B8BFC TBZ X0, 0x0, 0x33B8CC4
	0x033B8C00 ADRP X24, 0xD3B000
	0x033B8C04 LDR X24, [X24 + 0xDF8]
	0x033B8C08 LDR X0, [X24]
	0x033B8C0C LDR W8, [X0 + 0xE0]
	0x033B8C10 CBNZ W8, 0x33B8C18
	0x033B8C14 BL 0x1C16DFC
	0x033B8C18 MOV X0, X19
	0x033B8C1C BL 0x33B037C
	0x033B8C20 CBZ X0, 0x33B8CBC
	0x033B8C24 LDR W1, [X0 + 0x18]
	0x033B8C28 MOV X20, X0
	0x033B8C2C MOV X0, X19
	0x033B8C30 MOV X2, X31
	0x033B8C34 BL 0x33A2DF8
	0x033B8C38 LDR X8, [X20 + 0x18]
	0x033B8C3C MOV X21, X0
	0x033B8C40 CMP W8, 0x1
	0x033B8C44 B.LT 0x33B8CA4
	0x033B8C48 MOV X22, X31
	0x033B8C4C AND X8, X8, 0x0
	0x033B8C50 ADD X25, X20, 0x20
	0x033B8C54 CMP X22, W8, UXTW
	0x033B8C58 B.CS 0x33B8CC0
	0x033B8C5C LDR X0, [X24]
	0x033B8C60 LDR X23, [X25, X22, LSL #3]
	0x033B8C64 LDR W8, [X0 + 0xE0]
	0x033B8C68 CBNZ W8, 0x33B8C70
	0x033B8C6C BL 0x1C16DFC
	0x033B8C70 MOV X0, X19
	0x033B8C74 MOV X1, X23
	0x033B8C78 BL 0x33B00EC
	0x033B8C7C CBZ X21, 0x33B8CBC
	0x033B8C80 MOV X1, X0
	0x033B8C84 MOV X0, X21
	0x033B8C88 MOV W2, W22
	0x033B8C8C MOV X3, X31
	0x033B8C90 BL 0x339F798
	0x033B8C94 LDR W8, [X20 + 0x18]
	0x033B8C98 ADD X22, X22, 0x1
	0x033B8C9C CMP X22, W8, SXTW
	0x033B8CA0 B.LT 0x33B8C54
	0x033B8CA4 MOV X0, X21
	0x033B8CA8 LDP X20, X19, [X31 + 0x30]
	0x033B8CAC LDP X22, X21, [X31 + 0x20]
	0x033B8CB0 LDP X24, X23, [X31 + 0x10]
	0x033B8CB4 LDP X30, X25, [X31], #0x40
	0x033B8CB8 RET
	0x033B8CBC BL 0x1C16F20
	0x033B8CC0 BL 0x1C16F28
	0x033B8CC4 ADRP X0, 0xD73000
	0x033B8CC8 LDR X0, [X0 + 0x3B8]
	0x033B8CCC BL 0x1C16D08
	0x033B8CD0 MOV X1, X31
	0x033B8CD4 BL 0x33BDD84
	0x033B8CD8 MOV X19, X0
	0x033B8CDC ADRP X0, 0xD43000
	0x033B8CE0 LDR X0, [X0 + 0x578]
	0x033B8CE4 BL 0x1C16D08
	0x033B8CE8 BL 0x1C16F10
	0x033B8CEC MOV X20, X0
	0x033B8CF0 ADRP X0, 0xD73000
	0x033B8CF4 LDR X0, [X0 + 0x3C0]
	0x033B8CF8 BL 0x1C16D08
	0x033B8CFC MOV X2, X0
	0x033B8D00 MOV X0, X20
	0x033B8D04 MOV X1, X19
	0x033B8D08 MOV X3, X31

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X22, 0x1026000
	015 Move W8, [X22+471]
	016 Move W19, W2
	017 Move X21, X1
	018 Move X20, X0
	019 And W9, W2, 1
	020 Move [X31+28], W9
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {42}
	025 Move X0, 0xD75000
	026 Move X0, [X0+432]
	027 Call 0x1C17CF4
	028 Move X0, 0xD75000
	029 Move X0, [X0+440]
	030 Call 0x1C17CF4
	031 Move X0, 0xD75000
	032 Move X0, [X0+448]
	033 Call 0x1C17CF4
	034 Move X0, 0xD75000
	035 Move X0, [X0+456]
	036 Call 0x1C17CF4
	037 Move X0, 0xD65000
	038 Move X0, [X0+1256]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X22+471], W8
	042 Move [X31+8], X31
	043 Move [X31+16], X31
	044 Move [X31+4], W31
	045 Compare X21, 0
	046 JumpIfEqual {237}
	047 Move X25, 0xD65000
	048 Move X25, [X25+1256]
	049 And W31, W19, 1
	050 Move W9, 48
	051 NotImplemented "Instruction CINC not yet implemented."
	052 Move X0, [X25]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Add X1, X31, 16
	058 Add X2, X31, 8
	059 Move X0, X21
	060 Call RuntimeType.SplitName, X0, X1, X2
	061 Add X1, X31, 16
	062 Add X2, X31, 28
	063 Add X3, X31, 4
	064 Move W0, W19
	065 Call RuntimeType.FilterHelper, X0, X1, X2, X3
	066 Move X8, [X20]
	067 Move W9, [X31+28]
	068 Move X0, X20
	069 Move X10, [X8+2136]
	070 Move X1, [X8+2144]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move W8, 4
	073 NotImplemented "Instruction CINC not yet implemented."
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Compare X0, 0
	076 JumpIfEqual {215}
	077 Move W8, [X0+24]
	078 Move X20, [X31+16]
	079 Move X22, X0
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X27, 0xD75000
	082 Move X28, 0xD75000
	083 Move X29, 0xD75000
	084 Move X27, [X27+456]
	085 Move X28, [X28+448]
	086 Move X29, [X29+432]
	087 Move W26, W31
	088 Move X23, X31
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Add X8, X22, W26
	091 Move X24, [X8+32]
	092 Compare X24, 0
	093 JumpIfEqual {215}
	094 Move X8, [X24]
	095 Move X1, [X25]
	096 Move W10, [X8+304]
	097 Move W9, [X1+304]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X10, [X8+200]
	100 Add X9, X10, X9
	101 NotImplemented "Instruction LDUR not yet implemented."
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X9, [X8+424]
	104 Move X1, [X8+432]
	105 Move X0, X24
	106 NotImplemented "Instruction BLR not yet implemented."
	107 Move X1, X20
	108 Move W2, W21
	109 Move X3, X31
	110 Call String.Equals, X0, X1, X2
	111 Move TEMP, X0
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfNotEqual {145}
	115 Compare X23, 0
	116 JumpIfNotEqual {125}
	117 Move X0, [X27]
	118 Call 0x1C17F10
	119 Move X2, [X28]
	120 Move W1, 2
	121 Move X23, X0
	122 Call List`1<Object>..ctor, X0, X1
	123 Compare X23, 0
	124 JumpIfEqual {215}
	125 Move W10, [X23+28]
	126 Move X8, [X23+16]
	127 Move X9, [X29]
	128 Add W10, W10, 1
	129 Move [X23+28], W10
	130 Compare X8, 0
	131 JumpIfEqual {215}
	132 NotImplemented "Instruction LDRSW not yet implemented."
	133 Move W11, [X8+24]
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Add W9, W10, 1
	136 Add X8, X8, X10
	137 Move [X23+24], W9
	138 Move [X8+32], X24
	139 Move X8, [X9+32]
	140 Move X0, X23
	141 Move X1, X24
	142 Move X8, [X8+192]
	143 Move X2, [X8+112]
	144 Call List`1<Object>.AddWithResize, X0, X1
	145 Move W8, [X22+24]
	146 Add W26, W26, 1
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Compare X23, 0
	149 JumpIfNotEqual {153}
	150 Move X23, X31
	151 Compare X23, 0
	152 JumpIfEqual {198}
	153 Move X8, 0xD75000
	154 Move X8, [X8+440]
	155 Move X0, X23
	156 Move X1, [X8]
	157 Call List`1<Object>.ToArray, X0
	158 Compare X0, 0
	159 JumpIfEqual {215}
	160 Move X8, [X0+24]
	161 Move X21, X0
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Move X22, [X31+8]
	164 Move X27, X31
	165 Move X24, X31
	166 And X8, X8, 0
	167 Add X26, X21, 32
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move X0, [X25]
	170 Move X23, [X26]
	171 Move W8, [X0+224]
	172 Compare W8, 0
	173 JumpIfNotEqual {175}
	174 Call 0x1C17DFC
	175 Move X0, X23
	176 Move W1, W19
	177 Move X2, X20
	178 Move W3, W31
	179 Move X4, X22
	180 Call RuntimeType.FilterApplyType, X0, X1, X2, X3, X4
	181 Move TEMP, X0
	182 And TEMP, TEMP, 1
	183 Compare TEMP, 1
	184 JumpIfNotEqual {192}
	185 Move X0, [X25]
	186 Move W8, [X0+224]
	187 Compare W8, 0
	188 JumpIfNotEqual {190}
	189 Call 0x1C17DFC
	190 Compare X27, 0
	191 JumpIfEqual {193}
	192 Move X23, X27
	193 Move W8, [X21+24]
	194 Add X24, X24, 1
	195 Move X27, X23
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Move X23, X31
	198 Move X0, X23
	199 Move X20, [X31+112]
	200 Move X19, [X31+120]
	201 Move X22, [X31+96]
	202 Move X21, [X31+104]
	203 Move X24, [X31+80]
	204 Move X23, [X31+88]
	205 Move X26, [X31+64]
	206 Move X25, [X31+72]
	207 Move X28, [X31+48]
	208 Move X27, [X31+56]
	209 Move X29, [X31+32]
	210 Move X30, [X31+40]
	211 Add X31, X31, 128
	212 Return X0
	213 Move X0, X24
	214 Call 0x1C181E0
	215 Call 0x1C17F20
	216 Call 0x1C17F28
	217 Move X0, 0xD6E000
	218 Move X0, [X0+3040]
	219 Call 0x1C17D08
	220 Move X1, X31
	221 Call Environment.GetResourceString, X0
	222 Move X19, X0
	223 Move X0, 0xD6E000
	224 Move X0, [X0+1952]
	225 Call 0x1C17D08
	226 Call 0x1C17F10
	227 Move X1, X19
	228 Move X2, X31
	229 Move X20, X0
	230 Call AmbiguousMatchException..ctor, X0, X1
	231 Move X0, 0xD75000
	232 Move X0, [X0+464]
	233 Call 0x1C17D08
	234 Move X1, X0
	235 Move X0, X20
	236 Call 0x1C17DEC
	237 Move X0, 0xD41000
	238 Move X0, [X0+1320]
	239 Call 0x1C17D08
	240 Call 0x1C17F10
	241 Move X1, X31
	242 Move X19, X0
	243 Call ArgumentNullException..ctor, X0
	244 Move X0, 0xD75000
	245 Move X0, [X0+464]
	246 Call 0x1C17D08
	247 Move X1, X0
	248 Move X0, X19
	249 Call 0x1C17DEC

Method: System.Type GetNestedType(System.String fullname, System.Reflection.BindingFlags bindingAttr)

Disassembly:
	0x033B8D0C BL 0x330E16C
	0x033B8D10 ADRP X0, 0xD74000
	0x033B8D14 LDR X0, [X0 + 0x210]
	0x033B8D18 BL 0x1C16D08
	0x033B8D1C MOV X1, X0
	0x033B8D20 MOV X0, X20
	0x033B8D24 BL 0x1C16DEC
	0x033B8D28 STR X30, [X31 - 0x20]!
	0x033B8D2C STP X20, X19, [X31 + 0x10]
	0x033B8D30 ADRP X20, 0x1025000
	0x033B8D34 LDRB W8, [X20 + 0x1E1]
	0x033B8D38 MOV X19, X0
	0x033B8D3C TBNZ X8, 0x0, 0x33B8D54
	0x033B8D40 ADRP X0, 0xD3B000
	0x033B8D44 LDR X0, [X0 + 0xDF8]
	0x033B8D48 BL 0x1C16CF4
	0x033B8D4C MOVZ W8, 0x1
	0x033B8D50 STRB W8, [X20 + 0x1E1]
	0x033B8D54 LDR X8, [X19]
	0x033B8D58 MOV X0, X19
	0x033B8D5C LDR X9, [X8 + 0x588]
	0x033B8D60 LDR X1, [X8 + 0x590]
	0x033B8D64 BLR X9
	0x033B8D68 TBZ X0, 0x0, 0x33B8D94
	0x033B8D6C ADRP X8, 0xD3B000
	0x033B8D70 LDR X8, [X8 + 0xDF8]
	0x033B8D74 LDR X0, [X8]
	0x033B8D78 LDR W8, [X0 + 0xE0]
	0x033B8D7C CBNZ W8, 0x33B8D84
	0x033B8D80 BL 0x1C16DFC
	0x033B8D84 MOV X0, X19
	0x033B8D88 LDP X20, X19, [X31 + 0x10]
	0x033B8D8C LDR X30, [X31], #0x20
	0x033B8D90 B 0x1C87B74
	0x033B8D94 ADRP X0, 0xD73000
	0x033B8D98 LDR X0, [X0 + 0x3B8]
	0x033B8D9C BL 0x1C16D08
	0x033B8DA0 MOV X1, X31
	0x033B8DA4 BL 0x33BDD84
	0x033B8DA8 MOV X19, X0
	0x033B8DAC ADRP X0, 0xD43000
	0x033B8DB0 LDR X0, [X0 + 0x578]
	0x033B8DB4 BL 0x1C16D08
	0x033B8DB8 BL 0x1C16F10
	0x033B8DBC MOV X20, X0
	0x033B8DC0 ADRP X0, 0xD73000
	0x033B8DC4 LDR X0, [X0 + 0x3C0]
	0x033B8DC8 BL 0x1C16D08
	0x033B8DCC MOV X2, X0
	0x033B8DD0 MOV X0, X20
	0x033B8DD4 MOV X1, X19
	0x033B8DD8 MOV X3, X31
	0x033B8DDC BL 0x330E16C
	0x033B8DE0 ADRP X0, 0xD74000
	0x033B8DE4 LDR X0, [X0 + 0x218]
	0x033B8DE8 BL 0x1C16D08
	0x033B8DEC MOV X1, X0
	0x033B8DF0 MOV X0, X20
	0x033B8DF4 BL 0x1C16DEC
	0x033B8DF8 STP X30, X23, [X31 - 0x30]!
	0x033B8DFC STP X22, X21, [X31 + 0x10]
	0x033B8E00 STP X20, X19, [X31 + 0x20]
	0x033B8E04 ADRP X21, 0x1025000
	0x033B8E08 LDRB W8, [X21 + 0x1E2]
	0x033B8E0C MOV X20, X1
	0x033B8E10 MOV X19, X0
	0x033B8E14 TBNZ X8, 0x0, 0x33B8E5C
	0x033B8E18 ADRP X0, 0xD73000
	0x033B8E1C LDR X0, [X0 + 0x3E8]
	0x033B8E20 BL 0x1C16CF4
	0x033B8E24 ADRP X0, 0xD73000
	0x033B8E28 LDR X0, [X0 + 0x3B0]
	0x033B8E2C BL 0x1C16CF4
	0x033B8E30 ADRP X0, 0xD3B000
	0x033B8E34 LDR X0, [X0 + 0xDF8]
	0x033B8E38 BL 0x1C16CF4
	0x033B8E3C ADRP X0, 0xD64000
	0x033B8E40 LDR X0, [X0 + 0x4E8]
	0x033B8E44 BL 0x1C16CF4
	0x033B8E48 ADRP X0, 0xD3B000
	0x033B8E4C LDR X0, [X0 + 0x6C0]
	0x033B8E50 BL 0x1C16CF4
	0x033B8E54 MOVZ W8, 0x1
	0x033B8E58 STRB W8, [X21 + 0x1E2]
	0x033B8E5C CBZ X20, 0x33B9040
	0x033B8E60 MOV X0, X20
	0x033B8E64 MOV X1, X31
	0x033B8E68 BL 0x33BE520
	0x033B8E6C CBZ X0, 0x33B9088
	0x033B8E70 ADRP X22, 0xD64000
	0x033B8E74 LDR X22, [X22 + 0x4E8]
	0x033B8E78 LDR X8, [X0]
	0x033B8E7C MOV X21, X0
	0x033B8E80 LDR X1, [X22]
	0x033B8E84 LDRB W10, [X8 + 0x130]
	0x033B8E88 LDRB W9, [X1 + 0x130]
	0x033B8E8C CMP W10, W9
	0x033B8E90 B.CC 0x33B8F24
	0x033B8E94 LDR X8, [X8 + 0xC8]
	0x033B8E98 ADD X8, X8, X9, 0x3, LSL
	0x033B8E9C LDUR X8, [X8 - 0x8]
	0x033B8EA0 CMP X8, X1
	0x033B8EA4 B.NE 0x33B8F24
	0x033B8EA8 LDR X8, [X21]
	0x033B8EAC MOV X0, X21
	0x033B8EB0 LDR X9, [X8 + 0x588]
	0x033B8EB4 LDR X1, [X8 + 0x590]
	0x033B8EB8 BLR X9
	0x033B8EBC TBZ X0, 0x0, 0x33B8F2C
	0x033B8EC0 LDR X8, [X21]
	0x033B8EC4 MOV X0, X21
	0x033B8EC8 MOV X1, X19
	0x033B8ECC LDR X9, [X8 + 0x878]
	0x033B8ED0 LDR X2, [X8 + 0x880]
	0x033B8ED4 BLR X9
	0x033B8ED8 TBZ X0, 0x0, 0x33B918C
	0x033B8EDC LDR X8, [X21]
	0x033B8EE0 MOV X0, X21
	0x033B8EE4 LDR X9, [X8 + 0x888]
	0x033B8EE8 LDR X1, [X8 + 0x890]
	0x033B8EEC BLR X9
	0x033B8EF0 LDR X1, [X22]
	0x033B8EF4 MOV X21, X0
	0x033B8EF8 CBZ X0, 0x33B8F30

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+40], X27
	004 Move [X31+48], X26
	005 Move [X31+56], X25
	006 Move [X31+64], X24
	007 Move [X31+72], X23
	008 Move [X31+80], X22
	009 Move [X31+88], X21
	010 Move [X31+96], X20
	011 Move [X31+104], X19
	012 Move X22, 0x1026000
	013 Move W8, [X22+472]
	014 Move W19, W2
	015 Move X20, X1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0xD65000
	022 Move X0, [X0+1256]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+472], W8
	026 Move [X31+28], W31
	027 Move [X31+8], X31
	028 Move [X31+16], X31
	029 Move [X31+4], W31
	030 Compare X20, 0
	031 JumpIfEqual {129}
	032 Move X24, 0xD65000
	033 Move X24, [X24+1256]
	034 And W19, W19, 0xFFFFFFF7
	035 Move X0, [X24]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Add X1, X31, 16
	041 Add X2, X31, 8
	042 Move X0, X20
	043 Call RuntimeType.SplitName, X0, X1, X2
	044 Add X1, X31, 16
	045 Add X2, X31, 28
	046 Add X3, X31, 4
	047 Move W0, W19
	048 Call RuntimeType.FilterHelper, X0, X1, X2, X3
	049 Move X20, [X31+16]
	050 Move W3, [X31+4]
	051 Move X0, X21
	052 Move W2, W19
	053 Move X1, X20
	054 Call RuntimeType.GetNestedTypes_internal, X0, X1, X2, X3
	055 Compare X0, 0
	056 JumpIfEqual {142}
	057 Move X8, [X0+24]
	058 Move X21, X0
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X22, [X31+8]
	061 Move X27, X31
	062 Move X25, X31
	063 And X8, X8, 0
	064 Add X26, X21, 32
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X0, [X24]
	067 Move X23, [X26]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move X0, X23
	073 Move W1, W19
	074 Move X2, X20
	075 Move W3, W31
	076 Move X4, X22
	077 Call RuntimeType.FilterApplyType, X0, X1, X2, X3, X4
	078 Move TEMP, X0
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfNotEqual {89}
	082 Move X0, [X24]
	083 Move W8, [X0+224]
	084 Compare W8, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1C17DFC
	087 Compare X27, 0
	088 JumpIfEqual {90}
	089 Move X23, X27
	090 Move W8, [X21+24]
	091 Add X25, X25, 1
	092 Move X27, X23
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X23, X31
	095 Move X0, X23
	096 Move X20, [X31+96]
	097 Move X19, [X31+104]
	098 Move X22, [X31+80]
	099 Move X21, [X31+88]
	100 Move X24, [X31+64]
	101 Move X23, [X31+72]
	102 Move X26, [X31+48]
	103 Move X25, [X31+56]
	104 Move X30, [X31+32]
	105 Move X27, [X31+40]
	106 Add X31, X31, 112
	107 Return X0
	108 Call 0x1C17F28
	109 Move X0, 0xD6E000
	110 Move X0, [X0+3040]
	111 Call 0x1C17D08
	112 Move X1, X31
	113 Call Environment.GetResourceString, X0
	114 Move X19, X0
	115 Move X0, 0xD6E000
	116 Move X0, [X0+1952]
	117 Call 0x1C17D08
	118 Call 0x1C17F10
	119 Move X1, X19
	120 Move X2, X31
	121 Move X20, X0
	122 Call AmbiguousMatchException..ctor, X0, X1
	123 Move X0, 0xD75000
	124 Move X0, [X0+472]
	125 Call 0x1C17D08
	126 Move X1, X0
	127 Move X0, X20
	128 Call 0x1C17DEC
	129 Move X0, 0xD41000
	130 Move X0, [X0+1320]
	131 Call 0x1C17D08
	132 Call 0x1C17F10
	133 Move X1, X31
	134 Move X19, X0
	135 Call ArgumentNullException..ctor, X0
	136 Move X0, 0xD75000
	137 Move X0, [X0+472]
	138 Call 0x1C17D08
	139 Move X1, X0
	140 Move X0, X19
	141 Call 0x1C17DEC
	142 Call 0x1C17F20

Method: System.Reflection.MemberInfo[] GetMember(System.String name, System.Reflection.MemberTypes type, System.Reflection.BindingFlags bindingAttr)

Disassembly:
	0x033B8EFC LDR X8, [X21]
	0x033B8F00 LDRB W9, [X1 + 0x130]
	0x033B8F04 LDRB W10, [X8 + 0x130]
	0x033B8F08 CMP W10, W9
	0x033B8F0C B.CC 0x33B8F24
	0x033B8F10 LDR X8, [X8 + 0xC8]
	0x033B8F14 ADD X8, X8, X9, 0x3, LSL
	0x033B8F18 LDUR X8, [X8 - 0x8]
	0x033B8F1C CMP X8, X1
	0x033B8F20 B.EQ 0x33B8F30
	0x033B8F24 MOV X0, X21
	0x033B8F28 BL 0x1C171E0
	0x033B8F2C LDR X1, [X22]
	0x033B8F30 LDR W8, [X1 + 0xE0]
	0x033B8F34 CBNZ W8, 0x33B8F44
	0x033B8F38 MOV X0, X1
	0x033B8F3C BL 0x1C16DFC
	0x033B8F40 LDR X1, [X22]
	0x033B8F44 LDR X8, [X1 + 0xB8]
	0x033B8F48 ADRP X23, 0xD3B000
	0x033B8F4C LDR X8, [X8 + 0x18]
	0x033B8F50 LDR X23, [X23 + 0xDF8]
	0x033B8F54 CMP X8, X21
	0x033B8F58 B.EQ 0x33B8FFC
	0x033B8F5C ADRP X8, 0xD3B000
	0x033B8F60 LDR X8, [X8 + 0x6C0]
	0x033B8F64 LDR X0, [X8]
	0x033B8F68 LDR W8, [X0 + 0xE0]
	0x033B8F6C CBNZ W8, 0x33B8F74
	0x033B8F70 BL 0x1C16DFC
	0x033B8F74 MOV X0, X21
	0x033B8F78 MOV X1, X31
	0x033B8F7C BL 0x33951A0
	0x033B8F80 TBZ X0, 0x0, 0x33B908C
	0x033B8F84 LDR X0, [X23]
	0x033B8F88 LDR W8, [X0 + 0xE0]
	0x033B8F8C CBNZ W8, 0x33B8F94
	0x033B8F90 BL 0x1C16DFC
	0x033B8F94 MOV X0, X19
	0x033B8F98 BL 0x1C87B74
	0x033B8F9C LDR X8, [X22]
	0x033B8FA0 MOV X22, X0
	0x033B8FA4 LDR W9, [X8 + 0xE0]
	0x033B8FA8 CBNZ W9, 0x33B8FB4
	0x033B8FAC MOV X0, X8
	0x033B8FB0 BL 0x1C16DFC
	0x033B8FB4 CMP X22, X21
	0x033B8FB8 B.NE 0x33B90E0
	0x033B8FBC LDR X0, [X23]
	0x033B8FC0 ADRP X21, 0xD73000
	0x033B8FC4 LDR W8, [X0 + 0xE0]
	0x033B8FC8 LDR X21, [X21 + 0x3E8]
	0x033B8FCC CBNZ W8, 0x33B8FD4
	0x033B8FD0 BL 0x1C16DFC
	0x033B8FD4 MOV X0, X19
	0x033B8FD8 BL 0x33B037C
	0x033B8FDC MOV X19, X0
	0x033B8FE0 MOV X0, X20
	0x033B8FE4 BL 0x33AEFD8
	0x033B8FE8 LDR X2, [X21]
	0x033B8FEC MOV X1, X0
	0x033B8FF0 MOV X0, X19
	0x033B8FF4 BL 0x22C9A48
	0x033B8FF8 B 0x33B9028
	0x033B8FFC LDR X0, [X23]
	0x033B9000 LDR W8, [X0 + 0xE0]
	0x033B9004 CBNZ W8, 0x33B900C
	0x033B9008 BL 0x1C16DFC
	0x033B900C MOV X0, X19
	0x033B9010 BL 0x33B04A8
	0x033B9014 ADRP X8, 0xD72000
	0x033B9018 LDR X8, [X8 + 0x3B0]
	0x033B901C MOV X1, X20
	0x033B9020 LDR X2, [X8]
	0x033B9024 BL 0x22E75A0
	0x033B9028 LDP X20, X19, [X31 + 0x20]
	0x033B902C LDP X22, X21, [X31 + 0x10]
	0x033B9030 ORN W8, W31, W0, 0x0
	0x033B9034 UBFM W0, W8, 0x1F, 0x1F
	0x033B9038 LDP X30, X23, [X31], #0x30
	0x033B903C RET
	0x033B9040 ADRP X0, 0xD3F000
	0x033B9044 LDR X0, [X0 + 0x528]
	0x033B9048 BL 0x1C16D08
	0x033B904C BL 0x1C16F10
	0x033B9050 MOV X19, X0
	0x033B9054 ADRP X0, 0xD44000
	0x033B9058 LDR X0, [X0 + 0xEC8]
	0x033B905C BL 0x1C16D08
	0x033B9060 MOV X1, X0
	0x033B9064 MOV X0, X19
	0x033B9068 MOV X2, X31
	0x033B906C BL 0x330E100
	0x033B9070 ADRP X0, 0xD73000
	0x033B9074 LDR X0, [X0 + 0x220]
	0x033B9078 BL 0x1C16D08
	0x033B907C MOV X1, X0
	0x033B9080 MOV X0, X19
	0x033B9084 BL 0x1C16DEC
	0x033B9088 BL 0x1C16F20
	0x033B908C ADRP X0, 0xD72000
	0x033B9090 LDR X0, [X0 + 0x7F8]
	0x033B9094 BL 0x1C16D08
	0x033B9098 LDR X8, [X0 + 0xB8]
	0x033B909C LDRB W8, [X8]
	0x033B90A0 CBNZ W8, 0x33B9228
	0x033B90A4 ADRP X0, 0xD72000
	0x033B90A8 LDR X0, [X0 + 0x3C8]
	0x033B90AC BL 0x1C16D08
	0x033B90B0 MOV X1, X31
	0x033B90B4 BL 0x33BDD84
	0x033B90B8 MOV X19, X0
	0x033B90BC ADRP X0, 0xD3A000
	0x033B90C0 LDR X0, [X0 + 0x5B0]
	0x033B90C4 BL 0x1C16D08
	0x033B90C8 BL 0x1C16F10
	0x033B90CC MOV X1, X19
	0x033B90D0 MOV X2, X31
	0x033B90D4 MOV X20, X0
	0x033B90D8 BL 0x337DF1C
	0x033B90DC B 0x33B92F8
	0x033B90E0 ADRP X0, 0xD3A000
	0x033B90E4 LDR X0, [X0 + 0x9D0]
	0x033B90E8 BL 0x1C16D08
	0x033B90EC MOVZ W1, 0x2
	0x033B90F0 BL 0x1C16D6C
	0x033B90F4 MOV X19, X0
	0x033B90F8 MOV X0, X21
	0x033B90FC BL 0x19903C0
	0x033B9100 LDR X8, [X21]
	0x033B9104 MOV X0, X21
	0x033B9108 LDP X9, X1, [X8 + 0x168]
	0x033B910C BLR X9
	0x033B9110 MOV X20, X0
	0x033B9114 MOV X0, X19
	0x033B9118 BL 0x19903C0
	0x033B911C MOV X0, X19
	0x033B9120 MOV X1, X20
	0x033B9124 BL 0x19980B4
	0x033B9128 MOV X0, X19
	0x033B912C MOV X1, X31
	0x033B9130 MOV X2, X20
	0x033B9134 BL 0x1993444
	0x033B9138 MOV X0, X22
	0x033B913C BL 0x19903C0
	0x033B9140 LDR X8, [X22]
	0x033B9144 MOV X0, X22
	0x033B9148 LDP X9, X1, [X8 + 0x168]
	0x033B914C BLR X9
	0x033B9150 MOV X20, X0
	0x033B9154 MOV X0, X19
	0x033B9158 BL 0x19903C0
	0x033B915C MOV X0, X19
	0x033B9160 MOV X1, X20
	0x033B9164 BL 0x19980B4
	0x033B9168 MOVZ W1, 0x1
	0x033B916C MOV X0, X19
	0x033B9170 MOV X2, X20
	0x033B9174 BL 0x1993444
	0x033B9178 ADRP X0, 0xD72000
	0x033B917C LDR X0, [X0 + 0x3D8]
	0x033B9180 BL 0x1C16D08
	0x033B9184 MOV X1, X19
	0x033B9188 B 0x33B92CC
	0x033B918C ADRP X0, 0xD3A000
	0x033B9190 LDR X0, [X0 + 0x9D0]
	0x033B9194 BL 0x1C16D08
	0x033B9198 MOVZ W1, 0x2
	0x033B919C BL 0x1C16D6C
	0x033B91A0 MOV X20, X0
	0x033B91A4 MOV X0, X21
	0x033B91A8 BL 0x19903C0
	0x033B91AC LDR X8, [X21]
	0x033B91B0 MOV X0, X21
	0x033B91B4 LDP X9, X1, [X8 + 0x168]
	0x033B91B8 BLR X9
	0x033B91BC MOV X21, X0
	0x033B91C0 MOV X0, X20
	0x033B91C4 BL 0x19903C0
	0x033B91C8 MOV X0, X20
	0x033B91CC MOV X1, X21
	0x033B91D0 BL 0x19980B4
	0x033B91D4 MOV X0, X20
	0x033B91D8 MOV X1, X31
	0x033B91DC MOV X2, X21
	0x033B91E0 BL 0x1993444
	0x033B91E4 LDR X8, [X19]
	0x033B91E8 MOV X0, X19
	0x033B91EC LDP X9, X1, [X8 + 0x168]
	0x033B91F0 BLR X9
	0x033B91F4 MOV X19, X0
	0x033B91F8 MOV X0, X20
	0x033B91FC BL 0x19903C0
	0x033B9200 MOV X0, X20
	0x033B9204 MOV X1, X19
	0x033B9208 BL 0x19980B4
	0x033B920C MOVZ W1, 0x1
	0x033B9210 MOV X0, X20
	0x033B9214 MOV X2, X19
	0x033B9218 BL 0x1993444
	0x033B921C ADRP X0, 0xD72000
	0x033B9220 LDR X0, [X0 + 0x3E0]
	0x033B9224 B 0x33B92C4
	0x033B9228 ADRP X0, 0xD3A000
	0x033B922C LDR X0, [X0 + 0x9D0]
	0x033B9230 BL 0x1C16D08
	0x033B9234 MOVZ W1, 0x2
	0x033B9238 BL 0x1C16D6C
	0x033B923C MOV X20, X0
	0x033B9240 MOV X0, X21
	0x033B9244 BL 0x19903C0
	0x033B9248 LDR X8, [X21]
	0x033B924C MOV X0, X21
	0x033B9250 LDP X9, X1, [X8 + 0x168]
	0x033B9254 BLR X9
	0x033B9258 MOV X21, X0
	0x033B925C MOV X0, X20
	0x033B9260 BL 0x19903C0
	0x033B9264 MOV X0, X20
	0x033B9268 MOV X1, X21
	0x033B926C BL 0x19980B4
	0x033B9270 MOV X0, X20
	0x033B9274 MOV X1, X31
	0x033B9278 MOV X2, X21
	0x033B927C BL 0x1993444
	0x033B9280 LDR X8, [X19]
	0x033B9284 MOV X0, X19
	0x033B9288 LDR X9, [X8 + 0x888]
	0x033B928C LDR X1, [X8 + 0x890]
	0x033B9290 BLR X9
	0x033B9294 MOV X19, X0
	0x033B9298 MOV X0, X20
	0x033B929C BL 0x19903C0
	0x033B92A0 MOV X0, X20
	0x033B92A4 MOV X1, X19
	0x033B92A8 BL 0x19980B4
	0x033B92AC MOVZ W1, 0x1
	0x033B92B0 MOV X0, X20
	0x033B92B4 MOV X2, X19
	0x033B92B8 BL 0x1993444
	0x033B92BC ADRP X0, 0xD72000
	0x033B92C0 LDR X0, [X0 + 0x3D8]
	0x033B92C4 BL 0x1C16D08
	0x033B92C8 MOV X1, X20
	0x033B92CC MOV X2, X31
	0x033B92D0 BL 0x33BFB40
	0x033B92D4 MOV X19, X0
	0x033B92D8 ADRP X0, 0xD42000
	0x033B92DC LDR X0, [X0 + 0x578]
	0x033B92E0 BL 0x1C16D08
	0x033B92E4 BL 0x1C16F10
	0x033B92E8 MOV X1, X19
	0x033B92EC MOV X2, X31
	0x033B92F0 MOV X20, X0
	0x033B92F4 BL 0x3314A68
	0x033B92F8 ADRP X0, 0xD73000
	0x033B92FC LDR X0, [X0 + 0x220]
	0x033B9300 BL 0x1C16D08
	0x033B9304 MOV X1, X0
	0x033B9308 MOV X0, X20
	0x033B930C BL 0x1C16DEC
	0x033B9310 STP X30, X23, [X31 - 0x30]!
	0x033B9314 STP X22, X21, [X31 + 0x10]
	0x033B9318 STP X20, X19, [X31 + 0x20]
	0x033B931C ADRP X21, 0x1024000
	0x033B9320 LDRB W8, [X21 + 0x1E3]
	0x033B9324 MOV X20, X1
	0x033B9328 MOV X19, X0
	0x033B932C TBNZ X8, 0x0, 0x33B935C
	0x033B9330 ADRP X0, 0xD72000
	0x033B9334 LDR X0, [X0 + 0x3E8]
	0x033B9338 BL 0x1C16CF4
	0x033B933C ADRP X0, 0xD3A000
	0x033B9340 LDR X0, [X0 + 0xDF8]
	0x033B9344 BL 0x1C16CF4
	0x033B9348 ADRP X0, 0xD3A000
	0x033B934C LDR X0, [X0 + 0x6C0]
	0x033B9350 BL 0x1C16CF4
	0x033B9354 MOVZ W8, 0x1
	0x033B9358 STRB W8, [X21 + 0x1E3]
	0x033B935C CBZ X20, 0x33B9448
	0x033B9360 MOV X0, X20
	0x033B9364 MOV X1, X31
	0x033B9368 BL 0x33BE520
	0x033B936C CBZ X0, 0x33B9444
	0x033B9370 LDR X8, [X0]
	0x033B9374 MOV X21, X0
	0x033B9378 LDR X9, [X8 + 0x588]
	0x033B937C LDR X1, [X8 + 0x590]
	0x033B9380 BLR X9
	0x033B9384 TBNZ X0, 0x0, 0x33B93B0
	0x033B9388 ADRP X8, 0xD3A000
	0x033B938C LDR X8, [X8 + 0x6C0]
	0x033B9390 LDR X0, [X8]
	0x033B9394 LDR W8, [X0 + 0xE0]
	0x033B9398 CBNZ W8, 0x33B93A0
	0x033B939C BL 0x1C16DFC
	0x033B93A0 MOV X0, X21
	0x033B93A4 MOV X1, X31
	0x033B93A8 BL 0x33951A0

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+224], X29
	003 Move [X31+232], X30
	004 Move [X31+240], X24
	005 Move [X31+248], X23
	006 Move [X31+256], X22
	007 Move [X31+264], X21
	008 Move [X31+272], X20
	009 Move [X31+280], X19
	010 Move X23, 0x1026000
	011 Move W8, [X23+473]
	012 Move W20, W3
	013 Move W19, W2
	014 Move X21, X1
	015 Move X22, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {82}
	020 Move X0, 0xD75000
	021 Move X0, [X0+304]
	022 Call 0x1C17CF4
	023 Move X0, 0xD75000
	024 Move X0, [X0+320]
	025 Call 0x1C17CF4
	026 Move X0, 0xD75000
	027 Move X0, [X0+312]
	028 Call 0x1C17CF4
	029 Move X0, 0xD75000
	030 Move X0, [X0+296]
	031 Call 0x1C17CF4
	032 Move X0, 0xD75000
	033 Move X0, [X0+336]
	034 Call 0x1C17CF4
	035 Move X0, 0xD75000
	036 Move X0, [X0+328]
	037 Call 0x1C17CF4
	038 Move X0, 0xD75000
	039 Move X0, [X0+288]
	040 Call 0x1C17CF4
	041 Move X0, 0xD75000
	042 Move X0, [X0+264]
	043 Call 0x1C17CF4
	044 Move X0, 0xD75000
	045 Move X0, [X0+480]
	046 Call 0x1C17CF4
	047 Move X0, 0xD75000
	048 Move X0, [X0+488]
	049 Call 0x1C17CF4
	050 Move X0, 0xD75000
	051 Move X0, [X0+272]
	052 Call 0x1C17CF4
	053 Move X0, 0xD75000
	054 Move X0, [X0+280]
	055 Call 0x1C17CF4
	056 Move X0, 0xD75000
	057 Move X0, [X0+344]
	058 Call 0x1C17CF4
	059 Move X0, 0xD75000
	060 Move X0, [X0+352]
	061 Call 0x1C17CF4
	062 Move X0, 0xD75000
	063 Move X0, [X0+360]
	064 Call 0x1C17CF4
	065 Move X0, 0xD75000
	066 Move X0, [X0+368]
	067 Call 0x1C17CF4
	068 Move X0, 0xD75000
	069 Move X0, [X0+376]
	070 Call 0x1C17CF4
	071 Move X0, 0xD75000
	072 Move X0, [X0+384]
	073 Call 0x1C17CF4
	074 Move X0, 0xD6C000
	075 Move X0, [X0+2984]
	076 Call 0x1C17CF4
	077 Move X0, 0xD73000
	078 Move X0, [X0+3280]
	079 Call 0x1C17CF4
	080 Move W8, 1
	081 Move [X23+473], W8
	082 Compare X21, 0
	083 JumpIfEqual {320}
	084 Add X24, X31, 160
	085 Move [X31+192], X31
	086 Move [X31+200], X31
	087 Move [X31+208], X31
	088 Move [X31+168], X31
	089 Move [X31+176], X31
	090 Move [X31+160], X31
	091 Move [X31+136], X31
	092 Move [X31+144], X31
	093 Move [X31+128], X31
	094 Move [X31+104], X31
	095 Move [X31+112], X31
	096 Move [X31+96], X31
	097 Move [X31+72], X31
	098 Move [X31+80], X31
	099 Move [X31+64], X31
	100 Move [X31+32], X31
	101 Move [X31+40], X31
	102 Move [X31+48], X31
	103 Move TEMP, X19
	104 And TEMP, TEMP, 8
	105 Compare TEMP, 8
	106 JumpIfEqual {124}
	107 Move W23, W31
	108 Move TEMP, X19
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfEqual {148}
	112 Move TEMP, X19
	113 And TEMP, TEMP, 16
	114 Compare TEMP, 16
	115 JumpIfEqual {170}
	116 Move TEMP, X19
	117 And TEMP, TEMP, 2
	118 Compare TEMP, 2
	119 JumpIfEqual {191}
	120 Move TEMP, X19
	121 And TEMP, TEMP, 4
	122 Compare TEMP, 4
	123 JumpIfEqual {211}
	124 Add X8, X31, 8
	125 Move W3, 3
	126 Move TEMP, 0
	127 Not TEMP
	128 Move W5, TEMP
	129 Move W6, 1
	130 Move X0, X22
	131 Move X1, X21
	132 Move W2, W20
	133 Move X4, X31
	134 Call RuntimeType.GetMethodCandidates, X0, X1, X2, X3, X4, X5, X6
	135 NotImplemented "Instruction LDUR not yet implemented."
	136 Move X8, [X31+24]
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move [X24+2], V0
	139 Move [X31+208], X8
	140 Move X8, 0xD74000
	141 Move X8, [X8+264]
	142 Add X0, X31, 192
	143 Move W23, [X31+208]
	144 Move TEMP, X19
	145 And TEMP, TEMP, 1
	146 Compare TEMP, 1
	147 JumpIfNotEqual {112}
	148 Add X8, X31, 8
	149 Move W3, 3
	150 Move W5, 1
	151 Move X0, X22
	152 Move X1, X21
	153 Move W2, W20
	154 Move X4, X31
	155 Call RuntimeType.GetConstructorCandidates, X0, X1, X2, X3, X4, X5
	156 NotImplemented "Instruction LDUR not yet implemented."
	157 Move X8, [X31+24]
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Move [X24], V0
	160 Move [X31+176], X8
	161 Move X8, 0xD74000
	162 Move X8, [X8+272]
	163 Add X0, X31, 160
	164 Move W8, [X31+176]
	165 Add W23, W8, W23
	166 Move TEMP, X19
	167 And TEMP, TEMP, 16
	168 Compare TEMP, 16
	169 JumpIfNotEqual {116}
	170 Add X8, X31, 8
	171 Move W4, 1
	172 Move X0, X22
	173 Move X1, X21
	174 Move W2, W20
	175 Move X3, X31
	176 Call RuntimeType.GetPropertyCandidates, X0, X1, X2, X3, X4
	177 NotImplemented "Instruction LDUR not yet implemented."
	178 Move X8, [X31+24]
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Move [X31+8], V0
	181 Move [X31+144], X8
	182 Move X8, 0xD74000
	183 Move X8, [X8+280]
	184 Add X0, X31, 128
	185 Move W8, [X31+144]
	186 Add W23, W8, W23
	187 Move TEMP, X19
	188 And TEMP, TEMP, 2
	189 Compare TEMP, 2
	190 JumpIfNotEqual {120}
	191 Add X8, X31, 8
	192 Move W3, 1
	193 Move X0, X22
	194 Move X1, X21
	195 Move W2, W20
	196 Call RuntimeType.GetEventCandidates, X0, X1, X2, X3
	197 NotImplemented "Instruction LDUR not yet implemented."
	198 Move X8, [X31+24]
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Move [X31+6], V0
	201 Move [X31+112], X8
	202 Move X8, 0xD74000
	203 Move X8, [X8+488]
	204 Add X0, X31, 96
	205 Move W8, [X31+112]
	206 Add W23, W8, W23
	207 Move TEMP, X19
	208 And TEMP, TEMP, 4
	209 Compare TEMP, 4
	210 JumpIfNotEqual {227}
	211 Add X8, X31, 8
	212 Move W3, 1
	213 Move X0, X22
	214 Move X1, X21
	215 Move W2, W20
	216 Call RuntimeType.GetFieldCandidates, X0, X1, X2, X3
	217 NotImplemented "Instruction LDUR not yet implemented."
	218 Move X8, [X31+24]
	219 NotImplemented "Instruction CMP not yet implemented."
	220 Move [X31+4], V0
	221 Move [X31+80], X8
	222 Move X8, 0xD74000
	223 Move X8, [X8+288]
	224 Add X0, X31, 64
	225 Move W8, [X31+80]
	226 Add W23, W8, W23
	227 Move W8, 160
	228 And W31, W19, W8
	229 Add X8, X31, 8
	230 Move W3, 1
	231 Move X0, X22
	232 Move X1, X21
	233 Move W2, W20
	234 Call RuntimeType.GetNestedTypeCandidates, X0, X1, X2, X3
	235 NotImplemented "Instruction LDUR not yet implemented."
	236 Move X8, [X31+24]
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Move [X31+2], V0
	239 Move [X31+48], X8
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Move X8, 0xD74000
	242 Move X8, [X8+480]
	243 Add X0, X31, 32
	244 Move X1, [X8]
	245 Call 0x2EF2B6C, X0
	246 Move X19, X0
	247 Move X0, X19
	248 Move X20, [X31+272]
	249 Move X19, [X31+280]
	250 Move X22, [X31+256]
	251 Move X21, [X31+264]
	252 Move X24, [X31+240]
	253 Move X23, [X31+248]
	254 Move X29, [X31+224]
	255 Move X30, [X31+232]
	256 Add X31, X31, 288
	257 Return X0
	258 Move W8, [X31+48]
	259 Add W23, W8, W23
	260 Move X8, 0xD73000
	261 Move X9, 0xD6C000
	262 Move X8, [X8+3280]
	263 Move X9, [X9+2984]
	264 NotImplemented "Instruction CMP not yet implemented."
	265 Move W1, W23
	266 NotImplemented "Instruction CSEL not yet implemented."
	267 Move X0, [X8]
	268 Call 0x1C17D6C
	269 Move X8, 0xD74000
	270 Move X8, [X8+296]
	271 Move X19, X0
	272 Add X0, X31, 192
	273 Move X1, X19
	274 Move X3, [X8]
	275 Move W2, W31
	276 Call 0x2EF2C78, X0, X1, X2
	277 Move X8, 0xD74000
	278 Move W20, [X31+208]
	279 Move X8, [X8+304]
	280 Add X0, X31, 160
	281 Move X1, X19
	282 Move W2, W20
	283 Move X3, [X8]
	284 Call 0x2EF2C78, X0, X1, X2
	285 Move X9, 0xD74000
	286 Move W8, [X31+176]
	287 Move X9, [X9+312]
	288 Add X0, X31, 128
	289 Move X1, X19
	290 Add W20, W8, W20
	291 Move X3, [X9]
	292 Move W2, W20
	293 Call 0x2EF2C78, X0, X1, X2
	294 Move X9, 0xD74000
	295 Move W8, [X31+144]
	296 Move X9, [X9+320]
	297 Add X0, X31, 96
	298 Move X1, X19
	299 Add W20, W8, W20
	300 Move X3, [X9]
	301 Move W2, W20
	302 Call 0x2EF2C78, X0, X1, X2
	303 Move X9, 0xD74000
	304 Move W8, [X31+112]
	305 Move X9, [X9+328]
	306 Add X0, X31, 64
	307 Move X1, X19
	308 Add W20, W8, W20
	309 Move X3, [X9]
	310 Move W2, W20
	311 Call 0x2EF2C78, X0, X1, X2
	312 Move X9, 0xD74000
	313 Move W8, [X31+80]
	314 Move X9, [X9+336]
	315 Add X0, X31, 32
	316 Move X1, X19
	317 Add W2, W8, W20
	318 Move X3, [X9]
	319 Call 0x2EF2C78, X0, X1, X2
	320 Move X0, 0xD40000
	321 Move X0, [X0+1320]
	322 Call 0x1C17D08
	323 Call 0x1C17F10
	324 Move X1, X31
	325 Move X19, X0
	326 Call ArgumentNullException..ctor, X0
	327 Move X0, 0xD74000
	328 Move X0, [X0+496]
	329 Call 0x1C17D08
	330 Move X1, X0
	331 Move X0, X19
	332 Call 0x1C17DEC

Method: System.Reflection.Module get_Module()

Disassembly:
	0x033B93AC TBZ X0, 0x0, 0x33B9494
	0x033B93B0 ADRP X22, 0xD3A000

ISIL:
	001 Move X1, X31
	002 Call RuntimeTypeHandle.GetModule, X0
	003 Return X0

Method: System.Reflection.RuntimeModule GetRuntimeModule()

Disassembly:
	0x033B93B4 LDR X22, [X22 + 0xDF8]
	0x033B93B8 ADRP X23, 0xD72000

ISIL:
	001 Move X1, X31
	002 Call RuntimeTypeHandle.GetModule, X0
	003 Return X0

Method: System.Reflection.Assembly get_Assembly()

Disassembly:
	0x033B93BC LDR X0, [X22]
	0x033B93C0 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move X1, X31
	002 Call RuntimeTypeHandle.GetAssembly, X0
	003 Return X0

Method: System.Reflection.RuntimeAssembly GetRuntimeAssembly()

Disassembly:
	0x033B93C4 LDR X23, [X23 + 0x3E8]
	0x033B93C8 CBNZ W8, 0x33B93D0

ISIL:
	001 Move X1, X31
	002 Call RuntimeTypeHandle.GetAssembly, X0
	003 Return X0

Method: System.RuntimeTypeHandle get_TypeHandle()

Disassembly:
	0x033B93CC BL 0x1C16DFC
	0x033B93D0 MOV X0, X19
	0x033B93D4 BL 0x33B037C
	0x033B93D8 MOV X21, X0
	0x033B93DC MOV X0, X20
	0x033B93E0 BL 0x33AEFD8
	0x033B93E4 LDR X2, [X23]
	0x033B93E8 MOV X1, X0
	0x033B93EC MOV X0, X21

ISIL:
	001 Move [X31-16], X30
	002 Move X1, X0
	003 Add X0, X31, 8
	004 Move X2, X31
	005 Move [X31+8], X31
	006 Call RuntimeTypeHandle..ctor, X0, X1
	007 Move X0, [X31+8]
	008 Move X30, [X31+16]
	009 Return X0

Method: System.Boolean IsInstanceOfType(System.Object o)

Disassembly:
	0x033B93F0 BL 0x22C9A48
	0x033B93F4 TBNZ X0, 0x1F, 0x33B9430

ISIL:
	001 Move X2, X31
	002 Call RuntimeTypeHandle.IsInstanceOfType, X0, X1
	003 Return X0

Method: System.Boolean IsAssignableFrom(System.Type c)

Disassembly:
	0x033B93F8 MOV W20, W0
	0x033B93FC LDR X0, [X22]
	0x033B9400 LDR W8, [X0 + 0xE0]
	0x033B9404 CBNZ W8, 0x33B940C
	0x033B9408 BL 0x1C16DFC
	0x033B940C MOV X0, X19
	0x033B9410 BL 0x33B04A8
	0x033B9414 CBZ X0, 0x33B9444
	0x033B9418 LDR W8, [X0 + 0x18]
	0x033B941C CMP W20, W8
	0x033B9420 B.CS 0x33B9490
	0x033B9424 ADD X8, X0, W20, 0x3, UXTW
	0x033B9428 LDR X0, [X8 + 0x20]
	0x033B942C B 0x33B9434
	0x033B9430 MOV X0, X31
	0x033B9434 LDP X20, X19, [X31 + 0x20]
	0x033B9438 LDP X22, X21, [X31 + 0x10]
	0x033B943C LDP X30, X23, [X31], #0x30
	0x033B9440 RET
	0x033B9444 BL 0x1C16F20
	0x033B9448 ADRP X0, 0xD3F000
	0x033B944C LDR X0, [X0 + 0x528]
	0x033B9450 BL 0x1C16D08
	0x033B9454 BL 0x1C16F10
	0x033B9458 MOV X19, X0
	0x033B945C ADRP X0, 0xD44000
	0x033B9460 LDR X0, [X0 + 0xEC8]
	0x033B9464 BL 0x1C16D08
	0x033B9468 MOV X1, X0
	0x033B946C MOV X0, X19
	0x033B9470 MOV X2, X31
	0x033B9474 BL 0x330E100
	0x033B9478 ADRP X0, 0xD73000
	0x033B947C LDR X0, [X0 + 0x228]
	0x033B9480 BL 0x1C16D08
	0x033B9484 MOV X1, X0
	0x033B9488 MOV X0, X19
	0x033B948C BL 0x1C16DEC
	0x033B9490 BL 0x1C16F28
	0x033B9494 ADRP X0, 0xD72000
	0x033B9498 LDR X0, [X0 + 0x3F0]
	0x033B949C BL 0x1C16D08
	0x033B94A0 MOV X1, X31
	0x033B94A4 BL 0x33BDD84
	0x033B94A8 MOV X19, X0
	0x033B94AC ADRP X0, 0xD42000
	0x033B94B0 LDR X0, [X0 + 0x578]
	0x033B94B4 BL 0x1C16D08
	0x033B94B8 BL 0x1C16F10
	0x033B94BC MOV X20, X0
	0x033B94C0 ADRP X0, 0xD44000
	0x033B94C4 LDR X0, [X0 + 0xEC8]
	0x033B94C8 BL 0x1C16D08
	0x033B94CC MOV X2, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1025000
	006 Move W8, [X21+474]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xD64000
	014 Move X0, [X0+1256]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+474], W8
	018 Compare X20, 0
	019 JumpIfEqual {60}
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X8, [X20]
	022 Move X0, X20
	023 Move X9, [X8+808]
	024 Move X1, [X8+816]
	025 NotImplemented "Instruction BLR not yet implemented."
	026 Move X8, 0xD64000
	027 Move X8, [X8+1256]
	028 Move X8, [X8]
	029 Compare X0, 0
	030 JumpIfEqual {35}
	031 Move X9, [X0]
	032 Move W10, [X8+304]
	033 Move W11, [X9+304]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X20, X31
	036 Move W0, 1
	037 Move X9, [X9+200]
	038 Add X9, X9, X10
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction CSEL not yet implemented."
	042 Move W9, [X8+224]
	043 Compare W9, 0
	044 JumpIfEqual {56}
	045 Compare X20, 0
	046 JumpIfEqual {60}
	047 Move X0, X20
	048 Move X1, X19
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X2, X31
	052 Move X30, [X31+32]
	053 Move X21, [X31+40]
	054 Call RuntimeTypeHandle.CanCastTo, X0, X1
	055 Return X0
	056 Move X0, X8
	057 Call 0x1C17DFC
	058 Compare X20, 0
	059 JumpIfNotEqual {47}
	060 Move W0, W31
	061 Move X20, [X31+16]
	062 Move X19, [X31+24]
	063 Move X30, [X31+32]
	064 Move X21, [X31+40]
	065 Return X0

Method: System.Boolean IsEquivalentTo(System.Type other)

Disassembly:
	0x033B94D0 MOV X0, X20
	0x033B94D4 MOV X1, X19
	0x033B94D8 MOV X3, X31
	0x033B94DC BL 0x330E16C
	0x033B94E0 ADRP X0, 0xD73000
	0x033B94E4 LDR X0, [X0 + 0x228]
	0x033B94E8 BL 0x1C16D08
	0x033B94EC MOV X1, X0
	0x033B94F0 MOV X0, X20
	0x033B94F4 BL 0x1C16DEC
	0x033B94F8 STR X30, [X31 - 0x20]!
	0x033B94FC STP X20, X19, [X31 + 0x10]
	0x033B9500 ADRP X20, 0x1024000
	0x033B9504 LDRB W8, [X20 + 0x1E4]
	0x033B9508 MOV X19, X0
	0x033B950C TBNZ X8, 0x0, 0x33B9524
	0x033B9510 ADRP X0, 0xD6B000
	0x033B9514 LDR X0, [X0 + 0xBD0]
	0x033B9518 BL 0x1C16CF4
	0x033B951C MOVZ W8, 0x1
	0x033B9520 STRB W8, [X20 + 0x1E4]
	0x033B9524 MOVZ W1, 0x1
	0x033B9528 MOV X0, X19
	0x033B952C BL 0x1C3D2C4
	0x033B9530 CBZ X0, 0x33B9550
	0x033B9534 ADRP X8, 0xD6B000
	0x033B9538 LDR X8, [X8 + 0xBD0]
	0x033B953C MOV X19, X0
	0x033B9540 LDR X20, [X8]
	0x033B9544 MOV X1, X20
	0x033B9548 BL 0x1C16E00
	0x033B954C CBZ X0, 0x33B955C
	0x033B9550 LDP X20, X19, [X31 + 0x10]
	0x033B9554 LDR X30, [X31], #0x20
	0x033B9558 RET
	0x033B955C MOV X0, X19
	0x033B9560 MOV X1, X20
	0x033B9564 BL 0x1C171E0
	0x033B9568 AND W1, W1, 0x1
	0x033B956C B 0x1C3D2C4
	0x033B9570 STR X30, [X31 - 0x20]!
	0x033B9574 STP X20, X19, [X31 + 0x10]
	0x033B9578 ADRP X20, 0x1024000
	0x033B957C LDRB W8, [X20 + 0x1E5]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1025000
	006 Move W8, [X21+475]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xD64000
	014 Move X0, [X0+1256]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+475], W8
	018 Compare X20, 0
	019 JumpIfEqual {48}
	020 Move X9, 0xD64000
	021 Move X9, [X9+1256]
	022 Move X8, [X20]
	023 Move X0, [X9]
	024 Move W10, [X8+304]
	025 Move W9, [X0+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X8, [X8+200]
	028 Add X8, X8, X9
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSEL not yet implemented."
	032 Compare X20, 0
	033 JumpIfEqual {48}
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X0, X19
	040 Move X1, X20
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X2, X31
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Call RuntimeTypeHandle.IsEquivalentTo, X0, X1
	047 Return X0
	048 Move W0, W31
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 Move X21, [X31+40]
	053 Return X0
	054 Move W0, 1

Method: System.Type get_BaseType()

Disassembly:
	0x033B9580 MOV X19, X0

ISIL:
No ISIL was generated
Method: System.RuntimeType GetBaseType()

Disassembly:
	0x033B9584 TBNZ X8, 0x0, 0x33B959C
	0x033B9588 ADRP X0, 0xD64000
	0x033B958C LDR X0, [X0 + 0x970]
	0x033B9590 BL 0x1C16CF4
	0x033B9594 MOVZ W8, 0x1
	0x033B9598 STRB W8, [X20 + 0x1E5]
	0x033B959C MOV X0, X19
	0x033B95A0 MOV W1, W31
	0x033B95A4 BL 0x1C3D2C4
	0x033B95A8 CBNZ X0, 0x33B9604
	0x033B95AC ADRP X8, 0xD64000
	0x033B95B0 LDR X8, [X8 + 0x970]
	0x033B95B4 LDR X19, [X8]
	0x033B95B8 LDR X8, [X19 + 0x38]
	0x033B95BC CBNZ X8, 0x33B95CC
	0x033B95C0 MOV X0, X19
	0x033B95C4 BL 0x1C5C6E0
	0x033B95C8 LDR X8, [X19 + 0x38]
	0x033B95CC LDR X0, [X8 + 0x10]
	0x033B95D0 LDRB W8, [X0 + 0x135]
	0x033B95D4 TBNZ X8, 0x0, 0x33B95DC
	0x033B95D8 BL 0x1C5C684
	0x033B95DC LDR W8, [X0 + 0xE0]
	0x033B95E0 CBNZ W8, 0x33B95E8
	0x033B95E4 BL 0x1C16DFC
	0x033B95E8 LDR X8, [X19 + 0x38]
	0x033B95EC LDR X0, [X8 + 0x10]
	0x033B95F0 LDRB W8, [X0 + 0x135]
	0x033B95F4 TBNZ X8, 0x0, 0x33B95FC
	0x033B95F8 BL 0x1C5C684
	0x033B95FC LDR X8, [X0 + 0xB8]
	0x033B9600 LDR X0, [X8]
	0x033B9604 LDP X20, X19, [X31 + 0x10]
	0x033B9608 LDR X30, [X31], #0x20
	0x033B960C RET
	0x033B9610 STP X30, X27, [X31 - 0x50]!
	0x033B9614 STP X26, X25, [X31 + 0x10]
	0x033B9618 STP X24, X23, [X31 + 0x20]
	0x033B961C STP X22, X21, [X31 + 0x30]
	0x033B9620 STP X20, X19, [X31 + 0x40]
	0x033B9624 ADRP X21, 0x1024000
	0x033B9628 LDRB W8, [X21 + 0x1E6]
	0x033B962C MOV X20, X1
	0x033B9630 MOV X19, X0
	0x033B9634 TBNZ X8, 0x0, 0x33B9670
	0x033B9638 ADRP X0, 0xD6B000
	0x033B963C LDR X0, [X0 + 0xBD0]
	0x033B9640 BL 0x1C16CF4
	0x033B9644 ADRP X0, 0xD63000
	0x033B9648 LDR X0, [X0 + 0x4E8]
	0x033B964C BL 0x1C16CF4
	0x033B9650 ADRP X0, 0xD42000
	0x033B9654 LDR X0, [X0 + 0xC60]
	0x033B9658 BL 0x1C16CF4
	0x033B965C ADRP X0, 0xD3A000
	0x033B9660 LDR X0, [X0 + 0x6C0]
	0x033B9664 BL 0x1C16CF4
	0x033B9668 MOVZ W8, 0x1
	0x033B966C STRB W8, [X21 + 0x1E6]
	0x033B9670 CBZ X20, 0x33B9990
	0x033B9674 ADRP X8, 0xD6B000
	0x033B9678 LDR X8, [X8 + 0xBD0]
	0x033B967C LDR W1, [X20 + 0x18]
	0x033B9680 LDR X0, [X8]
	0x033B9684 BL 0x1C16D6C
	0x033B9688 LDR X8, [X19]
	0x033B968C MOV X21, X0
	0x033B9690 MOV X0, X19
	0x033B9694 LDR X9, [X8 + 0x3D8]
	0x033B9698 LDR X1, [X8 + 0x3E0]
	0x033B969C BLR X9
	0x033B96A0 TBZ X0, 0x0, 0x33B99C4
	0x033B96A4 LDR X8, [X19]
	0x033B96A8 MOV X0, X19
	0x033B96AC LDR X9, [X8 + 0x468]
	0x033B96B0 LDR X1, [X8 + 0x470]
	0x033B96B4 BLR X9
	0x033B96B8 CBZ X0, 0x33B994C
	0x033B96BC LDR X8, [X0 + 0x18]
	0x033B96C0 LDR W9, [X20 + 0x18]
	0x033B96C4 CMP W8, W9
	0x033B96C8 B.NE 0x33B9A3C
	0x033B96CC ADRP X24, 0xD63000
	0x033B96D0 ADRP X25, 0xD3A000
	0x033B96D4 LDR X24, [X24 + 0x4E8]
	0x033B96D8 LDR X25, [X25 + 0x6C0]
	0x033B96DC CMP W8, 0x1
	0x033B96E0 B.LT 0x33B97A4
	0x033B96E4 AND X8, X8, 0x0
	0x033B96E8 MOVZ W26, 0x4
	0x033B96EC SUB X27, X26, 0x4
	0x033B96F0 CMP X27, W8, UXTW
	0x033B96F4 B.CS 0x33B9948
	0x033B96F8 LDR X0, [X25]
	0x033B96FC LDR X22, [X20, X26, LSL #3]
	0x033B9700 LDR W8, [X0 + 0xE0]
	0x033B9704 CBNZ W8, 0x33B970C
	0x033B9708 BL 0x1C16DFC
	0x033B970C MOV X0, X22
	0x033B9710 MOV X1, X31
	0x033B9714 MOV X2, X31
	0x033B9718 BL 0x3395194
	0x033B971C TBNZ X0, 0x0, 0x33B995C
	0x033B9720 LDR X0, [X24]
	0x033B9724 CBZ X22, 0x33B973C
	0x033B9728 LDR X8, [X22]
	0x033B972C LDRB W9, [X0 + 0x130]
	0x033B9730 LDRB W10, [X8 + 0x130]
	0x033B9734 CMP W10, W9
	0x033B9738 B.CS 0x33B9744
	0x033B973C MOV X23, X31
	0x033B9740 B 0x33B9758
	0x033B9744 LDR X8, [X8 + 0xC8]
	0x033B9748 ADD X8, X8, X9, 0x3, LSL
	0x033B974C LDUR X8, [X8 - 0x8]
	0x033B9750 CMP X8, X0
	0x033B9754 CSEL X23, X22, X31, EQ
	0x033B9758 LDR W8, [X0 + 0xE0]
	0x033B975C CBNZ W8, 0x33B9764
	0x033B9760 BL 0x1C16DFC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x1025000
	009 Move W8, [X20+476]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xD64000
	016 Move X0, [X0+1256]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+476], W8
	020 Move X0, X19
	021 Move X1, X31
	022 Call Type.get_IsInterface, X0
	023 Move X20, X31
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {123}
	028 Move X0, X19
	029 Move X1, X31
	030 Call RuntimeTypeHandle.IsGenericVariable, X0
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {132}
	035 Move X8, [X19]
	036 Move X0, X19
	037 Move X9, [X8+1176]
	038 Move X1, [X8+1184]
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move X23, 0xD64000
	041 Move X23, [X23+1256]
	042 Move X21, X0
	043 Move X8, [X23]
	044 Move W9, [X8+224]
	045 Compare W9, 0
	046 JumpIfNotEqual {49}
	047 Move X0, X8
	048 Call 0x1C17DFC
	049 Compare X21, 0
	050 JumpIfEqual {146}
	051 Move X8, [X23]
	052 Move X9, [X8+184]
	053 Move W8, [X21+24]
	054 Move X20, [X9+16]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move W24, W31
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Add X8, X21, W24
	059 Move X22, [X8+32]
	060 Compare X22, 0
	061 JumpIfEqual {146}
	062 Move X8, [X22]
	063 Move X1, [X23]
	064 Move W10, [X8+304]
	065 Move W9, [X1+304]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X8, [X8+200]
	068 Add X8, X8, X9
	069 NotImplemented "Instruction LDUR not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X0, X22
	072 Move X1, X31
	073 Call Type.get_IsInterface, X0
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfEqual {94}
	078 Move X8, [X22]
	079 Move X0, X22
	080 Move X9, [X8+936]
	081 Move X1, [X8+944]
	082 NotImplemented "Instruction BLR not yet implemented."
	083 Move TEMP, X0
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfNotEqual {93}
	087 Move X8, [X22]
	088 Move X0, X22
	089 Move X9, [X8+1160]
	090 Move X1, [X8+1168]
	091 NotImplemented "Instruction BLR not yet implemented."
	092 And W31, W0, 12
	093 Move X20, X22
	094 Move W8, [X21+24]
	095 Add W24, W24, 1
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move X0, [X23]
	098 Move W8, [X0+224]
	099 Compare W8, 0
	100 JumpIfNotEqual {103}
	101 Call 0x1C17DFC
	102 Move X0, [X23]
	103 Move X8, [X0+184]
	104 Move X8, [X8+16]
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move X8, [X19]
	107 Move X0, X19
	108 Move X9, [X8+1160]
	109 Move X1, [X8+1168]
	110 NotImplemented "Instruction BLR not yet implemented."
	111 Move TEMP, X0
	112 And TEMP, TEMP, 8
	113 Compare TEMP, 8
	114 JumpIfNotEqual {123}
	115 Move X0, [X23]
	116 Move W8, [X0+224]
	117 Compare W8, 0
	118 JumpIfNotEqual {121}
	119 Call 0x1C17DFC
	120 Move X0, [X23]
	121 Move X8, [X0+184]
	122 Move X20, [X8]
	123 Move X0, X20
	124 Move X20, [X31+48]
	125 Move X19, [X31+56]
	126 Move X22, [X31+32]
	127 Move X21, [X31+40]
	128 Move X24, [X31+16]
	129 Move X23, [X31+24]
	130 Move X30, [X31+64]
	131 Return X0
	132 Move X0, X19
	133 Move X20, [X31+48]
	134 Move X19, [X31+56]
	135 Move X22, [X31+32]
	136 Move X21, [X31+40]
	137 Move X24, [X31+16]
	138 Move X23, [X31+24]
	139 Move X1, X31
	140 Move X30, [X31+64]
	141 Call RuntimeTypeHandle.GetBaseType, X0
	142 Return X0
	143 Move X0, X22
	144 Call 0x1C181E0
	145 Call 0x1C17F28
	146 Call 0x1C17F20

Method: System.Type get_UnderlyingSystemType()

Disassembly:
	0x033B9764 CBZ X23, 0x33B9824

ISIL:
	001 Return X0

Method: System.Reflection.TypeAttributes GetAttributeFlagsImpl()

Disassembly:
	0x033B9768 CBZ X21, 0x33B994C
	0x033B976C LDR X8, [X21]

ISIL:
	001 Move X1, X31
	002 Call RuntimeTypeHandle.GetAttributes, X0
	003 Return X0

Method: System.Boolean IsContextfulImpl()

Disassembly:
	0x033B9770 MOV X0, X23
	0x033B9774 LDR X1, [X8 + 0x40]

ISIL:
	001 Move X1, X31
	002 Call RuntimeTypeHandle.IsContextful, X0
	003 Return X0

Method: System.Boolean IsByRefImpl()

Disassembly:
	0x033B9778 BL 0x1C16E00
	0x033B977C CBZ X0, 0x33B9950

ISIL:
	001 Move X1, X31
	002 Call RuntimeTypeHandle.IsByRef, X0
	003 Return X0

Method: System.Boolean IsPrimitiveImpl()

Disassembly:
	0x033B9780 LDR W8, [X21 + 0x18]
	0x033B9784 CMP X27, X8

ISIL:
	001 Move X1, X31
	002 Call RuntimeTypeHandle.IsPrimitive, X0
	003 Return X0

Method: System.Boolean IsPointerImpl()

Disassembly:
	0x033B9788 B.CS 0x33B9948
	0x033B978C STR X23, [X21, X26, LSL #3]

ISIL:
	001 Move X1, X31
	002 Call RuntimeTypeHandle.IsPointer, X0
	003 Return X0

Method: System.Boolean IsCOMObjectImpl()

Disassembly:
	0x033B9790 LDR W8, [X20 + 0x18]
	0x033B9794 SUB X9, X26, 0x3
	0x033B9798 ADD X26, X26, 0x1

ISIL:
	001 Move W1, W31
	002 Move X2, X31
	003 Call RuntimeTypeHandle.IsComObject, X0, X1
	004 Return X0

Method: System.Boolean IsValueTypeImpl()

Disassembly:
	0x033B979C CMP X9, W8, SXTW
	0x033B97A0 B.LT 0x33B96EC
	0x033B97A4 MOV X0, X19
	0x033B97A8 BL 0x33B94F8
	0x033B97AC LDR X8, [X24]
	0x033B97B0 MOV X20, X0
	0x033B97B4 LDR W9, [X8 + 0xE0]
	0x033B97B8 CBNZ W9, 0x33B97C4
	0x033B97BC MOV X0, X8
	0x033B97C0 BL 0x1C16DFC
	0x033B97C4 MOV X0, X21
	0x033B97C8 MOV X1, X20
	0x033B97CC BL 0x33B41F0
	0x033B97D0 MOV X0, X19
	0x033B97D4 MOV X1, X21
	0x033B97D8 BL 0x1C3D058
	0x033B97DC LDR X8, [X25]
	0x033B97E0 MOV X19, X0
	0x033B97E4 LDR W9, [X8 + 0xE0]
	0x033B97E8 CBNZ W9, 0x33B97F4
	0x033B97EC MOV X0, X8
	0x033B97F0 BL 0x1C16DFC
	0x033B97F4 MOV X0, X19
	0x033B97F8 MOV X1, X31
	0x033B97FC MOV X2, X31
	0x033B9800 BL 0x3395194
	0x033B9804 TBNZ X0, 0x0, 0x33B9AA0
	0x033B9808 MOV X0, X19
	0x033B980C LDP X20, X19, [X31 + 0x40]
	0x033B9810 LDP X22, X21, [X31 + 0x30]
	0x033B9814 LDP X24, X23, [X31 + 0x20]
	0x033B9818 LDP X26, X25, [X31 + 0x10]
	0x033B981C LDP X30, X27, [X31], #0x50
	0x033B9820 RET
	0x033B9824 CBZ X22, 0x33B994C
	0x033B9828 LDR X8, [X22]
	0x033B982C MOV X0, X22
	0x033B9830 LDR X9, [X8 + 0x5F8]
	0x033B9834 LDR X1, [X8 + 0x600]
	0x033B9838 BLR X9
	0x033B983C TBZ X0, 0x0, 0x33B9874
	0x033B9840 LDR X0, [X25]
	0x033B9844 LDR W8, [X0 + 0xE0]
	0x033B9848 CBNZ W8, 0x33B9850
	0x033B984C BL 0x1C16DFC
	0x033B9850 MOV X0, X19
	0x033B9854 MOV X1, X20
	0x033B9858 LDP X20, X19, [X31 + 0x40]
	0x033B985C LDP X22, X21, [X31 + 0x30]
	0x033B9860 LDP X24, X23, [X31 + 0x20]
	0x033B9864 LDP X26, X25, [X31 + 0x10]
	0x033B9868 MOV X2, X31
	0x033B986C LDP X30, X27, [X31], #0x50
	0x033B9870 B 0x3397FA8
	0x033B9874 ADRP X8, 0xD42000
	0x033B9878 LDR X8, [X8 + 0xC60]
	0x033B987C LDR W1, [X20 + 0x18]
	0x033B9880 LDR X0, [X8]
	0x033B9884 BL 0x1C16D6C
	0x033B9888 LDR X8, [X20 + 0x18]
	0x033B988C MOV X21, X0
	0x033B9890 CMP W8, 0x1
	0x033B9894 B.LT 0x33B98F0
	0x033B9898 MOV X23, X31
	0x033B989C AND X8, X8, 0x0
	0x033B98A0 ADD X25, X20, 0x20
	0x033B98A4 ADD X26, X21, 0x20
	0x033B98A8 CMP X23, W8, UXTW
	0x033B98AC B.CS 0x33B9948
	0x033B98B0 CBZ X21, 0x33B994C
	0x033B98B4 LDR X22, [X25, X23, LSL #3]
	0x033B98B8 CBZ X22, 0x33B98D0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x1025000
	007 Move X21, 0xD73000
	008 Move X22, 0xD3B000
	009 Move W8, [X20+477]
	010 Move X21, [X21+1160]
	011 Move X22, [X22+1728]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0xD70000
	018 Move X0, [X0+720]
	019 Call 0x1C17CF4
	020 Move X0, 0xD3B000
	021 Move X0, [X0+1728]
	022 Call 0x1C17CF4
	023 Move X0, 0xD73000
	024 Move X0, [X0+1160]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+477], W8
	028 Move X0, [X22]
	029 Move X20, [X21]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X20
	035 Move X1, X31
	036 Call Type.GetTypeFromHandle, X0
	037 Move X1, X0
	038 Move X0, X19
	039 Move X2, X31
	040 Call Type.op_Equality, X0, X1
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {64}
	045 Move X8, 0xD70000
	046 Move X0, [X22]
	047 Move X8, [X8+720]
	048 Move W9, [X0+224]
	049 Move X20, [X8]
	050 Compare W9, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X0, X20
	054 Move X1, X31
	055 Call Type.GetTypeFromHandle, X0
	056 Move X1, X0
	057 Move X0, X19
	058 Move X2, X31
	059 Call Type.op_Equality, X0, X1
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {71}
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X22, [X31+16]
	067 Move X21, [X31+24]
	068 Move W0, W31
	069 Move X30, [X31+48]
	070 Return X0
	071 Move X0, [X22]
	072 Move X20, [X21]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Move X0, X20
	078 Move X1, X31
	079 Call Type.GetTypeFromHandle, X0
	080 Move X8, [X19]
	081 Move X1, X0
	082 Move X0, X19
	083 Move X20, [X31+32]
	084 Move X19, [X31+40]
	085 Move X3, [X8+664]
	086 Move X2, [X8+672]
	087 Move X22, [X31+16]
	088 Move X21, [X31+24]
	089 Move X30, [X31+48]
	090 CallNoReturn X3

Method: System.Boolean get_IsEnum()

Disassembly:
	0x033B98BC LDR X8, [X21]
	0x033B98C0 MOV X0, X22
	0x033B98C4 LDR X1, [X8 + 0x40]
	0x033B98C8 BL 0x1C16E00
	0x033B98CC CBZ X0, 0x33B9950
	0x033B98D0 LDR W8, [X21 + 0x18]
	0x033B98D4 CMP X23, X8
	0x033B98D8 B.CS 0x33B9948
	0x033B98DC STR X22, [X26, X23, LSL #3]
	0x033B98E0 LDR W8, [X20 + 0x18]
	0x033B98E4 ADD X23, X23, 0x1
	0x033B98E8 CMP X23, W8, SXTW
	0x033B98EC B.LT 0x33B98A8
	0x033B98F0 MOV X0, X31
	0x033B98F4 BL 0x32C312C
	0x033B98F8 TBZ X0, 0x0, 0x33B9AC0
	0x033B98FC LDR X0, [X24]
	0x033B9900 LDR W8, [X0 + 0xE0]
	0x033B9904 CBNZ W8, 0x33B9910
	0x033B9908 BL 0x1C16DFC
	0x033B990C LDR X0, [X24]
	0x033B9910 LDR X8, [X0 + 0xB8]
	0x033B9914 LDR X8, [X8 + 0x30]
	0x033B9918 CBZ X8, 0x33B994C
	0x033B991C LDR X4, [X8 + 0x18]
	0x033B9920 LDR X0, [X8 + 0x40]
	0x033B9924 LDR X3, [X8 + 0x28]
	0x033B9928 MOV X1, X19
	0x033B992C MOV X2, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1025000
	006 Move X20, 0xD64000
	007 Move W8, [X21+478]
	008 Move X20, [X20+1256]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD64000
	015 Move X0, [X0+1256]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+478], W8
	019 Move X0, X19
	020 Call RuntimeType.GetBaseType, X0
	021 Move X8, [X20]
	022 Move X19, X0
	023 Move W9, [X8+224]
	024 Compare W9, 0
	025 JumpIfNotEqual {29}
	026 Move X0, X8
	027 Call 0x1C17DFC
	028 Move X8, [X20]
	029 Move X8, [X8+184]
	030 Move X8, [X8+8]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 NotImplemented "Instruction CSET not yet implemented."
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Return X0

Method: System.Boolean HasElementTypeImpl()

Disassembly:
	0x033B9930 LDP X20, X19, [X31 + 0x40]
	0x033B9934 LDP X22, X21, [X31 + 0x30]

ISIL:
	001 Move X1, X31
	002 Call RuntimeTypeHandle.HasElementType, X0
	003 Return X0

Method: System.Reflection.GenericParameterAttributes get_GenericParameterAttributes()

Disassembly:
	0x033B9938 LDP X24, X23, [X31 + 0x20]
	0x033B993C LDP X26, X25, [X31 + 0x10]
	0x033B9940 LDP X30, X27, [X31], #0x50
	0x033B9944 BR X4
	0x033B9948 BL 0x1C16F28
	0x033B994C BL 0x1C16F20
	0x033B9950 BL 0x1C16F44
	0x033B9954 MOV X1, X31
	0x033B9958 BL 0x1C16DEC
	0x033B995C ADRP X0, 0xD3F000
	0x033B9960 LDR X0, [X0 + 0x528]
	0x033B9964 BL 0x1C16D08
	0x033B9968 BL 0x1C16F10
	0x033B996C MOV X1, X31
	0x033B9970 MOV X19, X0
	0x033B9974 BL 0x3315F20
	0x033B9978 ADRP X0, 0xD73000
	0x033B997C LDR X0, [X0 + 0x230]
	0x033B9980 BL 0x1C16D08
	0x033B9984 MOV X1, X0
	0x033B9988 MOV X0, X19
	0x033B998C BL 0x1C16DEC
	0x033B9990 ADRP X0, 0xD3F000
	0x033B9994 LDR X0, [X0 + 0x528]
	0x033B9998 BL 0x1C16D08
	0x033B999C BL 0x1C16F10
	0x033B99A0 MOV X19, X0
	0x033B99A4 ADRP X0, 0xD73000
	0x033B99A8 LDR X0, [X0 + 0x238]
	0x033B99AC BL 0x1C16D08
	0x033B99B0 MOV X1, X0
	0x033B99B4 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0]
	005 Move X19, X0
	006 Move X9, [X8+936]
	007 Move X1, [X8+944]
	008 NotImplemented "Instruction BLR not yet implemented."
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {17}
	013 Move X0, X19
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X30, [X31+32]
	017 Move X0, 0xD6D000
	018 Move X0, [X0+3776]
	019 Call 0x1C17D08
	020 Move X1, X31
	021 Call Environment.GetResourceString, X0
	022 Move X19, X0
	023 Move X0, 0xD3B000
	024 Move X0, [X0+1456]
	025 Call 0x1C17D08
	026 Call 0x1C17F10
	027 Move X1, X19
	028 Move X2, X31
	029 Move X20, X0
	030 Call InvalidOperationException..ctor, X0, X1
	031 Move X0, 0xD74000
	032 Move X0, [X0+504]
	033 Call 0x1C17D08
	034 Move X1, X0
	035 Move X0, X20
	036 Call 0x1C17DEC

Method: System.Boolean get_IsSzArray()

Disassembly:
	0x033B99FC ADRP X0, 0xD73000
	0x033B9A00 LDR X0, [X0 + 0x240]

ISIL:
	001 Move X1, X31
	002 Call RuntimeTypeHandle.IsSzArray, X0
	003 Return X0

Method: System.Boolean IsArrayImpl()

Disassembly:
	0x033B9A04 BL 0x1C16D08
	0x033B9A08 MOV X1, X20

ISIL:
	001 Move X1, X31
	002 Call RuntimeTypeHandle.IsArray, X0
	003 Return X0

Method: System.Int32 GetArrayRank()

Disassembly:
	0x033B9A0C MOV X2, X31
	0x033B9A10 BL 0x33BFB40
	0x033B9A14 MOV X19, X0
	0x033B9A18 ADRP X0, 0xD3A000
	0x033B9A1C LDR X0, [X0 + 0x5B0]
	0x033B9A20 BL 0x1C16D08
	0x033B9A24 BL 0x1C16F10
	0x033B9A28 MOV X1, X19
	0x033B9A2C MOV X2, X31
	0x033B9A30 MOV X20, X0
	0x033B9A34 BL 0x337DF1C
	0x033B9A38 B 0x33B9A88
	0x033B9A3C ADRP X0, 0xD73000
	0x033B9A40 LDR X0, [X0 + 0x248]
	0x033B9A44 BL 0x1C16D08
	0x033B9A48 MOV X1, X31
	0x033B9A4C BL 0x33BDD84
	0x033B9A50 MOV X19, X0
	0x033B9A54 ADRP X0, 0xD42000
	0x033B9A58 LDR X0, [X0 + 0x578]
	0x033B9A5C BL 0x1C16D08
	0x033B9A60 BL 0x1C16F10
	0x033B9A64 MOV X20, X0
	0x033B9A68 ADRP X0, 0xD73000
	0x033B9A6C LDR X0, [X0 + 0x238]
	0x033B9A70 BL 0x1C16D08
	0x033B9A74 MOV X2, X0
	0x033B9A78 MOV X0, X20
	0x033B9A7C MOV X1, X19
	0x033B9A80 MOV X3, X31
	0x033B9A84 BL 0x330E16C
	0x033B9A88 ADRP X0, 0xD73000
	0x033B9A8C LDR X0, [X0 + 0x230]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0]
	005 Move X19, X0
	006 Move X9, [X8+840]
	007 Move X1, [X8+848]
	008 NotImplemented "Instruction BLR not yet implemented."
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {20}
	013 Move X0, X19
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X1, X31
	017 Move X30, [X31+32]
	018 Call RuntimeTypeHandle.GetArrayRank, X0
	019 Return X0
	020 Move X0, 0xD6D000
	021 Move X0, [X0+3728]
	022 Call 0x1C17D08
	023 Move X1, X31
	024 Call Environment.GetResourceString, X0
	025 Move X19, X0
	026 Move X0, 0xD43000
	027 Move X0, [X0+1400]
	028 Call 0x1C17D08
	029 Call 0x1C17F10
	030 Move X1, X19
	031 Move X2, X31
	032 Move X20, X0
	033 Call ArgumentException..ctor, X0, X1
	034 Move X0, 0xD74000
	035 Move X0, [X0+512]
	036 Call 0x1C17D08
	037 Move X1, X0
	038 Move X0, X20
	039 Call 0x1C17DEC

Method: System.Type GetElementType()

Disassembly:
	0x033B9A90 BL 0x1C16D08
	0x033B9A94 MOV X1, X0

ISIL:
	001 Move X1, X31
	002 Call RuntimeTypeHandle.GetElementType, X0
	003 Return X0

Method: System.String[] GetEnumNames()

Disassembly:
	0x033B9A98 MOV X0, X20
	0x033B9A9C BL 0x1C16DEC
	0x033B9AA0 ADRP X0, 0xD6C000
	0x033B9AA4 LDR X0, [X0 + 0x4B8]
	0x033B9AA8 BL 0x1C16D08
	0x033B9AAC BL 0x1C16F10
	0x033B9AB0 MOV X1, X31
	0x033B9AB4 MOV X19, X0
	0x033B9AB8 BL 0x33BE678
	0x033B9ABC B 0x33B9978
	0x033B9AC0 ADRP X0, 0xD65000
	0x033B9AC4 LDR X0, [X0 + 0xC50]
	0x033B9AC8 BL 0x1C16D08
	0x033B9ACC BL 0x1C16F10
	0x033B9AD0 MOV X1, X31
	0x033B9AD4 MOV X19, X0
	0x033B9AD8 BL 0x338E344
	0x033B9ADC B 0x33B9978
	0x033B9AE0 B 0x1C3D058
	0x033B9AE4 MOV X1, X31
	0x033B9AE8 B 0x33CC53C
	0x033B9AEC MOV X1, X31
	0x033B9AF0 B 0x33CC520
	0x033B9AF4 STR X30, [X31 - 0x20]!
	0x033B9AF8 STP X20, X19, [X31 + 0x10]
	0x033B9AFC LDR X8, [X0]
	0x033B9B00 MOV X19, X0
	0x033B9B04 LDR X9, [X8 + 0x3A8]
	0x033B9B08 LDR X1, [X8 + 0x3B0]
	0x033B9B0C BLR X9
	0x033B9B10 TBZ X0, 0x0, 0x33B9B24
	0x033B9B14 MOV X0, X19
	0x033B9B18 LDP X20, X19, [X31 + 0x10]
	0x033B9B1C LDR X30, [X31], #0x20
	0x033B9B20 B 0x1C3A054
	0x033B9B24 ADRP X0, 0xD6C000
	0x033B9B28 LDR X0, [X0 + 0xEC0]
	0x033B9B2C BL 0x1C16D08
	0x033B9B30 MOV X1, X31
	0x033B9B34 BL 0x33BDD84
	0x033B9B38 MOV X19, X0
	0x033B9B3C ADRP X0, 0xD3A000
	0x033B9B40 LDR X0, [X0 + 0x5B0]
	0x033B9B44 BL 0x1C16D08
	0x033B9B48 BL 0x1C16F10
	0x033B9B4C MOV X1, X19
	0x033B9B50 MOV X2, X31
	0x033B9B54 MOV X20, X0
	0x033B9B58 BL 0x337DF1C
	0x033B9B5C ADRP X0, 0xD73000
	0x033B9B60 LDR X0, [X0 + 0x250]
	0x033B9B64 BL 0x1C16D08
	0x033B9B68 MOV X1, X0
	0x033B9B6C MOV X0, X20
	0x033B9B70 BL 0x1C16DEC
	0x033B9B74 B 0x1C3A054
	0x033B9B78 STR X30, [X31 - 0x20]!
	0x033B9B7C STP X20, X19, [X31 + 0x10]
	0x033B9B80 LDR X8, [X0]
	0x033B9B84 MOV X19, X0
	0x033B9B88 LDR X9, [X8 + 0x3C8]
	0x033B9B8C LDR X1, [X8 + 0x3D0]
	0x033B9B90 BLR X9
	0x033B9B94 TBZ X0, 0x0, 0x33B9BAC
	0x033B9B98 MOV X0, X19
	0x033B9B9C LDP X20, X19, [X31 + 0x10]
	0x033B9BA0 MOV X1, X31
	0x033B9BA4 LDR X30, [X31], #0x20
	0x033B9BA8 B 0x33CC33C
	0x033B9BAC ADRP X0, 0xD6C000
	0x033B9BB0 LDR X0, [X0 + 0xED0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1025000
	005 Move W8, [X20+479]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xD3B000
	012 Move X0, [X0+3576]
	013 Call 0x1C17CF4
	014 Move X0, 0xD3B000
	015 Move X0, [X0+2760]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+479], W8
	019 Move X8, [X19]
	020 Move X0, X19
	021 Move X9, [X8+1416]
	022 Move X1, [X8+1424]
	023 NotImplemented "Instruction BLR not yet implemented."
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {56}
	028 Move X8, 0xD3B000
	029 Move X8, [X8+3576]
	030 Move X0, [X8]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X19
	036 Call Enum.InternalGetNames, X0
	037 Compare X0, 0
	038 JumpIfEqual {81}
	039 Move X8, 0xD3B000
	040 Move X8, [X8+2760]
	041 Move X19, X0
	042 Move W1, [X19+24]
	043 Move X0, [X8]
	044 Call 0x1C17D6C
	045 Move W2, [X19+24]
	046 Move X20, X0
	047 Move X0, X19
	048 Move X1, X20
	049 Move X3, X31
	050 Call Array.Copy, X0, X1, X2
	051 Move X0, X20
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X30, [X31+32]
	055 Return X0
	056 Move X0, 0xD73000
	057 Move X0, [X0+952]
	058 Call 0x1C17D08
	059 Move X1, X31
	060 Call Environment.GetResourceString, X0
	061 Move X19, X0
	062 Move X0, 0xD43000
	063 Move X0, [X0+1400]
	064 Call 0x1C17D08
	065 Call 0x1C17F10
	066 Move X20, X0
	067 Move X0, 0xD73000
	068 Move X0, [X0+960]
	069 Call 0x1C17D08
	070 Move X2, X0
	071 Move X0, X20
	072 Move X1, X19
	073 Move X3, X31
	074 Call ArgumentException..ctor, X0, X1, X2
	075 Move X0, 0xD74000
	076 Move X0, [X0+520]
	077 Call 0x1C17D08
	078 Move X1, X0
	079 Move X0, X20
	080 Call 0x1C17DEC
	081 Call 0x1C17F20

Method: System.Array GetEnumValues()

Disassembly:
	0x033B9BB4 BL 0x1C16D08
	0x033B9BB8 MOV X1, X31
	0x033B9BBC BL 0x33BDD84
	0x033B9BC0 MOV X19, X0
	0x033B9BC4 ADRP X0, 0xD3A000
	0x033B9BC8 LDR X0, [X0 + 0x5B0]
	0x033B9BCC BL 0x1C16D08
	0x033B9BD0 BL 0x1C16F10
	0x033B9BD4 MOV X1, X19
	0x033B9BD8 MOV X2, X31
	0x033B9BDC MOV X20, X0
	0x033B9BE0 BL 0x337DF1C
	0x033B9BE4 ADRP X0, 0xD73000
	0x033B9BE8 LDR X0, [X0 + 0x258]
	0x033B9BEC BL 0x1C16D08
	0x033B9BF0 MOV X1, X0
	0x033B9BF4 MOV X0, X20
	0x033B9BF8 BL 0x1C16DEC
	0x033B9BFC MOV X1, X31
	0x033B9C00 B 0x33CC434
	0x033B9C04 STP X30, X19, [X31 - 0x10]!
	0x033B9C08 LDR X8, [X0]
	0x033B9C0C MOV X19, X0
	0x033B9C10 LDR X9, [X8 + 0x3C8]
	0x033B9C14 LDR X1, [X8 + 0x3D0]
	0x033B9C18 BLR X9
	0x033B9C1C TBZ X0, 0x0, 0x33B9C3C
	0x033B9C20 LDR X8, [X19]
	0x033B9C24 MOV X0, X19
	0x033B9C28 LDR X9, [X8 + 0x3D8]
	0x033B9C2C LDR X1, [X8 + 0x3E0]
	0x033B9C30 BLR X9
	0x033B9C34 EOR W8, W0, 0x1
	0x033B9C38 B 0x33B9C40
	0x033B9C3C MOV W8, W31
	0x033B9C40 AND W0, W8, 0x1
	0x033B9C44 LDP X30, X19, [X31], #0x10
	0x033B9C48 RET
	0x033B9C4C SUB X31, X31, 0xC0
	0x033B9C50 STP X29, X30, [X31 + 0x60]
	0x033B9C54 STP X28, X27, [X31 + 0x70]
	0x033B9C58 STP X26, X25, [X31 + 0x80]
	0x033B9C5C STP X24, X23, [X31 + 0x90]
	0x033B9C60 STP X22, X21, [X31 + 0xA0]
	0x033B9C64 STP X20, X19, [X31 + 0xB0]
	0x033B9C68 ADRP X20, 0x1024000
	0x033B9C6C LDRB W8, [X20 + 0x1E7]
	0x033B9C70 MOV X21, X7
	0x033B9C74 MOV X24, X6
	0x033B9C78 MOV X28, X5
	0x033B9C7C MOV X27, X4
	0x033B9C80 MOV X22, X3
	0x033B9C84 MOV W19, W2
	0x033B9C88 MOV X23, X1
	0x033B9C8C MOV X26, X0
	0x033B9C90 STR X5, [X31 + 0x58]
	0x033B9C94 TBNZ X8, 0x0, 0x33B9DA8
	0x033B9C98 ADRP X0, 0xD3A000
	0x033B9C9C LDR X0, [X0 + 0x9C8]
	0x033B9CA0 BL 0x1C16CF4
	0x033B9CA4 ADRP X0, 0xD73000
	0x033B9CA8 LDR X0, [X0 + 0x260]
	0x033B9CAC BL 0x1C16CF4
	0x033B9CB0 ADRP X0, 0xD72000
	0x033B9CB4 LDR X0, [X0 + 0xDC8]
	0x033B9CB8 BL 0x1C16CF4
	0x033B9CBC ADRP X0, 0xD6B000
	0x033B9CC0 LDR X0, [X0 + 0xB80]
	0x033B9CC4 BL 0x1C16CF4
	0x033B9CC8 ADRP X0, 0xD6A000
	0x033B9CCC LDR X0, [X0 + 0xE10]
	0x033B9CD0 BL 0x1C16CF4
	0x033B9CD4 ADRP X0, 0xD3B000
	0x033B9CD8 LDR X0, [X0 + 0xE58]
	0x033B9CDC BL 0x1C16CF4
	0x033B9CE0 ADRP X0, 0xD6B000
	0x033B9CE4 LDR X0, [X0 + 0xA98]
	0x033B9CE8 BL 0x1C16CF4
	0x033B9CEC ADRP X0, 0xD73000
	0x033B9CF0 LDR X0, [X0 + 0x268]
	0x033B9CF4 BL 0x1C16CF4
	0x033B9CF8 ADRP X0, 0xD73000
	0x033B9CFC LDR X0, [X0 + 0x270]
	0x033B9D00 BL 0x1C16CF4
	0x033B9D04 ADRP X0, 0xD73000
	0x033B9D08 LDR X0, [X0 + 0x278]
	0x033B9D0C BL 0x1C16CF4
	0x033B9D10 ADRP X0, 0xD6B000
	0x033B9D14 LDR X0, [X0 + 0xAB0]
	0x033B9D18 BL 0x1C16CF4
	0x033B9D1C ADRP X0, 0xD6D000
	0x033B9D20 LDR X0, [X0 + 0x1C8]
	0x033B9D24 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x1025000
	010 Move W8, [X20+480]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xD3B000
	017 Move X0, [X0+3576]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+480], W8
	021 Move X8, [X19]
	022 Move X0, X19
	023 Move X9, [X8+1416]
	024 Move X1, [X8+1424]
	025 NotImplemented "Instruction BLR not yet implemented."
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {84}
	030 Move X24, 0xD3B000
	031 Move X24, [X24+3576]
	032 Move X0, [X24]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X19
	038 Call Enum.InternalGetValues, X0
	039 Compare X0, 0
	040 JumpIfEqual {82}
	041 Move W1, [X0+24]
	042 Move X20, X0
	043 Move X0, X19
	044 Move X2, X31
	045 Call Array.CreateInstance, X0, X1
	046 Move X8, [X20+24]
	047 Move X21, X0
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X22, X31
	050 And X8, X8, 0
	051 Add X25, X20, 32
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X0, [X24]
	054 Move X23, [X25]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move X0, X19
	060 Move X1, X23
	061 Call Enum.ToObject, X0, X1
	062 Compare X21, 0
	063 JumpIfEqual {82}
	064 Move X1, X0
	065 Move X0, X21
	066 Move W2, W22
	067 Move X3, X31
	068 Call Array.SetValue, X0, X1, X2
	069 Move W8, [X20+24]
	070 Add X22, X22, 1
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X0, X21
	073 Move X20, [X31+48]
	074 Move X19, [X31+56]
	075 Move X22, [X31+32]
	076 Move X21, [X31+40]
	077 Move X24, [X31+16]
	078 Move X23, [X31+24]
	079 Move X30, [X31+64]
	080 Move X25, [X31+72]
	081 Return X0
	082 Call 0x1C17F20
	083 Call 0x1C17F28
	084 Move X0, 0xD73000
	085 Move X0, [X0+952]
	086 Call 0x1C17D08
	087 Move X1, X31
	088 Call Environment.GetResourceString, X0
	089 Move X19, X0
	090 Move X0, 0xD43000
	091 Move X0, [X0+1400]
	092 Call 0x1C17D08
	093 Call 0x1C17F10
	094 Move X20, X0
	095 Move X0, 0xD73000
	096 Move X0, [X0+960]
	097 Call 0x1C17D08
	098 Move X2, X0
	099 Move X0, X20
	100 Move X1, X19
	101 Move X3, X31
	102 Call ArgumentException..ctor, X0, X1, X2
	103 Move X0, 0xD74000
	104 Move X0, [X0+528]
	105 Call 0x1C17D08
	106 Move X1, X0
	107 Move X0, X20
	108 Call 0x1C17DEC

Method: System.Type GetEnumUnderlyingType()

Disassembly:
	0x033B9D28 ADRP X0, 0xD6B000
	0x033B9D2C LDR X0, [X0 + 0x278]
	0x033B9D30 BL 0x1C16CF4
	0x033B9D34 ADRP X0, 0xD6D000
	0x033B9D38 LDR X0, [X0 + 0x1D0]
	0x033B9D3C BL 0x1C16CF4
	0x033B9D40 ADRP X0, 0xD63000
	0x033B9D44 LDR X0, [X0 + 0x6A8]
	0x033B9D48 BL 0x1C16CF4
	0x033B9D4C ADRP X0, 0xD3A000
	0x033B9D50 LDR X0, [X0 + 0xEF0]
	0x033B9D54 BL 0x1C16CF4
	0x033B9D58 ADRP X0, 0xD6B000
	0x033B9D5C LDR X0, [X0 + 0x9A0]
	0x033B9D60 BL 0x1C16CF4
	0x033B9D64 ADRP X0, 0xD63000
	0x033B9D68 LDR X0, [X0 + 0x4E8]
	0x033B9D6C BL 0x1C16CF4
	0x033B9D70 ADRP X0, 0xD42000
	0x033B9D74 LDR X0, [X0 + 0xC60]
	0x033B9D78 BL 0x1C16CF4
	0x033B9D7C ADRP X0, 0xD3A000
	0x033B9D80 LDR X0, [X0 + 0x6C0]
	0x033B9D84 BL 0x1C16CF4
	0x033B9D88 ADRP X0, 0xD73000
	0x033B9D8C LDR X0, [X0 + 0x280]
	0x033B9D90 BL 0x1C16CF4
	0x033B9D94 ADRP X0, 0xD73000
	0x033B9D98 LDR X0, [X0 + 0x288]
	0x033B9D9C BL 0x1C16CF4
	0x033B9DA0 MOVZ W8, 0x1
	0x033B9DA4 STRB W8, [X20 + 0x1E7]
	0x033B9DA8 STR X31, [X31 + 0x50]
	0x033B9DAC LDR X8, [X26]
	0x033B9DB0 MOV X0, X26
	0x033B9DB4 LDR X9, [X8 + 0x3A8]
	0x033B9DB8 LDR X1, [X8 + 0x3B0]
	0x033B9DBC BLR X9
	0x033B9DC0 TBNZ X0, 0x0, 0x33BAA64
	0x033B9DC4 ANDS W31, W19, 0xFF00
	0x033B9DC8 B.EQ 0x33BAAA0
	0x033B9DCC LDR X25, [X31 + 0xC0]
	0x033B9DD0 ANDS W31, W19, 0x200
	0x033B9DD4 MOVZ W8, 0x14
	0x033B9DD8 MOVZ W9, 0x1C
	0x033B9DDC CSEL W8, W9, W8, EQ
	0x033B9DE0 ANDS W31, W19, 0xFF
	0x033B9DE4 CSEL W20, W8, W31, EQ
	0x033B9DE8 CBZ X25, 0x33B9E20
	0x033B9DEC LDR X8, [X25 + 0x18]
	0x033B9DF0 CBZ X28, 0x33B9F18
	0x033B9DF4 LDR W9, [X28 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1025000
	005 Move W8, [X20+481]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xD3B000
	012 Move X0, [X0+3576]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+481], W8
	016 Move X8, [X19]
	017 Move X0, X19
	018 Move X9, [X8+1416]
	019 Move X1, [X8+1424]
	020 NotImplemented "Instruction BLR not yet implemented."
	021 Move TEMP, X0
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {38}
	025 Move X8, 0xD3B000
	026 Move X8, [X8+3576]
	027 Move X0, [X8]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Call 0x1C88B74
	037 Return X0
	038 Move X0, 0xD73000
	039 Move X0, [X0+952]
	040 Call 0x1C17D08
	041 Move X1, X31
	042 Call Environment.GetResourceString, X0
	043 Move X19, X0
	044 Move X0, 0xD43000
	045 Move X0, [X0+1400]
	046 Call 0x1C17D08
	047 Call 0x1C17F10
	048 Move X20, X0
	049 Move X0, 0xD73000
	050 Move X0, [X0+960]
	051 Call 0x1C17D08
	052 Move X2, X0
	053 Move X0, X20
	054 Move X1, X19
	055 Move X3, X31
	056 Call ArgumentException..ctor, X0, X1, X2
	057 Move X0, 0xD74000
	058 Move X0, [X0+536]
	059 Call 0x1C17D08
	060 Move X1, X0
	061 Move X0, X20
	062 Call 0x1C17DEC

Method: System.Boolean IsEnumDefined(System.Object value)

Disassembly:
	0x033B9DF8 CMP W8, W9
	0x033B9DFC B.GT 0x33B9F1C
	0x033B9E00 ADRP X8, 0xD73000
	0x033B9E04 LDR X8, [X8 + 0x260]
	0x033B9E08 MOV X0, X25
	0x033B9E0C MOV X1, X31
	0x033B9E10 LDR X2, [X8]
	0x033B9E14 BL 0x22E75A0
	0x033B9E18 ADDS W31, W0, 0x1
	0x033B9E1C B.NE 0x33BAAEC
	0x033B9E20 CBZ X28, 0x33B9E34
	0x033B9E24 LDR W8, [X28 + 0x18]
	0x033B9E28 STR W8, [X31 + 0x4C]
	0x033B9E2C CBNZ X22, 0x33B9E60
	0x033B9E30 B 0x33B9E3C
	0x033B9E34 STR W31, [X31 + 0x4C]
	0x033B9E38 CBNZ X22, 0x33B9E60
	0x033B9E3C ADRP X8, 0xD3A000
	0x033B9E40 LDR X8, [X8 + 0x6C0]
	0x033B9E44 LDR X0, [X8]
	0x033B9E48 LDR W8, [X0 + 0xE0]
	0x033B9E4C CBNZ W8, 0x33B9E54
	0x033B9E50 BL 0x1C16DFC
	0x033B9E54 MOV X0, X31
	0x033B9E58 BL 0x33981F8
	0x033B9E5C MOV X22, X0
	0x033B9E60 ORR W1, W20, W19, 0x0
	0x033B9E64 TBNZ X19, 0x9, 0x33B9EEC
	0x033B9E68 ORR W8, W1, 0x2000
	0x033B9E6C ANDS W31, W19, 0xC000
	0x033B9E70 STP X25, X24, [X31 + 0x28]
	0x033B9E74 CSEL W25, W1, W8, EQ
	0x033B9E78 CBZ X23, 0x33BAB2C
	0x033B9E7C LDR W8, [X23 + 0x10]
	0x033B9E80 CBZ W8, 0x33B9EA0
	0x033B9E84 ADRP X8, 0xD73000
	0x033B9E88 LDR X8, [X8 + 0x288]
	0x033B9E8C MOV X0, X23
	0x033B9E90 MOV X2, X31
	0x033B9E94 LDR X1, [X8]
	0x033B9E98 BL 0x322693C
	0x033B9E9C TBZ X0, 0x0, 0x33B9EBC
	0x033B9EA0 MOV X0, X26
	0x033B9EA4 BL 0x33BADC4
	0x033B9EA8 ADRP X8, 0xD73000
	0x033B9EAC LDR X8, [X8 + 0x280]
	0x033B9EB0 CMP X0, 0x0
	0x033B9EB4 LDR X8, [X8]
	0x033B9EB8 CSEL X23, X8, X0, EQ
	0x033B9EBC AND W8, W25, 0x800
	0x033B9EC0 UBFM W9, W25, 0xA, 0xA
	0x033B9EC4 ORR W9, W9, W8, 0xB
	0x033B9EC8 CBZ W9, 0x33BA1B0
	0x033B9ECC AND W24, W25, 0x400
	0x033B9ED0 CBNZ W24, 0x33B9F28
	0x033B9ED4 CBZ X28, 0x33BAB9C
	0x033B9ED8 TBNZ X25, 0xC, 0x33BABF0
	0x033B9EDC TBZ X25, 0x8, 0x33B9F30
	0x033B9EE0 ADRP X0, 0xD73000
	0x033B9EE4 LDR X0, [X0 + 0x290]
	0x033B9EE8 B 0x33BAC38
	0x033B9EEC MOVZ W8, 0x3D00
	0x033B9EF0 ANDS W31, W19, W8, 0x0
	0x033B9EF4 B.NE 0x33BAB4C
	0x033B9EF8 MOV X0, X26
	0x033B9EFC MOV X2, X22
	0x033B9F00 MOV X3, X28
	0x033B9F04 MOV X4, X21
	0x033B9F08 MOV X5, X31
	0x033B9F0C BL 0x33A6488
	0x033B9F10 MOV X19, X0
	0x033B9F14 B 0x33BAA08
	0x033B9F18 CBZ X8, 0x33B9E00
	0x033B9F1C ADRP X0, 0xD73000
	0x033B9F20 LDR X0, [X0 + 0x298]
	0x033B9F24 B 0x33BAAF4
	0x033B9F28 CBNZ W8, 0x33BABE4
	0x033B9F2C TBNZ X25, 0xD, 0x33BABFC
	0x033B9F30 LDR X8, [X26]
	0x033B9F34 MOVZ W2, 0x4
	0x033B9F38 MOV X0, X26
	0x033B9F3C MOV X1, X23
	0x033B9F40 LDR X9, [X8 + 0x6B8]
	0x033B9F44 LDR X4, [X8 + 0x6C0]
	0x033B9F48 MOV W3, W25
	0x033B9F4C BLR X9
	0x033B9F50 ADRP X8, 0xD6B000
	0x033B9F54 LDR X8, [X8 + 0xB80]
	0x033B9F58 LDR X1, [X8]
	0x033B9F5C BL 0x1C16E00
	0x033B9F60 CBZ X0, 0x33BAA2C
	0x033B9F64 LDR X8, [X0 + 0x18]
	0x033B9F68 MOV X19, X0
	0x033B9F6C CMP W8, 0x1
	0x033B9F70 B.NE 0x33B9F7C
	0x033B9F74 LDR X29, [X19 + 0x20]
	0x033B9F78 B 0x33B9FF8
	0x033B9F7C CBZ X8, 0x33B9F98
	0x033B9F80 CBNZ W24, 0x33B9FB0
	0x033B9F84 CBZ X28, 0x33BAA2C
	0x033B9F88 LDR W8, [X28 + 0x18]
	0x033B9F8C CBZ W8, 0x33BAA30
	0x033B9F90 ADD X8, X28, 0x20
	0x033B9F94 B 0x33B9FD0
	0x033B9F98 MOV X0, X31
	0x033B9F9C MOV X1, X31
	0x033B9FA0 MOV X2, X31
	0x033B9FA4 BL 0x32CCED4
	0x033B9FA8 TBZ X0, 0x0, 0x33BA1A0
	0x033B9FAC B 0x33BAA2C
	0x033B9FB0 ADRP X20, 0xD72000
	0x033B9FB4 LDR X20, [X20 + 0xDC8]
	0x033B9FB8 LDR X0, [X20]
	0x033B9FBC LDR W8, [X0 + 0xE0]
	0x033B9FC0 CBNZ W8, 0x33B9FCC
	0x033B9FC4 BL 0x1C16DFC
	0x033B9FC8 LDR X0, [X20]
	0x033B9FCC LDR X8, [X0 + 0xB8]
	0x033B9FD0 CBZ X22, 0x33BAA2C
	0x033B9FD4 LDR X9, [X22]
	0x033B9FD8 LDR X3, [X8]
	0x033B9FDC MOV X0, X22
	0x033B9FE0 MOV W1, W25
	0x033B9FE4 LDP X8, X5, [X9 + 0x178]
	0x033B9FE8 MOV X2, X19
	0x033B9FEC MOV X4, X21
	0x033B9FF0 BLR X8
	0x033B9FF4 MOV X29, X0
	0x033B9FF8 MOV X0, X29
	0x033B9FFC MOV X1, X31
	0x033BA000 MOV X2, X31
	0x033BA004 BL 0x32CCED4
	0x033BA008 TBZ X0, 0x0, 0x33BA1A0
	0x033BA00C CBZ X29, 0x33BAA2C
	0x033BA010 LDR X8, [X29]
	0x033BA014 MOV X0, X29
	0x033BA018 LDR X9, [X8 + 0x258]
	0x033BA01C LDR X1, [X8 + 0x260]
	0x033BA020 BLR X9
	0x033BA024 CBZ X0, 0x33BAA2C
	0x033BA028 MOV X1, X31
	0x033BA02C BL 0x3396BF8
	0x033BA030 TBNZ X0, 0x0, 0x33BA088
	0x033BA034 LDR X8, [X29]
	0x033BA038 MOV X0, X29
	0x033BA03C LDR X9, [X8 + 0x258]
	0x033BA040 LDR X1, [X8 + 0x260]
	0x033BA044 BLR X9
	0x033BA048 ADRP X8, 0xD39000
	0x033BA04C LDR X8, [X8 + 0x6C0]
	0x033BA050 ADRP X9, 0xD62000
	0x033BA054 MOV X19, X0
	0x033BA058 LDR X8, [X8]
	0x033BA05C LDR X9, [X9 + 0x6A8]
	0x033BA060 LDR W10, [X8 + 0xE0]
	0x033BA064 LDR X20, [X9]
	0x033BA068 CBNZ W10, 0x33BA074
	0x033BA06C MOV X0, X8
	0x033BA070 BL 0x1C16DFC
	0x033BA074 MOV X0, X20
	0x033BA078 MOV X1, X31
	0x033BA07C BL 0x338C698
	0x033BA080 CMP X19, X0
	0x033BA084 B.NE 0x33BA438
	0x033BA088 LDR W9, [X31 + 0x4C]
	0x033BA08C CMP W24, 0x0
	0x033BA090 CSET W8, EQ
	0x033BA094 SUB W19, W9, W8
	0x033BA098 CMP W19, 0x1
	0x033BA09C B.LT 0x33BA438
	0x033BA0A0 ADRP X8, 0xD3A000
	0x033BA0A4 LDR X8, [X8 + 0xE58]
	0x033BA0A8 MOV W1, W19
	0x033BA0AC LDR X0, [X8]
	0x033BA0B0 BL 0x1C16D6C
	0x033BA0B4 CBZ X28, 0x33BA19C
	0x033BA0B8 ADRP X25, 0xD69000
	0x033BA0BC LDR X25, [X25 + 0xE10]
	0x033BA0C0 MOV X20, X0
	0x033BA0C4 MOV W8, W31
	0x033BA0C8 LDR W9, [X28 + 0x18]
	0x033BA0CC CMP W8, W9
	0x033BA0D0 B.CS 0x33BAA60
	0x033BA0D4 SXTW X26, W8
	0x033BA0D8 ADD X8, X28, X26, 0x3, LSL
	0x033BA0DC LDR X23, [X8 + 0x20]
	0x033BA0E0 CBZ X23, 0x33BAA44
	0x033BA0E4 LDR X21, [X25]
	0x033BA0E8 MOV X0, X23
	0x033BA0EC MOV X1, X21
	0x033BA0F0 BL 0x1C16E00
	0x033BA0F4 CBZ X0, 0x33BAA48
	0x033BA0F8 LDR X22, [X25]
	0x033BA0FC MOV X0, X23
	0x033BA100 MOV X1, X22
	0x033BA104 BL 0x1C16E00
	0x033BA108 MOV X21, X0
	0x033BA10C CBZ X0, 0x33BAA54
	0x033BA110 LDR X8, [X21]
	0x033BA114 LDRH W9, [X8 + 0x12E]
	0x033BA118 CBZ X9, 0x33BA13C
	0x033BA11C LDR X10, [X8 + 0xB0]
	0x033BA120 ADD X10, X10, 0x8
	0x033BA124 LDUR X11, [X10 - 0x8]
	0x033BA128 CMP X11, X22
	0x033BA12C B.EQ 0x33BA150
	0x033BA130 SUBS X9, X9, 0x1
	0x033BA134 ADD X10, X10, 0x10
	0x033BA138 B.NE 0x33BA124
	0x033BA13C MOVZ W2, 0x7
	0x033BA140 MOV X0, X21
	0x033BA144 MOV X1, X22
	0x033BA148 BL 0x1C5C788
	0x033BA14C B 0x33BA160
	0x033BA150 LDR W9, [X10]
	0x033BA154 ADD W9, W9, 0x7
	0x033BA158 ADD X8, X8, W9, 0x4, SXTW
	0x033BA15C ADD X0, X8, 0x138
	0x033BA160 LDP X8, X2, [X0]
	0x033BA164 MOV X0, X21
	0x033BA168 MOV X1, X31
	0x033BA16C BLR X8
	0x033BA170 CBZ X20, 0x33BAA40
	0x033BA174 LDR W8, [X20 + 0x18]
	0x033BA178 CMP W26, W8
	0x033BA17C B.CS 0x33BAA3C
	0x033BA180 ADD W8, W26, 0x1
	0x033BA184 ADD X9, X20, X26, 0x2, LSL
	0x033BA188 CMP W8, W19
	0x033BA18C STR W0, [X9 + 0x20]
	0x033BA190 B.EQ 0x33BA94C
	0x033BA194 LDR X28, [X31 + 0x58]
	0x033BA198 CBNZ X28, 0x33BA0C8
	0x033BA19C BL 0x1C16F20
	0x033BA1A0 MOVZ W8, 0xF300
	0x033BA1A4 MOVK W8, 0xFF0000
	0x033BA1A8 ANDS W31, W25, W8, 0x0
	0x033BA1AC B.EQ 0x33BAB5C
	0x033BA1B0 STR X26, [X31 + 0x40]
	0x033BA1B4 STP X22, X21, [X31 + 0x18]
	0x033BA1B8 AND W26, W25, 0x2000
	0x033BA1BC UBFM W21, W25, 0xC, 0xC
	0x033BA1C0 ORR W8, W21, W26, 0xD
	0x033BA1C4 CBZ W8, 0x33BA1E0
	0x033BA1C8 TBNZ X25, 0xC, 0x33BA1DC
	0x033BA1CC TBZ X25, 0x8, 0x33BA1E0
	0x033BA1D0 ADRP X0, 0xD72000
	0x033BA1D4 LDR X0, [X0 + 0x2A0]
	0x033BA1D8 B 0x33BAC38
	0x033BA1DC CBNZ W26, 0x33BAC08
	0x033BA1E0 STR X27, [X31 + 0x38]
	0x033BA1E4 TBNZ X25, 0x8, 0x33BA1F4
	0x033BA1E8 MOV X20, X31
	0x033BA1EC MOV X28, X31
	0x033BA1F0 B 0x33BA49C
	0x033BA1F4 LDR X0, [X31 + 0x40]
	0x033BA1F8 MOVZ W2, 0x8
	0x033BA1FC MOV X1, X23
	0x033BA200 MOV W3, W25
	0x033BA204 LDR X8, [X0]
	0x033BA208 LDR X9, [X8 + 0x6B8]
	0x033BA20C LDR X4, [X8 + 0x6C0]
	0x033BA210 BLR X9
	0x033BA214 ADRP X8, 0xD6C000
	0x033BA218 LDR X8, [X8 + 0x1C8]
	0x033BA21C LDR X1, [X8]
	0x033BA220 BL 0x1C16E00
	0x033BA224 CBZ X0, 0x33BAA2C
	0x033BA228 LDR X8, [X0 + 0x18]
	0x033BA22C MOV X24, X0
	0x033BA230 STR W21, [X31 + 0xC]
	0x033BA234 STR X23, [X31 + 0x10]
	0x033BA238 CMP W8, 0x1
	0x033BA23C B.LT 0x33BA480
	0x033BA240 ADRP X22, 0xD41000
	0x033BA244 ADRP X27, 0xD62000
	0x033BA248 LDR X22, [X22 + 0xC60]
	0x033BA24C LDR X27, [X27 + 0x4E8]
	0x033BA250 MOV X19, X31
	0x033BA254 MOV X20, X31
	0x033BA258 MOV X23, X31
	0x033BA25C AND X8, X8, 0x0
	0x033BA260 ADD X21, X24, 0x20
	0x033BA264 CMP X23, W8, UXTW
	0x033BA268 B.CS 0x33BAA30
	0x033BA26C LDR X0, [X22]
	0x033BA270 LDR W1, [X31 + 0x4C]
	0x033BA274 LDR X28, [X21, X23, LSL #3]
	0x033BA278 BL 0x1C16D6C
	0x033BA27C LDR X8, [X27]
	0x033BA280 MOV X29, X0
	0x033BA284 LDR W9, [X8 + 0xE0]
	0x033BA288 CBZ W9, 0x33BA294
	0x033BA28C CBNZ X28, 0x33BA2A0
	0x033BA290 B 0x33BA2D4
	0x033BA294 MOV X0, X8
	0x033BA298 BL 0x1C16DFC
	0x033BA29C CBZ X28, 0x33BA2D4
	0x033BA2A0 ADRP X9, 0xD6A000
	0x033BA2A4 LDR X8, [X28]
	0x033BA2A8 LDR X9, [X9 + 0x9A0]
	0x033BA2AC LDRB W10, [X8 + 0x130]
	0x033BA2B0 LDR X1, [X9]
	0x033BA2B4 LDRB W9, [X1 + 0x130]
	0x033BA2B8 CMP W10, W9
	0x033BA2BC B.CC 0x33BAA34
	0x033BA2C0 LDR X8, [X8 + 0xC8]
	0x033BA2C4 ADD X8, X8, X9, 0x3, LSL
	0x033BA2C8 LDUR X8, [X8 - 0x8]
	0x033BA2CC CMP X8, X1
	0x033BA2D0 B.NE 0x33BAA34
	0x033BA2D4 MOVZ W2, 0x3
	0x033BA2D8 MOV X0, X28
	0x033BA2DC MOV W1, W25
	0x033BA2E0 MOV X3, X29
	0x033BA2E4 BL 0x33B4A34
	0x033BA2E8 TBZ X0, 0x0, 0x33BA3F0
	0x033BA2EC MOV X0, X20
	0x033BA2F0 MOV X1, X31
	0x033BA2F4 MOV X2, X31
	0x033BA2F8 BL 0x32C2354
	0x033BA2FC TBZ X0, 0x0, 0x33BA308
	0x033BA300 MOV X20, X28
	0x033BA304 B 0x33BA3F0
	0x033BA308 CBNZ X19, 0x33BA394
	0x033BA30C ADRP X8, 0xD6A000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x1025000
	008 Move W8, [X21+482]
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0xD73000
	016 Move X0, [X0+1000]
	017 Call 0x1C17CF4
	018 Move X0, 0xD73000
	019 Move X0, [X0+944]
	020 Call 0x1C17CF4
	021 Move X0, 0xD3B000
	022 Move X0, [X0+3576]
	023 Call 0x1C17CF4
	024 Move X0, 0xD64000
	025 Move X0, [X0+1256]
	026 Call 0x1C17CF4
	027 Move X0, 0xD3B000
	028 Move X0, [X0+1728]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+482], W8
	032 Compare X20, 0
	033 JumpIfEqual {169}
	034 Move X0, X20
	035 Move X1, X31
	036 Call "il2cpp_vm_object_is_inst", X0
	037 Compare X0, 0
	038 JumpIfEqual {187}
	039 Move X22, 0xD64000
	040 Move X22, [X22+1256]
	041 Move X8, [X0]
	042 Move X21, X0
	043 Move X1, [X22]
	044 Move W10, [X8+304]
	045 Move W9, [X1+304]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X8, [X8+200]
	048 Add X8, X8, X9
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X8, [X21]
	052 Move X0, X21
	053 Move X9, [X8+1416]
	054 Move X1, [X8+1424]
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {89}
	060 Move X8, [X21]
	061 Move X0, X21
	062 Move X1, X19
	063 Move X9, [X8+2168]
	064 Move X2, [X8+2176]
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {253}
	070 Move X8, [X21]
	071 Move X0, X21
	072 Move X9, [X8+2184]
	073 Move X1, [X8+2192]
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Move X1, [X22]
	076 Move X21, X0
	077 Compare X0, 0
	078 JumpIfEqual {90}
	079 Move X8, [X21]
	080 Move W9, [X1+304]
	081 Move W10, [X8+304]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X8, [X8+200]
	084 Add X8, X8, X9
	085 NotImplemented "Instruction LDUR not yet implemented."
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X0, X21
	088 Call 0x1C181E0
	089 Move X1, [X22]
	090 Move W8, [X1+224]
	091 Compare W8, 0
	092 JumpIfNotEqual {96}
	093 Move X0, X1
	094 Call 0x1C17DFC
	095 Move X1, [X22]
	096 Move X8, [X1+184]
	097 Move X23, 0xD3B000
	098 Move X8, [X8+24]
	099 Move X23, [X23+3576]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X8, 0xD3B000
	102 Move X8, [X8+1728]
	103 Move X0, [X8]
	104 Move W8, [X0+224]
	105 Compare W8, 0
	106 JumpIfNotEqual {108}
	107 Call 0x1C17DFC
	108 Move X0, X21
	109 Move X1, X31
	110 Call Type.IsIntegerType, X0
	111 Move TEMP, X0
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfNotEqual {188}
	115 Move X0, [X23]
	116 Move W8, [X0+224]
	117 Compare W8, 0
	118 JumpIfNotEqual {120}
	119 Call 0x1C17DFC
	120 Move X0, X19
	121 Call 0x1C88B74
	122 Move X8, [X22]
	123 Move X22, X0
	124 Move W9, [X8+224]
	125 Compare W9, 0
	126 JumpIfNotEqual {129}
	127 Move X0, X8
	128 Call 0x1C17DFC
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move X0, [X23]
	131 Move X21, 0xD73000
	132 Move W8, [X0+224]
	133 Move X21, [X21+1000]
	134 Compare W8, 0
	135 JumpIfNotEqual {137}
	136 Call 0x1C17DFC
	137 Move X0, X19
	138 Call Enum.InternalGetValues, X0
	139 Move X19, X0
	140 Move X0, X20
	141 Call Enum.ToUInt64, X0
	142 Move X2, [X21]
	143 Move X1, X0
	144 Move X0, X19
	145 Call 0x22CAA48, X0, X1
	146 Move X0, [X23]
	147 Move W8, [X0+224]
	148 Compare W8, 0
	149 JumpIfNotEqual {151}
	150 Call 0x1C17DFC
	151 Move X0, X19
	152 Call Enum.InternalGetNames, X0
	153 Move X8, 0xD72000
	154 Move X8, [X8+944]
	155 Move X1, X20
	156 Move X2, [X8]
	157 Call Array.IndexOf, X0, X1
	158 Move X20, [X31+32]
	159 Move X19, [X31+40]
	160 Move X22, [X31+16]
	161 Move X21, [X31+24]
	162 NotImplemented "Instruction ORN not yet implemented."
	163 Move W0, W8
	164 ShiftRight W0, 31
	165 And W0, W0, 0x7FFFFFFF
	166 Move X30, [X31+48]
	167 Move X23, [X31+56]
	168 Return X0
	169 Move X0, 0xD3F000
	170 Move X0, [X0+1320]
	171 Call 0x1C17D08
	172 Call 0x1C17F10
	173 Move X19, X0
	174 Move X0, 0xD44000
	175 Move X0, [X0+3784]
	176 Call 0x1C17D08
	177 Move X1, X0
	178 Move X0, X19
	179 Move X2, X31
	180 Call ArgumentNullException..ctor, X0, X1
	181 Move X0, 0xD73000
	182 Move X0, [X0+544]
	183 Call 0x1C17D08
	184 Move X1, X0
	185 Move X0, X19
	186 Call 0x1C17DEC
	187 Call 0x1C17F20
	188 Move X0, 0xD72000
	189 Move X0, [X0+2040]
	190 Call 0x1C17D08
	191 Move X8, [X0+184]
	192 Move W8, [X8]
	193 Compare W8, 0
	194 JumpIfNotEqual {293}
	195 Move X0, 0xD72000
	196 Move X0, [X0+968]
	197 Call 0x1C17D08
	198 Move X1, X31
	199 Call Environment.GetResourceString, X0
	200 Move X19, X0
	201 Move X0, 0xD3A000
	202 Move X0, [X0+1456]
	203 Call 0x1C17D08
	204 Call 0x1C17F10
	205 Move X1, X19
	206 Move X2, X31
	207 Move X20, X0
	208 Call InvalidOperationException..ctor, X0, X1
	209 Move X0, 0xD3A000
	210 Move X0, [X0+2512]
	211 Call 0x1C17D08
	212 Move W1, 2
	213 Call 0x1C17D6C
	214 Move X19, X0
	215 Move X0, X21
	216 Call 0x19913C0
	217 Move X8, [X21]
	218 Move X0, X21
	219 Move X9, [X8+360]
	220 Move X1, [X8+368]
	221 NotImplemented "Instruction BLR not yet implemented."
	222 Move X20, X0
	223 Move X0, X19
	224 Call 0x19913C0
	225 Move X0, X19
	226 Move X1, X20
	227 Call 0x19990B4
	228 Move X0, X19
	229 Move X1, X31
	230 Move X2, X20
	231 Call 0x1994444
	232 Move X0, X22
	233 Call 0x19913C0
	234 Move X8, [X22]
	235 Move X0, X22
	236 Move X9, [X8+360]
	237 Move X1, [X8+368]
	238 NotImplemented "Instruction BLR not yet implemented."
	239 Move X20, X0
	240 Move X0, X19
	241 Call 0x19913C0
	242 Move X0, X19
	243 Move X1, X20
	244 Call 0x19990B4
	245 Move W1, 1
	246 Move X0, X19
	247 Move X2, X20
	248 Call 0x1994444
	249 Move X0, 0xD72000
	250 Move X0, [X0+984]
	251 Call 0x1C17D08
	252 Move X1, X19
	253 Move X0, 0xD3A000
	254 Move X0, [X0+2512]
	255 Call 0x1C17D08
	256 Move W1, 2
	257 Call 0x1C17D6C
	258 Move X20, X0
	259 Move X0, X21
	260 Call 0x19913C0
	261 Move X8, [X21]
	262 Move X0, X21
	263 Move X9, [X8+360]
	264 Move X1, [X8+368]
	265 NotImplemented "Instruction BLR not yet implemented."
	266 Move X21, X0
	267 Move X0, X20
	268 Call 0x19913C0
	269 Move X0, X20
	270 Move X1, X21
	271 Call 0x19990B4
	272 Move X0, X20
	273 Move X1, X31
	274 Move X2, X21
	275 Call 0x1994444
	276 Move X8, [X19]
	277 Move X0, X19
	278 Move X9, [X8+360]
	279 Move X1, [X8+368]
	280 NotImplemented "Instruction BLR not yet implemented."
	281 Move X19, X0
	282 Move X0, X20
	283 Call 0x19913C0
	284 Move X0, X20
	285 Move X1, X19
	286 Call 0x19990B4
	287 Move W1, 1
	288 Move X0, X20
	289 Move X2, X19
	290 Call 0x1994444
	291 Move X0, 0xD72000
	292 Move X0, [X0+992]
	293 Move X0, 0xD3A000
	294 Move X0, [X0+2512]
	295 Call 0x1C17D08
	296 Move W1, 2
	297 Call 0x1C17D6C
	298 Move X20, X0
	299 Move X0, X21
	300 Call 0x19913C0
	301 Move X8, [X21]
	302 Move X0, X21
	303 Move X9, [X8+360]
	304 Move X1, [X8+368]
	305 NotImplemented "Instruction BLR not yet implemented."
	306 Move X21, X0
	307 Move X0, X20
	308 Call 0x19913C0
	309 Move X0, X20
	310 Move X1, X21
	311 Call 0x19990B4
	312 Move X0, X20
	313 Move X1, X31
	314 Move X2, X21
	315 Call 0x1994444
	316 Move X8, [X19]
	317 Move X0, X19
	318 Move X9, [X8+2184]
	319 Move X1, [X8+2192]
	320 NotImplemented "Instruction BLR not yet implemented."
	321 Move X19, X0
	322 Move X0, X20
	323 Call 0x19913C0
	324 Move X0, X20
	325 Move X1, X19
	326 Call 0x19990B4
	327 Move W1, 1
	328 Move X0, X20
	329 Move X2, X19
	330 Call 0x1994444
	331 Move X0, 0xD72000
	332 Move X0, [X0+984]
	333 Call 0x1C17D08
	334 Move X1, X20
	335 Move X2, X31
	336 Call Environment.GetResourceString, X0, X1
	337 Move X19, X0
	338 Move X0, 0xD42000
	339 Move X0, [X0+1400]
	340 Call 0x1C17D08
	341 Call 0x1C17F10
	342 Move X1, X19
	343 Move X2, X31
	344 Move X20, X0
	345 Call ArgumentException..ctor, X0, X1
	346 Move X0, 0xD73000
	347 Move X0, [X0+544]
	348 Call 0x1C17D08
	349 Move X1, X0
	350 Move X0, X20
	351 Call 0x1C17DEC

Method: System.String GetEnumName(System.Object value)

Disassembly:
	0x033BA310 LDR X8, [X8 + 0xAB0]
	0x033BA314 LDR X0, [X8]
	0x033BA318 BL 0x1C16F10
	0x033BA31C ADRP X8, 0xD72000
	0x033BA320 LDR W1, [X24 + 0x18]
	0x033BA324 LDR X8, [X8 + 0x270]
	0x033BA328 MOV X19, X0
	0x033BA32C LDR X2, [X8]
	0x033BA330 BL 0x301B830
	0x033BA334 CBZ X19, 0x33BAA2C
	0x033BA338 ADRP X9, 0xD6A000
	0x033BA33C LDR W10, [X19 + 0x1C]
	0x033BA340 LDR X8, [X19 + 0x10]
	0x033BA344 LDR X9, [X9 + 0xA98]
	0x033BA348 ADD W10, W10, 0x1
	0x033BA34C LDR X9, [X9]
	0x033BA350 STR W10, [X19 + 0x1C]
	0x033BA354 CBZ X8, 0x33BAA2C
	0x033BA358 LDRSW X10, [X19 + 0x18]
	0x033BA35C LDR W11, [X8 + 0x18]
	0x033BA360 CMP W10, W11
	0x033BA364 B.CS 0x33BA37C
	0x033BA368 ADD W9, W10, 0x1
	0x033BA36C ADD X8, X8, X10, 0x3, LSL
	0x033BA370 STR W9, [X19 + 0x18]
	0x033BA374 STR X20, [X8 + 0x20]
	0x033BA378 B 0x33BA394
	0x033BA37C LDR X8, [X9 + 0x20]
	0x033BA380 MOV X0, X19
	0x033BA384 MOV X1, X20
	0x033BA388 LDR X8, [X8 + 0xC0]
	0x033BA38C LDR X2, [X8 + 0x70]
	0x033BA390 BL 0x301BF90
	0x033BA394 ADRP X9, 0xD6A000
	0x033BA398 LDR W10, [X19 + 0x1C]
	0x033BA39C LDR X8, [X19 + 0x10]
	0x033BA3A0 LDR X9, [X9 + 0xA98]
	0x033BA3A4 ADD W10, W10, 0x1
	0x033BA3A8 LDR X9, [X9]
	0x033BA3AC STR W10, [X19 + 0x1C]
	0x033BA3B0 CBZ X8, 0x33BAA2C
	0x033BA3B4 LDRSW X10, [X19 + 0x18]
	0x033BA3B8 LDR W11, [X8 + 0x18]
	0x033BA3BC CMP W10, W11
	0x033BA3C0 B.CS 0x33BA3D8
	0x033BA3C4 ADD W9, W10, 0x1
	0x033BA3C8 ADD X8, X8, X10, 0x3, LSL
	0x033BA3CC STR W9, [X19 + 0x18]
	0x033BA3D0 STR X28, [X8 + 0x20]
	0x033BA3D4 B 0x33BA3F0
	0x033BA3D8 LDR X8, [X9 + 0x20]
	0x033BA3DC MOV X0, X19
	0x033BA3E0 MOV X1, X28
	0x033BA3E4 LDR X8, [X8 + 0xC0]
	0x033BA3E8 LDR X2, [X8 + 0x70]
	0x033BA3EC BL 0x301BF90
	0x033BA3F0 LDR W8, [X24 + 0x18]
	0x033BA3F4 ADD X23, X23, 0x1
	0x033BA3F8 CMP X23, W8, SXTW
	0x033BA3FC B.LT 0x33BA264
	0x033BA400 CBZ X19, 0x33BA48C
	0x033BA404 ADRP X8, 0xD6C000
	0x033BA408 LDR W1, [X19 + 0x18]
	0x033BA40C LDR X8, [X8 + 0x1C8]
	0x033BA410 LDR X0, [X8]
	0x033BA414 BL 0x1C16D6C
	0x033BA418 ADRP X8, 0xD72000
	0x033BA41C LDR X8, [X8 + 0x268]
	0x033BA420 MOV X28, X0
	0x033BA424 MOV X0, X19
	0x033BA428 MOV X1, X28
	0x033BA42C LDR X2, [X8]
	0x033BA430 BL 0x301C43C
	0x033BA434 B 0x33BA490
	0x033BA438 CBNZ W24, 0x33BA9B0
	0x033BA43C LDR W8, [X31 + 0x4C]
	0x033BA440 CMP W8, 0x1
	0x033BA444 B.NE 0x33BAC24
	0x033BA448 CBZ X28, 0x33BAA2C
	0x033BA44C LDR W8, [X28 + 0x18]
	0x033BA450 CBZ W8, 0x33BAA30
	0x033BA454 LDR X8, [X29]
	0x033BA458 LDR X2, [X28 + 0x20]
	0x033BA45C MOV X0, X29
	0x033BA460 MOV X1, X27
	0x033BA464 LDR X9, [X8 + 0x2E8]
	0x033BA468 LDR X6, [X8 + 0x2F0]
	0x033BA46C MOV W3, W25
	0x033BA470 MOV X4, X22
	0x033BA474 MOV X5, X21
	0x033BA478 BLR X9
	0x033BA47C B 0x33BAA04
	0x033BA480 MOV X20, X31
	0x033BA484 MOV X19, X31
	0x033BA488 CBNZ X19, 0x33BA404
	0x033BA48C MOV X28, X31
	0x033BA490 LDR X27, [X31 + 0x38]
	0x033BA494 LDR X23, [X31 + 0x10]
	0x033BA498 LDR W21, [X31 + 0xC]
	0x033BA49C MOV X0, X20
	0x033BA4A0 MOV X1, X31
	0x033BA4A4 MOV X2, X31
	0x033BA4A8 UBFM W19, W25, 0xD, 0xD
	0x033BA4AC BL 0x32C2354
	0x033BA4B0 AND W8, W0, W21, 0x0
	0x033BA4B4 ORR W8, W8, W19, 0x0
	0x033BA4B8 CBZ W8, 0x33BA740
	0x033BA4BC LDR X0, [X31 + 0x40]
	0x033BA4C0 MOVZ W2, 0x10
	0x033BA4C4 MOV X1, X23
	0x033BA4C8 MOV W3, W25
	0x033BA4CC LDR X8, [X0]
	0x033BA4D0 LDR X9, [X8 + 0x6B8]
	0x033BA4D4 LDR X4, [X8 + 0x6C0]
	0x033BA4D8 BLR X9
	0x033BA4DC ADRP X8, 0xD6C000
	0x033BA4E0 LDR X8, [X8 + 0x1D0]
	0x033BA4E4 LDR X1, [X8]
	0x033BA4E8 BL 0x1C16E00
	0x033BA4EC CBZ X0, 0x33BAA2C
	0x033BA4F0 LDR W8, [X0 + 0x18]
	0x033BA4F4 MOV X24, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x1024000
	008 Move W8, [X21+483]
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0xD72000
	016 Move X0, [X0+1000]
	017 Call 0x1C17CF4
	018 Move X0, 0xD3A000
	019 Move X0, [X0+3576]
	020 Call 0x1C17CF4
	021 Move X0, 0xD3A000
	022 Move X0, [X0+1728]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+483], W8
	026 Compare X20, 0
	027 JumpIfEqual {101}
	028 Move X0, X20
	029 Move X1, X31
	030 Call "il2cpp_vm_object_is_inst", X0
	031 Compare X0, 0
	032 JumpIfEqual {100}
	033 Move X8, [X0]
	034 Move X21, X0
	035 Move X9, [X8+1416]
	036 Move X1, [X8+1424]
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {56}
	042 Move X8, 0xD3A000
	043 Move X8, [X8+1728]
	044 Move X0, [X8]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Move X0, X21
	050 Move X1, X31
	051 Call Type.IsIntegerType, X0
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {120}
	056 Move X22, 0xD3A000
	057 Move X22, [X22+3576]
	058 Move X23, 0xD72000
	059 Move X0, [X22]
	060 Move W8, [X0+224]
	061 Move X23, [X23+1000]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Move X0, X19
	066 Call Enum.InternalGetValues, X0
	067 Move X21, X0
	068 Move X0, X20
	069 Call Enum.ToUInt64, X0
	070 Move X2, [X23]
	071 Move X1, X0
	072 Move X0, X21
	073 Call 0x22CAA48, X0, X1
	074 Move TEMP, X0
	075 And TEMP, TEMP, -2147483648
	076 Compare TEMP, -2147483648
	077 JumpIfEqual {92}
	078 Move W20, W0
	079 Move X0, [X22]
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Move X0, X19
	085 Call Enum.InternalGetNames, X0
	086 Compare X0, 0
	087 JumpIfEqual {100}
	088 Move W8, [X0+24]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Add X8, X0, W20
	091 Move X0, [X8+32]
	092 Move X0, X31
	093 Move X20, [X31+32]
	094 Move X19, [X31+40]
	095 Move X22, [X31+16]
	096 Move X21, [X31+24]
	097 Move X30, [X31+48]
	098 Move X23, [X31+56]
	099 Return X0
	100 Call 0x1C17F20
	101 Move X0, 0xD3F000
	102 Move X0, [X0+1320]
	103 Call 0x1C17D08
	104 Call 0x1C17F10
	105 Move X19, X0
	106 Move X0, 0xD44000
	107 Move X0, [X0+3784]
	108 Call 0x1C17D08
	109 Move X1, X0
	110 Move X0, X19
	111 Move X2, X31
	112 Call ArgumentNullException..ctor, X0, X1
	113 Move X0, 0xD73000
	114 Move X0, [X0+552]
	115 Call 0x1C17D08
	116 Move X1, X0
	117 Move X0, X19
	118 Call 0x1C17DEC
	119 Call 0x1C17F28
	120 Move X0, 0xD72000
	121 Move X0, [X0+1008]
	122 Call 0x1C17D08
	123 Move X1, X31
	124 Call Environment.GetResourceString, X0
	125 Move X19, X0
	126 Move X0, 0xD42000
	127 Move X0, [X0+1400]
	128 Call 0x1C17D08
	129 Call 0x1C17F10
	130 Move X20, X0
	131 Move X0, 0xD44000
	132 Move X0, [X0+3784]
	133 Call 0x1C17D08
	134 Move X2, X0
	135 Move X0, X20
	136 Move X1, X19
	137 Move X3, X31
	138 Call ArgumentException..ctor, X0, X1, X2
	139 Move X0, 0xD73000
	140 Move X0, [X0+552]
	141 Call 0x1C17D08
	142 Move X1, X0
	143 Move X0, X20
	144 Call 0x1C17DEC

Method: System.RuntimeType[] GetGenericArgumentsInternal()

Disassembly:
	0x033BA4F8 MOV X27, X23
	0x033BA4FC STR X28, [X31 + 0x10]
	0x033BA500 CMP W8, 0x1
	0x033BA504 B.LT 0x33BA748
	0x033BA508 ADRP X23, 0xD41000
	0x033BA50C ADRP X29, 0xD62000
	0x033BA510 LDR X23, [X23 + 0xC60]
	0x033BA514 LDR X29, [X29 + 0x4E8]
	0x033BA518 MOV W21, W31
	0x033BA51C MOV X19, X31
	0x033BA520 CMP W21, W8
	0x033BA524 B.CS 0x33BAA30
	0x033BA528 ADD X8, X24, W21, 0x3, SXTW
	0x033BA52C LDR X0, [X8 + 0x20]
	0x033BA530 CBZ X0, 0x33BAA2C
	0x033BA534 LDR X8, [X0]
	0x033BA538 CBNZ W26, 0x33BA548
	0x033BA53C LDR X9, [X8 + 0x298]
	0x033BA540 LDR X2, [X8 + 0x2A0]
	0x033BA544 B 0x33BA550
	0x033BA548 LDR X9, [X8 + 0x2B8]
	0x033BA54C LDR X2, [X8 + 0x2C0]
	0x033BA550 MOVZ W1, 0x1
	0x033BA554 BLR X9
	0x033BA558 MOV X1, X31
	0x033BA55C MOV X2, X31
	0x033BA560 MOV X28, X0
	0x033BA564 BL 0x32C2354

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1024000
	005 Move W8, [X20+484]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xD6B000
	012 Move X0, [X0+3024]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+484], W8
	016 Move W1, 1
	017 Move X0, X19
	018 Call 0x1C3E2C4
	019 Compare X0, 0
	020 JumpIfEqual {29}
	021 Move X8, 0xD6B000
	022 Move X8, [X8+3024]
	023 Move X19, X0
	024 Move X20, [X8]
	025 Move X1, X20
	026 Call 0x1C17E00
	027 Compare X0, 0
	028 JumpIfEqual {33}
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Return X0
	033 Move X0, X19
	034 Move X1, X20
	035 Call 0x1C181E0

Method: System.Type[] GetGenericArguments()

Disassembly:
	0x033BA570 LDR W1, [X31 + 0x4C]
	0x033BA574 BL 0x1C16D6C
	0x033BA578 LDR X8, [X29]
	0x033BA57C MOV X22, X0
	0x033BA580 LDR W9, [X8 + 0xE0]
	0x033BA584 CBZ W9, 0x33BA590
	0x033BA588 CBNZ X28, 0x33BA59C
	0x033BA58C B 0x33BA5D0
	0x033BA590 MOV X0, X8
	0x033BA594 BL 0x1C16DFC
	0x033BA598 CBZ X28, 0x33BA5D0
	0x033BA59C ADRP X9, 0xD6A000
	0x033BA5A0 LDR X8, [X28]
	0x033BA5A4 LDR X9, [X9 + 0x9A0]
	0x033BA5A8 LDRB W10, [X8 + 0x130]
	0x033BA5AC LDR X1, [X9]
	0x033BA5B0 LDRB W9, [X1 + 0x130]
	0x033BA5B4 CMP W10, W9
	0x033BA5B8 B.CC 0x33BAA34
	0x033BA5BC LDR X8, [X8 + 0xC8]
	0x033BA5C0 ADD X8, X8, X9, 0x3, LSL
	0x033BA5C4 LDUR X8, [X8 - 0x8]
	0x033BA5C8 CMP X8, X1
	0x033BA5CC B.NE 0x33BAA34
	0x033BA5D0 MOVZ W2, 0x3
	0x033BA5D4 MOV X0, X28
	0x033BA5D8 MOV W1, W25
	0x033BA5DC MOV X3, X22
	0x033BA5E0 BL 0x33B4A34
	0x033BA5E4 TBZ X0, 0x0, 0x33BA6EC
	0x033BA5E8 MOV X0, X20
	0x033BA5EC MOV X1, X31
	0x033BA5F0 MOV X2, X31
	0x033BA5F4 BL 0x32C2354
	0x033BA5F8 TBZ X0, 0x0, 0x33BA604
	0x033BA5FC MOV X20, X28
	0x033BA600 B 0x33BA6EC
	0x033BA604 CBNZ X19, 0x33BA690
	0x033BA608 ADRP X8, 0xD6A000
	0x033BA60C LDR X8, [X8 + 0xAB0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1024000
	005 Move W8, [X20+485]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xD64000
	012 Move X0, [X0+2416]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+485], W8
	016 Move X0, X19
	017 Move W1, W31
	018 Call 0x1C3E2C4
	019 Compare X0, 0
	020 JumpIfNotEqual {51}
	021 Move X8, 0xD64000
	022 Move X8, [X8+2416]
	023 Move X19, [X8]
	024 Move X8, [X19+56]
	025 Compare X8, 0
	026 JumpIfNotEqual {30}
	027 Move X0, X19
	028 Call 0x1C5D6E0
	029 Move X8, [X19+56]
	030 Move X0, [X8+16]
	031 Move W8, [X0+309]
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {37}
	036 Call 0x1C5D684
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X8, [X19+56]
	042 Move X0, [X8+16]
	043 Move W8, [X0+309]
	044 Move TEMP, X8
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {49}
	048 Call 0x1C5D684
	049 Move X8, [X0+184]
	050 Move X0, [X8]
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 Return X0

Method: System.Type MakeGenericType(System.Type[] instantiation)

Disassembly:
	0x033BA610 LDR X0, [X8]
	0x033BA614 BL 0x1C16F10
	0x033BA618 ADRP X8, 0xD72000
	0x033BA61C LDR W1, [X24 + 0x18]
	0x033BA620 LDR X8, [X8 + 0x270]
	0x033BA624 MOV X19, X0
	0x033BA628 LDR X2, [X8]
	0x033BA62C BL 0x301B830
	0x033BA630 CBZ X19, 0x33BAA2C
	0x033BA634 ADRP X9, 0xD6A000
	0x033BA638 LDR W10, [X19 + 0x1C]
	0x033BA63C LDR X8, [X19 + 0x10]
	0x033BA640 LDR X9, [X9 + 0xA98]
	0x033BA644 ADD W10, W10, 0x1
	0x033BA648 LDR X9, [X9]
	0x033BA64C STR W10, [X19 + 0x1C]
	0x033BA650 CBZ X8, 0x33BAA2C
	0x033BA654 LDRSW X10, [X19 + 0x18]
	0x033BA658 LDR W11, [X8 + 0x18]
	0x033BA65C CMP W10, W11
	0x033BA660 B.CS 0x33BA678
	0x033BA664 ADD W9, W10, 0x1
	0x033BA668 ADD X8, X8, X10, 0x3, LSL
	0x033BA66C STR W9, [X19 + 0x18]
	0x033BA670 STR X20, [X8 + 0x20]
	0x033BA674 B 0x33BA690
	0x033BA678 LDR X8, [X9 + 0x20]
	0x033BA67C MOV X0, X19
	0x033BA680 MOV X1, X20
	0x033BA684 LDR X8, [X8 + 0xC0]
	0x033BA688 LDR X2, [X8 + 0x70]
	0x033BA68C BL 0x301BF90
	0x033BA690 ADRP X9, 0xD6A000
	0x033BA694 LDR W10, [X19 + 0x1C]
	0x033BA698 LDR X8, [X19 + 0x10]
	0x033BA69C LDR X9, [X9 + 0xA98]
	0x033BA6A0 ADD W10, W10, 0x1
	0x033BA6A4 LDR X9, [X9]
	0x033BA6A8 STR W10, [X19 + 0x1C]
	0x033BA6AC CBZ X8, 0x33BAA2C
	0x033BA6B0 LDRSW X10, [X19 + 0x18]
	0x033BA6B4 LDR W11, [X8 + 0x18]
	0x033BA6B8 CMP W10, W11
	0x033BA6BC B.CS 0x33BA6D4
	0x033BA6C0 ADD W9, W10, 0x1
	0x033BA6C4 ADD X8, X8, X10, 0x3, LSL
	0x033BA6C8 STR W9, [X19 + 0x18]
	0x033BA6CC STR X28, [X8 + 0x20]
	0x033BA6D0 B 0x33BA6EC
	0x033BA6D4 LDR X8, [X9 + 0x20]
	0x033BA6D8 MOV X0, X19
	0x033BA6DC MOV X1, X28
	0x033BA6E0 LDR X8, [X8 + 0xC0]
	0x033BA6E4 LDR X2, [X8 + 0x70]
	0x033BA6E8 BL 0x301BF90
	0x033BA6EC LDR W8, [X24 + 0x18]
	0x033BA6F0 ADD W21, W21, 0x1
	0x033BA6F4 CMP W21, W8
	0x033BA6F8 B.LT 0x33BA520
	0x033BA6FC CBZ X19, 0x33BA750
	0x033BA700 ADRP X8, 0xD6C000
	0x033BA704 LDR W1, [X19 + 0x18]
	0x033BA708 LDR X8, [X8 + 0x1C8]
	0x033BA70C LDR X0, [X8]
	0x033BA710 BL 0x1C16D6C
	0x033BA714 ADRP X8, 0xD72000
	0x033BA718 LDR X8, [X8 + 0x268]
	0x033BA71C MOV X28, X0
	0x033BA720 MOV X0, X19
	0x033BA724 MOV X1, X28
	0x033BA728 LDR X2, [X8]
	0x033BA72C BL 0x301C43C
	0x033BA730 LDP X22, X21, [X31 + 0x18]
	0x033BA734 MOV X23, X27
	0x033BA738 LDR X27, [X31 + 0x38]
	0x033BA73C B 0x33BA760
	0x033BA740 LDP X22, X21, [X31 + 0x18]
	0x033BA744 B 0x33BA760
	0x033BA748 MOV X19, X31
	0x033BA74C CBNZ X19, 0x33BA700
	0x033BA750 LDP X22, X21, [X31 + 0x18]
	0x033BA754 MOV X23, X27
	0x033BA758 LDR X27, [X31 + 0x38]
	0x033BA75C LDR X28, [X31 + 0x10]
	0x033BA760 MOV X0, X20
	0x033BA764 MOV X1, X31
	0x033BA768 MOV X2, X31
	0x033BA76C BL 0x32CE528
	0x033BA770 TBZ X0, 0x0, 0x33BAAAC
	0x033BA774 LDR W8, [X31 + 0x4C]
	0x033BA778 CBNZ W8, 0x33BA7D4
	0x033BA77C CBNZ X28, 0x33BA7D4
	0x033BA780 CBZ X20, 0x33BAA2C
	0x033BA784 LDR X8, [X20]
	0x033BA788 MOV X0, X20
	0x033BA78C LDR X9, [X8 + 0x398]
	0x033BA790 LDR X1, [X8 + 0x3A0]
	0x033BA794 BLR X9
	0x033BA798 CBZ X0, 0x33BAA2C
	0x033BA79C TBNZ X25, 0x12, 0x33BA7D4
	0x033BA7A0 LDR X8, [X0 + 0x18]
	0x033BA7A4 CBNZ X8, 0x33BA7D4
	0x033BA7A8 LDR X8, [X20]
	0x033BA7AC LDR X4, [X31 + 0x58]
	0x033BA7B0 MOV X0, X20
	0x033BA7B4 MOV X1, X27
	0x033BA7B8 LDR X9, [X8 + 0x328]
	0x033BA7BC LDR X6, [X8 + 0x330]
	0x033BA7C0 MOV W2, W25
	0x033BA7C4 MOV X3, X22
	0x033BA7C8 MOV X5, X21
	0x033BA7CC BLR X9
	0x033BA7D0 B 0x33B9F10
	0x033BA7D4 CBNZ X28, 0x33BA818
	0x033BA7D8 ADRP X8, 0xD6C000
	0x033BA7DC LDR X8, [X8 + 0x1C8]
	0x033BA7E0 MOVZ W1, 0x1
	0x033BA7E4 LDR X0, [X8]
	0x033BA7E8 BL 0x1C16D6C
	0x033BA7EC CBZ X0, 0x33BAA2C
	0x033BA7F0 MOV X28, X0
	0x033BA7F4 CBZ X20, 0x33BA80C
	0x033BA7F8 LDR X8, [X28]
	0x033BA7FC MOV X0, X20
	0x033BA800 LDR X1, [X8 + 0x40]
	0x033BA804 BL 0x1C16E00
	0x033BA808 CBZ X0, 0x33BAC18
	0x033BA80C LDR W8, [X28 + 0x18]
	0x033BA810 CBZ W8, 0x33BAA30
	0x033BA814 STR X20, [X28 + 0x20]
	0x033BA818 LDR X8, [X31 + 0x58]
	0x033BA81C CBNZ X8, 0x33BA87C
	0x033BA820 ADRP X8, 0xD39000
	0x033BA824 LDR X8, [X8 + 0x9C8]
	0x033BA828 LDR X19, [X8]
	0x033BA82C LDR X8, [X19 + 0x38]
	0x033BA830 CBNZ X8, 0x33BA840
	0x033BA834 MOV X0, X19
	0x033BA838 BL 0x1C5C6E0
	0x033BA83C LDR X8, [X19 + 0x38]
	0x033BA840 LDR X0, [X8 + 0x10]
	0x033BA844 LDRB W8, [X0 + 0x135]
	0x033BA848 TBNZ X8, 0x0, 0x33BA850
	0x033BA84C BL 0x1C5C684
	0x033BA850 LDR W8, [X0 + 0xE0]
	0x033BA854 CBNZ W8, 0x33BA85C
	0x033BA858 BL 0x1C16DFC
	0x033BA85C LDR X8, [X19 + 0x38]
	0x033BA860 LDR X0, [X8 + 0x10]
	0x033BA864 LDRB W8, [X0 + 0x135]
	0x033BA868 TBNZ X8, 0x0, 0x33BA870
	0x033BA86C BL 0x1C5C684
	0x033BA870 LDR X8, [X0 + 0xB8]
	0x033BA874 LDR X8, [X8]
	0x033BA878 STR X8, [X31 + 0x58]
	0x033BA87C STR X31, [X31 + 0x50]
	0x033BA880 CBZ X22, 0x33BAB58
	0x033BA884 LDR X8, [X22]
	0x033BA888 LDP X9, X8, [X8 + 0x188]
	0x033BA88C LDP X6, X4, [X31 + 0x28]
	0x033BA890 ADD X3, X31, 0x58
	0x033BA894 ADD X7, X31, 0x50
	0x033BA898 MOV X0, X22
	0x033BA89C MOV W1, W25
	0x033BA8A0 MOV X2, X28
	0x033BA8A4 MOV X5, X21
	0x033BA8A8 STR X8, [X31]
	0x033BA8AC BLR X9
	0x033BA8B0 MOV X19, X0
	0x033BA8B4 MOV X0, X19
	0x033BA8B8 MOV X1, X31
	0x033BA8BC MOV X2, X31
	0x033BA8C0 BL 0x32CE12C
	0x033BA8C4 TBNZ X0, 0x0, 0x33BAAAC
	0x033BA8C8 CBZ X19, 0x33BAA2C
	0x033BA8CC ADRP X9, 0xD6A000
	0x033BA8D0 LDR X9, [X9 + 0x278]
	0x033BA8D4 LDR X8, [X19]
	0x033BA8D8 LDR X1, [X9]
	0x033BA8DC LDRB W10, [X8 + 0x130]
	0x033BA8E0 LDRB W9, [X1 + 0x130]
	0x033BA8E4 CMP W10, W9
	0x033BA8E8 B.CC 0x33BAB24
	0x033BA8EC LDR X10, [X8 + 0xC8]
	0x033BA8F0 ADD X9, X10, X9, 0x3, LSL
	0x033BA8F4 LDUR X9, [X9 - 0x8]
	0x033BA8F8 CMP X9, X1
	0x033BA8FC B.NE 0x33BAB24
	0x033BA900 LDR X4, [X31 + 0x58]
	0x033BA904 LDR X9, [X8 + 0x328]
	0x033BA908 LDR X6, [X8 + 0x330]
	0x033BA90C MOV X0, X19
	0x033BA910 MOV X1, X27
	0x033BA914 MOV W2, W25
	0x033BA918 MOV X3, X22
	0x033BA91C MOV X5, X21
	0x033BA920 BLR X9
	0x033BA924 LDR X2, [X31 + 0x50]
	0x033BA928 MOV X19, X0
	0x033BA92C CBZ X2, 0x33BAA08
	0x033BA930 CBZ X22, 0x33BAA2C
	0x033BA934 LDR X8, [X22]
	0x033BA938 ADD X1, X31, 0x58
	0x033BA93C MOV X0, X22
	0x033BA940 LDP X9, X3, [X8 + 0x1A8]
	0x033BA944 BLR X9
	0x033BA948 B 0x33BAA08
	0x033BA94C LDR X8, [X29]
	0x033BA950 MOV X0, X29
	0x033BA954 MOV X1, X27
	0x033BA958 LDR X9, [X8 + 0x2C8]
	0x033BA95C LDR X2, [X8 + 0x2D0]
	0x033BA960 BLR X9
	0x033BA964 CBZ X0, 0x33BA9D4
	0x033BA968 ADRP X9, 0xD39000
	0x033BA96C LDR X9, [X9 + 0xEF0]
	0x033BA970 LDR X8, [X0]
	0x033BA974 LDR X1, [X9]
	0x033BA978 LDRB W10, [X8 + 0x130]
	0x033BA97C LDRB W9, [X1 + 0x130]
	0x033BA980 CMP W10, W9
	0x033BA984 B.CC 0x33BAC14
	0x033BA988 LDR X8, [X8 + 0xC8]
	0x033BA98C ADD X8, X8, X9, 0x3, LSL
	0x033BA990 LDUR X8, [X8 - 0x8]
	0x033BA994 CMP X8, X1
	0x033BA998 B.NE 0x33BAC14
	0x033BA99C CBZ W24, 0x33BA9D8
	0x033BA9A0 MOV X1, X20
	0x033BA9A4 MOV X2, X31
	0x033BA9A8 BL 0x33A137C
	0x033BA9AC B 0x33B9F10
	0x033BA9B0 LDR W8, [X31 + 0x4C]
	0x033BA9B4 CBNZ W8, 0x33BAC30
	0x033BA9B8 LDR X8, [X29]
	0x033BA9BC MOV X0, X29
	0x033BA9C0 MOV X1, X27
	0x033BA9C4 LDR X9, [X8 + 0x2C8]
	0x033BA9C8 LDR X2, [X8 + 0x2D0]
	0x033BA9CC BLR X9
	0x033BA9D0 B 0x33B9F10
	0x033BA9D4 CBNZ W24, 0x33BAA2C
	0x033BA9D8 LDR X8, [X31 + 0x58]
	0x033BA9DC CBZ X8, 0x33BAA2C
	0x033BA9E0 LDR W9, [X8 + 0x18]
	0x033BA9E4 CMP W19, W9
	0x033BA9E8 B.CS 0x33BAA30
	0x033BA9EC CBZ X0, 0x33BAA2C
	0x033BA9F0 ADD X8, X8, W19, 0x3, SXTW
	0x033BA9F4 LDR X1, [X8 + 0x20]
	0x033BA9F8 MOV X2, X20
	0x033BA9FC MOV X3, X31
	0x033BAA00 BL 0x33A2280
	0x033BAA04 MOV X19, X31
	0x033BAA08 MOV X0, X19
	0x033BAA0C LDP X20, X19, [X31 + 0xB0]
	0x033BAA10 LDP X22, X21, [X31 + 0xA0]
	0x033BAA14 LDP X24, X23, [X31 + 0x90]
	0x033BAA18 LDP X26, X25, [X31 + 0x80]
	0x033BAA1C LDP X28, X27, [X31 + 0x70]
	0x033BAA20 LDP X29, X30, [X31 + 0x60]
	0x033BAA24 ADD X31, X31, 0xC0
	0x033BAA28 RET
	0x033BAA2C BL 0x1C16F20
	0x033BAA30 BL 0x1C16F28
	0x033BAA34 MOV X0, X28
	0x033BAA38 BL 0x1C171E0
	0x033BAA3C BL 0x1C16F28
	0x033BAA40 BL 0x1C16F20
	0x033BAA44 BL 0x1C16F20
	0x033BAA48 MOV X0, X23
	0x033BAA4C MOV X1, X21
	0x033BAA50 BL 0x1C171E0
	0x033BAA54 MOV X0, X23
	0x033BAA58 MOV X1, X22
	0x033BAA5C BL 0x1C171E0
	0x033BAA60 BL 0x1C16F28
	0x033BAA64 ADRP X0, 0xD72000
	0x033BAA68 LDR X0, [X0 + 0x2A8]
	0x033BAA6C BL 0x1C16D08
	0x033BAA70 MOV X1, X31
	0x033BAA74 BL 0x33BDD84
	0x033BAA78 MOV X19, X0
	0x033BAA7C ADRP X0, 0xD39000
	0x033BAA80 LDR X0, [X0 + 0x5B0]
	0x033BAA84 BL 0x1C16D08
	0x033BAA88 BL 0x1C16F10
	0x033BAA8C MOV X1, X19
	0x033BAA90 MOV X2, X31
	0x033BAA94 MOV X20, X0
	0x033BAA98 BL 0x337DF1C
	0x033BAA9C B 0x33BAD78
	0x033BAAA0 ADRP X0, 0xD72000
	0x033BAAA4 LDR X0, [X0 + 0x2B0]
	0x033BAAA8 B 0x33BAC38
	0x033BAAAC LDR X0, [X31 + 0x40]
	0x033BAAB0 LDR X8, [X0]
	0x033BAAB4 LDR X9, [X8 + 0x2E8]
	0x033BAAB8 LDR X1, [X8 + 0x2F0]
	0x033BAABC BLR X9
	0x033BAAC0 MOV X19, X0
	0x033BAAC4 ADRP X0, 0xD62000
	0x033BAAC8 LDR X0, [X0 + 0x28]
	0x033BAACC BL 0x1C16D08
	0x033BAAD0 BL 0x1C16F10
	0x033BAAD4 MOV X1, X19
	0x033BAAD8 MOV X2, X23
	0x033BAADC MOV X3, X31

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X21, 0x1024000
	012 Move W8, [X21+486]
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {33}
	019 Move X0, 0xD6B000
	020 Move X0, [X0+3024]
	021 Call 0x1C17CF4
	022 Move X0, 0xD63000
	023 Move X0, [X0+1256]
	024 Call 0x1C17CF4
	025 Move X0, 0xD42000
	026 Move X0, [X0+3168]
	027 Call 0x1C17CF4
	028 Move X0, 0xD3A000
	029 Move X0, [X0+1728]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+486], W8
	033 Compare X20, 0
	034 JumpIfEqual {270}
	035 Move X8, 0xD6B000
	036 Move X8, [X8+3024]
	037 Move W1, [X20+24]
	038 Move X0, [X8]
	039 Call 0x1C17D6C
	040 Move X8, [X19]
	041 Move X21, X0
	042 Move X0, X19
	043 Move X9, [X8+984]
	044 Move X1, [X8+992]
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {282}
	050 Move X8, [X19]
	051 Move X0, X19
	052 Move X9, [X8+1128]
	053 Move X1, [X8+1136]
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Compare X0, 0
	056 JumpIfEqual {253}
	057 Move X8, [X0+24]
	058 Move W9, [X20+24]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X24, 0xD63000
	061 Move X25, 0xD3A000
	062 Move X24, [X24+1256]
	063 Move X25, [X25+1728]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 And X8, X8, 0
	066 Move W26, 4
	067 Subtract X27, X26, 4
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X0, [X25]
	070 Move X22, [X20]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Move X0, X22
	076 Move X1, X31
	077 Move X2, X31
	078 Call Type.op_Equality, X0, X1
	079 Move TEMP, X0
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfEqual {257}
	083 Move X0, [X24]
	084 Compare X22, 0
	085 JumpIfEqual {90}
	086 Move X8, [X22]
	087 Move W9, [X0+304]
	088 Move W10, [X8+304]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X23, X31
	091 Move X8, [X8+200]
	092 Add X8, X8, X9
	093 NotImplemented "Instruction LDUR not yet implemented."
	094 NotImplemented "Instruction CMP not yet implemented."
	095 NotImplemented "Instruction CSEL not yet implemented."
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {100}
	099 Call 0x1C17DFC
	100 Compare X23, 0
	101 JumpIfEqual {159}
	102 Compare X21, 0
	103 JumpIfEqual {253}
	104 Move X8, [X21]
	105 Move X0, X23
	106 Move X1, [X8+64]
	107 Call 0x1C17E00
	108 Compare X0, 0
	109 JumpIfEqual {254}
	110 Move W8, [X21+24]
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move [X21], X23
	113 Move W8, [X20+24]
	114 Subtract X9, X26, 3
	115 Add X26, X26, 1
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X0, X19
	118 Call RuntimeType.GetGenericArgumentsInternal, X0
	119 Move X8, [X24]
	120 Move X20, X0
	121 Move W9, [X8+224]
	122 Compare W9, 0
	123 JumpIfNotEqual {126}
	124 Move X0, X8
	125 Call 0x1C17DFC
	126 Move X0, X21
	127 Move X1, X20
	128 Call RuntimeType.SanityCheckGenericArguments, X0, X1
	129 Move X0, X19
	130 Move X1, X21
	131 Call 0x1C3E058
	132 Move X8, [X25]
	133 Move X19, X0
	134 Move W9, [X8+224]
	135 Compare W9, 0
	136 JumpIfNotEqual {139}
	137 Move X0, X8
	138 Call 0x1C17DFC
	139 Move X0, X19
	140 Move X1, X31
	141 Move X2, X31
	142 Call Type.op_Equality, X0, X1
	143 Move TEMP, X0
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfEqual {336}
	147 Move X0, X19
	148 Move X20, [X31+64]
	149 Move X19, [X31+72]
	150 Move X22, [X31+48]
	151 Move X21, [X31+56]
	152 Move X24, [X31+32]
	153 Move X23, [X31+40]
	154 Move X26, [X31+16]
	155 Move X25, [X31+24]
	156 Move X30, [X31+80]
	157 Move X27, [X31+88]
	158 Return X0
	159 Compare X22, 0
	160 JumpIfEqual {253}
	161 Move X8, [X22]
	162 Move X0, X22
	163 Move X9, [X8+1528]
	164 Move X1, [X8+1536]
	165 NotImplemented "Instruction BLR not yet implemented."
	166 Move TEMP, X0
	167 And TEMP, TEMP, 1
	168 Compare TEMP, 1
	169 JumpIfNotEqual {190}
	170 Move X0, [X25]
	171 Move W8, [X0+224]
	172 Compare W8, 0
	173 JumpIfNotEqual {175}
	174 Call 0x1C17DFC
	175 Move X0, X19
	176 Move X1, X20
	177 Move X20, [X31+64]
	178 Move X19, [X31+72]
	179 Move X22, [X31+48]
	180 Move X21, [X31+56]
	181 Move X24, [X31+32]
	182 Move X23, [X31+40]
	183 Move X26, [X31+16]
	184 Move X25, [X31+24]
	185 Move X2, X31
	186 Move X30, [X31+80]
	187 Move X27, [X31+88]
	188 Call Type.MakeGenericSignatureType, X0, X1
	189 Return X0
	190 Move X8, 0xD42000
	191 Move X8, [X8+3168]
	192 Move W1, [X20+24]
	193 Move X0, [X8]
	194 Call 0x1C17D6C
	195 Move X8, [X20+24]
	196 Move X21, X0
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Move X23, X31
	199 And X8, X8, 0
	200 Add X25, X20, 32
	201 Add X26, X21, 32
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Compare X21, 0
	204 JumpIfEqual {253}
	205 Move X22, [X25]
	206 Compare X22, 0
	207 JumpIfEqual {214}
	208 Move X8, [X21]
	209 Move X0, X22
	210 Move X1, [X8+64]
	211 Call 0x1C17E00
	212 Compare X0, 0
	213 JumpIfEqual {254}
	214 Move W8, [X21+24]
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Move [X26], X22
	217 Move W8, [X20+24]
	218 Add X23, X23, 1
	219 NotImplemented "Instruction CMP not yet implemented."
	220 Move X0, X31
	221 Call RuntimeFeature.get_IsDynamicCodeSupported
	222 Move TEMP, X0
	223 And TEMP, TEMP, 1
	224 Compare TEMP, 1
	225 JumpIfNotEqual {343}
	226 Move X0, [X24]
	227 Move W8, [X0+224]
	228 Compare W8, 0
	229 JumpIfNotEqual {232}
	230 Call 0x1C17DFC
	231 Move X0, [X24]
	232 Move X8, [X0+184]
	233 Move X8, [X8+48]
	234 Compare X8, 0
	235 JumpIfEqual {253}
	236 Move X4, [X8+24]
	237 Move X0, [X8+64]
	238 Move X3, [X8+40]
	239 Move X1, X19
	240 Move X2, X21
	241 Move X20, [X31+64]
	242 Move X19, [X31+72]
	243 Move X22, [X31+48]
	244 Move X21, [X31+56]
	245 Move X24, [X31+32]
	246 Move X23, [X31+40]
	247 Move X26, [X31+16]
	248 Move X25, [X31+24]
	249 Move X30, [X31+80]
	250 Move X27, [X31+88]
	251 CallNoReturn X4
	252 Call 0x1C17F28
	253 Call 0x1C17F20
	254 Call 0x1C17F44
	255 Move X1, X31
	256 Call 0x1C17DEC
	257 Move X0, 0xD3F000
	258 Move X0, [X0+1320]
	259 Call 0x1C17D08
	260 Call 0x1C17F10
	261 Move X1, X31
	262 Move X19, X0
	263 Call ArgumentNullException..ctor, X0
	264 Move X0, 0xD73000
	265 Move X0, [X0+560]
	266 Call 0x1C17D08
	267 Move X1, X0
	268 Move X0, X19
	269 Call 0x1C17DEC
	270 Move X0, 0xD3F000
	271 Move X0, [X0+1320]
	272 Call 0x1C17D08
	273 Call 0x1C17F10
	274 Move X19, X0
	275 Move X0, 0xD73000
	276 Move X0, [X0+568]
	277 Call 0x1C17D08
	278 Move X1, X0
	279 Move X0, X19
	280 Move X2, X31
	281 Call ArgumentNullException..ctor, X0, X1
	282 Move X0, 0xD3A000
	283 Move X0, [X0+2512]
	284 Call 0x1C17D08
	285 Move W1, 1
	286 Call 0x1C17D6C
	287 Move X20, X0
	288 Call 0x19913C0
	289 Move X0, X20
	290 Move X1, X19
	291 Call 0x19990B4
	292 Move X0, X20
	293 Move X1, X31
	294 Move X2, X19
	295 Call 0x1994444
	296 Move X0, 0xD73000
	297 Move X0, [X0+576]
	298 Call 0x1C17D08
	299 Move X1, X20
	300 Move X2, X31
	301 Call Environment.GetResourceString, X0, X1
	302 Move X19, X0
	303 Move X0, 0xD3A000
	304 Move X0, [X0+1456]
	305 Call 0x1C17D08
	306 Call 0x1C17F10
	307 Move X1, X19
	308 Move X2, X31
	309 Move X20, X0
	310 Call InvalidOperationException..ctor, X0, X1
	311 Move X0, 0xD73000
	312 Move X0, [X0+584]
	313 Call 0x1C17D08
	314 Move X1, X31
	315 Call Environment.GetResourceString, X0
	316 Move X19, X0
	317 Move X0, 0xD42000
	318 Move X0, [X0+1400]
	319 Call 0x1C17D08
	320 Call 0x1C17F10
	321 Move X20, X0
	322 Move X0, 0xD73000
	323 Move X0, [X0+568]
	324 Call 0x1C17D08
	325 Move X2, X0
	326 Move X0, X20
	327 Move X1, X19
	328 Move X3, X31
	329 Call ArgumentException..ctor, X0, X1, X2
	330 Move X0, 0xD73000
	331 Move X0, [X0+560]
	332 Call 0x1C17D08
	333 Move X1, X0
	334 Move X0, X20
	335 Call 0x1C17DEC
	336 Move X0, 0xD6C000
	337 Move X0, [X0+1208]
	338 Call 0x1C17D08
	339 Call 0x1C17F10
	340 Move X1, X31
	341 Move X19, X0
	342 Call TypeLoadException..ctor, X0
	343 Move X0, 0xD65000
	344 Move X0, [X0+3152]
	345 Call 0x1C17D08
	346 Call 0x1C17F10
	347 Move X1, X31
	348 Move X19, X0
	349 Call PlatformNotSupportedException..ctor, X0

Method: System.Boolean get_IsGenericTypeDefinition()

Disassembly:
	0x033BAAE4 BL 0x338009C
	0x033BAAE8 B 0x33BAD78

ISIL:
	001 Move X1, X31
	002 Call RuntimeTypeHandle.IsGenericTypeDefinition, X0
	003 Return X0

Method: System.Boolean get_IsGenericParameter()

Disassembly:
	0x033BAAEC ADRP X0, 0xD72000
	0x033BAAF0 LDR X0, [X0 + 0x2B8]

ISIL:
	001 Move X1, X31
	002 Call RuntimeTypeHandle.IsGenericVariable, X0
	003 Return X0

Method: System.Int32 get_GenericParameterPosition()

Disassembly:
	0x033BAAF4 BL 0x1C16D08
	0x033BAAF8 MOV X1, X31
	0x033BAAFC BL 0x33BDD84
	0x033BAB00 MOV X19, X0
	0x033BAB04 ADRP X0, 0xD41000
	0x033BAB08 LDR X0, [X0 + 0x578]
	0x033BAB0C BL 0x1C16D08
	0x033BAB10 BL 0x1C16F10
	0x033BAB14 MOV X20, X0
	0x033BAB18 ADRP X0, 0xD72000
	0x033BAB1C LDR X0, [X0 + 0x2C0]
	0x033BAB20 B 0x33BAC64
	0x033BAB24 MOV X0, X19
	0x033BAB28 BL 0x1C171E0
	0x033BAB2C ADRP X0, 0xD3E000
	0x033BAB30 LDR X0, [X0 + 0x528]
	0x033BAB34 BL 0x1C16D08
	0x033BAB38 BL 0x1C16F10
	0x033BAB3C MOV X19, X0
	0x033BAB40 ADRP X0, 0xD41000
	0x033BAB44 LDR X0, [X0 + 0x588]
	0x033BAB48 B 0x33BABB8
	0x033BAB4C ADRP X0, 0xD72000
	0x033BAB50 LDR X0, [X0 + 0x2C8]
	0x033BAB54 B 0x33BAC38
	0x033BAB58 BL 0x1C16F20
	0x033BAB5C LDR X8, [X26]
	0x033BAB60 MOV X0, X26
	0x033BAB64 LDR X9, [X8 + 0x2E8]
	0x033BAB68 LDR X1, [X8 + 0x2F0]
	0x033BAB6C BLR X9
	0x033BAB70 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0]
	005 Move X19, X0
	006 Move X9, [X8+936]
	007 Move X1, [X8+944]
	008 NotImplemented "Instruction BLR not yet implemented."
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {19}
	013 Move X0, X19
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X30, [X31+32]
	017 Call 0x1C3B054
	018 Return X0
	019 Move X0, 0xD6C000
	020 Move X0, [X0+3776]
	021 Call 0x1C17D08
	022 Move X1, X31
	023 Call Environment.GetResourceString, X0
	024 Move X19, X0
	025 Move X0, 0xD3A000
	026 Move X0, [X0+1456]
	027 Call 0x1C17D08
	028 Call 0x1C17F10
	029 Move X1, X19
	030 Move X2, X31
	031 Move X20, X0
	032 Call InvalidOperationException..ctor, X0, X1
	033 Move X0, 0xD73000
	034 Move X0, [X0+592]
	035 Call 0x1C17D08
	036 Move X1, X0
	037 Move X0, X20
	038 Call 0x1C17DEC

Method: System.Type GetGenericTypeDefinition()

Disassembly:
	0x033BAB78 LDR X0, [X0 + 0xDE0]
	0x033BAB7C BL 0x1C16D08
	0x033BAB80 BL 0x1C16F10
	0x033BAB84 MOV X1, X19
	0x033BAB88 MOV X2, X23
	0x033BAB8C MOV X3, X31
	0x033BAB90 MOV X20, X0
	0x033BAB94 BL 0x339ED20
	0x033BAB98 B 0x33BAD78
	0x033BAB9C ADRP X0, 0xD3E000
	0x033BABA0 LDR X0, [X0 + 0x528]
	0x033BABA4 BL 0x1C16D08
	0x033BABA8 BL 0x1C16F10
	0x033BABAC MOV X19, X0
	0x033BABB0 ADRP X0, 0xD72000
	0x033BABB4 LDR X0, [X0 + 0x2D0]
	0x033BABB8 BL 0x1C16D08
	0x033BABBC MOV X1, X0
	0x033BABC0 MOV X0, X19
	0x033BABC4 MOV X2, X31
	0x033BABC8 BL 0x330E100
	0x033BABCC ADRP X0, 0xD72000
	0x033BABD0 LDR X0, [X0 + 0x2D8]
	0x033BABD4 BL 0x1C16D08
	0x033BABD8 MOV X1, X0
	0x033BABDC MOV X0, X19
	0x033BABE0 BL 0x1C16DEC
	0x033BABE4 ADRP X0, 0xD72000
	0x033BABE8 LDR X0, [X0 + 0x2E0]
	0x033BABEC B 0x33BAC38
	0x033BABF0 ADRP X0, 0xD72000
	0x033BABF4 LDR X0, [X0 + 0x2E8]
	0x033BABF8 B 0x33BAC38

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0]
	005 Move X19, X0
	006 Move X9, [X8+968]
	007 Move X1, [X8+976]
	008 NotImplemented "Instruction BLR not yet implemented."
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {20}
	013 Move X0, X19
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X1, X31
	017 Move X30, [X31+32]
	018 Call RuntimeTypeHandle.GetGenericTypeDefinition, X0
	019 Return X0
	020 Move X0, 0xD6C000
	021 Move X0, [X0+3792]
	022 Call 0x1C17D08
	023 Move X1, X31
	024 Call Environment.GetResourceString, X0
	025 Move X19, X0
	026 Move X0, 0xD3A000
	027 Move X0, [X0+1456]
	028 Call 0x1C17D08
	029 Call 0x1C17F10
	030 Move X1, X19
	031 Move X2, X31
	032 Move X20, X0
	033 Call InvalidOperationException..ctor, X0, X1
	034 Move X0, 0xD73000
	035 Move X0, [X0+600]
	036 Call 0x1C17D08
	037 Move X1, X0
	038 Move X0, X20
	039 Call 0x1C17DEC

Method: System.Boolean get_IsGenericType()

Disassembly:
	0x033BABFC ADRP X0, 0xD72000
	0x033BAC00 LDR X0, [X0 + 0x2F0]

ISIL:
	001 Move X1, X31
	002 Call RuntimeTypeHandle.HasInstantiation, X0
	003 Return X0

Method: System.Boolean get_IsConstructedGenericType()

Disassembly:
	0x033BAC04 B 0x33BAC38
	0x033BAC08 ADRP X0, 0xD72000
	0x033BAC0C LDR X0, [X0 + 0x2F8]
	0x033BAC10 B 0x33BAC38
	0x033BAC14 BL 0x1C171E0
	0x033BAC18 BL 0x1C16F44
	0x033BAC1C MOV X1, X31
	0x033BAC20 BL 0x1C16DEC
	0x033BAC24 ADRP X0, 0xD72000
	0x033BAC28 LDR X0, [X0 + 0x300]
	0x033BAC2C B 0x33BAC38
	0x033BAC30 ADRP X0, 0xD72000
	0x033BAC34 LDR X0, [X0 + 0x308]
	0x033BAC38 BL 0x1C16D08
	0x033BAC3C MOV X1, X31
	0x033BAC40 BL 0x33BDD84
	0x033BAC44 MOV X19, X0
	0x033BAC48 ADRP X0, 0xD41000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move X19, X0
	005 Move X9, [X8+968]
	006 Move X1, [X8+976]
	007 NotImplemented "Instruction BLR not yet implemented."
	008 Move TEMP, X0
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfNotEqual {18}
	012 Move X8, [X19]
	013 Move X0, X19
	014 Move X9, [X8+984]
	015 Move X1, [X8+992]
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Xor W8, W0, 1
	018 Move W8, W31
	019 And W0, W8, 1
	020 Move X30, [X31+16]
	021 Move X19, [X31+24]
	022 Return X0

Method: System.Object InvokeMember(System.String name, System.Reflection.BindingFlags bindingFlags, System.Reflection.Binder binder, System.Object target, System.Object[] providedArgs, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, System.String[] namedParams)

Disassembly:
	0x033BAC4C LDR X0, [X0 + 0x578]
	0x033BAC50 BL 0x1C16D08
	0x033BAC54 BL 0x1C16F10
	0x033BAC58 MOV X20, X0
	0x033BAC5C ADRP X0, 0xD72000
	0x033BAC60 LDR X0, [X0 + 0x310]
	0x033BAC64 BL 0x1C16D08
	0x033BAC68 MOV X2, X0
	0x033BAC6C MOV X0, X20
	0x033BAC70 MOV X1, X19
	0x033BAC74 MOV X3, X31
	0x033BAC78 BL 0x330E16C
	0x033BAC7C B 0x33BAD78
	0x033BAC80 B 0x33BAC84
	0x033BAC84 MOV X19, X0
	0x033BAC88 CMP W1, 0x1
	0x033BAC8C B.NE 0x33BADB8
	0x033BAC90 MOV X0, X19
	0x033BAC94 BL 0x3EB1AD0
	0x033BAC98 MOV X19, X0
	0x033BAC9C ADRP X0, 0xD62000
	0x033BACA0 LDR X0, [X0 + 0x28]
	0x033BACA4 BL 0x1C16D08
	0x033BACA8 LDR X8, [X19]
	0x033BACAC LDR X1, [X8]
	0x033BACB0 BL 0x1C17270
	0x033BACB4 TBZ X0, 0x0, 0x33BACC8
	0x033BACB8 BL 0x3EB1AE0
	0x033BACBC LDP X22, X21, [X31 + 0x18]
	0x033BACC0 MOV X19, X31
	0x033BACC4 B 0x33BA8B4
	0x033BACC8 MOVZ W0, 0x8
	0x033BACCC BL 0x3EB1AF0
	0x033BACD0 LDR X8, [X19]
	0x033BACD4 STR X8, [X0]
	0x033BACD8 ADRP X1, 0xAFA000
	0x033BACDC ADD X1, X1, 0xE58
	0x033BACE0 MOV X2, X31
	0x033BACE4 BL 0x3EB1B00
	0x033BACE8 B 0x33BADB0
	0x033BACEC MOV X19, X0
	0x033BACF0 BL 0x3EB1AE0
	0x033BACF4 B 0x33BADB8
	0x033BACF8 B 0x33BAD08
	0x033BACFC B 0x33BAD08
	0x033BAD00 B 0x33BAD08
	0x033BAD04 B 0x33BAD08
	0x033BAD08 MOV X19, X0
	0x033BAD0C CMP W1, 0x1
	0x033BAD10 B.NE 0x33BADB8
	0x033BAD14 MOV X0, X19
	0x033BAD18 BL 0x3EB1AD0
	0x033BAD1C MOV X19, X0
	0x033BAD20 ADRP X0, 0xD41000
	0x033BAD24 LDR X0, [X0 + 0xC08]
	0x033BAD28 BL 0x1C16D08
	0x033BAD2C LDR X8, [X19]
	0x033BAD30 LDR X1, [X8]
	0x033BAD34 BL 0x1C17270
	0x033BAD38 TBZ X0, 0x0, 0x33BAD90
	0x033BAD3C BL 0x3EB1AE0
	0x033BAD40 ADRP X0, 0xD72000
	0x033BAD44 LDR X0, [X0 + 0x318]
	0x033BAD48 BL 0x1C16D08
	0x033BAD4C MOV X1, X31
	0x033BAD50 BL 0x33BDD84
	0x033BAD54 MOV X19, X0
	0x033BAD58 ADRP X0, 0xD41000
	0x033BAD5C LDR X0, [X0 + 0x578]
	0x033BAD60 BL 0x1C16D08
	0x033BAD64 BL 0x1C16F10
	0x033BAD68 MOV X1, X19
	0x033BAD6C MOV X2, X31
	0x033BAD70 MOV X20, X0
	0x033BAD74 BL 0x3314A68
	0x033BAD78 ADRP X0, 0xD72000
	0x033BAD7C LDR X0, [X0 + 0x2D8]
	0x033BAD80 BL 0x1C16D08
	0x033BAD84 MOV X1, X0
	0x033BAD88 MOV X0, X20
	0x033BAD8C BL 0x1C16DEC
	0x033BAD90 MOVZ W0, 0x8
	0x033BAD94 BL 0x3EB1AF0
	0x033BAD98 LDR X8, [X19]
	0x033BAD9C STR X8, [X0]
	0x033BADA0 ADRP X1, 0xAFA000
	0x033BADA4 ADD X1, X1, 0xE58
	0x033BADA8 MOV X2, X31
	0x033BADAC BL 0x3EB1B00
	0x033BADB0 MOV X19, X0
	0x033BADB4 BL 0x3EB1AE0
	0x033BADB8 MOV X0, X19
	0x033BADBC BL 0x1D2C690
	0x033BADC0 BL 0x1990590
	0x033BADC4 STR X30, [X31 - 0x30]!
	0x033BADC8 STP X22, X21, [X31 + 0x10]
	0x033BADCC STP X20, X19, [X31 + 0x20]
	0x033BADD0 ADRP X22, 0x1023000
	0x033BADD4 ADRP X20, 0xD72000
	0x033BADD8 ADRP X21, 0xD39000
	0x033BADDC LDRB W8, [X22 + 0x1F0]
	0x033BADE0 LDR X20, [X20 + 0x320]
	0x033BADE4 LDR X21, [X21 + 0x6C0]
	0x033BADE8 MOV X19, X0
	0x033BADEC TBNZ X8, 0x0, 0x33BAE1C
	0x033BADF0 ADRP X0, 0xD72000
	0x033BADF4 LDR X0, [X0 + 0x320]
	0x033BADF8 BL 0x1C16CF4
	0x033BADFC ADRP X0, 0xD72000
	0x033BAE00 LDR X0, [X0 + 0x328]
	0x033BAE04 BL 0x1C16CF4
	0x033BAE08 ADRP X0, 0xD39000
	0x033BAE0C LDR X0, [X0 + 0x6C0]
	0x033BAE10 BL 0x1C16CF4
	0x033BAE14 MOVZ W8, 0x1
	0x033BAE18 STRB W8, [X22 + 0x1F0]
	0x033BAE1C LDR X0, [X21]
	0x033BAE20 LDR X20, [X20]
	0x033BAE24 LDR W8, [X0 + 0xE0]
	0x033BAE28 CBNZ W8, 0x33BAE30
	0x033BAE2C BL 0x1C16DFC
	0x033BAE30 MOV X0, X20
	0x033BAE34 MOV X1, X31
	0x033BAE38 BL 0x338C698
	0x033BAE3C LDR X8, [X19]
	0x033BAE40 MOV X1, X0
	0x033BAE44 MOVZ W2, 0x1
	0x033BAE48 MOV X0, X19
	0x033BAE4C LDR X9, [X8 + 0x208]
	0x033BAE50 LDR X3, [X8 + 0x210]
	0x033BAE54 BLR X9
	0x033BAE58 CBZ X0, 0x33BAEA4
	0x033BAE5C LDR X8, [X0 + 0x18]
	0x033BAE60 CBZ X8, 0x33BAE90
	0x033BAE64 CBZ W8, 0x33BAEA8
	0x033BAE68 LDR X0, [X0 + 0x20]
	0x033BAE6C CBZ X0, 0x33BAEA4
	0x033BAE70 ADRP X8, 0xD72000
	0x033BAE74 LDR X8, [X8 + 0x328]
	0x033BAE78 LDR X1, [X8]
	0x033BAE7C LDR X8, [X0]
	0x033BAE80 CMP X8, X1
	0x033BAE84 B.NE 0x33BAEAC
	0x033BAE88 LDR X0, [X0 + 0x10]
	0x033BAE8C B 0x33BAE94
	0x033BAE90 MOV X0, X31
	0x033BAE94 LDP X20, X19, [X31 + 0x20]
	0x033BAE98 LDP X22, X21, [X31 + 0x10]
	0x033BAE9C LDR X30, [X31], #0x30
	0x033BAEA0 RET
	0x033BAEA4 BL 0x1C16F20
	0x033BAEA8 BL 0x1C16F28
	0x033BAEAC BL 0x1C171E0
	0x033BAEB0 CMP X0, X1
	0x033BAEB4 CSET W0, EQ
	0x033BAEB8 RET
	0x033BAEBC RET
	0x033BAEC0 CBZ X1, 0x33BAED8
	0x033BAEC4 MOV X8, X0
	0x033BAEC8 MOV X0, X1
	0x033BAECC MOV X1, X8
	0x033BAED0 MOV X2, X31
	0x033BAED4 B 0x33BF1B0
	0x033BAED8 STP X30, X19, [X31 - 0x10]!
	0x033BAEDC ADRP X0, 0xD3E000
	0x033BAEE0 LDR X0, [X0 + 0x528]
	0x033BAEE4 BL 0x1C16D08
	0x033BAEE8 BL 0x1C16F10
	0x033BAEEC MOV X19, X0
	0x033BAEF0 ADRP X0, 0xD63000
	0x033BAEF4 LDR X0, [X0 + 0x2D8]
	0x033BAEF8 BL 0x1C16D08
	0x033BAEFC MOV X1, X0
	0x033BAF00 MOV X0, X19
	0x033BAF04 MOV X2, X31
	0x033BAF08 BL 0x330E100
	0x033BAF0C ADRP X0, 0xD72000
	0x033BAF10 LDR X0, [X0 + 0x330]
	0x033BAF14 BL 0x1C16D08
	0x033BAF18 MOV X1, X0
	0x033BAF1C MOV X0, X19
	0x033BAF20 BL 0x1C16DEC
	0x033BAF24 STR X30, [X31 - 0x30]!
	0x033BAF28 STP X22, X21, [X31 + 0x10]
	0x033BAF2C STP X20, X19, [X31 + 0x20]
	0x033BAF30 ADRP X22, 0x1023000
	0x033BAF34 ADRP X21, 0xD62000
	0x033BAF38 LDRB W8, [X22 + 0x1E8]
	0x033BAF3C LDR X21, [X21 + 0x4E8]
	0x033BAF40 MOV W20, W1
	0x033BAF44 MOV X19, X0
	0x033BAF48 TBNZ X8, 0x0, 0x33BAF6C
	0x033BAF4C ADRP X0, 0xD6C000
	0x033BAF50 LDR X0, [X0 + 0x3E0]
	0x033BAF54 BL 0x1C16CF4
	0x033BAF58 ADRP X0, 0xD62000
	0x033BAF5C LDR X0, [X0 + 0x4E8]
	0x033BAF60 BL 0x1C16CF4
	0x033BAF64 MOVZ W8, 0x1
	0x033BAF68 STRB W8, [X22 + 0x1E8]
	0x033BAF6C LDR X0, [X21]
	0x033BAF70 ADRP X22, 0xD6C000
	0x033BAF74 LDR W8, [X0 + 0xE0]
	0x033BAF78 LDR X22, [X22 + 0x3E0]
	0x033BAF7C CBNZ W8, 0x33BAF88
	0x033BAF80 BL 0x1C16DFC
	0x033BAF84 LDR X0, [X21]
	0x033BAF88 LDR X8, [X22]
	0x033BAF8C LDR X9, [X0 + 0xB8]
	0x033BAF90 LDR W10, [X8 + 0xE0]
	0x033BAF94 LDR X21, [X9 + 0x10]
	0x033BAF98 CBNZ W10, 0x33BAFA4
	0x033BAF9C MOV X0, X8
	0x033BAFA0 BL 0x1C16DFC
	0x033BAFA4 AND W2, W20, 0x1
	0x033BAFA8 MOV X0, X19
	0x033BAFAC MOV X1, X21
	0x033BAFB0 LDP X20, X19, [X31 + 0x20]
	0x033BAFB4 LDP X22, X21, [X31 + 0x10]
	0x033BAFB8 MOV X3, X31
	0x033BAFBC LDR X30, [X31], #0x30
	0x033BAFC0 B 0x33C7388
	0x033BAFC4 STR X30, [X31 - 0x30]!
	0x033BAFC8 STP X22, X21, [X31 + 0x10]
	0x033BAFCC STP X20, X19, [X31 + 0x20]
	0x033BAFD0 ADRP X22, 0x1023000
	0x033BAFD4 LDRB W8, [X22 + 0x1E9]
	0x033BAFD8 MOV W19, W2
	0x033BAFDC MOV X21, X1
	0x033BAFE0 MOV X20, X0
	0x033BAFE4 TBNZ X8, 0x0, 0x33BB008
	0x033BAFE8 ADRP X0, 0xD6C000
	0x033BAFEC LDR X0, [X0 + 0x3E0]
	0x033BAFF0 BL 0x1C16CF4
	0x033BAFF4 ADRP X0, 0xD62000
	0x033BAFF8 LDR X0, [X0 + 0x4E8]
	0x033BAFFC BL 0x1C16CF4
	0x033BB000 MOVZ W8, 0x1
	0x033BB004 STRB W8, [X22 + 0x1E9]
	0x033BB008 CBZ X21, 0x33BB0AC
	0x033BB00C LDR X8, [X21]
	0x033BB010 ADRP X22, 0xD61000
	0x033BB014 MOV X0, X21
	0x033BB018 LDR X9, [X8 + 0x328]
	0x033BB01C LDR X1, [X8 + 0x330]
	0x033BB020 LDR X22, [X22 + 0x4E8]
	0x033BB024 BLR X9
	0x033BB028 LDR X8, [X22]
	0x033BB02C CBZ X0, 0x33BB044
	0x033BB030 LDR X9, [X0]
	0x033BB034 LDRB W10, [X8 + 0x130]
	0x033BB038 LDRB W11, [X9 + 0x130]
	0x033BB03C CMP W11, W10
	0x033BB040 B.CS 0x33BB04C
	0x033BB044 MOV X21, X31
	0x033BB048 B 0x33BB060
	0x033BB04C LDR X9, [X9 + 0xC8]
	0x033BB050 ADD X9, X9, X10, 0x3, LSL
	0x033BB054 LDUR X9, [X9 - 0x8]
	0x033BB058 CMP X9, X8
	0x033BB05C CSEL X21, X0, X31, EQ
	0x033BB060 LDR W9, [X8 + 0xE0]
	0x033BB064 CBNZ W9, 0x33BB070
	0x033BB068 MOV X0, X8
	0x033BB06C BL 0x1C16DFC
	0x033BB070 CBZ X21, 0x33BB0F4
	0x033BB074 ADRP X8, 0xD6B000
	0x033BB078 LDR X8, [X8 + 0x3E0]
	0x033BB07C LDR X0, [X8]
	0x033BB080 LDR W8, [X0 + 0xE0]
	0x033BB084 CBNZ W8, 0x33BB08C
	0x033BB088 BL 0x1C16DFC
	0x033BB08C AND W2, W19, 0x1
	0x033BB090 MOV X0, X20
	0x033BB094 MOV X1, X21
	0x033BB098 LDP X20, X19, [X31 + 0x20]
	0x033BB09C LDP X22, X21, [X31 + 0x10]
	0x033BB0A0 MOV X3, X31
	0x033BB0A4 LDR X30, [X31], #0x30
	0x033BB0A8 B 0x33C7388
	0x033BB0AC ADRP X0, 0xD3D000
	0x033BB0B0 LDR X0, [X0 + 0x528]
	0x033BB0B4 BL 0x1C16D08
	0x033BB0B8 BL 0x1C16F10
	0x033BB0BC MOV X19, X0
	0x033BB0C0 ADRP X0, 0xD6A000
	0x033BB0C4 LDR X0, [X0 + 0xE10]
	0x033BB0C8 BL 0x1C16D08
	0x033BB0CC MOV X1, X0
	0x033BB0D0 MOV X0, X19
	0x033BB0D4 MOV X2, X31
	0x033BB0D8 BL 0x330E100
	0x033BB0DC ADRP X0, 0xD71000
	0x033BB0E0 LDR X0, [X0 + 0x338]
	0x033BB0E4 BL 0x1C16D08
	0x033BB0E8 MOV X1, X0
	0x033BB0EC MOV X0, X19
	0x033BB0F0 BL 0x1C16DEC
	0x033BB0F4 ADRP X0, 0xD6A000
	0x033BB0F8 LDR X0, [X0 + 0xE58]
	0x033BB0FC BL 0x1C16D08
	0x033BB100 MOV X1, X31
	0x033BB104 BL 0x33BDD84
	0x033BB108 MOV X19, X0
	0x033BB10C ADRP X0, 0xD40000
	0x033BB110 LDR X0, [X0 + 0x578]
	0x033BB114 BL 0x1C16D08
	0x033BB118 BL 0x1C16F10
	0x033BB11C MOV X20, X0
	0x033BB120 ADRP X0, 0xD6A000
	0x033BB124 LDR X0, [X0 + 0xE10]
	0x033BB128 BL 0x1C16D08
	0x033BB12C MOV X2, X0
	0x033BB130 MOV X0, X20
	0x033BB134 MOV X1, X19
	0x033BB138 MOV X3, X31
	0x033BB13C BL 0x330E16C
	0x033BB140 ADRP X0, 0xD71000
	0x033BB144 LDR X0, [X0 + 0x338]
	0x033BB148 BL 0x1C16D08
	0x033BB14C MOV X1, X0
	0x033BB150 MOV X0, X20
	0x033BB154 BL 0x1C16DEC
	0x033BB158 STR X30, [X31 - 0x30]!
	0x033BB15C STP X22, X21, [X31 + 0x10]
	0x033BB160 STP X20, X19, [X31 + 0x20]
	0x033BB164 ADRP X22, 0x1022000
	0x033BB168 LDRB W8, [X22 + 0x1EA]
	0x033BB16C MOV W19, W2
	0x033BB170 MOV X21, X1
	0x033BB174 MOV X20, X0
	0x033BB178 TBNZ X8, 0x0, 0x33BB19C
	0x033BB17C ADRP X0, 0xD6B000
	0x033BB180 LDR X0, [X0 + 0x3E0]
	0x033BB184 BL 0x1C16CF4
	0x033BB188 ADRP X0, 0xD61000
	0x033BB18C LDR X0, [X0 + 0x4E8]
	0x033BB190 BL 0x1C16CF4
	0x033BB194 MOVZ W8, 0x1
	0x033BB198 STRB W8, [X22 + 0x1EA]
	0x033BB19C CBZ X21, 0x33BB240
	0x033BB1A0 LDR X8, [X21]
	0x033BB1A4 ADRP X22, 0xD61000
	0x033BB1A8 MOV X0, X21
	0x033BB1AC LDR X9, [X8 + 0x328]
	0x033BB1B0 LDR X1, [X8 + 0x330]
	0x033BB1B4 LDR X22, [X22 + 0x4E8]
	0x033BB1B8 BLR X9
	0x033BB1BC LDR X8, [X22]
	0x033BB1C0 CBZ X0, 0x33BB1D8
	0x033BB1C4 LDR X9, [X0]
	0x033BB1C8 LDRB W10, [X8 + 0x130]
	0x033BB1CC LDRB W11, [X9 + 0x130]
	0x033BB1D0 CMP W11, W10
	0x033BB1D4 B.CS 0x33BB1E0
	0x033BB1D8 MOV X21, X31
	0x033BB1DC B 0x33BB1F4
	0x033BB1E0 LDR X9, [X9 + 0xC8]
	0x033BB1E4 ADD X9, X9, X10, 0x3, LSL
	0x033BB1E8 LDUR X9, [X9 - 0x8]
	0x033BB1EC CMP X9, X8
	0x033BB1F0 CSEL X21, X0, X31, EQ
	0x033BB1F4 LDR W9, [X8 + 0xE0]
	0x033BB1F8 CBNZ W9, 0x33BB204
	0x033BB1FC MOV X0, X8
	0x033BB200 BL 0x1C16DFC
	0x033BB204 CBZ X21, 0x33BB288
	0x033BB208 ADRP X8, 0xD6B000
	0x033BB20C LDR X8, [X8 + 0x3E0]
	0x033BB210 LDR X0, [X8]
	0x033BB214 LDR W8, [X0 + 0xE0]
	0x033BB218 CBNZ W8, 0x33BB220
	0x033BB21C BL 0x1C16DFC
	0x033BB220 AND W2, W19, 0x1
	0x033BB224 MOV X0, X20
	0x033BB228 MOV X1, X21
	0x033BB22C LDP X20, X19, [X31 + 0x20]
	0x033BB230 LDP X22, X21, [X31 + 0x10]
	0x033BB234 MOV X3, X31
	0x033BB238 LDR X30, [X31], #0x30
	0x033BB23C B 0x33C9FDC
	0x033BB240 ADRP X0, 0xD3D000
	0x033BB244 LDR X0, [X0 + 0x528]
	0x033BB248 BL 0x1C16D08
	0x033BB24C BL 0x1C16F10
	0x033BB250 MOV X19, X0
	0x033BB254 ADRP X0, 0xD6A000
	0x033BB258 LDR X0, [X0 + 0xE10]
	0x033BB25C BL 0x1C16D08
	0x033BB260 MOV X1, X0
	0x033BB264 MOV X0, X19
	0x033BB268 MOV X2, X31
	0x033BB26C BL 0x330E100
	0x033BB270 ADRP X0, 0xD71000
	0x033BB274 LDR X0, [X0 + 0x340]
	0x033BB278 BL 0x1C16D08
	0x033BB27C MOV X1, X0
	0x033BB280 MOV X0, X19
	0x033BB284 BL 0x1C16DEC
	0x033BB288 ADRP X0, 0xD6A000
	0x033BB28C LDR X0, [X0 + 0xE58]
	0x033BB290 BL 0x1C16D08
	0x033BB294 MOV X1, X31
	0x033BB298 BL 0x33BDD84
	0x033BB29C MOV X19, X0
	0x033BB2A0 ADRP X0, 0xD40000
	0x033BB2A4 LDR X0, [X0 + 0x578]
	0x033BB2A8 BL 0x1C16D08
	0x033BB2AC BL 0x1C16F10
	0x033BB2B0 MOV X20, X0
	0x033BB2B4 ADRP X0, 0xD6A000
	0x033BB2B8 LDR X0, [X0 + 0xE10]
	0x033BB2BC BL 0x1C16D08
	0x033BB2C0 MOV X2, X0
	0x033BB2C4 MOV X0, X20
	0x033BB2C8 MOV X1, X19
	0x033BB2CC MOV X3, X31
	0x033BB2D0 BL 0x330E16C
	0x033BB2D4 ADRP X0, 0xD71000
	0x033BB2D8 LDR X0, [X0 + 0x340]
	0x033BB2DC BL 0x1C16D08
	0x033BB2E0 MOV X1, X0
	0x033BB2E4 MOV X0, X20
	0x033BB2E8 BL 0x1C16DEC
	0x033BB2EC MOV X1, X31
	0x033BB2F0 B 0x32D772C
	0x033BB2F4 STR X30, [X31 - 0x30]!
	0x033BB2F8 STP X22, X21, [X31 + 0x10]
	0x033BB2FC STP X20, X19, [X31 + 0x20]
	0x033BB300 ADRP X21, 0x1022000
	0x033BB304 LDRB W8, [X21 + 0x1EB]
	0x033BB308 MOV W19, W1
	0x033BB30C MOV X20, X0
	0x033BB310 TBNZ X8, 0x0, 0x33BB34C
	0x033BB314 ADRP X0, 0xD38000
	0x033BB318 LDR X0, [X0 + 0x6C0]
	0x033BB31C BL 0x1C16CF4
	0x033BB320 ADRP X0, 0xD71000
	0x033BB324 LDR X0, [X0 + 0x348]
	0x033BB328 BL 0x1C16CF4
	0x033BB32C ADRP X0, 0xD69000
	0x033BB330 LDR X0, [X0 + 0x810]
	0x033BB334 BL 0x1C16CF4
	0x033BB338 ADRP X0, 0xD71000
	0x033BB33C LDR X0, [X0 + 0x350]
	0x033BB340 BL 0x1C16CF4
	0x033BB344 MOVZ W8, 0x1
	0x033BB348 STRB W8, [X21 + 0x1EB]
	0x033BB34C TBZ X19, 0x0, 0x33BB35C
	0x033BB350 LDR X8, [X20]
	0x033BB354 LDP X2, X1, [X8 + 0x168]
	0x033BB358 B 0x33BB384
	0x033BB35C MOV X0, X20
	0x033BB360 MOV X1, X31
	0x033BB364 BL 0x3396028
	0x033BB368 CBZ X0, 0x33BB47C
	0x033BB36C MOV X1, X31
	0x033BB370 MOV X19, X0
	0x033BB374 BL 0x3396B70
	0x033BB378 LDR X8, [X20]
	0x033BB37C TBZ X0, 0x0, 0x33BB398
	0x033BB380 LDP X2, X1, [X8 + 0x1A8]
	0x033BB384 MOV X0, X20
	0x033BB388 LDP X20, X19, [X31 + 0x20]
	0x033BB38C LDP X22, X21, [X31 + 0x10]
	0x033BB390 LDR X30, [X31], #0x30
	0x033BB394 BR X2
	0x033BB398 LDP X9, X1, [X8 + 0x168]
	0x033BB39C MOV X0, X20
	0x033BB3A0 BLR X9
	0x033BB3A4 MOV X20, X0
	0x033BB3A8 MOV X0, X19
	0x033BB3AC MOV X1, X31
	0x033BB3B0 BL 0x3397374
	0x033BB3B4 TBNZ X0, 0x0, 0x33BB438
	0x033BB3B8 ADRP X22, 0xD38000
	0x033BB3BC LDR X22, [X22 + 0x6C0]
	0x033BB3C0 ADRP X8, 0xD69000
	0x033BB3C4 LDR X0, [X22]
	0x033BB3C8 LDR X8, [X8 + 0x810]
	0x033BB3CC LDR W9, [X0 + 0xE0]
	0x033BB3D0 LDR X21, [X8]
	0x033BB3D4 CBNZ W9, 0x33BB3DC
	0x033BB3D8 BL 0x1C16DFC
	0x033BB3DC MOV X0, X21
	0x033BB3E0 MOV X1, X31
	0x033BB3E4 BL 0x338C698
	0x033BB3E8 MOV X1, X0
	0x033BB3EC MOV X0, X19
	0x033BB3F0 MOV X2, X31
	0x033BB3F4 BL 0x3395194
	0x033BB3F8 TBNZ X0, 0x0, 0x33BB438
	0x033BB3FC ADRP X8, 0xD71000
	0x033BB400 LDR X0, [X22]
	0x033BB404 LDR X8, [X8 + 0x348]
	0x033BB408 LDR W9, [X0 + 0xE0]
	0x033BB40C LDR X21, [X8]
	0x033BB410 CBNZ W9, 0x33BB418
	0x033BB414 BL 0x1C16DFC
	0x033BB418 MOV X0, X21
	0x033BB41C MOV X1, X31
	0x033BB420 BL 0x338C698
	0x033BB424 MOV X1, X0
	0x033BB428 MOV X0, X19
	0x033BB42C MOV X2, X31
	0x033BB430 BL 0x3395194
	0x033BB434 TBZ X0, 0x0, 0x33BB468
	0x033BB438 ADRP X8, 0xD71000
	0x033BB43C LDR X8, [X8 + 0x350]
	0x033BB440 LDR X8, [X8]
	0x033BB444 CBZ X8, 0x33BB47C
	0x033BB448 CBZ X20, 0x33BB47C
	0x033BB44C LDR W1, [X8 + 0x10]
	0x033BB450 MOV X0, X20
	0x033BB454 LDP X20, X19, [X31 + 0x20]
	0x033BB458 LDP X22, X21, [X31 + 0x10]
	0x033BB45C MOV X2, X31
	0x033BB460 LDR X30, [X31], #0x30
	0x033BB464 B 0x322B484
	0x033BB468 MOV X0, X20
	0x033BB46C LDP X20, X19, [X31 + 0x20]
	0x033BB470 LDP X22, X21, [X31 + 0x10]
	0x033BB474 LDR X30, [X31], #0x30
	0x033BB478 RET
	0x033BB47C BL 0x1C16F20
	0x033BB480 STP X30, X19, [X31 - 0x10]!
	0x033BB484 CMP W1, 0x2
	0x033BB488 B.NE 0x33BB49C
	0x033BB48C LDR X8, [X0]
	0x033BB490 LDP X2, X1, [X8 + 0x168]
	0x033BB494 LDP X30, X19, [X31], #0x10
	0x033BB498 BR X2
	0x033BB49C ADRP X0, 0xD41000
	0x033BB4A0 LDR X0, [X0 + 0x758]
	0x033BB4A4 BL 0x1C16D08
	0x033BB4A8 BL 0x1C16F10
	0x033BB4AC MOV X1, X31
	0x033BB4B0 MOV X19, X0
	0x033BB4B4 BL 0x3380288
	0x033BB4B8 ADRP X0, 0xD71000
	0x033BB4BC LDR X0, [X0 + 0x358]
	0x033BB4C0 BL 0x1C16D08
	0x033BB4C4 MOV X1, X0
	0x033BB4C8 MOV X0, X19
	0x033BB4CC BL 0x1C16DEC
	0x033BB4D0 STP X30, X19, [X31 - 0x10]!
	0x033BB4D4 MOV X1, X31
	0x033BB4D8 MOV X19, X0
	0x033BB4DC BL 0x3397148
	0x033BB4E0 TBZ X0, 0x0, 0x33BB4F0
	0x033BB4E4 MOVZ W0, 0x20
	0x033BB4E8 LDP X30, X19, [X31], #0x10
	0x033BB4EC RET
	0x033BB4F0 MOV X0, X19
	0x033BB4F4 MOV X1, X31
	0x033BB4F8 BL 0x3397124
	0x033BB4FC ANDS W31, W0, 0x1
	0x033BB500 MOVZ W8, 0x80
	0x033BB504 MOVZ W9, 0x20
	0x033BB508 CSEL W0, W9, W8, NE
	0x033BB50C LDP X30, X19, [X31], #0x10
	0x033BB510 RET
	0x033BB514 LDR X8, [X0]
	0x033BB518 LDP X2, X1, [X8 + 0x1B8]
	0x033BB51C BR X2
	0x033BB520 MOV X1, X31
	0x033BB524 B 0x33CC334
	0x033BB528 STP X30, X21, [X31 - 0x20]!
	0x033BB52C STP X20, X19, [X31 + 0x10]
	0x033BB530 ADRP X21, 0x1022000
	0x033BB534 ADRP X20, 0xD71000
	0x033BB538 LDRB W8, [X21 + 0x1EC]
	0x033BB53C LDR X20, [X20 + 0x360]
	0x033BB540 MOV X19, X0
	0x033BB544 TBNZ X8, 0x0, 0x33BB580
	0x033BB548 ADRP X0, 0xD71000
	0x033BB54C LDR X0, [X0 + 0x368]
	0x033BB550 BL 0x1C16CF4
	0x033BB554 ADRP X0, 0xD71000
	0x033BB558 LDR X0, [X0 + 0x360]
	0x033BB55C BL 0x1C16CF4
	0x033BB560 ADRP X0, 0xD38000
	0x033BB564 LDR X0, [X0 + 0x6C0]
	0x033BB568 BL 0x1C16CF4
	0x033BB56C ADRP X0, 0xD69000
	0x033BB570 LDR X0, [X0 + 0x810]
	0x033BB574 BL 0x1C16CF4
	0x033BB578 MOVZ W8, 0x1
	0x033BB57C STRB W8, [X21 + 0x1EC]
	0x033BB580 LDR X8, [X19]
	0x033BB584 LDR X9, [X20]
	0x033BB588 LDRB W11, [X8 + 0x130]
	0x033BB58C LDRB W10, [X9 + 0x130]
	0x033BB590 CMP W11, W10
	0x033BB594 B.CC 0x33BB5AC
	0x033BB598 LDR X11, [X8 + 0xC8]
	0x033BB59C ADD X10, X11, X10, 0x3, LSL
	0x033BB5A0 LDUR X10, [X10 - 0x8]
	0x033BB5A4 CMP X10, X9
	0x033BB5A8 B.EQ 0x33BB6E8
	0x033BB5AC LDR X9, [X8 + 0x288]
	0x033BB5B0 LDR X1, [X8 + 0x290]
	0x033BB5B4 MOV X0, X19
	0x033BB5B8 BLR X9
	0x033BB5BC TBNZ X0, 0x0, 0x33BB64C
	0x033BB5C0 ADRP X20, 0xD71000
	0x033BB5C4 ADRP X21, 0xD38000
	0x033BB5C8 LDR X20, [X20 + 0x368]
	0x033BB5CC LDR X21, [X21 + 0x6C0]
	0x033BB5D0 MOV X0, X19
	0x033BB5D4 MOV X1, X31
	0x033BB5D8 BL 0x3396028
	0x033BB5DC LDR X8, [X21]
	0x033BB5E0 LDR X20, [X20]
	0x033BB5E4 MOV X19, X0
	0x033BB5E8 LDR W9, [X8 + 0xE0]
	0x033BB5EC CBNZ W9, 0x33BB5F8
	0x033BB5F0 MOV X0, X8
	0x033BB5F4 BL 0x1C16DFC
	0x033BB5F8 MOV X0, X20
	0x033BB5FC MOV X1, X31
	0x033BB600 BL 0x338C698
	0x033BB604 CMP X19, X0
	0x033BB608 CSEL X20, X31, X19, EQ
	0x033BB60C B.EQ 0x33BB6A0
	0x033BB610 ADRP X8, 0xD69000
	0x033BB614 LDR X0, [X21]
	0x033BB618 LDR X8, [X8 + 0x810]
	0x033BB61C LDR W9, [X0 + 0xE0]
	0x033BB620 LDR X19, [X8]
	0x033BB624 CBNZ W9, 0x33BB62C
	0x033BB628 BL 0x1C16DFC
	0x033BB62C MOV X0, X19
	0x033BB630 MOV X1, X31
	0x033BB634 BL 0x338C698
	0x033BB638 CMP X20, X0
	0x033BB63C B.EQ 0x33BB6AC
	0x033BB640 LDP X20, X19, [X31 + 0x10]
	0x033BB644 LDP X30, X21, [X31], #0x20
	0x033BB648 RET
	0x033BB64C ADRP X0, 0xD38000
	0x033BB650 LDR X0, [X0 + 0x9D0]
	0x033BB654 BL 0x1C16D08
	0x033BB658 MOVZ W1, 0x1
	0x033BB65C BL 0x1C16D6C
	0x033BB660 MOV X20, X0
	0x033BB664 BL 0x19903C0
	0x033BB668 MOV X0, X20
	0x033BB66C MOV X1, X19
	0x033BB670 BL 0x19980B4
	0x033BB674 MOV X0, X20
	0x033BB678 MOV X1, X31
	0x033BB67C MOV X2, X19
	0x033BB680 BL 0x1993444
	0x033BB684 ADRP X0, 0xD71000
	0x033BB688 LDR X0, [X0 + 0x370]
	0x033BB68C BL 0x1C16D08
	0x033BB690 MOV X1, X20
	0x033BB694 MOV X2, X31
	0x033BB698 BL 0x33BFB40
	0x033BB69C B 0x33BB6FC
	0x033BB6A0 ADRP X0, 0xD71000
	0x033BB6A4 LDR X0, [X0 + 0x378]
	0x033BB6A8 B 0x33BB6B4
	0x033BB6AC ADRP X0, 0xD71000
	0x033BB6B0 LDR X0, [X0 + 0x380]
	0x033BB6B4 BL 0x1C16D08
	0x033BB6B8 MOV X1, X31
	0x033BB6BC BL 0x33BDD84
	0x033BB6C0 MOV X19, X0
	0x033BB6C4 ADRP X0, 0xD38000
	0x033BB6C8 LDR X0, [X0 + 0xB40]
	0x033BB6CC BL 0x1C16D08
	0x033BB6D0 BL 0x1C16F10
	0x033BB6D4 MOV X1, X19
	0x033BB6D8 MOV X2, X31
	0x033BB6DC MOV X20, X0
	0x033BB6E0 BL 0x3379A44
	0x033BB6E4 B 0x33BB720
	0x033BB6E8 ADRP X0, 0xD71000
	0x033BB6EC LDR X0, [X0 + 0x388]
	0x033BB6F0 BL 0x1C16D08
	0x033BB6F4 MOV X1, X31
	0x033BB6F8 BL 0x33BDD84
	0x033BB6FC MOV X19, X0
	0x033BB700 ADRP X0, 0xD40000
	0x033BB704 LDR X0, [X0 + 0x578]
	0x033BB708 BL 0x1C16D08
	0x033BB70C BL 0x1C16F10
	0x033BB710 MOV X1, X19
	0x033BB714 MOV X2, X31
	0x033BB718 MOV X20, X0
	0x033BB71C BL 0x3314A68
	0x033BB720 ADRP X0, 0xD71000
	0x033BB724 LDR X0, [X0 + 0x390]
	0x033BB728 BL 0x1C16D08
	0x033BB72C MOV X1, X0
	0x033BB730 MOV X0, X20
	0x033BB734 BL 0x1C16DEC
	0x033BB738 MOV W0, W31
	0x033BB73C RET
	0x033BB740 STP X30, X21, [X31 - 0x20]!
	0x033BB744 STP X20, X19, [X31 + 0x10]
	0x033BB748 MOV W20, W2
	0x033BB74C MOV W21, W1
	0x033BB750 MOV X19, X0
	0x033BB754 TBNZ X3, 0x0, 0x33BB760
	0x033BB758 MOV X0, X19
	0x033BB75C BL 0x33BB528
	0x033BB760 AND W2, W20, 0x1
	0x033BB764 MOV X0, X19
	0x033BB768 LDP X20, X19, [X31 + 0x10]
	0x033BB76C ORN W8, W31, W21, 0x0
	0x033BB770 AND W1, W8, 0x1
	0x033BB774 LDP X30, X21, [X31], #0x20
	0x033BB778 B 0x33BBAEC
	0x033BB77C STP X30, X23, [X31 - 0x30]!
	0x033BB780 STP X22, X21, [X31 + 0x10]
	0x033BB784 STP X20, X19, [X31 + 0x20]
	0x033BB788 ADRP X20, 0x1022000
	0x033BB78C LDRB W8, [X20 + 0x1EF]
	0x033BB790 MOV X19, X0
	0x033BB794 TBNZ X8, 0x0, 0x33BB7C4
	0x033BB798 ADRP X0, 0xD62000
	0x033BB79C LDR X0, [X0 + 0x978]
	0x033BB7A0 BL 0x1C16CF4
	0x033BB7A4 ADRP X0, 0xD71000
	0x033BB7A8 LDR X0, [X0 + 0x398]
	0x033BB7AC BL 0x1C16CF4
	0x033BB7B0 ADRP X0, 0xD6B000
	0x033BB7B4 LDR X0, [X0 + 0x1D8]
	0x033BB7B8 BL 0x1C16CF4
	0x033BB7BC MOVZ W8, 0x1
	0x033BB7C0 STRB W8, [X20 + 0x1EF]
	0x033BB7C4 ADRP X22, 0xD62000
	0x033BB7C8 LDR X8, [X19 + 0x18]
	0x033BB7CC LDR X22, [X22 + 0x978]
	0x033BB7D0 CBZ X8, 0x33BB7DC
	0x033BB7D4 LDR X20, [X8 + 0x18]
	0x033BB7D8 B 0x33BB800
	0x033BB7DC ADRP X8, 0xD71000
	0x033BB7E0 LDR X8, [X8 + 0x398]
	0x033BB7E4 LDR X0, [X8]
	0x033BB7E8 BL 0x1C16F10
	0x033BB7EC MOV X1, X31
	0x033BB7F0 MOV X21, X0
	0x033BB7F4 BL 0x33C2448
	0x033BB7F8 MOV X20, X31
	0x033BB7FC STR X21, [X19 + 0x18]
	0x033BB800 LDR X0, [X22]
	0x033BB804 LDR W8, [X0 + 0xE0]
	0x033BB808 CBNZ W8, 0x33BB810
	0x033BB80C BL 0x1C16DFC
	0x033BB810 MOV X0, X20
	0x033BB814 MOV X1, X31
	0x033BB818 MOV X2, X31
	0x033BB81C BL 0x32CC828
	0x033BB820 TBZ X0, 0x0, 0x33BB8E4
	0x033BB824 LDR X8, [X19]
	0x033BB828 MOVZ W1, 0x36
	0x033BB82C MOV X0, X19
	0x033BB830 LDR X9, [X8 + 0x648]
	0x033BB834 LDR X2, [X8 + 0x650]
	0x033BB838 BLR X9
	0x033BB83C CBZ X0, 0x33BB8F8
	0x033BB840 LDR W8, [X0 + 0x18]
	0x033BB844 MOV X21, X0
	0x033BB848 CMP W8, 0x1
	0x033BB84C B.LT 0x33BB8E4
	0x033BB850 MOV W22, W31
	0x033BB854 CMP W22, W8
	0x033BB858 B.CS 0x33BB8FC
	0x033BB85C ADD X23, X21, W22, 0x3, SXTW
	0x033BB860 LDR X0, [X23 + 0x20]!
	0x033BB864 CBZ X0, 0x33BB8F8
	0x033BB868 LDR X8, [X0]
	0x033BB86C LDR X9, [X8 + 0x368]
	0x033BB870 LDR X1, [X8 + 0x370]
	0x033BB874 BLR X9
	0x033BB878 CBZ W0, 0x33BB890
	0x033BB87C LDR W8, [X21 + 0x18]
	0x033BB880 ADD W22, W22, 0x1
	0x033BB884 CMP W22, W8
	0x033BB888 B.LT 0x33BB854
	0x033BB88C B 0x33BB8E4
	0x033BB890 LDR W8, [X21 + 0x18]
	0x033BB894 CMP W22, W8
	0x033BB898 B.CS 0x33BB8FC
	0x033BB89C LDR X20, [X23]
	0x033BB8A0 LDR X8, [X19 + 0x18]
	0x033BB8A4 CBZ X20, 0x33BB8DC
	0x033BB8A8 ADRP X10, 0xD6B000
	0x033BB8AC LDR X10, [X10 + 0x1D8]
	0x033BB8B0 LDR X9, [X20]
	0x033BB8B4 LDR X1, [X10]
	0x033BB8B8 LDRB W11, [X9 + 0x130]
	0x033BB8BC LDRB W10, [X1 + 0x130]
	0x033BB8C0 CMP W11, W10
	0x033BB8C4 B.CC 0x33BB900
	0x033BB8C8 LDR X9, [X9 + 0xC8]
	0x033BB8CC ADD X9, X9, X10, 0x3, LSL
	0x033BB8D0 LDUR X9, [X9 - 0x8]
	0x033BB8D4 CMP X9, X1
	0x033BB8D8 B.NE 0x33BB900
	0x033BB8DC CBZ X8, 0x33BB8F8
	0x033BB8E0 STR X20, [X8 + 0x18]
	0x033BB8E4 MOV X0, X20
	0x033BB8E8 LDP X20, X19, [X31 + 0x20]
	0x033BB8EC LDP X22, X21, [X31 + 0x10]
	0x033BB8F0 LDP X30, X23, [X31], #0x30
	0x033BB8F4 RET
	0x033BB8F8 BL 0x1C16F20
	0x033BB8FC BL 0x1C16F28
	0x033BB900 MOV X0, X20
	0x033BB904 BL 0x1C171E0
	0x033BB908 STP X30, X21, [X31 - 0x20]!
	0x033BB90C STP X20, X19, [X31 + 0x10]
	0x033BB910 ADRP X21, 0x1022000
	0x033BB914 ADRP X20, 0xD62000
	0x033BB918 LDRB W8, [X21 + 0x1F1]
	0x033BB91C LDR X20, [X20 + 0x978]
	0x033BB920 MOV X19, X0
	0x033BB924 TBNZ X8, 0x0, 0x33BB978
	0x033BB928 ADRP X0, 0xD62000
	0x033BB92C LDR X0, [X0 + 0x978]
	0x033BB930 BL 0x1C16CF4
	0x033BB934 ADRP X0, 0xD6B000
	0x033BB938 LDR X0, [X0 + 0x1D8]
	0x033BB93C BL 0x1C16CF4
	0x033BB940 ADRP X0, 0xD71000
	0x033BB944 LDR X0, [X0 + 0x3A0]
	0x033BB948 BL 0x1C16CF4
	0x033BB94C ADRP X0, 0xD71000
	0x033BB950 LDR X0, [X0 + 0x3A8]
	0x033BB954 BL 0x1C16CF4
	0x033BB958 ADRP X0, 0xD40000
	0x033BB95C LDR X0, [X0 + 0xC60]
	0x033BB960 BL 0x1C16CF4
	0x033BB964 ADRP X0, 0xD38000
	0x033BB968 LDR X0, [X0 + 0x6C0]
	0x033BB96C BL 0x1C16CF4
	0x033BB970 MOVZ W8, 0x1
	0x033BB974 STRB W8, [X21 + 0x1F1]
	0x033BB978 LDR X0, [X20]
	0x033BB97C LDR X20, [X19 + 0x28]
	0x033BB980 LDR W8, [X0 + 0xE0]
	0x033BB984 CBNZ W8, 0x33BB98C
	0x033BB988 BL 0x1C16DFC
	0x033BB98C MOV X0, X20
	0x033BB990 MOV X1, X31
	0x033BB994 MOV X2, X31
	0x033BB998 BL 0x32CC828
	0x033BB99C TBZ X0, 0x0, 0x33BBAA4
	0x033BB9A0 ADRP X8, 0xD40000
	0x033BB9A4 LDR X8, [X8 + 0xC60]
	0x033BB9A8 ADRP X20, 0xD71000
	0x033BB9AC ADRP X21, 0xD38000
	0x033BB9B0 MOVZ W1, 0x2
	0x033BB9B4 LDR X0, [X8]
	0x033BB9B8 LDR X20, [X20 + 0x3A0]
	0x033BB9BC LDR X21, [X21 + 0x6C0]
	0x033BB9C0 BL 0x1C16D6C
	0x033BB9C4 LDR X8, [X21]
	0x033BB9C8 LDR X21, [X20]
	0x033BB9CC MOV X20, X0
	0x033BB9D0 LDR W9, [X8 + 0xE0]
	0x033BB9D4 CBNZ W9, 0x33BB9E0
	0x033BB9D8 MOV X0, X8
	0x033BB9DC BL 0x1C16DFC
	0x033BB9E0 MOV X0, X21
	0x033BB9E4 MOV X1, X31
	0x033BB9E8 BL 0x338C698
	0x033BB9EC CBZ X20, 0x33BBAE8
	0x033BB9F0 MOV X21, X0
	0x033BB9F4 CBZ X0, 0x33BBA0C
	0x033BB9F8 LDR X8, [X20]
	0x033BB9FC MOV X0, X21
	0x033BBA00 LDR X1, [X8 + 0x40]
	0x033BBA04 BL 0x1C16E00
	0x033BBA08 CBZ X0, 0x33BBADC
	0x033BBA0C LDR W8, [X20 + 0x18]
	0x033BBA10 CBZ W8, 0x33BBAD8
	0x033BBA14 STR X21, [X20 + 0x20]
	0x033BBA18 ADRP X8, 0xD71000
	0x033BBA1C LDR X8, [X8 + 0x3A8]
	0x033BBA20 MOV X1, X31
	0x033BBA24 LDR X0, [X8]
	0x033BBA28 BL 0x338C698
	0x033BBA2C MOV X21, X0
	0x033BBA30 CBZ X0, 0x33BBA48
	0x033BBA34 LDR X8, [X20]
	0x033BBA38 MOV X0, X21
	0x033BBA3C LDR X1, [X8 + 0x40]
	0x033BBA40 BL 0x1C16E00
	0x033BBA44 CBZ X0, 0x33BBADC
	0x033BBA48 LDR W8, [X20 + 0x18]
	0x033BBA4C CMP W8, 0x1
	0x033BBA50 B.LS 0x33BBAD8
	0x033BBA54 MOVZ W1, 0x34
	0x033BBA58 MOVZ W3, 0x3
	0x033BBA5C MOV X0, X19
	0x033BBA60 MOV X2, X31
	0x033BBA64 MOV X4, X20
	0x033BBA68 MOV X5, X31
	0x033BBA6C MOV X6, X31
	0x033BBA70 STR X21, [X20 + 0x28]
	0x033BBA74 BL 0x3397440
	0x033BBA78 CBZ X0, 0x33BBAAC
	0x033BBA7C ADRP X8, 0xD6B000
	0x033BBA80 LDR X8, [X8 + 0x1D8]
	0x033BBA84 LDR X9, [X0]
	0x033BBA88 LDR X8, [X8]
	0x033BBA8C LDRB W11, [X9 + 0x130]
	0x033BBA90 LDRB W10, [X8 + 0x130]
	0x033BBA94 CMP W11, W10
	0x033BBA98 B.CS 0x33BBAB4
	0x033BBA9C MOV X0, X31
	0x033BBAA0 B 0x33BBAC8
	0x033BBAA4 LDR X0, [X19 + 0x28]
	0x033BBAA8 B 0x33BBACC
	0x033BBAAC STR X31, [X19 + 0x28]
	0x033BBAB0 B 0x33BBACC
	0x033BBAB4 LDR X9, [X9 + 0xC8]
	0x033BBAB8 ADD X9, X9, X10, 0x3, LSL
	0x033BBABC LDUR X9, [X9 - 0x8]
	0x033BBAC0 CMP X9, X8
	0x033BBAC4 CSEL X0, X0, X31, EQ
	0x033BBAC8 STR X0, [X19 + 0x28]
	0x033BBACC LDP X20, X19, [X31 + 0x10]
	0x033BBAD0 LDP X30, X21, [X31], #0x20
	0x033BBAD4 RET
	0x033BBAD8 BL 0x1C16F28
	0x033BBADC BL 0x1C16F44
	0x033BBAE0 MOV X1, X31
	0x033BBAE4 BL 0x1C16DEC
	0x033BBAE8 BL 0x1C16F20
	0x033BBAEC STP X30, X23, [X31 - 0x30]!
	0x033BBAF0 STP X22, X21, [X31 + 0x10]
	0x033BBAF4 STP X20, X19, [X31 + 0x20]
	0x033BBAF8 ADRP X21, 0x1022000
	0x033BBAFC LDRB W8, [X21 + 0x1F2]
	0x033BBB00 MOV W20, W2
	0x033BBB04 MOV W22, W1
	0x033BBB08 MOV X19, X0
	0x033BBB0C TBNZ X8, 0x0, 0x33BBB54
	0x033BBB10 ADRP X0, 0xD62000
	0x033BBB14 LDR X0, [X0 + 0x978]
	0x033BBB18 BL 0x1C16CF4
	0x033BBB1C ADRP X0, 0xD71000
	0x033BBB20 LDR X0, [X0 + 0x3B0]
	0x033BBB24 BL 0x1C16CF4
	0x033BBB28 ADRP X0, 0xD61000
	0x033BBB2C LDR X0, [X0 + 0x4E8]
	0x033BBB30 BL 0x1C16CF4
	0x033BBB34 ADRP X0, 0xD38000
	0x033BBB38 LDR X0, [X0 + 0x6C0]
	0x033BBB3C BL 0x1C16CF4
	0x033BBB40 ADRP X0, 0xD71000
	0x033BBB44 LDR X0, [X0 + 0x348]
	0x033BBB48 BL 0x1C16CF4
	0x033BBB4C MOVZ W8, 0x1
	0x033BBB50 STRB W8, [X21 + 0x1F2]
	0x033BBB54 ADRP X23, 0xD62000
	0x033BBB58 LDR X23, [X23 + 0x978]
	0x033BBB5C MOV X0, X19
	0x033BBB60 BL 0x33BB77C
	0x033BBB64 MOV X21, X0
	0x033BBB68 TBNZ X22, 0x0, 0x33BBBA8
	0x033BBB6C LDR X0, [X23]
	0x033BBB70 LDR W8, [X0 + 0xE0]
	0x033BBB74 CBNZ W8, 0x33BBB7C
	0x033BBB78 BL 0x1C16DFC
	0x033BBB7C MOV X0, X21
	0x033BBB80 MOV X1, X31
	0x033BBB84 MOV X2, X31
	0x033BBB88 BL 0x32CC854
	0x033BBB8C TBZ X0, 0x0, 0x33BBBA8
	0x033BBB90 CBZ X21, 0x33BBCF8
	0x033BBB94 MOV X0, X21
	0x033BBB98 MOV X1, X31
	0x033BBB9C BL 0x32CE454
	0x033BBBA0 ANDS W31, W0, 0x1
	0x033BBBA4 CSEL X21, X21, X31, NE
	0x033BBBA8 LDR X0, [X23]
	0x033BBBAC LDR W8, [X0 + 0xE0]
	0x033BBBB0 CBNZ W8, 0x33BBBB8
	0x033BBBB4 BL 0x1C16DFC
	0x033BBBB8 MOV X0, X21
	0x033BBBBC MOV X1, X31
	0x033BBBC0 MOV X2, X31
	0x033BBBC4 BL 0x32CC828
	0x033BBBC8 TBZ X0, 0x0, 0x33BBC84
	0x033BBBCC MOV X0, X19
	0x033BBBD0 MOV X1, X31
	0x033BBBD4 BL 0x3396028
	0x033BBBD8 ADRP X22, 0xD38000
	0x033BBBDC LDR X22, [X22 + 0x6C0]
	0x033BBBE0 ADRP X9, 0xD71000
	0x033BBBE4 MOV X20, X0
	0x033BBBE8 LDR X8, [X22]
	0x033BBBEC LDR X9, [X9 + 0x348]
	0x033BBBF0 LDR W10, [X8 + 0xE0]
	0x033BBBF4 LDR X21, [X9]
	0x033BBBF8 CBNZ W10, 0x33BBC04
	0x033BBBFC MOV X0, X8
	0x033BBC00 BL 0x1C16DFC
	0x033BBC04 MOV X0, X21
	0x033BBC08 MOV X1, X31
	0x033BBC0C BL 0x338C698
	0x033BBC10 CMP X20, X0
	0x033BBC14 B.EQ 0x33BBCBC
	0x033BBC18 ADRP X8, 0xD71000
	0x033BBC1C LDR X0, [X22]
	0x033BBC20 LDR X8, [X8 + 0x3B0]
	0x033BBC24 LDR W9, [X0 + 0xE0]
	0x033BBC28 LDR X21, [X8]
	0x033BBC2C CBNZ W9, 0x33BBC34
	0x033BBC30 BL 0x1C16DFC
	0x033BBC34 MOV X0, X21
	0x033BBC38 MOV X1, X31
	0x033BBC3C BL 0x338C698
	0x033BBC40 CMP X20, X0
	0x033BBC44 B.EQ 0x33BBCBC
	0x033BBC48 MOV X0, X19
	0x033BBC4C MOV X1, X31
	0x033BBC50 BL 0x33970C4
	0x033BBC54 TBZ X0, 0x0, 0x33BBCFC
	0x033BBC58 ADRP X8, 0xD61000
	0x033BBC5C LDR X8, [X8 + 0x4E8]
	0x033BBC60 LDR X0, [X8]
	0x033BBC64 LDR W8, [X0 + 0xE0]
	0x033BBC68 CBNZ W8, 0x33BBC70
	0x033BBC6C BL 0x1C16DFC
	0x033BBC70 MOV X0, X19
	0x033BBC74 LDP X20, X19, [X31 + 0x20]
	0x033BBC78 LDP X22, X21, [X31 + 0x10]
	0x033BBC7C LDP X30, X23, [X31], #0x30
	0x033BBC80 B 0x1C3C884
	0x033BBC84 MOV X0, X19
	0x033BBC88 MOV X1, X31
	0x033BBC8C BL 0x339703C
	0x033BBC90 TBNZ X0, 0x0, 0x33BBD54
	0x033BBC94 CBZ X21, 0x33BBCF8
	0x033BBC98 AND W3, W20, 0x1
	0x033BBC9C MOV X0, X21
	0x033BBCA0 LDP X20, X19, [X31 + 0x20]
	0x033BBCA4 LDP X22, X21, [X31 + 0x10]
	0x033BBCA8 MOV X1, X31
	0x033BBCAC MOV X2, X31
	0x033BBCB0 MOV X4, X31
	0x033BBCB4 LDP X30, X23, [X31], #0x30
	0x033BBCB8 B 0x32DCD0C
	0x033BBCBC ADRP X0, 0xD71000
	0x033BBCC0 LDR X0, [X0 + 0x3B8]
	0x033BBCC4 BL 0x1C16D08
	0x033BBCC8 MOV X1, X31
	0x033BBCCC BL 0x33BDD84
	0x033BBCD0 MOV X19, X0
	0x033BBCD4 ADRP X0, 0xD38000
	0x033BBCD8 LDR X0, [X0 + 0xB40]
	0x033BBCDC BL 0x1C16D08
	0x033BBCE0 BL 0x1C16F10
	0x033BBCE4 MOV X1, X19
	0x033BBCE8 MOV X2, X31
	0x033BBCEC MOV X20, X0
	0x033BBCF0 BL 0x3379A44
	0x033BBCF4 B 0x33BBDA0
	0x033BBCF8 BL 0x1C16F20
	0x033BBCFC LDR X8, [X19]
	0x033BBD00 MOV X0, X19
	0x033BBD04 LDR X9, [X8 + 0x2E8]
	0x033BBD08 LDR X1, [X8 + 0x2F0]
	0x033BBD0C BLR X9
	0x033BBD10 MOV X19, X0
	0x033BBD14 ADRP X0, 0xD71000
	0x033BBD18 LDR X0, [X0 + 0x3C0]
	0x033BBD1C BL 0x1C16D08
	0x033BBD20 MOV X1, X19
	0x033BBD24 MOV X2, X31
	0x033BBD28 BL 0x321B938
	0x033BBD2C MOV X19, X0
	0x033BBD30 ADRP X0, 0xD61000
	0x033BBD34 LDR X0, [X0 + 0x28]
	0x033BBD38 BL 0x1C16D08
	0x033BBD3C BL 0x1C16F10
	0x033BBD40 MOV X1, X19
	0x033BBD44 MOV X2, X31
	0x033BBD48 MOV X20, X0
	0x033BBD4C BL 0x3380078
	0x033BBD50 B 0x33BBDA0
	0x033BBD54 LDR X8, [X19]
	0x033BBD58 MOV X0, X19
	0x033BBD5C LDR X9, [X8 + 0x2E8]
	0x033BBD60 LDR X1, [X8 + 0x2F0]
	0x033BBD64 BLR X9
	0x033BBD68 MOV X19, X0
	0x033BBD6C ADRP X0, 0xD61000
	0x033BBD70 LDR X0, [X0 + 0x28]
	0x033BBD74 BL 0x1C16D08
	0x033BBD78 BL 0x1C16F10
	0x033BBD7C MOV X20, X0
	0x033BBD80 ADRP X0, 0xD71000
	0x033BBD84 LDR X0, [X0 + 0x3C8]
	0x033BBD88 BL 0x1C16D08
	0x033BBD8C MOV X1, X0
	0x033BBD90 MOV X0, X20
	0x033BBD94 MOV X2, X19
	0x033BBD98 MOV X3, X31
	0x033BBD9C BL 0x338009C
	0x033BBDA0 ADRP X0, 0xD71000
	0x033BBDA4 LDR X0, [X0 + 0x3D0]
	0x033BBDA8 BL 0x1C16D08
	0x033BBDAC MOV X1, X0
	0x033BBDB0 MOV X0, X20
	0x033BBDB4 BL 0x1C16DEC
	0x033BBDB8 B 0x1C3C884
	0x033BBDBC STR X30, [X31 - 0x40]!
	0x033BBDC0 STP X24, X23, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X29
	003 Move [X31+104], X30
	004 Move [X31+112], X28
	005 Move [X31+120], X27
	006 Move [X31+128], X26
	007 Move [X31+136], X25
	008 Move [X31+144], X24
	009 Move [X31+152], X23
	010 Move [X31+160], X22
	011 Move [X31+168], X21
	012 Move [X31+176], X20
	013 Move [X31+184], X19
	014 Move X20, 0x1024000
	015 Move W8, [X20+487]
	016 Move X21, X7
	017 Move X24, X6
	018 Move X28, X5
	019 Move X27, X4
	020 Move X22, X3
	021 Move W19, W2
	022 Move X23, X1
	023 Move X26, X0
	024 Move [X31+88], X5
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {97}
	029 Move X0, 0xD3A000
	030 Move X0, [X0+2504]
	031 Call 0x1C17CF4
	032 Move X0, 0xD73000
	033 Move X0, [X0+608]
	034 Call 0x1C17CF4
	035 Move X0, 0xD72000
	036 Move X0, [X0+3528]
	037 Call 0x1C17CF4
	038 Move X0, 0xD6B000
	039 Move X0, [X0+2944]
	040 Call 0x1C17CF4
	041 Move X0, 0xD6A000
	042 Move X0, [X0+3600]
	043 Call 0x1C17CF4
	044 Move X0, 0xD3B000
	045 Move X0, [X0+3672]
	046 Call 0x1C17CF4
	047 Move X0, 0xD6B000
	048 Move X0, [X0+2712]
	049 Call 0x1C17CF4
	050 Move X0, 0xD73000
	051 Move X0, [X0+616]
	052 Call 0x1C17CF4
	053 Move X0, 0xD73000
	054 Move X0, [X0+624]
	055 Call 0x1C17CF4
	056 Move X0, 0xD73000
	057 Move X0, [X0+632]
	058 Call 0x1C17CF4
	059 Move X0, 0xD6B000
	060 Move X0, [X0+2736]
	061 Call 0x1C17CF4
	062 Move X0, 0xD6D000
	063 Move X0, [X0+456]
	064 Call 0x1C17CF4
	065 Move X0, 0xD6B000
	066 Move X0, [X0+632]
	067 Call 0x1C17CF4
	068 Move X0, 0xD6D000
	069 Move X0, [X0+464]
	070 Call 0x1C17CF4
	071 Move X0, 0xD63000
	072 Move X0, [X0+1704]
	073 Call 0x1C17CF4
	074 Move X0, 0xD3A000
	075 Move X0, [X0+3824]
	076 Call 0x1C17CF4
	077 Move X0, 0xD6B000
	078 Move X0, [X0+2464]
	079 Call 0x1C17CF4
	080 Move X0, 0xD63000
	081 Move X0, [X0+1256]
	082 Call 0x1C17CF4
	083 Move X0, 0xD42000
	084 Move X0, [X0+3168]
	085 Call 0x1C17CF4
	086 Move X0, 0xD3A000
	087 Move X0, [X0+1728]
	088 Call 0x1C17CF4
	089 Move X0, 0xD73000
	090 Move X0, [X0+640]
	091 Call 0x1C17CF4
	092 Move X0, 0xD73000
	093 Move X0, [X0+648]
	094 Call 0x1C17CF4
	095 Move W8, 1
	096 Move [X20+487], W8
	097 Move [X31+80], X31
	098 Move X8, [X26]
	099 Move X0, X26
	100 Move X9, [X8+936]
	101 Move X1, [X8+944]
	102 NotImplemented "Instruction BLR not yet implemented."
	103 Move TEMP, X0
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfEqual {1021}
	107 And W31, W19, 0xFF00
	108 Move X25, [X31+192]
	109 And W31, W19, 512
	110 Move W8, 20
	111 Move W9, 28
	112 NotImplemented "Instruction CSEL not yet implemented."
	113 And W31, W19, 255
	114 NotImplemented "Instruction CSEL not yet implemented."
	115 Compare X25, 0
	116 JumpIfEqual {129}
	117 Move X8, [X25+24]
	118 Compare X28, 0
	119 JumpIfEqual {211}
	120 Move W9, [X28+24]
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move X8, 0xD73000
	123 Move X8, [X8+608]
	124 Move X0, X25
	125 Move X1, X31
	126 Move X2, [X8]
	127 Call Array.IndexOf, X0, X1
	128 Add W31, W0, 1
	129 Compare X28, 0
	130 JumpIfEqual {135}
	131 Move W8, [X28+24]
	132 Move [X31+76], W8
	133 Compare X22, 0
	134 JumpIfNotEqual {148}
	135 Move [X31+76], W31
	136 Compare X22, 0
	137 JumpIfNotEqual {148}
	138 Move X8, 0xD3A000
	139 Move X8, [X8+1728]
	140 Move X0, [X8]
	141 Move W8, [X0+224]
	142 Compare W8, 0
	143 JumpIfNotEqual {145}
	144 Call 0x1C17DFC
	145 Move X0, X31
	146 Call Type.get_DefaultBinder
	147 Move X22, X0
	148 Or W1, W20, W19
	149 Move TEMP, X19
	150 And TEMP, TEMP, 512
	151 Compare TEMP, 512
	152 JumpIfEqual {202}
	153 Or W8, W1, 0x2000
	154 And W31, W19, 0xC000
	155 Move [X31+40], X25
	156 Move [X31+48], X24
	157 NotImplemented "Instruction CSEL not yet implemented."
	158 Compare X23, 0
	159 JumpIfEqual {1067}
	160 Move W8, [X23+16]
	161 Compare W8, 0
	162 JumpIfEqual {173}
	163 Move X8, 0xD73000
	164 Move X8, [X8+648]
	165 Move X0, X23
	166 Move X2, X31
	167 Move X1, [X8]
	168 Call String.Equals, X0, X1
	169 Move TEMP, X0
	170 And TEMP, TEMP, 1
	171 Compare TEMP, 1
	172 JumpIfNotEqual {180}
	173 Move X0, X26
	174 Call RuntimeType.GetDefaultMemberName, X0
	175 Move X8, 0xD73000
	176 Move X8, [X8+640]
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move X8, [X8]
	179 NotImplemented "Instruction CSEL not yet implemented."
	180 And W8, W25, 2048
	181 Move W9, W25
	182 ShiftRight W9, 10
	183 And W9, W9, 1023
	184 Or W9, W9, W8
	185 Compare W9, 0
	186 JumpIfEqual {396}
	187 And W24, W25, 1024
	188 Compare W24, 0
	189 JumpIfNotEqual {215}
	190 Compare X28, 0
	191 JumpIfEqual {1092}
	192 Move TEMP, X25
	193 And TEMP, TEMP, 4096
	194 Compare TEMP, 4096
	195 JumpIfEqual {1112}
	196 Move TEMP, X25
	197 And TEMP, TEMP, 256
	198 Compare TEMP, 256
	199 JumpIfNotEqual {221}
	200 Move X0, 0xD73000
	201 Move X0, [X0+656]
	202 Move W8, 0x3D00
	203 And W31, W19, W8
	204 Move X0, X26
	205 Move X2, X22
	206 Move X3, X28
	207 Move X4, X21
	208 Move X5, X31
	209 Call Activator.CreateInstance, X0, X1, X2, X3, X4, X5
	210 Move X19, X0
	211 Compare X8, 0
	212 JumpIfEqual {122}
	213 Move X0, 0xD73000
	214 Move X0, [X0+664]
	215 Compare W8, 0
	216 JumpIfNotEqual {1110}
	217 Move TEMP, X25
	218 And TEMP, TEMP, 0x2000
	219 Compare TEMP, 0x2000
	220 JumpIfEqual {1114}
	221 Move X8, [X26]
	222 Move W2, 4
	223 Move X0, X26
	224 Move X1, X23
	225 Move X9, [X8+1720]
	226 Move X4, [X8+1728]
	227 Move W3, W25
	228 NotImplemented "Instruction BLR not yet implemented."
	229 Move X8, 0xD6B000
	230 Move X8, [X8+2944]
	231 Move X1, [X8]
	232 Call 0x1C17E00
	233 Compare X0, 0
	234 JumpIfEqual {1007}
	235 Move X8, [X0+24]
	236 Move X19, X0
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Move X29, [X19+32]
	239 Compare X8, 0
	240 JumpIfEqual {249}
	241 Compare W24, 0
	242 JumpIfNotEqual {257}
	243 Compare X28, 0
	244 JumpIfEqual {1007}
	245 Move W8, [X28+24]
	246 Compare W8, 0
	247 JumpIfEqual {1008}
	248 Add X8, X28, 32
	249 Move X0, X31
	250 Move X1, X31
	251 Move X2, X31
	252 Call FieldInfo.op_Inequality, X0, X1
	253 Move TEMP, X0
	254 And TEMP, TEMP, 1
	255 Compare TEMP, 1
	256 JumpIfNotEqual {393}
	257 Move X20, 0xD72000
	258 Move X20, [X20+3528]
	259 Move X0, [X20]
	260 Move W8, [X0+224]
	261 Compare W8, 0
	262 JumpIfNotEqual {265}
	263 Call 0x1C17DFC
	264 Move X0, [X20]
	265 Move X8, [X0+184]
	266 Compare X22, 0
	267 JumpIfEqual {1007}
	268 Move X9, [X22]
	269 Move X3, [X8]
	270 Move X0, X22
	271 Move W1, W25
	272 Move X8, [X9+376]
	273 Move X5, [X9+384]
	274 Move X2, X19
	275 Move X4, X21
	276 NotImplemented "Instruction BLR not yet implemented."
	277 Move X29, X0
	278 Move X0, X29
	279 Move X1, X31
	280 Move X2, X31
	281 Call FieldInfo.op_Inequality, X0, X1
	282 Move TEMP, X0
	283 And TEMP, TEMP, 1
	284 Compare TEMP, 1
	285 JumpIfNotEqual {393}
	286 Compare X29, 0
	287 JumpIfEqual {1007}
	288 Move X8, [X29]
	289 Move X0, X29
	290 Move X9, [X8+600]
	291 Move X1, [X8+608]
	292 NotImplemented "Instruction BLR not yet implemented."
	293 Compare X0, 0
	294 JumpIfEqual {1007}
	295 Move X1, X31
	296 Call Type.get_IsArray, X0
	297 Move TEMP, X0
	298 And TEMP, TEMP, 1
	299 Compare TEMP, 1
	300 JumpIfEqual {322}
	301 Move X8, [X29]
	302 Move X0, X29
	303 Move X9, [X8+600]
	304 Move X1, [X8+608]
	305 NotImplemented "Instruction BLR not yet implemented."
	306 Move X8, 0xD39000
	307 Move X8, [X8+1728]
	308 Move X9, 0xD62000
	309 Move X19, X0
	310 Move X8, [X8]
	311 Move X9, [X9+1704]
	312 Move W10, [X8+224]
	313 Move X20, [X9]
	314 Compare W10, 0
	315 JumpIfNotEqual {318}
	316 Move X0, X8
	317 Call 0x1C17DFC
	318 Move X0, X20
	319 Move X1, X31
	320 Call Type.GetTypeFromHandle, X0
	321 NotImplemented "Instruction CMP not yet implemented."
	322 Move W9, [X31+76]
	323 NotImplemented "Instruction CMP not yet implemented."
	324 NotImplemented "Instruction CSET not yet implemented."
	325 Subtract W19, W9, W8
	326 NotImplemented "Instruction CMP not yet implemented."
	327 Move X8, 0xD3A000
	328 Move X8, [X8+3672]
	329 Move W1, W19
	330 Move X0, [X8]
	331 Call 0x1C17D6C
	332 Compare X28, 0
	333 JumpIfEqual {392}
	334 Move X25, 0xD69000
	335 Move X25, [X25+3600]
	336 Move X20, X0
	337 Move W8, W31
	338 Move W9, [X28+24]
	339 NotImplemented "Instruction CMP not yet implemented."
	340 Move X26, W8
	341 Add X8, X28, X26
	342 Move X23, [X8+32]
	343 Compare X23, 0
	344 JumpIfEqual {1013}
	345 Move X21, [X25]
	346 Move X0, X23
	347 Move X1, X21
	348 Call 0x1C17E00
	349 Compare X0, 0
	350 JumpIfEqual {1014}
	351 Move X22, [X25]
	352 Move X0, X23
	353 Move X1, X22
	354 Call 0x1C17E00
	355 Move X21, X0
	356 Compare X0, 0
	357 JumpIfEqual {1017}
	358 Move X8, [X21]
	359 NotImplemented "Instruction LDRH not yet implemented."
	360 Compare X9, 0
	361 JumpIfEqual {368}
	362 Move X10, [X8+176]
	363 Add X10, X10, 8
	364 NotImplemented "Instruction LDUR not yet implemented."
	365 NotImplemented "Instruction CMP not yet implemented."
	366 Subtract X9, X9, 1
	367 Add X10, X10, 16
	368 Move W2, 7
	369 Move X0, X21
	370 Move X1, X22
	371 Call 0x1C5D788
	372 Move W9, [X10]
	373 Add W9, W9, 7
	374 Add X8, X8, W9
	375 Add X0, X8, 312
	376 Move X8, [X0]
	377 Move X2, [X0+8]
	378 Move X0, X21
	379 Move X1, X31
	380 NotImplemented "Instruction BLR not yet implemented."
	381 Compare X20, 0
	382 JumpIfEqual {1012}
	383 Move W8, [X20+24]
	384 NotImplemented "Instruction CMP not yet implemented."
	385 Add W8, W26, 1
	386 Add X9, X20, X26
	387 NotImplemented "Instruction CMP not yet implemented."
	388 Move [X9+32], W0
	389 Move X28, [X31+88]
	390 Compare X28, 0
	391 JumpIfNotEqual {338}
	392 Call 0x1C17F20
	393 Move W8, 0xF300
	394 NotImplemented "Instruction MOVK not yet implemented."
	395 And W31, W25, W8
	396 Move [X31+64], X26
	397 Move [X31+24], X22
	398 Move [X31+32], X21
	399 And W26, W25, 0x2000
	400 Move W21, W25
	401 ShiftRight W21, 12
	402 And W21, W21, 4095
	403 Or W8, W21, W26
	404 Compare W8, 0
	405 JumpIfEqual {418}
	406 Move TEMP, X25
	407 And TEMP, TEMP, 4096
	408 Compare TEMP, 4096
	409 JumpIfEqual {416}
	410 Move TEMP, X25
	411 And TEMP, TEMP, 256
	412 Compare TEMP, 256
	413 JumpIfNotEqual {418}
	414 Move X0, 0xD72000
	415 Move X0, [X0+672]
	416 Compare W26, 0
	417 JumpIfNotEqual {1116}
	418 Move [X31+56], X27
	419 Move TEMP, X25
	420 And TEMP, TEMP, 256
	421 Compare TEMP, 256
	422 JumpIfEqual {425}
	423 Move X20, X31
	424 Move X28, X31
	425 Move X0, [X31+64]
	426 Move W2, 8
	427 Move X1, X23
	428 Move W3, W25
	429 Move X8, [X0]
	430 Move X9, [X8+1720]
	431 Move X4, [X8+1728]
	432 NotImplemented "Instruction BLR not yet implemented."
	433 Move X8, 0xD6C000
	434 Move X8, [X8+456]
	435 Move X1, [X8]
	436 Call 0x1C17E00
	437 Compare X0, 0
	438 JumpIfEqual {1007}
	439 Move X8, [X0+24]
	440 Move X24, X0
	441 Move [X31+12], W21
	442 Move [X31+16], X23
	443 NotImplemented "Instruction CMP not yet implemented."
	444 Move X22, 0xD41000
	445 Move X27, 0xD62000
	446 Move X22, [X22+3168]
	447 Move X27, [X27+1256]
	448 Move X19, X31
	449 Move X20, X31
	450 Move X23, X31
	451 And X8, X8, 0
	452 Add X21, X24, 32
	453 NotImplemented "Instruction CMP not yet implemented."
	454 Move X0, [X22]
	455 Move W1, [X31+76]
	456 Move X28, [X21]
	457 Call 0x1C17D6C
	458 Move X8, [X27]
	459 Move X29, X0
	460 Move W9, [X8+224]
	461 Compare W9, 0
	462 JumpIfEqual {465}
	463 Compare X28, 0
	464 JumpIfNotEqual {469}
	465 Move X0, X8
	466 Call 0x1C17DFC
	467 Compare X28, 0
	468 JumpIfEqual {480}
	469 Move X9, 0xD6A000
	470 Move X8, [X28]
	471 Move X9, [X9+2464]
	472 Move W10, [X8+304]
	473 Move X1, [X9]
	474 Move W9, [X1+304]
	475 NotImplemented "Instruction CMP not yet implemented."
	476 Move X8, [X8+200]
	477 Add X8, X8, X9
	478 NotImplemented "Instruction LDUR not yet implemented."
	479 NotImplemented "Instruction CMP not yet implemented."
	480 Move W2, 3
	481 Move X0, X28
	482 Move W1, W25
	483 Move X3, X29
	484 Call RuntimeType.FilterApplyMethodInfo, X0, X1, X2, X3
	485 Move TEMP, X0
	486 And TEMP, TEMP, 1
	487 Compare TEMP, 1
	488 JumpIfNotEqual {556}
	489 Move X0, X20
	490 Move X1, X31
	491 Move X2, X31
	492 Call MethodInfo.op_Equality, X0, X1
	493 Move TEMP, X0
	494 And TEMP, TEMP, 1
	495 Compare TEMP, 1
	496 JumpIfNotEqual {498}
	497 Move X20, X28
	498 Compare X19, 0
	499 JumpIfNotEqual {534}
	500 Move X8, 0xD6A000
	501 Move X8, [X8+2736]
	502 Move X0, [X8]
	503 Call 0x1C17F10
	504 Move X8, 0xD72000
	505 Move W1, [X24+24]
	506 Move X8, [X8+624]
	507 Move X19, X0
	508 Move X2, [X8]
	509 Call List`1<Object>..ctor, X0, X1
	510 Compare X19, 0
	511 JumpIfEqual {1007}
	512 Move X9, 0xD6A000
	513 Move W10, [X19+28]
	514 Move X8, [X19+16]
	515 Move X9, [X9+2712]
	516 Add W10, W10, 1
	517 Move X9, [X9]
	518 Move [X19+28], W10
	519 Compare X8, 0
	520 JumpIfEqual {1007}
	521 NotImplemented "Instruction LDRSW not yet implemented."
	522 Move W11, [X8+24]
	523 NotImplemented "Instruction CMP not yet implemented."
	524 Add W9, W10, 1
	525 Add X8, X8, X10
	526 Move [X19+24], W9
	527 Move [X8+32], X20
	528 Move X8, [X9+32]
	529 Move X0, X19
	530 Move X1, X20
	531 Move X8, [X8+192]
	532 Move X2, [X8+112]
	533 Call List`1<Object>.AddWithResize, X0, X1
	534 Move X9, 0xD6A000
	535 Move W10, [X19+28]
	536 Move X8, [X19+16]
	537 Move X9, [X9+2712]
	538 Add W10, W10, 1
	539 Move X9, [X9]
	540 Move [X19+28], W10
	541 Compare X8, 0
	542 JumpIfEqual {1007}
	543 NotImplemented "Instruction LDRSW not yet implemented."
	544 Move W11, [X8+24]
	545 NotImplemented "Instruction CMP not yet implemented."
	546 Add W9, W10, 1
	547 Add X8, X8, X10
	548 Move [X19+24], W9
	549 Move [X8+32], X28
	550 Move X8, [X9+32]
	551 Move X0, X19
	552 Move X1, X28
	553 Move X8, [X8+192]
	554 Move X2, [X8+112]
	555 Call List`1<Object>.AddWithResize, X0, X1
	556 Move W8, [X24+24]
	557 Add X23, X23, 1
	558 NotImplemented "Instruction CMP not yet implemented."
	559 Compare X19, 0
	560 JumpIfEqual {596}
	561 Move X8, 0xD6C000
	562 Move W1, [X19+24]
	563 Move X8, [X8+456]
	564 Move X0, [X8]
	565 Call 0x1C17D6C
	566 Move X8, 0xD72000
	567 Move X8, [X8+616]
	568 Move X28, X0
	569 Move X0, X19
	570 Move X1, X28
	571 Move X2, [X8]
	572 Call List`1<Object>.CopyTo, X0, X1
	573 Compare W24, 0
	574 JumpIfNotEqual {968}
	575 Move W8, [X31+76]
	576 NotImplemented "Instruction CMP not yet implemented."
	577 Compare X28, 0
	578 JumpIfEqual {1007}
	579 Move W8, [X28+24]
	580 Compare W8, 0
	581 JumpIfEqual {1008}
	582 Move X8, [X29]
	583 Move X2, [X28+32]
	584 Move X0, X29
	585 Move X1, X27
	586 Move X9, [X8+744]
	587 Move X6, [X8+752]
	588 Move W3, W25
	589 Move X4, X22
	590 Move X5, X21
	591 NotImplemented "Instruction BLR not yet implemented."
	592 Move X20, X31
	593 Move X19, X31
	594 Compare X19, 0
	595 JumpIfNotEqual {561}
	596 Move X28, X31
	597 Move X27, [X31+56]
	598 Move X23, [X31+16]
	599 Move W21, [X31+12]
	600 Move X0, X20
	601 Move X1, X31
	602 Move X2, X31
	603 Move W19, W25
	604 ShiftRight W19, 13
	605 And W19, W19, 0x1FFF
	606 Call MethodInfo.op_Equality, X0, X1
	607 And W8, W0, W21
	608 Or W8, W8, W19
	609 Compare W8, 0
	610 JumpIfEqual {780}
	611 Move X0, [X31+64]
	612 Move W2, 16
	613 Move X1, X23
	614 Move W3, W25
	615 Move X8, [X0]
	616 Move X9, [X8+1720]
	617 Move X4, [X8+1728]
	618 NotImplemented "Instruction BLR not yet implemented."
	619 Move X8, 0xD6C000
	620 Move X8, [X8+464]
	621 Move X1, [X8]
	622 Call 0x1C17E00
	623 Compare X0, 0
	624 JumpIfEqual {1007}
	625 Move W8, [X0+24]
	626 Move X24, X0
	627 Move X27, X23
	628 Move [X31+16], X28
	629 NotImplemented "Instruction CMP not yet implemented."
	630 Move X23, 0xD41000
	631 Move X29, 0xD62000
	632 Move X23, [X23+3168]
	633 Move X29, [X29+1256]
	634 Move W21, W31
	635 Move X19, X31
	636 NotImplemented "Instruction CMP not yet implemented."
	637 Add X8, X24, W21
	638 Move X0, [X8+32]
	639 Compare X0, 0
	640 JumpIfEqual {1007}
	641 Move X8, [X0]
	642 Compare W26, 0
	643 JumpIfNotEqual {646}
	644 Move X9, [X8+664]
	645 Move X2, [X8+672]
	646 Move X9, [X8+696]
	647 Move X2, [X8+704]
	648 Move W1, 1
	649 NotImplemented "Instruction BLR not yet implemented."
	650 Move X1, X31
	651 Move X2, X31
	652 Move X28, X0
	653 Call MethodInfo.op_Equality, X0, X1
	654 Move TEMP, X0
	655 And TEMP, TEMP, 1
	656 Compare TEMP, 1
	657 JumpIfEqual {759}
	658 Move X0, [X23]
	659 Move W1, [X31+76]
	660 Call 0x1C17D6C
	661 Move X8, [X29]
	662 Move X22, X0
	663 Move W9, [X8+224]
	664 Compare W9, 0
	665 JumpIfEqual {668}
	666 Compare X28, 0
	667 JumpIfNotEqual {672}
	668 Move X0, X8
	669 Call 0x1C17DFC
	670 Compare X28, 0
	671 JumpIfEqual {683}
	672 Move X9, 0xD6A000
	673 Move X8, [X28]
	674 Move X9, [X9+2464]
	675 Move W10, [X8+304]
	676 Move X1, [X9]
	677 Move W9, [X1+304]
	678 NotImplemented "Instruction CMP not yet implemented."
	679 Move X8, [X8+200]
	680 Add X8, X8, X9
	681 NotImplemented "Instruction LDUR not yet implemented."
	682 NotImplemented "Instruction CMP not yet implemented."
	683 Move W2, 3
	684 Move X0, X28
	685 Move W1, W25
	686 Move X3, X22
	687 Call RuntimeType.FilterApplyMethodInfo, X0, X1, X2, X3
	688 Move TEMP, X0
	689 And TEMP, TEMP, 1
	690 Compare TEMP, 1
	691 JumpIfNotEqual {759}
	692 Move X0, X20
	693 Move X1, X31
	694 Move X2, X31
	695 Call MethodInfo.op_Equality, X0, X1
	696 Move TEMP, X0
	697 And TEMP, TEMP, 1
	698 Compare TEMP, 1
	699 JumpIfNotEqual {701}
	700 Move X20, X28
	701 Compare X19, 0
	702 JumpIfNotEqual {737}
	703 Move X8, 0xD6A000
	704 Move X8, [X8+2736]
	705 Move X0, [X8]
	706 Call 0x1C17F10
	707 Move X8, 0xD72000
	708 Move W1, [X24+24]
	709 Move X8, [X8+624]
	710 Move X19, X0
	711 Move X2, [X8]
	712 Call List`1<Object>..ctor, X0, X1
	713 Compare X19, 0
	714 JumpIfEqual {1007}
	715 Move X9, 0xD6A000
	716 Move W10, [X19+28]
	717 Move X8, [X19+16]
	718 Move X9, [X9+2712]
	719 Add W10, W10, 1
	720 Move X9, [X9]
	721 Move [X19+28], W10
	722 Compare X8, 0
	723 JumpIfEqual {1007}
	724 NotImplemented "Instruction LDRSW not yet implemented."
	725 Move W11, [X8+24]
	726 NotImplemented "Instruction CMP not yet implemented."
	727 Add W9, W10, 1
	728 Add X8, X8, X10
	729 Move [X19+24], W9
	730 Move [X8+32], X20
	731 Move X8, [X9+32]
	732 Move X0, X19
	733 Move X1, X20
	734 Move X8, [X8+192]
	735 Move X2, [X8+112]
	736 Call List`1<Object>.AddWithResize, X0, X1
	737 Move X9, 0xD6A000
	738 Move W10, [X19+28]
	739 Move X8, [X19+16]
	740 Move X9, [X9+2712]
	741 Add W10, W10, 1
	742 Move X9, [X9]
	743 Move [X19+28], W10
	744 Compare X8, 0
	745 JumpIfEqual {1007}
	746 NotImplemented "Instruction LDRSW not yet implemented."
	747 Move W11, [X8+24]
	748 NotImplemented "Instruction CMP not yet implemented."
	749 Add W9, W10, 1
	750 Add X8, X8, X10
	751 Move [X19+24], W9
	752 Move [X8+32], X28
	753 Move X8, [X9+32]
	754 Move X0, X19
	755 Move X1, X28
	756 Move X8, [X8+192]
	757 Move X2, [X8+112]
	758 Call List`1<Object>.AddWithResize, X0, X1
	759 Move W8, [X24+24]
	760 Add W21, W21, 1
	761 NotImplemented "Instruction CMP not yet implemented."
	762 Compare X19, 0
	763 JumpIfEqual {785}
	764 Move X8, 0xD6C000
	765 Move W1, [X19+24]
	766 Move X8, [X8+456]
	767 Move X0, [X8]
	768 Call 0x1C17D6C
	769 Move X8, 0xD72000
	770 Move X8, [X8+616]
	771 Move X28, X0
	772 Move X0, X19
	773 Move X1, X28
	774 Move X2, [X8]
	775 Call List`1<Object>.CopyTo, X0, X1
	776 Move X22, [X31+24]
	777 Move X21, [X31+32]
	778 Move X23, X27
	779 Move X27, [X31+56]
	780 Move X22, [X31+24]
	781 Move X21, [X31+32]
	782 Move X19, X31
	783 Compare X19, 0
	784 JumpIfNotEqual {764}
	785 Move X22, [X31+24]
	786 Move X21, [X31+32]
	787 Move X23, X27
	788 Move X27, [X31+56]
	789 Move X28, [X31+16]
	790 Move X0, X20
	791 Move X1, X31
	792 Move X2, X31
	793 Call MethodInfo.op_Inequality, X0, X1
	794 Move TEMP, X0
	795 And TEMP, TEMP, 1
	796 Compare TEMP, 1
	797 JumpIfNotEqual {1037}
	798 Move W8, [X31+76]
	799 Compare W8, 0
	800 JumpIfNotEqual {829}
	801 Compare X28, 0
	802 JumpIfNotEqual {829}
	803 Compare X20, 0
	804 JumpIfEqual {1007}
	805 Move X8, [X20]
	806 Move X0, X20
	807 Move X9, [X8+920]
	808 Move X1, [X8+928]
	809 NotImplemented "Instruction BLR not yet implemented."
	810 Compare X0, 0
	811 JumpIfEqual {1007}
	812 Move TEMP, X25
	813 And TEMP, TEMP, 0x40000
	814 Compare TEMP, 0x40000
	815 JumpIfEqual {829}
	816 Move X8, [X0+24]
	817 Compare X8, 0
	818 JumpIfNotEqual {829}
	819 Move X8, [X20]
	820 Move X4, [X31+88]
	821 Move X0, X20
	822 Move X1, X27
	823 Move X9, [X8+808]
	824 Move X6, [X8+816]
	825 Move W2, W25
	826 Move X3, X22
	827 Move X5, X21
	828 NotImplemented "Instruction BLR not yet implemented."
	829 Compare X28, 0
	830 JumpIfNotEqual {851}
	831 Move X8, 0xD6C000
	832 Move X8, [X8+456]
	833 Move W1, 1
	834 Move X0, [X8]
	835 Call 0x1C17D6C
	836 Compare X0, 0
	837 JumpIfEqual {1007}
	838 Move X28, X0
	839 Compare X20, 0
	840 JumpIfEqual {847}
	841 Move X8, [X28]
	842 Move X0, X20
	843 Move X1, [X8+64]
	844 Call 0x1C17E00
	845 Compare X0, 0
	846 JumpIfEqual {1119}
	847 Move W8, [X28+24]
	848 Compare W8, 0
	849 JumpIfEqual {1008}
	850 Move [X28+32], X20
	851 Move X8, [X31+88]
	852 Compare X8, 0
	853 JumpIfNotEqual {885}
	854 Move X8, 0xD39000
	855 Move X8, [X8+2504]
	856 Move X19, [X8]
	857 Move X8, [X19+56]
	858 Compare X8, 0
	859 JumpIfNotEqual {863}
	860 Move X0, X19
	861 Call 0x1C5D6E0
	862 Move X8, [X19+56]
	863 Move X0, [X8+16]
	864 Move W8, [X0+309]
	865 Move TEMP, X8
	866 And TEMP, TEMP, 1
	867 Compare TEMP, 1
	868 JumpIfEqual {870}
	869 Call 0x1C5D684
	870 Move W8, [X0+224]
	871 Compare W8, 0
	872 JumpIfNotEqual {874}
	873 Call 0x1C17DFC
	874 Move X8, [X19+56]
	875 Move X0, [X8+16]
	876 Move W8, [X0+309]
	877 Move TEMP, X8
	878 And TEMP, TEMP, 1
	879 Compare TEMP, 1
	880 JumpIfEqual {882}
	881 Call 0x1C5D684
	882 Move X8, [X0+184]
	883 Move X8, [X8]
	884 Move [X31+88], X8
	885 Move [X31+80], X31
	886 Compare X22, 0
	887 JumpIfEqual {1076}
	888 Move X8, [X22]
	889 Move X9, [X8+392]
	890 Move X8, [X8+400]
	891 Move X6, [X31+40]
	892 Move X4, [X31+48]
	893 Add X3, X31, 88
	894 Add X7, X31, 80
	895 Move X0, X22
	896 Move W1, W25
	897 Move X2, X28
	898 Move X5, X21
	899 Move [X31], X8
	900 NotImplemented "Instruction BLR not yet implemented."
	901 Move X19, X0
	902 Move X0, X19
	903 Move X1, X31
	904 Move X2, X31
	905 Call MethodBase.op_Equality, X0, X1
	906 Move TEMP, X0
	907 And TEMP, TEMP, 1
	908 Compare TEMP, 1
	909 JumpIfEqual {1037}
	910 Compare X19, 0
	911 JumpIfEqual {1007}
	912 Move X9, 0xD6A000
	913 Move X9, [X9+632]
	914 Move X8, [X19]
	915 Move X1, [X9]
	916 Move W10, [X8+304]
	917 Move W9, [X1+304]
	918 NotImplemented "Instruction CMP not yet implemented."
	919 Move X10, [X8+200]
	920 Add X9, X10, X9
	921 NotImplemented "Instruction LDUR not yet implemented."
	922 NotImplemented "Instruction CMP not yet implemented."
	923 Move X4, [X31+88]
	924 Move X9, [X8+808]
	925 Move X6, [X8+816]
	926 Move X0, X19
	927 Move X1, X27
	928 Move W2, W25
	929 Move X3, X22
	930 Move X5, X21
	931 NotImplemented "Instruction BLR not yet implemented."
	932 Move X2, [X31+80]
	933 Move X19, X0
	934 Compare X2, 0
	935 JumpIfEqual {992}
	936 Compare X22, 0
	937 JumpIfEqual {1007}
	938 Move X8, [X22]
	939 Add X1, X31, 88
	940 Move X0, X22
	941 Move X9, [X8+424]
	942 Move X3, [X8+432]
	943 NotImplemented "Instruction BLR not yet implemented."
	944 Move X8, [X29]
	945 Move X0, X29
	946 Move X1, X27
	947 Move X9, [X8+712]
	948 Move X2, [X8+720]
	949 NotImplemented "Instruction BLR not yet implemented."
	950 Compare X0, 0
	951 JumpIfEqual {977}
	952 Move X9, 0xD39000
	953 Move X9, [X9+3824]
	954 Move X8, [X0]
	955 Move X1, [X9]
	956 Move W10, [X8+304]
	957 Move W9, [X1+304]
	958 NotImplemented "Instruction CMP not yet implemented."
	959 Move X8, [X8+200]
	960 Add X8, X8, X9
	961 NotImplemented "Instruction LDUR not yet implemented."
	962 NotImplemented "Instruction CMP not yet implemented."
	963 Compare W24, 0
	964 JumpIfEqual {979}
	965 Move X1, X20
	966 Move X2, X31
	967 Call Array.GetValue, X0, X1
	968 Move W8, [X31+76]
	969 Compare W8, 0
	970 JumpIfNotEqual {1124}
	971 Move X8, [X29]
	972 Move X0, X29
	973 Move X1, X27
	974 Move X9, [X8+712]
	975 Move X2, [X8+720]
	976 NotImplemented "Instruction BLR not yet implemented."
	977 Compare W24, 0
	978 JumpIfNotEqual {1007}
	979 Move X8, [X31+88]
	980 Compare X8, 0
	981 JumpIfEqual {1007}
	982 Move W9, [X8+24]
	983 NotImplemented "Instruction CMP not yet implemented."
	984 Compare X0, 0
	985 JumpIfEqual {1007}
	986 Add X8, X8, W19
	987 Move X1, [X8+32]
	988 Move X2, X20
	989 Move X3, X31
	990 Call Array.SetValue, X0, X1, X2
	991 Move X19, X31
	992 Move X0, X19
	993 Move X20, [X31+176]
	994 Move X19, [X31+184]
	995 Move X22, [X31+160]
	996 Move X21, [X31+168]
	997 Move X24, [X31+144]
	998 Move X23, [X31+152]
	999 Move X26, [X31+128]
	1000 Move X25, [X31+136]
	1001 Move X28, [X31+112]
	1002 Move X27, [X31+120]
	1003 Move X29, [X31+96]
	1004 Move X30, [X31+104]
	1005 Add X31, X31, 192
	1006 Return X0
	1007 Call 0x1C17F20
	1008 Call 0x1C17F28
	1009 Move X0, X28
	1010 Call 0x1C181E0
	1011 Call 0x1C17F28
	1012 Call 0x1C17F20
	1013 Call 0x1C17F20
	1014 Move X0, X23
	1015 Move X1, X21
	1016 Call 0x1C181E0
	1017 Move X0, X23
	1018 Move X1, X22
	1019 Call 0x1C181E0
	1020 Call 0x1C17F28
	1021 Move X0, 0xD72000
	1022 Move X0, [X0+680]
	1023 Call 0x1C17D08
	1024 Move X1, X31
	1025 Call Environment.GetResourceString, X0
	1026 Move X19, X0
	1027 Move X0, 0xD39000
	1028 Move X0, [X0+1456]
	1029 Call 0x1C17D08
	1030 Call 0x1C17F10
	1031 Move X1, X19
	1032 Move X2, X31
	1033 Move X20, X0
	1034 Call InvalidOperationException..ctor, X0, X1
	1035 Move X0, 0xD72000
	1036 Move X0, [X0+688]
	1037 Move X0, [X31+64]
	1038 Move X8, [X0]
	1039 Move X9, [X8+744]
	1040 Move X1, [X8+752]
	1041 NotImplemented "Instruction BLR not yet implemented."
	1042 Move X19, X0
	1043 Move X0, 0xD62000
	1044 Move X0, [X0+40]
	1045 Call 0x1C17D08
	1046 Call 0x1C17F10
	1047 Move X1, X19
	1048 Move X2, X23
	1049 Move X3, X31
	1050 Move X20, X0
	1051 Call MissingMethodException..ctor, X0, X1, X2
	1052 Move X0, 0xD72000
	1053 Move X0, [X0+696]
	1054 Call 0x1C17D08
	1055 Move X1, X31
	1056 Call Environment.GetResourceString, X0
	1057 Move X19, X0
	1058 Move X0, 0xD41000
	1059 Move X0, [X0+1400]
	1060 Call 0x1C17D08
	1061 Call 0x1C17F10
	1062 Move X20, X0
	1063 Move X0, 0xD72000
	1064 Move X0, [X0+704]
	1065 Move X0, X19
	1066 Call 0x1C181E0
	1067 Move X0, 0xD3E000
	1068 Move X0, [X0+1320]
	1069 Call 0x1C17D08
	1070 Call 0x1C17F10
	1071 Move X19, X0
	1072 Move X0, 0xD41000
	1073 Move X0, [X0+1416]
	1074 Move X0, 0xD72000
	1075 Move X0, [X0+712]
	1076 Call 0x1C17F20
	1077 Move X8, [X26]
	1078 Move X0, X26
	1079 Move X9, [X8+744]
	1080 Move X1, [X8+752]
	1081 NotImplemented "Instruction BLR not yet implemented."
	1082 Move X19, X0
	1083 Move X0, 0xD71000
	1084 Move X0, [X0+3552]
	1085 Call 0x1C17D08
	1086 Call 0x1C17F10
	1087 Move X1, X19
	1088 Move X2, X23
	1089 Move X3, X31
	1090 Move X20, X0
	1091 Call MissingFieldException..ctor, X0, X1, X2
	1092 Move X0, 0xD3E000
	1093 Move X0, [X0+1320]
	1094 Call 0x1C17D08
	1095 Call 0x1C17F10
	1096 Move X19, X0
	1097 Move X0, 0xD72000
	1098 Move X0, [X0+720]
	1099 Call 0x1C17D08
	1100 Move X1, X0
	1101 Move X0, X19
	1102 Move X2, X31
	1103 Call ArgumentNullException..ctor, X0, X1
	1104 Move X0, 0xD72000
	1105 Move X0, [X0+728]
	1106 Call 0x1C17D08
	1107 Move X1, X0
	1108 Move X0, X19
	1109 Call 0x1C17DEC
	1110 Move X0, 0xD72000
	1111 Move X0, [X0+736]
	1112 Move X0, 0xD72000
	1113 Move X0, [X0+744]
	1114 Move X0, 0xD72000
	1115 Move X0, [X0+752]
	1116 Move X0, 0xD72000
	1117 Move X0, [X0+760]
	1118 Call 0x1C181E0
	1119 Call 0x1C17F44
	1120 Move X1, X31
	1121 Call 0x1C17DEC
	1122 Move X0, 0xD72000
	1123 Move X0, [X0+768]
	1124 Move X0, 0xD72000
	1125 Move X0, [X0+776]
	1126 Call 0x1C17D08
	1127 Move X1, X31
	1128 Call Environment.GetResourceString, X0
	1129 Move X19, X0
	1130 Move X0, 0xD41000
	1131 Move X0, [X0+1400]
	1132 Call 0x1C17D08
	1133 Call 0x1C17F10
	1134 Move X20, X0
	1135 Move X0, 0xD72000
	1136 Move X0, [X0+784]
	1137 Call 0x1C17D08
	1138 Move X2, X0
	1139 Move X0, X20
	1140 Move X1, X19
	1141 Move X3, X31
	1142 Call ArgumentException..ctor, X0, X1, X2
	1143 Move X19, X0
	1144 NotImplemented "Instruction CMP not yet implemented."
	1145 Move X0, X19
	1146 Call 0x3EB2AD0
	1147 Move X19, X0
	1148 Move X0, 0xD62000
	1149 Move X0, [X0+40]
	1150 Call 0x1C17D08
	1151 Move X8, [X19]
	1152 Move X1, [X8]
	1153 Call 0x1C18270
	1154 Move TEMP, X0
	1155 And TEMP, TEMP, 1
	1156 Compare TEMP, 1
	1157 JumpIfNotEqual {1162}
	1158 Call 0x3EB2AE0
	1159 Move X22, [X31+24]
	1160 Move X21, [X31+32]
	1161 Move X19, X31
	1162 Move W0, 8
	1163 Call 0x3EB2AF0
	1164 Move X8, [X19]
	1165 Move [X0], X8
	1166 Move X1, 0xAFA000
	1167 Add X1, X1, 3672
	1168 Move X2, X31
	1169 Call 0x3EB2B00
	1170 Move X19, X0
	1171 Call 0x3EB2AE0
	1172 Move X19, X0
	1173 NotImplemented "Instruction CMP not yet implemented."
	1174 Move X0, X19
	1175 Call 0x3EB2AD0
	1176 Move X19, X0
	1177 Move X0, 0xD41000
	1178 Move X0, [X0+3080]
	1179 Call 0x1C17D08
	1180 Move X8, [X19]
	1181 Move X1, [X8]
	1182 Call 0x1C18270
	1183 Move TEMP, X0
	1184 And TEMP, TEMP, 1
	1185 Compare TEMP, 1
	1186 JumpIfNotEqual {1208}
	1187 Call 0x3EB2AE0
	1188 Move X0, 0xD72000
	1189 Move X0, [X0+792]
	1190 Call 0x1C17D08
	1191 Move X1, X31
	1192 Call Environment.GetResourceString, X0
	1193 Move X19, X0
	1194 Move X0, 0xD41000
	1195 Move X0, [X0+1400]
	1196 Call 0x1C17D08
	1197 Call 0x1C17F10
	1198 Move X1, X19
	1199 Move X2, X31
	1200 Move X20, X0
	1201 Call ArgumentException..ctor, X0, X1
	1202 Move X0, 0xD72000
	1203 Move X0, [X0+728]
	1204 Call 0x1C17D08
	1205 Move X1, X0
	1206 Move X0, X20
	1207 Call 0x1C17DEC
	1208 Move W0, 8
	1209 Call 0x3EB2AF0
	1210 Move X8, [X19]
	1211 Move [X0], X8
	1212 Move X1, 0xAFA000
	1213 Add X1, X1, 3672
	1214 Move X2, X31
	1215 Call 0x3EB2B00
	1216 Move X19, X0
	1217 Call 0x3EB2AE0
	1218 Move X0, X19
	1219 Call 0x1D2D690
	1220 Call 0x1991590

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x033BBEB0 MOV X0, X20
	0x033BBEB4 BL 0x19903C0
	0x033BBEB8 MOV X0, X20

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 Return X0

Method: System.Boolean op_Equality(System.RuntimeType left, System.RuntimeType right)

Disassembly:
	0x033A7674 CMP W0, 0x10
	0x033A7678 B.NE 0x33A7724
	0x033A767C ADRP X9, 0xD75000

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 Return X0

Method: System.Boolean op_Inequality(System.RuntimeType left, System.RuntimeType right)

Disassembly:
	0x033A9424 LDR W8, [X27 + 0x18]
	0x033A9428 CMP W24, W8
	0x033A942C B.CS 0x33A9F8C

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 Return X0

Method: System.Object Clone()

Disassembly:
	0x033BBEBC MOV X1, X31

ISIL:
	001 Return X0

Method: System.Void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x033BBEC0 BL 0x33BE520
	0x033BBEC4 MOV X2, X0
	0x033BBEC8 MOV X0, X21
	0x033BBECC MOV X1, X22
	0x033BBED0 MOV X3, X19
	0x033BBED4 MOV X4, X31
	0x033BBED8 BL 0x3227D58
	0x033BBEDC MOV X19, X0
	0x033BBEE0 ADRP X0, 0xD40000
	0x033BBEE4 LDR X0, [X0 + 0x578]
	0x033BBEE8 BL 0x1C16D08
	0x033BBEEC BL 0x1C16F10
	0x033BBEF0 MOV X1, X19
	0x033BBEF4 MOV X2, X31
	0x033BBEF8 MOV X20, X0
	0x033BBEFC BL 0x3314A68
	0x033BBF00 ADRP X0, 0xD71000
	0x033BBF04 LDR X0, [X0 + 0x3E0]
	0x033BBF08 BL 0x1C16D08
	0x033BBF0C MOV X1, X0
	0x033BBF10 MOV X0, X20
	0x033BBF14 BL 0x1C16DEC
	0x033BBF18 STP X30, X23, [X31 - 0x30]!
	0x033BBF1C STP X22, X21, [X31 + 0x10]
	0x033BBF20 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Compare X1, 0
	002 JumpIfEqual {9}
	003 Move X8, X0
	004 Move X0, X1
	005 Move X1, X8
	006 Move X2, X31
	007 Call UnitySerializationHolder.GetUnitySerializationInfo, X0, X1
	008 Return 
	009 Move [X31-16], X30
	010 Move [X31-8], X19
	011 Move X0, 0xD3E000
	012 Move X0, [X0+1320]
	013 Call 0x1C17D08
	014 Call 0x1C17F10
	015 Move X19, X0
	016 Move X0, 0xD63000
	017 Move X0, [X0+728]
	018 Call 0x1C17D08
	019 Move X1, X0
	020 Move X0, X19
	021 Move X2, X31
	022 Call ArgumentNullException..ctor, X0, X1
	023 Move X0, 0xD72000
	024 Move X0, [X0+816]
	025 Call 0x1C17D08
	026 Move X1, X0
	027 Move X0, X19
	028 Call 0x1C17DEC

Method: System.Object[] GetCustomAttributes(System.Boolean inherit)

Disassembly:
	0x033BBF24 ADRP X22, 0x1022000
	0x033BBF28 LDRB W8, [X22 + 0x1F4]
	0x033BBF2C MOV X20, X2
	0x033BBF30 MOV X19, X1
	0x033BBF34 MOV X21, X0
	0x033BBF38 TBNZ X8, 0x0, 0x33BBF80
	0x033BBF3C ADRP X0, 0xD38000
	0x033BBF40 LDR X0, [X0 + 0xDF8]
	0x033BBF44 BL 0x1C16CF4
	0x033BBF48 ADRP X0, 0xD61000
	0x033BBF4C LDR X0, [X0 + 0xF18]
	0x033BBF50 BL 0x1C16CF4
	0x033BBF54 ADRP X0, 0xD61000
	0x033BBF58 LDR X0, [X0 + 0x4E8]
	0x033BBF5C BL 0x1C16CF4
	0x033BBF60 ADRP X0, 0xD38000
	0x033BBF64 LDR X0, [X0 + 0x6C0]
	0x033BBF68 BL 0x1C16CF4
	0x033BBF6C ADRP X0, 0xD61000
	0x033BBF70 LDR X0, [X0 + 0xF28]
	0x033BBF74 BL 0x1C16CF4
	0x033BBF78 MOVZ W8, 0x1
	0x033BBF7C STRB W8, [X22 + 0x1F4]
	0x033BBF80 LDR X8, [X21]
	0x033BBF84 MOV X0, X21
	0x033BBF88 MOV X1, X19
	0x033BBF8C LDR X9, [X8 + 0x868]
	0x033BBF90 LDR X2, [X8 + 0x870]
	0x033BBF94 BLR X9
	0x033BBF98 TBZ X0, 0x0, 0x33BBFB0
	0x033BBF9C MOV X0, X19
	0x033BBFA0 LDP X20, X19, [X31 + 0x20]
	0x033BBFA4 LDP X22, X21, [X31 + 0x10]
	0x033BBFA8 LDP X30, X23, [X31], #0x30
	0x033BBFAC RET
	0x033BBFB0 MOV X0, X21
	0x033BBFB4 MOV X1, X31
	0x033BBFB8 BL 0x3396C08
	0x033BBFBC TBZ X0, 0x0, 0x33BBFF8
	0x033BBFC0 LDR X8, [X21]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1023000
	007 Move X21, 0xD62000
	008 Move W8, [X22+488]
	009 Move X21, [X21+1256]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xD6C000
	017 Move X0, [X0+992]
	018 Call 0x1C17CF4
	019 Move X0, 0xD62000
	020 Move X0, [X0+1256]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+488], W8
	024 Move X0, [X21]
	025 Move X22, 0xD6C000
	026 Move W8, [X0+224]
	027 Move X22, [X22+992]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1C17DFC
	031 Move X0, [X21]
	032 Move X8, [X22]
	033 Move X9, [X0+184]
	034 Move W10, [X8+224]
	035 Move X21, [X9+16]
	036 Compare W10, 0
	037 JumpIfNotEqual {40}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 And W2, W20, 1
	041 Move X0, X19
	042 Move X1, X21
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X3, X31
	048 Move X30, [X31+48]
	049 Call MonoCustomAttrs.GetCustomAttributes, X0, X1, X2
	050 Return X0

Method: System.Object[] GetCustomAttributes(System.Type attributeType, System.Boolean inherit)

Disassembly:
	0x033BBFC4 MOV X0, X21
	0x033BBFC8 LDR X9, [X8 + 0x428]
	0x033BBFCC LDR X1, [X8 + 0x430]
	0x033BBFD0 BLR X9
	0x033BBFD4 CBZ X19, 0x33BBF9C
	0x033BBFD8 CBZ X0, 0x33BC170
	0x033BBFDC LDR X8, [X0]
	0x033BBFE0 MOV X1, X19
	0x033BBFE4 LDR X9, [X8 + 0x868]
	0x033BBFE8 LDR X2, [X8 + 0x870]
	0x033BBFEC BLR X9
	0x033BBFF0 TBNZ X0, 0x0, 0x33BBF9C
	0x033BBFF4 B 0x33BBFFC
	0x033BBFF8 CBZ X19, 0x33BBF9C
	0x033BBFFC LDR X8, [X21]
	0x033BC000 MOV X0, X21
	0x033BC004 LDR X9, [X8 + 0x588]
	0x033BC008 LDR X1, [X8 + 0x590]
	0x033BC00C BLR X9
	0x033BC010 TBZ X0, 0x0, 0x33BC07C
	0x033BC014 ADRP X8, 0xD37000
	0x033BC018 LDR X8, [X8 + 0xDF8]
	0x033BC01C LDR X0, [X8]
	0x033BC020 LDR W8, [X0 + 0xE0]
	0x033BC024 CBNZ W8, 0x33BC02C
	0x033BC028 BL 0x1C16DFC
	0x033BC02C MOV X0, X21
	0x033BC030 BL 0x33AFB1C
	0x033BC034 MOV X22, X0
	0x033BC038 MOV X0, X19
	0x033BC03C MOV X1, X31
	0x033BC040 BL 0x33BE520
	0x033BC044 ADRP X8, 0xD37000
	0x033BC048 LDR X8, [X8 + 0x6C0]
	0x033BC04C MOV X23, X0
	0x033BC050 LDR X8, [X8]
	0x033BC054 LDR W9, [X8 + 0xE0]
	0x033BC058 CBNZ W9, 0x33BC064
	0x033BC05C MOV X0, X8
	0x033BC060 BL 0x1C16DFC
	0x033BC064 MOV X0, X22
	0x033BC068 MOV X1, X23
	0x033BC06C MOV X2, X31
	0x033BC070 BL 0x3395194
	0x033BC074 TBNZ X0, 0x0, 0x33BBF9C
	0x033BC078 B 0x33BC08C
	0x033BC07C MOV X0, X21
	0x033BC080 MOV X1, X31
	0x033BC084 BL 0x3397374
	0x033BC088 TBZ X0, 0x0, 0x33BC0BC
	0x033BC08C ADRP X8, 0xD60000
	0x033BC090 LDR X8, [X8 + 0x4E8]
	0x033BC094 LDR X0, [X8]
	0x033BC098 LDR W8, [X0 + 0xE0]
	0x033BC09C CBNZ W8, 0x33BC0A4
	0x033BC0A0 BL 0x1C16DFC
	0x033BC0A4 MOV X0, X19
	0x033BC0A8 MOV X1, X21
	0x033BC0AC BL 0x33BC174
	0x033BC0B0 MOV X19, X0
	0x033BC0B4 CBNZ X0, 0x33BBF9C
	0x033BC0B8 B 0x33BC160
	0x033BC0BC MOV X0, X21
	0x033BC0C0 MOV X1, X31
	0x033BC0C4 BL 0x3396C18
	0x033BC0C8 TBZ X0, 0x0, 0x33BC160
	0x033BC0CC MOV X0, X19
	0x033BC0D0 MOV X1, X31
	0x033BC0D4 BL 0x33BE520
	0x033BC0D8 ADRP X23, 0xD37000
	0x033BC0DC LDR X23, [X23 + 0x6C0]
	0x033BC0E0 ADRP X9, 0xD60000
	0x033BC0E4 MOV X21, X0
	0x033BC0E8 LDR X8, [X23]
	0x033BC0EC LDR X9, [X9 + 0xF18]
	0x033BC0F0 LDR W10, [X8 + 0xE0]
	0x033BC0F4 LDR X22, [X9]
	0x033BC0F8 CBNZ W10, 0x33BC104
	0x033BC0FC MOV X0, X8
	0x033BC100 BL 0x1C16DFC
	0x033BC104 MOV X0, X22
	0x033BC108 MOV X1, X31
	0x033BC10C BL 0x338C698
	0x033BC110 MOV X1, X0
	0x033BC114 MOV X0, X21
	0x033BC118 MOV X2, X31
	0x033BC11C BL 0x3395194
	0x033BC120 TBNZ X0, 0x0, 0x33BBF9C
	0x033BC124 ADRP X8, 0xD60000
	0x033BC128 LDR X0, [X23]
	0x033BC12C LDR X8, [X8 + 0xF28]
	0x033BC130 LDR W9, [X0 + 0xE0]
	0x033BC134 LDR X22, [X8]
	0x033BC138 CBNZ W9, 0x33BC140
	0x033BC13C BL 0x1C16DFC
	0x033BC140 MOV X0, X22
	0x033BC144 MOV X1, X31
	0x033BC148 BL 0x338C698
	0x033BC14C MOV X1, X0
	0x033BC150 MOV X0, X21
	0x033BC154 MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1023000
	007 Move W8, [X22+489]
	008 Move W19, W2
	009 Move X21, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xD6C000
	016 Move X0, [X0+992]
	017 Call 0x1C17CF4
	018 Move X0, 0xD62000
	019 Move X0, [X0+1256]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+489], W8
	023 Compare X21, 0
	024 JumpIfEqual {70}
	025 Move X8, [X21]
	026 Move X22, 0xD61000
	027 Move X0, X21
	028 Move X9, [X8+808]
	029 Move X1, [X8+816]
	030 Move X22, [X22+1256]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X8, [X22]
	033 Compare X0, 0
	034 JumpIfEqual {39}
	035 Move X9, [X0]
	036 Move W10, [X8+304]
	037 Move W11, [X9+304]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X21, X31
	040 Move X9, [X9+200]
	041 Add X9, X9, X10
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 NotImplemented "Instruction CSEL not yet implemented."
	045 Move W9, [X8+224]
	046 Compare W9, 0
	047 JumpIfNotEqual {50}
	048 Move X0, X8
	049 Call 0x1C17DFC
	050 Compare X21, 0
	051 JumpIfEqual {88}
	052 Move X8, 0xD6B000
	053 Move X8, [X8+992]
	054 Move X0, [X8]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 And W2, W19, 1
	060 Move X0, X20
	061 Move X1, X21
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X3, X31
	067 Move X30, [X31+48]
	068 Call MonoCustomAttrs.GetCustomAttributes, X0, X1, X2
	069 Return X0
	070 Move X0, 0xD3D000
	071 Move X0, [X0+1320]
	072 Call 0x1C17D08
	073 Call 0x1C17F10
	074 Move X19, X0
	075 Move X0, 0xD6A000
	076 Move X0, [X0+3600]
	077 Call 0x1C17D08
	078 Move X1, X0
	079 Move X0, X19
	080 Move X2, X31
	081 Call ArgumentNullException..ctor, X0, X1
	082 Move X0, 0xD71000
	083 Move X0, [X0+824]
	084 Call 0x1C17D08
	085 Move X1, X0
	086 Move X0, X19
	087 Call 0x1C17DEC
	088 Move X0, 0xD6A000
	089 Move X0, [X0+3672]
	090 Call 0x1C17D08
	091 Move X1, X31
	092 Call Environment.GetResourceString, X0
	093 Move X19, X0
	094 Move X0, 0xD40000
	095 Move X0, [X0+1400]
	096 Call 0x1C17D08
	097 Call 0x1C17F10
	098 Move X20, X0
	099 Move X0, 0xD6A000
	100 Move X0, [X0+3600]
	101 Call 0x1C17D08
	102 Move X2, X0
	103 Move X0, X20
	104 Move X1, X19
	105 Move X3, X31
	106 Call ArgumentException..ctor, X0, X1, X2
	107 Move X0, 0xD71000
	108 Move X0, [X0+824]
	109 Call 0x1C17D08
	110 Move X1, X0
	111 Move X0, X20
	112 Call 0x1C17DEC

Method: System.Boolean IsDefined(System.Type attributeType, System.Boolean inherit)

Disassembly:
	0x033BC158 BL 0x3395194
	0x033BC15C TBNZ X0, 0x0, 0x33BBF9C
	0x033BC160 MOV X19, X31
	0x033BC164 MOVZ W8, 0x1
	0x033BC168 STRB W8, [X20]
	0x033BC16C B 0x33BBF9C
	0x033BC170 BL 0x1C16F20
	0x033BC174 STR X30, [X31 - 0x30]!
	0x033BC178 STP X22, X21, [X31 + 0x10]
	0x033BC17C STP X20, X19, [X31 + 0x20]
	0x033BC180 ADRP X21, 0x1021000
	0x033BC184 LDRB W8, [X21 + 0x1F5]
	0x033BC188 MOV X20, X1
	0x033BC18C MOV X19, X0
	0x033BC190 TBNZ X8, 0x0, 0x33BC238
	0x033BC194 ADRP X0, 0xD38000
	0x033BC198 LDR X0, [X0 + 0x9D8]
	0x033BC19C BL 0x1C16CF4
	0x033BC1A0 ADRP X0, 0xD39000
	0x033BC1A4 LDR X0, [X0 + 0x170]
	0x033BC1A8 BL 0x1C16CF4
	0x033BC1AC ADRP X0, 0xD3A000
	0x033BC1B0 LDR X0, [X0 + 0x978]
	0x033BC1B4 BL 0x1C16CF4
	0x033BC1B8 ADRP X0, 0xD37000
	0x033BC1BC LDR X0, [X0 + 0xDF8]
	0x033BC1C0 BL 0x1C16CF4
	0x033BC1C4 ADRP X0, 0xD3B000
	0x033BC1C8 LDR X0, [X0 + 0x628]
	0x033BC1CC BL 0x1C16CF4
	0x033BC1D0 ADRP X0, 0xD37000
	0x033BC1D4 LDR X0, [X0 + 0x758]
	0x033BC1D8 BL 0x1C16CF4
	0x033BC1DC ADRP X0, 0xD39000
	0x033BC1E0 LDR X0, [X0 + 0xA60]
	0x033BC1E4 BL 0x1C16CF4
	0x033BC1E8 ADRP X0, 0xD60000
	0x033BC1EC LDR X0, [X0 + 0x6B0]
	0x033BC1F0 BL 0x1C16CF4
	0x033BC1F4 ADRP X0, 0xD37000
	0x033BC1F8 LDR X0, [X0 + 0xA90]
	0x033BC1FC BL 0x1C16CF4
	0x033BC200 ADRP X0, 0xD37000
	0x033BC204 LDR X0, [X0 + 0x6C0]
	0x033BC208 BL 0x1C16CF4
	0x033BC20C ADRP X0, 0xD3C000
	0x033BC210 LDR X0, [X0 + 0x658]
	0x033BC214 BL 0x1C16CF4
	0x033BC218 ADRP X0, 0xD3F000
	0x033BC21C LDR X0, [X0 + 0x720]
	0x033BC220 BL 0x1C16CF4
	0x033BC224 ADRP X0, 0xD38000
	0x033BC228 LDR X0, [X0 + 0x758]
	0x033BC22C BL 0x1C16CF4
	0x033BC230 MOVZ W8, 0x1
	0x033BC234 STRB W8, [X21 + 0x1F5]
	0x033BC238 CBZ X19, 0x33BCC0C
	0x033BC23C MOV X0, X19
	0x033BC240 MOV X1, X31
	0x033BC244 BL 0x33BE520
	0x033BC248 CBZ X0, 0x33BCC0C
	0x033BC24C LDR X8, [X0]
	0x033BC250 ADRP X22, 0xD37000
	0x033BC254 MOV X21, X0
	0x033BC258 LDR X9, [X8 + 0x588]
	0x033BC25C LDR X1, [X8 + 0x590]
	0x033BC260 LDR X22, [X22 + 0x6C0]
	0x033BC264 BLR X9
	0x033BC268 TBZ X0, 0x0, 0x33BC2B8
	0x033BC26C ADRP X8, 0xD37000
	0x033BC270 LDR X8, [X8 + 0xDF8]
	0x033BC274 LDR X0, [X8]
	0x033BC278 LDR W8, [X0 + 0xE0]
	0x033BC27C CBNZ W8, 0x33BC284
	0x033BC280 BL 0x1C16DFC
	0x033BC284 MOV X0, X21
	0x033BC288 BL 0x33AFB1C
	0x033BC28C LDR X8, [X22]
	0x033BC290 MOV X21, X0
	0x033BC294 LDR W9, [X8 + 0xE0]
	0x033BC298 CBNZ W9, 0x33BC2A4
	0x033BC29C MOV X0, X8
	0x033BC2A0 BL 0x1C16DFC
	0x033BC2A4 MOV X0, X21
	0x033BC2A8 MOV X1, X20
	0x033BC2AC MOV X2, X31
	0x033BC2B0 BL 0x3395194
	0x033BC2B4 TBNZ X0, 0x0, 0x33BCBBC
	0x033BC2B8 LDR X0, [X22]
	0x033BC2BC LDR W8, [X0 + 0xE0]
	0x033BC2C0 CBNZ W8, 0x33BC2C8
	0x033BC2C4 BL 0x1C16DFC
	0x033BC2C8 MOV X0, X21
	0x033BC2CC MOV X1, X31
	0x033BC2D0 BL 0x3397AFC
	0x033BC2D4 MOV W21, W0
	0x033BC2D8 MOV X0, X20
	0x033BC2DC MOV X1, X31
	0x033BC2E0 BL 0x3397AFC
	0x033BC2E4 SUB W8, W0, 0x4
	0x033BC2E8 CMP W8, 0xA

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1022000
	007 Move W8, [X22+490]
	008 Move W19, W2
	009 Move X21, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xD6B000
	016 Move X0, [X0+992]
	017 Call 0x1C17CF4
	018 Move X0, 0xD61000
	019 Move X0, [X0+1256]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+490], W8
	023 Compare X21, 0
	024 JumpIfEqual {70}
	025 Move X8, [X21]
	026 Move X22, 0xD61000
	027 Move X0, X21
	028 Move X9, [X8+808]
	029 Move X1, [X8+816]
	030 Move X22, [X22+1256]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X8, [X22]
	033 Compare X0, 0
	034 JumpIfEqual {39}
	035 Move X9, [X0]
	036 Move W10, [X8+304]
	037 Move W11, [X9+304]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X21, X31
	040 Move X9, [X9+200]
	041 Add X9, X9, X10
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 NotImplemented "Instruction CSEL not yet implemented."
	045 Move W9, [X8+224]
	046 Compare W9, 0
	047 JumpIfNotEqual {50}
	048 Move X0, X8
	049 Call 0x1C17DFC
	050 Compare X21, 0
	051 JumpIfEqual {88}
	052 Move X8, 0xD6B000
	053 Move X8, [X8+992]
	054 Move X0, [X8]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 And W2, W19, 1
	060 Move X0, X20
	061 Move X1, X21
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X3, X31
	067 Move X30, [X31+48]
	068 Call MonoCustomAttrs.IsDefined, X0, X1, X2
	069 Return X0
	070 Move X0, 0xD3D000
	071 Move X0, [X0+1320]
	072 Call 0x1C17D08
	073 Call 0x1C17F10
	074 Move X19, X0
	075 Move X0, 0xD6A000
	076 Move X0, [X0+3600]
	077 Call 0x1C17D08
	078 Move X1, X0
	079 Move X0, X19
	080 Move X2, X31
	081 Call ArgumentNullException..ctor, X0, X1
	082 Move X0, 0xD71000
	083 Move X0, [X0+832]
	084 Call 0x1C17D08
	085 Move X1, X0
	086 Move X0, X19
	087 Call 0x1C17DEC
	088 Move X0, 0xD6A000
	089 Move X0, [X0+3672]
	090 Call 0x1C17D08
	091 Move X1, X31
	092 Call Environment.GetResourceString, X0
	093 Move X19, X0
	094 Move X0, 0xD40000
	095 Move X0, [X0+1400]
	096 Call 0x1C17D08
	097 Call 0x1C17F10
	098 Move X20, X0
	099 Move X0, 0xD6A000
	100 Move X0, [X0+3600]
	101 Call 0x1C17D08
	102 Move X2, X0
	103 Move X0, X20
	104 Move X1, X19
	105 Move X3, X31
	106 Call ArgumentException..ctor, X0, X1, X2
	107 Move X0, 0xD71000
	108 Move X0, [X0+832]
	109 Call 0x1C17D08
	110 Move X1, X0
	111 Move X0, X20
	112 Call 0x1C17DEC

Method: System.Collections.Generic.IList`1<System.Reflection.CustomAttributeData> GetCustomAttributesData()

Disassembly:
	0x033BC2EC B.HI 0x33BC510
	0x033BC2F0 ADRP X9, 0xFFFFFFFFFD7DA000

ISIL:
	001 Move X1, X31
	002 Call CustomAttributeData.GetCustomAttributesInternal, X0
	003 Return X0

Method: System.String FormatTypeName(System.Boolean serialization)

Disassembly:
	0x033BC2F4 ADD X9, X9, 0x8B0
	0x033BC2F8 ADR X10, 0x10
	0x033BC2FC LDRB W11, [X9, X8, LSL]
	0x033BC300 ADD X10, X10, X11, 0x2, LSL
	0x033BC304 BR X10
	0x033BC308 CMP W21, 0x8
	0x033BC30C B.EQ 0x33BCBBC
	0x033BC310 CMP W21, 0x6
	0x033BC314 B.NE 0x33BC510
	0x033BC318 ADRP X8, 0xD38000
	0x033BC31C LDR X8, [X8 + 0x9D8]
	0x033BC320 LDR X9, [X19]
	0x033BC324 LDR X1, [X8]
	0x033BC328 LDR X8, [X9 + 0x40]
	0x033BC32C LDR X9, [X1 + 0x40]
	0x033BC330 CMP X8, X9
	0x033BC334 B.NE 0x33BCC10
	0x033BC338 MOV X0, X19
	0x033BC33C BL 0x1C16E08
	0x033BC340 ADRP X9, 0xD39000
	0x033BC344 LDRB W8, [X0]
	0x033BC348 LDR X9, [X9 + 0x170]
	0x033BC34C B 0x33BC54C
	0x033BC350 CMP W21, 0x5
	0x033BC354 B.EQ 0x33BC518
	0x033BC358 CMP W21, 0x6
	0x033BC35C B.NE 0x33BC510
	0x033BC360 ADRP X8, 0xD38000
	0x033BC364 LDR X8, [X8 + 0x9D8]
	0x033BC368 LDR X9, [X19]
	0x033BC36C LDR X1, [X8]
	0x033BC370 LDR X8, [X9 + 0x40]
	0x033BC374 LDR X9, [X1 + 0x40]
	0x033BC378 CMP X8, X9
	0x033BC37C B.NE 0x33BCC10
	0x033BC380 MOV X0, X19
	0x033BC384 BL 0x1C16E08
	0x033BC388 LDRB W8, [X0]
	0x033BC38C B 0x33BC544
	0x033BC390 CMP W21, 0x4
	0x033BC394 B.EQ 0x33BCBBC
	0x033BC398 CMP W21, 0x6
	0x033BC39C B.NE 0x33BC510
	0x033BC3A0 ADRP X8, 0xD38000
	0x033BC3A4 LDR X8, [X8 + 0x9D8]
	0x033BC3A8 LDR X9, [X19]
	0x033BC3AC LDR X1, [X8]
	0x033BC3B0 LDR X8, [X9 + 0x40]
	0x033BC3B4 LDR X9, [X1 + 0x40]
	0x033BC3B8 CMP X8, X9
	0x033BC3BC B.NE 0x33BCC10
	0x033BC3C0 MOV X0, X19
	0x033BC3C4 BL 0x1C16E08
	0x033BC3C8 ADRP X9, 0xD3C000
	0x033BC3CC LDRB W8, [X0]
	0x033BC3D0 LDR X9, [X9 + 0x658]
	0x033BC3D4 B 0x33BC54C
	0x033BC3D8 SUB W8, W21, 0x4
	0x033BC3DC CMP W8, 0x4
	0x033BC3E0 B.HI 0x33BC510
	0x033BC3E4 ADRP X9, 0xFFFFFFFFFD7DA000
	0x033BC3E8 ADD X9, X9, 0x8C9
	0x033BC3EC ADR X10, 0x10
	0x033BC3F0 LDRB W11, [X9, X8, LSL]
	0x033BC3F4 ADD X10, X10, X11, 0x2, LSL
	0x033BC3F8 BR X10
	0x033BC3FC ADRP X8, 0xD39000
	0x033BC400 LDR X8, [X8 + 0x170]
	0x033BC404 B 0x33BC6CC
	0x033BC408 CMP W21, 0x4
	0x033BC40C B.EQ 0x33BC558
	0x033BC410 CMP W21, 0x8
	0x033BC414 B.EQ 0x33BC564
	0x033BC418 CMP W21, 0x6
	0x033BC41C B.NE 0x33BC510
	0x033BC420 ADRP X8, 0xD38000
	0x033BC424 LDR X8, [X8 + 0x9D8]
	0x033BC428 LDR X9, [X19]
	0x033BC42C LDR X1, [X8]
	0x033BC430 LDR X8, [X9 + 0x40]
	0x033BC434 LDR X9, [X1 + 0x40]
	0x033BC438 CMP X8, X9
	0x033BC43C B.NE 0x33BCC10
	0x033BC440 MOV X0, X19
	0x033BC444 BL 0x1C16E08
	0x033BC448 LDRB W8, [X0]
	0x033BC44C B 0x33BC590
	0x033BC450 SUB W8, W21, 0x4
	0x033BC454 CMP W8, 0x6
	0x033BC458 B.HI 0x33BC510
	0x033BC45C ADRP X9, 0xFFFFFFFFFD7DA000
	0x033BC460 ADD X9, X9, 0x8C2
	0x033BC464 ADR X10, 0x10
	0x033BC468 LDRB W11, [X9, X8, LSL]
	0x033BC46C ADD X10, X10, X11, 0x2, LSL
	0x033BC470 BR X10
	0x033BC474 ADRP X8, 0xD39000
	0x033BC478 LDR X8, [X8 + 0x170]
	0x033BC47C B 0x33BC79C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1022000
	007 Move W8, [X21+491]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0xD38000
	015 Move X0, [X0+1728]
	016 Call 0x1C17CF4
	017 Move X0, 0xD71000
	018 Move X0, [X0+840]
	019 Call 0x1C17CF4
	020 Move X0, 0xD69000
	021 Move X0, [X0+2064]
	022 Call 0x1C17CF4
	023 Move X0, 0xD71000
	024 Move X0, [X0+848]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+491], W8
	028 Move TEMP, X19
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {35}
	032 Move X8, [X20]
	033 Move X2, [X8+360]
	034 Move X1, [X8+368]
	035 Move X0, X20
	036 Move X1, X31
	037 Call Type.GetRootElementType, X0
	038 Compare X0, 0
	039 JumpIfEqual {133}
	040 Move X1, X31
	041 Move X19, X0
	042 Call Type.get_IsNested, X0
	043 Move X8, [X20]
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {57}
	048 Move X2, [X8+424]
	049 Move X1, [X8+432]
	050 Move X0, X20
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X30, [X31+48]
	056 CallNoReturn X2
	057 Move X9, [X8+360]
	058 Move X1, [X8+368]
	059 Move X0, X20
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Move X20, X0
	062 Move X0, X19
	063 Move X1, X31
	064 Call Type.get_IsPrimitive, X0
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfEqual {109}
	069 Move X22, 0xD38000
	070 Move X22, [X22+1728]
	071 Move X8, 0xD69000
	072 Move X0, [X22]
	073 Move X8, [X8+2064]
	074 Move W9, [X0+224]
	075 Move X21, [X8]
	076 Compare W9, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Move X0, X21
	080 Move X1, X31
	081 Call Type.GetTypeFromHandle, X0
	082 Move X1, X0
	083 Move X0, X19
	084 Move X2, X31
	085 Call Type.op_Equality, X0, X1
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfEqual {109}
	090 Move X8, 0xD71000
	091 Move X0, [X22]
	092 Move X8, [X8+840]
	093 Move W9, [X0+224]
	094 Move X21, [X8]
	095 Compare W9, 0
	096 JumpIfNotEqual {98}
	097 Call 0x1C17DFC
	098 Move X0, X21
	099 Move X1, X31
	100 Call Type.GetTypeFromHandle, X0
	101 Move X1, X0
	102 Move X0, X19
	103 Move X2, X31
	104 Call Type.op_Equality, X0, X1
	105 Move TEMP, X0
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfNotEqual {126}
	109 Move X8, 0xD71000
	110 Move X8, [X8+848]
	111 Move X8, [X8]
	112 Compare X8, 0
	113 JumpIfEqual {133}
	114 Compare X20, 0
	115 JumpIfEqual {133}
	116 Move W1, [X8+16]
	117 Move X0, X20
	118 Move X20, [X31+32]
	119 Move X19, [X31+40]
	120 Move X22, [X31+16]
	121 Move X21, [X31+24]
	122 Move X2, X31
	123 Move X30, [X31+48]
	124 Call String.Substring, X0, X1
	125 Return X0
	126 Move X0, X20
	127 Move X20, [X31+32]
	128 Move X19, [X31+40]
	129 Move X22, [X31+16]
	130 Move X21, [X31+24]
	131 Move X30, [X31+48]
	132 Return X0
	133 Call 0x1C17F20

Method: System.Reflection.MemberTypes get_MemberType()

Disassembly:
	0x033BC4D0 BR X10
	0x033BC4D4 ADRP X8, 0xD39000
	0x033BC4D8 LDR X8, [X8 + 0x170]
	0x033BC4DC B 0x33BC8D8
	0x033BC4E0 SUB W8, W21, 0x4
	0x033BC4E4 CMP W8, 0x9
	0x033BC4E8 B.HI 0x33BC510
	0x033BC4EC ADRP X9, 0xFFFFFFFFFD7DA000
	0x033BC4F0 ADD X9, X9, 0x8E0
	0x033BC4F4 ADR X10, 0x10
	0x033BC4F8 LDRH W11, [X9, X8, LSL #1]
	0x033BC4FC ADD X10, X10, X11, 0x2, LSL
	0x033BC500 BR X10
	0x033BC504 ADRP X8, 0xD39000
	0x033BC508 LDR X8, [X8 + 0x170]
	0x033BC50C B 0x33BCA9C
	0x033BC510 MOV X19, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call Type.get_IsPublic, X0
	006 Move TEMP, X0
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfNotEqual {14}
	010 Move W0, 32
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 Return X0
	014 Move X0, X19
	015 Move X1, X31
	016 Call Type.get_IsNotPublic, X0
	017 And W31, W0, 1
	018 Move W8, 128
	019 Move W9, 32
	020 NotImplemented "Instruction CSEL not yet implemented."
	021 Move X30, [X31+16]
	022 Move X19, [X31+24]
	023 Return X0

Method: System.Type get_ReflectedType()

Disassembly:
	0x033BC514 B 0x33BCBBC
	0x033BC518 ADRP X8, 0xD60000
	0x033BC51C LDR X8, [X8 + 0x6B0]

ISIL:
	001 Move X8, [X0]
	002 Move X2, [X8+440]
	003 Move X1, [X8+448]
	004 CallNoReturn X2

Method: System.Int32 get_MetadataToken()

Disassembly:
	0x033BC520 LDR X9, [X19]
	0x033BC524 LDR X1, [X8]

ISIL:
	001 Move X1, X31
	002 Call RuntimeTypeHandle.GetToken, X0
	003 Return X0

Method: System.Void CreateInstanceCheckThis()

Disassembly:
	0x033BC528 LDR X8, [X9 + 0x40]
	0x033BC52C LDR X9, [X1 + 0x40]
	0x033BC530 CMP X8, X9
	0x033BC534 B.NE 0x33BCC10
	0x033BC538 MOV X0, X19
	0x033BC53C BL 0x1C16E08
	0x00000000 INVALID
	0x033BC544 ADRP X9, 0xD3B000
	0x033BC548 LDR X9, [X9 + 0x628]
	0x033BC54C LDR X0, [X9]
	0x033BC550 STRH W8, [X31 + 0x8]
	0x033BC554 B 0x33BCBB0
	0x033BC558 ADRP X8, 0xD39000
	0x033BC55C LDR X8, [X8 + 0x170]
	0x033BC560 B 0x33BC56C
	0x033BC564 ADRP X8, 0xD3C000
	0x033BC568 LDR X8, [X8 + 0x658]
	0x033BC56C LDR X9, [X19]
	0x033BC570 LDR X1, [X8]
	0x033BC574 LDR X8, [X9 + 0x40]
	0x033BC578 LDR X9, [X1 + 0x40]
	0x033BC57C CMP X8, X9
	0x033BC580 B.NE 0x33BCC10
	0x033BC584 MOV X0, X19
	0x033BC588 BL 0x1C16E08
	0x033BC58C LDRH W8, [X0]
	0x033BC590 ADRP X9, 0xD3F000
	0x033BC594 LDR X9, [X9 + 0x720]
	0x033BC598 B 0x33BC6F8
	0x033BC59C ADRP X8, 0xD38000
	0x033BC5A0 LDR X8, [X8 + 0x9D8]
	0x033BC5A4 LDR X9, [X19]
	0x033BC5A8 LDR X1, [X8]
	0x033BC5AC LDR X8, [X9 + 0x40]
	0x033BC5B0 LDR X9, [X1 + 0x40]
	0x033BC5B4 CMP X8, X9
	0x033BC5B8 B.NE 0x33BCC10
	0x033BC5BC MOV X0, X19
	0x033BC5C0 BL 0x1C16E08
	0x033BC5C4 LDRB W8, [X0]
	0x033BC5C8 B 0x33BC628
	0x033BC5CC ADRP X8, 0xD3C000
	0x033BC5D0 LDR X8, [X8 + 0x658]
	0x033BC5D4 LDR X9, [X19]
	0x033BC5D8 LDR X1, [X8]
	0x033BC5DC LDR X8, [X9 + 0x40]
	0x033BC5E0 LDR X9, [X1 + 0x40]
	0x033BC5E4 CMP X8, X9
	0x033BC5E8 B.NE 0x33BCC10
	0x033BC5EC MOV X0, X19
	0x033BC5F0 BL 0x1C16E08
	0x033BC5F4 LDRH W8, [X0]
	0x033BC5F8 B 0x33BC628
	0x033BC5FC ADRP X8, 0xD3F000
	0x033BC600 LDR X8, [X8 + 0x720]
	0x033BC604 LDR X9, [X19]
	0x033BC608 LDR X1, [X8]
	0x033BC60C LDR X8, [X9 + 0x40]
	0x033BC610 LDR X9, [X1 + 0x40]
	0x033BC614 CMP X8, X9
	0x033BC618 B.NE 0x33BCC10
	0x033BC61C MOV X0, X19
	0x033BC620 BL 0x1C16E08
	0x033BC624 LDR W8, [X0]
	0x033BC628 ADRP X9, 0xD38000
	0x033BC62C LDR X9, [X9 + 0x758]
	0x033BC630 B 0x33BC828
	0x033BC634 ADRP X8, 0xD60000
	0x033BC638 LDR X8, [X8 + 0x6B0]
	0x033BC63C LDR X9, [X19]
	0x033BC640 LDR X1, [X8]
	0x033BC644 LDR X8, [X9 + 0x40]
	0x033BC648 LDR X9, [X1 + 0x40]
	0x033BC64C CMP X8, X9
	0x033BC650 B.NE 0x33BCC10
	0x033BC654 MOV X0, X19
	0x033BC658 BL 0x1C16E08
	0x00000000 INVALID
	0x033BC660 B 0x33BC6F0
	0x033BC664 ADRP X8, 0xD38000
	0x033BC668 LDR X8, [X8 + 0x9D8]
	0x033BC66C LDR X9, [X19]
	0x033BC670 LDR X1, [X8]
	0x033BC674 LDR X8, [X9 + 0x40]
	0x033BC678 LDR X9, [X1 + 0x40]
	0x033BC67C CMP X8, X9
	0x033BC680 B.NE 0x33BCC10
	0x033BC684 MOV X0, X19
	0x033BC688 BL 0x1C16E08
	0x033BC68C LDRB W8, [X0]
	0x033BC690 B 0x33BC6F0
	0x033BC694 ADRP X8, 0xD3B000
	0x033BC698 LDR X8, [X8 + 0x628]
	0x033BC69C LDR X9, [X19]
	0x033BC6A0 LDR X1, [X8]
	0x033BC6A4 LDR X8, [X9 + 0x40]
	0x033BC6A8 LDR X9, [X1 + 0x40]
	0x033BC6AC CMP X8, X9
	0x033BC6B0 B.NE 0x33BCC10
	0x033BC6B4 MOV X0, X19
	0x033BC6B8 BL 0x1C16E08
	0x033BC6BC LDRSH W8, [X0]
	0x033BC6C0 B 0x33BC6F0
	0x033BC6C4 ADRP X8, 0xD3C000
	0x033BC6C8 LDR X8, [X8 + 0x658]
	0x033BC6CC LDR X9, [X19]
	0x033BC6D0 LDR X1, [X8]
	0x033BC6D4 LDR X8, [X9 + 0x40]
	0x033BC6D8 LDR X9, [X1 + 0x40]
	0x033BC6DC CMP X8, X9
	0x033BC6E0 B.NE 0x33BCC10
	0x033BC6E4 MOV X0, X19
	0x033BC6E8 BL 0x1C16E08
	0x033BC6EC LDRH W8, [X0]
	0x033BC6F0 ADRP X9, 0xD37000
	0x033BC6F4 LDR X9, [X9 + 0x758]
	0x033BC6F8 LDR X0, [X9]
	0x033BC6FC STR W8, [X31 + 0x8]
	0x033BC700 B 0x33BCBB0
	0x033BC704 ADRP X8, 0xD60000
	0x033BC708 LDR X8, [X8 + 0x6B0]
	0x033BC70C LDR X9, [X19]
	0x033BC710 LDR X1, [X8]
	0x033BC714 LDR X8, [X9 + 0x40]
	0x033BC718 LDR X9, [X1 + 0x40]
	0x033BC71C CMP X8, X9
	0x033BC720 B.NE 0x33BCC10
	0x033BC724 MOV X0, X19
	0x033BC728 BL 0x1C16E08
	0x00000000 INVALID
	0x033BC730 B 0x33BC820
	0x033BC734 ADRP X8, 0xD38000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1022000
	006 Move X20, 0xD71000
	007 Move W8, [X21+492]
	008 Move X20, [X20+864]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0xD71000
	015 Move X0, [X0+872]
	016 Call 0x1C17CF4
	017 Move X0, 0xD71000
	018 Move X0, [X0+864]
	019 Call 0x1C17CF4
	020 Move X0, 0xD38000
	021 Move X0, [X0+1728]
	022 Call 0x1C17CF4
	023 Move X0, 0xD69000
	024 Move X0, [X0+2064]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+492], W8
	028 Move X8, [X19]
	029 Move X9, [X20]
	030 Move W11, [X8+304]
	031 Move W10, [X9+304]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X11, [X8+200]
	034 Add X10, X11, X10
	035 NotImplemented "Instruction LDUR not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X9, [X8+648]
	038 Move X1, [X8+656]
	039 Move X0, X19
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {82}
	045 Move X20, 0xD71000
	046 Move X21, 0xD38000
	047 Move X20, [X20+872]
	048 Move X21, [X21+1728]
	049 Move X0, X19
	050 Move X1, X31
	051 Call Type.GetRootElementType, X0
	052 Move X8, [X21]
	053 Move X20, [X20]
	054 Move X19, X0
	055 Move W9, [X8+224]
	056 Compare W9, 0
	057 JumpIfNotEqual {60}
	058 Move X0, X8
	059 Call 0x1C17DFC
	060 Move X0, X20
	061 Move X1, X31
	062 Call Type.GetTypeFromHandle, X0
	063 NotImplemented "Instruction CMP not yet implemented."
	064 NotImplemented "Instruction CSEL not yet implemented."
	065 Move X8, 0xD69000
	066 Move X0, [X21]
	067 Move X8, [X8+2064]
	068 Move W9, [X0+224]
	069 Move X19, [X8]
	070 Compare W9, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move X0, X19
	074 Move X1, X31
	075 Call Type.GetTypeFromHandle, X0
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X20, [X31+16]
	078 Move X19, [X31+24]
	079 Move X30, [X31+32]
	080 Move X21, [X31+40]
	081 Return 
	082 Move X0, 0xD38000
	083 Move X0, [X0+2512]
	084 Call 0x1C17D08
	085 Move W1, 1
	086 Call 0x1C17D6C
	087 Move X20, X0
	088 Call 0x19913C0
	089 Move X0, X20
	090 Move X1, X19
	091 Call 0x19990B4
	092 Move X0, X20
	093 Move X1, X31
	094 Move X2, X19
	095 Call 0x1994444
	096 Move X0, 0xD71000
	097 Move X0, [X0+880]
	098 Call 0x1C17D08
	099 Move X1, X20
	100 Move X2, X31
	101 Call Environment.GetResourceString, X0, X1
	102 Move X0, 0xD71000
	103 Move X0, [X0+888]
	104 Move X0, 0xD71000
	105 Move X0, [X0+896]
	106 Call 0x1C17D08
	107 Move X1, X31
	108 Call Environment.GetResourceString, X0
	109 Move X19, X0
	110 Move X0, 0xD38000
	111 Move X0, [X0+2880]
	112 Call 0x1C17D08
	113 Call 0x1C17F10
	114 Move X1, X19
	115 Move X2, X31
	116 Move X20, X0
	117 Call NotSupportedException..ctor, X0, X1
	118 Move X0, 0xD71000
	119 Move X0, [X0+904]
	120 Call 0x1C17D08
	121 Move X1, X31
	122 Call Environment.GetResourceString, X0
	123 Move X19, X0
	124 Move X0, 0xD40000
	125 Move X0, [X0+1400]
	126 Call 0x1C17D08
	127 Call 0x1C17F10
	128 Move X1, X19
	129 Move X2, X31
	130 Move X20, X0
	131 Call ArgumentException..ctor, X0, X1
	132 Move X0, 0xD71000
	133 Move X0, [X0+912]
	134 Call 0x1C17D08
	135 Move X1, X0
	136 Move X0, X20
	137 Call 0x1C17DEC

Method: System.Object CreateInstanceImpl(System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Object[] args, System.Globalization.CultureInfo culture, System.Object[] activationAttributes, ref System.Threading.StackCrawlMark stackMark)

Disassembly:
	0x033A7680 LDR X9, [X9 + 0x3F0]
	0x033A7684 LDR X8, [X20]
	0x033A7688 LDR X1, [X9]
	0x033A768C LDRB W10, [X8 + 0x130]
	0x033A7690 LDRB W9, [X1 + 0x130]
	0x033A7694 CMP W10, W9
	0x033A7698 B.CC 0x33A7764
	0x033A769C LDR X8, [X8 + 0xC8]
	0x033A76A0 ADD X8, X8, X9, 0x3, LSL
	0x033A76A4 LDUR X8, [X8 - 0x8]
	0x033A76A8 CMP X8, X1
	0x033A76AC B.NE 0x33A7764
	0x033A76B0 AND W2, W21, 0x1
	0x033A76B4 MOV X0, X20
	0x033A76B8 MOV X1, X19
	0x033A76BC LDP X20, X19, [X31 + 0x30]
	0x033A76C0 LDP X22, X21, [X31 + 0x20]
	0x033A76C4 LDP X24, X23, [X31 + 0x10]
	0x033A76C8 LDR X30, [X31], #0x40
	0x033A76CC B 0x33A72F0
	0x033A76D0 ADRP X9, 0xD7E000
	0x033A76D4 LDR X9, [X9 + 0x610]
	0x033A76D8 LDR X8, [X20]
	0x033A76DC LDR X1, [X9]
	0x033A76E0 LDRB W10, [X8 + 0x130]
	0x033A76E4 LDRB W9, [X1 + 0x130]
	0x033A76E8 CMP W10, W9
	0x033A76EC B.CC 0x33A7764
	0x033A76F0 LDR X8, [X8 + 0xC8]
	0x033A76F4 ADD X8, X8, X9, 0x3, LSL
	0x033A76F8 LDUR X8, [X8 - 0x8]
	0x033A76FC CMP X8, X1
	0x033A7700 B.NE 0x33A7764
	0x033A7704 AND W2, W21, 0x1
	0x033A7708 MOV X0, X20
	0x033A770C MOV X1, X19
	0x033A7710 LDP X20, X19, [X31 + 0x30]
	0x033A7714 LDP X22, X21, [X31 + 0x20]
	0x033A7718 LDP X24, X23, [X31 + 0x10]
	0x033A771C LDR X30, [X31], #0x40
	0x033A7720 B 0x33A739C
	0x033A7724 LDR X8, [X20]
	0x033A7728 AND W2, W21, 0x1
	0x033A772C MOV X0, X20
	0x033A7730 MOV X1, X19
	0x033A7734 LDR X9, [X8 + 0x208]
	0x033A7738 LDR X3, [X8 + 0x210]
	0x033A773C BLR X9
	0x033A7740 ADRP X8, 0xD84000
	0x033A7744 LDR X8, [X8 + 0xD10]
	0x033A7748 LDP X20, X19, [X31 + 0x30]
	0x033A774C LDP X22, X21, [X31 + 0x20]
	0x033A7750 LDP X24, X23, [X31 + 0x10]
	0x033A7754 LDR X1, [X8]
	0x033A7758 LDR X30, [X31], #0x40
	0x033A775C B 0x1C16E00
	0x033A7760 BL 0x1C16F20
	0x033A7764 MOV X0, X20
	0x033A7768 BL 0x1C171E0
	0x033A776C ADRP X0, 0xD51000
	0x033A7770 LDR X0, [X0 + 0x528]
	0x033A7774 BL 0x1C16D08
	0x033A7778 BL 0x1C16F10
	0x033A777C MOV X19, X0
	0x033A7780 ADRP X0, 0xD84000
	0x033A7784 LDR X0, [X0 + 0xD20]
	0x033A7788 B 0x33A77A8
	0x033A778C ADRP X0, 0xD51000
	0x033A7790 LDR X0, [X0 + 0x528]
	0x033A7794 BL 0x1C16D08
	0x033A7798 BL 0x1C16F10
	0x033A779C MOV X19, X0
	0x033A77A0 ADRP X0, 0xD54000
	0x033A77A4 LDR X0, [X0 + 0x5E8]
	0x033A77A8 BL 0x1C16D08
	0x033A77AC MOV X1, X0
	0x033A77B0 MOV X0, X19
	0x033A77B4 MOV X2, X31
	0x033A77B8 BL 0x330E100
	0x033A77BC ADRP X0, 0xD84000
	0x033A77C0 LDR X0, [X0 + 0xD28]
	0x033A77C4 BL 0x1C16D08
	0x033A77C8 MOV X1, X0
	0x033A77CC MOV X0, X19
	0x033A77D0 BL 0x1C16DEC
	0x033A77D4 ADRP X0, 0xD84000
	0x033A77D8 LDR X0, [X0 + 0xD30]
	0x033A77DC BL 0x1C16D08
	0x033A77E0 MOV X1, X31
	0x033A77E4 BL 0x33BDD84
	0x033A77E8 MOV X19, X0
	0x033A77EC ADRP X0, 0xD54000
	0x033A77F0 LDR X0, [X0 + 0x578]
	0x033A77F4 BL 0x1C16D08
	0x033A77F8 BL 0x1C16F10
	0x033A77FC MOV X1, X19
	0x033A7800 MOV X2, X31
	0x033A7804 MOV X20, X0
	0x033A7808 BL 0x3314A68
	0x033A780C ADRP X0, 0xD84000
	0x033A7810 LDR X0, [X0 + 0xD28]
	0x033A7814 BL 0x1C16D08
	0x033A7818 MOV X1, X0
	0x033A781C MOV X0, X20
	0x033A7820 BL 0x1C16DEC
	0x033A7824 MOVZ W1, 0x1
	0x033A7828 B 0x33A782C
	0x033A782C STP X30, X21, [X31 - 0x20]!
	0x033A7830 STP X20, X19, [X31 + 0x10]
	0x033A7834 ADRP X21, 0x1036000
	0x033A7838 LDRB W8, [X21 + 0x15A]
	0x033A783C MOV W20, W1
	0x033A7840 MOV X19, X0
	0x033A7844 TBNZ X8, 0x0, 0x33A788C
	0x033A7848 ADRP X0, 0xD84000
	0x033A784C LDR X0, [X0 + 0xD10]
	0x033A7850 BL 0x1C16CF4
	0x033A7854 ADRP X0, 0xD84000
	0x033A7858 LDR X0, [X0 + 0xD18]
	0x033A785C BL 0x1C16CF4
	0x033A7860 ADRP X0, 0xD7E000
	0x033A7864 LDR X0, [X0 + 0x610]
	0x033A7868 BL 0x1C16CF4
	0x033A786C ADRP X0, 0xD75000
	0x033A7870 LDR X0, [X0 + 0x3F0]
	0x033A7874 BL 0x1C16CF4
	0x033A7878 ADRP X0, 0xD4C000
	0x033A787C LDR X0, [X0 + 0x6C0]
	0x033A7880 BL 0x1C16CF4
	0x033A7884 MOVZ W8, 0x1
	0x033A7888 STRB W8, [X21 + 0x15A]
	0x033A788C MOV X0, X19
	0x033A7890 MOV X1, X31
	0x033A7894 MOV X2, X31
	0x033A7898 BL 0x32BE96C
	0x033A789C TBNZ X0, 0x0, 0x33A7A20
	0x033A78A0 CBZ X19, 0x33A7A68
	0x033A78A4 LDR X8, [X19]
	0x033A78A8 MOV X0, X19
	0x033A78AC LDP X9, X1, [X8 + 0x198]
	0x033A78B0 BLR X9
	0x033A78B4 ADRP X8, 0xD4C000
	0x033A78B8 LDR X8, [X8 + 0x6C0]
	0x033A78BC CMP W0, 0x2
	0x033A78C0 B.EQ 0x33A7944
	0x033A78C4 CMP W0, 0x10
	0x033A78C8 B.NE 0x33A79BC
	0x033A78CC LDR X0, [X8]
	0x033A78D0 ADRP X8, 0xD84000
	0x033A78D4 LDR X8, [X8 + 0xD18]
	0x033A78D8 LDR W9, [X0 + 0xE0]
	0x033A78DC LDR X21, [X8]
	0x033A78E0 CBNZ W9, 0x33A78E8
	0x033A78E4 BL 0x1C16DFC
	0x033A78E8 MOV X0, X21
	0x033A78EC MOV X1, X31
	0x033A78F0 BL 0x338C698
	0x033A78F4 ADRP X9, 0xD75000
	0x033A78F8 LDR X9, [X9 + 0x3F0]
	0x033A78FC LDR X8, [X19]
	0x033A7900 LDR X1, [X9]
	0x033A7904 LDRB W10, [X8 + 0x130]
	0x033A7908 LDRB W9, [X1 + 0x130]
	0x033A790C CMP W10, W9
	0x033A7910 B.CC 0x33A7A18
	0x033A7914 LDR X8, [X8 + 0xC8]
	0x033A7918 ADD X8, X8, X9, 0x3, LSL
	0x033A791C LDUR X8, [X8 - 0x8]
	0x033A7920 CMP X8, X1
	0x033A7924 B.NE 0x33A7A18
	0x033A7928 MOV X3, X0
	0x033A792C AND W2, W20, 0x1
	0x033A7930 MOV X0, X19
	0x033A7934 LDP X20, X19, [X31 + 0x10]
	0x033A7938 MOV X1, X3
	0x033A793C LDP X30, X21, [X31], #0x20
	0x033A7940 B 0x33A72F0
	0x033A7944 LDR X0, [X8]
	0x033A7948 ADRP X8, 0xD84000
	0x033A794C LDR X8, [X8 + 0xD18]
	0x033A7950 LDR W9, [X0 + 0xE0]
	0x033A7954 LDR X21, [X8]
	0x033A7958 CBNZ W9, 0x33A7960
	0x033A795C BL 0x1C16DFC
	0x033A7960 MOV X0, X21
	0x033A7964 MOV X1, X31
	0x033A7968 BL 0x338C698
	0x033A796C ADRP X9, 0xD7E000
	0x033A7970 LDR X9, [X9 + 0x610]
	0x033A7974 LDR X8, [X19]
	0x033A7978 LDR X1, [X9]
	0x033A797C LDRB W10, [X8 + 0x130]
	0x033A7980 LDRB W9, [X1 + 0x130]
	0x033A7984 CMP W10, W9
	0x033A7988 B.CC 0x33A7A18
	0x033A798C LDR X8, [X8 + 0xC8]
	0x033A7990 ADD X8, X8, X9, 0x3, LSL
	0x033A7994 LDUR X8, [X8 - 0x8]
	0x033A7998 CMP X8, X1
	0x033A799C B.NE 0x33A7A18
	0x033A79A0 MOV X3, X0
	0x033A79A4 AND W2, W20, 0x1
	0x033A79A8 MOV X0, X19
	0x033A79AC LDP X20, X19, [X31 + 0x10]
	0x033A79B0 MOV X1, X3
	0x033A79B4 LDP X30, X21, [X31], #0x20
	0x033A79B8 B 0x33A739C
	0x033A79BC LDR X0, [X8]
	0x033A79C0 ADRP X8, 0xD84000
	0x033A79C4 LDR X8, [X8 + 0xD18]
	0x033A79C8 LDR W9, [X0 + 0xE0]
	0x033A79CC LDR X21, [X8]
	0x033A79D0 CBNZ W9, 0x33A79D8
	0x033A79D4 BL 0x1C16DFC
	0x033A79D8 MOV X0, X21
	0x033A79DC MOV X1, X31
	0x033A79E0 BL 0x338C698
	0x033A79E4 LDR X8, [X19]
	0x033A79E8 MOV X1, X0
	0x033A79EC AND W2, W20, 0x1
	0x033A79F0 MOV X0, X19
	0x033A79F4 LDR X9, [X8 + 0x208]
	0x033A79F8 LDR X3, [X8 + 0x210]
	0x033A79FC BLR X9
	0x033A7A00 ADRP X8, 0xD84000
	0x033A7A04 LDR X8, [X8 + 0xD10]
	0x033A7A08 LDP X20, X19, [X31 + 0x10]
	0x033A7A0C LDR X1, [X8]
	0x033A7A10 LDP X30, X21, [X31], #0x20
	0x033A7A14 B 0x1C16E00
	0x033A7A18 MOV X0, X19
	0x033A7A1C BL 0x1C171E0
	0x033A7A20 ADRP X0, 0xD51000
	0x033A7A24 LDR X0, [X0 + 0x528]
	0x033A7A28 BL 0x1C16D08
	0x033A7A2C BL 0x1C16F10
	0x033A7A30 MOV X19, X0
	0x033A7A34 ADRP X0, 0xD84000
	0x033A7A38 LDR X0, [X0 + 0xD20]
	0x033A7A3C BL 0x1C16D08
	0x033A7A40 MOV X1, X0
	0x033A7A44 MOV X0, X19
	0x033A7A48 MOV X2, X31
	0x033A7A4C BL 0x330E100
	0x033A7A50 ADRP X0, 0xD84000
	0x033A7A54 LDR X0, [X0 + 0xD38]
	0x033A7A58 BL 0x1C16D08
	0x033A7A5C MOV X1, X0
	0x033A7A60 MOV X0, X19
	0x033A7A64 BL 0x1C16DEC
	0x033A7A68 BL 0x1C16F20
	0x033A7A6C MOVZ W2, 0x1
	0x033A7A70 B 0x33A7A74
	0x033A7A74 STR X30, [X31 - 0x40]!
	0x033A7A78 STP X24, X23, [X31 + 0x10]
	0x033A7A7C STP X22, X21, [X31 + 0x20]
	0x033A7A80 STP X20, X19, [X31 + 0x30]
	0x033A7A84 ADRP X22, 0x1036000
	0x033A7A88 LDRB W8, [X22 + 0x15B]
	0x033A7A8C MOV W21, W2
	0x033A7A90 MOV X19, X1
	0x033A7A94 MOV X20, X0
	0x033A7A98 TBNZ X8, 0x0, 0x33A7AD4
	0x033A7A9C ADRP X0, 0xD84000
	0x033A7AA0 LDR X0, [X0 + 0xD18]
	0x033A7AA4 BL 0x1C16CF4
	0x033A7AA8 ADRP X0, 0xD7E000
	0x033A7AAC LDR X0, [X0 + 0x610]
	0x033A7AB0 BL 0x1C16CF4
	0x033A7AB4 ADRP X0, 0xD75000
	0x033A7AB8 LDR X0, [X0 + 0x3F0]
	0x033A7ABC BL 0x1C16CF4
	0x033A7AC0 ADRP X0, 0xD4C000
	0x033A7AC4 LDR X0, [X0 + 0x6C0]
	0x033A7AC8 BL 0x1C16CF4
	0x033A7ACC MOVZ W8, 0x1
	0x033A7AD0 STRB W8, [X22 + 0x15B]
	0x033A7AD4 MOV X0, X20
	0x033A7AD8 MOV X1, X31
	0x033A7ADC MOV X2, X31
	0x033A7AE0 BL 0x32BE96C
	0x033A7AE4 TBNZ X0, 0x0, 0x33A7C90
	0x033A7AE8 ADRP X23, 0xD4C000
	0x033A7AEC LDR X23, [X23 + 0x6C0]
	0x033A7AF0 LDR X0, [X23]
	0x033A7AF4 LDR W8, [X0 + 0xE0]
	0x033A7AF8 CBNZ W8, 0x33A7B00
	0x033A7AFC BL 0x1C16DFC
	0x033A7B00 MOV X0, X19
	0x033A7B04 MOV X1, X31
	0x033A7B08 MOV X2, X31
	0x033A7B0C BL 0x3395194
	0x033A7B10 TBNZ X0, 0x0, 0x33A7CB0
	0x033A7B14 ADRP X24, 0xD84000
	0x033A7B18 LDR X0, [X23]
	0x033A7B1C LDR X24, [X24 + 0xD18]
	0x033A7B20 LDR W8, [X0 + 0xE0]
	0x033A7B24 LDR X22, [X24]
	0x033A7B28 CBNZ W8, 0x33A7B30
	0x033A7B2C BL 0x1C16DFC
	0x033A7B30 MOV X0, X22
	0x033A7B34 MOV X1, X31
	0x033A7B38 BL 0x338C698
	0x033A7B3C CBZ X19, 0x33A7C84
	0x033A7B40 LDR X8, [X19]
	0x033A7B44 MOV X1, X0
	0x033A7B48 MOV X0, X19
	0x033A7B4C LDR X9, [X8 + 0x298]
	0x033A7B50 LDR X2, [X8 + 0x2A0]
	0x033A7B54 BLR X9
	0x033A7B58 TBNZ X0, 0x0, 0x33A7B90
	0x033A7B5C LDR X0, [X23]
	0x033A7B60 LDR X22, [X24]
	0x033A7B64 LDR W8, [X0 + 0xE0]
	0x033A7B68 CBNZ W8, 0x33A7B70
	0x033A7B6C BL 0x1C16DFC
	0x033A7B70 MOV X0, X22
	0x033A7B74 MOV X1, X31
	0x033A7B78 BL 0x338C698
	0x033A7B7C MOV X1, X0
	0x033A7B80 MOV X0, X19
	0x033A7B84 MOV X2, X31
	0x033A7B88 BL 0x3395F0C
	0x033A7B8C TBNZ X0, 0x0, 0x33A7CF8
	0x033A7B90 CBZ X20, 0x33A7C84
	0x033A7B94 LDR X8, [X20]
	0x033A7B98 MOV X0, X20
	0x033A7B9C LDP X9, X1, [X8 + 0x198]
	0x033A7BA0 BLR X9
	0x033A7BA4 CMP W0, 0x2
	0x033A7BA8 B.EQ 0x33A7C08
	0x033A7BAC CMP W0, 0x10
	0x033A7BB0 B.NE 0x33A7C5C
	0x033A7BB4 ADRP X9, 0xD75000
	0x033A7BB8 LDR X9, [X9 + 0x3F0]
	0x033A7BBC LDR X8, [X20]
	0x033A7BC0 LDR X1, [X9]
	0x033A7BC4 LDRB W10, [X8 + 0x130]
	0x033A7BC8 LDRB W9, [X1 + 0x130]
	0x033A7BCC CMP W10, W9
	0x033A7BD0 B.CC 0x33A7C88
	0x033A7BD4 LDR X8, [X8 + 0xC8]
	0x033A7BD8 ADD X8, X8, X9, 0x3, LSL
	0x033A7BDC LDUR X8, [X8 - 0x8]
	0x033A7BE0 CMP X8, X1
	0x033A7BE4 B.NE 0x33A7C88
	0x033A7BE8 AND W2, W21, 0x1
	0x033A7BEC MOV X0, X20
	0x033A7BF0 MOV X1, X19
	0x033A7BF4 LDP X20, X19, [X31 + 0x30]
	0x033A7BF8 LDP X22, X21, [X31 + 0x20]
	0x033A7BFC LDP X24, X23, [X31 + 0x10]
	0x033A7C00 LDR X30, [X31], #0x40
	0x033A7C04 B 0x33A7448
	0x033A7C08 ADRP X9, 0xD7E000
	0x033A7C0C LDR X9, [X9 + 0x610]
	0x033A7C10 LDR X8, [X20]
	0x033A7C14 LDR X1, [X9]
	0x033A7C18 LDRB W10, [X8 + 0x130]
	0x033A7C1C LDRB W9, [X1 + 0x130]
	0x033A7C20 CMP W10, W9
	0x033A7C24 B.CC 0x33A7C88
	0x033A7C28 LDR X8, [X8 + 0xC8]
	0x033A7C2C ADD X8, X8, X9, 0x3, LSL
	0x033A7C30 LDUR X8, [X8 - 0x8]
	0x033A7C34 CMP X8, X1
	0x033A7C38 B.NE 0x33A7C88
	0x033A7C3C AND W2, W21, 0x1
	0x033A7C40 MOV X0, X20
	0x033A7C44 MOV X1, X19
	0x033A7C48 LDP X20, X19, [X31 + 0x30]
	0x033A7C4C LDP X22, X21, [X31 + 0x20]
	0x033A7C50 LDP X24, X23, [X31 + 0x10]
	0x033A7C54 LDR X30, [X31], #0x40
	0x033A7C58 B 0x33A74B8
	0x033A7C5C LDR X8, [X20]
	0x033A7C60 AND W2, W21, 0x1
	0x033A7C64 MOV X0, X20
	0x033A7C68 MOV X1, X19
	0x033A7C6C LDP X4, X3, [X8 + 0x1E8]
	0x033A7C70 LDP X20, X19, [X31 + 0x30]
	0x033A7C74 LDP X22, X21, [X31 + 0x20]
	0x033A7C78 LDP X24, X23, [X31 + 0x10]
	0x033A7C7C LDR X30, [X31], #0x40
	0x033A7C80 BR X4
	0x033A7C84 BL 0x1C16F20
	0x033A7C88 MOV X0, X20
	0x033A7C8C BL 0x1C171E0
	0x033A7C90 ADRP X0, 0xD51000
	0x033A7C94 LDR X0, [X0 + 0x528]
	0x033A7C98 BL 0x1C16D08
	0x033A7C9C BL 0x1C16F10
	0x033A7CA0 MOV X19, X0
	0x033A7CA4 ADRP X0, 0xD84000
	0x033A7CA8 LDR X0, [X0 + 0xD20]
	0x033A7CAC B 0x33A7CCC
	0x033A7CB0 ADRP X0, 0xD51000
	0x033A7CB4 LDR X0, [X0 + 0x528]
	0x033A7CB8 BL 0x1C16D08
	0x033A7CBC BL 0x1C16F10
	0x033A7CC0 MOV X19, X0
	0x033A7CC4 ADRP X0, 0xD7E000
	0x033A7CC8 LDR X0, [X0 + 0xE10]
	0x033A7CCC BL 0x1C16D08
	0x033A7CD0 MOV X1, X0
	0x033A7CD4 MOV X0, X19
	0x033A7CD8 MOV X2, X31
	0x033A7CDC BL 0x330E100
	0x033A7CE0 ADRP X0, 0xD84000
	0x033A7CE4 LDR X0, [X0 + 0xD40]
	0x033A7CE8 BL 0x1C16D08
	0x033A7CEC MOV X1, X0
	0x033A7CF0 MOV X0, X19
	0x033A7CF4 BL 0x1C16DEC
	0x033A7CF8 ADRP X0, 0xD84000
	0x033A7CFC LDR X0, [X0 + 0xD30]
	0x033A7D00 BL 0x1C16D08
	0x033A7D04 MOV X1, X31
	0x033A7D08 BL 0x33BDD84
	0x033A7D0C MOV X19, X0
	0x033A7D10 ADRP X0, 0xD54000
	0x033A7D14 LDR X0, [X0 + 0x578]
	0x033A7D18 BL 0x1C16D08
	0x033A7D1C BL 0x1C16F10
	0x033A7D20 MOV X1, X19
	0x033A7D24 MOV X2, X31
	0x033A7D28 MOV X20, X0
	0x033A7D2C BL 0x3314A68
	0x033A7D30 ADRP X0, 0xD84000
	0x033A7D34 LDR X0, [X0 + 0xD40]
	0x033A7D38 BL 0x1C16D08
	0x033A7D3C MOV X1, X0
	0x033A7D40 MOV X0, X20
	0x033A7D44 BL 0x1C16DEC
	0x033A7D48 MOVZ W2, 0x1
	0x033A7D4C B 0x33A7D50
	0x033A7D50 STR X30, [X31 - 0x20]!
	0x033A7D54 STP X20, X19, [X31 + 0x10]
	0x033A7D58 AND W2, W2, 0x1
	0x033A7D5C BL 0x33A7530
	0x033A7D60 CBZ X0, 0x33A7D80
	0x033A7D64 LDR X8, [X0 + 0x18]
	0x033A7D68 CBZ X8, 0x33A7D7C
	0x033A7D6C CMP W8, 0x1
	0x033A7D70 B.NE 0x33A7D8C
	0x033A7D74 LDR X0, [X0 + 0x20]
	0x033A7D78 B 0x33A7D80
	0x033A7D7C MOV X0, X31
	0x033A7D80 LDP X20, X19, [X31 + 0x10]
	0x033A7D84 LDR X30, [X31], #0x20
	0x033A7D88 RET
	0x033A7D8C ADRP X0, 0xD84000
	0x033A7D90 LDR X0, [X0 + 0xD48]
	0x033A7D94 BL 0x1C16D08
	0x033A7D98 MOV X1, X31
	0x033A7D9C BL 0x33BDD84
	0x033A7DA0 MOV X19, X0
	0x033A7DA4 ADRP X0, 0xD7E000
	0x033A7DA8 LDR X0, [X0 + 0x7A0]
	0x033A7DAC BL 0x1C16D08
	0x033A7DB0 BL 0x1C16F10
	0x033A7DB4 MOV X1, X19
	0x033A7DB8 MOV X2, X31
	0x033A7DBC MOV X20, X0
	0x033A7DC0 BL 0x32CC544
	0x033A7DC4 ADRP X0, 0xD84000
	0x033A7DC8 LDR X0, [X0 + 0xD50]
	0x033A7DCC BL 0x1C16D08
	0x033A7DD0 MOV X1, X0
	0x033A7DD4 MOV X0, X20
	0x033A7DD8 BL 0x1C16DEC
	0x033A7DDC MOVZ W2, 0x1
	0x033A7DE0 B 0x33A7DE4
	0x033A7DE4 STR X30, [X31 - 0x40]!
	0x033A7DE8 STP X24, X23, [X31 + 0x10]
	0x033A7DEC STP X22, X21, [X31 + 0x20]
	0x033A7DF0 STP X20, X19, [X31 + 0x30]
	0x033A7DF4 ADRP X22, 0x1036000
	0x033A7DF8 LDRB W8, [X22 + 0x15C]
	0x033A7DFC MOV W20, W2
	0x033A7E00 MOV X19, X1
	0x033A7E04 MOV X21, X0
	0x033A7E08 TBNZ X8, 0x0, 0x33A7E38
	0x033A7E0C ADRP X0, 0xD84000
	0x033A7E10 LDR X0, [X0 + 0xD10]
	0x033A7E14 BL 0x1C16CF4
	0x033A7E18 ADRP X0, 0xD84000
	0x033A7E1C LDR X0, [X0 + 0xD18]
	0x033A7E20 BL 0x1C16CF4
	0x033A7E24 ADRP X0, 0xD4C000
	0x033A7E28 LDR X0, [X0 + 0x6C0]
	0x033A7E2C BL 0x1C16CF4
	0x033A7E30 MOVZ W8, 0x1
	0x033A7E34 STRB W8, [X22 + 0x15C]
	0x033A7E38 MOV X0, X21
	0x033A7E3C MOV X1, X31
	0x033A7E40 MOV X2, X31
	0x033A7E44 BL 0x32D5BF8
	0x033A7E48 TBNZ X0, 0x0, 0x33A7F4C
	0x033A7E4C ADRP X23, 0xD4C000
	0x033A7E50 LDR X23, [X23 + 0x6C0]
	0x033A7E54 LDR X0, [X23]
	0x033A7E58 LDR W8, [X0 + 0xE0]
	0x033A7E5C CBNZ W8, 0x33A7E64
	0x033A7E60 BL 0x1C16DFC
	0x033A7E64 MOV X0, X19
	0x033A7E68 MOV X1, X31
	0x033A7E6C MOV X2, X31
	0x033A7E70 BL 0x3395194
	0x033A7E74 TBNZ X0, 0x0, 0x33A7F6C
	0x033A7E78 ADRP X24, 0xD84000
	0x033A7E7C LDR X0, [X23]
	0x033A7E80 LDR X24, [X24 + 0xD18]
	0x033A7E84 LDR W8, [X0 + 0xE0]
	0x033A7E88 LDR X22, [X24]
	0x033A7E8C CBNZ W8, 0x33A7E94
	0x033A7E90 BL 0x1C16DFC
	0x033A7E94 MOV X0, X22
	0x033A7E98 MOV X1, X31
	0x033A7E9C BL 0x338C698
	0x033A7EA0 CBZ X19, 0x33A7F48
	0x033A7EA4 LDR X8, [X19]
	0x033A7EA8 MOV X1, X0
	0x033A7EAC MOV X0, X19
	0x033A7EB0 LDR X9, [X8 + 0x298]
	0x033A7EB4 LDR X2, [X8 + 0x2A0]
	0x033A7EB8 BLR X9
	0x033A7EBC TBNZ X0, 0x0, 0x33A7EF4
	0x033A7EC0 LDR X0, [X23]
	0x033A7EC4 LDR X22, [X24]
	0x033A7EC8 LDR W8, [X0 + 0xE0]
	0x033A7ECC CBNZ W8, 0x33A7ED4
	0x033A7ED0 BL 0x1C16DFC
	0x033A7ED4 MOV X0, X22
	0x033A7ED8 MOV X1, X31
	0x033A7EDC BL 0x338C698
	0x033A7EE0 MOV X1, X0
	0x033A7EE4 MOV X0, X19
	0x033A7EE8 MOV X2, X31
	0x033A7EEC BL 0x3395F0C
	0x033A7EF0 TBNZ X0, 0x0, 0x33A7FC0
	0x033A7EF4 CBZ X21, 0x33A7F48
	0x033A7EF8 LDR X8, [X21]
	0x033A7EFC AND W2, W20, 0x1
	0x033A7F00 MOV X0, X21
	0x033A7F04 MOV X1, X19
	0x033A7F08 LDR X9, [X8 + 0x208]
	0x033A7F0C LDR X3, [X8 + 0x210]
	0x033A7F10 BLR X9
	0x033A7F14 CBZ X0, 0x33A7F34
	0x033A7F18 ADRP X8, 0xD84000
	0x033A7F1C LDR X8, [X8 + 0xD10]
	0x033A7F20 MOV X19, X0
	0x033A7F24 LDR X20, [X8]
	0x033A7F28 MOV X1, X20
	0x033A7F2C BL 0x1C16E00
	0x033A7F30 CBZ X0, 0x33A7FB4
	0x033A7F34 LDP X20, X19, [X31 + 0x30]
	0x033A7F38 LDP X22, X21, [X31 + 0x20]
	0x033A7F3C LDP X24, X23, [X31 + 0x10]
	0x033A7F40 LDR X30, [X31], #0x40
	0x033A7F44 RET
	0x033A7F48 BL 0x1C16F20
	0x033A7F4C ADRP X0, 0xD51000
	0x033A7F50 LDR X0, [X0 + 0x528]
	0x033A7F54 BL 0x1C16D08
	0x033A7F58 BL 0x1C16F10
	0x033A7F5C MOV X19, X0
	0x033A7F60 ADRP X0, 0xD84000
	0x033A7F64 LDR X0, [X0 + 0xD20]
	0x033A7F68 B 0x33A7F88
	0x033A7F6C ADRP X0, 0xD51000
	0x033A7F70 LDR X0, [X0 + 0x528]
	0x033A7F74 BL 0x1C16D08
	0x033A7F78 BL 0x1C16F10
	0x033A7F7C MOV X19, X0
	0x033A7F80 ADRP X0, 0xD7E000
	0x033A7F84 LDR X0, [X0 + 0xE10]
	0x033A7F88 BL 0x1C16D08
	0x033A7F8C MOV X1, X0
	0x033A7F90 MOV X0, X19
	0x033A7F94 MOV X2, X31
	0x033A7F98 BL 0x330E100
	0x033A7F9C ADRP X0, 0xD84000
	0x033A7FA0 LDR X0, [X0 + 0xD58]
	0x033A7FA4 BL 0x1C16D08
	0x033A7FA8 MOV X1, X0
	0x033A7FAC MOV X0, X19
	0x033A7FB0 BL 0x1C16DEC
	0x033A7FB4 MOV X0, X19
	0x033A7FB8 MOV X1, X20
	0x033A7FBC BL 0x1C171E0
	0x033A7FC0 ADRP X0, 0xD84000
	0x033A7FC4 LDR X0, [X0 + 0xD30]
	0x033A7FC8 BL 0x1C16D08
	0x033A7FCC MOV X1, X31
	0x033A7FD0 BL 0x33BDD84
	0x033A7FD4 MOV X19, X0
	0x033A7FD8 ADRP X0, 0xD54000
	0x033A7FDC LDR X0, [X0 + 0x578]
	0x033A7FE0 BL 0x1C16D08
	0x033A7FE4 BL 0x1C16F10
	0x033A7FE8 MOV X1, X19
	0x033A7FEC MOV X2, X31
	0x033A7FF0 MOV X20, X0
	0x033A7FF4 BL 0x3314A68
	0x033A7FF8 ADRP X0, 0xD84000
	0x033A7FFC LDR X0, [X0 + 0xD58]
	0x033A8000 BL 0x1C16D08
	0x033A8004 MOV X1, X0
	0x033A8008 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X19, 0x1037000
	015 Move W8, [X19+493]
	016 Move X21, X4
	017 Move X23, X3
	018 Move X22, X2
	019 Move W20, W1
	020 Move X28, X0
	021 Move [X31+40], X3
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {64}
	026 Move X0, 0xD4D000
	027 Move X0, [X0+2504]
	028 Call 0x1C17CF4
	029 Move X0, 0xD77000
	030 Move X0, [X0+2424]
	031 Call 0x1C17CF4
	032 Move X0, 0xD85000
	033 Move X0, [X0+3240]
	034 Call 0x1C17CF4
	035 Move X0, 0xD85000
	036 Move X0, [X0+3248]
	037 Call 0x1C17CF4
	038 Move X0, 0xD85000
	039 Move X0, [X0+3256]
	040 Call 0x1C17CF4
	041 Move X0, 0xD85000
	042 Move X0, [X0+3264]
	043 Call 0x1C17CF4
	044 Move X0, 0xD85000
	045 Move X0, [X0+3272]
	046 Call 0x1C17CF4
	047 Move X0, 0xD85000
	048 Move X0, [X0+3280]
	049 Call 0x1C17CF4
	050 Move X0, 0xD80000
	051 Move X0, [X0+472]
	052 Call 0x1C17CF4
	053 Move X0, 0xD76000
	054 Move X0, [X0+1256]
	055 Call 0x1C17CF4
	056 Move X0, 0xD55000
	057 Move X0, [X0+3168]
	058 Call 0x1C17CF4
	059 Move X0, 0xD4D000
	060 Move X0, [X0+1728]
	061 Call 0x1C17CF4
	062 Move W8, 1
	063 Move [X19+493], W8
	064 Move X0, X28
	065 Move [X31+32], X31
	066 Call RuntimeType.CreateInstanceCheckThis, X0
	067 Compare X23, 0
	068 JumpIfNotEqual {102}
	069 Move X8, 0xD4D000
	070 Move X8, [X8+2504]
	071 Move X23, [X8]
	072 Move X8, [X23+56]
	073 Compare X8, 0
	074 JumpIfNotEqual {78}
	075 Move X0, X23
	076 Call 0x1C5D6E0
	077 Move X8, [X23+56]
	078 Move X0, [X8+16]
	079 Move W8, [X0+309]
	080 Move TEMP, X8
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfEqual {85}
	084 Call 0x1C5D684
	085 Move W8, [X0+224]
	086 Compare W8, 0
	087 JumpIfNotEqual {89}
	088 Call 0x1C17DFC
	089 Move X8, [X23+56]
	090 Move X0, [X8+16]
	091 Move W8, [X0+309]
	092 Move TEMP, X8
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfEqual {97}
	096 Call 0x1C5D684
	097 Move X8, [X0+184]
	098 Move X23, [X8]
	099 Move [X31+40], X23
	100 Compare X23, 0
	101 JumpIfEqual {420}
	102 Move X26, [X23+24]
	103 Compare X22, 0
	104 JumpIfNotEqual {115}
	105 Move X8, 0xD4D000
	106 Move X8, [X8+1728]
	107 Move X0, [X8]
	108 Move W8, [X0+224]
	109 Compare W8, 0
	110 JumpIfNotEqual {112}
	111 Call 0x1C17DFC
	112 Move X0, X31
	113 Call Type.get_DefaultBinder
	114 Move X22, X0
	115 Move W8, 20
	116 NotImplemented "Instruction BICS not yet implemented."
	117 Compare W26, 0
	118 JumpIfNotEqual {134}
	119 Move X0, X28
	120 Move X1, X31
	121 Call Type.get_IsValueType, X0
	122 Move TEMP, X0
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfNotEqual {134}
	126 And W31, W20, 0x2000000
	127 NotImplemented "Instruction CSET not yet implemented."
	128 And W31, W20, 32
	129 NotImplemented "Instruction CSET not yet implemented."
	130 Move W3, 1
	131 Move X0, X28
	132 Move W2, W31
	133 Call RuntimeType.CreateInstanceDefaultCtor, X0, X1, X2, X3, X4, X5
	134 Move X8, [X28]
	135 Move X9, [X8+1608]
	136 Move X2, [X8+1616]
	137 Move X0, X28
	138 Move W1, W20
	139 NotImplemented "Instruction BLR not yet implemented."
	140 Move X24, X0
	141 Compare X0, 0
	142 JumpIfEqual {401}
	143 Move X8, 0xD85000
	144 Move X8, [X8+3272]
	145 Move X0, [X8]
	146 Call 0x1C17F10
	147 Move X8, 0xD85000
	148 Move X8, [X8+3256]
	149 Move W1, [X24+24]
	150 Move X23, X0
	151 Move X2, [X8]
	152 Call List`1<Object>..ctor, X0, X1
	153 Move [X31+24], X21
	154 Move X8, 0xD55000
	155 Move X8, [X8+3168]
	156 Move X0, [X8]
	157 Move W1, W26
	158 Call 0x1C17D6C
	159 Move X25, X0
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Move X19, X31
	162 And X21, X26, 0
	163 Add X27, X25, 32
	164 Move X8, [X31+40]
	165 Compare X8, 0
	166 JumpIfEqual {375}
	167 Move W9, [X8+24]
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Add X8, X8, X19
	170 Move X0, [X8+32]
	171 Compare X0, 0
	172 JumpIfEqual {189}
	173 Move X1, X31
	174 Call "il2cpp_vm_object_is_inst", X0
	175 Compare X25, 0
	176 JumpIfEqual {377}
	177 Move X26, X0
	178 Compare X0, 0
	179 JumpIfEqual {186}
	180 Move X8, [X25]
	181 Move X1, [X8+64]
	182 Move X0, X26
	183 Call 0x1C17E00
	184 Compare X0, 0
	185 JumpIfEqual {382}
	186 Move W8, [X25+24]
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Move [X27], X26
	189 Add X19, X19, 1
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Move X8, [X24+24]
	192 Move [X31+16], X28
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Move X29, 0xD76000
	195 Move X21, 0xD80000
	196 Move X19, 0xD85000
	197 Move X29, [X29+1256]
	198 Move X21, [X21+472]
	199 Move X19, [X19+3240]
	200 Move X27, X31
	201 And X8, X8, 0
	202 Add X28, X24, 32
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Move X0, [X29]
	205 Move X26, [X28]
	206 Move W8, [X0+224]
	207 Compare W8, 0
	208 JumpIfNotEqual {210}
	209 Call 0x1C17DFC
	210 Compare X26, 0
	211 JumpIfEqual {221}
	212 Move X8, [X26]
	213 Move X1, [X21]
	214 Move W10, [X8+304]
	215 Move W9, [X1+304]
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Move X8, [X8+200]
	218 Add X8, X8, X9
	219 NotImplemented "Instruction LDUR not yet implemented."
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Move W2, 3
	222 Move X0, X26
	223 Move W1, W20
	224 Move X3, X25
	225 Call RuntimeType.FilterApplyConstructorInfo, X0, X1, X2, X3
	226 Move TEMP, X0
	227 And TEMP, TEMP, 1
	228 Compare TEMP, 1
	229 JumpIfNotEqual {254}
	230 Move W8, [X24+24]
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Compare X23, 0
	233 JumpIfEqual {379}
	234 Move W10, [X23+28]
	235 Move X1, [X28]
	236 Move X8, [X23+16]
	237 Move X9, [X19]
	238 Add W10, W10, 1
	239 Move [X23+28], W10
	240 Compare X8, 0
	241 JumpIfEqual {380}
	242 NotImplemented "Instruction LDRSW not yet implemented."
	243 Move W11, [X8+24]
	244 NotImplemented "Instruction CMP not yet implemented."
	245 Add W9, W10, 1
	246 Add X8, X8, X10
	247 Move [X23+24], W9
	248 Move [X8+32], X1
	249 Move X8, [X9+32]
	250 Move X8, [X8+192]
	251 Move X2, [X8+112]
	252 Move X0, X23
	253 Call List`1<Object>.AddWithResize, X0, X1
	254 Move W8, [X24+24]
	255 Add X27, X27, 1
	256 NotImplemented "Instruction CMP not yet implemented."
	257 Compare X23, 0
	258 JumpIfEqual {402}
	259 Move X8, 0xD85000
	260 Move X8, [X8+3280]
	261 Move W1, [X23+24]
	262 Move X0, [X8]
	263 Call 0x1C17D6C
	264 Move X21, [X31+24]
	265 Move X8, 0xD85000
	266 Move X8, [X8+3248]
	267 Move X24, X0
	268 Move X2, [X8]
	269 Move X0, X23
	270 Move X1, X24
	271 Call List`1<Object>.CopyTo, X0, X1
	272 Move X19, [X31+16]
	273 Compare X24, 0
	274 JumpIfEqual {385}
	275 Move X8, [X24+24]
	276 Compare X8, 0
	277 JumpIfEqual {385}
	278 Move [X31+32], X31
	279 Compare X22, 0
	280 JumpIfEqual {403}
	281 Move X8, [X22]
	282 Move X9, [X8+392]
	283 Move X8, [X8+400]
	284 Add X3, X31, 40
	285 Add X7, X31, 32
	286 Move X0, X22
	287 Move W1, W20
	288 Move X2, X24
	289 Move X4, X31
	290 Move X5, X21
	291 Move X6, X31
	292 Move [X31], X8
	293 NotImplemented "Instruction BLR not yet implemented."
	294 Move X23, X0
	295 Move X0, X23
	296 Move X1, X31
	297 Move X2, X31
	298 Call MethodBase.op_Equality, X0, X1
	299 Move TEMP, X0
	300 And TEMP, TEMP, 1
	301 Compare TEMP, 1
	302 JumpIfEqual {404}
	303 Compare X23, 0
	304 JumpIfEqual {418}
	305 Move X8, [X23]
	306 Move X1, [X8+928]
	307 Move X9, [X8+920]
	308 Move X0, X23
	309 NotImplemented "Instruction BLR not yet implemented."
	310 Compare X0, 0
	311 JumpIfEqual {419}
	312 Move X8, [X0+24]
	313 Move X3, [X31+40]
	314 Compare X8, 0
	315 JumpIfEqual {346}
	316 Move X9, 0xD77000
	317 Move X9, [X9+2424]
	318 Move X8, [X23]
	319 Move X1, [X9]
	320 Move W10, [X8+304]
	321 Move W9, [X1+304]
	322 NotImplemented "Instruction CMP not yet implemented."
	323 Move X10, [X8+200]
	324 Add X9, X10, X9
	325 NotImplemented "Instruction LDUR not yet implemented."
	326 NotImplemented "Instruction CMP not yet implemented."
	327 Move X9, [X8+936]
	328 Move X5, [X8+944]
	329 Move X0, X23
	330 Move W1, W20
	331 Move X2, X22
	332 Move X4, X21
	333 NotImplemented "Instruction BLR not yet implemented."
	334 Move X2, [X31+32]
	335 Move X19, X0
	336 Compare X2, 0
	337 JumpIfEqual {357}
	338 Compare X22, 0
	339 JumpIfEqual {421}
	340 Move X8, [X22]
	341 Move X9, [X8+424]
	342 Move X3, [X8+432]
	343 Add X1, X31, 40
	344 Move X0, X22
	345 NotImplemented "Instruction BLR not yet implemented."
	346 Compare X3, 0
	347 JumpIfEqual {422}
	348 Move X8, [X3+24]
	349 Compare X8, 0
	350 JumpIfNotEqual {423}
	351 And W31, W20, 0x2000000
	352 NotImplemented "Instruction CSET not yet implemented."
	353 Move W1, 1
	354 Move X0, X19
	355 Call Activator.CreateInstance, X0, X1, X2
	356 Move X19, X0
	357 Move X0, X19
	358 Move X20, [X31+128]
	359 Move X19, [X31+136]
	360 Move X22, [X31+112]
	361 Move X21, [X31+120]
	362 Move X24, [X31+96]
	363 Move X23, [X31+104]
	364 Move X26, [X31+80]
	365 Move X25, [X31+88]
	366 Move X28, [X31+64]
	367 Move X27, [X31+72]
	368 Move X29, [X31+48]
	369 Move X30, [X31+56]
	370 Add X31, X31, 144
	371 Return X0
	372 Move X0, X26
	373 Call 0x1C181E0
	374 Call 0x1C17F28
	375 Call 0x1C17F20
	376 Call 0x1C17F28
	377 Call 0x1C17F20
	378 Call 0x1C17F28
	379 Call 0x1C17F20
	380 Call 0x1C17F20
	381 Call 0x1C17F28
	382 Call 0x1C17F44
	383 Move X1, X31
	384 Call 0x1C17DEC
	385 Move X0, 0xD4D000
	386 Move X0, [X0+2512]
	387 Call 0x1C17D08
	388 Move W1, 1
	389 Call 0x1C17D6C
	390 Move X20, X0
	391 Move X0, [X31+16]
	392 Move X8, [X0]
	393 Move X1, [X8+752]
	394 Move X9, [X8+744]
	395 NotImplemented "Instruction BLR not yet implemented."
	396 Compare X20, 0
	397 JumpIfNotEqual {489}
	398 Call 0x1C17F20
	399 Move X0, X23
	400 Call 0x1C181E0
	401 Call 0x1C17F20
	402 Call 0x1C17F20
	403 Call 0x1C17F20
	404 Move X0, 0xD4D000
	405 Move X0, [X0+2512]
	406 Call 0x1C17D08
	407 Move W1, 1
	408 Call 0x1C17D6C
	409 Move X20, X0
	410 Move X0, [X31+16]
	411 Move X8, [X0]
	412 Move X1, [X8+752]
	413 Move X9, [X8+744]
	414 NotImplemented "Instruction BLR not yet implemented."
	415 Compare X20, 0
	416 JumpIfNotEqual {505}
	417 Call 0x1C17F20
	418 Call 0x1C17F20
	419 Call 0x1C17F20
	420 Call 0x1C17F20
	421 Call 0x1C17F20
	422 Call 0x1C17F20
	423 Move X0, 0xD4F000
	424 Move X0, [X0+3144]
	425 Call 0x1C17D08
	426 Move W8, [X0+224]
	427 Compare W8, 0
	428 JumpIfNotEqual {430}
	429 Call 0x1C17DFC
	430 Move X0, X31
	431 Call CultureInfo.get_CurrentCulture
	432 Move X19, X0
	433 Move X0, 0xD85000
	434 Move X0, [X0+3288]
	435 Call 0x1C17D08
	436 Move X1, X31
	437 Call Environment.GetResourceString, X0
	438 Move X20, X0
	439 Move X0, 0xD4D000
	440 Move X0, [X0+2504]
	441 Call 0x1C17D08
	442 Move X8, [X0+56]
	443 Move X21, X0
	444 Compare X8, 0
	445 JumpIfNotEqual {449}
	446 Move X0, X21
	447 Call 0x1C5D6E0
	448 Move X8, [X21+56]
	449 Move X0, [X8+16]
	450 Move W8, [X0+309]
	451 Move TEMP, X8
	452 And TEMP, TEMP, 1
	453 Compare TEMP, 1
	454 JumpIfEqual {456}
	455 Call 0x1C5D684
	456 Move W8, [X0+224]
	457 Compare W8, 0
	458 JumpIfNotEqual {460}
	459 Call 0x1C17DFC
	460 Move X8, [X21+56]
	461 Move X0, [X8+16]
	462 Move W8, [X0+309]
	463 Move TEMP, X8
	464 And TEMP, TEMP, 1
	465 Compare TEMP, 1
	466 JumpIfEqual {468}
	467 Call 0x1C5D684
	468 Move X8, [X0+184]
	469 Move X2, [X8]
	470 Move X0, X19
	471 Move X1, X20
	472 Move X3, X31
	473 Call String.Format, X0, X1, X2
	474 Move X19, X0
	475 Move X0, 0xD4D000
	476 Move X0, [X0+2880]
	477 Call 0x1C17D08
	478 Call 0x1C17F10
	479 Move X20, X0
	480 Move X1, X19
	481 Move X2, X31
	482 Call NotSupportedException..ctor, X0, X1
	483 Move X0, 0xD85000
	484 Move X0, [X0+3296]
	485 Call 0x1C17D08
	486 Move X1, X0
	487 Move X0, X20
	488 Call 0x1C17DEC
	489 Move X19, X0
	490 Compare X0, 0
	491 JumpIfNotEqual {496}
	492 Move W8, [X20+24]
	493 Compare W8, 0
	494 JumpIfNotEqual {512}
	495 Call 0x1C17F28
	496 Move X8, [X20]
	497 Move X1, [X8+64]
	498 Move X0, X19
	499 Call 0x1C17E00
	500 Compare X0, 0
	501 JumpIfNotEqual {492}
	502 Call 0x1C17F44
	503 Move X1, X31
	504 Call 0x1C17DEC
	505 Move X19, X0
	506 Compare X0, 0
	507 JumpIfNotEqual {534}
	508 Move W8, [X20+24]
	509 Compare W8, 0
	510 JumpIfNotEqual {543}
	511 Call 0x1C17F28
	512 Move [X20+32], X19
	513 Move X0, 0xD85000
	514 Move X0, [X0+3304]
	515 Call 0x1C17D08
	516 Move X1, X20
	517 Move X2, X31
	518 Call Environment.GetResourceString, X0, X1
	519 Move X19, X0
	520 Move X0, 0xD76000
	521 Move X0, [X0+40]
	522 Call 0x1C17D08
	523 Call 0x1C17F10
	524 Move X20, X0
	525 Move X1, X19
	526 Move X2, X31
	527 Call MissingMethodException..ctor, X0, X1
	528 Move X0, 0xD85000
	529 Move X0, [X0+3296]
	530 Call 0x1C17D08
	531 Move X1, X0
	532 Move X0, X20
	533 Call 0x1C17DEC
	534 Move X8, [X20]
	535 Move X1, [X8+64]
	536 Move X0, X19
	537 Call 0x1C17E00
	538 Compare X0, 0
	539 JumpIfNotEqual {508}
	540 Call 0x1C17F44
	541 Move X1, X31
	542 Call 0x1C17DEC
	543 Move [X20+32], X19
	544 Move X0, 0xD85000
	545 Move X0, [X0+3304]
	546 Call 0x1C17D08
	547 Move X1, X20
	548 Move X2, X31
	549 Call Environment.GetResourceString, X0, X1
	550 Move X19, X0
	551 Move X0, 0xD76000
	552 Move X0, [X0+40]
	553 Call 0x1C17D08
	554 Call 0x1C17F10
	555 Move X20, X0
	556 Move X1, X19
	557 Move X2, X31
	558 Call MissingMethodException..ctor, X0, X1
	559 Move X0, 0xD85000
	560 Move X0, [X0+3296]
	561 Call 0x1C17D08
	562 Move X1, X0
	563 Move X0, X20
	564 Call 0x1C17DEC
	565 Move X23, X1
	566 Move X24, X0
	567 NotImplemented "Instruction CMP not yet implemented."
	568 Move X0, X24
	569 Call 0x3EB2AD0
	570 Move X23, X0
	571 Move X0, 0xD76000
	572 Move X0, [X0+40]
	573 Call 0x1C17D08
	574 Move X8, [X23]
	575 Move X1, [X8]
	576 Call 0x1C18270
	577 Move TEMP, X0
	578 And TEMP, TEMP, 1
	579 Compare TEMP, 1
	580 JumpIfNotEqual {585}
	581 Call 0x3EB2AE0
	582 Move X19, [X31+16]
	583 Move X21, [X31+24]
	584 Move X23, X31
	585 Move W0, 8
	586 Call 0x3EB2AF0
	587 Move X8, [X23]
	588 Move [X0], X8
	589 Move X1, 0xB0E000
	590 Add X1, X1, 3672
	591 Move X2, X31
	592 Call 0x3EB2B00
	593 Move X23, X1
	594 Move X24, X0
	595 Call 0x3EB2AE0
	596 Move X23, X1
	597 Move X24, X0
	598 NotImplemented "Instruction CMP not yet implemented."
	599 Move X0, X24
	600 Call 0x3EB2AD0
	601 Move X19, X0
	602 Move X0, 0xD4D000
	603 Move X0, [X0+2000]
	604 Call 0x1C17D08
	605 Move X8, [X19]
	606 Move X1, [X8]
	607 Call 0x1C18270
	608 Move TEMP, X0
	609 And TEMP, TEMP, 1
	610 Compare TEMP, 1
	611 JumpIfNotEqual {616}
	612 Move X19, [X19]
	613 Call 0x3EB2AE0
	614 Move X0, X19
	615 Call 0x1C17F18
	616 Move W0, 8
	617 Call 0x3EB2AF0
	618 Move X8, [X19]
	619 Move [X0], X8
	620 Move X1, 0xB0E000
	621 Add X1, X1, 3672
	622 Move X2, X31
	623 Call 0x3EB2B00
	624 Move X24, X0
	625 Call 0x3EB2AE0
	626 Move X0, X24
	627 Call 0x1D2D690
	628 Call 0x1991590

Method: System.Object CreateInstanceDefaultCtor(System.Boolean publicOnly, System.Boolean skipCheckThis, System.Boolean fillCache, System.Boolean wrapExceptions, ref System.Threading.StackCrawlMark stackMark)

Disassembly:
	0x033A81CC BL 0x1C16D08
	0x033A81D0 MOV X1, X0
	0x033A81D4 MOV X0, X20
	0x033A81D8 BL 0x1C16DEC
	0x033A81DC STR X30, [X31 - 0x50]!
	0x033A81E0 STP X26, X25, [X31 + 0x10]
	0x033A81E4 STP X24, X23, [X31 + 0x20]
	0x033A81E8 STP X22, X21, [X31 + 0x30]
	0x033A81EC STP X20, X19, [X31 + 0x40]
	0x033A81F0 ADRP X21, 0x1035000
	0x033A81F4 LDRB W8, [X21 + 0x15E]
	0x033A81F8 MOV X19, X1
	0x033A81FC MOV X20, X0
	0x033A8200 TBNZ X8, 0x0, 0x33A8224
	0x033A8204 ADRP X0, 0xD7C000
	0x033A8208 LDR X0, [X0 + 0xC20]
	0x033A820C BL 0x1C16CF4
	0x033A8210 ADRP X0, 0xD74000
	0x033A8214 LDR X0, [X0 + 0x4E8]
	0x033A8218 BL 0x1C16CF4
	0x033A821C MOVZ W8, 0x1
	0x033A8220 STRB W8, [X21 + 0x15E]
	0x033A8224 CBZ X19, 0x33A82D4
	0x033A8228 ADRP X23, 0xD74000
	0x033A822C LDR X23, [X23 + 0x4E8]
	0x033A8230 MOV X0, X20
	0x033A8234 MOV X1, X31
	0x033A8238 BL 0x33BE520
	0x033A823C MOV X21, X0
	0x033A8240 CBZ X0, 0x33A8270
	0x033A8244 LDR X8, [X21]
	0x033A8248 LDR X1, [X23]
	0x033A824C LDRB W10, [X8 + 0x130]
	0x033A8250 LDRB W9, [X1 + 0x130]
	0x033A8254 CMP W10, W9
	0x033A8258 B.CC 0x33A8414
	0x033A825C LDR X8, [X8 + 0xC8]
	0x033A8260 ADD X8, X8, X9, 0x3, LSL
	0x033A8264 LDUR X8, [X8 - 0x8]
	0x033A8268 CMP X8, X1
	0x033A826C B.NE 0x33A8414
	0x033A8270 MOV X0, X19
	0x033A8274 MOV X1, X31
	0x033A8278 BL 0x33BE520
	0x033A827C LDR X1, [X23]
	0x033A8280 MOV X22, X0
	0x033A8284 LDR W8, [X1 + 0xE0]
	0x033A8288 CBZ W8, 0x33A8294
	0x033A828C CBNZ X22, 0x33A82A4
	0x033A8290 B 0x33A82CC
	0x033A8294 MOV X0, X1
	0x033A8298 BL 0x1C16DFC
	0x033A829C LDR X1, [X23]
	0x033A82A0 CBZ X22, 0x33A82CC
	0x033A82A4 LDR X8, [X22]
	0x033A82A8 LDRB W9, [X1 + 0x130]
	0x033A82AC LDRB W10, [X8 + 0x130]
	0x033A82B0 CMP W10, W9
	0x033A82B4 B.CC 0x33A841C
	0x033A82B8 LDR X8, [X8 + 0xC8]
	0x033A82BC ADD X8, X8, X9, 0x3, LSL
	0x033A82C0 LDUR X8, [X8 - 0x8]
	0x033A82C4 CMP X8, X1
	0x033A82C8 B.NE 0x33A841C
	0x033A82CC CMP X22, X21
	0x033A82D0 B.EQ 0x33A82DC
	0x033A82D4 MOV W8, W31
	0x033A82D8 B 0x33A83EC
	0x033A82DC CBZ X21, 0x33A840C
	0x033A82E0 LDR X8, [X21]
	0x033A82E4 MOVZ W1, 0x34
	0x033A82E8 MOV X0, X21
	0x033A82EC LDR X9, [X8 + 0x688]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x1036000
	010 Move X23, 0xD84000
	011 Move X24, 0xD4C000
	012 Move W8, [X25+494]
	013 Move X23, [X23+3320]
	014 Move X24, [X24+1728]
	015 Move W19, W4
	016 Move W22, W2
	017 Move W21, W1
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xD84000
	024 Move X0, [X0+3320]
	025 Call 0x1C17CF4
	026 Move X0, 0xD4C000
	027 Move X0, [X0+1728]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+494], W8
	031 Move X0, X20
	032 Move X1, X31
	033 Call Type.GetType, X0
	034 Move X8, [X24]
	035 Move X24, [X23]
	036 Move X23, X0
	037 Move W9, [X8+224]
	038 Compare W9, 0
	039 JumpIfNotEqual {42}
	040 Move X0, X8
	041 Call 0x1C17DFC
	042 Move X0, X24
	043 Move X1, X31
	044 Call Type.GetTypeFromHandle, X0
	045 Move X1, X0
	046 Move X0, X23
	047 Move X2, X31
	048 Call Type.op_Equality, X0, X1
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {73}
	053 Move TEMP, X22
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {59}
	057 Move X0, X20
	058 Call RuntimeType.CreateInstanceCheckThis, X0
	059 NotImplemented "Instruction ORN not yet implemented."
	060 And W2, W19, 1
	061 Move X0, X20
	062 Move X20, [X31+48]
	063 Move X19, [X31+56]
	064 Move X22, [X31+32]
	065 Move X21, [X31+40]
	066 Move X24, [X31+16]
	067 Move X23, [X31+24]
	068 And W1, W8, 1
	069 Move X30, [X31+64]
	070 Move X25, [X31+72]
	071 Call RuntimeType.CreateInstanceMono, X0, X1, X2
	072 Return X0
	073 Move X0, 0xD84000
	074 Move X0, [X0+3328]
	075 Call 0x1C17D08
	076 Move X1, X31
	077 Call Environment.GetResourceString, X0
	078 Move X19, X0
	079 Move X0, 0xD4C000
	080 Move X0, [X0+1456]
	081 Call 0x1C17D08
	082 Call 0x1C17F10
	083 Move X1, X19
	084 Move X2, X31
	085 Move X20, X0
	086 Call InvalidOperationException..ctor, X0, X1
	087 Move X0, 0xD84000
	088 Move X0, [X0+3336]
	089 Call 0x1C17D08
	090 Move X1, X0
	091 Move X0, X20
	092 Call 0x1C17DEC

Method: System.Reflection.RuntimeConstructorInfo GetDefaultConstructor()

Disassembly:
	0x033BC77C CMP X8, X9
	0x033BC780 B.NE 0x33BCC10
	0x033BC784 MOV X0, X19
	0x033BC788 BL 0x1C16E08
	0x033BC78C LDRSH X8, [X0]
	0x033BC790 B 0x33BC820
	0x033BC794 ADRP X8, 0xD3C000
	0x033BC798 LDR X8, [X8 + 0x658]
	0x033BC79C LDR X9, [X19]
	0x033BC7A0 LDR X1, [X8]
	0x033BC7A4 LDR X8, [X9 + 0x40]
	0x033BC7A8 LDR X9, [X1 + 0x40]
	0x033BC7AC CMP X8, X9
	0x033BC7B0 B.NE 0x33BCC10
	0x033BC7B4 MOV X0, X19
	0x033BC7B8 BL 0x1C16E08
	0x033BC7BC LDRH W8, [X0]
	0x033BC7C0 B 0x33BC820
	0x033BC7C4 ADRP X8, 0xD37000
	0x033BC7C8 LDR X8, [X8 + 0x758]
	0x033BC7CC LDR X9, [X19]
	0x033BC7D0 LDR X1, [X8]
	0x033BC7D4 LDR X8, [X9 + 0x40]
	0x033BC7D8 LDR X9, [X1 + 0x40]
	0x033BC7DC CMP X8, X9
	0x033BC7E0 B.NE 0x33BCC10
	0x033BC7E4 MOV X0, X19
	0x033BC7E8 BL 0x1C16E08
	0x033BC7EC LDRSW X8, [X0]
	0x033BC7F0 B 0x33BC820
	0x033BC7F4 ADRP X8, 0xD3F000
	0x033BC7F8 LDR X8, [X8 + 0x720]
	0x033BC7FC LDR X9, [X19]
	0x033BC800 LDR X1, [X8]
	0x033BC804 LDR X8, [X9 + 0x40]
	0x033BC808 LDR X9, [X1 + 0x40]
	0x033BC80C CMP X8, X9
	0x033BC810 B.NE 0x33BCC10
	0x033BC814 MOV X0, X19
	0x033BC818 BL 0x1C16E08
	0x033BC81C LDR W8, [X0]
	0x033BC820 ADRP X9, 0xD39000
	0x033BC824 LDR X9, [X9 + 0xA60]
	0x033BC828 LDR X0, [X9]
	0x033BC82C STR X8, [X31 + 0x8]
	0x033BC830 B 0x33BCBB0
	0x033BC834 ADRP X8, 0xD60000
	0x033BC838 LDR X8, [X8 + 0x6B0]
	0x033BC83C LDR X9, [X19]
	0x033BC840 LDR X1, [X8]
	0x033BC844 LDR X8, [X9 + 0x40]
	0x033BC848 LDR X9, [X1 + 0x40]
	0x033BC84C CMP X8, X9
	0x033BC850 B.NE 0x33BCC10
	0x033BC854 MOV X0, X19
	0x033BC858 BL 0x1C16E08
	0x00000000 INVALID
	0x033BC860 B 0x33BC8C0
	0x033BC864 ADRP X8, 0xD38000
	0x033BC868 LDR X8, [X8 + 0x9D8]
	0x033BC86C LDR X9, [X19]
	0x033BC870 LDR X1, [X8]
	0x033BC874 LDR X8, [X9 + 0x40]
	0x033BC878 LDR X9, [X1 + 0x40]
	0x033BC87C CMP X8, X9
	0x033BC880 B.NE 0x33BCC10
	0x033BC884 MOV X0, X19
	0x033BC888 BL 0x1C16E08
	0x033BC88C LDR V0, [X0]
	0x033BC890 B 0x33BC968
	0x033BC894 ADRP X8, 0xD3B000
	0x033BC898 LDR X8, [X8 + 0x628]
	0x033BC89C LDR X9, [X19]
	0x033BC8A0 LDR X1, [X8]
	0x033BC8A4 LDR X8, [X9 + 0x40]
	0x033BC8A8 LDR X9, [X1 + 0x40]
	0x033BC8AC CMP X8, X9
	0x033BC8B0 B.NE 0x33BCC10
	0x033BC8B4 MOV X0, X19
	0x033BC8B8 BL 0x1C16E08
	0x033BC8BC LDRSH W8, [X0]
	0x033BC8C0 ADRP X9, 0xD37000
	0x033BC8C4 LDR X9, [X9 + 0xA90]
	0x033BC8C8 SCVTF S0, W8
	0x033BC8CC B 0x33BC9B4
	0x033BC8D0 ADRP X8, 0xD3C000
	0x033BC8D4 LDR X8, [X8 + 0x658]
	0x033BC8D8 LDR X9, [X19]
	0x033BC8DC LDR X1, [X8]
	0x033BC8E0 LDR X8, [X9 + 0x40]
	0x033BC8E4 LDR X9, [X1 + 0x40]
	0x033BC8E8 CMP X8, X9
	0x033BC8EC B.NE 0x33BCC10
	0x033BC8F0 MOV X0, X19
	0x033BC8F4 BL 0x1C16E08
	0x033BC8F8 LDR V0, [X0]
	0x033BC8FC B 0x33BC968
	0x033BC900 ADRP X8, 0xD37000
	0x033BC904 LDR X8, [X8 + 0x758]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x1022000
	008 Move W8, [X20+495]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xD62000
	015 Move X0, [X0+2424]
	016 Call 0x1C17CF4
	017 Move X0, 0xD71000
	018 Move X0, [X0+920]
	019 Call 0x1C17CF4
	020 Move X0, 0xD6B000
	021 Move X0, [X0+472]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+495], W8
	025 Move X22, 0xD62000
	026 Move X8, [X19+24]
	027 Move X22, [X22+2424]
	028 Compare X8, 0
	029 JumpIfEqual {31}
	030 Move X20, [X8+24]
	031 Move X8, 0xD71000
	032 Move X8, [X8+920]
	033 Move X0, [X8]
	034 Call 0x1C17F10
	035 Move X1, X31
	036 Move X21, X0
	037 Call MonoTypeInfo..ctor, X0
	038 Move X20, X31
	039 Move [X19+24], X21
	040 Move X0, [X22]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X20
	046 Move X1, X31
	047 Move X2, X31
	048 Call ConstructorInfo.op_Equality, X0, X1
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {100}
	053 Move X8, [X19]
	054 Move W1, 54
	055 Move X0, X19
	056 Move X9, [X8+1608]
	057 Move X2, [X8+1616]
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Compare X0, 0
	060 JumpIfEqual {108}
	061 Move W8, [X0+24]
	062 Move X21, X0
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move W22, W31
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Add X23, X21, W22
	067 Add X23, X23, 32
	068 Move X0, [X23]
	069 Compare X0, 0
	070 JumpIfEqual {108}
	071 Move X8, [X0]
	072 Move X9, [X8+872]
	073 Move X1, [X8+880]
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Compare W0, 0
	076 JumpIfEqual {80}
	077 Move W8, [X21+24]
	078 Add W22, W22, 1
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move W8, [X21+24]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X20, [X23]
	083 Move X8, [X19+24]
	084 Compare X20, 0
	085 JumpIfEqual {97}
	086 Move X10, 0xD6B000
	087 Move X10, [X10+472]
	088 Move X9, [X20]
	089 Move X1, [X10]
	090 Move W11, [X9+304]
	091 Move W10, [X1+304]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move X9, [X9+200]
	094 Add X9, X9, X10
	095 NotImplemented "Instruction LDUR not yet implemented."
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Compare X8, 0
	098 JumpIfEqual {108}
	099 Move [X8+24], X20
	100 Move X0, X20
	101 Move X20, [X31+32]
	102 Move X19, [X31+40]
	103 Move X22, [X31+16]
	104 Move X21, [X31+24]
	105 Move X30, [X31+48]
	106 Move X23, [X31+56]
	107 Return X0
	108 Call 0x1C17F20
	109 Call 0x1C17F28
	110 Move X0, X20
	111 Call 0x1C181E0

Method: System.String GetDefaultMemberName()

Disassembly:
	0x033BBDC4 STP X22, X21, [X31 + 0x20]
	0x033BBDC8 STP X20, X19, [X31 + 0x30]
	0x033BBDCC ADRP X24, 0x1022000
	0x033BBDD0 LDRB W8, [X24 + 0x1F3]
	0x033BBDD4 MOV W23, W4
	0x033BBDD8 MOV X21, X3
	0x033BBDDC MOV X22, X2
	0x033BBDE0 MOV X20, X1
	0x033BBDE4 MOV X19, X0
	0x033BBDE8 TBNZ X8, 0x0, 0x33BBE00
	0x033BBDEC ADRP X0, 0xD38000
	0x033BBDF0 LDR X0, [X0 + 0x6C0]
	0x033BBDF4 BL 0x1C16CF4
	0x033BBDF8 MOVZ W8, 0x1
	0x033BBDFC STRB W8, [X24 + 0x1F3]
	0x033BBE00 ADD X2, X31, 0xC
	0x033BBE04 MOV X0, X19
	0x033BBE08 MOV X1, X20
	0x033BBE0C STRB W31, [X31 + 0xC]
	0x033BBE10 BL 0x33BBF18
	0x033BBE14 LDRB W8, [X31 + 0xC]
	0x033BBE18 CBZ W8, 0x33BBE68
	0x033BBE1C TBNZ X23, 0x10, 0x33BBE7C
	0x033BBE20 CBZ X22, 0x33BBE7C
	0x033BBE24 ADRP X8, 0xD38000
	0x033BBE28 LDR X8, [X8 + 0x6C0]
	0x033BBE2C LDR X0, [X8]
	0x033BBE30 LDR W8, [X0 + 0xE0]
	0x033BBE34 CBNZ W8, 0x33BBE3C
	0x033BBE38 BL 0x1C16DFC
	0x033BBE3C MOV X0, X31
	0x033BBE40 BL 0x33981F8
	0x033BBE44 CMP X0, X22
	0x033BBE48 B.EQ 0x33BBE7C
	0x033BBE4C LDR X8, [X22]
	0x033BBE50 MOV X0, X22
	0x033BBE54 MOV X1, X20
	0x033BBE58 MOV X2, X19
	0x033BBE5C LDP X9, X4, [X8 + 0x198]
	0x033BBE60 MOV X3, X21
	0x033BBE64 BLR X9
	0x033BBE68 LDP X20, X19, [X31 + 0x30]
	0x033BBE6C LDP X22, X21, [X31 + 0x20]
	0x033BBE70 LDP X24, X23, [X31 + 0x10]
	0x033BBE74 LDR X30, [X31], #0x40
	0x033BBE78 RET
	0x033BBE7C ADRP X0, 0xD3A000
	0x033BBE80 LDR X0, [X0 + 0xC48]
	0x033BBE84 BL 0x1C16D08
	0x033BBE88 BL 0x19903D0
	0x033BBE8C MOV X0, X31
	0x033BBE90 BL 0x334734C
	0x033BBE94 MOV X21, X0
	0x033BBE98 ADRP X0, 0xD71000
	0x033BBE9C LDR X0, [X0 + 0x3D8]
	0x033BBEA0 BL 0x1C16D08
	0x033BBEA4 MOV X1, X31
	0x033BBEA8 BL 0x33BDD84
	0x033BBEAC MOV X22, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1023000
	007 Move X20, 0xD72000
	008 Move X21, 0xD39000
	009 Move W8, [X22+496]
	010 Move X20, [X20+800]
	011 Move X21, [X21+1728]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0xD72000
	018 Move X0, [X0+800]
	019 Call 0x1C17CF4
	020 Move X0, 0xD72000
	021 Move X0, [X0+808]
	022 Call 0x1C17CF4
	023 Move X0, 0xD39000
	024 Move X0, [X0+1728]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+496], W8
	028 Move X0, [X21]
	029 Move X20, [X20]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X20
	035 Move X1, X31
	036 Call Type.GetTypeFromHandle, X0
	037 Move X8, [X19]
	038 Move X1, X0
	039 Move W2, 1
	040 Move X0, X19
	041 Move X9, [X8+520]
	042 Move X3, [X8+528]
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Compare X0, 0
	045 JumpIfEqual {67}
	046 Move X8, [X0+24]
	047 Compare X8, 0
	048 JumpIfEqual {60}
	049 Compare W8, 0
	050 JumpIfEqual {68}
	051 Move X0, [X0+32]
	052 Compare X0, 0
	053 JumpIfEqual {67}
	054 Move X8, 0xD72000
	055 Move X8, [X8+808]
	056 Move X1, [X8]
	057 Move X8, [X0]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X0, [X0+16]
	060 Move X0, X31
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X22, [X31+16]
	064 Move X21, [X31+24]
	065 Move X30, [X31+48]
	066 Return X0
	067 Call 0x1C17F20
	068 Call 0x1C17F28
	069 Call 0x1C181E0

Method: System.Reflection.RuntimeConstructorInfo GetSerializationCtor()

Disassembly:
	0x033BC908 LDR X9, [X19]
	0x033BC90C LDR X1, [X8]
	0x033BC910 LDR X8, [X9 + 0x40]
	0x033BC914 LDR X9, [X1 + 0x40]
	0x033BC918 CMP X8, X9
	0x033BC91C B.NE 0x33BCC10
	0x033BC920 MOV X0, X19
	0x033BC924 BL 0x1C16E08
	0x033BC928 ADRP X8, 0xD37000
	0x033BC92C LDR V0, [X0]
	0x033BC930 LDR X8, [X8 + 0xA90]
	0x033BC934 SCVTF S0, S0
	0x033BC938 B 0x33BC974
	0x033BC93C ADRP X8, 0xD3F000
	0x033BC940 LDR X8, [X8 + 0x720]
	0x033BC944 LDR X9, [X19]
	0x033BC948 LDR X1, [X8]
	0x033BC94C LDR X8, [X9 + 0x40]
	0x033BC950 LDR X9, [X1 + 0x40]
	0x033BC954 CMP X8, X9
	0x033BC958 B.NE 0x33BCC10
	0x033BC95C MOV X0, X19
	0x033BC960 BL 0x1C16E08
	0x033BC964 LDR V0, [X0]
	0x033BC968 ADRP X8, 0xD37000
	0x033BC96C LDR X8, [X8 + 0xA90]
	0x033BC970 UCVTF S0, S0
	0x033BC974 LDR X0, [X8]
	0x033BC978 B 0x33BC9FC
	0x033BC97C ADRP X8, 0xD39000
	0x033BC980 LDR X8, [X8 + 0xA60]
	0x033BC984 LDR X9, [X19]
	0x033BC988 LDR X1, [X8]
	0x033BC98C LDR X8, [X9 + 0x40]
	0x033BC990 LDR X9, [X1 + 0x40]
	0x033BC994 CMP X8, X9
	0x033BC998 B.NE 0x33BCC10
	0x033BC99C MOV X0, X19
	0x033BC9A0 BL 0x1C16E08
	0x033BC9A4 ADRP X9, 0xD37000
	0x033BC9A8 LDR X8, [X0]
	0x033BC9AC LDR X9, [X9 + 0xA90]
	0x033BC9B0 SCVTF S0, X8
	0x033BC9B4 LDR X0, [X9]
	0x033BC9B8 B 0x33BC9FC
	0x033BC9BC ADRP X8, 0xD38000
	0x033BC9C0 LDR X8, [X8 + 0x758]
	0x033BC9C4 LDR X9, [X19]
	0x033BC9C8 LDR X1, [X8]
	0x033BC9CC LDR X8, [X9 + 0x40]
	0x033BC9D0 LDR X9, [X1 + 0x40]
	0x033BC9D4 CMP X8, X9
	0x033BC9D8 B.NE 0x33BCC10
	0x033BC9DC MOV X0, X19
	0x033BC9E0 BL 0x1C16E08
	0x033BC9E4 ADRP X8, 0xD37000
	0x033BC9E8 LDR V0, [X0]
	0x033BC9EC LDR X8, [X8 + 0xA90]
	0x033BC9F0 UCVTF D0, D0
	0x033BC9F4 LDR X0, [X8]
	0x00000000 INVALID
	0x033BC9FC STR S0, [X31 + 0x8]
	0x033BCA00 B 0x33BCBB0
	0x033BCA04 ADRP X8, 0xD60000
	0x033BCA08 LDR X8, [X8 + 0x6B0]
	0x033BCA0C LDR X9, [X19]
	0x033BCA10 LDR X1, [X8]
	0x033BCA14 LDR X8, [X9 + 0x40]
	0x033BCA18 LDR X9, [X1 + 0x40]
	0x033BCA1C CMP X8, X9
	0x033BCA20 B.NE 0x33BCC10
	0x033BCA24 MOV X0, X19
	0x033BCA28 BL 0x1C16E08
	0x00000000 INVALID
	0x033BCA30 B 0x33BCAF0
	0x033BCA34 ADRP X8, 0xD38000
	0x033BCA38 LDR X8, [X8 + 0x9D8]
	0x033BCA3C LDR X9, [X19]
	0x033BCA40 LDR X1, [X8]
	0x033BCA44 LDR X8, [X9 + 0x40]
	0x033BCA48 LDR X9, [X1 + 0x40]
	0x033BCA4C CMP X8, X9
	0x033BCA50 B.NE 0x33BCC10
	0x033BCA54 MOV X0, X19
	0x033BCA58 BL 0x1C16E08
	0x033BCA5C LDR V0, [X0]
	0x033BCA60 B 0x33BCB9C
	0x033BCA64 ADRP X8, 0xD3B000
	0x033BCA68 LDR X8, [X8 + 0x628]
	0x033BCA6C LDR X9, [X19]
	0x033BCA70 LDR X1, [X8]
	0x033BCA74 LDR X8, [X9 + 0x40]
	0x033BCA78 LDR X9, [X1 + 0x40]
	0x033BCA7C CMP X8, X9
	0x033BCA80 B.NE 0x33BCC10
	0x033BCA84 MOV X0, X19
	0x033BCA88 BL 0x1C16E08
	0x033BCA8C LDRSH W8, [X0]
	0x033BCA90 B 0x33BCAF0
	0x033BCA94 ADRP X8, 0xD3C000
	0x033BCA98 LDR X8, [X8 + 0x658]
	0x033BCA9C LDR X9, [X19]
	0x033BCAA0 LDR X1, [X8]
	0x033BCAA4 LDR X8, [X9 + 0x40]
	0x033BCAA8 LDR X9, [X1 + 0x40]
	0x033BCAAC CMP X8, X9
	0x033BCAB0 B.NE 0x33BCC10
	0x033BCAB4 MOV X0, X19
	0x033BCAB8 BL 0x1C16E08
	0x033BCABC LDR V0, [X0]
	0x033BCAC0 B 0x33BCB9C
	0x033BCAC4 ADRP X8, 0xD37000
	0x033BCAC8 LDR X8, [X8 + 0x758]
	0x033BCACC LDR X9, [X19]
	0x033BCAD0 LDR X1, [X8]
	0x033BCAD4 LDR X8, [X9 + 0x40]
	0x033BCAD8 LDR X9, [X1 + 0x40]
	0x033BCADC CMP X8, X9
	0x033BCAE0 B.NE 0x33BCC10
	0x033BCAE4 MOV X0, X19
	0x033BCAE8 BL 0x1C16E08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1022000
	006 Move X20, 0xD62000
	007 Move W8, [X21+497]
	008 Move X20, [X20+2424]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {34}
	014 Move X0, 0xD62000
	015 Move X0, [X0+2424]
	016 Call 0x1C17CF4
	017 Move X0, 0xD6B000
	018 Move X0, [X0+472]
	019 Call 0x1C17CF4
	020 Move X0, 0xD71000
	021 Move X0, [X0+928]
	022 Call 0x1C17CF4
	023 Move X0, 0xD71000
	024 Move X0, [X0+936]
	025 Call 0x1C17CF4
	026 Move X0, 0xD40000
	027 Move X0, [X0+3168]
	028 Call 0x1C17CF4
	029 Move X0, 0xD38000
	030 Move X0, [X0+1728]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X21+497], W8
	034 Move X0, [X20]
	035 Move X20, [X19+40]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X20
	041 Move X1, X31
	042 Move X2, X31
	043 Call ConstructorInfo.op_Equality, X0, X1
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {118}
	048 Move X8, 0xD40000
	049 Move X8, [X8+3168]
	050 Move X20, 0xD71000
	051 Move X21, 0xD38000
	052 Move W1, 2
	053 Move X0, [X8]
	054 Move X20, [X20+928]
	055 Move X21, [X21+1728]
	056 Call 0x1C17D6C
	057 Move X8, [X21]
	058 Move X21, [X20]
	059 Move X20, X0
	060 Move W9, [X8+224]
	061 Compare W9, 0
	062 JumpIfNotEqual {65}
	063 Move X0, X8
	064 Call 0x1C17DFC
	065 Move X0, X21
	066 Move X1, X31
	067 Call Type.GetTypeFromHandle, X0
	068 Compare X20, 0
	069 JumpIfEqual {135}
	070 Move X21, X0
	071 Compare X0, 0
	072 JumpIfEqual {79}
	073 Move X8, [X20]
	074 Move X0, X21
	075 Move X1, [X8+64]
	076 Call 0x1C17E00
	077 Compare X0, 0
	078 JumpIfEqual {132}
	079 Move W8, [X20+24]
	080 Compare W8, 0
	081 JumpIfEqual {131}
	082 Move [X20+32], X21
	083 Move X8, 0xD71000
	084 Move X8, [X8+936]
	085 Move X1, X31
	086 Move X0, [X8]
	087 Call Type.GetTypeFromHandle, X0
	088 Move X21, X0
	089 Compare X0, 0
	090 JumpIfEqual {97}
	091 Move X8, [X20]
	092 Move X0, X21
	093 Move X1, [X8+64]
	094 Call 0x1C17E00
	095 Compare X0, 0
	096 JumpIfEqual {132}
	097 Move W8, [X20+24]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move W1, 52
	100 Move W3, 3
	101 Move X0, X19
	102 Move X2, X31
	103 Move X4, X20
	104 Move X5, X31
	105 Move X6, X31
	106 Move [X20+40], X21
	107 Call Type.GetConstructor, X0, X1, X2, X3, X4, X5
	108 Compare X0, 0
	109 JumpIfEqual {119}
	110 Move X8, 0xD6B000
	111 Move X8, [X8+472]
	112 Move X9, [X0]
	113 Move X8, [X8]
	114 Move W11, [X9+304]
	115 Move W10, [X8+304]
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X0, X31
	118 Move X0, [X19+40]
	119 Move [X19+40], X31
	120 Move X9, [X9+200]
	121 Add X9, X9, X10
	122 NotImplemented "Instruction LDUR not yet implemented."
	123 NotImplemented "Instruction CMP not yet implemented."
	124 NotImplemented "Instruction CSEL not yet implemented."
	125 Move [X19+40], X0
	126 Move X20, [X31+16]
	127 Move X19, [X31+24]
	128 Move X30, [X31+32]
	129 Move X21, [X31+40]
	130 Return X0
	131 Call 0x1C17F28
	132 Call 0x1C17F44
	133 Move X1, X31
	134 Call 0x1C17DEC
	135 Call 0x1C17F20

Method: System.Object CreateInstanceSlow(System.Boolean publicOnly, System.Boolean wrapExceptions, System.Boolean skipCheckThis, System.Boolean fillCache)

Disassembly:
	0x033BC740 LDR X1, [X8]
	0x033BC744 LDR X8, [X9 + 0x40]
	0x033BC748 LDR X9, [X1 + 0x40]
	0x033BC74C CMP X8, X9
	0x033BC750 B.NE 0x33BCC10
	0x033BC754 MOV X0, X19
	0x033BC758 BL 0x1C16E08
	0x033BC75C LDRB W8, [X0]
	0x033BC760 B 0x33BC820
	0x033BC764 ADRP X8, 0xD3B000
	0x033BC768 LDR X8, [X8 + 0x628]
	0x033BC76C LDR X9, [X19]
	0x033BC770 LDR X1, [X8]
	0x033BC774 LDR X8, [X9 + 0x40]
	0x033BC778 LDR X9, [X1 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W20, W2
	006 Move W21, W1
	007 Move X19, X0
	008 Move TEMP, X3
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {14}
	012 Move X0, X19
	013 Call RuntimeType.CreateInstanceCheckThis, X0
	014 And W2, W20, 1
	015 Move X0, X19
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 NotImplemented "Instruction ORN not yet implemented."
	019 And W1, W8, 1
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 Call RuntimeType.CreateInstanceMono, X0, X1, X2
	023 Return X0

Method: System.Object CreateInstanceMono(System.Boolean nonPublic, System.Boolean wrapExceptions)

Disassembly:
	0x033BCAEC LDR W8, [X0]
	0x033BCAF0 ADRP X9, 0xD3A000
	0x033BCAF4 LDR X9, [X9 + 0x978]
	0x033BCAF8 SCVTF D0, W8
	0x033BCAFC LDR X0, [X9]
	0x033BCB00 B 0x33BCBAC
	0x033BCB04 ADRP X8, 0xD3F000
	0x033BCB08 LDR X8, [X8 + 0x720]
	0x033BCB0C LDR X9, [X19]
	0x033BCB10 LDR X1, [X8]
	0x033BCB14 LDR X8, [X9 + 0x40]
	0x033BCB18 LDR X9, [X1 + 0x40]
	0x033BCB1C CMP X8, X9
	0x033BCB20 B.NE 0x33BCC10
	0x033BCB24 MOV X0, X19
	0x033BCB28 BL 0x1C16E08
	0x033BCB2C LDR V0, [X0]
	0x033BCB30 B 0x33BCB9C
	0x033BCB34 ADRP X8, 0xD39000
	0x033BCB38 LDR X8, [X8 + 0xA60]
	0x033BCB3C LDR X9, [X19]
	0x033BCB40 LDR X1, [X8]
	0x033BCB44 LDR X8, [X9 + 0x40]
	0x033BCB48 LDR X9, [X1 + 0x40]
	0x033BCB4C CMP X8, X9
	0x033BCB50 B.NE 0x33BCC10
	0x033BCB54 MOV X0, X19
	0x033BCB58 BL 0x1C16E08
	0x033BCB5C ADRP X8, 0xD3A000
	0x033BCB60 LDR V0, [X0]
	0x033BCB64 LDR X8, [X8 + 0x978]
	0x033BCB68 SCVTF D0, D0
	0x033BCB6C B 0x33BCBA8
	0x033BCB70 ADRP X8, 0xD38000
	0x033BCB74 LDR X8, [X8 + 0x758]
	0x033BCB78 LDR X9, [X19]
	0x033BCB7C LDR X1, [X8]
	0x033BCB80 LDR X8, [X9 + 0x40]
	0x033BCB84 LDR X9, [X1 + 0x40]
	0x033BCB88 CMP X8, X9
	0x033BCB8C B.NE 0x33BCC10
	0x033BCB90 MOV X0, X19
	0x033BCB94 BL 0x1C16E08
	0x033BCB98 LDR V0, [X0]
	0x033BCB9C ADRP X8, 0xD3A000
	0x033BCBA0 LDR X8, [X8 + 0x978]
	0x033BCBA4 UCVTF D0, D0
	0x033BCBA8 LDR X0, [X8]
	0x033BCBAC STR D0, [X31 + 0x8]
	0x033BCBB0 ADD X1, X31, 0x8
	0x033BCBB4 BL 0x1C16E04
	0x033BCBB8 MOV X19, X0
	0x033BCBBC MOV X0, X19
	0x033BCBC0 LDP X20, X19, [X31 + 0x20]
	0x033BCBC4 LDP X22, X21, [X31 + 0x10]
	0x033BCBC8 LDR X30, [X31], #0x30
	0x033BCBCC RET
	0x033BCBD0 ADRP X8, 0xD37000
	0x033BCBD4 LDR X8, [X8 + 0xA90]
	0x033BCBD8 LDR X9, [X19]
	0x033BCBDC LDR X1, [X8]
	0x033BCBE0 LDR X8, [X9 + 0x40]
	0x033BCBE4 LDR X9, [X1 + 0x40]
	0x033BCBE8 CMP X8, X9
	0x033BCBEC B.NE 0x33BCC10
	0x033BCBF0 MOV X0, X19
	0x033BCBF4 BL 0x1C16E08
	0x033BCBF8 ADRP X8, 0xD3A000
	0x033BCBFC LDR V0, [X0]
	0x033BCC00 LDR X8, [X8 + 0x978]
	0x033BCC04 FCVT S0, S0
	0x033BCC08 B 0x33BCBA8
	0x033BCC0C BL 0x1C16F20
	0x033BCC10 MOV X0, X19
	0x033BCC14 BL 0x1C171E0
	0x033BCC18 B 0x1C3CFE4
	0x033BCC1C MOV W1, W31
	0x033BCC20 B 0x1C3CFE4
	0x033BCC24 SUB W8, W1, 0x1
	0x033BCC28 CMP W8, 0xFF
	0x033BCC2C B.CS 0x33BCC34
	0x033BCC30 B 0x1C3CFE4
	0x033BCC34 STP X30, X19, [X31 - 0x10]!
	0x033BCC38 ADRP X0, 0xD41000
	0x033BCC3C LDR X0, [X0 + 0xF78]
	0x033BCC40 BL 0x1C16D08
	0x033BCC44 BL 0x1C16F10
	0x033BCC48 MOV X1, X31
	0x033BCC4C MOV X19, X0
	0x033BCC50 BL 0x3379B10
	0x033BCC54 ADRP X0, 0xD70000
	0x033BCC58 LDR X0, [X0 + 0x3E8]
	0x033BCC5C BL 0x1C16D08
	0x033BCC60 MOV X1, X0
	0x033BCC64 MOV X0, X19
	0x033BCC68 BL 0x1C16DEC
	0x033BCC6C B 0x1C3D03C
	0x033BCC70 STP X30, X19, [X31 - 0x10]!
	0x033BCC74 MOV X1, X31
	0x033BCC78 MOV X19, X0
	0x033BCC7C BL 0x3396C08
	0x033BCC80 TBNZ X0, 0x0, 0x33BCC90
	0x033BCC84 MOV X0, X19
	0x033BCC88 LDP X30, X19, [X31], #0x10
	0x033BCC8C B 0x1C3D03C
	0x033BCC90 ADRP X0, 0xD69000
	0x033BCC94 LDR X0, [X0 + 0x4B8]
	0x033BCC98 BL 0x1C16D08
	0x033BCC9C BL 0x1C16F10
	0x033BCCA0 MOV X19, X0
	0x033BCCA4 ADRP X0, 0xD70000
	0x033BCCA8 LDR X0, [X0 + 0x3F0]
	0x033BCCAC BL 0x1C16D08
	0x033BCCB0 MOV X1, X0
	0x033BCCB4 MOV X0, X19
	0x033BCCB8 MOV X2, X31
	0x033BCCBC BL 0x33BE6D8
	0x033BCCC0 ADRP X0, 0xD70000
	0x033BCCC4 LDR X0, [X0 + 0x3F8]
	0x033BCCC8 BL 0x1C16D08
	0x033BCCCC MOV X1, X0
	0x033BCCD0 MOV X0, X19
	0x033BCCD4 BL 0x1C16DEC
	0x033BCCD8 B 0x1C3D2AC
	0x033BCCDC STR X30, [X31 - 0x20]!
	0x033BCCE0 STP X20, X19, [X31 + 0x10]
	0x033BCCE4 ADRP X20, 0x1021000
	0x033BCCE8 LDRB W8, [X20 + 0x1F6]
	0x033BCCEC MOV X19, X0
	0x033BCCF0 TBNZ X8, 0x0, 0x33BCD08
	0x033BCCF4 ADRP X0, 0xD60000
	0x033BCCF8 LDR X0, [X0 + 0x4E8]
	0x033BCCFC BL 0x1C16CF4
	0x033BCD00 MOVZ W8, 0x1
	0x033BCD04 STRB W8, [X20 + 0x1F6]
	0x033BCD08 MOV X0, X19
	0x033BCD0C MOV X1, X31
	0x033BCD10 BL 0x3396C08
	0x033BCD14 TBNZ X0, 0x0, 0x33BCD40
	0x033BCD18 ADRP X8, 0xD60000
	0x033BCD1C LDR X8, [X8 + 0x4E8]
	0x033BCD20 LDR X0, [X8]
	0x033BCD24 LDR W8, [X0 + 0xE0]
	0x033BCD28 CBNZ W8, 0x33BCD30
	0x033BCD2C BL 0x1C16DFC
	0x033BCD30 MOV X0, X19
	0x033BCD34 LDP X20, X19, [X31 + 0x10]
	0x033BCD38 LDR X30, [X31], #0x20
	0x033BCD3C B 0x1C3D2AC
	0x033BCD40 MOV X0, X19
	0x033BCD44 MOV X1, X31
	0x033BCD48 BL 0x3396B68
	0x033BCD4C LDR X8, [X19]
	0x033BCD50 MOV X20, X0
	0x033BCD54 MOV X0, X19
	0x033BCD58 LDR X9, [X8 + 0x2D8]
	0x033BCD5C LDR X1, [X8 + 0x2E0]
	0x033BCD60 BLR X9
	0x033BCD64 MOV X19, X0
	0x033BCD68 ADRP X0, 0xD70000
	0x033BCD6C LDR X0, [X0 + 0x400]
	0x033BCD70 BL 0x1C16D08
	0x033BCD74 MOV X1, X20
	0x033BCD78 MOV X2, X19
	0x033BCD7C MOV X3, X31
	0x033BCD80 BL 0x3227BD4
	0x033BCD84 MOV X19, X0
	0x033BCD88 ADRP X0, 0xD69000
	0x033BCD8C LDR X0, [X0 + 0x4B8]
	0x033BCD90 BL 0x1C16D08
	0x033BCD94 BL 0x1C16F10
	0x033BCD98 MOV X1, X19
	0x033BCD9C MOV X2, X31
	0x033BCDA0 MOV X20, X0
	0x033BCDA4 BL 0x33BE6D8
	0x033BCDA8 ADRP X0, 0xD70000
	0x033BCDAC LDR X0, [X0 + 0x408]
	0x033BCDB0 BL 0x1C16D08
	0x033BCDB4 MOV X1, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x1022000
	008 Move W8, [X21+498]
	009 Move W20, W2
	010 Move W22, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0xD62000
	017 Move X0, [X0+2424]
	018 Call 0x1C17CF4
	019 Move X0, 0xD71000
	020 Move X0, [X0+944]
	021 Call 0x1C17CF4
	022 Move X0, 0xD61000
	023 Move X0, [X0+1256]
	024 Call 0x1C17CF4
	025 Move X0, 0xD38000
	026 Move X0, [X0+1728]
	027 Call 0x1C17CF4
	028 Move X0, 0xD71000
	029 Move X0, [X0+840]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+498], W8
	033 Move X23, 0xD62000
	034 Move X23, [X23+2424]
	035 Move X0, X19
	036 Call RuntimeType.GetDefaultConstructor, X0
	037 Move X21, X0
	038 Move TEMP, X22
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {62}
	042 Move X0, [X23]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X0, X21
	048 Move X1, X31
	049 Move X2, X31
	050 Call ConstructorInfo.op_Inequality, X0, X1
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {62}
	055 Compare X21, 0
	056 JumpIfEqual {165}
	057 Move X0, X21
	058 Move X1, X31
	059 Call MethodBase.get_IsPublic, X0
	060 And W31, W0, 1
	061 NotImplemented "Instruction CSEL not yet implemented."
	062 Move X0, [X23]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Move X0, X21
	068 Move X1, X31
	069 Move X2, X31
	070 Call ConstructorInfo.op_Equality, X0, X1
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfNotEqual {129}
	075 Move X0, X19
	076 Move X1, X31
	077 Call Type.GetRootElementType, X0
	078 Move X22, 0xD38000
	079 Move X22, [X22+1728]
	080 Move X9, 0xD71000
	081 Move X20, X0
	082 Move X8, [X22]
	083 Move X9, [X9+840]
	084 Move W10, [X8+224]
	085 Move X21, [X9]
	086 Compare W10, 0
	087 JumpIfNotEqual {90}
	088 Move X0, X8
	089 Call 0x1C17DFC
	090 Move X0, X21
	091 Move X1, X31
	092 Call Type.GetTypeFromHandle, X0
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X8, 0xD71000
	095 Move X0, [X22]
	096 Move X8, [X8+944]
	097 Move W9, [X0+224]
	098 Move X21, [X8]
	099 Compare W9, 0
	100 JumpIfNotEqual {102}
	101 Call 0x1C17DFC
	102 Move X0, X21
	103 Move X1, X31
	104 Call Type.GetTypeFromHandle, X0
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move X0, X19
	107 Move X1, X31
	108 Call Type.get_IsValueType, X0
	109 Move TEMP, X0
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfNotEqual {166}
	113 Move X8, 0xD61000
	114 Move X8, [X8+1256]
	115 Move X0, [X8]
	116 Move W8, [X0+224]
	117 Compare W8, 0
	118 JumpIfNotEqual {120}
	119 Call 0x1C17DFC
	120 Move X0, X19
	121 Move X20, [X31+32]
	122 Move X19, [X31+40]
	123 Move X22, [X31+16]
	124 Move X21, [X31+24]
	125 Move X30, [X31+48]
	126 Move X23, [X31+56]
	127 Call 0x1C3D884
	128 Return X0
	129 Move X0, X19
	130 Move X1, X31
	131 Call Type.get_IsAbstract, X0
	132 Move TEMP, X0
	133 And TEMP, TEMP, 1
	134 Compare TEMP, 1
	135 JumpIfEqual {187}
	136 Compare X21, 0
	137 JumpIfEqual {165}
	138 And W3, W20, 1
	139 Move X0, X21
	140 Move X20, [X31+32]
	141 Move X19, [X31+40]
	142 Move X22, [X31+16]
	143 Move X21, [X31+24]
	144 Move X1, X31
	145 Move X2, X31
	146 Move X4, X31
	147 Move X30, [X31+48]
	148 Move X23, [X31+56]
	149 Call RuntimeConstructorInfo.InternalInvoke, X0, X1, X2, X3
	150 Return X0
	151 Move X0, 0xD71000
	152 Move X0, [X0+952]
	153 Call 0x1C17D08
	154 Move X1, X31
	155 Call Environment.GetResourceString, X0
	156 Move X19, X0
	157 Move X0, 0xD38000
	158 Move X0, [X0+2880]
	159 Call 0x1C17D08
	160 Call 0x1C17F10
	161 Move X1, X19
	162 Move X2, X31
	163 Move X20, X0
	164 Call NotSupportedException..ctor, X0, X1
	165 Call 0x1C17F20
	166 Move X8, [X19]
	167 Move X0, X19
	168 Move X9, [X8+744]
	169 Move X1, [X8+752]
	170 NotImplemented "Instruction BLR not yet implemented."
	171 Move X19, X0
	172 Move X0, 0xD71000
	173 Move X0, [X0+960]
	174 Call 0x1C17D08
	175 Move X1, X19
	176 Move X2, X31
	177 Call String.Concat, X0, X1
	178 Move X19, X0
	179 Move X0, 0xD61000
	180 Move X0, [X0+40]
	181 Call 0x1C17D08
	182 Call 0x1C17F10
	183 Move X1, X19
	184 Move X2, X31
	185 Move X20, X0
	186 Call MissingMethodException..ctor, X0, X1
	187 Move X8, [X19]
	188 Move X0, X19
	189 Move X9, [X8+744]
	190 Move X1, [X8+752]
	191 NotImplemented "Instruction BLR not yet implemented."
	192 Move X19, X0
	193 Move X0, 0xD61000
	194 Move X0, [X0+40]
	195 Call 0x1C17D08
	196 Call 0x1C17F10
	197 Move X20, X0
	198 Move X0, 0xD71000
	199 Move X0, [X0+968]
	200 Call 0x1C17D08
	201 Move X1, X0
	202 Move X0, X20
	203 Move X2, X19
	204 Move X3, X31
	205 Call MissingMethodException..ctor, X0, X1, X2
	206 Move X0, 0xD71000
	207 Move X0, [X0+976]
	208 Call 0x1C17D08
	209 Move X1, X0
	210 Move X0, X20
	211 Call 0x1C17DEC

Method: System.Object CheckValue(System.Object value, System.Reflection.Binder binder, System.Globalization.CultureInfo culture, System.Reflection.BindingFlags invokeAttr)

Disassembly:
	0x033BCDBC BL 0x1C16DEC
	0x033BCDC0 STP X30, X21, [X31 - 0x20]!
	0x033BCDC4 STP X20, X19, [X31 + 0x10]
	0x033BCDC8 LDR X8, [X0]
	0x033BCDCC MOV X19, X0
	0x033BCDD0 LDR X9, [X8 + 0x3A8]
	0x033BCDD4 LDR X1, [X8 + 0x3B0]
	0x033BCDD8 BLR X9
	0x033BCDDC TBZ X0, 0x0, 0x33BCDE8
	0x033BCDE0 MOVZ W0, 0x1
	0x033BCDE4 B 0x33BCEA8
	0x033BCDE8 LDR X8, [X19]
	0x033BCDEC MOV X0, X19
	0x033BCDF0 LDR X9, [X8 + 0x3C8]
	0x033BCDF4 LDR X1, [X8 + 0x3D0]
	0x033BCDF8 BLR X9
	0x033BCDFC TBZ X0, 0x0, 0x33BCE64
	0x033BCE00 LDR X8, [X19]
	0x033BCE04 MOV X0, X19
	0x033BCE08 LDR X9, [X8 + 0x468]
	0x033BCE0C LDR X1, [X8 + 0x470]
	0x033BCE10 BLR X9
	0x033BCE14 CBZ X0, 0x33BCEB4
	0x033BCE18 LDR W8, [X0 + 0x18]
	0x033BCE1C MOV X20, X0
	0x033BCE20 CMP W8, 0x1
	0x033BCE24 B.LT 0x33BCE64
	0x033BCE28 MOV W21, W31
	0x033BCE2C CMP W21, W8
	0x033BCE30 B.CS 0x33BCEB8
	0x033BCE34 ADD X8, X20, W21, 0x3, SXTW
	0x033BCE38 LDR X0, [X8 + 0x20]
	0x033BCE3C CBZ X0, 0x33BCEB4
	0x033BCE40 LDR X8, [X0]
	0x033BCE44 LDR X9, [X8 + 0x288]
	0x033BCE48 LDR X1, [X8 + 0x290]
	0x033BCE4C BLR X9
	0x033BCE50 TBNZ X0, 0x0, 0x33BCDE0
	0x033BCE54 LDR W8, [X20 + 0x18]
	0x033BCE58 ADD W21, W21, 0x1
	0x033BCE5C CMP W21, W8
	0x033BCE60 B.LT 0x33BCE2C
	0x033BCE64 MOV X0, X19
	0x033BCE68 MOV X1, X31
	0x033BCE6C BL 0x3396018
	0x033BCE70 TBZ X0, 0x0, 0x33BCEA4
	0x033BCE74 LDR X8, [X19]
	0x033BCE78 MOV X0, X19
	0x033BCE7C LDR X9, [X8 + 0x428]
	0x033BCE80 LDR X1, [X8 + 0x430]
	0x033BCE84 BLR X9
	0x033BCE88 CBZ X0, 0x33BCEB4
	0x033BCE8C LDR X8, [X0]
	0x033BCE90 LDP X20, X19, [X31 + 0x10]
	0x033BCE94 LDR X2, [X8 + 0x288]
	0x033BCE98 LDR X1, [X8 + 0x290]
	0x033BCE9C LDP X30, X21, [X31], #0x20
	0x033BCEA0 BR X2
	0x033BCEA4 MOV W0, W31
	0x033BCEA8 LDP X20, X19, [X31 + 0x10]
	0x033BCEAC LDP X30, X21, [X31], #0x20
	0x033BCEB0 RET
	0x033BCEB4 BL 0x1C16F20
	0x033BCEB8 BL 0x1C16F28
	0x033BCEBC STR X30, [X31 - 0x20]!
	0x033BCEC0 STP X20, X19, [X31 + 0x10]
	0x033BCEC4 ADRP X20, 0x1021000
	0x033BCEC8 LDRB W8, [X20 + 0x1F7]
	0x033BCECC MOV X19, X0
	0x033BCED0 TBNZ X8, 0x0, 0x33BCEE8
	0x033BCED4 ADRP X0, 0xD70000
	0x033BCED8 LDR X0, [X0 + 0x410]
	0x033BCEDC BL 0x1C16CF4
	0x033BCEE0 MOVZ W8, 0x1
	0x033BCEE4 STRB W8, [X20 + 0x1F7]
	0x033BCEE8 STR X31, [X31 + 0x8]
	0x033BCEEC LDR X8, [X19]
	0x033BCEF0 MOV X0, X19
	0x033BCEF4 LDR X9, [X8 + 0x3A8]
	0x033BCEF8 LDR X1, [X8 + 0x3B0]
	0x033BCEFC BLR X9
	0x033BCF00 TBZ X0, 0x0, 0x33BCF60
	0x033BCF04 MOV X0, X19
	0x033BCF08 MOV X1, X31
	0x033BCF0C BL 0x33CC540
	0x033BCF10 MOV X1, X0
	0x033BCF14 ADD X0, X31, 0x8

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x1022000
	009 Move W8, [X24+499]
	010 Move W23, W4
	011 Move X21, X3
	012 Move X22, X2
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xD38000
	020 Move X0, [X0+1728]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X24+499], W8
	024 Add X2, X31, 12
	025 Move X0, X19
	026 Move X1, X20
	027 Move [X31+12], W31
	028 Call RuntimeType.TryConvertToType, X0, X1, X2
	029 Move W8, [X31+12]
	030 Compare W8, 0
	031 JumpIfEqual {56}
	032 Move TEMP, X23
	033 And TEMP, TEMP, 0x10000
	034 Compare TEMP, 0x10000
	035 JumpIfEqual {64}
	036 Compare X22, 0
	037 JumpIfEqual {64}
	038 Move X8, 0xD38000
	039 Move X8, [X8+1728]
	040 Move X0, [X8]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X31
	046 Call Type.get_DefaultBinder
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X8, [X22]
	049 Move X0, X22
	050 Move X1, X20
	051 Move X2, X19
	052 Move X9, [X8+408]
	053 Move X4, [X8+416]
	054 Move X3, X21
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Move X20, [X31+48]
	057 Move X19, [X31+56]
	058 Move X22, [X31+32]
	059 Move X21, [X31+40]
	060 Move X24, [X31+16]
	061 Move X23, [X31+24]
	062 Move X30, [X31+64]
	063 Return X0
	064 Move X0, 0xD3A000
	065 Move X0, [X0+3144]
	066 Call 0x1C17D08
	067 Call 0x19913D0
	068 Move X0, X31
	069 Call CultureInfo.get_CurrentUICulture
	070 Move X21, X0
	071 Move X0, 0xD71000
	072 Move X0, [X0+984]
	073 Call 0x1C17D08
	074 Move X1, X31
	075 Call Environment.GetResourceString, X0
	076 Move X22, X0
	077 Move X0, X20
	078 Call 0x19913C0
	079 Move X0, X20
	080 Move X1, X31
	081 Call "il2cpp_vm_object_is_inst", X0
	082 Move X2, X0
	083 Move X0, X21
	084 Move X1, X22
	085 Move X3, X19
	086 Move X4, X31
	087 Call String.Format, X0, X1, X2, X3
	088 Move X19, X0
	089 Move X0, 0xD40000
	090 Move X0, [X0+1400]
	091 Call 0x1C17D08
	092 Call 0x1C17F10
	093 Move X1, X19
	094 Move X2, X31
	095 Move X20, X0
	096 Call ArgumentException..ctor, X0, X1
	097 Move X0, 0xD71000
	098 Move X0, [X0+992]
	099 Call 0x1C17D08
	100 Move X1, X0
	101 Move X0, X20
	102 Call 0x1C17DEC

Method: System.Object TryConvertToType(System.Object value, ref System.Boolean failed)

Disassembly:
	0x033BCF18 MOV X2, X31
	0x033BCF1C BL 0x320AAA8
	0x033BCF20 ADD X0, X31, 0x8
	0x033BCF24 MOV X1, X31
	0x033BCF28 BL 0x320AAC8
	0x033BCF2C CBNZ X0, 0x33BCF54
	0x033BCF30 ADRP X19, 0xD70000
	0x033BCF34 LDR X19, [X19 + 0x410]
	0x033BCF38 LDR X0, [X19]
	0x033BCF3C LDR W8, [X0 + 0xE0]
	0x033BCF40 CBNZ W8, 0x33BCF4C
	0x033BCF44 BL 0x1C16DFC
	0x033BCF48 LDR X0, [X19]
	0x033BCF4C LDR X8, [X0 + 0xB8]
	0x033BCF50 LDR X0, [X8]
	0x033BCF54 LDP X20, X19, [X31 + 0x10]
	0x033BCF58 LDR X30, [X31], #0x20
	0x033BCF5C RET
	0x033BCF60 ADRP X0, 0xD69000
	0x033BCF64 LDR X0, [X0 + 0xEC0]
	0x033BCF68 BL 0x1C16D08
	0x033BCF6C MOV X1, X31
	0x033BCF70 BL 0x33BDD84
	0x033BCF74 MOV X19, X0
	0x033BCF78 ADRP X0, 0xD37000
	0x033BCF7C LDR X0, [X0 + 0x5B0]
	0x033BCF80 BL 0x1C16D08
	0x033BCF84 BL 0x1C16F10
	0x033BCF88 MOV X1, X19
	0x033BCF8C MOV X2, X31
	0x033BCF90 MOV X20, X0
	0x033BCF94 BL 0x337DF1C
	0x033BCF98 ADRP X0, 0xD70000
	0x033BCF9C LDR X0, [X0 + 0x418]
	0x033BCFA0 BL 0x1C16D08
	0x033BCFA4 MOV X1, X0
	0x033BCFA8 MOV X0, X20
	0x033BCFAC BL 0x1C16DEC
	0x033BCFB0 STR X30, [X31 - 0x30]!
	0x033BCFB4 STP X22, X21, [X31 + 0x10]
	0x033BCFB8 STP X20, X19, [X31 + 0x20]
	0x033BCFBC ADRP X21, 0x1021000
	0x033BCFC0 ADRP X22, 0xD3F000
	0x033BCFC4 LDRB W8, [X21 + 0x1F8]
	0x033BCFC8 LDR X22, [X22 + 0xC60]
	0x033BCFCC MOV X20, X1
	0x033BCFD0 MOV X19, X0
	0x033BCFD4 TBNZ X8, 0x0, 0x33BCFF8
	0x033BCFD8 ADRP X0, 0xD60000
	0x033BCFDC LDR X0, [X0 + 0x4E8]
	0x033BCFE0 BL 0x1C16CF4
	0x033BCFE4 ADRP X0, 0xD3F000
	0x033BCFE8 LDR X0, [X0 + 0xC60]
	0x033BCFEC BL 0x1C16CF4
	0x033BCFF0 MOVZ W8, 0x1
	0x033BCFF4 STRB W8, [X21 + 0x1F8]
	0x033BCFF8 LDR X0, [X22]
	0x033BCFFC MOVZ W1, 0x1
	0x033BD000 BL 0x1C16D6C
	0x033BD004 CBZ X0, 0x33BD0AC
	0x033BD008 MOV X21, X0
	0x033BD00C CBZ X20, 0x33BD024
	0x033BD010 LDR X8, [X21]
	0x033BD014 MOV X0, X20
	0x033BD018 LDR X1, [X8 + 0x40]
	0x033BD01C BL 0x1C16E00
	0x033BD020 CBZ X0, 0x33BD0B8
	0x033BD024 LDR W8, [X21 + 0x18]
	0x033BD028 CBZ W8, 0x33BD0B4
	0x033BD02C ADRP X22, 0xD5F000
	0x033BD030 LDR X22, [X22 + 0x4E8]
	0x033BD034 STR X20, [X21 + 0x20]
	0x033BD038 LDR X0, [X22]
	0x033BD03C LDR W8, [X0 + 0xE0]
	0x033BD040 CBNZ W8, 0x33BD048
	0x033BD044 BL 0x1C16DFC
	0x033BD048 MOV X0, X19
	0x033BD04C MOV X1, X21
	0x033BD050 BL 0x1C3D058
	0x033BD054 CBZ X0, 0x33BD0AC
	0x033BD058 LDR X8, [X0]
	0x033BD05C LDR X1, [X22]
	0x033BD060 LDRB W10, [X8 + 0x130]
	0x033BD064 LDRB W9, [X1 + 0x130]
	0x033BD068 CMP W10, W9
	0x033BD06C B.CC 0x33BD0B0
	0x033BD070 LDR X8, [X8 + 0xC8]
	0x033BD074 ADD X8, X8, X9, 0x3, LSL
	0x033BD078 LDUR X8, [X8 - 0x8]
	0x033BD07C CMP X8, X1
	0x033BD080 B.NE 0x33BD0B0
	0x033BD084 BL 0x33BB77C
	0x033BD088 CBZ X0, 0x33BD0AC
	0x033BD08C LDP X20, X19, [X31 + 0x20]
	0x033BD090 LDP X22, X21, [X31 + 0x10]
	0x033BD094 MOVZ W3, 0x1
	0x033BD098 MOV X1, X31
	0x033BD09C MOV X2, X31
	0x033BD0A0 MOV X4, X31
	0x033BD0A4 LDR X30, [X31], #0x30
	0x033BD0A8 B 0x32DCD0C
	0x033BD0AC BL 0x1C16F20
	0x033BD0B0 BL 0x1C171E0
	0x033BD0B4 BL 0x1C16F28
	0x033BD0B8 BL 0x1C16F44
	0x033BD0BC MOV X1, X31
	0x033BD0C0 BL 0x1C16DEC
	0x033BD0C4 B 0x1C3B734
	0x033BD0C8 B 0x1C3C430
	0x033BD0CC B 0x1C3A0CC
	0x033BD0D0 STP X30, X21, [X31 - 0x20]!
	0x033BD0D4 STP X20, X19, [X31 + 0x10]
	0x033BD0D8 ADRP X20, 0x1020000
	0x033BD0DC ADRP X21, 0xD5F000
	0x033BD0E0 LDRB W8, [X20 + 0x1FC]
	0x033BD0E4 LDR X21, [X21 + 0x4E8]
	0x033BD0E8 MOV X19, X0
	0x033BD0EC TBNZ X8, 0x0, 0x33BD104
	0x033BD0F0 ADRP X0, 0xD5F000
	0x033BD0F4 LDR X0, [X0 + 0x4E8]
	0x033BD0F8 BL 0x1C16CF4
	0x033BD0FC MOVZ W8, 0x1
	0x033BD100 STRB W8, [X20 + 0x1FC]
	0x033BD104 LDR X0, [X21]
	0x033BD108 LDR W8, [X0 + 0xE0]
	0x033BD10C CBNZ W8, 0x33BD114
	0x033BD110 BL 0x1C16DFC
	0x033BD114 MOV X0, X19
	0x033BD118 LDP X20, X19, [X31 + 0x10]
	0x033BD11C LDP X30, X21, [X31], #0x20
	0x033BD120 B 0x1C3D420
	0x033BD124 B 0x1C3D420
	0x033BD128 MOV W1, W31
	0x033BD12C MOV W2, W31
	0x033BD130 B 0x1C3C9D0
	0x033BD134 AND W1, W1, 0x1
	0x033BD138 AND W2, W2, 0x1
	0x033BD13C B 0x1C3C9D0
	0x033BD140 B 0x1C3C8CC
	0x033BD144 B 0x1C3A228
	0x033BD148 B 0x1C3AA10
	0x033BD14C B 0x1C3D2CC
	0x033BD150 B 0x1C3BC74
	0x033BD154 MOVZ W1, 0x1
	0x033BD158 MOVZ W2, 0x1
	0x033BD15C B 0x1C3C9D0
	0x033BD160 B 0x1C3CAA8
	0x033BD164 B 0x1C3C8F0
	0x033BD168 B 0x1C3C994
	0x033BD16C STP X30, X21, [X31 - 0x20]!
	0x033BD170 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1022000
	008 Move W8, [X22+500]
	009 Move X20, X2
	010 Move X19, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0xD38000
	017 Move X0, [X0+3576]
	018 Call 0x1C17CF4
	019 Move X0, 0xD61000
	020 Move X0, [X0+3864]
	021 Call 0x1C17CF4
	022 Move X0, 0xD61000
	023 Move X0, [X0+1256]
	024 Call 0x1C17CF4
	025 Move X0, 0xD38000
	026 Move X0, [X0+1728]
	027 Call 0x1C17CF4
	028 Move X0, 0xD61000
	029 Move X0, [X0+3880]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X22+500], W8
	033 Move X8, [X21]
	034 Move X0, X21
	035 Move X1, X19
	036 Move X9, [X8+2152]
	037 Move X2, [X8+2160]
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {51}
	043 Move X0, X19
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X30, [X31+48]
	049 Move X23, [X31+56]
	050 Return X0
	051 Move X0, X21
	052 Move X1, X31
	053 Call Type.get_IsByRef, X0
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {76}
	058 Move X8, [X21]
	059 Move X0, X21
	060 Move X9, [X8+1064]
	061 Move X1, [X8+1072]
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Compare X19, 0
	064 JumpIfEqual {43}
	065 Compare X0, 0
	066 JumpIfEqual {192}
	067 Move X8, [X0]
	068 Move X1, X19
	069 Move X9, [X8+2152]
	070 Move X2, [X8+2160]
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfEqual {43}
	076 Compare X19, 0
	077 JumpIfEqual {43}
	078 Move X8, [X21]
	079 Move X0, X21
	080 Move X9, [X8+1416]
	081 Move X1, [X8+1424]
	082 NotImplemented "Instruction BLR not yet implemented."
	083 Move TEMP, X0
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfNotEqual {117}
	087 Move X8, 0xD37000
	088 Move X8, [X8+3576]
	089 Move X0, [X8]
	090 Move W8, [X0+224]
	091 Compare W8, 0
	092 JumpIfNotEqual {94}
	093 Call 0x1C17DFC
	094 Move X0, X21
	095 Call Enum.GetUnderlyingType, X0
	096 Move X22, X0
	097 Move X0, X19
	098 Move X1, X31
	099 Call "il2cpp_vm_object_is_inst", X0
	100 Move X8, 0xD37000
	101 Move X8, [X8+1728]
	102 Move X23, X0
	103 Move X8, [X8]
	104 Move W9, [X8+224]
	105 Compare W9, 0
	106 JumpIfNotEqual {109}
	107 Move X0, X8
	108 Call 0x1C17DFC
	109 Move X0, X22
	110 Move X1, X23
	111 Move X2, X31
	112 Call Type.op_Equality, X0, X1
	113 Move TEMP, X0
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfEqual {43}
	117 Move X0, X21
	118 Move X1, X31
	119 Call Type.get_IsPrimitive, X0
	120 Move TEMP, X0
	121 And TEMP, TEMP, 1
	122 Compare TEMP, 1
	123 JumpIfNotEqual {137}
	124 Move X8, 0xD60000
	125 Move X8, [X8+1256]
	126 Move X0, [X8]
	127 Move W8, [X0+224]
	128 Compare W8, 0
	129 JumpIfNotEqual {131}
	130 Call 0x1C17DFC
	131 Move X0, X19
	132 Move X1, X21
	133 Call RuntimeType.IsConvertibleToPrimitiveType, X0, X1
	134 Move X19, X0
	135 Compare X0, 0
	136 JumpIfNotEqual {43}
	137 Move X0, X21
	138 Move X1, X31
	139 Call Type.get_IsPointer, X0
	140 Move TEMP, X0
	141 And TEMP, TEMP, 1
	142 Compare TEMP, 1
	143 JumpIfNotEqual {189}
	144 Move X0, X19
	145 Move X1, X31
	146 Call "il2cpp_vm_object_is_inst", X0
	147 Move X23, 0xD37000
	148 Move X23, [X23+1728]
	149 Move X9, 0xD60000
	150 Move X21, X0
	151 Move X8, [X23]
	152 Move X9, [X9+3864]
	153 Move W10, [X8+224]
	154 Move X22, [X9]
	155 Compare W10, 0
	156 JumpIfNotEqual {159}
	157 Move X0, X8
	158 Call 0x1C17DFC
	159 Move X0, X22
	160 Move X1, X31
	161 Call Type.GetTypeFromHandle, X0
	162 Move X1, X0
	163 Move X0, X21
	164 Move X2, X31
	165 Call Type.op_Equality, X0, X1
	166 Move TEMP, X0
	167 And TEMP, TEMP, 1
	168 Compare TEMP, 1
	169 JumpIfEqual {43}
	170 Move X8, 0xD60000
	171 Move X0, [X23]
	172 Move X8, [X8+3880]
	173 Move W9, [X0+224]
	174 Move X22, [X8]
	175 Compare W9, 0
	176 JumpIfNotEqual {178}
	177 Call 0x1C17DFC
	178 Move X0, X22
	179 Move X1, X31
	180 Call Type.GetTypeFromHandle, X0
	181 Move X1, X0
	182 Move X0, X21
	183 Move X2, X31
	184 Call Type.op_Equality, X0, X1
	185 Move TEMP, X0
	186 And TEMP, TEMP, 1
	187 Compare TEMP, 1
	188 JumpIfEqual {43}
	189 Move X19, X31
	190 Move W8, 1
	191 Move [X20], W8
	192 Call 0x1C17F20

Method: System.Object IsConvertibleToPrimitiveType(System.Object value, System.Type targetType)

Disassembly:
	0x033BD174 ADRP X20, 0x1020000
	0x033BD178 ADRP X21, 0xD36000
	0x033BD17C LDRB W8, [X20 + 0x200]
	0x033BD180 LDR X21, [X21 + 0x6C0]
	0x033BD184 MOV X19, X0
	0x033BD188 TBNZ X8, 0x0, 0x33BD1A0
	0x033BD18C ADRP X0, 0xD36000
	0x033BD190 LDR X0, [X0 + 0x6C0]
	0x033BD194 BL 0x1C16CF4
	0x033BD198 MOVZ W8, 0x1
	0x033BD19C STRB W8, [X20 + 0x200]
	0x033BD1A0 LDR X8, [X19]
	0x033BD1A4 MOV X0, X19
	0x033BD1A8 LDR X9, [X8 + 0x328]
	0x033BD1AC LDR X1, [X8 + 0x330]
	0x033BD1B0 BLR X9
	0x033BD1B4 LDR X8, [X21]
	0x033BD1B8 MOV X20, X0
	0x033BD1BC LDR W9, [X8 + 0xE0]
	0x033BD1C0 CBNZ W9, 0x33BD1CC
	0x033BD1C4 MOV X0, X8
	0x033BD1C8 BL 0x1C16DFC
	0x033BD1CC MOV X0, X20
	0x033BD1D0 MOV X1, X31
	0x033BD1D4 MOV X2, X31
	0x033BD1D8 BL 0x3395F0C
	0x033BD1DC TBZ X0, 0x0, 0x33BD220
	0x033BD1E0 LDR X0, [X21]
	0x033BD1E4 LDR W8, [X0 + 0xE0]
	0x033BD1E8 CBNZ W8, 0x33BD1F0
	0x033BD1EC BL 0x1C16DFC
	0x033BD1F0 MOV X0, X20
	0x033BD1F4 MOV X1, X19
	0x033BD1F8 MOV X2, X31
	0x033BD1FC BL 0x3395F0C
	0x033BD200 TBZ X0, 0x0, 0x33BD220
	0x033BD204 CBZ X20, 0x33BD234
	0x033BD208 LDR X8, [X20]
	0x033BD20C MOV X0, X20
	0x033BD210 LDP X20, X19, [X31 + 0x10]
	0x033BD214 LDP X2, X1, [X8 + 0x158]
	0x033BD218 LDP X30, X21, [X31], #0x20
	0x033BD21C BR X2
	0x033BD220 LDR X0, [X19 + 0x10]
	0x033BD224 LDP X20, X19, [X31 + 0x10]
	0x033BD228 MOV X1, X31
	0x033BD22C LDP X30, X21, [X31], #0x20
	0x033BD230 B 0x33C6940
	0x033BD234 BL 0x1C16F20
	0x033BD238 STR X30, [X31 - 0x20]!
	0x033BD23C STP X20, X19, [X31 + 0x10]
	0x033BD240 ADRP X20, 0x1020000
	0x033BD244 LDRB W8, [X20 + 0x201]
	0x033BD248 MOV X19, X0
	0x033BD24C TBNZ X8, 0x0, 0x33BD264
	0x033BD250 ADRP X0, 0xD6F000
	0x033BD254 LDR X0, [X0 + 0x398]
	0x033BD258 BL 0x1C16CF4
	0x033BD25C MOVZ W8, 0x1
	0x033BD260 STRB W8, [X20 + 0x201]
	0x033BD264 LDR X8, [X19]
	0x033BD268 MOV X0, X19
	0x033BD26C LDR X9, [X8 + 0x288]
	0x033BD270 LDR X1, [X8 + 0x290]
	0x033BD274 BLR X9
	0x033BD278 TBZ X0, 0x0, 0x33BD2A0
	0x033BD27C MOV X0, X19
	0x033BD280 MOV X1, X31
	0x033BD284 BL 0x3396028
	0x033BD288 CBZ X0, 0x33BD2FC
	0x033BD28C LDR X8, [X0]
	0x033BD290 LDR X9, [X8 + 0x3D8]
	0x033BD294 LDR X1, [X8 + 0x3E0]
	0x033BD298 BLR X9
	0x033BD29C TBZ X0, 0x0, 0x33BD2EC
	0x033BD2A0 LDR X20, [X19 + 0x18]
	0x033BD2A4 CBNZ X20, 0x33BD2CC
	0x033BD2A8 ADRP X8, 0xD6F000
	0x033BD2AC LDR X8, [X8 + 0x398]
	0x033BD2B0 LDR X0, [X8]
	0x033BD2B4 BL 0x1C16F10
	0x033BD2B8 MOV X1, X31
	0x033BD2BC MOV X20, X0
	0x033BD2C0 BL 0x33C2448
	0x033BD2C4 STR X20, [X19 + 0x18]
	0x033BD2C8 CBZ X20, 0x33BD2FC
	0x033BD2CC LDR X0, [X20 + 0x10]
	0x033BD2D0 CBNZ X0, 0x33BD2F0
	0x033BD2D4 MOVZ W1, 0x1
	0x033BD2D8 MOV X0, X19
	0x033BD2DC MOV W2, W31
	0x033BD2E0 BL 0x1C3C9D0
	0x033BD2E4 STR X0, [X20 + 0x10]
	0x033BD2E8 B 0x33BD2F0
	0x033BD2EC MOV X0, X31
	0x033BD2F0 LDP X20, X19, [X31 + 0x10]
	0x033BD2F4 LDR X30, [X31], #0x20
	0x033BD2F8 RET
	0x033BD2FC BL 0x1C16F20
	0x033BD300 STP X30, X19, [X31 - 0x10]!
	0x033BD304 MOV X1, X31
	0x033BD308 MOV X19, X0
	0x033BD30C BL 0x3396BF8
	0x033BD310 TBZ X0, 0x0, 0x33BD348
	0x033BD314 LDR X8, [X19]
	0x033BD318 MOV X0, X19
	0x033BD31C LDR X9, [X8 + 0x428]
	0x033BD320 LDR X1, [X8 + 0x430]
	0x033BD324 BLR X9
	0x033BD328 CBZ X0, 0x33BD354
	0x033BD32C LDR X8, [X0]
	0x033BD330 LDR X9, [X8 + 0x8A8]
	0x033BD334 LDR X1, [X8 + 0x8B0]
	0x033BD338 BLR X9
	0x033BD33C CMP X19, X0
	0x033BD340 CSET W0, EQ
	0x033BD344 B 0x33BD34C
	0x033BD348 MOV W0, W31
	0x033BD34C LDP X30, X19, [X31], #0x10
	0x033BD350 RET
	0x033BD354 BL 0x1C16F20
	0x033BD358 STP X30, X21, [X31 - 0x20]!
	0x033BD35C STP X20, X19, [X31 + 0x10]
	0x033BD360 ADRP X21, 0x1020000
	0x033BD364 LDRB W8, [X21 + 0x202]
	0x033BD368 MOV X20, X1
	0x033BD36C MOV X19, X0
	0x033BD370 TBNZ X8, 0x0, 0x33BD388
	0x033BD374 ADRP X0, 0xD5F000
	0x033BD378 LDR X0, [X0 + 0x4E8]
	0x033BD37C BL 0x1C16CF4
	0x033BD380 MOVZ W8, 0x1
	0x033BD384 STRB W8, [X21 + 0x202]
	0x033BD388 CBZ X20, 0x33BD404
	0x033BD38C ADRP X9, 0xD5F000
	0x033BD390 LDR X9, [X9 + 0x4E8]
	0x033BD394 LDR X8, [X20]
	0x033BD398 LDR X0, [X9]
	0x033BD39C LDRB W10, [X8 + 0x130]
	0x033BD3A0 LDRB W9, [X0 + 0x130]
	0x033BD3A4 CMP W10, W9
	0x033BD3A8 B.CS 0x33BD3B4
	0x033BD3AC MOV X20, X31
	0x033BD3B0 B 0x33BD3C8
	0x033BD3B4 LDR X8, [X8 + 0xC8]
	0x033BD3B8 ADD X8, X8, X9, 0x3, LSL
	0x033BD3BC LDUR X8, [X8 - 0x8]
	0x033BD3C0 CMP X8, X0
	0x033BD3C4 CSEL X20, X20, X31, EQ
	0x033BD3C8 LDR W8, [X0 + 0xE0]
	0x033BD3CC CBZ W8, 0x33BD3EC
	0x033BD3D0 CBZ X20, 0x33BD3F4
	0x033BD3D4 MOV X0, X19
	0x033BD3D8 MOV X1, X20
	0x033BD3DC LDP X20, X19, [X31 + 0x10]
	0x033BD3E0 MOV X2, X31
	0x033BD3E4 LDP X30, X21, [X31], #0x20
	0x033BD3E8 B 0x33CC544
	0x033BD3EC BL 0x1C16DFC
	0x033BD3F0 CBNZ X20, 0x33BD3D4
	0x033BD3F4 LDP X20, X19, [X31 + 0x10]
	0x033BD3F8 MOV W0, W31
	0x033BD3FC LDP X30, X21, [X31], #0x20
	0x033BD400 RET
	0x033BD404 ADRP X0, 0xD3B000
	0x033BD408 LDR X0, [X0 + 0x528]
	0x033BD40C BL 0x1C16D08
	0x033BD410 BL 0x1C16F10
	0x033BD414 MOV X19, X0
	0x033BD418 ADRP X0, 0xD3E000
	0x033BD41C LDR X0, [X0 + 0x5E8]
	0x033BD420 BL 0x1C16D08
	0x033BD424 MOV X1, X0
	0x033BD428 MOV X0, X19
	0x033BD42C MOV X2, X31
	0x033BD430 BL 0x330E100
	0x033BD434 ADRP X0, 0xD6F000
	0x033BD438 LDR X0, [X0 + 0x420]
	0x033BD43C BL 0x1C16D08
	0x033BD440 MOV X1, X0
	0x033BD444 MOV X0, X19
	0x033BD448 BL 0x1C16DEC
	0x033BD44C SUB X31, X31, 0x20
	0x033BD450 STR X30, [X31 + 0x10]
	0x033BD454 MOV X7, X6
	0x033BD458 MOV X6, X5
	0x033BD45C MOV W5, W4
	0x033BD460 MOV X4, X3
	0x033BD464 MOV W3, W2
	0x033BD468 MOVN W2, 0x0
	0x033BD46C BL 0x33BD47C
	0x033BD470 LDR X30, [X31 + 0x10]
	0x033BD474 ADD X31, X31, 0x20
	0x033BD478 RET
	0x033BD47C SUB X31, X31, 0x70
	0x033BD480 STP X30, X27, [X31 + 0x20]
	0x033BD484 STP X26, X25, [X31 + 0x30]
	0x033BD488 STP X24, X23, [X31 + 0x40]
	0x033BD48C STP X22, X21, [X31 + 0x50]
	0x033BD490 STP X20, X19, [X31 + 0x60]
	0x033BD494 ADRP X27, 0x1020000
	0x033BD498 LDRB W8, [X27 + 0x203]
	0x033BD49C MOV X19, X7
	0x033BD4A0 MOV X20, X6
	0x033BD4A4 MOV W23, W5
	0x033BD4A8 MOV X22, X4
	0x033BD4AC MOV W21, W3
	0x033BD4B0 MOV W24, W2
	0x033BD4B4 MOV X25, X1
	0x033BD4B8 MOV X26, X0
	0x033BD4BC TBNZ X8, 0x0, 0x33BD510
	0x033BD4C0 ADRP X0, 0xD6E000
	0x033BD4C4 LDR X0, [X0 + 0x538]
	0x033BD4C8 BL 0x1C16CF4
	0x033BD4CC ADRP X0, 0xD6F000
	0x033BD4D0 LDR X0, [X0 + 0x108]
	0x033BD4D4 BL 0x1C16CF4
	0x033BD4D8 ADRP X0, 0xD6F000
	0x033BD4DC LDR X0, [X0 + 0x168]
	0x033BD4E0 BL 0x1C16CF4
	0x033BD4E4 ADRP X0, 0xD6F000
	0x033BD4E8 LDR X0, [X0 + 0x428]
	0x033BD4EC BL 0x1C16CF4
	0x033BD4F0 ADRP X0, 0xD67000
	0x033BD4F4 LDR X0, [X0 + 0x278]
	0x033BD4F8 BL 0x1C16CF4
	0x033BD4FC ADRP X0, 0xD36000
	0x033BD500 LDR X0, [X0 + 0x6C0]
	0x033BD504 BL 0x1C16CF4
	0x033BD508 MOVZ W8, 0x1
	0x033BD50C STRB W8, [X27 + 0x203]
	0x033BD510 ADD X8, X31, 0x8
	0x033BD514 MOV X0, X26
	0x033BD518 MOV X1, X25
	0x033BD51C MOV W2, W24
	0x033BD520 MOV W3, W21
	0x033BD524 MOV W4, W23
	0x033BD528 MOV X5, X20
	0x033BD52C MOV W6, W31
	0x033BD530 STP X31, X31, [X31 + 0x8]
	0x033BD534 STR X31, [X31 + 0x18]
	0x033BD538 BL 0x33BD748
	0x033BD53C LDR W8, [X31 + 0x18]
	0x033BD540 CBZ W8, 0x33BD618
	0x033BD544 CBZ X20, 0x33BD550
	0x033BD548 LDR X8, [X20 + 0x18]
	0x033BD54C CBNZ X8, 0x33BD57C
	0x033BD550 ADRP X24, 0xD6F000
	0x033BD554 LDR X24, [X24 + 0x428]
	0x033BD558 ADD X0, X31, 0x8
	0x033BD55C MOV W1, W31
	0x033BD560 LDR X2, [X24]
	0x033BD564 BL 0x2EF1B34
	0x033BD568 LDR W8, [X31 + 0x18]
	0x033BD56C MOV X23, X0
	0x033BD570 CMP W8, 0x1
	0x033BD574 B.EQ 0x33BD61C
	0x033BD578 CBZ X20, 0x33BD654
	0x033BD57C CBZ X22, 0x33BD598
	0x033BD580 ADRP X8, 0xD6F000
	0x033BD584 LDR X8, [X8 + 0x108]
	0x033BD588 ADD X0, X31, 0x8
	0x033BD58C LDR X1, [X8]
	0x033BD590 BL 0x2EF1B6C
	0x033BD594 B 0x33BD5D4
	0x033BD598 ADRP X8, 0xD36000
	0x033BD59C LDR X8, [X8 + 0x6C0]
	0x033BD5A0 LDR X0, [X8]
	0x033BD5A4 LDR W8, [X0 + 0xE0]
	0x033BD5A8 CBNZ W8, 0x33BD5B0
	0x033BD5AC BL 0x1C16DFC
	0x033BD5B0 MOV X0, X31
	0x033BD5B4 BL 0x33981F8
	0x033BD5B8 ADRP X8, 0xD6F000
	0x033BD5BC LDR X8, [X8 + 0x108]
	0x033BD5C0 MOV X22, X0
	0x033BD5C4 ADD X0, X31, 0x8
	0x033BD5C8 LDR X1, [X8]
	0x033BD5CC BL 0x2EF1B6C
	0x033BD5D0 CBZ X22, 0x33BD744
	0x033BD5D4 LDR X8, [X22]
	0x033BD5D8 MOV X2, X0
	0x033BD5DC MOV X0, X22
	0x033BD5E0 MOV W1, W21
	0x033BD5E4 LDP X9, X5, [X8 + 0x1B8]
	0x033BD5E8 MOV X3, X20
	0x033BD5EC MOV X4, X19
	0x033BD5F0 BLR X9
	0x033BD5F4 CBZ X0, 0x33BD618
	0x033BD5F8 ADRP X8, 0xD67000
	0x033BD5FC LDR X8, [X8 + 0x278]
	0x033BD600 LDR X9, [X0]
	0x033BD604 LDR X8, [X8]
	0x033BD608 LDRB W11, [X9 + 0x130]
	0x033BD60C LDRB W10, [X8 + 0x130]
	0x033BD610 CMP W11, W10
	0x033BD614 B.CS 0x33BD63C
	0x033BD618 MOV X23, X31
	0x033BD61C MOV X0, X23
	0x033BD620 LDP X20, X19, [X31 + 0x60]
	0x033BD624 LDP X22, X21, [X31 + 0x50]
	0x033BD628 LDP X24, X23, [X31 + 0x40]
	0x033BD62C LDP X26, X25, [X31 + 0x30]
	0x033BD630 LDP X30, X27, [X31 + 0x20]
	0x033BD634 ADD X31, X31, 0x70
	0x033BD638 RET
	0x033BD63C LDR X9, [X9 + 0xC8]
	0x033BD640 ADD X9, X9, X10, 0x3, LSL
	0x033BD644 LDUR X9, [X9 - 0x8]
	0x033BD648 CMP X9, X8
	0x033BD64C CSEL X23, X0, X31, EQ
	0x033BD650 B 0x33BD61C
	0x033BD654 CMP W8, 0x2
	0x033BD658 B.LT 0x33BD6B0
	0x033BD65C ADRP X21, 0xD6E000
	0x033BD660 LDR X21, [X21 + 0x538]
	0x033BD664 MOVZ W19, 0x1
	0x033BD668 LDR X2, [X24]
	0x033BD66C ADD X0, X31, 0x8
	0x033BD670 MOV W1, W19
	0x033BD674 BL 0x2EF1B34
	0x033BD678 LDR X8, [X21]
	0x033BD67C MOV X20, X0
	0x033BD680 LDR W9, [X8 + 0xE0]
	0x033BD684 CBNZ W9, 0x33BD690
	0x033BD688 MOV X0, X8
	0x033BD68C BL 0x1C16DFC
	0x033BD690 MOV X0, X20
	0x033BD694 MOV X1, X23
	0x033BD698 BL 0x33AD98C
	0x033BD69C TBZ X0, 0x0, 0x33BD6FC
	0x033BD6A0 LDR W8, [X31 + 0x18]
	0x033BD6A4 ADD W19, W19, 0x1
	0x033BD6A8 CMP W19, W8
	0x033BD6AC B.LT 0x33BD668
	0x033BD6B0 ADRP X8, 0xD6F000
	0x033BD6B4 LDR X8, [X8 + 0x108]
	0x033BD6B8 ADD X0, X31, 0x8
	0x033BD6BC LDR X1, [X8]
	0x033BD6C0 BL 0x2EF1B6C
	0x033BD6C4 ADRP X8, 0xD6E000
	0x033BD6C8 LDR X8, [X8 + 0x538]
	0x033BD6CC LDR W19, [X31 + 0x18]
	0x033BD6D0 MOV X20, X0
	0x033BD6D4 LDR X8, [X8]
	0x033BD6D8 LDR W9, [X8 + 0xE0]
	0x033BD6DC CBNZ W9, 0x33BD6E8
	0x033BD6E0 MOV X0, X8
	0x033BD6E4 BL 0x1C16DFC
	0x033BD6E8 MOV X0, X20
	0x033BD6EC MOV W1, W19
	0x033BD6F0 BL 0x33AD3B0
	0x033BD6F4 CBNZ X0, 0x33BD5F8
	0x033BD6F8 B 0x33BD618
	0x033BD6FC ADRP X0, 0xD68000
	0x033BD700 LDR X0, [X0 + 0x7A0]
	0x033BD704 BL 0x1C16D08
	0x033BD708 BL 0x1C16F10
	0x033BD70C MOV X19, X0
	0x033BD710 ADRP X0, 0xD68000
	0x033BD714 LDR X0, [X0 + 0xBE0]
	0x033BD718 BL 0x1C16D08
	0x033BD71C MOV X1, X0
	0x033BD720 MOV X0, X19
	0x033BD724 MOV X2, X31
	0x033BD728 BL 0x32CC544
	0x033BD72C ADRP X0, 0xD6F000
	0x033BD730 LDR X0, [X0 + 0x430]
	0x033BD734 BL 0x1C16D08
	0x033BD738 MOV X1, X0
	0x033BD73C MOV X0, X19
	0x033BD740 BL 0x1C16DEC
	0x033BD744 BL 0x1C16F20
	0x033BD748 SUB X31, X31, 0xA0
	0x033BD74C STP X29, X30, [X31 + 0x40]
	0x033BD750 STP X28, X27, [X31 + 0x50]
	0x033BD754 STP X26, X25, [X31 + 0x60]
	0x033BD758 STP X24, X23, [X31 + 0x70]
	0x033BD75C STP X22, X21, [X31 + 0x80]
	0x033BD760 STP X20, X19, [X31 + 0x90]
	0x033BD764 STR X8, [X31]
	0x033BD768 ADRP X21, 0x1020000
	0x033BD76C STR X1, [X31 + 0x38]
	0x033BD770 ADRP X27, 0xD5F000
	0x033BD774 LDRB W8, [X21 + 0x204]
	0x033BD778 LDR X27, [X27 + 0x4E8]
	0x033BD77C MOV W24, W6
	0x033BD780 MOV X19, X5
	0x033BD784 MOV W20, W4
	0x033BD788 MOV W22, W3
	0x033BD78C MOV W23, W2
	0x033BD790 MOV X25, X0
	0x033BD794 TBNZ X8, 0x0, 0x33BD7C4
	0x033BD798 ADRP X0, 0xD6F000
	0x033BD79C LDR X0, [X0 + 0x70]
	0x033BD7A0 BL 0x1C16CF4
	0x033BD7A4 ADRP X0, 0xD6F000
	0x033BD7A8 LDR X0, [X0 + 0x78]
	0x033BD7AC BL 0x1C16CF4
	0x033BD7B0 ADRP X0, 0xD5F000
	0x033BD7B4 LDR X0, [X0 + 0x4E8]
	0x033BD7B8 BL 0x1C16CF4
	0x033BD7BC MOVZ W8, 0x1
	0x033BD7C0 STRB W8, [X21 + 0x204]
	0x033BD7C4 LDR X0, [X27]
	0x033BD7C8 STRB W31, [X31 + 0x34]
	0x033BD7CC STRB W31, [X31 + 0x30]
	0x033BD7D0 STR W31, [X31 + 0x2C]
	0x033BD7D4 STP X31, X31, [X31 + 0x10]
	0x033BD7D8 STR X31, [X31 + 0x20]
	0x033BD7DC LDR W8, [X0 + 0xE0]
	0x033BD7E0 CBNZ W8, 0x33BD7E8
	0x033BD7E4 BL 0x1C16DFC
	0x033BD7E8 AND W2, W24, 0x1
	0x033BD7EC ADD X1, X31, 0x38
	0x033BD7F0 ADD X3, X31, 0x34
	0x033BD7F4 ADD X4, X31, 0x30
	0x033BD7F8 ADD X5, X31, 0x2C
	0x033BD7FC MOV W0, W22
	0x033BD800 BL 0x33B4524
	0x033BD804 LDR X24, [X31 + 0x38]
	0x033BD808 LDR W3, [X31 + 0x2C]
	0x033BD80C MOV X0, X25
	0x033BD810 MOV W2, W22
	0x033BD814 MOV X1, X24
	0x033BD818 MOV X4, X25
	0x033BD81C BL 0x33B5038
	0x033BD820 CBZ X0, 0x33BD950
	0x033BD824 ADRP X8, 0xD6F000
	0x033BD828 LDR X8, [X8 + 0x78]
	0x033BD82C LDR W1, [X0 + 0x18]
	0x033BD830 MOV X25, X0
	0x033BD834 ADD X0, X31, 0x10
	0x033BD838 LDR X2, [X8]
	0x033BD83C BL 0x2EF1B28
	0x033BD840 LDR X8, [X25 + 0x18]
	0x033BD844 CMP W8, 0x1
	0x033BD848 B.LT 0x33BD918
	0x033BD84C LDRB W29, [X31 + 0x34]
	0x033BD850 LDRB W9, [X31 + 0x30]
	0x033BD854 MOV X28, X31
	0x033BD858 AND X8, X8, 0x0
	0x033BD85C ADD X21, X25, 0x20
	0x033BD860 STR W9, [X31 + 0xC]
	0x033BD864 CMP X28, W8, UXTW
	0x033BD868 B.CS 0x33BD94C
	0x033BD86C LDR X26, [X21, X28, LSL #3]
	0x033BD870 ADDS W31, W23, 0x1
	0x033BD874 B.EQ 0x33BD898
	0x033BD878 CBZ X26, 0x33BD950
	0x033BD87C LDR X8, [X26]
	0x033BD880 MOV X0, X26
	0x033BD884 LDR X9, [X8 + 0x3F8]
	0x033BD888 LDR X1, [X8 + 0x400]
	0x033BD88C BLR X9
	0x033BD890 CMP W0, W23
	0x033BD894 B.NE 0x33BD908
	0x033BD898 LDR X0, [X27]
	0x033BD89C LDR W8, [X0 + 0xE0]
	0x033BD8A0 CBNZ W8, 0x33BD8A8
	0x033BD8A4 BL 0x1C16DFC
	0x033BD8A8 MOV X0, X26
	0x033BD8AC MOV W1, W22
	0x033BD8B0 MOV W2, W20
	0x033BD8B4 MOV X3, X19
	0x033BD8B8 BL 0x33B4A34
	0x033BD8BC TBZ X0, 0x0, 0x33BD908
	0x033BD8C0 CBZ W29, 0x33BD8F0
	0x033BD8C4 LDR X0, [X27]
	0x033BD8C8 LDR W8, [X0 + 0xE0]
	0x033BD8CC CBNZ W8, 0x33BD8D4
	0x033BD8D0 BL 0x1C16DFC
	0x033BD8D4 LDR W8, [X31 + 0xC]
	0x033BD8D8 MOV X0, X26
	0x033BD8DC MOV X1, X24
	0x033BD8E0 CMP W8, 0x0
	0x033BD8E4 CSET W2, NE
	0x033BD8E8 BL 0x33B46D0
	0x033BD8EC TBZ X0, 0x0, 0x33BD908
	0x033BD8F0 ADRP X8, 0xD6F000
	0x033BD8F4 LDR X8, [X8 + 0x70]
	0x033BD8F8 ADD X0, X31, 0x10
	0x033BD8FC MOV X1, X26
	0x033BD900 LDR X2, [X8]
	0x033BD904 BL 0x2EF1D14
	0x033BD908 LDR W8, [X25 + 0x18]
	0x033BD90C ADD X28, X28, 0x1
	0x033BD910 CMP X28, W8, SXTW
	0x033BD914 B.LT 0x33BD864
	0x033BD918 LDR X8, [X31 + 0x20]
	0x033BD91C LDR V0, [X31 + 0x1]
	0x033BD920 LDR X9, [X31]
	0x033BD924 LDP X20, X19, [X31 + 0x90]
	0x033BD928 LDP X22, X21, [X31 + 0x80]
	0x033BD92C LDP X24, X23, [X31 + 0x70]
	0x033BD930 LDP X26, X25, [X31 + 0x60]
	0x033BD934 LDP X28, X27, [X31 + 0x50]
	0x033BD938 LDP X29, X30, [X31 + 0x40]
	0x033BD93C STR X8, [X9 + 0x10]
	0x033BD940 STR V0, [X9]
	0x033BD944 ADD X31, X31, 0xA0
	0x033BD948 RET
	0x033BD94C BL 0x1C16F28
	0x033BD950 BL 0x1C16F20
	0x033BD954 STP X30, X21, [X31 - 0x20]!
	0x033BD958 STP X20, X19, [X31 + 0x10]
	0x033BD95C ADRP X21, 0x1020000
	0x033BD960 ADRP X19, 0xD6E000
	0x033BD964 ADRP X20, 0xD36000
	0x033BD968 LDRB W8, [X21 + 0x205]
	0x033BD96C LDR X19, [X19 + 0x488]
	0x033BD970 LDR X20, [X20 + 0x6C0]
	0x033BD974 TBNZ X8, 0x0, 0x33BD9E0
	0x033BD978 ADRP X0, 0xD68000
	0x033BD97C LDR X0, [X0 + 0xC08]
	0x033BD980 BL 0x1C16CF4
	0x033BD984 ADRP X0, 0xD6B000
	0x033BD988 LDR X0, [X0 + 0x2D0]
	0x033BD98C BL 0x1C16CF4
	0x033BD990 ADRP X0, 0xD40000
	0x033BD994 LDR X0, [X0 + 0x968]
	0x033BD998 BL 0x1C16CF4
	0x033BD99C ADRP X0, 0xD5F000
	0x033BD9A0 LDR X0, [X0 + 0x4E8]
	0x033BD9A4 BL 0x1C16CF4
	0x033BD9A8 ADRP X0, 0xD5E000
	0x033BD9AC LDR X0, [X0 + 0xB60]
	0x033BD9B0 BL 0x1C16CF4
	0x033BD9B4 ADRP X0, 0xD36000
	0x033BD9B8 LDR X0, [X0 + 0x6C0]
	0x033BD9BC BL 0x1C16CF4
	0x033BD9C0 ADRP X0, 0xD6F000
	0x033BD9C4 LDR X0, [X0 + 0x348]
	0x033BD9C8 BL 0x1C16CF4
	0x033BD9CC ADRP X0, 0xD6E000
	0x033BD9D0 LDR X0, [X0 + 0x488]
	0x033BD9D4 BL 0x1C16CF4
	0x033BD9D8 MOVZ W8, 0x1
	0x033BD9DC STRB W8, [X21 + 0x205]
	0x033BD9E0 LDR X0, [X20]
	0x033BD9E4 ADRP X20, 0xD5F000
	0x033BD9E8 LDR X19, [X19]
	0x033BD9EC LDR W8, [X0 + 0xE0]
	0x033BD9F0 LDR X20, [X20 + 0x4E8]
	0x033BD9F4 CBNZ W8, 0x33BD9FC
	0x033BD9F8 BL 0x1C16DFC
	0x033BD9FC MOV X0, X19
	0x033BDA00 MOV X1, X31
	0x033BDA04 BL 0x338C698
	0x033BDA08 LDR X1, [X20]
	0x033BDA0C CBZ X0, 0x33BDA70
	0x033BDA10 LDR X8, [X0]
	0x033BDA14 LDRB W9, [X1 + 0x130]
	0x033BDA18 LDRB W10, [X8 + 0x130]
	0x033BDA1C CMP W10, W9
	0x033BDA20 B.CC 0x33BDCC4
	0x033BDA24 LDR X8, [X8 + 0xC8]
	0x033BDA28 ADD X8, X8, X9, 0x3, LSL
	0x033BDA2C LDUR X8, [X8 - 0x8]
	0x033BDA30 CMP X8, X1
	0x033BDA34 B.NE 0x33BDCC4
	0x033BDA38 LDR X8, [X1 + 0xB8]
	0x033BDA3C STR X0, [X8]
	0x033BDA40 LDR X8, [X0]
	0x033BDA44 LDR X1, [X20]
	0x033BDA48 LDRB W10, [X8 + 0x130]
	0x033BDA4C LDRB W9, [X1 + 0x130]
	0x033BDA50 CMP W10, W9
	0x033BDA54 B.CC 0x33BDCC4
	0x033BDA58 LDR X8, [X8 + 0xC8]
	0x033BDA5C ADD X8, X8, X9, 0x3, LSL
	0x033BDA60 LDUR X8, [X8 - 0x8]
	0x033BDA64 CMP X8, X1
	0x033BDA68 B.EQ 0x33BDA78
	0x033BDA6C B 0x33BDCC4
	0x033BDA70 LDR X8, [X1 + 0xB8]
	0x033BDA74 STR X0, [X8]
	0x033BDA78 ADRP X8, 0xD6B000
	0x033BDA7C LDR X8, [X8 + 0x2D0]
	0x033BDA80 MOV X1, X31
	0x033BDA84 LDR X0, [X8]
	0x033BDA88 BL 0x338C698
	0x033BDA8C LDR X1, [X20]
	0x033BDA90 CBZ X0, 0x33BDAE8
	0x033BDA94 LDR X9, [X0]
	0x033BDA98 LDRB W8, [X1 + 0x130]
	0x033BDA9C LDRB W10, [X9 + 0x130]
	0x033BDAA0 CMP W10, W8
	0x033BDAA4 B.CC 0x33BDCC4
	0x033BDAA8 LDR X10, [X9 + 0xC8]
	0x033BDAAC SUB X9, X8, 0x1
	0x033BDAB0 LDR X10, [X10, X9, LSL #3]
	0x033BDAB4 CMP X10, X1
	0x033BDAB8 B.NE 0x33BDCC4
	0x033BDABC LDR X10, [X1 + 0xB8]
	0x033BDAC0 STR X0, [X10 + 0x8]
	0x033BDAC4 LDR X10, [X0]
	0x033BDAC8 LDRB W11, [X10 + 0x130]
	0x033BDACC CMP W11, W8
	0x033BDAD0 B.CC 0x33BDCC4
	0x033BDAD4 LDR X8, [X10 + 0xC8]
	0x033BDAD8 LDR X8, [X8, X9, LSL #3]
	0x033BDADC CMP X8, X1
	0x033BDAE0 B.EQ 0x33BDAF0
	0x033BDAE4 B 0x33BDCC4
	0x033BDAE8 LDR X8, [X1 + 0xB8]
	0x033BDAEC STR X0, [X8 + 0x8]
	0x033BDAF0 ADRP X8, 0xD40000
	0x033BDAF4 LDR X8, [X8 + 0x968]
	0x033BDAF8 MOV X1, X31
	0x033BDAFC LDR X0, [X8]
	0x033BDB00 BL 0x338C698
	0x033BDB04 LDR X1, [X20]
	0x033BDB08 CBZ X0, 0x33BDB60
	0x033BDB0C LDR X9, [X0]
	0x033BDB10 LDRB W8, [X1 + 0x130]
	0x033BDB14 LDRB W10, [X9 + 0x130]
	0x033BDB18 CMP W10, W8
	0x033BDB1C B.CC 0x33BDCC4
	0x033BDB20 LDR X10, [X9 + 0xC8]
	0x033BDB24 SUB X9, X8, 0x1
	0x033BDB28 LDR X10, [X10, X9, LSL #3]
	0x033BDB2C CMP X10, X1
	0x033BDB30 B.NE 0x33BDCC4
	0x033BDB34 LDR X10, [X1 + 0xB8]
	0x033BDB38 STR X0, [X10 + 0x10]
	0x033BDB3C LDR X10, [X0]
	0x033BDB40 LDRB W11, [X10 + 0x130]
	0x033BDB44 CMP W11, W8
	0x033BDB48 B.CC 0x33BDCC4
	0x033BDB4C LDR X8, [X10 + 0xC8]
	0x033BDB50 LDR X8, [X8, X9, LSL #3]
	0x033BDB54 CMP X8, X1
	0x033BDB58 B.EQ 0x33BDB68
	0x033BDB5C B 0x33BDCC4
	0x033BDB60 LDR X8, [X1 + 0xB8]
	0x033BDB64 STR X0, [X8 + 0x10]
	0x033BDB68 ADRP X8, 0xD5E000
	0x033BDB6C LDR X8, [X8 + 0xB60]
	0x033BDB70 MOV X1, X31
	0x033BDB74 LDR X0, [X8]
	0x033BDB78 BL 0x338C698
	0x033BDB7C LDR X1, [X20]
	0x033BDB80 CBZ X0, 0x33BDBD8
	0x033BDB84 LDR X9, [X0]
	0x033BDB88 LDRB W8, [X1 + 0x130]
	0x033BDB8C LDRB W10, [X9 + 0x130]
	0x033BDB90 CMP W10, W8
	0x033BDB94 B.CC 0x33BDCC4
	0x033BDB98 LDR X10, [X9 + 0xC8]
	0x033BDB9C SUB X9, X8, 0x1
	0x033BDBA0 LDR X10, [X10, X9, LSL #3]
	0x033BDBA4 CMP X10, X1
	0x033BDBA8 B.NE 0x33BDCC4
	0x033BDBAC LDR X10, [X1 + 0xB8]
	0x033BDBB0 STR X0, [X10 + 0x18]
	0x033BDBB4 LDR X10, [X0]
	0x033BDBB8 LDRB W11, [X10 + 0x130]
	0x033BDBBC CMP W11, W8
	0x033BDBC0 B.CC 0x33BDCC4
	0x033BDBC4 LDR X8, [X10 + 0xC8]
	0x033BDBC8 LDR X8, [X8, X9, LSL #3]
	0x033BDBCC CMP X8, X1
	0x033BDBD0 B.EQ 0x33BDBE0
	0x033BDBD4 B 0x33BDCC4
	0x033BDBD8 LDR X8, [X1 + 0xB8]
	0x033BDBDC STR X0, [X8 + 0x18]
	0x033BDBE0 ADRP X8, 0xD68000
	0x033BDBE4 LDR X8, [X8 + 0xC08]
	0x033BDBE8 MOV X1, X31
	0x033BDBEC LDR X0, [X8]
	0x033BDBF0 BL 0x338C698
	0x033BDBF4 LDR X1, [X20]
	0x033BDBF8 CBZ X0, 0x33BDC50
	0x033BDBFC LDR X9, [X0]
	0x033BDC00 LDRB W8, [X1 + 0x130]
	0x033BDC04 LDRB W10, [X9 + 0x130]
	0x033BDC08 CMP W10, W8
	0x033BDC0C B.CC 0x33BDCC4
	0x033BDC10 LDR X10, [X9 + 0xC8]
	0x033BDC14 SUB X9, X8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1021000
	007 Move W8, [X21+501]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {55}
	014 Move X0, 0xD38000
	015 Move X0, [X0+2520]
	016 Call 0x1C17CF4
	017 Move X0, 0xD39000
	018 Move X0, [X0+368]
	019 Call 0x1C17CF4
	020 Move X0, 0xD3A000
	021 Move X0, [X0+2424]
	022 Call 0x1C17CF4
	023 Move X0, 0xD37000
	024 Move X0, [X0+3576]
	025 Call 0x1C17CF4
	026 Move X0, 0xD3B000
	027 Move X0, [X0+1576]
	028 Call 0x1C17CF4
	029 Move X0, 0xD37000
	030 Move X0, [X0+1880]
	031 Call 0x1C17CF4
	032 Move X0, 0xD39000
	033 Move X0, [X0+2656]
	034 Call 0x1C17CF4
	035 Move X0, 0xD60000
	036 Move X0, [X0+1712]
	037 Call 0x1C17CF4
	038 Move X0, 0xD37000
	039 Move X0, [X0+2704]
	040 Call 0x1C17CF4
	041 Move X0, 0xD37000
	042 Move X0, [X0+1728]
	043 Call 0x1C17CF4
	044 Move X0, 0xD3C000
	045 Move X0, [X0+1624]
	046 Call 0x1C17CF4
	047 Move X0, 0xD3F000
	048 Move X0, [X0+1824]
	049 Call 0x1C17CF4
	050 Move X0, 0xD38000
	051 Move X0, [X0+1880]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X21+501], W8
	055 Compare X19, 0
	056 JumpIfEqual {604}
	057 Move X0, X19
	058 Move X1, X31
	059 Call "il2cpp_vm_object_is_inst", X0
	060 Compare X0, 0
	061 JumpIfEqual {604}
	062 Move X8, [X0]
	063 Move X22, 0xD37000
	064 Move X21, X0
	065 Move X9, [X8+1416]
	066 Move X1, [X8+1424]
	067 Move X22, [X22+1728]
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfNotEqual {97}
	073 Move X8, 0xD37000
	074 Move X8, [X8+3576]
	075 Move X0, [X8]
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 Move X0, X21
	081 Call Enum.GetUnderlyingType, X0
	082 Move X8, [X22]
	083 Move X21, X0
	084 Move W9, [X8+224]
	085 Compare W9, 0
	086 JumpIfNotEqual {89}
	087 Move X0, X8
	088 Call 0x1C17DFC
	089 Move X0, X21
	090 Move X1, X20
	091 Move X2, X31
	092 Call Type.op_Equality, X0, X1
	093 Move TEMP, X0
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfEqual {584}
	097 Move X0, [X22]
	098 Move W8, [X0+224]
	099 Compare W8, 0
	100 JumpIfNotEqual {102}
	101 Call 0x1C17DFC
	102 Move X0, X21
	103 Move X1, X31
	104 Call Type.GetTypeCode, X0
	105 Move W21, W0
	106 Move X0, X20
	107 Move X1, X31
	108 Call Type.GetTypeCode, X0
	109 Subtract W8, W0, 4
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move X9, -42098688
	112 Add X9, X9, 2224
	113 NotImplemented "Instruction ADR not yet implemented."
	114 Move W11, [X9]
	115 Add X10, X10, X11
	116 CallNoReturn X10
	117 NotImplemented "Instruction CMP not yet implemented."
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X8, 0xD38000
	120 Move X8, [X8+2520]
	121 Move X9, [X19]
	122 Move X1, [X8]
	123 Move X8, [X9+64]
	124 Move X9, [X1+64]
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move X0, X19
	127 Call 0x1C17E08
	128 Move X9, 0xD39000
	129 Move W8, [X0]
	130 Move X9, [X9+368]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move X8, 0xD38000
	134 Move X8, [X8+2520]
	135 Move X9, [X19]
	136 Move X1, [X8]
	137 Move X8, [X9+64]
	138 Move X9, [X1+64]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move X0, X19
	141 Call 0x1C17E08
	142 Move W8, [X0]
	143 NotImplemented "Instruction CMP not yet implemented."
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move X8, 0xD38000
	146 Move X8, [X8+2520]
	147 Move X9, [X19]
	148 Move X1, [X8]
	149 Move X8, [X9+64]
	150 Move X9, [X1+64]
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move X0, X19
	153 Call 0x1C17E08
	154 Move X9, 0xD3C000
	155 Move W8, [X0]
	156 Move X9, [X9+1624]
	157 Subtract W8, W21, 4
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Move X9, -42098688
	160 Add X9, X9, 2249
	161 NotImplemented "Instruction ADR not yet implemented."
	162 Move W11, [X9]
	163 Add X10, X10, X11
	164 CallNoReturn X10
	165 Move X8, 0xD39000
	166 Move X8, [X8+368]
	167 NotImplemented "Instruction CMP not yet implemented."
	168 NotImplemented "Instruction CMP not yet implemented."
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Move X8, 0xD38000
	171 Move X8, [X8+2520]
	172 Move X9, [X19]
	173 Move X1, [X8]
	174 Move X8, [X9+64]
	175 Move X9, [X1+64]
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Move X0, X19
	178 Call 0x1C17E08
	179 Move W8, [X0]
	180 Subtract W8, W21, 4
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Move X9, -42098688
	183 Add X9, X9, 2242
	184 NotImplemented "Instruction ADR not yet implemented."
	185 Move W11, [X9]
	186 Add X10, X10, X11
	187 CallNoReturn X10
	188 Move X8, 0xD39000
	189 Move X8, [X8+368]
	190 Subtract W8, W21, 4
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Move X9, -42098688
	193 Add X9, X9, 2235
	194 NotImplemented "Instruction ADR not yet implemented."
	195 Move W11, [X9]
	196 Add X10, X10, X11
	197 CallNoReturn X10
	198 Move X8, 0xD39000
	199 Move X8, [X8+368]
	200 Subtract W8, W21, 4
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Move X9, -42098688
	203 Add X9, X9, 2254
	204 NotImplemented "Instruction ADR not yet implemented."
	205 NotImplemented "Instruction LDRH not yet implemented."
	206 Add X10, X10, X11
	207 CallNoReturn X10
	208 Move X8, 0xD39000
	209 Move X8, [X8+368]
	210 Subtract W8, W21, 4
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Move X9, -42098688
	213 Add X9, X9, 2272
	214 NotImplemented "Instruction ADR not yet implemented."
	215 NotImplemented "Instruction LDRH not yet implemented."
	216 Add X10, X10, X11
	217 CallNoReturn X10
	218 Move X8, 0xD39000
	219 Move X8, [X8+368]
	220 Move X19, X31
	221 Move X8, 0xD60000
	222 Move X8, [X8+1712]
	223 Move X9, [X19]
	224 Move X1, [X8]
	225 Move X8, [X9+64]
	226 Move X9, [X1+64]
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Move X0, X19
	229 Call 0x1C17E08
	230 NotImplemented "Instruction INVALID not yet implemented."
	231 Move X9, 0xD3B000
	232 Move X9, [X9+1576]
	233 Move X0, [X9]
	234 NotImplemented "Instruction STRH not yet implemented."
	235 Move X8, 0xD39000
	236 Move X8, [X8+368]
	237 Move X8, 0xD3C000
	238 Move X8, [X8+1624]
	239 Move X9, [X19]
	240 Move X1, [X8]
	241 Move X8, [X9+64]
	242 Move X9, [X1+64]
	243 NotImplemented "Instruction CMP not yet implemented."
	244 Move X0, X19
	245 Call 0x1C17E08
	246 NotImplemented "Instruction LDRH not yet implemented."
	247 Move X9, 0xD3F000
	248 Move X9, [X9+1824]
	249 Move X8, 0xD38000
	250 Move X8, [X8+2520]
	251 Move X9, [X19]
	252 Move X1, [X8]
	253 Move X8, [X9+64]
	254 Move X9, [X1+64]
	255 NotImplemented "Instruction CMP not yet implemented."
	256 Move X0, X19
	257 Call 0x1C17E08
	258 Move W8, [X0]
	259 Move X8, 0xD3C000
	260 Move X8, [X8+1624]
	261 Move X9, [X19]
	262 Move X1, [X8]
	263 Move X8, [X9+64]
	264 Move X9, [X1+64]
	265 NotImplemented "Instruction CMP not yet implemented."
	266 Move X0, X19
	267 Call 0x1C17E08
	268 NotImplemented "Instruction LDRH not yet implemented."
	269 Move X8, 0xD3F000
	270 Move X8, [X8+1824]
	271 Move X9, [X19]
	272 Move X1, [X8]
	273 Move X8, [X9+64]
	274 Move X9, [X1+64]
	275 NotImplemented "Instruction CMP not yet implemented."
	276 Move X0, X19
	277 Call 0x1C17E08
	278 Move W8, [X0]
	279 Move X9, 0xD38000
	280 Move X9, [X9+1880]
	281 Move X8, 0xD60000
	282 Move X8, [X8+1712]
	283 Move X9, [X19]
	284 Move X1, [X8]
	285 Move X8, [X9+64]
	286 Move X9, [X1+64]
	287 NotImplemented "Instruction CMP not yet implemented."
	288 Move X0, X19
	289 Call 0x1C17E08
	290 NotImplemented "Instruction INVALID not yet implemented."
	291 Move X8, 0xD38000
	292 Move X8, [X8+2520]
	293 Move X9, [X19]
	294 Move X1, [X8]
	295 Move X8, [X9+64]
	296 Move X9, [X1+64]
	297 NotImplemented "Instruction CMP not yet implemented."
	298 Move X0, X19
	299 Call 0x1C17E08
	300 Move W8, [X0]
	301 Move X8, 0xD3B000
	302 Move X8, [X8+1576]
	303 Move X9, [X19]
	304 Move X1, [X8]
	305 Move X8, [X9+64]
	306 Move X9, [X1+64]
	307 NotImplemented "Instruction CMP not yet implemented."
	308 Move X0, X19
	309 Call 0x1C17E08
	310 NotImplemented "Instruction LDRSH not yet implemented."
	311 Move X8, 0xD3C000
	312 Move X8, [X8+1624]
	313 Move X9, [X19]
	314 Move X1, [X8]
	315 Move X8, [X9+64]
	316 Move X9, [X1+64]
	317 NotImplemented "Instruction CMP not yet implemented."
	318 Move X0, X19
	319 Call 0x1C17E08
	320 NotImplemented "Instruction LDRH not yet implemented."
	321 Move X9, 0xD37000
	322 Move X9, [X9+1880]
	323 Move X0, [X9]
	324 Move [X31+8], W8
	325 Move X8, 0xD60000
	326 Move X8, [X8+1712]
	327 Move X9, [X19]
	328 Move X1, [X8]
	329 Move X8, [X9+64]
	330 Move X9, [X1+64]
	331 NotImplemented "Instruction CMP not yet implemented."
	332 Move X0, X19
	333 Call 0x1C17E08
	334 NotImplemented "Instruction INVALID not yet implemented."
	335 Move X8, 0xD38000
	336 Move X8, [X8+2520]
	337 Move X9, [X19]
	338 Move X1, [X8]
	339 Move X8, [X9+64]
	340 Move X9, [X1+64]
	341 NotImplemented "Instruction CMP not yet implemented."
	342 Move X0, X19
	343 Call 0x1C17E08
	344 Move W8, [X0]
	345 Move X8, 0xD3B000
	346 Move X8, [X8+1576]
	347 Move X9, [X19]
	348 Move X1, [X8]
	349 Move X8, [X9+64]
	350 Move X9, [X1+64]
	351 NotImplemented "Instruction CMP not yet implemented."
	352 Move X0, X19
	353 Call 0x1C17E08
	354 NotImplemented "Instruction LDRSH not yet implemented."
	355 Move X8, 0xD3C000
	356 Move X8, [X8+1624]
	357 Move X9, [X19]
	358 Move X1, [X8]
	359 Move X8, [X9+64]
	360 Move X9, [X1+64]
	361 NotImplemented "Instruction CMP not yet implemented."
	362 Move X0, X19
	363 Call 0x1C17E08
	364 NotImplemented "Instruction LDRH not yet implemented."
	365 Move X8, 0xD37000
	366 Move X8, [X8+1880]
	367 Move X9, [X19]
	368 Move X1, [X8]
	369 Move X8, [X9+64]
	370 Move X9, [X1+64]
	371 NotImplemented "Instruction CMP not yet implemented."
	372 Move X0, X19
	373 Call 0x1C17E08
	374 NotImplemented "Instruction LDRSW not yet implemented."
	375 Move X8, 0xD3F000
	376 Move X8, [X8+1824]
	377 Move X9, [X19]
	378 Move X1, [X8]
	379 Move X8, [X9+64]
	380 Move X9, [X1+64]
	381 NotImplemented "Instruction CMP not yet implemented."
	382 Move X0, X19
	383 Call 0x1C17E08
	384 Move W8, [X0]
	385 Move X9, 0xD39000
	386 Move X9, [X9+2656]
	387 Move X0, [X9]
	388 Move [X31+8], X8
	389 Move X8, 0xD60000
	390 Move X8, [X8+1712]
	391 Move X9, [X19]
	392 Move X1, [X8]
	393 Move X8, [X9+64]
	394 Move X9, [X1+64]
	395 NotImplemented "Instruction CMP not yet implemented."
	396 Move X0, X19
	397 Call 0x1C17E08
	398 NotImplemented "Instruction INVALID not yet implemented."
	399 Move X8, 0xD38000
	400 Move X8, [X8+2520]
	401 Move X9, [X19]
	402 Move X1, [X8]
	403 Move X8, [X9+64]
	404 Move X9, [X1+64]
	405 NotImplemented "Instruction CMP not yet implemented."
	406 Move X0, X19
	407 Call 0x1C17E08
	408 Move V0, [X0]
	409 Move X8, 0xD3B000
	410 Move X8, [X8+1576]
	411 Move X9, [X19]
	412 Move X1, [X8]
	413 Move X8, [X9+64]
	414 Move X9, [X1+64]
	415 NotImplemented "Instruction CMP not yet implemented."
	416 Move X0, X19
	417 Call 0x1C17E08
	418 NotImplemented "Instruction LDRSH not yet implemented."
	419 Move X9, 0xD37000
	420 Move X9, [X9+2704]
	421 NotImplemented "Instruction SCVTF not yet implemented."
	422 Move X8, 0xD3C000
	423 Move X8, [X8+1624]
	424 Move X9, [X19]
	425 Move X1, [X8]
	426 Move X8, [X9+64]
	427 Move X9, [X1+64]
	428 NotImplemented "Instruction CMP not yet implemented."
	429 Move X0, X19
	430 Call 0x1C17E08
	431 Move V0, [X0]
	432 Move X8, 0xD37000
	433 Move X8, [X8+1880]
	434 Move X9, [X19]
	435 Move X1, [X8]
	436 Move X8, [X9+64]
	437 Move X9, [X1+64]
	438 NotImplemented "Instruction CMP not yet implemented."
	439 Move X0, X19
	440 Call 0x1C17E08
	441 Move X8, 0xD37000
	442 Move V0, [X0]
	443 Move X8, [X8+2704]
	444 NotImplemented "Instruction SCVTF not yet implemented."
	445 Move X8, 0xD3F000
	446 Move X8, [X8+1824]
	447 Move X9, [X19]
	448 Move X1, [X8]
	449 Move X8, [X9+64]
	450 Move X9, [X1+64]
	451 NotImplemented "Instruction CMP not yet implemented."
	452 Move X0, X19
	453 Call 0x1C17E08
	454 Move V0, [X0]
	455 Move X8, 0xD37000
	456 Move X8, [X8+2704]
	457 NotImplemented "Instruction UCVTF not yet implemented."
	458 Move X0, [X8]
	459 Move X8, 0xD39000
	460 Move X8, [X8+2656]
	461 Move X9, [X19]
	462 Move X1, [X8]
	463 Move X8, [X9+64]
	464 Move X9, [X1+64]
	465 NotImplemented "Instruction CMP not yet implemented."
	466 Move X0, X19
	467 Call 0x1C17E08
	468 Move X9, 0xD37000
	469 Move X8, [X0]
	470 Move X9, [X9+2704]
	471 NotImplemented "Instruction SCVTF not yet implemented."
	472 Move X0, [X9]
	473 Move X8, 0xD38000
	474 Move X8, [X8+1880]
	475 Move X9, [X19]
	476 Move X1, [X8]
	477 Move X8, [X9+64]
	478 Move X9, [X1+64]
	479 NotImplemented "Instruction CMP not yet implemented."
	480 Move X0, X19
	481 Call 0x1C17E08
	482 Move X8, 0xD37000
	483 Move V0, [X0]
	484 Move X8, [X8+2704]
	485 NotImplemented "Instruction UCVTF not yet implemented."
	486 Move X0, [X8]
	487 NotImplemented "Instruction INVALID not yet implemented."
	488 Move [X31+8], S0
	489 Move X8, 0xD60000
	490 Move X8, [X8+1712]
	491 Move X9, [X19]
	492 Move X1, [X8]
	493 Move X8, [X9+64]
	494 Move X9, [X1+64]
	495 NotImplemented "Instruction CMP not yet implemented."
	496 Move X0, X19
	497 Call 0x1C17E08
	498 NotImplemented "Instruction INVALID not yet implemented."
	499 Move X8, 0xD38000
	500 Move X8, [X8+2520]
	501 Move X9, [X19]
	502 Move X1, [X8]
	503 Move X8, [X9+64]
	504 Move X9, [X1+64]
	505 NotImplemented "Instruction CMP not yet implemented."
	506 Move X0, X19
	507 Call 0x1C17E08
	508 Move V0, [X0]
	509 Move X8, 0xD3B000
	510 Move X8, [X8+1576]
	511 Move X9, [X19]
	512 Move X1, [X8]
	513 Move X8, [X9+64]
	514 Move X9, [X1+64]
	515 NotImplemented "Instruction CMP not yet implemented."
	516 Move X0, X19
	517 Call 0x1C17E08
	518 NotImplemented "Instruction LDRSH not yet implemented."
	519 Move X8, 0xD3C000
	520 Move X8, [X8+1624]
	521 Move X9, [X19]
	522 Move X1, [X8]
	523 Move X8, [X9+64]
	524 Move X9, [X1+64]
	525 NotImplemented "Instruction CMP not yet implemented."
	526 Move X0, X19
	527 Call 0x1C17E08
	528 Move V0, [X0]
	529 Move X8, 0xD37000
	530 Move X8, [X8+1880]
	531 Move X9, [X19]
	532 Move X1, [X8]
	533 Move X8, [X9+64]
	534 Move X9, [X1+64]
	535 NotImplemented "Instruction CMP not yet implemented."
	536 Move X0, X19
	537 Call 0x1C17E08
	538 Move W8, [X0]
	539 Move X9, 0xD3A000
	540 Move X9, [X9+2424]
	541 NotImplemented "Instruction SCVTF not yet implemented."
	542 Move X0, [X9]
	543 Move X8, 0xD3F000
	544 Move X8, [X8+1824]
	545 Move X9, [X19]
	546 Move X1, [X8]
	547 Move X8, [X9+64]
	548 Move X9, [X1+64]
	549 NotImplemented "Instruction CMP not yet implemented."
	550 Move X0, X19
	551 Call 0x1C17E08
	552 Move V0, [X0]
	553 Move X8, 0xD39000
	554 Move X8, [X8+2656]
	555 Move X9, [X19]
	556 Move X1, [X8]
	557 Move X8, [X9+64]
	558 Move X9, [X1+64]
	559 NotImplemented "Instruction CMP not yet implemented."
	560 Move X0, X19
	561 Call 0x1C17E08
	562 Move X8, 0xD3A000
	563 Move V0, [X0]
	564 Move X8, [X8+2424]
	565 NotImplemented "Instruction SCVTF not yet implemented."
	566 Move X8, 0xD38000
	567 Move X8, [X8+1880]
	568 Move X9, [X19]
	569 Move X1, [X8]
	570 Move X8, [X9+64]
	571 Move X9, [X1+64]
	572 NotImplemented "Instruction CMP not yet implemented."
	573 Move X0, X19
	574 Call 0x1C17E08
	575 Move V0, [X0]
	576 Move X8, 0xD3A000
	577 Move X8, [X8+2424]
	578 NotImplemented "Instruction UCVTF not yet implemented."
	579 Move X0, [X8]
	580 Move [X31+8], D0
	581 Add X1, X31, 8
	582 Call 0x1C17E04
	583 Move X19, X0
	584 Move X0, X19
	585 Move X20, [X31+32]
	586 Move X19, [X31+40]
	587 Move X22, [X31+16]
	588 Move X21, [X31+24]
	589 Move X30, [X31+48]
	590 Return X0
	591 Move X8, 0xD37000
	592 Move X8, [X8+2704]
	593 Move X9, [X19]
	594 Move X1, [X8]
	595 Move X8, [X9+64]
	596 Move X9, [X1+64]
	597 NotImplemented "Instruction CMP not yet implemented."
	598 Move X0, X19
	599 Call 0x1C17E08
	600 Move X8, 0xD3A000
	601 Move V0, [X0]
	602 Move X8, [X8+2424]
	603 NotImplemented "Instruction FCVT not yet implemented."
	604 Call 0x1C17F20
	605 Move X0, X19
	606 Call 0x1C181E0

Method: System.String GetCachedName(System.TypeNameKind kind)

Disassembly:
	0x033BC480 SUB W8, W21, 0x4
	0x033BC484 CMP W8, 0x6
	0x033BC488 B.HI 0x33BC510
	0x033BC48C ADRP X9, 0xFFFFFFFFFD7DA000
	0x033BC490 ADD X9, X9, 0x8BB
	0x033BC494 ADR X10, 0x10
	0x033BC498 LDRB W11, [X9, X8, LSL]
	0x033BC49C ADD X10, X10, X11, 0x2, LSL
	0x033BC4A0 BR X10
	0x033BC4A4 ADRP X8, 0xD39000
	0x033BC4A8 LDR X8, [X8 + 0x170]
	0x033BC4AC B 0x33BC5D4
	0x033BC4B0 SUB W8, W21, 0x4
	0x033BC4B4 CMP W8, 0x8
	0x033BC4B8 B.HI 0x33BC510
	0x033BC4BC ADRP X9, 0xFFFFFFFFFD7DA000
	0x033BC4C0 ADD X9, X9, 0x8CE
	0x033BC4C4 ADR X10, 0x10
	0x033BC4C8 LDRH W11, [X9, X8, LSL #1]
	0x033BC4CC ADD X10, X10, X11, 0x2, LSL

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move X8, [X0]
	005 Move X2, [X8+360]
	006 Move X1, [X8+368]
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 CallNoReturn X2
	010 Move X0, 0xD41000
	011 Move X0, [X0+1880]
	012 Call 0x1C17D08
	013 Call 0x1C17F10
	014 Move X1, X31
	015 Move X19, X0
	016 Call NotImplementedException..ctor, X0
	017 Move X0, 0xD71000
	018 Move X0, [X0+856]
	019 Call 0x1C17D08
	020 Move X1, X0
	021 Move X0, X19
	022 Call 0x1C17DEC

Method: System.Type make_array_type(System.Int32 rank)

Disassembly:
	0x033BDC18 LDR X10, [X10, X9, LSL #3]

ISIL:
	001 Call 0x1C3DFE4
	002 Return X0

Method: System.Type MakeArrayType()

Disassembly:
	0x033BDC1C CMP X10, X1
	0x033BDC20 B.NE 0x33BDCC4

ISIL:
	001 Move W1, W31
	002 Call 0x1C3DFE4
	003 Return X0

Method: System.Type MakeArrayType(System.Int32 rank)

Disassembly:
	0x033BDC24 LDR X10, [X1 + 0xB8]
	0x033BDC28 STR X0, [X10 + 0x20]
	0x033BDC2C LDR X10, [X0]
	0x033BDC30 LDRB W11, [X10 + 0x130]
	0x033BDC34 CMP W11, W8
	0x033BDC38 B.CC 0x33BDCC4
	0x033BDC3C LDR X8, [X10 + 0xC8]
	0x033BDC40 LDR X8, [X8, X9, LSL #3]
	0x033BDC44 CMP X8, X1
	0x033BDC48 B.EQ 0x33BDC58
	0x033BDC4C B 0x33BDCC4
	0x033BDC50 LDR X8, [X1 + 0xB8]
	0x033BDC54 STR X0, [X8 + 0x20]
	0x033BDC58 ADRP X8, 0xD6F000
	0x033BDC5C LDR X8, [X8 + 0x348]
	0x033BDC60 MOV X1, X31
	0x033BDC64 LDR X0, [X8]
	0x033BDC68 BL 0x338C698

ISIL:
	001 Subtract W8, W1, 1
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Call 0x1C3DFE4
	004 Return X0
	005 Move [X31-16], X30
	006 Move [X31-8], X19
	007 Move X0, 0xD41000
	008 Move X0, [X0+3960]
	009 Call 0x1C17D08
	010 Call 0x1C17F10
	011 Move X1, X31
	012 Move X19, X0
	013 Call IndexOutOfRangeException..ctor, X0
	014 Move X0, 0xD70000
	015 Move X0, [X0+1000]
	016 Call 0x1C17D08
	017 Move X1, X0
	018 Move X0, X19
	019 Call 0x1C17DEC

Method: System.Type make_byref_type()

Disassembly:
	0x033BDC6C LDR X1, [X20]

ISIL:
	001 Call 0x1C3E03C
	002 Return X0

Method: System.Type MakeByRefType()

Disassembly:
	0x033BDC70 CBZ X0, 0x33BDCC8
	0x033BDC74 LDR X9, [X0]
	0x033BDC78 LDRB W8, [X1 + 0x130]
	0x033BDC7C LDRB W10, [X9 + 0x130]
	0x033BDC80 CMP W10, W8
	0x033BDC84 B.CC 0x33BDCC4
	0x033BDC88 LDR X10, [X9 + 0xC8]
	0x033BDC8C SUB X9, X8, 0x1
	0x033BDC90 LDR X10, [X10, X9, LSL #3]
	0x033BDC94 CMP X10, X1
	0x033BDC98 B.NE 0x33BDCC4
	0x033BDC9C LDR X10, [X1 + 0xB8]
	0x033BDCA0 STR X0, [X10 + 0x38]
	0x033BDCA4 LDR X10, [X0]
	0x033BDCA8 LDRB W11, [X10 + 0x130]
	0x033BDCAC CMP W11, W8
	0x033BDCB0 B.CC 0x33BDCC4
	0x033BDCB4 LDR X8, [X10 + 0xC8]
	0x033BDCB8 LDR X8, [X8, X9, LSL #3]
	0x033BDCBC CMP X8, X1
	0x033BDCC0 B.EQ 0x33BDCD0
	0x033BDCC4 BL 0x1C171E0
	0x033BDCC8 LDR X8, [X1 + 0xB8]
	0x033BDCCC STR X0, [X8 + 0x38]
	0x033BDCD0 LDP X20, X19, [X31 + 0x10]
	0x033BDCD4 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call Type.get_IsByRef, X0
	006 Move TEMP, X0
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfEqual {15}
	010 Move X0, X19
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 Call 0x1C3E03C
	014 Return X0
	015 Move X0, 0xD69000
	016 Move X0, [X0+1208]
	017 Call 0x1C17D08
	018 Call 0x1C17F10
	019 Move X19, X0
	020 Move X0, 0xD70000
	021 Move X0, [X0+1008]
	022 Call 0x1C17D08
	023 Move X1, X0
	024 Move X0, X19
	025 Move X2, X31
	026 Call TypeLoadException..ctor, X0, X1
	027 Move X0, 0xD70000
	028 Move X0, [X0+1016]
	029 Call 0x1C17D08
	030 Move X1, X0
	031 Move X0, X19
	032 Call 0x1C17DEC

Method: System.Type MakePointerType(System.Type type)

Disassembly:
	0x033BDCD8 RET

ISIL:
	001 Call 0x1C3E2AC
	002 Return X0

Method: System.Type MakePointerType()

Disassembly:
	0x033BDCDC STP X30, X21, [X31 - 0x20]!
	0x033BDCE0 STP X20, X19, [X31 + 0x10]
	0x033BDCE4 ADRP X20, 0x1020000
	0x033BDCE8 ADRP X21, 0xD5F000
	0x033BDCEC LDRB W8, [X20 + 0x206]
	0x033BDCF0 LDR X21, [X21 + 0x4E8]
	0x033BDCF4 MOV X19, X0
	0x033BDCF8 TBNZ X8, 0x0, 0x33BDD10
	0x033BDCFC ADRP X0, 0xD5F000
	0x033BDD00 LDR X0, [X0 + 0x4E8]
	0x033BDD04 BL 0x1C16CF4
	0x033BDD08 MOVZ W8, 0x1
	0x033BDD0C STRB W8, [X20 + 0x206]
	0x033BDD10 LDR X0, [X21]
	0x033BDD14 LDR W8, [X0 + 0xE0]
	0x033BDD18 CBNZ W8, 0x33BDD20
	0x033BDD1C BL 0x1C16DFC
	0x033BDD20 MOV X0, X19
	0x033BDD24 LDP X20, X19, [X31 + 0x10]
	0x033BDD28 MOV X1, X31
	0x033BDD2C LDP X30, X21, [X31], #0x20
	0x033BDD30 B 0x33B4D9C
	0x033BDD34 STR X30, [X31 - 0x20]!
	0x033BDD38 STP X20, X19, [X31 + 0x10]
	0x033BDD3C ADRP X0, 0xD6E000
	0x033BDD40 LDR X0, [X0 + 0xD00]
	0x033BDD44 BL 0x1C16D08
	0x033BDD48 MOV X19, X0
	0x033BDD4C ADRP X0, 0xD36000
	0x033BDD50 LDR X0, [X0 + 0x5B0]
	0x033BDD54 BL 0x1C16D08
	0x033BDD58 BL 0x1C16F10
	0x033BDD5C MOV X1, X19
	0x033BDD60 MOV X2, X31
	0x033BDD64 MOV X20, X0
	0x033BDD68 BL 0x337DF1C
	0x033BDD6C ADRP X0, 0xD6F000
	0x033BDD70 LDR X0, [X0 + 0x438]
	0x033BDD74 BL 0x1C16D08
	0x033BDD78 MOV X1, X0
	0x033BDD7C MOV X0, X20
	0x033BDD80 BL 0x1C16DEC
	0x033BDD84 RET
	0x033BDD88 RET
	0x033BDD8C RET
	0x033BDD90 STR X30, [X31 - 0x30]!
	0x033BDD94 STP X22, X21, [X31 + 0x10]
	0x033BDD98 STP X20, X19, [X31 + 0x20]
	0x033BDD9C ADRP X19, 0x1020000
	0x033BDDA0 ADRP X21, 0xD65000
	0x033BDDA4 LDRB W8, [X19 + 0x207]
	0x033BDDA8 LDR X21, [X21 + 0xB70]
	0x033BDDAC TBNZ X8, 0x0, 0x33BDDD0
	0x033BDDB0 ADRP X0, 0xD65000
	0x033BDDB4 LDR X0, [X0 + 0xB70]
	0x033BDDB8 BL 0x1C16CF4
	0x033BDDBC ADRP X0, 0xD6F000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1021000
	005 Move W8, [X20+502]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xD60000
	012 Move X0, [X0+1256]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+502], W8
	016 Move X0, X19
	017 Move X1, X31
	018 Call Type.get_IsByRef, X0
	019 Move TEMP, X0
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {36}
	023 Move X8, 0xD60000
	024 Move X8, [X8+1256]
	025 Move X0, [X8]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Call 0x1C3E2AC
	035 Return X0
	036 Move X0, X19
	037 Move X1, X31
	038 Call Type.GetType, X0
	039 Move X8, [X19]
	040 Move X20, X0
	041 Move X0, X19
	042 Move X9, [X8+728]
	043 Move X1, [X8+736]
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move X19, X0
	046 Move X0, 0xD70000
	047 Move X0, [X0+1024]
	048 Call 0x1C17D08
	049 Move X1, X20
	050 Move X2, X19
	051 Move X3, X31
	052 Call String.Format, X0, X1, X2
	053 Move X19, X0
	054 Move X0, 0xD69000
	055 Move X0, [X0+1208]
	056 Call 0x1C17D08
	057 Call 0x1C17F10
	058 Move X1, X19
	059 Move X2, X31
	060 Move X20, X0
	061 Call TypeLoadException..ctor, X0, X1
	062 Move X0, 0xD70000
	063 Move X0, [X0+1032]
	064 Call 0x1C17D08
	065 Move X1, X0
	066 Move X0, X20
	067 Call 0x1C17DEC

Method: System.Boolean get_ContainsGenericParameters()

Disassembly:
	0x033BDDC0 LDR X0, [X0 + 0x440]
	0x033BDDC4 BL 0x1C16CF4
	0x033BDDC8 MOVZ W8, 0x1
	0x033BDDCC STRB W8, [X19 + 0x207]
	0x033BDDD0 MOV X0, X31
	0x033BDDD4 STRB W31, [X31 + 0xC]
	0x033BDDD8 BL 0x32C5C58
	0x033BDDDC LDR X0, [X21]
	0x033BDDE0 LDR W8, [X0 + 0xE0]
	0x033BDDE4 CBNZ W8, 0x33BDDF0
	0x033BDDE8 BL 0x1C16DFC
	0x033BDDEC LDR X0, [X21]
	0x033BDDF0 LDR X8, [X0 + 0xB8]
	0x033BDDF4 LDR X0, [X8]
	0x033BDDF8 ADD X1, X31, 0xC
	0x033BDDFC MOV X2, X31
	0x033BDE00 BL 0x33DE64C
	0x033BDE04 LDR X0, [X21]
	0x033BDE08 LDR X8, [X0 + 0xB8]
	0x033BDE0C LDR X8, [X8]
	0x033BDE10 CBZ X8, 0x33BDECC
	0x033BDE14 LDR X9, [X8 + 0x10]
	0x033BDE18 CBZ X9, 0x33BDE48
	0x033BDE1C LDR W9, [X0 + 0xE0]
	0x033BDE20 CBNZ W9, 0x33BDE38
	0x033BDE24 BL 0x1C16DFC
	0x033BDE28 LDR X8, [X21]
	0x033BDE2C LDR X8, [X8 + 0xB8]
	0x033BDE30 LDR X8, [X8]
	0x033BDE34 CBZ X8, 0x33BDED0
	0x033BDE38 LDR X20, [X8 + 0x10]
	0x033BDE3C MOV X19, X31
	0x033BDE40 STR X31, [X8 + 0x10]
	0x033BDE44 B 0x33BDE50
	0x033BDE48 MOV X19, X31
	0x033BDE4C MOV X20, X31
	0x033BDE50 MOVZ W22, 0x3
	0x033BDE54 LDRB W8, [X31 + 0xC]
	0x033BDE58 CBZ W8, 0x33BDE80
	0x033BDE5C LDR X0, [X21]
	0x033BDE60 LDR W8, [X0 + 0xE0]
	0x033BDE64 CBNZ W8, 0x33BDE70
	0x033BDE68 BL 0x1C16DFC
	0x033BDE6C LDR X0, [X21]
	0x033BDE70 LDR X8, [X0 + 0xB8]
	0x033BDE74 MOV X1, X31
	0x033BDE78 LDR X0, [X8]
	0x033BDE7C BL 0x33E14E4
	0x033BDE80 CBNZ X19, 0x33BDEC4
	0x033BDE84 CMP W22, 0x3
	0x033BDE88 B.EQ 0x33BDE90
	0x033BDE8C CBNZ W22, 0x33BDEB0
	0x033BDE90 CBNZ X20, 0x33BDEB0
	0x033BDE94 ADRP X8, 0xD6F000
	0x033BDE98 LDR X8, [X8 + 0x440]
	0x033BDE9C LDR X0, [X8]
	0x033BDEA0 BL 0x1C16F10
	0x033BDEA4 MOV X1, X31
	0x033BDEA8 MOV X20, X0
	0x033BDEAC BL 0x324C634
	0x033BDEB0 MOV X0, X20
	0x033BDEB4 LDP X20, X19, [X31 + 0x20]
	0x033BDEB8 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X0]
	006 Move X19, X0
	007 Move X9, [X8+936]
	008 Move X1, [X8+944]
	009 NotImplemented "Instruction BLR not yet implemented."
	010 Move TEMP, X0
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfNotEqual {15}
	014 Move W0, 1
	015 Move X8, [X19]
	016 Move X0, X19
	017 Move X9, [X8+968]
	018 Move X1, [X8+976]
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move TEMP, X0
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfNotEqual {51}
	024 Move X8, [X19]
	025 Move X0, X19
	026 Move X9, [X8+1128]
	027 Move X1, [X8+1136]
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Compare X0, 0
	030 JumpIfEqual {79}
	031 Move W8, [X0+24]
	032 Move X20, X0
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W21, W31
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Add X8, X20, W21
	037 Move X0, [X8+32]
	038 Compare X0, 0
	039 JumpIfEqual {79}
	040 Move X8, [X0]
	041 Move X9, [X8+648]
	042 Move X1, [X8+656]
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {14}
	048 Move W8, [X20+24]
	049 Add W21, W21, 1
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X0, X19
	052 Move X1, X31
	053 Call Type.get_HasElementType, X0
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {73}
	058 Move X8, [X19]
	059 Move X0, X19
	060 Move X9, [X8+1064]
	061 Move X1, [X8+1072]
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Compare X0, 0
	064 JumpIfEqual {79}
	065 Move X8, [X0]
	066 Move X20, [X31+16]
	067 Move X19, [X31+24]
	068 Move X2, [X8+648]
	069 Move X1, [X8+656]
	070 Move X30, [X31+32]
	071 Move X21, [X31+40]
	072 CallNoReturn X2
	073 Move W0, W31
	074 Move X20, [X31+16]
	075 Move X19, [X31+24]
	076 Move X30, [X31+32]
	077 Move X21, [X31+40]
	078 Return X0
	079 Call 0x1C17F20
	080 Call 0x1C17F28

Method: System.Type[] GetGenericParameterConstraints()

Disassembly:
	0x033BDEBC LDR X30, [X31], #0x30
	0x033BDEC0 RET
	0x033BDEC4 MOV X0, X19
	0x033BDEC8 BL 0x1C16F18
	0x033BDECC BL 0x1C16F20
	0x033BDED0 BL 0x1C16F20
	0x033BDED4 B 0x33BDEE0
	0x033BDED8 B 0x33BDEE0
	0x033BDEDC B 0x33BDEE0
	0x033BDEE0 MOV X20, X0
	0x033BDEE4 CMP W1, 0x1
	0x033BDEE8 B.NE 0x33BDF08
	0x033BDEEC MOV X0, X20
	0x033BDEF0 BL 0x3EB1AD0
	0x033BDEF4 LDR X19, [X0]
	0x033BDEF8 BL 0x3EB1AE0
	0x033BDEFC MOV W22, W31
	0x033BDF00 MOV X20, X31
	0x033BDF04 B 0x33BDE54
	0x033BDF08 MOV X19, X31
	0x033BDF0C B 0x33BDF14
	0x033BDF10 MOV X20, X0
	0x033BDF14 LDRB W8, [X31 + 0xC]
	0x033BDF18 CBZ W8, 0x33BDF40
	0x033BDF1C LDR X0, [X21]
	0x033BDF20 LDR W8, [X0 + 0xE0]
	0x033BDF24 CBNZ W8, 0x33BDF30
	0x033BDF28 BL 0x1C16DFC
	0x033BDF2C LDR X0, [X21]
	0x033BDF30 LDR X8, [X0 + 0xB8]
	0x033BDF34 LDR X0, [X8]
	0x033BDF38 MOV X1, X31
	0x033BDF3C BL 0x33E14E4
	0x033BDF40 CBNZ X19, 0x33BDF4C
	0x033BDF44 MOV X0, X20
	0x033BDF48 BL 0x1D2C690
	0x033BDF4C MOV X0, X19
	0x033BDF50 BL 0x1C16F18
	0x033BDF54 BL 0x1990590
	0x033BDF58 SUB X31, X31, 0x30
	0x033BDF5C STP X30, X21, [X31 + 0x10]
	0x033BDF60 STP X20, X19, [X31 + 0x20]
	0x033BDF64 ADRP X19, 0x1020000
	0x033BDF68 ADRP X21, 0xD65000
	0x033BDF6C LDRB W8, [X19 + 0x208]
	0x033BDF70 LDR X21, [X21 + 0xB70]
	0x033BDF74 MOV X20, X0
	0x033BDF78 TBNZ X8, 0x0, 0x33BDF90
	0x033BDF7C ADRP X0, 0xD65000
	0x033BDF80 LDR X0, [X0 + 0xB70]
	0x033BDF84 BL 0x1C16CF4
	0x033BDF88 MOVZ W8, 0x1
	0x033BDF8C STRB W8, [X19 + 0x208]
	0x033BDF90 MOV X0, X31
	0x033BDF94 STRB W31, [X31 + 0xC]
	0x033BDF98 BL 0x32C5C58
	0x033BDF9C LDR X0, [X21]
	0x033BDFA0 LDR W8, [X0 + 0xE0]
	0x033BDFA4 CBNZ W8, 0x33BDFB0
	0x033BDFA8 BL 0x1C16DFC
	0x033BDFAC LDR X0, [X21]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1021000
	005 Move W8, [X20+503]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xD70000
	012 Move X0, [X0+1040]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+503], W8
	016 Move [X31+8], X31
	017 Move X8, [X19]
	018 Move X0, X19
	019 Move X9, [X8+936]
	020 Move X1, [X8+944]
	021 NotImplemented "Instruction BLR not yet implemented."
	022 Move TEMP, X0
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfNotEqual {52}
	026 Move X0, X19
	027 Move X1, X31
	028 Call RuntimeTypeHandle.GetGenericParameterInfo, X0
	029 Move X1, X0
	030 Add X0, X31, 8
	031 Move X2, X31
	032 Call RuntimeGenericParamInfoHandle..ctor, X0, X1
	033 Add X0, X31, 8
	034 Move X1, X31
	035 Call RuntimeGenericParamInfoHandle.get_Constraints, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {48}
	038 Move X19, 0xD70000
	039 Move X19, [X19+1040]
	040 Move X0, [X19]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {46}
	044 Call 0x1C17DFC
	045 Move X0, [X19]
	046 Move X8, [X0+184]
	047 Move X0, [X8]
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Return X0
	052 Move X0, 0xD69000
	053 Move X0, [X0+3776]
	054 Call 0x1C17D08
	055 Move X1, X31
	056 Call Environment.GetResourceString, X0
	057 Move X19, X0
	058 Move X0, 0xD37000
	059 Move X0, [X0+1456]
	060 Call 0x1C17D08
	061 Call 0x1C17F10
	062 Move X1, X19
	063 Move X2, X31
	064 Move X20, X0
	065 Call InvalidOperationException..ctor, X0, X1
	066 Move X0, 0xD70000
	067 Move X0, [X0+1048]
	068 Call 0x1C17D08
	069 Move X1, X0
	070 Move X0, X20
	071 Call 0x1C17DEC

Method: System.Object CreateInstanceForAnotherGenericParameter(System.Type genericType, System.RuntimeType genericArgument)

Disassembly:
	0x033BDFB0 LDR X8, [X0 + 0xB8]
	0x033BDFB4 LDR X0, [X8]
	0x033BDFB8 ADD X1, X31, 0xC
	0x033BDFBC MOV X2, X31
	0x033BDFC0 BL 0x33DE64C
	0x033BDFC4 LDR X8, [X21]
	0x033BDFC8 LDR X8, [X8 + 0xB8]
	0x033BDFCC LDR X8, [X8]
	0x033BDFD0 CBZ X8, 0x33BE02C
	0x033BDFD4 LDR X9, [X20]
	0x033BDFD8 MOV X19, X31
	0x033BDFDC STR X9, [X8 + 0x10]
	0x033BDFE0 STR X31, [X20]
	0x033BDFE4 LDRB W8, [X31 + 0xC]
	0x033BDFE8 CBZ W8, 0x33BE010
	0x033BDFEC LDR X0, [X21]
	0x033BDFF0 LDR W8, [X0 + 0xE0]
	0x033BDFF4 CBNZ W8, 0x33BE000
	0x033BDFF8 BL 0x1C16DFC
	0x033BDFFC LDR X0, [X21]
	0x033BE000 LDR X8, [X0 + 0xB8]
	0x033BE004 MOV X1, X31
	0x033BE008 LDR X0, [X8]
	0x033BE00C BL 0x33E14E4
	0x033BE010 CBNZ X19, 0x33BE024
	0x033BE014 LDP X20, X19, [X31 + 0x20]
	0x033BE018 LDP X30, X21, [X31 + 0x10]
	0x033BE01C ADD X31, X31, 0x30
	0x033BE020 RET
	0x033BE024 MOV X0, X19
	0x033BE028 BL 0x1C16F18
	0x033BE02C BL 0x1C16F20
	0x033BE030 B 0x33BE038
	0x033BE034 B 0x33BE038
	0x033BE038 MOV X20, X0
	0x033BE03C CMP W1, 0x1
	0x033BE040 B.NE 0x33BE058
	0x033BE044 MOV X0, X20
	0x033BE048 BL 0x3EB1AD0
	0x033BE04C LDR X19, [X0]
	0x033BE050 BL 0x3EB1AE0
	0x033BE054 B 0x33BDFE4
	0x033BE058 MOV X19, X31
	0x033BE05C B 0x33BE064
	0x033BE060 MOV X20, X0
	0x033BE064 LDRB W8, [X31 + 0xC]
	0x033BE068 CBZ W8, 0x33BE090
	0x033BE06C LDR X0, [X21]
	0x033BE070 LDR W8, [X0 + 0xE0]
	0x033BE074 CBNZ W8, 0x33BE080
	0x033BE078 BL 0x1C16DFC
	0x033BE07C LDR X0, [X21]
	0x033BE080 LDR X8, [X0 + 0xB8]
	0x033BE084 LDR X0, [X8]
	0x033BE088 MOV X1, X31
	0x033BE08C BL 0x33E14E4
	0x033BE090 CBNZ X19, 0x33BE09C
	0x033BE094 MOV X0, X20
	0x033BE098 BL 0x1D2C690
	0x033BE09C MOV X0, X19
	0x033BE0A0 BL 0x1C16F18
	0x033BE0A4 BL 0x1990590
	0x033BE0A8 STR X30, [X31 - 0x20]!
	0x033BE0AC STP X20, X19, [X31 + 0x10]
	0x033BE0B0 ADRP X20, 0x101F000
	0x033BE0B4 ADRP X19, 0xD64000
	0x033BE0B8 LDRB W8, [X20 + 0x209]
	0x033BE0BC LDR X19, [X19 + 0xB70]
	0x033BE0C0 TBNZ X8, 0x0, 0x33BE0D8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1021000
	007 Move X22, 0xD3F000
	008 Move W8, [X21+504]
	009 Move X22, [X22+3168]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xD60000
	017 Move X0, [X0+1256]
	018 Call 0x1C17CF4
	019 Move X0, 0xD3F000
	020 Move X0, [X0+3168]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+504], W8
	024 Move X0, [X22]
	025 Move W1, 1
	026 Call 0x1C17D6C
	027 Compare X0, 0
	028 JumpIfEqual {77}
	029 Move X21, X0
	030 Compare X20, 0
	031 JumpIfEqual {38}
	032 Move X8, [X21]
	033 Move X0, X20
	034 Move X1, [X8+64]
	035 Call 0x1C17E00
	036 Compare X0, 0
	037 JumpIfEqual {80}
	038 Move W8, [X21+24]
	039 Compare W8, 0
	040 JumpIfEqual {79}
	041 Move X22, 0xD5F000
	042 Move X22, [X22+1256]
	043 Move [X21+32], X20
	044 Move X0, [X22]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Move X0, X19
	050 Move X1, X21
	051 Call 0x1C3E058
	052 Compare X0, 0
	053 JumpIfEqual {77}
	054 Move X8, [X0]
	055 Move X1, [X22]
	056 Move W10, [X8+304]
	057 Move W9, [X1+304]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X8, [X8+200]
	060 Add X8, X8, X9
	061 NotImplemented "Instruction LDUR not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Call RuntimeType.GetDefaultConstructor, X0
	064 Compare X0, 0
	065 JumpIfEqual {77}
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X22, [X31+16]
	069 Move X21, [X31+24]
	070 Move W3, 1
	071 Move X1, X31
	072 Move X2, X31
	073 Move X4, X31
	074 Move X30, [X31+48]
	075 Call RuntimeConstructorInfo.InternalInvoke, X0, X1, X2, X3
	076 Return X0
	077 Call 0x1C17F20
	078 Call 0x1C181E0
	079 Call 0x1C17F28
	080 Call 0x1C17F44
	081 Move X1, X31
	082 Call 0x1C17DEC

Method: System.Type MakeGenericType(System.Type gt, System.Type[] types)

Disassembly:
	0x033BAAE0 MOV X20, X0

ISIL:
	001 Call 0x1C3E058
	002 Return X0

Method: System.IntPtr GetMethodsByName_native(System.IntPtr namePtr, System.Reflection.BindingFlags bindingAttr, System.RuntimeType/MemberListType listType)

Disassembly:
	0x033BE0C4 ADRP X0, 0xD64000

ISIL:
	001 Call 0x1C3C734
	002 Return X0

Method: System.Reflection.RuntimeMethodInfo[] GetMethodsByName(System.String name, System.Reflection.BindingFlags bindingAttr, System.RuntimeType/MemberListType listType, System.RuntimeType reflectedType)

Disassembly:
	0x033B6038 B 0x33B6080
	0x033B603C B 0x33B6044
	0x033B6040 B 0x33B6044
	0x033B6044 MOV X22, X0
	0x033B6048 CMP W1, 0x1
	0x033B604C B.NE 0x33B6068
	0x033B6050 MOV X0, X22
	0x033B6054 BL 0x3EB1AD0
	0x033B6058 LDR X21, [X0]
	0x033B605C BL 0x3EB1AE0
	0x033B6060 MOV X19, X31
	0x033B6064 B 0x33B5FD0
	0x033B6068 MOV X20, X1
	0x033B606C MOV X21, X31
	0x033B6070 ADD X0, X31, 0x0
	0x033B6074 MOV X1, X31
	0x033B6078 BL 0x320B1C0
	0x033B607C CBNZ X21, 0x33B60BC
	0x033B6080 MOV X19, X31
	0x033B6084 CMP W20, 0x1
	0x033B6088 B.NE 0x33B60B4
	0x033B608C MOV X0, X22
	0x033B6090 BL 0x3EB1AD0
	0x033B6094 LDR X20, [X0]
	0x033B6098 BL 0x3EB1AE0
	0x033B609C ADD X0, X31, 0x8
	0x033B60A0 MOV X1, X31
	0x033B60A4 BL 0x320B264
	0x033B60A8 CBZ X20, 0x33B5FEC
	0x033B60AC MOV X0, X20
	0x033B60B0 BL 0x1C16F18
	0x033B60B4 MOV X20, X31
	0x033B60B8 B 0x33B60D4
	0x033B60BC MOV X0, X21
	0x033B60C0 BL 0x1C16F18
	0x033B60C4 MOV X20, X1
	0x033B60C8 MOV X22, X0
	0x033B60CC B 0x33B6070
	0x033B60D0 MOV X22, X0
	0x033B60D4 ADD X0, X31, 0x8
	0x033B60D8 MOV X1, X31
	0x033B60DC BL 0x320B264
	0x033B60E0 CBNZ X20, 0x33B60EC
	0x033B60E4 MOV X0, X22
	0x033B60E8 BL 0x1D2C690
	0x033B60EC MOV X0, X20
	0x033B60F0 BL 0x1C16F18
	0x033B60F4 BL 0x1990590
	0x033B60F8 SUB X31, X31, 0xA0
	0x033B60FC STP X29, X30, [X31 + 0x40]
	0x033B6100 STP X28, X27, [X31 + 0x50]
	0x033B6104 STP X26, X25, [X31 + 0x60]
	0x033B6108 STP X24, X23, [X31 + 0x70]
	0x033B610C STP X22, X21, [X31 + 0x80]
	0x033B6110 STP X20, X19, [X31 + 0x90]
	0x033B6114 STR X8, [X31 + 0x8]
	0x033B6118 ADRP X19, 0x1027000
	0x033B611C STR X1, [X31 + 0x38]
	0x033B6120 ADRP X24, 0xD66000
	0x033B6124 LDRB W8, [X19 + 0x1CC]
	0x033B6128 LDR X24, [X24 + 0x4E8]
	0x033B612C MOV W20, W3
	0x033B6130 MOV W22, W2
	0x033B6134 MOV X21, X0
	0x033B6138 TBNZ X8, 0x0, 0x33B6168
	0x033B613C ADRP X0, 0xD76000
	0x033B6140 LDR X0, [X0 + 0xD8]
	0x033B6144 BL 0x1C16CF4
	0x033B6148 ADRP X0, 0xD76000
	0x033B614C LDR X0, [X0 + 0xE0]
	0x033B6150 BL 0x1C16CF4
	0x033B6154 ADRP X0, 0xD66000
	0x033B6158 LDR X0, [X0 + 0x4E8]
	0x033B615C BL 0x1C16CF4
	0x033B6160 MOVZ W8, 0x1
	0x033B6164 STRB W8, [X19 + 0x1CC]
	0x033B6168 LDR X0, [X24]
	0x033B616C STRB W31, [X31 + 0x34]
	0x033B6170 STRB W31, [X31 + 0x30]
	0x033B6174 STR W31, [X31 + 0x2C]
	0x033B6178 STP X31, X31, [X31 + 0x10]
	0x033B617C STR X31, [X31 + 0x20]
	0x033B6180 LDR W8, [X0 + 0xE0]
	0x033B6184 CBNZ W8, 0x33B618C
	0x033B6188 BL 0x1C16DFC
	0x033B618C AND W2, W20, 0x1
	0x033B6190 ADD X1, X31, 0x38
	0x033B6194 ADD X3, X31, 0x34
	0x033B6198 ADD X4, X31, 0x30
	0x033B619C ADD X5, X31, 0x2C
	0x033B61A0 MOV W0, W22
	0x033B61A4 BL 0x33B4524
	0x033B61A8 LDR X20, [X31 + 0x38]
	0x033B61AC LDR W3, [X31 + 0x2C]
	0x033B61B0 MOV X0, X21
	0x033B61B4 MOV W2, W22
	0x033B61B8 MOV X1, X20
	0x033B61BC MOV X4, X21
	0x033B61C0 BL 0x33B62CC
	0x033B61C4 CBZ X0, 0x33B62C8
	0x033B61C8 ADRP X8, 0xD76000
	0x033B61CC LDR X8, [X8 + 0xE0]
	0x033B61D0 LDR W1, [X0 + 0x18]
	0x033B61D4 MOV X21, X0
	0x033B61D8 ADD X0, X31, 0x10
	0x033B61DC LDR X2, [X8]
	0x033B61E0 BL 0x2EF1B28
	0x033B61E4 LDR W8, [X21 + 0x18]
	0x033B61E8 CMP W8, 0x1
	0x033B61EC B.LT 0x33B6290
	0x033B61F0 ADRP X28, 0xD76000
	0x033B61F4 LDRB W26, [X31 + 0x34]
	0x033B61F8 LDRB W27, [X31 + 0x30]
	0x033B61FC LDR X28, [X28 + 0xD8]
	0x033B6200 MOV X25, X31
	0x033B6204 EOR W29, W22, 0x2
	0x033B6208 ADD X19, X21, 0x20
	0x033B620C CMP W25, W8
	0x033B6210 B.CS 0x33B62C4
	0x033B6214 LDR X22, [X19, X25, LSL #3]
	0x033B6218 CBZ X22, 0x33B62C8
	0x033B621C MOV X0, X22
	0x033B6220 MOV X1, X31
	0x033B6224 BL 0x32D9A10
	0x033B6228 MOV W23, W0
	0x033B622C MOV X0, X22
	0x033B6230 MOV X1, X31
	0x033B6234 BL 0x32D9A10
	0x033B6238 AND W8, W23, W29, 0x0
	0x033B623C CMP W8, W0
	0x033B6240 B.NE 0x33B6280
	0x033B6244 CBZ W26, 0x33B6270
	0x033B6248 LDR X0, [X24]
	0x033B624C LDR W8, [X0 + 0xE0]
	0x033B6250 CBNZ W8, 0x33B6258
	0x033B6254 BL 0x1C16DFC
	0x033B6258 CMP W27, 0x0
	0x033B625C CSET W2, NE
	0x033B6260 MOV X0, X22
	0x033B6264 MOV X1, X20
	0x033B6268 BL 0x33B46D0
	0x033B626C TBZ X0, 0x0, 0x33B6280
	0x033B6270 LDR X2, [X28]
	0x033B6274 ADD X0, X31, 0x10
	0x033B6278 MOV X1, X22
	0x033B627C BL 0x2EF1D14
	0x033B6280 LDR W8, [X21 + 0x18]
	0x033B6284 ADD X25, X25, 0x1
	0x033B6288 CMP W25, W8
	0x033B628C B.LT 0x33B620C
	0x033B6290 LDR X8, [X31 + 0x20]
	0x033B6294 LDR V0, [X31 + 0x1]
	0x033B6298 LDR X9, [X31 + 0x8]
	0x033B629C LDP X20, X19, [X31 + 0x90]
	0x033B62A0 LDP X22, X21, [X31 + 0x80]
	0x033B62A4 LDP X24, X23, [X31 + 0x70]
	0x033B62A8 LDP X26, X25, [X31 + 0x60]
	0x033B62AC LDP X28, X27, [X31 + 0x50]
	0x033B62B0 LDP X29, X30, [X31 + 0x40]
	0x033B62B4 STR X8, [X9 + 0x10]
	0x033B62B8 STR V0, [X9]
	0x033B62BC ADD X31, X31, 0xA0
	0x033B62C0 RET
	0x033B62C4 BL 0x1C16F28
	0x033B62C8 BL 0x1C16F20
	0x033B62CC SUB X31, X31, 0x60
	0x033B62D0 STR X30, [X31 + 0x20]
	0x033B62D4 STP X24, X23, [X31 + 0x30]
	0x033B62D8 STP X22, X21, [X31 + 0x40]
	0x033B62DC STP X20, X19, [X31 + 0x50]
	0x033B62E0 ADRP X24, 0x1027000
	0x033B62E4 LDRB W8, [X24 + 0x1FD]
	0x033B62E8 MOV X23, X4
	0x033B62EC MOV W19, W3
	0x033B62F0 MOV W20, W2
	0x033B62F4 MOV X22, X1
	0x033B62F8 MOV X21, X0
	0x033B62FC TBNZ X8, 0x0, 0x33B6320
	0x033B6300 ADRP X0, 0xD76000
	0x033B6304 LDR X0, [X0 + 0xE8]
	0x033B6308 BL 0x1C16CF4
	0x033B630C ADRP X0, 0xD6E000
	0x033B6310 LDR X0, [X0 + 0xBB0]
	0x033B6314 BL 0x1C16CF4
	0x033B6318 MOVZ W8, 0x1
	0x033B631C STRB W8, [X24 + 0x1FD]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X24, 0x1028000
	010 Move W8, [X24+505]
	011 Move X23, X4
	012 Move W19, W3
	013 Move W20, W2
	014 Move X22, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0xD77000
	021 Move X0, [X0+128]
	022 Call 0x1C17CF4
	023 Move X0, 0xD6F000
	024 Move X0, [X0+2464]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+505], W8
	028 Add X0, X31, 40
	029 Move X1, X23
	030 Move X2, X31
	031 Move [X31+40], X31
	032 Move [X31+16], X31
	033 Move [X31+24], X31
	034 Move [X31+8], X31
	035 Call RuntimeTypeHandle..ctor, X0, X1
	036 Add X0, X31, 16
	037 Move X1, X22
	038 Move X2, X31
	039 Call SafeStringMarshal..ctor, X0, X1
	040 Add X0, X31, 16
	041 Move X1, X31
	042 Call SafeStringMarshal.get_Value, X0
	043 Move X1, X0
	044 Move X0, X21
	045 Move W2, W20
	046 Move W3, W19
	047 Call 0x1C3C734
	048 Move X1, X0
	049 Add X0, X31, 8
	050 Move X2, X31
	051 Call SafeGPtrArrayHandle..ctor, X0, X1
	052 Add X0, X31, 8
	053 Move X1, X31
	054 Call SafeGPtrArrayHandle.get_Length, X0
	055 Move X8, 0xD77000
	056 Move X8, [X8+128]
	057 Move W21, W0
	058 Move X0, [X8]
	059 Move W1, W21
	060 Call 0x1C17D6C
	061 Move X19, X0
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X22, 0xD6F000
	064 Move X22, [X22+2464]
	065 Move X20, X31
	066 Move W23, W21
	067 Add X24, X19, 32
	068 Add X0, X31, 8
	069 Move W1, W20
	070 Move X2, X31
	071 Call SafeGPtrArrayHandle.get_Item, X0, X1
	072 Move X1, [X31+40]
	073 Move X2, X31
	074 Call RuntimeMethodInfo.GetMethodFromHandleNoGenericCheck, X0, X1
	075 Compare X19, 0
	076 JumpIfEqual {132}
	077 Move X21, X0
	078 Compare X0, 0
	079 JumpIfEqual {104}
	080 Move X8, [X21]
	081 Move X1, [X22]
	082 Move W10, [X8+304]
	083 Move W9, [X1+304]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X8, [X8+200]
	086 Add X8, X8, X9
	087 NotImplemented "Instruction LDUR not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X8, [X19]
	090 Move X1, [X8+64]
	091 Move X0, X21
	092 Call 0x1C17E00
	093 Compare X0, 0
	094 JumpIfEqual {134}
	095 Move X8, [X21]
	096 Move X1, [X22]
	097 Move W10, [X8+304]
	098 Move W9, [X1+304]
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X8, [X8+200]
	101 Add X8, X8, X9
	102 NotImplemented "Instruction LDUR not yet implemented."
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move W8, [X19+24]
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move [X24], X21
	107 Add X20, X20, 1
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X22, X31
	110 Add X0, X31, 8
	111 Move X1, X31
	112 Call SafeGPtrArrayHandle.Dispose, X0
	113 Compare X22, 0
	114 JumpIfNotEqual {137}
	115 Add X0, X31, 16
	116 Move X1, X31
	117 Call SafeStringMarshal.Dispose, X0
	118 Move X0, X19
	119 Move X20, [X31+80]
	120 Move X19, [X31+88]
	121 Move X22, [X31+64]
	122 Move X21, [X31+72]
	123 Move X24, [X31+48]
	124 Move X23, [X31+56]
	125 Move X30, [X31+32]
	126 Add X31, X31, 96
	127 Return X0
	128 Move X0, X21
	129 Call 0x1C181E0
	130 Move X0, X21
	131 Call 0x1C181E0
	132 Call 0x1C17F20
	133 Call 0x1C17F28
	134 Call 0x1C17F44
	135 Move X1, X31
	136 Call 0x1C17DEC
	137 Move X0, X22
	138 Call 0x1C17F18
	139 Move X21, X1
	140 Move X20, X0
	141 Move X21, X1
	142 Move X20, X0
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Call 0x3EB2AD0
	145 Move X22, [X0]
	146 Call 0x3EB2AE0
	147 Move X19, X31
	148 Move X21, X1
	149 Move X20, X0
	150 Move X22, X31
	151 Add X0, X31, 8
	152 Move X1, X31
	153 Call SafeGPtrArrayHandle.Dispose, X0
	154 Compare X22, 0
	155 JumpIfNotEqual {170}
	156 Move X19, X31
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Move X0, X20
	159 Call 0x3EB2AD0
	160 Move X21, [X0]
	161 Call 0x3EB2AE0
	162 Add X0, X31, 16
	163 Move X1, X31
	164 Call SafeStringMarshal.Dispose, X0
	165 Compare X21, 0
	166 JumpIfEqual {118}
	167 Move X0, X21
	168 Call 0x1C17F18
	169 Move X21, X31
	170 Move X0, X22
	171 Call 0x1C17F18
	172 Move X21, X1
	173 Move X20, X0
	174 Move X20, X0
	175 Add X0, X31, 16
	176 Move X1, X31
	177 Call SafeStringMarshal.Dispose, X0
	178 Compare X21, 0
	179 JumpIfNotEqual {182}
	180 Move X0, X20
	181 Call 0x1D2D690
	182 Move X0, X21
	183 Call 0x1C17F18
	184 Call 0x1991590

Method: System.IntPtr GetPropertiesByName_native(System.IntPtr name, System.Reflection.BindingFlags bindingAttr, System.RuntimeType/MemberListType listType)

Disassembly:
	0x033BE0C8 LDR X0, [X0 + 0xB70]

ISIL:
	001 Call 0x1C3D430
	002 Return X0

Method: System.IntPtr GetConstructors_native(System.Reflection.BindingFlags bindingAttr)

Disassembly:
	0x033BE0CC BL 0x1C16CF4

ISIL:
	001 Call 0x1C3B0CC
	002 Return X0

Method: System.Reflection.RuntimeConstructorInfo[] GetConstructors_internal(System.Reflection.BindingFlags bindingAttr, System.RuntimeType reflectedType)

Disassembly:
	0x033B659C CBNZ X21, 0x33B65A8
	0x033B65A0 MOV X0, X20
	0x033B65A4 BL 0x1D2C690
	0x033B65A8 MOV X0, X21
	0x033B65AC BL 0x1C16F18
	0x033B65B0 BL 0x1990590
	0x033B65B4 SUB X31, X31, 0xA0
	0x033B65B8 STP X29, X30, [X31 + 0x40]
	0x033B65BC STP X28, X27, [X31 + 0x50]
	0x033B65C0 STP X26, X25, [X31 + 0x60]
	0x033B65C4 STP X24, X23, [X31 + 0x70]
	0x033B65C8 STP X22, X21, [X31 + 0x80]
	0x033B65CC STP X20, X19, [X31 + 0x90]
	0x033B65D0 ADRP X24, 0x1027000
	0x033B65D4 ADRP X25, 0xD66000
	0x033B65D8 MOV X19, X8
	0x033B65DC LDRB W8, [X24 + 0x1CD]
	0x033B65E0 LDR X25, [X25 + 0x4E8]
	0x033B65E4 MOV W21, W3
	0x033B65E8 MOV W20, W2
	0x033B65EC MOV X23, X1
	0x033B65F0 MOV X22, X0
	0x033B65F4 TBNZ X8, 0x0, 0x33B6624
	0x033B65F8 ADRP X0, 0xD76000
	0x033B65FC LDR X0, [X0 + 0xF0]
	0x033B6600 BL 0x1C16CF4
	0x033B6604 ADRP X0, 0xD76000
	0x033B6608 LDR X0, [X0 + 0xF8]
	0x033B660C BL 0x1C16CF4
	0x033B6610 ADRP X0, 0xD66000
	0x033B6614 LDR X0, [X0 + 0x4E8]
	0x033B6618 BL 0x1C16CF4
	0x033B661C MOVZ W8, 0x1
	0x033B6620 STRB W8, [X24 + 0x1CD]
	0x033B6624 LDR X0, [X25]
	0x033B6628 STRB W31, [X31 + 0x3C]
	0x033B662C STRB W31, [X31 + 0x38]
	0x033B6630 STP X31, X31, [X31 + 0x28]
	0x033B6634 STR W31, [X31 + 0x24]
	0x033B6638 STP X31, X31, [X31 + 0x8]
	0x033B663C STR X31, [X31 + 0x18]
	0x033B6640 LDR W8, [X0 + 0xE0]
	0x033B6644 AND W20, W20, 0xFFFFFFF7
	0x033B6648 CBNZ W8, 0x33B6650
	0x033B664C BL 0x1C16DFC
	0x033B6650 ADD X1, X31, 0x30
	0x033B6654 ADD X2, X31, 0x28
	0x033B6658 MOV X0, X23
	0x033B665C BL 0x33B4404
	0x033B6660 AND W2, W21, 0x1
	0x033B6664 ADD X1, X31, 0x30
	0x033B6668 ADD X3, X31, 0x3C
	0x033B666C ADD X4, X31, 0x38
	0x033B6670 ADD X5, X31, 0x24
	0x033B6674 MOV W0, W20
	0x033B6678 BL 0x33B4524
	0x033B667C LDR X21, [X31 + 0x30]
	0x033B6680 LDR W3, [X31 + 0x24]
	0x033B6684 MOV X0, X22
	0x033B6688 MOV W2, W20
	0x033B668C MOV X1, X21
	0x033B6690 BL 0x33B6770
	0x033B6694 CBZ X0, 0x33B676C
	0x033B6698 ADRP X8, 0xD76000
	0x033B669C LDR X8, [X8 + 0xF8]
	0x033B66A0 LDR W1, [X0 + 0x18]
	0x033B66A4 MOV X22, X0
	0x033B66A8 ADD X0, X31, 0x8
	0x033B66AC LDR X2, [X8]
	0x033B66B0 BL 0x2EF1B28
	0x033B66B4 LDR X8, [X22 + 0x18]
	0x033B66B8 CMP W8, 0x1
	0x033B66BC B.LT 0x33B6738
	0x033B66C0 ADRP X28, 0xD76000
	0x033B66C4 LDRB W27, [X31 + 0x3C]
	0x033B66C8 LDR X23, [X31 + 0x28]
	0x033B66CC LDR X28, [X28 + 0xF0]
	0x033B66D0 MOV X26, X31
	0x033B66D4 AND X8, X8, 0x0
	0x033B66D8 ADD X29, X22, 0x20
	0x033B66DC CMP X26, W8, UXTW
	0x033B66E0 B.CS 0x33B6768
	0x033B66E4 LDR X0, [X25]
	0x033B66E8 LDR X24, [X29, X26, LSL #3]
	0x033B66EC LDR W8, [X0 + 0xE0]
	0x033B66F0 CBNZ W8, 0x33B66F8
	0x033B66F4 BL 0x1C16DFC
	0x033B66F8 CMP W27, 0x0
	0x033B66FC CSET W3, NE
	0x033B6700 MOV X0, X24
	0x033B6704 MOV W1, W20
	0x033B6708 MOV X2, X21
	0x033B670C MOV X4, X23
	0x033B6710 BL 0x33B491C
	0x033B6714 TBZ X0, 0x0, 0x33B6728
	0x033B6718 LDR X2, [X28]
	0x033B671C ADD X0, X31, 0x8
	0x033B6720 MOV X1, X24
	0x033B6724 BL 0x2EF1D14
	0x033B6728 LDR W8, [X22 + 0x18]
	0x033B672C ADD X26, X26, 0x1
	0x033B6730 CMP X26, W8, SXTW
	0x033B6734 B.LT 0x33B66DC
	0x033B6738 LDR X8, [X31 + 0x18]
	0x033B673C LDUR V0, [X31 + 0x8]
	0x033B6740 LDP X22, X21, [X31 + 0x80]
	0x033B6744 LDP X24, X23, [X31 + 0x70]
	0x033B6748 STR X8, [X19 + 0x10]
	0x033B674C STR V0, [X19]
	0x033B6750 LDP X20, X19, [X31 + 0x90]
	0x033B6754 LDP X26, X25, [X31 + 0x60]
	0x033B6758 LDP X28, X27, [X31 + 0x50]
	0x033B675C LDP X29, X30, [X31 + 0x40]
	0x033B6760 ADD X31, X31, 0xA0
	0x033B6764 RET
	0x033B6768 BL 0x1C16F28
	0x033B676C BL 0x1C16F20
	0x033B6770 SUB X31, X31, 0x60
	0x033B6774 STP X30, X25, [X31 + 0x20]
	0x033B6778 STP X24, X23, [X31 + 0x30]
	0x033B677C STP X22, X21, [X31 + 0x40]
	0x033B6780 STP X20, X19, [X31 + 0x50]
	0x033B6784 ADRP X23, 0x1027000
	0x033B6788 LDRB W8, [X23 + 0x1FF]
	0x033B678C MOV W19, W3
	0x033B6790 MOV W20, W2
	0x033B6794 MOV X22, X1
	0x033B6798 MOV X21, X0
	0x033B679C TBNZ X8, 0x0, 0x33B67D8
	0x033B67A0 ADRP X0, 0xD6E000
	0x033B67A4 LDR X0, [X0 + 0xBD0]
	0x033B67A8 BL 0x1C16CF4
	0x033B67AC ADRP X0, 0xD66000
	0x033B67B0 LDR X0, [X0 + 0x4E8]
	0x033B67B4 BL 0x1C16CF4
	0x033B67B8 ADRP X0, 0xD76000
	0x033B67BC LDR X0, [X0 + 0x100]
	0x033B67C0 BL 0x1C16CF4
	0x033B67C4 ADRP X0, 0xD3D000
	0x033B67C8 LDR X0, [X0 + 0x6C0]
	0x033B67CC BL 0x1C16CF4
	0x033B67D0 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X22, 0x1028000
	010 Move W8, [X22+506]
	011 Move X21, X2
	012 Move W19, W1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xD77000
	019 Move X0, [X0+152]
	020 Call 0x1C17CF4
	021 Move X0, 0xD71000
	022 Move X0, [X0+472]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+506], W8
	026 Add X0, X31, 24
	027 Move X1, X21
	028 Move X2, X31
	029 Move [X31+24], X31
	030 Move [X31+8], X31
	031 Call RuntimeTypeHandle..ctor, X0, X1
	032 Move X0, X20
	033 Move W1, W19
	034 Call 0x1C3B0CC
	035 Move X1, X0
	036 Add X0, X31, 8
	037 Move X2, X31
	038 Call SafeGPtrArrayHandle..ctor, X0, X1
	039 Add X0, X31, 8
	040 Move X1, X31
	041 Call SafeGPtrArrayHandle.get_Length, X0
	042 Move X8, 0xD77000
	043 Move X8, [X8+152]
	044 Move W21, W0
	045 Move X0, [X8]
	046 Move W1, W21
	047 Call 0x1C17D6C
	048 Move X19, X0
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X22, 0xD71000
	051 Move X22, [X22+472]
	052 Move X20, X31
	053 Move W23, W21
	054 Add X24, X19, 32
	055 Add X0, X31, 8
	056 Move W1, W20
	057 Move X2, X31
	058 Call SafeGPtrArrayHandle.get_Item, X0, X1
	059 Move X1, [X31+24]
	060 Move X2, X31
	061 Call RuntimeMethodInfo.GetMethodFromHandleNoGenericCheck, X0, X1
	062 Compare X19, 0
	063 JumpIfEqual {113}
	064 Move X21, X0
	065 Compare X0, 0
	066 JumpIfEqual {91}
	067 Move X8, [X21]
	068 Move X1, [X22]
	069 Move W10, [X8+304]
	070 Move W9, [X1+304]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X8, [X8+200]
	073 Add X8, X8, X9
	074 NotImplemented "Instruction LDUR not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X8, [X19]
	077 Move X1, [X8+64]
	078 Move X0, X21
	079 Call 0x1C17E00
	080 Compare X0, 0
	081 JumpIfEqual {115}
	082 Move X8, [X21]
	083 Move X1, [X22]
	084 Move W10, [X8+304]
	085 Move W9, [X1+304]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X8, [X8+200]
	088 Add X8, X8, X9
	089 NotImplemented "Instruction LDUR not yet implemented."
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move W8, [X19+24]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move [X24], X21
	094 Add X20, X20, 1
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Add X0, X31, 8
	097 Move X1, X31
	098 Call SafeGPtrArrayHandle.Dispose, X0
	099 Move X0, X19
	100 Move X20, [X31+64]
	101 Move X19, [X31+72]
	102 Move X22, [X31+48]
	103 Move X21, [X31+56]
	104 Move X24, [X31+32]
	105 Move X23, [X31+40]
	106 Move X30, [X31+16]
	107 Add X31, X31, 80
	108 Return X0
	109 Move X0, X21
	110 Call 0x1C181E0
	111 Move X0, X21
	112 Call 0x1C181E0
	113 Call 0x1C17F20
	114 Call 0x1C17F28
	115 Call 0x1C17F44
	116 Move X1, X31
	117 Call 0x1C17DEC
	118 Move X19, X0
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move X0, X19
	121 Call 0x3EB2AD0
	122 Move X20, [X0]
	123 Call 0x3EB2AE0
	124 Add X0, X31, 8
	125 Move X1, X31
	126 Call SafeGPtrArrayHandle.Dispose, X0
	127 Move X19, X31
	128 Compare X20, 0
	129 JumpIfEqual {99}
	130 Move X0, X20
	131 Call 0x1C17F18
	132 Move X20, X31
	133 Move X19, X0
	134 Add X0, X31, 8
	135 Move X1, X31
	136 Call SafeGPtrArrayHandle.Dispose, X0
	137 Compare X20, 0
	138 JumpIfNotEqual {141}
	139 Move X0, X19
	140 Call 0x1D2D690
	141 Move X0, X20
	142 Call 0x1C17F18
	143 Call 0x1991590

Method: System.Reflection.RuntimePropertyInfo[] GetPropertiesByName(System.String name, System.Reflection.BindingFlags bindingAttr, System.RuntimeType/MemberListType listType, System.RuntimeType reflectedType)

Disassembly:
	0x033B69E0 LDP X30, X25, [X31 + 0x20]
	0x033B69E4 ADD X31, X31, 0x60
	0x033B69E8 RET
	0x033B69EC MOV X0, X21
	0x033B69F0 BL 0x1C171E0
	0x033B69F4 MOV X0, X21
	0x033B69F8 BL 0x1C171E0
	0x033B69FC BL 0x1C16F20
	0x033B6A00 BL 0x1C16F28
	0x033B6A04 BL 0x1C16F44
	0x033B6A08 MOV X1, X31
	0x033B6A0C BL 0x1C16DEC
	0x033B6A10 MOV X0, X22
	0x033B6A14 BL 0x1C16F18
	0x033B6A18 BL 0x1C16F20
	0x033B6A1C B 0x33B6A4C
	0x033B6A20 B 0x33B6A4C
	0x033B6A24 B 0x33B6A34
	0x033B6A28 MOV X20, X1
	0x033B6A2C MOV X21, X0
	0x033B6A30 B 0x33B6A88
	0x033B6A34 MOV X20, X1
	0x033B6A38 MOV X21, X0
	0x033B6A3C B 0x33B6A84
	0x033B6A40 B 0x33B6A4C
	0x033B6A44 B 0x33B6A4C
	0x033B6A48 B 0x33B6A4C
	0x033B6A4C MOV X20, X1
	0x033B6A50 CMP W20, 0x1
	0x033B6A54 B.NE 0x33B6A6C
	0x033B6A58 BL 0x3EB1AD0
	0x033B6A5C LDR X22, [X0]
	0x033B6A60 BL 0x3EB1AE0
	0x033B6A64 MOV X19, X31
	0x033B6A68 B 0x33B69B4
	0x033B6A6C MOV X21, X0
	0x033B6A70 MOV X22, X31
	0x033B6A74 ADD X0, X31, 0x8
	0x033B6A78 MOV X1, X31
	0x033B6A7C BL 0x320B1C0
	0x033B6A80 CBNZ X22, 0x33B6AC0
	0x033B6A84 MOV X19, X31
	0x033B6A88 CMP W20, 0x1
	0x033B6A8C B.NE 0x33B6AB8
	0x033B6A90 MOV X0, X21
	0x033B6A94 BL 0x3EB1AD0
	0x033B6A98 LDR X20, [X0]
	0x033B6A9C BL 0x3EB1AE0
	0x033B6AA0 ADD X0, X31, 0x10
	0x033B6AA4 MOV X1, X31
	0x033B6AA8 BL 0x320B264
	0x033B6AAC CBZ X20, 0x33B69D0
	0x033B6AB0 MOV X0, X20
	0x033B6AB4 BL 0x1C16F18
	0x033B6AB8 MOV X20, X31
	0x033B6ABC B 0x33B6AD8
	0x033B6AC0 MOV X0, X22
	0x033B6AC4 BL 0x1C16F18
	0x033B6AC8 MOV X20, X1
	0x033B6ACC MOV X21, X0
	0x033B6AD0 B 0x33B6A74
	0x033B6AD4 MOV X21, X0
	0x033B6AD8 ADD X0, X31, 0x10
	0x033B6ADC MOV X1, X31
	0x033B6AE0 BL 0x320B264
	0x033B6AE4 CBNZ X20, 0x33B6AF0
	0x033B6AE8 MOV X0, X21
	0x033B6AEC BL 0x1D2C690
	0x033B6AF0 MOV X0, X20
	0x033B6AF4 BL 0x1C16F18
	0x033B6AF8 BL 0x1990590
	0x033B6AFC SUB X31, X31, 0x50
	0x033B6B00 STR X30, [X31 + 0x20]
	0x033B6B04 STP X22, X21, [X31 + 0x30]
	0x033B6B08 STP X20, X19, [X31 + 0x40]
	0x033B6B0C ADRP X22, 0x1027000
	0x033B6B10 ADRP X21, 0xD76000
	0x033B6B14 LDRB W8, [X22 + 0x1CE]
	0x033B6B18 LDR X21, [X21 + 0x108]
	0x033B6B1C MOV W19, W1
	0x033B6B20 MOV X20, X0
	0x033B6B24 TBNZ X8, 0x0, 0x33B6B3C
	0x033B6B28 ADRP X0, 0xD76000
	0x033B6B2C LDR X0, [X0 + 0x108]
	0x033B6B30 BL 0x1C16CF4
	0x033B6B34 MOVZ W8, 0x1
	0x033B6B38 STRB W8, [X22 + 0x1CE]
	0x033B6B3C ADD X8, X31, 0x8
	0x033B6B40 MOVZ W3, 0x3
	0x033B6B44 MOVN W5, 0x0
	0x033B6B48 MOV X0, X20
	0x033B6B4C MOV X1, X31
	0x033B6B50 MOV W2, W19
	0x033B6B54 MOV X4, X31
	0x033B6B58 MOV W6, W31
	0x033B6B5C STP X31, X31, [X31 + 0x8]
	0x033B6B60 STR X31, [X31 + 0x18]
	0x033B6B64 BL 0x33B4DDC
	0x033B6B68 LDR X1, [X21]
	0x033B6B6C ADD X0, X31, 0x8
	0x033B6B70 BL 0x2EF1B6C
	0x033B6B74 LDP X20, X19, [X31 + 0x40]
	0x033B6B78 LDP X22, X21, [X31 + 0x30]
	0x033B6B7C LDR X30, [X31 + 0x20]
	0x033B6B80 ADD X31, X31, 0x50
	0x033B6B84 RET
	0x033B6B88 SUB X31, X31, 0x70
	0x033B6B8C STR X30, [X31 + 0x40]
	0x033B6B90 STP X22, X21, [X31 + 0x50]
	0x033B6B94 STP X20, X19, [X31 + 0x60]
	0x033B6B98 ADRP X22, 0x1027000
	0x033B6B9C ADRP X21, 0xD76000
	0x033B6BA0 LDRB W8, [X22 + 0x1CF]
	0x033B6BA4 LDR X21, [X21 + 0x110]
	0x033B6BA8 MOV W19, W1
	0x033B6BAC MOV X20, X0
	0x033B6BB0 TBNZ X8, 0x0, 0x33B6BC8
	0x033B6BB4 ADRP X0, 0xD76000
	0x033B6BB8 LDR X0, [X0 + 0x110]
	0x033B6BBC BL 0x1C16CF4
	0x033B6BC0 MOVZ W8, 0x1
	0x033B6BC4 STRB W8, [X22 + 0x1CF]
	0x033B6BC8 ADD X8, X31, 0x8
	0x033B6BCC MOVZ W3, 0x3
	0x033B6BD0 MOV X0, X20
	0x033B6BD4 MOV X1, X31
	0x033B6BD8 MOV W2, W19
	0x033B6BDC MOV X4, X31
	0x033B6BE0 MOV W5, W31
	0x033B6BE4 STP X31, X31, [X31 + 0x20]
	0x033B6BE8 STR X31, [X31 + 0x30]
	0x033B6BEC BL 0x33B5320
	0x033B6BF0 LDUR V0, [X31 + 0x8]
	0x033B6BF4 LDR X8, [X31 + 0x18]
	0x033B6BF8 LDR X1, [X21]
	0x033B6BFC ADD X0, X31, 0x20
	0x033B6C00 STR V0, [X31 + 0x2]
	0x033B6C04 STR X8, [X31 + 0x30]
	0x033B6C08 BL 0x2EF1B6C
	0x033B6C0C LDP X20, X19, [X31 + 0x60]
	0x033B6C10 LDP X22, X21, [X31 + 0x50]
	0x033B6C14 LDR X30, [X31 + 0x40]
	0x033B6C18 ADD X31, X31, 0x70
	0x033B6C1C RET
	0x033B6C20 SUB X31, X31, 0x50
	0x033B6C24 STR X30, [X31 + 0x20]
	0x033B6C28 STP X22, X21, [X31 + 0x30]
	0x033B6C2C STP X20, X19, [X31 + 0x40]
	0x033B6C30 ADRP X22, 0x1027000
	0x033B6C34 ADRP X21, 0xD76000
	0x033B6C38 LDRB W8, [X22 + 0x1D0]
	0x033B6C3C LDR X21, [X21 + 0x118]
	0x033B6C40 MOV W19, W1
	0x033B6C44 MOV X20, X0
	0x033B6C48 TBNZ X8, 0x0, 0x33B6C60
	0x033B6C4C ADRP X0, 0xD76000
	0x033B6C50 LDR X0, [X0 + 0x118]
	0x033B6C54 BL 0x1C16CF4
	0x033B6C58 MOVZ W8, 0x1
	0x033B6C5C STRB W8, [X22 + 0x1D0]
	0x033B6C60 ADD X8, X31, 0x8
	0x033B6C64 MOV X0, X20
	0x033B6C68 MOV X1, X31
	0x033B6C6C MOV W2, W19
	0x033B6C70 MOV X3, X31
	0x033B6C74 MOV W4, W31
	0x033B6C78 STP X31, X31, [X31 + 0x8]
	0x033B6C7C STR X31, [X31 + 0x18]
	0x033B6C80 BL 0x33B57D4
	0x033B6C84 LDR X1, [X21]
	0x033B6C88 ADD X0, X31, 0x8
	0x033B6C8C BL 0x2EF1B6C
	0x033B6C90 LDP X20, X19, [X31 + 0x40]
	0x033B6C94 LDP X22, X21, [X31 + 0x30]
	0x033B6C98 LDR X30, [X31 + 0x20]
	0x033B6C9C ADD X31, X31, 0x50
	0x033B6CA0 RET
	0x033B6CA4 SUB X31, X31, 0x50
	0x033B6CA8 STR X30, [X31 + 0x20]
	0x033B6CAC STP X22, X21, [X31 + 0x30]
	0x033B6CB0 STP X20, X19, [X31 + 0x40]
	0x033B6CB4 ADRP X22, 0x1027000
	0x033B6CB8 ADRP X21, 0xD76000
	0x033B6CBC LDRB W8, [X22 + 0x1D1]
	0x033B6CC0 LDR X21, [X21 + 0x120]
	0x033B6CC4 MOV W19, W1

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X24, 0x1028000
	010 Move W8, [X24+507]
	011 Move X23, X4
	012 Move W19, W3
	013 Move W20, W2
	014 Move X22, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0xD77000
	021 Move X0, [X0+176]
	022 Call 0x1C17CF4
	023 Move X0, 0xD71000
	024 Move X0, [X0+480]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+507], W8
	028 Add X0, X31, 40
	029 Move X1, X23
	030 Move X2, X31
	031 Move [X31+40], X31
	032 Move [X31+16], X31
	033 Move [X31+24], X31
	034 Move [X31+8], X31
	035 Call RuntimeTypeHandle..ctor, X0, X1
	036 Add X0, X31, 16
	037 Move X1, X22
	038 Move X2, X31
	039 Call SafeStringMarshal..ctor, X0, X1
	040 Add X0, X31, 16
	041 Move X1, X31
	042 Call SafeStringMarshal.get_Value, X0
	043 Move X1, X0
	044 Move X0, X21
	045 Move W2, W20
	046 Move W3, W19
	047 Call 0x1C3D430
	048 Move X1, X0
	049 Add X0, X31, 8
	050 Move X2, X31
	051 Call SafeGPtrArrayHandle..ctor, X0, X1
	052 Add X0, X31, 8
	053 Move X1, X31
	054 Call SafeGPtrArrayHandle.get_Length, X0
	055 Move X8, 0xD77000
	056 Move X8, [X8+176]
	057 Move W21, W0
	058 Move X0, [X8]
	059 Move W1, W21
	060 Call 0x1C17D6C
	061 Move X19, X0
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X22, 0xD71000
	064 Move X22, [X22+480]
	065 Move X20, X31
	066 Move W23, W21
	067 Add X24, X19, 32
	068 Add X0, X31, 8
	069 Move W1, W20
	070 Move X2, X31
	071 Call SafeGPtrArrayHandle.get_Item, X0, X1
	072 Move X1, [X31+40]
	073 Move X2, X31
	074 Call RuntimePropertyInfo.GetPropertyFromHandle, X0, X1
	075 Compare X19, 0
	076 JumpIfEqual {132}
	077 Move X21, X0
	078 Compare X0, 0
	079 JumpIfEqual {104}
	080 Move X8, [X21]
	081 Move X1, [X22]
	082 Move W10, [X8+304]
	083 Move W9, [X1+304]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X8, [X8+200]
	086 Add X8, X8, X9
	087 NotImplemented "Instruction LDUR not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X8, [X19]
	090 Move X1, [X8+64]
	091 Move X0, X21
	092 Call 0x1C17E00
	093 Compare X0, 0
	094 JumpIfEqual {134}
	095 Move X8, [X21]
	096 Move X1, [X22]
	097 Move W10, [X8+304]
	098 Move W9, [X1+304]
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X8, [X8+200]
	101 Add X8, X8, X9
	102 NotImplemented "Instruction LDUR not yet implemented."
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move W8, [X19+24]
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move [X24], X21
	107 Add X20, X20, 1
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X22, X31
	110 Add X0, X31, 8
	111 Move X1, X31
	112 Call SafeGPtrArrayHandle.Dispose, X0
	113 Compare X22, 0
	114 JumpIfNotEqual {137}
	115 Add X0, X31, 16
	116 Move X1, X31
	117 Call SafeStringMarshal.Dispose, X0
	118 Move X0, X19
	119 Move X20, [X31+80]
	120 Move X19, [X31+88]
	121 Move X22, [X31+64]
	122 Move X21, [X31+72]
	123 Move X24, [X31+48]
	124 Move X23, [X31+56]
	125 Move X30, [X31+32]
	126 Add X31, X31, 96
	127 Return X0
	128 Move X0, X21
	129 Call 0x1C181E0
	130 Move X0, X21
	131 Call 0x1C181E0
	132 Call 0x1C17F20
	133 Call 0x1C17F28
	134 Call 0x1C17F44
	135 Move X1, X31
	136 Call 0x1C17DEC
	137 Move X0, X22
	138 Call 0x1C17F18
	139 Move X21, X1
	140 Move X20, X0
	141 Move X21, X1
	142 Move X20, X0
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Call 0x3EB2AD0
	145 Move X22, [X0]
	146 Call 0x3EB2AE0
	147 Move X19, X31
	148 Move X21, X1
	149 Move X20, X0
	150 Move X22, X31
	151 Add X0, X31, 8
	152 Move X1, X31
	153 Call SafeGPtrArrayHandle.Dispose, X0
	154 Compare X22, 0
	155 JumpIfNotEqual {170}
	156 Move X19, X31
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Move X0, X20
	159 Call 0x3EB2AD0
	160 Move X21, [X0]
	161 Call 0x3EB2AE0
	162 Add X0, X31, 16
	163 Move X1, X31
	164 Call SafeStringMarshal.Dispose, X0
	165 Compare X21, 0
	166 JumpIfEqual {118}
	167 Move X0, X21
	168 Call 0x1C17F18
	169 Move X21, X31
	170 Move X0, X22
	171 Call 0x1C17F18
	172 Move X21, X1
	173 Move X20, X0
	174 Move X20, X0
	175 Add X0, X31, 16
	176 Move X1, X31
	177 Call SafeStringMarshal.Dispose, X0
	178 Compare X21, 0
	179 JumpIfNotEqual {182}
	180 Move X0, X20
	181 Call 0x1D2D690
	182 Move X0, X21
	183 Call 0x1C17F18
	184 Call 0x1991590

Method: System.TypeCode GetTypeCodeImpl()

Disassembly:
	0x033BE0D0 MOVZ W8, 0x1
	0x033BE0D4 STRB W8, [X20 + 0x209]
	0x033BE0D8 LDR X0, [X19]
	0x033BE0DC BL 0x1C16F10
	0x033BE0E0 LDR X8, [X19]
	0x033BE0E4 LDP X20, X19, [X31 + 0x10]
	0x033BE0E8 LDR X8, [X8 + 0xB8]
	0x033BE0EC STR X0, [X8]
	0x033BE0F0 LDR X30, [X31], #0x20
	0x033BE0F4 RET
	0x033BE0F8 SUB X31, X31, 0x80
	0x033BE0FC STP X29, X30, [X31 + 0x20]
	0x033BE100 STP X28, X27, [X31 + 0x30]
	0x033BE104 STP X26, X25, [X31 + 0x40]
	0x033BE108 STP X24, X23, [X31 + 0x50]
	0x033BE10C STP X22, X21, [X31 + 0x60]
	0x033BE110 STP X20, X19, [X31 + 0x70]
	0x033BE114 ADRP X19, 0x101F000
	0x033BE118 LDRB W9, [X19 + 0x20A]
	0x033BE11C MOV X21, X1
	0x033BE120 MOV X20, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1020000
	006 Move X21, 0xD5F000
	007 Move W8, [X20+508]
	008 Move X21, [X21+1256]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD5F000
	015 Move X0, [X0+1256]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+508], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call 0x1C3E420
	030 Return X0

Method: System.TypeCode GetTypeCodeImplInternal(System.Type type)

Disassembly:
	0x033BE124 MOV X24, X8

ISIL:
	001 Call 0x1C3E420
	002 Return X0

Method: System.String ToString()

Disassembly:
	0x033BE128 TBNZ X9, 0x0, 0x33BE158
	0x033BE12C ADRP X0, 0xD6E000
	0x033BE130 LDR X0, [X0 + 0x448]

ISIL:
	001 Move W1, W31
	002 Move W2, W31
	003 Call 0x1C3D9D0
	004 Return X0

Method: System.Boolean IsGenericCOMObjectImpl()

Disassembly:
	0x033BC738 LDR X8, [X8 + 0x9D8]
	0x033BC73C LDR X9, [X19]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Object CreateInstanceInternal(System.Type type)

Disassembly:
	0x033BCDB8 MOV X0, X20

ISIL:
	001 Call 0x1C3D884
	002 Return X0

Method: System.Reflection.MethodBase get_DeclaringMethod()

Disassembly:
	0x033BE140 BL 0x1C16CF4

ISIL:
	001 Call 0x1C3D8CC
	002 Return X0

Method: System.String getFullName(System.Boolean full_name, System.Boolean assembly_qualified)

Disassembly:
	0x033BE134 BL 0x1C16CF4
	0x033BE138 ADRP X0, 0xD66000
	0x033BE13C LDR X0, [X0 + 0xBB0]

ISIL:
	001 And W1, W1, 1
	002 And W2, W2, 1
	003 Call 0x1C3D9D0
	004 Return X0

Method: System.Type[] GetGenericArgumentsInternal(System.Boolean runtimeArray)

Disassembly:
	0x033BA568 TBNZ X0, 0x0, 0x33BA6EC
	0x033BA56C LDR X0, [X23]

ISIL:
	001 And W1, W1, 1
	002 Call 0x1C3E2C4
	003 Return X0

Method: System.Reflection.GenericParameterAttributes GetGenericParameterAttributes()

Disassembly:
	0x033B99B8 MOV X2, X31
	0x033B99BC BL 0x330E100
	0x033B99C0 B 0x33B9978
	0x033B99C4 ADRP X0, 0xD3A000
	0x033B99C8 LDR X0, [X0 + 0x9D0]
	0x033B99CC BL 0x1C16D08
	0x033B99D0 MOVZ W1, 0x1
	0x033B99D4 BL 0x1C16D6C
	0x033B99D8 MOV X20, X0
	0x033B99DC BL 0x19903C0
	0x033B99E0 MOV X0, X20
	0x033B99E4 MOV X1, X19
	0x033B99E8 BL 0x19980B4
	0x033B99EC MOV X0, X20
	0x033B99F0 MOV X1, X31
	0x033B99F4 MOV X2, X19
	0x033B99F8 BL 0x1993444

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X31
	004 Move X1, X31
	005 Call RuntimeTypeHandle.GetGenericParameterInfo, X0
	006 Move X1, X0
	007 Add X0, X31, 8
	008 Move X2, X31
	009 Move [X31+8], X31
	010 Call RuntimeGenericParamInfoHandle..ctor, X0, X1
	011 Move X8, [X31+8]
	012 Add X0, X31, 24
	013 Move X1, X31
	014 Move [X31+24], X8
	015 Call RuntimeGenericParamInfoHandle.get_Attributes, X0
	016 Move X30, [X31+16]
	017 Add X31, X31, 32
	018 Return X0

Method: System.Int32 GetGenericParameterPosition()

Disassembly:
	0x033BAB74 ADRP X0, 0xD71000

ISIL:
	001 Call 0x1C3B054
	002 Return X0

Method: System.IntPtr GetEvents_native(System.IntPtr name, System.RuntimeType/MemberListType listType)

Disassembly:
	0x033BE144 ADRP X0, 0xD5E000

ISIL:
	001 Call 0x1C3B228
	002 Return X0

Method: System.IntPtr GetFields_native(System.IntPtr name, System.Reflection.BindingFlags bindingAttr, System.RuntimeType/MemberListType listType)

Disassembly:
	0x033BE148 LDR X0, [X0 + 0x4E8]

ISIL:
	001 Call 0x1C3BA10
	002 Return X0

Method: System.Reflection.RuntimeFieldInfo[] GetFields_internal(System.String name, System.Reflection.BindingFlags bindingAttr, System.RuntimeType/MemberListType listType, System.RuntimeType reflectedType)

Disassembly:
	0x033B72CC CBZ X24, 0x33B7454
	0x033B72D0 ADD X8, X31, 0x8
	0x033B72D4 MOV X0, X25
	0x033B72D8 MOV X1, X24
	0x033B72DC MOV W2, W22
	0x033B72E0 MOV X3, X20
	0x033B72E4 MOV W4, W31
	0x033B72E8 BL 0x33B57D4
	0x033B72EC LDR W8, [X31 + 0x18]
	0x033B72F0 CBZ W8, 0x33B735C
	0x033B72F4 CBZ X20, 0x33B7300
	0x033B72F8 LDR X9, [X20 + 0x18]
	0x033B72FC CBNZ X9, 0x33B7368
	0x033B7300 CMP W8, 0x1
	0x033B7304 B.NE 0x33B7364
	0x033B7308 ADRP X8, 0xD75000
	0x033B730C LDR X8, [X8 + 0x190]
	0x033B7310 ADD X0, X31, 0x8
	0x033B7314 MOV W1, W31
	0x033B7318 LDR X2, [X8]
	0x033B731C BL 0x2EF1B34
	0x033B7320 MOV X20, X0
	0x033B7324 CBZ X19, 0x33B7434
	0x033B7328 CBZ X20, 0x33B74D8
	0x033B732C LDR X8, [X20]
	0x033B7330 MOV X0, X20
	0x033B7334 LDR X9, [X8 + 0x248]
	0x033B7338 LDR X1, [X8 + 0x250]
	0x033B733C BLR X9
	0x033B7340 LDR X8, [X19]
	0x033B7344 MOV X1, X0
	0x033B7348 MOV X0, X19
	0x033B734C LDR X9, [X8 + 0x878]
	0x033B7350 LDR X2, [X8 + 0x880]
	0x033B7354 BLR X9
	0x033B7358 TBNZ X0, 0x0, 0x33B7434
	0x033B735C MOV X20, X31
	0x033B7360 B 0x33B7434
	0x033B7364 CBZ X19, 0x33B7488
	0x033B7368 TBNZ X22, 0x10, 0x33B7388
	0x033B736C CBZ X23, 0x33B73D0
	0x033B7370 ADRP X8, 0xD75000
	0x033B7374 LDR X8, [X8 + 0x118]
	0x033B7378 ADD X0, X31, 0x8
	0x033B737C LDR X1, [X8]
	0x033B7380 BL 0x2EF1B6C
	0x033B7384 B 0x33B740C
	0x033B7388 ADRP X8, 0xD75000
	0x033B738C LDR X8, [X8 + 0x118]
	0x033B7390 ADD X0, X31, 0x8
	0x033B7394 LDR X1, [X8]
	0x033B7398 BL 0x2EF1B6C
	0x033B739C ADRP X8, 0xD74000
	0x033B73A0 LDR X8, [X8 + 0x538]
	0x033B73A4 MOV X21, X0
	0x033B73A8 LDR X8, [X8]
	0x033B73AC LDR W9, [X8 + 0xE0]
	0x033B73B0 CBNZ W9, 0x33B73BC
	0x033B73B4 MOV X0, X8
	0x033B73B8 BL 0x1C16DFC
	0x033B73BC MOV X0, X21
	0x033B73C0 MOV X1, X19
	0x033B73C4 MOV X2, X20
	0x033B73C8 BL 0x33AD4F8
	0x033B73CC B 0x33B7430
	0x033B73D0 ADRP X8, 0xD3C000
	0x033B73D4 LDR X8, [X8 + 0x6C0]
	0x033B73D8 LDR X0, [X8]
	0x033B73DC LDR W8, [X0 + 0xE0]
	0x033B73E0 CBNZ W8, 0x33B73E8
	0x033B73E4 BL 0x1C16DFC
	0x033B73E8 MOV X0, X31
	0x033B73EC BL 0x33981F8
	0x033B73F0 ADRP X8, 0xD75000
	0x033B73F4 LDR X8, [X8 + 0x118]
	0x033B73F8 MOV X23, X0
	0x033B73FC ADD X0, X31, 0x8
	0x033B7400 LDR X1, [X8]
	0x033B7404 BL 0x2EF1B6C
	0x033B7408 CBZ X23, 0x33B74D8
	0x033B740C LDR X8, [X23]
	0x033B7410 MOV X2, X0
	0x033B7414 MOV X0, X23
	0x033B7418 MOV W1, W22
	0x033B741C LDP X9, X6, [X8 + 0x1C8]
	0x033B7420 MOV X3, X19
	0x033B7424 MOV X4, X20
	0x033B7428 MOV X5, X21
	0x033B742C BLR X9
	0x033B7430 MOV X20, X0
	0x033B7434 MOV X0, X20
	0x033B7438 LDP X20, X19, [X31 + 0x60]
	0x033B743C LDP X22, X21, [X31 + 0x50]
	0x033B7440 LDP X24, X23, [X31 + 0x40]
	0x033B7444 LDP X26, X25, [X31 + 0x30]
	0x033B7448 LDR X30, [X31 + 0x20]
	0x033B744C ADD X31, X31, 0x70
	0x033B7450 RET
	0x033B7454 ADRP X0, 0xD41000
	0x033B7458 LDR X0, [X0 + 0x528]
	0x033B745C BL 0x1C16D08
	0x033B7460 BL 0x1C16F10
	0x033B7464 MOV X1, X31
	0x033B7468 MOV X19, X0
	0x033B746C BL 0x3315F20
	0x033B7470 ADRP X0, 0xD75000
	0x033B7474 LDR X0, [X0 + 0x198]
	0x033B7478 BL 0x1C16D08
	0x033B747C MOV X1, X0
	0x033B7480 MOV X0, X19
	0x033B7484 BL 0x1C16DEC
	0x033B7488 ADRP X0, 0xD6E000
	0x033B748C LDR X0, [X0 + 0xBE0]
	0x033B7490 BL 0x1C16D08
	0x033B7494 MOV X1, X31
	0x033B7498 BL 0x33BDD84
	0x033B749C MOV X19, X0
	0x033B74A0 ADRP X0, 0xD6E000
	0x033B74A4 LDR X0, [X0 + 0x7A0]
	0x033B74A8 BL 0x1C16D08
	0x033B74AC BL 0x1C16F10
	0x033B74B0 MOV X1, X19
	0x033B74B4 MOV X2, X31
	0x033B74B8 MOV X20, X0
	0x033B74BC BL 0x32CC544
	0x033B74C0 ADRP X0, 0xD75000
	0x033B74C4 LDR X0, [X0 + 0x198]
	0x033B74C8 BL 0x1C16D08
	0x033B74CC MOV X1, X0
	0x033B74D0 MOV X0, X20
	0x033B74D4 BL 0x1C16DEC
	0x033B74D8 BL 0x1C16F20
	0x033B74DC SUB X31, X31, 0x50
	0x033B74E0 STP X30, X1, [X31 + 0x10]
	0x033B74E4 STP X24, X23, [X31 + 0x20]
	0x033B74E8 STP X22, X21, [X31 + 0x30]
	0x033B74EC STP X20, X19, [X31 + 0x40]
	0x033B74F0 ADRP X22, 0x1026000
	0x033B74F4 LDRB W8, [X22 + 0x1D5]
	0x033B74F8 MOV W21, W2
	0x033B74FC MOV X20, X1
	0x033B7500 MOV X19, X0
	0x033B7504 TBNZ X8, 0x0, 0x33B751C
	0x033B7508 ADRP X0, 0xD65000
	0x033B750C LDR X0, [X0 + 0x4E8]
	0x033B7510 BL 0x1C16CF4
	0x033B7514 MOVZ W8, 0x1
	0x033B7518 STRB W8, [X22 + 0x1D5]
	0x033B751C STRB W31, [X31 + 0xC]
	0x033B7520 STR W31, [X31 + 0x8]
	0x033B7524 CBZ X20, 0x33B7668
	0x033B7528 ADRP X8, 0xD65000
	0x033B752C LDR X8, [X8 + 0x4E8]
	0x033B7530 LDR X0, [X8]
	0x033B7534 LDR W8, [X0 + 0xE0]
	0x033B7538 CBNZ W8, 0x33B7540
	0x033B753C BL 0x1C16DFC
	0x033B7540 ADD X1, X31, 0x18
	0x033B7544 ADD X2, X31, 0xC
	0x033B7548 ADD X3, X31, 0x8
	0x033B754C MOV W0, W21
	0x033B7550 BL 0x33B4644
	0x033B7554 LDR X1, [X31 + 0x18]
	0x033B7558 LDR W3, [X31 + 0x8]
	0x033B755C MOV X0, X19
	0x033B7560 MOV X4, X19
	0x033B7564 BL 0x33B5E98
	0x033B7568 CBZ X0, 0x33B7610
	0x033B756C LDR W8, [X0 + 0x18]
	0x033B7570 MOV X19, X0
	0x033B7574 CMP W8, 0x1
	0x033B7578 B.LT 0x33B75F0
	0x033B757C MOV W23, W31
	0x033B7580 MOV X20, X31
	0x033B7584 EOR W24, W21, 0x2
	0x033B7588 CMP W23, W8
	0x033B758C B.CS 0x33B7614
	0x033B7590 ADD X8, X19, W23, 0x3, SXTW
	0x033B7594 LDR X21, [X8 + 0x20]
	0x033B7598 CBZ X21, 0x33B7610
	0x033B759C MOV X0, X21
	0x033B75A0 MOV X1, X31
	0x033B75A4 BL 0x32D9320
	0x033B75A8 MOV W22, W0
	0x033B75AC MOV X0, X21
	0x033B75B0 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X24, 0x1027000
	010 Move W8, [X24+509]
	011 Move X23, X4
	012 Move W19, W3
	013 Move W20, W2
	014 Move X22, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0xD76000
	021 Move X0, [X0+232]
	022 Call 0x1C17CF4
	023 Move X0, 0xD6E000
	024 Move X0, [X0+2992]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+509], W8
	028 Add X0, X31, 40
	029 Move X1, X23
	030 Move X2, X31
	031 Move [X31+40], X31
	032 Move [X31+16], X31
	033 Move [X31+24], X31
	034 Move [X31+8], X31
	035 Call RuntimeTypeHandle..ctor, X0, X1
	036 Add X0, X31, 16
	037 Move X1, X22
	038 Move X2, X31
	039 Call SafeStringMarshal..ctor, X0, X1
	040 Add X0, X31, 16
	041 Move X1, X31
	042 Call SafeStringMarshal.get_Value, X0
	043 Move X1, X0
	044 Move X0, X21
	045 Move W2, W20
	046 Move W3, W19
	047 Call 0x1C3BA10
	048 Move X1, X0
	049 Add X0, X31, 8
	050 Move X2, X31
	051 Call SafeGPtrArrayHandle..ctor, X0, X1
	052 Add X0, X31, 8
	053 Move X1, X31
	054 Call SafeGPtrArrayHandle.get_Length, X0
	055 Move X8, 0xD76000
	056 Move X8, [X8+232]
	057 Move W21, W0
	058 Move X0, [X8]
	059 Move W1, W21
	060 Call 0x1C17D6C
	061 Move X19, X0
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X22, 0xD6E000
	064 Move X22, [X22+2992]
	065 Move X20, X31
	066 Move W23, W21
	067 Add X24, X19, 32
	068 Add X0, X31, 8
	069 Move W1, W20
	070 Move X2, X31
	071 Call SafeGPtrArrayHandle.get_Item, X0, X1
	072 Move X1, [X31+40]
	073 Move X2, X31
	074 Call FieldInfo.GetFieldFromHandle, X0, X1
	075 Compare X19, 0
	076 JumpIfEqual {132}
	077 Move X21, X0
	078 Compare X0, 0
	079 JumpIfEqual {104}
	080 Move X8, [X21]
	081 Move X1, [X22]
	082 Move W10, [X8+304]
	083 Move W9, [X1+304]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X8, [X8+200]
	086 Add X8, X8, X9
	087 NotImplemented "Instruction LDUR not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X8, [X19]
	090 Move X1, [X8+64]
	091 Move X0, X21
	092 Call 0x1C17E00
	093 Compare X0, 0
	094 JumpIfEqual {134}
	095 Move X8, [X21]
	096 Move X1, [X22]
	097 Move W10, [X8+304]
	098 Move W9, [X1+304]
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X8, [X8+200]
	101 Add X8, X8, X9
	102 NotImplemented "Instruction LDUR not yet implemented."
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move W8, [X19+24]
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move [X24], X21
	107 Add X20, X20, 1
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X22, X31
	110 Add X0, X31, 8
	111 Move X1, X31
	112 Call SafeGPtrArrayHandle.Dispose, X0
	113 Compare X22, 0
	114 JumpIfNotEqual {137}
	115 Add X0, X31, 16
	116 Move X1, X31
	117 Call SafeStringMarshal.Dispose, X0
	118 Move X0, X19
	119 Move X20, [X31+80]
	120 Move X19, [X31+88]
	121 Move X22, [X31+64]
	122 Move X21, [X31+72]
	123 Move X24, [X31+48]
	124 Move X23, [X31+56]
	125 Move X30, [X31+32]
	126 Add X31, X31, 96
	127 Return X0
	128 Move X0, X21
	129 Call 0x1C181E0
	130 Move X0, X21
	131 Call 0x1C181E0
	132 Call 0x1C17F20
	133 Call 0x1C17F28
	134 Call 0x1C17F44
	135 Move X1, X31
	136 Call 0x1C17DEC
	137 Move X0, X22
	138 Call 0x1C17F18
	139 Move X21, X1
	140 Move X20, X0
	141 Move X21, X1
	142 Move X20, X0
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Call 0x3EB2AD0
	145 Move X22, [X0]
	146 Call 0x3EB2AE0
	147 Move X19, X31
	148 Move X21, X1
	149 Move X20, X0
	150 Move X22, X31
	151 Add X0, X31, 8
	152 Move X1, X31
	153 Call SafeGPtrArrayHandle.Dispose, X0
	154 Compare X22, 0
	155 JumpIfNotEqual {170}
	156 Move X19, X31
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Move X0, X20
	159 Call 0x3EB2AD0
	160 Move X21, [X0]
	161 Call 0x3EB2AE0
	162 Add X0, X31, 16
	163 Move X1, X31
	164 Call SafeStringMarshal.Dispose, X0
	165 Compare X21, 0
	166 JumpIfEqual {118}
	167 Move X0, X21
	168 Call 0x1C17F18
	169 Move X21, X31
	170 Move X0, X22
	171 Call 0x1C17F18
	172 Move X21, X1
	173 Move X20, X0
	174 Move X20, X0
	175 Add X0, X31, 16
	176 Move X1, X31
	177 Call SafeStringMarshal.Dispose, X0
	178 Compare X21, 0
	179 JumpIfNotEqual {182}
	180 Move X0, X20
	181 Call 0x1D2D690
	182 Move X0, X21
	183 Call 0x1C17F18
	184 Call 0x1991590

Method: System.Reflection.RuntimeEventInfo[] GetEvents_internal(System.String name, System.Reflection.BindingFlags bindingAttr, System.RuntimeType/MemberListType listType, System.RuntimeType reflectedType)

Disassembly:
	0x033B6E98 MOV X4, X31
	0x033B6E9C MOV W5, W31
	0x033B6EA0 BL 0x33B5320
	0x033B6EA4 LDR X8, [X31 + 0x18]
	0x033B6EA8 LDUR V0, [X31 + 0x8]
	0x033B6EAC MOV X0, X20
	0x033B6EB0 MOV X1, X31
	0x033B6EB4 STR X8, [X31 + 0x90]
	0x033B6EB8 ADD X8, X31, 0x68
	0x033B6EBC MOV W2, W19
	0x033B6EC0 MOV X3, X31
	0x033B6EC4 MOV W4, W31
	0x033B6EC8 STR V0, [X31 + 0x8]
	0x033B6ECC BL 0x33B57D4
	0x033B6ED0 ADD X8, X31, 0x50
	0x033B6ED4 MOV X0, X20
	0x033B6ED8 MOV X1, X31
	0x033B6EDC MOV W2, W19
	0x033B6EE0 MOV W3, W31
	0x033B6EE4 BL 0x33B5CC8
	0x033B6EE8 ADD X8, X31, 0x38
	0x033B6EEC MOV X0, X20
	0x033B6EF0 MOV X1, X31
	0x033B6EF4 MOV W2, W19
	0x033B6EF8 MOV W3, W31
	0x033B6EFC BL 0x33B60F8
	0x033B6F00 ADD X8, X31, 0x20
	0x033B6F04 MOV X0, X20
	0x033B6F08 MOV X1, X31
	0x033B6F0C MOV W2, W19
	0x033B6F10 MOV W3, W31
	0x033B6F14 BL 0x33B65B4
	0x033B6F18 LDR W8, [X31 + 0xA8]
	0x033B6F1C LDR W9, [X31 + 0x90]
	0x033B6F20 LDR W10, [X31 + 0x78]
	0x033B6F24 LDR W11, [X31 + 0x60]
	0x033B6F28 LDR W12, [X31 + 0x48]
	0x033B6F2C LDR W13, [X31 + 0x30]
	0x033B6F30 ADD W8, W9, W8
	0x033B6F34 LDR X0, [X27]
	0x033B6F38 ADD W8, W8, W10
	0x033B6F3C ADD W8, W8, W11
	0x033B6F40 ADD W8, W8, W12
	0x033B6F44 ADD W1, W8, W13
	0x033B6F48 BL 0x1C16D6C
	0x033B6F4C LDR X3, [X26]
	0x033B6F50 MOV X19, X0
	0x033B6F54 ADD X0, X31, 0x98
	0x033B6F58 MOV X1, X19
	0x033B6F5C MOV W2, W31
	0x033B6F60 BL 0x2EF1C78
	0x033B6F64 LDR W20, [X31 + 0xA8]
	0x033B6F68 LDR X3, [X25]
	0x033B6F6C ADD X0, X31, 0x80
	0x033B6F70 MOV X1, X19
	0x033B6F74 MOV W2, W20
	0x033B6F78 BL 0x2EF1C78
	0x033B6F7C LDR W8, [X31 + 0x90]
	0x033B6F80 LDR X3, [X24]
	0x033B6F84 ADD X0, X31, 0x68
	0x033B6F88 MOV X1, X19
	0x033B6F8C ADD W20, W8, W20
	0x033B6F90 MOV W2, W20
	0x033B6F94 BL 0x2EF1C78
	0x033B6F98 LDR W8, [X31 + 0x78]
	0x033B6F9C LDR X3, [X23]
	0x033B6FA0 ADD X0, X31, 0x50
	0x033B6FA4 MOV X1, X19
	0x033B6FA8 ADD W20, W8, W20
	0x033B6FAC MOV W2, W20
	0x033B6FB0 BL 0x2EF1C78
	0x033B6FB4 LDR W8, [X31 + 0x60]
	0x033B6FB8 LDR X3, [X22]
	0x033B6FBC ADD X0, X31, 0x38
	0x033B6FC0 MOV X1, X19
	0x033B6FC4 ADD W20, W8, W20
	0x033B6FC8 MOV W2, W20
	0x033B6FCC BL 0x2EF1C78
	0x033B6FD0 LDR W8, [X31 + 0x48]
	0x033B6FD4 LDR X3, [X21]
	0x033B6FD8 ADD X0, X31, 0x20
	0x033B6FDC MOV X1, X19
	0x033B6FE0 ADD W2, W8, W20
	0x033B6FE4 BL 0x2EF1C78
	0x033B6FE8 MOV X0, X19
	0x033B6FEC LDP X20, X19, [X31 + 0x100]
	0x033B6FF0 LDP X22, X21, [X31 + 0xF0]
	0x033B6FF4 LDP X24, X23, [X31 + 0xE0]
	0x033B6FF8 LDP X26, X25, [X31 + 0xD0]
	0x033B6FFC LDP X28, X27, [X31 + 0xC0]
	0x033B7000 LDP X29, X30, [X31 + 0xB0]
	0x033B7004 ADD X31, X31, 0x110
	0x033B7008 RET
	0x033B700C SUB X31, X31, 0x80
	0x033B7010 STR X30, [X31 + 0x40]
	0x033B7014 STP X24, X23, [X31 + 0x50]
	0x033B7018 STP X22, X21, [X31 + 0x60]
	0x033B701C STP X20, X19, [X31 + 0x70]
	0x033B7020 ADRP X24, 0x1026000
	0x033B7024 LDRB W8, [X24 + 0x1D3]
	0x033B7028 MOV X20, X5
	0x033B702C MOV X19, X4
	0x033B7030 MOV X22, X2
	0x033B7034 MOV W21, W1
	0x033B7038 MOV X23, X0
	0x033B703C TBNZ X8, 0x0, 0x33B7090
	0x033B7040 ADRP X0, 0xD66000
	0x033B7044 LDR X0, [X0 + 0x978]
	0x033B7048 BL 0x1C16CF4
	0x033B704C ADRP X0, 0xD74000
	0x033B7050 LDR X0, [X0 + 0x538]
	0x033B7054 BL 0x1C16CF4
	0x033B7058 ADRP X0, 0xD75000
	0x033B705C LDR X0, [X0 + 0x110]
	0x033B7060 BL 0x1C16CF4
	0x033B7064 ADRP X0, 0xD75000
	0x033B7068 LDR X0, [X0 + 0x158]
	0x033B706C BL 0x1C16CF4
	0x033B7070 ADRP X0, 0xD75000
	0x033B7074 LDR X0, [X0 + 0x188]
	0x033B7078 BL 0x1C16CF4
	0x033B707C ADRP X0, 0xD3C000
	0x033B7080 LDR X0, [X0 + 0x6C0]
	0x033B7084 BL 0x1C16CF4
	0x033B7088 MOVZ W8, 0x1
	0x033B708C STRB W8, [X24 + 0x1D3]
	0x033B7090 ADD X8, X31, 0x8
	0x033B7094 MOVZ W3, 0x3
	0x033B7098 MOV X0, X23
	0x033B709C MOV X1, X31
	0x033B70A0 MOV W2, W21
	0x033B70A4 MOV X4, X19
	0x033B70A8 MOV W5, W31
	0x033B70AC STP X31, X31, [X31 + 0x20]
	0x033B70B0 STR X31, [X31 + 0x30]
	0x033B70B4 BL 0x33B5320
	0x033B70B8 LDR X8, [X31 + 0x18]
	0x033B70BC LDUR V0, [X31 + 0x8]
	0x033B70C0 STR X8, [X31 + 0x30]
	0x033B70C4 STR V0, [X31 + 0x2]
	0x033B70C8 CBZ W8, 0x33B7204
	0x033B70CC CBZ X19, 0x33B723C
	0x033B70D0 CMP W8, 0x1
	0x033B70D4 B.NE 0x33B711C
	0x033B70D8 LDR X8, [X19 + 0x18]
	0x033B70DC CBNZ X8, 0x33B711C
	0x033B70E0 ADRP X8, 0xD75000
	0x033B70E4 LDR X8, [X8 + 0x188]
	0x033B70E8 ADD X0, X31, 0x20
	0x033B70EC MOV W1, W31
	0x033B70F0 LDR X2, [X8]
	0x033B70F4 BL 0x2EF1B34

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X23, 0x1028000
	009 Move W8, [X23+510]
	010 Move X22, X4
	011 Move W19, W3
	012 Move X21, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xD77000
	019 Move X0, [X0+200]
	020 Call 0x1C17CF4
	021 Move X0, 0xD77000
	022 Move X0, [X0+208]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+510], W8
	026 Add X0, X31, 24
	027 Move X1, X22
	028 Move X2, X31
	029 Move [X31+16], X31
	030 Move [X31+24], X31
	031 Move [X31], X31
	032 Move [X31+8], X31
	033 Call RuntimeTypeHandle..ctor, X0, X1
	034 Add X0, X31, 8
	035 Move X1, X21
	036 Move X2, X31
	037 Call SafeStringMarshal..ctor, X0, X1
	038 Add X0, X31, 8
	039 Move X1, X31
	040 Call SafeStringMarshal.get_Value, X0
	041 Move X1, X0
	042 Move X0, X20
	043 Move W2, W19
	044 Call 0x1C3B228
	045 Move X1, X0
	046 Add X0, X31, 0
	047 Move X2, X31
	048 Call SafeGPtrArrayHandle..ctor, X0, X1
	049 Add X0, X31, 0
	050 Move X1, X31
	051 Call SafeGPtrArrayHandle.get_Length, X0
	052 Move X8, 0xD77000
	053 Move X8, [X8+200]
	054 Move W21, W0
	055 Move X0, [X8]
	056 Move W1, W21
	057 Call 0x1C17D6C
	058 Move X19, X0
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X22, 0xD77000
	061 Move X22, [X22+208]
	062 Move X20, X31
	063 Move W21, W21
	064 Add X23, X19, 32
	065 Add X0, X31, 0
	066 Move W1, W20
	067 Move X2, X31
	068 Call SafeGPtrArrayHandle.get_Item, X0, X1
	069 Move X1, [X31+24]
	070 Move X2, X31
	071 Call EventInfo.GetEventFromHandle, X0, X1
	072 Compare X19, 0
	073 JumpIfEqual {102}
	074 Compare X0, 0
	075 JumpIfEqual {79}
	076 Move X1, [X22]
	077 Move X8, [X0]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move W8, [X19+24]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move [X23], X0
	082 Add X20, X20, 1
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X21, X31
	085 Add X0, X31, 0
	086 Move X1, X31
	087 Call SafeGPtrArrayHandle.Dispose, X0
	088 Compare X21, 0
	089 JumpIfNotEqual {105}
	090 Add X0, X31, 8
	091 Move X1, X31
	092 Call SafeStringMarshal.Dispose, X0
	093 Move X0, X19
	094 Move X20, [X31+64]
	095 Move X19, [X31+72]
	096 Move X22, [X31+48]
	097 Move X21, [X31+56]
	098 Move X30, [X31+32]
	099 Move X23, [X31+40]
	100 Add X31, X31, 80
	101 Return X0
	102 Call 0x1C17F20
	103 Call 0x1C17F28
	104 Call 0x1C181E0
	105 Move X0, X21
	106 Call 0x1C17F18
	107 Move X20, X1
	108 Move X22, X0
	109 Move X20, X1
	110 Move X22, X0
	111 Move X22, X0
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X0, X22
	114 Call 0x3EB2AD0
	115 Move X21, [X0]
	116 Call 0x3EB2AE0
	117 Move X19, X31
	118 Move X20, X1
	119 Move X21, X31
	120 Add X0, X31, 0
	121 Move X1, X31
	122 Call SafeGPtrArrayHandle.Dispose, X0
	123 Compare X21, 0
	124 JumpIfNotEqual {139}
	125 Move X19, X31
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move X0, X22
	128 Call 0x3EB2AD0
	129 Move X20, [X0]
	130 Call 0x3EB2AE0
	131 Add X0, X31, 8
	132 Move X1, X31
	133 Call SafeStringMarshal.Dispose, X0
	134 Compare X20, 0
	135 JumpIfEqual {93}
	136 Move X0, X20
	137 Call 0x1C17F18
	138 Move X20, X31
	139 Move X0, X21
	140 Call 0x1C17F18
	141 Move X20, X1
	142 Move X22, X0
	143 Move X22, X0
	144 Add X0, X31, 8
	145 Move X1, X31
	146 Call SafeStringMarshal.Dispose, X0
	147 Compare X20, 0
	148 JumpIfNotEqual {151}
	149 Move X0, X22
	150 Call 0x1D2D690
	151 Move X0, X20
	152 Call 0x1C17F18
	153 Call 0x1991590

Method: System.Type[] GetInterfaces()

Disassembly:
	0x033BE14C BL 0x1C16CF4

ISIL:
	001 Call 0x1C3E2CC
	002 Return X0

Method: System.IntPtr GetNestedTypes_native(System.IntPtr name, System.Reflection.BindingFlags bindingAttr, System.RuntimeType/MemberListType listType)

Disassembly:
	0x033BE150 MOVZ W8, 0x1

ISIL:
	001 Call 0x1C3CC74
	002 Return X0

Method: System.RuntimeType[] GetNestedTypes_internal(System.String displayName, System.Reflection.BindingFlags bindingAttr, System.RuntimeType/MemberListType listType)

Disassembly:
	0x033B7770 BL 0x32D9A10
	0x033B7774 MOV W22, W0
	0x033B7778 MOV X0, X21
	0x033B777C MOV X1, X31
	0x033B7780 BL 0x32D9A10
	0x033B7784 AND W8, W22, W25, 0x0
	0x033B7788 CMP W8, W0
	0x033B778C B.NE 0x33B7894
	0x033B7790 MOV X0, X19
	0x033B7794 MOV X1, X31
	0x033B7798 MOV X2, X31
	0x033B779C BL 0x32CCED4
	0x033B77A0 TBZ X0, 0x0, 0x33B7814
	0x033B77A4 LDR X8, [X21]
	0x033B77A8 MOV X0, X21
	0x033B77AC LDP X9, X1, [X8 + 0x1B8]
	0x033B77B0 BLR X9
	0x033B77B4 CBZ X19, 0x33B78F8
	0x033B77B8 LDR X8, [X19]
	0x033B77BC MOV X22, X0
	0x033B77C0 MOV X0, X19
	0x033B77C4 LDP X9, X1, [X8 + 0x1B8]
	0x033B77C8 BLR X9
	0x033B77CC CMP X22, X0
	0x033B77D0 B.EQ 0x33B7900
	0x033B77D4 LDR X8, [X19]
	0x033B77D8 MOV X0, X19
	0x033B77DC LDP X9, X1, [X8 + 0x1B8]
	0x033B77E0 BLR X9
	0x033B77E4 CBZ X0, 0x33B78F8
	0x033B77E8 MOV X1, X31
	0x033B77EC BL 0x33962E8
	0x033B77F0 TBZ X0, 0x0, 0x33B7814
	0x033B77F4 LDR X8, [X21]
	0x033B77F8 MOV X0, X21
	0x033B77FC LDP X9, X1, [X8 + 0x1B8]
	0x033B7800 BLR X9
	0x033B7804 CBZ X0, 0x33B78F8
	0x033B7808 MOV X1, X31
	0x033B780C BL 0x33962E8
	0x033B7810 ORR W23, W23, W0, 0x0
	0x033B7814 MOV X0, X19
	0x033B7818 MOV X1, X31
	0x033B781C MOV X2, X31
	0x033B7820 BL 0x32CCEA8
	0x033B7824 TBNZ X0, 0x0, 0x33B7890
	0x033B7828 LDR X8, [X21]
	0x033B782C MOV X0, X21
	0x033B7830 LDP X9, X1, [X8 + 0x1B8]
	0x033B7834 BLR X9
	0x033B7838 CBZ X19, 0x33B78F8
	0x033B783C LDR X8, [X19]
	0x033B7840 MOV X22, X0
	0x033B7844 MOV X0, X19
	0x033B7848 LDP X9, X1, [X8 + 0x1B8]
	0x033B784C BLR X9
	0x033B7850 CBZ X22, 0x33B78F8
	0x033B7854 LDR X8, [X22]
	0x033B7858 MOV X1, X0
	0x033B785C MOV X0, X22
	0x033B7860 LDR X9, [X8 + 0x298]
	0x033B7864 LDR X2, [X8 + 0x2A0]
	0x033B7868 BLR X9
	0x033B786C TBNZ X0, 0x0, 0x33B7890
	0x033B7870 LDR X8, [X19]
	0x033B7874 MOV X0, X19
	0x033B7878 LDP X9, X1, [X8 + 0x1B8]
	0x033B787C BLR X9
	0x033B7880 CBZ X0, 0x33B78F8
	0x033B7884 MOV X1, X31
	0x033B7888 BL 0x33962E8
	0x033B788C TBZ X0, 0x0, 0x33B7894
	0x033B7890 MOV X19, X21
	0x033B7894 LDR W8, [X20 + 0x18]
	0x033B7898 ADD W24, W24, 0x1
	0x033B789C CMP W24, W8
	0x033B78A0 B.LT 0x33B7754
	0x033B78A4 TBNZ X23, 0x0, 0x33B78B8
	0x033B78A8 B 0x33B78DC
	0x033B78AC MOV X19, X31
	0x033B78B0 MOV W23, W31
	0x033B78B4 TBZ X23, 0x0, 0x33B78DC
	0x033B78B8 CBZ X19, 0x33B78F8
	0x033B78BC LDR X8, [X19]
	0x033B78C0 MOV X0, X19
	0x033B78C4 LDP X9, X1, [X8 + 0x1B8]
	0x033B78C8 BLR X9
	0x033B78CC CBZ X0, 0x33B78F8
	0x033B78D0 MOV X1, X31
	0x033B78D4 BL 0x33962E8
	0x033B78D8 TBNZ X0, 0x0, 0x33B7900
	0x033B78DC MOV X0, X19
	0x033B78E0 LDP X20, X19, [X31 + 0x40]
	0x033B78E4 LDP X22, X21, [X31 + 0x30]
	0x033B78E8 LDP X24, X23, [X31 + 0x20]
	0x033B78EC LDP X30, X25, [X31 + 0x10]
	0x033B78F0 ADD X31, X31, 0x50
	0x033B78F4 RET
	0x033B78F8 BL 0x1C16F20
	0x033B78FC BL 0x1C16F28
	0x033B7900 ADRP X0, 0xD6E000
	0x033B7904 LDR X0, [X0 + 0xBE0]
	0x033B7908 BL 0x1C16D08
	0x033B790C MOV X1, X31
	0x033B7910 BL 0x33BDD84
	0x033B7914 MOV X19, X0
	0x033B7918 ADRP X0, 0xD6E000
	0x033B791C LDR X0, [X0 + 0x7A0]
	0x033B7920 BL 0x1C16D08
	0x033B7924 BL 0x1C16F10
	0x033B7928 MOV X1, X19
	0x033B792C MOV X2, X31
	0x033B7930 MOV X20, X0
	0x033B7934 BL 0x32CC544
	0x033B7938 ADRP X0, 0xD75000
	0x033B793C LDR X0, [X0 + 0x1A8]
	0x033B7940 BL 0x1C16D08
	0x033B7944 MOV X1, X0
	0x033B7948 MOV X0, X20
	0x033B794C BL 0x1C16DEC
	0x033B7950 ADRP X0, 0xD41000
	0x033B7954 LDR X0, [X0 + 0x528]
	0x033B7958 BL 0x1C16D08
	0x033B795C BL 0x1C16F10
	0x033B7960 MOV X1, X31
	0x033B7964 MOV X19, X0
	0x033B7968 BL 0x3315F20
	0x033B796C ADRP X0, 0xD75000
	0x033B7970 LDR X0, [X0 + 0x1A8]
	0x033B7974 BL 0x1C16D08
	0x033B7978 MOV X1, X0
	0x033B797C MOV X0, X19
	0x033B7980 BL 0x1C16DEC
	0x033B7984 SUB X31, X31, 0x80
	0x033B7988 STP X29, X30, [X31 + 0x20]
	0x033B798C STP X28, X27, [X31 + 0x30]
	0x033B7990 STP X26, X25, [X31 + 0x40]
	0x033B7994 STP X24, X23, [X31 + 0x50]
	0x033B7998 STP X22, X21, [X31 + 0x60]
	0x033B799C STP X20, X19, [X31 + 0x70]
	0x033B79A0 ADRP X22, 0x1026000
	0x033B79A4 LDRB W8, [X22 + 0x1D7]
	0x033B79A8 MOV W19, W2
	0x033B79AC MOV X21, X1
	0x033B79B0 MOV X20, X0
	0x033B79B4 AND W9, W2, 0x1
	0x033B79B8 STRB W9, [X31 + 0x1C]
	0x033B79BC TBNZ X8, 0x0, 0x33B7A04
	0x033B79C0 ADRP X0, 0xD75000
	0x033B79C4 LDR X0, [X0 + 0x1B0]
	0x033B79C8 BL 0x1C16CF4
	0x033B79CC ADRP X0, 0xD75000
	0x033B79D0 LDR X0, [X0 + 0x1B8]
	0x033B79D4 BL 0x1C16CF4
	0x033B79D8 ADRP X0, 0xD75000
	0x033B79DC LDR X0, [X0 + 0x1C0]
	0x033B79E0 BL 0x1C16CF4
	0x033B79E4 ADRP X0, 0xD75000
	0x033B79E8 LDR X0, [X0 + 0x1C8]
	0x033B79EC BL 0x1C16CF4
	0x033B79F0 ADRP X0, 0xD65000
	0x033B79F4 LDR X0, [X0 + 0x4E8]
	0x033B79F8 BL 0x1C16CF4
	0x033B79FC MOVZ W8, 0x1
	0x033B7A00 STRB W8, [X22 + 0x1D7]
	0x033B7A04 STP X31, X31, [X31 + 0x8]
	0x033B7A08 STR W31, [X31 + 0x4]
	0x033B7A0C CBZ X21, 0x33B7CD8
	0x033B7A10 ADRP X25, 0xD65000
	0x033B7A14 LDR X25, [X25 + 0x4E8]
	0x033B7A18 ANDS W31, W19, 0x1
	0x033B7A1C MOVZ W9, 0x30
	0x033B7A20 CINC W19, W9, NE
	0x033B7A24 LDR X0, [X25]
	0x033B7A28 LDR W8, [X0 + 0xE0]
	0x033B7A2C CBNZ W8, 0x33B7A34
	0x033B7A30 BL 0x1C16DFC
	0x033B7A34 ADD X1, X31, 0x10
	0x033B7A38 ADD X2, X31, 0x8
	0x033B7A3C MOV X0, X21
	0x033B7A40 BL 0x33B4404
	0x033B7A44 ADD X1, X31, 0x10
	0x033B7A48 ADD X2, X31, 0x1C
	0x033B7A4C ADD X3, X31, 0x4
	0x033B7A50 MOV W0, W19
	0x033B7A54 BL 0x33B4644
	0x033B7A58 LDR X8, [X20]
	0x033B7A5C LDRB W9, [X31 + 0x1C]
	0x033B7A60 MOV X0, X20
	0x033B7A64 LDR X10, [X8 + 0x858]
	0x033B7A68 LDR X1, [X8 + 0x860]
	0x033B7A6C CMP W9, 0x0
	0x033B7A70 MOVZ W8, 0x4
	0x033B7A74 CINC W21, W8, NE
	0x033B7A78 BLR X10
	0x033B7A7C CBZ X0, 0x33B7C80
	0x033B7A80 LDR W8, [X0 + 0x18]
	0x033B7A84 LDR X20, [X31 + 0x10]
	0x033B7A88 MOV X22, X0
	0x033B7A8C CMP W8, 0x1
	0x033B7A90 B.LT 0x33B7BA0
	0x033B7A94 ADRP X27, 0xD75000
	0x033B7A98 ADRP X28, 0xD75000
	0x033B7A9C ADRP X29, 0xD75000
	0x033B7AA0 LDR X27, [X27 + 0x1C8]
	0x033B7AA4 LDR X28, [X28 + 0x1C0]
	0x033B7AA8 LDR X29, [X29 + 0x1B0]
	0x033B7AAC MOV W26, W31
	0x033B7AB0 MOV X23, X31
	0x033B7AB4 CMP W26, W8
	0x033B7AB8 B.CS 0x33B7C84
	0x033B7ABC ADD X8, X22, W26, 0x3, SXTW
	0x033B7AC0 LDR X24, [X8 + 0x20]
	0x033B7AC4 CBZ X24, 0x33B7C80
	0x033B7AC8 LDR X8, [X24]
	0x033B7ACC LDR X1, [X25]
	0x033B7AD0 LDRB W10, [X8 + 0x130]
	0x033B7AD4 LDRB W9, [X1 + 0x130]
	0x033B7AD8 CMP W10, W9
	0x033B7ADC B.CC 0x33B7C78
	0x033B7AE0 LDR X10, [X8 + 0xC8]
	0x033B7AE4 ADD X9, X10, X9, 0x3, LSL
	0x033B7AE8 LDUR X9, [X9 - 0x8]
	0x033B7AEC CMP X9, X1
	0x033B7AF0 B.NE 0x33B7C78
	0x033B7AF4 LDP X9, X1, [X8 + 0x1A8]
	0x033B7AF8 MOV X0, X24

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+40], X25
	004 Move [X31+48], X24
	005 Move [X31+56], X23
	006 Move [X31+64], X22
	007 Move [X31+72], X21
	008 Move [X31+80], X20
	009 Move [X31+88], X19
	010 Move X23, 0x1027000
	011 Move W8, [X23+511]
	012 Move W19, W3
	013 Move W20, W2
	014 Move X22, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0xD6E000
	021 Move X0, [X0+3024]
	022 Call 0x1C17CF4
	023 Move X0, 0xD66000
	024 Move X0, [X0+1256]
	025 Call 0x1C17CF4
	026 Move X0, 0xD76000
	027 Move X0, [X0+256]
	028 Call 0x1C17CF4
	029 Move X0, 0xD3D000
	030 Move X0, [X0+1728]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X23+511], W8
	034 Move [X31+16], X31
	035 Move [X31+24], X31
	036 Move [X31+8], X31
	037 Compare X22, 0
	038 JumpIfEqual {61}
	039 Move X0, X22
	040 Move X1, X31
	041 Call TypeIdentifiers.FromDisplay, X0
	042 Compare X0, 0
	043 JumpIfEqual {181}
	044 Move X10, 0xD76000
	045 Move X8, [X0]
	046 Move X10, [X10+256]
	047 Move X22, X0
	048 NotImplemented "Instruction LDRH not yet implemented."
	049 Move X1, [X10]
	050 Compare X9, 0
	051 JumpIfEqual {58}
	052 Move X10, [X8+176]
	053 Add X10, X10, 8
	054 NotImplemented "Instruction LDUR not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Subtract X9, X9, 1
	057 Add X10, X10, 16
	058 Move X0, X22
	059 Move W2, W31
	060 Call 0x1C5D788
	061 Move X1, X31
	062 NotImplemented "Instruction LDRSW not yet implemented."
	063 Add X8, X8, X9
	064 Add X0, X8, 312
	065 Move X8, [X0]
	066 Move X1, [X0+8]
	067 Move X0, X22
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Move X1, X0
	070 Add X0, X31, 16
	071 Move X2, X31
	072 Call SafeStringMarshal..ctor, X0, X1
	073 Add X0, X31, 16
	074 Move X1, X31
	075 Call SafeStringMarshal.get_Value, X0
	076 Move X1, X0
	077 Move X0, X21
	078 Move W2, W20
	079 Move W3, W19
	080 Call 0x1C3CC74
	081 Move X1, X0
	082 Add X0, X31, 8
	083 Move X2, X31
	084 Call SafeGPtrArrayHandle..ctor, X0, X1
	085 Add X0, X31, 8
	086 Move X1, X31
	087 Call SafeGPtrArrayHandle.get_Length, X0
	088 Move X8, 0xD6E000
	089 Move X8, [X8+3024]
	090 Move W21, W0
	091 Move X0, [X8]
	092 Move W1, W21
	093 Call 0x1C17D6C
	094 Move X19, X0
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X22, 0xD3D000
	097 Move X23, 0xD66000
	098 Move X22, [X22+1728]
	099 Move X23, [X23+1256]
	100 Move X20, X31
	101 Move W24, W21
	102 Add X25, X19, 32
	103 Add X0, X31, 8
	104 Move W1, W20
	105 Move X2, X31
	106 Call SafeGPtrArrayHandle.get_Item, X0, X1
	107 Move X21, X0
	108 Move X0, [X22]
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {113}
	112 Call 0x1C17DFC
	113 Move X0, X21
	114 Move X1, X31
	115 Call Type.GetTypeFromHandle, X0
	116 Compare X19, 0
	117 JumpIfEqual {174}
	118 Move X21, X0
	119 Compare X0, 0
	120 JumpIfEqual {145}
	121 Move X8, [X21]
	122 Move X1, [X23]
	123 Move W10, [X8+304]
	124 Move W9, [X1+304]
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move X8, [X8+200]
	127 Add X8, X8, X9
	128 NotImplemented "Instruction LDUR not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move X8, [X19]
	131 Move X1, [X8+64]
	132 Move X0, X21
	133 Call 0x1C17E00
	134 Compare X0, 0
	135 JumpIfEqual {176}
	136 Move X8, [X21]
	137 Move X1, [X23]
	138 Move W10, [X8+304]
	139 Move W9, [X1+304]
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Move X8, [X8+200]
	142 Add X8, X8, X9
	143 NotImplemented "Instruction LDUR not yet implemented."
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move W8, [X19+24]
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Move [X25], X21
	148 Add X20, X20, 1
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Move X22, X31
	151 Add X0, X31, 8
	152 Move X1, X31
	153 Call SafeGPtrArrayHandle.Dispose, X0
	154 Compare X22, 0
	155 JumpIfNotEqual {179}
	156 Add X0, X31, 16
	157 Move X1, X31
	158 Call SafeStringMarshal.Dispose, X0
	159 Move X0, X19
	160 Move X20, [X31+80]
	161 Move X19, [X31+88]
	162 Move X22, [X31+64]
	163 Move X21, [X31+72]
	164 Move X24, [X31+48]
	165 Move X23, [X31+56]
	166 Move X30, [X31+32]
	167 Move X25, [X31+40]
	168 Add X31, X31, 96
	169 Return X0
	170 Move X0, X21
	171 Call 0x1C181E0
	172 Move X0, X21
	173 Call 0x1C181E0
	174 Call 0x1C17F20
	175 Call 0x1C17F28
	176 Call 0x1C17F44
	177 Move X1, X31
	178 Call 0x1C17DEC
	179 Move X0, X22
	180 Call 0x1C17F18
	181 Call 0x1C17F20
	182 Move X20, X1
	183 Move X21, X0
	184 Move X20, X1
	185 Move X21, X0
	186 Move X20, X1
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Call 0x3EB2AD0
	189 Move X22, [X0]
	190 Call 0x3EB2AE0
	191 Move X19, X31
	192 Move X21, X0
	193 Move X22, X31
	194 Add X0, X31, 8
	195 Move X1, X31
	196 Call SafeGPtrArrayHandle.Dispose, X0
	197 Compare X22, 0
	198 JumpIfNotEqual {213}
	199 Move X19, X31
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Move X0, X21
	202 Call 0x3EB2AD0
	203 Move X20, [X0]
	204 Call 0x3EB2AE0
	205 Add X0, X31, 16
	206 Move X1, X31
	207 Call SafeStringMarshal.Dispose, X0
	208 Compare X20, 0
	209 JumpIfEqual {159}
	210 Move X0, X20
	211 Call 0x1C17F18
	212 Move X20, X31
	213 Move X0, X22
	214 Call 0x1C17F18
	215 Move X20, X1
	216 Move X21, X0
	217 Move X21, X0
	218 Add X0, X31, 16
	219 Move X1, X31
	220 Call SafeStringMarshal.Dispose, X0
	221 Compare X20, 0
	222 JumpIfNotEqual {225}
	223 Move X0, X21
	224 Call 0x1D2D690
	225 Move X0, X20
	226 Call 0x1C17F18
	227 Call 0x1991590

Method: System.String get_AssemblyQualifiedName()

Disassembly:
	0x033BE154 STRB W8, [X19 + 0x20A]
	0x033BE158 STP X31, X31, [X31 + 0x8]
	0x033BE15C STR X31, [X31 + 0x18]

ISIL:
	001 Move W1, 1
	002 Move W2, 1
	003 Call 0x1C3D9D0
	004 Return X0

Method: System.Type get_DeclaringType()

Disassembly:
	0x033BE160 CBZ X20, 0x33BE470

ISIL:
	001 Call 0x1C3DAA8
	002 Return X0

Method: System.String get_Name()

Disassembly:
	0x033BE164 CBZ X21, 0x33BE490

ISIL:
	001 Call 0x1C3D8F0
	002 Return X0

Method: System.String get_Namespace()

Disassembly:
	0x033BE168 LDR X1, [X21 + 0x18]

ISIL:
	001 Call 0x1C3D994
	002 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x033BE16C CBZ X1, 0x33BE4D8
	0x033BE170 ADRP X8, 0xD6E000
	0x033BE174 LDR X8, [X8 + 0x448]
	0x033BE178 ADRP X26, 0xD5E000
	0x033BE17C LDR X0, [X8]
	0x033BE180 LDR X26, [X26 + 0x4E8]
	0x033BE184 BL 0x1C16D6C
	0x033BE188 MOV X22, X0
	0x033BE18C MOV X0, X20
	0x033BE190 BL 0x1C25764
	0x033BE194 MOV X23, X0
	0x033BE198 CBZ X0, 0x33BE1C8
	0x033BE19C LDR X8, [X23]
	0x033BE1A0 LDR X1, [X26]
	0x033BE1A4 LDRB W10, [X8 + 0x130]
	0x033BE1A8 LDRB W9, [X1 + 0x130]
	0x033BE1AC CMP W10, W9
	0x033BE1B0 B.CC 0x33BE3C4
	0x033BE1B4 LDR X8, [X8 + 0xC8]
	0x033BE1B8 ADD X8, X8, X9, 0x3, LSL
	0x033BE1BC LDUR X8, [X8 - 0x8]
	0x033BE1C0 CMP X8, X1
	0x033BE1C4 B.NE 0x33BE3C4
	0x033BE1C8 LDR X8, [X21 + 0x18]
	0x033BE1CC STR X24, [X31]
	0x033BE1D0 CMP W8, 0x1
	0x033BE1D4 B.LT 0x33BE370
	0x033BE1D8 ADRP X28, 0xD66000
	0x033BE1DC LDR X28, [X28 + 0xBB0]
	0x033BE1E0 MOV X27, X31
	0x033BE1E4 AND X8, X8, 0x0
	0x033BE1E8 ADD X29, X21, 0x20
	0x033BE1EC ADD X19, X22, 0x20
	0x033BE1F0 CMP X27, W8, UXTW
	0x033BE1F4 B.CS 0x33BE3CC
	0x033BE1F8 LDR X8, [X29, X27, LSL #3]
	0x033BE1FC CBZ X8, 0x33BE218
	0x033BE200 LDR X10, [X8]
	0x033BE204 LDR X9, [X28]
	0x033BE208 LDRB W12, [X10 + 0x130]
	0x033BE20C LDRB W11, [X9 + 0x130]
	0x033BE210 CMP W12, W11
	0x033BE214 B.CS 0x33BE220
	0x033BE218 MOV X24, X31
	0x033BE21C B 0x33BE234
	0x033BE220 LDR X10, [X10 + 0xC8]
	0x033BE224 ADD X10, X10, X11, 0x3, LSL
	0x033BE228 LDUR X10, [X10 - 0x8]
	0x033BE22C CMP X10, X9
	0x033BE230 CSEL X24, X8, X31, EQ
	0x033BE234 MOV X0, X24

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1020000
	006 Move X21, 0xD36000
	007 Move W8, [X20+512]
	008 Move X21, [X21+1728]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD36000
	015 Move X0, [X0+1728]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+512], W8
	019 Move X8, [X19]
	020 Move X0, X19
	021 Move X9, [X8+808]
	022 Move X1, [X8+816]
	023 NotImplemented "Instruction BLR not yet implemented."
	024 Move X8, [X21]
	025 Move X20, X0
	026 Move W9, [X8+224]
	027 Compare W9, 0
	028 JumpIfNotEqual {31}
	029 Move X0, X8
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Move X1, X31
	033 Move X2, X31
	034 Call Type.op_Inequality, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {63}
	039 Move X0, [X21]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X0, X20
	045 Move X1, X19
	046 Move X2, X31
	047 Call Type.op_Inequality, X0, X1
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {63}
	052 Compare X20, 0
	053 JumpIfEqual {71}
	054 Move X8, [X20]
	055 Move X0, X20
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X2, [X8+344]
	059 Move X1, [X8+352]
	060 Move X30, [X31+32]
	061 Move X21, [X31+40]
	062 CallNoReturn X2
	063 Move X0, [X19+16]
	064 Move X20, [X31+16]
	065 Move X19, [X31+24]
	066 Move X1, X31
	067 Move X30, [X31+32]
	068 Move X21, [X31+40]
	069 Call IntPtr.op_Explicit, X0
	070 Return X0
	071 Call 0x1C17F20

Method: System.String get_FullName()

Disassembly:
	0x033BE238 MOV X1, X31
	0x033BE23C MOV X2, X31
	0x033BE240 BL 0x32CCEA8
	0x033BE244 TBNZ X0, 0x0, 0x33BE3D0
	0x033BE248 CBZ X24, 0x33BE3C0
	0x033BE24C MOV X0, X24
	0x033BE250 MOV X1, X31
	0x033BE254 BL 0x32CCE50
	0x033BE258 TBNZ X0, 0x0, 0x33BE3DC
	0x033BE25C MOV X0, X24
	0x033BE260 MOV X1, X31
	0x033BE264 BL 0x32D9A38
	0x033BE268 LDR X8, [X26]
	0x033BE26C MOV X25, X0
	0x033BE270 LDR W9, [X8 + 0xE0]
	0x033BE274 CBNZ W9, 0x33BE280
	0x033BE278 MOV X0, X8
	0x033BE27C BL 0x1C16DFC
	0x033BE280 MOV X0, X23
	0x033BE284 MOV X1, X25
	0x033BE288 MOV X2, X31
	0x033BE28C BL 0x33A8424
	0x033BE290 TBZ X0, 0x0, 0x33BE2C0
	0x033BE294 MOV X0, X24
	0x033BE298 MOV X1, X31
	0x033BE29C BL 0x32D9A38
	0x033BE2A0 CBZ X23, 0x33BE3C0
	0x033BE2A4 LDR X8, [X23]
	0x033BE2A8 MOV X1, X0
	0x033BE2AC MOV X0, X23
	0x033BE2B0 LDR X9, [X8 + 0x298]
	0x033BE2B4 LDR X2, [X8 + 0x2A0]
	0x033BE2B8 BLR X9
	0x033BE2BC TBZ X0, 0x0, 0x33BE41C
	0x033BE2C0 LDR X8, [X24]
	0x033BE2C4 MOV X0, X24
	0x033BE2C8 LDR X9, [X8 + 0x258]
	0x033BE2CC LDR X1, [X8 + 0x260]
	0x033BE2D0 BLR X9
	0x033BE2D4 CBZ X0, 0x33BE3C0
	0x033BE2D8 LDR X8, [X0]
	0x033BE2DC LDR X1, [X26]
	0x033BE2E0 MOV X23, X0
	0x033BE2E4 LDRB W10, [X8 + 0x130]
	0x033BE2E8 LDRB W9, [X1 + 0x130]
	0x033BE2EC CMP W10, W9
	0x033BE2F0 B.CC 0x33BE3C4
	0x033BE2F4 LDR X8, [X8 + 0xC8]
	0x033BE2F8 ADD X8, X8, X9, 0x3, LSL
	0x033BE2FC LDUR X8, [X8 - 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1020000
	005 Move W8, [X20+513]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xD6F000
	012 Move X0, [X0+920]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+513], W8
	016 Move X8, [X19]
	017 Move X0, X19
	018 Move X9, [X8+648]
	019 Move X1, [X8+656]
	020 NotImplemented "Instruction BLR not yet implemented."
	021 Move TEMP, X0
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {38}
	025 Move X0, X19
	026 Move X1, X31
	027 Call Type.GetRootElementType, X0
	028 Compare X0, 0
	029 JumpIfEqual {64}
	030 Move X8, [X0]
	031 Move X9, [X8+984]
	032 Move X1, [X8+992]
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {59}
	038 Move X20, [X19+24]
	039 Compare X20, 0
	040 JumpIfNotEqual {51}
	041 Move X8, 0xD6F000
	042 Move X8, [X8+920]
	043 Move X0, [X8]
	044 Call 0x1C17F10
	045 Move X1, X31
	046 Move X20, X0
	047 Call MonoTypeInfo..ctor, X0
	048 Move [X19+24], X20
	049 Compare X20, 0
	050 JumpIfEqual {64}
	051 Move X0, [X20+16]
	052 Compare X0, 0
	053 JumpIfNotEqual {60}
	054 Move W1, 1
	055 Move X0, X19
	056 Move W2, W31
	057 Call 0x1C3D9D0
	058 Move [X20+16], X0
	059 Move X0, X31
	060 Move X20, [X31+16]
	061 Move X19, [X31+24]
	062 Move X30, [X31+32]
	063 Return X0
	064 Call 0x1C17F20

Method: System.Boolean get_IsSZArray()

Disassembly:
	0x033BE300 CMP X8, X1
	0x033BE304 B.NE 0x33BE3C4
	0x033BE308 MOV X0, X23
	0x033BE30C MOV X1, X31
	0x033BE310 BL 0x3397374
	0x033BE314 TBNZ X0, 0x0, 0x33BE3E8
	0x033BE318 LDR W8, [X21 + 0x18]
	0x033BE31C SUB W8, W8, 0x1
	0x033BE320 CMP X27, W8, SXTW
	0x033BE324 B.GE 0x33BE338
	0x033BE328 MOV X0, X23
	0x033BE32C MOV X1, X31
	0x033BE330 BL 0x33970C4
	0x033BE334 TBZ X0, 0x0, 0x33BE428
	0x033BE338 LDR X8, [X24]
	0x033BE33C MOV X0, X24
	0x033BE340 LDR X9, [X8 + 0x2B8]
	0x033BE344 LDR X1, [X8 + 0x2C0]
	0x033BE348 BLR X9
	0x033BE34C CBZ X22, 0x33BE3C0
	0x033BE350 LDR W8, [X22 + 0x18]
	0x033BE354 CMP X27, X8

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call Type.get_IsArray, X0
	006 Move TEMP, X0
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfNotEqual {23}
	010 Move X8, [X19]
	011 Move X0, X19
	012 Move X9, [X8+1064]
	013 Move X1, [X8+1072]
	014 NotImplemented "Instruction BLR not yet implemented."
	015 Compare X0, 0
	016 JumpIfEqual {27}
	017 Move X8, [X0]
	018 Move X9, [X8+2216]
	019 Move X1, [X8+2224]
	020 NotImplemented "Instruction BLR not yet implemented."
	021 NotImplemented "Instruction CMP not yet implemented."
	022 NotImplemented "Instruction CSET not yet implemented."
	023 Move W0, W31
	024 Move X30, [X31+16]
	025 Move X19, [X31+24]
	026 Return X0
	027 Call 0x1C17F20

Method: System.Boolean IsSubclassOf(System.Type type)

Disassembly:
	0x033BE358 B.CS 0x33BE3CC
	0x033BE35C STR X0, [X19, X27, LSL #3]
	0x033BE360 LDR W8, [X21 + 0x18]
	0x033BE364 ADD X27, X27, 0x1
	0x033BE368 CMP X27, W8, SXTW
	0x033BE36C B.LT 0x33BE1F0
	0x033BE370 ADD X0, X31, 0x8
	0x033BE374 MOV X1, X20
	0x033BE378 MOV X2, X22
	0x033BE37C MOV X3, X23
	0x033BE380 STP X31, X31, [X31 + 0x8]
	0x033BE384 STR X31, [X31 + 0x18]
	0x033BE388 BL 0x1C8827C
	0x033BE38C LDR X8, [X31 + 0x18]
	0x033BE390 LDUR V0, [X31 + 0x8]
	0x033BE394 LDR X9, [X31]
	0x033BE398 LDP X20, X19, [X31 + 0x70]
	0x033BE39C LDP X22, X21, [X31 + 0x60]
	0x033BE3A0 LDP X24, X23, [X31 + 0x50]
	0x033BE3A4 LDP X26, X25, [X31 + 0x40]
	0x033BE3A8 LDP X28, X27, [X31 + 0x30]
	0x033BE3AC LDP X29, X30, [X31 + 0x20]
	0x033BE3B0 STR X8, [X9 + 0x10]
	0x033BE3B4 STR V0, [X9]
	0x033BE3B8 ADD X31, X31, 0x80
	0x033BE3BC RET
	0x033BE3C0 BL 0x1C16F20
	0x033BE3C4 MOV X0, X23
	0x033BE3C8 BL 0x1C171E0
	0x033BE3CC BL 0x1C16F28
	0x033BE3D0 ADRP X0, 0xD6E000
	0x033BE3D4 LDR X0, [X0 + 0x450]
	0x033BE3D8 B 0x33BE3F0
	0x033BE3DC ADRP X0, 0xD6E000
	0x033BE3E0 LDR X0, [X0 + 0x458]
	0x033BE3E4 B 0x33BE3F0
	0x033BE3E8 ADRP X0, 0xD6E000
	0x033BE3EC LDR X0, [X0 + 0x460]
	0x033BE3F0 BL 0x1C16D08
	0x033BE3F4 MOV X19, X0
	0x033BE3F8 ADRP X0, 0xD3D000
	0x033BE3FC LDR X0, [X0 + 0x578]
	0x033BE400 BL 0x1C16D08
	0x033BE404 BL 0x1C16F10
	0x033BE408 MOV X1, X19
	0x033BE40C MOV X2, X31
	0x033BE410 MOV X20, X0
	0x033BE414 BL 0x3314A68
	0x033BE418 B 0x33BE458
	0x033BE41C ADRP X0, 0xD6E000
	0x033BE420 LDR X0, [X0 + 0x468]
	0x033BE424 B 0x33BE430
	0x033BE428 ADRP X0, 0xD6E000
	0x033BE42C LDR X0, [X0 + 0x470]
	0x033BE430 BL 0x1C16D08
	0x033BE434 MOV X19, X0
	0x033BE438 ADRP X0, 0xD5E000
	0x033BE43C LDR X0, [X0 + 0x30]
	0x033BE440 BL 0x1C16D08
	0x033BE444 BL 0x1C16F10
	0x033BE448 MOV X1, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1020000
	006 Move W8, [X21+514]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xD5F000
	014 Move X0, [X0+1256]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+514], W8
	018 Compare X20, 0
	019 JumpIfEqual {56}
	020 Move X9, 0xD5F000
	021 Move X9, [X9+1256]
	022 Move X8, [X20]
	023 Move X0, [X9]
	024 Move W10, [X8+304]
	025 Move W9, [X0+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X20, X31
	028 Move X8, [X8+200]
	029 Add X8, X8, X9
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction CSEL not yet implemented."
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfEqual {47}
	036 Compare X20, 0
	037 JumpIfEqual {50}
	038 Move X0, X19
	039 Move X1, X20
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X2, X31
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Call RuntimeTypeHandle.IsSubclassOf, X0, X1
	046 Return X0
	047 Call 0x1C17DFC
	048 Compare X20, 0
	049 JumpIfNotEqual {38}
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move W0, W31
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Return X0
	056 Move X0, 0xD3B000
	057 Move X0, [X0+1320]
	058 Call 0x1C17D08
	059 Call 0x1C17F10
	060 Move X19, X0
	061 Move X0, 0xD3E000
	062 Move X0, [X0+1512]
	063 Call 0x1C17D08
	064 Move X1, X0
	065 Move X0, X19
	066 Move X2, X31
	067 Call ArgumentNullException..ctor, X0, X1
	068 Move X0, 0xD6F000
	069 Move X0, [X0+1056]
	070 Call 0x1C17D08
	071 Move X1, X0
	072 Move X0, X19
	073 Call 0x1C17DEC

Method: System.Reflection.MethodInfo GetMethodImpl(System.String name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConv, System.Type[] types, System.Reflection.ParameterModifier[] modifiers)

Disassembly:
	0x033BE44C MOV X2, X31
	0x033BE450 MOV X20, X0
	0x033BE454 BL 0x339ECD8
	0x033BE458 ADRP X0, 0xD6E000
	0x033BE45C LDR X0, [X0 + 0x478]
	0x033BE460 BL 0x1C16D08
	0x033BE464 MOV X1, X0
	0x033BE468 MOV X0, X20
	0x033BE46C BL 0x1C16DEC
	0x033BE470 ADRP X0, 0xD3A000
	0x033BE474 LDR X0, [X0 + 0x528]
	0x033BE478 BL 0x1C16D08

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move X7, X6
	004 Move X6, X5
	005 Move W5, W4
	006 Move X4, X3
	007 Move W3, W2
	008 Move TEMP, 0
	009 Not TEMP
	010 Move W2, TEMP
	011 Call RuntimeType.GetMethodImplCommon, X0, X1, X2, X3, X4, X5, X6, X7
	012 Move X30, [X31+16]
	013 Add X31, X31, 32
	014 Return X0

Method: System.Reflection.MethodInfo GetMethodImplCommon(System.String name, System.Int32 genericParameterCount, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConv, System.Type[] types, System.Reflection.ParameterModifier[] modifiers)

Disassembly:
	0x033BE47C BL 0x1C16F10
	0x033BE480 MOV X19, X0
	0x033BE484 ADRP X0, 0xD6E000
	0x033BE488 LDR X0, [X0 + 0x480]
	0x033BE48C B 0x33BE4AC
	0x033BE490 ADRP X0, 0xD3A000
	0x033BE494 LDR X0, [X0 + 0x528]
	0x033BE498 BL 0x1C16D08
	0x033BE49C BL 0x1C16F10
	0x033BE4A0 MOV X19, X0
	0x033BE4A4 ADRP X0, 0xD6E000
	0x033BE4A8 LDR X0, [X0 + 0x488]
	0x033BE4AC BL 0x1C16D08
	0x033BE4B0 MOV X1, X0
	0x033BE4B4 MOV X0, X19
	0x033BE4B8 MOV X2, X31
	0x033BE4BC BL 0x330E100
	0x033BE4C0 ADRP X0, 0xD6E000
	0x033BE4C4 LDR X0, [X0 + 0x478]
	0x033BE4C8 BL 0x1C16D08
	0x033BE4CC MOV X1, X0
	0x033BE4D0 MOV X0, X19
	0x033BE4D4 BL 0x1C16DEC
	0x033BE4D8 ADRP X0, 0xD6E000
	0x033BE4DC LDR X0, [X0 + 0x490]
	0x033BE4E0 BL 0x1C16D08
	0x033BE4E4 MOV X19, X0
	0x033BE4E8 ADRP X0, 0xD3D000
	0x033BE4EC LDR X0, [X0 + 0x578]
	0x033BE4F0 BL 0x1C16D08
	0x033BE4F4 BL 0x1C16F10
	0x033BE4F8 MOV X20, X0
	0x033BE4FC ADRP X0, 0xD6E000
	0x033BE500 LDR X0, [X0 + 0x488]
	0x033BE504 BL 0x1C16D08
	0x033BE508 MOV X2, X0
	0x033BE50C MOV X0, X20
	0x033BE510 MOV X1, X19
	0x033BE514 MOV X3, X31
	0x033BE518 BL 0x330E16C
	0x033BE51C B 0x33BE458
	0x033BE520 B 0x1C25764
	0x033BE524 B 0x1C8827C
	0x033BE528 STR X30, [X31 - 0x20]!
	0x033BE52C STP X20, X19, [X31 + 0x10]
	0x033BE530 ADRP X20, 0x101F000
	0x033BE534 LDRB W8, [X20 + 0x20B]
	0x033BE538 MOV X19, X0
	0x033BE53C TBNZ X8, 0x0, 0x33BE554
	0x033BE540 ADRP X0, 0xD35000
	0x033BE544 LDR X0, [X0 + 0x6C0]
	0x033BE548 BL 0x1C16CF4
	0x033BE54C MOVZ W8, 0x1
	0x033BE550 STRB W8, [X20 + 0x20B]
	0x033BE554 LDR X8, [X19 + 0x10]
	0x033BE558 CBZ X8, 0x33BE59C
	0x033BE55C ADRP X8, 0xD35000
	0x033BE560 LDR X8, [X8 + 0x6C0]
	0x033BE564 LDR X19, [X19]
	0x033BE568 LDR X0, [X8]
	0x033BE56C LDR W8, [X0 + 0xE0]
	0x033BE570 CBNZ W8, 0x33BE578
	0x033BE574 BL 0x1C16DFC
	0x033BE578 MOV X0, X19
	0x033BE57C MOV X1, X31
	0x033BE580 BL 0x338C698
	0x033BE584 CBZ X0, 0x33BE5AC
	0x033BE588 LDR X8, [X0]
	0x033BE58C LDP X20, X19, [X31 + 0x10]
	0x033BE590 LDP X2, X1, [X8 + 0x158]
	0x033BE594 LDR X30, [X31], #0x20
	0x033BE598 BR X2
	0x033BE59C LDP X20, X19, [X31 + 0x10]
	0x033BE5A0 MOV W0, W31
	0x033BE5A4 LDR X30, [X31], #0x20
	0x033BE5A8 RET
	0x033BE5AC BL 0x1C16F20
	0x033BE5B0 CMP X0, X1
	0x033BE5B4 CSET W0, EQ
	0x033BE5B8 RET
	0x033BE5BC STR X30, [X31 - 0x20]!
	0x033BE5C0 STP X20, X19, [X31 + 0x10]
	0x033BE5C4 ADRP X0, 0xD6E000
	0x033BE5C8 LDR X0, [X0 + 0x498]
	0x033BE5CC BL 0x1C16D08
	0x033BE5D0 MOV X19, X0
	0x033BE5D4 ADRP X0, 0xD35000
	0x033BE5D8 LDR X0, [X0 + 0xB40]
	0x033BE5DC BL 0x1C16D08
	0x033BE5E0 BL 0x1C16F10
	0x033BE5E4 MOV X1, X19
	0x033BE5E8 MOV X2, X31
	0x033BE5EC MOV X20, X0
	0x033BE5F0 BL 0x3379A44
	0x033BE5F4 ADRP X0, 0xD6E000
	0x033BE5F8 LDR X0, [X0 + 0x4A0]
	0x033BE5FC BL 0x1C16D08
	0x033BE600 MOV X1, X0
	0x033BE604 MOV X0, X20
	0x033BE608 BL 0x1C16DEC
	0x033BE60C LDR X8, [X0 + 0x8]
	0x033BE610 CBZ X8, 0x33BE61C
	0x033BE614 MOV W0, W31
	0x033BE618 RET
	0x033BE61C LDR X8, [X0 + 0x10]
	0x033BE620 CMP X8, 0x0
	0x033BE624 CSET W0, EQ
	0x033BE628 RET
	0x033BE62C STP X30, X19, [X31 - 0x10]!
	0x033BE630 ADRP X0, 0xD3E000
	0x033BE634 LDR X0, [X0 + 0x758]
	0x033BE638 BL 0x1C16D08
	0x033BE63C BL 0x1C16F10
	0x033BE640 MOV X19, X0
	0x033BE644 ADRP X0, 0xD6E000
	0x033BE648 LDR X0, [X0 + 0x4A8]
	0x033BE64C BL 0x1C16D08
	0x033BE650 MOV X1, X0
	0x033BE654 MOV X0, X19
	0x033BE658 MOV X2, X31
	0x033BE65C BL 0x33802E4
	0x033BE660 ADRP X0, 0xD6E000
	0x033BE664 LDR X0, [X0 + 0x4B0]
	0x033BE668 BL 0x1C16D08
	0x033BE66C MOV X1, X0
	0x033BE670 MOV X0, X19
	0x033BE674 BL 0x1C16DEC
	0x033BE678 STP X30, X21, [X31 - 0x20]!
	0x033BE67C STP X20, X19, [X31 + 0x10]
	0x033BE680 ADRP X20, 0x101F000
	0x033BE684 ADRP X21, 0xD6E000
	0x033BE688 LDRB W8, [X20 + 0x20C]
	0x033BE68C LDR X21, [X21 + 0x4B8]
	0x033BE690 MOV X19, X0
	0x033BE694 TBNZ X8, 0x0, 0x33BE6AC
	0x033BE698 ADRP X0, 0xD6E000
	0x033BE69C LDR X0, [X0 + 0x4B8]
	0x033BE6A0 BL 0x1C16CF4
	0x033BE6A4 MOVZ W8, 0x1
	0x033BE6A8 STRB W8, [X20 + 0x20C]
	0x033BE6AC LDR X1, [X21]
	0x033BE6B0 MOV X0, X19
	0x033BE6B4 MOV X2, X31
	0x033BE6B8 BL 0x338C8D8
	0x033BE6BC MOV X0, X19
	0x033BE6C0 LDP X20, X19, [X31 + 0x10]
	0x033BE6C4 MOVZ W1, 0x1522
	0x033BE6C8 MOVK W1, 0x80130000
	0x033BE6CC MOV X2, X31
	0x033BE6D0 LDP X30, X21, [X31], #0x20
	0x033BE6D4 B 0x33B3318
	0x033BE6D8 STP X30, X19, [X31 - 0x10]!
	0x033BE6DC MOV X2, X31
	0x033BE6E0 MOV X19, X0
	0x033BE6E4 BL 0x338C8D8
	0x033BE6E8 MOVZ W1, 0x1522
	0x033BE6EC MOVK W1, 0x80130000
	0x033BE6F0 MOV X0, X19
	0x033BE6F4 MOV X2, X31
	0x033BE6F8 LDP X30, X19, [X31], #0x10
	0x033BE6FC B 0x33B3318
	0x033BE700 STP X30, X19, [X31 - 0x10]!
	0x033BE704 MOV X19, X0
	0x033BE708 BL 0x33BE718
	0x033BE70C LDR X0, [X19 + 0x18]
	0x033BE710 LDP X30, X19, [X31], #0x10
	0x033BE714 RET
	0x033BE718 STR X30, [X31 - 0x20]!
	0x033BE71C STP X20, X19, [X31 + 0x10]
	0x033BE720 ADRP X20, 0x101F000
	0x033BE724 LDRB W8, [X20 + 0x20D]
	0x033BE728 MOV X19, X0
	0x033BE72C TBNZ X8, 0x0, 0x33BE768
	0x033BE730 ADRP X0, 0xD37000
	0x033BE734 LDR X0, [X0 + 0xC48]
	0x033BE738 BL 0x1C16CF4
	0x033BE73C ADRP X0, 0xD6E000
	0x033BE740 LDR X0, [X0 + 0x4B8]
	0x033BE744 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+40], X27
	004 Move [X31+48], X26
	005 Move [X31+56], X25
	006 Move [X31+64], X24
	007 Move [X31+72], X23
	008 Move [X31+80], X22
	009 Move [X31+88], X21
	010 Move [X31+96], X20
	011 Move [X31+104], X19
	012 Move X27, 0x1020000
	013 Move W8, [X27+515]
	014 Move X19, X7
	015 Move X20, X6
	016 Move W23, W5
	017 Move X22, X4
	018 Move W21, W3
	019 Move W24, W2
	020 Move X25, X1
	021 Move X26, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {46}
	026 Move X0, 0xD6E000
	027 Move X0, [X0+1336]
	028 Call 0x1C17CF4
	029 Move X0, 0xD6F000
	030 Move X0, [X0+264]
	031 Call 0x1C17CF4
	032 Move X0, 0xD6F000
	033 Move X0, [X0+360]
	034 Call 0x1C17CF4
	035 Move X0, 0xD6F000
	036 Move X0, [X0+1064]
	037 Call 0x1C17CF4
	038 Move X0, 0xD67000
	039 Move X0, [X0+632]
	040 Call 0x1C17CF4
	041 Move X0, 0xD36000
	042 Move X0, [X0+1728]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X27+515], W8
	046 Add X8, X31, 8
	047 Move X0, X26
	048 Move X1, X25
	049 Move W2, W24
	050 Move W3, W21
	051 Move W4, W23
	052 Move X5, X20
	053 Move W6, W31
	054 Move [X31+8], X31
	055 Move [X31+16], X31
	056 Move [X31+24], X31
	057 Call RuntimeType.GetMethodCandidates, X0, X1, X2, X3, X4, X5, X6
	058 Move W8, [X31+24]
	059 Compare W8, 0
	060 JumpIfEqual {119}
	061 Compare X20, 0
	062 JumpIfEqual {66}
	063 Move X8, [X20+24]
	064 Compare X8, 0
	065 JumpIfNotEqual {77}
	066 Move X24, 0xD6F000
	067 Move X24, [X24+1064]
	068 Add X0, X31, 8
	069 Move W1, W31
	070 Move X2, [X24]
	071 Call 0x2EF2B34, X0, X1
	072 Move W8, [X31+24]
	073 Move X23, X0
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Compare X20, 0
	076 JumpIfEqual {138}
	077 Compare X22, 0
	078 JumpIfEqual {84}
	079 Move X8, 0xD6F000
	080 Move X8, [X8+264]
	081 Add X0, X31, 8
	082 Move X1, [X8]
	083 Call 0x2EF2B6C, X0
	084 Move X8, 0xD36000
	085 Move X8, [X8+1728]
	086 Move X0, [X8]
	087 Move W8, [X0+224]
	088 Compare W8, 0
	089 JumpIfNotEqual {91}
	090 Call 0x1C17DFC
	091 Move X0, X31
	092 Call Type.get_DefaultBinder
	093 Move X8, 0xD6F000
	094 Move X8, [X8+264]
	095 Move X22, X0
	096 Add X0, X31, 8
	097 Move X1, [X8]
	098 Call 0x2EF2B6C, X0
	099 Compare X22, 0
	100 JumpIfEqual {201}
	101 Move X8, [X22]
	102 Move X2, X0
	103 Move X0, X22
	104 Move W1, W21
	105 Move X9, [X8+440]
	106 Move X5, [X8+448]
	107 Move X3, X20
	108 Move X4, X19
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Compare X0, 0
	111 JumpIfEqual {119}
	112 Move X8, 0xD67000
	113 Move X8, [X8+632]
	114 Move X9, [X0]
	115 Move X8, [X8]
	116 Move W11, [X9+304]
	117 Move W10, [X8+304]
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X23, X31
	120 Move X0, X23
	121 Move X20, [X31+96]
	122 Move X19, [X31+104]
	123 Move X22, [X31+80]
	124 Move X21, [X31+88]
	125 Move X24, [X31+64]
	126 Move X23, [X31+72]
	127 Move X26, [X31+48]
	128 Move X25, [X31+56]
	129 Move X30, [X31+32]
	130 Move X27, [X31+40]
	131 Add X31, X31, 112
	132 Return X0
	133 Move X9, [X9+200]
	134 Add X9, X9, X10
	135 NotImplemented "Instruction LDUR not yet implemented."
	136 NotImplemented "Instruction CMP not yet implemented."
	137 NotImplemented "Instruction CSEL not yet implemented."
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X21, 0xD6E000
	140 Move X21, [X21+1336]
	141 Move W19, 1
	142 Move X2, [X24]
	143 Add X0, X31, 8
	144 Move W1, W19
	145 Call 0x2EF2B34, X0, X1
	146 Move X8, [X21]
	147 Move X20, X0
	148 Move W9, [X8+224]
	149 Compare W9, 0
	150 JumpIfNotEqual {153}
	151 Move X0, X8
	152 Call 0x1C17DFC
	153 Move X0, X20
	154 Move X1, X23
	155 Call DefaultBinder.CompareMethodSig, X0, X1
	156 Move TEMP, X0
	157 And TEMP, TEMP, 1
	158 Compare TEMP, 1
	159 JumpIfNotEqual {183}
	160 Move W8, [X31+24]
	161 Add W19, W19, 1
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Move X8, 0xD6F000
	164 Move X8, [X8+264]
	165 Add X0, X31, 8
	166 Move X1, [X8]
	167 Call 0x2EF2B6C, X0
	168 Move X8, 0xD6E000
	169 Move X8, [X8+1336]
	170 Move W19, [X31+24]
	171 Move X20, X0
	172 Move X8, [X8]
	173 Move W9, [X8+224]
	174 Compare W9, 0
	175 JumpIfNotEqual {178}
	176 Move X0, X8
	177 Call 0x1C17DFC
	178 Move X0, X20
	179 Move W1, W19
	180 Call DefaultBinder.FindMostDerivedNewSlotMeth, X0, X1
	181 Compare X0, 0
	182 JumpIfNotEqual {112}
	183 Move X0, 0xD68000
	184 Move X0, [X0+1952]
	185 Call 0x1C17D08
	186 Call 0x1C17F10
	187 Move X19, X0
	188 Move X0, 0xD68000
	189 Move X0, [X0+3040]
	190 Call 0x1C17D08
	191 Move X1, X0
	192 Move X0, X19
	193 Move X2, X31
	194 Call AmbiguousMatchException..ctor, X0, X1
	195 Move X0, 0xD6F000
	196 Move X0, [X0+1072]
	197 Call 0x1C17D08
	198 Move X1, X0
	199 Move X0, X19
	200 Call 0x1C17DEC
	201 Call 0x1C17F20

Method: System.RuntimeType/ListBuilder`1<System.Reflection.MethodInfo> GetMethodCandidates(System.String name, System.Int32 genericParameterCount, System.Reflection.BindingFlags bindingAttr, System.Reflection.CallingConventions callConv, System.Type[] types, System.Boolean allowPrefixLookup)

Disassembly:
	0x033BE748 ADRP X0, 0xD69000
	0x033BE74C LDR X0, [X0 + 0x428]
	0x033BE750 BL 0x1C16CF4
	0x033BE754 ADRP X0, 0xD6E000
	0x033BE758 LDR X0, [X0 + 0x4C0]
	0x033BE75C BL 0x1C16CF4
	0x033BE760 MOVZ W8, 0x1
	0x033BE764 STRB W8, [X20 + 0x20D]
	0x033BE768 LDR X8, [X19 + 0x18]
	0x033BE76C CBNZ X8, 0x33BE7E0
	0x033BE770 LDR X8, [X19 + 0x90]
	0x033BE774 CBNZ X8, 0x33BE780
	0x033BE778 LDR W9, [X19 + 0xA8]
	0x033BE77C CBZ W9, 0x33BE804
	0x033BE780 LDR X9, [X19 + 0x98]
	0x033BE784 CBZ X9, 0x33BE7EC
	0x033BE788 CBNZ X8, 0x33BE79C
	0x033BE78C ADRP X8, 0xD69000
	0x033BE790 LDR X8, [X8 + 0x428]
	0x033BE794 LDR X8, [X8]
	0x033BE798 STR X8, [X19 + 0x90]
	0x033BE79C ADRP X8, 0xD37000
	0x033BE7A0 LDR X8, [X8 + 0xC48]
	0x033BE7A4 LDR X0, [X8]
	0x033BE7A8 ADRP X8, 0xD6E000
	0x033BE7AC LDR X8, [X8 + 0x4C0]
	0x033BE7B0 LDR W9, [X0 + 0xE0]
	0x033BE7B4 LDR X20, [X8]
	0x033BE7B8 CBNZ W9, 0x33BE7C0
	0x033BE7BC BL 0x1C16DFC
	0x033BE7C0 MOV X0, X31
	0x033BE7C4 BL 0x33387A0
	0x033BE7C8 LDP X2, X3, [X19 + 0x90]
	0x033BE7CC LDR X4, [X19 + 0xA0]
	0x033BE7D0 MOV X1, X20
	0x033BE7D4 MOV X5, X31
	0x033BE7D8 BL 0x3227DB0
	0x033BE7DC STR X0, [X19 + 0x18]
	0x033BE7E0 LDP X20, X19, [X31 + 0x10]
	0x033BE7E4 LDR X30, [X31], #0x20
	0x033BE7E8 RET
	0x033BE7EC ADRP X9, 0xD69000
	0x033BE7F0 LDR X9, [X9 + 0x428]
	0x033BE7F4 LDR X9, [X9]
	0x033BE7F8 STR X9, [X19 + 0x98]
	0x033BE7FC CBNZ X8, 0x33BE79C
	0x033BE800 B 0x33BE78C
	0x033BE804 ADRP X8, 0xD6E000
	0x033BE808 LDR X8, [X8 + 0x4B8]
	0x033BE80C LDR X0, [X8]
	0x033BE810 B 0x33BE7DC
	0x033BE814 MOV X3, X31
	0x033BE818 MOV W4, W31
	0x033BE81C B 0x33BE820
	0x033BE820 STP X30, X23, [X31 - 0x30]!
	0x033BE824 STP X22, X21, [X31 + 0x10]
	0x033BE828 STP X20, X19, [X31 + 0x20]
	0x033BE82C MOV X21, X2
	0x033BE830 MOV X22, X1
	0x033BE834 MOV X1, X31
	0x033BE838 MOV X2, X31
	0x033BE83C MOV W19, W4
	0x033BE840 MOV X20, X3
	0x033BE844 MOV X23, X0
	0x033BE848 BL 0x338C8D8
	0x033BE84C MOVZ W1, 0x1522
	0x033BE850 MOVK W1, 0x80130000
	0x033BE854 MOV X0, X23
	0x033BE858 MOV X2, X31
	0x033BE85C BL 0x33B3318
	0x033BE860 STP X22, X21, [X23 + 0x90]
	0x033BE864 STR X20, [X23 + 0xA0]
	0x033BE868 STR W19, [X23 + 0xA8]
	0x033BE86C LDP X20, X19, [X31 + 0x20]
	0x033BE870 LDP X22, X21, [X31 + 0x10]
	0x033BE874 MOV X0, X23
	0x033BE878 LDP X30, X23, [X31], #0x30
	0x033BE87C B 0x33BE718
	0x033BE880 STP X30, X23, [X31 - 0x30]!
	0x033BE884 STP X22, X21, [X31 + 0x10]
	0x033BE888 STP X20, X19, [X31 + 0x20]
	0x033BE88C ADRP X23, 0x101F000
	0x033BE890 LDRB W8, [X23 + 0x20E]
	0x033BE894 MOV X21, X3
	0x033BE898 MOV X22, X2
	0x033BE89C MOV X20, X1
	0x033BE8A0 MOV X19, X0
	0x033BE8A4 TBNZ X8, 0x0, 0x33BE8E0
	0x033BE8A8 ADRP X0, 0xD6E000
	0x033BE8AC LDR X0, [X0 + 0x4C8]
	0x033BE8B0 BL 0x1C16CF4
	0x033BE8B4 ADRP X0, 0xD6E000
	0x033BE8B8 LDR X0, [X0 + 0x4D0]
	0x033BE8BC BL 0x1C16CF4
	0x033BE8C0 ADRP X0, 0xD6E000
	0x033BE8C4 LDR X0, [X0 + 0x4D8]
	0x033BE8C8 BL 0x1C16CF4
	0x033BE8CC ADRP X0, 0xD6E000
	0x033BE8D0 LDR X0, [X0 + 0x4E0]
	0x033BE8D4 BL 0x1C16CF4
	0x033BE8D8 MOVZ W8, 0x1
	0x033BE8DC STRB W8, [X23 + 0x20E]
	0x033BE8E0 MOV X0, X19
	0x033BE8E4 MOV X1, X20
	0x033BE8E8 MOV X2, X22
	0x033BE8EC MOV X3, X21
	0x033BE8F0 MOV X4, X31
	0x033BE8F4 BL 0x338CA74
	0x033BE8F8 CBZ X20, 0x33BE97C
	0x033BE8FC ADRP X8, 0xD6E000
	0x033BE900 LDR X8, [X8 + 0x4C8]
	0x033BE904 ADRP X21, 0xD6E000
	0x033BE908 ADRP X22, 0xD6E000
	0x033BE90C ADRP X23, 0xD6E000
	0x033BE910 LDR X1, [X8]
	0x033BE914 LDR X21, [X21 + 0x4E0]
	0x033BE918 LDR X22, [X22 + 0x4D8]
	0x033BE91C LDR X23, [X23 + 0x4D0]
	0x033BE920 MOV X0, X20
	0x033BE924 MOV X2, X31
	0x033BE928 BL 0x32A9F64
	0x033BE92C STR X0, [X19 + 0x90]
	0x033BE930 LDR X1, [X21]
	0x033BE934 MOV X0, X20
	0x033BE938 MOV X2, X31
	0x033BE93C BL 0x32A9F64
	0x033BE940 STR X0, [X19 + 0x98]
	0x033BE944 LDR X1, [X22]
	0x033BE948 MOV X0, X20
	0x033BE94C MOV X2, X31
	0x033BE950 BL 0x32A9F64

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move [X31], X8
	015 Move X21, 0x1020000
	016 Move [X31+56], X1
	017 Move X27, 0xD5F000
	018 Move W8, [X21+516]
	019 Move X27, [X27+1256]
	020 Move W24, W6
	021 Move X19, X5
	022 Move W20, W4
	023 Move W22, W3
	024 Move W23, W2
	025 Move X25, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {41}
	030 Move X0, 0xD6F000
	031 Move X0, [X0+112]
	032 Call 0x1C17CF4
	033 Move X0, 0xD6F000
	034 Move X0, [X0+120]
	035 Call 0x1C17CF4
	036 Move X0, 0xD5F000
	037 Move X0, [X0+1256]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X21+516], W8
	041 Move X0, [X27]
	042 Move [X31+52], W31
	043 Move [X31+48], W31
	044 Move [X31+44], W31
	045 Move [X31+16], X31
	046 Move [X31+24], X31
	047 Move [X31+32], X31
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 And W2, W24, 1
	053 Add X1, X31, 56
	054 Add X3, X31, 52
	055 Add X4, X31, 48
	056 Add X5, X31, 44
	057 Move W0, W22
	058 Call RuntimeType.FilterHelper, X0, X1, X2, X3, X4, X5
	059 Move X24, [X31+56]
	060 Move W3, [X31+44]
	061 Move X0, X25
	062 Move W2, W22
	063 Move X1, X24
	064 Move X4, X25
	065 Call RuntimeType.GetMethodsByName, X0, X1, X2, X3, X4
	066 Compare X0, 0
	067 JumpIfEqual {154}
	068 Move X8, 0xD6F000
	069 Move X8, [X8+120]
	070 Move W1, [X0+24]
	071 Move X25, X0
	072 Add X0, X31, 16
	073 Move X2, [X8]
	074 Call 0x2EF2B28, X0, X1
	075 Move X8, [X25+24]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move W29, [X31+52]
	078 Move W9, [X31+48]
	079 Move X28, X31
	080 And X8, X8, 0
	081 Add X21, X25, 32
	082 Move [X31+12], W9
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X26, [X21]
	085 Add W31, W23, 1
	086 Compare X26, 0
	087 JumpIfEqual {154}
	088 Move X8, [X26]
	089 Move X0, X26
	090 Move X9, [X8+1016]
	091 Move X1, [X8+1024]
	092 NotImplemented "Instruction BLR not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X0, [X27]
	095 Move W8, [X0+224]
	096 Compare W8, 0
	097 JumpIfNotEqual {99}
	098 Call 0x1C17DFC
	099 Move X0, X26
	100 Move W1, W22
	101 Move W2, W20
	102 Move X3, X19
	103 Call RuntimeType.FilterApplyMethodInfo, X0, X1, X2, X3
	104 Move TEMP, X0
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfNotEqual {131}
	108 Compare W29, 0
	109 JumpIfEqual {125}
	110 Move X0, [X27]
	111 Move W8, [X0+224]
	112 Compare W8, 0
	113 JumpIfNotEqual {115}
	114 Call 0x1C17DFC
	115 Move W8, [X31+12]
	116 Move X0, X26
	117 Move X1, X24
	118 NotImplemented "Instruction CMP not yet implemented."
	119 NotImplemented "Instruction CSET not yet implemented."
	120 Call RuntimeType.FilterApplyPrefixLookup, X0, X1, X2
	121 Move TEMP, X0
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfNotEqual {131}
	125 Move X8, 0xD6F000
	126 Move X8, [X8+112]
	127 Add X0, X31, 16
	128 Move X1, X26
	129 Move X2, [X8]
	130 Call 0x2EF2D14, X0, X1
	131 Move W8, [X25+24]
	132 Add X28, X28, 1
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move X8, [X31+32]
	135 Move V0, [X31+1]
	136 Move X9, [X31]
	137 Move X20, [X31+144]
	138 Move X19, [X31+152]
	139 Move X22, [X31+128]
	140 Move X21, [X31+136]
	141 Move X24, [X31+112]
	142 Move X23, [X31+120]
	143 Move X26, [X31+96]
	144 Move X25, [X31+104]
	145 Move X28, [X31+80]
	146 Move X27, [X31+88]
	147 Move X29, [X31+64]
	148 Move X30, [X31+72]
	149 Move [X9+16], X8
	150 Move [X9], V0
	151 Add X31, X31, 160
	152 Return X0
	153 Call 0x1C17F28
	154 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x033BE954 STR X0, [X19 + 0xA0]
	0x033BE958 LDR X1, [X23]
	0x033BE95C MOV X0, X20
	0x033BE960 MOV X2, X31
	0x033BE964 BL 0x32A9B08
	0x033BE968 STR W0, [X19 + 0xA8]
	0x033BE96C LDP X20, X19, [X31 + 0x20]
	0x033BE970 LDP X22, X21, [X31 + 0x10]
	0x033BE974 LDP X30, X23, [X31], #0x30
	0x033BE978 RET
	0x033BE97C ADRP X0, 0xD3A000
	0x033BE980 LDR X0, [X0 + 0x528]
	0x033BE984 BL 0x1C16D08
	0x033BE988 BL 0x1C16F10
	0x033BE98C MOV X19, X0
	0x033BE990 ADRP X0, 0xD5F000
	0x033BE994 LDR X0, [X0 + 0x2D8]
	0x033BE998 BL 0x1C16D08
	0x033BE99C MOV X1, X0
	0x033BE9A0 MOV X0, X19
	0x033BE9A4 MOV X2, X31
	0x033BE9A8 BL 0x330E100
	0x033BE9AC ADRP X0, 0xD6E000
	0x033BE9B0 LDR X0, [X0 + 0x4E8]
	0x033BE9B4 BL 0x1C16D08
	0x033BE9B8 MOV X1, X0
	0x033BE9BC MOV X0, X19
	0x033BE9C0 BL 0x1C16DEC
	0x033BE9C4 STR X30, [X31 - 0x60]!
	0x033BE9C8 STP X28, X27, [X31 + 0x10]
	0x033BE9CC STP X26, X25, [X31 + 0x20]
	0x033BE9D0 STP X24, X23, [X31 + 0x30]
	0x033BE9D4 STP X22, X21, [X31 + 0x40]
	0x033BE9D8 STP X20, X19, [X31 + 0x50]
	0x033BE9DC ADRP X23, 0x101F000
	0x033BE9E0 LDRB W8, [X23 + 0x20F]
	0x033BE9E4 MOV X21, X3
	0x033BE9E8 MOV X22, X2
	0x033BE9EC MOV X19, X1
	0x033BE9F0 MOV X20, X0
	0x033BE9F4 TBNZ X8, 0x0, 0x33BEA48
	0x033BE9F8 ADRP X0, 0xD5D000
	0x033BE9FC LDR X0, [X0 + 0xB60]
	0x033BEA00 BL 0x1C16CF4
	0x033BEA04 ADRP X0, 0xD35000
	0x033BEA08 LDR X0, [X0 + 0x6C0]
	0x033BEA0C BL 0x1C16CF4
	0x033BEA10 ADRP X0, 0xD6E000
	0x033BEA14 LDR X0, [X0 + 0x4C8]
	0x033BEA18 BL 0x1C16CF4
	0x033BEA1C ADRP X0, 0xD6E000
	0x033BEA20 LDR X0, [X0 + 0x4D0]
	0x033BEA24 BL 0x1C16CF4
	0x033BEA28 ADRP X0, 0xD6E000
	0x033BEA2C LDR X0, [X0 + 0x4D8]
	0x033BEA30 BL 0x1C16CF4
	0x033BEA34 ADRP X0, 0xD6E000
	0x033BEA38 LDR X0, [X0 + 0x4E0]
	0x033BEA3C BL 0x1C16CF4
	0x033BEA40 MOVZ W8, 0x1
	0x033BEA44 STRB W8, [X23 + 0x20F]
	0x033BEA48 CBZ X19, 0x33BEB4C
	0x033BEA4C ADRP X25, 0xD5D000
	0x033BEA50 ADRP X28, 0xD35000
	0x033BEA54 ADRP X27, 0xD6E000
	0x033BEA58 ADRP X26, 0xD6E000
	0x033BEA5C ADRP X24, 0xD6E000
	0x033BEA60 ADRP X23, 0xD6E000
	0x033BEA64 LDR X25, [X25 + 0xB60]
	0x033BEA68 LDR X28, [X28 + 0x6C0]
	0x033BEA6C LDR X27, [X27 + 0x4C8]
	0x033BEA70 LDR X26, [X26 + 0x4E0]
	0x033BEA74 LDR X24, [X24 + 0x4D8]
	0x033BEA78 LDR X23, [X23 + 0x4D0]
	0x033BEA7C MOV X0, X20
	0x033BEA80 MOV X1, X19
	0x033BEA84 MOV X2, X22
	0x033BEA88 MOV X3, X21
	0x033BEA8C MOV X4, X31
	0x033BEA90 BL 0x33B3620
	0x033BEA94 LDR X0, [X28]
	0x033BEA98 LDR X21, [X20 + 0x90]
	0x033BEA9C LDR X22, [X25]
	0x033BEAA0 LDR W8, [X0 + 0xE0]
	0x033BEAA4 CBNZ W8, 0x33BEAAC
	0x033BEAA8 BL 0x1C16DFC
	0x033BEAAC MOV X0, X22
	0x033BEAB0 MOV X1, X31
	0x033BEAB4 BL 0x338C698
	0x033BEAB8 LDR X1, [X27]
	0x033BEABC MOV X3, X0
	0x033BEAC0 MOV X0, X19
	0x033BEAC4 MOV X2, X21
	0x033BEAC8 MOV X4, X31
	0x033BEACC BL 0x32A89BC
	0x033BEAD0 LDR X0, [X25]
	0x033BEAD4 LDR X21, [X20 + 0x98]
	0x033BEAD8 MOV X1, X31
	0x033BEADC BL 0x338C698
	0x033BEAE0 LDR X1, [X26]
	0x033BEAE4 MOV X3, X0
	0x033BEAE8 MOV X0, X19
	0x033BEAEC MOV X2, X21
	0x033BEAF0 MOV X4, X31
	0x033BEAF4 BL 0x32A89BC
	0x033BEAF8 LDR X0, [X25]
	0x033BEAFC LDR X21, [X20 + 0xA0]
	0x033BEB00 MOV X1, X31
	0x033BEB04 BL 0x338C698
	0x033BEB08 LDR X1, [X24]
	0x033BEB0C MOV X3, X0
	0x033BEB10 MOV X0, X19
	0x033BEB14 MOV X2, X21
	0x033BEB18 MOV X4, X31
	0x033BEB1C BL 0x32A89BC
	0x033BEB20 LDR W2, [X20 + 0xA8]
	0x033BEB24 LDR X1, [X23]
	0x033BEB28 MOV X0, X19
	0x033BEB2C LDP X20, X19, [X31 + 0x50]
	0x033BEB30 LDP X22, X21, [X31 + 0x40]
	0x033BEB34 LDP X24, X23, [X31 + 0x30]
	0x033BEB38 LDP X26, X25, [X31 + 0x20]
	0x033BEB3C LDP X28, X27, [X31 + 0x10]
	0x033BEB40 MOV X3, X31
	0x033BEB44 LDR X30, [X31], #0x60
	0x033BEB48 B 0x32A8F28
	0x033BEB4C ADRP X0, 0xD3A000
	0x033BEB50 LDR X0, [X0 + 0x528]
	0x033BEB54 BL 0x1C16D08
	0x033BEB58 BL 0x1C16F10
	0x033BEB5C MOV X19, X0
	0x033BEB60 ADRP X0, 0xD5F000
	0x033BEB64 LDR X0, [X0 + 0x2D8]
	0x033BEB68 BL 0x1C16D08
	0x033BEB6C MOV X1, X0
	0x033BEB70 MOV X0, X19
	0x033BEB74 MOV X2, X31
	0x033BEB78 BL 0x330E100
	0x033BEB7C ADRP X0, 0xD6E000
	0x033BEB80 LDR X0, [X0 + 0x4F0]
	0x033BEB84 BL 0x1C16D08
	0x033BEB88 MOV X1, X0
	0x033BEB8C MOV X0, X19
	0x033BEB90 BL 0x1C16DEC
	0x033BEB94 STP X30, X27, [X31 - 0x50]!
	0x033BEB98 STP X26, X25, [X31 + 0x10]
	0x033BEB9C STP X24, X23, [X31 + 0x20]
	0x033BEBA0 STP X22, X21, [X31 + 0x30]
	0x033BEBA4 STP X20, X19, [X31 + 0x40]
	0x033BEBA8 ADRP X22, 0x101F000
	0x033BEBAC ADRP X23, 0xD36000
	0x033BEBB0 ADRP X21, 0xD39000
	0x033BEBB4 LDRB W8, [X22 + 0x210]
	0x033BEBB8 LDR X23, [X23 + 0xE30]
	0x033BEBBC LDR X21, [X21 + 0xB70]
	0x033BEBC0 MOV X19, X1
	0x033BEBC4 MOV X20, X0
	0x033BEBC8 TBNZ X8, 0x0, 0x33BEC34
	0x033BEBCC ADRP X0, 0xD67000
	0x033BEBD0 LDR X0, [X0 + 0x150]
	0x033BEBD4 BL 0x1C16CF4
	0x033BEBD8 ADRP X0, 0xD36000
	0x033BEBDC LDR X0, [X0 + 0xE10]
	0x033BEBE0 BL 0x1C16CF4
	0x033BEBE4 ADRP X0, 0xD36000
	0x033BEBE8 LDR X0, [X0 + 0xE18]
	0x033BEBEC BL 0x1C16CF4
	0x033BEBF0 ADRP X0, 0xD39000
	0x033BEBF4 LDR X0, [X0 + 0xB70]
	0x033BEBF8 BL 0x1C16CF4
	0x033BEBFC ADRP X0, 0xD36000
	0x033BEC00 LDR X0, [X0 + 0xE30]
	0x033BEC04 BL 0x1C16CF4
	0x033BEC08 ADRP X0, 0xD5E000
	0x033BEC0C LDR X0, [X0 + 0x4E8]
	0x033BEC10 BL 0x1C16CF4
	0x033BEC14 ADRP X0, 0xD35000
	0x033BEC18 LDR X0, [X0 + 0x6C0]
	0x033BEC1C BL 0x1C16CF4
	0x033BEC20 ADRP X0, 0xD6E000
	0x033BEC24 LDR X0, [X0 + 0x4F8]
	0x033BEC28 BL 0x1C16CF4
	0x033BEC2C MOVZ W8, 0x1
	0x033BEC30 STRB W8, [X22 + 0x210]
	0x033BEC34 LDR X0, [X23]
	0x033BEC38 BL 0x1C16F10
	0x033BEC3C LDR X1, [X21]
	0x033BEC40 MOV X21, X0
	0x033BEC44 BL 0x2FDBF14
	0x033BEC48 CBZ X19, 0x33BEF5C
	0x033BEC4C MOV X0, X19
	0x033BEC50 MOV X1, X31
	0x033BEC54 BL 0x3396018
	0x033BEC58 TBZ X0, 0x0, 0x33BEECC
	0x033BEC5C ADRP X22, 0xD36000
	0x033BEC60 ADRP X24, 0xD5E000
	0x033BEC64 LDR X22, [X22 + 0xE10]
	0x033BEC68 LDR X24, [X24 + 0x4E8]
	0x033BEC6C MOVZ W23, 0x3
	0x033BEC70 MOVZ W25, 0x2
	0x033BEC74 MOVZ W26, 0x1
	0x033BEC78 MOVZ W27, 0x4
	0x033BEC7C LDR X8, [X19]
	0x033BEC80 MOV X0, X19
	0x033BEC84 LDR X9, [X8 + 0x908]
	0x033BEC88 LDR X1, [X8 + 0x910]
	0x033BEC8C BLR X9
	0x033BEC90 TBZ X0, 0x0, 0x33BECD4
	0x033BEC94 CBZ X21, 0x33BEF5C
	0x033BEC98 LDR W10, [X21 + 0x1C]
	0x033BEC9C LDR X8, [X21 + 0x10]
	0x033BECA0 LDR X9, [X22]
	0x033BECA4 ADD W10, W10, 0x1
	0x033BECA8 STR W10, [X21 + 0x1C]
	0x033BECAC CBZ X8, 0x33BEF5C
	0x033BECB0 LDRSW X10, [X21 + 0x18]
	0x033BECB4 LDR W11, [X8 + 0x18]
	0x033BECB8 CMP W10, W11
	0x033BECBC B.CS 0x33BED98
	0x033BECC0 ADD W9, W10, 0x1
	0x033BECC4 ADD X8, X8, X10, 0x2, LSL
	0x033BECC8 STR W9, [X21 + 0x18]
	0x033BECCC STR W23, [X8 + 0x20]
	0x033BECD0 B 0x33BEE74
	0x033BECD4 MOV X0, X19
	0x033BECD8 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1020000
	006 Move X19, 0xD6E000
	007 Move X20, 0xD36000
	008 Move W8, [X21+517]
	009 Move X19, [X19+1160]
	010 Move X20, [X20+1728]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {41}
	015 Move X0, 0xD68000
	016 Move X0, [X0+3080]
	017 Call 0x1C17CF4
	018 Move X0, 0xD6B000
	019 Move X0, [X0+720]
	020 Call 0x1C17CF4
	021 Move X0, 0xD40000
	022 Move X0, [X0+2408]
	023 Call 0x1C17CF4
	024 Move X0, 0xD5F000
	025 Move X0, [X0+1256]
	026 Call 0x1C17CF4
	027 Move X0, 0xD5E000
	028 Move X0, [X0+2912]
	029 Call 0x1C17CF4
	030 Move X0, 0xD36000
	031 Move X0, [X0+1728]
	032 Call 0x1C17CF4
	033 Move X0, 0xD6F000
	034 Move X0, [X0+840]
	035 Call 0x1C17CF4
	036 Move X0, 0xD6E000
	037 Move X0, [X0+1160]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X21+517], W8
	041 Move X0, [X20]
	042 Move X20, 0xD5F000
	043 Move X19, [X19]
	044 Move W8, [X0+224]
	045 Move X20, [X20+1256]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Move X0, X19
	050 Move X1, X31
	051 Call Type.GetTypeFromHandle, X0
	052 Move X1, [X20]
	053 Compare X0, 0
	054 JumpIfEqual {74}
	055 Move X8, [X0]
	056 Move W9, [X1+304]
	057 Move W10, [X8+304]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X8, [X8+200]
	060 Add X8, X8, X9
	061 NotImplemented "Instruction LDUR not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X8, [X1+184]
	064 Move [X8], X0
	065 Move X8, [X0]
	066 Move X1, [X20]
	067 Move W10, [X8+304]
	068 Move W9, [X1+304]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X8, [X8+200]
	071 Add X8, X8, X9
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X8, [X1+184]
	075 Move [X8], X0
	076 Move X8, 0xD6B000
	077 Move X8, [X8+720]
	078 Move X1, X31
	079 Move X0, [X8]
	080 Call Type.GetTypeFromHandle, X0
	081 Move X1, [X20]
	082 Compare X0, 0
	083 JumpIfEqual {100}
	084 Move X9, [X0]
	085 Move W8, [X1+304]
	086 Move W10, [X9+304]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X10, [X9+200]
	089 Subtract X9, X8, 1
	090 Move X10, [X10]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X10, [X1+184]
	093 Move [X10+8], X0
	094 Move X10, [X0]
	095 Move W11, [X10+304]
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move X8, [X10+200]
	098 Move X8, [X8]
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X8, [X1+184]
	101 Move [X8+8], X0
	102 Move X8, 0xD40000
	103 Move X8, [X8+2408]
	104 Move X1, X31
	105 Move X0, [X8]
	106 Call Type.GetTypeFromHandle, X0
	107 Move X1, [X20]
	108 Compare X0, 0
	109 JumpIfEqual {126}
	110 Move X9, [X0]
	111 Move W8, [X1+304]
	112 Move W10, [X9+304]
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move X10, [X9+200]
	115 Subtract X9, X8, 1
	116 Move X10, [X10]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move X10, [X1+184]
	119 Move [X10+16], X0
	120 Move X10, [X0]
	121 Move W11, [X10+304]
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move X8, [X10+200]
	124 Move X8, [X8]
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move X8, [X1+184]
	127 Move [X8+16], X0
	128 Move X8, 0xD5E000
	129 Move X8, [X8+2912]
	130 Move X1, X31
	131 Move X0, [X8]
	132 Call Type.GetTypeFromHandle, X0
	133 Move X1, [X20]
	134 Compare X0, 0
	135 JumpIfEqual {152}
	136 Move X9, [X0]
	137 Move W8, [X1+304]
	138 Move W10, [X9+304]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move X10, [X9+200]
	141 Subtract X9, X8, 1
	142 Move X10, [X10]
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move X10, [X1+184]
	145 Move [X10+24], X0
	146 Move X10, [X0]
	147 Move W11, [X10+304]
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Move X8, [X10+200]
	150 Move X8, [X8]
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move X8, [X1+184]
	153 Move [X8+24], X0
	154 Move X8, 0xD68000
	155 Move X8, [X8+3080]
	156 Move X1, X31
	157 Move X0, [X8]
	158 Call Type.GetTypeFromHandle, X0
	159 Move X1, [X20]
	160 Compare X0, 0
	161 JumpIfEqual {178}
	162 Move X9, [X0]
	163 Move W8, [X1+304]
	164 Move W10, [X9+304]
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Move X10, [X9+200]
	167 Subtract X9, X8, 1
	168 Move X10, [X10]
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Move X10, [X1+184]
	171 Move [X10+32], X0
	172 Move X10, [X0]
	173 Move W11, [X10+304]
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Move X8, [X10+200]
	176 Move X8, [X8]
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move X8, [X1+184]
	179 Move [X8+32], X0
	180 Move X8, 0xD6F000
	181 Move X8, [X8+840]
	182 Move X1, X31
	183 Move X0, [X8]
	184 Call Type.GetTypeFromHandle, X0
	185 Move X1, [X20]
	186 Compare X0, 0
	187 JumpIfEqual {205}
	188 Move X9, [X0]
	189 Move W8, [X1+304]
	190 Move W10, [X9+304]
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Move X10, [X9+200]
	193 Subtract X9, X8, 1
	194 Move X10, [X10]
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Move X10, [X1+184]
	197 Move [X10+56], X0
	198 Move X10, [X0]
	199 Move W11, [X10+304]
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Move X8, [X10+200]
	202 Move X8, [X8]
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Call 0x1C181E0
	205 Move X8, [X1+184]
	206 Move [X8+56], X0
	207 Move X20, [X31+16]
	208 Move X19, [X31+24]
	209 Move X30, [X31+32]
	210 Move X21, [X31+40]
	211 Return 

