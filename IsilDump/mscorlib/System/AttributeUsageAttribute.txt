Type: System.AttributeUsageAttribute

Method: System.Void .ctor(System.AttributeTargets validOn)

Disassembly:
	0x033176B0 BL 0x1C16F28
	0x033176B4 LDRB W8, [X0]
	0x033176B8 CMP W8, 0x0
	0x033176BC CSET W0, NE
	0x033176C0 RET
	0x033176C4 STR X30, [X31 - 0x30]!
	0x033176C8 STP X22, X21, [X31 + 0x10]
	0x033176CC STP X20, X19, [X31 + 0x20]
	0x033176D0 ADRP X22, 0x10C5000
	0x033176D4 ADRP X20, 0xE10000
	0x033176D8 ADRP X21, 0xE11000
	0x033176DC LDRB W8, [X22 + 0xB9B]
	0x033176E0 LDR X20, [X20 + 0xFF8]
	0x033176E4 LDR X21, [X21]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move W8, 0x7FFF
	006 Move W9, 1
	007 Move X1, X31
	008 Move X20, X0
	009 Move [X0+16], W8
	010 Move [X0+21], W9
	011 Call Attribute..ctor, X0
	012 Move [X20+16], W19
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move X30, [X31+32]
	016 Return 

Method: System.Boolean get_AllowMultiple()

Disassembly:
	0x033176E8 MOV X19, X0
	0x033176EC TBNZ X8, 0x0, 0x3317710

ISIL:
	001 Move W0, [X0+20]
	002 Return X0

Method: System.Void set_AllowMultiple(System.Boolean value)

Disassembly:
	0x033176F0 ADRP X0, 0xE10000
	0x033176F4 LDR X0, [X0 + 0xFF8]
	0x033176F8 BL 0x1C16CF4

ISIL:
	001 And W8, W1, 1
	002 Move [X0+20], W8
	003 Return 

Method: System.Boolean get_Inherited()

Disassembly:
	0x033176FC ADRP X0, 0xE11000
	0x03317700 LDR X0, [X0]

ISIL:
	001 Move W0, [X0+21]
	002 Return X0

Method: System.Void set_Inherited(System.Boolean value)

Disassembly:
	0x03317704 BL 0x1C16CF4
	0x03317708 MOVZ W8, 0x1
	0x0331770C STRB W8, [X22 + 0xB9B]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+21], W8
	003 Return 

Method: System.Void .cctor()

Disassembly:
	0x03317710 LDRB W8, [X19]
	0x03317714 CMP W8, 0x0
	0x03317718 CSEL X8, X20, X21, EQ
	0x0331771C LDR X0, [X8]
	0x03317720 LDP X20, X19, [X31 + 0x20]
	0x03317724 LDP X22, X21, [X31 + 0x10]
	0x03317728 LDR X30, [X31], #0x30
	0x0331772C RET
	0x03317730 STP X30, X21, [X31 - 0x20]!
	0x03317734 STP X20, X19, [X31 + 0x10]
	0x03317738 ADRP X20, 0x10C5000
	0x0331773C ADRP X21, 0xDDC000
	0x03317740 LDRB W8, [X20 + 0xB9C]
	0x03317744 LDR X21, [X21 + 0xB58]
	0x03317748 MOV X19, X0
	0x0331774C TBNZ X8, 0x0, 0x3317764
	0x03317750 ADRP X0, 0xDDC000
	0x03317754 LDR X0, [X0 + 0xB58]
	0x03317758 BL 0x1C16CF4
	0x0331775C MOVZ W8, 0x1
	0x03317760 STRB W8, [X20 + 0xB9C]
	0x03317764 LDR X0, [X21]
	0x03317768 LDR W8, [X0 + 0xE0]
	0x0331776C CBNZ W8, 0x3317774
	0x03317770 BL 0x1C16DFC
	0x03317774 MOV X0, X19
	0x03317778 LDP X20, X19, [X31 + 0x10]
	0x0331777C LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x10C6000
	006 Move X20, 0xE11000
	007 Move W8, [X19+2954]
	008 Move X20, [X20+3984]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xE11000
	014 Move X0, [X0+3984]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X19+2954], W8
	018 Move X0, [X20]
	019 Call 0x1C17F10
	020 Move W21, 0x7FFF
	021 Move W8, 1
	022 Move X1, X31
	023 Move X19, X0
	024 Move [X0+16], W21
	025 Move [X0+21], W8
	026 Call Attribute..ctor, X0
	027 Move [X19+16], W21
	028 Move X8, [X20]
	029 Move X8, [X8+184]
	030 Move [X8], X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 

