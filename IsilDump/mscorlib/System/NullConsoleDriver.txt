Type: System.NullConsoleDriver

Method: System.Void set_ForegroundColor(System.ConsoleColor value)

Disassembly:
	0x033CC3BC AND W8, W0, 0xFF

ISIL:
	001 Return 

Method: System.ConsoleKeyInfo ReadKey(System.Boolean intercept)

Disassembly:
	0x033CC3C0 CMP W8, 0x14
	0x033CC3C4 CSET W9, EQ
	0x033CC3C8 CMP W8, 0x1D
	0x033CC3CC CSET W8, EQ
	0x033CC3D0 ORR W0, W9, W8, 0x0
	0x033CC3D4 LDR X30, [X31], #0x10
	0x033CC3D8 RET
	0x033CC3DC STR X30, [X31 - 0x10]!
	0x033CC3E0 BL 0x1C3D770
	0x033CC3E4 AND W8, W0, 0xFF
	0x033CC3E8 CMP W8, 0x1D
	0x033CC3EC CSET W0, EQ
	0x033CC3F0 LDR X30, [X31], #0x10
	0x033CC3F4 RET
	0x033CC3F8 STR X30, [X31 - 0x10]!
	0x033CC3FC BL 0x1C3D770
	0x033CC400 AND W8, W0, 0xFF
	0x033CC404 CMP W8, 0x14
	0x033CC408 B.EQ 0x33CC414
	0x033CC40C CMP W8, 0x1D
	0x033CC410 B.NE 0x33CC41C
	0x033CC414 MOVZ W0, 0x1
	0x033CC418 B 0x33CC42C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1012000
	005 Move X19, 0xD61000
	006 Move W8, [X20+658]
	007 Move X19, [X19+1960]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xD61000
	013 Move X0, [X0+1960]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+658], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8]
	027 Move W1, [X8+8]
	028 Move X30, [X31+32]
	029 Return X0

Method: System.Void ResetColor()

Disassembly:
	0x033CC41C SUB W8, W0, 0xF

ISIL:
	001 Return 

Method: System.Void .ctor()

Disassembly:
	0x033C4F0C B 0x33C4F2C

ISIL:
	001 Return 

Method: System.Void .cctor()

Disassembly:
	0x033CC420 AND W8, W8, 0xFF
	0x033CC424 CMP W8, 0x2
	0x033CC428 CSET W0, CC
	0x033CC42C LDR X30, [X31], #0x10
	0x033CC430 RET
	0x033CC434 B 0x1C3D544
	0x033CC438 B 0x1C24408
	0x033CC43C B 0x1C3D6D8
	0x033CC440 B 0x1C3D594
	0x033CC444 TBZ X1, 0x0, 0x33CC450
	0x033CC448 MOV W0, W31
	0x033CC44C RET
	0x033CC450 B 0x1C24408
	0x033CC454 STR X30, [X31 - 0x30]!
	0x033CC458 STP X22, X21, [X31 + 0x10]
	0x033CC45C STP X20, X19, [X31 + 0x20]
	0x033CC460 ADRP X22, 0x1011000
	0x033CC464 ADRP X20, 0xD5F000
	0x033CC468 ADRP X21, 0xD27000
	0x033CC46C LDRB W8, [X22 + 0x29E]
	0x033CC470 LDR X20, [X20 + 0x480]
	0x033CC474 LDR X21, [X21 + 0x6C0]
	0x033CC478 MOV X19, X0
	0x033CC47C TBNZ X8, 0x0, 0x33CC4A0
	0x033CC480 ADRP X0, 0xD5F000
	0x033CC484 LDR X0, [X0 + 0x480]
	0x033CC488 BL 0x1C16CF4
	0x033CC48C ADRP X0, 0xD27000
	0x033CC490 LDR X0, [X0 + 0x6C0]
	0x033CC494 BL 0x1C16CF4
	0x033CC498 MOVZ W8, 0x1
	0x033CC49C STRB W8, [X22 + 0x29E]
	0x033CC4A0 LDR X0, [X21]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0x1012000
	006 Move X19, 0xD61000
	007 Move W8, [X20+659]
	008 Move X19, [X19+1960]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xD61000
	014 Move X0, [X0+1960]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+659], W8
	018 Add X0, X31, 0
	019 Move W1, W31
	020 Move W2, W31
	021 Move W3, W31
	022 Move W4, W31
	023 Move W5, W31
	024 Move X6, X31
	025 Move [X31+8], W31
	026 Move [X31], X31
	027 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	028 Move X8, [X19]
	029 Move W9, [X31+8]
	030 Move X10, [X31]
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X8, [X8+184]
	034 Move X30, [X31+16]
	035 Move [X8+8], W9
	036 Move [X8], X10
	037 Add X31, X31, 48
	038 Return 

