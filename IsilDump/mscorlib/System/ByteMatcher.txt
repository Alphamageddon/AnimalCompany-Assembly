Type: System.ByteMatcher

Method: System.Void AddMapping(System.TermInfoStrings key, System.Byte[] val)

Disassembly:
	0x033D268C STP X20, X19, [X8 + 0x20]
	0x033D2690 LDP X20, X19, [X31 + 0x20]
	0x033D2694 LDP X22, X21, [X31 + 0x10]
	0x033D2698 LDR X30, [X31], #0x30
	0x033D269C RET
	0x033D26A0 BL 0x1C16F28
	0x033D26A4 STP X30, X23, [X31 - 0x30]!
	0x033D26A8 STP X22, X21, [X31 + 0x10]
	0x033D26AC STP X20, X19, [X31 + 0x20]
	0x033D26B0 ADRP X23, 0x100B000
	0x033D26B4 LDRB W8, [X23 + 0x2C9]
	0x033D26B8 MOV X21, X3
	0x033D26BC MOV X20, X2
	0x033D26C0 MOV X19, X1
	0x033D26C4 MOV W22, W0
	0x033D26C8 TBNZ X8, 0x0, 0x33D26E0
	0x033D26CC ADRP X0, 0xD5A000
	0x033D26D0 LDR X0, [X0 + 0xB30]
	0x033D26D4 BL 0x1C16CF4
	0x033D26D8 MOVZ W8, 0x1
	0x033D26DC STRB W8, [X23 + 0x2C9]
	0x033D26E0 SUB W8, W22, 0x41
	0x033D26E4 AND W8, W8, 0xFFFF
	0x033D26E8 CMP W8, 0x19
	0x033D26EC AND W8, W22, 0xFFFF
	0x033D26F0 B.LS 0x33D2730
	0x033D26F4 SUB W9, W22, 0x61
	0x033D26F8 AND W9, W9, 0xFFFF
	0x033D26FC CMP W9, 0x19
	0x033D2700 B.HI 0x33D2768
	0x033D2704 SUB W8, W8, 0x61
	0x033D2708 STR W8, [X21]
	0x033D270C LDR X0, [X19]
	0x033D2710 CBNZ X0, 0x33D2758
	0x033D2714 ADRP X8, 0xD5A000
	0x033D2718 LDR X8, [X8 + 0xB30]
	0x033D271C MOVZ W1, 0x1A
	0x033D2720 LDR X0, [X8]
	0x033D2724 BL 0x1C16D6C
	0x033D2728 STR X0, [X19]
	0x033D272C B 0x33D2758
	0x033D2730 SUB W8, W8, 0x41
	0x033D2734 STR W8, [X21]
	0x033D2738 LDR X0, [X20]
	0x033D273C CBNZ X0, 0x33D2758
	0x033D2740 ADRP X8, 0xD5A000
	0x033D2744 LDR X8, [X8 + 0xB30]
	0x033D2748 MOVZ W1, 0x1A
	0x033D274C LDR X0, [X8]
	0x033D2750 BL 0x1C16D6C
	0x033D2754 STR X0, [X20]
	0x033D2758 LDP X20, X19, [X31 + 0x20]
	0x033D275C LDP X22, X21, [X31 + 0x10]
	0x033D2760 LDP X30, X23, [X31], #0x30
	0x033D2764 RET
	0x033D2768 ADRP X0, 0xD21000
	0x033D276C LDR X0, [X0 + 0x5B0]
	0x033D2770 BL 0x1C16D08
	0x033D2774 BL 0x1C16F10
	0x033D2778 MOV X19, X0
	0x033D277C ADRP X0, 0xD5A000
	0x033D2780 LDR X0, [X0 + 0xBD8]
	0x033D2784 BL 0x1C16D08
	0x033D2788 MOV X1, X0
	0x033D278C MOV X0, X19
	0x033D2790 MOV X2, X31
	0x033D2794 BL 0x337DF1C
	0x033D2798 ADRP X0, 0xD5A000
	0x033D279C LDR X0, [X0 + 0xC10]
	0x033D27A0 BL 0x1C16D08
	0x033D27A4 MOV X1, X0
	0x033D27A8 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X22, 0x100C000
	008 Move W8, [X22+718]
	009 Move X19, X2
	010 Move W21, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0xD22000
	017 Move X0, [X0+2904]
	018 Call 0x1C17CF4
	019 Move X0, 0xD22000
	020 Move X0, [X0+1880]
	021 Call 0x1C17CF4
	022 Move X0, 0xD5B000
	023 Move X0, [X0+2960]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+718], W8
	027 Compare X19, 0
	028 JumpIfEqual {83}
	029 Move X8, [X19+24]
	030 Compare X8, 0
	031 JumpIfEqual {76}
	032 Move X8, 0xD5B000
	033 Move X8, [X8+2960]
	034 Move X22, [X20+16]
	035 Add X1, X31, 28
	036 Move [X31+28], W21
	037 Move X0, [X8]
	038 Call 0x1C17E04
	039 Compare X22, 0
	040 JumpIfEqual {83}
	041 Move X8, [X22]
	042 Move X2, X0
	043 Move X0, X22
	044 Move X1, X19
	045 Move X9, [X8+744]
	046 Move X3, [X8+752]
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Move W8, [X19+24]
	049 Compare W8, 0
	050 JumpIfEqual {84}
	051 Move X8, 0xD22000
	052 Move X8, [X8+1880]
	053 Move W9, [X19+32]
	054 Move X21, 0xD22000
	055 Move X20, [X20+24]
	056 Move X0, [X8]
	057 Move X21, [X21+2904]
	058 Add X1, X31, 24
	059 Move [X31+24], W9
	060 Call 0x1C17E04
	061 Move X19, X0
	062 Move X0, [X21]
	063 Move W8, 1
	064 Add X1, X31, 12
	065 Move [X31+12], W8
	066 Call 0x1C17E04
	067 Compare X20, 0
	068 JumpIfEqual {83}
	069 Move X8, [X20]
	070 Move X2, X0
	071 Move X0, X20
	072 Move X1, X19
	073 Move X9, [X8+744]
	074 Move X3, [X8+752]
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Move X20, [X31+48]
	077 Move X19, [X31+56]
	078 Move X22, [X31+32]
	079 Move X21, [X31+40]
	080 Move X30, [X31+16]
	081 Add X31, X31, 64
	082 Return 
	083 Call 0x1C17F20
	084 Call 0x1C17F28

Method: System.Void Sort()

Disassembly:
	0x033D27AC BL 0x1C16DEC

ISIL:
	001 Return 

Method: System.Boolean StartsWith(System.Int32 c)

Disassembly:
	0x033CF7CC MOV X21, X0
	0x033CF7D0 ADD X0, X31, 0x770
	0x033CF7D4 MOVZ W2, 0x8
	0x033CF7D8 MOV W1, W31
	0x033CF7DC MOV W3, W31
	0x033CF7E0 MOV W4, W31
	0x033CF7E4 MOV W5, W31
	0x033CF7E8 MOV X6, X31
	0x033CF7EC STR W31, [X31 + 0x778]
	0x033CF7F0 STR X31, [X31 + 0x770]
	0x033CF7F4 BL 0x339D33C
	0x033CF7F8 LDR X8, [X31 + 0x770]
	0x033CF7FC LDR W9, [X31 + 0x778]
	0x033CF800 LDR X0, [X22]
	0x033CF804 ADD X1, X31, 0x760
	0x033CF808 STR X8, [X31 + 0x760]
	0x033CF80C STR W9, [X31 + 0x768]
	0x033CF810 BL 0x1C16E04
	0x033CF814 CBZ X20, 0x33D15CC
	0x033CF818 LDR X8, [X20]
	0x033CF81C MOV X2, X0
	0x033CF820 MOV X0, X20
	0x033CF824 MOV X1, X21
	0x033CF828 LDR X9, [X8 + 0x2E8]
	0x033CF82C LDR X3, [X8 + 0x2F0]
	0x033CF830 BLR X9
	0x033CF834 LDR X0, [X23]
	0x033CF838 LDR X20, [X19]
	0x033CF83C MOVZ W8, 0x39
	0x033CF840 ADD X1, X31, 0x788
	0x033CF844 STR W8, [X31 + 0x788]
	0x033CF848 BL 0x1C16E04
	0x033CF84C MOV X21, X0
	0x033CF850 ADD X0, X31, 0x750

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x100F000
	007 Move X21, 0xD25000
	008 Move W8, [X22+719]
	009 Move X21, [X21+1880]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xD25000
	017 Move X0, [X0+1880]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+719], W8
	021 Move X0, [X21]
	022 Move X19, [X19+24]
	023 Add X1, X31, 12
	024 Move [X31+12], W20
	025 Call 0x1C17E04
	026 Compare X19, 0
	027 JumpIfEqual {42}
	028 Move X8, [X19]
	029 Move X1, X0
	030 Move X0, X19
	031 Move X9, [X8+728]
	032 Move X2, [X8+736]
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CSET not yet implemented."
	040 Move X30, [X31+48]
	041 Return X0
	042 Call 0x1C17F20

Method: System.TermInfoStrings Match(System.Char[] buffer, System.Int32 offset, System.Int32 length, out System.Int32 used)

Disassembly:
	0x033CF854 MOVZ W2, 0xC
	0x033CF858 MOV W1, W31
	0x033CF85C MOV W3, W31
	0x033CF860 MOV W4, W31
	0x033CF864 MOV W5, W31
	0x033CF868 MOV X6, X31
	0x033CF86C STR W31, [X31 + 0x758]
	0x033CF870 STR X31, [X31 + 0x750]
	0x033CF874 BL 0x339D33C
	0x033CF878 LDR X8, [X31 + 0x750]
	0x033CF87C LDR W9, [X31 + 0x758]
	0x033CF880 LDR X0, [X22]
	0x033CF884 ADD X1, X31, 0x740
	0x033CF888 STR X8, [X31 + 0x740]
	0x033CF88C STR W9, [X31 + 0x748]
	0x033CF890 BL 0x1C16E04
	0x033CF894 CBZ X20, 0x33D15CC
	0x033CF898 LDR X8, [X20]
	0x033CF89C MOV X2, X0
	0x033CF8A0 MOV X0, X20
	0x033CF8A4 MOV X1, X21
	0x033CF8A8 LDR X9, [X8 + 0x2E8]
	0x033CF8AC LDR X3, [X8 + 0x2F0]
	0x033CF8B0 BLR X9
	0x033CF8B4 LDR X0, [X23]
	0x033CF8B8 LDR X20, [X19]
	0x033CF8BC MOVZ W8, 0x3D
	0x033CF8C0 ADD X1, X31, 0x73C
	0x033CF8C4 STR W8, [X31 + 0x73C]
	0x033CF8C8 BL 0x1C16E04
	0x033CF8CC MOV X21, X0
	0x033CF8D0 ADD X0, X31, 0x730
	0x033CF8D4 MOVZ W2, 0x28
	0x033CF8D8 MOV W1, W31
	0x033CF8DC MOV W3, W31
	0x033CF8E0 MOV W4, W31
	0x033CF8E4 MOV W5, W31
	0x033CF8E8 MOV X6, X31
	0x033CF8EC STR W31, [X31 + 0x738]
	0x033CF8F0 STR X31, [X31 + 0x730]
	0x033CF8F4 BL 0x339D33C
	0x033CF8F8 LDR X8, [X31 + 0x730]
	0x033CF8FC LDR W9, [X31 + 0x738]
	0x033CF900 LDR X0, [X22]
	0x033CF904 ADD X1, X31, 0x720
	0x033CF908 STR X8, [X31 + 0x720]
	0x033CF90C STR W9, [X31 + 0x728]
	0x033CF910 BL 0x1C16E04
	0x033CF914 CBZ X20, 0x33D15CC
	0x033CF918 LDR X8, [X20]
	0x033CF91C MOV X2, X0
	0x033CF920 MOV X0, X20
	0x033CF924 MOV X1, X21
	0x033CF928 LDR X9, [X8 + 0x2E8]
	0x033CF92C LDR X3, [X8 + 0x2F0]
	0x033CF930 BLR X9
	0x033CF934 LDR X0, [X23]
	0x033CF938 LDR X20, [X19]
	0x033CF93C MOVZ W8, 0x42
	0x033CF940 ADD X1, X31, 0x71C
	0x033CF944 STR W8, [X31 + 0x71C]
	0x033CF948 BL 0x1C16E04
	0x033CF94C MOV X21, X0
	0x033CF950 ADD X0, X31, 0x710
	0x033CF954 MOVZ W2, 0x70
	0x033CF958 MOV W1, W31
	0x033CF95C MOV W3, W31
	0x033CF960 MOV W4, W31
	0x033CF964 MOV W5, W31
	0x033CF968 MOV X6, X31
	0x033CF96C STR W31, [X31 + 0x718]
	0x033CF970 STR X31, [X31 + 0x710]
	0x033CF974 BL 0x339D33C
	0x033CF978 LDR X8, [X31 + 0x710]
	0x033CF97C LDR W9, [X31 + 0x718]
	0x033CF980 LDR X0, [X22]
	0x033CF984 ADD X1, X31, 0x700
	0x033CF988 STR X8, [X31 + 0x700]
	0x033CF98C STR W9, [X31 + 0x708]
	0x033CF990 BL 0x1C16E04
	0x033CF994 CBZ X20, 0x33D15CC
	0x033CF998 LDR X8, [X20]
	0x033CF99C MOV X2, X0
	0x033CF9A0 MOV X0, X20
	0x033CF9A4 MOV X1, X21
	0x033CF9A8 LDR X9, [X8 + 0x2E8]
	0x033CF9AC LDR X3, [X8 + 0x2F0]
	0x033CF9B0 BLR X9
	0x033CF9B4 LDR X0, [X23]
	0x033CF9B8 LDR X20, [X19]
	0x033CF9BC MOVZ W8, 0x43
	0x033CF9C0 ADD X1, X31, 0x6FC
	0x033CF9C4 STR W8, [X31 + 0x6FC]
	0x033CF9C8 BL 0x1C16E04
	0x033CF9CC MOV X21, X0
	0x033CF9D0 ADD X0, X31, 0x6F0
	0x033CF9D4 MOVZ W2, 0x79
	0x033CF9D8 MOV W1, W31
	0x033CF9DC MOV W3, W31
	0x033CF9E0 MOV W4, W31
	0x033CF9E4 MOV W5, W31
	0x033CF9E8 MOV X6, X31
	0x033CF9EC STR W31, [X31 + 0x6F8]
	0x033CF9F0 STR X31, [X31 + 0x6F0]
	0x033CF9F4 BL 0x339D33C
	0x033CF9F8 LDR X8, [X31 + 0x6F0]
	0x033CF9FC LDR W9, [X31 + 0x6F8]
	0x033CFA00 LDR X0, [X22]
	0x033CFA04 ADD X1, X31, 0x6E0
	0x033CFA08 STR X8, [X31 + 0x6E0]
	0x033CFA0C STR W9, [X31 + 0x6E8]
	0x033CFA10 BL 0x1C16E04
	0x033CFA14 CBZ X20, 0x33D15CC
	0x033CFA18 LDR X8, [X20]
	0x033CFA1C MOV X2, X0
	0x033CFA20 MOV X0, X20
	0x033CFA24 MOV X1, X21
	0x033CFA28 LDR X9, [X8 + 0x2E8]
	0x033CFA2C LDR X3, [X8 + 0x2F0]
	0x033CFA30 BLR X9
	0x033CFA34 LDR X0, [X23]
	0x033CFA38 LDR X20, [X19]
	0x033CFA3C MOVZ W8, 0x44
	0x033CFA40 ADD X1, X31, 0x6DC
	0x033CFA44 STR W8, [X31 + 0x6DC]
	0x033CFA48 BL 0x1C16E04
	0x033CFA4C MOV X21, X0
	0x033CFA50 ADD X0, X31, 0x6D0
	0x033CFA54 MOVZ W2, 0x71
	0x033CFA58 MOV W1, W31
	0x033CFA5C MOV W3, W31
	0x033CFA60 MOV W4, W31
	0x033CFA64 MOV W5, W31
	0x033CFA68 MOV X6, X31
	0x033CFA6C STR W31, [X31 + 0x6D8]
	0x033CFA70 STR X31, [X31 + 0x6D0]
	0x033CFA74 BL 0x339D33C
	0x033CFA78 LDR X8, [X31 + 0x6D0]
	0x033CFA7C LDR W9, [X31 + 0x6D8]
	0x033CFA80 LDR X0, [X22]
	0x033CFA84 ADD X1, X31, 0x6C0
	0x033CFA88 STR X8, [X31 + 0x6C0]
	0x033CFA8C STR W9, [X31 + 0x6C8]
	0x033CFA90 BL 0x1C16E04
	0x033CFA94 CBZ X20, 0x33D15CC
	0x033CFA98 LDR X8, [X20]
	0x033CFA9C MOV X2, X0
	0x033CFAA0 MOV X0, X20
	0x033CFAA4 MOV X1, X21
	0x033CFAA8 LDR X9, [X8 + 0x2E8]
	0x033CFAAC LDR X3, [X8 + 0x2F0]
	0x033CFAB0 BLR X9
	0x033CFAB4 LDR X0, [X23]
	0x033CFAB8 LDR X20, [X19]
	0x033CFABC MOVZ W8, 0x45
	0x033CFAC0 ADD X1, X31, 0x6BC
	0x033CFAC4 STR W8, [X31 + 0x6BC]
	0x033CFAC8 BL 0x1C16E04
	0x033CFACC MOV X21, X0
	0x033CFAD0 ADD X0, X31, 0x6B0
	0x033CFAD4 MOVZ W2, 0x72
	0x033CFAD8 MOV W1, W31
	0x033CFADC MOV W3, W31
	0x033CFAE0 MOV W4, W31
	0x033CFAE4 MOV W5, W31
	0x033CFAE8 MOV X6, X31
	0x033CFAEC STR W31, [X31 + 0x6B8]
	0x033CFAF0 STR X31, [X31 + 0x6B0]
	0x033CFAF4 BL 0x339D33C
	0x033CFAF8 LDR X8, [X31 + 0x6B0]
	0x033CFAFC LDR W9, [X31 + 0x6B8]
	0x033CFB00 LDR X0, [X22]
	0x033CFB04 ADD X1, X31, 0x6A0
	0x033CFB08 STR X8, [X31 + 0x6A0]
	0x033CFB0C STR W9, [X31 + 0x6A8]
	0x033CFB10 BL 0x1C16E04
	0x033CFB14 CBZ X20, 0x33D15CC
	0x033CFB18 LDR X8, [X20]
	0x033CFB1C MOV X2, X0
	0x033CFB20 MOV X0, X20
	0x033CFB24 MOV X1, X21
	0x033CFB28 LDR X9, [X8 + 0x2E8]
	0x033CFB2C LDR X3, [X8 + 0x2F0]
	0x033CFB30 BLR X9
	0x033CFB34 LDR X0, [X23]
	0x033CFB38 LDR X20, [X19]
	0x033CFB3C MOVZ W8, 0x46
	0x033CFB40 ADD X1, X31, 0x69C
	0x033CFB44 STR W8, [X31 + 0x69C]
	0x033CFB48 BL 0x1C16E04
	0x033CFB4C MOV X21, X0
	0x033CFB50 ADD X0, X31, 0x690
	0x033CFB54 MOVZ W2, 0x73
	0x033CFB58 MOV W1, W31
	0x033CFB5C MOV W3, W31
	0x033CFB60 MOV W4, W31
	0x033CFB64 MOV W5, W31
	0x033CFB68 MOV X6, X31
	0x033CFB6C STR W31, [X31 + 0x698]
	0x033CFB70 STR X31, [X31 + 0x690]
	0x033CFB74 BL 0x339D33C
	0x033CFB78 LDR X8, [X31 + 0x690]
	0x033CFB7C LDR W9, [X31 + 0x698]
	0x033CFB80 LDR X0, [X22]
	0x033CFB84 ADD X1, X31, 0x680
	0x033CFB88 STR X8, [X31 + 0x680]
	0x033CFB8C STR W9, [X31 + 0x688]
	0x033CFB90 BL 0x1C16E04
	0x033CFB94 CBZ X20, 0x33D15CC
	0x033CFB98 LDR X8, [X20]
	0x033CFB9C MOV X2, X0
	0x033CFBA0 MOV X0, X20
	0x033CFBA4 MOV X1, X21
	0x033CFBA8 LDR X9, [X8 + 0x2E8]
	0x033CFBAC LDR X3, [X8 + 0x2F0]
	0x033CFBB0 BLR X9
	0x033CFBB4 LDR X0, [X23]
	0x033CFBB8 LDR X20, [X19]
	0x033CFBBC MOVZ W8, 0x47
	0x033CFBC0 ADD X1, X31, 0x67C
	0x033CFBC4 STR W8, [X31 + 0x67C]
	0x033CFBC8 BL 0x1C16E04
	0x033CFBCC MOV X21, X0
	0x033CFBD0 ADD X0, X31, 0x670
	0x033CFBD4 MOVZ W2, 0x74
	0x033CFBD8 MOV W1, W31
	0x033CFBDC MOV W3, W31
	0x033CFBE0 MOV W4, W31
	0x033CFBE4 MOV W5, W31
	0x033CFBE8 MOV X6, X31
	0x033CFBEC STR W31, [X31 + 0x678]
	0x033CFBF0 STR X31, [X31 + 0x670]
	0x033CFBF4 BL 0x339D33C
	0x033CFBF8 LDR X8, [X31 + 0x670]
	0x033CFBFC LDR W9, [X31 + 0x678]
	0x033CFC00 LDR X0, [X22]
	0x033CFC04 ADD X1, X31, 0x660
	0x033CFC08 STR X8, [X31 + 0x660]
	0x033CFC0C STR W9, [X31 + 0x668]
	0x033CFC10 BL 0x1C16E04
	0x033CFC14 CBZ X20, 0x33D15CC
	0x033CFC18 LDR X8, [X20]
	0x033CFC1C MOV X2, X0
	0x033CFC20 MOV X0, X20
	0x033CFC24 MOV X1, X21
	0x033CFC28 LDR X9, [X8 + 0x2E8]
	0x033CFC2C LDR X3, [X8 + 0x2F0]
	0x033CFC30 BLR X9
	0x033CFC34 LDR X0, [X23]
	0x033CFC38 LDR X20, [X19]
	0x033CFC3C MOVZ W8, 0x48
	0x033CFC40 ADD X1, X31, 0x65C
	0x033CFC44 STR W8, [X31 + 0x65C]
	0x033CFC48 BL 0x1C16E04
	0x033CFC4C MOV X21, X0
	0x033CFC50 ADD X0, X31, 0x650
	0x033CFC54 MOVZ W2, 0x75
	0x033CFC58 MOV W1, W31
	0x033CFC5C MOV W3, W31
	0x033CFC60 MOV W4, W31
	0x033CFC64 MOV W5, W31
	0x033CFC68 MOV X6, X31
	0x033CFC6C STR W31, [X31 + 0x658]
	0x033CFC70 STR X31, [X31 + 0x650]
	0x033CFC74 BL 0x339D33C
	0x033CFC78 LDR X8, [X31 + 0x650]
	0x033CFC7C LDR W9, [X31 + 0x658]
	0x033CFC80 LDR X0, [X22]
	0x033CFC84 ADD X1, X31, 0x640
	0x033CFC88 STR X8, [X31 + 0x640]
	0x033CFC8C STR W9, [X31 + 0x648]
	0x033CFC90 BL 0x1C16E04
	0x033CFC94 CBZ X20, 0x33D15CC
	0x033CFC98 LDR X8, [X20]
	0x033CFC9C MOV X2, X0
	0x033CFCA0 MOV X0, X20
	0x033CFCA4 MOV X1, X21
	0x033CFCA8 LDR X9, [X8 + 0x2E8]
	0x033CFCAC LDR X3, [X8 + 0x2F0]
	0x033CFCB0 BLR X9
	0x033CFCB4 LDR X0, [X23]
	0x033CFCB8 LDR X20, [X19]
	0x033CFCBC MOVZ W8, 0x49
	0x033CFCC0 ADD X1, X31, 0x63C
	0x033CFCC4 STR W8, [X31 + 0x63C]
	0x033CFCC8 BL 0x1C16E04
	0x033CFCCC MOV X21, X0
	0x033CFCD0 ADD X0, X31, 0x630
	0x033CFCD4 MOVZ W2, 0x76
	0x033CFCD8 MOV W1, W31
	0x033CFCDC MOV W3, W31

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X20, 0x100F000
	014 Move W8, [X20+720]
	015 Move X19, X4
	016 Move W21, W3
	017 Move W22, W2
	018 Move X23, X1
	019 Move X24, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {41}
	024 Move X0, 0xD25000
	025 Move X0, [X0+1560]
	026 Call 0x1C17CF4
	027 Move X0, 0xD25000
	028 Move X0, [X0+3584]
	029 Call 0x1C17CF4
	030 Move X0, 0xD2D000
	031 Move X0, [X0+3512]
	032 Call 0x1C17CF4
	033 Move X0, 0xD25000
	034 Move X0, [X0+3608]
	035 Call 0x1C17CF4
	036 Move X0, 0xD5E000
	037 Move X0, [X0+2960]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X20+720], W8
	041 Move X0, [X24+16]
	042 Compare X0, 0
	043 JumpIfEqual {240}
	044 Move X8, [X0]
	045 Move X9, [X8+824]
	046 Move X1, [X8+832]
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Compare X0, 0
	049 JumpIfEqual {240}
	050 Move X10, 0xD2D000
	051 Move X8, [X0]
	052 Move X10, [X10+3512]
	053 Move X20, X0
	054 NotImplemented "Instruction LDRH not yet implemented."
	055 Move X1, [X10]
	056 Compare X9, 0
	057 JumpIfEqual {64}
	058 Move X10, [X8+176]
	059 Add X10, X10, 8
	060 NotImplemented "Instruction LDUR not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Subtract X9, X9, 1
	063 Add X10, X10, 16
	064 Move X0, X20
	065 Move W2, W31
	066 Call 0x1C5D788
	067 NotImplemented "Instruction LDRSW not yet implemented."
	068 Add X8, X8, X9
	069 Add X0, X8, 312
	070 Move X8, [X0]
	071 Move X1, [X0+8]
	072 Move X0, X20
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Move X20, X0
	075 Compare X0, 0
	076 JumpIfEqual {241}
	077 Move X28, 0xD5E000
	078 Move X29, 0xD25000
	079 Move X27, 0xD25000
	080 Move X28, [X28+2960]
	081 Move X29, [X29+3608]
	082 Move X27, [X27+1560]
	083 Move X8, [X20]
	084 Move X1, [X29]
	085 NotImplemented "Instruction LDRH not yet implemented."
	086 Compare X9, 0
	087 JumpIfEqual {94}
	088 Move X10, [X8+176]
	089 Add X10, X10, 8
	090 NotImplemented "Instruction LDUR not yet implemented."
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Subtract X9, X9, 1
	093 Add X10, X10, 16
	094 Move X0, X20
	095 Move W2, W31
	096 Call 0x1C5D788
	097 NotImplemented "Instruction LDRSW not yet implemented."
	098 Add X8, X8, X9
	099 Add X0, X8, 312
	100 Move X8, [X0]
	101 Move X1, [X0+8]
	102 Move X0, X20
	103 NotImplemented "Instruction BLR not yet implemented."
	104 Move TEMP, X0
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfNotEqual {230}
	108 Move X8, [X20]
	109 Move X1, [X29]
	110 NotImplemented "Instruction LDRH not yet implemented."
	111 Compare X9, 0
	112 JumpIfEqual {119}
	113 Move X10, [X8+176]
	114 Add X10, X10, 8
	115 NotImplemented "Instruction LDUR not yet implemented."
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Subtract X9, X9, 1
	118 Add X10, X10, 16
	119 Move W2, 1
	120 Move X0, X20
	121 Call 0x1C5D788
	122 Move W9, [X10]
	123 Add W9, W9, 1
	124 Add X8, X8, W9
	125 Add X0, X8, 312
	126 Move X8, [X0]
	127 Move X1, [X0+8]
	128 Move X0, X20
	129 NotImplemented "Instruction BLR not yet implemented."
	130 Move X25, X0
	131 Compare X0, 0
	132 JumpIfEqual {236}
	133 Move X26, [X27]
	134 Move X0, X25
	135 Move X1, X26
	136 Call 0x1C17E00
	137 Move X8, X0
	138 Compare X0, 0
	139 JumpIfEqual {237}
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Move X9, [X8+24]
	142 Subtract W10, W9, 1
	143 Move W11, W31
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Compare X23, 0
	146 JumpIfEqual {234}
	147 Move W13, [X23+24]
	148 Add W12, W22, W11
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Add X13, X8, W11
	151 Add X12, X23, W12
	152 Move W13, [X13+32]
	153 NotImplemented "Instruction LDRH not yet implemented."
	154 NotImplemented "Instruction CMP not yet implemented."
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Add W11, W11, 1
	157 NotImplemented "Instruction CMP not yet implemented."
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Move [X19], W9
	160 Move X0, [X24+16]
	161 Compare X0, 0
	162 JumpIfEqual {244}
	163 Move X9, [X0]
	164 Move X10, [X9+728]
	165 Move X2, [X9+736]
	166 Move X1, X8
	167 NotImplemented "Instruction BLR not yet implemented."
	168 Compare X0, 0
	169 JumpIfEqual {245}
	170 Move X8, [X0]
	171 Move X1, [X28]
	172 Move X8, [X8+64]
	173 Move X9, [X1+64]
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Call 0x1C17E08
	176 Move W22, [X0]
	177 Move X21, X31
	178 Move W23, 7
	179 Move X24, 0xD25000
	180 Move X24, [X24+3584]
	181 Move X0, X20
	182 Move X1, [X24]
	183 Call 0x1C17E00
	184 Compare X0, 0
	185 JumpIfEqual {208}
	186 Move X8, [X0]
	187 Move X1, [X24]
	188 Move X20, X0
	189 NotImplemented "Instruction LDRH not yet implemented."
	190 Compare X9, 0
	191 JumpIfEqual {198}
	192 Move X10, [X8+176]
	193 Add X10, X10, 8
	194 NotImplemented "Instruction LDUR not yet implemented."
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Subtract X9, X9, 1
	197 Add X10, X10, 16
	198 Move X0, X20
	199 Move W2, W31
	200 Call 0x1C5D788
	201 NotImplemented "Instruction LDRSW not yet implemented."
	202 Add X8, X8, X9
	203 Add X0, X8, 312
	204 Move X8, [X0]
	205 Move X1, [X0+8]
	206 Move X0, X20
	207 NotImplemented "Instruction BLR not yet implemented."
	208 Compare X21, 0
	209 JumpIfNotEqual {242}
	210 Or W8, W23, 8
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Move TEMP, 0
	213 Not TEMP
	214 Move W22, TEMP
	215 Move [X19], W31
	216 Move W0, W22
	217 Move X20, [X31+80]
	218 Move X19, [X31+88]
	219 Move X22, [X31+64]
	220 Move X21, [X31+72]
	221 Move X24, [X31+48]
	222 Move X23, [X31+56]
	223 Move X26, [X31+32]
	224 Move X25, [X31+40]
	225 Move X28, [X31+16]
	226 Move X27, [X31+24]
	227 Move X29, [X31+96]
	228 Move X30, [X31+104]
	229 Return X0
	230 Move X21, X31
	231 Move W22, W31
	232 Move W23, 8
	233 Call 0x1C17F28
	234 Call 0x1C17F20
	235 Call 0x1C17F28
	236 Call 0x1C17F20
	237 Move X0, X25
	238 Move X1, X26
	239 Call 0x1C181E0
	240 Call 0x1C17F20
	241 Call 0x1C17F20
	242 Move X0, X21
	243 Call 0x1C17F18
	244 Call 0x1C17F20
	245 Call 0x1C17F20
	246 Call 0x1C181E0
	247 Move X22, X0
	248 NotImplemented "Instruction CMP not yet implemented."
	249 Move X0, X22
	250 Call 0x3EB2AD0
	251 Move X21, [X0]
	252 Call 0x3EB2AE0
	253 Move W23, W31
	254 Move W22, W31
	255 Move X21, X31
	256 Move X22, X0
	257 Move X8, 0xD25000
	258 Move X8, [X8+3584]
	259 Move X1, [X8]
	260 Move X0, X20
	261 Call 0x1C17E00
	262 Move X19, X0
	263 Compare X0, 0
	264 JumpIfEqual {288}
	265 Move X8, [X19]
	266 Move X10, 0xD25000
	267 NotImplemented "Instruction LDRH not yet implemented."
	268 Move X10, [X10+3584]
	269 Move X1, [X10]
	270 Compare X9, 0
	271 JumpIfEqual {278}
	272 Move X10, [X8+176]
	273 Add X10, X10, 8
	274 NotImplemented "Instruction LDUR not yet implemented."
	275 NotImplemented "Instruction CMP not yet implemented."
	276 Subtract X9, X9, 1
	277 Add X10, X10, 16
	278 Move X0, X19
	279 Move W2, W31
	280 Call 0x1C5D788
	281 NotImplemented "Instruction LDRSW not yet implemented."
	282 Add X8, X8, X9
	283 Add X0, X8, 312
	284 Move X8, [X0]
	285 Move X1, [X0+8]
	286 Move X0, X19
	287 NotImplemented "Instruction BLR not yet implemented."
	288 Compare X21, 0
	289 JumpIfNotEqual {292}
	290 Move X0, X22
	291 Call 0x1D2D690
	292 Move X0, X21
	293 Call 0x1C17F18
	294 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x033D25D0 STP X22, X21, [X31 + 0x10]
	0x033D25D4 STP X20, X19, [X31 + 0x20]
	0x033D25D8 ADRP X21, 0x100B000
	0x033D25DC LDRB W8, [X21 + 0x2CD]
	0x033D25E0 MOV X19, X2
	0x033D25E4 MOV X20, X1
	0x033D25E8 MOV X22, X0
	0x033D25EC TBNZ X8, 0x0, 0x33D2604
	0x033D25F0 ADRP X0, 0xD5A000
	0x033D25F4 LDR X0, [X0 + 0xB30]
	0x033D25F8 BL 0x1C16CF4
	0x033D25FC MOVZ W8, 0x1
	0x033D2600 STRB W8, [X21 + 0x2CD]
	0x033D2604 LDR X21, [X22 + 0x10]
	0x033D2608 CBZ X21, 0x33D266C
	0x033D260C LDR W8, [X22 + 0x18]
	0x033D2610 LDR W9, [X21 + 0x18]
	0x033D2614 CMP W8, W9
	0x033D2618 B.NE 0x33D2670
	0x033D261C ADRP X9, 0xD5A000
	0x033D2620 LDR X9, [X9 + 0xB30]
	0x033D2624 UBFM W1, W8, 0x1F, 0x1E
	0x033D2628 LDR X0, [X9]
	0x033D262C BL 0x1C16D6C
	0x033D2630 LDR X8, [X22 + 0x10]
	0x033D2634 CBZ X8, 0x33D266C
	0x033D2638 LDR W4, [X8 + 0x18]
	0x033D263C MOV X21, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x100C000
	006 Move X21, 0xD52000
	007 Move W8, [X20+721]
	008 Move X21, [X21+3512]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD52000
	015 Move X0, [X0+3512]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+721], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call Hashtable..ctor, X0
	024 Move [X19+16], X20
	025 Move X0, [X21]
	026 Call 0x1C17F10
	027 Move X1, X31
	028 Move X20, X0
	029 Call Hashtable..ctor, X0
	030 Move [X19+24], X20
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 

