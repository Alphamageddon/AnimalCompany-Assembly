Type: System.RuntimeType/ListBuilder`1

Method: System.Void .ctor(System.Int32 capacity)

Disassembly:
	0x02EF2B28 LDRB W8, [X0 + 0x135]
	0x02EF2B2C TBNZ X8, 0x0, 0x2EF2B34
	0x02EF2B30 BL 0x1C5C684

ISIL:
	001 Move [X0], X31
	002 Move [X0+8], X31
	003 Move [X0+16], W31
	004 Move [X0+20], W1
	005 Return 

Method: T get_Item(System.Int32 index)

Disassembly:
	0x02EF2B34 LDR W8, [X0 + 0xE0]
	0x02EF2B38 CBNZ W8, 0x2EF2B40
	0x02EF2B3C BL 0x1C16DFC
	0x02EF2B40 LDR X0, [X20 + 0x20]
	0x02EF2B44 LDRB W8, [X0 + 0x135]
	0x02EF2B48 TBNZ X8, 0x0, 0x2EF2B50
	0x02EF2B4C BL 0x1C5C684
	0x02EF2B50 LDR X8, [X0 + 0xC0]
	0x02EF2B54 LDR X0, [X8 + 0x10]
	0x02EF2B58 LDRB W8, [X0 + 0x135]
	0x02EF2B5C TBNZ X8, 0x0, 0x2EF2B64
	0x02EF2B60 BL 0x1C5C684
	0x02EF2B64 LDR X8, [X0 + 0xB8]
	0x02EF2B68 LDR X21, [X8]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Compare X8, 0
	004 JumpIfEqual {9}
	005 Move W9, [X8+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Add X8, X8, W1
	008 Add X8, X8, 32
	009 Add X8, X0, 8
	010 Move X0, [X8]
	011 Move X30, [X31+16]
	012 Return X0
	013 Call 0x1C17F28

Method: T[] ToArray()

Disassembly:
	0x02EF2B6C CBZ X21, 0x2EF2BF0
	0x02EF2B70 LDR X8, [X20 + 0x20]
	0x02EF2B74 ADD X9, X8, 0x135
	0x02EF2B78 LDRH W9, [X9]
	0x02EF2B7C TBNZ X9, 0x0, 0x2EF2B98
	0x02EF2B80 MOV X0, X8
	0x02EF2B84 BL 0x1C5C684
	0x02EF2B88 LDR X8, [X20 + 0x20]
	0x02EF2B8C ADD X9, X8, 0x135
	0x02EF2B90 LDRH W9, [X9]
	0x02EF2B94 B 0x2EF2B9C
	0x02EF2B98 MOV X0, X8
	0x02EF2B9C LDR X10, [X0 + 0xC0]
	0x02EF2BA0 LDR X10, [X10 + 0x30]
	0x02EF2BA4 LDR X20, [X10]
	0x02EF2BA8 TBNZ X9, 0x0, 0x2EF2BB8
	0x02EF2BAC MOV X0, X8
	0x02EF2BB0 BL 0x1C5C684
	0x02EF2BB4 MOV X8, X0
	0x02EF2BB8 LDR X8, [X8 + 0xC0]
	0x02EF2BBC ADD X3, X31, 0x8
	0x02EF2BC0 ADD X4, X31, 0x10
	0x02EF2BC4 MOV X0, X20
	0x02EF2BC8 LDR X1, [X8 + 0x30]
	0x02EF2BCC STR X19, [X31 + 0x8]
	0x02EF2BD0 MOV X2, X21
	0x02EF2BD4 LDR X8, [X1 + 0x10]
	0x02EF2BD8 BLR X8
	0x02EF2BDC LDP X0, X1, [X31 + 0x10]
	0x02EF2BE0 LDP X20, X19, [X31 + 0x30]
	0x02EF2BE4 LDP X30, X21, [X31 + 0x20]
	0x02EF2BE8 ADD X31, X31, 0x40
	0x02EF2BEC RET
	0x02EF2BF0 BL 0x1C16F20
	0x02EF2BF4 SUB X31, X31, 0x30
	0x02EF2BF8 STP X30, X21, [X31 + 0x10]
	0x02EF2BFC STP X20, X19, [X31 + 0x20]
	0x02EF2C00 LDR X8, [X1 + 0x20]
	0x02EF2C04 MOV X20, X1
	0x02EF2C08 MOV X19, X0
	0x02EF2C0C LDRB W9, [X8 + 0x135]
	0x02EF2C10 TBNZ X9, 0x0, 0x2EF2C20
	0x02EF2C14 MOV X0, X8
	0x02EF2C18 BL 0x1C5C684
	0x02EF2C1C MOV X8, X0
	0x02EF2C20 LDR X8, [X8 + 0xC0]
	0x02EF2C24 LDR X0, [X8 + 0x10]
	0x02EF2C28 LDRB W8, [X0 + 0x135]
	0x02EF2C2C TBNZ X8, 0x0, 0x2EF2C34
	0x02EF2C30 BL 0x1C5C684
	0x02EF2C34 LDR W8, [X0 + 0xE0]
	0x02EF2C38 CBNZ W8, 0x2EF2C40
	0x02EF2C3C BL 0x1C16DFC
	0x02EF2C40 LDR X0, [X20 + 0x20]
	0x02EF2C44 LDRB W8, [X0 + 0x135]
	0x02EF2C48 TBNZ X8, 0x0, 0x2EF2C50
	0x02EF2C4C BL 0x1C5C684
	0x02EF2C50 LDR X8, [X0 + 0xC0]
	0x02EF2C54 LDR X0, [X8 + 0x10]
	0x02EF2C58 LDRB W8, [X0 + 0x135]
	0x02EF2C5C TBNZ X8, 0x0, 0x2EF2C64
	0x02EF2C60 BL 0x1C5C684
	0x02EF2C64 LDR X8, [X0 + 0xB8]
	0x02EF2C68 LDR X21, [X8]
	0x02EF2C6C CBZ X21, 0x2EF2CEC
	0x02EF2C70 LDR X8, [X20 + 0x20]
	0x02EF2C74 ADD X9, X8, 0x135

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W20, [X0+16]
	005 Move X19, X0
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Compare W20, 0
	008 JumpIfNotEqual {69}
	009 Move X0, [X1+32]
	010 Move W8, [X0+309]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {16}
	015 Call 0x1C5D684
	016 Move X8, [X0+192]
	017 Move X19, [X8+24]
	018 Move X8, [X19+56]
	019 Compare X8, 0
	020 JumpIfNotEqual {24}
	021 Move X0, X19
	022 Call 0x1C5D6E0
	023 Move X8, [X19+56]
	024 Move X0, [X8+16]
	025 Move W8, [X0+309]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {31}
	030 Call 0x1C5D684
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X8, [X19+56]
	036 Move X0, [X8+16]
	037 Move W8, [X0+309]
	038 Move TEMP, X8
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {43}
	042 Call 0x1C5D684
	043 Move X8, [X0+184]
	044 Move X0, [X8]
	045 Move X0, [X1+32]
	046 Move W8, [X0+309]
	047 Move TEMP, X8
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {52}
	051 Call 0x1C5D684
	052 Move X8, [X0+192]
	053 Move X0, [X8+32]
	054 Move W8, [X0+309]
	055 Move TEMP, X8
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {60}
	059 Call 0x1C5D684
	060 Move W1, 1
	061 Call 0x1C17D6C
	062 Compare X0, 0
	063 JumpIfEqual {88}
	064 Move W8, [X0+24]
	065 Compare W8, 0
	066 JumpIfEqual {89}
	067 Move X8, [X19+8]
	068 Move [X0+32], X8
	069 Move X0, [X1+32]
	070 Move W8, [X0+309]
	071 Move TEMP, X8
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfEqual {76}
	075 Call 0x1C5D684
	076 Move X8, [X0+192]
	077 Move X0, X19
	078 Move W1, W20
	079 Move X2, [X8+40]
	080 Call Array.Resize, X0, X1
	081 Move W8, [X19+16]
	082 Move X0, [X19]
	083 Move [X19+20], W8
	084 Move X20, [X31+16]
	085 Move X19, [X31+24]
	086 Move X30, [X31+32]
	087 Return X0
	088 Call 0x1C17F20
	089 Call 0x1C17F28

Method: System.Void CopyTo(System.Object[] array, System.Int32 index)

Disassembly:
	0x02EF2C78 LDRH W9, [X9]
	0x02EF2C7C TBNZ X9, 0x0, 0x2EF2C98
	0x02EF2C80 MOV X0, X8
	0x02EF2C84 BL 0x1C5C684
	0x02EF2C88 LDR X8, [X20 + 0x20]
	0x02EF2C8C ADD X9, X8, 0x135
	0x02EF2C90 LDRH W9, [X9]
	0x02EF2C94 B 0x2EF2C9C
	0x02EF2C98 MOV X0, X8
	0x02EF2C9C LDR X10, [X0 + 0xC0]
	0x02EF2CA0 LDR X10, [X10 + 0x40]
	0x02EF2CA4 LDR X20, [X10]
	0x02EF2CA8 TBNZ X9, 0x0, 0x2EF2CB8
	0x02EF2CAC MOV X0, X8
	0x02EF2CB0 BL 0x1C5C684
	0x02EF2CB4 MOV X8, X0
	0x02EF2CB8 LDR X8, [X8 + 0xC0]
	0x02EF2CBC ADD X3, X31, 0x8
	0x02EF2CC0 MOV X0, X20
	0x02EF2CC4 MOV X2, X21
	0x02EF2CC8 LDR X1, [X8 + 0x40]
	0x02EF2CCC STR X19, [X31 + 0x8]
	0x02EF2CD0 MOV X4, X19
	0x02EF2CD4 LDR X8, [X1 + 0x10]
	0x02EF2CD8 BLR X8
	0x02EF2CDC LDP X20, X19, [X31 + 0x20]
	0x02EF2CE0 LDP X30, X21, [X31 + 0x10]
	0x02EF2CE4 ADD X31, X31, 0x30
	0x02EF2CE8 RET
	0x02EF2CEC BL 0x1C16F20
	0x02EF2CF0 STP X30, X23, [X31 - 0x30]!
	0x02EF2CF4 STP X22, X21, [X31 + 0x10]
	0x02EF2CF8 STP X20, X19, [X31 + 0x20]
	0x02EF2CFC MOV X19, X0
	0x02EF2D00 LDR X0, [X0 + 0x20]
	0x02EF2D04 LDRB W8, [X0 + 0x135]
	0x02EF2D08 TBNZ X8, 0x0, 0x2EF2D10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W4, [X0+16]
	006 Compare W4, 0
	007 JumpIfEqual {26}
	008 Move W19, W2
	009 Move X20, X1
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Compare X20, 0
	012 JumpIfEqual {42}
	013 Move X21, [X0+8]
	014 Compare X21, 0
	015 JumpIfEqual {22}
	016 Move X8, [X20]
	017 Move X0, X21
	018 Move X1, [X8+64]
	019 Call 0x1C17E00
	020 Compare X0, 0
	021 JumpIfEqual {44}
	022 Move W8, [X20+24]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Add X8, X20, W19
	025 Move [X8+32], X21
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return 
	031 Move X0, [X0]
	032 Move X2, X20
	033 Move W3, W19
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move W1, W31
	037 Move X5, X31
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Call Array.Copy, X0, X1, X2, X3, X4
	041 Return 
	042 Call 0x1C17F20
	043 Call 0x1C17F28
	044 Call 0x1C17F44
	045 Move X1, X31
	046 Call 0x1C17DEC

Method: System.Int32 get_Count()

Disassembly:
	0x02EF2D0C BL 0x1C5C684
	0x02EF2D10 LDR X8, [X0 + 0xC0]

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Void Add(T item)

Disassembly:
	0x02EF2D14 LDR X0, [X8 + 0x50]
	0x02EF2D18 LDRB W8, [X0 + 0x135]
	0x02EF2D1C TBNZ X8, 0x0, 0x2EF2D24
	0x02EF2D20 BL 0x1C5C684
	0x02EF2D24 LDR W8, [X0 + 0xE0]
	0x02EF2D28 CBNZ W8, 0x2EF2D30
	0x02EF2D2C BL 0x1C16DFC
	0x02EF2D30 LDR X0, [X19 + 0x20]
	0x02EF2D34 LDRB W8, [X0 + 0x135]
	0x02EF2D38 TBNZ X8, 0x0, 0x2EF2D40
	0x02EF2D3C BL 0x1C5C684
	0x02EF2D40 LDR X8, [X0 + 0xC0]
	0x02EF2D44 LDR X0, [X8 + 0x50]
	0x02EF2D48 LDRB W8, [X0 + 0x135]
	0x02EF2D4C TBNZ X8, 0x0, 0x2EF2D54
	0x02EF2D50 BL 0x1C5C684
	0x02EF2D54 LDR X8, [X19 + 0x20]
	0x02EF2D58 LDR X9, [X0 + 0xB8]
	0x02EF2D5C LDRB W10, [X8 + 0x135]
	0x02EF2D60 LDR X21, [X9]
	0x02EF2D64 TBNZ X10, 0x0, 0x2EF2D74
	0x02EF2D68 MOV X0, X8
	0x02EF2D6C BL 0x1C5C684
	0x02EF2D70 MOV X8, X0
	0x02EF2D74 LDR X8, [X8 + 0xC0]
	0x02EF2D78 LDR X0, [X8 + 0x60]
	0x02EF2D7C LDRB W8, [X0 + 0x135]
	0x02EF2D80 TBNZ X8, 0x0, 0x2EF2D88
	0x02EF2D84 BL 0x1C5C684
	0x02EF2D88 BL 0x1C16F10
	0x02EF2D8C LDR X8, [X19 + 0x20]
	0x02EF2D90 MOV X20, X0
	0x02EF2D94 ADD X9, X8, 0x135
	0x02EF2D98 LDRH W9, [X9]
	0x02EF2D9C TBNZ X9, 0x0, 0x2EF2DB8
	0x02EF2DA0 MOV X0, X8
	0x02EF2DA4 BL 0x1C5C684
	0x02EF2DA8 LDR X8, [X19 + 0x20]
	0x02EF2DAC ADD X9, X8, 0x135
	0x02EF2DB0 LDRH W9, [X9]
	0x02EF2DB4 B 0x2EF2DBC
	0x02EF2DB8 MOV X0, X8
	0x02EF2DBC LDR X10, [X0 + 0xC0]
	0x02EF2DC0 LDR X10, [X10 + 0x68]
	0x02EF2DC4 LDR X23, [X10]
	0x02EF2DC8 TBNZ X9, 0x0, 0x2EF2DE4
	0x02EF2DCC MOV X0, X8
	0x02EF2DD0 BL 0x1C5C684
	0x02EF2DD4 LDR X8, [X19 + 0x20]
	0x02EF2DD8 ADD X9, X8, 0x135
	0x02EF2DDC LDRH W9, [X9]
	0x02EF2DE0 B 0x2EF2DE8
	0x02EF2DE4 MOV X0, X8
	0x02EF2DE8 LDR X10, [X0 + 0xC0]
	0x02EF2DEC LDR X22, [X10 + 0x58]
	0x02EF2DF0 TBNZ X9, 0x0, 0x2EF2E00
	0x02EF2DF4 MOV X0, X8
	0x02EF2DF8 BL 0x1C5C684
	0x02EF2DFC MOV X8, X0
	0x02EF2E00 LDR X8, [X8 + 0xC0]
	0x02EF2E04 MOV X0, X20
	0x02EF2E08 MOV X1, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+16]
	006 Move X19, X0
	007 Move X20, X1
	008 Compare W8, 0
	009 JumpIfEqual {40}
	010 Move W21, [X19+20]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move W21, 4
	014 Move [X19+20], W21
	015 Move X0, [X2+32]
	016 Move W8, [X0+309]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {22}
	021 Call 0x1C5D684
	022 Move X8, [X0+192]
	023 Move X0, [X8+32]
	024 Move W8, [X0+309]
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {30}
	029 Call 0x1C5D684
	030 Move W1, W21
	031 Call 0x1C17D6C
	032 Move [X19], X0
	033 Compare X0, 0
	034 JumpIfEqual {74}
	035 Move W8, [X0+24]
	036 Compare W8, 0
	037 JumpIfEqual {75}
	038 Move X8, [X19+8]
	039 Move [X0+32], X8
	040 Move [X19+8], X20
	041 Move W8, 1
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X0, [X2+32]
	044 Move W21, W8
	045 ShiftRight W21, 31
	046 And W21, W21, 0x3FFFFFFF
	047 Move W9, [X0+309]
	048 Move TEMP, X9
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {53}
	052 Call 0x1C5D684
	053 Move X8, [X0+192]
	054 Move X0, X19
	055 Move W1, W21
	056 Move X2, [X8+40]
	057 Call Array.Resize, X0, X1
	058 Move [X19+20], W21
	059 Move X8, [X19]
	060 Compare X8, 0
	061 JumpIfEqual {74}
	062 NotImplemented "Instruction LDRSW not yet implemented."
	063 Move W10, [X8+24]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Add X8, X8, X9
	066 Move [X8+32], X20
	067 Add W8, W9, 1
	068 Move [X19+16], W8
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move X30, [X31+32]
	072 Move X21, [X31+40]
	073 Return 
	074 Call 0x1C17F20
	075 Call 0x1C17F28

