Type: System.Attribute

Method: System.Attribute[] InternalGetCustomAttributes(System.Reflection.PropertyInfo element, System.Type type, System.Boolean inherit)

Disassembly:
	0x033A82F0 LDR X2, [X8 + 0x690]
	0x033A82F4 BLR X9
	0x033A82F8 CBZ X0, 0x33A840C
	0x033A82FC LDR W8, [X0 + 0x18]
	0x033A8300 MOV X21, X0
	0x033A8304 CMP W8, 0x0
	0x033A8308 CSET W23, GT
	0x033A830C CMP W8, 0x1
	0x033A8310 B.LT 0x33A83E8
	0x033A8314 ADRP X25, 0xD7C000
	0x033A8318 LDR X25, [X25 + 0xC20]
	0x033A831C MOV W24, W31
	0x033A8320 CMP W24, W8
	0x033A8324 B.CS 0x33A8410
	0x033A8328 ADD X26, X21, W24, 0x3, SXTW
	0x033A832C LDR X0, [X26 + 0x20]!
	0x033A8330 CBZ X0, 0x33A840C
	0x033A8334 LDR X8, [X0]
	0x033A8338 LDR X1, [X25]
	0x033A833C LDRB W10, [X8 + 0x130]
	0x033A8340 LDRB W9, [X1 + 0x130]
	0x033A8344 CMP W10, W9
	0x033A8348 B.CC 0x33A8408
	0x033A834C LDR X10, [X8 + 0xC8]
	0x033A8350 ADD X9, X10, X9, 0x3, LSL
	0x033A8354 LDUR X9, [X9 - 0x8]
	0x033A8358 CMP X9, X1
	0x033A835C B.NE 0x33A8408
	0x033A8360 LDR X9, [X8 + 0x328]
	0x033A8364 LDR X2, [X8 + 0x330]
	0x033A8368 MOV X1, X20
	0x033A836C BLR X9
	0x033A8370 LDR W8, [X21 + 0x18]
	0x033A8374 CMP W24, W8
	0x033A8378 B.CS 0x33A8410
	0x033A837C MOV X22, X0
	0x033A8380 LDR X0, [X26]
	0x033A8384 CBZ X0, 0x33A840C
	0x033A8388 LDR X8, [X0]
	0x033A838C LDR X1, [X25]
	0x033A8390 LDRB W10, [X8 + 0x130]
	0x033A8394 LDRB W9, [X1 + 0x130]
	0x033A8398 CMP W10, W9

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1036000
	008 Move X23, 0xD7F000
	009 Move W8, [X22+341]
	010 Move X23, [X23+992]
	011 Move W21, W2
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xD84000
	019 Move X0, [X0+3344]
	020 Call 0x1C17CF4
	021 Move X0, 0xD7F000
	022 Move X0, [X0+992]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+341], W8
	026 Move X0, [X23]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 And W2, W21, 1
	032 Move X0, X20
	033 Move X1, X19
	034 Move X3, X31
	035 Call MonoCustomAttrs.GetCustomAttributes, X0, X1, X2
	036 Compare X0, 0
	037 JumpIfEqual {46}
	038 Move X8, 0xD84000
	039 Move X8, [X8+3344]
	040 Move X19, X0
	041 Move X20, [X8]
	042 Move X1, X20
	043 Call 0x1C17E00
	044 Compare X0, 0
	045 JumpIfEqual {53}
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X22, [X31+16]
	049 Move X21, [X31+24]
	050 Move X30, [X31+48]
	051 Move X23, [X31+56]
	052 Return X0
	053 Move X0, X19
	054 Move X1, X20
	055 Call 0x1C181E0

Method: System.Attribute[] InternalGetCustomAttributes(System.Reflection.EventInfo element, System.Type type, System.Boolean inherit)

Disassembly:
	0x033A839C B.CC 0x33A8408
	0x033A83A0 LDR X10, [X8 + 0xC8]
	0x033A83A4 ADD X9, X10, X9, 0x3, LSL
	0x033A83A8 LDUR X9, [X9 - 0x8]
	0x033A83AC CMP X9, X1
	0x033A83B0 B.NE 0x33A8408
	0x033A83B4 LDR X9, [X8 + 0x328]
	0x033A83B8 LDR X2, [X8 + 0x330]
	0x033A83BC MOV X1, X19
	0x033A83C0 BLR X9
	0x033A83C4 MOV X1, X0
	0x033A83C8 MOV X0, X22
	0x033A83CC BL 0x33A8430
	0x033A83D0 TBZ X0, 0x0, 0x33A83E8
	0x033A83D4 LDR W8, [X21 + 0x18]
	0x033A83D8 ADD W24, W24, 0x1
	0x033A83DC CMP W24, W8
	0x033A83E0 CSET W23, LT
	0x033A83E4 B.LT 0x33A8320
	0x033A83E8 EOR W8, W23, 0x1
	0x033A83EC LDP X20, X19, [X31 + 0x40]
	0x033A83F0 LDP X22, X21, [X31 + 0x30]
	0x033A83F4 LDP X24, X23, [X31 + 0x20]
	0x033A83F8 LDP X26, X25, [X31 + 0x10]
	0x033A83FC AND W0, W8, 0x1
	0x033A8400 LDR X30, [X31], #0x50
	0x033A8404 RET
	0x033A8408 BL 0x1C171E0
	0x033A840C BL 0x1C16F20
	0x033A8410 BL 0x1C16F28
	0x033A8414 MOV X0, X21
	0x033A8418 BL 0x1C171E0
	0x033A841C MOV X0, X22
	0x033A8420 BL 0x1C171E0
	0x033A8424 CMP X0, X1
	0x033A8428 CSET W0, NE
	0x033A842C RET
	0x033A8430 STR X30, [X31 - 0x30]!
	0x033A8434 STP X22, X21, [X31 + 0x10]
	0x033A8438 STP X20, X19, [X31 + 0x20]
	0x033A843C ADRP X21, 0x1035000
	0x033A8440 LDRB W8, [X21 + 0x15F]
	0x033A8444 MOV X19, X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1036000
	008 Move X23, 0xD7F000
	009 Move W8, [X22+342]
	010 Move X23, [X23+992]
	011 Move W21, W2
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xD84000
	019 Move X0, [X0+3344]
	020 Call 0x1C17CF4
	021 Move X0, 0xD7F000
	022 Move X0, [X0+992]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+342], W8
	026 Move X0, [X23]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 And W2, W21, 1
	032 Move X0, X20
	033 Move X1, X19
	034 Move X3, X31
	035 Call MonoCustomAttrs.GetCustomAttributes, X0, X1, X2
	036 Compare X0, 0
	037 JumpIfEqual {46}
	038 Move X8, 0xD84000
	039 Move X8, [X8+3344]
	040 Move X19, X0
	041 Move X20, [X8]
	042 Move X1, X20
	043 Call 0x1C17E00
	044 Compare X0, 0
	045 JumpIfEqual {53}
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X22, [X31+16]
	049 Move X21, [X31+24]
	050 Move X30, [X31+48]
	051 Move X23, [X31+56]
	052 Return X0
	053 Move X0, X19
	054 Move X1, X20
	055 Call 0x1C181E0

Method: System.Boolean InternalIsDefined(System.Reflection.PropertyInfo element, System.Type attributeType, System.Boolean inherit)

Disassembly:
	0x033A8448 MOV X20, X0
	0x033A844C TBNZ X8, 0x0, 0x33A8464
	0x033A8450 ADRP X0, 0xD4B000
	0x033A8454 LDR X0, [X0 + 0xEF0]
	0x033A8458 BL 0x1C16CF4
	0x033A845C MOVZ W8, 0x1
	0x033A8460 STRB W8, [X21 + 0x15F]
	0x033A8464 ORR X8, X20, X19, 0x0
	0x033A8468 CMP X8, 0x0
	0x033A846C CSET W0, EQ
	0x033A8470 CBZ X20, 0x33A85F8
	0x033A8474 CBZ X19, 0x33A85F8
	0x033A8478 MOV X0, X20
	0x033A847C MOV X1, X31
	0x033A8480 BL 0x33BE520
	0x033A8484 CBZ X0, 0x33A8618
	0x033A8488 MOV X1, X31
	0x033A848C BL 0x3396BF8
	0x033A8490 TBZ X0, 0x0, 0x33A8508
	0x033A8494 MOV X0, X20
	0x033A8498 MOV X1, X31
	0x033A849C BL 0x33BE520
	0x033A84A0 MOV X21, X0
	0x033A84A4 MOV X0, X19
	0x033A84A8 MOV X1, X31
	0x033A84AC BL 0x33BE520
	0x033A84B0 CBZ X21, 0x33A8618
	0x033A84B4 LDR X8, [X21]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1036000
	008 Move X23, 0xD7F000
	009 Move W8, [X22+343]
	010 Move X23, [X23+992]
	011 Move W21, W2
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xD7F000
	019 Move X0, [X0+992]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+343], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 And W2, W21, 1
	029 Move X0, X20
	030 Move X1, X19
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X3, X31
	036 Move X30, [X31+48]
	037 Move X23, [X31+56]
	038 Call MonoCustomAttrs.IsDefined, X0, X1, X2
	039 Return X0

Method: System.Boolean InternalIsDefined(System.Reflection.EventInfo element, System.Type attributeType, System.Boolean inherit)

Disassembly:
	0x033A84B8 MOV X1, X0
	0x033A84BC MOV X0, X21
	0x033A84C0 LDR X9, [X8 + 0x8F8]
	0x033A84C4 LDR X2, [X8 + 0x900]
	0x033A84C8 BLR X9
	0x033A84CC TBZ X0, 0x0, 0x33A85F4
	0x033A84D0 ADRP X8, 0xD4B000
	0x033A84D4 LDR X8, [X8 + 0xEF0]
	0x033A84D8 LDR X10, [X20]
	0x033A84DC LDR X8, [X8]
	0x033A84E0 LDRB W11, [X10 + 0x130]
	0x033A84E4 LDRB W9, [X8 + 0x130]
	0x033A84E8 CMP W11, W9
	0x033A84EC B.CS 0x33A8528
	0x033A84F0 LDR X10, [X19]
	0x033A84F4 LDRB W11, [X10 + 0x130]
	0x033A84F8 CMP W11, W9
	0x033A84FC B.CC 0x33A8618
	0x033A8500 MOV X20, X31
	0x033A8504 B 0x33A854C
	0x033A8508 LDR X8, [X20]
	0x033A850C MOV X0, X20
	0x033A8510 MOV X1, X19
	0x033A8514 LDP X9, X2, [X8 + 0x138]
	0x033A8518 BLR X9
	0x033A851C TBZ X0, 0x0, 0x33A85F4
	0x033A8520 MOVZ W0, 0x1
	0x033A8524 B 0x33A85F8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1036000
	008 Move X23, 0xD7F000
	009 Move W8, [X22+344]
	010 Move X23, [X23+992]
	011 Move W21, W2
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xD7F000
	019 Move X0, [X0+992]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+344], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 And W2, W21, 1
	029 Move X0, X20
	030 Move X1, X19
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X3, X31
	036 Move X30, [X31+48]
	037 Move X23, [X31+56]
	038 Call MonoCustomAttrs.IsDefined, X0, X1, X2
	039 Return X0

Method: System.Attribute[] GetCustomAttributes(System.Reflection.MemberInfo element, System.Type type)

Disassembly:
	0x033A8528 LDR X11, [X10 + 0xC8]
	0x033A852C LDR X10, [X19]

ISIL:
	001 Move W2, 1

Method: System.Attribute[] GetCustomAttributes(System.Reflection.MemberInfo element, System.Type type, System.Boolean inherit)

Disassembly:
	0x033A8530 ADD X11, X11, X9, 0x3, LSL
	0x033A8534 LDUR X11, [X11 - 0x8]
	0x033A8538 LDRB W12, [X10 + 0x130]
	0x033A853C CMP X11, X8
	0x033A8540 CSEL X20, X20, X31, EQ
	0x033A8544 CMP W12, W9
	0x033A8548 B.CC 0x33A8608
	0x033A854C LDR X10, [X10 + 0xC8]
	0x033A8550 ADD X9, X10, X9, 0x3, LSL
	0x033A8554 LDUR X9, [X9 - 0x8]
	0x033A8558 CMP X9, X8
	0x033A855C CSEL X19, X19, X31, EQ
	0x033A8560 CBZ X20, 0x33A8618
	0x033A8564 MOV X0, X20
	0x033A8568 MOV X1, X31
	0x033A856C BL 0x3395B7C
	0x033A8570 CBZ X19, 0x33A8618
	0x033A8574 MOV W21, W0
	0x033A8578 MOV X0, X19
	0x033A857C MOV X1, X31
	0x033A8580 BL 0x3395B7C
	0x033A8584 CMP W21, W0
	0x033A8588 B.NE 0x33A85F4
	0x033A858C MOV X0, X20
	0x033A8590 MOV X1, X31
	0x033A8594 BL 0x3395B7C
	0x033A8598 CMP W0, 0x1
	0x033A859C B.LT 0x33A8520
	0x033A85A0 MOV W21, W31
	0x033A85A4 MOV X0, X20
	0x033A85A8 MOV W1, W21
	0x033A85AC MOV X2, X31
	0x033A85B0 BL 0x3395BDC
	0x033A85B4 MOV X22, X0
	0x033A85B8 MOV X0, X19
	0x033A85BC MOV W1, W21
	0x033A85C0 MOV X2, X31
	0x033A85C4 BL 0x3395BDC
	0x033A85C8 MOV X1, X0
	0x033A85CC MOV X0, X22
	0x033A85D0 BL 0x33A8430
	0x033A85D4 TBZ X0, 0x0, 0x33A85F4
	0x033A85D8 MOV X0, X20
	0x033A85DC MOV X1, X31
	0x033A85E0 ADD W21, W21, 0x1
	0x033A85E4 BL 0x3395B7C
	0x033A85E8 CMP W21, W0
	0x033A85EC B.LT 0x33A85A4
	0x033A85F0 B 0x33A8520
	0x033A85F4 MOV W0, W31
	0x033A85F8 LDP X20, X19, [X31 + 0x20]
	0x033A85FC LDP X22, X21, [X31 + 0x10]
	0x033A8600 LDR X30, [X31], #0x30
	0x033A8604 RET
	0x033A8608 CBZ X20, 0x33A8618
	0x033A860C MOV X0, X20
	0x033A8610 MOV X1, X31
	0x033A8614 BL 0x3395B7C
	0x033A8618 BL 0x1C16F20
	0x033A861C STR X30, [X31 - 0x40]!
	0x033A8620 STP X24, X23, [X31 + 0x10]
	0x033A8624 STP X22, X21, [X31 + 0x20]
	0x033A8628 STP X20, X19, [X31 + 0x30]
	0x033A862C ADRP X20, 0x1035000
	0x033A8630 LDRB W8, [X20 + 0x160]
	0x033A8634 MOV X19, X0
	0x033A8638 TBNZ X8, 0x0, 0x33A8650
	0x033A863C ADRP X0, 0xD7C000
	0x033A8640 LDR X0, [X0 + 0xC20]
	0x033A8644 BL 0x1C16CF4
	0x033A8648 MOVZ W8, 0x1
	0x033A864C STRB W8, [X20 + 0x160]
	0x033A8650 MOV X0, X19
	0x033A8654 MOV X1, X31
	0x033A8658 BL 0x33BE520
	0x033A865C CBZ X0, 0x33A8748
	0x033A8660 LDR X8, [X0]
	0x033A8664 MOVZ W1, 0x34
	0x033A8668 MOV X20, X0
	0x033A866C LDR X9, [X8 + 0x688]
	0x033A8670 LDR X2, [X8 + 0x690]
	0x033A8674 BLR X9
	0x033A8678 CBZ X0, 0x33A8748
	0x033A867C LDR W8, [X0 + 0x18]
	0x033A8680 MOV X21, X0
	0x033A8684 CMP W8, 0x1
	0x033A8688 B.LT 0x33A8718
	0x033A868C ADRP X24, 0xD7C000
	0x033A8690 LDR X24, [X24 + 0xC20]
	0x033A8694 MOV W23, W31
	0x033A8698 CMP W23, W8
	0x033A869C B.CS 0x33A874C
	0x033A86A0 ADD X8, X21, W23, 0x3, SXTW
	0x033A86A4 LDR X0, [X8 + 0x20]
	0x033A86A8 CBZ X0, 0x33A8748
	0x033A86AC LDR X8, [X0]
	0x033A86B0 LDR X1, [X24]
	0x033A86B4 LDRB W10, [X8 + 0x130]
	0x033A86B8 LDRB W9, [X1 + 0x130]
	0x033A86BC CMP W10, W9
	0x033A86C0 B.CC 0x33A8744
	0x033A86C4 LDR X10, [X8 + 0xC8]
	0x033A86C8 ADD X9, X10, X9, 0x3, LSL
	0x033A86CC LDUR X9, [X9 - 0x8]
	0x033A86D0 CMP X9, X1
	0x033A86D4 B.NE 0x33A8744
	0x033A86D8 LDR X9, [X8 + 0x328]
	0x033A86DC LDR X2, [X8 + 0x330]
	0x033A86E0 MOV X1, X19
	0x033A86E4 BLR X9
	0x033A86E8 CBZ X0, 0x33A8708
	0x033A86EC MOV X1, X31
	0x033A86F0 MOV X22, X0
	0x033A86F4 BL 0x33BE520
	0x033A86F8 CBZ X0, 0x33A8748
	0x033A86FC MOV X1, X31
	0x033A8700 BL 0x3396BF8
	0x033A8704 TBZ X0, 0x0, 0x33A8724
	0x033A8708 LDR W8, [X21 + 0x18]
	0x033A870C ADD W23, W23, 0x1
	0x033A8710 CMP W23, W8
	0x033A8714 B.LT 0x33A8698
	0x033A8718 LDR X8, [X20]
	0x033A871C MOV X0, X20
	0x033A8720 B 0x33A872C
	0x033A8724 LDR X8, [X22]
	0x033A8728 MOV X0, X22
	0x033A872C LDP X2, X1, [X8 + 0x158]
	0x033A8730 LDP X20, X19, [X31 + 0x30]
	0x033A8734 LDP X22, X21, [X31 + 0x20]
	0x033A8738 LDP X24, X23, [X31 + 0x10]
	0x033A873C LDR X30, [X31], #0x40
	0x033A8740 BR X2
	0x033A8744 BL 0x1C171E0
	0x033A8748 BL 0x1C16F20
	0x033A874C BL 0x1C16F28
	0x033A8750 B 0x1C39C44
	0x033A8754 ADD X8, X0, W2, SXTW
	0x033A8758 ANDS X31, X8, 0x3
	0x033A875C B.EQ 0x33A8784
	0x033A8760 CBZ W3, 0x33A8834
	0x033A8764 LDRB W9, [X8]
	0x033A8768 CMP W9, W1, UXTB
	0x033A876C B.EQ 0x33A8864
	0x033A8770 ADD X8, X8, 0x1
	0x033A8774 SUB W3, W3, 0x1
	0x033A8778 ANDS X31, X8, 0x3
	0x033A877C ADD W2, W2, 0x1
	0x033A8780 B.NE 0x33A8760
	0x033A8784 CMP W3, 0x4
	0x033A8788 B.LT 0x33A8808
	0x033A878C AND W10, W1, 0xFF
	0x033A8790 ORR W11, W31, 0x1010101
	0x033A8794 MOVZ W9, 0x100
	0x033A8798 MUL W10, W10, W11
	0x033A879C MOVZ W11, 0xFEFF
	0x033A87A0 MOVK W9, 0x81010000
	0x033A87A4 MOVK W11, 0x7EFE0000
	0x033A87A8 LDR W12, [X8]
	0x033A87AC EOR W13, W12, W10, 0x0
	0x033A87B0 ADD W14, W13, W11
	0x033A87B4 EOR W13, W14, W13, 0x0
	0x033A87B8 BICS W31, W9, W13, 0x0
	0x033A87BC B.EQ 0x33A87F0
	0x033A87C0 AND W12, W12, 0xFF
	0x033A87C4 CMP W12, W1, UXTB
	0x033A87C8 B.EQ 0x33A883C
	0x033A87CC LDRB W12, [X8 + 0x1]
	0x033A87D0 CMP W12, W1, UXTB
	0x033A87D4 B.EQ 0x33A8844
	0x033A87D8 LDRB W12, [X8 + 0x2]
	0x033A87DC CMP W12, W1, UXTB
	0x033A87E0 B.EQ 0x33A8850
	0x033A87E4 LDRB W12, [X8 + 0x3]
	0x033A87E8 CMP W12, W1, UXTB
	0x033A87EC B.EQ 0x33A885C
	0x033A87F0 SUB W12, W3, 0x4
	0x033A87F4 CMP W3, 0x7
	0x033A87F8 ADD X8, X8, 0x4
	0x033A87FC MOV W3, W12
	0x033A8800 B.GT 0x33A87A8
	0x033A8804 B 0x33A880C
	0x033A8808 MOV W12, W3
	0x033A880C CMP W12, 0x1
	0x033A8810 B.LT 0x33A8834
	0x033A8814 ADD W9, W12, 0x1
	0x033A8818 LDRB W10, [X8]
	0x033A881C CMP W10, W1, UXTB
	0x033A8820 B.EQ 0x33A883C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x1036000
	009 Move W8, [X22+345]
	010 Move W21, W2
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0xD84000
	018 Move X0, [X0+3344]
	019 Call 0x1C17CF4
	020 Move X0, 0xD84000
	021 Move X0, [X0+3352]
	022 Call 0x1C17CF4
	023 Move X0, 0xD7E000
	024 Move X0, [X0+1552]
	025 Call 0x1C17CF4
	026 Move X0, 0xD75000
	027 Move X0, [X0+1008]
	028 Call 0x1C17CF4
	029 Move X0, 0xD4C000
	030 Move X0, [X0+1728]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X22+345], W8
	034 Move X0, X20
	035 Move X1, X31
	036 Move X2, X31
	037 Call MemberInfo.op_Equality, X0, X1
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {174}
	042 Move X23, 0xD4C000
	043 Move X23, [X23+1728]
	044 Move X0, [X23]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Move X0, X19
	050 Move X1, X31
	051 Move X2, X31
	052 Call Type.op_Equality, X0, X1
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {181}
	057 Move X24, 0xD84000
	058 Move X0, [X23]
	059 Move X24, [X24+3352]
	060 Move W8, [X0+224]
	061 Move X22, [X24]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Move X0, X22
	066 Move X1, X31
	067 Call Type.GetTypeFromHandle, X0
	068 Compare X19, 0
	069 JumpIfEqual {171}
	070 Move X8, [X19]
	071 Move X1, X0
	072 Move X0, X19
	073 Move X9, [X8+664]
	074 Move X2, [X8+672]
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfEqual {97}
	080 Move X0, [X23]
	081 Move X22, [X24]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {86}
	085 Call 0x1C17DFC
	086 Move X0, X22
	087 Move X1, X31
	088 Call Type.GetTypeFromHandle, X0
	089 Move X1, X0
	090 Move X0, X19
	091 Move X2, X31
	092 Call Type.op_Inequality, X0, X1
	093 Move TEMP, X0
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfEqual {199}
	097 Compare X20, 0
	098 JumpIfEqual {171}
	099 Move X8, [X20]
	100 Move X0, X20
	101 Move X9, [X8+408]
	102 Move X1, [X8+416]
	103 NotImplemented "Instruction BLR not yet implemented."
	104 NotImplemented "Instruction CMP not yet implemented."
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move X9, 0xD75000
	107 Move X9, [X9+1008]
	108 Move X8, [X20]
	109 Move X1, [X9]
	110 Move W10, [X8+304]
	111 Move W9, [X1+304]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X8, [X8+200]
	114 Add X8, X8, X9
	115 NotImplemented "Instruction LDUR not yet implemented."
	116 NotImplemented "Instruction CMP not yet implemented."
	117 And W2, W21, 1
	118 Move X0, X20
	119 Move X1, X19
	120 Move X20, [X31+48]
	121 Move X19, [X31+56]
	122 Move X22, [X31+32]
	123 Move X21, [X31+40]
	124 Move X24, [X31+16]
	125 Move X23, [X31+24]
	126 Move X30, [X31+64]
	127 Call Attribute.InternalGetCustomAttributes, X0, X1, X2
	128 Return X0
	129 Move X9, 0xD7E000
	130 Move X9, [X9+1552]
	131 Move X8, [X20]
	132 Move X1, [X9]
	133 Move W10, [X8+304]
	134 Move W9, [X1+304]
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move X8, [X8+200]
	137 Add X8, X8, X9
	138 NotImplemented "Instruction LDUR not yet implemented."
	139 NotImplemented "Instruction CMP not yet implemented."
	140 And W2, W21, 1
	141 Move X0, X20
	142 Move X1, X19
	143 Move X20, [X31+48]
	144 Move X19, [X31+56]
	145 Move X22, [X31+32]
	146 Move X21, [X31+40]
	147 Move X24, [X31+16]
	148 Move X23, [X31+24]
	149 Move X30, [X31+64]
	150 Call Attribute.InternalGetCustomAttributes, X0, X1, X2
	151 Return X0
	152 Move X8, [X20]
	153 And W2, W21, 1
	154 Move X0, X20
	155 Move X1, X19
	156 Move X9, [X8+520]
	157 Move X3, [X8+528]
	158 NotImplemented "Instruction BLR not yet implemented."
	159 Move X8, 0xD84000
	160 Move X8, [X8+3344]
	161 Move X20, [X31+48]
	162 Move X19, [X31+56]
	163 Move X22, [X31+32]
	164 Move X21, [X31+40]
	165 Move X24, [X31+16]
	166 Move X23, [X31+24]
	167 Move X1, [X8]
	168 Move X30, [X31+64]
	169 Call 0x1C17E00
	170 Return X0
	171 Call 0x1C17F20
	172 Move X0, X20
	173 Call 0x1C181E0
	174 Move X0, 0xD51000
	175 Move X0, [X0+1320]
	176 Call 0x1C17D08
	177 Call 0x1C17F10
	178 Move X19, X0
	179 Move X0, 0xD84000
	180 Move X0, [X0+3360]
	181 Move X0, 0xD51000
	182 Move X0, [X0+1320]
	183 Call 0x1C17D08
	184 Call 0x1C17F10
	185 Move X19, X0
	186 Move X0, 0xD54000
	187 Move X0, [X0+1512]
	188 Call 0x1C17D08
	189 Move X1, X0
	190 Move X0, X19
	191 Move X2, X31
	192 Call ArgumentNullException..ctor, X0, X1
	193 Move X0, 0xD84000
	194 Move X0, [X0+3368]
	195 Call 0x1C17D08
	196 Move X1, X0
	197 Move X0, X19
	198 Call 0x1C17DEC
	199 Move X0, 0xD84000
	200 Move X0, [X0+3376]
	201 Call 0x1C17D08
	202 Move X1, X31
	203 Call Environment.GetResourceString, X0
	204 Move X19, X0
	205 Move X0, 0xD54000
	206 Move X0, [X0+1400]
	207 Call 0x1C17D08
	208 Call 0x1C17F10
	209 Move X1, X19
	210 Move X2, X31
	211 Move X20, X0
	212 Call ArgumentException..ctor, X0, X1
	213 Move X0, 0xD84000
	214 Move X0, [X0+3368]
	215 Call 0x1C17D08
	216 Move X1, X0
	217 Move X0, X20
	218 Call 0x1C17DEC

Method: System.Attribute[] GetCustomAttributes(System.Reflection.MemberInfo element)

Disassembly:
	0x033A8824 SUB W9, W9, 0x1
	0x033A8828 CMP W9, 0x1

ISIL:
	001 Move W1, 1

Method: System.Attribute[] GetCustomAttributes(System.Reflection.MemberInfo element, System.Boolean inherit)

Disassembly:
	0x033A882C ADD X8, X8, 0x1
	0x033A8830 B.GT 0x33A8818
	0x033A8834 MOVN W2, 0x0
	0x033A8838 B 0x33A8864
	0x033A883C SUB W2, W8, W0
	0x033A8840 B 0x33A8864
	0x033A8844 SUB W8, W8, W0
	0x033A8848 ADD W2, W8, 0x1
	0x033A884C B 0x33A8864
	0x033A8850 SUB W8, W8, W0
	0x033A8854 ADD W2, W8, 0x2
	0x033A8858 B 0x33A8864
	0x033A885C SUB W8, W8, W0
	0x033A8860 ADD W2, W8, 0x3
	0x033A8864 MOV W0, W2
	0x033A8868 RET
	0x033A886C B 0x1C39D78
	0x033A8870 SUBS X9, X1, 0x1
	0x033A8874 B.LT 0x33A88F0
	0x033A8878 UNIMPLEMENTED
	0x033A887C ADRP X9, 0xFFFFFFFFFD743000
	0x033A8880 ADRP X11, 0xFFFFFFFFFD742000
	0x033A8884 LDR V4, [X9 + 0x7E]
	0x033A8888 LDR V2, [X11 + 0x79]
	0x033A888C ADD X10, X1, 0x1
	0x033A8890 UNIMPLEMENTED
	0x033A8894 MOVN X12, 0x1
	0x033A8898 MOV X8, X31
	0x033A889C MOVI V1.2D, 0xFFFFFFFFFFFFFFFF
	0x033A88A0 AND X9, X10, 0xFFFFFFFF
	0x00000000 INVALID
	0x033A88A8 UNIMPLEMENTED
	0x033A88AC UNIMPLEMENTED
	0x033A88B0 ORR V5.16B, V5.16B, V2.16B
	0x00000000 INVALID
	0x033A88B8 UNIMPLEMENTED
	0x00000000 INVALID
	0x033A88C0 FMOV W10, S6
	0x033A88C4 TBZ X10, 0x0, 0x33A88D0
	0x033A88C8 FMOV X10, D5
	0x033A88CC STRB W31, [X10, X0, LSL]
	0x033A88D0 UNIMPLEMENTED
	0x033A88D4 TBZ X10, 0x0, 0x33A88E0
	0x033A88D8 UNIMPLEMENTED
	0x033A88DC STRB W31, [X10, X0, LSL]
	0x033A88E0 ADD X8, X8, 0x2
	0x033A88E4 CMP X9, X8
	0x00000000 INVALID
	0x033A88EC B.NE 0x33A88AC
	0x033A88F0 RET
	0x033A88F4 CBZ W4, 0x33A890C
	0x033A88F8 CBZ X2, 0x33A8910
	0x033A88FC LDR W8, [X2 + 0x18]
	0x033A8900 CBZ W8, 0x33A8910
	0x033A8904 ADD X8, X2, 0x20
	0x033A8908 B 0x33A8914
	0x033A890C RET
	0x033A8910 MOV X8, X31
	0x033A8914 ADD X0, X0, W1, SXTW
	0x033A8918 ADD X1, X8, W3, SXTW
	0x033A891C MOV W2, W4
	0x033A8920 B 0x33A8924
	0x033A8924 SUB X31, X31, 0x30
	0x033A8928 STP X30, X21, [X31 + 0x10]
	0x033A892C STP X20, X19, [X31 + 0x20]
	0x033A8930 MOV W21, W2
	0x033A8934 MOV X19, X1
	0x033A8938 CMP W2, 0x21
	0x033A893C MOV X20, X0
	0x033A8940 B.GE 0x33A89A8
	0x033A8944 ORR W8, W19, W20, 0x0
	0x033A8948 ANDS X31, X8, 0x3
	0x033A894C B.EQ 0x33A8994
	0x033A8950 SUBS W8, W21, 0x1
	0x033A8954 B.LT 0x33A896C
	0x033A8958 AND W9, W20, W19, 0x0
	0x033A895C TBZ X9, 0x0, 0x33A896C
	0x033A8960 LDRB W9, [X19], #0x1
	0x033A8964 MOV W21, W8
	0x033A8968 STRB W9, [X20], #0x1
	0x033A896C TBZ X20, 0x1, 0x33A8988
	0x033A8970 SUBS W8, W21, 0x2
	0x033A8974 B.LT 0x33A8988
	0x033A8978 TBZ X19, 0x1, 0x33A8988
	0x033A897C LDRH W9, [X19], #0x2
	0x033A8980 MOV W21, W8
	0x033A8984 STRH W9, [X20], #0x2
	0x033A8988 ORR W8, W20, W19, 0x0
	0x033A898C TBNZ X8, 0x0, 0x33A89D0
	0x033A8990 TBNZ X8, 0x1, 0x33A89E4
	0x033A8994 MOV X0, X20
	0x033A8998 MOV X1, X19
	0x033A899C MOV W2, W21
	0x033A89A0 BL 0x33A8CF8
	0x033A89A4 B 0x33A89F4
	0x033A89A8 LDRB W8, [X20]
	0x033A89AC ADD X0, X31, 0x8
	0x033A89B0 MOV X1, X31
	0x033A89B4 STR X8, [X31 + 0x8]
	0x033A89B8 BL 0x33EB198
	0x033A89BC MOV X0, X20
	0x033A89C0 MOV X1, X19
	0x033A89C4 MOV W2, W21
	0x033A89C8 BL 0x1C39DA8
	0x033A89CC B 0x33A89F4
	0x033A89D0 MOV X0, X20
	0x033A89D4 MOV X1, X19
	0x033A89D8 MOV W2, W21
	0x033A89DC BL 0x33A8DE0
	0x033A89E0 B 0x33A89F4
	0x033A89E4 MOV X0, X20
	0x033A89E8 MOV X1, X19
	0x033A89EC MOV W2, W21
	0x033A89F0 BL 0x33A8D74
	0x033A89F4 LDP X20, X19, [X31 + 0x20]
	0x033A89F8 LDP X30, X21, [X31 + 0x10]
	0x033A89FC ADD X31, X31, 0x30
	0x033A8A00 RET
	0x033A8A04 B 0x1C39DA8
	0x033A8A08 STP X30, X19, [X31 - 0x10]!
	0x033A8A0C CBZ X0, 0x33A8A20
	0x033A8A10 BL 0x1C39D78
	0x033A8A14 TBNZ X0, 0x1F, 0x33A8A54
	0x033A8A18 LDP X30, X19, [X31], #0x10
	0x033A8A1C RET
	0x033A8A20 ADRP X0, 0xD50000
	0x033A8A24 LDR X0, [X0 + 0x528]
	0x033A8A28 BL 0x1C16D08
	0x033A8A2C BL 0x1C16F10
	0x033A8A30 MOV X19, X0
	0x033A8A34 ADRP X0, 0xD73000
	0x033A8A38 LDR X0, [X0 + 0x640]
	0x033A8A3C BL 0x1C16D08
	0x033A8A40 MOV X1, X0
	0x033A8A44 MOV X0, X19
	0x033A8A48 MOV X2, X31
	0x033A8A4C BL 0x330E100
	0x033A8A50 B 0x33A8A84
	0x033A8A54 ADRP X0, 0xD53000
	0x033A8A58 LDR X0, [X0 + 0x578]
	0x033A8A5C BL 0x1C16D08
	0x033A8A60 BL 0x1C16F10
	0x033A8A64 MOV X19, X0
	0x033A8A68 ADRP X0, 0xD83000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1036000
	006 Move W8, [X21+346]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {30}
	013 Move X0, 0xD84000
	014 Move X0, [X0+3344]
	015 Call 0x1C17CF4
	016 Move X0, 0xD84000
	017 Move X0, [X0+3352]
	018 Call 0x1C17CF4
	019 Move X0, 0xD7E000
	020 Move X0, [X0+1552]
	021 Call 0x1C17CF4
	022 Move X0, 0xD75000
	023 Move X0, [X0+1008]
	024 Call 0x1C17CF4
	025 Move X0, 0xD4C000
	026 Move X0, [X0+1728]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+346], W8
	030 Move X0, X19
	031 Move X1, X31
	032 Move X2, X31
	033 Call MemberInfo.op_Equality, X0, X1
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {142}
	038 Compare X19, 0
	039 JumpIfEqual {160}
	040 Move X8, [X19]
	041 Move X0, X19
	042 Move X9, [X8+408]
	043 Move X1, [X8+416]
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move X8, 0xD4C000
	046 Move X8, [X8+1728]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X0, [X8]
	050 Move X8, 0xD84000
	051 Move X8, [X8+3352]
	052 Move W9, [X0+224]
	053 Move X21, [X8]
	054 Compare W9, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Move X0, X21
	058 Move X1, X31
	059 Call Type.GetTypeFromHandle, X0
	060 Move X9, 0xD75000
	061 Move X9, [X9+1008]
	062 Move X8, [X19]
	063 Move X1, [X9]
	064 Move W10, [X8+304]
	065 Move W9, [X1+304]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X8, [X8+200]
	068 Add X8, X8, X9
	069 NotImplemented "Instruction LDUR not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X3, X0
	072 And W2, W20, 1
	073 Move X0, X19
	074 Move X20, [X31+16]
	075 Move X19, [X31+24]
	076 Move X1, X3
	077 Move X30, [X31+32]
	078 Move X21, [X31+40]
	079 Call Attribute.InternalGetCustomAttributes, X0, X1, X2
	080 Return X0
	081 Move X0, [X8]
	082 Move X8, 0xD84000
	083 Move X8, [X8+3352]
	084 Move W9, [X0+224]
	085 Move X21, [X8]
	086 Compare W9, 0
	087 JumpIfNotEqual {89}
	088 Call 0x1C17DFC
	089 Move X0, X21
	090 Move X1, X31
	091 Call Type.GetTypeFromHandle, X0
	092 Move X9, 0xD7E000
	093 Move X9, [X9+1552]
	094 Move X8, [X19]
	095 Move X1, [X9]
	096 Move W10, [X8+304]
	097 Move W9, [X1+304]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X8, [X8+200]
	100 Add X8, X8, X9
	101 NotImplemented "Instruction LDUR not yet implemented."
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X3, X0
	104 And W2, W20, 1
	105 Move X0, X19
	106 Move X20, [X31+16]
	107 Move X19, [X31+24]
	108 Move X1, X3
	109 Move X30, [X31+32]
	110 Move X21, [X31+40]
	111 Call Attribute.InternalGetCustomAttributes, X0, X1, X2
	112 Return X0
	113 Move X0, [X8]
	114 Move X8, 0xD84000
	115 Move X8, [X8+3352]
	116 Move W9, [X0+224]
	117 Move X21, [X8]
	118 Compare W9, 0
	119 JumpIfNotEqual {121}
	120 Call 0x1C17DFC
	121 Move X0, X21
	122 Move X1, X31
	123 Call Type.GetTypeFromHandle, X0
	124 Move X8, [X19]
	125 Move X1, X0
	126 And W2, W20, 1
	127 Move X0, X19
	128 Move X9, [X8+520]
	129 Move X3, [X8+528]
	130 NotImplemented "Instruction BLR not yet implemented."
	131 Move X8, 0xD84000
	132 Move X8, [X8+3344]
	133 Move X20, [X31+16]
	134 Move X19, [X31+24]
	135 Move X1, [X8]
	136 Move X30, [X31+32]
	137 Move X21, [X31+40]
	138 Call 0x1C17E00
	139 Return X0
	140 Move X0, X19
	141 Call 0x1C181E0
	142 Move X0, 0xD51000
	143 Move X0, [X0+1320]
	144 Call 0x1C17D08
	145 Call 0x1C17F10
	146 Move X19, X0
	147 Move X0, 0xD84000
	148 Move X0, [X0+3360]
	149 Call 0x1C17D08
	150 Move X1, X0
	151 Move X0, X19
	152 Move X2, X31
	153 Call ArgumentNullException..ctor, X0, X1
	154 Move X0, 0xD84000
	155 Move X0, [X0+3384]
	156 Call 0x1C17D08
	157 Move X1, X0
	158 Move X0, X19
	159 Call 0x1C17DEC
	160 Call 0x1C17F20

Method: System.Boolean IsDefined(System.Reflection.MemberInfo element, System.Type attributeType)

Disassembly:
	0x033A8A6C LDR X0, [X0 + 0xD70]
	0x033A8A70 BL 0x1C16D08

ISIL:
	001 Move W2, 1

Method: System.Boolean IsDefined(System.Reflection.MemberInfo element, System.Type attributeType, System.Boolean inherit)

Disassembly:
	0x033A8A74 MOV X1, X0
	0x033A8A78 MOV X0, X19
	0x033A8A7C MOV X2, X31
	0x033A8A80 BL 0x3314A68
	0x033A8A84 ADRP X0, 0xD83000
	0x033A8A88 LDR X0, [X0 + 0xD78]
	0x033A8A8C BL 0x1C16D08
	0x033A8A90 MOV X1, X0
	0x033A8A94 MOV X0, X19
	0x033A8A98 BL 0x1C16DEC
	0x033A8A9C STP X30, X23, [X31 - 0x30]!
	0x033A8AA0 STP X22, X21, [X31 + 0x10]
	0x033A8AA4 STP X20, X19, [X31 + 0x20]
	0x033A8AA8 CBZ X0, 0x33A8B20
	0x033A8AAC MOV X21, X2
	0x033A8AB0 CBZ X2, 0x33A8B40
	0x033A8AB4 MOV W22, W1
	0x033A8AB8 TBNZ X1, 0x1F, 0x33A8B74
	0x033A8ABC MOV W19, W3
	0x033A8AC0 TBNZ X3, 0x1F, 0x33A8B94
	0x033A8AC4 MOV W20, W4
	0x033A8AC8 TBNZ X4, 0x1F, 0x33A8BB4
	0x033A8ACC MOV W1, W22
	0x033A8AD0 MOV X2, X21
	0x033A8AD4 MOV W3, W19
	0x033A8AD8 MOV W4, W20
	0x033A8ADC MOV X23, X0
	0x033A8AE0 BL 0x1C39C44
	0x033A8AE4 TBNZ X0, 0x0, 0x33A8B10
	0x033A8AE8 MOV X0, X23
	0x033A8AEC BL 0x33A8A08
	0x033A8AF0 SUB W8, W0, W20
	0x033A8AF4 CMP W8, W22
	0x033A8AF8 B.LT 0x33A8BFC
	0x033A8AFC MOV X0, X21
	0x033A8B00 BL 0x33A8A08
	0x033A8B04 SUB W8, W0, W20
	0x033A8B08 CMP W8, W19
	0x033A8B0C B.LT 0x33A8BFC
	0x033A8B10 LDP X20, X19, [X31 + 0x20]
	0x033A8B14 LDP X22, X21, [X31 + 0x10]
	0x033A8B18 LDP X30, X23, [X31], #0x30
	0x033A8B1C RET
	0x033A8B20 ADRP X0, 0xD50000
	0x033A8B24 LDR X0, [X0 + 0x528]
	0x033A8B28 BL 0x1C16D08
	0x033A8B2C BL 0x1C16F10
	0x033A8B30 MOV X19, X0
	0x033A8B34 ADRP X0, 0xD53000
	0x033A8B38 LDR X0, [X0 + 0x798]
	0x033A8B3C B 0x33A8B5C
	0x033A8B40 ADRP X0, 0xD50000
	0x033A8B44 LDR X0, [X0 + 0x528]
	0x033A8B48 BL 0x1C16D08
	0x033A8B4C BL 0x1C16F10
	0x033A8B50 MOV X19, X0
	0x033A8B54 ADRP X0, 0xD53000
	0x033A8B58 LDR X0, [X0 + 0x7A0]
	0x033A8B5C BL 0x1C16D08
	0x033A8B60 MOV X1, X0
	0x033A8B64 MOV X0, X19
	0x033A8B68 MOV X2, X31
	0x033A8B6C BL 0x330E100
	0x033A8B70 B 0x33A8C2C
	0x033A8B74 ADRP X0, 0xD53000
	0x033A8B78 LDR X0, [X0 + 0x760]
	0x033A8B7C BL 0x1C16D08
	0x033A8B80 BL 0x1C16F10
	0x033A8B84 MOV X19, X0
	0x033A8B88 ADRP X0, 0xD83000
	0x033A8B8C LDR X0, [X0 + 0xD80]
	0x033A8B90 B 0x33A8BD0
	0x033A8B94 ADRP X0, 0xD53000
	0x033A8B98 LDR X0, [X0 + 0x760]
	0x033A8B9C BL 0x1C16D08
	0x033A8BA0 BL 0x1C16F10
	0x033A8BA4 MOV X19, X0
	0x033A8BA8 ADRP X0, 0xD83000
	0x033A8BAC LDR X0, [X0 + 0xD88]
	0x033A8BB0 B 0x33A8BD0
	0x033A8BB4 ADRP X0, 0xD53000
	0x033A8BB8 LDR X0, [X0 + 0x760]
	0x033A8BBC BL 0x1C16D08
	0x033A8BC0 BL 0x1C16F10
	0x033A8BC4 MOV X19, X0
	0x033A8BC8 ADRP X0, 0xD73000
	0x033A8BCC LDR X0, [X0 + 0x648]
	0x033A8BD0 BL 0x1C16D08
	0x033A8BD4 MOV X20, X0
	0x033A8BD8 ADRP X0, 0xD73000
	0x033A8BDC LDR X0, [X0 + 0x670]
	0x033A8BE0 BL 0x1C16D08
	0x033A8BE4 MOV X2, X0
	0x033A8BE8 MOV X0, X19
	0x033A8BEC MOV X1, X20
	0x033A8BF0 MOV X3, X31
	0x033A8BF4 BL 0x3311888
	0x033A8BF8 B 0x33A8C2C
	0x033A8BFC ADRP X0, 0xD53000
	0x033A8C00 LDR X0, [X0 + 0x578]
	0x033A8C04 BL 0x1C16D08
	0x033A8C08 BL 0x1C16F10
	0x033A8C0C MOV X19, X0
	0x033A8C10 ADRP X0, 0xD73000
	0x033A8C14 LDR X0, [X0 + 0x760]
	0x033A8C18 BL 0x1C16D08
	0x033A8C1C MOV X1, X0
	0x033A8C20 MOV X0, X19
	0x033A8C24 MOV X2, X31
	0x033A8C28 BL 0x3314A68
	0x033A8C2C ADRP X0, 0xD83000
	0x033A8C30 LDR X0, [X0 + 0xD90]
	0x033A8C34 BL 0x1C16D08
	0x033A8C38 MOV X1, X0
	0x033A8C3C MOV X0, X19
	0x033A8C40 BL 0x1C16DEC
	0x033A8C44 STR X30, [X31 - 0x40]!
	0x033A8C48 STP X24, X23, [X31 + 0x10]
	0x033A8C4C STP X22, X21, [X31 + 0x20]
	0x033A8C50 STP X20, X19, [X31 + 0x30]
	0x033A8C54 MOV X21, X3
	0x033A8C58 MOV X19, X1
	0x033A8C5C CMP X3, X2
	0x033A8C60 MOV X20, X0
	0x033A8C64 B.LE 0x33A8C74
	0x033A8C68 MOVZ W0, 0x17
	0x033A8C6C MOV X1, X31
	0x033A8C70 BL 0x339D764
	0x033A8C74 MOVZ X8, 0x1
	0x033A8C78 CMP X21, X8
	0x033A8C7C B.LT 0x33A8CB0
	0x033A8C80 ORR X22, X31, 0x1FFFFFFFF
	0x033A8C84 MOV X23, INVALID
	0x033A8C88 MOVN W2, 0x0
	0x033A8C8C MOV X0, X19
	0x033A8C90 MOV X1, X20
	0x033A8C94 MOV X24, X21
	0x033A8C98 BL 0x33A8CD0
	0x033A8C9C ADD X21, X21, X22
	0x033A8CA0 SUB X20, X20, 0x1
	0x033A8CA4 CMP X24, X23
	0x033A8CA8 SUB X19, X19, 0x1
	0x033A8CAC B.GT 0x33A8C88
	0x033A8CB0 MOV X0, X19
	0x033A8CB4 MOV X1, X20
	0x033A8CB8 MOV W2, W21
	0x033A8CBC LDP X20, X19, [X31 + 0x30]
	0x033A8CC0 LDP X22, X21, [X31 + 0x20]
	0x033A8CC4 LDP X24, X23, [X31 + 0x10]
	0x033A8CC8 LDR X30, [X31], #0x40
	0x033A8CCC B 0x33A8CD0
	0x033A8CD0 SUB X8, X0, X1
	0x033A8CD4 CMP X8, W2, UXTW
	0x033A8CD8 B.CC 0x33A8CF0
	0x033A8CDC MOV W8, W2
	0x033A8CE0 SUB X9, X1, X0
	0x033A8CE4 CMP X9, X8
	0x033A8CE8 B.CC 0x33A8CF0
	0x033A8CEC B 0x33A8924
	0x033A8CF0 MOV X3, X31
	0x033A8CF4 B 0x3272944
	0x033A8CF8 CMP W2, 0x10
	0x033A8CFC B.LT 0x33A8D34
	0x033A8D00 LDR W8, [X1]
	0x033A8D04 CMP W2, 0x1F
	0x033A8D08 SUB W2, W2, 0x10
	0x033A8D0C STR W8, [X0]
	0x033A8D10 LDR W8, [X1 + 0x4]
	0x033A8D14 STR W8, [X0 + 0x4]
	0x033A8D18 LDR W8, [X1 + 0x8]
	0x033A8D1C STR W8, [X0 + 0x8]
	0x033A8D20 LDR W8, [X1 + 0xC]
	0x033A8D24 ADD X1, X1, 0x10
	0x033A8D28 STR W8, [X0 + 0xC]
	0x033A8D2C ADD X0, X0, 0x10
	0x033A8D30 B.GT 0x33A8D00
	0x033A8D34 CMP W2, 0x4
	0x033A8D38 B.LT 0x33A8D50
	0x033A8D3C LDR W8, [X1], #0x4
	0x033A8D40 CMP W2, 0x7
	0x033A8D44 SUB W2, W2, 0x4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x1036000
	009 Move W8, [X22+347]
	010 Move W21, W2
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0xD84000
	018 Move X0, [X0+3352]
	019 Call 0x1C17CF4
	020 Move X0, 0xD7E000
	021 Move X0, [X0+1552]
	022 Call 0x1C17CF4
	023 Move X0, 0xD75000
	024 Move X0, [X0+1008]
	025 Call 0x1C17CF4
	026 Move X0, 0xD4C000
	027 Move X0, [X0+1728]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+347], W8
	031 Move X0, X20
	032 Move X1, X31
	033 Move X2, X31
	034 Call MemberInfo.op_Equality, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {166}
	039 Move X23, 0xD4C000
	040 Move X23, [X23+1728]
	041 Move X0, [X23]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X0, X19
	047 Move X1, X31
	048 Move X2, X31
	049 Call Type.op_Equality, X0, X1
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {173}
	054 Move X24, 0xD84000
	055 Move X0, [X23]
	056 Move X24, [X24+3352]
	057 Move W8, [X0+224]
	058 Move X22, [X24]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X22
	063 Move X1, X31
	064 Call Type.GetTypeFromHandle, X0
	065 Compare X19, 0
	066 JumpIfEqual {163}
	067 Move X8, [X19]
	068 Move X1, X0
	069 Move X0, X19
	070 Move X9, [X8+664]
	071 Move X2, [X8+672]
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfEqual {94}
	077 Move X0, [X23]
	078 Move X22, [X24]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17DFC
	083 Move X0, X22
	084 Move X1, X31
	085 Call Type.GetTypeFromHandle, X0
	086 Move X1, X0
	087 Move X0, X19
	088 Move X2, X31
	089 Call Type.op_Inequality, X0, X1
	090 Move TEMP, X0
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfEqual {191}
	094 Compare X20, 0
	095 JumpIfEqual {163}
	096 Move X8, [X20]
	097 Move X0, X20
	098 Move X9, [X8+408]
	099 Move X1, [X8+416]
	100 NotImplemented "Instruction BLR not yet implemented."
	101 NotImplemented "Instruction CMP not yet implemented."
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X9, 0xD75000
	104 Move X9, [X9+1008]
	105 Move X8, [X20]
	106 Move X1, [X9]
	107 Move W10, [X8+304]
	108 Move W9, [X1+304]
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X8, [X8+200]
	111 Add X8, X8, X9
	112 NotImplemented "Instruction LDUR not yet implemented."
	113 NotImplemented "Instruction CMP not yet implemented."
	114 And W2, W21, 1
	115 Move X0, X20
	116 Move X1, X19
	117 Move X20, [X31+48]
	118 Move X19, [X31+56]
	119 Move X22, [X31+32]
	120 Move X21, [X31+40]
	121 Move X24, [X31+16]
	122 Move X23, [X31+24]
	123 Move X30, [X31+64]
	124 Call Attribute.InternalIsDefined, X0, X1, X2
	125 Return X0
	126 Move X9, 0xD7E000
	127 Move X9, [X9+1552]
	128 Move X8, [X20]
	129 Move X1, [X9]
	130 Move W10, [X8+304]
	131 Move W9, [X1+304]
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move X8, [X8+200]
	134 Add X8, X8, X9
	135 NotImplemented "Instruction LDUR not yet implemented."
	136 NotImplemented "Instruction CMP not yet implemented."
	137 And W2, W21, 1
	138 Move X0, X20
	139 Move X1, X19
	140 Move X20, [X31+48]
	141 Move X19, [X31+56]
	142 Move X22, [X31+32]
	143 Move X21, [X31+40]
	144 Move X24, [X31+16]
	145 Move X23, [X31+24]
	146 Move X30, [X31+64]
	147 Call Attribute.InternalIsDefined, X0, X1, X2
	148 Return X0
	149 Move X8, [X20]
	150 And W2, W21, 1
	151 Move X0, X20
	152 Move X1, X19
	153 Move X4, [X8+488]
	154 Move X3, [X8+496]
	155 Move X20, [X31+48]
	156 Move X19, [X31+56]
	157 Move X22, [X31+32]
	158 Move X21, [X31+40]
	159 Move X24, [X31+16]
	160 Move X23, [X31+24]
	161 Move X30, [X31+64]
	162 CallNoReturn X4
	163 Call 0x1C17F20
	164 Move X0, X20
	165 Call 0x1C181E0
	166 Move X0, 0xD51000
	167 Move X0, [X0+1320]
	168 Call 0x1C17D08
	169 Call 0x1C17F10
	170 Move X19, X0
	171 Move X0, 0xD84000
	172 Move X0, [X0+3360]
	173 Move X0, 0xD51000
	174 Move X0, [X0+1320]
	175 Call 0x1C17D08
	176 Call 0x1C17F10
	177 Move X19, X0
	178 Move X0, 0xD7E000
	179 Move X0, [X0+3600]
	180 Call 0x1C17D08
	181 Move X1, X0
	182 Move X0, X19
	183 Move X2, X31
	184 Call ArgumentNullException..ctor, X0, X1
	185 Move X0, 0xD84000
	186 Move X0, [X0+3392]
	187 Call 0x1C17D08
	188 Move X1, X0
	189 Move X0, X19
	190 Call 0x1C17DEC
	191 Move X0, 0xD84000
	192 Move X0, [X0+3376]
	193 Call 0x1C17D08
	194 Move X1, X31
	195 Call Environment.GetResourceString, X0
	196 Move X19, X0
	197 Move X0, 0xD54000
	198 Move X0, [X0+1400]
	199 Call 0x1C17D08
	200 Call 0x1C17F10
	201 Move X1, X19
	202 Move X2, X31
	203 Move X20, X0
	204 Call ArgumentException..ctor, X0, X1
	205 Move X0, 0xD84000
	206 Move X0, [X0+3392]
	207 Call 0x1C17D08
	208 Move X1, X0
	209 Move X0, X20
	210 Call 0x1C17DEC

Method: System.Attribute GetCustomAttribute(System.Reflection.MemberInfo element, System.Type attributeType)

Disassembly:
	0x033A8D48 STR W8, [X0], #0x4
	0x033A8D4C B.GT 0x33A8D3C

ISIL:
	001 Move W2, 1

Method: System.Attribute GetCustomAttribute(System.Reflection.MemberInfo element, System.Type attributeType, System.Boolean inherit)

Disassembly:
	0x033A8D50 CMP W2, 0x1
	0x033A8D54 B.LT 0x33A8D70
	0x033A8D58 ADD W8, W2, 0x1
	0x033A8D5C LDRB W9, [X1], #0x1
	0x033A8D60 SUB W8, W8, 0x1
	0x033A8D64 CMP W8, 0x1
	0x033A8D68 STRB W9, [X0], #0x1
	0x033A8D6C B.GT 0x33A8D5C
	0x033A8D70 RET
	0x033A8D74 CMP W2, 0x8
	0x033A8D78 B.LT 0x33A8DB0
	0x033A8D7C LDRH W8, [X1]
	0x033A8D80 CMP W2, 0xF
	0x033A8D84 SUB W2, W2, 0x8
	0x033A8D88 STRH W8, [X0]
	0x033A8D8C LDRH W8, [X1 + 0x2]
	0x033A8D90 STRH W8, [X0 + 0x2]
	0x033A8D94 LDRH W8, [X1 + 0x4]
	0x033A8D98 STRH W8, [X0 + 0x4]
	0x033A8D9C LDRH W8, [X1 + 0x6]
	0x033A8DA0 ADD X1, X1, 0x8
	0x033A8DA4 STRH W8, [X0 + 0x6]
	0x033A8DA8 ADD X0, X0, 0x8
	0x033A8DAC B.GT 0x33A8D7C
	0x033A8DB0 CMP W2, 0x2
	0x033A8DB4 B.LT 0x33A8DCC
	0x033A8DB8 LDRH W8, [X1], #0x2
	0x033A8DBC CMP W2, 0x3
	0x033A8DC0 SUB W2, W2, 0x2
	0x033A8DC4 STRH W8, [X0], #0x2
	0x033A8DC8 B.GT 0x33A8DB8
	0x033A8DCC CMP W2, 0x1
	0x033A8DD0 B.NE 0x33A8DDC
	0x033A8DD4 LDRB W8, [X1]
	0x033A8DD8 STRB W8, [X0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 And W2, W2, 1
	005 Call Attribute.GetCustomAttributes, X0, X1, X2
	006 Compare X0, 0
	007 JumpIfEqual {14}
	008 Move X8, [X0+24]
	009 Compare X8, 0
	010 JumpIfEqual {13}
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X0, [X0+32]
	013 Move X0, X31
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X30, [X31+32]
	017 Return X0
	018 Move X0, 0xD84000
	019 Move X0, [X0+3400]
	020 Call 0x1C17D08
	021 Move X1, X31
	022 Call Environment.GetResourceString, X0
	023 Move X19, X0
	024 Move X0, 0xD7E000
	025 Move X0, [X0+1952]
	026 Call 0x1C17D08
	027 Call 0x1C17F10
	028 Move X1, X19
	029 Move X2, X31
	030 Move X20, X0
	031 Call AmbiguousMatchException..ctor, X0, X1
	032 Move X0, 0xD84000
	033 Move X0, [X0+3408]
	034 Call 0x1C17D08
	035 Move X1, X0
	036 Move X0, X20
	037 Call 0x1C17DEC

Method: System.Attribute[] GetCustomAttributes(System.Reflection.Assembly element, System.Type attributeType)

Disassembly:
	0x033A8DDC RET
	0x033A8DE0 CMP W2, 0x8

ISIL:
	001 Move W2, 1

Method: System.Attribute[] GetCustomAttributes(System.Reflection.Assembly element, System.Type attributeType, System.Boolean inherit)

Disassembly:
	0x033A8DE4 B.LT 0x33A8E3C
	0x033A8DE8 LDRB W8, [X1]
	0x033A8DEC CMP W2, 0xF
	0x033A8DF0 SUB W2, W2, 0x8
	0x033A8DF4 STRB W8, [X0]
	0x033A8DF8 LDRB W8, [X1 + 0x1]
	0x033A8DFC STRB W8, [X0 + 0x1]
	0x033A8E00 LDRB W8, [X1 + 0x2]
	0x033A8E04 STRB W8, [X0 + 0x2]
	0x033A8E08 LDRB W8, [X1 + 0x3]
	0x033A8E0C STRB W8, [X0 + 0x3]
	0x033A8E10 LDRB W8, [X1 + 0x4]
	0x033A8E14 STRB W8, [X0 + 0x4]
	0x033A8E18 LDRB W8, [X1 + 0x5]
	0x033A8E1C STRB W8, [X0 + 0x5]
	0x033A8E20 LDRB W8, [X1 + 0x6]
	0x033A8E24 STRB W8, [X0 + 0x6]
	0x033A8E28 LDRB W8, [X1 + 0x7]
	0x033A8E2C ADD X1, X1, 0x8
	0x033A8E30 STRB W8, [X0 + 0x7]
	0x033A8E34 ADD X0, X0, 0x8
	0x033A8E38 B.GT 0x33A8DE8
	0x033A8E3C CMP W2, 0x2
	0x033A8E40 B.LT 0x33A8E68
	0x033A8E44 LDRB W8, [X1]
	0x033A8E48 CMP W2, 0x3
	0x033A8E4C SUB W2, W2, 0x2
	0x033A8E50 STRB W8, [X0]
	0x033A8E54 LDRB W8, [X1 + 0x1]
	0x033A8E58 ADD X1, X1, 0x2
	0x033A8E5C STRB W8, [X0 + 0x1]
	0x033A8E60 ADD X0, X0, 0x2
	0x033A8E64 B.GT 0x33A8E44
	0x033A8E68 CMP W2, 0x1
	0x033A8E6C B.NE 0x33A8E78
	0x033A8E70 LDRB W8, [X1]
	0x033A8E74 STRB W8, [X0]
	0x033A8E78 RET
	0x033A8E7C MOV X1, X31
	0x033A8E80 B 0x33C011C
	0x033A8E84 MOV X1, X31
	0x033A8E88 B 0x33BDD8C
	0x033A8E8C SUB X31, X31, 0xC0
	0x033A8E90 STP X29, X30, [X31 + 0x60]
	0x033A8E94 STP X28, X27, [X31 + 0x70]
	0x033A8E98 STP X26, X25, [X31 + 0x80]
	0x033A8E9C STP X24, X23, [X31 + 0x90]
	0x033A8EA0 STP X22, X21, [X31 + 0xA0]
	0x033A8EA4 STP X20, X19, [X31 + 0xB0]
	0x033A8EA8 ADRP X19, 0x1035000
	0x033A8EAC LDRB W8, [X19 + 0x161]
	0x033A8EB0 MOV X23, X7
	0x033A8EB4 MOV X24, X6
	0x033A8EB8 MOV X28, X3
	0x033A8EBC MOV X20, X2
	0x033A8EC0 STR W1, [X31 + 0x48]
	0x033A8EC4 TBNZ X8, 0x0, 0x33A8F6C
	0x033A8EC8 ADRP X0, 0xD83000
	0x033A8ECC LDR X0, [X0 + 0xD98]
	0x033A8ED0 BL 0x1C16CF4
	0x033A8ED4 ADRP X0, 0xD7E000
	0x033A8ED8 LDR X0, [X0 + 0x538]
	0x033A8EDC BL 0x1C16CF4
	0x033A8EE0 ADRP X0, 0xD83000
	0x033A8EE4 LDR X0, [X0 + 0x538]
	0x033A8EE8 BL 0x1C16CF4
	0x033A8EEC ADRP X0, 0xD83000
	0x033A8EF0 LDR X0, [X0 + 0xDA0]
	0x033A8EF4 BL 0x1C16CF4
	0x033A8EF8 ADRP X0, 0xD4C000
	0x033A8EFC LDR X0, [X0 + 0xE58]
	0x033A8F00 BL 0x1C16CF4
	0x033A8F04 ADRP X0, 0xD83000
	0x033A8F08 LDR X0, [X0 + 0xCD0]
	0x033A8F0C BL 0x1C16CF4
	0x033A8F10 ADRP X0, 0xD4B000
	0x033A8F14 LDR X0, [X0 + 0x9D0]
	0x033A8F18 BL 0x1C16CF4
	0x033A8F1C ADRP X0, 0xD83000
	0x033A8F20 LDR X0, [X0 + 0xDA8]
	0x033A8F24 BL 0x1C16CF4
	0x033A8F28 ADRP X0, 0xD4B000
	0x033A8F2C LDR X0, [X0 + 0xEF0]
	0x033A8F30 BL 0x1C16CF4
	0x033A8F34 ADRP X0, 0xD55000
	0x033A8F38 LDR X0, [X0 + 0x968]
	0x033A8F3C BL 0x1C16CF4
	0x033A8F40 ADRP X0, 0xD74000
	0x033A8F44 LDR X0, [X0 + 0x4E8]
	0x033A8F48 BL 0x1C16CF4
	0x033A8F4C ADRP X0, 0xD53000
	0x033A8F50 LDR X0, [X0 + 0xC60]
	0x033A8F54 BL 0x1C16CF4
	0x033A8F58 ADRP X0, 0xD4B000
	0x033A8F5C LDR X0, [X0 + 0x6C0]
	0x033A8F60 BL 0x1C16CF4
	0x033A8F64 MOVZ W8, 0x1
	0x033A8F68 STRB W8, [X19 + 0x161]
	0x033A8F6C CBZ X20, 0x33AAC44
	0x033A8F70 LDR X8, [X20 + 0x18]
	0x033A8F74 CBZ X8, 0x33AAC44
	0x033A8F78 MOV X0, X20
	0x033A8F7C MOV X1, X31
	0x033A8F80 BL 0x33A01F0
	0x033A8F84 CBZ X0, 0x33AACE4
	0x033A8F88 ADRP X8, 0xD83000
	0x033A8F8C LDR X8, [X8 + 0xCD0]
	0x033A8F90 MOV X21, X0
	0x033A8F94 LDR X22, [X8]
	0x033A8F98 MOV X1, X22
	0x033A8F9C BL 0x1C16E00
	0x033A8FA0 CBZ X0, 0x33AACEC
	0x033A8FA4 ADRP X8, 0xD83000
	0x033A8FA8 LDR X8, [X8 + 0xDA0]
	0x033A8FAC MOV X27, X0
	0x033A8FB0 STR X31, [X23]
	0x033A8FB4 STR X23, [X31 + 0x10]
	0x033A8FB8 LDR X0, [X8]
	0x033A8FBC LDR W1, [X27 + 0x18]
	0x033A8FC0 ADRP X22, 0xD4C000
	0x033A8FC4 LDR X22, [X22 + 0xE58]
	0x033A8FC8 BL 0x1C16D6C
	0x033A8FCC LDR X1, [X27 + 0x18]
	0x033A8FD0 MOV X23, X0
	0x033A8FD4 CMP W1, 0x1
	0x033A8FD8 B.LT 0x33A90E4
	0x033A8FDC MOV W8, W31
	0x033A8FE0 CMP W8, W1
	0x033A8FE4 B.CS 0x33A9F8C
	0x033A8FE8 SXTW X19, W8
	0x033A8FEC ADD X20, X27, X19, 0x3, LSL
	0x033A8FF0 LDR X0, [X20 + 0x20]!
	0x033A8FF4 CBZ X0, 0x33A9190
	0x033A8FF8 LDR X8, [X0]
	0x033A8FFC LDR X9, [X8 + 0x398]
	0x033A9000 LDR X1, [X8 + 0x3A0]
	0x033A9004 BLR X9
	0x033A9008 CBZ X0, 0x33A9190
	0x033A900C LDR X8, [X28]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x1036000
	009 Move W8, [X22+348]
	010 Move W20, W2
	011 Move X19, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0xD84000
	018 Move X0, [X0+3344]
	019 Call 0x1C17CF4
	020 Move X0, 0xD84000
	021 Move X0, [X0+3352]
	022 Call 0x1C17CF4
	023 Move X0, 0xD4C000
	024 Move X0, [X0+1728]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+348], W8
	028 Move X0, X21
	029 Move X1, X31
	030 Move X2, X31
	031 Call Assembly.op_Equality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {119}
	036 Move X23, 0xD4C000
	037 Move X23, [X23+1728]
	038 Move X0, [X23]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X19
	044 Move X1, X31
	045 Move X2, X31
	046 Call Type.op_Equality, X0, X1
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {126}
	051 Move X24, 0xD84000
	052 Move X0, [X23]
	053 Move X24, [X24+3352]
	054 Move W8, [X0+224]
	055 Move X22, [X24]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move X0, X22
	060 Move X1, X31
	061 Call Type.GetTypeFromHandle, X0
	062 Compare X19, 0
	063 JumpIfEqual {118}
	064 Move X8, [X19]
	065 Move X1, X0
	066 Move X0, X19
	067 Move X9, [X8+664]
	068 Move X2, [X8+672]
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfEqual {91}
	074 Move X0, [X23]
	075 Move X22, [X24]
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 Move X0, X22
	081 Move X1, X31
	082 Call Type.GetTypeFromHandle, X0
	083 Move X1, X0
	084 Move X0, X19
	085 Move X2, X31
	086 Call Type.op_Inequality, X0, X1
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfEqual {147}
	091 Compare X21, 0
	092 JumpIfEqual {118}
	093 Move X8, [X21]
	094 And W2, W20, 1
	095 Move X0, X21
	096 Move X1, X19
	097 Move X9, [X8+520]
	098 Move X3, [X8+528]
	099 NotImplemented "Instruction BLR not yet implemented."
	100 Compare X0, 0
	101 JumpIfEqual {110}
	102 Move X8, 0xD84000
	103 Move X8, [X8+3344]
	104 Move X19, X0
	105 Move X20, [X8]
	106 Move X1, X20
	107 Call 0x1C17E00
	108 Compare X0, 0
	109 JumpIfEqual {144}
	110 Move X20, [X31+48]
	111 Move X19, [X31+56]
	112 Move X22, [X31+32]
	113 Move X21, [X31+40]
	114 Move X24, [X31+16]
	115 Move X23, [X31+24]
	116 Move X30, [X31+64]
	117 Return X0
	118 Call 0x1C17F20
	119 Move X0, 0xD51000
	120 Move X0, [X0+1320]
	121 Call 0x1C17D08
	122 Call 0x1C17F10
	123 Move X19, X0
	124 Move X0, 0xD84000
	125 Move X0, [X0+3360]
	126 Move X0, 0xD51000
	127 Move X0, [X0+1320]
	128 Call 0x1C17D08
	129 Call 0x1C17F10
	130 Move X19, X0
	131 Move X0, 0xD7E000
	132 Move X0, [X0+3600]
	133 Call 0x1C17D08
	134 Move X1, X0
	135 Move X0, X19
	136 Move X2, X31
	137 Call ArgumentNullException..ctor, X0, X1
	138 Move X0, 0xD84000
	139 Move X0, [X0+3416]
	140 Call 0x1C17D08
	141 Move X1, X0
	142 Move X0, X19
	143 Call 0x1C17DEC
	144 Move X0, X19
	145 Move X1, X20
	146 Call 0x1C181E0
	147 Move X0, 0xD84000
	148 Move X0, [X0+3376]
	149 Call 0x1C17D08
	150 Move X1, X31
	151 Call Environment.GetResourceString, X0
	152 Move X19, X0
	153 Move X0, 0xD54000
	154 Move X0, [X0+1400]
	155 Call 0x1C17D08
	156 Call 0x1C17F10
	157 Move X1, X19
	158 Move X2, X31
	159 Move X20, X0
	160 Call ArgumentException..ctor, X0, X1
	161 Move X0, 0xD84000
	162 Move X0, [X0+3416]
	163 Call 0x1C17D08
	164 Move X1, X0
	165 Move X0, X20
	166 Call 0x1C17DEC

Method: System.Attribute[] GetCustomAttributes(System.Reflection.Assembly element)

Disassembly:
	0x033A9010 CBZ X8, 0x33A9190
	0x033A9014 LDR W9, [X0 + 0x18]

ISIL:
	001 Move W1, 1

Method: System.Attribute[] GetCustomAttributes(System.Reflection.Assembly element, System.Boolean inherit)

Disassembly:
	0x033A9018 LDR W8, [X8 + 0x18]
	0x033A901C MOV X26, X0
	0x033A9020 LDR X0, [X22]
	0x033A9024 CMP W9, W8
	0x033A9028 CSEL W1, W9, W8, GT
	0x033A902C BL 0x1C16D6C
	0x033A9030 CBZ X23, 0x33A9190
	0x033A9034 LDR W8, [X23 + 0x18]
	0x033A9038 CMP W19, W8
	0x033A903C B.CS 0x33A9F8C
	0x033A9040 MOV X21, X0
	0x033A9044 ADD X8, X23, X19, 0x3, LSL
	0x033A9048 STR X0, [X8 + 0x20]
	0x033A904C CBZ X24, 0x33A9090
	0x033A9050 ADRP X8, 0xD82000
	0x033A9054 LDR X8, [X8 + 0x538]
	0x033A9058 LDR X0, [X8]
	0x033A905C LDR W8, [X0 + 0xE0]
	0x033A9060 CBNZ W8, 0x33A9068
	0x033A9064 BL 0x1C16DFC
	0x033A9068 MOV X0, X21
	0x033A906C MOV X1, X26
	0x033A9070 MOV X2, X24
	0x033A9074 BL 0x33AAD3C
	0x033A9078 TBNZ X0, 0x0, 0x33A90D4
	0x033A907C LDR W8, [X27 + 0x18]
	0x033A9080 CMP W19, W8
	0x033A9084 B.CS 0x33A9F8C
	0x033A9088 STR X31, [X20]
	0x033A908C B 0x33A90D4
	0x033A9090 LDR X8, [X28]
	0x033A9094 CBZ X8, 0x33A9190
	0x033A9098 LDR X9, [X8 + 0x18]
	0x033A909C UBFM X8, X9, 0x20, 0x1F
	0x033A90A0 CMP X8, 0x1
	0x033A90A4 B.LT 0x33A90D4
	0x033A90A8 MOV X8, X31
	0x033A90AC SXTW X9, W9
	0x033A90B0 ADD X10, X21, 0x20
	0x033A90B4 CBZ X21, 0x33A9190
	0x033A90B8 LDR W11, [X21 + 0x18]
	0x033A90BC CMP X8, X11
	0x033A90C0 B.CS 0x33A9F8C
	0x033A90C4 STR W8, [X10, X8, LSL #2]
	0x033A90C8 ADD X8, X8, 0x1
	0x033A90CC CMP X8, X9
	0x033A90D0 B.LT 0x33A90B4
	0x033A90D4 LDR X1, [X27 + 0x18]
	0x033A90D8 ADD W8, W19, 0x1
	0x033A90DC CMP W8, W1
	0x033A90E0 B.LT 0x33A8FE0
	0x033A90E4 ADRP X19, 0xD52000
	0x033A90E8 LDR X19, [X19 + 0xC60]
	0x033A90EC LDR X0, [X19]
	0x033A90F0 BL 0x1C16D6C
	0x033A90F4 LDR X8, [X28]
	0x033A90F8 CBZ X8, 0x33A9190
	0x033A90FC MOV X21, X0
	0x033A9100 LDR X0, [X19]
	0x033A9104 LDR W1, [X8 + 0x18]
	0x033A9108 BL 0x1C16D6C
	0x033A910C LDR X8, [X28]
	0x033A9110 CBZ X8, 0x33A9190
	0x033A9114 ADRP X22, 0xD4A000
	0x033A9118 LDR X22, [X22 + 0x6C0]
	0x033A911C MOV X26, X0
	0x033A9120 MOVZ W19, 0x4
	0x033A9124 LDR W9, [X8 + 0x18]
	0x033A9128 SUB X20, X19, 0x4
	0x033A912C CMP X20, W9, SXTW
	0x033A9130 B.GE 0x33A9194
	0x033A9134 CMP X20, X9
	0x033A9138 B.CS 0x33A9F8C
	0x033A913C LDR X0, [X8, X19, LSL #3]
	0x033A9140 CBZ X0, 0x33A9180
	0x033A9144 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1035000
	006 Move W8, [X21+349]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0xD83000
	014 Move X0, [X0+3344]
	015 Call 0x1C17CF4
	016 Move X0, 0xD83000
	017 Move X0, [X0+3352]
	018 Call 0x1C17CF4
	019 Move X0, 0xD4B000
	020 Move X0, [X0+1728]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+349], W8
	024 Move X0, X20
	025 Move X1, X31
	026 Move X2, X31
	027 Call Assembly.op_Equality, X0, X1
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {69}
	032 Move X8, 0xD4B000
	033 Move X8, [X8+1728]
	034 Move X0, [X8]
	035 Move X8, 0xD83000
	036 Move X8, [X8+3352]
	037 Move W9, [X0+224]
	038 Move X21, [X8]
	039 Compare W9, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X21
	043 Move X1, X31
	044 Call Type.GetTypeFromHandle, X0
	045 Compare X20, 0
	046 JumpIfEqual {87}
	047 Move X8, [X20]
	048 Move X1, X0
	049 And W2, W19, 1
	050 Move X0, X20
	051 Move X9, [X8+520]
	052 Move X3, [X8+528]
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Compare X0, 0
	055 JumpIfEqual {64}
	056 Move X8, 0xD83000
	057 Move X8, [X8+3344]
	058 Move X19, X0
	059 Move X20, [X8]
	060 Move X1, X20
	061 Call 0x1C17E00
	062 Compare X0, 0
	063 JumpIfEqual {88}
	064 Move X20, [X31+16]
	065 Move X19, [X31+24]
	066 Move X30, [X31+32]
	067 Move X21, [X31+40]
	068 Return X0
	069 Move X0, 0xD50000
	070 Move X0, [X0+1320]
	071 Call 0x1C17D08
	072 Call 0x1C17F10
	073 Move X19, X0
	074 Move X0, 0xD83000
	075 Move X0, [X0+3360]
	076 Call 0x1C17D08
	077 Move X1, X0
	078 Move X0, X19
	079 Move X2, X31
	080 Call ArgumentNullException..ctor, X0, X1
	081 Move X0, 0xD83000
	082 Move X0, [X0+3424]
	083 Call 0x1C17D08
	084 Move X1, X0
	085 Move X0, X19
	086 Call 0x1C17DEC
	087 Call 0x1C17F20
	088 Move X0, X19
	089 Move X1, X20
	090 Call 0x1C181E0

Method: System.Attribute GetCustomAttribute(System.Reflection.Assembly element, System.Type attributeType)

Disassembly:
	0x033A9148 BL 0x33BE520
	0x033A914C CBZ X26, 0x33A9190

ISIL:
	001 Move W2, 1

Method: System.Attribute GetCustomAttribute(System.Reflection.Assembly element, System.Type attributeType, System.Boolean inherit)

Disassembly:
	0x033A9150 MOV X22, X0
	0x033A9154 CBZ X0, 0x33A916C
	0x033A9158 LDR X8, [X26]
	0x033A915C MOV X0, X22
	0x033A9160 LDR X1, [X8 + 0x40]
	0x033A9164 BL 0x1C16E00
	0x033A9168 CBZ X0, 0x33AAC28
	0x033A916C LDR W8, [X26 + 0x18]
	0x033A9170 CMP X20, X8
	0x033A9174 B.CS 0x33A9F8C
	0x033A9178 STR X22, [X26, X19, LSL #3]
	0x033A917C LDR X8, [X28]
	0x033A9180 ADRP X22, 0xD4A000
	0x033A9184 LDR X22, [X22 + 0x6C0]
	0x033A9188 ADD X19, X19, 0x1
	0x033A918C CBNZ X8, 0x33A9124
	0x033A9190 BL 0x1C16F20
	0x033A9194 LDR X8, [X27 + 0x18]
	0x033A9198 STR X21, [X31 + 0x30]
	0x033A919C CMP W8, 0x1
	0x033A91A0 B.LT 0x33AAC94
	0x033A91A4 STR X24, [X31 + 0x20]
	0x033A91A8 STR X28, [X31 + 0x58]
	0x033A91AC STR X27, [X31 + 0x38]
	0x033A91B0 ADRP X24, 0xD7D000
	0x033A91B4 LDR X24, [X24 + 0x538]
	0x033A91B8 MOV X25, X31
	0x033A91BC MOV W20, W31
	0x033A91C0 AND X8, X8, 0x0
	0x033A91C4 CMP X25, W8, UXTW
	0x033A91C8 B.CS 0x33A9F8C
	0x033A91CC ADD X19, X27, X25, 0x3, LSL
	0x033A91D0 LDR X0, [X19 + 0x20]!
	0x033A91D4 MOV X1, X31
	0x033A91D8 MOV X2, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 And W2, W2, 1
	005 Call Attribute.GetCustomAttributes, X0, X1, X2
	006 Compare X0, 0
	007 JumpIfEqual {14}
	008 Move X8, [X0+24]
	009 Compare X8, 0
	010 JumpIfEqual {13}
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X0, [X0+32]
	013 Move X0, X31
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X30, [X31+32]
	017 Return X0
	018 Move X0, 0xD83000
	019 Move X0, [X0+3400]
	020 Call 0x1C17D08
	021 Move X1, X31
	022 Call Environment.GetResourceString, X0
	023 Move X19, X0
	024 Move X0, 0xD7D000
	025 Move X0, [X0+1952]
	026 Call 0x1C17D08
	027 Call 0x1C17F10
	028 Move X1, X19
	029 Move X2, X31
	030 Move X20, X0
	031 Call AmbiguousMatchException..ctor, X0, X1
	032 Move X0, 0xD83000
	033 Move X0, [X0+3432]
	034 Call 0x1C17D08
	035 Move X1, X0
	036 Move X0, X20
	037 Call 0x1C17DEC

Method: System.Void .ctor()

Disassembly:
	0x033A61F0 BL 0x33A605C
	0x033A61F4 MOV X21, X0

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x033A91DC BL 0x32CE12C
	0x033A91E0 TBNZ X0, 0x0, 0x33A9DF8
	0x033A91E4 LDR W8, [X27 + 0x18]
	0x033A91E8 CMP X25, X8
	0x033A91EC B.CS 0x33A9F8C
	0x033A91F0 LDR X0, [X19]
	0x033A91F4 CBZ X0, 0x33A9190
	0x033A91F8 LDR X8, [X0]
	0x033A91FC LDR X9, [X8 + 0x398]
	0x033A9200 LDR X1, [X8 + 0x3A0]
	0x033A9204 BLR X9
	0x033A9208 CBZ X0, 0x33A9190
	0x033A920C LDR X21, [X0 + 0x18]
	0x033A9210 LDR X8, [X28]
	0x033A9214 MOV X27, X0
	0x033A9218 CBZ X21, 0x33A92AC
	0x033A921C STR X19, [X31 + 0x28]
	0x033A9220 CBZ X8, 0x33A9190
	0x033A9224 LDR W19, [X8 + 0x18]
	0x033A9228 STR X20, [X31 + 0x40]
	0x033A922C CMP W21, W19
	0x033A9230 B.LE 0x33A9328
	0x033A9234 SUB W8, W21, 0x1
	0x033A9238 CMP W8, W19
	0x033A923C B.LE 0x33A9530
	0x033A9240 ADD X8, X27, W19, 0x3, SXTW
	0x033A9244 ADD X20, X8, 0x20
	0x033A9248 CMP W19, W21
	0x033A924C B.CS 0x33A9F8C
	0x033A9250 LDR X0, [X20]
	0x033A9254 CBZ X0, 0x33A9190
	0x033A9258 LDR X8, [X0]
	0x033A925C LDP X9, X1, [X8 + 0x1F8]
	0x033A9260 BLR X9
	0x033A9264 LDR X8, [X24]
	0x033A9268 MOV X21, X0
	0x033A926C LDR W9, [X8 + 0xE0]
	0x033A9270 CBNZ W9, 0x33A9280
	0x033A9274 MOV X0, X8
	0x033A9278 BL 0x1C16DFC
	0x033A927C LDR X8, [X24]
	0x033A9280 LDR X8, [X8 + 0xB8]
	0x033A9284 LDR X8, [X8]
	0x033A9288 CMP X21, X8
	0x033A928C B.EQ 0x33A9524
	0x033A9290 LDR X21, [X27 + 0x18]
	0x033A9294 ADD W19, W19, 0x1
	0x033A9298 ADD X20, X20, 0x8
	0x033A929C SUB W8, W21, 0x1
	0x033A92A0 CMP W19, W8
	0x033A92A4 B.LT 0x33A9248
	0x033A92A8 B 0x33A952C
	0x033A92AC CBZ X8, 0x33A9190
	0x033A92B0 LDR X8, [X8 + 0x18]
	0x033A92B4 LDR X27, [X31 + 0x38]
	0x033A92B8 CBZ X8, 0x33A92E4
	0x033A92BC LDR W8, [X27 + 0x18]
	0x033A92C0 CMP X25, X8
	0x033A92C4 B.CS 0x33A9F8C
	0x033A92C8 LDR X0, [X19]
	0x033A92CC CBZ X0, 0x33A9190
	0x033A92D0 LDR X8, [X0]
	0x033A92D4 LDR X9, [X8 + 0x278]
	0x033A92D8 LDR X1, [X8 + 0x280]
	0x033A92DC BLR X9
	0x033A92E0 TBZ X0, 0x1, 0x33A9DF8
	0x033A92E4 CBZ X23, 0x33A9190
	0x033A92E8 LDR W8, [X23 + 0x18]
	0x033A92EC CMP X25, X8
	0x033A92F0 B.CS 0x33A9F8C
	0x033A92F4 CMP W20, W8
	0x033A92F8 B.CS 0x33A9F8C
	0x033A92FC ADD X8, X23, 0x20
	0x033A9300 LDR X9, [X8, X25, LSL #3]
	0x033A9304 MOV X10, X19
	0x033A9308 SXTW X19, W20
	0x033A930C STR X9, [X8, X19, LSL #3]
	0x033A9310 LDR W8, [X27 + 0x18]
	0x033A9314 CMP X25, X8
	0x033A9318 B.CS 0x33A9F8C
	0x033A931C LDR X22, [X10]
	0x033A9320 CBNZ X22, 0x33A9DC4
	0x033A9324 B 0x33A9DDC
	0x033A9328 CBZ W21, 0x33A9F8C
	0x033A932C SUB W8, W21, 0x1
	0x033A9330 SXTW X24, W8
	0x033A9334 ADD X20, X27, X24, 0x3, LSL
	0x033A9338 LDR X0, [X20 + 0x20]!
	0x033A933C CBZ X0, 0x33A9190
	0x033A9340 LDR X8, [X0]
	0x033A9344 LDP X9, X1, [X8 + 0x1D8]
	0x033A9348 BLR X9
	0x033A934C CBZ X0, 0x33A9190
	0x033A9350 MOV X1, X31
	0x033A9354 BL 0x3396BF8
	0x033A9358 CMP W21, W19
	0x033A935C B.GE 0x33A9420
	0x033A9360 TBZ X0, 0x0, 0x33A951C
	0x033A9364 LDR W8, [X27 + 0x18]
	0x033A9368 CMP W24, W8
	0x033A936C B.CS 0x33A9F8C
	0x033A9370 LDR X0, [X22]
	0x033A9374 ADRP X9, 0xD82000
	0x033A9378 LDR X22, [X20]
	0x033A937C LDR W8, [X0 + 0xE0]
	0x033A9380 LDR X9, [X9 + 0xDA8]
	0x033A9384 LDR X21, [X9]
	0x033A9388 CBNZ W8, 0x33A9390
	0x033A938C BL 0x1C16DFC
	0x033A9390 MOV X0, X21
	0x033A9394 MOV X1, X31
	0x033A9398 BL 0x338C698
	0x033A939C CBZ X22, 0x33A9190
	0x033A93A0 LDR X8, [X22]
	0x033A93A4 MOV X1, X0
	0x033A93A8 MOVZ W2, 0x1
	0x033A93AC MOV X0, X22
	0x033A93B0 LDR X9, [X8 + 0x208]
	0x033A93B4 LDR X3, [X8 + 0x210]
	0x033A93B8 BLR X9
	0x033A93BC TBZ X0, 0x0, 0x33A9650
	0x033A93C0 ADRP X22, 0xD4A000
	0x033A93C4 LDR X22, [X22 + 0x6C0]
	0x033A93C8 CBZ X23, 0x33A9190
	0x033A93CC LDR W8, [X23 + 0x18]
	0x033A93D0 CMP X25, X8
	0x033A93D4 B.CS 0x33A9F8C
	0x033A93D8 ADD X8, X23, X25, 0x3, LSL
	0x033A93DC LDR X8, [X8 + 0x20]
	0x033A93E0 CBZ X8, 0x33A9190
	0x033A93E4 LDR W9, [X8 + 0x18]
	0x033A93E8 CMP W24, W9
	0x033A93EC B.CS 0x33A9F8C
	0x033A93F0 ADD X8, X8, X24, 0x2, LSL
	0x033A93F4 LDR W8, [X8 + 0x20]
	0x033A93F8 CMP W8, W24
	0x033A93FC B.NE 0x33A951C
	0x033A9400 LDR W8, [X27 + 0x18]
	0x033A9404 CMP W24, W8
	0x033A9408 B.CS 0x33A9F8C
	0x033A940C ADRP X24, 0xD7D000
	0x033A9410 LDR X0, [X20]
	0x033A9414 LDR X24, [X24 + 0x538]
	0x033A9418 CBNZ X0, 0x33A963C
	0x033A941C B 0x33A9190
	0x033A9420 TBZ X0, 0x0, 0x33A9510

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x1035000
	011 Move W8, [X21+350]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xD7C000
	019 Move X0, [X0+3104]
	020 Call 0x1C17CF4
	021 Move X0, 0xD74000
	022 Move X0, [X0+1256]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+350], W8
	026 Compare X19, 0
	027 JumpIfEqual {69}
	028 Move X23, 0xD74000
	029 Move X23, [X23+1256]
	030 Move X0, X20
	031 Move X1, X31
	032 Call "il2cpp_vm_object_is_inst", X0
	033 Move X21, X0
	034 Compare X0, 0
	035 JumpIfEqual {45}
	036 Move X8, [X21]
	037 Move X1, [X23]
	038 Move W10, [X8+304]
	039 Move W9, [X1+304]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X8, [X8+200]
	042 Add X8, X8, X9
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X0, X19
	046 Move X1, X31
	047 Call "il2cpp_vm_object_is_inst", X0
	048 Move X1, [X23]
	049 Move X22, X0
	050 Move W8, [X1+224]
	051 Compare W8, 0
	052 JumpIfEqual {55}
	053 Compare X22, 0
	054 JumpIfNotEqual {60}
	055 Move X0, X1
	056 Call 0x1C17DFC
	057 Move X1, [X23]
	058 Compare X22, 0
	059 JumpIfEqual {68}
	060 Move X8, [X22]
	061 Move W9, [X1+304]
	062 Move W10, [X8+304]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X8, [X8+200]
	065 Add X8, X8, X9
	066 NotImplemented "Instruction LDUR not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move W8, W31
	070 Compare X21, 0
	071 JumpIfEqual {150}
	072 Move X8, [X21]
	073 Move W1, 52
	074 Move X0, X21
	075 Move X9, [X8+1672]
	076 Move X2, [X8+1680]
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Compare X0, 0
	079 JumpIfEqual {150}
	080 Move W8, [X0+24]
	081 Move X21, X0
	082 NotImplemented "Instruction CMP not yet implemented."
	083 NotImplemented "Instruction CSET not yet implemented."
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X25, 0xD7C000
	086 Move X25, [X25+3104]
	087 Move W24, W31
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Add X26, X21, W24
	090 Add X26, X26, 32
	091 Move X0, [X26]
	092 Compare X0, 0
	093 JumpIfEqual {150}
	094 Move X8, [X0]
	095 Move X1, [X25]
	096 Move W10, [X8+304]
	097 Move W9, [X1+304]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X10, [X8+200]
	100 Add X9, X10, X9
	101 NotImplemented "Instruction LDUR not yet implemented."
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X9, [X8+808]
	104 Move X2, [X8+816]
	105 Move X1, X20
	106 NotImplemented "Instruction BLR not yet implemented."
	107 Move W8, [X21+24]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X22, X0
	110 Move X0, [X26]
	111 Compare X0, 0
	112 JumpIfEqual {150}
	113 Move X8, [X0]
	114 Move X1, [X25]
	115 Move W10, [X8+304]
	116 Move W9, [X1+304]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move X10, [X8+200]
	119 Add X9, X10, X9
	120 NotImplemented "Instruction LDUR not yet implemented."
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move X9, [X8+808]
	123 Move X2, [X8+816]
	124 Move X1, X19
	125 NotImplemented "Instruction BLR not yet implemented."
	126 Move X1, X0
	127 Move X0, X22
	128 Call Attribute.AreFieldValuesEqual, X0, X1
	129 Move TEMP, X0
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfNotEqual {137}
	133 Move W8, [X21+24]
	134 Add W24, W24, 1
	135 NotImplemented "Instruction CMP not yet implemented."
	136 NotImplemented "Instruction CSET not yet implemented."
	137 Xor W8, W23, 1
	138 Move X20, [X31+64]
	139 Move X19, [X31+72]
	140 Move X22, [X31+48]
	141 Move X21, [X31+56]
	142 Move X24, [X31+32]
	143 Move X23, [X31+40]
	144 Move X26, [X31+16]
	145 Move X25, [X31+24]
	146 And W0, W8, 1
	147 Move X30, [X31+80]
	148 Return X0
	149 Call 0x1C181E0
	150 Call 0x1C17F20
	151 Call 0x1C17F28
	152 Move X0, X21
	153 Call 0x1C181E0
	154 Move X0, X22
	155 Call 0x1C181E0

Method: System.Boolean AreFieldValuesEqual(System.Object thisValue, System.Object thatValue)

Disassembly:
	0x033A9430 LDR X0, [X22]
	0x033A9434 ADRP X9, 0xD82000
	0x033A9438 LDR X22, [X20]
	0x033A943C LDR W8, [X0 + 0xE0]
	0x033A9440 LDR X9, [X9 + 0xDA8]
	0x033A9444 LDR X21, [X9]
	0x033A9448 CBNZ W8, 0x33A9450
	0x033A944C BL 0x1C16DFC
	0x033A9450 MOV X0, X21
	0x033A9454 MOV X1, X31
	0x033A9458 BL 0x338C698
	0x033A945C CBZ X22, 0x33A9190
	0x033A9460 LDR X8, [X22]
	0x033A9464 MOV X1, X0
	0x033A9468 MOVZ W2, 0x1
	0x033A946C MOV X0, X22
	0x033A9470 LDR X9, [X8 + 0x208]
	0x033A9474 LDR X3, [X8 + 0x210]
	0x033A9478 BLR X9
	0x033A947C TBZ X0, 0x0, 0x33A966C
	0x033A9480 ADRP X22, 0xD4A000
	0x033A9484 LDR X22, [X22 + 0x6C0]
	0x033A9488 CBZ X23, 0x33A9190
	0x033A948C LDR W8, [X23 + 0x18]
	0x033A9490 CMP X25, X8
	0x033A9494 B.CS 0x33A9F8C
	0x033A9498 ADD X8, X23, X25, 0x3, LSL
	0x033A949C LDR X8, [X8 + 0x20]
	0x033A94A0 CBZ X8, 0x33A9190
	0x033A94A4 LDR W9, [X8 + 0x18]
	0x033A94A8 CMP W24, W9
	0x033A94AC B.CS 0x33A9F8C
	0x033A94B0 ADD X8, X8, X24, 0x2, LSL
	0x033A94B4 LDR W8, [X8 + 0x20]
	0x033A94B8 CMP W8, W24
	0x033A94BC B.NE 0x33A9510
	0x033A94C0 LDR W8, [X27 + 0x18]
	0x033A94C4 CMP W24, W8
	0x033A94C8 B.CS 0x33A9F8C
	0x033A94CC LDR X0, [X20]
	0x033A94D0 CBZ X0, 0x33A9190
	0x033A94D4 LDR X8, [X0]
	0x033A94D8 LDP X9, X1, [X8 + 0x1D8]
	0x033A94DC BLR X9
	0x033A94E0 CBZ X26, 0x33A9190
	0x033A94E4 LDR W8, [X26 + 0x18]
	0x033A94E8 CMP W24, W8
	0x033A94EC B.CS 0x33A9F8C
	0x033A94F0 CBZ X0, 0x33A9190
	0x033A94F4 LDR X8, [X0]
	0x033A94F8 ADD X9, X26, X24, 0x3, LSL
	0x033A94FC LDR X1, [X9 + 0x20]
	0x033A9500 LDR X9, [X8 + 0x2A8]
	0x033A9504 LDR X2, [X8 + 0x2B0]
	0x033A9508 BLR X9
	0x033A950C TBZ X0, 0x0, 0x33A969C
	0x033A9510 STR X31, [X31 + 0x50]
	0x033A9514 ADRP X24, 0xD7D000
	0x033A9518 B 0x33A967C
	0x033A951C LDR X27, [X31 + 0x38]
	0x033A9520 B 0x33A965C
	0x033A9524 LDR W21, [X27 + 0x18]
	0x033A9528 SUB W8, W21, 0x1
	0x033A952C LDR X20, [X31 + 0x40]
	0x033A9530 CMP W19, W8
	0x033A9534 B.NE 0x33A958C
	0x033A9538 CMP W19, W21
	0x033A953C B.CS 0x33A9F8C
	0x033A9540 ADD X20, X27, W19, 0x3, SXTW
	0x033A9544 LDR X0, [X20 + 0x20]!
	0x033A9548 CBZ X0, 0x33A9190
	0x033A954C LDR X8, [X0]
	0x033A9550 LDP X9, X1, [X8 + 0x1F8]
	0x033A9554 BLR X9
	0x033A9558 LDR X8, [X24]
	0x033A955C MOV X21, X0
	0x033A9560 LDR W9, [X8 + 0xE0]
	0x033A9564 CBNZ W9, 0x33A9574
	0x033A9568 MOV X0, X8
	0x033A956C BL 0x1C16DFC
	0x033A9570 LDR X8, [X24]
	0x033A9574 LDR X8, [X8 + 0xB8]
	0x033A9578 LDR X8, [X8]
	0x033A957C CMP X21, X8
	0x033A9580 B.EQ 0x33A9594
	0x033A9584 STR X31, [X31 + 0x50]
	0x033A9588 B 0x33A96DC
	0x033A958C LDR X27, [X31 + 0x38]
	0x033A9590 B 0x33A9DF8
	0x033A9594 LDR W8, [X27 + 0x18]
	0x033A9598 CMP W19, W8
	0x033A959C B.CS 0x33A9F8C
	0x033A95A0 LDR X0, [X20]
	0x033A95A4 CBZ X0, 0x33A9190
	0x033A95A8 LDR X8, [X0]
	0x033A95AC LDP X9, X1, [X8 + 0x1D8]
	0x033A95B0 BLR X9
	0x033A95B4 CBZ X0, 0x33A9190
	0x033A95B8 MOV X1, X31
	0x033A95BC BL 0x3396BF8
	0x033A95C0 TBZ X0, 0x0, 0x33A9684
	0x033A95C4 LDR W8, [X27 + 0x18]
	0x033A95C8 CMP W19, W8
	0x033A95CC B.CS 0x33A9F8C
	0x033A95D0 LDR X0, [X22]
	0x033A95D4 ADRP X9, 0xD82000
	0x033A95D8 LDR X22, [X20]
	0x033A95DC LDR W8, [X0 + 0xE0]
	0x033A95E0 LDR X9, [X9 + 0xDA8]
	0x033A95E4 LDR X21, [X9]
	0x033A95E8 CBNZ W8, 0x33A95F0
	0x033A95EC BL 0x1C16DFC
	0x033A95F0 MOV X0, X21
	0x033A95F4 MOV X1, X31
	0x033A95F8 BL 0x338C698
	0x033A95FC CBZ X22, 0x33A9190
	0x033A9600 LDR X8, [X22]
	0x033A9604 MOV X1, X0
	0x033A9608 MOVZ W2, 0x1
	0x033A960C MOV X0, X22
	0x033A9610 LDR X9, [X8 + 0x208]
	0x033A9614 LDR X3, [X8 + 0x210]
	0x033A9618 BLR X9

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1035000
	007 Move W8, [X21+351]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD4B000
	015 Move X0, [X0+3824]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+351], W8
	019 Or X8, X20, X19
	020 NotImplemented "Instruction CMP not yet implemented."
	021 NotImplemented "Instruction CSET not yet implemented."
	022 Compare X20, 0
	023 JumpIfEqual {130}
	024 Compare X19, 0
	025 JumpIfEqual {130}
	026 Move X0, X20
	027 Move X1, X31
	028 Call "il2cpp_vm_object_is_inst", X0
	029 Compare X0, 0
	030 JumpIfEqual {141}
	031 Move X1, X31
	032 Call Type.get_IsArray, X0
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {67}
	037 Move X0, X20
	038 Move X1, X31
	039 Call "il2cpp_vm_object_is_inst", X0
	040 Move X21, X0
	041 Move X0, X19
	042 Move X1, X31
	043 Call "il2cpp_vm_object_is_inst", X0
	044 Compare X21, 0
	045 JumpIfEqual {141}
	046 Move X8, [X21]
	047 Move X1, X0
	048 Move X0, X21
	049 Move X9, [X8+2296]
	050 Move X2, [X8+2304]
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {129}
	056 Move X8, 0xD4B000
	057 Move X8, [X8+3824]
	058 Move X10, [X20]
	059 Move X8, [X8]
	060 Move W11, [X10+304]
	061 Move W9, [X8+304]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X10, [X19]
	064 Move W11, [X10+304]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X20, X31
	067 Move X8, [X20]
	068 Move X0, X20
	069 Move X1, X19
	070 Move X9, [X8+312]
	071 Move X2, [X8+320]
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {129}
	077 Move W0, 1
	078 Move X11, [X10+200]
	079 Move X10, [X19]
	080 Add X11, X11, X9
	081 NotImplemented "Instruction LDUR not yet implemented."
	082 Move W12, [X10+304]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 NotImplemented "Instruction CSEL not yet implemented."
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X10, [X10+200]
	087 Add X9, X10, X9
	088 NotImplemented "Instruction LDUR not yet implemented."
	089 NotImplemented "Instruction CMP not yet implemented."
	090 NotImplemented "Instruction CSEL not yet implemented."
	091 Compare X20, 0
	092 JumpIfEqual {141}
	093 Move X0, X20
	094 Move X1, X31
	095 Call Array.get_Length, X0
	096 Compare X19, 0
	097 JumpIfEqual {141}
	098 Move W21, W0
	099 Move X0, X19
	100 Move X1, X31
	101 Call Array.get_Length, X0
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X0, X20
	104 Move X1, X31
	105 Call Array.get_Length, X0
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move W21, W31
	108 Move X0, X20
	109 Move W1, W21
	110 Move X2, X31
	111 Call Array.GetValue, X0, X1
	112 Move X22, X0
	113 Move X0, X19
	114 Move W1, W21
	115 Move X2, X31
	116 Call Array.GetValue, X0, X1
	117 Move X1, X0
	118 Move X0, X22
	119 Call Attribute.AreFieldValuesEqual, X0, X1
	120 Move TEMP, X0
	121 And TEMP, TEMP, 1
	122 Compare TEMP, 1
	123 JumpIfNotEqual {129}
	124 Move X0, X20
	125 Move X1, X31
	126 Add W21, W21, 1
	127 Call Array.get_Length, X0
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move W0, W31
	130 Move X20, [X31+32]
	131 Move X19, [X31+40]
	132 Move X22, [X31+16]
	133 Move X21, [X31+24]
	134 Move X30, [X31+48]
	135 Return X0
	136 Compare X20, 0
	137 JumpIfEqual {141}
	138 Move X0, X20
	139 Move X1, X31
	140 Call Array.get_Length, X0
	141 Call 0x1C17F20

Method: System.Int32 GetHashCode()

Disassembly:
	0x033A961C TBZ X0, 0x0, 0x33A968C
	0x033A9620 LDR W8, [X27 + 0x18]
	0x033A9624 ADRP X22, 0xD4A000
	0x033A9628 LDR X22, [X22 + 0x6C0]
	0x033A962C CMP W19, W8
	0x033A9630 B.CS 0x33A9F8C
	0x033A9634 LDR X0, [X20]
	0x033A9638 CBZ X0, 0x33A9190
	0x033A963C LDR X8, [X0]
	0x033A9640 LDP X9, X1, [X8 + 0x1D8]
	0x033A9644 BLR X9
	0x033A9648 CBNZ X0, 0x33A96C8
	0x033A964C B 0x33A9190
	0x033A9650 ADRP X22, 0xD4A000
	0x033A9654 LDR X27, [X31 + 0x38]
	0x033A9658 LDR X22, [X22 + 0x6C0]
	0x033A965C ADRP X24, 0xD7D000
	0x033A9660 LDR X24, [X24 + 0x538]
	0x033A9664 LDR X20, [X31 + 0x40]
	0x033A9668 B 0x33A9DF8
	0x033A966C STR X31, [X31 + 0x50]
	0x033A9670 ADRP X22, 0xD4A000
	0x033A9674 ADRP X24, 0xD7D000
	0x033A9678 LDR X22, [X22 + 0x6C0]
	0x033A967C LDR X24, [X24 + 0x538]
	0x033A9680 B 0x33A96DC
	0x033A9684 LDP X27, X20, [X31 + 0x38]
	0x033A9688 B 0x33A9DF8
	0x033A968C ADRP X22, 0xD4A000
	0x033A9690 LDP X27, X20, [X31 + 0x38]
	0x033A9694 LDR X22, [X22 + 0x6C0]
	0x033A9698 B 0x33A9DF8
	0x033A969C LDR W8, [X27 + 0x18]
	0x033A96A0 CMP W24, W8
	0x033A96A4 B.CS 0x33A9F8C
	0x033A96A8 LDR X0, [X20]
	0x033A96AC CBZ X0, 0x33A9190
	0x033A96B0 LDR X8, [X0]
	0x033A96B4 LDP X9, X1, [X8 + 0x1D8]
	0x033A96B8 BLR X9
	0x033A96BC ADRP X24, 0xD7D000
	0x033A96C0 LDR X24, [X24 + 0x538]
	0x033A96C4 CBZ X0, 0x33A9190
	0x033A96C8 LDR X8, [X0]
	0x033A96CC LDR X9, [X8 + 0x428]
	0x033A96D0 LDR X1, [X8 + 0x430]
	0x033A96D4 BLR X9
	0x033A96D8 STR X0, [X31 + 0x50]
	0x033A96DC LDR X0, [X22]
	0x033A96E0 LDR W8, [X0 + 0xE0]
	0x033A96E4 CBNZ W8, 0x33A96EC
	0x033A96E8 BL 0x1C16DFC
	0x033A96EC LDR X0, [X31 + 0x50]
	0x033A96F0 MOV X1, X31
	0x033A96F4 MOV X2, X31
	0x033A96F8 BL 0x3395F0C
	0x033A96FC TBZ X0, 0x0, 0x33A970C
	0x033A9700 LDR W8, [X27 + 0x18]
	0x033A9704 SUB W20, W8, 0x1
	0x033A9708 B 0x33A9718
	0x033A970C LDR X8, [X28]
	0x033A9710 CBZ X8, 0x33A9190
	0x033A9714 LDR W20, [X8 + 0x18]
	0x033A9718 CMP W20, 0x1
	0x033A971C B.LT 0x33A9B40
	0x033A9720 ADD X8, X23, X25, 0x3, LSL
	0x033A9724 MOV W19, W31
	0x033A9728 ADD X24, X8, 0x20
	0x033A972C LDR W8, [X27 + 0x18]
	0x033A9730 CMP W19, W8
	0x033A9734 B.CS 0x33A9F8C
	0x033A9738 SXTW X28, W19
	0x033A973C ADD X8, X27, X28, 0x3, LSL
	0x033A9740 LDR X0, [X8 + 0x20]
	0x033A9744 CBZ X0, 0x33A9190
	0x033A9748 LDR X8, [X0]
	0x033A974C LDP X9, X1, [X8 + 0x1D8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x1035000
	009 Move W8, [X20+352]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xD7C000
	016 Move X0, [X0+3104]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+352], W8
	020 Move X0, X19
	021 Move X1, X31
	022 Call "il2cpp_vm_object_is_inst", X0
	023 Compare X0, 0
	024 JumpIfEqual {88}
	025 Move X8, [X0]
	026 Move W1, 52
	027 Move X20, X0
	028 Move X9, [X8+1672]
	029 Move X2, [X8+1680]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Compare X0, 0
	032 JumpIfEqual {88}
	033 Move W8, [X0+24]
	034 Move X21, X0
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X24, 0xD7C000
	037 Move X24, [X24+3104]
	038 Move W23, W31
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Add X8, X21, W23
	041 Move X0, [X8+32]
	042 Compare X0, 0
	043 JumpIfEqual {88}
	044 Move X8, [X0]
	045 Move X1, [X24]
	046 Move W10, [X8+304]
	047 Move W9, [X1+304]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X10, [X8+200]
	050 Add X9, X10, X9
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X9, [X8+808]
	054 Move X2, [X8+816]
	055 Move X1, X19
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Compare X0, 0
	058 JumpIfEqual {70}
	059 Move X1, X31
	060 Move X22, X0
	061 Call "il2cpp_vm_object_is_inst", X0
	062 Compare X0, 0
	063 JumpIfEqual {88}
	064 Move X1, X31
	065 Call Type.get_IsArray, X0
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {75}
	070 Move W8, [X21+24]
	071 Add W23, W23, 1
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X8, [X20]
	074 Move X0, X20
	075 Move X8, [X22]
	076 Move X0, X22
	077 Move X2, [X8+344]
	078 Move X1, [X8+352]
	079 Move X20, [X31+48]
	080 Move X19, [X31+56]
	081 Move X22, [X31+32]
	082 Move X21, [X31+40]
	083 Move X24, [X31+16]
	084 Move X23, [X31+24]
	085 Move X30, [X31+64]
	086 CallNoReturn X2
	087 Call 0x1C181E0
	088 Call 0x1C17F20
	089 Call 0x1C17F28

