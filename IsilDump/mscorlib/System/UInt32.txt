Type: System.UInt32

Method: System.Int32 CompareTo(System.Object value)

Disassembly:
	0x0339A988 LDR X21, [X21 + 0x78]
	0x0339A98C MOV X19, X0
	0x0339A990 TBNZ X8, 0x0, 0x339A9B4
	0x0339A994 ADRP X0, 0xD8E000
	0x0339A998 LDR X0, [X0 + 0x78]
	0x0339A99C BL 0x1C16CF4
	0x0339A9A0 ADRP X0, 0xD88000
	0x0339A9A4 LDR X0, [X0 + 0x1D8]
	0x0339A9A8 BL 0x1C16CF4
	0x0339A9AC MOVZ W8, 0x1
	0x0339A9B0 STRB W8, [X22 + 0xDB]
	0x0339A9B4 LDR X1, [X20]
	0x0339A9B8 LDR X19, [X19]
	0x0339A9BC MOV X0, X31
	0x0339A9C0 BL 0x25BF134
	0x0339A9C4 MOV X20, X0
	0x0339A9C8 LDR X0, [X21]
	0x0339A9CC MOV X21, X1
	0x0339A9D0 LDR W8, [X0 + 0xE0]
	0x0339A9D4 CBNZ W8, 0x339A9DC
	0x0339A9D8 BL 0x1C16DFC
	0x0339A9DC MOV X0, X19
	0x0339A9E0 MOV X1, X20
	0x0339A9E4 MOV X2, X21
	0x0339A9E8 LDP X20, X19, [X31 + 0x20]
	0x0339A9EC LDP X22, X21, [X31 + 0x10]
	0x0339A9F0 MOV X3, X31
	0x0339A9F4 MOV X4, X31
	0x0339A9F8 LDR X30, [X31], #0x30
	0x0339A9FC B 0x338519C
	0x0339AA00 STP X30, X23, [X31 - 0x30]!
	0x0339AA04 STP X22, X21, [X31 + 0x10]
	0x0339AA08 STP X20, X19, [X31 + 0x20]
	0x0339AA0C ADRP X23, 0x1043000
	0x0339AA10 ADRP X21, 0xD88000
	0x0339AA14 ADRP X22, 0xD8E000
	0x0339AA18 LDRB W8, [X23 + 0xDC]
	0x0339AA1C LDR X21, [X21 + 0x1D8]
	0x0339AA20 LDR X22, [X22 + 0x78]
	0x0339AA24 MOV X19, X1
	0x0339AA28 MOV X20, X0
	0x0339AA2C TBNZ X8, 0x0, 0x339AA50
	0x0339AA30 ADRP X0, 0xD8E000
	0x0339AA34 LDR X0, [X0 + 0x78]
	0x0339AA38 BL 0x1C16CF4
	0x0339AA3C ADRP X0, 0xD88000
	0x0339AA40 LDR X0, [X0 + 0x1D8]
	0x0339AA44 BL 0x1C16CF4
	0x0339AA48 MOVZ W8, 0x1
	0x0339AA4C STRB W8, [X23 + 0xDC]
	0x0339AA50 LDR X1, [X21]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1044000
	006 Move W8, [X21+192]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xD62000
	014 Move X0, [X0+1824]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+192], W8
	018 Compare X20, 0
	019 JumpIfEqual {33}
	020 Move X8, 0xD62000
	021 Move X8, [X8+1824]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X0, X20
	026 Call 0x1C17E08
	027 Move W8, [X0]
	028 Move W9, [X19]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move TEMP, 0
	031 Not TEMP
	032 Move W0, TEMP
	033 Move W0, 1
	034 NotImplemented "Instruction CSET not yet implemented."
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return X0
	040 Move X0, 0xD62000
	041 Move X0, [X0+1400]
	042 Call 0x1C17D08
	043 Call 0x1C17F10
	044 Move X19, X0
	045 Move X0, 0xD92000
	046 Move X0, [X0+1432]
	047 Call 0x1C17D08
	048 Move X1, X0
	049 Move X0, X19
	050 Move X2, X31
	051 Call ArgumentException..ctor, X0, X1
	052 Move X0, 0xD92000
	053 Move X0, [X0+1440]
	054 Call 0x1C17D08
	055 Move X1, X0
	056 Move X0, X19
	057 Call 0x1C17DEC

Method: System.Int32 CompareTo(System.UInt32 value)

Disassembly:
	0x0339AA54 LDR X20, [X20]
	0x0339AA58 MOV X0, X31
	0x0339AA5C BL 0x25BF134
	0x0339AA60 MOV X21, X0
	0x0339AA64 LDR X0, [X22]
	0x0339AA68 MOV X22, X1
	0x0339AA6C LDR W8, [X0 + 0xE0]

ISIL:
	001 Move W8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move TEMP, 0
	004 Not TEMP
	005 Move W0, TEMP
	006 Return X0
	007 NotImplemented "Instruction CSET not yet implemented."
	008 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x0339AA70 CBNZ W8, 0x339AA78
	0x0339AA74 BL 0x1C16DFC
	0x0339AA78 MOV X0, X20
	0x0339AA7C MOV X1, X21
	0x0339AA80 MOV X2, X22
	0x0339AA84 MOV X3, X19
	0x0339AA88 LDP X20, X19, [X31 + 0x20]
	0x0339AA8C LDP X22, X21, [X31 + 0x10]
	0x0339AA90 MOV X4, X31
	0x0339AA94 LDP X30, X23, [X31], #0x30
	0x0339AA98 B 0x338519C
	0x0339AA9C STR X30, [X31 - 0x30]!
	0x0339AAA0 STP X22, X21, [X31 + 0x10]
	0x0339AAA4 STP X20, X19, [X31 + 0x20]
	0x0339AAA8 ADRP X21, 0x1043000
	0x0339AAAC LDRB W8, [X21 + 0xDD]
	0x0339AAB0 MOV X20, X1
	0x0339AAB4 MOV X19, X0
	0x0339AAB8 TBNZ X8, 0x0, 0x339AAD0
	0x0339AABC ADRP X0, 0xD8E000
	0x0339AAC0 LDR X0, [X0 + 0x78]
	0x0339AAC4 BL 0x1C16CF4
	0x0339AAC8 MOVZ W8, 0x1
	0x0339AACC STRB W8, [X21 + 0xDD]
	0x0339AAD0 ADRP X21, 0x103F000
	0x0339AAD4 LDRB W8, [X21 + 0x762]
	0x0339AAD8 LDR X19, [X19]
	0x0339AADC CBNZ W8, 0x339AAF4
	0x0339AAE0 ADRP X0, 0xD80000
	0x0339AAE4 LDR X0, [X0 + 0x290]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1044000
	006 Move W8, [X21+193]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xD62000
	014 Move X0, [X0+1824]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+193], W8
	018 Compare X19, 0
	019 JumpIfEqual {25}
	020 Move X8, 0xD62000
	021 Move X8, [X8+1824]
	022 Move X9, [X19]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W0, W31
	026 Move W20, [X20]
	027 Move X0, X19
	028 Call 0x1C17E08
	029 Move W8, [X0]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSET not yet implemented."
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return X0

Method: System.Boolean Equals(System.UInt32 obj)

Disassembly:
	0x0339AAE8 BL 0x1C16CF4
	0x0339AAEC MOVZ W8, 0x1
	0x0339AAF0 STRB W8, [X21 + 0x762]
	0x0339AAF4 ADRP X22, 0xD8E000

ISIL:
	001 Move W8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x0339AAF8 LDR X22, [X22 + 0x78]
	0x0339AAFC CBZ X20, 0x339AB18

ISIL:
	001 Move W0, [X0]
	002 Return X0

Method: System.String ToString()

Disassembly:
	0x0339AB00 MOV X0, X20
	0x0339AB04 MOV X1, X31
	0x0339AB08 BL 0x3225708
	0x0339AB0C LDR W20, [X20 + 0x10]
	0x0339AB10 MOV X21, X0
	0x0339AB14 B 0x339AB1C
	0x0339AB18 MOV X21, X31
	0x0339AB1C LDR X0, [X22]
	0x0339AB20 LDR W8, [X0 + 0xE0]
	0x0339AB24 CBNZ W8, 0x339AB2C
	0x0339AB28 BL 0x1C16DFC
	0x0339AB2C MOV X0, X19
	0x0339AB30 MOV X1, X21
	0x0339AB34 MOV X2, X20
	0x0339AB38 LDP X20, X19, [X31 + 0x20]
	0x0339AB3C LDP X22, X21, [X31 + 0x10]
	0x0339AB40 MOV X3, X31
	0x0339AB44 MOV X4, X31
	0x0339AB48 LDR X30, [X31], #0x30
	0x0339AB4C B 0x338519C
	0x0339AB50 STP X30, X23, [X31 - 0x30]!
	0x0339AB54 STP X22, X21, [X31 + 0x10]
	0x0339AB58 STP X20, X19, [X31 + 0x20]
	0x0339AB5C ADRP X22, 0x1043000
	0x0339AB60 LDRB W8, [X22 + 0xDE]
	0x0339AB64 MOV X19, X2
	0x0339AB68 MOV X21, X1
	0x0339AB6C MOV X20, X0
	0x0339AB70 TBNZ X8, 0x0, 0x339AB88
	0x0339AB74 ADRP X0, 0xD8E000
	0x0339AB78 LDR X0, [X0 + 0x78]
	0x0339AB7C BL 0x1C16CF4
	0x0339AB80 MOVZ W8, 0x1
	0x0339AB84 STRB W8, [X22 + 0xDE]
	0x0339AB88 ADRP X22, 0x103F000
	0x0339AB8C LDRB W8, [X22 + 0x762]
	0x0339AB90 LDR X20, [X20]
	0x0339AB94 CBNZ W8, 0x339ABAC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1044000
	007 Move X20, 0xD89000
	008 Move X21, 0xD8F000
	009 Move W8, [X22+194]
	010 Move X20, [X20+472]
	011 Move X21, [X21+120]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xD8F000
	018 Move X0, [X0+120]
	019 Call 0x1C17CF4
	020 Move X0, 0xD89000
	021 Move X0, [X0+472]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+194], W8
	025 Move X1, [X20]
	026 Move W19, [X19]
	027 Move X0, X31
	028 Call ReadOnlySpan`1<Char>.op_Implicit, X0
	029 Move X20, X0
	030 Move X0, [X21]
	031 Move X21, X1
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move W0, W19
	037 Move X1, X20
	038 Move X2, X21
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X3, X31
	044 Move X4, X31
	045 Move X30, [X31+48]
	046 Call Number.FormatUInt32, X0, X1, X2
	047 Return X0

Method: System.String ToString(System.IFormatProvider provider)

Disassembly:
	0x0339AB98 ADRP X0, 0xD80000
	0x0339AB9C LDR X0, [X0 + 0x290]
	0x0339ABA0 BL 0x1C16CF4
	0x0339ABA4 MOVZ W8, 0x1
	0x0339ABA8 STRB W8, [X22 + 0x762]
	0x0339ABAC ADRP X23, 0xD8E000
	0x0339ABB0 LDR X23, [X23 + 0x78]
	0x0339ABB4 CBZ X21, 0x339ABD0
	0x0339ABB8 MOV X0, X21
	0x0339ABBC MOV X1, X31
	0x0339ABC0 BL 0x3225708
	0x0339ABC4 LDR W21, [X21 + 0x10]
	0x0339ABC8 MOV X22, X0
	0x0339ABCC B 0x339ABD4
	0x0339ABD0 MOV X22, X31
	0x0339ABD4 LDR X0, [X23]
	0x0339ABD8 LDR W8, [X0 + 0xE0]
	0x0339ABDC CBNZ W8, 0x339ABE4
	0x0339ABE0 BL 0x1C16DFC
	0x0339ABE4 MOV X0, X20
	0x0339ABE8 MOV X1, X22
	0x0339ABEC MOV X2, X21
	0x0339ABF0 MOV X3, X19
	0x0339ABF4 LDP X20, X19, [X31 + 0x20]
	0x0339ABF8 LDP X22, X21, [X31 + 0x10]
	0x0339ABFC MOV X4, X31
	0x0339AC00 LDP X30, X23, [X31], #0x30
	0x0339AC04 B 0x338519C
	0x0339AC08 STP X30, X27, [X31 - 0x50]!
	0x0339AC0C STP X26, X25, [X31 + 0x10]
	0x0339AC10 STP X24, X23, [X31 + 0x20]
	0x0339AC14 STP X22, X21, [X31 + 0x30]
	0x0339AC18 STP X20, X19, [X31 + 0x40]
	0x0339AC1C ADRP X27, 0x1043000
	0x0339AC20 ADRP X26, 0xD8E000
	0x0339AC24 LDRB W8, [X27 + 0xDF]
	0x0339AC28 LDR X26, [X26 + 0x78]
	0x0339AC2C MOV X20, X6
	0x0339AC30 MOV X22, X5

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x1044000
	008 Move X21, 0xD89000
	009 Move X22, 0xD8F000
	010 Move W8, [X23+195]
	011 Move X21, [X21+472]
	012 Move X22, [X22+120]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xD8F000
	020 Move X0, [X0+120]
	021 Call 0x1C17CF4
	022 Move X0, 0xD89000
	023 Move X0, [X0+472]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+195], W8
	027 Move X1, [X21]
	028 Move W20, [X20]
	029 Move X0, X31
	030 Call ReadOnlySpan`1<Char>.op_Implicit, X0
	031 Move X21, X0
	032 Move X0, [X22]
	033 Move X22, X1
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move W0, W20
	039 Move X1, X21
	040 Move X2, X22
	041 Move X3, X19
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X4, X31
	047 Move X30, [X31+48]
	048 Move X23, [X31+56]
	049 Call Number.FormatUInt32, X0, X1, X2
	050 Return X0

Method: System.String ToString(System.String format)

Disassembly:
	0x0339AC34 MOV X24, X4
	0x0339AC38 MOV X19, X3
	0x0339AC3C MOV X21, X2
	0x0339AC40 MOV X23, X1
	0x0339AC44 MOV X25, X0
	0x0339AC48 TBNZ X8, 0x0, 0x339AC60
	0x0339AC4C ADRP X0, 0xD8E000
	0x0339AC50 LDR X0, [X0 + 0x78]
	0x0339AC54 BL 0x1C16CF4
	0x0339AC58 MOVZ W8, 0x1
	0x0339AC5C STRB W8, [X27 + 0xDF]
	0x0339AC60 LDR X0, [X26]
	0x0339AC64 LDR X25, [X25]
	0x0339AC68 LDR W8, [X0 + 0xE0]
	0x0339AC6C CBNZ W8, 0x339AC74
	0x0339AC70 BL 0x1C16DFC
	0x0339AC74 MOV X0, X25
	0x0339AC78 MOV X1, X24
	0x0339AC7C MOV X2, X22
	0x0339AC80 MOV X3, X20
	0x0339AC84 MOV X4, X23
	0x0339AC88 MOV X5, X21
	0x0339AC8C MOV X6, X19
	0x0339AC90 LDP X20, X19, [X31 + 0x40]
	0x0339AC94 LDP X22, X21, [X31 + 0x30]
	0x0339AC98 LDP X24, X23, [X31 + 0x20]
	0x0339AC9C LDP X26, X25, [X31 + 0x10]
	0x0339ACA0 MOV X7, X31
	0x0339ACA4 LDP X30, X27, [X31], #0x50
	0x0339ACA8 B 0x3385590
	0x0339ACAC STP X30, X21, [X31 - 0x20]!
	0x0339ACB0 STP X20, X19, [X31 + 0x10]
	0x0339ACB4 ADRP X20, 0x1043000
	0x0339ACB8 LDRB W8, [X20 + 0xE0]
	0x0339ACBC MOV X19, X0
	0x0339ACC0 TBNZ X8, 0x0, 0x339ACD8
	0x0339ACC4 ADRP X0, 0xD8E000
	0x0339ACC8 LDR X0, [X0 + 0x78]
	0x0339ACCC BL 0x1C16CF4
	0x0339ACD0 MOVZ W8, 0x1
	0x0339ACD4 STRB W8, [X20 + 0xE0]
	0x0339ACD8 CBZ X19, 0x339AD58
	0x0339ACDC ADRP X20, 0x103F000
	0x0339ACE0 ADRP X21, 0xD8E000
	0x0339ACE4 LDRB W8, [X20 + 0x762]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1044000
	007 Move W8, [X21+196]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD8F000
	015 Move X0, [X0+120]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+196], W8
	019 Move X21, 0x1040000
	020 Move W8, [X21+1890]
	021 Move W19, [X19]
	022 Compare W8, 0
	023 JumpIfNotEqual {29}
	024 Move X0, 0xD81000
	025 Move X0, [X0+656]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+1890], W8
	029 Move X22, 0xD8F000
	030 Move X22, [X22+120]
	031 Compare X20, 0
	032 JumpIfEqual {38}
	033 Move X0, X20
	034 Move X1, X31
	035 Call String.GetRawStringData, X0
	036 Move W20, [X20+16]
	037 Move X21, X0
	038 Move X21, X31
	039 Move X0, [X22]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move W0, W19
	045 Move X1, X21
	046 Move X2, X20
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move X3, X31
	052 Move X4, X31
	053 Move X30, [X31+48]
	054 Call Number.FormatUInt32, X0, X1, X2
	055 Return X0

Method: System.String ToString(System.String format, System.IFormatProvider provider)

Disassembly:
	0x0339ACE8 LDR X21, [X21 + 0x78]
	0x0339ACEC CBNZ W8, 0x339AD04
	0x0339ACF0 ADRP X0, 0xD80000
	0x0339ACF4 LDR X0, [X0 + 0x290]
	0x0339ACF8 BL 0x1C16CF4
	0x0339ACFC MOVZ W8, 0x1
	0x0339AD00 STRB W8, [X20 + 0x762]
	0x0339AD04 MOV X0, X19
	0x0339AD08 MOV X1, X31
	0x0339AD0C BL 0x3225708
	0x0339AD10 LDR W19, [X19 + 0x10]
	0x0339AD14 MOV X20, X0
	0x0339AD18 MOV X0, X31
	0x0339AD1C BL 0x333AE98
	0x0339AD20 LDR X8, [X21]
	0x0339AD24 MOV X21, X0
	0x0339AD28 LDR W9, [X8 + 0xE0]
	0x0339AD2C CBNZ W9, 0x339AD38
	0x0339AD30 MOV X0, X8
	0x0339AD34 BL 0x1C16DFC
	0x0339AD38 MOV X0, X20
	0x0339AD3C MOV X1, X19
	0x0339AD40 LDP X20, X19, [X31 + 0x10]
	0x0339AD44 MOVZ W2, 0x7
	0x0339AD48 MOV X3, X21
	0x0339AD4C MOV X4, X31
	0x0339AD50 LDP X30, X21, [X31], #0x20
	0x0339AD54 B 0x33890CC
	0x0339AD58 MOVZ W0, 0x30
	0x0339AD5C BL 0x338F3E0
	0x0339AD60 STR X30, [X31 - 0x30]!
	0x0339AD64 STP X22, X21, [X31 + 0x10]
	0x0339AD68 STP X20, X19, [X31 + 0x20]
	0x0339AD6C ADRP X21, 0x1043000
	0x0339AD70 LDRB W8, [X21 + 0xE1]
	0x0339AD74 MOV X19, X1
	0x0339AD78 MOV X20, X0
	0x0339AD7C TBNZ X8, 0x0, 0x339AD94
	0x0339AD80 ADRP X0, 0xD8E000
	0x0339AD84 LDR X0, [X0 + 0x78]
	0x0339AD88 BL 0x1C16CF4
	0x0339AD8C MOVZ W8, 0x1
	0x0339AD90 STRB W8, [X21 + 0xE1]
	0x0339AD94 CBZ X20, 0x339AE1C
	0x0339AD98 ADRP X21, 0x103F000
	0x0339AD9C ADRP X22, 0xD8E000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1044000
	008 Move W8, [X22+197]
	009 Move X19, X2
	010 Move X21, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xD8F000
	017 Move X0, [X0+120]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+197], W8
	021 Move X22, 0x1040000
	022 Move W8, [X22+1890]
	023 Move W20, [X20]
	024 Compare W8, 0
	025 JumpIfNotEqual {31}
	026 Move X0, 0xD81000
	027 Move X0, [X0+656]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+1890], W8
	031 Move X23, 0xD8F000
	032 Move X23, [X23+120]
	033 Compare X21, 0
	034 JumpIfEqual {40}
	035 Move X0, X21
	036 Move X1, X31
	037 Call String.GetRawStringData, X0
	038 Move W21, [X21+16]
	039 Move X22, X0
	040 Move X22, X31
	041 Move X0, [X23]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move W0, W20
	047 Move X1, X22
	048 Move X2, X21
	049 Move X3, X19
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X4, X31
	055 Move X30, [X31+48]
	056 Move X23, [X31+56]
	057 Call Number.FormatUInt32, X0, X1, X2
	058 Return X0

Method: System.Boolean TryFormat(System.Span`1<System.Char> destination, out System.Int32 charsWritten, System.ReadOnlySpan`1<System.Char> format = null, System.IFormatProvider provider = null)

Disassembly:
	0x0339ADA0 LDRB W8, [X21 + 0x762]
	0x0339ADA4 LDR X22, [X22 + 0x78]
	0x0339ADA8 CBNZ W8, 0x339ADC0
	0x0339ADAC ADRP X0, 0xD80000
	0x0339ADB0 LDR X0, [X0 + 0x290]
	0x0339ADB4 BL 0x1C16CF4
	0x0339ADB8 MOVZ W8, 0x1
	0x0339ADBC STRB W8, [X21 + 0x762]
	0x0339ADC0 MOV X0, X20
	0x0339ADC4 MOV X1, X31
	0x0339ADC8 BL 0x3225708
	0x0339ADCC LDR W20, [X20 + 0x10]
	0x0339ADD0 MOV X21, X0
	0x0339ADD4 MOV X0, X19
	0x0339ADD8 MOV X1, X31
	0x0339ADDC BL 0x333ACEC
	0x0339ADE0 LDR X8, [X22]
	0x0339ADE4 MOV X19, X0
	0x0339ADE8 LDR W9, [X8 + 0xE0]
	0x0339ADEC CBNZ W9, 0x339ADF8
	0x0339ADF0 MOV X0, X8
	0x0339ADF4 BL 0x1C16DFC
	0x0339ADF8 MOV X0, X21
	0x0339ADFC MOV X1, X20
	0x0339AE00 MOV X3, X19
	0x0339AE04 LDP X20, X19, [X31 + 0x20]
	0x0339AE08 LDP X22, X21, [X31 + 0x10]
	0x0339AE0C MOVZ W2, 0x7
	0x0339AE10 MOV X4, X31
	0x0339AE14 LDR X30, [X31], #0x30
	0x0339AE18 B 0x33890CC
	0x0339AE1C MOVZ W0, 0x30
	0x0339AE20 BL 0x338F3E0
	0x0339AE24 STP X30, X23, [X31 - 0x30]!
	0x0339AE28 STP X22, X21, [X31 + 0x10]
	0x0339AE2C STP X20, X19, [X31 + 0x20]
	0x0339AE30 ADRP X22, 0x1043000
	0x0339AE34 LDRB W8, [X22 + 0xE2]
	0x0339AE38 MOV X20, X2
	0x0339AE3C MOV W19, W1
	0x0339AE40 MOV X21, X0

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X27, 0x1044000
	012 Move X26, 0xD8F000
	013 Move W8, [X27+198]
	014 Move X26, [X26+120]
	015 Move X20, X6
	016 Move X22, X5
	017 Move X24, X4
	018 Move X19, X3
	019 Move X21, X2
	020 Move X23, X1
	021 Move X25, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0xD8F000
	027 Move X0, [X0+120]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X27+198], W8
	031 Move X0, [X26]
	032 Move W25, [X25]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move W0, W25
	038 Move X1, X24
	039 Move X2, X22
	040 Move X3, X20
	041 Move X4, X23
	042 Move X5, X21
	043 Move X6, X19
	044 Move X20, [X31+64]
	045 Move X19, [X31+72]
	046 Move X22, [X31+48]
	047 Move X21, [X31+56]
	048 Move X24, [X31+32]
	049 Move X23, [X31+40]
	050 Move X26, [X31+16]
	051 Move X25, [X31+24]
	052 Move X7, X31
	053 Move X30, [X31+80]
	054 Move X27, [X31+88]
	055 Call Number.TryFormatUInt32, X0, X1, X2, X3, X4
	056 Return X0

Method: System.UInt32 Parse(System.String s)

Disassembly:
	0x0339AE44 TBNZ X8, 0x0, 0x339AE5C
	0x0339AE48 ADRP X0, 0xD8E000
	0x0339AE4C LDR X0, [X0 + 0x78]
	0x0339AE50 BL 0x1C16CF4
	0x0339AE54 MOVZ W8, 0x1
	0x0339AE58 STRB W8, [X22 + 0xE2]
	0x0339AE5C MOV W0, W19
	0x0339AE60 MOV X1, X31
	0x0339AE64 BL 0x333B33C
	0x0339AE68 CBZ X21, 0x339AEF0
	0x0339AE6C ADRP X22, 0x103F000
	0x0339AE70 ADRP X23, 0xD8E000
	0x0339AE74 LDRB W8, [X22 + 0x762]
	0x0339AE78 LDR X23, [X23 + 0x78]
	0x0339AE7C CBNZ W8, 0x339AE94
	0x0339AE80 ADRP X0, 0xD80000
	0x0339AE84 LDR X0, [X0 + 0x290]
	0x0339AE88 BL 0x1C16CF4
	0x0339AE8C MOVZ W8, 0x1
	0x0339AE90 STRB W8, [X22 + 0x762]
	0x0339AE94 MOV X0, X21
	0x0339AE98 MOV X1, X31
	0x0339AE9C BL 0x3225708
	0x0339AEA0 LDR W21, [X21 + 0x10]
	0x0339AEA4 MOV X22, X0
	0x0339AEA8 MOV X0, X20
	0x0339AEAC MOV X1, X31
	0x0339AEB0 BL 0x333ACEC
	0x0339AEB4 LDR X8, [X23]
	0x0339AEB8 MOV X20, X0
	0x0339AEBC LDR W9, [X8 + 0xE0]
	0x0339AEC0 CBNZ W9, 0x339AECC
	0x0339AEC4 MOV X0, X8
	0x0339AEC8 BL 0x1C16DFC
	0x0339AECC MOV X0, X22
	0x0339AED0 MOV X1, X21
	0x0339AED4 MOV W2, W19
	0x0339AED8 MOV X3, X20
	0x0339AEDC LDP X20, X19, [X31 + 0x20]
	0x0339AEE0 LDP X22, X21, [X31 + 0x10]
	0x0339AEE4 MOV X4, X31
	0x0339AEE8 LDP X30, X23, [X31], #0x30
	0x0339AEEC B 0x33890CC
	0x0339AEF0 MOVZ W0, 0x30
	0x0339AEF4 BL 0x338F3E0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1044000
	006 Move W8, [X20+199]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xD8F000
	013 Move X0, [X0+120]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+199], W8
	017 Compare X19, 0
	018 JumpIfEqual {55}
	019 Move X20, 0x1040000
	020 Move X21, 0xD8F000
	021 Move W8, [X20+1890]
	022 Move X21, [X21+120]
	023 Compare W8, 0
	024 JumpIfNotEqual {30}
	025 Move X0, 0xD81000
	026 Move X0, [X0+656]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+1890], W8
	030 Move X0, X19
	031 Move X1, X31
	032 Call String.GetRawStringData, X0
	033 Move W19, [X19+16]
	034 Move X20, X0
	035 Move X0, X31
	036 Call NumberFormatInfo.get_CurrentInfo
	037 Move X8, [X21]
	038 Move X21, X0
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {44}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Move X0, X20
	045 Move X1, X19
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move W2, 7
	049 Move X3, X21
	050 Move X4, X31
	051 Move X30, [X31+32]
	052 Move X21, [X31+40]
	053 Call Number.ParseUInt32, X0, X1, X2
	054 Return X0
	055 Move W0, 48
	056 Call ThrowHelper.ThrowArgumentNullException, X0

Method: System.UInt32 Parse(System.String s, System.IFormatProvider provider)

Disassembly:
	0x0339AEF8 STR X30, [X31 - 0x30]!
	0x0339AEFC STP X22, X21, [X31 + 0x10]
	0x0339AF00 STP X20, X19, [X31 + 0x20]
	0x0339AF04 ADRP X21, 0x1043000
	0x0339AF08 LDRB W8, [X21 + 0xE3]
	0x0339AF0C MOV X19, X1
	0x0339AF10 MOV X20, X0
	0x0339AF14 TBNZ X8, 0x0, 0x339AF2C
	0x0339AF18 ADRP X0, 0xD8E000
	0x0339AF1C LDR X0, [X0 + 0x78]
	0x0339AF20 BL 0x1C16CF4
	0x0339AF24 MOVZ W8, 0x1
	0x0339AF28 STRB W8, [X21 + 0xE3]
	0x0339AF2C CBZ X20, 0x339AFB4
	0x0339AF30 ADRP X21, 0x103F000
	0x0339AF34 ADRP X22, 0xD8E000
	0x0339AF38 LDRB W8, [X21 + 0x762]
	0x0339AF3C LDR X22, [X22 + 0x78]
	0x0339AF40 CBNZ W8, 0x339AF58
	0x0339AF44 ADRP X0, 0xD80000
	0x0339AF48 LDR X0, [X0 + 0x290]
	0x0339AF4C BL 0x1C16CF4
	0x0339AF50 MOVZ W8, 0x1
	0x0339AF54 STRB W8, [X21 + 0x762]
	0x0339AF58 MOV X0, X20
	0x0339AF5C MOV X1, X31
	0x0339AF60 BL 0x3225708
	0x0339AF64 LDR W20, [X20 + 0x10]
	0x0339AF68 MOV X21, X0
	0x0339AF6C MOV X0, X31
	0x0339AF70 BL 0x333AE98
	0x0339AF74 LDR X8, [X22]
	0x0339AF78 MOV X22, X0
	0x0339AF7C LDR W9, [X8 + 0xE0]
	0x0339AF80 CBNZ W9, 0x339AF8C
	0x0339AF84 MOV X0, X8
	0x0339AF88 BL 0x1C16DFC
	0x0339AF8C MOV X0, X21
	0x0339AF90 MOV X1, X20
	0x0339AF94 MOV X3, X22
	0x0339AF98 MOV X4, X19
	0x0339AF9C LDP X20, X19, [X31 + 0x20]
	0x0339AFA0 LDP X22, X21, [X31 + 0x10]
	0x0339AFA4 MOVZ W2, 0x7
	0x0339AFA8 MOV X5, X31
	0x0339AFAC LDR X30, [X31], #0x30
	0x0339AFB0 B 0x338A36C
	0x0339AFB4 STR X31, [X19]
	0x0339AFB8 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1044000
	007 Move W8, [X21+200]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD8F000
	015 Move X0, [X0+120]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+200], W8
	019 Compare X20, 0
	020 JumpIfEqual {59}
	021 Move X21, 0x1040000
	022 Move X22, 0xD8F000
	023 Move W8, [X21+1890]
	024 Move X22, [X22+120]
	025 Compare W8, 0
	026 JumpIfNotEqual {32}
	027 Move X0, 0xD81000
	028 Move X0, [X0+656]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+1890], W8
	032 Move X0, X20
	033 Move X1, X31
	034 Call String.GetRawStringData, X0
	035 Move W20, [X20+16]
	036 Move X21, X0
	037 Move X0, X19
	038 Move X1, X31
	039 Call NumberFormatInfo.GetInstance, X0
	040 Move X8, [X22]
	041 Move X19, X0
	042 Move W9, [X8+224]
	043 Compare W9, 0
	044 JumpIfNotEqual {47}
	045 Move X0, X8
	046 Call 0x1C17DFC
	047 Move X0, X21
	048 Move X1, X20
	049 Move X3, X19
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move W2, 7
	055 Move X4, X31
	056 Move X30, [X31+48]
	057 Call Number.ParseUInt32, X0, X1, X2
	058 Return X0
	059 Move W0, 48
	060 Call ThrowHelper.ThrowArgumentNullException, X0

Method: System.UInt32 Parse(System.String s, System.Globalization.NumberStyles style, System.IFormatProvider provider)

Disassembly:
	0x0339AFBC LDP X22, X21, [X31 + 0x10]
	0x0339AFC0 MOV W0, W31
	0x0339AFC4 LDR X30, [X31], #0x30
	0x0339AFC8 RET
	0x0339AFCC STR X30, [X31 - 0x40]!
	0x0339AFD0 STP X24, X23, [X31 + 0x10]
	0x0339AFD4 STP X22, X21, [X31 + 0x20]
	0x0339AFD8 STP X20, X19, [X31 + 0x30]
	0x0339AFDC ADRP X23, 0x1043000
	0x0339AFE0 LDRB W8, [X23 + 0xE4]
	0x0339AFE4 MOV X19, X3
	0x0339AFE8 MOV X21, X2
	0x0339AFEC MOV W20, W1
	0x0339AFF0 MOV X22, X0
	0x0339AFF4 TBNZ X8, 0x0, 0x339B00C
	0x0339AFF8 ADRP X0, 0xD8E000
	0x0339AFFC LDR X0, [X0 + 0x78]
	0x0339B000 BL 0x1C16CF4
	0x0339B004 MOVZ W8, 0x1
	0x0339B008 STRB W8, [X23 + 0xE4]
	0x0339B00C MOV W0, W20
	0x0339B010 MOV X1, X31
	0x0339B014 BL 0x333B33C
	0x0339B018 CBZ X22, 0x339B0A8
	0x0339B01C ADRP X23, 0x103E000
	0x0339B020 ADRP X24, 0xD8D000
	0x0339B024 LDRB W8, [X23 + 0x762]
	0x0339B028 LDR X24, [X24 + 0x78]
	0x0339B02C CBNZ W8, 0x339B044
	0x0339B030 ADRP X0, 0xD7F000
	0x0339B034 LDR X0, [X0 + 0x290]
	0x0339B038 BL 0x1C16CF4
	0x0339B03C MOVZ W8, 0x1
	0x0339B040 STRB W8, [X23 + 0x762]
	0x0339B044 MOV X0, X22
	0x0339B048 MOV X1, X31
	0x0339B04C BL 0x3225708
	0x0339B050 LDR W22, [X22 + 0x10]
	0x0339B054 MOV X23, X0
	0x0339B058 MOV X0, X21
	0x0339B05C MOV X1, X31
	0x0339B060 BL 0x333ACEC
	0x0339B064 LDR X8, [X24]
	0x0339B068 MOV X21, X0
	0x0339B06C LDR W9, [X8 + 0xE0]
	0x0339B070 CBNZ W9, 0x339B07C
	0x0339B074 MOV X0, X8
	0x0339B078 BL 0x1C16DFC
	0x0339B07C MOV X0, X23
	0x0339B080 MOV X1, X22
	0x0339B084 MOV W2, W20
	0x0339B088 MOV X3, X21
	0x0339B08C MOV X4, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1044000
	008 Move W8, [X22+201]
	009 Move X20, X2
	010 Move W19, W1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xD8F000
	017 Move X0, [X0+120]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+201], W8
	021 Move W0, W19
	022 Move X1, X31
	023 Call NumberFormatInfo.ValidateParseStyleInteger, X0
	024 Compare X21, 0
	025 JumpIfEqual {65}
	026 Move X22, 0x103F000
	027 Move X23, 0xD8E000
	028 Move W8, [X22+1890]
	029 Move X23, [X23+120]
	030 Compare W8, 0
	031 JumpIfNotEqual {37}
	032 Move X0, 0xD80000
	033 Move X0, [X0+656]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X22+1890], W8
	037 Move X0, X21
	038 Move X1, X31
	039 Call String.GetRawStringData, X0
	040 Move W21, [X21+16]
	041 Move X22, X0
	042 Move X0, X20
	043 Move X1, X31
	044 Call NumberFormatInfo.GetInstance, X0
	045 Move X8, [X23]
	046 Move X20, X0
	047 Move W9, [X8+224]
	048 Compare W9, 0
	049 JumpIfNotEqual {52}
	050 Move X0, X8
	051 Call 0x1C17DFC
	052 Move X0, X22
	053 Move X1, X21
	054 Move W2, W19
	055 Move X3, X20
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X22, [X31+16]
	059 Move X21, [X31+24]
	060 Move X4, X31
	061 Move X30, [X31+48]
	062 Move X23, [X31+56]
	063 Call Number.ParseUInt32, X0, X1, X2
	064 Return X0
	065 Move W0, 48
	066 Call ThrowHelper.ThrowArgumentNullException, X0

Method: System.Boolean TryParse(System.String s, out System.UInt32 result)

Disassembly:
	0x0339B090 LDP X20, X19, [X31 + 0x30]
	0x0339B094 LDP X22, X21, [X31 + 0x20]
	0x0339B098 LDP X24, X23, [X31 + 0x10]
	0x0339B09C MOV X5, X31
	0x0339B0A0 LDR X30, [X31], #0x40
	0x0339B0A4 B 0x338A36C
	0x0339B0A8 STR X31, [X19]
	0x0339B0AC LDP X20, X19, [X31 + 0x30]
	0x0339B0B0 LDP X22, X21, [X31 + 0x20]
	0x0339B0B4 LDP X24, X23, [X31 + 0x10]
	0x0339B0B8 MOV W0, W31
	0x0339B0BC LDR X30, [X31], #0x40
	0x0339B0C0 RET
	0x0339B0C4 MOVZ W0, 0xC
	0x0339B0C8 RET
	0x0339B0CC STP X30, X21, [X31 - 0x20]!
	0x0339B0D0 STP X20, X19, [X31 + 0x10]
	0x0339B0D4 ADRP X21, 0x1042000
	0x0339B0D8 ADRP X20, 0xD61000
	0x0339B0DC LDRB W8, [X21 + 0xE5]
	0x0339B0E0 LDR X20, [X20 + 0x9E8]
	0x0339B0E4 MOV X19, X0
	0x0339B0E8 TBNZ X8, 0x0, 0x339B100
	0x0339B0EC ADRP X0, 0xD61000
	0x0339B0F0 LDR X0, [X0 + 0x9E8]
	0x0339B0F4 BL 0x1C16CF4
	0x0339B0F8 MOVZ W8, 0x1
	0x0339B0FC STRB W8, [X21 + 0xE5]
	0x0339B100 LDR X0, [X20]
	0x0339B104 LDR X19, [X19]
	0x0339B108 LDR W8, [X0 + 0xE0]
	0x0339B10C CBNZ W8, 0x339B114
	0x0339B110 BL 0x1C16DFC
	0x0339B114 MOV X0, X19
	0x0339B118 LDP X20, X19, [X31 + 0x10]
	0x0339B11C MOV X1, X31
	0x0339B120 LDP X30, X21, [X31], #0x20
	0x0339B124 B 0x331E480
	0x0339B128 STP X30, X21, [X31 - 0x20]!
	0x0339B12C STP X20, X19, [X31 + 0x10]
	0x0339B130 ADRP X21, 0x1042000
	0x0339B134 ADRP X20, 0xD61000
	0x0339B138 LDRB W8, [X21 + 0xE6]
	0x0339B13C LDR X20, [X20 + 0x9E8]
	0x0339B140 MOV X19, X0
	0x0339B144 TBNZ X8, 0x0, 0x339B15C
	0x0339B148 ADRP X0, 0xD61000
	0x0339B14C LDR X0, [X0 + 0x9E8]
	0x0339B150 BL 0x1C16CF4
	0x0339B154 MOVZ W8, 0x1
	0x0339B158 STRB W8, [X21 + 0xE6]
	0x0339B15C LDR X0, [X20]
	0x0339B160 LDR X19, [X19]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1043000
	007 Move W8, [X21+202]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD8E000
	015 Move X0, [X0+120]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+202], W8
	019 Compare X20, 0
	020 JumpIfEqual {59}
	021 Move X21, 0x103F000
	022 Move X22, 0xD8E000
	023 Move W8, [X21+1890]
	024 Move X22, [X22+120]
	025 Compare W8, 0
	026 JumpIfNotEqual {32}
	027 Move X0, 0xD80000
	028 Move X0, [X0+656]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+1890], W8
	032 Move X0, X20
	033 Move X1, X31
	034 Call String.GetRawStringData, X0
	035 Move W20, [X20+16]
	036 Move X21, X0
	037 Move X0, X31
	038 Call NumberFormatInfo.get_CurrentInfo
	039 Move X8, [X22]
	040 Move X22, X0
	041 Move W9, [X8+224]
	042 Compare W9, 0
	043 JumpIfNotEqual {46}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move X0, X21
	047 Move X1, X20
	048 Move X3, X22
	049 Move X4, X19
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move W2, 7
	055 Move X5, X31
	056 Move X30, [X31+48]
	057 Call Number.TryParseUInt32, X0, X1, X2, X3
	058 Return X0
	059 Move [X19], W31
	060 Move X20, [X31+32]
	061 Move X19, [X31+40]
	062 Move X22, [X31+16]
	063 Move X21, [X31+24]
	064 Move W0, W31
	065 Move X30, [X31+48]
	066 Return X0

Method: System.Boolean TryParse(System.String s, System.Globalization.NumberStyles style, System.IFormatProvider provider, out System.UInt32 result)

Disassembly:
	0x0339B164 LDR W8, [X0 + 0xE0]
	0x0339B168 CBNZ W8, 0x339B170
	0x0339B16C BL 0x1C16DFC
	0x0339B170 MOV X0, X19
	0x0339B174 LDP X20, X19, [X31 + 0x10]
	0x0339B178 MOV X1, X31
	0x0339B17C LDP X30, X21, [X31], #0x20
	0x0339B180 B 0x331E994
	0x0339B184 STP X30, X21, [X31 - 0x20]!
	0x0339B188 STP X20, X19, [X31 + 0x10]
	0x0339B18C ADRP X21, 0x1042000
	0x0339B190 ADRP X20, 0xD61000
	0x0339B194 LDRB W8, [X21 + 0xE7]
	0x0339B198 LDR X20, [X20 + 0x9E8]
	0x0339B19C MOV X19, X0
	0x0339B1A0 TBNZ X8, 0x0, 0x339B1B8
	0x0339B1A4 ADRP X0, 0xD61000
	0x0339B1A8 LDR X0, [X0 + 0x9E8]
	0x0339B1AC BL 0x1C16CF4
	0x0339B1B0 MOVZ W8, 0x1
	0x0339B1B4 STRB W8, [X21 + 0xE7]
	0x0339B1B8 LDR X0, [X20]
	0x0339B1BC LDR X19, [X19]
	0x0339B1C0 LDR W8, [X0 + 0xE0]
	0x0339B1C4 CBNZ W8, 0x339B1CC
	0x0339B1C8 BL 0x1C16DFC
	0x0339B1CC MOV X0, X19
	0x0339B1D0 LDP X20, X19, [X31 + 0x10]
	0x0339B1D4 MOV X1, X31
	0x0339B1D8 LDP X30, X21, [X31], #0x20
	0x0339B1DC B 0x331EE98
	0x0339B1E0 STP X30, X21, [X31 - 0x20]!
	0x0339B1E4 STP X20, X19, [X31 + 0x10]
	0x0339B1E8 ADRP X21, 0x1042000
	0x0339B1EC ADRP X20, 0xD61000
	0x0339B1F0 LDRB W8, [X21 + 0xE8]
	0x0339B1F4 LDR X20, [X20 + 0x9E8]
	0x0339B1F8 MOV X19, X0
	0x0339B1FC TBNZ X8, 0x0, 0x339B214
	0x0339B200 ADRP X0, 0xD61000
	0x0339B204 LDR X0, [X0 + 0x9E8]
	0x0339B208 BL 0x1C16CF4
	0x0339B20C MOVZ W8, 0x1
	0x0339B210 STRB W8, [X21 + 0xE8]
	0x0339B214 LDR X0, [X20]
	0x0339B218 LDR X19, [X19]
	0x0339B21C LDR W8, [X0 + 0xE0]
	0x0339B220 CBNZ W8, 0x339B228
	0x0339B224 BL 0x1C16DFC
	0x0339B228 MOV X0, X19
	0x0339B22C LDP X20, X19, [X31 + 0x10]
	0x0339B230 MOV X1, X31
	0x0339B234 LDP X30, X21, [X31], #0x20
	0x0339B238 B 0x331F53C
	0x0339B23C STP X30, X21, [X31 - 0x20]!
	0x0339B240 STP X20, X19, [X31 + 0x10]
	0x0339B244 ADRP X21, 0x1042000
	0x0339B248 ADRP X20, 0xD61000
	0x0339B24C LDRB W8, [X21 + 0xE9]
	0x0339B250 LDR X20, [X20 + 0x9E8]
	0x0339B254 MOV X19, X0
	0x0339B258 TBNZ X8, 0x0, 0x339B270

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x1043000
	009 Move W8, [X23+203]
	010 Move X19, X3
	011 Move X21, X2
	012 Move W20, W1
	013 Move X22, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xD8E000
	019 Move X0, [X0+120]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+203], W8
	023 Move W0, W20
	024 Move X1, X31
	025 Call NumberFormatInfo.ValidateParseStyleInteger, X0
	026 Compare X22, 0
	027 JumpIfEqual {69}
	028 Move X23, 0x103F000
	029 Move X24, 0xD8E000
	030 Move W8, [X23+1890]
	031 Move X24, [X24+120]
	032 Compare W8, 0
	033 JumpIfNotEqual {39}
	034 Move X0, 0xD80000
	035 Move X0, [X0+656]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X23+1890], W8
	039 Move X0, X22
	040 Move X1, X31
	041 Call String.GetRawStringData, X0
	042 Move W22, [X22+16]
	043 Move X23, X0
	044 Move X0, X21
	045 Move X1, X31
	046 Call NumberFormatInfo.GetInstance, X0
	047 Move X8, [X24]
	048 Move X21, X0
	049 Move W9, [X8+224]
	050 Compare W9, 0
	051 JumpIfNotEqual {54}
	052 Move X0, X8
	053 Call 0x1C17DFC
	054 Move X0, X23
	055 Move X1, X22
	056 Move W2, W20
	057 Move X3, X21
	058 Move X4, X19
	059 Move X20, [X31+48]
	060 Move X19, [X31+56]
	061 Move X22, [X31+32]
	062 Move X21, [X31+40]
	063 Move X24, [X31+16]
	064 Move X23, [X31+24]
	065 Move X5, X31
	066 Move X30, [X31+64]
	067 Call Number.TryParseUInt32, X0, X1, X2, X3
	068 Return X0
	069 Move [X19], W31
	070 Move X20, [X31+48]
	071 Move X19, [X31+56]
	072 Move X22, [X31+32]
	073 Move X21, [X31+40]
	074 Move X24, [X31+16]
	075 Move X23, [X31+24]
	076 Move W0, W31
	077 Move X30, [X31+64]
	078 Return X0

Method: System.TypeCode GetTypeCode()

Disassembly:
	0x0339B25C ADRP X0, 0xD61000
	0x0339B260 LDR X0, [X0 + 0x9E8]

ISIL:
	001 Move W0, 10
	002 Return X0

Method: System.Boolean System.IConvertible.ToBoolean(System.IFormatProvider provider)

Disassembly:
	0x0339B264 BL 0x1C16CF4
	0x0339B268 MOVZ W8, 0x1
	0x0339B26C STRB W8, [X21 + 0xE9]
	0x0339B270 LDR X0, [X20]
	0x0339B274 LDR X19, [X19]
	0x0339B278 LDR W8, [X0 + 0xE0]
	0x0339B27C CBNZ W8, 0x339B284
	0x0339B280 BL 0x1C16DFC
	0x0339B284 MOV X0, X19
	0x0339B288 LDP X20, X19, [X31 + 0x10]
	0x0339B28C MOV X1, X31
	0x0339B290 LDP X30, X21, [X31], #0x20
	0x0339B294 B 0x331FAA8
	0x0339B298 STP X30, X21, [X31 - 0x20]!
	0x0339B29C STP X20, X19, [X31 + 0x10]
	0x0339B2A0 ADRP X21, 0x1042000
	0x0339B2A4 ADRP X20, 0xD61000
	0x0339B2A8 LDRB W8, [X21 + 0xEA]
	0x0339B2AC LDR X20, [X20 + 0x9E8]
	0x0339B2B0 MOV X19, X0
	0x0339B2B4 TBNZ X8, 0x0, 0x339B2CC
	0x0339B2B8 ADRP X0, 0xD61000
	0x0339B2BC LDR X0, [X0 + 0x9E8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1043000
	006 Move X20, 0xD62000
	007 Move W8, [X21+204]
	008 Move X20, [X20+2536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD62000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+204], W8
	019 Move X0, [X20]
	020 Move W19, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W0, W19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call Convert.ToBoolean, X0
	032 Return X0

Method: System.Char System.IConvertible.ToChar(System.IFormatProvider provider)

Disassembly:
	0x0339B2C0 BL 0x1C16CF4
	0x0339B2C4 MOVZ W8, 0x1
	0x0339B2C8 STRB W8, [X21 + 0xEA]
	0x0339B2CC LDR X0, [X20]
	0x0339B2D0 LDR X19, [X19]
	0x0339B2D4 LDR W8, [X0 + 0xE0]
	0x0339B2D8 CBNZ W8, 0x339B2E0
	0x0339B2DC BL 0x1C16DFC
	0x0339B2E0 MOV X0, X19
	0x0339B2E4 LDP X20, X19, [X31 + 0x10]
	0x0339B2E8 MOV X1, X31
	0x0339B2EC LDP X30, X21, [X31], #0x20
	0x0339B2F0 B 0x331FFF0
	0x0339B2F4 STP X30, X21, [X31 - 0x20]!
	0x0339B2F8 STP X20, X19, [X31 + 0x10]
	0x0339B2FC ADRP X21, 0x1042000
	0x0339B300 ADRP X20, 0xD61000
	0x0339B304 LDRB W8, [X21 + 0xEB]
	0x0339B308 LDR X20, [X20 + 0x9E8]
	0x0339B30C MOV X19, X0
	0x0339B310 TBNZ X8, 0x0, 0x339B328
	0x0339B314 ADRP X0, 0xD61000
	0x0339B318 LDR X0, [X0 + 0x9E8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1043000
	006 Move X20, 0xD62000
	007 Move W8, [X21+205]
	008 Move X20, [X20+2536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD62000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+205], W8
	019 Move X0, [X20]
	020 Move W19, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W0, W19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call Convert.ToChar, X0
	032 Return X0

Method: System.SByte System.IConvertible.ToSByte(System.IFormatProvider provider)

Disassembly:
	0x0339B31C BL 0x1C16CF4
	0x0339B320 MOVZ W8, 0x1
	0x0339B324 STRB W8, [X21 + 0xEB]
	0x0339B328 LDR X0, [X20]
	0x0339B32C LDR X19, [X19]
	0x0339B330 LDR W8, [X0 + 0xE0]
	0x0339B334 CBNZ W8, 0x339B33C
	0x0339B338 BL 0x1C16DFC
	0x0339B33C MOV X0, X19
	0x0339B340 LDP X20, X19, [X31 + 0x10]
	0x0339B344 MOV X1, X31
	0x0339B348 LDP X30, X21, [X31], #0x20
	0x0339B34C B 0x3320444
	0x0339B350 STP X30, X21, [X31 - 0x20]!
	0x0339B354 STP X20, X19, [X31 + 0x10]
	0x0339B358 ADRP X21, 0x1042000
	0x0339B35C ADRP X20, 0xD61000
	0x0339B360 LDRB W8, [X21 + 0xEC]
	0x0339B364 LDR X20, [X20 + 0x9E8]
	0x0339B368 MOV X19, X0
	0x0339B36C TBNZ X8, 0x0, 0x339B384
	0x0339B370 ADRP X0, 0xD61000
	0x0339B374 LDR X0, [X0 + 0x9E8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1043000
	006 Move X20, 0xD62000
	007 Move W8, [X21+206]
	008 Move X20, [X20+2536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD62000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+206], W8
	019 Move X0, [X20]
	020 Move W19, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W0, W19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call Convert.ToSByte, X0
	032 Return X0

Method: System.Byte System.IConvertible.ToByte(System.IFormatProvider provider)

Disassembly:
	0x0339B378 BL 0x1C16CF4
	0x0339B37C MOVZ W8, 0x1
	0x0339B380 STRB W8, [X21 + 0xEC]
	0x0339B384 LDR X0, [X20]
	0x0339B388 LDR X19, [X19]
	0x0339B38C LDR W8, [X0 + 0xE0]
	0x0339B390 CBNZ W8, 0x339B398
	0x0339B394 BL 0x1C16DFC
	0x0339B398 MOV X0, X19
	0x0339B39C LDP X20, X19, [X31 + 0x10]
	0x0339B3A0 MOV X1, X31
	0x0339B3A4 LDP X30, X21, [X31], #0x20
	0x0339B3A8 B 0x3320950
	0x0339B3AC STP X30, X21, [X31 - 0x20]!
	0x0339B3B0 STP X20, X19, [X31 + 0x10]
	0x0339B3B4 ADRP X21, 0x1042000
	0x0339B3B8 ADRP X20, 0xD61000
	0x0339B3BC LDRB W8, [X21 + 0xED]
	0x0339B3C0 LDR X20, [X20 + 0x9E8]
	0x0339B3C4 MOV X19, X0
	0x0339B3C8 TBNZ X8, 0x0, 0x339B3E0
	0x0339B3CC ADRP X0, 0xD61000
	0x0339B3D0 LDR X0, [X0 + 0x9E8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1043000
	006 Move X20, 0xD62000
	007 Move W8, [X21+207]
	008 Move X20, [X20+2536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD62000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+207], W8
	019 Move X0, [X20]
	020 Move W19, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W0, W19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call Convert.ToByte, X0
	032 Return X0

Method: System.Int16 System.IConvertible.ToInt16(System.IFormatProvider provider)

Disassembly:
	0x0339B3D4 BL 0x1C16CF4
	0x0339B3D8 MOVZ W8, 0x1
	0x0339B3DC STRB W8, [X21 + 0xED]
	0x0339B3E0 LDR X0, [X20]
	0x0339B3E4 LDR X19, [X19]
	0x0339B3E8 LDR W8, [X0 + 0xE0]
	0x0339B3EC CBNZ W8, 0x339B3F4
	0x0339B3F0 BL 0x1C16DFC
	0x0339B3F4 MOV X0, X19
	0x0339B3F8 LDP X20, X19, [X31 + 0x10]
	0x0339B3FC MOV X1, X31
	0x0339B400 LDP X30, X21, [X31], #0x20
	0x0339B404 B 0x3320D58
	0x0339B408 LDR X0, [X0]
	0x0339B40C RET
	0x0339B410 STP X30, X21, [X31 - 0x20]!
	0x0339B414 STP X20, X19, [X31 + 0x10]
	0x0339B418 ADRP X21, 0x1042000
	0x0339B41C ADRP X20, 0xD61000
	0x0339B420 LDRB W8, [X21 + 0xEE]
	0x0339B424 LDR X20, [X20 + 0x9E8]
	0x0339B428 MOV X19, X0
	0x0339B42C TBNZ X8, 0x0, 0x339B444

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1043000
	006 Move X20, 0xD62000
	007 Move W8, [X21+208]
	008 Move X20, [X20+2536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD62000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+208], W8
	019 Move X0, [X20]
	020 Move W19, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W0, W19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call Convert.ToInt16, X0
	032 Return X0

Method: System.UInt16 System.IConvertible.ToUInt16(System.IFormatProvider provider)

Disassembly:
	0x0339B430 ADRP X0, 0xD61000
	0x0339B434 LDR X0, [X0 + 0x9E8]
	0x0339B438 BL 0x1C16CF4
	0x0339B43C MOVZ W8, 0x1
	0x0339B440 STRB W8, [X21 + 0xEE]
	0x0339B444 LDR X0, [X20]
	0x0339B448 LDR X19, [X19]
	0x0339B44C LDR W8, [X0 + 0xE0]
	0x0339B450 CBNZ W8, 0x339B458
	0x0339B454 BL 0x1C16DFC
	0x0339B458 MOV X0, X19
	0x0339B45C LDP X20, X19, [X31 + 0x10]
	0x0339B460 MOV X1, X31
	0x0339B464 LDP X30, X21, [X31], #0x20
	0x0339B468 B 0x332178C
	0x0339B46C STP X30, X21, [X31 - 0x20]!
	0x0339B470 STP X20, X19, [X31 + 0x10]
	0x0339B474 ADRP X21, 0x1042000
	0x0339B478 ADRP X20, 0xD61000
	0x0339B47C LDRB W8, [X21 + 0xEF]
	0x0339B480 LDR X20, [X20 + 0x9E8]
	0x0339B484 MOV X19, X0
	0x0339B488 TBNZ X8, 0x0, 0x339B4A0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1043000
	006 Move X20, 0xD62000
	007 Move W8, [X21+209]
	008 Move X20, [X20+2536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD62000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+209], W8
	019 Move X0, [X20]
	020 Move W19, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W0, W19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call Convert.ToUInt16, X0
	032 Return X0

Method: System.Int32 System.IConvertible.ToInt32(System.IFormatProvider provider)

Disassembly:
	0x0339B48C ADRP X0, 0xD61000
	0x0339B490 LDR X0, [X0 + 0x9E8]
	0x0339B494 BL 0x1C16CF4
	0x0339B498 MOVZ W8, 0x1
	0x0339B49C STRB W8, [X21 + 0xEF]
	0x0339B4A0 LDR X0, [X20]
	0x0339B4A4 LDR X19, [X19]
	0x0339B4A8 LDR W8, [X0 + 0xE0]
	0x0339B4AC CBNZ W8, 0x339B4B4
	0x0339B4B0 BL 0x1C16DFC
	0x0339B4B4 MOV X0, X19
	0x0339B4B8 LDP X20, X19, [X31 + 0x10]
	0x0339B4BC MOV X1, X31
	0x0339B4C0 LDP X30, X21, [X31], #0x20
	0x0339B4C4 B 0x3321AD0
	0x0339B4C8 STP X30, X21, [X31 - 0x20]!
	0x0339B4CC STP X20, X19, [X31 + 0x10]
	0x0339B4D0 ADRP X21, 0x1042000
	0x0339B4D4 ADRP X20, 0xD61000
	0x0339B4D8 LDRB W8, [X21 + 0xF0]
	0x0339B4DC LDR X20, [X20 + 0x9E8]
	0x0339B4E0 MOV X19, X0
	0x0339B4E4 TBNZ X8, 0x0, 0x339B4FC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1043000
	006 Move X20, 0xD62000
	007 Move W8, [X21+210]
	008 Move X20, [X20+2536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD62000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+210], W8
	019 Move X0, [X20]
	020 Move W19, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W0, W19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call Convert.ToInt32, X0
	032 Return X0

Method: System.UInt32 System.IConvertible.ToUInt32(System.IFormatProvider provider)

Disassembly:
	0x0339B4E8 ADRP X0, 0xD61000
	0x0339B4EC LDR X0, [X0 + 0x9E8]

ISIL:
	001 Move W0, [X0]
	002 Return X0

Method: System.Int64 System.IConvertible.ToInt64(System.IFormatProvider provider)

Disassembly:
	0x0339B4F0 BL 0x1C16CF4
	0x0339B4F4 MOVZ W8, 0x1
	0x0339B4F8 STRB W8, [X21 + 0xF0]
	0x0339B4FC LDR X0, [X20]
	0x0339B500 LDR X19, [X19]
	0x0339B504 LDR W8, [X0 + 0xE0]
	0x0339B508 CBNZ W8, 0x339B510
	0x0339B50C BL 0x1C16DFC
	0x0339B510 MOV X0, X19
	0x0339B514 LDP X20, X19, [X31 + 0x10]
	0x0339B518 MOV X1, X31
	0x0339B51C LDP X30, X21, [X31], #0x20
	0x0339B520 B 0x3321E9C
	0x0339B524 STR X30, [X31 - 0x20]!
	0x0339B528 STP X20, X19, [X31 + 0x10]
	0x0339B52C ADRP X0, 0xD8D000
	0x0339B530 LDR X0, [X0 + 0x30]
	0x0339B534 BL 0x1C16D08
	0x0339B538 MOV X19, X0
	0x0339B53C ADRP X0, 0xD8A000
	0x0339B540 LDR X0, [X0 + 0xD0]
	0x0339B544 BL 0x1C16D08
	0x0339B548 MOV X20, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1043000
	006 Move X20, 0xD62000
	007 Move W8, [X21+211]
	008 Move X20, [X20+2536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD62000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+211], W8
	019 Move X0, [X20]
	020 Move W19, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W0, W19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call Convert.ToInt64, X0
	032 Return X0

Method: System.UInt64 System.IConvertible.ToUInt64(System.IFormatProvider provider)

Disassembly:
	0x0339B54C ADRP X0, 0xD8A000
	0x0339B550 LDR X0, [X0 + 0x98]
	0x0339B554 BL 0x1C16D08
	0x0339B558 MOV X2, X0
	0x0339B55C MOV X0, X19
	0x0339B560 MOV X1, X20
	0x0339B564 MOV X3, X31
	0x0339B568 BL 0x320A264
	0x0339B56C MOV X19, X0
	0x0339B570 ADRP X0, 0xD60000
	0x0339B574 LDR X0, [X0 + 0xC08]
	0x0339B578 BL 0x1C16D08
	0x0339B57C BL 0x1C16F10
	0x0339B580 MOV X1, X19
	0x0339B584 MOV X2, X31
	0x0339B588 MOV X20, X0
	0x0339B58C BL 0x337B498
	0x0339B590 ADRP X0, 0xD90000
	0x0339B594 LDR X0, [X0 + 0x5C0]
	0x0339B598 BL 0x1C16D08
	0x0339B59C MOV X1, X0
	0x0339B5A0 MOV X0, X20
	0x0339B5A4 BL 0x1C16DEC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1043000
	006 Move X20, 0xD62000
	007 Move W8, [X21+212]
	008 Move X20, [X20+2536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD62000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+212], W8
	019 Move X0, [X20]
	020 Move W19, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W0, W19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call Convert.ToUInt64, X0
	032 Return X0

Method: System.Single System.IConvertible.ToSingle(System.IFormatProvider provider)

Disassembly:
	0x0339B5A8 STR X30, [X31 - 0x40]!
	0x0339B5AC STP X24, X23, [X31 + 0x10]
	0x0339B5B0 STP X22, X21, [X31 + 0x20]
	0x0339B5B4 STP X20, X19, [X31 + 0x30]
	0x0339B5B8 ADRP X24, 0x1042000
	0x0339B5BC ADRP X23, 0xD59000
	0x0339B5C0 ADRP X22, 0xD61000
	0x0339B5C4 LDRB W8, [X24 + 0xF1]
	0x0339B5C8 LDR X23, [X23 + 0x758]
	0x0339B5CC LDR X22, [X22 + 0x9E8]
	0x0339B5D0 MOV X19, X2
	0x0339B5D4 MOV X20, X1
	0x0339B5D8 MOV X21, X0
	0x0339B5DC TBNZ X8, 0x0, 0x339B600
	0x0339B5E0 ADRP X0, 0xD61000
	0x0339B5E4 LDR X0, [X0 + 0x9E8]
	0x0339B5E8 BL 0x1C16CF4
	0x0339B5EC ADRP X0, 0xD59000
	0x0339B5F0 LDR X0, [X0 + 0x758]
	0x0339B5F4 BL 0x1C16CF4
	0x0339B5F8 MOVZ W8, 0x1
	0x0339B5FC STRB W8, [X24 + 0xF1]
	0x0339B600 LDR X8, [X21]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1043000
	006 Move X20, 0xD62000
	007 Move W8, [X21+213]
	008 Move X20, [X20+2536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD62000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+213], W8
	019 Move X0, [X20]
	020 Move W19, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W0, W19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call Convert.ToSingle, X0
	032 Return V0

Method: System.Double System.IConvertible.ToDouble(System.IFormatProvider provider)

Disassembly:
	0x0339B604 LDR X0, [X23]
	0x0339B608 ADD X1, X31, 0x8
	0x0339B60C STR X8, [X31 + 0x8]
	0x0339B610 BL 0x1C16E04
	0x0339B614 LDR X8, [X22]
	0x0339B618 MOV X21, X0
	0x0339B61C LDR W9, [X8 + 0xE0]
	0x0339B620 CBNZ W9, 0x339B62C
	0x0339B624 MOV X0, X8
	0x0339B628 BL 0x1C16DFC
	0x0339B62C MOV X0, X21
	0x0339B630 MOV X1, X20
	0x0339B634 MOV X2, X19
	0x0339B638 MOV X3, X31
	0x0339B63C BL 0x3318718
	0x0339B640 LDP X20, X19, [X31 + 0x30]
	0x0339B644 LDP X22, X21, [X31 + 0x20]
	0x0339B648 LDP X24, X23, [X31 + 0x10]
	0x0339B64C LDR X30, [X31], #0x40
	0x0339B650 RET
	0x0339B654 STP X30, X21, [X31 - 0x20]!
	0x0339B658 STP X20, X19, [X31 + 0x10]
	0x0339B65C ADRP X20, 0x1042000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1043000
	006 Move X20, 0xD62000
	007 Move W8, [X21+214]
	008 Move X20, [X20+2536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD62000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+214], W8
	019 Move X0, [X20]
	020 Move W19, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W0, W19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call Convert.ToDouble, X0
	032 Return V0

Method: System.Decimal System.IConvertible.ToDecimal(System.IFormatProvider provider)

Disassembly:
	0x0339B660 ADRP X21, 0xD90000
	0x0339B664 LDRB W8, [X20 + 0xF2]
	0x0339B668 LDR X21, [X21 + 0x5C8]
	0x0339B66C MOV X19, X0
	0x0339B670 TBNZ X8, 0x0, 0x339B688
	0x0339B674 ADRP X0, 0xD90000
	0x0339B678 LDR X0, [X0 + 0x5C8]
	0x0339B67C BL 0x1C16CF4
	0x0339B680 MOVZ W8, 0x1
	0x0339B684 STRB W8, [X20 + 0xF2]
	0x0339B688 LDR X1, [X21]
	0x0339B68C MOV X0, X19
	0x0339B690 BL 0x338C8D8
	0x0339B694 MOVZ W8, 0x5
	0x0339B698 MOVK W8, 0x80070000
	0x0339B69C STR W8, [X19 + 0x60]
	0x0339B6A0 LDP X20, X19, [X31 + 0x10]
	0x0339B6A4 LDP X30, X21, [X31], #0x20
	0x0339B6A8 RET
	0x0339B6AC STP X30, X19, [X31 - 0x10]!
	0x0339B6B0 MOV X19, X0
	0x0339B6B4 BL 0x338C8D8
	0x0339B6B8 MOVZ W8, 0x5

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1043000
	006 Move X20, 0xD62000
	007 Move W8, [X21+215]
	008 Move X20, [X20+2536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD62000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+215], W8
	019 Move X0, [X20]
	020 Move W19, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W0, W19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call Convert.ToDecimal, X0
	032 Return X0

Method: System.DateTime System.IConvertible.ToDateTime(System.IFormatProvider provider)

Disassembly:
	0x0339B6BC MOVK W8, 0x80070000
	0x0339B6C0 STR W8, [X19 + 0x60]
	0x0339B6C4 LDP X30, X19, [X31], #0x10
	0x0339B6C8 RET
	0x0339B6CC STP X30, X19, [X31 - 0x10]!
	0x0339B6D0 MOV X19, X0
	0x0339B6D4 BL 0x338C990
	0x0339B6D8 MOVZ W8, 0x5
	0x0339B6DC MOVK W8, 0x80070000
	0x0339B6E0 STR W8, [X19 + 0x60]
	0x0339B6E4 LDP X30, X19, [X31], #0x10
	0x0339B6E8 RET
	0x0339B6EC B 0x338CA74
	0x0339B6F0 STP X30, X23, [X31 - 0x30]!
	0x0339B6F4 STP X22, X21, [X31 + 0x10]
	0x0339B6F8 STP X20, X19, [X31 + 0x20]
	0x0339B6FC ADRP X22, 0x1042000
	0x0339B700 ADRP X23, 0xD84000
	0x0339B704 LDRB W8, [X22 + 0xF3]
	0x0339B708 LDR X23, [X23 + 0x158]
	0x0339B70C MOV W21, W2
	0x0339B710 MOV X20, X1
	0x0339B714 MOV X19, X0
	0x0339B718 TBNZ X8, 0x0, 0x339B730
	0x0339B71C ADRP X0, 0xD84000
	0x0339B720 LDR X0, [X0 + 0x158]
	0x0339B724 BL 0x1C16CF4
	0x0339B728 MOVZ W8, 0x1
	0x0339B72C STRB W8, [X22 + 0xF3]
	0x0339B730 LDR X0, [X23]
	0x0339B734 LDR W8, [X0 + 0xE0]
	0x0339B738 CBNZ W8, 0x339B740
	0x0339B73C BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0xD8E000
	005 Move X0, [X0+48]
	006 Call 0x1C17D08
	007 Move X19, X0
	008 Move X0, 0xD8B000
	009 Move X0, [X0+192]
	010 Call 0x1C17D08
	011 Move X20, X0
	012 Move X0, 0xD8B000
	013 Move X0, [X0+152]
	014 Call 0x1C17D08
	015 Move X2, X0
	016 Move X0, X19
	017 Move X1, X20
	018 Move X3, X31
	019 Call SR.Format, X0, X1, X2
	020 Move X19, X0
	021 Move X0, 0xD61000
	022 Move X0, [X0+3080]
	023 Call 0x1C17D08
	024 Call 0x1C17F10
	025 Move X1, X19
	026 Move X2, X31
	027 Move X20, X0
	028 Call InvalidCastException..ctor, X0, X1
	029 Move X0, 0xD91000
	030 Move X0, [X0+1448]
	031 Call 0x1C17D08
	032 Move X1, X0
	033 Move X0, X20
	034 Call 0x1C17DEC

Method: System.Object System.IConvertible.ToType(System.Type type, System.IFormatProvider provider)

Disassembly:
	0x0339B740 MOV X0, X19
	0x0339B744 MOV X1, X31
	0x0339B748 AND W21, W21, 0x1
	0x0339B74C BL 0x33671B0
	0x0339B750 STR X20, [X19 + 0x10]
	0x0339B754 STRB W21, [X19 + 0x18]
	0x0339B758 LDP X20, X19, [X31 + 0x20]
	0x0339B75C LDP X22, X21, [X31 + 0x10]
	0x0339B760 LDP X30, X23, [X31], #0x30
	0x0339B764 RET
	0x0339B768 LDR X0, [X0 + 0x10]
	0x0339B76C RET
	0x0339B770 LDRB W0, [X0 + 0x18]
	0x0339B774 RET
	0x0339B778 STR X30, [X31 - 0x30]!
	0x0339B77C STP X22, X21, [X31 + 0x10]
	0x0339B780 STP X20, X19, [X31 + 0x20]
	0x0339B784 LDR X8, [X2 + 0x8]
	0x0339B788 STP X1, X2, [X0 + 0x20]
	0x0339B78C MOV X19, X0
	0x0339B790 MOV X20, X2
	0x0339B794 STR X8, [X0 + 0x10]
	0x0339B798 LDRB W22, [X2 + 0x52]
	0x0339B79C STR X0, [X0 + 0x40]
	0x0339B7A0 MOV X0, X2
	0x0339B7A4 MOV X21, X1
	0x0339B7A8 BL 0x1C16D84
	0x0339B7AC TBZ X0, 0x0, 0x339B7C4
	0x0339B7B0 CMP W22, 0x2
	0x0339B7B4 B.NE 0x339B800
	0x0339B7B8 ADRP X8, 0xFFFFFFFFFE81F000
	0x0339B7BC ADD X8, X8, 0x928
	0x0339B7C0 B 0x339B844
	0x0339B7C4 CMP W22, 0x1
	0x0339B7C8 B.NE 0x339B7FC
	0x0339B7CC LDRB W8, [X19 + 0x70]
	0x0339B7D0 CBZ W8, 0x339B814
	0x0339B7D4 MOV X0, X20
	0x0339B7D8 BL 0x1C16D7C
	0x0339B7DC MOV W21, W0
	0x0339B7E0 MOV X0, X20
	0x0339B7E4 BL 0x1C17238
	0x0339B7E8 TBZ X21, 0x0, 0x339B820

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x1043000
	009 Move X23, 0xD61000
	010 Move X22, 0xD62000
	011 Move W8, [X24+216]
	012 Move X23, [X23+1824]
	013 Move X22, [X22+2536]
	014 Move X19, X2
	015 Move X20, X1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xD62000
	022 Move X0, [X0+2536]
	023 Call 0x1C17CF4
	024 Move X0, 0xD61000
	025 Move X0, [X0+1824]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X24+216], W8
	029 Move W8, [X21]
	030 Move X0, [X23]
	031 Add X1, X31, 12
	032 Move [X31+12], W8
	033 Call 0x1C17E04
	034 Move X8, [X22]
	035 Move X21, X0
	036 Move W9, [X8+224]
	037 Compare W9, 0
	038 JumpIfNotEqual {41}
	039 Move X0, X8
	040 Call 0x1C17DFC
	041 Move X0, X21
	042 Move X1, X20
	043 Move X2, X19
	044 Move X3, X31
	045 Call Convert.DefaultToType, X0, X1, X2
	046 Move X20, [X31+48]
	047 Move X19, [X31+56]
	048 Move X22, [X31+32]
	049 Move X21, [X31+40]
	050 Move X24, [X31+16]
	051 Move X23, [X31+24]
	052 Move X30, [X31+64]
	053 Return X0

