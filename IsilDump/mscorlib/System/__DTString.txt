Type: System.__DTString

Method: System.Int32 get_Length()

Disassembly:
	0x033758E0 TBNZ X8, 0x0, 0x33758F8
	0x033758E4 ADRP X0, 0xDB3000
	0x033758E8 LDR X0, [X0 + 0x4F0]
	0x033758EC BL 0x1C16CF4
	0x033758F0 MOVZ W8, 0x1
	0x033758F4 STRB W8, [X21 + 0xF17]
	0x033758F8 LDR W8, [X19 + 0x10]
	0x033758FC ADD W21, W8, 0x1
	0x03375900 STR W21, [X19 + 0x10]
	0x03375904 LDR X0, [X22]
	0x03375908 LDR W8, [X0 + 0xE0]
	0x0337590C CBNZ W8, 0x3375914
	0x03375910 BL 0x1C16DFC
	0x03375914 ADRP X22, 0x1067000
	0x03375918 LDRB W8, [X22 + 0xF0C]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1068000
	005 Move W8, [X20+3852]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xDAE000
	012 Move X0, [X0+40]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3852], W8
	016 Move W0, [X19+8]
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+32]
	020 Return X0

Method: System.Void .ctor(System.ReadOnlySpan`1<System.Char> str, System.Globalization.DateTimeFormatInfo dtfi, System.Boolean checkDigitToken)

Disassembly:
	0x0337591C TBNZ X8, 0x0, 0x3375934
	0x03375920 ADRP X0, 0xDAD000
	0x03375924 LDR X0, [X0 + 0x28]
	0x03375928 BL 0x1C16CF4
	0x0337592C MOVZ W8, 0x1
	0x03375930 STRB W8, [X22 + 0xF0C]
	0x03375934 LDR W9, [X19 + 0x8]
	0x03375938 CMP W21, W9
	0x0337593C B.GE 0x3375968
	0x03375940 LDRSW X8, [X19 + 0x10]
	0x03375944 CMP W8, W9
	0x03375948 B.CS 0x337598C
	0x0337594C LDR X9, [X19]
	0x03375950 LDRH W9, [X9, X8, LSL #1]
	0x03375954 CMP W9, W20, UXTH
	0x03375958 B.NE 0x3375970
	0x0337595C STRH W20, [X19 + 0x14]
	0x03375960 MOVZ W0, 0x1
	0x03375964 B 0x337597C
	0x03375968 MOV W0, W31
	0x0337596C B 0x337597C
	0x03375970 MOV W0, W31
	0x03375974 SUB W8, W8, 0x1
	0x03375978 STR W8, [X19 + 0x10]
	0x0337597C LDP X20, X19, [X31 + 0x20]
	0x03375980 LDP X22, X21, [X31 + 0x10]
	0x03375984 LDR X30, [X31], #0x30
	0x03375988 RET
	0x0337598C BL 0x1C16F28
	0x03375990 SUB X31, X31, 0x50
	0x03375994 STP X30, X25, [X31 + 0x10]
	0x03375998 STP X24, X23, [X31 + 0x20]
	0x0337599C STP X22, X21, [X31 + 0x30]
	0x033759A0 STP X20, X19, [X31 + 0x40]
	0x033759A4 ADRP X22, 0x1067000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x1068000
	010 Move X24, 0xDB4000
	011 Move W8, [X25+3853]
	012 Move X24, [X24+1264]
	013 Move W22, W4
	014 Move X20, X3
	015 Move X21, X2
	016 Move X23, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0xDB4000
	023 Move X0, [X0+1264]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X25+3853], W8
	027 Move X0, [X24]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X19
	033 Move X1, X23
	034 Move X2, X21
	035 Move X3, X20
	036 And W22, W22, 1
	037 Call __DTString..ctor, X0, X1, X2
	038 Move [X19+32], W22
	039 Move X20, [X31+48]
	040 Move X19, [X31+56]
	041 Move X22, [X31+32]
	042 Move X21, [X31+40]
	043 Move X24, [X31+16]
	044 Move X23, [X31+24]
	045 Move X30, [X31+64]
	046 Move X25, [X31+72]
	047 Return 

Method: System.Void .ctor(System.ReadOnlySpan`1<System.Char> str, System.Globalization.DateTimeFormatInfo dtfi)

Disassembly:
	0x033759A8 LDRB W8, [X22 + 0xF18]
	0x033759AC MOV X19, X2
	0x033759B0 MOV X20, X1
	0x033759B4 MOV X21, X0
	0x033759B8 TBNZ X8, 0x0, 0x33759D0
	0x033759BC ADRP X0, 0xDB3000
	0x033759C0 LDR X0, [X0 + 0x4F0]
	0x033759C4 BL 0x1C16CF4
	0x033759C8 MOVZ W8, 0x1
	0x033759CC STRB W8, [X22 + 0xF18]
	0x033759D0 CBZ X20, 0x3375A80
	0x033759D4 LDR W8, [X20 + 0x18]
	0x033759D8 CMP W8, 0x1
	0x033759DC B.LT 0x3375A60
	0x033759E0 ADRP X25, 0xDB3000
	0x033759E4 LDR X25, [X25 + 0x4F0]
	0x033759E8 MOV W24, W31
	0x033759EC MOVN W22, 0x0
	0x033759F0 CMP W24, W8
	0x033759F4 B.CS 0x3375A84
	0x033759F8 ADD X8, X20, W24, 0x3, SXTW
	0x033759FC LDR X23, [X8 + 0x20]
	0x03375A00 CBZ X23, 0x3375A80
	0x03375A04 LDR W8, [X23 + 0x10]
	0x03375A08 LDR X0, [X25]
	0x03375A0C STR W8, [X31 + 0xC]
	0x03375A10 LDR W8, [X0 + 0xE0]
	0x03375A14 CBNZ W8, 0x3375A1C
	0x03375A18 BL 0x1C16DFC
	0x03375A1C ADD X3, X31, 0xC
	0x03375A20 MOV X0, X21
	0x03375A24 MOV X1, X23
	0x03375A28 MOV W2, W31
	0x03375A2C BL 0x3375320
	0x03375A30 TBZ X0, 0x0, 0x3375A4C
	0x03375A34 LDR W8, [X31 + 0xC]
	0x03375A38 LDR W9, [X19]
	0x03375A3C CMP W8, W9
	0x03375A40 B.LE 0x3375A4C
	0x03375A44 MOV W22, W24
	0x03375A48 STR W8, [X19]
	0x03375A4C LDR W8, [X20 + 0x18]
	0x03375A50 ADD W24, W24, 0x1
	0x03375A54 CMP W24, W8
	0x03375A58 B.LT 0x33759F0
	0x03375A5C B 0x3375A64
	0x03375A60 MOVN W22, 0x0
	0x03375A64 MOV W0, W22
	0x03375A68 LDP X20, X19, [X31 + 0x40]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x1068000
	008 Move W8, [X23+3854]
	009 Move X20, X3
	010 Move X21, X2
	011 Move X22, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xD81000
	018 Move X0, [X0+3144]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+3854], W8
	022 Move TEMP, 0
	023 Not TEMP
	024 Move W8, TEMP
	025 Move [X19], X22
	026 Move [X19+8], X21
	027 Move [X19+16], W8
	028 NotImplemented "Instruction STRH not yet implemented."
	029 Compare X20, 0
	030 JumpIfEqual {42}
	031 Move X0, X20
	032 Move X1, X31
	033 Call DateTimeFormatInfo.get_CompareInfo, X0
	034 Move [X19+24], X0
	035 Move X0, X20
	036 Move X1, X31
	037 Call DateTimeFormatInfo.get_FormatFlags, X0
	038 Move W8, W0
	039 ShiftRight W8, 5
	040 And W8, W8, 31
	041 Move [X19+32], W8
	042 Move X8, 0xD81000
	043 Move X8, [X8+3144]
	044 Move X0, [X8]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Move X0, X31
	050 Call CultureInfo.get_CurrentCulture
	051 Compare X0, 0
	052 JumpIfEqual {66}
	053 Move X8, [X0]
	054 Move X9, [X8+504]
	055 Move X1, [X8+512]
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Move [X19+24], X0
	058 Move [X19+32], W31
	059 Move X20, [X31+32]
	060 Move X19, [X31+40]
	061 Move X22, [X31+16]
	062 Move X21, [X31+24]
	063 Move X30, [X31+48]
	064 Move X23, [X31+56]
	065 Return 
	066 Call 0x1C17F20

Method: System.Globalization.CompareInfo get_CompareInfo()

Disassembly:
	0x03375A6C LDP X22, X21, [X31 + 0x30]
	0x03375A70 LDP X24, X23, [X31 + 0x20]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Boolean GetNext()

Disassembly:
	0x03375A74 LDP X30, X25, [X31 + 0x10]
	0x03375A78 ADD X31, X31, 0x50
	0x03375A7C RET
	0x03375A80 BL 0x1C16F20
	0x03375A84 BL 0x1C16F28
	0x03375A88 STP X30, X25, [X31 - 0x40]!
	0x03375A8C STP X24, X23, [X31 + 0x10]
	0x03375A90 STP X22, X21, [X31 + 0x20]
	0x03375A94 STP X20, X19, [X31 + 0x30]
	0x03375A98 ADRP X20, 0x1067000
	0x03375A9C LDRB W8, [X20 + 0xF19]
	0x03375AA0 MOV X19, X0
	0x03375AA4 TBNZ X8, 0x0, 0x3375ABC
	0x03375AA8 ADRP X0, 0xDB3000
	0x03375AAC LDR X0, [X0 + 0x4F0]
	0x03375AB0 BL 0x1C16CF4
	0x03375AB4 MOVZ W8, 0x1
	0x03375AB8 STRB W8, [X20 + 0xF19]
	0x03375ABC LDRSW X8, [X19 + 0x10]
	0x03375AC0 LDR W9, [X19 + 0x8]
	0x03375AC4 CMP W8, W9
	0x03375AC8 B.CS 0x3375B60
	0x03375ACC LDR X9, [X19]
	0x03375AD0 ADRP X21, 0xDB3000
	0x03375AD4 ADRP X20, 0xDAD000
	0x03375AD8 LDR X21, [X21 + 0x4F0]
	0x03375ADC LDRH W22, [X9, X8, LSL #1]
	0x03375AE0 LDR X20, [X20 + 0x28]
	0x03375AE4 ADD W8, W8, 0x1
	0x03375AE8 ADRP X23, 0x1067000
	0x03375AEC MOVZ W24, 0x1
	0x03375AF0 LDR X0, [X21]
	0x03375AF4 MOV W25, W8
	0x03375AF8 LDR W9, [X0 + 0xE0]
	0x03375AFC CBNZ W9, 0x3375B04
	0x03375B00 BL 0x1C16DFC
	0x03375B04 LDRB W8, [X23 + 0xF0C]
	0x03375B08 TBNZ X8, 0x0, 0x3375B18
	0x03375B0C MOV X0, X20
	0x03375B10 BL 0x1C16CF4
	0x03375B14 STRB W24, [X23 + 0xF0C]
	0x03375B18 LDR W8, [X19 + 0x8]
	0x03375B1C CMP W25, W8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1068000
	006 Move X21, 0xDB4000
	007 Move W8, [X20+3855]
	008 Move X21, [X21+1264]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDB4000
	015 Move X0, [X0+1264]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3855], W8
	019 Move W8, [X19+16]
	020 Add W20, W8, 1
	021 Move [X19+16], W20
	022 Move X0, [X21]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X21, 0x1068000
	028 Move W8, [X21+3852]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {38}
	033 Move X0, 0xDAE000
	034 Move X0, [X0+40]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X21+3852], W8
	038 Move W8, [X19+8]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 NotImplemented "Instruction LDRSW not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X10, [X19]
	043 NotImplemented "Instruction LDRH not yet implemented."
	044 NotImplemented "Instruction STRH not yet implemented."
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 NotImplemented "Instruction CSET not yet implemented."
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return X0
	052 Call 0x1C17F28

Method: System.Boolean AtEnd()

Disassembly:
	0x03375B20 B.GE 0x3375B3C
	0x03375B24 B.CS 0x3375B60
	0x03375B28 LDR X8, [X19]
	0x03375B2C LDRH W8, [X8, W25, SXTW]
	0x03375B30 CMP W8, W22
	0x03375B34 ADD W8, W25, 0x1
	0x03375B38 B.EQ 0x3375AF0
	0x03375B3C LDR W8, [X19 + 0x10]
	0x03375B40 SUB W9, W25, 0x1
	0x03375B44 STR W9, [X19 + 0x10]
	0x03375B48 LDP X20, X19, [X31 + 0x30]
	0x03375B4C LDP X22, X21, [X31 + 0x20]
	0x03375B50 LDP X24, X23, [X31 + 0x10]
	0x03375B54 SUB W0, W25, W8
	0x03375B58 LDP X30, X25, [X31], #0x40
	0x03375B5C RET
	0x03375B60 BL 0x1C16F28
	0x03375B64 STP X30, X21, [X31 - 0x20]!
	0x03375B68 STP X20, X19, [X31 + 0x10]
	0x03375B6C ADRP X20, 0x1067000
	0x03375B70 ADRP X21, 0xDB3000
	0x03375B74 LDRB W8, [X20 + 0xF1A]
	0x03375B78 LDR X21, [X21 + 0x4F0]
	0x03375B7C MOV X19, X0
	0x03375B80 TBNZ X8, 0x0, 0x3375BA4
	0x03375B84 ADRP X0, 0xDB3000
	0x03375B88 LDR X0, [X0 + 0x588]
	0x03375B8C BL 0x1C16CF4
	0x03375B90 ADRP X0, 0xDB3000
	0x03375B94 LDR X0, [X0 + 0x4F0]
	0x03375B98 BL 0x1C16CF4
	0x03375B9C MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1068000
	006 Move X20, 0xDB4000
	007 Move W8, [X21+3856]
	008 Move X20, [X20+1264]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDB4000
	015 Move X0, [X0+1264]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3856], W8
	019 Move X0, [X20]
	020 Move W20, [X19+16]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X21, 0x1068000
	026 Move W8, [X21+3852]
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {36}
	031 Move X0, 0xDAE000
	032 Move X0, [X0+40]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X21+3852], W8
	036 Move W8, [X19+8]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 NotImplemented "Instruction CSET not yet implemented."
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Return X0

Method: System.Boolean Advance(System.Int32 count)

Disassembly:
	0x03375BA0 STRB W8, [X20 + 0xF1A]
	0x03375BA4 LDR W8, [X19 + 0x10]
	0x03375BA8 ADD W20, W8, 0x1
	0x03375BAC STR W20, [X19 + 0x10]
	0x03375BB0 LDR X0, [X21]
	0x03375BB4 LDR W8, [X0 + 0xE0]
	0x03375BB8 CBNZ W8, 0x3375BC0
	0x03375BBC BL 0x1C16DFC
	0x03375BC0 ADRP X21, 0x1067000
	0x03375BC4 LDRB W8, [X21 + 0xF0C]
	0x03375BC8 TBNZ X8, 0x0, 0x3375BE0
	0x03375BCC ADRP X0, 0xDAD000
	0x03375BD0 LDR X0, [X0 + 0x28]
	0x03375BD4 BL 0x1C16CF4
	0x03375BD8 MOVZ W8, 0x1
	0x03375BDC STRB W8, [X21 + 0xF0C]
	0x03375BE0 LDR W9, [X19 + 0x8]
	0x03375BE4 CMP W20, W9
	0x03375BE8 B.GE 0x3375C2C
	0x03375BEC LDRSW X8, [X19 + 0x10]
	0x03375BF0 CMP W8, W9
	0x03375BF4 B.CS 0x3375C3C
	0x03375BF8 ADRP X9, 0xDB3000
	0x03375BFC LDR X9, [X9 + 0x588]
	0x03375C00 LDR X0, [X9]
	0x03375C04 LDR X9, [X19]
	0x03375C08 LDR W10, [X0 + 0xE0]
	0x03375C0C LDRH W19, [X9, X8, LSL #1]
	0x03375C10 CBNZ W10, 0x3375C18
	0x03375C14 BL 0x1C16DFC
	0x03375C18 MOV W0, W19
	0x03375C1C LDP X20, X19, [X31 + 0x10]
	0x03375C20 MOV X1, X31
	0x03375C24 LDP X30, X21, [X31], #0x20
	0x03375C28 B 0x336BBFC
	0x03375C2C LDP X20, X19, [X31 + 0x10]
	0x03375C30 MOV W0, W31
	0x03375C34 LDP X30, X21, [X31], #0x20
	0x03375C38 RET
	0x03375C3C BL 0x1C16F28
	0x03375C40 STR X30, [X31 - 0x10]!
	0x03375C44 LDRSW X8, [X0 + 0x10]
	0x03375C48 LDR W9, [X0 + 0x8]
	0x03375C4C CMP W8, W9
	0x03375C50 B.CS 0x3375C64
	0x03375C54 LDR X9, [X0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1068000
	007 Move X21, 0xDB4000
	008 Move W8, [X22+3857]
	009 Move X21, [X21+1264]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xDB4000
	017 Move X0, [X0+1264]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3857], W8
	021 Move W8, [X19+16]
	022 Add W20, W8, W20
	023 Move [X19+16], W20
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X21, 0x1068000
	030 Move W8, [X21+3852]
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {40}
	035 Move X0, 0xDAE000
	036 Move X0, [X0+40]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X21+3852], W8
	040 Move W8, [X19+8]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 NotImplemented "Instruction LDRSW not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X10, [X19]
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 NotImplemented "Instruction STRH not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 NotImplemented "Instruction CSET not yet implemented."
	053 Move X30, [X31+48]
	054 Return X0
	055 Call 0x1C17F28

Method: System.Void GetRegularToken(out System.TokenType tokenType, out System.Int32 tokenValue, System.Globalization.DateTimeFormatInfo dtfi)

Disassembly:
	0x03375C58 LDRH W0, [X9, X8, LSL #1]
	0x03375C5C LDR X30, [X31], #0x10
	0x03375C60 RET
	0x03375C64 BL 0x1C16F28
	0x03375C68 STR X30, [X31 - 0x10]!
	0x03375C6C LDRSW X8, [X0 + 0x10]
	0x03375C70 LDR W9, [X0 + 0x8]
	0x03375C74 CMP W8, W9
	0x03375C78 B.CS 0x3375C90
	0x03375C7C LDR X9, [X0]
	0x03375C80 LDRH W8, [X9, X8, LSL #1]
	0x03375C84 SUB W0, W8, 0x30
	0x03375C88 LDR X30, [X31], #0x10
	0x03375C8C RET
	0x03375C90 BL 0x1C16F28
	0x03375C94 STP X30, X25, [X31 - 0x40]!
	0x03375C98 STP X24, X23, [X31 + 0x10]
	0x03375C9C STP X22, X21, [X31 + 0x20]
	0x03375CA0 STP X20, X19, [X31 + 0x30]
	0x03375CA4 ADRP X20, 0x1067000
	0x03375CA8 LDRB W8, [X20 + 0xF1B]
	0x03375CAC MOV X19, X0
	0x03375CB0 TBNZ X8, 0x0, 0x3375CD4
	0x03375CB4 ADRP X0, 0xD80000
	0x03375CB8 LDR X0, [X0 + 0x170]
	0x03375CBC BL 0x1C16CF4
	0x03375CC0 ADRP X0, 0xDB3000
	0x03375CC4 LDR X0, [X0 + 0x4F0]
	0x03375CC8 BL 0x1C16CF4
	0x03375CCC MOVZ W8, 0x1
	0x03375CD0 STRB W8, [X20 + 0xF1B]
	0x03375CD4 ADRP X22, 0xDB3000
	0x03375CD8 ADRP X23, 0xD80000
	0x03375CDC ADRP X20, 0xDAD000
	0x03375CE0 LDR X22, [X22 + 0x4F0]
	0x03375CE4 LDR X23, [X23 + 0x170]
	0x03375CE8 LDR W21, [X19 + 0x10]
	0x03375CEC LDR X20, [X20 + 0x28]
	0x03375CF0 ADRP X24, 0x1067000
	0x03375CF4 MOVZ W25, 0x1
	0x03375CF8 LDR X0, [X22]
	0x03375CFC LDR W8, [X0 + 0xE0]
	0x03375D00 CBNZ W8, 0x3375D08
	0x03375D04 BL 0x1C16DFC
	0x03375D08 LDRB W8, [X24 + 0xF0C]
	0x03375D0C TBNZ X8, 0x0, 0x3375D1C
	0x03375D10 MOV X0, X20
	0x03375D14 BL 0x1C16CF4
	0x03375D18 STRB W25, [X24 + 0xF0C]
	0x03375D1C LDR W9, [X19 + 0x8]
	0x03375D20 ADD W8, W21, 0x1
	0x03375D24 CMP W8, W9
	0x03375D28 B.GE 0x3375D74
	0x03375D2C LDR W8, [X19 + 0x10]
	0x03375D30 ADD W8, W8, 0x1
	0x03375D34 CMP W8, W9
	0x03375D38 B.CS 0x3375D88
	0x03375D3C LDR X0, [X23]
	0x03375D40 LDR X9, [X19]
	0x03375D44 LDR W10, [X0 + 0xE0]
	0x03375D48 LDRH W21, [X9, W8, SXTW]
	0x03375D4C CBNZ W10, 0x3375D54
	0x03375D50 BL 0x1C16DFC
	0x03375D54 MOV W0, W21
	0x03375D58 MOV X1, X31
	0x03375D5C BL 0x3317FCC
	0x03375D60 TBZ X0, 0x0, 0x3375D74
	0x03375D64 LDR W8, [X19 + 0x10]
	0x03375D68 ADD W21, W8, 0x1
	0x03375D6C STR W21, [X19 + 0x10]
	0x03375D70 B 0x3375CF8
	0x03375D74 LDP X20, X19, [X31 + 0x30]
	0x03375D78 LDP X22, X21, [X31 + 0x20]
	0x03375D7C LDP X24, X23, [X31 + 0x10]
	0x03375D80 LDP X30, X25, [X31], #0x40
	0x03375D84 RET
	0x03375D88 BL 0x1C16F28
	0x03375D8C STR X30, [X31 - 0x40]!
	0x03375D90 STP X24, X23, [X31 + 0x10]
	0x03375D94 STP X22, X21, [X31 + 0x20]
	0x03375D98 STP X20, X19, [X31 + 0x30]
	0x03375D9C ADRP X20, 0x1067000
	0x03375DA0 ADRP X21, 0xDB3000
	0x03375DA4 LDRB W8, [X20 + 0xF1D]
	0x03375DA8 LDR X21, [X21 + 0x4F0]
	0x03375DAC MOV X19, X0
	0x03375DB0 TBNZ X8, 0x0, 0x3375DE0
	0x03375DB4 ADRP X0, 0xD80000
	0x03375DB8 LDR X0, [X0 + 0x170]
	0x03375DBC BL 0x1C16CF4
	0x03375DC0 ADRP X0, 0xDB1000
	0x03375DC4 LDR X0, [X0 + 0xD90]
	0x03375DC8 BL 0x1C16CF4
	0x03375DCC ADRP X0, 0xDB3000
	0x03375DD0 LDR X0, [X0 + 0x4F0]
	0x03375DD4 BL 0x1C16CF4
	0x03375DD8 MOVZ W8, 0x1
	0x03375DDC STRB W8, [X20 + 0xF1D]
	0x03375DE0 LDR X0, [X21]
	0x03375DE4 LDR W8, [X0 + 0xE0]
	0x03375DE8 CBNZ W8, 0x3375DF0
	0x03375DEC BL 0x1C16DFC
	0x03375DF0 ADRP X20, 0x1067000
	0x03375DF4 LDRB W8, [X20 + 0xF0C]
	0x03375DF8 TBNZ X8, 0x0, 0x3375E10
	0x03375DFC ADRP X0, 0xDAD000
	0x03375E00 LDR X0, [X0 + 0x28]
	0x03375E04 BL 0x1C16CF4
	0x03375E08 MOVZ W8, 0x1
	0x03375E0C STRB W8, [X20 + 0xF0C]
	0x03375E10 ADRP X23, 0xD80000
	0x03375E14 ADRP X22, 0xDB1000
	0x03375E18 LDR W24, [X19 + 0x8]
	0x03375E1C LDR X23, [X23 + 0x170]
	0x03375E20 LDR X22, [X22 + 0xD90]
	0x03375E24 MOV W21, W24
	0x03375E28 SUBS W24, W24, 0x1
	0x03375E2C B.MI 0x3375E64
	0x03375E30 LDR W8, [X19 + 0x8]
	0x03375E34 CMP W24, W8
	0x03375E38 B.CS 0x3375EAC
	0x03375E3C LDR X0, [X23]
	0x03375E40 LDR X8, [X19]
	0x03375E44 LDR W9, [X0 + 0xE0]
	0x03375E48 LDRH W20, [X8, W24, UXTW]
	0x03375E4C CBNZ W9, 0x3375E54
	0x03375E50 BL 0x1C16DFC
	0x03375E54 MOV W0, W20
	0x03375E58 MOV X1, X31
	0x03375E5C BL 0x3317FCC
	0x03375E60 TBNZ X0, 0x0, 0x3375E24
	0x03375E64 LDR W8, [X19 + 0x8]
	0x03375E68 LDR X20, [X22]
	0x03375E6C CMP W8, W21
	0x03375E70 B.CS 0x3375E7C
	0x03375E74 MOV X0, X31
	0x03375E78 BL 0x339D6EC
	0x03375E7C LDR X0, [X20 + 0x20]
	0x03375E80 LDR X20, [X19]
	0x03375E84 LDRB W8, [X0 + 0x135]
	0x03375E88 TBNZ X8, 0x0, 0x3375E90
	0x03375E8C BL 0x1C5C684
	0x03375E90 MOV W8, W21
	0x03375E94 STP X20, X8, [X19]
	0x03375E98 LDP X20, X19, [X31 + 0x30]
	0x03375E9C LDP X22, X21, [X31 + 0x20]
	0x03375EA0 LDP X24, X23, [X31 + 0x10]
	0x03375EA4 LDR X30, [X31], #0x40
	0x03375EA8 RET
	0x03375EAC BL 0x1C16F28
	0x03375EB0 SUB X31, X31, 0x50
	0x03375EB4 STR X30, [X31 + 0x10]
	0x03375EB8 STP X24, X23, [X31 + 0x20]
	0x03375EBC STP X22, X21, [X31 + 0x30]
	0x03375EC0 STP X20, X19, [X31 + 0x40]
	0x03375EC4 ADRP X21, 0x1067000
	0x03375EC8 ADRP X20, 0xDB3000
	0x03375ECC LDRB W8, [X21 + 0xF1E]
	0x03375ED0 LDR X20, [X20 + 0x4F0]
	0x03375ED4 MOV X19, X0
	0x03375ED8 TBNZ X8, 0x0, 0x3375F38
	0x03375EDC ADRP X0, 0xD87000
	0x03375EE0 LDR X0, [X0 + 0x8D8]
	0x03375EE4 BL 0x1C16CF4
	0x03375EE8 ADRP X0, 0xD80000
	0x03375EEC LDR X0, [X0 + 0x170]
	0x03375EF0 BL 0x1C16CF4
	0x03375EF4 ADRP X0, 0xDAD000
	0x03375EF8 LDR X0, [X0 + 0x198]
	0x03375EFC BL 0x1C16CF4
	0x03375F00 ADRP X0, 0xDB1000
	0x03375F04 LDR X0, [X0 + 0xD90]
	0x03375F08 BL 0x1C16CF4
	0x03375F0C ADRP X0, 0xDAC000
	0x03375F10 LDR X0, [X0 + 0x858]
	0x03375F14 BL 0x1C16CF4
	0x03375F18 ADRP X0, 0xDAD000
	0x03375F1C LDR X0, [X0 + 0x2D0]
	0x03375F20 BL 0x1C16CF4
	0x03375F24 ADRP X0, 0xDB3000
	0x03375F28 LDR X0, [X0 + 0x4F0]
	0x03375F2C BL 0x1C16CF4
	0x03375F30 MOVZ W8, 0x1
	0x03375F34 STRB W8, [X21 + 0xF1E]
	0x03375F38 LDR X0, [X20]
	0x03375F3C STP X31, X31, [X31]
	0x03375F40 LDR W8, [X0 + 0xE0]
	0x03375F44 CBNZ W8, 0x3375F4C
	0x03375F48 BL 0x1C16DFC
	0x03375F4C ADRP X20, 0x1067000
	0x03375F50 LDRB W8, [X20 + 0xF0C]
	0x03375F54 TBNZ X8, 0x0, 0x3375F6C
	0x03375F58 ADRP X0, 0xDAD000
	0x03375F5C LDR X0, [X0 + 0x28]
	0x03375F60 BL 0x1C16CF4
	0x03375F64 MOVZ W8, 0x1
	0x03375F68 STRB W8, [X20 + 0xF0C]
	0x03375F6C LDR W8, [X19 + 0x8]
	0x03375F70 SUB W22, W8, 0x1
	0x03375F74 CMP W22, 0x2
	0x03375F78 B.LT 0x33760C0
	0x03375F7C LDR X9, [X19]
	0x03375F80 LDRH W23, [X9, W22, UXTW]
	0x03375F84 CMP W23, 0x27
	0x03375F88 B.EQ 0x3375F94

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X23, 0x1068000
	015 Move X25, 0xDB4000
	016 Move W8, [X23+3858]
	017 Move X25, [X25+1264]
	018 Move X22, X3
	019 Move X20, X2
	020 Move X19, X1
	021 Move X21, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {37}
	026 Move X0, 0xD81000
	027 Move X0, [X0+368]
	028 Call 0x1C17CF4
	029 Move X0, 0xDB4000
	030 Move X0, [X0+1416]
	031 Call 0x1C17CF4
	032 Move X0, 0xDB4000
	033 Move X0, [X0+1264]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X23+3858], W8
	037 Move [X31+8], X31
	038 Move [X20], W31
	039 Move X0, [X25]
	040 Move W23, [X21+16]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X26, 0x1068000
	046 Move W8, [X26+3852]
	047 Move TEMP, X8
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {56}
	051 Move X0, 0xDAE000
	052 Move X0, [X0+40]
	053 Call 0x1C17CF4
	054 Move W8, 1
	055 Move [X26+3852], W8
	056 Move W8, [X21+8]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X27, 0xDB4000
	059 Move X28, 0xD81000
	060 Move X23, 0xDAE000
	061 Move X27, [X27+1416]
	062 Move X28, [X28+368]
	063 Move X23, [X23+40]
	064 Move W8, 11
	065 Move W29, 1
	066 Move [X19], W8
	067 Move X0, [X27]
	068 NotImplemented "Instruction LDRH not yet implemented."
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move W0, W24
	074 Move X1, X31
	075 Call DateTimeParse.IsDigit, X0
	076 NotImplemented "Instruction LDRH not yet implemented."
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfEqual {144}
	081 Move X0, [X28]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {86}
	085 Call 0x1C17DFC
	086 Move W0, W24
	087 Move X1, X31
	088 Call Char.IsWhiteSpace, X0
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfNotEqual {187}
	093 Move W8, [X21+16]
	094 Add W24, W8, 1
	095 Move [X21+16], W24
	096 Move X0, [X25]
	097 Move W8, [X0+224]
	098 Compare W8, 0
	099 JumpIfNotEqual {101}
	100 Call 0x1C17DFC
	101 Move W8, [X26+3852]
	102 Move TEMP, X8
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfEqual {109}
	106 Move X0, X23
	107 Call 0x1C17CF4
	108 Move [X26+3852], W29
	109 Move W9, [X21+8]
	110 NotImplemented "Instruction CMP not yet implemented."
	111 NotImplemented "Instruction LDRSW not yet implemented."
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X9, [X21]
	114 NotImplemented "Instruction LDRH not yet implemented."
	115 NotImplemented "Instruction STRH not yet implemented."
	116 Move X0, [X28]
	117 Move W8, [X0+224]
	118 Compare W8, 0
	119 JumpIfNotEqual {121}
	120 Call 0x1C17DFC
	121 Move W0, W24
	122 Move X1, X31
	123 Call Char.IsWhiteSpace, X0
	124 Move TEMP, X0
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfEqual {93}
	128 Move W8, 6
	129 Move [X19], W8
	130 Move X20, [X31+96]
	131 Move X19, [X31+104]
	132 Move X22, [X31+80]
	133 Move X21, [X31+88]
	134 Move X24, [X31+64]
	135 Move X23, [X31+72]
	136 Move X26, [X31+48]
	137 Move X25, [X31+56]
	138 Move X28, [X31+32]
	139 Move X27, [X31+40]
	140 Move X29, [X31+16]
	141 Move X30, [X31+24]
	142 Add X31, X31, 112
	143 Return 
	144 Subtract W8, W24, 48
	145 Move [X20], W8
	146 Move W24, [X21+16]
	147 Move X23, 0xDAE000
	148 Move X23, [X23+40]
	149 Move W28, 10
	150 Move X8, W24
	151 Move [X31], X8
	152 Move W29, 1
	153 Move W8, W24
	154 Add W27, W8, 1
	155 Move [X21+16], W27
	156 Move X0, [X25]
	157 Move W8, [X0+224]
	158 Compare W8, 0
	159 JumpIfNotEqual {161}
	160 Call 0x1C17DFC
	161 Move W8, [X26+3852]
	162 Move TEMP, X8
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfEqual {169}
	166 Move X0, X23
	167 Call 0x1C17CF4
	168 Move [X26+3852], W29
	169 Move W9, [X21+8]
	170 NotImplemented "Instruction LDRSW not yet implemented."
	171 NotImplemented "Instruction CMP not yet implemented."
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move X9, [X21]
	174 NotImplemented "Instruction LDRH not yet implemented."
	175 Subtract W10, W9, 48
	176 NotImplemented "Instruction CMP not yet implemented."
	177 NotImplemented "Instruction STRH not yet implemented."
	178 Move W8, [X20]
	179 NotImplemented "Instruction MADD not yet implemented."
	180 Subtract W8, W8, 48
	181 Move [X20], W8
	182 Move W8, [X21+16]
	183 Subtract W8, W8, W24
	184 NotImplemented "Instruction CMP not yet implemented."
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Move W8, 2
	187 Compare X22, 0
	188 JumpIfEqual {236}
	189 Move W1, 255
	190 Move X0, X22
	191 Move X2, X19
	192 Move X3, X20
	193 Move X4, X21
	194 Move X5, X31
	195 Call DateTimeFormatInfo.Tokenize, X0, X1, X2, X3, X4
	196 Move W8, 1
	197 Move TEMP, 0
	198 Not TEMP
	199 Move W9, TEMP
	200 Move [X19], W8
	201 Move [X20], W9
	202 Move W8, 1
	203 Move [X19], W8
	204 Move W8, [X21+32]
	205 Compare W8, 0
	206 JumpIfEqual {130}
	207 Move W8, [X21+8]
	208 Move W25, [X21+16]
	209 NotImplemented "Instruction LDRH not yet implemented."
	210 Move [X21+16], W24
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Move X8, [X21]
	213 Move X9, [X31]
	214 NotImplemented "Instruction LDRH not yet implemented."
	215 NotImplemented "Instruction STRH not yet implemented."
	216 Compare X22, 0
	217 JumpIfEqual {236}
	218 Add X2, X31, 12
	219 Add X3, X31, 8
	220 Move W1, 255
	221 Move X0, X22
	222 Move X4, X21
	223 Move X5, X31
	224 Call DateTimeFormatInfo.Tokenize, X0, X1, X2, X3, X4
	225 Move TEMP, X0
	226 And TEMP, TEMP, 1
	227 Compare TEMP, 1
	228 JumpIfNotEqual {233}
	229 Move W8, [X31+12]
	230 Move [X19], W8
	231 Move W8, [X31+8]
	232 Move [X20], W8
	233 Move [X21+16], W25
	234 NotImplemented "Instruction STRH not yet implemented."
	235 Call 0x1C17F28
	236 Call 0x1C17F20

Method: System.TokenType GetSeparatorToken(System.Globalization.DateTimeFormatInfo dtfi, out System.Int32 indexBeforeSeparator, out System.Char charBeforeSeparator)

Disassembly:
	0x03375F8C CMP W23, 0x22
	0x03375F90 B.NE 0x33760C0
	0x03375F94 ADRP X21, 0xD80000
	0x03375F98 LDR X21, [X21 + 0x170]
	0x03375F9C SUB W24, W8, 0x2
	0x03375FA0 LDRH W20, [X9, W24, UXTW]
	0x03375FA4 LDR X0, [X21]
	0x03375FA8 LDR W8, [X0 + 0xE0]
	0x03375FAC CBNZ W8, 0x3375FB4
	0x03375FB0 BL 0x1C16DFC
	0x03375FB4 MOV W0, W20
	0x03375FB8 MOV X1, X31
	0x03375FBC BL 0x3317FCC
	0x03375FC0 TBZ X0, 0x0, 0x33760C0
	0x03375FC4 SUB X24, X24, 0x1
	0x03375FC8 SUB W22, W22, 0x1
	0x03375FCC CMP W22, 0x1
	0x03375FD0 B.LT 0x3376010
	0x03375FD4 LDR W8, [X19 + 0x8]
	0x03375FD8 CMP X24, X8
	0x03375FDC B.CS 0x33760D8
	0x03375FE0 LDR X0, [X21]
	0x03375FE4 LDR X8, [X19]
	0x03375FE8 LDR W9, [X0 + 0xE0]
	0x03375FEC LDRH W20, [X8, X24, LSL #1]
	0x03375FF0 CBNZ W9, 0x3375FF8
	0x03375FF4 BL 0x1C16DFC
	0x03375FF8 MOV W0, W20
	0x03375FFC MOV X1, X31
	0x03376000 BL 0x3317FCC
	0x03376004 SUB X24, X24, 0x1
	0x03376008 TBNZ X0, 0x0, 0x3375FC8
	0x0337600C B 0x3376014
	0x03376010 MOV W22, W31
	0x03376014 ADRP X8, 0xD86000
	0x03376018 LDR X8, [X8 + 0x8D8]
	0x0337601C ADD W1, W22, 0x1
	0x03376020 LDR X0, [X8]
	0x03376024 BL 0x1C16D6C
	0x03376028 ADRP X8, 0xDAC000
	0x0337602C LDR X8, [X8 + 0x2D0]
	0x03376030 LDR X1, [X8]
	0x03376034 BL 0x25FBC40
	0x03376038 MOV X20, X1
	0x0337603C CMP W22, W20
	0x03376040 B.CS 0x33760D8
	0x03376044 STRH W23, [X0, W22, UXTW]
	0x03376048 ADRP X9, 0xDB0000
	0x0337604C LDR W8, [X19 + 0x8]
	0x03376050 LDR X9, [X9 + 0xD90]
	0x03376054 MOV X21, X0
	0x03376058 CMP W8, W22
	0x0337605C LDR X23, [X9]
	0x03376060 B.CS 0x337606C
	0x03376064 MOV X0, X31
	0x03376068 BL 0x339D6EC
	0x0337606C LDR X0, [X23 + 0x20]
	0x03376070 LDR X23, [X19]
	0x03376074 LDRB W8, [X0 + 0x135]
	0x03376078 TBNZ X8, 0x0, 0x3376080
	0x0337607C BL 0x1C5C684
	0x03376080 ADRP X8, 0xDAC000
	0x03376084 LDR X8, [X8 + 0x198]
	0x03376088 ADD X0, X31, 0x0
	0x0337608C MOV X1, X21
	0x03376090 MOV X2, X20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x1068000
	009 Move X23, 0xDB4000
	010 Move W8, [X24+3859]
	011 Move X23, [X23+1264]
	012 Move X21, X3
	013 Move X22, X2
	014 Move X19, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0xDB4000
	021 Move X0, [X0+1416]
	022 Call 0x1C17CF4
	023 Move X0, 0xDB4000
	024 Move X0, [X0+1264]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+3859], W8
	028 Move [X31+8], X31
	029 Move W8, [X20+16]
	030 Move [X22], W8
	031 NotImplemented "Instruction LDRH not yet implemented."
	032 NotImplemented "Instruction STRH not yet implemented."
	033 Move X0, [X23]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X0, X20
	039 Call __DTString.SkipWhiteSpaceCurrent, X0
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {60}
	044 Move X8, 0xDB3000
	045 Move X8, [X8+1416]
	046 NotImplemented "Instruction LDRH not yet implemented."
	047 Move X0, [X8]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move W0, W21
	053 Move X1, X31
	054 Call DateTimeParse.IsDigit, X0
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {61}
	059 Move W0, 768
	060 Move W0, 512
	061 Compare X19, 0
	062 JumpIfEqual {82}
	063 Add X2, X31, 12
	064 Add X3, X31, 8
	065 Move W1, 0xFF00
	066 Move X0, X19
	067 Move X4, X20
	068 Move X5, X31
	069 Call DateTimeFormatInfo.Tokenize, X0, X1, X2, X3, X4
	070 Move W8, [X31+12]
	071 And W31, W0, 1
	072 Move W9, 768
	073 NotImplemented "Instruction CSEL not yet implemented."
	074 Move X20, [X31+48]
	075 Move X19, [X31+56]
	076 Move X22, [X31+32]
	077 Move X21, [X31+40]
	078 Move X24, [X31+16]
	079 Move X23, [X31+24]
	080 Move X30, [X31+64]
	081 Return X0
	082 Call 0x1C17F20

Method: System.Boolean MatchSpecifiedWord(System.String target)

Disassembly:
	0x033761FC MOV X24, X29
	0x03376200 MOV X23, X8
	0x03376204 LDR W9, [X0 + 0xE0]
	0x03376208 CBNZ W9, 0x3376210
	0x0337620C BL 0x1C16DFC
	0x03376210 LDRB W8, [X26 + 0xF0C]
	0x03376214 TBNZ X8, 0x0, 0x3376224
	0x03376218 MOV X0, X20
	0x0337621C BL 0x1C16CF4
	0x03376220 STRB W28, [X26 + 0xF0C]
	0x03376224 LDRSW X8, [X19 + 0x8]
	0x03376228 ADD X29, X24, 0x1
	0x0337622C CMP X29, X8
	0x03376230 B.GE 0x3376270
	0x03376234 AND X8, X8, 0x0
	0x03376238 CMP X29, X8
	0x0337623C B.CS 0x3376368
	0x03376240 LDR X8, [X19]
	0x03376244 LDR X0, [X27]
	0x03376248 ADD X8, X8, X24, 0x1, LSL
	0x0337624C LDR W9, [X0 + 0xE0]
	0x03376250 LDRH W21, [X8 + 0x2]
	0x03376254 CBNZ W9, 0x337625C
	0x03376258 BL 0x1C16DFC
	0x0337625C MOV W0, W21
	0x03376260 MOV X1, X31
	0x03376264 BL 0x3317FCC
	0x03376268 SUB X8, X23, 0x2
	0x0337626C TBNZ X0, 0x0, 0x33761F8
	0x03376270 CBZ W24, 0x3376348
	0x03376274 ADRP X8, 0xD86000
	0x03376278 LDR X8, [X8 + 0x8D8]
	0x0337627C LDR W9, [X19 + 0x8]
	0x03376280 LDR X0, [X8]
	0x03376284 SUB W1, W9, W24
	0x03376288 BL 0x1C16D6C
	0x0337628C ADRP X8, 0xDAC000
	0x03376290 LDR X8, [X8 + 0x2D0]
	0x03376294 LDR X1, [X8]
	0x03376298 BL 0x25FBC40
	0x0337629C MOV X21, X1
	0x033762A0 CBZ W21, 0x3376368
	0x033762A4 STRH W25, [X0]
	0x033762A8 ADRP X8, 0xDB1000
	0x033762AC LDR W22, [X19 + 0x8]
	0x033762B0 LDR X8, [X8 + 0x7E8]
	0x033762B4 MOV X20, X0
	0x033762B8 CMP W22, W24
	0x033762BC LDR X25, [X8]
	0x033762C0 B.HI 0x33762D0
	0x033762C4 MOV X0, X31
	0x033762C8 BL 0x339D6EC
	0x033762CC LDR W22, [X19 + 0x8]
	0x033762D0 LDR X0, [X25 + 0x20]
	0x033762D4 LDR X25, [X19]
	0x033762D8 LDRB W8, [X0 + 0x135]
	0x033762DC TBNZ X8, 0x0, 0x33762E4
	0x033762E0 BL 0x1C5C684
	0x033762E4 ADRP X9, 0xDAC000
	0x033762E8 LDR X9, [X9 + 0x1A8]
	0x033762EC ORN W8, W31, W24, 0x0
	0x033762F0 ADD W8, W8, W22
	0x033762F4 SUB X10, X25, X23
	0x033762F8 LDR X9, [X9]
	0x033762FC STP X10, X8, [X31]
	0x03376300 LDR X0, [X9 + 0x20]
	0x03376304 LDRB W8, [X0 + 0x135]
	0x03376308 TBNZ X8, 0x0, 0x3376310
	0x0337630C BL 0x1C5C684
	0x03376310 ADRP X8, 0xDAC000
	0x03376314 LDR X8, [X8 + 0x198]
	0x03376318 SUB W2, W21, 0x1
	0x0337631C ADD X1, X20, 0x2

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x1067000
	009 Move W8, [X21+3860]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xDB1000
	017 Move X0, [X0+3472]
	018 Call 0x1C17CF4
	019 Move X0, 0xDB3000
	020 Move X0, [X0+1264]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+3860], W8
	024 Compare X19, 0
	025 JumpIfEqual {87}
	026 Move X8, 0xDB3000
	027 Move X8, [X8+1264]
	028 Move W21, [X20+16]
	029 Move W22, [X19+16]
	030 Move X0, [X8]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X23, 0x1067000
	036 Move W8, [X23+3852]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {46}
	041 Move X0, 0xDAD000
	042 Move X0, [X0+40]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X23+3852], W8
	046 Move W8, [X20+8]
	047 Add W9, W22, W21
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move W0, W31
	050 Move X9, 0xDB1000
	051 Move X21, [X20+24]
	052 NotImplemented "Instruction LDRSW not yet implemented."
	053 Move W22, [X19+16]
	054 Move X9, [X9+3472]
	055 Subtract W8, W8, W23
	056 Move X24, [X9]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X0, X31
	059 Call ThrowHelper.ThrowArgumentOutOfRangeException
	060 Move X0, [X24+32]
	061 Move X20, [X20]
	062 Move W8, [X0+309]
	063 Move TEMP, X8
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfEqual {68}
	067 Call 0x1C5D684
	068 Compare X21, 0
	069 JumpIfEqual {87}
	070 Add X1, X20, X23
	071 Move W4, 1
	072 Move X0, X21
	073 Move X2, X22
	074 Move X3, X19
	075 Move X5, X31
	076 Call CompareInfo.Compare, X0, X1, X2, X3
	077 NotImplemented "Instruction CMP not yet implemented."
	078 NotImplemented "Instruction CSET not yet implemented."
	079 Move X20, [X31+48]
	080 Move X19, [X31+56]
	081 Move X22, [X31+32]
	082 Move X21, [X31+40]
	083 Move X24, [X31+16]
	084 Move X23, [X31+24]
	085 Move X30, [X31+64]
	086 Return X0
	087 Call 0x1C17F20

Method: System.Boolean MatchSpecifiedWords(System.String target, System.Boolean checkWordBoundary, ref System.Int32 matchLength)

Disassembly:
	0x03376320 ADD X0, X31, 0x0
	0x03376324 LDR X3, [X8]
	0x03376328 BL 0x25BEC30
	0x0337632C ADRP X8, 0xDAB000
	0x03376330 LDR X8, [X8 + 0x858]
	0x03376334 MOV X0, X20
	0x03376338 MOV X1, X21
	0x0337633C LDR X2, [X8]
	0x03376340 BL 0x25FB81C
	0x03376344 STP X0, X1, [X19]
	0x03376348 LDP X20, X19, [X31 + 0x60]
	0x0337634C LDP X22, X21, [X31 + 0x50]
	0x03376350 LDP X24, X23, [X31 + 0x40]
	0x03376354 LDP X26, X25, [X31 + 0x30]
	0x03376358 LDP X28, X27, [X31 + 0x20]
	0x0337635C LDP X29, X30, [X31 + 0x10]
	0x03376360 ADD X31, X31, 0x70
	0x03376364 RET
	0x03376368 BL 0x1C16F28
	0x0337636C SUB X31, X31, 0x80
	0x03376370 STP X29, X30, [X31 + 0x20]
	0x03376374 STP X28, X27, [X31 + 0x30]
	0x03376378 STP X26, X25, [X31 + 0x40]
	0x0337637C STP X24, X23, [X31 + 0x50]
	0x03376380 STP X22, X21, [X31 + 0x60]
	0x03376384 STP X20, X19, [X31 + 0x70]
	0x03376388 ADRP X21, 0x1066000
	0x0337638C LDRB W9, [X21 + 0xF20]
	0x03376390 MOV X20, X0
	0x03376394 MOV X19, X8
	0x03376398 TBNZ X9, 0x0, 0x33763B0
	0x0337639C ADRP X0, 0xDB2000
	0x033763A0 LDR X0, [X0 + 0x4F0]
	0x033763A4 BL 0x1C16CF4
	0x033763A8 MOVZ W8, 0x1
	0x033763AC STRB W8, [X21 + 0xF20]
	0x033763B0 ADRP X26, 0xDB2000
	0x033763B4 LDR X26, [X26 + 0x4F0]
	0x033763B8 LDR W21, [X20 + 0x10]
	0x033763BC LDR V0, [X20]
	0x033763C0 MOV W25, W31
	0x033763C4 MOV W24, W31
	0x033763C8 MOV W22, W31
	0x033763CC ADRP X27, 0x1066000
	0x033763D0 MOVZ W28, 0xA
	0x033763D4 MOVZ W29, 0x2
	0x033763D8 MOVZ W23, 0x4
	0x033763DC STR V0, [X31 + 0x1]
	0x033763E0 STR W21, [X31 + 0xC]
	0x033763E4 LDR X0, [X26]
	0x033763E8 LDR W8, [X0 + 0xE0]
	0x033763EC CBNZ W8, 0x33763F4
	0x033763F0 BL 0x1C16DFC
	0x033763F4 LDRB W8, [X27 + 0xF0C]
	0x033763F8 TBNZ X8, 0x0, 0x3376410
	0x033763FC ADRP X0, 0xDAC000
	0x03376400 LDR X0, [X0 + 0x28]
	0x03376404 BL 0x1C16CF4
	0x03376408 MOVZ W8, 0x1
	0x0337640C STRB W8, [X27 + 0xF0C]
	0x03376410 LDR W8, [X20 + 0x8]
	0x03376414 ADD W9, W21, W25
	0x03376418 CMP W9, W8
	0x0337641C B.GE 0x337648C
	0x03376420 LDR W21, [X20 + 0x10]
	0x03376424 ADD W9, W21, W25
	0x03376428 CMP W9, W8
	0x0337642C B.CS 0x33764E8
	0x03376430 LDR X8, [X20]
	0x03376434 LDRH W8, [X8, W9, SXTW]
	0x03376438 SUB W9, W8, 0x30
	0x0337643C AND W9, W9, 0xFFFF
	0x03376440 CBZ W25, 0x337646C
	0x03376444 CMP W9, 0x9
	0x03376448 CSEL W10, W23, W29, HI
	0x0337644C CMP W24, W10
	0x03376450 B.NE 0x33764B4
	0x03376454 CMP W9, 0x9
	0x03376458 ADD W9, W25, 0x1
	0x0337645C B.HI 0x3376498
	0x03376460 CMP W25, 0x8
	0x03376464 B.NE 0x337647C
	0x03376468 B 0x33764A0
	0x0337646C CMP W9, 0x9
	0x03376470 MOVZ W9, 0x1
	0x03376474 B.HI 0x33764AC
	0x03376478 MOVZ W24, 0x2
	0x0337647C MADD W8, W22, W28, W8
	0x03376480 SUB W22, W8, 0x30
	0x03376484 MOV W25, W9
	0x03376488 B 0x33763E4
	0x0337648C CBNZ W25, 0x33764B4
	0x03376490 MOVZ W24, 0x3
	0x03376494 B 0x33764B4
	0x03376498 MOV W25, W9
	0x0337649C B 0x33764B4
	0x033764A0 MOVZ W24, 0x1
	0x033764A4 MOVZ W25, 0x9
	0x033764A8 B 0x33764B4
	0x033764AC MOVZ W24, 0x4
	0x033764B0 MOVZ W25, 0x1
	0x033764B4 LDR W8, [X31 + 0xC]
	0x033764B8 LDR V0, [X31 + 0x1]
	0x033764BC STP W24, W22, [X19 + 0x18]
	0x033764C0 LDP X22, X21, [X31 + 0x60]
	0x033764C4 STP W8, W25, [X19 + 0x10]
	0x033764C8 STR V0, [X19]
	0x033764CC LDP X20, X19, [X31 + 0x70]
	0x033764D0 LDP X24, X23, [X31 + 0x50]
	0x033764D4 LDP X26, X25, [X31 + 0x40]
	0x033764D8 LDP X28, X27, [X31 + 0x30]
	0x033764DC LDP X29, X30, [X31 + 0x20]
	0x033764E0 ADD X31, X31, 0x80
	0x033764E4 RET
	0x033764E8 BL 0x1C16F28
	0x033764EC STR X30, [X31 - 0x30]!
	0x033764F0 STP X22, X21, [X31 + 0x10]
	0x033764F4 STP X20, X19, [X31 + 0x20]
	0x033764F8 ADRP X22, 0x1066000
	0x033764FC ADRP X21, 0xDB2000
	0x03376500 LDRB W8, [X22 + 0xF21]
	0x03376504 LDR X21, [X21 + 0x4F0]
	0x03376508 MOV X20, X1
	0x0337650C MOV X19, X0
	0x03376510 TBNZ X8, 0x0, 0x3376528
	0x03376514 ADRP X0, 0xDB2000
	0x03376518 LDR X0, [X0 + 0x4F0]
	0x0337651C BL 0x1C16CF4
	0x03376520 MOVZ W8, 0x1
	0x03376524 STRB W8, [X22 + 0xF21]
	0x03376528 LDP W8, W9, [X20 + 0x10]
	0x0337652C ADD W20, W9, W8
	0x03376530 STR W20, [X19 + 0x10]
	0x03376534 LDR X0, [X21]
	0x03376538 LDR W8, [X0 + 0xE0]
	0x0337653C CBNZ W8, 0x3376544
	0x03376540 BL 0x1C16DFC
	0x03376544 ADRP X21, 0x1066000
	0x03376548 LDRB W8, [X21 + 0xF0C]
	0x0337654C TBNZ X8, 0x0, 0x3376564
	0x03376550 ADRP X0, 0xDAC000
	0x03376554 LDR X0, [X0 + 0x28]
	0x03376558 BL 0x1C16CF4
	0x0337655C MOVZ W8, 0x1
	0x03376560 STRB W8, [X21 + 0xF0C]
	0x03376564 LDR W9, [X19 + 0x8]
	0x03376568 CMP W20, W9
	0x0337656C B.GE 0x3376588
	0x03376570 LDRSW X8, [X19 + 0x10]
	0x03376574 CMP W8, W9
	0x03376578 B.CS 0x3376598
	0x0337657C LDR X9, [X19]
	0x03376580 LDRH W8, [X9, X8, LSL #1]
	0x03376584 STRH W8, [X19 + 0x14]
	0x03376588 LDP X20, X19, [X31 + 0x20]
	0x0337658C LDP X22, X21, [X31 + 0x10]
	0x03376590 LDR X30, [X31], #0x30
	0x03376594 RET
	0x03376598 BL 0x1C16F28
	0x0337659C STR X30, [X31 - 0x20]!
	0x033765A0 STP X20, X19, [X31 + 0x10]
	0x033765A4 ADRP X19, 0x1066000
	0x033765A8 ADRP X20, 0xD86000
	0x033765AC LDRB W8, [X19 + 0xF22]
	0x033765B0 LDR X20, [X20 + 0x8D8]
	0x033765B4 TBNZ X8, 0x0, 0x33765D8
	0x033765B8 ADRP X0, 0xD86000
	0x033765BC LDR X0, [X0 + 0x8D8]
	0x033765C0 BL 0x1C16CF4
	0x033765C4 ADRP X0, 0xDB2000
	0x033765C8 LDR X0, [X0 + 0x4F0]
	0x033765CC BL 0x1C16CF4
	0x033765D0 MOVZ W8, 0x1
	0x033765D4 STRB W8, [X19 + 0xF22]
	0x033765D8 LDR X0, [X20]
	0x033765DC MOVZ W1, 0x2
	0x033765E0 BL 0x1C16D6C
	0x033765E4 CBZ X0, 0x337662C
	0x033765E8 LDR W8, [X0 + 0x18]
	0x033765EC CBZ W8, 0x3376628
	0x033765F0 MOVZ W9, 0x20
	0x033765F4 CMP W8, 0x1
	0x033765F8 STRH W9, [X0 + 0x20]
	0x033765FC B.EQ 0x3376628
	0x03376600 ADRP X8, 0xDB2000
	0x03376604 LDR X8, [X8 + 0x4F0]
	0x03376608 MOVZ W9, 0xA0
	0x0337660C STRH W9, [X0 + 0x22]
	0x03376610 LDP X20, X19, [X31 + 0x10]
	0x03376614 LDR X8, [X8]
	0x03376618 LDR X8, [X8 + 0xB8]
	0x0337661C STR X0, [X8]
	0x03376620 LDR X30, [X31], #0x20
	0x03376624 RET
	0x03376628 BL 0x1C16F28
	0x0337662C BL 0x1C16F20
	0x03376630 STR X30, [X31 - 0x10]!
	0x03376634 LDR W8, [X0 + 0x10]
	0x03376638 LDR W9, [X0 + 0x8]
	0x0337663C ADD W8, W8, W1
	0x03376640 CMP W8, W9
	0x03376644 B.CS 0x3376658
	0x03376648 LDR X9, [X0]
	0x0337664C LDRH W0, [X9, W8, SXTW]
	0x03376650 LDR X30, [X31], #0x10
	0x03376654 RET
	0x03376658 BL 0x1C16F28
	0x0337665C MOVN X8, 0x0
	0x03376660 MOVZ X9, 0xBFF00000
	0x03376664 STUR X8, [X0 + 0x14]
	0x03376668 STUR X8, [X0 + 0xC]
	0x0337666C STR W8, [X0 + 0x1C]
	0x03376670 STR X9, [X0 + 0x20]
	0x03376674 STR X1, [X0]
	0x03376678 RET
	0x0337667C LDRSW X8, [X0 + 0x8]
	0x03376680 LDR X9, [X0]
	0x03376684 ADD W10, W8, 0x1
	0x03376688 STR W10, [X0 + 0x8]
	0x0337668C STR W1, [X9, X8, LSL #2]
	0x03376690 RET
	0x03376694 LDR X8, [X0]
	0x03376698 LDR W0, [X8, W1, SXTW]
	0x0337669C RET
	0x033766A0 MOVI V0.2D, 0xFFFFFFFFFFFFFFFF
	0x033766A4 MOVN W8, 0x0
	0x033766A8 MOVZ X9, 0xBFF00000
	0x033766AC STP X1, X2, [X0 + 0x60]
	0x033766B0 STR D0, [X0]
	0x033766B4 STR W8, [X0 + 0x8]
	0x033766B8 STR X9, [X0 + 0x18]
	0x033766BC STR W8, [X0 + 0x20]
	0x033766C0 RET
	0x033766C4 STP W1, W2, [X0]
	0x033766C8 STR W3, [X0 + 0x8]
	0x033766CC RET
	0x033766D0 STP X30, X23, [X31 - 0x30]!
	0x033766D4 STP X22, X21, [X31 + 0x10]
	0x033766D8 STP X20, X19, [X31 + 0x20]
	0x033766DC ADRP X20, 0x1066000
	0x033766E0 ADRP X21, 0xDB1000
	0x033766E4 LDRB W8, [X20 + 0xF23]
	0x033766E8 LDR X21, [X21 + 0x7E0]
	0x033766EC MOV X19, X0
	0x033766F0 TBNZ X8, 0x0, 0x3376708
	0x033766F4 ADRP X0, 0xDB1000
	0x033766F8 LDR X0, [X0 + 0x7E0]
	0x033766FC BL 0x1C16CF4
	0x03376700 MOVZ W8, 0x1
	0x03376704 STRB W8, [X20 + 0xF23]
	0x03376708 LDR X0, [X21]
	0x0337670C BL 0x25BF170
	0x03376710 ADRP X23, 0x1066000
	0x03376714 ADRP X22, 0xDB2000
	0x03376718 LDRB W8, [X23 + 0xF24]
	0x0337671C LDR X22, [X22 + 0x570]
	0x03376720 MOV X21, X0
	0x03376724 MOV X20, X1
	0x03376728 TBNZ X8, 0x0, 0x3376740
	0x0337672C ADRP X0, 0xDB2000
	0x03376730 LDR X0, [X0 + 0x570]
	0x03376734 BL 0x1C16CF4
	0x03376738 MOVZ W8, 0x1
	0x0337673C STRB W8, [X23 + 0xF24]
	0x03376740 MOVZ W8, 0x5
	0x03376744 STR W8, [X19 + 0x40]
	0x03376748 LDR X8, [X22]
	0x0337674C STP X21, X20, [X19 + 0x70]
	0x03376750 LDP X22, X21, [X31 + 0x10]
	0x03376754 STR X8, [X19 + 0x48]
	0x03376758 LDP X20, X19, [X31 + 0x20]
	0x0337675C LDP X30, X23, [X31], #0x30
	0x03376760 RET
	0x03376764 STP X30, X23, [X31 - 0x30]!
	0x03376768 STP X22, X21, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X21, 0x1067000
	015 Move W8, [X21+3861]
	016 Move X20, X3
	017 Move X22, X1
	018 Move X19, X0
	019 Move [X31+12], W2
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0xD80000
	025 Move X0, [X0+368]
	026 Call 0x1C17CF4
	027 Move X0, 0xDB1000
	028 Move X0, [X0+3472]
	029 Call 0x1C17CF4
	030 Move X0, 0xDAD000
	031 Move X0, [X0+40]
	032 Call 0x1C17CF4
	033 Move X0, 0xDB3000
	034 Move X0, [X0+1264]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X21+3861], W8
	038 Compare X22, 0
	039 JumpIfEqual {306}
	040 Move W8, [X19+8]
	041 Move W9, [X19+16]
	042 Move W23, [X22+16]
	043 Move X27, 0xD80000
	044 Move X27, [X27+368]
	045 Subtract W8, W8, W9
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move [X20], W23
	048 Move X9, 0xDB1000
	049 NotImplemented "Instruction LDRSW not yet implemented."
	050 Move W8, [X19+8]
	051 Move X24, [X19+24]
	052 Move X9, [X9+3472]
	053 Subtract W8, W8, W21
	054 Move X25, [X9]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X0, X31
	057 Call ThrowHelper.ThrowArgumentOutOfRangeException
	058 Move X0, [X25+32]
	059 Move X25, [X19]
	060 Move W8, [X0+309]
	061 Move TEMP, X8
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfEqual {66}
	065 Call 0x1C5D684
	066 Compare X24, 0
	067 JumpIfEqual {306}
	068 Add X1, X25, X21
	069 Move W4, 1
	070 Move X0, X24
	071 Move X2, X23
	072 Move X3, X22
	073 Move X5, X31
	074 Call CompareInfo.Compare, X0, X1, X2, X3
	075 Compare W0, 0
	076 JumpIfEqual {265}
	077 Move X24, 0xDB3000
	078 Move X24, [X24+1264]
	079 Move W29, [X19+16]
	080 Move X0, [X24]
	081 Move W8, [X0+224]
	082 Compare W8, 0
	083 JumpIfNotEqual {86}
	084 Call 0x1C17DFC
	085 Move X0, [X24]
	086 Move X8, [X0+184]
	087 Move X0, X22
	088 Move W2, W31
	089 Move X3, X31
	090 Move X1, [X8]
	091 Call String.IndexOfAny, X0, X1, X2
	092 Add W31, W0, 1
	093 Move W23, W0
	094 Move W25, W31
	095 Move W8, [X19+8]
	096 Subtract W21, W23, W25
	097 Subtract W9, W8, W21
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Compare W21, 0
	100 JumpIfEqual {169}
	101 Add W28, W21, W29
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X0, [X27]
	104 Move X8, [X19]
	105 Move W9, [X0+224]
	106 NotImplemented "Instruction LDRH not yet implemented."
	107 Compare W9, 0
	108 JumpIfNotEqual {110}
	109 Call 0x1C17DFC
	110 Move W0, W26
	111 Move X1, X31
	112 Call Char.IsWhiteSpace, X0
	113 Move TEMP, X0
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfNotEqual {289}
	117 Move X9, 0xDB1000
	118 Move W8, [X19+8]
	119 Move X26, [X19+24]
	120 Move X9, [X9+3472]
	121 Move X27, X24
	122 Subtract W8, W8, W29
	123 Move X24, [X9]
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move X0, X31
	126 Call ThrowHelper.ThrowArgumentOutOfRangeException
	127 Move X0, [X24+32]
	128 Move X24, [X19]
	129 Move W8, [X0+309]
	130 Move TEMP, X8
	131 And TEMP, TEMP, 1
	132 Compare TEMP, 1
	133 JumpIfEqual {135}
	134 Call 0x1C5D684
	135 Move X8, 0x1064000
	136 Move W8, [X8+1889]
	137 Compare W8, 0
	138 JumpIfNotEqual {145}
	139 Move X0, 0xDA5000
	140 Move X0, [X0+656]
	141 Call 0x1C17CF4
	142 Move X8, 0x1064000
	143 Move W9, 1
	144 Move [X8+1889], W9
	145 Move W8, [X22+16]
	146 Subtract W8, W8, W25
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move W0, 24
	149 Move X1, X31
	150 Call ThrowHelper.ThrowArgumentOutOfRangeException, X0
	151 Move X0, X22
	152 Move X1, X31
	153 Call String.GetRawStringData, X0
	154 Compare X26, 0
	155 JumpIfEqual {306}
	156 Move W2, W21
	157 Add X1, X24, W29
	158 Add X3, X0, W25
	159 Move X0, X26
	160 Move X4, X2
	161 Move X5, X31
	162 Call CompareInfo.CompareOptionIgnoreCase, X0, X1, X2
	163 Compare W0, 0
	164 JumpIfNotEqual {289}
	165 Move X24, X27
	166 Move X27, 0xD80000
	167 Move X27, [X27+368]
	168 Add W29, W28, 1
	169 Move W8, [X20]
	170 Subtract W8, W8, 1
	171 Move [X20], W8
	172 Move W8, [X19+8]
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Move X29, W29
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Move X0, [X27]
	177 Move X8, [X19]
	178 Move W9, [X0+224]
	179 NotImplemented "Instruction LDRH not yet implemented."
	180 Compare W9, 0
	181 JumpIfNotEqual {183}
	182 Call 0x1C17DFC
	183 Move W0, W25
	184 Move X1, X31
	185 Call Char.IsWhiteSpace, X0
	186 Move TEMP, X0
	187 And TEMP, TEMP, 1
	188 Compare TEMP, 1
	189 JumpIfNotEqual {196}
	190 Move W8, [X20]
	191 Add X29, X29, 1
	192 Add W8, W8, 1
	193 Move [X20], W8
	194 NotImplemented "Instruction LDRSW not yet implemented."
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Move X0, [X24]
	197 Move W8, [X0+224]
	198 Compare W8, 0
	199 JumpIfNotEqual {202}
	200 Call 0x1C17DFC
	201 Move X0, [X24]
	202 Move X8, [X0+184]
	203 Add W25, W23, 1
	204 Move X0, X22
	205 Move W2, W25
	206 Move X1, [X8]
	207 Move X3, X31
	208 Call String.IndexOfAny, X0, X1, X2
	209 Move W23, W0
	210 Move TEMP, X0
	211 And TEMP, TEMP, -2147483648
	212 Compare TEMP, -2147483648
	213 JumpIfNotEqual {95}
	214 Move W8, [X22+16]
	215 Subtract W21, W8, W25
	216 Move W8, [X19+8]
	217 Subtract W9, W8, W21
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Move X9, 0xDB1000
	220 Move X23, [X19+24]
	221 Move X9, [X9+3472]
	222 Subtract W8, W8, W29
	223 Move X24, [X9]
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Move X0, X31
	226 Call ThrowHelper.ThrowArgumentOutOfRangeException
	227 Move X0, [X24+32]
	228 Move X24, [X19]
	229 Move W8, [X0+309]
	230 Move TEMP, X8
	231 And TEMP, TEMP, 1
	232 Compare TEMP, 1
	233 JumpIfEqual {235}
	234 Call 0x1C5D684
	235 Move X9, 0x1064000
	236 Move W8, [X9+1889]
	237 Compare W8, 0
	238 JumpIfNotEqual {245}
	239 Move X0, 0xDA5000
	240 Move X0, [X0+656]
	241 Move X26, X9
	242 Call 0x1C17CF4
	243 Move W8, 1
	244 Move [X26+1889], W8
	245 Move W8, [X22+16]
	246 Subtract W8, W8, W25
	247 NotImplemented "Instruction CMP not yet implemented."
	248 Move W0, 24
	249 Move X1, X31
	250 Call ThrowHelper.ThrowArgumentOutOfRangeException, X0
	251 Move X0, X22
	252 Move X1, X31
	253 Call String.GetRawStringData, X0
	254 Compare X23, 0
	255 JumpIfEqual {306}
	256 Move W2, W21
	257 Add X1, X24, W29
	258 Add X3, X0, W25
	259 Move X0, X23
	260 Move X4, X2
	261 Move X5, X31
	262 Call CompareInfo.CompareOptionIgnoreCase, X0, X1, X2
	263 Compare W0, 0
	264 JumpIfNotEqual {289}
	265 Move W8, [X31+12]
	266 Move TEMP, X8
	267 And TEMP, TEMP, 1
	268 Compare TEMP, 1
	269 JumpIfNotEqual {290}
	270 Move W8, [X19+16]
	271 Move W9, [X20]
	272 Move W10, [X19+8]
	273 Add W8, W9, W8
	274 NotImplemented "Instruction CMP not yet implemented."
	275 Move X0, [X27]
	276 Move X9, [X19]
	277 Move W10, [X0+224]
	278 NotImplemented "Instruction LDRH not yet implemented."
	279 Compare W10, 0
	280 JumpIfNotEqual {282}
	281 Call 0x1C17DFC
	282 Move W0, W19
	283 Move X1, X31
	284 Call Char.IsLetter, X0
	285 Move TEMP, X0
	286 And TEMP, TEMP, 1
	287 Compare TEMP, 1
	288 JumpIfNotEqual {290}
	289 Move W0, W31
	290 Move W0, 1
	291 Move X20, [X31+96]
	292 Move X19, [X31+104]
	293 Move X22, [X31+80]
	294 Move X21, [X31+88]
	295 Move X24, [X31+64]
	296 Move X23, [X31+72]
	297 Move X26, [X31+48]
	298 Move X25, [X31+56]
	299 Move X28, [X31+32]
	300 Move X27, [X31+40]
	301 Move X29, [X31+16]
	302 Move X30, [X31+24]
	303 Add X31, X31, 112
	304 Return X0
	305 Call 0x1C17F28
	306 Call 0x1C17F20

Method: System.Boolean Match(System.String str)

Disassembly:
	0x0337676C STP X20, X19, [X31 + 0x20]
	0x03376770 ADRP X23, 0x1066000
	0x03376774 ADRP X22, 0xDB2000
	0x03376778 LDRB W8, [X23 + 0xF24]
	0x0337677C LDR X22, [X22 + 0x570]
	0x03376780 MOV X19, X2
	0x03376784 MOV X21, X1
	0x03376788 MOV X20, X0
	0x0337678C TBNZ X8, 0x0, 0x33767A4
	0x03376790 ADRP X0, 0xDB2000
	0x03376794 LDR X0, [X0 + 0x570]
	0x03376798 BL 0x1C16CF4
	0x0337679C MOVZ W8, 0x1
	0x033767A0 STRB W8, [X23 + 0xF24]
	0x033767A4 MOVZ W8, 0x5
	0x033767A8 STR W8, [X20 + 0x40]
	0x033767AC LDR X8, [X22]
	0x033767B0 STP X21, X19, [X20 + 0x70]
	0x033767B4 LDP X22, X21, [X31 + 0x10]
	0x033767B8 STR X8, [X20 + 0x48]
	0x033767BC LDP X20, X19, [X31 + 0x20]
	0x033767C0 LDP X30, X23, [X31], #0x30
	0x033767C4 RET
	0x033767C8 STP X30, X21, [X31 - 0x20]!
	0x033767CC STP X20, X19, [X31 + 0x10]
	0x033767D0 ADRP X21, 0x1066000
	0x033767D4 ADRP X20, 0xDB4000
	0x033767D8 LDRB W8, [X21 + 0xF25]
	0x033767DC LDR X20, [X20 + 0xC00]
	0x033767E0 MOV X19, X0
	0x033767E4 TBNZ X8, 0x0, 0x33767FC
	0x033767E8 ADRP X0, 0xDB4000
	0x033767EC LDR X0, [X0 + 0xC00]
	0x033767F0 BL 0x1C16CF4
	0x033767F4 MOVZ W8, 0x1
	0x033767F8 STRB W8, [X21 + 0xF25]
	0x033767FC MOVZ W8, 0x4
	0x03376800 STR W8, [X19 + 0x40]
	0x03376804 LDR X8, [X20]
	0x03376808 STP X8, X31, [X19 + 0x48]
	0x0337680C LDP X20, X19, [X31 + 0x10]
	0x03376810 LDP X30, X21, [X31], #0x20
	0x03376814 RET
	0x03376818 STR W1, [X0 + 0x40]
	0x0337681C STP X2, X31, [X0 + 0x48]
	0x03376820 RET
	0x03376824 STR W1, [X0 + 0x40]
	0x03376828 STP X2, X3, [X0 + 0x48]
	0x0337682C RET
	0x03376830 STR W1, [X0 + 0x40]
	0x03376834 STP X2, X3, [X0 + 0x48]
	0x03376838 STR X4, [X0 + 0x58]
	0x0337683C RET
	0x03376840 MOVI V0.2D, 0xFFFFFFFFFFFFFFFF
	0x03376844 STR D0, [X0 + 0x8]
	0x03376848 RET
	0x0337684C SUB X31, X31, 0x20
	0x03376850 STP X31, X30, [X31 + 0x8]
	0x03376854 ADD X0, X31, 0x0
	0x03376858 MOVZ W1, 0x10
	0x0337685C MOV X2, X31
	0x03376860 STR X31, [X31]
	0x03376864 BL 0x3209698
	0x03376868 LDRH W8, [X31 + 0x6]
	0x0337686C LDRB W9, [X31 + 0x8]
	0x03376870 MOVZ W10, 0x4000
	0x03376874 MOVZ W11, 0x80
	0x03376878 BFM W10, W8, 0x0, 0xB
	0x0337687C BFM W11, W9, 0x0, 0x5
	0x03376880 STRH W10, [X31 + 0x6]
	0x03376884 STRB W11, [X31 + 0x8]
	0x03376888 LDP X0, X1, [X31]
	0x0337688C LDR X30, [X31 + 0x10]
	0x03376890 ADD X31, X31, 0x20
	0x03376894 RET
	0x03376898 STP X30, X21, [X31 - 0x20]!
	0x0337689C STP X20, X19, [X31 + 0x10]
	0x033768A0 ADRP X21, 0x1066000
	0x033768A4 LDRB W8, [X21 + 0xF26]
	0x033768A8 MOV X19, X1
	0x033768AC MOV X20, X0
	0x033768B0 TBNZ X8, 0x0, 0x33768C8
	0x033768B4 ADRP X0, 0xDB2000
	0x033768B8 LDR X0, [X0 + 0x260]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x1067000
	009 Move X22, 0xDB3000
	010 Move W8, [X21+3862]
	011 Move X22, [X22+1264]
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xDB1000
	019 Move X0, [X0+3472]
	020 Call 0x1C17CF4
	021 Move X0, 0xDAD000
	022 Move X0, [X0+40]
	023 Call 0x1C17CF4
	024 Move X0, 0xDB3000
	025 Move X0, [X0+1264]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+3862], W8
	029 Move W8, [X19+16]
	030 Add W21, W8, 1
	031 Move [X19+16], W21
	032 Move X0, [X22]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X22, 0x1067000
	038 Move W8, [X22+3852]
	039 Move TEMP, X8
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {48}
	043 Move X0, 0xDAD000
	044 Move X0, [X0+40]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X22+3852], W8
	048 Move W8, [X19+8]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Compare X20, 0
	051 JumpIfEqual {98}
	052 NotImplemented "Instruction LDRSW not yet implemented."
	053 Move W21, [X20+16]
	054 Subtract W9, W8, W23
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X10, 0xDB1000
	057 Move X22, [X19+24]
	058 Move X10, [X10+3472]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X24, [X10]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X0, X31
	063 Call ThrowHelper.ThrowArgumentOutOfRangeException
	064 Move X0, [X24+32]
	065 Move X24, [X19]
	066 Move W8, [X0+309]
	067 Move TEMP, X8
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfEqual {72}
	071 Call 0x1C5D684
	072 Compare X22, 0
	073 JumpIfEqual {98}
	074 Add X1, X24, X23
	075 Move W4, 0x40000000
	076 Move X0, X22
	077 Move X2, X21
	078 Move X3, X20
	079 Move X5, X31
	080 Call CompareInfo.Compare, X0, X1, X2, X3
	081 Compare W0, 0
	082 JumpIfEqual {92}
	083 Move W0, W31
	084 Move X20, [X31+48]
	085 Move X19, [X31+56]
	086 Move X22, [X31+32]
	087 Move X21, [X31+40]
	088 Move X24, [X31+16]
	089 Move X23, [X31+24]
	090 Move X30, [X31+64]
	091 Return X0
	092 Move W8, [X19+16]
	093 Move W9, [X20+16]
	094 Move W0, 1
	095 Add W8, W8, W9
	096 Subtract W8, W8, 1
	097 Move [X19+16], W8
	098 Call 0x1C17F20

Method: System.Boolean Match(System.Char ch)

Disassembly:
	0x033768BC BL 0x1C16CF4
	0x033768C0 MOVZ W8, 0x1
	0x033768C4 STRB W8, [X21 + 0xF26]
	0x033768C8 CBZ X19, 0x33768E4
	0x033768CC LDR W2, [X19 + 0x18]
	0x033768D0 ADD X1, X19, 0x20
	0x033768D4 MOV X0, X20
	0x033768D8 LDP X20, X19, [X31 + 0x10]
	0x033768DC LDP X30, X21, [X31], #0x20
	0x033768E0 B 0x337692C
	0x033768E4 ADRP X0, 0xD82000
	0x033768E8 LDR X0, [X0 + 0x528]
	0x033768EC BL 0x1C16D08
	0x033768F0 BL 0x1C16F10
	0x033768F4 MOV X19, X0
	0x033768F8 ADRP X0, 0xDAA000
	0x033768FC LDR X0, [X0 + 0x3C0]
	0x03376900 BL 0x1C16D08
	0x03376904 MOV X1, X0
	0x03376908 MOV X0, X19
	0x0337690C MOV X2, X31
	0x03376910 BL 0x330E100
	0x03376914 ADRP X0, 0xDB4000
	0x03376918 LDR X0, [X0 + 0xD58]
	0x0337691C BL 0x1C16D08
	0x03376920 MOV X1, X0
	0x03376924 MOV X0, X19
	0x03376928 BL 0x1C16DEC
	0x0337692C STR X30, [X31 - 0x30]!
	0x03376930 STP X22, X21, [X31 + 0x10]
	0x03376934 STP X20, X19, [X31 + 0x20]
	0x03376938 ADRP X22, 0x1066000
	0x0337693C LDRB W8, [X22 + 0xF27]
	0x03376940 MOV X21, X2
	0x03376944 MOV X19, X1
	0x03376948 MOV X20, X0
	0x0337694C TBNZ X8, 0x0, 0x3376964
	0x03376950 ADRP X0, 0xDAC000
	0x03376954 LDR X0, [X0 + 0xAC0]
	0x03376958 BL 0x1C16CF4
	0x0337695C MOVZ W8, 0x1
	0x03376960 STRB W8, [X22 + 0xF27]
	0x03376964 CMP W21, 0x10
	0x03376968 B.NE 0x33769D4
	0x0337696C LDR W8, [X19]
	0x03376970 LDP X22, X21, [X31 + 0x10]
	0x03376974 STR W8, [X20]
	0x03376978 LDRH W8, [X19 + 0x4]
	0x0337697C STRH W8, [X20 + 0x4]
	0x03376980 LDRH W8, [X19 + 0x6]
	0x03376984 STRH W8, [X20 + 0x6]
	0x03376988 LDRB W8, [X19 + 0x8]
	0x0337698C STRB W8, [X20 + 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1067000
	007 Move X22, 0xDB3000
	008 Move W8, [X21+3863]
	009 Move X22, [X22+1264]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xDB3000
	017 Move X0, [X0+1264]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3863], W8
	021 Move W8, [X19+16]
	022 Add W21, W8, 1
	023 Move [X19+16], W21
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X22, 0x1067000
	030 Move W8, [X22+3852]
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {40}
	035 Move X0, 0xDAD000
	036 Move X0, [X0+40]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X22+3852], W8
	040 Move W9, [X19+8]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 NotImplemented "Instruction LDRSW not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X9, [X19]
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 NotImplemented "Instruction STRH not yet implemented."
	048 Move W0, 1
	049 Move W0, W31
	050 Move W0, W31
	051 Subtract W8, W8, 1
	052 Move [X19+16], W8
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move X30, [X31+48]
	058 Return X0
	059 Call 0x1C17F28

Method: System.Int32 MatchLongestWords(System.String[] words, ref System.Int32 maxMatchStrLen)

Disassembly:
	0x03376990 LDRB W8, [X19 + 0x9]
	0x03376994 STRB W8, [X20 + 0x9]
	0x03376998 LDRB W8, [X19 + 0xA]
	0x0337699C STRB W8, [X20 + 0xA]
	0x033769A0 LDRB W8, [X19 + 0xB]
	0x033769A4 STRB W8, [X20 + 0xB]
	0x033769A8 LDRB W8, [X19 + 0xC]
	0x033769AC STRB W8, [X20 + 0xC]
	0x033769B0 LDRB W8, [X19 + 0xD]
	0x033769B4 STRB W8, [X20 + 0xD]
	0x033769B8 LDRB W8, [X19 + 0xE]
	0x033769BC STRB W8, [X20 + 0xE]
	0x033769C0 LDRB W8, [X19 + 0xF]
	0x033769C4 STRB W8, [X20 + 0xF]
	0x033769C8 LDP X20, X19, [X31 + 0x20]
	0x033769CC LDR X30, [X31], #0x30
	0x033769D0 RET
	0x033769D4 ADRP X0, 0xDB4000
	0x033769D8 LDR X0, [X0 + 0xD60]
	0x033769DC BL 0x1C16D08
	0x033769E0 MOV X19, X0
	0x033769E4 ADRP X0, 0xD85000
	0x033769E8 LDR X0, [X0 + 0x540]
	0x033769EC BL 0x1C16D08
	0x033769F0 MOV X1, X0
	0x033769F4 MOV X0, X19
	0x033769F8 MOV X2, X31
	0x033769FC BL 0x32094D4
	0x03376A00 MOV X19, X0
	0x03376A04 ADRP X0, 0xD85000
	0x03376A08 LDR X0, [X0 + 0x578]
	0x03376A0C BL 0x1C16D08
	0x03376A10 BL 0x1C16F10
	0x03376A14 MOV X20, X0
	0x03376A18 ADRP X0, 0xDAA000
	0x03376A1C LDR X0, [X0 + 0x3C0]
	0x03376A20 BL 0x1C16D08
	0x03376A24 MOV X2, X0
	0x03376A28 MOV X0, X20
	0x03376A2C MOV X1, X19
	0x03376A30 MOV X3, X31
	0x03376A34 BL 0x330E16C
	0x03376A38 ADRP X0, 0xDB4000
	0x03376A3C LDR X0, [X0 + 0xD68]
	0x03376A40 BL 0x1C16D08
	0x03376A44 MOV X1, X0
	0x03376A48 MOV X0, X20
	0x03376A4C BL 0x1C16DEC
	0x03376A50 LDRB W8, [X31 + 0x18]
	0x03376A54 LDRB W9, [X31 + 0x10]
	0x03376A58 LDRB W10, [X31 + 0x8]
	0x03376A5C LDRB W11, [X31]
	0x03376A60 STR W1, [X0]
	0x03376A64 STRH W2, [X0 + 0x4]
	0x03376A68 STRH W3, [X0 + 0x6]
	0x03376A6C STRB W4, [X0 + 0x8]
	0x03376A70 STRB W5, [X0 + 0x9]
	0x03376A74 STRB W6, [X0 + 0xA]
	0x03376A78 STRB W7, [X0 + 0xB]
	0x03376A7C STRB W11, [X0 + 0xC]
	0x03376A80 STRB W10, [X0 + 0xD]
	0x03376A84 STRB W9, [X0 + 0xE]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x1067000
	011 Move W8, [X22+3864]
	012 Move X19, X2
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xDB3000
	020 Move X0, [X0+1264]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+3864], W8
	024 Compare X20, 0
	025 JumpIfEqual {77}
	026 Move W8, [X20+24]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X25, 0xDB3000
	029 Move X25, [X25+1264]
	030 Move W24, W31
	031 Move TEMP, 0
	032 Not TEMP
	033 Move W22, TEMP
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Add X8, X20, W24
	036 Move X23, [X8+32]
	037 Compare X23, 0
	038 JumpIfEqual {77}
	039 Move W8, [X23+16]
	040 Move X0, [X25]
	041 Move [X31+12], W8
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Add X3, X31, 12
	047 Move X0, X21
	048 Move X1, X23
	049 Move W2, W31
	050 Call __DTString.MatchSpecifiedWords, X0, X1, X2, X3
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {60}
	055 Move W8, [X31+12]
	056 Move W9, [X19]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move W22, W24
	059 Move [X19], W8
	060 Move W8, [X20+24]
	061 Add W24, W24, 1
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move TEMP, 0
	064 Not TEMP
	065 Move W22, TEMP
	066 Move W0, W22
	067 Move X20, [X31+64]
	068 Move X19, [X31+72]
	069 Move X22, [X31+48]
	070 Move X21, [X31+56]
	071 Move X24, [X31+32]
	072 Move X23, [X31+40]
	073 Move X30, [X31+16]
	074 Move X25, [X31+24]
	075 Add X31, X31, 80
	076 Return X0
	077 Call 0x1C17F20
	078 Call 0x1C17F28

Method: System.Int32 GetRepeatCount()

Disassembly:
	0x03376A88 STRB W8, [X0 + 0xF]
	0x03376A8C RET
	0x03376A90 LDRB W8, [X31 + 0x18]
	0x03376A94 LDRB W9, [X31 + 0x10]
	0x03376A98 LDRB W10, [X31 + 0x8]
	0x03376A9C LDRB W11, [X31]
	0x03376AA0 STR W1, [X0]
	0x03376AA4 STRH W2, [X0 + 0x4]
	0x03376AA8 STRH W3, [X0 + 0x6]
	0x03376AAC STRB W4, [X0 + 0x8]
	0x03376AB0 STRB W5, [X0 + 0x9]
	0x03376AB4 STRB W6, [X0 + 0xA]
	0x03376AB8 STRB W7, [X0 + 0xB]
	0x03376ABC STRB W11, [X0 + 0xC]
	0x03376AC0 STRB W10, [X0 + 0xD]
	0x03376AC4 STRB W9, [X0 + 0xE]
	0x03376AC8 STRB W8, [X0 + 0xF]
	0x03376ACC RET
	0x03376AD0 SUB X31, X31, 0x70
	0x03376AD4 STR X30, [X31 + 0x40]
	0x03376AD8 STP X22, X21, [X31 + 0x50]
	0x03376ADC STP X20, X19, [X31 + 0x60]
	0x03376AE0 CBZ X1, 0x3376B5C
	0x03376AE4 ADRP X21, 0x1063000
	0x03376AE8 LDRB W8, [X21 + 0x762]
	0x03376AEC MOV X20, X1
	0x03376AF0 MOV X19, X0
	0x03376AF4 MOVI V0.2D, 0x0
	0x03376AF8 MOVZ W22, 0x1
	0x03376AFC STR X31, [X31 + 0x30]
	0x03376B00 STP V0, V0, [X31 + 0x10]
	0x03376B04 STR V0, [X31]
	0x03376B08 STR W22, [X31 + 0x10]
	0x03376B0C CBNZ W8, 0x3376B20
	0x03376B10 ADRP X0, 0xDA4000
	0x03376B14 LDR X0, [X0 + 0x290]
	0x03376B18 BL 0x1C16CF4
	0x03376B1C STRB W22, [X21 + 0x762]
	0x03376B20 MOV X0, X20
	0x03376B24 MOV X1, X31
	0x03376B28 BL 0x3225708
	0x03376B2C LDR W1, [X20 + 0x10]
	0x03376B30 ADD X3, X31, 0x0
	0x03376B34 MOVZ W2, 0xF
	0x03376B38 BL 0x3376BB4
	0x03376B3C TBZ X0, 0x0, 0x3376B90
	0x03376B40 LDR V0, [X31]
	0x03376B44 LDP X22, X21, [X31 + 0x50]
	0x03376B48 LDR X30, [X31 + 0x40]
	0x03376B4C STR V0, [X19]
	0x03376B50 LDP X20, X19, [X31 + 0x60]
	0x03376B54 ADD X31, X31, 0x70
	0x03376B58 RET
	0x03376B5C ADRP X0, 0xD82000
	0x03376B60 LDR X0, [X0 + 0x528]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x1067000
	010 Move W8, [X20+3865]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xDB3000
	017 Move X0, [X0+1264]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+3865], W8
	021 NotImplemented "Instruction LDRSW not yet implemented."
	022 Move W9, [X19+8]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X9, [X19]
	025 Move X21, 0xDB3000
	026 Move X20, 0xDAD000
	027 Move X21, [X21+1264]
	028 NotImplemented "Instruction LDRH not yet implemented."
	029 Move X20, [X20+40]
	030 Add W8, W8, 1
	031 Move X23, 0x1067000
	032 Move W24, 1
	033 Move X0, [X21]
	034 Move W25, W8
	035 Move W9, [X0+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move W8, [X23+3852]
	040 Move TEMP, X8
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {47}
	044 Move X0, X20
	045 Call 0x1C17CF4
	046 Move [X23+3852], W24
	047 Move W8, [X19+8]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X8, [X19]
	050 NotImplemented "Instruction LDRH not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Add W8, W25, 1
	053 Move W8, [X19+16]
	054 Subtract W9, W25, 1
	055 Move [X19+16], W9
	056 Move X20, [X31+48]
	057 Move X19, [X31+56]
	058 Move X22, [X31+32]
	059 Move X21, [X31+40]
	060 Move X24, [X31+16]
	061 Move X23, [X31+24]
	062 Subtract W0, W25, W8
	063 Move X30, [X31+64]
	064 Move X25, [X31+72]
	065 Return X0
	066 Call 0x1C17F28

Method: System.Boolean GetNextDigit()

Disassembly:
	0x03376B64 BL 0x1C16D08
	0x03376B68 BL 0x1C16F10
	0x03376B6C MOV X19, X0
	0x03376B70 ADRP X0, 0xDAA000
	0x03376B74 LDR X0, [X0 + 0x3B8]
	0x03376B78 BL 0x1C16D08
	0x03376B7C MOV X1, X0
	0x03376B80 MOV X0, X19
	0x03376B84 MOV X2, X31
	0x03376B88 BL 0x330E100
	0x03376B8C B 0x3376B9C
	0x03376B90 ADD X0, X31, 0x0
	0x03376B94 BL 0x3376DF4
	0x03376B98 MOV X19, X0
	0x03376B9C ADRP X0, 0xDB4000
	0x03376BA0 LDR X0, [X0 + 0xD70]
	0x03376BA4 BL 0x1C16D08
	0x03376BA8 MOV X1, X0
	0x03376BAC MOV X0, X19
	0x03376BB0 BL 0x1C16DEC
	0x03376BB4 STP X30, X25, [X31 - 0x40]!
	0x03376BB8 STP X24, X23, [X31 + 0x10]
	0x03376BBC STP X22, X21, [X31 + 0x20]
	0x03376BC0 STP X20, X19, [X31 + 0x30]
	0x03376BC4 ADRP X23, 0x1066000
	0x03376BC8 LDRB W8, [X23 + 0xF28]
	0x03376BCC MOV X19, X3
	0x03376BD0 MOV W20, W2
	0x03376BD4 MOV X21, X1
	0x03376BD8 MOV X22, X0
	0x03376BDC TBNZ X8, 0x0, 0x3376C0C
	0x03376BE0 ADRP X0, 0xDB4000
	0x03376BE4 LDR X0, [X0 + 0xD78]
	0x03376BE8 BL 0x1C16CF4
	0x03376BEC ADRP X0, 0xDAC000
	0x03376BF0 LDR X0, [X0 + 0x28]
	0x03376BF4 BL 0x1C16CF4
	0x03376BF8 ADRP X0, 0xDB4000
	0x03376BFC LDR X0, [X0 + 0xD80]
	0x03376C00 BL 0x1C16CF4
	0x03376C04 MOVZ W8, 0x1
	0x03376C08 STRB W8, [X23 + 0xF28]
	0x03376C0C MOV X0, X22
	0x03376C10 MOV X1, X21
	0x03376C14 BL 0x337FDBC
	0x03376C18 BL 0x337FEB0
	0x03376C1C MOV X21, X1
	0x03376C20 CBZ W21, 0x3376CCC
	0x03376C24 ADRP X25, 0xDB4000
	0x03376C28 LDR X25, [X25 + 0xD78]
	0x03376C2C MOVZ W2, 0x2D
	0x03376C30 MOV X1, X21
	0x03376C34 MOV X22, X0
	0x03376C38 LDR X3, [X25]
	0x03376C3C BL 0x338BFD4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1067000
	006 Move X21, 0xDB3000
	007 Move W8, [X20+3866]
	008 Move X21, [X21+1264]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xDB3000
	015 Move X0, [X0+1416]
	016 Call 0x1C17CF4
	017 Move X0, 0xDB3000
	018 Move X0, [X0+1264]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+3866], W8
	022 Move W8, [X19+16]
	023 Add W20, W8, 1
	024 Move [X19+16], W20
	025 Move X0, [X21]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X21, 0x1067000
	031 Move W8, [X21+3852]
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {41}
	036 Move X0, 0xDAD000
	037 Move X0, [X0+40]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X21+3852], W8
	041 Move W9, [X19+8]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction LDRSW not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X9, 0xDB3000
	046 Move X9, [X9+1416]
	047 Move X0, [X9]
	048 Move X9, [X19]
	049 Move W10, [X0+224]
	050 NotImplemented "Instruction LDRH not yet implemented."
	051 Compare W10, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move W0, W19
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move X1, X31
	058 Move X30, [X31+32]
	059 Move X21, [X31+40]
	060 Call DateTimeParse.IsDigit, X0
	061 Return X0
	062 Move X20, [X31+16]
	063 Move X19, [X31+24]
	064 Move W0, W31
	065 Move X30, [X31+32]
	066 Move X21, [X31+40]
	067 Return X0
	068 Call 0x1C17F28

Method: System.Char GetChar()

Disassembly:
	0x03376C40 MOV W23, W0
	0x03376C44 TBNZ X0, 0x1F, 0x3376C58
	0x03376C48 MOVZ W8, 0x44
	0x03376C4C ANDS W31, W20, W8, 0x0
	0x03376C50 B.NE 0x3376C5C
	0x03376C54 B 0x3376CCC
	0x03376C58 TBNZ X20, 0x6, 0x3376CCC
	0x03376C5C LDR X3, [X25]
	0x03376C60 MOVZ W2, 0x7B
	0x03376C64 MOV X0, X22

ISIL:
	001 Move [X31-16], X30
	002 NotImplemented "Instruction LDRSW not yet implemented."
	003 Move W9, [X0+8]
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Move X9, [X0]
	006 NotImplemented "Instruction LDRH not yet implemented."
	007 Move X30, [X31+16]
	008 Return X0
	009 Call 0x1C17F28

Method: System.Int32 GetDigit()

Disassembly:
	0x03376C68 MOV X1, X21
	0x03376C6C BL 0x338BFD4
	0x03376C70 MOV W24, W0
	0x03376C74 TBNZ X0, 0x1F, 0x3376C88
	0x03376C78 MOVZ W8, 0x22
	0x03376C7C ANDS W31, W20, W8, 0x0
	0x03376C80 B.NE 0x3376C8C
	0x03376C84 B 0x3376CCC
	0x03376C88 TBNZ X20, 0x5, 0x3376CCC
	0x03376C8C LDR X3, [X25]
	0x03376C90 MOVZ W2, 0x28

ISIL:
	001 Move [X31-16], X30
	002 NotImplemented "Instruction LDRSW not yet implemented."
	003 Move W9, [X0+8]
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Move X9, [X0]
	006 NotImplemented "Instruction LDRH not yet implemented."
	007 Subtract W0, W8, 48
	008 Move X30, [X31+16]
	009 Return X0
	010 Call 0x1C17F28

Method: System.Void SkipWhiteSpaces()

Disassembly:
	0x03376C94 MOV X0, X22
	0x03376C98 MOV X1, X21
	0x03376C9C BL 0x338BFD4
	0x03376CA0 TBNZ X0, 0x1F, 0x3376CC8
	0x03376CA4 MOVZ W8, 0x11
	0x03376CA8 ANDS W31, W20, W8, 0x0
	0x03376CAC B.EQ 0x3376CCC
	0x03376CB0 TBNZ X23, 0x1F, 0x3376D0C
	0x03376CB4 MOV X0, X22
	0x03376CB8 MOV X1, X21
	0x03376CBC MOV X2, X19
	0x03376CC0 BL 0x337715C
	0x03376CC4 B 0x3376CF4
	0x03376CC8 TBZ X20, 0x4, 0x3376CB0
	0x03376CCC ADRP X8, 0xDB4000
	0x03376CD0 LDR X8, [X8 + 0xD80]
	0x03376CD4 MOVZ W1, 0x2
	0x03376CD8 MOV X0, X19
	0x03376CDC MOV X3, X31
	0x03376CE0 LDR X2, [X8]
	0x03376CE4 MOV X4, X31
	0x03376CE8 MOV X5, X31
	0x03376CEC BL 0x3377D84
	0x03376CF0 MOV W0, W31
	0x03376CF4 LDP X20, X19, [X31 + 0x30]
	0x03376CF8 LDP X22, X21, [X31 + 0x20]
	0x03376CFC LDP X24, X23, [X31 + 0x10]
	0x03376D00 AND W0, W0, 0x1
	0x03376D04 LDP X30, X25, [X31], #0x40
	0x03376D08 RET
	0x03376D0C TBNZ X24, 0x1F, 0x3376D24
	0x03376D10 MOV X0, X22
	0x03376D14 MOV X1, X21
	0x03376D18 MOV X2, X19
	0x03376D1C BL 0x3377444
	0x03376D20 B 0x3376CF4
	0x03376D24 MOV X0, X22
	0x03376D28 MOV X1, X21
	0x03376D2C MOV X2, X19
	0x03376D30 BL 0x3377A80
	0x03376D34 B 0x3376CF4
	0x03376D38 B 0x3376D40
	0x03376D3C B 0x3376D40
	0x03376D40 MOV X20, X0
	0x03376D44 CMP W1, 0x1
	0x03376D48 B.NE 0x3376DE8
	0x03376D4C MOV X0, X20
	0x03376D50 BL 0x3EB1AD0
	0x03376D54 MOV X20, X0
	0x03376D58 ADRP X0, 0xD87000
	0x03376D5C LDR X0, [X0 + 0xF78]
	0x03376D60 BL 0x1C16D08
	0x03376D64 LDR X8, [X20]
	0x03376D68 LDR X1, [X8]
	0x03376D6C BL 0x1C17270
	0x03376D70 TBNZ X0, 0x0, 0x3376D90
	0x03376D74 ADRP X0, 0xD85000
	0x03376D78 LDR X0, [X0 + 0x578]
	0x03376D7C BL 0x1C16D08
	0x03376D80 LDR X8, [X20]
	0x03376D84 LDR X1, [X8]
	0x03376D88 BL 0x1C17270

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x1067000
	010 Move W8, [X20+3867]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xD80000
	017 Move X0, [X0+368]
	018 Call 0x1C17CF4
	019 Move X0, 0xDB3000
	020 Move X0, [X0+1264]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+3867], W8
	024 Move X22, 0xDB3000
	025 Move X23, 0xD80000
	026 Move X20, 0xDAD000
	027 Move X22, [X22+1264]
	028 Move X23, [X23+368]
	029 Move W21, [X19+16]
	030 Move X20, [X20+40]
	031 Move X24, 0x1067000
	032 Move W25, 1
	033 Move X0, [X22]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move W8, [X24+3852]
	039 Move TEMP, X8
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {46}
	043 Move X0, X20
	044 Call 0x1C17CF4
	045 Move [X24+3852], W25
	046 Move W9, [X19+8]
	047 Add W8, W21, 1
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move W8, [X19+16]
	050 Add W8, W8, 1
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X0, [X23]
	053 Move X9, [X19]
	054 Move W10, [X0+224]
	055 NotImplemented "Instruction LDRH not yet implemented."
	056 Compare W10, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move W0, W21
	060 Move X1, X31
	061 Call Char.IsWhiteSpace, X0
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {69}
	066 Move W8, [X19+16]
	067 Add W21, W8, 1
	068 Move [X19+16], W21
	069 Move X20, [X31+48]
	070 Move X19, [X31+56]
	071 Move X22, [X31+32]
	072 Move X21, [X31+40]
	073 Move X24, [X31+16]
	074 Move X23, [X31+24]
	075 Move X30, [X31+64]
	076 Move X25, [X31+72]
	077 Return 
	078 Call 0x1C17F28

Method: System.Boolean SkipWhiteSpaceCurrent()

Disassembly:
	0x03376094 LDR X3, [X8]
	0x03376098 MOV W8, W22
	0x0337609C STP X23, X8, [X31]
	0x033760A0 BL 0x25BEC30
	0x033760A4 ADRP X8, 0xDAB000
	0x033760A8 LDR X8, [X8 + 0x858]
	0x033760AC MOV X0, X21
	0x033760B0 MOV X1, X20
	0x033760B4 LDR X2, [X8]
	0x033760B8 BL 0x25FB81C
	0x033760BC STP X0, X1, [X19]
	0x033760C0 LDP X20, X19, [X31 + 0x40]
	0x033760C4 LDP X22, X21, [X31 + 0x30]
	0x033760C8 LDP X24, X23, [X31 + 0x20]
	0x033760CC LDR X30, [X31 + 0x10]
	0x033760D0 ADD X31, X31, 0x50
	0x033760D4 RET
	0x033760D8 BL 0x1C16F28
	0x033760DC SUB X31, X31, 0x70
	0x033760E0 STP X29, X30, [X31 + 0x10]
	0x033760E4 STP X28, X27, [X31 + 0x20]
	0x033760E8 STP X26, X25, [X31 + 0x30]
	0x033760EC STP X24, X23, [X31 + 0x40]
	0x033760F0 STP X22, X21, [X31 + 0x50]
	0x033760F4 STP X20, X19, [X31 + 0x60]
	0x033760F8 ADRP X20, 0x1066000
	0x033760FC ADRP X22, 0xDB2000
	0x03376100 LDRB W8, [X20 + 0xF1F]
	0x03376104 LDR X22, [X22 + 0x4F0]
	0x03376108 MOV X19, X0
	0x0337610C TBNZ X8, 0x0, 0x3376184
	0x03376110 ADRP X0, 0xD86000
	0x03376114 LDR X0, [X0 + 0x8D8]
	0x03376118 BL 0x1C16CF4
	0x0337611C ADRP X0, 0xD7F000
	0x03376120 LDR X0, [X0 + 0x170]
	0x03376124 BL 0x1C16CF4
	0x03376128 ADRP X0, 0xDAC000
	0x0337612C LDR X0, [X0 + 0x198]
	0x03376130 BL 0x1C16CF4
	0x03376134 ADRP X0, 0xDB1000
	0x03376138 LDR X0, [X0 + 0x7E8]
	0x0337613C BL 0x1C16CF4
	0x03376140 ADRP X0, 0xDAC000
	0x03376144 LDR X0, [X0 + 0x28]
	0x03376148 BL 0x1C16CF4
	0x0337614C ADRP X0, 0xDAC000
	0x03376150 LDR X0, [X0 + 0x1A8]
	0x03376154 BL 0x1C16CF4
	0x03376158 ADRP X0, 0xDAB000
	0x0337615C LDR X0, [X0 + 0x858]
	0x03376160 BL 0x1C16CF4
	0x03376164 ADRP X0, 0xDAC000
	0x03376168 LDR X0, [X0 + 0x2D0]
	0x0337616C BL 0x1C16CF4
	0x03376170 ADRP X0, 0xDB2000
	0x03376174 LDR X0, [X0 + 0x4F0]
	0x03376178 BL 0x1C16CF4
	0x0337617C MOVZ W8, 0x1
	0x03376180 STRB W8, [X20 + 0xF1F]
	0x03376184 LDR X0, [X22]
	0x03376188 STP X31, X31, [X31]
	0x0337618C LDR W8, [X0 + 0xE0]
	0x03376190 CBNZ W8, 0x3376198
	0x03376194 BL 0x1C16DFC
	0x03376198 ADRP X26, 0x1066000
	0x0337619C LDRB W8, [X26 + 0xF0C]
	0x033761A0 TBNZ X8, 0x0, 0x33761B8
	0x033761A4 ADRP X0, 0xDAC000
	0x033761A8 LDR X0, [X0 + 0x28]
	0x033761AC BL 0x1C16CF4
	0x033761B0 MOVZ W8, 0x1
	0x033761B4 STRB W8, [X26 + 0xF0C]
	0x033761B8 LDR W8, [X19 + 0x8]
	0x033761BC CMP W8, 0x3
	0x033761C0 B.LT 0x3376348
	0x033761C4 LDR X8, [X19]
	0x033761C8 LDRH W25, [X8]
	0x033761CC CMP W25, 0x27
	0x033761D0 B.EQ 0x33761DC
	0x033761D4 CMP W25, 0x22
	0x033761D8 B.NE 0x3376348
	0x033761DC ADRP X27, 0xD7F000
	0x033761E0 ADRP X20, 0xDAC000
	0x033761E4 LDR X27, [X27 + 0x170]
	0x033761E8 LDR X20, [X20 + 0x28]
	0x033761EC MOV X29, X31
	0x033761F0 MOVN X8, 0x1
	0x033761F4 MOVZ W28, 0x1
	0x033761F8 LDR X0, [X22]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x1067000
	011 Move X23, 0xDB3000
	012 Move W8, [X20+3868]
	013 Move X23, [X23+1264]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xD80000
	020 Move X0, [X0+368]
	021 Call 0x1C17CF4
	022 Move X0, 0xDB3000
	023 Move X0, [X0+1264]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+3868], W8
	027 Move X0, [X23]
	028 Move W20, [X19+16]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X24, 0x1067000
	034 Move W8, [X24+3852]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {44}
	039 Move X0, 0xDAD000
	040 Move X0, [X0+40]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X24+3852], W8
	044 Move W8, [X19+8]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X25, 0xD80000
	047 Move X25, [X25+368]
	048 NotImplemented "Instruction LDRH not yet implemented."
	049 Move X0, [X25]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move W0, W20
	055 Move X1, X31
	056 Call Char.IsWhiteSpace, X0
	057 Move W26, 1
	058 Move W21, 1
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {102}
	063 Move X20, 0xDAD000
	064 Move X20, [X20+40]
	065 Move W8, [X19+16]
	066 Add W21, W8, 1
	067 Move [X19+16], W21
	068 Move X0, [X23]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move W8, [X24+3852]
	074 Move TEMP, X8
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfEqual {81}
	078 Move X0, X20
	079 Call 0x1C17CF4
	080 Move [X24+3852], W26
	081 Move W8, [X19+8]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 NotImplemented "Instruction CSET not yet implemented."
	084 NotImplemented "Instruction LDRSW not yet implemented."
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X8, [X19]
	087 NotImplemented "Instruction LDRH not yet implemented."
	088 NotImplemented "Instruction STRH not yet implemented."
	089 Move X0, [X25]
	090 Move W8, [X0+224]
	091 Compare W8, 0
	092 JumpIfNotEqual {94}
	093 Call 0x1C17DFC
	094 Move W0, W22
	095 Move X1, X31
	096 Call Char.IsWhiteSpace, X0
	097 Move TEMP, X0
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfEqual {65}
	101 Move W21, W31
	102 Move W0, W21
	103 Move X20, [X31+64]
	104 Move X19, [X31+72]
	105 Move X22, [X31+48]
	106 Move X21, [X31+56]
	107 Move X24, [X31+32]
	108 Move X23, [X31+40]
	109 Move X26, [X31+16]
	110 Move X25, [X31+24]
	111 Move X30, [X31+80]
	112 Return X0
	113 Call 0x1C17F28

Method: System.Void TrimTail()

Disassembly:
	0x03376D8C TBZ X0, 0x0, 0x3376DC0
	0x03376D90 LDR X20, [X20]
	0x03376D94 BL 0x3EB1AE0
	0x03376D98 ADRP X0, 0xDB4000
	0x03376D9C LDR X0, [X0 + 0xD80]
	0x03376DA0 BL 0x1C16D08
	0x03376DA4 MOV X2, X0
	0x03376DA8 MOVZ W1, 0x5
	0x03376DAC MOV X0, X19
	0x03376DB0 MOV X3, X31
	0x03376DB4 MOV X4, X31
	0x03376DB8 MOV X5, X20
	0x03376DBC B 0x3376CEC
	0x03376DC0 MOVZ W0, 0x8
	0x03376DC4 BL 0x3EB1AF0
	0x03376DC8 LDR X8, [X20]
	0x03376DCC STR X8, [X0]
	0x03376DD0 ADRP X1, 0xB3E000
	0x03376DD4 ADD X1, X1, 0xE58
	0x03376DD8 MOV X2, X31
	0x03376DDC BL 0x3EB1B00
	0x03376DE0 MOV X20, X0
	0x03376DE4 BL 0x3EB1AE0
	0x03376DE8 MOV X0, X20
	0x03376DEC BL 0x1D2C690
	0x03376DF0 BL 0x1990590
	0x03376DF4 STP X30, X21, [X31 - 0x20]!
	0x03376DF8 STP X20, X19, [X31 + 0x10]
	0x03376DFC ADRP X20, 0x1066000
	0x03376E00 LDRB W8, [X20 + 0xF35]
	0x03376E04 MOV X19, X0
	0x03376E08 TBNZ X8, 0x0, 0x3376E38
	0x03376E0C ADRP X0, 0xD82000
	0x03376E10 LDR X0, [X0 + 0x528]
	0x03376E14 BL 0x1C16CF4
	0x03376E18 ADRP X0, 0xDAA000
	0x03376E1C LDR X0, [X0 + 0xC08]
	0x03376E20 BL 0x1C16CF4
	0x03376E24 ADRP X0, 0xDB4000
	0x03376E28 LDR X0, [X0 + 0xD80]
	0x03376E2C BL 0x1C16CF4
	0x03376E30 MOVZ W8, 0x1
	0x03376E34 STRB W8, [X20 + 0xF35]
	0x03376E38 LDR W8, [X19 + 0x14]
	0x03376E3C SUB W8, W8, 0x1
	0x03376E40 CMP W8, 0x4
	0x03376E44 B.HI 0x3376EA0
	0x03376E48 ADRP X9, 0xFFFFFFFFFD820000
	0x03376E4C ADD X9, X9, 0x7E8
	0x03376E50 ADR X10, 0x10
	0x03376E54 LDRB W11, [X9, X8, LSL]
	0x03376E58 ADD X10, X10, X11, 0x2, LSL
	0x03376E5C BR X10
	0x03376E60 LDR X0, [X19 + 0x18]
	0x03376E64 LDR X20, [X19 + 0x28]
	0x03376E68 MOV X1, X31
	0x03376E6C BL 0x320A364
	0x03376E70 ADRP X8, 0xD82000
	0x03376E74 LDR X8, [X8 + 0x528]
	0x03376E78 MOV X21, X0
	0x03376E7C LDR X8, [X8]
	0x03376E80 MOV X0, X8
	0x03376E84 BL 0x1C16F10
	0x03376E88 MOV X1, X20
	0x03376E8C MOV X2, X21
	0x03376E90 MOV X3, X31
	0x03376E94 MOV X19, X0
	0x03376E98 BL 0x3315F7C
	0x03376E9C B 0x3376F5C
	0x03376EA0 ADRP X8, 0xDAA000
	0x03376EA4 LDR X8, [X8 + 0xC08]
	0x03376EA8 LDR X0, [X8]
	0x03376EAC BL 0x1C16F10

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x1067000
	009 Move X21, 0xDB3000
	010 Move W8, [X20+3869]
	011 Move X21, [X21+1264]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0xD80000
	018 Move X0, [X0+368]
	019 Call 0x1C17CF4
	020 Move X0, 0xDB1000
	021 Move X0, [X0+3472]
	022 Call 0x1C17CF4
	023 Move X0, 0xDB3000
	024 Move X0, [X0+1264]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+3869], W8
	028 Move X0, [X21]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X20, 0x1067000
	034 Move W8, [X20+3852]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {44}
	039 Move X0, 0xDAD000
	040 Move X0, [X0+40]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X20+3852], W8
	044 Move X23, 0xD80000
	045 Move X22, 0xDB1000
	046 Move W24, [X19+8]
	047 Move X23, [X23+368]
	048 Move X22, [X22+3472]
	049 Move W21, W24
	050 Subtract W24, W24, 1
	051 Move W8, [X19+8]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X0, [X23]
	054 Move X8, [X19]
	055 Move W9, [X0+224]
	056 NotImplemented "Instruction LDRH not yet implemented."
	057 Compare W9, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move W0, W20
	061 Move X1, X31
	062 Call Char.IsWhiteSpace, X0
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfEqual {49}
	067 Move W8, [X19+8]
	068 Move X20, [X22]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X0, X31
	071 Call ThrowHelper.ThrowArgumentOutOfRangeException
	072 Move X0, [X20+32]
	073 Move X20, [X19]
	074 Move W8, [X0+309]
	075 Move TEMP, X8
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfEqual {80}
	079 Call 0x1C5D684
	080 Move W8, W21
	081 Move [X19], X20
	082 Move [X19+8], X8
	083 Move X20, [X31+48]
	084 Move X19, [X31+56]
	085 Move X22, [X31+32]
	086 Move X21, [X31+40]
	087 Move X24, [X31+16]
	088 Move X23, [X31+24]
	089 Move X30, [X31+64]
	090 Return 
	091 Call 0x1C17F28

Method: System.Void RemoveTrailingInQuoteSpaces()

Disassembly:
	0x03376EB0 ADRP X8, 0xDB4000
	0x03376EB4 LDR X8, [X8 + 0xD80]
	0x03376EB8 MOV X19, X0
	0x03376EBC LDR X1, [X8]
	0x03376EC0 B 0x3376F0C
	0x03376EC4 LDR X0, [X19 + 0x18]
	0x03376EC8 MOV X1, X31
	0x03376ECC BL 0x320A364
	0x03376ED0 B 0x3376EEC
	0x03376ED4 LDR X0, [X19 + 0x18]
	0x03376ED8 MOV X1, X31
	0x03376EDC BL 0x320A364
	0x03376EE0 LDR X1, [X19 + 0x20]
	0x03376EE4 MOV X2, X31
	0x03376EE8 BL 0x32094D4
	0x03376EEC ADRP X8, 0xDAA000
	0x03376EF0 LDR X8, [X8 + 0xC08]
	0x03376EF4 MOV X20, X0
	0x03376EF8 LDR X8, [X8]
	0x03376EFC MOV X0, X8
	0x03376F00 BL 0x1C16F10
	0x03376F04 MOV X19, X0
	0x03376F08 MOV X1, X20
	0x03376F0C MOV X2, X31
	0x03376F10 BL 0x33674A0
	0x03376F14 B 0x3376F5C
	0x03376F18 LDR X19, [X19 + 0x30]
	0x03376F1C B 0x3376F5C
	0x03376F20 LDR X0, [X19 + 0x18]
	0x03376F24 MOV X1, X31
	0x03376F28 BL 0x320A364
	0x03376F2C ADRP X8, 0xDAA000
	0x03376F30 LDR X20, [X19 + 0x30]
	0x03376F34 LDR X8, [X8 + 0xC08]
	0x03376F38 MOV X21, X0
	0x03376F3C LDR X8, [X8]
	0x03376F40 MOV X0, X8
	0x03376F44 BL 0x1C16F10
	0x03376F48 MOV X1, X21
	0x03376F4C MOV X2, X20
	0x03376F50 MOV X3, X31
	0x03376F54 MOV X19, X0
	0x03376F58 BL 0x33674C4
	0x03376F5C MOV X0, X19
	0x03376F60 LDP X20, X19, [X31 + 0x10]
	0x03376F64 LDP X30, X21, [X31], #0x20
	0x03376F68 RET
	0x03376F6C STR X30, [X31 - 0x20]!
	0x03376F70 STP X20, X19, [X31 + 0x10]
	0x03376F74 CBZ X0, 0x3376FB8
	0x03376F78 ADRP X20, 0x1063000
	0x03376F7C LDRB W8, [X20 + 0x762]
	0x03376F80 MOV X19, X0
	0x03376F84 CBNZ W8, 0x3376F9C
	0x03376F88 ADRP X0, 0xDA4000
	0x03376F8C LDR X0, [X0 + 0x290]
	0x03376F90 BL 0x1C16CF4
	0x03376F94 MOVZ W8, 0x1
	0x03376F98 STRB W8, [X20 + 0x762]
	0x03376F9C MOV X0, X19
	0x03376FA0 MOV X1, X31
	0x03376FA4 BL 0x3225708
	0x03376FA8 LDR W1, [X19 + 0x10]
	0x03376FAC LDP X20, X19, [X31 + 0x10]
	0x03376FB0 LDR X30, [X31], #0x20
	0x03376FB4 B 0x3377000
	0x03376FB8 ADRP X0, 0xD82000
	0x03376FBC LDR X0, [X0 + 0x528]
	0x03376FC0 BL 0x1C16D08
	0x03376FC4 BL 0x1C16F10
	0x03376FC8 MOV X19, X0
	0x03376FCC ADRP X0, 0xDB1000
	0x03376FD0 LDR X0, [X0 + 0x348]
	0x03376FD4 BL 0x1C16D08
	0x03376FD8 MOV X1, X0
	0x03376FDC MOV X0, X19
	0x03376FE0 MOV X2, X31
	0x03376FE4 BL 0x330E100
	0x03376FE8 ADRP X0, 0xDB4000
	0x03376FEC LDR X0, [X0 + 0xD88]
	0x03376FF0 BL 0x1C16D08
	0x03376FF4 MOV X1, X0
	0x03376FF8 MOV X0, X19
	0x03376FFC BL 0x1C16DEC
	0x03377000 SUB X31, X31, 0x50
	0x03377004 STP X30, X19, [X31 + 0x40]
	0x03377008 MOVI V0.2D, 0x0
	0x0337700C MOVZ W8, 0x2
	0x03377010 ADD X3, X31, 0x0
	0x03377014 MOVZ W2, 0xF
	0x03377018 STR X31, [X31 + 0x30]
	0x0337701C STP V0, V0, [X31 + 0x10]
	0x03377020 STR V0, [X31]
	0x03377024 STR W8, [X31 + 0x10]
	0x03377028 BL 0x3376BB4
	0x0337702C TBZ X0, 0x0, 0x3377040
	0x03377030 LDP X0, X1, [X31]
	0x03377034 LDP X30, X19, [X31 + 0x40]
	0x03377038 ADD X31, X31, 0x50
	0x0337703C RET
	0x03377040 ADD X0, X31, 0x0
	0x03377044 BL 0x3376DF4
	0x03377048 MOV X19, X0
	0x0337704C ADRP X0, 0xDB3000
	0x03377050 LDR X0, [X0 + 0xD90]
	0x03377054 BL 0x1C16D08
	0x03377058 MOV X1, X0
	0x0337705C MOV X0, X19
	0x03377060 BL 0x1C16DEC
	0x03377064 SUB X31, X31, 0x60
	0x03377068 STP X30, X21, [X31 + 0x40]
	0x0337706C STP X20, X19, [X31 + 0x50]
	0x03377070 MOV X19, X1
	0x03377074 CBZ X0, 0x33770D8
	0x03377078 ADRP X21, 0x1062000
	0x0337707C LDRB W8, [X21 + 0x762]
	0x03377080 MOV X20, X0
	0x03377084 CBNZ W8, 0x337709C
	0x03377088 ADRP X0, 0xDA3000
	0x0337708C LDR X0, [X0 + 0x290]
	0x03377090 BL 0x1C16CF4
	0x03377094 MOVZ W8, 0x1
	0x03377098 STRB W8, [X21 + 0x762]
	0x0337709C MOV X0, X20
	0x033770A0 MOV X1, X31
	0x033770A4 BL 0x3225708
	0x033770A8 LDR W1, [X20 + 0x10]
	0x033770AC MOVI V0.2D, 0x0
	0x033770B0 ADD X3, X31, 0x0
	0x033770B4 MOVZ W2, 0xF
	0x033770B8 STR X31, [X31 + 0x30]
	0x033770BC STP V0, V0, [X31 + 0x10]
	0x033770C0 STR V0, [X31]
	0x033770C4 BL 0x3376BB4
	0x033770C8 TBZ X0, 0x0, 0x33770D8
	0x033770CC LDR V0, [X31]
	0x033770D0 STR V0, [X19]
	0x033770D4 B 0x33770DC
	0x033770D8 STP X31, X31, [X19]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X21, 0x1067000
	010 Move X20, 0xDB3000
	011 Move W8, [X21+3870]
	012 Move X20, [X20+1264]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {41}
	018 Move X0, 0xD87000
	019 Move X0, [X0+2264]
	020 Call 0x1C17CF4
	021 Move X0, 0xD80000
	022 Move X0, [X0+368]
	023 Call 0x1C17CF4
	024 Move X0, 0xDAD000
	025 Move X0, [X0+408]
	026 Call 0x1C17CF4
	027 Move X0, 0xDB1000
	028 Move X0, [X0+3472]
	029 Call 0x1C17CF4
	030 Move X0, 0xDAC000
	031 Move X0, [X0+2136]
	032 Call 0x1C17CF4
	033 Move X0, 0xDAD000
	034 Move X0, [X0+720]
	035 Call 0x1C17CF4
	036 Move X0, 0xDB3000
	037 Move X0, [X0+1264]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X21+3870], W8
	041 Move X0, [X20]
	042 Move [X31], X31
	043 Move [X31+8], X31
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X20, 0x1067000
	049 Move W8, [X20+3852]
	050 Move TEMP, X8
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {59}
	054 Move X0, 0xDAD000
	055 Move X0, [X0+40]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X20+3852], W8
	059 Move W8, [X19+8]
	060 Subtract W22, W8, 1
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X9, [X19]
	063 NotImplemented "Instruction LDRH not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X21, 0xD80000
	067 Move X21, [X21+368]
	068 Subtract W24, W8, 2
	069 NotImplemented "Instruction LDRH not yet implemented."
	070 Move X0, [X21]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Move W0, W20
	076 Move X1, X31
	077 Call Char.IsWhiteSpace, X0
	078 Move TEMP, X0
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfNotEqual {149}
	082 Subtract X24, X24, 1
	083 Subtract W22, W22, 1
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move W8, [X19+8]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X0, [X21]
	088 Move X8, [X19]
	089 Move W9, [X0+224]
	090 NotImplemented "Instruction LDRH not yet implemented."
	091 Compare W9, 0
	092 JumpIfNotEqual {94}
	093 Call 0x1C17DFC
	094 Move W0, W20
	095 Move X1, X31
	096 Call Char.IsWhiteSpace, X0
	097 Subtract X24, X24, 1
	098 Move TEMP, X0
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfEqual {83}
	102 Move W22, W31
	103 Move X8, 0xD86000
	104 Move X8, [X8+2264]
	105 Add W1, W22, 1
	106 Move X0, [X8]
	107 Call 0x1C17D6C
	108 Move X8, 0xDAC000
	109 Move X8, [X8+720]
	110 Move X1, [X8]
	111 Call Span`1<Char>.op_Implicit, X0
	112 Move X20, X1
	113 NotImplemented "Instruction CMP not yet implemented."
	114 NotImplemented "Instruction STRH not yet implemented."
	115 Move X9, 0xDB0000
	116 Move W8, [X19+8]
	117 Move X9, [X9+3472]
	118 Move X21, X0
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move X23, [X9]
	121 Move X0, X31
	122 Call ThrowHelper.ThrowArgumentOutOfRangeException
	123 Move X0, [X23+32]
	124 Move X23, [X19]
	125 Move W8, [X0+309]
	126 Move TEMP, X8
	127 And TEMP, TEMP, 1
	128 Compare TEMP, 1
	129 JumpIfEqual {131}
	130 Call 0x1C5D684
	131 Move X8, 0xDAC000
	132 Move X8, [X8+408]
	133 Add X0, X31, 0
	134 Move X1, X21
	135 Move X2, X20
	136 Move X3, [X8]
	137 Move W8, W22
	138 Move [X31], X23
	139 Move [X31+8], X8
	140 Call ReadOnlySpan`1<Char>.CopyTo, X0, X1
	141 Move X8, 0xDAB000
	142 Move X8, [X8+2136]
	143 Move X0, X21
	144 Move X1, X20
	145 Move X2, [X8]
	146 Call Span`1<Char>.op_Implicit, X0
	147 Move [X19], X0
	148 Move [X19+8], X1
	149 Move X20, [X31+64]
	150 Move X19, [X31+72]
	151 Move X22, [X31+48]
	152 Move X21, [X31+56]
	153 Move X24, [X31+32]
	154 Move X23, [X31+40]
	155 Move X30, [X31+16]
	156 Add X31, X31, 80
	157 Return 
	158 Call 0x1C17F28

Method: System.Void RemoveLeadingInQuoteSpaces()

Disassembly:
	0x033770DC LDP X20, X19, [X31 + 0x50]
	0x033770E0 LDP X30, X21, [X31 + 0x40]
	0x033770E4 AND W0, W0, 0x1
	0x033770E8 ADD X31, X31, 0x60
	0x033770EC RET
	0x033770F0 SUB X31, X31, 0x50
	0x033770F4 STP X30, X19, [X31 + 0x40]
	0x033770F8 MOV X19, X2
	0x033770FC MOVI V0.2D, 0x0
	0x03377100 ADD X3, X31, 0x0
	0x03377104 MOVZ W2, 0xF
	0x03377108 STR X31, [X31 + 0x30]
	0x0337710C STP V0, V0, [X31 + 0x10]
	0x03377110 STR V0, [X31]
	0x03377114 BL 0x3376BB4
	0x03377118 TBZ X0, 0x0, 0x3377128
	0x0337711C LDR V0, [X31]
	0x03377120 STR V0, [X19]
	0x03377124 B 0x337712C
	0x03377128 STP X31, X31, [X19]
	0x0337712C LDP X30, X19, [X31 + 0x40]
	0x03377130 AND W0, W0, 0x1
	0x03377134 ADD X31, X31, 0x50
	0x03377138 RET
	0x0337713C STR X30, [X31 - 0x10]!
	0x03377140 BL 0x337FDBC
	0x03377144 LDR X30, [X31], #0x10
	0x03377148 B 0x337FEB0
	0x0337714C MOV X3, X31
	0x03377150 MOV X4, X31
	0x03377154 MOV X5, X31
	0x03377158 B 0x3377D84
	0x0337715C SUB X31, X31, 0x40
	0x03377160 STR X30, [X31 + 0x10]
	0x03377164 STP X22, X21, [X31 + 0x20]
	0x03377168 STP X20, X19, [X31 + 0x30]
	0x0337716C ADRP X22, 0x1065000
	0x03377170 LDRB W8, [X22 + 0xF2B]
	0x03377174 MOV X19, X2
	0x03377178 MOV X20, X1
	0x0337717C MOV X21, X0
	0x03377180 TBNZ X8, 0x0, 0x33771B0
	0x03377184 ADRP X0, 0xDAB000
	0x03377188 LDR X0, [X0 + 0x28]
	0x0337718C BL 0x1C16CF4
	0x03377190 ADRP X0, 0xDB3000
	0x03377194 LDR X0, [X0 + 0xD98]
	0x03377198 BL 0x1C16CF4
	0x0337719C ADRP X0, 0xDB3000
	0x033771A0 LDR X0, [X0 + 0xDA0]
	0x033771A4 BL 0x1C16CF4
	0x033771A8 MOVZ W8, 0x1
	0x033771AC STRB W8, [X22 + 0xF2B]
	0x033771B0 STR W31, [X31 + 0x1C]
	0x033771B4 STR X31, [X31 + 0x8]
	0x033771B8 CBZ W20, 0x3377440
	0x033771BC LDRH W8, [X21]
	0x033771C0 CMP W8, 0x28
	0x033771C4 B.EQ 0x33771E8
	0x033771C8 CMP W8, 0x7B
	0x033771CC B.NE 0x3377204
	0x033771D0 CMP W20, 0x26
	0x033771D4 B.NE 0x33773F8
	0x033771D8 LDRH W8, [X21 + 0x4A]
	0x033771DC CMP W8, 0x7D
	0x033771E0 B.EQ 0x33771FC
	0x033771E4 B 0x33773F8
	0x033771E8 CMP W20, 0x26
	0x033771EC B.NE 0x33773F8
	0x033771F0 LDRH W8, [X21 + 0x4A]
	0x033771F4 CMP W8, 0x29
	0x033771F8 B.NE 0x33773F8
	0x033771FC MOVZ W8, 0x1
	0x03377200 B 0x3377210
	0x03377204 CMP W20, 0x24
	0x03377208 B.NE 0x33773F8
	0x0337720C MOV W8, W31
	0x03377210 ORR W9, W8, 0x8
	0x03377214 CMP W9, W20
	0x03377218 B.CS 0x3377440
	0x0337721C LDRH W9, [X21, W9, UXTW]
	0x03377220 CMP W9, 0x2D
	0x03377224 B.NE 0x3377404
	0x03377228 ADD W9, W8, 0xD
	0x0337722C CMP W9, W20
	0x03377230 B.CS 0x3377440
	0x03377234 LDRH W9, [X21, W9, UXTW]
	0x03377238 CMP W9, 0x2D
	0x0337723C B.NE 0x3377404
	0x03377240 MOVZ W9, 0x12
	0x03377244 ORR W9, W8, W9, 0x0
	0x03377248 CMP W9, W20
	0x0337724C B.CS 0x3377440
	0x03377250 LDRH W9, [X21, W9, UXTW]
	0x03377254 CMP W9, 0x2D
	0x03377258 B.NE 0x3377404
	0x0337725C ADD W9, W8, 0x17
	0x03377260 CMP W9, W20
	0x03377264 B.CS 0x3377440
	0x03377268 LDRH W9, [X21, W9, UXTW]
	0x0337726C CMP W9, 0x2D
	0x03377270 B.NE 0x3377404
	0x03377274 ADD X2, X31, 0x18
	0x03377278 ADD X5, X31, 0x1C
	0x0337727C MOVZ W3, 0x8
	0x03377280 MOVZ W4, 0x2000
	0x03377284 MOV X0, X21
	0x03377288 MOV X1, X20
	0x0337728C MOV X6, X19
	0x03377290 STR W8, [X31 + 0x18]
	0x03377294 BL 0x3378294
	0x03377298 TBZ X0, 0x0, 0x3377428
	0x0337729C LDR W8, [X31 + 0x1C]
	0x033772A0 ADD X2, X31, 0x18
	0x033772A4 ADD X5, X31, 0x1C
	0x033772A8 MOVZ W3, 0x4
	0x033772AC STR W8, [X19]
	0x033772B0 LDR W8, [X31 + 0x18]
	0x033772B4 MOVZ W4, 0x2000
	0x033772B8 MOV X0, X21
	0x033772BC MOV X1, X20
	0x033772C0 ADD W8, W8, 0x1
	0x033772C4 MOV X6, X19
	0x033772C8 STR W8, [X31 + 0x18]
	0x033772CC BL 0x3378294
	0x033772D0 TBZ X0, 0x0, 0x3377428
	0x033772D4 LDR W8, [X31 + 0x1C]
	0x033772D8 ADD X2, X31, 0x18
	0x033772DC ADD X5, X31, 0x1C
	0x033772E0 MOVZ W3, 0x4
	0x033772E4 STRH W8, [X19 + 0x4]
	0x033772E8 LDR W8, [X31 + 0x18]
	0x033772EC MOVZ W4, 0x2000
	0x033772F0 MOV X0, X21
	0x033772F4 MOV X1, X20
	0x033772F8 ADD W8, W8, 0x1
	0x033772FC MOV X6, X19
	0x03377300 STR W8, [X31 + 0x18]
	0x03377304 BL 0x3378294
	0x03377308 TBZ X0, 0x0, 0x3377428
	0x0337730C LDR W8, [X31 + 0x1C]
	0x03377310 ADD X2, X31, 0x18
	0x03377314 ADD X5, X31, 0x1C
	0x03377318 MOVZ W3, 0x4
	0x0337731C STRH W8, [X19 + 0x6]
	0x03377320 LDR W8, [X31 + 0x18]
	0x03377324 MOVZ W4, 0x2000
	0x03377328 MOV X0, X21
	0x0337732C MOV X1, X20
	0x03377330 ADD W8, W8, 0x1
	0x03377334 MOV X6, X19
	0x03377338 STR W8, [X31 + 0x18]
	0x0337733C BL 0x3378294
	0x03377340 TBZ X0, 0x0, 0x3377428
	0x03377344 LDR W8, [X31 + 0x18]
	0x03377348 ADD X2, X31, 0x18
	0x0337734C ADD X4, X31, 0x8
	0x03377350 MOVZ W3, 0x2000
	0x03377354 ADD W22, W8, 0x1
	0x03377358 MOV X0, X21
	0x0337735C MOV X1, X20
	0x03377360 MOV X5, X19
	0x03377364 STR W22, [X31 + 0x18]
	0x03377368 BL 0x3378144

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X20, 0x1066000
	015 Move X22, 0xDB2000
	016 Move W8, [X20+3871]
	017 Move X22, [X22+1264]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {52}
	023 Move X0, 0xD86000
	024 Move X0, [X0+2264]
	025 Call 0x1C17CF4
	026 Move X0, 0xD7F000
	027 Move X0, [X0+368]
	028 Call 0x1C17CF4
	029 Move X0, 0xDAC000
	030 Move X0, [X0+408]
	031 Call 0x1C17CF4
	032 Move X0, 0xDB1000
	033 Move X0, [X0+2024]
	034 Call 0x1C17CF4
	035 Move X0, 0xDAC000
	036 Move X0, [X0+40]
	037 Call 0x1C17CF4
	038 Move X0, 0xDAC000
	039 Move X0, [X0+424]
	040 Call 0x1C17CF4
	041 Move X0, 0xDAB000
	042 Move X0, [X0+2136]
	043 Call 0x1C17CF4
	044 Move X0, 0xDAC000
	045 Move X0, [X0+720]
	046 Call 0x1C17CF4
	047 Move X0, 0xDB2000
	048 Move X0, [X0+1264]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X20+3871], W8
	052 Move X0, [X22]
	053 Move [X31], X31
	054 Move [X31+8], X31
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move X26, 0x1066000
	060 Move W8, [X26+3852]
	061 Move TEMP, X8
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfEqual {70}
	065 Move X0, 0xDAC000
	066 Move X0, [X0+40]
	067 Call 0x1C17CF4
	068 Move W8, 1
	069 Move [X26+3852], W8
	070 Move W8, [X19+8]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X8, [X19]
	073 NotImplemented "Instruction LDRH not yet implemented."
	074 NotImplemented "Instruction CMP not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X27, 0xD7F000
	077 Move X20, 0xDAC000
	078 Move X27, [X27+368]
	079 Move X20, [X20+40]
	080 Move X29, X31
	081 Move TEMP, 1
	082 Not TEMP
	083 Move X8, TEMP
	084 Move W28, 1
	085 Move X0, [X22]
	086 Move X24, X29
	087 Move X23, X8
	088 Move W9, [X0+224]
	089 Compare W9, 0
	090 JumpIfNotEqual {92}
	091 Call 0x1C17DFC
	092 Move W8, [X26+3852]
	093 Move TEMP, X8
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfEqual {100}
	097 Move X0, X20
	098 Call 0x1C17CF4
	099 Move [X26+3852], W28
	100 NotImplemented "Instruction LDRSW not yet implemented."
	101 Add X29, X24, 1
	102 NotImplemented "Instruction CMP not yet implemented."
	103 And X8, X8, 0
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X8, [X19]
	106 Move X0, [X27]
	107 Add X8, X8, X24
	108 Move W9, [X0+224]
	109 NotImplemented "Instruction LDRH not yet implemented."
	110 Compare W9, 0
	111 JumpIfNotEqual {113}
	112 Call 0x1C17DFC
	113 Move W0, W21
	114 Move X1, X31
	115 Call Char.IsWhiteSpace, X0
	116 Subtract X8, X23, 2
	117 Move TEMP, X0
	118 And TEMP, TEMP, 1
	119 Compare TEMP, 1
	120 JumpIfEqual {85}
	121 Compare W24, 0
	122 JumpIfEqual {184}
	123 Move X8, 0xD86000
	124 Move X8, [X8+2264]
	125 Move W9, [X19+8]
	126 Move X0, [X8]
	127 Subtract W1, W9, W24
	128 Call 0x1C17D6C
	129 Move X8, 0xDAC000
	130 Move X8, [X8+720]
	131 Move X1, [X8]
	132 Call Span`1<Char>.op_Implicit, X0
	133 Move X21, X1
	134 Compare W21, 0
	135 JumpIfEqual {198}
	136 NotImplemented "Instruction STRH not yet implemented."
	137 Move X8, 0xDB1000
	138 Move W22, [X19+8]
	139 Move X8, [X8+2024]
	140 Move X20, X0
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move X25, [X8]
	143 Move X0, X31
	144 Call ThrowHelper.ThrowArgumentOutOfRangeException
	145 Move W22, [X19+8]
	146 Move X0, [X25+32]
	147 Move X25, [X19]
	148 Move W8, [X0+309]
	149 Move TEMP, X8
	150 And TEMP, TEMP, 1
	151 Compare TEMP, 1
	152 JumpIfEqual {154}
	153 Call 0x1C5D684
	154 Move X9, 0xDAC000
	155 Move X9, [X9+424]
	156 NotImplemented "Instruction ORN not yet implemented."
	157 Add W8, W8, W22
	158 Subtract X10, X25, X23
	159 Move X9, [X9]
	160 Move [X31], X10
	161 Move [X31+8], X8
	162 Move X0, [X9+32]
	163 Move W8, [X0+309]
	164 Move TEMP, X8
	165 And TEMP, TEMP, 1
	166 Compare TEMP, 1
	167 JumpIfEqual {169}
	168 Call 0x1C5D684
	169 Move X8, 0xDAC000
	170 Move X8, [X8+408]
	171 Subtract W2, W21, 1
	172 Add X1, X20, 2
	173 Add X0, X31, 0
	174 Move X3, [X8]
	175 Call ReadOnlySpan`1<Char>.CopyTo, X0, X1
	176 Move X8, 0xDAB000
	177 Move X8, [X8+2136]
	178 Move X0, X20
	179 Move X1, X21
	180 Move X2, [X8]
	181 Call Span`1<Char>.op_Implicit, X0
	182 Move [X19], X0
	183 Move [X19+8], X1
	184 Move X20, [X31+96]
	185 Move X19, [X31+104]
	186 Move X22, [X31+80]
	187 Move X21, [X31+88]
	188 Move X24, [X31+64]
	189 Move X23, [X31+72]
	190 Move X26, [X31+48]
	191 Move X25, [X31+56]
	192 Move X28, [X31+32]
	193 Move X27, [X31+40]
	194 Move X29, [X31+16]
	195 Move X30, [X31+24]
	196 Add X31, X31, 112
	197 Return 
	198 Call 0x1C17F28

Method: System.DTSubString GetSubString()

Disassembly:
	0x0337736C TBZ X0, 0x0, 0x3377428
	0x03377370 LDR W8, [X31 + 0x18]
	0x03377374 SUB W8, W8, W22
	0x03377378 CMP W8, 0xC
	0x0337737C B.NE 0x33773F8
	0x03377380 LDRH W8, [X31 + 0x1C]
	0x03377384 ADRP X9, 0xFFFFFFFFFD775000
	0x03377388 ADRP X10, 0xFFFFFFFFFD774000
	0x0337738C LDR V0, [X9 + 0x1C]
	0x03377390 REV W8, W8
	0x03377394 UBFM W8, W8, 0x10, 0x1F
	0x03377398 STRH W8, [X19 + 0x8]
	0x0337739C LDR X8, [X31 + 0x8]
	0x033773A0 LDR V1, [X10 + 0x11]
	0x033773A4 UNIMPLEMENTED
	0x033773A8 MOVZ W0, 0x1
	0x033773AC UNIMPLEMENTED
	0x033773B0 UNIMPLEMENTED
	0x00000000 INVALID
	0x00000000 INVALID
	0x033773BC UNIMPLEMENTED
	0x033773C0 UBFM X9, X8, 0x8, 0x3F
	0x033773C4 UNIMPLEMENTED
	0x033773C8 UNIMPLEMENTED
	0x033773CC STR W8, [X31 + 0x1C]
	0x033773D0 STRB W9, [X19 + 0xE]
	0x033773D4 FMOV W9, S1
	0x033773D8 UNIMPLEMENTED
	0x033773DC STRB W8, [X19 + 0xF]
	0x033773E0 UNIMPLEMENTED
	0x033773E4 UNIMPLEMENTED
	0x033773E8 UNIMPLEMENTED
	0x033773EC UNIMPLEMENTED
	0x033773F0 STUR S0, [X19 + 0xA]
	0x033773F4 B 0x337742C
	0x033773F8 ADRP X8, 0xDB3000
	0x033773FC LDR X8, [X8 + 0xDA0]
	0x03377400 B 0x337740C
	0x03377404 ADRP X8, 0xDB3000
	0x03377408 LDR X8, [X8 + 0xD98]
	0x0337740C LDR X2, [X8]
	0x03377410 MOVZ W1, 0x2
	0x03377414 MOV X0, X19
	0x03377418 MOV X3, X31
	0x0337741C MOV X4, X31
	0x03377420 MOV X5, X31
	0x03377424 BL 0x3377D84
	0x03377428 MOV W0, W31
	0x0337742C LDP X20, X19, [X31 + 0x30]
	0x03377430 LDP X22, X21, [X31 + 0x20]
	0x03377434 LDR X30, [X31 + 0x10]
	0x03377438 ADD X31, X31, 0x40
	0x0337743C RET
	0x03377440 BL 0x1C16F28
	0x03377444 STP X29, X30, [X31 - 0x60]!
	0x03377448 STP X28, X27, [X31 + 0x10]
	0x0337744C STP X26, X25, [X31 + 0x20]
	0x03377450 STP X24, X23, [X31 + 0x30]
	0x03377454 STP X22, X21, [X31 + 0x40]
	0x03377458 STP X20, X19, [X31 + 0x50]
	0x0337745C ADD X29, X31, 0x0
	0x03377460 SUB X31, X31, 0x20
	0x03377464 ADRP X22, 0x1065000
	0x03377468 LDRB W8, [X22 + 0xF29]
	0x0337746C MOV X19, X2
	0x03377470 MOV X20, X1
	0x03377474 MOV X21, X0
	0x03377478 TBNZ X8, 0x0, 0x3377550
	0x0337747C ADRP X0, 0xDB3000
	0x03377480 LDR X0, [X0 + 0xD78]
	0x03377484 BL 0x1C16CF4
	0x03377488 ADRP X0, 0xDB0000
	0x0337748C LDR X0, [X0 + 0x7E8]
	0x03377490 BL 0x1C16CF4
	0x03377494 ADRP X0, 0xDAF000
	0x03377498 LDR X0, [X0 + 0xD90]
	0x0337749C BL 0x1C16CF4
	0x033774A0 ADRP X0, 0xDAB000
	0x033774A4 LDR X0, [X0 + 0x28]
	0x033774A8 BL 0x1C16CF4
	0x033774AC ADRP X0, 0xDAA000
	0x033774B0 LDR X0, [X0 + 0x838]
	0x033774B4 BL 0x1C16CF4
	0x033774B8 ADRP X0, 0xDAB000
	0x033774BC LDR X0, [X0 + 0x928]
	0x033774C0 BL 0x1C16CF4
	0x033774C4 ADRP X0, 0xDB3000
	0x033774C8 LDR X0, [X0 + 0xDA8]
	0x033774CC BL 0x1C16CF4
	0x033774D0 ADRP X0, 0xDB3000
	0x033774D4 LDR X0, [X0 + 0xDB0]
	0x033774D8 BL 0x1C16CF4
	0x033774DC ADRP X0, 0xDB3000
	0x033774E0 LDR X0, [X0 + 0xDB8]
	0x033774E4 BL 0x1C16CF4
	0x033774E8 ADRP X0, 0xDB3000

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X21, 0x1066000
	015 Move W9, [X21+3872]
	016 Move X20, X0
	017 Move X19, X8
	018 Move TEMP, X9
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0xDB2000
	023 Move X0, [X0+1264]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+3872], W8
	027 Move X26, 0xDB2000
	028 Move X26, [X26+1264]
	029 Move W21, [X20+16]
	030 Move V0, [X20]
	031 Move W25, W31
	032 Move W24, W31
	033 Move W22, W31
	034 Move X27, 0x1066000
	035 Move W28, 10
	036 Move W29, 2
	037 Move W23, 4
	038 Move [X31+1], V0
	039 Move [X31+12], W21
	040 Move X0, [X26]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move W8, [X27+3852]
	046 Move TEMP, X8
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {55}
	050 Move X0, 0xDAC000
	051 Move X0, [X0+40]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X27+3852], W8
	055 Move W8, [X20+8]
	056 Add W9, W21, W25
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move W21, [X20+16]
	059 Add W9, W21, W25
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X8, [X20]
	062 NotImplemented "Instruction LDRH not yet implemented."
	063 Subtract W9, W8, 48
	064 And W9, W9, 0xFFFF
	065 Compare W25, 0
	066 JumpIfEqual {73}
	067 NotImplemented "Instruction CMP not yet implemented."
	068 NotImplemented "Instruction CSEL not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Add W9, W25, 1
	072 NotImplemented "Instruction CMP not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move W9, 1
	075 Move W24, 2
	076 NotImplemented "Instruction MADD not yet implemented."
	077 Subtract W22, W8, 48
	078 Move W25, W9
	079 Compare W25, 0
	080 JumpIfNotEqual {87}
	081 Move W24, 3
	082 Move W25, W9
	083 Move W24, 1
	084 Move W25, 9
	085 Move W24, 4
	086 Move W25, 1
	087 Move W8, [X31+12]
	088 Move V0, [X31+1]
	089 Move [X19+24], W24
	090 Move [X19+28], W22
	091 Move X22, [X31+96]
	092 Move X21, [X31+104]
	093 Move [X19+16], W8
	094 Move [X19+20], W25
	095 Move [X19], V0
	096 Move X20, [X31+112]
	097 Move X19, [X31+120]
	098 Move X24, [X31+80]
	099 Move X23, [X31+88]
	100 Move X26, [X31+64]
	101 Move X25, [X31+72]
	102 Move X28, [X31+48]
	103 Move X27, [X31+56]
	104 Move X29, [X31+32]
	105 Move X30, [X31+40]
	106 Add X31, X31, 128
	107 Return X0
	108 Call 0x1C17F28

Method: System.Void ConsumeSubString(System.DTSubString sub)

Disassembly:
	0x033774EC LDR X0, [X0 + 0xDC0]
	0x033774F0 BL 0x1C16CF4
	0x033774F4 ADRP X0, 0xDB3000
	0x033774F8 LDR X0, [X0 + 0xDC8]
	0x033774FC BL 0x1C16CF4
	0x03377500 ADRP X0, 0xDB3000
	0x03377504 LDR X0, [X0 + 0xDD0]
	0x03377508 BL 0x1C16CF4
	0x0337750C ADRP X0, 0xDB3000
	0x03377510 LDR X0, [X0 + 0xDD8]
	0x03377514 BL 0x1C16CF4
	0x03377518 ADRP X0, 0xDB3000
	0x0337751C LDR X0, [X0 + 0xDE0]
	0x03377520 BL 0x1C16CF4
	0x03377524 ADRP X0, 0xDB3000
	0x03377528 LDR X0, [X0 + 0xDE8]
	0x0337752C BL 0x1C16CF4
	0x03377530 ADRP X0, 0xDB3000
	0x03377534 LDR X0, [X0 + 0xDF0]
	0x03377538 BL 0x1C16CF4
	0x0337753C ADRP X0, 0xDB1000
	0x03377540 LDR X0, [X0 + 0x80]
	0x03377544 BL 0x1C16CF4
	0x03377548 MOVZ W8, 0x1
	0x0337754C STRB W8, [X22 + 0xF29]
	0x03377550 ADRP X28, 0xDB3000
	0x03377554 LDR X28, [X28 + 0xDE8]
	0x03377558 MOV X0, X21
	0x0337755C MOV X1, X20
	0x03377560 STUR W31, [X29 - 0xC]
	0x03377564 BL 0x3377DC4
	0x03377568 MOV X20, X1
	0x0337756C CBZ W20, 0x337799C
	0x03377570 LDRH W8, [X0]
	0x03377574 MOV X21, X0
	0x03377578 CMP W8, 0x7B
	0x0337757C B.NE 0x337799C
	0x03377580 MOVZ W2, 0x1
	0x03377584 MOV X0, X21
	0x03377588 MOV X1, X20
	0x0337758C BL 0x3377FFC
	0x03377590 TBZ X0, 0x0, 0x33779DC
	0x03377594 ADRP X25, 0xDB0000
	0x03377598 LDR X25, [X25 + 0x7E8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1066000
	007 Move X21, 0xDB2000
	008 Move W8, [X22+3873]
	009 Move X21, [X21+1264]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xDB2000
	017 Move X0, [X0+1264]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3873], W8
	021 Move W8, [X20+16]
	022 Move W9, [X20+20]
	023 Add W20, W9, W8
	024 Move [X19+16], W20
	025 Move X0, [X21]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X21, 0x1066000
	031 Move W8, [X21+3852]
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {41}
	036 Move X0, 0xDAC000
	037 Move X0, [X0+40]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X21+3852], W8
	041 Move W9, [X19+8]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction LDRSW not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X9, [X19]
	046 NotImplemented "Instruction LDRH not yet implemented."
	047 NotImplemented "Instruction STRH not yet implemented."
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Return 
	054 Call 0x1C17F28

Method: System.Void .cctor()

Disassembly:
	0x0337759C CMP W20, 0x2
	0x033775A0 LDR X22, [X25]
	0x033775A4 B.HI 0x33775B0
	0x033775A8 MOV X0, X31
	0x033775AC BL 0x339D6EC
	0x033775B0 LDR X0, [X22 + 0x20]
	0x033775B4 LDRB W8, [X0 + 0x135]
	0x033775B8 TBNZ X8, 0x0, 0x33775C0
	0x033775BC BL 0x1C5C684
	0x033775C0 ADRP X26, 0xDB3000
	0x033775C4 LDR X26, [X26 + 0xD78]
	0x033775C8 SUB W24, W20, 0x3
	0x033775CC ADD X23, X21, 0x6
	0x033775D0 MOVZ W2, 0x2C
	0x033775D4 LDR X3, [X26]
	0x033775D8 MOV X0, X23
	0x033775DC MOV X1, X24
	0x033775E0 BL 0x338BFD4
	0x033775E4 CMP W0, 0x0
	0x033775E8 B.LE 0x3377A00
	0x033775EC ADRP X8, 0xDAF000
	0x033775F0 LDR X8, [X8 + 0xD90]
	0x033775F4 MOV W22, W0
	0x033775F8 CMP W20, 0x3
	0x033775FC LDR X27, [X8]
	0x03377600 B.CC 0x337760C
	0x03377604 CMP W24, W22
	0x03377608 B.CS 0x3377614
	0x0337760C MOV X0, X31
	0x03377610 BL 0x339D6EC
	0x03377614 LDR X0, [X27 + 0x20]
	0x03377618 LDRB W8, [X0 + 0x135]
	0x0337761C TBNZ X8, 0x0, 0x3377624
	0x03377620 BL 0x1C5C684
	0x03377624 MOV W1, W22
	0x03377628 SUB X2, X29, 0x4
	0x0337762C MOVN W3, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x1066000
	005 Move X20, 0xD86000
	006 Move W8, [X19+3874]
	007 Move X20, [X20+2264]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0xD86000
	013 Move X0, [X0+2264]
	014 Call 0x1C17CF4
	015 Move X0, 0xDB2000
	016 Move X0, [X0+1264]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+3874], W8
	020 Move X0, [X20]
	021 Move W1, 2
	022 Call 0x1C17D6C
	023 Compare X0, 0
	024 JumpIfEqual {43}
	025 Move W8, [X0+24]
	026 Compare W8, 0
	027 JumpIfEqual {42}
	028 Move W9, 32
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction STRH not yet implemented."
	031 Move X8, 0xDB2000
	032 Move X8, [X8+1264]
	033 Move W9, 160
	034 NotImplemented "Instruction STRH not yet implemented."
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X8, [X8]
	038 Move X8, [X8+184]
	039 Move [X8], X0
	040 Move X30, [X31+32]
	041 Return 
	042 Call 0x1C17F28
	043 Call 0x1C17F20

