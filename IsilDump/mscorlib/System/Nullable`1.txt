Type: System.Nullable`1

Method: System.Void .ctor(T value)

Disassembly:
	0x0242CED8 MOV X0, X1
	0x0242CEDC BL 0x1C5C684
	0x0242CEE0 MOV X1, X0
	0x0242CEE4 LDR X8, [X21]

ISIL:
	001 Move W8, 1
	002 Move [X0+8], X1
	003 Move [X0+16], X2
	004 Move [X0], W8
	005 Return 

Method: System.Boolean get_HasValue()

Disassembly:
	0x0242CEE8 LDR X9, [X1 + 0x40]
	0x0242CEEC MOV X0, X21

ISIL:
	001 Move W0, [X0]
	002 Return X0

Method: T get_Value()

Disassembly:
	0x0242CEF0 LDR X8, [X8 + 0x40]
	0x0242CEF4 CMP X8, X9
	0x0242CEF8 B.NE 0x242CF48
	0x0242CEFC BL 0x1C16E08
	0x0242CF00 MOV X8, X0
	0x0242CF04 LDR X0, [X20 + 0x20]
	0x0242CF08 LDR V0, [X8]
	0x0242CF0C LDRB W9, [X0 + 0x135]
	0x0242CF10 TBNZ X9, 0x0, 0x242CF20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0]
	004 Move X19, X0
	005 Compare W8, 0
	006 JumpIfNotEqual {9}
	007 Move X0, X31
	008 Call ThrowHelper.ThrowInvalidOperationException_InvalidOperation_NoValue
	009 Move X0, [X19+8]
	010 Move X1, [X19+16]
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 Return X0

Method: T GetValueOrDefault()

Disassembly:
	0x0242CF14 STR V0, [X31]
	0x0242CF18 BL 0x1C5C684
	0x0242CF1C LDR V0, [X31]

ISIL:
	001 Move X8, [X0+8]
	002 Move X1, [X0+16]
	003 Move X0, X8
	004 Return X0

Method: T GetValueOrDefault(T defaultValue)

Disassembly:
	0x0242CF20 MOVZ W8, 0x1
	0x0242CF24 STUR V0, [X19 + 0x8]
	0x0242CF28 STRB W8, [X19]
	0x0242CF2C B 0x242CF38
	0x0242CF30 STP X31, X31, [X19]
	0x0242CF34 STR X31, [X19 + 0x10]
	0x0242CF38 LDP X20, X19, [X31 + 0x20]
	0x0242CF3C LDP X30, X21, [X31 + 0x10]
	0x0242CF40 ADD X31, X31, 0x30

ISIL:
	001 Move W9, [X0]
	002 Compare W9, 0
	003 JumpIfEqual {7}
	004 Move X8, X0
	005 Move X0, [X0+8]
	006 Move X2, [X8+16]
	007 Move X0, X1
	008 Move X1, X2
	009 Return X0

Method: System.Boolean Equals(System.Object other)

Disassembly:
	0x0242CF44 RET
	0x0242CF48 BL 0x1C171E0
	0x0242CF4C SUB X31, X31, 0x40
	0x0242CF50 STP X30, X23, [X31 + 0x10]
	0x0242CF54 STP X22, X21, [X31 + 0x20]
	0x0242CF58 STP X20, X19, [X31 + 0x30]
	0x0242CF5C ADRP X22, 0x1FAD000
	0x0242CF60 LDRB W9, [X22 + 0x9E4]
	0x0242CF64 MOV X19, X1
	0x0242CF68 MOV X21, X0
	0x0242CF6C MOV X20, X8
	0x0242CF70 TBNZ X9, 0x0, 0x242CF88
	0x0242CF74 ADRP X0, 0x1CC7000
	0x0242CF78 LDR X0, [X0 + 0x6C0]
	0x0242CF7C BL 0x1C16CF4
	0x0242CF80 MOVZ W8, 0x1
	0x0242CF84 STRB W8, [X22 + 0x9E4]
	0x0242CF88 CBZ X21, 0x242D074
	0x0242CF8C ADRP X23, 0x1CC7000
	0x0242CF90 LDR X23, [X23 + 0x6C0]
	0x0242CF94 MOV X0, X21
	0x0242CF98 MOV X1, X31
	0x0242CF9C BL 0x33BE520
	0x0242CFA0 LDR X8, [X19 + 0x20]
	0x0242CFA4 MOV X22, X0
	0x0242CFA8 LDRB W9, [X8 + 0x135]
	0x0242CFAC TBNZ X9, 0x0, 0x242CFBC
	0x0242CFB0 MOV X0, X8
	0x0242CFB4 BL 0x1C5C684
	0x0242CFB8 MOV X8, X0
	0x0242CFBC LDR X0, [X23]
	0x0242CFC0 LDR X8, [X8 + 0xC0]
	0x0242CFC4 LDR W9, [X0 + 0xE0]
	0x0242CFC8 LDR X23, [X8 + 0x30]
	0x0242CFCC CBNZ W9, 0x242CFD4
	0x0242CFD0 BL 0x1C16DFC
	0x0242CFD4 MOV X0, X23
	0x0242CFD8 MOV X1, X31
	0x0242CFDC BL 0x338C698
	0x0242CFE0 MOV X1, X0
	0x0242CFE4 MOV X0, X22
	0x0242CFE8 MOV X2, X31
	0x0242CFEC BL 0x3395F0C
	0x0242CFF0 TBNZ X0, 0x0, 0x242D090
	0x0242CFF4 STP X31, X31, [X20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1FAE000
	007 Move W8, [X22+2523]
	008 Move X20, X2
	009 Move X19, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x1CF0000
	016 Move X0, [X0+1456]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2523], W8
	020 Move W9, [X21]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 NotImplemented "Instruction CSET not yet implemented."
	023 NotImplemented "Instruction CMP not yet implemented."
	024 NotImplemented "Instruction CSET not yet implemented."
	025 Compare X19, 0
	026 JumpIfEqual {55}
	027 Compare W9, 0
	028 JumpIfEqual {55}
	029 Move X8, 0x1CF0000
	030 Move X8, [X8+1456]
	031 Add X21, X21, 8
	032 Move X0, [X8]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, [X20+32]
	038 Move W8, [X0+309]
	039 Move TEMP, X8
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {44}
	043 Call 0x1C5D684
	044 Move X8, [X0+192]
	045 Move X0, X21
	046 Move X1, X19
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X2, [X8+16]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Call 0x2B88E18, X0, X1
	054 Return X0
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 And W0, W10, W8
	060 Move X30, [X31+48]
	061 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x0242CFF8 STR X31, [X20 + 0x10]
	0x0242CFFC LDR X0, [X19 + 0x20]
	0x0242D000 LDRB W8, [X0 + 0x135]
	0x0242D004 TBNZ X8, 0x0, 0x242D00C
	0x0242D008 BL 0x1C5C684
	0x0242D00C LDR X8, [X0 + 0xC0]
	0x0242D010 LDR X1, [X8]
	0x0242D014 LDRB W8, [X1 + 0x135]
	0x0242D018 TBNZ X8, 0x0, 0x242D028
	0x0242D01C MOV X0, X1
	0x0242D020 BL 0x1C5C684
	0x0242D024 MOV X1, X0
	0x0242D028 LDR X8, [X21]
	0x0242D02C LDR X9, [X1 + 0x40]
	0x0242D030 MOV X0, X21
	0x0242D034 LDR X8, [X8 + 0x40]
	0x0242D038 CMP X8, X9
	0x0242D03C B.NE 0x242D0B8
	0x0242D040 BL 0x1C16E08
	0x0242D044 MOV X8, X0
	0x0242D048 LDR X0, [X19 + 0x20]
	0x0242D04C LDR V0, [X8]
	0x0242D050 LDRB W9, [X0 + 0x135]
	0x0242D054 TBNZ X9, 0x0, 0x242D064
	0x0242D058 STR V0, [X31]
	0x0242D05C BL 0x1C5C684
	0x0242D060 LDR V0, [X31]
	0x0242D064 MOVZ W8, 0x1
	0x0242D068 STUR V0, [X20 + 0x8]
	0x0242D06C STRB W8, [X20]
	0x0242D070 B 0x242D07C
	0x0242D074 STP X31, X31, [X20]
	0x0242D078 STR X31, [X20 + 0x10]
	0x0242D07C LDP X20, X19, [X31 + 0x30]
	0x0242D080 LDP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1FAD000
	006 Move W8, [X21+2524]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x1CEF000
	014 Move X0, [X0+1456]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2524], W8
	018 Move W8, [X20]
	019 Compare W8, 0
	020 JumpIfEqual {45}
	021 Move X8, 0x1CEF000
	022 Move X8, [X8+1456]
	023 Add X20, X20, 8
	024 Move X0, [X8]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, [X19+32]
	030 Move W8, [X0+309]
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {36}
	035 Call 0x1C5D684
	036 Move X8, [X0+192]
	037 Move X0, X20
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X1, [X8+24]
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Call 0x2B88CD8, X0
	044 Return X0
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move W0, W31
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Return X0

Method: System.String ToString()

Disassembly:
	0x0242D084 LDP X30, X23, [X31 + 0x10]
	0x0242D088 ADD X31, X31, 0x40
	0x0242D08C RET
	0x0242D090 ADRP X0, 0x1CCE000
	0x0242D094 LDR X0, [X0 + 0xC08]
	0x0242D098 BL 0x1C16D08
	0x0242D09C BL 0x1C16F10
	0x0242D0A0 MOV X1, X31
	0x0242D0A4 MOV X20, X0
	0x0242D0A8 BL 0x337DE5C
	0x0242D0AC MOV X0, X20
	0x0242D0B0 MOV X1, X19
	0x0242D0B4 BL 0x1C16DEC
	0x0242D0B8 BL 0x1C171E0
	0x0242D0BC LDP V1, V0, [X1]
	0x0242D0C0 MOVZ W8, 0x1
	0x0242D0C4 STRB W8, [X0]
	0x0242D0C8 STUR V0, [X0 + 0x14]
	0x0242D0CC STUR V1, [X0 + 0x4]
	0x0242D0D0 RET
	0x0242D0D4 LDRB W0, [X0]
	0x0242D0D8 RET
	0x0242D0DC STR X30, [X31 - 0x20]!
	0x0242D0E0 STP X20, X19, [X31 + 0x10]
	0x0242D0E4 LDRB W9, [X0]
	0x0242D0E8 MOV X19, X0
	0x0242D0EC MOV X20, X8
	0x0242D0F0 CBNZ W9, 0x242D0FC
	0x0242D0F4 MOV X0, X31
	0x0242D0F8 BL 0x339E1CC
	0x0242D0FC LDUR V0, [X19 + 0x14]
	0x0242D100 LDUR V1, [X19 + 0x4]
	0x0242D104 STP V1, V0, [X20]
	0x0242D108 LDP X20, X19, [X31 + 0x10]
	0x0242D10C LDR X30, [X31], #0x20
	0x0242D110 RET
	0x0242D114 LDUR V0, [X0 + 0x14]
	0x0242D118 LDUR V1, [X0 + 0x4]
	0x0242D11C STP V1, V0, [X8]
	0x0242D120 RET

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0x1FAD000
	007 Move W8, [X21+2525]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x1CC7000
	015 Move X0, [X0+2440]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2525], W8
	019 Move W8, [X19]
	020 Compare W8, 0
	021 JumpIfEqual {48}
	022 Move X0, [X20+32]
	023 Move W8, [X0+309]
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {29}
	028 Call 0x1C5D684
	029 Move X8, [X0+192]
	030 Add X19, X19, 8
	031 Move X0, [X8]
	032 Move W8, [X0+309]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {38}
	037 Call 0x1C5D684
	038 Move TEMP, 0
	039 Not TEMP
	040 Move X8, TEMP
	041 Move [X31], X0
	042 Move [X31+8], X8
	043 Move V0, [X19]
	044 Add X0, X31, 0
	045 Move X1, X31
	046 Move [X31+1], V0
	047 Call ValueType.ToString, X0
	048 Move X8, 0x1CC7000
	049 Move X8, [X8+2440]
	050 Move X0, [X8]
	051 Move X20, [X31+48]
	052 Move X19, [X31+56]
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Add X31, X31, 64
	056 Return X0

Method: System.Object Box(System.Nullable`1<T> o)

Disassembly:
	0x0242D124 LDRB W9, [X0], #0x4
	0x0242D128 CMP W9, 0x0
	0x0242D12C CSEL X9, X1, X0, EQ
	0x0242D130 LDP V1, V0, [X9]
	0x0242D134 STP V1, V0, [X8]
	0x0242D138 RET
	0x0242D13C SUB X31, X31, 0x50
	0x0242D140 STR X30, [X31 + 0x30]
	0x0242D144 STP X20, X19, [X31 + 0x40]
	0x0242D148 LDRB W8, [X0]
	0x0242D14C MOV X20, X0
	0x0242D150 CMP W8, 0x0
	0x0242D154 CSET W9, EQ
	0x0242D158 CMP X1, 0x0
	0x0242D15C CSET W10, EQ
	0x0242D160 AND W0, W10, W9, 0x0
	0x0242D164 CBZ X1, 0x242D1B8
	0x0242D168 CBZ W8, 0x242D1B8
	0x0242D16C LDR X0, [X2 + 0x20]
	0x0242D170 MOV X19, X1
	0x0242D174 LDRB W8, [X0 + 0x135]
	0x0242D178 TBNZ X8, 0x0, 0x242D180
	0x0242D17C BL 0x1C5C684

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move W8, [X0]
	004 Move TEMP, X8
	005 And TEMP, TEMP, 1
	006 Compare TEMP, 1
	007 JumpIfEqual {9}
	008 Move X0, X31
	009 Move X8, [X0+16]
	010 Move V0, [X0]
	011 Move [X31+32], X8
	012 Move [X31+1], V0
	013 NotImplemented "Instruction LDUR not yet implemented."
	014 Move [X31], V0
	015 Move X0, [X1+32]
	016 Move W8, [X0+309]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {22}
	021 Call 0x1C5D684
	022 Move X8, [X0+192]
	023 Add X1, X31, 0
	024 Move X0, [X8]
	025 Call 0x1C17E04
	026 Move X30, [X31+48]
	027 Add X31, X31, 64
	028 Return X0

Method: System.Nullable`1<T> Unbox(System.Object o)

Disassembly:
	0x0242D180 LDR X8, [X0 + 0xC0]
	0x0242D184 ADD X20, X20, 0x4
	0x0242D188 LDR X0, [X8]
	0x0242D18C LDRB W8, [X0 + 0x135]
	0x0242D190 TBNZ X8, 0x0, 0x242D198
	0x0242D194 BL 0x1C5C684
	0x0242D198 MOVN X8, 0x0
	0x0242D19C STP X0, X8, [X31]
	0x0242D1A0 LDP V1, V0, [X20]
	0x0242D1A4 ADD X0, X31, 0x0
	0x0242D1A8 MOV X1, X19
	0x0242D1AC MOV X2, X31
	0x0242D1B0 STP V1, V0, [X31 + 0x10]
	0x0242D1B4 BL 0x33D55D0
	0x0242D1B8 LDP X20, X19, [X31 + 0x40]
	0x0242D1BC LDR X30, [X31 + 0x30]
	0x0242D1C0 AND W0, W0, 0x1
	0x0242D1C4 ADD X31, X31, 0x50
	0x0242D1C8 RET
	0x0242D1CC SUB X31, X31, 0x40
	0x0242D1D0 STP X30, X19, [X31 + 0x30]
	0x0242D1D4 LDRB W8, [X0]
	0x0242D1D8 CBZ W8, 0x242D228
	0x0242D1DC MOV X19, X0
	0x0242D1E0 LDR X0, [X1 + 0x20]
	0x0242D1E4 LDRB W8, [X0 + 0x135]
	0x0242D1E8 TBNZ X8, 0x0, 0x242D1F0
	0x0242D1EC BL 0x1C5C684
	0x0242D1F0 LDR X8, [X0 + 0xC0]
	0x0242D1F4 ADD X19, X19, 0x4
	0x0242D1F8 LDR X0, [X8]
	0x0242D1FC LDRB W8, [X0 + 0x135]
	0x0242D200 TBNZ X8, 0x0, 0x242D208
	0x0242D204 BL 0x1C5C684
	0x0242D208 MOVN X8, 0x0
	0x0242D20C STP X0, X8, [X31]
	0x0242D210 LDP V1, V0, [X19]
	0x0242D214 ADD X0, X31, 0x0
	0x0242D218 MOV X1, X31
	0x0242D21C STP V1, V0, [X31 + 0x10]
	0x0242D220 BL 0x33D55D8
	0x0242D224 B 0x242D22C
	0x0242D228 MOV W0, W31
	0x0242D22C LDP X30, X19, [X31 + 0x30]
	0x0242D230 ADD X31, X31, 0x40
	0x0242D234 RET

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X8
	007 Compare X0, 0
	008 JumpIfEqual {51}
	009 Move [X19], X31
	010 Move [X19+8], X31
	011 Move [X19+16], X31
	012 Move X21, X0
	013 Move X0, [X1+32]
	014 Move X20, X1
	015 Move W8, [X0+309]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {21}
	020 Call 0x1C5D684
	021 Move X8, [X0+192]
	022 Move X1, [X8]
	023 Move W8, [X1+309]
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {31}
	028 Move X0, X1
	029 Call 0x1C5D684
	030 Move X1, X0
	031 Move X8, [X21]
	032 Move X9, [X1+64]
	033 Move X0, X21
	034 Move X8, [X8+64]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Call 0x1C17E08
	037 Move X8, X0
	038 Move X0, [X20+32]
	039 Move V0, [X8]
	040 Move W9, [X0+309]
	041 Move TEMP, X9
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {48}
	045 Move [X31], V0
	046 Call 0x1C5D684
	047 Move V0, [X31]
	048 Move W8, 1
	049 Move [X19+8], V0
	050 Move [X19], W8
	051 Move [X19], X31
	052 Move [X19+8], X31
	053 Move [X19+16], X31
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X30, [X31+16]
	057 Move X21, [X31+24]
	058 Add X31, X31, 48
	059 Return X0
	060 Call 0x1C181E0

Method: System.Nullable`1<T> UnboxExact(System.Object o)

Disassembly:
	0x0242D238 SUB X31, X31, 0x50
	0x0242D23C STP X30, X21, [X31 + 0x30]
	0x0242D240 STP X20, X19, [X31 + 0x40]
	0x0242D244 ADRP X21, 0x1FAC000
	0x0242D248 LDRB W8, [X21 + 0x9E5]
	0x0242D24C MOV X20, X1
	0x0242D250 MOV X19, X0
	0x0242D254 TBNZ X8, 0x0, 0x242D26C
	0x0242D258 ADRP X0, 0x1CC6000
	0x0242D25C LDR X0, [X0 + 0x988]
	0x0242D260 BL 0x1C16CF4
	0x0242D264 MOVZ W8, 0x1
	0x0242D268 STRB W8, [X21 + 0x9E5]
	0x0242D26C LDRB W8, [X19]
	0x0242D270 CBZ W8, 0x242D2BC
	0x0242D274 LDR X0, [X20 + 0x20]
	0x0242D278 LDRB W8, [X0 + 0x135]
	0x0242D27C TBNZ X8, 0x0, 0x242D284
	0x0242D280 BL 0x1C5C684
	0x0242D284 LDR X8, [X0 + 0xC0]
	0x0242D288 ADD X19, X19, 0x4
	0x0242D28C LDR X0, [X8]
	0x0242D290 LDRB W8, [X0 + 0x135]
	0x0242D294 TBNZ X8, 0x0, 0x242D29C
	0x0242D298 BL 0x1C5C684
	0x0242D29C MOVN X8, 0x0
	0x0242D2A0 STP X0, X8, [X31]
	0x0242D2A4 LDP V1, V0, [X19]
	0x0242D2A8 ADD X0, X31, 0x0
	0x0242D2AC MOV X1, X31
	0x0242D2B0 STP V1, V0, [X31 + 0x10]
	0x0242D2B4 BL 0x33D5650
	0x0242D2B8 B 0x242D2C8
	0x0242D2BC ADRP X8, 0x1CC6000
	0x0242D2C0 LDR X8, [X8 + 0x988]
	0x0242D2C4 LDR X0, [X8]
	0x0242D2C8 LDP X20, X19, [X31 + 0x40]
	0x0242D2CC LDP X30, X21, [X31 + 0x30]
	0x0242D2D0 ADD X31, X31, 0x50
	0x0242D2D4 RET
	0x0242D2D8 SUB X31, X31, 0x60
	0x0242D2DC STR X30, [X31 + 0x50]
	0x0242D2E0 LDRB W8, [X0]
	0x0242D2E4 TBNZ X8, 0x0, 0x242D2F0
	0x0242D2E8 MOV X0, X31
	0x0242D2EC B 0x242D32C
	0x0242D2F0 LDR W8, [X0 + 0x20]
	0x0242D2F4 LDP V1, V0, [X0]
	0x0242D2F8 STR W8, [X31 + 0x40]
	0x0242D2FC STP V1, V0, [X31 + 0x20]
	0x0242D300 LDUR V0, [X31 + 0x24]
	0x0242D304 LDUR V1, [X31 + 0x34]
	0x0242D308 STP V0, V1, [X31]
	0x0242D30C LDR X0, [X1 + 0x20]
	0x0242D310 LDRB W8, [X0 + 0x135]
	0x0242D314 TBNZ X8, 0x0, 0x242D31C
	0x0242D318 BL 0x1C5C684
	0x0242D31C LDR X8, [X0 + 0xC0]
	0x0242D320 ADD X1, X31, 0x0
	0x0242D324 LDR X0, [X8]
	0x0242D328 BL 0x1C16E04
	0x0242D32C LDR X30, [X31 + 0x50]
	0x0242D330 ADD X31, X31, 0x60
	0x0242D334 RET
	0x0242D338 SUB X31, X31, 0x40
	0x0242D33C STP X30, X21, [X31 + 0x20]
	0x0242D340 STP X20, X19, [X31 + 0x30]
	0x0242D344 MOV X19, X8
	0x0242D348 CBZ X0, 0x242D3D8
	0x0242D34C MOVI V0.2D, 0x0
	0x0242D350 STR W31, [X19 + 0x20]
	0x0242D354 STP V0, V0, [X19]
	0x0242D358 MOV X21, X0
	0x0242D35C LDR X0, [X1 + 0x20]
	0x0242D360 MOV X20, X1
	0x0242D364 LDRB W8, [X0 + 0x135]
	0x0242D368 TBNZ X8, 0x0, 0x242D370
	0x0242D36C BL 0x1C5C684
	0x0242D370 LDR X8, [X0 + 0xC0]
	0x0242D374 LDR X1, [X8]
	0x0242D378 LDRB W8, [X1 + 0x135]
	0x0242D37C TBNZ X8, 0x0, 0x242D38C
	0x0242D380 MOV X0, X1
	0x0242D384 BL 0x1C5C684
	0x0242D388 MOV X1, X0
	0x0242D38C LDR X8, [X21]
	0x0242D390 LDR X9, [X1 + 0x40]
	0x0242D394 MOV X0, X21
	0x0242D398 LDR X8, [X8 + 0x40]
	0x0242D39C CMP X8, X9
	0x0242D3A0 B.NE 0x242D3F4
	0x0242D3A4 BL 0x1C16E08

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x1FAD000
	009 Move W9, [X22+2526]
	010 Move X19, X1
	011 Move X21, X0
	012 Move X20, X8
	013 Move TEMP, X9
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x1CC7000
	018 Move X0, [X0+1728]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+2526], W8
	022 Compare X21, 0
	023 JumpIfEqual {97}
	024 Move X23, 0x1CC7000
	025 Move X23, [X23+1728]
	026 Move X0, X21
	027 Move X1, X31
	028 Call "il2cpp_vm_object_is_inst", X0
	029 Move X8, [X19+32]
	030 Move X22, X0
	031 Move W9, [X8+309]
	032 Move TEMP, X9
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {39}
	036 Move X0, X8
	037 Call 0x1C5D684
	038 Move X8, X0
	039 Move X0, [X23]
	040 Move X8, [X8+192]
	041 Move W9, [X0+224]
	042 Move X23, [X8+48]
	043 Compare W9, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X0, X23
	047 Move X1, X31
	048 Call Type.GetTypeFromHandle, X0
	049 Move X1, X0
	050 Move X0, X22
	051 Move X2, X31
	052 Call Type.op_Inequality, X0, X1
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {108}
	057 Move [X20], X31
	058 Move [X20+8], X31
	059 Move [X20+16], X31
	060 Move X0, [X19+32]
	061 Move W8, [X0+309]
	062 Move TEMP, X8
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {67}
	066 Call 0x1C5D684
	067 Move X8, [X0+192]
	068 Move X1, [X8]
	069 Move W8, [X1+309]
	070 Move TEMP, X8
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfEqual {77}
	074 Move X0, X1
	075 Call 0x1C5D684
	076 Move X1, X0
	077 Move X8, [X21]
	078 Move X9, [X1+64]
	079 Move X0, X21
	080 Move X8, [X8+64]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Call 0x1C17E08
	083 Move X8, X0
	084 Move X0, [X19+32]
	085 Move V0, [X8]
	086 Move W9, [X0+309]
	087 Move TEMP, X9
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfEqual {94}
	091 Move [X31], V0
	092 Call 0x1C5D684
	093 Move V0, [X31]
	094 Move W8, 1
	095 Move [X20+8], V0
	096 Move [X20], W8
	097 Move [X20], X31
	098 Move [X20+8], X31
	099 Move [X20+16], X31
	100 Move X20, [X31+48]
	101 Move X19, [X31+56]
	102 Move X22, [X31+32]
	103 Move X21, [X31+40]
	104 Move X30, [X31+16]
	105 Move X23, [X31+24]
	106 Add X31, X31, 64
	107 Return X0
	108 Move X0, 0x1CCF000
	109 Move X0, [X0+3080]
	110 Call 0x1C17D08
	111 Call 0x1C17F10
	112 Move X1, X31
	113 Move X20, X0
	114 Call InvalidCastException..ctor, X0
	115 Move X0, X20
	116 Move X1, X19
	117 Call 0x1C17DEC
	118 Call 0x1C181E0

