Type: System.TimeZoneInfo/<>c

Method: System.Void .cctor()

Disassembly:
	0x033150D0 LDR X22, [X22 + 0x8C8]
	0x033150D4 CBNZ W9, 0x33150DC
	0x033150D8 BL 0x1C16DFC
	0x033150DC MOV X0, X21
	0x033150E0 MOV X1, X31
	0x033150E4 BL 0x338C698
	0x033150E8 LDR X1, [X23]
	0x033150EC MOV X2, X0
	0x033150F0 MOV X0, X20
	0x033150F4 MOV X3, X31
	0x033150F8 BL 0x32A9678
	0x033150FC LDR X1, [X22]
	0x03315100 BL 0x1C16E00
	0x03315104 CBZ X0, 0x331517C
	0x03315108 ADRP X8, 0xE12000
	0x0331510C LDR X8, [X8 + 0xE50]
	0x03315110 MOV X20, X0
	0x03315114 ADRP X21, 0xE12000
	0x03315118 LDR X0, [X8]
	0x0331511C LDR X21, [X21 + 0xE48]
	0x03315120 BL 0x1C16F10
	0x03315124 LDR X2, [X21]
	0x03315128 MOV X1, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x10C8000
	005 Move X20, 0xE13000
	006 Move W8, [X19+2919]
	007 Move X20, [X20+2872]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xE13000
	013 Move X0, [X0+2872]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2919], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x0331512C MOV X21, X0
	0x03315130 BL 0x2551884

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Boolean <TZif_ParsePosixName>b__34_1(System.Char c)

Disassembly:
	0x03315134 STR X21, [X19 + 0x90]
	0x03315138 LDP X20, X19, [X31 + 0x30]
	0x0331513C LDP X22, X21, [X31 + 0x20]
	0x03315140 LDP X24, X23, [X31 + 0x10]

ISIL:
	001 And W8, W1, 0xFFFF
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean <TZif_ParsePosixName>b__34_0(System.Char c)

Disassembly:
	0x03315144 LDR X30, [X31], #0x40
	0x03315148 RET
	0x0331514C ADRP X0, 0xDE3000
	0x03315150 LDR X0, [X0 + 0x528]
	0x03315154 BL 0x1C16D08
	0x03315158 BL 0x1C16F10
	0x0331515C MOV X19, X0
	0x03315160 ADRP X0, 0xE08000
	0x03315164 LDR X0, [X0 + 0x2D8]
	0x03315168 BL 0x1C16D08
	0x0331516C MOV X1, X0
	0x03315170 MOV X0, X19
	0x03315174 BL 0x330E100
	0x03315178 B 0x33151AC
	0x0331517C ADRP X0, 0xE08000
	0x03315180 LDR X0, [X0 + 0x2E0]
	0x03315184 BL 0x1C16D08
	0x03315188 BL 0x1C16F10
	0x0331518C MOV X19, X0
	0x03315190 ADRP X0, 0xE12000
	0x03315194 LDR X0, [X0 + 0xED0]
	0x03315198 BL 0x1C16D08
	0x0331519C MOV X1, X0
	0x033151A0 MOV X0, X19
	0x033151A4 MOV X2, X31
	0x033151A8 BL 0x329F100
	0x033151AC ADRP X0, 0xE12000
	0x033151B0 LDR X0, [X0 + 0xED8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10C8000
	006 Move X20, 0xDE1000
	007 Move W8, [X21+2920]
	008 Move X20, [X20+368]
	009 Move W19, W1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDE1000
	015 Move X0, [X0+368]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2920], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move W0, W19
	025 Call Char.IsDigit, X0
	026 Subtract W8, W19, 43
	027 And W8, W8, 0xFFFF
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 NotImplemented "Instruction CSET not yet implemented."
	032 Or W8, W8, W0
	033 And W0, W8, 1
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return X0

Method: System.Boolean <TZif_ParsePosixOffset>b__35_0(System.Char c)

Disassembly:
	0x03315238 STRB W8, [X23 + 0xB74]
	0x0331523C MOV X0, X20
	0x03315240 MOV X1, X19
	0x03315244 MOV X2, X22
	0x03315248 MOV X3, X21
	0x0331524C MOV X4, X31
	0x03315250 BL 0x33B3620
	0x03315254 LDR X0, [X20 + 0x90]
	0x03315258 CBZ X0, 0x331530C
	0x0331525C ADRP X8, 0xE12000
	0x03315260 LDR X8, [X8 + 0xEE8]
	0x03315264 ADRP X21, 0xE10000
	0x03315268 LDR X1, [X8]
	0x0331526C LDR X21, [X21 + 0x8C8]
	0x03315270 BL 0x25518BC
	0x03315274 LDR X8, [X21]
	0x03315278 MOV W1, W0
	0x0331527C MOV X0, X8
	0x03315280 BL 0x1C16D6C
	0x03315284 LDR X8, [X20 + 0x90]
	0x03315288 CBZ X8, 0x331530C
	0x0331528C ADRP X9, 0xE12000
	0x03315290 LDR X9, [X9 + 0xEE0]
	0x03315294 ADRP X21, 0xE10000
	0x03315298 ADRP X22, 0xDDE000
	0x0331529C MOV X20, X0
	0x033152A0 LDR X3, [X9]
	0x033152A4 LDR X21, [X21 + 0xE70]
	0x033152A8 LDR X22, [X22 + 0x6C0]
	0x033152AC MOV X0, X8
	0x033152B0 MOV X1, X20
	0x033152B4 MOV W2, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10C8000
	006 Move X20, 0xDE1000
	007 Move W8, [X21+2921]
	008 Move X20, [X20+368]
	009 Move W19, W1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDE1000
	015 Move X0, [X0+368]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2921], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move W0, W19
	025 Call Char.IsDigit, X0
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {35}
	030 Subtract W8, W19, 43
	031 And W9, W8, 0xFFFF
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move W9, 0x7FFA
	034 NotImplemented "Instruction LSRV not yet implemented."
	035 NotImplemented "Instruction ORN not yet implemented."
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 And W0, W8, 1
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return X0

Method: System.Boolean <TZif_ParsePosixDate>b__37_0(System.Char c)

Disassembly:
	0x033152B8 BL 0x2551A78
	0x033152BC LDR X0, [X22]
	0x033152C0 LDR X21, [X21]
	0x033152C4 LDR W8, [X0 + 0xE0]
	0x033152C8 CBNZ W8, 0x33152D0
	0x033152CC BL 0x1C16DFC
	0x033152D0 MOV X0, X21

ISIL:
	001 And W8, W1, 0xFFFF
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 NotImplemented "Instruction CMP not yet implemented."
	005 NotImplemented "Instruction CSET not yet implemented."
	006 Or W0, W9, W8
	007 Return X0

Method: System.Boolean <TZif_ParsePosixTime>b__38_0(System.Char c)

Disassembly:
	0x033152D4 MOV X1, X31
	0x033152D8 BL 0x338C698
	0x033152DC CBZ X19, 0x331530C
	0x033152E0 ADRP X8, 0xE12000

ISIL:
	001 And W8, W1, 0xFFFF
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Int32 <CreateLocalUnity>b__161_0(System.TimeZoneInfo/AdjustmentRule rule1, System.TimeZoneInfo/AdjustmentRule rule2)

Disassembly:
	0x033152E4 LDR X8, [X8 + 0xEC8]
	0x033152E8 MOV X3, X0
	0x033152EC MOV X0, X19
	0x033152F0 MOV X2, X20
	0x033152F4 LDR X1, [X8]
	0x033152F8 LDP X20, X19, [X31 + 0x20]
	0x033152FC LDP X22, X21, [X31 + 0x10]
	0x03315300 MOV X4, X31
	0x03315304 LDP X30, X23, [X31], #0x30
	0x03315308 B 0x32A89BC
	0x0331530C BL 0x1C16F20
	0x03315310 LDR X0, [X0 + 0x90]
	0x03315314 RET
	0x03315318 SUB X31, X31, 0x70
	0x0331531C STP X29, X30, [X31 + 0x10]
	0x03315320 STP X28, X27, [X31 + 0x20]
	0x03315324 STP X26, X25, [X31 + 0x30]
	0x03315328 STP X24, X23, [X31 + 0x40]
	0x0331532C STP X22, X21, [X31 + 0x50]
	0x03315330 STP X20, X19, [X31 + 0x60]
	0x03315334 ADRP X22, 0x10C7000
	0x03315338 ADRP X23, 0xE12000
	0x0331533C ADRP X20, 0xE12000
	0x03315340 ADRP X21, 0xE12000
	0x03315344 ADRP X19, 0xE12000
	0x03315348 LDRB W8, [X22 + 0xB75]
	0x0331534C LDR X23, [X23 + 0xE70]
	0x03315350 LDR X20, [X20 + 0xEF0]
	0x03315354 LDR X21, [X21 + 0xEF8]
	0x03315358 LDR X19, [X19 + 0xF00]
	0x0331535C MOV X24, X0
	0x03315360 TBNZ X8, 0x0, 0x33153F0
	0x03315364 ADRP X0, 0xE10000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x10C8000
	007 Move W8, [X21+2922]
	008 Move X19, X2
	009 Move X20, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDE0000
	015 Move X0, [X0+2544]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2922], W8
	019 Compare X20, 0
	020 JumpIfEqual {43}
	021 Move X8, [X20+16]
	022 Move [X31+8], X8
	023 Compare X19, 0
	024 JumpIfEqual {43}
	025 Move X8, 0xDE0000
	026 Move X8, [X8+2544]
	027 Move X19, [X19+16]
	028 Move X0, [X8]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Add X0, X31, 8
	034 Move X1, X19
	035 Move X2, X31
	036 Call DateTime.CompareTo, X0, X1
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X30, [X31+16]
	040 Move X21, [X31+24]
	041 Add X31, X31, 48
	042 Return X0
	043 Call 0x1C17F20

