Type: System.SpanHelpers

Method: System.Int32 IndexOfAny(ref System.Byte searchSpace, System.Int32 searchSpaceLength, ref System.Byte value, System.Int32 valueLength)

Disassembly:
	0x03391D40 LDRB W8, [X19 + 0x4F]
	0x03391D44 STR X0, [X31 + 0x8]
	0x03391D48 TBNZ X8, 0x0, 0x3391D9C
	0x03391D4C ADRP X0, 0xD9A000
	0x03391D50 LDR X0, [X0 + 0x298]
	0x03391D54 BL 0x1C16CF4
	0x03391D58 ADRP X0, 0xD9A000
	0x03391D5C LDR X0, [X0 + 0x2A0]
	0x03391D60 BL 0x1C16CF4
	0x03391D64 ADRP X0, 0xD9A000
	0x03391D68 LDR X0, [X0 + 0x280]
	0x03391D6C BL 0x1C16CF4
	0x03391D70 ADRP X0, 0xD9A000
	0x03391D74 LDR X0, [X0 + 0x2A8]
	0x03391D78 BL 0x1C16CF4
	0x03391D7C ADRP X0, 0xD9A000
	0x03391D80 LDR X0, [X0 + 0x290]
	0x03391D84 BL 0x1C16CF4
	0x03391D88 ADRP X0, 0xD9A000
	0x03391D8C LDR X0, [X0 + 0x2B0]
	0x03391D90 BL 0x1C16CF4
	0x03391D94 MOVZ W8, 0x1
	0x03391D98 STRB W8, [X19 + 0x4F]
	0x03391D9C ADRP X27, 0xD9A000
	0x03391DA0 ADRP X28, 0xD9A000
	0x03391DA4 LDR X27, [X27 + 0x290]
	0x03391DA8 LDR X28, [X28 + 0x280]
	0x03391DAC LDR X8, [X31 + 0x8]
	0x03391DB0 MOV X0, X31
	0x03391DB4 STP X31, X31, [X31 + 0x28]
	0x03391DB8 STP X31, X31, [X31 + 0x10]
	0x03391DBC ADD X29, X8, W21, 0x1, SXTW

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Compare W3, 0
	008 JumpIfEqual {28}
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X19, X2
	011 Move W22, W1
	012 Move X20, X0
	013 Move W23, W3
	014 Move TEMP, 0
	015 Not TEMP
	016 Move W21, TEMP
	017 Move W1, [X19]
	018 Move X0, X20
	019 Move W2, W22
	020 Call SpanHelpers.IndexOf, X0, X1, X2
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move W21, W0
	023 Move W22, W0
	024 Compare W0, 0
	025 JumpIfEqual {32}
	026 Subtract X23, X23, 1
	027 Add X19, X19, 1
	028 Move W21, W31
	029 Move TEMP, 0
	030 Not TEMP
	031 Move W21, TEMP
	032 Move W0, W21
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Move X23, [X31+56]
	039 Return X0

Method: System.Int32 IndexOf(ref System.Byte searchSpace, System.Byte value, System.Int32 length)

Disassembly:
	0x03391DC0 BL 0x32E15B8
	0x03391DC4 TBZ X0, 0x0, 0x3391E44
	0x03391DC8 LDR X0, [X27]
	0x03391DCC LDR W8, [X0 + 0xE0]
	0x03391DD0 CBNZ W8, 0x3391DD8
	0x03391DD4 BL 0x1C16DFC
	0x03391DD8 LDR X19, [X28]
	0x03391DDC LDR X0, [X19 + 0x20]
	0x03391DE0 LDRB W8, [X0 + 0x135]
	0x03391DE4 TBNZ X8, 0x0, 0x3391DEC
	0x03391DE8 BL 0x1C5C684
	0x03391DEC LDR X8, [X0 + 0xC0]
	0x03391DF0 LDR X0, [X8 + 0x8]
	0x03391DF4 LDRB W8, [X0 + 0x135]
	0x03391DF8 TBNZ X8, 0x0, 0x3391E00
	0x03391DFC BL 0x1C5C684
	0x03391E00 LDR W8, [X0 + 0xE0]
	0x03391E04 CBNZ W8, 0x3391E0C
	0x03391E08 BL 0x1C16DFC
	0x03391E0C LDR X0, [X19 + 0x20]
	0x03391E10 LDRB W8, [X0 + 0x135]
	0x03391E14 TBNZ X8, 0x0, 0x3391E1C
	0x03391E18 BL 0x1C5C684
	0x03391E1C LDR X8, [X0 + 0xC0]
	0x03391E20 LDR X0, [X8 + 0x8]
	0x03391E24 LDRB W8, [X0 + 0x135]
	0x03391E28 TBNZ X8, 0x0, 0x3391E30
	0x03391E2C BL 0x1C5C684
	0x03391E30 LDR X8, [X0 + 0xB8]
	0x03391E34 LDR W8, [X8]
	0x03391E38 CMP W21, W8, LSL
	0x03391E3C B.LT 0x3391E44
	0x03391E40 UBFM W21, W29, 0x1, 0x3
	0x03391E44 CMP W21, 0x3
	0x03391E48 B.LE 0x3391E8C
	0x03391E4C LDURH W8, [X29 - 0x2]
	0x03391E50 CMP W8, W20, UXTH
	0x03391E54 SUB X8, X29, 0x8
	0x03391E58 B.EQ 0x3392224
	0x03391E5C LDURH W9, [X29 - 0x4]
	0x03391E60 CMP W9, W20, UXTH
	0x03391E64 B.EQ 0x3392240
	0x03391E68 LDURH W9, [X29 - 0x6]
	0x03391E6C CMP W9, W20, UXTH
	0x03391E70 B.EQ 0x339225C
	0x03391E74 LDRH W9, [X8]
	0x03391E78 SUB W21, W21, 0x4
	0x03391E7C MOV X29, X8
	0x03391E80 CMP W9, W20, UXTH
	0x03391E84 B.NE 0x3391E44
	0x03391E88 B 0x33921D8
	0x03391E8C ADD W8, W21, 0x1
	0x03391E90 SUB W8, W8, 0x1
	0x03391E94 CMP W8, 0x0
	0x03391E98 B.LE 0x3391EAC
	0x03391E9C LDRH W9, [X29 - 0x2]!
	0x03391EA0 CMP W9, W20, UXTH
	0x03391EA4 B.NE 0x3391E90
	0x03391EA8 B 0x33921D4
	0x03391EAC MOV X0, X31
	0x03391EB0 BL 0x32E15B8
	0x03391EB4 TBZ X0, 0x0, 0x339221C
	0x03391EB8 LDR X8, [X31 + 0x8]
	0x03391EBC SUBS X19, X29, X8
	0x03391EC0 B.LS 0x339221C
	0x03391EC4 LDR X0, [X27]
	0x03391EC8 LDR W8, [X0 + 0xE0]
	0x03391ECC CBNZ W8, 0x3391ED4
	0x03391ED0 BL 0x1C16DFC
	0x03391ED4 LDR X21, [X28]
	0x03391ED8 LDR X0, [X21 + 0x20]
	0x03391EDC LDRB W8, [X0 + 0x135]
	0x03391EE0 TBNZ X8, 0x0, 0x3391EE8
	0x03391EE4 BL 0x1C5C684
	0x03391EE8 LDR X8, [X0 + 0xC0]
	0x03391EEC LDR X0, [X8 + 0x8]
	0x03391EF0 LDRB W8, [X0 + 0x135]
	0x03391EF4 TBNZ X8, 0x0, 0x3391EFC
	0x03391EF8 BL 0x1C5C684
	0x03391EFC LDR W8, [X0 + 0xE0]
	0x03391F00 CBNZ W8, 0x3391F08
	0x03391F04 BL 0x1C16DFC
	0x03391F08 LDR X0, [X21 + 0x20]
	0x03391F0C LDRB W8, [X0 + 0x135]
	0x03391F10 TBNZ X8, 0x0, 0x3391F18
	0x03391F14 BL 0x1C5C684
	0x03391F18 LDR X8, [X0 + 0xC0]
	0x03391F1C LDR X0, [X8 + 0x8]
	0x03391F20 LDRB W8, [X0 + 0x135]
	0x03391F24 TBNZ X8, 0x0, 0x3391F2C
	0x03391F28 BL 0x1C5C684
	0x03391F2C LDR X8, [X0 + 0xB8]
	0x03391F30 ADRP X10, 0xD9A000
	0x03391F34 CMP X19, 0x0
	0x03391F38 CINC X9, X19, LT
	0x03391F3C LDR W8, [X8]
	0x03391F40 LDR X10, [X10 + 0x2A0]
	0x03391F44 UBFM X9, X9, 0x1, 0x3F
	0x03391F48 ADD X0, X31, 0x28
	0x03391F4C SUB W8, W31, W8
	0x03391F50 LDR X2, [X10]
	0x03391F54 MOV W1, W20
	0x03391F58 AND W19, W8, W9, 0x0
	0x03391F5C BL 0x281EB6C
	0x03391F60 CMP W19, 0x1
	0x03391F64 B.LT 0x33921B8
	0x03391F68 LDR X0, [X27]
	0x03391F6C LDR W8, [X0 + 0xE0]
	0x03391F70 CBNZ W8, 0x3391F78
	0x03391F74 BL 0x1C16DFC
	0x03391F78 LDR X21, [X28]
	0x03391F7C LDR X0, [X21 + 0x20]
	0x03391F80 LDRB W8, [X0 + 0x135]
	0x03391F84 TBNZ X8, 0x0, 0x3391F8C
	0x03391F88 BL 0x1C5C684
	0x03391F8C LDR X8, [X0 + 0xC0]
	0x03391F90 LDR X0, [X8 + 0x8]
	0x03391F94 LDRB W8, [X0 + 0x135]
	0x03391F98 TBNZ X8, 0x0, 0x3391FA0
	0x03391F9C BL 0x1C5C684
	0x03391FA0 LDR W8, [X0 + 0xE0]
	0x03391FA4 CBNZ W8, 0x3391FAC
	0x03391FA8 BL 0x1C16DFC
	0x03391FAC LDR X0, [X21 + 0x20]
	0x03391FB0 LDRB W8, [X0 + 0x135]
	0x03391FB4 TBNZ X8, 0x0, 0x3391FBC
	0x03391FB8 BL 0x1C5C684
	0x03391FBC LDR X8, [X0 + 0xC0]
	0x03391FC0 LDR X0, [X8 + 0x8]
	0x03391FC4 LDRB W8, [X0 + 0x135]
	0x03391FC8 TBNZ X8, 0x0, 0x3391FD0
	0x03391FCC BL 0x1C5C684
	0x03391FD0 ADRP X9, 0xD9A000
	0x03391FD4 LDR X8, [X0 + 0xB8]
	0x03391FD8 LDR X9, [X9 + 0x2B0]
	0x03391FDC LDP X23, X21, [X31 + 0x28]
	0x03391FE0 LDR X25, [X9]
	0x03391FE4 LDRSW X9, [X8]
	0x03391FE8 LDR X8, [X25 + 0x38]
	0x03391FEC SUB X26, X29, X9, 0x1, LSL
	0x03391FF0 LDP X24, X22, [X26]
	0x03391FF4 CBNZ X8, 0x3392004
	0x03391FF8 MOV X0, X25
	0x03391FFC BL 0x1C5C6E0
	0x03392000 LDR X8, [X25 + 0x38]
	0x03392004 LDR X0, [X8 + 0x10]
	0x03392008 LDRB W8, [X0 + 0x135]
	0x0339200C TBNZ X8, 0x0, 0x3392014
	0x03392010 BL 0x1C5C684
	0x03392014 LDR W8, [X0 + 0xE0]
	0x03392018 CBNZ W8, 0x3392020
	0x0339201C BL 0x1C16DFC
	0x03392020 LDR X8, [X25 + 0x38]
	0x03392024 MOV X0, X23
	0x03392028 MOV X1, X21
	0x0339202C MOV X2, X24
	0x03392030 LDR X4, [X8 + 0x8]
	0x03392034 MOV X3, X22
	0x03392038 BL 0x22BA330
	0x0339203C ADRP X8, 0xD99000
	0x03392040 LDR X8, [X8 + 0x2A8]
	0x03392044 MOV X21, X0
	0x03392048 MOV X22, X1
	0x0339204C LDR X23, [X8]
	0x03392050 LDR X0, [X23 + 0x20]
	0x03392054 LDRB W8, [X0 + 0x135]
	0x03392058 TBNZ X8, 0x0, 0x3392060
	0x0339205C BL 0x1C5C684
	0x03392060 LDR X8, [X0 + 0xC0]
	0x03392064 LDR X0, [X8 + 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W20, W1
	007 Move X21, X0
	008 Move W0, W31
	009 Move X1, X31
	010 Move W22, W2
	011 Call IntPtr.op_Explicit, X0
	012 Move X19, X0
	013 Move W0, W22
	014 Move X1, X31
	015 Call IntPtr.op_Explicit, X0
	016 Move X1, X31
	017 Move X22, X0
	018 Call IntPtr.op_Explicit, X0
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X0, X22
	021 Move X1, X31
	022 Call IntPtr.op_Explicit, X0
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move W1, 4
	025 Move X0, X22
	026 Move X2, X31
	027 Call IntPtr.op_Subtraction, X0, X1
	028 Move W8, [X21]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X22, X0
	031 Move W1, 1
	032 Move X0, X19
	033 Move X2, X31
	034 Call IntPtr.op_Addition, X0, X1
	035 Move W8, [X21]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move W1, 1
	038 Move W1, 8
	039 Move X0, X22
	040 Move X2, X31
	041 Call IntPtr.op_Subtraction, X0, X1
	042 Move W8, [X21]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X22, X0
	045 Move W1, 1
	046 Move X0, X19
	047 Move X2, X31
	048 Call IntPtr.op_Addition, X0, X1
	049 Move W8, [X21]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move W1, 2
	052 Move X0, X19
	053 Move X2, X31
	054 Call IntPtr.op_Addition, X0, X1
	055 Move W8, [X21]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move W1, 3
	058 Move X0, X19
	059 Move X2, X31
	060 Call IntPtr.op_Addition, X0, X1
	061 Move W8, [X21]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move W1, 4
	064 Move X0, X19
	065 Move X2, X31
	066 Call IntPtr.op_Addition, X0, X1
	067 Move W8, [X21]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move W1, 5
	070 Move X0, X19
	071 Move X2, X31
	072 Call IntPtr.op_Addition, X0, X1
	073 Move W8, [X21]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move W1, 6
	076 Move X0, X19
	077 Move X2, X31
	078 Call IntPtr.op_Addition, X0, X1
	079 Move W8, [X21]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move W1, 7
	082 Move X0, X19
	083 Move X2, X31
	084 Call IntPtr.op_Addition, X0, X1
	085 Move W8, [X21]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move W1, 8
	088 Move X0, X19
	089 Move X2, X31
	090 Call IntPtr.op_Addition, X0, X1
	091 Move X19, X0
	092 Move X0, X22
	093 Move X1, X31
	094 Call IntPtr.op_Explicit, X0
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move W1, 2
	097 Move X0, X19
	098 Move X2, X31
	099 Call IntPtr.op_Addition, X0, X1
	100 Move W8, [X21]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move W1, 2
	103 Move W1, 4
	104 Move W1, 5
	105 Move W1, 6
	106 Move W1, 7
	107 Move X0, X19
	108 Move X2, X31
	109 Call IntPtr.op_Addition, X0, X1
	110 Move X1, X31
	111 Call IntPtr.op_Explicit, X0
	112 Move W1, 3
	113 Move X0, X19
	114 Move X2, X31
	115 Call IntPtr.op_Addition, X0, X1
	116 Move W8, [X21]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move W1, 3
	119 Move X0, X19
	120 Move X2, X31
	121 Call IntPtr.op_Addition, X0, X1
	122 Move W1, 4
	123 Move X0, X19
	124 Move X2, X31
	125 Call IntPtr.op_Addition, X0, X1
	126 Move X19, X0
	127 Move X0, X22
	128 Move X1, X31
	129 Call IntPtr.op_Explicit, X0
	130 Compare X0, 0
	131 JumpIfEqual {143}
	132 Move W1, 1
	133 Move X0, X22
	134 Move X2, X31
	135 Call IntPtr.op_Subtraction, X0, X1
	136 Move W8, [X21]
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move X22, X0
	139 Move W1, 1
	140 Move X0, X19
	141 Move X1, X31
	142 Call IntPtr.op_Explicit, X0
	143 Move TEMP, 0
	144 Not TEMP
	145 Move W0, TEMP
	146 Move X20, [X31+32]
	147 Move X19, [X31+40]
	148 Move X22, [X31+16]
	149 Move X21, [X31+24]
	150 Move X30, [X31+48]
	151 Return X0

Method: System.Boolean SequenceEqual(ref System.Byte first, ref System.Byte second, System.UInt64 length)

Disassembly:
	0x03392068 LDRB W8, [X0 + 0x135]
	0x0339206C TBNZ X8, 0x0, 0x3392074
	0x03392070 BL 0x1C5C684
	0x03392074 LDR W8, [X0 + 0xE0]
	0x03392078 CBNZ W8, 0x3392080
	0x0339207C BL 0x1C16DFC
	0x03392080 LDR X0, [X23 + 0x20]
	0x03392084 LDRB W8, [X0 + 0x135]
	0x03392088 TBNZ X8, 0x0, 0x3392090
	0x0339208C BL 0x1C5C684
	0x03392090 LDR X8, [X0 + 0xC0]
	0x03392094 LDR X0, [X8 + 0x8]
	0x03392098 LDRB W8, [X0 + 0x135]
	0x0339209C TBNZ X8, 0x0, 0x33920A4
	0x033920A0 BL 0x1C5C684
	0x033920A4 LDR X8, [X0 + 0xB8]
	0x033920A8 ADD X0, X31, 0x10
	0x033920AC MOV X1, X21
	0x033920B0 MOV X2, X22
	0x033920B4 LDUR V0, [X8 + 0x8]
	0x033920B8 ADRP X8, 0xD99000
	0x033920BC LDR X8, [X8 + 0x298]
	0x033920C0 STR V0, [X31 + 0x1]
	0x033920C4 LDR X3, [X8]
	0x033920C8 BL 0x2822174
	0x033920CC TBZ X0, 0x0, 0x33921F0
	0x033920D0 LDR X0, [X27]
	0x033920D4 LDR W8, [X0 + 0xE0]
	0x033920D8 CBNZ W8, 0x33920E0
	0x033920DC BL 0x1C16DFC
	0x033920E0 LDR X21, [X28]
	0x033920E4 LDR X0, [X21 + 0x20]
	0x033920E8 LDRB W8, [X0 + 0x135]
	0x033920EC TBNZ X8, 0x0, 0x33920F4
	0x033920F0 BL 0x1C5C684
	0x033920F4 LDR X8, [X0 + 0xC0]
	0x033920F8 LDR X0, [X8 + 0x8]
	0x033920FC LDRB W8, [X0 + 0x135]
	0x03392100 TBNZ X8, 0x0, 0x3392108
	0x03392104 BL 0x1C5C684
	0x03392108 LDR W8, [X0 + 0xE0]
	0x0339210C CBNZ W8, 0x3392114
	0x03392110 BL 0x1C16DFC
	0x03392114 LDR X0, [X21 + 0x20]
	0x03392118 LDRB W8, [X0 + 0x135]
	0x0339211C TBNZ X8, 0x0, 0x3392124
	0x03392120 BL 0x1C5C684
	0x03392124 LDR X8, [X0 + 0xC0]
	0x03392128 LDR X0, [X8 + 0x8]
	0x0339212C LDRB W8, [X0 + 0x135]
	0x03392130 TBNZ X8, 0x0, 0x3392138
	0x03392134 BL 0x1C5C684
	0x03392138 LDR X22, [X28]
	0x0339213C LDR X9, [X0 + 0xB8]
	0x03392140 LDR X8, [X22 + 0x20]
	0x03392144 LDRSW X21, [X9]
	0x03392148 LDRB W10, [X8 + 0x135]
	0x0339214C TBNZ X10, 0x0, 0x339215C
	0x03392150 MOV X0, X8
	0x03392154 BL 0x1C5C684
	0x03392158 MOV X8, X0
	0x0339215C LDR X8, [X8 + 0xC0]
	0x03392160 LDR X0, [X8 + 0x8]
	0x03392164 LDRB W8, [X0 + 0x135]
	0x03392168 TBNZ X8, 0x0, 0x3392170
	0x0339216C BL 0x1C5C684
	0x03392170 LDR W8, [X0 + 0xE0]
	0x03392174 CBNZ W8, 0x339217C
	0x03392178 BL 0x1C16DFC
	0x0339217C LDR X0, [X22 + 0x20]
	0x03392180 LDRB W8, [X0 + 0x135]
	0x03392184 TBNZ X8, 0x0, 0x339218C
	0x03392188 BL 0x1C5C684
	0x0339218C LDR X8, [X0 + 0xC0]
	0x03392190 SUB X29, X29, X21, 0x1, LSL
	0x03392194 LDR X0, [X8 + 0x8]
	0x03392198 LDRB W8, [X0 + 0x135]
	0x0339219C TBNZ X8, 0x0, 0x33921A4
	0x033921A0 BL 0x1C5C684
	0x033921A4 LDR X8, [X0 + 0xB8]
	0x033921A8 LDR W8, [X8]
	0x033921AC SUB W19, W19, W8
	0x033921B0 CMP W19, 0x0
	0x033921B4 B.GT 0x3391F68
	0x033921B8 LDR X8, [X31 + 0x8]
	0x033921BC SUBS X8, X29, X8
	0x033921C0 B.LS 0x339221C
	0x033921C4 CMP X8, 0x0
	0x033921C8 CINC X8, X8, LT
	0x033921CC UBFM X21, X8, 0x1, 0x3F
	0x033921D0 B 0x3391E44
	0x033921D4 MOV X8, X29

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move X19, X1
	010 Move X20, X0
	011 Move W0, W31
	012 Move X1, X31
	013 Move X22, X2
	014 Call IntPtr.op_Explicit, X0
	015 Move X21, X0
	016 Move X0, X22
	017 Move X1, X31
	018 Call IntPtr.op_Explicit, X0
	019 Move X1, X31
	020 Move X22, X0
	021 Call IntPtr.op_Explicit, X0
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move W1, 8
	024 Move X0, X22
	025 Move X2, X31
	026 Call IntPtr.op_Subtraction, X0, X1
	027 Move X22, X0
	028 Move X1, X31
	029 Call IntPtr.op_Explicit, X0
	030 Move X23, X0
	031 Move X0, X21
	032 Move X1, X31
	033 Call IntPtr.op_Explicit, X0
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X0, [X20]
	036 Move X1, [X19]
	037 Move X2, X31
	038 Call UIntPtr.op_Inequality, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {96}
	043 Move W1, 8
	044 Move X0, X21
	045 Move X2, X31
	046 Call IntPtr.op_Addition, X0, X1
	047 Move X21, X0
	048 Move X0, X22
	049 Move X0, X22
	050 Move X1, X31
	051 Call IntPtr.op_Explicit, X0
	052 Move X23, X0
	053 Move X0, X21
	054 Move X1, X31
	055 Call IntPtr.op_Explicit, X0
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move W8, [X20]
	058 Move W9, [X19]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 NotImplemented "Instruction CSET not yet implemented."
	061 Move W1, 1
	062 Move X0, X21
	063 Move X2, X31
	064 Call IntPtr.op_Addition, X0, X1
	065 Move X21, X0
	066 Move X0, X22
	067 Move X1, X31
	068 Call IntPtr.op_Explicit, X0
	069 Move X24, X0
	070 Move X0, X21
	071 Move X1, X31
	072 Call IntPtr.op_Explicit, X0
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move W23, 1
	075 Move W0, W23
	076 Move X20, [X31+48]
	077 Move X19, [X31+56]
	078 Move X22, [X31+32]
	079 Move X21, [X31+40]
	080 Move X24, [X31+16]
	081 Move X23, [X31+24]
	082 Move X30, [X31+64]
	083 Return X0
	084 Move X0, [X20]
	085 Move X1, [X19]
	086 Move X20, [X31+48]
	087 Move X19, [X31+56]
	088 Move X22, [X31+32]
	089 Move X21, [X31+40]
	090 Move X24, [X31+16]
	091 Move X23, [X31+24]
	092 Move X2, X31
	093 Move X30, [X31+64]
	094 Call UIntPtr.op_Equality, X0, X1
	095 Return X0
	096 Move W23, W31

Method: System.Int32 SequenceCompareTo(ref System.Char first, System.Int32 firstLength, ref System.Char second, System.Int32 secondLength)

Disassembly:
	0x033921D8 LDR X9, [X31 + 0x8]
	0x033921DC SUB X8, X8, X9
	0x033921E0 CMP X8, 0x0
	0x033921E4 CINC X8, X8, LT
	0x033921E8 UBFM X0, X8, 0x1, 0x3F
	0x033921EC B 0x3392274
	0x033921F0 MOV X0, X21
	0x033921F4 MOV X1, X22
	0x033921F8 MOV X2, X31
	0x033921FC BL 0x33A3220
	0x03392200 LDR X8, [X31 + 0x8]
	0x03392204 SUB X8, X26, X8
	0x03392208 CMP X8, 0x0
	0x0339220C CINC X8, X8, LT
	0x03392210 UBFM X8, X8, 0x1, 0x3F
	0x03392214 ADD W0, W0, W8
	0x03392218 B 0x3392274
	0x0339221C MOVN W0, 0x0
	0x03392220 B 0x3392274
	0x03392224 LDR X9, [X31 + 0x8]
	0x03392228 SUB X8, X8, X9
	0x0339222C CMP X8, 0x0
	0x03392230 CINC X8, X8, LT
	0x03392234 UBFM X8, X8, 0x1, 0x3F
	0x03392238 ADD W0, W8, 0x3
	0x0339223C B 0x3392274
	0x03392240 LDR X9, [X31 + 0x8]
	0x03392244 SUB X8, X8, X9
	0x03392248 CMP X8, 0x0
	0x0339224C CINC X8, X8, LT
	0x03392250 UBFM X8, X8, 0x1, 0x3F
	0x03392254 ADD W0, W8, 0x2
	0x03392258 B 0x3392274
	0x0339225C LDR X9, [X31 + 0x8]
	0x03392260 SUB X8, X8, X9
	0x03392264 CMP X8, 0x0
	0x03392268 CINC X8, X8, LT
	0x0339226C UBFM X8, X8, 0x1, 0x3F
	0x03392270 ADD W0, W8, 0x1
	0x03392274 LDR X8, [X31]
	0x03392278 LDR X8, [X8 + 0x28]
	0x0339227C LDR X9, [X31 + 0x38]
	0x03392280 CMP X8, X9
	0x03392284 B.NE 0x33922A8
	0x03392288 LDP X20, X19, [X31 + 0x90]
	0x0339228C LDP X22, X21, [X31 + 0x80]
	0x03392290 LDP X24, X23, [X31 + 0x70]
	0x03392294 LDP X26, X25, [X31 + 0x60]
	0x03392298 LDP X28, X27, [X31 + 0x50]
	0x0339229C LDP X29, X30, [X31 + 0x40]
	0x033922A0 ADD X31, X31, 0xA0
	0x033922A4 RET
	0x033922A8 BL 0x3EB1B20
	0x033922AC SUB X31, X31, 0x60
	0x033922B0 STP X30, X25, [X31 + 0x20]
	0x033922B4 STP X24, X23, [X31 + 0x30]
	0x033922B8 STP X22, X21, [X31 + 0x40]
	0x033922BC STP X20, X19, [X31 + 0x50]
	0x033922C0 MRS X22, 0xC000
	0x033922C4 LDR X8, [X22 + 0x28]
	0x033922C8 ADRP X23, 0x104B000
	0x033922CC ADRP X21, 0xD99000
	0x033922D0 MOV X19, X1
	0x033922D4 STR X8, [X31 + 0x18]
	0x033922D8 LDRB W8, [X23 + 0x50]
	0x033922DC LDR X21, [X21 + 0x2B8]
	0x033922E0 MOV X20, X0
	0x033922E4 TBNZ X8, 0x0, 0x3392320
	0x033922E8 ADRP X0, 0xD99000
	0x033922EC LDR X0, [X0 + 0x2C0]
	0x033922F0 BL 0x1C16CF4
	0x033922F4 ADRP X0, 0xD99000
	0x033922F8 LDR X0, [X0 + 0x2C8]
	0x033922FC BL 0x1C16CF4
	0x03392300 ADRP X0, 0xD99000
	0x03392304 LDR X0, [X0 + 0x2D0]
	0x03392308 BL 0x1C16CF4
	0x0339230C ADRP X0, 0xD99000
	0x03392310 LDR X0, [X0 + 0x2B8]
	0x03392314 BL 0x1C16CF4
	0x03392318 MOVZ W8, 0x1
	0x0339231C STRB W8, [X23 + 0x50]
	0x03392320 LDR X21, [X21]
	0x03392324 STP X31, X31, [X31 + 0x8]
	0x03392328 LDR X8, [X21 + 0x38]
	0x0339232C CBNZ X8, 0x339233C
	0x03392330 MOV X0, X21
	0x03392334 BL 0x1C5C6E0
	0x03392338 LDR X8, [X21 + 0x38]
	0x0339233C LDR X0, [X8 + 0x10]
	0x03392340 LDRB W8, [X0 + 0x135]
	0x03392344 TBNZ X8, 0x0, 0x339234C
	0x03392348 BL 0x1C5C684
	0x0339234C LDR W8, [X0 + 0xE0]
	0x03392350 CBNZ W8, 0x3392358
	0x03392354 BL 0x1C16DFC
	0x03392358 LDR X8, [X21 + 0x38]
	0x0339235C ADRP X21, 0xD99000
	0x03392360 ADRP X23, 0xD99000
	0x03392364 ADRP X24, 0xD99000
	0x03392368 LDR X2, [X8 + 0x8]
	0x0339236C LDR X21, [X21 + 0x2D0]
	0x03392370 LDR X23, [X23 + 0x2C0]
	0x03392374 LDR X24, [X24 + 0x2C8]
	0x03392378 MOV X0, X20
	0x0339237C MOV X1, X19
	0x03392380 BL 0x28254B0
	0x03392384 MOV W20, W31
	0x03392388 MOV W19, W31
	0x0339238C STP X0, X1, [X31 + 0x8]
	0x03392390 LDR X0, [X21]
	0x03392394 LDR W8, [X0 + 0xE0]
	0x03392398 CBNZ W8, 0x33923A0
	0x0339239C BL 0x1C16DFC
	0x033923A0 LDR X25, [X23]
	0x033923A4 LDR X0, [X25 + 0x20]
	0x033923A8 LDRB W8, [X0 + 0x135]
	0x033923AC TBNZ X8, 0x0, 0x33923B4
	0x033923B0 BL 0x1C5C684
	0x033923B4 LDR X8, [X0 + 0xC0]
	0x033923B8 LDR X0, [X8 + 0x8]
	0x033923BC LDRB W8, [X0 + 0x135]
	0x033923C0 TBNZ X8, 0x0, 0x33923C8
	0x033923C4 BL 0x1C5C684
	0x033923C8 LDR W8, [X0 + 0xE0]
	0x033923CC CBNZ W8, 0x33923D4
	0x033923D0 BL 0x1C16DFC
	0x033923D4 LDR X0, [X25 + 0x20]
	0x033923D8 LDRB W8, [X0 + 0x135]
	0x033923DC TBNZ X8, 0x0, 0x33923E4
	0x033923E0 BL 0x1C5C684
	0x033923E4 LDR X8, [X0 + 0xC0]
	0x033923E8 LDR X0, [X8 + 0x8]
	0x033923EC LDRB W8, [X0 + 0x135]
	0x033923F0 TBNZ X8, 0x0, 0x33923F8
	0x033923F4 BL 0x1C5C684
	0x033923F8 LDR X8, [X0 + 0xB8]
	0x033923FC LDR W8, [X8]
	0x03392400 CMP W19, W8
	0x03392404 B.GE 0x3392438
	0x03392408 LDR X0, [X21]
	0x0339240C LDR W8, [X0 + 0xE0]
	0x03392410 CBNZ W8, 0x3392418
	0x03392414 BL 0x1C16DFC
	0x03392418 LDR X2, [X24]
	0x0339241C ADD X0, X31, 0x8
	0x03392420 MOV W1, W19
	0x03392424 BL 0x282C740
	0x03392428 CBNZ X0, 0x339243C
	0x0339242C ADD W19, W19, 0x1
	0x03392430 ADD W20, W20, 0x4
	0x03392434 B 0x3392390
	0x03392438 MOV X0, X31
	0x0339243C LDR X8, [X22 + 0x28]
	0x03392440 LDR X9, [X31 + 0x18]
	0x03392444 CMP X8, X9
	0x03392448 B.NE 0x3392484
	0x0339244C MOVZ X9, 0x4
	0x03392450 SUB X8, X0, 0x1
	0x03392454 MOVK X9, 0x20000
	0x03392458 EOR X8, X8, X0, 0x0
	0x0339245C MOVK X9, 0x1
	0x03392460 MUL X8, X8, X9
	0x03392464 UBFM X8, X8, 0x31, 0x3F
	0x03392468 ADD W0, W8, W20
	0x0339246C LDP X20, X19, [X31 + 0x50]
	0x03392470 LDP X22, X21, [X31 + 0x40]
	0x03392474 LDP X24, X23, [X31 + 0x30]
	0x03392478 LDP X30, X25, [X31 + 0x20]
	0x0339247C ADD X31, X31, 0x60
	0x03392480 RET
	0x03392484 BL 0x3EB1B20
	0x03392488 MOVZ X9, 0x4
	0x0339248C SUB X8, X0, 0x1
	0x03392490 MOVK X9, 0x20000
	0x03392494 EOR X8, X8, X0, 0x0
	0x03392498 MOVK X9, 0x1
	0x0339249C MUL X8, X8, X9
	0x033924A0 UBFM X0, X8, 0x31, 0x3F
	0x033924A4 RET
	0x033924A8 SUB X31, X31, 0x50
	0x033924AC STP X30, X23, [X31 + 0x20]
	0x033924B0 STP X22, X21, [X31 + 0x30]
	0x033924B4 STP X20, X19, [X31 + 0x40]
	0x033924B8 MRS X22, 0xC000
	0x033924BC LDR X8, [X22 + 0x28]
	0x033924C0 ADRP X23, 0x104B000
	0x033924C4 ADRP X21, 0xD99000
	0x033924C8 MOV X19, X1
	0x033924CC STR X8, [X31 + 0x18]
	0x033924D0 LDRB W8, [X23 + 0x51]
	0x033924D4 LDR X21, [X21 + 0x2B8]
	0x033924D8 MOV X20, X0
	0x033924DC TBNZ X8, 0x0, 0x3392518
	0x033924E0 ADRP X0, 0xD99000
	0x033924E4 LDR X0, [X0 + 0x2C0]
	0x033924E8 BL 0x1C16CF4
	0x033924EC ADRP X0, 0xD99000
	0x033924F0 LDR X0, [X0 + 0x2C8]
	0x033924F4 BL 0x1C16CF4
	0x033924F8 ADRP X0, 0xD99000
	0x033924FC LDR X0, [X0 + 0x2D0]
	0x03392500 BL 0x1C16CF4
	0x03392504 ADRP X0, 0xD99000
	0x03392508 LDR X0, [X0 + 0x2B8]
	0x0339250C BL 0x1C16CF4
	0x03392510 MOVZ W8, 0x1
	0x03392514 STRB W8, [X23 + 0x51]
	0x03392518 LDR X21, [X21]
	0x0339251C STP X31, X31, [X31 + 0x8]
	0x03392520 LDR X8, [X21 + 0x38]
	0x03392524 CBNZ X8, 0x3392534
	0x03392528 MOV X0, X21
	0x0339252C BL 0x1C5C6E0
	0x03392530 LDR X8, [X21 + 0x38]
	0x03392534 LDR X0, [X8 + 0x10]
	0x03392538 LDRB W8, [X0 + 0x135]
	0x0339253C TBNZ X8, 0x0, 0x3392544
	0x03392540 BL 0x1C5C684
	0x03392544 ADRP X23, 0xD99000
	0x03392548 LDR W8, [X0 + 0xE0]
	0x0339254C LDR X23, [X23 + 0x2D0]
	0x03392550 CBNZ W8, 0x3392558
	0x03392554 BL 0x1C16DFC
	0x03392558 LDR X8, [X21 + 0x38]
	0x0339255C ADRP X21, 0xD99000
	0x03392560 MOV X0, X20
	0x03392564 MOV X1, X19
	0x03392568 LDR X2, [X8 + 0x8]
	0x0339256C LDR X21, [X21 + 0x2C0]
	0x03392570 BL 0x28254B0
	0x03392574 MOV X8, X0
	0x03392578 LDR X0, [X23]
	0x0339257C STP X8, X1, [X31 + 0x8]
	0x03392580 LDR W8, [X0 + 0xE0]
	0x03392584 CBNZ W8, 0x339258C
	0x03392588 BL 0x1C16DFC
	0x0339258C LDR X19, [X21]
	0x03392590 LDR X0, [X19 + 0x20]
	0x03392594 LDRB W8, [X0 + 0x135]
	0x03392598 TBNZ X8, 0x0, 0x33925A0
	0x0339259C BL 0x1C5C684
	0x033925A0 LDR X8, [X0 + 0xC0]
	0x033925A4 LDR X0, [X8 + 0x8]
	0x033925A8 LDRB W8, [X0 + 0x135]
	0x033925AC TBNZ X8, 0x0, 0x33925B4
	0x033925B0 BL 0x1C5C684
	0x033925B4 LDR W8, [X0 + 0xE0]
	0x033925B8 CBNZ W8, 0x33925C0
	0x033925BC BL 0x1C16DFC
	0x033925C0 LDR X0, [X19 + 0x20]
	0x033925C4 LDRB W8, [X0 + 0x135]
	0x033925C8 TBNZ X8, 0x0, 0x33925D0
	0x033925CC BL 0x1C5C684
	0x033925D0 LDR X8, [X0 + 0xC0]
	0x033925D4 LDR X0, [X8 + 0x8]
	0x033925D8 LDRB W8, [X0 + 0x135]
	0x033925DC TBNZ X8, 0x0, 0x33925E4
	0x033925E0 BL 0x1C5C684
	0x033925E4 LDR X8, [X0 + 0xB8]
	0x033925E8 ADRP X21, 0xD99000
	0x033925EC LDR W9, [X8]
	0x033925F0 LDR X21, [X21 + 0x2C8]
	0x033925F4 UBFM W8, W9, 0x1E, 0x1D
	0x033925F8 SUB W8, W8, 0x4
	0x033925FC SUB W19, W9, 0x1
	0x03392600 MOV W20, W8
	0x03392604 TBNZ X19, 0x1F, 0x3392654
	0x03392608 LDR X0, [X23]
	0x0339260C LDR W8, [X0 + 0xE0]
	0x03392610 CBNZ W8, 0x3392618
	0x03392614 BL 0x1C16DFC
	0x03392618 LDR X2, [X21]
	0x0339261C ADD X0, X31, 0x8
	0x03392620 MOV W1, W19
	0x03392624 BL 0x282C740
	0x03392628 SUB W8, W20, 0x4
	0x0339262C SUB W19, W19, 0x1
	0x03392630 CBZ X0, 0x3392600
	0x03392634 CMP X0, 0x1
	0x03392638 B.LT 0x3392654
	0x0339263C MOVZ W8, 0x3
	0x03392640 UBFM X0, X0, 0x30, 0x2F
	0x03392644 CMP X0, 0x0
	0x03392648 SUB W8, W8, 0x1
	0x0339264C B.GT 0x3392640
	0x03392650 B 0x3392658
	0x03392654 MOVZ W8, 0x3
	0x03392658 LDR X9, [X22 + 0x28]
	0x0339265C LDR X10, [X31 + 0x18]
	0x03392660 CMP X9, X10
	0x03392664 B.NE 0x3392680
	0x03392668 ADD W0, W8, W20
	0x0339266C LDP X20, X19, [X31 + 0x40]
	0x03392670 LDP X22, X21, [X31 + 0x30]
	0x03392674 LDP X30, X23, [X31 + 0x20]
	0x03392678 ADD X31, X31, 0x50
	0x0339267C RET
	0x03392680 BL 0x3EB1B20
	0x03392684 CMP X0, 0x1
	0x03392688 B.LT 0x33926A8
	0x0339268C MOV X8, X0
	0x03392690 MOVZ W0, 0x3
	0x03392694 UBFM X8, X8, 0x30, 0x2F
	0x03392698 CMP X8, 0x0
	0x0339269C SUB W0, W0, 0x1
	0x033926A0 B.GT 0x3392694
	0x033926A4 RET
	0x033926A8 MOVZ W0, 0x3
	0x033926AC RET
	0x033926B0 STP X30, X25, [X31 - 0x40]!
	0x033926B4 STP X24, X23, [X31 + 0x10]
	0x033926B8 STP X22, X21, [X31 + 0x20]
	0x033926BC STP X20, X19, [X31 + 0x30]
	0x033926C0 ADRP X25, 0x104B000
	0x033926C4 ADRP X24, 0xD95000
	0x033926C8 LDRB W8, [X25 + 0x52]
	0x033926CC LDR X24, [X24 + 0x930]
	0x033926D0 MOV X23, X4
	0x033926D4 MOV X19, X3
	0x033926D8 MOV X20, X2
	0x033926DC MOV X21, X1
	0x033926E0 MOV X22, X0
	0x033926E4 TBNZ X8, 0x0, 0x3392714
	0x033926E8 ADRP X0, 0xD95000
	0x033926EC LDR X0, [X0 + 0x930]
	0x033926F0 BL 0x1C16CF4
	0x033926F4 ADRP X0, 0xD98000
	0x033926F8 LDR X0, [X0 + 0xF68]
	0x033926FC BL 0x1C16CF4
	0x03392700 ADRP X0, 0xD90000
	0x03392704 LDR X0, [X0 + 0x28]
	0x03392708 BL 0x1C16CF4
	0x0339270C MOVZ W8, 0x1
	0x03392710 STRB W8, [X25 + 0x52]
	0x03392714 LDR X0, [X24]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 NotImplemented "Instruction MRS not yet implemented."
	015 Move X8, [X26+40]
	016 Move X21, 0x104C000
	017 Move W22, W3
	018 Move X19, X2
	019 Move [X31+40], X8
	020 Move W8, [X21+77]
	021 Move W23, W1
	022 Move X20, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {41}
	027 Move X0, 0xD64000
	028 Move X0, [X0+368]
	029 Call 0x1C17CF4
	030 Move X0, 0xD9A000
	031 Move X0, [X0+640]
	032 Call 0x1C17CF4
	033 Move X0, 0xD9A000
	034 Move X0, [X0+648]
	035 Call 0x1C17CF4
	036 Move X0, 0xD9A000
	037 Move X0, [X0+656]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X21+77], W8
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Subtract W25, W23, W22
	043 NotImplemented "Instruction CMP not yet implemented."
	044 NotImplemented "Instruction CSEL not yet implemented."
	045 Move X1, X31
	046 Call IntPtr.op_Explicit, X0
	047 Move X22, X0
	048 Move W0, W31
	049 Move X1, X31
	050 Call IntPtr.op_Explicit, X0
	051 Move X23, X0
	052 Move X0, X22
	053 Move X1, X31
	054 Call IntPtr.op_Explicit, X0
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X0, X31
	057 Move [X31+8], X26
	058 Call Vector.get_IsHardwareAccelerated
	059 Move [X31+20], W25
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {302}
	064 Move X0, X22
	065 Move X1, X31
	066 Call IntPtr.op_Explicit, X0
	067 Move X26, 0xD9A000
	068 Move X26, [X26+656]
	069 Move X24, X0
	070 Move X8, [X26]
	071 Move W9, [X8+224]
	072 Compare W9, 0
	073 JumpIfNotEqual {76}
	074 Move X0, X8
	075 Call 0x1C17DFC
	076 Move X8, 0xD9A000
	077 Move X8, [X8+640]
	078 Move X21, [X8]
	079 Move X0, [X21+32]
	080 Move W8, [X0+309]
	081 Move TEMP, X8
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfEqual {86}
	085 Call 0x1C5D684
	086 Move X8, [X0+192]
	087 Move X0, [X8+8]
	088 Move W8, [X0+309]
	089 Move TEMP, X8
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfEqual {94}
	093 Call 0x1C5D684
	094 Move W8, [X0+224]
	095 Compare W8, 0
	096 JumpIfNotEqual {98}
	097 Call 0x1C17DFC
	098 Move X0, [X21+32]
	099 Move W8, [X0+309]
	100 Move TEMP, X8
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfEqual {105}
	104 Call 0x1C5D684
	105 Move X8, [X0+192]
	106 Move X0, [X8+8]
	107 Move W8, [X0+309]
	108 Move TEMP, X8
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfEqual {113}
	112 Call 0x1C5D684
	113 Move X8, [X0+184]
	114 NotImplemented "Instruction LDRSW not yet implemented."
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X0, [X26]
	117 Move W8, [X0+224]
	118 Compare W8, 0
	119 JumpIfNotEqual {121}
	120 Call 0x1C17DFC
	121 Move X8, 0xD9A000
	122 Move X8, [X8+640]
	123 Move X21, [X8]
	124 Move X0, [X21+32]
	125 Move W8, [X0+309]
	126 Move TEMP, X8
	127 And TEMP, TEMP, 1
	128 Compare TEMP, 1
	129 JumpIfEqual {131}
	130 Call 0x1C5D684
	131 Move X8, [X0+192]
	132 Move X0, [X8+8]
	133 Move W8, [X0+309]
	134 Move TEMP, X8
	135 And TEMP, TEMP, 1
	136 Compare TEMP, 1
	137 JumpIfEqual {139}
	138 Call 0x1C5D684
	139 Move W8, [X0+224]
	140 Compare W8, 0
	141 JumpIfNotEqual {143}
	142 Call 0x1C17DFC
	143 Move X0, [X21+32]
	144 Move W8, [X0+309]
	145 Move TEMP, X8
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfEqual {150}
	149 Call 0x1C5D684
	150 Move X8, [X0+192]
	151 Move X0, [X8+8]
	152 Move W8, [X0+309]
	153 Move TEMP, X8
	154 And TEMP, TEMP, 1
	155 Compare TEMP, 1
	156 JumpIfEqual {158}
	157 Call 0x1C5D684
	158 Move X8, [X0+184]
	159 Move X0, X22
	160 Move X2, X31
	161 Move W1, [X8]
	162 Call IntPtr.op_Subtraction, X0, X1
	163 Move X24, X0
	164 Move X0, [X26]
	165 Add X8, X20, X23
	166 Add X9, X19, X23
	167 Move X27, X26
	168 Move X21, [X8]
	169 Move X29, [X8+8]
	170 Move W8, [X0+224]
	171 Move X26, [X9]
	172 Move X25, [X9+8]
	173 Compare W8, 0
	174 JumpIfNotEqual {176}
	175 Call 0x1C17DFC
	176 Move X8, 0xD9A000
	177 Move X8, [X8+648]
	178 Move X28, [X8]
	179 Move X0, [X28+32]
	180 Move W8, [X0+309]
	181 Move TEMP, X8
	182 And TEMP, TEMP, 1
	183 Compare TEMP, 1
	184 JumpIfEqual {186}
	185 Call 0x1C5D684
	186 Move X8, [X0+192]
	187 Move X0, [X8+8]
	188 Move W8, [X0+309]
	189 Move TEMP, X8
	190 And TEMP, TEMP, 1
	191 Compare TEMP, 1
	192 JumpIfEqual {194}
	193 Call 0x1C5D684
	194 Move W8, [X0+224]
	195 Compare W8, 0
	196 JumpIfNotEqual {198}
	197 Call 0x1C17DFC
	198 Move X0, [X28+32]
	199 Move W8, [X0+309]
	200 Move TEMP, X8
	201 And TEMP, TEMP, 1
	202 Compare TEMP, 1
	203 JumpIfEqual {205}
	204 Call 0x1C5D684
	205 Move X8, [X0+192]
	206 Move X28, [X8+88]
	207 Move [X31+24], X21
	208 Move [X31+32], X29
	209 Move X0, [X28+32]
	210 Move W8, [X0+309]
	211 Move TEMP, X8
	212 And TEMP, TEMP, 1
	213 Compare TEMP, 1
	214 JumpIfEqual {216}
	215 Call 0x1C5D684
	216 Move X8, [X0+192]
	217 Move X0, [X8+8]
	218 Move W8, [X0+309]
	219 Move TEMP, X8
	220 And TEMP, TEMP, 1
	221 Compare TEMP, 1
	222 JumpIfEqual {224}
	223 Call 0x1C5D684
	224 Move W8, [X0+224]
	225 Compare W8, 0
	226 JumpIfNotEqual {228}
	227 Call 0x1C17DFC
	228 Move X0, [X28+32]
	229 Move W8, [X0+309]
	230 Move TEMP, X8
	231 And TEMP, TEMP, 1
	232 Compare TEMP, 1
	233 JumpIfEqual {235}
	234 Call 0x1C5D684
	235 Move X8, [X0+192]
	236 Add X0, X31, 24
	237 Move X1, X26
	238 Move X2, X25
	239 Move X3, [X8+56]
	240 Call 0x2823174, X0, X1
	241 Move TEMP, X0
	242 And TEMP, TEMP, 1
	243 Compare TEMP, 1
	244 JumpIfNotEqual {302}
	245 Move X0, [X27]
	246 Move X26, X27
	247 Move W8, [X0+224]
	248 Compare W8, 0
	249 JumpIfNotEqual {251}
	250 Call 0x1C17DFC
	251 Move X8, 0xD9A000
	252 Move X8, [X8+640]
	253 Move X21, [X8]
	254 Move X0, [X21+32]
	255 Move W8, [X0+309]
	256 Move TEMP, X8
	257 And TEMP, TEMP, 1
	258 Compare TEMP, 1
	259 JumpIfEqual {261}
	260 Call 0x1C5D684
	261 Move X8, [X0+192]
	262 Move X0, [X8+8]
	263 Move W8, [X0+309]
	264 Move TEMP, X8
	265 And TEMP, TEMP, 1
	266 Compare TEMP, 1
	267 JumpIfEqual {269}
	268 Call 0x1C5D684
	269 Move W8, [X0+224]
	270 Compare W8, 0
	271 JumpIfNotEqual {273}
	272 Call 0x1C17DFC
	273 Move X0, [X21+32]
	274 Move W8, [X0+309]
	275 Move TEMP, X8
	276 And TEMP, TEMP, 1
	277 Compare TEMP, 1
	278 JumpIfEqual {280}
	279 Call 0x1C5D684
	280 Move X8, [X0+192]
	281 Move X0, [X8+8]
	282 Move W8, [X0+309]
	283 Move TEMP, X8
	284 And TEMP, TEMP, 1
	285 Compare TEMP, 1
	286 JumpIfEqual {288}
	287 Call 0x1C5D684
	288 Move X8, [X0+184]
	289 Move X0, X23
	290 Move X2, X31
	291 Move W1, [X8]
	292 Call IntPtr.op_Addition, X0, X1
	293 Move X23, X0
	294 Move X0, X24
	295 Move X1, X31
	296 Call IntPtr.op_Explicit, X0
	297 Move X25, X0
	298 Move X0, X23
	299 Move X1, X31
	300 Call IntPtr.op_Explicit, X0
	301 NotImplemented "Instruction CMP not yet implemented."
	302 Move X0, X22
	303 Move X1, X31
	304 Call IntPtr.op_Explicit, X0
	305 Move X24, X0
	306 Move W1, 4
	307 Move X0, X23
	308 Move X2, X31
	309 Call IntPtr.op_Addition, X0, X1
	310 Move X1, X31
	311 Call IntPtr.op_Explicit, X0
	312 NotImplemented "Instruction CMP not yet implemented."
	313 Move W25, [X31+20]
	314 Move X26, [X31+8]
	315 Move W25, [X31+20]
	316 Move X26, [X31+8]
	317 Move X8, X23
	318 ShiftRight X8, 63
	319 And X8, X8, 0x3FFFFFFF
	320 Move X0, [X20]
	321 Move X1, [X19]
	322 Move X2, X31
	323 Call UIntPtr.op_Inequality, X0, X1
	324 Move TEMP, X0
	325 And TEMP, TEMP, 1
	326 Compare TEMP, 1
	327 JumpIfEqual {344}
	328 Move W1, 4
	329 Move X0, X23
	330 Move X2, X31
	331 Call IntPtr.op_Addition, X0, X1
	332 Move X23, X0
	333 Move X0, X22
	334 Move X1, X31
	335 Call IntPtr.op_Explicit, X0
	336 Move X24, X0
	337 Move W1, 4
	338 Move X0, X23
	339 Move X2, X31
	340 Call IntPtr.op_Addition, X0, X1
	341 Move X1, X31
	342 Call IntPtr.op_Explicit, X0
	343 NotImplemented "Instruction CMP not yet implemented."
	344 Move X0, X22
	345 Move X1, X31
	346 Call IntPtr.op_Explicit, X0
	347 Move X24, X0
	348 Move W1, 2
	349 Move X0, X23
	350 Move X2, X31
	351 Call IntPtr.op_Addition, X0, X1
	352 Move X1, X31
	353 Call IntPtr.op_Explicit, X0
	354 NotImplemented "Instruction CMP not yet implemented."
	355 Move X8, X23
	356 ShiftRight X8, 63
	357 And X8, X8, 0x3FFFFFFF
	358 Move W9, [X20]
	359 Move W8, [X19]
	360 NotImplemented "Instruction CMP not yet implemented."
	361 Move W1, 2
	362 Move X0, X23
	363 Move X2, X31
	364 Call IntPtr.op_Addition, X0, X1
	365 Move X23, X0
	366 Move X0, X23
	367 Move X1, X31
	368 Call IntPtr.op_Explicit, X0
	369 Move X24, X0
	370 Move X0, X22
	371 Move X1, X31
	372 Call IntPtr.op_Explicit, X0
	373 NotImplemented "Instruction CMP not yet implemented."
	374 Move X21, 0xD64000
	375 Move X21, [X21+368]
	376 Move X0, [X21]
	377 NotImplemented "Instruction LDRH not yet implemented."
	378 Move W8, [X0+224]
	379 Compare W8, 0
	380 JumpIfNotEqual {382}
	381 Call 0x1C17DFC
	382 Add X0, X20, X23
	383 Move W1, W24
	384 Move X2, X31
	385 Call Char.CompareTo, X0, X1
	386 Compare W0, 0
	387 JumpIfNotEqual {400}
	388 Move W1, 1
	389 Move X0, X23
	390 Move X2, X31
	391 Call IntPtr.op_Addition, X0, X1
	392 Move X1, X31
	393 Move X23, X0
	394 Call IntPtr.op_Explicit, X0
	395 Move X24, X0
	396 Move X0, X22
	397 Move X1, X31
	398 Call IntPtr.op_Explicit, X0
	399 NotImplemented "Instruction CMP not yet implemented."
	400 Move W25, W0
	401 Move X8, [X26+40]
	402 Move X9, [X31+40]
	403 NotImplemented "Instruction CMP not yet implemented."
	404 Move W0, W25
	405 Move X20, [X31+128]
	406 Move X19, [X31+136]
	407 Move X22, [X31+112]
	408 Move X21, [X31+120]
	409 Move X24, [X31+96]
	410 Move X23, [X31+104]
	411 Move X26, [X31+80]
	412 Move X25, [X31+88]
	413 Move X28, [X31+64]
	414 Move X27, [X31+72]
	415 Move X29, [X31+48]
	416 Move X30, [X31+56]
	417 Add X31, X31, 144
	418 Return X0
	419 Call 0x3EB2B20

Method: System.Int32 IndexOf(ref System.Char searchSpace, System.Char value, System.Int32 length)

Disassembly:
	0x03392718 LDR W8, [X0 + 0xE0]
	0x0339271C CBNZ W8, 0x3392724
	0x03392720 BL 0x1C16DFC
	0x03392724 ADRP X25, 0x104A000
	0x03392728 LDRB W8, [X25 + 0xAFE]
	0x0339272C CBNZ W8, 0x3392744
	0x03392730 ADRP X0, 0xD95000
	0x03392734 LDR X0, [X0 + 0x930]
	0x03392738 BL 0x1C16CF4
	0x0339273C MOVZ W8, 0x1
	0x03392740 STRB W8, [X25 + 0xAFE]
	0x03392744 LDR X0, [X24]
	0x03392748 LDR W8, [X0 + 0xE0]
	0x0339274C CBNZ W8, 0x3392758
	0x03392750 BL 0x1C16DFC
	0x03392754 LDR X0, [X24]
	0x03392758 LDR X8, [X0 + 0xB8]
	0x0339275C LDRB W8, [X8]
	0x03392760 CBZ W8, 0x3392794
	0x03392764 ADRP X8, 0xD98000
	0x03392768 LDR X8, [X8 + 0xF68]
	0x0339276C MOV X0, X22
	0x03392770 MOV X1, X21
	0x03392774 MOV X2, X20
	0x03392778 LDR X4, [X8]
	0x0339277C MOV X3, X19
	0x03392780 LDP X20, X19, [X31 + 0x30]
	0x03392784 LDP X22, X21, [X31 + 0x20]
	0x03392788 LDP X24, X23, [X31 + 0x10]
	0x0339278C LDP X30, X25, [X31], #0x40
	0x03392790 B 0x338C170
	0x03392794 CBZ W21, 0x33927CC
	0x03392798 CBZ X23, 0x33927E4
	0x0339279C MOV X0, X23
	0x033927A0 MOV X1, X22
	0x033927A4 MOV X2, X21
	0x033927A8 MOV X3, X20
	0x033927AC MOV X4, X19
	0x033927B0 LDP X20, X19, [X31 + 0x30]
	0x033927B4 LDP X22, X21, [X31 + 0x20]
	0x033927B8 LDP X24, X23, [X31 + 0x10]
	0x033927BC MOV W5, W31
	0x033927C0 MOV X6, X31
	0x033927C4 LDP X30, X25, [X31], #0x40
	0x033927C8 B 0x3305C3C
	0x033927CC LDP X20, X19, [X31 + 0x30]
	0x033927D0 LDP X22, X21, [X31 + 0x20]
	0x033927D4 LDP X24, X23, [X31 + 0x10]
	0x033927D8 MOV W0, W31
	0x033927DC LDP X30, X25, [X31], #0x40
	0x033927E0 RET
	0x033927E4 BL 0x1C16F20
	0x033927E8 STP X30, X25, [X31 - 0x40]!
	0x033927EC STP X24, X23, [X31 + 0x10]
	0x033927F0 STP X22, X21, [X31 + 0x20]
	0x033927F4 STP X20, X19, [X31 + 0x30]
	0x033927F8 ADRP X25, 0x104B000
	0x033927FC ADRP X24, 0xD95000
	0x03392800 LDRB W8, [X25 + 0x53]
	0x03392804 LDR X24, [X24 + 0x930]
	0x03392808 MOV X22, X4
	0x0339280C MOV X19, X3
	0x03392810 MOV X20, X2
	0x03392814 MOV X21, X1
	0x03392818 MOV X23, X0
	0x0339281C TBNZ X8, 0x0, 0x3392840
	0x03392820 ADRP X0, 0xD95000
	0x03392824 LDR X0, [X0 + 0x930]
	0x03392828 BL 0x1C16CF4
	0x0339282C ADRP X0, 0xD90000
	0x03392830 LDR X0, [X0 + 0x28]
	0x03392834 BL 0x1C16CF4
	0x03392838 MOVZ W8, 0x1
	0x0339283C STRB W8, [X25 + 0x53]
	0x03392840 LDR X0, [X24]
	0x03392844 LDR W8, [X0 + 0xE0]
	0x03392848 CBNZ W8, 0x3392850
	0x0339284C BL 0x1C16DFC
	0x03392850 ADRP X25, 0x104A000
	0x03392854 LDRB W8, [X25 + 0xAFE]
	0x03392858 CBNZ W8, 0x3392870
	0x0339285C ADRP X0, 0xD95000
	0x03392860 LDR X0, [X0 + 0x930]
	0x03392864 BL 0x1C16CF4
	0x03392868 MOVZ W8, 0x1
	0x0339286C STRB W8, [X25 + 0xAFE]
	0x03392870 LDR X0, [X24]
	0x03392874 LDR W8, [X0 + 0xE0]
	0x03392878 CBNZ W8, 0x3392884
	0x0339287C BL 0x1C16DFC
	0x03392880 LDR X0, [X24]
	0x03392884 LDR X8, [X0 + 0xB8]
	0x03392888 LDRB W8, [X8]
	0x0339288C CBZ W8, 0x33928B4
	0x03392890 MOV X0, X23
	0x03392894 MOV X1, X21
	0x03392898 MOV X2, X20
	0x0339289C MOV X3, X19
	0x033928A0 LDP X20, X19, [X31 + 0x30]
	0x033928A4 LDP X22, X21, [X31 + 0x20]
	0x033928A8 LDP X24, X23, [X31 + 0x10]
	0x033928AC LDP X30, X25, [X31], #0x40
	0x033928B0 B 0x3392908
	0x033928B4 CBZ W21, 0x33928EC
	0x033928B8 CBZ X22, 0x3392904
	0x033928BC MOV X0, X22
	0x033928C0 MOV X1, X23
	0x033928C4 MOV X2, X21
	0x033928C8 MOV X3, X20
	0x033928CC MOV X4, X19
	0x033928D0 LDP X20, X19, [X31 + 0x30]
	0x033928D4 LDP X22, X21, [X31 + 0x20]
	0x033928D8 LDP X24, X23, [X31 + 0x10]
	0x033928DC MOVZ W5, 0x1
	0x033928E0 MOV X6, X31
	0x033928E4 LDP X30, X25, [X31], #0x40
	0x033928E8 B 0x3305C3C
	0x033928EC LDP X20, X19, [X31 + 0x30]
	0x033928F0 LDP X22, X21, [X31 + 0x20]
	0x033928F4 LDP X24, X23, [X31 + 0x10]
	0x033928F8 MOV W0, W31
	0x033928FC LDP X30, X25, [X31], #0x40
	0x03392900 RET
	0x03392904 BL 0x1C16F20
	0x03392908 STP X30, X23, [X31 - 0x30]!
	0x0339290C STP X22, X21, [X31 + 0x10]
	0x03392910 STP X20, X19, [X31 + 0x20]
	0x03392914 ADRP X23, 0x104B000
	0x03392918 LDRB W8, [X23 + 0x54]
	0x0339291C MOV X19, X3
	0x03392920 MOV X20, X2
	0x03392924 MOV X22, X1
	0x03392928 MOV X21, X0
	0x0339292C TBNZ X8, 0x0, 0x339295C
	0x03392930 ADRP X0, 0xD8F000
	0x03392934 LDR X0, [X0 + 0xFD0]
	0x03392938 BL 0x1C16CF4
	0x0339293C ADRP X0, 0xD95000
	0x03392940 LDR X0, [X0 + 0x7E8]
	0x03392944 BL 0x1C16CF4
	0x03392948 ADRP X0, 0xD90000
	0x0339294C LDR X0, [X0 + 0x28]
	0x03392950 BL 0x1C16CF4
	0x03392954 MOVZ W8, 0x1
	0x03392958 STRB W8, [X23 + 0x54]
	0x0339295C CMP W22, W19
	0x03392960 B.GE 0x339296C
	0x03392964 MOV W0, W31
	0x03392968 B 0x33929D8
	0x0339296C CMP W22, W19
	0x03392970 B.CC 0x33929E8
	0x03392974 ADRP X8, 0xD95000
	0x03392978 LDR X8, [X8 + 0x7E8]
	0x0339297C SUB X22, X22, X19
	0x03392980 LDR X8, [X8]
	0x03392984 LDR X0, [X8 + 0x20]
	0x03392988 LDRB W8, [X0 + 0x135]
	0x0339298C TBNZ X8, 0x0, 0x3392994
	0x03392990 BL 0x1C5C684
	0x03392994 ADRP X8, 0xD8F000
	0x03392998 LDR X8, [X8 + 0xFD0]
	0x0339299C UBFM X9, X22, 0x20, 0x1F
	0x033929A0 ADD X22, X21, X9, 0x1F, ASR
	0x033929A4 AND X21, X19, 0x0
	0x033929A8 LDR X0, [X8]
	0x033929AC LDR W8, [X0 + 0xE0]
	0x033929B0 CBNZ W8, 0x33929B8
	0x033929B4 BL 0x1C16DFC
	0x033929B8 MOV X0, X22
	0x033929BC MOV X1, X21
	0x033929C0 MOV X2, X20
	0x033929C4 MOV X3, X19
	0x033929C8 MOV X4, X31
	0x033929CC BL 0x33043D4
	0x033929D0 CMP W0, 0x0
	0x033929D4 CSET W0, EQ
	0x033929D8 LDP X20, X19, [X31 + 0x20]
	0x033929DC LDP X22, X21, [X31 + 0x10]
	0x033929E0 LDP X30, X23, [X31], #0x30
	0x033929E4 RET
	0x033929E8 BL 0x339D6EC
	0x033929EC CBZ X1, 0x3392AB0
	0x033929F0 SUB X8, X1, 0x1
	0x033929F4 CMP X8, 0x15
	0x033929F8 B.LS 0x3392A1C
	0x033929FC CMP X1, 0x1FF
	0x03392A00 B.HI 0x3392A48
	0x03392A04 LDR W8, [X0]
	0x03392A08 ANDS W31, W8, 0x3
	0x03392A0C B.EQ 0x3392A50
	0x03392A10 TBNZ X8, 0x0, 0x3392A58
	0x03392A14 MOV X9, X31
	0x03392A18 B 0x3392A68
	0x03392A1C CMP W8, 0x15
	0x03392A20 B.HI 0x3392A04
	0x03392A24 ADRP X9, 0xFFFFFFFFFD804000
	0x03392A28 AND X8, X8, 0x0
	0x03392A2C ADD X9, X9, 0x870
	0x03392A30 ADR X10, 0x10
	0x03392A34 LDRB W11, [X9, X8, LSL]
	0x03392A38 ADD X10, X10, X11, 0x2, LSL
	0x03392A3C BR X10
	0x03392A40 STRB W31, [X0]
	0x03392A44 B 0x3392AB0
	0x03392A48 MOV X2, X31
	0x03392A4C B 0x327293C
	0x03392A50 MOV X9, X31
	0x03392A54 B 0x3392A70
	0x03392A58 STRB W31, [X0]
	0x03392A5C LDR W8, [X0]
	0x03392A60 MOVZ W9, 0x1
	0x03392A64 TBNZ X8, 0x1, 0x3392A70
	0x03392A68 STRH W31, [X0, X9, LSL]
	0x03392A6C ORR X9, X9, 0x3
	0x03392A70 SUB W8, W8, 0x1
	0x03392A74 TBNZ X8, 0x2, 0x3392A80
	0x03392A78 STR W31, [X0, X9, LSL]
	0x03392A7C ORR X9, X9, 0x7
	0x03392A80 SUB X10, X1, 0x10
	0x03392A84 MOV X8, X9
	0x03392A88 ADD X11, X0, X8
	0x03392A8C ADD X8, X8, 0x10
	0x03392A90 CMP X8, X10
	0x03392A94 STP X31, X31, [X11]
	0x03392A98 B.LS 0x3392A88
	0x03392A9C SUB X9, X1, X9
	0x03392AA0 TBNZ X9, 0x3, 0x3392AB4
	0x03392AA4 TBNZ X9, 0x2, 0x3392AC0
	0x03392AA8 TBNZ X9, 0x1, 0x3392ACC
	0x03392AAC TBNZ X9, 0x0, 0x3392AD8
	0x03392AB0 RET
	0x03392AB4 STR X31, [X0, X8, LSL]
	0x03392AB8 ADD X8, X8, 0x8
	0x03392ABC TBZ X9, 0x2, 0x3392AA8
	0x03392AC0 STR W31, [X0, X8, LSL]
	0x03392AC4 ADD X8, X8, 0x4
	0x03392AC8 TBZ X9, 0x1, 0x3392AAC
	0x03392ACC STRH W31, [X0, X8, LSL]
	0x03392AD0 ADD X8, X8, 0x2
	0x03392AD4 TBZ X9, 0x0, 0x3392AB0
	0x03392AD8 STRB W31, [X0, X8, LSL]
	0x03392ADC RET
	0x03392AE0 STRH W31, [X0]
	0x03392AE4 RET
	0x03392AE8 STRH W31, [X0]
	0x03392AEC STRB W31, [X0 + 0x2]
	0x03392AF0 RET
	0x03392AF4 STR W31, [X0]
	0x03392AF8 RET
	0x03392AFC STR W31, [X0]
	0x03392B00 STRB W31, [X0 + 0x4]
	0x03392B04 RET
	0x03392B08 STR W31, [X0]
	0x03392B0C STRH W31, [X0 + 0x4]
	0x03392B10 RET
	0x03392B14 STR W31, [X0]
	0x03392B18 STRH W31, [X0 + 0x4]
	0x03392B1C STRB W31, [X0 + 0x6]
	0x03392B20 RET
	0x03392B24 STR X31, [X0]
	0x03392B28 STRB W31, [X0 + 0x8]
	0x03392B2C RET
	0x03392B30 STR X31, [X0]
	0x03392B34 STRH W31, [X0 + 0x8]
	0x03392B38 RET
	0x03392B3C STR X31, [X0]
	0x03392B40 STRH W31, [X0 + 0x8]
	0x03392B44 STRB W31, [X0 + 0xA]
	0x03392B48 RET
	0x03392B4C STR X31, [X0]
	0x03392B50 STR W31, [X0 + 0x8]
	0x03392B54 RET
	0x03392B58 STR X31, [X0]
	0x03392B5C STR W31, [X0 + 0x8]
	0x03392B60 STRB W31, [X0 + 0xC]
	0x03392B64 RET
	0x03392B68 STR X31, [X0]
	0x03392B6C STR W31, [X0 + 0x8]
	0x03392B70 STRH W31, [X0 + 0xC]
	0x03392B74 RET
	0x03392B78 STUR X31, [X0 + 0x7]
	0x03392B7C B 0x3392B84
	0x03392B80 STR X31, [X0 + 0x8]
	0x03392B84 STR X31, [X0]
	0x03392B88 RET
	0x03392B8C STP X31, X31, [X0]
	0x03392B90 STRB W31, [X0 + 0x10]
	0x03392B94 RET
	0x03392B98 STP X31, X31, [X0]
	0x03392B9C STRH W31, [X0 + 0x10]
	0x03392BA0 RET
	0x03392BA4 STP X31, X31, [X0]
	0x03392BA8 STUR W31, [X0 + 0xF]
	0x03392BAC RET
	0x03392BB0 STP X31, X31, [X0]
	0x03392BB4 STUR X31, [X0 + 0xD]
	0x03392BB8 RET
	0x03392BBC STP X31, X31, [X0]
	0x03392BC0 STUR X31, [X0 + 0xE]
	0x03392BC4 RET
	0x03392BC8 STP X31, X31, [X0]
	0x03392BCC STR W31, [X0 + 0x10]
	0x03392BD0 RET
	0x03392BD4 STR X30, [X31 - 0x60]!
	0x03392BD8 STP X28, X27, [X31 + 0x10]
	0x03392BDC STP X26, X25, [X31 + 0x20]
	0x03392BE0 STP X24, X23, [X31 + 0x30]
	0x03392BE4 STP X22, X21, [X31 + 0x40]
	0x03392BE8 STP X20, X19, [X31 + 0x50]
	0x03392BEC MOV X20, X1
	0x03392BF0 CMP X1, 0x8
	0x03392BF4 MOV X19, X0
	0x03392BF8 B.CC 0x3392CA8
	0x03392BFC SUB X21, X19, 0x8
	0x03392C00 SUB X22, X19, 0x10
	0x03392C04 SUB X23, X19, 0x18
	0x03392C08 SUB X24, X19, 0x20
	0x03392C0C SUB X25, X19, 0x28
	0x03392C10 SUB X26, X19, 0x30
	0x03392C14 SUB X27, X19, 0x38
	0x03392C18 SUB X28, X19, 0x40
	0x03392C1C MOV X0, X20
	0x03392C20 MOV X1, X31
	0x03392C24 BL 0x33C6938
	0x03392C28 STR X31, [X21, X0, LSL #3]
	0x03392C2C MOV X0, X20
	0x03392C30 MOV X1, X31
	0x03392C34 BL 0x33C6938
	0x03392C38 STR X31, [X22, X0, LSL #3]
	0x03392C3C MOV X0, X20
	0x03392C40 MOV X1, X31
	0x03392C44 BL 0x33C6938
	0x03392C48 STR X31, [X23, X0, LSL #3]
	0x03392C4C MOV X0, X20
	0x03392C50 MOV X1, X31
	0x03392C54 BL 0x33C6938
	0x03392C58 STR X31, [X24, X0, LSL #3]
	0x03392C5C MOV X0, X20
	0x03392C60 MOV X1, X31
	0x03392C64 BL 0x33C6938
	0x03392C68 STR X31, [X25, X0, LSL #3]
	0x03392C6C MOV X0, X20
	0x03392C70 MOV X1, X31
	0x03392C74 BL 0x33C6938
	0x03392C78 STR X31, [X26, X0, LSL #3]
	0x03392C7C MOV X0, X20
	0x03392C80 MOV X1, X31
	0x03392C84 BL 0x33C6938
	0x03392C88 STR X31, [X27, X0, LSL #3]
	0x03392C8C MOV X0, X20
	0x03392C90 MOV X1, X31
	0x03392C94 BL 0x33C6938
	0x03392C98 SUB X20, X20, 0x8
	0x03392C9C CMP X20, 0x7
	0x03392CA0 STR X31, [X28, X0, LSL #3]
	0x03392CA4 B.HI 0x3392C1C
	0x03392CA8 CMP X20, 0x3
	0x03392CAC B.HI 0x3392CC0
	0x03392CB0 CMP X20, 0x1
	0x03392CB4 B.HI 0x3392CEC
	0x03392CB8 CBNZ X20, 0x3392D04
	0x03392CBC B 0x3392D08
	0x03392CC0 MOV X0, X20
	0x03392CC4 MOV X1, X31
	0x03392CC8 STP X31, X31, [X19 + 0x10]
	0x03392CCC BL 0x33C6938
	0x03392CD0 ADD X8, X19, X0, 0x3, LSL
	0x03392CD4 MOV X0, X20
	0x03392CD8 MOV X1, X31
	0x03392CDC STUR X31, [X8 - 0x18]
	0x03392CE0 BL 0x33C6938
	0x03392CE4 ADD X8, X19, X0, 0x3, LSL
	0x03392CE8 STUR X31, [X8 - 0x10]
	0x03392CEC MOV X0, X20
	0x03392CF0 MOV X1, X31
	0x03392CF4 STR X31, [X19 + 0x8]
	0x03392CF8 BL 0x33C6938
	0x03392CFC ADD X8, X19, X0, 0x3, LSL
	0x03392D00 STUR X31, [X8 - 0x8]
	0x03392D04 STR X31, [X19]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+80], X29
	003 Move [X31+88], X30
	004 Move [X31+96], X28
	005 Move [X31+104], X27
	006 Move [X31+112], X26
	007 Move [X31+120], X25
	008 Move [X31+128], X24
	009 Move [X31+136], X23
	010 Move [X31+144], X22
	011 Move [X31+152], X21
	012 Move [X31+160], X20
	013 Move [X31+168], X19
	014 NotImplemented "Instruction MRS not yet implemented."
	015 Move [X31+24], X8
	016 Move X8, [X8+40]
	017 Move X19, 0x104C000
	018 Move W21, W2
	019 Move W20, W1
	020 Move [X31+72], X8
	021 Move W8, [X19+78]
	022 Move X23, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {47}
	027 Move X0, 0xD9A000
	028 Move X0, [X0+664]
	029 Call 0x1C17CF4
	030 Move X0, 0xD9A000
	031 Move X0, [X0+672]
	032 Call 0x1C17CF4
	033 Move X0, 0xD9A000
	034 Move X0, [X0+640]
	035 Call 0x1C17CF4
	036 Move X0, 0xD9A000
	037 Move X0, [X0+680]
	038 Call 0x1C17CF4
	039 Move X0, 0xD9A000
	040 Move X0, [X0+656]
	041 Call 0x1C17CF4
	042 Move X0, 0xD9A000
	043 Move X0, [X0+688]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X19+78], W8
	047 Move X27, 0xD9A000
	048 Move X28, 0xD9A000
	049 Move X27, [X27+656]
	050 Move X28, [X28+640]
	051 Move X0, X31
	052 Move [X31+56], X31
	053 Move [X31+64], X31
	054 Move [X31+32], X31
	055 Move [X31+40], X31
	056 Call Vector.get_IsHardwareAccelerated
	057 Move W8, W21
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {193}
	062 Move X0, [X27]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Move X19, [X28]
	068 Move X0, [X19+32]
	069 Move W8, [X0+309]
	070 Move TEMP, X8
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfEqual {75}
	074 Call 0x1C5D684
	075 Move X8, [X0+192]
	076 Move X0, [X8+8]
	077 Move W8, [X0+309]
	078 Move TEMP, X8
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfEqual {83}
	082 Call 0x1C5D684
	083 Move W8, [X0+224]
	084 Compare W8, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1C17DFC
	087 Move X0, [X19+32]
	088 Move W8, [X0+309]
	089 Move TEMP, X8
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfEqual {94}
	093 Call 0x1C5D684
	094 Move X8, [X0+192]
	095 Move X0, [X8+8]
	096 Move W8, [X0+309]
	097 Move TEMP, X8
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfEqual {102}
	101 Call 0x1C5D684
	102 Move X8, [X0+184]
	103 Move W8, [X8]
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move W8, W21
	106 Move X0, [X27]
	107 Move W8, [X0+224]
	108 Compare W8, 0
	109 JumpIfNotEqual {111}
	110 Call 0x1C17DFC
	111 Move X19, [X28]
	112 Move X0, [X19+32]
	113 Move W8, [X0+309]
	114 Move TEMP, X8
	115 And TEMP, TEMP, 1
	116 Compare TEMP, 1
	117 JumpIfEqual {119}
	118 Call 0x1C5D684
	119 Move X8, [X0+192]
	120 Move X0, [X8+8]
	121 Move W8, [X0+309]
	122 Move TEMP, X8
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfEqual {127}
	126 Call 0x1C5D684
	127 Move W8, [X0+224]
	128 Compare W8, 0
	129 JumpIfNotEqual {131}
	130 Call 0x1C17DFC
	131 Move X0, [X19+32]
	132 Move W8, [X0+309]
	133 Move TEMP, X8
	134 And TEMP, TEMP, 1
	135 Compare TEMP, 1
	136 JumpIfEqual {138}
	137 Call 0x1C5D684
	138 Move X8, [X0+192]
	139 Move X0, [X8+8]
	140 Move W8, [X0+309]
	141 Move TEMP, X8
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfEqual {146}
	145 Call 0x1C5D684
	146 Move X22, [X28]
	147 Move X9, [X0+184]
	148 Move X8, [X22+32]
	149 Move W19, [X9]
	150 Move W10, [X8+309]
	151 Move TEMP, X10
	152 And TEMP, TEMP, 1
	153 Compare TEMP, 1
	154 JumpIfEqual {158}
	155 Move X0, X8
	156 Call 0x1C5D684
	157 Move X8, X0
	158 Move X8, [X8+192]
	159 Move X0, [X8+8]
	160 Move W8, [X0+309]
	161 Move TEMP, X8
	162 And TEMP, TEMP, 1
	163 Compare TEMP, 1
	164 JumpIfEqual {166}
	165 Call 0x1C5D684
	166 Move W8, [X0+224]
	167 Compare W8, 0
	168 JumpIfNotEqual {170}
	169 Call 0x1C17DFC
	170 Move X0, [X22+32]
	171 Move W8, [X0+309]
	172 Move TEMP, X8
	173 And TEMP, TEMP, 1
	174 Compare TEMP, 1
	175 JumpIfEqual {177}
	176 Call 0x1C5D684
	177 Move X8, [X0+192]
	178 Move W22, W23
	179 ShiftRight W22, 1
	180 And W22, W22, 7
	181 Move X0, [X8+8]
	182 Move W8, [X0+309]
	183 Move TEMP, X8
	184 And TEMP, TEMP, 1
	185 Compare TEMP, 1
	186 JumpIfEqual {188}
	187 Call 0x1C5D684
	188 Move X8, [X0+184]
	189 Subtract W9, W19, W22
	190 Move W8, [X8]
	191 Subtract W8, W8, 1
	192 And W8, W8, W9
	193 Move X26, 0xD9A000
	194 Move X26, [X26+664]
	195 Add X19, X23, W21
	196 Move [X31+16], X23
	197 Move X29, X23
	198 NotImplemented "Instruction CMP not yet implemented."
	199 NotImplemented "Instruction LDRH not yet implemented."
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Move X9, X29
	202 NotImplemented "Instruction LDRH not yet implemented."
	203 NotImplemented "Instruction CMP not yet implemented."
	204 NotImplemented "Instruction LDRH not yet implemented."
	205 NotImplemented "Instruction CMP not yet implemented."
	206 NotImplemented "Instruction LDRH not yet implemented."
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Subtract W8, W8, 4
	209 Add X29, X29, 8
	210 NotImplemented "Instruction CMP not yet implemented."
	211 Add W8, W8, 1
	212 NotImplemented "Instruction LDRH not yet implemented."
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Subtract W8, W8, 1
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Add X29, X29, 2
	217 Move X0, X31
	218 Call Vector.get_IsHardwareAccelerated
	219 Move TEMP, X0
	220 And TEMP, TEMP, 1
	221 Compare TEMP, 1
	222 JumpIfNotEqual {471}
	223 Move [X31+8], X19
	224 Subtract X19, X19, X29
	225 Move X0, [X27]
	226 Move W8, [X0+224]
	227 Compare W8, 0
	228 JumpIfNotEqual {230}
	229 Call 0x1C17DFC
	230 Move X21, [X28]
	231 Move X0, [X21+32]
	232 Move W8, [X0+309]
	233 Move TEMP, X8
	234 And TEMP, TEMP, 1
	235 Compare TEMP, 1
	236 JumpIfEqual {238}
	237 Call 0x1C5D684
	238 Move X8, [X0+192]
	239 Move X0, [X8+8]
	240 Move W8, [X0+309]
	241 Move TEMP, X8
	242 And TEMP, TEMP, 1
	243 Compare TEMP, 1
	244 JumpIfEqual {246}
	245 Call 0x1C5D684
	246 Move W8, [X0+224]
	247 Compare W8, 0
	248 JumpIfNotEqual {250}
	249 Call 0x1C17DFC
	250 Move X0, [X21+32]
	251 Move W8, [X0+309]
	252 Move TEMP, X8
	253 And TEMP, TEMP, 1
	254 Compare TEMP, 1
	255 JumpIfEqual {257}
	256 Call 0x1C5D684
	257 Move X8, [X0+192]
	258 Move X0, [X8+8]
	259 Move W8, [X0+309]
	260 Move TEMP, X8
	261 And TEMP, TEMP, 1
	262 Compare TEMP, 1
	263 JumpIfEqual {265}
	264 Call 0x1C5D684
	265 Move X8, [X0+184]
	266 Move X10, 0xD9A000
	267 NotImplemented "Instruction CMP not yet implemented."
	268 NotImplemented "Instruction CINC not yet implemented."
	269 Move W8, [X8]
	270 Move X10, [X10+672]
	271 Move X9, X9
	272 ShiftRight X9, 1
	273 And X9, X9, 0x7FFFFFFF
	274 Add X0, X31, 56
	275 Subtract W8, W31, W8
	276 Move X2, [X10]
	277 Move W1, W20
	278 And W19, W8, W9
	279 Call 0x281FB6C, X0, X1
	280 NotImplemented "Instruction CMP not yet implemented."
	281 Move X8, 0xD9A000
	282 Move X8, [X8+688]
	283 Move X24, [X31+56]
	284 Move X22, [X31+64]
	285 Move X23, [X29]
	286 Move X21, [X29+8]
	287 Move X25, [X8]
	288 Move X8, [X25+56]
	289 Compare X8, 0
	290 JumpIfNotEqual {294}
	291 Move X0, X25
	292 Call 0x1C5D6E0
	293 Move X8, [X25+56]
	294 Move X0, [X8+16]
	295 Move W8, [X0+309]
	296 Move TEMP, X8
	297 And TEMP, TEMP, 1
	298 Compare TEMP, 1
	299 JumpIfEqual {301}
	300 Call 0x1C5D684
	301 Move W8, [X0+224]
	302 Compare W8, 0
	303 JumpIfNotEqual {305}
	304 Call 0x1C17DFC
	305 Move X8, [X25+56]
	306 Move X0, X24
	307 Move X1, X22
	308 Move X2, X23
	309 Move X4, [X8+8]
	310 Move X3, X21
	311 Call 0x22BB330
	312 Move X21, X0
	313 Move X0, [X27]
	314 Move X22, X1
	315 Move W8, [X0+224]
	316 Compare W8, 0
	317 JumpIfNotEqual {319}
	318 Call 0x1C17DFC
	319 Move X8, 0xD9A000
	320 Move X8, [X8+680]
	321 Move X23, [X8]
	322 Move X0, [X23+32]
	323 Move W8, [X0+309]
	324 Move TEMP, X8
	325 And TEMP, TEMP, 1
	326 Compare TEMP, 1
	327 JumpIfEqual {329}
	328 Call 0x1C5D684
	329 Move X8, [X0+192]
	330 Move X0, [X8+8]
	331 Move W8, [X0+309]
	332 Move TEMP, X8
	333 And TEMP, TEMP, 1
	334 Compare TEMP, 1
	335 JumpIfEqual {337}
	336 Call 0x1C5D684
	337 Move W8, [X0+224]
	338 Compare W8, 0
	339 JumpIfNotEqual {341}
	340 Call 0x1C17DFC
	341 Move X0, [X23+32]
	342 Move W8, [X0+309]
	343 Move TEMP, X8
	344 And TEMP, TEMP, 1
	345 Compare TEMP, 1
	346 JumpIfEqual {348}
	347 Call 0x1C5D684
	348 Move X8, [X0+192]
	349 Move X0, [X8+8]
	350 Move W8, [X0+309]
	351 Move TEMP, X8
	352 And TEMP, TEMP, 1
	353 Compare TEMP, 1
	354 JumpIfEqual {356}
	355 Call 0x1C5D684
	356 Move X8, [X0+184]
	357 Move X3, [X26]
	358 Add X0, X31, 32
	359 Move X1, X21
	360 NotImplemented "Instruction LDUR not yet implemented."
	361 Move X2, X22
	362 Move [X31+2], V0
	363 Call 0x2823174, X0, X1
	364 Move TEMP, X0
	365 And TEMP, TEMP, 1
	366 Compare TEMP, 1
	367 JumpIfNotEqual {459}
	368 Move X0, [X27]
	369 Move W8, [X0+224]
	370 Compare W8, 0
	371 JumpIfNotEqual {373}
	372 Call 0x1C17DFC
	373 Move X21, [X28]
	374 Move X0, [X21+32]
	375 Move W8, [X0+309]
	376 Move TEMP, X8
	377 And TEMP, TEMP, 1
	378 Compare TEMP, 1
	379 JumpIfEqual {381}
	380 Call 0x1C5D684
	381 Move X8, [X0+192]
	382 Move X0, [X8+8]
	383 Move W8, [X0+309]
	384 Move TEMP, X8
	385 And TEMP, TEMP, 1
	386 Compare TEMP, 1
	387 JumpIfEqual {389}
	388 Call 0x1C5D684
	389 Move W8, [X0+224]
	390 Compare W8, 0
	391 JumpIfNotEqual {393}
	392 Call 0x1C17DFC
	393 Move X0, [X21+32]
	394 Move W8, [X0+309]
	395 Move TEMP, X8
	396 And TEMP, TEMP, 1
	397 Compare TEMP, 1
	398 JumpIfEqual {400}
	399 Call 0x1C5D684
	400 Move X8, [X0+192]
	401 Move X0, [X8+8]
	402 Move W8, [X0+309]
	403 Move TEMP, X8
	404 And TEMP, TEMP, 1
	405 Compare TEMP, 1
	406 JumpIfEqual {408}
	407 Call 0x1C5D684
	408 Move X22, [X28]
	409 Move X9, [X0+184]
	410 Move X8, [X22+32]
	411 NotImplemented "Instruction LDRSW not yet implemented."
	412 Move W10, [X8+309]
	413 Move TEMP, X10
	414 And TEMP, TEMP, 1
	415 Compare TEMP, 1
	416 JumpIfEqual {420}
	417 Move X0, X8
	418 Call 0x1C5D684
	419 Move X8, X0
	420 Move X8, [X8+192]
	421 Move X0, [X8+8]
	422 Move W8, [X0+309]
	423 Move TEMP, X8
	424 And TEMP, TEMP, 1
	425 Compare TEMP, 1
	426 JumpIfEqual {428}
	427 Call 0x1C5D684
	428 Move W8, [X0+224]
	429 Compare W8, 0
	430 JumpIfNotEqual {432}
	431 Call 0x1C17DFC
	432 Move X0, [X22+32]
	433 Move W8, [X0+309]
	434 Move TEMP, X8
	435 And TEMP, TEMP, 1
	436 Compare TEMP, 1
	437 JumpIfEqual {439}
	438 Call 0x1C5D684
	439 Move X8, [X0+192]
	440 Move X0, [X8+8]
	441 Move W8, [X0+309]
	442 Move TEMP, X8
	443 And TEMP, TEMP, 1
	444 Compare TEMP, 1
	445 JumpIfEqual {447}
	446 Call 0x1C5D684
	447 Move X8, [X0+184]
	448 Add X29, X29, X21
	449 Move W8, [X8]
	450 Subtract W19, W19, W8
	451 NotImplemented "Instruction CMP not yet implemented."
	452 Move X19, [X31+8]
	453 Subtract X8, X19, X29
	454 NotImplemented "Instruction CMP not yet implemented."
	455 NotImplemented "Instruction CINC not yet implemented."
	456 Move X8, X8
	457 ShiftRight X8, 1
	458 And X8, X8, 0x7FFFFFFF
	459 Move X0, X21
	460 Move X1, X22
	461 Move X2, X31
	462 Call 0x33A4044
	463 Move X8, [X31+16]
	464 Subtract X8, X29, X8
	465 NotImplemented "Instruction CMP not yet implemented."
	466 NotImplemented "Instruction CINC not yet implemented."
	467 Move X8, X8
	468 ShiftRight X8, 1
	469 And X8, X8, 0x7FFFFFFF
	470 Add W0, W0, W8
	471 Move TEMP, 0
	472 Not TEMP
	473 Move W0, TEMP
	474 Move X29, X9
	475 Add X9, X29, 4
	476 Add X29, X9, 2
	477 Move X8, [X31+16]
	478 Subtract X8, X29, X8
	479 NotImplemented "Instruction CMP not yet implemented."
	480 NotImplemented "Instruction CINC not yet implemented."
	481 Move X0, X8
	482 ShiftRight X0, 1
	483 And X0, X0, 0x7FFFFFFF
	484 Move X8, [X31+24]
	485 Move X8, [X8+40]
	486 Move X9, [X31+72]
	487 NotImplemented "Instruction CMP not yet implemented."
	488 Move X20, [X31+160]
	489 Move X19, [X31+168]
	490 Move X22, [X31+144]
	491 Move X21, [X31+152]
	492 Move X24, [X31+128]
	493 Move X23, [X31+136]
	494 Move X26, [X31+112]
	495 Move X25, [X31+120]
	496 Move X28, [X31+96]
	497 Move X27, [X31+104]
	498 Move X29, [X31+80]
	499 Move X30, [X31+88]
	500 Add X31, X31, 176
	501 Return X0
	502 Call 0x3EB2B20

Method: System.Int32 LastIndexOf(ref System.Char searchSpace, System.Char value, System.Int32 length)

Disassembly:
	0x03392D08 LDP X20, X19, [X31 + 0x50]
	0x03392D0C LDP X22, X21, [X31 + 0x40]
	0x03392D10 LDP X24, X23, [X31 + 0x30]
	0x03392D14 LDP X26, X25, [X31 + 0x20]
	0x03392D18 LDP X28, X27, [X31 + 0x10]
	0x03392D1C LDR X30, [X31], #0x60
	0x03392D20 RET
	0x03392D24 STP X30, X21, [X31 - 0x20]!
	0x03392D28 STP X20, X19, [X31 + 0x10]
	0x03392D2C ADRP X20, 0x104B000
	0x03392D30 ADRP X21, 0xD99000
	0x03392D34 LDRB W8, [X20 + 0x55]
	0x03392D38 LDR X21, [X21 + 0x2D8]
	0x03392D3C MOV X19, X0
	0x03392D40 TBNZ X8, 0x0, 0x3392D58
	0x03392D44 ADRP X0, 0xD99000
	0x03392D48 LDR X0, [X0 + 0x2D8]
	0x03392D4C BL 0x1C16CF4
	0x03392D50 MOVZ W8, 0x1
	0x03392D54 STRB W8, [X20 + 0x55]
	0x03392D58 LDR X1, [X21]
	0x03392D5C MOV X0, X19
	0x03392D60 BL 0x338C8D8
	0x03392D64 MOVZ W8, 0x3E9
	0x03392D68 MOVK W8, 0x80070000
	0x03392D6C STR W8, [X19 + 0x60]
	0x03392D70 LDP X20, X19, [X31 + 0x10]
	0x03392D74 LDP X30, X21, [X31], #0x20
	0x03392D78 RET
	0x03392D7C STP X30, X19, [X31 - 0x10]!
	0x03392D80 MOV X19, X0
	0x03392D84 BL 0x338C8D8
	0x03392D88 MOVZ W8, 0x3E9
	0x03392D8C MOVK W8, 0x80070000
	0x03392D90 STR W8, [X19 + 0x60]
	0x03392D94 LDP X30, X19, [X31], #0x10
	0x03392D98 RET
	0x03392D9C B 0x338CA74
	0x03392DA0 STR X30, [X31 - 0x20]!
	0x03392DA4 STP X20, X19, [X31 + 0x10]
	0x03392DA8 ADRP X20, 0x104B000
	0x03392DAC ADRP X19, 0xD6E000
	0x03392DB0 LDRB W8, [X20 + 0x56]
	0x03392DB4 LDR X19, [X19 + 0x2F0]
	0x03392DB8 TBNZ X8, 0x0, 0x3392DD0
	0x03392DBC ADRP X0, 0xD6E000
	0x03392DC0 LDR X0, [X0 + 0x2F0]
	0x03392DC4 BL 0x1C16CF4
	0x03392DC8 MOVZ W8, 0x1
	0x03392DCC STRB W8, [X20 + 0x56]
	0x03392DD0 LDR X0, [X19]
	0x03392DD4 LDR W8, [X0 + 0xE0]
	0x03392DD8 CBNZ W8, 0x3392DE4
	0x03392DDC BL 0x1C16DFC
	0x03392DE0 LDR X0, [X19]
	0x03392DE4 LDR X8, [X0 + 0xB8]
	0x03392DE8 LDP X20, X19, [X31 + 0x10]
	0x03392DEC LDR X0, [X8 + 0x8]
	0x03392DF0 LDR X30, [X31], #0x20
	0x03392DF4 RET
	0x03392DF8 STR X30, [X31 - 0x20]!
	0x03392DFC STP X20, X19, [X31 + 0x10]
	0x03392E00 ADRP X20, 0x104B000
	0x03392E04 ADRP X19, 0xD6E000
	0x03392E08 LDRB W8, [X20 + 0x57]
	0x03392E0C LDR X19, [X19 + 0x2F0]
	0x03392E10 TBNZ X8, 0x0, 0x3392E28
	0x03392E14 ADRP X0, 0xD6E000
	0x03392E18 LDR X0, [X0 + 0x2F0]
	0x03392E1C BL 0x1C16CF4
	0x03392E20 MOVZ W8, 0x1
	0x03392E24 STRB W8, [X20 + 0x57]
	0x03392E28 LDR X0, [X19]
	0x03392E2C LDR W8, [X0 + 0xE0]
	0x03392E30 CBNZ W8, 0x3392E3C
	0x03392E34 BL 0x1C16DFC
	0x03392E38 LDR X0, [X19]
	0x03392E3C LDR X8, [X0 + 0xB8]
	0x03392E40 LDP X20, X19, [X31 + 0x10]
	0x03392E44 LDR X0, [X8 + 0x10]
	0x03392E48 LDR X30, [X31], #0x20
	0x03392E4C RET
	0x03392E50 STR X30, [X31 - 0x20]!
	0x03392E54 STP X20, X19, [X31 + 0x10]
	0x03392E58 ADRP X20, 0x104B000
	0x03392E5C ADRP X19, 0xD6E000
	0x03392E60 LDRB W8, [X20 + 0x58]
	0x03392E64 LDR X19, [X19 + 0x2F0]
	0x03392E68 TBNZ X8, 0x0, 0x3392E80
	0x03392E6C ADRP X0, 0xD6E000
	0x03392E70 LDR X0, [X0 + 0x2F0]
	0x03392E74 BL 0x1C16CF4
	0x03392E78 MOVZ W8, 0x1
	0x03392E7C STRB W8, [X20 + 0x58]
	0x03392E80 LDR X0, [X19]
	0x03392E84 LDR W8, [X0 + 0xE0]
	0x03392E88 CBNZ W8, 0x3392E94
	0x03392E8C BL 0x1C16DFC
	0x03392E90 LDR X0, [X19]
	0x03392E94 LDR X8, [X0 + 0xB8]
	0x03392E98 LDP X20, X19, [X31 + 0x10]
	0x03392E9C LDR X0, [X8 + 0x18]
	0x03392EA0 LDR X30, [X31], #0x20
	0x03392EA4 RET
	0x03392EA8 STR X30, [X31 - 0x30]!
	0x03392EAC STP X22, X21, [X31 + 0x10]
	0x03392EB0 STP X20, X19, [X31 + 0x20]
	0x03392EB4 ADRP X22, 0x104B000
	0x03392EB8 LDRB W8, [X22 + 0x59]
	0x03392EBC MOV X19, X2
	0x03392EC0 MOV X20, X1
	0x03392EC4 MOV X21, X0
	0x03392EC8 TBNZ X8, 0x0, 0x3392EEC
	0x03392ECC ADRP X0, 0xD98000
	0x03392ED0 LDR X0, [X0 + 0x248]
	0x03392ED4 BL 0x1C16CF4
	0x03392ED8 ADRP X0, 0xD63000
	0x03392EDC LDR X0, [X0 + 0x278]
	0x03392EE0 BL 0x1C16CF4
	0x03392EE4 MOVZ W8, 0x1
	0x03392EE8 STRB W8, [X22 + 0x59]
	0x03392EEC CMP X20, X19
	0x03392EF0 B.EQ 0x3392F7C
	0x03392EF4 CBZ X20, 0x3392F84
	0x03392EF8 CBZ X19, 0x3392F8C
	0x03392EFC ADRP X8, 0xD63000
	0x03392F00 LDR X8, [X8 + 0x278]
	0x03392F04 LDR X9, [X20]
	0x03392F08 LDR X8, [X8]
	0x03392F0C CMP X9, X8
	0x03392F10 B.NE 0x3392F20
	0x03392F14 LDR X9, [X19]
	0x03392F18 CMP X9, X8
	0x03392F1C B.EQ 0x3392FC8
	0x03392F20 ADRP X21, 0xD98000
	0x03392F24 LDR X21, [X21 + 0x248]
	0x03392F28 MOV X0, X20
	0x03392F2C LDR X1, [X21]
	0x03392F30 BL 0x1C16E00
	0x03392F34 CBZ X0, 0x3392FEC
	0x03392F38 LDR X8, [X0]
	0x03392F3C LDR X1, [X21]
	0x03392F40 MOV X20, X0
	0x03392F44 LDRH W9, [X8 + 0x12E]
	0x03392F48 CBZ X9, 0x3392F6C
	0x03392F4C LDR X10, [X8 + 0xB0]
	0x03392F50 ADD X10, X10, 0x8
	0x03392F54 LDUR X11, [X10 - 0x8]
	0x03392F58 CMP X11, X1
	0x03392F5C B.EQ 0x3392FA0
	0x03392F60 SUBS X9, X9, 0x1
	0x03392F64 ADD X10, X10, 0x10
	0x03392F68 B.NE 0x3392F54
	0x03392F6C MOV X0, X20
	0x03392F70 MOV W2, W31
	0x03392F74 BL 0x1C5C788
	0x03392F78 B 0x3392FAC
	0x03392F7C MOV W0, W31
	0x03392F80 B 0x3392F90
	0x03392F84 MOVN W0, 0x0
	0x03392F88 B 0x3392F90
	0x03392F8C MOVZ W0, 0x1
	0x03392F90 LDP X20, X19, [X31 + 0x20]
	0x03392F94 LDP X22, X21, [X31 + 0x10]
	0x03392F98 LDR X30, [X31], #0x30
	0x03392F9C RET
	0x03392FA0 LDRSW X9, [X10]
	0x03392FA4 ADD X8, X8, X9, 0x4, LSL
	0x03392FA8 ADD X0, X8, 0x138
	0x03392FAC LDP X3, X2, [X0]
	0x03392FB0 MOV X0, X20
	0x03392FB4 MOV X1, X19
	0x03392FB8 LDP X20, X19, [X31 + 0x20]
	0x03392FBC LDP X22, X21, [X31 + 0x10]
	0x03392FC0 LDR X30, [X31], #0x30
	0x03392FC4 BR X3
	0x03392FC8 LDR X8, [X21]
	0x03392FCC MOV X0, X21
	0x03392FD0 MOV X1, X20
	0x03392FD4 MOV X2, X19
	0x03392FD8 LDP X4, X3, [X8 + 0x1D8]
	0x03392FDC LDP X20, X19, [X31 + 0x20]
	0x03392FE0 LDP X22, X21, [X31 + 0x10]
	0x03392FE4 LDR X30, [X31], #0x30
	0x03392FE8 BR X4
	0x03392FEC ADRP X0, 0xD69000
	0x03392FF0 LDR X0, [X0 + 0x578]
	0x03392FF4 BL 0x1C16D08
	0x03392FF8 BL 0x1C16F10
	0x03392FFC MOV X19, X0
	0x03393000 ADRP X0, 0xD97000
	0x03393004 LDR X0, [X0 + 0x250]
	0x03393008 BL 0x1C16D08
	0x0339300C MOV X1, X0
	0x03393010 MOV X0, X19
	0x03393014 MOV X2, X31
	0x03393018 BL 0x3314A68
	0x0339301C ADRP X0, 0xD98000
	0x03393020 LDR X0, [X0 + 0x2E0]
	0x03393024 BL 0x1C16D08
	0x03393028 MOV X1, X0
	0x0339302C MOV X0, X19
	0x03393030 BL 0x1C16DEC
	0x03393034 STR X30, [X31 - 0x30]!
	0x03393038 STP X22, X21, [X31 + 0x10]
	0x0339303C STP X20, X19, [X31 + 0x20]
	0x03393040 ADRP X22, 0x104A000
	0x03393044 LDRB W8, [X22 + 0x5A]
	0x03393048 MOV X19, X2
	0x0339304C MOV X20, X1
	0x03393050 MOV X21, X0
	0x03393054 TBNZ X8, 0x0, 0x339306C
	0x03393058 ADRP X0, 0xD62000
	0x0339305C LDR X0, [X0 + 0x278]
	0x03393060 BL 0x1C16CF4
	0x03393064 MOVZ W8, 0x1
	0x03393068 STRB W8, [X22 + 0x5A]
	0x0339306C CMP X20, X19
	0x03393070 B.EQ 0x33930C4
	0x03393074 MOV W0, W31
	0x03393078 CBZ X20, 0x33930C8
	0x0339307C CBZ X19, 0x33930C8
	0x03393080 ADRP X8, 0xD62000
	0x03393084 LDR X8, [X8 + 0x278]
	0x03393088 LDR X9, [X8]
	0x0339308C LDR X8, [X20]
	0x03393090 CMP X8, X9
	0x03393094 B.NE 0x33930A8
	0x03393098 LDR X8, [X19]
	0x0339309C CMP X8, X9
	0x033930A0 MOV X8, X9
	0x033930A4 B.EQ 0x33930D8
	0x033930A8 LDP X3, X2, [X8 + 0x138]
	0x033930AC MOV X0, X20
	0x033930B0 MOV X1, X19
	0x033930B4 LDP X20, X19, [X31 + 0x20]
	0x033930B8 LDP X22, X21, [X31 + 0x10]
	0x033930BC LDR X30, [X31], #0x30
	0x033930C0 BR X3
	0x033930C4 MOVZ W0, 0x1
	0x033930C8 LDP X20, X19, [X31 + 0x20]
	0x033930CC LDP X22, X21, [X31 + 0x10]
	0x033930D0 LDR X30, [X31], #0x30
	0x033930D4 RET
	0x033930D8 LDR X8, [X21]
	0x033930DC MOV X0, X21
	0x033930E0 MOV X1, X20
	0x033930E4 MOV X2, X19
	0x033930E8 LDP X4, X3, [X8 + 0x1E8]
	0x033930EC LDP X20, X19, [X31 + 0x20]
	0x033930F0 LDP X22, X21, [X31 + 0x10]
	0x033930F4 LDR X30, [X31], #0x30
	0x033930F8 BR X4
	0x033930FC STP X30, X21, [X31 - 0x20]!
	0x03393100 STP X20, X19, [X31 + 0x10]
	0x03393104 ADRP X21, 0x104A000
	0x03393108 LDRB W8, [X21 + 0x5B]
	0x0339310C MOV X19, X1
	0x03393110 MOV X20, X0
	0x03393114 TBNZ X8, 0x0, 0x339312C
	0x03393118 ADRP X0, 0xD62000
	0x0339311C LDR X0, [X0 + 0x278]
	0x03393120 BL 0x1C16CF4
	0x03393124 MOVZ W8, 0x1
	0x03393128 STRB W8, [X21 + 0x5B]
	0x0339312C CBZ X19, 0x3393178
	0x03393130 ADRP X8, 0xD62000
	0x03393134 LDR X8, [X8 + 0x278]
	0x03393138 LDR X9, [X8]
	0x0339313C LDR X8, [X19]
	0x03393140 CMP X8, X9
	0x03393144 B.EQ 0x339315C
	0x03393148 LDP X2, X1, [X8 + 0x158]
	0x0339314C MOV X0, X19
	0x03393150 LDP X20, X19, [X31 + 0x10]
	0x03393154 LDP X30, X21, [X31], #0x20
	0x03393158 BR X2
	0x0339315C LDR X8, [X20]
	0x03393160 MOV X0, X20
	0x03393164 MOV X1, X19
	0x03393168 LDP X20, X19, [X31 + 0x10]
	0x0339316C LDP X3, X2, [X8 + 0x1F8]
	0x03393170 LDP X30, X21, [X31], #0x20
	0x03393174 BR X3
	0x03393178 ADRP X0, 0xD65000
	0x0339317C LDR X0, [X0 + 0x528]
	0x03393180 BL 0x1C16D08
	0x03393184 BL 0x1C16F10
	0x03393188 MOV X19, X0
	0x0339318C ADRP X0, 0xD6B000
	0x03393190 LDR X0, [X0 + 0x8A8]
	0x03393194 BL 0x1C16D08
	0x03393198 MOV X1, X0
	0x0339319C MOV X0, X19
	0x033931A0 MOV X2, X31
	0x033931A4 BL 0x330E100
	0x033931A8 ADRP X0, 0xD98000
	0x033931AC LDR X0, [X0 + 0x2E8]
	0x033931B0 BL 0x1C16D08
	0x033931B4 MOV X1, X0
	0x033931B8 MOV X0, X19
	0x033931BC BL 0x1C16DEC
	0x033931C0 MOV X1, X31
	0x033931C4 B 0x33BDD8C
	0x033931C8 STR X30, [X31 - 0x40]!
	0x033931CC STP X24, X23, [X31 + 0x10]
	0x033931D0 STP X22, X21, [X31 + 0x20]
	0x033931D4 STP X20, X19, [X31 + 0x30]
	0x033931D8 ADRP X20, 0x104A000
	0x033931DC ADRP X19, 0xD62000
	0x033931E0 LDRB W8, [X20 + 0x5C]
	0x033931E4 LDR X19, [X19 + 0xC48]
	0x033931E8 TBNZ X8, 0x0, 0x3393230
	0x033931EC ADRP X0, 0xD98000
	0x033931F0 LDR X0, [X0 + 0x2F0]
	0x033931F4 BL 0x1C16CF4
	0x033931F8 ADRP X0, 0xD62000
	0x033931FC LDR X0, [X0 + 0xC48]
	0x03393200 BL 0x1C16CF4
	0x03393204 ADRP X0, 0xD98000
	0x03393208 LDR X0, [X0 + 0x2F8]
	0x0339320C BL 0x1C16CF4
	0x03393210 ADRP X0, 0xD98000
	0x03393214 LDR X0, [X0 + 0x300]
	0x03393218 BL 0x1C16CF4
	0x0339321C ADRP X0, 0xD6D000
	0x03393220 LDR X0, [X0 + 0x2F0]
	0x03393224 BL 0x1C16CF4
	0x03393228 MOVZ W8, 0x1
	0x0339322C STRB W8, [X20 + 0x5C]
	0x03393230 LDR X0, [X19]
	0x03393234 ADRP X24, 0xD98000
	0x03393238 ADRP X21, 0xD6D000
	0x0339323C ADRP X23, 0xD98000
	0x03393240 ADRP X22, 0xD98000
	0x03393244 LDR W8, [X0 + 0xE0]
	0x03393248 LDR X24, [X24 + 0x2F0]
	0x0339324C LDR X21, [X21 + 0x2F0]
	0x03393250 LDR X23, [X23 + 0x2F8]
	0x03393254 LDR X22, [X22 + 0x300]
	0x03393258 CBNZ W8, 0x3393260
	0x0339325C BL 0x1C16DFC
	0x03393260 MOV X0, X31
	0x03393264 BL 0x3338524
	0x03393268 LDR X8, [X24]
	0x0339326C MOV X19, X0
	0x03393270 MOV X0, X8
	0x03393274 BL 0x1C16F10
	0x03393278 MOV X1, X19
	0x0339327C MOV W2, W31
	0x03393280 MOV X20, X0
	0x03393284 BL 0x339331C
	0x03393288 LDR X8, [X21]
	0x0339328C MOV X0, X31
	0x03393290 LDR X8, [X8 + 0xB8]
	0x03393294 STR X20, [X8]
	0x03393298 BL 0x3338524
	0x0339329C LDR X8, [X24]
	0x033932A0 MOV X19, X0
	0x033932A4 MOV X0, X8
	0x033932A8 BL 0x1C16F10

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 NotImplemented "Instruction MRS not yet implemented."
	015 Move [X31], X8
	016 Move X8, [X8+40]
	017 Move X19, 0x104C000
	018 Move W21, W2
	019 Move W20, W1
	020 Move [X31+56], X8
	021 Move W8, [X19+79]
	022 Move [X31+8], X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {47}
	027 Move X0, 0xD9A000
	028 Move X0, [X0+664]
	029 Call 0x1C17CF4
	030 Move X0, 0xD9A000
	031 Move X0, [X0+672]
	032 Call 0x1C17CF4
	033 Move X0, 0xD9A000
	034 Move X0, [X0+640]
	035 Call 0x1C17CF4
	036 Move X0, 0xD9A000
	037 Move X0, [X0+680]
	038 Call 0x1C17CF4
	039 Move X0, 0xD9A000
	040 Move X0, [X0+656]
	041 Call 0x1C17CF4
	042 Move X0, 0xD9A000
	043 Move X0, [X0+688]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X19+79], W8
	047 Move X27, 0xD9A000
	048 Move X28, 0xD9A000
	049 Move X27, [X27+656]
	050 Move X28, [X28+640]
	051 Move X8, [X31+8]
	052 Move X0, X31
	053 Move [X31+40], X31
	054 Move [X31+48], X31
	055 Move [X31+16], X31
	056 Move [X31+24], X31
	057 Add X29, X8, W21
	058 Call Vector.get_IsHardwareAccelerated
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {109}
	063 Move X0, [X27]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Move X19, [X28]
	069 Move X0, [X19+32]
	070 Move W8, [X0+309]
	071 Move TEMP, X8
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfEqual {76}
	075 Call 0x1C5D684
	076 Move X8, [X0+192]
	077 Move X0, [X8+8]
	078 Move W8, [X0+309]
	079 Move TEMP, X8
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfEqual {84}
	083 Call 0x1C5D684
	084 Move W8, [X0+224]
	085 Compare W8, 0
	086 JumpIfNotEqual {88}
	087 Call 0x1C17DFC
	088 Move X0, [X19+32]
	089 Move W8, [X0+309]
	090 Move TEMP, X8
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfEqual {95}
	094 Call 0x1C5D684
	095 Move X8, [X0+192]
	096 Move X0, [X8+8]
	097 Move W8, [X0+309]
	098 Move TEMP, X8
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfEqual {103}
	102 Call 0x1C5D684
	103 Move X8, [X0+184]
	104 Move W8, [X8]
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move W21, W29
	107 ShiftRight W21, 1
	108 And W21, W21, 7
	109 NotImplemented "Instruction CMP not yet implemented."
	110 NotImplemented "Instruction LDURH not yet implemented."
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Subtract X8, X29, 8
	113 NotImplemented "Instruction LDURH not yet implemented."
	114 NotImplemented "Instruction CMP not yet implemented."
	115 NotImplemented "Instruction LDURH not yet implemented."
	116 NotImplemented "Instruction CMP not yet implemented."
	117 NotImplemented "Instruction LDRH not yet implemented."
	118 Subtract W21, W21, 4
	119 Move X29, X8
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Add W8, W21, 1
	122 Subtract W8, W8, 1
	123 NotImplemented "Instruction CMP not yet implemented."
	124 NotImplemented "Instruction LDRH not yet implemented."
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move X0, X31
	127 Call Vector.get_IsHardwareAccelerated
	128 Move TEMP, X0
	129 And TEMP, TEMP, 1
	130 Compare TEMP, 1
	131 JumpIfNotEqual {428}
	132 Move X8, [X31+8]
	133 Subtract X19, X29, X8
	134 Move X0, [X27]
	135 Move W8, [X0+224]
	136 Compare W8, 0
	137 JumpIfNotEqual {139}
	138 Call 0x1C17DFC
	139 Move X21, [X28]
	140 Move X0, [X21+32]
	141 Move W8, [X0+309]
	142 Move TEMP, X8
	143 And TEMP, TEMP, 1
	144 Compare TEMP, 1
	145 JumpIfEqual {147}
	146 Call 0x1C5D684
	147 Move X8, [X0+192]
	148 Move X0, [X8+8]
	149 Move W8, [X0+309]
	150 Move TEMP, X8
	151 And TEMP, TEMP, 1
	152 Compare TEMP, 1
	153 JumpIfEqual {155}
	154 Call 0x1C5D684
	155 Move W8, [X0+224]
	156 Compare W8, 0
	157 JumpIfNotEqual {159}
	158 Call 0x1C17DFC
	159 Move X0, [X21+32]
	160 Move W8, [X0+309]
	161 Move TEMP, X8
	162 And TEMP, TEMP, 1
	163 Compare TEMP, 1
	164 JumpIfEqual {166}
	165 Call 0x1C5D684
	166 Move X8, [X0+192]
	167 Move X0, [X8+8]
	168 Move W8, [X0+309]
	169 Move TEMP, X8
	170 And TEMP, TEMP, 1
	171 Compare TEMP, 1
	172 JumpIfEqual {174}
	173 Call 0x1C5D684
	174 Move X8, [X0+184]
	175 Move X10, 0xD9A000
	176 NotImplemented "Instruction CMP not yet implemented."
	177 NotImplemented "Instruction CINC not yet implemented."
	178 Move W8, [X8]
	179 Move X10, [X10+672]
	180 Move X9, X9
	181 ShiftRight X9, 1
	182 And X9, X9, 0x7FFFFFFF
	183 Add X0, X31, 40
	184 Subtract W8, W31, W8
	185 Move X2, [X10]
	186 Move W1, W20
	187 And W19, W8, W9
	188 Call 0x281FB6C, X0, X1
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move X0, [X27]
	191 Move W8, [X0+224]
	192 Compare W8, 0
	193 JumpIfNotEqual {195}
	194 Call 0x1C17DFC
	195 Move X21, [X28]
	196 Move X0, [X21+32]
	197 Move W8, [X0+309]
	198 Move TEMP, X8
	199 And TEMP, TEMP, 1
	200 Compare TEMP, 1
	201 JumpIfEqual {203}
	202 Call 0x1C5D684
	203 Move X8, [X0+192]
	204 Move X0, [X8+8]
	205 Move W8, [X0+309]
	206 Move TEMP, X8
	207 And TEMP, TEMP, 1
	208 Compare TEMP, 1
	209 JumpIfEqual {211}
	210 Call 0x1C5D684
	211 Move W8, [X0+224]
	212 Compare W8, 0
	213 JumpIfNotEqual {215}
	214 Call 0x1C17DFC
	215 Move X0, [X21+32]
	216 Move W8, [X0+309]
	217 Move TEMP, X8
	218 And TEMP, TEMP, 1
	219 Compare TEMP, 1
	220 JumpIfEqual {222}
	221 Call 0x1C5D684
	222 Move X8, [X0+192]
	223 Move X0, [X8+8]
	224 Move W8, [X0+309]
	225 Move TEMP, X8
	226 And TEMP, TEMP, 1
	227 Compare TEMP, 1
	228 JumpIfEqual {230}
	229 Call 0x1C5D684
	230 Move X9, 0xD9A000
	231 Move X8, [X0+184]
	232 Move X9, [X9+688]
	233 Move X23, [X31+40]
	234 Move X21, [X31+48]
	235 Move X25, [X9]
	236 NotImplemented "Instruction LDRSW not yet implemented."
	237 Move X8, [X25+56]
	238 Subtract X26, X29, X9
	239 Move X24, [X26]
	240 Move X22, [X26+8]
	241 Compare X8, 0
	242 JumpIfNotEqual {246}
	243 Move X0, X25
	244 Call 0x1C5D6E0
	245 Move X8, [X25+56]
	246 Move X0, [X8+16]
	247 Move W8, [X0+309]
	248 Move TEMP, X8
	249 And TEMP, TEMP, 1
	250 Compare TEMP, 1
	251 JumpIfEqual {253}
	252 Call 0x1C5D684
	253 Move W8, [X0+224]
	254 Compare W8, 0
	255 JumpIfNotEqual {257}
	256 Call 0x1C17DFC
	257 Move X8, [X25+56]
	258 Move X0, X23
	259 Move X1, X21
	260 Move X2, X24
	261 Move X4, [X8+8]
	262 Move X3, X22
	263 Call 0x22BB330
	264 Move X8, 0xD99000
	265 Move X8, [X8+680]
	266 Move X21, X0
	267 Move X22, X1
	268 Move X23, [X8]
	269 Move X0, [X23+32]
	270 Move W8, [X0+309]
	271 Move TEMP, X8
	272 And TEMP, TEMP, 1
	273 Compare TEMP, 1
	274 JumpIfEqual {276}
	275 Call 0x1C5D684
	276 Move X8, [X0+192]
	277 Move X0, [X8+8]
	278 Move W8, [X0+309]
	279 Move TEMP, X8
	280 And TEMP, TEMP, 1
	281 Compare TEMP, 1
	282 JumpIfEqual {284}
	283 Call 0x1C5D684
	284 Move W8, [X0+224]
	285 Compare W8, 0
	286 JumpIfNotEqual {288}
	287 Call 0x1C17DFC
	288 Move X0, [X23+32]
	289 Move W8, [X0+309]
	290 Move TEMP, X8
	291 And TEMP, TEMP, 1
	292 Compare TEMP, 1
	293 JumpIfEqual {295}
	294 Call 0x1C5D684
	295 Move X8, [X0+192]
	296 Move X0, [X8+8]
	297 Move W8, [X0+309]
	298 Move TEMP, X8
	299 And TEMP, TEMP, 1
	300 Compare TEMP, 1
	301 JumpIfEqual {303}
	302 Call 0x1C5D684
	303 Move X8, [X0+184]
	304 Add X0, X31, 16
	305 Move X1, X21
	306 Move X2, X22
	307 NotImplemented "Instruction LDUR not yet implemented."
	308 Move X8, 0xD99000
	309 Move X8, [X8+664]
	310 Move [X31+1], V0
	311 Move X3, [X8]
	312 Call 0x2823174, X0, X1
	313 Move TEMP, X0
	314 And TEMP, TEMP, 1
	315 Compare TEMP, 1
	316 JumpIfNotEqual {416}
	317 Move X0, [X27]
	318 Move W8, [X0+224]
	319 Compare W8, 0
	320 JumpIfNotEqual {322}
	321 Call 0x1C17DFC
	322 Move X21, [X28]
	323 Move X0, [X21+32]
	324 Move W8, [X0+309]
	325 Move TEMP, X8
	326 And TEMP, TEMP, 1
	327 Compare TEMP, 1
	328 JumpIfEqual {330}
	329 Call 0x1C5D684
	330 Move X8, [X0+192]
	331 Move X0, [X8+8]
	332 Move W8, [X0+309]
	333 Move TEMP, X8
	334 And TEMP, TEMP, 1
	335 Compare TEMP, 1
	336 JumpIfEqual {338}
	337 Call 0x1C5D684
	338 Move W8, [X0+224]
	339 Compare W8, 0
	340 JumpIfNotEqual {342}
	341 Call 0x1C17DFC
	342 Move X0, [X21+32]
	343 Move W8, [X0+309]
	344 Move TEMP, X8
	345 And TEMP, TEMP, 1
	346 Compare TEMP, 1
	347 JumpIfEqual {349}
	348 Call 0x1C5D684
	349 Move X8, [X0+192]
	350 Move X0, [X8+8]
	351 Move W8, [X0+309]
	352 Move TEMP, X8
	353 And TEMP, TEMP, 1
	354 Compare TEMP, 1
	355 JumpIfEqual {357}
	356 Call 0x1C5D684
	357 Move X22, [X28]
	358 Move X9, [X0+184]
	359 Move X8, [X22+32]
	360 NotImplemented "Instruction LDRSW not yet implemented."
	361 Move W10, [X8+309]
	362 Move TEMP, X10
	363 And TEMP, TEMP, 1
	364 Compare TEMP, 1
	365 JumpIfEqual {369}
	366 Move X0, X8
	367 Call 0x1C5D684
	368 Move X8, X0
	369 Move X8, [X8+192]
	370 Move X0, [X8+8]
	371 Move W8, [X0+309]
	372 Move TEMP, X8
	373 And TEMP, TEMP, 1
	374 Compare TEMP, 1
	375 JumpIfEqual {377}
	376 Call 0x1C5D684
	377 Move W8, [X0+224]
	378 Compare W8, 0
	379 JumpIfNotEqual {381}
	380 Call 0x1C17DFC
	381 Move X0, [X22+32]
	382 Move W8, [X0+309]
	383 Move TEMP, X8
	384 And TEMP, TEMP, 1
	385 Compare TEMP, 1
	386 JumpIfEqual {388}
	387 Call 0x1C5D684
	388 Move X8, [X0+192]
	389 Subtract X29, X29, X21
	390 Move X0, [X8+8]
	391 Move W8, [X0+309]
	392 Move TEMP, X8
	393 And TEMP, TEMP, 1
	394 Compare TEMP, 1
	395 JumpIfEqual {397}
	396 Call 0x1C5D684
	397 Move X8, [X0+184]
	398 Move W8, [X8]
	399 Subtract W19, W19, W8
	400 NotImplemented "Instruction CMP not yet implemented."
	401 Move X8, [X31+8]
	402 Subtract X8, X29, X8
	403 NotImplemented "Instruction CMP not yet implemented."
	404 NotImplemented "Instruction CINC not yet implemented."
	405 Move X21, X8
	406 ShiftRight X21, 1
	407 And X21, X21, 0x7FFFFFFF
	408 Move X8, X29
	409 Move X9, [X31+8]
	410 Subtract X8, X8, X9
	411 NotImplemented "Instruction CMP not yet implemented."
	412 NotImplemented "Instruction CINC not yet implemented."
	413 Move X0, X8
	414 ShiftRight X0, 1
	415 And X0, X0, 0x7FFFFFFF
	416 Move X0, X21
	417 Move X1, X22
	418 Move X2, X31
	419 Call 0x33A4220
	420 Move X8, [X31+8]
	421 Subtract X8, X26, X8
	422 NotImplemented "Instruction CMP not yet implemented."
	423 NotImplemented "Instruction CINC not yet implemented."
	424 Move X8, X8
	425 ShiftRight X8, 1
	426 And X8, X8, 0x7FFFFFFF
	427 Add W0, W0, W8
	428 Move TEMP, 0
	429 Not TEMP
	430 Move W0, TEMP
	431 Move X9, [X31+8]
	432 Subtract X8, X8, X9
	433 NotImplemented "Instruction CMP not yet implemented."
	434 NotImplemented "Instruction CINC not yet implemented."
	435 Move X8, X8
	436 ShiftRight X8, 1
	437 And X8, X8, 0x7FFFFFFF
	438 Add W0, W8, 3
	439 Move X9, [X31+8]
	440 Subtract X8, X8, X9
	441 NotImplemented "Instruction CMP not yet implemented."
	442 NotImplemented "Instruction CINC not yet implemented."
	443 Move X8, X8
	444 ShiftRight X8, 1
	445 And X8, X8, 0x7FFFFFFF
	446 Add W0, W8, 2
	447 Move X9, [X31+8]
	448 Subtract X8, X8, X9
	449 NotImplemented "Instruction CMP not yet implemented."
	450 NotImplemented "Instruction CINC not yet implemented."
	451 Move X8, X8
	452 ShiftRight X8, 1
	453 And X8, X8, 0x7FFFFFFF
	454 Add W0, W8, 1
	455 Move X8, [X31]
	456 Move X8, [X8+40]
	457 Move X9, [X31+56]
	458 NotImplemented "Instruction CMP not yet implemented."
	459 Move X20, [X31+144]
	460 Move X19, [X31+152]
	461 Move X22, [X31+128]
	462 Move X21, [X31+136]
	463 Move X24, [X31+112]
	464 Move X23, [X31+120]
	465 Move X26, [X31+96]
	466 Move X25, [X31+104]
	467 Move X28, [X31+80]
	468 Move X27, [X31+88]
	469 Move X29, [X31+64]
	470 Move X30, [X31+72]
	471 Add X31, X31, 160
	472 Return X0
	473 Call 0x3EB2B20

Method: System.Int32 LocateFirstFoundChar(System.Numerics.Vector`1<System.UInt16> match)

Disassembly:
	0x033932AC MOVZ W2, 0x1
	0x033932B0 MOV X1, X19
	0x033932B4 MOV X20, X0
	0x033932B8 BL 0x339331C
	0x033932BC LDR X8, [X21]
	0x033932C0 LDR X8, [X8 + 0xB8]
	0x033932C4 STR X20, [X8 + 0x8]
	0x033932C8 LDR X0, [X23]
	0x033932CC BL 0x1C16F10
	0x033932D0 MOV W1, W31
	0x033932D4 MOV X19, X0
	0x033932D8 BL 0x3393928
	0x033932DC LDR X8, [X21]
	0x033932E0 LDR X8, [X8 + 0xB8]
	0x033932E4 STR X19, [X8 + 0x10]
	0x033932E8 LDR X0, [X22]
	0x033932EC BL 0x1C16F10
	0x033932F0 MOVZ W1, 0x1
	0x033932F4 MOV X19, X0
	0x033932F8 BL 0x3393928
	0x033932FC LDR X8, [X21]
	0x03393300 LDP X22, X21, [X31 + 0x20]
	0x03393304 LDP X24, X23, [X31 + 0x10]
	0x03393308 LDR X8, [X8 + 0xB8]
	0x0339330C STR X19, [X8 + 0x18]
	0x03393310 LDP X20, X19, [X31 + 0x30]
	0x03393314 LDR X30, [X31], #0x40
	0x03393318 RET
	0x0339331C STR X30, [X31 - 0x20]!
	0x03393320 STP X20, X19, [X31 + 0x10]
	0x03393324 CBZ X1, 0x339335C
	0x03393328 LDR X8, [X1]
	0x0339332C MOV X20, X0
	0x03393330 MOV X0, X1
	0x03393334 MOV W19, W2
	0x03393338 LDP X9, X8, [X8 + 0x1F8]
	0x0339333C MOV X1, X8
	0x03393340 BLR X9
	0x03393344 MOV X1, X0
	0x03393348 MOV X0, X20
	0x0339334C MOV W2, W19
	0x03393350 LDP X20, X19, [X31 + 0x10]
	0x03393354 LDR X30, [X31], #0x20
	0x03393358 B 0x3393370
	0x0339335C BL 0x1C16F20
	0x03393360 MOV W1, W31
	0x03393364 B 0x3393928
	0x03393368 MOVZ W1, 0x1
	0x0339336C B 0x3393928
	0x03393370 STP X30, X23, [X31 - 0x30]!
	0x03393374 STP X22, X21, [X31 + 0x10]
	0x03393378 STP X20, X19, [X31 + 0x20]
	0x0339337C ADRP X22, 0x104A000
	0x03393380 ADRP X23, 0xD6D000
	0x03393384 LDRB W8, [X22 + 0x5D]
	0x03393388 LDR X23, [X23 + 0x2F0]
	0x0339338C MOV W19, W2
	0x03393390 MOV X21, X1
	0x03393394 MOV X20, X0
	0x03393398 TBNZ X8, 0x0, 0x33933B0
	0x0339339C ADRP X0, 0xD6D000
	0x033933A0 LDR X0, [X0 + 0x2F0]
	0x033933A4 BL 0x1C16CF4
	0x033933A8 MOVZ W8, 0x1
	0x033933AC STRB W8, [X22 + 0x5D]
	0x033933B0 LDR X0, [X23]
	0x033933B4 LDR W8, [X0 + 0xE0]
	0x033933B8 CBNZ W8, 0x33933C0
	0x033933BC BL 0x1C16DFC
	0x033933C0 MOV X0, X20
	0x033933C4 MOV X1, X31
	0x033933C8 BL 0x33BDD8C
	0x033933CC MOVZ W8, 0xFFE0
	0x033933D0 MOVK W8, 0xDFFF0000
	0x033933D4 ANDS W31, W19, W8, 0x0
	0x033933D8 STR X21, [X20 + 0x10]
	0x033933DC B.NE 0x33933F4
	0x033933E0 STR W19, [X20 + 0x18]
	0x033933E4 LDP X20, X19, [X31 + 0x20]
	0x033933E8 LDP X22, X21, [X31 + 0x10]
	0x033933EC LDP X30, X23, [X31], #0x30
	0x033933F0 RET
	0x033933F4 ADRP X0, 0xD68000
	0x033933F8 LDR X0, [X0 + 0x578]
	0x033933FC BL 0x1C16D08
	0x03393400 BL 0x1C16F10
	0x03393404 MOV X19, X0
	0x03393408 ADRP X0, 0xD90000
	0x0339340C LDR X0, [X0 + 0x958]
	0x03393410 BL 0x1C16D08
	0x03393414 MOV X20, X0
	0x03393418 ADRP X0, 0xD94000
	0x0339341C LDR X0, [X0 + 0x830]
	0x03393420 BL 0x1C16D08
	0x03393424 MOV X2, X0
	0x03393428 MOV X0, X19
	0x0339342C MOV X1, X20
	0x03393430 MOV X3, X31
	0x03393434 BL 0x330E16C
	0x03393438 ADRP X0, 0xD98000
	0x0339343C LDR X0, [X0 + 0x308]
	0x03393440 BL 0x1C16D08
	0x03393444 MOV X1, X0
	0x03393448 MOV X0, X19
	0x0339344C BL 0x1C16DEC
	0x03393450 STR X30, [X31 - 0x30]!
	0x03393454 STP X22, X21, [X31 + 0x10]
	0x03393458 STP X20, X19, [X31 + 0x20]
	0x0339345C ADRP X22, 0x104A000
	0x03393460 ADRP X21, 0xD6D000
	0x03393464 LDRB W8, [X22 + 0x5E]
	0x03393468 LDR X21, [X21 + 0x2F0]
	0x0339346C MOV X20, X1
	0x03393470 MOV X19, X0
	0x03393474 TBNZ X8, 0x0, 0x33934EC
	0x03393478 ADRP X0, 0xD97000
	0x0339347C LDR X0, [X0 + 0x228]
	0x03393480 BL 0x1C16CF4
	0x03393484 ADRP X0, 0xD8E000

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+40], X25
	004 Move [X31+48], X24
	005 Move [X31+56], X23
	006 Move [X31+64], X22
	007 Move [X31+72], X21
	008 Move [X31+80], X20
	009 Move [X31+88], X19
	010 NotImplemented "Instruction MRS not yet implemented."
	011 Move X8, [X22+40]
	012 Move X23, 0x104B000
	013 Move X21, 0xD99000
	014 Move X19, X1
	015 Move [X31+24], X8
	016 Move W8, [X23+80]
	017 Move X21, [X21+696]
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0xD99000
	024 Move X0, [X0+704]
	025 Call 0x1C17CF4
	026 Move X0, 0xD99000
	027 Move X0, [X0+712]
	028 Call 0x1C17CF4
	029 Move X0, 0xD99000
	030 Move X0, [X0+720]
	031 Call 0x1C17CF4
	032 Move X0, 0xD99000
	033 Move X0, [X0+696]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X23+80], W8
	037 Move X21, [X21]
	038 Move [X31+8], X31
	039 Move [X31+16], X31
	040 Move X8, [X21+56]
	041 Compare X8, 0
	042 JumpIfNotEqual {46}
	043 Move X0, X21
	044 Call 0x1C5D6E0
	045 Move X8, [X21+56]
	046 Move X0, [X8+16]
	047 Move W8, [X0+309]
	048 Move TEMP, X8
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {53}
	052 Call 0x1C5D684
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Move X8, [X21+56]
	058 Move X21, 0xD99000
	059 Move X23, 0xD99000
	060 Move X24, 0xD99000
	061 Move X2, [X8+8]
	062 Move X21, [X21+720]
	063 Move X23, [X23+704]
	064 Move X24, [X24+712]
	065 Move X0, X20
	066 Move X1, X19
	067 Call 0x28264B0, X0
	068 Move W20, W31
	069 Move W19, W31
	070 Move [X31+8], X0
	071 Move [X31+16], X1
	072 Move X0, [X21]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Move X25, [X23]
	078 Move X0, [X25+32]
	079 Move W8, [X0+309]
	080 Move TEMP, X8
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfEqual {85}
	084 Call 0x1C5D684
	085 Move X8, [X0+192]
	086 Move X0, [X8+8]
	087 Move W8, [X0+309]
	088 Move TEMP, X8
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfEqual {93}
	092 Call 0x1C5D684
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {97}
	096 Call 0x1C17DFC
	097 Move X0, [X25+32]
	098 Move W8, [X0+309]
	099 Move TEMP, X8
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfEqual {104}
	103 Call 0x1C5D684
	104 Move X8, [X0+192]
	105 Move X0, [X8+8]
	106 Move W8, [X0+309]
	107 Move TEMP, X8
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfEqual {112}
	111 Call 0x1C5D684
	112 Move X8, [X0+184]
	113 Move W8, [X8]
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move X0, [X21]
	116 Move W8, [X0+224]
	117 Compare W8, 0
	118 JumpIfNotEqual {120}
	119 Call 0x1C17DFC
	120 Move X2, [X24]
	121 Add X0, X31, 8
	122 Move W1, W19
	123 Call Vector`1<UInt64>.get_Item, X0, X1
	124 Compare X0, 0
	125 JumpIfNotEqual {129}
	126 Add W19, W19, 1
	127 Add W20, W20, 4
	128 Move X0, X31
	129 Move X8, [X22+40]
	130 Move X9, [X31+24]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X9, 4
	133 Subtract X8, X0, 1
	134 NotImplemented "Instruction MOVK not yet implemented."
	135 Xor X8, X8, X0
	136 NotImplemented "Instruction MOVK not yet implemented."
	137 Multiply X8, X8, X9
	138 Move X8, X8
	139 ShiftRight X8, 49
	140 And X8, X8, 0x7FFFFFFF
	141 Add W0, W8, W20
	142 Move X20, [X31+80]
	143 Move X19, [X31+88]
	144 Move X22, [X31+64]
	145 Move X21, [X31+72]
	146 Move X24, [X31+48]
	147 Move X23, [X31+56]
	148 Move X30, [X31+32]
	149 Move X25, [X31+40]
	150 Add X31, X31, 96
	151 Return X0
	152 Call 0x3EB2B20

Method: System.Int32 LocateFirstFoundChar(System.UInt64 match)

Disassembly:
	0x03393488 LDR X0, [X0 + 0xFD0]
	0x0339348C BL 0x1C16CF4
	0x03393490 ADRP X0, 0xD98000
	0x03393494 LDR X0, [X0 + 0x310]
	0x03393498 BL 0x1C16CF4
	0x0339349C ADRP X0, 0xD95000
	0x033934A0 LDR X0, [X0 + 0xC48]
	0x033934A4 BL 0x1C16CF4

ISIL:
	001 Move X9, 4
	002 Subtract X8, X0, 1
	003 NotImplemented "Instruction MOVK not yet implemented."
	004 Xor X8, X8, X0
	005 NotImplemented "Instruction MOVK not yet implemented."
	006 Multiply X8, X8, X9
	007 Move X0, X8
	008 ShiftRight X0, 49
	009 And X0, X0, 0x7FFFFFFF
	010 Return X0

Method: System.Int32 LocateLastFoundChar(System.Numerics.Vector`1<System.UInt16> match)

Disassembly:
	0x033934A8 ADRP X0, 0xD6D000
	0x033934AC LDR X0, [X0 + 0x2F0]
	0x033934B0 BL 0x1C16CF4
	0x033934B4 ADRP X0, 0xD60000
	0x033934B8 LDR X0, [X0 + 0x6C0]
	0x033934BC BL 0x1C16CF4
	0x033934C0 ADRP X0, 0xD98000
	0x033934C4 LDR X0, [X0 + 0x318]
	0x033934C8 BL 0x1C16CF4
	0x033934CC ADRP X0, 0xD98000
	0x033934D0 LDR X0, [X0 + 0x320]
	0x033934D4 BL 0x1C16CF4
	0x033934D8 ADRP X0, 0xD98000
	0x033934DC LDR X0, [X0 + 0x328]
	0x033934E0 BL 0x1C16CF4
	0x033934E4 MOVZ W8, 0x1
	0x033934E8 STRB W8, [X22 + 0x5E]
	0x033934EC LDR X0, [X21]
	0x033934F0 ADRP X21, 0xD97000
	0x033934F4 ADRP X22, 0xD60000
	0x033934F8 LDR W8, [X0 + 0xE0]
	0x033934FC LDR X21, [X21 + 0x228]
	0x03393500 LDR X22, [X22 + 0x6C0]
	0x03393504 CBNZ W8, 0x339350C
	0x03393508 BL 0x1C16DFC
	0x0339350C MOV X0, X19
	0x03393510 MOV X1, X31
	0x03393514 BL 0x33BDD8C
	0x03393518 LDR X0, [X22]
	0x0339351C LDR X21, [X21]
	0x03393520 LDR W8, [X0 + 0xE0]
	0x03393524 CBNZ W8, 0x339352C
	0x03393528 BL 0x1C16DFC
	0x0339352C MOV X0, X21
	0x03393530 BL 0x338C698
	0x03393534 CBZ X20, 0x3393658
	0x03393538 ADRP X8, 0xD98000
	0x0339353C LDR X8, [X8 + 0x328]
	0x03393540 MOV X2, X0
	0x03393544 MOV X0, X20
	0x03393548 MOV X3, X31
	0x0339354C LDR X1, [X8]
	0x03393550 BL 0x32A9678
	0x03393554 CBZ X0, 0x33935B4
	0x03393558 ADRP X8, 0xD8E000
	0x0339355C LDR X8, [X8 + 0xFD0]
	0x03393560 LDR X9, [X0]
	0x03393564 LDR X1, [X8]
	0x03393568 LDRB W10, [X9 + 0x130]
	0x0339356C LDRB W8, [X1 + 0x130]
	0x03393570 CMP W10, W8
	0x03393574 B.CC 0x3393654
	0x03393578 LDR X10, [X9 + 0xC8]
	0x0339357C SUB X9, X8, 0x1
	0x03393580 LDR X10, [X10, X9, LSL #3]
	0x03393584 CMP X10, X1
	0x03393588 B.NE 0x3393654
	0x0339358C STR X0, [X19 + 0x10]
	0x03393590 LDR X10, [X0]
	0x03393594 LDRB W11, [X10 + 0x130]
	0x03393598 CMP W11, W8
	0x0339359C B.CC 0x3393654
	0x033935A0 LDR X8, [X10 + 0xC8]
	0x033935A4 LDR X8, [X8, X9, LSL #3]
	0x033935A8 CMP X8, X1
	0x033935AC B.EQ 0x33935B8
	0x033935B0 B 0x3393654
	0x033935B4 STR X31, [X19 + 0x10]
	0x033935B8 ADRP X8, 0xD98000
	0x033935BC LDR X8, [X8 + 0x318]
	0x033935C0 ADRP X21, 0xD98000
	0x033935C4 ADRP X22, 0xD98000
	0x033935C8 MOV X0, X20
	0x033935CC LDR X1, [X8]
	0x033935D0 LDR X21, [X21 + 0x310]
	0x033935D4 LDR X22, [X22 + 0x320]
	0x033935D8 MOV X2, X31
	0x033935DC BL 0x32A9988
	0x033935E0 LDR X8, [X21]
	0x033935E4 MOV W21, W0
	0x033935E8 MOV X0, X8
	0x033935EC BL 0x338C698
	0x033935F0 LDR X1, [X22]
	0x033935F4 MOV X2, X0
	0x033935F8 MOV X0, X20
	0x033935FC MOV X3, X31
	0x03393600 BL 0x32A9880
	0x03393604 CBZ X0, 0x3393634
	0x03393608 ADRP X8, 0xD95000
	0x0339360C LDR X8, [X8 + 0xC48]
	0x03393610 LDR X9, [X0]
	0x03393614 LDR X1, [X8]
	0x03393618 LDR X8, [X9 + 0x40]
	0x0339361C LDR X9, [X1 + 0x40]
	0x03393620 CMP X8, X9
	0x03393624 B.NE 0x3393654
	0x03393628 BL 0x1C16E08
	0x0339362C LDR W8, [X0]
	0x03393630 STR W8, [X19 + 0x18]
	0x03393634 LDR W8, [X19 + 0x18]
	0x03393638 AND W9, W21, 0x1
	0x0339363C LDP X22, X21, [X31 + 0x10]
	0x03393640 ORR W8, W8, W9, 0x0
	0x03393644 STR W8, [X19 + 0x18]
	0x03393648 LDP X20, X19, [X31 + 0x20]
	0x0339364C LDR X30, [X31], #0x30
	0x03393650 RET
	0x03393654 BL 0x1C171E0
	0x03393658 BL 0x1C16F20
	0x0339365C STR X30, [X31 - 0x10]!
	0x03393660 CMP X1, X2
	0x03393664 B.EQ 0x3393690
	0x03393668 CBZ X1, 0x3393698
	0x0339366C CBZ X2, 0x33936A0
	0x03393670 LDR X8, [X0 + 0x10]
	0x03393674 CBZ X8, 0x33936AC
	0x03393678 LDR X9, [X8]
	0x0339367C LDR W3, [X0 + 0x18]
	0x03393680 MOV X0, X8

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 NotImplemented "Instruction MRS not yet implemented."
	009 Move X8, [X22+40]
	010 Move X23, 0x104B000
	011 Move X21, 0xD99000
	012 Move X19, X1
	013 Move [X31+24], X8
	014 Move W8, [X23+81]
	015 Move X21, [X21+696]
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {35}
	021 Move X0, 0xD99000
	022 Move X0, [X0+704]
	023 Call 0x1C17CF4
	024 Move X0, 0xD99000
	025 Move X0, [X0+712]
	026 Call 0x1C17CF4
	027 Move X0, 0xD99000
	028 Move X0, [X0+720]
	029 Call 0x1C17CF4
	030 Move X0, 0xD99000
	031 Move X0, [X0+696]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X23+81], W8
	035 Move X21, [X21]
	036 Move [X31+8], X31
	037 Move [X31+16], X31
	038 Move X8, [X21+56]
	039 Compare X8, 0
	040 JumpIfNotEqual {44}
	041 Move X0, X21
	042 Call 0x1C5D6E0
	043 Move X8, [X21+56]
	044 Move X0, [X8+16]
	045 Move W8, [X0+309]
	046 Move TEMP, X8
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {51}
	050 Call 0x1C5D684
	051 Move X23, 0xD99000
	052 Move W8, [X0+224]
	053 Move X23, [X23+720]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Move X8, [X21+56]
	058 Move X21, 0xD99000
	059 Move X0, X20
	060 Move X1, X19
	061 Move X2, [X8+8]
	062 Move X21, [X21+704]
	063 Call 0x28264B0, X0
	064 Move X8, X0
	065 Move X0, [X23]
	066 Move [X31+8], X8
	067 Move [X31+16], X1
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move X19, [X21]
	073 Move X0, [X19+32]
	074 Move W8, [X0+309]
	075 Move TEMP, X8
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfEqual {80}
	079 Call 0x1C5D684
	080 Move X8, [X0+192]
	081 Move X0, [X8+8]
	082 Move W8, [X0+309]
	083 Move TEMP, X8
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfEqual {88}
	087 Call 0x1C5D684
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfNotEqual {92}
	091 Call 0x1C17DFC
	092 Move X0, [X19+32]
	093 Move W8, [X0+309]
	094 Move TEMP, X8
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfEqual {99}
	098 Call 0x1C5D684
	099 Move X8, [X0+192]
	100 Move X0, [X8+8]
	101 Move W8, [X0+309]
	102 Move TEMP, X8
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfEqual {107}
	106 Call 0x1C5D684
	107 Move X8, [X0+184]
	108 Move X21, 0xD99000
	109 Move W9, [X8]
	110 Move X21, [X21+712]
	111 Move W8, W9
	112 ShiftRight W8, 30
	113 And W8, W8, 0x1FFFFFFF
	114 Subtract W8, W8, 4
	115 Subtract W19, W9, 1
	116 Move W20, W8
	117 Move TEMP, X19
	118 And TEMP, TEMP, -2147483648
	119 Compare TEMP, -2147483648
	120 JumpIfEqual {141}
	121 Move X0, [X23]
	122 Move W8, [X0+224]
	123 Compare W8, 0
	124 JumpIfNotEqual {126}
	125 Call 0x1C17DFC
	126 Move X2, [X21]
	127 Add X0, X31, 8
	128 Move W1, W19
	129 Call Vector`1<UInt64>.get_Item, X0, X1
	130 Subtract W8, W20, 4
	131 Subtract W19, W19, 1
	132 Compare X0, 0
	133 JumpIfEqual {116}
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move W8, 3
	136 Move X0, X0
	137 ShiftRight X0, 48
	138 And X0, X0, 0x7FFF
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Subtract W8, W8, 1
	141 Move W8, 3
	142 Move X9, [X22+40]
	143 Move X10, [X31+24]
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Add W0, W8, W20
	146 Move X20, [X31+64]
	147 Move X19, [X31+72]
	148 Move X22, [X31+48]
	149 Move X21, [X31+56]
	150 Move X30, [X31+32]
	151 Move X23, [X31+40]
	152 Add X31, X31, 80
	153 Return X0
	154 Call 0x3EB2B20

Method: System.Int32 LocateLastFoundChar(System.UInt64 match)

Disassembly:
	0x03393684 LDP X5, X4, [X9 + 0x1A8]
	0x03393688 LDR X30, [X31], #0x10
	0x0339368C BR X5
	0x03393690 MOV W0, W31
	0x03393694 B 0x33936A4
	0x03393698 MOVN W0, 0x0
	0x0339369C B 0x33936A4
	0x033936A0 MOVZ W0, 0x1
	0x033936A4 LDR X30, [X31], #0x10
	0x033936A8 RET
	0x033936AC BL 0x1C16F20

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Move X8, X0
	003 Move W0, 3
	004 Move X8, X8
	005 ShiftRight X8, 48
	006 And X8, X8, 0x7FFF
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Subtract W0, W0, 1
	009 Return X0
	010 Move W0, 3
	011 Return X0

Method: System.Int32 IndexOf(ref T searchSpace, T value, System.Int32 length)

Disassembly:
	0x022580F8 SUBS W26, W21, 0x4
	0x022580FC B.GE 0x22581B8
	0x02258100 CMP W21, 0x1
	0x02258104 B.LT 0x22581B0
	0x02258108 ADD W21, W21, 0x1
	0x0225810C SUB X26, X29, 0x20
	0x02258110 LDR X8, [X25]
	0x02258114 MOV X0, X19
	0x02258118 MOV X1, X22
	0x0225811C LDR X2, [X8 + 0x10]
	0x02258120 LDR X8, [X2]
	0x02258124 BLR X8
	0x02258128 MOV X1, X0
	0x0225812C MOV X0, X24
	0x02258130 MOV X2, X20
	0x02258134 BL 0x3EB1AC0
	0x02258138 LDR X8, [X25]
	0x0225813C LDR X0, [X8]
	0x02258140 LDRB W9, [X0 + 0x135]
	0x02258144 TBNZ X9, 0x0, 0x2258150
	0x02258148 BL 0x1C5C684
	0x0225814C LDR X8, [X25]
	0x02258150 LDR X9, [X8]
	0x02258154 LDUR X10, [X29 - 0x20]
	0x02258158 LDR X1, [X8 + 0x20]
	0x0225815C MOV X8, X24
	0x02258160 LDR W9, [X9 + 0x28]
	0x02258164 CMP W9, 0x0
	0x02258168 CSEL X3, X10, X26, LT
	0x0225816C TBNZ X9, 0x1F, 0x2258174
	0x02258170 LDR X8, [X24]
	0x02258174 SUB X4, X29, 0x18
	0x02258178 SUB X5, X29, 0xC
	0x0225817C MOV X2, X23
	0x02258180 STUR X8, [X29 - 0x18]
	0x02258184 BL 0x1C17728
	0x02258188 LDURB W8, [X29 - 0xC]
	0x0225818C CBNZ W8, 0x225823C
	0x02258190 MOVZ W1, 0x1
	0x02258194 MOV X0, X22
	0x02258198 MOV X2, X31
	0x0225819C BL 0x33C6954
	0x022581A0 SUB W21, W21, 0x1
	0x022581A4 CMP W21, 0x1
	0x022581A8 MOV X22, X0
	0x022581AC B.GT 0x2258110
	0x022581B0 MOVN W0, 0x0
	0x022581B4 B 0x225845C
	0x022581B8 LDR X8, [X25]
	0x022581BC MOV X0, X19
	0x022581C0 MOV X1, X22
	0x022581C4 LDR X2, [X8 + 0x10]
	0x022581C8 LDR X8, [X2]
	0x022581CC BLR X8
	0x022581D0 MOV X1, X0
	0x022581D4 MOV X0, X24
	0x022581D8 MOV X2, X20
	0x022581DC BL 0x3EB1AC0
	0x022581E0 LDR X8, [X25]
	0x022581E4 LDR X0, [X8]
	0x022581E8 LDRB W9, [X0 + 0x135]
	0x022581EC TBNZ X9, 0x0, 0x22581F8
	0x022581F0 BL 0x1C5C684
	0x022581F4 LDR X8, [X25]
	0x022581F8 LDR X9, [X8]
	0x022581FC LDUR X10, [X29 - 0x20]
	0x02258200 LDUR X2, [X29 - 0x60]
	0x02258204 LDR X1, [X8 + 0x20]
	0x02258208 LDR W9, [X9 + 0x28]
	0x0225820C SUB X8, X29, 0x20
	0x02258210 CMP W9, 0x0
	0x02258214 CSEL X3, X10, X8, LT
	0x02258218 MOV X8, X24
	0x0225821C TBNZ X9, 0x1F, 0x2258224
	0x02258220 LDR X8, [X24]
	0x02258224 SUB X4, X29, 0x18
	0x02258228 SUB X5, X29, 0xC
	0x0225822C STUR X8, [X29 - 0x18]
	0x02258230 BL 0x1C17728
	0x02258234 LDURB W8, [X29 - 0xC]
	0x02258238 CBZ W8, 0x2258244
	0x0225823C MOV X0, X22
	0x02258240 B 0x2258454
	0x02258244 MOVZ W1, 0x1
	0x02258248 MOV X0, X22
	0x0225824C MOV X2, X31
	0x02258250 BL 0x33C6954
	0x02258254 LDR X8, [X25]
	0x02258258 MOV X1, X0
	0x0225825C MOV X0, X19
	0x02258260 LDR X2, [X8 + 0x10]
	0x02258264 LDR X8, [X2]
	0x02258268 BLR X8
	0x0225826C MOV X1, X0
	0x02258270 MOV X0, X24
	0x02258274 MOV X2, X20
	0x02258278 BL 0x3EB1AC0
	0x0225827C LDR X8, [X25]
	0x02258280 LDR X0, [X8]
	0x02258284 LDRB W9, [X0 + 0x135]
	0x02258288 TBNZ X9, 0x0, 0x2258294
	0x0225828C BL 0x1C5C684
	0x02258290 LDR X8, [X25]
	0x02258294 LDR X9, [X8]
	0x02258298 LDUR X10, [X29 - 0x20]
	0x0225829C LDUR X2, [X29 - 0x68]
	0x022582A0 LDR X1, [X8 + 0x20]
	0x022582A4 LDR W9, [X9 + 0x28]
	0x022582A8 SUB X8, X29, 0x20
	0x022582AC CMP W9, 0x0
	0x022582B0 CSEL X3, X10, X8, LT
	0x022582B4 MOV X8, X24
	0x022582B8 TBNZ X9, 0x1F, 0x22582C0
	0x022582BC LDR X8, [X24]
	0x022582C0 SUB X4, X29, 0x18
	0x022582C4 SUB X5, X29, 0xC
	0x022582C8 STUR X8, [X29 - 0x18]
	0x022582CC BL 0x1C17728
	0x022582D0 LDURB W8, [X29 - 0xC]
	0x022582D4 CBZ W8, 0x2258314
	0x022582D8 MOVZ W1, 0x1
	0x022582DC B 0x2258448
	0x022582E0 MOVZ W1, 0x4
	0x022582E4 B 0x22582FC
	0x022582E8 MOVZ W1, 0x5
	0x022582EC B 0x22582FC
	0x022582F0 MOVZ W1, 0x6
	0x022582F4 B 0x22582FC
	0x022582F8 MOVZ W1, 0x7
	0x022582FC MOV X0, X22
	0x02258300 MOV X2, X31
	0x02258304 BL 0x33C6954
	0x02258308 MOV X1, X31
	0x0225830C BL 0x33C6948
	0x02258310 B 0x225845C
	0x02258314 MOVZ W1, 0x2
	0x02258318 MOV X0, X22
	0x0225831C MOV X2, X31
	0x02258320 BL 0x33C6954
	0x02258324 LDR X8, [X25]
	0x02258328 MOV X1, X0
	0x0225832C MOV X0, X19
	0x02258330 LDR X2, [X8 + 0x10]
	0x02258334 LDR X8, [X2]
	0x02258338 BLR X8
	0x0225833C MOV X1, X0
	0x02258340 MOV X0, X24
	0x02258344 MOV X2, X20
	0x02258348 BL 0x3EB1AC0
	0x0225834C LDR X8, [X25]
	0x02258350 LDR X0, [X8]
	0x02258354 LDRB W9, [X0 + 0x135]
	0x02258358 TBNZ X9, 0x0, 0x2258364
	0x0225835C BL 0x1C5C684
	0x02258360 LDR X8, [X25]
	0x02258364 LDR X9, [X8]
	0x02258368 LDUR X10, [X29 - 0x20]
	0x0225836C LDUR X2, [X29 - 0x70]
	0x02258370 LDR X1, [X8 + 0x20]
	0x02258374 LDR W9, [X9 + 0x28]
	0x02258378 SUB X8, X29, 0x20
	0x0225837C CMP W9, 0x0
	0x02258380 CSEL X3, X10, X8, LT
	0x02258384 MOV X8, X24
	0x02258388 TBNZ X9, 0x1F, 0x2258390
	0x0225838C LDR X8, [X24]
	0x02258390 SUB X4, X29, 0x18
	0x02258394 SUB X5, X29, 0xC
	0x02258398 STUR X8, [X29 - 0x18]
	0x0225839C BL 0x1C17728
	0x022583A0 LDURB W8, [X29 - 0xC]
	0x022583A4 CBZ W8, 0x22583B0
	0x022583A8 MOVZ W1, 0x2
	0x022583AC B 0x2258448
	0x022583B0 MOVZ W1, 0x3
	0x022583B4 MOV X0, X22
	0x022583B8 MOV X2, X31
	0x022583BC BL 0x33C6954
	0x022583C0 LDR X8, [X25]
	0x022583C4 MOV X1, X0
	0x022583C8 MOV X0, X19
	0x022583CC LDR X2, [X8 + 0x10]
	0x022583D0 LDR X8, [X2]
	0x022583D4 BLR X8
	0x022583D8 MOV X1, X0
	0x022583DC MOV X0, X24
	0x022583E0 MOV X2, X20
	0x022583E4 BL 0x3EB1AC0
	0x022583E8 LDR X8, [X25]
	0x022583EC LDR X0, [X8]
	0x022583F0 LDRB W9, [X0 + 0x135]
	0x022583F4 TBNZ X9, 0x0, 0x2258400
	0x022583F8 BL 0x1C5C684
	0x022583FC LDR X8, [X25]
	0x02258400 LDR X9, [X8]
	0x02258404 LDUR X10, [X29 - 0x20]
	0x02258408 LDR X1, [X8 + 0x20]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move [X31+12], W1
	009 Move X8, [X3+56]
	010 Move X20, X3
	011 Move W22, W2
	012 Move X21, X0
	013 Compare X8, 0
	014 JumpIfNotEqual {17}
	015 Move X0, X20
	016 Call 0x1C5D6E0
	017 Move W0, W31
	018 Move X1, X31
	019 Call IntPtr.op_Explicit, X0
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X19, X0
	022 Move X8, [X20+56]
	023 Move W1, [X21]
	024 Add X0, X31, 12
	025 Move X2, [X8+32]
	026 Call Byte.Equals, X0, X1
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {161}
	031 Move W1, 1
	032 Move X0, X19
	033 Move X2, X31
	034 Call IntPtr.op_Addition, X0, X1
	035 Move X8, [X20+56]
	036 Move W1, [X21]
	037 Add X0, X31, 12
	038 Move X2, [X8+32]
	039 Call Byte.Equals, X0, X1
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {175}
	044 Move W1, 2
	045 Move X0, X19
	046 Move X2, X31
	047 Call IntPtr.op_Addition, X0, X1
	048 Move X8, [X20+56]
	049 Move W1, [X21]
	050 Add X0, X31, 12
	051 Move X2, [X8+32]
	052 Call Byte.Equals, X0, X1
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {189}
	057 Move W1, 3
	058 Move X0, X19
	059 Move X2, X31
	060 Call IntPtr.op_Addition, X0, X1
	061 Move X8, [X20+56]
	062 Move W1, [X21]
	063 Add X0, X31, 12
	064 Move X2, [X8+32]
	065 Call Byte.Equals, X0, X1
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfEqual {212}
	070 Move W1, 4
	071 Move X0, X19
	072 Move X2, X31
	073 Call IntPtr.op_Addition, X0, X1
	074 Move X8, [X20+56]
	075 Move W1, [X21]
	076 Add X0, X31, 12
	077 Move X2, [X8+32]
	078 Call Byte.Equals, X0, X1
	079 Move TEMP, X0
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfEqual {190}
	083 Move W1, 5
	084 Move X0, X19
	085 Move X2, X31
	086 Call IntPtr.op_Addition, X0, X1
	087 Move X8, [X20+56]
	088 Move W1, [X21]
	089 Add X0, X31, 12
	090 Move X2, [X8+32]
	091 Call Byte.Equals, X0, X1
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfEqual {191}
	096 Move W1, 6
	097 Move X0, X19
	098 Move X2, X31
	099 Call IntPtr.op_Addition, X0, X1
	100 Move X8, [X20+56]
	101 Move W1, [X21]
	102 Add X0, X31, 12
	103 Move X2, [X8+32]
	104 Call Byte.Equals, X0, X1
	105 Move TEMP, X0
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfEqual {192}
	109 Move W1, 7
	110 Move X0, X19
	111 Move X2, X31
	112 Call IntPtr.op_Addition, X0, X1
	113 Move X8, [X20+56]
	114 Move W1, [X21]
	115 Add X0, X31, 12
	116 Move X2, [X8+32]
	117 Call Byte.Equals, X0, X1
	118 Move TEMP, X0
	119 And TEMP, TEMP, 1
	120 Compare TEMP, 1
	121 JumpIfEqual {193}
	122 Move W1, 8
	123 Move X0, X19
	124 Move X2, X31
	125 Subtract W22, W22, 8
	126 Call IntPtr.op_Addition, X0, X1
	127 Add W8, W22, 8
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move X19, X0
	130 Subtract W23, W22, 4
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Add W22, W22, 1
	133 Move X8, [X20+56]
	134 Move W1, [X21]
	135 Add X0, X31, 12
	136 Move X2, [X8+32]
	137 Call Byte.Equals, X0, X1
	138 Move TEMP, X0
	139 And TEMP, TEMP, 1
	140 Compare TEMP, 1
	141 JumpIfEqual {161}
	142 Move W1, 1
	143 Move X0, X19
	144 Move X2, X31
	145 Call IntPtr.op_Addition, X0, X1
	146 Subtract W22, W22, 1
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move X19, X0
	149 Move TEMP, 0
	150 Not TEMP
	151 Move W0, TEMP
	152 Move X8, [X20+56]
	153 Move W1, [X21]
	154 Add X0, X31, 12
	155 Move X2, [X8+32]
	156 Call Byte.Equals, X0, X1
	157 Move TEMP, X0
	158 And TEMP, TEMP, 1
	159 Compare TEMP, 1
	160 JumpIfNotEqual {162}
	161 Move X0, X19
	162 Move W1, 1
	163 Move X0, X19
	164 Move X2, X31
	165 Call IntPtr.op_Addition, X0, X1
	166 Move X8, [X20+56]
	167 Move W1, [X21]
	168 Add X0, X31, 12
	169 Move X2, [X8+32]
	170 Call Byte.Equals, X0, X1
	171 Move TEMP, X0
	172 And TEMP, TEMP, 1
	173 Compare TEMP, 1
	174 JumpIfNotEqual {176}
	175 Move W1, 1
	176 Move W1, 2
	177 Move X0, X19
	178 Move X2, X31
	179 Call IntPtr.op_Addition, X0, X1
	180 Move X8, [X20+56]
	181 Move W1, [X21]
	182 Add X0, X31, 12
	183 Move X2, [X8+32]
	184 Call Byte.Equals, X0, X1
	185 Move TEMP, X0
	186 And TEMP, TEMP, 1
	187 Compare TEMP, 1
	188 JumpIfNotEqual {199}
	189 Move W1, 2
	190 Move W1, 4
	191 Move W1, 5
	192 Move W1, 6
	193 Move W1, 7
	194 Move X0, X19
	195 Move X2, X31
	196 Call IntPtr.op_Addition, X0, X1
	197 Move X1, X31
	198 Call IntPtr.op_Explicit, X0
	199 Move W1, 3
	200 Move X0, X19
	201 Move X2, X31
	202 Call IntPtr.op_Addition, X0, X1
	203 Move X8, [X20+56]
	204 Move W1, [X21]
	205 Add X0, X31, 12
	206 Move X2, [X8+32]
	207 Call Byte.Equals, X0, X1
	208 Move TEMP, X0
	209 And TEMP, TEMP, 1
	210 Compare TEMP, 1
	211 JumpIfNotEqual {226}
	212 Move W1, 3
	213 Move X0, X19
	214 Move X2, X31
	215 Call IntPtr.op_Addition, X0, X1
	216 Move X1, X31
	217 Call IntPtr.op_Explicit, X0
	218 Move X20, [X31+48]
	219 Move X19, [X31+56]
	220 Move X22, [X31+32]
	221 Move X21, [X31+40]
	222 Move X30, [X31+16]
	223 Move X23, [X31+24]
	224 Add X31, X31, 64
	225 Return X0
	226 Move W1, 4
	227 Move X0, X19
	228 Move X2, X31
	229 Call IntPtr.op_Addition, X0, X1
	230 Move X19, X0
	231 Move W22, W23

Method: System.Int32 IndexOfAny(ref T searchSpace, System.Int32 searchSpaceLength, ref T value, System.Int32 valueLength)

Disassembly:
	0x022594B0 TBNZ X10, 0x1F, 0x22594B8
	0x022594B4 LDR X8, [X24]
	0x022594B8 LDUR X2, [X29 - 0x50]
	0x022594BC SUB X4, X29, 0x18
	0x022594C0 SUB X5, X29, 0xC
	0x022594C4 MOV X3, X28
	0x022594C8 STUR X8, [X29 - 0x18]
	0x022594CC BL 0x1C17728
	0x022594D0 LDURB W8, [X29 - 0xC]
	0x022594D4 CBZ W8, 0x22599A4
	0x022594D8 MOVZ W1, 0x7
	0x022594DC MOV X0, X25
	0x022594E0 MOV X2, X31
	0x022594E4 BL 0x33C6954
	0x022594E8 LDR X8, [X26]
	0x022594EC MOV X1, X0
	0x022594F0 MOV X0, X20
	0x022594F4 LDR X2, [X8 + 0x10]
	0x022594F8 LDR X8, [X2]
	0x022594FC BLR X8
	0x02259500 MOV X28, X0
	0x02259504 MOVZ W1, 0x7
	0x02259508 MOV X0, X25
	0x0225950C MOV X2, X31
	0x02259510 BL 0x33C6954
	0x02259514 LDR X8, [X26]
	0x02259518 MOV X1, X0
	0x0225951C MOV X0, X19
	0x02259520 LDR X2, [X8 + 0x10]
	0x02259524 LDR X8, [X2]
	0x02259528 BLR X8
	0x0225952C MOV X1, X0
	0x02259530 MOV X0, X24
	0x02259534 MOV X2, X21
	0x02259538 BL 0x3EB1AC0
	0x0225953C LDR X9, [X26]
	0x02259540 LDR X8, [X9 + 0x18]
	0x02259544 LDRB W10, [X8 + 0x135]
	0x02259548 TBNZ X10, 0x0, 0x2259560
	0x0225954C MOV X0, X8
	0x02259550 BL 0x1C5C684
	0x02259554 LDR X9, [X26]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X4+56]
	009 Move X19, X4
	010 Move W23, W3
	011 Move X20, X2
	012 Move W22, W1
	013 Move X21, X0
	014 Compare X8, 0
	015 JumpIfEqual {18}
	016 Compare W23, 0
	017 JumpIfNotEqual {22}
	018 Move X0, X19
	019 Call 0x1C5D6E0
	020 Compare W23, 0
	021 JumpIfEqual {43}
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move W24, W23
	024 Move TEMP, 0
	025 Not TEMP
	026 Move W23, TEMP
	027 Move X8, [X19+56]
	028 NotImplemented "Instruction LDRH not yet implemented."
	029 Move X0, X21
	030 Move W2, W22
	031 Move X3, [X8+24]
	032 Call SpanHelpers.IndexOf, X0, X1, X2
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W23, W0
	035 Move W22, W0
	036 Compare W0, 0
	037 JumpIfEqual {43}
	038 Subtract X24, X24, 1
	039 Add X20, X20, 2
	040 Move TEMP, 0
	041 Not TEMP
	042 Move W23, TEMP
	043 Move W0, W23
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return X0

Method: System.Boolean SequenceEqual(ref T first, ref T second, System.Int32 length)

Disassembly:
	0x022596B8 MOV X22, X0
	0x022596BC MOV X0, X19
	0x022596C0 MOV X1, X25
	0x022596C4 LDR X2, [X8 + 0x10]
	0x022596C8 LDR X8, [X2]
	0x022596CC BLR X8
	0x022596D0 MOV X1, X0
	0x022596D4 MOV X0, X24
	0x022596D8 MOV X2, X21
	0x022596DC BL 0x3EB1AC0
	0x022596E0 LDR X9, [X26]
	0x022596E4 LDR X8, [X9 + 0x18]
	0x022596E8 LDRB W10, [X8 + 0x135]
	0x022596EC TBNZ X10, 0x0, 0x2259704
	0x022596F0 MOV X0, X8
	0x022596F4 BL 0x1C5C684
	0x022596F8 LDR X9, [X26]
	0x022596FC LDR X8, [X9 + 0x18]
	0x02259700 B 0x2259708
	0x02259704 MOV X0, X8
	0x02259708 LDR W10, [X8 + 0x28]
	0x0225970C LDR X1, [X9 + 0x28]
	0x02259710 MOV X8, X24
	0x02259714 TBNZ X10, 0x1F, 0x225971C
	0x02259718 LDR X8, [X24]
	0x0225971C LDUR X2, [X29 - 0x58]
	0x02259720 SUB X4, X29, 0x18
	0x02259724 SUB X5, X29, 0xC
	0x02259728 MOV X3, X22
	0x0225972C STUR X8, [X29 - 0x18]
	0x02259730 BL 0x1C17728
	0x02259734 LDURB W8, [X29 - 0xC]
	0x02259738 LDUR X28, [X29 - 0x78]
	0x0225973C CBZ W8, 0x22599A4
	0x02259740 MOVZ W1, 0x1
	0x02259744 MOV X0, X25
	0x02259748 MOV X2, X31
	0x0225974C BL 0x33C6954
	0x02259750 LDR X8, [X26]
	0x02259754 MOV X1, X0
	0x02259758 MOV X0, X20
	0x0225975C LDR X2, [X8 + 0x10]
	0x02259760 LDR X8, [X2]
	0x02259764 BLR X8
	0x02259768 MOV X22, X0
	0x0225976C MOVZ W1, 0x1
	0x02259770 MOV X0, X25
	0x02259774 MOV X2, X31
	0x02259778 BL 0x33C6954
	0x0225977C LDR X8, [X26]
	0x02259780 MOV X1, X0
	0x02259784 MOV X0, X19
	0x02259788 LDR X2, [X8 + 0x10]
	0x0225978C LDR X8, [X2]
	0x02259790 BLR X8
	0x02259794 MOV X1, X0
	0x02259798 MOV X0, X24
	0x0225979C MOV X2, X21
	0x022597A0 BL 0x3EB1AC0
	0x022597A4 LDR X9, [X26]
	0x022597A8 LDR X8, [X9 + 0x18]
	0x022597AC LDRB W10, [X8 + 0x135]
	0x022597B0 TBNZ X10, 0x0, 0x22597D0
	0x022597B4 MOV X0, X8
	0x022597B8 BL 0x1C5C684
	0x022597BC LDR X9, [X26]
	0x022597C0 LDR X8, [X9 + 0x18]
	0x022597C4 B 0x22597D4
	0x022597C8 MOVZ W0, 0x1
	0x022597CC B 0x22599A8
	0x022597D0 MOV X0, X8
	0x022597D4 LDUR X2, [X29 - 0x60]
	0x022597D8 LDR W10, [X8 + 0x28]
	0x022597DC LDR X1, [X9 + 0x28]
	0x022597E0 MOV X8, X24
	0x022597E4 TBNZ X10, 0x1F, 0x22597EC
	0x022597E8 LDR X8, [X24]
	0x022597EC SUB X4, X29, 0x18
	0x022597F0 SUB X5, X29, 0xC
	0x022597F4 MOV X3, X22
	0x022597F8 STUR X8, [X29 - 0x18]
	0x022597FC BL 0x1C17728
	0x02259800 LDURB W8, [X29 - 0xC]
	0x02259804 CBZ W8, 0x22599A4
	0x02259808 MOVZ W1, 0x2
	0x0225980C MOV X0, X25
	0x02259810 MOV X2, X31
	0x02259814 BL 0x33C6954
	0x02259818 LDR X8, [X26]
	0x0225981C MOV X1, X0
	0x02259820 MOV X0, X20
	0x02259824 LDR X2, [X8 + 0x10]
	0x02259828 LDR X8, [X2]
	0x0225982C BLR X8
	0x02259830 MOV X22, X0
	0x02259834 MOVZ W1, 0x2
	0x02259838 MOV X0, X25
	0x0225983C MOV X2, X31
	0x02259840 BL 0x33C6954
	0x02259844 LDR X8, [X26]
	0x02259848 MOV X1, X0
	0x0225984C MOV X0, X19
	0x02259850 LDR X2, [X8 + 0x10]
	0x02259854 LDR X8, [X2]
	0x02259858 BLR X8
	0x0225985C MOV X1, X0
	0x02259860 MOV X0, X24
	0x02259864 MOV X2, X21
	0x02259868 BL 0x3EB1AC0
	0x0225986C LDR X9, [X26]
	0x02259870 LDR X8, [X9 + 0x18]
	0x02259874 LDRB W10, [X8 + 0x135]
	0x02259878 TBNZ X10, 0x0, 0x2259890
	0x0225987C MOV X0, X8
	0x02259880 BL 0x1C5C684
	0x02259884 LDR X9, [X26]
	0x02259888 LDR X8, [X9 + 0x18]
	0x0225988C B 0x2259894
	0x02259890 MOV X0, X8
	0x02259894 LDR W10, [X8 + 0x28]
	0x02259898 LDR X1, [X9 + 0x28]
	0x0225989C MOV X8, X24
	0x022598A0 TBNZ X10, 0x1F, 0x22598A8
	0x022598A4 LDR X8, [X24]
	0x022598A8 LDUR X2, [X29 - 0x68]
	0x022598AC SUB X4, X29, 0x18
	0x022598B0 SUB X5, X29, 0xC
	0x022598B4 MOV X3, X22
	0x022598B8 STUR X8, [X29 - 0x18]
	0x022598BC BL 0x1C17728
	0x022598C0 LDURB W8, [X29 - 0xC]
	0x022598C4 CBZ W8, 0x22599A4
	0x022598C8 MOVZ W1, 0x3
	0x022598CC MOV X0, X25
	0x022598D0 MOV X2, X31
	0x022598D4 BL 0x33C6954
	0x022598D8 LDR X8, [X26]
	0x022598DC MOV X1, X0
	0x022598E0 MOV X0, X20
	0x022598E4 LDR X2, [X8 + 0x10]
	0x022598E8 LDR X8, [X2]
	0x022598EC BLR X8
	0x022598F0 MOV X22, X0
	0x022598F4 MOVZ W1, 0x3
	0x022598F8 MOV X0, X25
	0x022598FC MOV X2, X31
	0x02259900 BL 0x33C6954
	0x02259904 LDR X8, [X26]
	0x02259908 MOV X1, X0
	0x0225990C MOV X0, X19
	0x02259910 LDR X2, [X8 + 0x10]
	0x02259914 LDR X8, [X2]
	0x02259918 BLR X8
	0x0225991C MOV X1, X0
	0x02259920 MOV X0, X24
	0x02259924 MOV X2, X21
	0x02259928 BL 0x3EB1AC0
	0x0225992C LDR X9, [X26]
	0x02259930 LDR X8, [X9 + 0x18]
	0x02259934 LDRB W10, [X8 + 0x135]
	0x02259938 TBNZ X10, 0x0, 0x2259950
	0x0225993C MOV X0, X8
	0x02259940 BL 0x1C5C684
	0x02259944 LDR X9, [X26]
	0x02259948 LDR X8, [X9 + 0x18]
	0x0225994C B 0x2259954
	0x02259950 MOV X0, X8
	0x02259954 LDR W10, [X8 + 0x28]
	0x02259958 LDR X1, [X9 + 0x28]
	0x0225995C MOV X8, X24
	0x02259960 TBNZ X10, 0x1F, 0x2259968
	0x02259964 LDR X8, [X24]
	0x02259968 SUB X4, X29, 0x18
	0x0225996C SUB X5, X29, 0xC
	0x02259970 MOV X2, X28
	0x02259974 MOV X3, X22
	0x02259978 STUR X8, [X29 - 0x18]
	0x0225997C BL 0x1C17728
	0x02259980 LDURB W8, [X29 - 0xC]
	0x02259984 CBZ W8, 0x22599A4
	0x02259988 MOVZ W1, 0x4
	0x0225998C MOV X0, X25
	0x02259990 MOV X2, X31
	0x02259994 BL 0x33C6954
	0x02259998 MOV X25, X0
	0x0225999C MOV W22, W27
	0x022599A0 B 0x22595C4
	0x022599A4 MOV W0, W31
	0x022599A8 LDUR X25, [X29 - 0x70]
	0x022599AC LDR X8, [X25 + 0x28]
	0x022599B0 LDUR X9, [X29 - 0x8]
	0x022599B4 CMP X8, X9
	0x022599B8 B.NE 0x22599DC
	0x022599BC ADD X31, X29, 0x0
	0x022599C0 LDP X20, X19, [X31 + 0x50]
	0x022599C4 LDP X22, X21, [X31 + 0x40]
	0x022599C8 LDP X24, X23, [X31 + 0x30]
	0x022599CC LDP X26, X25, [X31 + 0x20]
	0x022599D0 LDP X28, X27, [X31 + 0x10]
	0x022599D4 LDP X29, X30, [X31], #0x60
	0x022599D8 RET
	0x022599DC BL 0x3EB1B20
	0x022599E0 SUB X31, X31, 0x30
	0x022599E4 STP X30, X21, [X31 + 0x10]
	0x022599E8 STP X20, X19, [X31 + 0x20]
	0x022599EC LDR X8, [X1 + 0x38]
	0x022599F0 MOV X19, X1
	0x022599F4 MOV W20, W0
	0x022599F8 CBNZ X8, 0x2259A54
	0x022599FC ADRP X0, 0x1EC3000
	0x02259A00 LDR X0, [X0 + 0x500]
	0x02259A04 BL 0x1C16CF4
	0x02259A08 ADRP X0, 0x1EC3000
	0x02259A0C LDR X0, [X0 + 0x508]
	0x02259A10 BL 0x1C16CF4
	0x02259A14 ADRP X0, 0x1E9A000
	0x02259A18 LDR X0, [X0 + 0x6C0]
	0x02259A1C BL 0x1C16CF4
	0x02259A20 ADRP X0, 0x1EA2000
	0x02259A24 LDR X0, [X0 + 0xEA0]
	0x02259A28 BL 0x1C16CF4
	0x02259A2C ADRP X0, 0x1EA2000
	0x02259A30 LDR X0, [X0 + 0xEF8]
	0x02259A34 BL 0x1C16CF4
	0x02259A38 ADRP X0, 0x1EC3000
	0x02259A3C LDR X0, [X0 + 0x510]
	0x02259A40 BL 0x1C16CF4
	0x02259A44 LDR X8, [X19 + 0x38]
	0x02259A48 CBNZ X8, 0x2259A54
	0x02259A4C MOV X0, X19
	0x02259A50 BL 0x1C5C6E0
	0x02259A54 CMP W20, 0xC
	0x02259A58 B.HI 0x2259C6C
	0x02259A5C ADRP X9, 0xFFFFFFFFFE8D4000
	0x02259A60 MOV W8, W20
	0x02259A64 ADD X9, X9, 0xC8E
	0x02259A68 ADR X10, 0x10
	0x02259A6C LDRB W11, [X9, X8, LSL]
	0x02259A70 ADD X10, X10, X11, 0x2, LSL
	0x02259A74 BR X10
	0x02259A78 ADRP X8, 0x1E9A000
	0x02259A7C LDR X8, [X8 + 0x6C0]
	0x02259A80 LDR X0, [X8]
	0x02259A84 LDR X8, [X19 + 0x38]
	0x02259A88 LDR W9, [X0 + 0xE0]
	0x02259A8C LDR X21, [X8]
	0x02259A90 CBNZ W9, 0x2259A98
	0x02259A94 BL 0x1C16DFC
	0x02259A98 MOV X0, X21
	0x02259A9C MOV X1, X31
	0x02259AA0 BL 0x338C698
	0x02259AA4 ADRP X8, 0x1EA2000
	0x02259AA8 LDR X8, [X8 + 0xEA0]
	0x02259AAC LDR X8, [X8]
	0x02259AB0 MOV X21, X0
	0x02259AB4 MOV X1, X31
	0x02259AB8 MOV X0, X8
	0x02259ABC BL 0x338C698
	0x02259AC0 MOV X1, X0
	0x02259AC4 MOV X0, X21
	0x02259AC8 MOV X2, X31
	0x02259ACC BL 0x3395194
	0x02259AD0 TBZ X0, 0x0, 0x2259BC4
	0x02259AD4 LDP X20, X19, [X31 + 0x20]
	0x02259AD8 LDP X30, X21, [X31 + 0x10]
	0x02259ADC ADD X31, X31, 0x30
	0x02259AE0 RET
	0x02259AE4 ADRP X8, 0x1E9A000
	0x02259AE8 LDR X8, [X8 + 0x6C0]
	0x02259AEC LDR X0, [X8]
	0x02259AF0 LDR X8, [X19 + 0x38]
	0x02259AF4 LDR W9, [X0 + 0xE0]
	0x02259AF8 LDR X21, [X8]
	0x02259AFC CBNZ W9, 0x2259B04
	0x02259B00 BL 0x1C16DFC
	0x02259B04 MOV X0, X21
	0x02259B08 MOV X1, X31
	0x02259B0C BL 0x338C698
	0x02259B10 ADRP X8, 0x1EA2000
	0x02259B14 LDR X8, [X8 + 0xEF8]
	0x02259B18 B 0x2259AAC
	0x02259B1C ADRP X8, 0x1E9A000
	0x02259B20 LDR X8, [X8 + 0x6C0]
	0x02259B24 LDR X0, [X8]
	0x02259B28 LDR X8, [X19 + 0x38]
	0x02259B2C LDR W9, [X0 + 0xE0]
	0x02259B30 LDR X21, [X8]
	0x02259B34 CBNZ W9, 0x2259B3C
	0x02259B38 BL 0x1C16DFC
	0x02259B3C MOV X0, X21
	0x02259B40 MOV X1, X31
	0x02259B44 BL 0x338C698
	0x02259B48 ADRP X8, 0x1EC3000
	0x02259B4C LDR X8, [X8 + 0x510]
	0x02259B50 B 0x2259AAC
	0x02259B54 ADRP X8, 0x1E9A000
	0x02259B58 LDR X8, [X8 + 0x6C0]
	0x02259B5C LDR X0, [X8]
	0x02259B60 LDR X8, [X19 + 0x38]
	0x02259B64 LDR W9, [X0 + 0xE0]
	0x02259B68 LDR X21, [X8]
	0x02259B6C CBNZ W9, 0x2259B74
	0x02259B70 BL 0x1C16DFC
	0x02259B74 MOV X0, X21
	0x02259B78 MOV X1, X31
	0x02259B7C BL 0x338C698
	0x02259B80 ADRP X8, 0x1EC3000
	0x02259B84 LDR X8, [X8 + 0x508]
	0x02259B88 B 0x2259AAC
	0x02259B8C ADRP X8, 0x1E9A000
	0x02259B90 LDR X8, [X8 + 0x6C0]
	0x02259B94 LDR X0, [X8]
	0x02259B98 LDR X8, [X19 + 0x38]
	0x02259B9C LDR W9, [X0 + 0xE0]
	0x02259BA0 LDR X21, [X8]
	0x02259BA4 CBNZ W9, 0x2259BAC
	0x02259BA8 BL 0x1C16DFC

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X8, [X3+56]
	011 Move X19, X3
	012 Move W23, W2
	013 Move X20, X1
	014 Move X21, X0
	015 Compare X8, 0
	016 JumpIfNotEqual {25}
	017 Move X0, 0x1E9D000
	018 Move X0, [X0+368]
	019 Call 0x1C17CF4
	020 Move X8, [X19+56]
	021 Compare X8, 0
	022 JumpIfNotEqual {25}
	023 Move X0, X19
	024 Call 0x1C5D6E0
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W0, W31
	027 Move X1, X31
	028 Call IntPtr.op_Explicit, X0
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X22, X0
	031 Move X26, 0x1E9D000
	032 Move X26, [X26+368]
	033 Move X0, [X26]
	034 NotImplemented "Instruction LDRH not yet implemented."
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X8, [X19+56]
	040 Add X0, X21, X22
	041 Move W1, W24
	042 Move X2, [X8+40]
	043 Call Char.Equals, X0, X1
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {359}
	048 Move W1, 1
	049 Move X0, X22
	050 Move X2, X31
	051 Call IntPtr.op_Addition, X0, X1
	052 Move X24, X0
	053 Move W1, 1
	054 Move X0, X22
	055 Move X2, X31
	056 Call IntPtr.op_Addition, X0, X1
	057 Move X8, X0
	058 Move X0, [X26]
	059 NotImplemented "Instruction LDRH not yet implemented."
	060 Move W9, [X0+224]
	061 Compare W9, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X8, [X19+56]
	065 Add X0, X21, X24
	066 Move W1, W25
	067 Move X2, [X8+40]
	068 Call Char.Equals, X0, X1
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfNotEqual {359}
	073 Move W1, 2
	074 Move X0, X22
	075 Move X2, X31
	076 Call IntPtr.op_Addition, X0, X1
	077 Move X24, X0
	078 Move W1, 2
	079 Move X0, X22
	080 Move X2, X31
	081 Call IntPtr.op_Addition, X0, X1
	082 Move X8, X0
	083 Move X0, [X26]
	084 NotImplemented "Instruction LDRH not yet implemented."
	085 Move W9, [X0+224]
	086 Compare W9, 0
	087 JumpIfNotEqual {89}
	088 Call 0x1C17DFC
	089 Move X8, [X19+56]
	090 Add X0, X21, X24
	091 Move W1, W25
	092 Move X2, [X8+40]
	093 Call Char.Equals, X0, X1
	094 Move TEMP, X0
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfNotEqual {359}
	098 Move W1, 3
	099 Move X0, X22
	100 Move X2, X31
	101 Call IntPtr.op_Addition, X0, X1
	102 Move X24, X0
	103 Move W1, 3
	104 Move X0, X22
	105 Move X2, X31
	106 Call IntPtr.op_Addition, X0, X1
	107 Move X8, X0
	108 Move X0, [X26]
	109 NotImplemented "Instruction LDRH not yet implemented."
	110 Move W9, [X0+224]
	111 Compare W9, 0
	112 JumpIfNotEqual {114}
	113 Call 0x1C17DFC
	114 Move X8, [X19+56]
	115 Add X0, X21, X24
	116 Move W1, W25
	117 Move X2, [X8+40]
	118 Call Char.Equals, X0, X1
	119 Move TEMP, X0
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfNotEqual {359}
	123 Move W1, 4
	124 Move X0, X22
	125 Move X2, X31
	126 Call IntPtr.op_Addition, X0, X1
	127 Move X24, X0
	128 Move W1, 4
	129 Move X0, X22
	130 Move X2, X31
	131 Call IntPtr.op_Addition, X0, X1
	132 Move X8, X0
	133 Move X0, [X26]
	134 NotImplemented "Instruction LDRH not yet implemented."
	135 Move W9, [X0+224]
	136 Compare W9, 0
	137 JumpIfNotEqual {139}
	138 Call 0x1C17DFC
	139 Move X8, [X19+56]
	140 Add X0, X21, X24
	141 Move W1, W25
	142 Move X2, [X8+40]
	143 Call Char.Equals, X0, X1
	144 Move TEMP, X0
	145 And TEMP, TEMP, 1
	146 Compare TEMP, 1
	147 JumpIfNotEqual {359}
	148 Move W1, 5
	149 Move X0, X22
	150 Move X2, X31
	151 Call IntPtr.op_Addition, X0, X1
	152 Move X24, X0
	153 Move W1, 5
	154 Move X0, X22
	155 Move X2, X31
	156 Call IntPtr.op_Addition, X0, X1
	157 Move X8, X0
	158 Move X0, [X26]
	159 NotImplemented "Instruction LDRH not yet implemented."
	160 Move W9, [X0+224]
	161 Compare W9, 0
	162 JumpIfNotEqual {164}
	163 Call 0x1C17DFC
	164 Move X8, [X19+56]
	165 Add X0, X21, X24
	166 Move W1, W25
	167 Move X2, [X8+40]
	168 Call Char.Equals, X0, X1
	169 Move TEMP, X0
	170 And TEMP, TEMP, 1
	171 Compare TEMP, 1
	172 JumpIfNotEqual {359}
	173 Move W1, 6
	174 Move X0, X22
	175 Move X2, X31
	176 Call IntPtr.op_Addition, X0, X1
	177 Move X24, X0
	178 Move W1, 6
	179 Move X0, X22
	180 Move X2, X31
	181 Call IntPtr.op_Addition, X0, X1
	182 Move X8, X0
	183 Move X0, [X26]
	184 NotImplemented "Instruction LDRH not yet implemented."
	185 Move W9, [X0+224]
	186 Compare W9, 0
	187 JumpIfNotEqual {189}
	188 Call 0x1C17DFC
	189 Move X8, [X19+56]
	190 Add X0, X21, X24
	191 Move W1, W25
	192 Move X2, [X8+40]
	193 Call Char.Equals, X0, X1
	194 Move TEMP, X0
	195 And TEMP, TEMP, 1
	196 Compare TEMP, 1
	197 JumpIfNotEqual {359}
	198 Move W1, 7
	199 Move X0, X22
	200 Move X2, X31
	201 Call IntPtr.op_Addition, X0, X1
	202 Move X24, X0
	203 Move W1, 7
	204 Move X0, X22
	205 Move X2, X31
	206 Call IntPtr.op_Addition, X0, X1
	207 Move X8, X0
	208 Move X0, [X26]
	209 NotImplemented "Instruction LDRH not yet implemented."
	210 Move W9, [X0+224]
	211 Compare W9, 0
	212 JumpIfNotEqual {214}
	213 Call 0x1C17DFC
	214 Move X8, [X19+56]
	215 Add X0, X21, X24
	216 Move W1, W25
	217 Move X2, [X8+40]
	218 Call Char.Equals, X0, X1
	219 Move TEMP, X0
	220 And TEMP, TEMP, 1
	221 Compare TEMP, 1
	222 JumpIfNotEqual {359}
	223 Move W1, 8
	224 Move X0, X22
	225 Move X2, X31
	226 Subtract W23, W23, 8
	227 Call IntPtr.op_Addition, X0, X1
	228 Add W8, W23, 8
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Move X22, X0
	231 Subtract W25, W23, 4
	232 NotImplemented "Instruction CMP not yet implemented."
	233 Move X25, 0x1E9D000
	234 Move X25, [X25+368]
	235 Add W24, W23, 1
	236 Move X0, [X25]
	237 NotImplemented "Instruction LDRH not yet implemented."
	238 Move W8, [X0+224]
	239 Compare W8, 0
	240 JumpIfNotEqual {242}
	241 Call 0x1C17DFC
	242 Move X8, [X19+56]
	243 Add X0, X21, X22
	244 Move W1, W23
	245 Move X2, [X8+40]
	246 Call Char.Equals, X0, X1
	247 Move W23, W0
	248 Move TEMP, X0
	249 And TEMP, TEMP, 1
	250 Compare TEMP, 1
	251 JumpIfNotEqual {360}
	252 Move W1, 1
	253 Move X0, X22
	254 Move X2, X31
	255 Call IntPtr.op_Addition, X0, X1
	256 Subtract W24, W24, 1
	257 NotImplemented "Instruction CMP not yet implemented."
	258 Move X22, X0
	259 Move W23, 1
	260 Move X26, 0x1E9D000
	261 Move X26, [X26+368]
	262 NotImplemented "Instruction LDRH not yet implemented."
	263 Add X24, X21, X22
	264 Move X0, [X26]
	265 Move W8, [X0+224]
	266 Compare W8, 0
	267 JumpIfNotEqual {269}
	268 Call 0x1C17DFC
	269 Move X8, [X19+56]
	270 Move X0, X24
	271 Move W1, W23
	272 Move X2, [X8+40]
	273 Call Char.Equals, X0, X1
	274 Move TEMP, X0
	275 And TEMP, TEMP, 1
	276 Compare TEMP, 1
	277 JumpIfNotEqual {359}
	278 Move W1, 1
	279 Move X0, X22
	280 Move X2, X31
	281 Call IntPtr.op_Addition, X0, X1
	282 Add X23, X21, X0
	283 Move W1, 1
	284 Move X0, X22
	285 Move X2, X31
	286 Call IntPtr.op_Addition, X0, X1
	287 Move X8, X0
	288 Move X0, [X26]
	289 NotImplemented "Instruction LDRH not yet implemented."
	290 Move W9, [X0+224]
	291 Compare W9, 0
	292 JumpIfNotEqual {294}
	293 Call 0x1C17DFC
	294 Move X8, [X19+56]
	295 Move X0, X23
	296 Move W1, W24
	297 Move X2, [X8+40]
	298 Call Char.Equals, X0, X1
	299 Move TEMP, X0
	300 And TEMP, TEMP, 1
	301 Compare TEMP, 1
	302 JumpIfNotEqual {359}
	303 Move W1, 2
	304 Move X0, X22
	305 Move X2, X31
	306 Call IntPtr.op_Addition, X0, X1
	307 Add X23, X21, X0
	308 Move W1, 2
	309 Move X0, X22
	310 Move X2, X31
	311 Call IntPtr.op_Addition, X0, X1
	312 Move X8, X0
	313 Move X0, [X26]
	314 NotImplemented "Instruction LDRH not yet implemented."
	315 Move W9, [X0+224]
	316 Compare W9, 0
	317 JumpIfNotEqual {319}
	318 Call 0x1C17DFC
	319 Move X8, [X19+56]
	320 Move X0, X23
	321 Move W1, W24
	322 Move X2, [X8+40]
	323 Call Char.Equals, X0, X1
	324 Move TEMP, X0
	325 And TEMP, TEMP, 1
	326 Compare TEMP, 1
	327 JumpIfNotEqual {359}
	328 Move W1, 3
	329 Move X0, X22
	330 Move X2, X31
	331 Call IntPtr.op_Addition, X0, X1
	332 Add X23, X21, X0
	333 Move W1, 3
	334 Move X0, X22
	335 Move X2, X31
	336 Call IntPtr.op_Addition, X0, X1
	337 Move X8, X0
	338 Move X0, [X26]
	339 NotImplemented "Instruction LDRH not yet implemented."
	340 Move W9, [X0+224]
	341 Compare W9, 0
	342 JumpIfNotEqual {344}
	343 Call 0x1C17DFC
	344 Move X8, [X19+56]
	345 Move X0, X23
	346 Move W1, W24
	347 Move X2, [X8+40]
	348 Call Char.Equals, X0, X1
	349 Move TEMP, X0
	350 And TEMP, TEMP, 1
	351 Compare TEMP, 1
	352 JumpIfNotEqual {359}
	353 Move W1, 4
	354 Move X0, X22
	355 Move X2, X31
	356 Call IntPtr.op_Addition, X0, X1
	357 Move X22, X0
	358 Move W23, W25
	359 Move W23, W31
	360 And W0, W23, 1
	361 Move X20, [X31+64]
	362 Move X19, [X31+72]
	363 Move X22, [X31+48]
	364 Move X21, [X31+56]
	365 Move X24, [X31+32]
	366 Move X23, [X31+40]
	367 Move X26, [X31+16]
	368 Move X25, [X31+24]
	369 Move X30, [X31+80]
	370 Return X0

Method: System.Boolean EndsWithCultureHelper(System.ReadOnlySpan`1<System.Char> span, System.ReadOnlySpan`1<System.Char> value, System.Globalization.CompareInfo compareInfo)

Disassembly:
	0x033936B0 STR X30, [X31 - 0x10]!
	0x033936B4 CMP X1, X2
	0x033936B8 B.EQ 0x33936F0
	0x033936BC MOV X8, X0
	0x033936C0 MOV W0, W31
	0x033936C4 CBZ X1, 0x33936F4
	0x033936C8 CBZ X2, 0x33936F4
	0x033936CC LDR X0, [X8 + 0x10]
	0x033936D0 CBZ X0, 0x33936FC
	0x033936D4 LDR X9, [X0]
	0x033936D8 LDR W3, [X8 + 0x18]
	0x033936DC LDP X8, X4, [X9 + 0x1A8]
	0x033936E0 BLR X8
	0x033936E4 CMP W0, 0x0
	0x033936E8 CSET W0, EQ
	0x033936EC B 0x33936F4
	0x033936F0 MOVZ W0, 0x1
	0x033936F4 LDR X30, [X31], #0x10
	0x033936F8 RET
	0x033936FC BL 0x1C16F20
	0x03393700 STP X30, X19, [X31 - 0x10]!
	0x03393704 CBZ X1, 0x3393724
	0x03393708 LDR X8, [X0 + 0x10]
	0x0339370C CBZ X8, 0x339376C
	0x03393710 LDR W2, [X0 + 0x18]
	0x03393714 MOV X0, X8
	0x03393718 MOV X3, X31
	0x0339371C LDP X30, X19, [X31], #0x10
	0x03393720 B 0x3306D94
	0x03393724 ADRP X0, 0xD65000
	0x03393728 LDR X0, [X0 + 0x528]
	0x0339372C BL 0x1C16D08
	0x03393730 BL 0x1C16F10
	0x03393734 MOV X19, X0
	0x03393738 ADRP X0, 0xD6B000
	0x0339373C LDR X0, [X0 + 0x8A8]
	0x03393740 BL 0x1C16D08
	0x03393744 MOV X1, X0
	0x03393748 MOV X0, X19
	0x0339374C MOV X2, X31
	0x03393750 BL 0x330E100
	0x03393754 ADRP X0, 0xD98000
	0x03393758 LDR X0, [X0 + 0x330]
	0x0339375C BL 0x1C16D08
	0x03393760 MOV X1, X0
	0x03393764 MOV X0, X19
	0x03393768 BL 0x1C16DEC
	0x0339376C BL 0x1C16F20
	0x03393770 STP X30, X21, [X31 - 0x20]!
	0x03393774 STP X20, X19, [X31 + 0x10]
	0x03393778 ADRP X21, 0x104A000
	0x0339377C LDRB W8, [X21 + 0x5F]
	0x03393780 MOV X20, X1
	0x03393784 MOV X19, X0
	0x03393788 TBNZ X8, 0x0, 0x33937A0
	0x0339378C ADRP X0, 0xD98000
	0x03393790 LDR X0, [X0 + 0x2F0]
	0x03393794 BL 0x1C16CF4
	0x03393798 MOVZ W8, 0x1
	0x0339379C STRB W8, [X21 + 0x5F]
	0x033937A0 CBZ X20, 0x33937F4
	0x033937A4 ADRP X8, 0xD98000
	0x033937A8 LDR X8, [X8 + 0x2F0]
	0x033937AC LDR X9, [X20]
	0x033937B0 LDR X8, [X8]
	0x033937B4 CMP X9, X8
	0x033937B8 CSEL X8, X20, X31, EQ
	0x033937BC B.NE 0x33937F4
	0x033937C0 CBZ X8, 0x3393804
	0x033937C4 LDR W9, [X19 + 0x18]
	0x033937C8 LDR W10, [X8 + 0x18]
	0x033937CC CMP W9, W10
	0x033937D0 B.NE 0x33937F4
	0x033937D4 LDR X0, [X19 + 0x10]
	0x033937D8 CBZ X0, 0x3393804
	0x033937DC LDR X9, [X0]
	0x033937E0 LDR X1, [X8 + 0x10]
	0x033937E4 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x104B000
	010 Move X24, 0xD95000
	011 Move W8, [X25+82]
	012 Move X24, [X24+2352]
	013 Move X23, X4
	014 Move X19, X3
	015 Move X20, X2
	016 Move X21, X1
	017 Move X22, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {33}
	022 Move X0, 0xD95000
	023 Move X0, [X0+2352]
	024 Call 0x1C17CF4
	025 Move X0, 0xD98000
	026 Move X0, [X0+3944]
	027 Call 0x1C17CF4
	028 Move X0, 0xD90000
	029 Move X0, [X0+40]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X25+82], W8
	033 Move X0, [X24]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X25, 0x104A000
	039 Move W8, [X25+2814]
	040 Compare W8, 0
	041 JumpIfNotEqual {47}
	042 Move X0, 0xD95000
	043 Move X0, [X0+2352]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X25+2814], W8
	047 Move X0, [X24]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {53}
	051 Call 0x1C17DFC
	052 Move X0, [X24]
	053 Move X8, [X0+184]
	054 Move W8, [X8]
	055 Compare W8, 0
	056 JumpIfEqual {74}
	057 Move X8, 0xD98000
	058 Move X8, [X8+3944]
	059 Move X0, X22
	060 Move X1, X21
	061 Move X2, X20
	062 Move X4, [X8]
	063 Move X3, X19
	064 Move X20, [X31+48]
	065 Move X19, [X31+56]
	066 Move X22, [X31+32]
	067 Move X21, [X31+40]
	068 Move X24, [X31+16]
	069 Move X23, [X31+24]
	070 Move X30, [X31+64]
	071 Move X25, [X31+72]
	072 Call 0x338D170
	073 Return X0
	074 Compare W21, 0
	075 JumpIfEqual {95}
	076 Compare X23, 0
	077 JumpIfEqual {105}
	078 Move X0, X23
	079 Move X1, X22
	080 Move X2, X21
	081 Move X3, X20
	082 Move X4, X19
	083 Move X20, [X31+48]
	084 Move X19, [X31+56]
	085 Move X22, [X31+32]
	086 Move X21, [X31+40]
	087 Move X24, [X31+16]
	088 Move X23, [X31+24]
	089 Move W5, W31
	090 Move X6, X31
	091 Move X30, [X31+64]
	092 Move X25, [X31+72]
	093 Call CompareInfo.IsSuffix, X0, X1, X2, X3
	094 Return X0
	095 Move X20, [X31+48]
	096 Move X19, [X31+56]
	097 Move X22, [X31+32]
	098 Move X21, [X31+40]
	099 Move X24, [X31+16]
	100 Move X23, [X31+24]
	101 Move W0, W31
	102 Move X30, [X31+64]
	103 Move X25, [X31+72]
	104 Return X0
	105 Call 0x1C17F20

Method: System.Boolean EndsWithCultureIgnoreCaseHelper(System.ReadOnlySpan`1<System.Char> span, System.ReadOnlySpan`1<System.Char> value, System.Globalization.CompareInfo compareInfo)

Disassembly:
	0x033937E8 LDP X3, X2, [X9 + 0x138]
	0x033937EC LDP X30, X21, [X31], #0x20
	0x033937F0 BR X3
	0x033937F4 LDP X20, X19, [X31 + 0x10]
	0x033937F8 MOV W0, W31
	0x033937FC LDP X30, X21, [X31], #0x20
	0x03393800 RET
	0x03393804 BL 0x1C16F20
	0x03393808 STP X30, X19, [X31 - 0x10]!
	0x0339380C MOV X19, X0
	0x03393810 LDR X0, [X0 + 0x10]
	0x03393814 CBZ X0, 0x3393838
	0x03393818 LDR X8, [X0]
	0x0339381C LDP X9, X1, [X8 + 0x158]
	0x03393820 BLR X9
	0x03393824 LDR W8, [X19 + 0x18]
	0x03393828 AND W8, W8, 0x7FFFFFFF
	0x0339382C EOR W0, W8, W0, 0x0
	0x03393830 LDP X30, X19, [X31], #0x10
	0x03393834 RET
	0x03393838 BL 0x1C16F20
	0x0339383C SUB X31, X31, 0x40
	0x03393840 STP X30, X23, [X31 + 0x10]
	0x03393844 STP X22, X21, [X31 + 0x20]
	0x03393848 STP X20, X19, [X31 + 0x30]
	0x0339384C ADRP X21, 0x104A000
	0x03393850 LDRB W8, [X21 + 0x60]
	0x03393854 MOV X19, X1
	0x03393858 MOV X20, X0
	0x0339385C TBNZ X8, 0x0, 0x3393898
	0x03393860 ADRP X0, 0xD95000
	0x03393864 LDR X0, [X0 + 0xC48]
	0x03393868 BL 0x1C16CF4
	0x0339386C ADRP X0, 0xD98000
	0x03393870 LDR X0, [X0 + 0x318]
	0x03393874 BL 0x1C16CF4
	0x03393878 ADRP X0, 0xD98000
	0x0339387C LDR X0, [X0 + 0x320]
	0x03393880 BL 0x1C16CF4
	0x03393884 ADRP X0, 0xD98000
	0x03393888 LDR X0, [X0 + 0x328]
	0x0339388C BL 0x1C16CF4
	0x03393890 MOVZ W8, 0x1
	0x03393894 STRB W8, [X21 + 0x60]
	0x03393898 CBZ X19, 0x3393924
	0x0339389C ADRP X8, 0xD98000
	0x033938A0 LDR X8, [X8 + 0x328]
	0x033938A4 LDR X2, [X20 + 0x10]
	0x033938A8 ADRP X21, 0xD95000
	0x033938AC ADRP X22, 0xD98000
	0x033938B0 LDR X1, [X8]
	0x033938B4 ADRP X23, 0xD98000
	0x033938B8 LDR X21, [X21 + 0xC48]
	0x033938BC LDR X22, [X22 + 0x320]
	0x033938C0 LDR X23, [X23 + 0x318]
	0x033938C4 MOV X0, X19
	0x033938C8 MOV X3, X31
	0x033938CC BL 0x32A8BF0
	0x033938D0 LDR W8, [X20 + 0x18]
	0x033938D4 LDR X0, [X21]
	0x033938D8 ADD X1, X31, 0xC
	0x033938DC STR W8, [X31 + 0xC]
	0x033938E0 BL 0x1C16E04
	0x033938E4 LDR X1, [X22]
	0x033938E8 MOV X2, X0
	0x033938EC MOV X0, X19
	0x033938F0 MOV X3, X31
	0x033938F4 BL 0x32A8BF0
	0x033938F8 LDR W8, [X20 + 0x18]
	0x033938FC LDR X1, [X23]
	0x03393900 MOV X0, X19
	0x03393904 MOV X3, X31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x104B000
	010 Move X24, 0xD95000
	011 Move W8, [X25+83]
	012 Move X24, [X24+2352]
	013 Move X22, X4
	014 Move X19, X3
	015 Move X20, X2
	016 Move X21, X1
	017 Move X23, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0xD95000
	023 Move X0, [X0+2352]
	024 Call 0x1C17CF4
	025 Move X0, 0xD90000
	026 Move X0, [X0+40]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+83], W8
	030 Move X0, [X24]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X25, 0x104A000
	036 Move W8, [X25+2814]
	037 Compare W8, 0
	038 JumpIfNotEqual {44}
	039 Move X0, 0xD95000
	040 Move X0, [X0+2352]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X25+2814], W8
	044 Move X0, [X24]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {50}
	048 Call 0x1C17DFC
	049 Move X0, [X24]
	050 Move X8, [X0+184]
	051 Move W8, [X8]
	052 Compare W8, 0
	053 JumpIfEqual {66}
	054 Move X0, X23
	055 Move X1, X21
	056 Move X2, X20
	057 Move X3, X19
	058 Move X20, [X31+48]
	059 Move X19, [X31+56]
	060 Move X22, [X31+32]
	061 Move X21, [X31+40]
	062 Move X24, [X31+16]
	063 Move X23, [X31+24]
	064 Move X30, [X31+64]
	065 Move X25, [X31+72]
	066 Compare W21, 0
	067 JumpIfEqual {87}
	068 Compare X22, 0
	069 JumpIfEqual {97}
	070 Move X0, X22
	071 Move X1, X23
	072 Move X2, X21
	073 Move X3, X20
	074 Move X4, X19
	075 Move X20, [X31+48]
	076 Move X19, [X31+56]
	077 Move X22, [X31+32]
	078 Move X21, [X31+40]
	079 Move X24, [X31+16]
	080 Move X23, [X31+24]
	081 Move W5, 1
	082 Move X6, X31
	083 Move X30, [X31+64]
	084 Move X25, [X31+72]
	085 Call CompareInfo.IsSuffix, X0, X1, X2, X3
	086 Return X0
	087 Move X20, [X31+48]
	088 Move X19, [X31+56]
	089 Move X22, [X31+32]
	090 Move X21, [X31+40]
	091 Move X24, [X31+16]
	092 Move X23, [X31+24]
	093 Move W0, W31
	094 Move X30, [X31+64]
	095 Move X25, [X31+72]
	096 Return X0
	097 Call 0x1C17F20

Method: System.Boolean EndsWithOrdinalIgnoreCaseHelper(System.ReadOnlySpan`1<System.Char> span, System.ReadOnlySpan`1<System.Char> value)

Disassembly:
	0x03393908 AND W2, W8, 0x1
	0x0339390C BL 0x32A8CA8
	0x03393910 LDP X20, X19, [X31 + 0x30]
	0x03393914 LDP X22, X21, [X31 + 0x20]
	0x03393918 LDP X30, X23, [X31 + 0x10]
	0x0339391C ADD X31, X31, 0x40
	0x03393920 RET
	0x03393924 BL 0x1C16F20
	0x03393928 STR X30, [X31 - 0x30]!
	0x0339392C STP X22, X21, [X31 + 0x10]
	0x03393930 STP X20, X19, [X31 + 0x20]
	0x03393934 ADRP X21, 0x104A000
	0x03393938 ADRP X22, 0xD6D000
	0x0339393C LDRB W8, [X21 + 0x61]
	0x03393940 LDR X22, [X22 + 0x2F0]
	0x03393944 MOV W20, W1
	0x03393948 MOV X19, X0
	0x0339394C TBNZ X8, 0x0, 0x3393964
	0x03393950 ADRP X0, 0xD6D000
	0x03393954 LDR X0, [X0 + 0x2F0]
	0x03393958 BL 0x1C16CF4
	0x0339395C MOVZ W8, 0x1
	0x03393960 STRB W8, [X21 + 0x61]
	0x03393964 LDR X0, [X22]
	0x03393968 LDR W8, [X0 + 0xE0]
	0x0339396C CBNZ W8, 0x3393974
	0x03393970 BL 0x1C16DFC
	0x03393974 MOV X0, X19
	0x03393978 MOV X1, X31
	0x0339397C AND W20, W20, 0x1
	0x03393980 BL 0x33BDD8C
	0x03393984 STRB W20, [X19 + 0x10]
	0x03393988 LDP X20, X19, [X31 + 0x20]
	0x0339398C LDP X22, X21, [X31 + 0x10]
	0x03393990 LDR X30, [X31], #0x30
	0x03393994 RET
	0x03393998 CMP X1, X2
	0x0339399C B.EQ 0x33939C8
	0x033939A0 CBZ X1, 0x33939D0
	0x033939A4 MOV X8, X2
	0x033939A8 CBZ X2, 0x33939D8
	0x033939AC LDRB W9, [X0 + 0x10]
	0x033939B0 CBZ W9, 0x33939E0
	0x033939B4 MOVZ W2, 0x5
	0x033939B8 MOV X0, X1
	0x033939BC MOV X1, X8
	0x033939C0 MOV X3, X31
	0x033939C4 B 0x322590C
	0x033939C8 MOV W0, W31
	0x033939CC RET
	0x033939D0 MOVN W0, 0x0
	0x033939D4 RET
	0x033939D8 MOVZ W0, 0x1
	0x033939DC RET
	0x033939E0 MOV X0, X1
	0x033939E4 MOV X1, X8
	0x033939E8 MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x104B000
	008 Move W8, [X23+84]
	009 Move X19, X3
	010 Move X20, X2
	011 Move X22, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0xD8F000
	018 Move X0, [X0+4048]
	019 Call 0x1C17CF4
	020 Move X0, 0xD95000
	021 Move X0, [X0+2024]
	022 Call 0x1C17CF4
	023 Move X0, 0xD90000
	024 Move X0, [X0+40]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X23+84], W8
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move W0, W31
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X8, 0xD95000
	032 Move X8, [X8+2024]
	033 Subtract X22, X22, X19
	034 Move X8, [X8]
	035 Move X0, [X8+32]
	036 Move W8, [X0+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {42}
	041 Call 0x1C5D684
	042 Move X8, 0xD8F000
	043 Move X8, [X8+4048]
	044 Move X9, X22
	045 ShiftRight X9, 32
	046 And X9, X9, 0x7FFFFFFF
	047 Add X22, X21, X9
	048 And X21, X19, 0
	049 Move X0, [X8]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move X0, X22
	055 Move X1, X21
	056 Move X2, X20
	057 Move X3, X19
	058 Move X4, X31
	059 Call CompareInfo.CompareOrdinalIgnoreCase, X0, X1
	060 NotImplemented "Instruction CMP not yet implemented."
	061 NotImplemented "Instruction CSET not yet implemented."
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Move X23, [X31+56]
	068 Return X0
	069 Call ThrowHelper.ThrowArgumentOutOfRangeException

Method: System.Void ClearWithoutReferences(ref System.Byte b, System.UInt64 byteLength)

Disassembly:
	0x033939EC B 0x32261E8
	0x033939F0 STR X30, [X31 - 0x10]!
	0x033939F4 CMP X1, X2
	0x033939F8 B.EQ 0x3393A48
	0x033939FC MOV X9, X0
	0x03393A00 MOV W0, W31
	0x03393A04 CBZ X1, 0x3393A4C
	0x03393A08 MOV X8, X2
	0x03393A0C CBZ X2, 0x3393A4C
	0x03393A10 LDRB W9, [X9 + 0x10]
	0x03393A14 CBZ W9, 0x3393A54
	0x03393A18 LDR W9, [X1 + 0x10]
	0x03393A1C LDR W10, [X8 + 0x10]
	0x03393A20 CMP W9, W10
	0x03393A24 B.NE 0x3393A68
	0x03393A28 MOVZ W2, 0x5
	0x03393A2C MOV X0, X1
	0x03393A30 MOV X1, X8
	0x03393A34 MOV X3, X31
	0x03393A38 BL 0x322590C
	0x03393A3C CMP W0, 0x0
	0x03393A40 CSET W0, EQ
	0x03393A44 B 0x3393A4C
	0x03393A48 MOVZ W0, 0x1
	0x03393A4C LDR X30, [X31], #0x10
	0x03393A50 RET
	0x03393A54 MOV X0, X1
	0x03393A58 MOV X1, X8
	0x03393A5C MOV X2, X31
	0x03393A60 LDR X30, [X31], #0x10
	0x03393A64 B 0x322693C
	0x03393A68 MOV W0, W31
	0x03393A6C B 0x3393A4C
	0x03393A70 STP X30, X21, [X31 - 0x20]!
	0x03393A74 STP X20, X19, [X31 + 0x10]
	0x03393A78 ADRP X21, 0x104A000
	0x03393A7C LDRB W8, [X21 + 0x62]
	0x03393A80 MOV X19, X1
	0x03393A84 MOV X20, X0
	0x03393A88 TBNZ X8, 0x0, 0x3393AA0
	0x03393A8C ADRP X0, 0xD8E000
	0x03393A90 LDR X0, [X0 + 0xFD0]
	0x03393A94 BL 0x1C16CF4
	0x03393A98 MOVZ W8, 0x1
	0x03393A9C STRB W8, [X21 + 0x62]
	0x03393AA0 CBZ X19, 0x3393AF0
	0x03393AA4 LDRB W8, [X20 + 0x10]
	0x03393AA8 CBZ W8, 0x3393AD8
	0x03393AAC ADRP X8, 0xD8E000
	0x03393AB0 LDR X8, [X8 + 0xFD0]
	0x03393AB4 LDR X0, [X8]
	0x03393AB8 LDR W8, [X0 + 0xE0]
	0x03393ABC CBNZ W8, 0x3393AC4
	0x03393AC0 BL 0x1C16DFC
	0x03393AC4 MOV X0, X19
	0x03393AC8 LDP X20, X19, [X31 + 0x10]
	0x03393ACC MOV X1, X31
	0x03393AD0 LDP X30, X21, [X31], #0x20
	0x03393AD4 B 0x3306948
	0x03393AD8 LDR X8, [X19]
	0x03393ADC MOV X0, X19
	0x03393AE0 LDP X20, X19, [X31 + 0x10]
	0x03393AE4 LDP X2, X1, [X8 + 0x158]
	0x03393AE8 LDP X30, X21, [X31], #0x20
	0x03393AEC BR X2
	0x03393AF0 MOV W0, W31
	0x03393AF4 BL 0x338F3E0
	0x03393AF8 STP X30, X21, [X31 - 0x20]!
	0x03393AFC STP X20, X19, [X31 + 0x10]
	0x03393B00 ADRP X21, 0x104A000
	0x03393B04 LDRB W8, [X21 + 0x63]
	0x03393B08 MOV X20, X1
	0x03393B0C MOV X19, X0
	0x03393B10 TBNZ X8, 0x0, 0x3393B28
	0x03393B14 ADRP X0, 0xD98000
	0x03393B18 LDR X0, [X0 + 0x338]
	0x03393B1C BL 0x1C16CF4
	0x03393B20 MOVZ W8, 0x1
	0x03393B24 STRB W8, [X21 + 0x63]
	0x03393B28 CBZ X20, 0x3393B64
	0x03393B2C ADRP X8, 0xD98000
	0x03393B30 LDR X8, [X8 + 0x338]
	0x03393B34 LDR X9, [X20]
	0x03393B38 LDR X8, [X8]
	0x03393B3C LDRB W11, [X9 + 0x130]
	0x03393B40 LDRB W10, [X8 + 0x130]
	0x03393B44 CMP W11, W10
	0x03393B48 B.CC 0x3393B64
	0x03393B4C LDR X9, [X9 + 0xC8]
	0x03393B50 ADD X9, X9, X10, 0x3, LSL
	0x03393B54 LDUR X9, [X9 - 0x8]
	0x03393B58 CMP X9, X8
	0x03393B5C CSEL X8, X20, X31, EQ
	0x03393B60 B.EQ 0x3393B74
	0x03393B64 MOV W0, W31
	0x03393B68 LDP X20, X19, [X31 + 0x10]
	0x03393B6C LDP X30, X21, [X31], #0x20
	0x03393B70 RET
	0x03393B74 CBZ X8, 0x3393B8C
	0x03393B78 LDRB W9, [X19 + 0x10]
	0x03393B7C LDRB W8, [X8 + 0x10]
	0x03393B80 CMP W9, W8
	0x03393B84 CSET W0, EQ
	0x03393B88 B 0x3393B68
	0x03393B8C BL 0x1C16F20
	0x03393B90 STP X30, X21, [X31 - 0x20]!
	0x03393B94 STP X20, X19, [X31 + 0x10]
	0x03393B98 ADRP X20, 0x104A000
	0x03393B9C ADRP X21, 0xD98000
	0x03393BA0 LDRB W8, [X20 + 0x64]
	0x03393BA4 LDR X21, [X21 + 0x340]
	0x03393BA8 MOV X19, X0
	0x03393BAC TBNZ X8, 0x0, 0x3393BC4
	0x03393BB0 ADRP X0, 0xD98000
	0x03393BB4 LDR X0, [X0 + 0x340]
	0x03393BB8 BL 0x1C16CF4
	0x03393BBC MOVZ W8, 0x1
	0x03393BC0 STRB W8, [X20 + 0x64]
	0x03393BC4 LDR X0, [X21]
	0x03393BC8 CBZ X0, 0x3393BF0
	0x03393BCC LDR X8, [X0]
	0x03393BD0 LDP X9, X1, [X8 + 0x158]

ISIL:
	001 Compare X1, 0
	002 JumpIfEqual {66}
	003 Subtract X8, X1, 1
	004 NotImplemented "Instruction CMP not yet implemented."
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move W8, [X0]
	007 And W31, W8, 3
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {26}
	012 Move X9, X31
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move X9, -41926656
	015 And X8, X8, 0
	016 Add X9, X9, 2160
	017 NotImplemented "Instruction ADR not yet implemented."
	018 Move W11, [X9]
	019 Add X10, X10, X11
	020 CallNoReturn X10
	021 Move [X0], W31
	022 Move X2, X31
	023 Call RuntimeImports.RhZeroMemory, X0, X1
	024 Return 
	025 Move X9, X31
	026 Move [X0], W31
	027 Move W8, [X0]
	028 Move W9, 1
	029 Move TEMP, X8
	030 And TEMP, TEMP, 2
	031 Compare TEMP, 2
	032 JumpIfEqual {35}
	033 NotImplemented "Instruction STRH not yet implemented."
	034 Or X9, X9, 3
	035 Subtract W8, W8, 1
	036 Move TEMP, X8
	037 And TEMP, TEMP, 4
	038 Compare TEMP, 4
	039 JumpIfEqual {42}
	040 Move [X0], W31
	041 Or X9, X9, 7
	042 Subtract X10, X1, 16
	043 Move X8, X9
	044 Add X11, X0, X8
	045 Add X8, X8, 16
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move [X11], X31
	048 Move [X11+8], X31
	049 Subtract X9, X1, X9
	050 Move TEMP, X9
	051 And TEMP, TEMP, 8
	052 Compare TEMP, 8
	053 JumpIfEqual {67}
	054 Move TEMP, X9
	055 And TEMP, TEMP, 4
	056 Compare TEMP, 4
	057 JumpIfEqual {73}
	058 Move TEMP, X9
	059 And TEMP, TEMP, 2
	060 Compare TEMP, 2
	061 JumpIfEqual {79}
	062 Move TEMP, X9
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {85}
	066 Return 
	067 Move [X0], X31
	068 Add X8, X8, 8
	069 Move TEMP, X9
	070 And TEMP, TEMP, 4
	071 Compare TEMP, 4
	072 JumpIfNotEqual {58}
	073 Move [X0], W31
	074 Add X8, X8, 4
	075 Move TEMP, X9
	076 And TEMP, TEMP, 2
	077 Compare TEMP, 2
	078 JumpIfNotEqual {62}
	079 NotImplemented "Instruction STRH not yet implemented."
	080 Add X8, X8, 2
	081 Move TEMP, X9
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfNotEqual {66}
	085 Move [X0], W31
	086 Return 
	087 NotImplemented "Instruction STRH not yet implemented."
	088 Return 
	089 NotImplemented "Instruction STRH not yet implemented."
	090 Move [X0+2], W31
	091 Return 
	092 Move [X0], W31
	093 Return 
	094 Move [X0], W31
	095 Move [X0+4], W31
	096 Return 
	097 Move [X0], W31
	098 NotImplemented "Instruction STRH not yet implemented."
	099 Return 
	100 Move [X0], W31
	101 NotImplemented "Instruction STRH not yet implemented."
	102 Move [X0+6], W31
	103 Return 
	104 Move [X0], X31
	105 Move [X0+8], W31
	106 Return 
	107 Move [X0], X31
	108 NotImplemented "Instruction STRH not yet implemented."
	109 Return 
	110 Move [X0], X31
	111 NotImplemented "Instruction STRH not yet implemented."
	112 Move [X0+10], W31
	113 Return 
	114 Move [X0], X31
	115 Move [X0+8], W31
	116 Return 
	117 Move [X0], X31
	118 Move [X0+8], W31
	119 Move [X0+12], W31
	120 Return 
	121 Move [X0], X31
	122 Move [X0+8], W31
	123 NotImplemented "Instruction STRH not yet implemented."
	124 Return 
	125 Move [X0+7], X31
	126 Move [X0+8], X31
	127 Move [X0], X31
	128 Return 
	129 Move [X0], X31
	130 Move [X0+8], X31
	131 Move [X0+16], W31
	132 Return 
	133 Move [X0], X31
	134 Move [X0+8], X31
	135 NotImplemented "Instruction STRH not yet implemented."
	136 Return 
	137 Move [X0], X31
	138 Move [X0+8], X31
	139 Move [X0+15], W31
	140 Return 
	141 Move [X0], X31
	142 Move [X0+8], X31
	143 Move [X0+13], X31
	144 Return 
	145 Move [X0], X31
	146 Move [X0+8], X31
	147 Move [X0+14], X31
	148 Return 
	149 Move [X0], X31
	150 Move [X0+8], X31
	151 Move [X0+16], W31
	152 Return 

Method: System.Void ClearWithReferences(ref System.IntPtr ip, System.UInt64 pointerSizeLength)

Disassembly:
	0x03393BD4 BLR X9
	0x03393BD8 LDRB W8, [X19 + 0x10]
	0x03393BDC LDP X20, X19, [X31 + 0x10]
	0x03393BE0 SBFM W8, W8, 0x0, 0x0
	0x03393BE4 EOR W0, W0, W8, 0x0
	0x03393BE8 LDP X30, X21, [X31], #0x20
	0x03393BEC RET
	0x03393BF0 BL 0x1C16F20
	0x03393BF4 MOV X0, X1
	0x03393BF8 MOV X1, X2
	0x03393BFC MOV X2, X31
	0x03393C00 B 0x32261E8
	0x03393C04 MOV X0, X1
	0x03393C08 MOV X1, X2
	0x03393C0C MOV X2, X31
	0x03393C10 B 0x3226C14
	0x03393C14 STR X30, [X31 - 0x10]!
	0x03393C18 CBZ X1, 0x3393C34
	0x03393C1C LDR X8, [X1]
	0x03393C20 MOV X0, X1
	0x03393C24 LDP X2, X8, [X8 + 0x158]
	0x03393C28 MOV X1, X8
	0x03393C2C LDR X30, [X31], #0x10
	0x03393C30 BR X2
	0x03393C34 MOV W0, W31
	0x03393C38 BL 0x338F3E0
	0x03393C3C STR X30, [X31 - 0x30]!
	0x03393C40 STP X22, X21, [X31 + 0x10]
	0x03393C44 STP X20, X19, [X31 + 0x20]
	0x03393C48 ADRP X22, 0x104A000
	0x03393C4C ADRP X20, 0xD98000
	0x03393C50 ADRP X21, 0xD60000
	0x03393C54 LDRB W8, [X22 + 0x65]
	0x03393C58 LDR X20, [X20 + 0x348]
	0x03393C5C LDR X21, [X21 + 0x6C0]
	0x03393C60 MOV X19, X1
	0x03393C64 TBNZ X8, 0x0, 0x3393C94
	0x03393C68 ADRP X0, 0xD98000
	0x03393C6C LDR X0, [X0 + 0x348]
	0x03393C70 BL 0x1C16CF4
	0x03393C74 ADRP X0, 0xD60000
	0x03393C78 LDR X0, [X0 + 0x6C0]
	0x03393C7C BL 0x1C16CF4
	0x03393C80 ADRP X0, 0xD98000
	0x03393C84 LDR X0, [X0 + 0x318]
	0x03393C88 BL 0x1C16CF4
	0x03393C8C MOVZ W8, 0x1
	0x03393C90 STRB W8, [X22 + 0x65]
	0x03393C94 LDR X0, [X21]
	0x03393C98 LDR X20, [X20]
	0x03393C9C LDR W8, [X0 + 0xE0]
	0x03393CA0 CBNZ W8, 0x3393CA8
	0x03393CA4 BL 0x1C16DFC
	0x03393CA8 MOV X0, X20
	0x03393CAC BL 0x338C698
	0x03393CB0 CBZ X19, 0x3393CEC
	0x03393CB4 ADRP X20, 0xD98000
	0x03393CB8 LDR X20, [X20 + 0x318]
	0x03393CBC MOV X1, X0
	0x03393CC0 MOV X0, X19
	0x03393CC4 MOV X2, X31
	0x03393CC8 BL 0x32A8510
	0x03393CCC LDR X1, [X20]
	0x03393CD0 MOV X0, X19
	0x03393CD4 LDP X20, X19, [X31 + 0x20]
	0x03393CD8 LDP X22, X21, [X31 + 0x10]
	0x03393CDC MOV W2, W31
	0x03393CE0 MOV X3, X31
	0x03393CE4 LDR X30, [X31], #0x30
	0x03393CE8 B 0x32A8CA8
	0x03393CEC BL 0x1C16F20
	0x03393CF0 MOV X8, X2
	0x03393CF4 MOVZ W2, 0x5
	0x03393CF8 MOV X0, X1
	0x03393CFC MOV X1, X8
	0x03393D00 MOV X3, X31
	0x03393D04 B 0x322590C
	0x03393D08 MOV X8, X2
	0x03393D0C MOVZ W2, 0x5
	0x03393D10 MOV X0, X1
	0x03393D14 MOV X1, X8
	0x03393D18 MOV X3, X31
	0x03393D1C B 0x3226C60
	0x03393D20 STR X30, [X31 - 0x20]!

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, X1
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move X19, X0
	015 Subtract X21, X19, 8
	016 Subtract X22, X19, 16
	017 Subtract X23, X19, 24
	018 Subtract X24, X19, 32
	019 Subtract X25, X19, 40
	020 Subtract X26, X19, 48
	021 Subtract X27, X19, 56
	022 Subtract X28, X19, 64
	023 Move X0, X20
	024 Move X1, X31
	025 Call IntPtr.op_Explicit, X0
	026 Move [X21], X31
	027 Move X0, X20
	028 Move X1, X31
	029 Call IntPtr.op_Explicit, X0
	030 Move [X22], X31
	031 Move X0, X20
	032 Move X1, X31
	033 Call IntPtr.op_Explicit, X0
	034 Move [X23], X31
	035 Move X0, X20
	036 Move X1, X31
	037 Call IntPtr.op_Explicit, X0
	038 Move [X24], X31
	039 Move X0, X20
	040 Move X1, X31
	041 Call IntPtr.op_Explicit, X0
	042 Move [X25], X31
	043 Move X0, X20
	044 Move X1, X31
	045 Call IntPtr.op_Explicit, X0
	046 Move [X26], X31
	047 Move X0, X20
	048 Move X1, X31
	049 Call IntPtr.op_Explicit, X0
	050 Move [X27], X31
	051 Move X0, X20
	052 Move X1, X31
	053 Call IntPtr.op_Explicit, X0
	054 Subtract X20, X20, 8
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move [X28], X31
	057 NotImplemented "Instruction CMP not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Compare X20, 0
	060 JumpIfNotEqual {79}
	061 Move X0, X20
	062 Move X1, X31
	063 Move [X19+16], X31
	064 Move [X19+24], X31
	065 Call IntPtr.op_Explicit, X0
	066 Add X8, X19, X0
	067 Move X0, X20
	068 Move X1, X31
	069 Move [X8-24], X31
	070 Call IntPtr.op_Explicit, X0
	071 Add X8, X19, X0
	072 Move [X8-16], X31
	073 Move X0, X20
	074 Move X1, X31
	075 Move [X19+8], X31
	076 Call IntPtr.op_Explicit, X0
	077 Add X8, X19, X0
	078 Move [X8-8], X31
	079 Move [X19], X31
	080 Move X20, [X31+80]
	081 Move X19, [X31+88]
	082 Move X22, [X31+64]
	083 Move X21, [X31+72]
	084 Move X24, [X31+48]
	085 Move X23, [X31+56]
	086 Move X26, [X31+32]
	087 Move X25, [X31+40]
	088 Move X28, [X31+16]
	089 Move X27, [X31+24]
	090 Move X30, [X31+96]
	091 Return 

