Type: System.ReadOnlySpan`1

Method: System.Void .ctor(T[] array)

Disassembly:
	0x025BF4CC ADRP X9, 0x1B34000
	0x025BF4D0 LDR W8, [X19 + 0x8]
	0x025BF4D4 LDR X9, [X9 + 0x758]
	0x025BF4D8 MOV X20, X0
	0x025BF4DC ADD X1, X31, 0xC
	0x025BF4E0 STR W8, [X31 + 0xC]
	0x025BF4E4 LDR X0, [X9]
	0x025BF4E8 BL 0x1C16E04

ISIL:
	001 Compare X1, 0
	002 JumpIfEqual {8}
	003 Add X8, X1, 32
	004 Move [X0], X8
	005 Move X8, [X1+24]
	006 Move [X0+8], W8
	007 Return 
	008 Move [X0], X31
	009 Move [X0+8], X31
	010 Return 

Method: System.Void .ctor(T[] array, System.Int32 start, System.Int32 length)

Disassembly:
	0x025BF4EC ADRP X8, 0x1B5E000
	0x025BF4F0 LDR X8, [X8 + 0x88]
	0x025BF4F4 MOV X2, X0
	0x025BF4F8 MOV X1, X20
	0x025BF4FC MOV X3, X31
	0x025BF500 LDR X8, [X8]
	0x025BF504 MOV X0, X8
	0x025BF508 BL 0x3227BD4
	0x025BF50C LDP X20, X19, [X31 + 0x30]
	0x025BF510 LDP X22, X21, [X31 + 0x20]
	0x025BF514 LDP X30, X23, [X31 + 0x10]
	0x025BF518 ADD X31, X31, 0x40
	0x025BF51C RET
	0x025BF520 BL 0x1C16F20
	0x025BF524 STR X30, [X31 - 0x30]!
	0x025BF528 STP X22, X21, [X31 + 0x10]
	0x025BF52C STP X20, X19, [X31 + 0x20]
	0x025BF530 LDR W22, [X0 + 0x8]
	0x025BF534 MOV X20, X0
	0x025BF538 MOV W19, W1
	0x025BF53C MOV X21, X2
	0x025BF540 CMP W22, W1
	0x025BF544 B.CS 0x25BF554
	0x025BF548 MOV X0, X31
	0x025BF54C BL 0x339D6EC
	0x025BF550 LDR W22, [X20 + 0x8]
	0x025BF554 LDR X0, [X21 + 0x20]
	0x025BF558 LDR X20, [X20]
	0x025BF55C LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W20, W3
	007 Move W21, W2
	008 Move X19, X0
	009 Compare X1, 0
	010 JumpIfEqual {21}
	011 Move W8, [X1+24]
	012 Move X22, X1
	013 Subtract W8, W8, W21
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X0, X31
	016 Call ThrowHelper.ThrowArgumentOutOfRangeException
	017 Add X8, X22, W21
	018 Add X8, X8, 32
	019 Move [X19], X8
	020 Move [X19+8], W20
	021 Or W8, W20, W21
	022 Compare W8, 0
	023 JumpIfEqual {26}
	024 Move X0, X31
	025 Call ThrowHelper.ThrowArgumentOutOfRangeException
	026 Move [X19], X31
	027 Move [X19+8], X31
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return 

Method: System.Void .ctor(System.Void* pointer, System.Int32 length)

Disassembly:
	0x025BF560 TBNZ X8, 0x0, 0x25BF568
	0x025BF564 BL 0x1C5C684
	0x025BF568 SUB W1, W22, W19
	0x025BF56C ADD X0, X20, W19, 0x2, SXTW
	0x025BF570 LDP X20, X19, [X31 + 0x20]
	0x025BF574 LDP X22, X21, [X31 + 0x10]
	0x025BF578 LDR X30, [X31], #0x30
	0x025BF57C RET
	0x025BF580 STR X30, [X31 - 0x30]!
	0x025BF584 STP X22, X21, [X31 + 0x10]
	0x025BF588 STP X20, X19, [X31 + 0x20]
	0x025BF58C LDR W8, [X0 + 0x8]
	0x025BF590 MOV X21, X3

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W19, W2
	006 Move X21, X1
	007 Move X20, X0
	008 Move TEMP, X2
	009 And TEMP, TEMP, -2147483648
	010 Compare TEMP, -2147483648
	011 JumpIfNotEqual {14}
	012 Move X0, X31
	013 Call ThrowHelper.ThrowArgumentOutOfRangeException
	014 Move [X20], X21
	015 Move [X20+8], W19
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X30, [X31+32]
	019 Move X21, [X31+40]
	020 Return 

Method: System.Void .ctor(ref T ptr, System.Int32 length)

Disassembly:
	0x025BF594 MOV X22, X0
	0x025BF598 MOV W19, W1
	0x025BF59C SUBS W8, W8, W1

ISIL:
	001 Move [X0], X1
	002 Move [X0+8], W2
	003 Return 

Method: T get_Item(System.Int32 index)

Disassembly:
	0x025BF5A0 MOV W20, W2
	0x025BF5A4 B.CC 0x25BF5B0
	0x025BF5A8 CMP W8, W20
	0x025BF5AC B.CS 0x25BF5B8
	0x025BF5B0 MOV X0, X31
	0x025BF5B4 BL 0x339D6EC
	0x025BF5B8 LDR X0, [X21 + 0x20]
	0x025BF5BC LDR X21, [X22]
	0x025BF5C0 LDRB W8, [X0 + 0x135]
	0x025BF5C4 TBNZ X8, 0x0, 0x25BF5CC
	0x025BF5C8 BL 0x1C5C684
	0x025BF5CC ADD X0, X21, W19, 0x2, SXTW
	0x025BF5D0 MOV W1, W20
	0x025BF5D4 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+8]
	005 Move X19, X0
	006 Move W20, W1
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move X0, X31
	009 Call ThrowHelper.ThrowIndexOutOfRangeException
	010 Move X8, [X19]
	011 Add X0, X8, W20
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Return X0

Method: System.Void CopyTo(System.Span`1<T> destination)

Disassembly:
	0x025BF5D8 LDP X22, X21, [X31 + 0x10]
	0x025BF5DC LDR X30, [X31], #0x30
	0x025BF5E0 RET
	0x025BF5E4 STR X30, [X31 - 0x30]!
	0x025BF5E8 STP X22, X21, [X31 + 0x10]
	0x025BF5EC STP X20, X19, [X31 + 0x20]
	0x025BF5F0 MOV X19, X0
	0x025BF5F4 LDR X0, [X1 + 0x20]
	0x025BF5F8 LDR W21, [X19 + 0x8]
	0x025BF5FC ADD X8, X0, 0x135
	0x025BF600 LDRH W8, [X8]
	0x025BF604 CBZ W21, 0x25BF670
	0x025BF608 MOV X20, X1
	0x025BF60C TBNZ X8, 0x0, 0x25BF614
	0x025BF610 BL 0x1C5C684
	0x025BF614 LDR X8, [X0 + 0xC0]
	0x025BF618 LDR X0, [X8 + 0x80]
	0x025BF61C LDRB W8, [X0 + 0x135]
	0x025BF620 TBNZ X8, 0x0, 0x25BF628
	0x025BF624 BL 0x1C5C684
	0x025BF628 MOV W1, W21
	0x025BF62C BL 0x1C16D6C
	0x025BF630 CBZ X0, 0x25BF6E0
	0x025BF634 MOV X21, X0
	0x025BF638 LDR X0, [X20 + 0x20]
	0x025BF63C LDR X20, [X19]
	0x025BF640 LDRSW X19, [X19 + 0x8]
	0x025BF644 ADD X22, X21, 0x20
	0x025BF648 LDRB W8, [X0 + 0x135]
	0x025BF64C TBNZ X8, 0x0, 0x25BF654
	0x025BF650 BL 0x1C5C684
	0x025BF654 LDR X8, [X0 + 0xC0]
	0x025BF658 MOV X0, X22
	0x025BF65C MOV X1, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, X0
	008 Move X0, [X3+32]
	009 Move W23, [X21+8]
	010 Move X20, X3
	011 Move X22, X2
	012 Move W8, [X0+309]
	013 Move X19, X1
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {19}
	018 Call 0x1C5D684
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X20, [X31+32]
	021 Move X19, [X31+40]
	022 Move X22, [X31+16]
	023 Move X21, [X31+24]
	024 Move X0, X31
	025 Move X30, [X31+48]
	026 Move X23, [X31+56]
	027 Call ThrowHelper.ThrowArgumentException_DestinationTooShort
	028 Return 
	029 Move X0, [X20+32]
	030 Move X20, [X21]
	031 NotImplemented "Instruction LDRSW not yet implemented."
	032 Move W8, [X0+309]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {38}
	037 Call 0x1C5D684
	038 Move X8, [X0+192]
	039 Move X0, X19
	040 Move X1, X20
	041 Move X2, X21
	042 Move X3, [X8+104]
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X30, [X31+48]
	048 Move X23, [X31+56]
	049 Call 0x21A1720, X0, X1, X2
	050 Return 

Method: System.Boolean TryCopyTo(System.Span`1<T> destination)

Disassembly:
	0x025BF660 MOV X2, X19
	0x025BF664 LDR X3, [X8 + 0x68]
	0x025BF668 BL 0x21A0734
	0x025BF66C B 0x25BF6CC
	0x025BF670 TBNZ X8, 0x0, 0x25BF678
	0x025BF674 BL 0x1C5C684
	0x025BF678 LDR X8, [X0 + 0xC0]
	0x025BF67C LDR X19, [X8 + 0x78]
	0x025BF680 LDR X8, [X19 + 0x38]
	0x025BF684 CBNZ X8, 0x25BF694
	0x025BF688 MOV X0, X19
	0x025BF68C BL 0x1C5C6E0
	0x025BF690 LDR X8, [X19 + 0x38]
	0x025BF694 LDR X0, [X8 + 0x10]
	0x025BF698 LDRB W8, [X0 + 0x135]
	0x025BF69C TBNZ X8, 0x0, 0x25BF6A4
	0x025BF6A0 BL 0x1C5C684
	0x025BF6A4 LDR W8, [X0 + 0xE0]
	0x025BF6A8 CBNZ W8, 0x25BF6B0
	0x025BF6AC BL 0x1C16DFC
	0x025BF6B0 LDR X8, [X19 + 0x38]
	0x025BF6B4 LDR X0, [X8 + 0x10]
	0x025BF6B8 LDRB W8, [X0 + 0x135]
	0x025BF6BC TBNZ X8, 0x0, 0x25BF6C4
	0x025BF6C0 BL 0x1C5C684
	0x025BF6C4 LDR X8, [X0 + 0xB8]
	0x025BF6C8 LDR X21, [X8]
	0x025BF6CC MOV X0, X21
	0x025BF6D0 LDP X20, X19, [X31 + 0x20]
	0x025BF6D4 LDP X22, X21, [X31 + 0x10]
	0x025BF6D8 LDR X30, [X31], #0x30
	0x025BF6DC RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, X0
	008 Move X0, [X3+32]
	009 Move W23, [X22+8]
	010 Move X21, X3
	011 Move X19, X2
	012 Move W8, [X0+309]
	013 Move X20, X1
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {19}
	018 Call 0x1C5D684
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X0, [X21+32]
	021 Move X21, [X22]
	022 NotImplemented "Instruction LDRSW not yet implemented."
	023 Move W8, [X0+309]
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {29}
	028 Call 0x1C5D684
	029 Move X8, [X0+192]
	030 Move X0, X20
	031 Move X1, X21
	032 Move X2, X22
	033 Move X3, [X8+104]
	034 Call 0x21A1720, X0, X1, X2
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 NotImplemented "Instruction CSET not yet implemented."
	041 Move X30, [X31+48]
	042 Move X23, [X31+56]
	043 Return X0

Method: System.String ToString()

Disassembly:
	0x025BF6E0 BL 0x1C16F20
	0x025BF6E4 LDR W0, [X0 + 0x8]
	0x025BF6E8 RET
	0x025BF6EC LDR W8, [X0 + 0x8]
	0x025BF6F0 CMP W8, 0x0
	0x025BF6F4 CSET W0, EQ
	0x025BF6F8 RET
	0x025BF6FC STR X30, [X31 - 0x20]!
	0x025BF700 STP X20, X19, [X31 + 0x10]
	0x025BF704 ADRP X0, 0x1B34000
	0x025BF708 LDR X0, [X0 + 0xB40]
	0x025BF70C MOV X19, X2
	0x025BF710 BL 0x1C16D08
	0x025BF714 BL 0x1C16F10
	0x025BF718 MOV X20, X0
	0x025BF71C ADRP X0, 0x1B5E000
	0x025BF720 LDR X0, [X0 + 0x90]
	0x025BF724 BL 0x1C16D08
	0x025BF728 MOV X1, X0
	0x025BF72C MOV X0, X20
	0x025BF730 MOV X2, X31
	0x025BF734 BL 0x3379A44
	0x025BF738 MOV X0, X20
	0x025BF73C MOV X1, X19
	0x025BF740 BL 0x1C16DEC
	0x025BF744 STR X30, [X31 - 0x20]!
	0x025BF748 STP X20, X19, [X31 + 0x10]
	0x025BF74C ADRP X0, 0x1B34000
	0x025BF750 LDR X0, [X0 + 0xB40]
	0x025BF754 MOV X19, X1
	0x025BF758 BL 0x1C16D08
	0x025BF75C BL 0x1C16F10
	0x025BF760 MOV X20, X0
	0x025BF764 ADRP X0, 0x1B5E000
	0x025BF768 LDR X0, [X0 + 0x98]
	0x025BF76C BL 0x1C16D08
	0x025BF770 MOV X1, X0
	0x025BF774 MOV X0, X20
	0x025BF778 MOV X2, X31
	0x025BF77C BL 0x3379A44
	0x025BF780 MOV X0, X20
	0x025BF784 MOV X1, X19
	0x025BF788 BL 0x1C16DEC
	0x025BF78C STP X30, X19, [X31 - 0x10]!
	0x025BF790 LDR X8, [X1 + 0x20]
	0x025BF794 MOV X19, X0
	0x025BF798 LDRB W9, [X8 + 0x135]
	0x025BF79C TBNZ X9, 0x0, 0x25BF7A8
	0x025BF7A0 MOV X0, X8
	0x025BF7A4 BL 0x1C5C684
	0x025BF7A8 CBZ X19, 0x25BF7B8
	0x025BF7AC LDR W1, [X19 + 0x18]
	0x025BF7B0 ADD X0, X19, 0x20
	0x025BF7B4 B 0x25BF7C0
	0x025BF7B8 MOV X0, X31
	0x025BF7BC MOV X1, X31
	0x025BF7C0 LDP X30, X19, [X31], #0x10
	0x025BF7C4 RET
	0x025BF7C8 MOV X0, X31
	0x025BF7CC MOV X1, X31
	0x025BF7D0 RET
	0x025BF7D4 CBZ X1, 0x25BF7EC
	0x025BF7D8 ADD X8, X1, 0x20
	0x025BF7DC STR X8, [X0]
	0x025BF7E0 LDR X8, [X1 + 0x18]
	0x025BF7E4 STR W8, [X0 + 0x8]
	0x025BF7E8 RET
	0x025BF7EC STP X31, X31, [X0]
	0x025BF7F0 RET
	0x025BF7F4 STR X30, [X31 - 0x30]!
	0x025BF7F8 STP X22, X21, [X31 + 0x10]
	0x025BF7FC STP X20, X19, [X31 + 0x20]
	0x025BF800 MOV W20, W3
	0x025BF804 MOV W21, W2
	0x025BF808 MOV X19, X0
	0x025BF80C CBZ X1, 0x25BF844
	0x025BF810 LDR W8, [X1 + 0x18]
	0x025BF814 MOV X22, X1
	0x025BF818 SUBS W8, W8, W21
	0x025BF81C B.CC 0x25BF828
	0x025BF820 CMP W8, W20
	0x025BF824 B.CS 0x25BF830
	0x025BF828 MOV X0, X31
	0x025BF82C BL 0x339D6EC
	0x025BF830 ADD X8, X22, W21, 0x1, SXTW
	0x025BF834 ADD X8, X8, 0x20
	0x025BF838 STR X8, [X19]
	0x025BF83C STR W20, [X19 + 0x8]
	0x025BF840 B 0x25BF858
	0x025BF844 ORR W8, W20, W21, 0x0
	0x025BF848 CBZ W8, 0x25BF854
	0x025BF84C MOV X0, X31
	0x025BF850 BL 0x339D6EC
	0x025BF854 STP X31, X31, [X19]
	0x025BF858 LDP X20, X19, [X31 + 0x20]
	0x025BF85C LDP X22, X21, [X31 + 0x10]
	0x025BF860 LDR X30, [X31], #0x30
	0x025BF864 RET
	0x025BF868 STP X30, X21, [X31 - 0x20]!
	0x025BF86C STP X20, X19, [X31 + 0x10]
	0x025BF870 MOV W19, W2

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x1E1B000
	009 Move W8, [X21+3874]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x1B5C000
	017 Move X0, [X0+3440]
	018 Call 0x1C17CF4
	019 Move X0, 0x1B35000
	020 Move X0, [X0+1880]
	021 Call 0x1C17CF4
	022 Move X0, 0x1B35000
	023 Move X0, [X0+1728]
	024 Call 0x1C17CF4
	025 Move X0, 0x1B5F000
	026 Move X0, [X0+136]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+3874], W8
	030 Move X0, [X20+32]
	031 Move X22, 0x1B35000
	032 Move W8, [X0+309]
	033 Move X22, [X22+1728]
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {39}
	038 Call 0x1C5D684
	039 Move X8, [X22]
	040 Move X9, [X0+192]
	041 Move X23, 0x1B5C000
	042 Move W10, [X8+224]
	043 Move X21, [X9+56]
	044 Move X23, [X23+3440]
	045 Compare W10, 0
	046 JumpIfNotEqual {49}
	047 Move X0, X8
	048 Call 0x1C17DFC
	049 Move X0, X21
	050 Move X1, X31
	051 Call Type.GetTypeFromHandle, X0
	052 Move X8, [X23]
	053 Move X21, X0
	054 Move X1, X31
	055 Move X0, X8
	056 Call Type.GetTypeFromHandle, X0
	057 Move X1, X0
	058 Move X0, X21
	059 Move X2, X31
	060 Call Type.op_Equality, X0, X1
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {79}
	065 Move X1, [X19]
	066 Move W3, [X19+8]
	067 Move X20, [X31+48]
	068 Move X19, [X31+56]
	069 Move X22, [X31+32]
	070 Move X21, [X31+40]
	071 Move X30, [X31+16]
	072 Move X23, [X31+24]
	073 Move X0, X31
	074 Move W2, W31
	075 Move X4, X31
	076 Add X31, X31, 64
	077 Call String.CreateString, X0, X1, X2, X3
	078 Return X0
	079 Move X0, [X20+32]
	080 Move W8, [X0+309]
	081 Move TEMP, X8
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfEqual {86}
	085 Call 0x1C5D684
	086 Move X8, [X22]
	087 Move X9, [X0+192]
	088 Move W10, [X8+224]
	089 Move X20, [X9+56]
	090 Compare W10, 0
	091 JumpIfNotEqual {94}
	092 Move X0, X8
	093 Call 0x1C17DFC
	094 Move X0, X20
	095 Move X1, X31
	096 Call Type.GetTypeFromHandle, X0
	097 Compare X0, 0
	098 JumpIfEqual {127}
	099 Move X8, [X0]
	100 Move X9, [X8+424]
	101 Move X1, [X8+432]
	102 NotImplemented "Instruction BLR not yet implemented."
	103 Move X9, 0x1B35000
	104 Move W8, [X19+8]
	105 Move X9, [X9+1880]
	106 Move X20, X0
	107 Add X1, X31, 12
	108 Move [X31+12], W8
	109 Move X0, [X9]
	110 Call 0x1C17E04
	111 Move X8, 0x1B5F000
	112 Move X8, [X8+136]
	113 Move X2, X0
	114 Move X1, X20
	115 Move X3, X31
	116 Move X8, [X8]
	117 Move X0, X8
	118 Call String.Format, X0, X1, X2
	119 Move X20, [X31+48]
	120 Move X19, [X31+56]
	121 Move X22, [X31+32]
	122 Move X21, [X31+40]
	123 Move X30, [X31+16]
	124 Move X23, [X31+24]
	125 Add X31, X31, 64
	126 Return X0
	127 Call 0x1C17F20

Method: System.ReadOnlySpan`1<T> Slice(System.Int32 start)

Disassembly:
	0x025BF874 MOV X21, X1
	0x025BF878 MOV X20, X0
	0x025BF87C TBZ X2, 0x1F, 0x25BF888
	0x025BF880 MOV X0, X31
	0x025BF884 BL 0x339D6EC
	0x025BF888 STR X21, [X20]
	0x025BF88C STR W19, [X20 + 0x8]
	0x025BF890 LDP X20, X19, [X31 + 0x10]
	0x025BF894 LDP X30, X21, [X31], #0x20
	0x025BF898 RET
	0x025BF89C STR X1, [X0]
	0x025BF8A0 STR W2, [X0 + 0x8]
	0x025BF8A4 RET
	0x025BF8A8 STR X30, [X31 - 0x20]!
	0x025BF8AC STP X20, X19, [X31 + 0x10]
	0x025BF8B0 LDR W8, [X0 + 0x8]
	0x025BF8B4 MOV X19, X0
	0x025BF8B8 MOV W20, W1
	0x025BF8BC CMP W8, W1
	0x025BF8C0 B.HI 0x25BF8CC
	0x025BF8C4 MOV X0, X31
	0x025BF8C8 BL 0x339D674
	0x025BF8CC LDR X8, [X19]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W22, [X0+8]
	007 Move X20, X0
	008 Move W19, W1
	009 Move X21, X2
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move X0, X31
	012 Call ThrowHelper.ThrowArgumentOutOfRangeException
	013 Move W22, [X20+8]
	014 Move X0, [X21+32]
	015 Move X20, [X20]
	016 Move W8, [X0+309]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {22}
	021 Call 0x1C5D684
	022 Subtract W1, W22, W19
	023 Add X0, X20, W19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Return X0

Method: System.ReadOnlySpan`1<T> Slice(System.Int32 start, System.Int32 length)

Disassembly:
	0x025BF8D0 ADD X0, X8, W20, 0x1, SXTW
	0x025BF8D4 LDP X20, X19, [X31 + 0x10]
	0x025BF8D8 LDR X30, [X31], #0x20
	0x025BF8DC RET
	0x025BF8E0 STP X30, X23, [X31 - 0x30]!
	0x025BF8E4 STP X22, X21, [X31 + 0x10]
	0x025BF8E8 STP X20, X19, [X31 + 0x20]
	0x025BF8EC MOV X21, X0
	0x025BF8F0 LDR X0, [X3 + 0x20]
	0x025BF8F4 LDR W23, [X21 + 0x8]
	0x025BF8F8 MOV X20, X3
	0x025BF8FC MOV X22, X2
	0x025BF900 LDRB W8, [X0 + 0x135]
	0x025BF904 MOV X19, X1
	0x025BF908 TBNZ X8, 0x0, 0x25BF910
	0x025BF90C BL 0x1C5C684
	0x025BF910 CMP W23, W22
	0x025BF914 B.LS 0x25BF92C
	0x025BF918 LDP X20, X19, [X31 + 0x20]
	0x025BF91C LDP X22, X21, [X31 + 0x10]
	0x025BF920 MOV X0, X31
	0x025BF924 LDP X30, X23, [X31], #0x30
	0x025BF928 B 0x339D5E4
	0x025BF92C LDR X0, [X20 + 0x20]
	0x025BF930 LDR X20, [X21]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W8, [X0+8]
	007 Move X21, X3
	008 Move X22, X0
	009 Move W19, W1
	010 Subtract W8, W8, W1
	011 Move W20, W2
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X0, X31
	014 Call ThrowHelper.ThrowArgumentOutOfRangeException
	015 Move X0, [X21+32]
	016 Move X21, [X22]
	017 Move W8, [X0+309]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {23}
	022 Call 0x1C5D684
	023 Add X0, X21, W19
	024 Move W1, W20
	025 Move X20, [X31+32]
	026 Move X19, [X31+40]
	027 Move X22, [X31+16]
	028 Move X21, [X31+24]
	029 Move X30, [X31+48]
	030 Return X0

Method: T[] ToArray()

Disassembly:
	0x025BF934 LDRSW X21, [X21 + 0x8]
	0x025BF938 LDRB W8, [X0 + 0x135]
	0x025BF93C TBNZ X8, 0x0, 0x25BF944
	0x025BF940 BL 0x1C5C684
	0x025BF944 LDR X8, [X0 + 0xC0]
	0x025BF948 MOV X0, X19
	0x025BF94C MOV X1, X20
	0x025BF950 MOV X2, X21
	0x025BF954 LDR X3, [X8 + 0x68]
	0x025BF958 LDP X20, X19, [X31 + 0x20]
	0x025BF95C LDP X22, X21, [X31 + 0x10]
	0x025BF960 LDP X30, X23, [X31], #0x30
	0x025BF964 B 0x21A0740
	0x025BF968 STP X30, X23, [X31 - 0x30]!
	0x025BF96C STP X22, X21, [X31 + 0x10]
	0x025BF970 STP X20, X19, [X31 + 0x20]
	0x025BF974 MOV X22, X0
	0x025BF978 LDR X0, [X3 + 0x20]
	0x025BF97C LDR W23, [X22 + 0x8]
	0x025BF980 MOV X21, X3
	0x025BF984 MOV X19, X2
	0x025BF988 LDRB W8, [X0 + 0x135]
	0x025BF98C MOV X20, X1
	0x025BF990 TBNZ X8, 0x0, 0x25BF998
	0x025BF994 BL 0x1C5C684
	0x025BF998 CMP W23, W19
	0x025BF99C B.HI 0x25BF9D0
	0x025BF9A0 LDR X0, [X21 + 0x20]
	0x025BF9A4 LDR X21, [X22]
	0x025BF9A8 LDRSW X22, [X22 + 0x8]
	0x025BF9AC LDRB W8, [X0 + 0x135]
	0x025BF9B0 TBNZ X8, 0x0, 0x25BF9B8
	0x025BF9B4 BL 0x1C5C684
	0x025BF9B8 LDR X8, [X0 + 0xC0]
	0x025BF9BC MOV X0, X20
	0x025BF9C0 MOV X1, X21
	0x025BF9C4 MOV X2, X22
	0x025BF9C8 LDR X3, [X8 + 0x68]
	0x025BF9CC BL 0x21A0740
	0x025BF9D0 CMP W23, W19
	0x025BF9D4 LDP X20, X19, [X31 + 0x20]
	0x025BF9D8 LDP X22, X21, [X31 + 0x10]
	0x025BF9DC CSET W0, LS
	0x025BF9E0 LDP X30, X23, [X31], #0x30
	0x025BF9E4 RET
	0x025BF9E8 SUB X31, X31, 0x40
	0x025BF9EC STP X30, X23, [X31 + 0x10]
	0x025BF9F0 STP X22, X21, [X31 + 0x20]
	0x025BF9F4 STP X20, X19, [X31 + 0x30]
	0x025BF9F8 ADRP X21, 0x1E1A000
	0x025BF9FC LDRB W8, [X21 + 0xF25]
	0x025BFA00 MOV X20, X1
	0x025BFA04 MOV X19, X0
	0x025BFA08 TBNZ X8, 0x0, 0x25BFA44
	0x025BFA0C ADRP X0, 0x1B5B000
	0x025BFA10 LDR X0, [X0 + 0xD70]
	0x025BFA14 BL 0x1C16CF4
	0x025BFA18 ADRP X0, 0x1B34000
	0x025BFA1C LDR X0, [X0 + 0x758]
	0x025BFA20 BL 0x1C16CF4
	0x025BFA24 ADRP X0, 0x1B34000
	0x025BFA28 LDR X0, [X0 + 0x6C0]
	0x025BFA2C BL 0x1C16CF4
	0x025BFA30 ADRP X0, 0x1B5E000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X0
	007 Move X0, [X1+32]
	008 Move W21, [X19+8]
	009 Add X8, X0, 309
	010 NotImplemented "Instruction LDRH not yet implemented."
	011 Compare W21, 0
	012 JumpIfEqual {48}
	013 Move X20, X1
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {19}
	018 Call 0x1C5D684
	019 Move X8, [X0+192]
	020 Move X0, [X8+128]
	021 Move W8, [X0+309]
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {27}
	026 Call 0x1C5D684
	027 Move W1, W21
	028 Call 0x1C17D6C
	029 Compare X0, 0
	030 JumpIfEqual {89}
	031 Move X21, X0
	032 Move X0, [X20+32]
	033 Move X20, [X19]
	034 NotImplemented "Instruction LDRSW not yet implemented."
	035 Add X22, X21, 32
	036 Move W8, [X0+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {42}
	041 Call 0x1C5D684
	042 Move X8, [X0+192]
	043 Move X0, X22
	044 Move X1, X20
	045 Move X2, X19
	046 Move X3, [X8+104]
	047 Call 0x21A1720, X0, X1, X2
	048 Move TEMP, X8
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {53}
	052 Call 0x1C5D684
	053 Move X8, [X0+192]
	054 Move X19, [X8+120]
	055 Move X8, [X19+56]
	056 Compare X8, 0
	057 JumpIfNotEqual {61}
	058 Move X0, X19
	059 Call 0x1C5D6E0
	060 Move X8, [X19+56]
	061 Move X0, [X8+16]
	062 Move W8, [X0+309]
	063 Move TEMP, X8
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfEqual {68}
	067 Call 0x1C5D684
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move X8, [X19+56]
	073 Move X0, [X8+16]
	074 Move W8, [X0+309]
	075 Move TEMP, X8
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfEqual {80}
	079 Call 0x1C5D684
	080 Move X8, [X0+184]
	081 Move X21, [X8]
	082 Move X0, X21
	083 Move X20, [X31+32]
	084 Move X19, [X31+40]
	085 Move X22, [X31+16]
	086 Move X21, [X31+24]
	087 Move X30, [X31+48]
	088 Return X0
	089 Call 0x1C17F20

Method: System.Int32 get_Length()

Disassembly:
	0x025BFA34 LDR X0, [X0 + 0x88]
	0x025BFA38 BL 0x1C16CF4

ISIL:
	001 Move W0, [X0+8]
	002 Return X0

Method: System.Boolean get_IsEmpty()

Disassembly:
	0x025BFA3C MOVZ W8, 0x1
	0x025BFA40 STRB W8, [X21 + 0xF25]
	0x025BFA44 LDR X0, [X20 + 0x20]
	0x025BFA48 ADRP X22, 0x1B34000

ISIL:
	001 Move W8, [X0+8]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x025BFA4C LDRB W8, [X0 + 0x135]
	0x025BFA50 LDR X22, [X22 + 0x6C0]
	0x025BFA54 TBNZ X8, 0x0, 0x25BFA5C
	0x025BFA58 BL 0x1C5C684
	0x025BFA5C LDR X8, [X22]
	0x025BFA60 LDR X9, [X0 + 0xC0]
	0x025BFA64 ADRP X23, 0x1B5B000
	0x025BFA68 LDR W10, [X8 + 0xE0]
	0x025BFA6C LDR X21, [X9 + 0x38]
	0x025BFA70 LDR X23, [X23 + 0xD70]
	0x025BFA74 CBNZ W10, 0x25BFA80
	0x025BFA78 MOV X0, X8
	0x025BFA7C BL 0x1C16DFC
	0x025BFA80 MOV X0, X21
	0x025BFA84 MOV X1, X31
	0x025BFA88 BL 0x338C698
	0x025BFA8C LDR X8, [X23]
	0x025BFA90 MOV X21, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0x1B35000
	005 Move X0, [X0+2880]
	006 Move X19, X2
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X20, X0
	010 Move X0, 0x1B5F000
	011 Move X0, [X0+144]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X20
	015 Move X2, X31
	016 Call NotSupportedException..ctor, X0, X1
	017 Move X0, X20
	018 Move X1, X19
	019 Call 0x1C17DEC

Method: System.Int32 GetHashCode()

Disassembly:
	0x025BFA94 MOV X1, X31
	0x025BFA98 MOV X0, X8
	0x025BFA9C BL 0x338C698
	0x025BFAA0 MOV X1, X0
	0x025BFAA4 MOV X0, X21
	0x025BFAA8 MOV X2, X31
	0x025BFAAC BL 0x3395194
	0x025BFAB0 TBZ X0, 0x0, 0x25BFADC
	0x025BFAB4 LDR X1, [X19]
	0x025BFAB8 LDR W3, [X19 + 0x8]
	0x025BFABC LDP X20, X19, [X31 + 0x30]
	0x025BFAC0 LDP X22, X21, [X31 + 0x20]
	0x025BFAC4 LDP X30, X23, [X31 + 0x10]
	0x025BFAC8 MOV X0, X31
	0x025BFACC MOV W2, W31
	0x025BFAD0 MOV X4, X31
	0x025BFAD4 ADD X31, X31, 0x40
	0x025BFAD8 B 0x322EAD4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0x1B35000
	005 Move X0, [X0+2880]
	006 Move X19, X1
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X20, X0
	010 Move X0, 0x1B5F000
	011 Move X0, [X0+152]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X20
	015 Move X2, X31
	016 Call NotSupportedException..ctor, X0, X1
	017 Move X0, X20
	018 Move X1, X19
	019 Call 0x1C17DEC

Method: System.ReadOnlySpan`1<T> op_Implicit(T[] array)

Disassembly:
	0x025BFADC LDR X0, [X20 + 0x20]
	0x025BFAE0 LDRB W8, [X0 + 0x135]
	0x025BFAE4 TBNZ X8, 0x0, 0x25BFAEC
	0x025BFAE8 BL 0x1C5C684
	0x025BFAEC LDR X8, [X22]
	0x025BFAF0 LDR X9, [X0 + 0xC0]
	0x025BFAF4 LDR W10, [X8 + 0xE0]
	0x025BFAF8 LDR X20, [X9 + 0x38]
	0x025BFAFC CBNZ W10, 0x25BFB08
	0x025BFB00 MOV X0, X8
	0x025BFB04 BL 0x1C16DFC
	0x025BFB08 MOV X0, X20
	0x025BFB0C MOV X1, X31
	0x025BFB10 BL 0x338C698
	0x025BFB14 CBZ X0, 0x25BFB78

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X1+32]
	004 Move X19, X0
	005 Move W9, [X8+309]
	006 Move TEMP, X9
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfEqual {12}
	010 Move X0, X8
	011 Call 0x1C5D684
	012 Compare X19, 0
	013 JumpIfEqual {16}
	014 Move W1, [X19+24]
	015 Add X0, X19, 32
	016 Move X0, X31
	017 Move X1, X31
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 Return X0

Method: System.ReadOnlySpan`1<T> get_Empty()

Disassembly:
	0x025BFB18 LDR X8, [X0]
	0x025BFB1C LDP X9, X1, [X8 + 0x1A8]
	0x025BFB20 BLR X9

ISIL:
	001 Move X0, X31
	002 Move X1, X31
	003 Return X0

