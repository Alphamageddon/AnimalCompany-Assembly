Type: System.Exception

Method: System.Void Init()

Disassembly:
	0x033B3BE4 STR W1, [X0 + 0x60]
	0x033B3BE8 RET
	0x033B3BEC STR X30, [X31 - 0x20]!
	0x033B3BF0 STP X20, X19, [X31 + 0x10]
	0x033B3BF4 ADRP X20, 0x102A000
	0x033B3BF8 LDRB W8, [X20 + 0x1B6]
	0x033B3BFC MOV W19, W0
	0x033B3C00 TBNZ X8, 0x0, 0x33B3C3C
	0x033B3C04 ADRP X0, 0xD78000
	0x033B3C08 LDR X0, [X0 + 0x960]
	0x033B3C0C BL 0x1C16CF4
	0x033B3C10 ADRP X0, 0xD79000
	0x033B3C14 LDR X0, [X0 + 0x10]
	0x033B3C18 BL 0x1C16CF4
	0x033B3C1C ADRP X0, 0xD79000
	0x033B3C20 LDR X0, [X0 + 0x18]
	0x033B3C24 BL 0x1C16CF4
	0x033B3C28 ADRP X0, 0xD40000
	0x033B3C2C LDR X0, [X0 + 0x988]
	0x033B3C30 BL 0x1C16CF4
	0x033B3C34 MOVZ W8, 0x1
	0x033B3C38 STRB W8, [X20 + 0x1B6]
	0x033B3C3C SUB W8, W19, 0x1
	0x033B3C40 CMP W8, 0x2
	0x033B3C44 B.HI 0x33B3C58
	0x033B3C48 ADRP X9, 0xB41000
	0x033B3C4C ADD X9, X9, 0xB40
	0x033B3C50 LDR X8, [X9, W8, SXTW]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x102B000
	006 Move X20, 0xD79000
	007 Move W8, [X21+429]
	008 Move X20, [X20+3992]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD79000
	015 Move X0, [X0+3992]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+429], W8
	019 Move W8, 0x1500
	020 NotImplemented "Instruction MOVK not yet implemented."
	021 Move [X19+24], X31
	022 Move [X19+56], X31
	023 Move [X19+88], X31
	024 Move [X19+96], W8
	025 Move X0, [X20]
	026 Call 0x1C17F10
	027 Move X1, X31
	028 Move X20, X0
	029 Call SafeSerializationManager..ctor, X0
	030 Move [X19+112], X20
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 

Method: System.Void .ctor()

Disassembly:
	0x033B3C54 B 0x33B3C60
	0x033B3C58 ADRP X8, 0xD40000
	0x033B3C5C LDR X8, [X8 + 0x988]
	0x033B3C60 LDR X0, [X8]
	0x033B3C64 LDP X20, X19, [X31 + 0x10]
	0x033B3C68 LDR X30, [X31], #0x20
	0x033B3C6C RET

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call Object..ctor, X0
	006 Move X0, X19
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Call Exception.Init, X0
	010 Return 

Method: System.Void .ctor(System.String message)

Disassembly:
	0x033B3C70 SUB X31, X31, 0x40
	0x033B3C74 STP X30, X23, [X31 + 0x10]
	0x033B3C78 STP X22, X21, [X31 + 0x20]
	0x033B3C7C STP X20, X19, [X31 + 0x30]
	0x033B3C80 ADRP X22, 0x102A000
	0x033B3C84 ADRP X20, 0xD79000
	0x033B3C88 ADRP X21, 0xD79000
	0x033B3C8C ADRP X23, 0xD40000
	0x033B3C90 LDRB W8, [X22 + 0x1B7]
	0x033B3C94 LDR X20, [X20 + 0x20]
	0x033B3C98 LDR X21, [X21 + 0x28]
	0x033B3C9C LDR X23, [X23 + 0x758]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move X0, X20
	009 Call Exception.Init, X0
	010 Move [X20+24], X19
	011 Move X20, [X31+16]
	012 Move X19, [X31+24]
	013 Move X30, [X31+32]
	014 Return 

Method: System.Void .ctor(System.String message, System.Exception innerException)

Disassembly:
	0x033B3CA0 MOV X19, X0
	0x033B3CA4 TBNZ X8, 0x0, 0x33B3CD4
	0x033B3CA8 ADRP X0, 0xD40000
	0x033B3CAC LDR X0, [X0 + 0x758]
	0x033B3CB0 BL 0x1C16CF4
	0x033B3CB4 ADRP X0, 0xD79000
	0x033B3CB8 LDR X0, [X0 + 0x20]
	0x033B3CBC BL 0x1C16CF4
	0x033B3CC0 ADRP X0, 0xD79000
	0x033B3CC4 LDR X0, [X0 + 0x28]
	0x033B3CC8 BL 0x1C16CF4
	0x033B3CCC MOVZ W8, 0x1
	0x033B3CD0 STRB W8, [X22 + 0x1B7]
	0x033B3CD4 LDR W8, [X19 + 0x50]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X1
	006 Move X1, X31
	007 Move X19, X2
	008 Move X21, X0
	009 Call Object..ctor, X0
	010 Move X0, X21
	011 Call Exception.Init, X0
	012 Move [X21+24], X20
	013 Move [X21+40], X19
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X30, [X31+32]
	017 Move X21, [X31+40]
	018 Return 

Method: System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x033B3CD8 MOV X0, X31
	0x033B3CDC CMP W8, 0x0
	0x033B3CE0 CSEL X8, X20, X21, EQ
	0x033B3CE4 LDR X20, [X8]
	0x033B3CE8 BL 0x33C1548
	0x033B3CEC LDR X8, [X19]
	0x033B3CF0 MOV X21, X0
	0x033B3CF4 MOV X0, X19
	0x033B3CF8 LDP X9, X1, [X8 + 0x1B8]
	0x033B3CFC BLR X9
	0x033B3D00 MOV X22, X0
	0x033B3D04 LDR W8, [X19 + 0x50]
	0x033B3D08 LDR X0, [X23]
	0x033B3D0C ADD X1, X31, 0xC
	0x033B3D10 STR W8, [X31 + 0xC]
	0x033B3D14 BL 0x1C16E04
	0x033B3D18 MOV X3, X0
	0x033B3D1C MOV X0, X20
	0x033B3D20 MOV X1, X21
	0x033B3D24 MOV X2, X22
	0x033B3D28 MOV X4, X31
	0x033B3D2C BL 0x3227C18
	0x033B3D30 LDR W8, [X19 + 0x50]
	0x033B3D34 STP X31, X0, [X19 + 0x40]
	0x033B3D38 MOV X0, X19
	0x033B3D3C LDP X22, X21, [X31 + 0x20]
	0x033B3D40 ADD W8, W8, 0x1
	0x033B3D44 STR W8, [X19 + 0x50]
	0x033B3D48 LDP X20, X19, [X31 + 0x30]
	0x033B3D4C LDP X30, X23, [X31 + 0x10]
	0x033B3D50 ADD X31, X31, 0x40
	0x033B3D54 RET
	0x033B3D58 B 0x1C88258
	0x033B3D5C STP X30, X21, [X31 - 0x20]!
	0x033B3D60 STP X20, X19, [X31 + 0x10]
	0x033B3D64 ADRP X19, 0x102A000
	0x033B3D68 ADRP X21, 0xD46000
	0x033B3D6C ADRP X20, 0xD40000
	0x033B3D70 LDRB W8, [X19 + 0x1B8]
	0x033B3D74 LDR X21, [X21 + 0xCC0]
	0x033B3D78 LDR X20, [X20 + 0x7D0]
	0x033B3D7C TBNZ X8, 0x0, 0x33B3DA0
	0x033B3D80 ADRP X0, 0xD40000
	0x033B3D84 LDR X0, [X0 + 0x7D0]
	0x033B3D88 BL 0x1C16CF4
	0x033B3D8C ADRP X0, 0xD46000
	0x033B3D90 LDR X0, [X0 + 0xCC0]
	0x033B3D94 BL 0x1C16CF4
	0x033B3D98 MOVZ W8, 0x1
	0x033B3D9C STRB W8, [X19 + 0x1B8]
	0x033B3DA0 LDR X0, [X21]
	0x033B3DA4 BL 0x1C16F10
	0x033B3DA8 MOV X1, X31
	0x033B3DAC MOV X19, X0
	0x033B3DB0 BL 0x33BDD8C
	0x033B3DB4 LDR X8, [X20]
	0x033B3DB8 LDR X8, [X8 + 0xB8]
	0x033B3DBC STR X19, [X8]
	0x033B3DC0 LDP X20, X19, [X31 + 0x10]
	0x033B3DC4 LDP X30, X21, [X31], #0x20
	0x033B3DC8 RET
	0x033B3DCC B 0x1C327E8
	0x033B3DD0 B 0x1C39E04
	0x033B3DD4 B 0x1C39E08
	0x033B3DD8 B 0x1C39DB0
	0x033B3DDC MOVN X8, 0x0
	0x033B3DE0 STR W31, [X0]
	0x033B3DE4 STR X8, [X1]
	0x033B3DE8 STR W31, [X2]
	0x033B3DEC STR X31, [X3]
	0x033B3DF0 STR X31, [X4]
	0x033B3DF4 RET
	0x033B3DF8 STR X30, [X31 - 0x20]!
	0x033B3DFC STP X20, X19, [X31 + 0x10]
	0x033B3E00 ADRP X19, 0x102A000
	0x033B3E04 ADRP X20, 0xD47000
	0x033B3E08 LDRB W8, [X19 + 0x1B9]
	0x033B3E0C LDR X20, [X20 + 0xC10]
	0x033B3E10 TBNZ X8, 0x0, 0x33B3E28
	0x033B3E14 ADRP X0, 0xD47000
	0x033B3E18 LDR X0, [X0 + 0xC10]
	0x033B3E1C BL 0x1C16CF4
	0x033B3E20 MOVZ W8, 0x1
	0x033B3E24 STRB W8, [X19 + 0x1B9]
	0x033B3E28 LDR X0, [X20]
	0x033B3E2C LDR W8, [X0 + 0xE0]
	0x033B3E30 CBNZ W8, 0x33B3E38
	0x033B3E34 BL 0x1C16DFC
	0x033B3E38 BL 0x33B3E48
	0x033B3E3C LDP X20, X19, [X31 + 0x10]
	0x033B3E40 LDR X30, [X31], #0x20
	0x033B3E44 B 0x1C39E04
	0x033B3E48 STR X30, [X31 - 0x20]!
	0x033B3E4C STP X20, X19, [X31 + 0x10]
	0x033B3E50 ADRP X19, 0x102A000
	0x033B3E54 ADRP X20, 0xD47000
	0x033B3E58 LDRB W8, [X19 + 0x1BA]
	0x033B3E5C LDR X20, [X20 + 0xC10]
	0x033B3E60 TBNZ X8, 0x0, 0x33B3E78
	0x033B3E64 ADRP X0, 0xD47000
	0x033B3E68 LDR X0, [X0 + 0xC10]
	0x033B3E6C BL 0x1C16CF4
	0x033B3E70 MOVZ W8, 0x1
	0x033B3E74 STRB W8, [X19 + 0x1BA]
	0x033B3E78 LDR X0, [X20]
	0x033B3E7C LDR W8, [X0 + 0xE0]
	0x033B3E80 CBNZ W8, 0x33B3E88
	0x033B3E84 BL 0x1C16DFC
	0x033B3E88 LDP X20, X19, [X31 + 0x10]
	0x033B3E8C LDR X30, [X31], #0x20
	0x033B3E90 B 0x1C327E8
	0x033B3E94 RET
	0x033B3E98 B 0x1C39DE4
	0x033B3E9C STR X30, [X31 - 0x20]!
	0x033B3EA0 STP X20, X19, [X31 + 0x10]
	0x033B3EA4 ADRP X20, 0x102A000
	0x033B3EA8 LDRB W8, [X20 + 0x1BB]
	0x033B3EAC MOV X19, X0
	0x033B3EB0 TBNZ X8, 0x0, 0x33B3EC8
	0x033B3EB4 ADRP X0, 0xD47000
	0x033B3EB8 LDR X0, [X0 + 0xC10]
	0x033B3EBC BL 0x1C16CF4
	0x033B3EC0 MOVZ W8, 0x1
	0x033B3EC4 STRB W8, [X20 + 0x1BB]
	0x033B3EC8 CBZ X19, 0x33B3EF4
	0x033B3ECC ADRP X8, 0xD47000
	0x033B3ED0 LDR X8, [X8 + 0xC10]
	0x033B3ED4 LDR X0, [X8]
	0x033B3ED8 LDR W8, [X0 + 0xE0]
	0x033B3EDC CBNZ W8, 0x33B3EE4
	0x033B3EE0 BL 0x1C16DFC
	0x033B3EE4 MOV X0, X19
	0x033B3EE8 LDP X20, X19, [X31 + 0x10]
	0x033B3EEC LDR X30, [X31], #0x20
	0x033B3EF0 B 0x1C39DE4
	0x033B3EF4 ADRP X0, 0xD45000
	0x033B3EF8 LDR X0, [X0 + 0x528]
	0x033B3EFC BL 0x1C16D08
	0x033B3F00 BL 0x1C16F10
	0x033B3F04 MOV X19, X0
	0x033B3F08 ADRP X0, 0xD4B000
	0x033B3F0C LDR X0, [X0 + 0x8A8]
	0x033B3F10 BL 0x1C16D08
	0x033B3F14 MOV X1, X0
	0x033B3F18 MOV X0, X19
	0x033B3F1C MOV X2, X31
	0x033B3F20 BL 0x330E100
	0x033B3F24 ADRP X0, 0xD79000
	0x033B3F28 LDR X0, [X0 + 0x30]
	0x033B3F2C BL 0x1C16D08
	0x033B3F30 MOV X1, X0
	0x033B3F34 MOV X0, X19
	0x033B3F38 BL 0x1C16DEC
	0x033B3F3C B 0x1C39DC4
	0x033B3F40 STR X30, [X31 - 0x20]!
	0x033B3F44 STP X20, X19, [X31 + 0x10]
	0x033B3F48 ADRP X20, 0x102A000
	0x033B3F4C LDRB W8, [X20 + 0x1BC]
	0x033B3F50 MOV X19, X0
	0x033B3F54 TBNZ X8, 0x0, 0x33B3F6C
	0x033B3F58 ADRP X0, 0xD47000
	0x033B3F5C LDR X0, [X0 + 0xC10]
	0x033B3F60 BL 0x1C16CF4
	0x033B3F64 MOVZ W8, 0x1
	0x033B3F68 STRB W8, [X20 + 0x1BC]
	0x033B3F6C CBZ X19, 0x33B3F98
	0x033B3F70 ADRP X8, 0xD47000
	0x033B3F74 LDR X8, [X8 + 0xC10]
	0x033B3F78 LDR X0, [X8]
	0x033B3F7C LDR W8, [X0 + 0xE0]
	0x033B3F80 CBNZ W8, 0x33B3F88
	0x033B3F84 BL 0x1C16DFC
	0x033B3F88 MOV X0, X19
	0x033B3F8C LDP X20, X19, [X31 + 0x10]
	0x033B3F90 LDR X30, [X31], #0x20
	0x033B3F94 B 0x1C39DC4
	0x033B3F98 ADRP X0, 0xD45000
	0x033B3F9C LDR X0, [X0 + 0x528]
	0x033B3FA0 BL 0x1C16D08
	0x033B3FA4 BL 0x1C16F10
	0x033B3FA8 MOV X19, X0
	0x033B3FAC ADRP X0, 0xD4B000
	0x033B3FB0 LDR X0, [X0 + 0x8A8]
	0x033B3FB4 BL 0x1C16D08
	0x033B3FB8 MOV X1, X0
	0x033B3FBC MOV X0, X19
	0x033B3FC0 MOV X2, X31
	0x033B3FC4 BL 0x330E100
	0x033B3FC8 ADRP X0, 0xD79000
	0x033B3FCC LDR X0, [X0 + 0x38]
	0x033B3FD0 BL 0x1C16D08
	0x033B3FD4 MOV X1, X0
	0x033B3FD8 MOV X0, X19
	0x033B3FDC BL 0x1C16DEC
	0x033B3FE0 STR X30, [X31 - 0x20]!
	0x033B3FE4 STP X20, X19, [X31 + 0x10]
	0x033B3FE8 ADRP X20, 0x102A000
	0x033B3FEC ADRP X19, 0xD47000
	0x033B3FF0 LDRB W8, [X20 + 0x1BD]
	0x033B3FF4 LDR X19, [X19 + 0xC10]
	0x033B3FF8 TBNZ X8, 0x0, 0x33B4010
	0x033B3FFC ADRP X0, 0xD47000
	0x033B4000 LDR X0, [X0 + 0xC10]
	0x033B4004 BL 0x1C16CF4
	0x033B4008 MOVZ W8, 0x1
	0x033B400C STRB W8, [X20 + 0x1BD]
	0x033B4010 BL 0x1C39DB0
	0x033B4014 LDR X8, [X19]
	0x033B4018 LDP X20, X19, [X31 + 0x10]
	0x033B401C LDR X8, [X8 + 0xB8]
	0x033B4020 STR X0, [X8]
	0x033B4024 LDR X30, [X31], #0x20
	0x033B4028 RET
	0x033B402C CBZ X0, 0x33B4048
	0x033B4030 AND W1, W1, 0x1
	0x033B4034 AND W2, W2, 0x1
	0x033B4038 AND W3, W3, 0x1
	0x033B403C MOV W5, W31
	0x033B4040 MOV X6, X31
	0x033B4044 B 0x33CC578
	0x033B4048 STP X30, X19, [X31 - 0x10]!
	0x033B404C ADRP X0, 0xD44000
	0x033B4050 LDR X0, [X0 + 0x528]
	0x033B4054 BL 0x1C16D08
	0x033B4058 BL 0x1C16F10
	0x033B405C MOV X19, X0
	0x033B4060 ADRP X0, 0xD71000
	0x033B4064 LDR X0, [X0 + 0x970]
	0x033B4068 BL 0x1C16D08
	0x033B406C MOV X1, X0
	0x033B4070 MOV X0, X19
	0x033B4074 MOV X2, X31
	0x033B4078 BL 0x330E100
	0x033B407C ADRP X0, 0xD78000
	0x033B4080 LDR X0, [X0 + 0x40]
	0x033B4084 BL 0x1C16D08
	0x033B4088 MOV X1, X0
	0x033B408C MOV X0, X19
	0x033B4090 BL 0x1C16DEC
	0x033B4094 STR X30, [X31 - 0x20]!
	0x033B4098 STP X20, X19, [X31 + 0x10]
	0x033B409C ADRP X20, 0x1029000
	0x033B40A0 LDRB W8, [X20 + 0x1BE]
	0x033B40A4 MOV X19, X0
	0x033B40A8 TBNZ X8, 0x0, 0x33B40CC
	0x033B40AC ADRP X0, 0xD3F000
	0x033B40B0 LDR X0, [X0 + 0x6C0]
	0x033B40B4 BL 0x1C16CF4
	0x033B40B8 ADRP X0, 0xD70000
	0x033B40BC LDR X0, [X0 + 0x810]
	0x033B40C0 BL 0x1C16CF4
	0x033B40C4 MOVZ W8, 0x1
	0x033B40C8 STRB W8, [X20 + 0x1BE]
	0x033B40CC CBZ X19, 0x33B41EC
	0x033B40D0 MOV X0, X19
	0x033B40D4 MOV X1, X31
	0x033B40D8 BL 0x3396C18
	0x033B40DC TBNZ X0, 0x0, 0x33B4140
	0x033B40E0 MOV X0, X19
	0x033B40E4 MOV X1, X31
	0x033B40E8 BL 0x3396C08
	0x033B40EC TBNZ X0, 0x0, 0x33B4140
	0x033B40F0 ADRP X8, 0xD3F000
	0x033B40F4 LDR X8, [X8 + 0x6C0]
	0x033B40F8 LDR X0, [X8]
	0x033B40FC ADRP X8, 0xD70000
	0x033B4100 LDR X8, [X8 + 0x810]
	0x033B4104 LDR W9, [X0 + 0xE0]
	0x033B4108 LDR X20, [X8]
	0x033B410C CBNZ W9, 0x33B4114
	0x033B4110 BL 0x1C16DFC
	0x033B4114 MOV X0, X20
	0x033B4118 MOV X1, X31
	0x033B411C BL 0x338C698
	0x033B4120 MOV X1, X0
	0x033B4124 MOV X0, X19
	0x033B4128 MOV X2, X31
	0x033B412C BL 0x3395194
	0x033B4130 TBNZ X0, 0x0, 0x33B4140

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X22, 0x102B000
	013 Move W8, [X22+430]
	014 Move X20, X3
	015 Move X21, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {77}
	021 Move X0, 0xD79000
	022 Move X0, [X0+4000]
	023 Call 0x1C17CF4
	024 Move X0, 0xD41000
	025 Move X0, [X0+2000]
	026 Call 0x1C17CF4
	027 Move X0, 0xD71000
	028 Move X0, [X0+3896]
	029 Call 0x1C17CF4
	030 Move X0, 0xD41000
	031 Move X0, [X0+2072]
	032 Call 0x1C17CF4
	033 Move X0, 0xD72000
	034 Move X0, [X0+3776]
	035 Call 0x1C17CF4
	036 Move X0, 0xD79000
	037 Move X0, [X0+3992]
	038 Call 0x1C17CF4
	039 Move X0, 0xD41000
	040 Move X0, [X0+1728]
	041 Call 0x1C17CF4
	042 Move X0, 0xD79000
	043 Move X0, [X0+4008]
	044 Call 0x1C17CF4
	045 Move X0, 0xD79000
	046 Move X0, [X0+4016]
	047 Call 0x1C17CF4
	048 Move X0, 0xD79000
	049 Move X0, [X0+4024]
	050 Call 0x1C17CF4
	051 Move X0, 0xD79000
	052 Move X0, [X0+4032]
	053 Call 0x1C17CF4
	054 Move X0, 0xD79000
	055 Move X0, [X0+4040]
	056 Call 0x1C17CF4
	057 Move X0, 0xD74000
	058 Move X0, [X0+392]
	059 Call 0x1C17CF4
	060 Move X0, 0xD4C000
	061 Move X0, [X0+1688]
	062 Call 0x1C17CF4
	063 Move X0, 0xD79000
	064 Move X0, [X0+4048]
	065 Call 0x1C17CF4
	066 Move X0, 0xD4D000
	067 Move X0, [X0+1616]
	068 Call 0x1C17CF4
	069 Move X0, 0xD6D000
	070 Move X0, [X0+296]
	071 Call 0x1C17CF4
	072 Move X0, 0xD79000
	073 Move X0, [X0+4056]
	074 Call 0x1C17CF4
	075 Move W8, 1
	076 Move [X22+430], W8
	077 Move X0, X19
	078 Move X1, X31
	079 Call Object..ctor, X0
	080 Compare X21, 0
	081 JumpIfEqual {279}
	082 Move X8, 0xD74000
	083 Move X8, [X8+392]
	084 Move X22, 0xD4D000
	085 Move X22, [X22+1616]
	086 Move X24, 0xD71000
	087 Move X1, [X8]
	088 Move X25, 0xD41000
	089 Move X23, 0xD6D000
	090 Move X24, [X24+3896]
	091 Move X25, [X25+1728]
	092 Move X23, [X23+296]
	093 Move X0, X21
	094 Move X2, X31
	095 Call SerializationInfo.GetString, X0, X1
	096 Move [X19+16], X0
	097 Move X1, [X22]
	098 Move X0, X21
	099 Move X2, X31
	100 Call SerializationInfo.GetString, X0, X1
	101 Move [X19+24], X0
	102 Move X0, [X25]
	103 Move X22, [X24]
	104 Move W8, [X0+224]
	105 Compare W8, 0
	106 JumpIfNotEqual {108}
	107 Call 0x1C17DFC
	108 Move X0, X22
	109 Move X1, X31
	110 Call Type.GetTypeFromHandle, X0
	111 Move X1, [X23]
	112 Move X2, X0
	113 Move X0, X21
	114 Move X3, X31
	115 Call SerializationInfo.GetValueNoThrow, X0, X1, X2
	116 Compare X0, 0
	117 JumpIfEqual {135}
	118 Move X24, 0xD41000
	119 Move X24, [X24+2072]
	120 Move X22, X0
	121 Move X23, [X24]
	122 Move X1, X23
	123 Call 0x1C17E00
	124 Compare X0, 0
	125 JumpIfEqual {133}
	126 Move [X19+32], X0
	127 Move X23, [X24]
	128 Move X0, X22
	129 Move X1, X23
	130 Call 0x1C17E00
	131 Compare X0, 0
	132 JumpIfNotEqual {136}
	133 Move X0, X22
	134 Move X1, X23
	135 Move [X19+32], X31
	136 Move X8, 0xD79000
	137 Move X8, [X8+4000]
	138 Move X22, 0xD79000
	139 Move X1, X31
	140 Move X0, [X8]
	141 Move X22, [X22+4040]
	142 Call Type.GetTypeFromHandle, X0
	143 Move X1, [X22]
	144 Move X2, X0
	145 Move X0, X21
	146 Move X3, X31
	147 Call SerializationInfo.GetValue, X0, X1, X2
	148 Compare X0, 0
	149 JumpIfEqual {169}
	150 Move X8, 0xD41000
	151 Move X8, [X8+2000]
	152 Move X9, [X0]
	153 Move X1, [X8]
	154 Move W10, [X9+304]
	155 Move W8, [X1+304]
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Move X10, [X9+200]
	158 Subtract X9, X8, 1
	159 Move X10, [X10]
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Move [X19+40], X0
	162 Move X10, [X0]
	163 Move W11, [X10+304]
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move X8, [X10+200]
	166 Move X8, [X8]
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Call 0x1C181E0
	169 Move [X19+40], X31
	170 Move X8, 0xD79000
	171 Move X8, [X8+4032]
	172 Move X22, 0xD79000
	173 Move X23, 0xD79000
	174 Move X24, 0xD79000
	175 Move X25, 0xD79000
	176 Move X22, [X22+4056]
	177 Move X23, [X23+4008]
	178 Move X24, [X24+4024]
	179 Move X25, [X25+4048]
	180 Move X1, [X8]
	181 Move X26, 0xD4C000
	182 Move X27, 0xD72000
	183 Move X28, 0xD79000
	184 Move X26, [X26+1688]
	185 Move X27, [X27+3776]
	186 Move X28, [X28+4016]
	187 Move X0, X21
	188 Move X2, X31
	189 Call SerializationInfo.GetString, X0, X1
	190 Move [X19+48], X0
	191 Move X1, [X22]
	192 Move X0, X21
	193 Move X2, X31
	194 Call SerializationInfo.GetString, X0, X1
	195 Move [X19+64], X0
	196 Move X1, [X23]
	197 Move X0, X21
	198 Move X2, X31
	199 Call SerializationInfo.GetString, X0, X1
	200 Move [X19+72], X0
	201 Move X1, [X24]
	202 Move X0, X21
	203 Move X2, X31
	204 Call SerializationInfo.GetInt32, X0, X1
	205 Move [X19+80], W0
	206 Move X1, [X25]
	207 Move X0, X21
	208 Move X2, X31
	209 Call SerializationInfo.GetInt32, X0, X1
	210 Move [X19+96], W0
	211 Move X1, [X26]
	212 Move X0, X21
	213 Move X2, X31
	214 Call SerializationInfo.GetString, X0, X1
	215 Move [X19+104], X0
	216 Move X0, [X27]
	217 Move X1, X31
	218 Call Type.GetTypeFromHandle, X0
	219 Move X1, [X28]
	220 Move X2, X0
	221 Move X0, X21
	222 Move X3, X31
	223 Call SerializationInfo.GetValueNoThrow, X0, X1, X2
	224 Compare X0, 0
	225 JumpIfEqual {232}
	226 Move X8, 0xD78000
	227 Move X8, [X8+3992]
	228 Move X9, [X0]
	229 Move X8, [X8]
	230 NotImplemented "Instruction CMP not yet implemented."
	231 NotImplemented "Instruction CSEL not yet implemented."
	232 Move X8, X31
	233 Move X9, [X19+16]
	234 Move [X19+112], X8
	235 Compare X9, 0
	236 JumpIfEqual {259}
	237 Move W8, [X19+96]
	238 Compare W8, 0
	239 JumpIfEqual {259}
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Move X1, [X19+64]
	242 Move X0, [X19+72]
	243 Move X2, X31
	244 Call String.Concat, X0, X1
	245 Move [X19+64], X31
	246 Move [X19+72], X0
	247 Move X20, [X31+80]
	248 Move X19, [X31+88]
	249 Move X22, [X31+64]
	250 Move X21, [X31+72]
	251 Move X24, [X31+48]
	252 Move X23, [X31+56]
	253 Move X26, [X31+32]
	254 Move X25, [X31+40]
	255 Move X28, [X31+16]
	256 Move X27, [X31+24]
	257 Move X30, [X31+96]
	258 Return 
	259 Move X0, 0xD72000
	260 Move X0, [X0+3632]
	261 Call 0x1C17D08
	262 Move X1, X31
	263 Call Environment.GetResourceString, X0
	264 Move X19, X0
	265 Move X0, 0xD6A000
	266 Move X0, [X0+736]
	267 Call 0x1C17D08
	268 Call 0x1C17F10
	269 Move X1, X19
	270 Move X2, X31
	271 Move X20, X0
	272 Call SerializationException..ctor, X0, X1
	273 Move X0, 0xD78000
	274 Move X0, [X0+4064]
	275 Call 0x1C17D08
	276 Move X1, X0
	277 Move X0, X20
	278 Call 0x1C17DEC
	279 Move X0, 0xD45000
	280 Move X0, [X0+1320]
	281 Call 0x1C17D08
	282 Call 0x1C17F10
	283 Move X19, X0
	284 Move X0, 0xD6A000
	285 Move X0, [X0+728]
	286 Call 0x1C17D08
	287 Move X1, X0
	288 Move X0, X19
	289 Move X2, X31
	290 Call ArgumentNullException..ctor, X0, X1
	291 Move X0, 0xD78000
	292 Move X0, [X0+4064]
	293 Call 0x1C17D08
	294 Move X1, X0
	295 Move X0, X19
	296 Call 0x1C17DEC

Method: System.String get_Message()

Disassembly:
	0x033B4134 LDP X20, X19, [X31 + 0x10]
	0x033B4138 LDR X30, [X31], #0x20
	0x033B413C RET
	0x033B4140 ADRP X0, 0xD3F000
	0x033B4144 LDR X0, [X0 + 0x9D0]
	0x033B4148 BL 0x1C16D08
	0x033B414C MOVZ W1, 0x1
	0x033B4150 BL 0x1C16D6C
	0x033B4154 MOV X20, X0
	0x033B4158 MOV X0, X19
	0x033B415C BL 0x19903C0
	0x033B4160 LDR X8, [X19]
	0x033B4164 MOV X0, X19
	0x033B4168 LDP X9, X1, [X8 + 0x168]
	0x033B416C BLR X9
	0x033B4170 MOV X19, X0
	0x033B4174 MOV X0, X20
	0x033B4178 BL 0x19903C0
	0x033B417C MOV X0, X20
	0x033B4180 MOV X1, X19
	0x033B4184 BL 0x19980B4
	0x033B4188 MOV X0, X20
	0x033B418C MOV X1, X31
	0x033B4190 MOV X2, X19
	0x033B4194 BL 0x1993444
	0x033B4198 ADRP X0, 0xD78000
	0x033B419C LDR X0, [X0 + 0x48]
	0x033B41A0 BL 0x1C16D08
	0x033B41A4 MOV X1, X20
	0x033B41A8 MOV X2, X31
	0x033B41AC BL 0x33BFB40
	0x033B41B0 MOV X19, X0
	0x033B41B4 ADRP X0, 0xD47000
	0x033B41B8 LDR X0, [X0 + 0x578]
	0x033B41BC BL 0x1C16D08
	0x033B41C0 BL 0x1C16F10
	0x033B41C4 MOV X1, X19
	0x033B41C8 MOV X2, X31
	0x033B41CC MOV X20, X0
	0x033B41D0 BL 0x3314A68
	0x033B41D4 ADRP X0, 0xD78000
	0x033B41D8 LDR X0, [X0 + 0x50]
	0x033B41DC BL 0x1C16D08
	0x033B41E0 MOV X1, X0
	0x033B41E4 MOV X0, X20
	0x033B41E8 BL 0x1C16DEC
	0x033B41EC BL 0x1C16F20
	0x033B41F0 STR X30, [X31 - 0x40]!
	0x033B41F4 STP X24, X23, [X31 + 0x10]
	0x033B41F8 STP X22, X21, [X31 + 0x20]
	0x033B41FC STP X20, X19, [X31 + 0x30]
	0x033B4200 ADRP X21, 0x1029000
	0x033B4204 LDRB W8, [X21 + 0x1BF]
	0x033B4208 MOV X19, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x102A000
	005 Move W8, [X20+431]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xD40000
	012 Move X0, [X0+2512]
	013 Call 0x1C17CF4
	014 Move X0, 0xD78000
	015 Move X0, [X0+4072]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+431], W8
	019 Move X0, [X19+24]
	020 Compare X0, 0
	021 JumpIfEqual {26}
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Return X0
	026 Move X8, [X19+16]
	027 Compare X8, 0
	028 JumpIfNotEqual {32}
	029 Move X0, X19
	030 Call Exception.GetClassName, X0
	031 Move [X19+16], X0
	032 Move X8, 0xD40000
	033 Move X8, [X8+2512]
	034 Move W1, 1
	035 Move X0, [X8]
	036 Call 0x1C17D6C
	037 Compare X0, 0
	038 JumpIfEqual {63}
	039 Move X19, [X19+16]
	040 Move X20, X0
	041 Compare X19, 0
	042 JumpIfEqual {49}
	043 Move X8, [X20]
	044 Move X0, X19
	045 Move X1, [X8+64]
	046 Call 0x1C17E00
	047 Compare X0, 0
	048 JumpIfEqual {65}
	049 Move W8, [X20+24]
	050 Compare W8, 0
	051 JumpIfEqual {64}
	052 Move [X20+32], X19
	053 Move X8, 0xD78000
	054 Move X8, [X8+4072]
	055 Move X1, X20
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X2, X31
	059 Move X0, [X8]
	060 Move X30, [X31+32]
	061 Call Environment.GetResourceString, X0, X1
	062 Return X0
	063 Call 0x1C17F20
	064 Call 0x1C17F28
	065 Call 0x1C17F44
	066 Move X1, X31
	067 Call 0x1C17DEC

Method: System.Collections.IDictionary get_Data()

Disassembly:
	0x033B4248 CMP W22, W8
	0x033B424C B.CS 0x33B42C4
	0x033B4250 LDR X0, [X23]
	0x033B4254 LDR X21, [X24, X22, LSL #3]
	0x033B4258 LDR W8, [X0 + 0xE0]
	0x033B425C CBNZ W8, 0x33B4264
	0x033B4260 BL 0x1C16DFC
	0x033B4264 CBZ X21, 0x33B42C8
	0x033B4268 LDR W8, [X20 + 0x18]
	0x033B426C CMP W22, W8
	0x033B4270 B.CS 0x33B42C4
	0x033B4274 LDR X0, [X23]
	0x033B4278 LDR X21, [X24, X22, LSL #3]
	0x033B427C LDR W8, [X0 + 0xE0]
	0x033B4280 CBNZ W8, 0x33B4288
	0x033B4284 BL 0x1C16DFC
	0x033B4288 MOV X0, X21
	0x033B428C BL 0x33B4094
	0x033B4290 LDR X8, [X20 + 0x18]
	0x033B4294 ADD X22, X22, 0x1
	0x033B4298 CMP W22, W8
	0x033B429C B.LT 0x33B4248
	0x033B42A0 CBZ X19, 0x33B42FC
	0x033B42A4 LDR W9, [X19 + 0x18]
	0x033B42A8 CMP W8, W9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x102A000
	005 Move W8, [X20+432]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xD78000
	012 Move X0, [X0+4080]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+432], W8
	016 Move X20, [X19+32]
	017 Compare X20, 0
	018 JumpIfNotEqual {27}
	019 Move X8, 0xD78000
	020 Move X8, [X8+4080]
	021 Move X0, [X8]
	022 Call 0x1C17F10
	023 Move X1, X31
	024 Move X20, X0
	025 Call ListDictionaryInternal..ctor, X0
	026 Move [X19+32], X20
	027 Move X0, X20
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Return X0

Method: System.String GetClassName()

Disassembly:
	0x033B420C MOV X20, X0
	0x033B4210 TBNZ X8, 0x0, 0x33B4228
	0x033B4214 ADRP X0, 0xD68000
	0x033B4218 LDR X0, [X0 + 0x4E8]
	0x033B421C BL 0x1C16CF4
	0x033B4220 MOVZ W8, 0x1
	0x033B4224 STRB W8, [X21 + 0x1BF]
	0x033B4228 CBZ X20, 0x33B42C8
	0x033B422C LDR W8, [X20 + 0x18]
	0x033B4230 CMP W8, 0x1
	0x033B4234 B.LT 0x33B42A0
	0x033B4238 ADRP X23, 0xD68000
	0x033B423C LDR X23, [X23 + 0x4E8]
	0x033B4240 MOV X22, X31
	0x033B4244 ADD X24, X20, 0x20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+16]
	005 Compare X0, 0
	006 JumpIfNotEqual {17}
	007 Move X0, X19
	008 Move X1, X31
	009 Call "il2cpp_vm_object_is_inst", X0
	010 Compare X0, 0
	011 JumpIfEqual {20}
	012 Move X8, [X0]
	013 Move X9, [X8+360]
	014 Move X1, [X8+368]
	015 NotImplemented "Instruction BLR not yet implemented."
	016 Move [X19+16], X0
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Return X0
	020 Call 0x1C17F20

Method: System.Exception get_InnerException()

Disassembly:
	0x033B42B4 LDP X22, X21, [X31 + 0x20]
	0x033B42B8 LDP X24, X23, [X31 + 0x10]

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.String get_StackTrace()

Disassembly:
	0x033B42BC LDR X30, [X31], #0x40
	0x033B42C0 RET

ISIL:
	001 Move W1, 1

Method: System.String GetStackTrace(System.Boolean needFileInfo)

Disassembly:
	0x033B42C4 BL 0x1C16F28
	0x033B42C8 ADRP X0, 0xD44000
	0x033B42CC LDR X0, [X0 + 0x528]
	0x033B42D0 BL 0x1C16D08
	0x033B42D4 BL 0x1C16F10
	0x033B42D8 MOV X1, X31
	0x033B42DC MOV X19, X0
	0x033B42E0 BL 0x3315F20
	0x033B42E4 ADRP X0, 0xD78000
	0x033B42E8 LDR X0, [X0 + 0x58]
	0x033B42EC BL 0x1C16D08
	0x033B42F0 MOV X1, X0
	0x033B42F4 MOV X0, X19
	0x033B42F8 BL 0x1C16DEC
	0x033B42FC BL 0x1C16F20
	0x033B4300 ADRP X0, 0xD3F000
	0x033B4304 LDR X0, [X0 + 0x9D0]
	0x033B4308 BL 0x1C16D08
	0x033B430C MOVZ W1, 0x2

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+64]
	004 Move X19, [X0+72]
	005 Compare X8, 0
	006 JumpIfEqual {9}
	007 Move X0, X19
	008 Move X1, X8
	009 Move X8, [X0+56]
	010 Compare X8, 0
	011 JumpIfEqual {22}
	012 And W1, W1, 1
	013 Move X2, X31
	014 Call Environment.GetStackTrace, X0, X1
	015 Move X1, X0
	016 Move X0, X19
	017 Move X2, X31
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 Call String.Concat, X0, X1
	021 Return X0
	022 Move X0, X19
	023 Move X30, [X31+16]
	024 Move X19, [X31+24]
	025 Return X0

Method: System.Void SetErrorCode(System.Int32 hr)

Disassembly:
	0x033B4318 MOV X0, X20
	0x033B431C BL 0x19903C0

ISIL:
	001 Move [X0+96], W1
	002 Return 

Method: System.String get_Source()

Disassembly:
	0x033B4320 LDR X8, [X20 + 0x18]
	0x033B4324 ADRP X20, 0xD3F000
	0x033B4328 STR W8, [X31 + 0xC]
	0x033B432C LDR X20, [X20 + 0x758]
	0x033B4330 MOV X0, X20
	0x033B4334 BL 0x1C16D08
	0x033B4338 ADD X1, X31, 0xC
	0x033B433C BL 0x1C16E04
	0x033B4340 MOV X22, X0
	0x033B4344 MOV X0, X21
	0x033B4348 BL 0x19903C0
	0x033B434C MOV X0, X21
	0x033B4350 MOV X1, X22
	0x033B4354 BL 0x19980B4
	0x033B4358 MOV X0, X21
	0x033B435C MOV X1, X31
	0x033B4360 MOV X2, X22
	0x033B4364 BL 0x1993444
	0x033B4368 MOV X0, X19
	0x033B436C BL 0x19903C0
	0x033B4370 LDR X8, [X19 + 0x18]
	0x033B4374 MOV X0, X20
	0x033B4378 STR W8, [X31 + 0x8]
	0x033B437C BL 0x1C16D08
	0x033B4380 ADD X1, X31, 0x8
	0x033B4384 BL 0x1C16E04
	0x033B4388 MOV X19, X0
	0x033B438C MOV X0, X21
	0x033B4390 BL 0x19903C0
	0x033B4394 MOV X0, X21
	0x033B4398 MOV X1, X19
	0x033B439C BL 0x19980B4
	0x033B43A0 MOVZ W1, 0x1
	0x033B43A4 MOV X0, X21
	0x033B43A8 MOV X2, X19
	0x033B43AC BL 0x1993444
	0x033B43B0 ADRP X0, 0xD78000
	0x033B43B4 LDR X0, [X0 + 0x60]
	0x033B43B8 BL 0x1C16D08
	0x033B43BC MOV X1, X21
	0x033B43C0 MOV X2, X31
	0x033B43C4 BL 0x33BFB40
	0x033B43C8 MOV X19, X0
	0x033B43CC ADRP X0, 0xD47000
	0x033B43D0 LDR X0, [X0 + 0x578]
	0x033B43D4 BL 0x1C16D08
	0x033B43D8 BL 0x1C16F10
	0x033B43DC MOV X1, X19
	0x033B43E0 MOV X2, X31
	0x033B43E4 MOV X20, X0
	0x033B43E8 BL 0x3314A68
	0x033B43EC ADRP X0, 0xD78000
	0x033B43F0 LDR X0, [X0 + 0x58]
	0x033B43F4 BL 0x1C16D08
	0x033B43F8 MOV X1, X0
	0x033B43FC MOV X0, X20
	0x033B4400 BL 0x1C16DEC
	0x033B4404 STR X30, [X31 - 0x30]!
	0x033B4408 STP X22, X21, [X31 + 0x10]
	0x033B440C STP X20, X19, [X31 + 0x20]
	0x033B4410 ADRP X22, 0x1029000
	0x033B4414 LDRB W8, [X22 + 0x1C0]
	0x033B4418 MOV X21, X2
	0x033B441C MOV X19, X1
	0x033B4420 MOV X20, X0
	0x033B4424 TBNZ X8, 0x0, 0x33B4448
	0x033B4428 ADRP X0, 0xD3F000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x102A000
	005 Move W8, [X20+433]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xD72000
	012 Move X0, [X0+2056]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+433], W8
	016 Move X8, [X19+104]
	017 Compare X8, 0
	018 JumpIfEqual {24}
	019 Move X0, [X19+104]
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X30, [X31+32]
	023 Return X0
	024 Move X8, 0xD72000
	025 Move X8, [X8+2056]
	026 Move X0, [X8]
	027 Call 0x1C17F10
	028 Move W2, 1
	029 Move X1, X19
	030 Move X3, X31
	031 Move X20, X0
	032 Call StackTrace..ctor, X0, X1, X2
	033 Compare X20, 0
	034 JumpIfEqual {84}
	035 Move X8, [X20]
	036 Move X0, X20
	037 Move X9, [X8+376]
	038 Move X1, [X8+384]
	039 NotImplemented "Instruction BLR not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X8, [X20]
	042 Move X0, X20
	043 Move W1, W31
	044 Move X9, [X8+392]
	045 Move X2, [X8+400]
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Compare X0, 0
	048 JumpIfEqual {84}
	049 Move X8, [X0]
	050 Move X9, [X8+424]
	051 Move X1, [X8+432]
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move X1, X31
	054 Move X2, X31
	055 Move X20, X0
	056 Call MethodBase.op_Inequality, X0, X1
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {19}
	061 Compare X20, 0
	062 JumpIfEqual {84}
	063 Move X8, [X20]
	064 Move X0, X20
	065 Move X9, [X8+440]
	066 Move X1, [X8+448]
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Compare X0, 0
	069 JumpIfEqual {84}
	070 Move X8, [X0]
	071 Move X9, [X8+760]
	072 Move X1, [X8+768]
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Compare X0, 0
	075 JumpIfEqual {84}
	076 Move X8, [X0]
	077 Move X9, [X8+600]
	078 Move X1, [X8+608]
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Compare X0, 0
	081 JumpIfEqual {84}
	082 Move X8, [X0+16]
	083 Move [X19+104], X8
	084 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x033B442C LDR X0, [X0 + 0x988]
	0x033B4430 BL 0x1C16CF4
	0x033B4434 ADRP X0, 0xD48000

ISIL:
	001 Move W1, 1
	002 Move W2, 1

Method: System.String ToString(System.Boolean needFileLineInfo, System.Boolean needMessage)

Disassembly:
	0x033B4438 LDR X0, [X0 + 0x790]
	0x033B443C BL 0x1C16CF4
	0x033B4440 MOVZ W8, 0x1
	0x033B4444 STRB W8, [X22 + 0x1C0]
	0x033B4448 STR X31, [X19]
	0x033B444C STR X31, [X21]
	0x033B4450 CBZ X20, 0x33B44D4
	0x033B4454 ADRP X8, 0xD48000
	0x033B4458 LDR X8, [X8 + 0x790]
	0x033B445C MOVZ W2, 0x4
	0x033B4460 MOV X0, X20
	0x033B4464 MOV X3, X31
	0x033B4468 LDR X1, [X8]
	0x033B446C BL 0x322CD84
	0x033B4470 ADDS W31, W0, 0x1
	0x033B4474 B.EQ 0x33B44D0
	0x033B4478 MOV W22, W0
	0x033B447C MOV X0, X20
	0x033B4480 MOV W1, W31
	0x033B4484 MOV W2, W22
	0x033B4488 MOV X3, X31
	0x033B448C BL 0x3228DE4
	0x033B4490 STR X0, [X21]
	0x033B4494 CBZ X0, 0x33B44E4
	0x033B4498 LDR W8, [X0 + 0x10]
	0x033B449C LDR W9, [X20 + 0x10]
	0x033B44A0 ORN W8, W31, W8, 0x0
	0x033B44A4 ADDS W2, W9, W8
	0x033B44A8 B.EQ 0x33B44C4
	0x033B44AC ADD W1, W22, 0x1
	0x033B44B0 MOV X0, X20
	0x033B44B4 MOV X3, X31
	0x033B44B8 BL 0x3228DE4
	0x033B44BC MOV X20, X0
	0x033B44C0 B 0x33B44D0
	0x033B44C4 ADRP X8, 0xD3F000
	0x033B44C8 LDR X8, [X8 + 0x988]
	0x033B44CC LDR X20, [X8]
	0x033B44D0 STR X20, [X19]
	0x033B44D4 LDP X20, X19, [X31 + 0x20]
	0x033B44D8 LDP X22, X21, [X31 + 0x10]
	0x033B44DC LDR X30, [X31], #0x30
	0x033B44E0 RET
	0x033B44E4 BL 0x1C16F20
	0x033B44E8 ANDS W31, W0, 0x1
	0x033B44EC MOVZ W8, 0x20
	0x033B44F0 MOVZ W9, 0x10
	0x033B44F4 MOVZ W10, 0x6
	0x033B44F8 CSEL W8, W9, W8, NE
	0x033B44FC MOVZ W9, 0x4A
	0x033B4500 ANDS W31, W2, 0x1
	0x033B4504 MOVZ W11, 0x4
	0x033B4508 CSEL W9, W9, W10, NE
	0x033B450C MOVZ W10, 0x8
	0x033B4510 CSEL W10, W10, W11, NE
	0x033B4514 ANDS W31, W1, 0x1
	0x033B4518 CSEL W9, W9, W10, NE
	0x033B451C ORR W0, W8, W9, 0x0
	0x033B4520 RET
	0x033B4524 STP X30, X25, [X31 - 0x40]!
	0x033B4528 STP X24, X23, [X31 + 0x10]
	0x033B452C STP X22, X21, [X31 + 0x20]
	0x033B4530 STP X20, X19, [X31 + 0x30]
	0x033B4534 ADRP X24, 0x1029000
	0x033B4538 LDRB W8, [X24 + 0x1C1]
	0x033B453C MOV X19, X5
	0x033B4540 MOV X23, X4
	0x033B4544 MOV X20, X3
	0x033B4548 MOV W22, W2
	0x033B454C MOV X21, X1
	0x033B4550 MOV W25, W0
	0x033B4554 TBNZ X8, 0x0, 0x33B4578
	0x033B4558 ADRP X0, 0xD41000
	0x033B455C LDR X0, [X0 + 0xC48]
	0x033B4560 BL 0x1C16CF4
	0x033B4564 ADRP X0, 0xD71000
	0x033B4568 LDR X0, [X0 + 0xEF0]
	0x033B456C BL 0x1C16CF4
	0x033B4570 MOVZ W8, 0x1
	0x033B4574 STRB W8, [X24 + 0x1C1]
	0x033B4578 STRB W31, [X20]
	0x033B457C STRB W31, [X23]
	0x033B4580 LDR X24, [X21]
	0x033B4584 CBZ X24, 0x33B4628
	0x033B4588 TBNZ X25, 0x0, 0x33B4594
	0x033B458C MOVZ W8, 0x1
	0x033B4590 B 0x33B45D4
	0x033B4594 ADRP X8, 0xD41000
	0x033B4598 LDR X8, [X8 + 0xC48]
	0x033B459C LDR X0, [X8]
	0x033B45A0 LDR W8, [X0 + 0xE0]
	0x033B45A4 CBNZ W8, 0x33B45AC
	0x033B45A8 BL 0x1C16DFC
	0x033B45AC MOV X0, X31
	0x033B45B0 BL 0x3338524
	0x033B45B4 MOV X1, X0
	0x033B45B8 MOV X0, X24
	0x033B45BC MOV X2, X31
	0x033B45C0 BL 0x322B660
	0x033B45C4 MOVZ W8, 0x1
	0x033B45C8 STR X0, [X21]
	0x033B45CC STRB W8, [X23]
	0x033B45D0 MOVZ W8, 0x2
	0x033B45D4 STR W8, [X19]
	0x033B45D8 TBZ X22, 0x0, 0x33B462C
	0x033B45DC LDR X0, [X21]
	0x033B45E0 CBZ X0, 0x33B4640
	0x033B45E4 ADRP X8, 0xD71000
	0x033B45E8 LDR X8, [X8 + 0xEF0]
	0x033B45EC MOVZ W2, 0x4
	0x033B45F0 MOV X3, X31
	0x033B45F4 LDR X1, [X8]
	0x033B45F8 BL 0x3226590
	0x033B45FC TBZ X0, 0x0, 0x33B462C
	0x033B4600 LDR X0, [X21]
	0x033B4604 CBZ X0, 0x33B4640
	0x033B4608 LDR W8, [X0 + 0x10]
	0x033B460C MOV W1, W31
	0x033B4610 MOV X3, X31
	0x033B4614 SUB W2, W8, 0x1
	0x033B4618 BL 0x3228DE4
	0x033B461C MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x102A000
	008 Move W8, [X22+434]
	009 Move W21, W2
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0xD40000
	017 Move X0, [X0+2760]
	018 Call 0x1C17CF4
	019 Move X0, 0xD72000
	020 Move X0, [X0+1576]
	021 Call 0x1C17CF4
	022 Move X0, 0xD44000
	023 Move X0, [X0+2344]
	024 Call 0x1C17CF4
	025 Move X0, 0xD6E000
	026 Move X0, [X0+600]
	027 Call 0x1C17CF4
	028 Move X0, 0xD78000
	029 Move X0, [X0+4088]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X22+434], W8
	033 Move TEMP, X21
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {55}
	037 Move X8, [X20]
	038 Move X0, X20
	039 Move X9, [X8+392]
	040 Move X1, [X8+400]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Compare X0, 0
	043 JumpIfEqual {55}
	044 Move W8, [X0+16]
	045 Move X22, X0
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X0, X20
	048 Call Exception.GetClassName, X0
	049 Move X8, 0xD44000
	050 Move X8, [X8+2344]
	051 Move X2, X22
	052 Move X3, X31
	053 Move X1, [X8]
	054 Call String.Concat, X0, X1, X2
	055 Move X0, X20
	056 Call Exception.GetClassName, X0
	057 Move X8, [X20+40]
	058 Move X23, X0
	059 Compare X8, 0
	060 JumpIfEqual {109}
	061 Move X8, 0xD40000
	062 Move X8, [X8+2760]
	063 Move W1, 6
	064 Move X0, [X8]
	065 Call 0x1C17D6C
	066 Compare X0, 0
	067 JumpIfEqual {138}
	068 Move W8, [X0+24]
	069 Move X22, X0
	070 Compare W8, 0
	071 JumpIfEqual {137}
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move [X22+32], X23
	074 Move X8, 0xD72000
	075 Move X8, [X8+1576]
	076 Move X8, [X8]
	077 Move [X22+40], X8
	078 Move X0, [X20+40]
	079 Compare X0, 0
	080 JumpIfEqual {138}
	081 And W1, W19, 1
	082 And W2, W21, 1
	083 Call Exception.ToString, X0, X1, X2
	084 Move W8, [X22+24]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move [X22+48], X0
	087 Move X0, X31
	088 Call Environment.get_NewLine
	089 Move W8, [X22+24]
	090 NotImplemented "Instruction CMP not yet implemented."
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move [X22+56], X0
	093 Move X8, 0xD6E000
	094 Move X8, [X8+600]
	095 Move X9, 0xD78000
	096 Move X1, X31
	097 Move X8, [X8]
	098 Move X9, [X9+4088]
	099 Move [X22+64], X8
	100 Move X0, [X9]
	101 Call Environment.GetResourceString, X0
	102 Move W8, [X22+24]
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move [X22+72], X0
	105 Move X0, X22
	106 Move X1, X31
	107 Call String.Concat, X0
	108 Move X23, X0
	109 And W1, W19, 1
	110 Move X0, X20
	111 Call Exception.GetStackTrace, X0, X1
	112 Compare X0, 0
	113 JumpIfEqual {129}
	114 Move X19, X0
	115 Move X0, X31
	116 Call Environment.get_NewLine
	117 Move X2, X19
	118 Move X20, [X31+32]
	119 Move X19, [X31+40]
	120 Move X22, [X31+16]
	121 Move X21, [X31+24]
	122 Move X1, X0
	123 Move X0, X23
	124 Move X3, X31
	125 Move X30, [X31+48]
	126 Move X23, [X31+56]
	127 Call String.Concat, X0, X1, X2
	128 Return X0
	129 Move X20, [X31+32]
	130 Move X19, [X31+40]
	131 Move X22, [X31+16]
	132 Move X21, [X31+24]
	133 Move X0, X23
	134 Move X30, [X31+48]
	135 Move X23, [X31+56]
	136 Return X0
	137 Call 0x1C17F28
	138 Call 0x1C17F20

Method: System.Void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x033B4620 STR X0, [X21]
	0x033B4624 STRB W8, [X20]
	0x033B4628 STR W31, [X19]
	0x033B462C LDP X20, X19, [X31 + 0x30]
	0x033B4630 LDP X22, X21, [X31 + 0x20]
	0x033B4634 LDP X24, X23, [X31 + 0x10]
	0x033B4638 LDP X30, X25, [X31], #0x40
	0x033B463C RET
	0x033B4640 BL 0x1C16F20
	0x033B4644 STR X30, [X31 - 0x40]!
	0x033B4648 STP X24, X23, [X31 + 0x10]
	0x033B464C STP X22, X21, [X31 + 0x20]
	0x033B4650 STP X20, X19, [X31 + 0x30]
	0x033B4654 ADRP X24, 0x1029000
	0x033B4658 ADRP X23, 0xD68000
	0x033B465C LDRB W8, [X24 + 0x1C2]
	0x033B4660 LDR X23, [X23 + 0x4E8]
	0x033B4664 MOV X19, X3
	0x033B4668 MOV X20, X2
	0x033B466C MOV X21, X1
	0x033B4670 MOV W22, W0
	0x033B4674 TBNZ X8, 0x0, 0x33B468C
	0x033B4678 ADRP X0, 0xD68000
	0x033B467C LDR X0, [X0 + 0x4E8]
	0x033B4680 BL 0x1C16CF4
	0x033B4684 MOVZ W8, 0x1
	0x033B4688 STRB W8, [X24 + 0x1C2]
	0x033B468C LDR X0, [X23]
	0x033B4690 STRB W31, [X31 + 0xC]
	0x033B4694 LDR W8, [X0 + 0xE0]
	0x033B4698 CBNZ W8, 0x33B46A0
	0x033B469C BL 0x1C16DFC
	0x033B46A0 ADD X3, X31, 0xC
	0x033B46A4 MOV W0, W22
	0x033B46A8 MOV X1, X21
	0x033B46AC MOV W2, W31
	0x033B46B0 MOV X4, X20
	0x033B46B4 MOV X5, X19
	0x033B46B8 BL 0x33B4524
	0x033B46BC LDP X20, X19, [X31 + 0x30]
	0x033B46C0 LDP X22, X21, [X31 + 0x20]
	0x033B46C4 LDP X24, X23, [X31 + 0x10]
	0x033B46C8 LDR X30, [X31], #0x40
	0x033B46CC RET
	0x033B46D0 STR X30, [X31 - 0x20]!
	0x033B46D4 STP X20, X19, [X31 + 0x10]
	0x033B46D8 CBZ X0, 0x33B472C
	0x033B46DC LDR X8, [X0]
	0x033B46E0 MOV X19, X1
	0x033B46E4 MOV W20, W2
	0x033B46E8 LDP X9, X1, [X8 + 0x1A8]
	0x033B46EC BLR X9
	0x033B46F0 CBZ X0, 0x33B472C
	0x033B46F4 TBZ X20, 0x0, 0x33B4700
	0x033B46F8 MOVZ W2, 0x5
	0x033B46FC B 0x33B4704
	0x033B4700 MOVZ W2, 0x4
	0x033B4704 MOV X1, X19
	0x033B4708 MOV X3, X31
	0x033B470C BL 0x3226FBC
	0x033B4710 TBZ X0, 0x0, 0x33B471C
	0x033B4714 MOVZ W0, 0x1
	0x033B4718 B 0x33B4720
	0x033B471C MOV W0, W31
	0x033B4720 LDP X20, X19, [X31 + 0x10]
	0x033B4724 LDR X30, [X31], #0x20
	0x033B4728 RET
	0x033B472C BL 0x1C16F20
	0x033B4730 STR X30, [X31 - 0x50]!
	0x033B4734 STP X26, X25, [X31 + 0x10]
	0x033B4738 STP X24, X23, [X31 + 0x20]
	0x033B473C STP X22, X21, [X31 + 0x30]
	0x033B4740 STP X20, X19, [X31 + 0x40]
	0x033B4744 ADRP X26, 0x1029000
	0x033B4748 LDRB W8, [X26 + 0x1C3]
	0x033B474C MOV W24, W6
	0x033B4750 MOV X23, X5
	0x033B4754 MOV W20, W4
	0x033B4758 MOV W21, W3
	0x033B475C MOV W25, W2
	0x033B4760 MOV W22, W1
	0x033B4764 MOV X19, X0
	0x033B4768 TBNZ X8, 0x0, 0x33B478C
	0x033B476C ADRP X0, 0xD70000
	0x033B4770 LDR X0, [X0 + 0x278]
	0x033B4774 BL 0x1C16CF4
	0x033B4778 ADRP X0, 0xD68000
	0x033B477C LDR X0, [X0 + 0x4E8]
	0x033B4780 BL 0x1C16CF4
	0x033B4784 MOVZ W8, 0x1
	0x033B4788 STRB W8, [X26 + 0x1C3]
	0x033B478C TBZ X25, 0x0, 0x33B4798
	0x033B4790 TBNZ X22, 0x4, 0x33B479C
	0x033B4794 B 0x33B47D4
	0x033B4798 TBZ X22, 0x5, 0x33B47D4
	0x033B479C CBZ X19, 0x33B4918
	0x033B47A0 LDR X8, [X19]
	0x033B47A4 MOV X0, X19
	0x033B47A8 LDP X9, X1, [X8 + 0x1B8]
	0x033B47AC BLR X9
	0x033B47B0 LDR X8, [X19]
	0x033B47B4 MOV X25, X0
	0x033B47B8 MOV X0, X19
	0x033B47BC LDP X9, X1, [X8 + 0x1C8]
	0x033B47C0 BLR X9
	0x033B47C4 CMP X25, X0
	0x033B47C8 CSET W25, NE
	0x033B47CC ANDS W31, W25, W22, 0x1
	0x033B47D0 B.EQ 0x33B47F0
	0x033B47D4 MOV W0, W31
	0x033B47D8 LDP X20, X19, [X31 + 0x40]
	0x033B47DC LDP X22, X21, [X31 + 0x30]
	0x033B47E0 LDP X24, X23, [X31 + 0x20]
	0x033B47E4 LDP X26, X25, [X31 + 0x10]
	0x033B47E8 LDR X30, [X31], #0x50
	0x033B47EC RET
	0x033B47F0 LDR X8, [X19]
	0x033B47F4 MOV X0, X19
	0x033B47F8 LDP X9, X1, [X8 + 0x198]
	0x033B47FC BLR X9
	0x033B4800 CMP W0, 0x20
	0x033B4804 B.EQ 0x33B4820
	0x033B4808 LDR X8, [X19]
	0x033B480C MOV X0, X19
	0x033B4810 LDP X9, X1, [X8 + 0x198]
	0x033B4814 BLR X9
	0x033B4818 CMP W0, 0x80
	0x033B481C B.NE 0x33B48A4
	0x033B4820 TBZ X24, 0x0, 0x33B4850
	0x033B4824 ADRP X8, 0xD68000
	0x033B4828 LDR X8, [X8 + 0x4E8]
	0x033B482C LDR X0, [X8]
	0x033B4830 LDR W8, [X0 + 0xE0]
	0x033B4834 CBNZ W8, 0x33B483C
	0x033B4838 BL 0x1C16DFC
	0x033B483C AND W2, W22, 0x1
	0x033B4840 MOV X0, X19
	0x033B4844 MOV X1, X23
	0x033B4848 BL 0x33B46D0
	0x033B484C TBZ X0, 0x0, 0x33B47D4
	0x033B4850 TBZ X22, 0x2, 0x33B4908
	0x033B4854 TBZ X22, 0x5, 0x33B4908
	0x033B4858 UBFM W8, W22, 0x1, 0x1F
	0x033B485C BIC W8, W21, W8, 0x0
	0x033B4860 AND W8, W8, W25, 0x0
	0x033B4864 CBZ W8, 0x33B4908
	0x033B4868 TBNZ X20, 0x0, 0x33B4908
	0x033B486C ADRP X8, 0xD70000
	0x033B4870 LDR X8, [X8 + 0x278]
	0x033B4874 LDR X9, [X19]
	0x033B4878 LDR X8, [X8]
	0x033B487C LDRB W11, [X9 + 0x130]
	0x033B4880 LDRB W10, [X8 + 0x130]
	0x033B4884 CMP W11, W10
	0x033B4888 B.CS 0x33B48BC
	0x033B488C MOV X0, X31
	0x033B4890 MOV X1, X31
	0x033B4894 MOV X2, X31
	0x033B4898 BL 0x32C2354
	0x033B489C TBNZ X0, 0x0, 0x33B47D4
	0x033B48A0 B 0x33B4918
	0x033B48A4 TBZ X20, 0x0, 0x33B4910
	0x033B48A8 MOV W0, W31
	0x033B48AC TBZ X22, 0x3, 0x33B47D8
	0x033B48B0 BIC W8, W25, W22, 0x6
	0x033B48B4 CBZ W8, 0x33B4820
	0x033B48B8 B 0x33B47D8
	0x033B48BC LDR X9, [X9 + 0xC8]
	0x033B48C0 MOV X1, X31
	0x033B48C4 MOV X2, X31
	0x033B48C8 ADD X9, X9, X10, 0x3, LSL
	0x033B48CC LDUR X9, [X9 - 0x8]
	0x033B48D0 CMP X9, X8
	0x033B48D4 CSEL X19, X19, X31, EQ
	0x033B48D8 MOV X0, X19
	0x033B48DC BL 0x32C2354
	0x033B48E0 TBNZ X0, 0x0, 0x33B47D4
	0x033B48E4 CBZ X19, 0x33B4918
	0x033B48E8 MOV X0, X19
	0x033B48EC MOV X1, X31
	0x033B48F0 BL 0x32CE434
	0x033B48F4 TBNZ X0, 0x0, 0x33B4908
	0x033B48F8 MOV X0, X19
	0x033B48FC MOV X1, X31
	0x033B4900 BL 0x32CE350
	0x033B4904 TBZ X0, 0x0, 0x33B47D4
	0x033B4908 MOVZ W0, 0x1
	0x033B490C B 0x33B47D8
	0x033B4910 TBZ X22, 0x2, 0x33B47D4
	0x033B4914 B 0x33B4820
	0x033B4918 BL 0x1C16F20
	0x033B491C STP X30, X25, [X31 - 0x40]!
	0x033B4920 STP X24, X23, [X31 + 0x10]
	0x033B4924 STP X22, X21, [X31 + 0x20]
	0x033B4928 STP X20, X19, [X31 + 0x30]
	0x033B492C ADRP X24, 0x1029000
	0x033B4930 LDRB W8, [X24 + 0x1C4]
	0x033B4934 MOV X19, X4
	0x033B4938 MOV W23, W3
	0x033B493C MOV X21, X2
	0x033B4940 MOV W22, W1
	0x033B4944 MOV X20, X0
	0x033B4948 TBNZ X8, 0x0, 0x33B4960
	0x033B494C ADRP X0, 0xD68000
	0x033B4950 LDR X0, [X0 + 0x4E8]
	0x033B4954 BL 0x1C16CF4
	0x033B4958 MOVZ W8, 0x1
	0x033B495C STRB W8, [X24 + 0x1C4]
	0x033B4960 CBZ X20, 0x33B4A30
	0x033B4964 ADRP X25, 0xD68000
	0x033B4968 LDR X25, [X25 + 0x4E8]
	0x033B496C MOV X0, X20
	0x033B4970 MOV X1, X31
	0x033B4974 BL 0x33970FC
	0x033B4978 TBZ X0, 0x0, 0x33B4984
	0x033B497C MOVZ W24, 0x1
	0x033B4980 B 0x33B4994
	0x033B4984 MOV X0, X20
	0x033B4988 MOV X1, X31
	0x033B498C BL 0x3397148
	0x033B4990 MOV W24, W0
	0x033B4994 MOV X0, X20
	0x033B4998 MOV X1, X31
	0x033B499C BL 0x33970D4
	0x033B49A0 LDR X8, [X25]
	0x033B49A4 MOV W25, W0
	0x033B49A8 LDR W9, [X8 + 0xE0]
	0x033B49AC CBNZ W9, 0x33B49B8
	0x033B49B0 MOV X0, X8
	0x033B49B4 BL 0x1C16DFC
	0x033B49B8 AND W2, W24, 0x1
	0x033B49BC AND W3, W25, 0x1
	0x033B49C0 AND W6, W23, 0x1
	0x033B49C4 MOV X0, X20
	0x033B49C8 MOV W1, W22
	0x033B49CC MOV W4, W31
	0x033B49D0 MOV X5, X21
	0x033B49D4 BL 0x33B4730
	0x033B49D8 MOV W8, W0
	0x033B49DC MOV W0, W31
	0x033B49E0 TBZ X8, 0x0, 0x33B4A1C
	0x033B49E4 CBZ X19, 0x33B4A18
	0x033B49E8 LDR X8, [X20]
	0x033B49EC MOV X0, X20
	0x033B49F0 LDR X9, [X8 + 0x2C8]
	0x033B49F4 LDR X1, [X8 + 0x2D0]
	0x033B49F8 BLR X9
	0x033B49FC MOV X1, X0
	0x033B4A00 MOV X0, X19
	0x033B4A04 MOV X2, X31
	0x033B4A08 BL 0x3226EF8
	0x033B4A0C TBZ X0, 0x0, 0x33B4A18
	0x033B4A10 MOV W0, W31
	0x033B4A14 B 0x33B4A1C
	0x033B4A18 MOVZ W0, 0x1
	0x033B4A1C LDP X20, X19, [X31 + 0x30]
	0x033B4A20 LDP X22, X21, [X31 + 0x20]
	0x033B4A24 LDP X24, X23, [X31 + 0x10]
	0x033B4A28 LDP X30, X25, [X31], #0x40
	0x033B4A2C RET
	0x033B4A30 BL 0x1C16F20
	0x033B4A34 STP X30, X23, [X31 - 0x30]!
	0x033B4A38 STP X22, X21, [X31 + 0x10]
	0x033B4A3C STP X20, X19, [X31 + 0x20]
	0x033B4A40 ADRP X23, 0x1029000
	0x033B4A44 LDRB W8, [X23 + 0x1C5]
	0x033B4A48 MOV X19, X3
	0x033B4A4C MOV W20, W2
	0x033B4A50 MOV W21, W1
	0x033B4A54 MOV X22, X0
	0x033B4A58 TBNZ X8, 0x0, 0x33B4A70
	0x033B4A5C ADRP X0, 0xD68000
	0x033B4A60 LDR X0, [X0 + 0x4E8]
	0x033B4A64 BL 0x1C16CF4
	0x033B4A68 MOVZ W8, 0x1
	0x033B4A6C STRB W8, [X23 + 0x1C5]
	0x033B4A70 CBZ X22, 0x33B4AB8
	0x033B4A74 ADRP X23, 0xD68000
	0x033B4A78 LDR X23, [X23 + 0x4E8]
	0x033B4A7C MOV X0, X22
	0x033B4A80 MOV X1, X31
	0x033B4A84 BL 0x32DA814
	0x033B4A88 LDR X0, [X23]
	0x033B4A8C LDR W8, [X0 + 0xE0]
	0x033B4A90 CBNZ W8, 0x33B4A98
	0x033B4A94 BL 0x1C16DFC
	0x033B4A98 MOV X0, X22
	0x033B4A9C MOV W2, W21
	0x033B4AA0 MOV W3, W20
	0x033B4AA4 MOV X4, X19
	0x033B4AA8 LDP X20, X19, [X31 + 0x20]
	0x033B4AAC LDP X22, X21, [X31 + 0x10]
	0x033B4AB0 LDP X30, X23, [X31], #0x30
	0x033B4AB4 B 0x33B4ABC
	0x033B4AB8 BL 0x1C16F20
	0x033B4ABC STP X30, X23, [X31 - 0x30]!
	0x033B4AC0 STP X22, X21, [X31 + 0x10]
	0x033B4AC4 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X19, 0x102A000
	015 Move W8, [X19+435]
	016 Move X20, X3
	017 Move X24, X2
	018 Move X21, X1
	019 Move X22, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {83}
	024 Move X0, 0xD78000
	025 Move X0, [X0+4000]
	026 Call 0x1C17CF4
	027 Move X0, 0xD70000
	028 Move X0, [X0+3896]
	029 Call 0x1C17CF4
	030 Move X0, 0xD67000
	031 Move X0, [X0+3456]
	032 Call 0x1C17CF4
	033 Move X0, 0xD40000
	034 Move X0, [X0+1880]
	035 Call 0x1C17CF4
	036 Move X0, 0xD71000
	037 Move X0, [X0+3776]
	038 Call 0x1C17CF4
	039 Move X0, 0xD68000
	040 Move X0, [X0+2912]
	041 Call 0x1C17CF4
	042 Move X0, 0xD40000
	043 Move X0, [X0+1728]
	044 Call 0x1C17CF4
	045 Move X0, 0xD78000
	046 Move X0, [X0+4008]
	047 Call 0x1C17CF4
	048 Move X0, 0xD78000
	049 Move X0, [X0+4016]
	050 Call 0x1C17CF4
	051 Move X0, 0xD78000
	052 Move X0, [X0+4024]
	053 Call 0x1C17CF4
	054 Move X0, 0xD78000
	055 Move X0, [X0+4032]
	056 Call 0x1C17CF4
	057 Move X0, 0xD78000
	058 Move X0, [X0+4040]
	059 Call 0x1C17CF4
	060 Move X0, 0xD73000
	061 Move X0, [X0+392]
	062 Call 0x1C17CF4
	063 Move X0, 0xD4B000
	064 Move X0, [X0+1688]
	065 Call 0x1C17CF4
	066 Move X0, 0xD78000
	067 Move X0, [X0+4048]
	068 Call 0x1C17CF4
	069 Move X0, 0xD4C000
	070 Move X0, [X0+1616]
	071 Call 0x1C17CF4
	072 Move X0, 0xD6C000
	073 Move X0, [X0+296]
	074 Call 0x1C17CF4
	075 Move X0, 0xD78000
	076 Move X0, [X0+4056]
	077 Call 0x1C17CF4
	078 Move X0, 0xD79000
	079 Move X0, [X0]
	080 Call 0x1C17CF4
	081 Move W8, 1
	082 Move [X19+435], W8
	083 Compare X21, 0
	084 JumpIfEqual {309}
	085 Move X23, [X22+64]
	086 Compare X23, 0
	087 JumpIfNotEqual {96}
	088 Move X8, [X22+56]
	089 Compare X8, 0
	090 JumpIfEqual {96}
	091 Move W1, 1
	092 Move X0, X22
	093 Move X2, X31
	094 Call Environment.GetStackTrace, X0, X1
	095 Move X23, X0
	096 Move [X31+8], X24
	097 Move [X31+16], X20
	098 Move X27, 0xD68000
	099 Move X24, 0xD40000
	100 Move X8, [X22+104]
	101 Move X27, [X27+2912]
	102 Move X24, [X24+1728]
	103 Compare X8, 0
	104 JumpIfNotEqual {111}
	105 Move X8, [X22]
	106 Move X0, X22
	107 Move X9, [X8+456]
	108 Move X1, [X8+464]
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Move [X22+104], X0
	111 Move X26, 0xD73000
	112 Move X20, 0xD4C000
	113 Move X19, 0xD70000
	114 Move X29, 0xD6C000
	115 Move X28, 0xD78000
	116 Move X26, [X26+392]
	117 Move X20, [X20+1616]
	118 Move X19, [X19+3896]
	119 Move X29, [X29+296]
	120 Move X28, [X28+4000]
	121 Move X0, X22
	122 Call Exception.GetClassName, X0
	123 Move X8, [X24]
	124 Move X25, [X27]
	125 Move X24, X0
	126 Move W9, [X8+224]
	127 Compare W9, 0
	128 JumpIfNotEqual {131}
	129 Move X0, X8
	130 Call 0x1C17DFC
	131 Move X0, X25
	132 Move X1, X31
	133 Call Type.GetTypeFromHandle, X0
	134 Move X1, [X26]
	135 Move X3, X0
	136 Move X0, X21
	137 Move X2, X24
	138 Move X4, X31
	139 Call SerializationInfo.AddValue, X0, X1, X2, X3
	140 Move X0, [X27]
	141 Move X24, [X22+24]
	142 Move X1, X31
	143 Call Type.GetTypeFromHandle, X0
	144 Move X1, [X20]
	145 Move X3, X0
	146 Move X0, X21
	147 Move X2, X24
	148 Move X4, X31
	149 Call SerializationInfo.AddValue, X0, X1, X2, X3
	150 Move X0, [X19]
	151 Move X24, [X22+32]
	152 Move X1, X31
	153 Call Type.GetTypeFromHandle, X0
	154 Move X1, [X29]
	155 Move X3, X0
	156 Move X0, X21
	157 Move X2, X24
	158 Move X4, X31
	159 Call SerializationInfo.AddValue, X0, X1, X2, X3
	160 Move X0, [X28]
	161 Move X24, [X22+40]
	162 Move X1, X31
	163 Call Type.GetTypeFromHandle, X0
	164 Move X8, 0xD78000
	165 Move X8, [X8+4040]
	166 Move X3, X0
	167 Move X0, X21
	168 Move X2, X24
	169 Move X1, [X8]
	170 Move X4, X31
	171 Call SerializationInfo.AddValue, X0, X1, X2, X3
	172 Move X0, [X27]
	173 Move X24, [X22+48]
	174 Move X1, X31
	175 Call Type.GetTypeFromHandle, X0
	176 Move X8, 0xD78000
	177 Move X8, [X8+4032]
	178 Move X3, X0
	179 Move X0, X21
	180 Move X2, X24
	181 Move X1, [X8]
	182 Move X4, X31
	183 Call SerializationInfo.AddValue, X0, X1, X2, X3
	184 Move X0, [X27]
	185 Move X1, X31
	186 Call Type.GetTypeFromHandle, X0
	187 Move X8, 0xD78000
	188 Move X8, [X8+4056]
	189 Move X3, X0
	190 Move X0, X21
	191 Move X2, X23
	192 Move X1, [X8]
	193 Move X4, X31
	194 Call SerializationInfo.AddValue, X0, X1, X2, X3
	195 Move X0, [X27]
	196 Move X23, [X22+72]
	197 Move X1, X31
	198 Call Type.GetTypeFromHandle, X0
	199 Move X8, 0xD78000
	200 Move X8, [X8+4008]
	201 Move X3, X0
	202 Move X0, X21
	203 Move X2, X23
	204 Move X1, [X8]
	205 Move X4, X31
	206 Call SerializationInfo.AddValue, X0, X1, X2, X3
	207 Move X9, 0xD40000
	208 Move W8, [X22+80]
	209 Move X9, [X9+1880]
	210 Add X1, X31, 28
	211 Move [X31+28], W8
	212 Move X0, [X9]
	213 Call 0x1C17E04
	214 Move X8, 0xD67000
	215 Move X8, [X8+3456]
	216 Move X23, X0
	217 Move X1, X31
	218 Move X8, [X8]
	219 Move X0, X8
	220 Call Type.GetTypeFromHandle, X0
	221 Move X8, 0xD78000
	222 Move X8, [X8+4024]
	223 Move X3, X0
	224 Move X0, X21
	225 Move X2, X23
	226 Move X1, [X8]
	227 Move X4, X31
	228 Call SerializationInfo.AddValue, X0, X1, X2, X3
	229 Move X8, 0xD79000
	230 Move X8, [X8]
	231 Move X0, X21
	232 Move X2, X31
	233 Move X3, X31
	234 Move X1, [X8]
	235 Call SerializationInfo.AddValue, X0, X1, X2
	236 Move X8, 0xD78000
	237 Move W2, [X22+96]
	238 Move X8, [X8+4048]
	239 Move X0, X21
	240 Move X3, X31
	241 Move X1, [X8]
	242 Call SerializationInfo.AddValue, X0, X1, X2
	243 Move X0, [X27]
	244 Move X23, [X22+104]
	245 Move X1, X31
	246 Call Type.GetTypeFromHandle, X0
	247 Move X8, 0xD4B000
	248 Move X8, [X8+1688]
	249 Move X3, X0
	250 Move X0, X21
	251 Move X2, X23
	252 Move X1, [X8]
	253 Move X4, X31
	254 Call SerializationInfo.AddValue, X0, X1, X2, X3
	255 Move X0, [X22+112]
	256 Compare X0, 0
	257 JumpIfEqual {295}
	258 Move X1, X31
	259 Call SafeSerializationManager.get_IsActive, X0
	260 Move TEMP, X0
	261 And TEMP, TEMP, 1
	262 Compare TEMP, 1
	263 JumpIfNotEqual {295}
	264 Move X8, 0xD40000
	265 Move X8, [X8+1728]
	266 Move X23, [X22+112]
	267 Move X0, [X8]
	268 Move X8, 0xD71000
	269 Move X8, [X8+3776]
	270 Move W9, [X0+224]
	271 Move X24, [X8]
	272 Compare W9, 0
	273 JumpIfNotEqual {275}
	274 Call 0x1C17DFC
	275 Move X0, X24
	276 Move X1, X31
	277 Call Type.GetTypeFromHandle, X0
	278 Move X8, 0xD78000
	279 Move X8, [X8+4016]
	280 Move X3, X0
	281 Move X0, X21
	282 Move X2, X23
	283 Move X1, [X8]
	284 Move X4, X31
	285 Call SerializationInfo.AddValue, X0, X1, X2, X3
	286 Move X0, [X22+112]
	287 Compare X0, 0
	288 JumpIfEqual {327}
	289 Move X3, [X31+8]
	290 Move X4, [X31+16]
	291 Move X1, X22
	292 Move X2, X21
	293 Move X5, X31
	294 Call SafeSerializationManager.CompleteSerialization, X0, X1, X2, X3
	295 Move X20, [X31+112]
	296 Move X19, [X31+120]
	297 Move X22, [X31+96]
	298 Move X21, [X31+104]
	299 Move X24, [X31+80]
	300 Move X23, [X31+88]
	301 Move X26, [X31+64]
	302 Move X25, [X31+72]
	303 Move X28, [X31+48]
	304 Move X27, [X31+56]
	305 Move X29, [X31+32]
	306 Move X30, [X31+40]
	307 Add X31, X31, 128
	308 Return 
	309 Move X0, 0xD45000
	310 Move X0, [X0+1320]
	311 Call 0x1C17D08
	312 Call 0x1C17F10
	313 Move X19, X0
	314 Move X0, 0xD6A000
	315 Move X0, [X0+728]
	316 Call 0x1C17D08
	317 Move X1, X0
	318 Move X0, X19
	319 Move X2, X31
	320 Call ArgumentNullException..ctor, X0, X1
	321 Move X0, 0xD79000
	322 Move X0, [X0+8]
	323 Call 0x1C17D08
	324 Move X1, X0
	325 Move X0, X19
	326 Call 0x1C17DEC
	327 Call 0x1C17F20

Method: System.Void OnDeserialized(System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x033B4AC8 ADRP X23, 0x1029000
	0x033B4ACC LDRB W8, [X23 + 0x1C7]
	0x033B4AD0 MOV X19, X4
	0x033B4AD4 MOV W20, W3
	0x033B4AD8 MOV W21, W2
	0x033B4ADC MOV X22, X0
	0x033B4AE0 TBNZ X8, 0x0, 0x33B4B04
	0x033B4AE4 ADRP X0, 0xD77000
	0x033B4AE8 LDR X0, [X0 + 0xDA8]
	0x033B4AEC BL 0x1C16CF4
	0x033B4AF0 ADRP X0, 0xD3F000
	0x033B4AF4 LDR X0, [X0 + 0x6C0]
	0x033B4AF8 BL 0x1C16CF4
	0x033B4AFC MOVZ W8, 0x1
	0x033B4B00 STRB W8, [X23 + 0x1C7]
	0x033B4B04 ANDS W31, W20, 0x3
	0x033B4B08 B.EQ 0x33B4BB8
	0x033B4B0C CBZ X19, 0x33B4CF4
	0x033B4B10 CBZ X22, 0x33B4D10
	0x033B4B14 LDR X8, [X22]
	0x033B4B18 MOV X0, X22
	0x033B4B1C LDR X9, [X8 + 0x398]
	0x033B4B20 LDR X1, [X8 + 0x3A0]
	0x033B4B24 BLR X9
	0x033B4B28 CBZ X0, 0x33B4D10
	0x033B4B2C LDR X10, [X19 + 0x18]
	0x033B4B30 LDR X9, [X0 + 0x18]
	0x033B4B34 MOV X20, X0
	0x033B4B38 AND X8, X10, 0x0
	0x033B4B3C CMP W10, W9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x102A000
	005 Move W8, [X20+436]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xD78000
	012 Move X0, [X0+3992]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+436], W8
	016 Move X0, [X19+112]
	017 Move [X19+56], X31
	018 Compare X0, 0
	019 JumpIfEqual {27}
	020 Move X1, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X2, X31
	024 Move X30, [X31+32]
	025 Call SafeSerializationManager.CompleteDeserialization, X0, X1
	026 Return 
	027 Move X8, 0xD78000
	028 Move X8, [X8+3992]
	029 Move X0, [X8]
	030 Call 0x1C17F10
	031 Move X1, X31
	032 Move X20, X0
	033 Call SafeSerializationManager..ctor, X0
	034 Move [X19+112], X20
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Return 

Method: System.String StripFileInfo(System.String stackTrace, System.Boolean isRemoteStackTrace)

Disassembly:
	0x033B4310 BL 0x1C16D6C
	0x033B4314 MOV X21, X0

ISIL:
	001 Move X0, X1
	002 Return X0

Method: System.Void RestoreExceptionDispatchInfo(System.Runtime.ExceptionServices.ExceptionDispatchInfo exceptionDispatchInfo)

Disassembly:
	0x033B4B40 B.NE 0x33B4BFC
	0x033B4B44 MOVZ W11, 0x100
	0x033B4B48 MOVK W11, 0x10000
	0x033B4B4C AND W11, W21, W11, 0x0
	0x033B4B50 CMP W11, 0x10000
	0x033B4B54 B.NE 0x33B4CF4
	0x033B4B58 CMP W10, 0x1
	0x033B4B5C B.LT 0x33B4CF4
	0x033B4B60 CBZ X8, 0x33B4BB4
	0x033B4B64 MOV X21, X31
	0x033B4B68 AND X9, X9, 0x0
	0x033B4B6C ADD X22, X19, 0x20
	0x033B4B70 ADD X23, X20, 0x20
	0x033B4B74 LDR X0, [X22, X21, LSL #3]
	0x033B4B78 CBZ X0, 0x33B4B98
	0x033B4B7C CMP X21, W8, UXTW
	0x033B4B80 B.CS 0x33B4BB4
	0x033B4B84 LDR X1, [X23, X21, LSL #3]
	0x033B4B88 MOV X2, X31
	0x033B4B8C BL 0x32D1BF8
	0x033B4B90 TBZ X0, 0x0, 0x33B4CFC
	0x033B4B94 LDR W9, [X20 + 0x18]
	0x033B4B98 ADD X21, X21, 0x1
	0x033B4B9C CMP X21, W9, SXTW
	0x033B4BA0 B.GE 0x33B4CF4
	0x033B4BA4 LDR W8, [X19 + 0x18]
	0x033B4BA8 CMP X21, X8
	0x033B4BAC MOV X8, X9
	0x033B4BB0 B.CC 0x33B4B74
	0x033B4BB4 BL 0x1C16F28
	0x033B4BB8 TBZ X20, 0x1, 0x33B4BD8
	0x033B4BBC CBZ X22, 0x33B4D10
	0x033B4BC0 LDR X8, [X22]
	0x033B4BC4 MOV X0, X22
	0x033B4BC8 LDR X9, [X8 + 0x278]
	0x033B4BCC LDR X1, [X8 + 0x280]
	0x033B4BD0 BLR X9
	0x033B4BD4 TBZ X0, 0x1, 0x33B4CFC
	0x033B4BD8 TBZ X20, 0x0, 0x33B4B0C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x102A000
	007 Move W8, [X21+437]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD72000
	015 Move X0, [X0+2048]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+437], W8
	019 Compare X20, 0
	020 JumpIfEqual {51}
	021 Move X20, [X20+24]
	022 Compare X20, 0
	023 JumpIfEqual {42}
	024 Move X22, 0xD72000
	025 Move X22, [X22+2048]
	026 Move X0, X20
	027 Move X21, [X22]
	028 Move X1, X21
	029 Call 0x1C17E00
	030 Compare X0, 0
	031 JumpIfEqual {39}
	032 Move [X19+120], X0
	033 Move X21, [X22]
	034 Move X0, X20
	035 Move X1, X21
	036 Call 0x1C17E00
	037 Compare X0, 0
	038 JumpIfNotEqual {43}
	039 Move X0, X20
	040 Move X1, X21
	041 Call 0x1C181E0
	042 Move [X19+120], X31
	043 Move [X19+56], X31
	044 Move [X19+64], X31
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X30, [X31+48]
	050 Return 
	051 Call 0x1C17F20

Method: System.Int32 get_HResult()

Disassembly:
	0x033B4BDC CBZ X22, 0x33B4D10
	0x033B4BE0 LDR X8, [X22]

ISIL:
	001 Move W0, [X0+96]
	002 Return X0

Method: System.Void set_HResult(System.Int32 value)

Disassembly:
	0x033B4BE4 MOV X0, X22
	0x033B4BE8 LDR X9, [X8 + 0x278]

ISIL:
	001 Move [X0+96], W1
	002 Return 

Method: System.Type GetType()

Disassembly:
	0x033B42AC B.NE 0x33B4300
	0x033B42B0 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move X1, X31
	002 Call "il2cpp_vm_object_is_inst", X0
	003 Return X0

Method: System.String GetMessageFromNativeResources(System.Exception/ExceptionMessageKind kind)

Disassembly:
	0x033B4BEC LDR X1, [X8 + 0x280]
	0x033B4BF0 BLR X9
	0x033B4BF4 TBNZ X0, 0x0, 0x33B4B0C
	0x033B4BF8 B 0x33B4CFC
	0x033B4BFC MOVZ W11, 0x3300
	0x033B4C00 ANDS W31, W21, W11, 0x0
	0x033B4C04 B.EQ 0x33B4CFC
	0x033B4C08 CMP W10, W9
	0x033B4C0C B.LE 0x33B4C2C
	0x033B4C10 LDR X8, [X22]
	0x033B4C14 MOV X0, X22
	0x033B4C18 LDR X9, [X8 + 0x278]
	0x033B4C1C LDR X1, [X8 + 0x280]
	0x033B4C20 BLR X9
	0x033B4C24 TBZ X0, 0x1, 0x33B4C54
	0x033B4C28 B 0x33B4CF4
	0x033B4C2C TBZ X21, 0x12, 0x33B4C54
	0x033B4C30 CMP W10, W9
	0x033B4C34 B.CS 0x33B4BB4
	0x033B4C38 UBFM X8, X8, 0x20, 0x1F
	0x033B4C3C ADD X8, X20, X8, 0x1D, ASR
	0x033B4C40 LDR X0, [X8 + 0x20]
	0x033B4C44 CBZ X0, 0x33B4D10
	0x033B4C48 MOV X1, X31
	0x033B4C4C BL 0x32CF45C
	0x033B4C50 TBNZ X0, 0x0, 0x33B4CF4
	0x033B4C54 LDR X8, [X20 + 0x18]
	0x033B4C58 CBZ X8, 0x33B4CFC
	0x033B4C5C LDR W10, [X19 + 0x18]
	0x033B4C60 SUB W9, W8, 0x1
	0x033B4C64 CMP W9, W10
	0x033B4C68 B.GT 0x33B4CFC
	0x033B4C6C CBZ W8, 0x33B4BB4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x102A000
	005 Move W8, [X20+438]
	006 Move W19, W0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {25}
	011 Move X0, 0xD78000
	012 Move X0, [X0+2400]
	013 Call 0x1C17CF4
	014 Move X0, 0xD79000
	015 Move X0, [X0+16]
	016 Call 0x1C17CF4
	017 Move X0, 0xD79000
	018 Move X0, [X0+24]
	019 Call 0x1C17CF4
	020 Move X0, 0xD40000
	021 Move X0, [X0+2440]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+438], W8
	025 Subtract W8, W19, 1
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X9, 0xB41000
	028 Add X9, X9, 2880
	029 Move X8, [X9]
	030 Move X8, 0xD40000
	031 Move X8, [X8+2440]
	032 Move X0, [X8]
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return X0

Method: System.Exception FixRemotingException()

Disassembly:
	0x033B4C70 ADD X8, X20, W9, 0x3, SXTW
	0x033B4C74 LDR X19, [X8 + 0x20]
	0x033B4C78 CBZ X19, 0x33B4D10
	0x033B4C7C LDR X8, [X19]
	0x033B4C80 MOV X0, X19
	0x033B4C84 LDP X9, X1, [X8 + 0x1D8]
	0x033B4C88 BLR X9
	0x033B4C8C CBZ X0, 0x33B4D10
	0x033B4C90 MOV X1, X31
	0x033B4C94 BL 0x3396BF8
	0x033B4C98 TBZ X0, 0x0, 0x33B4CFC
	0x033B4C9C ADRP X8, 0xD3F000
	0x033B4CA0 LDR X8, [X8 + 0x6C0]
	0x033B4CA4 LDR X0, [X8]
	0x033B4CA8 ADRP X8, 0xD77000
	0x033B4CAC LDR X8, [X8 + 0xDA8]
	0x033B4CB0 LDR W9, [X0 + 0xE0]
	0x033B4CB4 LDR X20, [X8]
	0x033B4CB8 CBNZ W9, 0x33B4CC0
	0x033B4CBC BL 0x1C16DFC
	0x033B4CC0 MOV X0, X20
	0x033B4CC4 MOV X1, X31
	0x033B4CC8 BL 0x338C698
	0x033B4CCC LDR X8, [X19]
	0x033B4CD0 MOV X1, X0
	0x033B4CD4 MOV X0, X19
	0x033B4CD8 MOV W2, W31
	0x033B4CDC LDR X9, [X8 + 0x208]
	0x033B4CE0 LDR X3, [X8 + 0x210]
	0x033B4CE4 BLR X9
	0x033B4CE8 MOV W8, W0
	0x033B4CEC MOV W0, W31
	0x033B4CF0 TBZ X8, 0x0, 0x33B4D00
	0x033B4CF4 MOVZ W0, 0x1
	0x033B4CF8 B 0x33B4D00
	0x033B4CFC MOV W0, W31
	0x033B4D00 LDP X20, X19, [X31 + 0x20]
	0x033B4D04 LDP X22, X21, [X31 + 0x10]
	0x033B4D08 LDP X30, X23, [X31], #0x30
	0x033B4D0C RET
	0x033B4D10 BL 0x1C16F20
	0x033B4D14 STP X30, X23, [X31 - 0x30]!
	0x033B4D18 STP X22, X21, [X31 + 0x10]
	0x033B4D1C STP X20, X19, [X31 + 0x20]
	0x033B4D20 ADRP X23, 0x1029000
	0x033B4D24 LDRB W8, [X23 + 0x1C6]
	0x033B4D28 MOV X19, X3
	0x033B4D2C MOV W20, W2
	0x033B4D30 MOV W21, W1
	0x033B4D34 MOV X22, X0
	0x033B4D38 TBNZ X8, 0x0, 0x33B4D50
	0x033B4D3C ADRP X0, 0xD68000
	0x033B4D40 LDR X0, [X0 + 0x4E8]
	0x033B4D44 BL 0x1C16CF4
	0x033B4D48 MOVZ W8, 0x1
	0x033B4D4C STRB W8, [X23 + 0x1C6]
	0x033B4D50 CBZ X22, 0x33B4D98
	0x033B4D54 ADRP X23, 0xD68000

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x102A000
	009 Move X20, 0xD79000
	010 Move X21, 0xD79000
	011 Move X23, 0xD40000
	012 Move W8, [X22+439]
	013 Move X20, [X20+32]
	014 Move X21, [X21+40]
	015 Move X23, [X23+1880]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {32}
	021 Move X0, 0xD40000
	022 Move X0, [X0+1880]
	023 Call 0x1C17CF4
	024 Move X0, 0xD79000
	025 Move X0, [X0+32]
	026 Call 0x1C17CF4
	027 Move X0, 0xD79000
	028 Move X0, [X0+40]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X22+439], W8
	032 Move W8, [X19+80]
	033 Move X0, X31
	034 NotImplemented "Instruction CMP not yet implemented."
	035 NotImplemented "Instruction CSEL not yet implemented."
	036 Move X20, [X8]
	037 Call Environment.get_NewLine
	038 Move X8, [X19]
	039 Move X21, X0
	040 Move X0, X19
	041 Move X9, [X8+440]
	042 Move X1, [X8+448]
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move X22, X0
	045 Move W8, [X19+80]
	046 Move X0, [X23]
	047 Add X1, X31, 12
	048 Move [X31+12], W8
	049 Call 0x1C17E04
	050 Move X3, X0
	051 Move X0, X20
	052 Move X1, X21
	053 Move X2, X22
	054 Move X4, X31
	055 Call String.Format, X0, X1, X2, X3
	056 Move W8, [X19+80]
	057 Move [X19+64], X31
	058 Move [X19+72], X0
	059 Move X0, X19
	060 Move X22, [X31+32]
	061 Move X21, [X31+40]
	062 Add W8, W8, 1
	063 Move [X19+80], W8
	064 Move X20, [X31+48]
	065 Move X19, [X31+56]
	066 Move X30, [X31+16]
	067 Move X23, [X31+24]
	068 Add X31, X31, 64
	069 Return X0

Method: System.Void ReportUnhandledException(System.Exception exception)

Disassembly:
	0x033B4D58 LDR X23, [X23 + 0x4E8]

ISIL:
	001 Call 0x1C89258
	002 Return 

Method: System.Void .cctor()

Disassembly:
	0x033B4D5C MOV X0, X22
	0x033B4D60 MOV X1, X31
	0x033B4D64 BL 0x32DC740
	0x033B4D68 LDR X0, [X23]
	0x033B4D6C LDR W8, [X0 + 0xE0]
	0x033B4D70 CBNZ W8, 0x33B4D78
	0x033B4D74 BL 0x1C16DFC
	0x033B4D78 MOV X0, X22
	0x033B4D7C MOV W2, W21
	0x033B4D80 MOV W3, W20
	0x033B4D84 MOV X4, X19
	0x033B4D88 LDP X20, X19, [X31 + 0x20]
	0x033B4D8C LDP X22, X21, [X31 + 0x10]
	0x033B4D90 LDP X30, X23, [X31], #0x30
	0x033B4D94 B 0x33B4ABC
	0x033B4D98 BL 0x1C16F20
	0x033B4D9C STP X30, X19, [X31 - 0x10]!
	0x033B4DA0 MOV X1, X31
	0x033B4DA4 BL 0x32D28FC
	0x033B4DA8 ADRP X0, 0xD3F000
	0x033B4DAC LDR X0, [X0 + 0xB40]
	0x033B4DB0 BL 0x1C16D08
	0x033B4DB4 BL 0x1C16F10
	0x033B4DB8 MOV X1, X31
	0x033B4DBC MOV X19, X0
	0x033B4DC0 BL 0x3380310
	0x033B4DC4 ADRP X0, 0xD78000
	0x033B4DC8 LDR X0, [X0 + 0x68]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x102A000
	006 Move X21, 0xD46000
	007 Move X20, 0xD40000
	008 Move W8, [X19+440]
	009 Move X21, [X21+3264]
	010 Move X20, [X20+2000]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xD40000
	016 Move X0, [X0+2000]
	017 Call 0x1C17CF4
	018 Move X0, 0xD46000
	019 Move X0, [X0+3264]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+440], W8
	023 Move X0, [X21]
	024 Call 0x1C17F10
	025 Move X1, X31
	026 Move X19, X0
	027 Call Object..ctor, X0
	028 Move X8, [X20]
	029 Move X8, [X8+184]
	030 Move [X8], X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 

