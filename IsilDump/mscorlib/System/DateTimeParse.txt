Type: System.DateTimeParse

Method: System.DateTime ParseExact(System.ReadOnlySpan`1<System.Char> s, System.ReadOnlySpan`1<System.Char> format, System.Globalization.DateTimeFormatInfo dtfi, System.Globalization.DateTimeStyles style)

Disassembly:
	0x03362E50 STRB W8, [X22 + 0xE69]
	0x03362E54 LDR X0, [X21]
	0x03362E58 LDR W8, [X0 + 0xE0]
	0x03362E5C CBNZ W8, 0x3362E64
	0x03362E60 BL 0x1C16DFC
	0x03362E64 AND X22, X20, 0x3FFFFFFF
	0x03362E68 SUB X8, X31, X22
	0x03362E6C CMP X8, X19
	0x03362E70 B.GT 0x3362EBC
	0x03362E74 MOVZ X8, 0x3FFF
	0x03362E78 MOVK X8, 0xF4370000
	0x03362E7C MOVK X8, 0x2875
	0x03362E80 MOVK X8, 0x2BCA0000
	0x03362E84 SUB X8, X8, X22
	0x03362E88 CMP X8, X19
	0x03362E8C B.LT 0x3362EBC
	0x03362E90 LDR X0, [X21]
	0x03362E94 LDR W8, [X0 + 0xE0]
	0x03362E98 CBNZ W8, 0x3362EA0
	0x03362E9C BL 0x1C16DFC
	0x03362EA0 AND X8, X20, 0xFFFFFFFFFFFFFFFF
	0x03362EA4 ADD X9, X22, X19
	0x03362EA8 LDP X20, X19, [X31 + 0x20]
	0x03362EAC LDP X22, X21, [X31 + 0x10]
	0x03362EB0 ORR X0, X9, X8, 0x0
	0x03362EB4 LDR X30, [X31], #0x30
	0x03362EB8 RET
	0x03362EBC ADRP X0, 0xD99000
	0x03362EC0 LDR X0, [X0 + 0x760]
	0x03362EC4 BL 0x1C16D08
	0x03362EC8 BL 0x1C16F10
	0x03362ECC MOV X19, X0
	0x03362ED0 ADRP X0, 0xDC3000
	0x03362ED4 LDR X0, [X0 + 0x718]
	0x03362ED8 BL 0x1C16D08
	0x03362EDC MOV X20, X0
	0x03362EE0 ADRP X0, 0xDC8000
	0x03362EE4 LDR X0, [X0 + 0x978]
	0x03362EE8 BL 0x1C16D08
	0x03362EEC MOV X2, X0
	0x03362EF0 MOV X0, X19
	0x03362EF4 MOV X1, X20
	0x03362EF8 MOV X3, X31
	0x03362EFC BL 0x3311888
	0x03362F00 ADRP X0, 0xDC8000
	0x03362F04 LDR X0, [X0 + 0xA30]
	0x03362F08 BL 0x1C16D08
	0x03362F0C MOV X1, X0
	0x03362F10 MOV X0, X19
	0x03362F14 BL 0x1C16DEC
	0x03362F18 STR X30, [X31 - 0x30]!
	0x03362F1C STP X22, X21, [X31 + 0x10]
	0x03362F20 STP X20, X19, [X31 + 0x20]
	0x03362F24 ADRP X22, 0x107A000
	0x03362F28 ADRP X21, 0xD92000
	0x03362F2C LDRB W8, [X22 + 0xE6A]
	0x03362F30 LDR X21, [X21 + 0x9F0]
	0x03362F34 MOV X20, X1
	0x03362F38 MOV X19, X0
	0x03362F3C TBNZ X8, 0x0, 0x3362F54
	0x03362F40 ADRP X0, 0xD92000
	0x03362F44 LDR X0, [X0 + 0x9F0]
	0x03362F48 BL 0x1C16CF4
	0x03362F4C MOVZ W8, 0x1
	0x03362F50 STRB W8, [X22 + 0xE6A]
	0x03362F54 LDR X0, [X21]

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+128], X30
	003 Move [X31+144], X26
	004 Move [X31+152], X25
	005 Move [X31+160], X24
	006 Move [X31+168], X23
	007 Move [X31+176], X22
	008 Move [X31+184], X21
	009 Move [X31+192], X20
	010 Move [X31+200], X19
	011 Move X26, 0x107B000
	012 Move X25, 0xDC7000
	013 Move W8, [X26+3780]
	014 Move X25, [X25+1416]
	015 Move W19, W5
	016 Move X20, X4
	017 Move X21, X3
	018 Move X22, X2
	019 Move X23, X1
	020 Move X24, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0xDC7000
	026 Move X0, [X0+1416]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X26+3780], W8
	030 NotImplemented "Instruction MOVI not yet implemented."
	031 Add X0, X31, 0
	032 Move X1, X24
	033 Move X2, X23
	034 Move X3, X31
	035 Move [X31+96], V0
	036 Move [X31+104], V0
	037 Move [X31+64], V0
	038 Move [X31+72], V0
	039 Move [X31+32], V0
	040 Move [X31+40], V0
	041 Move [X31], V0
	042 Move [X31+8], V0
	043 Call DateTimeResult.Init, X0, X1
	044 Move X0, [X25]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Add X6, X31, 0
	050 Move X0, X24
	051 Move X1, X23
	052 Move X2, X22
	053 Move X3, X21
	054 Move X4, X20
	055 Move W5, W19
	056 Call DateTimeParse.TryParseExact, X0, X1, X2, X3, X4
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {73}
	061 Move X0, [X31+56]
	062 Move X20, [X31+192]
	063 Move X19, [X31+200]
	064 Move X22, [X31+176]
	065 Move X21, [X31+184]
	066 Move X24, [X31+160]
	067 Move X23, [X31+168]
	068 Move X26, [X31+144]
	069 Move X25, [X31+152]
	070 Move X30, [X31+128]
	071 Add X31, X31, 208
	072 Return X0
	073 Move X0, 0xDC7000
	074 Move X0, [X0+1416]
	075 Call 0x1C17D08
	076 Call 0x19913D0
	077 Add X0, X31, 0
	078 Call DateTimeParse.GetDateTimeParseException, X0
	079 Move X19, X0
	080 Move X0, 0xDC9000
	081 Move X0, [X0+2592]
	082 Call 0x1C17D08
	083 Move X1, X0
	084 Move X0, X19
	085 Call 0x1C17DEC

Method: System.Boolean TryParseExact(System.ReadOnlySpan`1<System.Char> s, System.ReadOnlySpan`1<System.Char> format, System.Globalization.DateTimeFormatInfo dtfi, System.Globalization.DateTimeStyles style, out System.DateTime result)

Disassembly:
	0x03363A84 ADRP X27, 0x1079000
	0x03363A88 ADRP X29, 0xD91000
	0x03363A8C LDRB W8, [X27 + 0xE73]
	0x03363A90 LDR X29, [X29 + 0x9F0]
	0x03363A94 MOV X19, X7
	0x03363A98 MOV W20, W6
	0x03363A9C MOV W21, W5
	0x03363AA0 MOV W22, W4
	0x03363AA4 MOV W23, W3
	0x03363AA8 MOV W24, W2
	0x03363AAC MOV W25, W1
	0x03363AB0 MOV W26, W0
	0x03363AB4 TBNZ X8, 0x0, 0x3363ACC
	0x03363AB8 ADRP X0, 0xD91000
	0x03363ABC LDR X0, [X0 + 0x9F0]
	0x03363AC0 BL 0x1C16CF4
	0x03363AC4 MOVZ W8, 0x1
	0x03363AC8 STRB W8, [X27 + 0xE73]
	0x03363ACC LDR X8, [X29]
	0x03363AD0 LDR W9, [X8 + 0xE0]
	0x03363AD4 CBNZ W9, 0x3363AE4
	0x03363AD8 MOV X0, X8
	0x03363ADC BL 0x1C16DFC
	0x03363AE0 LDR X8, [X29]
	0x03363AE4 LDR X8, [X8 + 0xB8]
	0x03363AE8 SUB W28, W25, 0x1
	0x03363AEC MOV W0, W31
	0x03363AF0 CMP W28, 0xB
	0x03363AF4 LDR X8, [X8 + 0x10]
	0x03363AF8 STR X8, [X19]
	0x03363AFC B.HI 0x3363C30
	0x03363B00 SUB W8, W26, 0x1
	0x03363B04 MOVZ W9, 0x270E
	0x03363B08 CMP W8, W9
	0x03363B0C B.HI 0x3363C30
	0x03363B10 LDR X0, [X29]
	0x03363B14 LDR W8, [X0 + 0xE0]
	0x03363B18 CBNZ W8, 0x3363B20
	0x03363B1C BL 0x1C16DFC
	0x03363B20 MOV W0, W26
	0x03363B24 BL 0x33608A8
	0x03363B28 LDR X8, [X29]
	0x03363B2C MOV W27, W0
	0x03363B30 LDR W9, [X8 + 0xE0]
	0x03363B34 CBNZ W9, 0x3363B44
	0x03363B38 MOV X0, X8
	0x03363B3C BL 0x1C16DFC
	0x03363B40 LDR X8, [X29]
	0x03363B44 LDR X9, [X8 + 0xB8]
	0x03363B48 ANDS W31, W27, 0x1
	0x03363B4C ADD X10, X9, 0x8
	0x03363B50 CSEL X9, X10, X9, NE
	0x03363B54 CMP W24, 0x1
	0x03363B58 B.LT 0x3363C2C
	0x03363B5C LDR X9, [X9]
	0x03363B60 CBZ X9, 0x3363C54
	0x03363B64 LDR W10, [X9 + 0x18]
	0x03363B68 CMP W10, W25
	0x03363B6C B.LS 0x3363C50
	0x03363B70 CMP W28, W10
	0x03363B74 B.CS 0x3363C50
	0x03363B78 CMP W20, 0x3E7
	0x03363B7C MOV W0, W31
	0x03363B80 B.HI 0x3363C30
	0x03363B84 CMP W21, 0x3B
	0x03363B88 B.HI 0x3363C30
	0x03363B8C CMP W22, 0x3B
	0x03363B90 B.HI 0x3363C30
	0x03363B94 CMP W23, 0x17
	0x03363B98 B.HI 0x3363C30
	0x03363B9C ADD X9, X9, 0x20
	0x03363BA0 LDR W10, [X9, W25, UXTW]
	0x03363BA4 LDR W9, [X9, W28, UXTW]
	0x03363BA8 SUB W9, W10, W9

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+128], X30
	003 Move [X31+136], X27
	004 Move [X31+144], X26
	005 Move [X31+152], X25
	006 Move [X31+160], X24
	007 Move [X31+168], X23
	008 Move [X31+176], X22
	009 Move [X31+184], X21
	010 Move [X31+192], X20
	011 Move [X31+200], X19
	012 Move X27, 0x107A000
	013 Move X26, 0xD92000
	014 Move W8, [X27+3781]
	015 Move X26, [X26+2544]
	016 Move X19, X6
	017 Move W20, W5
	018 Move X21, X4
	019 Move X22, X3
	020 Move X23, X2
	021 Move X24, X1
	022 Move X25, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {35}
	027 Move X0, 0xDC6000
	028 Move X0, [X0+1416]
	029 Call 0x1C17CF4
	030 Move X0, 0xD92000
	031 Move X0, [X0+2544]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X27+3781], W8
	035 Move X0, [X26]
	036 NotImplemented "Instruction MOVI not yet implemented."
	037 Move [X31+96], V0
	038 Move [X31+104], V0
	039 Move [X31+64], V0
	040 Move [X31+72], V0
	041 Move [X31+32], V0
	042 Move [X31+40], V0
	043 Move [X31], V0
	044 Move [X31+8], V0
	045 Move X27, 0xDC6000
	046 Move W8, [X0+224]
	047 Move X27, [X27+1416]
	048 Compare W8, 0
	049 JumpIfNotEqual {53}
	050 Call 0x1C17DFC
	051 Move X0, [X26]
	052 NotImplemented "Instruction MOVI not yet implemented."
	053 Move X8, [X0+184]
	054 Add X0, X31, 0
	055 Move X1, X25
	056 Move X2, X24
	057 Move X8, [X8+16]
	058 Move X3, X31
	059 Move [X19], X8
	060 Move [X31+96], V0
	061 Move [X31+104], V0
	062 Move [X31+64], V0
	063 Move [X31+72], V0
	064 Move [X31+32], V0
	065 Move [X31+40], V0
	066 Move [X31], V0
	067 Move [X31+8], V0
	068 Call DateTimeResult.Init, X0, X1
	069 Move X0, [X27]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Add X6, X31, 0
	075 Move X0, X25
	076 Move X1, X24
	077 Move X2, X23
	078 Move X3, X22
	079 Move X4, X21
	080 Move W5, W20
	081 Call DateTimeParse.TryParseExact, X0, X1, X2, X3, X4
	082 Move TEMP, X0
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfNotEqual {88}
	086 Move X8, [X31+56]
	087 Move [X19], X8
	088 Move X20, [X31+192]
	089 Move X19, [X31+200]
	090 Move X22, [X31+176]
	091 Move X21, [X31+184]
	092 Move X24, [X31+160]
	093 Move X23, [X31+168]
	094 Move X26, [X31+144]
	095 Move X25, [X31+152]
	096 Move X30, [X31+128]
	097 Move X27, [X31+136]
	098 And W0, W0, 1
	099 Add X31, X31, 208
	100 Return X0

Method: System.Boolean TryParseExact(System.ReadOnlySpan`1<System.Char> s, System.ReadOnlySpan`1<System.Char> format, System.Globalization.DateTimeFormatInfo dtfi, System.Globalization.DateTimeStyles style, ref System.DateTimeResult result)

Disassembly:
	0x0336BC38 ADRP X0, 0xDBD000
	0x0336BC3C LDR X0, [X0 + 0x588]
	0x0336BC40 BL 0x1C16CF4
	0x0336BC44 ADRP X0, 0xDBD000
	0x0336BC48 LDR X0, [X0 + 0x4F0]
	0x0336BC4C BL 0x1C16CF4
	0x0336BC50 MOVZ W8, 0x1
	0x0336BC54 STRB W8, [X21 + 0xECC]
	0x0336BC58 ADRP X8, 0xFFFFFFFFFD782000
	0x0336BC5C LDR V8, [X8 + 0xF40]
	0x0336BC60 ADRP X22, 0xDBD000
	0x0336BC64 ADRP X23, 0xDBD000
	0x0336BC68 LDR X22, [X22 + 0x4F0]
	0x0336BC6C LDR X23, [X23 + 0x588]
	0x0336BC70 MOV W21, W31
	0x0336BC74 STR X31, [X19]
	0x0336BC78 MOV V9.16B, V8.16B
	0x0336BC7C LDR X0, [X22]
	0x0336BC80 LDR W8, [X0 + 0xE0]
	0x0336BC84 CBNZ W8, 0x336BC8C
	0x0336BC88 BL 0x1C16DFC
	0x0336BC8C MOV X0, X20
	0x0336BC90 MOV X1, X31
	0x0336BC94 BL 0x3374A74
	0x0336BC98 TBZ X0, 0x0, 0x336BCDC
	0x0336BC9C LDR X0, [X23]
	0x0336BCA0 LDRH W24, [X20 + 0x14]
	0x0336BCA4 LDR W8, [X0 + 0xE0]
	0x0336BCA8 CBNZ W8, 0x336BCB0
	0x0336BCAC BL 0x1C16DFC
	0x0336BCB0 SUB W8, W24, 0x30
	0x0336BCB4 CMP W8, 0xA
	0x0336BCB8 B.CS 0x336BCDC
	0x0336BCBC LDR V0, [X19]
	0x0336BCC0 SCVTF D1, W8
	0x0336BCC4 FMUL D1, D9, D1
	0x0336BCC8 FMUL D9, D9, D8
	0x0336BCCC FADD D0, D1, D0
	0x0336BCD0 ADD W21, W21, 0x1
	0x0336BCD4 STR D0, [X19]
	0x0336BCD8 B 0x336BC7C
	0x0336BCDC CMP W21, 0x0
	0x0336BCE0 LDP X20, X19, [X31 + 0x40]
	0x0336BCE4 LDP X22, X21, [X31 + 0x30]
	0x0336BCE8 LDP X24, X23, [X31 + 0x20]
	0x0336BCEC LDR X30, [X31 + 0x10]
	0x0336BCF0 CSET W0, GT
	0x0336BCF4 LDP D9, D8, [X31], #0x50
	0x0336BCF8 RET
	0x0336BCFC SUB X31, X31, 0x140
	0x0336BD00 STP X29, X30, [X31 + 0x100]
	0x0336BD04 STP X24, X23, [X31 + 0x110]
	0x0336BD08 STP X22, X21, [X31 + 0x120]
	0x0336BD0C STP X20, X19, [X31 + 0x130]
	0x0336BD10 ADRP X21, 0x1071000
	0x0336BD14 ADRP X24, 0xDBD000
	0x0336BD18 LDRB W8, [X21 + 0xECD]
	0x0336BD1C LDR X24, [X24 + 0x4F0]
	0x0336BD20 MOV X19, X1
	0x0336BD24 MOV X20, X0
	0x0336BD28 TBNZ X8, 0x0, 0x336BD4C
	0x0336BD2C ADRP X0, 0xD8A000
	0x0336BD30 LDR X0, [X0 + 0x570]
	0x0336BD34 BL 0x1C16CF4
	0x0336BD38 ADRP X0, 0xDBD000

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x1072000
	011 Move W8, [X26+3782]
	012 Move X19, X6
	013 Move W21, W5
	014 Move X20, X4
	015 Move X22, X3
	016 Move X23, X2
	017 Move X24, X1
	018 Move X25, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {34}
	023 Move X0, 0xDBE000
	024 Move X0, [X0+1416]
	025 Call 0x1C17CF4
	026 Move X0, 0xDB8000
	027 Move X0, [X0+40]
	028 Call 0x1C17CF4
	029 Move X0, 0xDC0000
	030 Move X0, [X0+3072]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X26+3782], W8
	034 Compare W24, 0
	035 JumpIfEqual {63}
	036 Compare W22, 0
	037 JumpIfEqual {70}
	038 Move X8, 0xDBE000
	039 Move X8, [X8+1416]
	040 Move X0, [X8]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X25
	046 Move X1, X24
	047 Move X2, X23
	048 Move X3, X22
	049 Move W4, W21
	050 Move X5, X20
	051 Move X6, X19
	052 Move X20, [X31+64]
	053 Move X19, [X31+72]
	054 Move X22, [X31+48]
	055 Move X21, [X31+56]
	056 Move X24, [X31+32]
	057 Move X23, [X31+40]
	058 Move X26, [X31+16]
	059 Move X25, [X31+24]
	060 Move X30, [X31+80]
	061 Call DateTimeParse.DoStrictParse, X0, X1, X2, X3, X4
	062 Return X0
	063 Move X8, 0xDC0000
	064 Move X8, [X8+3072]
	065 Move W1, 3
	066 Move X0, X19
	067 Move X3, X31
	068 Move X2, [X8]
	069 Call DateTimeResult.SetFailure, X0, X1, X2
	070 Move X0, X19
	071 Move X1, X31
	072 Call DateTimeResult.SetBadFormatSpecifierFailure, X0
	073 Move X20, [X31+64]
	074 Move X19, [X31+72]
	075 Move X22, [X31+48]
	076 Move X21, [X31+56]
	077 Move X24, [X31+32]
	078 Move X23, [X31+40]
	079 Move X26, [X31+16]
	080 Move X25, [X31+24]
	081 Move W0, W31
	082 Move X30, [X31+80]
	083 Return X0

Method: System.Boolean TryParseExactMultiple(System.ReadOnlySpan`1<System.Char> s, System.String[] formats, System.Globalization.DateTimeFormatInfo dtfi, System.Globalization.DateTimeStyles style, out System.DateTime result, out System.TimeSpan offset)

Disassembly:
	0x03366AC4 BL 0x3225708
	0x03366AC8 LDR W22, [X22 + 0x10]
	0x03366ACC MOV X23, X0
	0x03366AD0 MOV X0, X21
	0x03366AD4 MOV X1, X31
	0x03366AD8 BL 0x333ACEC
	0x03366ADC MOV X1, X22
	0x03366AE0 MOV W2, W20
	0x03366AE4 MOV X4, X19
	0x03366AE8 LDP X20, X19, [X31 + 0x20]
	0x03366AEC LDP X22, X21, [X31 + 0x10]
	0x03366AF0 MOV X3, X0
	0x03366AF4 MOV X0, X23
	0x03366AF8 LDP X30, X23, [X31], #0x30
	0x03366AFC B 0x33667B8
	0x03366B00 STR X31, [X19]
	0x03366B04 LDP X20, X19, [X31 + 0x20]
	0x03366B08 LDP X22, X21, [X31 + 0x10]
	0x03366B0C MOV W0, W31
	0x03366B10 LDP X30, X23, [X31], #0x30
	0x03366B14 RET
	0x03366B18 MOVZ W0, 0xE
	0x03366B1C RET
	0x03366B20 STR D8, [X31 - 0x30]!
	0x03366B24 STP X30, X21, [X31 + 0x10]
	0x03366B28 STP X20, X19, [X31 + 0x20]
	0x03366B2C ADRP X21, 0x1076000
	0x03366B30 ADRP X20, 0xD96000
	0x03366B34 LDRB W8, [X21 + 0xE9C]
	0x03366B38 LDR X20, [X20 + 0x9E8]
	0x03366B3C MOV X19, X0
	0x03366B40 TBNZ X8, 0x0, 0x3366B58
	0x03366B44 ADRP X0, 0xD96000
	0x03366B48 LDR X0, [X0 + 0x9E8]
	0x03366B4C BL 0x1C16CF4
	0x03366B50 MOVZ W8, 0x1
	0x03366B54 STRB W8, [X21 + 0xE9C]
	0x03366B58 LDR X0, [X20]
	0x03366B5C LDR V8, [X19]
	0x03366B60 LDR W8, [X0 + 0xE0]
	0x03366B64 CBNZ W8, 0x3366B6C
	0x03366B68 BL 0x1C16DFC
	0x03366B6C LDP X20, X19, [X31 + 0x20]
	0x03366B70 LDP X30, X21, [X31 + 0x10]
	0x03366B74 MOV V0.16B, V8.16B
	0x03366B78 MOV X0, X31
	0x03366B7C LDR V8, [X31], #0x30
	0x03366B80 B 0x331E568
	0x03366B84 STR X30, [X31 - 0x20]!
	0x03366B88 STP X20, X19, [X31 + 0x10]
	0x03366B8C ADRP X0, 0xDC2000
	0x03366B90 LDR X0, [X0 + 0x30]
	0x03366B94 BL 0x1C16D08
	0x03366B98 MOV X19, X0
	0x03366B9C ADRP X0, 0xDBF000
	0x03366BA0 LDR X0, [X0 + 0xF0]
	0x03366BA4 BL 0x1C16D08
	0x03366BA8 MOV X20, X0
	0x03366BAC ADRP X0, 0xDBF000
	0x03366BB0 LDR X0, [X0 + 0xE0]
	0x03366BB4 BL 0x1C16D08
	0x03366BB8 MOV X2, X0
	0x03366BBC MOV X0, X19
	0x03366BC0 MOV X1, X20
	0x03366BC4 MOV X3, X31
	0x03366BC8 BL 0x320A264
	0x03366BCC MOV X19, X0
	0x03366BD0 ADRP X0, 0xD95000
	0x03366BD4 LDR X0, [X0 + 0xC08]
	0x03366BD8 BL 0x1C16D08
	0x03366BDC BL 0x1C16F10
	0x03366BE0 MOV X1, X19
	0x03366BE4 MOV X2, X31
	0x03366BE8 MOV X20, X0
	0x03366BEC BL 0x337B498
	0x03366BF0 ADRP X0, 0xDC4000
	0x03366BF4 LDR X0, [X0 + 0xB50]
	0x03366BF8 BL 0x1C16D08
	0x03366BFC MOV X1, X0
	0x03366C00 MOV X0, X20
	0x03366C04 BL 0x1C16DEC
	0x03366C08 STR D8, [X31 - 0x30]!
	0x03366C0C STP X30, X21, [X31 + 0x10]
	0x03366C10 STP X20, X19, [X31 + 0x20]
	0x03366C14 ADRP X21, 0x1076000
	0x03366C18 ADRP X20, 0xD96000
	0x03366C1C LDRB W8, [X21 + 0xE9D]
	0x03366C20 LDR X20, [X20 + 0x9E8]
	0x03366C24 MOV X19, X0
	0x03366C28 TBNZ X8, 0x0, 0x3366C40
	0x03366C2C ADRP X0, 0xD96000

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+128], X30
	003 Move [X31+136], X27
	004 Move [X31+144], X26
	005 Move [X31+152], X25
	006 Move [X31+160], X24
	007 Move [X31+168], X23
	008 Move [X31+176], X22
	009 Move [X31+184], X21
	010 Move [X31+192], X20
	011 Move [X31+200], X19
	012 Move X27, 0x1077000
	013 Move X26, 0xD8F000
	014 Move W8, [X27+3783]
	015 Move X26, [X26+2544]
	016 Move X19, X6
	017 Move X20, X5
	018 Move W21, W4
	019 Move X22, X3
	020 Move X23, X2
	021 Move X24, X1
	022 Move X25, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {38}
	027 Move X0, 0xDC3000
	028 Move X0, [X0+1416]
	029 Call 0x1C17CF4
	030 Move X0, 0xD8F000
	031 Move X0, [X0+2544]
	032 Call 0x1C17CF4
	033 Move X0, 0xD90000
	034 Move X0, [X0+1392]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X27+3783], W8
	038 Move X0, [X26]
	039 NotImplemented "Instruction MOVI not yet implemented."
	040 Move [X31+96], V0
	041 Move [X31+104], V0
	042 Move [X31+64], V0
	043 Move [X31+72], V0
	044 Move [X31+32], V0
	045 Move [X31+40], V0
	046 Move [X31], V0
	047 Move [X31+8], V0
	048 Move X27, 0xD90000
	049 Move W8, [X0+224]
	050 Move X27, [X27+1392]
	051 Compare W8, 0
	052 JumpIfNotEqual {55}
	053 Call 0x1C17DFC
	054 Move X0, [X26]
	055 Move X8, [X0+184]
	056 Move X26, 0xDC3000
	057 Move X8, [X8+16]
	058 Move [X20], X8
	059 Move X0, [X27]
	060 Move W8, [X0+224]
	061 Move X26, [X26+1416]
	062 Compare W8, 0
	063 JumpIfNotEqual {66}
	064 Call 0x1C17DFC
	065 Move X0, [X27]
	066 Move X8, [X0+184]
	067 NotImplemented "Instruction MOVI not yet implemented."
	068 Add X0, X31, 0
	069 Move X1, X25
	070 Move X8, [X8]
	071 Move X2, X24
	072 Move X3, X31
	073 Move [X19], X8
	074 Move [X31+96], V0
	075 Move [X31+104], V0
	076 Move [X31+64], V0
	077 Move [X31+72], V0
	078 Move [X31+32], V0
	079 Move [X31+40], V0
	080 Move [X31], V0
	081 Move [X31+8], V0
	082 Call DateTimeResult.Init, X0, X1
	083 Move W8, [X31+36]
	084 Move X0, [X26]
	085 Or W8, W8, 2048
	086 Move [X31+36], W8
	087 Move W8, [X0+224]
	088 Compare W8, 0
	089 JumpIfNotEqual {91}
	090 Call 0x1C17DFC
	091 Add X5, X31, 0
	092 Move X0, X25
	093 Move X1, X24
	094 Move X2, X23
	095 Move X3, X22
	096 Move W4, W21
	097 Call DateTimeParse.TryParseExactMultiple, X0, X1, X2, X3, X4
	098 Move TEMP, X0
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfNotEqual {106}
	102 Move X8, [X31+56]
	103 Move [X20], X8
	104 Move X8, [X31+40]
	105 Move [X19], X8
	106 Move X20, [X31+192]
	107 Move X19, [X31+200]
	108 Move X22, [X31+176]
	109 Move X21, [X31+184]
	110 Move X24, [X31+160]
	111 Move X23, [X31+168]
	112 Move X26, [X31+144]
	113 Move X25, [X31+152]
	114 Move X30, [X31+128]
	115 Move X27, [X31+136]
	116 And W0, W0, 1
	117 Add X31, X31, 208
	118 Return X0

Method: System.Boolean TryParseExactMultiple(System.ReadOnlySpan`1<System.Char> s, System.String[] formats, System.Globalization.DateTimeFormatInfo dtfi, System.Globalization.DateTimeStyles style, out System.DateTime result)

Disassembly:
	0x03363CF8 LDR X8, [X8 + 0xB8]
	0x03363CFC STR X19, [X8]
	0x03363D00 LDR X0, [X22]
	0x03363D04 BL 0x1C16D6C
	0x03363D08 LDR X1, [X21]
	0x03363D0C MOV X2, X31
	0x03363D10 MOV X19, X0
	0x03363D14 BL 0x32C5BD8
	0x03363D18 LDR X8, [X20]
	0x03363D1C ADRP X9, 0xFFFFFFFFFD787000
	0x03363D20 LDR V0, [X9 + 0xD6]
	0x03363D24 MOVZ X9, 0x8000
	0x03363D28 LDR X8, [X8 + 0xB8]
	0x03363D2C MOVK X9, 0xF7B50000
	0x03363D30 LDP X22, X21, [X31 + 0x10]
	0x03363D34 MOVK X9, 0x7FF5
	0x03363D38 STR X19, [X8 + 0x8]
	0x03363D3C LDP X20, X19, [X31 + 0x20]
	0x03363D40 MOVK X9, 0x489F0000
	0x03363D44 STR V0, [X8 + 0x1]
	0x03363D48 STR X9, [X8 + 0x20]
	0x03363D4C LDP X30, X23, [X31], #0x30
	0x03363D50 RET
	0x03363D54 SUB X31, X31, 0x40
	0x03363D58 STP X30, X23, [X31 + 0x10]
	0x03363D5C STP X22, X21, [X31 + 0x20]
	0x03363D60 STP X20, X19, [X31 + 0x30]
	0x03363D64 ADRP X23, 0x1079000
	0x03363D68 ADRP X22, 0xD92000
	0x03363D6C LDRB W8, [X23 + 0xE76]
	0x03363D70 LDR X22, [X22 + 0xA58]
	0x03363D74 MOV X20, X2
	0x03363D78 MOV X21, X1
	0x03363D7C MOV X19, X0
	0x03363D80 TBNZ X8, 0x0, 0x3363DA4
	0x03363D84 ADRP X0, 0xD92000
	0x03363D88 LDR X0, [X0 + 0xA58]
	0x03363D8C BL 0x1C16CF4
	0x03363D90 ADRP X0, 0xD91000
	0x03363D94 LDR X0, [X0 + 0x9F0]
	0x03363D98 BL 0x1C16CF4
	0x03363D9C MOVZ W8, 0x1
	0x03363DA0 STRB W8, [X23 + 0xE76]
	0x03363DA4 LDR X0, [X22]
	0x03363DA8 STR X31, [X31 + 0x8]
	0x03363DAC ADRP X22, 0xD91000
	0x03363DB0 LDR W8, [X0 + 0xE0]
	0x03363DB4 LDR X22, [X22 + 0x9F0]
	0x03363DB8 CBNZ W8, 0x3363DC0
	0x03363DBC BL 0x1C16DFC
	0x03363DC0 MOV X0, X20
	0x03363DC4 BL 0x3363E0C
	0x03363DC8 STRH W0, [X19 + 0x8]
	0x03363DCC LDR X0, [X22]
	0x03363DD0 LDR W8, [X0 + 0xE0]
	0x03363DD4 CBNZ W8, 0x3363DDC
	0x03363DD8 BL 0x1C16DFC
	0x03363DDC ADD X0, X31, 0x8
	0x03363DE0 MOV X1, X21
	0x03363DE4 BL 0x335EEB0
	0x03363DE8 LDR X0, [X31 + 0x8]
	0x03363DEC MOV X1, X20
	0x03363DF0 BL 0x3363F64
	0x03363DF4 STR X0, [X19]
	0x03363DF8 LDP X20, X19, [X31 + 0x30]
	0x03363DFC LDP X22, X21, [X31 + 0x20]
	0x03363E00 LDP X30, X23, [X31 + 0x10]
	0x03363E04 ADD X31, X31, 0x40
	0x03363E08 RET
	0x03363E0C STP X30, X21, [X31 - 0x20]!
	0x03363E10 STP X20, X19, [X31 + 0x10]
	0x03363E14 ADRP X20, 0x1079000

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+128], X30
	003 Move [X31+144], X26
	004 Move [X31+152], X25
	005 Move [X31+160], X24
	006 Move [X31+168], X23
	007 Move [X31+176], X22
	008 Move [X31+184], X21
	009 Move [X31+192], X20
	010 Move [X31+200], X19
	011 Move X26, 0x107A000
	012 Move X25, 0xD92000
	013 Move W8, [X26+3784]
	014 Move X25, [X25+2544]
	015 Move X19, X5
	016 Move W20, W4
	017 Move X21, X3
	018 Move X22, X2
	019 Move X23, X1
	020 Move X24, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0xDC6000
	026 Move X0, [X0+1416]
	027 Call 0x1C17CF4
	028 Move X0, 0xD92000
	029 Move X0, [X0+2544]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X26+3784], W8
	033 Move X0, [X25]
	034 NotImplemented "Instruction MOVI not yet implemented."
	035 Move [X31+96], V0
	036 Move [X31+104], V0
	037 Move [X31+64], V0
	038 Move [X31+72], V0
	039 Move [X31+32], V0
	040 Move [X31+40], V0
	041 Move [X31], V0
	042 Move [X31+8], V0
	043 Move X26, 0xDC6000
	044 Move W8, [X0+224]
	045 Move X26, [X26+1416]
	046 Compare W8, 0
	047 JumpIfNotEqual {51}
	048 Call 0x1C17DFC
	049 Move X0, [X25]
	050 NotImplemented "Instruction MOVI not yet implemented."
	051 Move X8, [X0+184]
	052 Add X0, X31, 0
	053 Move X1, X24
	054 Move X2, X23
	055 Move X8, [X8+16]
	056 Move X3, X31
	057 Move [X19], X8
	058 Move [X31+96], V0
	059 Move [X31+104], V0
	060 Move [X31+64], V0
	061 Move [X31+72], V0
	062 Move [X31+32], V0
	063 Move [X31+40], V0
	064 Move [X31], V0
	065 Move [X31+8], V0
	066 Call DateTimeResult.Init, X0, X1
	067 Move X0, [X26]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Add X5, X31, 0
	073 Move X0, X24
	074 Move X1, X23
	075 Move X2, X22
	076 Move X3, X21
	077 Move W4, W20
	078 Call DateTimeParse.TryParseExactMultiple, X0, X1, X2, X3, X4
	079 Move TEMP, X0
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfNotEqual {85}
	083 Move X8, [X31+56]
	084 Move [X19], X8
	085 Move X20, [X31+192]
	086 Move X19, [X31+200]
	087 Move X22, [X31+176]
	088 Move X21, [X31+184]
	089 Move X24, [X31+160]
	090 Move X23, [X31+168]
	091 Move X26, [X31+144]
	092 Move X25, [X31+152]
	093 Move X30, [X31+128]
	094 And W0, W0, 1
	095 Add X31, X31, 208
	096 Return X0

Method: System.Boolean TryParseExactMultiple(System.ReadOnlySpan`1<System.Char> s, System.String[] formats, System.Globalization.DateTimeFormatInfo dtfi, System.Globalization.DateTimeStyles style, ref System.DateTimeResult result)

Disassembly:
	0x0336C72C LDRB W8, [X22 + 0xAFE]
	0x0336C730 CBNZ W8, 0x336C748
	0x0336C734 ADRP X0, 0xDBB000
	0x0336C738 LDR X0, [X0 + 0x930]
	0x0336C73C BL 0x1C16CF4
	0x0336C740 MOVZ W8, 0x1
	0x0336C744 STRB W8, [X22 + 0xAFE]
	0x0336C748 LDR X0, [X21]
	0x0336C74C LDR W8, [X0 + 0xE0]
	0x0336C750 CBNZ W8, 0x336C75C
	0x0336C754 BL 0x1C16DFC
	0x0336C758 LDR X0, [X21]
	0x0336C75C LDR X8, [X0 + 0xB8]
	0x0336C760 LDRB W8, [X8]
	0x0336C764 CBNZ W8, 0x336CE94
	0x0336C768 ADRP X8, 0xDBC000
	0x0336C76C LDR X8, [X8 + 0x588]
	0x0336C770 LDR X0, [X8]
	0x0336C774 LDR W8, [X0 + 0xE0]
	0x0336C778 CBNZ W8, 0x336C780
	0x0336C77C BL 0x1C16DFC
	0x0336C780 BL 0x336D3B4
	0x0336C784 STR X0, [X20 + 0x30]
	0x0336C788 ADRP X8, 0xDBC000
	0x0336C78C LDR X8, [X8 + 0x328]
	0x0336C790 LDR X0, [X8]
	0x0336C794 LDR W8, [X0 + 0xE0]
	0x0336C798 CBNZ W8, 0x336C7A0
	0x0336C79C BL 0x1C16DFC
	0x0336C7A0 MOV X0, X31
	0x0336C7A4 BL 0x3327554
	0x0336C7A8 B 0x336C84C
	0x0336C7AC STR W31, [X19]
	0x0336C7B0 B 0x336CE74
	0x0336C7B4 ADRP X21, 0xDBB000
	0x0336C7B8 LDR X21, [X21 + 0x930]
	0x0336C7BC LDR X0, [X21]
	0x0336C7C0 LDR W8, [X0 + 0xE0]
	0x0336C7C4 CBNZ W8, 0x336C7CC
	0x0336C7C8 BL 0x1C16DFC
	0x0336C7CC ADRP X22, 0x1070000
	0x0336C7D0 LDRB W8, [X22 + 0xAFE]
	0x0336C7D4 CBNZ W8, 0x336C7EC
	0x0336C7D8 ADRP X0, 0xDBB000
	0x0336C7DC LDR X0, [X0 + 0x930]
	0x0336C7E0 BL 0x1C16CF4
	0x0336C7E4 MOVZ W8, 0x1
	0x0336C7E8 STRB W8, [X22 + 0xAFE]
	0x0336C7EC LDR X0, [X21]
	0x0336C7F0 LDR W8, [X0 + 0xE0]
	0x0336C7F4 CBNZ W8, 0x336C800
	0x0336C7F8 BL 0x1C16DFC
	0x0336C7FC LDR X0, [X21]
	0x0336C800 LDR X8, [X0 + 0xB8]
	0x0336C804 LDRB W8, [X8]
	0x0336C808 CBNZ W8, 0x336CE94
	0x0336C80C ADRP X8, 0xDBC000
	0x0336C810 LDR X8, [X8 + 0x588]
	0x0336C814 LDR X0, [X8]
	0x0336C818 LDR W8, [X0 + 0xE0]
	0x0336C81C CBNZ W8, 0x336C824
	0x0336C820 BL 0x1C16DFC
	0x0336C824 BL 0x336D2CC
	0x0336C828 STR X0, [X20 + 0x30]
	0x0336C82C ADRP X8, 0xDBC000
	0x0336C830 LDR X8, [X8 + 0x328]
	0x0336C834 LDR X0, [X8]
	0x0336C838 LDR W8, [X0 + 0xE0]
	0x0336C83C CBNZ W8, 0x336C844
	0x0336C840 BL 0x1C16DFC
	0x0336C844 MOV X0, X31
	0x0336C848 BL 0x33273C0
	0x0336C84C STR X0, [X24]
	0x0336C850 LDR W8, [X20 + 0x20]
	0x0336C854 ADDS W31, W8, 0x1
	0x0336C858 B.EQ 0x336CBC8
	0x0336C85C LDR W8, [X31 + 0xC]
	0x0336C860 MOVZ W9, 0x10
	0x0336C864 STR W8, [X20 + 0x20]
	0x0336C868 STR W9, [X19]
	0x0336C86C B 0x336CE74
	0x0336C870 LDR W8, [X23 + 0x14]
	0x0336C874 ADDS W31, W8, 0x1
	0x0336C878 B.NE 0x336CBC8
	0x0336C87C LDR W8, [X31 + 0xC]
	0x0336C880 MOVZ W9, 0xB
	0x0336C884 STR W8, [X23 + 0x14]
	0x0336C888 B 0x336C868
	0x0336C88C LDRB W8, [X20 + 0x25]
	0x0336C890 TBNZ X8, 0x0, 0x336CBC8
	0x0336C894 MOVZ W8, 0xF
	0x0336C898 STR W8, [X19]
	0x0336C89C LDR W8, [X20 + 0x24]
	0x0336C8A0 STR X31, [X20 + 0x28]
	0x0336C8A4 ORR W8, W8, 0x300
	0x0336C8A8 STR W8, [X20 + 0x24]
	0x0336C8AC B 0x336CE74
	0x0336C8B0 ADRP X8, 0xD89000
	0x0336C8B4 LDR X8, [X8 + 0x170]
	0x0336C8B8 LDRH W19, [X21 + 0x14]
	0x0336C8BC LDR X0, [X8]
	0x0336C8C0 LDR W8, [X0 + 0xE0]
	0x0336C8C4 CBNZ W8, 0x336C8CC
	0x0336C8C8 BL 0x1C16DFC
	0x0336C8CC MOV W0, W19
	0x0336C8D0 MOV X1, X31
	0x0336C8D4 BL 0x331A888
	0x0336C8D8 TBZ X0, 0x0, 0x336C978
	0x0336C8DC ADRP X9, 0xD87000
	0x0336C8E0 LDR W8, [X21 + 0x10]
	0x0336C8E4 LDR X9, [X9 + 0x758]
	0x0336C8E8 ADD X1, X31, 0x0
	0x0336C8EC STR W8, [X31]
	0x0336C8F0 LDR X0, [X9]
	0x0336C8F4 BL 0x1C16E04
	0x0336C8F8 ADRP X8, 0xDBE000
	0x0336C8FC LDR X8, [X8 + 0xC48]
	0x0336C900 MOV X3, X0
	0x0336C904 MOVZ W1, 0x6
	0x0336C908 MOV X0, X20
	0x0336C90C LDR X2, [X8]
	0x0336C910 MOV X4, X31
	0x0336C914 BL 0x3376824
	0x0336C918 B 0x336CBD4
	0x0336C91C LDR W8, [X23 + 0x10]
	0x0336C920 ADDS W31, W8, 0x1
	0x0336C924 B.NE 0x336CBC8
	0x0336C928 STR W1, [X23 + 0x10]
	0x0336C92C LDR X0, [X26]
	0x0336C930 LDR X23, [X24]
	0x0336C934 LDR W8, [X0 + 0xE0]
	0x0336C938 CBNZ W8, 0x336C940
	0x0336C93C BL 0x1C16DFC
	0x0336C940 ADD X2, X31, 0x8
	0x0336C944 ADD X3, X31, 0x4
	0x0336C948 MOV X0, X21
	0x0336C94C MOV X1, X23
	0x0336C950 MOV X4, X31
	0x0336C954 BL 0x3374F8C
	0x0336C958 CMP W0, 0xF00
	0x0336C95C B.EQ 0x336CC3C
	0x0336C960 CMP W0, 0x300
	0x0336C964 B.EQ 0x336CDC8
	0x0336C968 CMP W0, 0x200
	0x0336C96C B.NE 0x336CBC8
	0x0336C970 MOVZ W8, 0xE
	0x0336C974 B 0x336CDCC
	0x0336C978 LDRH W8, [X21 + 0x14]
	0x0336C97C CMP W8, 0x2D
	0x0336C980 B.EQ 0x336C98C
	0x0336C984 CMP W8, 0x2B
	0x0336C988 B.NE 0x336CBA4
	0x0336C98C LDRB W8, [X20 + 0x25]
	0x0336C990 TBNZ X8, 0x0, 0x336CBA4

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+128], X29
	003 Move [X31+136], X30
	004 Move [X31+144], X28
	005 Move [X31+152], X27
	006 Move [X31+160], X26
	007 Move [X31+168], X25
	008 Move [X31+176], X24
	009 Move [X31+184], X23
	010 Move [X31+192], X22
	011 Move [X31+200], X21
	012 Move [X31+208], X20
	013 Move [X31+216], X19
	014 Move X25, 0x1071000
	015 Move W8, [X25+3785]
	016 Move X19, X5
	017 Move W20, W4
	018 Move X21, X3
	019 Move X22, X2
	020 Move X23, X1
	021 Move X24, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {46}
	026 Move X0, 0xDBD000
	027 Move X0, [X0+1416]
	028 Call 0x1C17CF4
	029 Move X0, 0xDB7000
	030 Move X0, [X0+40]
	031 Call 0x1C17CF4
	032 Move X0, 0xDBF000
	033 Move X0, [X0+3072]
	034 Call 0x1C17CF4
	035 Move X0, 0xDB7000
	036 Move X0, [X0+2680]
	037 Call 0x1C17CF4
	038 Move X0, 0xDBF000
	039 Move X0, [X0+3128]
	040 Call 0x1C17CF4
	041 Move X0, 0xDBF000
	042 Move X0, [X0+3136]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X25+3785], W8
	046 NotImplemented "Instruction MOVI not yet implemented."
	047 Move [X31+96], V0
	048 Move [X31+104], V0
	049 Move [X31+64], V0
	050 Move [X31+72], V0
	051 Move [X31+32], V0
	052 Move [X31+40], V0
	053 Move [X31], V0
	054 Move [X31+8], V0
	055 Compare X22, 0
	056 JumpIfEqual {135}
	057 Compare W23, 0
	058 JumpIfEqual {146}
	059 Move X8, [X22+24]
	060 Compare X8, 0
	061 JumpIfEqual {149}
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X28, X31
	064 Add X29, X22, 32
	065 Move X25, 0x106E000
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X8, [X29]
	068 Compare X8, 0
	069 JumpIfEqual {171}
	070 Move W8, [X8+16]
	071 Compare W8, 0
	072 JumpIfEqual {171}
	073 NotImplemented "Instruction MOVI not yet implemented."
	074 Add X0, X31, 0
	075 Move X1, X24
	076 Move X2, X23
	077 Move X3, X31
	078 Move [X31+96], V0
	079 Move [X31+104], V0
	080 Move [X31+64], V0
	081 Move [X31+72], V0
	082 Move [X31+32], V0
	083 Move [X31+40], V0
	084 Move [X31], V0
	085 Move [X31+8], V0
	086 Call DateTimeResult.Init, X0, X1
	087 Move W8, [X19+36]
	088 Move [X31+36], W8
	089 Move W8, [X22+24]
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move W8, [X25+1890]
	092 Move X26, [X29]
	093 Compare W8, 0
	094 JumpIfEqual {102}
	095 Compare X26, 0
	096 JumpIfEqual {109}
	097 Move X0, X26
	098 Move X1, X31
	099 Call String.GetRawStringData, X0
	100 Move W27, [X26+16]
	101 Move X26, X0
	102 Move X0, 0xDAF000
	103 Move X0, [X0+656]
	104 Call 0x1C17CF4
	105 Move W8, 1
	106 Move [X25+1890], W8
	107 Compare X26, 0
	108 JumpIfNotEqual {97}
	109 Move X27, X31
	110 Move X8, 0xDBD000
	111 Move X8, [X8+1416]
	112 Move X0, [X8]
	113 Move W8, [X0+224]
	114 Compare W8, 0
	115 JumpIfNotEqual {117}
	116 Call 0x1C17DFC
	117 Add X6, X31, 0
	118 Move X0, X24
	119 Move X1, X23
	120 Move X2, X26
	121 Move X3, X27
	122 Move X4, X21
	123 Move W5, W20
	124 Call DateTimeParse.TryParseExact, X0, X1, X2, X3, X4
	125 Move TEMP, X0
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfEqual {174}
	129 Move W8, [X22+24]
	130 Add X28, X28, 1
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X0, X19
	133 Move X1, X31
	134 Call DateTimeResult.SetBadDateTimeFailure, X0
	135 Move X8, 0xDB7000
	136 Move X9, 0xDBF000
	137 Move X8, [X8+2680]
	138 Move X9, [X9+3128]
	139 Move W1, 1
	140 Move X0, X19
	141 Move X2, [X8]
	142 Move X4, [X9]
	143 Move X3, X31
	144 Move X5, X31
	145 Call DateTimeResult.SetFailure, X0, X1, X2, X3, X4
	146 Move X8, 0xDBF000
	147 Move X8, [X8+3072]
	148 Move W1, 3
	149 Move X8, 0xDBF000
	150 Move X8, [X8+3136]
	151 Move W1, 2
	152 Move X2, [X8]
	153 Move X0, X19
	154 Move X3, X31
	155 Call DateTimeResult.SetFailure, X0, X1, X2
	156 Move W0, W31
	157 Move X20, [X31+208]
	158 Move X19, [X31+216]
	159 Move X22, [X31+192]
	160 Move X21, [X31+200]
	161 Move X24, [X31+176]
	162 Move X23, [X31+184]
	163 Move X26, [X31+160]
	164 Move X25, [X31+168]
	165 Move X28, [X31+144]
	166 Move X27, [X31+152]
	167 Move X29, [X31+128]
	168 Move X30, [X31+136]
	169 Add X31, X31, 224
	170 Return X0
	171 Move X0, X19
	172 Move X1, X31
	173 Call DateTimeResult.SetBadFormatSpecifierFailure, X0
	174 Move X8, [X31+56]
	175 Move W0, 1
	176 Move [X19+56], X8
	177 Move X8, [X31+40]
	178 Move [X19+40], X8
	179 Call 0x1C17F28

Method: System.Boolean MatchWord(ref System.__DTString str, System.String target)

Disassembly:
	0x0336C994 ADRP X8, 0xDBC000
	0x0336C998 LDR X8, [X8 + 0x588]
	0x0336C99C LDR W22, [X21 + 0x10]
	0x0336C9A0 ADD X19, X20, 0x28
	0x0336C9A4 LDR X0, [X8]
	0x0336C9A8 LDR W8, [X0 + 0xE0]
	0x0336C9AC CBNZ W8, 0x336C9B4
	0x0336C9B0 BL 0x1C16DFC
	0x0336C9B4 MOV X0, X21
	0x0336C9B8 MOV X1, X19
	0x0336C9BC BL 0x336BCFC
	0x0336C9C0 TBZ X0, 0x0, 0x336CBA0
	0x0336C9C4 LDR W8, [X20 + 0x24]
	0x0336C9C8 ORR W8, W8, 0x100
	0x0336C9CC B 0x336C8A8
	0x0336C9D0 LDR X0, [X26]
	0x0336C9D4 LDR X25, [X24]
	0x0336C9D8 LDR W8, [X0 + 0xE0]
	0x0336C9DC CBNZ W8, 0x336C9E4
	0x0336C9E0 BL 0x1C16DFC
	0x0336C9E4 ADD X2, X31, 0x8
	0x0336C9E8 ADD X3, X31, 0x4
	0x0336C9EC MOV X0, X21
	0x0336C9F0 MOV X1, X25
	0x0336C9F4 MOV X4, X31
	0x0336C9F8 BL 0x3374F8C
	0x0336C9FC CMP W0, 0x800
	0x0336CA00 B.LE 0x336CAF0
	0x0336CA04 CMP W0, 0xB00
	0x0336CA08 B.LE 0x336CB60
	0x0336CA0C CMP W0, 0xD00
	0x0336CA10 B.LE 0x336CC14
	0x0336CA14 CMP W0, 0xE00
	0x0336CA18 B.EQ 0x336CE00
	0x0336CA1C CMP W0, 0xF00
	0x0336CA20 B.NE 0x336CBC8
	0x0336CA24 ADRP X20, 0xDBC000
	0x0336CA28 LDR X20, [X20 + 0x588]
	0x0336CA2C LDR X0, [X20]
	0x0336CA30 LDR W8, [X0 + 0xE0]
	0x0336CA34 CBNZ W8, 0x336CA40
	0x0336CA38 BL 0x1C16DFC
	0x0336CA3C LDR X0, [X20]
	0x0336CA40 LDR X8, [X0 + 0xB8]
	0x0336CA44 LDR X8, [X8 + 0x8]
	0x0336CA48 CBZ X8, 0x336CECC
	0x0336CA4C LDR W9, [X8 + 0x18]
	0x0336CA50 CMP W9, W22
	0x0336CA54 B.LS 0x336CEC8
	0x0336CA58 MOV W9, W22
	0x0336CA5C SXTW X24, W9
	0x0336CA60 ADD X9, X8, X24, 0x3, LSL
	0x0336CA64 LDR X9, [X9 + 0x20]
	0x0336CA68 CBZ X9, 0x336CECC
	0x0336CA6C LDR W10, [X9 + 0x18]
	0x0336CA70 CMP W10, 0x4
	0x0336CA74 B.LS 0x336CEC8
	0x0336CA78 LDR W9, [X9 + 0x30]
	0x0336CA7C CMP W9, 0x14
	0x0336CA80 B.NE 0x336CAD0
	0x0336CA84 LDR W9, [X0 + 0xE0]
	0x0336CA88 CBNZ W9, 0x336CAA0
	0x0336CA8C BL 0x1C16DFC
	0x0336CA90 LDR X8, [X20]
	0x0336CA94 LDR X8, [X8 + 0xB8]
	0x0336CA98 LDR X8, [X8 + 0x8]
	0x0336CA9C CBZ X8, 0x336CECC
	0x0336CAA0 LDR W9, [X8 + 0x18]
	0x0336CAA4 CMP W9, W22
	0x0336CAA8 B.LS 0x336CEC8
	0x0336CAAC ADD X8, X8, X24, 0x3, LSL
	0x0336CAB0 LDR X8, [X8 + 0x20]
	0x0336CAB4 CBZ X8, 0x336CECC
	0x0336CAB8 LDR W9, [X8 + 0x18]
	0x0336CABC CMP W9, 0x3
	0x0336CAC0 B.LS 0x336CEC8
	0x0336CAC4 LDR W8, [X8 + 0x2C]
	0x0336CAC8 CMP W8, 0x15
	0x0336CACC B.GE 0x336CE4C
	0x0336CAD0 MOVZ W8, 0x4
	0x0336CAD4 B 0x336CE60
	0x0336CAD8 CMP W0, 0x200
	0x0336CADC B.EQ 0x336CB98
	0x0336CAE0 CMP W0, 0x300
	0x0336CAE4 B.NE 0x336CBC8
	0x0336CAE8 MOVZ W8, 0x4
	0x0336CAEC B 0x336CDCC
	0x0336CAF0 CMP W0, 0x400
	0x0336CAF4 B.LE 0x336CB7C
	0x0336CAF8 CMP W0, 0x600
	0x0336CAFC B.LE 0x336CC28
	0x0336CB00 CMP W0, 0x700
	0x0336CB04 B.EQ 0x336CE0C
	0x0336CB08 CMP W0, 0x800
	0x0336CB0C B.NE 0x336CBC8
	0x0336CB10 LDR X8, [X24]
	0x0336CB14 CBZ X8, 0x336CED0
	0x0336CB18 LDR X0, [X8 + 0x78]
	0x0336CB1C CBZ X0, 0x336CED4
	0x0336CB20 LDR X8, [X0]
	0x0336CB24 LDR W1, [X31 + 0xC]
	0x0336CB28 LDR X9, [X8 + 0x308]
	0x0336CB2C LDR X2, [X8 + 0x310]
	0x0336CB30 BLR X9
	0x0336CB34 ADRP X8, 0xFFFFFFFFFD782000
	0x0336CB38 LDR V0, [X8 + 0x1D8]
	0x0336CB3C STR W0, [X19 + 0x8]
	0x0336CB40 STR D0, [X19]
	0x0336CB44 B 0x336CE74
	0x0336CB48 CMP W0, 0x200

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x1071000
	010 Move W8, [X21+3786]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0xD8A000
	018 Move X0, [X0+368]
	019 Call 0x1C17CF4
	020 Move X0, 0xDBB000
	021 Move X0, [X0+3472]
	022 Call 0x1C17CF4
	023 Move X0, 0xDB7000
	024 Move X0, [X0+40]
	025 Call 0x1C17CF4
	026 Move X0, 0xDBD000
	027 Move X0, [X0+1264]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+3786], W8
	031 Compare X20, 0
	032 JumpIfEqual {124}
	033 Move W9, [X19+8]
	034 Move W23, [X19+16]
	035 Move W24, [X20+16]
	036 Subtract W8, W9, W23
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X22, 0xDBD000
	039 Move X22, [X22+1264]
	040 Move X0, [X22]
	041 Move W10, [X0+224]
	042 Compare W10, 0
	043 JumpIfNotEqual {49}
	044 Call 0x1C17DFC
	045 Move W23, [X19+16]
	046 Move W9, [X19+8]
	047 Move W24, [X20+16]
	048 Subtract W8, W9, W23
	049 Move X10, 0xDBB000
	050 Move X21, [X19+24]
	051 Move X10, [X10+3472]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X25, [X10]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X0, X31
	056 Call ThrowHelper.ThrowArgumentOutOfRangeException
	057 Move X0, [X25+32]
	058 Move X25, [X19]
	059 Move W8, [X0+309]
	060 Move TEMP, X8
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {65}
	064 Call 0x1C5D684
	065 Compare X21, 0
	066 JumpIfEqual {124}
	067 Add X1, X25, W23
	068 Move W2, W24
	069 Move W4, 1
	070 Move X0, X21
	071 Move X3, X20
	072 Move X5, X31
	073 Call CompareInfo.Compare, X0, X1, X2, X3
	074 Compare W0, 0
	075 JumpIfEqual {86}
	076 Move W0, W31
	077 Move X20, [X31+48]
	078 Move X19, [X31+56]
	079 Move X22, [X31+32]
	080 Move X21, [X31+40]
	081 Move X24, [X31+16]
	082 Move X23, [X31+24]
	083 Move X30, [X31+64]
	084 Move X25, [X31+72]
	085 Return X0
	086 Move W8, [X19+16]
	087 Move W9, [X20+16]
	088 Move W10, [X19+8]
	089 Add W21, W9, W8
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X8, 0xD8A000
	092 Move X8, [X8+368]
	093 Move X0, [X8]
	094 Move X8, [X19]
	095 Move W9, [X0+224]
	096 NotImplemented "Instruction LDRH not yet implemented."
	097 Compare W9, 0
	098 JumpIfNotEqual {100}
	099 Call 0x1C17DFC
	100 Move W0, W20
	101 Move X1, X31
	102 Call Char.IsLetter, X0
	103 Move TEMP, X0
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfEqual {76}
	107 Move [X19+16], W21
	108 Move X0, [X22]
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {113}
	112 Call 0x1C17DFC
	113 Move X0, X19
	114 Move X1, X31
	115 Call __DTString.get_Length, X0
	116 NotImplemented "Instruction CMP not yet implemented."
	117 NotImplemented "Instruction LDRSW not yet implemented."
	118 Move W9, [X19+8]
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move X9, [X19]
	121 NotImplemented "Instruction LDRH not yet implemented."
	122 NotImplemented "Instruction STRH not yet implemented."
	123 Move W0, 1
	124 Call 0x1C17F20
	125 Call 0x1C17F28

Method: System.Boolean GetTimeZoneName(ref System.__DTString str)

Disassembly:
	0x0336CB4C B.EQ 0x336CC0C
	0x0336CB50 CMP W0, 0x300
	0x0336CB54 B.NE 0x336CBC8
	0x0336CB58 MOVZ W8, 0x7
	0x0336CB5C B 0x336CCB8
	0x0336CB60 CMP W0, 0x900
	0x0336CB64 B.EQ 0x336CD88
	0x0336CB68 CMP W0, 0xA00
	0x0336CB6C B.EQ 0x336CD88
	0x0336CB70 CMP W0, 0xB00
	0x0336CB74 B.NE 0x336CBC8
	0x0336CB78 B 0x336CC20
	0x0336CB7C CMP W0, 0x200
	0x0336CB80 B.EQ 0x336CDE0
	0x0336CB84 CMP W0, 0x300
	0x0336CB88 B.EQ 0x336CDD4
	0x0336CB8C CMP W0, 0x400
	0x0336CB90 B.NE 0x336CBC8
	0x0336CB94 B 0x336CCC8
	0x0336CB98 MOVZ W8, 0x1
	0x0336CB9C B 0x336CDCC
	0x0336CBA0 STR W22, [X21 + 0x10]
	0x0336CBA4 ADRP X8, 0xDBC000
	0x0336CBA8 LDR X8, [X8 + 0x588]
	0x0336CBAC LDR X0, [X8]
	0x0336CBB0 LDR W8, [X0 + 0xE0]
	0x0336CBB4 CBNZ W8, 0x336CBBC
	0x0336CBB8 BL 0x1C16DFC
	0x0336CBBC MOV X0, X21
	0x0336CBC0 BL 0x336D49C
	0x0336CBC4 TBNZ X0, 0x0, 0x336CE74
	0x0336CBC8 MOV X0, X20
	0x0336CBCC MOV X1, X31
	0x0336CBD0 BL 0x33767C8
	0x0336CBD4 MOV W0, W31
	0x0336CBD8 B 0x336CE78
	0x0336CBDC CMP W0, 0x400
	0x0336CBE0 B.LE 0x336CD94
	0x0336CBE4 CMP W0, 0x500
	0x0336CBE8 B.EQ 0x336CDAC
	0x0336CBEC CMP W0, 0x600
	0x0336CBF0 B.EQ 0x336CC04
	0x0336CBF4 CMP W0, 0x700
	0x0336CBF8 B.NE 0x336CBC8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1071000
	006 Move X20, 0xDBD000
	007 Move W8, [X21+3787]
	008 Move X20, [X20+1416]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xDBD000
	015 Move X0, [X0+1416]
	016 Call 0x1C17CF4
	017 Move X0, 0xDBD000
	018 Move X0, [X0+1088]
	019 Call 0x1C17CF4
	020 Move X0, 0xDBD000
	021 Move X0, [X0+1112]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3787], W8
	025 Move X0, [X20]
	026 Move X21, 0xDBD000
	027 Move W8, [X0+224]
	028 Move X21, [X21+1112]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X1, [X21]
	033 Move X0, X19
	034 Call DateTimeParse.MatchWord, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {45}
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move W0, 1
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Return X0
	045 Move X0, [X20]
	046 Move X20, 0xDBD000
	047 Move W8, [X0+224]
	048 Move X20, [X20+1088]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X1, [X20]
	053 Move X0, X19
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move X30, [X31+32]
	057 Move X21, [X31+40]
	058 Call DateTimeParse.MatchWord, X0, X1
	059 Return X0

Method: System.Boolean IsDigit(System.Char ch)

Disassembly:
	0x0336CBFC LDRB W8, [X23 + 0x28]
	0x0336CC00 CBZ W8, 0x336CBC8
	0x0336CC04 MOVZ W8, 0xD
	0x0336CC08 B 0x336CDCC
	0x0336CC0C MOVZ W8, 0x6

ISIL:
	001 And W8, W0, 0xFFFF
	002 Subtract W8, W8, 48
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 Return X0

Method: System.Boolean ParseFraction(ref System.__DTString str, out System.Double result)

Disassembly:
	0x0336CC10 B 0x336CCB8
	0x0336CC14 ORR W8, W0, 0x100
	0x0336CC18 CMP W8, 0xD00
	0x0336CC1C B.NE 0x336CBC8
	0x0336CC20 MOVZ W8, 0xA
	0x0336CC24 B 0x336CD8C
	0x0336CC28 CMP W0, 0x500
	0x0336CC2C B.EQ 0x336CCC8
	0x0336CC30 CMP W0, 0x600
	0x0336CC34 B.EQ 0x336CE20
	0x0336CC38 B 0x336CBC8
	0x0336CC3C ADRP X23, 0xDBC000
	0x0336CC40 LDR X23, [X23 + 0x588]
	0x0336CC44 LDR X0, [X23]
	0x0336CC48 LDR W8, [X0 + 0xE0]
	0x0336CC4C CBNZ W8, 0x336CC58
	0x0336CC50 BL 0x1C16DFC
	0x0336CC54 LDR X0, [X23]
	0x0336CC58 LDR X8, [X0 + 0xB8]
	0x0336CC5C LDR X8, [X8 + 0x8]
	0x0336CC60 CBZ X8, 0x336CECC
	0x0336CC64 LDR W9, [X8 + 0x18]
	0x0336CC68 CMP W9, W22
	0x0336CC6C B.LS 0x336CEC8
	0x0336CC70 ADD X8, X8, W22, 0x3, SXTW
	0x0336CC74 LDR X8, [X8 + 0x20]
	0x0336CC78 CBZ X8, 0x336CECC
	0x0336CC7C LDR W9, [X8 + 0x18]
	0x0336CC80 CMP W9, 0xC
	0x0336CC84 B.LS 0x336CEC8
	0x0336CC88 LDR W8, [X8 + 0x50]
	0x0336CC8C CMP W8, 0x15
	0x0336CC90 B.LT 0x336CBC8
	0x0336CC94 LDR W8, [X31 + 0x8]
	0x0336CC98 MOVZ W9, 0xC
	0x0336CC9C STR W8, [X21 + 0x10]
	0x0336CCA0 LDRH W8, [X31 + 0x4]
	0x0336CCA4 STRH W8, [X21 + 0x14]
	0x0336CCA8 B 0x336C868
	0x0336CCAC LDRB W8, [X23 + 0x28]
	0x0336CCB0 CBZ W8, 0x336CBC8
	0x0336CCB4 MOVZ W8, 0x8
	0x0336CCB8 STR W8, [X19]
	0x0336CCBC LDR W8, [X31 + 0xC]
	0x0336CCC0 STR W8, [X23 + 0xC]
	0x0336CCC4 B 0x336CE74
	0x0336CCC8 LDR W8, [X23 + 0x1C]
	0x0336CCCC ADDS W31, W8, 0x1
	0x0336CCD0 B.NE 0x336CDB8
	0x0336CCD4 CMP W0, 0x400
	0x0336CCD8 MOVZ W8, 0x2
	0x0336CCDC CSET W9, NE
	0x0336CCE0 CMP W22, 0x4
	0x0336CCE4 STR W9, [X23 + 0x1C]
	0x0336CCE8 STR W8, [X19]
	0x0336CCEC B.NE 0x336CD28
	0x0336CCF0 ADRP X8, 0xDBC000
	0x0336CCF4 LDR X8, [X8 + 0x588]
	0x0336CCF8 LDR X24, [X24]

ISIL:
	001 Move [X31-80], D9
	002 Move [X31-72], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x1071000
	011 Move W8, [X21+3788]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xDBD000
	019 Move X0, [X0+1416]
	020 Call 0x1C17CF4
	021 Move X0, 0xDBD000
	022 Move X0, [X0+1264]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+3788], W8
	026 Move X8, -42459136
	027 Move V8, [X8+3904]
	028 Move X22, 0xDBD000
	029 Move X23, 0xDBD000
	030 Move X22, [X22+1264]
	031 Move X23, [X23+1416]
	032 Move W21, W31
	033 Move [X19], X31
	034 Move V9, V8
	035 Move X0, [X22]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X20
	041 Move X1, X31
	042 Call __DTString.GetNext, X0
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {62}
	047 Move X0, [X23]
	048 NotImplemented "Instruction LDRH not yet implemented."
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Subtract W8, W24, 48
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move V0, [X19]
	056 NotImplemented "Instruction SCVTF not yet implemented."
	057 Multiply D1, D9, D1
	058 Multiply D9, D9, D8
	059 Add D0, D1, D0
	060 Add W21, W21, 1
	061 Move [X19], D0
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X20, [X31+64]
	064 Move X19, [X31+72]
	065 Move X22, [X31+48]
	066 Move X21, [X31+56]
	067 Move X24, [X31+32]
	068 Move X23, [X31+40]
	069 Move X30, [X31+16]
	070 NotImplemented "Instruction CSET not yet implemented."
	071 Move D9, [X31+80]
	072 Move D8, [X31+88]
	073 Return X0

Method: System.Boolean ParseTimeZone(ref System.__DTString str, ref System.TimeSpan result)

Disassembly:
	0x0336CCFC LDR X0, [X8]
	0x0336CD00 LDR W8, [X0 + 0xE0]
	0x0336CD04 CBNZ W8, 0x336CD0C
	0x0336CD08 BL 0x1C16DFC
	0x0336CD0C ADD X3, X31, 0x1C
	0x0336CD10 MOVZ W0, 0x15
	0x0336CD14 MOV X2, X20
	0x0336CD18 MOV X4, X23
	0x0336CD1C MOV X5, X24
	0x0336CD20 BL 0x336CF50
	0x0336CD24 TBZ X0, 0x0, 0x336CBD4
	0x0336CD28 LDR W1, [X19 + 0x8]
	0x0336CD2C MOV X0, X23
	0x0336CD30 MOV X2, X31
	0x0336CD34 BL 0x337667C
	0x0336CD38 AND W8, W22, 0xFFFFFFFE
	0x0336CD3C CMP W8, 0x12
	0x0336CD40 B.NE 0x336CE74
	0x0336CD44 ADRP X8, 0xDBC000
	0x0336CD48 LDR X8, [X8 + 0x588]
	0x0336CD4C LDR X0, [X8]
	0x0336CD50 LDR W8, [X0 + 0xE0]
	0x0336CD54 CBNZ W8, 0x336CD5C
	0x0336CD58 BL 0x1C16DFC
	0x0336CD5C MOV X0, X21
	0x0336CD60 MOV X1, X20
	0x0336CD64 BL 0x336C010
	0x0336CD68 TBZ X0, 0x0, 0x336CBD4
	0x0336CD6C B 0x336CE74
	0x0336CD70 CMP W0, 0x800
	0x0336CD74 B.EQ 0x336CD88
	0x0336CD78 CMP W0, 0x900
	0x0336CD7C B.EQ 0x336CD88
	0x0336CD80 CMP W0, 0xA00
	0x0336CD84 B.NE 0x336CBC8
	0x0336CD88 MOVZ W8, 0x9
	0x0336CD8C STP W8, W0, [X19]
	0x0336CD90 B 0x336CE74
	0x0336CD94 CMP W0, 0x200
	0x0336CD98 B.EQ 0x336C970
	0x0336CD9C CMP W0, 0x300
	0x0336CDA0 B.EQ 0x336CDC8
	0x0336CDA4 CMP W0, 0x400
	0x0336CDA8 B.NE 0x336CBC8
	0x0336CDAC LDR W8, [X23 + 0x1C]
	0x0336CDB0 ADDS W31, W8, 0x1
	0x0336CDB4 B.EQ 0x336CE38
	0x0336CDB8 MOV X0, X20
	0x0336CDBC MOV X1, X31
	0x0336CDC0 BL 0x33767C8
	0x0336CDC4 B 0x336CE74
	0x0336CDC8 MOVZ W8, 0xC
	0x0336CDCC STR W8, [X19]
	0x0336CDD0 B 0x336CE74
	0x0336CDD4 LDR W1, [X19 + 0x8]
	0x0336CDD8 MOVZ W8, 0x3
	0x0336CDDC B 0x336CE64
	0x0336CDE0 LDR W1, [X19 + 0x8]
	0x0336CDE4 MOVZ W8, 0x1
	0x0336CDE8 B 0x336CE64
	0x0336CDEC CMP W0, 0xB00
	0x0336CDF0 B.EQ 0x336CC20
	0x0336CDF4 CMP W0, 0xC00
	0x0336CDF8 B.EQ 0x336CC20
	0x0336CDFC B 0x336CBC8
	0x0336CE00 LDR W1, [X19 + 0x8]
	0x0336CE04 MOVZ W8, 0x13
	0x0336CE08 B 0x336CE64
	0x0336CE0C SUB W8, W22, 0xB
	0x0336CE10 CMP W8, 0x4
	0x0336CE14 B.HI 0x336CE2C
	0x0336CE18 LDRB W8, [X23 + 0x28]
	0x0336CE1C CBZ W8, 0x336CE2C
	0x0336CE20 LDR W1, [X19 + 0x8]
	0x0336CE24 MOVZ W8, 0x4
	0x0336CE28 B 0x336CE64
	0x0336CE2C LDR W1, [X19 + 0x8]
	0x0336CE30 MOVZ W8, 0x5
	0x0336CE34 B 0x336CE64
	0x0336CE38 CMP W0, 0x400
	0x0336CE3C CSET W9, NE
	0x0336CE40 MOVZ W8, 0xC
	0x0336CE44 STR W9, [X23 + 0x1C]
	0x0336CE48 B 0x336CDCC
	0x0336CE4C LDR W8, [X31 + 0x8]
	0x0336CE50 STR W8, [X21 + 0x10]
	0x0336CE54 LDRH W8, [X31 + 0x4]
	0x0336CE58 STRH W8, [X21 + 0x14]
	0x0336CE5C MOVZ W8, 0x3
	0x0336CE60 LDR W1, [X19 + 0x8]
	0x0336CE64 MOV X0, X23
	0x0336CE68 MOV X2, X31
	0x0336CE6C STR W8, [X19]
	0x0336CE70 BL 0x337667C
	0x0336CE74 MOVZ W0, 0x1
	0x0336CE78 LDP X20, X19, [X31 + 0x50]
	0x0336CE7C LDP X22, X21, [X31 + 0x40]
	0x0336CE80 LDP X24, X23, [X31 + 0x30]
	0x0336CE84 LDP X26, X25, [X31 + 0x20]
	0x0336CE88 LDR X30, [X31 + 0x10]
	0x0336CE8C ADD X31, X31, 0x60
	0x0336CE90 RET
	0x0336CE94 ADRP X0, 0xDB2000
	0x0336CE98 LDR X0, [X0 + 0xC50]
	0x0336CE9C BL 0x1C16D08
	0x0336CEA0 BL 0x1C16F10
	0x0336CEA4 MOV X1, X31
	0x0336CEA8 MOV X19, X0
	0x0336CEAC BL 0x338E344
	0x0336CEB0 ADRP X0, 0xDBE000
	0x0336CEB4 LDR X0, [X0 + 0xC50]
	0x0336CEB8 BL 0x1C16D08
	0x0336CEBC MOV X1, X0
	0x0336CEC0 MOV X0, X19
	0x0336CEC4 BL 0x1C16DEC
	0x0336CEC8 BL 0x1C16F28
	0x0336CECC BL 0x1C16F20
	0x0336CED0 BL 0x1C16F20
	0x0336CED4 BL 0x1C16F20
	0x0336CED8 B 0x336CEE0
	0x0336CEDC B 0x336CEE0
	0x0336CEE0 MOV X19, X0
	0x0336CEE4 CMP W1, 0x1
	0x0336CEE8 B.NE 0x336CF44
	0x0336CEEC MOV X0, X19
	0x0336CEF0 BL 0x3EB1AD0
	0x0336CEF4 MOV X19, X0
	0x0336CEF8 ADRP X0, 0xD8F000
	0x0336CEFC LDR X0, [X0 + 0x760]
	0x0336CF00 BL 0x1C16D08
	0x0336CF04 LDR X8, [X19]
	0x0336CF08 LDR X1, [X8]
	0x0336CF0C BL 0x1C17270
	0x0336CF10 TBZ X0, 0x0, 0x336CF1C
	0x0336CF14 BL 0x3EB1AE0
	0x0336CF18 B 0x336CBC8
	0x0336CF1C MOVZ W0, 0x8
	0x0336CF20 BL 0x3EB1AF0
	0x0336CF24 LDR X8, [X19]
	0x0336CF28 STR X8, [X0]
	0x0336CF2C ADRP X1, 0xB48000
	0x0336CF30 ADD X1, X1, 0xE58
	0x0336CF34 MOV X2, X31
	0x0336CF38 BL 0x3EB1B00
	0x0336CF3C MOV X19, X0
	0x0336CF40 BL 0x3EB1AE0
	0x0336CF44 MOV X0, X19
	0x0336CF48 BL 0x1D2C690
	0x0336CF4C BL 0x1990590
	0x0336CF50 STR X30, [X31 - 0x40]!
	0x0336CF54 STP X24, X23, [X31 + 0x10]
	0x0336CF58 STP X22, X21, [X31 + 0x20]
	0x0336CF5C STP X20, X19, [X31 + 0x30]
	0x0336CF60 ADRP X24, 0x1070000
	0x0336CF64 LDRB W8, [X24 + 0xEE5]
	0x0336CF68 MOV X21, X5
	0x0336CF6C MOV X19, X4
	0x0336CF70 MOV X22, X3
	0x0336CF74 MOV X20, X2
	0x0336CF78 MOV W23, W0
	0x0336CF7C TBNZ X8, 0x0, 0x336CF94
	0x0336CF80 ADRP X0, 0xDBC000
	0x0336CF84 LDR X0, [X0 + 0x588]
	0x0336CF88 BL 0x1C16CF4
	0x0336CF8C MOVZ W8, 0x1
	0x0336CF90 STRB W8, [X24 + 0xEE5]
	0x0336CF94 SUB W8, W23, 0x15
	0x0336CF98 CMP W8, 0x11
	0x0336CF9C B.HI 0x336D0B4
	0x0336CFA0 ADRP X9, 0xFFFFFFFFFD82A000
	0x0336CFA4 ADD X9, X9, 0x7A6
	0x0336CFA8 ADR X10, 0x10
	0x0336CFAC LDRB W11, [X9, X8, LSL]
	0x0336CFB0 ADD X10, X10, X11, 0x2, LSL
	0x0336CFB4 BR X10
	0x0336CFB8 ADRP X8, 0xDBC000
	0x0336CFBC LDR X8, [X8 + 0x588]
	0x0336CFC0 LDR X0, [X8]
	0x0336CFC4 LDR W8, [X0 + 0xE0]
	0x0336CFC8 CBNZ W8, 0x336CFD0
	0x0336CFCC BL 0x1C16DFC
	0x0336CFD0 MOV X0, X20
	0x0336CFD4 MOV X1, X22
	0x0336CFD8 MOV X2, X19
	0x0336CFDC MOV X3, X21
	0x0336CFE0 BL 0x336E104
	0x0336CFE4 TBZ X0, 0x0, 0x336D174
	0x0336CFE8 B 0x336D280
	0x0336CFEC ADRP X8, 0xDBC000
	0x0336CFF0 LDR X8, [X8 + 0x588]
	0x0336CFF4 LDR X0, [X8]
	0x0336CFF8 LDR W8, [X0 + 0xE0]
	0x0336CFFC CBNZ W8, 0x336D004
	0x0336D000 BL 0x1C16DFC
	0x0336D004 MOV X0, X20
	0x0336D008 MOV X1, X19
	0x0336D00C MOV X2, X21

ISIL:
	001 Subtract X31, X31, 320
	002 Move [X31+256], X29
	003 Move [X31+264], X30
	004 Move [X31+272], X24
	005 Move [X31+280], X23
	006 Move [X31+288], X22
	007 Move [X31+296], X21
	008 Move [X31+304], X20
	009 Move [X31+312], X19
	010 Move X21, 0x1071000
	011 Move X24, 0xDBD000
	012 Move W8, [X21+3789]
	013 Move X24, [X24+1264]
	014 Move X19, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0xD8A000
	021 Move X0, [X0+1392]
	022 Call 0x1C17CF4
	023 Move X0, 0xDBD000
	024 Move X0, [X0+1264]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+3789], W8
	028 Move X0, [X24]
	029 NotImplemented "Instruction MOVI not yet implemented."
	030 Move [X31+224], V0
	031 Move [X31+232], V0
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Add X8, X31, 192
	037 Move X0, X20
	038 Move X1, X31
	039 Call __DTString.GetSubString, X0
	040 Move V1, [X31+192]
	041 Move V0, [X31+208]
	042 Move [X31+224], V1
	043 Move [X31+232], V0
	044 Move W8, [X31+244]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Add X0, X31, 224
	047 Move W1, W31
	048 Move X2, X31
	049 Call DTSubString.get_Item, X0, X1
	050 And W8, W0, 0xFFFF
	051 Move W21, W0
	052 NotImplemented "Instruction CMP not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move W0, W31
	055 Move V0, [X31+224]
	056 Move V1, [X31+240]
	057 Move X0, [X24]
	058 Move [X31+192], V0
	059 Move [X31+200], V1
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move V0, [X31+192]
	065 Move V1, [X31+208]
	066 Add X1, X31, 160
	067 Move X0, X20
	068 Move X2, X31
	069 Move [X31+160], V0
	070 Move [X31+168], V1
	071 Call __DTString.ConsumeSubString, X0, X1
	072 Add X8, X31, 128
	073 Move X0, X20
	074 Move X1, X31
	075 Call __DTString.GetSubString, X0
	076 Move V1, [X31+128]
	077 Move V0, [X31+144]
	078 Move [X31+224], V1
	079 Move [X31+232], V0
	080 Move W8, [X31+248]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move W8, [X31+244]
	083 Move W22, [X31+252]
	084 Subtract W9, W8, 3
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Subtract W8, W8, 1
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move V0, [X31+224]
	089 Move V1, [X31+240]
	090 Move X0, [X24]
	091 Move [X31+192], V0
	092 Move [X31+200], V1
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {97}
	096 Call 0x1C17DFC
	097 Move V0, [X31+192]
	098 Move V1, [X31+208]
	099 Add X1, X31, 96
	100 Move X0, X20
	101 Move X2, X31
	102 Move [X31+96], V0
	103 Move [X31+104], V1
	104 Call __DTString.ConsumeSubString, X0, X1
	105 Add X8, X31, 128
	106 Move X0, X20
	107 Move X1, X31
	108 Call __DTString.GetSubString, X0
	109 Move V1, [X31+128]
	110 Move V0, [X31+144]
	111 Move [X31+224], V1
	112 Move [X31+232], V0
	113 Move W8, [X31+244]
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Add X0, X31, 224
	116 Move W1, W31
	117 Move X2, X31
	118 Call DTSubString.get_Item, X0, X1
	119 And W8, W0, 0xFFFF
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move V0, [X31+224]
	122 Move V1, [X31+240]
	123 Move X0, [X24]
	124 Move [X31+192], V0
	125 Move [X31+200], V1
	126 Move W8, [X0+224]
	127 Compare W8, 0
	128 JumpIfNotEqual {130}
	129 Call 0x1C17DFC
	130 Move V0, [X31+192]
	131 Move V1, [X31+208]
	132 Add X1, X31, 64
	133 Move X0, X20
	134 Move X2, X31
	135 Move [X31+64], V0
	136 Move [X31+72], V1
	137 Call __DTString.ConsumeSubString, X0, X1
	138 Add X8, X31, 128
	139 Move X0, X20
	140 Move X1, X31
	141 Call __DTString.GetSubString, X0
	142 Move V1, [X31+128]
	143 Move V0, [X31+144]
	144 Move [X31+224], V1
	145 Move [X31+232], V0
	146 Move W8, [X31+248]
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move W8, [X31+244]
	149 Subtract W8, W8, 1
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move V0, [X31+224]
	152 Move V1, [X31+240]
	153 Move X0, [X24]
	154 Move W23, [X31+252]
	155 Move [X31+192], V0
	156 Move [X31+200], V1
	157 Move W8, [X0+224]
	158 Compare W8, 0
	159 JumpIfNotEqual {161}
	160 Call 0x1C17DFC
	161 Move V0, [X31+192]
	162 Move V1, [X31+208]
	163 Add X1, X31, 32
	164 Move X0, X20
	165 Move X2, X31
	166 Move [X31+32], V0
	167 Move [X31+40], V1
	168 Call __DTString.ConsumeSubString, X0, X1
	169 Move V0, [X31+224]
	170 Move V1, [X31+240]
	171 Move X0, [X24]
	172 Move W8, 0x851F
	173 NotImplemented "Instruction MOVK not yet implemented."
	174 Move [X31+192], V0
	175 Move [X31+200], V1
	176 NotImplemented "Instruction SMADDL not yet implemented."
	177 Move W10, [X0+224]
	178 Move X9, X8
	179 ShiftRight X9, 63
	180 And X9, X9, 0x7FFFFFFF
	181 NotImplemented "Instruction SBFM not yet implemented."
	182 Add W24, W8, W9
	183 Move W8, 100
	184 NotImplemented "Instruction MSUB not yet implemented."
	185 Compare W10, 0
	186 JumpIfNotEqual {188}
	187 Call 0x1C17DFC
	188 Move V0, [X31+192]
	189 Move V1, [X31+208]
	190 Add X1, X31, 0
	191 Move X0, X20
	192 Move X2, X31
	193 Move [X31], V0
	194 Move [X31+8], V1
	195 Call __DTString.ConsumeSubString, X0, X1
	196 Move W22, W24
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Move W0, W31
	199 Move X20, [X31+304]
	200 Move X19, [X31+312]
	201 Move X22, [X31+288]
	202 Move X21, [X31+296]
	203 Move X24, [X31+272]
	204 Move X23, [X31+280]
	205 Move X29, [X31+256]
	206 Move X30, [X31+264]
	207 Add X31, X31, 320
	208 Return X0
	209 Move W23, W31
	210 Add X0, X31, 192
	211 Move W1, W22
	212 Move W2, W23
	213 Move W3, W31
	214 Move X4, X31
	215 Move [X31+192], X31
	216 Call TimeSpan..ctor, X0, X1, X2, X3
	217 Move X8, [X31+192]
	218 And W9, W21, 0xFFFF
	219 NotImplemented "Instruction CMP not yet implemented."
	220 Move [X19], X8
	221 Move X8, 0xD8A000
	222 Move X8, [X8+1392]
	223 Move X0, [X8]
	224 Move W8, [X0+224]
	225 Compare W8, 0
	226 JumpIfNotEqual {228}
	227 Call 0x1C17DFC
	228 Move X0, X19
	229 Move X1, X31
	230 Call TimeSpan.Negate, X0
	231 Move [X19], X0
	232 Move W0, 1

Method: System.Boolean HandleTimeZone(ref System.__DTString str, ref System.DateTimeResult result)

Disassembly:
	0x0336D010 BL 0x336E278
	0x0336D014 TBZ X0, 0x0, 0x336D174
	0x0336D018 B 0x336D280
	0x0336D01C ADRP X8, 0xDBB000
	0x0336D020 LDR X8, [X8 + 0x588]
	0x0336D024 LDR X0, [X8]
	0x0336D028 LDR W8, [X0 + 0xE0]
	0x0336D02C CBNZ W8, 0x336D034
	0x0336D030 BL 0x1C16DFC
	0x0336D034 MOV X0, X20
	0x0336D038 MOV X1, X22
	0x0336D03C MOV X2, X19
	0x0336D040 MOV X3, X21
	0x0336D044 BL 0x336E52C
	0x0336D048 TBZ X0, 0x0, 0x336D174
	0x0336D04C B 0x336D280
	0x0336D050 ADRP X8, 0xDBB000
	0x0336D054 LDR X8, [X8 + 0x588]
	0x0336D058 LDR X0, [X8]
	0x0336D05C LDR W8, [X0 + 0xE0]
	0x0336D060 CBNZ W8, 0x336D068
	0x0336D064 BL 0x1C16DFC
	0x0336D068 MOV X0, X20
	0x0336D06C MOV X1, X22
	0x0336D070 MOV X2, X19
	0x0336D074 MOV X3, X21
	0x0336D078 BL 0x336E8AC
	0x0336D07C TBZ X0, 0x0, 0x336D174
	0x0336D080 B 0x336D280
	0x0336D084 ADRP X8, 0xDBB000
	0x0336D088 LDR X8, [X8 + 0x588]
	0x0336D08C LDR X0, [X8]
	0x0336D090 LDR W8, [X0 + 0xE0]
	0x0336D094 CBNZ W8, 0x336D09C
	0x0336D098 BL 0x1C16DFC
	0x0336D09C MOV X0, X20
	0x0336D0A0 MOV X1, X19
	0x0336D0A4 MOV X2, X21
	0x0336D0A8 BL 0x336EAD0
	0x0336D0AC TBZ X0, 0x0, 0x336D174
	0x0336D0B0 B 0x336D280
	0x0336D0B4 CMP W23, 0x15
	0x0336D0B8 B.GE 0x336D280
	0x0336D0BC B 0x336D284
	0x0336D0C0 ADRP X8, 0xDBB000
	0x0336D0C4 LDR X8, [X8 + 0x588]
	0x0336D0C8 LDR X0, [X8]
	0x0336D0CC LDR W8, [X0 + 0xE0]
	0x0336D0D0 CBNZ W8, 0x336D0D8
	0x0336D0D4 BL 0x1C16DFC
	0x0336D0D8 MOV X0, X20
	0x0336D0DC MOV X1, X19
	0x0336D0E0 BL 0x336F4CC
	0x0336D0E4 TBZ X0, 0x0, 0x336D174
	0x0336D0E8 B 0x336D280
	0x0336D0EC ADRP X8, 0xDBB000
	0x0336D0F0 LDR X8, [X8 + 0x588]
	0x0336D0F4 LDR X0, [X8]
	0x0336D0F8 LDR W8, [X0 + 0xE0]
	0x0336D0FC CBNZ W8, 0x336D104
	0x0336D100 BL 0x1C16DFC
	0x0336D104 MOV X0, X20
	0x0336D108 MOV X1, X19
	0x0336D10C BL 0x336F520
	0x0336D110 TBZ X0, 0x0, 0x336D174
	0x0336D114 B 0x336D280
	0x0336D118 ADRP X8, 0xDBB000
	0x0336D11C LDR X8, [X8 + 0x588]
	0x0336D120 LDR X0, [X8]
	0x0336D124 LDR W8, [X0 + 0xE0]
	0x0336D128 CBNZ W8, 0x336D130
	0x0336D12C BL 0x1C16DFC
	0x0336D130 MOV X0, X20
	0x0336D134 MOV X1, X19
	0x0336D138 MOV X2, X21
	0x0336D13C BL 0x336F5D4
	0x0336D140 TBZ X0, 0x0, 0x336D174
	0x0336D144 B 0x336D280
	0x0336D148 ADRP X8, 0xDBB000
	0x0336D14C LDR X8, [X8 + 0x588]
	0x0336D150 LDR X0, [X8]
	0x0336D154 LDR W8, [X0 + 0xE0]
	0x0336D158 CBNZ W8, 0x336D160
	0x0336D15C BL 0x1C16DFC
	0x0336D160 MOV X0, X20
	0x0336D164 MOV X1, X19
	0x0336D168 MOV X2, X21
	0x0336D16C BL 0x336EDB4
	0x0336D170 TBNZ X0, 0x0, 0x336D280
	0x0336D174 MOV W0, W31
	0x0336D178 B 0x336D288
	0x0336D17C ADRP X8, 0xDBB000
	0x0336D180 LDR X8, [X8 + 0x588]
	0x0336D184 LDR X0, [X8]
	0x0336D188 LDR W8, [X0 + 0xE0]
	0x0336D18C CBNZ W8, 0x336D194
	0x0336D190 BL 0x1C16DFC
	0x0336D194 MOV X0, X20
	0x0336D198 MOV X1, X19
	0x0336D19C BL 0x336F060
	0x0336D1A0 TBZ X0, 0x0, 0x336D174
	0x0336D1A4 B 0x336D280

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x1070000
	010 Move X22, 0xDBC000
	011 Move W8, [X21+3790]
	012 Move X22, [X22+1264]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0xD89000
	020 Move X0, [X0+368]
	021 Call 0x1C17CF4
	022 Move X0, 0xDBC000
	023 Move X0, [X0+1416]
	024 Call 0x1C17CF4
	025 Move X0, 0xDBC000
	026 Move X0, [X0+1264]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+3790], W8
	030 Move X0, [X22]
	031 Move W21, [X20+16]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X0, X20
	037 Move X1, X31
	038 Call __DTString.get_Length, X0
	039 Subtract W8, W0, 1
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move W8, [X20+16]
	042 Move W9, [X20+8]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X24, 0xD89000
	045 Move X24, [X24+368]
	046 Move W23, W31
	047 Move X0, [X24]
	048 Move X9, [X20]
	049 Move W10, [X0+224]
	050 NotImplemented "Instruction LDRH not yet implemented."
	051 Compare W10, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move W0, W21
	055 Move X1, X31
	056 Call Char.IsWhiteSpace, X0
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {79}
	061 Move X0, [X22]
	062 Move W25, [X20+16]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Move X0, X20
	068 Move X1, X31
	069 Call __DTString.get_Length, X0
	070 Add W8, W23, W25
	071 Subtract W9, W0, 1
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move W8, [X20+16]
	074 Move W9, [X20+8]
	075 Add W23, W23, 1
	076 Add W8, W8, W23
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Call 0x1C17F28
	079 NotImplemented "Instruction CMP not yet implemented."
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move W8, [X20+16]
	082 Add W8, W8, W23
	083 Move [X20+16], W8
	084 Move W8, [X19+36]
	085 Move TEMP, X8
	086 And TEMP, TEMP, 256
	087 Compare TEMP, 256
	088 JumpIfEqual {107}
	089 Or W8, W8, 256
	090 Move [X19+36], W8
	091 Move X8, 0xDBC000
	092 Move X8, [X8+1416]
	093 Add X21, X19, 40
	094 Move X0, [X8]
	095 Move W8, [X0+224]
	096 Compare W8, 0
	097 JumpIfNotEqual {99}
	098 Call 0x1C17DFC
	099 Move X0, X20
	100 Move X1, X21
	101 Call DateTimeParse.ParseTimeZone, X0, X1
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfNotEqual {107}
	106 Move W0, 1
	107 Move X0, X19
	108 Move X1, X31
	109 Call DateTimeResult.SetBadDateTimeFailure, X0
	110 Move W0, W31
	111 Move X20, [X31+48]
	112 Move X19, [X31+56]
	113 Move X22, [X31+32]
	114 Move X21, [X31+40]
	115 Move X24, [X31+16]
	116 Move X23, [X31+24]
	117 Move X30, [X31+64]
	118 Move X25, [X31+72]
	119 Return X0

Method: System.Boolean Lex(System.DateTimeParse/DS dps, ref System.__DTString str, ref System.DateTimeToken dtok, ref System.DateTimeRawInfo raw, ref System.DateTimeResult result, ref System.Globalization.DateTimeFormatInfo dtfi, System.Globalization.DateTimeStyles styles)

Disassembly:
	0x0336D1A8 ADRP X8, 0xDBB000
	0x0336D1AC LDR X8, [X8 + 0x588]
	0x0336D1B0 LDR X0, [X8]
	0x0336D1B4 LDR W8, [X0 + 0xE0]
	0x0336D1B8 CBNZ W8, 0x336D1C0
	0x0336D1BC BL 0x1C16DFC
	0x0336D1C0 MOV X0, X20
	0x0336D1C4 MOV X1, X19
	0x0336D1C8 BL 0x336F11C
	0x0336D1CC TBZ X0, 0x0, 0x336D174
	0x0336D1D0 B 0x336D280
	0x0336D1D4 ADRP X8, 0xDBB000
	0x0336D1D8 LDR X8, [X8 + 0x588]
	0x0336D1DC LDR X0, [X8]
	0x0336D1E0 LDR W8, [X0 + 0xE0]
	0x0336D1E4 CBNZ W8, 0x336D1EC
	0x0336D1E8 BL 0x1C16DFC
	0x0336D1EC MOV X0, X20
	0x0336D1F0 MOV X1, X19
	0x0336D1F4 BL 0x336F1D8
	0x0336D1F8 TBZ X0, 0x0, 0x336D174
	0x0336D1FC B 0x336D280
	0x0336D200 ADRP X8, 0xDBB000
	0x0336D204 LDR X8, [X8 + 0x588]
	0x0336D208 LDR X0, [X8]
	0x0336D20C LDR W8, [X0 + 0xE0]
	0x0336D210 CBNZ W8, 0x336D218
	0x0336D214 BL 0x1C16DFC
	0x0336D218 MOV X0, X20
	0x0336D21C MOV X1, X19
	0x0336D220 BL 0x336F37C
	0x0336D224 TBZ X0, 0x0, 0x336D174
	0x0336D228 B 0x336D280
	0x0336D22C ADRP X8, 0xDBB000
	0x0336D230 LDR X8, [X8 + 0x588]
	0x0336D234 LDR X0, [X8]
	0x0336D238 LDR W8, [X0 + 0xE0]
	0x0336D23C CBNZ W8, 0x336D244
	0x0336D240 BL 0x1C16DFC
	0x0336D244 MOV X0, X20
	0x0336D248 MOV X1, X19
	0x0336D24C BL 0x336F3D8
	0x0336D250 TBZ X0, 0x0, 0x336D174
	0x0336D254 B 0x336D280
	0x0336D258 ADRP X8, 0xDBB000
	0x0336D25C LDR X8, [X8 + 0x588]
	0x0336D260 LDR X0, [X8]
	0x0336D264 LDR W8, [X0 + 0xE0]
	0x0336D268 CBNZ W8, 0x336D270
	0x0336D26C BL 0x1C16DFC
	0x0336D270 MOV X0, X20
	0x0336D274 MOV X1, X19
	0x0336D278 BL 0x336F448
	0x0336D27C TBZ X0, 0x0, 0x336D174
	0x0336D280 STR W31, [X19 + 0x8]
	0x0336D284 MOVZ W0, 0x1
	0x0336D288 LDP X20, X19, [X31 + 0x30]
	0x0336D28C LDP X22, X21, [X31 + 0x20]
	0x0336D290 LDP X24, X23, [X31 + 0x10]
	0x0336D294 LDR X30, [X31], #0x40
	0x0336D298 RET
	0x0336D29C ADRP X8, 0xDBB000
	0x0336D2A0 LDR X8, [X8 + 0x588]
	0x0336D2A4 LDR X0, [X8]
	0x0336D2A8 LDR W8, [X0 + 0xE0]
	0x0336D2AC CBNZ W8, 0x336D2B4
	0x0336D2B0 BL 0x1C16DFC
	0x0336D2B4 MOV X0, X20
	0x0336D2B8 MOV X1, X19
	0x0336D2BC MOV X2, X21
	0x0336D2C0 BL 0x336EEEC
	0x0336D2C4 TBZ X0, 0x0, 0x336D174
	0x0336D2C8 B 0x336D280
	0x0336D2CC STR X30, [X31 - 0x20]!
	0x0336D2D0 STP X20, X19, [X31 + 0x10]
	0x0336D2D4 ADRP X20, 0x106F000
	0x0336D2D8 ADRP X19, 0xDBA000
	0x0336D2DC LDRB W8, [X20 + 0xED0]
	0x0336D2E0 LDR X19, [X19 + 0x930]
	0x0336D2E4 TBNZ X8, 0x0, 0x336D308
	0x0336D2E8 ADRP X0, 0xDBA000
	0x0336D2EC LDR X0, [X0 + 0x930]
	0x0336D2F0 BL 0x1C16CF4
	0x0336D2F4 ADRP X0, 0xDBB000
	0x0336D2F8 LDR X0, [X0 + 0x408]
	0x0336D2FC BL 0x1C16CF4
	0x0336D300 MOVZ W8, 0x1
	0x0336D304 STRB W8, [X20 + 0xED0]
	0x0336D308 LDR X0, [X19]
	0x0336D30C LDR W8, [X0 + 0xE0]
	0x0336D310 CBNZ W8, 0x336D318
	0x0336D314 BL 0x1C16DFC
	0x0336D318 ADRP X20, 0x106F000
	0x0336D31C LDRB W8, [X20 + 0xAFE]
	0x0336D320 CBNZ W8, 0x336D338
	0x0336D324 ADRP X0, 0xDBA000
	0x0336D328 LDR X0, [X0 + 0x930]
	0x0336D32C BL 0x1C16CF4
	0x0336D330 MOVZ W8, 0x1
	0x0336D334 STRB W8, [X20 + 0xAFE]
	0x0336D338 LDR X0, [X19]
	0x0336D33C LDR W8, [X0 + 0xE0]
	0x0336D340 CBNZ W8, 0x336D34C
	0x0336D344 BL 0x1C16DFC
	0x0336D348 LDR X0, [X19]
	0x0336D34C LDR X8, [X0 + 0xB8]
	0x0336D350 LDRB W8, [X8]
	0x0336D354 CBNZ W8, 0x336D380
	0x0336D358 ADRP X8, 0xDBB000
	0x0336D35C LDR X8, [X8 + 0x408]
	0x0336D360 LDR X0, [X8]
	0x0336D364 LDR W8, [X0 + 0xE0]
	0x0336D368 CBNZ W8, 0x336D370
	0x0336D36C BL 0x1C16DFC
	0x0336D370 LDP X20, X19, [X31 + 0x10]
	0x0336D374 MOV X0, X31
	0x0336D378 LDR X30, [X31], #0x20
	0x0336D37C B 0x3339C08
	0x0336D380 ADRP X0, 0xDB1000
	0x0336D384 LDR X0, [X0 + 0xC50]
	0x0336D388 BL 0x1C16D08
	0x0336D38C BL 0x1C16F10
	0x0336D390 MOV X1, X31
	0x0336D394 MOV X19, X0
	0x0336D398 BL 0x338E344
	0x0336D39C ADRP X0, 0xDBD000
	0x0336D3A0 LDR X0, [X0 + 0xC58]
	0x0336D3A4 BL 0x1C16D08
	0x0336D3A8 MOV X1, X0
	0x0336D3AC MOV X0, X19
	0x0336D3B0 BL 0x1C16DEC
	0x0336D3B4 STR X30, [X31 - 0x20]!
	0x0336D3B8 STP X20, X19, [X31 + 0x10]
	0x0336D3BC ADRP X20, 0x106F000
	0x0336D3C0 ADRP X19, 0xDBA000
	0x0336D3C4 LDRB W8, [X20 + 0xED1]
	0x0336D3C8 LDR X19, [X19 + 0x930]
	0x0336D3CC TBNZ X8, 0x0, 0x336D3F0
	0x0336D3D0 ADRP X0, 0xDBA000
	0x0336D3D4 LDR X0, [X0 + 0x930]
	0x0336D3D8 BL 0x1C16CF4
	0x0336D3DC ADRP X0, 0xDBB000
	0x0336D3E0 LDR X0, [X0 + 0x418]
	0x0336D3E4 BL 0x1C16CF4
	0x0336D3E8 MOVZ W8, 0x1
	0x0336D3EC STRB W8, [X20 + 0xED1]
	0x0336D3F0 LDR X0, [X19]
	0x0336D3F4 LDR W8, [X0 + 0xE0]
	0x0336D3F8 CBNZ W8, 0x336D400
	0x0336D3FC BL 0x1C16DFC
	0x0336D400 ADRP X20, 0x106F000
	0x0336D404 LDRB W8, [X20 + 0xAFE]
	0x0336D408 CBNZ W8, 0x336D420
	0x0336D40C ADRP X0, 0xDBA000
	0x0336D410 LDR X0, [X0 + 0x930]
	0x0336D414 BL 0x1C16CF4
	0x0336D418 MOVZ W8, 0x1
	0x0336D41C STRB W8, [X20 + 0xAFE]
	0x0336D420 LDR X0, [X19]
	0x0336D424 LDR W8, [X0 + 0xE0]
	0x0336D428 CBNZ W8, 0x336D434
	0x0336D42C BL 0x1C16DFC
	0x0336D430 LDR X0, [X19]
	0x0336D434 LDR X8, [X0 + 0xB8]
	0x0336D438 LDRB W8, [X8]
	0x0336D43C CBNZ W8, 0x336D468
	0x0336D440 ADRP X8, 0xDBB000
	0x0336D444 LDR X8, [X8 + 0x418]
	0x0336D448 LDR X0, [X8]
	0x0336D44C LDR W8, [X0 + 0xE0]
	0x0336D450 CBNZ W8, 0x336D458
	0x0336D454 BL 0x1C16DFC
	0x0336D458 LDP X20, X19, [X31 + 0x10]
	0x0336D45C MOV X0, X31
	0x0336D460 LDR X30, [X31], #0x20
	0x0336D464 B 0x333B4C8
	0x0336D468 ADRP X0, 0xDB1000
	0x0336D46C LDR X0, [X0 + 0xC50]
	0x0336D470 BL 0x1C16D08
	0x0336D474 BL 0x1C16F10
	0x0336D478 MOV X1, X31
	0x0336D47C MOV X19, X0
	0x0336D480 BL 0x338E344
	0x0336D484 ADRP X0, 0xDBD000
	0x0336D488 LDR X0, [X0 + 0xC60]
	0x0336D48C BL 0x1C16D08
	0x0336D490 MOV X1, X0
	0x0336D494 MOV X0, X19
	0x0336D498 BL 0x1C16DEC
	0x0336D49C STP X30, X25, [X31 - 0x40]!
	0x0336D4A0 STP X24, X23, [X31 + 0x10]
	0x0336D4A4 STP X22, X21, [X31 + 0x20]
	0x0336D4A8 STP X20, X19, [X31 + 0x30]
	0x0336D4AC ADRP X20, 0x106F000
	0x0336D4B0 LDRB W8, [X20 + 0xED2]
	0x0336D4B4 MOV X19, X0
	0x0336D4B8 TBNZ X8, 0x0, 0x336D4DC
	0x0336D4BC ADRP X0, 0xD88000
	0x0336D4C0 LDR X0, [X0 + 0x170]
	0x0336D4C4 BL 0x1C16CF4
	0x0336D4C8 ADRP X0, 0xDBB000
	0x0336D4CC LDR X0, [X0 + 0x4F0]
	0x0336D4D0 BL 0x1C16CF4
	0x0336D4D4 MOVZ W8, 0x1
	0x0336D4D8 STRB W8, [X20 + 0xED2]
	0x0336D4DC LDR W20, [X19 + 0x10]
	0x0336D4E0 LDR W8, [X19 + 0x8]
	0x0336D4E4 CMP W20, W8
	0x0336D4E8 B.CS 0x336D664
	0x0336D4EC LDR X8, [X19]
	0x0336D4F0 SXTW X9, W20
	0x0336D4F4 LDRH W8, [X8, X9, LSL #1]
	0x0336D4F8 CMP W8, 0x23
	0x0336D4FC B.EQ 0x336D550
	0x0336D500 CBNZ W8, 0x336D64C
	0x0336D504 ADRP X21, 0xDBB000
	0x0336D508 LDR X21, [X21 + 0x4F0]
	0x0336D50C LDR X0, [X21]
	0x0336D510 LDR W8, [X0 + 0xE0]
	0x0336D514 CBNZ W8, 0x336D51C
	0x0336D518 BL 0x1C16DFC
	0x0336D51C MOV X0, X19
	0x0336D520 MOV X1, X31
	0x0336D524 BL 0x33748E0
	0x0336D528 CMP W20, W0
	0x0336D52C B.GE 0x336D600
	0x0336D530 LDR W8, [X19 + 0x8]
	0x0336D534 CMP W20, W8
	0x0336D538 B.CS 0x336D664
	0x0336D53C LDR X8, [X19]
	0x0336D540 LDRH W8, [X8, W20, SXTW]
	0x0336D544 ADD W20, W20, 0x1
	0x0336D548 CBZ W8, 0x336D50C
	0x0336D54C B 0x336D64C
	0x0336D550 ADRP X23, 0xDBB000
	0x0336D554 ADRP X25, 0xD88000
	0x0336D558 LDR X23, [X23 + 0x4F0]
	0x0336D55C LDR X25, [X25 + 0x170]
	0x0336D560 MOV X21, X31
	0x0336D564 MOV W22, W31
	0x0336D568 MOV W24, W31
	0x0336D56C LDR X0, [X23]
	0x0336D570 LDR W8, [X0 + 0xE0]
	0x0336D574 CBNZ W8, 0x336D57C
	0x0336D578 BL 0x1C16DFC
	0x0336D57C MOV X0, X19
	0x0336D580 MOV X1, X31
	0x0336D584 BL 0x33748E0
	0x0336D588 CMP X21, W0, SXTW
	0x0336D58C B.GE 0x336D624
	0x0336D590 LDR W8, [X19 + 0x8]
	0x0336D594 CMP X21, X8
	0x0336D598 B.CS 0x336D664
	0x0336D59C LDR X8, [X19]
	0x0336D5A0 LDRH W20, [X8, X21, LSL #1]
	0x0336D5A4 CBZ W20, 0x336D5C4
	0x0336D5A8 CMP W20, 0x23
	0x0336D5AC B.NE 0x336D5D0
	0x0336D5B0 AND W8, W22, W24, 0x0
	0x0336D5B4 TBNZ X8, 0x0, 0x336D64C
	0x0336D5B8 ORR W22, W24, W22, 0x0
	0x0336D5BC MOVZ W24, 0x1
	0x0336D5C0 B 0x336D5F8
	0x0336D5C4 TBZ X22, 0x0, 0x336D64C
	0x0336D5C8 MOVZ W22, 0x1
	0x0336D5CC B 0x336D5F8
	0x0336D5D0 LDR X0, [X25]
	0x0336D5D4 LDR W8, [X0 + 0xE0]
	0x0336D5D8 CBNZ W8, 0x336D5E0
	0x0336D5DC BL 0x1C16DFC
	0x0336D5E0 MOV W0, W20
	0x0336D5E4 MOV X1, X31
	0x0336D5E8 BL 0x3317FCC
	0x0336D5EC BIC W8, W24, W22, 0x0
	0x0336D5F0 TBNZ X8, 0x0, 0x336D5F8
	0x0336D5F4 TBZ X0, 0x0, 0x336D64C
	0x0336D5F8 ADD X21, X21, 0x1
	0x0336D5FC B 0x336D56C
	0x0336D600 LDR X0, [X21]
	0x0336D604 LDR W8, [X0 + 0xE0]
	0x0336D608 CBNZ W8, 0x336D610
	0x0336D60C BL 0x1C16DFC
	0x0336D610 MOV X0, X19
	0x0336D614 MOV X1, X31
	0x0336D618 BL 0x33748E0
	0x0336D61C STR W0, [X19 + 0x10]
	0x0336D620 B 0x336D644
	0x0336D624 TBZ X22, 0x0, 0x336D64C
	0x0336D628 LDR X0, [X23]
	0x0336D62C LDR W8, [X0 + 0xE0]
	0x0336D630 CBNZ W8, 0x336D638
	0x0336D634 BL 0x1C16DFC
	0x0336D638 MOV X0, X19
	0x0336D63C MOV X1, X31
	0x0336D640 BL 0x3374A74
	0x0336D644 MOVZ W0, 0x1
	0x0336D648 B 0x336D650
	0x0336D64C MOV W0, W31
	0x0336D650 LDP X20, X19, [X31 + 0x30]
	0x0336D654 LDP X22, X21, [X31 + 0x20]
	0x0336D658 LDP X24, X23, [X31 + 0x10]
	0x0336D65C LDP X30, X25, [X31], #0x40
	0x0336D660 RET
	0x0336D664 BL 0x1C16F28
	0x0336D668 STR X30, [X31 - 0x60]!
	0x0336D66C STP X28, X27, [X31 + 0x10]
	0x0336D670 STP X26, X25, [X31 + 0x20]
	0x0336D674 STP X24, X23, [X31 + 0x30]
	0x0336D678 STP X22, X21, [X31 + 0x40]
	0x0336D67C STP X20, X19, [X31 + 0x50]
	0x0336D680 CBZ X0, 0x336D908
	0x0336D684 LDR W8, [X0 + 0x10]
	0x0336D688 MOV X19, X2
	0x0336D68C MOV X20, X0
	0x0336D690 CMP W8, 0x1
	0x0336D694 B.LT 0x336D854
	0x0336D698 MOV W21, W31
	0x0336D69C MOV W22, W31
	0x0336D6A0 MOV W26, W31
	0x0336D6A4 MOVN W23, 0x0
	0x0336D6A8 MOVN W24, 0x0
	0x0336D6AC MOVN W25, 0x0
	0x0336D6B0 MOV X0, X20
	0x0336D6B4 MOV W1, W21
	0x0336D6B8 MOV X2, X31
	0x0336D6BC BL 0x3222A1C
	0x0336D6C0 AND W8, W0, 0xFFFF
	0x0336D6C4 CMP W8, 0x26
	0x0336D6C8 B.GT 0x336D764
	0x0336D6CC CMP W8, 0x22
	0x0336D6D0 B.EQ 0x336D77C
	0x0336D6D4 CMP W8, 0x25
	0x0336D6D8 B.EQ 0x336D774
	0x0336D6DC TBNZ X22, 0x0, 0x336D780
	0x0336D6E0 AND W8, W0, 0xFFFF
	0x0336D6E4 CMP W8, 0x4D
	0x0336D6E8 B.EQ 0x336D7A8
	0x0336D6EC CMP W8, 0x79
	0x0336D6F0 B.EQ 0x336D7EC
	0x0336D6F4 CMP W8, 0x64
	0x0336D6F8 B.NE 0x336D830
	0x0336D6FC LDR W8, [X20 + 0x10]
	0x0336D700 ADD W1, W21, 0x1
	0x0336D704 CMP W1, W8
	0x0336D708 B.GE 0x336D838
	0x0336D70C MOV X0, X20
	0x0336D710 MOV X2, X31
	0x0336D714 BL 0x3222A1C
	0x0336D718 AND W8, W0, 0xFFFF
	0x0336D71C CMP W8, 0x64
	0x0336D720 B.NE 0x336D838
	0x0336D724 MOVZ W8, 0x2
	0x0336D728 LDR W9, [X20 + 0x10]
	0x0336D72C ADD W22, W21, W8
	0x0336D730 MOV W28, W8
	0x0336D734 CMP W22, W9
	0x0336D738 B.GE 0x336D75C
	0x0336D73C MOV X0, X20
	0x0336D740 MOV W1, W22
	0x0336D744 MOV X2, X31
	0x0336D748 BL 0x3222A1C
	0x0336D74C AND W8, W0, 0xFFFF
	0x0336D750 CMP W8, 0x64
	0x0336D754 ADD W8, W28, 0x1
	0x0336D758 B.EQ 0x336D728
	0x0336D75C SUB W21, W22, 0x1
	0x0336D760 B 0x336D83C
	0x0336D764 CMP W8, 0x27
	0x0336D768 B.EQ 0x336D77C
	0x0336D76C CMP W8, 0x5C
	0x0336D770 B.NE 0x336D6DC
	0x0336D774 ADD W21, W21, 0x1
	0x0336D778 B 0x336D784
	0x0336D77C TBNZ X22, 0x0, 0x336D6E0
	0x0336D780 MOVZ W22, 0x1
	0x0336D784 MOV W27, W26
	0x0336D788 CMP W27, 0x2
	0x0336D78C B.GT 0x336D860
	0x0336D790 LDR W8, [X20 + 0x10]
	0x0336D794 ADD W21, W21, 0x1
	0x0336D798 MOV W26, W27
	0x0336D79C CMP W21, W8
	0x0336D7A0 B.LT 0x336D6B0
	0x0336D7A4 B 0x336D860
	0x0336D7A8 ADD W27, W26, 0x1
	0x0336D7AC LDR W8, [X20 + 0x10]
	0x0336D7B0 MOV W24, W21
	0x0336D7B4 ADD W21, W21, 0x1
	0x0336D7B8 CMP W21, W8
	0x0336D7BC B.GE 0x336D7DC
	0x0336D7C0 MOV X0, X20
	0x0336D7C4 MOV W1, W21
	0x0336D7C8 MOV X2, X31
	0x0336D7CC BL 0x3222A1C
	0x0336D7D0 AND W8, W0, 0xFFFF
	0x0336D7D4 CMP W8, 0x4D
	0x0336D7D8 B.EQ 0x336D7AC
	0x0336D7DC MOV W22, W31
	0x0336D7E0 MOV W21, W24
	0x0336D7E4 MOV W24, W26
	0x0336D7E8 B 0x336D788
	0x0336D7EC ADD W27, W26, 0x1
	0x0336D7F0 LDR W8, [X20 + 0x10]
	0x0336D7F4 MOV W25, W21
	0x0336D7F8 ADD W21, W21, 0x1
	0x0336D7FC CMP W21, W8
	0x0336D800 B.GE 0x336D820
	0x0336D804 MOV X0, X20
	0x0336D808 MOV W1, W21
	0x0336D80C MOV X2, X31
	0x0336D810 BL 0x3222A1C
	0x0336D814 AND W8, W0, 0xFFFF
	0x0336D818 CMP W8, 0x79
	0x0336D81C B.EQ 0x336D7F0
	0x0336D820 MOV W22, W31
	0x0336D824 MOV W21, W25
	0x0336D828 MOV W25, W26
	0x0336D82C B 0x336D788
	0x0336D830 MOV W22, W31
	0x0336D834 B 0x336D784
	0x0336D838 MOVZ W28, 0x1
	0x0336D83C CMP W28, 0x3
	0x0336D840 CINC W27, W26, LT
	0x0336D844 CMP W28, 0x2
	0x0336D848 MOV W22, W31
	0x0336D84C CSEL W23, W23, W26, GT
	0x0336D850 B 0x336D788
	0x0336D854 MOVN W25, 0x0
	0x0336D858 MOVN W24, 0x0
	0x0336D85C MOVN W23, 0x0
	0x0336D860 CMP W23, 0x2
	0x0336D864 B.NE 0x336D87C
	0x0336D868 CMP W24, 0x1
	0x0336D86C B.NE 0x336D87C
	0x0336D870 CBNZ W25, 0x336D87C
	0x0336D874 MOV W9, W31
	0x0336D878 B 0x336D894
	0x0336D87C CMP W23, 0x1
	0x0336D880 B.NE 0x336D8BC
	0x0336D884 CBNZ W24, 0x336D8BC
	0x0336D888 CMP W25, 0x2
	0x0336D88C B.NE 0x336D8BC
	0x0336D890 MOVZ W9, 0x1
	0x0336D894 MOVZ W8, 0x1
	0x0336D898 STR W9, [X19]
	0x0336D89C LDP X20, X19, [X31 + 0x50]
	0x0336D8A0 LDP X22, X21, [X31 + 0x40]
	0x0336D8A4 LDP X24, X23, [X31 + 0x30]
	0x0336D8A8 LDP X26, X25, [X31 + 0x20]
	0x0336D8AC LDP X28, X27, [X31 + 0x10]
	0x0336D8B0 AND W0, W8, 0x1
	0x0336D8B4 LDR X30, [X31], #0x60
	0x0336D8B8 RET
	0x0336D8BC CBNZ W23, 0x336D8DC
	0x0336D8C0 CMP W24, 0x1
	0x0336D8C4 B.NE 0x336D8DC
	0x0336D8C8 CMP W25, 0x2
	0x0336D8CC B.NE 0x336D8DC
	0x0336D8D0 MOVZ W8, 0x1
	0x0336D8D4 MOVZ W9, 0x2
	0x0336D8D8 B 0x336D898
	0x0336D8DC CMP W23, 0x1
	0x0336D8E0 CSET W8, EQ
	0x0336D8E4 CMP W25, 0x0
	0x0336D8E8 CSET W9, EQ
	0x0336D8EC CMP W24, 0x2
	0x0336D8F0 AND W8, W8, W9, 0x0
	0x0336D8F4 CSET W9, EQ
	0x0336D8F8 ANDS W8, W9, W8, 0x0
	0x0336D8FC MOVZ W9, 0x3
	0x0336D900 CSINV W9, W9, W31, NE
	0x0336D904 B 0x336D898
	0x0336D908 BL 0x1C16F20
	0x0336D90C STR X30, [X31 - 0x50]!
	0x0336D910 STP X26, X25, [X31 + 0x10]
	0x0336D914 STP X24, X23, [X31 + 0x20]
	0x0336D918 STP X22, X21, [X31 + 0x30]
	0x0336D91C STP X20, X19, [X31 + 0x40]
	0x0336D920 CBZ X0, 0x336DAC4
	0x0336D924 LDR W8, [X0 + 0x10]
	0x0336D928 MOV X19, X2
	0x0336D92C MOV X20, X0
	0x0336D930 CMP W8, 0x1
	0x0336D934 B.LT 0x336DA64
	0x0336D938 MOV W21, W31
	0x0336D93C MOV W25, W31
	0x0336D940 MOV W24, W31
	0x0336D944 MOVN W22, 0x0
	0x0336D948 MOVN W23, 0x0
	0x0336D94C MOV X0, X20
	0x0336D950 MOV W1, W21
	0x0336D954 MOV X2, X31
	0x0336D958 BL 0x3222A1C
	0x0336D95C AND W8, W0, 0xFFFF
	0x0336D960 CMP W8, 0x26
	0x0336D964 B.GT 0x336D9D4
	0x0336D968 CMP W8, 0x22
	0x0336D96C B.EQ 0x336D9EC
	0x0336D970 CMP W8, 0x25
	0x0336D974 B.EQ 0x336D9E4
	0x0336D978 TBNZ X25, 0x0, 0x336D9F0
	0x0336D97C AND W8, W0, 0xFFFF
	0x0336D980 CMP W8, 0x4D
	0x0336D984 B.EQ 0x336D9F8
	0x0336D988 CMP W8, 0x79
	0x0336D98C B.NE 0x336DA3C
	0x0336D990 ADD W26, W24, 0x1
	0x0336D994 LDR W8, [X20 + 0x10]
	0x0336D998 MOV W23, W21
	0x0336D99C ADD W21, W21, 0x1
	0x0336D9A0 CMP W21, W8
	0x0336D9A4 B.GE 0x336D9C4
	0x0336D9A8 MOV X0, X20
	0x0336D9AC MOV W1, W21
	0x0336D9B0 MOV X2, X31
	0x0336D9B4 BL 0x3222A1C
	0x0336D9B8 AND W8, W0, 0xFFFF
	0x0336D9BC CMP W8, 0x79
	0x0336D9C0 B.EQ 0x336D994
	0x0336D9C4 MOV W25, W31
	0x0336D9C8 MOV W21, W23
	0x0336D9CC MOV W23, W24
	0x0336D9D0 B 0x336DA44
	0x0336D9D4 CMP W8, 0x27
	0x0336D9D8 B.EQ 0x336D9EC
	0x0336D9DC CMP W8, 0x5C
	0x0336D9E0 B.NE 0x336D978
	0x0336D9E4 ADD W21, W21, 0x1
	0x0336D9E8 B 0x336DA40
	0x0336D9EC TBNZ X25, 0x0, 0x336D97C
	0x0336D9F0 MOVZ W25, 0x1
	0x0336D9F4 B 0x336DA40
	0x0336D9F8 ADD W26, W24, 0x1
	0x0336D9FC LDR W8, [X20 + 0x10]
	0x0336DA00 MOV W22, W21
	0x0336DA04 ADD W21, W21, 0x1
	0x0336DA08 CMP W21, W8
	0x0336DA0C B.GE 0x336DA2C
	0x0336DA10 MOV X0, X20
	0x0336DA14 MOV W1, W21
	0x0336DA18 MOV X2, X31
	0x0336DA1C BL 0x3222A1C
	0x0336DA20 AND W8, W0, 0xFFFF
	0x0336DA24 CMP W8, 0x4D
	0x0336DA28 B.EQ 0x336D9FC
	0x0336DA2C MOV W25, W31
	0x0336DA30 MOV W21, W22
	0x0336DA34 MOV W22, W24
	0x0336DA38 B 0x336DA44
	0x0336DA3C MOV W25, W31
	0x0336DA40 MOV W26, W24
	0x0336DA44 CMP W26, 0x1
	0x0336DA48 B.GT 0x336DA6C
	0x0336DA4C LDR W8, [X20 + 0x10]
	0x0336DA50 ADD W21, W21, 0x1
	0x0336DA54 MOV W24, W26
	0x0336DA58 CMP W21, W8
	0x0336DA5C B.LT 0x336D94C
	0x0336DA60 B 0x336DA6C
	0x0336DA64 MOVN W23, 0x0
	0x0336DA68 MOVN W22, 0x0
	0x0336DA6C CMP W23, 0x0
	0x0336DA70 CSET W8, EQ
	0x0336DA74 CMP W22, 0x1
	0x0336DA78 CSET W9, EQ
	0x0336DA7C CMP W22, 0x0
	0x0336DA80 CSET W10, EQ
	0x0336DA84 CMP W23, 0x1
	0x0336DA88 CSET W11, EQ
	0x0336DA8C ANDS W10, W10, W11, 0x0
	0x0336DA90 MOVZ W11, 0x5
	0x0336DA94 CSINV W11, W11, W31, NE
	0x0336DA98 ANDS W8, W9, W8, 0x0
	0x0336DA9C MOVZ W9, 0x4
	0x0336DAA0 CSEL W9, W9, W11, NE
	0x0336DAA4 STR W9, [X19]
	0x0336DAA8 LDP X20, X19, [X31 + 0x40]
	0x0336DAAC LDP X22, X21, [X31 + 0x30]
	0x0336DAB0 LDP X24, X23, [X31 + 0x20]
	0x0336DAB4 LDP X26, X25, [X31 + 0x10]
	0x0336DAB8 ORR W0, W8, W10, 0x0
	0x0336DABC LDR X30, [X31], #0x50
	0x0336DAC0 RET
	0x0336DAC4 BL 0x1C16F20
	0x0336DAC8 STP X30, X27, [X31 - 0x50]!
	0x0336DACC STP X26, X25, [X31 + 0x10]
	0x0336DAD0 STP X24, X23, [X31 + 0x20]
	0x0336DAD4 STP X22, X21, [X31 + 0x30]
	0x0336DAD8 STP X20, X19, [X31 + 0x40]
	0x0336DADC CBZ X0, 0x336DCC0
	0x0336DAE0 LDR W8, [X0 + 0x10]
	0x0336DAE4 MOV X19, X2
	0x0336DAE8 MOV X20, X0
	0x0336DAEC CMP W8, 0x1
	0x0336DAF0 B.LT 0x336DC60
	0x0336DAF4 MOV W21, W31
	0x0336DAF8 MOV W22, W31
	0x0336DAFC MOV W25, W31
	0x0336DB00 MOVN W23, 0x0
	0x0336DB04 MOVN W24, 0x0
	0x0336DB08 MOV X0, X20
	0x0336DB0C MOV W1, W21
	0x0336DB10 MOV X2, X31
	0x0336DB14 BL 0x3222A1C
	0x0336DB18 AND W8, W0, 0xFFFF
	0x0336DB1C CMP W8, 0x26
	0x0336DB20 B.GT 0x336DBB4
	0x0336DB24 CMP W8, 0x22
	0x0336DB28 B.EQ 0x336DBCC
	0x0336DB2C CMP W8, 0x25
	0x0336DB30 B.EQ 0x336DBC4
	0x0336DB34 TBNZ X22, 0x0, 0x336DBD0
	0x0336DB38 AND W8, W0, 0xFFFF
	0x0336DB3C CMP W8, 0x4D
	0x0336DB40 B.EQ 0x336DBD8
	0x0336DB44 CMP W8, 0x64
	0x0336DB48 B.NE 0x336DC1C
	0x0336DB4C LDR W8, [X20 + 0x10]
	0x0336DB50 ADD W1, W21, 0x1
	0x0336DB54 CMP W1, W8
	0x0336DB58 B.GE 0x336DC44
	0x0336DB5C MOV X0, X20
	0x0336DB60 MOV X2, X31
	0x0336DB64 BL 0x3222A1C
	0x0336DB68 AND W8, W0, 0xFFFF
	0x0336DB6C CMP W8, 0x64
	0x0336DB70 B.NE 0x336DC44
	0x0336DB74 MOVZ W8, 0x2
	0x0336DB78 LDR W9, [X20 + 0x10]
	0x0336DB7C ADD W22, W21, W8
	0x0336DB80 MOV W27, W8
	0x0336DB84 CMP W22, W9
	0x0336DB88 B.GE 0x336DBAC
	0x0336DB8C MOV X0, X20
	0x0336DB90 MOV W1, W22
	0x0336DB94 MOV X2, X31
	0x0336DB98 BL 0x3222A1C
	0x0336DB9C AND W8, W0, 0xFFFF
	0x0336DBA0 CMP W8, 0x64
	0x0336DBA4 ADD W8, W27, 0x1
	0x0336DBA8 B.EQ 0x336DB78
	0x0336DBAC SUB W21, W22, 0x1
	0x0336DBB0 B 0x336DC48
	0x0336DBB4 CMP W8, 0x27
	0x0336DBB8 B.EQ 0x336DBCC
	0x0336DBBC CMP W8, 0x5C
	0x0336DBC0 B.NE 0x336DB34
	0x0336DBC4 ADD W21, W21, 0x1
	0x0336DBC8 B 0x336DC20
	0x0336DBCC TBNZ X22, 0x0, 0x336DB38
	0x0336DBD0 MOVZ W22, 0x1
	0x0336DBD4 B 0x336DC20
	0x0336DBD8 ADD W26, W25, 0x1
	0x0336DBDC LDR W8, [X20 + 0x10]
	0x0336DBE0 MOV W24, W21
	0x0336DBE4 ADD W21, W21, 0x1
	0x0336DBE8 CMP W21, W8
	0x0336DBEC B.GE 0x336DC0C
	0x0336DBF0 MOV X0, X20
	0x0336DBF4 MOV W1, W21
	0x0336DBF8 MOV X2, X31
	0x0336DBFC BL 0x3222A1C
	0x0336DC00 AND W8, W0, 0xFFFF
	0x0336DC04 CMP W8, 0x4D
	0x0336DC08 B.EQ 0x336DBDC
	0x0336DC0C MOV W22, W31
	0x0336DC10 MOV W21, W24
	0x0336DC14 MOV W24, W25
	0x0336DC18 B 0x336DC24
	0x0336DC1C MOV W22, W31
	0x0336DC20 MOV W26, W25
	0x0336DC24 CMP W26, 0x1
	0x0336DC28 B.GT 0x336DC68
	0x0336DC2C LDR W8, [X20 + 0x10]
	0x0336DC30 ADD W21, W21, 0x1
	0x0336DC34 MOV W25, W26
	0x0336DC38 CMP W21, W8
	0x0336DC3C B.LT 0x336DB08
	0x0336DC40 B 0x336DC68
	0x0336DC44 MOVZ W27, 0x1
	0x0336DC48 CMP W27, 0x3
	0x0336DC4C CINC W26, W25, LT
	0x0336DC50 CMP W27, 0x2
	0x0336DC54 MOV W22, W31
	0x0336DC58 CSEL W23, W23, W25, GT
	0x0336DC5C B 0x336DC24
	0x0336DC60 MOVN W24, 0x0
	0x0336DC64 MOVN W23, 0x0
	0x0336DC68 CMP W24, 0x0
	0x0336DC6C CSET W8, EQ
	0x0336DC70 CMP W23, 0x1
	0x0336DC74 CSET W9, EQ
	0x0336DC78 CMP W23, 0x0
	0x0336DC7C CSET W10, EQ
	0x0336DC80 CMP W24, 0x1
	0x0336DC84 CSET W11, EQ
	0x0336DC88 ANDS W10, W10, W11, 0x0
	0x0336DC8C MOVZ W11, 0x7
	0x0336DC90 CSINV W11, W11, W31, NE
	0x0336DC94 ANDS W8, W9, W8, 0x0
	0x0336DC98 MOVZ W9, 0x6
	0x0336DC9C CSEL W9, W9, W11, NE
	0x0336DCA0 STR W9, [X19]
	0x0336DCA4 LDP X20, X19, [X31 + 0x40]
	0x0336DCA8 LDP X22, X21, [X31 + 0x30]
	0x0336DCAC LDP X24, X23, [X31 + 0x20]
	0x0336DCB0 LDP X26, X25, [X31 + 0x10]
	0x0336DCB4 ORR W0, W8, W10, 0x0
	0x0336DCB8 LDP X30, X27, [X31], #0x50
	0x0336DCBC RET
	0x0336DCC0 BL 0x1C16F20
	0x0336DCC4 STR X30, [X31 - 0x20]!
	0x0336DCC8 STP X20, X19, [X31 + 0x10]
	0x0336DCCC MOV X19, X2
	0x0336DCD0 CMP W1, 0x63
	0x0336DCD4 B.GT 0x336DCF4
	0x0336DCD8 LDR X0, [X0 + 0x30]
	0x0336DCDC CBZ X0, 0x336DD08
	0x0336DCE0 LDR X8, [X0]
	0x0336DCE4 LDR X9, [X8 + 0x308]
	0x0336DCE8 LDR X2, [X8 + 0x310]
	0x0336DCEC BLR X9
	0x0336DCF0 MOV W1, W0
	0x0336DCF4 MOVZ W0, 0x1
	0x0336DCF8 STR W1, [X19]
	0x0336DCFC LDP X20, X19, [X31 + 0x10]
	0x0336DD00 LDR X30, [X31], #0x20
	0x0336DD04 RET
	0x0336DD08 BL 0x1C16F20
	0x0336DD0C B 0x336DD10
	0x0336DD10 MOV X20, X0
	0x0336DD14 CMP W1, 0x1
	0x0336DD18 B.NE 0x336DD7C
	0x0336DD1C MOV X0, X20
	0x0336DD20 BL 0x3EB1AD0
	0x0336DD24 MOV X20, X0
	0x0336DD28 ADRP X0, 0xD8E000
	0x0336DD2C LDR X0, [X0 + 0x760]
	0x0336DD30 BL 0x1C16D08
	0x0336DD34 LDR X8, [X20]
	0x0336DD38 LDR X1, [X8]
	0x0336DD3C BL 0x1C17270
	0x0336DD40 TBZ X0, 0x0, 0x336DD54
	0x0336DD44 BL 0x3EB1AE0
	0x0336DD48 MOV W0, W31
	0x0336DD4C MOVN W1, 0x0
	0x0336DD50 B 0x336DCF8
	0x0336DD54 MOVZ W0, 0x8
	0x0336DD58 BL 0x3EB1AF0
	0x0336DD5C LDR X8, [X20]
	0x0336DD60 STR X8, [X0]
	0x0336DD64 ADRP X1, 0xB47000
	0x0336DD68 ADD X1, X1, 0xE58
	0x0336DD6C MOV X2, X31
	0x0336DD70 BL 0x3EB1B00
	0x0336DD74 MOV X20, X0
	0x0336DD78 BL 0x3EB1AE0
	0x0336DD7C MOV X0, X20
	0x0336DD80 BL 0x1D2C690
	0x0336DD84 BL 0x1990590
	0x0336DD88 STP X30, X23, [X31 - 0x30]!
	0x0336DD8C STP X22, X21, [X31 + 0x10]
	0x0336DD90 STP X20, X19, [X31 + 0x20]
	0x0336DD94 MOV X21, X0
	0x0336DD98 LDR X0, [X0 + 0x30]
	0x0336DD9C CBZ X0, 0x336DDF4
	0x0336DDA0 LDR X8, [X0]
	0x0336DDA4 LDR W4, [X21 + 0x20]
	0x0336DDA8 MOV W19, W3
	0x0336DDAC MOV W20, W2
	0x0336DDB0 LDR X9, [X8 + 0x2D8]
	0x0336DDB4 LDR X5, [X8 + 0x2E0]
	0x0336DDB8 MOV W22, W1
	0x0336DDBC BLR X9
	0x0336DDC0 MOV W23, W0
	0x0336DDC4 TBZ X0, 0x0, 0x336DDE0
	0x0336DDC8 MOV X0, X21
	0x0336DDCC MOV W1, W22
	0x0336DDD0 MOV W2, W20
	0x0336DDD4 MOV W3, W19
	0x0336DDD8 MOV X4, X31
	0x0336DDDC BL 0x33766C4
	0x0336DDE0 LDP X20, X19, [X31 + 0x20]
	0x0336DDE4 LDP X22, X21, [X31 + 0x10]
	0x0336DDE8 AND W0, W23, 0x1
	0x0336DDEC LDP X30, X23, [X31], #0x30
	0x0336DDF0 RET
	0x0336DDF4 BL 0x1C16F20
	0x0336DDF8 STR X30, [X31 - 0x40]!
	0x0336DDFC STP X24, X23, [X31 + 0x10]
	0x0336DE00 STP X22, X21, [X31 + 0x20]
	0x0336DE04 STP X20, X19, [X31 + 0x30]
	0x0336DE08 ADRP X23, 0x106F000
	0x0336DE0C ADRP X24, 0xDBB000
	0x0336DE10 LDRB W8, [X23 + 0xED3]
	0x0336DE14 LDR X24, [X24 + 0x588]
	0x0336DE18 MOV W20, W3
	0x0336DE1C MOV W19, W2
	0x0336DE20 MOV W21, W1
	0x0336DE24 MOV X22, X0
	0x0336DE28 TBNZ X8, 0x0, 0x336DE40
	0x0336DE2C ADRP X0, 0xDBB000
	0x0336DE30 LDR X0, [X0 + 0x588]
	0x0336DE34 BL 0x1C16CF4
	0x0336DE38 MOVZ W8, 0x1
	0x0336DE3C STRB W8, [X23 + 0xED3]
	0x0336DE40 LDR X0, [X24]
	0x0336DE44 LDR W8, [X0 + 0xE0]
	0x0336DE48 CBNZ W8, 0x336DE50
	0x0336DE4C BL 0x1C16DFC
	0x0336DE50 MOV X0, X22
	0x0336DE54 MOV W1, W20
	0x0336DE58 MOV W2, W21
	0x0336DE5C MOV W3, W19
	0x0336DE60 LDP X20, X19, [X31 + 0x30]
	0x0336DE64 LDP X22, X21, [X31 + 0x20]
	0x0336DE68 LDP X24, X23, [X31 + 0x10]
	0x0336DE6C LDR X30, [X31], #0x40
	0x0336DE70 B 0x336DD88
	0x0336DE74 STR X30, [X31 - 0x40]!
	0x0336DE78 STP X24, X23, [X31 + 0x10]
	0x0336DE7C STP X22, X21, [X31 + 0x20]
	0x0336DE80 STP X20, X19, [X31 + 0x30]
	0x0336DE84 ADRP X23, 0x106F000
	0x0336DE88 ADRP X24, 0xDBB000
	0x0336DE8C LDRB W8, [X23 + 0xED4]
	0x0336DE90 LDR X24, [X24 + 0x588]
	0x0336DE94 MOV W21, W3
	0x0336DE98 MOV W20, W2
	0x0336DE9C MOV W19, W1
	0x0336DEA0 MOV X22, X0
	0x0336DEA4 TBNZ X8, 0x0, 0x336DEBC
	0x0336DEA8 ADRP X0, 0xDBB000
	0x0336DEAC LDR X0, [X0 + 0x588]
	0x0336DEB0 BL 0x1C16CF4
	0x0336DEB4 MOVZ W8, 0x1
	0x0336DEB8 STRB W8, [X23 + 0xED4]
	0x0336DEBC LDR X0, [X24]
	0x0336DEC0 LDR W8, [X0 + 0xE0]
	0x0336DEC4 CBNZ W8, 0x336DECC
	0x0336DEC8 BL 0x1C16DFC
	0x0336DECC MOV X0, X22
	0x0336DED0 MOV W1, W21
	0x0336DED4 MOV W2, W20
	0x0336DED8 MOV W3, W19
	0x0336DEDC LDP X20, X19, [X31 + 0x30]
	0x0336DEE0 LDP X22, X21, [X31 + 0x20]
	0x0336DEE4 LDP X24, X23, [X31 + 0x10]
	0x0336DEE8 LDR X30, [X31], #0x40
	0x0336DEEC B 0x336DD88
	0x0336DEF0 STR X30, [X31 - 0x40]!
	0x0336DEF4 STP X24, X23, [X31 + 0x10]
	0x0336DEF8 STP X22, X21, [X31 + 0x20]
	0x0336DEFC STP X20, X19, [X31 + 0x30]
	0x0336DF00 ADRP X23, 0x106F000
	0x0336DF04 ADRP X24, 0xDBB000
	0x0336DF08 LDRB W8, [X23 + 0xED5]
	0x0336DF0C LDR X24, [X24 + 0x588]
	0x0336DF10 MOV W20, W3
	0x0336DF14 MOV W19, W2
	0x0336DF18 MOV W21, W1
	0x0336DF1C MOV X22, X0
	0x0336DF20 TBNZ X8, 0x0, 0x336DF38
	0x0336DF24 ADRP X0, 0xDBB000
	0x0336DF28 LDR X0, [X0 + 0x588]
	0x0336DF2C BL 0x1C16CF4
	0x0336DF30 MOVZ W8, 0x1
	0x0336DF34 STRB W8, [X23 + 0xED5]
	0x0336DF38 LDR X0, [X24]
	0x0336DF3C LDR W8, [X0 + 0xE0]
	0x0336DF40 CBNZ W8, 0x336DF48
	0x0336DF44 BL 0x1C16DFC
	0x0336DF48 MOV X0, X22
	0x0336DF4C MOV W1, W21

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X25, 0x1070000
	012 Move [X31+28], W6
	013 Move X26, 0xDBC000
	014 Move W8, [X25+3791]
	015 Move X26, [X26+1264]
	016 Move X24, X5
	017 Move X20, X4
	018 Move X23, X3
	019 Move X19, X2
	020 Move X21, X1
	021 Move W22, W0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {49}
	026 Move X0, 0xD89000
	027 Move X0, [X0+368]
	028 Call 0x1C17CF4
	029 Move X0, 0xDBC000
	030 Move X0, [X0+808]
	031 Call 0x1C17CF4
	032 Move X0, 0xDBC000
	033 Move X0, [X0+1416]
	034 Call 0x1C17CF4
	035 Move X0, 0xDBB000
	036 Move X0, [X0+2352]
	037 Call 0x1C17CF4
	038 Move X0, 0xD87000
	039 Move X0, [X0+1880]
	040 Call 0x1C17CF4
	041 Move X0, 0xDBC000
	042 Move X0, [X0+1264]
	043 Call 0x1C17CF4
	044 Move X0, 0xDBE000
	045 Move X0, [X0+3144]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X25+3791], W8
	049 Move W8, 18
	050 Move [X31+24], W31
	051 Move [X31+8], X31
	052 NotImplemented "Instruction STRH not yet implemented."
	053 Move [X19], W8
	054 Move X0, [X26]
	055 Move X25, [X24]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Add X1, X31, 24
	061 Add X2, X31, 12
	062 Move X0, X21
	063 Move X3, X25
	064 Move X4, X31
	065 Call __DTString.GetRegularToken, X0, X1, X2, X3
	066 Move W8, [X31+24]
	067 Subtract W8, W8, 1
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X9, -41771008
	070 Add X9, X9, 1930
	071 NotImplemented "Instruction ADR not yet implemented."
	072 NotImplemented "Instruction LDRH not yet implemented."
	073 Add X10, X10, X11
	074 CallNoReturn X10
	075 Move W8, [X23+8]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move W8, [X31+12]
	078 Add W31, W8, 1
	079 NotImplemented "Instruction CMP not yet implemented."
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X0, [X26]
	082 Move W25, [X21+16]
	083 Move W8, [X0+224]
	084 Compare W8, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1C17DFC
	087 Move X0, X21
	088 Move X1, X31
	089 Call __DTString.get_Length, X0
	090 Subtract W8, W0, 1
	091 NotImplemented "Instruction CMP not yet implemented."
	092 NotImplemented "Instruction LDRSW not yet implemented."
	093 Move W9, [X21+8]
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X9, [X21]
	096 NotImplemented "Instruction LDRH not yet implemented."
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X8, 0xDBC000
	099 Move X8, [X8+1416]
	100 Add X25, X23, 32
	101 Move X0, [X8]
	102 Move W8, [X0+224]
	103 Compare W8, 0
	104 JumpIfNotEqual {106}
	105 Call 0x1C17DFC
	106 Move X0, X21
	107 Move X1, X25
	108 Call DateTimeParse.ParseFraction, X0, X1
	109 Move X0, [X26]
	110 Move W25, [X21+16]
	111 Move W8, [X0+224]
	112 Compare W8, 0
	113 JumpIfNotEqual {115}
	114 Call 0x1C17DFC
	115 Move X0, X21
	116 Move X1, X31
	117 Call __DTString.get_Length, X0
	118 Subtract W8, W0, 1
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move X8, 0xDBC000
	121 Move X8, [X8+1416]
	122 Move X0, [X8]
	123 Move W8, [X0+224]
	124 Compare W8, 0
	125 JumpIfNotEqual {127}
	126 Call 0x1C17DFC
	127 Move X0, X21
	128 Move X1, X20
	129 Call DateTimeParse.HandleTimeZone, X0, X1
	130 Move TEMP, X0
	131 And TEMP, TEMP, 1
	132 Compare TEMP, 1
	133 JumpIfNotEqual {632}
	134 Move W8, [X31+12]
	135 Move [X19+8], W8
	136 Move W9, [X31+24]
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move W9, [X23+16]
	139 Add W31, W9, 1
	140 Move [X23+16], W8
	141 Move X0, [X26]
	142 Move X24, [X24]
	143 Move W8, [X0+224]
	144 Compare W8, 0
	145 JumpIfNotEqual {147}
	146 Call 0x1C17DFC
	147 Add X2, X31, 8
	148 Add X3, X31, 4
	149 Move X0, X21
	150 Move X1, X24
	151 Move X4, X31
	152 Call __DTString.GetSeparatorToken, X0, X1, X2, X3
	153 NotImplemented "Instruction CMP not yet implemented."
	154 NotImplemented "Instruction CMP not yet implemented."
	155 NotImplemented "Instruction CMP not yet implemented."
	156 NotImplemented "Instruction CMP not yet implemented."
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Move X20, 0xDBC000
	159 Move X20, [X20+1416]
	160 Move X0, [X20]
	161 Move W8, [X0+224]
	162 Compare W8, 0
	163 JumpIfNotEqual {166}
	164 Call 0x1C17DFC
	165 Move X0, [X20]
	166 Move X8, [X0+184]
	167 Move X8, [X8+8]
	168 Compare X8, 0
	169 JumpIfEqual {800}
	170 Move W9, [X8+24]
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Move X23, W22
	173 Add X9, X8, X23
	174 Move X9, [X9+32]
	175 Compare X9, 0
	176 JumpIfEqual {800}
	177 Move W10, [X9+24]
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move W9, [X9+84]
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Move W9, [X0+224]
	182 Compare W9, 0
	183 JumpIfNotEqual {190}
	184 Call 0x1C17DFC
	185 Move X8, [X20]
	186 Move X8, [X8+184]
	187 Move X8, [X8+8]
	188 Compare X8, 0
	189 JumpIfEqual {800}
	190 Move W9, [X8+24]
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Add X8, X8, X23
	193 Move X8, [X8+32]
	194 Compare X8, 0
	195 JumpIfEqual {800}
	196 Move W9, [X8+24]
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Move W8, [X8+80]
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Move W8, [X23+28]
	201 Add W31, W8, 1
	202 Move W8, [X31+12]
	203 Move [X23+28], W8
	204 Move W1, [X31+12]
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Move X0, X23
	207 Move X2, X31
	208 Move [X19+8], W1
	209 Call DateTimeRawInfo.AddNumber, X0, X1
	210 Move X0, [X26]
	211 Move X23, [X24]
	212 Move W8, [X0+224]
	213 Compare W8, 0
	214 JumpIfNotEqual {216}
	215 Call 0x1C17DFC
	216 Add X2, X31, 8
	217 Add X3, X31, 4
	218 Move X0, X21
	219 Move X1, X23
	220 Move X4, X31
	221 Call __DTString.GetSeparatorToken, X0, X1, X2, X3
	222 NotImplemented "Instruction CMP not yet implemented."
	223 NotImplemented "Instruction CMP not yet implemented."
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Move X20, 0xDBC000
	226 Move X20, [X20+1416]
	227 Move X0, [X20]
	228 Move W8, [X0+224]
	229 Compare W8, 0
	230 JumpIfNotEqual {233}
	231 Call 0x1C17DFC
	232 Move X0, [X20]
	233 Move X8, [X0+184]
	234 Move X8, [X8+8]
	235 Compare X8, 0
	236 JumpIfEqual {800}
	237 Move W9, [X8+24]
	238 NotImplemented "Instruction CMP not yet implemented."
	239 Move W9, W22
	240 Move X23, W9
	241 Add X9, X8, X23
	242 Move X9, [X9+32]
	243 Compare X9, 0
	244 JumpIfEqual {800}
	245 Move W10, [X9+24]
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Move W9, [X9+48]
	248 NotImplemented "Instruction CMP not yet implemented."
	249 Move W9, [X0+224]
	250 Compare W9, 0
	251 JumpIfNotEqual {258}
	252 Call 0x1C17DFC
	253 Move X8, [X20]
	254 Move X8, [X8+184]
	255 Move X8, [X8+8]
	256 Compare X8, 0
	257 JumpIfEqual {800}
	258 Move W9, [X8+24]
	259 NotImplemented "Instruction CMP not yet implemented."
	260 Add X8, X8, X23
	261 Move X8, [X8+32]
	262 Compare X8, 0
	263 JumpIfEqual {800}
	264 Move W9, [X8+24]
	265 NotImplemented "Instruction CMP not yet implemented."
	266 Move W8, [X8+44]
	267 NotImplemented "Instruction CMP not yet implemented."
	268 Move W8, [X31+8]
	269 Move W9, 3
	270 Move W8, [X23+12]
	271 Add W31, W8, 1
	272 Move X0, [X26]
	273 Move X24, [X24]
	274 Move W8, [X0+224]
	275 Compare W8, 0
	276 JumpIfNotEqual {278}
	277 Call 0x1C17DFC
	278 Add X2, X31, 8
	279 Add X3, X31, 4
	280 Move X0, X21
	281 Move X1, X24
	282 Move X4, X31
	283 Call __DTString.GetSeparatorToken, X0, X1, X2, X3
	284 NotImplemented "Instruction CMP not yet implemented."
	285 NotImplemented "Instruction CMP not yet implemented."
	286 NotImplemented "Instruction CMP not yet implemented."
	287 NotImplemented "Instruction CMP not yet implemented."
	288 Move X20, 0xDBC000
	289 Move X20, [X20+1416]
	290 Move X0, [X20]
	291 Move W8, [X0+224]
	292 Compare W8, 0
	293 JumpIfNotEqual {296}
	294 Call 0x1C17DFC
	295 Move X0, [X20]
	296 Move X8, [X0+184]
	297 Move X8, [X8+8]
	298 Compare X8, 0
	299 JumpIfEqual {800}
	300 Move W9, [X8+24]
	301 NotImplemented "Instruction CMP not yet implemented."
	302 Move W9, W22
	303 Move X24, W9
	304 Add X9, X8, X24
	305 Move X9, [X9+32]
	306 Compare X9, 0
	307 JumpIfEqual {800}
	308 Move W10, [X9+24]
	309 NotImplemented "Instruction CMP not yet implemented."
	310 Move W9, [X9+64]
	311 NotImplemented "Instruction CMP not yet implemented."
	312 Move W9, [X0+224]
	313 Compare W9, 0
	314 JumpIfNotEqual {321}
	315 Call 0x1C17DFC
	316 Move X8, [X20]
	317 Move X8, [X8+184]
	318 Move X8, [X8+8]
	319 Compare X8, 0
	320 JumpIfEqual {800}
	321 Move W9, [X8+24]
	322 NotImplemented "Instruction CMP not yet implemented."
	323 Add X8, X8, X24
	324 Move X8, [X8+32]
	325 Compare X8, 0
	326 JumpIfEqual {800}
	327 Move W9, [X8+24]
	328 NotImplemented "Instruction CMP not yet implemented."
	329 Move W8, [X8+60]
	330 NotImplemented "Instruction CMP not yet implemented."
	331 Move W8, [X31+8]
	332 Move [X21+16], W8
	333 NotImplemented "Instruction LDRH not yet implemented."
	334 NotImplemented "Instruction STRH not yet implemented."
	335 Move X21, 0xDBB000
	336 Move X21, [X21+2352]
	337 Move X0, [X21]
	338 Move W8, [X0+224]
	339 Compare W8, 0
	340 JumpIfNotEqual {342}
	341 Call 0x1C17DFC
	342 Move X22, 0x1070000
	343 Move W8, [X22+2814]
	344 Compare W8, 0
	345 JumpIfNotEqual {351}
	346 Move X0, 0xDBB000
	347 Move X0, [X0+2352]
	348 Call 0x1C17CF4
	349 Move W8, 1
	350 Move [X22+2814], W8
	351 Move X0, [X21]
	352 Move W8, [X0+224]
	353 Compare W8, 0
	354 JumpIfNotEqual {357}
	355 Call 0x1C17DFC
	356 Move X0, [X21]
	357 Move X8, [X0+184]
	358 Move W8, [X8]
	359 Compare W8, 0
	360 JumpIfNotEqual {786}
	361 Move X8, 0xDBC000
	362 Move X8, [X8+1416]
	363 Move X0, [X8]
	364 Move W8, [X0+224]
	365 Compare W8, 0
	366 JumpIfNotEqual {368}
	367 Call 0x1C17DFC
	368 Call DateTimeParse.GetTaiwanCalendarDefaultInstance
	369 Move [X20+48], X0
	370 Move X8, 0xDBC000
	371 Move X8, [X8+808]
	372 Move X0, [X8]
	373 Move W8, [X0+224]
	374 Compare W8, 0
	375 JumpIfNotEqual {377}
	376 Call 0x1C17DFC
	377 Move X0, X31
	378 Call DateTimeFormatInfo.GetTaiwanCalendarDTFI
	379 Move [X19], W31
	380 Move X21, 0xDBB000
	381 Move X21, [X21+2352]
	382 Move X0, [X21]
	383 Move W8, [X0+224]
	384 Compare W8, 0
	385 JumpIfNotEqual {387}
	386 Call 0x1C17DFC
	387 Move X22, 0x1070000
	388 Move W8, [X22+2814]
	389 Compare W8, 0
	390 JumpIfNotEqual {396}
	391 Move X0, 0xDBB000
	392 Move X0, [X0+2352]
	393 Call 0x1C17CF4
	394 Move W8, 1
	395 Move [X22+2814], W8
	396 Move X0, [X21]
	397 Move W8, [X0+224]
	398 Compare W8, 0
	399 JumpIfNotEqual {402}
	400 Call 0x1C17DFC
	401 Move X0, [X21]
	402 Move X8, [X0+184]
	403 Move W8, [X8]
	404 Compare W8, 0
	405 JumpIfNotEqual {786}
	406 Move X8, 0xDBC000
	407 Move X8, [X8+1416]
	408 Move X0, [X8]
	409 Move W8, [X0+224]
	410 Compare W8, 0
	411 JumpIfNotEqual {413}
	412 Call 0x1C17DFC
	413 Call DateTimeParse.GetJapaneseCalendarDefaultInstance
	414 Move [X20+48], X0
	415 Move X8, 0xDBC000
	416 Move X8, [X8+808]
	417 Move X0, [X8]
	418 Move W8, [X0+224]
	419 Compare W8, 0
	420 JumpIfNotEqual {422}
	421 Call 0x1C17DFC
	422 Move X0, X31
	423 Call DateTimeFormatInfo.GetJapaneseCalendarDTFI
	424 Move [X24], X0
	425 Move W8, [X20+32]
	426 Add W31, W8, 1
	427 Move W8, [X31+12]
	428 Move W9, 16
	429 Move [X20+32], W8
	430 Move [X19], W9
	431 Move W8, [X23+20]
	432 Add W31, W8, 1
	433 Move W8, [X31+12]
	434 Move W9, 11
	435 Move [X23+20], W8
	436 Move W8, [X20+37]
	437 Move TEMP, X8
	438 And TEMP, TEMP, 1
	439 Compare TEMP, 1
	440 JumpIfEqual {629}
	441 Move W8, 15
	442 Move [X19], W8
	443 Move W8, [X20+36]
	444 Move [X20+40], X31
	445 Or W8, W8, 768
	446 Move [X20+36], W8
	447 Move X8, 0xD89000
	448 Move X8, [X8+368]
	449 NotImplemented "Instruction LDRH not yet implemented."
	450 Move X0, [X8]
	451 Move W8, [X0+224]
	452 Compare W8, 0
	453 JumpIfNotEqual {455}
	454 Call 0x1C17DFC
	455 Move W0, W19
	456 Move X1, X31
	457 Call Char.IsLetter, X0
	458 Move TEMP, X0
	459 And TEMP, TEMP, 1
	460 Compare TEMP, 1
	461 JumpIfNotEqual {496}
	462 Move X9, 0xD87000
	463 Move W8, [X21+16]
	464 Move X9, [X9+1880]
	465 Add X1, X31, 0
	466 Move [X31], W8
	467 Move X0, [X9]
	468 Call 0x1C17E04
	469 Move X8, 0xDBE000
	470 Move X8, [X8+3144]
	471 Move X3, X0
	472 Move W1, 6
	473 Move X0, X20
	474 Move X2, [X8]
	475 Move X4, X31
	476 Call DateTimeResult.SetFailure, X0, X1, X2, X3
	477 Move W8, [X23+16]
	478 Add W31, W8, 1
	479 Move [X23+16], W1
	480 Move X0, [X26]
	481 Move X23, [X24]
	482 Move W8, [X0+224]
	483 Compare W8, 0
	484 JumpIfNotEqual {486}
	485 Call 0x1C17DFC
	486 Add X2, X31, 8
	487 Add X3, X31, 4
	488 Move X0, X21
	489 Move X1, X23
	490 Move X4, X31
	491 Call __DTString.GetSeparatorToken, X0, X1, X2, X3
	492 NotImplemented "Instruction CMP not yet implemented."
	493 NotImplemented "Instruction CMP not yet implemented."
	494 NotImplemented "Instruction CMP not yet implemented."
	495 Move W8, 14
	496 NotImplemented "Instruction LDRH not yet implemented."
	497 NotImplemented "Instruction CMP not yet implemented."
	498 NotImplemented "Instruction CMP not yet implemented."
	499 Move W8, [X20+37]
	500 Move TEMP, X8
	501 And TEMP, TEMP, 1
	502 Compare TEMP, 1
	503 JumpIfEqual {616}
	504 Move X8, 0xDBC000
	505 Move X8, [X8+1416]
	506 Move W22, [X21+16]
	507 Add X19, X20, 40
	508 Move X0, [X8]
	509 Move W8, [X0+224]
	510 Compare W8, 0
	511 JumpIfNotEqual {513}
	512 Call 0x1C17DFC
	513 Move X0, X21
	514 Move X1, X19
	515 Call DateTimeParse.ParseTimeZone, X0, X1
	516 Move TEMP, X0
	517 And TEMP, TEMP, 1
	518 Compare TEMP, 1
	519 JumpIfNotEqual {615}
	520 Move W8, [X20+36]
	521 Or W8, W8, 256
	522 Move X0, [X26]
	523 Move X25, [X24]
	524 Move W8, [X0+224]
	525 Compare W8, 0
	526 JumpIfNotEqual {528}
	527 Call 0x1C17DFC
	528 Add X2, X31, 8
	529 Add X3, X31, 4
	530 Move X0, X21
	531 Move X1, X25
	532 Move X4, X31
	533 Call __DTString.GetSeparatorToken, X0, X1, X2, X3
	534 NotImplemented "Instruction CMP not yet implemented."
	535 NotImplemented "Instruction CMP not yet implemented."
	536 NotImplemented "Instruction CMP not yet implemented."
	537 NotImplemented "Instruction CMP not yet implemented."
	538 NotImplemented "Instruction CMP not yet implemented."
	539 Move X20, 0xDBC000
	540 Move X20, [X20+1416]
	541 Move X0, [X20]
	542 Move W8, [X0+224]
	543 Compare W8, 0
	544 JumpIfNotEqual {547}
	545 Call 0x1C17DFC
	546 Move X0, [X20]
	547 Move X8, [X0+184]
	548 Move X8, [X8+8]
	549 Compare X8, 0
	550 JumpIfEqual {800}
	551 Move W9, [X8+24]
	552 NotImplemented "Instruction CMP not yet implemented."
	553 Move W9, W22
	554 Move X24, W9
	555 Add X9, X8, X24
	556 Move X9, [X9+32]
	557 Compare X9, 0
	558 JumpIfEqual {800}
	559 Move W10, [X9+24]
	560 NotImplemented "Instruction CMP not yet implemented."
	561 Move W9, [X9+48]
	562 NotImplemented "Instruction CMP not yet implemented."
	563 Move W9, [X0+224]
	564 Compare W9, 0
	565 JumpIfNotEqual {572}
	566 Call 0x1C17DFC
	567 Move X8, [X20]
	568 Move X8, [X8+184]
	569 Move X8, [X8+8]
	570 Compare X8, 0
	571 JumpIfEqual {800}
	572 Move W9, [X8+24]
	573 NotImplemented "Instruction CMP not yet implemented."
	574 Add X8, X8, X24
	575 Move X8, [X8+32]
	576 Compare X8, 0
	577 JumpIfEqual {800}
	578 Move W9, [X8+24]
	579 NotImplemented "Instruction CMP not yet implemented."
	580 Move W8, [X8+44]
	581 NotImplemented "Instruction CMP not yet implemented."
	582 Move W8, 4
	583 NotImplemented "Instruction CMP not yet implemented."
	584 NotImplemented "Instruction CMP not yet implemented."
	585 Move W8, 4
	586 NotImplemented "Instruction CMP not yet implemented."
	587 NotImplemented "Instruction CMP not yet implemented."
	588 NotImplemented "Instruction CMP not yet implemented."
	589 NotImplemented "Instruction CMP not yet implemented."
	590 Move X8, [X24]
	591 Compare X8, 0
	592 JumpIfEqual {801}
	593 Move X0, [X8+120]
	594 Compare X0, 0
	595 JumpIfEqual {802}
	596 Move X8, [X0]
	597 Move W1, [X31+12]
	598 Move X9, [X8+776]
	599 Move X2, [X8+784]
	600 NotImplemented "Instruction BLR not yet implemented."
	601 Move X8, -42459136
	602 Move V0, [X8+472]
	603 Move [X19+8], W0
	604 Move [X19], D0
	605 NotImplemented "Instruction CMP not yet implemented."
	606 NotImplemented "Instruction CMP not yet implemented."
	607 Move W8, 7
	608 NotImplemented "Instruction CMP not yet implemented."
	609 NotImplemented "Instruction CMP not yet implemented."
	610 NotImplemented "Instruction CMP not yet implemented."
	611 NotImplemented "Instruction CMP not yet implemented."
	612 NotImplemented "Instruction CMP not yet implemented."
	613 NotImplemented "Instruction CMP not yet implemented."
	614 Move W8, 1
	615 Move [X21+16], W22
	616 Move X8, 0xDBC000
	617 Move X8, [X8+1416]
	618 Move X0, [X8]
	619 Move W8, [X0+224]
	620 Compare W8, 0
	621 JumpIfNotEqual {623}
	622 Call 0x1C17DFC
	623 Move X0, X21
	624 Call DateTimeParse.VerifyValidPunctuation, X0
	625 Move TEMP, X0
	626 And TEMP, TEMP, 1
	627 Compare TEMP, 1
	628 JumpIfEqual {774}
	629 Move X0, X20
	630 Move X1, X31
	631 Call DateTimeResult.SetBadDateTimeFailure, X0
	632 Move W0, W31
	633 NotImplemented "Instruction CMP not yet implemented."
	634 NotImplemented "Instruction CMP not yet implemented."
	635 NotImplemented "Instruction CMP not yet implemented."
	636 NotImplemented "Instruction CMP not yet implemented."
	637 Move W8, [X23+40]
	638 Compare W8, 0
	639 JumpIfEqual {629}
	640 Move W8, 13
	641 Move W8, 6
	642 Or W8, W0, 256
	643 NotImplemented "Instruction CMP not yet implemented."
	644 Move W8, 10
	645 NotImplemented "Instruction CMP not yet implemented."
	646 NotImplemented "Instruction CMP not yet implemented."
	647 Move X23, 0xDBC000
	648 Move X23, [X23+1416]
	649 Move X0, [X23]
	650 Move W8, [X0+224]
	651 Compare W8, 0
	652 JumpIfNotEqual {655}
	653 Call 0x1C17DFC
	654 Move X0, [X23]
	655 Move X8, [X0+184]
	656 Move X8, [X8+8]
	657 Compare X8, 0
	658 JumpIfEqual {800}
	659 Move W9, [X8+24]
	660 NotImplemented "Instruction CMP not yet implemented."
	661 Add X8, X8, W22
	662 Move X8, [X8+32]
	663 Compare X8, 0
	664 JumpIfEqual {800}
	665 Move W9, [X8+24]
	666 NotImplemented "Instruction CMP not yet implemented."
	667 Move W8, [X8+80]
	668 NotImplemented "Instruction CMP not yet implemented."
	669 Move W8, [X31+8]
	670 Move W9, 12
	671 Move [X21+16], W8
	672 NotImplemented "Instruction LDRH not yet implemented."
	673 NotImplemented "Instruction STRH not yet implemented."
	674 Move W8, [X23+40]
	675 Compare W8, 0
	676 JumpIfEqual {629}
	677 Move W8, 8
	678 Move [X19], W8
	679 Move W8, [X31+12]
	680 Move [X23+12], W8
	681 Move W8, [X23+28]
	682 Add W31, W8, 1
	683 NotImplemented "Instruction CMP not yet implemented."
	684 Move W8, 2
	685 NotImplemented "Instruction CSET not yet implemented."
	686 NotImplemented "Instruction CMP not yet implemented."
	687 Move [X23+28], W9
	688 Move [X19], W8
	689 Move X8, 0xDBC000
	690 Move X8, [X8+1416]
	691 Move X24, [X24]
	692 Move X0, [X8]
	693 Move W8, [X0+224]
	694 Compare W8, 0
	695 JumpIfNotEqual {697}
	696 Call 0x1C17DFC
	697 Add X3, X31, 28
	698 Move W0, 21
	699 Move X2, X20
	700 Move X4, X23
	701 Move X5, X24
	702 Call DateTimeParse.ProcessTerminalState, X0, X1, X2, X3, X4, X5
	703 Move TEMP, X0
	704 And TEMP, TEMP, 1
	705 Compare TEMP, 1
	706 JumpIfNotEqual {632}
	707 Move W1, [X19+8]
	708 Move X0, X23
	709 Move X2, X31
	710 Call DateTimeRawInfo.AddNumber, X0, X1
	711 And W8, W22, 0xFFFFFFFE
	712 NotImplemented "Instruction CMP not yet implemented."
	713 Move X8, 0xDBC000
	714 Move X8, [X8+1416]
	715 Move X0, [X8]
	716 Move W8, [X0+224]
	717 Compare W8, 0
	718 JumpIfNotEqual {720}
	719 Call 0x1C17DFC
	720 Move X0, X21
	721 Move X1, X20
	722 Call DateTimeParse.HandleTimeZone, X0, X1
	723 Move TEMP, X0
	724 And TEMP, TEMP, 1
	725 Compare TEMP, 1
	726 JumpIfNotEqual {632}
	727 NotImplemented "Instruction CMP not yet implemented."
	728 NotImplemented "Instruction CMP not yet implemented."
	729 NotImplemented "Instruction CMP not yet implemented."
	730 Move W8, 9
	731 Move [X19], W8
	732 Move [X19+4], W0
	733 NotImplemented "Instruction CMP not yet implemented."
	734 NotImplemented "Instruction CMP not yet implemented."
	735 NotImplemented "Instruction CMP not yet implemented."
	736 Move W8, [X23+28]
	737 Add W31, W8, 1
	738 Move X0, X20
	739 Move X1, X31
	740 Call DateTimeResult.SetBadDateTimeFailure, X0
	741 Move W8, 12
	742 Move [X19], W8
	743 Move W1, [X19+8]
	744 Move W8, 3
	745 Move W1, [X19+8]
	746 Move W8, 1
	747 NotImplemented "Instruction CMP not yet implemented."
	748 NotImplemented "Instruction CMP not yet implemented."
	749 Move W1, [X19+8]
	750 Move W8, 19
	751 Subtract W8, W22, 11
	752 NotImplemented "Instruction CMP not yet implemented."
	753 Move W8, [X23+40]
	754 Compare W8, 0
	755 JumpIfEqual {758}
	756 Move W1, [X19+8]
	757 Move W8, 4
	758 Move W1, [X19+8]
	759 Move W8, 5
	760 NotImplemented "Instruction CMP not yet implemented."
	761 NotImplemented "Instruction CSET not yet implemented."
	762 Move W8, 12
	763 Move [X23+28], W9
	764 Move W8, [X31+8]
	765 Move [X21+16], W8
	766 NotImplemented "Instruction LDRH not yet implemented."
	767 NotImplemented "Instruction STRH not yet implemented."
	768 Move W8, 3
	769 Move W1, [X19+8]
	770 Move X0, X23
	771 Move X2, X31
	772 Move [X19], W8
	773 Call DateTimeRawInfo.AddNumber, X0, X1
	774 Move W0, 1
	775 Move X20, [X31+80]
	776 Move X19, [X31+88]
	777 Move X22, [X31+64]
	778 Move X21, [X31+72]
	779 Move X24, [X31+48]
	780 Move X23, [X31+56]
	781 Move X26, [X31+32]
	782 Move X25, [X31+40]
	783 Move X30, [X31+16]
	784 Add X31, X31, 96
	785 Return X0
	786 Move X0, 0xDB2000
	787 Move X0, [X0+3152]
	788 Call 0x1C17D08
	789 Call 0x1C17F10
	790 Move X1, X31
	791 Move X19, X0
	792 Call PlatformNotSupportedException..ctor, X0
	793 Move X0, 0xDBE000
	794 Move X0, [X0+3152]
	795 Call 0x1C17D08
	796 Move X1, X0
	797 Move X0, X19
	798 Call 0x1C17DEC
	799 Call 0x1C17F28
	800 Call 0x1C17F20
	801 Call 0x1C17F20
	802 Call 0x1C17F20
	803 Move X19, X0
	804 NotImplemented "Instruction CMP not yet implemented."
	805 Move X0, X19
	806 Call 0x3EB2AD0
	807 Move X19, X0
	808 Move X0, 0xD8F000
	809 Move X0, [X0+1888]
	810 Call 0x1C17D08
	811 Move X8, [X19]
	812 Move X1, [X8]
	813 Call 0x1C18270
	814 Move TEMP, X0
	815 And TEMP, TEMP, 1
	816 Compare TEMP, 1
	817 JumpIfNotEqual {819}
	818 Call 0x3EB2AE0
	819 Move W0, 8
	820 Call 0x3EB2AF0
	821 Move X8, [X19]
	822 Move [X0], X8
	823 Move X1, 0xB48000
	824 Add X1, X1, 3672
	825 Move X2, X31
	826 Call 0x3EB2B00
	827 Move X19, X0
	828 Call 0x3EB2AE0
	829 Move X0, X19
	830 Call 0x1D2D690
	831 Call 0x1991590

Method: System.Globalization.Calendar GetJapaneseCalendarDefaultInstance()

Disassembly:
	0x0336E2CC TBNZ X8, 0x7, 0x336E500
	0x0336E2D0 MOV X0, X22
	0x0336E2D4 MOV W1, W31
	0x0336E2D8 MOV X2, X31
	0x0336E2DC BL 0x3376694
	0x0336E2E0 MOV W21, W0
	0x0336E2E4 MOVZ W1, 0x1
	0x0336E2E8 MOV X0, X22
	0x0336E2EC MOV X2, X31
	0x0336E2F0 BL 0x3376694
	0x0336E2F4 MOV W20, W0
	0x0336E2F8 MOVZ W1, 0x2
	0x0336E2FC MOV X0, X22
	0x0336E300 MOV X2, X31
	0x0336E304 BL 0x3376694
	0x0336E308 CBZ X23, 0x336E528
	0x0336E30C MOV W22, W0
	0x0336E310 MOV X0, X23
	0x0336E314 MOV X1, X31
	0x0336E318 BL 0x332569C
	0x0336E31C ADRP X25, 0xDBA000
	0x0336E320 LDR X25, [X25 + 0x588]
	0x0336E324 MOV X24, X0
	0x0336E328 LDR X8, [X25]
	0x0336E32C LDR W9, [X8 + 0xE0]
	0x0336E330 CBNZ W9, 0x336E33C
	0x0336E334 MOV X0, X8
	0x0336E338 BL 0x1C16DFC
	0x0336E33C ADD X2, X31, 0xC
	0x0336E340 MOV X0, X24
	0x0336E344 BL 0x336D668
	0x0336E348 TBZ X0, 0x0, 0x336E3C4
	0x0336E34C LDR W8, [X31 + 0xC]
	0x0336E350 CMP W8, 0x3
	0x0336E354 B.HI 0x336E500
	0x0336E358 ADRP X9, 0xFFFFFFFFFD828000
	0x0336E35C ADD X9, X9, 0x7B8
	0x0336E360 ADR X10, 0x10
	0x0336E364 LDRB W11, [X9, X8, LSL]
	0x0336E368 ADD X10, X10, X11, 0x2, LSL
	0x0336E36C BR X10
	0x0336E370 LDR X0, [X25]
	0x0336E374 LDR W8, [X0 + 0xE0]
	0x0336E378 CBNZ W8, 0x336E380
	0x0336E37C BL 0x1C16DFC
	0x0336E380 ADD X2, X31, 0x8
	0x0336E384 MOV X0, X19
	0x0336E388 MOV W1, W21
	0x0336E38C BL 0x336DCC4
	0x0336E390 TBZ X0, 0x0, 0x336E500
	0x0336E394 LDR X0, [X25]
	0x0336E398 LDR W21, [X31 + 0x8]
	0x0336E39C LDR W8, [X0 + 0xE0]
	0x0336E3A0 CBNZ W8, 0x336E3A8
	0x0336E3A4 BL 0x1C16DFC
	0x0336E3A8 MOV X0, X19
	0x0336E3AC MOV W1, W21
	0x0336E3B0 MOV W2, W20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x106F000
	005 Move X19, 0xDBA000
	006 Move W8, [X20+3792]
	007 Move X19, [X19+2352]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0xDBA000
	013 Move X0, [X0+2352]
	014 Call 0x1C17CF4
	015 Move X0, 0xDBB000
	016 Move X0, [X0+1032]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3792], W8
	020 Move X0, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X20, 0x106F000
	026 Move W8, [X20+2814]
	027 Compare W8, 0
	028 JumpIfNotEqual {34}
	029 Move X0, 0xDBA000
	030 Move X0, [X0+2352]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+2814], W8
	034 Move X0, [X19]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {40}
	038 Call 0x1C17DFC
	039 Move X0, [X19]
	040 Move X8, [X0+184]
	041 Move W8, [X8]
	042 Compare W8, 0
	043 JumpIfNotEqual {57}
	044 Move X8, 0xDBB000
	045 Move X8, [X8+1032]
	046 Move X0, [X8]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X0, X31
	054 Move X30, [X31+32]
	055 Call JapaneseCalendar.GetDefaultInstance
	056 Return X0
	057 Move X0, 0xDB1000
	058 Move X0, [X0+3152]
	059 Call 0x1C17D08
	060 Call 0x1C17F10
	061 Move X1, X31
	062 Move X19, X0
	063 Call PlatformNotSupportedException..ctor, X0
	064 Move X0, 0xDBD000
	065 Move X0, [X0+3160]
	066 Call 0x1C17D08
	067 Move X1, X0
	068 Move X0, X19
	069 Call 0x1C17DEC

Method: System.Globalization.Calendar GetTaiwanCalendarDefaultInstance()

Disassembly:
	0x0336E3B4 MOV W3, W22
	0x0336E3B8 BL 0x336DD88
	0x0336E3BC TBNZ X0, 0x0, 0x336E4EC
	0x0336E3C0 B 0x336E500
	0x0336E3C4 MOV X0, X23
	0x0336E3C8 MOV X1, X31
	0x0336E3CC BL 0x332569C
	0x0336E3D0 ADRP X8, 0xDBC000
	0x0336E3D4 LDR X8, [X8 + 0xC68]
	0x0336E3D8 MOV X3, X0
	0x0336E3DC MOVZ W1, 0x3
	0x0336E3E0 MOV X0, X19
	0x0336E3E4 LDR X2, [X8]
	0x0336E3E8 MOV X4, X31
	0x0336E3EC BL 0x3376824
	0x0336E3F0 B 0x336E50C
	0x0336E3F4 LDR X0, [X25]
	0x0336E3F8 LDR W8, [X0 + 0xE0]
	0x0336E3FC CBNZ W8, 0x336E404
	0x0336E400 BL 0x1C16DFC
	0x0336E404 ADD X2, X31, 0x8
	0x0336E408 MOV X0, X19
	0x0336E40C MOV W1, W22
	0x0336E410 BL 0x336DCC4
	0x0336E414 TBZ X0, 0x0, 0x336E500
	0x0336E418 LDR X0, [X25]
	0x0336E41C LDR W22, [X31 + 0x8]
	0x0336E420 LDR W8, [X0 + 0xE0]
	0x0336E424 CBNZ W8, 0x336E42C
	0x0336E428 BL 0x1C16DFC
	0x0336E42C MOV X0, X19
	0x0336E430 MOV W1, W21
	0x0336E434 MOV W2, W20
	0x0336E438 MOV W3, W22
	0x0336E43C BL 0x336DDF8
	0x0336E440 TBNZ X0, 0x0, 0x336E4EC
	0x0336E444 B 0x336E500
	0x0336E448 LDR X0, [X25]
	0x0336E44C LDR W8, [X0 + 0xE0]
	0x0336E450 CBNZ W8, 0x336E458
	0x0336E454 BL 0x1C16DFC
	0x0336E458 ADD X2, X31, 0x8
	0x0336E45C MOV X0, X19
	0x0336E460 MOV W1, W22
	0x0336E464 BL 0x336DCC4
	0x0336E468 TBZ X0, 0x0, 0x336E500
	0x0336E46C LDR X0, [X25]
	0x0336E470 LDR W22, [X31 + 0x8]
	0x0336E474 LDR W8, [X0 + 0xE0]
	0x0336E478 CBNZ W8, 0x336E480
	0x0336E47C BL 0x1C16DFC
	0x0336E480 MOV X0, X19
	0x0336E484 MOV W1, W21
	0x0336E488 MOV W2, W20
	0x0336E48C MOV W3, W22
	0x0336E490 BL 0x336DE74
	0x0336E494 TBNZ X0, 0x0, 0x336E4EC
	0x0336E498 B 0x336E500

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x106F000
	005 Move X19, 0xDBA000
	006 Move W8, [X20+3793]
	007 Move X19, [X19+2352]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0xDBA000
	013 Move X0, [X0+2352]
	014 Call 0x1C17CF4
	015 Move X0, 0xDBB000
	016 Move X0, [X0+1048]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3793], W8
	020 Move X0, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X20, 0x106F000
	026 Move W8, [X20+2814]
	027 Compare W8, 0
	028 JumpIfNotEqual {34}
	029 Move X0, 0xDBA000
	030 Move X0, [X0+2352]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+2814], W8
	034 Move X0, [X19]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {40}
	038 Call 0x1C17DFC
	039 Move X0, [X19]
	040 Move X8, [X0+184]
	041 Move W8, [X8]
	042 Compare W8, 0
	043 JumpIfNotEqual {57}
	044 Move X8, 0xDBB000
	045 Move X8, [X8+1048]
	046 Move X0, [X8]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X0, X31
	054 Move X30, [X31+32]
	055 Call TaiwanCalendar.GetDefaultInstance
	056 Return X0
	057 Move X0, 0xDB1000
	058 Move X0, [X0+3152]
	059 Call 0x1C17D08
	060 Call 0x1C17F10
	061 Move X1, X31
	062 Move X19, X0
	063 Call PlatformNotSupportedException..ctor, X0
	064 Move X0, 0xDBD000
	065 Move X0, [X0+3168]
	066 Call 0x1C17D08
	067 Move X1, X0
	068 Move X0, X19
	069 Call 0x1C17DEC

Method: System.Boolean VerifyValidPunctuation(ref System.__DTString str)

Disassembly:
	0x0336E49C LDR X0, [X25]
	0x0336E4A0 LDR W8, [X0 + 0xE0]
	0x0336E4A4 CBNZ W8, 0x336E4AC
	0x0336E4A8 BL 0x1C16DFC
	0x0336E4AC ADD X2, X31, 0x8
	0x0336E4B0 MOV X0, X19
	0x0336E4B4 MOV W1, W21
	0x0336E4B8 BL 0x336DCC4
	0x0336E4BC TBZ X0, 0x0, 0x336E500
	0x0336E4C0 LDR X0, [X25]
	0x0336E4C4 LDR W21, [X31 + 0x8]
	0x0336E4C8 LDR W8, [X0 + 0xE0]
	0x0336E4CC CBNZ W8, 0x336E4D4
	0x0336E4D0 BL 0x1C16DFC
	0x0336E4D4 MOV X0, X19
	0x0336E4D8 MOV W1, W21
	0x0336E4DC MOV W2, W20
	0x0336E4E0 MOV W3, W22
	0x0336E4E4 BL 0x336DEF0
	0x0336E4E8 TBZ X0, 0x0, 0x336E500
	0x0336E4EC LDR W8, [X19 + 0x24]
	0x0336E4F0 MOVZ W0, 0x1
	0x0336E4F4 ORR W8, W8, 0x80
	0x0336E4F8 STR W8, [X19 + 0x24]
	0x0336E4FC B 0x336E510
	0x0336E500 MOV X0, X19
	0x0336E504 MOV X1, X31
	0x0336E508 BL 0x33767C8
	0x0336E50C MOV W0, W31
	0x0336E510 LDP X20, X19, [X31 + 0x40]
	0x0336E514 LDP X22, X21, [X31 + 0x30]
	0x0336E518 LDP X24, X23, [X31 + 0x20]
	0x0336E51C LDP X30, X25, [X31 + 0x10]
	0x0336E520 ADD X31, X31, 0x50
	0x0336E524 RET
	0x0336E528 BL 0x1C16F20
	0x0336E52C SUB X31, X31, 0x50
	0x0336E530 STR X30, [X31 + 0x10]
	0x0336E534 STP X24, X23, [X31 + 0x20]
	0x0336E538 STP X22, X21, [X31 + 0x30]
	0x0336E53C STP X20, X19, [X31 + 0x40]
	0x0336E540 ADRP X23, 0x106E000
	0x0336E544 LDRB W8, [X23 + 0xED9]
	0x0336E548 MOV X22, X3
	0x0336E54C MOV X20, X2
	0x0336E550 MOV X21, X1
	0x0336E554 MOV X19, X0
	0x0336E558 TBNZ X8, 0x0, 0x336E57C
	0x0336E55C ADRP X0, 0xDBA000
	0x0336E560 LDR X0, [X0 + 0x588]
	0x0336E564 BL 0x1C16CF4
	0x0336E568 ADRP X0, 0xDBC000
	0x0336E56C LDR X0, [X0 + 0xC68]
	0x0336E570 BL 0x1C16CF4
	0x0336E574 MOVZ W8, 0x1
	0x0336E578 STRB W8, [X23 + 0xED9]
	0x0336E57C STR X31, [X31 + 0x18]
	0x0336E580 STR W31, [X31 + 0xC]
	0x0336E584 LDRB W8, [X19 + 0x24]
	0x0336E588 TBNZ X8, 0x7, 0x336E6F0
	0x0336E58C CBZ X22, 0x336E74C
	0x0336E590 MOV X0, X22
	0x0336E594 MOV X1, X31
	0x0336E598 BL 0x33255DC
	0x0336E59C ADRP X24, 0xDBA000
	0x0336E5A0 LDR X24, [X24 + 0x588]
	0x0336E5A4 MOV X23, X0
	0x0336E5A8 LDR X8, [X24]
	0x0336E5AC LDR W9, [X8 + 0xE0]
	0x0336E5B0 CBNZ W9, 0x336E5BC
	0x0336E5B4 MOV X0, X8
	0x0336E5B8 BL 0x1C16DFC
	0x0336E5BC ADD X2, X31, 0x1C
	0x0336E5C0 MOV X0, X23
	0x0336E5C4 BL 0x336DAC8
	0x0336E5C8 TBZ X0, 0x0, 0x336E68C
	0x0336E5CC LDR W8, [X31 + 0x1C]
	0x0336E5D0 CMP W8, 0x7
	0x0336E5D4 B.NE 0x336E69C
	0x0336E5D8 MOV X0, X22
	0x0336E5DC MOV X1, X31
	0x0336E5E0 BL 0x3325AC0
	0x0336E5E4 LDR X8, [X24]
	0x0336E5E8 MOV X23, X0
	0x0336E5EC LDR W9, [X8 + 0xE0]
	0x0336E5F0 CBNZ W9, 0x336E5FC
	0x0336E5F4 MOV X0, X8
	0x0336E5F8 BL 0x1C16DFC
	0x0336E5FC ADD X2, X31, 0x18
	0x0336E600 MOV X0, X23
	0x0336E604 BL 0x336D90C
	0x0336E608 TBZ X0, 0x0, 0x336E700
	0x0336E60C LDR W8, [X31 + 0x18]
	0x0336E610 CMP W8, 0x5
	0x0336E614 B.NE 0x336E69C
	0x0336E618 MOV X0, X20
	0x0336E61C MOV W1, W31
	0x0336E620 MOV X2, X31
	0x0336E624 BL 0x3376694
	0x0336E628 LDR X8, [X24]
	0x0336E62C MOV W21, W0
	0x0336E630 LDR W9, [X8 + 0xE0]
	0x0336E634 CBNZ W9, 0x336E640
	0x0336E638 MOV X0, X8
	0x0336E63C BL 0x1C16DFC
	0x0336E640 ADD X2, X31, 0xC
	0x0336E644 MOV X0, X19
	0x0336E648 MOV W1, W21
	0x0336E64C BL 0x336DCC4
	0x0336E650 TBZ X0, 0x0, 0x336E6F0
	0x0336E654 LDR X0, [X24]
	0x0336E658 LDR W21, [X31 + 0xC]
	0x0336E65C LDR W22, [X20 + 0xC]
	0x0336E660 LDR W8, [X0 + 0xE0]
	0x0336E664 CBNZ W8, 0x336E66C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x106F000
	010 Move W8, [X20+3794]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xD88000
	017 Move X0, [X0+368]
	018 Call 0x1C17CF4
	019 Move X0, 0xDBB000
	020 Move X0, [X0+1264]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+3794], W8
	024 Move W20, [X19+16]
	025 Move W8, [X19+8]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X8, [X19]
	028 Move X9, W20
	029 NotImplemented "Instruction LDRH not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Compare W8, 0
	032 JumpIfNotEqual {126}
	033 Move X21, 0xDBB000
	034 Move X21, [X21+1264]
	035 Move X0, [X21]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move X1, X31
	042 Call __DTString.get_Length, X0
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move W8, [X19+8]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X8, [X19]
	047 NotImplemented "Instruction LDRH not yet implemented."
	048 Add W20, W20, 1
	049 Compare W8, 0
	050 JumpIfEqual {35}
	051 Move X23, 0xDBB000
	052 Move X25, 0xD88000
	053 Move X23, [X23+1264]
	054 Move X25, [X25+368]
	055 Move X21, X31
	056 Move W22, W31
	057 Move W24, W31
	058 Move X0, [X23]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X0, X19
	064 Move X1, X31
	065 Call __DTString.get_Length, X0
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move W8, [X19+8]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X8, [X19]
	070 NotImplemented "Instruction LDRH not yet implemented."
	071 Compare W20, 0
	072 JumpIfEqual {81}
	073 NotImplemented "Instruction CMP not yet implemented."
	074 And W8, W22, W24
	075 Move TEMP, X8
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfEqual {126}
	079 Or W22, W24, W22
	080 Move W24, 1
	081 Move TEMP, X22
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfNotEqual {126}
	085 Move W22, 1
	086 Move X0, [X25]
	087 Move W8, [X0+224]
	088 Compare W8, 0
	089 JumpIfNotEqual {91}
	090 Call 0x1C17DFC
	091 Move W0, W20
	092 Move X1, X31
	093 Call Char.IsWhiteSpace, X0
	094 NotImplemented "Instruction BIC not yet implemented."
	095 Move TEMP, X8
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfEqual {103}
	099 Move TEMP, X0
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfNotEqual {126}
	103 Add X21, X21, 1
	104 Move X0, [X21]
	105 Move W8, [X0+224]
	106 Compare W8, 0
	107 JumpIfNotEqual {109}
	108 Call 0x1C17DFC
	109 Move X0, X19
	110 Move X1, X31
	111 Call __DTString.get_Length, X0
	112 Move [X19+16], W0
	113 Move TEMP, X22
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfNotEqual {126}
	117 Move X0, [X23]
	118 Move W8, [X0+224]
	119 Compare W8, 0
	120 JumpIfNotEqual {122}
	121 Call 0x1C17DFC
	122 Move X0, X19
	123 Move X1, X31
	124 Call __DTString.GetNext, X0
	125 Move W0, 1
	126 Move W0, W31
	127 Move X20, [X31+48]
	128 Move X19, [X31+56]
	129 Move X22, [X31+32]
	130 Move X21, [X31+40]
	131 Move X24, [X31+16]
	132 Move X23, [X31+24]
	133 Move X30, [X31+64]
	134 Move X25, [X31+72]
	135 Return X0
	136 Call 0x1C17F28

Method: System.Boolean GetYearMonthDayOrder(System.String datePattern, System.Globalization.DateTimeFormatInfo dtfi, out System.Int32 order)

Disassembly:
	0x0336E668 BL 0x1C16DFC
	0x0336E66C MOVZ W3, 0x1
	0x0336E670 MOV X0, X19
	0x0336E674 MOV W1, W21
	0x0336E678 MOV W2, W22
	0x0336E67C MOVZ W20, 0x1
	0x0336E680 BL 0x336DD88
	0x0336E684 TBZ X0, 0x0, 0x336E6F0
	0x0336E688 B 0x336E730
	0x0336E68C MOV X0, X22
	0x0336E690 MOV X1, X31
	0x0336E694 BL 0x33255DC
	0x0336E698 B 0x336E70C
	0x0336E69C LDR X0, [X24]
	0x0336E6A0 LDR W8, [X0 + 0xE0]
	0x0336E6A4 CBNZ W8, 0x336E6AC
	0x0336E6A8 BL 0x1C16DFC
	0x0336E6AC MOV X0, X19
	0x0336E6B0 MOV X1, X21
	0x0336E6B4 BL 0x336DF6C
	0x0336E6B8 LDR W21, [X19]
	0x0336E6BC LDR W22, [X20 + 0xC]
	0x0336E6C0 MOV X0, X20
	0x0336E6C4 MOV W1, W31
	0x0336E6C8 MOV X2, X31
	0x0336E6CC BL 0x3376694
	0x0336E6D0 MOV W3, W0
	0x0336E6D4 MOV X0, X19
	0x0336E6D8 MOV W1, W21
	0x0336E6DC MOV W2, W22
	0x0336E6E0 BL 0x336DD88
	0x0336E6E4 TBZ X0, 0x0, 0x336E6F0
	0x0336E6E8 MOVZ W20, 0x1
	0x0336E6EC B 0x336E730
	0x0336E6F0 MOV X0, X19
	0x0336E6F4 MOV X1, X31
	0x0336E6F8 BL 0x33767C8
	0x0336E6FC B 0x336E72C
	0x0336E700 MOV X0, X22
	0x0336E704 MOV X1, X31
	0x0336E708 BL 0x3325AC0
	0x0336E70C ADRP X8, 0xDBC000
	0x0336E710 LDR X8, [X8 + 0xC68]
	0x0336E714 MOV X3, X0
	0x0336E718 MOVZ W1, 0x3
	0x0336E71C MOV X0, X19
	0x0336E720 LDR X2, [X8]
	0x0336E724 MOV X4, X31
	0x0336E728 BL 0x3376824
	0x0336E72C MOV W20, W31
	0x0336E730 MOV W0, W20
	0x0336E734 LDP X20, X19, [X31 + 0x40]
	0x0336E738 LDP X22, X21, [X31 + 0x30]
	0x0336E73C LDP X24, X23, [X31 + 0x20]
	0x0336E740 LDR X30, [X31 + 0x10]
	0x0336E744 ADD X31, X31, 0x50
	0x0336E748 RET
	0x0336E74C BL 0x1C16F20
	0x0336E750 SUB X31, X31, 0x40
	0x0336E754 STP X30, X23, [X31 + 0x10]
	0x0336E758 STP X22, X21, [X31 + 0x20]
	0x0336E75C STP X20, X19, [X31 + 0x30]
	0x0336E760 ADRP X22, 0x106E000
	0x0336E764 LDRB W8, [X22 + 0xEDA]
	0x0336E768 MOV X21, X2
	0x0336E76C MOV X20, X1
	0x0336E770 MOV X19, X0
	0x0336E774 TBNZ X8, 0x0, 0x336E798
	0x0336E778 ADRP X0, 0xDBA000
	0x0336E77C LDR X0, [X0 + 0x588]
	0x0336E780 BL 0x1C16CF4
	0x0336E784 ADRP X0, 0xDBC000
	0x0336E788 LDR X0, [X0 + 0xC68]
	0x0336E78C BL 0x1C16CF4
	0x0336E790 MOVZ W8, 0x1
	0x0336E794 STRB W8, [X22 + 0xEDA]
	0x0336E798 STR W31, [X31 + 0xC]
	0x0336E79C CBZ X21, 0x336E8A8
	0x0336E7A0 ADRP X22, 0xDBA000
	0x0336E7A4 LDR X22, [X22 + 0x588]
	0x0336E7A8 MOV X0, X21
	0x0336E7AC MOV X1, X31
	0x0336E7B0 BL 0x33255DC
	0x0336E7B4 LDR X8, [X22]
	0x0336E7B8 MOV X22, X0
	0x0336E7BC LDR W9, [X8 + 0xE0]
	0x0336E7C0 CBNZ W9, 0x336E7CC
	0x0336E7C4 MOV X0, X8
	0x0336E7C8 BL 0x1C16DFC
	0x0336E7CC ADD X2, X31, 0xC
	0x0336E7D0 MOV X0, X22
	0x0336E7D4 BL 0x336DAC8
	0x0336E7D8 TBZ X0, 0x0, 0x336E854
	0x0336E7DC LDR W21, [X20 + 0xC]
	0x0336E7E0 STR W21, [X19 + 0x4]
	0x0336E7E4 LDR W8, [X31 + 0xC]
	0x0336E7E8 AND W8, W8, 0xFFFFFFFE
	0x0336E7EC CMP W8, 0x6
	0x0336E7F0 B.NE 0x336E884
	0x0336E7F4 LDR X22, [X19 + 0x30]
	0x0336E7F8 LDR W23, [X19]
	0x0336E7FC MOV X0, X20
	0x0336E800 MOV W1, W31
	0x0336E804 MOV X2, X31
	0x0336E808 BL 0x3376694
	0x0336E80C CBZ X22, 0x336E8A8
	0x0336E810 LDR X8, [X22]
	0x0336E814 LDR W4, [X19 + 0x20]
	0x0336E818 MOV W3, W0
	0x0336E81C MOV X0, X22
	0x0336E820 LDR X9, [X8 + 0x2D8]
	0x0336E824 LDR X5, [X8 + 0x2E0]
	0x0336E828 MOV W1, W23
	0x0336E82C MOV W2, W21
	0x0336E830 BLR X9
	0x0336E834 TBZ X0, 0x0, 0x336E884
	0x0336E838 MOV X0, X20
	0x0336E83C MOV W1, W31
	0x0336E840 MOV X2, X31
	0x0336E844 BL 0x3376694
	0x0336E848 STR W0, [X19 + 0x8]
	0x0336E84C MOVZ W0, 0x1
	0x0336E850 B 0x336E894
	0x0336E854 MOV X0, X21
	0x0336E858 MOV X1, X31
	0x0336E85C BL 0x33255DC
	0x0336E860 ADRP X8, 0xDBC000
	0x0336E864 LDR X8, [X8 + 0xC68]
	0x0336E868 MOV X3, X0
	0x0336E86C MOVZ W1, 0x3
	0x0336E870 MOV X0, X19
	0x0336E874 LDR X2, [X8]
	0x0336E878 MOV X4, X31
	0x0336E87C BL 0x3376824
	0x0336E880 B 0x336E890
	0x0336E884 MOV X0, X19
	0x0336E888 MOV X1, X31
	0x0336E88C BL 0x33767C8
	0x0336E890 MOV W0, W31
	0x0336E894 LDP X20, X19, [X31 + 0x30]
	0x0336E898 LDP X22, X21, [X31 + 0x20]
	0x0336E89C LDP X30, X23, [X31 + 0x10]
	0x0336E8A0 ADD X31, X31, 0x40
	0x0336E8A4 RET
	0x0336E8A8 BL 0x1C16F20
	0x0336E8AC SUB X31, X31, 0x50
	0x0336E8B0 STR X30, [X31 + 0x10]
	0x0336E8B4 STP X24, X23, [X31 + 0x20]
	0x0336E8B8 STP X22, X21, [X31 + 0x30]
	0x0336E8BC STP X20, X19, [X31 + 0x40]
	0x0336E8C0 ADRP X23, 0x106E000
	0x0336E8C4 LDRB W8, [X23 + 0xEDB]
	0x0336E8C8 MOV X22, X3
	0x0336E8CC MOV X20, X2
	0x0336E8D0 MOV X21, X1
	0x0336E8D4 MOV X19, X0
	0x0336E8D8 TBNZ X8, 0x0, 0x336E8FC
	0x0336E8DC ADRP X0, 0xDBA000
	0x0336E8E0 LDR X0, [X0 + 0x588]
	0x0336E8E4 BL 0x1C16CF4
	0x0336E8E8 ADRP X0, 0xDBC000
	0x0336E8EC LDR X0, [X0 + 0xC68]
	0x0336E8F0 BL 0x1C16CF4
	0x0336E8F4 MOVZ W8, 0x1
	0x0336E8F8 STRB W8, [X23 + 0xEDB]
	0x0336E8FC STR X31, [X31 + 0x18]
	0x0336E900 STR W31, [X31 + 0xC]
	0x0336E904 LDRB W8, [X19 + 0x24]
	0x0336E908 TBNZ X8, 0x7, 0x336EA70

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Compare X0, 0
	013 JumpIfEqual {166}
	014 Move W8, [X0+16]
	015 Move X19, X2
	016 Move X20, X0
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move W21, W31
	019 Move W22, W31
	020 Move W26, W31
	021 Move TEMP, 0
	022 Not TEMP
	023 Move W23, TEMP
	024 Move TEMP, 0
	025 Not TEMP
	026 Move W24, TEMP
	027 Move TEMP, 0
	028 Not TEMP
	029 Move W25, TEMP
	030 Move X0, X20
	031 Move W1, W21
	032 Move X2, X31
	033 Call String.get_Chars, X0, X1
	034 And W8, W0, 0xFFFF
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move TEMP, X22
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {74}
	042 And W8, W0, 0xFFFF
	043 NotImplemented "Instruction CMP not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move W8, [X20+16]
	047 Add W1, W21, 1
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X0, X20
	050 Move X2, X31
	051 Call String.get_Chars, X0, X1
	052 And W8, W0, 0xFFFF
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move W8, 2
	055 Move W9, [X20+16]
	056 Add W22, W21, W8
	057 Move W28, W8
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X0, X20
	060 Move W1, W22
	061 Move X2, X31
	062 Call String.get_Chars, X0, X1
	063 And W8, W0, 0xFFFF
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Add W8, W28, 1
	066 Subtract W21, W22, 1
	067 NotImplemented "Instruction CMP not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Add W21, W21, 1
	070 Move TEMP, X22
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfEqual {42}
	074 Move W22, 1
	075 Move W27, W26
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move W8, [X20+16]
	078 Add W21, W21, 1
	079 Move W26, W27
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Add W27, W26, 1
	082 Move W8, [X20+16]
	083 Move W24, W21
	084 Add W21, W21, 1
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X0, X20
	087 Move W1, W21
	088 Move X2, X31
	089 Call String.get_Chars, X0, X1
	090 And W8, W0, 0xFFFF
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move W22, W31
	093 Move W21, W24
	094 Move W24, W26
	095 Add W27, W26, 1
	096 Move W8, [X20+16]
	097 Move W25, W21
	098 Add W21, W21, 1
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X0, X20
	101 Move W1, W21
	102 Move X2, X31
	103 Call String.get_Chars, X0, X1
	104 And W8, W0, 0xFFFF
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move W22, W31
	107 Move W21, W25
	108 Move W25, W26
	109 Move W22, W31
	110 Move W28, 1
	111 NotImplemented "Instruction CMP not yet implemented."
	112 NotImplemented "Instruction CINC not yet implemented."
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move W22, W31
	115 NotImplemented "Instruction CSEL not yet implemented."
	116 Move TEMP, 0
	117 Not TEMP
	118 Move W25, TEMP
	119 Move TEMP, 0
	120 Not TEMP
	121 Move W24, TEMP
	122 Move TEMP, 0
	123 Not TEMP
	124 Move W23, TEMP
	125 NotImplemented "Instruction CMP not yet implemented."
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Compare W25, 0
	128 JumpIfNotEqual {130}
	129 Move W9, W31
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Compare W24, 0
	132 JumpIfNotEqual {150}
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move W9, 1
	135 Move W8, 1
	136 Move [X19], W9
	137 Move X20, [X31+80]
	138 Move X19, [X31+88]
	139 Move X22, [X31+64]
	140 Move X21, [X31+72]
	141 Move X24, [X31+48]
	142 Move X23, [X31+56]
	143 Move X26, [X31+32]
	144 Move X25, [X31+40]
	145 Move X28, [X31+16]
	146 Move X27, [X31+24]
	147 And W0, W8, 1
	148 Move X30, [X31+96]
	149 Return X0
	150 Compare W23, 0
	151 JumpIfNotEqual {156}
	152 NotImplemented "Instruction CMP not yet implemented."
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move W8, 1
	155 Move W9, 2
	156 NotImplemented "Instruction CMP not yet implemented."
	157 NotImplemented "Instruction CSET not yet implemented."
	158 NotImplemented "Instruction CMP not yet implemented."
	159 NotImplemented "Instruction CSET not yet implemented."
	160 NotImplemented "Instruction CMP not yet implemented."
	161 And W8, W8, W9
	162 NotImplemented "Instruction CSET not yet implemented."
	163 And W8, W9, W8
	164 Move W9, 3
	165 NotImplemented "Instruction CSINV not yet implemented."
	166 Call 0x1C17F20

Method: System.Boolean GetYearMonthOrder(System.String pattern, System.Globalization.DateTimeFormatInfo dtfi, out System.Int32 order)

Disassembly:
	0x0336E90C CBZ X22, 0x336EACC
	0x0336E910 MOV X0, X22
	0x0336E914 MOV X1, X31
	0x0336E918 BL 0x33255DC
	0x0336E91C ADRP X24, 0xDBA000
	0x0336E920 LDR X24, [X24 + 0x588]
	0x0336E924 MOV X23, X0
	0x0336E928 LDR X8, [X24]
	0x0336E92C LDR W9, [X8 + 0xE0]
	0x0336E930 CBNZ W9, 0x336E93C
	0x0336E934 MOV X0, X8
	0x0336E938 BL 0x1C16DFC
	0x0336E93C ADD X2, X31, 0x1C
	0x0336E940 MOV X0, X23
	0x0336E944 BL 0x336DAC8
	0x0336E948 TBZ X0, 0x0, 0x336EA0C
	0x0336E94C LDR W8, [X31 + 0x1C]
	0x0336E950 CMP W8, 0x6
	0x0336E954 B.NE 0x336EA1C
	0x0336E958 MOV X0, X22
	0x0336E95C MOV X1, X31
	0x0336E960 BL 0x3325AC0
	0x0336E964 LDR X8, [X24]
	0x0336E968 MOV X23, X0
	0x0336E96C LDR W9, [X8 + 0xE0]
	0x0336E970 CBNZ W9, 0x336E97C
	0x0336E974 MOV X0, X8
	0x0336E978 BL 0x1C16DFC
	0x0336E97C ADD X2, X31, 0x18
	0x0336E980 MOV X0, X23
	0x0336E984 BL 0x336D90C
	0x0336E988 TBZ X0, 0x0, 0x336EA80
	0x0336E98C LDR W8, [X31 + 0x18]
	0x0336E990 CMP W8, 0x4
	0x0336E994 B.NE 0x336EA1C
	0x0336E998 MOV X0, X20
	0x0336E99C MOV W1, W31
	0x0336E9A0 MOV X2, X31
	0x0336E9A4 BL 0x3376694
	0x0336E9A8 LDR X8, [X24]
	0x0336E9AC MOV W21, W0
	0x0336E9B0 LDR W9, [X8 + 0xE0]
	0x0336E9B4 CBNZ W9, 0x336E9C0
	0x0336E9B8 MOV X0, X8
	0x0336E9BC BL 0x1C16DFC
	0x0336E9C0 ADD X2, X31, 0xC
	0x0336E9C4 MOV X0, X19
	0x0336E9C8 MOV W1, W21
	0x0336E9CC BL 0x336DCC4
	0x0336E9D0 TBZ X0, 0x0, 0x336EA70
	0x0336E9D4 LDR X0, [X24]
	0x0336E9D8 LDR W21, [X31 + 0xC]
	0x0336E9DC LDR W22, [X20 + 0xC]
	0x0336E9E0 LDR W8, [X0 + 0xE0]
	0x0336E9E4 CBNZ W8, 0x336E9EC
	0x0336E9E8 BL 0x1C16DFC
	0x0336E9EC MOVZ W3, 0x1
	0x0336E9F0 MOV X0, X19
	0x0336E9F4 MOV W1, W21
	0x0336E9F8 MOV W2, W22
	0x0336E9FC MOVZ W20, 0x1
	0x0336EA00 BL 0x336DD88
	0x0336EA04 TBZ X0, 0x0, 0x336EA70
	0x0336EA08 B 0x336EAB0
	0x0336EA0C MOV X0, X22
	0x0336EA10 MOV X1, X31
	0x0336EA14 BL 0x33255DC
	0x0336EA18 B 0x336EA8C
	0x0336EA1C LDR X0, [X24]
	0x0336EA20 LDR W8, [X0 + 0xE0]
	0x0336EA24 CBNZ W8, 0x336EA2C
	0x0336EA28 BL 0x1C16DFC
	0x0336EA2C MOV X0, X19
	0x0336EA30 MOV X1, X21
	0x0336EA34 BL 0x336DF6C
	0x0336EA38 LDR W21, [X19]
	0x0336EA3C LDR W22, [X20 + 0xC]
	0x0336EA40 MOV X0, X20
	0x0336EA44 MOV W1, W31
	0x0336EA48 MOV X2, X31
	0x0336EA4C BL 0x3376694
	0x0336EA50 MOV W3, W0
	0x0336EA54 MOV X0, X19
	0x0336EA58 MOV W1, W21
	0x0336EA5C MOV W2, W22
	0x0336EA60 BL 0x336DD88
	0x0336EA64 TBZ X0, 0x0, 0x336EA70
	0x0336EA68 MOVZ W20, 0x1
	0x0336EA6C B 0x336EAB0
	0x0336EA70 MOV X0, X19
	0x0336EA74 MOV X1, X31
	0x0336EA78 BL 0x33767C8
	0x0336EA7C B 0x336EAAC
	0x0336EA80 MOV X0, X22
	0x0336EA84 MOV X1, X31
	0x0336EA88 BL 0x3325AC0
	0x0336EA8C ADRP X8, 0xDBC000
	0x0336EA90 LDR X8, [X8 + 0xC68]
	0x0336EA94 MOV X3, X0
	0x0336EA98 MOVZ W1, 0x3
	0x0336EA9C MOV X0, X19
	0x0336EAA0 LDR X2, [X8]
	0x0336EAA4 MOV X4, X31
	0x0336EAA8 BL 0x3376824
	0x0336EAAC MOV W20, W31
	0x0336EAB0 MOV W0, W20
	0x0336EAB4 LDP X20, X19, [X31 + 0x40]
	0x0336EAB8 LDP X22, X21, [X31 + 0x30]
	0x0336EABC LDP X24, X23, [X31 + 0x20]
	0x0336EAC0 LDR X30, [X31 + 0x10]
	0x0336EAC4 ADD X31, X31, 0x50

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Compare X0, 0
	011 JumpIfEqual {115}
	012 Move W8, [X0+16]
	013 Move X19, X2
	014 Move X20, X0
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move W21, W31
	017 Move W25, W31
	018 Move W24, W31
	019 Move TEMP, 0
	020 Not TEMP
	021 Move W22, TEMP
	022 Move TEMP, 0
	023 Not TEMP
	024 Move W23, TEMP
	025 Move X0, X20
	026 Move W1, W21
	027 Move X2, X31
	028 Call String.get_Chars, X0, X1
	029 And W8, W0, 0xFFFF
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move TEMP, X25
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {61}
	037 And W8, W0, 0xFFFF
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Add W26, W24, 1
	041 Move W8, [X20+16]
	042 Move W23, W21
	043 Add W21, W21, 1
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X0, X20
	046 Move W1, W21
	047 Move X2, X31
	048 Call String.get_Chars, X0, X1
	049 And W8, W0, 0xFFFF
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move W25, W31
	052 Move W21, W23
	053 Move W23, W24
	054 NotImplemented "Instruction CMP not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Add W21, W21, 1
	057 Move TEMP, X25
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfEqual {37}
	061 Move W25, 1
	062 Add W26, W24, 1
	063 Move W8, [X20+16]
	064 Move W22, W21
	065 Add W21, W21, 1
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X0, X20
	068 Move W1, W21
	069 Move X2, X31
	070 Call String.get_Chars, X0, X1
	071 And W8, W0, 0xFFFF
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move W25, W31
	074 Move W21, W22
	075 Move W22, W24
	076 Move W25, W31
	077 Move W26, W24
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move W8, [X20+16]
	080 Add W21, W21, 1
	081 Move W24, W26
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move TEMP, 0
	084 Not TEMP
	085 Move W23, TEMP
	086 Move TEMP, 0
	087 Not TEMP
	088 Move W22, TEMP
	089 NotImplemented "Instruction CMP not yet implemented."
	090 NotImplemented "Instruction CSET not yet implemented."
	091 NotImplemented "Instruction CMP not yet implemented."
	092 NotImplemented "Instruction CSET not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 NotImplemented "Instruction CSET not yet implemented."
	095 NotImplemented "Instruction CMP not yet implemented."
	096 NotImplemented "Instruction CSET not yet implemented."
	097 And W10, W10, W11
	098 Move W11, 5
	099 NotImplemented "Instruction CSINV not yet implemented."
	100 And W8, W9, W8
	101 Move W9, 4
	102 NotImplemented "Instruction CSEL not yet implemented."
	103 Move [X19], W9
	104 Move X20, [X31+64]
	105 Move X19, [X31+72]
	106 Move X22, [X31+48]
	107 Move X21, [X31+56]
	108 Move X24, [X31+32]
	109 Move X23, [X31+40]
	110 Move X26, [X31+16]
	111 Move X25, [X31+24]
	112 Or W0, W8, W10
	113 Move X30, [X31+80]
	114 Return X0
	115 Call 0x1C17F20

Method: System.Boolean GetMonthDayOrder(System.String pattern, System.Globalization.DateTimeFormatInfo dtfi, out System.Int32 order)

Disassembly:
	0x0336EAC8 RET
	0x0336EACC BL 0x1C16F20
	0x0336EAD0 SUB X31, X31, 0x50
	0x0336EAD4 STP X30, X25, [X31 + 0x10]
	0x0336EAD8 STP X24, X23, [X31 + 0x20]
	0x0336EADC STP X22, X21, [X31 + 0x30]
	0x0336EAE0 STP X20, X19, [X31 + 0x40]
	0x0336EAE4 ADRP X21, 0x106E000
	0x0336EAE8 LDRB W8, [X21 + 0xEDC]
	0x0336EAEC MOV X23, X2
	0x0336EAF0 MOV X20, X1
	0x0336EAF4 MOV X19, X0
	0x0336EAF8 TBNZ X8, 0x0, 0x336EB1C
	0x0336EAFC ADRP X0, 0xDBA000
	0x0336EB00 LDR X0, [X0 + 0x588]
	0x0336EB04 BL 0x1C16CF4
	0x0336EB08 ADRP X0, 0xDBC000
	0x0336EB0C LDR X0, [X0 + 0xC68]
	0x0336EB10 BL 0x1C16CF4
	0x0336EB14 MOVZ W8, 0x1
	0x0336EB18 STRB W8, [X21 + 0xEDC]
	0x0336EB1C STR X31, [X31 + 0x8]
	0x0336EB20 LDRB W8, [X19 + 0x24]
	0x0336EB24 TBNZ X8, 0x7, 0x336ED88
	0x0336EB28 MOV X0, X20
	0x0336EB2C MOV W1, W31
	0x0336EB30 MOV X2, X31
	0x0336EB34 BL 0x3376694
	0x0336EB38 MOV W22, W0
	0x0336EB3C MOVZ W1, 0x1
	0x0336EB40 MOV X0, X20
	0x0336EB44 MOV X2, X31
	0x0336EB48 BL 0x3376694
	0x0336EB4C CBZ X23, 0x336EDB0
	0x0336EB50 MOV W21, W0
	0x0336EB54 MOV X0, X23
	0x0336EB58 MOV X1, X31
	0x0336EB5C BL 0x332569C
	0x0336EB60 ADRP X25, 0xDBA000
	0x0336EB64 LDR X25, [X25 + 0x588]
	0x0336EB68 MOV X24, X0
	0x0336EB6C LDR X8, [X25]
	0x0336EB70 LDR W9, [X8 + 0xE0]
	0x0336EB74 CBNZ W9, 0x336EB80
	0x0336EB78 MOV X0, X8
	0x0336EB7C BL 0x1C16DFC
	0x0336EB80 ADD X2, X31, 0xC
	0x0336EB84 MOV X0, X24
	0x0336EB88 BL 0x336D668
	0x0336EB8C TBZ X0, 0x0, 0x336EC0C
	0x0336EB90 LDR W8, [X31 + 0xC]
	0x0336EB94 CBZ W8, 0x336ECA0
	0x0336EB98 CMP W8, 0x2
	0x0336EB9C B.EQ 0x336EBA8
	0x0336EBA0 CMP W8, 0x1
	0x0336EBA4 B.NE 0x336ED88
	0x0336EBA8 LDR X0, [X25]
	0x0336EBAC LDR W8, [X0 + 0xE0]
	0x0336EBB0 CBNZ W8, 0x336EBB8
	0x0336EBB4 BL 0x1C16DFC
	0x0336EBB8 ADD X2, X31, 0x8
	0x0336EBBC MOV X0, X19
	0x0336EBC0 MOV W1, W21
	0x0336EBC4 BL 0x336DCC4
	0x0336EBC8 TBZ X0, 0x0, 0x336EC3C
	0x0336EBCC LDR X0, [X19 + 0x30]
	0x0336EBD0 CBZ X0, 0x336EDB0
	0x0336EBD4 LDR X8, [X0]
	0x0336EBD8 LDR W23, [X31 + 0x8]
	0x0336EBDC LDR W4, [X19 + 0x20]
	0x0336EBE0 LDR W2, [X20 + 0xC]
	0x0336EBE4 LDR X9, [X8 + 0x2D8]
	0x0336EBE8 LDR X5, [X8 + 0x2E0]
	0x0336EBEC MOV W1, W23
	0x0336EBF0 MOV W3, W22
	0x0336EBF4 BLR X9
	0x0336EBF8 TBZ X0, 0x0, 0x336EC3C
	0x0336EBFC LDR W2, [X20 + 0xC]
	0x0336EC00 MOV X0, X19
	0x0336EC04 MOV W1, W23
	0x0336EC08 B 0x336ED68
	0x0336EC0C MOV X0, X23
	0x0336EC10 MOV X1, X31
	0x0336EC14 BL 0x332569C
	0x0336EC18 ADRP X8, 0xDBC000
	0x0336EC1C LDR X8, [X8 + 0xC68]
	0x0336EC20 MOV X3, X0
	0x0336EC24 MOVZ W1, 0x3
	0x0336EC28 MOV X0, X19
	0x0336EC2C LDR X2, [X8]
	0x0336EC30 MOV X4, X31
	0x0336EC34 BL 0x3376824
	0x0336EC38 B 0x336ED94
	0x0336EC3C LDR X0, [X25]
	0x0336EC40 LDR W8, [X0 + 0xE0]
	0x0336EC44 CBNZ W8, 0x336EC4C
	0x0336EC48 BL 0x1C16DFC
	0x0336EC4C ADD X2, X31, 0x8
	0x0336EC50 MOV X0, X19
	0x0336EC54 MOV W1, W22
	0x0336EC58 BL 0x336DCC4
	0x0336EC5C TBZ X0, 0x0, 0x336ED88
	0x0336EC60 LDR X0, [X19 + 0x30]
	0x0336EC64 CBZ X0, 0x336EDB0
	0x0336EC68 LDR X8, [X0]
	0x0336EC6C LDR W22, [X31 + 0x8]
	0x0336EC70 LDR W4, [X19 + 0x20]
	0x0336EC74 LDR W2, [X20 + 0xC]
	0x0336EC78 LDR X9, [X8 + 0x2D8]
	0x0336EC7C LDR X5, [X8 + 0x2E0]
	0x0336EC80 MOV W1, W22
	0x0336EC84 MOV W3, W21
	0x0336EC88 BLR X9
	0x0336EC8C TBZ X0, 0x0, 0x336ED88
	0x0336EC90 LDR W2, [X20 + 0xC]
	0x0336EC94 MOV X0, X19
	0x0336EC98 MOV W1, W22
	0x0336EC9C B 0x336ED00
	0x0336ECA0 LDR X0, [X25]
	0x0336ECA4 LDR W8, [X0 + 0xE0]
	0x0336ECA8 CBNZ W8, 0x336ECB0
	0x0336ECAC BL 0x1C16DFC
	0x0336ECB0 ADD X2, X31, 0x8
	0x0336ECB4 MOV X0, X19
	0x0336ECB8 MOV W1, W22
	0x0336ECBC BL 0x336DCC4
	0x0336ECC0 TBZ X0, 0x0, 0x336ED08

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Compare X0, 0
	012 JumpIfEqual {130}
	013 Move W8, [X0+16]
	014 Move X19, X2
	015 Move X20, X0
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move W21, W31
	018 Move W22, W31
	019 Move W25, W31
	020 Move TEMP, 0
	021 Not TEMP
	022 Move W23, TEMP
	023 Move TEMP, 0
	024 Not TEMP
	025 Move W24, TEMP
	026 Move X0, X20
	027 Move W1, W21
	028 Move X2, X31
	029 Call String.get_Chars, X0, X1
	030 And W8, W0, 0xFFFF
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move TEMP, X22
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {69}
	038 And W8, W0, 0xFFFF
	039 NotImplemented "Instruction CMP not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move W8, [X20+16]
	042 Add W1, W21, 1
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X0, X20
	045 Move X2, X31
	046 Call String.get_Chars, X0, X1
	047 And W8, W0, 0xFFFF
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move W8, 2
	050 Move W9, [X20+16]
	051 Add W22, W21, W8
	052 Move W27, W8
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X0, X20
	055 Move W1, W22
	056 Move X2, X31
	057 Call String.get_Chars, X0, X1
	058 And W8, W0, 0xFFFF
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Add W8, W27, 1
	061 Subtract W21, W22, 1
	062 NotImplemented "Instruction CMP not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Add W21, W21, 1
	065 Move TEMP, X22
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfEqual {38}
	069 Move W22, 1
	070 Add W26, W25, 1
	071 Move W8, [X20+16]
	072 Move W24, W21
	073 Add W21, W21, 1
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X0, X20
	076 Move W1, W21
	077 Move X2, X31
	078 Call String.get_Chars, X0, X1
	079 And W8, W0, 0xFFFF
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move W22, W31
	082 Move W21, W24
	083 Move W24, W25
	084 Move W22, W31
	085 Move W26, W25
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move W8, [X20+16]
	088 Add W21, W21, 1
	089 Move W25, W26
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move W27, 1
	092 NotImplemented "Instruction CMP not yet implemented."
	093 NotImplemented "Instruction CINC not yet implemented."
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move W22, W31
	096 NotImplemented "Instruction CSEL not yet implemented."
	097 Move TEMP, 0
	098 Not TEMP
	099 Move W24, TEMP
	100 Move TEMP, 0
	101 Not TEMP
	102 Move W23, TEMP
	103 NotImplemented "Instruction CMP not yet implemented."
	104 NotImplemented "Instruction CSET not yet implemented."
	105 NotImplemented "Instruction CMP not yet implemented."
	106 NotImplemented "Instruction CSET not yet implemented."
	107 NotImplemented "Instruction CMP not yet implemented."
	108 NotImplemented "Instruction CSET not yet implemented."
	109 NotImplemented "Instruction CMP not yet implemented."
	110 NotImplemented "Instruction CSET not yet implemented."
	111 And W10, W10, W11
	112 Move W11, 7
	113 NotImplemented "Instruction CSINV not yet implemented."
	114 And W8, W9, W8
	115 Move W9, 6
	116 NotImplemented "Instruction CSEL not yet implemented."
	117 Move [X19], W9
	118 Move X20, [X31+64]
	119 Move X19, [X31+72]
	120 Move X22, [X31+48]
	121 Move X21, [X31+56]
	122 Move X24, [X31+32]
	123 Move X23, [X31+40]
	124 Move X26, [X31+16]
	125 Move X25, [X31+24]
	126 Or W0, W8, W10
	127 Move X30, [X31+80]
	128 Move X27, [X31+88]
	129 Return X0
	130 Call 0x1C17F20

Method: System.Boolean TryAdjustYear(ref System.DateTimeResult result, System.Int32 year, out System.Int32 adjustedYear)

Disassembly:
	0x0336ECC4 LDR X0, [X19 + 0x30]
	0x0336ECC8 CBZ X0, 0x336EDB0
	0x0336ECCC LDR X8, [X0]
	0x0336ECD0 LDR W23, [X31 + 0x8]
	0x0336ECD4 LDR W4, [X19 + 0x20]
	0x0336ECD8 LDR W2, [X20 + 0xC]
	0x0336ECDC LDR X9, [X8 + 0x2D8]
	0x0336ECE0 LDR X5, [X8 + 0x2E0]
	0x0336ECE4 MOV W1, W23
	0x0336ECE8 MOV W3, W21
	0x0336ECEC BLR X9
	0x0336ECF0 TBZ X0, 0x0, 0x336ED08
	0x0336ECF4 LDR W2, [X20 + 0xC]
	0x0336ECF8 MOV X0, X19
	0x0336ECFC MOV W1, W23
	0x0336ED00 MOV W3, W21
	0x0336ED04 B 0x336ED6C
	0x0336ED08 LDR X0, [X25]
	0x0336ED0C LDR W8, [X0 + 0xE0]
	0x0336ED10 CBNZ W8, 0x336ED18
	0x0336ED14 BL 0x1C16DFC
	0x0336ED18 ADD X2, X31, 0x8
	0x0336ED1C MOV X0, X19
	0x0336ED20 MOV W1, W21
	0x0336ED24 BL 0x336DCC4
	0x0336ED28 TBZ X0, 0x0, 0x336ED88
	0x0336ED2C LDR X0, [X19 + 0x30]
	0x0336ED30 CBZ X0, 0x336EDB0
	0x0336ED34 LDR X8, [X0]
	0x0336ED38 LDR W21, [X31 + 0x8]
	0x0336ED3C LDR W4, [X19 + 0x20]
	0x0336ED40 LDR W2, [X20 + 0xC]
	0x0336ED44 LDR X9, [X8 + 0x2D8]
	0x0336ED48 LDR X5, [X8 + 0x2E0]
	0x0336ED4C MOV W1, W21
	0x0336ED50 MOV W3, W22
	0x0336ED54 BLR X9
	0x0336ED58 TBZ X0, 0x0, 0x336ED88
	0x0336ED5C LDR W2, [X20 + 0xC]
	0x0336ED60 MOV X0, X19
	0x0336ED64 MOV W1, W21
	0x0336ED68 MOV W3, W22
	0x0336ED6C MOV X4, X31
	0x0336ED70 BL 0x33766C4
	0x0336ED74 LDR W8, [X19 + 0x24]
	0x0336ED78 MOVZ W0, 0x1
	0x0336ED7C ORR W8, W8, 0x80
	0x0336ED80 STR W8, [X19 + 0x24]
	0x0336ED84 B 0x336ED98

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X2
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move X0, [X0+48]
	007 Compare X0, 0
	008 JumpIfEqual {20}
	009 Move X8, [X0]
	010 Move X9, [X8+776]
	011 Move X2, [X8+784]
	012 NotImplemented "Instruction BLR not yet implemented."
	013 Move W1, W0
	014 Move W0, 1
	015 Move [X19], W1
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X30, [X31+32]
	019 Return X0
	020 Call 0x1C17F20
	021 Move X20, X0
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X0, X20
	024 Call 0x3EB2AD0
	025 Move X20, X0
	026 Move X0, 0xD8E000
	027 Move X0, [X0+1888]
	028 Call 0x1C17D08
	029 Move X8, [X20]
	030 Move X1, [X8]
	031 Call 0x1C18270
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {41}
	036 Call 0x3EB2AE0
	037 Move W0, W31
	038 Move TEMP, 0
	039 Not TEMP
	040 Move W1, TEMP
	041 Move W0, 8
	042 Call 0x3EB2AF0
	043 Move X8, [X20]
	044 Move [X0], X8
	045 Move X1, 0xB47000
	046 Add X1, X1, 3672
	047 Move X2, X31
	048 Call 0x3EB2B00
	049 Move X20, X0
	050 Call 0x3EB2AE0
	051 Move X0, X20
	052 Call 0x1D2D690
	053 Call 0x1991590

Method: System.Boolean SetDateYMD(ref System.DateTimeResult result, System.Int32 year, System.Int32 month, System.Int32 day)

Disassembly:
	0x0336ED88 MOV X0, X19
	0x0336ED8C MOV X1, X31
	0x0336ED90 BL 0x33767C8
	0x0336ED94 MOV W0, W31
	0x0336ED98 LDP X20, X19, [X31 + 0x40]
	0x0336ED9C LDP X22, X21, [X31 + 0x30]
	0x0336EDA0 LDP X24, X23, [X31 + 0x20]
	0x0336EDA4 LDP X30, X25, [X31 + 0x10]
	0x0336EDA8 ADD X31, X31, 0x50
	0x0336EDAC RET
	0x0336EDB0 BL 0x1C16F20
	0x0336EDB4 STR X30, [X31 - 0x40]!
	0x0336EDB8 STP X24, X23, [X31 + 0x10]
	0x0336EDBC STP X22, X21, [X31 + 0x20]
	0x0336EDC0 STP X20, X19, [X31 + 0x30]
	0x0336EDC4 ADRP X21, 0x106E000
	0x0336EDC8 LDRB W8, [X21 + 0xEDD]
	0x0336EDCC MOV X23, X2
	0x0336EDD0 MOV X20, X1
	0x0336EDD4 MOV X19, X0
	0x0336EDD8 TBNZ X8, 0x0, 0x336EDF0
	0x0336EDDC ADRP X0, 0xDBA000
	0x0336EDE0 LDR X0, [X0 + 0x588]
	0x0336EDE4 BL 0x1C16CF4
	0x0336EDE8 MOVZ W8, 0x1
	0x0336EDEC STRB W8, [X21 + 0xEDD]
	0x0336EDF0 STR W31, [X31 + 0xC]
	0x0336EDF4 LDRB W8, [X19 + 0x24]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, X0
	008 Move X0, [X0+48]
	009 Compare X0, 0
	010 JumpIfEqual {38}
	011 Move X8, [X0]
	012 Move W4, [X21+32]
	013 Move W19, W3
	014 Move W20, W2
	015 Move X9, [X8+728]
	016 Move X5, [X8+736]
	017 Move W22, W1
	018 NotImplemented "Instruction BLR not yet implemented."
	019 Move W23, W0
	020 Move TEMP, X0
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfNotEqual {30}
	024 Move X0, X21
	025 Move W1, W22
	026 Move W2, W20
	027 Move W3, W19
	028 Move X4, X31
	029 Call DateTimeResult.SetDate, X0, X1, X2, X3
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 And W0, W23, 1
	035 Move X30, [X31+48]
	036 Move X23, [X31+56]
	037 Return X0
	038 Call 0x1C17F20

Method: System.Boolean SetDateMDY(ref System.DateTimeResult result, System.Int32 month, System.Int32 day, System.Int32 year)

Disassembly:
	0x0336EDF8 TBNZ X8, 0x7, 0x336EEC4
	0x0336EDFC MOV X0, X20
	0x0336EE00 MOV W1, W31
	0x0336EE04 MOV X2, X31
	0x0336EE08 BL 0x3376694
	0x0336EE0C MOV W21, W0
	0x0336EE10 MOVZ W1, 0x1
	0x0336EE14 MOV X0, X20
	0x0336EE18 MOV X2, X31
	0x0336EE1C BL 0x3376694
	0x0336EE20 CBZ X23, 0x336EEE8
	0x0336EE24 MOV W22, W0
	0x0336EE28 MOV X0, X23
	0x0336EE2C MOV X1, X31
	0x0336EE30 BL 0x332569C
	0x0336EE34 ADRP X24, 0xDBA000
	0x0336EE38 LDR X24, [X24 + 0x588]
	0x0336EE3C MOV X23, X0
	0x0336EE40 LDR X8, [X24]
	0x0336EE44 LDR W9, [X8 + 0xE0]
	0x0336EE48 CBNZ W9, 0x336EE54
	0x0336EE4C MOV X0, X8
	0x0336EE50 BL 0x1C16DFC
	0x0336EE54 ADD X2, X31, 0xC
	0x0336EE58 MOV X0, X23
	0x0336EE5C BL 0x336D668
	0x0336EE60 MOV W8, W0
	0x0336EE64 LDR X0, [X24]
	0x0336EE68 LDR W9, [X31 + 0xC]
	0x0336EE6C LDR W20, [X20 + 0x10]
	0x0336EE70 LDR W10, [X0 + 0xE0]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x106F000
	009 Move X24, 0xDBB000
	010 Move W8, [X23+3795]
	011 Move X24, [X24+1416]
	012 Move W20, W3
	013 Move W19, W2
	014 Move W21, W1
	015 Move X22, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xDBB000
	021 Move X0, [X0+1416]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+3795], W8
	025 Move X0, [X24]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X22
	031 Move W1, W20
	032 Move W2, W21
	033 Move W3, W19
	034 Move X20, [X31+48]
	035 Move X19, [X31+56]
	036 Move X22, [X31+32]
	037 Move X21, [X31+40]
	038 Move X24, [X31+16]
	039 Move X23, [X31+24]
	040 Move X30, [X31+64]
	041 Call DateTimeParse.SetDateYMD, X0, X1, X2, X3
	042 Return X0

Method: System.Boolean SetDateDMY(ref System.DateTimeResult result, System.Int32 day, System.Int32 month, System.Int32 year)

Disassembly:
	0x0336EE74 CMP W9, 0x3
	0x0336EE78 CSET W9, EQ
	0x0336EE7C AND W23, W8, W9, 0x0
	0x0336EE80 CBNZ W10, 0x336EE88
	0x0336EE84 BL 0x1C16DFC
	0x0336EE88 MOV X0, X19
	0x0336EE8C MOV W1, W20
	0x0336EE90 CBZ W23, 0x336EEA0
	0x0336EE94 MOV W2, W22
	0x0336EE98 MOV W3, W21
	0x0336EE9C B 0x336EEA8
	0x0336EEA0 MOV W2, W21
	0x0336EEA4 MOV W3, W22
	0x0336EEA8 BL 0x336DD88
	0x0336EEAC TBZ X0, 0x0, 0x336EEC4
	0x0336EEB0 LDR W8, [X19 + 0x24]
	0x0336EEB4 MOVZ W0, 0x1
	0x0336EEB8 ORR W8, W8, 0x80
	0x0336EEBC STR W8, [X19 + 0x24]
	0x0336EEC0 B 0x336EED4
	0x0336EEC4 MOV X0, X19
	0x0336EEC8 MOV X1, X31
	0x0336EECC BL 0x33767C8
	0x0336EED0 MOV W0, W31
	0x0336EED4 LDP X20, X19, [X31 + 0x30]
	0x0336EED8 LDP X22, X21, [X31 + 0x20]
	0x0336EEDC LDP X24, X23, [X31 + 0x10]
	0x0336EEE0 LDR X30, [X31], #0x40
	0x0336EEE4 RET
	0x0336EEE8 BL 0x1C16F20
	0x0336EEEC SUB X31, X31, 0x50

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x106F000
	009 Move X24, 0xDBB000
	010 Move W8, [X23+3796]
	011 Move X24, [X24+1416]
	012 Move W21, W3
	013 Move W20, W2
	014 Move W19, W1
	015 Move X22, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xDBB000
	021 Move X0, [X0+1416]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+3796], W8
	025 Move X0, [X24]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X22
	031 Move W1, W21
	032 Move W2, W20
	033 Move W3, W19
	034 Move X20, [X31+48]
	035 Move X19, [X31+56]
	036 Move X22, [X31+32]
	037 Move X21, [X31+40]
	038 Move X24, [X31+16]
	039 Move X23, [X31+24]
	040 Move X30, [X31+64]
	041 Call DateTimeParse.SetDateYMD, X0, X1, X2, X3
	042 Return X0

Method: System.Boolean SetDateYDM(ref System.DateTimeResult result, System.Int32 year, System.Int32 day, System.Int32 month)

Disassembly:
	0x0336EEF0 STP X30, X25, [X31 + 0x10]
	0x0336EEF4 STP X24, X23, [X31 + 0x20]
	0x0336EEF8 STP X22, X21, [X31 + 0x30]
	0x0336EEFC STP X20, X19, [X31 + 0x40]
	0x0336EF00 ADRP X22, 0x106E000
	0x0336EF04 LDRB W8, [X22 + 0xEDE]
	0x0336EF08 MOV X21, X2
	0x0336EF0C MOV X20, X1
	0x0336EF10 MOV X19, X0
	0x0336EF14 TBNZ X8, 0x0, 0x336EF38
	0x0336EF18 ADRP X0, 0xDBA000
	0x0336EF1C LDR X0, [X0 + 0x588]
	0x0336EF20 BL 0x1C16CF4
	0x0336EF24 ADRP X0, 0xDBC000
	0x0336EF28 LDR X0, [X0 + 0xC68]
	0x0336EF2C BL 0x1C16CF4
	0x0336EF30 MOVZ W8, 0x1
	0x0336EF34 STRB W8, [X22 + 0xEDE]
	0x0336EF38 STR W31, [X31 + 0xC]
	0x0336EF3C LDRB W8, [X19 + 0x24]
	0x0336EF40 TBNZ X8, 0x7, 0x336F034
	0x0336EF44 MOV X0, X20
	0x0336EF48 MOV W1, W31
	0x0336EF4C MOV X2, X31
	0x0336EF50 BL 0x3376694
	0x0336EF54 MOV W22, W0
	0x0336EF58 MOVZ W1, 0x1
	0x0336EF5C MOV X0, X20
	0x0336EF60 MOV X2, X31
	0x0336EF64 BL 0x3376694
	0x0336EF68 CBZ X21, 0x336F05C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x106F000
	009 Move X24, 0xDBB000
	010 Move W8, [X23+3797]
	011 Move X24, [X24+1416]
	012 Move W20, W3
	013 Move W19, W2
	014 Move W21, W1
	015 Move X22, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xDBB000
	021 Move X0, [X0+1416]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+3797], W8
	025 Move X0, [X24]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X22
	031 Move W1, W21
	032 Move W2, W20
	033 Move W3, W19
	034 Move X20, [X31+48]
	035 Move X19, [X31+56]
	036 Move X22, [X31+32]
	037 Move X21, [X31+40]
	038 Move X24, [X31+16]
	039 Move X23, [X31+24]
	040 Move X30, [X31+64]
	041 Call DateTimeParse.SetDateYMD, X0, X1, X2, X3
	042 Return X0

Method: System.Void GetDefaultYear(ref System.DateTimeResult result, ref System.Globalization.DateTimeStyles styles)

Disassembly:
	0x0336EF6C MOV W23, W0
	0x0336EF70 MOV X0, X21
	0x0336EF74 MOV X1, X31
	0x0336EF78 BL 0x332569C
	0x0336EF7C ADRP X25, 0xDBA000
	0x0336EF80 LDR X25, [X25 + 0x588]
	0x0336EF84 MOV X24, X0
	0x0336EF88 LDR X8, [X25]
	0x0336EF8C LDR W9, [X8 + 0xE0]
	0x0336EF90 CBNZ W9, 0x336EF9C
	0x0336EF94 MOV X0, X8
	0x0336EF98 BL 0x1C16DFC
	0x0336EF9C ADD X2, X31, 0xC
	0x0336EFA0 MOV X0, X24
	0x0336EFA4 BL 0x336D668
	0x0336EFA8 TBZ X0, 0x0, 0x336EFE0
	0x0336EFAC LDR X0, [X25]
	0x0336EFB0 LDR W21, [X31 + 0xC]
	0x0336EFB4 LDR W20, [X20 + 0x10]
	0x0336EFB8 LDR W8, [X0 + 0xE0]
	0x0336EFBC CBNZ W8, 0x336EFC4
	0x0336EFC0 BL 0x1C16DFC
	0x0336EFC4 MOV X0, X19
	0x0336EFC8 MOV W1, W20
	0x0336EFCC CMP W21, 0x1
	0x0336EFD0 B.HI 0x336F010
	0x0336EFD4 MOV W2, W22
	0x0336EFD8 MOV W3, W23
	0x0336EFDC B 0x336F018
	0x0336EFE0 MOV X0, X21
	0x0336EFE4 MOV X1, X31
	0x0336EFE8 BL 0x332569C
	0x0336EFEC ADRP X8, 0xDBC000
	0x0336EFF0 LDR X8, [X8 + 0xC68]
	0x0336EFF4 MOV X3, X0
	0x0336EFF8 MOVZ W1, 0x3
	0x0336EFFC MOV X0, X19
	0x0336F000 LDR X2, [X8]
	0x0336F004 MOV X4, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x106F000
	007 Move X21, 0xDBB000
	008 Move W8, [X22+3798]
	009 Move X21, [X21+1416]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xDBB000
	017 Move X0, [X0+1416]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3798], W8
	021 Move X0, [X21]
	022 Move X21, [X19+48]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X19
	028 Move X1, X20
	029 Call DateTimeParse.GetDateTimeNow, X0, X1
	030 Compare X21, 0
	031 JumpIfEqual {48}
	032 Move X8, [X21]
	033 Move X1, X0
	034 Move X0, X21
	035 Move X9, [X8+616]
	036 Move X2, [X8+624]
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move W8, [X19+36]
	039 Move [X19], W0
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Or W8, W8, 4096
	043 Move [X19+36], W8
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X30, [X31+48]
	047 Return 
	048 Call 0x1C17F20

Method: System.Boolean GetDayOfNN(ref System.DateTimeResult result, ref System.Globalization.DateTimeStyles styles, ref System.DateTimeRawInfo raw, System.Globalization.DateTimeFormatInfo dtfi)

Disassembly:
	0x0336F104 BL 0x33767C8
	0x0336F108 MOV W0, W31
	0x0336F10C LDP X20, X19, [X31 + 0x20]
	0x0336F110 LDP X22, X21, [X31 + 0x10]
	0x0336F114 LDP X30, X23, [X31], #0x30
	0x0336F118 RET
	0x0336F11C STR X30, [X31 - 0x30]!
	0x0336F120 STP X22, X21, [X31 + 0x10]
	0x0336F124 STP X20, X19, [X31 + 0x20]
	0x0336F128 ADRP X20, 0x106D000
	0x0336F12C LDRB W8, [X20 + 0xEE0]
	0x0336F130 MOV X21, X1
	0x0336F134 MOV X19, X0
	0x0336F138 TBNZ X8, 0x0, 0x336F150
	0x0336F13C ADRP X0, 0xDB9000
	0x0336F140 LDR X0, [X0 + 0x588]
	0x0336F144 BL 0x1C16CF4
	0x0336F148 MOVZ W8, 0x1
	0x0336F14C STRB W8, [X20 + 0xEE0]
	0x0336F150 LDRB W8, [X19 + 0x24]
	0x0336F154 TBNZ X8, 0x7, 0x336F1B8
	0x0336F158 ADRP X22, 0xDB9000
	0x0336F15C LDR W20, [X21 + 0x10]
	0x0336F160 LDR X22, [X22 + 0x588]
	0x0336F164 MOV X0, X21
	0x0336F168 MOV W1, W31
	0x0336F16C MOV X2, X31
	0x0336F170 BL 0x3376694
	0x0336F174 LDR X8, [X22]
	0x0336F178 MOV W21, W0
	0x0336F17C LDR W9, [X8 + 0xE0]
	0x0336F180 CBNZ W9, 0x336F18C
	0x0336F184 MOV X0, X8
	0x0336F188 BL 0x1C16DFC
	0x0336F18C MOVZ W3, 0x1
	0x0336F190 MOV X0, X19
	0x0336F194 MOV W1, W20
	0x0336F198 MOV W2, W21
	0x0336F19C BL 0x336DD88
	0x0336F1A0 TBZ X0, 0x0, 0x336F1B8
	0x0336F1A4 LDR W8, [X19 + 0x24]
	0x0336F1A8 MOVZ W0, 0x1
	0x0336F1AC ORR W8, W8, 0x80
	0x0336F1B0 STR W8, [X19 + 0x24]
	0x0336F1B4 B 0x336F1C8
	0x0336F1B8 MOV X0, X19
	0x0336F1BC MOV X1, X31
	0x0336F1C0 BL 0x33767C8
	0x0336F1C4 MOV W0, W31
	0x0336F1C8 LDP X20, X19, [X31 + 0x20]
	0x0336F1CC LDP X22, X21, [X31 + 0x10]
	0x0336F1D0 LDR X30, [X31], #0x30
	0x0336F1D4 RET
	0x0336F1D8 STP X30, X21, [X31 - 0x20]!
	0x0336F1DC STP X20, X19, [X31 + 0x10]
	0x0336F1E0 ADRP X21, 0x106D000
	0x0336F1E4 LDRB W8, [X21 + 0xEE1]
	0x0336F1E8 MOV X20, X1
	0x0336F1EC MOV X19, X0
	0x0336F1F0 TBNZ X8, 0x0, 0x336F208
	0x0336F1F4 ADRP X0, 0xDB9000
	0x0336F1F8 LDR X0, [X0 + 0x588]
	0x0336F1FC BL 0x1C16CF4
	0x0336F200 MOVZ W8, 0x1
	0x0336F204 STRB W8, [X21 + 0xEE1]
	0x0336F208 LDRB W8, [X19 + 0x24]
	0x0336F20C TBNZ X8, 0x7, 0x336F258
	0x0336F210 ADRP X8, 0xDB9000
	0x0336F214 LDR X8, [X8 + 0x588]
	0x0336F218 LDP W20, W21, [X20 + 0xC]
	0x0336F21C LDR X0, [X8]
	0x0336F220 LDR W8, [X0 + 0xE0]
	0x0336F224 CBNZ W8, 0x336F22C
	0x0336F228 BL 0x1C16DFC
	0x0336F22C MOVZ W3, 0x1
	0x0336F230 MOV X0, X19
	0x0336F234 MOV W1, W21
	0x0336F238 MOV W2, W20
	0x0336F23C BL 0x336DD88
	0x0336F240 TBZ X0, 0x0, 0x336F258
	0x0336F244 LDR W8, [X19 + 0x24]
	0x0336F248 MOVZ W0, 0x1
	0x0336F24C ORR W8, W8, 0x80
	0x0336F250 STR W8, [X19 + 0x24]
	0x0336F254 B 0x336F268
	0x0336F258 MOV X0, X19
	0x0336F25C MOV X1, X31
	0x0336F260 BL 0x33767C8
	0x0336F264 MOV W0, W31
	0x0336F268 LDP X20, X19, [X31 + 0x10]
	0x0336F26C LDP X30, X21, [X31], #0x20
	0x0336F270 RET
	0x0336F274 STR X30, [X31 - 0x20]!

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x106E000
	009 Move W8, [X21+3799]
	010 Move X20, X3
	011 Move X22, X2
	012 Move X23, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xDBA000
	019 Move X0, [X0+1416]
	020 Call 0x1C17CF4
	021 Move X0, 0xDBC000
	022 Move X0, [X0+3176]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+3799], W8
	026 Move [X31+12], W31
	027 Move W8, [X19+36]
	028 Move TEMP, X8
	029 And TEMP, TEMP, 128
	030 Compare TEMP, 128
	031 JumpIfEqual {98}
	032 Move X0, X22
	033 Move W1, W31
	034 Move X2, X31
	035 Call DateTimeRawInfo.GetNumber, X0, X1
	036 Move W21, W0
	037 Move W1, 1
	038 Move X0, X22
	039 Move X2, X31
	040 Call DateTimeRawInfo.GetNumber, X0, X1
	041 Move X24, 0xDBA000
	042 Move X24, [X24+1416]
	043 Move W22, W0
	044 Move X8, [X24]
	045 Move W9, [X8+224]
	046 Compare W9, 0
	047 JumpIfNotEqual {50}
	048 Move X0, X8
	049 Call 0x1C17DFC
	050 Move X0, X19
	051 Move X1, X23
	052 Call DateTimeParse.GetDefaultYear, X0, X1
	053 Compare X20, 0
	054 JumpIfEqual {110}
	055 Move X0, X20
	056 Move X1, X31
	057 Call DateTimeFormatInfo.get_MonthDayPattern, X0
	058 Add X2, X31, 12
	059 Call DateTimeParse.GetMonthDayOrder, X0, X1, X2
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {76}
	064 Move X0, [X24]
	065 Move W23, [X31+12]
	066 Move W20, [X19]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 Move X0, X19
	072 Move W1, W20
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move W2, W21
	075 Move W3, W22
	076 Move X0, X20
	077 Move X1, X31
	078 Call DateTimeFormatInfo.get_MonthDayPattern, X0
	079 Move X8, 0xDBC000
	080 Move X8, [X8+3176]
	081 Move X3, X0
	082 Move W1, 3
	083 Move X0, X19
	084 Move X2, [X8]
	085 Move X4, X31
	086 Call DateTimeResult.SetFailure, X0, X1, X2, X3
	087 Move W2, W22
	088 Move W3, W21
	089 Call DateTimeParse.SetDateYMD, X0, X1, X2, X3
	090 Move TEMP, X0
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfNotEqual {98}
	094 Move W8, [X19+36]
	095 Move W0, 1
	096 Or W8, W8, 128
	097 Move [X19+36], W8
	098 Move X0, X19
	099 Move X1, X31
	100 Call DateTimeResult.SetBadDateTimeFailure, X0
	101 Move W0, W31
	102 Move X20, [X31+48]
	103 Move X19, [X31+56]
	104 Move X22, [X31+32]
	105 Move X21, [X31+40]
	106 Move X24, [X31+16]
	107 Move X23, [X31+24]
	108 Move X30, [X31+64]
	109 Return X0
	110 Call 0x1C17F20

Method: System.Boolean GetDayOfNNN(ref System.DateTimeResult result, ref System.DateTimeRawInfo raw, System.Globalization.DateTimeFormatInfo dtfi)

Disassembly:
	0x0336F278 STP X20, X19, [X31 + 0x10]
	0x0336F27C LDR W8, [X1 + 0x1C]
	0x0336F280 ADDS W31, W8, 0x1
	0x0336F284 B.EQ 0x336F294
	0x0336F288 LDP X20, X19, [X31 + 0x10]
	0x0336F28C LDR X30, [X31], #0x20
	0x0336F290 RET
	0x0336F294 MOV X20, X0
	0x0336F298 CBZ X0, 0x336F330
	0x0336F29C MOV X19, X1
	0x0336F2A0 MOV X0, X20
	0x0336F2A4 MOV X1, X31
	0x0336F2A8 BL 0x3325044
	0x0336F2AC CBZ X0, 0x336F288
	0x0336F2B0 MOV X0, X20
	0x0336F2B4 MOV X1, X31
	0x0336F2B8 BL 0x3325630
	0x0336F2BC CBZ X0, 0x336F288
	0x0336F2C0 MOV X0, X20
	0x0336F2C4 MOV X1, X31
	0x0336F2C8 BL 0x3325044
	0x0336F2CC CBZ X0, 0x336F330
	0x0336F2D0 LDR W8, [X0 + 0x10]
	0x0336F2D4 CBNZ W8, 0x336F2F4
	0x0336F2D8 MOV X0, X20
	0x0336F2DC MOV X1, X31
	0x0336F2E0 BL 0x3325630
	0x0336F2E4 CBZ X0, 0x336F330
	0x0336F2E8 LDR W8, [X0 + 0x10]
	0x0336F2EC CBZ W8, 0x336F2F4
	0x0336F2F0 STR W31, [X19 + 0x1C]
	0x0336F2F4 MOV X0, X20
	0x0336F2F8 MOV X1, X31
	0x0336F2FC BL 0x3325630
	0x0336F300 CBZ X0, 0x336F330
	0x0336F304 LDR W8, [X0 + 0x10]
	0x0336F308 CBNZ W8, 0x336F288
	0x0336F30C MOV X0, X20
	0x0336F310 MOV X1, X31
	0x0336F314 BL 0x3325044
	0x0336F318 CBZ X0, 0x336F330
	0x0336F31C LDR W8, [X0 + 0x10]
	0x0336F320 CBZ W8, 0x336F288
	0x0336F324 MOVZ W8, 0x1
	0x0336F328 STR W8, [X19 + 0x1C]
	0x0336F32C B 0x336F288
	0x0336F330 BL 0x1C16F20
	0x0336F334 ADDS W31, W1, 0x1
	0x0336F338 B.EQ 0x336F36C
	0x0336F33C LDR W8, [X0]
	0x0336F340 CBZ W1, 0x336F35C
	0x0336F344 CMP W8, 0x17
	0x0336F348 B.HI 0x336F374
	0x0336F34C CMP W8, 0xB
	0x0336F350 B.GT 0x336F36C
	0x0336F354 ADD W8, W8, 0xC
	0x0336F358 B 0x336F368
	0x0336F35C CMP W8, 0xC
	0x0336F360 B.HI 0x336F374
	0x0336F364 CSEL W8, W31, W8, EQ
	0x0336F368 STR W8, [X0]
	0x0336F36C MOVZ W0, 0x1
	0x0336F370 RET
	0x0336F374 MOV W0, W31
	0x0336F378 RET
	0x0336F37C STP X30, X19, [X31 - 0x10]!
	0x0336F380 LDRB W8, [X0 + 0x24]
	0x0336F384 MOV X19, X0
	0x0336F388 TBNZ X8, 0x6, 0x336F3C0
	0x0336F38C LDR W8, [X1 + 0x1C]
	0x0336F390 ADDS W31, W8, 0x1
	0x0336F394 B.EQ 0x336F3C0
	0x0336F398 MOV X0, X1
	0x0336F39C MOV W1, W31
	0x0336F3A0 MOV X2, X31
	0x0336F3A4 BL 0x3376694
	0x0336F3A8 LDR W8, [X19 + 0x24]
	0x0336F3AC STR W0, [X19 + 0xC]
	0x0336F3B0 MOVZ W0, 0x1
	0x0336F3B4 ORR W8, W8, 0x40
	0x0336F3B8 STR W8, [X19 + 0x24]
	0x0336F3BC B 0x336F3D0
	0x0336F3C0 MOV X0, X19
	0x0336F3C4 MOV X1, X31
	0x0336F3C8 BL 0x33767C8
	0x0336F3CC MOV W0, W31
	0x0336F3D0 LDP X30, X19, [X31], #0x10
	0x0336F3D4 RET
	0x0336F3D8 STP X30, X21, [X31 - 0x20]!
	0x0336F3DC STP X20, X19, [X31 + 0x10]
	0x0336F3E0 LDR W21, [X0 + 0x24]
	0x0336F3E4 MOV X19, X0
	0x0336F3E8 TBNZ X21, 0x6, 0x336F428
	0x0336F3EC MOV X20, X1
	0x0336F3F0 MOV X0, X1
	0x0336F3F4 MOV W1, W31
	0x0336F3F8 MOV X2, X31
	0x0336F3FC BL 0x3376694
	0x0336F400 STR W0, [X19 + 0xC]
	0x0336F404 MOVZ W1, 0x1
	0x0336F408 MOV X0, X20
	0x0336F40C MOV X2, X31
	0x0336F410 BL 0x3376694
	0x0336F414 LDR W8, [X19 + 0x24]
	0x0336F418 STR W0, [X19 + 0x10]
	0x0336F41C ORR W8, W8, 0x40
	0x0336F420 STR W8, [X19 + 0x24]
	0x0336F424 B 0x336F434
	0x0336F428 MOV X0, X19
	0x0336F42C MOV X1, X31
	0x0336F430 BL 0x33767C8
	0x0336F434 LDP X20, X19, [X31 + 0x10]
	0x0336F438 ANDS W31, W21, 0x40
	0x0336F43C CSET W0, EQ
	0x0336F440 LDP X30, X21, [X31], #0x20
	0x0336F444 RET
	0x0336F448 STP X30, X21, [X31 - 0x20]!
	0x0336F44C STP X20, X19, [X31 + 0x10]
	0x0336F450 LDR W21, [X0 + 0x24]
	0x0336F454 MOV X19, X0
	0x0336F458 TBNZ X21, 0x6, 0x336F4AC
	0x0336F45C MOV X20, X1
	0x0336F460 MOV X0, X1
	0x0336F464 MOV W1, W31
	0x0336F468 MOV X2, X31
	0x0336F46C BL 0x3376694
	0x0336F470 STR W0, [X19 + 0xC]
	0x0336F474 MOVZ W1, 0x1
	0x0336F478 MOV X0, X20
	0x0336F47C MOV X2, X31
	0x0336F480 BL 0x3376694
	0x0336F484 STR W0, [X19 + 0x10]
	0x0336F488 MOVZ W1, 0x2
	0x0336F48C MOV X0, X20
	0x0336F490 MOV X2, X31
	0x0336F494 BL 0x3376694
	0x0336F498 LDR W8, [X19 + 0x24]
	0x0336F49C STR W0, [X19 + 0x14]
	0x0336F4A0 ORR W8, W8, 0x40
	0x0336F4A4 STR W8, [X19 + 0x24]
	0x0336F4A8 B 0x336F4B8
	0x0336F4AC MOV X0, X19
	0x0336F4B0 MOV X1, X31
	0x0336F4B4 BL 0x33767C8
	0x0336F4B8 LDP X20, X19, [X31 + 0x10]
	0x0336F4BC ANDS W31, W21, 0x40
	0x0336F4C0 CSET W0, EQ
	0x0336F4C4 LDP X30, X21, [X31], #0x20
	0x0336F4C8 RET
	0x0336F4CC STP X30, X19, [X31 - 0x10]!
	0x0336F4D0 LDR W8, [X1 + 0x8]
	0x0336F4D4 MOV X19, X0
	0x0336F4D8 CMP W8, 0x1
	0x0336F4DC B.NE 0x336F4EC
	0x0336F4E0 LDR W8, [X19 + 0x8]
	0x0336F4E4 ADDS W31, W8, 0x1
	0x0336F4E8 B.EQ 0x336F500
	0x0336F4EC MOV X0, X19
	0x0336F4F0 MOV X1, X31
	0x0336F4F4 BL 0x33767C8
	0x0336F4F8 MOV W0, W31
	0x0336F4FC B 0x336F518
	0x0336F500 MOV X0, X1
	0x0336F504 MOV W1, W31
	0x0336F508 MOV X2, X31
	0x0336F50C BL 0x3376694
	0x0336F510 STR W0, [X19 + 0x8]
	0x0336F514 MOVZ W0, 0x1
	0x0336F518 LDP X30, X19, [X31], #0x10
	0x0336F51C RET
	0x0336F520 STP X30, X21, [X31 - 0x20]!
	0x0336F524 STP X20, X19, [X31 + 0x10]
	0x0336F528 ADRP X21, 0x106D000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x106E000
	011 Move W8, [X20+3800]
	012 Move X23, X2
	013 Move X22, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xDBA000
	020 Move X0, [X0+1416]
	021 Call 0x1C17CF4
	022 Move X0, 0xDBC000
	023 Move X0, [X0+3176]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+3800], W8
	027 Move [X31+8], X31
	028 Move W8, [X19+36]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 128
	031 Compare TEMP, 128
	032 JumpIfEqual {204}
	033 Move X0, X22
	034 Move W1, W31
	035 Move X2, X31
	036 Call DateTimeRawInfo.GetNumber, X0, X1
	037 Move W21, W0
	038 Move W1, 1
	039 Move X0, X22
	040 Move X2, X31
	041 Call DateTimeRawInfo.GetNumber, X0, X1
	042 Move W20, W0
	043 Move W1, 2
	044 Move X0, X22
	045 Move X2, X31
	046 Call DateTimeRawInfo.GetNumber, X0, X1
	047 Compare X23, 0
	048 JumpIfEqual {218}
	049 Move W22, W0
	050 Move X0, X23
	051 Move X1, X31
	052 Call DateTimeFormatInfo.get_ShortDatePattern, X0
	053 Move X25, 0xDBA000
	054 Move X25, [X25+1416]
	055 Move X24, X0
	056 Move X8, [X25]
	057 Move W9, [X8+224]
	058 Compare W9, 0
	059 JumpIfNotEqual {62}
	060 Move X0, X8
	061 Call 0x1C17DFC
	062 Add X2, X31, 12
	063 Move X0, X24
	064 Call DateTimeParse.GetYearMonthDayOrder, X0, X1, X2
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {105}
	069 Move W8, [X31+12]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X9, -41779200
	072 Add X9, X9, 1976
	073 NotImplemented "Instruction ADR not yet implemented."
	074 Move W11, [X9]
	075 Add X10, X10, X11
	076 CallNoReturn X10
	077 Move X0, [X25]
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {82}
	081 Call 0x1C17DFC
	082 Add X2, X31, 8
	083 Move X0, X19
	084 Move W1, W21
	085 Call DateTimeParse.TryAdjustYear, X0, X1, X2
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {204}
	090 Move X0, [X25]
	091 Move W21, [X31+8]
	092 Move W8, [X0+224]
	093 Compare W8, 0
	094 JumpIfNotEqual {96}
	095 Call 0x1C17DFC
	096 Move X0, X19
	097 Move W1, W21
	098 Move W2, W20
	099 Move W3, W22
	100 Call DateTimeParse.SetDateYMD, X0, X1, X2, X3
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfEqual {200}
	105 Move X0, X23
	106 Move X1, X31
	107 Call DateTimeFormatInfo.get_ShortDatePattern, X0
	108 Move X8, 0xDBC000
	109 Move X8, [X8+3176]
	110 Move X3, X0
	111 Move W1, 3
	112 Move X0, X19
	113 Move X2, [X8]
	114 Move X4, X31
	115 Call DateTimeResult.SetFailure, X0, X1, X2, X3
	116 Move X0, [X25]
	117 Move W8, [X0+224]
	118 Compare W8, 0
	119 JumpIfNotEqual {121}
	120 Call 0x1C17DFC
	121 Add X2, X31, 8
	122 Move X0, X19
	123 Move W1, W22
	124 Call DateTimeParse.TryAdjustYear, X0, X1, X2
	125 Move TEMP, X0
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfNotEqual {204}
	129 Move X0, [X25]
	130 Move W22, [X31+8]
	131 Move W8, [X0+224]
	132 Compare W8, 0
	133 JumpIfNotEqual {135}
	134 Call 0x1C17DFC
	135 Move X0, X19
	136 Move W1, W21
	137 Move W2, W20
	138 Move W3, W22
	139 Call DateTimeParse.SetDateMDY, X0, X1, X2, X3
	140 Move TEMP, X0
	141 And TEMP, TEMP, 1
	142 Compare TEMP, 1
	143 JumpIfEqual {200}
	144 Move X0, [X25]
	145 Move W8, [X0+224]
	146 Compare W8, 0
	147 JumpIfNotEqual {149}
	148 Call 0x1C17DFC
	149 Add X2, X31, 8
	150 Move X0, X19
	151 Move W1, W22
	152 Call DateTimeParse.TryAdjustYear, X0, X1, X2
	153 Move TEMP, X0
	154 And TEMP, TEMP, 1
	155 Compare TEMP, 1
	156 JumpIfNotEqual {204}
	157 Move X0, [X25]
	158 Move W22, [X31+8]
	159 Move W8, [X0+224]
	160 Compare W8, 0
	161 JumpIfNotEqual {163}
	162 Call 0x1C17DFC
	163 Move X0, X19
	164 Move W1, W21
	165 Move W2, W20
	166 Move W3, W22
	167 Call DateTimeParse.SetDateDMY, X0, X1, X2, X3
	168 Move TEMP, X0
	169 And TEMP, TEMP, 1
	170 Compare TEMP, 1
	171 JumpIfEqual {200}
	172 Move X0, [X25]
	173 Move W8, [X0+224]
	174 Compare W8, 0
	175 JumpIfNotEqual {177}
	176 Call 0x1C17DFC
	177 Add X2, X31, 8
	178 Move X0, X19
	179 Move W1, W21
	180 Call DateTimeParse.TryAdjustYear, X0, X1, X2
	181 Move TEMP, X0
	182 And TEMP, TEMP, 1
	183 Compare TEMP, 1
	184 JumpIfNotEqual {204}
	185 Move X0, [X25]
	186 Move W21, [X31+8]
	187 Move W8, [X0+224]
	188 Compare W8, 0
	189 JumpIfNotEqual {191}
	190 Call 0x1C17DFC
	191 Move X0, X19
	192 Move W1, W21
	193 Move W2, W20
	194 Move W3, W22
	195 Call DateTimeParse.SetDateYDM, X0, X1, X2, X3
	196 Move TEMP, X0
	197 And TEMP, TEMP, 1
	198 Compare TEMP, 1
	199 JumpIfNotEqual {204}
	200 Move W8, [X19+36]
	201 Move W0, 1
	202 Or W8, W8, 128
	203 Move [X19+36], W8
	204 Move X0, X19
	205 Move X1, X31
	206 Call DateTimeResult.SetBadDateTimeFailure, X0
	207 Move W0, W31
	208 Move X20, [X31+64]
	209 Move X19, [X31+72]
	210 Move X22, [X31+48]
	211 Move X21, [X31+56]
	212 Move X24, [X31+32]
	213 Move X23, [X31+40]
	214 Move X30, [X31+16]
	215 Move X25, [X31+24]
	216 Add X31, X31, 80
	217 Return X0
	218 Call 0x1C17F20

Method: System.Boolean GetDayOfMN(ref System.DateTimeResult result, ref System.Globalization.DateTimeStyles styles, ref System.DateTimeRawInfo raw, System.Globalization.DateTimeFormatInfo dtfi)

Disassembly:
	0x0336F52C LDRB W8, [X21 + 0xEE2]
	0x0336F530 MOV X20, X1
	0x0336F534 MOV X19, X0
	0x0336F538 TBNZ X8, 0x0, 0x336F550
	0x0336F53C ADRP X0, 0xDB9000
	0x0336F540 LDR X0, [X0 + 0x588]
	0x0336F544 BL 0x1C16CF4
	0x0336F548 MOVZ W8, 0x1
	0x0336F54C STRB W8, [X21 + 0xEE2]
	0x0336F550 LDR W8, [X19 + 0x4]
	0x0336F554 ADDS W31, W8, 0x1
	0x0336F558 B.EQ 0x336F5B8
	0x0336F55C LDR W8, [X19]
	0x0336F560 ADDS W31, W8, 0x1
	0x0336F564 B.NE 0x336F5B8
	0x0336F568 MOV X0, X20
	0x0336F56C MOV W1, W31
	0x0336F570 MOV X2, X31
	0x0336F574 BL 0x3376694
	0x0336F578 ADRP X8, 0xDB9000
	0x0336F57C LDR X8, [X8 + 0x588]
	0x0336F580 MOV W20, W0
	0x0336F584 LDR X8, [X8]
	0x0336F588 LDR W9, [X8 + 0xE0]
	0x0336F58C CBNZ W9, 0x336F598
	0x0336F590 MOV X0, X8
	0x0336F594 BL 0x1C16DFC
	0x0336F598 MOV X0, X19
	0x0336F59C MOV W1, W20
	0x0336F5A0 MOV X2, X19
	0x0336F5A4 BL 0x336DCC4
	0x0336F5A8 TBZ X0, 0x0, 0x336F5B8
	0x0336F5AC MOVZ W0, 0x1
	0x0336F5B0 STR W0, [X19 + 0x8]
	0x0336F5B4 B 0x336F5C8
	0x0336F5B8 MOV X0, X19
	0x0336F5BC MOV X1, X31
	0x0336F5C0 BL 0x33767C8
	0x0336F5C4 MOV W0, W31
	0x0336F5C8 LDP X20, X19, [X31 + 0x10]
	0x0336F5CC LDP X30, X21, [X31], #0x20
	0x0336F5D0 RET
	0x0336F5D4 SUB X31, X31, 0x40
	0x0336F5D8 STP X30, X23, [X31 + 0x10]
	0x0336F5DC STP X22, X21, [X31 + 0x20]
	0x0336F5E0 STP X20, X19, [X31 + 0x30]
	0x0336F5E4 ADRP X22, 0x106D000
	0x0336F5E8 LDRB W8, [X22 + 0xEE3]
	0x0336F5EC MOV X21, X2
	0x0336F5F0 MOV X20, X1
	0x0336F5F4 MOV X19, X0
	0x0336F5F8 TBNZ X8, 0x0, 0x336F61C
	0x0336F5FC ADRP X0, 0xDB9000
	0x0336F600 LDR X0, [X0 + 0x588]
	0x0336F604 BL 0x1C16CF4
	0x0336F608 ADRP X0, 0xDBB000
	0x0336F60C LDR X0, [X0 + 0xC68]
	0x0336F610 BL 0x1C16CF4
	0x0336F614 MOVZ W8, 0x1
	0x0336F618 STRB W8, [X22 + 0xEE3]
	0x0336F61C STR X31, [X31 + 0x8]
	0x0336F620 LDR W9, [X19 + 0x24]
	0x0336F624 AND W8, W9, 0x6
	0x0336F628 TBNZ X9, 0x0, 0x336F6CC
	0x0336F62C CMP W8, 0x2
	0x0336F630 B.NE 0x336F7D8
	0x0336F634 CBZ X21, 0x336F7FC
	0x0336F638 MOV X0, X21
	0x0336F63C MOV X1, X31
	0x0336F640 BL 0x332569C
	0x0336F644 ADRP X23, 0xDB9000
	0x0336F648 LDR X23, [X23 + 0x588]
	0x0336F64C MOV X22, X0
	0x0336F650 LDR X8, [X23]
	0x0336F654 LDR W9, [X8 + 0xE0]
	0x0336F658 CBNZ W9, 0x336F664
	0x0336F65C MOV X0, X8
	0x0336F660 BL 0x1C16DFC
	0x0336F664 ADD X2, X31, 0xC
	0x0336F668 MOV X0, X22
	0x0336F66C BL 0x336D668
	0x0336F670 TBZ X0, 0x0, 0x336F760
	0x0336F674 LDR W8, [X31 + 0xC]
	0x0336F678 CBZ W8, 0x336F790
	0x0336F67C MOVZ W1, 0x1
	0x0336F680 MOV X0, X20
	0x0336F684 MOV X2, X31
	0x0336F688 BL 0x3376694
	0x0336F68C LDR X8, [X23]
	0x0336F690 MOV W21, W0
	0x0336F694 LDR W9, [X8 + 0xE0]
	0x0336F698 CBNZ W9, 0x336F6A4
	0x0336F69C MOV X0, X8
	0x0336F6A0 BL 0x1C16DFC
	0x0336F6A4 ADD X2, X31, 0x8
	0x0336F6A8 MOV X0, X19
	0x0336F6AC MOV W1, W21
	0x0336F6B0 BL 0x336DCC4
	0x0336F6B4 TBZ X0, 0x0, 0x336F7D8
	0x0336F6B8 LDR W21, [X31 + 0x8]
	0x0336F6BC LDR W22, [X19 + 0x4]
	0x0336F6C0 MOV X0, X20
	0x0336F6C4 MOV W1, W31
	0x0336F6C8 B 0x336F720
	0x0336F6CC CBNZ W8, 0x336F7D8
	0x0336F6D0 ADRP X23, 0xDB9000
	0x0336F6D4 LDR X23, [X23 + 0x588]
	0x0336F6D8 LDR W21, [X20 + 0x10]
	0x0336F6DC LDR X0, [X23]
	0x0336F6E0 LDR W8, [X0 + 0xE0]
	0x0336F6E4 CBNZ W8, 0x336F6EC
	0x0336F6E8 BL 0x1C16DFC
	0x0336F6EC MOV X0, X19
	0x0336F6F0 MOV W1, W21
	0x0336F6F4 MOV X2, X19
	0x0336F6F8 BL 0x336DCC4
	0x0336F6FC TBZ X0, 0x0, 0x336F7D8
	0x0336F700 LDR W21, [X19]
	0x0336F704 MOV X0, X20
	0x0336F708 MOV W1, W31
	0x0336F70C MOV X2, X31
	0x0336F710 BL 0x3376694
	0x0336F714 MOV W22, W0
	0x0336F718 MOVZ W1, 0x1
	0x0336F71C MOV X0, X20
	0x0336F720 MOV X2, X31
	0x0336F724 BL 0x3376694
	0x0336F728 LDR X8, [X23]
	0x0336F72C MOV W20, W0
	0x0336F730 LDR W9, [X8 + 0xE0]
	0x0336F734 CBNZ W9, 0x336F740
	0x0336F738 MOV X0, X8
	0x0336F73C BL 0x1C16DFC
	0x0336F740 MOV X0, X19
	0x0336F744 MOV W1, W21
	0x0336F748 MOV W2, W22
	0x0336F74C MOV W3, W20

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X23, 0x106E000
	010 Move W8, [X23+3801]
	011 Move X22, X3
	012 Move X20, X2
	013 Move X21, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xDBA000
	020 Move X0, [X0+1416]
	021 Call 0x1C17CF4
	022 Move X0, 0xDBC000
	023 Move X0, [X0+3176]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+3801], W8
	027 Move [X31+24], X31
	028 Move [X31+12], W31
	029 Move W8, [X19+36]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 128
	032 Compare TEMP, 128
	033 JumpIfEqual {139}
	034 Compare X22, 0
	035 JumpIfEqual {164}
	036 Move X0, X22
	037 Move X1, X31
	038 Call DateTimeFormatInfo.get_MonthDayPattern, X0
	039 Move X24, 0xDBA000
	040 Move X24, [X24+1416]
	041 Move X23, X0
	042 Move X8, [X24]
	043 Move W9, [X8+224]
	044 Compare W9, 0
	045 JumpIfNotEqual {48}
	046 Move X0, X8
	047 Call 0x1C17DFC
	048 Add X2, X31, 28
	049 Move X0, X23
	050 Call DateTimeParse.GetMonthDayOrder, X0, X1, X2
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {112}
	055 Move W8, [X31+28]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X0, X22
	058 Move X1, X31
	059 Call DateTimeFormatInfo.get_YearMonthPattern, X0
	060 Move X8, [X24]
	061 Move X23, X0
	062 Move W9, [X8+224]
	063 Compare W9, 0
	064 JumpIfNotEqual {67}
	065 Move X0, X8
	066 Call 0x1C17DFC
	067 Add X2, X31, 24
	068 Move X0, X23
	069 Call DateTimeParse.GetYearMonthOrder, X0, X1, X2
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfNotEqual {142}
	074 Move W8, [X31+24]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X0, X20
	077 Move W1, W31
	078 Move X2, X31
	079 Call DateTimeRawInfo.GetNumber, X0, X1
	080 Move X8, [X24]
	081 Move W21, W0
	082 Move W9, [X8+224]
	083 Compare W9, 0
	084 JumpIfNotEqual {87}
	085 Move X0, X8
	086 Call 0x1C17DFC
	087 Add X2, X31, 12
	088 Move X0, X19
	089 Move W1, W21
	090 Call DateTimeParse.TryAdjustYear, X0, X1, X2
	091 Move TEMP, X0
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfNotEqual {139}
	095 Move X0, [X24]
	096 Move W21, [X31+12]
	097 Move W22, [X20+12]
	098 Move W8, [X0+224]
	099 Compare W8, 0
	100 JumpIfNotEqual {102}
	101 Call 0x1C17DFC
	102 Move W3, 1
	103 Move X0, X19
	104 Move W1, W21
	105 Move W2, W22
	106 Move W20, 1
	107 Call DateTimeParse.SetDateYMD, X0, X1, X2, X3
	108 Move TEMP, X0
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfNotEqual {139}
	112 Move X0, X22
	113 Move X1, X31
	114 Call DateTimeFormatInfo.get_MonthDayPattern, X0
	115 Move X0, [X24]
	116 Move W8, [X0+224]
	117 Compare W8, 0
	118 JumpIfNotEqual {120}
	119 Call 0x1C17DFC
	120 Move X0, X19
	121 Move X1, X21
	122 Call DateTimeParse.GetDefaultYear, X0, X1
	123 Move W21, [X19]
	124 Move W22, [X20+12]
	125 Move X0, X20
	126 Move W1, W31
	127 Move X2, X31
	128 Call DateTimeRawInfo.GetNumber, X0, X1
	129 Move W3, W0
	130 Move X0, X19
	131 Move W1, W21
	132 Move W2, W22
	133 Call DateTimeParse.SetDateYMD, X0, X1, X2, X3
	134 Move TEMP, X0
	135 And TEMP, TEMP, 1
	136 Compare TEMP, 1
	137 JumpIfNotEqual {139}
	138 Move W20, 1
	139 Move X0, X19
	140 Move X1, X31
	141 Call DateTimeResult.SetBadDateTimeFailure, X0
	142 Move X0, X22
	143 Move X1, X31
	144 Call DateTimeFormatInfo.get_YearMonthPattern, X0
	145 Move X8, 0xDBC000
	146 Move X8, [X8+3176]
	147 Move X3, X0
	148 Move W1, 3
	149 Move X0, X19
	150 Move X2, [X8]
	151 Move X4, X31
	152 Call DateTimeResult.SetFailure, X0, X1, X2, X3
	153 Move W20, W31
	154 Move W0, W20
	155 Move X20, [X31+64]
	156 Move X19, [X31+72]
	157 Move X22, [X31+48]
	158 Move X21, [X31+56]
	159 Move X24, [X31+32]
	160 Move X23, [X31+40]
	161 Move X30, [X31+16]
	162 Add X31, X31, 80
	163 Return X0
	164 Call 0x1C17F20

Method: System.Boolean GetHebrewDayOfNM(ref System.DateTimeResult result, ref System.DateTimeRawInfo raw, System.Globalization.DateTimeFormatInfo dtfi)

Disassembly:
	0x0336F750 BL 0x336DD88
	0x0336F754 TBZ X0, 0x0, 0x336F7D8
	0x0336F758 MOVZ W0, 0x1
	0x0336F75C B 0x336F7E8
	0x0336F760 MOV X0, X21
	0x0336F764 MOV X1, X31
	0x0336F768 BL 0x332569C
	0x0336F76C ADRP X8, 0xDBB000
	0x0336F770 LDR X8, [X8 + 0xC68]
	0x0336F774 MOV X3, X0
	0x0336F778 MOVZ W1, 0x3
	0x0336F77C MOV X0, X19
	0x0336F780 LDR X2, [X8]
	0x0336F784 MOV X4, X31
	0x0336F788 BL 0x3376824
	0x0336F78C B 0x336F7E4
	0x0336F790 MOV X0, X20
	0x0336F794 MOV W1, W31
	0x0336F798 MOV X2, X31
	0x0336F79C BL 0x3376694
	0x0336F7A0 LDR X8, [X23]
	0x0336F7A4 MOV W21, W0
	0x0336F7A8 LDR W9, [X8 + 0xE0]
	0x0336F7AC CBNZ W9, 0x336F7B8
	0x0336F7B0 MOV X0, X8
	0x0336F7B4 BL 0x1C16DFC
	0x0336F7B8 ADD X2, X31, 0x8
	0x0336F7BC MOV X0, X19
	0x0336F7C0 MOV W1, W21
	0x0336F7C4 BL 0x336DCC4
	0x0336F7C8 TBZ X0, 0x0, 0x336F7D8
	0x0336F7CC LDR W21, [X31 + 0x8]
	0x0336F7D0 LDR W22, [X19 + 0x4]
	0x0336F7D4 B 0x336F718
	0x0336F7D8 MOV X0, X19
	0x0336F7DC MOV X1, X31
	0x0336F7E0 BL 0x33767C8
	0x0336F7E4 MOV W0, W31
	0x0336F7E8 LDP X20, X19, [X31 + 0x30]
	0x0336F7EC LDP X22, X21, [X31 + 0x20]
	0x0336F7F0 LDP X30, X23, [X31 + 0x10]
	0x0336F7F4 ADD X31, X31, 0x40
	0x0336F7F8 RET
	0x0336F7FC BL 0x1C16F20
	0x0336F800 LDR W8, [X2 + 0x4]
	0x0336F804 CMP W8, 0xA00
	0x0336F808 B.LE 0x336F840
	0x0336F80C CMP W8, 0xB00
	0x0336F810 B.EQ 0x336F874
	0x0336F814 CMP W8, 0xC00
	0x0336F818 B.EQ 0x336F890
	0x0336F81C CMP W8, 0xD00
	0x0336F820 B.NE 0x336F8E8
	0x0336F824 LDR W8, [X0 + 0x24]
	0x0336F828 TBNZ X8, 0x5, 0x336F8F0
	0x0336F82C ORR W8, W8, 0x20
	0x0336F830 STR W8, [X0 + 0x24]
	0x0336F834 LDR W8, [X2 + 0x8]
	0x0336F838 STR W8, [X0 + 0x14]
	0x0336F83C B 0x336F8E8
	0x0336F840 CMP W8, 0x800
	0x0336F844 B.EQ 0x336F8AC
	0x0336F848 CMP W8, 0x900
	0x0336F84C B.EQ 0x336F8CC
	0x0336F850 CMP W8, 0xA00
	0x0336F854 B.NE 0x336F8E8
	0x0336F858 LDR W8, [X0 + 0x24]
	0x0336F85C TBNZ X8, 0x2, 0x336F8F0
	0x0336F860 ORR W8, W8, 0x4
	0x0336F864 STR W8, [X0 + 0x24]
	0x0336F868 LDR W8, [X2 + 0x8]
	0x0336F86C STR W8, [X0 + 0x8]
	0x0336F870 B 0x336F8E8
	0x0336F874 LDR W8, [X0 + 0x24]
	0x0336F878 TBNZ X8, 0x3, 0x336F8F0
	0x0336F87C ORR W8, W8, 0x8
	0x0336F880 STR W8, [X0 + 0x24]
	0x0336F884 LDR W8, [X2 + 0x8]
	0x0336F888 STR W8, [X0 + 0xC]
	0x0336F88C B 0x336F8E8
	0x0336F890 LDR W8, [X0 + 0x24]
	0x0336F894 TBNZ X8, 0x4, 0x336F8F0
	0x0336F898 ORR W8, W8, 0x10
	0x0336F89C STR W8, [X0 + 0x24]
	0x0336F8A0 LDR W8, [X2 + 0x8]
	0x0336F8A4 STR W8, [X0 + 0x10]
	0x0336F8A8 B 0x336F8E8

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x106E000
	009 Move W8, [X22+3802]
	010 Move X21, X2
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xDBA000
	018 Move X0, [X0+1416]
	019 Call 0x1C17CF4
	020 Move X0, 0xDBC000
	021 Move X0, [X0+3176]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+3802], W8
	025 Move [X31+12], W31
	026 Compare X21, 0
	027 JumpIfEqual {102}
	028 Move X22, 0xDBA000
	029 Move X22, [X22+1416]
	030 Move X0, X21
	031 Move X1, X31
	032 Call DateTimeFormatInfo.get_MonthDayPattern, X0
	033 Move X8, [X22]
	034 Move X22, X0
	035 Move W9, [X8+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {40}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Add X2, X31, 12
	041 Move X0, X22
	042 Call DateTimeParse.GetMonthDayOrder, X0, X1, X2
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {79}
	047 Move W21, [X20+12]
	048 Move [X19+4], W21
	049 Move W8, [X31+12]
	050 And W8, W8, 0xFFFFFFFE
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X22, [X19+48]
	053 Move W23, [X19]
	054 Move X0, X20
	055 Move W1, W31
	056 Move X2, X31
	057 Call DateTimeRawInfo.GetNumber, X0, X1
	058 Compare X22, 0
	059 JumpIfEqual {102}
	060 Move X8, [X22]
	061 Move W4, [X19+32]
	062 Move W3, W0
	063 Move X0, X22
	064 Move X9, [X8+728]
	065 Move X5, [X8+736]
	066 Move W1, W23
	067 Move W2, W21
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfNotEqual {90}
	073 Move X0, X20
	074 Move W1, W31
	075 Move X2, X31
	076 Call DateTimeRawInfo.GetNumber, X0, X1
	077 Move [X19+8], W0
	078 Move W0, 1
	079 Move X0, X21
	080 Move X1, X31
	081 Call DateTimeFormatInfo.get_MonthDayPattern, X0
	082 Move X8, 0xDBC000
	083 Move X8, [X8+3176]
	084 Move X3, X0
	085 Move W1, 3
	086 Move X0, X19
	087 Move X2, [X8]
	088 Move X4, X31
	089 Call DateTimeResult.SetFailure, X0, X1, X2, X3
	090 Move X0, X19
	091 Move X1, X31
	092 Call DateTimeResult.SetBadDateTimeFailure, X0
	093 Move W0, W31
	094 Move X20, [X31+48]
	095 Move X19, [X31+56]
	096 Move X22, [X31+32]
	097 Move X21, [X31+40]
	098 Move X30, [X31+16]
	099 Move X23, [X31+24]
	100 Add X31, X31, 64
	101 Return X0
	102 Call 0x1C17F20

Method: System.Boolean GetDayOfNM(ref System.DateTimeResult result, ref System.Globalization.DateTimeStyles styles, ref System.DateTimeRawInfo raw, System.Globalization.DateTimeFormatInfo dtfi)

Disassembly:
	0x0336F8AC LDR W8, [X0 + 0x24]
	0x0336F8B0 TBNZ X8, 0x0, 0x336F8F0
	0x0336F8B4 ORR W8, W8, 0x1
	0x0336F8B8 STR W8, [X0 + 0x24]
	0x0336F8BC LDR W8, [X2 + 0x8]
	0x0336F8C0 STR W8, [X1 + 0x10]
	0x0336F8C4 STR W8, [X0]
	0x0336F8C8 B 0x336F8E8
	0x0336F8CC LDR W8, [X0 + 0x24]
	0x0336F8D0 TBNZ X8, 0x1, 0x336F8F0
	0x0336F8D4 ORR W8, W8, 0x2
	0x0336F8D8 STR W8, [X0 + 0x24]
	0x0336F8DC LDR W8, [X2 + 0x8]
	0x0336F8E0 STR W8, [X1 + 0xC]
	0x0336F8E4 STR W8, [X0 + 0x4]
	0x0336F8E8 MOVZ W0, 0x1
	0x0336F8EC RET
	0x0336F8F0 MOV W0, W31
	0x0336F8F4 RET
	0x0336F8F8 STR X30, [X31 - 0x40]!
	0x0336F8FC STP X24, X23, [X31 + 0x10]
	0x0336F900 STP X22, X21, [X31 + 0x20]
	0x0336F904 STP X20, X19, [X31 + 0x30]
	0x0336F908 ADRP X24, 0x106D000
	0x0336F90C LDRB W8, [X24 + 0xEE4]
	0x0336F910 MOV X21, X5
	0x0336F914 MOV X19, X4
	0x0336F918 MOV X22, X3
	0x0336F91C MOV X20, X2
	0x0336F920 MOV W23, W0
	0x0336F924 TBNZ X8, 0x0, 0x336F954
	0x0336F928 ADRP X0, 0xDB9000
	0x0336F92C LDR X0, [X0 + 0x588]
	0x0336F930 BL 0x1C16CF4
	0x0336F934 ADRP X0, 0xDB8000
	0x0336F938 LDR X0, [X0 + 0x930]
	0x0336F93C BL 0x1C16CF4
	0x0336F940 ADRP X0, 0xDBB000
	0x0336F944 LDR X0, [X0 + 0xC30]
	0x0336F948 BL 0x1C16CF4
	0x0336F94C MOVZ W8, 0x1
	0x0336F950 STRB W8, [X24 + 0xEE4]
	0x0336F954 SUB W8, W23, 0x17
	0x0336F958 CMP W8, 0xF
	0x0336F95C B.HI 0x336FAA0
	0x0336F960 ADRP X9, 0xFFFFFFFFFD827000
	0x0336F964 ADD X9, X9, 0x7BC
	0x0336F968 ADR X10, 0x10
	0x0336F96C LDRB W11, [X9, X8, LSL]
	0x0336F970 ADD X10, X10, X11, 0x2, LSL
	0x0336F974 BR X10
	0x0336F978 ADRP X23, 0xDB9000
	0x0336F97C LDR X23, [X23 + 0x588]
	0x0336F980 LDR X0, [X23]
	0x0336F984 LDR W8, [X0 + 0xE0]
	0x0336F988 CBNZ W8, 0x336F990
	0x0336F98C BL 0x1C16DFC
	0x0336F990 MOV X0, X20
	0x0336F994 MOV X1, X22
	0x0336F998 BL 0x336DF6C
	0x0336F99C CBZ X21, 0x336FC70
	0x0336F9A0 ADD X2, X19, 0xC
	0x0336F9A4 MOVZ W3, 0x1
	0x0336F9A8 MOV X0, X21
	0x0336F9AC MOV X1, X20
	0x0336F9B0 MOV X4, X31
	0x0336F9B4 BL 0x332728C
	0x0336F9B8 TBZ X0, 0x0, 0x336FC3C
	0x0336F9BC ADRP X22, 0xDB8000
	0x0336F9C0 LDR X22, [X22 + 0x930]
	0x0336F9C4 LDR X0, [X22]
	0x0336F9C8 LDR W8, [X0 + 0xE0]
	0x0336F9CC CBNZ W8, 0x336F9D4
	0x0336F9D0 BL 0x1C16DFC
	0x0336F9D4 ADRP X24, 0x106D000
	0x0336F9D8 LDRB W8, [X24 + 0xAFE]
	0x0336F9DC CBNZ W8, 0x336F9F4
	0x0336F9E0 ADRP X0, 0xDB8000
	0x0336F9E4 LDR X0, [X0 + 0x930]
	0x0336F9E8 BL 0x1C16CF4
	0x0336F9EC MOVZ W8, 0x1
	0x0336F9F0 STRB W8, [X24 + 0xAFE]
	0x0336F9F4 LDR X0, [X22]
	0x0336F9F8 LDR W8, [X0 + 0xE0]
	0x0336F9FC CBNZ W8, 0x336FA08
	0x0336FA00 BL 0x1C16DFC
	0x0336FA04 LDR X0, [X22]
	0x0336FA08 LDR X8, [X0 + 0xB8]
	0x0336FA0C LDRB W8, [X8]
	0x0336FA10 CBNZ W8, 0x336FC30
	0x0336FA14 LDR X0, [X23]
	0x0336FA18 LDR W8, [X0 + 0xE0]
	0x0336FA1C CBNZ W8, 0x336FA24
	0x0336FA20 BL 0x1C16DFC
	0x0336FA24 MOV X0, X20
	0x0336FA28 MOV X1, X19
	0x0336FA2C MOV X2, X21
	0x0336FA30 BL 0x336E750
	0x0336FA34 TBNZ X0, 0x0, 0x336FC30
	0x0336FA38 B 0x336FC58
	0x0336FA3C MOVZ W1, 0x1
	0x0336FA40 MOV X0, X19
	0x0336FA44 MOV X2, X31
	0x0336FA48 BL 0x3376694
	0x0336FA4C MOV X1, X19
	0x0336FA50 STR W0, [X1 + 0x10]!
	0x0336FA54 CBZ X21, 0x336FC70
	0x0336FA58 ADD X2, X19, 0xC
	0x0336FA5C MOVZ W3, 0x1
	0x0336FA60 MOV X0, X21
	0x0336FA64 MOV X4, X31
	0x0336FA68 BL 0x332728C
	0x0336FA6C TBZ X0, 0x0, 0x336FC3C
	0x0336FA70 ADRP X8, 0xDB9000
	0x0336FA74 LDR X8, [X8 + 0x588]
	0x0336FA78 LDR X0, [X8]
	0x0336FA7C LDR W8, [X0 + 0xE0]
	0x0336FA80 CBNZ W8, 0x336FA88
	0x0336FA84 BL 0x1C16DFC
	0x0336FA88 MOV X0, X20
	0x0336FA8C MOV X1, X19
	0x0336FA90 MOV X2, X21
	0x0336FA94 BL 0x336EAD0
	0x0336FA98 TBNZ X0, 0x0, 0x336FC30
	0x0336FA9C B 0x336FC58
	0x0336FAA0 MOV X0, X20
	0x0336FAA4 MOV X1, X31
	0x0336FAA8 BL 0x33767C8
	0x0336FAAC B 0x336FC58
	0x0336FAB0 CBZ X21, 0x336FC70
	0x0336FAB4 ADD X2, X19, 0xC
	0x0336FAB8 ADD X1, X19, 0x10
	0x0336FABC MOVZ W3, 0x1
	0x0336FAC0 MOV X0, X21
	0x0336FAC4 MOV X4, X31
	0x0336FAC8 BL 0x332728C
	0x0336FACC TBZ X0, 0x0, 0x336FC3C

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X23, 0x106E000
	010 Move W8, [X23+3803]
	011 Move X22, X3
	012 Move X20, X2
	013 Move X21, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xDBA000
	020 Move X0, [X0+1416]
	021 Call 0x1C17CF4
	022 Move X0, 0xDBC000
	023 Move X0, [X0+3176]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+3803], W8
	027 Move [X31+24], X31
	028 Move [X31+12], W31
	029 Move W8, [X19+36]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 128
	032 Compare TEMP, 128
	033 JumpIfEqual {139}
	034 Compare X22, 0
	035 JumpIfEqual {164}
	036 Move X0, X22
	037 Move X1, X31
	038 Call DateTimeFormatInfo.get_MonthDayPattern, X0
	039 Move X24, 0xDBA000
	040 Move X24, [X24+1416]
	041 Move X23, X0
	042 Move X8, [X24]
	043 Move W9, [X8+224]
	044 Compare W9, 0
	045 JumpIfNotEqual {48}
	046 Move X0, X8
	047 Call 0x1C17DFC
	048 Add X2, X31, 28
	049 Move X0, X23
	050 Call DateTimeParse.GetMonthDayOrder, X0, X1, X2
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {112}
	055 Move W8, [X31+28]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X0, X22
	058 Move X1, X31
	059 Call DateTimeFormatInfo.get_YearMonthPattern, X0
	060 Move X8, [X24]
	061 Move X23, X0
	062 Move W9, [X8+224]
	063 Compare W9, 0
	064 JumpIfNotEqual {67}
	065 Move X0, X8
	066 Call 0x1C17DFC
	067 Add X2, X31, 24
	068 Move X0, X23
	069 Call DateTimeParse.GetYearMonthOrder, X0, X1, X2
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfNotEqual {142}
	074 Move W8, [X31+24]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X0, X20
	077 Move W1, W31
	078 Move X2, X31
	079 Call DateTimeRawInfo.GetNumber, X0, X1
	080 Move X8, [X24]
	081 Move W21, W0
	082 Move W9, [X8+224]
	083 Compare W9, 0
	084 JumpIfNotEqual {87}
	085 Move X0, X8
	086 Call 0x1C17DFC
	087 Add X2, X31, 12
	088 Move X0, X19
	089 Move W1, W21
	090 Call DateTimeParse.TryAdjustYear, X0, X1, X2
	091 Move TEMP, X0
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfNotEqual {139}
	095 Move X0, [X24]
	096 Move W21, [X31+12]
	097 Move W22, [X20+12]
	098 Move W8, [X0+224]
	099 Compare W8, 0
	100 JumpIfNotEqual {102}
	101 Call 0x1C17DFC
	102 Move W3, 1
	103 Move X0, X19
	104 Move W1, W21
	105 Move W2, W22
	106 Move W20, 1
	107 Call DateTimeParse.SetDateYMD, X0, X1, X2, X3
	108 Move TEMP, X0
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfNotEqual {139}
	112 Move X0, X22
	113 Move X1, X31
	114 Call DateTimeFormatInfo.get_MonthDayPattern, X0
	115 Move X0, [X24]
	116 Move W8, [X0+224]
	117 Compare W8, 0
	118 JumpIfNotEqual {120}
	119 Call 0x1C17DFC
	120 Move X0, X19
	121 Move X1, X21
	122 Call DateTimeParse.GetDefaultYear, X0, X1
	123 Move W21, [X19]
	124 Move W22, [X20+12]
	125 Move X0, X20
	126 Move W1, W31
	127 Move X2, X31
	128 Call DateTimeRawInfo.GetNumber, X0, X1
	129 Move W3, W0
	130 Move X0, X19
	131 Move W1, W21
	132 Move W2, W22
	133 Call DateTimeParse.SetDateYMD, X0, X1, X2, X3
	134 Move TEMP, X0
	135 And TEMP, TEMP, 1
	136 Compare TEMP, 1
	137 JumpIfNotEqual {139}
	138 Move W20, 1
	139 Move X0, X19
	140 Move X1, X31
	141 Call DateTimeResult.SetBadDateTimeFailure, X0
	142 Move X0, X22
	143 Move X1, X31
	144 Call DateTimeFormatInfo.get_YearMonthPattern, X0
	145 Move X8, 0xDBC000
	146 Move X8, [X8+3176]
	147 Move X3, X0
	148 Move W1, 3
	149 Move X0, X19
	150 Move X2, [X8]
	151 Move X4, X31
	152 Call DateTimeResult.SetFailure, X0, X1, X2, X3
	153 Move W20, W31
	154 Move W0, W20
	155 Move X20, [X31+64]
	156 Move X19, [X31+72]
	157 Move X22, [X31+48]
	158 Move X21, [X31+56]
	159 Move X24, [X31+32]
	160 Move X23, [X31+40]
	161 Move X30, [X31+16]
	162 Add X31, X31, 80
	163 Return X0
	164 Call 0x1C17F20

Method: System.Boolean GetDayOfMNN(ref System.DateTimeResult result, ref System.DateTimeRawInfo raw, System.Globalization.DateTimeFormatInfo dtfi)

Disassembly:
	0x0336FAD0 ADRP X8, 0xDB9000
	0x0336FAD4 LDR X8, [X8 + 0x588]
	0x0336FAD8 LDR X0, [X8]
	0x0336FADC LDR W8, [X0 + 0xE0]
	0x0336FAE0 CBNZ W8, 0x336FAE8
	0x0336FAE4 BL 0x1C16DFC
	0x0336FAE8 MOV X0, X20
	0x0336FAEC MOV X1, X19
	0x0336FAF0 BL 0x336F060
	0x0336FAF4 TBNZ X0, 0x0, 0x336FC30
	0x0336FAF8 B 0x336FC58
	0x0336FAFC CBZ X21, 0x336FC70
	0x0336FB00 ADD X2, X19, 0xC
	0x0336FB04 ADD X1, X19, 0x10
	0x0336FB08 MOVZ W3, 0x1
	0x0336FB0C MOV X0, X21
	0x0336FB10 MOV X4, X31
	0x0336FB14 BL 0x332728C
	0x0336FB18 TBZ X0, 0x0, 0x336FC3C
	0x0336FB1C ADRP X8, 0xDB9000
	0x0336FB20 LDR X8, [X8 + 0x588]
	0x0336FB24 LDR X0, [X8]
	0x0336FB28 LDR W8, [X0 + 0xE0]
	0x0336FB2C CBNZ W8, 0x336FB34
	0x0336FB30 BL 0x1C16DFC
	0x0336FB34 MOV X0, X20
	0x0336FB38 MOV X1, X19
	0x0336FB3C BL 0x336F1D8
	0x0336FB40 TBNZ X0, 0x0, 0x336FC30
	0x0336FB44 B 0x336FC58
	0x0336FB48 ADRP X8, 0xDB9000
	0x0336FB4C LDR X8, [X8 + 0x588]
	0x0336FB50 LDR X0, [X8]
	0x0336FB54 LDR W8, [X0 + 0xE0]
	0x0336FB58 CBNZ W8, 0x336FB60
	0x0336FB5C BL 0x1C16DFC
	0x0336FB60 MOV X0, X20
	0x0336FB64 MOV X1, X19
	0x0336FB68 BL 0x336F37C
	0x0336FB6C TBNZ X0, 0x0, 0x336FC30
	0x0336FB70 B 0x336FC58
	0x0336FB74 ADRP X8, 0xDB9000
	0x0336FB78 LDR X8, [X8 + 0x588]
	0x0336FB7C LDR X0, [X8]
	0x0336FB80 LDR W8, [X0 + 0xE0]
	0x0336FB84 CBNZ W8, 0x336FB8C
	0x0336FB88 BL 0x1C16DFC
	0x0336FB8C MOV X0, X20
	0x0336FB90 MOV X1, X19
	0x0336FB94 BL 0x336F3D8
	0x0336FB98 TBNZ X0, 0x0, 0x336FC30
	0x0336FB9C B 0x336FC58
	0x0336FBA0 ADRP X8, 0xDB9000
	0x0336FBA4 LDR X8, [X8 + 0x588]
	0x0336FBA8 LDR X0, [X8]
	0x0336FBAC LDR W8, [X0 + 0xE0]
	0x0336FBB0 CBNZ W8, 0x336FBB8
	0x0336FBB4 BL 0x1C16DFC
	0x0336FBB8 MOV X0, X20
	0x0336FBBC MOV X1, X19
	0x0336FBC0 BL 0x336F448
	0x0336FBC4 TBNZ X0, 0x0, 0x336FC30
	0x0336FBC8 B 0x336FC58
	0x0336FBCC LDR W8, [X19 + 0x10]
	0x0336FBD0 CMP W8, 0x3E7
	0x0336FBD4 B.GT 0x336FBE4
	0x0336FBD8 MOVZ W9, 0x1388
	0x0336FBDC ADD W8, W8, W9
	0x0336FBE0 STR W8, [X19 + 0x10]
	0x0336FBE4 ADRP X8, 0xDB9000
	0x0336FBE8 LDR X8, [X8 + 0x588]
	0x0336FBEC LDR X0, [X8]
	0x0336FBF0 LDR W8, [X0 + 0xE0]
	0x0336FBF4 CBNZ W8, 0x336FBFC
	0x0336FBF8 BL 0x1C16DFC
	0x0336FBFC MOV X0, X20
	0x0336FC00 MOV X1, X19
	0x0336FC04 MOV X2, X21
	0x0336FC08 BL 0x336EEEC
	0x0336FC0C TBZ X0, 0x0, 0x336FC58
	0x0336FC10 CBZ X21, 0x336FC70
	0x0336FC14 ADD X2, X19, 0xC
	0x0336FC18 MOVZ W3, 0x1
	0x0336FC1C MOV X0, X21
	0x0336FC20 MOV X1, X20
	0x0336FC24 MOV X4, X31
	0x0336FC28 BL 0x332728C
	0x0336FC2C TBZ X0, 0x0, 0x336FC3C
	0x0336FC30 MOVZ W0, 0x1
	0x0336FC34 STR W31, [X19 + 0x8]
	0x0336FC38 B 0x336FC5C
	0x0336FC3C ADRP X8, 0xDBB000
	0x0336FC40 LDR X8, [X8 + 0xC30]
	0x0336FC44 MOVZ W1, 0x7
	0x0336FC48 MOV X0, X20
	0x0336FC4C MOV X3, X31
	0x0336FC50 LDR X2, [X8]
	0x0336FC54 BL 0x3376818
	0x0336FC58 MOV W0, W31
	0x0336FC5C LDP X20, X19, [X31 + 0x30]
	0x0336FC60 LDP X22, X21, [X31 + 0x20]
	0x0336FC64 LDP X24, X23, [X31 + 0x10]
	0x0336FC68 LDR X30, [X31], #0x40
	0x0336FC6C RET
	0x0336FC70 BL 0x1C16F20
	0x0336FC74 STR D8, [X31 - 0x70]!
	0x0336FC78 STP X29, X30, [X31 + 0x10]
	0x0336FC7C STP X28, X27, [X31 + 0x20]
	0x0336FC80 STP X26, X25, [X31 + 0x30]
	0x0336FC84 STP X24, X23, [X31 + 0x40]
	0x0336FC88 STP X22, X21, [X31 + 0x50]
	0x0336FC8C STP X20, X19, [X31 + 0x60]
	0x0336FC90 ADD X29, X31, 0x10
	0x0336FC94 SUB X31, X31, 0xA0
	0x0336FC98 MRS X26, 0xC000
	0x0336FC9C LDR X8, [X26 + 0x28]
	0x0336FCA0 ADRP X20, 0x106D000
	0x0336FCA4 MOV X19, X4
	0x0336FCA8 MOV W23, W3
	0x0336FCAC STUR X8, [X29 - 0x20]
	0x0336FCB0 LDRB W8, [X20 + 0xEE9]
	0x0336FCB4 MOV X22, X2
	0x0336FCB8 MOV X24, X1
	0x0336FCBC MOV X25, X0
	0x0336FCC0 STUR X2, [X29 - 0x30]
	0x0336FCC4 STUR W3, [X29 - 0x34]
	0x0336FCC8 TBNZ X8, 0x0, 0x336FD40
	0x0336FCCC ADRP X0, 0xDB9000
	0x0336FCD0 LDR X0, [X0 + 0x588]
	0x0336FCD4 BL 0x1C16CF4
	0x0336FCD8 ADRP X0, 0xD85000
	0x0336FCDC LDR X0, [X0 + 0x9F0]
	0x0336FCE0 BL 0x1C16CF4
	0x0336FCE4 ADRP X0, 0xDB8000
	0x0336FCE8 LDR X0, [X0 + 0x930]
	0x0336FCEC BL 0x1C16CF4
	0x0336FCF0 ADRP X0, 0xD84000
	0x0336FCF4 LDR X0, [X0 + 0x5A8]
	0x0336FCF8 BL 0x1C16CF4
	0x0336FCFC ADRP X0, 0xDB3000
	0x0336FD00 LDR X0, [X0 + 0x28]
	0x0336FD04 BL 0x1C16CF4
	0x0336FD08 ADRP X0, 0xDB9000
	0x0336FD0C LDR X0, [X0 + 0x4F0]
	0x0336FD10 BL 0x1C16CF4
	0x0336FD14 ADRP X0, 0xDBB000
	0x0336FD18 LDR X0, [X0 + 0xC00]
	0x0336FD1C BL 0x1C16CF4
	0x0336FD20 ADRP X0, 0xDBB000
	0x0336FD24 LDR X0, [X0 + 0xC28]
	0x0336FD28 BL 0x1C16CF4
	0x0336FD2C ADRP X0, 0xDBB000
	0x0336FD30 LDR X0, [X0 + 0xC30]
	0x0336FD34 BL 0x1C16CF4
	0x0336FD38 MOVZ W8, 0x1
	0x0336FD3C STRB W8, [X20 + 0xEE9]
	0x0336FD40 MOVI V0.2D, 0x0
	0x0336FD44 STUR X31, [X29 - 0x40]
	0x0336FD48 STUR X31, [X29 - 0x90]
	0x0336FD4C STP V0, V0, [X29 - 0xB0]
	0x0336FD50 CBZ W24, 0x3370174
	0x0336FD54 MOVZ W8, 0x100
	0x0336FD58 STUR X31, [X29 - 0x50]
	0x0336FD5C STP W8, W31, [X29 - 0x4C]
	0x0336FD60 ADD X8, X31, 0x0
	0x0336FD64 SUB X1, X8, 0x10
	0x0336FD68 STP V0, V0, [X29 - 0x80]
	0x0336FD6C STUR V0, [X29 - 0x60]
	0x0336FD70 ADD X31, X1, 0x0
	0x0336FD74 SUB X0, X29, 0x80
	0x0336FD78 MOV X2, X31
	0x0336FD7C STUR W31, [X8 - 0x8]
	0x0336FD80 STUR X31, [X8 - 0x10]
	0x0336FD84 BL 0x337665C
	0x0336FD88 CBZ X22, 0x3370408
	0x0336FD8C MOV X0, X22
	0x0336FD90 MOV X1, X31
	0x0336FD94 BL 0x3325418
	0x0336FD98 MOV X20, X0
	0x0336FD9C MOV X0, X22
	0x0336FDA0 MOV X1, X31
	0x0336FDA4 BL 0x3325A54
	0x0336FDA8 CBZ X20, 0x3370408
	0x0336FDAC ADRP X28, 0xDB9000
	0x0336FDB0 LDR X28, [X28 + 0x4F0]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x106E000
	011 Move W8, [X21+3804]
	012 Move X23, X2
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xDBA000
	020 Move X0, [X0+1416]
	021 Call 0x1C17CF4
	022 Move X0, 0xDBC000
	023 Move X0, [X0+3176]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+3804], W8
	027 Move [X31+8], X31
	028 Move W8, [X19+36]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 128
	031 Compare TEMP, 128
	032 JumpIfEqual {216}
	033 Move X0, X20
	034 Move W1, W31
	035 Move X2, X31
	036 Call DateTimeRawInfo.GetNumber, X0, X1
	037 Move W22, W0
	038 Move W1, 1
	039 Move X0, X20
	040 Move X2, X31
	041 Call DateTimeRawInfo.GetNumber, X0, X1
	042 Compare X23, 0
	043 JumpIfEqual {230}
	044 Move W21, W0
	045 Move X0, X23
	046 Move X1, X31
	047 Call DateTimeFormatInfo.get_ShortDatePattern, X0
	048 Move X25, 0xDBA000
	049 Move X25, [X25+1416]
	050 Move X24, X0
	051 Move X8, [X25]
	052 Move W9, [X8+224]
	053 Compare W9, 0
	054 JumpIfNotEqual {57}
	055 Move X0, X8
	056 Call 0x1C17DFC
	057 Add X2, X31, 12
	058 Move X0, X24
	059 Call DateTimeParse.GetYearMonthDayOrder, X0, X1, X2
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {101}
	064 Move W8, [X31+12]
	065 Compare W8, 0
	066 JumpIfEqual {144}
	067 NotImplemented "Instruction CMP not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X0, [X25]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Add X2, X31, 8
	075 Move X0, X19
	076 Move W1, W21
	077 Call DateTimeParse.TryAdjustYear, X0, X1, X2
	078 Move TEMP, X0
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfNotEqual {112}
	082 Move X0, [X19+48]
	083 Compare X0, 0
	084 JumpIfEqual {230}
	085 Move X8, [X0]
	086 Move W23, [X31+8]
	087 Move W4, [X19+32]
	088 Move W2, [X20+12]
	089 Move X9, [X8+728]
	090 Move X5, [X8+736]
	091 Move W1, W23
	092 Move W3, W22
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Move TEMP, X0
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfNotEqual {112}
	098 Move W2, [X20+12]
	099 Move X0, X19
	100 Move W1, W23
	101 Move X0, X23
	102 Move X1, X31
	103 Call DateTimeFormatInfo.get_ShortDatePattern, X0
	104 Move X8, 0xDBC000
	105 Move X8, [X8+3176]
	106 Move X3, X0
	107 Move W1, 3
	108 Move X0, X19
	109 Move X2, [X8]
	110 Move X4, X31
	111 Call DateTimeResult.SetFailure, X0, X1, X2, X3
	112 Move X0, [X25]
	113 Move W8, [X0+224]
	114 Compare W8, 0
	115 JumpIfNotEqual {117}
	116 Call 0x1C17DFC
	117 Add X2, X31, 8
	118 Move X0, X19
	119 Move W1, W22
	120 Call DateTimeParse.TryAdjustYear, X0, X1, X2
	121 Move TEMP, X0
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfNotEqual {216}
	125 Move X0, [X19+48]
	126 Compare X0, 0
	127 JumpIfEqual {230}
	128 Move X8, [X0]
	129 Move W22, [X31+8]
	130 Move W4, [X19+32]
	131 Move W2, [X20+12]
	132 Move X9, [X8+728]
	133 Move X5, [X8+736]
	134 Move W1, W22
	135 Move W3, W21
	136 NotImplemented "Instruction BLR not yet implemented."
	137 Move TEMP, X0
	138 And TEMP, TEMP, 1
	139 Compare TEMP, 1
	140 JumpIfNotEqual {216}
	141 Move W2, [X20+12]
	142 Move X0, X19
	143 Move W1, W22
	144 Move X0, [X25]
	145 Move W8, [X0+224]
	146 Compare W8, 0
	147 JumpIfNotEqual {149}
	148 Call 0x1C17DFC
	149 Add X2, X31, 8
	150 Move X0, X19
	151 Move W1, W22
	152 Call DateTimeParse.TryAdjustYear, X0, X1, X2
	153 Move TEMP, X0
	154 And TEMP, TEMP, 1
	155 Compare TEMP, 1
	156 JumpIfNotEqual {177}
	157 Move X0, [X19+48]
	158 Compare X0, 0
	159 JumpIfEqual {230}
	160 Move X8, [X0]
	161 Move W23, [X31+8]
	162 Move W4, [X19+32]
	163 Move W2, [X20+12]
	164 Move X9, [X8+728]
	165 Move X5, [X8+736]
	166 Move W1, W23
	167 Move W3, W21
	168 NotImplemented "Instruction BLR not yet implemented."
	169 Move TEMP, X0
	170 And TEMP, TEMP, 1
	171 Compare TEMP, 1
	172 JumpIfNotEqual {177}
	173 Move W2, [X20+12]
	174 Move X0, X19
	175 Move W1, W23
	176 Move W3, W21
	177 Move X0, [X25]
	178 Move W8, [X0+224]
	179 Compare W8, 0
	180 JumpIfNotEqual {182}
	181 Call 0x1C17DFC
	182 Add X2, X31, 8
	183 Move X0, X19
	184 Move W1, W21
	185 Call DateTimeParse.TryAdjustYear, X0, X1, X2
	186 Move TEMP, X0
	187 And TEMP, TEMP, 1
	188 Compare TEMP, 1
	189 JumpIfNotEqual {216}
	190 Move X0, [X19+48]
	191 Compare X0, 0
	192 JumpIfEqual {230}
	193 Move X8, [X0]
	194 Move W21, [X31+8]
	195 Move W4, [X19+32]
	196 Move W2, [X20+12]
	197 Move X9, [X8+728]
	198 Move X5, [X8+736]
	199 Move W1, W21
	200 Move W3, W22
	201 NotImplemented "Instruction BLR not yet implemented."
	202 Move TEMP, X0
	203 And TEMP, TEMP, 1
	204 Compare TEMP, 1
	205 JumpIfNotEqual {216}
	206 Move W2, [X20+12]
	207 Move X0, X19
	208 Move W1, W21
	209 Move W3, W22
	210 Move X4, X31
	211 Call DateTimeResult.SetDate, X0, X1, X2, X3
	212 Move W8, [X19+36]
	213 Move W0, 1
	214 Or W8, W8, 128
	215 Move [X19+36], W8
	216 Move X0, X19
	217 Move X1, X31
	218 Call DateTimeResult.SetBadDateTimeFailure, X0
	219 Move W0, W31
	220 Move X20, [X31+64]
	221 Move X19, [X31+72]
	222 Move X22, [X31+48]
	223 Move X21, [X31+56]
	224 Move X24, [X31+32]
	225 Move X23, [X31+40]
	226 Move X30, [X31+16]
	227 Move X25, [X31+24]
	228 Add X31, X31, 80
	229 Return X0
	230 Call 0x1C17F20

Method: System.Boolean GetDayOfYNN(ref System.DateTimeResult result, ref System.DateTimeRawInfo raw, System.Globalization.DateTimeFormatInfo dtfi)

Disassembly:
	0x0336FDB4 MOV X1, X0
	0x0336FDB8 MOVZ W2, 0x4
	0x0336FDBC MOV X0, X20
	0x0336FDC0 MOV X3, X31
	0x0336FDC4 BL 0x322697C
	0x0336FDC8 AND W8, W0, 0x1
	0x0336FDCC STURB W8, [X29 - 0x58]
	0x0336FDD0 LDR X8, [X22 + 0x78]
	0x0336FDD4 MOV X20, X19
	0x0336FDD8 STR X8, [X20 + 0x30]!
	0x0336FDDC STUR W31, [X20 - 0x10]
	0x0336FDE0 LDR X0, [X28]
	0x0336FDE4 LDR W8, [X0 + 0xE0]
	0x0336FDE8 CBNZ W8, 0x336FDF0
	0x0336FDEC BL 0x1C16DFC
	0x0336FDF0 ADRP X27, 0xDB9000
	0x0336FDF4 LDR X27, [X27 + 0x588]
	0x0336FDF8 SUB X0, X29, 0xB0
	0x0336FDFC MOV X1, X25
	0x0336FE00 MOV X2, X24
	0x0336FE04 MOV X3, X22
	0x0336FE08 MOV X4, X31
	0x0336FE0C BL 0x33749A8
	0x0336FE10 SUB X0, X29, 0xB0
	0x0336FE14 MOV X1, X31
	0x0336FE18 BL 0x3374A74
	0x0336FE1C LDUR W25, [X29 - 0x34]
	0x0336FE20 MOV W21, W31
	0x0336FE24 MOV W22, W31
	0x0336FE28 LDR X0, [X27]
	0x0336FE2C MOV W24, W23
	0x0336FE30 LDR W8, [X0 + 0xE0]
	0x0336FE34 CBNZ W8, 0x336FE3C
	0x0336FE38 BL 0x1C16DFC
	0x0336FE3C SUB X1, X29, 0xB0
	0x0336FE40 SUB X2, X29, 0x50
	0x0336FE44 SUB X3, X29, 0x80
	0x0336FE48 SUB X5, X29, 0x30
	0x0336FE4C MOV W0, W22
	0x0336FE50 MOV X4, X19
	0x0336FE54 MOV W6, W24
	0x0336FE58 BL 0x336C1A8
	0x0336FE5C TBZ X0, 0x0, 0x3370190
	0x0336FE60 LDUR W8, [X29 - 0x50]
	0x0336FE64 MOV W23, W25
	0x0336FE68 CMP W8, 0x12
	0x0336FE6C B.EQ 0x336FE28
	0x0336FE70 LDUR W9, [X29 - 0x4C]
	0x0336FE74 CMP W9, 0x100
	0x0336FE78 B.EQ 0x336FEAC
	0x0336FE7C LDR X0, [X27]
	0x0336FE80 LDR W8, [X0 + 0xE0]
	0x0336FE84 CBNZ W8, 0x336FE8C
	0x0336FE88 BL 0x1C16DFC
	0x0336FE8C SUB X1, X29, 0x80
	0x0336FE90 SUB X2, X29, 0x50
	0x0336FE94 MOV X0, X19
	0x0336FE98 BL 0x336F800
	0x0336FE9C TBZ X0, 0x0, 0x33702F4
	0x0336FEA0 LDUR W8, [X29 - 0x50]
	0x0336FEA4 MOVZ W9, 0x100
	0x0336FEA8 STUR W9, [X29 - 0x4C]
	0x0336FEAC CMP W8, 0x13
	0x0336FEB0 B.EQ 0x33701CC
	0x0336FEB4 LDURB W9, [X29 - 0x58]
	0x0336FEB8 TBNZ X9, 0x0, 0x336FEC4
	0x0336FEBC LDR X8, [X27]
	0x0336FEC0 B 0x336FFC8
	0x0336FEC4 LDR X0, [X28]
	0x0336FEC8 CMP W22, 0x12
	0x0336FECC MOVZ W10, 0x3
	0x0336FED0 CSEL W10, W10, W22, EQ
	0x0336FED4 AND W9, W8, 0xFFFFFFFD
	0x0336FED8 CMP W10, 0x13
	0x0336FEDC LDR W11, [X0 + 0xE0]
	0x0336FEE0 MOVZ W12, 0x5
	0x0336FEE4 CSEL W10, W12, W10, EQ
	0x0336FEE8 CMP W9, 0xC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x106E000
	009 Move W8, [X21+3805]
	010 Move X23, X2
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xDBA000
	018 Move X0, [X0+1416]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3805], W8
	022 Move [X31+12], W31
	023 Move W8, [X19+36]
	024 Move TEMP, X8
	025 And TEMP, TEMP, 128
	026 Compare TEMP, 128
	027 JumpIfEqual {83}
	028 Move X0, X20
	029 Move W1, W31
	030 Move X2, X31
	031 Call DateTimeRawInfo.GetNumber, X0, X1
	032 Move W21, W0
	033 Move W1, 1
	034 Move X0, X20
	035 Move X2, X31
	036 Call DateTimeRawInfo.GetNumber, X0, X1
	037 Compare X23, 0
	038 JumpIfEqual {95}
	039 Move W22, W0
	040 Move X0, X23
	041 Move X1, X31
	042 Call DateTimeFormatInfo.get_ShortDatePattern, X0
	043 Move X24, 0xDBA000
	044 Move X24, [X24+1416]
	045 Move X23, X0
	046 Move X8, [X24]
	047 Move W9, [X8+224]
	048 Compare W9, 0
	049 JumpIfNotEqual {52}
	050 Move X0, X8
	051 Call 0x1C17DFC
	052 Add X2, X31, 12
	053 Move X0, X23
	054 Call DateTimeParse.GetYearMonthDayOrder, X0, X1, X2
	055 Move W8, W0
	056 Move X0, [X24]
	057 Move W9, [X31+12]
	058 Move W20, [X20+16]
	059 Move W10, [X0+224]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 NotImplemented "Instruction CSET not yet implemented."
	062 And W23, W8, W9
	063 Compare W10, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Move X0, X19
	067 Move W1, W20
	068 Compare W23, 0
	069 JumpIfEqual {72}
	070 Move W2, W22
	071 Move W3, W21
	072 Move W2, W21
	073 Move W3, W22
	074 Call DateTimeParse.SetDateYMD, X0, X1, X2, X3
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfNotEqual {83}
	079 Move W8, [X19+36]
	080 Move W0, 1
	081 Or W8, W8, 128
	082 Move [X19+36], W8
	083 Move X0, X19
	084 Move X1, X31
	085 Call DateTimeResult.SetBadDateTimeFailure, X0
	086 Move W0, W31
	087 Move X20, [X31+48]
	088 Move X19, [X31+56]
	089 Move X22, [X31+32]
	090 Move X21, [X31+40]
	091 Move X24, [X31+16]
	092 Move X23, [X31+24]
	093 Move X30, [X31+64]
	094 Return X0
	095 Call 0x1C17F20

Method: System.Boolean GetDayOfNNY(ref System.DateTimeResult result, ref System.DateTimeRawInfo raw, System.Globalization.DateTimeFormatInfo dtfi)

Disassembly:
	0x0336FEEC CCMP W8, 0xD, 0x4, NE
	0x0336FEF0 CSEL W22, W10, W22, EQ
	0x0336FEF4 CBNZ W11, 0x336FEFC
	0x0336FEF8 BL 0x1C16DFC
	0x0336FEFC SUB X0, X29, 0xB0
	0x0336FF00 MOV X1, X31
	0x0336FF04 BL 0x3374B20
	0x0336FF08 LDR X8, [X27]
	0x0336FF0C MOV W23, W0
	0x0336FF10 LDR W9, [X8 + 0xE0]
	0x0336FF14 CBNZ W9, 0x336FF24
	0x0336FF18 MOV X0, X8
	0x0336FF1C BL 0x1C16DFC
	0x0336FF20 LDR X8, [X27]
	0x0336FF24 LDR X9, [X8 + 0xB8]
	0x0336FF28 LDR X9, [X9 + 0x8]
	0x0336FF2C CBZ X9, 0x3370408
	0x0336FF30 LDR W10, [X9 + 0x18]
	0x0336FF34 CMP W22, W10
	0x0336FF38 B.CS 0x337040C
	0x0336FF3C ADD X9, X9, W22, 0x3, SXTW
	0x0336FF40 LDR X10, [X9 + 0x20]
	0x0336FF44 CBZ X10, 0x3370408
	0x0336FF48 LDURSW X9, [X29 - 0x50]
	0x0336FF4C LDR W11, [X10 + 0x18]
	0x0336FF50 CMP W9, W11
	0x0336FF54 B.CS 0x337040C
	0x0336FF58 ADD X10, X10, X9, 0x2, LSL
	0x0336FF5C LDR W10, [X10 + 0x20]
	0x0336FF60 CMP W10, 0x14
	0x0336FF64 CSET W10, NE
	0x0336FF68 BIC W10, W10, W23, 0x0
	0x0336FF6C TBNZ X10, 0x0, 0x336FFC8
	0x0336FF70 SUB W9, W9, 0x4
	0x0336FF74 CMP W9, 0x9
	0x0336FF78 B.HI 0x336FFC8
	0x0336FF7C ADRP X12, 0xFFFFFFFFFD827000
	0x0336FF80 ADD X12, X12, 0x7CC
	0x0336FF84 ADR X10, 0x10
	0x0336FF88 LDRB W11, [X12, X9, LSL]
	0x0336FF8C ADD X10, X10, X11, 0x2, LSL
	0x0336FF90 BR X10
	0x0336FF94 ANDS W31, W23, 0x1
	0x0336FF98 MOVZ W9, 0x3
	0x0336FF9C CSINC W9, W9, W31, EQ
	0x0336FFA0 B 0x336FFC4
	0x0336FFA4 ANDS W31, W23, 0x1
	0x0336FFA8 MOVZ W9, 0x6
	0x0336FFAC CINC W9, W9, EQ
	0x0336FFB0 B 0x336FFC4
	0x0336FFB4 ANDS W31, W23, 0x1
	0x0336FFB8 MOVZ W9, 0xC
	0x0336FFBC MOVZ W10, 0xE
	0x0336FFC0 CSEL W9, W10, W9, NE
	0x0336FFC4 STUR W9, [X29 - 0x50]
	0x0336FFC8 LDR W9, [X8 + 0xE0]
	0x0336FFCC CBNZ W9, 0x336FFDC
	0x0336FFD0 MOV X0, X8
	0x0336FFD4 BL 0x1C16DFC
	0x0336FFD8 LDR X8, [X27]
	0x0336FFDC LDR X8, [X8 + 0xB8]
	0x0336FFE0 LDR X8, [X8 + 0x8]
	0x0336FFE4 CBZ X8, 0x3370408
	0x0336FFE8 LDR W9, [X8 + 0x18]
	0x0336FFEC CMP W22, W9
	0x0336FFF0 B.CS 0x337040C
	0x0336FFF4 ADD X8, X8, W22, 0x3, SXTW
	0x0336FFF8 LDR X8, [X8 + 0x20]
	0x0336FFFC CBZ X8, 0x3370408
	0x03370000 LDURSW X9, [X29 - 0x50]
	0x03370004 LDR W10, [X8 + 0x18]
	0x03370008 CMP W9, W10
	0x0337000C B.CS 0x337040C
	0x03370010 ADD X8, X8, X9, 0x2, LSL
	0x03370014 LDR W22, [X8 + 0x20]
	0x03370018 CMP W22, 0x14
	0x0337001C B.EQ 0x33702F4
	0x03370020 CMP W22, 0x15
	0x03370024 B.LT 0x33700FC
	0x03370028 LDUR X23, [X29 - 0x30]
	0x0337002C CBZ X23, 0x3370408
	0x03370030 MOV X0, X23
	0x03370034 MOV X1, X31
	0x03370038 BL 0x3325D88
	0x0337003C ADRP X21, 0xDB7000
	0x03370040 LDR X21, [X21 + 0x930]
	0x03370044 TBNZ X0, 0x3, 0x3370078
	0x03370048 LDR X0, [X27]
	0x0337004C LDR W8, [X0 + 0xE0]
	0x03370050 CBNZ W8, 0x3370058
	0x03370054 BL 0x1C16DFC
	0x03370058 SUB X3, X29, 0x34
	0x0337005C SUB X4, X29, 0x80

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x106E000
	011 Move W8, [X22+3806]
	012 Move X21, X2
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xDBA000
	020 Move X0, [X0+1416]
	021 Call 0x1C17CF4
	022 Move X0, 0xDBC000
	023 Move X0, [X0+3176]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+3806], W8
	027 Move [X31+12], W31
	028 Move W8, [X19+36]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 128
	031 Compare TEMP, 128
	032 JumpIfEqual {98}
	033 Move X0, X20
	034 Move W1, W31
	035 Move X2, X31
	036 Call DateTimeRawInfo.GetNumber, X0, X1
	037 Move W22, W0
	038 Move W1, 1
	039 Move X0, X20
	040 Move X2, X31
	041 Call DateTimeRawInfo.GetNumber, X0, X1
	042 Compare X21, 0
	043 JumpIfEqual {112}
	044 Move W23, W0
	045 Move X0, X21
	046 Move X1, X31
	047 Call DateTimeFormatInfo.get_ShortDatePattern, X0
	048 Move X25, 0xDBA000
	049 Move X25, [X25+1416]
	050 Move X24, X0
	051 Move X8, [X25]
	052 Move W9, [X8+224]
	053 Compare W9, 0
	054 JumpIfNotEqual {57}
	055 Move X0, X8
	056 Call 0x1C17DFC
	057 Add X2, X31, 12
	058 Move X0, X24
	059 Call DateTimeParse.GetYearMonthDayOrder, X0, X1, X2
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {76}
	064 Move X0, [X25]
	065 Move W21, [X31+12]
	066 Move W20, [X20+16]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 Move X0, X19
	072 Move W1, W20
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move W2, W22
	075 Move W3, W23
	076 Move X0, X21
	077 Move X1, X31
	078 Call DateTimeFormatInfo.get_ShortDatePattern, X0
	079 Move X8, 0xDBC000
	080 Move X8, [X8+3176]
	081 Move X3, X0
	082 Move W1, 3
	083 Move X0, X19
	084 Move X2, [X8]
	085 Move X4, X31
	086 Call DateTimeResult.SetFailure, X0, X1, X2, X3
	087 Move W2, W23
	088 Move W3, W22
	089 Call DateTimeParse.SetDateYMD, X0, X1, X2, X3
	090 Move TEMP, X0
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfNotEqual {98}
	094 Move W8, [X19+36]
	095 Move W0, 1
	096 Or W8, W8, 128
	097 Move [X19+36], W8
	098 Move X0, X19
	099 Move X1, X31
	100 Call DateTimeResult.SetBadDateTimeFailure, X0
	101 Move W0, W31
	102 Move X20, [X31+64]
	103 Move X19, [X31+72]
	104 Move X22, [X31+48]
	105 Move X21, [X31+56]
	106 Move X24, [X31+32]
	107 Move X23, [X31+40]
	108 Move X30, [X31+16]
	109 Move X25, [X31+24]
	110 Add X31, X31, 80
	111 Return X0
	112 Call 0x1C17F20

Method: System.Boolean GetDayOfYMN(ref System.DateTimeResult result, ref System.DateTimeRawInfo raw)

Disassembly:
	0x03370060 MOV W0, W22
	0x03370064 MOV X2, X19
	0x03370068 MOV X5, X23
	0x0337006C BL 0x336CF50
	0x03370070 TBNZ X0, 0x0, 0x33700F4
	0x03370074 B 0x3370190
	0x03370078 LDR X0, [X21]
	0x0337007C LDR W8, [X0 + 0xE0]
	0x03370080 CBNZ W8, 0x3370088
	0x03370084 BL 0x1C16DFC
	0x03370088 ADRP X8, 0x106C000
	0x0337008C LDRB W8, [X8 + 0xAFE]
	0x03370090 CBNZ W8, 0x33700A8
	0x03370094 MOV X0, X21
	0x03370098 BL 0x1C16CF4
	0x0337009C MOVZ W8, 0x1
	0x033700A0 ADRP X9, 0x106C000
	0x033700A4 STRB W8, [X9 + 0xAFE]
	0x033700A8 LDR X0, [X21]
	0x033700AC LDR W8, [X0 + 0xE0]
	0x033700B0 CBNZ W8, 0x33700BC
	0x033700B4 BL 0x1C16DFC
	0x033700B8 LDR X0, [X21]
	0x033700BC LDR X8, [X0 + 0xB8]
	0x033700C0 LDRB W8, [X8]
	0x033700C4 CBNZ W8, 0x33700F4
	0x033700C8 LDR X0, [X27]
	0x033700CC LDR W8, [X0 + 0xE0]
	0x033700D0 CBNZ W8, 0x33700D8
	0x033700D4 BL 0x1C16DFC
	0x033700D8 SUB X3, X29, 0x34
	0x033700DC SUB X4, X29, 0x80
	0x033700E0 MOV W0, W22
	0x033700E4 MOV X2, X19
	0x033700E8 MOV X5, X23
	0x033700EC BL 0x336F8F8
	0x033700F0 TBZ X0, 0x0, 0x3370190
	0x033700F4 MOV W22, W31
	0x033700F8 MOVZ W21, 0x1
	0x033700FC LDUR W8, [X29 - 0x50]
	0x03370100 MOV W23, W25
	0x03370104 CMP W8, 0x6
	0x03370108 B.HI 0x336FE28
	0x0337010C MOVZ W9, 0x1
	0x03370110 LSLV W8, W9, W8
	0x03370114 MOVZ W9, 0x43
	0x03370118 ANDS W31, W8, W9, 0x0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x106D000
	008 Move W8, [X20+3807]
	009 Move X21, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xDB9000
	016 Move X0, [X0+1416]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3807], W8
	020 Move W8, [X19+36]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 128
	023 Compare TEMP, 128
	024 JumpIfEqual {53}
	025 Move X23, 0xDB9000
	026 Move W22, [X21+12]
	027 Move W20, [X21+16]
	028 Move X23, [X23+1416]
	029 Move X0, X21
	030 Move W1, W31
	031 Move X2, X31
	032 Call DateTimeRawInfo.GetNumber, X0, X1
	033 Move X8, [X23]
	034 Move W21, W0
	035 Move W9, [X8+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {40}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move W1, W20
	042 Move W2, W22
	043 Move W3, W21
	044 Call DateTimeParse.SetDateYMD, X0, X1, X2, X3
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {53}
	049 Move W8, [X19+36]
	050 Move W0, 1
	051 Or W8, W8, 128
	052 Move [X19+36], W8
	053 Move X0, X19
	054 Move X1, X31
	055 Call DateTimeResult.SetBadDateTimeFailure, X0
	056 Move W0, W31
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X30, [X31+48]
	062 Move X23, [X31+56]
	063 Return X0

Method: System.Boolean GetDayOfYN(ref System.DateTimeResult result, ref System.DateTimeRawInfo raw)

Disassembly:
	0x0337011C MOV W23, W25
	0x03370120 B.EQ 0x336FE28
	0x03370124 TBZ X21, 0x0, 0x33702F4
	0x03370128 LDR X0, [X27]
	0x0337012C LDUR X21, [X29 - 0x30]
	0x03370130 LDR W8, [X0 + 0xE0]
	0x03370134 CBNZ W8, 0x337013C
	0x03370138 BL 0x1C16DFC
	0x0337013C SUB X1, X29, 0x80
	0x03370140 MOV X0, X21
	0x03370144 BL 0x336F274
	0x03370148 LDUR W9, [X29 - 0x64]
	0x0337014C ADDS W31, W9, 0x1
	0x03370150 B.EQ 0x3370210
	0x03370154 LDR W8, [X19 + 0xC]
	0x03370158 CBZ W9, 0x3370200
	0x0337015C CMP W8, 0x17
	0x03370160 B.HI 0x33702F4
	0x03370164 CMP W8, 0xB
	0x03370168 B.GT 0x3370210
	0x0337016C ADD W8, W8, 0xC
	0x03370170 B 0x337020C
	0x03370174 ADRP X8, 0xDBA000
	0x03370178 LDR X8, [X8 + 0xC00]
	0x0337017C MOVZ W1, 0x3
	0x03370180 LDR X2, [X8]
	0x03370184 MOV X0, X19
	0x03370188 MOV X3, X31
	0x0337018C BL 0x3376818
	0x03370190 MOV W0, W31
	0x03370194 LDR X8, [X26 + 0x28]
	0x03370198 LDUR X9, [X29 - 0x20]
	0x0337019C CMP X8, X9
	0x033701A0 B.NE 0x3370410
	0x033701A4 AND W0, W0, 0x1
	0x033701A8 SUB X31, X29, 0x10
	0x033701AC LDP X20, X19, [X31 + 0x60]
	0x033701B0 LDP X22, X21, [X31 + 0x50]
	0x033701B4 LDP X24, X23, [X31 + 0x40]
	0x033701B8 LDP X26, X25, [X31 + 0x30]
	0x033701BC LDP X28, X27, [X31 + 0x20]
	0x033701C0 LDP X29, X30, [X31 + 0x10]
	0x033701C4 LDR V8, [X31], #0x70
	0x033701C8 RET
	0x033701CC AND W8, W22, 0xFFFFFFFE
	0x033701D0 CMP W8, 0xC
	0x033701D4 B.NE 0x33702F4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x106D000
	007 Move W8, [X20+3808]
	008 Move X21, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDB9000
	015 Move X0, [X0+1416]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3808], W8
	019 Move W8, [X19+36]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 128
	022 Compare TEMP, 128
	023 JumpIfEqual {51}
	024 Move X22, 0xDB9000
	025 Move W20, [X21+16]
	026 Move X22, [X22+1416]
	027 Move X0, X21
	028 Move W1, W31
	029 Move X2, X31
	030 Call DateTimeRawInfo.GetNumber, X0, X1
	031 Move X8, [X22]
	032 Move W21, W0
	033 Move W9, [X8+224]
	034 Compare W9, 0
	035 JumpIfNotEqual {38}
	036 Move X0, X8
	037 Call 0x1C17DFC
	038 Move W3, 1
	039 Move X0, X19
	040 Move W1, W20
	041 Move W2, W21
	042 Call DateTimeParse.SetDateYMD, X0, X1, X2, X3
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {51}
	047 Move W8, [X19+36]
	048 Move W0, 1
	049 Or W8, W8, 128
	050 Move [X19+36], W8
	051 Move X0, X19
	052 Move X1, X31
	053 Call DateTimeResult.SetBadDateTimeFailure, X0
	054 Move W0, W31
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 Move X30, [X31+48]
	060 Return X0

Method: System.Boolean GetDayOfYM(ref System.DateTimeResult result, ref System.DateTimeRawInfo raw)

Disassembly:
	0x033701D8 LDR X0, [X27]
	0x033701DC LDR W8, [X0 + 0xE0]
	0x033701E0 CBNZ W8, 0x33701E8
	0x033701E4 BL 0x1C16DFC
	0x033701E8 SUB X0, X29, 0x80
	0x033701EC SUB X1, X29, 0xB0
	0x033701F0 MOV W2, W24
	0x033701F4 MOV X3, X19
	0x033701F8 BL 0x3370414
	0x033701FC B 0x3370194
	0x03370200 CMP W8, 0xC
	0x03370204 B.HI 0x33702F4
	0x03370208 CSEL W8, W31, W8, EQ
	0x0337020C STR W8, [X19 + 0xC]
	0x03370210 LDR W8, [X19]
	0x03370214 ADDS W31, W8, 0x1
	0x03370218 B.NE 0x3370228
	0x0337021C LDR W8, [X19 + 0x4]
	0x03370220 ADDS W31, W8, 0x1
	0x03370224 B.EQ 0x3370314
	0x03370228 MOV W21, W31
	0x0337022C LDR X0, [X27]
	0x03370230 LDUR W22, [X29 - 0x34]
	0x03370234 LDR W8, [X0 + 0xE0]
	0x03370238 CBNZ W8, 0x3370240
	0x0337023C BL 0x1C16DFC
	0x03370240 MOV X0, X19
	0x03370244 MOV X1, X20
	0x03370248 MOV W2, W22
	0x0337024C BL 0x3370A20
	0x03370250 TBZ X0, 0x0, 0x3370190
	0x03370254 LDR X0, [X20]
	0x03370258 CBZ X0, 0x3370408
	0x0337025C LDR X9, [X0]
	0x03370260 LDR W8, [X19 + 0x20]
	0x03370264 LDP W5, W6, [X19 + 0x10]
	0x03370268 LDP W3, W4, [X19 + 0x8]
	0x0337026C LDP W1, W2, [X19]
	0x03370270 LDR X10, [X9 + 0x2A8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x106D000
	006 Move W8, [X21+3809]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xDB9000
	014 Move X0, [X0+1416]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3809], W8
	018 Move W8, [X19+36]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 128
	021 Compare TEMP, 128
	022 JumpIfEqual {45}
	023 Move X8, 0xDB9000
	024 Move X8, [X8+1416]
	025 Move W20, [X20+12]
	026 Move W21, [X20+16]
	027 Move X0, [X8]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move W3, 1
	033 Move X0, X19
	034 Move W1, W21
	035 Move W2, W20
	036 Call DateTimeParse.SetDateYMD, X0, X1, X2, X3
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {45}
	041 Move W8, [X19+36]
	042 Move W0, 1
	043 Or W8, W8, 128
	044 Move [X19+36], W8
	045 Move X0, X19
	046 Move X1, X31
	047 Call DateTimeResult.SetBadDateTimeFailure, X0
	048 Move W0, W31
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 Move X21, [X31+40]
	053 Return X0

Method: System.Void AdjustTimeMark(System.Globalization.DateTimeFormatInfo dtfi, ref System.DateTimeRawInfo raw)

Disassembly:
	0x03370274 LDR X9, [X9 + 0x2B0]
	0x03370278 SUB X31, X31, 0x20
	0x0337027C SUB X11, X29, 0x40
	0x03370280 MOV W7, W31
	0x03370284 STP X11, X9, [X31 + 0x8]
	0x03370288 STR W8, [X31]
	0x0337028C BLR X10
	0x03370290 ADD X31, X31, 0x20
	0x03370294 TBZ X0, 0x0, 0x3370304
	0x03370298 LDUR V8, [X29 - 0x60]
	0x0337029C FCMP D8, 0x0
	0x033702A0 B.LE 0x337039C
	0x033702A4 ADRP X8, 0xD83000
	0x033702A8 LDR X8, [X8 + 0x5A8]
	0x033702AC LDR X0, [X8]
	0x033702B0 LDR W8, [X0 + 0xE0]
	0x033702B4 CBNZ W8, 0x33702BC
	0x033702B8 BL 0x1C16DFC
	0x033702BC ADRP X8, 0xFFFFFFFFFD77D000
	0x033702C0 LDR V0, [X8 + 0xAA8]
	0x033702C4 SUB X0, X29, 0x28
	0x033702C8 FMUL D8, D8, D0
	0x033702CC MOV V0.16B, V8.16B
	0x033702D0 BL 0x3EB1C00
	0x033702D4 FCMP D8, 0x0
	0x033702D8 B.GE 0x3370324
	0x033702DC FMOV D1, -0.5
	0x033702E0 FCMP D0, D1
	0x033702E4 B.NE 0x337034C
	0x033702E8 LDUR V0, [X29 - 0x28]
	0x033702EC FMOV D1, -1
	0x033702F0 B 0x3370338
	0x033702F4 MOV X0, X19
	0x033702F8 MOV X1, X31
	0x033702FC BL 0x33767C8
	0x03370300 B 0x3370190
	0x03370304 ADRP X8, 0xDBA000
	0x03370308 LDR X8, [X8 + 0xC30]
	0x0337030C MOVZ W1, 0x7
	0x03370310 B 0x3370180
	0x03370314 LDR W8, [X19 + 0x8]
	0x03370318 ADDS W31, W8, 0x1
	0x0337031C CSET W21, EQ
	0x03370320 B 0x337022C
	0x03370324 FMOV D1, 0.5
	0x03370328 FCMP D0, D1
	0x0337032C B.NE 0x3370358
	0x03370330 LDUR V0, [X29 - 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X1+28]
	005 Add W31, W8, 1
	006 Move X20, [X31+16]
	007 Move X19, [X31+24]
	008 Move X30, [X31+32]
	009 Return 
	010 Move X20, X0
	011 Compare X0, 0
	012 JumpIfEqual {59}
	013 Move X19, X1
	014 Move X0, X20
	015 Move X1, X31
	016 Call DateTimeFormatInfo.get_AMDesignator, X0
	017 Compare X0, 0
	018 JumpIfEqual {6}
	019 Move X0, X20
	020 Move X1, X31
	021 Call DateTimeFormatInfo.get_PMDesignator, X0
	022 Compare X0, 0
	023 JumpIfEqual {6}
	024 Move X0, X20
	025 Move X1, X31
	026 Call DateTimeFormatInfo.get_AMDesignator, X0
	027 Compare X0, 0
	028 JumpIfEqual {59}
	029 Move W8, [X0+16]
	030 Compare W8, 0
	031 JumpIfNotEqual {41}
	032 Move X0, X20
	033 Move X1, X31
	034 Call DateTimeFormatInfo.get_PMDesignator, X0
	035 Compare X0, 0
	036 JumpIfEqual {59}
	037 Move W8, [X0+16]
	038 Compare W8, 0
	039 JumpIfEqual {41}
	040 Move [X19+28], W31
	041 Move X0, X20
	042 Move X1, X31
	043 Call DateTimeFormatInfo.get_PMDesignator, X0
	044 Compare X0, 0
	045 JumpIfEqual {59}
	046 Move W8, [X0+16]
	047 Compare W8, 0
	048 JumpIfNotEqual {6}
	049 Move X0, X20
	050 Move X1, X31
	051 Call DateTimeFormatInfo.get_AMDesignator, X0
	052 Compare X0, 0
	053 JumpIfEqual {59}
	054 Move W8, [X0+16]
	055 Compare W8, 0
	056 JumpIfEqual {6}
	057 Move W8, 1
	058 Move [X19+28], W8
	059 Call 0x1C17F20

Method: System.Boolean AdjustHour(ref System.Int32 hour, System.DateTimeParse/TM timeMark)

Disassembly:
	0x03370334 FMOV D1, 1
	0x03370338 FCVTZS X8, D0
	0x0337033C FADD D1, D0, D1
	0x03370340 ANDS X31, X8, 0x1
	0x03370344 FCSEL D8, D0, D1, EQ
	0x03370348 B 0x3370360
	0x0337034C FADD D0, D8, D1
	0x03370350 FRINTP D8, D0
	0x03370354 B 0x3370360
	0x03370358 FADD D0, D8, D1
	0x0337035C FRINTM D8, D0
	0x03370360 ADRP X8, 0xD84000
	0x03370364 LDR X8, [X8 + 0x9F0]
	0x03370368 LDR X0, [X8]
	0x0337036C LDR W8, [X0 + 0xE0]
	0x03370370 CBNZ W8, 0x3370378
	0x03370374 BL 0x1C16DFC
	0x03370378 MOVZ X8, 0x7FF00000

ISIL:
	001 Add W31, W1, 1
	002 Move W8, [X0]
	003 Compare W1, 0
	004 JumpIfEqual {8}
	005 NotImplemented "Instruction CMP not yet implemented."
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Add W8, W8, 12
	008 NotImplemented "Instruction CMP not yet implemented."
	009 NotImplemented "Instruction CSEL not yet implemented."
	010 Move [X0], W8
	011 Move W0, 1
	012 Return X0
	013 Move W0, W31
	014 Return X0

Method: System.Boolean GetTimeOfN(ref System.DateTimeResult result, ref System.DateTimeRawInfo raw)

Disassembly:
	0x0337037C FMOV D0, X8
	0x03370380 FCVTZS X9, D8
	0x03370384 FCMP D8, D0
	0x03370388 MOVZ X8, 0x80000000
	0x0337038C CSEL X1, X8, X9, EQ
	0x03370390 SUB X0, X29, 0x40
	0x03370394 BL 0x335FCCC
	0x03370398 STUR X0, [X29 - 0x40]
	0x0337039C LDUR W23, [X29 - 0x6C]
	0x033703A0 ADDS W31, W23, 0x1
	0x033703A4 B.EQ 0x33703C8
	0x033703A8 LDR X0, [X20]
	0x033703AC CBZ X0, 0x3370408
	0x033703B0 LDR X8, [X0]
	0x033703B4 LDUR X1, [X29 - 0x40]
	0x033703B8 LDP X9, X2, [X8 + 0x1F8]
	0x033703BC BLR X9
	0x033703C0 CMP W23, W0
	0x033703C4 B.NE 0x33703F8
	0x033703C8 LDUR X8, [X29 - 0x40]
	0x033703CC STR X8, [X19 + 0x38]
	0x033703D0 LDR X0, [X27]
	0x033703D4 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+36]
	004 Move X19, X0
	005 Move TEMP, X8
	006 And TEMP, TEMP, 64
	007 Compare TEMP, 64
	008 JumpIfEqual {20}
	009 Move W8, [X1+28]
	010 Add W31, W8, 1
	011 Move X0, X1
	012 Move W1, W31
	013 Move X2, X31
	014 Call DateTimeRawInfo.GetNumber, X0, X1
	015 Move W8, [X19+36]
	016 Move [X19+12], W0
	017 Move W0, 1
	018 Or W8, W8, 64
	019 Move [X19+36], W8
	020 Move X0, X19
	021 Move X1, X31
	022 Call DateTimeResult.SetBadDateTimeFailure, X0
	023 Move W0, W31
	024 Move X30, [X31+16]
	025 Move X19, [X31+24]
	026 Return X0

Method: System.Boolean GetTimeOfNN(ref System.DateTimeResult result, ref System.DateTimeRawInfo raw)

Disassembly:
	0x033703D8 CBNZ W8, 0x33703E0
	0x033703DC BL 0x1C16DFC
	0x033703E0 SUB X0, X29, 0xB0
	0x033703E4 MOV X1, X19
	0x033703E8 MOV W2, W22
	0x033703EC MOV W3, W21
	0x033703F0 BL 0x3370C9C
	0x033703F4 B 0x3370194
	0x033703F8 ADRP X8, 0xDBA000
	0x033703FC LDR X8, [X8 + 0xC28]
	0x03370400 MOVZ W1, 0x4
	0x03370404 B 0x3370180
	0x03370408 BL 0x1C16F20
	0x0337040C BL 0x1C16F28
	0x03370410 BL 0x3EB1B20
	0x03370414 SUB X31, X31, 0x90
	0x03370418 STR D8, [X31 + 0x40]
	0x0337041C STR X30, [X31 + 0x48]
	0x03370420 STP X26, X25, [X31 + 0x50]
	0x03370424 STP X24, X23, [X31 + 0x60]
	0x03370428 STP X22, X21, [X31 + 0x70]
	0x0337042C STP X20, X19, [X31 + 0x80]
	0x03370430 ADRP X23, 0x106C000
	0x03370434 LDRB W8, [X23 + 0xEEE]
	0x03370438 MOV X19, X3
	0x0337043C MOV W20, W2
	0x03370440 MOV X21, X1
	0x03370444 MOV X22, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W21, [X0+36]
	006 Move X19, X0
	007 Move TEMP, X21
	008 And TEMP, TEMP, 64
	009 Compare TEMP, 64
	010 JumpIfEqual {25}
	011 Move X20, X1
	012 Move X0, X1
	013 Move W1, W31
	014 Move X2, X31
	015 Call DateTimeRawInfo.GetNumber, X0, X1
	016 Move [X19+12], W0
	017 Move W1, 1
	018 Move X0, X20
	019 Move X2, X31
	020 Call DateTimeRawInfo.GetNumber, X0, X1
	021 Move W8, [X19+36]
	022 Move [X19+16], W0
	023 Or W8, W8, 64
	024 Move [X19+36], W8
	025 Move X0, X19
	026 Move X1, X31
	027 Call DateTimeResult.SetBadDateTimeFailure, X0
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 And W31, W21, 64
	031 NotImplemented "Instruction CSET not yet implemented."
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return X0

Method: System.Boolean GetTimeOfNNN(ref System.DateTimeResult result, ref System.DateTimeRawInfo raw)

Disassembly:
	0x03370448 TBNZ X8, 0x0, 0x33704A8
	0x0337044C ADRP X0, 0xDB8000
	0x03370450 LDR X0, [X0 + 0x588]
	0x03370454 BL 0x1C16CF4
	0x03370458 ADRP X0, 0xD84000
	0x0337045C LDR X0, [X0 + 0x9F0]
	0x03370460 BL 0x1C16CF4
	0x03370464 ADRP X0, 0xDB8000
	0x03370468 LDR X0, [X0 + 0x310]
	0x0337046C BL 0x1C16CF4
	0x03370470 ADRP X0, 0xD83000
	0x03370474 LDR X0, [X0 + 0x5A8]
	0x03370478 BL 0x1C16CF4
	0x0337047C ADRP X0, 0xD85000
	0x03370480 LDR X0, [X0 + 0x570]
	0x03370484 BL 0x1C16CF4
	0x03370488 ADRP X0, 0xDB8000
	0x0337048C LDR X0, [X0 + 0x4F0]
	0x03370490 BL 0x1C16CF4
	0x03370494 ADRP X0, 0xDBA000
	0x03370498 LDR X0, [X0 + 0xC30]
	0x0337049C BL 0x1C16CF4
	0x033704A0 MOVZ W8, 0x1
	0x033704A4 STRB W8, [X23 + 0xEEE]
	0x033704A8 STR X31, [X31 + 0x30]
	0x033704AC STR X31, [X31 + 0x18]
	0x033704B0 ADRP X24, 0xDB8000
	0x033704B4 LDR W8, [X22 + 0x10]
	0x033704B8 LDR X24, [X24 + 0x4F0]
	0x033704BC TBNZ X8, 0x1F, 0x33704E4
	0x033704C0 MOV X0, X22
	0x033704C4 MOV W1, W31
	0x033704C8 MOV X2, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W21, [X0+36]
	006 Move X19, X0
	007 Move TEMP, X21
	008 And TEMP, TEMP, 64
	009 Compare TEMP, 64
	010 JumpIfEqual {30}
	011 Move X20, X1
	012 Move X0, X1
	013 Move W1, W31
	014 Move X2, X31
	015 Call DateTimeRawInfo.GetNumber, X0, X1
	016 Move [X19+12], W0
	017 Move W1, 1
	018 Move X0, X20
	019 Move X2, X31
	020 Call DateTimeRawInfo.GetNumber, X0, X1
	021 Move [X19+16], W0
	022 Move W1, 2
	023 Move X0, X20
	024 Move X2, X31
	025 Call DateTimeRawInfo.GetNumber, X0, X1
	026 Move W8, [X19+36]
	027 Move [X19+20], W0
	028 Or W8, W8, 64
	029 Move [X19+36], W8
	030 Move X0, X19
	031 Move X1, X31
	032 Call DateTimeResult.SetBadDateTimeFailure, X0
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 And W31, W21, 64
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return X0

Method: System.Boolean GetDateOfDSN(ref System.DateTimeResult result, ref System.DateTimeRawInfo raw)

Disassembly:
	0x033704CC BL 0x3376694
	0x033704D0 TBNZ X0, 0x1F, 0x33704E4
	0x033704D4 MOVZ W1, 0x1
	0x033704D8 MOV X0, X22
	0x033704DC MOV X2, X31
	0x033704E0 BL 0x3376694
	0x033704E4 LDR W8, [X21 + 0x10]
	0x033704E8 ADRP X26, 0xDB8000
	0x033704EC SUB W8, W8, 0x1
	0x033704F0 STR W8, [X21 + 0x10]
	0x033704F4 LDR X0, [X24]
	0x033704F8 STR W31, [X31 + 0x2C]
	0x033704FC STR X31, [X31 + 0x20]
	0x03370500 LDR W8, [X0 + 0xE0]
	0x03370504 LDR X26, [X26 + 0x588]
	0x03370508 CBNZ W8, 0x3370510
	0x0337050C BL 0x1C16DFC
	0x03370510 MOV X0, X21
	0x03370514 MOV X1, X31
	0x03370518 BL 0x3375C94
	0x0337051C LDR X0, [X26]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X1+8]
	004 Move X19, X0
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move W8, [X19+8]
	007 Add W31, W8, 1
	008 Move X0, X19
	009 Move X1, X31
	010 Call DateTimeResult.SetBadDateTimeFailure, X0
	011 Move W0, W31
	012 Move X0, X1
	013 Move W1, W31
	014 Move X2, X31
	015 Call DateTimeRawInfo.GetNumber, X0, X1
	016 Move [X19+8], W0
	017 Move W0, 1
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 Return X0

Method: System.Boolean GetDateOfNDS(ref System.DateTimeResult result, ref System.DateTimeRawInfo raw)

Disassembly:
	0x03370520 LDR W8, [X0 + 0xE0]
	0x03370524 CBNZ W8, 0x337052C
	0x03370528 BL 0x1C16DFC
	0x0337052C ADD X2, X31, 0x34
	0x03370530 MOVZ W1, 0x2
	0x03370534 MOV X0, X21
	0x03370538 BL 0x33714E0
	0x0337053C TBZ X0, 0x0, 0x3370840
	0x03370540 LDR X0, [X24]
	0x03370544 LDR W8, [X0 + 0xE0]
	0x03370548 CBNZ W8, 0x3370550
	0x0337054C BL 0x1C16DFC
	0x03370550 MOV X0, X21
	0x03370554 MOV X1, X31
	0x03370558 BL 0x3375C94
	0x0337055C MOVZ W1, 0x3A
	0x03370560 MOV X0, X21
	0x03370564 MOV X2, X31
	0x03370568 BL 0x33758BC
	0x0337056C TBZ X0, 0x0, 0x3370840
	0x03370570 LDR X0, [X24]
	0x03370574 LDR W8, [X0 + 0xE0]
	0x03370578 CBNZ W8, 0x3370580
	0x0337057C BL 0x1C16DFC
	0x03370580 MOV X0, X21
	0x03370584 MOV X1, X31
	0x03370588 BL 0x3375C94
	0x0337058C LDR X0, [X26]
	0x03370590 LDR W8, [X0 + 0xE0]
	0x03370594 CBNZ W8, 0x337059C
	0x03370598 BL 0x1C16DFC
	0x0337059C ADD X2, X31, 0x30
	0x033705A0 MOVZ W1, 0x2
	0x033705A4 MOV X0, X21
	0x033705A8 BL 0x33714E0
	0x033705AC TBZ X0, 0x0, 0x3370840
	0x033705B0 LDR X0, [X24]
	0x033705B4 LDR W8, [X0 + 0xE0]
	0x033705B8 CBNZ W8, 0x33705C0
	0x033705BC BL 0x1C16DFC
	0x033705C0 MOV X0, X21
	0x033705C4 MOV X1, X31
	0x033705C8 BL 0x3375C94
	0x033705CC MOVZ W1, 0x3A
	0x033705D0 MOV X0, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x106D000
	006 Move W8, [X21+3810]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xDB9000
	014 Move X0, [X0+1416]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3810], W8
	018 Move W8, [X19+4]
	019 Add W31, W8, 1
	020 Move W8, [X19]
	021 Add W31, W8, 1
	022 Move X0, X20
	023 Move W1, W31
	024 Move X2, X31
	025 Call DateTimeRawInfo.GetNumber, X0, X1
	026 Move X8, 0xDB9000
	027 Move X8, [X8+1416]
	028 Move W20, W0
	029 Move X8, [X8]
	030 Move W9, [X8+224]
	031 Compare W9, 0
	032 JumpIfNotEqual {35}
	033 Move X0, X8
	034 Call 0x1C17DFC
	035 Move X0, X19
	036 Move W1, W20
	037 Move X2, X19
	038 Call DateTimeParse.TryAdjustYear, X0, X1, X2
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {45}
	043 Move W0, 1
	044 Move [X19+8], W0
	045 Move X0, X19
	046 Move X1, X31
	047 Call DateTimeResult.SetBadDateTimeFailure, X0
	048 Move W0, W31
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 Move X21, [X31+40]
	053 Return X0

Method: System.Boolean GetDateOfNNDS(ref System.DateTimeResult result, ref System.DateTimeRawInfo raw, System.Globalization.DateTimeFormatInfo dtfi)

Disassembly:
	0x033705D4 MOV X2, X31
	0x033705D8 BL 0x33758BC
	0x033705DC TBZ X0, 0x0, 0x337068C
	0x033705E0 LDR X0, [X24]
	0x033705E4 LDR W8, [X0 + 0xE0]
	0x033705E8 CBNZ W8, 0x33705F0
	0x033705EC BL 0x1C16DFC
	0x033705F0 MOV X0, X21
	0x033705F4 MOV X1, X31
	0x033705F8 BL 0x3375C94
	0x033705FC LDR X0, [X26]
	0x03370600 LDR W8, [X0 + 0xE0]
	0x03370604 CBNZ W8, 0x337060C
	0x03370608 BL 0x1C16DFC
	0x0337060C ADD X2, X31, 0x2C
	0x03370610 MOVZ W1, 0x2
	0x03370614 MOV X0, X21
	0x03370618 BL 0x33714E0
	0x0337061C TBZ X0, 0x0, 0x3370840
	0x03370620 LDR X0, [X24]
	0x03370624 LDR W8, [X0 + 0xE0]
	0x03370628 CBNZ W8, 0x3370630
	0x0337062C BL 0x1C16DFC
	0x03370630 MOVZ W1, 0x2E
	0x03370634 MOV X0, X21
	0x03370638 MOV X2, X31
	0x0337063C BL 0x33758BC
	0x03370640 TBZ X0, 0x0, 0x3370670
	0x03370644 LDR X0, [X26]
	0x03370648 LDR W8, [X0 + 0xE0]
	0x0337064C CBNZ W8, 0x3370654
	0x03370650 BL 0x1C16DFC
	0x03370654 ADD X1, X31, 0x20
	0x03370658 MOV X0, X21
	0x0337065C BL 0x336BC10
	0x03370660 TBZ X0, 0x0, 0x3370840
	0x03370664 LDR W8, [X21 + 0x10]
	0x03370668 SUB W8, W8, 0x1
	0x0337066C STR W8, [X21 + 0x10]
	0x03370670 LDR X0, [X24]
	0x03370674 LDR W8, [X0 + 0xE0]
	0x03370678 CBNZ W8, 0x3370680
	0x0337067C BL 0x1C16DFC
	0x03370680 MOV X0, X21
	0x03370684 MOV X1, X31
	0x03370688 BL 0x3375C94
	0x0337068C LDR X0, [X24]
	0x03370690 LDR W8, [X0 + 0xE0]
	0x03370694 CBNZ W8, 0x337069C
	0x03370698 BL 0x1C16DFC
	0x0337069C MOV X0, X21
	0x033706A0 MOV X1, X31
	0x033706A4 BL 0x3374A74
	0x033706A8 TBZ X0, 0x0, 0x3370874
	0x033706AC LDR X0, [X24]
	0x033706B0 LDR W8, [X0 + 0xE0]
	0x033706B4 CBNZ W8, 0x33706BC
	0x033706B8 BL 0x1C16DFC
	0x033706BC MOV X0, X21
	0x033706C0 MOV X1, X31
	0x033706C4 BL 0x3375C40
	0x033706C8 AND W8, W0, 0xFFFF
	0x033706CC CMP W8, 0x59
	0x033706D0 B.GT 0x3370718
	0x033706D4 CMP W8, 0x2B
	0x033706D8 B.EQ 0x33706E4
	0x033706DC CMP W8, 0x2D
	0x033706E0 B.NE 0x337076C
	0x033706E4 LDR W8, [X19 + 0x24]
	0x033706E8 ADD X23, X19, 0x28
	0x033706EC ORR W8, W8, 0x100
	0x033706F0 STR W8, [X19 + 0x24]
	0x033706F4 LDR X0, [X26]
	0x033706F8 LDR W8, [X0 + 0xE0]
	0x033706FC CBNZ W8, 0x3370704
	0x03370700 BL 0x1C16DFC
	0x03370704 MOV X0, X21
	0x03370708 MOV X1, X23
	0x0337070C BL 0x336BCFC
	0x03370710 TBNZ X0, 0x0, 0x3370778
	0x03370714 B 0x3370840
	0x03370718 CMP W8, 0x5A
	0x0337071C B.EQ 0x3370728
	0x03370720 CMP W8, 0x7A
	0x03370724 B.NE 0x337076C
	0x03370728 LDR W8, [X19 + 0x24]
	0x0337072C ADRP X23, 0xD85000
	0x03370730 ORR W8, W8, 0x100
	0x03370734 STR W8, [X19 + 0x24]
	0x03370738 LDR X23, [X23 + 0x570]
	0x0337073C LDR X0, [X23]
	0x03370740 LDR W9, [X0 + 0xE0]
	0x03370744 CBNZ W9, 0x3370754
	0x03370748 BL 0x1C16DFC
	0x0337074C LDR X0, [X23]
	0x03370750 LDR W8, [X19 + 0x24]
	0x03370754 LDR X9, [X0 + 0xB8]
	0x03370758 ORR W8, W8, 0x200
	0x0337075C LDR X9, [X9]
	0x03370760 STR W8, [X19 + 0x24]
	0x03370764 STR X9, [X19 + 0x28]
	0x03370768 B 0x3370778
	0x0337076C LDR W8, [X21 + 0x10]
	0x03370770 SUB W8, W8, 0x1
	0x03370774 STR W8, [X21 + 0x10]
	0x03370778 LDR X0, [X24]
	0x0337077C LDR W8, [X0 + 0xE0]
	0x03370780 CBNZ W8, 0x3370788
	0x03370784 BL 0x1C16DFC
	0x03370788 MOV X0, X21
	0x0337078C MOV X1, X31
	0x03370790 BL 0x3375C94
	0x03370794 MOVZ W1, 0x23
	0x03370798 MOV X0, X21
	0x0337079C MOV X2, X31
	0x033707A0 BL 0x33758BC
	0x033707A4 TBZ X0, 0x0, 0x33707E0
	0x033707A8 LDR X0, [X26]
	0x033707AC LDR W8, [X0 + 0xE0]
	0x033707B0 CBNZ W8, 0x33707B8
	0x033707B4 BL 0x1C16DFC
	0x033707B8 MOV X0, X21
	0x033707BC BL 0x336D49C
	0x033707C0 TBZ X0, 0x0, 0x3370840
	0x033707C4 LDR X0, [X24]
	0x033707C8 LDR W8, [X0 + 0xE0]
	0x033707CC CBNZ W8, 0x33707D4
	0x033707D0 BL 0x1C16DFC
	0x033707D4 MOV X0, X21
	0x033707D8 MOV X1, X31
	0x033707DC BL 0x3375C94
	0x033707E0 LDR X0, [X24]
	0x033707E4 LDR W8, [X0 + 0xE0]
	0x033707E8 CBNZ W8, 0x33707F0
	0x033707EC BL 0x1C16DFC
	0x033707F0 MOV X0, X21
	0x033707F4 MOV W1, W31
	0x033707F8 MOV X2, X31
	0x033707FC BL 0x33758BC

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x106D000
	009 Move W8, [X22+3811]
	010 Move X21, X2
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xDB9000
	018 Move X0, [X0+1416]
	019 Call 0x1C17CF4
	020 Move X0, 0xDBB000
	021 Move X0, [X0+3176]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+3811], W8
	025 Move [X31+8], X31
	026 Move W9, [X19+36]
	027 And W8, W9, 6
	028 Move TEMP, X9
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {80}
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Compare X21, 0
	034 JumpIfEqual {169}
	035 Move X0, X21
	036 Move X1, X31
	037 Call DateTimeFormatInfo.get_ShortDatePattern, X0
	038 Move X23, 0xDB9000
	039 Move X23, [X23+1416]
	040 Move X22, X0
	041 Move X8, [X23]
	042 Move W9, [X8+224]
	043 Compare W9, 0
	044 JumpIfNotEqual {47}
	045 Move X0, X8
	046 Call 0x1C17DFC
	047 Add X2, X31, 12
	048 Move X0, X22
	049 Call DateTimeParse.GetYearMonthDayOrder, X0, X1, X2
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {125}
	054 Move W8, [X31+12]
	055 Compare W8, 0
	056 JumpIfEqual {136}
	057 Move W1, 1
	058 Move X0, X20
	059 Move X2, X31
	060 Call DateTimeRawInfo.GetNumber, X0, X1
	061 Move X8, [X23]
	062 Move W21, W0
	063 Move W9, [X8+224]
	064 Compare W9, 0
	065 JumpIfNotEqual {68}
	066 Move X0, X8
	067 Call 0x1C17DFC
	068 Add X2, X31, 8
	069 Move X0, X19
	070 Move W1, W21
	071 Call DateTimeParse.TryAdjustYear, X0, X1, X2
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {157}
	076 Move W21, [X31+8]
	077 Move W22, [X19+4]
	078 Move X0, X20
	079 Move W1, W31
	080 Compare W8, 0
	081 JumpIfNotEqual {157}
	082 Move X23, 0xDB9000
	083 Move X23, [X23+1416]
	084 Move W21, [X20+16]
	085 Move X0, [X23]
	086 Move W8, [X0+224]
	087 Compare W8, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1C17DFC
	090 Move X0, X19
	091 Move W1, W21
	092 Move X2, X19
	093 Call DateTimeParse.TryAdjustYear, X0, X1, X2
	094 Move TEMP, X0
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfNotEqual {157}
	098 Move W21, [X19]
	099 Move X0, X20
	100 Move W1, W31
	101 Move X2, X31
	102 Call DateTimeRawInfo.GetNumber, X0, X1
	103 Move W22, W0
	104 Move W1, 1
	105 Move X0, X20
	106 Move X2, X31
	107 Call DateTimeRawInfo.GetNumber, X0, X1
	108 Move X8, [X23]
	109 Move W20, W0
	110 Move W9, [X8+224]
	111 Compare W9, 0
	112 JumpIfNotEqual {115}
	113 Move X0, X8
	114 Call 0x1C17DFC
	115 Move X0, X19
	116 Move W1, W21
	117 Move W2, W22
	118 Move W3, W20
	119 Call DateTimeParse.SetDateYMD, X0, X1, X2, X3
	120 Move TEMP, X0
	121 And TEMP, TEMP, 1
	122 Compare TEMP, 1
	123 JumpIfNotEqual {157}
	124 Move W0, 1
	125 Move X0, X21
	126 Move X1, X31
	127 Call DateTimeFormatInfo.get_ShortDatePattern, X0
	128 Move X8, 0xDBB000
	129 Move X8, [X8+3176]
	130 Move X3, X0
	131 Move W1, 3
	132 Move X0, X19
	133 Move X2, [X8]
	134 Move X4, X31
	135 Call DateTimeResult.SetFailure, X0, X1, X2, X3
	136 Move X0, X20
	137 Move W1, W31
	138 Move X2, X31
	139 Call DateTimeRawInfo.GetNumber, X0, X1
	140 Move X8, [X23]
	141 Move W21, W0
	142 Move W9, [X8+224]
	143 Compare W9, 0
	144 JumpIfNotEqual {147}
	145 Move X0, X8
	146 Call 0x1C17DFC
	147 Add X2, X31, 8
	148 Move X0, X19
	149 Move W1, W21
	150 Call DateTimeParse.TryAdjustYear, X0, X1, X2
	151 Move TEMP, X0
	152 And TEMP, TEMP, 1
	153 Compare TEMP, 1
	154 JumpIfNotEqual {157}
	155 Move W21, [X31+8]
	156 Move W22, [X19+4]
	157 Move X0, X19
	158 Move X1, X31
	159 Call DateTimeResult.SetBadDateTimeFailure, X0
	160 Move W0, W31
	161 Move X20, [X31+48]
	162 Move X19, [X31+56]
	163 Move X22, [X31+32]
	164 Move X21, [X31+40]
	165 Move X30, [X31+16]
	166 Move X23, [X31+24]
	167 Add X31, X31, 64
	168 Return X0
	169 Call 0x1C17F20

Method: System.Boolean ProcessDateTimeSuffix(ref System.DateTimeResult result, ref System.DateTimeRawInfo raw, ref System.DateTimeToken dtok)

Disassembly:
	0x03370800 TBZ X0, 0x0, 0x3370820
	0x03370804 LDR X0, [X26]
	0x03370808 LDR W8, [X0 + 0xE0]
	0x0337080C CBNZ W8, 0x3370814
	0x03370810 BL 0x1C16DFC
	0x03370814 MOV X0, X21
	0x03370818 BL 0x336D49C
	0x0337081C TBZ X0, 0x0, 0x3370840
	0x03370820 LDR X0, [X24]
	0x03370824 LDR W8, [X0 + 0xE0]
	0x03370828 CBNZ W8, 0x3370830
	0x0337082C BL 0x1C16DFC
	0x03370830 MOV X0, X21
	0x03370834 MOV X1, X31
	0x03370838 BL 0x3374A74
	0x0337083C TBZ X0, 0x0, 0x3370874
	0x03370840 MOV X0, X19
	0x03370844 MOV X1, X31
	0x03370848 BL 0x33767C8
	0x0337084C MOV W0, W31
	0x03370850 LDP X20, X19, [X31 + 0x80]
	0x03370854 LDP X22, X21, [X31 + 0x70]
	0x03370858 LDP X24, X23, [X31 + 0x60]
	0x0337085C LDP X26, X25, [X31 + 0x50]
	0x03370860 LDR X30, [X31 + 0x48]
	0x03370864 LDR V8, [X31 + 0x40]
	0x03370868 AND W0, W0, 0x1
	0x0337086C ADD X31, X31, 0x90
	0x03370870 RET
	0x03370874 ADRP X8, 0xDB8000
	0x03370878 LDR X8, [X8 + 0x310]
	0x0337087C LDR X0, [X8]
	0x03370880 LDR W8, [X0 + 0xE0]
	0x03370884 CBNZ W8, 0x337088C
	0x03370888 BL 0x1C16DFC
	0x0337088C MOV X0, X31
	0x03370890 BL 0x3324660
	0x03370894 LDR W23, [X22 + 0x10]
	0x03370898 MOV X24, X0
	0x0337089C MOV X0, X22
	0x033708A0 MOV W1, W31
	0x033708A4 MOV X2, X31
	0x033708A8 BL 0x3376694
	0x033708AC MOV W25, W0
	0x033708B0 MOVZ W1, 0x1
	0x033708B4 MOV X0, X22
	0x033708B8 MOV X2, X31
	0x033708BC BL 0x3376694
	0x033708C0 CBZ X24, 0x3370A1C
	0x033708C4 LDR X9, [X24]
	0x033708C8 LDR W8, [X19 + 0x20]
	0x033708CC LDP W6, W5, [X31 + 0x2C]
	0x033708D0 LDR W4, [X31 + 0x34]
	0x033708D4 LDR X10, [X9 + 0x2A8]
	0x033708D8 LDR X9, [X9 + 0x2B0]
	0x033708DC MOV W3, W0
	0x033708E0 ADD X11, X31, 0x18
	0x033708E4 MOV X0, X24
	0x033708E8 MOV W1, W23
	0x033708EC MOV W2, W25
	0x033708F0 MOV W7, W31
	0x033708F4 STP X11, X9, [X31 + 0x8]

ISIL:
	001 Move W8, [X2+4]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CMP not yet implemented."
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move W8, [X0+36]
	007 Move TEMP, X8
	008 And TEMP, TEMP, 32
	009 Compare TEMP, 32
	010 JumpIfEqual {67}
	011 Or W8, W8, 32
	012 Move [X0+36], W8
	013 Move W8, [X2+8]
	014 Move [X0+20], W8
	015 NotImplemented "Instruction CMP not yet implemented."
	016 NotImplemented "Instruction CMP not yet implemented."
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move W8, [X0+36]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 4
	021 Compare TEMP, 4
	022 JumpIfEqual {67}
	023 Or W8, W8, 4
	024 Move [X0+36], W8
	025 Move W8, [X2+8]
	026 Move [X0+8], W8
	027 Move W8, [X0+36]
	028 Move TEMP, X8
	029 And TEMP, TEMP, 8
	030 Compare TEMP, 8
	031 JumpIfEqual {67}
	032 Or W8, W8, 8
	033 Move [X0+36], W8
	034 Move W8, [X2+8]
	035 Move [X0+12], W8
	036 Move W8, [X0+36]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 16
	039 Compare TEMP, 16
	040 JumpIfEqual {67}
	041 Or W8, W8, 16
	042 Move [X0+36], W8
	043 Move W8, [X2+8]
	044 Move [X0+16], W8
	045 Move W8, [X0+36]
	046 Move TEMP, X8
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {67}
	050 Or W8, W8, 1
	051 Move [X0+36], W8
	052 Move W8, [X2+8]
	053 Move [X1+16], W8
	054 Move [X0], W8
	055 Move W8, [X0+36]
	056 Move TEMP, X8
	057 And TEMP, TEMP, 2
	058 Compare TEMP, 2
	059 JumpIfEqual {67}
	060 Or W8, W8, 2
	061 Move [X0+36], W8
	062 Move W8, [X2+8]
	063 Move [X1+12], W8
	064 Move [X0+4], W8
	065 Move W0, 1
	066 Return X0
	067 Move W0, W31
	068 Return X0

Method: System.Boolean ProcessHebrewTerminalState(System.DateTimeParse/DS dps, ref System.__DTString str, ref System.DateTimeResult result, ref System.Globalization.DateTimeStyles styles, ref System.DateTimeRawInfo raw, System.Globalization.DateTimeFormatInfo dtfi)

Disassembly:
	0x033708F8 STR W8, [X31]
	0x033708FC BLR X10
	0x03370900 TBZ X0, 0x0, 0x3370958
	0x03370904 ADRP X8, 0xD83000
	0x03370908 LDR X8, [X8 + 0x5A8]
	0x0337090C LDR V8, [X31 + 0x20]
	0x03370910 LDR X0, [X8]
	0x03370914 LDR W8, [X0 + 0xE0]
	0x03370918 CBNZ W8, 0x3370920
	0x0337091C BL 0x1C16DFC
	0x03370920 ADRP X8, 0xFFFFFFFFFD77D000
	0x03370924 LDR V0, [X8 + 0xAA8]
	0x03370928 ADD X0, X31, 0x38
	0x0337092C FMUL D8, D8, D0
	0x03370930 MOV V0.16B, V8.16B
	0x03370934 BL 0x3EB1C00
	0x03370938 FCMP D8, 0x0
	0x0337093C B.GE 0x3370978
	0x03370940 FMOV D1, -0.5
	0x03370944 FCMP D0, D1
	0x03370948 B.NE 0x33709A0
	0x0337094C LDR V0, [X31 + 0x38]
	0x03370950 FMOV D1, -1
	0x03370954 B 0x337098C
	0x03370958 ADRP X8, 0xDBA000
	0x0337095C LDR X8, [X8 + 0xC30]
	0x03370960 MOVZ W1, 0x7
	0x03370964 MOV X0, X19
	0x03370968 MOV X3, X31
	0x0337096C LDR X2, [X8]
	0x03370970 BL 0x3376818
	0x03370974 B 0x337084C
	0x03370978 FMOV D1, 0.5
	0x0337097C FCMP D0, D1
	0x03370980 B.NE 0x33709AC
	0x03370984 LDR V0, [X31 + 0x38]
	0x03370988 FMOV D1, 1
	0x0337098C FCVTZS X8, D0
	0x03370990 FADD D1, D0, D1
	0x03370994 ANDS X31, X8, 0x1
	0x03370998 FCSEL D8, D0, D1, EQ
	0x0337099C B 0x33709B4
	0x033709A0 FADD D0, D8, D1
	0x033709A4 FRINTP D8, D0
	0x033709A8 B 0x33709B4
	0x033709AC FADD D0, D8, D1
	0x033709B0 FRINTM D8, D0
	0x033709B4 ADRP X8, 0xD84000
	0x033709B8 LDR X8, [X8 + 0x9F0]
	0x033709BC LDR X0, [X8]
	0x033709C0 LDR W8, [X0 + 0xE0]
	0x033709C4 CBNZ W8, 0x33709CC
	0x033709C8 BL 0x1C16DFC
	0x033709CC MOVZ X8, 0x7FF00000
	0x033709D0 FMOV D0, X8
	0x033709D4 FCVTZS X9, D8
	0x033709D8 FCMP D8, D0
	0x033709DC MOVZ X8, 0x80000000
	0x033709E0 CSEL X1, X8, X9, EQ
	0x033709E4 ADD X0, X31, 0x18
	0x033709E8 BL 0x335FCCC
	0x033709EC STR X0, [X31 + 0x18]
	0x033709F0 STR X0, [X19 + 0x38]
	0x033709F4 LDR X0, [X26]
	0x033709F8 LDR W8, [X0 + 0xE0]
	0x033709FC CBNZ W8, 0x3370A04
	0x03370A00 BL 0x1C16DFC
	0x03370A04 MOV X0, X21
	0x03370A08 MOV X1, X19
	0x03370A0C MOV W2, W20
	0x03370A10 MOV W3, W31
	0x03370A14 BL 0x3370C9C
	0x03370A18 B 0x3370850
	0x03370A1C BL 0x1C16F20
	0x03370A20 STR X30, [X31 - 0x30]!
	0x03370A24 STP X22, X21, [X31 + 0x10]
	0x03370A28 STP X20, X19, [X31 + 0x20]
	0x03370A2C ADRP X22, 0x106C000
	0x03370A30 LDRB W8, [X22 + 0xEFE]
	0x03370A34 MOV W21, W2
	0x03370A38 MOV X20, X1
	0x03370A3C MOV X19, X0
	0x03370A40 STR W2, [X31 + 0xC]
	0x03370A44 TBNZ X8, 0x0, 0x3370A74
	0x03370A48 ADRP X0, 0xDB8000
	0x03370A4C LDR X0, [X0 + 0x588]
	0x03370A50 BL 0x1C16CF4
	0x03370A54 ADRP X0, 0xDB8000
	0x03370A58 LDR X0, [X0 + 0x310]
	0x03370A5C BL 0x1C16CF4
	0x03370A60 ADRP X0, 0xDBA000
	0x03370A64 LDR X0, [X0 + 0xC70]
	0x03370A68 BL 0x1C16CF4
	0x03370A6C MOVZ W8, 0x1
	0x03370A70 STRB W8, [X22 + 0xEFE]
	0x03370A74 LDR W8, [X19 + 0x24]
	0x03370A78 TBNZ X8, 0xB, 0x3370B38
	0x03370A7C LDR W8, [X19]
	0x03370A80 ADDS W31, W8, 0x1
	0x03370A84 B.EQ 0x3370AA0
	0x03370A88 LDR W8, [X19 + 0x4]
	0x03370A8C ADDS W31, W8, 0x1
	0x03370A90 B.EQ 0x3370AA0
	0x03370A94 LDR W8, [X19 + 0x8]
	0x03370A98 ADDS W31, W8, 0x1
	0x03370A9C B.NE 0x3370C44
	0x03370AA0 ADRP X8, 0xDB8000
	0x03370AA4 LDR X8, [X8 + 0x588]
	0x03370AA8 LDR X0, [X8]
	0x03370AAC LDR W8, [X0 + 0xE0]
	0x03370AB0 CBNZ W8, 0x3370AB8
	0x03370AB4 BL 0x1C16DFC
	0x03370AB8 ADD X1, X31, 0xC
	0x03370ABC MOV X0, X19
	0x03370AC0 BL 0x336E008
	0x03370AC4 LDR W8, [X19 + 0x4]
	0x03370AC8 MOV X22, X0
	0x03370ACC ADDS W31, W8, 0x1
	0x03370AD0 B.NE 0x3370AE0
	0x03370AD4 LDR W9, [X19 + 0x8]
	0x03370AD8 ADDS W31, W9, 0x1
	0x03370ADC B.EQ 0x3370B94
	0x03370AE0 LDR W9, [X19]
	0x03370AE4 ADDS W31, W9, 0x1
	0x03370AE8 B.NE 0x3370B10
	0x03370AEC LDR X0, [X20]
	0x03370AF0 CBZ X0, 0x3370C98
	0x03370AF4 LDR X8, [X0]
	0x03370AF8 MOV X1, X22
	0x03370AFC LDR X9, [X8 + 0x268]
	0x03370B00 LDR X2, [X8 + 0x270]
	0x03370B04 BLR X9
	0x03370B08 LDR W8, [X19 + 0x4]
	0x03370B0C STR W0, [X19]
	0x03370B10 ADDS W31, W8, 0x1
	0x03370B14 B.NE 0x3370B20
	0x03370B18 MOVZ W8, 0x1
	0x03370B1C STR W8, [X19 + 0x4]
	0x03370B20 LDR W8, [X19 + 0x8]
	0x03370B24 ADDS W31, W8, 0x1
	0x03370B28 B.NE 0x3370C44
	0x03370B2C MOVZ W8, 0x1
	0x03370B30 STR W8, [X19 + 0x8]
	0x03370B34 B 0x3370C44
	0x03370B38 LDR W9, [X19 + 0x4]
	0x03370B3C ADDS W31, W9, 0x1
	0x03370B40 B.NE 0x3370B50
	0x03370B44 LDR W9, [X19 + 0x8]
	0x03370B48 ADDS W31, W9, 0x1
	0x03370B4C B.EQ 0x3370A7C
	0x03370B50 LDR W9, [X19]
	0x03370B54 ADDS W31, W9, 0x1
	0x03370B58 CSET W9, NE
	0x03370B5C ANDS W31, W8, 0x1000
	0x03370B60 CSET W10, EQ
	0x03370B64 TBZ X8, 0x8, 0x3370A7C
	0x03370B68 AND W8, W10, W9, 0x0
	0x03370B6C TBNZ X8, 0x0, 0x3370A7C
	0x03370B70 ADRP X8, 0xDBA000
	0x03370B74 LDR X8, [X8 + 0xC70]
	0x03370B78 MOVZ W1, 0x4
	0x03370B7C MOV X0, X19
	0x03370B80 MOV X3, X31
	0x03370B84 LDR X2, [X8]
	0x03370B88 BL 0x3376818
	0x03370B8C MOV W0, W31
	0x03370B90 B 0x3370C88
	0x03370B94 LDR W8, [X19]
	0x03370B98 ADDS W31, W8, 0x1
	0x03370B9C B.EQ 0x3370BAC
	0x03370BA0 MOVI V0.2S, 0x1
	0x03370BA4 STUR D0, [X19 + 0x4]
	0x03370BA8 B 0x3370C44
	0x03370BAC TBNZ X21, 0x3, 0x3370C10
	0x03370BB0 LDR X0, [X20]
	0x03370BB4 CBZ X0, 0x3370C98
	0x03370BB8 LDR X8, [X0]
	0x03370BBC MOV X1, X22
	0x03370BC0 LDR X9, [X8 + 0x268]
	0x03370BC4 LDR X2, [X8 + 0x270]
	0x03370BC8 BLR X9
	0x03370BCC STR W0, [X19]
	0x03370BD0 LDR X0, [X20]
	0x03370BD4 CBZ X0, 0x3370C98
	0x03370BD8 LDR X8, [X0]
	0x03370BDC MOV X1, X22
	0x03370BE0 LDR X9, [X8 + 0x248]
	0x03370BE4 LDR X2, [X8 + 0x250]
	0x03370BE8 BLR X9
	0x03370BEC STR W0, [X19 + 0x4]
	0x03370BF0 LDR X0, [X20]
	0x03370BF4 CBZ X0, 0x3370C98
	0x03370BF8 LDR X8, [X0]
	0x03370BFC MOV X1, X22
	0x03370C00 LDP X9, X2, [X8 + 0x1E8]
	0x03370C04 BLR X9
	0x03370C08 STR W0, [X19 + 0x8]
	0x03370C0C B 0x3370C44
	0x03370C10 ADRP X8, 0xDB8000
	0x03370C14 LDR X8, [X8 + 0x310]
	0x03370C18 LDR X0, [X8]
	0x03370C1C LDR W8, [X0 + 0xE0]
	0x03370C20 CBNZ W8, 0x3370C28
	0x03370C24 BL 0x1C16DFC
	0x03370C28 MOV X0, X31
	0x03370C2C BL 0x3324660
	0x03370C30 MOVZ W8, 0x1
	0x03370C34 MOVI V0.2S, 0x1
	0x03370C38 STR X0, [X20]
	0x03370C3C STR W8, [X19 + 0x8]
	0x03370C40 STR D0, [X19]
	0x03370C44 LDR W8, [X19 + 0xC]
	0x03370C48 ADDS W31, W8, 0x1
	0x03370C4C B.NE 0x3370C54
	0x03370C50 STR W31, [X19 + 0xC]
	0x03370C54 LDR W8, [X19 + 0x10]
	0x03370C58 ADDS W31, W8, 0x1
	0x03370C5C B.NE 0x3370C64
	0x03370C60 STR W31, [X19 + 0x10]
	0x03370C64 LDR W8, [X19 + 0x14]
	0x03370C68 ADDS W31, W8, 0x1
	0x03370C6C B.NE 0x3370C74
	0x03370C70 STR W31, [X19 + 0x14]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x106D000
	009 Move W8, [X24+3812]
	010 Move X21, X5
	011 Move X19, X4
	012 Move X22, X3
	013 Move X20, X2
	014 Move W23, W0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0xDB9000
	020 Move X0, [X0+1416]
	021 Call 0x1C17CF4
	022 Move X0, 0xDB8000
	023 Move X0, [X0+2352]
	024 Call 0x1C17CF4
	025 Move X0, 0xDBB000
	026 Move X0, [X0+3120]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X24+3812], W8
	030 Subtract W8, W23, 23
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X9, -41783296
	033 Add X9, X9, 1980
	034 NotImplemented "Instruction ADR not yet implemented."
	035 Move W11, [X9]
	036 Add X10, X10, X11
	037 CallNoReturn X10
	038 Move X23, 0xDB9000
	039 Move X23, [X23+1416]
	040 Move X0, [X23]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X20
	046 Move X1, X22
	047 Call DateTimeParse.GetDefaultYear, X0, X1
	048 Compare X21, 0
	049 JumpIfEqual {278}
	050 Add X2, X19, 12
	051 Move W3, 1
	052 Move X0, X21
	053 Move X1, X20
	054 Move X4, X31
	055 Call DateTimeFormatInfo.YearMonthAdjustment, X0, X1, X2, X3
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {262}
	060 Move X22, 0xDB8000
	061 Move X22, [X22+2352]
	062 Move X0, [X22]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Move X24, 0x106D000
	068 Move W8, [X24+2814]
	069 Compare W8, 0
	070 JumpIfNotEqual {76}
	071 Move X0, 0xDB8000
	072 Move X0, [X0+2352]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X24+2814], W8
	076 Move X0, [X22]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {82}
	080 Call 0x1C17DFC
	081 Move X0, [X22]
	082 Move X8, [X0+184]
	083 Move W8, [X8]
	084 Compare W8, 0
	085 JumpIfNotEqual {260}
	086 Move X0, [X23]
	087 Move W8, [X0+224]
	088 Compare W8, 0
	089 JumpIfNotEqual {91}
	090 Call 0x1C17DFC
	091 Move X0, X20
	092 Move X1, X19
	093 Move X2, X21
	094 Call DateTimeParse.GetHebrewDayOfNM, X0, X1, X2
	095 Move TEMP, X0
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfEqual {260}
	099 Move W1, 1
	100 Move X0, X19
	101 Move X2, X31
	102 Call DateTimeRawInfo.GetNumber, X0, X1
	103 Move X1, X19
	104 Move [X1+16], W0
	105 Compare X21, 0
	106 JumpIfEqual {278}
	107 Add X2, X19, 12
	108 Move W3, 1
	109 Move X0, X21
	110 Move X4, X31
	111 Call DateTimeFormatInfo.YearMonthAdjustment, X0, X1, X2, X3
	112 Move TEMP, X0
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfNotEqual {262}
	116 Move X8, 0xDB9000
	117 Move X8, [X8+1416]
	118 Move X0, [X8]
	119 Move W8, [X0+224]
	120 Compare W8, 0
	121 JumpIfNotEqual {123}
	122 Call 0x1C17DFC
	123 Move X0, X20
	124 Move X1, X19
	125 Move X2, X21
	126 Call DateTimeParse.GetDayOfMNN, X0, X1, X2
	127 Move TEMP, X0
	128 And TEMP, TEMP, 1
	129 Compare TEMP, 1
	130 JumpIfEqual {260}
	131 Move X0, X20
	132 Move X1, X31
	133 Call DateTimeResult.SetBadDateTimeFailure, X0
	134 Compare X21, 0
	135 JumpIfEqual {278}
	136 Add X2, X19, 12
	137 Add X1, X19, 16
	138 Move W3, 1
	139 Move X0, X21
	140 Move X4, X31
	141 Call DateTimeFormatInfo.YearMonthAdjustment, X0, X1, X2, X3
	142 Move TEMP, X0
	143 And TEMP, TEMP, 1
	144 Compare TEMP, 1
	145 JumpIfNotEqual {262}
	146 Move X8, 0xDB9000
	147 Move X8, [X8+1416]
	148 Move X0, [X8]
	149 Move W8, [X0+224]
	150 Compare W8, 0
	151 JumpIfNotEqual {153}
	152 Call 0x1C17DFC
	153 Move X0, X20
	154 Move X1, X19
	155 Call DateTimeParse.GetDayOfYMN, X0, X1
	156 Move TEMP, X0
	157 And TEMP, TEMP, 1
	158 Compare TEMP, 1
	159 JumpIfEqual {260}
	160 Compare X21, 0
	161 JumpIfEqual {278}
	162 Add X2, X19, 12
	163 Add X1, X19, 16
	164 Move W3, 1
	165 Move X0, X21
	166 Move X4, X31
	167 Call DateTimeFormatInfo.YearMonthAdjustment, X0, X1, X2, X3
	168 Move TEMP, X0
	169 And TEMP, TEMP, 1
	170 Compare TEMP, 1
	171 JumpIfNotEqual {262}
	172 Move X8, 0xDB9000
	173 Move X8, [X8+1416]
	174 Move X0, [X8]
	175 Move W8, [X0+224]
	176 Compare W8, 0
	177 JumpIfNotEqual {179}
	178 Call 0x1C17DFC
	179 Move X0, X20
	180 Move X1, X19
	181 Call DateTimeParse.GetDayOfYM, X0, X1
	182 Move TEMP, X0
	183 And TEMP, TEMP, 1
	184 Compare TEMP, 1
	185 JumpIfEqual {260}
	186 Move X8, 0xDB9000
	187 Move X8, [X8+1416]
	188 Move X0, [X8]
	189 Move W8, [X0+224]
	190 Compare W8, 0
	191 JumpIfNotEqual {193}
	192 Call 0x1C17DFC
	193 Move X0, X20
	194 Move X1, X19
	195 Call DateTimeParse.GetTimeOfN, X0, X1
	196 Move TEMP, X0
	197 And TEMP, TEMP, 1
	198 Compare TEMP, 1
	199 JumpIfEqual {260}
	200 Move X8, 0xDB9000
	201 Move X8, [X8+1416]
	202 Move X0, [X8]
	203 Move W8, [X0+224]
	204 Compare W8, 0
	205 JumpIfNotEqual {207}
	206 Call 0x1C17DFC
	207 Move X0, X20
	208 Move X1, X19
	209 Call DateTimeParse.GetTimeOfNN, X0, X1
	210 Move TEMP, X0
	211 And TEMP, TEMP, 1
	212 Compare TEMP, 1
	213 JumpIfEqual {260}
	214 Move X8, 0xDB9000
	215 Move X8, [X8+1416]
	216 Move X0, [X8]
	217 Move W8, [X0+224]
	218 Compare W8, 0
	219 JumpIfNotEqual {221}
	220 Call 0x1C17DFC
	221 Move X0, X20
	222 Move X1, X19
	223 Call DateTimeParse.GetTimeOfNNN, X0, X1
	224 Move TEMP, X0
	225 And TEMP, TEMP, 1
	226 Compare TEMP, 1
	227 JumpIfEqual {260}
	228 Move W8, [X19+16]
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Move W9, 0x1388
	231 Add W8, W8, W9
	232 Move [X19+16], W8
	233 Move X8, 0xDB9000
	234 Move X8, [X8+1416]
	235 Move X0, [X8]
	236 Move W8, [X0+224]
	237 Compare W8, 0
	238 JumpIfNotEqual {240}
	239 Call 0x1C17DFC
	240 Move X0, X20
	241 Move X1, X19
	242 Move X2, X21
	243 Call DateTimeParse.GetDayOfNNY, X0, X1, X2
	244 Move TEMP, X0
	245 And TEMP, TEMP, 1
	246 Compare TEMP, 1
	247 JumpIfNotEqual {269}
	248 Compare X21, 0
	249 JumpIfEqual {278}
	250 Add X2, X19, 12
	251 Move W3, 1
	252 Move X0, X21
	253 Move X1, X20
	254 Move X4, X31
	255 Call DateTimeFormatInfo.YearMonthAdjustment, X0, X1, X2, X3
	256 Move TEMP, X0
	257 And TEMP, TEMP, 1
	258 Compare TEMP, 1
	259 JumpIfNotEqual {262}
	260 Move W0, 1
	261 Move [X19+8], W31
	262 Move X8, 0xDBB000
	263 Move X8, [X8+3120]
	264 Move W1, 7
	265 Move X0, X20
	266 Move X3, X31
	267 Move X2, [X8]
	268 Call DateTimeResult.SetFailure, X0, X1, X2
	269 Move W0, W31
	270 Move X20, [X31+48]
	271 Move X19, [X31+56]
	272 Move X22, [X31+32]
	273 Move X21, [X31+40]
	274 Move X24, [X31+16]
	275 Move X23, [X31+24]
	276 Move X30, [X31+64]
	277 Return X0
	278 Call 0x1C17F20

Method: System.Boolean ProcessTerminalState(System.DateTimeParse/DS dps, ref System.__DTString str, ref System.DateTimeResult result, ref System.Globalization.DateTimeStyles styles, ref System.DateTimeRawInfo raw, System.Globalization.DateTimeFormatInfo dtfi)

Disassembly:
	0x0336DF50 MOV W2, W20
	0x0336DF54 MOV W3, W19
	0x0336DF58 LDP X20, X19, [X31 + 0x30]
	0x0336DF5C LDP X22, X21, [X31 + 0x20]
	0x0336DF60 LDP X24, X23, [X31 + 0x10]
	0x0336DF64 LDR X30, [X31], #0x40
	0x0336DF68 B 0x336DD88
	0x0336DF6C STR X30, [X31 - 0x30]!
	0x0336DF70 STP X22, X21, [X31 + 0x10]
	0x0336DF74 STP X20, X19, [X31 + 0x20]
	0x0336DF78 ADRP X22, 0x106F000
	0x0336DF7C ADRP X21, 0xDBB000
	0x0336DF80 LDRB W8, [X22 + 0xED6]
	0x0336DF84 LDR X21, [X21 + 0x588]
	0x0336DF88 MOV X20, X1
	0x0336DF8C MOV X19, X0
	0x0336DF90 TBNZ X8, 0x0, 0x336DFA8
	0x0336DF94 ADRP X0, 0xDBB000
	0x0336DF98 LDR X0, [X0 + 0x588]
	0x0336DF9C BL 0x1C16CF4
	0x0336DFA0 MOVZ W8, 0x1
	0x0336DFA4 STRB W8, [X22 + 0xED6]
	0x0336DFA8 LDR X0, [X21]
	0x0336DFAC LDR X21, [X19 + 0x30]
	0x0336DFB0 LDR W8, [X0 + 0xE0]
	0x0336DFB4 CBNZ W8, 0x336DFBC
	0x0336DFB8 BL 0x1C16DFC
	0x0336DFBC MOV X0, X19
	0x0336DFC0 MOV X1, X20
	0x0336DFC4 BL 0x336E008
	0x0336DFC8 CBZ X21, 0x336E004
	0x0336DFCC LDR X8, [X21]
	0x0336DFD0 MOV X1, X0
	0x0336DFD4 MOV X0, X21
	0x0336DFD8 LDR X9, [X8 + 0x268]
	0x0336DFDC LDR X2, [X8 + 0x270]
	0x0336DFE0 BLR X9
	0x0336DFE4 LDR W8, [X19 + 0x24]
	0x0336DFE8 STR W0, [X19]
	0x0336DFEC LDP X22, X21, [X31 + 0x10]
	0x0336DFF0 ORR W8, W8, 0x1000
	0x0336DFF4 STR W8, [X19 + 0x24]
	0x0336DFF8 LDP X20, X19, [X31 + 0x20]
	0x0336DFFC LDR X30, [X31], #0x30
	0x0336E000 RET
	0x0336E004 BL 0x1C16F20
	0x0336E008 SUB X31, X31, 0x30
	0x0336E00C STP X30, X21, [X31 + 0x10]
	0x0336E010 STP X20, X19, [X31 + 0x20]
	0x0336E014 ADRP X21, 0x106E000
	0x0336E018 LDRB W8, [X21 + 0xEFD]
	0x0336E01C MOV X20, X1
	0x0336E020 MOV X19, X0
	0x0336E024 TBNZ X8, 0x0, 0x336E048
	0x0336E028 ADRP X0, 0xD86000
	0x0336E02C LDR X0, [X0 + 0x9F0]
	0x0336E030 BL 0x1C16CF4
	0x0336E034 ADRP X0, 0xD87000
	0x0336E038 LDR X0, [X0 + 0x570]
	0x0336E03C BL 0x1C16CF4
	0x0336E040 MOVZ W8, 0x1
	0x0336E044 STRB W8, [X21 + 0xEFD]
	0x0336E048 ADRP X8, 0xD86000
	0x0336E04C LDR W9, [X19 + 0x24]
	0x0336E050 LDR X8, [X8 + 0x9F0]
	0x0336E054 TBNZ X9, 0xB, 0x336E074
	0x0336E058 LDR X0, [X8]
	0x0336E05C LDR W8, [X0 + 0xE0]
	0x0336E060 CBNZ W8, 0x336E068
	0x0336E064 BL 0x1C16DFC
	0x0336E068 BL 0x3361584
	0x0336E06C STR X0, [X31 + 0x8]
	0x0336E070 B 0x336E0F4
	0x0336E074 TBNZ X9, 0x8, 0x336E098
	0x0336E078 LDRB W9, [X20]
	0x0336E07C TBZ X9, 0x6, 0x336E058
	0x0336E080 LDR X0, [X8]
	0x0336E084 LDR W8, [X0 + 0xE0]
	0x0336E088 CBNZ W8, 0x336E090
	0x0336E08C BL 0x1C16DFC
	0x0336E090 BL 0x33616A4
	0x0336E094 B 0x336E06C
	0x0336E098 LDR X0, [X8]
	0x0336E09C LDR W8, [X0 + 0xE0]
	0x0336E0A0 CBNZ W8, 0x336E0A8
	0x0336E0A4 BL 0x1C16DFC
	0x0336E0A8 BL 0x33616A4
	0x0336E0AC STR X0, [X31]
	0x0336E0B0 ADD X0, X31, 0x0
	0x0336E0B4 BL 0x3361708
	0x0336E0B8 ADRP X8, 0xD87000
	0x0336E0BC LDR X8, [X8 + 0x570]
	0x0336E0C0 MOV X20, X0
	0x0336E0C4 LDR X8, [X8]
	0x0336E0C8 LDR W9, [X8 + 0xE0]
	0x0336E0CC CBNZ W9, 0x336E0D8
	0x0336E0D0 MOV X0, X8
	0x0336E0D4 BL 0x1C16DFC
	0x0336E0D8 LDR X8, [X19 + 0x28]
	0x0336E0DC ADD X0, X31, 0x8
	0x0336E0E0 MOV W2, W31
	0x0336E0E4 STR X31, [X31 + 0x8]
	0x0336E0E8 ADD X1, X8, X20
	0x0336E0EC BL 0x335EF44
	0x0336E0F0 LDR X0, [X31 + 0x8]
	0x0336E0F4 LDP X20, X19, [X31 + 0x20]
	0x0336E0F8 LDP X30, X21, [X31 + 0x10]
	0x0336E0FC ADD X31, X31, 0x30
	0x0336E100 RET
	0x0336E104 STR X30, [X31 - 0x40]!
	0x0336E108 STP X24, X23, [X31 + 0x10]
	0x0336E10C STP X22, X21, [X31 + 0x20]
	0x0336E110 STP X20, X19, [X31 + 0x30]
	0x0336E114 ADRP X21, 0x106E000
	0x0336E118 LDRB W8, [X21 + 0xED7]
	0x0336E11C MOV X20, X3
	0x0336E120 MOV X22, X2
	0x0336E124 MOV X23, X1
	0x0336E128 MOV X19, X0
	0x0336E12C TBNZ X8, 0x0, 0x336E150
	0x0336E130 ADRP X0, 0xDBA000
	0x0336E134 LDR X0, [X0 + 0x588]
	0x0336E138 BL 0x1C16CF4
	0x0336E13C ADRP X0, 0xDBC000
	0x0336E140 LDR X0, [X0 + 0xC68]
	0x0336E144 BL 0x1C16CF4
	0x0336E148 MOVZ W8, 0x1
	0x0336E14C STRB W8, [X21 + 0xED7]
	0x0336E150 STR W31, [X31 + 0xC]
	0x0336E154 LDRB W8, [X19 + 0x24]
	0x0336E158 TBNZ X8, 0x7, 0x336E250
	0x0336E15C MOV X0, X22
	0x0336E160 MOV W1, W31
	0x0336E164 MOV X2, X31
	0x0336E168 BL 0x3376694
	0x0336E16C MOV W21, W0
	0x0336E170 MOVZ W1, 0x1
	0x0336E174 MOV X0, X22
	0x0336E178 MOV X2, X31
	0x0336E17C BL 0x3376694
	0x0336E180 ADRP X24, 0xDBA000
	0x0336E184 LDR X24, [X24 + 0x588]
	0x0336E188 MOV W22, W0
	0x0336E18C LDR X8, [X24]
	0x0336E190 LDR W9, [X8 + 0xE0]
	0x0336E194 CBNZ W9, 0x336E1A0
	0x0336E198 MOV X0, X8
	0x0336E19C BL 0x1C16DFC
	0x0336E1A0 MOV X0, X19
	0x0336E1A4 MOV X1, X23
	0x0336E1A8 BL 0x336DF6C
	0x0336E1AC CBZ X20, 0x336E274
	0x0336E1B0 MOV X0, X20
	0x0336E1B4 MOV X1, X31
	0x0336E1B8 BL 0x33255DC
	0x0336E1BC ADD X2, X31, 0xC
	0x0336E1C0 BL 0x336DAC8
	0x0336E1C4 TBZ X0, 0x0, 0x336E1FC
	0x0336E1C8 LDR X0, [X24]
	0x0336E1CC LDR W23, [X31 + 0xC]
	0x0336E1D0 LDR W20, [X19]
	0x0336E1D4 LDR W8, [X0 + 0xE0]
	0x0336E1D8 CBNZ W8, 0x336E1E0
	0x0336E1DC BL 0x1C16DFC
	0x0336E1E0 MOV X0, X19
	0x0336E1E4 MOV W1, W20
	0x0336E1E8 CMP W23, 0x6
	0x0336E1EC B.NE 0x336E22C
	0x0336E1F0 MOV W2, W21
	0x0336E1F4 MOV W3, W22
	0x0336E1F8 B 0x336E234
	0x0336E1FC MOV X0, X20
	0x0336E200 MOV X1, X31
	0x0336E204 BL 0x33255DC
	0x0336E208 ADRP X8, 0xDBC000
	0x0336E20C LDR X8, [X8 + 0xC68]
	0x0336E210 MOV X3, X0
	0x0336E214 MOVZ W1, 0x3
	0x0336E218 MOV X0, X19
	0x0336E21C LDR X2, [X8]
	0x0336E220 MOV X4, X31
	0x0336E224 BL 0x3376824
	0x0336E228 B 0x336E25C
	0x0336E22C MOV W2, W22
	0x0336E230 MOV W3, W21
	0x0336E234 BL 0x336DD88
	0x0336E238 TBZ X0, 0x0, 0x336E250
	0x0336E23C LDR W8, [X19 + 0x24]
	0x0336E240 MOVZ W0, 0x1
	0x0336E244 ORR W8, W8, 0x80
	0x0336E248 STR W8, [X19 + 0x24]
	0x0336E24C B 0x336E260
	0x0336E250 MOV X0, X19
	0x0336E254 MOV X1, X31
	0x0336E258 BL 0x33767C8
	0x0336E25C MOV W0, W31
	0x0336E260 LDP X20, X19, [X31 + 0x30]
	0x0336E264 LDP X22, X21, [X31 + 0x20]
	0x0336E268 LDP X24, X23, [X31 + 0x10]
	0x0336E26C LDR X30, [X31], #0x40
	0x0336E270 RET
	0x0336E274 BL 0x1C16F20
	0x0336E278 SUB X31, X31, 0x50
	0x0336E27C STP X30, X25, [X31 + 0x10]
	0x0336E280 STP X24, X23, [X31 + 0x20]
	0x0336E284 STP X22, X21, [X31 + 0x30]
	0x0336E288 STP X20, X19, [X31 + 0x40]
	0x0336E28C ADRP X20, 0x106E000
	0x0336E290 LDRB W8, [X20 + 0xED8]
	0x0336E294 MOV X23, X2
	0x0336E298 MOV X22, X1
	0x0336E29C MOV X19, X0
	0x0336E2A0 TBNZ X8, 0x0, 0x336E2C4
	0x0336E2A4 ADRP X0, 0xDBA000
	0x0336E2A8 LDR X0, [X0 + 0x588]
	0x0336E2AC BL 0x1C16CF4
	0x0336E2B0 ADRP X0, 0xDBC000
	0x0336E2B4 LDR X0, [X0 + 0xC68]
	0x0336E2B8 BL 0x1C16CF4
	0x0336E2BC MOVZ W8, 0x1
	0x0336E2C0 STRB W8, [X20 + 0xED8]
	0x0336E2C4 STR X31, [X31 + 0x8]
	0x0336E2C8 LDRB W8, [X19 + 0x24]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x1070000
	009 Move W8, [X24+3813]
	010 Move X21, X5
	011 Move X19, X4
	012 Move X22, X3
	013 Move X20, X2
	014 Move W23, W0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xDBC000
	020 Move X0, [X0+1416]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X24+3813], W8
	024 Subtract W8, W23, 21
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X9, -41771008
	027 Add X9, X9, 1958
	028 NotImplemented "Instruction ADR not yet implemented."
	029 Move W11, [X9]
	030 Add X10, X10, X11
	031 CallNoReturn X10
	032 Move X8, 0xDBC000
	033 Move X8, [X8+1416]
	034 Move X0, [X8]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, X20
	040 Move X1, X22
	041 Move X2, X19
	042 Move X3, X21
	043 Call DateTimeParse.GetDayOfNN, X0, X1, X2, X3
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {169}
	048 Move X8, 0xDBC000
	049 Move X8, [X8+1416]
	050 Move X0, [X8]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, X20
	056 Move X1, X19
	057 Move X2, X21
	058 Call DateTimeParse.GetDayOfNNN, X0, X1, X2
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {169}
	063 Move X8, 0xDBB000
	064 Move X8, [X8+1416]
	065 Move X0, [X8]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move X0, X20
	071 Move X1, X22
	072 Move X2, X19
	073 Move X3, X21
	074 Call DateTimeParse.GetDayOfMN, X0, X1, X2, X3
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfNotEqual {169}
	079 Move X8, 0xDBB000
	080 Move X8, [X8+1416]
	081 Move X0, [X8]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {86}
	085 Call 0x1C17DFC
	086 Move X0, X20
	087 Move X1, X22
	088 Move X2, X19
	089 Move X3, X21
	090 Call DateTimeParse.GetDayOfNM, X0, X1, X2, X3
	091 Move TEMP, X0
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfNotEqual {169}
	095 Move X8, 0xDBB000
	096 Move X8, [X8+1416]
	097 Move X0, [X8]
	098 Move W8, [X0+224]
	099 Compare W8, 0
	100 JumpIfNotEqual {102}
	101 Call 0x1C17DFC
	102 Move X0, X20
	103 Move X1, X19
	104 Move X2, X21
	105 Call DateTimeParse.GetDayOfMNN, X0, X1, X2
	106 Move TEMP, X0
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfNotEqual {169}
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move X8, 0xDBB000
	112 Move X8, [X8+1416]
	113 Move X0, [X8]
	114 Move W8, [X0+224]
	115 Compare W8, 0
	116 JumpIfNotEqual {118}
	117 Call 0x1C17DFC
	118 Move X0, X20
	119 Move X1, X19
	120 Call DateTimeParse.GetDateOfDSN, X0, X1
	121 Move TEMP, X0
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfNotEqual {169}
	125 Move X8, 0xDBB000
	126 Move X8, [X8+1416]
	127 Move X0, [X8]
	128 Move W8, [X0+224]
	129 Compare W8, 0
	130 JumpIfNotEqual {132}
	131 Call 0x1C17DFC
	132 Move X0, X20
	133 Move X1, X19
	134 Call DateTimeParse.GetDateOfNDS, X0, X1
	135 Move TEMP, X0
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfNotEqual {169}
	139 Move X8, 0xDBB000
	140 Move X8, [X8+1416]
	141 Move X0, [X8]
	142 Move W8, [X0+224]
	143 Compare W8, 0
	144 JumpIfNotEqual {146}
	145 Call 0x1C17DFC
	146 Move X0, X20
	147 Move X1, X19
	148 Move X2, X21
	149 Call DateTimeParse.GetDateOfNNDS, X0, X1, X2
	150 Move TEMP, X0
	151 And TEMP, TEMP, 1
	152 Compare TEMP, 1
	153 JumpIfNotEqual {169}
	154 Move X8, 0xDBB000
	155 Move X8, [X8+1416]
	156 Move X0, [X8]
	157 Move W8, [X0+224]
	158 Compare W8, 0
	159 JumpIfNotEqual {161}
	160 Call 0x1C17DFC
	161 Move X0, X20
	162 Move X1, X19
	163 Move X2, X21
	164 Call DateTimeParse.GetDayOfYNN, X0, X1, X2
	165 Move TEMP, X0
	166 And TEMP, TEMP, 1
	167 Compare TEMP, 1
	168 JumpIfEqual {254}
	169 Move W0, W31
	170 Move X8, 0xDBB000
	171 Move X8, [X8+1416]
	172 Move X0, [X8]
	173 Move W8, [X0+224]
	174 Compare W8, 0
	175 JumpIfNotEqual {177}
	176 Call 0x1C17DFC
	177 Move X0, X20
	178 Move X1, X19
	179 Call DateTimeParse.GetDayOfYMN, X0, X1
	180 Move TEMP, X0
	181 And TEMP, TEMP, 1
	182 Compare TEMP, 1
	183 JumpIfNotEqual {169}
	184 Move X8, 0xDBB000
	185 Move X8, [X8+1416]
	186 Move X0, [X8]
	187 Move W8, [X0+224]
	188 Compare W8, 0
	189 JumpIfNotEqual {191}
	190 Call 0x1C17DFC
	191 Move X0, X20
	192 Move X1, X19
	193 Call DateTimeParse.GetDayOfYN, X0, X1
	194 Move TEMP, X0
	195 And TEMP, TEMP, 1
	196 Compare TEMP, 1
	197 JumpIfNotEqual {169}
	198 Move X8, 0xDBB000
	199 Move X8, [X8+1416]
	200 Move X0, [X8]
	201 Move W8, [X0+224]
	202 Compare W8, 0
	203 JumpIfNotEqual {205}
	204 Call 0x1C17DFC
	205 Move X0, X20
	206 Move X1, X19
	207 Call DateTimeParse.GetDayOfYM, X0, X1
	208 Move TEMP, X0
	209 And TEMP, TEMP, 1
	210 Compare TEMP, 1
	211 JumpIfNotEqual {169}
	212 Move X8, 0xDBB000
	213 Move X8, [X8+1416]
	214 Move X0, [X8]
	215 Move W8, [X0+224]
	216 Compare W8, 0
	217 JumpIfNotEqual {219}
	218 Call 0x1C17DFC
	219 Move X0, X20
	220 Move X1, X19
	221 Call DateTimeParse.GetTimeOfN, X0, X1
	222 Move TEMP, X0
	223 And TEMP, TEMP, 1
	224 Compare TEMP, 1
	225 JumpIfNotEqual {169}
	226 Move X8, 0xDBB000
	227 Move X8, [X8+1416]
	228 Move X0, [X8]
	229 Move W8, [X0+224]
	230 Compare W8, 0
	231 JumpIfNotEqual {233}
	232 Call 0x1C17DFC
	233 Move X0, X20
	234 Move X1, X19
	235 Call DateTimeParse.GetTimeOfNN, X0, X1
	236 Move TEMP, X0
	237 And TEMP, TEMP, 1
	238 Compare TEMP, 1
	239 JumpIfNotEqual {169}
	240 Move X8, 0xDBB000
	241 Move X8, [X8+1416]
	242 Move X0, [X8]
	243 Move W8, [X0+224]
	244 Compare W8, 0
	245 JumpIfNotEqual {247}
	246 Call 0x1C17DFC
	247 Move X0, X20
	248 Move X1, X19
	249 Call DateTimeParse.GetTimeOfNNN, X0, X1
	250 Move TEMP, X0
	251 And TEMP, TEMP, 1
	252 Compare TEMP, 1
	253 JumpIfNotEqual {169}
	254 Move [X19+8], W31
	255 Move W0, 1
	256 Move X20, [X31+48]
	257 Move X19, [X31+56]
	258 Move X22, [X31+32]
	259 Move X21, [X31+40]
	260 Move X24, [X31+16]
	261 Move X23, [X31+24]
	262 Move X30, [X31+64]
	263 Return X0
	264 Move X8, 0xDBB000
	265 Move X8, [X8+1416]
	266 Move X0, [X8]
	267 Move W8, [X0+224]
	268 Compare W8, 0
	269 JumpIfNotEqual {271}
	270 Call 0x1C17DFC
	271 Move X0, X20
	272 Move X1, X19
	273 Move X2, X21
	274 Call DateTimeParse.GetDayOfNNY, X0, X1, X2
	275 Move TEMP, X0
	276 And TEMP, TEMP, 1
	277 Compare TEMP, 1
	278 JumpIfNotEqual {169}

Method: System.DateTime Parse(System.ReadOnlySpan`1<System.Char> s, System.Globalization.DateTimeFormatInfo dtfi, System.Globalization.DateTimeStyles styles)

Disassembly:
	0x033629A4 MOVZ W8, 0x1
	0x033629A8 STRB W8, [X26 + 0x762]
	0x033629AC MOV X0, X23
	0x033629B0 MOV X1, X31
	0x033629B4 BL 0x3225708
	0x033629B8 LDRB W8, [X26 + 0x762]
	0x033629BC LDR W23, [X23 + 0x10]
	0x033629C0 MOV X24, X0
	0x033629C4 CBNZ W8, 0x33629DC
	0x033629C8 ADRP X0, 0xDB8000
	0x033629CC LDR X0, [X0 + 0x290]
	0x033629D0 BL 0x1C16CF4
	0x033629D4 MOVZ W8, 0x1
	0x033629D8 STRB W8, [X26 + 0x762]
	0x033629DC ADRP X26, 0xDC6000
	0x033629E0 LDR X26, [X26 + 0x588]
	0x033629E4 MOV X0, X22
	0x033629E8 MOV X1, X31
	0x033629EC BL 0x3225708
	0x033629F0 LDR X8, [X25]
	0x033629F4 LDR W22, [X22 + 0x10]
	0x033629F8 MOV X25, X0
	0x033629FC LDR W9, [X8 + 0xE0]
	0x03362A00 CBNZ W9, 0x3362A0C
	0x03362A04 MOV X0, X8
	0x03362A08 BL 0x1C16DFC
	0x03362A0C MOV X0, X21
	0x03362A10 MOV X1, X31
	0x03362A14 BL 0x3324CFC
	0x03362A18 LDR X8, [X26]
	0x03362A1C MOV X21, X0
	0x03362A20 LDR W9, [X8 + 0xE0]
	0x03362A24 CBNZ W9, 0x3362A30
	0x03362A28 MOV X0, X8
	0x03362A2C BL 0x1C16DFC
	0x03362A30 MOV X0, X24
	0x03362A34 MOV X1, X23
	0x03362A38 MOV X2, X25
	0x03362A3C MOV X3, X22
	0x03362A40 MOV X4, X21
	0x03362A44 MOV W5, W20
	0x03362A48 MOV X6, X19
	0x03362A4C LDP X20, X19, [X31 + 0x40]
	0x03362A50 LDP X22, X21, [X31 + 0x30]
	0x03362A54 LDP X24, X23, [X31 + 0x20]
	0x03362A58 LDP X26, X25, [X31 + 0x10]
	0x03362A5C LDR X30, [X31], #0x50
	0x03362A60 B 0x3362A84
	0x03362A64 STR X31, [X19]
	0x03362A68 LDP X20, X19, [X31 + 0x40]
	0x03362A6C LDP X22, X21, [X31 + 0x30]
	0x03362A70 LDP X24, X23, [X31 + 0x20]
	0x03362A74 LDP X26, X25, [X31 + 0x10]
	0x03362A78 MOV W0, W31
	0x03362A7C LDR X30, [X31], #0x50
	0x03362A80 RET
	0x03362A84 SUB X31, X31, 0xD0
	0x03362A88 STP X30, X27, [X31 + 0x80]
	0x03362A8C STP X26, X25, [X31 + 0x90]
	0x03362A90 STP X24, X23, [X31 + 0xA0]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+128], X30
	003 Move [X31+144], X24
	004 Move [X31+152], X23
	005 Move [X31+160], X22
	006 Move [X31+168], X21
	007 Move [X31+176], X20
	008 Move [X31+184], X19
	009 Move X24, 0x107B000
	010 Move X23, 0xDC7000
	011 Move W8, [X24+3814]
	012 Move X23, [X23+1416]
	013 Move W19, W3
	014 Move X20, X2
	015 Move X21, X1
	016 Move X22, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0xDC7000
	022 Move X0, [X0+1416]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X24+3814], W8
	026 NotImplemented "Instruction MOVI not yet implemented."
	027 Add X0, X31, 0
	028 Move X1, X22
	029 Move X2, X21
	030 Move X3, X31
	031 Move [X31+96], V0
	032 Move [X31+104], V0
	033 Move [X31+64], V0
	034 Move [X31+72], V0
	035 Move [X31+32], V0
	036 Move [X31+40], V0
	037 Move [X31], V0
	038 Move [X31+8], V0
	039 Call DateTimeResult.Init, X0, X1
	040 Move X0, [X23]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Add X4, X31, 0
	046 Move X0, X22
	047 Move X1, X21
	048 Move X2, X20
	049 Move W3, W19
	050 Call DateTimeParse.TryParse, X0, X1, X2, X3
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {65}
	055 Move X0, [X31+56]
	056 Move X20, [X31+176]
	057 Move X19, [X31+184]
	058 Move X22, [X31+160]
	059 Move X21, [X31+168]
	060 Move X24, [X31+144]
	061 Move X23, [X31+152]
	062 Move X30, [X31+128]
	063 Add X31, X31, 192
	064 Return X0
	065 Move X0, 0xDC7000
	066 Move X0, [X0+1416]
	067 Call 0x1C17D08
	068 Call 0x19913D0
	069 Add X0, X31, 0
	070 Call DateTimeParse.GetDateTimeParseException, X0
	071 Move X19, X0
	072 Move X0, 0xDC9000
	073 Move X0, [X0+2576]
	074 Call 0x1C17D08
	075 Move X1, X0
	076 Move X0, X19
	077 Call 0x1C17DEC

Method: System.DateTime Parse(System.ReadOnlySpan`1<System.Char> s, System.Globalization.DateTimeFormatInfo dtfi, System.Globalization.DateTimeStyles styles, out System.TimeSpan offset)

Disassembly:
	0x03365E64 STP X30, X21, [X31 - 0x20]!
	0x03365E68 STP X20, X19, [X31 + 0x10]
	0x03365E6C ADRP X20, 0x1077000
	0x03365E70 ADRP X21, 0xDC5000
	0x03365E74 LDRB W8, [X20 + 0xE90]
	0x03365E78 LDR X21, [X21 + 0xB38]
	0x03365E7C MOV X19, X0
	0x03365E80 TBNZ X8, 0x0, 0x3365E98
	0x03365E84 ADRP X0, 0xDC5000
	0x03365E88 LDR X0, [X0 + 0xB38]
	0x03365E8C BL 0x1C16CF4
	0x03365E90 MOVZ W8, 0x1
	0x03365E94 STRB W8, [X20 + 0xE90]
	0x03365E98 LDR X1, [X21]
	0x03365E9C MOV X0, X19
	0x03365EA0 MOV X2, X31
	0x03365EA4 BL 0x33BE6D8
	0x03365EA8 MOVZ W8, 0x1524
	0x03365EAC MOVK W8, 0x80130000
	0x03365EB0 STR W8, [X19 + 0x60]
	0x03365EB4 LDP X20, X19, [X31 + 0x10]
	0x03365EB8 LDP X30, X21, [X31], #0x20
	0x03365EBC RET
	0x03365EC0 STP X30, X19, [X31 - 0x10]!
	0x03365EC4 MOV X2, X31
	0x03365EC8 MOV X19, X0
	0x03365ECC BL 0x33BE6D8
	0x03365ED0 MOVZ W8, 0x1524
	0x03365ED4 MOVK W8, 0x80130000
	0x03365ED8 STR W8, [X19 + 0x60]
	0x03365EDC LDP X30, X19, [X31], #0x10
	0x03365EE0 RET
	0x03365EE4 MOV X4, X31
	0x03365EE8 B 0x33BE880
	0x03365EEC FMOV X8, D0
	0x03365EF0 MOVZ X9, 0x7FF00000
	0x03365EF4 BICS X31, X9, X8, 0x0
	0x03365EF8 CSET W0, NE
	0x03365EFC RET
	0x03365F00 FMOV X8, D0
	0x03365F04 AND X8, X8, 0x7FFFFFFF
	0x03365F08 MOVZ X9, 0x7FF00000
	0x03365F0C CMP X8, X9
	0x03365F10 CSET W0, EQ
	0x03365F14 RET
	0x03365F18 FMOV X8, D0
	0x03365F1C AND X8, X8, 0x7FFFFFFF
	0x03365F20 MOVZ X9, 0x7FF00000
	0x03365F24 CMP X8, X9
	0x03365F28 CSET W0, HI
	0x03365F2C RET
	0x03365F30 FMOV X8, D0
	0x03365F34 UBFM X0, X8, 0x3F, 0x3F
	0x03365F38 RET
	0x03365F3C MOVZ X8, 0xFFF00000
	0x03365F40 FMOV D1, X8
	0x03365F44 FCMP D0, D1
	0x03365F48 CSET W0, EQ
	0x03365F4C RET
	0x03365F50 MOVZ X8, 0x7FF00000
	0x03365F54 FMOV D1, X8
	0x03365F58 FCMP D0, D1
	0x03365F5C CSET W0, EQ
	0x03365F60 RET
	0x03365F64 STP X30, X21, [X31 - 0x20]!
	0x03365F68 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+128], X30
	003 Move [X31+136], X25
	004 Move [X31+144], X24
	005 Move [X31+152], X23
	006 Move [X31+160], X22
	007 Move [X31+168], X21
	008 Move [X31+176], X20
	009 Move [X31+184], X19
	010 Move X25, 0x1078000
	011 Move X24, 0xDC4000
	012 Move W8, [X25+3815]
	013 Move X24, [X24+1416]
	014 Move X19, X4
	015 Move W20, W3
	016 Move X21, X2
	017 Move X22, X1
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0xDC4000
	024 Move X0, [X0+1416]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X25+3815], W8
	028 NotImplemented "Instruction MOVI not yet implemented."
	029 Add X0, X31, 0
	030 Move X1, X23
	031 Move X2, X22
	032 Move X3, X31
	033 Move [X31+96], V0
	034 Move [X31+104], V0
	035 Move [X31+64], V0
	036 Move [X31+72], V0
	037 Move [X31+32], V0
	038 Move [X31+40], V0
	039 Move [X31], V0
	040 Move [X31+8], V0
	041 Call DateTimeResult.Init, X0, X1
	042 Move W8, [X31+36]
	043 Move X0, [X24]
	044 Or W8, W8, 2048
	045 Move [X31+36], W8
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Add X4, X31, 0
	051 Move X0, X23
	052 Move X1, X22
	053 Move X2, X21
	054 Move W3, W20
	055 Call DateTimeParse.TryParse, X0, X1, X2, X3
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {73}
	060 Move X8, [X31+40]
	061 Move X22, [X31+160]
	062 Move X21, [X31+168]
	063 Move X24, [X31+144]
	064 Move X23, [X31+152]
	065 Move X30, [X31+128]
	066 Move X25, [X31+136]
	067 Move [X19], X8
	068 Move X0, [X31+56]
	069 Move X20, [X31+176]
	070 Move X19, [X31+184]
	071 Add X31, X31, 192
	072 Return X0
	073 Move X0, 0xDC4000
	074 Move X0, [X0+1416]
	075 Call 0x1C17D08
	076 Call 0x19913D0
	077 Add X0, X31, 0
	078 Call DateTimeParse.GetDateTimeParseException, X0
	079 Move X19, X0
	080 Move X0, 0xDC6000
	081 Move X0, [X0+2832]
	082 Call 0x1C17D08
	083 Move X1, X0
	084 Move X0, X19
	085 Call 0x1C17DEC

Method: System.Boolean TryParse(System.ReadOnlySpan`1<System.Char> s, System.Globalization.DateTimeFormatInfo dtfi, System.Globalization.DateTimeStyles styles, out System.DateTime result)

Disassembly:
	0x033636A0 STP X20, X19, [X31 + 0x10]
	0x033636A4 ADRP X0, 0xDC5000
	0x033636A8 LDR X0, [X0 + 0x30]
	0x033636AC BL 0x1C16D08
	0x033636B0 MOV X19, X0
	0x033636B4 ADRP X0, 0xDC2000
	0x033636B8 LDR X0, [X0 + 0x98]
	0x033636BC BL 0x1C16D08
	0x033636C0 MOV X20, X0
	0x033636C4 ADRP X0, 0xDC2000
	0x033636C8 LDR X0, [X0 + 0xC0]
	0x033636CC BL 0x1C16D08
	0x033636D0 MOV X2, X0
	0x033636D4 MOV X0, X19
	0x033636D8 MOV X1, X20
	0x033636DC MOV X3, X31
	0x033636E0 BL 0x320A264
	0x033636E4 MOV X19, X0
	0x033636E8 ADRP X0, 0xD98000
	0x033636EC LDR X0, [X0 + 0xC08]
	0x033636F0 BL 0x1C16D08
	0x033636F4 BL 0x1C16F10
	0x033636F8 MOV X1, X19
	0x033636FC MOV X2, X31
	0x03363700 MOV X20, X0
	0x03363704 BL 0x337B498
	0x03363708 ADRP X0, 0xDC7000
	0x0336370C LDR X0, [X0 + 0xA78]
	0x03363710 BL 0x1C16D08
	0x03363714 MOV X1, X0
	0x03363718 MOV X0, X20
	0x0336371C BL 0x1C16DEC
	0x03363720 STR X30, [X31 - 0x20]!
	0x03363724 STP X20, X19, [X31 + 0x10]
	0x03363728 ADRP X0, 0xDC5000
	0x0336372C LDR X0, [X0 + 0x30]
	0x03363730 BL 0x1C16D08
	0x03363734 MOV X19, X0
	0x03363738 ADRP X0, 0xDC2000
	0x0336373C LDR X0, [X0 + 0x98]
	0x03363740 BL 0x1C16D08
	0x03363744 MOV X20, X0
	0x03363748 ADRP X0, 0xDC2000
	0x0336374C LDR X0, [X0 + 0xC8]
	0x03363750 BL 0x1C16D08
	0x03363754 MOV X2, X0
	0x03363758 MOV X0, X19
	0x0336375C MOV X1, X20
	0x03363760 MOV X3, X31
	0x03363764 BL 0x320A264
	0x03363768 MOV X19, X0
	0x0336376C ADRP X0, 0xD98000
	0x03363770 LDR X0, [X0 + 0xC08]
	0x03363774 BL 0x1C16D08
	0x03363778 BL 0x1C16F10
	0x0336377C MOV X1, X19
	0x03363780 MOV X2, X31
	0x03363784 MOV X20, X0
	0x03363788 BL 0x337B498
	0x0336378C ADRP X0, 0xDC7000
	0x03363790 LDR X0, [X0 + 0xA80]
	0x03363794 BL 0x1C16D08
	0x03363798 MOV X1, X0
	0x0336379C MOV X0, X20
	0x033637A0 BL 0x1C16DEC
	0x033637A4 STR X30, [X31 - 0x20]!
	0x033637A8 STP X20, X19, [X31 + 0x10]
	0x033637AC ADRP X0, 0xDC5000

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+128], X30
	003 Move [X31+136], X25
	004 Move [X31+144], X24
	005 Move [X31+152], X23
	006 Move [X31+160], X22
	007 Move [X31+168], X21
	008 Move [X31+176], X20
	009 Move [X31+184], X19
	010 Move X25, 0x107A000
	011 Move X24, 0xD92000
	012 Move W8, [X25+3816]
	013 Move X24, [X24+2544]
	014 Move X19, X4
	015 Move W20, W3
	016 Move X21, X2
	017 Move X22, X1
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xDC6000
	024 Move X0, [X0+1416]
	025 Call 0x1C17CF4
	026 Move X0, 0xD92000
	027 Move X0, [X0+2544]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+3816], W8
	031 Move X0, [X24]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+96], V0
	034 Move [X31+104], V0
	035 Move [X31+64], V0
	036 Move [X31+72], V0
	037 Move [X31+32], V0
	038 Move [X31+40], V0
	039 Move [X31], V0
	040 Move [X31+8], V0
	041 Move X25, 0xDC6000
	042 Move W8, [X0+224]
	043 Move X25, [X25+1416]
	044 Compare W8, 0
	045 JumpIfNotEqual {49}
	046 Call 0x1C17DFC
	047 Move X0, [X24]
	048 NotImplemented "Instruction MOVI not yet implemented."
	049 Move X8, [X0+184]
	050 Add X0, X31, 0
	051 Move X1, X23
	052 Move X2, X22
	053 Move X8, [X8+16]
	054 Move X3, X31
	055 Move [X19], X8
	056 Move [X31+96], V0
	057 Move [X31+104], V0
	058 Move [X31+64], V0
	059 Move [X31+72], V0
	060 Move [X31+32], V0
	061 Move [X31+40], V0
	062 Move [X31], V0
	063 Move [X31+8], V0
	064 Call DateTimeResult.Init, X0, X1
	065 Move X0, [X25]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Add X4, X31, 0
	071 Move X0, X23
	072 Move X1, X22
	073 Move X2, X21
	074 Move W3, W20
	075 Call DateTimeParse.TryParse, X0, X1, X2, X3
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {82}
	080 Move X8, [X31+56]
	081 Move [X19], X8
	082 Move X20, [X31+176]
	083 Move X19, [X31+184]
	084 Move X22, [X31+160]
	085 Move X21, [X31+168]
	086 Move X24, [X31+144]
	087 Move X23, [X31+152]
	088 Move X30, [X31+128]
	089 Move X25, [X31+136]
	090 And W0, W0, 1
	091 Add X31, X31, 192
	092 Return X0

Method: System.Boolean TryParse(System.ReadOnlySpan`1<System.Char> s, System.Globalization.DateTimeFormatInfo dtfi, System.Globalization.DateTimeStyles styles, ref System.DateTimeResult result)

Disassembly:
	0x03370C74 LDR W8, [X19 + 0x20]
	0x03370C78 ADDS W31, W8, 0x1
	0x03370C7C B.NE 0x3370C84
	0x03370C80 STR W31, [X19 + 0x20]
	0x03370C84 MOVZ W0, 0x1
	0x03370C88 LDP X20, X19, [X31 + 0x20]
	0x03370C8C LDP X22, X21, [X31 + 0x10]
	0x03370C90 LDR X30, [X31], #0x30
	0x03370C94 RET
	0x03370C98 BL 0x1C16F20
	0x03370C9C STR X30, [X31 - 0x30]!
	0x03370CA0 STP X22, X21, [X31 + 0x10]
	0x03370CA4 STP X20, X19, [X31 + 0x20]
	0x03370CA8 ADRP X22, 0x106C000
	0x03370CAC LDRB W8, [X22 + 0xEEA]
	0x03370CB0 MOV W21, W3
	0x03370CB4 MOV W20, W2
	0x03370CB8 MOV X19, X1
	0x03370CBC TBNZ X8, 0x0, 0x3370D04
	0x03370CC0 ADRP X0, 0xDB8000
	0x03370CC4 LDR X0, [X0 + 0x588]
	0x03370CC8 BL 0x1C16CF4
	0x03370CCC ADRP X0, 0xD84000
	0x03370CD0 LDR X0, [X0 + 0x9F0]
	0x03370CD4 BL 0x1C16CF4
	0x03370CD8 ADRP X0, 0xD85000
	0x03370CDC LDR X0, [X0 + 0x570]
	0x03370CE0 BL 0x1C16CF4
	0x03370CE4 ADRP X0, 0xDB7000
	0x03370CE8 LDR X0, [X0 + 0xA38]
	0x03370CEC BL 0x1C16CF4
	0x03370CF0 ADRP X0, 0xDBA000
	0x03370CF4 LDR X0, [X0 + 0xC78]
	0x03370CF8 BL 0x1C16CF4
	0x03370CFC MOVZ W8, 0x1
	0x03370D00 STRB W8, [X22 + 0xEEA]
	0x03370D04 LDRB W8, [X19 + 0x25]
	0x03370D08 TBNZ X8, 0x3, 0x3370D88
	0x03370D0C ADRP X22, 0xD85000
	0x03370D10 LDR X22, [X22 + 0x570]
	0x03370D14 LDR X0, [X22]
	0x03370D18 LDR W8, [X0 + 0xE0]
	0x03370D1C CBNZ W8, 0x3370D24
	0x03370D20 BL 0x1C16DFC
	0x03370D24 LDR X8, [X19 + 0x28]
	0x03370D28 MOVZ X9, 0xB000
	0x03370D2C MOVK X9, 0x58BD0000
	0x03370D30 MOVK X9, 0x75
	0x03370D34 ADD X8, X8, X9
	0x03370D38 MOVZ X9, 0x6001
	0x03370D3C MOVK X9, 0xB17B0000
	0x03370D40 MOVK X9, 0xEA
	0x03370D44 CMP X8, X9
	0x03370D48 B.CS 0x3370DB8
	0x03370D4C LDR W8, [X19 + 0x24]
	0x03370D50 TBNZ X8, 0x8, 0x3370E5C
	0x03370D54 TBNZ X20, 0x5, 0x3370DEC
	0x03370D58 TBZ X20, 0x6, 0x3370E1C
	0x03370D5C TBNZ X20, 0x4, 0x3370E98
	0x03370D60 ORR W8, W8, 0x100
	0x03370D64 STR W8, [X19 + 0x24]
	0x03370D68 LDR X0, [X22]
	0x03370D6C LDR W8, [X0 + 0xE0]
	0x03370D70 CBNZ W8, 0x3370D7C
	0x03370D74 BL 0x1C16DFC
	0x03370D78 LDR X0, [X22]
	0x03370D7C LDR X8, [X0 + 0xB8]
	0x03370D80 LDR X0, [X8]
	0x03370D84 B 0x3370E58
	0x03370D88 ADRP X8, 0xDB8000
	0x03370D8C LDR X8, [X8 + 0x588]
	0x03370D90 LDR X0, [X8]
	0x03370D94 LDR W8, [X0 + 0xE0]
	0x03370D98 CBNZ W8, 0x3370DA0
	0x03370D9C BL 0x1C16DFC
	0x03370DA0 MOV X1, X19
	0x03370DA4 MOV W2, W20
	0x03370DA8 LDP X20, X19, [X31 + 0x20]
	0x03370DAC LDP X22, X21, [X31 + 0x10]
	0x03370DB0 LDR X30, [X31], #0x30
	0x03370DB4 B 0x3370EE8
	0x03370DB8 ADRP X8, 0xDBA000
	0x03370DBC LDR X8, [X8 + 0xC78]
	0x03370DC0 MOVZ W1, 0x4
	0x03370DC4 MOV X0, X19
	0x03370DC8 MOV X3, X31
	0x03370DCC LDR X2, [X8]
	0x03370DD0 BL 0x3376818
	0x03370DD4 MOV W20, W31
	0x03370DD8 MOV W0, W20
	0x03370DDC LDP X20, X19, [X31 + 0x20]
	0x03370DE0 LDP X22, X21, [X31 + 0x10]
	0x03370DE4 LDR X30, [X31], #0x30
	0x03370DE8 RET
	0x03370DEC TBNZ X20, 0x4, 0x3370E24
	0x03370DF0 ADRP X8, 0xD84000
	0x03370DF4 LDR X8, [X8 + 0x9F0]
	0x03370DF8 LDR X20, [X19 + 0x38]
	0x03370DFC LDR X0, [X8]
	0x03370E00 LDR W8, [X0 + 0xE0]
	0x03370E04 CBNZ W8, 0x3370E0C
	0x03370E08 BL 0x1C16DFC
	0x03370E0C MOVZ W1, 0x2
	0x03370E10 MOV X0, X20
	0x03370E14 BL 0x3360E70
	0x03370E18 STR X0, [X19 + 0x38]
	0x03370E1C MOVZ W20, 0x1
	0x03370E20 B 0x3370DD8
	0x03370E24 ORR W8, W8, 0x100
	0x03370E28 STR W8, [X19 + 0x24]
	0x03370E2C ADRP X8, 0xDB7000
	0x03370E30 LDR X8, [X8 + 0xA38]
	0x03370E34 LDR X22, [X19 + 0x38]
	0x03370E38 LDR X0, [X8]
	0x03370E3C LDR W8, [X0 + 0xE0]
	0x03370E40 CBNZ W8, 0x3370E48
	0x03370E44 BL 0x1C16DFC
	0x03370E48 MOVZ W1, 0x2
	0x03370E4C MOV X0, X22
	0x03370E50 MOV X2, X31
	0x03370E54 BL 0x330D814
	0x03370E58 STR X0, [X19 + 0x28]
	0x03370E5C TBZ X20, 0x7, 0x3370E68
	0x03370E60 LDRB W8, [X19 + 0x25]
	0x03370E64 TBNZ X8, 0x1, 0x3370E98
	0x03370E68 ADRP X8, 0xDB8000
	0x03370E6C LDR X8, [X8 + 0x588]
	0x03370E70 LDR X0, [X8]
	0x03370E74 LDR W8, [X0 + 0xE0]
	0x03370E78 CBZ W8, 0x3370ECC
	0x03370E7C TBNZ X20, 0x4, 0x3370ED4
	0x03370E80 AND W1, W21, 0x1
	0x03370E84 MOV X0, X19
	0x03370E88 LDP X20, X19, [X31 + 0x20]
	0x03370E8C LDP X22, X21, [X31 + 0x10]
	0x03370E90 LDR X30, [X31], #0x30
	0x03370E94 B 0x3371248
	0x03370E98 ADRP X8, 0xD84000
	0x03370E9C LDR X8, [X8 + 0x9F0]
	0x03370EA0 LDR X21, [X19 + 0x38]
	0x03370EA4 LDR X0, [X8]
	0x03370EA8 LDR W8, [X0 + 0xE0]
	0x03370EAC CBNZ W8, 0x3370EB4
	0x03370EB0 BL 0x1C16DFC
	0x03370EB4 MOVZ W1, 0x1
	0x03370EB8 MOV X0, X21
	0x03370EBC MOVZ W20, 0x1
	0x03370EC0 BL 0x3360E70
	0x03370EC4 STR X0, [X19 + 0x38]
	0x03370EC8 B 0x3370DD8
	0x03370ECC BL 0x1C16DFC
	0x03370ED0 TBZ X20, 0x4, 0x3370E80
	0x03370ED4 MOV X0, X19
	0x03370ED8 LDP X20, X19, [X31 + 0x20]
	0x03370EDC LDP X22, X21, [X31 + 0x10]
	0x03370EE0 LDR X30, [X31], #0x30
	0x03370EE4 B 0x3371120
	0x03370EE8 SUB X31, X31, 0x40
	0x03370EEC STP X30, X23, [X31 + 0x10]
	0x03370EF0 STP X22, X21, [X31 + 0x20]
	0x03370EF4 STP X20, X19, [X31 + 0x30]
	0x03370EF8 ADRP X21, 0x106C000
	0x03370EFC LDRB W8, [X21 + 0xEEB]
	0x03370F00 MOV W20, W2
	0x03370F04 MOV X19, X1
	0x03370F08 TBNZ X8, 0x0, 0x3370F5C
	0x03370F0C ADRP X0, 0xDB8000
	0x03370F10 LDR X0, [X0 + 0x588]
	0x03370F14 BL 0x1C16CF4
	0x03370F18 ADRP X0, 0xD84000
	0x03370F1C LDR X0, [X0 + 0x9F0]
	0x03370F20 BL 0x1C16CF4
	0x03370F24 ADRP X0, 0xD85000
	0x03370F28 LDR X0, [X0 + 0x570]
	0x03370F2C BL 0x1C16CF4
	0x03370F30 ADRP X0, 0xDB7000
	0x03370F34 LDR X0, [X0 + 0xA38]
	0x03370F38 BL 0x1C16CF4
	0x03370F3C ADRP X0, 0xDBA000
	0x03370F40 LDR X0, [X0 + 0xC80]
	0x03370F44 BL 0x1C16CF4
	0x03370F48 ADRP X0, 0xDBA000
	0x03370F4C LDR X0, [X0 + 0xC78]
	0x03370F50 BL 0x1C16CF4
	0x03370F54 MOVZ W8, 0x1
	0x03370F58 STRB W8, [X21 + 0xEEB]
	0x03370F5C ADRP X22, 0xD85000
	0x03370F60 LDRB W8, [X19 + 0x25]
	0x03370F64 LDR X22, [X22 + 0x570]
	0x03370F68 TBNZ X8, 0x0, 0x3370FC0
	0x03370F6C TBNZ X20, 0x6, 0x3370FA0
	0x03370F70 ADRP X8, 0xDB7000
	0x03370F74 LDR X8, [X8 + 0xA38]
	0x03370F78 LDR X21, [X19 + 0x38]
	0x03370F7C LDR X0, [X8]
	0x03370F80 LDR W8, [X0 + 0xE0]
	0x03370F84 CBNZ W8, 0x3370F8C
	0x03370F88 BL 0x1C16DFC
	0x03370F8C MOVZ W1, 0x2
	0x03370F90 MOV X0, X21
	0x03370F94 MOV X2, X31
	0x03370F98 BL 0x330D814
	0x03370F9C B 0x3370FBC
	0x03370FA0 LDR X0, [X22]
	0x03370FA4 LDR W8, [X0 + 0xE0]
	0x03370FA8 CBNZ W8, 0x3370FB4
	0x03370FAC BL 0x1C16DFC
	0x03370FB0 LDR X0, [X22]
	0x03370FB4 LDR X8, [X0 + 0xB8]
	0x03370FB8 LDR X0, [X8]
	0x03370FBC STR X0, [X19 + 0x28]
	0x03370FC0 LDR X0, [X22]
	0x03370FC4 ADRP X21, 0xD84000
	0x03370FC8 LDR W8, [X0 + 0xE0]
	0x03370FCC LDR X21, [X21 + 0x9F0]
	0x03370FD0 CBNZ W8, 0x3370FD8
	0x03370FD4 BL 0x1C16DFC
	0x03370FD8 LDR X0, [X21]
	0x03370FDC LDR X23, [X19 + 0x28]
	0x03370FE0 ADD X21, X19, 0x38
	0x03370FE4 LDR W8, [X0 + 0xE0]
	0x03370FE8 CBNZ W8, 0x3370FF0
	0x03370FEC BL 0x1C16DFC
	0x03370FF0 MOV X0, X21
	0x03370FF4 BL 0x3361708
	0x03370FF8 MOVZ X8, 0x4000
	0x03370FFC MOVK X8, 0xF4370000
	0x03371000 MOVK X8, 0x2875
	0x03371004 SUB X1, X0, X23
	0x03371008 MOVK X8, 0x2BCA0000
	0x0337100C CMP X1, X8
	0x03371010 B.CS 0x3371090
	0x03371014 MOVZ X8, 0xB000
	0x03371018 MOVK X8, 0x58BD0000
	0x0337101C MOVZ X9, 0x6001
	0x03371020 MOVK X8, 0x75
	0x03371024 MOVK X9, 0xB17B0000
	0x03371028 ADD X8, X23, X8
	0x0337102C MOVK X9, 0xEA
	0x03371030 CMP X8, X9
	0x03371034 B.CS 0x337109C
	0x03371038 TBZ X20, 0x4, 0x3371088
	0x0337103C LDR W8, [X19 + 0x24]
	0x03371040 AND W9, W20, 0x40
	0x03371044 AND W8, W8, 0x100
	0x03371048 ORR W8, W8, W9, 0x0
	0x0337104C CBZ W8, 0x33710D4
	0x03371050 ADD X0, X31, 0x8
	0x03371054 MOVZ W2, 0x1
	0x03371058 STR X31, [X31 + 0x8]
	0x0337105C BL 0x335EF44
	0x03371060 LDR X8, [X31 + 0x8]
	0x03371064 STR X8, [X21]
	0x03371068 LDR X0, [X22]
	0x0337106C LDR W8, [X0 + 0xE0]
	0x03371070 CBNZ W8, 0x337107C
	0x03371074 BL 0x1C16DFC
	0x03371078 LDR X0, [X22]
	0x0337107C LDR X8, [X0 + 0xB8]
	0x03371080 LDR X8, [X8]
	0x03371084 STR X8, [X19 + 0x28]
	0x03371088 MOVZ W20, 0x1
	0x0337108C B 0x33710BC
	0x03371090 ADRP X8, 0xDB9000
	0x03371094 LDR X8, [X8 + 0xC80]
	0x03371098 B 0x33710A4
	0x0337109C ADRP X8, 0xDB9000
	0x033710A0 LDR X8, [X8 + 0xC78]
	0x033710A4 LDR X2, [X8]
	0x033710A8 MOVZ W1, 0x4
	0x033710AC MOV X0, X19
	0x033710B0 MOV X3, X31
	0x033710B4 BL 0x3376818
	0x033710B8 MOV W20, W31
	0x033710BC AND W0, W20, 0x1
	0x033710C0 LDP X20, X19, [X31 + 0x30]
	0x033710C4 LDP X22, X21, [X31 + 0x20]
	0x033710C8 LDP X30, X23, [X31 + 0x10]
	0x033710CC ADD X31, X31, 0x40
	0x033710D0 RET
	0x033710D4 ADRP X8, 0xDB7000
	0x033710D8 LDR X8, [X8 + 0x588]
	0x033710DC LDR X0, [X8]
	0x033710E0 LDR W8, [X0 + 0xE0]
	0x033710E4 CBNZ W8, 0x33710EC
	0x033710E8 BL 0x1C16DFC
	0x033710EC MOV X0, X19
	0x033710F0 BL 0x3371120
	0x033710F4 LDR X8, [X22]
	0x033710F8 MOV W20, W0
	0x033710FC LDR W9, [X8 + 0xE0]
	0x03371100 CBNZ W9, 0x3371110
	0x03371104 MOV X0, X8
	0x03371108 BL 0x1C16DFC
	0x0337110C LDR X8, [X22]
	0x03371110 LDR X8, [X8 + 0xB8]
	0x03371114 LDR X8, [X8]
	0x03371118 STR X8, [X19 + 0x28]
	0x0337111C B 0x33710BC
	0x03371120 SUB X31, X31, 0x30
	0x03371124 STP X30, X21, [X31 + 0x10]
	0x03371128 STP X20, X19, [X31 + 0x20]
	0x0337112C ADRP X21, 0x106B000
	0x03371130 ADRP X20, 0xD83000
	0x03371134 LDRB W8, [X21 + 0xEEC]
	0x03371138 LDR X20, [X20 + 0x9F0]
	0x0337113C MOV X19, X0
	0x03371140 TBNZ X8, 0x0, 0x3371170
	0x03371144 ADRP X0, 0xD83000
	0x03371148 LDR X0, [X0 + 0x9F0]
	0x0337114C BL 0x1C16CF4
	0x03371150 ADRP X0, 0xD84000
	0x03371154 LDR X0, [X0 + 0x570]
	0x03371158 BL 0x1C16CF4
	0x0337115C ADRP X0, 0xDB9000
	0x03371160 LDR X0, [X0 + 0xC88]
	0x03371164 BL 0x1C16CF4
	0x03371168 MOVZ W8, 0x1
	0x0337116C STRB W8, [X21 + 0xEEC]
	0x03371170 LDR X0, [X20]
	0x03371174 ADRP X21, 0xD84000
	0x03371178 ADD X20, X19, 0x38
	0x0337117C LDR W8, [X0 + 0xE0]
	0x03371180 LDR X21, [X21 + 0x570]
	0x03371184 CBNZ W8, 0x337118C
	0x03371188 BL 0x1C16DFC
	0x0337118C MOV X0, X20
	0x03371190 BL 0x3361708
	0x03371194 LDR X8, [X21]
	0x03371198 MOV X21, X0
	0x0337119C LDR W9, [X8 + 0xE0]
	0x033711A0 CBNZ W9, 0x33711AC
	0x033711A4 MOV X0, X8
	0x033711A8 BL 0x1C16DFC
	0x033711AC LDR X8, [X19 + 0x28]
	0x033711B0 MOVZ X9, 0xC000
	0x033711B4 MOVK X9, 0x2A690000
	0x033711B8 MOVK X9, 0xC9
	0x033711BC SUB X8, X21, X8
	0x033711C0 ADD X9, X8, X9
	0x033711C4 CMP X8, 0x0
	0x033711C8 CSEL X21, X8, X9, GE
	0x033711CC MOVZ X8, 0x4000
	0x033711D0 MOVK X8, 0xF4370000
	0x033711D4 MOVK X8, 0x2875
	0x033711D8 MOVK X8, 0x2BCA0000
	0x033711DC CMP X21, X8
	0x033711E0 B.CS 0x3371204
	0x033711E4 ADD X0, X31, 0x8
	0x033711E8 MOVZ W2, 0x1
	0x033711EC MOV X1, X21
	0x033711F0 STR X31, [X31 + 0x8]
	0x033711F4 BL 0x335EF44
	0x033711F8 LDR X8, [X31 + 0x8]
	0x033711FC STR X8, [X20]
	0x03371200 B 0x3371220
	0x03371204 ADRP X8, 0xDB9000
	0x03371208 LDR X8, [X8 + 0xC88]
	0x0337120C MOVZ W1, 0x4
	0x03371210 MOV X0, X19
	0x03371214 MOV X3, X31
	0x03371218 LDR X2, [X8]
	0x0337121C BL 0x3376818
	0x03371220 MOVZ X8, 0x4000
	0x03371224 MOVK X8, 0xF4370000
	0x03371228 MOVK X8, 0x2875
	0x0337122C MOVK X8, 0x2BCA0000
	0x03371230 CMP X21, X8
	0x03371234 LDP X20, X19, [X31 + 0x20]
	0x03371238 LDP X30, X21, [X31 + 0x10]
	0x0337123C CSET W0, CC
	0x03371240 ADD X31, X31, 0x30
	0x03371244 RET
	0x03371248 SUB X31, X31, 0x70
	0x0337124C STR X30, [X31 + 0x10]
	0x03371250 STP X28, X27, [X31 + 0x20]
	0x03371254 STP X26, X25, [X31 + 0x30]
	0x03371258 STP X24, X23, [X31 + 0x40]
	0x0337125C STP X22, X21, [X31 + 0x50]
	0x03371260 STP X20, X19, [X31 + 0x60]
	0x03371264 ADRP X20, 0x106B000
	0x03371268 ADRP X24, 0xD83000
	0x0337126C LDRB W8, [X20 + 0xEED]
	0x03371270 LDR X24, [X24 + 0x9F0]
	0x03371274 MOV W22, W1
	0x03371278 MOV X19, X0
	0x0337127C TBNZ X8, 0x0, 0x33712B8
	0x03371280 ADRP X0, 0xD83000
	0x03371284 LDR X0, [X0 + 0x9F0]
	0x03371288 BL 0x1C16CF4
	0x0337128C ADRP X0, 0xD84000
	0x03371290 LDR X0, [X0 + 0x570]
	0x03371294 BL 0x1C16CF4
	0x03371298 ADRP X0, 0xDB6000
	0x0337129C LDR X0, [X0 + 0xA38]
	0x033712A0 BL 0x1C16CF4
	0x033712A4 ADRP X0, 0xDB9000
	0x033712A8 LDR X0, [X0 + 0xC88]
	0x033712AC BL 0x1C16CF4
	0x033712B0 MOVZ W8, 0x1
	0x033712B4 STRB W8, [X20 + 0xEED]
	0x033712B8 LDR X0, [X24]
	0x033712BC STR X31, [X31 + 0x8]
	0x033712C0 STRB W31, [X31 + 0x18]
	0x033712C4 ADRP X27, 0xDB6000
	0x033712C8 LDR W8, [X0 + 0xE0]
	0x033712CC LDR X27, [X27 + 0xA38]
	0x033712D0 ADD X20, X19, 0x38
	0x033712D4 CBNZ W8, 0x33712DC
	0x033712D8 BL 0x1C16DFC
	0x033712DC ADRP X26, 0xD84000
	0x033712E0 LDR X26, [X26 + 0x570]
	0x033712E4 MOV X0, X20
	0x033712E8 BL 0x3361708
	0x033712EC LDR X8, [X27]
	0x033712F0 MOV X21, X0
	0x033712F4 LDR W9, [X8 + 0xE0]
	0x033712F8 CBNZ W9, 0x3371304
	0x033712FC MOV X0, X8
	0x03371300 BL 0x1C16DFC
	0x03371304 MOVZ X28, 0xBFFF
	0x03371308 MOVK X28, 0x2A690000
	0x0337130C MOV X0, X31
	0x03371310 MOVK X28, 0xC9
	0x03371314 BL 0x330A840
	0x03371318 LDR X8, [X26]
	0x0337131C STRB W31, [X31 + 0x1C]
	0x03371320 MOV X23, X0
	0x03371324 LDR W9, [X8 + 0xE0]
	0x03371328 CBNZ W9, 0x3371334
	0x0337132C MOV X0, X8
	0x03371330 BL 0x1C16DFC
	0x03371334 LDR X8, [X19 + 0x28]
	0x03371338 MOVZ X25, 0x4000
	0x0337133C MOVK X25, 0xF4370000
	0x03371340 MOVK X25, 0x2875
	0x03371344 MOVK X25, 0x2BCA0000
	0x03371348 CMP X21, X28
	0x0337134C SUB X21, X21, X8
	0x03371350 B.LE 0x33713B8
	0x03371354 CMP X21, X25
	0x03371358 B.CS 0x33713D8
	0x0337135C LDR X0, [X24]
	0x03371360 LDR W8, [X0 + 0xE0]
	0x03371364 CBNZ W8, 0x337136C
	0x03371368 BL 0x1C16DFC
	0x0337136C ADD X0, X31, 0x8
	0x03371370 MOVZ W2, 0x1
	0x03371374 MOV X1, X21
	0x03371378 BL 0x335EF44
	0x0337137C LDR X0, [X27]
	0x03371380 STRB W31, [X31 + 0x18]
	0x03371384 LDR X22, [X31 + 0x8]
	0x03371388 LDR W8, [X0 + 0xE0]
	0x0337138C CBNZ W8, 0x3371394
	0x03371390 BL 0x1C16DFC
	0x03371394 MOV X0, X31
	0x03371398 BL 0x330A840
	0x0337139C MOV X1, X0
	0x033713A0 ADD X2, X31, 0x18
	0x033713A4 ADD X3, X31, 0x1C
	0x033713A8 MOV X0, X22
	0x033713AC MOV X4, X31
	0x033713B0 BL 0x330A8C0
	0x033713B4 B 0x33713F0
	0x033713B8 TBZ X22, 0x0, 0x3371410
	0x033713BC LDR X0, [X24]
	0x033713C0 LDR W8, [X0 + 0xE0]
	0x033713C4 CBNZ W8, 0x33713CC
	0x033713C8 BL 0x1C16DFC
	0x033713CC BL 0x3361584
	0x033713D0 MOV X1, X0
	0x033713D4 B 0x3371414
	0x033713D8 CBZ X23, 0x33714DC
	0x033713DC LDR X1, [X19 + 0x38]
	0x033713E0 MOVZ W2, 0x2
	0x033713E4 MOV X0, X23
	0x033713E8 MOV X3, X31
	0x033713EC BL 0x330D8E8
	0x033713F0 LDR X8, [X26]
	0x033713F4 MOV X22, X0
	0x033713F8 LDR W9, [X8 + 0xE0]
	0x033713FC CBNZ W9, 0x3371408
	0x03371400 MOV X0, X8
	0x03371404 BL 0x1C16DFC
	0x03371408 ADD X21, X22, X21
	0x0337140C B 0x3371450
	0x03371410 LDR X1, [X19 + 0x38]

ISIL:
	001 Move [X31-112], D8
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Add X29, X31, 16
	015 Subtract X31, X31, 160
	016 NotImplemented "Instruction MRS not yet implemented."
	017 Move X8, [X26+40]
	018 Move X20, 0x106D000
	019 Move X19, X4
	020 Move W23, W3
	021 Move [X29-32], X8
	022 Move W8, [X20+3817]
	023 Move X22, X2
	024 Move X24, X1
	025 Move X25, X0
	026 Move [X29-48], X2
	027 Move [X29-52], W3
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {61}
	032 Move X0, 0xDB9000
	033 Move X0, [X0+1416]
	034 Call 0x1C17CF4
	035 Move X0, 0xD85000
	036 Move X0, [X0+2544]
	037 Call 0x1C17CF4
	038 Move X0, 0xDB8000
	039 Move X0, [X0+2352]
	040 Call 0x1C17CF4
	041 Move X0, 0xD84000
	042 Move X0, [X0+1448]
	043 Call 0x1C17CF4
	044 Move X0, 0xDB3000
	045 Move X0, [X0+40]
	046 Call 0x1C17CF4
	047 Move X0, 0xDB9000
	048 Move X0, [X0+1264]
	049 Call 0x1C17CF4
	050 Move X0, 0xDBB000
	051 Move X0, [X0+3072]
	052 Call 0x1C17CF4
	053 Move X0, 0xDBB000
	054 Move X0, [X0+3112]
	055 Call 0x1C17CF4
	056 Move X0, 0xDBB000
	057 Move X0, [X0+3120]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X20+3817], W8
	061 NotImplemented "Instruction MOVI not yet implemented."
	062 Move [X29-64], X31
	063 Move [X29-144], X31
	064 Move [X29-176], V0
	065 Move [X29-168], V0
	066 Compare W24, 0
	067 JumpIfEqual {359}
	068 Move W8, 256
	069 Move [X29-80], X31
	070 Move [X29-76], W8
	071 Move [X29-72], W31
	072 Add X8, X31, 0
	073 Subtract X1, X8, 16
	074 Move [X29-128], V0
	075 Move [X29-120], V0
	076 Move [X29-96], V0
	077 Add X31, X1, 0
	078 Subtract X0, X29, 128
	079 Move X2, X31
	080 Move [X8-8], W31
	081 Move [X8-16], X31
	082 Call DateTimeRawInfo.Init, X0, X1
	083 Compare X22, 0
	084 JumpIfEqual {528}
	085 Move X0, X22
	086 Move X1, X31
	087 Call DateTimeFormatInfo.get_DateSeparator, X0
	088 Move X20, X0
	089 Move X0, X22
	090 Move X1, X31
	091 Call DateTimeFormatInfo.get_TimeSeparator, X0
	092 Compare X20, 0
	093 JumpIfEqual {528}
	094 Move X28, 0xDB9000
	095 Move X28, [X28+1264]
	096 Move X1, X0
	097 Move W2, 4
	098 Move X0, X20
	099 Move X3, X31
	100 Call String.Equals, X0, X1, X2
	101 And W8, W0, 1
	102 NotImplemented "Instruction STURB not yet implemented."
	103 Move X8, [X22+120]
	104 Move X20, X19
	105 Move [X20+48], X8
	106 Move [X20-16], W31
	107 Move X0, [X28]
	108 Move W8, [X0+224]
	109 Compare W8, 0
	110 JumpIfNotEqual {112}
	111 Call 0x1C17DFC
	112 Move X27, 0xDB9000
	113 Move X27, [X27+1416]
	114 Subtract X0, X29, 176
	115 Move X1, X25
	116 Move X2, X24
	117 Move X3, X22
	118 Move X4, X31
	119 Call __DTString..ctor, X0, X1, X2
	120 Subtract X0, X29, 176
	121 Move X1, X31
	122 Call __DTString.GetNext, X0
	123 NotImplemented "Instruction LDUR not yet implemented."
	124 Move W21, W31
	125 Move W22, W31
	126 Move X0, [X27]
	127 Move W24, W23
	128 Move W8, [X0+224]
	129 Compare W8, 0
	130 JumpIfNotEqual {132}
	131 Call 0x1C17DFC
	132 Subtract X1, X29, 176
	133 Subtract X2, X29, 80
	134 Subtract X3, X29, 128
	135 Subtract X5, X29, 48
	136 Move W0, W22
	137 Move X4, X19
	138 Move W6, W24
	139 Call DateTimeParse.Lex, X0, X1, X2, X3, X4, X5, X6
	140 Move TEMP, X0
	141 And TEMP, TEMP, 1
	142 Compare TEMP, 1
	143 JumpIfNotEqual {366}
	144 NotImplemented "Instruction LDUR not yet implemented."
	145 Move W23, W25
	146 NotImplemented "Instruction CMP not yet implemented."
	147 NotImplemented "Instruction LDUR not yet implemented."
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Move X0, [X27]
	150 Move W8, [X0+224]
	151 Compare W8, 0
	152 JumpIfNotEqual {154}
	153 Call 0x1C17DFC
	154 Subtract X1, X29, 128
	155 Subtract X2, X29, 80
	156 Move X0, X19
	157 Call DateTimeParse.ProcessDateTimeSuffix, X0, X1, X2
	158 Move TEMP, X0
	159 And TEMP, TEMP, 1
	160 Compare TEMP, 1
	161 JumpIfNotEqual {465}
	162 NotImplemented "Instruction LDUR not yet implemented."
	163 Move W9, 256
	164 Move [X29-76], W9
	165 NotImplemented "Instruction CMP not yet implemented."
	166 NotImplemented "Instruction LDURB not yet implemented."
	167 Move TEMP, X9
	168 And TEMP, TEMP, 1
	169 Compare TEMP, 1
	170 JumpIfEqual {172}
	171 Move X8, [X27]
	172 Move X0, [X28]
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Move W10, 3
	175 NotImplemented "Instruction CSEL not yet implemented."
	176 And W9, W8, 0xFFFFFFFD
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move W11, [X0+224]
	179 Move W12, 5
	180 NotImplemented "Instruction CSEL not yet implemented."
	181 NotImplemented "Instruction CMP not yet implemented."
	182 NotImplemented "Instruction CCMP not yet implemented."
	183 NotImplemented "Instruction CSEL not yet implemented."
	184 Compare W11, 0
	185 JumpIfNotEqual {187}
	186 Call 0x1C17DFC
	187 Subtract X0, X29, 176
	188 Move X1, X31
	189 Call __DTString.AtEnd, X0
	190 Move X8, [X27]
	191 Move W23, W0
	192 Move W9, [X8+224]
	193 Compare W9, 0
	194 JumpIfNotEqual {198}
	195 Move X0, X8
	196 Call 0x1C17DFC
	197 Move X8, [X27]
	198 Move X9, [X8+184]
	199 Move X9, [X9+8]
	200 Compare X9, 0
	201 JumpIfEqual {528}
	202 Move W10, [X9+24]
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Add X9, X9, W22
	205 Move X10, [X9+32]
	206 Compare X10, 0
	207 JumpIfEqual {528}
	208 NotImplemented "Instruction LDURSW not yet implemented."
	209 Move W11, [X10+24]
	210 NotImplemented "Instruction CMP not yet implemented."
	211 Add X10, X10, X9
	212 Move W10, [X10+32]
	213 NotImplemented "Instruction CMP not yet implemented."
	214 NotImplemented "Instruction CSET not yet implemented."
	215 NotImplemented "Instruction BIC not yet implemented."
	216 Move TEMP, X10
	217 And TEMP, TEMP, 1
	218 Compare TEMP, 1
	219 JumpIfEqual {239}
	220 Subtract W9, W9, 4
	221 NotImplemented "Instruction CMP not yet implemented."
	222 Move X12, -41783296
	223 Add X12, X12, 1996
	224 NotImplemented "Instruction ADR not yet implemented."
	225 Move W11, [X12]
	226 Add X10, X10, X11
	227 CallNoReturn X10
	228 And W31, W23, 1
	229 Move W9, 3
	230 NotImplemented "Instruction CSINC not yet implemented."
	231 And W31, W23, 1
	232 Move W9, 6
	233 NotImplemented "Instruction CINC not yet implemented."
	234 And W31, W23, 1
	235 Move W9, 12
	236 Move W10, 14
	237 NotImplemented "Instruction CSEL not yet implemented."
	238 Move [X29-80], W9
	239 Move W9, [X8+224]
	240 Compare W9, 0
	241 JumpIfNotEqual {245}
	242 Move X0, X8
	243 Call 0x1C17DFC
	244 Move X8, [X27]
	245 Move X8, [X8+184]
	246 Move X8, [X8+8]
	247 Compare X8, 0
	248 JumpIfEqual {528}
	249 Move W9, [X8+24]
	250 NotImplemented "Instruction CMP not yet implemented."
	251 Add X8, X8, W22
	252 Move X8, [X8+32]
	253 Compare X8, 0
	254 JumpIfEqual {528}
	255 NotImplemented "Instruction LDURSW not yet implemented."
	256 Move W10, [X8+24]
	257 NotImplemented "Instruction CMP not yet implemented."
	258 Add X8, X8, X9
	259 Move W22, [X8+32]
	260 NotImplemented "Instruction CMP not yet implemented."
	261 NotImplemented "Instruction CMP not yet implemented."
	262 NotImplemented "Instruction LDUR not yet implemented."
	263 Compare X23, 0
	264 JumpIfEqual {528}
	265 Move X0, X23
	266 Move X1, X31
	267 Call DateTimeFormatInfo.get_FormatFlags, X0
	268 Move X21, 0xDB7000
	269 Move X21, [X21+2352]
	270 Move TEMP, X0
	271 And TEMP, TEMP, 8
	272 Compare TEMP, 8
	273 JumpIfEqual {289}
	274 Move X0, [X27]
	275 Move W8, [X0+224]
	276 Compare W8, 0
	277 JumpIfNotEqual {279}
	278 Call 0x1C17DFC
	279 Subtract X3, X29, 52
	280 Subtract X4, X29, 128
	281 Move W0, W22
	282 Move X2, X19
	283 Move X5, X23
	284 Call DateTimeParse.ProcessTerminalState, X0, X1, X2, X3, X4, X5
	285 Move TEMP, X0
	286 And TEMP, TEMP, 1
	287 Compare TEMP, 1
	288 JumpIfEqual {328}
	289 Move X0, [X21]
	290 Move W8, [X0+224]
	291 Compare W8, 0
	292 JumpIfNotEqual {294}
	293 Call 0x1C17DFC
	294 Move X8, 0x106C000
	295 Move W8, [X8+2814]
	296 Compare W8, 0
	297 JumpIfNotEqual {303}
	298 Move X0, X21
	299 Call 0x1C17CF4
	300 Move W8, 1
	301 Move X9, 0x106C000
	302 Move [X9+2814], W8
	303 Move X0, [X21]
	304 Move W8, [X0+224]
	305 Compare W8, 0
	306 JumpIfNotEqual {309}
	307 Call 0x1C17DFC
	308 Move X0, [X21]
	309 Move X8, [X0+184]
	310 Move W8, [X8]
	311 Compare W8, 0
	312 JumpIfNotEqual {328}
	313 Move X0, [X27]
	314 Move W8, [X0+224]
	315 Compare W8, 0
	316 JumpIfNotEqual {318}
	317 Call 0x1C17DFC
	318 Subtract X3, X29, 52
	319 Subtract X4, X29, 128
	320 Move W0, W22
	321 Move X2, X19
	322 Move X5, X23
	323 Call DateTimeParse.ProcessHebrewTerminalState, X0, X1, X2, X3, X4, X5
	324 Move TEMP, X0
	325 And TEMP, TEMP, 1
	326 Compare TEMP, 1
	327 JumpIfNotEqual {366}
	328 Move W22, W31
	329 Move W21, 1
	330 NotImplemented "Instruction LDUR not yet implemented."
	331 Move W23, W25
	332 NotImplemented "Instruction CMP not yet implemented."
	333 Move W9, 1
	334 NotImplemented "Instruction LSLV not yet implemented."
	335 Move W9, 67
	336 And W31, W8, W9
	337 Move W23, W25
	338 Move TEMP, X21
	339 And TEMP, TEMP, 1
	340 Compare TEMP, 1
	341 JumpIfNotEqual {465}
	342 Move X0, [X27]
	343 NotImplemented "Instruction LDUR not yet implemented."
	344 Move W8, [X0+224]
	345 Compare W8, 0
	346 JumpIfNotEqual {348}
	347 Call 0x1C17DFC
	348 Subtract X1, X29, 128
	349 Move X0, X21
	350 Call DateTimeParse.AdjustTimeMark, X0, X1
	351 NotImplemented "Instruction LDUR not yet implemented."
	352 Add W31, W9, 1
	353 Move W8, [X19+12]
	354 Compare W9, 0
	355 JumpIfEqual {398}
	356 NotImplemented "Instruction CMP not yet implemented."
	357 NotImplemented "Instruction CMP not yet implemented."
	358 Add W8, W8, 12
	359 Move X8, 0xDBA000
	360 Move X8, [X8+3072]
	361 Move W1, 3
	362 Move X2, [X8]
	363 Move X0, X19
	364 Move X3, X31
	365 Call DateTimeResult.SetFailure, X0, X1, X2
	366 Move W0, W31
	367 Move X8, [X26+40]
	368 NotImplemented "Instruction LDUR not yet implemented."
	369 NotImplemented "Instruction CMP not yet implemented."
	370 And W0, W0, 1
	371 Subtract X31, X29, 16
	372 Move X20, [X31+96]
	373 Move X19, [X31+104]
	374 Move X22, [X31+80]
	375 Move X21, [X31+88]
	376 Move X24, [X31+64]
	377 Move X23, [X31+72]
	378 Move X26, [X31+48]
	379 Move X25, [X31+56]
	380 Move X28, [X31+32]
	381 Move X27, [X31+40]
	382 Move X29, [X31+16]
	383 Move X30, [X31+24]
	384 Move V8, [X31+112]
	385 Return X0
	386 And W8, W22, 0xFFFFFFFE
	387 NotImplemented "Instruction CMP not yet implemented."
	388 Move X0, [X27]
	389 Move W8, [X0+224]
	390 Compare W8, 0
	391 JumpIfNotEqual {393}
	392 Call 0x1C17DFC
	393 Subtract X0, X29, 128
	394 Subtract X1, X29, 176
	395 Move W2, W24
	396 Move X3, X19
	397 Call DateTimeParse.ParseISO8601, X0, X1, X2, X3
	398 NotImplemented "Instruction CMP not yet implemented."
	399 NotImplemented "Instruction CSEL not yet implemented."
	400 Move [X19+12], W8
	401 Move W8, [X19]
	402 Add W31, W8, 1
	403 Move W8, [X19+4]
	404 Add W31, W8, 1
	405 Move W21, W31
	406 Move X0, [X27]
	407 NotImplemented "Instruction LDUR not yet implemented."
	408 Move W8, [X0+224]
	409 Compare W8, 0
	410 JumpIfNotEqual {412}
	411 Call 0x1C17DFC
	412 Move X0, X19
	413 Move X1, X20
	414 Move W2, W22
	415 Call DateTimeParse.CheckDefaultDateTime, X0, X1, X2
	416 Move TEMP, X0
	417 And TEMP, TEMP, 1
	418 Compare TEMP, 1
	419 JumpIfNotEqual {366}
	420 Move X0, [X20]
	421 Compare X0, 0
	422 JumpIfEqual {528}
	423 Move X9, [X0]
	424 Move W8, [X19+32]
	425 Move W5, [X19+16]
	426 Move W6, [X19+20]
	427 Move W3, [X19+8]
	428 Move W4, [X19+12]
	429 Move W1, [X19]
	430 Move W2, [X19+4]
	431 Move X10, [X9+680]
	432 Move X9, [X9+688]
	433 Subtract X31, X31, 32
	434 Subtract X11, X29, 64
	435 Move W7, W31
	436 Move [X31+8], X11
	437 Move [X31+16], X9
	438 Move [X31], W8
	439 NotImplemented "Instruction BLR not yet implemented."
	440 Add X31, X31, 32
	441 Move TEMP, X0
	442 And TEMP, TEMP, 1
	443 Compare TEMP, 1
	444 JumpIfNotEqual {468}
	445 NotImplemented "Instruction LDUR not yet implemented."
	446 NotImplemented "Instruction FCMP not yet implemented."
	447 Move X8, 0xD83000
	448 Move X8, [X8+1448]
	449 Move X0, [X8]
	450 Move W8, [X0+224]
	451 Compare W8, 0
	452 JumpIfNotEqual {454}
	453 Call 0x1C17DFC
	454 Move X8, -42479616
	455 Move V0, [X8+2728]
	456 Subtract X0, X29, 40
	457 Multiply D8, D8, D0
	458 Move V0, V8
	459 Call 0x3EB2C00
	460 NotImplemented "Instruction FCMP not yet implemented."
	461 Move D1, -0.5
	462 NotImplemented "Instruction FCMP not yet implemented."
	463 NotImplemented "Instruction LDUR not yet implemented."
	464 Move D1, -1
	465 Move X0, X19
	466 Move X1, X31
	467 Call DateTimeResult.SetBadDateTimeFailure, X0
	468 Move X8, 0xDBA000
	469 Move X8, [X8+3120]
	470 Move W1, 7
	471 Move W8, [X19+8]
	472 Add W31, W8, 1
	473 NotImplemented "Instruction CSET not yet implemented."
	474 Move D1, 0.5
	475 NotImplemented "Instruction FCMP not yet implemented."
	476 NotImplemented "Instruction LDUR not yet implemented."
	477 Move D1, 1
	478 NotImplemented "Instruction FCVTZS not yet implemented."
	479 Add D1, D0, D1
	480 And X31, X8, 1
	481 NotImplemented "Instruction FCSEL not yet implemented."
	482 Add D0, D8, D1
	483 NotImplemented "Instruction FRINTP not yet implemented."
	484 Add D0, D8, D1
	485 NotImplemented "Instruction FRINTM not yet implemented."
	486 Move X8, 0xD84000
	487 Move X8, [X8+2544]
	488 Move X0, [X8]
	489 Move W8, [X0+224]
	490 Compare W8, 0
	491 JumpIfNotEqual {493}
	492 Call 0x1C17DFC
	493 Move X8, 0x7FF00000
	494 Move D0, X8
	495 NotImplemented "Instruction FCVTZS not yet implemented."
	496 NotImplemented "Instruction FCMP not yet implemented."
	497 Move X8, 0x80000000
	498 NotImplemented "Instruction CSEL not yet implemented."
	499 Subtract X0, X29, 64
	500 Call DateTime.AddTicks, X0, X1
	501 Move [X29-64], X0
	502 NotImplemented "Instruction LDUR not yet implemented."
	503 Add W31, W23, 1
	504 Move X0, [X20]
	505 Compare X0, 0
	506 JumpIfEqual {528}
	507 Move X8, [X0]
	508 NotImplemented "Instruction LDUR not yet implemented."
	509 Move X9, [X8+504]
	510 Move X2, [X8+512]
	511 NotImplemented "Instruction BLR not yet implemented."
	512 NotImplemented "Instruction CMP not yet implemented."
	513 NotImplemented "Instruction LDUR not yet implemented."
	514 Move [X19+56], X8
	515 Move X0, [X27]
	516 Move W8, [X0+224]
	517 Compare W8, 0
	518 JumpIfNotEqual {520}
	519 Call 0x1C17DFC
	520 Subtract X0, X29, 176
	521 Move X1, X19
	522 Move W2, W22
	523 Move W3, W21
	524 Call DateTimeParse.DetermineTimeZoneAdjustments, X0, X1, X2, X3
	525 Move X8, 0xDBA000
	526 Move X8, [X8+3112]
	527 Move W1, 4
	528 Call 0x1C17F20
	529 Call 0x1C17F28
	530 Call 0x3EB2B20

Method: System.Boolean DetermineTimeZoneAdjustments(ref System.__DTString str, ref System.DateTimeResult result, System.Globalization.DateTimeStyles styles, System.Boolean bTimeOnly)

Disassembly:
	0x03371C9C MOV W3, W31
	0x03371CA0 MOV X4, X31
	0x03371CA4 STR X31, [X31 + 0x8]
	0x03371CA8 BL 0x3393ED0
	0x03371CAC LDR X8, [X31 + 0x8]
	0x03371CB0 STR X8, [X19]
	0x03371CB4 LDRB W8, [X31 + 0x1C]
	0x03371CB8 CBNZ W8, 0x3371CE4
	0x03371CBC ADRP X8, 0xD84000
	0x03371CC0 LDR X8, [X8 + 0x570]
	0x03371CC4 LDR X0, [X8]
	0x03371CC8 LDR W8, [X0 + 0xE0]
	0x03371CCC CBNZ W8, 0x3371CD4
	0x03371CD0 BL 0x1C16DFC
	0x03371CD4 MOV X0, X19
	0x03371CD8 MOV X1, X31
	0x03371CDC BL 0x33946A4
	0x03371CE0 STR X0, [X19]
	0x03371CE4 MOVZ W0, 0x1
	0x03371CE8 B 0x3371CF0
	0x03371CEC MOV W0, W31
	0x03371CF0 LDP X20, X19, [X31 + 0x40]
	0x03371CF4 LDP X22, X21, [X31 + 0x30]
	0x03371CF8 LDP X30, X23, [X31 + 0x20]
	0x03371CFC ADD X31, X31, 0x50
	0x03371D00 RET
	0x03371D04 STR X30, [X31 - 0x50]!
	0x03371D08 STP X26, X25, [X31 + 0x10]
	0x03371D0C STP X24, X23, [X31 + 0x20]
	0x03371D10 STP X22, X21, [X31 + 0x30]
	0x03371D14 STP X20, X19, [X31 + 0x40]
	0x03371D18 ADRP X22, 0x106B000
	0x03371D1C ADRP X25, 0xDB7000
	0x03371D20 LDRB W8, [X22 + 0xEF5]
	0x03371D24 LDR X25, [X25 + 0x4F0]
	0x03371D28 MOV X20, X2
	0x03371D2C MOV X21, X1
	0x03371D30 MOV X19, X0
	0x03371D34 TBNZ X8, 0x0, 0x3371D4C
	0x03371D38 ADRP X0, 0xDB7000
	0x03371D3C LDR X0, [X0 + 0x4F0]
	0x03371D40 BL 0x1C16CF4
	0x03371D44 MOVZ W8, 0x1
	0x03371D48 STRB W8, [X22 + 0xEF5]
	0x03371D4C MOVN W8, 0x0
	0x03371D50 STR X31, [X31 + 0x8]
	0x03371D54 STR W8, [X20]
	0x03371D58 LDR X0, [X25]
	0x03371D5C LDR W8, [X0 + 0xE0]
	0x03371D60 CBNZ W8, 0x3371D68
	0x03371D64 BL 0x1C16DFC
	0x03371D68 MOV X0, X19
	0x03371D6C MOV X1, X31
	0x03371D70 BL 0x3374A74
	0x03371D74 TBZ X0, 0x0, 0x3371E9C
	0x03371D78 CBZ X21, 0x3371EDC
	0x03371D7C MOVZ W1, 0xD
	0x03371D80 MOV X0, X21
	0x03371D84 MOV X2, X31
	0x03371D88 MOVZ W22, 0xD
	0x03371D8C BL 0x3326A00
	0x03371D90 CBZ X0, 0x3371EDC
	0x03371D94 LDR W8, [X0 + 0x10]
	0x03371D98 CMP W8, 0x0
	0x03371D9C CINC W26, W22, NE
	0x03371DA0 MOVZ W22, 0x1
	0x03371DA4 MOV X0, X21
	0x03371DA8 MOV W1, W22
	0x03371DAC MOV X2, X31
	0x03371DB0 BL 0x3326900
	0x03371DB4 CBZ X0, 0x3371EDC
	0x03371DB8 LDR W8, [X0 + 0x10]
	0x03371DBC MOV X23, X0
	0x03371DC0 MOV X0, X21
	0x03371DC4 MOV X1, X31
	0x03371DC8 STR W8, [X31 + 0x8]
	0x03371DCC BL 0x3325D60
	0x03371DD0 LDR X8, [X25]
	0x03371DD4 MOV W24, W0
	0x03371DD8 LDR W9, [X8 + 0xE0]
	0x03371DDC CBZ W9, 0x3371E04
	0x03371DE0 TBZ X24, 0x0, 0x3371E10
	0x03371DE4 ADD X3, X31, 0x8
	0x03371DE8 MOV X0, X19
	0x03371DEC MOV X1, X23
	0x03371DF0 MOV W2, W31
	0x03371DF4 MOV X4, X31
	0x03371DF8 BL 0x3375320
	0x03371DFC TBNZ X0, 0x0, 0x3371E24
	0x03371E00 B 0x3371E38
	0x03371E04 MOV X0, X8
	0x03371E08 BL 0x1C16DFC
	0x03371E0C TBNZ X24, 0x0, 0x3371DE4
	0x03371E10 MOV X0, X19
	0x03371E14 MOV X1, X23
	0x03371E18 MOV X2, X31
	0x03371E1C BL 0x337454C
	0x03371E20 TBZ X0, 0x0, 0x3371E38
	0x03371E24 LDP W8, W9, [X31 + 0x8]
	0x03371E28 CMP W8, W9
	0x03371E2C B.LE 0x3371E38
	0x03371E30 STR W8, [X31 + 0xC]
	0x03371E34 STR W22, [X20]
	0x03371E38 ADD W22, W22, 0x1
	0x03371E3C CMP W26, W22
	0x03371E40 B.NE 0x3371DA4
	0x03371E44 MOV X0, X21
	0x03371E48 MOV X1, X31
	0x03371E4C BL 0x3325D88
	0x03371E50 TBZ X0, 0x1, 0x3371E9C
	0x03371E54 MOV X0, X21
	0x03371E58 MOV X1, X31
	0x03371E5C BL 0x3325FBC
	0x03371E60 LDR X8, [X25]
	0x03371E64 MOV X21, X0
	0x03371E68 LDR W9, [X8 + 0xE0]
	0x03371E6C CBNZ W9, 0x3371E78
	0x03371E70 MOV X0, X8
	0x03371E74 BL 0x1C16DFC
	0x03371E78 ADD X2, X31, 0xC
	0x03371E7C MOV X0, X19
	0x03371E80 MOV X1, X21
	0x03371E84 MOV X3, X31
	0x03371E88 BL 0x3375990
	0x03371E8C TBNZ X0, 0x1F, 0x3371E9C
	0x03371E90 ADD W8, W0, 0x1
	0x03371E94 STR W8, [X20]
	0x03371E98 B 0x3371EA0
	0x03371E9C LDR W8, [X20]
	0x03371EA0 CMP W8, 0x1
	0x03371EA4 B.LT 0x3371EBC
	0x03371EA8 LDR W9, [X19 + 0x10]
	0x03371EAC LDR W10, [X31 + 0xC]
	0x03371EB0 ADD W9, W9, W10
	0x03371EB4 SUB W9, W9, 0x1
	0x03371EB8 STR W9, [X19 + 0x10]
	0x03371EBC LDP X20, X19, [X31 + 0x40]
	0x03371EC0 LDP X22, X21, [X31 + 0x30]
	0x03371EC4 LDP X24, X23, [X31 + 0x20]
	0x03371EC8 LDP X26, X25, [X31 + 0x10]
	0x03371ECC CMP W8, 0x0
	0x03371ED0 CSET W0, GT
	0x03371ED4 LDR X30, [X31], #0x50
	0x03371ED8 RET
	0x03371EDC BL 0x1C16F20
	0x03371EE0 STR X30, [X31 - 0x50]!
	0x03371EE4 STP X26, X25, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x106C000
	007 Move W8, [X22+3818]
	008 Move W21, W3
	009 Move W20, W2
	010 Move X19, X1
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0xDB8000
	016 Move X0, [X0+1416]
	017 Call 0x1C17CF4
	018 Move X0, 0xD84000
	019 Move X0, [X0+2544]
	020 Call 0x1C17CF4
	021 Move X0, 0xD85000
	022 Move X0, [X0+1392]
	023 Call 0x1C17CF4
	024 Move X0, 0xDB7000
	025 Move X0, [X0+2616]
	026 Call 0x1C17CF4
	027 Move X0, 0xDBA000
	028 Move X0, [X0+3192]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X22+3818], W8
	032 Move W8, [X19+37]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 8
	035 Compare TEMP, 8
	036 JumpIfEqual {80}
	037 Move X22, 0xD85000
	038 Move X22, [X22+1392]
	039 Move X0, [X22]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X8, [X19+40]
	045 Move X9, 0xB000
	046 NotImplemented "Instruction MOVK not yet implemented."
	047 NotImplemented "Instruction MOVK not yet implemented."
	048 Add X8, X8, X9
	049 Move X9, 0x6001
	050 NotImplemented "Instruction MOVK not yet implemented."
	051 NotImplemented "Instruction MOVK not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move W8, [X19+36]
	054 Move TEMP, X8
	055 And TEMP, TEMP, 256
	056 Compare TEMP, 256
	057 JumpIfEqual {141}
	058 Move TEMP, X20
	059 And TEMP, TEMP, 32
	060 Compare TEMP, 32
	061 JumpIfEqual {109}
	062 Move TEMP, X20
	063 And TEMP, TEMP, 64
	064 Compare TEMP, 64
	065 JumpIfNotEqual {125}
	066 Move TEMP, X20
	067 And TEMP, TEMP, 16
	068 Compare TEMP, 16
	069 JumpIfEqual {169}
	070 Or W8, W8, 256
	071 Move [X19+36], W8
	072 Move X0, [X22]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {78}
	076 Call 0x1C17DFC
	077 Move X0, [X22]
	078 Move X8, [X0+184]
	079 Move X0, [X8]
	080 Move X8, 0xDB8000
	081 Move X8, [X8+1416]
	082 Move X0, [X8]
	083 Move W8, [X0+224]
	084 Compare W8, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1C17DFC
	087 Move X1, X19
	088 Move W2, W20
	089 Move X20, [X31+32]
	090 Move X19, [X31+40]
	091 Move X22, [X31+16]
	092 Move X21, [X31+24]
	093 Move X30, [X31+48]
	094 Move X8, 0xDBA000
	095 Move X8, [X8+3192]
	096 Move W1, 4
	097 Move X0, X19
	098 Move X3, X31
	099 Move X2, [X8]
	100 Call DateTimeResult.SetFailure, X0, X1, X2
	101 Move W20, W31
	102 Move W0, W20
	103 Move X20, [X31+32]
	104 Move X19, [X31+40]
	105 Move X22, [X31+16]
	106 Move X21, [X31+24]
	107 Move X30, [X31+48]
	108 Return X0
	109 Move TEMP, X20
	110 And TEMP, TEMP, 16
	111 Compare TEMP, 16
	112 JumpIfEqual {126}
	113 Move X8, 0xD84000
	114 Move X8, [X8+2544]
	115 Move X20, [X19+56]
	116 Move X0, [X8]
	117 Move W8, [X0+224]
	118 Compare W8, 0
	119 JumpIfNotEqual {121}
	120 Call 0x1C17DFC
	121 Move W1, 2
	122 Move X0, X20
	123 Call DateTime.SpecifyKind, X0, X1
	124 Move [X19+56], X0
	125 Move W20, 1
	126 Or W8, W8, 256
	127 Move [X19+36], W8
	128 Move X8, 0xDB7000
	129 Move X8, [X8+2616]
	130 Move X22, [X19+56]
	131 Move X0, [X8]
	132 Move W8, [X0+224]
	133 Compare W8, 0
	134 JumpIfNotEqual {136}
	135 Call 0x1C17DFC
	136 Move W1, 2
	137 Move X0, X22
	138 Move X2, X31
	139 Call TimeZoneInfo.GetLocalUtcOffset, X0, X1
	140 Move [X19+40], X0
	141 Move TEMP, X20
	142 And TEMP, TEMP, 128
	143 Compare TEMP, 128
	144 JumpIfNotEqual {150}
	145 Move W8, [X19+37]
	146 Move TEMP, X8
	147 And TEMP, TEMP, 2
	148 Compare TEMP, 2
	149 JumpIfEqual {169}
	150 Move X8, 0xDB8000
	151 Move X8, [X8+1416]
	152 Move X0, [X8]
	153 Move W8, [X0+224]
	154 Compare W8, 0
	155 JumpIfEqual {182}
	156 Move TEMP, X20
	157 And TEMP, TEMP, 16
	158 Compare TEMP, 16
	159 JumpIfEqual {187}
	160 And W1, W21, 1
	161 Move X0, X19
	162 Move X20, [X31+32]
	163 Move X19, [X31+40]
	164 Move X22, [X31+16]
	165 Move X21, [X31+24]
	166 Move X30, [X31+48]
	167 Call DateTimeParse.AdjustTimeZoneToLocal, X0, X1
	168 Return X0
	169 Move X8, 0xD84000
	170 Move X8, [X8+2544]
	171 Move X21, [X19+56]
	172 Move X0, [X8]
	173 Move W8, [X0+224]
	174 Compare W8, 0
	175 JumpIfNotEqual {177}
	176 Call 0x1C17DFC
	177 Move W1, 1
	178 Move X0, X21
	179 Move W20, 1
	180 Call DateTime.SpecifyKind, X0, X1
	181 Move [X19+56], X0
	182 Call 0x1C17DFC
	183 Move TEMP, X20
	184 And TEMP, TEMP, 16
	185 Compare TEMP, 16
	186 JumpIfNotEqual {160}
	187 Move X0, X19
	188 Move X20, [X31+32]
	189 Move X19, [X31+40]
	190 Move X22, [X31+16]
	191 Move X21, [X31+24]
	192 Move X30, [X31+48]
	193 Call DateTimeParse.AdjustTimeZoneToUniversal, X0
	194 Return X0

Method: System.Boolean DateTimeOffsetTimeZonePostProcessing(ref System.__DTString str, ref System.DateTimeResult result, System.Globalization.DateTimeStyles styles)

Disassembly:
	0x03371EE8 STP X24, X23, [X31 + 0x20]
	0x03371EEC STP X22, X21, [X31 + 0x30]
	0x03371EF0 STP X20, X19, [X31 + 0x40]
	0x03371EF4 ADRP X22, 0x106B000
	0x03371EF8 ADRP X25, 0xDB7000
	0x03371EFC LDRB W8, [X22 + 0xEF6]
	0x03371F00 LDR X25, [X25 + 0x4F0]
	0x03371F04 MOV X20, X2
	0x03371F08 MOV X21, X1
	0x03371F0C MOV X19, X0
	0x03371F10 TBNZ X8, 0x0, 0x3371F28
	0x03371F14 ADRP X0, 0xDB7000
	0x03371F18 LDR X0, [X0 + 0x4F0]
	0x03371F1C BL 0x1C16CF4
	0x03371F20 MOVZ W8, 0x1
	0x03371F24 STRB W8, [X22 + 0xEF6]
	0x03371F28 MOVN W8, 0x0
	0x03371F2C STR X31, [X31 + 0x8]
	0x03371F30 STR W8, [X20]
	0x03371F34 LDR X0, [X25]
	0x03371F38 LDR W8, [X0 + 0xE0]
	0x03371F3C CBNZ W8, 0x3371F44
	0x03371F40 BL 0x1C16DFC
	0x03371F44 MOV X0, X19
	0x03371F48 MOV X1, X31
	0x03371F4C BL 0x3374A74
	0x03371F50 TBZ X0, 0x0, 0x33720CC
	0x03371F54 CBZ X21, 0x337210C
	0x03371F58 MOVZ W1, 0xD
	0x03371F5C MOV X0, X21
	0x03371F60 MOV X2, X31
	0x03371F64 MOVZ W22, 0xD
	0x03371F68 BL 0x3326A00
	0x03371F6C CBZ X0, 0x337210C
	0x03371F70 LDR W8, [X0 + 0x10]
	0x03371F74 CMP W8, 0x0
	0x03371F78 CINC W26, W22, NE
	0x03371F7C MOVZ W22, 0x1
	0x03371F80 MOV X0, X21
	0x03371F84 MOV W1, W22
	0x03371F88 MOV X2, X31
	0x03371F8C BL 0x3326A00
	0x03371F90 CBZ X0, 0x337210C
	0x03371F94 LDR W8, [X0 + 0x10]
	0x03371F98 MOV X23, X0
	0x03371F9C MOV X0, X21
	0x03371FA0 MOV X1, X31
	0x03371FA4 STR W8, [X31 + 0x8]
	0x03371FA8 BL 0x3325D60
	0x03371FAC LDR X8, [X25]
	0x03371FB0 MOV W24, W0
	0x03371FB4 LDR W9, [X8 + 0xE0]
	0x03371FB8 CBZ W9, 0x3371FE0
	0x03371FBC TBZ X24, 0x0, 0x3371FEC
	0x03371FC0 ADD X3, X31, 0x8
	0x03371FC4 MOV X0, X19
	0x03371FC8 MOV X1, X23
	0x03371FCC MOV W2, W31
	0x03371FD0 MOV X4, X31
	0x03371FD4 BL 0x3375320
	0x03371FD8 TBNZ X0, 0x0, 0x3372000
	0x03371FDC B 0x3372014
	0x03371FE0 MOV X0, X8
	0x03371FE4 BL 0x1C16DFC
	0x03371FE8 TBNZ X24, 0x0, 0x3371FC0
	0x03371FEC MOV X0, X19
	0x03371FF0 MOV X1, X23
	0x03371FF4 MOV X2, X31
	0x03371FF8 BL 0x337454C
	0x03371FFC TBZ X0, 0x0, 0x3372014
	0x03372000 LDP W8, W9, [X31 + 0x8]
	0x03372004 CMP W8, W9
	0x03372008 B.LE 0x3372014
	0x0337200C STR W8, [X31 + 0xC]
	0x03372010 STR W22, [X20]
	0x03372014 ADD W22, W22, 0x1
	0x03372018 CMP W26, W22
	0x0337201C B.NE 0x3371F80
	0x03372020 MOV X0, X21
	0x03372024 MOV X1, X31
	0x03372028 BL 0x3325D88
	0x0337202C TBZ X0, 0x0, 0x3372074
	0x03372030 MOV X0, X21
	0x03372034 MOV X1, X31
	0x03372038 BL 0x3326CB0
	0x0337203C LDR X8, [X25]
	0x03372040 MOV X22, X0
	0x03372044 LDR W9, [X8 + 0xE0]
	0x03372048 CBNZ W9, 0x3372054
	0x0337204C MOV X0, X8
	0x03372050 BL 0x1C16DFC
	0x03372054 ADD X2, X31, 0xC
	0x03372058 MOV X0, X19
	0x0337205C MOV X1, X22
	0x03372060 MOV X3, X31
	0x03372064 BL 0x3375990
	0x03372068 TBNZ X0, 0x1F, 0x3372074
	0x0337206C ADD W8, W0, 0x1
	0x03372070 STR W8, [X20]
	0x03372074 MOV X0, X21
	0x03372078 MOV X1, X31
	0x0337207C BL 0x3325D88
	0x03372080 TBZ X0, 0x1, 0x33720CC
	0x03372084 MOV X0, X21
	0x03372088 MOV X1, X31
	0x0337208C BL 0x3325FBC
	0x03372090 LDR X8, [X25]
	0x03372094 MOV X21, X0
	0x03372098 LDR W9, [X8 + 0xE0]
	0x0337209C CBNZ W9, 0x33720A8
	0x033720A0 MOV X0, X8
	0x033720A4 BL 0x1C16DFC
	0x033720A8 ADD X2, X31, 0xC
	0x033720AC MOV X0, X19
	0x033720B0 MOV X1, X21
	0x033720B4 MOV X3, X31
	0x033720B8 BL 0x3375990
	0x033720BC TBNZ X0, 0x1F, 0x33720CC
	0x033720C0 ADD W8, W0, 0x1
	0x033720C4 STR W8, [X20]
	0x033720C8 B 0x33720D0
	0x033720CC LDR W8, [X20]
	0x033720D0 CMP W8, 0x1
	0x033720D4 B.LT 0x33720EC
	0x033720D8 LDR W9, [X19 + 0x10]
	0x033720DC LDR W10, [X31 + 0xC]
	0x033720E0 ADD W9, W9, W10
	0x033720E4 SUB W9, W9, 0x1
	0x033720E8 STR W9, [X19 + 0x10]
	0x033720EC LDP X20, X19, [X31 + 0x40]
	0x033720F0 LDP X22, X21, [X31 + 0x30]
	0x033720F4 LDP X24, X23, [X31 + 0x20]
	0x033720F8 LDP X26, X25, [X31 + 0x10]
	0x033720FC CMP W8, 0x0
	0x03372100 CSET W0, GT
	0x03372104 LDR X30, [X31], #0x50
	0x03372108 RET
	0x0337210C BL 0x1C16F20
	0x03372110 STR X30, [X31 - 0x50]!
	0x03372114 STP X26, X25, [X31 + 0x10]
	0x03372118 STP X24, X23, [X31 + 0x20]
	0x0337211C STP X22, X21, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x106C000
	009 Move W8, [X21+3819]
	010 Move W20, W2
	011 Move X19, X1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {36}
	016 Move X0, 0xDB8000
	017 Move X0, [X0+1416]
	018 Call 0x1C17CF4
	019 Move X0, 0xD84000
	020 Move X0, [X0+2544]
	021 Call 0x1C17CF4
	022 Move X0, 0xD85000
	023 Move X0, [X0+1392]
	024 Call 0x1C17CF4
	025 Move X0, 0xDB7000
	026 Move X0, [X0+2616]
	027 Call 0x1C17CF4
	028 Move X0, 0xDBA000
	029 Move X0, [X0+3200]
	030 Call 0x1C17CF4
	031 Move X0, 0xDBA000
	032 Move X0, [X0+3192]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X21+3819], W8
	036 Move X22, 0xD85000
	037 Move W8, [X19+37]
	038 Move X22, [X22+1392]
	039 Move TEMP, X8
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {68}
	043 Move TEMP, X20
	044 And TEMP, TEMP, 64
	045 Compare TEMP, 64
	046 JumpIfEqual {59}
	047 Move X8, 0xDB7000
	048 Move X8, [X8+2616]
	049 Move X21, [X19+56]
	050 Move X0, [X8]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move W1, 2
	056 Move X0, X21
	057 Move X2, X31
	058 Call TimeZoneInfo.GetLocalUtcOffset, X0, X1
	059 Move X0, [X22]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {65}
	063 Call 0x1C17DFC
	064 Move X0, [X22]
	065 Move X8, [X0+184]
	066 Move X0, [X8]
	067 Move [X19+40], X0
	068 Move X0, [X22]
	069 Move X21, 0xD84000
	070 Move W8, [X0+224]
	071 Move X21, [X21+2544]
	072 Compare W8, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Move X0, [X21]
	076 Move X23, [X19+40]
	077 Add X21, X19, 56
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {82}
	081 Call 0x1C17DFC
	082 Move X0, X21
	083 Call DateTime.get_Ticks, X0
	084 Move X8, 0x4000
	085 NotImplemented "Instruction MOVK not yet implemented."
	086 NotImplemented "Instruction MOVK not yet implemented."
	087 Subtract X1, X0, X23
	088 NotImplemented "Instruction MOVK not yet implemented."
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X8, 0xB000
	091 NotImplemented "Instruction MOVK not yet implemented."
	092 Move X9, 0x6001
	093 NotImplemented "Instruction MOVK not yet implemented."
	094 NotImplemented "Instruction MOVK not yet implemented."
	095 Add X8, X23, X8
	096 NotImplemented "Instruction MOVK not yet implemented."
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move TEMP, X20
	099 And TEMP, TEMP, 16
	100 Compare TEMP, 16
	101 JumpIfNotEqual {123}
	102 Move W8, [X19+36]
	103 And W9, W20, 64
	104 And W8, W8, 256
	105 Or W8, W8, W9
	106 Compare W8, 0
	107 JumpIfEqual {143}
	108 Add X0, X31, 8
	109 Move W2, 1
	110 Move [X31+8], X31
	111 Call DateTime..ctor, X0, X1, X2
	112 Move X8, [X31+8]
	113 Move [X21], X8
	114 Move X0, [X22]
	115 Move W8, [X0+224]
	116 Compare W8, 0
	117 JumpIfNotEqual {120}
	118 Call 0x1C17DFC
	119 Move X0, [X22]
	120 Move X8, [X0+184]
	121 Move X8, [X8]
	122 Move [X19+40], X8
	123 Move W20, 1
	124 Move X8, 0xDB9000
	125 Move X8, [X8+3200]
	126 Move X8, 0xDB9000
	127 Move X8, [X8+3192]
	128 Move X2, [X8]
	129 Move W1, 4
	130 Move X0, X19
	131 Move X3, X31
	132 Call DateTimeResult.SetFailure, X0, X1, X2
	133 Move W20, W31
	134 And W0, W20, 1
	135 Move X20, [X31+48]
	136 Move X19, [X31+56]
	137 Move X22, [X31+32]
	138 Move X21, [X31+40]
	139 Move X30, [X31+16]
	140 Move X23, [X31+24]
	141 Add X31, X31, 64
	142 Return X0
	143 Move X8, 0xDB7000
	144 Move X8, [X8+1416]
	145 Move X0, [X8]
	146 Move W8, [X0+224]
	147 Compare W8, 0
	148 JumpIfNotEqual {150}
	149 Call 0x1C17DFC
	150 Move X0, X19
	151 Call DateTimeParse.AdjustTimeZoneToUniversal, X0
	152 Move X8, [X22]
	153 Move W20, W0
	154 Move W9, [X8+224]
	155 Compare W9, 0
	156 JumpIfNotEqual {160}
	157 Move X0, X8
	158 Call 0x1C17DFC
	159 Move X8, [X22]
	160 Move X8, [X8+184]
	161 Move X8, [X8]
	162 Move [X19+40], X8

Method: System.Boolean AdjustTimeZoneToUniversal(ref System.DateTimeResult result)

Disassembly:
	0x03372120 STP X20, X19, [X31 + 0x40]
	0x03372124 ADRP X22, 0x106A000
	0x03372128 ADRP X25, 0xDB6000
	0x0337212C LDRB W8, [X22 + 0xEF7]
	0x03372130 LDR X25, [X25 + 0x4F0]
	0x03372134 MOV X20, X2
	0x03372138 MOV X21, X1
	0x0337213C MOV X19, X0
	0x03372140 TBNZ X8, 0x0, 0x3372158
	0x03372144 ADRP X0, 0xDB6000
	0x03372148 LDR X0, [X0 + 0x4F0]
	0x0337214C BL 0x1C16CF4
	0x03372150 MOVZ W8, 0x1
	0x03372154 STRB W8, [X22 + 0xEF7]
	0x03372158 MOVN W8, 0x0
	0x0337215C STR W31, [X31 + 0xC]
	0x03372160 STR W8, [X20]
	0x03372164 LDR X0, [X25]
	0x03372168 LDR W8, [X0 + 0xE0]
	0x0337216C CBNZ W8, 0x3372174
	0x03372170 BL 0x1C16DFC
	0x03372174 MOV X0, X19
	0x03372178 MOV X1, X31
	0x0337217C BL 0x3374A74
	0x03372180 TBZ X0, 0x0, 0x3372234
	0x03372184 CBZ X21, 0x3372270
	0x03372188 MOV W26, W31
	0x0337218C MOV W22, W31
	0x03372190 MOV X0, X21
	0x03372194 MOV W1, W22
	0x03372198 MOV X2, X31
	0x0337219C BL 0x3326010
	0x033721A0 CBZ X0, 0x3372270
	0x033721A4 LDR W8, [X0 + 0x10]
	0x033721A8 MOV X23, X0
	0x033721AC MOV X0, X21
	0x033721B0 MOV X1, X31
	0x033721B4 STR W8, [X31 + 0xC]
	0x033721B8 BL 0x3325DA0
	0x033721BC LDR X8, [X25]
	0x033721C0 MOV W24, W0
	0x033721C4 LDR W9, [X8 + 0xE0]
	0x033721C8 CBZ W9, 0x33721F0
	0x033721CC TBZ X24, 0x0, 0x33721FC
	0x033721D0 ADD X3, X31, 0xC
	0x033721D4 MOV X0, X19
	0x033721D8 MOV X1, X23
	0x033721DC MOV W2, W31
	0x033721E0 MOV X4, X31
	0x033721E4 BL 0x3375320
	0x033721E8 TBNZ X0, 0x0, 0x3372210
	0x033721EC B 0x3372224
	0x033721F0 MOV X0, X8
	0x033721F4 BL 0x1C16DFC
	0x033721F8 TBNZ X24, 0x0, 0x33721D0
	0x033721FC MOV X0, X19
	0x03372200 MOV X1, X23
	0x03372204 MOV X2, X31
	0x03372208 BL 0x337454C
	0x0337220C TBZ X0, 0x0, 0x3372224
	0x03372210 LDR W8, [X31 + 0xC]
	0x03372214 CMP W8, W26
	0x03372218 B.LE 0x3372224
	0x0337221C MOV W26, W8
	0x03372220 STR W22, [X20]
	0x03372224 ADD W22, W22, 0x1
	0x03372228 CMP W22, 0x7
	0x0337222C B.NE 0x3372190
	0x03372230 B 0x3372238
	0x03372234 MOV W26, W31
	0x03372238 LDR W8, [X20]
	0x0337223C TBNZ X8, 0x1F, 0x3372250
	0x03372240 LDR W9, [X19 + 0x10]
	0x03372244 ADD W9, W26, W9

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x106B000
	007 Move X20, 0xD83000
	008 Move W8, [X21+3820]
	009 Move X20, [X20+2544]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0xD83000
	016 Move X0, [X0+2544]
	017 Call 0x1C17CF4
	018 Move X0, 0xD84000
	019 Move X0, [X0+1392]
	020 Call 0x1C17CF4
	021 Move X0, 0xDB9000
	022 Move X0, [X0+3208]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+3820], W8
	026 Move X0, [X20]
	027 Move X21, 0xD84000
	028 Add X20, X19, 56
	029 Move W8, [X0+224]
	030 Move X21, [X21+1392]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X20
	035 Call DateTime.get_Ticks, X0
	036 Move X8, [X21]
	037 Move X21, X0
	038 Move W9, [X8+224]
	039 Compare W9, 0
	040 JumpIfNotEqual {43}
	041 Move X0, X8
	042 Call 0x1C17DFC
	043 Move X8, [X19+40]
	044 Move X9, 0xC000
	045 NotImplemented "Instruction MOVK not yet implemented."
	046 NotImplemented "Instruction MOVK not yet implemented."
	047 Subtract X8, X21, X8
	048 Add X9, X8, X9
	049 NotImplemented "Instruction CMP not yet implemented."
	050 NotImplemented "Instruction CSEL not yet implemented."
	051 Move X8, 0x4000
	052 NotImplemented "Instruction MOVK not yet implemented."
	053 NotImplemented "Instruction MOVK not yet implemented."
	054 NotImplemented "Instruction MOVK not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Add X0, X31, 8
	057 Move W2, 1
	058 Move X1, X21
	059 Move [X31+8], X31
	060 Call DateTime..ctor, X0, X1, X2
	061 Move X8, [X31+8]
	062 Move [X20], X8
	063 Move X8, 0xDB9000
	064 Move X8, [X8+3208]
	065 Move W1, 4
	066 Move X0, X19
	067 Move X3, X31
	068 Move X2, [X8]
	069 Call DateTimeResult.SetFailure, X0, X1, X2
	070 Move X8, 0x4000
	071 NotImplemented "Instruction MOVK not yet implemented."
	072 NotImplemented "Instruction MOVK not yet implemented."
	073 NotImplemented "Instruction MOVK not yet implemented."
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X20, [X31+32]
	076 Move X19, [X31+40]
	077 Move X30, [X31+16]
	078 Move X21, [X31+24]
	079 NotImplemented "Instruction CSET not yet implemented."
	080 Add X31, X31, 48
	081 Return X0

Method: System.Boolean AdjustTimeZoneToLocal(ref System.DateTimeResult result, System.Boolean bTimeOnly)

Disassembly:
	0x03372248 SUB W9, W9, 0x1
	0x0337224C STR W9, [X19 + 0x10]
	0x03372250 LDP X20, X19, [X31 + 0x40]
	0x03372254 LDP X22, X21, [X31 + 0x30]
	0x03372258 LDP X24, X23, [X31 + 0x20]
	0x0337225C LDP X26, X25, [X31 + 0x10]
	0x03372260 ORN W8, W31, W8, 0x0
	0x03372264 UBFM W0, W8, 0x1F, 0x1F
	0x03372268 LDR X30, [X31], #0x50
	0x0337226C RET
	0x03372270 BL 0x1C16F20
	0x03372274 STR X30, [X31 - 0x50]!
	0x03372278 STP X26, X25, [X31 + 0x10]
	0x0337227C STP X24, X23, [X31 + 0x20]
	0x03372280 STP X22, X21, [X31 + 0x30]
	0x03372284 STP X20, X19, [X31 + 0x40]
	0x03372288 ADRP X22, 0x106A000
	0x0337228C ADRP X25, 0xDB6000
	0x03372290 LDRB W8, [X22 + 0xEF8]
	0x03372294 LDR X25, [X25 + 0x4F0]
	0x03372298 MOV X20, X2
	0x0337229C MOV X21, X1
	0x033722A0 MOV X19, X0
	0x033722A4 TBNZ X8, 0x0, 0x33722BC
	0x033722A8 ADRP X0, 0xDB6000
	0x033722AC LDR X0, [X0 + 0x4F0]
	0x033722B0 BL 0x1C16CF4
	0x033722B4 MOVZ W8, 0x1
	0x033722B8 STRB W8, [X22 + 0xEF8]
	0x033722BC MOVN W8, 0x0
	0x033722C0 STR W31, [X31 + 0xC]
	0x033722C4 STR W8, [X20]
	0x033722C8 LDR X0, [X25]
	0x033722CC LDR W8, [X0 + 0xE0]
	0x033722D0 CBNZ W8, 0x33722D8
	0x033722D4 BL 0x1C16DFC
	0x033722D8 MOV X0, X19
	0x033722DC MOV X1, X31
	0x033722E0 BL 0x3374A74
	0x033722E4 TBZ X0, 0x0, 0x3372398
	0x033722E8 CBZ X21, 0x33723D4
	0x033722EC MOV W26, W31
	0x033722F0 MOV W22, W31
	0x033722F4 MOV X0, X21
	0x033722F8 MOV W1, W22
	0x033722FC MOV X2, X31
	0x03372300 BL 0x3326804
	0x03372304 CBZ X0, 0x33723D4
	0x03372308 LDR W8, [X0 + 0x10]
	0x0337230C MOV X23, X0
	0x03372310 MOV X0, X21
	0x03372314 MOV X1, X31
	0x03372318 STR W8, [X31 + 0xC]
	0x0337231C BL 0x3325DA0
	0x03372320 LDR X8, [X25]
	0x03372324 MOV W24, W0
	0x03372328 LDR W9, [X8 + 0xE0]
	0x0337232C CBZ W9, 0x3372354
	0x03372330 TBZ X24, 0x0, 0x3372360
	0x03372334 ADD X3, X31, 0xC
	0x03372338 MOV X0, X19
	0x0337233C MOV X1, X23
	0x03372340 MOV W2, W31
	0x03372344 MOV X4, X31
	0x03372348 BL 0x3375320
	0x0337234C TBNZ X0, 0x0, 0x3372374
	0x03372350 B 0x3372388
	0x03372354 MOV X0, X8
	0x03372358 BL 0x1C16DFC
	0x0337235C TBNZ X24, 0x0, 0x3372334
	0x03372360 MOV X0, X19
	0x03372364 MOV X1, X23
	0x03372368 MOV X2, X31
	0x0337236C BL 0x337454C
	0x03372370 TBZ X0, 0x0, 0x3372388
	0x03372374 LDR W8, [X31 + 0xC]
	0x03372378 CMP W8, W26
	0x0337237C B.LE 0x3372388
	0x03372380 MOV W26, W8
	0x03372384 STR W22, [X20]
	0x03372388 ADD W22, W22, 0x1
	0x0337238C CMP W22, 0x7
	0x03372390 B.NE 0x33722F4
	0x03372394 B 0x337239C
	0x03372398 MOV W26, W31
	0x0337239C LDR W8, [X20]
	0x033723A0 TBNZ X8, 0x1F, 0x33723B4
	0x033723A4 LDR W9, [X19 + 0x10]
	0x033723A8 ADD W9, W26, W9
	0x033723AC SUB W9, W9, 0x1
	0x033723B0 STR W9, [X19 + 0x10]
	0x033723B4 LDP X20, X19, [X31 + 0x40]
	0x033723B8 LDP X22, X21, [X31 + 0x30]
	0x033723BC LDP X24, X23, [X31 + 0x20]
	0x033723C0 LDP X26, X25, [X31 + 0x10]
	0x033723C4 ORN W8, W31, W8, 0x0
	0x033723C8 UBFM W0, W8, 0x1F, 0x1F
	0x033723CC LDR X30, [X31], #0x50
	0x033723D0 RET
	0x033723D4 BL 0x1C16F20
	0x033723D8 STR X30, [X31 - 0x50]!
	0x033723DC STP X26, X25, [X31 + 0x10]
	0x033723E0 STP X24, X23, [X31 + 0x20]
	0x033723E4 STP X22, X21, [X31 + 0x30]
	0x033723E8 STP X20, X19, [X31 + 0x40]
	0x033723EC ADRP X22, 0x106A000
	0x033723F0 ADRP X24, 0xDB6000
	0x033723F4 LDRB W8, [X22 + 0xEF9]
	0x033723F8 LDR X24, [X24 + 0x4F0]
	0x033723FC MOV X19, X2
	0x03372400 MOV X21, X1
	0x03372404 MOV X20, X0
	0x03372408 TBNZ X8, 0x0, 0x3372420
	0x0337240C ADRP X0, 0xDB6000
	0x03372410 LDR X0, [X0 + 0x4F0]
	0x03372414 BL 0x1C16CF4
	0x03372418 MOVZ W8, 0x1
	0x0337241C STRB W8, [X22 + 0xEF9]
	0x03372420 LDR X0, [X24]
	0x03372424 LDR W8, [X0 + 0xE0]
	0x03372428 CBNZ W8, 0x3372430
	0x0337242C BL 0x1C16DFC
	0x03372430 MOV X0, X20
	0x03372434 MOV X1, X31
	0x03372438 BL 0x3374A74
	0x0337243C TBZ X0, 0x0, 0x3372518
	0x03372440 CBZ X21, 0x3372570
	0x03372444 LDR X0, [X21 + 0x78]
	0x03372448 CBZ X0, 0x3372570
	0x0337244C LDR X8, [X0]
	0x03372450 LDR X9, [X8 + 0x238]
	0x03372454 LDR X1, [X8 + 0x240]
	0x03372458 BLR X9
	0x0337245C CBZ X0, 0x337251C
	0x03372460 LDR X8, [X0 + 0x18]
	0x03372464 MOV X22, X0
	0x03372468 CMP W8, 0x1
	0x0337246C B.LT 0x3372518
	0x03372470 MOV X25, X31
	0x03372474 AND X8, X8, 0x0
	0x03372478 ADD X26, X22, 0x20
	0x0337247C CMP X25, W8, UXTW
	0x03372480 B.CS 0x337256C
	0x03372484 LDR W1, [X26, X25, LSL #2]
	0x03372488 MOV X0, X21
	0x0337248C MOV X2, X31
	0x03372490 BL 0x33251B0
	0x03372494 LDR X8, [X24]
	0x03372498 MOV X23, X0
	0x0337249C LDR W9, [X8 + 0xE0]
	0x033724A0 CBNZ W9, 0x33724AC
	0x033724A4 MOV X0, X8
	0x033724A8 BL 0x1C16DFC
	0x033724AC MOV X0, X20
	0x033724B0 MOV X1, X23
	0x033724B4 MOV X2, X31
	0x033724B8 BL 0x337454C
	0x033724BC TBNZ X0, 0x0, 0x3372534
	0x033724C0 LDR W8, [X22 + 0x18]
	0x033724C4 CMP X25, X8
	0x033724C8 B.CS 0x337256C
	0x033724CC LDR W1, [X26, X25, LSL #2]
	0x033724D0 MOV X0, X21
	0x033724D4 MOV X2, X31
	0x033724D8 BL 0x33252DC
	0x033724DC LDR X8, [X24]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0x106B000
	014 Move X24, 0xD83000
	015 Move W8, [X20+3821]
	016 Move X24, [X24+2544]
	017 Move W22, W1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0xD83000
	024 Move X0, [X0+2544]
	025 Call 0x1C17CF4
	026 Move X0, 0xD84000
	027 Move X0, [X0+1392]
	028 Call 0x1C17CF4
	029 Move X0, 0xDB6000
	030 Move X0, [X0+2616]
	031 Call 0x1C17CF4
	032 Move X0, 0xDB9000
	033 Move X0, [X0+3208]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X20+3821], W8
	037 Move X0, [X24]
	038 Move [X31+8], X31
	039 Move [X31+24], W31
	040 Move X27, 0xDB6000
	041 Move W8, [X0+224]
	042 Move X27, [X27+2616]
	043 Add X20, X19, 56
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X26, 0xD84000
	048 Move X26, [X26+1392]
	049 Move X0, X20
	050 Call DateTime.get_Ticks, X0
	051 Move X8, [X27]
	052 Move X21, X0
	053 Move W9, [X8+224]
	054 Compare W9, 0
	055 JumpIfNotEqual {58}
	056 Move X0, X8
	057 Call 0x1C17DFC
	058 Move X28, 0xBFFF
	059 NotImplemented "Instruction MOVK not yet implemented."
	060 Move X0, X31
	061 NotImplemented "Instruction MOVK not yet implemented."
	062 Call TimeZoneInfo.get_Local
	063 Move X8, [X26]
	064 Move [X31+28], W31
	065 Move X23, X0
	066 Move W9, [X8+224]
	067 Compare W9, 0
	068 JumpIfNotEqual {71}
	069 Move X0, X8
	070 Call 0x1C17DFC
	071 Move X8, [X19+40]
	072 Move X25, 0x4000
	073 NotImplemented "Instruction MOVK not yet implemented."
	074 NotImplemented "Instruction MOVK not yet implemented."
	075 NotImplemented "Instruction MOVK not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Subtract X21, X21, X8
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move X0, [X24]
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Add X0, X31, 8
	085 Move W2, 1
	086 Move X1, X21
	087 Call DateTime..ctor, X0, X1, X2
	088 Move X0, [X27]
	089 Move [X31+24], W31
	090 Move X22, [X31+8]
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Move X0, X31
	096 Call TimeZoneInfo.get_Local
	097 Move X1, X0
	098 Add X2, X31, 24
	099 Add X3, X31, 28
	100 Move X0, X22
	101 Move X4, X31
	102 Call TimeZoneInfo.GetUtcOffsetFromUtc, X0, X1, X2, X3
	103 Move TEMP, X22
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfNotEqual {129}
	107 Move X0, [X24]
	108 Move W8, [X0+224]
	109 Compare W8, 0
	110 JumpIfNotEqual {112}
	111 Call 0x1C17DFC
	112 Call DateTime.get_Now
	113 Move X1, X0
	114 Compare X23, 0
	115 JumpIfEqual {186}
	116 Move X1, [X19+56]
	117 Move W2, 2
	118 Move X0, X23
	119 Move X3, X31
	120 Call TimeZoneInfo.GetUtcOffset, X0, X1, X2
	121 Move X8, [X26]
	122 Move X22, X0
	123 Move W9, [X8+224]
	124 Compare W9, 0
	125 JumpIfNotEqual {128}
	126 Move X0, X8
	127 Call 0x1C17DFC
	128 Add X21, X22, X21
	129 Move X1, [X19+56]
	130 Compare X23, 0
	131 JumpIfEqual {186}
	132 Move W2, 2
	133 Move X0, X23
	134 Move X3, X31
	135 Call TimeZoneInfo.GetUtcOffset, X0, X1, X2
	136 Move X8, [X26]
	137 Move X22, X0
	138 Move W9, [X8+224]
	139 Compare W9, 0
	140 JumpIfNotEqual {143}
	141 Move X0, X8
	142 Call 0x1C17DFC
	143 Add X8, X22, X21
	144 Add X9, X28, X8
	145 NotImplemented "Instruction CMP not yet implemented."
	146 NotImplemented "Instruction CSINC not yet implemented."
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move W3, [X31+28]
	149 Add X0, X31, 0
	150 Move X1, X21
	151 Move [X31], X31
	152 Call DateTime..ctor, X0, X1, X2, X3
	153 Move X8, [X31]
	154 Move [X20], X8
	155 Move X0, [X24]
	156 Move W8, [X0+224]
	157 Compare W8, 0
	158 JumpIfNotEqual {161}
	159 Call 0x1C17DFC
	160 Move X0, [X24]
	161 Move X8, [X0+184]
	162 Move W1, 4
	163 Move X0, X19
	164 Move X3, X31
	165 Move X8, [X8+16]
	166 Move [X19+56], X8
	167 Move X8, 0xDB9000
	168 Move X8, [X8+3208]
	169 Move X2, [X8]
	170 Call DateTimeResult.SetFailure, X0, X1, X2
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Move X20, [X31+96]
	173 Move X19, [X31+104]
	174 Move X22, [X31+80]
	175 Move X21, [X31+88]
	176 Move X24, [X31+64]
	177 Move X23, [X31+72]
	178 Move X26, [X31+48]
	179 Move X25, [X31+56]
	180 Move X28, [X31+32]
	181 Move X27, [X31+40]
	182 Move X30, [X31+16]
	183 NotImplemented "Instruction CSET not yet implemented."
	184 Add X31, X31, 112
	185 Return X0
	186 Call 0x1C17F20

Method: System.Boolean ParseISO8601(ref System.DateTimeRawInfo raw, ref System.__DTString str, System.Globalization.DateTimeStyles styles, ref System.DateTimeResult result)

Disassembly:
	0x03371414 CBZ X23, 0x33714DC
	0x03371418 MOVZ W2, 0x2
	0x0337141C MOV X0, X23
	0x03371420 MOV X3, X31
	0x03371424 BL 0x330D8E8
	0x03371428 LDR X8, [X26]
	0x0337142C MOV X22, X0
	0x03371430 LDR W9, [X8 + 0xE0]
	0x03371434 CBNZ W9, 0x3371440
	0x03371438 MOV X0, X8
	0x0337143C BL 0x1C16DFC
	0x03371440 ADD X8, X22, X21
	0x03371444 ADD X9, X28, X8
	0x03371448 CMP X8, 0x0
	0x0337144C CSINC X21, X8, X9, GE
	0x03371450 CMP X21, X25
	0x03371454 B.CS 0x3371478
	0x03371458 LDRB W3, [X31 + 0x1C]
	0x0337145C ADD X0, X31, 0x0
	0x03371460 MOV X1, X21
	0x03371464 STR X31, [X31]
	0x03371468 BL 0x335F024
	0x0337146C LDR X8, [X31]
	0x03371470 STR X8, [X20]
	0x03371474 B 0x33714B4
	0x03371478 LDR X0, [X24]
	0x0337147C LDR W8, [X0 + 0xE0]
	0x03371480 CBNZ W8, 0x337148C
	0x03371484 BL 0x1C16DFC
	0x03371488 LDR X0, [X24]
	0x0337148C LDR X8, [X0 + 0xB8]
	0x03371490 MOVZ W1, 0x4
	0x03371494 MOV X0, X19
	0x03371498 MOV X3, X31
	0x0337149C LDR X8, [X8 + 0x10]
	0x033714A0 STR X8, [X19 + 0x38]
	0x033714A4 ADRP X8, 0xDB9000
	0x033714A8 LDR X8, [X8 + 0xC88]
	0x033714AC LDR X2, [X8]
	0x033714B0 BL 0x3376818
	0x033714B4 CMP X21, X25
	0x033714B8 LDP X20, X19, [X31 + 0x60]
	0x033714BC LDP X22, X21, [X31 + 0x50]
	0x033714C0 LDP X24, X23, [X31 + 0x40]
	0x033714C4 LDP X26, X25, [X31 + 0x30]
	0x033714C8 LDP X28, X27, [X31 + 0x20]
	0x033714CC LDR X30, [X31 + 0x10]
	0x033714D0 CSET W0, CC
	0x033714D4 ADD X31, X31, 0x70
	0x033714D8 RET
	0x033714DC BL 0x1C16F20
	0x033714E0 STP X30, X23, [X31 - 0x30]!
	0x033714E4 STP X22, X21, [X31 + 0x10]
	0x033714E8 STP X20, X19, [X31 + 0x20]
	0x033714EC ADRP X22, 0x106B000
	0x033714F0 ADRP X23, 0xDB7000
	0x033714F4 LDRB W8, [X22 + 0xEF0]
	0x033714F8 LDR X23, [X23 + 0x588]
	0x033714FC MOV X19, X2
	0x03371500 MOV W21, W1
	0x03371504 MOV X20, X0
	0x03371508 TBNZ X8, 0x0, 0x3371520
	0x0337150C ADRP X0, 0xDB7000
	0x03371510 LDR X0, [X0 + 0x588]
	0x03371514 BL 0x1C16CF4
	0x03371518 MOVZ W8, 0x1
	0x0337151C STRB W8, [X22 + 0xEF0]
	0x03371520 LDR X0, [X23]
	0x03371524 LDR W8, [X0 + 0xE0]
	0x03371528 CBNZ W8, 0x3371530
	0x0337152C BL 0x1C16DFC
	0x03371530 CMP W21, 0x1
	0x03371534 B.NE 0x3371548
	0x03371538 MOVZ W1, 0x1
	0x0337153C MOVZ W2, 0x2
	0x03371540 MOV X0, X20
	0x03371544 B 0x3371554
	0x03371548 MOV X0, X20
	0x0337154C MOV W1, W21
	0x03371550 MOV W2, W21
	0x03371554 MOV X3, X19
	0x03371558 LDP X20, X19, [X31 + 0x20]
	0x0337155C LDP X22, X21, [X31 + 0x10]
	0x03371560 LDP X30, X23, [X31], #0x30
	0x03371564 B 0x3371678
	0x03371568 SUB X31, X31, 0x40
	0x0337156C STP X30, X23, [X31 + 0x10]
	0x03371570 STP X22, X21, [X31 + 0x20]
	0x03371574 STP X20, X19, [X31 + 0x30]
	0x03371578 ADRP X21, 0x106B000
	0x0337157C LDRB W8, [X21 + 0xEEF]
	0x03371580 MOV X19, X2
	0x03371584 MOV X20, X0
	0x03371588 TBNZ X8, 0x0, 0x33715AC
	0x0337158C ADRP X0, 0xDB7000
	0x03371590 LDR X0, [X0 + 0x4E8]
	0x03371594 BL 0x1C16CF4
	0x03371598 ADRP X0, 0xDB7000
	0x0337159C LDR X0, [X0 + 0x4F0]
	0x033715A0 BL 0x1C16CF4
	0x033715A4 MOVZ W8, 0x1
	0x033715A8 STRB W8, [X21 + 0xEEF]
	0x033715AC ADRP X22, 0xDB7000
	0x033715B0 ADRP X23, 0xDB7000
	0x033715B4 LDR X22, [X22 + 0x4F0]
	0x033715B8 LDR X23, [X23 + 0x4E8]
	0x033715BC ADD X0, X31, 0x8
	0x033715C0 MOV W1, W31
	0x033715C4 MOV X2, X31
	0x033715C8 STR X31, [X31 + 0x8]
	0x033715CC STR W31, [X19]
	0x033715D0 BL 0x33292CC
	0x033715D4 MOVZ W0, 0x3
	0x033715D8 CMP W0, 0x3
	0x033715DC B.NE 0x3371648
	0x033715E0 LDR X0, [X22]
	0x033715E4 LDR W8, [X0 + 0xE0]
	0x033715E8 CBNZ W8, 0x33715F0
	0x033715EC BL 0x1C16DFC
	0x033715F0 MOV X0, X20
	0x033715F4 MOV X1, X31
	0x033715F8 BL 0x3374A74
	0x033715FC TBZ X0, 0x0, 0x3371660
	0x03371600 LDR X0, [X22]
	0x03371604 LDR W8, [X0 + 0xE0]
	0x03371608 CBNZ W8, 0x3371610
	0x0337160C BL 0x1C16DFC
	0x03371610 MOV X0, X20
	0x03371614 MOV X1, X31
	0x03371618 BL 0x3375C40
	0x0337161C LDR X8, [X23]
	0x03371620 MOV W21, W0
	0x03371624 LDR W9, [X8 + 0xE0]
	0x03371628 CBNZ W9, 0x3371634
	0x0337162C MOV X0, X8
	0x03371630 BL 0x1C16DFC
	0x03371634 ADD X1, X31, 0x8
	0x03371638 MOV W0, W21
	0x0337163C MOV X2, X31
	0x03371640 BL 0x33292D8
	0x03371644 B 0x33715D8
	0x03371648 CMP W0, 0x2
	0x0337164C B.NE 0x3371660
	0x03371650 LDR W8, [X31 + 0xC]
	0x03371654 MOVZ W0, 0x1
	0x03371658 STR W8, [X19]
	0x0337165C B 0x3371664
	0x03371660 MOV W0, W31
	0x03371664 LDP X20, X19, [X31 + 0x30]
	0x03371668 LDP X22, X21, [X31 + 0x20]
	0x0337166C LDP X30, X23, [X31 + 0x10]
	0x03371670 ADD X31, X31, 0x40
	0x03371674 RET
	0x03371678 SUB X31, X31, 0x70
	0x0337167C STP X29, X30, [X31 + 0x10]
	0x03371680 STP X28, X27, [X31 + 0x20]
	0x03371684 STP X26, X25, [X31 + 0x30]
	0x03371688 STP X24, X23, [X31 + 0x40]
	0x0337168C STP X22, X21, [X31 + 0x50]
	0x03371690 STP X20, X19, [X31 + 0x60]
	0x03371694 ADRP X20, 0x106B000
	0x03371698 LDRB W8, [X20 + 0xEF1]
	0x0337169C MOV X23, X3
	0x033716A0 MOV W22, W2
	0x033716A4 MOV W19, W1
	0x033716A8 MOV X21, X0
	0x033716AC TBNZ X8, 0x0, 0x33716C4
	0x033716B0 ADRP X0, 0xDB7000
	0x033716B4 LDR X0, [X0 + 0x4F0]
	0x033716B8 BL 0x1C16CF4
	0x033716BC MOVZ W8, 0x1
	0x033716C0 STRB W8, [X20 + 0xEF1]
	0x033716C4 LDR W8, [X21 + 0x10]
	0x033716C8 CMP W22, 0x1
	0x033716CC B.LT 0x33717D8
	0x033716D0 STR W8, [X31 + 0x4]
	0x033716D4 STR X23, [X31 + 0x8]
	0x033716D8 ADRP X23, 0xDB7000
	0x033716DC ADRP X24, 0xDB7000
	0x033716E0 LDR X23, [X23 + 0x4F0]
	0x033716E4 LDR X24, [X24 + 0x588]
	0x033716E8 MOV W27, W31
	0x033716EC MOV W26, W31
	0x033716F0 ADRP X28, 0x106B000
	0x033716F4 MOVZ W29, 0x1
	0x033716F8 MOVZ W25, 0xA
	0x033716FC LDR X0, [X23]
	0x03371700 LDR W8, [X0 + 0xE0]
	0x03371704 CBNZ W8, 0x337170C
	0x03371708 BL 0x1C16DFC
	0x0337170C LDRB W8, [X28 + 0xF07]
	0x03371710 CBNZ W8, 0x3371728
	0x03371714 MOV X0, X24
	0x03371718 BL 0x1C16CF4
	0x0337171C MOV X0, X23
	0x03371720 BL 0x1C16CF4
	0x03371724 STRB W29, [X28 + 0xF07]
	0x03371728 LDR W8, [X21 + 0x10]
	0x0337172C ADD W20, W8, 0x1
	0x03371730 STR W20, [X21 + 0x10]
	0x03371734 LDR X0, [X23]
	0x03371738 LDR W8, [X0 + 0xE0]
	0x0337173C CBNZ W8, 0x3371744
	0x03371740 BL 0x1C16DFC
	0x03371744 MOV X0, X21
	0x03371748 MOV X1, X31
	0x0337174C BL 0x33748E0
	0x03371750 CMP W20, W0
	0x03371754 B.GE 0x33717C0
	0x03371758 LDRSW X8, [X21 + 0x10]
	0x0337175C LDR W9, [X21 + 0x8]
	0x03371760 CMP W8, W9
	0x03371764 B.CS 0x3371818
	0x03371768 LDR X0, [X24]
	0x0337176C LDR X9, [X21]
	0x03371770 LDR W10, [X0 + 0xE0]
	0x03371774 LDRH W20, [X9, X8, LSL #1]
	0x03371778 CBNZ W10, 0x3371780
	0x0337177C BL 0x1C16DFC
	0x03371780 SUB W8, W20, 0x30
	0x03371784 CMP W8, 0xA
	0x03371788 B.CS 0x33717C0
	0x0337178C LDR X0, [X23]
	0x03371790 LDR W8, [X0 + 0xE0]
	0x03371794 CBNZ W8, 0x337179C
	0x03371798 BL 0x1C16DFC
	0x0337179C MOV X0, X21
	0x033717A0 MOV X1, X31
	0x033717A4 BL 0x3375C68
	0x033717A8 ADD W26, W26, 0x1
	0x033717AC CMP W22, W26
	0x033717B0 MADD W27, W27, W25, W0
	0x033717B4 B.NE 0x33716FC
	0x033717B8 MOV W26, W22
	0x033717BC B 0x33717CC
	0x033717C0 LDR W8, [X21 + 0x10]
	0x033717C4 SUB W8, W8, 0x1
	0x033717C8 STR W8, [X21 + 0x10]
	0x033717CC LDR X23, [X31 + 0x8]
	0x033717D0 LDR W8, [X31 + 0x4]
	0x033717D4 B 0x33717E0
	0x033717D8 MOV W26, W31
	0x033717DC MOV W27, W31
	0x033717E0 CMP W26, W19
	0x033717E4 STR W27, [X23]
	0x033717E8 B.GE 0x33717F0
	0x033717EC STR W8, [X21 + 0x10]
	0x033717F0 CMP W26, W19
	0x033717F4 LDP X20, X19, [X31 + 0x60]
	0x033717F8 LDP X22, X21, [X31 + 0x50]
	0x033717FC LDP X24, X23, [X31 + 0x40]
	0x03371800 LDP X26, X25, [X31 + 0x30]
	0x03371804 LDP X28, X27, [X31 + 0x20]
	0x03371808 LDP X29, X30, [X31 + 0x10]
	0x0337180C CSET W0, GE
	0x03371810 ADD X31, X31, 0x70
	0x03371814 RET
	0x03371818 BL 0x1C16F28
	0x0337181C STP D9, D8, [X31 - 0x60]!
	0x03371820 STP X30, X27, [X31 + 0x10]
	0x03371824 STP X26, X25, [X31 + 0x20]
	0x03371828 STP X24, X23, [X31 + 0x30]
	0x0337182C STP X22, X21, [X31 + 0x40]
	0x03371830 STP X20, X19, [X31 + 0x50]
	0x03371834 ADRP X23, 0x106B000
	0x03371838 ADRP X22, 0xDB7000
	0x0337183C LDRB W8, [X23 + 0xEF2]
	0x03371840 LDR X22, [X22 + 0x4F0]
	0x03371844 MOV X19, X2
	0x03371848 MOV W20, W1
	0x0337184C MOV X21, X0
	0x03371850 TBNZ X8, 0x0, 0x3371868
	0x03371854 ADRP X0, 0xDB7000
	0x03371858 LDR X0, [X0 + 0x4F0]
	0x0337185C BL 0x1C16CF4
	0x03371860 MOVZ W8, 0x1
	0x03371864 STRB W8, [X23 + 0xEF2]
	0x03371868 LDR X0, [X22]
	0x0337186C LDR W8, [X0 + 0xE0]
	0x03371870 CBNZ W8, 0x3371878
	0x03371874 BL 0x1C16DFC
	0x03371878 ADRP X25, 0x106B000
	0x0337187C LDRB W8, [X25 + 0xF07]
	0x03371880 CBNZ W8, 0x33718A4
	0x03371884 ADRP X0, 0xDB7000
	0x03371888 LDR X0, [X0 + 0x588]
	0x0337188C BL 0x1C16CF4
	0x03371890 ADRP X0, 0xDB7000
	0x03371894 LDR X0, [X0 + 0x4F0]
	0x03371898 BL 0x1C16CF4
	0x0337189C MOVZ W8, 0x1
	0x033718A0 STRB W8, [X25 + 0xF07]
	0x033718A4 LDR W8, [X21 + 0x10]
	0x033718A8 ADD W23, W8, 0x1
	0x033718AC STR W23, [X21 + 0x10]
	0x033718B0 LDR X0, [X22]
	0x033718B4 LDR W8, [X0 + 0xE0]
	0x033718B8 CBNZ W8, 0x33718C0
	0x033718BC BL 0x1C16DFC
	0x033718C0 MOV X0, X21
	0x033718C4 MOV X1, X31
	0x033718C8 BL 0x33748E0
	0x033718CC CMP W23, W0
	0x033718D0 B.GE 0x3371A20
	0x033718D4 LDRSW X8, [X21 + 0x10]
	0x033718D8 LDR W9, [X21 + 0x8]
	0x033718DC CMP W8, W9
	0x033718E0 B.CS 0x3371A80
	0x033718E4 ADRP X23, 0xDB7000
	0x033718E8 LDR X23, [X23 + 0x588]
	0x033718EC LDR X9, [X21]
	0x033718F0 LDR X0, [X23]
	0x033718F4 LDRH W24, [X9, X8, LSL #1]
	0x033718F8 LDR W10, [X0 + 0xE0]
	0x033718FC CBNZ W10, 0x3371904
	0x03371900 BL 0x1C16DFC
	0x03371904 SUB W8, W24, 0x30
	0x03371908 CMP W8, 0xA
	0x0337190C B.CS 0x3371A20
	0x03371910 LDR X0, [X22]
	0x03371914 LDR W8, [X0 + 0xE0]
	0x03371918 CBNZ W8, 0x3371920
	0x0337191C BL 0x1C16DFC
	0x03371920 MOV X0, X21
	0x03371924 MOV X1, X31
	0x03371928 BL 0x3375C68
	0x0337192C SCVTF D9, W0
	0x03371930 MOVZ W26, 0x1
	0x03371934 CMP W20, 0x2
	0x03371938 MOVZ W24, 0x1
	0x0337193C STR D9, [X19]
	0x03371940 B.LT 0x3371A44
	0x03371944 FMOV D8, 8.000000000465661
	0x03371948 MOVZ W24, 0x1
	0x0337194C LDR X0, [X22]
	0x03371950 LDR W8, [X0 + 0xE0]
	0x03371954 CBNZ W8, 0x337195C
	0x03371958 BL 0x1C16DFC
	0x0337195C LDRB W8, [X25 + 0xF07]
	0x03371960 CBNZ W8, 0x3371978
	0x03371964 MOV X0, X23
	0x03371968 BL 0x1C16CF4
	0x0337196C MOV X0, X22
	0x03371970 BL 0x1C16CF4
	0x03371974 STRB W26, [X25 + 0xF07]
	0x03371978 LDR W8, [X21 + 0x10]
	0x0337197C ADD W27, W8, 0x1
	0x03371980 STR W27, [X21 + 0x10]
	0x03371984 LDR X0, [X22]
	0x03371988 LDR W8, [X0 + 0xE0]
	0x0337198C CBNZ W8, 0x3371994
	0x03371990 BL 0x1C16DFC
	0x03371994 MOV X0, X21
	0x03371998 MOV X1, X31
	0x0337199C BL 0x33748E0
	0x033719A0 CMP W27, W0
	0x033719A4 B.GE 0x3371A34
	0x033719A8 LDRSW X8, [X21 + 0x10]
	0x033719AC LDR W9, [X21 + 0x8]
	0x033719B0 CMP W8, W9
	0x033719B4 B.CS 0x3371A80
	0x033719B8 LDR X0, [X23]
	0x033719BC LDR X9, [X21]
	0x033719C0 LDR W10, [X0 + 0xE0]
	0x033719C4 LDRH W27, [X9, X8, LSL #1]
	0x033719C8 CBNZ W10, 0x33719D0
	0x033719CC BL 0x1C16DFC
	0x033719D0 SUB W8, W27, 0x30
	0x033719D4 CMP W8, 0xA
	0x033719D8 B.CS 0x3371A34
	0x033719DC LDR X0, [X22]
	0x033719E0 LDR V9, [X19]
	0x033719E4 LDR W8, [X0 + 0xE0]
	0x033719E8 CBNZ W8, 0x33719F0
	0x033719EC BL 0x1C16DFC
	0x033719F0 MOV X0, X21
	0x033719F4 MOV X1, X31
	0x033719F8 BL 0x3375C68
	0x033719FC FMUL D0, D9, D8
	0x03371A00 SCVTF D1, W0
	0x03371A04 ADD W24, W24, 0x1
	0x03371A08 FADD D9, D0, D1
	0x03371A0C CMP W20, W24
	0x03371A10 STR D9, [X19]
	0x03371A14 B.NE 0x337194C
	0x03371A18 MOV W24, W20
	0x03371A1C B 0x3371A44

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+64], D8
	003 Move [X31+72], X30
	004 Move [X31+80], X26
	005 Move [X31+88], X25
	006 Move [X31+96], X24
	007 Move [X31+104], X23
	008 Move [X31+112], X22
	009 Move [X31+120], X21
	010 Move [X31+128], X20
	011 Move [X31+136], X19
	012 Move X23, 0x106C000
	013 Move W8, [X23+3822]
	014 Move X19, X3
	015 Move W20, W2
	016 Move X21, X1
	017 Move X22, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {45}
	022 Move X0, 0xDB8000
	023 Move X0, [X0+1416]
	024 Call 0x1C17CF4
	025 Move X0, 0xD84000
	026 Move X0, [X0+2544]
	027 Call 0x1C17CF4
	028 Move X0, 0xDB8000
	029 Move X0, [X0+784]
	030 Call 0x1C17CF4
	031 Move X0, 0xD83000
	032 Move X0, [X0+1448]
	033 Call 0x1C17CF4
	034 Move X0, 0xD85000
	035 Move X0, [X0+1392]
	036 Call 0x1C17CF4
	037 Move X0, 0xDB8000
	038 Move X0, [X0+1264]
	039 Call 0x1C17CF4
	040 Move X0, 0xDBA000
	041 Move X0, [X0+3120]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X23+3822], W8
	045 Move [X31+48], X31
	046 Move [X31+24], X31
	047 Move X24, 0xDB8000
	048 Move W8, [X22+16]
	049 Move X24, [X24+1264]
	050 Move TEMP, X8
	051 And TEMP, TEMP, -2147483648
	052 Compare TEMP, -2147483648
	053 JumpIfEqual {66}
	054 Move X0, X22
	055 Move W1, W31
	056 Move X2, X31
	057 Call DateTimeRawInfo.GetNumber, X0, X1
	058 Move TEMP, X0
	059 And TEMP, TEMP, -2147483648
	060 Compare TEMP, -2147483648
	061 JumpIfEqual {66}
	062 Move W1, 1
	063 Move X0, X22
	064 Move X2, X31
	065 Call DateTimeRawInfo.GetNumber, X0, X1
	066 Move W8, [X21+16]
	067 Move X26, 0xDB8000
	068 Subtract W8, W8, 1
	069 Move [X21+16], W8
	070 Move X0, [X24]
	071 Move [X31+44], W31
	072 Move [X31+32], X31
	073 Move W8, [X0+224]
	074 Move X26, [X26+1416]
	075 Compare W8, 0
	076 JumpIfNotEqual {78}
	077 Call 0x1C17DFC
	078 Move X0, X21
	079 Move X1, X31
	080 Call __DTString.SkipWhiteSpaces, X0
	081 Move X0, [X26]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {86}
	085 Call 0x1C17DFC
	086 Add X2, X31, 52
	087 Move W1, 2
	088 Move X0, X21
	089 Call DateTimeParse.ParseDigits, X0, X1, X2
	090 Move TEMP, X0
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfNotEqual {337}
	094 Move X0, [X24]
	095 Move W8, [X0+224]
	096 Compare W8, 0
	097 JumpIfNotEqual {99}
	098 Call 0x1C17DFC
	099 Move X0, X21
	100 Move X1, X31
	101 Call __DTString.SkipWhiteSpaces, X0
	102 Move W1, 58
	103 Move X0, X21
	104 Move X2, X31
	105 Call __DTString.Match, X0, X1
	106 Move TEMP, X0
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfNotEqual {337}
	110 Move X0, [X24]
	111 Move W8, [X0+224]
	112 Compare W8, 0
	113 JumpIfNotEqual {115}
	114 Call 0x1C17DFC
	115 Move X0, X21
	116 Move X1, X31
	117 Call __DTString.SkipWhiteSpaces, X0
	118 Move X0, [X26]
	119 Move W8, [X0+224]
	120 Compare W8, 0
	121 JumpIfNotEqual {123}
	122 Call 0x1C17DFC
	123 Add X2, X31, 48
	124 Move W1, 2
	125 Move X0, X21
	126 Call DateTimeParse.ParseDigits, X0, X1, X2
	127 Move TEMP, X0
	128 And TEMP, TEMP, 1
	129 Compare TEMP, 1
	130 JumpIfNotEqual {337}
	131 Move X0, [X24]
	132 Move W8, [X0+224]
	133 Compare W8, 0
	134 JumpIfNotEqual {136}
	135 Call 0x1C17DFC
	136 Move X0, X21
	137 Move X1, X31
	138 Call __DTString.SkipWhiteSpaces, X0
	139 Move W1, 58
	140 Move X0, X21
	141 Move X2, X31
	142 Call __DTString.Match, X0, X1
	143 Move TEMP, X0
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfNotEqual {204}
	147 Move X0, [X24]
	148 Move W8, [X0+224]
	149 Compare W8, 0
	150 JumpIfNotEqual {152}
	151 Call 0x1C17DFC
	152 Move X0, X21
	153 Move X1, X31
	154 Call __DTString.SkipWhiteSpaces, X0
	155 Move X0, [X26]
	156 Move W8, [X0+224]
	157 Compare W8, 0
	158 JumpIfNotEqual {160}
	159 Call 0x1C17DFC
	160 Add X2, X31, 44
	161 Move W1, 2
	162 Move X0, X21
	163 Call DateTimeParse.ParseDigits, X0, X1, X2
	164 Move TEMP, X0
	165 And TEMP, TEMP, 1
	166 Compare TEMP, 1
	167 JumpIfNotEqual {337}
	168 Move X0, [X24]
	169 Move W8, [X0+224]
	170 Compare W8, 0
	171 JumpIfNotEqual {173}
	172 Call 0x1C17DFC
	173 Move W1, 46
	174 Move X0, X21
	175 Move X2, X31
	176 Call __DTString.Match, X0, X1
	177 Move TEMP, X0
	178 And TEMP, TEMP, 1
	179 Compare TEMP, 1
	180 JumpIfNotEqual {196}
	181 Move X0, [X26]
	182 Move W8, [X0+224]
	183 Compare W8, 0
	184 JumpIfNotEqual {186}
	185 Call 0x1C17DFC
	186 Add X1, X31, 32
	187 Move X0, X21
	188 Call DateTimeParse.ParseFraction, X0, X1
	189 Move TEMP, X0
	190 And TEMP, TEMP, 1
	191 Compare TEMP, 1
	192 JumpIfNotEqual {337}
	193 Move W8, [X21+16]
	194 Subtract W8, W8, 1
	195 Move [X21+16], W8
	196 Move X0, [X24]
	197 Move W8, [X0+224]
	198 Compare W8, 0
	199 JumpIfNotEqual {201}
	200 Call 0x1C17DFC
	201 Move X0, X21
	202 Move X1, X31
	203 Call __DTString.SkipWhiteSpaces, X0
	204 Move X0, [X24]
	205 Move W8, [X0+224]
	206 Compare W8, 0
	207 JumpIfNotEqual {209}
	208 Call 0x1C17DFC
	209 Move X0, X21
	210 Move X1, X31
	211 Call __DTString.GetNext, X0
	212 Move TEMP, X0
	213 And TEMP, TEMP, 1
	214 Compare TEMP, 1
	215 JumpIfNotEqual {354}
	216 Move X0, [X24]
	217 Move W8, [X0+224]
	218 Compare W8, 0
	219 JumpIfNotEqual {221}
	220 Call 0x1C17DFC
	221 Move X0, X21
	222 Move X1, X31
	223 Call __DTString.GetChar, X0
	224 And W8, W0, 0xFFFF
	225 NotImplemented "Instruction CMP not yet implemented."
	226 NotImplemented "Instruction CMP not yet implemented."
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Move W8, [X19+36]
	229 Add X23, X19, 40
	230 Or W8, W8, 256
	231 Move [X19+36], W8
	232 Move X0, [X26]
	233 Move W8, [X0+224]
	234 Compare W8, 0
	235 JumpIfNotEqual {237}
	236 Call 0x1C17DFC
	237 Move X0, X21
	238 Move X1, X23
	239 Call DateTimeParse.ParseTimeZone, X0, X1
	240 Move TEMP, X0
	241 And TEMP, TEMP, 1
	242 Compare TEMP, 1
	243 JumpIfEqual {266}
	244 NotImplemented "Instruction CMP not yet implemented."
	245 NotImplemented "Instruction CMP not yet implemented."
	246 Move W8, [X19+36]
	247 Move X23, 0xD85000
	248 Or W8, W8, 256
	249 Move [X19+36], W8
	250 Move X23, [X23+1392]
	251 Move X0, [X23]
	252 Move W9, [X0+224]
	253 Compare W9, 0
	254 JumpIfNotEqual {258}
	255 Call 0x1C17DFC
	256 Move X0, [X23]
	257 Move W8, [X19+36]
	258 Move X9, [X0+184]
	259 Or W8, W8, 512
	260 Move X9, [X9]
	261 Move [X19+36], W8
	262 Move [X19+40], X9
	263 Move W8, [X21+16]
	264 Subtract W8, W8, 1
	265 Move [X21+16], W8
	266 Move X0, [X24]
	267 Move W8, [X0+224]
	268 Compare W8, 0
	269 JumpIfNotEqual {271}
	270 Call 0x1C17DFC
	271 Move X0, X21
	272 Move X1, X31
	273 Call __DTString.SkipWhiteSpaces, X0
	274 Move W1, 35
	275 Move X0, X21
	276 Move X2, X31
	277 Call __DTString.Match, X0, X1
	278 Move TEMP, X0
	279 And TEMP, TEMP, 1
	280 Compare TEMP, 1
	281 JumpIfNotEqual {301}
	282 Move X0, [X26]
	283 Move W8, [X0+224]
	284 Compare W8, 0
	285 JumpIfNotEqual {287}
	286 Call 0x1C17DFC
	287 Move X0, X21
	288 Call DateTimeParse.VerifyValidPunctuation, X0
	289 Move TEMP, X0
	290 And TEMP, TEMP, 1
	291 Compare TEMP, 1
	292 JumpIfNotEqual {337}
	293 Move X0, [X24]
	294 Move W8, [X0+224]
	295 Compare W8, 0
	296 JumpIfNotEqual {298}
	297 Call 0x1C17DFC
	298 Move X0, X21
	299 Move X1, X31
	300 Call __DTString.SkipWhiteSpaces, X0
	301 Move X0, [X24]
	302 Move W8, [X0+224]
	303 Compare W8, 0
	304 JumpIfNotEqual {306}
	305 Call 0x1C17DFC
	306 Move X0, X21
	307 Move W1, W31
	308 Move X2, X31
	309 Call __DTString.Match, X0, X1
	310 Move TEMP, X0
	311 And TEMP, TEMP, 1
	312 Compare TEMP, 1
	313 JumpIfNotEqual {325}
	314 Move X0, [X26]
	315 Move W8, [X0+224]
	316 Compare W8, 0
	317 JumpIfNotEqual {319}
	318 Call 0x1C17DFC
	319 Move X0, X21
	320 Call DateTimeParse.VerifyValidPunctuation, X0
	321 Move TEMP, X0
	322 And TEMP, TEMP, 1
	323 Compare TEMP, 1
	324 JumpIfNotEqual {337}
	325 Move X0, [X24]
	326 Move W8, [X0+224]
	327 Compare W8, 0
	328 JumpIfNotEqual {330}
	329 Call 0x1C17DFC
	330 Move X0, X21
	331 Move X1, X31
	332 Call __DTString.GetNext, X0
	333 Move TEMP, X0
	334 And TEMP, TEMP, 1
	335 Compare TEMP, 1
	336 JumpIfNotEqual {354}
	337 Move X0, X19
	338 Move X1, X31
	339 Call DateTimeResult.SetBadDateTimeFailure, X0
	340 Move W0, W31
	341 Move X20, [X31+128]
	342 Move X19, [X31+136]
	343 Move X22, [X31+112]
	344 Move X21, [X31+120]
	345 Move X24, [X31+96]
	346 Move X23, [X31+104]
	347 Move X26, [X31+80]
	348 Move X25, [X31+88]
	349 Move X30, [X31+72]
	350 Move V8, [X31+64]
	351 And W0, W0, 1
	352 Add X31, X31, 144
	353 Return X0
	354 Move X8, 0xDB8000
	355 Move X8, [X8+784]
	356 Move X0, [X8]
	357 Move W8, [X0+224]
	358 Compare W8, 0
	359 JumpIfNotEqual {361}
	360 Call 0x1C17DFC
	361 Move X0, X31
	362 Call GregorianCalendar.GetDefaultInstance
	363 Move W23, [X22+16]
	364 Move X24, X0
	365 Move X0, X22
	366 Move W1, W31
	367 Move X2, X31
	368 Call DateTimeRawInfo.GetNumber, X0, X1
	369 Move W25, W0
	370 Move W1, 1
	371 Move X0, X22
	372 Move X2, X31
	373 Call DateTimeRawInfo.GetNumber, X0, X1
	374 Compare X24, 0
	375 JumpIfEqual {462}
	376 Move X9, [X24]
	377 Move W8, [X19+32]
	378 Move W6, [X31+44]
	379 Move W5, [X31+48]
	380 Move W4, [X31+52]
	381 Move X10, [X9+680]
	382 Move X9, [X9+688]
	383 Move W3, W0
	384 Add X11, X31, 24
	385 Move X0, X24
	386 Move W1, W23
	387 Move W2, W25
	388 Move W7, W31
	389 Move [X31+8], X11
	390 Move [X31+16], X9
	391 Move [X31], W8
	392 NotImplemented "Instruction BLR not yet implemented."
	393 Move TEMP, X0
	394 And TEMP, TEMP, 1
	395 Compare TEMP, 1
	396 JumpIfNotEqual {416}
	397 Move X8, 0xD83000
	398 Move X8, [X8+1448]
	399 Move V8, [X31+32]
	400 Move X0, [X8]
	401 Move W8, [X0+224]
	402 Compare W8, 0
	403 JumpIfNotEqual {405}
	404 Call 0x1C17DFC
	405 Move X8, -42479616
	406 Move V0, [X8+2728]
	407 Add X0, X31, 56
	408 Multiply D8, D8, D0
	409 Move V0, V8
	410 Call 0x3EB2C00
	411 NotImplemented "Instruction FCMP not yet implemented."
	412 Move D1, -0.5
	413 NotImplemented "Instruction FCMP not yet implemented."
	414 Move V0, [X31+56]
	415 Move D1, -1
	416 Move X8, 0xDBA000
	417 Move X8, [X8+3120]
	418 Move W1, 7
	419 Move X0, X19
	420 Move X3, X31
	421 Move X2, [X8]
	422 Call DateTimeResult.SetFailure, X0, X1, X2
	423 Move D1, 0.5
	424 NotImplemented "Instruction FCMP not yet implemented."
	425 Move V0, [X31+56]
	426 Move D1, 1
	427 NotImplemented "Instruction FCVTZS not yet implemented."
	428 Add D1, D0, D1
	429 And X31, X8, 1
	430 NotImplemented "Instruction FCSEL not yet implemented."
	431 Add D0, D8, D1
	432 NotImplemented "Instruction FRINTP not yet implemented."
	433 Add D0, D8, D1
	434 NotImplemented "Instruction FRINTM not yet implemented."
	435 Move X8, 0xD84000
	436 Move X8, [X8+2544]
	437 Move X0, [X8]
	438 Move W8, [X0+224]
	439 Compare W8, 0
	440 JumpIfNotEqual {442}
	441 Call 0x1C17DFC
	442 Move X8, 0x7FF00000
	443 Move D0, X8
	444 NotImplemented "Instruction FCVTZS not yet implemented."
	445 NotImplemented "Instruction FCMP not yet implemented."
	446 Move X8, 0x80000000
	447 NotImplemented "Instruction CSEL not yet implemented."
	448 Add X0, X31, 24
	449 Call DateTime.AddTicks, X0, X1
	450 Move [X31+24], X0
	451 Move [X19+56], X0
	452 Move X0, [X26]
	453 Move W8, [X0+224]
	454 Compare W8, 0
	455 JumpIfNotEqual {457}
	456 Call 0x1C17DFC
	457 Move X0, X21
	458 Move X1, X19
	459 Move W2, W20
	460 Move W3, W31
	461 Call DateTimeParse.DetermineTimeZoneAdjustments, X0, X1, X2, X3
	462 Call 0x1C17F20

Method: System.Boolean MatchHebrewDigits(ref System.__DTString str, System.Int32 digitLen, out System.Int32 number)

Disassembly:
	0x03372568 B 0x337251C
	0x0337256C BL 0x1C16F28
	0x03372570 BL 0x1C16F20
	0x03372574 STR X30, [X31 - 0x40]!
	0x03372578 STP X24, X23, [X31 + 0x10]
	0x0337257C STP X22, X21, [X31 + 0x20]
	0x03372580 STP X20, X19, [X31 + 0x30]
	0x03372584 ADRP X22, 0x106A000
	0x03372588 LDRB W8, [X22 + 0xEFA]
	0x0337258C MOV X19, X2
	0x03372590 MOV X21, X1
	0x03372594 MOV X20, X0
	0x03372598 TBNZ X8, 0x0, 0x33725B0
	0x0337259C ADRP X0, 0xDB6000
	0x033725A0 LDR X0, [X0 + 0x4F0]
	0x033725A4 BL 0x1C16CF4
	0x033725A8 MOVZ W8, 0x1
	0x033725AC STRB W8, [X22 + 0xEFA]
	0x033725B0 MOVN W8, 0x0
	0x033725B4 STR W8, [X19]
	0x033725B8 CBZ X21, 0x3372708
	0x033725BC MOV X0, X21
	0x033725C0 MOV X1, X31
	0x033725C4 BL 0x3325044
	0x033725C8 CBZ X0, 0x3372708
	0x033725CC LDR W8, [X0 + 0x10]
	0x033725D0 CBNZ W8, 0x33725D8
	0x033725D4 STR W31, [X19]
	0x033725D8 MOV X0, X21
	0x033725DC MOV X1, X31
	0x033725E0 BL 0x3325630
	0x033725E4 CBZ X0, 0x3372708
	0x033725E8 ADRP X23, 0xDB6000
	0x033725EC LDR W8, [X0 + 0x10]
	0x033725F0 LDR X23, [X23 + 0x4F0]
	0x033725F4 CBNZ W8, 0x3372600
	0x033725F8 MOVZ W8, 0x1
	0x033725FC STR W8, [X19]
	0x03372600 LDR X0, [X23]
	0x03372604 LDR W8, [X0 + 0xE0]
	0x03372608 CBNZ W8, 0x3372610
	0x0337260C BL 0x1C16DFC
	0x03372610 MOV X0, X20
	0x03372614 MOV X1, X31
	0x03372618 BL 0x3374A74
	0x0337261C TBZ X0, 0x0, 0x33726E8
	0x03372620 MOV X0, X21
	0x03372624 MOV X1, X31
	0x03372628 BL 0x3325044
	0x0337262C CBZ X0, 0x3372708
	0x03372630 MOV X24, X0
	0x03372634 LDR W8, [X24 + 0x10]!
	0x03372638 MOV X22, X0
	0x0337263C CMP W8, 0x1
	0x03372640 B.LT 0x3372670
	0x03372644 LDR X0, [X23]
	0x03372648 LDR W8, [X0 + 0xE0]
	0x0337264C CBNZ W8, 0x3372654
	0x03372650 BL 0x1C16DFC
	0x03372654 MOV X0, X20
	0x03372658 MOV X1, X22
	0x0337265C MOV X2, X31
	0x03372660 BL 0x337454C
	0x03372664 TBZ X0, 0x0, 0x3372670
	0x03372668 MOV W8, W31
	0x0337266C B 0x33726BC
	0x03372670 MOV X0, X21
	0x03372674 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x106B000
	009 Move W8, [X21+3823]
	010 Move X19, X2
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xDB7000
	017 Move X0, [X0+1256]
	018 Call 0x1C17CF4
	019 Move X0, 0xDB7000
	020 Move X0, [X0+1264]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+3823], W8
	024 Move X22, 0xDB7000
	025 Move X23, 0xDB7000
	026 Move X22, [X22+1264]
	027 Move X23, [X23+1256]
	028 Add X0, X31, 8
	029 Move W1, W31
	030 Move X2, X31
	031 Move [X31+8], X31
	032 Move [X19], W31
	033 Call HebrewNumberParsingContext..ctor, X0, X1
	034 Move W0, 3
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X0, [X22]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, X20
	042 Move X1, X31
	043 Call __DTString.GetNext, X0
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {71}
	048 Move X0, [X22]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X0, X20
	054 Move X1, X31
	055 Call __DTString.GetChar, X0
	056 Move X8, [X23]
	057 Move W21, W0
	058 Move W9, [X8+224]
	059 Compare W9, 0
	060 JumpIfNotEqual {63}
	061 Move X0, X8
	062 Call 0x1C17DFC
	063 Add X1, X31, 8
	064 Move W0, W21
	065 Move X2, X31
	066 Call HebrewNumber.ParseByChar, X0, X1
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move W8, [X31+12]
	069 Move W0, 1
	070 Move [X19], W8
	071 Move W0, W31
	072 Move X20, [X31+48]
	073 Move X19, [X31+56]
	074 Move X22, [X31+32]
	075 Move X21, [X31+40]
	076 Move X30, [X31+16]
	077 Move X23, [X31+24]
	078 Add X31, X31, 64
	079 Return X0

Method: System.Boolean ParseDigits(ref System.__DTString str, System.Int32 digitLen, out System.Int32 result)

Disassembly:
	0x033724E0 MOV X23, X0
	0x033724E4 LDR W9, [X8 + 0xE0]
	0x033724E8 CBNZ W9, 0x33724F4
	0x033724EC MOV X0, X8
	0x033724F0 BL 0x1C16DFC
	0x033724F4 MOV X0, X20
	0x033724F8 MOV X1, X23
	0x033724FC MOV X2, X31
	0x03372500 BL 0x337454C
	0x03372504 TBNZ X0, 0x0, 0x3372534
	0x03372508 LDR W8, [X22 + 0x18]
	0x0337250C ADD X25, X25, 0x1
	0x03372510 CMP X25, W8, SXTW
	0x03372514 B.LT 0x337247C
	0x03372518 MOV W0, W31
	0x0337251C LDP X20, X19, [X31 + 0x40]
	0x03372520 LDP X22, X21, [X31 + 0x30]
	0x03372524 LDP X24, X23, [X31 + 0x20]
	0x03372528 LDP X26, X25, [X31 + 0x10]
	0x0337252C LDR X30, [X31], #0x50
	0x03372530 RET
	0x03372534 CBZ X23, 0x3372570
	0x03372538 LDR W8, [X20 + 0x10]
	0x0337253C LDR W9, [X23 + 0x10]
	0x03372540 ADD W8, W8, W9
	0x03372544 SUB W8, W8, 0x1
	0x03372548 STR W8, [X20 + 0x10]
	0x0337254C LDR W8, [X22 + 0x18]
	0x03372550 CMP W25, W8
	0x03372554 B.CS 0x337256C
	0x03372558 ADD X8, X22, 0x20
	0x0337255C LDR W8, [X8, X25, LSL #2]
	0x03372560 MOVZ W0, 0x1
	0x03372564 STR W8, [X19]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x106B000
	008 Move X23, 0xDB7000
	009 Move W8, [X22+3824]
	010 Move X23, [X23+1416]
	011 Move X19, X2
	012 Move W21, W1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xDB7000
	019 Move X0, [X0+1416]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+3824], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move W1, 1
	030 Move W2, 2
	031 Move X0, X20
	032 Move X0, X20
	033 Move W1, W21
	034 Move W2, W21
	035 Move X3, X19
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X30, [X31+48]
	041 Move X23, [X31+56]
	042 Call DateTimeParse.ParseDigits, X0, X1, X2, X3
	043 Return X0

Method: System.Boolean ParseDigits(ref System.__DTString str, System.Int32 minDigitLen, System.Int32 maxDigitLen, out System.Int32 result)

Disassembly:
	0x03372678 BL 0x3325630
	0x0337267C CBZ X0, 0x3372708
	0x03372680 MOV X24, X0
	0x03372684 LDR W8, [X24 + 0x10]!
	0x03372688 MOV X21, X0
	0x0337268C CMP W8, 0x1
	0x03372690 B.LT 0x33726DC
	0x03372694 LDR X0, [X23]
	0x03372698 LDR W8, [X0 + 0xE0]
	0x0337269C CBNZ W8, 0x33726A4
	0x033726A0 BL 0x1C16DFC
	0x033726A4 MOV X0, X20
	0x033726A8 MOV X1, X21
	0x033726AC MOV X2, X31
	0x033726B0 BL 0x337454C
	0x033726B4 TBZ X0, 0x0, 0x33726DC
	0x033726B8 MOVZ W8, 0x1
	0x033726BC LDR W9, [X20 + 0x10]
	0x033726C0 LDR W10, [X24]
	0x033726C4 MOVZ W0, 0x1
	0x033726C8 ADD W9, W9, W10
	0x033726CC SUB W9, W9, 0x1
	0x033726D0 STR W9, [X20 + 0x10]
	0x033726D4 STR W8, [X19]
	0x033726D8 B 0x33726F4
	0x033726DC LDR W8, [X20 + 0x10]
	0x033726E0 SUB W8, W8, 0x1
	0x033726E4 STR W8, [X20 + 0x10]
	0x033726E8 LDR W8, [X19]
	0x033726EC ADDS W31, W8, 0x1
	0x033726F0 CSET W0, NE
	0x033726F4 LDP X20, X19, [X31 + 0x30]
	0x033726F8 LDP X22, X21, [X31 + 0x20]
	0x033726FC LDP X24, X23, [X31 + 0x10]
	0x03372700 LDR X30, [X31], #0x40
	0x03372704 RET
	0x03372708 BL 0x1C16F20
	0x0337270C STR X30, [X31 - 0x40]!
	0x03372710 STP X24, X23, [X31 + 0x10]
	0x03372714 STP X22, X21, [X31 + 0x20]
	0x03372718 STP X20, X19, [X31 + 0x30]
	0x0337271C ADRP X22, 0x106A000
	0x03372720 ADRP X23, 0xDB6000
	0x03372724 LDRB W8, [X22 + 0xEFB]
	0x03372728 LDR X23, [X23 + 0x4F0]
	0x0337272C MOV X19, X2
	0x03372730 MOV X21, X1
	0x03372734 MOV X20, X0
	0x03372738 TBNZ X8, 0x0, 0x3372750
	0x0337273C ADRP X0, 0xDB6000
	0x03372740 LDR X0, [X0 + 0x4F0]
	0x03372744 BL 0x1C16CF4
	0x03372748 MOVZ W8, 0x1
	0x0337274C STRB W8, [X22 + 0xEFB]
	0x03372750 LDR X0, [X23]
	0x03372754 LDR W8, [X0 + 0xE0]
	0x03372758 CBNZ W8, 0x3372760
	0x0337275C BL 0x1C16DFC
	0x03372760 MOV X0, X20
	0x03372764 MOV X1, X31
	0x03372768 BL 0x3374A74
	0x0337276C TBZ X0, 0x0, 0x3372840
	0x03372770 CBZ X21, 0x3372858
	0x03372774 MOV X0, X21
	0x03372778 MOV X1, X31
	0x0337277C BL 0x3325044
	0x03372780 CBZ X0, 0x3372858
	0x03372784 LDR W8, [X0 + 0x10]
	0x03372788 MOV X22, X0
	0x0337278C CMP W8, 0x1
	0x03372790 B.LT 0x33727D8
	0x03372794 LDR X0, [X23]
	0x03372798 LDR W8, [X0 + 0xE0]
	0x0337279C CBNZ W8, 0x33727A4
	0x033727A0 BL 0x1C16DFC
	0x033727A4 MOV X0, X20
	0x033727A8 MOV X1, X31
	0x033727AC BL 0x3375C40
	0x033727B0 AND W24, W0, 0xFFFF
	0x033727B4 MOV X0, X22
	0x033727B8 MOV W1, W31
	0x033727BC MOV X2, X31
	0x033727C0 BL 0x3222A1C
	0x033727C4 CMP W24, W0, UXTH
	0x033727C8 B.NE 0x33727D8
	0x033727CC STR W31, [X19]
	0x033727D0 MOVZ W0, 0x1
	0x033727D4 B 0x3372844
	0x033727D8 MOV X0, X21
	0x033727DC MOV X1, X31
	0x033727E0 BL 0x3325630
	0x033727E4 CBZ X0, 0x3372858
	0x033727E8 LDR W8, [X0 + 0x10]
	0x033727EC MOV X21, X0
	0x033727F0 CMP W8, 0x1
	0x033727F4 B.LT 0x3372840
	0x033727F8 LDR X0, [X23]
	0x033727FC LDR W8, [X0 + 0xE0]
	0x03372800 CBNZ W8, 0x3372808
	0x03372804 BL 0x1C16DFC
	0x03372808 MOV X0, X20
	0x0337280C MOV X1, X31
	0x03372810 BL 0x3375C40
	0x03372814 AND W20, W0, 0xFFFF
	0x03372818 MOV X0, X21

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X20, 0x106B000
	015 Move W8, [X20+3825]
	016 Move X23, X3
	017 Move W22, W2
	018 Move W19, W1
	019 Move X21, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0xDB7000
	025 Move X0, [X0+1264]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+3825], W8
	029 Move W8, [X21+16]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move [X31+4], W8
	032 Move [X31+8], X23
	033 Move X23, 0xDB7000
	034 Move X24, 0xDB7000
	035 Move X23, [X23+1264]
	036 Move X24, [X24+1416]
	037 Move W27, W31
	038 Move W26, W31
	039 Move X28, 0x106B000
	040 Move W29, 1
	041 Move W25, 10
	042 Move X0, [X23]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move W8, [X28+3847]
	048 Compare W8, 0
	049 JumpIfNotEqual {55}
	050 Move X0, X24
	051 Call 0x1C17CF4
	052 Move X0, X23
	053 Call 0x1C17CF4
	054 Move [X28+3847], W29
	055 Move W8, [X21+16]
	056 Add W20, W8, 1
	057 Move [X21+16], W20
	058 Move X0, [X23]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X0, X21
	064 Move X1, X31
	065 Call __DTString.get_Length, X0
	066 NotImplemented "Instruction CMP not yet implemented."
	067 NotImplemented "Instruction LDRSW not yet implemented."
	068 Move W9, [X21+8]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X0, [X24]
	071 Move X9, [X21]
	072 Move W10, [X0+224]
	073 NotImplemented "Instruction LDRH not yet implemented."
	074 Compare W10, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Subtract W8, W20, 48
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move X0, [X23]
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Move X0, X21
	085 Move X1, X31
	086 Call __DTString.GetDigit, X0
	087 Add W26, W26, 1
	088 NotImplemented "Instruction CMP not yet implemented."
	089 NotImplemented "Instruction MADD not yet implemented."
	090 Move W26, W22
	091 Move W8, [X21+16]
	092 Subtract W8, W8, 1
	093 Move [X21+16], W8
	094 Move X23, [X31+8]
	095 Move W8, [X31+4]
	096 Move W26, W31
	097 Move W27, W31
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move [X23], W27
	100 Move [X21+16], W8
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X20, [X31+96]
	103 Move X19, [X31+104]
	104 Move X22, [X31+80]
	105 Move X21, [X31+88]
	106 Move X24, [X31+64]
	107 Move X23, [X31+72]
	108 Move X26, [X31+48]
	109 Move X25, [X31+56]
	110 Move X28, [X31+32]
	111 Move X27, [X31+40]
	112 Move X29, [X31+16]
	113 Move X30, [X31+24]
	114 NotImplemented "Instruction CSET not yet implemented."
	115 Add X31, X31, 112
	116 Return X0
	117 Call 0x1C17F28

Method: System.Boolean ParseFractionExact(ref System.__DTString str, System.Int32 maxDigitLen, ref System.Double result)

Disassembly:
	0x0337281C MOV W1, W31
	0x03372820 MOV X2, X31
	0x03372824 BL 0x3222A1C
	0x03372828 CMP W20, W0, UXTH
	0x0337282C MOV W0, W31
	0x03372830 B.NE 0x3372844
	0x03372834 MOVZ W0, 0x1
	0x03372838 STR W0, [X19]
	0x0337283C B 0x3372844
	0x03372840 MOV W0, W31
	0x03372844 LDP X20, X19, [X31 + 0x30]
	0x03372848 LDP X22, X21, [X31 + 0x20]
	0x0337284C LDP X24, X23, [X31 + 0x10]
	0x03372850 LDR X30, [X31], #0x40
	0x03372854 RET
	0x03372858 BL 0x1C16F20
	0x0337285C SUB X31, X31, 0x40
	0x03372860 STP X30, X23, [X31 + 0x10]
	0x03372864 STP X22, X21, [X31 + 0x20]
	0x03372868 STP X20, X19, [X31 + 0x30]
	0x0337286C ADRP X23, 0x106A000
	0x03372870 LDRB W8, [X23 + 0xEFC]
	0x03372874 MOV X19, X3
	0x03372878 MOV W20, W2
	0x0337287C MOV W21, W1
	0x03372880 MOV X22, X0
	0x03372884 TBNZ X8, 0x0, 0x33728A8
	0x03372888 ADRP X0, 0xD83000
	0x0337288C LDR X0, [X0 + 0x170]
	0x03372890 BL 0x1C16CF4
	0x03372894 ADRP X0, 0xDB8000
	0x03372898 LDR X0, [X0 + 0xC90]
	0x0337289C BL 0x1C16CF4
	0x033728A0 MOVZ W8, 0x1
	0x033728A4 STRB W8, [X23 + 0xEFC]
	0x033728A8 LDR W8, [X22]
	0x033728AC ADDS W31, W8, 0x1
	0x033728B0 B.EQ 0x33728FC
	0x033728B4 CMP W8, W21
	0x033728B8 B.EQ 0x3372900
	0x033728BC ADRP X8, 0xD83000
	0x033728C0 LDR X8, [X8 + 0x170]
	0x033728C4 ADD X1, X31, 0xC
	0x033728C8 STRH W20, [X31 + 0xC]
	0x033728CC LDR X0, [X8]
	0x033728D0 BL 0x1C16E04
	0x033728D4 ADRP X8, 0xDB8000
	0x033728D8 LDR X8, [X8 + 0xC90]
	0x033728DC MOV X3, X0
	0x033728E0 MOVZ W1, 0x3
	0x033728E4 MOV X0, X19
	0x033728E8 LDR X2, [X8]
	0x033728EC MOV X4, X31
	0x033728F0 BL 0x3376824
	0x033728F4 MOV W0, W31
	0x033728F8 B 0x3372904
	0x033728FC STR W21, [X22]
	0x03372900 MOVZ W0, 0x1
	0x03372904 LDP X20, X19, [X31 + 0x30]
	0x03372908 LDP X22, X21, [X31 + 0x20]
	0x0337290C LDP X30, X23, [X31 + 0x10]
	0x03372910 ADD X31, X31, 0x40
	0x03372914 RET
	0x03372918 STR X30, [X31 - 0x40]!
	0x0337291C STP X24, X23, [X31 + 0x10]
	0x03372920 STP X22, X21, [X31 + 0x20]
	0x03372924 STP X20, X19, [X31 + 0x30]
	0x03372928 ADRP X24, 0x106A000
	0x0337292C LDRB W8, [X24 + 0xEFF]
	0x03372930 MOV X23, X4
	0x03372934 MOV X22, X3
	0x03372938 MOV X21, X2
	0x0337293C MOV X19, X1
	0x03372940 MOV X20, X0
	0x03372944 TBNZ X8, 0x0, 0x337298C
	0x03372948 ADRP X0, 0xDB6000
	0x0337294C LDR X0, [X0 + 0x328]
	0x03372950 BL 0x1C16CF4
	0x03372954 ADRP X0, 0xDB6000
	0x03372958 LDR X0, [X0 + 0x548]
	0x0337295C BL 0x1C16CF4
	0x03372960 ADRP X0, 0xDB8000
	0x03372964 LDR X0, [X0 + 0xBB8]
	0x03372968 BL 0x1C16CF4
	0x0337296C ADRP X0, 0xDB6000
	0x03372970 LDR X0, [X0 + 0x310]
	0x03372974 BL 0x1C16CF4
	0x03372978 ADRP X0, 0xD81000
	0x0337297C LDR X0, [X0 + 0x6C0]
	0x03372980 BL 0x1C16CF4
	0x03372984 MOVZ W8, 0x1
	0x03372988 STRB W8, [X24 + 0xEFF]
	0x0337298C CBZ W19, 0x3372C78
	0x03372990 LDRH W8, [X20]
	0x03372994 CMP W8, 0x52
	0x03372998 B.HI 0x33729B0
	0x0337299C CMP W8, 0x4F
	0x033729A0 B.EQ 0x33729D4
	0x033729A4 CMP W8, 0x52
	0x033729A8 B.EQ 0x3372A20
	0x033729AC B 0x3372C08
	0x033729B0 SUB W9, W8, 0x6F
	0x033729B4 CMP W9, 0x6
	0x033729B8 B.HI 0x3372A78
	0x033729BC ADRP X8, 0xFFFFFFFFFD824000
	0x033729C0 ADD X8, X8, 0x7D6
	0x033729C4 ADR X10, 0x10
	0x033729C8 LDRB W11, [X8, X9, LSL]
	0x033729CC ADD X10, X10, X11, 0x2, LSL
	0x033729D0 BR X10
	0x033729D4 ADRP X8, 0xDB6000
	0x033729D8 LDR X8, [X8 + 0x310]
	0x033729DC LDR X0, [X8]
	0x033729E0 LDR W8, [X0 + 0xE0]
	0x033729E4 CBNZ W8, 0x33729EC
	0x033729E8 BL 0x1C16DFC
	0x033729EC MOV X0, X31
	0x033729F0 BL 0x3324660
	0x033729F4 STR X0, [X22]
	0x033729F8 ADRP X8, 0xDB6000
	0x033729FC LDR X8, [X8 + 0x328]
	0x03372A00 LDR X0, [X8]
	0x03372A04 LDR W8, [X0 + 0xE0]
	0x03372A08 CBNZ W8, 0x3372A10
	0x03372A0C BL 0x1C16DFC
	0x03372A10 MOV X0, X31
	0x03372A14 BL 0x3324B20
	0x03372A18 STR X0, [X21]
	0x03372A1C B 0x3372C08
	0x03372A20 ADRP X8, 0xDB6000
	0x03372A24 LDR X8, [X8 + 0x310]
	0x03372A28 LDR X0, [X8]
	0x03372A2C LDR W8, [X0 + 0xE0]
	0x03372A30 CBNZ W8, 0x3372A38
	0x03372A34 BL 0x1C16DFC
	0x03372A38 MOV X0, X31
	0x03372A3C BL 0x3324660
	0x03372A40 STR X0, [X22]
	0x03372A44 ADRP X8, 0xDB6000
	0x03372A48 LDR X8, [X8 + 0x328]
	0x03372A4C LDR X0, [X8]
	0x03372A50 LDR W8, [X0 + 0xE0]
	0x03372A54 CBNZ W8, 0x3372A5C
	0x03372A58 BL 0x1C16DFC
	0x03372A5C MOV X0, X31
	0x03372A60 BL 0x3324B20
	0x03372A64 STR X0, [X21]
	0x03372A68 LDR W8, [X23 + 0x24]
	0x03372A6C TBZ X8, 0xB, 0x3372C08
	0x03372A70 ORR W8, W8, 0x2000
	0x03372A74 B 0x3372C04
	0x03372A78 CMP W8, 0x55
	0x03372A7C B.NE 0x3372C08
	0x03372A80 ADRP X24, 0xDB6000

ISIL:
	001 Move [X31-96], D9
	002 Move [X31-88], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X23, 0x106B000
	014 Move X22, 0xDB7000
	015 Move W8, [X23+3826]
	016 Move X22, [X22+1264]
	017 Move X19, X2
	018 Move W20, W1
	019 Move X21, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0xDB7000
	025 Move X0, [X0+1264]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X23+3826], W8
	029 Move X0, [X22]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X25, 0x106B000
	035 Move W8, [X25+3847]
	036 Compare W8, 0
	037 JumpIfNotEqual {46}
	038 Move X0, 0xDB7000
	039 Move X0, [X0+1416]
	040 Call 0x1C17CF4
	041 Move X0, 0xDB7000
	042 Move X0, [X0+1264]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X25+3847], W8
	046 Move W8, [X21+16]
	047 Add W23, W8, 1
	048 Move [X21+16], W23
	049 Move X0, [X22]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move X0, X21
	055 Move X1, X31
	056 Call __DTString.get_Length, X0
	057 NotImplemented "Instruction CMP not yet implemented."
	058 NotImplemented "Instruction LDRSW not yet implemented."
	059 Move W9, [X21+8]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X23, 0xDB7000
	062 Move X23, [X23+1416]
	063 Move X9, [X21]
	064 Move X0, [X23]
	065 NotImplemented "Instruction LDRH not yet implemented."
	066 Move W10, [X0+224]
	067 Compare W10, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Subtract W8, W24, 48
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X0, [X22]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Move X0, X21
	078 Move X1, X31
	079 Call __DTString.GetDigit, X0
	080 NotImplemented "Instruction SCVTF not yet implemented."
	081 Move W26, 1
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move W24, 1
	084 Move [X19], D9
	085 Move D8, 8.000000000465661
	086 Move W24, 1
	087 Move X0, [X22]
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfNotEqual {92}
	091 Call 0x1C17DFC
	092 Move W8, [X25+3847]
	093 Compare W8, 0
	094 JumpIfNotEqual {100}
	095 Move X0, X23
	096 Call 0x1C17CF4
	097 Move X0, X22
	098 Call 0x1C17CF4
	099 Move [X25+3847], W26
	100 Move W8, [X21+16]
	101 Add W27, W8, 1
	102 Move [X21+16], W27
	103 Move X0, [X22]
	104 Move W8, [X0+224]
	105 Compare W8, 0
	106 JumpIfNotEqual {108}
	107 Call 0x1C17DFC
	108 Move X0, X21
	109 Move X1, X31
	110 Call __DTString.get_Length, X0
	111 NotImplemented "Instruction CMP not yet implemented."
	112 NotImplemented "Instruction LDRSW not yet implemented."
	113 Move W9, [X21+8]
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move X0, [X23]
	116 Move X9, [X21]
	117 Move W10, [X0+224]
	118 NotImplemented "Instruction LDRH not yet implemented."
	119 Compare W10, 0
	120 JumpIfNotEqual {122}
	121 Call 0x1C17DFC
	122 Subtract W8, W27, 48
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move X0, [X22]
	125 Move V9, [X19]
	126 Move W8, [X0+224]
	127 Compare W8, 0
	128 JumpIfNotEqual {130}
	129 Call 0x1C17DFC
	130 Move X0, X21
	131 Move X1, X31
	132 Call __DTString.GetDigit, X0
	133 Multiply D0, D9, D8
	134 NotImplemented "Instruction SCVTF not yet implemented."
	135 Add W24, W24, 1
	136 Add D9, D0, D1
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move [X19], D9
	139 Move W24, W20
	140 Move W8, [X21+16]
	141 Move W0, W31
	142 Subtract W8, W8, 1
	143 Move [X21+16], W8
	144 Move W8, [X21+16]
	145 Subtract W8, W8, 1
	146 Move [X21+16], W8
	147 Move V9, [X19]
	148 Move W0, W24
	149 Move X1, X31
	150 Call TimeSpanParse.Pow10, X0
	151 NotImplemented "Instruction SCVTF not yet implemented."
	152 NotImplemented "Instruction CMP not yet implemented."
	153 NotImplemented "Instruction FDIV not yet implemented."
	154 NotImplemented "Instruction CSET not yet implemented."
	155 Move [X19], D0
	156 Move X20, [X31+80]
	157 Move X19, [X31+88]
	158 Move X22, [X31+64]
	159 Move X21, [X31+72]
	160 Move X24, [X31+48]
	161 Move X23, [X31+56]
	162 Move X26, [X31+32]
	163 Move X25, [X31+40]
	164 Move X30, [X31+16]
	165 Move X27, [X31+24]
	166 Move D9, [X31+96]
	167 Move D8, [X31+104]
	168 Return X0
	169 Call 0x1C17F28

Method: System.Boolean ParseSign(ref System.__DTString str, ref System.Boolean result)

Disassembly:
	0x03372A84 LDR X24, [X24 + 0x310]
	0x03372A88 LDR X0, [X24]
	0x03372A8C LDR W8, [X0 + 0xE0]
	0x03372A90 CBNZ W8, 0x3372A98
	0x03372A94 BL 0x1C16DFC
	0x03372A98 MOV X0, X31
	0x03372A9C BL 0x3324660
	0x03372AA0 STR X0, [X22]
	0x03372AA4 LDR W8, [X23 + 0x24]
	0x03372AA8 STR X31, [X23 + 0x28]
	0x03372AAC ORR W8, W8, 0x300
	0x03372AB0 STR W8, [X23 + 0x24]
	0x03372AB4 LDR X8, [X21]
	0x03372AB8 CBZ X8, 0x3372C7C
	0x03372ABC LDR X0, [X8 + 0x78]
	0x03372AC0 CBZ X0, 0x3372C7C
	0x03372AC4 MOV X1, X31
	0x03372AC8 BL 0x33BE520
	0x03372ACC ADRP X8, 0xD81000
	0x03372AD0 LDR X8, [X8 + 0x6C0]
	0x03372AD4 ADRP X9, 0xDB8000
	0x03372AD8 MOV X22, X0
	0x03372ADC LDR X8, [X8]
	0x03372AE0 LDR X9, [X9 + 0xBB8]
	0x03372AE4 LDR W10, [X8 + 0xE0]
	0x03372AE8 LDR X23, [X9]
	0x03372AEC CBNZ W10, 0x3372AF8
	0x03372AF0 MOV X0, X8
	0x03372AF4 BL 0x1C16DFC
	0x03372AF8 MOV X0, X23
	0x03372AFC MOV X1, X31
	0x03372B00 BL 0x338C698
	0x03372B04 MOV X1, X0
	0x03372B08 MOV X0, X22
	0x03372B0C MOV X2, X31
	0x03372B10 BL 0x3395F0C
	0x03372B14 TBZ X0, 0x0, 0x3372C08
	0x03372B18 LDR X0, [X21]
	0x03372B1C CBZ X0, 0x3372C7C
	0x03372B20 MOV X1, X31
	0x03372B24 BL 0x3324F44
	0x03372B28 MOV X22, X0
	0x03372B2C CBZ X0, 0x3372C44
	0x03372B30 ADRP X8, 0xDB6000
	0x03372B34 LDR X8, [X8 + 0x328]
	0x03372B38 LDR X9, [X22]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x106B000
	007 Move X21, 0xDB7000
	008 Move W8, [X22+3827]
	009 Move X21, [X21+1264]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xDB7000
	017 Move X0, [X0+1264]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3827], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move X1, X31
	028 Call __DTString.GetNext, X0
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {46}
	033 Move X0, [X21]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X0, X20
	039 Move X1, X31
	040 Call __DTString.GetChar, X0
	041 And W8, W0, 0xFFFF
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move W0, 1
	045 Move [X19], W0
	046 Move W0, W31
	047 Move W0, 1
	048 Move [X19], W31
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X30, [X31+48]
	054 Return X0

Method: System.Boolean ParseTimeZoneOffset(ref System.__DTString str, System.Int32 len, ref System.TimeSpan result)

Disassembly:
	0x03372B3C LDR X1, [X8]
	0x03372B40 CMP X9, X1
	0x03372B44 B.NE 0x3372B5C
	0x03372B48 STR X22, [X21]
	0x03372B4C LDR X1, [X8]
	0x03372B50 LDR X8, [X22]
	0x03372B54 CMP X8, X1
	0x03372B58 B.EQ 0x3372C48
	0x03372B5C MOV X0, X22
	0x03372B60 BL 0x1C171E0
	0x03372B64 ADRP X8, 0xDB6000
	0x03372B68 LDR X8, [X8 + 0x328]
	0x03372B6C LDR X0, [X8]
	0x03372B70 LDR W8, [X0 + 0xE0]
	0x03372B74 CBNZ W8, 0x3372B7C
	0x03372B78 BL 0x1C16DFC
	0x03372B7C MOV X0, X31
	0x03372B80 BL 0x3324B20
	0x03372B84 STR X0, [X21]
	0x03372B88 ADRP X8, 0xDB6000
	0x03372B8C LDR X8, [X8 + 0x310]
	0x03372B90 LDR X0, [X8]
	0x03372B94 LDR W8, [X0 + 0xE0]
	0x03372B98 CBNZ W8, 0x3372BA0
	0x03372B9C BL 0x1C16DFC
	0x03372BA0 MOV X0, X31
	0x03372BA4 BL 0x3324660
	0x03372BA8 STR X0, [X22]
	0x03372BAC B 0x3372C08
	0x03372BB0 ADRP X8, 0xDB6000
	0x03372BB4 LDR X8, [X8 + 0x310]
	0x03372BB8 LDR X0, [X8]
	0x03372BBC LDR W8, [X0 + 0xE0]
	0x03372BC0 CBNZ W8, 0x3372BC8
	0x03372BC4 BL 0x1C16DFC
	0x03372BC8 MOV X0, X31
	0x03372BCC BL 0x3324660
	0x03372BD0 STR X0, [X22]
	0x03372BD4 ADRP X8, 0xDB6000
	0x03372BD8 LDR X8, [X8 + 0x328]
	0x03372BDC LDR X0, [X8]
	0x03372BE0 LDR W8, [X0 + 0xE0]
	0x03372BE4 CBNZ W8, 0x3372BEC
	0x03372BE8 BL 0x1C16DFC
	0x03372BEC MOV X0, X31
	0x03372BF0 BL 0x3324B20
	0x03372BF4 STR X0, [X21]
	0x03372BF8 LDR W8, [X23 + 0x24]
	0x03372BFC TBZ X8, 0xB, 0x3372C08
	0x03372C00 ORR W8, W8, 0x4000
	0x03372C04 STR W8, [X23 + 0x24]
	0x03372C08 ADRP X8, 0xDB6000
	0x03372C0C LDR X8, [X8 + 0x548]
	0x03372C10 LDR X21, [X21]
	0x03372C14 LDR X0, [X8]
	0x03372C18 LDR W8, [X0 + 0xE0]
	0x03372C1C CBNZ W8, 0x3372C24
	0x03372C20 BL 0x1C16DFC
	0x03372C24 MOV X0, X20
	0x03372C28 MOV X1, X19
	0x03372C2C MOV X2, X21
	0x03372C30 LDP X20, X19, [X31 + 0x30]
	0x03372C34 LDP X22, X21, [X31 + 0x20]
	0x03372C38 LDP X24, X23, [X31 + 0x10]
	0x03372C3C LDR X30, [X31], #0x40
	0x03372C40 B 0x3369664
	0x03372C44 STR X31, [X21]
	0x03372C48 LDR X0, [X24]
	0x03372C4C LDR W8, [X0 + 0xE0]
	0x03372C50 CBNZ W8, 0x3372C58
	0x03372C54 BL 0x1C16DFC
	0x03372C58 MOV X0, X31
	0x03372C5C BL 0x3324660
	0x03372C60 CBZ X22, 0x3372C7C
	0x03372C64 MOV X1, X0
	0x03372C68 MOV X0, X22
	0x03372C6C MOV X2, X31
	0x03372C70 BL 0x3324888
	0x03372C74 B 0x3372C08
	0x03372C78 BL 0x1C16F28
	0x03372C7C BL 0x1C16F20
	0x03372C80 STR X30, [X31 - 0x30]!
	0x03372C84 STP X22, X21, [X31 + 0x10]
	0x03372C88 STP X20, X19, [X31 + 0x20]
	0x03372C8C ADRP X21, 0x106A000
	0x03372C90 ADRP X22, 0xDB1000
	0x03372C94 LDRB W8, [X21 + 0xF00]
	0x03372C98 LDR X22, [X22 + 0xB60]
	0x03372C9C MOV X20, X1
	0x03372CA0 MOV X19, X0
	0x03372CA4 TBNZ X8, 0x0, 0x3372CD4
	0x03372CA8 ADRP X0, 0xDB1000
	0x03372CAC LDR X0, [X0 + 0xB60]
	0x03372CB0 BL 0x1C16CF4
	0x03372CB4 ADRP X0, 0xDB6000
	0x03372CB8 LDR X0, [X0 + 0x4F0]
	0x03372CBC BL 0x1C16CF4
	0x03372CC0 ADRP X0, 0xDB6000
	0x03372CC4 LDR X0, [X0 + 0x4C8]
	0x03372CC8 BL 0x1C16CF4
	0x03372CCC MOVZ W8, 0x1
	0x03372CD0 STRB W8, [X21 + 0xF00]
	0x03372CD4 LDR X8, [X22]
	0x03372CD8 LDR X8, [X8 + 0xB8]
	0x03372CDC LDRB W8, [X8 + 0x3]
	0x03372CE0 CBNZ W8, 0x3372D5C
	0x03372CE4 CBZ X20, 0x3372D84
	0x03372CE8 LDR X0, [X20 + 0x78]
	0x03372CEC CBZ X0, 0x3372D84
	0x03372CF0 LDR X8, [X0]
	0x03372CF4 LDP X9, X1, [X8 + 0x1A8]
	0x03372CF8 BLR X9
	0x03372CFC CMP W0, 0x3
	0x03372D00 B.NE 0x3372D5C

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X23, 0x106B000
	009 Move X22, 0xDB7000
	010 Move W8, [X23+3828]
	011 Move X22, [X22+1416]
	012 Move X19, X2
	013 Move W21, W1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {33}
	019 Move X0, 0xDB7000
	020 Move X0, [X0+1416]
	021 Call 0x1C17CF4
	022 Move X0, 0xD84000
	023 Move X0, [X0+1392]
	024 Call 0x1C17CF4
	025 Move X0, 0xDB7000
	026 Move X0, [X0+1264]
	027 Call 0x1C17CF4
	028 Move X0, 0xD8B000
	029 Move X0, [X0+2440]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X23+3828], W8
	033 Move X0, [X22]
	034 Move W8, 1
	035 Move [X31+20], W31
	036 Move [X31+24], W31
	037 Move [X31+28], W8
	038 Move W8, [X0+224]
	039 Subtract W23, W21, 1
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Add X1, X31, 28
	044 Move X0, X20
	045 Call DateTimeParse.ParseSign, X0, X1
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {134}
	051 Move X0, [X22]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Add X2, X31, 24
	057 Move X0, X20
	058 Move W1, W21
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {134}
	063 Move X0, [X22]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Add X2, X31, 24
	069 Move W1, 1
	070 Move X0, X20
	071 Call DateTimeParse.ParseDigits, X0, X1, X2
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {134}
	076 Move X8, 0xDB7000
	077 Move X8, [X8+1264]
	078 Move X0, [X8]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17DFC
	083 Move X8, 0xD8B000
	084 Move X8, [X8+2440]
	085 Move X0, X20
	086 Move X2, X31
	087 Move X1, [X8]
	088 Call __DTString.Match, X0, X1
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfEqual {96}
	093 Move W8, [X20+16]
	094 Subtract W8, W8, 1
	095 Move [X20+16], W8
	096 Move X0, [X22]
	097 Move W8, [X0+224]
	098 Compare W8, 0
	099 JumpIfNotEqual {101}
	100 Call 0x1C17DFC
	101 Add X2, X31, 20
	102 Move W1, 2
	103 Move X0, X20
	104 Call DateTimeParse.ParseDigits, X0, X1, X2
	105 Move TEMP, X0
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfNotEqual {134}
	109 Move W2, [X31+20]
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move W1, [X31+24]
	112 Add X0, X31, 8
	113 Move W3, W31
	114 Move X4, X31
	115 Move [X31+8], X31
	116 Call TimeSpan..ctor, X0, X1, X2, X3
	117 Move X8, [X31+8]
	118 Move [X19], X8
	119 Move W8, [X31+28]
	120 Compare W8, 0
	121 JumpIfNotEqual {133}
	122 Move X8, 0xD84000
	123 Move X8, [X8+1392]
	124 Move X0, [X8]
	125 Move W8, [X0+224]
	126 Compare W8, 0
	127 JumpIfNotEqual {129}
	128 Call 0x1C17DFC
	129 Move X0, X19
	130 Move X1, X31
	131 Call TimeSpan.Negate, X0
	132 Move [X19], X0
	133 Move W0, 1
	134 Move W0, W31
	135 Move X20, [X31+64]
	136 Move X19, [X31+72]
	137 Move X22, [X31+48]
	138 Move X21, [X31+56]
	139 Move X30, [X31+32]
	140 Move X23, [X31+40]
	141 Add X31, X31, 80
	142 Return X0

Method: System.Boolean MatchAbbreviatedMonthName(ref System.__DTString str, System.Globalization.DateTimeFormatInfo dtfi, ref System.Int32 result)

Disassembly:
	0x03372D04 ADRP X8, 0xDB6000
	0x03372D08 LDR X8, [X8 + 0x4F0]
	0x03372D0C LDR X0, [X8]
	0x03372D10 LDR W8, [X0 + 0xE0]
	0x03372D14 CBNZ W8, 0x3372D1C
	0x03372D18 BL 0x1C16DFC
	0x03372D1C MOV X0, X19
	0x03372D20 MOV X1, X31
	0x03372D24 BL 0x3374A74
	0x03372D28 TBZ X0, 0x0, 0x3372D5C
	0x03372D2C ADRP X8, 0xDB6000
	0x03372D30 LDR X8, [X8 + 0x4C8]
	0x03372D34 LDR X0, [X8]
	0x03372D38 CBZ X0, 0x3372D84
	0x03372D3C LDRH W20, [X19 + 0x14]
	0x03372D40 MOV W1, W31
	0x03372D44 MOV X2, X31
	0x03372D48 BL 0x3222A1C
	0x03372D4C CMP W20, W0, UXTH
	0x03372D50 B.NE 0x3372D70
	0x03372D54 MOVZ W0, 0x1
	0x03372D58 B 0x3372D60
	0x03372D5C MOV W0, W31
	0x03372D60 LDP X20, X19, [X31 + 0x20]
	0x03372D64 LDP X22, X21, [X31 + 0x10]
	0x03372D68 LDR X30, [X31], #0x30
	0x03372D6C RET
	0x03372D70 LDR W8, [X19 + 0x10]
	0x03372D74 MOV W0, W31
	0x03372D78 SUB W8, W8, 0x1
	0x03372D7C STR W8, [X19 + 0x10]
	0x03372D80 B 0x3372D60
	0x03372D84 BL 0x1C16F20
	0x03372D88 SUB X31, X31, 0xA0
	0x03372D8C STR X30, [X31 + 0x40]
	0x03372D90 STP X28, X27, [X31 + 0x50]
	0x03372D94 STP X26, X25, [X31 + 0x60]
	0x03372D98 STP X24, X23, [X31 + 0x70]
	0x03372D9C STP X22, X21, [X31 + 0x80]
	0x03372DA0 STP X20, X19, [X31 + 0x90]
	0x03372DA4 ADRP X24, 0x106A000
	0x03372DA8 ADRP X28, 0xDB6000
	0x03372DAC LDRB W8, [X24 + 0xF01]
	0x03372DB0 LDR X28, [X28 + 0x4F0]
	0x03372DB4 MOV X19, X4
	0x03372DB8 MOV X23, X3
	0x03372DBC MOV X21, X2
	0x03372DC0 MOV X22, X1
	0x03372DC4 MOV X20, X0
	0x03372DC8 TBNZ X8, 0x0, 0x3372E40
	0x03372DCC ADRP X0, 0xD83000
	0x03372DD0 LDR X0, [X0 + 0x170]
	0x03372DD4 BL 0x1C16CF4
	0x03372DD8 ADRP X0, 0xDB6000
	0x03372DDC LDR X0, [X0 + 0x588]
	0x03372DE0 BL 0x1C16CF4
	0x03372DE4 ADRP X0, 0xDB0000
	0x03372DE8 LDR X0, [X0 + 0x28]
	0x03372DEC BL 0x1C16CF4
	0x03372DF0 ADRP X0, 0xD83000
	0x03372DF4 LDR X0, [X0 + 0x570]
	0x03372DF8 BL 0x1C16CF4
	0x03372DFC ADRP X0, 0xDB6000
	0x03372E00 LDR X0, [X0 + 0x4F0]
	0x03372E04 BL 0x1C16CF4
	0x03372E08 ADRP X0, 0xDB6000
	0x03372E0C LDR X0, [X0 + 0x440]
	0x03372E10 BL 0x1C16CF4
	0x03372E14 ADRP X0, 0xDB6000
	0x03372E18 LDR X0, [X0 + 0x458]
	0x03372E1C BL 0x1C16CF4
	0x03372E20 ADRP X0, 0xDB6000
	0x03372E24 LDR X0, [X0 + 0x590]
	0x03372E28 BL 0x1C16CF4
	0x03372E2C ADRP X0, 0xDB8000
	0x03372E30 LDR X0, [X0 + 0xC90]
	0x03372E34 BL 0x1C16CF4
	0x03372E38 MOVZ W8, 0x1
	0x03372E3C STRB W8, [X24 + 0xF01]
	0x03372E40 LDR X0, [X28]
	0x03372E44 STP X31, X31, [X31 + 0x8]
	0x03372E48 STR X31, [X31 + 0x48]
	0x03372E4C STP X31, X31, [X31 + 0x30]
	0x03372E50 STP X31, X31, [X31 + 0x20]
	0x03372E54 STR W31, [X31 + 0x1C]
	0x03372E58 LDR W8, [X0 + 0xE0]
	0x03372E5C CBNZ W8, 0x3372E64
	0x03372E60 BL 0x1C16DFC
	0x03372E64 MOV X0, X22
	0x03372E68 MOV X1, X31
	0x03372E6C BL 0x3375C40
	0x03372E70 AND W8, W0, 0xFFFF
	0x03372E74 MOV W24, W0
	0x03372E78 CMP W8, 0x4B
	0x03372E7C B.HI 0x3372EE0
	0x03372E80 CMP W8, 0x2E
	0x03372E84 B.HI 0x3372F58
	0x03372E88 AND W8, W24, 0xFFFF
	0x03372E8C CMP W8, 0x25
	0x03372E90 B.HI 0x3373088
	0x03372E94 CMP W8, 0x20
	0x03372E98 B.EQ 0x33736A4
	0x03372E9C CMP W8, 0x22
	0x03372EA0 B.EQ 0x33732C8
	0x03372EA4 CMP W8, 0x25
	0x03372EA8 B.NE 0x3373780
	0x03372EAC LDR W9, [X22 + 0x8]
	0x03372EB0 LDR W8, [X22 + 0x10]
	0x03372EB4 SUB W10, W9, 0x1
	0x03372EB8 CMP W8, W10
	0x03372EBC B.GE 0x33739F0
	0x03372EC0 ADD W8, W8, 0x1
	0x03372EC4 CMP W8, W9
	0x03372EC8 B.CS 0x3373EC4
	0x03372ECC LDR X1, [X22]
	0x03372ED0 LDRH W8, [X1, W8, SXTW]
	0x03372ED4 CMP W8, 0x25
	0x03372ED8 B.EQ 0x33739F4
	0x03372EDC B 0x3373E9C

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x106B000
	011 Move X25, 0xDB7000
	012 Move W8, [X22+3829]
	013 Move X25, [X25+1264]
	014 Move X20, X2
	015 Move X21, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0xDB7000
	022 Move X0, [X0+1264]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+3829], W8
	026 Move TEMP, 0
	027 Not TEMP
	028 Move W8, TEMP
	029 Move [X31+8], X31
	030 Move [X20], W8
	031 Move X0, [X25]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X0, X19
	037 Move X1, X31
	038 Call __DTString.GetNext, X0
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {136}
	043 Compare X21, 0
	044 JumpIfEqual {155}
	045 Move W1, 13
	046 Move X0, X21
	047 Move X2, X31
	048 Move W22, 13
	049 Call DateTimeFormatInfo.GetMonthName, X0, X1
	050 Compare X0, 0
	051 JumpIfEqual {155}
	052 Move W8, [X0+16]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 NotImplemented "Instruction CINC not yet implemented."
	055 Move W22, 1
	056 Move X0, X21
	057 Move W1, W22
	058 Move X2, X31
	059 Call DateTimeFormatInfo.GetAbbreviatedMonthName, X0, X1
	060 Compare X0, 0
	061 JumpIfEqual {155}
	062 Move W8, [X0+16]
	063 Move X23, X0
	064 Move X0, X21
	065 Move X1, X31
	066 Move [X31+8], W8
	067 Call DateTimeFormatInfo.get_HasSpacesInMonthNames, X0
	068 Move X8, [X25]
	069 Move W24, W0
	070 Move W9, [X8+224]
	071 Compare W9, 0
	072 JumpIfEqual {87}
	073 Move TEMP, X24
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {93}
	077 Add X3, X31, 8
	078 Move X0, X19
	079 Move X1, X23
	080 Move W2, W31
	081 Move X4, X31
	082 Call __DTString.MatchSpecifiedWords, X0, X1, X2, X3
	083 Move TEMP, X0
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfEqual {101}
	087 Move X0, X8
	088 Call 0x1C17DFC
	089 Move TEMP, X24
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfEqual {77}
	093 Move X0, X19
	094 Move X1, X23
	095 Move X2, X31
	096 Call 0x337554C
	097 Move TEMP, X0
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfNotEqual {106}
	101 Move W8, [X31+8]
	102 Move W9, [X31+12]
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move [X31+12], W8
	105 Move [X20], W22
	106 Add W22, W22, 1
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move X0, X21
	109 Move X1, X31
	110 Call DateTimeFormatInfo.get_FormatFlags, X0
	111 Move TEMP, X0
	112 And TEMP, TEMP, 2
	113 Compare TEMP, 2
	114 JumpIfNotEqual {136}
	115 Move X0, X21
	116 Move X1, X31
	117 Call DateTimeFormatInfo.internalGetLeapYearMonthNames, X0
	118 Move X8, [X25]
	119 Move X21, X0
	120 Move W9, [X8+224]
	121 Compare W9, 0
	122 JumpIfNotEqual {125}
	123 Move X0, X8
	124 Call 0x1C17DFC
	125 Add X2, X31, 12
	126 Move X0, X19
	127 Move X1, X21
	128 Move X3, X31
	129 Call __DTString.MatchLongestWords, X0, X1, X2
	130 Move TEMP, X0
	131 And TEMP, TEMP, -2147483648
	132 Compare TEMP, -2147483648
	133 JumpIfEqual {136}
	134 Add W8, W0, 1
	135 Move [X20], W8
	136 Move W8, [X20]
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move W9, [X19+16]
	139 Move W10, [X31+12]
	140 Add W9, W9, W10
	141 Subtract W9, W9, 1
	142 Move [X19+16], W9
	143 Move X20, [X31+64]
	144 Move X19, [X31+72]
	145 Move X22, [X31+48]
	146 Move X21, [X31+56]
	147 Move X24, [X31+32]
	148 Move X23, [X31+40]
	149 Move X26, [X31+16]
	150 Move X25, [X31+24]
	151 NotImplemented "Instruction CMP not yet implemented."
	152 NotImplemented "Instruction CSET not yet implemented."
	153 Move X30, [X31+80]
	154 Return X0
	155 Call 0x1C17F20

Method: System.Boolean MatchMonthName(ref System.__DTString str, System.Globalization.DateTimeFormatInfo dtfi, ref System.Int32 result)

Disassembly:
	0x03372EE0 CMP W8, 0x68
	0x03372EE4 B.HI 0x3372FF0
	0x03372EE8 AND W8, W24, 0xFFFF
	0x03372EEC CMP W8, 0x5A
	0x03372EF0 B.HI 0x3373120
	0x03372EF4 CMP W8, 0x4D
	0x03372EF8 B.EQ 0x33734E0
	0x03372EFC CMP W8, 0x5A
	0x03372F00 B.NE 0x3373780
	0x03372F04 LDR W8, [X19 + 0x24]
	0x03372F08 TBZ X8, 0x8, 0x3373D2C
	0x03372F0C ADRP X22, 0xD83000
	0x03372F10 LDR X22, [X22 + 0x570]
	0x03372F14 LDR X21, [X19 + 0x28]
	0x03372F18 LDR X0, [X22]
	0x03372F1C LDR W8, [X0 + 0xE0]
	0x03372F20 CBNZ W8, 0x3372F2C
	0x03372F24 BL 0x1C16DFC
	0x03372F28 LDR X0, [X22]
	0x03372F2C LDR X8, [X0 + 0xB8]
	0x03372F30 MOV X0, X21
	0x03372F34 MOV X2, X31
	0x03372F38 LDR X1, [X8]
	0x03372F3C BL 0x3394CE4
	0x03372F40 TBZ X0, 0x0, 0x3373D28
	0x03372F44 ADRP X8, 0xD83000
	0x03372F48 LDR X8, [X8 + 0x170]
	0x03372F4C LDR X0, [X8]
	0x03372F50 MOVZ W8, 0x5A
	0x03372F54 B 0x3373C4C
	0x03372F58 AND W8, W24, 0xFFFF
	0x03372F5C CMP W8, 0x3A
	0x03372F60 B.HI 0x33731A8
	0x03372F64 CMP W8, 0x2F
	0x03372F68 B.EQ 0x3373544
	0x03372F6C CMP W8, 0x3A
	0x03372F70 B.NE 0x3373780
	0x03372F74 CBZ X23, 0x3373EC0
	0x03372F78 MOV X0, X23
	0x03372F7C MOV X1, X31
	0x03372F80 BL 0x3325A54
	0x03372F84 CBZ X0, 0x3373EC0
	0x03372F88 LDR W8, [X0 + 0x10]
	0x03372F8C CMP W8, 0x2
	0x03372F90 B.LT 0x3372FBC
	0x03372F94 MOV X0, X23
	0x03372F98 MOV X1, X31
	0x03372F9C BL 0x3325A54
	0x03372FA0 CBZ X0, 0x3373EC0
	0x03372FA4 MOV W1, W31
	0x03372FA8 MOV X2, X31
	0x03372FAC BL 0x3222A1C
	0x03372FB0 AND W8, W0, 0xFFFF
	0x03372FB4 CMP W8, 0x3A
	0x03372FB8 B.EQ 0x3372FE0
	0x03372FBC LDR X0, [X28]
	0x03372FC0 LDR W8, [X0 + 0xE0]
	0x03372FC4 CBNZ W8, 0x3372FCC
	0x03372FC8 BL 0x1C16DFC
	0x03372FCC MOVZ W1, 0x3A
	0x03372FD0 MOV X0, X20
	0x03372FD4 MOV X2, X31
	0x03372FD8 BL 0x33758BC
	0x03372FDC TBNZ X0, 0x0, 0x3373E9C
	0x03372FE0 MOV X0, X23
	0x03372FE4 MOV X1, X31
	0x03372FE8 BL 0x3325A54
	0x03372FEC B 0x33735BC
	0x03372FF0 AND W8, W24, 0xFFFF
	0x03372FF4 CMP W8, 0x73
	0x03372FF8 B.HI 0x3373234
	0x03372FFC CMP W8, 0x6D
	0x03373000 B.EQ 0x33735E0
	0x03373004 CMP W8, 0x73
	0x03373008 B.NE 0x3373780
	0x0337300C LDR X0, [X28]
	0x03373010 LDR W8, [X0 + 0xE0]
	0x03373014 CBNZ W8, 0x337301C
	0x03373018 BL 0x1C16DFC
	0x0337301C MOV X0, X22
	0x03373020 MOV X1, X31
	0x03373024 BL 0x3375A88
	0x03373028 ADRP X22, 0xDB5000
	0x0337302C LDR X22, [X22 + 0x588]
	0x03373030 MOV W8, W0
	0x03373034 STR W8, [X31 + 0x4C]
	0x03373038 CMP W8, 0x2
	0x0337303C LDR X0, [X22]
	0x03373040 MOVZ W8, 0x1
	0x03373044 CINC W21, W8, GE
	0x03373048 LDR W9, [X0 + 0xE0]
	0x0337304C CBNZ W9, 0x3373054
	0x03373050 BL 0x1C16DFC
	0x03373054 ADD X2, X31, 0x28
	0x03373058 MOV X0, X20
	0x0337305C MOV W1, W21
	0x03373060 BL 0x33714E0
	0x03373064 TBZ X0, 0x0, 0x3373848
	0x03373068 LDR X0, [X22]
	0x0337306C LDR W20, [X31 + 0x28]
	0x03373070 ADD X21, X19, 0x14
	0x03373074 LDR W8, [X0 + 0xE0]
	0x03373078 CBNZ W8, 0x3373080
	0x0337307C BL 0x1C16DFC
	0x03373080 MOVZ W2, 0x73
	0x03373084 B 0x3373E64
	0x03373088 CMP W8, 0x27
	0x0337308C B.EQ 0x33732C8
	0x03373090 CMP W8, 0x2E
	0x03373094 B.NE 0x3373780
	0x03373098 LDR X0, [X28]
	0x0337309C LDR W8, [X0 + 0xE0]
	0x033730A0 CBNZ W8, 0x33730A8
	0x033730A4 BL 0x1C16DFC
	0x033730A8 MOVZ W1, 0x2E
	0x033730AC MOV X0, X20
	0x033730B0 MOV X2, X31
	0x033730B4 BL 0x33758BC
	0x033730B8 TBNZ X0, 0x0, 0x3373E9C
	0x033730BC LDR X0, [X28]
	0x033730C0 LDR W8, [X0 + 0xE0]
	0x033730C4 CBNZ W8, 0x33730CC
	0x033730C8 BL 0x1C16DFC
	0x033730CC MOV X0, X22
	0x033730D0 MOV X1, X31
	0x033730D4 BL 0x3374A74
	0x033730D8 TBZ X0, 0x0, 0x3373848
	0x033730DC LDR X0, [X28]
	0x033730E0 LDR W8, [X0 + 0xE0]
	0x033730E4 CBNZ W8, 0x33730EC
	0x033730E8 BL 0x1C16DFC
	0x033730EC MOVZ W1, 0x46
	0x033730F0 MOV X0, X22
	0x033730F4 MOV X2, X31
	0x033730F8 BL 0x33758BC
	0x033730FC TBZ X0, 0x0, 0x3373848
	0x03373100 LDR X0, [X28]
	0x03373104 LDR W8, [X0 + 0xE0]
	0x03373108 CBNZ W8, 0x3373110
	0x0337310C BL 0x1C16DFC

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x106B000
	011 Move X25, 0xDB7000
	012 Move W8, [X22+3830]
	013 Move X25, [X25+1264]
	014 Move X20, X2
	015 Move X21, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0xDB7000
	022 Move X0, [X0+1264]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+3830], W8
	026 Move TEMP, 0
	027 Not TEMP
	028 Move W8, TEMP
	029 Move [X31+8], X31
	030 Move [X20], W8
	031 Move X0, [X25]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X0, X19
	037 Move X1, X31
	038 Call __DTString.GetNext, X0
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {164}
	043 Compare X21, 0
	044 JumpIfEqual {183}
	045 Move W1, 13
	046 Move X0, X21
	047 Move X2, X31
	048 Move W22, 13
	049 Call DateTimeFormatInfo.GetMonthName, X0, X1
	050 Compare X0, 0
	051 JumpIfEqual {183}
	052 Move W8, [X0+16]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 NotImplemented "Instruction CINC not yet implemented."
	055 Move W22, 1
	056 Move X0, X21
	057 Move W1, W22
	058 Move X2, X31
	059 Call DateTimeFormatInfo.GetMonthName, X0, X1
	060 Compare X0, 0
	061 JumpIfEqual {183}
	062 Move W8, [X0+16]
	063 Move X23, X0
	064 Move X0, X21
	065 Move X1, X31
	066 Move [X31+8], W8
	067 Call DateTimeFormatInfo.get_HasSpacesInMonthNames, X0
	068 Move X8, [X25]
	069 Move W24, W0
	070 Move W9, [X8+224]
	071 Compare W9, 0
	072 JumpIfEqual {87}
	073 Move TEMP, X24
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {93}
	077 Add X3, X31, 8
	078 Move X0, X19
	079 Move X1, X23
	080 Move W2, W31
	081 Move X4, X31
	082 Call __DTString.MatchSpecifiedWords, X0, X1, X2, X3
	083 Move TEMP, X0
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfEqual {101}
	087 Move X0, X8
	088 Call 0x1C17DFC
	089 Move TEMP, X24
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfEqual {77}
	093 Move X0, X19
	094 Move X1, X23
	095 Move X2, X31
	096 Call 0x337554C
	097 Move TEMP, X0
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfNotEqual {106}
	101 Move W8, [X31+8]
	102 Move W9, [X31+12]
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move [X31+12], W8
	105 Move [X20], W22
	106 Add W22, W22, 1
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move X0, X21
	109 Move X1, X31
	110 Call DateTimeFormatInfo.get_FormatFlags, X0
	111 Move TEMP, X0
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfNotEqual {136}
	115 Move X0, X21
	116 Move X1, X31
	117 Call DateTimeFormatInfo.get_MonthGenitiveNames, X0
	118 Move X8, [X25]
	119 Move X22, X0
	120 Move W9, [X8+224]
	121 Compare W9, 0
	122 JumpIfNotEqual {125}
	123 Move X0, X8
	124 Call 0x1C17DFC
	125 Add X2, X31, 12
	126 Move X0, X19
	127 Move X1, X22
	128 Move X3, X31
	129 Call __DTString.MatchLongestWords, X0, X1, X2
	130 Move TEMP, X0
	131 And TEMP, TEMP, -2147483648
	132 Compare TEMP, -2147483648
	133 JumpIfEqual {136}
	134 Add W8, W0, 1
	135 Move [X20], W8
	136 Move X0, X21
	137 Move X1, X31
	138 Call DateTimeFormatInfo.get_FormatFlags, X0
	139 Move TEMP, X0
	140 And TEMP, TEMP, 2
	141 Compare TEMP, 2
	142 JumpIfNotEqual {164}
	143 Move X0, X21
	144 Move X1, X31
	145 Call DateTimeFormatInfo.internalGetLeapYearMonthNames, X0
	146 Move X8, [X25]
	147 Move X21, X0
	148 Move W9, [X8+224]
	149 Compare W9, 0
	150 JumpIfNotEqual {153}
	151 Move X0, X8
	152 Call 0x1C17DFC
	153 Add X2, X31, 12
	154 Move X0, X19
	155 Move X1, X21
	156 Move X3, X31
	157 Call __DTString.MatchLongestWords, X0, X1, X2
	158 Move TEMP, X0
	159 And TEMP, TEMP, -2147483648
	160 Compare TEMP, -2147483648
	161 JumpIfEqual {164}
	162 Add W8, W0, 1
	163 Move [X20], W8
	164 Move W8, [X20]
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Move W9, [X19+16]
	167 Move W10, [X31+12]
	168 Add W9, W9, W10
	169 Subtract W9, W9, 1
	170 Move [X19+16], W9
	171 Move X20, [X31+64]
	172 Move X19, [X31+72]
	173 Move X22, [X31+48]
	174 Move X21, [X31+56]
	175 Move X24, [X31+32]
	176 Move X23, [X31+40]
	177 Move X26, [X31+16]
	178 Move X25, [X31+24]
	179 NotImplemented "Instruction CMP not yet implemented."
	180 NotImplemented "Instruction CSET not yet implemented."
	181 Move X30, [X31+80]
	182 Return X0
	183 Call 0x1C17F20

Method: System.Boolean MatchAbbreviatedDayName(ref System.__DTString str, System.Globalization.DateTimeFormatInfo dtfi, ref System.Int32 result)

Disassembly:
	0x03373110 MOV X0, X22
	0x03373114 MOV X1, X31
	0x03373118 BL 0x3375A88
	0x0337311C B 0x3373E9C
	0x03373120 SUB W9, W8, 0x64
	0x03373124 CMP W9, 0x4
	0x03373128 B.HI 0x3373730
	0x0337312C ADRP X8, 0xFFFFFFFFFD823000
	0x03373130 ADD X8, X8, 0x7DE
	0x03373134 ADR X10, 0x10
	0x03373138 LDRH W11, [X8, X9, LSL #1]
	0x0337313C ADD X10, X10, X11, 0x2, LSL
	0x03373140 BR X10
	0x03373144 LDR X0, [X28]
	0x03373148 LDR W8, [X0 + 0xE0]
	0x0337314C CBNZ W8, 0x3373154
	0x03373150 BL 0x1C16DFC
	0x03373154 MOV X0, X22
	0x03373158 MOV X1, X31
	0x0337315C BL 0x3375A88
	0x03373160 MOV W22, W0
	0x03373164 CMP W0, 0x2
	0x03373168 STR W0, [X31 + 0x4C]
	0x0337316C B.LE 0x3373CBC
	0x03373170 ADRP X24, 0xDB5000
	0x03373174 LDR X24, [X24 + 0x588]
	0x03373178 LDR X0, [X24]
	0x0337317C LDR W8, [X0 + 0xE0]
	0x03373180 CBNZ W8, 0x3373188
	0x03373184 BL 0x1C16DFC
	0x03373188 ADD X2, X31, 0x34
	0x0337318C MOV X0, X20
	0x03373190 MOV X1, X23
	0x03373194 CMP W22, 0x3
	0x03373198 B.NE 0x3373E40
	0x0337319C BL 0x3372110
	0x033731A0 TBZ X0, 0x0, 0x3373848
	0x033731A4 B 0x3373E48
	0x033731A8 CMP W8, 0x46
	0x033731AC B.EQ 0x3373464
	0x033731B0 CMP W8, 0x48
	0x033731B4 B.EQ 0x337385C
	0x033731B8 CMP W8, 0x4B
	0x033731BC B.NE 0x3373780
	0x033731C0 LDR X0, [X28]
	0x033731C4 LDR W8, [X0 + 0xE0]
	0x033731C8 CBNZ W8, 0x33731D0
	0x033731CC BL 0x1C16DFC
	0x033731D0 MOVZ W1, 0x5A
	0x033731D4 MOV X0, X20
	0x033731D8 MOV X2, X31
	0x033731DC BL 0x33758BC
	0x033731E0 TBZ X0, 0x0, 0x3373B6C
	0x033731E4 LDR W8, [X19 + 0x24]
	0x033731E8 TBZ X8, 0x8, 0x3373228
	0x033731EC ADRP X21, 0xD82000
	0x033731F0 LDR X21, [X21 + 0x570]
	0x033731F4 LDR X20, [X19 + 0x28]
	0x033731F8 LDR X0, [X21]
	0x033731FC LDR W8, [X0 + 0xE0]
	0x03373200 CBNZ W8, 0x337320C
	0x03373204 BL 0x1C16DFC
	0x03373208 LDR X0, [X21]
	0x0337320C LDR X8, [X0 + 0xB8]
	0x03373210 MOV X0, X20
	0x03373214 MOV X2, X31
	0x03373218 LDR X1, [X8]
	0x0337321C BL 0x3394CE4
	0x03373220 TBNZ X0, 0x0, 0x3373C3C
	0x03373224 LDR W8, [X19 + 0x24]
	0x03373228 ORR W8, W8, 0x300
	0x0337322C STR X31, [X19 + 0x28]
	0x03373230 B 0x3373E98
	0x03373234 CMP W8, 0x74
	0x03373238 B.EQ 0x33738D8
	0x0337323C CMP W8, 0x7A
	0x03373240 B.EQ 0x3373938
	0x03373244 CMP W8, 0x79
	0x03373248 B.NE 0x3373780
	0x0337324C LDR X0, [X28]
	0x03373250 LDR W8, [X0 + 0xE0]
	0x03373254 CBNZ W8, 0x337325C
	0x03373258 BL 0x1C16DFC
	0x0337325C MOV X0, X22
	0x03373260 MOV X1, X31
	0x03373264 BL 0x3375A88
	0x03373268 ADRP X24, 0xDB5000
	0x0337326C LDR X24, [X24 + 0x588]
	0x03373270 STR W0, [X31 + 0x4C]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x106A000
	011 Move X25, 0xDB6000
	012 Move W8, [X22+3831]
	013 Move X25, [X25+1264]
	014 Move X20, X2
	015 Move X21, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0xDB6000
	022 Move X0, [X0+1264]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+3831], W8
	026 Move TEMP, 0
	027 Not TEMP
	028 Move W8, TEMP
	029 Move [X31+12], W31
	030 Move [X20], W8
	031 Move X0, [X25]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X0, X19
	037 Move X1, X31
	038 Call __DTString.GetNext, X0
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {98}
	043 Compare X21, 0
	044 JumpIfEqual {122}
	045 Move W26, W31
	046 Move W22, W31
	047 Move X0, X21
	048 Move W1, W22
	049 Move X2, X31
	050 Call DateTimeFormatInfo.GetAbbreviatedDayName, X0, X1
	051 Compare X0, 0
	052 JumpIfEqual {122}
	053 Move W8, [X0+16]
	054 Move X23, X0
	055 Move X0, X21
	056 Move X1, X31
	057 Move [X31+12], W8
	058 Call DateTimeFormatInfo.get_HasSpacesInDayNames, X0
	059 Move X8, [X25]
	060 Move W24, W0
	061 Move W9, [X8+224]
	062 Compare W9, 0
	063 JumpIfEqual {78}
	064 Move TEMP, X24
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {84}
	068 Add X3, X31, 12
	069 Move X0, X19
	070 Move X1, X23
	071 Move W2, W31
	072 Move X4, X31
	073 Call __DTString.MatchSpecifiedWords, X0, X1, X2, X3
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfEqual {92}
	078 Move X0, X8
	079 Call 0x1C17DFC
	080 Move TEMP, X24
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfEqual {68}
	084 Move X0, X19
	085 Move X1, X23
	086 Move X2, X31
	087 Call 0x337554C
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfNotEqual {96}
	092 Move W8, [X31+12]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move W26, W8
	095 Move [X20], W22
	096 Add W22, W22, 1
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move W26, W31
	099 Move W8, [X20]
	100 Move TEMP, X8
	101 And TEMP, TEMP, -2147483648
	102 Compare TEMP, -2147483648
	103 JumpIfEqual {108}
	104 Move W9, [X19+16]
	105 Add W9, W26, W9
	106 Subtract W9, W9, 1
	107 Move [X19+16], W9
	108 Move X20, [X31+64]
	109 Move X19, [X31+72]
	110 Move X22, [X31+48]
	111 Move X21, [X31+56]
	112 Move X24, [X31+32]
	113 Move X23, [X31+40]
	114 Move X26, [X31+16]
	115 Move X25, [X31+24]
	116 NotImplemented "Instruction ORN not yet implemented."
	117 Move W0, W8
	118 ShiftRight W0, 31
	119 And W0, W0, 0x7FFFFFFF
	120 Move X30, [X31+80]
	121 Return X0
	122 Call 0x1C17F20

Method: System.Boolean MatchDayName(ref System.__DTString str, System.Globalization.DateTimeFormatInfo dtfi, ref System.Int32 result)

Disassembly:
	0x03373274 MOV W22, W0
	0x03373278 LDR X8, [X24]
	0x0337327C LDR W9, [X8 + 0xE0]
	0x03373280 CBNZ W9, 0x337328C
	0x03373284 MOV X0, X8
	0x03373288 BL 0x1C16DFC
	0x0337328C MOV X0, X20
	0x03373290 MOV X1, X23
	0x03373294 MOV X2, X31
	0x03373298 BL 0x337465C
	0x0337329C TBZ X0, 0x0, 0x3373C7C
	0x033732A0 MOVZ W8, 0x1
	0x033732A4 STR W8, [X31 + 0x48]
	0x033732A8 LDR X0, [X24]
	0x033732AC LDR W20, [X31 + 0x48]
	0x033732B0 LDR W8, [X0 + 0xE0]
	0x033732B4 CBNZ W8, 0x33732BC
	0x033732B8 BL 0x1C16DFC
	0x033732BC MOVZ W2, 0x79
	0x033732C0 MOV X0, X19
	0x033732C4 B 0x3373E68
	0x033732C8 MOVZ W0, 0x10
	0x033732CC MOV X1, X31
	0x033732D0 BL 0x3235A9C
	0x033732D4 ADRP X8, 0xDB5000
	0x033732D8 LDR X8, [X8 + 0x588]
	0x033732DC LDP X25, X26, [X22]
	0x033732E0 LDR W27, [X22 + 0x10]
	0x033732E4 MOV X23, X0
	0x033732E8 LDR X8, [X8]
	0x033732EC LDR W9, [X8 + 0xE0]
	0x033732F0 CBNZ W9, 0x33732FC
	0x033732F4 MOV X0, X8
	0x033732F8 BL 0x1C16DFC
	0x033732FC ADD X4, X31, 0x4C
	0x03373300 MOV X0, X25
	0x03373304 MOV X1, X26
	0x03373308 MOV W2, W27
	0x0337330C MOV X3, X23
	0x03373310 BL 0x3373EC8
	0x03373314 TBZ X0, 0x0, 0x337365C
	0x03373318 LDR W8, [X22 + 0x10]
	0x0337331C LDR W9, [X31 + 0x4C]
	0x03373320 MOV X0, X23
	0x03373324 MOV X1, X31
	0x03373328 ADD W8, W8, W9
	0x0337332C SUB W8, W8, 0x1
	0x03373330 STR W8, [X22 + 0x10]
	0x03373334 BL 0x3235BE8
	0x03373338 CBZ X0, 0x3373EC0
	0x0337333C LDR W8, [X0 + 0x10]
	0x03373340 MOV X22, X0
	0x03373344 CMP W8, 0x1
	0x03373348 B.LT 0x33733E0
	0x0337334C MOV W23, W31
	0x03373350 MOV X0, X22
	0x03373354 MOV W1, W23
	0x03373358 MOV X2, X31
	0x0337335C BL 0x3222A1C
	0x03373360 AND W8, W0, 0xFFFF
	0x03373364 CMP W8, 0x20
	0x03373368 B.NE 0x3373394
	0x0337336C LDRB W8, [X21 + 0x12]
	0x03373370 CBZ W8, 0x3373394
	0x03373374 LDR X0, [X28]
	0x03373378 LDR W8, [X0 + 0xE0]
	0x0337337C CBNZ W8, 0x3373384
	0x03373380 BL 0x1C16DFC
	0x03373384 MOV X0, X20
	0x03373388 MOV X1, X31
	0x0337338C BL 0x3375C94
	0x03373390 B 0x33733D0
	0x03373394 MOV X0, X22
	0x03373398 MOV W1, W23
	0x0337339C MOV X2, X31
	0x033733A0 BL 0x3222A1C
	0x033733A4 LDR X8, [X28]
	0x033733A8 MOV W24, W0
	0x033733AC LDR W9, [X8 + 0xE0]
	0x033733B0 CBNZ W9, 0x33733BC
	0x033733B4 MOV X0, X8
	0x033733B8 BL 0x1C16DFC
	0x033733BC MOV X0, X20
	0x033733C0 MOV W1, W24
	0x033733C4 MOV X2, X31
	0x033733C8 BL 0x33758BC
	0x033733CC TBZ X0, 0x0, 0x3373848
	0x033733D0 LDR W8, [X22 + 0x10]
	0x033733D4 ADD W23, W23, 0x1

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x106A000
	011 Move X25, 0xDB6000
	012 Move W8, [X22+3832]
	013 Move X25, [X25+1264]
	014 Move X20, X2
	015 Move X21, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0xDB6000
	022 Move X0, [X0+1264]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+3832], W8
	026 Move TEMP, 0
	027 Not TEMP
	028 Move W8, TEMP
	029 Move [X31+12], W31
	030 Move [X20], W8
	031 Move X0, [X25]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X0, X19
	037 Move X1, X31
	038 Call __DTString.GetNext, X0
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {98}
	043 Compare X21, 0
	044 JumpIfEqual {122}
	045 Move W26, W31
	046 Move W22, W31
	047 Move X0, X21
	048 Move W1, W22
	049 Move X2, X31
	050 Call DateTimeFormatInfo.GetDayName, X0, X1
	051 Compare X0, 0
	052 JumpIfEqual {122}
	053 Move W8, [X0+16]
	054 Move X23, X0
	055 Move X0, X21
	056 Move X1, X31
	057 Move [X31+12], W8
	058 Call DateTimeFormatInfo.get_HasSpacesInDayNames, X0
	059 Move X8, [X25]
	060 Move W24, W0
	061 Move W9, [X8+224]
	062 Compare W9, 0
	063 JumpIfEqual {78}
	064 Move TEMP, X24
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {84}
	068 Add X3, X31, 12
	069 Move X0, X19
	070 Move X1, X23
	071 Move W2, W31
	072 Move X4, X31
	073 Call __DTString.MatchSpecifiedWords, X0, X1, X2, X3
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfEqual {92}
	078 Move X0, X8
	079 Call 0x1C17DFC
	080 Move TEMP, X24
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfEqual {68}
	084 Move X0, X19
	085 Move X1, X23
	086 Move X2, X31
	087 Call 0x337554C
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfNotEqual {96}
	092 Move W8, [X31+12]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move W26, W8
	095 Move [X20], W22
	096 Add W22, W22, 1
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move W26, W31
	099 Move W8, [X20]
	100 Move TEMP, X8
	101 And TEMP, TEMP, -2147483648
	102 Compare TEMP, -2147483648
	103 JumpIfEqual {108}
	104 Move W9, [X19+16]
	105 Add W9, W26, W9
	106 Subtract W9, W9, 1
	107 Move [X19+16], W9
	108 Move X20, [X31+64]
	109 Move X19, [X31+72]
	110 Move X22, [X31+48]
	111 Move X21, [X31+56]
	112 Move X24, [X31+32]
	113 Move X23, [X31+40]
	114 Move X26, [X31+16]
	115 Move X25, [X31+24]
	116 NotImplemented "Instruction ORN not yet implemented."
	117 Move W0, W8
	118 ShiftRight W0, 31
	119 And W0, W0, 0x7FFFFFFF
	120 Move X30, [X31+80]
	121 Return X0
	122 Call 0x1C17F20

Method: System.Boolean MatchEraName(ref System.__DTString str, System.Globalization.DateTimeFormatInfo dtfi, ref System.Int32 result)

Disassembly:
	0x033733D8 CMP W23, W8
	0x033733DC B.LT 0x3373350
	0x033733E0 LDR W8, [X19 + 0x24]
	0x033733E4 TBZ X8, 0xB, 0x3373E9C
	0x033733E8 TBZ X8, 0xD, 0x337340C
	0x033733EC ADRP X8, 0xDB5000
	0x033733F0 LDR X8, [X8 + 0x458]
	0x033733F4 MOV X0, X22
	0x033733F8 MOV X2, X31
	0x033733FC LDR X1, [X8]
	0x03373400 BL 0x321BA08
	0x03373404 LDR W8, [X19 + 0x24]
	0x03373408 TBNZ X0, 0x0, 0x3373430
	0x0337340C TBZ X8, 0xE, 0x3373E9C
	0x03373410 ADRP X8, 0xDB5000
	0x03373414 LDR X8, [X8 + 0x440]
	0x03373418 MOV X0, X22
	0x0337341C MOV X2, X31
	0x03373420 LDR X1, [X8]
	0x03373424 BL 0x321BA08
	0x03373428 TBZ X0, 0x0, 0x3373E9C
	0x0337342C LDR W8, [X19 + 0x24]
	0x03373430 ORR W8, W8, 0x100
	0x03373434 STR W8, [X19 + 0x24]
	0x03373438 ADRP X20, 0xD82000
	0x0337343C LDR X20, [X20 + 0x570]
	0x03373440 LDR X0, [X20]
	0x03373444 LDR W8, [X0 + 0xE0]
	0x03373448 CBNZ W8, 0x3373454
	0x0337344C BL 0x1C16DFC
	0x03373450 LDR X0, [X20]
	0x03373454 LDR X8, [X0 + 0xB8]
	0x03373458 LDR X8, [X8]
	0x0337345C STR X8, [X19 + 0x28]
	0x03373460 B 0x3373E9C
	0x03373464 LDR X0, [X28]
	0x03373468 LDR W8, [X0 + 0xE0]
	0x0337346C CBNZ W8, 0x3373474
	0x03373470 BL 0x1C16DFC
	0x03373474 MOV X0, X22
	0x03373478 MOV X1, X31
	0x0337347C BL 0x3375A88
	0x03373480 CMP W0, 0x7
	0x03373484 STR W0, [X31 + 0x4C]
	0x03373488 B.GT 0x3373848
	0x0337348C ADRP X8, 0xDB5000
	0x03373490 LDR X8, [X8 + 0x588]
	0x03373494 MOV W21, W0
	0x03373498 LDR X0, [X8]
	0x0337349C LDR W8, [X0 + 0xE0]
	0x033734A0 CBNZ W8, 0x33734A8
	0x033734A4 BL 0x1C16DFC
	0x033734A8 ADD X2, X31, 0x20
	0x033734AC MOV X0, X20
	0x033734B0 MOV W1, W21
	0x033734B4 BL 0x337181C
	0x033734B8 AND W8, W24, 0xFFFF
	0x033734BC CMP W8, 0x66
	0x033734C0 B.NE 0x33734C8
	0x033734C4 TBZ X0, 0x0, 0x3373848
	0x033734C8 LDR V1, [X19 + 0x18]
	0x033734CC LDR V0, [X31 + 0x20]
	0x033734D0 FCMP D1, 0x0
	0x033734D4 B.PL 0x3373E1C
	0x033734D8 STR D0, [X19 + 0x18]
	0x033734DC B 0x3373E9C
	0x033734E0 LDR X0, [X28]
	0x033734E4 LDR W8, [X0 + 0xE0]
	0x033734E8 CBNZ W8, 0x33734F0
	0x033734EC BL 0x1C16DFC
	0x033734F0 MOV X0, X22
	0x033734F4 MOV X1, X31
	0x033734F8 BL 0x3375A88
	0x033734FC STR W0, [X31 + 0x4C]
	0x03373500 ADRP X8, 0xDB5000
	0x03373504 LDR X8, [X8 + 0x588]
	0x03373508 MOV W22, W0
	0x0337350C CMP W0, 0x2
	0x03373510 B.LE 0x3373AE0
	0x03373514 LDR X0, [X8]
	0x03373518 LDR W8, [X0 + 0xE0]
	0x0337351C CBNZ W8, 0x3373524
	0x03373520 BL 0x1C16DFC
	0x03373524 ADD X2, X31, 0x3C
	0x03373528 MOV X0, X20
	0x0337352C MOV X1, X23
	0x03373530 CMP W22, 0x3
	0x03373534 B.NE 0x3373D78
	0x03373538 BL 0x3371D04
	0x0337353C TBZ X0, 0x0, 0x3373848
	0x03373540 B 0x3373D80
	0x03373544 CBZ X23, 0x3373EC0
	0x03373548 MOV X0, X23
	0x0337354C MOV X1, X31
	0x03373550 BL 0x3325418
	0x03373554 CBZ X0, 0x3373EC0
	0x03373558 LDR W8, [X0 + 0x10]
	0x0337355C CMP W8, 0x2
	0x03373560 B.LT 0x337358C
	0x03373564 MOV X0, X23
	0x03373568 MOV X1, X31
	0x0337356C BL 0x3325418
	0x03373570 CBZ X0, 0x3373EC0

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x106A000
	011 Move X24, 0xDB6000
	012 Move W8, [X22+3833]
	013 Move X24, [X24+1264]
	014 Move X19, X2
	015 Move X21, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0xDB6000
	022 Move X0, [X0+1264]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+3833], W8
	026 Move X0, [X24]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Move X1, X31
	033 Call __DTString.GetNext, X0
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {99}
	038 Compare X21, 0
	039 JumpIfEqual {124}
	040 Move X0, [X21+120]
	041 Compare X0, 0
	042 JumpIfEqual {124}
	043 Move X8, [X0]
	044 Move X9, [X8+568]
	045 Move X1, [X8+576]
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Compare X0, 0
	048 JumpIfEqual {100}
	049 Move X8, [X0+24]
	050 Move X22, X0
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X25, X31
	053 And X8, X8, 0
	054 Add X26, X22, 32
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move W1, [X26]
	057 Move X0, X21
	058 Move X2, X31
	059 Call DateTimeFormatInfo.GetEraName, X0, X1
	060 Move X8, [X24]
	061 Move X23, X0
	062 Move W9, [X8+224]
	063 Compare W9, 0
	064 JumpIfNotEqual {67}
	065 Move X0, X8
	066 Call 0x1C17DFC
	067 Move X0, X20
	068 Move X1, X23
	069 Move X2, X31
	070 Call 0x337554C
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfEqual {110}
	075 Move W8, [X22+24]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move W1, [X26]
	078 Move X0, X21
	079 Move X2, X31
	080 Call DateTimeFormatInfo.GetAbbreviatedEraName, X0, X1
	081 Move X8, [X24]
	082 Move X23, X0
	083 Move W9, [X8+224]
	084 Compare W9, 0
	085 JumpIfNotEqual {88}
	086 Move X0, X8
	087 Call 0x1C17DFC
	088 Move X0, X20
	089 Move X1, X23
	090 Move X2, X31
	091 Call 0x337554C
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfEqual {110}
	096 Move W8, [X22+24]
	097 Add X25, X25, 1
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move W0, W31
	100 Move X20, [X31+64]
	101 Move X19, [X31+72]
	102 Move X22, [X31+48]
	103 Move X21, [X31+56]
	104 Move X24, [X31+32]
	105 Move X23, [X31+40]
	106 Move X26, [X31+16]
	107 Move X25, [X31+24]
	108 Move X30, [X31+80]
	109 Return X0
	110 Compare X23, 0
	111 JumpIfEqual {124}
	112 Move W8, [X20+16]
	113 Move W9, [X23+16]
	114 Add W8, W8, W9
	115 Subtract W8, W8, 1
	116 Move [X20+16], W8
	117 Move W8, [X22+24]
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Add X8, X22, 32
	120 Move W8, [X8]
	121 Move W0, 1
	122 Move [X19], W8
	123 Call 0x1C17F28
	124 Call 0x1C17F20

Method: System.Boolean MatchTimeMark(ref System.__DTString str, System.Globalization.DateTimeFormatInfo dtfi, ref System.DateTimeParse/TM result)

Disassembly:
	0x03373574 MOV W1, W31
	0x03373578 MOV X2, X31
	0x0337357C BL 0x3222A1C
	0x03373580 AND W8, W0, 0xFFFF
	0x03373584 CMP W8, 0x2F
	0x03373588 B.EQ 0x33735B0
	0x0337358C LDR X0, [X28]
	0x03373590 LDR W8, [X0 + 0xE0]
	0x03373594 CBNZ W8, 0x337359C
	0x03373598 BL 0x1C16DFC
	0x0337359C MOVZ W1, 0x2F
	0x033735A0 MOV X0, X20
	0x033735A4 MOV X2, X31
	0x033735A8 BL 0x33758BC
	0x033735AC TBNZ X0, 0x0, 0x3373E9C
	0x033735B0 MOV X0, X23
	0x033735B4 MOV X1, X31
	0x033735B8 BL 0x3325418
	0x033735BC LDR X8, [X28]
	0x033735C0 MOV X21, X0
	0x033735C4 LDR W9, [X8 + 0xE0]
	0x033735C8 CBNZ W9, 0x33735D4
	0x033735CC MOV X0, X8
	0x033735D0 BL 0x1C16DFC
	0x033735D4 MOV X0, X20
	0x033735D8 MOV X1, X21
	0x033735DC B 0x3373814
	0x033735E0 LDR X0, [X28]
	0x033735E4 LDR W8, [X0 + 0xE0]
	0x033735E8 CBNZ W8, 0x33735F0
	0x033735EC BL 0x1C16DFC
	0x033735F0 MOV X0, X22
	0x033735F4 MOV X1, X31
	0x033735F8 BL 0x3375A88
	0x033735FC ADRP X22, 0xDB5000
	0x03373600 LDR X22, [X22 + 0x588]
	0x03373604 MOV W8, W0
	0x03373608 STR W8, [X31 + 0x4C]
	0x0337360C CMP W8, 0x2
	0x03373610 LDR X0, [X22]
	0x03373614 MOVZ W8, 0x1
	0x03373618 CINC W21, W8, GE
	0x0337361C LDR W9, [X0 + 0xE0]
	0x03373620 CBNZ W9, 0x3373628
	0x03373624 BL 0x1C16DFC
	0x03373628 ADD X2, X31, 0x2C
	0x0337362C MOV X0, X20
	0x03373630 MOV W1, W21
	0x03373634 BL 0x33714E0
	0x03373638 TBZ X0, 0x0, 0x3373848
	0x0337363C LDR X0, [X22]
	0x03373640 LDR W20, [X31 + 0x2C]
	0x03373644 ADD X21, X19, 0x10
	0x03373648 LDR W8, [X0 + 0xE0]
	0x0337364C CBNZ W8, 0x3373654
	0x03373650 BL 0x1C16DFC
	0x03373654 MOVZ W2, 0x6D
	0x03373658 B 0x3373E64
	0x0337365C ADRP X8, 0xD82000
	0x03373660 LDR X8, [X8 + 0x170]
	0x03373664 ADD X1, X31, 0x4
	0x03373668 STRH W24, [X31 + 0x4]
	0x0337366C LDR X0, [X8]
	0x03373670 BL 0x1C16E04
	0x03373674 ADRP X8, 0xDB5000
	0x03373678 LDR X8, [X8 + 0x590]
	0x0337367C MOV X3, X0
	0x03373680 MOVZ W1, 0x3
	0x03373684 MOV X0, X19
	0x03373688 LDR X2, [X8]
	0x0337368C MOV X4, X31
	0x03373690 BL 0x3376824
	0x03373694 MOV X0, X23
	0x03373698 MOV X1, X31
	0x0337369C BL 0x3235B68
	0x033736A0 B 0x3373854
	0x033736A4 LDRB W8, [X21 + 0x12]
	0x033736A8 CBNZ W8, 0x3373E9C
	0x033736AC LDR X0, [X28]
	0x033736B0 LDR W8, [X0 + 0xE0]
	0x033736B4 CBNZ W8, 0x33736BC
	0x033736B8 BL 0x1C16DFC
	0x033736BC MOVZ W1, 0x20
	0x033736C0 MOV X0, X20
	0x033736C4 MOV X2, X31
	0x033736C8 BL 0x33758BC
	0x033736CC TBNZ X0, 0x0, 0x3373E9C
	0x033736D0 LDRB W8, [X21 + 0x13]
	0x033736D4 CBZ W8, 0x3373848
	0x033736D8 LDR X0, [X28]
	0x033736DC LDR W8, [X0 + 0xE0]
	0x033736E0 CBNZ W8, 0x33736E8
	0x033736E4 BL 0x1C16DFC
	0x033736E8 MOV X0, X22
	0x033736EC MOV X1, X31
	0x033736F0 BL 0x3374A74
	0x033736F4 TBZ X0, 0x0, 0x3373848
	0x033736F8 ADRP X8, 0xDB5000
	0x033736FC LDR X8, [X8 + 0x588]
	0x03373700 LDR X0, [X8]
	0x03373704 LDR W8, [X0 + 0xE0]
	0x03373708 CBNZ W8, 0x3373710

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x106A000
	009 Move W8, [X22+3834]
	010 Move X19, X2
	011 Move X21, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xDB6000
	018 Move X0, [X0+1264]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+3834], W8
	022 Move TEMP, 0
	023 Not TEMP
	024 Move W8, TEMP
	025 Move [X19], W8
	026 Compare X21, 0
	027 JumpIfEqual {130}
	028 Move X0, X21
	029 Move X1, X31
	030 Call DateTimeFormatInfo.get_AMDesignator, X0
	031 Compare X0, 0
	032 JumpIfEqual {130}
	033 Move W8, [X0+16]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Move [X19], W31
	037 Move X0, X21
	038 Move X1, X31
	039 Call DateTimeFormatInfo.get_PMDesignator, X0
	040 Compare X0, 0
	041 JumpIfEqual {130}
	042 Move X23, 0xDB6000
	043 Move W8, [X0+16]
	044 Move X23, [X23+1264]
	045 Compare W8, 0
	046 JumpIfNotEqual {49}
	047 Move W8, 1
	048 Move [X19], W8
	049 Move X0, [X23]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move X0, X20
	055 Move X1, X31
	056 Call __DTString.GetNext, X0
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {119}
	061 Move X0, X21
	062 Move X1, X31
	063 Call DateTimeFormatInfo.get_AMDesignator, X0
	064 Compare X0, 0
	065 JumpIfEqual {130}
	066 Move X24, X0
	067 Add X24, X24, 16
	068 Move W8, [X24]
	069 Move X22, X0
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X0, [X23]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Move X0, X20
	077 Move X1, X22
	078 Move X2, X31
	079 Call 0x337554C
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {85}
	084 Move W8, W31
	085 Move X0, X21
	086 Move X1, X31
	087 Call DateTimeFormatInfo.get_PMDesignator, X0
	088 Compare X0, 0
	089 JumpIfEqual {130}
	090 Move X24, X0
	091 Add X24, X24, 16
	092 Move W8, [X24]
	093 Move X21, X0
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X0, [X23]
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {100}
	099 Call 0x1C17DFC
	100 Move X0, X20
	101 Move X1, X21
	102 Move X2, X31
	103 Call 0x337554C
	104 Move TEMP, X0
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfNotEqual {116}
	108 Move W8, 1
	109 Move W9, [X20+16]
	110 Move W10, [X24]
	111 Move W0, 1
	112 Add W9, W9, W10
	113 Subtract W9, W9, 1
	114 Move [X20+16], W9
	115 Move [X19], W8
	116 Move W8, [X20+16]
	117 Subtract W8, W8, 1
	118 Move [X20+16], W8
	119 Move W8, [X19]
	120 Add W31, W8, 1
	121 NotImplemented "Instruction CSET not yet implemented."
	122 Move X20, [X31+48]
	123 Move X19, [X31+56]
	124 Move X22, [X31+32]
	125 Move X21, [X31+40]
	126 Move X24, [X31+16]
	127 Move X23, [X31+24]
	128 Move X30, [X31+64]
	129 Return X0
	130 Call 0x1C17F20

Method: System.Boolean MatchAbbreviatedTimeMark(ref System.__DTString str, System.Globalization.DateTimeFormatInfo dtfi, ref System.DateTimeParse/TM result)

Disassembly:
	0x0337370C BL 0x1C16DFC
	0x03373710 MOV X0, X20
	0x03373714 MOV X1, X22
	0x03373718 MOV X2, X21
	0x0337371C MOV X3, X23
	0x03373720 MOV X4, X19
	0x03373724 BL 0x3372D88
	0x03373728 TBZ X0, 0x0, 0x3373848
	0x0337372C B 0x3373E9C
	0x03373730 CMP W8, 0x5C
	0x03373734 B.NE 0x3373780
	0x03373738 LDR X0, [X28]
	0x0337373C LDR W8, [X0 + 0xE0]
	0x03373740 CBNZ W8, 0x3373748
	0x03373744 BL 0x1C16DFC
	0x03373748 MOV X0, X22
	0x0337374C MOV X1, X31
	0x03373750 BL 0x3374A74
	0x03373754 TBZ X0, 0x0, 0x33739F0
	0x03373758 LDR X0, [X28]
	0x0337375C LDR W8, [X0 + 0xE0]
	0x03373760 CBNZ W8, 0x3373768
	0x03373764 BL 0x1C16DFC
	0x03373768 MOV X0, X22
	0x0337376C MOV X1, X31
	0x03373770 BL 0x3375C40
	0x03373774 MOV W1, W0
	0x03373778 MOV X0, X20
	0x0337377C B 0x337383C
	0x03373780 LDR X0, [X28]
	0x03373784 LDR W8, [X0 + 0xE0]
	0x03373788 CBNZ W8, 0x3373790
	0x0337378C BL 0x1C16DFC
	0x03373790 ADRP X21, 0xDB5000
	0x03373794 LDR X21, [X21 + 0x458]
	0x03373798 MOV X0, X22
	0x0337379C MOV X2, X31
	0x033737A0 LDR X1, [X21]
	0x033737A4 BL 0x337454C
	0x033737A8 TBZ X0, 0x0, 0x3373824
	0x033737AC LDR X8, [X21]
	0x033737B0 CBZ X8, 0x3373EC0
	0x033737B4 LDR W9, [X22 + 0x10]
	0x033737B8 LDR W8, [X8 + 0x10]
	0x033737BC ADD W8, W9, W8
	0x033737C0 SUB W8, W8, 0x1
	0x033737C4 STR W8, [X22 + 0x10]
	0x033737C8 LDR W8, [X19 + 0x24]
	0x033737CC ADRP X22, 0xD82000
	0x033737D0 ORR W8, W8, 0x100
	0x033737D4 STR W8, [X19 + 0x24]
	0x033737D8 LDR X22, [X22 + 0x570]
	0x033737DC LDR X0, [X22]
	0x033737E0 LDR W8, [X0 + 0xE0]
	0x033737E4 CBNZ W8, 0x33737F0
	0x033737E8 BL 0x1C16DFC
	0x033737EC LDR X0, [X22]
	0x033737F0 LDR X8, [X0 + 0xB8]
	0x033737F4 LDR X8, [X8]
	0x033737F8 STR X8, [X19 + 0x28]
	0x033737FC LDR X0, [X28]
	0x03373800 LDR W8, [X0 + 0xE0]
	0x03373804 CBNZ W8, 0x337380C
	0x03373808 BL 0x1C16DFC
	0x0337380C LDR X1, [X21]
	0x03373810 MOV X0, X20
	0x03373814 MOV X2, X31
	0x03373818 BL 0x337576C
	0x0337381C TBZ X0, 0x0, 0x3373848
	0x03373820 B 0x3373E9C
	0x03373824 LDR X0, [X28]
	0x03373828 LDR W8, [X0 + 0xE0]
	0x0337382C CBNZ W8, 0x3373834
	0x03373830 BL 0x1C16DFC
	0x03373834 MOV X0, X20
	0x03373838 MOV W1, W24
	0x0337383C MOV X2, X31
	0x03373840 BL 0x33758BC
	0x03373844 TBNZ X0, 0x0, 0x3373E9C
	0x03373848 MOV X0, X19
	0x0337384C MOV X1, X31
	0x03373850 BL 0x33767C8
	0x03373854 MOV W0, W31
	0x03373858 B 0x3373EA0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x106A000
	009 Move X23, 0xDB6000
	010 Move W8, [X22+3835]
	011 Move X23, [X23+1264]
	012 Move X19, X2
	013 Move X21, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xDB6000
	020 Move X0, [X0+1264]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+3835], W8
	024 Move X0, [X23]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X20
	030 Move X1, X31
	031 Call __DTString.GetNext, X0
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {87}
	036 Compare X21, 0
	037 JumpIfEqual {96}
	038 Move X0, X21
	039 Move X1, X31
	040 Call DateTimeFormatInfo.get_AMDesignator, X0
	041 Compare X0, 0
	042 JumpIfEqual {96}
	043 Move W8, [X0+16]
	044 Move X22, X0
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X0, [X23]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X0, X20
	052 Move X1, X31
	053 Call __DTString.GetChar, X0
	054 And W24, W0, 0xFFFF
	055 Move X0, X22
	056 Move W1, W31
	057 Move X2, X31
	058 Call String.get_Chars, X0, X1
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move [X19], W31
	061 Move W0, 1
	062 Move X0, X21
	063 Move X1, X31
	064 Call DateTimeFormatInfo.get_PMDesignator, X0
	065 Compare X0, 0
	066 JumpIfEqual {96}
	067 Move W8, [X0+16]
	068 Move X21, X0
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X0, [X23]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Move X0, X20
	076 Move X1, X31
	077 Call __DTString.GetChar, X0
	078 And W20, W0, 0xFFFF
	079 Move X0, X21
	080 Move W1, W31
	081 Move X2, X31
	082 Call String.get_Chars, X0, X1
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move W0, W31
	085 Move W0, 1
	086 Move [X19], W0
	087 Move W0, W31
	088 Move X20, [X31+48]
	089 Move X19, [X31+56]
	090 Move X22, [X31+32]
	091 Move X21, [X31+40]
	092 Move X24, [X31+16]
	093 Move X23, [X31+24]
	094 Move X30, [X31+64]
	095 Return X0
	096 Call 0x1C17F20

Method: System.Boolean CheckNewValue(ref System.Int32 currentValue, System.Int32 newValue, System.Char patternChar, ref System.DateTimeResult result)

Disassembly:
	0x0337385C LDR X0, [X28]
	0x03373860 LDR W8, [X0 + 0xE0]
	0x03373864 CBNZ W8, 0x337386C
	0x03373868 BL 0x1C16DFC
	0x0337386C MOV X0, X22
	0x03373870 MOV X1, X31
	0x03373874 BL 0x3375A88
	0x03373878 ADRP X22, 0xDB5000
	0x0337387C LDR X22, [X22 + 0x588]
	0x03373880 MOV W8, W0
	0x03373884 STR W8, [X31 + 0x4C]
	0x03373888 CMP W8, 0x2
	0x0337388C LDR X0, [X22]
	0x03373890 MOVZ W8, 0x1
	0x03373894 CINC W21, W8, GE
	0x03373898 LDR W9, [X0 + 0xE0]
	0x0337389C CBNZ W9, 0x33738A4
	0x033738A0 BL 0x1C16DFC
	0x033738A4 ADD X2, X31, 0x30
	0x033738A8 MOV X0, X20
	0x033738AC MOV W1, W21
	0x033738B0 BL 0x33714E0
	0x033738B4 TBZ X0, 0x0, 0x3373848
	0x033738B8 LDR X0, [X22]
	0x033738BC LDR W20, [X31 + 0x30]
	0x033738C0 ADD X21, X19, 0xC
	0x033738C4 LDR W8, [X0 + 0xE0]
	0x033738C8 CBNZ W8, 0x33738D0
	0x033738CC BL 0x1C16DFC
	0x033738D0 MOVZ W2, 0x48
	0x033738D4 B 0x3373E64
	0x033738D8 LDR X0, [X28]
	0x033738DC LDR W8, [X0 + 0xE0]
	0x033738E0 CBNZ W8, 0x33738E8
	0x033738E4 BL 0x1C16DFC
	0x033738E8 MOV X0, X22
	0x033738EC MOV X1, X31
	0x033738F0 BL 0x3375A88
	0x033738F4 ADRP X8, 0xDB5000
	0x033738F8 LDR X8, [X8 + 0x588]
	0x033738FC STR W0, [X31 + 0x4C]
	0x03373900 MOV W22, W0
	0x03373904 LDR X8, [X8]
	0x03373908 LDR W9, [X8 + 0xE0]
	0x0337390C CBNZ W9, 0x3373918
	0x03373910 MOV X0, X8
	0x03373914 BL 0x1C16DFC

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x106A000
	009 Move W8, [X23+3836]
	010 Move X19, X3
	011 Move W20, W2
	012 Move W21, W1
	013 Move X22, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xD83000
	019 Move X0, [X0+368]
	020 Call 0x1C17CF4
	021 Move X0, 0xDB8000
	022 Move X0, [X0+3216]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+3836], W8
	026 Move W8, [X22]
	027 Add W31, W8, 1
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X8, 0xD83000
	030 Move X8, [X8+368]
	031 Add X1, X31, 12
	032 NotImplemented "Instruction STRH not yet implemented."
	033 Move X0, [X8]
	034 Call 0x1C17E04
	035 Move X8, 0xDB8000
	036 Move X8, [X8+3216]
	037 Move X3, X0
	038 Move W1, 3
	039 Move X0, X19
	040 Move X2, [X8]
	041 Move X4, X31
	042 Call DateTimeResult.SetFailure, X0, X1, X2, X3
	043 Move W0, W31
	044 Move [X22], W21
	045 Move W0, 1
	046 Move X20, [X31+48]
	047 Move X19, [X31+56]
	048 Move X22, [X31+32]
	049 Move X21, [X31+40]
	050 Move X30, [X31+16]
	051 Move X23, [X31+24]
	052 Add X31, X31, 64
	053 Return X0

Method: System.DateTime GetDateTimeNow(ref System.DateTimeResult result, ref System.Globalization.DateTimeStyles styles)

Disassembly:
	0x0336F008 BL 0x3376824
	0x0336F00C B 0x336F040
	0x0336F010 MOV W2, W23
	0x0336F014 MOV W3, W22
	0x0336F018 BL 0x336DD88
	0x0336F01C TBZ X0, 0x0, 0x336F034
	0x0336F020 LDR W8, [X19 + 0x24]
	0x0336F024 MOVZ W0, 0x1
	0x0336F028 ORR W8, W8, 0x80
	0x0336F02C STR W8, [X19 + 0x24]
	0x0336F030 B 0x336F044
	0x0336F034 MOV X0, X19
	0x0336F038 MOV X1, X31
	0x0336F03C BL 0x33767C8
	0x0336F040 MOV W0, W31
	0x0336F044 LDP X20, X19, [X31 + 0x40]
	0x0336F048 LDP X22, X21, [X31 + 0x30]
	0x0336F04C LDP X24, X23, [X31 + 0x20]
	0x0336F050 LDP X30, X25, [X31 + 0x10]
	0x0336F054 ADD X31, X31, 0x50
	0x0336F058 RET
	0x0336F05C BL 0x1C16F20
	0x0336F060 STP X30, X23, [X31 - 0x30]!
	0x0336F064 STP X22, X21, [X31 + 0x10]
	0x0336F068 STP X20, X19, [X31 + 0x20]
	0x0336F06C ADRP X20, 0x106D000
	0x0336F070 LDRB W8, [X20 + 0xEDF]
	0x0336F074 MOV X21, X1
	0x0336F078 MOV X19, X0
	0x0336F07C TBNZ X8, 0x0, 0x336F094
	0x0336F080 ADRP X0, 0xDB9000
	0x0336F084 LDR X0, [X0 + 0x588]
	0x0336F088 BL 0x1C16CF4
	0x0336F08C MOVZ W8, 0x1
	0x0336F090 STRB W8, [X20 + 0xEDF]
	0x0336F094 LDRB W8, [X19 + 0x24]
	0x0336F098 TBNZ X8, 0x7, 0x336F0FC
	0x0336F09C ADRP X23, 0xDB9000
	0x0336F0A0 LDP W22, W20, [X21 + 0xC]
	0x0336F0A4 LDR X23, [X23 + 0x588]
	0x0336F0A8 MOV X0, X21
	0x0336F0AC MOV W1, W31
	0x0336F0B0 MOV X2, X31
	0x0336F0B4 BL 0x3376694
	0x0336F0B8 LDR X8, [X23]
	0x0336F0BC MOV W21, W0
	0x0336F0C0 LDR W9, [X8 + 0xE0]
	0x0336F0C4 CBNZ W9, 0x336F0D0
	0x0336F0C8 MOV X0, X8
	0x0336F0CC BL 0x1C16DFC
	0x0336F0D0 MOV X0, X19
	0x0336F0D4 MOV W1, W20
	0x0336F0D8 MOV W2, W22
	0x0336F0DC MOV W3, W21
	0x0336F0E0 BL 0x336DD88
	0x0336F0E4 TBZ X0, 0x0, 0x336F0FC
	0x0336F0E8 LDR W8, [X19 + 0x24]
	0x0336F0EC MOVZ W0, 0x1
	0x0336F0F0 ORR W8, W8, 0x80
	0x0336F0F4 STR W8, [X19 + 0x24]
	0x0336F0F8 B 0x336F10C
	0x0336F0FC MOV X0, X19
	0x0336F100 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x106E000
	007 Move W8, [X21+3837]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xD86000
	015 Move X0, [X0+2544]
	016 Call 0x1C17CF4
	017 Move X0, 0xD87000
	018 Move X0, [X0+1392]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3837], W8
	022 Move X8, 0xD86000
	023 Move W9, [X19+36]
	024 Move X8, [X8+2544]
	025 Move TEMP, X9
	026 And TEMP, TEMP, 2048
	027 Compare TEMP, 2048
	028 JumpIfEqual {36}
	029 Move X0, [X8]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Call DateTime.get_Now
	035 Move [X31+8], X0
	036 Move TEMP, X9
	037 And TEMP, TEMP, 256
	038 Compare TEMP, 256
	039 JumpIfEqual {51}
	040 Move W9, [X20]
	041 Move TEMP, X9
	042 And TEMP, TEMP, 64
	043 Compare TEMP, 64
	044 JumpIfNotEqual {29}
	045 Move X0, [X8]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Call DateTime.get_UtcNow
	051 Move X0, [X8]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Call DateTime.get_UtcNow
	057 Move [X31], X0
	058 Add X0, X31, 0
	059 Call DateTime.get_Ticks, X0
	060 Move X8, 0xD87000
	061 Move X8, [X8+1392]
	062 Move X20, X0
	063 Move X8, [X8]
	064 Move W9, [X8+224]
	065 Compare W9, 0
	066 JumpIfNotEqual {69}
	067 Move X0, X8
	068 Call 0x1C17DFC
	069 Move X8, [X19+40]
	070 Add X0, X31, 8
	071 Move W2, W31
	072 Move [X31+8], X31
	073 Add X1, X8, X20
	074 Call DateTime..ctor, X0, X1, X2
	075 Move X0, [X31+8]
	076 Move X20, [X31+32]
	077 Move X19, [X31+40]
	078 Move X30, [X31+16]
	079 Move X21, [X31+24]
	080 Add X31, X31, 48
	081 Return X0

Method: System.Boolean CheckDefaultDateTime(ref System.DateTimeResult result, ref System.Globalization.Calendar cal, System.Globalization.DateTimeStyles styles)

Disassembly:
	0x03371A20 LDR W8, [X21 + 0x10]
	0x03371A24 MOV W0, W31
	0x03371A28 SUB W8, W8, 0x1
	0x03371A2C STR W8, [X21 + 0x10]
	0x03371A30 B 0x3371A64
	0x03371A34 LDR W8, [X21 + 0x10]
	0x03371A38 SUB W8, W8, 0x1
	0x03371A3C STR W8, [X21 + 0x10]
	0x03371A40 LDR V9, [X19]
	0x03371A44 MOV W0, W24
	0x03371A48 MOV X1, X31
	0x03371A4C BL 0x332CA80
	0x03371A50 SCVTF D0, X0
	0x03371A54 CMP W24, W20
	0x03371A58 FDIV D0, D9, D0
	0x03371A5C CSET W0, EQ
	0x03371A60 STR D0, [X19]
	0x03371A64 LDP X20, X19, [X31 + 0x50]
	0x03371A68 LDP X22, X21, [X31 + 0x40]
	0x03371A6C LDP X24, X23, [X31 + 0x30]
	0x03371A70 LDP X26, X25, [X31 + 0x20]
	0x03371A74 LDP X30, X27, [X31 + 0x10]
	0x03371A78 LDP D9, D8, [X31], #0x60
	0x03371A7C RET
	0x03371A80 BL 0x1C16F28
	0x03371A84 STR X30, [X31 - 0x30]!
	0x03371A88 STP X22, X21, [X31 + 0x10]
	0x03371A8C STP X20, X19, [X31 + 0x20]
	0x03371A90 ADRP X22, 0x106B000
	0x03371A94 ADRP X21, 0xDB7000
	0x03371A98 LDRB W8, [X22 + 0xEF3]
	0x03371A9C LDR X21, [X21 + 0x4F0]
	0x03371AA0 MOV X19, X1
	0x03371AA4 MOV X20, X0
	0x03371AA8 TBNZ X8, 0x0, 0x3371AC0
	0x03371AAC ADRP X0, 0xDB7000
	0x03371AB0 LDR X0, [X0 + 0x4F0]
	0x03371AB4 BL 0x1C16CF4
	0x03371AB8 MOVZ W8, 0x1
	0x03371ABC STRB W8, [X22 + 0xEF3]
	0x03371AC0 LDR X0, [X21]
	0x03371AC4 LDR W8, [X0 + 0xE0]
	0x03371AC8 CBNZ W8, 0x3371AD0
	0x03371ACC BL 0x1C16DFC
	0x03371AD0 MOV X0, X20
	0x03371AD4 MOV X1, X31
	0x03371AD8 BL 0x3374A74
	0x03371ADC TBZ X0, 0x0, 0x3371B1C
	0x03371AE0 LDR X0, [X21]
	0x03371AE4 LDR W8, [X0 + 0xE0]
	0x03371AE8 CBNZ W8, 0x3371AF0
	0x03371AEC BL 0x1C16DFC
	0x03371AF0 MOV X0, X20
	0x03371AF4 MOV X1, X31
	0x03371AF8 BL 0x3375C40
	0x03371AFC AND W8, W0, 0xFFFF
	0x03371B00 CMP W8, 0x2D
	0x03371B04 B.EQ 0x3371B24
	0x03371B08 CMP W8, 0x2B
	0x03371B0C B.NE 0x3371B1C
	0x03371B10 MOVZ W0, 0x1
	0x03371B14 STRB W0, [X19]
	0x03371B18 B 0x3371B2C
	0x03371B1C MOV W0, W31
	0x03371B20 B 0x3371B2C
	0x03371B24 MOVZ W0, 0x1
	0x03371B28 STRB W31, [X19]
	0x03371B2C LDP X20, X19, [X31 + 0x20]
	0x03371B30 LDP X22, X21, [X31 + 0x10]
	0x03371B34 LDR X30, [X31], #0x30
	0x03371B38 RET
	0x03371B3C SUB X31, X31, 0x50
	0x03371B40 STP X30, X23, [X31 + 0x20]
	0x03371B44 STP X22, X21, [X31 + 0x30]
	0x03371B48 STP X20, X19, [X31 + 0x40]
	0x03371B4C ADRP X23, 0x106B000
	0x03371B50 ADRP X22, 0xDB7000
	0x03371B54 LDRB W8, [X23 + 0xEF4]
	0x03371B58 LDR X22, [X22 + 0x588]
	0x03371B5C MOV X19, X2
	0x03371B60 MOV W21, W1
	0x03371B64 MOV X20, X0
	0x03371B68 TBNZ X8, 0x0, 0x3371BA4
	0x03371B6C ADRP X0, 0xDB7000
	0x03371B70 LDR X0, [X0 + 0x588]
	0x03371B74 BL 0x1C16CF4
	0x03371B78 ADRP X0, 0xD84000
	0x03371B7C LDR X0, [X0 + 0x570]
	0x03371B80 BL 0x1C16CF4
	0x03371B84 ADRP X0, 0xDB7000
	0x03371B88 LDR X0, [X0 + 0x4F0]
	0x03371B8C BL 0x1C16CF4
	0x03371B90 ADRP X0, 0xD8B000
	0x03371B94 LDR X0, [X0 + 0x988]
	0x03371B98 BL 0x1C16CF4
	0x03371B9C MOVZ W8, 0x1
	0x03371BA0 STRB W8, [X23 + 0xEF4]
	0x03371BA4 LDR X0, [X22]
	0x03371BA8 MOVZ W8, 0x1
	0x03371BAC STP W31, W31, [X31 + 0x14]
	0x03371BB0 STRB W8, [X31 + 0x1C]
	0x03371BB4 LDR W8, [X0 + 0xE0]
	0x03371BB8 SUB W23, W21, 0x1
	0x03371BBC CBNZ W8, 0x3371BC4
	0x03371BC0 BL 0x1C16DFC
	0x03371BC4 ADD X1, X31, 0x1C
	0x03371BC8 MOV X0, X20
	0x03371BCC BL 0x3371A84
	0x03371BD0 CMP W23, 0x1
	0x03371BD4 B.HI 0x3371BFC
	0x03371BD8 TBZ X0, 0x0, 0x3371CEC
	0x03371BDC LDR X0, [X22]
	0x03371BE0 LDR W8, [X0 + 0xE0]
	0x03371BE4 CBNZ W8, 0x3371BEC
	0x03371BE8 BL 0x1C16DFC
	0x03371BEC ADD X2, X31, 0x18
	0x03371BF0 MOV X0, X20
	0x03371BF4 MOV W1, W21
	0x03371BF8 B 0x3371C80
	0x03371BFC TBZ X0, 0x0, 0x3371CEC
	0x03371C00 LDR X0, [X22]
	0x03371C04 LDR W8, [X0 + 0xE0]
	0x03371C08 CBNZ W8, 0x3371C10
	0x03371C0C BL 0x1C16DFC
	0x03371C10 ADD X2, X31, 0x18
	0x03371C14 MOVZ W1, 0x1
	0x03371C18 MOV X0, X20
	0x03371C1C BL 0x33714E0
	0x03371C20 TBZ X0, 0x0, 0x3371CEC
	0x03371C24 ADRP X8, 0xDB7000
	0x03371C28 LDR X8, [X8 + 0x4F0]
	0x03371C2C LDR X0, [X8]
	0x03371C30 LDR W8, [X0 + 0xE0]
	0x03371C34 CBNZ W8, 0x3371C3C
	0x03371C38 BL 0x1C16DFC
	0x03371C3C ADRP X8, 0xD8B000
	0x03371C40 LDR X8, [X8 + 0x988]
	0x03371C44 MOV X0, X20
	0x03371C48 MOV X2, X31
	0x03371C4C LDR X1, [X8]
	0x03371C50 BL 0x337576C
	0x03371C54 TBNZ X0, 0x0, 0x3371C64
	0x03371C58 LDR W8, [X20 + 0x10]
	0x03371C5C SUB W8, W8, 0x1
	0x03371C60 STR W8, [X20 + 0x10]
	0x03371C64 LDR X0, [X22]
	0x03371C68 LDR W8, [X0 + 0xE0]
	0x03371C6C CBNZ W8, 0x3371C74
	0x03371C70 BL 0x1C16DFC
	0x03371C74 ADD X2, X31, 0x14
	0x03371C78 MOVZ W1, 0x2
	0x03371C7C MOV X0, X20
	0x03371C80 BL 0x33714E0
	0x03371C84 TBZ X0, 0x0, 0x3371CEC
	0x03371C88 LDR W2, [X31 + 0x14]
	0x03371C8C CMP W2, 0x3B
	0x03371C90 B.HI 0x3371CEC
	0x03371C94 LDR W1, [X31 + 0x18]
	0x03371C98 ADD X0, X31, 0x8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x106C000
	007 Move W8, [X22+3838]
	008 Move W21, W2
	009 Move X20, X1
	010 Move X19, X0
	011 Move [X31+12], W2
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0xDB8000
	017 Move X0, [X0+1416]
	018 Call 0x1C17CF4
	019 Move X0, 0xDB8000
	020 Move X0, [X0+784]
	021 Call 0x1C17CF4
	022 Move X0, 0xDBA000
	023 Move X0, [X0+3184]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+3838], W8
	027 Move W8, [X19+36]
	028 Move TEMP, X8
	029 And TEMP, TEMP, 2048
	030 Compare TEMP, 2048
	031 JumpIfEqual {72}
	032 Move W8, [X19]
	033 Add W31, W8, 1
	034 Move W8, [X19+4]
	035 Add W31, W8, 1
	036 Move W8, [X19+8]
	037 Add W31, W8, 1
	038 Move X8, 0xDB8000
	039 Move X8, [X8+1416]
	040 Move X0, [X8]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Add X1, X31, 12
	046 Move X0, X19
	047 Call DateTimeParse.GetDateTimeNow, X0, X1
	048 Move W8, [X19+4]
	049 Move X22, X0
	050 Add W31, W8, 1
	051 Move W9, [X19+8]
	052 Add W31, W9, 1
	053 Move W9, [X19]
	054 Add W31, W9, 1
	055 Move X0, [X20]
	056 Compare X0, 0
	057 JumpIfEqual {166}
	058 Move X8, [X0]
	059 Move X1, X22
	060 Move X9, [X8+616]
	061 Move X2, [X8+624]
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move W8, [X19+4]
	064 Move [X19], W0
	065 Add W31, W8, 1
	066 Move W8, 1
	067 Move [X19+4], W8
	068 Move W8, [X19+8]
	069 Add W31, W8, 1
	070 Move W8, 1
	071 Move [X19+8], W8
	072 Move W9, [X19+4]
	073 Add W31, W9, 1
	074 Move W9, [X19+8]
	075 Add W31, W9, 1
	076 Move W9, [X19]
	077 Add W31, W9, 1
	078 NotImplemented "Instruction CSET not yet implemented."
	079 And W31, W8, 4096
	080 NotImplemented "Instruction CSET not yet implemented."
	081 Move TEMP, X8
	082 And TEMP, TEMP, 256
	083 Compare TEMP, 256
	084 JumpIfNotEqual {32}
	085 And W8, W10, W9
	086 Move TEMP, X8
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfEqual {32}
	090 Move X8, 0xDBA000
	091 Move X8, [X8+3184]
	092 Move W1, 4
	093 Move X0, X19
	094 Move X3, X31
	095 Move X2, [X8]
	096 Call DateTimeResult.SetFailure, X0, X1, X2
	097 Move W0, W31
	098 Move W8, [X19]
	099 Add W31, W8, 1
	100 NotImplemented "Instruction MOVI not yet implemented."
	101 Move [X19+4], D0
	102 Move TEMP, X21
	103 And TEMP, TEMP, 8
	104 Compare TEMP, 8
	105 JumpIfEqual {133}
	106 Move X0, [X20]
	107 Compare X0, 0
	108 JumpIfEqual {166}
	109 Move X8, [X0]
	110 Move X1, X22
	111 Move X9, [X8+616]
	112 Move X2, [X8+624]
	113 NotImplemented "Instruction BLR not yet implemented."
	114 Move [X19], W0
	115 Move X0, [X20]
	116 Compare X0, 0
	117 JumpIfEqual {166}
	118 Move X8, [X0]
	119 Move X1, X22
	120 Move X9, [X8+584]
	121 Move X2, [X8+592]
	122 NotImplemented "Instruction BLR not yet implemented."
	123 Move [X19+4], W0
	124 Move X0, [X20]
	125 Compare X0, 0
	126 JumpIfEqual {166}
	127 Move X8, [X0]
	128 Move X1, X22
	129 Move X9, [X8+488]
	130 Move X2, [X8+496]
	131 NotImplemented "Instruction BLR not yet implemented."
	132 Move [X19+8], W0
	133 Move X8, 0xDB8000
	134 Move X8, [X8+784]
	135 Move X0, [X8]
	136 Move W8, [X0+224]
	137 Compare W8, 0
	138 JumpIfNotEqual {140}
	139 Call 0x1C17DFC
	140 Move X0, X31
	141 Call GregorianCalendar.GetDefaultInstance
	142 Move W8, 1
	143 NotImplemented "Instruction MOVI not yet implemented."
	144 Move [X20], X0
	145 Move [X19+8], W8
	146 Move [X19], D0
	147 Move W8, [X19+12]
	148 Add W31, W8, 1
	149 Move [X19+12], W31
	150 Move W8, [X19+16]
	151 Add W31, W8, 1
	152 Move [X19+16], W31
	153 Move W8, [X19+20]
	154 Add W31, W8, 1
	155 Move [X19+20], W31
	156 Move W8, [X19+32]
	157 Add W31, W8, 1
	158 Move [X19+32], W31
	159 Move W0, 1
	160 Move X20, [X31+32]
	161 Move X19, [X31+40]
	162 Move X22, [X31+16]
	163 Move X21, [X31+24]
	164 Move X30, [X31+48]
	165 Return X0
	166 Call 0x1C17F20

Method: System.String ExpandPredefinedFormat(System.ReadOnlySpan`1<System.Char> format, ref System.Globalization.DateTimeFormatInfo dtfi, ref System.ParsingInfo parseInfo, ref System.DateTimeResult result)

Disassembly:
	0x03373918 ADD X2, X31, 0x1C
	0x0337391C MOV X0, X20
	0x03373920 MOV X1, X23
	0x03373924 CMP W22, 0x1
	0x03373928 B.NE 0x3373B38
	0x0337392C BL 0x337270C
	0x03373930 TBZ X0, 0x0, 0x3373848
	0x03373934 B 0x3373B40
	0x03373938 LDR X0, [X28]
	0x0337393C LDR W8, [X0 + 0xE0]
	0x03373940 CBNZ W8, 0x3373948
	0x03373944 BL 0x1C16DFC
	0x03373948 MOV X0, X22
	0x0337394C MOV X1, X31
	0x03373950 BL 0x3375A88
	0x03373954 ADRP X22, 0xD82000
	0x03373958 LDR X22, [X22 + 0x570]
	0x0337395C STR W0, [X31 + 0x4C]
	0x03373960 MOV W21, W0
	0x03373964 LDR X8, [X22]
	0x03373968 LDR W9, [X8 + 0xE0]
	0x0337396C CBNZ W9, 0x3373978
	0x03373970 MOV X0, X8
	0x03373974 BL 0x1C16DFC
	0x03373978 ADRP X8, 0xDB5000
	0x0337397C LDR X8, [X8 + 0x588]
	0x03373980 STR X31, [X31 + 0x10]
	0x03373984 LDR X0, [X8]
	0x03373988 LDR W8, [X0 + 0xE0]
	0x0337398C CBNZ W8, 0x3373994
	0x03373990 BL 0x1C16DFC
	0x03373994 ADD X2, X31, 0x10
	0x03373998 MOV X0, X20
	0x0337399C MOV W1, W21
	0x033739A0 BL 0x3371B3C
	0x033739A4 TBZ X0, 0x0, 0x3373848
	0x033739A8 LDR W8, [X19 + 0x24]
	0x033739AC TBZ X8, 0x8, 0x3373E80
	0x033739B0 LDR X0, [X22]
	0x033739B4 LDR X20, [X31 + 0x10]
	0x033739B8 LDR X21, [X19 + 0x28]
	0x033739BC LDR W8, [X0 + 0xE0]
	0x033739C0 CBNZ W8, 0x33739C8
	0x033739C4 BL 0x1C16DFC
	0x033739C8 MOV X0, X20
	0x033739CC MOV X1, X21
	0x033739D0 MOV X2, X31
	0x033739D4 BL 0x3394CE4
	0x033739D8 TBZ X0, 0x0, 0x3373E7C
	0x033739DC ADRP X8, 0xD82000
	0x033739E0 LDR X8, [X8 + 0x170]
	0x033739E4 LDR X0, [X8]
	0x033739E8 MOVZ W8, 0x7A
	0x033739EC B 0x3373C4C
	0x033739F0 LDR X1, [X22]
	0x033739F4 LDR X2, [X22 + 0x8]
	0x033739F8 MOV X0, X19
	0x033739FC MOV X3, X31
	0x03373A00 BL 0x3376764
	0x03373A04 B 0x3373854
	0x03373A08 LDR X0, [X28]
	0x03373A0C LDR W8, [X0 + 0xE0]
	0x03373A10 CBNZ W8, 0x3373A18
	0x03373A14 BL 0x1C16DFC
	0x03373A18 MOV X0, X22
	0x03373A1C MOV X1, X31
	0x03373A20 BL 0x3375A88
	0x03373A24 ADRP X8, 0xDB5000
	0x03373A28 LDR X8, [X8 + 0x588]
	0x03373A2C STR W0, [X31 + 0x4C]
	0x03373A30 ADD X21, X19, 0x20
	0x03373A34 LDR X8, [X8]
	0x03373A38 LDR W9, [X8 + 0xE0]
	0x03373A3C CBNZ W9, 0x3373A48
	0x03373A40 MOV X0, X8
	0x03373A44 BL 0x1C16DFC
	0x03373A48 MOV X0, X20
	0x03373A4C MOV X1, X23
	0x03373A50 MOV X2, X21
	0x03373A54 BL 0x33723D8
	0x03373A58 TBZ X0, 0x0, 0x3373848
	0x03373A5C B 0x3373E9C
	0x03373A60 MOVZ W23, 0x1
	0x03373A64 STRB W23, [X21 + 0x10]
	0x03373A68 LDR X0, [X28]
	0x03373A6C LDR W8, [X0 + 0xE0]
	0x03373A70 CBNZ W8, 0x3373A78
	0x03373A74 BL 0x1C16DFC
	0x03373A78 MOV X0, X22
	0x03373A7C MOV X1, X31
	0x03373A80 BL 0x3375A88
	0x03373A84 ADRP X22, 0xDB5000
	0x03373A88 LDR X22, [X22 + 0x588]
	0x03373A8C STR W0, [X31 + 0x4C]
	0x03373A90 CMP W0, 0x2
	0x03373A94 CINC W21, W23, GE
	0x03373A98 LDR X8, [X22]
	0x03373A9C LDR W9, [X8 + 0xE0]
	0x03373AA0 CBNZ W9, 0x3373AAC
	0x03373AA4 MOV X0, X8
	0x03373AA8 BL 0x1C16DFC
	0x03373AAC ADD X2, X31, 0x30
	0x03373AB0 MOV X0, X20
	0x03373AB4 MOV W1, W21
	0x03373AB8 BL 0x33714E0
	0x03373ABC TBZ X0, 0x0, 0x3373848
	0x03373AC0 LDR X0, [X22]
	0x03373AC4 LDR W20, [X31 + 0x30]
	0x03373AC8 ADD X21, X19, 0xC
	0x03373ACC LDR W8, [X0 + 0xE0]
	0x03373AD0 CBNZ W8, 0x3373AD8
	0x03373AD4 BL 0x1C16DFC
	0x03373AD8 MOVZ W2, 0x68
	0x03373ADC B 0x3373E64
	0x03373AE0 LDR X0, [X8]
	0x03373AE4 LDR W8, [X0 + 0xE0]
	0x03373AE8 CBNZ W8, 0x3373AF0
	0x03373AEC BL 0x1C16DFC
	0x03373AF0 ADD X2, X31, 0x3C
	0x03373AF4 MOV X0, X20
	0x03373AF8 MOV W1, W22
	0x03373AFC BL 0x33714E0
	0x03373B00 TBNZ X0, 0x0, 0x3373D8C
	0x03373B04 LDRB W8, [X21 + 0x14]
	0x03373B08 CBZ W8, 0x3373848
	0x03373B0C LDR X8, [X21 + 0x18]
	0x03373B10 CBZ X8, 0x3373EC0
	0x03373B14 LDR X9, [X8 + 0x18]
	0x03373B18 LDR X0, [X8 + 0x40]
	0x03373B1C LDR X4, [X8 + 0x28]
	0x03373B20 ADD X3, X31, 0x3C
	0x03373B24 MOV X1, X20
	0x03373B28 MOV W2, W22
	0x03373B2C BLR X9
	0x03373B30 TBZ X0, 0x0, 0x3373848
	0x03373B34 B 0x3373D8C
	0x03373B38 BL 0x3372574
	0x03373B3C TBZ X0, 0x0, 0x3373848
	0x03373B40 LDR W9, [X21 + 0xC]
	0x03373B44 LDR W8, [X31 + 0x1C]
	0x03373B48 ADDS W31, W9, 0x1
	0x03373B4C B.EQ 0x3373E38
	0x03373B50 CMP W9, W8
	0x03373B54 B.EQ 0x3373E9C
	0x03373B58 ADRP X8, 0xD82000
	0x03373B5C LDR X8, [X8 + 0x170]
	0x03373B60 LDR X0, [X8]
	0x03373B64 MOVZ W8, 0x74
	0x03373B68 B 0x3373C4C
	0x03373B6C LDR X0, [X28]
	0x03373B70 LDR W8, [X0 + 0xE0]
	0x03373B74 CBNZ W8, 0x3373B7C
	0x03373B78 BL 0x1C16DFC
	0x03373B7C MOVZ W1, 0x2B
	0x03373B80 MOV X0, X20
	0x03373B84 MOV X2, X31
	0x03373B88 BL 0x33758BC
	0x03373B8C TBNZ X0, 0x0, 0x3373BB4
	0x03373B90 LDR X0, [X28]
	0x03373B94 LDR W8, [X0 + 0xE0]
	0x03373B98 CBNZ W8, 0x3373BA0
	0x03373B9C BL 0x1C16DFC
	0x03373BA0 MOVZ W1, 0x2D
	0x03373BA4 MOV X0, X20
	0x03373BA8 MOV X2, X31
	0x03373BAC BL 0x33758BC
	0x03373BB0 TBZ X0, 0x0, 0x3373E9C
	0x03373BB4 LDR W8, [X20 + 0x10]
	0x03373BB8 ADRP X21, 0xD82000
	0x03373BBC SUB W8, W8, 0x1
	0x03373BC0 STR W8, [X20 + 0x10]
	0x03373BC4 LDR X21, [X21 + 0x570]
	0x03373BC8 LDR X0, [X21]
	0x03373BCC LDR W8, [X0 + 0xE0]
	0x03373BD0 CBNZ W8, 0x3373BD8
	0x03373BD4 BL 0x1C16DFC
	0x03373BD8 ADRP X8, 0xDB5000
	0x03373BDC LDR X8, [X8 + 0x588]
	0x03373BE0 STR X31, [X31 + 0x8]
	0x03373BE4 LDR X0, [X8]
	0x03373BE8 LDR W8, [X0 + 0xE0]
	0x03373BEC CBNZ W8, 0x3373BF4
	0x03373BF0 BL 0x1C16DFC
	0x03373BF4 ADD X2, X31, 0x8
	0x03373BF8 MOVZ W1, 0x3
	0x03373BFC MOV X0, X20
	0x03373C00 BL 0x3371B3C
	0x03373C04 TBZ X0, 0x0, 0x3373848
	0x03373C08 LDR W8, [X19 + 0x24]
	0x03373C0C TBZ X8, 0x8, 0x3373E8C
	0x03373C10 LDR X0, [X21]
	0x03373C14 LDR X20, [X31 + 0x8]
	0x03373C18 LDR X21, [X19 + 0x28]
	0x03373C1C LDR W8, [X0 + 0xE0]
	0x03373C20 CBNZ W8, 0x3373C28
	0x03373C24 BL 0x1C16DFC
	0x03373C28 MOV X0, X20
	0x03373C2C MOV X1, X21
	0x03373C30 MOV X2, X31
	0x03373C34 BL 0x3394CE4
	0x03373C38 TBZ X0, 0x0, 0x3373E88
	0x03373C3C ADRP X8, 0xD82000
	0x03373C40 LDR X8, [X8 + 0x170]
	0x03373C44 LDR X0, [X8]
	0x03373C48 MOVZ W8, 0x4B
	0x03373C4C STRH W8, [X31 + 0x4]
	0x03373C50 ADD X1, X31, 0x4
	0x03373C54 BL 0x1C16E04
	0x03373C58 ADRP X8, 0xDB7000
	0x03373C5C LDR X8, [X8 + 0xC90]
	0x03373C60 MOV X3, X0
	0x03373C64 MOVZ W1, 0x3
	0x03373C68 MOV X0, X19
	0x03373C6C LDR X2, [X8]
	0x03373C70 MOV X4, X31
	0x03373C74 BL 0x3376824
	0x03373C78 B 0x3373854
	0x03373C7C CBZ X23, 0x3373EC0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x106A000
	009 Move W8, [X24+3839]
	010 Move X23, X4
	011 Move X22, X3
	012 Move X21, X2
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {36}
	019 Move X0, 0xDB6000
	020 Move X0, [X0+808]
	021 Call 0x1C17CF4
	022 Move X0, 0xDB6000
	023 Move X0, [X0+1352]
	024 Call 0x1C17CF4
	025 Move X0, 0xDB8000
	026 Move X0, [X0+3000]
	027 Call 0x1C17CF4
	028 Move X0, 0xDB6000
	029 Move X0, [X0+784]
	030 Call 0x1C17CF4
	031 Move X0, 0xD81000
	032 Move X0, [X0+1728]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X24+3839], W8
	036 Compare W19, 0
	037 JumpIfEqual {242}
	038 NotImplemented "Instruction LDRH not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Subtract W9, W8, 111
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X8, -41795584
	045 Add X8, X8, 2006
	046 NotImplemented "Instruction ADR not yet implemented."
	047 Move W11, [X8]
	048 Add X10, X10, X11
	049 CallNoReturn X10
	050 Move X8, 0xDB6000
	051 Move X8, [X8+784]
	052 Move X0, [X8]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Move X0, X31
	058 Call GregorianCalendar.GetDefaultInstance
	059 Move [X22], X0
	060 Move X8, 0xDB6000
	061 Move X8, [X8+808]
	062 Move X0, [X8]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Move X0, X31
	068 Call DateTimeFormatInfo.get_InvariantInfo
	069 Move [X21], X0
	070 Move X8, 0xDB6000
	071 Move X8, [X8+784]
	072 Move X0, [X8]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Move X0, X31
	078 Call GregorianCalendar.GetDefaultInstance
	079 Move [X22], X0
	080 Move X8, 0xDB6000
	081 Move X8, [X8+808]
	082 Move X0, [X8]
	083 Move W8, [X0+224]
	084 Compare W8, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1C17DFC
	087 Move X0, X31
	088 Call DateTimeFormatInfo.get_InvariantInfo
	089 Move [X21], X0
	090 Move W8, [X23+36]
	091 Move TEMP, X8
	092 And TEMP, TEMP, 2048
	093 Compare TEMP, 2048
	094 JumpIfNotEqual {208}
	095 Or W8, W8, 0x2000
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move X24, 0xDB6000
	098 Move X24, [X24+784]
	099 Move X0, [X24]
	100 Move W8, [X0+224]
	101 Compare W8, 0
	102 JumpIfNotEqual {104}
	103 Call 0x1C17DFC
	104 Move X0, X31
	105 Call GregorianCalendar.GetDefaultInstance
	106 Move [X22], X0
	107 Move W8, [X23+36]
	108 Move [X23+40], X31
	109 Or W8, W8, 768
	110 Move [X23+36], W8
	111 Move X8, [X21]
	112 Compare X8, 0
	113 JumpIfEqual {243}
	114 Move X0, [X8+120]
	115 Compare X0, 0
	116 JumpIfEqual {243}
	117 Move X1, X31
	118 Call "il2cpp_vm_object_is_inst", X0
	119 Move X8, 0xD81000
	120 Move X8, [X8+1728]
	121 Move X9, 0xDB8000
	122 Move X22, X0
	123 Move X8, [X8]
	124 Move X9, [X9+3000]
	125 Move W10, [X8+224]
	126 Move X23, [X9]
	127 Compare W10, 0
	128 JumpIfNotEqual {131}
	129 Move X0, X8
	130 Call 0x1C17DFC
	131 Move X0, X23
	132 Move X1, X31
	133 Call Type.GetTypeFromHandle, X0
	134 Move X1, X0
	135 Move X0, X22
	136 Move X2, X31
	137 Call Type.op_Inequality, X0, X1
	138 Move TEMP, X0
	139 And TEMP, TEMP, 1
	140 Compare TEMP, 1
	141 JumpIfNotEqual {208}
	142 Move X0, [X21]
	143 Compare X0, 0
	144 JumpIfEqual {243}
	145 Move X1, X31
	146 Call DateTimeFormatInfo.Clone, X0
	147 Move X22, X0
	148 Compare X0, 0
	149 JumpIfEqual {228}
	150 Move X8, 0xDB6000
	151 Move X8, [X8+808]
	152 Move X9, [X22]
	153 Move X1, [X8]
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move [X21], X22
	156 Move X1, [X8]
	157 Move X8, [X22]
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Move X0, X22
	160 Call 0x1C181E0
	161 Move X8, 0xDB6000
	162 Move X8, [X8+808]
	163 Move X0, [X8]
	164 Move W8, [X0+224]
	165 Compare W8, 0
	166 JumpIfNotEqual {168}
	167 Call 0x1C17DFC
	168 Move X0, X31
	169 Call DateTimeFormatInfo.get_InvariantInfo
	170 Move [X21], X0
	171 Move X8, 0xDB6000
	172 Move X8, [X8+784]
	173 Move X0, [X8]
	174 Move W8, [X0+224]
	175 Compare W8, 0
	176 JumpIfNotEqual {178}
	177 Call 0x1C17DFC
	178 Move X0, X31
	179 Call GregorianCalendar.GetDefaultInstance
	180 Move [X22], X0
	181 Move X8, 0xDB6000
	182 Move X8, [X8+784]
	183 Move X0, [X8]
	184 Move W8, [X0+224]
	185 Compare W8, 0
	186 JumpIfNotEqual {188}
	187 Call 0x1C17DFC
	188 Move X0, X31
	189 Call GregorianCalendar.GetDefaultInstance
	190 Move [X22], X0
	191 Move X8, 0xDB6000
	192 Move X8, [X8+808]
	193 Move X0, [X8]
	194 Move W8, [X0+224]
	195 Compare W8, 0
	196 JumpIfNotEqual {198}
	197 Call 0x1C17DFC
	198 Move X0, X31
	199 Call DateTimeFormatInfo.get_InvariantInfo
	200 Move [X21], X0
	201 Move W8, [X23+36]
	202 Move TEMP, X8
	203 And TEMP, TEMP, 2048
	204 Compare TEMP, 2048
	205 JumpIfNotEqual {208}
	206 Or W8, W8, 0x4000
	207 Move [X23+36], W8
	208 Move X8, 0xDB6000
	209 Move X8, [X8+1352]
	210 Move X21, [X21]
	211 Move X0, [X8]
	212 Move W8, [X0+224]
	213 Compare W8, 0
	214 JumpIfNotEqual {216}
	215 Call 0x1C17DFC
	216 Move X0, X20
	217 Move X1, X19
	218 Move X2, X21
	219 Move X20, [X31+48]
	220 Move X19, [X31+56]
	221 Move X22, [X31+32]
	222 Move X21, [X31+40]
	223 Move X24, [X31+16]
	224 Move X23, [X31+24]
	225 Move X30, [X31+64]
	226 Call DateTimeFormat.GetRealFormat, X0, X1
	227 Return X0
	228 Move [X21], X31
	229 Move X0, [X24]
	230 Move W8, [X0+224]
	231 Compare W8, 0
	232 JumpIfNotEqual {234}
	233 Call 0x1C17DFC
	234 Move X0, X31
	235 Call GregorianCalendar.GetDefaultInstance
	236 Compare X22, 0
	237 JumpIfEqual {243}
	238 Move X1, X0
	239 Move X0, X22
	240 Move X2, X31
	241 Call DateTimeFormatInfo.set_Calendar, X0, X1
	242 Call 0x1C17F28
	243 Call 0x1C17F20

Method: System.Boolean ParseJapaneseEraStart(ref System.__DTString str, System.Globalization.DateTimeFormatInfo dtfi)

Disassembly:
	0x03373C80 MOV X0, X23
	0x03373C84 MOV X1, X31
	0x03373C88 BL 0x3327230
	0x03373C8C TBZ X0, 0x0, 0x3373DB4
	0x03373C90 LDR X0, [X24]
	0x03373C94 LDR W8, [X0 + 0xE0]
	0x03373C98 CBNZ W8, 0x3373CA0
	0x03373C9C BL 0x1C16DFC
	0x03373CA0 ADD X3, X31, 0x48
	0x03373CA4 MOVZ W1, 0x1
	0x03373CA8 MOVZ W2, 0x4
	0x03373CAC MOV X0, X20
	0x03373CB0 BL 0x3371678
	0x03373CB4 TBNZ X0, 0x0, 0x33732A8
	0x03373CB8 B 0x3373DE8
	0x03373CBC ADRP X23, 0xDB5000
	0x03373CC0 LDR X23, [X23 + 0x588]
	0x03373CC4 LDR X0, [X23]
	0x03373CC8 LDR W8, [X0 + 0xE0]
	0x03373CCC CBNZ W8, 0x3373CD4
	0x03373CD0 BL 0x1C16DFC
	0x03373CD4 ADD X2, X31, 0x38
	0x03373CD8 MOV X0, X20
	0x03373CDC MOV W1, W22
	0x03373CE0 BL 0x33714E0
	0x03373CE4 TBNZ X0, 0x0, 0x3373D18
	0x03373CE8 LDRB W8, [X21 + 0x14]
	0x03373CEC CBZ W8, 0x3373848
	0x03373CF0 LDR X8, [X21 + 0x18]
	0x03373CF4 CBZ X8, 0x3373EC0
	0x03373CF8 LDR X9, [X8 + 0x18]
	0x03373CFC LDR X0, [X8 + 0x40]
	0x03373D00 LDR X4, [X8 + 0x28]
	0x03373D04 ADD X3, X31, 0x38
	0x03373D08 MOV X1, X20
	0x03373D0C MOV W2, W22
	0x03373D10 BLR X9
	0x03373D14 TBZ X0, 0x0, 0x3373848
	0x03373D18 LDR X0, [X23]
	0x03373D1C LDR W20, [X31 + 0x38]
	0x03373D20 ADD X21, X19, 0x8
	0x03373D24 B 0x3373E54
	0x03373D28 LDR W8, [X19 + 0x24]
	0x03373D2C ORR W8, W8, 0x300
	0x03373D30 STR X31, [X19 + 0x28]
	0x03373D34 STR W8, [X19 + 0x24]
	0x03373D38 LDR W8, [X20 + 0x10]
	0x03373D3C ADD W8, W8, 0x1
	0x03373D40 STR W8, [X20 + 0x10]
	0x03373D44 ADRP X8, 0xDB5000
	0x03373D48 LDR X8, [X8 + 0x588]
	0x03373D4C LDR X0, [X8]
	0x03373D50 LDR W8, [X0 + 0xE0]
	0x03373D54 CBNZ W8, 0x3373D5C
	0x03373D58 BL 0x1C16DFC
	0x03373D5C MOV X0, X20
	0x03373D60 BL 0x336BB4C
	0x03373D64 TBZ X0, 0x0, 0x3373848
	0x03373D68 LDR W8, [X20 + 0x10]
	0x03373D6C SUB W8, W8, 0x1
	0x03373D70 STR W8, [X20 + 0x10]
	0x03373D74 B 0x3373E9C
	0x03373D78 BL 0x3371EE0
	0x03373D7C TBZ X0, 0x0, 0x3373848
	0x03373D80 LDR W8, [X19 + 0x24]
	0x03373D84 ORR W8, W8, 0x400

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x106A000
	007 Move X22, 0xDB1000
	008 Move W8, [X21+3840]
	009 Move X22, [X22+2912]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0xDB1000
	017 Move X0, [X0+2912]
	018 Call 0x1C17CF4
	019 Move X0, 0xDB6000
	020 Move X0, [X0+1264]
	021 Call 0x1C17CF4
	022 Move X0, 0xDB6000
	023 Move X0, [X0+1224]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+3840], W8
	027 Move X8, [X22]
	028 Move X8, [X8+184]
	029 Move W8, [X8+3]
	030 Compare W8, 0
	031 JumpIfNotEqual {67}
	032 Compare X20, 0
	033 JumpIfEqual {78}
	034 Move X0, [X20+120]
	035 Compare X0, 0
	036 JumpIfEqual {78}
	037 Move X8, [X0]
	038 Move X9, [X8+424]
	039 Move X1, [X8+432]
	040 NotImplemented "Instruction BLR not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X8, 0xDB6000
	043 Move X8, [X8+1264]
	044 Move X0, [X8]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Move X0, X19
	050 Move X1, X31
	051 Call __DTString.GetNext, X0
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {67}
	056 Move X8, 0xDB6000
	057 Move X8, [X8+1224]
	058 Move X0, [X8]
	059 Compare X0, 0
	060 JumpIfEqual {78}
	061 NotImplemented "Instruction LDRH not yet implemented."
	062 Move W1, W31
	063 Move X2, X31
	064 Call String.get_Chars, X0, X1
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move W0, 1
	067 Move W0, W31
	068 Move X20, [X31+32]
	069 Move X19, [X31+40]
	070 Move X22, [X31+16]
	071 Move X21, [X31+24]
	072 Move X30, [X31+48]
	073 Return X0
	074 Move W8, [X19+16]
	075 Move W0, W31
	076 Subtract W8, W8, 1
	077 Move [X19+16], W8
	078 Call 0x1C17F20

Method: System.Boolean ParseByFormat(ref System.__DTString str, ref System.__DTString format, ref System.ParsingInfo parseInfo, System.Globalization.DateTimeFormatInfo dtfi, ref System.DateTimeResult result)

Disassembly:
	0x03373D88 STR W8, [X19 + 0x24]
	0x03373D8C ADRP X8, 0xDB5000
	0x03373D90 LDR X8, [X8 + 0x588]
	0x03373D94 LDR W20, [X31 + 0x3C]
	0x03373D98 ADD X21, X19, 0x4
	0x03373D9C LDR X0, [X8]
	0x03373DA0 LDR W8, [X0 + 0xE0]
	0x03373DA4 CBNZ W8, 0x3373DAC
	0x03373DA8 BL 0x1C16DFC
	0x03373DAC MOVZ W2, 0x4D
	0x03373DB0 B 0x3373E64
	0x03373DB4 CMP W22, 0x2
	0x03373DB8 B.GT 0x3373DC4
	0x03373DBC MOVZ W8, 0x1
	0x03373DC0 STRB W8, [X21 + 0x11]
	0x03373DC4 LDR X0, [X24]
	0x03373DC8 LDR W8, [X0 + 0xE0]
	0x03373DCC CBNZ W8, 0x3373DD4
	0x03373DD0 BL 0x1C16DFC
	0x03373DD4 ADD X2, X31, 0x48
	0x03373DD8 MOV X0, X20
	0x03373DDC MOV W1, W22
	0x03373DE0 BL 0x33714E0
	0x03373DE4 TBNZ X0, 0x0, 0x33732A8
	0x03373DE8 LDRB W8, [X21 + 0x14]
	0x03373DEC CBZ W8, 0x3373848
	0x03373DF0 LDR X8, [X21 + 0x18]
	0x03373DF4 CBZ X8, 0x3373EC0
	0x03373DF8 LDR X9, [X8 + 0x18]
	0x03373DFC LDR X0, [X8 + 0x40]
	0x03373E00 LDR X4, [X8 + 0x28]
	0x03373E04 ADD X3, X31, 0x48
	0x03373E08 MOV X1, X20
	0x03373E0C MOV W2, W22
	0x03373E10 BLR X9
	0x03373E14 TBNZ X0, 0x0, 0x33732A8
	0x03373E18 B 0x3373848
	0x03373E1C FCMP D0, D1
	0x03373E20 B.EQ 0x3373E9C
	0x03373E24 ADRP X8, 0xD82000
	0x03373E28 LDR X8, [X8 + 0x170]
	0x03373E2C STRH W24, [X31 + 0x4]
	0x03373E30 LDR X0, [X8]
	0x03373E34 B 0x3373C50
	0x03373E38 STR W8, [X21 + 0xC]
	0x03373E3C B 0x3373E9C
	0x03373E40 BL 0x3372274
	0x03373E44 TBZ X0, 0x0, 0x3373848
	0x03373E48 LDR X0, [X24]
	0x03373E4C LDR W20, [X31 + 0x34]
	0x03373E50 ADD X21, X21, 0x8
	0x03373E54 LDR W8, [X0 + 0xE0]
	0x03373E58 CBNZ W8, 0x3373E60
	0x03373E5C BL 0x1C16DFC
	0x03373E60 MOVZ W2, 0x64
	0x03373E64 MOV X0, X21
	0x03373E68 MOV W1, W20
	0x03373E6C MOV X3, X19
	0x03373E70 BL 0x337285C
	0x03373E74 TBZ X0, 0x0, 0x3373854
	0x03373E78 B 0x3373E9C
	0x03373E7C LDR W8, [X19 + 0x24]
	0x03373E80 LDR X9, [X31 + 0x10]
	0x03373E84 B 0x3373E90
	0x03373E88 LDR W8, [X19 + 0x24]
	0x03373E8C LDR X9, [X31 + 0x8]
	0x03373E90 ORR W8, W8, 0x100
	0x03373E94 STR X9, [X19 + 0x28]
	0x03373E98 STR W8, [X19 + 0x24]
	0x03373E9C MOVZ W0, 0x1
	0x03373EA0 LDP X20, X19, [X31 + 0x90]
	0x03373EA4 LDP X22, X21, [X31 + 0x80]
	0x03373EA8 LDP X24, X23, [X31 + 0x70]
	0x03373EAC LDP X26, X25, [X31 + 0x60]
	0x03373EB0 LDP X28, X27, [X31 + 0x50]
	0x03373EB4 LDR X30, [X31 + 0x40]
	0x03373EB8 ADD X31, X31, 0xA0
	0x03373EBC RET
	0x03373EC0 BL 0x1C16F20
	0x03373EC4 BL 0x1C16F28
	0x03373EC8 STP X30, X25, [X31 - 0x40]!
	0x03373ECC STP X24, X23, [X31 + 0x10]
	0x03373ED0 STP X22, X21, [X31 + 0x20]
	0x03373ED4 STP X20, X19, [X31 + 0x30]
	0x03373ED8 ADRP X24, 0x1069000
	0x03373EDC LDRB W8, [X24 + 0xF02]
	0x03373EE0 MOV X19, X4
	0x03373EE4 MOV X21, X3
	0x03373EE8 MOV W20, W2
	0x03373EEC MOV X22, X1
	0x03373EF0 MOV X23, X0
	0x03373EF4 TBNZ X8, 0x0, 0x3373F0C
	0x03373EF8 ADRP X0, 0xDAF000
	0x03373EFC LDR X0, [X0 + 0x28]
	0x03373F00 BL 0x1C16CF4
	0x03373F04 MOVZ W8, 0x1
	0x03373F08 STRB W8, [X24 + 0xF02]
	0x03373F0C CMP W22, W20
	0x03373F10 STR W31, [X19]
	0x03373F14 B.LS 0x3373FB0
	0x03373F18 ADD W25, W20, 0x1
	0x03373F1C CMP W25, W22
	0x03373F20 B.GE 0x3373F88
	0x03373F24 LDRH W24, [X23, W20, SXTW]
	0x03373F28 CMP W25, W22
	0x03373F2C B.CS 0x3373FB0
	0x03373F30 SXTW X8, W25
	0x03373F34 LDRH W1, [X23, X8, LSL #1]
	0x03373F38 ADD X25, X8, 0x1
	0x03373F3C CMP W1, W24
	0x03373F40 B.EQ 0x3373F90
	0x03373F44 CMP W1, 0x5C
	0x03373F48 B.NE 0x3373F70
	0x03373F4C CMP W25, W22
	0x03373F50 B.GE 0x3373F88
	0x03373F54 CMP W25, W22
	0x03373F58 B.CS 0x3373FB0
	0x03373F5C CBZ X21, 0x3373FB4
	0x03373F60 LDRH W1, [X23, X25, LSL #1]
	0x03373F64 ADD W8, W8, 0x2
	0x03373F68 MOV W25, W8
	0x03373F6C B 0x3373F74
	0x03373F70 CBZ X21, 0x3373FB4
	0x03373F74 MOV X0, X21
	0x03373F78 MOV X2, X31
	0x03373F7C BL 0x3233D30
	0x03373F80 CMP W25, W22
	0x03373F84 B.LT 0x3373F28
	0x03373F88 MOV W0, W31
	0x03373F8C B 0x3373F9C
	0x03373F90 SUB W8, W25, W20
	0x03373F94 MOVZ W0, 0x1
	0x03373F98 STR W8, [X19]
	0x03373F9C LDP X20, X19, [X31 + 0x30]
	0x03373FA0 LDP X22, X21, [X31 + 0x20]
	0x03373FA4 LDP X24, X23, [X31 + 0x10]
	0x03373FA8 LDP X30, X25, [X31], #0x40
	0x03373FAC RET
	0x03373FB0 BL 0x1C16F28
	0x03373FB4 BL 0x1C16F20
	0x03373FB8 STR X30, [X31 - 0x30]!
	0x03373FBC STP X22, X21, [X31 + 0x10]
	0x03373FC0 STP X20, X19, [X31 + 0x20]
	0x03373FC4 ADRP X19, 0x1069000
	0x03373FC8 ADRP X22, 0xDB7000
	0x03373FCC ADRP X21, 0xDB7000
	0x03373FD0 ADRP X20, 0xDB7000
	0x03373FD4 LDRB W8, [X19 + 0xF05]
	0x03373FD8 LDR X22, [X22 + 0xC98]
	0x03373FDC LDR X21, [X21 + 0xCA0]
	0x03373FE0 LDR X20, [X20 + 0xCA8]
	0x03373FE4 TBNZ X8, 0x0, 0x3374104
	0x03373FE8 ADRP X0, 0xDB7000
	0x03373FEC LDR X0, [X0 + 0xC98]
	0x03373FF0 BL 0x1C16CF4
	0x03373FF4 ADRP X0, 0xDB7000
	0x03373FF8 LDR X0, [X0 + 0xCA0]
	0x03373FFC BL 0x1C16CF4
	0x03374000 ADRP X0, 0xDB4000
	0x03374004 LDR X0, [X0 + 0x588]
	0x03374008 BL 0x1C16CF4
	0x0337400C ADRP X0, 0xDB6000
	0x03374010 LDR X0, [X0 + 0xCB0]
	0x03374014 BL 0x1C16CF4
	0x03374018 ADRP X0, 0xDB6000
	0x0337401C LDR X0, [X0 + 0xCB8]
	0x03374020 BL 0x1C16CF4
	0x03374024 ADRP X0, 0xDB6000
	0x03374028 LDR X0, [X0 + 0xCC0]
	0x0337402C BL 0x1C16CF4
	0x03374030 ADRP X0, 0xDB6000
	0x03374034 LDR X0, [X0 + 0xCC8]
	0x03374038 BL 0x1C16CF4
	0x0337403C ADRP X0, 0xDB6000
	0x03374040 LDR X0, [X0 + 0xCD0]
	0x03374044 BL 0x1C16CF4
	0x03374048 ADRP X0, 0xDB6000
	0x0337404C LDR X0, [X0 + 0xCD8]
	0x03374050 BL 0x1C16CF4
	0x03374054 ADRP X0, 0xDB6000
	0x03374058 LDR X0, [X0 + 0xCE0]
	0x0337405C BL 0x1C16CF4
	0x03374060 ADRP X0, 0xDB6000
	0x03374064 LDR X0, [X0 + 0xCA8]
	0x03374068 BL 0x1C16CF4
	0x0337406C ADRP X0, 0xDB6000
	0x03374070 LDR X0, [X0 + 0xCE8]
	0x03374074 BL 0x1C16CF4
	0x03374078 ADRP X0, 0xDB6000
	0x0337407C LDR X0, [X0 + 0xCF0]
	0x03374080 BL 0x1C16CF4
	0x03374084 ADRP X0, 0xDB6000
	0x03374088 LDR X0, [X0 + 0xCF8]
	0x0337408C BL 0x1C16CF4
	0x03374090 ADRP X0, 0xDB6000
	0x03374094 LDR X0, [X0 + 0xD00]
	0x03374098 BL 0x1C16CF4
	0x0337409C ADRP X0, 0xDB6000
	0x033740A0 LDR X0, [X0 + 0xD08]
	0x033740A4 BL 0x1C16CF4
	0x033740A8 ADRP X0, 0xDB6000
	0x033740AC LDR X0, [X0 + 0xD10]
	0x033740B0 BL 0x1C16CF4
	0x033740B4 ADRP X0, 0xDB6000
	0x033740B8 LDR X0, [X0 + 0xD18]
	0x033740BC BL 0x1C16CF4
	0x033740C0 ADRP X0, 0xDB6000
	0x033740C4 LDR X0, [X0 + 0xD20]
	0x033740C8 BL 0x1C16CF4
	0x033740CC ADRP X0, 0xDB6000
	0x033740D0 LDR X0, [X0 + 0xD28]
	0x033740D4 BL 0x1C16CF4
	0x033740D8 ADRP X0, 0xDB6000
	0x033740DC LDR X0, [X0 + 0xD30]
	0x033740E0 BL 0x1C16CF4
	0x033740E4 ADRP X0, 0xDB6000
	0x033740E8 LDR X0, [X0 + 0xD38]
	0x033740EC BL 0x1C16CF4
	0x033740F0 ADRP X0, 0xDB6000
	0x033740F4 LDR X0, [X0 + 0xD40]
	0x033740F8 BL 0x1C16CF4
	0x033740FC MOVZ W8, 0x1
	0x03374100 STRB W8, [X19 + 0xF05]
	0x03374104 LDR X0, [X22]
	0x03374108 MOVZ W1, 0x14
	0x0337410C BL 0x1C16D6C
	0x03374110 LDR X8, [X21]
	0x03374114 MOV X19, X0
	0x03374118 MOVZ W1, 0x12
	0x0337411C MOV X0, X8
	0x03374120 BL 0x1C16D6C
	0x03374124 LDR X1, [X20]
	0x03374128 MOV X2, X31
	0x0337412C MOV X20, X0
	0x03374130 BL 0x32C5BD8
	0x03374134 CBZ X19, 0x3374548
	0x03374138 LDR W8, [X19 + 0x18]
	0x0337413C CBZ W8, 0x3374544
	0x03374140 STR X20, [X19 + 0x20]
	0x03374144 LDR X0, [X21]
	0x03374148 ADRP X20, 0xDB6000
	0x0337414C LDR X20, [X20 + 0xCE0]
	0x03374150 MOVZ W1, 0x12
	0x03374154 BL 0x1C16D6C
	0x03374158 LDR X1, [X20]
	0x0337415C MOV X2, X31
	0x03374160 MOV X20, X0
	0x03374164 BL 0x32C5BD8
	0x03374168 LDR W8, [X19 + 0x18]
	0x0337416C CMP W8, 0x1
	0x03374170 B.LS 0x3374544
	0x03374174 STR X20, [X19 + 0x28]
	0x03374178 LDR X0, [X21]
	0x0337417C ADRP X20, 0xDB6000
	0x03374180 LDR X20, [X20 + 0xCF8]
	0x03374184 MOVZ W1, 0x12
	0x03374188 BL 0x1C16D6C
	0x0337418C LDR X1, [X20]
	0x03374190 MOV X2, X31
	0x03374194 MOV X20, X0
	0x03374198 BL 0x32C5BD8
	0x0337419C LDR W8, [X19 + 0x18]
	0x033741A0 CMP W8, 0x2
	0x033741A4 B.LS 0x3374544
	0x033741A8 STR X20, [X19 + 0x30]
	0x033741AC LDR X0, [X21]
	0x033741B0 ADRP X20, 0xDB6000
	0x033741B4 LDR X20, [X20 + 0xD10]
	0x033741B8 MOVZ W1, 0x12
	0x033741BC BL 0x1C16D6C
	0x033741C0 LDR X1, [X20]
	0x033741C4 MOV X2, X31
	0x033741C8 MOV X20, X0
	0x033741CC BL 0x32C5BD8
	0x033741D0 LDR W8, [X19 + 0x18]
	0x033741D4 CMP W8, 0x3
	0x033741D8 B.LS 0x3374544
	0x033741DC STR X20, [X19 + 0x38]
	0x033741E0 LDR X0, [X21]
	0x033741E4 ADRP X20, 0xDB6000
	0x033741E8 LDR X20, [X20 + 0xD28]
	0x033741EC MOVZ W1, 0x12
	0x033741F0 BL 0x1C16D6C
	0x033741F4 LDR X1, [X20]
	0x033741F8 MOV X2, X31
	0x033741FC MOV X20, X0
	0x03374200 BL 0x32C5BD8
	0x03374204 LDR W8, [X19 + 0x18]
	0x03374208 CMP W8, 0x4
	0x0337420C B.LS 0x3374544
	0x03374210 STR X20, [X19 + 0x40]
	0x03374214 LDR X0, [X21]
	0x03374218 ADRP X20, 0xDB6000
	0x0337421C LDR X20, [X20 + 0xCC8]
	0x03374220 MOVZ W1, 0x12
	0x03374224 BL 0x1C16D6C
	0x03374228 LDR X1, [X20]
	0x0337422C MOV X2, X31
	0x03374230 MOV X20, X0
	0x03374234 BL 0x32C5BD8
	0x03374238 LDR W8, [X19 + 0x18]
	0x0337423C CMP W8, 0x5
	0x03374240 B.LS 0x3374544
	0x03374244 STR X20, [X19 + 0x48]
	0x03374248 LDR X0, [X21]
	0x0337424C ADRP X20, 0xDB6000
	0x03374250 LDR X20, [X20 + 0xD30]
	0x03374254 MOVZ W1, 0x12
	0x03374258 BL 0x1C16D6C
	0x0337425C LDR X1, [X20]
	0x03374260 MOV X2, X31
	0x03374264 MOV X20, X0
	0x03374268 BL 0x32C5BD8
	0x0337426C LDR W8, [X19 + 0x18]
	0x03374270 CMP W8, 0x6
	0x03374274 B.LS 0x3374544
	0x03374278 STR X20, [X19 + 0x50]
	0x0337427C LDR X0, [X21]
	0x03374280 ADRP X20, 0xDB6000
	0x03374284 LDR X20, [X20 + 0xCF0]
	0x03374288 MOVZ W1, 0x12
	0x0337428C BL 0x1C16D6C
	0x03374290 LDR X1, [X20]
	0x03374294 MOV X2, X31
	0x03374298 MOV X20, X0
	0x0337429C BL 0x32C5BD8
	0x033742A0 LDR W8, [X19 + 0x18]
	0x033742A4 CMP W8, 0x7
	0x033742A8 B.LS 0x3374544
	0x033742AC STR X20, [X19 + 0x58]
	0x033742B0 LDR X0, [X21]
	0x033742B4 ADRP X20, 0xDB6000
	0x033742B8 LDR X20, [X20 + 0xD20]
	0x033742BC MOVZ W1, 0x12
	0x033742C0 BL 0x1C16D6C
	0x033742C4 LDR X1, [X20]
	0x033742C8 MOV X2, X31
	0x033742CC MOV X20, X0
	0x033742D0 BL 0x32C5BD8
	0x033742D4 LDR W8, [X19 + 0x18]
	0x033742D8 CMP W8, 0x8
	0x033742DC B.LS 0x3374544
	0x033742E0 STR X20, [X19 + 0x60]
	0x033742E4 LDR X0, [X21]
	0x033742E8 ADRP X20, 0xDB6000
	0x033742EC LDR X20, [X20 + 0xCB8]
	0x033742F0 MOVZ W1, 0x12
	0x033742F4 BL 0x1C16D6C
	0x033742F8 LDR X1, [X20]
	0x033742FC MOV X2, X31
	0x03374300 MOV X20, X0
	0x03374304 BL 0x32C5BD8
	0x03374308 LDR W8, [X19 + 0x18]
	0x0337430C CMP W8, 0x9
	0x03374310 B.LS 0x3374544
	0x03374314 STR X20, [X19 + 0x68]
	0x03374318 LDR X0, [X21]
	0x0337431C ADRP X20, 0xDB6000
	0x03374320 LDR X20, [X20 + 0xCC0]
	0x03374324 MOVZ W1, 0x12
	0x03374328 BL 0x1C16D6C
	0x0337432C LDR X1, [X20]
	0x03374330 MOV X2, X31
	0x03374334 MOV X20, X0
	0x03374338 BL 0x32C5BD8
	0x0337433C LDR W8, [X19 + 0x18]
	0x03374340 CMP W8, 0xA
	0x03374344 B.LS 0x3374544
	0x03374348 STR X20, [X19 + 0x70]
	0x0337434C LDR X0, [X21]
	0x03374350 ADRP X20, 0xDB6000
	0x03374354 LDR X20, [X20 + 0xCD8]
	0x03374358 MOVZ W1, 0x12
	0x0337435C BL 0x1C16D6C
	0x03374360 LDR X1, [X20]
	0x03374364 MOV X2, X31
	0x03374368 MOV X20, X0
	0x0337436C BL 0x32C5BD8
	0x03374370 LDR W8, [X19 + 0x18]
	0x03374374 CMP W8, 0xB
	0x03374378 B.LS 0x3374544
	0x0337437C STR X20, [X19 + 0x78]
	0x03374380 LDR X0, [X21]
	0x03374384 ADRP X20, 0xDB6000
	0x03374388 LDR X20, [X20 + 0xCB0]
	0x0337438C MOVZ W1, 0x12
	0x03374390 BL 0x1C16D6C
	0x03374394 LDR X1, [X20]
	0x03374398 MOV X2, X31
	0x0337439C MOV X20, X0
	0x033743A0 BL 0x32C5BD8
	0x033743A4 LDR W8, [X19 + 0x18]
	0x033743A8 CMP W8, 0xC
	0x033743AC B.LS 0x3374544
	0x033743B0 STR X20, [X19 + 0x80]
	0x033743B4 LDR X0, [X21]
	0x033743B8 ADRP X20, 0xDB6000
	0x033743BC LDR X20, [X20 + 0xCE8]
	0x033743C0 MOVZ W1, 0x12
	0x033743C4 BL 0x1C16D6C
	0x033743C8 LDR X1, [X20]
	0x033743CC MOV X2, X31
	0x033743D0 MOV X20, X0
	0x033743D4 BL 0x32C5BD8
	0x033743D8 LDR W8, [X19 + 0x18]
	0x033743DC CMP W8, 0xD
	0x033743E0 B.LS 0x3374544
	0x033743E4 STR X20, [X19 + 0x88]
	0x033743E8 LDR X0, [X21]
	0x033743EC ADRP X20, 0xDB6000
	0x033743F0 LDR X20, [X20 + 0xD00]
	0x033743F4 MOVZ W1, 0x12
	0x033743F8 BL 0x1C16D6C
	0x033743FC LDR X1, [X20]
	0x03374400 MOV X2, X31
	0x03374404 MOV X20, X0
	0x03374408 BL 0x32C5BD8
	0x0337440C LDR W8, [X19 + 0x18]
	0x03374410 CMP W8, 0xE
	0x03374414 B.LS 0x3374544
	0x03374418 STR X20, [X19 + 0x90]
	0x0337441C LDR X0, [X21]
	0x03374420 ADRP X20, 0xDB6000
	0x03374424 LDR X20, [X20 + 0xCD0]
	0x03374428 MOVZ W1, 0x12
	0x0337442C BL 0x1C16D6C
	0x03374430 LDR X1, [X20]
	0x03374434 MOV X2, X31
	0x03374438 MOV X20, X0
	0x0337443C BL 0x32C5BD8
	0x03374440 LDR W8, [X19 + 0x18]
	0x03374444 CMP W8, 0xF
	0x03374448 B.LS 0x3374544
	0x0337444C STR X20, [X19 + 0x98]
	0x03374450 LDR X0, [X21]
	0x03374454 ADRP X20, 0xDB6000
	0x03374458 LDR X20, [X20 + 0xD08]
	0x0337445C MOVZ W1, 0x12
	0x03374460 BL 0x1C16D6C
	0x03374464 LDR X1, [X20]
	0x03374468 MOV X2, X31
	0x0337446C MOV X20, X0
	0x03374470 BL 0x32C5BD8
	0x03374474 LDR W8, [X19 + 0x18]
	0x03374478 CMP W8, 0x10
	0x0337447C B.LS 0x3374544
	0x03374480 STR X20, [X19 + 0xA0]
	0x03374484 LDR X0, [X21]
	0x03374488 ADRP X20, 0xDB6000
	0x0337448C LDR X20, [X20 + 0xD38]
	0x03374490 MOVZ W1, 0x12
	0x03374494 BL 0x1C16D6C
	0x03374498 LDR X1, [X20]
	0x0337449C MOV X2, X31
	0x033744A0 MOV X20, X0
	0x033744A4 BL 0x32C5BD8
	0x033744A8 LDR W8, [X19 + 0x18]
	0x033744AC CMP W8, 0x11
	0x033744B0 B.LS 0x3374544
	0x033744B4 STR X20, [X19 + 0xA8]
	0x033744B8 LDR X0, [X21]
	0x033744BC ADRP X20, 0xDB6000
	0x033744C0 LDR X20, [X20 + 0xD40]
	0x033744C4 MOVZ W1, 0x12
	0x033744C8 BL 0x1C16D6C
	0x033744CC LDR X1, [X20]
	0x033744D0 MOV X2, X31
	0x033744D4 MOV X20, X0
	0x033744D8 BL 0x32C5BD8
	0x033744DC LDR W8, [X19 + 0x18]
	0x033744E0 CMP W8, 0x12
	0x033744E4 B.LS 0x3374544
	0x033744E8 STR X20, [X19 + 0xB0]
	0x033744EC LDR X0, [X21]
	0x033744F0 ADRP X20, 0xDB6000
	0x033744F4 LDR X20, [X20 + 0xD18]
	0x033744F8 MOVZ W1, 0x12
	0x033744FC BL 0x1C16D6C
	0x03374500 LDR X1, [X20]
	0x03374504 MOV X2, X31
	0x03374508 MOV X20, X0
	0x0337450C BL 0x32C5BD8
	0x03374510 LDR W8, [X19 + 0x18]
	0x03374514 CMP W8, 0x13
	0x03374518 B.LS 0x3374544
	0x0337451C ADRP X8, 0xDB4000
	0x03374520 LDR X8, [X8 + 0x588]
	0x03374524 STR X20, [X19 + 0xB8]
	0x03374528 LDP X22, X21, [X31 + 0x10]
	0x0337452C LDR X8, [X8]
	0x03374530 LDR X8, [X8 + 0xB8]
	0x03374534 STR X19, [X8 + 0x8]
	0x03374538 LDP X20, X19, [X31 + 0x20]
	0x0337453C LDR X30, [X31], #0x30
	0x03374540 RET
	0x03374544 BL 0x1C16F28
	0x03374548 BL 0x1C16F20
	0x0337454C STR X30, [X31 - 0x40]!
	0x03374550 STP X24, X23, [X31 + 0x10]
	0x03374554 STP X22, X21, [X31 + 0x20]
	0x03374558 STP X20, X19, [X31 + 0x30]
	0x0337455C ADRP X21, 0x1068000
	0x03374560 LDRB W8, [X21 + 0xF08]
	0x03374564 MOV X19, X1
	0x03374568 MOV X20, X0
	0x0337456C CBNZ W8, 0x3374590
	0x03374570 ADRP X0, 0xDB2000
	0x03374574 LDR X0, [X0 + 0xD90]
	0x03374578 BL 0x1C16CF4
	0x0337457C ADRP X0, 0xDB4000
	0x03374580 LDR X0, [X0 + 0x4F0]
	0x03374584 BL 0x1C16CF4
	0x03374588 MOVZ W8, 0x1
	0x0337458C STRB W8, [X21 + 0xF08]
	0x03374590 CBZ X19, 0x3374658
	0x03374594 ADRP X8, 0xDB4000
	0x03374598 LDR X8, [X8 + 0x4F0]
	0x0337459C LDR W21, [X20 + 0x10]
	0x033745A0 LDR W22, [X19 + 0x10]
	0x033745A4 LDR X0, [X8]
	0x033745A8 LDR W8, [X0 + 0xE0]
	0x033745AC CBNZ W8, 0x33745B4
	0x033745B0 BL 0x1C16DFC
	0x033745B4 MOV X0, X20
	0x033745B8 MOV X1, X31
	0x033745BC BL 0x33748E0
	0x033745C0 ADD W8, W22, W21
	0x033745C4 CMP W8, W0
	0x033745C8 B.LE 0x33745D4
	0x033745CC MOV W0, W31
	0x033745D0 B 0x3374644
	0x033745D4 ADRP X9, 0xDB2000
	0x033745D8 LDR X21, [X20 + 0x18]
	0x033745DC LDRSW X23, [X20 + 0x10]
	0x033745E0 LDR W22, [X19 + 0x10]
	0x033745E4 LDR W8, [X20 + 0x8]
	0x033745E8 LDR X9, [X9 + 0xD90]
	0x033745EC SUBS W8, W8, W23
	0x033745F0 LDR X24, [X9]
	0x033745F4 B.CC 0x3374600
	0x033745F8 CMP W8, W22
	0x033745FC B.CS 0x3374608
	0x03374600 MOV X0, X31
	0x03374604 BL 0x339D6EC
	0x03374608 LDR X0, [X24 + 0x20]
	0x0337460C LDR X20, [X20]
	0x03374610 LDRB W8, [X0 + 0x135]
	0x03374614 TBNZ X8, 0x0, 0x337461C
	0x03374618 BL 0x1C5C684
	0x0337461C CBZ X21, 0x3374658
	0x03374620 ADD X1, X20, X23, 0x1, LSL
	0x03374624 MOVZ W4, 0x1
	0x03374628 MOV X0, X21
	0x0337462C MOV X2, X22
	0x03374630 MOV X3, X19
	0x03374634 MOV X5, X31
	0x03374638 BL 0x33046C4
	0x0337463C CMP W0, 0x0
	0x03374640 CSET W0, EQ
	0x03374644 LDP X20, X19, [X31 + 0x30]
	0x03374648 LDP X22, X21, [X31 + 0x20]
	0x0337464C LDP X24, X23, [X31 + 0x10]
	0x03374650 LDR X30, [X31], #0x40
	0x03374654 RET
	0x03374658 BL 0x1C16F20
	0x0337465C STP X30, X21, [X31 - 0x20]!
	0x03374660 STP X20, X19, [X31 + 0x10]
	0x03374664 ADRP X21, 0x1068000
	0x03374668 LDRB W8, [X21 + 0xF09]
	0x0337466C MOV X20, X1
	0x03374670 MOV X19, X0
	0x03374674 CBNZ W8, 0x33746A4
	0x03374678 ADRP X0, 0xDAF000
	0x0337467C LDR X0, [X0 + 0xB60]
	0x03374680 BL 0x1C16CF4
	0x03374684 ADRP X0, 0xDB4000
	0x03374688 LDR X0, [X0 + 0x4F0]
	0x0337468C BL 0x1C16CF4
	0x03374690 ADRP X0, 0xDB4000
	0x03374694 LDR X0, [X0 + 0x4C8]
	0x03374698 BL 0x1C16CF4
	0x0337469C MOVZ W8, 0x1
	0x033746A0 STRB W8, [X21 + 0xF09]
	0x033746A4 ADRP X8, 0xDAF000
	0x033746A8 LDR X8, [X8 + 0xB60]
	0x033746AC LDR X8, [X8]
	0x033746B0 LDR X8, [X8 + 0xB8]
	0x033746B4 LDRB W8, [X8 + 0x3]
	0x033746B8 CBNZ W8, 0x3374734
	0x033746BC CBZ X20, 0x3374758
	0x033746C0 LDR X0, [X20 + 0x78]
	0x033746C4 CBZ X0, 0x3374758
	0x033746C8 LDR X8, [X0]
	0x033746CC LDP X9, X1, [X8 + 0x1A8]
	0x033746D0 BLR X9
	0x033746D4 CMP W0, 0x3
	0x033746D8 B.NE 0x3374734
	0x033746DC ADRP X8, 0xDB4000
	0x033746E0 LDR X8, [X8 + 0x4F0]
	0x033746E4 LDR X0, [X8]
	0x033746E8 LDR W8, [X0 + 0xE0]
	0x033746EC CBNZ W8, 0x33746F4
	0x033746F0 BL 0x1C16DFC
	0x033746F4 MOV X0, X19
	0x033746F8 MOV X1, X31
	0x033746FC BL 0x3374A74
	0x03374700 TBZ X0, 0x0, 0x3374734
	0x03374704 ADRP X8, 0xDB4000
	0x03374708 LDR X8, [X8 + 0x4C8]
	0x0337470C LDR X0, [X8]
	0x03374710 CBZ X0, 0x3374758
	0x03374714 LDRH W20, [X19 + 0x14]
	0x03374718 MOV W1, W31
	0x0337471C MOV X2, X31
	0x03374720 BL 0x3222A1C
	0x03374724 CMP W20, W0, UXTH
	0x03374728 B.NE 0x3374744
	0x0337472C MOVZ W0, 0x1
	0x03374730 B 0x3374738
	0x03374734 MOV W0, W31
	0x03374738 LDP X20, X19, [X31 + 0x10]
	0x0337473C LDP X30, X21, [X31], #0x20
	0x03374740 RET
	0x03374744 LDR W8, [X19 + 0x10]
	0x03374748 MOV W0, W31
	0x0337474C SUB W8, W8, 0x1
	0x03374750 STR W8, [X19 + 0x10]
	0x03374754 B 0x3374738
	0x03374758 BL 0x1C16F20
	0x0337475C STP X30, X21, [X31 - 0x20]!
	0x03374760 STP X20, X19, [X31 + 0x10]
	0x03374764 LDR X8, [X2 + 0x8]
	0x03374768 STP X1, X2, [X0 + 0x20]
	0x0337476C MOV X19, X0
	0x03374770 MOV X20, X1
	0x03374774 STR X8, [X0 + 0x10]
	0x03374778 LDRB W21, [X2 + 0x52]
	0x0337477C STR X0, [X0 + 0x40]
	0x03374780 MOV X0, X2
	0x03374784 BL 0x1C16D84
	0x03374788 TBZ X0, 0x0, 0x33747A0
	0x0337478C CMP W21, 0x3
	0x03374790 B.NE 0x33747BC
	0x03374794 ADRP X8, 0xFFFFFFFFFE845000
	0x03374798 ADD X8, X8, 0x8C8
	0x0337479C B 0x33747B0
	0x033747A0 CMP W21, 0x2
	0x033747A4 B.NE 0x33747B8
	0x033747A8 ADRP X8, 0xFFFFFFFFFE845000
	0x033747AC ADD X8, X8, 0x8B0
	0x033747B0 STR X8, [X19 + 0x18]
	0x033747B4 B 0x33747CC
	0x033747B8 CBZ X20, 0x33747E4
	0x033747BC LDR X8, [X19 + 0x10]
	0x033747C0 LDR X9, [X19 + 0x20]
	0x033747C4 STR X8, [X19 + 0x18]
	0x033747C8 STR X9, [X19 + 0x40]
	0x033747CC ADRP X8, 0xFFFFFFFFFE845000
	0x033747D0 ADD X8, X8, 0x844
	0x033747D4 STR X8, [X19 + 0x38]
	0x033747D8 LDP X20, X19, [X31 + 0x10]
	0x033747DC LDP X30, X21, [X31], #0x20
	0x033747E0 RET
	0x033747E4 ADRP X1, 0xFFFFFFFFFD7A7000
	0x033747E8 ADD X1, X1, 0xEE3
	0x033747EC MOV X0, X31
	0x033747F0 BL 0x1C16F3C
	0x033747F4 MOV X1, X31
	0x033747F8 BL 0x1C16DEC
	0x033747FC LDR X8, [X0 + 0x40]
	0x03374800 LDR X5, [X0 + 0x18]
	0x03374804 LDR X4, [X0 + 0x28]
	0x03374808 MOV X0, X8
	0x0337480C BR X5
	0x03374810 STR X30, [X31 - 0x20]!
	0x03374814 STP X20, X19, [X31 + 0x10]
	0x03374818 ADRP X19, 0x1068000
	0x0337481C ADRP X20, 0xDB6000
	0x03374820 LDRB W8, [X19 + 0xF0A]
	0x03374824 LDR X20, [X20 + 0xC20]
	0x03374828 TBNZ X8, 0x0, 0x3374840
	0x0337482C ADRP X0, 0xDB6000
	0x03374830 LDR X0, [X0 + 0xC20]
	0x03374834 BL 0x1C16CF4
	0x03374838 MOVZ W8, 0x1
	0x0337483C STRB W8, [X19 + 0xF0A]
	0x03374840 LDR X0, [X20]
	0x03374844 BL 0x1C16F10
	0x03374848 MOV X1, X31
	0x0337484C MOV X19, X0
	0x03374850 BL 0x33BDD8C
	0x03374854 LDR X8, [X20]
	0x03374858 LDR X8, [X8 + 0xB8]
	0x0337485C STR X19, [X8]
	0x03374860 LDP X20, X19, [X31 + 0x10]
	0x03374864 LDR X30, [X31], #0x20
	0x03374868 RET
	0x0337486C MOV X1, X31
	0x03374870 B 0x33BDD8C
	0x03374874 STP X30, X21, [X31 - 0x20]!
	0x03374878 STP X20, X19, [X31 + 0x10]
	0x0337487C ADRP X20, 0x1068000
	0x03374880 ADRP X21, 0xDB6000
	0x03374884 ADRP X19, 0xDB6000
	0x03374888 LDRB W8, [X20 + 0xF0B]
	0x0337488C LDR X21, [X21 + 0xD48]
	0x03374890 LDR X19, [X19 + 0xD50]
	0x03374894 TBNZ X8, 0x0, 0x33748B8
	0x03374898 ADRP X0, 0xDB6000
	0x0337489C LDR X0, [X0 + 0xD50]
	0x033748A0 BL 0x1C16CF4
	0x033748A4 ADRP X0, 0xDB6000
	0x033748A8 LDR X0, [X0 + 0xD48]
	0x033748AC BL 0x1C16CF4
	0x033748B0 MOVZ W8, 0x1
	0x033748B4 STRB W8, [X20 + 0xF0B]
	0x033748B8 LDR X0, [X21]
	0x033748BC BL 0x1C16F10
	0x033748C0 LDR X2, [X19]
	0x033748C4 MOV X1, X31
	0x033748C8 MOV X19, X0
	0x033748CC BL 0x337475C
	0x033748D0 MOV X0, X19
	0x033748D4 LDP X20, X19, [X31 + 0x10]
	0x033748D8 LDP X30, X21, [X31], #0x20
	0x033748DC RET
	0x033748E0 STR X30, [X31 - 0x20]!
	0x033748E4 STP X20, X19, [X31 + 0x10]
	0x033748E8 ADRP X20, 0x1068000
	0x033748EC LDRB W8, [X20 + 0xF0C]
	0x033748F0 MOV X19, X0
	0x033748F4 TBNZ X8, 0x0, 0x337490C
	0x033748F8 ADRP X0, 0xDAE000
	0x033748FC LDR X0, [X0 + 0x28]
	0x03374900 BL 0x1C16CF4
	0x03374904 MOVZ W8, 0x1
	0x03374908 STRB W8, [X20 + 0xF0C]
	0x0337490C LDR W0, [X19 + 0x8]
	0x03374910 LDP X20, X19, [X31 + 0x10]
	0x03374914 LDR X30, [X31], #0x20
	0x03374918 RET
	0x0337491C STP X30, X25, [X31 - 0x40]!
	0x03374920 STP X24, X23, [X31 + 0x10]
	0x03374924 STP X22, X21, [X31 + 0x20]
	0x03374928 STP X20, X19, [X31 + 0x30]
	0x0337492C ADRP X25, 0x1068000
	0x03374930 ADRP X24, 0xDB4000
	0x03374934 LDRB W8, [X25 + 0xF0D]
	0x03374938 LDR X24, [X24 + 0x4F0]
	0x0337493C MOV W22, W4
	0x03374940 MOV X20, X3
	0x03374944 MOV X21, X2
	0x03374948 MOV X23, X1
	0x0337494C MOV X19, X0
	0x03374950 TBNZ X8, 0x0, 0x3374968
	0x03374954 ADRP X0, 0xDB4000
	0x03374958 LDR X0, [X0 + 0x4F0]
	0x0337495C BL 0x1C16CF4
	0x03374960 MOVZ W8, 0x1
	0x03374964 STRB W8, [X25 + 0xF0D]
	0x03374968 LDR X0, [X24]
	0x0337496C LDR W8, [X0 + 0xE0]
	0x03374970 CBNZ W8, 0x3374978
	0x03374974 BL 0x1C16DFC
	0x03374978 MOV X0, X19
	0x0337497C MOV X1, X23
	0x03374980 MOV X2, X21
	0x03374984 MOV X3, X20
	0x03374988 AND W22, W22, 0x1
	0x0337498C BL 0x33749A8
	0x03374990 STRB W22, [X19 + 0x20]
	0x03374994 LDP X20, X19, [X31 + 0x30]
	0x03374998 LDP X22, X21, [X31 + 0x20]
	0x0337499C LDP X24, X23, [X31 + 0x10]
	0x033749A0 LDP X30, X25, [X31], #0x40
	0x033749A4 RET
	0x033749A8 STP X30, X23, [X31 - 0x30]!
	0x033749AC STP X22, X21, [X31 + 0x10]
	0x033749B0 STP X20, X19, [X31 + 0x20]
	0x033749B4 ADRP X23, 0x1068000
	0x033749B8 LDRB W8, [X23 + 0xF0E]
	0x033749BC MOV X20, X3
	0x033749C0 MOV X21, X2
	0x033749C4 MOV X22, X1
	0x033749C8 MOV X19, X0
	0x033749CC TBNZ X8, 0x0, 0x33749E4
	0x033749D0 ADRP X0, 0xD81000
	0x033749D4 LDR X0, [X0 + 0xC48]
	0x033749D8 BL 0x1C16CF4
	0x033749DC MOVZ W8, 0x1
	0x033749E0 STRB W8, [X23 + 0xF0E]
	0x033749E4 MOVN W8, 0x0
	0x033749E8 STP X22, X21, [X19]
	0x033749EC STR W8, [X19 + 0x10]
	0x033749F0 STRH W31, [X19 + 0x14]
	0x033749F4 CBZ X20, 0x3374A20
	0x033749F8 MOV X0, X20
	0x033749FC MOV X1, X31
	0x03374A00 BL 0x3326E64
	0x03374A04 STR X0, [X19 + 0x18]
	0x03374A08 MOV X0, X20
	0x03374A0C MOV X1, X31
	0x03374A10 BL 0x3325D88
	0x03374A14 UBFM W8, W0, 0x5, 0x5
	0x03374A18 STRB W8, [X19 + 0x20]
	0x03374A1C B 0x3374A58
	0x03374A20 ADRP X8, 0xD81000
	0x03374A24 LDR X8, [X8 + 0xC48]
	0x03374A28 LDR X0, [X8]
	0x03374A2C LDR W8, [X0 + 0xE0]
	0x03374A30 CBNZ W8, 0x3374A38
	0x03374A34 BL 0x1C16DFC
	0x03374A38 MOV X0, X31
	0x03374A3C BL 0x33387A0
	0x03374A40 CBZ X0, 0x3374A68
	0x03374A44 LDR X8, [X0]
	0x03374A48 LDP X9, X1, [X8 + 0x1F8]
	0x03374A4C BLR X9
	0x03374A50 STR X0, [X19 + 0x18]
	0x03374A54 STRB W31, [X19 + 0x20]
	0x03374A58 LDP X20, X19, [X31 + 0x20]
	0x03374A5C LDP X22, X21, [X31 + 0x10]
	0x03374A60 LDP X30, X23, [X31], #0x30
	0x03374A64 RET
	0x03374A68 BL 0x1C16F20
	0x03374A6C LDR X0, [X0 + 0x18]
	0x03374A70 RET
	0x03374A74 STP X30, X21, [X31 - 0x20]!
	0x03374A78 STP X20, X19, [X31 + 0x10]
	0x03374A7C ADRP X20, 0x1068000
	0x03374A80 ADRP X21, 0xDB4000
	0x03374A84 LDRB W8, [X20 + 0xF0F]
	0x03374A88 LDR X21, [X21 + 0x4F0]
	0x03374A8C MOV X19, X0
	0x03374A90 TBNZ X8, 0x0, 0x3374AA8
	0x03374A94 ADRP X0, 0xDB4000
	0x03374A98 LDR X0, [X0 + 0x4F0]
	0x03374A9C BL 0x1C16CF4
	0x03374AA0 MOVZ W8, 0x1
	0x03374AA4 STRB W8, [X20 + 0xF0F]
	0x03374AA8 LDR W8, [X19 + 0x10]
	0x03374AAC ADD W20, W8, 0x1
	0x03374AB0 STR W20, [X19 + 0x10]
	0x03374AB4 LDR X0, [X21]
	0x03374AB8 LDR W8, [X0 + 0xE0]
	0x03374ABC CBNZ W8, 0x3374AC4
	0x03374AC0 BL 0x1C16DFC
	0x03374AC4 ADRP X21, 0x1068000
	0x03374AC8 LDRB W8, [X21 + 0xF0C]
	0x03374ACC TBNZ X8, 0x0, 0x3374AE4
	0x03374AD0 ADRP X0, 0xDAE000
	0x03374AD4 LDR X0, [X0 + 0x28]
	0x03374AD8 BL 0x1C16CF4
	0x03374ADC MOVZ W8, 0x1
	0x03374AE0 STRB W8, [X21 + 0xF0C]
	0x03374AE4 LDR W8, [X19 + 0x8]
	0x03374AE8 CMP W20, W8
	0x03374AEC B.GE 0x3374B08
	0x03374AF0 LDRSW X9, [X19 + 0x10]
	0x03374AF4 CMP W9, W8
	0x03374AF8 B.CS 0x3374B1C
	0x03374AFC LDR X10, [X19]
	0x03374B00 LDRH W9, [X10, X9, LSL #1]
	0x03374B04 STRH W9, [X19 + 0x14]
	0x03374B08 CMP W20, W8
	0x03374B0C LDP X20, X19, [X31 + 0x10]
	0x03374B10 CSET W0, LT
	0x03374B14 LDP X30, X21, [X31], #0x20
	0x03374B18 RET
	0x03374B1C BL 0x1C16F28
	0x03374B20 STP X30, X21, [X31 - 0x20]!
	0x03374B24 STP X20, X19, [X31 + 0x10]
	0x03374B28 ADRP X21, 0x1068000
	0x03374B2C ADRP X20, 0xDB4000
	0x03374B30 LDRB W8, [X21 + 0xF10]
	0x03374B34 LDR X20, [X20 + 0x4F0]
	0x03374B38 MOV X19, X0
	0x03374B3C TBNZ X8, 0x0, 0x3374B54
	0x03374B40 ADRP X0, 0xDB4000
	0x03374B44 LDR X0, [X0 + 0x4F0]
	0x03374B48 BL 0x1C16CF4
	0x03374B4C MOVZ W8, 0x1
	0x03374B50 STRB W8, [X21 + 0xF10]
	0x03374B54 LDR X0, [X20]
	0x03374B58 LDR W20, [X19 + 0x10]
	0x03374B5C LDR W8, [X0 + 0xE0]
	0x03374B60 CBNZ W8, 0x3374B68
	0x03374B64 BL 0x1C16DFC
	0x03374B68 ADRP X21, 0x1068000
	0x03374B6C LDRB W8, [X21 + 0xF0C]
	0x03374B70 TBNZ X8, 0x0, 0x3374B88
	0x03374B74 ADRP X0, 0xDAE000
	0x03374B78 LDR X0, [X0 + 0x28]
	0x03374B7C BL 0x1C16CF4
	0x03374B80 MOVZ W8, 0x1
	0x03374B84 STRB W8, [X21 + 0xF0C]
	0x03374B88 LDR W8, [X19 + 0x8]
	0x03374B8C CMP W20, W8
	0x03374B90 LDP X20, X19, [X31 + 0x10]
	0x03374B94 CSET W0, GE
	0x03374B98 LDP X30, X21, [X31], #0x20
	0x03374B9C RET
	0x03374BA0 STR X30, [X31 - 0x30]!
	0x03374BA4 STP X22, X21, [X31 + 0x10]
	0x03374BA8 STP X20, X19, [X31 + 0x20]
	0x03374BAC ADRP X22, 0x1068000
	0x03374BB0 ADRP X21, 0xDB4000
	0x03374BB4 LDRB W8, [X22 + 0xF11]
	0x03374BB8 LDR X21, [X21 + 0x4F0]
	0x03374BBC MOV W20, W1
	0x03374BC0 MOV X19, X0
	0x03374BC4 TBNZ X8, 0x0, 0x3374BDC
	0x03374BC8 ADRP X0, 0xDB4000
	0x03374BCC LDR X0, [X0 + 0x4F0]
	0x03374BD0 BL 0x1C16CF4
	0x03374BD4 MOVZ W8, 0x1
	0x03374BD8 STRB W8, [X22 + 0xF11]
	0x03374BDC LDR W8, [X19 + 0x10]
	0x03374BE0 ADD W20, W8, W20
	0x03374BE4 STR W20, [X19 + 0x10]
	0x03374BE8 LDR X0, [X21]
	0x03374BEC LDR W8, [X0 + 0xE0]
	0x03374BF0 CBNZ W8, 0x3374BF8
	0x03374BF4 BL 0x1C16DFC
	0x03374BF8 ADRP X21, 0x1068000
	0x03374BFC LDRB W8, [X21 + 0xF0C]
	0x03374C00 TBNZ X8, 0x0, 0x3374C18
	0x03374C04 ADRP X0, 0xDAE000
	0x03374C08 LDR X0, [X0 + 0x28]
	0x03374C0C BL 0x1C16CF4
	0x03374C10 MOVZ W8, 0x1
	0x03374C14 STRB W8, [X21 + 0xF0C]
	0x03374C18 LDR W8, [X19 + 0x8]
	0x03374C1C CMP W20, W8
	0x03374C20 B.GE 0x3374C3C
	0x03374C24 LDRSW X9, [X19 + 0x10]
	0x03374C28 CMP W9, W8
	0x03374C2C B.CS 0x3374C54
	0x03374C30 LDR X10, [X19]
	0x03374C34 LDRH W9, [X10, X9, LSL #1]
	0x03374C38 STRH W9, [X19 + 0x14]
	0x03374C3C CMP W20, W8
	0x03374C40 LDP X20, X19, [X31 + 0x20]
	0x03374C44 LDP X22, X21, [X31 + 0x10]
	0x03374C48 CSET W0, LT
	0x03374C4C LDR X30, [X31], #0x30
	0x03374C50 RET
	0x03374C54 BL 0x1C16F28
	0x03374C58 SUB X31, X31, 0x70
	0x03374C5C STP X29, X30, [X31 + 0x10]
	0x03374C60 STP X28, X27, [X31 + 0x20]
	0x03374C64 STP X26, X25, [X31 + 0x30]
	0x03374C68 STP X24, X23, [X31 + 0x40]
	0x03374C6C STP X22, X21, [X31 + 0x50]
	0x03374C70 STP X20, X19, [X31 + 0x60]
	0x03374C74 ADRP X23, 0x1068000
	0x03374C78 ADRP X25, 0xDB4000
	0x03374C7C LDRB W8, [X23 + 0xF12]
	0x03374C80 LDR X25, [X25 + 0x4F0]
	0x03374C84 MOV X22, X3
	0x03374C88 MOV X20, X2
	0x03374C8C MOV X19, X1
	0x03374C90 MOV X21, X0
	0x03374C94 TBNZ X8, 0x0, 0x3374CC4
	0x03374C98 ADRP X0, 0xD81000
	0x03374C9C LDR X0, [X0 + 0x170]
	0x03374CA0 BL 0x1C16CF4
	0x03374CA4 ADRP X0, 0xDB4000
	0x03374CA8 LDR X0, [X0 + 0x588]
	0x03374CAC BL 0x1C16CF4
	0x03374CB0 ADRP X0, 0xDB4000
	0x03374CB4 LDR X0, [X0 + 0x4F0]
	0x03374CB8 BL 0x1C16CF4
	0x03374CBC MOVZ W8, 0x1
	0x03374CC0 STRB W8, [X23 + 0xF12]
	0x03374CC4 STR X31, [X31 + 0x8]
	0x03374CC8 STR W31, [X20]
	0x03374CCC LDR X0, [X25]
	0x03374CD0 LDR W23, [X21 + 0x10]
	0x03374CD4 LDR W8, [X0 + 0xE0]
	0x03374CD8 CBNZ W8, 0x3374CE0
	0x03374CDC BL 0x1C16DFC
	0x03374CE0 ADRP X26, 0x1068000
	0x03374CE4 LDRB W8, [X26 + 0xF0C]
	0x03374CE8 TBNZ X8, 0x0, 0x3374D00
	0x03374CEC ADRP X0, 0xDAE000
	0x03374CF0 LDR X0, [X0 + 0x28]
	0x03374CF4 BL 0x1C16CF4
	0x03374CF8 MOVZ W8, 0x1
	0x03374CFC STRB W8, [X26 + 0xF0C]
	0x03374D00 LDR W8, [X21 + 0x8]
	0x03374D04 CMP W23, W8
	0x03374D08 B.GE 0x3374DF0
	0x03374D0C ADRP X27, 0xDB4000
	0x03374D10 ADRP X28, 0xD81000
	0x03374D14 ADRP X23, 0xDAE000
	0x03374D18 LDR X27, [X27 + 0x588]
	0x03374D1C LDR X28, [X28 + 0x170]
	0x03374D20 LDR X23, [X23 + 0x28]
	0x03374D24 MOVZ W8, 0xB
	0x03374D28 MOVZ W29, 0x1
	0x03374D2C STR W8, [X19]
	0x03374D30 LDR X0, [X27]
	0x03374D34 LDRH W24, [X21 + 0x14]
	0x03374D38 LDR W8, [X0 + 0xE0]
	0x03374D3C CBNZ W8, 0x3374D44
	0x03374D40 BL 0x1C16DFC
	0x03374D44 MOV W0, W24
	0x03374D48 MOV X1, X31
	0x03374D4C BL 0x336BBFC
	0x03374D50 LDRH W24, [X21 + 0x14]
	0x03374D54 TBNZ X0, 0x0, 0x3374E18
	0x03374D58 LDR X0, [X28]
	0x03374D5C LDR W8, [X0 + 0xE0]
	0x03374D60 CBNZ W8, 0x3374D68
	0x03374D64 BL 0x1C16DFC
	0x03374D68 MOV W0, W24
	0x03374D6C MOV X1, X31
	0x03374D70 BL 0x3317FCC
	0x03374D74 TBZ X0, 0x0, 0x3374ED0
	0x03374D78 LDR W8, [X21 + 0x10]
	0x03374D7C ADD W24, W8, 0x1
	0x03374D80 STR W24, [X21 + 0x10]
	0x03374D84 LDR X0, [X25]
	0x03374D88 LDR W8, [X0 + 0xE0]
	0x03374D8C CBNZ W8, 0x3374D94
	0x03374D90 BL 0x1C16DFC
	0x03374D94 LDRB W8, [X26 + 0xF0C]
	0x03374D98 TBNZ X8, 0x0, 0x3374DA8
	0x03374D9C MOV X0, X23
	0x03374DA0 BL 0x1C16CF4
	0x03374DA4 STRB W29, [X26 + 0xF0C]
	0x03374DA8 LDR W9, [X21 + 0x8]
	0x03374DAC CMP W24, W9
	0x03374DB0 B.GE 0x3374DF0
	0x03374DB4 LDRSW X8, [X21 + 0x10]
	0x03374DB8 CMP W8, W9
	0x03374DBC B.CS 0x3374F84
	0x03374DC0 LDR X9, [X21]
	0x03374DC4 LDRH W24, [X9, X8, LSL #1]
	0x03374DC8 STRH W24, [X21 + 0x14]
	0x03374DCC LDR X0, [X28]
	0x03374DD0 LDR W8, [X0 + 0xE0]
	0x03374DD4 CBNZ W8, 0x3374DDC
	0x03374DD8 BL 0x1C16DFC
	0x03374DDC MOV W0, W24
	0x03374DE0 MOV X1, X31
	0x03374DE4 BL 0x3317FCC
	0x03374DE8 TBNZ X0, 0x0, 0x3374D78
	0x03374DEC B 0x3374D30
	0x03374DF0 MOVZ W8, 0x6
	0x03374DF4 STR W8, [X19]
	0x03374DF8 LDP X20, X19, [X31 + 0x60]
	0x03374DFC LDP X22, X21, [X31 + 0x50]
	0x03374E00 LDP X24, X23, [X31 + 0x40]
	0x03374E04 LDP X26, X25, [X31 + 0x30]
	0x03374E08 LDP X28, X27, [X31 + 0x20]
	0x03374E0C LDP X29, X30, [X31 + 0x10]
	0x03374E10 ADD X31, X31, 0x70
	0x03374E14 RET
	0x03374E18 SUB W8, W24, 0x30
	0x03374E1C STR W8, [X20]
	0x03374E20 LDR W24, [X21 + 0x10]
	0x03374E24 ADRP X23, 0xDAE000
	0x03374E28 LDR X23, [X23 + 0x28]
	0x03374E2C MOVZ W28, 0xA
	0x03374E30 SXTW X8, W24
	0x03374E34 STR X8, [X31]
	0x03374E38 MOVZ W29, 0x1
	0x03374E3C MOV W8, W24
	0x03374E40 ADD W27, W8, 0x1
	0x03374E44 STR W27, [X21 + 0x10]
	0x03374E48 LDR X0, [X25]
	0x03374E4C LDR W8, [X0 + 0xE0]
	0x03374E50 CBNZ W8, 0x3374E58
	0x03374E54 BL 0x1C16DFC
	0x03374E58 LDRB W8, [X26 + 0xF0C]
	0x03374E5C TBNZ X8, 0x0, 0x3374E6C
	0x03374E60 MOV X0, X23
	0x03374E64 BL 0x1C16CF4
	0x03374E68 STRB W29, [X26 + 0xF0C]
	0x03374E6C LDR W9, [X21 + 0x8]
	0x03374E70 LDRSW X8, [X21 + 0x10]
	0x03374E74 CMP W27, W9
	0x03374E78 B.GE 0x3374EB4
	0x03374E7C CMP W8, W9
	0x03374E80 B.CS 0x3374F84
	0x03374E84 LDR X9, [X21]
	0x03374E88 LDRH W9, [X9, X8, LSL #1]
	0x03374E8C SUB W10, W9, 0x30
	0x03374E90 CMP W10, 0x9
	0x03374E94 STRH W9, [X21 + 0x14]
	0x03374E98 B.HI 0x3374EB4
	0x03374E9C LDR W8, [X20]
	0x03374EA0 MADD W8, W8, W28, W9
	0x03374EA4 SUB W8, W8, 0x30
	0x03374EA8 STR W8, [X20]
	0x03374EAC LDR W8, [X21 + 0x10]
	0x03374EB0 B 0x3374E40
	0x03374EB4 SUB W8, W8, W24
	0x03374EB8 CMP W8, 0x9
	0x03374EBC B.GE 0x3374EF4
	0x03374EC0 CMP W8, 0x2
	0x03374EC4 B.LE 0x3374F08

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X30
	003 Move [X31+80], X28
	004 Move [X31+88], X27
	005 Move [X31+96], X26
	006 Move [X31+104], X25
	007 Move [X31+112], X24
	008 Move [X31+120], X23
	009 Move [X31+128], X22
	010 Move [X31+136], X21
	011 Move [X31+144], X20
	012 Move [X31+152], X19
	013 Move X24, 0x106A000
	014 Move X28, 0xDB6000
	015 Move W8, [X24+3841]
	016 Move X28, [X28+1264]
	017 Move X19, X4
	018 Move X23, X3
	019 Move X21, X2
	020 Move X22, X1
	021 Move X20, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {55}
	026 Move X0, 0xD83000
	027 Move X0, [X0+368]
	028 Call 0x1C17CF4
	029 Move X0, 0xDB6000
	030 Move X0, [X0+1416]
	031 Call 0x1C17CF4
	032 Move X0, 0xDB0000
	033 Move X0, [X0+40]
	034 Call 0x1C17CF4
	035 Move X0, 0xD83000
	036 Move X0, [X0+1392]
	037 Call 0x1C17CF4
	038 Move X0, 0xDB6000
	039 Move X0, [X0+1264]
	040 Call 0x1C17CF4
	041 Move X0, 0xDB6000
	042 Move X0, [X0+1088]
	043 Call 0x1C17CF4
	044 Move X0, 0xDB6000
	045 Move X0, [X0+1112]
	046 Call 0x1C17CF4
	047 Move X0, 0xDB6000
	048 Move X0, [X0+1424]
	049 Call 0x1C17CF4
	050 Move X0, 0xDB8000
	051 Move X0, [X0+3216]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X24+3841], W8
	055 Move X0, [X28]
	056 Move [X31+8], X31
	057 Move [X31+16], X31
	058 Move [X31+72], X31
	059 Move [X31+48], X31
	060 Move [X31+56], X31
	061 Move [X31+32], X31
	062 Move [X31+40], X31
	063 Move [X31+28], W31
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Move X0, X22
	069 Move X1, X31
	070 Call __DTString.GetChar, X0
	071 And W8, W0, 0xFFFF
	072 Move W24, W0
	073 NotImplemented "Instruction CMP not yet implemented."
	074 NotImplemented "Instruction CMP not yet implemented."
	075 And W8, W24, 0xFFFF
	076 NotImplemented "Instruction CMP not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move W9, [X22+8]
	081 Move W8, [X22+16]
	082 Subtract W10, W9, 1
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Add W8, W8, 1
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X1, [X22]
	087 NotImplemented "Instruction LDRH not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 NotImplemented "Instruction CMP not yet implemented."
	090 And W8, W24, 0xFFFF
	091 NotImplemented "Instruction CMP not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move W8, [X19+36]
	095 Move TEMP, X8
	096 And TEMP, TEMP, 256
	097 Compare TEMP, 256
	098 JumpIfNotEqual {1162}
	099 Move X22, 0xD83000
	100 Move X22, [X22+1392]
	101 Move X21, [X19+40]
	102 Move X0, [X22]
	103 Move W8, [X0+224]
	104 Compare W8, 0
	105 JumpIfNotEqual {108}
	106 Call 0x1C17DFC
	107 Move X0, [X22]
	108 Move X8, [X0+184]
	109 Move X0, X21
	110 Move X2, X31
	111 Move X1, [X8]
	112 Call TimeSpan.op_Inequality, X0, X1
	113 Move TEMP, X0
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfNotEqual {1161}
	117 Move X8, 0xD83000
	118 Move X8, [X8+368]
	119 Move X0, [X8]
	120 Move W8, 90
	121 And W8, W24, 0xFFFF
	122 NotImplemented "Instruction CMP not yet implemented."
	123 NotImplemented "Instruction CMP not yet implemented."
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Compare X23, 0
	126 JumpIfEqual {1283}
	127 Move X0, X23
	128 Move X1, X31
	129 Call DateTimeFormatInfo.get_TimeSeparator, X0
	130 Compare X0, 0
	131 JumpIfEqual {1283}
	132 Move W8, [X0+16]
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move X0, X23
	135 Move X1, X31
	136 Call DateTimeFormatInfo.get_TimeSeparator, X0
	137 Compare X0, 0
	138 JumpIfEqual {1283}
	139 Move W1, W31
	140 Move X2, X31
	141 Call String.get_Chars, X0, X1
	142 And W8, W0, 0xFFFF
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move X0, [X28]
	145 Move W8, [X0+224]
	146 Compare W8, 0
	147 JumpIfNotEqual {149}
	148 Call 0x1C17DFC
	149 Move W1, 58
	150 Move X0, X20
	151 Move X2, X31
	152 Call __DTString.Match, X0, X1
	153 Move TEMP, X0
	154 And TEMP, TEMP, 1
	155 Compare TEMP, 1
	156 JumpIfEqual {1269}
	157 Move X0, X23
	158 Move X1, X31
	159 Call DateTimeFormatInfo.get_TimeSeparator, X0
	160 And W8, W24, 0xFFFF
	161 NotImplemented "Instruction CMP not yet implemented."
	162 NotImplemented "Instruction CMP not yet implemented."
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Move X0, [X28]
	165 Move W8, [X0+224]
	166 Compare W8, 0
	167 JumpIfNotEqual {169}
	168 Call 0x1C17DFC
	169 Move X0, X22
	170 Move X1, X31
	171 Call __DTString.GetRepeatCount, X0
	172 Move X22, 0xDB5000
	173 Move X22, [X22+1416]
	174 Move W8, W0
	175 Move [X31+76], W8
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Move X0, [X22]
	178 Move W8, 1
	179 NotImplemented "Instruction CINC not yet implemented."
	180 Move W9, [X0+224]
	181 Compare W9, 0
	182 JumpIfNotEqual {184}
	183 Call 0x1C17DFC
	184 Add X2, X31, 40
	185 Move X0, X20
	186 Move W1, W21
	187 Call DateTimeParse.ParseDigits, X0, X1, X2
	188 Move TEMP, X0
	189 And TEMP, TEMP, 1
	190 Compare TEMP, 1
	191 JumpIfNotEqual {780}
	192 Move X0, [X22]
	193 Move W20, [X31+40]
	194 Add X21, X19, 20
	195 Move W8, [X0+224]
	196 Compare W8, 0
	197 JumpIfNotEqual {199}
	198 Call 0x1C17DFC
	199 Move W2, 115
	200 NotImplemented "Instruction CMP not yet implemented."
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Move X0, [X28]
	203 Move W8, [X0+224]
	204 Compare W8, 0
	205 JumpIfNotEqual {207}
	206 Call 0x1C17DFC
	207 Move W1, 46
	208 Move X0, X20
	209 Move X2, X31
	210 Call __DTString.Match, X0, X1
	211 Move TEMP, X0
	212 And TEMP, TEMP, 1
	213 Compare TEMP, 1
	214 JumpIfEqual {1269}
	215 Move X0, [X28]
	216 Move W8, [X0+224]
	217 Compare W8, 0
	218 JumpIfNotEqual {220}
	219 Call 0x1C17DFC
	220 Move X0, X22
	221 Move X1, X31
	222 Call __DTString.GetNext, X0
	223 Move TEMP, X0
	224 And TEMP, TEMP, 1
	225 Compare TEMP, 1
	226 JumpIfNotEqual {780}
	227 Move X0, [X28]
	228 Move W8, [X0+224]
	229 Compare W8, 0
	230 JumpIfNotEqual {232}
	231 Call 0x1C17DFC
	232 Move W1, 70
	233 Move X0, X22
	234 Move X2, X31
	235 Call __DTString.Match, X0, X1
	236 Move TEMP, X0
	237 And TEMP, TEMP, 1
	238 Compare TEMP, 1
	239 JumpIfNotEqual {780}
	240 Move X0, [X28]
	241 Move W8, [X0+224]
	242 Compare W8, 0
	243 JumpIfNotEqual {245}
	244 Call 0x1C17DFC
	245 Move X0, X22
	246 Move X1, X31
	247 Call __DTString.GetRepeatCount, X0
	248 Subtract W9, W8, 100
	249 NotImplemented "Instruction CMP not yet implemented."
	250 Move X8, -41799680
	251 Add X8, X8, 2014
	252 NotImplemented "Instruction ADR not yet implemented."
	253 NotImplemented "Instruction LDRH not yet implemented."
	254 Add X10, X10, X11
	255 CallNoReturn X10
	256 Move X0, [X28]
	257 Move W8, [X0+224]
	258 Compare W8, 0
	259 JumpIfNotEqual {261}
	260 Call 0x1C17DFC
	261 Move X0, X22
	262 Move X1, X31
	263 Call __DTString.GetRepeatCount, X0
	264 Move W22, W0
	265 NotImplemented "Instruction CMP not yet implemented."
	266 Move [X31+76], W0
	267 Move X24, 0xDB5000
	268 Move X24, [X24+1416]
	269 Move X0, [X24]
	270 Move W8, [X0+224]
	271 Compare W8, 0
	272 JumpIfNotEqual {274}
	273 Call 0x1C17DFC
	274 Add X2, X31, 52
	275 Move X0, X20
	276 Move X1, X23
	277 NotImplemented "Instruction CMP not yet implemented."
	278 Call DateTimeParse.MatchAbbreviatedDayName, X0, X1, X2
	279 Move TEMP, X0
	280 And TEMP, TEMP, 1
	281 Compare TEMP, 1
	282 JumpIfNotEqual {780}
	283 NotImplemented "Instruction CMP not yet implemented."
	284 NotImplemented "Instruction CMP not yet implemented."
	285 NotImplemented "Instruction CMP not yet implemented."
	286 Move X0, [X28]
	287 Move W8, [X0+224]
	288 Compare W8, 0
	289 JumpIfNotEqual {291}
	290 Call 0x1C17DFC
	291 Move W1, 90
	292 Move X0, X20
	293 Move X2, X31
	294 Call __DTString.Match, X0, X1
	295 Move TEMP, X0
	296 And TEMP, TEMP, 1
	297 Compare TEMP, 1
	298 JumpIfNotEqual {1016}
	299 Move W8, [X19+36]
	300 Move TEMP, X8
	301 And TEMP, TEMP, 256
	302 Compare TEMP, 256
	303 JumpIfNotEqual {323}
	304 Move X21, 0xD82000
	305 Move X21, [X21+1392]
	306 Move X20, [X19+40]
	307 Move X0, [X21]
	308 Move W8, [X0+224]
	309 Compare W8, 0
	310 JumpIfNotEqual {313}
	311 Call 0x1C17DFC
	312 Move X0, [X21]
	313 Move X8, [X0+184]
	314 Move X0, X20
	315 Move X2, X31
	316 Move X1, [X8]
	317 Call TimeSpan.op_Inequality, X0, X1
	318 Move TEMP, X0
	319 And TEMP, TEMP, 1
	320 Compare TEMP, 1
	321 JumpIfEqual {1088}
	322 Move W8, [X19+36]
	323 Or W8, W8, 768
	324 Move [X19+40], X31
	325 NotImplemented "Instruction CMP not yet implemented."
	326 NotImplemented "Instruction CMP not yet implemented."
	327 NotImplemented "Instruction CMP not yet implemented."
	328 Move X0, [X28]
	329 Move W8, [X0+224]
	330 Compare W8, 0
	331 JumpIfNotEqual {333}
	332 Call 0x1C17DFC
	333 Move X0, X22
	334 Move X1, X31
	335 Call __DTString.GetRepeatCount, X0
	336 Move X24, 0xDB5000
	337 Move X24, [X24+1416]
	338 Move [X31+76], W0
	339 Move W22, W0
	340 Move X8, [X24]
	341 Move W9, [X8+224]
	342 Compare W9, 0
	343 JumpIfNotEqual {346}
	344 Move X0, X8
	345 Call 0x1C17DFC
	346 Move X0, X20
	347 Move X1, X23
	348 Move X2, X31
	349 Call 0x337565C
	350 Move TEMP, X0
	351 And TEMP, TEMP, 1
	352 Compare TEMP, 1
	353 JumpIfNotEqual {1103}
	354 Move W8, 1
	355 Move [X31+72], W8
	356 Move X0, [X24]
	357 Move W20, [X31+72]
	358 Move W8, [X0+224]
	359 Compare W8, 0
	360 JumpIfNotEqual {362}
	361 Call 0x1C17DFC
	362 Move W2, 121
	363 Move X0, X19
	364 Move W0, 16
	365 Move X1, X31
	366 Call StringBuilderCache.Acquire, X0
	367 Move X8, 0xDB5000
	368 Move X8, [X8+1416]
	369 Move X25, [X22]
	370 Move X26, [X22+8]
	371 Move W27, [X22+16]
	372 Move X23, X0
	373 Move X8, [X8]
	374 Move W9, [X8+224]
	375 Compare W9, 0
	376 JumpIfNotEqual {379}
	377 Move X0, X8
	378 Call 0x1C17DFC
	379 Add X4, X31, 76
	380 Move X0, X25
	381 Move X1, X26
	382 Move W2, W27
	383 Move X3, X23
	384 Call DateTimeParse.TryParseQuoteString, X0, X1, X2, X3
	385 Move TEMP, X0
	386 And TEMP, TEMP, 1
	387 Compare TEMP, 1
	388 JumpIfNotEqual {629}
	389 Move W8, [X22+16]
	390 Move W9, [X31+76]
	391 Move X0, X23
	392 Move X1, X31
	393 Add W8, W8, W9
	394 Subtract W8, W8, 1
	395 Move [X22+16], W8
	396 Call StringBuilderCache.GetStringAndRelease, X0
	397 Compare X0, 0
	398 JumpIfEqual {1283}
	399 Move W8, [X0+16]
	400 Move X22, X0
	401 NotImplemented "Instruction CMP not yet implemented."
	402 Move W23, W31
	403 Move X0, X22
	404 Move W1, W23
	405 Move X2, X31
	406 Call String.get_Chars, X0, X1
	407 And W8, W0, 0xFFFF
	408 NotImplemented "Instruction CMP not yet implemented."
	409 Move W8, [X21+18]
	410 Compare W8, 0
	411 JumpIfEqual {420}
	412 Move X0, [X28]
	413 Move W8, [X0+224]
	414 Compare W8, 0
	415 JumpIfNotEqual {417}
	416 Call 0x1C17DFC
	417 Move X0, X20
	418 Move X1, X31
	419 Call __DTString.SkipWhiteSpaces, X0
	420 Move X0, X22
	421 Move W1, W23
	422 Move X2, X31
	423 Call String.get_Chars, X0, X1
	424 Move X8, [X28]
	425 Move W24, W0
	426 Move W9, [X8+224]
	427 Compare W9, 0
	428 JumpIfNotEqual {431}
	429 Move X0, X8
	430 Call 0x1C17DFC
	431 Move X0, X20
	432 Move W1, W24
	433 Move X2, X31
	434 Call __DTString.Match, X0, X1
	435 Move TEMP, X0
	436 And TEMP, TEMP, 1
	437 Compare TEMP, 1
	438 JumpIfNotEqual {780}
	439 Move W8, [X22+16]
	440 Add W23, W23, 1
	441 NotImplemented "Instruction CMP not yet implemented."
	442 Move W8, [X19+36]
	443 Move TEMP, X8
	444 And TEMP, TEMP, 2048
	445 Compare TEMP, 2048
	446 JumpIfNotEqual {1269}
	447 Move TEMP, X8
	448 And TEMP, TEMP, 0x2000
	449 Compare TEMP, 0x2000
	450 JumpIfNotEqual {462}
	451 Move X8, 0xDB5000
	452 Move X8, [X8+1112]
	453 Move X0, X22
	454 Move X2, X31
	455 Move X1, [X8]
	456 Call String.op_Equality, X0, X1
	457 Move W8, [X19+36]
	458 Move TEMP, X0
	459 And TEMP, TEMP, 1
	460 Compare TEMP, 1
	461 JumpIfEqual {477}
	462 Move TEMP, X8
	463 And TEMP, TEMP, 0x4000
	464 Compare TEMP, 0x4000
	465 JumpIfNotEqual {1269}
	466 Move X8, 0xDB5000
	467 Move X8, [X8+1088]
	468 Move X0, X22
	469 Move X2, X31
	470 Move X1, [X8]
	471 Call String.op_Equality, X0, X1
	472 Move TEMP, X0
	473 And TEMP, TEMP, 1
	474 Compare TEMP, 1
	475 JumpIfNotEqual {1269}
	476 Move W8, [X19+36]
	477 Or W8, W8, 256
	478 Move [X19+36], W8
	479 Move X20, 0xD82000
	480 Move X20, [X20+1392]
	481 Move X0, [X20]
	482 Move W8, [X0+224]
	483 Compare W8, 0
	484 JumpIfNotEqual {487}
	485 Call 0x1C17DFC
	486 Move X0, [X20]
	487 Move X8, [X0+184]
	488 Move X8, [X8]
	489 Move [X19+40], X8
	490 Move X0, [X28]
	491 Move W8, [X0+224]
	492 Compare W8, 0
	493 JumpIfNotEqual {495}
	494 Call 0x1C17DFC
	495 Move X0, X22
	496 Move X1, X31
	497 Call __DTString.GetRepeatCount, X0
	498 NotImplemented "Instruction CMP not yet implemented."
	499 Move [X31+76], W0
	500 Move X8, 0xDB5000
	501 Move X8, [X8+1416]
	502 Move W21, W0
	503 Move X0, [X8]
	504 Move W8, [X0+224]
	505 Compare W8, 0
	506 JumpIfNotEqual {508}
	507 Call 0x1C17DFC
	508 Add X2, X31, 32
	509 Move X0, X20
	510 Move W1, W21
	511 Call DateTimeParse.ParseFractionExact, X0, X1, X2
	512 And W8, W24, 0xFFFF
	513 NotImplemented "Instruction CMP not yet implemented."
	514 Move TEMP, X0
	515 And TEMP, TEMP, 1
	516 Compare TEMP, 1
	517 JumpIfNotEqual {780}
	518 Move V1, [X19+24]
	519 Move V0, [X31+32]
	520 NotImplemented "Instruction FCMP not yet implemented."
	521 Move [X19+24], D0
	522 Move X0, [X28]
	523 Move W8, [X0+224]
	524 Compare W8, 0
	525 JumpIfNotEqual {527}
	526 Call 0x1C17DFC
	527 Move X0, X22
	528 Move X1, X31
	529 Call __DTString.GetRepeatCount, X0
	530 Move [X31+76], W0
	531 Move X8, 0xDB5000
	532 Move X8, [X8+1416]
	533 Move W22, W0
	534 NotImplemented "Instruction CMP not yet implemented."
	535 Move X0, [X8]
	536 Move W8, [X0+224]
	537 Compare W8, 0
	538 JumpIfNotEqual {540}
	539 Call 0x1C17DFC
	540 Add X2, X31, 60
	541 Move X0, X20
	542 Move X1, X23
	543 NotImplemented "Instruction CMP not yet implemented."
	544 Call DateTimeParse.MatchAbbreviatedMonthName, X0, X1, X2
	545 Move TEMP, X0
	546 And TEMP, TEMP, 1
	547 Compare TEMP, 1
	548 JumpIfNotEqual {780}
	549 Compare X23, 0
	550 JumpIfEqual {1283}
	551 Move X0, X23
	552 Move X1, X31
	553 Call DateTimeFormatInfo.get_DateSeparator, X0
	554 Compare X0, 0
	555 JumpIfEqual {1283}
	556 Move W8, [X0+16]
	557 NotImplemented "Instruction CMP not yet implemented."
	558 Move X0, X23
	559 Move X1, X31
	560 Call DateTimeFormatInfo.get_DateSeparator, X0
	561 Compare X0, 0
	562 JumpIfEqual {1283}
	563 Move W1, W31
	564 Move X2, X31
	565 Call String.get_Chars, X0, X1
	566 And W8, W0, 0xFFFF
	567 NotImplemented "Instruction CMP not yet implemented."
	568 Move X0, [X28]
	569 Move W8, [X0+224]
	570 Compare W8, 0
	571 JumpIfNotEqual {573}
	572 Call 0x1C17DFC
	573 Move W1, 47
	574 Move X0, X20
	575 Move X2, X31
	576 Call __DTString.Match, X0, X1
	577 Move TEMP, X0
	578 And TEMP, TEMP, 1
	579 Compare TEMP, 1
	580 JumpIfEqual {1269}
	581 Move X0, X23
	582 Move X1, X31
	583 Call DateTimeFormatInfo.get_DateSeparator, X0
	584 Move X8, [X28]
	585 Move X21, X0
	586 Move W9, [X8+224]
	587 Compare W9, 0
	588 JumpIfNotEqual {591}
	589 Move X0, X8
	590 Call 0x1C17DFC
	591 Move X0, X20
	592 Move X1, X21
	593 Move X0, [X28]
	594 Move W8, [X0+224]
	595 Compare W8, 0
	596 JumpIfNotEqual {598}
	597 Call 0x1C17DFC
	598 Move X0, X22
	599 Move X1, X31
	600 Call __DTString.GetRepeatCount, X0
	601 Move X22, 0xDB5000
	602 Move X22, [X22+1416]
	603 Move W8, W0
	604 Move [X31+76], W8
	605 NotImplemented "Instruction CMP not yet implemented."
	606 Move X0, [X22]
	607 Move W8, 1
	608 NotImplemented "Instruction CINC not yet implemented."
	609 Move W9, [X0+224]
	610 Compare W9, 0
	611 JumpIfNotEqual {613}
	612 Call 0x1C17DFC
	613 Add X2, X31, 44
	614 Move X0, X20
	615 Move W1, W21
	616 Call DateTimeParse.ParseDigits, X0, X1, X2
	617 Move TEMP, X0
	618 And TEMP, TEMP, 1
	619 Compare TEMP, 1
	620 JumpIfNotEqual {780}
	621 Move X0, [X22]
	622 Move W20, [X31+44]
	623 Add X21, X19, 16
	624 Move W8, [X0+224]
	625 Compare W8, 0
	626 JumpIfNotEqual {628}
	627 Call 0x1C17DFC
	628 Move W2, 109
	629 Move X8, 0xD82000
	630 Move X8, [X8+368]
	631 Add X1, X31, 4
	632 NotImplemented "Instruction STRH not yet implemented."
	633 Move X0, [X8]
	634 Call 0x1C17E04
	635 Move X8, 0xDB5000
	636 Move X8, [X8+1424]
	637 Move X3, X0
	638 Move W1, 3
	639 Move X0, X19
	640 Move X2, [X8]
	641 Move X4, X31
	642 Call DateTimeResult.SetFailure, X0, X1, X2, X3
	643 Move X0, X23
	644 Move X1, X31
	645 Call StringBuilderCache.Release, X0
	646 Move W8, [X21+18]
	647 Compare W8, 0
	648 JumpIfNotEqual {1269}
	649 Move X0, [X28]
	650 Move W8, [X0+224]
	651 Compare W8, 0
	652 JumpIfNotEqual {654}
	653 Call 0x1C17DFC
	654 Move W1, 32
	655 Move X0, X20
	656 Move X2, X31
	657 Call __DTString.Match, X0, X1
	658 Move TEMP, X0
	659 And TEMP, TEMP, 1
	660 Compare TEMP, 1
	661 JumpIfEqual {1269}
	662 Move W8, [X21+19]
	663 Compare W8, 0
	664 JumpIfEqual {780}
	665 Move X0, [X28]
	666 Move W8, [X0+224]
	667 Compare W8, 0
	668 JumpIfNotEqual {670}
	669 Call 0x1C17DFC
	670 Move X0, X22
	671 Move X1, X31
	672 Call __DTString.GetNext, X0
	673 Move TEMP, X0
	674 And TEMP, TEMP, 1
	675 Compare TEMP, 1
	676 JumpIfNotEqual {780}
	677 Move X8, 0xDB5000
	678 Move X8, [X8+1416]
	679 Move X0, [X8]
	680 Move W8, [X0+224]
	681 Compare W8, 0
	682 JumpIfNotEqual {684}
	683 Call 0x1C17DFC
	684 Move X0, X20
	685 Move X1, X22
	686 Move X2, X21
	687 Move X3, X23
	688 Move X4, X19
	689 Call DateTimeParse.ParseByFormat, X0, X1, X2, X3, X4
	690 Move TEMP, X0
	691 And TEMP, TEMP, 1
	692 Compare TEMP, 1
	693 JumpIfNotEqual {780}
	694 NotImplemented "Instruction CMP not yet implemented."
	695 Move X0, [X28]
	696 Move W8, [X0+224]
	697 Compare W8, 0
	698 JumpIfNotEqual {700}
	699 Call 0x1C17DFC
	700 Move X0, X22
	701 Move X1, X31
	702 Call __DTString.GetNext, X0
	703 Move TEMP, X0
	704 And TEMP, TEMP, 1
	705 Compare TEMP, 1
	706 JumpIfNotEqual {905}
	707 Move X0, [X28]
	708 Move W8, [X0+224]
	709 Compare W8, 0
	710 JumpIfNotEqual {712}
	711 Call 0x1C17DFC
	712 Move X0, X22
	713 Move X1, X31
	714 Call __DTString.GetChar, X0
	715 Move W1, W0
	716 Move X0, X20
	717 Move X0, [X28]
	718 Move W8, [X0+224]
	719 Compare W8, 0
	720 JumpIfNotEqual {722}
	721 Call 0x1C17DFC
	722 Move X21, 0xDB5000
	723 Move X21, [X21+1112]
	724 Move X0, X22
	725 Move X2, X31
	726 Move X1, [X21]
	727 Call 0x337554C
	728 Move TEMP, X0
	729 And TEMP, TEMP, 1
	730 Compare TEMP, 1
	731 JumpIfNotEqual {767}
	732 Move X8, [X21]
	733 Compare X8, 0
	734 JumpIfEqual {1283}
	735 Move W9, [X22+16]
	736 Move W8, [X8+16]
	737 Add W8, W9, W8
	738 Subtract W8, W8, 1
	739 Move [X22+16], W8
	740 Move W8, [X19+36]
	741 Move X22, 0xD82000
	742 Or W8, W8, 256
	743 Move [X19+36], W8
	744 Move X22, [X22+1392]
	745 Move X0, [X22]
	746 Move W8, [X0+224]
	747 Compare W8, 0
	748 JumpIfNotEqual {751}
	749 Call 0x1C17DFC
	750 Move X0, [X22]
	751 Move X8, [X0+184]
	752 Move X8, [X8]
	753 Move [X19+40], X8
	754 Move X0, [X28]
	755 Move W8, [X0+224]
	756 Compare W8, 0
	757 JumpIfNotEqual {759}
	758 Call 0x1C17DFC
	759 Move X1, [X21]
	760 Move X0, X20
	761 Move X2, X31
	762 Call __DTString.Match, X0, X1
	763 Move TEMP, X0
	764 And TEMP, TEMP, 1
	765 Compare TEMP, 1
	766 JumpIfNotEqual {780}
	767 Move X0, [X28]
	768 Move W8, [X0+224]
	769 Compare W8, 0
	770 JumpIfNotEqual {772}
	771 Call 0x1C17DFC
	772 Move X0, X20
	773 Move W1, W24
	774 Move X2, X31
	775 Call __DTString.Match, X0, X1
	776 Move TEMP, X0
	777 And TEMP, TEMP, 1
	778 Compare TEMP, 1
	779 JumpIfEqual {1269}
	780 Move X0, X19
	781 Move X1, X31
	782 Call DateTimeResult.SetBadDateTimeFailure, X0
	783 Move W0, W31
	784 Move X0, [X28]
	785 Move W8, [X0+224]
	786 Compare W8, 0
	787 JumpIfNotEqual {789}
	788 Call 0x1C17DFC
	789 Move X0, X22
	790 Move X1, X31
	791 Call __DTString.GetRepeatCount, X0
	792 Move X22, 0xDB5000
	793 Move X22, [X22+1416]
	794 Move W8, W0
	795 Move [X31+76], W8
	796 NotImplemented "Instruction CMP not yet implemented."
	797 Move X0, [X22]
	798 Move W8, 1
	799 NotImplemented "Instruction CINC not yet implemented."
	800 Move W9, [X0+224]
	801 Compare W9, 0
	802 JumpIfNotEqual {804}
	803 Call 0x1C17DFC
	804 Add X2, X31, 48
	805 Move X0, X20
	806 Move W1, W21
	807 Call DateTimeParse.ParseDigits, X0, X1, X2
	808 Move TEMP, X0
	809 And TEMP, TEMP, 1
	810 Compare TEMP, 1
	811 JumpIfNotEqual {780}
	812 Move X0, [X22]
	813 Move W20, [X31+48]
	814 Add X21, X19, 12
	815 Move W8, [X0+224]
	816 Compare W8, 0
	817 JumpIfNotEqual {819}
	818 Call 0x1C17DFC
	819 Move W2, 72
	820 Move X0, [X28]
	821 Move W8, [X0+224]
	822 Compare W8, 0
	823 JumpIfNotEqual {825}
	824 Call 0x1C17DFC
	825 Move X0, X22
	826 Move X1, X31
	827 Call __DTString.GetRepeatCount, X0
	828 Move X8, 0xDB5000
	829 Move X8, [X8+1416]
	830 Move [X31+76], W0
	831 Move W22, W0
	832 Move X8, [X8]
	833 Move W9, [X8+224]
	834 Compare W9, 0
	835 JumpIfNotEqual {838}
	836 Move X0, X8
	837 Call 0x1C17DFC
	838 Add X2, X31, 28
	839 Move X0, X20
	840 Move X1, X23
	841 NotImplemented "Instruction CMP not yet implemented."
	842 Call DateTimeParse.MatchAbbreviatedTimeMark, X0, X1, X2
	843 Move TEMP, X0
	844 And TEMP, TEMP, 1
	845 Compare TEMP, 1
	846 JumpIfNotEqual {780}
	847 Move X0, [X28]
	848 Move W8, [X0+224]
	849 Compare W8, 0
	850 JumpIfNotEqual {852}
	851 Call 0x1C17DFC
	852 Move X0, X22
	853 Move X1, X31
	854 Call __DTString.GetRepeatCount, X0
	855 Move X22, 0xD82000
	856 Move X22, [X22+1392]
	857 Move [X31+76], W0
	858 Move W21, W0
	859 Move X8, [X22]
	860 Move W9, [X8+224]
	861 Compare W9, 0
	862 JumpIfNotEqual {865}
	863 Move X0, X8
	864 Call 0x1C17DFC
	865 Move X8, 0xDB5000
	866 Move X8, [X8+1416]
	867 Move [X31+16], X31
	868 Move X0, [X8]
	869 Move W8, [X0+224]
	870 Compare W8, 0
	871 JumpIfNotEqual {873}
	872 Call 0x1C17DFC
	873 Add X2, X31, 16
	874 Move X0, X20
	875 Move W1, W21
	876 Call DateTimeParse.ParseTimeZoneOffset, X0, X1, X2
	877 Move TEMP, X0
	878 And TEMP, TEMP, 1
	879 Compare TEMP, 1
	880 JumpIfNotEqual {780}
	881 Move W8, [X19+36]
	882 Move TEMP, X8
	883 And TEMP, TEMP, 256
	884 Compare TEMP, 256
	885 JumpIfNotEqual {1263}
	886 Move X0, [X22]
	887 Move X20, [X31+16]
	888 Move X21, [X19+40]
	889 Move W8, [X0+224]
	890 Compare W8, 0
	891 JumpIfNotEqual {893}
	892 Call 0x1C17DFC
	893 Move X0, X20
	894 Move X1, X21
	895 Move X2, X31
	896 Call TimeSpan.op_Inequality, X0, X1
	897 Move TEMP, X0
	898 And TEMP, TEMP, 1
	899 Compare TEMP, 1
	900 JumpIfNotEqual {1262}
	901 Move X8, 0xD82000
	902 Move X8, [X8+368]
	903 Move X0, [X8]
	904 Move W8, 122
	905 Move X1, [X22]
	906 Move X2, [X22+8]
	907 Move X0, X19
	908 Move X3, X31
	909 Call DateTimeResult.SetBadFormatSpecifierFailure, X0, X1
	910 Move X0, [X28]
	911 Move W8, [X0+224]
	912 Compare W8, 0
	913 JumpIfNotEqual {915}
	914 Call 0x1C17DFC
	915 Move X0, X22
	916 Move X1, X31
	917 Call __DTString.GetRepeatCount, X0
	918 Move X8, 0xDB5000
	919 Move X8, [X8+1416]
	920 Move [X31+76], W0
	921 Add X21, X19, 32
	922 Move X8, [X8]
	923 Move W9, [X8+224]
	924 Compare W9, 0
	925 JumpIfNotEqual {928}
	926 Move X0, X8
	927 Call 0x1C17DFC
	928 Move X0, X20
	929 Move X1, X23
	930 Move X2, X21
	931 Call DateTimeParse.MatchEraName, X0, X1, X2
	932 Move TEMP, X0
	933 And TEMP, TEMP, 1
	934 Compare TEMP, 1
	935 JumpIfNotEqual {780}
	936 Move W23, 1
	937 Move [X21+16], W23
	938 Move X0, [X28]
	939 Move W8, [X0+224]
	940 Compare W8, 0
	941 JumpIfNotEqual {943}
	942 Call 0x1C17DFC
	943 Move X0, X22
	944 Move X1, X31
	945 Call __DTString.GetRepeatCount, X0
	946 Move X22, 0xDB5000
	947 Move X22, [X22+1416]
	948 Move [X31+76], W0
	949 NotImplemented "Instruction CMP not yet implemented."
	950 NotImplemented "Instruction CINC not yet implemented."
	951 Move X8, [X22]
	952 Move W9, [X8+224]
	953 Compare W9, 0
	954 JumpIfNotEqual {957}
	955 Move X0, X8
	956 Call 0x1C17DFC
	957 Add X2, X31, 48
	958 Move X0, X20
	959 Move W1, W21
	960 Call DateTimeParse.ParseDigits, X0, X1, X2
	961 Move TEMP, X0
	962 And TEMP, TEMP, 1
	963 Compare TEMP, 1
	964 JumpIfNotEqual {780}
	965 Move X0, [X22]
	966 Move W20, [X31+48]
	967 Add X21, X19, 12
	968 Move W8, [X0+224]
	969 Compare W8, 0
	970 JumpIfNotEqual {972}
	971 Call 0x1C17DFC
	972 Move W2, 104
	973 Move X0, [X8]
	974 Move W8, [X0+224]
	975 Compare W8, 0
	976 JumpIfNotEqual {978}
	977 Call 0x1C17DFC
	978 Add X2, X31, 60
	979 Move X0, X20
	980 Move W1, W22
	981 Call DateTimeParse.ParseDigits, X0, X1, X2
	982 Move TEMP, X0
	983 And TEMP, TEMP, 1
	984 Compare TEMP, 1
	985 JumpIfEqual {1192}
	986 Move W8, [X21+20]
	987 Compare W8, 0
	988 JumpIfEqual {780}
	989 Move X8, [X21+24]
	990 Compare X8, 0
	991 JumpIfEqual {1283}
	992 Move X9, [X8+24]
	993 Move X0, [X8+64]
	994 Move X4, [X8+40]
	995 Add X3, X31, 60
	996 Move X1, X20
	997 Move W2, W22
	998 NotImplemented "Instruction BLR not yet implemented."
	999 Move TEMP, X0
	1000 And TEMP, TEMP, 1
	1001 Compare TEMP, 1
	1002 JumpIfNotEqual {780}
	1003 Call DateTimeParse.MatchTimeMark, X0, X1, X2
	1004 Move TEMP, X0
	1005 And TEMP, TEMP, 1
	1006 Compare TEMP, 1
	1007 JumpIfNotEqual {780}
	1008 Move W9, [X21+12]
	1009 Move W8, [X31+28]
	1010 Add W31, W9, 1
	1011 NotImplemented "Instruction CMP not yet implemented."
	1012 Move X8, 0xD82000
	1013 Move X8, [X8+368]
	1014 Move X0, [X8]
	1015 Move W8, 116
	1016 Move X0, [X28]
	1017 Move W8, [X0+224]
	1018 Compare W8, 0
	1019 JumpIfNotEqual {1021}
	1020 Call 0x1C17DFC
	1021 Move W1, 43
	1022 Move X0, X20
	1023 Move X2, X31
	1024 Call __DTString.Match, X0, X1
	1025 Move TEMP, X0
	1026 And TEMP, TEMP, 1
	1027 Compare TEMP, 1
	1028 JumpIfEqual {1042}
	1029 Move X0, [X28]
	1030 Move W8, [X0+224]
	1031 Compare W8, 0
	1032 JumpIfNotEqual {1034}
	1033 Call 0x1C17DFC
	1034 Move W1, 45
	1035 Move X0, X20
	1036 Move X2, X31
	1037 Call __DTString.Match, X0, X1
	1038 Move TEMP, X0
	1039 And TEMP, TEMP, 1
	1040 Compare TEMP, 1
	1041 JumpIfNotEqual {1269}
	1042 Move W8, [X20+16]
	1043 Move X21, 0xD82000
	1044 Subtract W8, W8, 1
	1045 Move [X20+16], W8
	1046 Move X21, [X21+1392]
	1047 Move X0, [X21]
	1048 Move W8, [X0+224]
	1049 Compare W8, 0
	1050 JumpIfNotEqual {1052}
	1051 Call 0x1C17DFC
	1052 Move X8, 0xDB5000
	1053 Move X8, [X8+1416]
	1054 Move [X31+8], X31
	1055 Move X0, [X8]
	1056 Move W8, [X0+224]
	1057 Compare W8, 0
	1058 JumpIfNotEqual {1060}
	1059 Call 0x1C17DFC
	1060 Add X2, X31, 8
	1061 Move W1, 3
	1062 Move X0, X20
	1063 Call DateTimeParse.ParseTimeZoneOffset, X0, X1, X2
	1064 Move TEMP, X0
	1065 And TEMP, TEMP, 1
	1066 Compare TEMP, 1
	1067 JumpIfNotEqual {780}
	1068 Move W8, [X19+36]
	1069 Move TEMP, X8
	1070 And TEMP, TEMP, 256
	1071 Compare TEMP, 256
	1072 JumpIfNotEqual {1265}
	1073 Move X0, [X21]
	1074 Move X20, [X31+8]
	1075 Move X21, [X19+40]
	1076 Move W8, [X0+224]
	1077 Compare W8, 0
	1078 JumpIfNotEqual {1080}
	1079 Call 0x1C17DFC
	1080 Move X0, X20
	1081 Move X1, X21
	1082 Move X2, X31
	1083 Call TimeSpan.op_Inequality, X0, X1
	1084 Move TEMP, X0
	1085 And TEMP, TEMP, 1
	1086 Compare TEMP, 1
	1087 JumpIfNotEqual {1264}
	1088 Move X8, 0xD82000
	1089 Move X8, [X8+368]
	1090 Move X0, [X8]
	1091 Move W8, 75
	1092 NotImplemented "Instruction STRH not yet implemented."
	1093 Add X1, X31, 4
	1094 Call 0x1C17E04
	1095 Move X8, 0xDB7000
	1096 Move X8, [X8+3216]
	1097 Move X3, X0
	1098 Move W1, 3
	1099 Move X0, X19
	1100 Move X2, [X8]
	1101 Move X4, X31
	1102 Call DateTimeResult.SetFailure, X0, X1, X2, X3
	1103 Compare X23, 0
	1104 JumpIfEqual {1283}
	1105 Move X0, X23
	1106 Move X1, X31
	1107 Call DateTimeFormatInfo.get_HasForceTwoDigitYears, X0
	1108 Move TEMP, X0
	1109 And TEMP, TEMP, 1
	1110 Compare TEMP, 1
	1111 JumpIfNotEqual {1202}
	1112 Move X0, [X24]
	1113 Move W8, [X0+224]
	1114 Compare W8, 0
	1115 JumpIfNotEqual {1117}
	1116 Call 0x1C17DFC
	1117 Add X3, X31, 72
	1118 Move W1, 1
	1119 Move W2, 4
	1120 Move X0, X20
	1121 Call DateTimeParse.ParseDigits, X0, X1, X2, X3
	1122 Move TEMP, X0
	1123 And TEMP, TEMP, 1
	1124 Compare TEMP, 1
	1125 JumpIfEqual {356}
	1126 Move X23, 0xDB5000
	1127 Move X23, [X23+1416]
	1128 Move X0, [X23]
	1129 Move W8, [X0+224]
	1130 Compare W8, 0
	1131 JumpIfNotEqual {1133}
	1132 Call 0x1C17DFC
	1133 Add X2, X31, 56
	1134 Move X0, X20
	1135 Move W1, W22
	1136 Call DateTimeParse.ParseDigits, X0, X1, X2
	1137 Move TEMP, X0
	1138 And TEMP, TEMP, 1
	1139 Compare TEMP, 1
	1140 JumpIfEqual {1158}
	1141 Move W8, [X21+20]
	1142 Compare W8, 0
	1143 JumpIfEqual {780}
	1144 Move X8, [X21+24]
	1145 Compare X8, 0
	1146 JumpIfEqual {1283}
	1147 Move X9, [X8+24]
	1148 Move X0, [X8+64]
	1149 Move X4, [X8+40]
	1150 Add X3, X31, 56
	1151 Move X1, X20
	1152 Move W2, W22
	1153 NotImplemented "Instruction BLR not yet implemented."
	1154 Move TEMP, X0
	1155 And TEMP, TEMP, 1
	1156 Compare TEMP, 1
	1157 JumpIfNotEqual {780}
	1158 Move X0, [X23]
	1159 Move W20, [X31+56]
	1160 Add X21, X19, 8
	1161 Move W8, [X19+36]
	1162 Or W8, W8, 768
	1163 Move [X19+40], X31
	1164 Move [X19+36], W8
	1165 Move W8, [X20+16]
	1166 Add W8, W8, 1
	1167 Move [X20+16], W8
	1168 Move X8, 0xDB5000
	1169 Move X8, [X8+1416]
	1170 Move X0, [X8]
	1171 Move W8, [X0+224]
	1172 Compare W8, 0
	1173 JumpIfNotEqual {1175}
	1174 Call 0x1C17DFC
	1175 Move X0, X20
	1176 Call DateTimeParse.GetTimeZoneName, X0
	1177 Move TEMP, X0
	1178 And TEMP, TEMP, 1
	1179 Compare TEMP, 1
	1180 JumpIfNotEqual {780}
	1181 Move W8, [X20+16]
	1182 Subtract W8, W8, 1
	1183 Move [X20+16], W8
	1184 Call DateTimeParse.MatchMonthName, X0, X1, X2
	1185 Move TEMP, X0
	1186 And TEMP, TEMP, 1
	1187 Compare TEMP, 1
	1188 JumpIfNotEqual {780}
	1189 Move W8, [X19+36]
	1190 Or W8, W8, 1024
	1191 Move [X19+36], W8
	1192 Move X8, 0xDB5000
	1193 Move X8, [X8+1416]
	1194 Move W20, [X31+60]
	1195 Add X21, X19, 4
	1196 Move X0, [X8]
	1197 Move W8, [X0+224]
	1198 Compare W8, 0
	1199 JumpIfNotEqual {1201}
	1200 Call 0x1C17DFC
	1201 Move W2, 77
	1202 NotImplemented "Instruction CMP not yet implemented."
	1203 Move W8, 1
	1204 Move [X21+17], W8
	1205 Move X0, [X24]
	1206 Move W8, [X0+224]
	1207 Compare W8, 0
	1208 JumpIfNotEqual {1210}
	1209 Call 0x1C17DFC
	1210 Add X2, X31, 72
	1211 Move X0, X20
	1212 Move W1, W22
	1213 Call DateTimeParse.ParseDigits, X0, X1, X2
	1214 Move TEMP, X0
	1215 And TEMP, TEMP, 1
	1216 Compare TEMP, 1
	1217 JumpIfEqual {356}
	1218 Move W8, [X21+20]
	1219 Compare W8, 0
	1220 JumpIfEqual {780}
	1221 Move X8, [X21+24]
	1222 Compare X8, 0
	1223 JumpIfEqual {1283}
	1224 Move X9, [X8+24]
	1225 Move X0, [X8+64]
	1226 Move X4, [X8+40]
	1227 Add X3, X31, 72
	1228 Move X1, X20
	1229 Move W2, W22
	1230 NotImplemented "Instruction BLR not yet implemented."
	1231 Move TEMP, X0
	1232 And TEMP, TEMP, 1
	1233 Compare TEMP, 1
	1234 JumpIfEqual {356}
	1235 NotImplemented "Instruction FCMP not yet implemented."
	1236 Move X8, 0xD82000
	1237 Move X8, [X8+368]
	1238 NotImplemented "Instruction STRH not yet implemented."
	1239 Move X0, [X8]
	1240 Move [X21+12], W8
	1241 Call DateTimeParse.MatchDayName, X0, X1, X2
	1242 Move TEMP, X0
	1243 And TEMP, TEMP, 1
	1244 Compare TEMP, 1
	1245 JumpIfNotEqual {780}
	1246 Move X0, [X24]
	1247 Move W20, [X31+52]
	1248 Add X21, X21, 8
	1249 Move W8, [X0+224]
	1250 Compare W8, 0
	1251 JumpIfNotEqual {1253}
	1252 Call 0x1C17DFC
	1253 Move W2, 100
	1254 Move X0, X21
	1255 Move W1, W20
	1256 Move X3, X19
	1257 Call DateTimeParse.CheckNewValue, X0, X1, X2, X3
	1258 Move TEMP, X0
	1259 And TEMP, TEMP, 1
	1260 Compare TEMP, 1
	1261 JumpIfNotEqual {783}
	1262 Move W8, [X19+36]
	1263 Move X9, [X31+16]
	1264 Move W8, [X19+36]
	1265 Move X9, [X31+8]
	1266 Or W8, W8, 256
	1267 Move [X19+40], X9
	1268 Move [X19+36], W8
	1269 Move W0, 1
	1270 Move X20, [X31+144]
	1271 Move X19, [X31+152]
	1272 Move X22, [X31+128]
	1273 Move X21, [X31+136]
	1274 Move X24, [X31+112]
	1275 Move X23, [X31+120]
	1276 Move X26, [X31+96]
	1277 Move X25, [X31+104]
	1278 Move X28, [X31+80]
	1279 Move X27, [X31+88]
	1280 Move X30, [X31+64]
	1281 Add X31, X31, 160
	1282 Return X0
	1283 Call 0x1C17F20
	1284 Call 0x1C17F28

Method: System.Boolean TryParseQuoteString(System.ReadOnlySpan`1<System.Char> format, System.Int32 pos, System.Text.StringBuilder result, out System.Int32 returnValue)

Disassembly:
	0x03374EC8 MOVZ W8, 0x2
	0x03374ECC B 0x3374F0C
	0x03374ED0 CBZ X22, 0x3374F88
	0x03374ED4 MOVZ W1, 0xFF
	0x03374ED8 MOV X0, X22
	0x03374EDC MOV X2, X19
	0x03374EE0 MOV X3, X20
	0x03374EE4 MOV X4, X21
	0x03374EE8 MOV X5, X31
	0x03374EEC BL 0x332958C
	0x03374EF0 B 0x3374DF8
	0x03374EF4 MOVZ W8, 0x1
	0x03374EF8 MOVN W9, 0x0
	0x03374EFC STR W8, [X19]
	0x03374F00 STR W9, [X20]
	0x03374F04 B 0x3374F10
	0x03374F08 MOVZ W8, 0x1
	0x03374F0C STR W8, [X19]
	0x03374F10 LDRB W8, [X21 + 0x20]
	0x03374F14 CBZ W8, 0x3374DF8
	0x03374F18 LDR W8, [X21 + 0x8]
	0x03374F1C LDR W25, [X21 + 0x10]
	0x03374F20 LDRH W23, [X21 + 0x14]
	0x03374F24 STR W24, [X21 + 0x10]
	0x03374F28 CMP W24, W8
	0x03374F2C B.CS 0x3374F84
	0x03374F30 LDR X8, [X21]
	0x03374F34 LDR X9, [X31]
	0x03374F38 LDRH W8, [X8, X9, LSL #1]
	0x03374F3C STRH W8, [X21 + 0x14]
	0x03374F40 CBZ X22, 0x3374F88
	0x03374F44 ADD X2, X31, 0xC
	0x03374F48 ADD X3, X31, 0x8
	0x03374F4C MOVZ W1, 0xFF
	0x03374F50 MOV X0, X22
	0x03374F54 MOV X4, X21
	0x03374F58 MOV X5, X31
	0x03374F5C BL 0x332958C
	0x03374F60 TBZ X0, 0x0, 0x3374F78
	0x03374F64 LDR W8, [X31 + 0xC]
	0x03374F68 STR W8, [X19]
	0x03374F6C LDR W8, [X31 + 0x8]
	0x03374F70 STR W8, [X20]
	0x03374F74 B 0x3374DF8
	0x03374F78 STR W25, [X21 + 0x10]
	0x03374F7C STRH W23, [X21 + 0x14]
	0x03374F80 B 0x3374DF8
	0x03374F84 BL 0x1C16F28
	0x03374F88 BL 0x1C16F20
	0x03374F8C STR X30, [X31 - 0x40]!
	0x03374F90 STP X24, X23, [X31 + 0x10]
	0x03374F94 STP X22, X21, [X31 + 0x20]
	0x03374F98 STP X20, X19, [X31 + 0x30]
	0x03374F9C ADRP X24, 0x1068000
	0x03374FA0 ADRP X23, 0xDB4000
	0x03374FA4 LDRB W8, [X24 + 0xF13]
	0x03374FA8 LDR X23, [X23 + 0x4F0]
	0x03374FAC MOV X21, X3
	0x03374FB0 MOV X22, X2
	0x03374FB4 MOV X19, X1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0x1069000
	010 Move W8, [X24+3842]
	011 Move X19, X4
	012 Move X21, X3
	013 Move W20, W2
	014 Move X22, X1
	015 Move X23, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xDAF000
	021 Move X0, [X0+40]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+3842], W8
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move [X19], W31
	027 Add W25, W20, 1
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction LDRH not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X8, W25
	032 NotImplemented "Instruction LDRH not yet implemented."
	033 Add X25, X8, 1
	034 NotImplemented "Instruction CMP not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Compare X21, 0
	039 JumpIfEqual {63}
	040 NotImplemented "Instruction LDRH not yet implemented."
	041 Add W8, W8, 2
	042 Move W25, W8
	043 Compare X21, 0
	044 JumpIfEqual {63}
	045 Move X0, X21
	046 Move X2, X31
	047 Call StringBuilder.Append, X0, X1
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move W0, W31
	050 Subtract W8, W25, W20
	051 Move W0, 1
	052 Move [X19], W8
	053 Move X20, [X31+48]
	054 Move X19, [X31+56]
	055 Move X22, [X31+32]
	056 Move X21, [X31+40]
	057 Move X24, [X31+16]
	058 Move X23, [X31+24]
	059 Move X30, [X31+64]
	060 Move X25, [X31+72]
	061 Return X0
	062 Call 0x1C17F28
	063 Call 0x1C17F20

Method: System.Boolean DoStrictParse(System.ReadOnlySpan`1<System.Char> s, System.ReadOnlySpan`1<System.Char> formatParam, System.Globalization.DateTimeStyles styles, System.Globalization.DateTimeFormatInfo dtfi, ref System.DateTimeResult result)

Disassembly:
	0x0336BEF0 SUB W8, W8, 0x1
	0x0336BEF4 CMP W8, 0x1
	0x0336BEF8 B.HI 0x336BF90
	0x0336BEFC LDP V0, V1, [X31 + 0xE0]
	0x0336BF00 LDR X0, [X24]
	0x0336BF04 LDR W23, [X31 + 0xFC]
	0x0336BF08 STP V0, V1, [X31 + 0xC0]
	0x0336BF0C LDR W8, [X0 + 0xE0]
	0x0336BF10 CBNZ W8, 0x336BF18
	0x0336BF14 BL 0x1C16DFC
	0x0336BF18 LDP V0, V1, [X31 + 0xC0]
	0x0336BF1C ADD X1, X31, 0x20
	0x0336BF20 MOV X0, X20
	0x0336BF24 MOV X2, X31
	0x0336BF28 STP V0, V1, [X31 + 0x20]
	0x0336BF2C BL 0x33764EC
	0x0336BF30 B 0x336BF88
	0x0336BF34 LDP V0, V1, [X31 + 0xE0]
	0x0336BF38 LDR X0, [X24]
	0x0336BF3C MOVZ W8, 0x851F
	0x0336BF40 MOVK W8, 0x51EB0000
	0x0336BF44 STP V0, V1, [X31 + 0xC0]
	0x0336BF48 SMADDL X8, X22, X8, X31
	0x0336BF4C LDR W10, [X0 + 0xE0]
	0x0336BF50 UBFM X9, X8, 0x3F, 0x3F
	0x0336BF54 SBFM X8, X8, 0x25, 0x3F
	0x0336BF58 ADD W24, W8, W9
	0x0336BF5C MOVZ W8, 0x64
	0x0336BF60 MSUB W23, W24, W8, W22
	0x0336BF64 CBNZ W10, 0x336BF6C
	0x0336BF68 BL 0x1C16DFC
	0x0336BF6C LDP V0, V1, [X31 + 0xC0]
	0x0336BF70 ADD X1, X31, 0x0
	0x0336BF74 MOV X0, X20
	0x0336BF78 MOV X2, X31
	0x0336BF7C STP V0, V1, [X31]
	0x0336BF80 BL 0x33764EC
	0x0336BF84 MOV W22, W24
	0x0336BF88 CMP W23, 0x3B
	0x0336BF8C B.LS 0x336BFB0
	0x0336BF90 MOV W0, W31
	0x0336BF94 LDP X20, X19, [X31 + 0x130]
	0x0336BF98 LDP X22, X21, [X31 + 0x120]
	0x0336BF9C LDP X24, X23, [X31 + 0x110]
	0x0336BFA0 LDP X29, X30, [X31 + 0x100]
	0x0336BFA4 ADD X31, X31, 0x140
	0x0336BFA8 RET
	0x0336BFAC MOV W23, W31
	0x0336BFB0 ADD X0, X31, 0xC0
	0x0336BFB4 MOV W1, W22
	0x0336BFB8 MOV W2, W23
	0x0336BFBC MOV W3, W31
	0x0336BFC0 MOV X4, X31
	0x0336BFC4 STR X31, [X31 + 0xC0]
	0x0336BFC8 BL 0x3393ED0
	0x0336BFCC LDR X8, [X31 + 0xC0]
	0x0336BFD0 AND W9, W21, 0xFFFF
	0x0336BFD4 CMP W9, 0x2D
	0x0336BFD8 STR X8, [X19]
	0x0336BFDC B.NE 0x336C008
	0x0336BFE0 ADRP X8, 0xD8A000
	0x0336BFE4 LDR X8, [X8 + 0x570]
	0x0336BFE8 LDR X0, [X8]
	0x0336BFEC LDR W8, [X0 + 0xE0]
	0x0336BFF0 CBNZ W8, 0x336BFF8
	0x0336BFF4 BL 0x1C16DFC
	0x0336BFF8 MOV X0, X19
	0x0336BFFC MOV X1, X31
	0x0336C000 BL 0x33946A4
	0x0336C004 STR X0, [X19]
	0x0336C008 MOVZ W0, 0x1
	0x0336C00C B 0x336BF94
	0x0336C010 STP X30, X25, [X31 - 0x40]!
	0x0336C014 STP X24, X23, [X31 + 0x10]
	0x0336C018 STP X22, X21, [X31 + 0x20]
	0x0336C01C STP X20, X19, [X31 + 0x30]
	0x0336C020 ADRP X21, 0x1070000
	0x0336C024 ADRP X22, 0xDBC000
	0x0336C028 LDRB W8, [X21 + 0xECE]
	0x0336C02C LDR X22, [X22 + 0x4F0]
	0x0336C030 MOV X19, X1
	0x0336C034 MOV X20, X0
	0x0336C038 TBNZ X8, 0x0, 0x336C068
	0x0336C03C ADRP X0, 0xD89000
	0x0336C040 LDR X0, [X0 + 0x170]
	0x0336C044 BL 0x1C16CF4
	0x0336C048 ADRP X0, 0xDBC000
	0x0336C04C LDR X0, [X0 + 0x588]
	0x0336C050 BL 0x1C16CF4
	0x0336C054 ADRP X0, 0xDBC000
	0x0336C058 LDR X0, [X0 + 0x4F0]
	0x0336C05C BL 0x1C16CF4
	0x0336C060 MOVZ W8, 0x1
	0x0336C064 STRB W8, [X21 + 0xECE]
	0x0336C068 LDR X0, [X22]
	0x0336C06C LDR W21, [X20 + 0x10]
	0x0336C070 LDR W8, [X0 + 0xE0]
	0x0336C074 CBNZ W8, 0x336C07C
	0x0336C078 BL 0x1C16DFC
	0x0336C07C MOV X0, X20
	0x0336C080 MOV X1, X31
	0x0336C084 BL 0x33748E0
	0x0336C088 SUB W8, W0, 0x1
	0x0336C08C CMP W21, W8
	0x0336C090 B.GE 0x336C17C
	0x0336C094 LDR W8, [X20 + 0x10]
	0x0336C098 LDR W9, [X20 + 0x8]
	0x0336C09C CMP W8, W9
	0x0336C0A0 B.CS 0x336C120
	0x0336C0A4 ADRP X24, 0xD89000
	0x0336C0A8 LDR X24, [X24 + 0x170]
	0x0336C0AC MOV W23, W31
	0x0336C0B0 LDR X0, [X24]
	0x0336C0B4 LDR X9, [X20]
	0x0336C0B8 LDR W10, [X0 + 0xE0]
	0x0336C0BC LDRH W21, [X9, W8, SXTW]
	0x0336C0C0 CBNZ W10, 0x336C0C8
	0x0336C0C4 BL 0x1C16DFC
	0x0336C0C8 MOV W0, W21
	0x0336C0CC MOV X1, X31
	0x0336C0D0 BL 0x3317FCC
	0x0336C0D4 TBZ X0, 0x0, 0x336C124
	0x0336C0D8 LDR X0, [X22]
	0x0336C0DC LDR W25, [X20 + 0x10]
	0x0336C0E0 LDR W8, [X0 + 0xE0]
	0x0336C0E4 CBNZ W8, 0x336C0EC
	0x0336C0E8 BL 0x1C16DFC
	0x0336C0EC MOV X0, X20
	0x0336C0F0 MOV X1, X31
	0x0336C0F4 BL 0x33748E0
	0x0336C0F8 ADD W8, W23, W25
	0x0336C0FC SUB W9, W0, 0x1
	0x0336C100 CMP W8, W9
	0x0336C104 B.GE 0x336C124
	0x0336C108 LDR W8, [X20 + 0x10]
	0x0336C10C LDR W9, [X20 + 0x8]
	0x0336C110 ADD W23, W23, 0x1
	0x0336C114 ADD W8, W8, W23
	0x0336C118 CMP W8, W9
	0x0336C11C B.CC 0x336C0B0
	0x0336C120 BL 0x1C16F28
	0x0336C124 CMP W21, 0x2D
	0x0336C128 B.EQ 0x336C134
	0x0336C12C CMP W21, 0x2B
	0x0336C130 B.NE 0x336C17C
	0x0336C134 LDR W8, [X20 + 0x10]
	0x0336C138 ADD W8, W8, W23
	0x0336C13C STR W8, [X20 + 0x10]
	0x0336C140 LDR W8, [X19 + 0x24]
	0x0336C144 TBNZ X8, 0x8, 0x336C184
	0x0336C148 ORR W8, W8, 0x100
	0x0336C14C STR W8, [X19 + 0x24]
	0x0336C150 ADRP X8, 0xDBC000
	0x0336C154 LDR X8, [X8 + 0x588]
	0x0336C158 ADD X21, X19, 0x28
	0x0336C15C LDR X0, [X8]
	0x0336C160 LDR W8, [X0 + 0xE0]
	0x0336C164 CBNZ W8, 0x336C16C
	0x0336C168 BL 0x1C16DFC
	0x0336C16C MOV X0, X20
	0x0336C170 MOV X1, X21
	0x0336C174 BL 0x336BCFC
	0x0336C178 TBZ X0, 0x0, 0x336C184
	0x0336C17C MOVZ W0, 0x1
	0x0336C180 B 0x336C194
	0x0336C184 MOV X0, X19
	0x0336C188 MOV X1, X31
	0x0336C18C BL 0x33767C8
	0x0336C190 MOV W0, W31
	0x0336C194 LDP X20, X19, [X31 + 0x30]
	0x0336C198 LDP X22, X21, [X31 + 0x20]
	0x0336C19C LDP X24, X23, [X31 + 0x10]
	0x0336C1A0 LDP X30, X25, [X31], #0x40
	0x0336C1A4 RET
	0x0336C1A8 SUB X31, X31, 0x60
	0x0336C1AC STR X30, [X31 + 0x10]
	0x0336C1B0 STP X26, X25, [X31 + 0x20]
	0x0336C1B4 STP X24, X23, [X31 + 0x30]
	0x0336C1B8 STP X22, X21, [X31 + 0x40]
	0x0336C1BC STP X20, X19, [X31 + 0x50]
	0x0336C1C0 ADRP X25, 0x1070000
	0x0336C1C4 STR W6, [X31 + 0x1C]
	0x0336C1C8 ADRP X26, 0xDBC000
	0x0336C1CC LDRB W8, [X25 + 0xECF]
	0x0336C1D0 LDR X26, [X26 + 0x4F0]
	0x0336C1D4 MOV X24, X5
	0x0336C1D8 MOV X20, X4
	0x0336C1DC MOV X23, X3
	0x0336C1E0 MOV X19, X2
	0x0336C1E4 MOV X21, X1
	0x0336C1E8 MOV W22, W0
	0x0336C1EC TBNZ X8, 0x0, 0x336C24C
	0x0336C1F0 ADRP X0, 0xD89000
	0x0336C1F4 LDR X0, [X0 + 0x170]
	0x0336C1F8 BL 0x1C16CF4
	0x0336C1FC ADRP X0, 0xDBC000
	0x0336C200 LDR X0, [X0 + 0x328]
	0x0336C204 BL 0x1C16CF4
	0x0336C208 ADRP X0, 0xDBC000
	0x0336C20C LDR X0, [X0 + 0x588]
	0x0336C210 BL 0x1C16CF4
	0x0336C214 ADRP X0, 0xDBB000
	0x0336C218 LDR X0, [X0 + 0x930]
	0x0336C21C BL 0x1C16CF4
	0x0336C220 ADRP X0, 0xD87000
	0x0336C224 LDR X0, [X0 + 0x758]
	0x0336C228 BL 0x1C16CF4
	0x0336C22C ADRP X0, 0xDBC000
	0x0336C230 LDR X0, [X0 + 0x4F0]
	0x0336C234 BL 0x1C16CF4
	0x0336C238 ADRP X0, 0xDBE000
	0x0336C23C LDR X0, [X0 + 0xC48]
	0x0336C240 BL 0x1C16CF4
	0x0336C244 MOVZ W8, 0x1
	0x0336C248 STRB W8, [X25 + 0xECF]
	0x0336C24C MOVZ W8, 0x12
	0x0336C250 STR W31, [X31 + 0x18]
	0x0336C254 STR X31, [X31 + 0x8]
	0x0336C258 STRH W31, [X31 + 0x4]
	0x0336C25C STR W8, [X19]
	0x0336C260 LDR X0, [X26]
	0x0336C264 LDR X25, [X24]
	0x0336C268 LDR W8, [X0 + 0xE0]
	0x0336C26C CBNZ W8, 0x336C274
	0x0336C270 BL 0x1C16DFC
	0x0336C274 ADD X1, X31, 0x18
	0x0336C278 ADD X2, X31, 0xC
	0x0336C27C MOV X0, X21
	0x0336C280 MOV X3, X25
	0x0336C284 MOV X4, X31
	0x0336C288 BL 0x3374C58
	0x0336C28C LDR W8, [X31 + 0x18]
	0x0336C290 SUB W8, W8, 0x1
	0x0336C294 CMP W8, 0xD
	0x0336C298 B.HI 0x336CE74
	0x0336C29C ADRP X9, 0xFFFFFFFFFD82A000
	0x0336C2A0 ADD X9, X9, 0x78A
	0x0336C2A4 ADR X10, 0x10
	0x0336C2A8 LDRH W11, [X9, X8, LSL #1]
	0x0336C2AC ADD X10, X10, X11, 0x2, LSL
	0x0336C2B0 BR X10
	0x0336C2B4 LDR W8, [X23 + 0x8]
	0x0336C2B8 CMP W8, 0x3
	0x0336C2BC B.EQ 0x336CBC8
	0x0336C2C0 LDR W8, [X31 + 0xC]
	0x0336C2C4 ADDS W31, W8, 0x1
	0x0336C2C8 B.EQ 0x336CBC8
	0x0336C2CC CMP W22, 0x12
	0x0336C2D0 B.EQ 0x336C350
	0x0336C2D4 CMP W22, 0x13
	0x0336C2D8 B.NE 0x336C3A4
	0x0336C2DC LDR X0, [X26]
	0x0336C2E0 LDR W25, [X21 + 0x10]
	0x0336C2E4 LDR W8, [X0 + 0xE0]
	0x0336C2E8 CBNZ W8, 0x336C2F0
	0x0336C2EC BL 0x1C16DFC
	0x0336C2F0 MOV X0, X21
	0x0336C2F4 MOV X1, X31
	0x0336C2F8 BL 0x33748E0
	0x0336C2FC SUB W8, W0, 0x1
	0x0336C300 CMP W25, W8
	0x0336C304 B.GE 0x336C350
	0x0336C308 LDRSW X8, [X21 + 0x10]
	0x0336C30C LDR W9, [X21 + 0x8]
	0x0336C310 CMP W8, W9
	0x0336C314 B.CS 0x336CEC8
	0x0336C318 LDR X9, [X21]
	0x0336C31C LDRH W8, [X9, X8, LSL #1]
	0x0336C320 CMP W8, 0x2E
	0x0336C324 B.NE 0x336C350
	0x0336C328 ADRP X8, 0xDBC000
	0x0336C32C LDR X8, [X8 + 0x588]
	0x0336C330 ADD X25, X23, 0x20
	0x0336C334 LDR X0, [X8]
	0x0336C338 LDR W8, [X0 + 0xE0]
	0x0336C33C CBNZ W8, 0x336C344
	0x0336C340 BL 0x1C16DFC
	0x0336C344 MOV X0, X21
	0x0336C348 MOV X1, X25
	0x0336C34C BL 0x336BC10
	0x0336C350 LDR X0, [X26]
	0x0336C354 LDR W25, [X21 + 0x10]
	0x0336C358 LDR W8, [X0 + 0xE0]
	0x0336C35C CBNZ W8, 0x336C364
	0x0336C360 BL 0x1C16DFC
	0x0336C364 MOV X0, X21
	0x0336C368 MOV X1, X31
	0x0336C36C BL 0x33748E0
	0x0336C370 SUB W8, W0, 0x1
	0x0336C374 CMP W25, W8
	0x0336C378 B.GE 0x336C3A4
	0x0336C37C ADRP X8, 0xDBC000
	0x0336C380 LDR X8, [X8 + 0x588]
	0x0336C384 LDR X0, [X8]
	0x0336C388 LDR W8, [X0 + 0xE0]
	0x0336C38C CBNZ W8, 0x336C394
	0x0336C390 BL 0x1C16DFC
	0x0336C394 MOV X0, X21
	0x0336C398 MOV X1, X20
	0x0336C39C BL 0x336C010
	0x0336C3A0 TBZ X0, 0x0, 0x336CBD4
	0x0336C3A4 LDR W8, [X31 + 0xC]
	0x0336C3A8 STR W8, [X19 + 0x8]
	0x0336C3AC LDR W9, [X31 + 0x18]
	0x0336C3B0 CMP W9, 0x2
	0x0336C3B4 B.NE 0x336C9D0
	0x0336C3B8 LDR W9, [X23 + 0x10]
	0x0336C3BC ADDS W31, W9, 0x1
	0x0336C3C0 B.NE 0x336CBC8
	0x0336C3C4 STR W8, [X23 + 0x10]
	0x0336C3C8 LDR X0, [X26]
	0x0336C3CC LDR X24, [X24]
	0x0336C3D0 LDR W8, [X0 + 0xE0]
	0x0336C3D4 CBNZ W8, 0x336C3DC
	0x0336C3D8 BL 0x1C16DFC
	0x0336C3DC ADD X2, X31, 0x8
	0x0336C3E0 ADD X3, X31, 0x4
	0x0336C3E4 MOV X0, X21
	0x0336C3E8 MOV X1, X24
	0x0336C3EC MOV X4, X31
	0x0336C3F0 BL 0x3374F8C
	0x0336C3F4 CMP W0, 0x700
	0x0336C3F8 B.LE 0x336CBDC
	0x0336C3FC CMP W0, 0xA00
	0x0336C400 B.LE 0x336CD70
	0x0336C404 CMP W0, 0xC00
	0x0336C408 B.LE 0x336CDEC
	0x0336C40C CMP W0, 0xD00
	0x0336C410 B.EQ 0x336CC20
	0x0336C414 CMP W0, 0xF00
	0x0336C418 B.NE 0x336CBC8
	0x0336C41C ADRP X20, 0xDBC000
	0x0336C420 LDR X20, [X20 + 0x588]
	0x0336C424 LDR X0, [X20]
	0x0336C428 LDR W8, [X0 + 0xE0]
	0x0336C42C CBNZ W8, 0x336C438
	0x0336C430 BL 0x1C16DFC
	0x0336C434 LDR X0, [X20]
	0x0336C438 LDR X8, [X0 + 0xB8]
	0x0336C43C LDR X8, [X8 + 0x8]
	0x0336C440 CBZ X8, 0x336CECC
	0x0336C444 LDR W9, [X8 + 0x18]
	0x0336C448 CMP W9, W22
	0x0336C44C B.LS 0x336CEC8
	0x0336C450 SXTW X23, W22
	0x0336C454 ADD X9, X8, X23, 0x3, LSL
	0x0336C458 LDR X9, [X9 + 0x20]
	0x0336C45C CBZ X9, 0x336CECC
	0x0336C460 LDR W10, [X9 + 0x18]
	0x0336C464 CMP W10, 0xD
	0x0336C468 B.LS 0x336CEC8
	0x0336C46C LDR W9, [X9 + 0x54]
	0x0336C470 CMP W9, 0x14
	0x0336C474 B.NE 0x336CC04
	0x0336C478 LDR W9, [X0 + 0xE0]
	0x0336C47C CBNZ W9, 0x336C494
	0x0336C480 BL 0x1C16DFC
	0x0336C484 LDR X8, [X20]
	0x0336C488 LDR X8, [X8 + 0xB8]
	0x0336C48C LDR X8, [X8 + 0x8]
	0x0336C490 CBZ X8, 0x336CECC
	0x0336C494 LDR W9, [X8 + 0x18]
	0x0336C498 CMP W9, W22
	0x0336C49C B.LS 0x336CEC8
	0x0336C4A0 ADD X8, X8, X23, 0x3, LSL
	0x0336C4A4 LDR X8, [X8 + 0x20]
	0x0336C4A8 CBZ X8, 0x336CECC
	0x0336C4AC LDR W9, [X8 + 0x18]
	0x0336C4B0 CMP W9, 0xC
	0x0336C4B4 B.LS 0x336CEC8
	0x0336C4B8 LDR W8, [X8 + 0x50]
	0x0336C4BC CMP W8, 0x15
	0x0336C4C0 B.LT 0x336CC04
	0x0336C4C4 B 0x336CC94
	0x0336C4C8 LDR W8, [X23 + 0x1C]
	0x0336C4CC ADDS W31, W8, 0x1
	0x0336C4D0 B.NE 0x336CBC8
	0x0336C4D4 LDR W8, [X31 + 0xC]
	0x0336C4D8 STR W8, [X23 + 0x1C]
	0x0336C4DC B 0x336CE74
	0x0336C4E0 LDR W1, [X31 + 0xC]
	0x0336C4E4 CMP W1, 0x64
	0x0336C4E8 B.GE 0x336C91C
	0x0336C4EC MOV X0, X23
	0x0336C4F0 MOV X2, X31
	0x0336C4F4 STR W1, [X19 + 0x8]
	0x0336C4F8 BL 0x337667C
	0x0336C4FC LDR X0, [X26]
	0x0336C500 LDR X23, [X24]
	0x0336C504 LDR W8, [X0 + 0xE0]
	0x0336C508 CBNZ W8, 0x336C510
	0x0336C50C BL 0x1C16DFC
	0x0336C510 ADD X2, X31, 0x8
	0x0336C514 ADD X3, X31, 0x4
	0x0336C518 MOV X0, X21
	0x0336C51C MOV X1, X23
	0x0336C520 MOV X4, X31
	0x0336C524 BL 0x3374F8C
	0x0336C528 CMP W0, 0x300
	0x0336C52C B.LE 0x336CAD8
	0x0336C530 CMP W0, 0x600
	0x0336C534 B.EQ 0x336CAE8
	0x0336C538 CMP W0, 0xF00
	0x0336C53C B.NE 0x336CBC8
	0x0336C540 ADRP X20, 0xDBC000
	0x0336C544 LDR X20, [X20 + 0x588]
	0x0336C548 LDR X0, [X20]
	0x0336C54C LDR W8, [X0 + 0xE0]
	0x0336C550 CBNZ W8, 0x336C55C
	0x0336C554 BL 0x1C16DFC
	0x0336C558 LDR X0, [X20]
	0x0336C55C LDR X8, [X0 + 0xB8]
	0x0336C560 LDR X8, [X8 + 0x8]
	0x0336C564 CBZ X8, 0x336CECC
	0x0336C568 LDR W9, [X8 + 0x18]
	0x0336C56C CMP W9, W22
	0x0336C570 B.LS 0x336CEC8
	0x0336C574 MOV W9, W22
	0x0336C578 SXTW X23, W9
	0x0336C57C ADD X9, X8, X23, 0x3, LSL
	0x0336C580 LDR X9, [X9 + 0x20]
	0x0336C584 CBZ X9, 0x336CECC
	0x0336C588 LDR W10, [X9 + 0x18]
	0x0336C58C CMP W10, 0x4
	0x0336C590 B.LS 0x336CEC8
	0x0336C594 LDR W9, [X9 + 0x30]
	0x0336C598 CMP W9, 0x14
	0x0336C59C B.NE 0x336CAE8
	0x0336C5A0 LDR W9, [X0 + 0xE0]
	0x0336C5A4 CBNZ W9, 0x336C5BC
	0x0336C5A8 BL 0x1C16DFC
	0x0336C5AC LDR X8, [X20]
	0x0336C5B0 LDR X8, [X8 + 0xB8]
	0x0336C5B4 LDR X8, [X8 + 0x8]
	0x0336C5B8 CBZ X8, 0x336CECC
	0x0336C5BC LDR W9, [X8 + 0x18]
	0x0336C5C0 CMP W9, W22
	0x0336C5C4 B.LS 0x336CEC8
	0x0336C5C8 ADD X8, X8, X23, 0x3, LSL
	0x0336C5CC LDR X8, [X8 + 0x20]
	0x0336C5D0 CBZ X8, 0x336CECC
	0x0336C5D4 LDR W9, [X8 + 0x18]
	0x0336C5D8 CMP W9, 0x3
	0x0336C5DC B.LS 0x336CEC8
	0x0336C5E0 LDR W8, [X8 + 0x2C]
	0x0336C5E4 CMP W8, 0x15
	0x0336C5E8 B.LT 0x336CAE8
	0x0336C5EC LDR W8, [X31 + 0x8]
	0x0336C5F0 MOVZ W9, 0x3
	0x0336C5F4 B 0x336CC9C
	0x0336C5F8 LDR W8, [X23 + 0xC]
	0x0336C5FC ADDS W31, W8, 0x1
	0x0336C600 B.NE 0x336CBC8
	0x0336C604 LDR X0, [X26]
	0x0336C608 LDR X24, [X24]
	0x0336C60C LDR W8, [X0 + 0xE0]
	0x0336C610 CBNZ W8, 0x336C618
	0x0336C614 BL 0x1C16DFC
	0x0336C618 ADD X2, X31, 0x8
	0x0336C61C ADD X3, X31, 0x4
	0x0336C620 MOV X0, X21
	0x0336C624 MOV X1, X24
	0x0336C628 MOV X4, X31
	0x0336C62C BL 0x3374F8C
	0x0336C630 CMP W0, 0x300
	0x0336C634 B.LE 0x336CB48
	0x0336C638 CMP W0, 0x600
	0x0336C63C B.EQ 0x336CCB4
	0x0336C640 CMP W0, 0x700
	0x0336C644 B.EQ 0x336CCAC
	0x0336C648 CMP W0, 0xF00
	0x0336C64C B.NE 0x336CBC8
	0x0336C650 ADRP X20, 0xDBC000
	0x0336C654 LDR X20, [X20 + 0x588]
	0x0336C658 LDR X0, [X20]
	0x0336C65C LDR W8, [X0 + 0xE0]
	0x0336C660 CBNZ W8, 0x336C66C
	0x0336C664 BL 0x1C16DFC
	0x0336C668 LDR X0, [X20]
	0x0336C66C LDR X8, [X0 + 0xB8]
	0x0336C670 LDR X8, [X8 + 0x8]
	0x0336C674 CBZ X8, 0x336CECC
	0x0336C678 LDR W9, [X8 + 0x18]
	0x0336C67C CMP W9, W22
	0x0336C680 B.LS 0x336CEC8
	0x0336C684 MOV W9, W22
	0x0336C688 SXTW X24, W9
	0x0336C68C ADD X9, X8, X24, 0x3, LSL
	0x0336C690 LDR X9, [X9 + 0x20]
	0x0336C694 CBZ X9, 0x336CECC
	0x0336C698 LDR W10, [X9 + 0x18]
	0x0336C69C CMP W10, 0x8
	0x0336C6A0 B.LS 0x336CEC8
	0x0336C6A4 LDR W9, [X9 + 0x40]
	0x0336C6A8 CMP W9, 0x14
	0x0336C6AC B.NE 0x336CCB4
	0x0336C6B0 LDR W9, [X0 + 0xE0]
	0x0336C6B4 CBNZ W9, 0x336C6CC
	0x0336C6B8 BL 0x1C16DFC
	0x0336C6BC LDR X8, [X20]
	0x0336C6C0 LDR X8, [X8 + 0xB8]
	0x0336C6C4 LDR X8, [X8 + 0x8]
	0x0336C6C8 CBZ X8, 0x336CECC
	0x0336C6CC LDR W9, [X8 + 0x18]
	0x0336C6D0 CMP W9, W22
	0x0336C6D4 B.LS 0x336CEC8
	0x0336C6D8 ADD X8, X8, X24, 0x3, LSL
	0x0336C6DC LDR X8, [X8 + 0x20]
	0x0336C6E0 CBZ X8, 0x336CECC
	0x0336C6E4 LDR W9, [X8 + 0x18]
	0x0336C6E8 CMP W9, 0x7
	0x0336C6EC B.LS 0x336CEC8
	0x0336C6F0 LDR W8, [X8 + 0x3C]
	0x0336C6F4 CMP W8, 0x15
	0x0336C6F8 B.LT 0x336CCB4
	0x0336C6FC LDR W8, [X31 + 0x8]
	0x0336C700 STR W8, [X21 + 0x10]
	0x0336C704 LDRH W8, [X31 + 0x4]
	0x0336C708 STRH W8, [X21 + 0x14]
	0x0336C70C B 0x336CB58
	0x0336C710 ADRP X21, 0xDBB000
	0x0336C714 LDR X21, [X21 + 0x930]
	0x0336C718 LDR X0, [X21]
	0x0336C71C LDR W8, [X0 + 0xE0]
	0x0336C720 CBNZ W8, 0x336C728
	0x0336C724 BL 0x1C16DFC
	0x0336C728 ADRP X22, 0x1070000

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+176], D8
	003 Move [X31+192], X29
	004 Move [X31+200], X30
	005 Move [X31+208], X28
	006 Move [X31+216], X27
	007 Move [X31+224], X26
	008 Move [X31+232], X25
	009 Move [X31+240], X24
	010 Move [X31+248], X23
	011 Move [X31+256], X22
	012 Move [X31+264], X21
	013 Move [X31+272], X20
	014 Move [X31+280], X19
	015 Move X26, 0x1072000
	016 Move W8, [X26+3843]
	017 Move X19, X6
	018 Move X25, X5
	019 Move W20, W4
	020 Move X24, X3
	021 Move X23, X2
	022 Move X21, X1
	023 Move X22, X0
	024 Move [X31+168], X5
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {67}
	029 Move X0, 0xDBE000
	030 Move X0, [X0+1416]
	031 Call 0x1C17CF4
	032 Move X0, 0xD8A000
	033 Move X0, [X0+2544]
	034 Call 0x1C17CF4
	035 Move X0, 0xDC0000
	036 Move X0, [X0+3080]
	037 Call 0x1C17CF4
	038 Move X0, 0xDBD000
	039 Move X0, [X0+2352]
	040 Call 0x1C17CF4
	041 Move X0, 0xDC0000
	042 Move X0, [X0+3088]
	043 Call 0x1C17CF4
	044 Move X0, 0xD89000
	045 Move X0, [X0+1448]
	046 Call 0x1C17CF4
	047 Move X0, 0xDB8000
	048 Move X0, [X0+40]
	049 Call 0x1C17CF4
	050 Move X0, 0xDC0000
	051 Move X0, [X0+3096]
	052 Call 0x1C17CF4
	053 Move X0, 0xDC0000
	054 Move X0, [X0+3104]
	055 Call 0x1C17CF4
	056 Move X0, 0xDBE000
	057 Move X0, [X0+1264]
	058 Call 0x1C17CF4
	059 Move X0, 0xDC0000
	060 Move X0, [X0+3112]
	061 Call 0x1C17CF4
	062 Move X0, 0xDC0000
	063 Move X0, [X0+3120]
	064 Call 0x1C17CF4
	065 Move W8, 1
	066 Move [X26+3843], W8
	067 NotImplemented "Instruction MOVI not yet implemented."
	068 Add X0, X31, 128
	069 Move X1, X31
	070 Move [X31+112], X31
	071 Move [X31+64], X31
	072 Move [X31+80], V0
	073 Move [X31+88], V0
	074 Move [X31+32], V0
	075 Move [X31+40], V0
	076 Move [X31+128], V0
	077 Move [X31+136], V0
	078 Call ParsingInfo.Init, X0
	079 Compare X25, 0
	080 JumpIfEqual {566}
	081 Move X28, 0xDBE000
	082 Move X28, [X28+1416]
	083 Move X8, [X25+120]
	084 And W9, W20, 255
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move W10, W9
	087 ShiftRight W10, 2
	088 And W10, W10, 3
	089 Move W9, W9
	090 ShiftRight W9, 1
	091 And W9, W9, 1
	092 Move [X31+146], W10
	093 Move [X31+128], X8
	094 Move [X31+147], W9
	095 Move W8, [X19+37]
	096 Move TEMP, X8
	097 And TEMP, TEMP, 8
	098 Compare TEMP, 8
	099 JumpIfNotEqual {108}
	100 NotImplemented "Instruction LDRH not yet implemented."
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X0, X19
	103 Move X1, X23
	104 Move X2, X24
	105 Move X3, X31
	106 Call DateTimeResult.SetBadFormatSpecifierFailure, X0, X1
	107 And X29, X24, 0
	108 Move X0, [X28]
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {113}
	112 Call 0x1C17DFC
	113 Add X2, X31, 168
	114 Add X3, X31, 128
	115 Move X0, X23
	116 Move X1, X24
	117 Move X4, X19
	118 Call DateTimeParse.ExpandPredefinedFormat, X0, X1, X2, X3
	119 Move X23, 0x106E000
	120 Move W8, [X23+1890]
	121 Move X24, X0
	122 Compare W8, 0
	123 JumpIfEqual {132}
	124 Compare X24, 0
	125 JumpIfEqual {139}
	126 Move X0, X24
	127 Move X1, X31
	128 Call String.GetRawStringData, X0
	129 Move W24, [X24+16]
	130 Move X23, X0
	131 Move X29, X31
	132 Move X0, 0xDAF000
	133 Move X0, [X0+656]
	134 Call 0x1C17CF4
	135 Move W8, 1
	136 Move [X23+1890], W8
	137 Compare X24, 0
	138 JumpIfNotEqual {126}
	139 Move X29, X31
	140 Move X23, X31
	141 Move X8, [X31+128]
	142 Move X25, 0xDBC000
	143 Move X25, [X25+2352]
	144 Move [X19+48], X8
	145 Move X0, [X25]
	146 Move W8, [X0+224]
	147 Compare W8, 0
	148 JumpIfNotEqual {150}
	149 Call 0x1C17DFC
	150 Move X26, 0x1071000
	151 Move W8, [X26+2814]
	152 Compare W8, 0
	153 JumpIfNotEqual {159}
	154 Move X0, 0xDBC000
	155 Move X0, [X0+2352]
	156 Call 0x1C17CF4
	157 Move W8, 1
	158 Move [X26+2814], W8
	159 Move X0, [X25]
	160 Move W8, [X0+224]
	161 Compare W8, 0
	162 JumpIfNotEqual {165}
	163 Call 0x1C17DFC
	164 Move X0, [X25]
	165 Move X8, [X0+184]
	166 Move W8, [X8]
	167 Compare W8, 0
	168 JumpIfNotEqual {237}
	169 Move X0, [X31+128]
	170 Compare X0, 0
	171 JumpIfEqual {566}
	172 Move X8, [X0]
	173 Move X9, [X8+424]
	174 Move X1, [X8+432]
	175 NotImplemented "Instruction BLR not yet implemented."
	176 And W8, W0, 0xFFFF
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move X0, [X28]
	179 Move W8, [X0+224]
	180 Compare W8, 0
	181 JumpIfNotEqual {183}
	182 Call 0x1C17DFC
	183 Move X27, 0xDBF000
	184 Move X27, [X27+3104]
	185 Move X0, [X27]
	186 Move W8, [X0+224]
	187 Compare W8, 0
	188 JumpIfNotEqual {191}
	189 Call 0x1C17DFC
	190 Move X0, [X27]
	191 Move X8, [X0+184]
	192 Move X9, [X28]
	193 Move X26, [X8+8]
	194 Move X25, [X9+184]
	195 Compare X26, 0
	196 JumpIfNotEqual {220}
	197 Move W8, [X0+224]
	198 Compare W8, 0
	199 JumpIfNotEqual {202}
	200 Call 0x1C17DFC
	201 Move X0, [X27]
	202 Move X9, 0xDBF000
	203 Move X8, [X0+184]
	204 Move X9, [X9+3080]
	205 Move X27, [X8]
	206 Move X0, [X9]
	207 Call 0x1C17F10
	208 Move X8, 0xDBF000
	209 Move X8, [X8+3096]
	210 Move X1, X27
	211 Move X3, X31
	212 Move X26, X0
	213 Move X2, [X8]
	214 Call Func`1<Object>..ctor, X0, X1, X2
	215 Move X8, 0xDBF000
	216 Move X8, [X8+3104]
	217 Move X8, [X8]
	218 Move X8, [X8+184]
	219 Move [X8+8], X26
	220 Move X8, 0xDBF000
	221 Move X8, [X8+3088]
	222 Move X0, X25
	223 Move X1, X26
	224 Move X2, [X8]
	225 Call 0x2213A40, X0, X1
	226 Move X0, [X28]
	227 Move W8, [X0+224]
	228 Compare W8, 0
	229 JumpIfNotEqual {232}
	230 Call 0x1C17DFC
	231 Move X0, [X28]
	232 Move X8, [X0+184]
	233 Move W9, 1
	234 Move X8, [X8]
	235 Move [X31+148], W9
	236 Move [X31+152], X8
	237 Move X26, 0xDBD000
	238 Move X26, [X26+1264]
	239 Move TEMP, 0
	240 Not TEMP
	241 Move W8, TEMP
	242 NotImplemented "Instruction MOVI not yet implemented."
	243 Move [X19+20], W8
	244 Move [X19+12], D0
	245 Move X0, [X26]
	246 Move X25, [X31+168]
	247 And X9, X24, 0
	248 Or X24, X9, X29
	249 Move W8, [X0+224]
	250 Compare W8, 0
	251 JumpIfNotEqual {253}
	252 Call 0x1C17DFC
	253 Add X0, X31, 80
	254 Move X1, X23
	255 Move X2, X24
	256 Move X3, X25
	257 Move W4, W31
	258 Move X5, X31
	259 Call __DTString..ctor, X0, X1, X2, X3
	260 Add X0, X31, 32
	261 Move X1, X22
	262 Move X2, X21
	263 Move X3, X25
	264 Move W4, W31
	265 Move X5, X31
	266 Call __DTString..ctor, X0, X1, X2, X3
	267 Move W8, [X31+147]
	268 Move TEMP, X8
	269 And TEMP, TEMP, 1
	270 Compare TEMP, 1
	271 JumpIfNotEqual {286}
	272 Move X0, [X26]
	273 Move W8, [X0+224]
	274 Compare W8, 0
	275 JumpIfNotEqual {277}
	276 Call 0x1C17DFC
	277 Add X0, X31, 80
	278 Move X1, X31
	279 Call __DTString.TrimTail, X0
	280 Add X0, X31, 80
	281 Move X1, X31
	282 Call __DTString.RemoveTrailingInQuoteSpaces, X0
	283 Add X0, X31, 32
	284 Move X1, X31
	285 Call __DTString.TrimTail, X0
	286 Move TEMP, X20
	287 And TEMP, TEMP, 1
	288 Compare TEMP, 1
	289 JumpIfNotEqual {304}
	290 Move X0, [X26]
	291 Move W8, [X0+224]
	292 Compare W8, 0
	293 JumpIfNotEqual {295}
	294 Call 0x1C17DFC
	295 Add X0, X31, 80
	296 Move X1, X31
	297 Call __DTString.SkipWhiteSpaces, X0
	298 Add X0, X31, 80
	299 Move X1, X31
	300 Call __DTString.RemoveLeadingInQuoteSpaces, X0
	301 Add X0, X31, 32
	302 Move X1, X31
	303 Call __DTString.SkipWhiteSpaces, X0
	304 Move X0, [X26]
	305 Move W8, [X0+224]
	306 Compare W8, 0
	307 JumpIfNotEqual {309}
	308 Call 0x1C17DFC
	309 Add X0, X31, 80
	310 Move X1, X31
	311 Call __DTString.GetNext, X0
	312 Move TEMP, X0
	313 And TEMP, TEMP, 1
	314 Compare TEMP, 1
	315 JumpIfNotEqual {344}
	316 Move W8, [X31+146]
	317 Move TEMP, X8
	318 And TEMP, TEMP, 1
	319 Compare TEMP, 1
	320 JumpIfNotEqual {329}
	321 Move X0, [X26]
	322 Move W8, [X0+224]
	323 Compare W8, 0
	324 JumpIfNotEqual {326}
	325 Call 0x1C17DFC
	326 Add X0, X31, 32
	327 Move X1, X31
	328 Call __DTString.SkipWhiteSpaces, X0
	329 Move X0, [X28]
	330 Move W8, [X0+224]
	331 Compare W8, 0
	332 JumpIfNotEqual {334}
	333 Call 0x1C17DFC
	334 Add X0, X31, 32
	335 Add X1, X31, 80
	336 Add X2, X31, 128
	337 Move X3, X25
	338 Move X4, X19
	339 Call DateTimeParse.ParseByFormat, X0, X1, X2, X3, X4
	340 Move TEMP, X0
	341 And TEMP, TEMP, 1
	342 Compare TEMP, 1
	343 JumpIfEqual {304}
	344 Move W8, [X31+40]
	345 Move W9, [X31+48]
	346 Subtract W8, W8, 1
	347 NotImplemented "Instruction CMP not yet implemented."
	348 Move X0, X19
	349 Move X1, X31
	350 Call DateTimeResult.SetBadDateTimeFailure, X0
	351 Move W0, W31
	352 Move X20, [X31+272]
	353 Move X19, [X31+280]
	354 Move X22, [X31+256]
	355 Move X21, [X31+264]
	356 Move X24, [X31+240]
	357 Move X23, [X31+248]
	358 Move X26, [X31+224]
	359 Move X25, [X31+232]
	360 Move X28, [X31+208]
	361 Move X27, [X31+216]
	362 Move X29, [X31+192]
	363 Move X30, [X31+200]
	364 Move V8, [X31+176]
	365 And W0, W0, 1
	366 Add X31, X31, 288
	367 Return X0
	368 Move W8, [X31+145]
	369 Move TEMP, X8
	370 And TEMP, TEMP, 1
	371 Compare TEMP, 1
	372 JumpIfNotEqual {392}
	373 Compare X25, 0
	374 JumpIfEqual {566}
	375 Move X0, X25
	376 Move X1, X31
	377 Call DateTimeFormatInfo.get_FormatFlags, X0
	378 Move TEMP, X0
	379 And TEMP, TEMP, 8
	380 Compare TEMP, 8
	381 JumpIfEqual {392}
	382 Move W1, [X19]
	383 NotImplemented "Instruction CMP not yet implemented."
	384 Move X0, [X31+128]
	385 Compare X0, 0
	386 JumpIfEqual {567}
	387 Move X8, [X0]
	388 Move X9, [X8+776]
	389 Move X2, [X8+784]
	390 NotImplemented "Instruction BLR not yet implemented."
	391 Move [X19], W0
	392 Move W9, [X31+144]
	393 Move W8, [X31+140]
	394 Move TEMP, X9
	395 And TEMP, TEMP, 1
	396 Compare TEMP, 1
	397 JumpIfEqual {403}
	398 NotImplemented "Instruction CMP not yet implemented."
	399 Compare W8, 0
	400 JumpIfNotEqual {419}
	401 Move W8, [X19+12]
	402 NotImplemented "Instruction CMP not yet implemented."
	403 Add W31, W8, 1
	404 Move W9, [X19+12]
	405 NotImplemented "Instruction CMP not yet implemented."
	406 Compare W8, 0
	407 JumpIfEqual {417}
	408 Add W8, W9, 12
	409 NotImplemented "Instruction CMP not yet implemented."
	410 NotImplemented "Instruction CSEL not yet implemented."
	411 Move [X19+12], W8
	412 Move [X31+140], W31
	413 Move W8, [X19+12]
	414 NotImplemented "Instruction CMP not yet implemented."
	415 Move W8, [X19+12]
	416 NotImplemented "Instruction CMP not yet implemented."
	417 NotImplemented "Instruction CMP not yet implemented."
	418 Move [X19+12], W31
	419 Move W8, [X19]
	420 Add W31, W8, 1
	421 Move W8, [X19+4]
	422 Add W31, W8, 1
	423 Move W21, W31
	424 Move X0, [X28]
	425 Move W8, [X0+224]
	426 Compare W8, 0
	427 JumpIfNotEqual {429}
	428 Call 0x1C17DFC
	429 Add X1, X31, 128
	430 Move X0, X19
	431 Move W2, W20
	432 Call DateTimeParse.CheckDefaultDateTime, X0, X1, X2
	433 Move TEMP, X0
	434 And TEMP, TEMP, 1
	435 Compare TEMP, 1
	436 JumpIfNotEqual {351}
	437 Compare W21, 0
	438 JumpIfNotEqual {461}
	439 Compare X25, 0
	440 JumpIfEqual {566}
	441 Move X0, X25
	442 Move X1, X31
	443 Call DateTimeFormatInfo.get_HasYearMonthAdjustment, X0
	444 Move TEMP, X0
	445 And TEMP, TEMP, 1
	446 Compare TEMP, 1
	447 JumpIfNotEqual {461}
	448 Move W8, [X19+36]
	449 Add X2, X19, 4
	450 Move X0, X25
	451 Move X1, X19
	452 Move W3, W8
	453 ShiftRight W3, 10
	454 And W3, W3, 1023
	455 Move X4, X31
	456 Call DateTimeFormatInfo.YearMonthAdjustment, X0, X1, X2, X3
	457 Move TEMP, X0
	458 And TEMP, TEMP, 1
	459 Compare TEMP, 1
	460 JumpIfNotEqual {504}
	461 Move X0, [X31+128]
	462 Compare X0, 0
	463 JumpIfEqual {566}
	464 Move X9, [X0]
	465 Move W8, [X19+32]
	466 Move W5, [X19+16]
	467 Move W6, [X19+20]
	468 Move W3, [X19+8]
	469 Move W4, [X19+12]
	470 Move W1, [X19]
	471 Move W2, [X19+4]
	472 Move X10, [X9+680]
	473 Move X9, [X9+688]
	474 Add X22, X19, 56
	475 Move W7, W31
	476 Move [X31], W8
	477 Move [X31+8], X22
	478 Move [X31+16], X9
	479 NotImplemented "Instruction BLR not yet implemented."
	480 Move TEMP, X0
	481 And TEMP, TEMP, 1
	482 Compare TEMP, 1
	483 JumpIfNotEqual {504}
	484 Move V8, [X19+24]
	485 NotImplemented "Instruction FCMP not yet implemented."
	486 Move X8, 0xD88000
	487 Move X8, [X8+1448]
	488 Move X0, [X8]
	489 Move W8, [X0+224]
	490 Compare W8, 0
	491 JumpIfNotEqual {493}
	492 Call 0x1C17DFC
	493 Move X8, -42459136
	494 Move V0, [X8+2728]
	495 Add X0, X31, 184
	496 Multiply D8, D8, D0
	497 Move V0, V8
	498 Call 0x3EB2C00
	499 NotImplemented "Instruction FCMP not yet implemented."
	500 Move D1, -0.5
	501 NotImplemented "Instruction FCMP not yet implemented."
	502 Move V0, [X31+184]
	503 Move D1, -1
	504 Move X8, 0xDBF000
	505 Move X8, [X8+3120]
	506 Move W1, 7
	507 Move W8, [X19+8]
	508 Add W31, W8, 1
	509 NotImplemented "Instruction CSET not yet implemented."
	510 Move D1, 0.5
	511 NotImplemented "Instruction FCMP not yet implemented."
	512 Move V0, [X31+184]
	513 Move D1, 1
	514 NotImplemented "Instruction FCVTZS not yet implemented."
	515 Add D1, D0, D1
	516 And X31, X8, 1
	517 NotImplemented "Instruction FCSEL not yet implemented."
	518 Add D0, D8, D1
	519 NotImplemented "Instruction FRINTP not yet implemented."
	520 Add D0, D8, D1
	521 NotImplemented "Instruction FRINTM not yet implemented."
	522 Move X8, 0xD89000
	523 Move X8, [X8+2544]
	524 Move X0, [X8]
	525 Move W8, [X0+224]
	526 Compare W8, 0
	527 JumpIfNotEqual {529}
	528 Call 0x1C17DFC
	529 Move X8, 0x7FF00000
	530 Move D0, X8
	531 NotImplemented "Instruction FCVTZS not yet implemented."
	532 NotImplemented "Instruction FCMP not yet implemented."
	533 Move X8, 0x80000000
	534 NotImplemented "Instruction CSEL not yet implemented."
	535 Move X0, X22
	536 Call DateTime.AddTicks, X0, X1
	537 Move [X19+56], X0
	538 Move W22, [X31+136]
	539 Add W31, W22, 1
	540 Move X0, [X31+128]
	541 Compare X0, 0
	542 JumpIfEqual {566}
	543 Move X8, [X0]
	544 Move X1, [X19+56]
	545 Move X9, [X8+504]
	546 Move X2, [X8+512]
	547 NotImplemented "Instruction BLR not yet implemented."
	548 NotImplemented "Instruction CMP not yet implemented."
	549 Move X0, [X28]
	550 Move W8, [X0+224]
	551 Compare W8, 0
	552 JumpIfNotEqual {554}
	553 Call 0x1C17DFC
	554 Add X0, X31, 32
	555 Move X1, X19
	556 Move W2, W20
	557 Move W3, W21
	558 Call DateTimeParse.DetermineTimeZoneAdjustments, X0, X1, X2, X3
	559 Move X8, 0xDBF000
	560 Move X8, [X8+3112]
	561 Move W1, 4
	562 Move X2, [X8]
	563 Move X0, X19
	564 Move X3, X31
	565 Call DateTimeResult.SetFailure, X0, X1, X2
	566 Call 0x1C17F20
	567 Call 0x1C17F20
	568 Move X20, X0
	569 NotImplemented "Instruction CMP not yet implemented."
	570 Move X0, X20
	571 Call 0x3EB2AD0
	572 Move X20, X0
	573 Move X0, 0xD90000
	574 Move X0, [X0+1888]
	575 Call 0x1C17D08
	576 Move X8, [X20]
	577 Move X1, [X8]
	578 Call 0x1C18270
	579 Move TEMP, X0
	580 And TEMP, TEMP, 1
	581 Compare TEMP, 1
	582 JumpIfNotEqual {584}
	583 Call 0x3EB2AE0
	584 Move W0, 8
	585 Call 0x3EB2AF0
	586 Move X8, [X20]
	587 Move [X0], X8
	588 Move X1, 0xB49000
	589 Add X1, X1, 3672
	590 Move X2, X31
	591 Call 0x3EB2B00
	592 Move X20, X0
	593 Call 0x3EB2AE0
	594 Move X0, X20
	595 Call 0x1D2D690
	596 Call 0x1991590

Method: System.Exception GetDateTimeParseException(ref System.DateTimeResult result)

Disassembly:
	0x0336BD3C LDR X0, [X0 + 0x4F0]
	0x0336BD40 BL 0x1C16CF4
	0x0336BD44 MOVZ W8, 0x1
	0x0336BD48 STRB W8, [X21 + 0xECD]
	0x0336BD4C LDR X0, [X24]
	0x0336BD50 MOVI V0.2D, 0x0
	0x0336BD54 STP V0, V0, [X31 + 0xE0]
	0x0336BD58 LDR W8, [X0 + 0xE0]
	0x0336BD5C CBNZ W8, 0x336BD64
	0x0336BD60 BL 0x1C16DFC
	0x0336BD64 ADD X8, X31, 0xC0
	0x0336BD68 MOV X0, X20
	0x0336BD6C MOV X1, X31
	0x0336BD70 BL 0x337636C
	0x0336BD74 LDP V1, V0, [X31 + 0xC0]
	0x0336BD78 STP V1, V0, [X31 + 0xE0]
	0x0336BD7C LDR W8, [X31 + 0xF4]
	0x0336BD80 CMP W8, 0x1
	0x0336BD84 B.NE 0x336BF90
	0x0336BD88 ADD X0, X31, 0xE0
	0x0336BD8C MOV W1, W31
	0x0336BD90 MOV X2, X31
	0x0336BD94 BL 0x3376630
	0x0336BD98 AND W8, W0, 0xFFFF
	0x0336BD9C MOV W21, W0
	0x0336BDA0 CMP W8, 0x2D
	0x0336BDA4 B.EQ 0x336BDB4
	0x0336BDA8 CMP W8, 0x2B
	0x0336BDAC MOV W0, W31
	0x0336BDB0 B.NE 0x336BF94
	0x0336BDB4 LDP V0, V1, [X31 + 0xE0]
	0x0336BDB8 LDR X0, [X24]
	0x0336BDBC STP V0, V1, [X31 + 0xC0]
	0x0336BDC0 LDR W8, [X0 + 0xE0]
	0x0336BDC4 CBNZ W8, 0x336BDCC
	0x0336BDC8 BL 0x1C16DFC
	0x0336BDCC LDP V0, V1, [X31 + 0xC0]
	0x0336BDD0 ADD X1, X31, 0xA0
	0x0336BDD4 MOV X0, X20
	0x0336BDD8 MOV X2, X31
	0x0336BDDC STP V0, V1, [X31 + 0xA0]
	0x0336BDE0 BL 0x33764EC
	0x0336BDE4 ADD X8, X31, 0x80
	0x0336BDE8 MOV X0, X20
	0x0336BDEC MOV X1, X31
	0x0336BDF0 BL 0x337636C
	0x0336BDF4 LDP V1, V0, [X31 + 0x80]
	0x0336BDF8 STP V1, V0, [X31 + 0xE0]
	0x0336BDFC LDR W8, [X31 + 0xF8]
	0x0336BE00 CMP W8, 0x2
	0x0336BE04 B.NE 0x336BF90
	0x0336BE08 LDR W8, [X31 + 0xF4]
	0x0336BE0C LDR W22, [X31 + 0xFC]
	0x0336BE10 SUB W9, W8, 0x3
	0x0336BE14 CMP W9, 0x2
	0x0336BE18 B.CC 0x336BF34
	0x0336BE1C SUB W8, W8, 0x1
	0x0336BE20 CMP W8, 0x1
	0x0336BE24 B.HI 0x336BF90
	0x0336BE28 LDP V0, V1, [X31 + 0xE0]
	0x0336BE2C LDR X0, [X24]
	0x0336BE30 STP V0, V1, [X31 + 0xC0]
	0x0336BE34 LDR W8, [X0 + 0xE0]
	0x0336BE38 CBNZ W8, 0x336BE40
	0x0336BE3C BL 0x1C16DFC
	0x0336BE40 LDP V0, V1, [X31 + 0xC0]
	0x0336BE44 ADD X1, X31, 0x60
	0x0336BE48 MOV X0, X20
	0x0336BE4C MOV X2, X31
	0x0336BE50 STP V0, V1, [X31 + 0x60]
	0x0336BE54 BL 0x33764EC
	0x0336BE58 ADD X8, X31, 0x80
	0x0336BE5C MOV X0, X20
	0x0336BE60 MOV X1, X31
	0x0336BE64 BL 0x337636C
	0x0336BE68 LDP V1, V0, [X31 + 0x80]
	0x0336BE6C STP V1, V0, [X31 + 0xE0]
	0x0336BE70 LDR W8, [X31 + 0xF4]
	0x0336BE74 CMP W8, 0x1
	0x0336BE78 B.NE 0x336BFAC
	0x0336BE7C ADD X0, X31, 0xE0
	0x0336BE80 MOV W1, W31
	0x0336BE84 MOV X2, X31
	0x0336BE88 BL 0x3376630
	0x0336BE8C AND W8, W0, 0xFFFF
	0x0336BE90 CMP W8, 0x3A
	0x0336BE94 B.NE 0x336BFAC
	0x0336BE98 LDP V0, V1, [X31 + 0xE0]
	0x0336BE9C LDR X0, [X24]
	0x0336BEA0 STP V0, V1, [X31 + 0xC0]
	0x0336BEA4 LDR W8, [X0 + 0xE0]
	0x0336BEA8 CBNZ W8, 0x336BEB0
	0x0336BEAC BL 0x1C16DFC
	0x0336BEB0 LDP V0, V1, [X31 + 0xC0]
	0x0336BEB4 ADD X1, X31, 0x40
	0x0336BEB8 MOV X0, X20
	0x0336BEBC MOV X2, X31
	0x0336BEC0 STP V0, V1, [X31 + 0x40]
	0x0336BEC4 BL 0x33764EC
	0x0336BEC8 ADD X8, X31, 0x80
	0x0336BECC MOV X0, X20
	0x0336BED0 MOV X1, X31
	0x0336BED4 BL 0x337636C
	0x0336BED8 LDP V1, V0, [X31 + 0x80]
	0x0336BEDC STP V1, V0, [X31 + 0xE0]
	0x0336BEE0 LDR W8, [X31 + 0xF8]
	0x0336BEE4 CMP W8, 0x2
	0x0336BEE8 B.NE 0x336BF90
	0x0336BEEC LDR W8, [X31 + 0xF4]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1072000
	006 Move W8, [X20+3844]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0xD8E000
	013 Move X0, [X0+1320]
	014 Call 0x1C17CF4
	015 Move X0, 0xDB6000
	016 Move X0, [X0+3080]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3844], W8
	020 Move W8, [X19+64]
	021 Subtract W8, W8, 1
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X9, -41762816
	024 Add X9, X9, 1923
	025 NotImplemented "Instruction ADR not yet implemented."
	026 Move W11, [X9]
	027 Add X10, X10, X11
	028 CallNoReturn X10
	029 Move X0, [X19+72]
	030 Move X20, [X19+88]
	031 Move X1, X31
	032 Call SR.GetResourceString, X0
	033 Move X8, 0xD8E000
	034 Move X8, [X8+1320]
	035 Move X21, X0
	036 Move X8, [X8]
	037 Move X0, X8
	038 Call 0x1C17F10
	039 Move X1, X20
	040 Move X2, X21
	041 Move X3, X31
	042 Move X19, X0
	043 Call ArgumentNullException..ctor, X0, X1, X2
	044 Move X19, X31
	045 Move X0, [X19+72]
	046 Move X1, X31
	047 Call SR.GetResourceString, X0
	048 Move X0, [X19+72]
	049 Move X1, X31
	050 Call SR.GetResourceString, X0
	051 Move X1, [X19+80]
	052 Move X0, [X19+72]
	053 Move X1, X31
	054 Call SR.GetResourceString, X0
	055 Move X1, [X19+96]
	056 Move X2, [X19+104]
	057 Move X0, [X19+72]
	058 Move X1, X31
	059 Call SR.GetResourceString, X0
	060 Move X1, [X19+112]
	061 Move X2, [X19+120]
	062 Move X19, X0
	063 Move X0, X31
	064 Move X3, X31
	065 Call String.CreateString, X0, X1
	066 Move X1, X0
	067 Move X0, X19
	068 Move X2, X31
	069 Call SR.Format, X0, X1
	070 Move X0, [X19+72]
	071 Move X1, X31
	072 Call SR.GetResourceString, X0
	073 Move X1, [X19+96]
	074 Move X2, [X19+104]
	075 Move X20, X0
	076 Move X0, X31
	077 Move X3, X31
	078 Call String.CreateString, X0, X1
	079 Move X2, [X19+80]
	080 Move X0, [X19+72]
	081 Move X1, X31
	082 Call SR.GetResourceString, X0
	083 Move X1, [X19+96]
	084 Move X2, [X19+104]
	085 Move X20, X0
	086 Move X0, X31
	087 Move X3, X31
	088 Call String.CreateString, X0, X1
	089 Move X2, [X19+48]
	090 Move X1, X0
	091 Move X0, X20
	092 Move X3, X31
	093 Call SR.Format, X0, X1, X2
	094 Move X8, 0xDB6000
	095 Move X8, [X8+3080]
	096 Move X20, X0
	097 Move X8, [X8]
	098 Move X0, X8
	099 Call 0x1C17F10
	100 Move X1, X20
	101 Move X2, X31
	102 Move X19, X0
	103 Call SystemException..ctor, X0, X1
	104 Move W8, 0x1537
	105 NotImplemented "Instruction MOVK not yet implemented."
	106 Move [X19+96], W8
	107 Move X0, X19
	108 Move X20, [X31+16]
	109 Move X19, [X31+24]
	110 Move X30, [X31+32]
	111 Move X21, [X31+40]
	112 Return X0

Method: System.Void .cctor()

Disassembly:
	0x03374FB8 MOV X20, X0
	0x03374FBC TBNZ X8, 0x0, 0x3374FE0
	0x03374FC0 ADRP X0, 0xDB4000
	0x03374FC4 LDR X0, [X0 + 0x588]
	0x03374FC8 BL 0x1C16CF4
	0x03374FCC ADRP X0, 0xDB4000
	0x03374FD0 LDR X0, [X0 + 0x4F0]
	0x03374FD4 BL 0x1C16CF4
	0x03374FD8 MOVZ W8, 0x1
	0x03374FDC STRB W8, [X24 + 0xF13]
	0x03374FE0 STR X31, [X31 + 0x8]
	0x03374FE4 LDR W8, [X20 + 0x10]
	0x03374FE8 STR W8, [X22]
	0x03374FEC LDRH W8, [X20 + 0x14]
	0x03374FF0 STRH W8, [X21]
	0x03374FF4 LDR X0, [X23]
	0x03374FF8 LDR W8, [X0 + 0xE0]
	0x03374FFC CBNZ W8, 0x3375004
	0x03375000 BL 0x1C16DFC
	0x03375004 MOV X0, X20
	0x03375008 BL 0x3375094
	0x0337500C TBZ X0, 0x0, 0x3375044
	0x03375010 ADRP X8, 0xDB3000
	0x03375014 LDR X8, [X8 + 0x588]
	0x03375018 LDRH W21, [X20 + 0x14]
	0x0337501C LDR X0, [X8]
	0x03375020 LDR W8, [X0 + 0xE0]
	0x03375024 CBNZ W8, 0x337502C
	0x03375028 BL 0x1C16DFC
	0x0337502C MOV W0, W21
	0x03375030 MOV X1, X31
	0x03375034 BL 0x336BBFC
	0x03375038 TBZ X0, 0x0, 0x337504C
	0x0337503C MOVZ W0, 0x300
	0x03375040 B 0x337507C
	0x03375044 MOVZ W0, 0x200
	0x03375048 B 0x337507C
	0x0337504C CBZ X19, 0x3375090
	0x03375050 ADD X2, X31, 0xC
	0x03375054 ADD X3, X31, 0x8
	0x03375058 MOVZ W1, 0xFF00
	0x0337505C MOV X0, X19
	0x03375060 MOV X4, X20
	0x03375064 MOV X5, X31
	0x03375068 BL 0x332958C
	0x0337506C LDR W8, [X31 + 0xC]
	0x03375070 ANDS W31, W0, 0x1
	0x03375074 MOVZ W9, 0x300
	0x03375078 CSEL W0, W8, W9, NE
	0x0337507C LDP X20, X19, [X31 + 0x30]
	0x03375080 LDP X22, X21, [X31 + 0x20]
	0x03375084 LDP X24, X23, [X31 + 0x10]
	0x03375088 LDR X30, [X31], #0x40
	0x0337508C RET
	0x03375090 BL 0x1C16F20
	0x03375094 STR X30, [X31 - 0x50]!
	0x03375098 STP X26, X25, [X31 + 0x10]
	0x0337509C STP X24, X23, [X31 + 0x20]
	0x033750A0 STP X22, X21, [X31 + 0x30]
	0x033750A4 STP X20, X19, [X31 + 0x40]
	0x033750A8 ADRP X20, 0x1067000
	0x033750AC ADRP X23, 0xDB3000
	0x033750B0 LDRB W8, [X20 + 0xF1C]
	0x033750B4 LDR X23, [X23 + 0x4F0]
	0x033750B8 MOV X19, X0
	0x033750BC TBNZ X8, 0x0, 0x33750E0
	0x033750C0 ADRP X0, 0xD80000
	0x033750C4 LDR X0, [X0 + 0x170]
	0x033750C8 BL 0x1C16CF4
	0x033750CC ADRP X0, 0xDB3000
	0x033750D0 LDR X0, [X0 + 0x4F0]
	0x033750D4 BL 0x1C16CF4
	0x033750D8 MOVZ W8, 0x1
	0x033750DC STRB W8, [X20 + 0xF1C]
	0x033750E0 LDR X0, [X23]
	0x033750E4 LDR W20, [X19 + 0x10]
	0x033750E8 LDR W8, [X0 + 0xE0]
	0x033750EC CBNZ W8, 0x33750F4
	0x033750F0 BL 0x1C16DFC
	0x033750F4 ADRP X24, 0x1067000
	0x033750F8 LDRB W8, [X24 + 0xF0C]
	0x033750FC TBNZ X8, 0x0, 0x3375114
	0x03375100 ADRP X0, 0xDAD000
	0x03375104 LDR X0, [X0 + 0x28]
	0x03375108 BL 0x1C16CF4
	0x0337510C MOVZ W8, 0x1
	0x03375110 STRB W8, [X24 + 0xF0C]
	0x03375114 LDR W8, [X19 + 0x8]
	0x03375118 CMP W20, W8
	0x0337511C B.GE 0x33751D8
	0x03375120 ADRP X25, 0xD80000
	0x03375124 LDR X25, [X25 + 0x170]
	0x03375128 LDRH W20, [X19 + 0x14]
	0x0337512C LDR X0, [X25]
	0x03375130 LDR W8, [X0 + 0xE0]
	0x03375134 CBNZ W8, 0x337513C
	0x03375138 BL 0x1C16DFC
	0x0337513C MOV W0, W20
	0x03375140 MOV X1, X31
	0x03375144 BL 0x3317FCC
	0x03375148 MOVZ W26, 0x1
	0x0337514C MOVZ W21, 0x1
	0x03375150 TBZ X0, 0x0, 0x33751DC
	0x03375154 ADRP X20, 0xDAD000
	0x03375158 LDR X20, [X20 + 0x28]
	0x0337515C LDR W8, [X19 + 0x10]
	0x03375160 ADD W21, W8, 0x1
	0x03375164 STR W21, [X19 + 0x10]
	0x03375168 LDR X0, [X23]
	0x0337516C LDR W8, [X0 + 0xE0]
	0x03375170 CBNZ W8, 0x3375178
	0x03375174 BL 0x1C16DFC
	0x03375178 LDRB W8, [X24 + 0xF0C]
	0x0337517C TBNZ X8, 0x0, 0x337518C
	0x03375180 MOV X0, X20
	0x03375184 BL 0x1C16CF4
	0x03375188 STRB W26, [X24 + 0xF0C]
	0x0337518C LDR W8, [X19 + 0x8]
	0x03375190 CMP W21, W8
	0x03375194 CSET W21, LT
	0x03375198 B.GE 0x33751DC
	0x0337519C LDRSW X9, [X19 + 0x10]
	0x033751A0 CMP W9, W8
	0x033751A4 B.CS 0x33751F8
	0x033751A8 LDR X8, [X19]
	0x033751AC LDRH W22, [X8, X9, LSL #1]
	0x033751B0 STRH W22, [X19 + 0x14]
	0x033751B4 LDR X0, [X25]
	0x033751B8 LDR W8, [X0 + 0xE0]
	0x033751BC CBNZ W8, 0x33751C4
	0x033751C0 BL 0x1C16DFC
	0x033751C4 MOV W0, W22
	0x033751C8 MOV X1, X31
	0x033751CC BL 0x3317FCC
	0x033751D0 TBNZ X0, 0x0, 0x337515C
	0x033751D4 B 0x33751DC
	0x033751D8 MOV W21, W31
	0x033751DC MOV W0, W21
	0x033751E0 LDP X20, X19, [X31 + 0x40]
	0x033751E4 LDP X22, X21, [X31 + 0x30]
	0x033751E8 LDP X24, X23, [X31 + 0x20]
	0x033751EC LDP X26, X25, [X31 + 0x10]
	0x033751F0 LDR X30, [X31], #0x50
	0x033751F4 RET
	0x033751F8 BL 0x1C16F28
	0x033751FC STR X30, [X31 - 0x40]!
	0x03375200 STP X24, X23, [X31 + 0x10]
	0x03375204 STP X22, X21, [X31 + 0x20]
	0x03375208 STP X20, X19, [X31 + 0x30]
	0x0337520C ADRP X21, 0x1067000
	0x03375210 LDRB W8, [X21 + 0xF14]
	0x03375214 MOV X19, X1
	0x03375218 MOV X20, X0
	0x0337521C TBNZ X8, 0x0, 0x3375240
	0x03375220 ADRP X0, 0xDB1000
	0x03375224 LDR X0, [X0 + 0xD90]
	0x03375228 BL 0x1C16CF4
	0x0337522C ADRP X0, 0xDB3000
	0x03375230 LDR X0, [X0 + 0x4F0]
	0x03375234 BL 0x1C16CF4
	0x03375238 MOVZ W8, 0x1
	0x0337523C STRB W8, [X21 + 0xF14]
	0x03375240 CBZ X19, 0x337531C
	0x03375244 ADRP X8, 0xDB3000
	0x03375248 LDR X8, [X8 + 0x4F0]
	0x0337524C LDR W21, [X20 + 0x10]
	0x03375250 LDR W22, [X19 + 0x10]
	0x03375254 LDR X0, [X8]
	0x03375258 LDR W8, [X0 + 0xE0]
	0x0337525C CBNZ W8, 0x3375264
	0x03375260 BL 0x1C16DFC
	0x03375264 ADRP X23, 0x1067000
	0x03375268 LDRB W8, [X23 + 0xF0C]
	0x0337526C TBNZ X8, 0x0, 0x3375284
	0x03375270 ADRP X0, 0xDAD000
	0x03375274 LDR X0, [X0 + 0x28]
	0x03375278 BL 0x1C16CF4
	0x0337527C MOVZ W8, 0x1
	0x03375280 STRB W8, [X23 + 0xF0C]
	0x03375284 LDR W8, [X20 + 0x8]
	0x03375288 ADD W9, W22, W21
	0x0337528C CMP W9, W8
	0x03375290 B.LE 0x337529C
	0x03375294 MOV W0, W31
	0x03375298 B 0x3375308
	0x0337529C ADRP X9, 0xDB1000
	0x033752A0 LDR X21, [X20 + 0x18]
	0x033752A4 LDRSW X23, [X20 + 0x10]
	0x033752A8 LDR W22, [X19 + 0x10]
	0x033752AC LDR X9, [X9 + 0xD90]
	0x033752B0 SUBS W8, W8, W23
	0x033752B4 LDR X24, [X9]
	0x033752B8 B.CC 0x33752C4
	0x033752BC CMP W8, W22
	0x033752C0 B.CS 0x33752CC
	0x033752C4 MOV X0, X31
	0x033752C8 BL 0x339D6EC
	0x033752CC LDR X0, [X24 + 0x20]
	0x033752D0 LDR X20, [X20]
	0x033752D4 LDRB W8, [X0 + 0x135]
	0x033752D8 TBNZ X8, 0x0, 0x33752E0
	0x033752DC BL 0x1C5C684
	0x033752E0 CBZ X21, 0x337531C
	0x033752E4 ADD X1, X20, X23, 0x1, LSL
	0x033752E8 MOVZ W4, 0x1
	0x033752EC MOV X0, X21
	0x033752F0 MOV X2, X22
	0x033752F4 MOV X3, X19
	0x033752F8 MOV X5, X31
	0x033752FC BL 0x33046C4
	0x03375300 CMP W0, 0x0
	0x03375304 CSET W0, EQ
	0x03375308 LDP X20, X19, [X31 + 0x30]
	0x0337530C LDP X22, X21, [X31 + 0x20]
	0x03375310 LDP X24, X23, [X31 + 0x10]
	0x03375314 LDR X30, [X31], #0x40
	0x03375318 RET
	0x0337531C BL 0x1C16F20
	0x03375320 SUB X31, X31, 0x70
	0x03375324 STP X29, X30, [X31 + 0x10]
	0x03375328 STP X28, X27, [X31 + 0x20]
	0x0337532C STP X26, X25, [X31 + 0x30]
	0x03375330 STP X24, X23, [X31 + 0x40]
	0x03375334 STP X22, X21, [X31 + 0x50]
	0x03375338 STP X20, X19, [X31 + 0x60]
	0x0337533C ADRP X21, 0x1067000
	0x03375340 LDRB W8, [X21 + 0xF15]
	0x03375344 MOV X20, X3
	0x03375348 MOV X22, X1
	0x0337534C MOV X19, X0
	0x03375350 STR W2, [X31 + 0xC]
	0x03375354 TBNZ X8, 0x0, 0x3375390
	0x03375358 ADRP X0, 0xD80000
	0x0337535C LDR X0, [X0 + 0x170]
	0x03375360 BL 0x1C16CF4
	0x03375364 ADRP X0, 0xDB1000
	0x03375368 LDR X0, [X0 + 0xD90]
	0x0337536C BL 0x1C16CF4
	0x03375370 ADRP X0, 0xDAD000
	0x03375374 LDR X0, [X0 + 0x28]
	0x03375378 BL 0x1C16CF4
	0x0337537C ADRP X0, 0xDB3000
	0x03375380 LDR X0, [X0 + 0x4F0]
	0x03375384 BL 0x1C16CF4
	0x03375388 MOVZ W8, 0x1
	0x0337538C STRB W8, [X21 + 0xF15]
	0x03375390 CBZ X22, 0x3375768
	0x03375394 LDR W8, [X19 + 0x8]
	0x03375398 LDR W9, [X19 + 0x10]
	0x0337539C LDR W23, [X22 + 0x10]
	0x033753A0 ADRP X27, 0xD80000
	0x033753A4 LDR X27, [X27 + 0x170]
	0x033753A8 SUB W8, W8, W9
	0x033753AC CMP W23, W8
	0x033753B0 STR W23, [X20]
	0x033753B4 B.GT 0x3375420
	0x033753B8 ADRP X9, 0xDB1000
	0x033753BC LDRSW X21, [X19 + 0x10]
	0x033753C0 LDR W8, [X19 + 0x8]
	0x033753C4 LDR X24, [X19 + 0x18]
	0x033753C8 LDR X9, [X9 + 0xD90]
	0x033753CC SUBS W8, W8, W21
	0x033753D0 LDR X25, [X9]
	0x033753D4 B.CC 0x33753E0
	0x033753D8 CMP W8, W23
	0x033753DC B.CS 0x33753E8
	0x033753E0 MOV X0, X31
	0x033753E4 BL 0x339D6EC
	0x033753E8 LDR X0, [X25 + 0x20]
	0x033753EC LDR X25, [X19]
	0x033753F0 LDRB W8, [X0 + 0x135]
	0x033753F4 TBNZ X8, 0x0, 0x33753FC
	0x033753F8 BL 0x1C5C684
	0x033753FC CBZ X24, 0x3375768
	0x03375400 ADD X1, X25, X21, 0x1, LSL
	0x03375404 MOVZ W4, 0x1
	0x03375408 MOV X0, X24
	0x0337540C MOV X2, X23
	0x03375410 MOV X3, X22
	0x03375414 MOV X5, X31
	0x03375418 BL 0x33046C4
	0x0337541C CBZ W0, 0x33756EC
	0x03375420 ADRP X24, 0xDB3000
	0x03375424 LDR X24, [X24 + 0x4F0]
	0x03375428 LDR W29, [X19 + 0x10]
	0x0337542C LDR X0, [X24]
	0x03375430 LDR W8, [X0 + 0xE0]
	0x03375434 CBNZ W8, 0x3375440
	0x03375438 BL 0x1C16DFC
	0x0337543C LDR X0, [X24]
	0x03375440 LDR X8, [X0 + 0xB8]
	0x03375444 MOV X0, X22
	0x03375448 MOV W2, W31
	0x0337544C MOV X3, X31
	0x03375450 LDR X1, [X8]
	0x03375454 BL 0x322C054
	0x03375458 ADDS W31, W0, 0x1
	0x0337545C B.EQ 0x3375738
	0x03375460 MOV W23, W0
	0x03375464 MOV W25, W31
	0x03375468 LDR W8, [X19 + 0x8]
	0x0337546C SUB W21, W23, W25
	0x03375470 SUB W9, W8, W21
	0x03375474 CMP W29, W9
	0x03375478 B.GE 0x3375738
	0x0337547C CBZ W21, 0x3375580
	0x03375480 ADD W28, W21, W29
	0x03375484 CMP W28, W8
	0x03375488 B.CS 0x3375764
	0x0337548C LDR X0, [X27]
	0x03375490 LDR X8, [X19]
	0x03375494 LDR W9, [X0 + 0xE0]
	0x03375498 LDRH W26, [X8, W28, SXTW]
	0x0337549C CBNZ W9, 0x33754A4
	0x033754A0 BL 0x1C16DFC
	0x033754A4 MOV W0, W26
	0x033754A8 MOV X1, X31
	0x033754AC BL 0x3317FCC
	0x033754B0 TBZ X0, 0x0, 0x3375738
	0x033754B4 ADRP X9, 0xDB1000
	0x033754B8 LDR W8, [X19 + 0x8]
	0x033754BC LDR X26, [X19 + 0x18]
	0x033754C0 LDR X9, [X9 + 0xD90]
	0x033754C4 MOV X27, X24
	0x033754C8 SUBS W8, W8, W29
	0x033754CC LDR X24, [X9]
	0x033754D0 B.CC 0x33754DC
	0x033754D4 CMP W8, W21
	0x033754D8 B.CS 0x33754E4
	0x033754DC MOV X0, X31
	0x033754E0 BL 0x339D6EC
	0x033754E4 LDR X0, [X24 + 0x20]
	0x033754E8 LDR X24, [X19]
	0x033754EC LDRB W8, [X0 + 0x135]
	0x033754F0 TBNZ X8, 0x0, 0x33754F8
	0x033754F4 BL 0x1C5C684
	0x033754F8 ADRP X8, 0x1064000
	0x033754FC LDRB W8, [X8 + 0x761]
	0x03375500 CBNZ W8, 0x337551C
	0x03375504 ADRP X0, 0xDA5000
	0x03375508 LDR X0, [X0 + 0x290]
	0x0337550C BL 0x1C16CF4
	0x03375510 ADRP X8, 0x1064000
	0x03375514 MOVZ W9, 0x1
	0x03375518 STRB W9, [X8 + 0x761]
	0x0337551C LDR W8, [X22 + 0x10]
	0x03375520 SUBS W8, W8, W25
	0x03375524 B.CC 0x3375530
	0x03375528 CMP W8, W21
	0x0337552C B.CS 0x337553C
	0x03375530 MOVZ W0, 0x18
	0x03375534 MOV X1, X31
	0x03375538 BL 0x339D764
	0x0337553C MOV X0, X22
	0x03375540 MOV X1, X31
	0x03375544 BL 0x3225708
	0x03375548 CBZ X26, 0x3375768
	0x0337554C MOV W2, W21
	0x03375550 ADD X1, X24, W29, 0x1, SXTW
	0x03375554 ADD X3, X0, W25, 0x1, SXTW
	0x03375558 MOV X0, X26
	0x0337555C MOV X4, X2
	0x03375560 MOV X5, X31
	0x03375564 BL 0x3304AC0
	0x03375568 CBNZ W0, 0x3375738
	0x0337556C MOV X24, X27
	0x03375570 ADRP X27, 0xD80000
	0x03375574 LDR X27, [X27 + 0x170]
	0x03375578 ADD W29, W28, 0x1
	0x0337557C B 0x337558C
	0x03375580 LDR W8, [X20]
	0x03375584 SUB W8, W8, 0x1
	0x03375588 STR W8, [X20]
	0x0337558C LDR W8, [X19 + 0x8]
	0x03375590 CMP W29, W8
	0x03375594 B.GE 0x33755E8
	0x03375598 SXTW X29, W29
	0x0337559C CMP W8, W29
	0x033755A0 B.LS 0x3375764
	0x033755A4 LDR X0, [X27]
	0x033755A8 LDR X8, [X19]
	0x033755AC LDR W9, [X0 + 0xE0]
	0x033755B0 LDRH W25, [X8, X29, LSL #1]
	0x033755B4 CBNZ W9, 0x33755BC
	0x033755B8 BL 0x1C16DFC
	0x033755BC MOV W0, W25
	0x033755C0 MOV X1, X31
	0x033755C4 BL 0x3317FCC
	0x033755C8 TBZ X0, 0x0, 0x33755E8
	0x033755CC LDR W8, [X20]
	0x033755D0 ADD X29, X29, 0x1
	0x033755D4 ADD W8, W8, 0x1
	0x033755D8 STR W8, [X20]
	0x033755DC LDRSW X8, [X19 + 0x8]
	0x033755E0 CMP X29, X8
	0x033755E4 B.LT 0x337559C
	0x033755E8 LDR X0, [X24]
	0x033755EC LDR W8, [X0 + 0xE0]
	0x033755F0 CBNZ W8, 0x33755FC
	0x033755F4 BL 0x1C16DFC
	0x033755F8 LDR X0, [X24]
	0x033755FC LDR X8, [X0 + 0xB8]
	0x03375600 ADD W25, W23, 0x1
	0x03375604 MOV X0, X22
	0x03375608 MOV W2, W25
	0x0337560C LDR X1, [X8]
	0x03375610 MOV X3, X31
	0x03375614 BL 0x322C054
	0x03375618 MOV W23, W0
	0x0337561C TBZ X0, 0x1F, 0x3375468
	0x03375620 LDR W8, [X22 + 0x10]
	0x03375624 SUBS W21, W8, W25
	0x03375628 B.LE 0x33756EC
	0x0337562C LDR W8, [X19 + 0x8]
	0x03375630 SUB W9, W8, W21
	0x03375634 CMP W29, W9
	0x03375638 B.GT 0x3375738
	0x0337563C ADRP X9, 0xDB1000
	0x03375640 LDR X23, [X19 + 0x18]
	0x03375644 LDR X9, [X9 + 0xD90]
	0x03375648 SUBS W8, W8, W29
	0x0337564C LDR X24, [X9]
	0x03375650 B.CC 0x337565C
	0x03375654 CMP W8, W21
	0x03375658 B.CS 0x3375664
	0x0337565C MOV X0, X31
	0x03375660 BL 0x339D6EC
	0x03375664 LDR X0, [X24 + 0x20]
	0x03375668 LDR X24, [X19]
	0x0337566C LDRB W8, [X0 + 0x135]
	0x03375670 TBNZ X8, 0x0, 0x3375678
	0x03375674 BL 0x1C5C684
	0x03375678 ADRP X9, 0x1064000
	0x0337567C LDRB W8, [X9 + 0x761]
	0x03375680 CBNZ W8, 0x337569C
	0x03375684 ADRP X0, 0xDA5000
	0x03375688 LDR X0, [X0 + 0x290]
	0x0337568C MOV X26, X9
	0x03375690 BL 0x1C16CF4
	0x03375694 MOVZ W8, 0x1
	0x03375698 STRB W8, [X26 + 0x761]
	0x0337569C LDR W8, [X22 + 0x10]
	0x033756A0 SUBS W8, W8, W25
	0x033756A4 B.CC 0x33756B0
	0x033756A8 CMP W8, W21
	0x033756AC B.CS 0x33756BC
	0x033756B0 MOVZ W0, 0x18
	0x033756B4 MOV X1, X31
	0x033756B8 BL 0x339D764
	0x033756BC MOV X0, X22
	0x033756C0 MOV X1, X31
	0x033756C4 BL 0x3225708
	0x033756C8 CBZ X23, 0x3375768
	0x033756CC MOV W2, W21
	0x033756D0 ADD X1, X24, W29, 0x1, SXTW
	0x033756D4 ADD X3, X0, W25, 0x1, SXTW
	0x033756D8 MOV X0, X23
	0x033756DC MOV X4, X2
	0x033756E0 MOV X5, X31
	0x033756E4 BL 0x3304AC0
	0x033756E8 CBNZ W0, 0x3375738
	0x033756EC LDR W8, [X31 + 0xC]
	0x033756F0 TBZ X8, 0x0, 0x3375740
	0x033756F4 LDR W8, [X19 + 0x10]
	0x033756F8 LDR W9, [X20]
	0x033756FC LDR W10, [X19 + 0x8]
	0x03375700 ADD W8, W9, W8
	0x03375704 CMP W8, W10
	0x03375708 B.GE 0x3375740
	0x0337570C B.CS 0x3375764
	0x03375710 LDR X0, [X27]
	0x03375714 LDR X9, [X19]
	0x03375718 LDR W10, [X0 + 0xE0]
	0x0337571C LDRH W19, [X9, W8, SXTW]
	0x03375720 CBNZ W10, 0x3375728
	0x03375724 BL 0x1C16DFC
	0x03375728 MOV W0, W19
	0x0337572C MOV X1, X31
	0x03375730 BL 0x331A888
	0x03375734 TBZ X0, 0x0, 0x3375740
	0x03375738 MOV W0, W31
	0x0337573C B 0x3375744
	0x03375740 MOVZ W0, 0x1
	0x03375744 LDP X20, X19, [X31 + 0x60]
	0x03375748 LDP X22, X21, [X31 + 0x50]
	0x0337574C LDP X24, X23, [X31 + 0x40]
	0x03375750 LDP X26, X25, [X31 + 0x30]
	0x03375754 LDP X28, X27, [X31 + 0x20]
	0x03375758 LDP X29, X30, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x1069000
	007 Move X22, 0xDB7000
	008 Move X21, 0xDB7000
	009 Move X20, 0xDB7000
	010 Move W8, [X19+3845]
	011 Move X22, [X22+3224]
	012 Move X21, [X21+3232]
	013 Move X20, [X20+3240]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {89}
	018 Move X0, 0xDB7000
	019 Move X0, [X0+3224]
	020 Call 0x1C17CF4
	021 Move X0, 0xDB7000
	022 Move X0, [X0+3232]
	023 Call 0x1C17CF4
	024 Move X0, 0xDB4000
	025 Move X0, [X0+1416]
	026 Call 0x1C17CF4
	027 Move X0, 0xDB6000
	028 Move X0, [X0+3248]
	029 Call 0x1C17CF4
	030 Move X0, 0xDB6000
	031 Move X0, [X0+3256]
	032 Call 0x1C17CF4
	033 Move X0, 0xDB6000
	034 Move X0, [X0+3264]
	035 Call 0x1C17CF4
	036 Move X0, 0xDB6000
	037 Move X0, [X0+3272]
	038 Call 0x1C17CF4
	039 Move X0, 0xDB6000
	040 Move X0, [X0+3280]
	041 Call 0x1C17CF4
	042 Move X0, 0xDB6000
	043 Move X0, [X0+3288]
	044 Call 0x1C17CF4
	045 Move X0, 0xDB6000
	046 Move X0, [X0+3296]
	047 Call 0x1C17CF4
	048 Move X0, 0xDB6000
	049 Move X0, [X0+3240]
	050 Call 0x1C17CF4
	051 Move X0, 0xDB6000
	052 Move X0, [X0+3304]
	053 Call 0x1C17CF4
	054 Move X0, 0xDB6000
	055 Move X0, [X0+3312]
	056 Call 0x1C17CF4
	057 Move X0, 0xDB6000
	058 Move X0, [X0+3320]
	059 Call 0x1C17CF4
	060 Move X0, 0xDB6000
	061 Move X0, [X0+3328]
	062 Call 0x1C17CF4
	063 Move X0, 0xDB6000
	064 Move X0, [X0+3336]
	065 Call 0x1C17CF4
	066 Move X0, 0xDB6000
	067 Move X0, [X0+3344]
	068 Call 0x1C17CF4
	069 Move X0, 0xDB6000
	070 Move X0, [X0+3352]
	071 Call 0x1C17CF4
	072 Move X0, 0xDB6000
	073 Move X0, [X0+3360]
	074 Call 0x1C17CF4
	075 Move X0, 0xDB6000
	076 Move X0, [X0+3368]
	077 Call 0x1C17CF4
	078 Move X0, 0xDB6000
	079 Move X0, [X0+3376]
	080 Call 0x1C17CF4
	081 Move X0, 0xDB6000
	082 Move X0, [X0+3384]
	083 Call 0x1C17CF4
	084 Move X0, 0xDB6000
	085 Move X0, [X0+3392]
	086 Call 0x1C17CF4
	087 Move W8, 1
	088 Move [X19+3845], W8
	089 Move X0, [X22]
	090 Move W1, 20
	091 Call 0x1C17D6C
	092 Move X8, [X21]
	093 Move X19, X0
	094 Move W1, 18
	095 Move X0, X8
	096 Call 0x1C17D6C
	097 Move X1, [X20]
	098 Move X2, X31
	099 Move X20, X0
	100 Call RuntimeHelpers.InitializeArray, X0, X1
	101 Compare X19, 0
	102 JumpIfEqual {347}
	103 Move W8, [X19+24]
	104 Compare W8, 0
	105 JumpIfEqual {346}
	106 Move [X19+32], X20
	107 Move X0, [X21]
	108 Move X20, 0xDB6000
	109 Move X20, [X20+3296]
	110 Move W1, 18
	111 Call 0x1C17D6C
	112 Move X1, [X20]
	113 Move X2, X31
	114 Move X20, X0
	115 Call RuntimeHelpers.InitializeArray, X0, X1
	116 Move W8, [X19+24]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move [X19+40], X20
	119 Move X0, [X21]
	120 Move X20, 0xDB6000
	121 Move X20, [X20+3320]
	122 Move W1, 18
	123 Call 0x1C17D6C
	124 Move X1, [X20]
	125 Move X2, X31
	126 Move X20, X0
	127 Call RuntimeHelpers.InitializeArray, X0, X1
	128 Move W8, [X19+24]
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move [X19+48], X20
	131 Move X0, [X21]
	132 Move X20, 0xDB6000
	133 Move X20, [X20+3344]
	134 Move W1, 18
	135 Call 0x1C17D6C
	136 Move X1, [X20]
	137 Move X2, X31
	138 Move X20, X0
	139 Call RuntimeHelpers.InitializeArray, X0, X1
	140 Move W8, [X19+24]
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move [X19+56], X20
	143 Move X0, [X21]
	144 Move X20, 0xDB6000
	145 Move X20, [X20+3368]
	146 Move W1, 18
	147 Call 0x1C17D6C
	148 Move X1, [X20]
	149 Move X2, X31
	150 Move X20, X0
	151 Call RuntimeHelpers.InitializeArray, X0, X1
	152 Move W8, [X19+24]
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move [X19+64], X20
	155 Move X0, [X21]
	156 Move X20, 0xDB6000
	157 Move X20, [X20+3272]
	158 Move W1, 18
	159 Call 0x1C17D6C
	160 Move X1, [X20]
	161 Move X2, X31
	162 Move X20, X0
	163 Call RuntimeHelpers.InitializeArray, X0, X1
	164 Move W8, [X19+24]
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Move [X19+72], X20
	167 Move X0, [X21]
	168 Move X20, 0xDB6000
	169 Move X20, [X20+3376]
	170 Move W1, 18
	171 Call 0x1C17D6C
	172 Move X1, [X20]
	173 Move X2, X31
	174 Move X20, X0
	175 Call RuntimeHelpers.InitializeArray, X0, X1
	176 Move W8, [X19+24]
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move [X19+80], X20
	179 Move X0, [X21]
	180 Move X20, 0xDB6000
	181 Move X20, [X20+3312]
	182 Move W1, 18
	183 Call 0x1C17D6C
	184 Move X1, [X20]
	185 Move X2, X31
	186 Move X20, X0
	187 Call RuntimeHelpers.InitializeArray, X0, X1
	188 Move W8, [X19+24]
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move [X19+88], X20
	191 Move X0, [X21]
	192 Move X20, 0xDB6000
	193 Move X20, [X20+3360]
	194 Move W1, 18
	195 Call 0x1C17D6C
	196 Move X1, [X20]
	197 Move X2, X31
	198 Move X20, X0
	199 Call RuntimeHelpers.InitializeArray, X0, X1
	200 Move W8, [X19+24]
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Move [X19+96], X20
	203 Move X0, [X21]
	204 Move X20, 0xDB6000
	205 Move X20, [X20+3256]
	206 Move W1, 18
	207 Call 0x1C17D6C
	208 Move X1, [X20]
	209 Move X2, X31
	210 Move X20, X0
	211 Call RuntimeHelpers.InitializeArray, X0, X1
	212 Move W8, [X19+24]
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Move [X19+104], X20
	215 Move X0, [X21]
	216 Move X20, 0xDB6000
	217 Move X20, [X20+3264]
	218 Move W1, 18
	219 Call 0x1C17D6C
	220 Move X1, [X20]
	221 Move X2, X31
	222 Move X20, X0
	223 Call RuntimeHelpers.InitializeArray, X0, X1
	224 Move W8, [X19+24]
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Move [X19+112], X20
	227 Move X0, [X21]
	228 Move X20, 0xDB6000
	229 Move X20, [X20+3288]
	230 Move W1, 18
	231 Call 0x1C17D6C
	232 Move X1, [X20]
	233 Move X2, X31
	234 Move X20, X0
	235 Call RuntimeHelpers.InitializeArray, X0, X1
	236 Move W8, [X19+24]
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Move [X19+120], X20
	239 Move X0, [X21]
	240 Move X20, 0xDB6000
	241 Move X20, [X20+3248]
	242 Move W1, 18
	243 Call 0x1C17D6C
	244 Move X1, [X20]
	245 Move X2, X31
	246 Move X20, X0
	247 Call RuntimeHelpers.InitializeArray, X0, X1
	248 Move W8, [X19+24]
	249 NotImplemented "Instruction CMP not yet implemented."
	250 Move [X19+128], X20
	251 Move X0, [X21]
	252 Move X20, 0xDB6000
	253 Move X20, [X20+3304]
	254 Move W1, 18
	255 Call 0x1C17D6C
	256 Move X1, [X20]
	257 Move X2, X31
	258 Move X20, X0
	259 Call RuntimeHelpers.InitializeArray, X0, X1
	260 Move W8, [X19+24]
	261 NotImplemented "Instruction CMP not yet implemented."
	262 Move [X19+136], X20
	263 Move X0, [X21]
	264 Move X20, 0xDB6000
	265 Move X20, [X20+3328]
	266 Move W1, 18
	267 Call 0x1C17D6C
	268 Move X1, [X20]
	269 Move X2, X31
	270 Move X20, X0
	271 Call RuntimeHelpers.InitializeArray, X0, X1
	272 Move W8, [X19+24]
	273 NotImplemented "Instruction CMP not yet implemented."
	274 Move [X19+144], X20
	275 Move X0, [X21]
	276 Move X20, 0xDB6000
	277 Move X20, [X20+3280]
	278 Move W1, 18
	279 Call 0x1C17D6C
	280 Move X1, [X20]
	281 Move X2, X31
	282 Move X20, X0
	283 Call RuntimeHelpers.InitializeArray, X0, X1
	284 Move W8, [X19+24]
	285 NotImplemented "Instruction CMP not yet implemented."
	286 Move [X19+152], X20
	287 Move X0, [X21]
	288 Move X20, 0xDB6000
	289 Move X20, [X20+3336]
	290 Move W1, 18
	291 Call 0x1C17D6C
	292 Move X1, [X20]
	293 Move X2, X31
	294 Move X20, X0
	295 Call RuntimeHelpers.InitializeArray, X0, X1
	296 Move W8, [X19+24]
	297 NotImplemented "Instruction CMP not yet implemented."
	298 Move [X19+160], X20
	299 Move X0, [X21]
	300 Move X20, 0xDB6000
	301 Move X20, [X20+3384]
	302 Move W1, 18
	303 Call 0x1C17D6C
	304 Move X1, [X20]
	305 Move X2, X31
	306 Move X20, X0
	307 Call RuntimeHelpers.InitializeArray, X0, X1
	308 Move W8, [X19+24]
	309 NotImplemented "Instruction CMP not yet implemented."
	310 Move [X19+168], X20
	311 Move X0, [X21]
	312 Move X20, 0xDB6000
	313 Move X20, [X20+3392]
	314 Move W1, 18
	315 Call 0x1C17D6C
	316 Move X1, [X20]
	317 Move X2, X31
	318 Move X20, X0
	319 Call RuntimeHelpers.InitializeArray, X0, X1
	320 Move W8, [X19+24]
	321 NotImplemented "Instruction CMP not yet implemented."
	322 Move [X19+176], X20
	323 Move X0, [X21]
	324 Move X20, 0xDB6000
	325 Move X20, [X20+3352]
	326 Move W1, 18
	327 Call 0x1C17D6C
	328 Move X1, [X20]
	329 Move X2, X31
	330 Move X20, X0
	331 Call RuntimeHelpers.InitializeArray, X0, X1
	332 Move W8, [X19+24]
	333 NotImplemented "Instruction CMP not yet implemented."
	334 Move X8, 0xDB4000
	335 Move X8, [X8+1416]
	336 Move [X19+184], X20
	337 Move X22, [X31+16]
	338 Move X21, [X31+24]
	339 Move X8, [X8]
	340 Move X8, [X8+184]
	341 Move [X8+8], X19
	342 Move X20, [X31+32]
	343 Move X19, [X31+40]
	344 Move X30, [X31+48]
	345 Return 
	346 Call 0x1C17F28
	347 Call 0x1C17F20
	348 Move [X31-64], X30
	349 Move [X31+16], X24
	350 Move [X31+24], X23
	351 Move [X31+32], X22
	352 Move [X31+40], X21
	353 Move [X31+48], X20
	354 Move [X31+56], X19
	355 Move X21, 0x1068000
	356 Move W8, [X21+3848]
	357 Move X19, X1
	358 Move X20, X0
	359 Compare W8, 0
	360 JumpIfNotEqual {369}
	361 Move X0, 0xDB2000
	362 Move X0, [X0+3472]
	363 Call 0x1C17CF4
	364 Move X0, 0xDB4000
	365 Move X0, [X0+1264]
	366 Call 0x1C17CF4
	367 Move W8, 1
	368 Move [X21+3848], W8
	369 Compare X19, 0
	370 JumpIfEqual {424}
	371 Move X8, 0xDB4000
	372 Move X8, [X8+1264]
	373 Move W21, [X20+16]
	374 Move W22, [X19+16]
	375 Move X0, [X8]
	376 Move W8, [X0+224]
	377 Compare W8, 0
	378 JumpIfNotEqual {380}
	379 Call 0x1C17DFC
	380 Move X0, X20
	381 Move X1, X31
	382 Call __DTString.get_Length, X0
	383 Add W8, W22, W21
	384 NotImplemented "Instruction CMP not yet implemented."
	385 Move W0, W31
	386 Move X9, 0xDB2000
	387 Move X21, [X20+24]
	388 NotImplemented "Instruction LDRSW not yet implemented."
	389 Move W22, [X19+16]
	390 Move W8, [X20+8]
	391 Move X9, [X9+3472]
	392 Subtract W8, W8, W23
	393 Move X24, [X9]
	394 NotImplemented "Instruction CMP not yet implemented."
	395 Move X0, X31
	396 Call ThrowHelper.ThrowArgumentOutOfRangeException
	397 Move X0, [X24+32]
	398 Move X20, [X20]
	399 Move W8, [X0+309]
	400 Move TEMP, X8
	401 And TEMP, TEMP, 1
	402 Compare TEMP, 1
	403 JumpIfEqual {405}
	404 Call 0x1C5D684
	405 Compare X21, 0
	406 JumpIfEqual {424}
	407 Add X1, X20, X23
	408 Move W4, 1
	409 Move X0, X21
	410 Move X2, X22
	411 Move X3, X19
	412 Move X5, X31
	413 Call CompareInfo.Compare, X0, X1, X2, X3
	414 NotImplemented "Instruction CMP not yet implemented."
	415 NotImplemented "Instruction CSET not yet implemented."
	416 Move X20, [X31+48]
	417 Move X19, [X31+56]
	418 Move X22, [X31+32]
	419 Move X21, [X31+40]
	420 Move X24, [X31+16]
	421 Move X23, [X31+24]
	422 Move X30, [X31+64]
	423 Return 
	424 Call 0x1C17F20
	425 Move [X31-32], X30
	426 Move [X31-24], X21
	427 Move [X31+16], X20
	428 Move [X31+24], X19
	429 Move X21, 0x1068000
	430 Move W8, [X21+3849]
	431 Move X20, X1
	432 Move X19, X0
	433 Compare W8, 0
	434 JumpIfNotEqual {446}
	435 Move X0, 0xDAF000
	436 Move X0, [X0+2912]
	437 Call 0x1C17CF4
	438 Move X0, 0xDB4000
	439 Move X0, [X0+1264]
	440 Call 0x1C17CF4
	441 Move X0, 0xDB4000
	442 Move X0, [X0+1224]
	443 Call 0x1C17CF4
	444 Move W8, 1
	445 Move [X21+3849], W8
	446 Move X8, 0xDAF000
	447 Move X8, [X8+2912]
	448 Move X8, [X8]
	449 Move X8, [X8+184]
	450 Move W8, [X8+3]
	451 Compare W8, 0
	452 JumpIfNotEqual {488}
	453 Compare X20, 0
	454 JumpIfEqual {498}
	455 Move X0, [X20+120]
	456 Compare X0, 0
	457 JumpIfEqual {498}
	458 Move X8, [X0]
	459 Move X9, [X8+424]
	460 Move X1, [X8+432]
	461 NotImplemented "Instruction BLR not yet implemented."
	462 NotImplemented "Instruction CMP not yet implemented."
	463 Move X8, 0xDB4000
	464 Move X8, [X8+1264]
	465 Move X0, [X8]
	466 Move W8, [X0+224]
	467 Compare W8, 0
	468 JumpIfNotEqual {470}
	469 Call 0x1C17DFC
	470 Move X0, X19
	471 Move X1, X31
	472 Call __DTString.GetNext, X0
	473 Move TEMP, X0
	474 And TEMP, TEMP, 1
	475 Compare TEMP, 1
	476 JumpIfNotEqual {488}
	477 Move X8, 0xDB4000
	478 Move X8, [X8+1224]
	479 Move X0, [X8]
	480 Compare X0, 0
	481 JumpIfEqual {498}
	482 NotImplemented "Instruction LDRH not yet implemented."
	483 Move W1, W31
	484 Move X2, X31
	485 Call String.get_Chars, X0, X1
	486 NotImplemented "Instruction CMP not yet implemented."
	487 Move W0, 1
	488 Move W0, W31
	489 Move X20, [X31+16]
	490 Move X19, [X31+24]
	491 Move X30, [X31+32]
	492 Move X21, [X31+40]
	493 Return 
	494 Move W8, [X19+16]
	495 Move W0, W31
	496 Subtract W8, W8, 1
	497 Move [X19+16], W8
	498 Call 0x1C17F20

