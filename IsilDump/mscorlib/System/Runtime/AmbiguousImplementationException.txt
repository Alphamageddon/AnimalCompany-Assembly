Type: System.Runtime.AmbiguousImplementationException

Method: System.Void .ctor()

Disassembly:
	0x032737C4 ADD W9, W9, 0x1
	0x032737C8 ADD X8, X8, W9, 0x4, SXTW
	0x032737CC ADD X0, X8, 0x138
	0x032737D0 LDP X8, X1, [X0]
	0x032737D4 MOV X0, X22
	0x032737D8 BLR X8
	0x032737DC CBZ X0, 0x3273914
	0x032737E0 LDR X8, [X0]
	0x032737E4 LDR X1, [X26]
	0x032737E8 LDRB W10, [X8 + 0x130]
	0x032737EC LDRB W9, [X1 + 0x130]
	0x032737F0 CMP W10, W9
	0x032737F4 B.CC 0x327390C
	0x032737F8 LDR X8, [X8 + 0xC8]
	0x032737FC ADD X8, X8, X9, 0x3, LSL
	0x03273800 LDUR X8, [X8 - 0x8]
	0x03273804 CMP X8, X1
	0x03273808 B.NE 0x327390C
	0x0327380C LDR X23, [X0 + 0x18]
	0x03273810 CBZ X23, 0x3273724
	0x03273814 LDR X8, [X23]
	0x03273818 LDR X1, [X27]
	0x0327381C LDRH W9, [X8 + 0x12E]
	0x03273820 CBZ X9, 0x3273844
	0x03273824 LDR X10, [X8 + 0xB0]
	0x03273828 ADD X10, X10, 0x8
	0x0327382C LDUR X11, [X10 - 0x8]
	0x03273830 CMP X11, X1
	0x03273834 B.EQ 0x3273854
	0x03273838 SUBS X9, X9, 0x1
	0x0327383C ADD X10, X10, 0x10
	0x03273840 B.NE 0x327382C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x116A000
	006 Move X20, 0xE81000
	007 Move W8, [X21+1475]
	008 Move X20, [X20+2000]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xE81000
	015 Move X0, [X0+2000]
	016 Call 0x1C17CF4
	017 Move X0, 0xEB1000
	018 Move X0, [X0+3328]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1475], W8
	022 Move X0, [X20]
	023 Move X20, 0xEB1000
	024 Move W8, [X0+224]
	025 Move X20, [X20+3328]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X1, [X20]
	030 Move X0, X19
	031 Move X2, X31
	032 Call Exception..ctor, X0, X1
	033 Move W8, 0x106A
	034 NotImplemented "Instruction MOVK not yet implemented."
	035 Move [X19+96], W8
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Return 

Method: System.Void .ctor(System.String message)

Disassembly:
	0x03273844 MOV X0, X23
	0x03273848 MOV W2, W31
	0x0327384C BL 0x1C5C788
	0x03273850 B 0x3273860
	0x03273854 LDRSW X9, [X10]
	0x03273858 ADD X8, X8, X9, 0x4, LSL
	0x0327385C ADD X0, X8, 0x138
	0x03273860 LDP X8, X4, [X0]
	0x03273864 AND W2, W20, 0x1
	0x03273868 AND W3, W19, 0x1
	0x0327386C MOV X0, X23
	0x03273870 MOV X1, X21
	0x03273874 BLR X8
	0x03273878 B 0x3273724
	0x0327387C MOV X19, X31
	0x03273880 LDR X1, [X25]
	0x03273884 MOV X0, X22
	0x03273888 BL 0x1C16E00
	0x0327388C CBZ X0, 0x32738EC
	0x03273890 LDR X8, [X0]
	0x03273894 LDR X1, [X25]
	0x03273898 MOV X20, X0
	0x0327389C LDRH W9, [X8 + 0x12E]
	0x032738A0 CBZ X9, 0x32738C4
	0x032738A4 LDR X10, [X8 + 0xB0]
	0x032738A8 ADD X10, X10, 0x8
	0x032738AC LDUR X11, [X10 - 0x8]
	0x032738B0 CMP X11, X1
	0x032738B4 B.EQ 0x32738D4
	0x032738B8 SUBS X9, X9, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x116A000
	007 Move X22, 0xE81000
	008 Move W8, [X21+1476]
	009 Move X22, [X22+2000]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xE81000
	017 Move X0, [X0+2000]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1476], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X19
	027 Move X1, X20
	028 Move X2, X31
	029 Call Exception..ctor, X0, X1
	030 Move W8, 0x106A
	031 NotImplemented "Instruction MOVK not yet implemented."
	032 Move [X19+96], W8
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Return 

Method: System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x032738BC ADD X10, X10, 0x10
	0x032738C0 B.NE 0x32738AC
	0x032738C4 MOV X0, X20
	0x032738C8 MOV W2, W31
	0x032738CC BL 0x1C5C788
	0x032738D0 B 0x32738E0
	0x032738D4 LDRSW X9, [X10]
	0x032738D8 ADD X8, X8, X9, 0x4, LSL
	0x032738DC ADD X0, X8, 0x138
	0x032738E0 LDP X8, X1, [X0]
	0x032738E4 MOV X0, X20
	0x032738E8 BLR X8
	0x032738EC CBNZ X19, 0x3273924
	0x032738F0 LDP X20, X19, [X31 + 0x50]
	0x032738F4 LDP X22, X21, [X31 + 0x40]
	0x032738F8 LDP X24, X23, [X31 + 0x30]
	0x032738FC LDP X26, X25, [X31 + 0x20]
	0x03273900 LDP X28, X27, [X31 + 0x10]
	0x03273904 LDR X30, [X31], #0x60
	0x03273908 RET
	0x0327390C BL 0x1C171E0
	0x03273910 BL 0x1C171E0
	0x03273914 BL 0x1C16F20
	0x03273918 BL 0x1C16F20
	0x0327391C BL 0x1C16F20
	0x03273920 BL 0x1C16F20
	0x03273924 MOV X0, X19
	0x03273928 BL 0x1C16F18
	0x0327392C BL 0x1C16F20
	0x03273930 MOV X0, X24
	0x03273934 BL 0x1C16F18
	0x03273938 B 0x3273958

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x116A000
	009 Move X23, 0xE81000
	010 Move W8, [X24+1477]
	011 Move X23, [X23+2000]
	012 Move X19, X3
	013 Move X20, X2
	014 Move X21, X1
	015 Move X22, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xE81000
	021 Move X0, [X0+2000]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+1477], W8
	025 Move X0, [X23]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X22
	031 Move X1, X21
	032 Move X2, X20
	033 Move X3, X19
	034 Move X20, [X31+48]
	035 Move X19, [X31+56]
	036 Move X22, [X31+32]
	037 Move X21, [X31+40]
	038 Move X24, [X31+16]
	039 Move X23, [X31+24]
	040 Move X4, X31
	041 Move X30, [X31+64]
	042 Call Exception..ctor, X0, X1, X2
	043 Return 

