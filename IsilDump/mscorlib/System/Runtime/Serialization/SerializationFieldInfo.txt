Type: System.Runtime.Serialization.SerializationFieldInfo

Method: System.Reflection.Module get_Module()

Disassembly:
	0x032A9164 MOV X0, X8
	0x032A9168 BL 0x1C16DFC
	0x032A916C MOV X0, X22
	0x032A9170 MOV X1, X31
	0x032A9174 BL 0x338C698
	0x032A9178 MOV X3, X0
	0x032A917C MOV X0, X20
	0x032A9180 MOV X1, X19

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+472]
	007 Move X1, [X8+480]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Int32 get_MetadataToken()

Disassembly:
	0x032A9184 MOV X2, X21
	0x032A9188 BL 0x32A89BC
	0x032A918C LDP X20, X19, [X31 + 0x40]
	0x032A9190 LDP X22, X21, [X31 + 0x30]
	0x032A9194 LDP X24, X23, [X31 + 0x20]
	0x032A9198 LDP X30, X25, [X31 + 0x10]
	0x032A919C ADD X31, X31, 0x50
	0x032A91A0 RET
	0x032A91A4 SUB X31, X31, 0x50

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+568]
	007 Move X1, [X8+576]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Void .ctor(System.Reflection.RuntimeFieldInfo field, System.String namePrefix)

Disassembly:
	0x032A2544 RET
	0x032A2548 B 0x32A254C
	0x032A254C MOV X19, X0
	0x032A2550 CMP W1, 0x1
	0x032A2554 B.NE 0x32A25B4
	0x032A2558 MOV X0, X19
	0x032A255C BL 0x3EB1AD0
	0x032A2560 MOV X19, X0
	0x032A2564 ADRP X0, 0xE51000
	0x032A2568 LDR X0, [X0 + 0x7D0]
	0x032A256C BL 0x1C16D08
	0x032A2570 LDR X8, [X19]
	0x032A2574 LDR X1, [X8]
	0x032A2578 BL 0x1C17270
	0x032A257C TBZ X0, 0x0, 0x32A258C
	0x032A2580 BL 0x3EB1AE0
	0x032A2584 MOV X0, X31
	0x032A2588 B 0x32A253C
	0x032A258C MOVZ W0, 0x8
	0x032A2590 BL 0x3EB1AF0
	0x032A2594 LDR X8, [X19]
	0x032A2598 STR X8, [X0]
	0x032A259C ADRP X1, 0xC12000
	0x032A25A0 ADD X1, X1, 0xE58
	0x032A25A4 MOV X2, X31
	0x032A25A8 BL 0x3EB1B00
	0x032A25AC MOV X19, X0
	0x032A25B0 BL 0x3EB1AE0
	0x032A25B4 MOV X0, X19
	0x032A25B8 BL 0x1D2C690
	0x032A25BC BL 0x1990590
	0x032A25C0 STP X30, X21, [X31 - 0x20]!
	0x032A25C4 STP X20, X19, [X31 + 0x10]
	0x032A25C8 ADRP X21, 0x113A000
	0x032A25CC LDRB W8, [X21 + 0x773]
	0x032A25D0 MOV X19, X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x113B000
	007 Move W8, [X22+1960]
	008 Move X20, X2
	009 Move X21, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xE57000
	016 Move X0, [X0+1016]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1960], W8
	020 Move X0, X19
	021 Move X1, X31
	022 Call FieldInfo..ctor, X0
	023 Move [X19+16], X21
	024 Compare X21, 0
	025 JumpIfEqual {45}
	026 Move X8, [X21]
	027 Move X22, 0xE57000
	028 Move X0, X21
	029 Move X9, [X8+424]
	030 Move X1, [X8+432]
	031 Move X22, [X22+1016]
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Move X1, [X22]
	034 Move X2, X0
	035 Move X0, X20
	036 Move X3, X31
	037 Call String.Concat, X0, X1, X2
	038 Move [X19+24], X0
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return 
	045 Call 0x1C17F20

Method: System.String get_Name()

Disassembly:
	0x032A91A8 STR D8, [X31 + 0x10]
	0x032A91AC STR X30, [X31 + 0x18]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Type get_DeclaringType()

Disassembly:
	0x032A91B0 STP X24, X23, [X31 + 0x20]
	0x032A91B4 STP X22, X21, [X31 + 0x30]
	0x032A91B8 STP X20, X19, [X31 + 0x40]
	0x032A91BC ADRP X24, 0x1133000
	0x032A91C0 ADRP X23, 0xE4A000
	0x032A91C4 ADRP X21, 0xE72000
	0x032A91C8 ADRP X22, 0xE4A000
	0x032A91CC LDRB W8, [X24 + 0x7B4]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+440]
	007 Move X1, [X8+448]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Type get_ReflectedType()

Disassembly:
	0x032A91D0 LDR X23, [X23 + 0xA90]
	0x032A91D4 LDR X21, [X21 + 0xA80]
	0x032A91D8 LDR X22, [X22 + 0x6C0]
	0x032A91DC MOV V8.16B, V0.16B
	0x032A91E0 MOV X19, X1
	0x032A91E4 MOV X20, X0
	0x032A91E8 TBNZ X8, 0x0, 0x32A9218
	0x032A91EC ADRP X0, 0xE72000

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+456]
	007 Move X1, [X8+464]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Object[] GetCustomAttributes(System.Boolean inherit)

Disassembly:
	0x032A91F0 LDR X0, [X0 + 0xA80]
	0x032A91F4 BL 0x1C16CF4
	0x032A91F8 ADRP X0, 0xE4A000
	0x032A91FC LDR X0, [X0 + 0xA90]
	0x032A9200 BL 0x1C16CF4
	0x032A9204 ADRP X0, 0xE4A000
	0x032A9208 LDR X0, [X0 + 0x6C0]
	0x032A920C BL 0x1C16CF4
	0x032A9210 MOVZ W8, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {11}
	005 Move X8, [X0]
	006 And W1, W1, 1
	007 Move X3, [X8+504]
	008 Move X2, [X8+512]
	009 Move X30, [X31+16]
	010 CallNoReturn X3
	011 Call 0x1C17F20

Method: System.Object[] GetCustomAttributes(System.Type attributeType, System.Boolean inherit)

Disassembly:
	0x032A9214 STRB W8, [X24 + 0x7B4]
	0x032A9218 LDR X0, [X23]
	0x032A921C ADD X1, X31, 0xC
	0x032A9220 STR S8, [X31 + 0xC]
	0x032A9224 BL 0x1C16E04
	0x032A9228 LDR X8, [X22]
	0x032A922C LDR X22, [X21]
	0x032A9230 MOV X21, X0
	0x032A9234 LDR W9, [X8 + 0xE0]
	0x032A9238 CBNZ W9, 0x32A9244

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {11}
	005 Move X8, [X0]
	006 And W2, W2, 1
	007 Move X4, [X8+520]
	008 Move X3, [X8+528]
	009 Move X30, [X31+16]
	010 CallNoReturn X4
	011 Call 0x1C17F20

Method: System.Boolean IsDefined(System.Type attributeType, System.Boolean inherit)

Disassembly:
	0x032A923C MOV X0, X8
	0x032A9240 BL 0x1C16DFC
	0x032A9244 MOV X0, X22
	0x032A9248 MOV X1, X31
	0x032A924C BL 0x338C698
	0x032A9250 MOV X3, X0
	0x032A9254 MOV X0, X20
	0x032A9258 MOV X1, X19
	0x032A925C MOV X2, X21

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {11}
	005 Move X8, [X0]
	006 And W2, W2, 1
	007 Move X4, [X8+488]
	008 Move X3, [X8+496]
	009 Move X30, [X31+16]
	010 CallNoReturn X4
	011 Call 0x1C17F20

Method: System.Type get_FieldType()

Disassembly:
	0x032A9260 BL 0x32A89BC
	0x032A9264 LDP X20, X19, [X31 + 0x40]
	0x032A9268 LDP X22, X21, [X31 + 0x30]
	0x032A926C LDP X24, X23, [X31 + 0x20]
	0x032A9270 LDR X30, [X31 + 0x18]
	0x032A9274 LDR V8, [X31 + 0x10]
	0x032A9278 ADD X31, X31, 0x50
	0x032A927C RET
	0x032A9280 SUB X31, X31, 0x50

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+600]
	007 Move X1, [X8+608]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Object GetValue(System.Object obj)

Disassembly:
	0x032A9284 STP X30, X25, [X31 + 0x10]
	0x032A9288 STP X24, X23, [X31 + 0x20]
	0x032A928C STP X22, X21, [X31 + 0x30]
	0x032A9290 STP X20, X19, [X31 + 0x40]
	0x032A9294 ADRP X25, 0x1133000
	0x032A9298 ADRP X24, 0xE4B000
	0x032A929C ADRP X22, 0xE7B000
	0x032A92A0 ADRP X23, 0xE4A000
	0x032A92A4 LDRB W8, [X25 + 0x7B5]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X3, [X8+712]
	007 Move X2, [X8+720]
	008 Move X30, [X31+16]
	009 CallNoReturn X3
	010 Call 0x1C17F20

Method: System.Object InternalGetValue(System.Object obj)

Disassembly:
	0x032A33CC ADD X8, X9, X8, 0x3, LSL
	0x032A33D0 STR X10, [X8 + 0x20]
	0x032A33D4 LDR W8, [X22 + 0x18]
	0x032A33D8 ADD X24, X24, 0x1
	0x032A33DC CMP X24, W8, SXTW
	0x032A33E0 B.LT 0x32A333C
	0x032A33E4 LDP X20, X19, [X31 + 0x50]
	0x032A33E8 LDP X22, X21, [X31 + 0x40]
	0x032A33EC LDP X24, X23, [X31 + 0x30]
	0x032A33F0 LDP X26, X25, [X31 + 0x20]
	0x032A33F4 LDP X30, X27, [X31 + 0x10]
	0x032A33F8 ADD X31, X31, 0x60
	0x032A33FC RET
	0x032A3400 BL 0x1C16F28
	0x032A3404 BL 0x1C16F20
	0x032A3408 BL 0x1C16F44
	0x032A340C MOV X1, X31
	0x032A3410 BL 0x1C16DEC
	0x032A3414 ADRP X0, 0xE81000
	0x032A3418 LDR X0, [X0 + 0xCC0]
	0x032A341C BL 0x1C16D08
	0x032A3420 MOV X1, X31
	0x032A3424 BL 0x33BDD84
	0x032A3428 MOV X19, X0
	0x032A342C ADRP X0, 0xE7A000
	0x032A3430 LDR X0, [X0 + 0x2E0]
	0x032A3434 BL 0x1C16D08
	0x032A3438 BL 0x1C16F10
	0x032A343C MOV X1, X19
	0x032A3440 MOV X20, X0
	0x032A3444 BL 0x329F100
	0x032A3448 ADRP X0, 0xE81000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, [X0+16]
	006 Move X21, X0
	007 Move X19, X1
	008 Move X1, X31
	009 Move X0, X20
	010 Move X2, X31
	011 Call FieldInfo.op_Inequality, X0, X1
	012 Move TEMP, X0
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfNotEqual {28}
	016 Compare X20, 0
	017 JumpIfEqual {40}
	018 Move X8, [X20]
	019 Move X0, X20
	020 Move X1, X19
	021 Move X9, [X8+840]
	022 Move X2, [X8+848]
	023 NotImplemented "Instruction BLR not yet implemented."
	024 Move X8, [X20]
	025 Move X0, X20
	026 Move X3, [X8+808]
	027 Move X2, [X8+816]
	028 Move X0, [X21+16]
	029 Compare X0, 0
	030 JumpIfEqual {40}
	031 Move X8, [X0]
	032 Move X3, [X8+712]
	033 Move X2, [X8+720]
	034 Move X1, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 CallNoReturn X3
	040 Call 0x1C17F20

Method: System.Void SetValue(System.Object obj, System.Object value, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Globalization.CultureInfo culture)

Disassembly:
	0x032A92A8 LDR X24, [X24 + 0x9F0]
	0x032A92AC LDR X22, [X22 + 0xF38]
	0x032A92B0 LDR X23, [X23 + 0x6C0]
	0x032A92B4 MOV X21, X2
	0x032A92B8 MOV X19, X1
	0x032A92BC MOV X20, X0
	0x032A92C0 TBNZ X8, 0x0, 0x32A92F0
	0x032A92C4 ADRP X0, 0xE7B000
	0x032A92C8 LDR X0, [X0 + 0xF38]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X7, [X8+744]
	007 Move X6, [X8+752]
	008 Move X30, [X31+16]
	009 CallNoReturn X7
	010 Call 0x1C17F20

Method: System.Void InternalSetValue(System.Object obj, System.Object value, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Globalization.CultureInfo culture)

Disassembly:
	0x032A2CC0 LDR X8, [X8 + 0xC8]
	0x032A2CC4 ADD X8, X8, X9, 0x3, LSL
	0x032A2CC8 LDUR X8, [X8 - 0x8]
	0x032A2CCC CMP X8, X1
	0x032A2CD0 B.NE 0x32A2CE4
	0x032A2CD4 MOV X0, X19
	0x032A2CD8 LDP X20, X19, [X31 + 0x10]
	0x032A2CDC LDP X30, X21, [X31], #0x20
	0x032A2CE0 B 0x32A0A58
	0x032A2CE4 MOV X0, X19
	0x032A2CE8 BL 0x1C171E0
	0x032A2CEC STR X30, [X31 - 0x40]!
	0x032A2CF0 STP X24, X23, [X31 + 0x10]
	0x032A2CF4 STP X22, X21, [X31 + 0x20]
	0x032A2CF8 STP X20, X19, [X31 + 0x30]
	0x032A2CFC ADRP X24, 0x113A000
	0x032A2D00 LDRB W8, [X24 + 0x778]
	0x032A2D04 MOV X19, X4
	0x032A2D08 MOV X20, X3
	0x032A2D0C MOV X21, X2
	0x032A2D10 MOV X22, X1
	0x032A2D14 MOV X23, X0
	0x032A2D18 TBNZ X8, 0x0, 0x32A2D30
	0x032A2D1C ADRP X0, 0xE82000
	0x032A2D20 LDR X0, [X0 + 0xCA0]
	0x032A2D24 BL 0x1C16CF4
	0x032A2D28 MOVZ W8, 0x1
	0x032A2D2C STRB W8, [X24 + 0x778]
	0x032A2D30 LDR X23, [X23 + 0x10]
	0x032A2D34 CBZ X23, 0x32A2DB8
	0x032A2D38 ADRP X10, 0xE82000
	0x032A2D3C LDR X8, [X23]
	0x032A2D40 LDR X10, [X10 + 0xCA0]
	0x032A2D44 LDRH W9, [X8 + 0x12E]
	0x032A2D48 LDR X1, [X10]
	0x032A2D4C CBZ X9, 0x32A2D70
	0x032A2D50 LDR X10, [X8 + 0xB0]
	0x032A2D54 ADD X10, X10, 0x8
	0x032A2D58 LDUR X11, [X10 - 0x8]
	0x032A2D5C CMP X11, X1
	0x032A2D60 B.EQ 0x32A2D80
	0x032A2D64 SUBS X9, X9, 0x1
	0x032A2D68 ADD X10, X10, 0x10
	0x032A2D6C B.NE 0x32A2D58

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, [X0+16]
	010 Move X22, X2
	011 Move X25, X0
	012 Move X23, X1
	013 Move X0, X24
	014 Move X1, X31
	015 Move X2, X31
	016 Move X19, X5
	017 Move X20, X4
	018 Move W21, W3
	019 Call FieldInfo.op_Inequality, X0, X1
	020 Move TEMP, X0
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfNotEqual {36}
	024 Compare X24, 0
	025 JumpIfEqual {56}
	026 Move X8, [X24]
	027 Move X0, X24
	028 Move X1, X23
	029 Move X9, [X8+840]
	030 Move X2, [X8+848]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X8, [X24]
	033 Move X0, X24
	034 Move X7, [X8+824]
	035 Move X6, [X8+832]
	036 Move X0, [X25+16]
	037 Compare X0, 0
	038 JumpIfEqual {56}
	039 Move X8, [X0]
	040 Move X7, [X8+744]
	041 Move X6, [X8+752]
	042 Move X1, X23
	043 Move X2, X22
	044 Move W3, W21
	045 Move X4, X20
	046 Move X5, X19
	047 Move X20, [X31+48]
	048 Move X19, [X31+56]
	049 Move X22, [X31+32]
	050 Move X21, [X31+40]
	051 Move X24, [X31+16]
	052 Move X23, [X31+24]
	053 Move X30, [X31+64]
	054 Move X25, [X31+72]
	055 CallNoReturn X7
	056 Call 0x1C17F20

Method: System.Reflection.RuntimeFieldInfo get_FieldInfo()

Disassembly:
	0x032A92CC BL 0x1C16CF4
	0x032A92D0 ADRP X0, 0xE4B000

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.RuntimeFieldHandle get_FieldHandle()

Disassembly:
	0x032A92D4 LDR X0, [X0 + 0x9F0]
	0x032A92D8 BL 0x1C16CF4
	0x032A92DC ADRP X0, 0xE4A000
	0x032A92E0 LDR X0, [X0 + 0x6C0]
	0x032A92E4 BL 0x1C16CF4
	0x032A92E8 MOVZ W8, 0x1
	0x032A92EC STRB W8, [X25 + 0x7B5]
	0x032A92F0 LDR X0, [X24]
	0x032A92F4 ADD X1, X31, 0x8

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+696]
	007 Move X1, [X8+704]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Reflection.FieldAttributes get_Attributes()

Disassembly:
	0x032A92F8 STR X21, [X31 + 0x8]
	0x032A92FC BL 0x1C16E04
	0x032A9300 LDR X8, [X23]
	0x032A9304 LDR X22, [X22]
	0x032A9308 MOV X21, X0
	0x032A930C LDR W9, [X8 + 0xE0]
	0x032A9310 CBNZ W9, 0x32A931C
	0x032A9314 MOV X0, X8
	0x032A9318 BL 0x1C16DFC

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+584]
	007 Move X1, [X8+592]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

