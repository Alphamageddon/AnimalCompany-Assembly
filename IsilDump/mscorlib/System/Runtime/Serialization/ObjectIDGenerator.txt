Type: System.Runtime.Serialization.ObjectIDGenerator

Method: System.Void .ctor()

Disassembly:
	0x032A3E98 MOV X1, X31
	0x032A3E9C BL 0x338C698
	0x032A3EA0 MOV X1, X0
	0x032A3EA4 MOV X0, X19
	0x032A3EA8 LDP X20, X19, [X31 + 0x10]
	0x032A3EAC MOV X2, X31
	0x032A3EB0 LDR X30, [X31], #0x20
	0x032A3EB4 B 0x3395F0C
	0x032A3EB8 LDP X20, X19, [X31 + 0x10]
	0x032A3EBC MOVZ W0, 0x1
	0x032A3EC0 LDR X30, [X31], #0x20
	0x032A3EC4 RET
	0x032A3EC8 STR X30, [X31 - 0x30]!
	0x032A3ECC STP X22, X21, [X31 + 0x10]
	0x032A3ED0 STP X20, X19, [X31 + 0x20]
	0x032A3ED4 ADRP X22, 0x1139000
	0x032A3ED8 LDRB W8, [X22 + 0x799]
	0x032A3EDC MOV X19, X2
	0x032A3EE0 MOV X21, X1
	0x032A3EE4 MOV X20, X0
	0x032A3EE8 TBNZ X8, 0x0, 0x32A3F00
	0x032A3EEC ADRP X0, 0xE81000
	0x032A3EF0 LDR X0, [X0 + 0xD38]
	0x032A3EF4 BL 0x1C16CF4
	0x032A3EF8 MOVZ W8, 0x1
	0x032A3EFC STRB W8, [X22 + 0x799]
	0x032A3F00 STR X21, [X20 + 0x10]
	0x032A3F04 CBZ X19, 0x32A3FB4
	0x032A3F08 LDR X8, [X19 + 0x28]
	0x032A3F0C CMP X8, X21
	0x032A3F10 B.EQ 0x32A3F1C
	0x032A3F14 CBNZ X21, 0x32A3F28
	0x032A3F18 B 0x32A3F80
	0x032A3F1C MOVZ W8, 0x1
	0x032A3F20 STRB W8, [X20 + 0x68]
	0x032A3F24 CBZ X21, 0x32A3F80
	0x032A3F28 ADRP X8, 0xE81000
	0x032A3F2C LDR X8, [X8 + 0xD38]
	0x032A3F30 LDR X9, [X21]
	0x032A3F34 LDR X1, [X8]
	0x032A3F38 LDRB W10, [X9 + 0x130]
	0x032A3F3C LDRB W8, [X1 + 0x130]
	0x032A3F40 CMP W10, W8
	0x032A3F44 B.CC 0x32A3F80
	0x032A3F48 LDR X10, [X9 + 0xC8]
	0x032A3F4C SUB X9, X8, 0x1
	0x032A3F50 LDR X10, [X10, X9, LSL #3]
	0x032A3F54 CMP X10, X1
	0x032A3F58 B.NE 0x32A3F80
	0x032A3F5C STR X21, [X20 + 0x60]
	0x032A3F60 LDR X10, [X21]
	0x032A3F64 LDRB W11, [X10 + 0x130]
	0x032A3F68 CMP W11, W8
	0x032A3F6C B.CC 0x32A3FB8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x113A000
	006 Move X20, 0xE82000
	007 Move W8, [X21+1914]
	008 Move X20, [X20+3240]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xE82000
	015 Move X0, [X0+2104]
	016 Call 0x1C17CF4
	017 Move X0, 0xE82000
	018 Move X0, [X0+3240]
	019 Call 0x1C17CF4
	020 Move X0, 0xE51000
	021 Move X0, [X0+2512]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+1914], W8
	025 Move X0, X19
	026 Move X1, X31
	027 Call Object..ctor, X0
	028 Move W8, 1
	029 Move [X19+16], W8
	030 Move X0, [X20]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X20]
	036 Move X8, [X0+184]
	037 Move X8, [X8]
	038 Compare X8, 0
	039 JumpIfEqual {67}
	040 Move W9, [X8+24]
	041 Compare W9, 0
	042 JumpIfEqual {68}
	043 Move W8, [X8+32]
	044 Move X9, 0xE82000
	045 Move X9, [X9+2104]
	046 Move X20, 0xE51000
	047 Move [X19+20], W8
	048 Move W1, W8
	049 ShiftRight W1, 30
	050 And W1, W1, 0x1FFFFFFF
	051 Move X0, [X9]
	052 Move X20, [X20+2512]
	053 Call 0x1C17D6C
	054 Move [X19+24], X0
	055 Move W8, [X19+20]
	056 Move X0, [X20]
	057 Move W1, W8
	058 ShiftRight W1, 30
	059 And W1, W1, 0x1FFFFFFF
	060 Call 0x1C17D6C
	061 Move [X19+32], X0
	062 Move X20, [X31+16]
	063 Move X19, [X31+24]
	064 Move X30, [X31+32]
	065 Move X21, [X31+40]
	066 Return 
	067 Call 0x1C17F20
	068 Call 0x1C17F28

Method: System.Int32 FindElement(System.Object obj, out System.Boolean found)

Disassembly:
	0x032A3F70 LDR X8, [X10 + 0xC8]
	0x032A3F74 LDR X8, [X8, X9, LSL #3]
	0x032A3F78 CMP X8, X1
	0x032A3F7C B.NE 0x32A3FB8
	0x032A3F80 LDRB W8, [X20 + 0x54]
	0x032A3F84 CBZ W8, 0x32A3FA4
	0x032A3F88 MOV X0, X19
	0x032A3F8C MOV X1, X20
	0x032A3F90 LDP X20, X19, [X31 + 0x20]
	0x032A3F94 LDP X22, X21, [X31 + 0x10]
	0x032A3F98 MOVZ W2, 0x1
	0x032A3F9C LDR X30, [X31], #0x30
	0x032A3FA0 B 0x32A4C04
	0x032A3FA4 LDP X20, X19, [X31 + 0x20]
	0x032A3FA8 LDP X22, X21, [X31 + 0x10]
	0x032A3FAC LDR X30, [X31], #0x30
	0x032A3FB0 RET
	0x032A3FB4 BL 0x1C16F20
	0x032A3FB8 MOV X0, X21
	0x032A3FBC BL 0x1C171E0
	0x032A3FC0 STP X30, X21, [X31 - 0x20]!
	0x032A3FC4 STP X20, X19, [X31 + 0x10]
	0x032A3FC8 ADRP X21, 0x1139000
	0x032A3FCC ADRP X20, 0xE81000
	0x032A3FD0 LDRB W8, [X21 + 0x797]
	0x032A3FD4 LDR X20, [X20 + 0xD40]
	0x032A3FD8 MOV X19, X0
	0x032A3FDC TBNZ X8, 0x0, 0x32A4000
	0x032A3FE0 ADRP X0, 0xE81000
	0x032A3FE4 LDR X0, [X0 + 0xD40]
	0x032A3FE8 BL 0x1C16CF4
	0x032A3FEC ADRP X0, 0xE80000
	0x032A3FF0 LDR X0, [X0 + 0xC30]
	0x032A3FF4 BL 0x1C16CF4
	0x032A3FF8 MOVZ W8, 0x1
	0x032A3FFC STRB W8, [X21 + 0x797]
	0x032A4000 LDR X0, [X19 + 0x10]
	0x032A4004 LDR X1, [X20]
	0x032A4008 BL 0x1C16E00
	0x032A400C LDR W8, [X19 + 0x50]
	0x032A4010 LDR X9, [X19 + 0x30]
	0x032A4014 CMP X0, 0x0
	0x032A4018 CSET W10, NE
	0x032A401C AND W8, W8, 0xFFFFFFF9
	0x032A4020 ORR W8, W8, W10, 0x0
	0x032A4024 STR W8, [X19 + 0x50]
	0x032A4028 CBZ X9, 0x32A4034
	0x032A402C ORR W8, W8, 0x4
	0x032A4030 B 0x32A4054

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X1
	006 Move X21, X0
	007 Move X0, X1
	008 Move X1, X31
	009 Move X19, X2
	010 Call RuntimeHelpers.GetHashCode, X0
	011 Move W9, [X21+20]
	012 And W8, W0, 0x7FFFFFFF
	013 Subtract W10, W9, 2
	014 NotImplemented "Instruction SDIV not yet implemented."
	015 NotImplemented "Instruction MSUB not yet implemented."
	016 Add W10, W8, 1
	017 Or W11, W31, 0x7FFFFFFC
	018 And W8, W0, 0x7FFFFFFF
	019 NotImplemented "Instruction SDIV not yet implemented."
	020 NotImplemented "Instruction MSUB not yet implemented."
	021 Move W8, W8
	022 ShiftRight W8, 30
	023 And W8, W8, 0x1FFFFFFF
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X14, [X21+32]
	026 Compare X14, 0
	027 JumpIfEqual {51}
	028 Move W12, [X14+24]
	029 Add X14, X14, W8
	030 Add W13, W8, 4
	031 Add X14, X14, 32
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X15, [X14]
	034 Compare X15, 0
	035 JumpIfEqual {41}
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Add W8, W8, 1
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Add X14, X14, 8
	040 Add W0, W10, W0
	041 Move W9, W31
	042 Move W9, 1
	043 Move [X19], W9
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move W0, W8
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Return X0
	050 Call 0x1C17F28
	051 Call 0x1C17F20

Method: System.Int64 GetId(System.Object obj, out System.Boolean firstTime)

Disassembly:
	0x032A4034 ADRP X8, 0xE7F000
	0x032A4038 LDR X0, [X19 + 0x10]
	0x032A403C LDR X8, [X8 + 0xC30]
	0x032A4040 LDR X1, [X8]
	0x032A4044 BL 0x1C16E00
	0x032A4048 CBZ X0, 0x32A4058
	0x032A404C LDR W8, [X19 + 0x50]
	0x032A4050 ORR W8, W8, 0x2
	0x032A4054 STR W8, [X19 + 0x50]
	0x032A4058 LDR X8, [X19 + 0x58]
	0x032A405C CBZ X8, 0x32A406C
	0x032A4060 LDR W8, [X19 + 0x50]
	0x032A4064 ORR W8, W8, 0x8
	0x032A4068 STR W8, [X19 + 0x50]
	0x032A406C LDP X20, X19, [X31 + 0x10]
	0x032A4070 LDP X30, X21, [X31], #0x20
	0x032A4074 RET
	0x032A4078 STP X30, X23, [X31 - 0x30]!
	0x032A407C STP X22, X21, [X31 + 0x10]
	0x032A4080 STP X20, X19, [X31 + 0x20]
	0x032A4084 ADRP X19, 0x1138000
	0x032A4088 LDRB W8, [X19 + 0x788]
	0x032A408C MOV X20, X4
	0x032A4090 MOV X21, X3
	0x032A4094 MOV X22, X2
	0x032A4098 MOV X23, X1
	0x032A409C TBNZ X8, 0x0, 0x32A40C0
	0x032A40A0 ADRP X0, 0xE7F000
	0x032A40A4 LDR X0, [X0 + 0xC30]
	0x032A40A8 BL 0x1C16CF4
	0x032A40AC ADRP X0, 0xE78000
	0x032A40B0 LDR X0, [X0 + 0x4E8]
	0x032A40B4 BL 0x1C16CF4
	0x032A40B8 MOVZ W8, 0x1
	0x032A40BC STRB W8, [X19 + 0x788]
	0x032A40C0 CBZ X23, 0x32A415C
	0x032A40C4 ADRP X8, 0xE7F000
	0x032A40C8 LDR X8, [X8 + 0xC30]
	0x032A40CC MOV X0, X23
	0x032A40D0 LDR X1, [X8]
	0x032A40D4 BL 0x1C16E00
	0x032A40D8 CBZ X0, 0x32A41A4
	0x032A40DC MOV X0, X23
	0x032A40E0 MOV X1, X31
	0x032A40E4 BL 0x33BE520
	0x032A40E8 MOV X19, X0
	0x032A40EC CBZ X0, 0x32A4124
	0x032A40F0 ADRP X9, 0xE78000
	0x032A40F4 LDR X9, [X9 + 0x4E8]
	0x032A40F8 LDR X8, [X19]
	0x032A40FC LDR X1, [X9]
	0x032A4100 LDRB W10, [X8 + 0x130]
	0x032A4104 LDRB W9, [X1 + 0x130]
	0x032A4108 CMP W10, W9
	0x032A410C B.CC 0x32A4154
	0x032A4110 LDR X8, [X8 + 0xC8]
	0x032A4114 ADD X8, X8, X9, 0x3, LSL
	0x032A4118 LDUR X8, [X8 - 0x8]
	0x032A411C CMP X8, X1
	0x032A4120 B.NE 0x32A4154
	0x032A4124 MOV X0, X19
	0x032A4128 BL 0x32A5EEC
	0x032A412C CBZ X0, 0x32A41F4
	0x032A4130 MOV X2, X22
	0x032A4134 MOV X3, X21
	0x032A4138 MOV X4, X20
	0x032A413C LDP X20, X19, [X31 + 0x20]
	0x032A4140 LDP X22, X21, [X31 + 0x10]
	0x032A4144 MOV X1, X23
	0x032A4148 MOV X5, X31
	0x032A414C LDP X30, X23, [X31], #0x30
	0x032A4150 B 0x32DC8B8
	0x032A4154 MOV X0, X19
	0x032A4158 BL 0x1C171E0
	0x032A415C ADRP X0, 0xE54000
	0x032A4160 LDR X0, [X0 + 0x528]
	0x032A4164 BL 0x1C16D08
	0x032A4168 BL 0x1C16F10
	0x032A416C MOV X19, X0
	0x032A4170 ADRP X0, 0xE5A000
	0x032A4174 LDR X0, [X0 + 0x8A8]
	0x032A4178 BL 0x1C16D08
	0x032A417C MOV X1, X0
	0x032A4180 MOV X0, X19
	0x032A4184 MOV X2, X31
	0x032A4188 BL 0x330E100
	0x032A418C ADRP X0, 0xE80000
	0x032A4190 LDR X0, [X0 + 0xD48]
	0x032A4194 BL 0x1C16D08
	0x032A4198 MOV X1, X0
	0x032A419C MOV X0, X19
	0x032A41A0 BL 0x1C16DEC
	0x032A41A4 ADRP X0, 0xE80000
	0x032A41A8 LDR X0, [X0 + 0xD50]
	0x032A41AC BL 0x1C16D08
	0x032A41B0 MOV X1, X31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move [X31+12], W31
	009 Compare X1, 0
	010 JumpIfEqual {77}
	011 Move X19, X2
	012 Add X2, X31, 12
	013 Move X22, X1
	014 Move X20, X0
	015 Call ObjectIDGenerator.FindElement, X0, X1, X2
	016 Move W23, [X31+12]
	017 Move W21, W0
	018 Compare W23, 0
	019 JumpIfEqual {27}
	020 Move X8, [X20+24]
	021 Compare X8, 0
	022 JumpIfEqual {76}
	023 Move W9, [X8+24]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Add X8, X8, W21
	026 Move X22, [X8+32]
	027 Move X24, [X20+32]
	028 Compare X24, 0
	029 JumpIfEqual {76}
	030 Move X8, [X24]
	031 Move X0, X22
	032 Move X1, [X8+64]
	033 Call 0x1C17E00
	034 Compare X0, 0
	035 JumpIfEqual {102}
	036 Move W8, [X24+24]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X9, W21
	039 Add X8, X24, X9
	040 Move [X8+32], X22
	041 NotImplemented "Instruction LDRSW not yet implemented."
	042 Move X10, [X20+24]
	043 Add W8, W22, 1
	044 Move [X20+16], W8
	045 Compare X10, 0
	046 JumpIfEqual {76}
	047 Move W11, [X10+24]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Add X9, X10, X9
	050 Move [X9+32], X22
	051 Move W9, [X10+24]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move W9, [X20+20]
	054 Move W10, 1
	055 Move W11, W9
	056 ShiftRight W11, 30
	057 And W11, W11, 0x1FFFFFFF
	058 NotImplemented "Instruction BFM not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 NotImplemented "Instruction CSEL not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X0, X20
	063 Call ObjectIDGenerator.Rehash, X0
	064 Xor W8, W23, 1
	065 Move [X19], W8
	066 Move X0, X22
	067 Move X20, [X31+48]
	068 Move X19, [X31+56]
	069 Move X22, [X31+32]
	070 Move X21, [X31+40]
	071 Move X24, [X31+16]
	072 Move X23, [X31+24]
	073 Move X30, [X31+64]
	074 Return X0
	075 Call 0x1C17F28
	076 Call 0x1C17F20
	077 Move X0, 0xE81000
	078 Move X0, [X0+3248]
	079 Call 0x1C17D08
	080 Move X1, X31
	081 Call Environment.GetResourceString, X0
	082 Move X19, X0
	083 Move X0, 0xE55000
	084 Move X0, [X0+1320]
	085 Call 0x1C17D08
	086 Call 0x1C17F10
	087 Move X20, X0
	088 Move X0, 0xE5B000
	089 Move X0, [X0+2216]
	090 Call 0x1C17D08
	091 Move X1, X0
	092 Move X0, X20
	093 Move X2, X19
	094 Move X3, X31
	095 Call ArgumentNullException..ctor, X0, X1, X2
	096 Move X0, 0xE81000
	097 Move X0, [X0+3256]
	098 Call 0x1C17D08
	099 Move X1, X0
	100 Move X0, X20
	101 Call 0x1C17DEC
	102 Call 0x1C17F44
	103 Move X1, X31
	104 Call 0x1C17DEC

Method: System.Int64 HasId(System.Object obj, out System.Boolean firstTime)

Disassembly:
	0x032A4460 LDR W2, [X23 + 0x18]
	0x032A4464 MOV X21, X0
	0x032A4468 MOV X0, X23
	0x032A446C MOV X1, X21
	0x032A4470 MOV X3, X31
	0x032A4474 BL 0x33A0C7C
	0x032A4478 MOV X23, X21
	0x032A447C LDR X26, [X22 + 0x58]
	0x032A4480 CBZ X26, 0x32A4880
	0x032A4484 LDR X0, [X26 + 0x18]
	0x032A4488 LDR X21, [X22 + 0x10]
	0x032A448C MOV X1, X31
	0x032A4490 MOV X2, X31
	0x032A4494 BL 0x32CCED4
	0x032A4498 TBZ X0, 0x0, 0x32A45B8
	0x032A449C LDP X1, X27, [X26 + 0x10]
	0x032A44A0 MOV X0, X25
	0x032A44A4 BL 0x32A36C8
	0x032A44A8 CBZ X0, 0x32A4880
	0x032A44AC LDR X8, [X0 + 0x10]
	0x032A44B0 MOV X26, X0
	0x032A44B4 CBZ X8, 0x32A4424
	0x032A44B8 CBZ X27, 0x32A4880
	0x032A44BC LDR X8, [X27]
	0x032A44C0 MOV X0, X27
	0x032A44C4 LDR X9, [X8 + 0x258]
	0x032A44C8 LDR X1, [X8 + 0x260]
	0x032A44CC BLR X9
	0x032A44D0 MOV X1, X31
	0x032A44D4 BL 0x3380420
	0x032A44D8 LDR X8, [X29]
	0x032A44DC MOV X22, X0
	0x032A44E0 LDR W9, [X8 + 0xE0]
	0x032A44E4 CBNZ W9, 0x32A44F0
	0x032A44E8 MOV X0, X8
	0x032A44EC BL 0x1C16DFC
	0x032A44F0 MOV X0, X22
	0x032A44F4 MOV X1, X31
	0x032A44F8 MOV X2, X31
	0x032A44FC BL 0x3395F0C
	0x032A4500 TBZ X0, 0x0, 0x32A4570
	0x032A4504 LDR X8, [X27]
	0x032A4508 MOV X0, X27
	0x032A450C LDR X9, [X8 + 0x258]
	0x032A4510 LDR X1, [X8 + 0x260]
	0x032A4514 BLR X9
	0x032A4518 CBZ X0, 0x32A4880
	0x032A451C LDR X8, [X0]
	0x032A4520 LDR X1, [X19]
	0x032A4524 MOVZ W2, 0x24
	0x032A4528 LDR X9, [X8 + 0x678]
	0x032A452C LDR X3, [X8 + 0x680]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move [X31+12], W31
	005 Compare X1, 0
	006 JumpIfEqual {29}
	007 Move X19, X2
	008 Add X2, X31, 12
	009 Move X20, X0
	010 Call ObjectIDGenerator.FindElement, X0, X1, X2
	011 Move W8, [X31+12]
	012 Compare W8, 0
	013 JumpIfEqual {22}
	014 Move [X19], W31
	015 Move X8, [X20+24]
	016 Compare X8, 0
	017 JumpIfEqual {54}
	018 Move W9, [X8+24]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Add X8, X8, W0
	021 Move X0, [X8+32]
	022 Move X0, X31
	023 Move W8, 1
	024 Move [X19], W8
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return X0
	029 Move X0, 0xE81000
	030 Move X0, [X0+3248]
	031 Call 0x1C17D08
	032 Move X1, X31
	033 Call Environment.GetResourceString, X0
	034 Move X19, X0
	035 Move X0, 0xE55000
	036 Move X0, [X0+1320]
	037 Call 0x1C17D08
	038 Call 0x1C17F10
	039 Move X20, X0
	040 Move X0, 0xE5B000
	041 Move X0, [X0+2216]
	042 Call 0x1C17D08
	043 Move X1, X0
	044 Move X0, X20
	045 Move X2, X19
	046 Move X3, X31
	047 Call ArgumentNullException..ctor, X0, X1, X2
	048 Move X0, 0xE81000
	049 Move X0, [X0+3280]
	050 Call 0x1C17D08
	051 Move X1, X0
	052 Move X0, X20
	053 Call 0x1C17DEC
	054 Call 0x1C17F20
	055 Call 0x1C17F28

Method: System.Void Rehash()

Disassembly:
	0x032A41B4 BL 0x33BDD84
	0x032A41B8 MOV X19, X0
	0x032A41BC ADRP X0, 0xE57000
	0x032A41C0 LDR X0, [X0 + 0x578]
	0x032A41C4 BL 0x1C16D08
	0x032A41C8 BL 0x1C16F10
	0x032A41CC MOV X1, X19
	0x032A41D0 MOV X2, X31
	0x032A41D4 MOV X20, X0
	0x032A41D8 BL 0x3314A68
	0x032A41DC ADRP X0, 0xE80000
	0x032A41E0 LDR X0, [X0 + 0xD48]
	0x032A41E4 BL 0x1C16D08
	0x032A41E8 MOV X1, X0
	0x032A41EC MOV X0, X20
	0x032A41F0 BL 0x1C16DEC
	0x032A41F4 BL 0x1C16F20
	0x032A41F8 CMP W1, 0x1
	0x032A41FC MOV X20, X0
	0x032A4200 B.NE 0x32A42E8
	0x032A4204 MOV X0, X20
	0x032A4208 BL 0x3EB1AD0
	0x032A420C MOV X20, X0
	0x032A4210 ADRP X0, 0xE4F000
	0x032A4214 LDR X0, [X0 + 0x7D0]
	0x032A4218 BL 0x1C16D08
	0x032A421C LDR X8, [X20]
	0x032A4220 LDR X1, [X8]
	0x032A4224 BL 0x1C17270
	0x032A4228 TBZ X0, 0x0, 0x32A42C0
	0x032A422C LDR X20, [X20]
	0x032A4230 BL 0x3EB1AE0
	0x032A4234 ADRP X0, 0xE4F000
	0x032A4238 LDR X0, [X0 + 0x9D0]
	0x032A423C BL 0x1C16D08
	0x032A4240 MOVZ W1, 0x1
	0x032A4244 BL 0x1C16D6C
	0x032A4248 MOV X21, X0
	0x032A424C BL 0x19903C0
	0x032A4250 MOV X0, X21
	0x032A4254 MOV X1, X19
	0x032A4258 BL 0x19980B4
	0x032A425C MOV X0, X21
	0x032A4260 MOV X1, X31
	0x032A4264 MOV X2, X19
	0x032A4268 BL 0x1993444
	0x032A426C ADRP X0, 0xE80000
	0x032A4270 LDR X0, [X0 + 0xD58]
	0x032A4274 BL 0x1C16D08
	0x032A4278 MOV X1, X21
	0x032A427C MOV X2, X31
	0x032A4280 BL 0x33BFB40
	0x032A4284 MOV X19, X0
	0x032A4288 ADRP X0, 0xE79000
	0x032A428C LDR X0, [X0 + 0x2E0]
	0x032A4290 BL 0x1C16D08
	0x032A4294 BL 0x1C16F10
	0x032A4298 MOV X1, X19
	0x032A429C MOV X2, X20
	0x032A42A0 MOV X21, X0
	0x032A42A4 BL 0x329F124
	0x032A42A8 ADRP X0, 0xE80000
	0x032A42AC LDR X0, [X0 + 0xD48]
	0x032A42B0 BL 0x1C16D08
	0x032A42B4 MOV X1, X0
	0x032A42B8 MOV X0, X21
	0x032A42BC BL 0x1C16DEC
	0x032A42C0 MOVZ W0, 0x8
	0x032A42C4 BL 0x3EB1AF0
	0x032A42C8 LDR X8, [X20]
	0x032A42CC STR X8, [X0]
	0x032A42D0 ADRP X1, 0xC10000
	0x032A42D4 ADD X1, X1, 0xE58
	0x032A42D8 MOV X2, X31
	0x032A42DC BL 0x3EB1B00
	0x032A42E0 MOV X20, X0
	0x032A42E4 BL 0x3EB1AE0
	0x032A42E8 MOV X0, X20
	0x032A42EC BL 0x1D2C690
	0x032A42F0 BL 0x1990590
	0x032A42F4 LDR W8, [X0 + 0x50]
	0x032A42F8 ANDS W31, W1, 0x1
	0x032A42FC MOVZ W9, 0x4000
	0x032A4300 CSEL W9, W31, W9, NE
	0x032A4304 AND W8, W8, 0xFFFFBFFF
	0x032A4308 ORR W8, W8, W9, 0x0
	0x032A430C STR W8, [X0 + 0x50]
	0x032A4310 RET
	0x032A4314 LDRB W8, [X0 + 0x50]
	0x032A4318 UBFM W0, W8, 0x3, 0x3
	0x032A431C RET
	0x032A4320 LDRB W8, [X0 + 0x51]
	0x032A4324 TBNZ X8, 0x7, 0x32A4348
	0x032A4328 LDR X8, [X0 + 0x10]
	0x032A432C CBZ X8, 0x32A4350
	0x032A4330 LDR X8, [X0 + 0x40]
	0x032A4334 CBZ X8, 0x32A4348
	0x032A4338 LDR W8, [X8 + 0x18]
	0x032A433C CMP W8, 0x0
	0x032A4340 CSET W0, EQ
	0x032A4344 RET
	0x032A4348 MOVZ W0, 0x1
	0x032A434C RET
	0x032A4350 MOV W0, W31
	0x032A4354 RET
	0x032A4358 SUB X31, X31, 0x100
	0x032A435C STP X29, X30, [X31 + 0xA0]
	0x032A4360 STP X28, X27, [X31 + 0xB0]
	0x032A4364 STP X26, X25, [X31 + 0xC0]
	0x032A4368 STP X24, X23, [X31 + 0xD0]
	0x032A436C STP X22, X21, [X31 + 0xE0]
	0x032A4370 STP X20, X19, [X31 + 0xF0]
	0x032A4374 ADRP X19, 0x1138000
	0x032A4378 ADRP X28, 0xE80000
	0x032A437C LDRB W8, [X19 + 0x784]
	0x032A4380 LDR X28, [X28 + 0xB80]
	0x032A4384 MOV X20, X3
	0x032A4388 MOV X22, X2
	0x032A438C MOV X21, X1
	0x032A4390 MOV X25, X0
	0x032A4394 TBNZ X8, 0x0, 0x32A43F4
	0x032A4398 ADRP X0, 0xE80000
	0x032A439C LDR X0, [X0 + 0xB80]
	0x032A43A0 BL 0x1C16CF4
	0x032A43A4 ADRP X0, 0xE80000
	0x032A43A8 LDR X0, [X0 + 0xB70]
	0x032A43AC BL 0x1C16CF4
	0x032A43B0 ADRP X0, 0xE4F000
	0x032A43B4 LDR X0, [X0 + 0xEF0]
	0x032A43B8 BL 0x1C16CF4
	0x032A43BC ADRP X0, 0xE80000
	0x032A43C0 LDR X0, [X0 + 0xBB0]
	0x032A43C4 BL 0x1C16CF4
	0x032A43C8 ADRP X0, 0xE80000
	0x032A43CC LDR X0, [X0 + 0xBB8]
	0x032A43D0 BL 0x1C16CF4
	0x032A43D4 ADRP X0, 0xE4F000
	0x032A43D8 LDR X0, [X0 + 0x6C0]
	0x032A43DC BL 0x1C16CF4
	0x032A43E0 ADRP X0, 0xE59000
	0x032A43E4 LDR X0, [X0 + 0xEC8]
	0x032A43E8 BL 0x1C16CF4
	0x032A43EC MOVZ W8, 0x1
	0x032A43F0 STRB W8, [X19 + 0x784]
	0x032A43F4 LDR X0, [X28]
	0x032A43F8 MOVZ W1, 0x4
	0x032A43FC STP X31, X31, [X31 + 0x60]
	0x032A4400 STR X31, [X31 + 0x70]
	0x032A4404 BL 0x1C16D6C
	0x032A4408 CBZ X22, 0x32A4880
	0x032A440C LDRB W8, [X22 + 0x50]
	0x032A4410 MOV X23, X0
	0x032A4414 STP X20, X21, [X31 + 0x10]
	0x032A4418 TBNZ X8, 0x3, 0x32A442C
	0x032A441C LDR X21, [X22 + 0x10]
	0x032A4420 MOV W24, W31
	0x032A4424 MOV X20, X31
	0x032A4428 B 0x32A45D0
	0x032A442C ADRP X29, 0xE4F000
	0x032A4430 ADRP X19, 0xE59000
	0x032A4434 LDR X29, [X29 + 0x6C0]
	0x032A4438 LDR X19, [X19 + 0xEC8]
	0x032A443C MOV W24, W31
	0x032A4440 CBZ X23, 0x32A4880
	0x032A4444 LDR W8, [X23 + 0x18]
	0x032A4448 ADD W20, W24, 0x1
	0x032A444C CMP W20, W8
	0x032A4450 B.LT 0x32A447C
	0x032A4454 LDR X0, [X28]
	0x032A4458 UBFM W1, W8, 0x1F, 0x1E
	0x032A445C BL 0x1C16D6C

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0x1139000
	013 Move X20, 0xE81000
	014 Move W8, [X21+1915]
	015 Move X20, [X20+3240]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {32}
	021 Move X0, 0xE81000
	022 Move X0, [X0+2104]
	023 Call 0x1C17CF4
	024 Move X0, 0xE81000
	025 Move X0, [X0+3240]
	026 Call 0x1C17CF4
	027 Move X0, 0xE50000
	028 Move X0, [X0+2512]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+1915], W8
	032 Move [X31+12], W31
	033 Move X23, 0xE81000
	034 Move X21, 0xE50000
	035 Move W24, [X19+20]
	036 Move X0, [X20]
	037 Move X23, [X23+2104]
	038 Move X21, [X21+2512]
	039 Move X22, X31
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {45}
	043 Call 0x1C17DFC
	044 Move X0, [X20]
	045 Move X8, [X0+184]
	046 Move X8, [X8]
	047 Compare X8, 0
	048 JumpIfEqual {170}
	049 Move W8, [X8+24]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {56}
	054 Call 0x1C17DFC
	055 Move X0, [X20]
	056 Move X8, [X0+184]
	057 Move X8, [X8]
	058 Compare X8, 0
	059 JumpIfEqual {170}
	060 Move W9, [X8+24]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Add X8, X8, W22
	063 Move W8, [X8+32]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Add X22, X22, 1
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {71}
	069 Call 0x1C17DFC
	070 Move X0, [X20]
	071 Move X8, [X0+184]
	072 Move X8, [X8]
	073 Compare X8, 0
	074 JumpIfEqual {170}
	075 Move W9, [X8+24]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move W9, [X0+224]
	078 Compare W9, 0
	079 JumpIfNotEqual {86}
	080 Call 0x1C17DFC
	081 Move X8, [X20]
	082 Move X8, [X8+184]
	083 Move X8, [X8]
	084 Compare X8, 0
	085 JumpIfEqual {170}
	086 Move W9, [X8+24]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Add X8, X8, X22
	089 Move W8, [X8+32]
	090 Move [X19+20], W8
	091 Move X0, [X23]
	092 Move W1, W8
	093 ShiftRight W1, 30
	094 And W1, W1, 0x1FFFFFFF
	095 Call 0x1C17D6C
	096 Move W8, [X19+20]
	097 Move X20, X0
	098 Move X0, [X21]
	099 Move W1, W8
	100 ShiftRight W1, 30
	101 And W1, W1, 0x1FFFFFFF
	102 Call 0x1C17D6C
	103 Move X23, [X19+24]
	104 Move X22, [X19+32]
	105 Move [X19+24], X20
	106 Move [X19+32], X0
	107 Compare X22, 0
	108 JumpIfEqual {170}
	109 Move X8, [X22+24]
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move X24, X31
	112 And X8, X8, 0
	113 Add X25, X22, 32
	114 Add X26, X23, 32
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X1, [X25]
	117 Compare X1, 0
	118 JumpIfEqual {154}
	119 Add X2, X31, 12
	120 Move X0, X19
	121 Call ObjectIDGenerator.FindElement, X0, X1, X2
	122 Move W8, [X22+24]
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move X27, [X19+32]
	125 Compare X27, 0
	126 JumpIfEqual {170}
	127 Move X21, [X25]
	128 Move W20, W0
	129 Compare X21, 0
	130 JumpIfEqual {137}
	131 Move X8, [X27]
	132 Move X0, X21
	133 Move X1, [X8+64]
	134 Call 0x1C17E00
	135 Compare X0, 0
	136 JumpIfEqual {171}
	137 Move W8, [X27+24]
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X8, W20
	140 Add X9, X27, X8
	141 Move [X9+32], X21
	142 Compare X23, 0
	143 JumpIfEqual {170}
	144 Move W9, [X23+24]
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move X9, [X19+24]
	147 Compare X9, 0
	148 JumpIfEqual {170}
	149 Move W10, [X9+24]
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move X10, [X26]
	152 Add X8, X9, X8
	153 Move [X8+32], X10
	154 Move W8, [X22+24]
	155 Add X24, X24, 1
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Move X20, [X31+80]
	158 Move X19, [X31+88]
	159 Move X22, [X31+64]
	160 Move X21, [X31+72]
	161 Move X24, [X31+48]
	162 Move X23, [X31+56]
	163 Move X26, [X31+32]
	164 Move X25, [X31+40]
	165 Move X30, [X31+16]
	166 Move X27, [X31+24]
	167 Add X31, X31, 96
	168 Return 
	169 Call 0x1C17F28
	170 Call 0x1C17F20
	171 Call 0x1C17F44
	172 Move X1, X31
	173 Call 0x1C17DEC
	174 Move X0, 0xE81000
	175 Move X0, [X0+3264]
	176 Call 0x1C17D08
	177 Move X1, X31
	178 Call Environment.GetResourceString, X0
	179 Move X19, X0
	180 Move X0, 0xE7A000
	181 Move X0, [X0+736]
	182 Call 0x1C17D08
	183 Call 0x1C17F10
	184 Move X1, X19
	185 Move X20, X0
	186 Call SerializationException..ctor, X0, X1
	187 Move X0, 0xE81000
	188 Move X0, [X0+3272]
	189 Call 0x1C17D08
	190 Move X1, X0
	191 Move X0, X20
	192 Call 0x1C17DEC

Method: System.Void .cctor()

Disassembly:
	0x032A4530 BLR X9
	0x032A4534 CBZ X23, 0x32A4880
	0x032A4538 MOV X22, X0
	0x032A453C CBZ X0, 0x32A4554
	0x032A4540 LDR X8, [X23]
	0x032A4544 MOV X0, X22
	0x032A4548 LDR X1, [X8 + 0x40]
	0x032A454C BL 0x1C16E00
	0x032A4550 CBZ X0, 0x32A4888
	0x032A4554 LDR W8, [X23 + 0x18]
	0x032A4558 CMP W24, W8
	0x032A455C B.CS 0x32A4884
	0x032A4560 ADD X8, X23, W24, 0x3, SXTW
	0x032A4564 STR X22, [X8 + 0x20]
	0x032A4568 MOV W24, W20
	0x032A456C B 0x32A4574
	0x032A4570 CBZ X23, 0x32A4880
	0x032A4574 LDR X8, [X23]
	0x032A4578 MOV X0, X27
	0x032A457C LDR X1, [X8 + 0x40]
	0x032A4580 BL 0x1C16E00
	0x032A4584 CBZ X0, 0x32A4888
	0x032A4588 LDR W8, [X23 + 0x18]
	0x032A458C CMP W24, W8
	0x032A4590 B.CS 0x32A4884
	0x032A4594 ADD X8, X23, W24, 0x3, SXTW
	0x032A4598 STR X27, [X8 + 0x20]
	0x032A459C LDRB W8, [X26 + 0x50]
	0x032A45A0 ADD W24, W24, 0x1
	0x032A45A4 MOV X22, X26
	0x032A45A8 TBNZ X8, 0x3, 0x32A4440
	0x032A45AC MOV X20, X31
	0x032A45B0 MOV X22, X26
	0x032A45B4 B 0x32A45D0
	0x032A45B8 LDR X1, [X26 + 0x10]
	0x032A45BC MOV X0, X25
	0x032A45C0 BL 0x32A36C8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1139000
	007 Move X22, 0xE51000
	008 Move X19, 0xE81000
	009 Move X20, 0xE81000
	010 Move W8, [X21+1916]
	011 Move X22, [X22+3672]
	012 Move X19, [X19+3288]
	013 Move X20, [X20+3240]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xE51000
	019 Move X0, [X0+3672]
	020 Call 0x1C17CF4
	021 Move X0, 0xE81000
	022 Move X0, [X0+3240]
	023 Call 0x1C17CF4
	024 Move X0, 0xE81000
	025 Move X0, [X0+3288]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+1916], W8
	029 Move X0, [X22]
	030 Move W1, 21
	031 Call 0x1C17D6C
	032 Move X1, [X19]
	033 Move X2, X31
	034 Move X19, X0
	035 Call RuntimeHelpers.InitializeArray, X0, X1
	036 Move X8, [X20]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X8, [X8+184]
	040 Move [X8], X19
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X30, [X31+48]
	044 Return 

