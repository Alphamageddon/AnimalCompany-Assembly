Type: System.Runtime.Serialization.FormatterServices

Method: System.Void .cctor()

Disassembly:
	0x032A1728 BL 0x2D30578
	0x032A172C CBZ X19, 0x32A1814
	0x032A1730 ADRP X8, 0xE83000
	0x032A1734 LDR X8, [X8 + 0xBF0]
	0x032A1738 MOV X0, X19
	0x032A173C MOV X1, X23
	0x032A1740 MOV X2, X20
	0x032A1744 LDR X3, [X8]
	0x032A1748 LDP X20, X19, [X31 + 0x40]
	0x032A174C LDP X22, X21, [X31 + 0x30]
	0x032A1750 LDP X24, X23, [X31 + 0x20]
	0x032A1754 LDP X26, X25, [X31 + 0x10]
	0x032A1758 LDR X30, [X31], #0x50
	0x032A175C B 0x2986F9C
	0x032A1760 ADRP X0, 0xE52000
	0x032A1764 LDR X0, [X0 + 0x9D0]
	0x032A1768 BL 0x1C16D08
	0x032A176C MOVZ W1, 0x1
	0x032A1770 BL 0x1C16D6C
	0x032A1774 MOV X19, X0
	0x032A1778 MOV X0, X21
	0x032A177C BL 0x19903C0
	0x032A1780 LDR X20, [X21 + 0x10]
	0x032A1784 MOV X0, X20
	0x032A1788 BL 0x19903C0
	0x032A178C LDR X8, [X20]
	0x032A1790 MOV X0, X20
	0x032A1794 LDP X9, X1, [X8 + 0x168]
	0x032A1798 BLR X9
	0x032A179C MOV X20, X0
	0x032A17A0 MOV X0, X19
	0x032A17A4 BL 0x19903C0
	0x032A17A8 MOV X0, X19
	0x032A17AC MOV X1, X20
	0x032A17B0 BL 0x19980B4
	0x032A17B4 MOV X0, X19
	0x032A17B8 MOV X1, X31
	0x032A17BC MOV X2, X20
	0x032A17C0 BL 0x1993444
	0x032A17C4 ADRP X0, 0xE83000
	0x032A17C8 LDR X0, [X0 + 0xC08]
	0x032A17CC BL 0x1C16D08
	0x032A17D0 MOV X1, X19
	0x032A17D4 MOV X2, X31
	0x032A17D8 BL 0x33BFB40
	0x032A17DC MOV X19, X0
	0x032A17E0 ADRP X0, 0xE7C000
	0x032A17E4 LDR X0, [X0 + 0x2E0]
	0x032A17E8 BL 0x1C16D08
	0x032A17EC BL 0x1C16F10
	0x032A17F0 MOV X1, X19
	0x032A17F4 MOV X20, X0
	0x032A17F8 BL 0x329F100
	0x032A17FC ADRP X0, 0xE83000
	0x032A1800 LDR X0, [X0 + 0xC10]
	0x032A1804 BL 0x1C16D08
	0x032A1808 MOV X1, X0
	0x032A180C MOV X0, X20
	0x032A1810 BL 0x1C16DEC
	0x032A1814 BL 0x1C16F20
	0x032A1818 ADRP X0, 0xE57000
	0x032A181C LDR X0, [X0 + 0x528]
	0x032A1820 BL 0x1C16D08
	0x032A1824 BL 0x1C16F10
	0x032A1828 MOV X19, X0
	0x032A182C ADRP X0, 0xE5A000
	0x032A1830 LDR X0, [X0 + 0x5E8]
	0x032A1834 BL 0x1C16D08
	0x032A1838 MOV X1, X0
	0x032A183C MOV X0, X19
	0x032A1840 MOV X2, X31
	0x032A1844 BL 0x330E100
	0x032A1848 ADRP X0, 0xE83000
	0x032A184C LDR X0, [X0 + 0xC10]
	0x032A1850 BL 0x1C16D08
	0x032A1854 MOV X1, X0
	0x032A1858 MOV X0, X19
	0x032A185C BL 0x1C16DEC
	0x032A1860 MOV X1, X31
	0x032A1864 B 0x33BDD8C
	0x032A1868 STR X30, [X31 - 0x20]!
	0x032A186C STP X20, X19, [X31 + 0x10]
	0x032A1870 ADRP X20, 0x113B000
	0x032A1874 LDRB W8, [X20 + 0x76D]
	0x032A1878 MOV X19, X0
	0x032A187C TBNZ X8, 0x0, 0x32A18A0
	0x032A1880 ADRP X0, 0xE83000
	0x032A1884 LDR X0, [X0 + 0xB70]
	0x032A1888 BL 0x1C16CF4
	0x032A188C ADRP X0, 0xE7B000
	0x032A1890 LDR X0, [X0 + 0x4E8]
	0x032A1894 BL 0x1C16CF4
	0x032A1898 MOVZ W8, 0x1
	0x032A189C STRB W8, [X20 + 0x76D]
	0x032A18A0 CBZ X19, 0x32A19D4
	0x032A18A4 ADRP X20, 0xE7B000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0x113C000
	010 Move X25, 0xE84000
	011 Move X19, 0xE84000
	012 Move X21, 0xE84000
	013 Move X23, 0xE5B000
	014 Move X20, 0xE84000
	015 Move X22, 0xE53000
	016 Move X25, [X25+2912]
	017 Move W8, [X24+1896]
	018 Move X19, [X19+2920]
	019 Move X21, [X21+2928]
	020 Move X23, [X23+3168]
	021 Move X20, [X20+2936]
	022 Move X22, [X22+1728]
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {47}
	027 Move X0, 0xE84000
	028 Move X0, [X0+2920]
	029 Call 0x1C17CF4
	030 Move X0, 0xE84000
	031 Move X0, [X0+2912]
	032 Call 0x1C17CF4
	033 Move X0, 0xE84000
	034 Move X0, [X0+2936]
	035 Call 0x1C17CF4
	036 Move X0, 0xE84000
	037 Move X0, [X0+2928]
	038 Call 0x1C17CF4
	039 Move X0, 0xE5B000
	040 Move X0, [X0+3168]
	041 Call 0x1C17CF4
	042 Move X0, 0xE53000
	043 Move X0, [X0+1728]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X24+1896], W8
	047 Move X0, [X25]
	048 Call 0x1C17F10
	049 Move X1, [X19]
	050 Move X19, X0
	051 Call ConcurrentDictionary`2<Object, Object>..ctor, X0
	052 Move X8, [X21]
	053 Move X8, [X8+184]
	054 Move [X8], X19
	055 Move X8, [X21]
	056 Move X8, [X8+184]
	057 Move [X8+8], W31
	058 Call 0x1C17D44
	059 Move X8, [X21]
	060 Move W1, 1
	061 Move X8, [X8+184]
	062 Move [X8+9], W31
	063 Move X0, [X23]
	064 Call 0x1C17D6C
	065 Move X8, [X22]
	066 Move X20, [X20]
	067 Move X19, X0
	068 Move W9, [X8+224]
	069 Compare W9, 0
	070 JumpIfNotEqual {73}
	071 Move X0, X8
	072 Call 0x1C17DFC
	073 Move X0, X20
	074 Move X1, X31
	075 Call Type.GetTypeFromHandle, X0
	076 Compare X19, 0
	077 JumpIfEqual {108}
	078 Move X20, X0
	079 Compare X0, 0
	080 JumpIfEqual {87}
	081 Move X8, [X19]
	082 Move X0, X20
	083 Move X1, [X8+64]
	084 Call 0x1C17E00
	085 Compare X0, 0
	086 JumpIfEqual {110}
	087 Move W8, [X19+24]
	088 Compare W8, 0
	089 JumpIfEqual {109}
	090 Move [X19+32], X20
	091 Move X8, [X21]
	092 Move X0, X31
	093 Move X8, [X8+184]
	094 Move [X8+16], X19
	095 Call Type.get_DefaultBinder
	096 Move X8, [X21]
	097 Move X20, [X31+48]
	098 Move X19, [X31+56]
	099 Move X22, [X31+32]
	100 Move X21, [X31+40]
	101 Move X24, [X31+16]
	102 Move X23, [X31+24]
	103 Move X8, [X8+184]
	104 Move [X8+24], X0
	105 Move X30, [X31+64]
	106 Move X25, [X31+72]
	107 Return 
	108 Call 0x1C17F20
	109 Call 0x1C17F28
	110 Call 0x1C17F44
	111 Move X1, X31
	112 Call 0x1C17DEC

Method: System.Reflection.MemberInfo[] GetSerializableMembers(System.RuntimeType type)

Disassembly:
	0x032A18A8 LDR X20, [X20 + 0x4E8]
	0x032A18AC LDR X8, [X19]
	0x032A18B0 LDR X1, [X20]
	0x032A18B4 LDRB W10, [X8 + 0x130]
	0x032A18B8 LDRB W9, [X1 + 0x130]
	0x032A18BC CMP W10, W9
	0x032A18C0 B.CC 0x32A192C
	0x032A18C4 LDR X11, [X8 + 0xC8]
	0x032A18C8 ADD X11, X11, X9, 0x3, LSL
	0x032A18CC LDUR X11, [X11 - 0x8]
	0x032A18D0 CMP X11, X1
	0x032A18D4 B.NE 0x32A192C
	0x032A18D8 ADRP X11, 0xE83000
	0x032A18DC LDR X11, [X11 + 0xB70]
	0x032A18E0 LDR X0, [X11]
	0x032A18E4 LDR W11, [X0 + 0xE0]
	0x032A18E8 CBNZ W11, 0x32A1900
	0x032A18EC BL 0x1C16DFC
	0x032A18F0 LDR X8, [X19]
	0x032A18F4 LDR X1, [X20]
	0x032A18F8 LDRB W10, [X8 + 0x130]
	0x032A18FC LDRB W9, [X1 + 0x130]
	0x032A1900 CMP W10, W9
	0x032A1904 B.CC 0x32A19CC
	0x032A1908 LDR X8, [X8 + 0xC8]
	0x032A190C ADD X8, X8, W9, 0x3, UXTW
	0x032A1910 LDUR X8, [X8 - 0x8]
	0x032A1914 CMP X8, X1
	0x032A1918 B.NE 0x32A19CC
	0x032A191C MOV X0, X19
	0x032A1920 LDP X20, X19, [X31 + 0x10]
	0x032A1924 LDR X30, [X31], #0x20
	0x032A1928 B 0x1C713F4
	0x032A192C ADRP X0, 0xE52000
	0x032A1930 LDR X0, [X0 + 0x9D0]
	0x032A1934 BL 0x1C16D08
	0x032A1938 MOVZ W1, 0x1
	0x032A193C BL 0x1C16D6C
	0x032A1940 LDR X8, [X19]
	0x032A1944 MOV X20, X0
	0x032A1948 MOV X0, X19
	0x032A194C LDP X9, X1, [X8 + 0x168]
	0x032A1950 BLR X9
	0x032A1954 MOV X19, X0
	0x032A1958 MOV X0, X20
	0x032A195C BL 0x19903C0
	0x032A1960 MOV X0, X20
	0x032A1964 MOV X1, X19
	0x032A1968 BL 0x19980B4
	0x032A196C MOV X0, X20
	0x032A1970 MOV X1, X31
	0x032A1974 MOV X2, X19
	0x032A1978 BL 0x1993444
	0x032A197C ADRP X0, 0xE83000
	0x032A1980 LDR X0, [X0 + 0xC08]
	0x032A1984 BL 0x1C16D08
	0x032A1988 MOV X1, X20
	0x032A198C MOV X2, X31
	0x032A1990 BL 0x33BFB40
	0x032A1994 MOV X19, X0
	0x032A1998 ADRP X0, 0xE7C000
	0x032A199C LDR X0, [X0 + 0x2E0]
	0x032A19A0 BL 0x1C16D08
	0x032A19A4 BL 0x1C16F10
	0x032A19A8 MOV X1, X19
	0x032A19AC MOV X20, X0
	0x032A19B0 BL 0x329F100
	0x032A19B4 ADRP X0, 0xE83000
	0x032A19B8 LDR X0, [X0 + 0xC18]
	0x032A19BC BL 0x1C16D08
	0x032A19C0 MOV X1, X0
	0x032A19C4 MOV X0, X20
	0x032A19C8 BL 0x1C16DEC
	0x032A19CC MOV X0, X19
	0x032A19D0 BL 0x1C171E0
	0x032A19D4 ADRP X0, 0xE57000
	0x032A19D8 LDR X0, [X0 + 0x528]
	0x032A19DC BL 0x1C16D08
	0x032A19E0 BL 0x1C16F10
	0x032A19E4 MOV X19, X0
	0x032A19E8 ADRP X0, 0xE5A000
	0x032A19EC LDR X0, [X0 + 0x5E8]
	0x032A19F0 BL 0x1C16D08
	0x032A19F4 MOV X1, X0
	0x032A19F8 MOV X0, X19
	0x032A19FC MOV X2, X31
	0x032A1A00 BL 0x330E100
	0x032A1A04 ADRP X0, 0xE83000
	0x032A1A08 LDR X0, [X0 + 0xC18]
	0x032A1A0C BL 0x1C16D08
	0x032A1A10 MOV X1, X0
	0x032A1A14 MOV X0, X19
	0x032A1A18 BL 0x1C16DEC
	0x032A1A1C B 0x1C713F4
	0x032A1A20 MOV W0, W31
	0x032A1A24 RET
	0x032A1A28 STR X30, [X31 - 0x20]!
	0x032A1A2C STP X20, X19, [X31 + 0x10]
	0x032A1A30 ADRP X20, 0x113B000
	0x032A1A34 ADRP X19, 0xE83000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x113C000
	008 Move W8, [X20+1897]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE84000
	015 Move X0, [X0+2944]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1897], W8
	019 Compare X19, 0
	020 JumpIfEqual {106}
	021 Move X8, [X19]
	022 Move W1, 52
	023 Move X0, X19
	024 Move X9, [X8+1672]
	025 Move X2, [X8+1680]
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Compare X0, 0
	028 JumpIfEqual {106}
	029 Move X8, [X0+24]
	030 Move X19, X0
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move W21, W31
	033 Move W20, W31
	034 Move W22, 1
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Add X8, X19, W21
	037 Move X0, [X8+32]
	038 Compare X0, 0
	039 JumpIfEqual {106}
	040 Move X8, [X0]
	041 Move X9, [X8+584]
	042 Move X1, [X8+592]
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move X8, [X19+24]
	045 NotImplemented "Instruction BIC not yet implemented."
	046 Add W21, W21, 1
	047 Add W20, W9, W20
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move W20, W31
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X20, X19
	052 Move X8, 0xE84000
	053 Move X8, [X8+2944]
	054 Move W1, W20
	055 Move X0, [X8]
	056 Call 0x1C17D6C
	057 Move W8, [X19+24]
	058 Move X20, X0
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move W22, W31
	061 Move W23, W31
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Add X21, X19, W23
	064 Add X21, X21, 32
	065 Move X0, [X21]
	066 Compare X0, 0
	067 JumpIfEqual {106}
	068 Move X8, [X0]
	069 Move X9, [X8+584]
	070 Move X1, [X8+592]
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move TEMP, X0
	073 And TEMP, TEMP, 128
	074 Compare TEMP, 128
	075 JumpIfEqual {94}
	076 Move W8, [X19+24]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Compare X20, 0
	079 JumpIfEqual {106}
	080 Move X21, [X21]
	081 Compare X21, 0
	082 JumpIfEqual {89}
	083 Move X8, [X20]
	084 Move X0, X21
	085 Move X1, [X8+64]
	086 Call 0x1C17E00
	087 Compare X0, 0
	088 JumpIfEqual {107}
	089 Move W8, [X20+24]
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Add X8, X20, W22
	092 Add W22, W22, 1
	093 Move [X8+32], X21
	094 Move W8, [X19+24]
	095 Add W23, W23, 1
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move X0, X20
	098 Move X20, [X31+32]
	099 Move X19, [X31+40]
	100 Move X22, [X31+16]
	101 Move X21, [X31+24]
	102 Move X30, [X31+48]
	103 Move X23, [X31+56]
	104 Return X0
	105 Call 0x1C17F28
	106 Call 0x1C17F20
	107 Call 0x1C17F44
	108 Move X1, X31
	109 Call 0x1C17DEC

Method: System.Boolean CheckSerializable(System.RuntimeType type)

Disassembly:
	0x032A1A38 LDRB W8, [X20 + 0x76E]
	0x032A1A3C LDR X19, [X19 + 0xB70]
	0x032A1A40 TBNZ X8, 0x0, 0x32A1A58
	0x032A1A44 ADRP X0, 0xE83000
	0x032A1A48 LDR X0, [X0 + 0xB70]
	0x032A1A4C BL 0x1C16CF4
	0x032A1A50 MOVZ W8, 0x1
	0x032A1A54 STRB W8, [X20 + 0x76E]

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {9}
	004 Move X8, [X0]
	005 Move X2, [X8+632]
	006 Move X1, [X8+640]
	007 Move X30, [X31+16]
	008 CallNoReturn X2
	009 Call 0x1C17F20

Method: System.Reflection.MemberInfo[] InternalGetSerializableMembers(System.RuntimeType type)

Disassembly:
	0x032A1A58 LDR X0, [X19]
	0x032A1A5C LDR W8, [X0 + 0xE0]
	0x032A1A60 CBNZ W8, 0x32A1A6C
	0x032A1A64 BL 0x1C16DFC
	0x032A1A68 LDR X0, [X19]
	0x032A1A6C LDR X8, [X0 + 0xB8]
	0x032A1A70 LDRB W20, [X8 + 0x9]
	0x032A1A74 BL 0x1C16D44
	0x032A1A78 LDR X0, [X19]
	0x032A1A7C CBNZ W20, 0x32A1AAC
	0x032A1A80 LDR W8, [X0 + 0xE0]
	0x032A1A84 CBNZ W8, 0x32A1A90
	0x032A1A88 BL 0x1C16DFC
	0x032A1A8C LDR X0, [X19]
	0x032A1A90 LDR X8, [X0 + 0xB8]
	0x032A1A94 STRB W31, [X8 + 0x8]
	0x032A1A98 BL 0x1C16D44
	0x032A1A9C LDR X0, [X19]
	0x032A1AA0 MOVZ W9, 0x1
	0x032A1AA4 LDR X8, [X0 + 0xB8]
	0x032A1AA8 STRB W9, [X8 + 0x9]
	0x032A1AAC LDR W8, [X0 + 0xE0]
	0x032A1AB0 CBNZ W8, 0x32A1ABC
	0x032A1AB4 BL 0x1C16DFC
	0x032A1AB8 LDR X0, [X19]
	0x032A1ABC LDR X8, [X0 + 0xB8]
	0x032A1AC0 LDP X20, X19, [X31 + 0x10]
	0x032A1AC4 LDRB W0, [X8 + 0x8]
	0x032A1AC8 LDR X30, [X31], #0x20
	0x032A1ACC RET
	0x032A1AD0 STP X30, X23, [X31 - 0x30]!
	0x032A1AD4 STP X22, X21, [X31 + 0x10]
	0x032A1AD8 STP X20, X19, [X31 + 0x20]
	0x032A1ADC ADRP X22, 0x113B000
	0x032A1AE0 LDRB W8, [X22 + 0x76F]
	0x032A1AE4 MOV X19, X2
	0x032A1AE8 MOV X20, X1
	0x032A1AEC MOV X21, X0
	0x032A1AF0 TBNZ X8, 0x0, 0x32A1B20
	0x032A1AF4 ADRP X0, 0xE83000
	0x032A1AF8 LDR X0, [X0 + 0xB70]
	0x032A1AFC BL 0x1C16CF4
	0x032A1B00 ADRP X0, 0xE83000
	0x032A1B04 LDR X0, [X0 + 0xC20]
	0x032A1B08 BL 0x1C16CF4
	0x032A1B0C ADRP X0, 0xE83000
	0x032A1B10 LDR X0, [X0 + 0xBB8]
	0x032A1B14 BL 0x1C16CF4
	0x032A1B18 MOVZ W8, 0x1
	0x032A1B1C STRB W8, [X22 + 0x76F]
	0x032A1B20 ADRP X23, 0xE83000
	0x032A1B24 LDR X23, [X23 + 0xB70]
	0x032A1B28 CBZ X21, 0x32A1B54
	0x032A1B2C ADRP X8, 0xE83000
	0x032A1B30 LDR X8, [X8 + 0xC20]
	0x032A1B34 LDR X9, [X21]
	0x032A1B38 LDR X8, [X8]
	0x032A1B3C LDRB W11, [X9 + 0x130]
	0x032A1B40 LDRB W10, [X8 + 0x130]
	0x032A1B44 CMP W11, W10
	0x032A1B48 B.CS 0x32A1B6C
	0x032A1B4C MOV X22, X31
	0x032A1B50 B 0x32A1B80
	0x032A1B54 MOV X0, X31
	0x032A1B58 MOV X1, X31
	0x032A1B5C MOV X2, X31
	0x032A1B60 BL 0x32CCED4
	0x032A1B64 TBZ X0, 0x0, 0x32A1C14
	0x032A1B68 B 0x32A1C6C
	0x032A1B6C LDR X9, [X9 + 0xC8]
	0x032A1B70 ADD X9, X9, X10, 0x3, LSL
	0x032A1B74 LDUR X9, [X9 - 0x8]
	0x032A1B78 CMP X9, X8
	0x032A1B7C CSEL X22, X21, X31, EQ
	0x032A1B80 MOV X0, X22
	0x032A1B84 MOV X1, X31
	0x032A1B88 MOV X2, X31
	0x032A1B8C BL 0x32CCED4
	0x032A1B90 TBZ X0, 0x0, 0x32A1BFC
	0x032A1B94 CBZ X22, 0x32A1C6C
	0x032A1B98 LDR X8, [X22]
	0x032A1B9C MOV X0, X22
	0x032A1BA0 MOV X1, X20
	0x032A1BA4 LDR X9, [X8 + 0x348]
	0x032A1BA8 LDR X2, [X8 + 0x350]
	0x032A1BAC BLR X9
	0x032A1BB0 LDR X0, [X23]
	0x032A1BB4 LDR W8, [X0 + 0xE0]
	0x032A1BB8 CBNZ W8, 0x32A1BC4
	0x032A1BBC BL 0x1C16DFC
	0x032A1BC0 LDR X0, [X23]
	0x032A1BC4 LDR X8, [X0 + 0xB8]
	0x032A1BC8 LDR X9, [X22]
	0x032A1BCC MOV X0, X22
	0x032A1BD0 MOV X1, X20
	0x032A1BD4 LDR X4, [X8 + 0x18]
	0x032A1BD8 LDR X7, [X9 + 0x338]
	0x032A1BDC LDR X6, [X9 + 0x340]
	0x032A1BE0 MOV X2, X19
	0x032A1BE4 LDP X20, X19, [X31 + 0x20]
	0x032A1BE8 LDP X22, X21, [X31 + 0x10]
	0x032A1BEC MOV W3, W31
	0x032A1BF0 MOV X5, X31
	0x032A1BF4 LDP X30, X23, [X31], #0x30
	0x032A1BF8 BR X7
	0x032A1BFC ADRP X8, 0xE83000
	0x032A1C00 LDR X8, [X8 + 0xBB8]
	0x032A1C04 LDR X9, [X21]
	0x032A1C08 LDR X8, [X8]
	0x032A1C0C CMP X9, X8
	0x032A1C10 CSEL X21, X21, X31, EQ
	0x032A1C14 MOV X0, X21
	0x032A1C18 MOV X1, X31
	0x032A1C1C MOV X2, X31
	0x032A1C20 BL 0x32CCED4
	0x032A1C24 TBZ X0, 0x0, 0x32A1C70
	0x032A1C28 LDR X0, [X23]
	0x032A1C2C LDR W8, [X0 + 0xE0]
	0x032A1C30 CBNZ W8, 0x32A1C38
	0x032A1C34 BL 0x1C16DFC
	0x032A1C38 CBZ X21, 0x32A1C6C
	0x032A1C3C LDR X8, [X23]
	0x032A1C40 MOV X0, X21
	0x032A1C44 MOV X1, X20
	0x032A1C48 MOV X2, X19
	0x032A1C4C LDR X8, [X8 + 0xB8]
	0x032A1C50 LDP X20, X19, [X31 + 0x20]
	0x032A1C54 LDP X22, X21, [X31 + 0x10]
	0x032A1C58 MOV W3, W31
	0x032A1C5C LDR X4, [X8 + 0x18]
	0x032A1C60 MOV X5, X31
	0x032A1C64 LDP X30, X23, [X31], #0x30
	0x032A1C68 B 0x32A1CC0
	0x032A1C6C BL 0x1C16F20
	0x032A1C70 ADRP X0, 0xE83000
	0x032A1C74 LDR X0, [X0 + 0xC28]
	0x032A1C78 BL 0x1C16D08
	0x032A1C7C MOV X1, X31
	0x032A1C80 BL 0x33BDD84
	0x032A1C84 MOV X19, X0
	0x032A1C88 ADRP X0, 0xE5A000
	0x032A1C8C LDR X0, [X0 + 0x578]
	0x032A1C90 BL 0x1C16D08
	0x032A1C94 BL 0x1C16F10
	0x032A1C98 MOV X1, X19
	0x032A1C9C MOV X2, X31
	0x032A1CA0 MOV X20, X0
	0x032A1CA4 BL 0x3314A68
	0x032A1CA8 ADRP X0, 0xE83000
	0x032A1CAC LDR X0, [X0 + 0xC30]
	0x032A1CB0 BL 0x1C16D08
	0x032A1CB4 MOV X1, X0
	0x032A1CB8 MOV X0, X20
	0x032A1CBC BL 0x1C16DEC
	0x032A1CC0 STP X30, X25, [X31 - 0x40]!
	0x032A1CC4 STP X24, X23, [X31 + 0x10]
	0x032A1CC8 STP X22, X21, [X31 + 0x20]
	0x032A1CCC STP X20, X19, [X31 + 0x30]
	0x032A1CD0 LDR X24, [X0 + 0x10]
	0x032A1CD4 MOV X22, X2
	0x032A1CD8 MOV X25, X0
	0x032A1CDC MOV X23, X1
	0x032A1CE0 MOV X0, X24
	0x032A1CE4 MOV X1, X31
	0x032A1CE8 MOV X2, X31
	0x032A1CEC MOV X19, X5
	0x032A1CF0 MOV X20, X4
	0x032A1CF4 MOV W21, W3
	0x032A1CF8 BL 0x32CCED4
	0x032A1CFC TBZ X0, 0x0, 0x32A1D30
	0x032A1D00 CBZ X24, 0x32A1D6C
	0x032A1D04 LDR X8, [X24]
	0x032A1D08 MOV X0, X24
	0x032A1D0C MOV X1, X23
	0x032A1D10 LDR X9, [X8 + 0x348]
	0x032A1D14 LDR X2, [X8 + 0x350]
	0x032A1D18 BLR X9
	0x032A1D1C LDR X8, [X24]
	0x032A1D20 MOV X0, X24
	0x032A1D24 LDR X7, [X8 + 0x338]
	0x032A1D28 LDR X6, [X8 + 0x340]
	0x032A1D2C B 0x32A1D44
	0x032A1D30 LDR X0, [X25 + 0x10]
	0x032A1D34 CBZ X0, 0x32A1D6C
	0x032A1D38 LDR X8, [X0]
	0x032A1D3C LDR X7, [X8 + 0x2E8]
	0x032A1D40 LDR X6, [X8 + 0x2F0]
	0x032A1D44 MOV X1, X23
	0x032A1D48 MOV X2, X22
	0x032A1D4C MOV W3, W21
	0x032A1D50 MOV X4, X20
	0x032A1D54 MOV X5, X19
	0x032A1D58 LDP X20, X19, [X31 + 0x30]
	0x032A1D5C LDP X22, X21, [X31 + 0x20]
	0x032A1D60 LDP X24, X23, [X31 + 0x10]
	0x032A1D64 LDP X30, X25, [X31], #0x40
	0x032A1D68 BR X7
	0x032A1D6C BL 0x1C16F20
	0x032A1D70 SUB X31, X31, 0x60
	0x032A1D74 STP X30, X27, [X31 + 0x10]
	0x032A1D78 STP X26, X25, [X31 + 0x20]
	0x032A1D7C STP X24, X23, [X31 + 0x30]
	0x032A1D80 STP X22, X21, [X31 + 0x40]
	0x032A1D84 STP X20, X19, [X31 + 0x50]
	0x032A1D88 ADRP X22, 0x113B000
	0x032A1D8C LDRB W8, [X22 + 0x770]
	0x032A1D90 MOV X19, X2
	0x032A1D94 MOV X20, X1
	0x032A1D98 MOV X21, X0
	0x032A1D9C TBNZ X8, 0x0, 0x32A1DB4
	0x032A1DA0 ADRP X0, 0xE83000
	0x032A1DA4 LDR X0, [X0 + 0xB70]
	0x032A1DA8 BL 0x1C16CF4
	0x032A1DAC MOVZ W8, 0x1
	0x032A1DB0 STRB W8, [X22 + 0x770]
	0x032A1DB4 CBZ X21, 0x32A1FA0
	0x032A1DB8 CBZ X20, 0x32A1FC0
	0x032A1DBC CBZ X19, 0x32A1FE0
	0x032A1DC0 LDR X8, [X20 + 0x18]
	0x032A1DC4 LDR W9, [X19 + 0x18]
	0x032A1DC8 CMP W8, W9
	0x032A1DCC B.NE 0x32A2028
	0x032A1DD0 CMP W8, 0x1
	0x032A1DD4 B.LT 0x32A1E80
	0x032A1DD8 ADRP X25, 0xE83000
	0x032A1DDC LDR X25, [X25 + 0xB70]
	0x032A1DE0 MOV X24, X31
	0x032A1DE4 AND X8, X8, 0x0
	0x032A1DE8 ADD X26, X20, 0x20
	0x032A1DEC ADD X27, X19, 0x20
	0x032A1DF0 CMP X24, W8, UXTW
	0x032A1DF4 B.CS 0x32A1EA0
	0x032A1DF8 LDR X22, [X26, X24, LSL #3]
	0x032A1DFC MOV X1, X31
	0x032A1E00 MOV X2, X31
	0x032A1E04 MOV X0, X22
	0x032A1E08 BL 0x32BE96C
	0x032A1E0C TBNZ X0, 0x0, 0x32A1EA4
	0x032A1E10 LDR W8, [X19 + 0x18]
	0x032A1E14 CMP X24, X8
	0x032A1E18 B.CS 0x32A1EA0
	0x032A1E1C LDR X8, [X27, X24, LSL #3]
	0x032A1E20 CBZ X8, 0x32A1E70
	0x032A1E24 CBZ X22, 0x32A1F50
	0x032A1E28 LDR X8, [X22]
	0x032A1E2C MOV X0, X22
	0x032A1E30 LDP X9, X1, [X8 + 0x198]
	0x032A1E34 BLR X9
	0x032A1E38 CMP W0, 0x4
	0x032A1E3C B.NE 0x32A1F54
	0x032A1E40 LDR W8, [X19 + 0x18]
	0x032A1E44 CMP X24, X8
	0x032A1E48 B.CS 0x32A1EA0
	0x032A1E4C LDR X0, [X25]
	0x032A1E50 LDR X23, [X27, X24, LSL #3]
	0x032A1E54 LDR W8, [X0 + 0xE0]
	0x032A1E58 CBNZ W8, 0x32A1E60
	0x032A1E5C BL 0x1C16DFC
	0x032A1E60 MOV X0, X22
	0x032A1E64 MOV X1, X21
	0x032A1E68 MOV X2, X23
	0x032A1E6C BL 0x32A1AD0
	0x032A1E70 LDR W8, [X20 + 0x18]
	0x032A1E74 ADD X24, X24, 0x1
	0x032A1E78 CMP X24, W8, SXTW
	0x032A1E7C B.LT 0x32A1DF0
	0x032A1E80 MOV X0, X21
	0x032A1E84 LDP X20, X19, [X31 + 0x50]
	0x032A1E88 LDP X22, X21, [X31 + 0x40]
	0x032A1E8C LDP X24, X23, [X31 + 0x30]
	0x032A1E90 LDP X26, X25, [X31 + 0x20]
	0x032A1E94 LDP X30, X27, [X31 + 0x10]
	0x032A1E98 ADD X31, X31, 0x60
	0x032A1E9C RET
	0x032A1EA0 BL 0x1C16F28
	0x032A1EA4 ADRP X0, 0xE52000
	0x032A1EA8 LDR X0, [X0 + 0x9D0]
	0x032A1EAC BL 0x1C16D08
	0x032A1EB0 MOVZ W1, 0x1
	0x032A1EB4 BL 0x1C16D6C
	0x032A1EB8 MOV X19, X0
	0x032A1EBC STR W24, [X31 + 0xC]
	0x032A1EC0 ADRP X0, 0xE52000
	0x032A1EC4 LDR X0, [X0 + 0x758]
	0x032A1EC8 BL 0x1C16D08
	0x032A1ECC ADD X1, X31, 0xC
	0x032A1ED0 BL 0x1C16E04
	0x032A1ED4 MOV X20, X0
	0x032A1ED8 MOV X0, X19
	0x032A1EDC BL 0x19903C0
	0x032A1EE0 MOV X0, X19
	0x032A1EE4 MOV X1, X20
	0x032A1EE8 BL 0x19980B4
	0x032A1EEC MOV X0, X19
	0x032A1EF0 MOV X1, X31
	0x032A1EF4 MOV X2, X20
	0x032A1EF8 BL 0x1993444
	0x032A1EFC ADRP X0, 0xE83000
	0x032A1F00 LDR X0, [X0 + 0xC38]
	0x032A1F04 BL 0x1C16D08
	0x032A1F08 MOV X1, X19
	0x032A1F0C MOV X2, X31
	0x032A1F10 BL 0x33BFB40
	0x032A1F14 MOV X19, X0
	0x032A1F18 ADRP X0, 0xE57000
	0x032A1F1C LDR X0, [X0 + 0x528]
	0x032A1F20 BL 0x1C16D08
	0x032A1F24 BL 0x1C16F10
	0x032A1F28 MOV X20, X0
	0x032A1F2C ADRP X0, 0xE83000
	0x032A1F30 LDR X0, [X0 + 0xC40]
	0x032A1F34 BL 0x1C16D08
	0x032A1F38 MOV X1, X0
	0x032A1F3C MOV X0, X20
	0x032A1F40 MOV X2, X19
	0x032A1F44 MOV X3, X31
	0x032A1F48 BL 0x3315F7C
	0x032A1F4C B 0x32A1F88
	0x032A1F50 BL 0x1C16F20
	0x032A1F54 ADRP X0, 0xE83000
	0x032A1F58 LDR X0, [X0 + 0xC48]
	0x032A1F5C BL 0x1C16D08
	0x032A1F60 MOV X1, X31
	0x032A1F64 BL 0x33BDD84
	0x032A1F68 MOV X19, X0
	0x032A1F6C ADRP X0, 0xE7C000
	0x032A1F70 LDR X0, [X0 + 0x2E0]
	0x032A1F74 BL 0x1C16D08
	0x032A1F78 BL 0x1C16F10
	0x032A1F7C MOV X1, X19
	0x032A1F80 MOV X20, X0
	0x032A1F84 BL 0x329F100
	0x032A1F88 ADRP X0, 0xE83000
	0x032A1F8C LDR X0, [X0 + 0xC50]
	0x032A1F90 BL 0x1C16D08
	0x032A1F94 MOV X1, X0
	0x032A1F98 MOV X0, X20
	0x032A1F9C BL 0x1C16DEC
	0x032A1FA0 ADRP X0, 0xE57000
	0x032A1FA4 LDR X0, [X0 + 0x528]
	0x032A1FA8 BL 0x1C16D08
	0x032A1FAC BL 0x1C16F10
	0x032A1FB0 MOV X19, X0
	0x032A1FB4 ADRP X0, 0xE5D000
	0x032A1FB8 LDR X0, [X0 + 0x8A8]
	0x032A1FBC B 0x32A1FFC
	0x032A1FC0 ADRP X0, 0xE57000
	0x032A1FC4 LDR X0, [X0 + 0x528]
	0x032A1FC8 BL 0x1C16D08
	0x032A1FCC BL 0x1C16F10
	0x032A1FD0 MOV X19, X0
	0x032A1FD4 ADRP X0, 0xE83000
	0x032A1FD8 LDR X0, [X0 + 0xC40]
	0x032A1FDC B 0x32A1FFC
	0x032A1FE0 ADRP X0, 0xE57000
	0x032A1FE4 LDR X0, [X0 + 0x528]
	0x032A1FE8 BL 0x1C16D08
	0x032A1FEC BL 0x1C16F10
	0x032A1FF0 MOV X19, X0
	0x032A1FF4 ADRP X0, 0xE5E000
	0x032A1FF8 LDR X0, [X0 + 0x690]
	0x032A1FFC BL 0x1C16D08
	0x032A2000 MOV X1, X0
	0x032A2004 MOV X0, X19
	0x032A2008 MOV X2, X31
	0x032A200C BL 0x330E100
	0x032A2010 ADRP X0, 0xE82000
	0x032A2014 LDR X0, [X0 + 0xC50]
	0x032A2018 BL 0x1C16D08
	0x032A201C MOV X1, X0
	0x032A2020 MOV X0, X19
	0x032A2024 BL 0x1C16DEC
	0x032A2028 ADRP X0, 0xE82000
	0x032A202C LDR X0, [X0 + 0xC58]
	0x032A2030 BL 0x1C16D08
	0x032A2034 MOV X1, X31
	0x032A2038 BL 0x33BDD84
	0x032A203C MOV X19, X0
	0x032A2040 ADRP X0, 0xE59000
	0x032A2044 LDR X0, [X0 + 0x578]
	0x032A2048 BL 0x1C16D08
	0x032A204C BL 0x1C16F10
	0x032A2050 MOV X1, X19
	0x032A2054 MOV X2, X31
	0x032A2058 MOV X20, X0
	0x032A205C BL 0x3314A68
	0x032A2060 B 0x32A1F88
	0x032A2064 STR X30, [X31 - 0x60]!
	0x032A2068 STP X28, X27, [X31 + 0x10]
	0x032A206C STP X26, X25, [X31 + 0x20]
	0x032A2070 STP X24, X23, [X31 + 0x30]
	0x032A2074 STP X22, X21, [X31 + 0x40]
	0x032A2078 STP X20, X19, [X31 + 0x50]
	0x032A207C ADRP X21, 0x113A000
	0x032A2080 LDRB W8, [X21 + 0x771]
	0x032A2084 MOV X19, X1
	0x032A2088 MOV X20, X0
	0x032A208C TBNZ X8, 0x0, 0x32A20BC
	0x032A2090 ADRP X0, 0xE51000
	0x032A2094 LDR X0, [X0 + 0x9D0]
	0x032A2098 BL 0x1C16CF4
	0x032A209C ADRP X0, 0xE82000
	0x032A20A0 LDR X0, [X0 + 0xC20]
	0x032A20A4 BL 0x1C16CF4
	0x032A20A8 ADRP X0, 0xE82000
	0x032A20AC LDR X0, [X0 + 0xBB8]
	0x032A20B0 BL 0x1C16CF4
	0x032A20B4 MOVZ W8, 0x1
	0x032A20B8 STRB W8, [X21 + 0x771]
	0x032A20BC CBZ X20, 0x32A2364
	0x032A20C0 CBZ X19, 0x32A2384
	0x032A20C4 ADRP X8, 0xE51000
	0x032A20C8 LDR X8, [X8 + 0x9D0]
	0x032A20CC LDR W21, [X19 + 0x18]
	0x032A20D0 LDR X0, [X8]
	0x032A20D4 MOV W1, W21
	0x032A20D8 BL 0x1C16D6C
	0x032A20DC CMP W21, 0x1
	0x032A20E0 MOV X22, X0
	0x032A20E4 B.LT 0x32A2234
	0x032A20E8 ADRP X26, 0xE82000
	0x032A20EC ADRP X27, 0xE82000
	0x032A20F0 LDR X26, [X26 + 0xC20]
	0x032A20F4 LDR X27, [X27 + 0xBB8]
	0x032A20F8 MOV W25, W31
	0x032A20FC LDR W8, [X19 + 0x18]
	0x032A2100 CMP W25, W8
	0x032A2104 B.CS 0x32A2258
	0x032A2108 SXTW X28, W25
	0x032A210C ADD X8, X19, X28, 0x3, LSL
	0x032A2110 LDR X23, [X8 + 0x20]
	0x032A2114 MOV X1, X31
	0x032A2118 MOV X2, X31
	0x032A211C MOV X0, X23
	0x032A2120 BL 0x32BE96C
	0x032A2124 TBNZ X0, 0x0, 0x32A225C
	0x032A2128 CBZ X23, 0x32A2254
	0x032A212C LDR X8, [X23]
	0x032A2130 MOV X0, X23
	0x032A2134 LDP X9, X1, [X8 + 0x198]
	0x032A2138 BLR X9
	0x032A213C CMP W0, 0x4
	0x032A2140 B.NE 0x32A2308
	0x032A2144 LDR X9, [X23]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X19, 0x113C000
	015 Move W8, [X19+1898]
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {59}
	021 Move X0, 0xE84000
	022 Move X0, [X0+2928]
	023 Call 0x1C17CF4
	024 Move X0, 0xE5A000
	025 Move X0, [X0+752]
	026 Call 0x1C17CF4
	027 Move X0, 0xE84000
	028 Move X0, [X0+2952]
	029 Call 0x1C17CF4
	030 Move X0, 0xE84000
	031 Move X0, [X0+2960]
	032 Call 0x1C17CF4
	033 Move X0, 0xE84000
	034 Move X0, [X0+2968]
	035 Call 0x1C17CF4
	036 Move X0, 0xE84000
	037 Move X0, [X0+2976]
	038 Call 0x1C17CF4
	039 Move X0, 0xE84000
	040 Move X0, [X0+2984]
	041 Call 0x1C17CF4
	042 Move X0, 0xE84000
	043 Move X0, [X0+2992]
	044 Call 0x1C17CF4
	045 Move X0, 0xE5D000
	046 Move X0, [X0+2408]
	047 Call 0x1C17CF4
	048 Move X0, 0xE7C000
	049 Move X0, [X0+1256]
	050 Call 0x1C17CF4
	051 Move X0, 0xE84000
	052 Move X0, [X0+3000]
	053 Call 0x1C17CF4
	054 Move X0, 0xE53000
	055 Move X0, [X0+1728]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X19+1898], W8
	059 Compare X20, 0
	060 JumpIfEqual {374}
	061 Move X0, X20
	062 Move X1, X31
	063 Call Type.get_IsInterface, X0
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {74}
	068 Move X8, 0xE84000
	069 Move X8, [X8+2984]
	070 Move W1, W31
	071 Move X0, [X8]
	072 Call 0x1C17D6C
	073 Move X22, X0
	074 Move X8, 0xE84000
	075 Move X8, [X8+2928]
	076 Move X0, [X8]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Move X8, [X20]
	082 Move X0, X20
	083 Move X9, [X8+632]
	084 Move X1, [X8+640]
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {454}
	090 Move X8, 0xE84000
	091 Move X8, [X8+2928]
	092 Move X0, [X8]
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {97}
	096 Call 0x1C17DFC
	097 Move X0, X20
	098 Call FormatterServices.GetSerializableMembers, X0
	099 Move X8, [X20]
	100 Move X22, X0
	101 Move X0, X20
	102 Move X9, [X8+2072]
	103 Move X1, [X8+2080]
	104 NotImplemented "Instruction BLR not yet implemented."
	105 Move X19, 0xE7C000
	106 Move X19, [X19+1256]
	107 Move X20, X0
	108 Move X1, [X19]
	109 Compare X0, 0
	110 JumpIfEqual {119}
	111 Move X8, [X20]
	112 Move W9, [X1+304]
	113 Move W10, [X8+304]
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move X8, [X8+200]
	116 Add X8, X8, X9
	117 NotImplemented "Instruction LDUR not yet implemented."
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move W8, [X1+224]
	120 Compare W8, 0
	121 JumpIfNotEqual {124}
	122 Move X0, X1
	123 Call 0x1C17DFC
	124 Move X0, X20
	125 Move X1, X31
	126 Move X2, X31
	127 Call RuntimeType.op_Inequality, X0, X1
	128 Move TEMP, X0
	129 And TEMP, TEMP, 1
	130 Compare TEMP, 1
	131 JumpIfNotEqual {359}
	132 Move X8, 0xE53000
	133 Move X8, [X8+1728]
	134 Move X0, [X8]
	135 Move X8, 0xE5D000
	136 Move X8, [X8+2408]
	137 Move W9, [X0+224]
	138 Move X21, [X8]
	139 Compare W9, 0
	140 JumpIfNotEqual {142}
	141 Call 0x1C17DFC
	142 Move X0, X21
	143 Move X1, X31
	144 Call Type.GetTypeFromHandle, X0
	145 Move X1, [X19]
	146 Move X21, X0
	147 Move W8, [X1+224]
	148 Compare W8, 0
	149 JumpIfEqual {152}
	150 Compare X21, 0
	151 JumpIfNotEqual {157}
	152 Move X0, X1
	153 Call 0x1C17DFC
	154 Move X1, [X19]
	155 Compare X21, 0
	156 JumpIfEqual {165}
	157 Move X8, [X21]
	158 Move W9, [X1+304]
	159 Move W10, [X8+304]
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Move X8, [X8+200]
	162 Add X8, X8, X9
	163 NotImplemented "Instruction LDUR not yet implemented."
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move X0, X20
	166 Move X1, X21
	167 Move X2, X31
	168 Call RuntimeType.op_Inequality, X0, X1
	169 Move TEMP, X0
	170 And TEMP, TEMP, 1
	171 Compare TEMP, 1
	172 JumpIfNotEqual {359}
	173 Move X8, 0xE84000
	174 Move X8, [X8+2928]
	175 Move [X31+24], X31
	176 Move [X31+20], W31
	177 Move X0, [X8]
	178 Move W8, [X0+224]
	179 Compare W8, 0
	180 JumpIfNotEqual {182}
	181 Call 0x1C17DFC
	182 Add X1, X31, 24
	183 Add X2, X31, 20
	184 Move X0, X20
	185 Call FormatterServices.GetParentTypes, X0, X1, X2
	186 Move W8, [X31+20]
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Move [X31+12], W8
	189 Move [X31+16], W0
	190 Move [X31], X22
	191 Move X8, 0xE84000
	192 Move X8, [X8+2976]
	193 Move X0, [X8]
	194 Call 0x1C17F10
	195 Move X8, 0xE84000
	196 Move X8, [X8+2960]
	197 Move X20, X0
	198 Move X1, [X8]
	199 Call List`1<Object>..ctor, X0
	200 Move X28, [X31+24]
	201 Compare X28, 0
	202 JumpIfEqual {374}
	203 Move X26, 0xE84000
	204 Move X19, 0xE84000
	205 Move X21, 0xE84000
	206 Move X26, [X26+3000]
	207 Move X19, [X19+2992]
	208 Move X21, [X21+2952]
	209 Move W29, W31
	210 Move W8, [X28+24]
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Move X8, 0xE84000
	213 Move X8, [X8+2928]
	214 Move X0, [X8]
	215 Add X8, X28, W29
	216 Move X23, [X8+32]
	217 Move W9, [X0+224]
	218 Compare W9, 0
	219 JumpIfNotEqual {221}
	220 Call 0x1C17DFC
	221 Compare X23, 0
	222 JumpIfEqual {374}
	223 Move X8, [X23]
	224 Move X0, X23
	225 Move X9, [X8+632]
	226 Move X1, [X8+640]
	227 NotImplemented "Instruction BLR not yet implemented."
	228 Move TEMP, X0
	229 And TEMP, TEMP, 1
	230 Compare TEMP, 1
	231 JumpIfNotEqual {378}
	232 Move X8, [X23]
	233 Move W1, 36
	234 Move X0, X23
	235 Move X9, [X8+1672]
	236 Move X2, [X8+1680]
	237 NotImplemented "Instruction BLR not yet implemented."
	238 Move X8, [X23]
	239 Move W9, [X31+16]
	240 Move X22, X0
	241 Move TEMP, X9
	242 And TEMP, TEMP, 1
	243 Compare TEMP, 1
	244 JumpIfNotEqual {247}
	245 Move X9, [X8+424]
	246 Move X1, [X8+432]
	247 Move X9, [X8+744]
	248 Move X1, [X8+752]
	249 Move X0, X23
	250 NotImplemented "Instruction BLR not yet implemented."
	251 Move X23, X0
	252 Compare X22, 0
	253 JumpIfEqual {374}
	254 Move W8, [X22+24]
	255 NotImplemented "Instruction CMP not yet implemented."
	256 Move W27, W31
	257 NotImplemented "Instruction CMP not yet implemented."
	258 Add X8, X22, W27
	259 Move X25, [X8+32]
	260 Compare X25, 0
	261 JumpIfEqual {374}
	262 Move X0, X25
	263 Move X1, X31
	264 Call FieldInfo.get_IsNotSerialized, X0
	265 Move TEMP, X0
	266 And TEMP, TEMP, 1
	267 Compare TEMP, 1
	268 JumpIfEqual {306}
	269 Move X0, [X26]
	270 Call 0x1C17F10
	271 Move X8, [X25]
	272 Move X1, [X19]
	273 Move W10, [X8+304]
	274 Move W9, [X1+304]
	275 NotImplemented "Instruction CMP not yet implemented."
	276 Move X8, [X8+200]
	277 Add X8, X8, X9
	278 NotImplemented "Instruction LDUR not yet implemented."
	279 NotImplemented "Instruction CMP not yet implemented."
	280 Move X1, X25
	281 Move X2, X23
	282 Move X24, X0
	283 Call SerializationFieldInfo..ctor, X0, X1, X2
	284 Compare X20, 0
	285 JumpIfEqual {374}
	286 Move W10, [X20+28]
	287 Move X8, [X20+16]
	288 Move X9, [X21]
	289 Add W10, W10, 1
	290 Move [X20+28], W10
	291 Compare X8, 0
	292 JumpIfEqual {374}
	293 NotImplemented "Instruction LDRSW not yet implemented."
	294 Move W11, [X8+24]
	295 NotImplemented "Instruction CMP not yet implemented."
	296 Add W9, W10, 1
	297 Add X8, X8, X10
	298 Move [X20+24], W9
	299 Move [X8+32], X24
	300 Move X8, [X9+32]
	301 Move X0, X20
	302 Move X1, X24
	303 Move X8, [X8+192]
	304 Move X2, [X8+112]
	305 Call List`1<Object>.AddWithResize, X0, X1
	306 Move W8, [X22+24]
	307 Add W27, W27, 1
	308 NotImplemented "Instruction CMP not yet implemented."
	309 Move W8, [X31+12]
	310 Add W29, W29, 1
	311 NotImplemented "Instruction CMP not yet implemented."
	312 Compare X20, 0
	313 JumpIfEqual {348}
	314 Move W8, [X20+24]
	315 Move X22, [X31]
	316 NotImplemented "Instruction CMP not yet implemented."
	317 Compare X22, 0
	318 JumpIfEqual {374}
	319 Move X9, 0xE84000
	320 Move X9, [X9+2984]
	321 Move W10, [X22+24]
	322 Move X0, [X9]
	323 Add W1, W8, W10
	324 Call 0x1C17D6C
	325 Move W2, [X22+24]
	326 Move X21, X0
	327 Move X0, X22
	328 Move X1, X21
	329 Move X3, X31
	330 Call Array.Copy, X0, X1, X2
	331 Move X9, 0xE5A000
	332 Move X8, [X20]
	333 Move X9, [X9+752]
	334 Move W19, [X22+24]
	335 Move X1, [X9]
	336 NotImplemented "Instruction LDRH not yet implemented."
	337 Compare X9, 0
	338 JumpIfEqual {345}
	339 Move X10, [X8+176]
	340 Add X10, X10, 8
	341 NotImplemented "Instruction LDUR not yet implemented."
	342 NotImplemented "Instruction CMP not yet implemented."
	343 Subtract X9, X9, 1
	344 Add X10, X10, 16
	345 Move X0, X20
	346 Move W2, W31
	347 Call 0x1C5D788
	348 Move X22, [X31]
	349 NotImplemented "Instruction LDRSW not yet implemented."
	350 Add X8, X8, X9
	351 Add X0, X8, 312
	352 Move X8, [X0]
	353 Move X3, [X0+8]
	354 Move X0, X20
	355 Move X1, X21
	356 Move W2, W19
	357 NotImplemented "Instruction BLR not yet implemented."
	358 Move X22, X21
	359 Move X0, X22
	360 Move X20, [X31+112]
	361 Move X19, [X31+120]
	362 Move X22, [X31+96]
	363 Move X21, [X31+104]
	364 Move X24, [X31+80]
	365 Move X23, [X31+88]
	366 Move X26, [X31+64]
	367 Move X25, [X31+72]
	368 Move X28, [X31+48]
	369 Move X27, [X31+56]
	370 Move X29, [X31+32]
	371 Move X30, [X31+40]
	372 Add X31, X31, 128
	373 Return X0
	374 Call 0x1C17F20
	375 Call 0x1C17F28
	376 Move X0, X25
	377 Call 0x1C181E0
	378 Move X0, 0xE53000
	379 Move X0, [X0+2512]
	380 Call 0x1C17D08
	381 Move W1, 2
	382 Call 0x1C17D6C
	383 Move X19, X0
	384 Move X0, X23
	385 Call 0x19913C0
	386 Move X8, [X23]
	387 Move X0, X23
	388 Move X9, [X8+744]
	389 Move X1, [X8+752]
	390 NotImplemented "Instruction BLR not yet implemented."
	391 Move X20, X0
	392 Move X0, X19
	393 Call 0x19913C0
	394 Move X0, X19
	395 Move X1, X20
	396 Call 0x19990B4
	397 Move X0, X19
	398 Move X1, X31
	399 Move X2, X20
	400 Call 0x1994444
	401 Move X0, X23
	402 Call 0x19913C0
	403 Move X8, [X23]
	404 Move X0, X23
	405 Move X9, [X8+776]
	406 Move X1, [X8+784]
	407 NotImplemented "Instruction BLR not yet implemented."
	408 Move X20, X0
	409 Call 0x19913C0
	410 Move X8, [X20]
	411 Move X0, X20
	412 Move X9, [X8+424]
	413 Move X1, [X8+432]
	414 NotImplemented "Instruction BLR not yet implemented."
	415 Move X20, X0
	416 Call 0x19913C0
	417 Move X8, [X20]
	418 Move X0, X20
	419 Move X9, [X8+440]
	420 Move X1, [X8+448]
	421 NotImplemented "Instruction BLR not yet implemented."
	422 Move X20, X0
	423 Move X0, X19
	424 Call 0x19913C0
	425 Move X0, X19
	426 Move X1, X20
	427 Call 0x19990B4
	428 Move W1, 1
	429 Move X0, X19
	430 Move X2, X20
	431 Call 0x1994444
	432 Move X0, 0xE83000
	433 Move X0, [X0+3008]
	434 Call 0x1C17D08
	435 Move X1, X19
	436 Move X2, X31
	437 Call Environment.GetResourceString, X0, X1
	438 Move X19, X0
	439 Move X0, 0xE7C000
	440 Move X0, [X0+736]
	441 Call 0x1C17D08
	442 Call 0x1C17F10
	443 Move X1, X19
	444 Move X20, X0
	445 Call SerializationException..ctor, X0, X1
	446 Move X0, 0xE83000
	447 Move X0, [X0+3016]
	448 Call 0x1C17D08
	449 Move X1, X0
	450 Move X0, X20
	451 Call 0x1C17DEC
	452 Move X0, X20
	453 Call 0x1C181E0
	454 Move X0, 0xE52000
	455 Move X0, [X0+2512]
	456 Call 0x1C17D08
	457 Move W1, 2
	458 Call 0x1C17D6C
	459 Move X19, X0
	460 Move X0, X20
	461 Call 0x19913C0
	462 Move X8, [X20]
	463 Move X0, X20
	464 Move X9, [X8+744]
	465 Move X1, [X8+752]
	466 NotImplemented "Instruction BLR not yet implemented."
	467 Move X21, X0
	468 Move X0, X19
	469 Call 0x19913C0
	470 Move X0, X19
	471 Move X1, X21
	472 Call 0x19990B4
	473 Move X0, X19
	474 Move X1, X31
	475 Move X2, X21
	476 Call 0x1994444
	477 Move X0, X20
	478 Call 0x19913C0
	479 Move X8, [X20]
	480 Move X0, X20
	481 Move X0, X21
	482 Call 0x1C181E0

Method: System.Boolean GetParentTypes(System.RuntimeType parentType, out System.RuntimeType[] parentTypes, out System.Int32 parentTypeCount)

Disassembly:
	0x032A2148 LDR X8, [X26]
	0x032A214C LDRB W11, [X9 + 0x130]
	0x032A2150 LDRB W10, [X8 + 0x130]
	0x032A2154 CMP W11, W10
	0x032A2158 B.CS 0x32A2174
	0x032A215C MOV X0, X31
	0x032A2160 MOV X1, X31
	0x032A2164 MOV X2, X31
	0x032A2168 BL 0x32CCED4
	0x032A216C TBZ X0, 0x0, 0x32A21D8
	0x032A2170 B 0x32A2254
	0x032A2174 LDR X9, [X9 + 0xC8]
	0x032A2178 MOV X1, X31
	0x032A217C MOV X2, X31
	0x032A2180 ADD X9, X9, X10, 0x3, LSL
	0x032A2184 LDUR X9, [X9 - 0x8]
	0x032A2188 CMP X9, X8
	0x032A218C CSEL X24, X23, X31, EQ
	0x032A2190 MOV X0, X24
	0x032A2194 BL 0x32CCED4
	0x032A2198 TBZ X0, 0x0, 0x32A21D8
	0x032A219C CBZ X24, 0x32A2254
	0x032A21A0 LDR X8, [X24]
	0x032A21A4 MOV X0, X24
	0x032A21A8 MOV X1, X20
	0x032A21AC LDR X9, [X8 + 0x348]
	0x032A21B0 LDR X2, [X8 + 0x350]
	0x032A21B4 BLR X9
	0x032A21B8 LDR X8, [X24]
	0x032A21BC MOV X0, X24
	0x032A21C0 MOV X1, X20
	0x032A21C4 LDR X9, [X8 + 0x328]
	0x032A21C8 LDR X2, [X8 + 0x330]
	0x032A21CC BLR X9
	0x032A21D0 CBNZ X22, 0x32A21F8
	0x032A21D4 B 0x32A2254
	0x032A21D8 LDR X1, [X27]
	0x032A21DC LDR X8, [X23]
	0x032A21E0 MOV X0, X23
	0x032A21E4 CMP X8, X1
	0x032A21E8 B.NE 0x32A2354
	0x032A21EC MOV X1, X20
	0x032A21F0 BL 0x32A23CC
	0x032A21F4 CBZ X22, 0x32A2254
	0x032A21F8 MOV X23, X0
	0x032A21FC CBZ X0, 0x32A2214
	0x032A2200 LDR X8, [X22]
	0x032A2204 MOV X0, X23
	0x032A2208 LDR X1, [X8 + 0x40]
	0x032A220C BL 0x1C16E00
	0x032A2210 CBZ X0, 0x32A2358
	0x032A2214 LDR W8, [X22 + 0x18]
	0x032A2218 CMP W25, W8
	0x032A221C B.CS 0x32A2258
	0x032A2220 ADD W25, W25, 0x1
	0x032A2224 ADD X8, X22, X28, 0x3, LSL
	0x032A2228 CMP W21, W25
	0x032A222C STR X23, [X8 + 0x20]
	0x032A2230 B.NE 0x32A20FC
	0x032A2234 MOV X0, X22
	0x032A2238 LDP X20, X19, [X31 + 0x50]
	0x032A223C LDP X22, X21, [X31 + 0x40]
	0x032A2240 LDP X24, X23, [X31 + 0x30]
	0x032A2244 LDP X26, X25, [X31 + 0x20]
	0x032A2248 LDP X28, X27, [X31 + 0x10]
	0x032A224C LDR X30, [X31], #0x60
	0x032A2250 RET
	0x032A2254 BL 0x1C16F20
	0x032A2258 BL 0x1C16F28
	0x032A225C ADRP X0, 0xE51000
	0x032A2260 LDR X0, [X0 + 0x9D0]
	0x032A2264 BL 0x1C16D08
	0x032A2268 MOVZ W1, 0x1
	0x032A226C BL 0x1C16D6C
	0x032A2270 MOV X19, X0
	0x032A2274 STR W25, [X31 + 0xC]
	0x032A2278 ADRP X0, 0xE51000
	0x032A227C LDR X0, [X0 + 0x758]
	0x032A2280 BL 0x1C16D08
	0x032A2284 ADD X1, X31, 0xC
	0x032A2288 BL 0x1C16E04
	0x032A228C MOV X20, X0
	0x032A2290 MOV X0, X19
	0x032A2294 BL 0x19903C0
	0x032A2298 MOV X0, X19
	0x032A229C MOV X1, X20
	0x032A22A0 BL 0x19980B4
	0x032A22A4 MOV X0, X19
	0x032A22A8 MOV X1, X31
	0x032A22AC MOV X2, X20
	0x032A22B0 BL 0x1993444
	0x032A22B4 ADRP X0, 0xE82000
	0x032A22B8 LDR X0, [X0 + 0xC38]
	0x032A22BC BL 0x1C16D08
	0x032A22C0 MOV X1, X19
	0x032A22C4 MOV X2, X31
	0x032A22C8 BL 0x33BFB40
	0x032A22CC MOV X19, X0
	0x032A22D0 ADRP X0, 0xE56000
	0x032A22D4 LDR X0, [X0 + 0x528]
	0x032A22D8 BL 0x1C16D08
	0x032A22DC BL 0x1C16F10
	0x032A22E0 MOV X20, X0
	0x032A22E4 ADRP X0, 0xE82000
	0x032A22E8 LDR X0, [X0 + 0xC40]
	0x032A22EC BL 0x1C16D08
	0x032A22F0 MOV X1, X0
	0x032A22F4 MOV X0, X20
	0x032A22F8 MOV X2, X19
	0x032A22FC MOV X3, X31
	0x032A2300 BL 0x3315F7C
	0x032A2304 B 0x32A233C
	0x032A2308 ADRP X0, 0xE82000
	0x032A230C LDR X0, [X0 + 0xC48]
	0x032A2310 BL 0x1C16D08
	0x032A2314 MOV X1, X31
	0x032A2318 BL 0x33BDD84
	0x032A231C MOV X19, X0
	0x032A2320 ADRP X0, 0xE7B000
	0x032A2324 LDR X0, [X0 + 0x2E0]
	0x032A2328 BL 0x1C16D08
	0x032A232C BL 0x1C16F10
	0x032A2330 MOV X1, X19
	0x032A2334 MOV X20, X0
	0x032A2338 BL 0x329F100
	0x032A233C ADRP X0, 0xE82000
	0x032A2340 LDR X0, [X0 + 0xC60]
	0x032A2344 BL 0x1C16D08
	0x032A2348 MOV X1, X0
	0x032A234C MOV X0, X20
	0x032A2350 BL 0x1C16DEC
	0x032A2354 BL 0x1C171E0
	0x032A2358 BL 0x1C16F44
	0x032A235C MOV X1, X31
	0x032A2360 BL 0x1C16DEC
	0x032A2364 ADRP X0, 0xE56000
	0x032A2368 LDR X0, [X0 + 0x528]
	0x032A236C BL 0x1C16D08
	0x032A2370 BL 0x1C16F10
	0x032A2374 MOV X19, X0
	0x032A2378 ADRP X0, 0xE5C000
	0x032A237C LDR X0, [X0 + 0x8A8]
	0x032A2380 B 0x32A23A0
	0x032A2384 ADRP X0, 0xE56000
	0x032A2388 LDR X0, [X0 + 0x528]
	0x032A238C BL 0x1C16D08
	0x032A2390 BL 0x1C16F10
	0x032A2394 MOV X19, X0
	0x032A2398 ADRP X0, 0xE82000
	0x032A239C LDR X0, [X0 + 0xC40]
	0x032A23A0 BL 0x1C16D08
	0x032A23A4 MOV X1, X0
	0x032A23A8 MOV X0, X19
	0x032A23AC MOV X2, X31
	0x032A23B0 BL 0x330E100
	0x032A23B4 ADRP X0, 0xE82000
	0x032A23B8 LDR X0, [X0 + 0xC60]
	0x032A23BC BL 0x1C16D08
	0x032A23C0 MOV X1, X0
	0x032A23C4 MOV X0, X19
	0x032A23C8 BL 0x1C16DEC
	0x032A23CC STP X30, X21, [X31 - 0x20]!
	0x032A23D0 STP X20, X19, [X31 + 0x10]
	0x032A23D4 LDR X20, [X0 + 0x10]
	0x032A23D8 MOV X21, X0
	0x032A23DC MOV X19, X1
	0x032A23E0 MOV X1, X31
	0x032A23E4 MOV X0, X20
	0x032A23E8 MOV X2, X31
	0x032A23EC BL 0x32CCED4
	0x032A23F0 TBZ X0, 0x0, 0x32A2424
	0x032A23F4 CBZ X20, 0x32A2448
	0x032A23F8 LDR X8, [X20]
	0x032A23FC MOV X0, X20
	0x032A2400 MOV X1, X19
	0x032A2404 LDR X9, [X8 + 0x348]
	0x032A2408 LDR X2, [X8 + 0x350]
	0x032A240C BLR X9
	0x032A2410 LDR X8, [X20]
	0x032A2414 MOV X0, X20
	0x032A2418 LDR X3, [X8 + 0x328]
	0x032A241C LDR X2, [X8 + 0x330]
	0x032A2420 B 0x32A2438
	0x032A2424 LDR X0, [X21 + 0x10]
	0x032A2428 CBZ X0, 0x32A2448
	0x032A242C LDR X8, [X0]
	0x032A2430 LDR X3, [X8 + 0x2C8]
	0x032A2434 LDR X2, [X8 + 0x2D0]
	0x032A2438 MOV X1, X19
	0x032A243C LDP X20, X19, [X31 + 0x10]
	0x032A2440 LDP X30, X21, [X31], #0x20
	0x032A2444 BR X3
	0x032A2448 BL 0x1C16F20
	0x032A244C STR X30, [X31 - 0x20]!
	0x032A2450 STP X20, X19, [X31 + 0x10]
	0x032A2454 MOV X19, X1
	0x032A2458 MOV X1, X31
	0x032A245C MOV X2, X31
	0x032A2460 MOV X20, X0
	0x032A2464 BL 0x32D5BF8
	0x032A2468 TBNZ X0, 0x0, 0x32A2498
	0x032A246C CBZ X20, 0x32A24E0
	0x032A2470 LDR X8, [X20]
	0x032A2474 MOV X0, X20
	0x032A2478 MOV X1, X19
	0x032A247C LDP X20, X19, [X31 + 0x10]
	0x032A2480 LDR X5, [X8 + 0x278]
	0x032A2484 LDR X4, [X8 + 0x280]
	0x032A2488 MOV W2, W31
	0x032A248C MOV W3, W31
	0x032A2490 LDR X30, [X31], #0x20
	0x032A2494 BR X5
	0x032A2498 ADRP X0, 0xE56000
	0x032A249C LDR X0, [X0 + 0x528]
	0x032A24A0 BL 0x1C16D08
	0x032A24A4 BL 0x1C16F10
	0x032A24A8 MOV X19, X0
	0x032A24AC ADRP X0, 0xE82000
	0x032A24B0 LDR X0, [X0 + 0xC68]
	0x032A24B4 BL 0x1C16D08
	0x032A24B8 MOV X1, X0
	0x032A24BC MOV X0, X19
	0x032A24C0 MOV X2, X31
	0x032A24C4 BL 0x330E100
	0x032A24C8 ADRP X0, 0xE82000
	0x032A24CC LDR X0, [X0 + 0xC70]
	0x032A24D0 BL 0x1C16D08
	0x032A24D4 MOV X1, X0
	0x032A24D8 MOV X0, X19
	0x032A24DC BL 0x1C16DEC
	0x032A24E0 BL 0x1C16F20
	0x032A24E4 MOV X1, X31
	0x032A24E8 B 0x32D59A8
	0x032A24EC STP X30, X21, [X31 - 0x20]!
	0x032A24F0 STP X20, X19, [X31 + 0x10]
	0x032A24F4 ADRP X20, 0x113A000
	0x032A24F8 ADRP X21, 0xE82000
	0x032A24FC LDRB W8, [X20 + 0x772]
	0x032A2500 LDR X21, [X21 + 0xB70]
	0x032A2504 MOV X19, X0
	0x032A2508 TBNZ X8, 0x0, 0x32A2520
	0x032A250C ADRP X0, 0xE82000
	0x032A2510 LDR X0, [X0 + 0xB70]
	0x032A2514 BL 0x1C16CF4
	0x032A2518 MOVZ W8, 0x1
	0x032A251C STRB W8, [X20 + 0x772]
	0x032A2520 LDR X0, [X21]
	0x032A2524 LDR W8, [X0 + 0xE0]
	0x032A2528 CBNZ W8, 0x32A2530
	0x032A252C BL 0x1C16DFC
	0x032A2530 MOV X0, X19
	0x032A2534 MOV X1, X31
	0x032A2538 BL 0x32D59A8
	0x032A253C LDP X20, X19, [X31 + 0x10]
	0x032A2540 LDP X30, X21, [X31], #0x20

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move [X31+8], X0
	015 Move X23, 0x113B000
	016 Move X19, 0xE5C000
	017 Move X22, 0xE52000
	018 Move W8, [X23+1899]
	019 Move X19, [X19+2408]
	020 Move X22, [X22+1728]
	021 Move X20, X2
	022 Move X21, X1
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {44}
	027 Move X0, 0xE52000
	028 Move X0, [X0+1448]
	029 Call 0x1C17CF4
	030 Move X0, 0xE5C000
	031 Move X0, [X0+2408]
	032 Call 0x1C17CF4
	033 Move X0, 0xE83000
	034 Move X0, [X0+3024]
	035 Call 0x1C17CF4
	036 Move X0, 0xE7B000
	037 Move X0, [X0+1256]
	038 Call 0x1C17CF4
	039 Move X0, 0xE52000
	040 Move X0, [X0+1728]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X23+1899], W8
	044 Move [X21], X31
	045 Move [X20], W31
	046 Move X0, [X22]
	047 Move X26, 0xE7B000
	048 Move X22, [X19]
	049 Move W8, [X0+224]
	050 Move X26, [X26+1256]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move X0, X22
	055 Move X1, X31
	056 Call Type.GetTypeFromHandle, X0
	057 Move X1, [X26]
	058 Move X22, X0
	059 Compare X0, 0
	060 JumpIfEqual {69}
	061 Move X8, [X22]
	062 Move W9, [X1+304]
	063 Move W10, [X8+304]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X8, [X8+200]
	066 Add X8, X8, X9
	067 NotImplemented "Instruction LDUR not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X28, 0xE83000
	070 Move X28, [X28+3024]
	071 Move X23, [X31+8]
	072 Move W25, 1
	073 Move W8, [X1+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {78}
	076 Move X0, X1
	077 Call 0x1C17DFC
	078 Move X0, X23
	079 Move X1, X22
	080 Move X2, X31
	081 Call RuntimeType.op_Inequality, X0, X1
	082 Move TEMP, X0
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfNotEqual {239}
	086 Move X0, [X26]
	087 Move W8, [X0+224]
	088 Compare W8, 0
	089 JumpIfNotEqual {91}
	090 Call 0x1C17DFC
	091 Move X0, X23
	092 Move X1, X31
	093 Move X2, X31
	094 Call RuntimeType.op_Equality, X0, X1
	095 Move TEMP, X0
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfEqual {256}
	099 Compare X23, 0
	100 JumpIfEqual {254}
	101 Move X0, X23
	102 Move X1, X31
	103 Call Type.get_IsInterface, X0
	104 Move TEMP, X0
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfEqual {220}
	108 Move X8, [X23]
	109 Move X0, X23
	110 Move X9, [X8+424]
	111 Move X1, [X8+432]
	112 NotImplemented "Instruction BLR not yet implemented."
	113 Move TEMP, X25
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfNotEqual {167}
	117 Move W8, [X20]
	118 NotImplemented "Instruction CMP not yet implemented."
	119 NotImplemented "Instruction CSET not yet implemented."
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move X24, X0
	122 Move W19, W31
	123 Move X8, [X21]
	124 Compare X8, 0
	125 JumpIfEqual {254}
	126 Move W9, [X8+24]
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Add X8, X8, W19
	129 Move X0, [X8+32]
	130 Compare X0, 0
	131 JumpIfEqual {254}
	132 Move X8, [X0]
	133 Move X9, [X8+424]
	134 Move X1, [X8+432]
	135 NotImplemented "Instruction BLR not yet implemented."
	136 Compare X0, 0
	137 JumpIfEqual {254}
	138 Compare X24, 0
	139 JumpIfEqual {254}
	140 Move W8, [X0+16]
	141 Move W9, [X24+16]
	142 Move X25, X0
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move X0, X25
	145 Move W1, W31
	146 Move X2, X31
	147 Call String.get_Chars, X0, X1
	148 And W27, W0, 0xFFFF
	149 Move X0, X24
	150 Move W1, W31
	151 Move X2, X31
	152 Call String.get_Chars, X0, X1
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move X0, X24
	155 Move X1, X25
	156 Move X2, X31
	157 Call String.op_Equality, X0, X1
	158 Move TEMP, X0
	159 And TEMP, TEMP, 1
	160 Compare TEMP, 1
	161 JumpIfEqual {166}
	162 Move W8, [X20]
	163 Add W19, W19, 1
	164 NotImplemented "Instruction CMP not yet implemented."
	165 NotImplemented "Instruction CSET not yet implemented."
	166 Xor W25, W29, 1
	167 Move W25, W31
	168 Move X24, [X21]
	169 Move W19, [X20]
	170 Compare X24, 0
	171 JumpIfEqual {174}
	172 Move W8, [X24+24]
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Move X8, 0xE52000
	175 Move X8, [X8+1448]
	176 Move X0, [X8]
	177 Move W8, [X0+224]
	178 Compare W8, 0
	179 JumpIfNotEqual {181}
	180 Call 0x1C17DFC
	181 Move W0, W19
	182 ShiftRight W0, 31
	183 And W0, W0, 0x3FFFFFFF
	184 Move W1, 12
	185 Move X2, X31
	186 Call Math.Max, X0, X1
	187 Move X8, [X28]
	188 Move W1, W0
	189 Move X0, X8
	190 Call 0x1C17D6C
	191 Move X8, [X21]
	192 Move X24, X0
	193 Compare X8, 0
	194 JumpIfEqual {202}
	195 Move W4, [X20]
	196 Move X0, X8
	197 Move W1, W31
	198 Move X2, X24
	199 Move W3, W31
	200 Move X5, X31
	201 Call Array.Copy, X0, X1, X2, X3, X4
	202 Move [X21], X24
	203 Move W19, [X20]
	204 Add W8, W19, 1
	205 Move [X20], W8
	206 Compare X24, 0
	207 JumpIfNotEqual {210}
	208 Add W8, W19, 1
	209 Move [X20], W8
	210 Move X8, [X24]
	211 Move X0, X23
	212 Move X1, [X8+64]
	213 Call 0x1C17E00
	214 Compare X0, 0
	215 JumpIfEqual {264}
	216 Move W8, [X24+24]
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Add X8, X24, W19
	219 Move [X8+32], X23
	220 Move X8, [X23]
	221 Move X0, X23
	222 Move X9, [X8+2072]
	223 Move X1, [X8+2080]
	224 NotImplemented "Instruction BLR not yet implemented."
	225 Move X1, [X26]
	226 Move X23, X0
	227 Compare X0, 0
	228 JumpIfEqual {73}
	229 Move X8, [X23]
	230 Move W9, [X1+304]
	231 Move W10, [X8+304]
	232 NotImplemented "Instruction CMP not yet implemented."
	233 Move X8, [X8+200]
	234 Add X8, X8, X9
	235 NotImplemented "Instruction LDUR not yet implemented."
	236 NotImplemented "Instruction CMP not yet implemented."
	237 Move X0, X23
	238 Call 0x1C181E0
	239 And W0, W25, 1
	240 Move X20, [X31+96]
	241 Move X19, [X31+104]
	242 Move X22, [X31+80]
	243 Move X21, [X31+88]
	244 Move X24, [X31+64]
	245 Move X23, [X31+72]
	246 Move X26, [X31+48]
	247 Move X25, [X31+56]
	248 Move X28, [X31+32]
	249 Move X27, [X31+40]
	250 Move X29, [X31+16]
	251 Move X30, [X31+24]
	252 Add X31, X31, 112
	253 Return X0
	254 Call 0x1C17F20
	255 Call 0x1C17F28
	256 Move X0, 0xE83000
	257 Move X0, [X0+3032]
	258 Call 0x1C17D08
	259 Move X8, [X31+8]
	260 Move X20, X0
	261 Compare X8, 0
	262 JumpIfNotEqual {267}
	263 Move X2, X31
	264 Call 0x1C17F44
	265 Move X1, X31
	266 Call 0x1C17DEC
	267 Move X0, [X31+8]
	268 Move X1, X31
	269 Call Type.GetType, X0
	270 Move X2, X0
	271 Move X1, [X31+8]
	272 Move X0, X20
	273 Move X3, X31
	274 Call String.Format, X0, X1, X2
	275 Move X19, X0
	276 Move X0, 0xE52000
	277 Move X0, [X0+1456]
	278 Call 0x1C17D08
	279 Call 0x1C17F10
	280 Move X1, X19
	281 Move X2, X31
	282 Move X20, X0
	283 Call InvalidOperationException..ctor, X0, X1
	284 Move X0, 0xE83000
	285 Move X0, [X0+3040]
	286 Call 0x1C17D08
	287 Move X1, X0
	288 Move X0, X20
	289 Call 0x1C17DEC
	290 Move X0, X22
	291 Call 0x1C181E0

Method: System.Reflection.MemberInfo[] GetSerializableMembers(System.Type type, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x032A25D4 MOV X20, X0
	0x032A25D8 TBNZ X8, 0x0, 0x32A2608
	0x032A25DC ADRP X0, 0xE82000
	0x032A25E0 LDR X0, [X0 + 0xC78]
	0x032A25E4 BL 0x1C16CF4
	0x032A25E8 ADRP X0, 0xE82000
	0x032A25EC LDR X0, [X0 + 0xC80]
	0x032A25F0 BL 0x1C16CF4
	0x032A25F4 ADRP X0, 0xE51000
	0x032A25F8 LDR X0, [X0 + 0x6C0]
	0x032A25FC BL 0x1C16CF4
	0x032A2600 MOVZ W8, 0x1
	0x032A2604 STRB W8, [X21 + 0x773]
	0x032A2608 CBZ X20, 0x32A26D4
	0x032A260C ADRP X8, 0xE51000
	0x032A2610 LDR X8, [X8 + 0x6C0]
	0x032A2614 LDR X0, [X8]
	0x032A2618 ADRP X8, 0xE82000
	0x032A261C LDR X8, [X8 + 0xC78]
	0x032A2620 LDR W9, [X0 + 0xE0]
	0x032A2624 LDR X21, [X8]
	0x032A2628 CBNZ W9, 0x32A2630
	0x032A262C BL 0x1C16DFC
	0x032A2630 MOV X0, X21
	0x032A2634 MOV X1, X31
	0x032A2638 BL 0x338C698
	0x032A263C LDR X8, [X20]
	0x032A2640 MOV X1, X0
	0x032A2644 MOV X0, X20
	0x032A2648 MOV W2, W31
	0x032A264C LDR X9, [X8 + 0x208]
	0x032A2650 LDR X3, [X8 + 0x210]
	0x032A2654 BLR X9
	0x032A2658 CBZ X0, 0x32A26A4
	0x032A265C LDR X8, [X0 + 0x18]
	0x032A2660 CBZ X8, 0x32A26A4
	0x032A2664 MOVZ W8, 0x1
	0x032A2668 STRB W8, [X19]
	0x032A266C LDR W8, [X0 + 0x18]
	0x032A2670 CBZ W8, 0x32A2720
	0x032A2674 LDR X0, [X0 + 0x20]
	0x032A2678 CBZ X0, 0x32A271C
	0x032A267C ADRP X8, 0xE82000
	0x032A2680 LDR X8, [X8 + 0xC80]
	0x032A2684 LDR X1, [X8]
	0x032A2688 LDR X8, [X0]
	0x032A268C CMP X8, X1
	0x032A2690 B.NE 0x32A2724
	0x032A2694 LDR X0, [X0 + 0x10]
	0x032A2698 LDP X20, X19, [X31 + 0x10]
	0x032A269C LDP X30, X21, [X31], #0x20
	0x032A26A0 RET
	0x032A26A4 STRB W31, [X19]
	0x032A26A8 LDR X8, [X20]
	0x032A26AC MOV X0, X20
	0x032A26B0 LDR X9, [X8 + 0x2F8]
	0x032A26B4 LDR X1, [X8 + 0x300]
	0x032A26B8 BLR X9
	0x032A26BC CBZ X0, 0x32A271C
	0x032A26C0 LDR X8, [X0]
	0x032A26C4 LDP X20, X19, [X31 + 0x10]
	0x032A26C8 LDP X2, X1, [X8 + 0x1B8]
	0x032A26CC LDP X30, X21, [X31], #0x20
	0x032A26D0 BR X2
	0x032A26D4 ADRP X0, 0xE56000
	0x032A26D8 LDR X0, [X0 + 0x528]
	0x032A26DC BL 0x1C16D08
	0x032A26E0 BL 0x1C16F10
	0x032A26E4 MOV X19, X0
	0x032A26E8 ADRP X0, 0xE59000
	0x032A26EC LDR X0, [X0 + 0x5E8]
	0x032A26F0 BL 0x1C16D08
	0x032A26F4 MOV X1, X0
	0x032A26F8 MOV X0, X19
	0x032A26FC MOV X2, X31
	0x032A2700 BL 0x330E100
	0x032A2704 ADRP X0, 0xE82000
	0x032A2708 LDR X0, [X0 + 0xC88]
	0x032A270C BL 0x1C16D08
	0x032A2710 MOV X1, X0
	0x032A2714 MOV X0, X19
	0x032A2718 BL 0x1C16DEC
	0x032A271C BL 0x1C16F20
	0x032A2720 BL 0x1C16F28
	0x032A2724 BL 0x1C171E0
	0x032A2728 STR X30, [X31 - 0x20]!
	0x032A272C STP X20, X19, [X31 + 0x10]
	0x032A2730 ADRP X20, 0x113A000
	0x032A2734 LDRB W8, [X20 + 0x774]
	0x032A2738 MOV X19, X0
	0x032A273C TBNZ X8, 0x0, 0x32A2754
	0x032A2740 ADRP X0, 0xE82000
	0x032A2744 LDR X0, [X0 + 0xB70]
	0x032A2748 BL 0x1C16CF4
	0x032A274C MOVZ W8, 0x1
	0x032A2750 STRB W8, [X20 + 0x774]
	0x032A2754 CBZ X19, 0x32A27A4
	0x032A2758 ADRP X20, 0xE82000
	0x032A275C LDR X20, [X20 + 0xB70]
	0x032A2760 MOV X0, X19
	0x032A2764 MOV X1, X31
	0x032A2768 BL 0x3396BF8
	0x032A276C LDR X8, [X20]
	0x032A2770 MOV W20, W0
	0x032A2774 LDR W9, [X8 + 0xE0]
	0x032A2778 CBNZ W9, 0x32A2784
	0x032A277C MOV X0, X8
	0x032A2780 BL 0x1C16DFC
	0x032A2784 MOV X0, X19
	0x032A2788 TBZ X20, 0x0, 0x32A2798
	0x032A278C LDP X20, X19, [X31 + 0x10]
	0x032A2790 LDR X30, [X31], #0x20
	0x032A2794 B 0x32A27A8
	0x032A2798 LDP X20, X19, [X31 + 0x10]
	0x032A279C LDR X30, [X31], #0x20
	0x032A27A0 B 0x32A29CC
	0x032A27A4 BL 0x1C16F20
	0x032A27A8 STR X30, [X31 - 0x30]!
	0x032A27AC STP X22, X21, [X31 + 0x10]
	0x032A27B0 STP X20, X19, [X31 + 0x20]
	0x032A27B4 ADRP X20, 0x113A000
	0x032A27B8 LDRB W8, [X20 + 0x775]
	0x032A27BC MOV X19, X0
	0x032A27C0 TBNZ X8, 0x0, 0x32A282C
	0x032A27C4 ADRP X0, 0xE53000
	0x032A27C8 LDR X0, [X0 + 0xC48]
	0x032A27CC BL 0x1C16CF4
	0x032A27D0 ADRP X0, 0xE82000
	0x032A27D4 LDR X0, [X0 + 0xB70]
	0x032A27D8 BL 0x1C16CF4
	0x032A27DC ADRP X0, 0xE51000
	0x032A27E0 LDR X0, [X0 + 0x8F0]
	0x032A27E4 BL 0x1C16CF4
	0x032A27E8 ADRP X0, 0xE79000
	0x032A27EC LDR X0, [X0 + 0xA98]
	0x032A27F0 BL 0x1C16CF4
	0x032A27F4 ADRP X0, 0xE82000
	0x032A27F8 LDR X0, [X0 + 0xC90]
	0x032A27FC BL 0x1C16CF4
	0x032A2800 ADRP X0, 0xE53000
	0x032A2804 LDR X0, [X0 + 0x3A0]
	0x032A2808 BL 0x1C16CF4
	0x032A280C ADRP X0, 0xE51000
	0x032A2810 LDR X0, [X0 + 0xEC8]
	0x032A2814 BL 0x1C16CF4
	0x032A2818 ADRP X0, 0xE51000
	0x032A281C LDR X0, [X0 + 0x848]
	0x032A2820 BL 0x1C16CF4
	0x032A2824 MOVZ W8, 0x1
	0x032A2828 STRB W8, [X20 + 0x775]
	0x032A282C CBZ X19, 0x32A29C8
	0x032A2830 LDR X8, [X19]
	0x032A2834 MOV X0, X19
	0x032A2838 LDR X9, [X8 + 0x438]
	0x032A283C LDR X1, [X8 + 0x440]
	0x032A2840 BLR X9
	0x032A2844 SUBS W22, W0, 0x1
	0x032A2848 B.NE 0x32A28E0
	0x032A284C ADRP X8, 0xE53000
	0x032A2850 LDR X8, [X8 + 0xC48]
	0x032A2854 LDR X0, [X8]
	0x032A2858 LDR W8, [X0 + 0xE0]
	0x032A285C CBNZ W8, 0x32A2864

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x113B000
	011 Move X23, 0xE83000
	012 Move W8, [X21+1900]
	013 Move X23, [X23+3048]
	014 Move X19, X2
	015 Move X20, X1
	016 Move X22, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {44}
	021 Move X0, 0xE83000
	022 Move X0, [X0+3056]
	023 Call 0x1C17CF4
	024 Move X0, 0xE83000
	025 Move X0, [X0+2928]
	026 Call 0x1C17CF4
	027 Move X0, 0xE83000
	028 Move X0, [X0+3064]
	029 Call 0x1C17CF4
	030 Move X0, 0xE83000
	031 Move X0, [X0+2672]
	032 Call 0x1C17CF4
	033 Move X0, 0xE7B000
	034 Move X0, [X0+1256]
	035 Call 0x1C17CF4
	036 Move X0, 0xE83000
	037 Move X0, [X0+3072]
	038 Call 0x1C17CF4
	039 Move X0, 0xE83000
	040 Move X0, [X0+3048]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X21+1900], W8
	044 Move X0, [X23]
	045 Call 0x1C17F10
	046 Move X1, X31
	047 Move X21, X0
	048 Call Object..ctor, X0
	049 Compare X21, 0
	050 JumpIfEqual {161}
	051 Move [X21+16], X22
	052 Compare X22, 0
	053 JumpIfEqual {162}
	054 Move X8, 0xE7B000
	055 Move X8, [X8+1256]
	056 Move X9, [X22]
	057 Move X8, [X8]
	058 Move W11, [X9+304]
	059 Move W10, [X8+304]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X9, [X9+200]
	062 Add X9, X9, X10
	063 NotImplemented "Instruction LDUR not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X8, 0xE83000
	066 Move X8, [X8+2672]
	067 Move X26, 0xE83000
	068 Move X25, 0xE83000
	069 Move X24, 0xE83000
	070 Move X0, [X8]
	071 Move X26, [X26+2928]
	072 Move X25, [X25+3064]
	073 Move X24, [X24+3072]
	074 Call 0x1C17F10
	075 Move X1, X31
	076 Move X23, X0
	077 Call Object..ctor, X0
	078 Move [X23+16], X22
	079 Move [X23+24], X20
	080 Move [X23+32], X19
	081 Move X0, [X26]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {87}
	085 Call 0x1C17DFC
	086 Move X0, [X26]
	087 Move X8, [X0+184]
	088 Move X0, [X25]
	089 Move X19, [X8]
	090 Call 0x1C17F10
	091 Move X2, [X24]
	092 Move X1, X21
	093 Move X3, X31
	094 Move X20, X0
	095 Call Func`2<Object, Object>..ctor, X0, X1, X2
	096 Compare X19, 0
	097 JumpIfEqual {161}
	098 Move X8, 0xE83000
	099 Move X8, [X8+3056]
	100 Move X0, X19
	101 Move X1, X23
	102 Move X2, X20
	103 Move X3, [X8]
	104 Move X20, [X31+64]
	105 Move X19, [X31+72]
	106 Move X22, [X31+48]
	107 Move X21, [X31+56]
	108 Move X24, [X31+32]
	109 Move X23, [X31+40]
	110 Move X26, [X31+16]
	111 Move X25, [X31+24]
	112 Move X30, [X31+80]
	113 Call ConcurrentDictionary`2<Object, Object>.GetOrAdd, X0, X1, X2
	114 Return X0
	115 Move X0, 0xE52000
	116 Move X0, [X0+2512]
	117 Call 0x1C17D08
	118 Move W1, 1
	119 Call 0x1C17D6C
	120 Move X19, X0
	121 Move X0, X21
	122 Call 0x19913C0
	123 Move X20, [X21+16]
	124 Move X0, X20
	125 Call 0x19913C0
	126 Move X8, [X20]
	127 Move X0, X20
	128 Move X9, [X8+360]
	129 Move X1, [X8+368]
	130 NotImplemented "Instruction BLR not yet implemented."
	131 Move X20, X0
	132 Move X0, X19
	133 Call 0x19913C0
	134 Move X0, X19
	135 Move X1, X20
	136 Call 0x19990B4
	137 Move X0, X19
	138 Move X1, X31
	139 Move X2, X20
	140 Call 0x1994444
	141 Move X0, 0xE83000
	142 Move X0, [X0+3080]
	143 Call 0x1C17D08
	144 Move X1, X19
	145 Move X2, X31
	146 Call Environment.GetResourceString, X0, X1
	147 Move X19, X0
	148 Move X0, 0xE7C000
	149 Move X0, [X0+736]
	150 Call 0x1C17D08
	151 Call 0x1C17F10
	152 Move X1, X19
	153 Move X20, X0
	154 Call SerializationException..ctor, X0, X1
	155 Move X0, 0xE83000
	156 Move X0, [X0+3088]
	157 Call 0x1C17D08
	158 Move X1, X0
	159 Move X0, X20
	160 Call 0x1C17DEC
	161 Call 0x1C17F20
	162 Move X0, 0xE57000
	163 Move X0, [X0+1320]
	164 Call 0x1C17D08
	165 Call 0x1C17F10
	166 Move X19, X0
	167 Move X0, 0xE5A000
	168 Move X0, [X0+1512]
	169 Call 0x1C17D08
	170 Move X1, X0
	171 Move X0, X19
	172 Move X2, X31
	173 Call ArgumentNullException..ctor, X0, X1
	174 Move X0, 0xE83000
	175 Move X0, [X0+3088]
	176 Call 0x1C17D08
	177 Move X1, X0
	178 Move X0, X19
	179 Call 0x1C17DEC

Method: System.Object GetUninitializedObject(System.Type type)

Disassembly:
	0x032A2868 BL 0x3338524
	0x032A286C LDR X8, [X19]
	0x032A2870 MOV X20, X0
	0x032A2874 MOV X0, X19
	0x032A2878 LDR X9, [X8 + 0x428]
	0x032A287C LDR X1, [X8 + 0x430]
	0x032A2880 BLR X9
	0x032A2884 ADRP X8, 0xE82000
	0x032A2888 LDR X8, [X8 + 0xB70]
	0x032A288C MOV X19, X0
	0x032A2890 LDR X8, [X8]
	0x032A2894 LDR W9, [X8 + 0xE0]
	0x032A2898 CBNZ W9, 0x32A28A4
	0x032A289C MOV X0, X8
	0x032A28A0 BL 0x1C16DFC
	0x032A28A4 MOV X0, X19
	0x032A28A8 BL 0x32A2728
	0x032A28AC ADRP X8, 0xE79000
	0x032A28B0 ADRP X9, 0xE82000
	0x032A28B4 LDR X8, [X8 + 0xA98]
	0x032A28B8 LDR X9, [X9 + 0xC90]
	0x032A28BC MOV X2, X0
	0x032A28C0 MOV X0, X20
	0x032A28C4 LDR X1, [X8]
	0x032A28C8 LDR X3, [X9]
	0x032A28CC LDP X20, X19, [X31 + 0x20]
	0x032A28D0 LDP X22, X21, [X31 + 0x10]
	0x032A28D4 MOV X4, X31
	0x032A28D8 LDR X30, [X31], #0x30
	0x032A28DC B 0x3227D58
	0x032A28E0 LDR X8, [X19]
	0x032A28E4 MOV W20, W0
	0x032A28E8 MOV X0, X19
	0x032A28EC LDR X9, [X8 + 0x428]
	0x032A28F0 LDR X1, [X8 + 0x430]
	0x032A28F4 BLR X9
	0x032A28F8 ADRP X8, 0xE82000
	0x032A28FC LDR X8, [X8 + 0xB70]
	0x032A2900 MOV X19, X0
	0x032A2904 LDR X8, [X8]
	0x032A2908 LDR W9, [X8 + 0xE0]
	0x032A290C CBNZ W9, 0x32A2918
	0x032A2910 MOV X0, X8
	0x032A2914 BL 0x1C16DFC
	0x032A2918 MOV X0, X19
	0x032A291C BL 0x32A2728
	0x032A2920 ADRP X8, 0xE51000
	0x032A2924 LDR X8, [X8 + 0x8F0]
	0x032A2928 MOV X21, X0
	0x032A292C LDR X8, [X8]
	0x032A2930 MOV X0, X8
	0x032A2934 BL 0x1C16F10
	0x032A2938 MOV X1, X21
	0x032A293C MOV X2, X31
	0x032A2940 MOV X19, X0
	0x032A2944 BL 0x3231CF8
	0x032A2948 CBZ X19, 0x32A29C8
	0x032A294C ADRP X8, 0xE51000
	0x032A2950 LDR X8, [X8 + 0xEC8]
	0x032A2954 MOV X0, X19
	0x032A2958 MOV X2, X31
	0x032A295C LDR X1, [X8]
	0x032A2960 BL 0x32333E0
	0x032A2964 CBZ X0, 0x32A29C8
	0x032A2968 MOV X19, X0
	0x032A296C CMP W20, 0x2
	0x032A2970 B.LT 0x32A2994
	0x032A2974 ADRP X20, 0xE53000
	0x032A2978 LDR X20, [X20 + 0x3A0]
	0x032A297C LDR X1, [X20]
	0x032A2980 MOV X0, X19
	0x032A2984 MOV X2, X31
	0x032A2988 BL 0x32333E0
	0x032A298C SUBS W22, W22, 0x1
	0x032A2990 B.NE 0x32A297C
	0x032A2994 ADRP X8, 0xE51000
	0x032A2998 LDR X8, [X8 + 0x848]
	0x032A299C MOV X0, X19
	0x032A29A0 MOV X2, X31
	0x032A29A4 LDR X1, [X8]
	0x032A29A8 BL 0x32333E0
	0x032A29AC LDR X8, [X19]
	0x032A29B0 MOV X0, X19
	0x032A29B4 LDP X20, X19, [X31 + 0x20]
	0x032A29B8 LDP X22, X21, [X31 + 0x10]
	0x032A29BC LDP X2, X1, [X8 + 0x168]
	0x032A29C0 LDR X30, [X31], #0x30
	0x032A29C4 BR X2
	0x032A29C8 BL 0x1C16F20
	0x032A29CC STR X30, [X31 - 0x60]!
	0x032A29D0 STP X28, X27, [X31 + 0x10]
	0x032A29D4 STP X26, X25, [X31 + 0x20]
	0x032A29D8 STP X24, X23, [X31 + 0x30]
	0x032A29DC STP X22, X21, [X31 + 0x40]
	0x032A29E0 STP X20, X19, [X31 + 0x50]
	0x032A29E4 ADRP X19, 0x113A000
	0x032A29E8 LDRB W8, [X19 + 0x776]
	0x032A29EC MOV X20, X0
	0x032A29F0 TBNZ X8, 0x0, 0x32A2A44
	0x032A29F4 ADRP X0, 0xE82000
	0x032A29F8 LDR X0, [X0 + 0xB70]
	0x032A29FC BL 0x1C16CF4
	0x032A2A00 ADRP X0, 0xE51000
	0x032A2A04 LDR X0, [X0 + 0x8F0]
	0x032A2A08 BL 0x1C16CF4
	0x032A2A0C ADRP X0, 0xE51000
	0x032A2A10 LDR X0, [X0 + 0x838]
	0x032A2A14 BL 0x1C16CF4
	0x032A2A18 ADRP X0, 0xE82000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x113B000
	005 Move W8, [X20+1901]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xE83000
	012 Move X0, [X0+2928]
	013 Call 0x1C17CF4
	014 Move X0, 0xE7B000
	015 Move X0, [X0+1256]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1901], W8
	019 Compare X19, 0
	020 JumpIfEqual {97}
	021 Move X20, 0xE7B000
	022 Move X20, [X20+1256]
	023 Move X8, [X19]
	024 Move X1, [X20]
	025 Move W10, [X8+304]
	026 Move W9, [X1+304]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X11, [X8+200]
	029 Add X11, X11, X9
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X11, 0xE83000
	033 Move X11, [X11+2928]
	034 Move X0, [X11]
	035 Move W11, [X0+224]
	036 Compare W11, 0
	037 JumpIfNotEqual {43}
	038 Call 0x1C17DFC
	039 Move X8, [X19]
	040 Move X1, [X20]
	041 Move W10, [X8+304]
	042 Move W9, [X1+304]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X8, [X8+200]
	045 Add X8, X8, W9
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X0, X19
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 Call 0x1C723F4
	053 Return X0
	054 Move X0, 0xE52000
	055 Move X0, [X0+2512]
	056 Call 0x1C17D08
	057 Move W1, 1
	058 Call 0x1C17D6C
	059 Move X8, [X19]
	060 Move X20, X0
	061 Move X0, X19
	062 Move X9, [X8+360]
	063 Move X1, [X8+368]
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Move X19, X0
	066 Move X0, X20
	067 Call 0x19913C0
	068 Move X0, X20
	069 Move X1, X19
	070 Call 0x19990B4
	071 Move X0, X20
	072 Move X1, X31
	073 Move X2, X19
	074 Call 0x1994444
	075 Move X0, 0xE83000
	076 Move X0, [X0+3080]
	077 Call 0x1C17D08
	078 Move X1, X20
	079 Move X2, X31
	080 Call Environment.GetResourceString, X0, X1
	081 Move X19, X0
	082 Move X0, 0xE7C000
	083 Move X0, [X0+736]
	084 Call 0x1C17D08
	085 Call 0x1C17F10
	086 Move X1, X19
	087 Move X20, X0
	088 Call SerializationException..ctor, X0, X1
	089 Move X0, 0xE83000
	090 Move X0, [X0+3096]
	091 Call 0x1C17D08
	092 Move X1, X0
	093 Move X0, X20
	094 Call 0x1C17DEC
	095 Move X0, X19
	096 Call 0x1C181E0
	097 Move X0, 0xE57000
	098 Move X0, [X0+1320]
	099 Call 0x1C17D08
	100 Call 0x1C17F10
	101 Move X19, X0
	102 Move X0, 0xE5A000
	103 Move X0, [X0+1512]
	104 Call 0x1C17D08
	105 Move X1, X0
	106 Move X0, X19
	107 Move X2, X31
	108 Call ArgumentNullException..ctor, X0, X1
	109 Move X0, 0xE83000
	110 Move X0, [X0+3096]
	111 Call 0x1C17D08
	112 Move X1, X0
	113 Move X0, X19
	114 Call 0x1C17DEC

Method: System.Object nativeGetUninitializedObject(System.RuntimeType type)

Disassembly:
	0x032A2A1C LDR X0, [X0 + 0xC98]

ISIL:
	001 Call 0x1C723F4
	002 Return X0

Method: System.Boolean GetEnableUnsafeTypeForwarders()

Disassembly:
	0x032A2A20 BL 0x1C16CF4
	0x032A2A24 ADRP X0, 0xE51000

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean UnsafeTypeForwardersIsEnabled()

Disassembly:
	0x032A2A28 LDR X0, [X0 + 0xEC8]
	0x032A2A2C BL 0x1C16CF4
	0x032A2A30 ADRP X0, 0xE51000
	0x032A2A34 LDR X0, [X0 + 0x848]
	0x032A2A38 BL 0x1C16CF4
	0x032A2A3C MOVZ W8, 0x1
	0x032A2A40 STRB W8, [X19 + 0x776]
	0x032A2A44 STRB W31, [X31 + 0xC]
	0x032A2A48 CBZ X20, 0x32A2C38
	0x032A2A4C LDR X8, [X20]
	0x032A2A50 MOV X0, X20
	0x032A2A54 LDR X9, [X8 + 0x3C8]
	0x032A2A58 LDR X1, [X8 + 0x3D0]
	0x032A2A5C BLR X9
	0x032A2A60 LDR X8, [X20]
	0x032A2A64 TBZ X0, 0x0, 0x32A2C0C
	0x032A2A68 LDR X9, [X8 + 0x468]
	0x032A2A6C LDR X1, [X8 + 0x470]
	0x032A2A70 MOV X0, X20
	0x032A2A74 BLR X9
	0x032A2A78 LDR X8, [X20]
	0x032A2A7C MOV X19, X0
	0x032A2A80 MOV X0, X20
	0x032A2A84 LDR X9, [X8 + 0x448]
	0x032A2A88 LDR X1, [X8 + 0x450]
	0x032A2A8C BLR X9
	0x032A2A90 CBZ X0, 0x32A2C38
	0x032A2A94 LDR X8, [X0]
	0x032A2A98 LDR X9, [X8 + 0x2E8]
	0x032A2A9C LDR X1, [X8 + 0x2F0]
	0x032A2AA0 BLR X9
	0x032A2AA4 ADRP X8, 0xE51000
	0x032A2AA8 LDR X8, [X8 + 0x8F0]
	0x032A2AAC MOV X21, X0
	0x032A2AB0 LDR X8, [X8]
	0x032A2AB4 MOV X0, X8
	0x032A2AB8 BL 0x1C16F10
	0x032A2ABC MOV X1, X21
	0x032A2AC0 MOV X2, X31
	0x032A2AC4 MOV X20, X0
	0x032A2AC8 BL 0x3231CF8
	0x032A2ACC CBZ X20, 0x32A2C38

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x113B000
	005 Move X19, 0xE83000
	006 Move W8, [X20+1902]
	007 Move X19, [X19+2928]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xE83000
	013 Move X0, [X0+2928]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1902], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move W20, [X8+9]
	025 Call 0x1C17D44
	026 Move X0, [X19]
	027 Compare W20, 0
	028 JumpIfNotEqual {41}
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X19]
	034 Move X8, [X0+184]
	035 Move [X8+8], W31
	036 Call 0x1C17D44
	037 Move X0, [X19]
	038 Move W9, 1
	039 Move X8, [X0+184]
	040 Move [X8+9], W9
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {46}
	044 Call 0x1C17DFC
	045 Move X0, [X19]
	046 Move X8, [X0+184]
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move W0, [X8+8]
	050 Move X30, [X31+32]
	051 Return X0

Method: System.Void SerializationSetValue(System.Reflection.MemberInfo fi, System.Object target, System.Object value)

Disassembly:
	0x032A2AD0 ADRP X23, 0xE51000
	0x032A2AD4 LDR X23, [X23 + 0xEC8]
	0x032A2AD8 MOV X0, X20
	0x032A2ADC MOV X2, X31
	0x032A2AE0 LDR X1, [X23]
	0x032A2AE4 BL 0x32333E0
	0x032A2AE8 CBZ X19, 0x32A2C38
	0x032A2AEC LDR X8, [X19 + 0x18]
	0x032A2AF0 MOV X20, X0
	0x032A2AF4 CMP W8, 0x1
	0x032A2AF8 B.LT 0x32A2BC0
	0x032A2AFC ADRP X26, 0xE82000
	0x032A2B00 ADRP X27, 0xE51000
	0x032A2B04 ADRP X28, 0xE82000
	0x032A2B08 LDR X26, [X26 + 0xB70]
	0x032A2B0C LDR X27, [X27 + 0x838]
	0x032A2B10 LDR X28, [X28 + 0xC98]
	0x032A2B14 MOV X24, X31
	0x032A2B18 AND X8, X8, 0x0
	0x032A2B1C ADD X25, X19, 0x20
	0x032A2B20 CMP X24, W8, UXTW
	0x032A2B24 B.CS 0x32A2C3C
	0x032A2B28 CBZ X20, 0x32A2C38
	0x032A2B2C LDR X1, [X23]
	0x032A2B30 LDR X21, [X25, X24, LSL #3]
	0x032A2B34 MOV X0, X20
	0x032A2B38 MOV X2, X31
	0x032A2B3C BL 0x32333E0
	0x032A2B40 LDR X8, [X26]
	0x032A2B44 MOV X22, X0
	0x032A2B48 LDR W9, [X8 + 0xE0]
	0x032A2B4C CBNZ W9, 0x32A2B58
	0x032A2B50 MOV X0, X8
	0x032A2B54 BL 0x1C16DFC
	0x032A2B58 MOV X0, X21
	0x032A2B5C BL 0x32A2728
	0x032A2B60 CBZ X22, 0x32A2C38
	0x032A2B64 MOV X1, X0
	0x032A2B68 MOV X0, X22
	0x032A2B6C MOV X2, X31
	0x032A2B70 BL 0x32333E0
	0x032A2B74 CBZ X0, 0x32A2C38
	0x032A2B78 LDR X1, [X27]
	0x032A2B7C MOV X2, X31
	0x032A2B80 BL 0x32333E0
	0x032A2B84 ADD X1, X31, 0xC
	0x032A2B88 MOV X0, X21
	0x032A2B8C BL 0x32A25C0
	0x032A2B90 MOV X1, X0
	0x032A2B94 MOV X0, X20
	0x032A2B98 MOV X2, X31
	0x032A2B9C BL 0x32333E0
	0x032A2BA0 CBZ X0, 0x32A2C38
	0x032A2BA4 LDR X1, [X28]
	0x032A2BA8 MOV X2, X31
	0x032A2BAC BL 0x32333E0
	0x032A2BB0 LDR W8, [X19 + 0x18]
	0x032A2BB4 ADD X24, X24, 0x1
	0x032A2BB8 CMP X24, W8, SXTW
	0x032A2BBC B.LT 0x32A2B20
	0x032A2BC0 CBZ X20, 0x32A2C38
	0x032A2BC4 MOV X0, X20
	0x032A2BC8 MOV X1, X31
	0x032A2BCC BL 0x323260C
	0x032A2BD0 SUB W1, W0, 0x1
	0x032A2BD4 MOVZ W2, 0x1
	0x032A2BD8 MOV X0, X20
	0x032A2BDC MOV X3, X31
	0x032A2BE0 BL 0x3233A34
	0x032A2BE4 CBZ X0, 0x32A2C38
	0x032A2BE8 ADRP X8, 0xE51000
	0x032A2BEC LDR X8, [X8 + 0x848]
	0x032A2BF0 MOV X2, X31
	0x032A2BF4 LDR X1, [X8]
	0x032A2BF8 BL 0x32333E0
	0x032A2BFC CBZ X0, 0x32A2C38
	0x032A2C00 LDR X8, [X0]
	0x032A2C04 LDP X9, X1, [X8 + 0x168]
	0x032A2C08 B 0x32A2C18
	0x032A2C0C LDR X9, [X8 + 0x2E8]
	0x032A2C10 LDR X1, [X8 + 0x2F0]
	0x032A2C14 MOV X0, X20
	0x032A2C18 BLR X9
	0x032A2C1C LDP X20, X19, [X31 + 0x50]
	0x032A2C20 LDP X22, X21, [X31 + 0x40]
	0x032A2C24 LDP X24, X23, [X31 + 0x30]
	0x032A2C28 LDP X26, X25, [X31 + 0x20]
	0x032A2C2C LDP X28, X27, [X31 + 0x10]
	0x032A2C30 LDR X30, [X31], #0x60
	0x032A2C34 RET
	0x032A2C38 BL 0x1C16F20
	0x032A2C3C BL 0x1C16F28
	0x032A2C40 STP X30, X21, [X31 - 0x20]!
	0x032A2C44 STP X20, X19, [X31 + 0x10]
	0x032A2C48 ADRP X21, 0x113A000
	0x032A2C4C ADRP X20, 0xE82000
	0x032A2C50 LDRB W8, [X21 + 0x777]
	0x032A2C54 LDR X20, [X20 + 0xB70]
	0x032A2C58 MOV X19, X0
	0x032A2C5C TBNZ X8, 0x0, 0x32A2C80
	0x032A2C60 ADRP X0, 0xE82000
	0x032A2C64 LDR X0, [X0 + 0xB70]
	0x032A2C68 BL 0x1C16CF4
	0x032A2C6C ADRP X0, 0xE7A000
	0x032A2C70 LDR X0, [X0 + 0x4E8]
	0x032A2C74 BL 0x1C16CF4
	0x032A2C78 MOVZ W8, 0x1
	0x032A2C7C STRB W8, [X21 + 0x777]
	0x032A2C80 LDR X0, [X20]
	0x032A2C84 LDR X19, [X19 + 0x10]
	0x032A2C88 LDR W8, [X0 + 0xE0]
	0x032A2C8C CBZ W8, 0x32A2C98
	0x032A2C90 CBNZ X19, 0x32A2CA0
	0x032A2C94 B 0x32A2CD4
	0x032A2C98 BL 0x1C16DFC
	0x032A2C9C CBZ X19, 0x32A2CD4
	0x032A2CA0 ADRP X9, 0xE7A000
	0x032A2CA4 LDR X9, [X9 + 0x4E8]
	0x032A2CA8 LDR X8, [X19]
	0x032A2CAC LDR X1, [X9]
	0x032A2CB0 LDRB W10, [X8 + 0x130]
	0x032A2CB4 LDRB W9, [X1 + 0x130]
	0x032A2CB8 CMP W10, W9
	0x032A2CBC B.CC 0x32A2CE4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x113B000
	008 Move W8, [X22+1903]
	009 Move X19, X2
	010 Move X20, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0xE83000
	017 Move X0, [X0+2928]
	018 Call 0x1C17CF4
	019 Move X0, 0xE83000
	020 Move X0, [X0+3104]
	021 Call 0x1C17CF4
	022 Move X0, 0xE83000
	023 Move X0, [X0+3000]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+1903], W8
	027 Move X23, 0xE83000
	028 Move X23, [X23+2928]
	029 Compare X21, 0
	030 JumpIfEqual {39}
	031 Move X8, 0xE83000
	032 Move X8, [X8+3104]
	033 Move X9, [X21]
	034 Move X8, [X8]
	035 Move W11, [X9+304]
	036 Move W10, [X8+304]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X22, X31
	039 Move X0, X31
	040 Move X1, X31
	041 Move X2, X31
	042 Call FieldInfo.op_Inequality, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {97}
	047 Move X9, [X9+200]
	048 Add X9, X9, X10
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 NotImplemented "Instruction CSEL not yet implemented."
	052 Move X0, X22
	053 Move X1, X31
	054 Move X2, X31
	055 Call FieldInfo.op_Inequality, X0, X1
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {91}
	060 Compare X22, 0
	061 JumpIfEqual {126}
	062 Move X8, [X22]
	063 Move X0, X22
	064 Move X1, X20
	065 Move X9, [X8+840]
	066 Move X2, [X8+848]
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Move X0, [X23]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {74}
	072 Call 0x1C17DFC
	073 Move X0, [X23]
	074 Move X8, [X0+184]
	075 Move X9, [X22]
	076 Move X0, X22
	077 Move X1, X20
	078 Move X4, [X8+24]
	079 Move X7, [X9+824]
	080 Move X6, [X9+832]
	081 Move X2, X19
	082 Move X20, [X31+32]
	083 Move X19, [X31+40]
	084 Move X22, [X31+16]
	085 Move X21, [X31+24]
	086 Move W3, W31
	087 Move X5, X31
	088 Move X30, [X31+48]
	089 Move X23, [X31+56]
	090 CallNoReturn X7
	091 Move X8, 0xE83000
	092 Move X8, [X8+3000]
	093 Move X9, [X21]
	094 Move X8, [X8]
	095 NotImplemented "Instruction CMP not yet implemented."
	096 NotImplemented "Instruction CSEL not yet implemented."
	097 Move X0, X21
	098 Move X1, X31
	099 Move X2, X31
	100 Call FieldInfo.op_Inequality, X0, X1
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfNotEqual {127}
	105 Move X0, [X23]
	106 Move W8, [X0+224]
	107 Compare W8, 0
	108 JumpIfNotEqual {110}
	109 Call 0x1C17DFC
	110 Compare X21, 0
	111 JumpIfEqual {126}
	112 Move X8, [X23]
	113 Move X0, X21
	114 Move X1, X20
	115 Move X2, X19
	116 Move X8, [X8+184]
	117 Move X20, [X31+32]
	118 Move X19, [X31+40]
	119 Move X22, [X31+16]
	120 Move X21, [X31+24]
	121 Move W3, W31
	122 Move X4, [X8+24]
	123 Move X5, X31
	124 Move X30, [X31+48]
	125 Move X23, [X31+56]
	126 Call 0x1C17F20
	127 Move X0, 0xE83000
	128 Move X0, [X0+3112]
	129 Call 0x1C17D08
	130 Move X1, X31
	131 Call Environment.GetResourceString, X0
	132 Move X19, X0
	133 Move X0, 0xE5A000
	134 Move X0, [X0+1400]
	135 Call 0x1C17D08
	136 Call 0x1C17F10
	137 Move X1, X19
	138 Move X2, X31
	139 Move X20, X0
	140 Call ArgumentException..ctor, X0, X1
	141 Move X0, 0xE83000
	142 Move X0, [X0+3120]
	143 Call 0x1C17D08
	144 Move X1, X0
	145 Move X0, X20
	146 Call 0x1C17DEC

Method: System.Object PopulateObjectMembers(System.Object obj, System.Reflection.MemberInfo[] members, System.Object[] data)

Disassembly:
	0x032A2D70 MOV X0, X23
	0x032A2D74 MOV W2, W31
	0x032A2D78 BL 0x1C5C788
	0x032A2D7C B 0x32A2D8C
	0x032A2D80 LDRSW X9, [X10]
	0x032A2D84 ADD X8, X8, X9, 0x4, LSL
	0x032A2D88 ADD X0, X8, 0x138
	0x032A2D8C LDP X6, X5, [X0]
	0x032A2D90 MOV X0, X23
	0x032A2D94 MOV X1, X22
	0x032A2D98 MOV X2, X21
	0x032A2D9C MOV X3, X20
	0x032A2DA0 MOV X4, X19
	0x032A2DA4 LDP X20, X19, [X31 + 0x30]
	0x032A2DA8 LDP X22, X21, [X31 + 0x20]
	0x032A2DAC LDP X24, X23, [X31 + 0x10]
	0x032A2DB0 LDR X30, [X31], #0x40
	0x032A2DB4 BR X6
	0x032A2DB8 BL 0x1C16F20
	0x032A2DBC STP X30, X25, [X31 - 0x40]!
	0x032A2DC0 STP X24, X23, [X31 + 0x10]
	0x032A2DC4 STP X22, X21, [X31 + 0x20]
	0x032A2DC8 STP X20, X19, [X31 + 0x30]
	0x032A2DCC ADRP X25, 0x113A000
	0x032A2DD0 LDRB W8, [X25 + 0x779]
	0x032A2DD4 MOV X19, X5
	0x032A2DD8 MOV X20, X4
	0x032A2DDC MOV X21, X3
	0x032A2DE0 MOV X22, X2
	0x032A2DE4 MOV X23, X1
	0x032A2DE8 MOV X24, X0
	0x032A2DEC TBNZ X8, 0x0, 0x32A2E04
	0x032A2DF0 ADRP X0, 0xE82000
	0x032A2DF4 LDR X0, [X0 + 0xCA0]
	0x032A2DF8 BL 0x1C16CF4
	0x032A2DFC MOVZ W8, 0x1
	0x032A2E00 STRB W8, [X25 + 0x779]
	0x032A2E04 LDR X24, [X24 + 0x10]
	0x032A2E08 CBZ X24, 0x32A2E94
	0x032A2E0C ADRP X10, 0xE82000
	0x032A2E10 LDR X8, [X24]
	0x032A2E14 LDR X10, [X10 + 0xCA0]
	0x032A2E18 LDRH W9, [X8 + 0x12E]
	0x032A2E1C LDR X1, [X10]
	0x032A2E20 CBZ X9, 0x32A2E44
	0x032A2E24 LDR X10, [X8 + 0xB0]
	0x032A2E28 ADD X10, X10, 0x8
	0x032A2E2C LDUR X11, [X10 - 0x8]
	0x032A2E30 CMP X11, X1
	0x032A2E34 B.EQ 0x32A2E54
	0x032A2E38 SUBS X9, X9, 0x1
	0x032A2E3C ADD X10, X10, 0x10
	0x032A2E40 B.NE 0x32A2E2C
	0x032A2E44 MOVZ W2, 0x1
	0x032A2E48 MOV X0, X24
	0x032A2E4C BL 0x1C5C788
	0x032A2E50 B 0x32A2E64
	0x032A2E54 LDR W9, [X10]
	0x032A2E58 ADD W9, W9, 0x1
	0x032A2E5C ADD X8, X8, W9, 0x4, SXTW
	0x032A2E60 ADD X0, X8, 0x138
	0x032A2E64 LDP X7, X6, [X0]
	0x032A2E68 MOV X0, X24
	0x032A2E6C MOV X1, X23
	0x032A2E70 MOV X2, X22
	0x032A2E74 MOV X3, X21
	0x032A2E78 MOV X4, X20
	0x032A2E7C MOV X5, X19
	0x032A2E80 LDP X20, X19, [X31 + 0x30]
	0x032A2E84 LDP X22, X21, [X31 + 0x20]
	0x032A2E88 LDP X24, X23, [X31 + 0x10]
	0x032A2E8C LDP X30, X25, [X31], #0x40
	0x032A2E90 BR X7
	0x032A2E94 BL 0x1C16F20
	0x032A2E98 STP X30, X21, [X31 - 0x20]!
	0x032A2E9C STP X20, X19, [X31 + 0x10]
	0x032A2EA0 ADRP X21, 0x113A000
	0x032A2EA4 ADRP X20, 0xE82000
	0x032A2EA8 LDRB W8, [X21 + 0x77A]
	0x032A2EAC LDR X20, [X20 + 0xCA8]
	0x032A2EB0 MOV X19, X0
	0x032A2EB4 TBNZ X8, 0x0, 0x32A2EE4
	0x032A2EB8 ADRP X0, 0xE82000
	0x032A2EBC LDR X0, [X0 + 0x838]
	0x032A2EC0 BL 0x1C16CF4
	0x032A2EC4 ADRP X0, 0xE82000
	0x032A2EC8 LDR X0, [X0 + 0xCA8]
	0x032A2ECC BL 0x1C16CF4
	0x032A2ED0 ADRP X0, 0xE51000
	0x032A2ED4 LDR X0, [X0 + 0x9D0]
	0x032A2ED8 BL 0x1C16CF4
	0x032A2EDC MOVZ W8, 0x1
	0x032A2EE0 STRB W8, [X21 + 0x77A]
	0x032A2EE4 MOV X0, X19
	0x032A2EE8 MOV X1, X31
	0x032A2EEC BL 0x33BDD8C
	0x032A2EF0 MOVZ W8, 0x1
	0x032A2EF4 STR W8, [X19 + 0x10]
	0x032A2EF8 LDR X0, [X20]
	0x032A2EFC LDR W8, [X0 + 0xE0]
	0x032A2F00 CBNZ W8, 0x32A2F0C
	0x032A2F04 BL 0x1C16DFC
	0x032A2F08 LDR X0, [X20]
	0x032A2F0C LDR X8, [X0 + 0xB8]
	0x032A2F10 LDR X8, [X8]
	0x032A2F14 CBZ X8, 0x32A2F68
	0x032A2F18 LDR W9, [X8 + 0x18]
	0x032A2F1C CBZ W9, 0x32A2F6C
	0x032A2F20 LDR W8, [X8 + 0x20]
	0x032A2F24 ADRP X9, 0xE82000
	0x032A2F28 LDR X9, [X9 + 0x838]
	0x032A2F2C ADRP X20, 0xE51000
	0x032A2F30 STR W8, [X19 + 0x14]
	0x032A2F34 UBFM W1, W8, 0x1E, 0x1D
	0x032A2F38 LDR X0, [X9]
	0x032A2F3C LDR X20, [X20 + 0x9D0]
	0x032A2F40 BL 0x1C16D6C
	0x032A2F44 STR X0, [X19 + 0x18]
	0x032A2F48 LDR W8, [X19 + 0x14]
	0x032A2F4C LDR X0, [X20]
	0x032A2F50 UBFM W1, W8, 0x1E, 0x1D
	0x032A2F54 BL 0x1C16D6C
	0x032A2F58 STR X0, [X19 + 0x20]
	0x032A2F5C LDP X20, X19, [X31 + 0x10]
	0x032A2F60 LDP X30, X21, [X31], #0x20
	0x032A2F64 RET
	0x032A2F68 BL 0x1C16F20
	0x032A2F6C BL 0x1C16F28
	0x032A2F70 STP X30, X21, [X31 - 0x20]!
	0x032A2F74 STP X20, X19, [X31 + 0x10]
	0x032A2F78 MOV X20, X1
	0x032A2F7C MOV X21, X0
	0x032A2F80 MOV X0, X1
	0x032A2F84 MOV X1, X31
	0x032A2F88 MOV X19, X2
	0x032A2F8C BL 0x32C5C48
	0x032A2F90 LDR W9, [X21 + 0x14]
	0x032A2F94 AND W8, W0, 0x7FFFFFFF
	0x032A2F98 SUB W10, W9, 0x2
	0x032A2F9C SDIV W11, W8, W10
	0x032A2FA0 MSUB W8, W11, W10, W8
	0x032A2FA4 ADD W10, W8, 0x1
	0x032A2FA8 ORR W11, W31, 0x7FFFFFFC
	0x032A2FAC AND W8, W0, 0x7FFFFFFF
	0x032A2FB0 SDIV W8, W8, W9
	0x032A2FB4 MSUB W8, W8, W9, W0
	0x032A2FB8 UBFM W8, W8, 0x1E, 0x1D
	0x032A2FBC CMP W8, W11
	0x032A2FC0 B.EQ 0x32A3004
	0x032A2FC4 LDR X14, [X21 + 0x20]
	0x032A2FC8 CBZ X14, 0x32A3030
	0x032A2FCC LDR W12, [X14 + 0x18]
	0x032A2FD0 ADD X14, X14, W8, 0x3, SXTW
	0x032A2FD4 ADD W13, W8, 0x4
	0x032A2FD8 ADD X14, X14, 0x20
	0x032A2FDC CMP W8, W12
	0x032A2FE0 B.CS 0x32A302C
	0x032A2FE4 LDR X15, [X14]
	0x032A2FE8 CBZ X15, 0x32A300C
	0x032A2FEC CMP X15, X20
	0x032A2FF0 B.EQ 0x32A3014
	0x032A2FF4 ADD W8, W8, 0x1
	0x032A2FF8 CMP W8, W13
	0x032A2FFC ADD X14, X14, 0x8
	0x032A3000 B.LT 0x32A2FDC
	0x032A3004 ADD W0, W10, W0
	0x032A3008 B 0x32A2FAC
	0x032A300C MOV W9, W31
	0x032A3010 B 0x32A3018
	0x032A3014 MOVZ W9, 0x1
	0x032A3018 STRB W9, [X19]
	0x032A301C LDP X20, X19, [X31 + 0x10]
	0x032A3020 MOV W0, W8
	0x032A3024 LDP X30, X21, [X31], #0x20
	0x032A3028 RET
	0x032A302C BL 0x1C16F28
	0x032A3030 BL 0x1C16F20
	0x032A3034 STR X30, [X31 - 0x40]!
	0x032A3038 STP X24, X23, [X31 + 0x10]
	0x032A303C STP X22, X21, [X31 + 0x20]
	0x032A3040 STP X20, X19, [X31 + 0x30]
	0x032A3044 STRB W31, [X31 + 0xC]
	0x032A3048 CBZ X1, 0x32A3144
	0x032A304C MOV X19, X2
	0x032A3050 ADD X2, X31, 0xC
	0x032A3054 MOV X22, X1
	0x032A3058 MOV X20, X0
	0x032A305C BL 0x32A2F70
	0x032A3060 LDRB W23, [X31 + 0xC]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X22, 0x113B000
	013 Move W8, [X22+1904]
	014 Move X19, X2
	015 Move X20, X1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0xE83000
	022 Move X0, [X0+2928]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+1904], W8
	026 Compare X21, 0
	027 JumpIfEqual {156}
	028 Compare X20, 0
	029 JumpIfEqual {163}
	030 Compare X19, 0
	031 JumpIfEqual {170}
	032 Move X8, [X20+24]
	033 Move W9, [X19+24]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X25, 0xE83000
	037 Move X25, [X25+2928]
	038 Move X24, X31
	039 And X8, X8, 0
	040 Add X26, X20, 32
	041 Add X27, X19, 32
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X22, [X26]
	044 Move X1, X31
	045 Move X2, X31
	046 Move X0, X22
	047 Call MemberInfo.op_Equality, X0, X1
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {94}
	052 Move W8, [X19+24]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X8, [X27]
	055 Compare X8, 0
	056 JumpIfEqual {77}
	057 Compare X22, 0
	058 JumpIfEqual {136}
	059 Move X8, [X22]
	060 Move X0, X22
	061 Move X9, [X8+408]
	062 Move X1, [X8+416]
	063 NotImplemented "Instruction BLR not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move W8, [X19+24]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X0, [X25]
	068 Move X23, [X27]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move X0, X22
	074 Move X1, X21
	075 Move X2, X23
	076 Call FormatterServices.SerializationSetValue, X0, X1, X2
	077 Move W8, [X20+24]
	078 Add X24, X24, 1
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X0, X21
	081 Move X20, [X31+80]
	082 Move X19, [X31+88]
	083 Move X22, [X31+64]
	084 Move X21, [X31+72]
	085 Move X24, [X31+48]
	086 Move X23, [X31+56]
	087 Move X26, [X31+32]
	088 Move X25, [X31+40]
	089 Move X30, [X31+16]
	090 Move X27, [X31+24]
	091 Add X31, X31, 96
	092 Return X0
	093 Call 0x1C17F28
	094 Move X0, 0xE52000
	095 Move X0, [X0+2512]
	096 Call 0x1C17D08
	097 Move W1, 1
	098 Call 0x1C17D6C
	099 Move X19, X0
	100 Move [X31+12], W24
	101 Move X0, 0xE52000
	102 Move X0, [X0+1880]
	103 Call 0x1C17D08
	104 Add X1, X31, 12
	105 Call 0x1C17E04
	106 Move X20, X0
	107 Move X0, X19
	108 Call 0x19913C0
	109 Move X0, X19
	110 Move X1, X20
	111 Call 0x19990B4
	112 Move X0, X19
	113 Move X1, X31
	114 Move X2, X20
	115 Call 0x1994444
	116 Move X0, 0xE83000
	117 Move X0, [X0+3128]
	118 Call 0x1C17D08
	119 Move X1, X19
	120 Move X2, X31
	121 Call Environment.GetResourceString, X0, X1
	122 Move X19, X0
	123 Move X0, 0xE57000
	124 Move X0, [X0+1320]
	125 Call 0x1C17D08
	126 Call 0x1C17F10
	127 Move X20, X0
	128 Move X0, 0xE83000
	129 Move X0, [X0+3136]
	130 Call 0x1C17D08
	131 Move X1, X0
	132 Move X0, X20
	133 Move X2, X19
	134 Move X3, X31
	135 Call ArgumentNullException..ctor, X0, X1, X2
	136 Call 0x1C17F20
	137 Move X0, 0xE83000
	138 Move X0, [X0+3144]
	139 Call 0x1C17D08
	140 Move X1, X31
	141 Call Environment.GetResourceString, X0
	142 Move X19, X0
	143 Move X0, 0xE7C000
	144 Move X0, [X0+736]
	145 Call 0x1C17D08
	146 Call 0x1C17F10
	147 Move X1, X19
	148 Move X20, X0
	149 Call SerializationException..ctor, X0, X1
	150 Move X0, 0xE83000
	151 Move X0, [X0+3152]
	152 Call 0x1C17D08
	153 Move X1, X0
	154 Move X0, X20
	155 Call 0x1C17DEC
	156 Move X0, 0xE57000
	157 Move X0, [X0+1320]
	158 Call 0x1C17D08
	159 Call 0x1C17F10
	160 Move X19, X0
	161 Move X0, 0xE5D000
	162 Move X0, [X0+2216]
	163 Move X0, 0xE57000
	164 Move X0, [X0+1320]
	165 Call 0x1C17D08
	166 Call 0x1C17F10
	167 Move X19, X0
	168 Move X0, 0xE83000
	169 Move X0, [X0+3136]
	170 Move X0, 0xE57000
	171 Move X0, [X0+1320]
	172 Call 0x1C17D08
	173 Call 0x1C17F10
	174 Move X19, X0
	175 Move X0, 0xE5E000
	176 Move X0, [X0+1680]
	177 Call 0x1C17D08
	178 Move X1, X0
	179 Move X0, X19
	180 Move X2, X31
	181 Call ArgumentNullException..ctor, X0, X1
	182 Move X0, 0xE82000
	183 Move X0, [X0+3152]
	184 Call 0x1C17D08
	185 Move X1, X0
	186 Move X0, X19
	187 Call 0x1C17DEC
	188 Move X0, 0xE82000
	189 Move X0, [X0+3160]
	190 Call 0x1C17D08
	191 Move X1, X31
	192 Call Environment.GetResourceString, X0
	193 Move X19, X0
	194 Move X0, 0xE59000
	195 Move X0, [X0+1400]
	196 Call 0x1C17D08
	197 Call 0x1C17F10
	198 Move X1, X19
	199 Move X2, X31
	200 Move X20, X0
	201 Call ArgumentException..ctor, X0, X1

Method: System.Object[] GetObjectData(System.Object obj, System.Reflection.MemberInfo[] members)

Disassembly:
	0x032A3064 MOV W21, W0
	0x032A3068 CBZ W23, 0x32A308C
	0x032A306C LDR X8, [X20 + 0x18]
	0x032A3070 CBZ X8, 0x32A3140
	0x032A3074 LDR W9, [X8 + 0x18]
	0x032A3078 CMP W21, W9
	0x032A307C B.CS 0x32A313C
	0x032A3080 ADD X8, X8, W21, 0x3, SXTW
	0x032A3084 LDR X22, [X8 + 0x20]
	0x032A3088 B 0x32A311C
	0x032A308C LDR X24, [X20 + 0x20]
	0x032A3090 CBZ X24, 0x32A3140
	0x032A3094 LDR X8, [X24]
	0x032A3098 MOV X0, X22
	0x032A309C LDR X1, [X8 + 0x40]
	0x032A30A0 BL 0x1C16E00
	0x032A30A4 CBZ X0, 0x32A31A8
	0x032A30A8 LDR W8, [X24 + 0x18]
	0x032A30AC CMP W21, W8
	0x032A30B0 B.CS 0x32A313C
	0x032A30B4 SXTW X9, W21
	0x032A30B8 ADD X8, X24, X9, 0x3, LSL
	0x032A30BC STR X22, [X8 + 0x20]
	0x032A30C0 LDRSW X22, [X20 + 0x10]
	0x032A30C4 LDR X10, [X20 + 0x18]
	0x032A30C8 ADD W8, W22, 0x1
	0x032A30CC STR W8, [X20 + 0x10]
	0x032A30D0 CBZ X10, 0x32A3140
	0x032A30D4 LDR W11, [X10 + 0x18]
	0x032A30D8 CMP W21, W11
	0x032A30DC B.CS 0x32A313C
	0x032A30E0 ADD X9, X10, X9, 0x3, LSL
	0x032A30E4 STR X22, [X9 + 0x20]
	0x032A30E8 LDR W9, [X10 + 0x18]
	0x032A30EC CMP W21, W9
	0x032A30F0 B.CS 0x32A313C
	0x032A30F4 LDR W9, [X20 + 0x14]
	0x032A30F8 MOVZ W10, 0x1
	0x032A30FC UBFM W11, W9, 0x1E, 0x1D
	0x032A3100 BFM W10, W9, 0x1E, 0x1D
	0x032A3104 CMP W11, 0x0
	0x032A3108 CSEL W9, W10, W11, LT
	0x032A310C CMP W8, W9, ASR
	0x032A3110 B.LE 0x32A311C
	0x032A3114 MOV X0, X20
	0x032A3118 BL 0x32A31B4
	0x032A311C EOR W8, W23, 0x1
	0x032A3120 STRB W8, [X19]
	0x032A3124 MOV X0, X22
	0x032A3128 LDP X20, X19, [X31 + 0x30]
	0x032A312C LDP X22, X21, [X31 + 0x20]
	0x032A3130 LDP X24, X23, [X31 + 0x10]
	0x032A3134 LDR X30, [X31], #0x40
	0x032A3138 RET
	0x032A313C BL 0x1C16F28
	0x032A3140 BL 0x1C16F20
	0x032A3144 ADRP X0, 0xE81000
	0x032A3148 LDR X0, [X0 + 0xCB0]
	0x032A314C BL 0x1C16D08
	0x032A3150 MOV X1, X31
	0x032A3154 BL 0x33BDD84
	0x032A3158 MOV X19, X0
	0x032A315C ADRP X0, 0xE55000
	0x032A3160 LDR X0, [X0 + 0x528]
	0x032A3164 BL 0x1C16D08
	0x032A3168 BL 0x1C16F10
	0x032A316C MOV X20, X0
	0x032A3170 ADRP X0, 0xE5B000
	0x032A3174 LDR X0, [X0 + 0x8A8]
	0x032A3178 BL 0x1C16D08
	0x032A317C MOV X1, X0
	0x032A3180 MOV X0, X20
	0x032A3184 MOV X2, X19
	0x032A3188 MOV X3, X31
	0x032A318C BL 0x3315F7C
	0x032A3190 ADRP X0, 0xE81000
	0x032A3194 LDR X0, [X0 + 0xCB8]
	0x032A3198 BL 0x1C16D08
	0x032A319C MOV X1, X0
	0x032A31A0 MOV X0, X20
	0x032A31A4 BL 0x1C16DEC
	0x032A31A8 BL 0x1C16F44
	0x032A31AC MOV X1, X31
	0x032A31B0 BL 0x1C16DEC
	0x032A31B4 SUB X31, X31, 0x60
	0x032A31B8 STP X30, X27, [X31 + 0x10]
	0x032A31BC STP X26, X25, [X31 + 0x20]
	0x032A31C0 STP X24, X23, [X31 + 0x30]
	0x032A31C4 STP X22, X21, [X31 + 0x40]
	0x032A31C8 STP X20, X19, [X31 + 0x50]
	0x032A31CC ADRP X21, 0x1139000
	0x032A31D0 ADRP X20, 0xE81000
	0x032A31D4 LDRB W8, [X21 + 0x77B]
	0x032A31D8 LDR X20, [X20 + 0xCA8]
	0x032A31DC MOV X19, X0
	0x032A31E0 TBNZ X8, 0x0, 0x32A3210
	0x032A31E4 ADRP X0, 0xE81000
	0x032A31E8 LDR X0, [X0 + 0x838]
	0x032A31EC BL 0x1C16CF4
	0x032A31F0 ADRP X0, 0xE81000
	0x032A31F4 LDR X0, [X0 + 0xCA8]
	0x032A31F8 BL 0x1C16CF4
	0x032A31FC ADRP X0, 0xE50000
	0x032A3200 LDR X0, [X0 + 0x9D0]
	0x032A3204 BL 0x1C16CF4
	0x032A3208 MOVZ W8, 0x1
	0x032A320C STRB W8, [X21 + 0x77B]
	0x032A3210 STRB W31, [X31 + 0xC]
	0x032A3214 ADRP X23, 0xE81000
	0x032A3218 ADRP X21, 0xE50000
	0x032A321C LDR W24, [X19 + 0x14]
	0x032A3220 LDR X0, [X20]
	0x032A3224 LDR X23, [X23 + 0x838]
	0x032A3228 LDR X21, [X21 + 0x9D0]
	0x032A322C MOV X22, X31
	0x032A3230 LDR W8, [X0 + 0xE0]
	0x032A3234 CBNZ W8, 0x32A3240
	0x032A3238 BL 0x1C16DFC
	0x032A323C LDR X0, [X20]
	0x032A3240 LDR X8, [X0 + 0xB8]
	0x032A3244 LDR X8, [X8]
	0x032A3248 CBZ X8, 0x32A3404
	0x032A324C LDR W8, [X8 + 0x18]
	0x032A3250 CMP W22, W8
	0x032A3254 B.GE 0x32A3298
	0x032A3258 LDR W8, [X0 + 0xE0]
	0x032A325C CBNZ W8, 0x32A3268
	0x032A3260 BL 0x1C16DFC
	0x032A3264 LDR X0, [X20]
	0x032A3268 LDR X8, [X0 + 0xB8]
	0x032A326C LDR X8, [X8]
	0x032A3270 CBZ X8, 0x32A3404
	0x032A3274 LDR W9, [X8 + 0x18]
	0x032A3278 CMP W22, W9
	0x032A327C B.CS 0x32A3400
	0x032A3280 ADD X8, X8, W22, 0x2, SXTW
	0x032A3284 LDR W8, [X8 + 0x20]
	0x032A3288 CMP W8, W24
	0x032A328C B.GT 0x32A3298
	0x032A3290 ADD X22, X22, 0x1
	0x032A3294 B 0x32A3230
	0x032A3298 LDR W8, [X0 + 0xE0]
	0x032A329C CBNZ W8, 0x32A32A8
	0x032A32A0 BL 0x1C16DFC
	0x032A32A4 LDR X0, [X20]
	0x032A32A8 LDR X8, [X0 + 0xB8]
	0x032A32AC LDR X8, [X8]
	0x032A32B0 CBZ X8, 0x32A3404
	0x032A32B4 LDR W9, [X8 + 0x18]
	0x032A32B8 CMP W9, W22
	0x032A32BC B.EQ 0x32A3414
	0x032A32C0 LDR W9, [X0 + 0xE0]
	0x032A32C4 CBNZ W9, 0x32A32DC
	0x032A32C8 BL 0x1C16DFC
	0x032A32CC LDR X8, [X20]
	0x032A32D0 LDR X8, [X8 + 0xB8]
	0x032A32D4 LDR X8, [X8]
	0x032A32D8 CBZ X8, 0x32A3404
	0x032A32DC LDR W9, [X8 + 0x18]
	0x032A32E0 CMP W22, W9
	0x032A32E4 B.CS 0x32A3400
	0x032A32E8 ADD X8, X8, X22, 0x2, LSL
	0x032A32EC LDR W8, [X8 + 0x20]
	0x032A32F0 STR W8, [X19 + 0x14]
	0x032A32F4 LDR X0, [X23]
	0x032A32F8 UBFM W1, W8, 0x1E, 0x1D
	0x032A32FC BL 0x1C16D6C
	0x032A3300 LDR W8, [X19 + 0x14]
	0x032A3304 MOV X20, X0
	0x032A3308 LDR X0, [X21]
	0x032A330C UBFM W1, W8, 0x1E, 0x1D
	0x032A3310 BL 0x1C16D6C
	0x032A3314 LDP X23, X22, [X19 + 0x18]
	0x032A3318 STP X20, X0, [X19 + 0x18]
	0x032A331C CBZ X22, 0x32A3404
	0x032A3320 LDR X8, [X22 + 0x18]
	0x032A3324 CMP W8, 0x1
	0x032A3328 B.LT 0x32A33E4
	0x032A332C MOV X24, X31
	0x032A3330 AND X8, X8, 0x0
	0x032A3334 ADD X25, X22, 0x20
	0x032A3338 ADD X26, X23, 0x20
	0x032A333C CMP X24, W8, UXTW
	0x032A3340 B.CS 0x32A3400
	0x032A3344 LDR X1, [X25, X24, LSL #3]
	0x032A3348 CBZ X1, 0x32A33D4
	0x032A334C ADD X2, X31, 0xC
	0x032A3350 MOV X0, X19
	0x032A3354 BL 0x32A2F70
	0x032A3358 LDR W8, [X22 + 0x18]
	0x032A335C CMP X24, X8
	0x032A3360 B.CS 0x32A3400
	0x032A3364 LDR X27, [X19 + 0x20]
	0x032A3368 CBZ X27, 0x32A3404
	0x032A336C LDR X21, [X25, X24, LSL #3]
	0x032A3370 MOV W20, W0
	0x032A3374 CBZ X21, 0x32A338C
	0x032A3378 LDR X8, [X27]
	0x032A337C MOV X0, X21
	0x032A3380 LDR X1, [X8 + 0x40]
	0x032A3384 BL 0x1C16E00
	0x032A3388 CBZ X0, 0x32A3408
	0x032A338C LDR W8, [X27 + 0x18]
	0x032A3390 CMP W20, W8
	0x032A3394 B.CS 0x32A3400
	0x032A3398 SXTW X8, W20
	0x032A339C ADD X9, X27, X8, 0x3, LSL
	0x032A33A0 STR X21, [X9 + 0x20]
	0x032A33A4 CBZ X23, 0x32A3404
	0x032A33A8 LDR W9, [X23 + 0x18]
	0x032A33AC CMP X24, X9
	0x032A33B0 B.CS 0x32A3400
	0x032A33B4 LDR X9, [X19 + 0x18]
	0x032A33B8 CBZ X9, 0x32A3404
	0x032A33BC LDR W10, [X9 + 0x18]
	0x032A33C0 CMP W20, W10
	0x032A33C4 B.CS 0x32A3400
	0x032A33C8 LDR X10, [X26, X24, LSL #3]

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0x113A000
	013 Move W8, [X21+1905]
	014 Move X19, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0xE51000
	021 Move X0, [X0+2512]
	022 Call 0x1C17CF4
	023 Move X0, 0xE82000
	024 Move X0, [X0+3104]
	025 Call 0x1C17CF4
	026 Move X0, 0xE82000
	027 Move X0, [X0+3000]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+1905], W8
	031 Compare X20, 0
	032 JumpIfEqual {214}
	033 Compare X19, 0
	034 JumpIfEqual {221}
	035 Move X8, 0xE51000
	036 Move X8, [X8+2512]
	037 Move W21, [X19+24]
	038 Move X0, [X8]
	039 Move W1, W21
	040 Call 0x1C17D6C
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X22, X0
	043 Move X26, 0xE82000
	044 Move X27, 0xE82000
	045 Move X26, [X26+3104]
	046 Move X27, [X27+3000]
	047 Move W25, W31
	048 Move W8, [X19+24]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X28, W25
	051 Add X8, X19, X28
	052 Move X23, [X8+32]
	053 Move X1, X31
	054 Move X2, X31
	055 Move X0, X23
	056 Call MemberInfo.op_Equality, X0, X1
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfEqual {149}
	061 Compare X23, 0
	062 JumpIfEqual {147}
	063 Move X8, [X23]
	064 Move X0, X23
	065 Move X9, [X8+408]
	066 Move X1, [X8+416]
	067 NotImplemented "Instruction BLR not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X9, [X23]
	070 Move X8, [X26]
	071 Move W11, [X9+304]
	072 Move W10, [X8+304]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X0, X31
	075 Move X1, X31
	076 Move X2, X31
	077 Call FieldInfo.op_Inequality, X0, X1
	078 Move TEMP, X0
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfNotEqual {111}
	082 Move X9, [X9+200]
	083 Move X1, X31
	084 Move X2, X31
	085 Add X9, X9, X10
	086 NotImplemented "Instruction LDUR not yet implemented."
	087 NotImplemented "Instruction CMP not yet implemented."
	088 NotImplemented "Instruction CSEL not yet implemented."
	089 Move X0, X24
	090 Call FieldInfo.op_Inequality, X0, X1
	091 Move TEMP, X0
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfNotEqual {111}
	095 Compare X24, 0
	096 JumpIfEqual {147}
	097 Move X8, [X24]
	098 Move X0, X24
	099 Move X1, X20
	100 Move X9, [X8+840]
	101 Move X2, [X8+848]
	102 NotImplemented "Instruction BLR not yet implemented."
	103 Move X8, [X24]
	104 Move X0, X24
	105 Move X1, X20
	106 Move X9, [X8+808]
	107 Move X2, [X8+816]
	108 NotImplemented "Instruction BLR not yet implemented."
	109 Compare X22, 0
	110 JumpIfNotEqual {119}
	111 Move X1, [X27]
	112 Move X8, [X23]
	113 Move X0, X23
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move X1, X20
	116 Call SerializationFieldInfo.InternalGetValue, X0, X1
	117 Compare X22, 0
	118 JumpIfEqual {147}
	119 Move X23, X0
	120 Compare X0, 0
	121 JumpIfEqual {128}
	122 Move X8, [X22]
	123 Move X0, X23
	124 Move X1, [X8+64]
	125 Call 0x1C17E00
	126 Compare X0, 0
	127 JumpIfEqual {211}
	128 Move W8, [X22+24]
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Add W25, W25, 1
	131 Add X8, X22, X28
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move [X8+32], X23
	134 Move X0, X22
	135 Move X20, [X31+80]
	136 Move X19, [X31+88]
	137 Move X22, [X31+64]
	138 Move X21, [X31+72]
	139 Move X24, [X31+48]
	140 Move X23, [X31+56]
	141 Move X26, [X31+32]
	142 Move X25, [X31+40]
	143 Move X28, [X31+16]
	144 Move X27, [X31+24]
	145 Move X30, [X31+96]
	146 Return X0
	147 Call 0x1C17F20
	148 Call 0x1C17F28
	149 Move X0, 0xE51000
	150 Move X0, [X0+2512]
	151 Call 0x1C17D08
	152 Move W1, 1
	153 Call 0x1C17D6C
	154 Move X19, X0
	155 Move [X31+12], W25
	156 Move X0, 0xE51000
	157 Move X0, [X0+1880]
	158 Call 0x1C17D08
	159 Add X1, X31, 12
	160 Call 0x1C17E04
	161 Move X20, X0
	162 Move X0, X19
	163 Call 0x19913C0
	164 Move X0, X19
	165 Move X1, X20
	166 Call 0x19990B4
	167 Move X0, X19
	168 Move X1, X31
	169 Move X2, X20
	170 Call 0x1994444
	171 Move X0, 0xE82000
	172 Move X0, [X0+3128]
	173 Call 0x1C17D08
	174 Move X1, X19
	175 Move X2, X31
	176 Call Environment.GetResourceString, X0, X1
	177 Move X19, X0
	178 Move X0, 0xE56000
	179 Move X0, [X0+1320]
	180 Call 0x1C17D08
	181 Call 0x1C17F10
	182 Move X20, X0
	183 Move X0, 0xE82000
	184 Move X0, [X0+3136]
	185 Call 0x1C17D08
	186 Move X1, X0
	187 Move X0, X20
	188 Move X2, X19
	189 Move X3, X31
	190 Call ArgumentNullException..ctor, X0, X1, X2
	191 Move X0, 0xE82000
	192 Move X0, [X0+3144]
	193 Call 0x1C17D08
	194 Move X1, X31
	195 Call Environment.GetResourceString, X0
	196 Move X19, X0
	197 Move X0, 0xE7B000
	198 Move X0, [X0+736]
	199 Call 0x1C17D08
	200 Call 0x1C17F10
	201 Move X1, X19
	202 Move X20, X0
	203 Call SerializationException..ctor, X0, X1
	204 Move X0, 0xE82000
	205 Move X0, [X0+3168]
	206 Call 0x1C17D08
	207 Move X1, X0
	208 Move X0, X20
	209 Call 0x1C17DEC
	210 Call 0x1C181E0
	211 Call 0x1C17F44
	212 Move X1, X31
	213 Call 0x1C17DEC
	214 Move X0, 0xE56000
	215 Move X0, [X0+1320]
	216 Call 0x1C17D08
	217 Call 0x1C17F10
	218 Move X19, X0
	219 Move X0, 0xE5C000
	220 Move X0, [X0+2216]
	221 Move X0, 0xE56000
	222 Move X0, [X0+1320]
	223 Call 0x1C17D08
	224 Call 0x1C17F10
	225 Move X19, X0
	226 Move X0, 0xE82000
	227 Move X0, [X0+3136]
	228 Call 0x1C17D08
	229 Move X1, X0
	230 Move X0, X19
	231 Move X2, X31
	232 Call ArgumentNullException..ctor, X0, X1
	233 Move X0, 0xE82000
	234 Move X0, [X0+3168]
	235 Call 0x1C17D08
	236 Move X1, X0
	237 Move X0, X19
	238 Call 0x1C17DEC

Method: System.Type GetTypeFromAssembly(System.Reflection.Assembly assem, System.String name)

Disassembly:
	0x032A344C LDR X0, [X0 + 0xCC8]
	0x032A3450 BL 0x1C16D08
	0x032A3454 MOV X1, X0
	0x032A3458 MOV X0, X20
	0x032A345C BL 0x1C16DEC
	0x032A3460 STR X30, [X31 - 0x20]!
	0x032A3464 STP X20, X19, [X31 + 0x10]
	0x032A3468 STRB W31, [X31 + 0xC]
	0x032A346C CBZ X1, 0x32A34C4
	0x032A3470 MOV X19, X2
	0x032A3474 ADD X2, X31, 0xC
	0x032A3478 MOV X20, X0
	0x032A347C BL 0x32A2F70
	0x032A3480 LDRB W8, [X31 + 0xC]
	0x032A3484 CBZ W8, 0x32A34AC
	0x032A3488 STRB W31, [X19]
	0x032A348C LDR X8, [X20 + 0x18]
	0x032A3490 CBZ X8, 0x32A3528
	0x032A3494 LDR W9, [X8 + 0x18]
	0x032A3498 CMP W0, W9
	0x032A349C B.CS 0x32A352C
	0x032A34A0 ADD X8, X8, W0, 0x3, SXTW
	0x032A34A4 LDR X0, [X8 + 0x20]
	0x032A34A8 B 0x32A34B8
	0x032A34AC MOV X0, X31
	0x032A34B0 MOVZ W8, 0x1
	0x032A34B4 STRB W8, [X19]
	0x032A34B8 LDP X20, X19, [X31 + 0x10]
	0x032A34BC LDR X30, [X31], #0x20
	0x032A34C0 RET
	0x032A34C4 ADRP X0, 0xE81000
	0x032A34C8 LDR X0, [X0 + 0xCB0]
	0x032A34CC BL 0x1C16D08
	0x032A34D0 MOV X1, X31
	0x032A34D4 BL 0x33BDD84
	0x032A34D8 MOV X19, X0
	0x032A34DC ADRP X0, 0xE55000
	0x032A34E0 LDR X0, [X0 + 0x528]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X2, X31
	007 Move X20, X0
	008 Call Assembly.op_Equality, X0, X1
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {26}
	013 Compare X20, 0
	014 JumpIfEqual {44}
	015 Move X8, [X20]
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X5, [X8+632]
	021 Move X4, [X8+640]
	022 Move W2, W31
	023 Move W3, W31
	024 Move X30, [X31+32]
	025 CallNoReturn X5
	026 Move X0, 0xE56000
	027 Move X0, [X0+1320]
	028 Call 0x1C17D08
	029 Call 0x1C17F10
	030 Move X19, X0
	031 Move X0, 0xE82000
	032 Move X0, [X0+3176]
	033 Call 0x1C17D08
	034 Move X1, X0
	035 Move X0, X19
	036 Move X2, X31
	037 Call ArgumentNullException..ctor, X0, X1
	038 Move X0, 0xE82000
	039 Move X0, [X0+3184]
	040 Call 0x1C17D08
	041 Move X1, X0
	042 Move X0, X19
	043 Call 0x1C17DEC
	044 Call 0x1C17F20

Method: System.Reflection.Assembly LoadAssemblyFromString(System.String assemblyName)

Disassembly:
	0x032A34E4 BL 0x1C16D08
	0x032A34E8 BL 0x1C16F10

ISIL:
	001 Move X1, X31
	002 Call Assembly.Load, X0
	003 Return X0

Method: System.Reflection.Assembly LoadAssemblyFromStringNoThrow(System.String assemblyName)

Disassembly:
	0x032A34EC MOV X20, X0
	0x032A34F0 ADRP X0, 0xE5B000
	0x032A34F4 LDR X0, [X0 + 0x8A8]
	0x032A34F8 BL 0x1C16D08
	0x032A34FC MOV X1, X0
	0x032A3500 MOV X0, X20
	0x032A3504 MOV X2, X19
	0x032A3508 MOV X3, X31
	0x032A350C BL 0x3315F7C
	0x032A3510 ADRP X0, 0xE81000
	0x032A3514 LDR X0, [X0 + 0xCD0]
	0x032A3518 BL 0x1C16D08
	0x032A351C MOV X1, X0
	0x032A3520 MOV X0, X20
	0x032A3524 BL 0x1C16DEC
	0x032A3528 BL 0x1C16F20
	0x032A352C BL 0x1C16F28
	0x032A3530 STR X30, [X31 - 0x30]!
	0x032A3534 STP X22, X21, [X31 + 0x10]
	0x032A3538 STP X20, X19, [X31 + 0x20]
	0x032A353C ADRP X21, 0x1139000
	0x032A3540 ADRP X22, 0xE51000
	0x032A3544 ADRP X19, 0xE81000
	0x032A3548 ADRP X20, 0xE81000
	0x032A354C LDRB W8, [X21 + 0x77C]
	0x032A3550 LDR X22, [X22 + 0xE58]
	0x032A3554 LDR X19, [X19 + 0xCD8]
	0x032A3558 LDR X20, [X20 + 0xCA8]
	0x032A355C TBNZ X8, 0x0, 0x32A358C
	0x032A3560 ADRP X0, 0xE51000
	0x032A3564 LDR X0, [X0 + 0xE58]
	0x032A3568 BL 0x1C16CF4
	0x032A356C ADRP X0, 0xE81000
	0x032A3570 LDR X0, [X0 + 0xCA8]
	0x032A3574 BL 0x1C16CF4
	0x032A3578 ADRP X0, 0xE81000
	0x032A357C LDR X0, [X0 + 0xCD8]
	0x032A3580 BL 0x1C16CF4
	0x032A3584 MOVZ W8, 0x1
	0x032A3588 STRB W8, [X21 + 0x77C]
	0x032A358C LDR X0, [X22]
	0x032A3590 MOVZ W1, 0x15
	0x032A3594 BL 0x1C16D6C
	0x032A3598 LDR X1, [X19]
	0x032A359C MOV X2, X31
	0x032A35A0 MOV X19, X0
	0x032A35A4 BL 0x32C5BD8
	0x032A35A8 LDR X8, [X20]
	0x032A35AC LDP X22, X21, [X31 + 0x10]
	0x032A35B0 LDR X8, [X8 + 0xB8]
	0x032A35B4 STR X19, [X8]
	0x032A35B8 LDP X20, X19, [X31 + 0x20]
	0x032A35BC LDR X30, [X31], #0x30

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x113A000
	006 Move X21, 0xE82000
	007 Move W8, [X20+1906]
	008 Move X21, [X21+2928]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE82000
	015 Move X0, [X0+2928]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1906], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X1, X31
	026 Call Assembly.Load, X0
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0
	032 Move X19, X0
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X0, X19
	035 Call 0x3EB2AD0
	036 Move X19, X0
	037 Move X0, 0xE51000
	038 Move X0, [X0+2000]
	039 Call 0x1C17D08
	040 Move X8, [X19]
	041 Move X1, [X8]
	042 Call 0x1C18270
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {49}
	047 Call 0x3EB2AE0
	048 Move X0, X31
	049 Move W0, 8
	050 Call 0x3EB2AF0
	051 Move X8, [X19]
	052 Move [X0], X8
	053 Move X1, 0xC12000
	054 Add X1, X1, 3672
	055 Move X2, X31
	056 Call 0x3EB2B00
	057 Move X19, X0
	058 Call 0x3EB2AE0
	059 Move X0, X19
	060 Call 0x1D2D690
	061 Call 0x1991590

Method: System.String GetClrAssemblyName(System.Type type, out System.Boolean hasTypeForwardedFrom)

Disassembly:
	0x032A35C0 RET
	0x032A35C4 STR X30, [X31 - 0x40]!
	0x032A35C8 STP X24, X23, [X31 + 0x10]
	0x032A35CC STP X22, X21, [X31 + 0x20]
	0x032A35D0 STP X20, X19, [X31 + 0x30]
	0x032A35D4 ADRP X24, 0x1139000
	0x032A35D8 ADRP X23, 0xE81000
	0x032A35DC LDRB W8, [X24 + 0x77D]
	0x032A35E0 LDR X23, [X23 + 0xCE0]
	0x032A35E4 MOV X19, X3
	0x032A35E8 MOV X20, X2
	0x032A35EC MOV X22, X1
	0x032A35F0 MOV X21, X0
	0x032A35F4 TBNZ X8, 0x0, 0x32A360C
	0x032A35F8 ADRP X0, 0xE81000
	0x032A35FC LDR X0, [X0 + 0xCE0]
	0x032A3600 BL 0x1C16CF4
	0x032A3604 MOVZ W8, 0x1
	0x032A3608 STRB W8, [X24 + 0x77D]
	0x032A360C MOV X0, X21
	0x032A3610 MOV X1, X31
	0x032A3614 BL 0x33BDD8C
	0x032A3618 LDR X0, [X23]
	0x032A361C MOVZ W1, 0x10
	0x032A3620 BL 0x1C16D6C
	0x032A3624 STR X0, [X21 + 0x20]
	0x032A3628 STP X22, X20, [X21 + 0x40]
	0x032A362C STR X19, [X21 + 0x50]
	0x032A3630 LDP X20, X19, [X31 + 0x30]
	0x032A3634 LDP X22, X21, [X31 + 0x20]
	0x032A3638 LDP X24, X23, [X31 + 0x10]
	0x032A363C LDR X30, [X31], #0x40
	0x032A3640 RET
	0x032A3644 MOVZ W0, 0x1
	0x032A3648 RET
	0x032A364C STR X1, [X0 + 0x28]
	0x032A3650 RET
	0x032A3654 LDR X0, [X0 + 0x28]
	0x032A3658 RET
	0x032A365C STR X30, [X31 - 0x20]!
	0x032A3660 STP X20, X19, [X31 + 0x10]
	0x032A3664 ADRP X20, 0x1139000
	0x032A3668 LDRB W8, [X20 + 0x77E]
	0x032A366C MOV X19, X0
	0x032A3670 TBNZ X8, 0x0, 0x32A3688
	0x032A3674 ADRP X0, 0xE81000
	0x032A3678 LDR X0, [X0 + 0xCE8]
	0x032A367C BL 0x1C16CF4
	0x032A3680 MOVZ W8, 0x1
	0x032A3684 STRB W8, [X20 + 0x77E]
	0x032A3688 LDR X20, [X19 + 0x30]
	0x032A368C CBNZ X20, 0x32A36B0
	0x032A3690 ADRP X8, 0xE81000
	0x032A3694 LDR X8, [X8 + 0xCE8]
	0x032A3698 LDR X0, [X8]
	0x032A369C BL 0x1C16F10
	0x032A36A0 MOVZ W1, 0x8
	0x032A36A4 MOV X20, X0
	0x032A36A8 BL 0x32A72F4
	0x032A36AC STR X20, [X19 + 0x30]
	0x032A36B0 MOV X0, X20
	0x032A36B4 LDP X20, X19, [X31 + 0x10]
	0x032A36B8 LDR X30, [X31], #0x20
	0x032A36BC RET
	0x032A36C0 MOVZ W1, 0x8
	0x032A36C4 B 0x32A72F4
	0x032A36C8 STR X30, [X31 - 0x10]!
	0x032A36CC LDR X8, [X0 + 0x20]
	0x032A36D0 CBZ X8, 0x32A3718
	0x032A36D4 LDR W10, [X8 + 0x18]
	0x032A36D8 AND W9, W1, 0xFFF
	0x032A36DC CMP W9, W10
	0x032A36E0 B.GE 0x32A370C
	0x032A36E4 B.CS 0x32A371C
	0x032A36E8 ADD X8, X8, W9, 0x3, UXTW
	0x032A36EC LDR X0, [X8 + 0x20]
	0x032A36F0 CBZ X0, 0x32A3710
	0x032A36F4 LDR X8, [X0 + 0x18]
	0x032A36F8 CMP X8, X1
	0x032A36FC B.EQ 0x32A3710
	0x032A3700 LDR X0, [X0 + 0x48]
	0x032A3704 CBNZ X0, 0x32A36F4
	0x032A3708 B 0x32A3710
	0x032A370C MOV X0, X31
	0x032A3710 LDR X30, [X31], #0x10
	0x032A3714 RET
	0x032A3718 BL 0x1C16F20
	0x032A371C BL 0x1C16F28
	0x032A3720 SUB X31, X31, 0x30
	0x032A3724 STP X30, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x113A000
	006 Move W8, [X21+1907]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0xE82000
	014 Move X0, [X0+3192]
	015 Call 0x1C17CF4
	016 Move X0, 0xE82000
	017 Move X0, [X0+3200]
	018 Call 0x1C17CF4
	019 Move X0, 0xE51000
	020 Move X0, [X0+1728]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+1907], W8
	024 Compare X20, 0
	025 JumpIfEqual {86}
	026 Move X8, 0xE51000
	027 Move X8, [X8+1728]
	028 Move X0, [X8]
	029 Move X8, 0xE82000
	030 Move X8, [X8+3192]
	031 Move W9, [X0+224]
	032 Move X21, [X8]
	033 Compare W9, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X0, X21
	037 Move X1, X31
	038 Call Type.GetTypeFromHandle, X0
	039 Move X8, [X20]
	040 Move X1, X0
	041 Move X0, X20
	042 Move W2, W31
	043 Move X9, [X8+520]
	044 Move X3, [X8+528]
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Compare X0, 0
	047 JumpIfEqual {70}
	048 Move X8, [X0+24]
	049 Compare X8, 0
	050 JumpIfEqual {70}
	051 Move W8, 1
	052 Move [X19], W8
	053 Move W8, [X0+24]
	054 Compare W8, 0
	055 JumpIfEqual {105}
	056 Move X0, [X0+32]
	057 Compare X0, 0
	058 JumpIfEqual {104}
	059 Move X8, 0xE82000
	060 Move X8, [X8+3200]
	061 Move X1, [X8]
	062 Move X8, [X0]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X0, [X0+16]
	065 Move X20, [X31+16]
	066 Move X19, [X31+24]
	067 Move X30, [X31+32]
	068 Move X21, [X31+40]
	069 Return X0
	070 Move [X19], W31
	071 Move X8, [X20]
	072 Move X0, X20
	073 Move X9, [X8+760]
	074 Move X1, [X8+768]
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Compare X0, 0
	077 JumpIfEqual {104}
	078 Move X8, [X0]
	079 Move X20, [X31+16]
	080 Move X19, [X31+24]
	081 Move X2, [X8+440]
	082 Move X1, [X8+448]
	083 Move X30, [X31+32]
	084 Move X21, [X31+40]
	085 CallNoReturn X2
	086 Move X0, 0xE56000
	087 Move X0, [X0+1320]
	088 Call 0x1C17D08
	089 Call 0x1C17F10
	090 Move X19, X0
	091 Move X0, 0xE59000
	092 Move X0, [X0+1512]
	093 Call 0x1C17D08
	094 Move X1, X0
	095 Move X0, X19
	096 Move X2, X31
	097 Call ArgumentNullException..ctor, X0, X1
	098 Move X0, 0xE82000
	099 Move X0, [X0+3208]
	100 Call 0x1C17D08
	101 Move X1, X0
	102 Move X0, X19
	103 Call 0x1C17DEC
	104 Call 0x1C17F20
	105 Call 0x1C17F28
	106 Call 0x1C181E0

Method: System.String GetClrTypeFullName(System.Type type)

Disassembly:
	0x032A3728 STP X20, X19, [X31 + 0x20]
	0x032A372C ADRP X21, 0x1139000
	0x032A3730 LDRB W8, [X21 + 0x77F]
	0x032A3734 MOV X20, X1
	0x032A3738 MOV X19, X0
	0x032A373C TBNZ X8, 0x0, 0x32A3754
	0x032A3740 ADRP X0, 0xE81000
	0x032A3744 LDR X0, [X0 + 0xCF0]
	0x032A3748 BL 0x1C16CF4
	0x032A374C MOVZ W8, 0x1
	0x032A3750 STRB W8, [X21 + 0x77F]
	0x032A3754 MOV X0, X19
	0x032A3758 MOV X1, X20
	0x032A375C BL 0x32A36C8
	0x032A3760 CBNZ X0, 0x32A37A8
	0x032A3764 ADRP X8, 0xE81000
	0x032A3768 LDR X8, [X8 + 0xCF0]
	0x032A376C LDR X0, [X8]
	0x032A3770 BL 0x1C16F10
	0x032A3774 MOV X1, X31
	0x032A3778 MOV X2, X20
	0x032A377C MOV X3, X31
	0x032A3780 MOV X4, X31
	0x032A3784 MOV X5, X31
	0x032A3788 MOV X6, X31
	0x032A378C MOV X7, X31
	0x032A3790 MOV X21, X0
	0x032A3794 BL 0x32A54F8
	0x032A3798 MOV X0, X19
	0x032A379C MOV X1, X21
	0x032A37A0 BL 0x32A37EC
	0x032A37A4 MOV X0, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x113A000
	005 Move W8, [X20+1908]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE82000
	012 Move X0, [X0+2928]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1908], W8
	016 Compare X19, 0
	017 JumpIfEqual {43}
	018 Move X20, 0xE82000
	019 Move X20, [X20+2928]
	020 Move X0, X19
	021 Move X1, X31
	022 Call Type.get_IsArray, X0
	023 Move X8, [X20]
	024 Move W20, W0
	025 Move W9, [X8+224]
	026 Compare W9, 0
	027 JumpIfNotEqual {30}
	028 Move X0, X8
	029 Call 0x1C17DFC
	030 Move X0, X19
	031 Move TEMP, X20
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {38}
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Call FormatterServices.GetClrTypeFullNameForNonArrayTypes, X0
	042 Return X0
	043 Call 0x1C17F20

Method: System.String GetClrTypeFullNameForArray(System.Type type)

Disassembly:
	0x032A37A8 LDP X20, X19, [X31 + 0x20]
	0x032A37AC LDP X30, X21, [X31 + 0x10]
	0x032A37B0 ADD X31, X31, 0x30
	0x032A37B4 RET
	0x032A37B8 SUB X31, X31, 0x20
	0x032A37BC STR X30, [X31 + 0x10]
	0x032A37C0 MOV X2, X1
	0x032A37C4 MOV X1, X31
	0x032A37C8 MOV X3, X31
	0x032A37CC MOV X4, X31
	0x032A37D0 MOV X5, X31
	0x032A37D4 MOV X6, X31
	0x032A37D8 MOV X7, X31
	0x032A37DC BL 0x32A54F8
	0x032A37E0 LDR X30, [X31 + 0x10]
	0x032A37E4 ADD X31, X31, 0x20
	0x032A37E8 RET
	0x032A37EC STP X30, X21, [X31 - 0x20]!
	0x032A37F0 STP X20, X19, [X31 + 0x10]
	0x032A37F4 ADRP X21, 0x1139000
	0x032A37F8 LDRB W8, [X21 + 0x780]
	0x032A37FC MOV X19, X1
	0x032A3800 MOV X20, X0
	0x032A3804 TBNZ X8, 0x0, 0x32A381C
	0x032A3808 ADRP X0, 0xE81000
	0x032A380C LDR X0, [X0 + 0xCE0]
	0x032A3810 BL 0x1C16CF4
	0x032A3814 MOVZ W8, 0x1
	0x032A3818 STRB W8, [X21 + 0x780]
	0x032A381C CBZ X19, 0x32A38DC
	0x032A3820 LDR X21, [X20 + 0x20]
	0x032A3824 CBZ X21, 0x32A38DC
	0x032A3828 LDR X8, [X19 + 0x18]
	0x032A382C LDR X9, [X21 + 0x18]
	0x032A3830 CMP X8, W9, SXTW
	0x032A3834 B.LT 0x32A38B0
	0x032A3838 CMP W9, 0x1000
	0x032A383C B.EQ 0x32A38B0
	0x032A3840 CMP X8, 0x7FF
	0x032A3844 B.LE 0x32A3850
	0x032A3848 MOVZ W1, 0x1000
	0x032A384C B 0x32A3874
	0x032A3850 UBFM W9, W9, 0x1F, 0x1E
	0x032A3854 CMP W9, 0xFFF
	0x032A3858 B.GT 0x32A3868
	0x032A385C SXTW X10, W9
	0x032A3860 CMP X8, X10
	0x032A3864 B.GE 0x32A3850
	0x032A3868 CMP W9, 0x1000
	0x032A386C MOVZ W8, 0x1000
	0x032A3870 CSEL W1, W9, W8, LT
	0x032A3874 ADRP X8, 0xE81000
	0x032A3878 LDR X8, [X8 + 0xCE0]
	0x032A387C LDR X0, [X8]
	0x032A3880 BL 0x1C16D6C
	0x032A3884 LDR X8, [X20 + 0x20]
	0x032A3888 CBZ X8, 0x32A38DC
	0x032A388C LDR W2, [X8 + 0x18]
	0x032A3890 MOV X21, X0
	0x032A3894 MOV X0, X8
	0x032A3898 MOV X1, X21
	0x032A389C MOV X3, X31
	0x032A38A0 BL 0x33A0C7C
	0x032A38A4 STR X21, [X20 + 0x20]
	0x032A38A8 CBZ X21, 0x32A38DC
	0x032A38AC LDR X8, [X19 + 0x18]
	0x032A38B0 LDR W9, [X21 + 0x18]
	0x032A38B4 AND X8, X8, 0xFFF
	0x032A38B8 CMP W8, W9
	0x032A38BC B.CS 0x32A38E0
	0x032A38C0 ADD X8, X21, X8, 0x3, LSL
	0x032A38C4 LDR X9, [X8 + 0x20]
	0x032A38C8 STR X9, [X19 + 0x48]
	0x032A38CC STR X19, [X8 + 0x20]
	0x032A38D0 LDP X20, X19, [X31 + 0x10]
	0x032A38D4 LDP X30, X21, [X31], #0x20
	0x032A38D8 RET
	0x032A38DC BL 0x1C16F20
	0x032A38E0 BL 0x1C16F28
	0x032A38E4 STR X30, [X31 - 0x40]!
	0x032A38E8 STP X24, X23, [X31 + 0x10]
	0x032A38EC STP X22, X21, [X31 + 0x20]
	0x032A38F0 STP X20, X19, [X31 + 0x30]
	0x032A38F4 ADRP X24, 0x1139000
	0x032A38F8 LDRB W8, [X24 + 0x781]
	0x032A38FC MOV W20, W4
	0x032A3900 MOV X23, X3
	0x032A3904 MOV X21, X2
	0x032A3908 MOV X19, X1
	0x032A390C MOV X22, X0
	0x032A3910 TBNZ X8, 0x0, 0x32A3928
	0x032A3914 ADRP X0, 0xE81000
	0x032A3918 LDR X0, [X0 + 0xCF8]
	0x032A391C BL 0x1C16CF4
	0x032A3920 MOVZ W8, 0x1
	0x032A3924 STRB W8, [X24 + 0x781]
	0x032A3928 CBZ X19, 0x32A3A10
	0x032A392C LDR X8, [X19 + 0x18]
	0x032A3930 MOV X0, X22
	0x032A3934 STR X8, [X23]
	0x032A3938 LDR X1, [X19 + 0x10]
	0x032A393C BL 0x32A36C8
	0x032A3940 STR X0, [X21]
	0x032A3944 CBZ X0, 0x32A3A10
	0x032A3948 LDR W8, [X0 + 0x50]
	0x032A394C ANDS W31, W8, 0x6
	0x032A3950 CSET W9, EQ
	0x032A3954 TBNZ X8, 0x0, 0x32A3964
	0x032A3958 AND W10, W8, 0x4000
	0x032A395C ORR W9, W9, W10, 0xE
	0x032A3960 TBNZ X9, 0x0, 0x32A39A0
	0x032A3964 LDR X9, [X0 + 0x10]
	0x032A3968 CBZ X9, 0x32A39A0
	0x032A396C ADRP X11, 0xE81000
	0x032A3970 LDR X11, [X11 + 0xCF8]
	0x032A3974 LDR X10, [X9]
	0x032A3978 LDR X9, [X11]
	0x032A397C LDRB W12, [X10 + 0x130]
	0x032A3980 LDRB W11, [X9 + 0x130]
	0x032A3984 CMP W12, W11
	0x032A3988 B.CC 0x32A39A0
	0x032A398C LDR X10, [X10 + 0xC8]
	0x032A3990 ADD X10, X10, X11, 0x3, LSL
	0x032A3994 LDUR X10, [X10 - 0x8]
	0x032A3998 CMP X10, X9
	0x032A399C B.EQ 0x32A39F0
	0x032A39A0 TBNZ X8, 0x0, 0x32A39B0
	0x032A39A4 TBZ X8, 0x2, 0x32A39C4
	0x032A39A8 BL 0x32A3E20
	0x032A39AC TBZ X0, 0x0, 0x32A39BC
	0x032A39B0 TBNZ X20, 0x0, 0x32A3A14
	0x032A39B4 MOV W8, W31
	0x032A39B8 B 0x32A39D8
	0x032A39BC LDR X0, [X21]
	0x032A39C0 CBZ X0, 0x32A3A10
	0x032A39C4 LDR X9, [X0 + 0x10]
	0x032A39C8 CMP X9, 0x0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x113A000
	007 Move W8, [X20+1909]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {39}
	013 Move X0, 0xE53000
	014 Move X0, [X0+3144]
	015 Call 0x1C17CF4
	016 Move X0, 0xE82000
	017 Move X0, [X0+2928]
	018 Call 0x1C17CF4
	019 Move X0, 0xE51000
	020 Move X0, [X0+2288]
	021 Call 0x1C17CF4
	022 Move X0, 0xE79000
	023 Move X0, [X0+2712]
	024 Call 0x1C17CF4
	025 Move X0, 0xE82000
	026 Move X0, [X0+3216]
	027 Call 0x1C17CF4
	028 Move X0, 0xE53000
	029 Move X0, [X0+928]
	030 Call 0x1C17CF4
	031 Move X0, 0xE51000
	032 Move X0, [X0+3784]
	033 Call 0x1C17CF4
	034 Move X0, 0xE51000
	035 Move X0, [X0+2120]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X20+1909], W8
	039 Compare X19, 0
	040 JumpIfEqual {151}
	041 Move X8, [X19]
	042 Move X0, X19
	043 Move X9, [X8+1080]
	044 Move X1, [X8+1088]
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Subtract W22, W0, 1
	047 Move X8, 0xE53000
	048 Move X8, [X8+3144]
	049 Move X0, [X8]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move X0, X31
	055 Call CultureInfo.get_InvariantCulture
	056 Move X8, [X19]
	057 Move X20, X0
	058 Move X0, X19
	059 Move X9, [X8+1064]
	060 Move X1, [X8+1072]
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Move X8, 0xE82000
	063 Move X8, [X8+2928]
	064 Move X19, X0
	065 Move X8, [X8]
	066 Move W9, [X8+224]
	067 Compare W9, 0
	068 JumpIfNotEqual {71}
	069 Move X0, X8
	070 Call 0x1C17DFC
	071 Move X0, X19
	072 Call FormatterServices.GetClrTypeFullName, X0
	073 Move X8, 0xE79000
	074 Move X9, 0xE82000
	075 Move X8, [X8+2712]
	076 Move X9, [X9+3216]
	077 Move X2, X0
	078 Move X0, X20
	079 Move X1, [X8]
	080 Move X3, [X9]
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X22, [X31+16]
	084 Move X21, [X31+24]
	085 Move X4, X31
	086 Move X30, [X31+48]
	087 Call String.Format, X0, X1, X2, X3
	088 Return X0
	089 Move X8, [X19]
	090 Move W20, W0
	091 Move X0, X19
	092 Move X9, [X8+1064]
	093 Move X1, [X8+1072]
	094 NotImplemented "Instruction BLR not yet implemented."
	095 Move X8, 0xE82000
	096 Move X8, [X8+2928]
	097 Move X19, X0
	098 Move X8, [X8]
	099 Move W9, [X8+224]
	100 Compare W9, 0
	101 JumpIfNotEqual {104}
	102 Move X0, X8
	103 Call 0x1C17DFC
	104 Move X0, X19
	105 Call FormatterServices.GetClrTypeFullName, X0
	106 Move X8, 0xE51000
	107 Move X8, [X8+2288]
	108 Move X21, X0
	109 Move X8, [X8]
	110 Move X0, X8
	111 Call 0x1C17F10
	112 Move X1, X21
	113 Move X2, X31
	114 Move X19, X0
	115 Call StringBuilder..ctor, X0, X1
	116 Compare X19, 0
	117 JumpIfEqual {151}
	118 Move X8, 0xE51000
	119 Move X8, [X8+3784]
	120 Move X0, X19
	121 Move X2, X31
	122 Move X1, [X8]
	123 Call StringBuilder.Append, X0, X1
	124 Compare X0, 0
	125 JumpIfEqual {151}
	126 Move X19, X0
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move X20, 0xE53000
	129 Move X20, [X20+928]
	130 Move X1, [X20]
	131 Move X0, X19
	132 Move X2, X31
	133 Call StringBuilder.Append, X0, X1
	134 Subtract W22, W22, 1
	135 Move X8, 0xE51000
	136 Move X8, [X8+2120]
	137 Move X0, X19
	138 Move X2, X31
	139 Move X1, [X8]
	140 Call StringBuilder.Append, X0, X1
	141 Move X8, [X19]
	142 Move X0, X19
	143 Move X20, [X31+32]
	144 Move X19, [X31+40]
	145 Move X22, [X31+16]
	146 Move X21, [X31+24]
	147 Move X2, [X8+360]
	148 Move X1, [X8+368]
	149 Move X30, [X31+48]
	150 CallNoReturn X2
	151 Call 0x1C17F20

Method: System.String GetClrTypeFullNameForNonArrayTypes(System.Type type)

Disassembly:
	0x032A39CC CSET W8, NE
	0x032A39D0 CBNZ X9, 0x32A39D8
	0x032A39D4 TBNZ X20, 0x0, 0x32A3A94
	0x032A39D8 LDP X20, X19, [X31 + 0x30]
	0x032A39DC LDP X22, X21, [X31 + 0x20]
	0x032A39E0 LDP X24, X23, [X31 + 0x10]
	0x032A39E4 MOV W0, W8
	0x032A39E8 LDR X30, [X31], #0x40
	0x032A39EC RET
	0x032A39F0 MOV X0, X22
	0x032A39F4 BL 0x32A365C
	0x032A39F8 CBZ X0, 0x32A3A10
	0x032A39FC LDR X8, [X0]
	0x032A3A00 LDR X1, [X21]
	0x032A3A04 LDP X9, X2, [X8 + 0x178]
	0x032A3A08 BLR X9
	0x032A3A0C B 0x32A39B4
	0x032A3A10 BL 0x1C16F20
	0x032A3A14 LDR X0, [X21]
	0x032A3A18 CBNZ X0, 0x32A3A94
	0x032A3A1C ADRP X0, 0xE50000
	0x032A3A20 LDR X0, [X0 + 0x9D0]
	0x032A3A24 BL 0x1C16D08
	0x032A3A28 MOVZ W1, 0x1
	0x032A3A2C BL 0x1C16D6C
	0x032A3A30 MOV X20, X0
	0x032A3A34 MOV X0, X19
	0x032A3A38 BL 0x19903C0
	0x032A3A3C LDR X8, [X19 + 0x10]
	0x032A3A40 ADRP X0, 0xE52000
	0x032A3A44 STR X8, [X31 + 0x8]
	0x032A3A48 LDR X0, [X0 + 0xA60]
	0x032A3A4C BL 0x1C16D08
	0x032A3A50 ADD X1, X31, 0x8
	0x032A3A54 BL 0x1C16E04
	0x032A3A58 MOV X19, X0
	0x032A3A5C MOV X0, X20
	0x032A3A60 BL 0x19903C0
	0x032A3A64 MOV X0, X20
	0x032A3A68 MOV X1, X19
	0x032A3A6C BL 0x19980B4
	0x032A3A70 MOV X0, X20
	0x032A3A74 MOV X1, X31
	0x032A3A78 MOV X2, X19
	0x032A3A7C BL 0x1993444
	0x032A3A80 ADRP X0, 0xE81000
	0x032A3A84 LDR X0, [X0 + 0xD00]
	0x032A3A88 BL 0x1C16D08
	0x032A3A8C MOV X1, X20
	0x032A3A90 B 0x32A3B54
	0x032A3A94 LDR W20, [X0 + 0x50]
	0x032A3A98 ADRP X0, 0xE50000
	0x032A3A9C LDR X0, [X0 + 0x9D0]
	0x032A3AA0 BL 0x1C16D08
	0x032A3AA4 MOVZ W1, 0x1
	0x032A3AA8 BL 0x1C16D6C
	0x032A3AAC LDR X8, [X19 + 0x10]
	0x032A3AB0 MOV X19, X0
	0x032A3AB4 TBNZ X20, 0x0, 0x32A3B04
	0x032A3AB8 STR X8, [X31 + 0x8]
	0x032A3ABC ADRP X0, 0xE52000
	0x032A3AC0 LDR X0, [X0 + 0xA60]
	0x032A3AC4 BL 0x1C16D08
	0x032A3AC8 ADD X1, X31, 0x8
	0x032A3ACC BL 0x1C16E04
	0x032A3AD0 MOV X20, X0
	0x032A3AD4 MOV X0, X19
	0x032A3AD8 BL 0x19903C0
	0x032A3ADC MOV X0, X19
	0x032A3AE0 MOV X1, X20
	0x032A3AE4 BL 0x19980B4
	0x032A3AE8 MOV X0, X19
	0x032A3AEC MOV X1, X31
	0x032A3AF0 MOV X2, X20
	0x032A3AF4 BL 0x1993444
	0x032A3AF8 ADRP X0, 0xE81000
	0x032A3AFC LDR X0, [X0 + 0xD08]
	0x032A3B00 B 0x32A3B4C
	0x032A3B04 STR X8, [X31 + 0x8]
	0x032A3B08 ADRP X0, 0xE52000
	0x032A3B0C LDR X0, [X0 + 0xA60]
	0x032A3B10 BL 0x1C16D08
	0x032A3B14 ADD X1, X31, 0x8
	0x032A3B18 BL 0x1C16E04
	0x032A3B1C MOV X20, X0
	0x032A3B20 MOV X0, X19
	0x032A3B24 BL 0x19903C0
	0x032A3B28 MOV X0, X19
	0x032A3B2C MOV X1, X20
	0x032A3B30 BL 0x19980B4
	0x032A3B34 MOV X0, X19
	0x032A3B38 MOV X1, X31
	0x032A3B3C MOV X2, X20
	0x032A3B40 BL 0x1993444
	0x032A3B44 ADRP X0, 0xE81000
	0x032A3B48 LDR X0, [X0 + 0xD10]
	0x032A3B4C BL 0x1C16D08
	0x032A3B50 MOV X1, X19
	0x032A3B54 MOV X2, X31
	0x032A3B58 BL 0x33BFB40
	0x032A3B5C MOV X19, X0
	0x032A3B60 ADRP X0, 0xE7A000
	0x032A3B64 LDR X0, [X0 + 0x2E0]
	0x032A3B68 BL 0x1C16D08
	0x032A3B6C BL 0x1C16F10
	0x032A3B70 MOV X1, X19
	0x032A3B74 MOV X20, X0
	0x032A3B78 BL 0x329F100
	0x032A3B7C ADRP X0, 0xE81000
	0x032A3B80 LDR X0, [X0 + 0xD18]
	0x032A3B84 BL 0x1C16D08
	0x032A3B88 MOV X1, X0
	0x032A3B8C MOV X0, X20
	0x032A3B90 BL 0x1C16DEC
	0x032A3B94 LDR W8, [X0 + 0x50]
	0x032A3B98 ANDS W31, W8, 0x6
	0x032A3B9C AND W9, W8, 0x4000
	0x032A3BA0 CSET W10, EQ
	0x032A3BA4 ANDS W31, W8, 0x1
	0x032A3BA8 CSET W8, EQ
	0x032A3BAC ORR W9, W10, W9, 0xE
	0x032A3BB0 AND W0, W8, W9, 0x0
	0x032A3BB4 RET
	0x032A3BB8 LDR W8, [X0 + 0x50]
	0x032A3BBC TBNZ X8, 0x0, 0x32A3BCC
	0x032A3BC0 TBNZ X8, 0x2, 0x32A3BD4
	0x032A3BC4 MOV W0, W31
	0x032A3BC8 RET
	0x032A3BCC MOVZ W0, 0x1
	0x032A3BD0 RET
	0x032A3BD4 B 0x32A3E20
	0x032A3BD8 LDR W8, [X0 + 0x50]
	0x032A3BDC AND W0, W8, 0x1
	0x032A3BE0 RET
	0x032A3BE4 STP X30, X25, [X31 - 0x40]!
	0x032A3BE8 STP X24, X23, [X31 + 0x10]
	0x032A3BEC STP X22, X21, [X31 + 0x20]
	0x032A3BF0 STP X20, X19, [X31 + 0x30]
	0x032A3BF4 ADRP X21, 0x1139000
	0x032A3BF8 LDRB W8, [X21 + 0x782]
	0x032A3BFC MOV X19, X1
	0x032A3C00 MOV X20, X0
	0x032A3C04 TBNZ X8, 0x0, 0x32A3C1C
	0x032A3C08 ADRP X0, 0xE81000
	0x032A3C0C LDR X0, [X0 + 0xCA0]
	0x032A3C10 BL 0x1C16CF4
	0x032A3C14 MOVZ W8, 0x1
	0x032A3C18 STRB W8, [X21 + 0x782]
	0x032A3C1C CBZ X19, 0x32A3D60
	0x032A3C20 LDRB W8, [X19 + 0x50]
	0x032A3C24 TBNZ X8, 0x2, 0x32A3C3C
	0x032A3C28 LDR X1, [X19 + 0x10]
	0x032A3C2C LDR X2, [X19 + 0x28]
	0x032A3C30 LDP X3, X4, [X20 + 0x48]
	0x032A3C34 BL 0x32A4078
	0x032A3C38 B 0x32A3D04
	0x032A3C3C LDR X21, [X19 + 0x30]

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X19, 0x113A000
	013 Move W8, [X19+1910]
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {39}
	019 Move X0, 0xE82000
	020 Move X0, [X0+2928]
	021 Call 0x1C17CF4
	022 Move X0, 0xE51000
	023 Move X0, [X0+2288]
	024 Call 0x1C17CF4
	025 Move X0, 0xE51000
	026 Move X0, [X0+2104]
	027 Call 0x1C17CF4
	028 Move X0, 0xE82000
	029 Move X0, [X0+3224]
	030 Call 0x1C17CF4
	031 Move X0, 0xE51000
	032 Move X0, [X0+3784]
	033 Call 0x1C17CF4
	034 Move X0, 0xE51000
	035 Move X0, [X0+2120]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X19+1910], W8
	039 Move [X31+12], W31
	040 Compare X20, 0
	041 JumpIfEqual {181}
	042 Move X8, [X20]
	043 Move X0, X20
	044 Move X9, [X8+968]
	045 Move X1, [X8+976]
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Move X8, [X20]
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {165}
	052 Move X9, [X8+1128]
	053 Move X1, [X8+1136]
	054 Move X0, X20
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Move X8, [X20]
	057 Move X19, X0
	058 Move X0, X20
	059 Move X9, [X8+1096]
	060 Move X1, [X8+1104]
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Compare X0, 0
	063 JumpIfEqual {181}
	064 Move X8, [X0]
	065 Move X9, [X8+744]
	066 Move X1, [X8+752]
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Move X8, 0xE51000
	069 Move X8, [X8+2288]
	070 Move X21, X0
	071 Move X8, [X8]
	072 Move X0, X8
	073 Call 0x1C17F10
	074 Move X1, X21
	075 Move X2, X31
	076 Move X20, X0
	077 Call StringBuilder..ctor, X0, X1
	078 Compare X20, 0
	079 JumpIfEqual {181}
	080 Move X23, 0xE51000
	081 Move X23, [X23+3784]
	082 Move X0, X20
	083 Move X2, X31
	084 Move X1, [X23]
	085 Call StringBuilder.Append, X0, X1
	086 Compare X19, 0
	087 JumpIfEqual {181}
	088 Move X8, [X19+24]
	089 Move X20, X0
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X26, 0xE82000
	092 Move X27, 0xE51000
	093 Move X28, 0xE82000
	094 Move X26, [X26+2928]
	095 Move X27, [X27+2104]
	096 Move X28, [X28+3224]
	097 Move X24, X31
	098 And X8, X8, 0
	099 Add X25, X19, 32
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Compare X20, 0
	102 JumpIfEqual {181}
	103 Move X1, [X23]
	104 Move X21, [X25]
	105 Move X0, X20
	106 Move X2, X31
	107 Call StringBuilder.Append, X0, X1
	108 Move X8, [X26]
	109 Move X22, X0
	110 Move W9, [X8+224]
	111 Compare W9, 0
	112 JumpIfNotEqual {115}
	113 Move X0, X8
	114 Call 0x1C17DFC
	115 Move X0, X21
	116 Call FormatterServices.GetClrTypeFullName, X0
	117 Compare X22, 0
	118 JumpIfEqual {181}
	119 Move X1, X0
	120 Move X0, X22
	121 Move X2, X31
	122 Call StringBuilder.Append, X0, X1
	123 Compare X0, 0
	124 JumpIfEqual {181}
	125 Move X1, [X27]
	126 Move X2, X31
	127 Call StringBuilder.Append, X0, X1
	128 Add X1, X31, 12
	129 Move X0, X21
	130 Call FormatterServices.GetClrAssemblyName, X0, X1
	131 Move X1, X0
	132 Move X0, X20
	133 Move X2, X31
	134 Call StringBuilder.Append, X0, X1
	135 Compare X0, 0
	136 JumpIfEqual {181}
	137 Move X1, [X28]
	138 Move X2, X31
	139 Call StringBuilder.Append, X0, X1
	140 Move W8, [X19+24]
	141 Add X24, X24, 1
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Compare X20, 0
	144 JumpIfEqual {181}
	145 Move X0, X20
	146 Move X1, X31
	147 Call StringBuilder.get_Length, X0
	148 Subtract W1, W0, 1
	149 Move W2, 1
	150 Move X0, X20
	151 Move X3, X31
	152 Call StringBuilder.Remove, X0, X1, X2
	153 Compare X0, 0
	154 JumpIfEqual {181}
	155 Move X8, 0xE51000
	156 Move X8, [X8+2120]
	157 Move X2, X31
	158 Move X1, [X8]
	159 Call StringBuilder.Append, X0, X1
	160 Compare X0, 0
	161 JumpIfEqual {181}
	162 Move X8, [X0]
	163 Move X9, [X8+360]
	164 Move X1, [X8+368]
	165 Move X9, [X8+744]
	166 Move X1, [X8+752]
	167 Move X0, X20
	168 NotImplemented "Instruction BLR not yet implemented."
	169 Move X20, [X31+80]
	170 Move X19, [X31+88]
	171 Move X22, [X31+64]
	172 Move X21, [X31+72]
	173 Move X24, [X31+48]
	174 Move X23, [X31+56]
	175 Move X26, [X31+32]
	176 Move X25, [X31+40]
	177 Move X28, [X31+16]
	178 Move X27, [X31+24]
	179 Move X30, [X31+96]
	180 Return X0
	181 Call 0x1C17F20
	182 Call 0x1C17F28

