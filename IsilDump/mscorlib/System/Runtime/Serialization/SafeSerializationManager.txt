Type: System.Runtime.Serialization.SafeSerializationManager

Method: System.Void .ctor()

Disassembly:
	0x032A85A4 LDR X1, [X8 + 0x2F0]
	0x032A85A8 BLR X9

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x032A85AC STR X0, [X19 + 0x40]
	0x032A85B0 LDR X8, [X20]
	0x032A85B4 MOV X0, X20
	0x032A85B8 LDR X9, [X8 + 0x308]
	0x032A85BC LDR X1, [X8 + 0x310]
	0x032A85C0 BLR X9
	0x032A85C4 CBZ X0, 0x32A85F8
	0x032A85C8 LDR X8, [X0]
	0x032A85CC LDP X9, X1, [X8 + 0x1A8]
	0x032A85D0 BLR X9
	0x032A85D4 CBZ X0, 0x32A85F8
	0x032A85D8 LDR X8, [X0]
	0x032A85DC LDP X9, X1, [X8 + 0x1B8]
	0x032A85E0 BLR X9
	0x032A85E4 STR X0, [X19 + 0x48]
	0x032A85E8 STRH W31, [X19 + 0x58]
	0x032A85EC LDP X20, X19, [X31 + 0x10]
	0x032A85F0 LDP X30, X21, [X31], #0x20
	0x032A85F4 RET
	0x032A85F8 BL 0x1C16F20
	0x032A85FC ADRP X0, 0xE50000
	0x032A8600 LDR X0, [X0 + 0x528]
	0x032A8604 BL 0x1C16D08
	0x032A8608 BL 0x1C16F10
	0x032A860C MOV X19, X0
	0x032A8610 ADRP X0, 0xE53000
	0x032A8614 LDR X0, [X0 + 0x5E8]
	0x032A8618 BL 0x1C16D08
	0x032A861C MOV X1, X0
	0x032A8620 MOV X0, X19
	0x032A8624 MOV X2, X31
	0x032A8628 BL 0x330E100
	0x032A862C ADRP X0, 0xE7C000
	0x032A8630 LDR X0, [X0 + 0xEF8]
	0x032A8634 BL 0x1C16D08
	0x032A8638 MOV X1, X0
	0x032A863C MOV X0, X19
	0x032A8640 BL 0x1C16DEC
	0x032A8644 B 0x32A86DC
	0x032A8648 STR X30, [X31 - 0x10]!
	0x032A864C MOV W8, W31
	0x032A8650 CBZ X0, 0x32A86C4
	0x032A8654 CBZ X1, 0x32A86C4
	0x032A8658 LDR X8, [X0 + 0x18]
	0x032A865C CBZ X8, 0x32A86C4
	0x032A8660 LDR X9, [X1 + 0x18]
	0x032A8664 CBZ X9, 0x32A86C0
	0x032A8668 CMP W8, W9
	0x032A866C B.NE 0x32A86C0
	0x032A8670 CMP W8, 0x1
	0x032A8674 B.LT 0x32A86D0
	0x032A8678 MOV W10, W31
	0x032A867C SUB W9, W31, W8
	0x032A8680 ADDS W31, W9, W10
	0x032A8684 B.EQ 0x32A86D8
	0x032A8688 SXTW X10, W10
	0x032A868C ADD X8, X0, X10
	0x032A8690 ADD X12, X1, X10
	0x032A8694 LDRB W11, [X8 + 0x20]
	0x032A8698 LDRB W12, [X12 + 0x20]
	0x032A869C ADD W13, W9, W10
	0x032A86A0 CMP W11, W12
	0x032A86A4 CSET W8, EQ
	0x032A86A8 ADDS W31, W13, 0x1
	0x032A86AC B.EQ 0x32A86C4
	0x032A86B0 CMP W11, W12
	0x032A86B4 ADD W10, W10, 0x1
	0x032A86B8 B.EQ 0x32A8680
	0x032A86BC B 0x32A86C4
	0x032A86C0 MOV W8, W31
	0x032A86C4 MOV W0, W8
	0x032A86C8 LDR X30, [X31], #0x10
	0x032A86CC RET
	0x032A86D0 MOVZ W8, 0x1
	0x032A86D4 B 0x32A86C4
	0x032A86D8 BL 0x1C16F28
	0x032A86DC STR X30, [X31 - 0x30]!
	0x032A86E0 STP X22, X21, [X31 + 0x10]
	0x032A86E4 STP X20, X19, [X31 + 0x20]
	0x032A86E8 ADRP X19, 0x1134000
	0x032A86EC LDRB W8, [X19 + 0x7AA]
	0x032A86F0 MOV X20, X1
	0x032A86F4 MOV X21, X0
	0x032A86F8 TBNZ X8, 0x0, 0x32A8728
	0x032A86FC ADRP X0, 0xE7C000
	0x032A8700 LDR X0, [X0 + 0xF00]
	0x032A8704 BL 0x1C16CF4
	0x032A8708 ADRP X0, 0xE7C000
	0x032A870C LDR X0, [X0 + 0xF08]
	0x032A8710 BL 0x1C16CF4
	0x032A8714 ADRP X0, 0xE7C000
	0x032A8718 LDR X0, [X0 + 0xF10]
	0x032A871C BL 0x1C16CF4
	0x032A8720 MOVZ W8, 0x1
	0x032A8724 STRB W8, [X19 + 0x7AA]
	0x032A8728 MOV X0, X21
	0x032A872C MOV X1, X20
	0x032A8730 MOV X2, X31
	0x032A8734 BL 0x321BA08
	0x032A8738 TBZ X0, 0x0, 0x32A8744
	0x032A873C MOVZ W0, 0x1
	0x032A8740 B 0x32A87C4
	0x032A8744 ADRP X22, 0xE7C000
	0x032A8748 LDR X22, [X22 + 0xF00]
	0x032A874C LDR X0, [X22]
	0x032A8750 BL 0x1C16F10
	0x032A8754 MOV X1, X21
	0x032A8758 MOV X2, X31
	0x032A875C MOV X19, X0
	0x032A8760 BL 0x32D5CD4
	0x032A8764 LDR X0, [X22]
	0x032A8768 BL 0x1C16F10
	0x032A876C MOV X1, X20
	0x032A8770 MOV X2, X31
	0x032A8774 MOV X21, X0
	0x032A8778 BL 0x32D5CD4
	0x032A877C CBZ X21, 0x32A880C
	0x032A8780 ADRP X8, 0xE7C000
	0x032A8784 LDR X0, [X21 + 0x10]
	0x032A8788 LDR X8, [X8 + 0xF10]
	0x032A878C MOVZ W2, 0x5
	0x032A8790 MOV X3, X31
	0x032A8794 LDR X1, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x1135000
	008 Move X21, 0xE7D000
	009 Move X22, 0xE4C000
	010 Move W8, [X23+1954]
	011 Move X21, [X21+3736]
	012 Move X22, [X22+1728]
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {42}
	019 Move X0, 0xE7D000
	020 Move X0, [X0+3744]
	021 Call 0x1C17CF4
	022 Move X0, 0xE51000
	023 Move X0, [X0+1856]
	024 Call 0x1C17CF4
	025 Move X0, 0xE7D000
	026 Move X0, [X0+3736]
	027 Call 0x1C17CF4
	028 Move X0, 0xE75000
	029 Move X0, [X0+1256]
	030 Call 0x1C17CF4
	031 Move X0, 0xE4C000
	032 Move X0, [X0+1728]
	033 Call 0x1C17CF4
	034 Move X0, 0xE7D000
	035 Move X0, [X0+3752]
	036 Call 0x1C17CF4
	037 Move X0, 0xE7D000
	038 Move X0, [X0+3760]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X23+1954], W8
	042 Move X0, X19
	043 Move X1, X31
	044 Call Object..ctor, X0
	045 Move X0, [X22]
	046 Move X21, [X21]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X0, X21
	052 Move X1, X31
	053 Call Type.GetTypeFromHandle, X0
	054 Compare X20, 0
	055 JumpIfEqual {135}
	056 Move X8, 0xE7D000
	057 Move X8, [X8+3760]
	058 Move X21, 0xE75000
	059 Move X2, X0
	060 Move X0, X20
	061 Move X1, [X8]
	062 Move X21, [X21+1256]
	063 Move X3, X31
	064 Call SerializationInfo.GetValueNoThrow, X0, X1, X2
	065 Move X8, [X21]
	066 Compare X0, 0
	067 JumpIfEqual {72}
	068 Move X9, [X0]
	069 Move W10, [X8+304]
	070 Move W11, [X9+304]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X21, X31
	073 Move X9, [X9+200]
	074 Add X9, X9, X10
	075 NotImplemented "Instruction LDUR not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 NotImplemented "Instruction CSEL not yet implemented."
	078 Move W9, [X8+224]
	079 Compare W9, 0
	080 JumpIfNotEqual {83}
	081 Move X0, X8
	082 Call 0x1C17DFC
	083 Move X0, X21
	084 Move X1, X31
	085 Move X2, X31
	086 Call RuntimeType.op_Equality, X0, X1
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfNotEqual {119}
	091 Move X8, 0xE7D000
	092 Move X0, [X22]
	093 Move X8, [X8+3744]
	094 Move W9, [X0+224]
	095 Move X21, [X8]
	096 Compare W9, 0
	097 JumpIfNotEqual {99}
	098 Call 0x1C17DFC
	099 Move X0, X21
	100 Move X1, X31
	101 Call Type.GetTypeFromHandle, X0
	102 Move X8, 0xE7D000
	103 Move X8, [X8+3752]
	104 Move X2, X0
	105 Move X0, X20
	106 Move X3, X31
	107 Move X1, [X8]
	108 Call SerializationInfo.GetValue, X0, X1, X2
	109 Compare X0, 0
	110 JumpIfEqual {121}
	111 Move X8, 0xE51000
	112 Move X8, [X8+1856]
	113 Move X9, [X0]
	114 Move X8, [X8]
	115 Move W11, [X9+304]
	116 Move W10, [X8+304]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move X8, X31
	119 Move [X19+40], X21
	120 Move [X19+24], X20
	121 Move [X19+16], X31
	122 Move X9, [X9+200]
	123 Add X9, X9, X10
	124 NotImplemented "Instruction LDUR not yet implemented."
	125 NotImplemented "Instruction CMP not yet implemented."
	126 NotImplemented "Instruction CSEL not yet implemented."
	127 Move [X19+16], X8
	128 Move X20, [X31+32]
	129 Move X19, [X31+40]
	130 Move X22, [X31+16]
	131 Move X21, [X31+24]
	132 Move X30, [X31+48]
	133 Move X23, [X31+56]
	134 Return 
	135 Call 0x1C17F20

Method: System.Boolean get_IsActive()

Disassembly:
	0x032A8798 BL 0x3226C60
	0x032A879C TBNZ X0, 0x0, 0x32A87C0
	0x032A87A0 ADRP X8, 0xE7C000
	0x032A87A4 LDR X0, [X21 + 0x10]

ISIL:
	001 Move X8, [X0+48]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Void CompleteSerialization(System.Object serializedObject, System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x032A87A8 LDR X8, [X8 + 0xF08]
	0x032A87AC MOVZ W2, 0x5
	0x032A87B0 MOV X3, X31
	0x032A87B4 LDR X1, [X8]
	0x032A87B8 BL 0x3226C60
	0x032A87BC TBZ X0, 0x0, 0x32A87D4
	0x032A87C0 MOV W0, W31
	0x032A87C4 LDP X20, X19, [X31 + 0x20]
	0x032A87C8 LDP X22, X21, [X31 + 0x10]
	0x032A87CC LDR X30, [X31], #0x30
	0x032A87D0 RET
	0x032A87D4 CBZ X19, 0x32A880C
	0x032A87D8 MOV X0, X19
	0x032A87DC MOV X1, X31
	0x032A87E0 BL 0x32D6BF0
	0x032A87E4 MOV X19, X0
	0x032A87E8 MOV X0, X21
	0x032A87EC MOV X1, X31
	0x032A87F0 BL 0x32D6BF0
	0x032A87F4 MOV X1, X0
	0x032A87F8 MOV X0, X19
	0x032A87FC LDP X20, X19, [X31 + 0x20]
	0x032A8800 LDP X22, X21, [X31 + 0x10]
	0x032A8804 LDR X30, [X31], #0x30
	0x032A8808 B 0x32A8648
	0x032A880C BL 0x1C16F20
	0x032A8810 LDR W0, [X0 + 0x30]
	0x032A8814 RET
	0x032A8818 LDR X0, [X0 + 0x50]
	0x032A881C RET
	0x032A8820 LDRB W0, [X0 + 0x58]
	0x032A8824 RET
	0x032A8828 LDRB W0, [X0 + 0x59]
	0x032A882C RET
	0x032A8830 STP X30, X23, [X31 - 0x30]!
	0x032A8834 STP X22, X21, [X31 + 0x10]
	0x032A8838 STP X20, X19, [X31 + 0x20]
	0x032A883C ADRP X20, 0x1134000
	0x032A8840 ADRP X23, 0xE7C000
	0x032A8844 LDRB W8, [X20 + 0x7AB]
	0x032A8848 LDR X23, [X23 + 0xF18]
	0x032A884C MOV X19, X0
	0x032A8850 TBNZ X8, 0x0, 0x32A8868
	0x032A8854 ADRP X0, 0xE7C000
	0x032A8858 LDR X0, [X0 + 0xF18]
	0x032A885C BL 0x1C16CF4
	0x032A8860 MOVZ W8, 0x1
	0x032A8864 STRB W8, [X20 + 0x7AB]
	0x032A8868 LDR X0, [X23]
	0x032A886C LDP X20, X21, [X19 + 0x10]
	0x032A8870 LDR X22, [X19 + 0x20]
	0x032A8874 LDR W19, [X19 + 0x30]
	0x032A8878 BL 0x1C16F10
	0x032A887C MOV X1, X20
	0x032A8880 MOV X2, X21
	0x032A8884 MOV X3, X22
	0x032A8888 MOV W4, W19
	0x032A888C MOV X5, X31
	0x032A8890 MOV X23, X0
	0x032A8894 BL 0x329F1CC
	0x032A8898 LDP X20, X19, [X31 + 0x20]
	0x032A889C LDP X22, X21, [X31 + 0x10]
	0x032A88A0 MOV X0, X23
	0x032A88A4 LDP X30, X23, [X31], #0x30
	0x032A88A8 RET
	0x032A88AC STP X30, X23, [X31 - 0x30]!
	0x032A88B0 STP X22, X21, [X31 + 0x10]
	0x032A88B4 STP X20, X19, [X31 + 0x20]
	0x032A88B8 ADRP X23, 0x1134000
	0x032A88BC ADRP X20, 0xE4B000
	0x032A88C0 ADRP X21, 0xE4B000
	0x032A88C4 ADRP X22, 0xE53000
	0x032A88C8 LDRB W8, [X23 + 0x7AC]
	0x032A88CC LDR X20, [X20 + 0xAC8]
	0x032A88D0 LDR X21, [X21 + 0x9D0]
	0x032A88D4 LDR X22, [X22 + 0xC60]
	0x032A88D8 MOV X19, X0
	0x032A88DC TBNZ X8, 0x0, 0x32A890C
	0x032A88E0 ADRP X0, 0xE4B000
	0x032A88E4 LDR X0, [X0 + 0x9D0]
	0x032A88E8 BL 0x1C16CF4
	0x032A88EC ADRP X0, 0xE4B000
	0x032A88F0 LDR X0, [X0 + 0xAC8]
	0x032A88F4 BL 0x1C16CF4
	0x032A88F8 ADRP X0, 0xE53000
	0x032A88FC LDR X0, [X0 + 0xC60]
	0x032A8900 BL 0x1C16CF4
	0x032A8904 MOVZ W8, 0x1
	0x032A8908 STRB W8, [X23 + 0x7AC]
	0x032A890C LDR W8, [X19 + 0x30]
	0x032A8910 MOVN W9, 0x80000000
	0x032A8914 MOVN W10, 0x1
	0x032A8918 LDR X0, [X20]
	0x032A891C UBFM W11, W8, 0x1F, 0x1E
	0x032A8920 CMP W8, W9

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0x1135000
	010 Move W8, [X24+1955]
	011 Move X22, X4
	012 Move X23, X3
	013 Move X19, X2
	014 Move X20, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {37}
	020 Move X0, 0xE7D000
	021 Move X0, [X0+3736]
	022 Call 0x1C17CF4
	023 Move X0, 0xE7D000
	024 Move X0, [X0+3768]
	025 Call 0x1C17CF4
	026 Move X0, 0xE7D000
	027 Move X0, [X0+3776]
	028 Call 0x1C17CF4
	029 Move X0, 0xE4C000
	030 Move X0, [X0+1728]
	031 Call 0x1C17CF4
	032 Move X0, 0xE7D000
	033 Move X0, [X0+3760]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X24+1955], W8
	037 Move X25, [X21+48]
	038 Move [X21+16], X31
	039 Compare X25, 0
	040 JumpIfEqual {107}
	041 Move X8, 0xE7D000
	042 Move X8, [X8+3768]
	043 Move X0, [X8]
	044 Call 0x1C17F10
	045 Move X1, X23
	046 Move X2, X22
	047 Move X24, X0
	048 Call SafeSerializationEventArgs..ctor, X0, X1
	049 Move X8, [X25+24]
	050 Move X0, [X25+64]
	051 Move X3, [X25+40]
	052 Move X1, X20
	053 Move X2, X24
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Compare X24, 0
	056 JumpIfEqual {116}
	057 Move X8, [X24+32]
	058 Move [X21+16], X8
	059 Compare X20, 0
	060 JumpIfEqual {116}
	061 Move X21, 0xE7D000
	062 Move X22, 0xE4C000
	063 Move X21, [X21+3736]
	064 Move X22, [X22+1728]
	065 Move X0, X20
	066 Move X1, X31
	067 Call "il2cpp_vm_object_is_inst", X0
	068 Move X8, [X22]
	069 Move X21, [X21]
	070 Move X20, X0
	071 Move W9, [X8+224]
	072 Compare W9, 0
	073 JumpIfNotEqual {76}
	074 Move X0, X8
	075 Call 0x1C17DFC
	076 Move X0, X21
	077 Move X1, X31
	078 Call Type.GetTypeFromHandle, X0
	079 Compare X19, 0
	080 JumpIfEqual {116}
	081 Move X8, 0xE7D000
	082 Move X8, [X8+3760]
	083 Move X21, 0xE7D000
	084 Move X3, X0
	085 Move X0, X19
	086 Move X1, [X8]
	087 Move X21, [X21+3776]
	088 Move X2, X20
	089 Move X4, X31
	090 Call SerializationInfo.AddValue, X0, X1, X2, X3
	091 Move X0, [X21]
	092 Move X1, X31
	093 Call Type.GetTypeFromHandle, X0
	094 Move X1, X0
	095 Move X0, X19
	096 Move X20, [X31+48]
	097 Move X19, [X31+56]
	098 Move X22, [X31+32]
	099 Move X21, [X31+40]
	100 Move X24, [X31+16]
	101 Move X23, [X31+24]
	102 Move X2, X31
	103 Move X30, [X31+64]
	104 Move X25, [X31+72]
	105 Call SerializationInfo.SetType, X0, X1
	106 Return 
	107 Move X20, [X31+48]
	108 Move X19, [X31+56]
	109 Move X22, [X31+32]
	110 Move X21, [X31+40]
	111 Move X24, [X31+16]
	112 Move X23, [X31+24]
	113 Move X30, [X31+64]
	114 Move X25, [X31+72]
	115 Return 
	116 Call 0x1C17F20

Method: System.Void CompleteDeserialization(System.Object deserializedObject)

Disassembly:
	0x032A8924 CSEL W9, W10, W9, EQ
	0x032A8928 CMP W11, W8
	0x032A892C CSEL W20, W9, W11, LT
	0x032A8930 MOV W1, W20
	0x032A8934 BL 0x1C16D6C
	0x032A8938 LDR X8, [X21]
	0x032A893C MOV X21, X0
	0x032A8940 MOV W1, W20
	0x032A8944 MOV X0, X8
	0x032A8948 BL 0x1C16D6C
	0x032A894C LDR X8, [X22]
	0x032A8950 MOV X22, X0
	0x032A8954 MOV W1, W20
	0x032A8958 MOV X0, X8
	0x032A895C BL 0x1C16D6C
	0x032A8960 LDR X8, [X19 + 0x10]
	0x032A8964 LDR W2, [X19 + 0x30]
	0x032A8968 MOV X20, X0
	0x032A896C MOV X1, X21
	0x032A8970 MOV X0, X8
	0x032A8974 MOV X3, X31
	0x032A8978 BL 0x33A0C7C
	0x032A897C LDR X0, [X19 + 0x18]
	0x032A8980 LDR W2, [X19 + 0x30]
	0x032A8984 MOV X1, X22
	0x032A8988 MOV X3, X31
	0x032A898C BL 0x33A0C7C
	0x032A8990 LDR X0, [X19 + 0x20]
	0x032A8994 LDR W2, [X19 + 0x30]
	0x032A8998 MOV X1, X20
	0x032A899C MOV X3, X31
	0x032A89A0 BL 0x33A0C7C
	0x032A89A4 STP X21, X22, [X19 + 0x10]
	0x032A89A8 STR X20, [X19 + 0x20]
	0x032A89AC LDP X20, X19, [X31 + 0x20]
	0x032A89B0 LDP X22, X21, [X31 + 0x10]
	0x032A89B4 LDP X30, X23, [X31], #0x30
	0x032A89B8 RET
	0x032A89BC STP X30, X19, [X31 - 0x10]!
	0x032A89C0 CBZ X1, 0x32A89D0
	0x032A89C4 CBZ X3, 0x32A89F0
	0x032A89C8 LDP X30, X19, [X31], #0x10
	0x032A89CC B 0x32A8A38
	0x032A89D0 ADRP X0, 0xE50000
	0x032A89D4 LDR X0, [X0 + 0x528]
	0x032A89D8 BL 0x1C16D08
	0x032A89DC BL 0x1C16F10
	0x032A89E0 MOV X19, X0
	0x032A89E4 ADRP X0, 0xE53000
	0x032A89E8 LDR X0, [X0 + 0x588]
	0x032A89EC B 0x32A8A0C
	0x032A89F0 ADRP X0, 0xE50000
	0x032A89F4 LDR X0, [X0 + 0x528]
	0x032A89F8 BL 0x1C16D08
	0x032A89FC BL 0x1C16F10
	0x032A8A00 MOV X19, X0
	0x032A8A04 ADRP X0, 0xE53000
	0x032A8A08 LDR X0, [X0 + 0x5E8]
	0x032A8A0C BL 0x1C16D08
	0x032A8A10 MOV X1, X0
	0x032A8A14 MOV X0, X19
	0x032A8A18 MOV X2, X31
	0x032A8A1C BL 0x330E100
	0x032A8A20 ADRP X0, 0xE7C000
	0x032A8A24 LDR X0, [X0 + 0xF20]
	0x032A8A28 BL 0x1C16D08
	0x032A8A2C MOV X1, X0
	0x032A8A30 MOV X0, X19
	0x032A8A34 BL 0x1C16DEC
	0x032A8A38 STP X30, X23, [X31 - 0x30]!
	0x032A8A3C STP X22, X21, [X31 + 0x10]
	0x032A8A40 STP X20, X19, [X31 + 0x20]
	0x032A8A44 ADRP X23, 0x1134000
	0x032A8A48 LDRB W8, [X23 + 0x7B6]
	0x032A8A4C MOV X19, X3
	0x032A8A50 MOV X21, X2
	0x032A8A54 MOV X22, X1
	0x032A8A58 MOV X20, X0
	0x032A8A5C TBNZ X8, 0x0, 0x32A8A80
	0x032A8A60 ADRP X0, 0xE4D000
	0x032A8A64 LDR X0, [X0 + 0xB28]
	0x032A8A68 BL 0x1C16CF4
	0x032A8A6C ADRP X0, 0xE50000
	0x032A8A70 LDR X0, [X0 + 0x798]
	0x032A8A74 BL 0x1C16CF4
	0x032A8A78 MOVZ W8, 0x1
	0x032A8A7C STRB W8, [X23 + 0x7B6]
	0x032A8A80 LDR X0, [X20 + 0x28]
	0x032A8A84 CBZ X0, 0x32A8B8C
	0x032A8A88 ADRP X8, 0xE50000
	0x032A8A8C LDR X8, [X8 + 0x798]
	0x032A8A90 MOV X1, X22
	0x032A8A94 LDR X2, [X8]
	0x032A8A98 BL 0x2A9F190
	0x032A8A9C TBNZ X0, 0x0, 0x32A8BA0
	0x032A8AA0 LDR X0, [X20 + 0x28]
	0x032A8AA4 CBZ X0, 0x32A8B8C
	0x032A8AA8 ADRP X8, 0xE4D000
	0x032A8AAC LDR X8, [X8 + 0xB28]
	0x032A8AB0 LDR W2, [X20 + 0x30]
	0x032A8AB4 MOV X1, X22
	0x032A8AB8 LDR X3, [X8]
	0x032A8ABC BL 0x2A9EF9C
	0x032A8AC0 LDR X8, [X20 + 0x10]
	0x032A8AC4 CBZ X8, 0x32A8B8C
	0x032A8AC8 LDR W9, [X20 + 0x30]
	0x032A8ACC LDR W10, [X8 + 0x18]
	0x032A8AD0 CMP W9, W10
	0x032A8AD4 B.LT 0x32A8AEC
	0x032A8AD8 MOV X0, X20
	0x032A8ADC BL 0x32A88AC
	0x032A8AE0 LDR X8, [X20 + 0x10]
	0x032A8AE4 CBZ X8, 0x32A8B8C
	0x032A8AE8 LDR W9, [X20 + 0x30]
	0x032A8AEC LDR W10, [X8 + 0x18]
	0x032A8AF0 CMP W9, W10
	0x032A8AF4 B.CS 0x32A8B90
	0x032A8AF8 SXTW X23, W9
	0x032A8AFC ADD X8, X8, X23, 0x3, LSL
	0x032A8B00 STR X22, [X8 + 0x20]
	0x032A8B04 LDR X22, [X20 + 0x18]
	0x032A8B08 CBZ X22, 0x32A8B8C
	0x032A8B0C CBZ X21, 0x32A8B24
	0x032A8B10 LDR X8, [X22]
	0x032A8B14 MOV X0, X21
	0x032A8B18 LDR X1, [X8 + 0x40]
	0x032A8B1C BL 0x1C16E00
	0x032A8B20 CBZ X0, 0x32A8B94
	0x032A8B24 LDR W8, [X22 + 0x18]
	0x032A8B28 CMP W23, W8
	0x032A8B2C B.CS 0x32A8B90
	0x032A8B30 ADD X8, X22, X23, 0x3, LSL
	0x032A8B34 STR X21, [X8 + 0x20]
	0x032A8B38 LDR X21, [X20 + 0x20]
	0x032A8B3C CBZ X21, 0x32A8B8C
	0x032A8B40 LDRSW X22, [X20 + 0x30]
	0x032A8B44 CBZ X19, 0x32A8B5C
	0x032A8B48 LDR X8, [X21]
	0x032A8B4C MOV X0, X19
	0x032A8B50 LDR X1, [X8 + 0x40]
	0x032A8B54 BL 0x1C16E00
	0x032A8B58 CBZ X0, 0x32A8B94
	0x032A8B5C LDR W8, [X21 + 0x18]
	0x032A8B60 CMP W22, W8
	0x032A8B64 B.CS 0x32A8B90
	0x032A8B68 ADD X8, X21, X22, 0x3, LSL
	0x032A8B6C STR X19, [X8 + 0x20]
	0x032A8B70 LDR W8, [X20 + 0x30]
	0x032A8B74 LDP X22, X21, [X31 + 0x10]
	0x032A8B78 ADD W8, W8, 0x1
	0x032A8B7C STR W8, [X20 + 0x30]
	0x032A8B80 LDP X20, X19, [X31 + 0x20]
	0x032A8B84 LDP X30, X23, [X31], #0x30
	0x032A8B88 RET
	0x032A8B8C BL 0x1C16F20
	0x032A8B90 BL 0x1C16F28
	0x032A8B94 BL 0x1C16F44
	0x032A8B98 MOV X1, X31
	0x032A8B9C BL 0x1C16DEC
	0x032A8BA0 ADRP X0, 0xE7C000
	0x032A8BA4 LDR X0, [X0 + 0xF28]
	0x032A8BA8 BL 0x1C16D08
	0x032A8BAC MOV X1, X31
	0x032A8BB0 BL 0x33BDD84
	0x032A8BB4 MOV X19, X0
	0x032A8BB8 ADRP X0, 0xE75000
	0x032A8BBC LDR X0, [X0 + 0x2E0]
	0x032A8BC0 BL 0x1C16D08
	0x032A8BC4 BL 0x1C16F10
	0x032A8BC8 MOV X1, X19
	0x032A8BCC MOV X2, X31
	0x032A8BD0 MOV X20, X0
	0x032A8BD4 BL 0x329F100
	0x032A8BD8 ADRP X0, 0xE7C000
	0x032A8BDC LDR X0, [X0 + 0xF30]
	0x032A8BE0 BL 0x1C16D08
	0x032A8BE4 MOV X1, X0
	0x032A8BE8 MOV X0, X20
	0x032A8BEC BL 0x1C16DEC
	0x032A8BF0 STR X30, [X31 - 0x30]!
	0x032A8BF4 STP X22, X21, [X31 + 0x10]
	0x032A8BF8 STP X20, X19, [X31 + 0x20]
	0x032A8BFC ADRP X22, 0x1134000
	0x032A8C00 LDRB W8, [X22 + 0x7AD]
	0x032A8C04 MOV X21, X2
	0x032A8C08 MOV X19, X1
	0x032A8C0C MOV X20, X0
	0x032A8C10 TBNZ X8, 0x0, 0x32A8C34
	0x032A8C14 ADRP X0, 0xE55000
	0x032A8C18 LDR X0, [X0 + 0x968]
	0x032A8C1C BL 0x1C16CF4
	0x032A8C20 ADRP X0, 0xE4B000
	0x032A8C24 LDR X0, [X0 + 0x6C0]
	0x032A8C28 BL 0x1C16CF4
	0x032A8C2C MOVZ W8, 0x1
	0x032A8C30 STRB W8, [X22 + 0x7AD]
	0x032A8C34 CBZ X21, 0x32A8C58
	0x032A8C38 MOV X0, X21
	0x032A8C3C MOV X1, X31
	0x032A8C40 BL 0x33BE520
	0x032A8C44 MOV X3, X0
	0x032A8C48 MOV X0, X20
	0x032A8C4C MOV X1, X19
	0x032A8C50 MOV X2, X21
	0x032A8C54 B 0x32A8C98
	0x032A8C58 ADRP X8, 0xE4B000
	0x032A8C5C LDR X8, [X8 + 0x6C0]
	0x032A8C60 LDR X0, [X8]
	0x032A8C64 ADRP X8, 0xE55000
	0x032A8C68 LDR X8, [X8 + 0x968]
	0x032A8C6C LDR W9, [X0 + 0xE0]
	0x032A8C70 LDR X21, [X8]
	0x032A8C74 CBNZ W9, 0x32A8C7C
	0x032A8C78 BL 0x1C16DFC
	0x032A8C7C MOV X0, X21
	0x032A8C80 MOV X1, X31
	0x032A8C84 BL 0x338C698
	0x032A8C88 MOV X3, X0
	0x032A8C8C MOV X0, X20
	0x032A8C90 MOV X1, X19
	0x032A8C94 MOV X2, X31
	0x032A8C98 LDP X20, X19, [X31 + 0x20]
	0x032A8C9C LDP X22, X21, [X31 + 0x10]
	0x032A8CA0 LDR X30, [X31], #0x30
	0x032A8CA4 B 0x32A89BC
	0x032A8CA8 SUB X31, X31, 0x50
	0x032A8CAC STP X30, X25, [X31 + 0x10]
	0x032A8CB0 STP X24, X23, [X31 + 0x20]
	0x032A8CB4 STP X22, X21, [X31 + 0x30]
	0x032A8CB8 STP X20, X19, [X31 + 0x40]
	0x032A8CBC ADRP X25, 0x1134000

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x1135000
	011 Move W8, [X21+1956]
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {35}
	018 Move X0, 0xE4C000
	019 Move X0, [X0+3584]
	020 Call 0x1C17CF4
	021 Move X0, 0xE7D000
	022 Move X0, [X0+3784]
	023 Call 0x1C17CF4
	024 Move X0, 0xE75000
	025 Move X0, [X0+1776]
	026 Call 0x1C17CF4
	027 Move X0, 0xE4C000
	028 Move X0, [X0+3608]
	029 Call 0x1C17CF4
	030 Move X0, 0xE7D000
	031 Move X0, [X0+3792]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X21+1956], W8
	035 Move X19, [X19+16]
	036 Compare X19, 0
	037 JumpIfEqual {182}
	038 Move X10, 0xE7D000
	039 Move X8, [X19]
	040 Move X10, [X10+3784]
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Move X1, [X10]
	043 Compare X9, 0
	044 JumpIfEqual {51}
	045 Move X10, [X8+176]
	046 Add X10, X10, 8
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract X9, X9, 1
	050 Add X10, X10, 16
	051 Move X0, X19
	052 Move W2, W31
	053 Call 0x1C5D788
	054 NotImplemented "Instruction LDRSW not yet implemented."
	055 Add X8, X8, X9
	056 Add X0, X8, 312
	057 Move X8, [X0]
	058 Move X1, [X0+8]
	059 Move X0, X19
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Move X19, X0
	062 Compare X0, 0
	063 JumpIfEqual {199}
	064 Move X24, 0xE4C000
	065 Move X25, 0xE75000
	066 Move X26, 0xE7D000
	067 Move X24, [X24+3608]
	068 Move X25, [X25+1776]
	069 Move X26, [X26+3792]
	070 Move X8, [X19]
	071 Move X1, [X24]
	072 NotImplemented "Instruction LDRH not yet implemented."
	073 Compare X9, 0
	074 JumpIfEqual {81}
	075 Move X10, [X8+176]
	076 Add X10, X10, 8
	077 NotImplemented "Instruction LDUR not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Subtract X9, X9, 1
	080 Add X10, X10, 16
	081 Move X0, X19
	082 Move W2, W31
	083 Call 0x1C5D788
	084 NotImplemented "Instruction LDRSW not yet implemented."
	085 Add X8, X8, X9
	086 Add X0, X8, 312
	087 Move X8, [X0]
	088 Move X1, [X0+8]
	089 Move X0, X19
	090 NotImplemented "Instruction BLR not yet implemented."
	091 Move TEMP, X0
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfNotEqual {154}
	095 Move X8, [X19]
	096 Move X1, [X25]
	097 NotImplemented "Instruction LDRH not yet implemented."
	098 Compare X9, 0
	099 JumpIfEqual {106}
	100 Move X10, [X8+176]
	101 Add X10, X10, 8
	102 NotImplemented "Instruction LDUR not yet implemented."
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Subtract X9, X9, 1
	105 Add X10, X10, 16
	106 Move X0, X19
	107 Move W2, W31
	108 Call 0x1C5D788
	109 NotImplemented "Instruction LDRSW not yet implemented."
	110 Add X8, X8, X9
	111 Add X0, X8, 312
	112 Move X8, [X0]
	113 Move X1, [X0+8]
	114 Move X0, X19
	115 NotImplemented "Instruction BLR not yet implemented."
	116 Move X23, X0
	117 Compare X0, 0
	118 JumpIfEqual {195}
	119 Move X21, [X26]
	120 Move X0, X23
	121 Move X1, X21
	122 Call 0x1C17E00
	123 Compare X0, 0
	124 JumpIfEqual {196}
	125 Move X22, [X26]
	126 Move X0, X23
	127 Move X1, X22
	128 Call 0x1C17E00
	129 Move X21, X0
	130 Compare X0, 0
	131 JumpIfEqual {192}
	132 Move X8, [X21]
	133 NotImplemented "Instruction LDRH not yet implemented."
	134 Compare X9, 0
	135 JumpIfEqual {142}
	136 Move X10, [X8+176]
	137 Add X10, X10, 8
	138 NotImplemented "Instruction LDUR not yet implemented."
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Subtract X9, X9, 1
	141 Add X10, X10, 16
	142 Move X0, X21
	143 Move X1, X22
	144 Move W2, W31
	145 Call 0x1C5D788
	146 NotImplemented "Instruction LDRSW not yet implemented."
	147 Add X8, X8, X9
	148 Add X0, X8, 312
	149 Move X8, [X0]
	150 Move X2, [X0+8]
	151 Move X0, X21
	152 Move X1, X20
	153 NotImplemented "Instruction BLR not yet implemented."
	154 Move X20, X31
	155 Compare X19, 0
	156 JumpIfEqual {180}
	157 Move X10, 0xE4C000
	158 Move X8, [X19]
	159 Move X10, [X10+3584]
	160 NotImplemented "Instruction LDRH not yet implemented."
	161 Move X1, [X10]
	162 Compare X9, 0
	163 JumpIfEqual {170}
	164 Move X10, [X8+176]
	165 Add X10, X10, 8
	166 NotImplemented "Instruction LDUR not yet implemented."
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Subtract X9, X9, 1
	169 Add X10, X10, 16
	170 Move X0, X19
	171 Move W2, W31
	172 Call 0x1C5D788
	173 NotImplemented "Instruction LDRSW not yet implemented."
	174 Add X8, X8, X9
	175 Add X0, X8, 312
	176 Move X8, [X0]
	177 Move X1, [X0+8]
	178 Move X0, X19
	179 NotImplemented "Instruction BLR not yet implemented."
	180 Compare X20, 0
	181 JumpIfNotEqual {200}
	182 Move X20, [X31+64]
	183 Move X19, [X31+72]
	184 Move X22, [X31+48]
	185 Move X21, [X31+56]
	186 Move X24, [X31+32]
	187 Move X23, [X31+40]
	188 Move X26, [X31+16]
	189 Move X25, [X31+24]
	190 Move X30, [X31+80]
	191 Return 
	192 Move X0, X23
	193 Move X1, X22
	194 Call 0x1C181E0
	195 Call 0x1C17F20
	196 Move X0, X23
	197 Move X1, X21
	198 Call 0x1C181E0
	199 Call 0x1C17F20
	200 Move X0, X20
	201 Call 0x1C17F18
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Call 0x3EB2AD0
	204 Move X20, [X0]
	205 Call 0x3EB2AE0
	206 Move [X31+8], X0
	207 Move X20, X31
	208 Move [X31+8], X0
	209 Compare X19, 0
	210 JumpIfEqual {234}
	211 Move X10, 0xE4C000
	212 Move X8, [X19]
	213 Move X10, [X10+3584]
	214 NotImplemented "Instruction LDRH not yet implemented."
	215 Move X1, [X10]
	216 Compare X9, 0
	217 JumpIfEqual {224}
	218 Move X10, [X8+176]
	219 Add X10, X10, 8
	220 NotImplemented "Instruction LDUR not yet implemented."
	221 NotImplemented "Instruction CMP not yet implemented."
	222 Subtract X9, X9, 1
	223 Add X10, X10, 16
	224 Move X0, X19
	225 Move W2, W31
	226 Call 0x1C5D788
	227 NotImplemented "Instruction LDRSW not yet implemented."
	228 Add X8, X8, X9
	229 Add X0, X8, 312
	230 Move X8, [X0]
	231 Move X1, [X0+8]
	232 Move X0, X19
	233 NotImplemented "Instruction BLR not yet implemented."
	234 Compare X20, 0
	235 JumpIfNotEqual {238}
	236 Move X0, [X31+8]
	237 Call 0x1D2D690
	238 Move X0, X20
	239 Call 0x1C17F18
	240 Call 0x1991590

Method: System.Void System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x032A8CC0 ADRP X24, 0xE4B000
	0x032A8CC4 ADRP X22, 0xE74000
	0x032A8CC8 ADRP X23, 0xE4B000
	0x032A8CCC LDRB W8, [X25 + 0x7AE]
	0x032A8CD0 LDR X24, [X24 + 0xB58]
	0x032A8CD4 LDR X22, [X22 + 0x248]
	0x032A8CD8 LDR X23, [X23 + 0x6C0]
	0x032A8CDC MOV W21, W2
	0x032A8CE0 MOV X19, X1
	0x032A8CE4 MOV X20, X0
	0x032A8CE8 TBNZ X8, 0x0, 0x32A8D18
	0x032A8CEC ADRP X0, 0xE74000
	0x032A8CF0 LDR X0, [X0 + 0x248]
	0x032A8CF4 BL 0x1C16CF4
	0x032A8CF8 ADRP X0, 0xE4B000
	0x032A8CFC LDR X0, [X0 + 0xB58]
	0x032A8D00 BL 0x1C16CF4
	0x032A8D04 ADRP X0, 0xE4B000
	0x032A8D08 LDR X0, [X0 + 0x6C0]
	0x032A8D0C BL 0x1C16CF4
	0x032A8D10 MOVZ W8, 0x1
	0x032A8D14 STRB W8, [X25 + 0x7AE]
	0x032A8D18 LDR X0, [X24]
	0x032A8D1C AND W8, W21, 0x1
	0x032A8D20 ADD X1, X31, 0xC
	0x032A8D24 STRB W8, [X31 + 0xC]
	0x032A8D28 BL 0x1C16E04
	0x032A8D2C LDR X8, [X23]
	0x032A8D30 LDR X22, [X22]
	0x032A8D34 MOV X21, X0
	0x032A8D38 LDR W9, [X8 + 0xE0]
	0x032A8D3C CBNZ W9, 0x32A8D48
	0x032A8D40 MOV X0, X8
	0x032A8D44 BL 0x1C16DFC
	0x032A8D48 MOV X0, X22
	0x032A8D4C MOV X1, X31
	0x032A8D50 BL 0x338C698
	0x032A8D54 MOV X3, X0
	0x032A8D58 MOV X0, X20
	0x032A8D5C MOV X1, X19
	0x032A8D60 MOV X2, X21
	0x032A8D64 BL 0x32A89BC
	0x032A8D68 LDP X20, X19, [X31 + 0x40]
	0x032A8D6C LDP X22, X21, [X31 + 0x30]
	0x032A8D70 LDP X24, X23, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x1135000
	008 Move X21, 0xE7D000
	009 Move X22, 0xE4C000
	010 Move W8, [X23+1957]
	011 Move X21, [X21+3800]
	012 Move X22, [X22+1728]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0xE7D000
	020 Move X0, [X0+3800]
	021 Call 0x1C17CF4
	022 Move X0, 0xE4C000
	023 Move X0, [X0+1728]
	024 Call 0x1C17CF4
	025 Move X0, 0xE7D000
	026 Move X0, [X0+3752]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X23+1957], W8
	030 Move X0, [X22]
	031 Move X20, [X20+16]
	032 Move X21, [X21]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X21
	038 Move X1, X31
	039 Call Type.GetTypeFromHandle, X0
	040 Compare X19, 0
	041 JumpIfEqual {57}
	042 Move X8, 0xE7D000
	043 Move X8, [X8+3752]
	044 Move X3, X0
	045 Move X0, X19
	046 Move X2, X20
	047 Move X1, [X8]
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X4, X31
	053 Move X30, [X31+48]
	054 Move X23, [X31+56]
	055 Call SerializationInfo.AddValue, X0, X1, X2, X3
	056 Return 
	057 Call 0x1C17F20

Method: System.Object System.Runtime.Serialization.IObjectReference.GetRealObject(System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x032A8D74 LDP X30, X25, [X31 + 0x10]
	0x032A8D78 ADD X31, X31, 0x50
	0x032A8D7C RET
	0x032A8D80 SUB X31, X31, 0x50
	0x032A8D84 STP X30, X25, [X31 + 0x10]
	0x032A8D88 STP X24, X23, [X31 + 0x20]
	0x032A8D8C STP X22, X21, [X31 + 0x30]
	0x032A8D90 STP X20, X19, [X31 + 0x40]
	0x032A8D94 ADRP X25, 0x1134000
	0x032A8D98 ADRP X24, 0xE4C000
	0x032A8D9C ADRP X22, 0xE72000
	0x032A8DA0 ADRP X23, 0xE4B000
	0x032A8DA4 LDRB W8, [X25 + 0x7AF]
	0x032A8DA8 LDR X24, [X24 + 0x9D8]
	0x032A8DAC LDR X22, [X22 + 0xD68]
	0x032A8DB0 LDR X23, [X23 + 0x6C0]
	0x032A8DB4 MOV W21, W2
	0x032A8DB8 MOV X19, X1
	0x032A8DBC MOV X20, X0
	0x032A8DC0 TBNZ X8, 0x0, 0x32A8DF0
	0x032A8DC4 ADRP X0, 0xE72000
	0x032A8DC8 LDR X0, [X0 + 0xD68]
	0x032A8DCC BL 0x1C16CF4
	0x032A8DD0 ADRP X0, 0xE4C000
	0x032A8DD4 LDR X0, [X0 + 0x9D8]
	0x032A8DD8 BL 0x1C16CF4
	0x032A8DDC ADRP X0, 0xE4B000
	0x032A8DE0 LDR X0, [X0 + 0x6C0]
	0x032A8DE4 BL 0x1C16CF4
	0x032A8DE8 MOVZ W8, 0x1
	0x032A8DEC STRB W8, [X25 + 0x7AF]
	0x032A8DF0 LDR X0, [X24]
	0x032A8DF4 ADD X1, X31, 0xC
	0x032A8DF8 STRB W21, [X31 + 0xC]
	0x032A8DFC BL 0x1C16E04
	0x032A8E00 LDR X8, [X23]
	0x032A8E04 LDR X22, [X22]
	0x032A8E08 MOV X21, X0
	0x032A8E0C LDR W9, [X8 + 0xE0]
	0x032A8E10 CBNZ W9, 0x32A8E1C
	0x032A8E14 MOV X0, X8
	0x032A8E18 BL 0x1C16DFC
	0x032A8E1C MOV X0, X22
	0x032A8E20 MOV X1, X31
	0x032A8E24 BL 0x338C698
	0x032A8E28 MOV X3, X0
	0x032A8E2C MOV X0, X20
	0x032A8E30 MOV X1, X19
	0x032A8E34 MOV X2, X21
	0x032A8E38 BL 0x32A89BC
	0x032A8E3C LDP X20, X19, [X31 + 0x40]
	0x032A8E40 LDP X22, X21, [X31 + 0x30]
	0x032A8E44 LDP X24, X23, [X31 + 0x20]
	0x032A8E48 LDP X30, X25, [X31 + 0x10]
	0x032A8E4C ADD X31, X31, 0x50
	0x032A8E50 RET
	0x032A8E54 SUB X31, X31, 0x50
	0x032A8E58 STP X30, X25, [X31 + 0x10]
	0x032A8E5C STP X24, X23, [X31 + 0x20]
	0x032A8E60 STP X22, X21, [X31 + 0x30]
	0x032A8E64 STP X20, X19, [X31 + 0x40]
	0x032A8E68 ADRP X25, 0x1134000
	0x032A8E6C ADRP X24, 0xE4F000
	0x032A8E70 ADRP X22, 0xE72000
	0x032A8E74 ADRP X23, 0xE4B000
	0x032A8E78 LDRB W8, [X25 + 0x7B0]
	0x032A8E7C LDR X24, [X24 + 0x628]
	0x032A8E80 LDR X22, [X22 + 0xD78]
	0x032A8E84 LDR X23, [X23 + 0x6C0]
	0x032A8E88 MOV W21, W2
	0x032A8E8C MOV X19, X1
	0x032A8E90 MOV X20, X0
	0x032A8E94 TBNZ X8, 0x0, 0x32A8EC4
	0x032A8E98 ADRP X0, 0xE72000
	0x032A8E9C LDR X0, [X0 + 0xD78]
	0x032A8EA0 BL 0x1C16CF4
	0x032A8EA4 ADRP X0, 0xE4F000
	0x032A8EA8 LDR X0, [X0 + 0x628]
	0x032A8EAC BL 0x1C16CF4
	0x032A8EB0 ADRP X0, 0xE4B000
	0x032A8EB4 LDR X0, [X0 + 0x6C0]
	0x032A8EB8 BL 0x1C16CF4
	0x032A8EBC MOVZ W8, 0x1
	0x032A8EC0 STRB W8, [X25 + 0x7B0]
	0x032A8EC4 LDR X0, [X24]
	0x032A8EC8 ADD X1, X31, 0xC
	0x032A8ECC STRH W21, [X31 + 0xC]
	0x032A8ED0 BL 0x1C16E04
	0x032A8ED4 LDR X8, [X23]
	0x032A8ED8 LDR X22, [X22]
	0x032A8EDC MOV X21, X0
	0x032A8EE0 LDR W9, [X8 + 0xE0]
	0x032A8EE4 CBNZ W9, 0x32A8EF0
	0x032A8EE8 MOV X0, X8
	0x032A8EEC BL 0x1C16DFC
	0x032A8EF0 MOV X0, X22
	0x032A8EF4 MOV X1, X31
	0x032A8EF8 BL 0x338C698
	0x032A8EFC MOV X3, X0
	0x032A8F00 MOV X0, X20
	0x032A8F04 MOV X1, X19
	0x032A8F08 MOV X2, X21
	0x032A8F0C BL 0x32A89BC
	0x032A8F10 LDP X20, X19, [X31 + 0x40]
	0x032A8F14 LDP X22, X21, [X31 + 0x30]
	0x032A8F18 LDP X24, X23, [X31 + 0x20]
	0x032A8F1C LDP X30, X25, [X31 + 0x10]
	0x032A8F20 ADD X31, X31, 0x50
	0x032A8F24 RET
	0x032A8F28 SUB X31, X31, 0x50
	0x032A8F2C STP X30, X25, [X31 + 0x10]
	0x032A8F30 STP X24, X23, [X31 + 0x20]
	0x032A8F34 STP X22, X21, [X31 + 0x30]
	0x032A8F38 STP X20, X19, [X31 + 0x40]
	0x032A8F3C ADRP X25, 0x1134000
	0x032A8F40 ADRP X24, 0xE4B000
	0x032A8F44 ADRP X22, 0xE72000
	0x032A8F48 ADRP X23, 0xE4B000
	0x032A8F4C LDRB W8, [X25 + 0x7B1]
	0x032A8F50 LDR X24, [X24 + 0x758]
	0x032A8F54 LDR X22, [X22 + 0xD80]
	0x032A8F58 LDR X23, [X23 + 0x6C0]
	0x032A8F5C MOV W21, W2
	0x032A8F60 MOV X19, X1
	0x032A8F64 MOV X20, X0
	0x032A8F68 TBNZ X8, 0x0, 0x32A8F98
	0x032A8F6C ADRP X0, 0xE72000
	0x032A8F70 LDR X0, [X0 + 0xD80]
	0x032A8F74 BL 0x1C16CF4
	0x032A8F78 ADRP X0, 0xE4B000
	0x032A8F7C LDR X0, [X0 + 0x758]
	0x032A8F80 BL 0x1C16CF4
	0x032A8F84 ADRP X0, 0xE4B000
	0x032A8F88 LDR X0, [X0 + 0x6C0]
	0x032A8F8C BL 0x1C16CF4
	0x032A8F90 MOVZ W8, 0x1
	0x032A8F94 STRB W8, [X25 + 0x7B1]
	0x032A8F98 LDR X0, [X24]
	0x032A8F9C ADD X1, X31, 0xC
	0x032A8FA0 STR W21, [X31 + 0xC]
	0x032A8FA4 BL 0x1C16E04
	0x032A8FA8 LDR X8, [X23]
	0x032A8FAC LDR X22, [X22]
	0x032A8FB0 MOV X21, X0
	0x032A8FB4 LDR W9, [X8 + 0xE0]
	0x032A8FB8 CBNZ W9, 0x32A8FC4
	0x032A8FBC MOV X0, X8
	0x032A8FC0 BL 0x1C16DFC
	0x032A8FC4 MOV X0, X22
	0x032A8FC8 MOV X1, X31
	0x032A8FCC BL 0x338C698
	0x032A8FD0 MOV X3, X0
	0x032A8FD4 MOV X0, X20
	0x032A8FD8 MOV X1, X19
	0x032A8FDC MOV X2, X21
	0x032A8FE0 BL 0x32A89BC
	0x032A8FE4 LDP X20, X19, [X31 + 0x40]
	0x032A8FE8 LDP X22, X21, [X31 + 0x30]
	0x032A8FEC LDP X24, X23, [X31 + 0x20]
	0x032A8FF0 LDP X30, X25, [X31 + 0x10]
	0x032A8FF4 ADD X31, X31, 0x50
	0x032A8FF8 RET
	0x032A8FFC SUB X31, X31, 0x50
	0x032A9000 STP X30, X25, [X31 + 0x10]
	0x032A9004 STP X24, X23, [X31 + 0x20]
	0x032A9008 STP X22, X21, [X31 + 0x30]
	0x032A900C STP X20, X19, [X31 + 0x40]
	0x032A9010 ADRP X25, 0x1133000
	0x032A9014 ADRP X24, 0xE4C000
	0x032A9018 ADRP X22, 0xE71000
	0x032A901C ADRP X23, 0xE4A000
	0x032A9020 LDRB W8, [X25 + 0x7B2]
	0x032A9024 LDR X24, [X24 + 0xA60]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X22, 0x1135000
	012 Move W8, [X22+1958]
	013 Move X20, X2
	014 Move X21, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {40}
	020 Move X0, 0xE76000
	021 Move X0, [X0+2424]
	022 Call 0x1C17CF4
	023 Move X0, 0xE7D000
	024 Move X0, [X0+2928]
	025 Call 0x1C17CF4
	026 Move X0, 0xE56000
	027 Move X0, [X0+2408]
	028 Call 0x1C17CF4
	029 Move X0, 0xE75000
	030 Move X0, [X0+1256]
	031 Call 0x1C17CF4
	032 Move X0, 0xE7A000
	033 Move X0, [X0+2248]
	034 Call 0x1C17CF4
	035 Move X0, 0xE4C000
	036 Move X0, [X0+1728]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X22+1958], W8
	040 Move X22, [X19+32]
	041 Compare X22, 0
	042 JumpIfNotEqual {193}
	043 Move X26, 0xE75000
	044 Move X26, [X26+1256]
	045 Move X22, [X19+40]
	046 Move X0, [X26]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X0, X22
	052 Move X1, X31
	053 Move X2, X31
	054 Call RuntimeType.op_Equality, X0, X1
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {60}
	059 Move X22, X19
	060 Move X8, 0xE7A000
	061 Move X8, [X8+2248]
	062 Move X0, [X8]
	063 Call 0x1C17F10
	064 Move X1, X31
	065 Move X22, X0
	066 Call Stack..ctor, X0
	067 Compare X22, 0
	068 JumpIfEqual {205}
	069 Move X25, 0xE56000
	070 Move X27, 0xE4C000
	071 Move X23, [X19+40]
	072 Move X25, [X25+2408]
	073 Move X27, [X27+1728]
	074 Move X8, [X22]
	075 Move X0, X22
	076 Move X1, X23
	077 Move X9, [X8+616]
	078 Move X2, [X8+624]
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Compare X23, 0
	081 JumpIfEqual {205}
	082 Move X8, [X23]
	083 Move X0, X23
	084 Move X9, [X8+2072]
	085 Move X1, [X8+2080]
	086 NotImplemented "Instruction BLR not yet implemented."
	087 Compare X0, 0
	088 JumpIfEqual {94}
	089 Move X9, [X0]
	090 Move X8, [X26]
	091 Move W11, [X9+304]
	092 Move W10, [X8+304]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X23, X31
	095 Move X9, [X9+200]
	096 Add X9, X9, X10
	097 NotImplemented "Instruction LDUR not yet implemented."
	098 NotImplemented "Instruction CMP not yet implemented."
	099 NotImplemented "Instruction CSEL not yet implemented."
	100 Move X0, [X27]
	101 Move X24, [X25]
	102 Move W8, [X0+224]
	103 Compare W8, 0
	104 JumpIfNotEqual {106}
	105 Call 0x1C17DFC
	106 Move X0, X24
	107 Move X1, X31
	108 Call Type.GetTypeFromHandle, X0
	109 Move X1, X0
	110 Move X0, X23
	111 Move X2, X31
	112 Call Type.op_Inequality, X0, X1
	113 Move TEMP, X0
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfEqual {74}
	117 Move X27, 0xE76000
	118 Move X27, [X27+2424]
	119 Move X8, [X22]
	120 Move X0, X22
	121 Move X24, X23
	122 Move X9, [X8+600]
	123 Move X1, [X8+608]
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Compare X0, 0
	126 JumpIfEqual {205}
	127 Move X9, [X0]
	128 Move X8, [X26]
	129 Move X23, X0
	130 Move W11, [X9+304]
	131 Move W10, [X8+304]
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move X9, [X9+200]
	134 Add X9, X9, X10
	135 NotImplemented "Instruction LDUR not yet implemented."
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move X0, X23
	138 Move X1, X31
	139 Call RuntimeType.GetSerializationCtor, X0
	140 Move X8, [X27]
	141 Move X25, X0
	142 Move W9, [X8+224]
	143 Compare W9, 0
	144 JumpIfNotEqual {147}
	145 Move X0, X8
	146 Call 0x1C17DFC
	147 Move X0, X25
	148 Move X1, X31
	149 Move X2, X31
	150 Call ConstructorInfo.op_Inequality, X0, X1
	151 Move TEMP, X0
	152 And TEMP, TEMP, 1
	153 Compare TEMP, 1
	154 JumpIfNotEqual {166}
	155 Compare X25, 0
	156 JumpIfEqual {205}
	157 Move X8, [X25]
	158 Move X0, X25
	159 Move X9, [X8+840]
	160 Move X1, [X8+848]
	161 NotImplemented "Instruction BLR not yet implemented."
	162 Move TEMP, X0
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfEqual {119}
	166 Move X0, X24
	167 Call ObjectManager.GetConstructor, X0
	168 Move X8, 0xE7D000
	169 Move X8, [X8+2928]
	170 Move X22, [X19+40]
	171 Move X23, X0
	172 Move X8, [X8]
	173 Move W9, [X8+224]
	174 Compare W9, 0
	175 JumpIfNotEqual {178}
	176 Move X0, X8
	177 Call 0x1C17DFC
	178 Move X0, X22
	179 Call FormatterServices.GetUninitializedObject, X0
	180 Compare X23, 0
	181 JumpIfEqual {205}
	182 Move X2, [X19+24]
	183 Move X22, X0
	184 Move X0, X23
	185 Move X1, X22
	186 Move X3, X21
	187 Move X4, X20
	188 Move X5, X31
	189 Call RuntimeConstructorInfo.SerializationInvoke, X0, X1, X2, X3
	190 Move [X19+32], X22
	191 Move [X19+40], X31
	192 Move [X19+24], X31
	193 Move X0, X22
	194 Move X20, [X31+64]
	195 Move X19, [X31+72]
	196 Move X22, [X31+48]
	197 Move X21, [X31+56]
	198 Move X24, [X31+32]
	199 Move X23, [X31+40]
	200 Move X26, [X31+16]
	201 Move X25, [X31+24]
	202 Move X30, [X31+80]
	203 Move X27, [X31+88]
	204 Return X0
	205 Call 0x1C17F20

Method: System.Void OnDeserialized(System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x032A9028 LDR X22, [X22 + 0xD88]
	0x032A902C LDR X23, [X23 + 0x6C0]
	0x032A9030 MOV X21, X2
	0x032A9034 MOV X19, X1
	0x032A9038 MOV X20, X0
	0x032A903C TBNZ X8, 0x0, 0x32A906C
	0x032A9040 ADRP X0, 0xE71000
	0x032A9044 LDR X0, [X0 + 0xD88]
	0x032A9048 BL 0x1C16CF4
	0x032A904C ADRP X0, 0xE4C000
	0x032A9050 LDR X0, [X0 + 0xA60]
	0x032A9054 BL 0x1C16CF4
	0x032A9058 ADRP X0, 0xE4A000
	0x032A905C LDR X0, [X0 + 0x6C0]
	0x032A9060 BL 0x1C16CF4
	0x032A9064 MOVZ W8, 0x1
	0x032A9068 STRB W8, [X25 + 0x7B2]
	0x032A906C LDR X0, [X24]
	0x032A9070 ADD X1, X31, 0x8
	0x032A9074 STR X21, [X31 + 0x8]
	0x032A9078 BL 0x1C16E04
	0x032A907C LDR X8, [X23]
	0x032A9080 LDR X22, [X22]
	0x032A9084 MOV X21, X0
	0x032A9088 LDR W9, [X8 + 0xE0]
	0x032A908C CBNZ W9, 0x32A9098
	0x032A9090 MOV X0, X8
	0x032A9094 BL 0x1C16DFC
	0x032A9098 MOV X0, X22
	0x032A909C MOV X1, X31
	0x032A90A0 BL 0x338C698
	0x032A90A4 MOV X3, X0
	0x032A90A8 MOV X0, X20
	0x032A90AC MOV X1, X19
	0x032A90B0 MOV X2, X21
	0x032A90B4 BL 0x32A89BC
	0x032A90B8 LDP X20, X19, [X31 + 0x40]
	0x032A90BC LDP X22, X21, [X31 + 0x30]
	0x032A90C0 LDP X24, X23, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1134000
	007 Move W8, [X22+1959]
	008 Move X19, X2
	009 Move X21, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xE7C000
	016 Move X0, [X0+2792]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1959], W8
	020 Move X0, [X20+32]
	021 Compare X0, 0
	022 JumpIfEqual {43}
	023 Move X22, 0xE7C000
	024 Move X22, [X22+2792]
	025 Move X1, X31
	026 Call "il2cpp_vm_object_is_inst", X0
	027 Move X8, [X22]
	028 Move X22, X0
	029 Move W9, [X8+224]
	030 Compare W9, 0
	031 JumpIfNotEqual {34}
	032 Move X0, X8
	033 Call 0x1C17DFC
	034 Move X0, X22
	035 Call SerializationEventsCache.GetSerializationEventsForType, X0
	036 Compare X0, 0
	037 JumpIfEqual {49}
	038 Move X1, [X20+32]
	039 Move X2, X21
	040 Move X3, X19
	041 Call SerializationEvents.InvokeOnDeserialized, X0, X1, X2
	042 Move [X20+32], X31
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X30, [X31+48]
	048 Return 
	049 Call 0x1C17F20

