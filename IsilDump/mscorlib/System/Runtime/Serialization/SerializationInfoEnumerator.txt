Type: System.Runtime.Serialization.SerializationInfoEnumerator

Method: System.Void .ctor(System.String[] members, System.Object[] info, System.Type[] types, System.Int32 numItems)

Disassembly:
	0x032A01CC LDR X22, [X8]
	0x032A01D0 LDR X0, [X9]
	0x032A01D4 BL 0x1C16F10
	0x032A01D8 ADRP X8, 0xE84000
	0x032A01DC LDR X8, [X8 + 0xB00]
	0x032A01E0 MOV X1, X22
	0x032A01E4 MOV X3, X31
	0x032A01E8 MOV X21, X0
	0x032A01EC LDR X2, [X8]
	0x032A01F0 BL 0x2D30578
	0x032A01F4 LDR X8, [X23]
	0x032A01F8 LDR X8, [X8 + 0xB8]
	0x032A01FC STR X21, [X8 + 0x8]
	0x032A0200 CBZ X20, 0x32A022C
	0x032A0204 ADRP X8, 0xE84000
	0x032A0208 LDR X8, [X8 + 0xAF0]
	0x032A020C MOV X0, X20
	0x032A0210 MOV X1, X19
	0x032A0214 MOV X2, X21
	0x032A0218 LDR X3, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, X1
	008 Move X1, X31
	009 Move W19, W4
	010 Move X20, X3
	011 Move X21, X2
	012 Move X23, X0
	013 Call Object..ctor, X0
	014 Move [X23+16], X22
	015 Move [X23+24], X21
	016 Move [X23+32], X20
	017 Subtract W8, W19, 1
	018 Move X20, [X31+32]
	019 Move X19, [X31+40]
	020 Move X22, [X31+16]
	021 Move X21, [X31+24]
	022 Move TEMP, 0
	023 Not TEMP
	024 Move W9, TEMP
	025 Move [X23+40], W8
	026 Move [X23+44], W9
	027 Move [X23+48], W31
	028 Move X30, [X31+48]
	029 Move X23, [X31+56]
	030 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x03292B70 STR W21, [X8 + 0x20]
	0x03292B74 LDR W8, [X20 + 0x18]
	0x03292B78 ADD X21, X21, 0x1
	0x03292B7C CMP W21, W8
	0x03292B80 B.LT 0x3292B20
	0x03292B84 LDP X20, X19, [X31 + 0x20]
	0x03292B88 LDP X22, X21, [X31 + 0x10]
	0x03292B8C LDR X30, [X31], #0x30
	0x03292B90 RET
	0x03292B94 BL 0x1C16F20
	0x03292B98 BL 0x1C16F28
	0x03292B9C STR X30, [X31 - 0x40]!
	0x03292BA0 STP X24, X23, [X31 + 0x10]

ISIL:
	001 Move W9, [X0+40]
	002 Move W8, [X0+44]
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Add W10, W8, 1
	005 Move [X0+44], W10
	006 Move W10, 1
	007 Move W10, W31
	008 NotImplemented "Instruction CMP not yet implemented."
	009 NotImplemented "Instruction CSET not yet implemented."
	010 Move [X0+48], W10
	011 Move W0, W8
	012 Return X0

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x032A021C LDP X20, X19, [X31 + 0x20]
	0x032A0220 LDP X22, X21, [X31 + 0x10]
	0x032A0224 LDP X30, X23, [X31], #0x30
	0x032A0228 B 0x2986F9C
	0x032A022C BL 0x1C16F20
	0x032A0230 STR X30, [X31 - 0x30]!
	0x032A0234 STP X22, X21, [X31 + 0x10]
	0x032A0238 STP X20, X19, [X31 + 0x20]
	0x032A023C ADRP X21, 0x113C000
	0x032A0240 ADRP X22, 0xE84000
	0x032A0244 ADRP X19, 0xE84000
	0x032A0248 ADRP X20, 0xE84000
	0x032A024C LDRB W8, [X21 + 0x762]
	0x032A0250 LDR X22, [X22 + 0xB10]
	0x032A0254 LDR X19, [X19 + 0xB18]
	0x032A0258 LDR X20, [X20 + 0xAE8]
	0x032A025C TBNZ X8, 0x0, 0x32A028C
	0x032A0260 ADRP X0, 0xE84000
	0x032A0264 LDR X0, [X0 + 0xB18]
	0x032A0268 BL 0x1C16CF4
	0x032A026C ADRP X0, 0xE84000
	0x032A0270 LDR X0, [X0 + 0xB10]
	0x032A0274 BL 0x1C16CF4
	0x032A0278 ADRP X0, 0xE84000
	0x032A027C LDR X0, [X0 + 0xAE8]
	0x032A0280 BL 0x1C16CF4
	0x032A0284 MOVZ W8, 0x1
	0x032A0288 STRB W8, [X21 + 0x762]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0x113D000
	007 Move X20, 0xE85000
	008 Move W8, [X21+1878]
	009 Move X20, [X20+2648]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xE85000
	016 Move X0, [X0+2648]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+1878], W8
	020 Add X8, X31, 24
	021 Move X0, X19
	022 Call SerializationInfoEnumerator.get_Current, X0
	023 NotImplemented "Instruction LDUR not yet implemented."
	024 Move X8, [X31+40]
	025 Move X0, [X20]
	026 Add X1, X31, 0
	027 Move [X31], V0
	028 Move [X31+16], X8
	029 Call 0x1C17E04
	030 Move X20, [X31+64]
	031 Move X19, [X31+72]
	032 Move X30, [X31+48]
	033 Move X21, [X31+56]
	034 Add X31, X31, 80
	035 Return X0

Method: System.Runtime.Serialization.SerializationEntry get_Current()

Disassembly:
	0x03299E7C STR X30, [X31 - 0x20]!
	0x03299E80 STP X20, X19, [X31 + 0x10]
	0x03299E84 ADRP X20, 0x1143000
	0x03299E88 LDRB W8, [X20 + 0x710]
	0x03299E8C MOV X19, X0
	0x03299E90 TBNZ X8, 0x0, 0x3299EA8
	0x03299E94 ADRP X0, 0xE84000
	0x03299E98 LDR X0, [X0 + 0x430]
	0x03299E9C BL 0x1C16CF4
	0x03299EA0 MOVZ W8, 0x1
	0x03299EA4 STRB W8, [X20 + 0x710]
	0x03299EA8 CBZ X19, 0x3299F20
	0x03299EAC ADRP X8, 0xE84000
	0x03299EB0 LDR X8, [X8 + 0x430]
	0x03299EB4 MOV X0, X19
	0x03299EB8 MOV X2, X31
	0x03299EBC LDR X1, [X8]
	0x03299EC0 BL 0x322C2F0
	0x03299EC4 ADD W8, W0, 0x2
	0x03299EC8 ADDS W31, W0, 0x1
	0x03299ECC CSEL W2, W31, W8, EQ
	0x03299ED0 MOVZ W1, 0x2C
	0x03299ED4 MOV X0, X19
	0x03299ED8 MOV X3, X31
	0x03299EDC BL 0x322BDA8
	0x03299EE0 ADDS W31, W0, 0x1
	0x03299EE4 B.EQ 0x3299F10
	0x03299EE8 MOV W2, W0
	0x03299EEC MOV X0, X19
	0x03299EF0 MOV W1, W31
	0x03299EF4 MOV X3, X31
	0x03299EF8 BL 0x3228DE4
	0x03299EFC CBZ X0, 0x3299F20
	0x03299F00 LDP X20, X19, [X31 + 0x10]
	0x03299F04 MOV X1, X31
	0x03299F08 LDR X30, [X31], #0x20
	0x03299F0C B 0x322B8DC
	0x03299F10 MOV X0, X19
	0x03299F14 LDP X20, X19, [X31 + 0x10]
	0x03299F18 LDR X30, [X31], #0x20
	0x03299F1C RET
	0x03299F20 BL 0x1C16F20
	0x03299F24 LDR X0, [X0 + 0x48]
	0x03299F28 RET
	0x03299F2C STR X1, [X0 + 0x48]
	0x03299F30 RET
	0x03299F34 STR X30, [X31 - 0x20]!
	0x03299F38 STP X20, X19, [X31 + 0x10]
	0x03299F3C ADRP X19, 0x1143000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W9, [X0+48]
	004 Compare W9, 0
	005 JumpIfEqual {36}
	006 Move X9, [X0+16]
	007 Compare X9, 0
	008 JumpIfEqual {34}
	009 NotImplemented "Instruction LDRSW not yet implemented."
	010 Move W11, [X9+24]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X11, [X0+24]
	013 Compare X11, 0
	014 JumpIfEqual {34}
	015 Move W12, [X11+24]
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move X12, [X0+32]
	018 Compare X12, 0
	019 JumpIfEqual {34}
	020 Move W13, [X12+24]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Add X9, X9, X10
	023 Add X11, X11, X10
	024 Add X10, X12, X10
	025 Move X9, [X9+32]
	026 Move X11, [X11+32]
	027 Move X10, [X10+32]
	028 Move [X8], X9
	029 Move [X8+8], X11
	030 Move [X8+16], X10
	031 Move X30, [X31+16]
	032 Move X19, [X31+24]
	033 Return X0
	034 Call 0x1C17F20
	035 Call 0x1C17F28
	036 Move X0, 0xE5B000
	037 Move X0, [X0+1456]
	038 Call 0x1C17D08
	039 Call 0x1C17F10
	040 Move X19, X0
	041 Move X0, 0xE85000
	042 Move X0, [X0+656]
	043 Call 0x1C17D08
	044 Move X1, X0
	045 Move X0, X19
	046 Move X2, X31
	047 Call InvalidOperationException..ctor, X0, X1
	048 Move X0, 0xE8C000
	049 Move X0, [X0+2336]
	050 Call 0x1C17D08
	051 Move X1, X0
	052 Move X0, X19
	053 Call 0x1C17DEC

Method: System.Void Reset()

Disassembly:
	0x032A028C LDR X0, [X22]
	0x032A0290 BL 0x1C16F10
	0x032A0294 LDR X1, [X19]
	0x032A0298 MOV X19, X0

ISIL:
	001 Move TEMP, 0
	002 Not TEMP
	003 Move W8, TEMP
	004 Move [X0+44], W8
	005 Move [X0+48], W31
	006 Return 

Method: System.String get_Name()

Disassembly:
	0x03292A04 MOV X19, X0
	0x03292A08 TBNZ X8, 0x0, 0x3292A20
	0x03292A0C ADRP X0, 0xE62000
	0x03292A10 LDR X0, [X0 + 0xE58]
	0x03292A14 BL 0x1C16CF4
	0x03292A18 MOVZ W8, 0x1
	0x03292A1C STRB W8, [X22 + 0x6DB]
	0x03292A20 MOV X0, X19
	0x03292A24 MOV X1, X31
	0x03292A28 BL 0x33BDD8C
	0x03292A2C STR X20, [X19 + 0x20]
	0x03292A30 CBZ X20, 0x3292B94
	0x03292A34 LDR X8, [X20]
	0x03292A38 MOV X0, X20
	0x03292A3C LDR X9, [X8 + 0x248]
	0x03292A40 LDR X1, [X8 + 0x250]
	0x03292A44 BLR X9
	0x03292A48 CBZ X0, 0x3292B94
	0x03292A4C ADRP X8, 0xE62000
	0x03292A50 LDR X8, [X8 + 0xE58]
	0x03292A54 MOV X20, X0
	0x03292A58 LDR W1, [X20 + 0x18]
	0x03292A5C LDR X0, [X8]
	0x03292A60 BL 0x1C16D6C
	0x03292A64 STR X0, [X19 + 0x10]
	0x03292A68 STR W31, [X19 + 0x18]
	0x03292A6C LDR W8, [X20 + 0x18]
	0x03292A70 ANDS W31, W21, 0xFF
	0x03292A74 B.EQ 0x3292B10
	0x03292A78 CMP W8, 0x1
	0x03292A7C B.LT 0x3292B84
	0x03292A80 MOV W21, W31
	0x03292A84 CMP W21, W8

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+48]
	004 Compare W8, 0
	005 JumpIfEqual {17}
	006 Move X8, [X0+16]
	007 Compare X8, 0
	008 JumpIfEqual {35}
	009 NotImplemented "Instruction LDRSW not yet implemented."
	010 Move W10, [X8+24]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Add X8, X8, X9
	013 Move X0, [X8+32]
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Return X0
	017 Move X0, 0xE62000
	018 Move X0, [X0+1456]
	019 Call 0x1C17D08
	020 Call 0x1C17F10
	021 Move X19, X0
	022 Move X0, 0xE8C000
	023 Move X0, [X0+656]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X19
	027 Move X2, X31
	028 Call InvalidOperationException..ctor, X0, X1
	029 Move X0, 0xE93000
	030 Move X0, [X0+1944]
	031 Call 0x1C17D08
	032 Move X1, X0
	033 Move X0, X19
	034 Call 0x1C17DEC
	035 Call 0x1C17F20
	036 Call 0x1C17F28

Method: System.Object get_Value()

Disassembly:
	0x03292A88 B.CS 0x3292B98
	0x03292A8C ADD X22, X20, W21, 0x3, SXTW
	0x03292A90 LDR X0, [X22 + 0x20]!
	0x03292A94 CBZ X0, 0x3292B94
	0x03292A98 LDR X8, [X0]
	0x03292A9C LDP X9, X1, [X8 + 0x1D8]
	0x03292AA0 BLR X9
	0x03292AA4 CBZ X0, 0x3292B94
	0x03292AA8 MOV X1, X31
	0x03292AAC BL 0x3396C08
	0x03292AB0 TBNZ X0, 0x0, 0x3292AD4
	0x03292AB4 LDR W8, [X20 + 0x18]
	0x03292AB8 CMP W21, W8
	0x03292ABC B.CS 0x3292B98
	0x03292AC0 LDR X0, [X22]
	0x03292AC4 CBZ X0, 0x3292B94
	0x03292AC8 MOV X1, X31
	0x03292ACC BL 0x32CF478
	0x03292AD0 TBZ X0, 0x0, 0x3292AFC
	0x03292AD4 LDRSW X8, [X19 + 0x18]
	0x03292AD8 LDR X9, [X19 + 0x10]
	0x03292ADC ADD W10, W8, 0x1
	0x03292AE0 STR W10, [X19 + 0x18]
	0x03292AE4 CBZ X9, 0x3292B94
	0x03292AE8 LDR W10, [X9 + 0x18]
	0x03292AEC CMP W8, W10
	0x03292AF0 B.CS 0x3292B98
	0x03292AF4 ADD X8, X9, X8, 0x2, LSL
	0x03292AF8 STR W21, [X8 + 0x20]
	0x03292AFC LDR W8, [X20 + 0x18]
	0x03292B00 ADD W21, W21, 0x1
	0x03292B04 CMP W21, W8
	0x03292B08 B.LT 0x3292A84

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+48]
	004 Compare W8, 0
	005 JumpIfEqual {17}
	006 Move X8, [X0+24]
	007 Compare X8, 0
	008 JumpIfEqual {35}
	009 NotImplemented "Instruction LDRSW not yet implemented."
	010 Move W10, [X8+24]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Add X8, X8, X9
	013 Move X0, [X8+32]
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Return X0
	017 Move X0, 0xE62000
	018 Move X0, [X0+1456]
	019 Call 0x1C17D08
	020 Call 0x1C17F10
	021 Move X19, X0
	022 Move X0, 0xE8C000
	023 Move X0, [X0+656]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X19
	027 Move X2, X31
	028 Call InvalidOperationException..ctor, X0, X1
	029 Move X0, 0xE93000
	030 Move X0, [X0+1952]
	031 Call 0x1C17D08
	032 Move X1, X0
	033 Move X0, X19
	034 Call 0x1C17DEC
	035 Call 0x1C17F20
	036 Call 0x1C17F28

Method: System.Type get_ObjectType()

Disassembly:
	0x032A029C BL 0x2984BBC
	0x032A02A0 LDR X8, [X20]
	0x032A02A4 LDP X22, X21, [X31 + 0x10]
	0x032A02A8 LDR X8, [X8 + 0xB8]
	0x032A02AC STR X19, [X8]
	0x032A02B0 LDP X20, X19, [X31 + 0x20]
	0x032A02B4 LDR X30, [X31], #0x30
	0x032A02B8 RET
	0x032A02BC STR X30, [X31 - 0x20]!
	0x032A02C0 STP X20, X19, [X31 + 0x10]
	0x032A02C4 ADRP X19, 0x113C000
	0x032A02C8 ADRP X20, 0xE84000
	0x032A02CC LDRB W8, [X19 + 0x763]
	0x032A02D0 LDR X20, [X20 + 0xB08]
	0x032A02D4 TBNZ X8, 0x0, 0x32A02EC
	0x032A02D8 ADRP X0, 0xE84000
	0x032A02DC LDR X0, [X0 + 0xB08]
	0x032A02E0 BL 0x1C16CF4
	0x032A02E4 MOVZ W8, 0x1
	0x032A02E8 STRB W8, [X19 + 0x763]
	0x032A02EC LDR X0, [X20]
	0x032A02F0 BL 0x1C16F10
	0x032A02F4 MOV X1, X31
	0x032A02F8 MOV X19, X0
	0x032A02FC BL 0x33BDD8C
	0x032A0300 LDR X8, [X20]
	0x032A0304 LDR X8, [X8 + 0xB8]
	0x032A0308 STR X19, [X8]
	0x032A030C LDP X20, X19, [X31 + 0x10]
	0x032A0310 LDR X30, [X31], #0x20
	0x032A0314 RET
	0x032A0318 MOV X1, X31
	0x032A031C B 0x33BDD8C

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+48]
	004 Compare W8, 0
	005 JumpIfEqual {17}
	006 Move X8, [X0+32]
	007 Compare X8, 0
	008 JumpIfEqual {35}
	009 NotImplemented "Instruction LDRSW not yet implemented."
	010 Move W10, [X8+24]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Add X8, X8, X9
	013 Move X0, [X8+32]
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Return X0
	017 Move X0, 0xE54000
	018 Move X0, [X0+1456]
	019 Call 0x1C17D08
	020 Call 0x1C17F10
	021 Move X19, X0
	022 Move X0, 0xE7E000
	023 Move X0, [X0+656]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X19
	027 Move X2, X31
	028 Call InvalidOperationException..ctor, X0, X1
	029 Move X0, 0xE85000
	030 Move X0, [X0+2656]
	031 Call 0x1C17D08
	032 Move X1, X0
	033 Move X0, X19
	034 Call 0x1C17DEC
	035 Call 0x1C17F20
	036 Call 0x1C17F28

