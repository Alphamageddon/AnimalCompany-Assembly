Type: System.Runtime.Serialization.ObjectHolderList

Method: System.Void .ctor()

Disassembly:
	0x032A46C0 LDR W8, [X26 + 0x18]
	0x032A46C4 CMP X20, X8

ISIL:
	001 Move W1, 8
	002 Call ObjectHolderList..ctor, X0, X1
	003 Return 

Method: System.Void .ctor(System.Int32 startingSize)

Disassembly:
	0x032A82F4 BL 0x1C16F20
	0x032A82F8 STR X30, [X31 - 0x10]!
	0x032A82FC LDR X0, [X0 + 0x10]
	0x032A8300 CBZ X0, 0x32A8318
	0x032A8304 LDR X8, [X0]
	0x032A8308 LDR X2, [X8 + 0x248]
	0x032A830C LDR X1, [X8 + 0x250]
	0x032A8310 LDR X30, [X31], #0x10
	0x032A8314 BR X2
	0x032A8318 BL 0x1C16F20
	0x032A831C MOV W3, W31
	0x032A8320 B 0x32A8324
	0x032A8324 STP X30, X27, [X31 - 0x50]!
	0x032A8328 STP X26, X25, [X31 + 0x10]
	0x032A832C STP X24, X23, [X31 + 0x20]
	0x032A8330 STP X22, X21, [X31 + 0x30]
	0x032A8334 STP X20, X19, [X31 + 0x40]
	0x032A8338 ADRP X23, 0x1134000
	0x032A833C LDRB W8, [X23 + 0x7A9]
	0x032A8340 MOV W21, W3
	0x032A8344 MOV X19, X2
	0x032A8348 MOV X22, X1
	0x032A834C MOV X20, X0
	0x032A8350 TBNZ X8, 0x0, 0x32A8398
	0x032A8354 ADRP X0, 0xE4D000
	0x032A8358 LDR X0, [X0 + 0xB20]
	0x032A835C BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1135000
	007 Move X21, 0xE7D000
	008 Move W8, [X22+1950]
	009 Move X21, [X21+3296]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xE7D000
	017 Move X0, [X0+3296]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1950], W8
	021 Move X0, X19
	022 Move X1, X31
	023 Call Object..ctor, X0
	024 Move [X19+24], W31
	025 Move X0, [X21]
	026 Move W1, W20
	027 Call 0x1C17D6C
	028 Move [X19+16], X0
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X30, [X31+48]
	034 Return 

Method: System.Void Add(System.Runtime.Serialization.ObjectHolder value)

Disassembly:
	0x032A8360 ADRP X0, 0xE4D000
	0x032A8364 LDR X0, [X0 + 0xB18]
	0x032A8368 BL 0x1C16CF4
	0x032A836C ADRP X0, 0xE4B000
	0x032A8370 LDR X0, [X0 + 0x9D0]
	0x032A8374 BL 0x1C16CF4
	0x032A8378 ADRP X0, 0xE4B000
	0x032A837C LDR X0, [X0 + 0xAC8]
	0x032A8380 BL 0x1C16CF4
	0x032A8384 ADRP X0, 0xE53000
	0x032A8388 LDR X0, [X0 + 0xC60]
	0x032A838C BL 0x1C16CF4
	0x032A8390 MOVZ W8, 0x1
	0x032A8394 STRB W8, [X23 + 0x7A9]
	0x032A8398 MOV X0, X20
	0x032A839C MOV X1, X31
	0x032A83A0 BL 0x33BDD8C
	0x032A83A4 CBZ X22, 0x32A8498
	0x032A83A8 CBZ X19, 0x32A84B8
	0x032A83AC STR X22, [X20 + 0x50]
	0x032A83B0 LDR X8, [X22]
	0x032A83B4 MOV X0, X22
	0x032A83B8 LDR X9, [X8 + 0x2E8]
	0x032A83BC LDR X1, [X8 + 0x2F0]
	0x032A83C0 BLR X9
	0x032A83C4 STR X0, [X20 + 0x40]
	0x032A83C8 LDR X8, [X22]
	0x032A83CC MOV X0, X22
	0x032A83D0 LDR X9, [X8 + 0x308]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+16]
	005 Compare X8, 0
	006 JumpIfEqual {20}
	007 Move W9, [X0+24]
	008 Move W10, [X8+24]
	009 Move X20, X0
	010 Move X19, X1
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X0, X20
	013 Call ObjectHolderList.EnlargeArray, X0
	014 Move W9, [X20+24]
	015 Move X8, [X20+16]
	016 Add W10, W9, 1
	017 Move [X20+24], W10
	018 Compare X8, 0
	019 JumpIfNotEqual {23}
	020 Call 0x1C17F20
	021 Add W10, W9, 1
	022 Move [X20+24], W10
	023 Move W10, [X8+24]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Add X8, X8, W9
	026 Move [X8+32], X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Return 
	031 Call 0x1C17F28

Method: System.Runtime.Serialization.ObjectHolderListEnumerator GetFixupEnumerator()

Disassembly:
	0x032A7310 MOV W20, W1
	0x032A7314 MOV X19, X0
	0x032A7318 TBNZ X8, 0x0, 0x32A7330
	0x032A731C ADRP X0, 0xE7D000
	0x032A7320 LDR X0, [X0 + 0xCE0]
	0x032A7324 BL 0x1C16CF4
	0x032A7328 MOVZ W8, 0x1
	0x032A732C STRB W8, [X22 + 0x79E]
	0x032A7330 MOV X0, X19
	0x032A7334 MOV X1, X31
	0x032A7338 BL 0x33BDD8C
	0x032A733C STR W31, [X19 + 0x18]
	0x032A7340 LDR X0, [X21]
	0x032A7344 MOV W1, W20
	0x032A7348 BL 0x1C16D6C
	0x032A734C STR X0, [X19 + 0x10]
	0x032A7350 LDP X20, X19, [X31 + 0x20]
	0x032A7354 LDP X22, X21, [X31 + 0x10]
	0x032A7358 LDR X30, [X31], #0x30
	0x032A735C RET
	0x032A7360 STR X30, [X31 - 0x20]!
	0x032A7364 STP X20, X19, [X31 + 0x10]
	0x032A7368 LDR X8, [X0 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1136000
	006 Move X21, 0xE7E000
	007 Move W8, [X20+1951]
	008 Move X21, [X21+3608]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE7E000
	015 Move X0, [X0+3608]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1951], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move W2, 1
	022 Move X1, X19
	023 Move X20, X0
	024 Call ObjectHolderListEnumerator..ctor, X0, X1, X2
	025 Move X0, X20
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0

Method: System.Void EnlargeArray()

Disassembly:
	0x032A83D4 LDR X1, [X8 + 0x310]
	0x032A83D8 BLR X9
	0x032A83DC CBZ X0, 0x32A8494
	0x032A83E0 LDR X8, [X0]
	0x032A83E4 LDP X9, X1, [X8 + 0x1A8]
	0x032A83E8 BLR X9
	0x032A83EC CBZ X0, 0x32A8494
	0x032A83F0 LDR X8, [X0]
	0x032A83F4 ADRP X22, 0xE4B000
	0x032A83F8 ADRP X23, 0xE4B000
	0x032A83FC ADRP X24, 0xE53000
	0x032A8400 LDR X22, [X22 + 0xAC8]
	0x032A8404 LDR X23, [X23 + 0x9D0]
	0x032A8408 LDR X24, [X24 + 0xC60]
	0x032A840C LDP X9, X1, [X8 + 0x1B8]
	0x032A8410 ADRP X25, 0xE4D000
	0x032A8414 ADRP X26, 0xE4D000
	0x032A8418 LDR X25, [X25 + 0xB18]
	0x032A841C LDR X26, [X26 + 0xB20]
	0x032A8420 AND W27, W21, 0x1
	0x032A8424 BLR X9
	0x032A8428 STR X0, [X20 + 0x48]
	0x032A842C LDR X0, [X22]
	0x032A8430 MOVZ W1, 0x4
	0x032A8434 BL 0x1C16D6C
	0x032A8438 STR X0, [X20 + 0x10]
	0x032A843C LDR X0, [X23]
	0x032A8440 MOVZ W1, 0x4
	0x032A8444 BL 0x1C16D6C
	0x032A8448 STR X0, [X20 + 0x18]
	0x032A844C LDR X0, [X24]
	0x032A8450 MOVZ W1, 0x4
	0x032A8454 BL 0x1C16D6C
	0x032A8458 STR X0, [X20 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1135000
	005 Move W8, [X20+1952]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE7D000
	012 Move X0, [X0+3296]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1952], W8
	016 Move X8, [X19+16]
	017 Compare X8, 0
	018 JumpIfEqual {44}
	019 Move X9, 0xE7D000
	020 Move W8, [X8+24]
	021 Move X9, [X9+3296]
	022 Move W8, W8
	023 ShiftRight W8, 31
	024 And W8, W8, 0x3FFFFFFF
	025 Move X0, [X9]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move TEMP, 0x80000000
	028 Not TEMP
	029 Move W9, TEMP
	030 NotImplemented "Instruction CSEL not yet implemented."
	031 Call 0x1C17D6C
	032 Move X8, [X19+16]
	033 Move W2, [X19+24]
	034 Move X20, X0
	035 Move X1, X20
	036 Move X0, X8
	037 Move X3, X31
	038 Call Array.Copy, X0, X1, X2
	039 Move [X19+16], X20
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Return 
	044 Call 0x1C17F20

Method: System.Int32 get_Version()

Disassembly:
	0x032A84A4 BL 0x1C16F10
	0x032A84A8 MOV X19, X0

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.Int32 get_Count()

Disassembly:
	0x032A84AC ADRP X0, 0xE53000
	0x032A84B0 LDR X0, [X0 + 0x5E8]

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

