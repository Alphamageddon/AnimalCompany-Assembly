Type: System.Runtime.Serialization.LongList

Method: System.Void .ctor()

Disassembly:
	0x032A7F70 MOV X0, X8
	0x032A7F74 BL 0x1C16DFC

ISIL:
	001 Move W1, 2
	002 Call LongList..ctor, X0, X1
	003 Return 

Method: System.Void .ctor(System.Int32 startingSize)

Disassembly:
	0x032A81F8 CBZ X0, 0x32A8210
	0x032A81FC LDR X8, [X0]
	0x032A8200 AND W1, W1, 0x1
	0x032A8204 LDP X3, X2, [X8 + 0x1F8]
	0x032A8208 LDR X30, [X31], #0x10
	0x032A820C BR X3
	0x032A8210 BL 0x1C16F20
	0x032A8214 STR X30, [X31 - 0x10]!
	0x032A8218 LDR X0, [X0 + 0x10]
	0x032A821C CBZ X0, 0x32A8238
	0x032A8220 LDR X8, [X0]
	0x032A8224 AND W2, W2, 0x1
	0x032A8228 LDR X4, [X8 + 0x208]
	0x032A822C LDR X3, [X8 + 0x210]
	0x032A8230 LDR X30, [X31], #0x10
	0x032A8234 BR X4
	0x032A8238 BL 0x1C16F20
	0x032A823C STR X30, [X31 - 0x10]!
	0x032A8240 LDR X0, [X0 + 0x10]
	0x032A8244 CBZ X0, 0x32A825C
	0x032A8248 LDR X8, [X0]
	0x032A824C AND W2, W2, 0x1
	0x032A8250 LDP X4, X3, [X8 + 0x1E8]
	0x032A8254 LDR X30, [X31], #0x10
	0x032A8258 BR X4
	0x032A825C BL 0x1C16F20
	0x032A8260 STR X30, [X31 - 0x10]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1135000
	007 Move X21, 0xE7D000
	008 Move W8, [X22+1948]
	009 Move X21, [X21+2104]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xE7D000
	017 Move X0, [X0+2104]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1948], W8
	021 Move X0, X19
	022 Move X1, X31
	023 Call Object..ctor, X0
	024 Move [X19+24], X31
	025 Move X0, [X21]
	026 Move W1, W20
	027 Call 0x1C17D6C
	028 Move [X19+16], X0
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X30, [X31+48]
	034 Return 

Method: System.Void Add(System.Int64 value)

Disassembly:
	0x032A7F78 MOV X0, X25
	0x032A7F7C MOV X1, X31
	0x032A7F80 MOV X2, X31
	0x032A7F84 BL 0x32CC854
	0x032A7F88 TBZ X0, 0x0, 0x32A7FA8
	0x032A7F8C CBZ X25, 0x32A8024
	0x032A7F90 LDR X8, [X25]
	0x032A7F94 MOV X0, X25
	0x032A7F98 LDR X9, [X8 + 0x348]
	0x032A7F9C LDR X1, [X8 + 0x350]
	0x032A7FA0 BLR X9
	0x032A7FA4 TBNZ X0, 0x0, 0x32A7F08
	0x032A7FA8 MOV X0, X24
	0x032A7FAC BL 0x32A5EEC
	0x032A7FB0 ADRP X8, 0xE7D000
	0x032A7FB4 LDR X8, [X8 + 0xB70]
	0x032A7FB8 LDR X22, [X19 + 0x28]
	0x032A7FBC MOV X23, X0
	0x032A7FC0 LDR X8, [X8]
	0x032A7FC4 LDR W9, [X8 + 0xE0]
	0x032A7FC8 CBNZ W9, 0x32A7FD4
	0x032A7FCC MOV X0, X8
	0x032A7FD0 BL 0x1C16DFC
	0x032A7FD4 MOV X0, X22
	0x032A7FD8 BL 0x32A1868
	0x032A7FDC CBZ X23, 0x32A8024
	0x032A7FE0 LDR X2, [X19 + 0x18]
	0x032A7FE4 MOV X22, X0
	0x032A7FE8 MOV X0, X23
	0x032A7FEC MOV X1, X22
	0x032A7FF0 MOV X3, X21
	0x032A7FF4 MOV X4, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+16]
	005 Compare X8, 0
	006 JumpIfEqual {20}
	007 Move W9, [X0+28]
	008 Move W10, [X8+24]
	009 Move X19, X0
	010 Move X20, X1
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X0, X19
	013 Call LongList.EnlargeArray, X0
	014 Move W9, [X19+28]
	015 Move X8, [X19+16]
	016 Add W10, W9, 1
	017 Move [X19+28], W10
	018 Compare X8, 0
	019 JumpIfNotEqual {23}
	020 Call 0x1C17F20
	021 Add W10, W9, 1
	022 Move [X19+28], W10
	023 Move W10, [X8+24]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Add X8, X8, W9
	026 Move [X8+32], X20
	027 Move W8, [X19+24]
	028 Add W8, W8, 1
	029 Move [X19+24], W8
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Return 
	034 Call 0x1C17F28

Method: System.Int32 get_Count()

Disassembly:
	0x032A82EC LDR X30, [X31], #0x10
	0x032A82F0 BR X2

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.Void StartEnumeration()

Disassembly:
	0x032A6284 ADRP X0, 0xE4D000
	0x032A6288 LDR X0, [X0 + 0x9D0]
	0x032A628C BL 0x1C16D08

ISIL:
	001 Move TEMP, 0
	002 Not TEMP
	003 Move W8, TEMP
	004 Move [X0+32], W8
	005 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x032A62D0 BL 0x1BB5124
	0x032A62D4 LDR X19, [X0 + 0x10]
	0x032A62D8 MOV X0, X20
	0x032A62DC BL 0x19903C0
	0x032A62E0 MOV X0, X20
	0x032A62E4 MOV X1, X19
	0x032A62E8 BL 0x19980B4
	0x032A62EC MOV X0, X20
	0x032A62F0 MOV X1, X31
	0x032A62F4 MOV X2, X19
	0x032A62F8 BL 0x1993444
	0x032A62FC ADRP X0, 0xE7E000
	0x032A6300 LDR X0, [X0 + 0xD88]
	0x032A6304 BL 0x1C16D08
	0x032A6308 MOV X1, X20
	0x032A630C B 0x32A6228
	0x032A6310 STP X30, X21, [X31 - 0x20]!
	0x032A6314 STP X20, X19, [X31 + 0x10]
	0x032A6318 ADRP X20, 0x1136000
	0x032A631C ADRP X21, 0xE7E000
	0x032A6320 LDRB W8, [X20 + 0x79F]
	0x032A6324 LDR X21, [X21 + 0xE18]
	0x032A6328 MOV X19, X0
	0x032A632C TBNZ X8, 0x0, 0x32A6344
	0x032A6330 ADRP X0, 0xE7E000
	0x032A6334 LDR X0, [X0 + 0xE18]
	0x032A6338 BL 0x1C16CF4
	0x032A633C MOVZ W8, 0x1
	0x032A6340 STRB W8, [X20 + 0x79F]
	0x032A6344 LDR X0, [X21]
	0x032A6348 BL 0x1C16F10
	0x032A634C MOVZ W2, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move W8, [X0+28]
	003 Move W11, [X0+32]
	004 Add W9, W11, 1
	005 NotImplemented "Instruction CMP not yet implemented."
	006 NotImplemented "Instruction CSINC not yet implemented."
	007 Add W9, W11, 1
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move X12, [X0+16]
	010 Compare X12, 0
	011 JumpIfEqual {25}
	012 Move W13, [X12+24]
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Add X11, X12, W9
	015 Move X11, [X11+32]
	016 Add X31, X11, 1
	017 Move W11, W9
	018 Move W9, W10
	019 NotImplemented "Instruction CMP not yet implemented."
	020 NotImplemented "Instruction CSET not yet implemented."
	021 Move [X0+32], W9
	022 Move W0, W8
	023 Move X30, [X31+16]
	024 Return X0
	025 Add W8, W11, 1
	026 Move [X0+32], W8
	027 Call 0x1C17F20
	028 Add W8, W11, 1
	029 Move [X0+32], W8
	030 Call 0x1C17F28

Method: System.Int64 get_Current()

Disassembly:
	0x032A6290 MOVZ W1, 0x1
	0x032A6294 BL 0x1C16D6C
	0x032A6298 ADRP X21, 0xE7E000
	0x032A629C LDR X19, [X19 + 0x28]
	0x032A62A0 LDR X21, [X21 + 0xD38]
	0x032A62A4 MOV X20, X0
	0x032A62A8 MOV X0, X21
	0x032A62AC BL 0x1C16D08
	0x032A62B0 MOV X1, X0
	0x032A62B4 MOV X0, X19
	0x032A62B8 BL 0x1BB5124
	0x032A62BC BL 0x19903C0
	0x032A62C0 MOV X0, X21

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {12}
	005 NotImplemented "Instruction LDRSW not yet implemented."
	006 Move W10, [X8+24]
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Add X8, X8, X9
	009 Move X0, [X8+32]
	010 Move X30, [X31+16]
	011 Return X0
	012 Call 0x1C17F20
	013 Call 0x1C17F28

Method: System.Boolean RemoveElement(System.Int64 value)

Disassembly:
	0x032A7EC4 CMP X9, X8
	0x032A7EC8 CSEL X23, X0, X31, EQ
	0x032A7ECC LDR X0, [X27]
	0x032A7ED0 LDR X24, [X25]
	0x032A7ED4 LDR W8, [X0 + 0xE0]
	0x032A7ED8 CBNZ W8, 0x32A7EE0
	0x032A7EDC BL 0x1C16DFC
	0x032A7EE0 MOV X0, X24
	0x032A7EE4 MOV X1, X31
	0x032A7EE8 BL 0x338C698
	0x032A7EEC MOV X1, X0
	0x032A7EF0 MOV X0, X23
	0x032A7EF4 MOV X2, X31
	0x032A7EF8 BL 0x3395F0C
	0x032A7EFC TBNZ X0, 0x0, 0x32A7E64
	0x032A7F00 ADRP X27, 0xE76000
	0x032A7F04 LDR X27, [X27 + 0x978]
	0x032A7F08 LDR X8, [X22]
	0x032A7F0C MOV X0, X22
	0x032A7F10 MOV X24, X23
	0x032A7F14 LDR X9, [X8 + 0x258]
	0x032A7F18 LDR X1, [X8 + 0x260]
	0x032A7F1C BLR X9
	0x032A7F20 CBZ X0, 0x32A8024
	0x032A7F24 LDR X9, [X0]
	0x032A7F28 LDR X8, [X26]
	0x032A7F2C MOV X23, X0
	0x032A7F30 LDRB W11, [X9 + 0x130]
	0x032A7F34 LDRB W10, [X8 + 0x130]
	0x032A7F38 CMP W11, W10
	0x032A7F3C B.CC 0x32A8024
	0x032A7F40 LDR X9, [X9 + 0xC8]
	0x032A7F44 ADD X9, X9, X10, 0x3, LSL
	0x032A7F48 LDUR X9, [X9 - 0x8]
	0x032A7F4C CMP X9, X8

ISIL:
	001 Move [X31-16], X30
	002 Move W8, [X0+28]
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move X11, [X0+16]
	005 Compare X11, 0
	006 JumpIfEqual {32}
	007 Move W10, [X11+24]
	008 Move X9, X31
	009 Add X11, X11, 32
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move X12, [X11]
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Add X9, X9, 1
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move W9, W31
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move X10, [X0+16]
	018 Compare X10, 0
	019 JumpIfEqual {32}
	020 Move W11, [X10+24]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Add X10, X10, W9
	023 Move TEMP, 0
	024 Not TEMP
	025 Move X11, TEMP
	026 Move [X10+32], X11
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction CSET not yet implemented."
	029 Move X30, [X31+16]
	030 Return X0
	031 Call 0x1C17F28
	032 Call 0x1C17F20

Method: System.Void EnlargeArray()

Disassembly:
	0x032A8264 LDR X0, [X0 + 0x10]
	0x032A8268 CBZ X0, 0x32A8280
	0x032A826C LDR X8, [X0]
	0x032A8270 LDR X2, [X8 + 0x258]
	0x032A8274 LDR X1, [X8 + 0x260]
	0x032A8278 LDR X30, [X31], #0x10
	0x032A827C BR X2
	0x032A8280 BL 0x1C16F20
	0x032A8284 STR X30, [X31 - 0x10]!
	0x032A8288 LDR X0, [X0 + 0x10]
	0x032A828C CBZ X0, 0x32A82A4
	0x032A8290 LDR X8, [X0]
	0x032A8294 LDR X3, [X8 + 0x2C8]
	0x032A8298 LDR X2, [X8 + 0x2D0]
	0x032A829C LDR X30, [X31], #0x10
	0x032A82A0 BR X3
	0x032A82A4 BL 0x1C16F20
	0x032A82A8 STR X30, [X31 - 0x10]!
	0x032A82AC LDR X0, [X0 + 0x10]
	0x032A82B0 CBZ X0, 0x32A82C8
	0x032A82B4 LDR X8, [X0]
	0x032A82B8 LDR X7, [X8 + 0x2E8]
	0x032A82BC LDR X6, [X8 + 0x2F0]
	0x032A82C0 LDR X30, [X31], #0x10
	0x032A82C4 BR X7
	0x032A82C8 BL 0x1C16F20
	0x032A82CC LDR X0, [X0 + 0x10]
	0x032A82D0 RET
	0x032A82D4 STR X30, [X31 - 0x10]!
	0x032A82D8 LDR X0, [X0 + 0x10]
	0x032A82DC CBZ X0, 0x32A82F4
	0x032A82E0 LDR X8, [X0]
	0x032A82E4 LDR X2, [X8 + 0x2B8]
	0x032A82E8 LDR X1, [X8 + 0x2C0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1135000
	005 Move W8, [X20+1949]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE7D000
	012 Move X0, [X0+2104]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1949], W8
	016 Move X8, [X19+16]
	017 Compare X8, 0
	018 JumpIfEqual {44}
	019 Move X9, 0xE7D000
	020 Move W8, [X8+24]
	021 Move X9, [X9+2104]
	022 Move W8, W8
	023 ShiftRight W8, 31
	024 And W8, W8, 0x3FFFFFFF
	025 Move X0, [X9]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move TEMP, 0x80000000
	028 Not TEMP
	029 Move W9, TEMP
	030 NotImplemented "Instruction CSEL not yet implemented."
	031 Call 0x1C17D6C
	032 Move X8, [X19+16]
	033 Move W2, [X19+24]
	034 Move X20, X0
	035 Move X1, X20
	036 Move X0, X8
	037 Move X3, X31
	038 Call Array.Copy, X0, X1, X2
	039 Move [X19+16], X20
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Return 
	044 Call 0x1C17F20

