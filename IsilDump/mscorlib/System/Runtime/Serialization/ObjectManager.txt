Type: System.Runtime.Serialization.ObjectManager

Method: System.Void .ctor(System.Runtime.Serialization.ISurrogateSelector selector, System.Runtime.Serialization.StreamingContext context, System.Boolean checkSecurity, System.Boolean isCrossAppDomain)

Disassembly:
	0x032A45C4 CBZ X0, 0x32A4880
	0x032A45C8 LDR X20, [X26 + 0x20]
	0x032A45CC MOV X22, X0
	0x032A45D0 ADRP X25, 0xE4F000
	0x032A45D4 LDR X8, [X22 + 0x10]
	0x032A45D8 LDR X25, [X25 + 0xEF0]
	0x032A45DC CBZ X8, 0x32A4610
	0x032A45E0 LDR X10, [X8]
	0x032A45E4 LDR X9, [X25]
	0x032A45E8 LDRB W12, [X10 + 0x130]
	0x032A45EC LDRB W11, [X9 + 0x130]
	0x032A45F0 CMP W12, W11
	0x032A45F4 B.CC 0x32A460C
	0x032A45F8 LDR X10, [X10 + 0xC8]
	0x032A45FC ADD X10, X10, X11, 0x3, LSL
	0x032A4600 LDUR X10, [X10 - 0x8]
	0x032A4604 CMP X10, X9
	0x032A4608 B.EQ 0x32A4610
	0x032A460C MOV X21, X8
	0x032A4610 CBZ W24, 0x32A47A0
	0x032A4614 LDR X0, [X28]
	0x032A4618 MOV W1, W24
	0x032A461C STR X20, [X31 + 0x8]
	0x032A4620 BL 0x1C16D6C
	0x032A4624 SUBS W19, W24, 0x1
	0x032A4628 MOV X26, X0
	0x032A462C B.LT 0x32A46E0
	0x032A4630 CBZ X23, 0x32A4880
	0x032A4634 ADRP X25, 0xE80000
	0x032A4638 LDR X25, [X25 + 0xBB8]
	0x032A463C MOV X20, X31
	0x032A4640 MOV W28, W24

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x1139000
	009 Move X23, 0xE81000
	010 Move W8, [X24+1917]
	011 Move X23, [X23+3296]
	012 Move X19, X3
	013 Move X20, X2
	014 Move X22, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xE81000
	021 Move X0, [X0+3296]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+1917], W8
	025 Move X0, X21
	026 Move X1, X31
	027 Call Object..ctor, X0
	028 Move X0, [X23]
	029 Move W1, 16
	030 Call 0x1C17D6C
	031 Move [X21+32], X0
	032 Move [X21+64], X22
	033 Move [X21+72], X20
	034 Move [X21+80], X19
	035 Move X20, [X31+48]
	036 Move X19, [X31+56]
	037 Move X22, [X31+32]
	038 Move X21, [X31+40]
	039 Move X24, [X31+16]
	040 Move X23, [X31+24]
	041 Move X30, [X31+64]
	042 Return 

Method: System.Boolean CanCallGetType(System.Object obj)

Disassembly:
	0x032A4644 ADD X29, X26, 0x20
	0x032A4648 LDR W8, [X23 + 0x18]

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Void set_TopObject(System.Object value)

Disassembly:
	0x032A464C CMP W19, W8
	0x032A4650 B.CS 0x32A4884

ISIL:
	001 Move [X0+40], X1
	002 Return 

Method: System.Object get_TopObject()

Disassembly:
	0x032A4654 ADD X8, X23, W19, 0x3, SXTW
	0x032A4658 LDR X24, [X8 + 0x20]

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Runtime.Serialization.ObjectHolderList get_SpecialFixupObjects()

Disassembly:
	0x032A465C CBZ X24, 0x32A4690
	0x032A4660 LDR X8, [X25]
	0x032A4664 LDR X9, [X24]
	0x032A4668 MOV X1, X31
	0x032A466C MOV X2, X31
	0x032A4670 CMP X9, X8
	0x032A4674 CSEL X27, X24, X31, EQ
	0x032A4678 MOV X0, X27
	0x032A467C BL 0x32CCEA8
	0x032A4680 TBNZ X0, 0x0, 0x32A46A4
	0x032A4684 CBZ X27, 0x32A4880
	0x032A4688 LDR X24, [X27 + 0x10]
	0x032A468C B 0x32A46A4
	0x032A4690 MOV X0, X31
	0x032A4694 MOV X1, X31
	0x032A4698 MOV X2, X31
	0x032A469C BL 0x32CCEA8
	0x032A46A0 TBZ X0, 0x0, 0x32A4880
	0x032A46A4 CBZ X26, 0x32A4880
	0x032A46A8 CBZ X24, 0x32A46C0
	0x032A46AC LDR X8, [X26]
	0x032A46B0 MOV X0, X24
	0x032A46B4 LDR X1, [X8 + 0x40]
	0x032A46B8 BL 0x1C16E00
	0x032A46BC CBZ X0, 0x32A4888

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1139000
	005 Move W8, [X20+1918]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE81000
	012 Move X0, [X0+3304]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1918], W8
	016 Move X20, [X19+48]
	017 Compare X20, 0
	018 JumpIfNotEqual {27}
	019 Move X8, 0xE81000
	020 Move X8, [X8+3304]
	021 Move X0, [X8]
	022 Call 0x1C17F10
	023 Move W1, 8
	024 Move X20, X0
	025 Call ObjectHolderList..ctor, X0, X1
	026 Move [X19+48], X20
	027 Move X0, X20
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Return X0

Method: System.Runtime.Serialization.ObjectHolder FindObjectHolder(System.Int64 objectID)

Disassembly:
	0x032A46C8 B.CS 0x32A4884
	0x032A46CC STR X24, [X29, X20, LSL #3]
	0x032A46D0 ADD X20, X20, 0x1
	0x032A46D4 CMP X28, X20
	0x032A46D8 SUB W19, W19, 0x1
	0x032A46DC B.NE 0x32A4648
	0x032A46E0 ADD X8, X31, 0x80
	0x032A46E4 MOV X0, X21
	0x032A46E8 MOV X1, X26
	0x032A46EC MOV X2, X31
	0x032A46F0 BL 0x33BE0F8
	0x032A46F4 LDR X19, [X31 + 0x18]
	0x032A46F8 LDR V0, [X31 + 0x8]
	0x032A46FC LDR X8, [X31 + 0x90]
	0x032A4700 MOV X1, X31
	0x032A4704 MOV X0, X19
	0x032A4708 MOV X2, X31
	0x032A470C STR V0, [X31 + 0x6]
	0x032A4710 STR X8, [X31 + 0x70]
	0x032A4714 BL 0x32CCED4
	0x032A4718 TBZ X0, 0x0, 0x32A47E8
	0x032A471C LDR V0, [X31 + 0x6]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+32]
	003 Compare X8, 0
	004 JumpIfEqual {20}
	005 Move W10, [X8+24]
	006 And W9, W1, 4095
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Add X8, X8, W9
	009 Move X0, [X8+32]
	010 Compare X0, 0
	011 JumpIfEqual {18}
	012 Move X8, [X0+24]
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move X0, [X0+72]
	015 Compare X0, 0
	016 JumpIfNotEqual {12}
	017 Move X0, X31
	018 Move X30, [X31+16]
	019 Return X0
	020 Call 0x1C17F20
	021 Call 0x1C17F28

Method: System.Runtime.Serialization.ObjectHolder FindOrCreateObjectHolder(System.Int64 objectID)

Disassembly:
	0x032A4720 LDR X8, [X31 + 0x70]
	0x032A4724 ADRP X25, 0xE4F000
	0x032A4728 LDR X20, [X31 + 0x8]
	0x032A472C STR V0, [X31 + 0x4]
	0x032A4730 STR X8, [X31 + 0x50]
	0x032A4734 LDR X25, [X25 + 0xEF0]
	0x032A4738 CBZ X19, 0x32A4880
	0x032A473C ADRP X9, 0xE80000
	0x032A4740 LDR X9, [X9 + 0xBB0]
	0x032A4744 LDR X8, [X19]
	0x032A4748 LDR X1, [X9]
	0x032A474C LDRB W10, [X8 + 0x130]
	0x032A4750 LDRB W9, [X1 + 0x130]
	0x032A4754 CMP W10, W9
	0x032A4758 B.CC 0x32A4898
	0x032A475C LDR X10, [X8 + 0xC8]
	0x032A4760 ADD X9, X10, X9, 0x3, LSL
	0x032A4764 LDUR X9, [X9 - 0x8]
	0x032A4768 CMP X9, X1
	0x032A476C B.NE 0x32A4898
	0x032A4770 LDR V0, [X31 + 0x4]
	0x032A4774 LDR X9, [X31 + 0x50]
	0x032A4778 LDR X10, [X8 + 0x2F8]
	0x032A477C LDR X2, [X31 + 0x10]
	0x032A4780 STR V0, [X31 + 0x8]
	0x032A4784 STR X9, [X31 + 0x90]
	0x032A4788 LDR X3, [X8 + 0x300]
	0x032A478C ADD X1, X31, 0x80
	0x032A4790 MOV X0, X19
	0x032A4794 BLR X10
	0x032A4798 CBNZ X20, 0x32A4818
	0x032A479C B 0x32A485C
	0x032A47A0 LDR X19, [X31 + 0x18]
	0x032A47A4 MOV X1, X31
	0x032A47A8 MOV X2, X31
	0x032A47AC MOV X0, X19
	0x032A47B0 BL 0x32CCED4
	0x032A47B4 TBZ X0, 0x0, 0x32A47E0

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1139000
	007 Move W8, [X21+1919]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE81000
	015 Move X0, [X0+3312]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1919], W8
	019 Move X0, X19
	020 Move X1, X20
	021 Call ObjectManager.FindObjectHolder, X0, X1
	022 Compare X0, 0
	023 JumpIfNotEqual {41}
	024 Move X8, 0xE81000
	025 Move X8, [X8+3312]
	026 Move X0, [X8]
	027 Call 0x1C17F10
	028 Move X1, X31
	029 Move X2, X20
	030 Move X3, X31
	031 Move X4, X31
	032 Move X5, X31
	033 Move X6, X31
	034 Move X7, X31
	035 Move X21, X0
	036 Call ObjectHolder..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	037 Move X0, X19
	038 Move X1, X21
	039 Call ObjectManager.AddObjectHolder, X0, X1
	040 Move X0, X21
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X30, [X31+16]
	044 Move X21, [X31+24]
	045 Add X31, X31, 48
	046 Return X0

Method: System.Void AddObjectHolder(System.Runtime.Serialization.ObjectHolder holder)

Disassembly:
	0x032A47EC LDR X8, [X31 + 0x70]
	0x032A47F0 LDR X1, [X31 + 0x10]
	0x032A47F4 ADD X0, X31, 0x20
	0x032A47F8 MOV X2, X31
	0x032A47FC STR V0, [X31 + 0x2]
	0x032A4800 STR X8, [X31 + 0x30]
	0x032A4804 BL 0x33BE62C
	0x032A4808 ADRP X25, 0xE4F000
	0x032A480C LDR X20, [X31 + 0x8]
	0x032A4810 LDR X25, [X25 + 0xEF0]
	0x032A4814 CBZ X20, 0x32A485C
	0x032A4818 LDR X0, [X22 + 0x10]
	0x032A481C CBZ X0, 0x32A485C
	0x032A4820 LDR X8, [X0]
	0x032A4824 LDR X1, [X25]
	0x032A4828 LDRB W10, [X8 + 0x130]
	0x032A482C LDRB W9, [X1 + 0x130]
	0x032A4830 CMP W10, W9
	0x032A4834 B.CC 0x32A4894
	0x032A4838 LDR X8, [X8 + 0xC8]
	0x032A483C ADD X8, X8, X9, 0x3, LSL
	0x032A4840 LDUR X8, [X8 - 0x8]
	0x032A4844 CMP X8, X1
	0x032A4848 B.NE 0x32A4894
	0x032A484C MOV X1, X21
	0x032A4850 MOV X2, X20
	0x032A4854 MOV X3, X31
	0x032A4858 BL 0x33A2280
	0x032A485C LDP X20, X19, [X31 + 0xF0]
	0x032A4860 LDP X22, X21, [X31 + 0xE0]
	0x032A4864 LDP X24, X23, [X31 + 0xD0]
	0x032A4868 LDP X26, X25, [X31 + 0xC0]
	0x032A486C LDP X28, X27, [X31 + 0xB0]
	0x032A4870 LDP X29, X30, [X31 + 0xA0]
	0x032A4874 MOVZ W0, 0x1
	0x032A4878 ADD X31, X31, 0x100
	0x032A487C RET
	0x032A4880 BL 0x1C16F20
	0x032A4884 BL 0x1C16F28
	0x032A4888 BL 0x1C16F44
	0x032A488C MOV X1, X31
	0x032A4890 BL 0x1C16DEC
	0x032A4894 BL 0x1C171E0
	0x032A4898 MOV X0, X19
	0x032A489C BL 0x1C171E0
	0x032A48A0 STR X30, [X31 - 0x30]!
	0x032A48A4 STP X22, X21, [X31 + 0x10]
	0x032A48A8 STP X20, X19, [X31 + 0x20]
	0x032A48AC CBZ X1, 0x32A4974
	0x032A48B0 LDR W8, [X1 + 0x50]
	0x032A48B4 MOV X20, X1
	0x032A48B8 TBNZ X8, 0x0, 0x32A4964
	0x032A48BC MOV X19, X0
	0x032A48C0 TBZ X8, 0x2, 0x32A48D0
	0x032A48C4 MOV X0, X20
	0x032A48C8 BL 0x32A3E20
	0x032A48CC TBNZ X0, 0x0, 0x32A4964
	0x032A48D0 LDR X20, [X20 + 0x40]
	0x032A48D4 CBZ X20, 0x32A4964
	0x032A48D8 MOVN W8, 0x0
	0x032A48DC MOV X0, X20
	0x032A48E0 STR W8, [X20 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1139000
	006 Move W8, [X21+1920]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xE81000
	014 Move X0, [X0+3296]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1920], W8
	018 Compare X19, 0
	019 JumpIfEqual {67}
	020 Move X21, [X20+32]
	021 Compare X21, 0
	022 JumpIfEqual {67}
	023 Move X8, [X19+24]
	024 Move X9, [X21+24]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 NotImplemented "Instruction CMP not yet implemented."
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move W1, 4096
	029 Move W9, W9
	030 ShiftRight W9, 31
	031 And W9, W9, 0x3FFFFFFF
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X10, W9
	034 NotImplemented "Instruction CMP not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move W8, 4096
	037 NotImplemented "Instruction CSEL not yet implemented."
	038 Move X8, 0xE81000
	039 Move X8, [X8+3296]
	040 Move X0, [X8]
	041 Call 0x1C17D6C
	042 Move X8, [X20+32]
	043 Compare X8, 0
	044 JumpIfEqual {67}
	045 Move W2, [X8+24]
	046 Move X21, X0
	047 Move X0, X8
	048 Move X1, X21
	049 Move X3, X31
	050 Call Array.Copy, X0, X1, X2
	051 Move [X20+32], X21
	052 Compare X21, 0
	053 JumpIfEqual {67}
	054 Move X8, [X19+24]
	055 Move W9, [X21+24]
	056 And X8, X8, 4095
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Add X8, X21, X8
	059 Move X9, [X8+32]
	060 Move [X19+72], X9
	061 Move [X8+32], X19
	062 Move X20, [X31+16]
	063 Move X19, [X31+24]
	064 Move X30, [X31+32]
	065 Move X21, [X31+40]
	066 Return 
	067 Call 0x1C17F20
	068 Call 0x1C17F28

Method: System.Boolean GetCompletionInfo(System.Runtime.Serialization.FixupHolder fixup, out System.Runtime.Serialization.ObjectHolder holder, out System.Object member, System.Boolean bThrowIfMissing)

Disassembly:
	0x032A48E4 BL 0x32A52D0
	0x032A48E8 TBZ X0, 0x0, 0x32A4964
	0x032A48EC MOVZ W22, 0x1
	0x032A48F0 MOV X0, X20
	0x032A48F4 BL 0x32A5290
	0x032A48F8 MOV X1, X0
	0x032A48FC MOV X0, X19
	0x032A4900 BL 0x32A36C8
	0x032A4904 CBZ X0, 0x32A4974
	0x032A4908 LDR W8, [X0 + 0x20]
	0x032A490C LDRB W9, [X0 + 0x50]
	0x032A4910 MOV X21, X0
	0x032A4914 SUB W8, W8, 0x1
	0x032A4918 STR W8, [X0 + 0x20]
	0x032A491C TBZ X9, 0x3, 0x32A4934
	0x032A4920 MOVN W1, 0x0
	0x032A4924 MOV X0, X21
	0x032A4928 MOV X2, X19
	0x032A492C BL 0x32A6E64
	0x032A4930 LDR W8, [X21 + 0x20]
	0x032A4934 CBNZ W8, 0x32A4958
	0x032A4938 LDR X8, [X21 + 0x10]
	0x032A493C CBZ X8, 0x32A4954
	0x032A4940 MOVZ W2, 0x1
	0x032A4944 MOV X0, X19
	0x032A4948 MOV X1, X21
	0x032A494C BL 0x32A4C04
	0x032A4950 B 0x32A4958
	0x032A4954 STRB W22, [X21 + 0x54]
	0x032A4958 MOV X0, X20
	0x032A495C BL 0x32A52D0
	0x032A4960 TBNZ X0, 0x0, 0x32A48F0
	0x032A4964 LDP X20, X19, [X31 + 0x20]
	0x032A4968 LDP X22, X21, [X31 + 0x10]
	0x032A496C LDR X30, [X31], #0x30
	0x032A4970 RET
	0x032A4974 BL 0x1C16F20
	0x032A4978 STP X30, X27, [X31 - 0x50]!
	0x032A497C STP X26, X25, [X31 + 0x10]
	0x032A4980 STP X24, X23, [X31 + 0x20]
	0x032A4984 STP X22, X21, [X31 + 0x30]
	0x032A4988 STP X20, X19, [X31 + 0x40]
	0x032A498C ADRP X21, 0x1138000
	0x032A4990 LDRB W8, [X21 + 0x783]
	0x032A4994 MOV X19, X1
	0x032A4998 MOV X20, X0
	0x032A499C TBNZ X8, 0x0, 0x32A49B4
	0x032A49A0 ADRP X0, 0xE80000
	0x032A49A4 LDR X0, [X0 + 0xD40]
	0x032A49A8 BL 0x1C16CF4
	0x032A49AC MOVZ W8, 0x1
	0x032A49B0 STRB W8, [X21 + 0x783]
	0x032A49B4 CBZ X19, 0x32A4B60
	0x032A49B8 ADRP X27, 0xE80000
	0x032A49BC LDR X21, [X19 + 0x10]
	0x032A49C0 LDR X27, [X27 + 0xD40]
	0x032A49C4 MOV W26, W31
	0x032A49C8 CBZ X21, 0x32A4AF4
	0x032A49CC LDP X22, X23, [X20 + 0x48]
	0x032A49D0 LDR X24, [X27]
	0x032A49D4 MOV X0, X21
	0x032A49D8 MOV X1, X24
	0x032A49DC BL 0x1C16E00
	0x032A49E0 CBZ X0, 0x32A4AF8
	0x032A49E4 LDR X25, [X27]
	0x032A49E8 MOV X0, X21
	0x032A49EC MOV X1, X25
	0x032A49F0 BL 0x1C16E00
	0x032A49F4 MOV X24, X0
	0x032A49F8 CBZ X0, 0x32A4AE8
	0x032A49FC LDR X8, [X24]
	0x032A4A00 LDRH W9, [X8 + 0x12E]
	0x032A4A04 CBZ X9, 0x32A4A28
	0x032A4A08 LDR X10, [X8 + 0xB0]
	0x032A4A0C ADD X10, X10, 0x8
	0x032A4A10 LDUR X11, [X10 - 0x8]
	0x032A4A14 CMP X11, X25
	0x032A4A18 B.EQ 0x32A4A3C
	0x032A4A1C SUBS X9, X9, 0x1
	0x032A4A20 ADD X10, X10, 0x10
	0x032A4A24 B.NE 0x32A4A10
	0x032A4A28 MOV X0, X24
	0x032A4A2C MOV X1, X25
	0x032A4A30 MOV W2, W31
	0x032A4A34 BL 0x1C5C788
	0x032A4A38 B 0x32A4A48
	0x032A4A3C LDRSW X9, [X10]
	0x032A4A40 ADD X8, X8, X9, 0x4, LSL
	0x032A4A44 ADD X0, X8, 0x138
	0x032A4A48 LDP X8, X3, [X0]
	0x032A4A4C MOV X0, X24
	0x032A4A50 MOV X1, X22
	0x032A4A54 MOV X2, X23
	0x032A4A58 BLR X8
	0x032A4A5C MOV X1, X0
	0x032A4A60 MOV X0, X19
	0x032A4A64 MOV X2, X20
	0x032A4A68 BL 0x32A3EC8
	0x032A4A6C LDR X0, [X19 + 0x10]
	0x032A4A70 CBZ X0, 0x32A4ABC
	0x032A4A74 CMP W26, 0x64
	0x032A4A78 B.EQ 0x32A4B04
	0x032A4A7C LDR X1, [X27]
	0x032A4A80 BL 0x1C16E00
	0x032A4A84 CBZ X0, 0x32A4A9C
	0x032A4A88 LDR X8, [X19 + 0x10]
	0x032A4A8C ADD W26, W26, 0x1
	0x032A4A90 CMP X21, X8
	0x032A4A94 MOV X21, X8
	0x032A4A98 B.NE 0x32A49C8
	0x032A4A9C LDR W8, [X19 + 0x50]
	0x032A4AA0 MOV X0, X20
	0x032A4AA4 MOV X1, X19
	0x032A4AA8 AND W8, W8, 0xFFFFFFFE
	0x032A4AAC STR W8, [X19 + 0x50]
	0x032A4AB0 BL 0x32A48A0
	0x032A4AB4 MOVZ W0, 0x1
	0x032A4AB8 B 0x32A4AD0
	0x032A4ABC MOV X0, X19
	0x032A4AC0 MOV X1, X21
	0x032A4AC4 MOV X2, X20
	0x032A4AC8 BL 0x32A3EC8
	0x032A4ACC MOV W0, W31
	0x032A4AD0 LDP X20, X19, [X31 + 0x40]
	0x032A4AD4 LDP X22, X21, [X31 + 0x30]
	0x032A4AD8 LDP X24, X23, [X31 + 0x20]
	0x032A4ADC LDP X26, X25, [X31 + 0x10]
	0x032A4AE0 LDP X30, X27, [X31], #0x50
	0x032A4AE4 RET
	0x032A4AE8 MOV X0, X21
	0x032A4AEC MOV X1, X25
	0x032A4AF0 BL 0x1C171E0
	0x032A4AF4 BL 0x1C16F20
	0x032A4AF8 MOV X0, X21
	0x032A4AFC MOV X1, X24
	0x032A4B00 BL 0x1C171E0
	0x032A4B04 ADRP X0, 0xE80000
	0x032A4B08 LDR X0, [X0 + 0xD60]
	0x032A4B0C BL 0x1C16D08
	0x032A4B10 MOV X1, X31
	0x032A4B14 BL 0x33BDD84
	0x032A4B18 MOV X20, X0
	0x032A4B1C ADRP X0, 0xE79000
	0x032A4B20 LDR X0, [X0 + 0x2E0]
	0x032A4B24 BL 0x1C16D08
	0x032A4B28 BL 0x1C16F10
	0x032A4B2C MOV X19, X0
	0x032A4B30 MOV X1, X20
	0x032A4B34 MOV X2, X31
	0x032A4B38 BL 0x338C8D8
	0x032A4B3C MOVZ W8, 0x150C
	0x032A4B40 MOVK W8, 0x80130000
	0x032A4B44 STR W8, [X19 + 0x60]
	0x032A4B48 ADRP X0, 0xE80000
	0x032A4B4C LDR X0, [X0 + 0xD68]
	0x032A4B50 BL 0x1C16D08
	0x032A4B54 MOV X1, X0
	0x032A4B58 MOV X0, X19
	0x032A4B5C BL 0x1C16DEC
	0x032A4B60 BL 0x1C16F20
	0x032A4B64 B 0x32A4B84
	0x032A4B68 B 0x32A4B84
	0x032A4B6C B 0x32A4B84
	0x032A4B70 B 0x32A4B84
	0x032A4B74 B 0x32A4B84
	0x032A4B78 B 0x32A4B84
	0x032A4B7C B 0x32A4B84
	0x032A4B80 B 0x32A4B84
	0x032A4B84 MOV X19, X0
	0x032A4B88 CMP W1, 0x1
	0x032A4B8C B.NE 0x32A4BE8
	0x032A4B90 MOV X0, X19

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x1139000
	009 Move W8, [X24+1921]
	010 Move W20, W4
	011 Move X23, X3
	012 Move X21, X2
	013 Move X19, X1
	014 Move X22, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xE81000
	020 Move X0, [X0+3320]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X24+1921], W8
	024 Compare X19, 0
	025 JumpIfEqual {109}
	026 Move X8, [X19+24]
	027 Move X0, X22
	028 Move [X23], X8
	029 Move X1, [X19+16]
	030 Call ObjectManager.FindObjectHolder, X0, X1
	031 Move [X21], X0
	032 Compare X0, 0
	033 JumpIfEqual {109}
	034 Move W8, [X0+80]
	035 And W31, W8, 6
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {47}
	041 And W10, W8, 0x4000
	042 Or W9, W9, W10
	043 Move TEMP, X9
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {61}
	047 Move X9, [X0+16]
	048 Compare X9, 0
	049 JumpIfEqual {61}
	050 Move X11, 0xE81000
	051 Move X11, [X11+3320]
	052 Move X10, [X9]
	053 Move X9, [X11]
	054 Move W12, [X10+304]
	055 Move W11, [X9+304]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X10, [X10+200]
	058 Add X10, X10, X11
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move TEMP, X8
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfEqual {74}
	065 Move TEMP, X8
	066 And TEMP, TEMP, 4
	067 Compare TEMP, 4
	068 JumpIfNotEqual {82}
	069 Call ObjectHolder.get_CanSurrogatedObjectValueChange, X0
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfNotEqual {79}
	074 Move TEMP, X20
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfEqual {110}
	078 Move W8, W31
	079 Move X0, [X21]
	080 Compare X0, 0
	081 JumpIfEqual {109}
	082 Move X9, [X0+16]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 NotImplemented "Instruction CSET not yet implemented."
	085 Compare X9, 0
	086 JumpIfNotEqual {91}
	087 Move TEMP, X20
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfEqual {142}
	091 Move X20, [X31+48]
	092 Move X19, [X31+56]
	093 Move X22, [X31+32]
	094 Move X21, [X31+40]
	095 Move X24, [X31+16]
	096 Move X23, [X31+24]
	097 Move W0, W8
	098 Move X30, [X31+64]
	099 Return X0
	100 Move X0, X22
	101 Call ObjectManager.get_SpecialFixupObjects, X0
	102 Compare X0, 0
	103 JumpIfEqual {109}
	104 Move X8, [X0]
	105 Move X1, [X21]
	106 Move X9, [X8+376]
	107 Move X2, [X8+384]
	108 NotImplemented "Instruction BLR not yet implemented."
	109 Call 0x1C17F20
	110 Move X0, [X21]
	111 Compare X0, 0
	112 JumpIfNotEqual {142}
	113 Move X0, 0xE50000
	114 Move X0, [X0+2512]
	115 Call 0x1C17D08
	116 Move W1, 1
	117 Call 0x1C17D6C
	118 Move X20, X0
	119 Move X0, X19
	120 Call 0x19913C0
	121 Move X8, [X19+16]
	122 Move X0, 0xE52000
	123 Move [X31+8], X8
	124 Move X0, [X0+2656]
	125 Call 0x1C17D08
	126 Add X1, X31, 8
	127 Call 0x1C17E04
	128 Move X19, X0
	129 Move X0, X20
	130 Call 0x19913C0
	131 Move X0, X20
	132 Move X1, X19
	133 Call 0x19990B4
	134 Move X0, X20
	135 Move X1, X31
	136 Move X2, X19
	137 Call 0x1994444
	138 Move X0, 0xE81000
	139 Move X0, [X0+3328]
	140 Call 0x1C17D08
	141 Move X1, X20
	142 Move W20, [X0+80]
	143 Move X0, 0xE50000
	144 Move X0, [X0+2512]
	145 Call 0x1C17D08
	146 Move W1, 1
	147 Call 0x1C17D6C
	148 Move X8, [X19+16]
	149 Move X19, X0
	150 Move TEMP, X20
	151 And TEMP, TEMP, 1
	152 Compare TEMP, 1
	153 JumpIfEqual {172}
	154 Move [X31+8], X8
	155 Move X0, 0xE52000
	156 Move X0, [X0+2656]
	157 Call 0x1C17D08
	158 Add X1, X31, 8
	159 Call 0x1C17E04
	160 Move X20, X0
	161 Move X0, X19
	162 Call 0x19913C0
	163 Move X0, X19
	164 Move X1, X20
	165 Call 0x19990B4
	166 Move X0, X19
	167 Move X1, X31
	168 Move X2, X20
	169 Call 0x1994444
	170 Move X0, 0xE81000
	171 Move X0, [X0+3336]
	172 Move [X31+8], X8
	173 Move X0, 0xE52000
	174 Move X0, [X0+2656]
	175 Call 0x1C17D08
	176 Add X1, X31, 8
	177 Call 0x1C17E04
	178 Move X20, X0
	179 Move X0, X19
	180 Call 0x19913C0
	181 Move X0, X19
	182 Move X1, X20
	183 Call 0x19990B4
	184 Move X0, X19
	185 Move X1, X31
	186 Move X2, X20
	187 Call 0x1994444
	188 Move X0, 0xE81000
	189 Move X0, [X0+3344]
	190 Call 0x1C17D08
	191 Move X1, X19
	192 Move X2, X31
	193 Call Environment.GetResourceString, X0, X1
	194 Move X19, X0
	195 Move X0, 0xE7A000
	196 Move X0, [X0+736]
	197 Call 0x1C17D08
	198 Call 0x1C17F10
	199 Move X1, X19
	200 Move X20, X0
	201 Call SerializationException..ctor, X0, X1
	202 Move X0, 0xE81000
	203 Move X0, [X0+3352]
	204 Call 0x1C17D08
	205 Move X1, X0
	206 Move X0, X20
	207 Call 0x1C17DEC

Method: System.Void FixupSpecialObject(System.Runtime.Serialization.ObjectHolder holder)

Disassembly:
	0x032A4BE4 BL 0x3EB1AE0
	0x032A4BE8 MOV X0, X19
	0x032A4BEC BL 0x1D2C690
	0x032A4BF0 BL 0x1990590
	0x032A4BF4 LDR W8, [X0 + 0x50]
	0x032A4BF8 BFM W8, W1, 0x0, 0x0
	0x032A4BFC STR W8, [X0 + 0x50]
	0x032A4C00 RET
	0x032A4C04 SUB X31, X31, 0x80
	0x032A4C08 STP X29, X30, [X31 + 0x20]
	0x032A4C0C STP X28, X27, [X31 + 0x30]
	0x032A4C10 STP X26, X25, [X31 + 0x40]
	0x032A4C14 STP X24, X23, [X31 + 0x50]
	0x032A4C18 STP X22, X21, [X31 + 0x60]
	0x032A4C1C STP X20, X19, [X31 + 0x70]
	0x032A4C20 ADRP X22, 0x1138000
	0x032A4C24 LDRB W8, [X22 + 0x785]
	0x032A4C28 MOV W21, W2
	0x032A4C2C MOV X19, X1
	0x032A4C30 MOV X20, X0
	0x032A4C34 TBNZ X8, 0x0, 0x32A4CA0
	0x032A4C38 ADRP X0, 0xE78000
	0x032A4C3C LDR X0, [X0 + 0x3A8]
	0x032A4C40 BL 0x1C16CF4
	0x032A4C44 ADRP X0, 0xE80000
	0x032A4C48 LDR X0, [X0 + 0xB70]
	0x032A4C4C BL 0x1C16CF4
	0x032A4C50 ADRP X0, 0xE50000
	0x032A4C54 LDR X0, [X0 + 0xE58]
	0x032A4C58 BL 0x1C16CF4
	0x032A4C5C ADRP X0, 0xE7F000
	0x032A4C60 LDR X0, [X0 + 0xE00]
	0x032A4C64 BL 0x1C16CF4
	0x032A4C68 ADRP X0, 0xE80000
	0x032A4C6C LDR X0, [X0 + 0xD70]
	0x032A4C70 BL 0x1C16CF4
	0x032A4C74 ADRP X0, 0xE4F000
	0x032A4C78 LDR X0, [X0 + 0xEF0]
	0x032A4C7C BL 0x1C16CF4
	0x032A4C80 ADRP X0, 0xE51000
	0x032A4C84 LDR X0, [X0 + 0x278]
	0x032A4C88 BL 0x1C16CF4
	0x032A4C8C ADRP X0, 0xE4F000
	0x032A4C90 LDR X0, [X0 + 0x6C0]
	0x032A4C94 BL 0x1C16CF4
	0x032A4C98 MOVZ W8, 0x1
	0x032A4C9C STRB W8, [X22 + 0x785]
	0x032A4CA0 CBZ X19, 0x32A50B0
	0x032A4CA4 LDR X26, [X19 + 0x38]
	0x032A4CA8 STP X31, X31, [X31 + 0x10]
	0x032A4CAC LDR X8, [X19 + 0x10]
	0x032A4CB0 CBZ X8, 0x32A50D4
	0x032A4CB4 CBZ X26, 0x32A5090
	0x032A4CB8 LDRB W8, [X19 + 0x50]
	0x032A4CBC ANDS W31, W8, 0x6
	0x032A4CC0 B.EQ 0x32A4DDC
	0x032A4CC4 LDR X22, [X19 + 0x28]
	0x032A4CC8 CBZ X22, 0x32A51CC
	0x032A4CCC LDR W8, [X26 + 0x18]
	0x032A4CD0 CMP W8, 0x1
	0x032A4CD4 B.LT 0x32A5074
	0x032A4CD8 MOV W27, W31
	0x032A4CDC MOVZ W25, 0x4
	0x032A4CE0 LDR X8, [X26 + 0x10]
	0x032A4CE4 CBZ X8, 0x32A50B0
	0x032A4CE8 LDR W9, [X8 + 0x18]
	0x032A4CEC SUB X29, X25, 0x4
	0x032A4CF0 CMP X29, X9
	0x032A4CF4 B.CS 0x32A50B4
	0x032A4CF8 LDR X1, [X8, X25, LSL #3]
	0x032A4CFC CBZ X1, 0x32A4DC0
	0x032A4D00 AND W4, W21, 0x1
	0x032A4D04 ADD X2, X31, 0x10
	0x032A4D08 ADD X3, X31, 0x18
	0x032A4D0C MOV X0, X20
	0x032A4D10 BL 0x32A38E4
	0x032A4D14 TBZ X0, 0x0, 0x32A4DC0
	0x032A4D18 LDR X28, [X31 + 0x10]
	0x032A4D1C CBZ X28, 0x32A50B0
	0x032A4D20 LDR X23, [X28 + 0x10]
	0x032A4D24 CBZ X23, 0x32A50B0
	0x032A4D28 LDR X24, [X31 + 0x18]
	0x032A4D2C MOV X0, X23
	0x032A4D30 MOV X1, X31
	0x032A4D34 BL 0x33BE520
	0x032A4D38 MOV X3, X0
	0x032A4D3C CBZ X24, 0x32A4D58
	0x032A4D40 ADRP X8, 0xE51000
	0x032A4D44 LDR X8, [X8 + 0x278]
	0x032A4D48 LDR X1, [X8]
	0x032A4D4C LDR X8, [X24]
	0x032A4D50 CMP X8, X1
	0x032A4D54 B.NE 0x32A50C0
	0x032A4D58 MOV X0, X22
	0x032A4D5C MOV X1, X24
	0x032A4D60 MOV X2, X23
	0x032A4D64 MOV X4, X31
	0x032A4D68 BL 0x32A9354
	0x032A4D6C LDR X8, [X26 + 0x10]
	0x032A4D70 CBZ X8, 0x32A50B0
	0x032A4D74 LDR W9, [X8 + 0x18]
	0x032A4D78 CMP X29, X9
	0x032A4D7C B.CS 0x32A50B4
	0x032A4D80 ADD W27, W27, 0x1
	0x032A4D84 STR X31, [X8, X25, LSL #3]
	0x032A4D88 TBNZ X21, 0x0, 0x32A4DC0
	0x032A4D8C LDR W8, [X19 + 0x20]
	0x032A4D90 LDRB W9, [X19 + 0x50]
	0x032A4D94 SUB W8, W8, 0x1
	0x032A4D98 STR W8, [X19 + 0x20]
	0x032A4D9C TBZ X9, 0x3, 0x32A4DB0
	0x032A4DA0 MOVN W1, 0x0
	0x032A4DA4 MOV X0, X19
	0x032A4DA8 MOV X2, X20
	0x032A4DAC BL 0x32A6E64
	0x032A4DB0 LDR X0, [X28 + 0x40]
	0x032A4DB4 CBZ X0, 0x32A50B0
	0x032A4DB8 LDR X1, [X19 + 0x18]
	0x032A4DBC BL 0x32A6EC4
	0x032A4DC0 LDRSW X8, [X26 + 0x18]
	0x032A4DC4 SUB X9, X25, 0x3
	0x032A4DC8 ADD X25, X25, 0x1
	0x032A4DCC CMP X9, X8
	0x032A4DD0 B.LT 0x32A4CE0
	0x032A4DD4 MOV W25, W27
	0x032A4DD8 B 0x32A5078
	0x032A4DDC LDR W8, [X26 + 0x18]
	0x032A4DE0 CMP W8, 0x1
	0x032A4DE4 B.LT 0x32A5074
	0x032A4DE8 MOV W25, W31
	0x032A4DEC MOVZ W28, 0x4
	0x032A4DF0 LDR X8, [X26 + 0x10]
	0x032A4DF4 CBZ X8, 0x32A50B0
	0x032A4DF8 LDR W9, [X8 + 0x18]
	0x032A4DFC SUB X27, X28, 0x4
	0x032A4E00 CMP X27, X9
	0x032A4E04 B.CS 0x32A50B4
	0x032A4E08 LDR X22, [X8, X28, LSL #3]
	0x032A4E0C CBZ X22, 0x32A505C
	0x032A4E10 AND W4, W21, 0x1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x1139000
	010 Move W8, [X21+1922]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xE81000
	018 Move X0, [X0+3232]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1922], W8
	022 Compare X19, 0
	023 JumpIfEqual {125}
	024 Move W8, [X19+80]
	025 Move TEMP, X8
	026 And TEMP, TEMP, 4
	027 Compare TEMP, 4
	028 JumpIfEqual {34}
	029 Move X1, [X19+16]
	030 Move X2, [X19+40]
	031 Move X3, [X20+72]
	032 Move X4, [X20+80]
	033 Call ObjectManager.CompleteISerializableObject, X0, X1, X2, X3
	034 Move X21, [X19+48]
	035 Compare X21, 0
	036 JumpIfEqual {125}
	037 Move X10, 0xE81000
	038 Move X22, [X19+16]
	039 Move X23, [X19+40]
	040 Move X8, [X21]
	041 Move X25, [X20+72]
	042 Move X24, [X20+80]
	043 Move X10, [X10+3232]
	044 NotImplemented "Instruction LDRH not yet implemented."
	045 Move X1, [X10]
	046 Compare X9, 0
	047 JumpIfEqual {54}
	048 Move X10, [X8+176]
	049 Add X10, X10, 8
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Subtract X9, X9, 1
	053 Add X10, X10, 16
	054 Move W2, 1
	055 Move X0, X21
	056 Call 0x1C5D788
	057 Move W9, [X10]
	058 Add W9, W9, 1
	059 Add X8, X8, W9
	060 Add X0, X8, 312
	061 Move X8, [X0]
	062 Move X6, [X0+8]
	063 Move X0, X21
	064 Move X1, X22
	065 Move X2, X23
	066 Move X3, X25
	067 Move X4, X24
	068 Move X5, X31
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Compare X0, 0
	071 JumpIfEqual {85}
	072 Move X22, X0
	073 Move X0, X19
	074 Call ObjectHolder.get_CanSurrogatedObjectValueChange, X0
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfEqual {81}
	079 Move X8, [X19+16]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X0, X19
	082 Move X1, X22
	083 Move X2, X20
	084 Call ObjectHolder.SetObjectValue, X0, X1, X2
	085 Move X0, X19
	086 Move [X19+48], X31
	087 Call ObjectHolder.SetFlags, X0
	088 Move W8, [X19+80]
	089 Move [X19+40], X31
	090 Or W9, W8, 0x4000
	091 Move [X19+80], W9
	092 Move TEMP, X8
	093 And TEMP, TEMP, 8
	094 Compare TEMP, 8
	095 JumpIfNotEqual {113}
	096 Move X3, [X19+16]
	097 Move TEMP, X8
	098 And TEMP, TEMP, 0x8000
	099 Compare TEMP, 0x8000
	100 JumpIfEqual {109}
	101 Compare X3, 0
	102 JumpIfEqual {113}
	103 Move X8, [X19+64]
	104 Compare X8, 0
	105 JumpIfEqual {109}
	106 Move W8, [X8+24]
	107 Compare W8, 0
	108 JumpIfNotEqual {113}
	109 Move X0, X20
	110 Move X1, X31
	111 Move X2, X19
	112 Call ObjectManager.DoValueTypeFixup, X0, X1, X2, X3
	113 Move X0, X20
	114 Move X1, X19
	115 Move X20, [X31+48]
	116 Move X19, [X31+56]
	117 Move X22, [X31+32]
	118 Move X21, [X31+40]
	119 Move X24, [X31+16]
	120 Move X23, [X31+24]
	121 Move X30, [X31+64]
	122 Move X25, [X31+72]
	123 Call ObjectManager.DoNewlyRegisteredObjectFixups, X0, X1
	124 Return 
	125 Call 0x1C17F20
	126 Move X0, 0xE52000
	127 Move X0, [X0+3144]
	128 Call 0x1C17D08
	129 Call 0x19913D0
	130 Move X0, X31
	131 Call CultureInfo.get_CurrentCulture
	132 Move X19, X0
	133 Move X0, 0xE81000
	134 Move X0, [X0+3360]
	135 Call 0x1C17D08
	136 Move X1, X31
	137 Call Environment.GetResourceString, X0
	138 Move X20, X0
	139 Move X0, X21
	140 Call 0x19913C0
	141 Move X0, X21
	142 Move X1, X31
	143 Call "il2cpp_vm_object_is_inst", X0
	144 Move X21, X0
	145 Call 0x19913C0
	146 Move X8, [X21]
	147 Move X0, X21
	148 Move X9, [X8+744]
	149 Move X1, [X8+752]
	150 NotImplemented "Instruction BLR not yet implemented."
	151 Move X2, X0
	152 Move X0, X19
	153 Move X1, X20
	154 Move X3, X31
	155 Call String.Format, X0, X1, X2
	156 Move X19, X0
	157 Move X0, 0xE7A000
	158 Move X0, [X0+736]
	159 Call 0x1C17D08
	160 Call 0x1C17F10
	161 Move X1, X19
	162 Move X20, X0
	163 Call SerializationException..ctor, X0, X1
	164 Move X0, 0xE81000
	165 Move X0, [X0+3368]
	166 Call 0x1C17D08
	167 Move X1, X0
	168 Move X0, X20
	169 Call 0x1C17DEC

Method: System.Boolean ResolveObjectReference(System.Runtime.Serialization.ObjectHolder holder)

Disassembly:
	0x032A5978 MOV X1, X25
	0x032A597C BL 0x32A48A0
	0x032A5980 STR X31, [X25 + 0x40]
	0x032A5984 LDP W9, W10, [X25 + 0x20]
	0x032A5988 LDR X8, [X20]
	0x032A598C ADD W9, W10, W9
	0x032A5990 CMP W9, 0x1
	0x032A5994 B.GE 0x32A5A44
	0x032A5998 LDP X9, X2, [X8 + 0x1F8]
	0x032A599C B 0x32A5A48
	0x032A59A0 ADRP X8, 0xE7F000
	0x032A59A4 LDR X8, [X8 + 0xCF0]
	0x032A59A8 LDR X0, [X8]
	0x032A59AC BL 0x1C16F10
	0x032A59B0 MOV X25, X0
	0x032A59B4 CBZ X21, 0x32A59E4
	0x032A59B8 LDR X8, [X21]
	0x032A59BC LDR X1, [X28]
	0x032A59C0 LDRB W10, [X8 + 0x130]
	0x032A59C4 LDRB W9, [X1 + 0x130]
	0x032A59C8 CMP W10, W9
	0x032A59CC B.CC 0x32A5A78
	0x032A59D0 LDR X8, [X8 + 0xC8]
	0x032A59D4 ADD X8, X8, X9, 0x3, LSL
	0x032A59D8 LDUR X8, [X8 - 0x8]
	0x032A59DC CMP X8, X1
	0x032A59E0 B.NE 0x32A5A78
	0x032A59E4 MOV X0, X25
	0x032A59E8 MOV X1, X19
	0x032A59EC MOV X2, X24
	0x032A59F0 MOV X3, X23
	0x032A59F4 MOV X4, X26
	0x032A59F8 MOV X5, X22
	0x032A59FC MOV X6, X21
	0x032A5A00 MOV X7, X27
	0x032A5A04 BL 0x32A5B7C
	0x032A5A08 MOV X0, X20
	0x032A5A0C MOV X1, X25
	0x032A5A10 BL 0x32A37EC
	0x032A5A14 CBZ X25, 0x32A5A74
	0x032A5A18 LDRB W8, [X25 + 0x50]
	0x032A5A1C ANDS W31, W8, 0x7
	0x032A5A20 B.EQ 0x32A5A40
	0x032A5A24 MOV X0, X20
	0x032A5A28 BL 0x32A365C
	0x032A5A2C CBZ X0, 0x32A5A74
	0x032A5A30 LDR X8, [X0]
	0x032A5A34 MOV X1, X25
	0x032A5A38 LDP X9, X2, [X8 + 0x178]
	0x032A5A3C BLR X9
	0x032A5A40 LDR X8, [X20]
	0x032A5A44 LDP X9, X2, [X8 + 0x1E8]
	0x032A5A48 MOV X0, X20
	0x032A5A4C MOV X1, X19
	0x032A5A50 BLR X9
	0x032A5A54 LDP X20, X19, [X31 + 0x60]
	0x032A5A58 LDP X22, X21, [X31 + 0x50]
	0x032A5A5C LDP X24, X23, [X31 + 0x40]
	0x032A5A60 LDP X26, X25, [X31 + 0x30]
	0x032A5A64 LDP X28, X27, [X31 + 0x20]
	0x032A5A68 LDP X29, X30, [X31 + 0x10]
	0x032A5A6C ADD X31, X31, 0x70
	0x032A5A70 RET
	0x032A5A74 BL 0x1C16F20
	0x032A5A78 MOV X0, X21
	0x032A5A7C BL 0x1C171E0
	0x032A5A80 ADRP X0, 0xE53000
	0x032A5A84 LDR X0, [X0 + 0x528]
	0x032A5A88 BL 0x1C16D08
	0x032A5A8C BL 0x1C16F10
	0x032A5A90 MOV X19, X0
	0x032A5A94 ADRP X0, 0xE59000
	0x032A5A98 LDR X0, [X0 + 0x8A8]
	0x032A5A9C BL 0x1C16D08
	0x032A5AA0 MOV X1, X0
	0x032A5AA4 MOV X0, X19
	0x032A5AA8 MOV X2, X31
	0x032A5AAC BL 0x330E100
	0x032A5AB0 ADRP X0, 0xE7F000
	0x032A5AB4 LDR X0, [X0 + 0xDD8]
	0x032A5AB8 BL 0x1C16D08
	0x032A5ABC MOV X1, X0
	0x032A5AC0 MOV X0, X19
	0x032A5AC4 BL 0x1C16DEC
	0x032A5AC8 ADRP X0, 0xE7F000
	0x032A5ACC LDR X0, [X0 + 0xDA8]
	0x032A5AD0 BL 0x1C16D08
	0x032A5AD4 MOV X1, X31
	0x032A5AD8 BL 0x33BDD84
	0x032A5ADC MOV X19, X0
	0x032A5AE0 ADRP X0, 0xE56000
	0x032A5AE4 LDR X0, [X0 + 0x760]
	0x032A5AE8 BL 0x1C16D08
	0x032A5AEC BL 0x1C16F10
	0x032A5AF0 MOV X20, X0
	0x032A5AF4 ADRP X0, 0xE7F000
	0x032A5AF8 LDR X0, [X0 + 0xDB0]
	0x032A5AFC BL 0x1C16D08
	0x032A5B00 MOV X1, X0
	0x032A5B04 MOV X0, X20
	0x032A5B08 MOV X2, X19
	0x032A5B0C MOV X3, X31
	0x032A5B10 BL 0x3311888
	0x032A5B14 B 0x32A5B64
	0x032A5B18 ADRP X0, 0xE7F000
	0x032A5B1C LDR X0, [X0 + 0xC48]
	0x032A5B20 B 0x32A5B38
	0x032A5B24 MOV X0, X19
	0x032A5B28 MOV X1, X28
	0x032A5B2C BL 0x1C171E0
	0x032A5B30 ADRP X0, 0xE7F000
	0x032A5B34 LDR X0, [X0 + 0xDE0]
	0x032A5B38 BL 0x1C16D08
	0x032A5B3C MOV X1, X31
	0x032A5B40 BL 0x33BDD84
	0x032A5B44 MOV X19, X0
	0x032A5B48 ADRP X0, 0xE78000
	0x032A5B4C LDR X0, [X0 + 0x2E0]
	0x032A5B50 BL 0x1C16D08
	0x032A5B54 BL 0x1C16F10
	0x032A5B58 MOV X1, X19
	0x032A5B5C MOV X20, X0
	0x032A5B60 BL 0x329F100
	0x032A5B64 ADRP X0, 0xE7F000
	0x032A5B68 LDR X0, [X0 + 0xDD8]
	0x032A5B6C BL 0x1C16D08
	0x032A5B70 MOV X1, X0
	0x032A5B74 MOV X0, X20
	0x032A5B78 BL 0x1C16DEC
	0x032A5B7C STP X30, X27, [X31 - 0x50]!
	0x032A5B80 STP X26, X25, [X31 + 0x10]
	0x032A5B84 STP X24, X23, [X31 + 0x20]
	0x032A5B88 STP X22, X21, [X31 + 0x30]
	0x032A5B8C STP X20, X19, [X31 + 0x40]
	0x032A5B90 ADRP X27, 0x1137000
	0x032A5B94 LDRB W8, [X27 + 0x792]
	0x032A5B98 MOV X19, X7
	0x032A5B9C MOV X20, X6
	0x032A5BA0 MOV X21, X5
	0x032A5BA4 MOV X25, X4
	0x032A5BA8 MOV X26, X3
	0x032A5BAC MOV X23, X2
	0x032A5BB0 MOV X24, X1
	0x032A5BB4 MOV X22, X0
	0x032A5BB8 TBNZ X8, 0x0, 0x32A5BDC
	0x032A5BBC ADRP X0, 0xE7F000
	0x032A5BC0 LDR X0, [X0 + 0xD38]
	0x032A5BC4 BL 0x1C16CF4
	0x032A5BC8 ADRP X0, 0xE7F000
	0x032A5BCC LDR X0, [X0 + 0xDC0]
	0x032A5BD0 BL 0x1C16CF4
	0x032A5BD4 MOVZ W8, 0x1
	0x032A5BD8 STRB W8, [X27 + 0x792]
	0x032A5BDC MOV X0, X22
	0x032A5BE0 MOV X1, X31
	0x032A5BE4 BL 0x33BDD8C
	0x032A5BE8 STP X24, X23, [X22 + 0x10]
	0x032A5BEC STP X31, X26, [X22 + 0x20]
	0x032A5BF0 STR W31, [X22 + 0x50]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X21, 0x1138000
	012 Move W8, [X21+1923]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xE80000
	020 Move X0, [X0+3392]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+1923], W8
	024 Compare X19, 0
	025 JumpIfEqual {139}
	026 Move X27, 0xE80000
	027 Move X21, [X19+16]
	028 Move X27, [X27+3392]
	029 Move W26, W31
	030 Compare X21, 0
	031 JumpIfEqual {112}
	032 Move X22, [X20+72]
	033 Move X23, [X20+80]
	034 Move X24, [X27]
	035 Move X0, X21
	036 Move X1, X24
	037 Call 0x1C17E00
	038 Compare X0, 0
	039 JumpIfEqual {113}
	040 Move X25, [X27]
	041 Move X0, X21
	042 Move X1, X25
	043 Call 0x1C17E00
	044 Move X24, X0
	045 Compare X0, 0
	046 JumpIfEqual {109}
	047 Move X8, [X24]
	048 NotImplemented "Instruction LDRH not yet implemented."
	049 Compare X9, 0
	050 JumpIfEqual {57}
	051 Move X10, [X8+176]
	052 Add X10, X10, 8
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Subtract X9, X9, 1
	056 Add X10, X10, 16
	057 Move X0, X24
	058 Move X1, X25
	059 Move W2, W31
	060 Call 0x1C5D788
	061 NotImplemented "Instruction LDRSW not yet implemented."
	062 Add X8, X8, X9
	063 Add X0, X8, 312
	064 Move X8, [X0]
	065 Move X3, [X0+8]
	066 Move X0, X24
	067 Move X1, X22
	068 Move X2, X23
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Move X1, X0
	071 Move X0, X19
	072 Move X2, X20
	073 Call ObjectHolder.SetObjectValue, X0, X1, X2
	074 Move X0, [X19+16]
	075 Compare X0, 0
	076 JumpIfEqual {93}
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X1, [X27]
	079 Call 0x1C17E00
	080 Compare X0, 0
	081 JumpIfEqual {86}
	082 Move X8, [X19+16]
	083 Add W26, W26, 1
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X21, X8
	086 Move W8, [X19+80]
	087 Move X0, X20
	088 Move X1, X19
	089 And W8, W8, 0xFFFFFFFE
	090 Move [X19+80], W8
	091 Call ObjectManager.DoNewlyRegisteredObjectFixups, X0, X1
	092 Move W0, 1
	093 Move X0, X19
	094 Move X1, X21
	095 Move X2, X20
	096 Call ObjectHolder.SetObjectValue, X0, X1, X2
	097 Move W0, W31
	098 Move X20, [X31+64]
	099 Move X19, [X31+72]
	100 Move X22, [X31+48]
	101 Move X21, [X31+56]
	102 Move X24, [X31+32]
	103 Move X23, [X31+40]
	104 Move X26, [X31+16]
	105 Move X25, [X31+24]
	106 Move X30, [X31+80]
	107 Move X27, [X31+88]
	108 Return X0
	109 Move X0, X21
	110 Move X1, X25
	111 Call 0x1C181E0
	112 Call 0x1C17F20
	113 Move X0, X21
	114 Move X1, X24
	115 Call 0x1C181E0
	116 Move X0, 0xE80000
	117 Move X0, [X0+3424]
	118 Call 0x1C17D08
	119 Move X1, X31
	120 Call Environment.GetResourceString, X0
	121 Move X20, X0
	122 Move X0, 0xE79000
	123 Move X0, [X0+736]
	124 Call 0x1C17D08
	125 Call 0x1C17F10
	126 Move X19, X0
	127 Move X1, X20
	128 Move X2, X31
	129 Call SystemException..ctor, X0, X1
	130 Move W8, 0x150C
	131 NotImplemented "Instruction MOVK not yet implemented."
	132 Move [X19+96], W8
	133 Move X0, 0xE80000
	134 Move X0, [X0+3432]
	135 Call 0x1C17D08
	136 Move X1, X0
	137 Move X0, X19
	138 Call 0x1C17DEC
	139 Call 0x1C17F20
	140 Move X19, X0
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move X0, X19
	143 Call 0x3EB2AD0
	144 Move X19, X0
	145 Move X0, 0xE5A000
	146 Move X0, [X0+2584]
	147 Call 0x1C17D08
	148 Move X8, [X19]
	149 Move X1, [X8]
	150 Call 0x1C18270
	151 Move TEMP, X0
	152 And TEMP, TEMP, 1
	153 Compare TEMP, 1
	154 JumpIfNotEqual {156}
	155 Call 0x3EB2AE0
	156 Move W0, 8
	157 Call 0x3EB2AF0
	158 Move X8, [X19]
	159 Move [X0], X8
	160 Move X1, 0xC10000
	161 Add X1, X1, 3672
	162 Move X2, X31
	163 Call 0x3EB2B00
	164 Move X19, X0
	165 Call 0x3EB2AE0
	166 Move X0, X19
	167 Call 0x1D2D690
	168 Call 0x1991590

Method: System.Boolean DoValueTypeFixup(System.Reflection.FieldInfo memberToFix, System.Runtime.Serialization.ObjectHolder holder, System.Object value)

Disassembly:
	0x032A5358 CMP X1, 0x0
	0x032A535C B.LE 0x32A539C
	0x032A5360 BL 0x32A36C8
	0x032A5364 CBZ X0, 0x32A5390
	0x032A5368 LDR W8, [X0 + 0x50]
	0x032A536C MOV X19, X0
	0x032A5370 TBNZ X8, 0x0, 0x32A5384
	0x032A5374 TBZ X8, 0x2, 0x32A538C
	0x032A5378 MOV X0, X19
	0x032A537C BL 0x32A3E20
	0x032A5380 TBZ X0, 0x0, 0x32A538C
	0x032A5384 MOV X0, X31
	0x032A5388 B 0x32A5390
	0x032A538C LDR X0, [X19 + 0x10]
	0x032A5390 LDP X20, X19, [X31 + 0x10]
	0x032A5394 LDR X30, [X31], #0x20
	0x032A5398 RET
	0x032A539C ADRP X0, 0xE7F000
	0x032A53A0 LDR X0, [X0 + 0xDA8]
	0x032A53A4 BL 0x1C16D08
	0x032A53A8 MOV X1, X31
	0x032A53AC BL 0x33BDD84
	0x032A53B0 MOV X19, X0
	0x032A53B4 ADRP X0, 0xE56000
	0x032A53B8 LDR X0, [X0 + 0x760]
	0x032A53BC BL 0x1C16D08
	0x032A53C0 BL 0x1C16F10
	0x032A53C4 MOV X20, X0
	0x032A53C8 ADRP X0, 0xE7F000
	0x032A53CC LDR X0, [X0 + 0xDB0]
	0x032A53D0 BL 0x1C16D08
	0x032A53D4 MOV X1, X0
	0x032A53D8 MOV X0, X20
	0x032A53DC MOV X2, X19
	0x032A53E0 MOV X3, X31
	0x032A53E4 BL 0x3311888
	0x032A53E8 ADRP X0, 0xE7F000
	0x032A53EC LDR X0, [X0 + 0xDB8]
	0x032A53F0 BL 0x1C16D08
	0x032A53F4 MOV X1, X0
	0x032A53F8 MOV X0, X20
	0x032A53FC BL 0x1C16DEC
	0x032A5400 SUB X31, X31, 0x60
	0x032A5404 STR X30, [X31 + 0x10]
	0x032A5408 STP X26, X25, [X31 + 0x20]
	0x032A540C STP X24, X23, [X31 + 0x30]
	0x032A5410 STP X22, X21, [X31 + 0x40]
	0x032A5414 STP X20, X19, [X31 + 0x50]
	0x032A5418 ADRP X25, 0x1137000
	0x032A541C ADRP X26, 0xE7F000
	0x032A5420 LDRB W8, [X25 + 0x786]
	0x032A5424 LDR X26, [X26 + 0xCF0]
	0x032A5428 MOV X19, X5
	0x032A542C MOV X21, X4
	0x032A5430 MOV X22, X3
	0x032A5434 MOV X23, X2
	0x032A5438 MOV X24, X1
	0x032A543C MOV X20, X0
	0x032A5440 TBNZ X8, 0x0, 0x32A5464
	0x032A5444 ADRP X0, 0xE77000
	0x032A5448 LDR X0, [X0 + 0x3A8]
	0x032A544C BL 0x1C16CF4
	0x032A5450 ADRP X0, 0xE7F000
	0x032A5454 LDR X0, [X0 + 0xCF0]
	0x032A5458 BL 0x1C16CF4
	0x032A545C MOVZ W8, 0x1
	0x032A5460 STRB W8, [X25 + 0x786]
	0x032A5464 LDR X0, [X26]
	0x032A5468 BL 0x1C16F10
	0x032A546C MOV X25, X0
	0x032A5470 CBZ X19, 0x32A54A8
	0x032A5474 ADRP X9, 0xE77000
	0x032A5478 LDR X9, [X9 + 0x3A8]
	0x032A547C LDR X8, [X19]
	0x032A5480 LDR X1, [X9]
	0x032A5484 LDRB W10, [X8 + 0x130]
	0x032A5488 LDRB W9, [X1 + 0x130]
	0x032A548C CMP W10, W9
	0x032A5490 B.CC 0x32A54F0
	0x032A5494 LDR X8, [X8 + 0xC8]
	0x032A5498 ADD X8, X8, X9, 0x3, LSL
	0x032A549C LDUR X8, [X8 - 0x8]
	0x032A54A0 CMP X8, X1
	0x032A54A4 B.NE 0x32A54F0
	0x032A54A8 MOV X0, X25
	0x032A54AC MOV X1, X24
	0x032A54B0 MOV X2, X23
	0x032A54B4 MOV X3, X22
	0x032A54B8 MOV X4, X31
	0x032A54BC MOV X5, X21
	0x032A54C0 MOV X6, X19
	0x032A54C4 MOV X7, X31
	0x032A54C8 BL 0x32A54F8
	0x032A54CC MOV X0, X20
	0x032A54D0 MOV X1, X25
	0x032A54D4 LDP X20, X19, [X31 + 0x50]
	0x032A54D8 LDP X22, X21, [X31 + 0x40]
	0x032A54DC LDP X24, X23, [X31 + 0x30]
	0x032A54E0 LDP X26, X25, [X31 + 0x20]
	0x032A54E4 LDR X30, [X31 + 0x10]
	0x032A54E8 ADD X31, X31, 0x60
	0x032A54EC B 0x32A37EC
	0x032A54F0 MOV X0, X19
	0x032A54F4 BL 0x1C171E0
	0x032A54F8 STP X30, X27, [X31 - 0x50]!
	0x032A54FC STP X26, X25, [X31 + 0x10]
	0x032A5500 STP X24, X23, [X31 + 0x20]
	0x032A5504 STP X22, X21, [X31 + 0x30]
	0x032A5508 STP X20, X19, [X31 + 0x40]
	0x032A550C ADRP X27, 0x1137000
	0x032A5510 LDRB W8, [X27 + 0x793]
	0x032A5514 MOV X20, X7
	0x032A5518 MOV X21, X6
	0x032A551C MOV X22, X5
	0x032A5520 MOV X23, X4
	0x032A5524 MOV X24, X3
	0x032A5528 MOV X25, X2
	0x032A552C MOV X26, X1
	0x032A5530 MOV X19, X0
	0x032A5534 TBNZ X8, 0x0, 0x32A554C
	0x032A5538 ADRP X0, 0xE7F000
	0x032A553C LDR X0, [X0 + 0xDC0]
	0x032A5540 BL 0x1C16CF4
	0x032A5544 MOVZ W8, 0x1
	0x032A5548 STRB W8, [X27 + 0x793]
	0x032A554C MOV X0, X19
	0x032A5550 MOV X1, X31
	0x032A5554 BL 0x33BDD8C
	0x032A5558 STP X26, X25, [X19 + 0x10]
	0x032A555C STP X31, X24, [X19 + 0x20]
	0x032A5560 STP X31, X31, [X19 + 0x40]
	0x032A5564 STR W31, [X19 + 0x50]
	0x032A5568 STR X23, [X19 + 0x30]
	0x032A556C STRB W31, [X19 + 0x54]
	0x032A5570 CBZ X22, 0x32A55A8
	0x032A5574 CBZ X20, 0x32A55A8
	0x032A5578 ADRP X8, 0xE7F000
	0x032A557C LDR X8, [X8 + 0xDC0]
	0x032A5580 LDR X0, [X8]
	0x032A5584 BL 0x1C16F10
	0x032A5588 MOV X1, X22
	0x032A558C MOV X2, X21
	0x032A5590 MOV X3, X20
	0x032A5594 MOV X23, X0
	0x032A5598 BL 0x32A05CC
	0x032A559C STR X23, [X19 + 0x58]
	0x032A55A0 CBNZ X23, 0x32A55B0
	0x032A55A4 B 0x32A55BC
	0x032A55A8 LDR X23, [X19 + 0x58]
	0x032A55AC CBZ X23, 0x32A55BC
	0x032A55B0 LDR W8, [X19 + 0x50]
	0x032A55B4 ORR W8, W8, 0x8
	0x032A55B8 STR W8, [X19 + 0x50]
	0x032A55BC LDP X20, X19, [X31 + 0x40]
	0x032A55C0 LDP X22, X21, [X31 + 0x30]
	0x032A55C4 LDP X24, X23, [X31 + 0x20]
	0x032A55C8 LDP X26, X25, [X31 + 0x10]
	0x032A55CC LDP X30, X27, [X31], #0x50
	0x032A55D0 RET
	0x032A55D4 SUB X31, X31, 0x70
	0x032A55D8 STP X29, X30, [X31 + 0x10]
	0x032A55DC STP X28, X27, [X31 + 0x20]
	0x032A55E0 STP X26, X25, [X31 + 0x30]
	0x032A55E4 STP X24, X23, [X31 + 0x40]
	0x032A55E8 STP X22, X21, [X31 + 0x50]
	0x032A55EC STP X20, X19, [X31 + 0x60]
	0x032A55F0 ADRP X26, 0x1137000
	0x032A55F4 LDRB W8, [X26 + 0x787]
	0x032A55F8 MOV X25, X6
	0x032A55FC MOV X21, X5
	0x032A5600 MOV X22, X4
	0x032A5604 MOV X23, X3
	0x032A5608 MOV X24, X2
	0x032A560C MOV X19, X1
	0x032A5610 MOV X20, X0
	0x032A5614 TBNZ X8, 0x0, 0x32A5698
	0x032A5618 ADRP X0, 0xE7F000
	0x032A561C LDR X0, [X0 + 0xDC8]
	0x032A5620 BL 0x1C16CF4
	0x032A5624 ADRP X0, 0xE77000
	0x032A5628 LDR X0, [X0 + 0x3A8]
	0x032A562C BL 0x1C16CF4
	0x032A5630 ADRP X0, 0xE7F000
	0x032A5634 LDR X0, [X0 + 0xDD0]
	0x032A5638 BL 0x1C16CF4
	0x032A563C ADRP X0, 0xE7F000
	0x032A5640 LDR X0, [X0 + 0x9E0]
	0x032A5644 BL 0x1C16CF4
	0x032A5648 ADRP X0, 0xE4F000
	0x032A564C LDR X0, [X0 + 0xE58]
	0x032A5650 BL 0x1C16CF4
	0x032A5654 ADRP X0, 0xE7E000
	0x032A5658 LDR X0, [X0 + 0xE00]
	0x032A565C BL 0x1C16CF4
	0x032A5660 ADRP X0, 0xE7F000
	0x032A5664 LDR X0, [X0 + 0xCF0]
	0x032A5668 BL 0x1C16CF4
	0x032A566C ADRP X0, 0xE7F000
	0x032A5670 LDR X0, [X0 + 0xBB0]
	0x032A5674 BL 0x1C16CF4
	0x032A5678 ADRP X0, 0xE7F000
	0x032A567C LDR X0, [X0 + 0xBB8]
	0x032A5680 BL 0x1C16CF4
	0x032A5684 ADRP X0, 0xE4E000
	0x032A5688 LDR X0, [X0 + 0x6C0]
	0x032A568C BL 0x1C16CF4
	0x032A5690 MOVZ W8, 0x1
	0x032A5694 STRB W8, [X26 + 0x787]
	0x032A5698 STR X31, [X31 + 0x8]
	0x032A569C CBZ X19, 0x32A5A80
	0x032A56A0 CMP X24, 0x0
	0x032A56A4 B.LE 0x32A5AC8
	0x032A56A8 MOV X0, X21
	0x032A56AC MOV X1, X31
	0x032A56B0 MOV X2, X31
	0x032A56B4 BL 0x32BECC8
	0x032A56B8 TBZ X0, 0x0, 0x32A5708
	0x032A56BC CBZ X21, 0x32A5B18
	0x032A56C0 ADRP X9, 0xE7F000
	0x032A56C4 LDR X9, [X9 + 0xBB0]
	0x032A56C8 LDR X8, [X21]
	0x032A56CC LDR X9, [X9]
	0x032A56D0 LDRB W11, [X8 + 0x130]
	0x032A56D4 LDRB W10, [X9 + 0x130]
	0x032A56D8 CMP W11, W10
	0x032A56DC B.CC 0x32A56F4
	0x032A56E0 LDR X11, [X8 + 0xC8]
	0x032A56E4 ADD X10, X11, X10, 0x3, LSL
	0x032A56E8 LDUR X10, [X10 - 0x8]
	0x032A56EC CMP X10, X9
	0x032A56F0 B.EQ 0x32A5708
	0x032A56F4 ADRP X9, 0xE7F000
	0x032A56F8 LDR X9, [X9 + 0xBB8]
	0x032A56FC LDR X9, [X9]
	0x032A5700 CMP X8, X9
	0x032A5704 B.NE 0x32A5B18
	0x032A5708 LDR X8, [X20 + 0x40]
	0x032A570C CBZ X8, 0x32A5774
	0x032A5710 MOV X0, X19
	0x032A5714 MOV X1, X31
	0x032A5718 BL 0x33BE520
	0x032A571C LDR X26, [X20 + 0x40]
	0x032A5720 CBZ X26, 0x32A5A74
	0x032A5724 ADRP X10, 0xE7F000
	0x032A5728 LDR X8, [X26]
	0x032A572C LDR X10, [X10 + 0x9E0]
	0x032A5730 LDP X29, X28, [X20 + 0x48]
	0x032A5734 MOV X27, X0
	0x032A5738 LDRH W9, [X8 + 0x12E]
	0x032A573C LDR X1, [X10]
	0x032A5740 CBZ X9, 0x32A5764
	0x032A5744 LDR X10, [X8 + 0xB0]
	0x032A5748 ADD X10, X10, 0x8
	0x032A574C LDUR X11, [X10 - 0x8]
	0x032A5750 CMP X11, X1
	0x032A5754 B.EQ 0x32A577C
	0x032A5758 SUBS X9, X9, 0x1
	0x032A575C ADD X10, X10, 0x10
	0x032A5760 B.NE 0x32A574C
	0x032A5764 MOV X0, X26
	0x032A5768 MOV W2, W31
	0x032A576C BL 0x1C5C788
	0x032A5770 B 0x32A5788
	0x032A5774 MOV X26, X31
	0x032A5778 B 0x32A57A8
	0x032A577C LDRSW X9, [X10]
	0x032A5780 ADD X8, X8, X9, 0x4, LSL
	0x032A5784 ADD X0, X8, 0x138
	0x032A5788 LDP X8, X5, [X0]
	0x032A578C ADD X4, X31, 0x8
	0x032A5790 MOV X0, X26
	0x032A5794 MOV X1, X27
	0x032A5798 MOV X2, X29
	0x032A579C MOV X3, X28
	0x032A57A0 BLR X8
	0x032A57A4 MOV X26, X0
	0x032A57A8 ADRP X29, 0xE7F000
	0x032A57AC LDR X29, [X29 + 0xDD0]
	0x032A57B0 MOV X0, X19
	0x032A57B4 LDR X1, [X29]
	0x032A57B8 BL 0x1C16E00
	0x032A57BC CBZ X0, 0x32A585C
	0x032A57C0 LDR X28, [X29]
	0x032A57C4 MOV X0, X19
	0x032A57C8 MOV X1, X28
	0x032A57CC BL 0x1C16E00
	0x032A57D0 CBZ X0, 0x32A5B24
	0x032A57D4 ADRP X8, 0xE7F000
	0x032A57D8 LDR X8, [X8 + 0xDC8]
	0x032A57DC MOV X27, X0
	0x032A57E0 LDR X0, [X8]
	0x032A57E4 BL 0x1C16F10
	0x032A57E8 LDR X8, [X27]
	0x032A57EC LDR X1, [X29]
	0x032A57F0 MOV X28, X0
	0x032A57F4 LDRH W9, [X8 + 0x12E]
	0x032A57F8 CBZ X9, 0x32A581C
	0x032A57FC LDR X10, [X8 + 0xB0]
	0x032A5800 ADD X10, X10, 0x8
	0x032A5804 LDUR X11, [X10 - 0x8]
	0x032A5808 CMP X11, X1
	0x032A580C B.EQ 0x32A582C
	0x032A5810 SUBS X9, X9, 0x1
	0x032A5814 ADD X10, X10, 0x10
	0x032A5818 B.NE 0x32A5804
	0x032A581C MOV X0, X27
	0x032A5820 MOV W2, W31
	0x032A5824 BL 0x1C5C788
	0x032A5828 B 0x32A5838
	0x032A582C LDRSW X9, [X10]
	0x032A5830 ADD X8, X8, X9, 0x4, LSL
	0x032A5834 ADD X0, X8, 0x138
	0x032A5838 LDR X2, [X0 + 0x8]
	0x032A583C MOV X0, X28
	0x032A5840 MOV X1, X27
	0x032A5844 BL 0x329F320
	0x032A5848 LDR X8, [X20]
	0x032A584C MOV X0, X20
	0x032A5850 MOV X1, X28
	0x032A5854 LDP X9, X2, [X8 + 0x1D8]
	0x032A5858 BLR X9
	0x032A585C CBZ X25, 0x32A5898
	0x032A5860 MOV X0, X25
	0x032A5864 MOV X1, X31
	0x032A5868 BL 0x33A01F0
	0x032A586C CBZ X0, 0x32A5898
	0x032A5870 ADRP X8, 0xE4F000
	0x032A5874 LDR X8, [X8 + 0xE58]
	0x032A5878 MOV X25, X0
	0x032A587C LDR X28, [X8]
	0x032A5880 MOV X1, X28
	0x032A5884 BL 0x1C16E00
	0x032A5888 MOV X27, X0
	0x032A588C CBNZ X0, 0x32A589C
	0x032A5890 MOV X0, X25
	0x032A5894 B 0x32A5B28
	0x032A5898 MOV X27, X31
	0x032A589C ADRP X28, 0xE77000

ISIL:
	001 Subtract X31, X31, 256
	002 Move [X31+160], X29
	003 Move [X31+168], X30
	004 Move [X31+176], X28
	005 Move [X31+184], X27
	006 Move [X31+192], X26
	007 Move [X31+200], X25
	008 Move [X31+208], X24
	009 Move [X31+216], X23
	010 Move [X31+224], X22
	011 Move [X31+232], X21
	012 Move [X31+240], X20
	013 Move [X31+248], X19
	014 Move X19, 0x1138000
	015 Move X28, 0xE80000
	016 Move W8, [X19+1924]
	017 Move X28, [X28+2944]
	018 Move X20, X3
	019 Move X22, X2
	020 Move X21, X1
	021 Move X25, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {49}
	026 Move X0, 0xE80000
	027 Move X0, [X0+2944]
	028 Call 0x1C17CF4
	029 Move X0, 0xE80000
	030 Move X0, [X0+2928]
	031 Call 0x1C17CF4
	032 Move X0, 0xE4F000
	033 Move X0, [X0+3824]
	034 Call 0x1C17CF4
	035 Move X0, 0xE80000
	036 Move X0, [X0+2992]
	037 Call 0x1C17CF4
	038 Move X0, 0xE80000
	039 Move X0, [X0+3000]
	040 Call 0x1C17CF4
	041 Move X0, 0xE4F000
	042 Move X0, [X0+1728]
	043 Call 0x1C17CF4
	044 Move X0, 0xE59000
	045 Move X0, [X0+3784]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X19+1924], W8
	049 Move X0, [X28]
	050 Move W1, 4
	051 Move [X31+96], X31
	052 Move [X31+104], X31
	053 Move [X31+112], X31
	054 Call 0x1C17D6C
	055 Compare X22, 0
	056 JumpIfEqual {384}
	057 Move W8, [X22+80]
	058 Move X23, X0
	059 Move [X31+16], X20
	060 Move [X31+24], X21
	061 Move TEMP, X8
	062 And TEMP, TEMP, 8
	063 Compare TEMP, 8
	064 JumpIfEqual {68}
	065 Move X21, [X22+16]
	066 Move W24, W31
	067 Move X20, X31
	068 Move X29, 0xE4F000
	069 Move X19, 0xE59000
	070 Move X29, [X29+1728]
	071 Move X19, [X19+3784]
	072 Move W24, W31
	073 Compare X23, 0
	074 JumpIfEqual {384}
	075 Move W8, [X23+24]
	076 Add W20, W24, 1
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X0, [X28]
	079 Move W1, W8
	080 ShiftRight W1, 31
	081 And W1, W1, 0x3FFFFFFF
	082 Call 0x1C17D6C
	083 Move W2, [X23+24]
	084 Move X21, X0
	085 Move X0, X23
	086 Move X1, X21
	087 Move X3, X31
	088 Call Array.Copy, X0, X1, X2
	089 Move X23, X21
	090 Move X26, [X22+88]
	091 Compare X26, 0
	092 JumpIfEqual {384}
	093 Move X0, [X26+24]
	094 Move X21, [X22+16]
	095 Move X1, X31
	096 Move X2, X31
	097 Call FieldInfo.op_Inequality, X0, X1
	098 Move TEMP, X0
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfNotEqual {186}
	102 Move X1, [X26+16]
	103 Move X27, [X26+24]
	104 Move X0, X25
	105 Call ObjectManager.FindObjectHolder, X0, X1
	106 Compare X0, 0
	107 JumpIfEqual {384}
	108 Move X8, [X0+16]
	109 Move X26, X0
	110 Compare X8, 0
	111 JumpIfEqual {67}
	112 Compare X27, 0
	113 JumpIfEqual {384}
	114 Move X8, [X27]
	115 Move X0, X27
	116 Move X9, [X8+600]
	117 Move X1, [X8+608]
	118 NotImplemented "Instruction BLR not yet implemented."
	119 Move X1, X31
	120 Call Nullable.GetUnderlyingType, X0
	121 Move X8, [X29]
	122 Move X22, X0
	123 Move W9, [X8+224]
	124 Compare W9, 0
	125 JumpIfNotEqual {128}
	126 Move X0, X8
	127 Call 0x1C17DFC
	128 Move X0, X22
	129 Move X1, X31
	130 Move X2, X31
	131 Call Type.op_Inequality, X0, X1
	132 Move TEMP, X0
	133 And TEMP, TEMP, 1
	134 Compare TEMP, 1
	135 JumpIfNotEqual {165}
	136 Move X8, [X27]
	137 Move X0, X27
	138 Move X9, [X8+600]
	139 Move X1, [X8+608]
	140 NotImplemented "Instruction BLR not yet implemented."
	141 Compare X0, 0
	142 JumpIfEqual {384}
	143 Move X8, [X0]
	144 Move X1, [X19]
	145 Move W2, 36
	146 Move X9, [X8+1656]
	147 Move X3, [X8+1664]
	148 NotImplemented "Instruction BLR not yet implemented."
	149 Compare X23, 0
	150 JumpIfEqual {384}
	151 Move X22, X0
	152 Compare X0, 0
	153 JumpIfEqual {160}
	154 Move X8, [X23]
	155 Move X0, X22
	156 Move X1, [X8+64]
	157 Call 0x1C17E00
	158 Compare X0, 0
	159 JumpIfEqual {386}
	160 Move W8, [X23+24]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Add X8, X23, W24
	163 Move [X8+32], X22
	164 Move W24, W20
	165 Compare X23, 0
	166 JumpIfEqual {384}
	167 Move X8, [X23]
	168 Move X0, X27
	169 Move X1, [X8+64]
	170 Call 0x1C17E00
	171 Compare X0, 0
	172 JumpIfEqual {386}
	173 Move W8, [X23+24]
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Add X8, X23, W24
	176 Move [X8+32], X27
	177 Move W8, [X26+80]
	178 Add W24, W24, 1
	179 Move X22, X26
	180 Move TEMP, X8
	181 And TEMP, TEMP, 8
	182 Compare TEMP, 8
	183 JumpIfEqual {73}
	184 Move X20, X31
	185 Move X22, X26
	186 Move X1, [X26+16]
	187 Move X0, X25
	188 Call ObjectManager.FindObjectHolder, X0, X1
	189 Compare X0, 0
	190 JumpIfEqual {384}
	191 Move X20, [X26+32]
	192 Move X22, X0
	193 Move X25, 0xE4F000
	194 Move X8, [X22+16]
	195 Move X25, [X25+3824]
	196 Compare X8, 0
	197 JumpIfEqual {208}
	198 Move X10, [X8]
	199 Move X9, [X25]
	200 Move W12, [X10+304]
	201 Move W11, [X9+304]
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Move X10, [X10+200]
	204 Add X10, X10, X11
	205 NotImplemented "Instruction LDUR not yet implemented."
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Move X21, X8
	208 Compare W24, 0
	209 JumpIfEqual {318}
	210 Move X0, [X28]
	211 Move W1, W24
	212 Move [X31+8], X20
	213 Call 0x1C17D6C
	214 Subtract W19, W24, 1
	215 Move X26, X0
	216 Compare X23, 0
	217 JumpIfEqual {384}
	218 Move X25, 0xE80000
	219 Move X25, [X25+3000]
	220 Move X20, X31
	221 Move W28, W24
	222 Add X29, X26, 32
	223 Move W8, [X23+24]
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Add X8, X23, W19
	226 Move X24, [X8+32]
	227 Compare X24, 0
	228 JumpIfEqual {244}
	229 Move X8, [X25]
	230 Move X9, [X24]
	231 Move X1, X31
	232 Move X2, X31
	233 NotImplemented "Instruction CMP not yet implemented."
	234 NotImplemented "Instruction CSEL not yet implemented."
	235 Move X0, X27
	236 Call FieldInfo.op_Equality, X0, X1
	237 Move TEMP, X0
	238 And TEMP, TEMP, 1
	239 Compare TEMP, 1
	240 JumpIfEqual {252}
	241 Compare X27, 0
	242 JumpIfEqual {384}
	243 Move X24, [X27+16]
	244 Move X0, X31
	245 Move X1, X31
	246 Move X2, X31
	247 Call FieldInfo.op_Equality, X0, X1
	248 Move TEMP, X0
	249 And TEMP, TEMP, 1
	250 Compare TEMP, 1
	251 JumpIfNotEqual {384}
	252 Compare X26, 0
	253 JumpIfEqual {384}
	254 Compare X24, 0
	255 JumpIfEqual {262}
	256 Move X8, [X26]
	257 Move X0, X24
	258 Move X1, [X8+64]
	259 Call 0x1C17E00
	260 Compare X0, 0
	261 JumpIfEqual {386}
	262 Move W8, [X26+24]
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Move [X29], X24
	265 Add X20, X20, 1
	266 NotImplemented "Instruction CMP not yet implemented."
	267 Subtract W19, W19, 1
	268 Add X8, X31, 128
	269 Move X0, X21
	270 Move X1, X26
	271 Move X2, X31
	272 Call TypedReference.MakeTypedReference, X0, X1
	273 Move X19, [X31+24]
	274 Move V0, [X31+8]
	275 Move X8, [X31+144]
	276 Move X1, X31
	277 Move X0, X19
	278 Move X2, X31
	279 Move [X31+6], V0
	280 Move [X31+112], X8
	281 Call FieldInfo.op_Inequality, X0, X1
	282 Move TEMP, X0
	283 And TEMP, TEMP, 1
	284 Compare TEMP, 1
	285 JumpIfNotEqual {340}
	286 Move V0, [X31+6]
	287 Move X8, [X31+112]
	288 Move X25, 0xE4F000
	289 Move X20, [X31+8]
	290 Move [X31+4], V0
	291 Move [X31+80], X8
	292 Move X25, [X25+3824]
	293 Compare X19, 0
	294 JumpIfEqual {384}
	295 Move X9, 0xE80000
	296 Move X9, [X9+2992]
	297 Move X8, [X19]
	298 Move X1, [X9]
	299 Move W10, [X8+304]
	300 Move W9, [X1+304]
	301 NotImplemented "Instruction CMP not yet implemented."
	302 Move X10, [X8+200]
	303 Add X9, X10, X9
	304 NotImplemented "Instruction LDUR not yet implemented."
	305 NotImplemented "Instruction CMP not yet implemented."
	306 Move V0, [X31+4]
	307 Move X9, [X31+80]
	308 Move X10, [X8+760]
	309 Move X2, [X31+16]
	310 Move [X31+8], V0
	311 Move [X31+144], X9
	312 Move X3, [X8+768]
	313 Add X1, X31, 128
	314 Move X0, X19
	315 NotImplemented "Instruction BLR not yet implemented."
	316 Compare X20, 0
	317 JumpIfNotEqual {353}
	318 Move X19, [X31+24]
	319 Move X1, X31
	320 Move X2, X31
	321 Move X0, X19
	322 Call FieldInfo.op_Inequality, X0, X1
	323 Move TEMP, X0
	324 And TEMP, TEMP, 1
	325 Compare TEMP, 1
	326 JumpIfNotEqual {338}
	327 Move X8, 0xE80000
	328 Move X8, [X8+2928]
	329 Move X0, [X8]
	330 Move W8, [X0+224]
	331 Compare W8, 0
	332 JumpIfNotEqual {334}
	333 Call 0x1C17DFC
	334 Move X2, [X31+16]
	335 Move X0, X19
	336 Move X1, X21
	337 Call FormatterServices.SerializationSetValue, X0, X1, X2
	338 Compare X20, 0
	339 JumpIfNotEqual {353}
	340 Move V0, [X31+6]
	341 Move X8, [X31+112]
	342 Move X1, [X31+16]
	343 Add X0, X31, 32
	344 Move X2, X31
	345 Move [X31+2], V0
	346 Move [X31+48], X8
	347 Call TypedReference.SetTypedReference, X0, X1
	348 Move X25, 0xE4F000
	349 Move X20, [X31+8]
	350 Move X25, [X25+3824]
	351 Compare X20, 0
	352 JumpIfEqual {369}
	353 Move X0, [X22+16]
	354 Compare X0, 0
	355 JumpIfEqual {369}
	356 Move X8, [X0]
	357 Move X1, [X25]
	358 Move W10, [X8+304]
	359 Move W9, [X1+304]
	360 NotImplemented "Instruction CMP not yet implemented."
	361 Move X8, [X8+200]
	362 Add X8, X8, X9
	363 NotImplemented "Instruction LDUR not yet implemented."
	364 NotImplemented "Instruction CMP not yet implemented."
	365 Move X1, X21
	366 Move X2, X20
	367 Move X3, X31
	368 Call Array.SetValue, X0, X1, X2
	369 Move X20, [X31+240]
	370 Move X19, [X31+248]
	371 Move X22, [X31+224]
	372 Move X21, [X31+232]
	373 Move X24, [X31+208]
	374 Move X23, [X31+216]
	375 Move X26, [X31+192]
	376 Move X25, [X31+200]
	377 Move X28, [X31+176]
	378 Move X27, [X31+184]
	379 Move X29, [X31+160]
	380 Move X30, [X31+168]
	381 Move W0, 1
	382 Add X31, X31, 256
	383 Return X0
	384 Call 0x1C17F20
	385 Call 0x1C17F28
	386 Call 0x1C17F44
	387 Move X1, X31
	388 Call 0x1C17DEC
	389 Call 0x1C181E0
	390 Move X0, X19
	391 Call 0x1C181E0

Method: System.Void CompleteObject(System.Runtime.Serialization.ObjectHolder holder, System.Boolean bObjectFullyComplete)

Disassembly:
	0x032A5C04 ADRP X8, 0xE7F000
	0x032A5C08 LDR X8, [X8 + 0xD38]
	0x032A5C0C LDR X9, [X24]
	0x032A5C10 LDR X1, [X8]
	0x032A5C14 LDRB W10, [X9 + 0x130]
	0x032A5C18 LDRB W8, [X1 + 0x130]
	0x032A5C1C CMP W10, W8
	0x032A5C20 B.CC 0x32A5C5C
	0x032A5C24 LDR X10, [X9 + 0xC8]
	0x032A5C28 SUB X9, X8, 0x1
	0x032A5C2C LDR X10, [X10, X9, LSL #3]
	0x032A5C30 CMP X10, X1
	0x032A5C34 B.NE 0x32A5C5C
	0x032A5C38 STR X24, [X22 + 0x60]
	0x032A5C3C LDR X10, [X24]
	0x032A5C40 LDRB W11, [X10 + 0x130]
	0x032A5C44 CMP W11, W8
	0x032A5C48 B.CC 0x32A5D44
	0x032A5C4C LDR X8, [X10 + 0xC8]
	0x032A5C50 LDR X8, [X8, X9, LSL #3]
	0x032A5C54 CMP X8, X1
	0x032A5C58 B.NE 0x32A5D44
	0x032A5C5C CBZ X21, 0x32A5CD8
	0x032A5C60 MOV X0, X20
	0x032A5C64 MOV X1, X31
	0x032A5C68 MOV X2, X31
	0x032A5C6C BL 0x32CCED4
	0x032A5C70 TBZ X0, 0x0, 0x32A5CA4
	0x032A5C74 CBZ X20, 0x32A5CF4
	0x032A5C78 LDR X8, [X20]
	0x032A5C7C MOV X0, X20
	0x032A5C80 LDR X9, [X8 + 0x258]
	0x032A5C84 LDR X1, [X8 + 0x260]
	0x032A5C88 BLR X9
	0x032A5C8C CBZ X0, 0x32A5CF4
	0x032A5C90 MOV X1, X31
	0x032A5C94 BL 0x33970C4
	0x032A5C98 CBNZ X19, 0x32A5CA8
	0x032A5C9C TBZ X0, 0x0, 0x32A5CD8
	0x032A5CA0 B 0x32A5CA8
	0x032A5CA4 CBZ X19, 0x32A5CD8
	0x032A5CA8 CMP X21, X23
	0x032A5CAC B.EQ 0x32A5CF8
	0x032A5CB0 ADRP X8, 0xE7F000
	0x032A5CB4 LDR X8, [X8 + 0xDC0]
	0x032A5CB8 LDR X0, [X8]
	0x032A5CBC BL 0x1C16F10
	0x032A5CC0 MOV X1, X21
	0x032A5CC4 MOV X2, X20
	0x032A5CC8 MOV X3, X19
	0x032A5CCC MOV X23, X0
	0x032A5CD0 BL 0x32A05CC
	0x032A5CD4 STR X23, [X22 + 0x58]
	0x032A5CD8 MOV X0, X22
	0x032A5CDC LDP X20, X19, [X31 + 0x40]
	0x032A5CE0 LDP X22, X21, [X31 + 0x30]
	0x032A5CE4 LDP X24, X23, [X31 + 0x20]
	0x032A5CE8 LDP X26, X25, [X31 + 0x10]
	0x032A5CEC LDP X30, X27, [X31], #0x50
	0x032A5CF0 B 0x32A3FC0
	0x032A5CF4 BL 0x1C16F20
	0x032A5CF8 ADRP X0, 0xE7F000
	0x032A5CFC LDR X0, [X0 + 0xDE8]
	0x032A5D00 BL 0x1C16D08
	0x032A5D04 MOV X1, X31
	0x032A5D08 BL 0x33BDD84
	0x032A5D0C MOV X19, X0
	0x032A5D10 ADRP X0, 0xE78000
	0x032A5D14 LDR X0, [X0 + 0x2E0]
	0x032A5D18 BL 0x1C16D08
	0x032A5D1C BL 0x1C16F10
	0x032A5D20 MOV X1, X19
	0x032A5D24 MOV X20, X0
	0x032A5D28 BL 0x329F100
	0x032A5D2C ADRP X0, 0xE7F000
	0x032A5D30 LDR X0, [X0 + 0xDF0]
	0x032A5D34 BL 0x1C16D08
	0x032A5D38 MOV X1, X0
	0x032A5D3C MOV X0, X20
	0x032A5D40 BL 0x1C16DEC
	0x032A5D44 MOV X0, X24
	0x032A5D48 BL 0x1C171E0
	0x032A5D4C LDRB W8, [X0 + 0x50]
	0x032A5D50 ANDS W31, W8, 0x7
	0x032A5D54 CSET W0, NE
	0x032A5D58 RET
	0x032A5D5C STP X30, X27, [X31 - 0x50]!
	0x032A5D60 STP X26, X25, [X31 + 0x10]
	0x032A5D64 STP X24, X23, [X31 + 0x20]
	0x032A5D68 STP X22, X21, [X31 + 0x30]
	0x032A5D6C STP X20, X19, [X31 + 0x40]
	0x032A5D70 ADRP X27, 0x1137000
	0x032A5D74 LDRB W8, [X27 + 0x796]
	0x032A5D78 MOV X19, X7
	0x032A5D7C MOV X21, X6
	0x032A5D80 MOV X22, X5
	0x032A5D84 MOV X23, X4
	0x032A5D88 MOV X24, X3
	0x032A5D8C MOV X25, X2
	0x032A5D90 MOV X26, X1
	0x032A5D94 MOV X20, X0
	0x032A5D98 TBNZ X8, 0x0, 0x32A5DB0
	0x032A5D9C ADRP X0, 0xE7F000
	0x032A5DA0 LDR X0, [X0 + 0xDC0]
	0x032A5DA4 BL 0x1C16CF4
	0x032A5DA8 MOVZ W8, 0x1
	0x032A5DAC STRB W8, [X27 + 0x796]
	0x032A5DB0 MOV X0, X20
	0x032A5DB4 MOV X1, X26
	0x032A5DB8 MOV X2, X19
	0x032A5DBC BL 0x32A3EC8
	0x032A5DC0 STP X25, X24, [X20 + 0x28]
	0x032A5DC4 CBZ X23, 0x32A5E44
	0x032A5DC8 MOV X0, X22
	0x032A5DCC MOV X1, X31
	0x032A5DD0 MOV X2, X31
	0x032A5DD4 BL 0x32CCED4
	0x032A5DD8 TBZ X0, 0x0, 0x32A5E0C
	0x032A5DDC CBZ X22, 0x32A5E90
	0x032A5DE0 LDR X8, [X22]
	0x032A5DE4 MOV X0, X22
	0x032A5DE8 LDR X9, [X8 + 0x258]
	0x032A5DEC LDR X1, [X8 + 0x260]
	0x032A5DF0 BLR X9
	0x032A5DF4 CBZ X0, 0x32A5E90
	0x032A5DF8 MOV X1, X31
	0x032A5DFC BL 0x33970C4
	0x032A5E00 CBNZ X21, 0x32A5E10
	0x032A5E04 TBZ X0, 0x0, 0x32A5E44
	0x032A5E08 B 0x32A5E10
	0x032A5E0C CBZ X21, 0x32A5E44
	0x032A5E10 LDR X8, [X20 + 0x18]
	0x032A5E14 CMP X8, X23
	0x032A5E18 B.EQ 0x32A5E94
	0x032A5E1C ADRP X8, 0xE7F000
	0x032A5E20 LDR X8, [X8 + 0xDC0]
	0x032A5E24 LDR X0, [X8]
	0x032A5E28 BL 0x1C16F10
	0x032A5E2C MOV X1, X23
	0x032A5E30 MOV X2, X22
	0x032A5E34 MOV X3, X21
	0x032A5E38 MOV X24, X0
	0x032A5E3C BL 0x32A05CC
	0x032A5E40 STR X24, [X20 + 0x58]
	0x032A5E44 MOV X0, X20
	0x032A5E48 BL 0x32A3FC0
	0x032A5E4C LDRB W8, [X20 + 0x50]
	0x032A5E50 TBNZ X8, 0x3, 0x32A5E6C
	0x032A5E54 LDP X20, X19, [X31 + 0x40]
	0x032A5E58 LDP X22, X21, [X31 + 0x30]
	0x032A5E5C LDP X24, X23, [X31 + 0x20]
	0x032A5E60 LDP X26, X25, [X31 + 0x10]
	0x032A5E64 LDP X30, X27, [X31], #0x50
	0x032A5E68 RET
	0x032A5E6C LDR W1, [X20 + 0x20]
	0x032A5E70 MOV X0, X20
	0x032A5E74 MOV X2, X19
	0x032A5E78 LDP X20, X19, [X31 + 0x40]
	0x032A5E7C LDP X22, X21, [X31 + 0x30]
	0x032A5E80 LDP X24, X23, [X31 + 0x20]
	0x032A5E84 LDP X26, X25, [X31 + 0x10]
	0x032A5E88 LDP X30, X27, [X31], #0x50
	0x032A5E8C B 0x32A6E64
	0x032A5E90 BL 0x1C16F20
	0x032A5E94 ADRP X0, 0xE7F000
	0x032A5E98 LDR X0, [X0 + 0xDE8]
	0x032A5E9C BL 0x1C16D08
	0x032A5EA0 MOV X1, X31
	0x032A5EA4 BL 0x33BDD84
	0x032A5EA8 MOV X19, X0
	0x032A5EAC ADRP X0, 0xE78000
	0x032A5EB0 LDR X0, [X0 + 0x2E0]
	0x032A5EB4 BL 0x1C16D08
	0x032A5EB8 BL 0x1C16F10
	0x032A5EBC MOV X1, X19
	0x032A5EC0 MOV X20, X0
	0x032A5EC4 BL 0x329F100
	0x032A5EC8 ADRP X0, 0xE7F000
	0x032A5ECC LDR X0, [X0 + 0xDF8]
	0x032A5ED0 BL 0x1C16D08
	0x032A5ED4 MOV X1, X0
	0x032A5ED8 MOV X0, X20
	0x032A5EDC BL 0x1C16DEC
	0x032A5EE0 LDP W8, W9, [X0 + 0x20]
	0x032A5EE4 ADD W0, W9, W8
	0x032A5EE8 RET
	0x032A5EEC STR X30, [X31 - 0x20]!
	0x032A5EF0 STP X20, X19, [X31 + 0x10]
	0x032A5EF4 ADRP X20, 0x1137000
	0x032A5EF8 LDRB W8, [X20 + 0x789]
	0x032A5EFC MOV X19, X0
	0x032A5F00 TBNZ X8, 0x0, 0x32A5F18
	0x032A5F04 ADRP X0, 0xE78000
	0x032A5F08 LDR X0, [X0 + 0x978]
	0x032A5F0C BL 0x1C16CF4
	0x032A5F10 MOVZ W8, 0x1
	0x032A5F14 STRB W8, [X20 + 0x789]
	0x032A5F18 CBZ X19, 0x32A5F6C
	0x032A5F1C ADRP X20, 0xE78000
	0x032A5F20 LDR X20, [X20 + 0x978]
	0x032A5F24 MOV X0, X19
	0x032A5F28 MOV X1, X31
	0x032A5F2C BL 0x33BB908
	0x032A5F30 LDR X8, [X20]
	0x032A5F34 MOV X20, X0
	0x032A5F38 LDR W9, [X8 + 0xE0]
	0x032A5F3C CBNZ W9, 0x32A5F48
	0x032A5F40 MOV X0, X8
	0x032A5F44 BL 0x1C16DFC
	0x032A5F48 MOV X0, X20
	0x032A5F4C MOV X1, X31
	0x032A5F50 MOV X2, X31
	0x032A5F54 BL 0x32CC828
	0x032A5F58 TBNZ X0, 0x0, 0x32A5F70
	0x032A5F5C MOV X0, X20
	0x032A5F60 LDP X20, X19, [X31 + 0x10]
	0x032A5F64 LDR X30, [X31], #0x20
	0x032A5F68 RET
	0x032A5F6C BL 0x1C16F20
	0x032A5F70 ADRP X0, 0xE4E000
	0x032A5F74 LDR X0, [X0 + 0x9D0]
	0x032A5F78 BL 0x1C16D08
	0x032A5F7C MOVZ W1, 0x1
	0x032A5F80 BL 0x1C16D6C
	0x032A5F84 MOV X20, X0
	0x032A5F88 MOV X0, X19
	0x032A5F8C BL 0x19903C0
	0x032A5F90 LDR X8, [X19]
	0x032A5F94 MOV X0, X19
	0x032A5F98 LDR X9, [X8 + 0x2E8]
	0x032A5F9C LDR X1, [X8 + 0x2F0]
	0x032A5FA0 BLR X9
	0x032A5FA4 MOV X19, X0
	0x032A5FA8 MOV X0, X20
	0x032A5FAC BL 0x19903C0
	0x032A5FB0 MOV X0, X20
	0x032A5FB4 MOV X1, X19
	0x032A5FB8 BL 0x19980B4
	0x032A5FBC MOV X0, X20
	0x032A5FC0 MOV X1, X31
	0x032A5FC4 MOV X2, X19
	0x032A5FC8 BL 0x1993444
	0x032A5FCC ADRP X0, 0xE7F000
	0x032A5FD0 LDR X0, [X0 + 0xD58]
	0x032A5FD4 BL 0x1C16D08
	0x032A5FD8 MOV X1, X20
	0x032A5FDC MOV X2, X31
	0x032A5FE0 BL 0x33BFB40
	0x032A5FE4 MOV X19, X0
	0x032A5FE8 ADRP X0, 0xE78000
	0x032A5FEC LDR X0, [X0 + 0x2E0]
	0x032A5FF0 BL 0x1C16D08
	0x032A5FF4 BL 0x1C16F10
	0x032A5FF8 MOV X1, X19
	0x032A5FFC MOV X20, X0
	0x032A6000 BL 0x329F100
	0x032A6004 ADRP X0, 0xE7E000
	0x032A6008 LDR X0, [X0 + 0xE00]
	0x032A600C BL 0x1C16D08
	0x032A6010 MOV X1, X0
	0x032A6014 MOV X0, X20
	0x032A6018 BL 0x1C16DEC
	0x032A601C STR X30, [X31 - 0x30]!
	0x032A6020 STP X22, X21, [X31 + 0x10]
	0x032A6024 STP X20, X19, [X31 + 0x20]
	0x032A6028 ADRP X20, 0x1136000
	0x032A602C LDRB W8, [X20 + 0x78A]
	0x032A6030 MOV X19, X0
	0x032A6034 TBNZ X8, 0x0, 0x32A604C
	0x032A6038 ADRP X0, 0xE7E000
	0x032A603C LDR X0, [X0 + 0xD38]
	0x032A6040 BL 0x1C16CF4
	0x032A6044 MOVZ W8, 0x1
	0x032A6048 STRB W8, [X20 + 0x78A]
	0x032A604C MOV X0, X19
	0x032A6050 BL 0x32A365C
	0x032A6054 CBZ X0, 0x32A6164
	0x032A6058 BL 0x32A6310
	0x032A605C CBZ X0, 0x32A6164
	0x032A6060 MOV X20, X0
	0x032A6064 MOV W22, W31
	0x032A6068 MOV X0, X20
	0x032A606C BL 0x32A63C4
	0x032A6070 TBZ X0, 0x0, 0x32A60F0
	0x032A6074 MOV X0, X20
	0x032A6078 BL 0x32A636C
	0x032A607C CBZ X0, 0x32A6164
	0x032A6080 LDR X8, [X0 + 0x10]
	0x032A6084 MOV X21, X0
	0x032A6088 CBZ X8, 0x32A61B4
	0x032A608C LDP W8, W9, [X21 + 0x20]
	0x032A6090 ADDS W31, W9, W8
	0x032A6094 B.NE 0x32A6068
	0x032A6098 LDR W8, [X21 + 0x50]
	0x032A609C ANDS W31, W8, 0x6
	0x032A60A0 B.EQ 0x32A60BC
	0x032A60A4 TBNZ X8, 0xE, 0x32A60BC
	0x032A60A8 MOV X0, X19
	0x032A60AC MOV X1, X21
	0x032A60B0 BL 0x32A3BE4
	0x032A60B4 ADD W22, W22, 0x1
	0x032A60B8 B 0x32A60D0
	0x032A60BC TBNZ X8, 0x0, 0x32A60D0
	0x032A60C0 MOVZ W2, 0x1
	0x032A60C4 MOV X0, X19
	0x032A60C8 MOV X1, X21
	0x032A60CC BL 0x32A4C04
	0x032A60D0 LDRB W8, [X21 + 0x50]
	0x032A60D4 TBZ X8, 0x0, 0x32A6068
	0x032A60D8 MOV X0, X19
	0x032A60DC MOV X1, X21
	0x032A60E0 BL 0x32A4978
	0x032A60E4 AND W8, W0, 0x1
	0x032A60E8 ADD W22, W22, W8
	0x032A60EC B 0x32A6068
	0x032A60F0 CBNZ W22, 0x32A604C
	0x032A60F4 LDR X8, [X19 + 0x38]
	0x032A60F8 CBZ X8, 0x32A6168
	0x032A60FC LDR X8, [X19 + 0x20]
	0x032A6100 CBZ X8, 0x32A6164
	0x032A6104 MOV X21, X31
	0x032A6108 LDR W9, [X8 + 0x18]
	0x032A610C CMP X21, W9, SXTW
	0x032A6110 B.GE 0x32A6268
	0x032A6114 CMP X21, X9
	0x032A6118 B.CS 0x32A6280
	0x032A611C ADD X8, X8, X21, 0x3, LSL
	0x032A6120 LDR X20, [X8 + 0x20]
	0x032A6124 CBZ X20, 0x32A6158
	0x032A6128 LDP W8, W9, [X20 + 0x20]
	0x032A612C ADD W8, W9, W8
	0x032A6130 CMP W8, 0x1
	0x032A6134 B.LT 0x32A6148
	0x032A6138 MOVZ W2, 0x1
	0x032A613C MOV X0, X19
	0x032A6140 MOV X1, X20
	0x032A6144 BL 0x32A4C04
	0x032A6148 LDR X20, [X20 + 0x48]
	0x032A614C CBNZ X20, 0x32A6128
	0x032A6150 LDR X8, [X19 + 0x38]
	0x032A6154 CBZ X8, 0x32A61A4
	0x032A6158 LDR X8, [X19 + 0x20]
	0x032A615C ADD X21, X21, 0x1
	0x032A6160 CBNZ X8, 0x32A6108
	0x032A6164 BL 0x1C16F20
	0x032A6168 LDR X8, [X19 + 0x28]
	0x032A616C CBZ X8, 0x32A61A4
	0x032A6170 ADRP X10, 0xE7E000
	0x032A6174 LDR X10, [X10 + 0xD38]
	0x032A6178 LDR X9, [X8]
	0x032A617C LDR X8, [X10]
	0x032A6180 LDRB W11, [X9 + 0x130]
	0x032A6184 LDRB W10, [X8 + 0x130]
	0x032A6188 CMP W11, W10
	0x032A618C B.CC 0x32A61A4
	0x032A6190 LDR X9, [X9 + 0xC8]
	0x032A6194 ADD X9, X9, X10, 0x3, LSL
	0x032A6198 LDUR X9, [X9 - 0x8]
	0x032A619C CMP X9, X8
	0x032A61A0 B.EQ 0x32A6284
	0x032A61A4 LDP X20, X19, [X31 + 0x20]
	0x032A61A8 LDP X22, X21, [X31 + 0x10]
	0x032A61AC LDR X30, [X31], #0x30
	0x032A61B0 RET
	0x032A61B4 ADRP X0, 0xE4D000
	0x032A61B8 LDR X0, [X0 + 0x9D0]
	0x032A61BC BL 0x1C16D08
	0x032A61C0 MOVZ W1, 0x1
	0x032A61C4 BL 0x1C16D6C
	0x032A61C8 MOV X19, X0
	0x032A61CC MOV X0, X21
	0x032A61D0 BL 0x19903C0
	0x032A61D4 LDR X8, [X21 + 0x18]
	0x032A61D8 ADRP X0, 0xE4F000
	0x032A61DC STR X8, [X31 + 0x8]
	0x032A61E0 LDR X0, [X0 + 0xA60]
	0x032A61E4 BL 0x1C16D08
	0x032A61E8 ADD X1, X31, 0x8
	0x032A61EC BL 0x1C16E04
	0x032A61F0 MOV X20, X0
	0x032A61F4 MOV X0, X19
	0x032A61F8 BL 0x19903C0
	0x032A61FC MOV X0, X19
	0x032A6200 MOV X1, X20
	0x032A6204 BL 0x19980B4
	0x032A6208 MOV X0, X19
	0x032A620C MOV X1, X31
	0x032A6210 MOV X2, X20
	0x032A6214 BL 0x1993444

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X22, 0x1138000
	015 Move W8, [X22+1925]
	016 Move W21, W2
	017 Move X19, X1
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {49}
	023 Move X0, 0xE78000
	024 Move X0, [X0+936]
	025 Call 0x1C17CF4
	026 Move X0, 0xE80000
	027 Move X0, [X0+2928]
	028 Call 0x1C17CF4
	029 Move X0, 0xE50000
	030 Move X0, [X0+3672]
	031 Call 0x1C17CF4
	032 Move X0, 0xE7F000
	033 Move X0, [X0+3584]
	034 Call 0x1C17CF4
	035 Move X0, 0xE80000
	036 Move X0, [X0+3440]
	037 Call 0x1C17CF4
	038 Move X0, 0xE4F000
	039 Move X0, [X0+3824]
	040 Call 0x1C17CF4
	041 Move X0, 0xE51000
	042 Move X0, [X0+632]
	043 Call 0x1C17CF4
	044 Move X0, 0xE4F000
	045 Move X0, [X0+1728]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X22+1925], W8
	049 Compare X19, 0
	050 JumpIfEqual {352}
	051 Move X26, [X19+56]
	052 Move [X31+16], X31
	053 Move [X31+24], X31
	054 Move X8, [X19+16]
	055 Compare X8, 0
	056 JumpIfEqual {360}
	057 Compare X26, 0
	058 JumpIfEqual {338}
	059 Move W8, [X19+80]
	060 And W31, W8, 6
	061 Move X22, [X19+40]
	062 Compare X22, 0
	063 JumpIfEqual {419}
	064 Move W8, [X26+24]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move W27, W31
	067 Move W25, 4
	068 Move X8, [X26+16]
	069 Compare X8, 0
	070 JumpIfEqual {352}
	071 Move W9, [X8+24]
	072 Subtract X29, X25, 4
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X1, [X8]
	075 Compare X1, 0
	076 JumpIfEqual {139}
	077 And W4, W21, 1
	078 Add X2, X31, 16
	079 Add X3, X31, 24
	080 Move X0, X20
	081 Call ObjectManager.GetCompletionInfo, X0, X1, X2, X3, X4
	082 Move TEMP, X0
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfNotEqual {139}
	086 Move X28, [X31+16]
	087 Compare X28, 0
	088 JumpIfEqual {352}
	089 Move X23, [X28+16]
	090 Compare X23, 0
	091 JumpIfEqual {352}
	092 Move X24, [X31+24]
	093 Move X0, X23
	094 Move X1, X31
	095 Call "il2cpp_vm_object_is_inst", X0
	096 Move X3, X0
	097 Compare X24, 0
	098 JumpIfEqual {104}
	099 Move X8, 0xE51000
	100 Move X8, [X8+632]
	101 Move X1, [X8]
	102 Move X8, [X24]
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move X0, X22
	105 Move X1, X24
	106 Move X2, X23
	107 Move X4, X31
	108 Call SerializationInfo.UpdateValue, X0, X1, X2, X3
	109 Move X8, [X26+16]
	110 Compare X8, 0
	111 JumpIfEqual {352}
	112 Move W9, [X8+24]
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Add W27, W27, 1
	115 Move [X8], X31
	116 Move TEMP, X21
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfEqual {139}
	120 Move W8, [X19+32]
	121 Move W9, [X19+80]
	122 Subtract W8, W8, 1
	123 Move [X19+32], W8
	124 Move TEMP, X9
	125 And TEMP, TEMP, 8
	126 Compare TEMP, 8
	127 JumpIfNotEqual {134}
	128 Move TEMP, 0
	129 Not TEMP
	130 Move W1, TEMP
	131 Move X0, X19
	132 Move X2, X20
	133 Call ObjectHolder.UpdateDescendentDependencyChain, X0, X1, X2
	134 Move X0, [X28+64]
	135 Compare X0, 0
	136 JumpIfEqual {352}
	137 Move X1, [X19+24]
	138 Call LongList.RemoveElement, X0, X1
	139 NotImplemented "Instruction LDRSW not yet implemented."
	140 Subtract X9, X25, 3
	141 Add X25, X25, 1
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Move W25, W27
	144 Move W8, [X26+24]
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move W25, W31
	147 Move W28, 4
	148 Move X8, [X26+16]
	149 Compare X8, 0
	150 JumpIfEqual {352}
	151 Move W9, [X8+24]
	152 Subtract X27, X28, 4
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move X22, [X8]
	155 Compare X22, 0
	156 JumpIfEqual {328}
	157 And W4, W21, 1
	158 Add X2, X31, 16
	159 Add X3, X31, 24
	160 Move X0, X20
	161 Move X1, X22
	162 Call ObjectManager.GetCompletionInfo, X0, X1, X2, X3, X4
	163 Move TEMP, X0
	164 And TEMP, TEMP, 1
	165 Compare TEMP, 1
	166 JumpIfNotEqual {328}
	167 Move X29, [X31+16]
	168 Compare X29, 0
	169 JumpIfEqual {352}
	170 Move X8, [X29+96]
	171 Compare X8, 0
	172 JumpIfEqual {177}
	173 Move W9, [X19+104]
	174 Move [X19+96], X8
	175 Compare W9, 0
	176 JumpIfEqual {182}
	177 Move W8, [X19+104]
	178 Compare W8, 0
	179 JumpIfEqual {182}
	180 Move W8, 1
	181 Move [X29+104], W8
	182 Move W8, [X22+32]
	183 NotImplemented "Instruction CMP not yet implemented."
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Move W8, [X19+80]
	186 Move TEMP, X8
	187 And TEMP, TEMP, 8
	188 Compare TEMP, 8
	189 JumpIfEqual {414}
	190 Move X22, [X19+16]
	191 Compare X22, 0
	192 JumpIfEqual {352}
	193 Move X9, 0xE4F000
	194 Move X8, [X22]
	195 Move X9, [X9+3824]
	196 Move W10, [X8+304]
	197 Move X1, [X9]
	198 Move W9, [X1+304]
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Move X8, [X8+200]
	201 Add X8, X8, X9
	202 NotImplemented "Instruction LDUR not yet implemented."
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Move X24, [X31+24]
	205 Move X23, [X29+16]
	206 Move [X31+4], W25
	207 Compare X24, 0
	208 JumpIfEqual {292}
	209 Move X8, 0xE50000
	210 Move X8, [X8+3672]
	211 Move X0, X24
	212 Move X25, [X8]
	213 Move X1, X25
	214 Call 0x1C17E00
	215 Move X2, X0
	216 Compare X0, 0
	217 JumpIfNotEqual {293}
	218 Move X22, [X31+24]
	219 Compare X22, 0
	220 JumpIfEqual {352}
	221 Move X9, 0xE80000
	222 Move X8, [X22]
	223 Move X9, [X9+3440]
	224 Move W10, [X8+304]
	225 Move X1, [X9]
	226 Move W9, [X1+304]
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Move X8, [X8+200]
	229 Add X8, X8, X9
	230 NotImplemented "Instruction LDUR not yet implemented."
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Move X8, [X22]
	233 Move X0, X22
	234 Move X9, [X8+408]
	235 Move X1, [X8+416]
	236 NotImplemented "Instruction BLR not yet implemented."
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Move W8, [X19+80]
	239 Move TEMP, X8
	240 And TEMP, TEMP, 8
	241 Compare TEMP, 8
	242 JumpIfEqual {256}
	243 Move X23, [X19+16]
	244 Move X8, 0xE80000
	245 Move X8, [X8+2928]
	246 Move X24, [X29+16]
	247 Move X0, [X8]
	248 Move W8, [X0+224]
	249 Compare W8, 0
	250 JumpIfNotEqual {252}
	251 Call 0x1C17DFC
	252 Move X0, X22
	253 Move X1, X23
	254 Move X2, X24
	255 Call FormatterServices.SerializationSetValue, X0, X1, X2
	256 Move TEMP, X8
	257 And TEMP, TEMP, 0x8000
	258 Compare TEMP, 0x8000
	259 JumpIfEqual {269}
	260 Move X23, [X19+16]
	261 Compare X23, 0
	262 JumpIfEqual {244}
	263 Move X8, [X19+64]
	264 Compare X8, 0
	265 JumpIfEqual {269}
	266 Move W8, [X8+24]
	267 Compare W8, 0
	268 JumpIfNotEqual {244}
	269 Move X9, 0xE78000
	270 Move X8, [X22]
	271 Move X9, [X9+936]
	272 Move W10, [X8+304]
	273 Move X1, [X9]
	274 Move W9, [X1+304]
	275 NotImplemented "Instruction CMP not yet implemented."
	276 Move X8, [X8+200]
	277 Add X8, X8, X9
	278 NotImplemented "Instruction LDUR not yet implemented."
	279 NotImplemented "Instruction CMP not yet implemented."
	280 Move X3, [X29+16]
	281 Move X0, X20
	282 Move X1, X22
	283 Move X2, X19
	284 Call ObjectManager.DoValueTypeFixup, X0, X1, X2, X3
	285 Move W8, [X29+80]
	286 Move TEMP, X8
	287 And TEMP, TEMP, 8
	288 Compare TEMP, 8
	289 JumpIfNotEqual {298}
	290 Or W8, W8, 0x8000
	291 Move [X29+80], W8
	292 Move X2, X31
	293 Move X0, X22
	294 Move X1, X23
	295 Move X3, X31
	296 Call Array.SetValue, X0, X1, X2
	297 Move W25, [X31+4]
	298 Move X8, [X26+16]
	299 Compare X8, 0
	300 JumpIfEqual {352}
	301 Move W9, [X8+24]
	302 NotImplemented "Instruction CMP not yet implemented."
	303 Add W25, W25, 1
	304 Move [X8], X31
	305 Move TEMP, X21
	306 And TEMP, TEMP, 1
	307 Compare TEMP, 1
	308 JumpIfEqual {328}
	309 Move W8, [X19+32]
	310 Move W9, [X19+80]
	311 Subtract W8, W8, 1
	312 Move [X19+32], W8
	313 Move TEMP, X9
	314 And TEMP, TEMP, 8
	315 Compare TEMP, 8
	316 JumpIfNotEqual {323}
	317 Move TEMP, 0
	318 Not TEMP
	319 Move W1, TEMP
	320 Move X0, X19
	321 Move X2, X20
	322 Call ObjectHolder.UpdateDescendentDependencyChain, X0, X1, X2
	323 Move X0, [X29+64]
	324 Compare X0, 0
	325 JumpIfEqual {352}
	326 Move X1, [X19+24]
	327 Call LongList.RemoveElement, X0, X1
	328 NotImplemented "Instruction LDRSW not yet implemented."
	329 Subtract X9, X28, 3
	330 Add X28, X28, 1
	331 NotImplemented "Instruction CMP not yet implemented."
	332 Move W25, W31
	333 Move X9, [X20+56]
	334 NotImplemented "Instruction CMP not yet implemented."
	335 Subtract X9, X9, W25
	336 Move [X20+56], X9
	337 Move [X19+56], X31
	338 Move X20, [X31+112]
	339 Move X19, [X31+120]
	340 Move X22, [X31+96]
	341 Move X21, [X31+104]
	342 Move X24, [X31+80]
	343 Move X23, [X31+88]
	344 Move X26, [X31+64]
	345 Move X25, [X31+72]
	346 Move X28, [X31+48]
	347 Move X27, [X31+56]
	348 Move X29, [X31+32]
	349 Move X30, [X31+40]
	350 Add X31, X31, 128
	351 Return 
	352 Call 0x1C17F20
	353 Call 0x1C17F28
	354 Move X0, X22
	355 Call 0x1C181E0
	356 Move X0, X24
	357 Call 0x1C181E0
	358 Move X0, 0xE7F000
	359 Move X0, [X0+3448]
	360 Move X0, 0xE4E000
	361 Move X0, [X0+2512]
	362 Call 0x1C17D08
	363 Move W1, 1
	364 Call 0x1C17D6C
	365 Move X20, X0
	366 Move X0, X19
	367 Call 0x19913C0
	368 Move X8, [X19+24]
	369 Move X0, 0xE50000
	370 Move [X31+8], X8
	371 Move X0, [X0+2656]
	372 Call 0x1C17D08
	373 Add X1, X31, 8
	374 Call 0x1C17E04
	375 Move X19, X0
	376 Move X0, X20
	377 Call 0x19913C0
	378 Move X0, X20
	379 Move X1, X19
	380 Call 0x19990B4
	381 Move X0, X20
	382 Move X1, X31
	383 Move X2, X19
	384 Call 0x1994444
	385 Move X0, 0xE7F000
	386 Move X0, [X0+3456]
	387 Move X0, 0xE4E000
	388 Move X0, [X0+2512]
	389 Call 0x1C17D08
	390 Move W1, 1
	391 Call 0x1C17D6C
	392 Move X20, X0
	393 Move X0, X19
	394 Call 0x19913C0
	395 Move X19, [X19+96]
	396 Move X0, X19
	397 Call 0x19913C0
	398 Move X19, [X19+16]
	399 Move X0, X20
	400 Call 0x19913C0
	401 Move X0, X20
	402 Move X1, X19
	403 Call 0x19990B4
	404 Move X0, X20
	405 Move X1, X31
	406 Move X2, X19
	407 Call 0x1994444
	408 Move X0, 0xE7F000
	409 Move X0, [X0+3464]
	410 Call 0x1C17D08
	411 Move X1, X20
	412 Move X2, X31
	413 Call Environment.GetResourceString, X0, X1
	414 Move X0, 0xE7F000
	415 Move X0, [X0+3472]
	416 Move X0, X24
	417 Move X1, X25
	418 Call 0x1C181E0
	419 Move X0, 0xE7F000
	420 Move X0, [X0+3480]
	421 Call 0x1C17D08
	422 Move X1, X31
	423 Call Environment.GetResourceString, X0
	424 Move X19, X0
	425 Move X0, 0xE78000
	426 Move X0, [X0+736]
	427 Call 0x1C17D08
	428 Call 0x1C17F10
	429 Move X1, X19
	430 Move X20, X0
	431 Call SerializationException..ctor, X0, X1
	432 Move X0, 0xE7F000
	433 Move X0, [X0+3488]
	434 Call 0x1C17D08
	435 Move X1, X0
	436 Move X0, X20
	437 Call 0x1C17DEC

Method: System.Void DoNewlyRegisteredObjectFixups(System.Runtime.Serialization.ObjectHolder holder)

Disassembly:
	0x032A58A0 LDR X28, [X28 + 0x3A8]
	0x032A58A4 MOV X0, X20
	0x032A58A8 MOV X1, X24
	0x032A58AC BL 0x32A36C8
	0x032A58B0 CBZ X0, 0x32A59A0
	0x032A58B4 LDR X8, [X0 + 0x10]
	0x032A58B8 MOV X25, X0
	0x032A58BC CBNZ X8, 0x32A5B30
	0x032A58C0 CBZ X21, 0x32A58F0
	0x032A58C4 LDR X8, [X21]
	0x032A58C8 LDR X1, [X28]
	0x032A58CC LDRB W10, [X8 + 0x130]
	0x032A58D0 LDRB W9, [X1 + 0x130]
	0x032A58D4 CMP W10, W9
	0x032A58D8 B.CC 0x32A5A78
	0x032A58DC LDR X8, [X8 + 0xC8]
	0x032A58E0 ADD X8, X8, X9, 0x3, LSL
	0x032A58E4 LDUR X8, [X8 - 0x8]
	0x032A58E8 CMP X8, X1
	0x032A58EC B.NE 0x32A5A78
	0x032A58F0 MOV X0, X25
	0x032A58F4 MOV X1, X19
	0x032A58F8 MOV X2, X23
	0x032A58FC MOV X3, X26
	0x032A5900 MOV X4, X22
	0x032A5904 MOV X5, X21
	0x032A5908 MOV X6, X27
	0x032A590C MOV X7, X20
	0x032A5910 BL 0x32A5D5C
	0x032A5914 LDR W8, [X25 + 0x20]
	0x032A5918 CMP W8, 0x1
	0x032A591C B.LT 0x32A5930
	0x032A5920 MOV X0, X20
	0x032A5924 MOV X1, X25
	0x032A5928 MOV W2, W31
	0x032A592C BL 0x32A4C04
	0x032A5930 LDR W8, [X25 + 0x50]
	0x032A5934 ANDS W31, W8, 0x7
	0x032A5938 B.EQ 0x32A595C
	0x032A593C MOV X0, X20
	0x032A5940 BL 0x32A365C
	0x032A5944 CBZ X0, 0x32A5A74
	0x032A5948 LDR X8, [X0]
	0x032A594C MOV X1, X25
	0x032A5950 LDP X9, X2, [X8 + 0x178]
	0x032A5954 BLR X9
	0x032A5958 LDR W8, [X25 + 0x50]
	0x032A595C ANDS W31, W8, 0x6
	0x032A5960 CSET W9, EQ
	0x032A5964 TBNZ X8, 0x0, 0x32A5984
	0x032A5968 AND W8, W8, 0x4000
	0x032A596C ORR W8, W9, W8, 0xE
	0x032A5970 CBZ W8, 0x32A5984
	0x032A5974 MOV X0, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Compare X1, 0
	007 JumpIfEqual {84}
	008 Move W8, [X1+80]
	009 Move X20, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {78}
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 4
	017 Compare TEMP, 4
	018 JumpIfNotEqual {25}
	019 Move X0, X20
	020 Call ObjectHolder.get_CanSurrogatedObjectValueChange, X0
	021 Move TEMP, X0
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {78}
	025 Move X20, [X20+64]
	026 Compare X20, 0
	027 JumpIfEqual {78}
	028 Move TEMP, 0
	029 Not TEMP
	030 Move W8, TEMP
	031 Move X0, X20
	032 Move [X20+32], W8
	033 Call LongList.MoveNext, X0
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {78}
	038 Move W22, 1
	039 Move X0, X20
	040 Call LongList.get_Current, X0
	041 Move X1, X0
	042 Move X0, X19
	043 Call ObjectManager.FindObjectHolder, X0, X1
	044 Compare X0, 0
	045 JumpIfEqual {84}
	046 Move W8, [X0+32]
	047 Move W9, [X0+80]
	048 Move X21, X0
	049 Subtract W8, W8, 1
	050 Move [X0+32], W8
	051 Move TEMP, X9
	052 And TEMP, TEMP, 8
	053 Compare TEMP, 8
	054 JumpIfNotEqual {62}
	055 Move TEMP, 0
	056 Not TEMP
	057 Move W1, TEMP
	058 Move X0, X21
	059 Move X2, X19
	060 Call ObjectHolder.UpdateDescendentDependencyChain, X0, X1, X2
	061 Move W8, [X21+32]
	062 Compare W8, 0
	063 JumpIfNotEqual {72}
	064 Move X8, [X21+16]
	065 Compare X8, 0
	066 JumpIfEqual {71}
	067 Move W2, 1
	068 Move X0, X19
	069 Move X1, X21
	070 Call ObjectManager.CompleteObject, X0, X1, X2
	071 Move [X21+84], W22
	072 Move X0, X20
	073 Call LongList.MoveNext, X0
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfEqual {39}
	078 Move X20, [X31+32]
	079 Move X19, [X31+40]
	080 Move X22, [X31+16]
	081 Move X21, [X31+24]
	082 Move X30, [X31+48]
	083 Return 
	084 Call 0x1C17F20

Method: System.Object GetObject(System.Int64 objectID)

Disassembly:
	0x032A6350 MOV X1, X19
	0x032A6354 MOV X20, X0
	0x032A6358 BL 0x32A745C
	0x032A635C MOV X0, X20
	0x032A6360 LDP X20, X19, [X31 + 0x10]
	0x032A6364 LDP X30, X21, [X31], #0x20
	0x032A6368 RET
	0x032A636C STR X30, [X31 - 0x10]!
	0x032A6370 LDR X8, [X0 + 0x18]
	0x032A6374 CBZ X8, 0x32A63A0
	0x032A6378 LDR X8, [X8 + 0x10]
	0x032A637C CBZ X8, 0x32A63A0
	0x032A6380 LDRSW X9, [X0 + 0x24]
	0x032A6384 LDR W10, [X8 + 0x18]
	0x032A6388 CMP W9, W10
	0x032A638C B.CS 0x32A63A4
	0x032A6390 ADD X8, X8, X9, 0x3, LSL
	0x032A6394 LDR X0, [X8 + 0x20]
	0x032A6398 LDR X30, [X31], #0x10
	0x032A639C RET
	0x032A63A0 BL 0x1C16F20
	0x032A63A4 BL 0x1C16F28
	0x032A63A8 LDR W8, [X0 + 0x50]
	0x032A63AC ANDS W31, W8, 0x6
	0x032A63B0 CSET W9, NE
	0x032A63B4 ANDS W31, W8, 0x4000
	0x032A63B8 CSET W8, EQ
	0x032A63BC AND W0, W9, W8, 0x0
	0x032A63C0 RET
	0x032A63C4 STR X30, [X31 - 0x10]!
	0x032A63C8 LDRB W8, [X0 + 0x10]
	0x032A63CC CBZ W8, 0x32A6444
	0x032A63D0 LDR W9, [X0 + 0x24]
	0x032A63D4 LDR X8, [X0 + 0x18]
	0x032A63D8 ADD W11, W9, 0x1
	0x032A63DC MOV W9, W11
	0x032A63E0 CBZ X8, 0x32A646C
	0x032A63E4 LDR W10, [X8 + 0x18]
	0x032A63E8 CMP W9, W10
	0x032A63EC B.GE 0x32A6430
	0x032A63F0 LDR X11, [X8 + 0x10]
	0x032A63F4 CBZ X11, 0x32A646C
	0x032A63F8 LDR W12, [X11 + 0x18]
	0x032A63FC CMP W9, W12

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Call ObjectManager.FindObjectHolder, X0, X1
	006 Compare X0, 0
	007 JumpIfEqual {26}
	008 Move W8, [X0+80]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {24}
	014 Move TEMP, X8
	015 And TEMP, TEMP, 4
	016 Compare TEMP, 4
	017 JumpIfNotEqual {25}
	018 Move X0, X19
	019 Call ObjectHolder.get_CanSurrogatedObjectValueChange, X0
	020 Move TEMP, X0
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfNotEqual {25}
	024 Move X0, X31
	025 Move X0, [X19+16]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0
	030 Move X0, 0xE7F000
	031 Move X0, [X0+3496]
	032 Call 0x1C17D08
	033 Move X1, X31
	034 Call Environment.GetResourceString, X0
	035 Move X19, X0
	036 Move X0, 0xE56000
	037 Move X0, [X0+1888]
	038 Call 0x1C17D08
	039 Call 0x1C17F10
	040 Move X20, X0
	041 Move X0, 0xE7F000
	042 Move X0, [X0+3504]
	043 Call 0x1C17D08
	044 Move X1, X0
	045 Move X0, X20
	046 Move X2, X19
	047 Move X3, X31
	048 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	049 Move X0, 0xE7F000
	050 Move X0, [X0+3512]
	051 Call 0x1C17D08
	052 Move X1, X0
	053 Move X0, X20
	054 Call 0x1C17DEC

Method: System.Void RegisterString(System.String obj, System.Int64 objectID, System.Runtime.Serialization.SerializationInfo info, System.Int64 idOfContainingObj, System.Reflection.MemberInfo member)

Disassembly:
	0x032A6400 B.CS 0x32A6474
	0x032A6404 ADD X11, X11, W9, 0x3, SXTW
	0x032A6408 LDR X11, [X11 + 0x20]
	0x032A640C CBZ X11, 0x32A646C
	0x032A6410 LDR W11, [X11 + 0x50]
	0x032A6414 ANDS W31, W11, 0x6
	0x032A6418 CSET W12, EQ
	0x032A641C TBNZ X11, 0x0, 0x32A6430
	0x032A6420 AND W11, W11, 0x4000
	0x032A6424 ORR W12, W12, W11, 0xE
	0x032A6428 ADD W11, W9, 0x1
	0x032A642C TBNZ X12, 0x0, 0x32A63DC
	0x032A6430 CMP W9, W10
	0x032A6434 CSET W8, NE
	0x032A6438 STR W9, [X0 + 0x24]
	0x032A643C MOV W0, W8
	0x032A6440 B 0x32A6464
	0x032A6444 LDR W8, [X0 + 0x24]
	0x032A6448 LDR X9, [X0 + 0x18]
	0x032A644C ADD W8, W8, 0x1
	0x032A6450 STR W8, [X0 + 0x24]
	0x032A6454 CBZ X9, 0x32A647C
	0x032A6458 LDR W9, [X9 + 0x18]
	0x032A645C CMP W8, W9
	0x032A6460 CSET W0, NE
	0x032A6464 LDR X30, [X31], #0x10
	0x032A6468 RET
	0x032A646C STR W9, [X0 + 0x24]
	0x032A6470 BL 0x1C16F20
	0x032A6474 STR W9, [X0 + 0x24]
	0x032A6478 BL 0x1C16F28
	0x032A647C BL 0x1C16F20
	0x032A6480 STR X30, [X31 - 0x30]!
	0x032A6484 STP X22, X21, [X31 + 0x10]
	0x032A6488 STP X20, X19, [X31 + 0x20]
	0x032A648C MOV X22, X1
	0x032A6490 MOV X1, X2
	0x032A6494 MOV X21, X3
	0x032A6498 MOV X20, X2
	0x032A649C MOV X19, X0
	0x032A64A0 BL 0x32A3720
	0x032A64A4 CBZ X0, 0x32A6508
	0x032A64A8 LDR W8, [X0 + 0x50]
	0x032A64AC ANDS W31, W8, 0x6
	0x032A64B0 B.EQ 0x32A64C8
	0x032A64B4 TBNZ X8, 0xE, 0x32A64C8
	0x032A64B8 CBZ X22, 0x32A6508
	0x032A64BC LDR W8, [X22 + 0x20]
	0x032A64C0 CMP W8, 0x2
	0x032A64C4 B.EQ 0x32A650C
	0x032A64C8 MOV X1, X22
	0x032A64CC MOV X2, X19
	0x032A64D0 BL 0x32A6558
	0x032A64D4 MOV X0, X19
	0x032A64D8 MOV X1, X21
	0x032A64DC BL 0x32A3720
	0x032A64E0 CBZ X0, 0x32A6508
	0x032A64E4 MOV X1, X20
	0x032A64E8 BL 0x32A6614
	0x032A64EC LDR X8, [X19 + 0x38]
	0x032A64F0 LDP X22, X21, [X31 + 0x10]
	0x032A64F4 ADD X8, X8, 0x1

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X25, 0x1137000
	012 Move X26, 0xE7F000
	013 Move W8, [X25+1926]
	014 Move X26, [X26+3312]
	015 Move X19, X5
	016 Move X21, X4
	017 Move X22, X3
	018 Move X23, X2
	019 Move X24, X1
	020 Move X20, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0xE77000
	026 Move X0, [X0+936]
	027 Call 0x1C17CF4
	028 Move X0, 0xE7F000
	029 Move X0, [X0+3312]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X25+1926], W8
	033 Move X0, [X26]
	034 Call 0x1C17F10
	035 Move X25, X0
	036 Compare X19, 0
	037 JumpIfEqual {49}
	038 Move X9, 0xE77000
	039 Move X9, [X9+936]
	040 Move X8, [X19]
	041 Move X1, [X9]
	042 Move W10, [X8+304]
	043 Move W9, [X1+304]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X8, [X8+200]
	046 Add X8, X8, X9
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X0, X25
	050 Move X1, X24
	051 Move X2, X23
	052 Move X3, X22
	053 Move X4, X31
	054 Move X5, X21
	055 Move X6, X19
	056 Move X7, X31
	057 Call ObjectHolder..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	058 Move X0, X20
	059 Move X1, X25
	060 Move X20, [X31+80]
	061 Move X19, [X31+88]
	062 Move X22, [X31+64]
	063 Move X21, [X31+72]
	064 Move X24, [X31+48]
	065 Move X23, [X31+56]
	066 Move X26, [X31+32]
	067 Move X25, [X31+40]
	068 Move X30, [X31+16]
	069 Add X31, X31, 96
	070 Call ObjectManager.AddObjectHolder, X0, X1
	071 Return 
	072 Move X0, X19
	073 Call 0x1C181E0

Method: System.Void RegisterObject(System.Object obj, System.Int64 objectID, System.Runtime.Serialization.SerializationInfo info, System.Int64 idOfContainingObj, System.Reflection.MemberInfo member, System.Int32[] arrayIndex)

Disassembly:
	0x032A65D4 LDRB W9, [X20 + 0x50]
	0x032A65D8 ADD W8, W8, 0x1
	0x032A65DC STR W8, [X20 + 0x20]
	0x032A65E0 TBNZ X9, 0x3, 0x32A65F4
	0x032A65E4 LDP X20, X19, [X31 + 0x20]
	0x032A65E8 LDP X22, X21, [X31 + 0x10]
	0x032A65EC LDR X30, [X31], #0x30
	0x032A65F0 RET
	0x032A65F4 MOV X0, X20
	0x032A65F8 MOV X2, X19
	0x032A65FC LDP X20, X19, [X31 + 0x20]
	0x032A6600 LDP X22, X21, [X31 + 0x10]
	0x032A6604 MOVZ W1, 0x1
	0x032A6608 LDR X30, [X31], #0x30
	0x032A660C B 0x32A6E64
	0x032A6610 BL 0x1C16F20
	0x032A6614 STP X30, X21, [X31 - 0x20]!
	0x032A6618 STP X20, X19, [X31 + 0x10]
	0x032A661C ADRP X21, 0x1136000
	0x032A6620 LDRB W8, [X21 + 0x795]
	0x032A6624 MOV X19, X1
	0x032A6628 MOV X20, X0
	0x032A662C TBNZ X8, 0x0, 0x32A6644
	0x032A6630 ADRP X0, 0xE7E000
	0x032A6634 LDR X0, [X0 + 0xE38]
	0x032A6638 BL 0x1C16CF4
	0x032A663C MOVZ W8, 0x1
	0x032A6640 STRB W8, [X21 + 0x795]
	0x032A6644 LDR X21, [X20 + 0x40]
	0x032A6648 CBNZ X21, 0x32A6670
	0x032A664C ADRP X8, 0xE7E000
	0x032A6650 LDR X8, [X8 + 0xE38]
	0x032A6654 LDR X0, [X8]
	0x032A6658 BL 0x1C16F10
	0x032A665C MOVZ W1, 0x2
	0x032A6660 MOV X21, X0
	0x032A6664 BL 0x32A71F8
	0x032A6668 STR X21, [X20 + 0x40]
	0x032A666C CBZ X21, 0x32A6684
	0x032A6670 MOV X1, X19
	0x032A6674 LDP X20, X19, [X31 + 0x10]
	0x032A6678 MOV X0, X21
	0x032A667C LDP X30, X21, [X31], #0x20
	0x032A6680 B 0x32A6F78
	0x032A6684 BL 0x1C16F20
	0x032A6688 STP X30, X23, [X31 - 0x30]!
	0x032A668C STP X22, X21, [X31 + 0x10]
	0x032A6690 STP X20, X19, [X31 + 0x20]
	0x032A6694 ADRP X23, 0x1136000
	0x032A6698 LDRB W8, [X23 + 0x78B]
	0x032A669C MOV X21, X3
	0x032A66A0 MOV X19, X2
	0x032A66A4 MOV X20, X1
	0x032A66A8 MOV X22, X0
	0x032A66AC TBNZ X8, 0x0, 0x32A66DC
	0x032A66B0 ADRP X0, 0xE7E000
	0x032A66B4 LDR X0, [X0 + 0xE40]
	0x032A66B8 BL 0x1C16CF4
	0x032A66BC ADRP X0, 0xE7E000
	0x032A66C0 LDR X0, [X0 + 0xBB0]
	0x032A66C4 BL 0x1C16CF4
	0x032A66C8 ADRP X0, 0xE7E000
	0x032A66CC LDR X0, [X0 + 0xBB8]
	0x032A66D0 BL 0x1C16CF4
	0x032A66D4 MOVZ W8, 0x1
	0x032A66D8 STRB W8, [X23 + 0x78B]
	0x032A66DC CMP X21, 0x1
	0x032A66E0 B.LT 0x32A6850
	0x032A66E4 CMP X20, 0x0
	0x032A66E8 B.LE 0x32A6850
	0x032A66EC MOV X0, X19
	0x032A66F0 MOV X1, X31
	0x032A66F4 MOV X2, X31
	0x032A66F8 BL 0x32BE96C
	0x032A66FC TBNZ X0, 0x0, 0x32A68C4
	0x032A6700 CBZ X19, 0x32A6794
	0x032A6704 ADRP X9, 0xE7E000
	0x032A6708 LDR X9, [X9 + 0xBB0]
	0x032A670C LDR X8, [X19]
	0x032A6710 LDR X9, [X9]
	0x032A6714 LDRB W11, [X8 + 0x130]
	0x032A6718 LDRB W10, [X9 + 0x130]
	0x032A671C CMP W11, W10
	0x032A6720 B.CC 0x32A6738
	0x032A6724 LDR X11, [X8 + 0xC8]
	0x032A6728 ADD X10, X11, X10, 0x3, LSL
	0x032A672C LDUR X10, [X10 - 0x8]
	0x032A6730 CMP X10, X9
	0x032A6734 B.EQ 0x32A674C
	0x032A6738 ADRP X9, 0xE7E000
	0x032A673C LDR X9, [X9 + 0xBB8]
	0x032A6740 LDR X9, [X9]
	0x032A6744 CMP X8, X9
	0x032A6748 B.NE 0x32A6794
	0x032A674C ADRP X8, 0xE7E000
	0x032A6750 LDR X8, [X8 + 0xE40]
	0x032A6754 LDR X0, [X8]
	0x032A6758 BL 0x1C16F10
	0x032A675C MOV X1, X31
	0x032A6760 MOV X23, X0
	0x032A6764 BL 0x33BDD8C
	0x032A6768 STP X21, X19, [X23 + 0x10]
	0x032A676C MOV X0, X22
	0x032A6770 MOV X2, X20
	0x032A6774 MOV X3, X21
	0x032A6778 LDP X20, X19, [X31 + 0x20]
	0x032A677C LDP X22, X21, [X31 + 0x10]
	0x032A6780 MOVZ W8, 0x2
	0x032A6784 STR W8, [X23 + 0x20]
	0x032A6788 MOV X1, X23
	0x032A678C LDP X30, X23, [X31], #0x30
	0x032A6790 B 0x32A6480
	0x032A6794 ADRP X0, 0xE4D000
	0x032A6798 LDR X0, [X0 + 0x9D0]
	0x032A679C BL 0x1C16D08
	0x032A67A0 MOVZ W1, 0x1
	0x032A67A4 BL 0x1C16D6C
	0x032A67A8 MOV X20, X0
	0x032A67AC MOV X0, X19
	0x032A67B0 BL 0x19903C0
	0x032A67B4 MOV X0, X19
	0x032A67B8 MOV X1, X31
	0x032A67BC BL 0x33BE520
	0x032A67C0 MOV X19, X0
	0x032A67C4 BL 0x19903C0
	0x032A67C8 LDR X8, [X19]
	0x032A67CC MOV X0, X19
	0x032A67D0 LDP X9, X1, [X8 + 0x168]
	0x032A67D4 BLR X9
	0x032A67D8 MOV X19, X0
	0x032A67DC MOV X0, X20
	0x032A67E0 BL 0x19903C0
	0x032A67E4 MOV X0, X20
	0x032A67E8 MOV X1, X19
	0x032A67EC BL 0x19980B4
	0x032A67F0 MOV X0, X20
	0x032A67F4 MOV X1, X31
	0x032A67F8 MOV X2, X19
	0x032A67FC BL 0x1993444
	0x032A6800 ADRP X0, 0xE7E000
	0x032A6804 LDR X0, [X0 + 0xC08]
	0x032A6808 BL 0x1C16D08
	0x032A680C MOV X1, X20
	0x032A6810 MOV X2, X31
	0x032A6814 BL 0x33BFB40
	0x032A6818 MOV X19, X0
	0x032A681C ADRP X0, 0xE77000
	0x032A6820 LDR X0, [X0 + 0x2E0]
	0x032A6824 BL 0x1C16D08
	0x032A6828 BL 0x1C16F10
	0x032A682C MOV X1, X19
	0x032A6830 MOV X20, X0
	0x032A6834 BL 0x329F100
	0x032A6838 ADRP X0, 0xE7E000
	0x032A683C LDR X0, [X0 + 0xE48]
	0x032A6840 BL 0x1C16D08
	0x032A6844 MOV X1, X0
	0x032A6848 MOV X0, X20
	0x032A684C BL 0x1C16DEC
	0x032A6850 ADRP X8, 0xE7E000
	0x032A6854 ADRP X9, 0xE7E000
	0x032A6858 LDR X8, [X8 + 0xE50]
	0x032A685C LDR X9, [X9 + 0xE58]
	0x032A6860 CMP X20, 0x1
	0x032A6864 CSEL X0, X9, X8, LT
	0x032A6868 BL 0x1C16D08
	0x032A686C MOV X19, X0
	0x032A6870 ADRP X0, 0xE7E000
	0x032A6874 LDR X0, [X0 + 0xE60]
	0x032A6878 BL 0x1C16D08
	0x032A687C MOV X1, X31
	0x032A6880 BL 0x33BDD84
	0x032A6884 MOV X20, X0
	0x032A6888 ADRP X0, 0xE55000
	0x032A688C LDR X0, [X0 + 0x760]
	0x032A6890 BL 0x1C16D08
	0x032A6894 BL 0x1C16F10
	0x032A6898 MOV X1, X19
	0x032A689C MOV X2, X20
	0x032A68A0 MOV X3, X31
	0x032A68A4 MOV X21, X0
	0x032A68A8 BL 0x3311888
	0x032A68AC ADRP X0, 0xE7E000
	0x032A68B0 LDR X0, [X0 + 0xE48]
	0x032A68B4 BL 0x1C16D08
	0x032A68B8 MOV X1, X0
	0x032A68BC MOV X0, X21
	0x032A68C0 BL 0x1C16DEC
	0x032A68C4 ADRP X0, 0xE52000
	0x032A68C8 LDR X0, [X0 + 0x528]
	0x032A68CC BL 0x1C16D08
	0x032A68D0 BL 0x1C16F10
	0x032A68D4 MOV X19, X0
	0x032A68D8 ADRP X0, 0xE7E000
	0x032A68DC LDR X0, [X0 + 0xE68]
	0x032A68E0 BL 0x1C16D08
	0x032A68E4 MOV X1, X0
	0x032A68E8 MOV X0, X19
	0x032A68EC MOV X2, X31
	0x032A68F0 BL 0x330E100
	0x032A68F4 ADRP X0, 0xE7E000
	0x032A68F8 LDR X0, [X0 + 0xE48]
	0x032A68FC BL 0x1C16D08
	0x032A6900 MOV X1, X0
	0x032A6904 MOV X0, X19
	0x032A6908 BL 0x1C16DEC
	0x032A690C STR X30, [X31 - 0x30]!
	0x032A6910 STP X22, X21, [X31 + 0x10]
	0x032A6914 STP X20, X19, [X31 + 0x20]
	0x032A6918 MOV X21, X1
	0x032A691C MOV X1, X31
	0x032A6920 MOV W19, W3
	0x032A6924 MOV X20, X2
	0x032A6928 MOV X22, X0
	0x032A692C BL 0x33BDD8C
	0x032A6930 STP X21, X20, [X22 + 0x10]
	0x032A6934 STR W19, [X22 + 0x20]
	0x032A6938 LDP X20, X19, [X31 + 0x20]
	0x032A693C LDP X22, X21, [X31 + 0x10]
	0x032A6940 LDR X30, [X31], #0x30
	0x032A6944 RET
	0x032A6948 STP X30, X23, [X31 - 0x30]!
	0x032A694C STP X22, X21, [X31 + 0x10]
	0x032A6950 STP X20, X19, [X31 + 0x20]
	0x032A6954 ADRP X23, 0x1136000
	0x032A6958 LDRB W8, [X23 + 0x78C]
	0x032A695C MOV X20, X3
	0x032A6960 MOV X21, X2
	0x032A6964 MOV X19, X1
	0x032A6968 MOV X22, X0
	0x032A696C TBNZ X8, 0x0, 0x32A6984
	0x032A6970 ADRP X0, 0xE7E000
	0x032A6974 LDR X0, [X0 + 0xE40]
	0x032A6978 BL 0x1C16CF4
	0x032A697C MOVZ W8, 0x1
	0x032A6980 STRB W8, [X23 + 0x78C]
	0x032A6984 CMP X20, 0x1
	0x032A6988 B.LT 0x32A69E0
	0x032A698C CMP X19, 0x0
	0x032A6990 B.LE 0x32A69E0
	0x032A6994 CBZ X21, 0x32A6A54
	0x032A6998 ADRP X8, 0xE7E000
	0x032A699C LDR X8, [X8 + 0xE40]
	0x032A69A0 LDR X0, [X8]
	0x032A69A4 BL 0x1C16F10
	0x032A69A8 MOV X1, X31
	0x032A69AC MOV X23, X0
	0x032A69B0 BL 0x33BDD8C
	0x032A69B4 STP X20, X21, [X23 + 0x10]
	0x032A69B8 MOV X0, X22
	0x032A69BC MOV X2, X19
	0x032A69C0 MOV X3, X20
	0x032A69C4 LDP X20, X19, [X31 + 0x20]
	0x032A69C8 LDP X22, X21, [X31 + 0x10]
	0x032A69CC MOVZ W8, 0x4
	0x032A69D0 STR W8, [X23 + 0x20]
	0x032A69D4 MOV X1, X23
	0x032A69D8 LDP X30, X23, [X31], #0x30
	0x032A69DC B 0x32A6480
	0x032A69E0 ADRP X8, 0xE7E000
	0x032A69E4 ADRP X9, 0xE7E000
	0x032A69E8 LDR X8, [X8 + 0xE50]
	0x032A69EC LDR X9, [X9 + 0xE58]
	0x032A69F0 CMP X19, 0x1
	0x032A69F4 CSEL X0, X9, X8, LT
	0x032A69F8 BL 0x1C16D08
	0x032A69FC MOV X19, X0
	0x032A6A00 ADRP X0, 0xE7E000
	0x032A6A04 LDR X0, [X0 + 0xE60]
	0x032A6A08 BL 0x1C16D08
	0x032A6A0C MOV X1, X31
	0x032A6A10 BL 0x33BDD84
	0x032A6A14 MOV X20, X0
	0x032A6A18 ADRP X0, 0xE55000
	0x032A6A1C LDR X0, [X0 + 0x760]
	0x032A6A20 BL 0x1C16D08
	0x032A6A24 BL 0x1C16F10
	0x032A6A28 MOV X1, X19
	0x032A6A2C MOV X2, X20
	0x032A6A30 MOV X3, X31
	0x032A6A34 MOV X21, X0
	0x032A6A38 BL 0x3311888
	0x032A6A3C ADRP X0, 0xE7E000
	0x032A6A40 LDR X0, [X0 + 0xE70]
	0x032A6A44 BL 0x1C16D08
	0x032A6A48 MOV X1, X0
	0x032A6A4C MOV X0, X21
	0x032A6A50 BL 0x1C16DEC
	0x032A6A54 ADRP X0, 0xE52000
	0x032A6A58 LDR X0, [X0 + 0x528]
	0x032A6A5C BL 0x1C16D08
	0x032A6A60 BL 0x1C16F10
	0x032A6A64 MOV X19, X0
	0x032A6A68 ADRP X0, 0xE7E000
	0x032A6A6C LDR X0, [X0 + 0xE78]
	0x032A6A70 BL 0x1C16D08
	0x032A6A74 MOV X1, X0
	0x032A6A78 MOV X0, X19
	0x032A6A7C MOV X2, X31
	0x032A6A80 BL 0x330E100
	0x032A6A84 ADRP X0, 0xE7E000
	0x032A6A88 LDR X0, [X0 + 0xE70]
	0x032A6A8C BL 0x1C16D08
	0x032A6A90 MOV X1, X0
	0x032A6A94 MOV X0, X19
	0x032A6A98 BL 0x1C16DEC
	0x032A6A9C STP X30, X23, [X31 - 0x30]!
	0x032A6AA0 STP X22, X21, [X31 + 0x10]
	0x032A6AA4 STP X20, X19, [X31 + 0x20]
	0x032A6AA8 ADRP X23, 0x1136000
	0x032A6AAC LDRB W8, [X23 + 0x78D]
	0x032A6AB0 MOV X20, X3
	0x032A6AB4 MOV X21, X2
	0x032A6AB8 MOV X19, X1
	0x032A6ABC MOV X22, X0
	0x032A6AC0 TBNZ X8, 0x0, 0x32A6AD8
	0x032A6AC4 ADRP X0, 0xE7E000
	0x032A6AC8 LDR X0, [X0 + 0xE40]
	0x032A6ACC BL 0x1C16CF4
	0x032A6AD0 MOVZ W8, 0x1
	0x032A6AD4 STRB W8, [X23 + 0x78D]
	0x032A6AD8 CMP X20, 0x1
	0x032A6ADC B.LT 0x32A6B34
	0x032A6AE0 CMP X19, 0x0
	0x032A6AE4 B.LE 0x32A6B34
	0x032A6AE8 CBZ X21, 0x32A6BA8
	0x032A6AEC ADRP X8, 0xE7E000
	0x032A6AF0 LDR X8, [X8 + 0xE40]
	0x032A6AF4 LDR X0, [X8]
	0x032A6AF8 BL 0x1C16F10
	0x032A6AFC MOV X1, X31
	0x032A6B00 MOV X23, X0
	0x032A6B04 BL 0x33BDD8C
	0x032A6B08 STP X20, X21, [X23 + 0x10]
	0x032A6B0C MOV X0, X22
	0x032A6B10 MOV X2, X19
	0x032A6B14 MOV X3, X20
	0x032A6B18 LDP X20, X19, [X31 + 0x20]
	0x032A6B1C LDP X22, X21, [X31 + 0x10]
	0x032A6B20 MOVZ W8, 0x1
	0x032A6B24 STR W8, [X23 + 0x20]
	0x032A6B28 MOV X1, X23
	0x032A6B2C LDP X30, X23, [X31], #0x30
	0x032A6B30 B 0x32A6480
	0x032A6B34 ADRP X8, 0xE7E000
	0x032A6B38 ADRP X9, 0xE7E000
	0x032A6B3C LDR X8, [X8 + 0xE50]
	0x032A6B40 LDR X9, [X9 + 0xE58]
	0x032A6B44 CMP X19, 0x1
	0x032A6B48 CSEL X0, X9, X8, LT
	0x032A6B4C BL 0x1C16D08
	0x032A6B50 MOV X19, X0
	0x032A6B54 ADRP X0, 0xE7E000
	0x032A6B58 LDR X0, [X0 + 0xE60]
	0x032A6B5C BL 0x1C16D08
	0x032A6B60 MOV X1, X31
	0x032A6B64 BL 0x33BDD84
	0x032A6B68 MOV X20, X0
	0x032A6B6C ADRP X0, 0xE55000
	0x032A6B70 LDR X0, [X0 + 0x760]
	0x032A6B74 BL 0x1C16D08
	0x032A6B78 BL 0x1C16F10

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X26, 0x1137000
	015 Move W8, [X26+1927]
	016 Move X25, X6
	017 Move X21, X5
	018 Move X22, X4
	019 Move X23, X3
	020 Move X24, X2
	021 Move X19, X1
	022 Move X20, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {59}
	027 Move X0, 0xE7F000
	028 Move X0, [X0+3528]
	029 Call 0x1C17CF4
	030 Move X0, 0xE77000
	031 Move X0, [X0+936]
	032 Call 0x1C17CF4
	033 Move X0, 0xE7F000
	034 Move X0, [X0+3536]
	035 Call 0x1C17CF4
	036 Move X0, 0xE7F000
	037 Move X0, [X0+2528]
	038 Call 0x1C17CF4
	039 Move X0, 0xE4F000
	040 Move X0, [X0+3672]
	041 Call 0x1C17CF4
	042 Move X0, 0xE7E000
	043 Move X0, [X0+3584]
	044 Call 0x1C17CF4
	045 Move X0, 0xE7F000
	046 Move X0, [X0+3312]
	047 Call 0x1C17CF4
	048 Move X0, 0xE7F000
	049 Move X0, [X0+2992]
	050 Call 0x1C17CF4
	051 Move X0, 0xE7F000
	052 Move X0, [X0+3000]
	053 Call 0x1C17CF4
	054 Move X0, 0xE4E000
	055 Move X0, [X0+1728]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X26+1927], W8
	059 Move [X31+8], X31
	060 Compare X19, 0
	061 JumpIfEqual {327}
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X0, X21
	064 Move X1, X31
	065 Move X2, X31
	066 Call MemberInfo.op_Inequality, X0, X1
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {88}
	071 Compare X21, 0
	072 JumpIfEqual {364}
	073 Move X9, 0xE7F000
	074 Move X9, [X9+2992]
	075 Move X8, [X21]
	076 Move X9, [X9]
	077 Move W11, [X8+304]
	078 Move W10, [X9+304]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X11, [X8+200]
	081 Add X10, X11, X10
	082 NotImplemented "Instruction LDUR not yet implemented."
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X9, 0xE7F000
	085 Move X9, [X9+3000]
	086 Move X9, [X9]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X8, [X20+64]
	089 Compare X8, 0
	090 JumpIfEqual {116}
	091 Move X0, X19
	092 Move X1, X31
	093 Call "il2cpp_vm_object_is_inst", X0
	094 Move X26, [X20+64]
	095 Compare X26, 0
	096 JumpIfEqual {324}
	097 Move X10, 0xE7F000
	098 Move X8, [X26]
	099 Move X10, [X10+2528]
	100 Move X29, [X20+72]
	101 Move X28, [X20+80]
	102 Move X27, X0
	103 NotImplemented "Instruction LDRH not yet implemented."
	104 Move X1, [X10]
	105 Compare X9, 0
	106 JumpIfEqual {113}
	107 Move X10, [X8+176]
	108 Add X10, X10, 8
	109 NotImplemented "Instruction LDUR not yet implemented."
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Subtract X9, X9, 1
	112 Add X10, X10, 16
	113 Move X0, X26
	114 Move W2, W31
	115 Call 0x1C5D788
	116 Move X26, X31
	117 NotImplemented "Instruction LDRSW not yet implemented."
	118 Add X8, X8, X9
	119 Add X0, X8, 312
	120 Move X8, [X0]
	121 Move X5, [X0+8]
	122 Add X4, X31, 8
	123 Move X0, X26
	124 Move X1, X27
	125 Move X2, X29
	126 Move X3, X28
	127 NotImplemented "Instruction BLR not yet implemented."
	128 Move X26, X0
	129 Move X29, 0xE7F000
	130 Move X29, [X29+3536]
	131 Move X0, X19
	132 Move X1, [X29]
	133 Call 0x1C17E00
	134 Compare X0, 0
	135 JumpIfEqual {175}
	136 Move X28, [X29]
	137 Move X0, X19
	138 Move X1, X28
	139 Call 0x1C17E00
	140 Compare X0, 0
	141 JumpIfEqual {366}
	142 Move X8, 0xE7F000
	143 Move X8, [X8+3528]
	144 Move X27, X0
	145 Move X0, [X8]
	146 Call 0x1C17F10
	147 Move X8, [X27]
	148 Move X1, [X29]
	149 Move X28, X0
	150 NotImplemented "Instruction LDRH not yet implemented."
	151 Compare X9, 0
	152 JumpIfEqual {159}
	153 Move X10, [X8+176]
	154 Add X10, X10, 8
	155 NotImplemented "Instruction LDUR not yet implemented."
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Subtract X9, X9, 1
	158 Add X10, X10, 16
	159 Move X0, X27
	160 Move W2, W31
	161 Call 0x1C5D788
	162 NotImplemented "Instruction LDRSW not yet implemented."
	163 Add X8, X8, X9
	164 Add X0, X8, 312
	165 Move X2, [X0+8]
	166 Move X0, X28
	167 Move X1, X27
	168 Call DeserializationEventHandler..ctor, X0, X1, X2
	169 Move X8, [X20]
	170 Move X0, X20
	171 Move X1, X28
	172 Move X9, [X8+472]
	173 Move X2, [X8+480]
	174 NotImplemented "Instruction BLR not yet implemented."
	175 Compare X25, 0
	176 JumpIfEqual {192}
	177 Move X0, X25
	178 Move X1, X31
	179 Call Array.Clone, X0
	180 Compare X0, 0
	181 JumpIfEqual {192}
	182 Move X8, 0xE4F000
	183 Move X8, [X8+3672]
	184 Move X25, X0
	185 Move X28, [X8]
	186 Move X1, X28
	187 Call 0x1C17E00
	188 Move X27, X0
	189 Compare X0, 0
	190 JumpIfNotEqual {193}
	191 Move X0, X25
	192 Move X27, X31
	193 Move X28, 0xE77000
	194 Move X28, [X28+936]
	195 Move X0, X20
	196 Move X1, X24
	197 Call ObjectManager.FindObjectHolder, X0, X1
	198 Compare X0, 0
	199 JumpIfEqual {263}
	200 Move X8, [X0+16]
	201 Move X25, X0
	202 Compare X8, 0
	203 JumpIfNotEqual {369}
	204 Compare X21, 0
	205 JumpIfEqual {215}
	206 Move X8, [X21]
	207 Move X1, [X28]
	208 Move W10, [X8+304]
	209 Move W9, [X1+304]
	210 NotImplemented "Instruction CMP not yet implemented."
	211 Move X8, [X8+200]
	212 Add X8, X8, X9
	213 NotImplemented "Instruction LDUR not yet implemented."
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Move X0, X25
	216 Move X1, X19
	217 Move X2, X23
	218 Move X3, X26
	219 Move X4, X22
	220 Move X5, X21
	221 Move X6, X27
	222 Move X7, X20
	223 Call ObjectHolder.UpdateData, X0, X1, X2, X3, X4, X5, X6, X7
	224 Move W8, [X25+32]
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Move X0, X20
	227 Move X1, X25
	228 Move W2, W31
	229 Call ObjectManager.CompleteObject, X0, X1, X2
	230 Move W8, [X25+80]
	231 And W31, W8, 7
	232 Move X0, X20
	233 Call ObjectManager.get_SpecialFixupObjects, X0
	234 Compare X0, 0
	235 JumpIfEqual {324}
	236 Move X8, [X0]
	237 Move X1, X25
	238 Move X9, [X8+376]
	239 Move X2, [X8+384]
	240 NotImplemented "Instruction BLR not yet implemented."
	241 Move W8, [X25+80]
	242 And W31, W8, 6
	243 NotImplemented "Instruction CSET not yet implemented."
	244 Move TEMP, X8
	245 And TEMP, TEMP, 1
	246 Compare TEMP, 1
	247 JumpIfEqual {256}
	248 And W8, W8, 0x4000
	249 Or W8, W9, W8
	250 Compare W8, 0
	251 JumpIfEqual {256}
	252 Move X0, X20
	253 Move X1, X25
	254 Call ObjectManager.DoNewlyRegisteredObjectFixups, X0, X1
	255 Move [X25+64], X31
	256 Move W9, [X25+32]
	257 Move W10, [X25+36]
	258 Move X8, [X20]
	259 Add W9, W10, W9
	260 NotImplemented "Instruction CMP not yet implemented."
	261 Move X9, [X8+504]
	262 Move X2, [X8+512]
	263 Move X8, 0xE7F000
	264 Move X8, [X8+3312]
	265 Move X0, [X8]
	266 Call 0x1C17F10
	267 Move X25, X0
	268 Compare X21, 0
	269 JumpIfEqual {279}
	270 Move X8, [X21]
	271 Move X1, [X28]
	272 Move W10, [X8+304]
	273 Move W9, [X1+304]
	274 NotImplemented "Instruction CMP not yet implemented."
	275 Move X8, [X8+200]
	276 Add X8, X8, X9
	277 NotImplemented "Instruction LDUR not yet implemented."
	278 NotImplemented "Instruction CMP not yet implemented."
	279 Move X0, X25
	280 Move X1, X19
	281 Move X2, X24
	282 Move X3, X23
	283 Move X4, X26
	284 Move X5, X22
	285 Move X6, X21
	286 Move X7, X27
	287 Call ObjectHolder..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	288 Move X0, X20
	289 Move X1, X25
	290 Call ObjectManager.AddObjectHolder, X0, X1
	291 Compare X25, 0
	292 JumpIfEqual {324}
	293 Move W8, [X25+80]
	294 And W31, W8, 7
	295 Move X0, X20
	296 Call ObjectManager.get_SpecialFixupObjects, X0
	297 Compare X0, 0
	298 JumpIfEqual {324}
	299 Move X8, [X0]
	300 Move X1, X25
	301 Move X9, [X8+376]
	302 Move X2, [X8+384]
	303 NotImplemented "Instruction BLR not yet implemented."
	304 Move X8, [X20]
	305 Move X9, [X8+488]
	306 Move X2, [X8+496]
	307 Move X0, X20
	308 Move X1, X19
	309 NotImplemented "Instruction BLR not yet implemented."
	310 Move X20, [X31+96]
	311 Move X19, [X31+104]
	312 Move X22, [X31+80]
	313 Move X21, [X31+88]
	314 Move X24, [X31+64]
	315 Move X23, [X31+72]
	316 Move X26, [X31+48]
	317 Move X25, [X31+56]
	318 Move X28, [X31+32]
	319 Move X27, [X31+40]
	320 Move X29, [X31+16]
	321 Move X30, [X31+24]
	322 Add X31, X31, 112
	323 Return 
	324 Call 0x1C17F20
	325 Move X0, X21
	326 Call 0x1C181E0
	327 Move X0, 0xE53000
	328 Move X0, [X0+1320]
	329 Call 0x1C17D08
	330 Call 0x1C17F10
	331 Move X19, X0
	332 Move X0, 0xE59000
	333 Move X0, [X0+2216]
	334 Call 0x1C17D08
	335 Move X1, X0
	336 Move X0, X19
	337 Move X2, X31
	338 Call ArgumentNullException..ctor, X0, X1
	339 Move X0, 0xE7F000
	340 Move X0, [X0+3544]
	341 Call 0x1C17D08
	342 Move X1, X0
	343 Move X0, X19
	344 Call 0x1C17DEC
	345 Move X0, 0xE7F000
	346 Move X0, [X0+3496]
	347 Call 0x1C17D08
	348 Move X1, X31
	349 Call Environment.GetResourceString, X0
	350 Move X19, X0
	351 Move X0, 0xE56000
	352 Move X0, [X0+1888]
	353 Call 0x1C17D08
	354 Call 0x1C17F10
	355 Move X20, X0
	356 Move X0, 0xE7F000
	357 Move X0, [X0+3504]
	358 Call 0x1C17D08
	359 Move X1, X0
	360 Move X0, X20
	361 Move X2, X19
	362 Move X3, X31
	363 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	364 Move X0, 0xE7F000
	365 Move X0, [X0+3144]
	366 Move X0, X19
	367 Move X1, X28
	368 Call 0x1C181E0
	369 Move X0, 0xE7F000
	370 Move X0, [X0+3552]
	371 Call 0x1C17D08
	372 Move X1, X31
	373 Call Environment.GetResourceString, X0
	374 Move X19, X0
	375 Move X0, 0xE78000
	376 Move X0, [X0+736]
	377 Call 0x1C17D08
	378 Call 0x1C17F10
	379 Move X1, X19
	380 Move X20, X0
	381 Call SerializationException..ctor, X0, X1
	382 Move X0, 0xE7F000
	383 Move X0, [X0+3544]
	384 Call 0x1C17D08
	385 Move X1, X0
	386 Move X0, X20
	387 Call 0x1C17DEC

Method: System.Void CompleteISerializableObject(System.Object obj, System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x032A5078 LDR X9, [X20 + 0x38]
	0x032A507C CMP W8, W25
	0x032A5080 SUB X9, X9, W25, SXTW
	0x032A5084 STR X9, [X20 + 0x38]
	0x032A5088 B.NE 0x32A5090
	0x032A508C STR X31, [X19 + 0x38]
	0x032A5090 LDP X20, X19, [X31 + 0x70]
	0x032A5094 LDP X22, X21, [X31 + 0x60]
	0x032A5098 LDP X24, X23, [X31 + 0x50]
	0x032A509C LDP X26, X25, [X31 + 0x40]
	0x032A50A0 LDP X28, X27, [X31 + 0x30]
	0x032A50A4 LDP X29, X30, [X31 + 0x20]
	0x032A50A8 ADD X31, X31, 0x80
	0x032A50AC RET
	0x032A50B0 BL 0x1C16F20
	0x032A50B4 BL 0x1C16F28
	0x032A50B8 MOV X0, X22
	0x032A50BC BL 0x1C171E0
	0x032A50C0 MOV X0, X24
	0x032A50C4 BL 0x1C171E0
	0x032A50C8 ADRP X0, 0xE7F000
	0x032A50CC LDR X0, [X0 + 0xD78]
	0x032A50D0 B 0x32A51D4
	0x032A50D4 ADRP X0, 0xE4E000
	0x032A50D8 LDR X0, [X0 + 0x9D0]
	0x032A50DC BL 0x1C16D08
	0x032A50E0 MOVZ W1, 0x1
	0x032A50E4 BL 0x1C16D6C
	0x032A50E8 MOV X20, X0
	0x032A50EC MOV X0, X19
	0x032A50F0 BL 0x19903C0
	0x032A50F4 LDR X8, [X19 + 0x18]
	0x032A50F8 ADRP X0, 0xE50000
	0x032A50FC STR X8, [X31 + 0x8]
	0x032A5100 LDR X0, [X0 + 0xA60]
	0x032A5104 BL 0x1C16D08
	0x032A5108 ADD X1, X31, 0x8
	0x032A510C BL 0x1C16E04
	0x032A5110 MOV X19, X0
	0x032A5114 MOV X0, X20
	0x032A5118 BL 0x19903C0
	0x032A511C MOV X0, X20
	0x032A5120 MOV X1, X19
	0x032A5124 BL 0x19980B4
	0x032A5128 MOV X0, X20
	0x032A512C MOV X1, X31
	0x032A5130 MOV X2, X19
	0x032A5134 BL 0x1993444
	0x032A5138 ADRP X0, 0xE7F000
	0x032A513C LDR X0, [X0 + 0xD80]
	0x032A5140 B 0x32A51A0
	0x032A5144 ADRP X0, 0xE4E000
	0x032A5148 LDR X0, [X0 + 0x9D0]
	0x032A514C BL 0x1C16D08
	0x032A5150 MOVZ W1, 0x1
	0x032A5154 BL 0x1C16D6C
	0x032A5158 MOV X20, X0
	0x032A515C MOV X0, X19
	0x032A5160 BL 0x19903C0
	0x032A5164 LDR X19, [X19 + 0x60]
	0x032A5168 MOV X0, X19
	0x032A516C BL 0x19903C0
	0x032A5170 LDR X19, [X19 + 0x10]
	0x032A5174 MOV X0, X20
	0x032A5178 BL 0x19903C0
	0x032A517C MOV X0, X20
	0x032A5180 MOV X1, X19
	0x032A5184 BL 0x19980B4
	0x032A5188 MOV X0, X20
	0x032A518C MOV X1, X31
	0x032A5190 MOV X2, X19
	0x032A5194 BL 0x1993444
	0x032A5198 ADRP X0, 0xE7F000
	0x032A519C LDR X0, [X0 + 0xD88]
	0x032A51A0 BL 0x1C16D08
	0x032A51A4 MOV X1, X20
	0x032A51A8 MOV X2, X31
	0x032A51AC BL 0x33BFB40
	0x032A51B0 B 0x32A51E0
	0x032A51B4 ADRP X0, 0xE7F000
	0x032A51B8 LDR X0, [X0 + 0xD90]
	0x032A51BC B 0x32A51D4
	0x032A51C0 MOV X0, X24
	0x032A51C4 MOV X1, X25
	0x032A51C8 BL 0x1C171E0
	0x032A51CC ADRP X0, 0xE7F000
	0x032A51D0 LDR X0, [X0 + 0xD98]
	0x032A51D4 BL 0x1C16D08
	0x032A51D8 MOV X1, X31
	0x032A51DC BL 0x33BDD84
	0x032A51E0 MOV X19, X0
	0x032A51E4 ADRP X0, 0xE78000
	0x032A51E8 LDR X0, [X0 + 0x2E0]
	0x032A51EC BL 0x1C16D08
	0x032A51F0 BL 0x1C16F10
	0x032A51F4 MOV X1, X19
	0x032A51F8 MOV X20, X0
	0x032A51FC BL 0x329F100
	0x032A5200 ADRP X0, 0xE7F000
	0x032A5204 LDR X0, [X0 + 0xDA0]
	0x032A5208 BL 0x1C16D08
	0x032A520C MOV X1, X0
	0x032A5210 MOV X0, X20
	0x032A5214 BL 0x1C16DEC
	0x032A5218 LDRB W8, [X0 + 0x50]
	0x032A521C UBFM W0, W8, 0x1, 0x1
	0x032A5220 RET
	0x032A5224 LDR W8, [X0 + 0x20]
	0x032A5228 LDRB W9, [X0 + 0x50]
	0x032A522C SUB W8, W8, 0x1
	0x032A5230 STR W8, [X0 + 0x20]
	0x032A5234 TBNZ X9, 0x3, 0x32A523C
	0x032A5238 RET
	0x032A523C MOV X2, X1
	0x032A5240 MOVN W1, 0x0
	0x032A5244 B 0x32A6E64
	0x032A5248 STR X30, [X31 - 0x10]!
	0x032A524C LDR X0, [X0 + 0x40]
	0x032A5250 CBZ X0, 0x32A525C
	0x032A5254 LDR X30, [X31], #0x10
	0x032A5258 B 0x32A6EC4
	0x032A525C BL 0x1C16F20
	0x032A5260 LDR X8, [X0 + 0x60]
	0x032A5264 CMP X8, 0x0
	0x032A5268 CSET W0, NE
	0x032A526C RET
	0x032A5270 TBZ X1, 0x0, 0x32A5280
	0x032A5274 LDR W8, [X0 + 0x50]
	0x032A5278 ORR W8, W8, 0x8000
	0x032A527C STR W8, [X0 + 0x50]
	0x032A5280 RET
	0x032A5284 MOVN W8, 0x0
	0x032A5288 STR W8, [X0 + 0x20]
	0x032A528C RET
	0x032A5290 STR X30, [X31 - 0x10]!
	0x032A5294 LDR X8, [X0 + 0x10]
	0x032A5298 CBZ X8, 0x32A52BC
	0x032A529C LDRSW X9, [X0 + 0x20]
	0x032A52A0 LDR W10, [X8 + 0x18]
	0x032A52A4 CMP W9, W10
	0x032A52A8 B.CS 0x32A52C0
	0x032A52AC ADD X8, X8, X9, 0x3, LSL
	0x032A52B0 LDR X0, [X8 + 0x20]
	0x032A52B4 LDR X30, [X31], #0x10
	0x032A52B8 RET
	0x032A52BC BL 0x1C16F20
	0x032A52C0 BL 0x1C16F28
	0x032A52C4 MOVZ W8, 0x1
	0x032A52C8 STRB W8, [X0 + 0x54]
	0x032A52CC RET
	0x032A52D0 STR X30, [X31 - 0x10]!
	0x032A52D4 LDP W8, W11, [X0 + 0x1C]
	0x032A52D8 ADD W9, W11, 0x1
	0x032A52DC CMP W8, W9
	0x032A52E0 CSINC W10, W8, W11, GT
	0x032A52E4 ADD W9, W11, 0x1
	0x032A52E8 CMP W9, W8
	0x032A52EC B.GE 0x32A531C
	0x032A52F0 LDR X12, [X0 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0x1138000
	008 Move W8, [X19+1928]
	009 Move X20, X4
	010 Move X21, X3
	011 Move X22, X2
	012 Move X23, X1
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xE7F000
	018 Move X0, [X0+3120]
	019 Call 0x1C17CF4
	020 Move X0, 0xE78000
	021 Move X0, [X0+1256]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X19+1928], W8
	025 Compare X23, 0
	026 JumpIfEqual {70}
	027 Move X8, 0xE7F000
	028 Move X8, [X8+3120]
	029 Move X0, X23
	030 Move X1, [X8]
	031 Call 0x1C17E00
	032 Compare X0, 0
	033 JumpIfEqual {88}
	034 Move X0, X23
	035 Move X1, X31
	036 Call "il2cpp_vm_object_is_inst", X0
	037 Move X19, X0
	038 Compare X0, 0
	039 JumpIfEqual {51}
	040 Move X9, 0xE78000
	041 Move X9, [X9+1256]
	042 Move X8, [X19]
	043 Move X1, [X9]
	044 Move W10, [X8+304]
	045 Move W9, [X1+304]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X8, [X8+200]
	048 Add X8, X8, X9
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X0, X19
	052 Call ObjectManager.GetConstructor, X0
	053 Compare X0, 0
	054 JumpIfEqual {108}
	055 Move X2, X22
	056 Move X3, X21
	057 Move X4, X20
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X22, [X31+16]
	061 Move X21, [X31+24]
	062 Move X1, X23
	063 Move X5, X31
	064 Move X30, [X31+48]
	065 Move X23, [X31+56]
	066 Call RuntimeConstructorInfo.SerializationInvoke, X0, X1, X2, X3
	067 Return 
	068 Move X0, X19
	069 Call 0x1C181E0
	070 Move X0, 0xE54000
	071 Move X0, [X0+1320]
	072 Call 0x1C17D08
	073 Call 0x1C17F10
	074 Move X19, X0
	075 Move X0, 0xE5A000
	076 Move X0, [X0+2216]
	077 Call 0x1C17D08
	078 Move X1, X0
	079 Move X0, X19
	080 Move X2, X31
	081 Call ArgumentNullException..ctor, X0, X1
	082 Move X0, 0xE80000
	083 Move X0, [X0+3400]
	084 Call 0x1C17D08
	085 Move X1, X0
	086 Move X0, X19
	087 Call 0x1C17DEC
	088 Move X0, 0xE80000
	089 Move X0, [X0+3408]
	090 Call 0x1C17D08
	091 Move X1, X31
	092 Call Environment.GetResourceString, X0
	093 Move X19, X0
	094 Move X0, 0xE57000
	095 Move X0, [X0+1400]
	096 Call 0x1C17D08
	097 Call 0x1C17F10
	098 Move X1, X19
	099 Move X2, X31
	100 Move X20, X0
	101 Call ArgumentException..ctor, X0, X1
	102 Move X0, 0xE80000
	103 Move X0, [X0+3400]
	104 Call 0x1C17D08
	105 Move X1, X0
	106 Move X0, X20
	107 Call 0x1C17DEC
	108 Call 0x1C17F20
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X20, X0
	111 Move X0, X20
	112 Call 0x3EB2AD0
	113 Move X20, X0
	114 Move X0, 0xE4F000
	115 Move X0, [X0+2000]
	116 Call 0x1C17D08
	117 Move X8, [X20]
	118 Move X1, [X8]
	119 Call 0x1C18270
	120 Move TEMP, X0
	121 And TEMP, TEMP, 1
	122 Compare TEMP, 1
	123 JumpIfNotEqual {161}
	124 Move X20, [X20]
	125 Call 0x3EB2AE0
	126 Move X0, 0xE4F000
	127 Move X0, [X0+2512]
	128 Call 0x1C17D08
	129 Move W1, 1
	130 Call 0x1C17D6C
	131 Move X21, X0
	132 Call 0x19913C0
	133 Move X0, X21
	134 Move X1, X19
	135 Call 0x19990B4
	136 Move X0, X21
	137 Move X1, X31
	138 Move X2, X19
	139 Call 0x1994444
	140 Move X0, 0xE80000
	141 Move X0, [X0+3416]
	142 Call 0x1C17D08
	143 Move X1, X21
	144 Move X2, X31
	145 Call Environment.GetResourceString, X0, X1
	146 Move X19, X0
	147 Move X0, 0xE79000
	148 Move X0, [X0+736]
	149 Call 0x1C17D08
	150 Call 0x1C17F10
	151 Move X1, X19
	152 Move X2, X20
	153 Move X21, X0
	154 Call SerializationException..ctor, X0, X1, X2
	155 Move X0, 0xE80000
	156 Move X0, [X0+3400]
	157 Call 0x1C17D08
	158 Move X1, X0
	159 Move X0, X21
	160 Call 0x1C17DEC
	161 Move W0, 8
	162 Call 0x3EB2AF0
	163 Move X8, [X20]
	164 Move [X0], X8
	165 Move X1, 0xC10000
	166 Add X1, X1, 3672
	167 Move X2, X31
	168 Call 0x3EB2B00
	169 Move X20, X0
	170 Call 0x3EB2AE0
	171 Move X0, X20
	172 Call 0x1D2D690
	173 Call 0x1991590

Method: System.Reflection.RuntimeConstructorInfo GetConstructor(System.RuntimeType t)

Disassembly:
	0x032A6EEC B.CS 0x32A6F48
	0x032A6EF0 LDR X12, [X11, X9, LSL #3]
	0x032A6EF4 CMP X12, X1
	0x032A6EF8 B.EQ 0x32A6F10
	0x032A6EFC ADD X9, X9, 0x1
	0x032A6F00 CMP W9, W8
	0x032A6F04 B.LT 0x32A6EE8
	0x032A6F08 B 0x32A6F10
	0x032A6F0C MOV W9, W31
	0x032A6F10 CMP W9, W8
	0x032A6F14 B.EQ 0x32A6F38
	0x032A6F18 LDR X10, [X0 + 0x10]
	0x032A6F1C CBZ X10, 0x32A6F4C
	0x032A6F20 LDR W11, [X10 + 0x18]
	0x032A6F24 CMP W9, W11
	0x032A6F28 B.CS 0x32A6F48
	0x032A6F2C ADD X10, X10, W9, 0x3, SXTW
	0x032A6F30 MOVN X11, 0x0
	0x032A6F34 STR X11, [X10 + 0x20]
	0x032A6F38 CMP W9, W8
	0x032A6F3C CSET W0, NE
	0x032A6F40 LDR X30, [X31], #0x10
	0x032A6F44 RET
	0x032A6F48 BL 0x1C16F28
	0x032A6F4C BL 0x1C16F20
	0x032A6F50 MOVZ W1, 0x2
	0x032A6F54 B 0x32A705C
	0x032A6F58 LDR X8, [X0 + 0x58]
	0x032A6F5C CBZ X8, 0x32A6F68
	0x032A6F60 LDR X0, [X8 + 0x10]
	0x032A6F64 RET
	0x032A6F68 MOV X0, X31
	0x032A6F6C RET
	0x032A6F70 MOVZ W1, 0x2
	0x032A6F74 B 0x32A71F8
	0x032A6F78 STR X30, [X31 - 0x20]!
	0x032A6F7C STP X20, X19, [X31 + 0x10]
	0x032A6F80 LDR X8, [X0 + 0x10]
	0x032A6F84 CBZ X8, 0x32A6FBC
	0x032A6F88 LDR W9, [X0 + 0x1C]
	0x032A6F8C LDR W10, [X8 + 0x18]
	0x032A6F90 MOV X19, X0
	0x032A6F94 MOV X20, X1
	0x032A6F98 CMP W9, W10
	0x032A6F9C B.NE 0x32A6FC0
	0x032A6FA0 MOV X0, X19
	0x032A6FA4 BL 0x32A7264
	0x032A6FA8 LDR W9, [X19 + 0x1C]
	0x032A6FAC LDR X8, [X19 + 0x10]
	0x032A6FB0 ADD W10, W9, 0x1
	0x032A6FB4 STR W10, [X19 + 0x1C]
	0x032A6FB8 CBNZ X8, 0x32A6FC8
	0x032A6FBC BL 0x1C16F20
	0x032A6FC0 ADD W10, W9, 0x1
	0x032A6FC4 STR W10, [X19 + 0x1C]
	0x032A6FC8 LDR W10, [X8 + 0x18]
	0x032A6FCC CMP W9, W10
	0x032A6FD0 B.CS 0x32A6FF4
	0x032A6FD4 ADD X8, X8, W9, 0x3, SXTW
	0x032A6FD8 STR X20, [X8 + 0x20]
	0x032A6FDC LDR W8, [X19 + 0x18]
	0x032A6FE0 ADD W8, W8, 0x1
	0x032A6FE4 STR W8, [X19 + 0x18]
	0x032A6FE8 LDP X20, X19, [X31 + 0x10]
	0x032A6FEC LDR X30, [X31], #0x20
	0x032A6FF0 RET
	0x032A6FF4 BL 0x1C16F28
	0x032A6FF8 LDR W0, [X0 + 0x20]
	0x032A6FFC RET
	0x032A7000 LDRB W0, [X0 + 0x68]
	0x032A7004 RET
	0x032A7008 AND W8, W1, 0x1
	0x032A700C STRB W8, [X0 + 0x68]
	0x032A7010 RET
	0x032A7014 LDR X0, [X0 + 0x60]
	0x032A7018 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1137000
	005 Move W8, [X20+1929]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE78000
	012 Move X0, [X0+2424]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1929], W8
	016 Compare X19, 0
	017 JumpIfEqual {43}
	018 Move X20, 0xE78000
	019 Move X20, [X20+2424]
	020 Move X0, X19
	021 Move X1, X31
	022 Call RuntimeType.GetSerializationCtor, X0
	023 Move X8, [X20]
	024 Move X20, X0
	025 Move W9, [X8+224]
	026 Compare W9, 0
	027 JumpIfNotEqual {30}
	028 Move X0, X8
	029 Call 0x1C17DFC
	030 Move X0, X20
	031 Move X1, X31
	032 Move X2, X31
	033 Call ConstructorInfo.op_Equality, X0, X1
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {44}
	038 Move X0, X20
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Return X0
	043 Call 0x1C17F20
	044 Move X0, 0xE4E000
	045 Move X0, [X0+2512]
	046 Call 0x1C17D08
	047 Move W1, 1
	048 Call 0x1C17D6C
	049 Move X20, X0
	050 Move X0, X19
	051 Call 0x19913C0
	052 Move X8, [X19]
	053 Move X0, X19
	054 Move X9, [X8+744]
	055 Move X1, [X8+752]
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Move X19, X0
	058 Move X0, X20
	059 Call 0x19913C0
	060 Move X0, X20
	061 Move X1, X19
	062 Call 0x19990B4
	063 Move X0, X20
	064 Move X1, X31
	065 Move X2, X19
	066 Call 0x1994444
	067 Move X0, 0xE7F000
	068 Move X0, [X0+3416]
	069 Call 0x1C17D08
	070 Move X1, X20
	071 Move X2, X31
	072 Call Environment.GetResourceString, X0, X1
	073 Move X19, X0
	074 Move X0, 0xE78000
	075 Move X0, [X0+736]
	076 Call 0x1C17D08
	077 Call 0x1C17F10
	078 Move X1, X19
	079 Move X20, X0
	080 Call SerializationException..ctor, X0, X1
	081 Move X0, 0xE7E000
	082 Move X0, [X0+3584]
	083 Call 0x1C17D08
	084 Move X1, X0
	085 Move X0, X20
	086 Call 0x1C17DEC

Method: System.Void DoFixups()

Disassembly:
	0x032A701C STR X1, [X0 + 0x60]
	0x032A7020 RET
	0x032A7024 LDR X0, [X0 + 0x10]
	0x032A7028 RET
	0x032A702C LDR X0, [X0 + 0x28]
	0x032A7030 RET
	0x032A7034 STR X1, [X0 + 0x28]
	0x032A7038 RET
	0x032A703C LDR X0, [X0 + 0x30]
	0x032A7040 RET
	0x032A7044 LDR X0, [X0 + 0x40]
	0x032A7048 RET
	0x032A704C STR X1, [X0 + 0x40]
	0x032A7050 RET
	0x032A7054 LDR X0, [X0 + 0x58]
	0x032A7058 RET
	0x032A705C STR X30, [X31 - 0x30]!
	0x032A7060 STP X22, X21, [X31 + 0x10]
	0x032A7064 STP X20, X19, [X31 + 0x20]
	0x032A7068 ADRP X22, 0x1135000
	0x032A706C ADRP X21, 0xE7D000
	0x032A7070 LDRB W8, [X22 + 0x79A]
	0x032A7074 LDR X21, [X21 + 0xE90]
	0x032A7078 MOV W20, W1
	0x032A707C MOV X19, X0
	0x032A7080 TBNZ X8, 0x0, 0x32A7098
	0x032A7084 ADRP X0, 0xE7D000
	0x032A7088 LDR X0, [X0 + 0xE90]
	0x032A708C BL 0x1C16CF4
	0x032A7090 MOVZ W8, 0x1
	0x032A7094 STRB W8, [X22 + 0x79A]
	0x032A7098 MOV X0, X19
	0x032A709C MOV X1, X31
	0x032A70A0 BL 0x33BDD8C
	0x032A70A4 STR W31, [X19 + 0x18]
	0x032A70A8 LDR X0, [X21]
	0x032A70AC MOV W1, W20
	0x032A70B0 BL 0x1C16D6C
	0x032A70B4 STR X0, [X19 + 0x10]
	0x032A70B8 LDP X20, X19, [X31 + 0x20]
	0x032A70BC LDP X22, X21, [X31 + 0x10]
	0x032A70C0 LDR X30, [X31], #0x30
	0x032A70C4 RET
	0x032A70C8 STR X30, [X31 - 0x30]!
	0x032A70CC STP X22, X21, [X31 + 0x10]
	0x032A70D0 STP X20, X19, [X31 + 0x20]
	0x032A70D4 LDR X21, [X0 + 0x10]
	0x032A70D8 CBZ X21, 0x32A715C
	0x032A70DC LDR W22, [X0 + 0x18]
	0x032A70E0 LDR W8, [X21 + 0x18]
	0x032A70E4 MOV X20, X0
	0x032A70E8 MOV X19, X1
	0x032A70EC CMP W22, W8
	0x032A70F0 B.NE 0x32A7118
	0x032A70F4 MOV X0, X20
	0x032A70F8 BL 0x32A7170
	0x032A70FC LDR W22, [X20 + 0x18]
	0x032A7100 LDR X21, [X20 + 0x10]
	0x032A7104 ADD W8, W22, 0x1
	0x032A7108 STR W8, [X20 + 0x18]
	0x032A710C CBZ X21, 0x32A715C
	0x032A7110 CBNZ X19, 0x32A7124
	0x032A7114 B 0x32A7138
	0x032A7118 ADD W8, W22, 0x1
	0x032A711C STR W8, [X20 + 0x18]
	0x032A7120 CBZ X19, 0x32A7138
	0x032A7124 LDR X8, [X21]
	0x032A7128 MOV X0, X19
	0x032A712C LDR X1, [X8 + 0x40]
	0x032A7130 BL 0x1C16E00
	0x032A7134 CBZ X0, 0x32A7164
	0x032A7138 LDR W8, [X21 + 0x18]
	0x032A713C CMP W22, W8
	0x032A7140 B.CS 0x32A7160
	0x032A7144 ADD X8, X21, W22, 0x3, SXTW
	0x032A7148 STR X19, [X8 + 0x20]
	0x032A714C LDP X20, X19, [X31 + 0x20]
	0x032A7150 LDP X22, X21, [X31 + 0x10]
	0x032A7154 LDR X30, [X31], #0x30
	0x032A7158 RET
	0x032A715C BL 0x1C16F20
	0x032A7160 BL 0x1C16F28
	0x032A7164 BL 0x1C16F44
	0x032A7168 MOV X1, X31
	0x032A716C BL 0x1C16DEC
	0x032A7170 STR X30, [X31 - 0x20]!
	0x032A7174 STP X20, X19, [X31 + 0x10]
	0x032A7178 ADRP X20, 0x1135000
	0x032A717C LDRB W8, [X20 + 0x79B]
	0x032A7180 MOV X19, X0
	0x032A7184 TBNZ X8, 0x0, 0x32A719C
	0x032A7188 ADRP X0, 0xE7D000
	0x032A718C LDR X0, [X0 + 0xE90]
	0x032A7190 BL 0x1C16CF4
	0x032A7194 MOVZ W8, 0x1
	0x032A7198 STRB W8, [X20 + 0x79B]
	0x032A719C LDR X8, [X19 + 0x10]
	0x032A71A0 CBZ X8, 0x32A71F4
	0x032A71A4 ADRP X9, 0xE7D000
	0x032A71A8 LDR W8, [X8 + 0x18]
	0x032A71AC LDR X9, [X9 + 0xE90]
	0x032A71B0 UBFM W8, W8, 0x1F, 0x1E
	0x032A71B4 LDR X0, [X9]
	0x032A71B8 CMP W8, 0x0
	0x032A71BC MOVN W9, 0x80000000
	0x032A71C0 CSEL W1, W8, W9, GE
	0x032A71C4 BL 0x1C16D6C
	0x032A71C8 LDR X8, [X19 + 0x10]
	0x032A71CC LDR W2, [X19 + 0x18]
	0x032A71D0 MOV X20, X0
	0x032A71D4 MOV X1, X20
	0x032A71D8 MOV X0, X8
	0x032A71DC MOV X3, X31
	0x032A71E0 BL 0x33A0C7C
	0x032A71E4 STR X20, [X19 + 0x10]
	0x032A71E8 LDP X20, X19, [X31 + 0x10]
	0x032A71EC LDR X30, [X31], #0x20
	0x032A71F0 RET
	0x032A71F4 BL 0x1C16F20
	0x032A71F8 STR X30, [X31 - 0x30]!
	0x032A71FC STP X22, X21, [X31 + 0x10]
	0x032A7200 STP X20, X19, [X31 + 0x20]
	0x032A7204 ADRP X22, 0x1135000
	0x032A7208 ADRP X21, 0xE7D000
	0x032A720C LDRB W8, [X22 + 0x79C]
	0x032A7210 LDR X21, [X21 + 0x838]
	0x032A7214 MOV W20, W1
	0x032A7218 MOV X19, X0
	0x032A721C TBNZ X8, 0x0, 0x32A7234
	0x032A7220 ADRP X0, 0xE7D000
	0x032A7224 LDR X0, [X0 + 0x838]
	0x032A7228 BL 0x1C16CF4
	0x032A722C MOVZ W8, 0x1
	0x032A7230 STRB W8, [X22 + 0x79C]
	0x032A7234 MOV X0, X19
	0x032A7238 MOV X1, X31
	0x032A723C BL 0x33BDD8C
	0x032A7240 STR X31, [X19 + 0x18]
	0x032A7244 LDR X0, [X21]
	0x032A7248 MOV W1, W20
	0x032A724C BL 0x1C16D6C
	0x032A7250 STR X0, [X19 + 0x10]
	0x032A7254 LDP X20, X19, [X31 + 0x20]
	0x032A7258 LDP X22, X21, [X31 + 0x10]
	0x032A725C LDR X30, [X31], #0x30
	0x032A7260 RET
	0x032A7264 STR X30, [X31 - 0x20]!
	0x032A7268 STP X20, X19, [X31 + 0x10]
	0x032A726C ADRP X20, 0x1135000
	0x032A7270 LDRB W8, [X20 + 0x79D]
	0x032A7274 MOV X19, X0
	0x032A7278 TBNZ X8, 0x0, 0x32A7290
	0x032A727C ADRP X0, 0xE7D000
	0x032A7280 LDR X0, [X0 + 0x838]
	0x032A7284 BL 0x1C16CF4
	0x032A7288 MOVZ W8, 0x1
	0x032A728C STRB W8, [X20 + 0x79D]
	0x032A7290 LDR X8, [X19 + 0x10]
	0x032A7294 CBZ X8, 0x32A72E8
	0x032A7298 ADRP X9, 0xE7D000
	0x032A729C LDR W8, [X8 + 0x18]
	0x032A72A0 LDR X9, [X9 + 0x838]
	0x032A72A4 UBFM W8, W8, 0x1F, 0x1E
	0x032A72A8 LDR X0, [X9]
	0x032A72AC CMP W8, 0x0
	0x032A72B0 MOVN W9, 0x80000000
	0x032A72B4 CSEL W1, W8, W9, GE
	0x032A72B8 BL 0x1C16D6C
	0x032A72BC LDR X8, [X19 + 0x10]
	0x032A72C0 LDR W2, [X19 + 0x18]
	0x032A72C4 MOV X20, X0
	0x032A72C8 MOV X1, X20
	0x032A72CC MOV X0, X8
	0x032A72D0 MOV X3, X31
	0x032A72D4 BL 0x33A0C7C
	0x032A72D8 STR X20, [X19 + 0x10]
	0x032A72DC LDP X20, X19, [X31 + 0x10]
	0x032A72E0 LDR X30, [X31], #0x20
	0x032A72E4 RET
	0x032A72E8 BL 0x1C16F20
	0x032A72EC LDR W0, [X0 + 0x18]
	0x032A72F0 RET
	0x032A72F4 STR X30, [X31 - 0x30]!
	0x032A72F8 STP X22, X21, [X31 + 0x10]
	0x032A72FC STP X20, X19, [X31 + 0x20]
	0x032A7300 ADRP X22, 0x1135000
	0x032A7304 ADRP X21, 0xE7D000
	0x032A7308 LDRB W8, [X22 + 0x79E]
	0x032A730C LDR X21, [X21 + 0xCE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x1136000
	007 Move W8, [X20+1930]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xE7E000
	014 Move X0, [X0+3384]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+1930], W8
	018 Move X0, X19
	019 Call ObjectManager.get_SpecialFixupObjects, X0
	020 Compare X0, 0
	021 JumpIfEqual {106}
	022 Call ObjectHolderList.GetFixupEnumerator, X0
	023 Compare X0, 0
	024 JumpIfEqual {106}
	025 Move X20, X0
	026 Move W22, W31
	027 Move X0, X20
	028 Call ObjectHolderListEnumerator.MoveNext, X0
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {72}
	033 Move X0, X20
	034 Call ObjectHolderListEnumerator.get_Current, X0
	035 Compare X0, 0
	036 JumpIfEqual {106}
	037 Move X8, [X0+16]
	038 Move X21, X0
	039 Compare X8, 0
	040 JumpIfEqual {127}
	041 Move W8, [X21+32]
	042 Move W9, [X21+36]
	043 Add W31, W9, W8
	044 Move W8, [X21+80]
	045 And W31, W8, 6
	046 Move TEMP, X8
	047 And TEMP, TEMP, 0x4000
	048 Compare TEMP, 0x4000
	049 JumpIfEqual {54}
	050 Move X0, X19
	051 Move X1, X21
	052 Call ObjectManager.FixupSpecialObject, X0, X1
	053 Add W22, W22, 1
	054 Move TEMP, X8
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {62}
	058 Move W2, 1
	059 Move X0, X19
	060 Move X1, X21
	061 Call ObjectManager.CompleteObject, X0, X1, X2
	062 Move W8, [X21+80]
	063 Move TEMP, X8
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {27}
	067 Move X0, X19
	068 Move X1, X21
	069 Call ObjectManager.ResolveObjectReference, X0, X1
	070 And W8, W0, 1
	071 Add W22, W22, W8
	072 Compare W22, 0
	073 JumpIfNotEqual {18}
	074 Move X8, [X19+56]
	075 Compare X8, 0
	076 JumpIfEqual {107}
	077 Move X8, [X19+32]
	078 Compare X8, 0
	079 JumpIfEqual {106}
	080 Move X21, X31
	081 Move W9, [X8+24]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Add X8, X8, X21
	085 Move X20, [X8+32]
	086 Compare X20, 0
	087 JumpIfEqual {102}
	088 Move W8, [X20+32]
	089 Move W9, [X20+36]
	090 Add W8, W9, W8
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move W2, 1
	093 Move X0, X19
	094 Move X1, X20
	095 Call ObjectManager.CompleteObject, X0, X1, X2
	096 Move X20, [X20+72]
	097 Compare X20, 0
	098 JumpIfNotEqual {88}
	099 Move X8, [X19+56]
	100 Compare X8, 0
	101 JumpIfEqual {121}
	102 Move X8, [X19+32]
	103 Add X21, X21, 1
	104 Compare X8, 0
	105 JumpIfNotEqual {81}
	106 Call 0x1C17F20
	107 Move X8, [X19+40]
	108 Compare X8, 0
	109 JumpIfEqual {121}
	110 Move X10, 0xE7E000
	111 Move X10, [X10+3384]
	112 Move X9, [X8]
	113 Move X8, [X10]
	114 Move W11, [X9+304]
	115 Move W10, [X8+304]
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X9, [X9+200]
	118 Add X9, X9, X10
	119 NotImplemented "Instruction LDUR not yet implemented."
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move X20, [X31+32]
	122 Move X19, [X31+40]
	123 Move X22, [X31+16]
	124 Move X21, [X31+24]
	125 Move X30, [X31+48]
	126 Return 
	127 Move X0, 0xE4D000
	128 Move X0, [X0+2512]
	129 Call 0x1C17D08
	130 Move W1, 1
	131 Call 0x1C17D6C
	132 Move X19, X0
	133 Move X0, X21
	134 Call 0x19913C0
	135 Move X8, [X21+24]
	136 Move X0, 0xE4F000
	137 Move [X31+8], X8
	138 Move X0, [X0+2656]
	139 Call 0x1C17D08
	140 Add X1, X31, 8
	141 Call 0x1C17E04
	142 Move X20, X0
	143 Move X0, X19
	144 Call 0x19913C0
	145 Move X0, X19
	146 Move X1, X20
	147 Call 0x19990B4
	148 Move X0, X19
	149 Move X1, X31
	150 Move X2, X20
	151 Call 0x1994444
	152 Move X0, 0xE7E000
	153 Move X0, [X0+3336]
	154 Call 0x1C17D08
	155 Move X1, X19
	156 Move X2, X31
	157 Call Environment.GetResourceString, X0, X1
	158 Move X19, X0
	159 Move X0, 0xE77000
	160 Move X0, [X0+736]
	161 Call 0x1C17D08
	162 Call 0x1C17F10
	163 Move X1, X19
	164 Move X20, X0
	165 Call SerializationException..ctor, X0, X1
	166 Move X0, 0xE7E000
	167 Move X0, [X0+3592]
	168 Call 0x1C17D08
	169 Move X1, X0
	170 Move X0, X20
	171 Call 0x1C17DEC
	172 Move X0, 0xE7E000
	173 Move X0, [X0+3600]
	174 Call 0x1C17D08
	175 Move X1, X31
	176 Call Environment.GetResourceString, X0
	177 Call 0x1C17F28
	178 Move X0, 0xE4D000
	179 Move X0, [X0+2512]
	180 Call 0x1C17D08
	181 Move W1, 1
	182 Call 0x1C17D6C
	183 Move X21, 0xE7E000
	184 Move X19, [X19+40]
	185 Move X21, [X21+3384]
	186 Move X20, X0
	187 Move X0, X21
	188 Call 0x1C17D08
	189 Move X1, X0
	190 Move X0, X19
	191 Call 0x1BB6124
	192 Call 0x19913C0
	193 Move X0, X21
	194 Call 0x1C17D08
	195 Move X1, X0
	196 Move X0, X19
	197 Call 0x1BB6124
	198 Move X19, [X0+16]
	199 Move X0, X20
	200 Call 0x19913C0
	201 Move X0, X20
	202 Move X1, X19
	203 Call 0x19990B4
	204 Move X0, X20
	205 Move X1, X31
	206 Move X2, X19
	207 Call 0x1994444
	208 Move X0, 0xE7E000
	209 Move X0, [X0+3464]
	210 Call 0x1C17D08
	211 Move X1, X20

Method: System.Void RegisterFixup(System.Runtime.Serialization.FixupHolder fixup, System.Int64 objectToBeFixed, System.Int64 objectRequired)

Disassembly:
	0x032A7480 LDR W8, [X21 + 0x18]
	0x032A7484 AND W9, W20, 0x1
	0x032A7488 MOVN W10, 0x0
	0x032A748C STRB W9, [X19 + 0x10]
	0x032A7490 STP W8, W10, [X19 + 0x20]
	0x032A7494 LDP X20, X19, [X31 + 0x10]
	0x032A7498 LDP X30, X21, [X31], #0x20
	0x032A749C RET
	0x032A74A0 BL 0x1C16F20
	0x032A74A4 LDR W0, [X0 + 0x18]
	0x032A74A8 RET
	0x032A74AC LDR W0, [X0 + 0x18]
	0x032A74B0 RET
	0x032A74B4 STR X30, [X31 - 0x20]!
	0x032A74B8 STP X20, X19, [X31 + 0x10]
	0x032A74BC MOV X19, X1
	0x032A74C0 MOV X1, X31
	0x032A74C4 MOV X20, X0
	0x032A74C8 BL 0x33BDD8C
	0x032A74CC STR X19, [X20 + 0x10]
	0x032A74D0 LDP X20, X19, [X31 + 0x10]
	0x032A74D4 LDR X30, [X31], #0x20
	0x032A74D8 RET
	0x032A74DC LDR X0, [X0 + 0x10]
	0x032A74E0 RET
	0x032A74E4 STP X30, X25, [X31 - 0x40]!
	0x032A74E8 STP X24, X23, [X31 + 0x10]
	0x032A74EC STP X22, X21, [X31 + 0x20]
	0x032A74F0 STP X20, X19, [X31 + 0x30]
	0x032A74F4 ADRP X25, 0x1135000
	0x032A74F8 ADRP X24, 0xE51000
	0x032A74FC ADRP X22, 0xE54000
	0x032A7500 ADRP X23, 0xE78000
	0x032A7504 LDRB W8, [X25 + 0x7A1]
	0x032A7508 LDR X24, [X24 + 0x740]
	0x032A750C LDR X22, [X22 + 0xF30]
	0x032A7510 LDR X23, [X23 + 0x158]
	0x032A7514 MOV X19, X2
	0x032A7518 MOV X21, X1
	0x032A751C MOV X20, X0
	0x032A7520 TBNZ X8, 0x0, 0x32A7550
	0x032A7524 ADRP X0, 0xE78000
	0x032A7528 LDR X0, [X0 + 0x158]
	0x032A752C BL 0x1C16CF4
	0x032A7530 ADRP X0, 0xE54000
	0x032A7534 LDR X0, [X0 + 0xF30]
	0x032A7538 BL 0x1C16CF4
	0x032A753C ADRP X0, 0xE51000
	0x032A7540 LDR X0, [X0 + 0x740]
	0x032A7544 BL 0x1C16CF4
	0x032A7548 MOVZ W8, 0x1
	0x032A754C STRB W8, [X25 + 0x7A1]
	0x032A7550 LDR X0, [X24]
	0x032A7554 BL 0x1C16F10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, X1
	007 Move X1, X2
	008 Move X21, X3
	009 Move X20, X2
	010 Move X19, X0
	011 Call ObjectManager.FindOrCreateObjectHolder, X0, X1
	012 Compare X0, 0
	013 JumpIfEqual {43}
	014 Move W8, [X0+80]
	015 And W31, W8, 6
	016 Move TEMP, X8
	017 And TEMP, TEMP, 0x4000
	018 Compare TEMP, 0x4000
	019 JumpIfEqual {24}
	020 Compare X22, 0
	021 JumpIfEqual {43}
	022 Move W8, [X22+32]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X1, X22
	025 Move X2, X19
	026 Call ObjectHolder.AddFixup, X0, X1, X2
	027 Move X0, X19
	028 Move X1, X21
	029 Call ObjectManager.FindOrCreateObjectHolder, X0, X1
	030 Compare X0, 0
	031 JumpIfEqual {43}
	032 Move X1, X20
	033 Call ObjectHolder.AddDependency, X0, X1
	034 Move X8, [X19+56]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Add X8, X8, 1
	038 Move [X19+56], X8
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X30, [X31+48]
	042 Return 
	043 Call 0x1C17F20
	044 Move X0, 0xE7E000
	045 Move X0, [X0+3616]
	046 Call 0x1C17D08
	047 Move X1, X31
	048 Call Environment.GetResourceString, X0
	049 Move X19, X0
	050 Move X0, 0xE77000
	051 Move X0, [X0+736]
	052 Call 0x1C17D08
	053 Call 0x1C17F10
	054 Move X1, X19
	055 Move X20, X0
	056 Call SerializationException..ctor, X0, X1
	057 Move X0, 0xE7E000
	058 Move X0, [X0+3624]
	059 Call 0x1C17D08
	060 Move X1, X0
	061 Move X0, X20
	062 Call 0x1C17DEC

Method: System.Void RecordFixup(System.Int64 objectToBeFixed, System.Reflection.MemberInfo member, System.Int64 objectRequired)

Disassembly:
	0x032A7688 BL 0x32A9880
	0x032A768C LDR X8, [X21]
	0x032A7690 CBZ X0, 0x32A76A8
	0x032A7694 LDR X9, [X0]
	0x032A7698 LDRB W10, [X8 + 0x130]
	0x032A769C LDRB W11, [X9 + 0x130]
	0x032A76A0 CMP W11, W10
	0x032A76A4 B.CS 0x32A76B0
	0x032A76A8 MOV X21, X31
	0x032A76AC B 0x32A76C4
	0x032A76B0 LDR X9, [X9 + 0xC8]
	0x032A76B4 ADD X9, X9, X10, 0x3, LSL
	0x032A76B8 LDUR X9, [X9 - 0x8]
	0x032A76BC CMP X9, X8
	0x032A76C0 CSEL X21, X0, X31, EQ
	0x032A76C4 LDR W9, [X8 + 0xE0]
	0x032A76C8 CBNZ W9, 0x32A76D4
	0x032A76CC MOV X0, X8
	0x032A76D0 BL 0x1C16DFC
	0x032A76D4 MOV X0, X21
	0x032A76D8 MOV X1, X31
	0x032A76DC MOV X2, X31
	0x032A76E0 BL 0x33A6674
	0x032A76E4 TBZ X0, 0x0, 0x32A7758
	0x032A76E8 ADRP X8, 0xE7D000
	0x032A76EC LDR X0, [X22]
	0x032A76F0 LDR X8, [X8 + 0xEA0]
	0x032A76F4 LDR W9, [X0 + 0xE0]
	0x032A76F8 LDR X21, [X8]
	0x032A76FC CBNZ W9, 0x32A7704
	0x032A7700 BL 0x1C16DFC
	0x032A7704 MOV X0, X21
	0x032A7708 MOV X1, X31
	0x032A770C BL 0x338C698
	0x032A7710 ADRP X8, 0xE7D000
	0x032A7714 LDR X8, [X8 + 0xEA8]
	0x032A7718 MOV X2, X0
	0x032A771C MOV X0, X20
	0x032A7720 MOV X3, X31
	0x032A7724 LDR X1, [X8]
	0x032A7728 BL 0x32A9678
	0x032A772C CBZ X0, 0x32A7764
	0x032A7730 ADRP X8, 0xE51000
	0x032A7734 LDR X8, [X8 + 0x740]
	0x032A7738 LDR X9, [X0]
	0x032A773C LDR X8, [X8]
	0x032A7740 LDRB W11, [X9 + 0x130]
	0x032A7744 LDRB W10, [X8 + 0x130]
	0x032A7748 CMP W11, W10
	0x032A774C B.CS 0x32A776C
	0x032A7750 MOV X8, X31
	0x032A7754 B 0x32A7780
	0x032A7758 STR X21, [X19 + 0x28]
	0x032A775C STR X20, [X19 + 0x18]
	0x032A7760 B 0x32A7784
	0x032A7764 STR X31, [X19 + 0x10]
	0x032A7768 B 0x32A7784
	0x032A776C LDR X9, [X9 + 0xC8]
	0x032A7770 ADD X9, X9, X10, 0x3, LSL
	0x032A7774 LDUR X9, [X9 - 0x8]
	0x032A7778 CMP X9, X8
	0x032A777C CSEL X8, X0, X31, EQ
	0x032A7780 STR X8, [X19 + 0x10]
	0x032A7784 LDP X20, X19, [X31 + 0x20]
	0x032A7788 LDP X22, X21, [X31 + 0x10]
	0x032A778C LDP X30, X23, [X31], #0x30
	0x032A7790 RET
	0x032A7794 BL 0x1C16F20
	0x032A7798 LDR X8, [X0 + 0x30]
	0x032A779C CMP X8, 0x0
	0x032A77A0 CSET W0, NE
	0x032A77A4 RET
	0x032A77A8 STP X30, X25, [X31 - 0x40]!
	0x032A77AC STP X24, X23, [X31 + 0x10]
	0x032A77B0 STP X22, X21, [X31 + 0x20]
	0x032A77B4 STP X20, X19, [X31 + 0x30]
	0x032A77B8 ADRP X24, 0x1135000
	0x032A77BC LDRB W8, [X24 + 0x7A3]
	0x032A77C0 MOV X22, X4
	0x032A77C4 MOV X23, X3
	0x032A77C8 MOV X19, X2
	0x032A77CC MOV X20, X1
	0x032A77D0 MOV X21, X0
	0x032A77D4 TBNZ X8, 0x0, 0x32A781C
	0x032A77D8 ADRP X0, 0xE7D000
	0x032A77DC LDR X0, [X0 + 0xE98]
	0x032A77E0 BL 0x1C16CF4
	0x032A77E4 ADRP X0, 0xE7D000
	0x032A77E8 LDR X0, [X0 + 0xEB8]
	0x032A77EC BL 0x1C16CF4
	0x032A77F0 ADRP X0, 0xE7D000
	0x032A77F4 LDR X0, [X0 + 0xEC0]
	0x032A77F8 BL 0x1C16CF4
	0x032A77FC ADRP X0, 0xE4C000
	0x032A7800 LDR X0, [X0 + 0x6C0]
	0x032A7804 BL 0x1C16CF4
	0x032A7808 ADRP X0, 0xE7D000
	0x032A780C LDR X0, [X0 + 0xEB0]
	0x032A7810 BL 0x1C16CF4
	0x032A7814 MOVZ W8, 0x1
	0x032A7818 STRB W8, [X24 + 0x7A3]
	0x032A781C LDR X25, [X21 + 0x30]
	0x032A7820 STR X31, [X21 + 0x10]
	0x032A7824 CBZ X25, 0x32A790C
	0x032A7828 ADRP X8, 0xE7D000
	0x032A782C LDR X8, [X8 + 0xEB8]
	0x032A7830 LDR X0, [X8]
	0x032A7834 BL 0x1C16F10
	0x032A7838 MOV X1, X23
	0x032A783C MOV X2, X22
	0x032A7840 MOV X24, X0
	0x032A7844 BL 0x32A74E4
	0x032A7848 LDR X8, [X25 + 0x18]
	0x032A784C LDR X0, [X25 + 0x40]
	0x032A7850 LDR X3, [X25 + 0x28]
	0x032A7854 MOV X1, X20
	0x032A7858 MOV X2, X24
	0x032A785C BLR X8
	0x032A7860 CBZ X24, 0x32A7920
	0x032A7864 LDR X8, [X24 + 0x20]
	0x032A7868 STR X8, [X21 + 0x10]
	0x032A786C CBZ X20, 0x32A7920
	0x032A7870 ADRP X21, 0xE7D000
	0x032A7874 ADRP X22, 0xE4C000
	0x032A7878 LDR X21, [X21 + 0xE98]
	0x032A787C LDR X22, [X22 + 0x6C0]
	0x032A7880 MOV X0, X20
	0x032A7884 MOV X1, X31
	0x032A7888 BL 0x33BE520
	0x032A788C LDR X8, [X22]
	0x032A7890 LDR X21, [X21]
	0x032A7894 MOV X20, X0
	0x032A7898 LDR W9, [X8 + 0xE0]
	0x032A789C CBNZ W9, 0x32A78A8
	0x032A78A0 MOV X0, X8
	0x032A78A4 BL 0x1C16DFC
	0x032A78A8 MOV X0, X21
	0x032A78AC MOV X1, X31
	0x032A78B0 BL 0x338C698
	0x032A78B4 CBZ X19, 0x32A7920
	0x032A78B8 ADRP X8, 0xE7D000
	0x032A78BC LDR X8, [X8 + 0xEB0]
	0x032A78C0 ADRP X21, 0xE7D000
	0x032A78C4 MOV X3, X0
	0x032A78C8 MOV X0, X19
	0x032A78CC LDR X1, [X8]
	0x032A78D0 LDR X21, [X21 + 0xEC0]
	0x032A78D4 MOV X2, X20
	0x032A78D8 MOV X4, X31
	0x032A78DC BL 0x32A89BC
	0x032A78E0 LDR X0, [X21]
	0x032A78E4 MOV X1, X31
	0x032A78E8 BL 0x338C698
	0x032A78EC MOV X1, X0
	0x032A78F0 MOV X0, X19
	0x032A78F4 LDP X20, X19, [X31 + 0x30]
	0x032A78F8 LDP X22, X21, [X31 + 0x20]
	0x032A78FC LDP X24, X23, [X31 + 0x10]
	0x032A7900 MOV X2, X31
	0x032A7904 LDP X30, X25, [X31], #0x40
	0x032A7908 B 0x32A8510

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x1136000
	008 Move W8, [X23+1931]
	009 Move X21, X3
	010 Move X19, X2
	011 Move X20, X1
	012 Move X22, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0xE7E000
	018 Move X0, [X0+3648]
	019 Call 0x1C17CF4
	020 Move X0, 0xE7E000
	021 Move X0, [X0+2992]
	022 Call 0x1C17CF4
	023 Move X0, 0xE7E000
	024 Move X0, [X0+3000]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X23+1931], W8
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X0, X19
	031 Move X1, X31
	032 Move X2, X31
	033 Call MemberInfo.op_Equality, X0, X1
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {155}
	038 Compare X19, 0
	039 JumpIfEqual {78}
	040 Move X9, 0xE7E000
	041 Move X9, [X9+2992]
	042 Move X8, [X19]
	043 Move X9, [X9]
	044 Move W11, [X8+304]
	045 Move W10, [X9+304]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X11, [X8+200]
	048 Add X10, X11, X10
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X9, 0xE7E000
	052 Move X9, [X9+3000]
	053 Move X9, [X9]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X8, 0xE7E000
	056 Move X8, [X8+3648]
	057 Move X0, [X8]
	058 Call 0x1C17F10
	059 Move X1, X31
	060 Move X23, X0
	061 Call Object..ctor, X0
	062 Move [X23+16], X21
	063 Move [X23+24], X19
	064 Move X0, X22
	065 Move X2, X20
	066 Move X3, X21
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X22, [X31+16]
	070 Move X21, [X31+24]
	071 Move W8, 2
	072 Move [X23+32], W8
	073 Move X1, X23
	074 Move X30, [X31+48]
	075 Move X23, [X31+56]
	076 Call ObjectManager.RegisterFixup, X0, X1, X2, X3
	077 Return 
	078 Move X0, 0xE4D000
	079 Move X0, [X0+2512]
	080 Call 0x1C17D08
	081 Move W1, 1
	082 Call 0x1C17D6C
	083 Move X20, X0
	084 Move X0, X19
	085 Call 0x19913C0
	086 Move X0, X19
	087 Move X1, X31
	088 Call "il2cpp_vm_object_is_inst", X0
	089 Move X19, X0
	090 Call 0x19913C0
	091 Move X8, [X19]
	092 Move X0, X19
	093 Move X9, [X8+360]
	094 Move X1, [X8+368]
	095 NotImplemented "Instruction BLR not yet implemented."
	096 Move X19, X0
	097 Move X0, X20
	098 Call 0x19913C0
	099 Move X0, X20
	100 Move X1, X19
	101 Call 0x19990B4
	102 Move X0, X20
	103 Move X1, X31
	104 Move X2, X19
	105 Call 0x1994444
	106 Move X0, 0xE7E000
	107 Move X0, [X0+3080]
	108 Call 0x1C17D08
	109 Move X1, X20
	110 Move X2, X31
	111 Call Environment.GetResourceString, X0, X1
	112 Move X19, X0
	113 Move X0, 0xE77000
	114 Move X0, [X0+736]
	115 Call 0x1C17D08
	116 Call 0x1C17F10
	117 Move X1, X19
	118 Move X20, X0
	119 Call SerializationException..ctor, X0, X1
	120 Move X0, 0xE7E000
	121 Move X0, [X0+3656]
	122 Call 0x1C17D08
	123 Move X1, X0
	124 Move X0, X20
	125 Call 0x1C17DEC
	126 Move X8, 0xE7E000
	127 Move X9, 0xE7E000
	128 Move X8, [X8+3664]
	129 Move X9, [X9+3672]
	130 NotImplemented "Instruction CMP not yet implemented."
	131 NotImplemented "Instruction CSEL not yet implemented."
	132 Call 0x1C17D08
	133 Move X19, X0
	134 Move X0, 0xE7E000
	135 Move X0, [X0+3680]
	136 Call 0x1C17D08
	137 Move X1, X31
	138 Call Environment.GetResourceString, X0
	139 Move X20, X0
	140 Move X0, 0xE55000
	141 Move X0, [X0+1888]
	142 Call 0x1C17D08
	143 Call 0x1C17F10
	144 Move X1, X19
	145 Move X2, X20
	146 Move X3, X31
	147 Move X21, X0
	148 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	149 Move X0, 0xE7E000
	150 Move X0, [X0+3656]
	151 Call 0x1C17D08
	152 Move X1, X0
	153 Move X0, X21
	154 Call 0x1C17DEC
	155 Move X0, 0xE52000
	156 Move X0, [X0+1320]
	157 Call 0x1C17D08
	158 Call 0x1C17F10
	159 Move X19, X0
	160 Move X0, 0xE7E000
	161 Move X0, [X0+3688]
	162 Call 0x1C17D08
	163 Move X1, X0
	164 Move X0, X19
	165 Move X2, X31
	166 Call ArgumentNullException..ctor, X0, X1
	167 Move X0, 0xE7E000
	168 Move X0, [X0+3656]
	169 Call 0x1C17D08
	170 Move X1, X0
	171 Move X0, X19
	172 Call 0x1C17DEC

Method: System.Void RecordDelayedFixup(System.Int64 objectToBeFixed, System.String memberName, System.Int64 objectRequired)

Disassembly:
	0x032A7948 TBNZ X8, 0x0, 0x32A7990
	0x032A794C ADRP X0, 0xE4C000
	0x032A7950 LDR X0, [X0 + 0xE00]
	0x032A7954 BL 0x1C16CF4
	0x032A7958 ADRP X0, 0xE7D000
	0x032A795C LDR X0, [X0 + 0xEC8]
	0x032A7960 BL 0x1C16CF4
	0x032A7964 ADRP X0, 0xE75000
	0x032A7968 LDR X0, [X0 + 0x6F0]
	0x032A796C BL 0x1C16CF4
	0x032A7970 ADRP X0, 0xE4C000
	0x032A7974 LDR X0, [X0 + 0xE18]
	0x032A7978 BL 0x1C16CF4
	0x032A797C ADRP X0, 0xE7D000
	0x032A7980 LDR X0, [X0 + 0xED0]
	0x032A7984 BL 0x1C16CF4
	0x032A7988 MOVZ W8, 0x1
	0x032A798C STRB W8, [X21 + 0x7A4]
	0x032A7990 LDR X19, [X19 + 0x10]
	0x032A7994 CBZ X19, 0x32A7BCC
	0x032A7998 ADRP X10, 0xE7D000
	0x032A799C LDR X8, [X19]
	0x032A79A0 LDR X10, [X10 + 0xEC8]
	0x032A79A4 LDRH W9, [X8 + 0x12E]
	0x032A79A8 LDR X1, [X10]
	0x032A79AC CBZ X9, 0x32A79D0
	0x032A79B0 LDR X10, [X8 + 0xB0]
	0x032A79B4 ADD X10, X10, 0x8
	0x032A79B8 LDUR X11, [X10 - 0x8]
	0x032A79BC CMP X11, X1
	0x032A79C0 B.EQ 0x32A79E0
	0x032A79C4 SUBS X9, X9, 0x1
	0x032A79C8 ADD X10, X10, 0x10
	0x032A79CC B.NE 0x32A79B8
	0x032A79D0 MOV X0, X19
	0x032A79D4 MOV W2, W31
	0x032A79D8 BL 0x1C5C788
	0x032A79DC B 0x32A79EC
	0x032A79E0 LDRSW X9, [X10]
	0x032A79E4 ADD X8, X8, X9, 0x4, LSL
	0x032A79E8 ADD X0, X8, 0x138
	0x032A79EC LDP X8, X1, [X0]
	0x032A79F0 MOV X0, X19
	0x032A79F4 BLR X8
	0x032A79F8 MOV X19, X0
	0x032A79FC CBZ X0, 0x32A7C00
	0x032A7A00 ADRP X24, 0xE4C000
	0x032A7A04 ADRP X25, 0xE75000
	0x032A7A08 ADRP X26, 0xE7D000
	0x032A7A0C LDR X24, [X24 + 0xE18]
	0x032A7A10 LDR X25, [X25 + 0x6F0]
	0x032A7A14 LDR X26, [X26 + 0xED0]
	0x032A7A18 LDR X8, [X19]
	0x032A7A1C LDR X1, [X24]
	0x032A7A20 LDRH W9, [X8 + 0x12E]
	0x032A7A24 CBZ X9, 0x32A7A48
	0x032A7A28 LDR X10, [X8 + 0xB0]
	0x032A7A2C ADD X10, X10, 0x8
	0x032A7A30 LDUR X11, [X10 - 0x8]
	0x032A7A34 CMP X11, X1
	0x032A7A38 B.EQ 0x32A7A58
	0x032A7A3C SUBS X9, X9, 0x1
	0x032A7A40 ADD X10, X10, 0x10
	0x032A7A44 B.NE 0x32A7A30
	0x032A7A48 MOV X0, X19
	0x032A7A4C MOV W2, W31
	0x032A7A50 BL 0x1C5C788
	0x032A7A54 B 0x32A7A64
	0x032A7A58 LDRSW X9, [X10]
	0x032A7A5C ADD X8, X8, X9, 0x4, LSL
	0x032A7A60 ADD X0, X8, 0x138
	0x032A7A64 LDP X8, X1, [X0]
	0x032A7A68 MOV X0, X19
	0x032A7A6C BLR X8
	0x032A7A70 TBZ X0, 0x0, 0x32A7B60
	0x032A7A74 LDR X8, [X19]
	0x032A7A78 LDR X1, [X25]
	0x032A7A7C LDRH W9, [X8 + 0x12E]
	0x032A7A80 CBZ X9, 0x32A7AA4
	0x032A7A84 LDR X10, [X8 + 0xB0]
	0x032A7A88 ADD X10, X10, 0x8
	0x032A7A8C LDUR X11, [X10 - 0x8]
	0x032A7A90 CMP X11, X1
	0x032A7A94 B.EQ 0x32A7AB4
	0x032A7A98 SUBS X9, X9, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x1136000
	008 Move W8, [X23+1932]
	009 Move X20, X3
	010 Move X21, X2
	011 Move X19, X1
	012 Move X22, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xE7E000
	018 Move X0, [X0+3648]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+1932], W8
	022 NotImplemented "Instruction CMP not yet implemented."
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Compare X21, 0
	025 JumpIfEqual {78}
	026 Move X8, 0xE7E000
	027 Move X8, [X8+3648]
	028 Move X0, [X8]
	029 Call 0x1C17F10
	030 Move X1, X31
	031 Move X23, X0
	032 Call Object..ctor, X0
	033 Move [X23+16], X20
	034 Move [X23+24], X21
	035 Move X0, X22
	036 Move X2, X19
	037 Move X3, X20
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move W8, 4
	043 Move [X23+32], W8
	044 Move X1, X23
	045 Move X30, [X31+48]
	046 Move X23, [X31+56]
	047 Call ObjectManager.RegisterFixup, X0, X1, X2, X3
	048 Return 
	049 Move X8, 0xE7E000
	050 Move X9, 0xE7E000
	051 Move X8, [X8+3664]
	052 Move X9, [X9+3672]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 NotImplemented "Instruction CSEL not yet implemented."
	055 Call 0x1C17D08
	056 Move X19, X0
	057 Move X0, 0xE7E000
	058 Move X0, [X0+3680]
	059 Call 0x1C17D08
	060 Move X1, X31
	061 Call Environment.GetResourceString, X0
	062 Move X20, X0
	063 Move X0, 0xE55000
	064 Move X0, [X0+1888]
	065 Call 0x1C17D08
	066 Call 0x1C17F10
	067 Move X1, X19
	068 Move X2, X20
	069 Move X3, X31
	070 Move X21, X0
	071 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	072 Move X0, 0xE7E000
	073 Move X0, [X0+3696]
	074 Call 0x1C17D08
	075 Move X1, X0
	076 Move X0, X21
	077 Call 0x1C17DEC
	078 Move X0, 0xE52000
	079 Move X0, [X0+1320]
	080 Call 0x1C17D08
	081 Call 0x1C17F10
	082 Move X19, X0
	083 Move X0, 0xE7E000
	084 Move X0, [X0+3704]
	085 Call 0x1C17D08
	086 Move X1, X0
	087 Move X0, X19
	088 Move X2, X31
	089 Call ArgumentNullException..ctor, X0, X1
	090 Move X0, 0xE7E000
	091 Move X0, [X0+3696]
	092 Call 0x1C17D08
	093 Move X1, X0
	094 Move X0, X19
	095 Call 0x1C17DEC

Method: System.Void RecordArrayElementFixup(System.Int64 arrayToBeFixed, System.Int32[] indices, System.Int64 objectRequired)

Disassembly:
	0x032A7A9C ADD X10, X10, 0x10
	0x032A7AA0 B.NE 0x32A7A8C
	0x032A7AA4 MOV X0, X19
	0x032A7AA8 MOV W2, W31
	0x032A7AAC BL 0x1C5C788
	0x032A7AB0 B 0x32A7AC0
	0x032A7AB4 LDRSW X9, [X10]
	0x032A7AB8 ADD X8, X8, X9, 0x4, LSL
	0x032A7ABC ADD X0, X8, 0x138
	0x032A7AC0 LDP X8, X1, [X0]
	0x032A7AC4 MOV X0, X19
	0x032A7AC8 BLR X8
	0x032A7ACC MOV X23, X0
	0x032A7AD0 CBZ X0, 0x32A7BF0
	0x032A7AD4 LDR X21, [X26]
	0x032A7AD8 MOV X0, X23
	0x032A7ADC MOV X1, X21
	0x032A7AE0 BL 0x1C16E00
	0x032A7AE4 CBZ X0, 0x32A7BF4
	0x032A7AE8 LDR X22, [X26]
	0x032A7AEC MOV X0, X23
	0x032A7AF0 MOV X1, X22
	0x032A7AF4 BL 0x1C16E00
	0x032A7AF8 MOV X21, X0
	0x032A7AFC CBZ X0, 0x32A7BE4
	0x032A7B00 LDR X8, [X21]
	0x032A7B04 LDRH W9, [X8 + 0x12E]
	0x032A7B08 CBZ X9, 0x32A7B2C
	0x032A7B0C LDR X10, [X8 + 0xB0]
	0x032A7B10 ADD X10, X10, 0x8
	0x032A7B14 LDUR X11, [X10 - 0x8]
	0x032A7B18 CMP X11, X22
	0x032A7B1C B.EQ 0x32A7B40
	0x032A7B20 SUBS X9, X9, 0x1
	0x032A7B24 ADD X10, X10, 0x10
	0x032A7B28 B.NE 0x32A7B14
	0x032A7B2C MOV X0, X21
	0x032A7B30 MOV X1, X22
	0x032A7B34 MOV W2, W31
	0x032A7B38 BL 0x1C5C788
	0x032A7B3C B 0x32A7B4C
	0x032A7B40 LDRSW X9, [X10]
	0x032A7B44 ADD X8, X8, X9, 0x4, LSL
	0x032A7B48 ADD X0, X8, 0x138
	0x032A7B4C LDP X8, X2, [X0]
	0x032A7B50 MOV X0, X21
	0x032A7B54 MOV X1, X20
	0x032A7B58 BLR X8
	0x032A7B5C B 0x32A7A18
	0x032A7B60 MOV X20, X31
	0x032A7B64 CBZ X19, 0x32A7BC8
	0x032A7B68 ADRP X10, 0xE4C000
	0x032A7B6C LDR X8, [X19]
	0x032A7B70 LDR X10, [X10 + 0xE00]
	0x032A7B74 LDRH W9, [X8 + 0x12E]
	0x032A7B78 LDR X1, [X10]
	0x032A7B7C CBZ X9, 0x32A7BA0
	0x032A7B80 LDR X10, [X8 + 0xB0]
	0x032A7B84 ADD X10, X10, 0x8
	0x032A7B88 LDUR X11, [X10 - 0x8]
	0x032A7B8C CMP X11, X1
	0x032A7B90 B.EQ 0x32A7BB0
	0x032A7B94 SUBS X9, X9, 0x1
	0x032A7B98 ADD X10, X10, 0x10
	0x032A7B9C B.NE 0x32A7B88
	0x032A7BA0 MOV X0, X19
	0x032A7BA4 MOV W2, W31
	0x032A7BA8 BL 0x1C5C788
	0x032A7BAC B 0x32A7BBC
	0x032A7BB0 LDRSW X9, [X10]
	0x032A7BB4 ADD X8, X8, X9, 0x4, LSL
	0x032A7BB8 ADD X0, X8, 0x138
	0x032A7BBC LDP X8, X1, [X0]
	0x032A7BC0 MOV X0, X19
	0x032A7BC4 BLR X8
	0x032A7BC8 CBNZ X20, 0x32A7C04
	0x032A7BCC LDP X20, X19, [X31 + 0x40]
	0x032A7BD0 LDP X22, X21, [X31 + 0x30]
	0x032A7BD4 LDP X24, X23, [X31 + 0x20]
	0x032A7BD8 LDP X26, X25, [X31 + 0x10]
	0x032A7BDC LDR X30, [X31], #0x50
	0x032A7BE0 RET
	0x032A7BE4 MOV X0, X23
	0x032A7BE8 MOV X1, X22
	0x032A7BEC BL 0x1C171E0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x1136000
	008 Move W8, [X23+1933]
	009 Move X20, X3
	010 Move X21, X2
	011 Move X19, X1
	012 Move X22, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xE7E000
	018 Move X0, [X0+3648]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+1933], W8
	022 NotImplemented "Instruction CMP not yet implemented."
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Compare X21, 0
	025 JumpIfEqual {78}
	026 Move X8, 0xE7E000
	027 Move X8, [X8+3648]
	028 Move X0, [X8]
	029 Call 0x1C17F10
	030 Move X1, X31
	031 Move X23, X0
	032 Call Object..ctor, X0
	033 Move [X23+16], X20
	034 Move [X23+24], X21
	035 Move X0, X22
	036 Move X2, X19
	037 Move X3, X20
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move W8, 1
	043 Move [X23+32], W8
	044 Move X1, X23
	045 Move X30, [X31+48]
	046 Move X23, [X31+56]
	047 Call ObjectManager.RegisterFixup, X0, X1, X2, X3
	048 Return 
	049 Move X8, 0xE7E000
	050 Move X9, 0xE7E000
	051 Move X8, [X8+3664]
	052 Move X9, [X9+3672]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 NotImplemented "Instruction CSEL not yet implemented."
	055 Call 0x1C17D08
	056 Move X19, X0
	057 Move X0, 0xE7E000
	058 Move X0, [X0+3680]
	059 Call 0x1C17D08
	060 Move X1, X31
	061 Call Environment.GetResourceString, X0
	062 Move X20, X0
	063 Move X0, 0xE55000
	064 Move X0, [X0+1888]
	065 Call 0x1C17D08
	066 Call 0x1C17F10
	067 Move X1, X19
	068 Move X2, X20
	069 Move X3, X31
	070 Move X21, X0
	071 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	072 Move X0, 0xE7E000
	073 Move X0, [X0+3712]
	074 Call 0x1C17D08
	075 Move X1, X0
	076 Move X0, X21
	077 Call 0x1C17DEC
	078 Move X0, 0xE52000
	079 Move X0, [X0+1320]
	080 Call 0x1C17D08
	081 Call 0x1C17F10
	082 Move X19, X0
	083 Move X0, 0xE7E000
	084 Move X0, [X0+3720]
	085 Call 0x1C17D08
	086 Move X1, X0
	087 Move X0, X19
	088 Move X2, X31
	089 Call ArgumentNullException..ctor, X0, X1
	090 Move X0, 0xE7E000
	091 Move X0, [X0+3712]
	092 Call 0x1C17D08
	093 Move X1, X0
	094 Move X0, X19
	095 Call 0x1C17DEC

Method: System.Void RaiseDeserializationEvent()

Disassembly:
	0x032A7BF0 BL 0x1C16F20
	0x032A7BF4 MOV X0, X23
	0x032A7BF8 MOV X1, X21
	0x032A7BFC BL 0x1C171E0
	0x032A7C00 BL 0x1C16F20
	0x032A7C04 MOV X0, X20
	0x032A7C08 BL 0x1C16F18
	0x032A7C0C B 0x32A7C1C
	0x032A7C10 B 0x32A7C1C
	0x032A7C14 B 0x32A7C1C
	0x032A7C18 B 0x32A7C1C
	0x032A7C1C CMP W1, 0x1
	0x032A7C20 B.NE 0x32A7C34
	0x032A7C24 BL 0x3EB1AD0
	0x032A7C28 LDR X20, [X0]
	0x032A7C2C BL 0x3EB1AE0
	0x032A7C30 B 0x32A7B64
	0x032A7C34 STR X0, [X31 + 0x8]
	0x032A7C38 MOV X20, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+24]
	004 Move X19, X0
	005 Compare X8, 0
	006 JumpIfEqual {13}
	007 Move X1, [X19+72]
	008 Move X2, [X19+80]
	009 Move X9, [X8+24]
	010 Move X0, [X8+64]
	011 Move X3, [X8+40]
	012 NotImplemented "Instruction BLR not yet implemented."
	013 Move X8, [X19+16]
	014 Compare X8, 0
	015 JumpIfEqual {23}
	016 Move X3, [X8+24]
	017 Move X0, [X8+64]
	018 Move X2, [X8+40]
	019 Move X1, X31
	020 Move X30, [X31+16]
	021 Move X19, [X31+24]
	022 CallNoReturn X3
	023 Move X30, [X31+16]
	024 Move X19, [X31+24]
	025 Return 

Method: System.Void AddOnDeserialization(System.Runtime.Serialization.DeserializationEventHandler handler)

Disassembly:
	0x032A7C3C B 0x32A7C44
	0x032A7C40 STR X0, [X31 + 0x8]
	0x032A7C44 CBZ X19, 0x32A7CA8
	0x032A7C48 ADRP X10, 0xE4C000
	0x032A7C4C LDR X8, [X19]
	0x032A7C50 LDR X10, [X10 + 0xE00]
	0x032A7C54 LDRH W9, [X8 + 0x12E]
	0x032A7C58 LDR X1, [X10]
	0x032A7C5C CBZ X9, 0x32A7C80
	0x032A7C60 LDR X10, [X8 + 0xB0]
	0x032A7C64 ADD X10, X10, 0x8
	0x032A7C68 LDUR X11, [X10 - 0x8]
	0x032A7C6C CMP X11, X1
	0x032A7C70 B.EQ 0x32A7C90
	0x032A7C74 SUBS X9, X9, 0x1
	0x032A7C78 ADD X10, X10, 0x10
	0x032A7C7C B.NE 0x32A7C68
	0x032A7C80 MOV X0, X19
	0x032A7C84 MOV W2, W31
	0x032A7C88 BL 0x1C5C788
	0x032A7C8C B 0x32A7C9C
	0x032A7C90 LDRSW X9, [X10]
	0x032A7C94 ADD X8, X8, X9, 0x4, LSL
	0x032A7C98 ADD X0, X8, 0x138
	0x032A7C9C LDP X8, X1, [X0]
	0x032A7CA0 MOV X0, X19
	0x032A7CA4 BLR X8
	0x032A7CA8 CBNZ X20, 0x32A7CB4
	0x032A7CAC LDR X0, [X31 + 0x8]
	0x032A7CB0 BL 0x1D2C690
	0x032A7CB4 MOV X0, X20
	0x032A7CB8 BL 0x1C16F18

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1136000
	006 Move W8, [X21+1934]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xE7E000
	014 Move X0, [X0+3528]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1934], W8
	018 Move X0, [X19+16]
	019 Move X1, X20
	020 Move X2, X31
	021 Call Delegate.Combine, X0, X1
	022 Compare X0, 0
	023 JumpIfEqual {33}
	024 Move X8, 0xE7E000
	025 Move X8, [X8+3528]
	026 Move X1, [X8]
	027 Move X8, [X0]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move [X19+16], X0
	030 Move X8, [X0]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Call 0x1C181E0
	033 Move [X19+16], X0
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Return 

Method: System.Void AddOnDeserialized(System.Object obj)

Disassembly:
	0x032A7CBC BL 0x1990590
	0x032A7CC0 STP X30, X23, [X31 - 0x30]!
	0x032A7CC4 STP X22, X21, [X31 + 0x10]
	0x032A7CC8 STP X20, X19, [X31 + 0x20]
	0x032A7CCC ADRP X23, 0x1135000
	0x032A7CD0 ADRP X21, 0xE7D000
	0x032A7CD4 ADRP X22, 0xE4C000
	0x032A7CD8 LDRB W8, [X23 + 0x7A5]
	0x032A7CDC LDR X21, [X21 + 0xED8]
	0x032A7CE0 LDR X22, [X22 + 0x6C0]
	0x032A7CE4 MOV X19, X1
	0x032A7CE8 MOV X20, X0
	0x032A7CEC TBNZ X8, 0x0, 0x32A7D1C
	0x032A7CF0 ADRP X0, 0xE7D000
	0x032A7CF4 LDR X0, [X0 + 0xED8]
	0x032A7CF8 BL 0x1C16CF4
	0x032A7CFC ADRP X0, 0xE4C000
	0x032A7D00 LDR X0, [X0 + 0x6C0]
	0x032A7D04 BL 0x1C16CF4
	0x032A7D08 ADRP X0, 0xE7D000
	0x032A7D0C LDR X0, [X0 + 0xEA8]
	0x032A7D10 BL 0x1C16CF4
	0x032A7D14 MOVZ W8, 0x1
	0x032A7D18 STRB W8, [X23 + 0x7A5]
	0x032A7D1C LDR X0, [X22]
	0x032A7D20 LDR X20, [X20 + 0x10]
	0x032A7D24 LDR X21, [X21]
	0x032A7D28 LDR W8, [X0 + 0xE0]
	0x032A7D2C CBNZ W8, 0x32A7D34
	0x032A7D30 BL 0x1C16DFC
	0x032A7D34 MOV X0, X21
	0x032A7D38 MOV X1, X31
	0x032A7D3C BL 0x338C698
	0x032A7D40 CBZ X19, 0x32A7D70
	0x032A7D44 ADRP X8, 0xE7D000
	0x032A7D48 LDR X8, [X8 + 0xEA8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1136000
	006 Move W8, [X21+1935]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xE7E000
	014 Move X0, [X0+2792]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1935], W8
	018 Compare X20, 0
	019 JumpIfEqual {46}
	020 Move X21, 0xE7E000
	021 Move X21, [X21+2792]
	022 Move X0, X20
	023 Move X1, X31
	024 Call "il2cpp_vm_object_is_inst", X0
	025 Move X8, [X21]
	026 Move X21, X0
	027 Move W9, [X8+224]
	028 Compare W9, 0
	029 JumpIfNotEqual {32}
	030 Move X0, X8
	031 Call 0x1C17DFC
	032 Move X0, X21
	033 Call SerializationEventsCache.GetSerializationEventsForType, X0
	034 Compare X0, 0
	035 JumpIfEqual {46}
	036 Move X1, [X19+24]
	037 Move X2, [X0+40]
	038 Move X0, X20
	039 Call SerializationEvents.AddOnDelegate, X0, X1, X2
	040 Move [X19+24], X0
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Return 
	046 Call 0x1C17F20

Method: System.Void RaiseOnDeserializedEvent(System.Object obj)

Disassembly:
	0x032A7D4C MOV X3, X0
	0x032A7D50 MOV X0, X19
	0x032A7D54 MOV X2, X20
	0x032A7D58 LDR X1, [X8]
	0x032A7D5C LDP X20, X19, [X31 + 0x20]
	0x032A7D60 LDP X22, X21, [X31 + 0x10]
	0x032A7D64 MOV X4, X31
	0x032A7D68 LDP X30, X23, [X31], #0x30
	0x032A7D6C B 0x32A89BC
	0x032A7D70 BL 0x1C16F20
	0x032A7D74 STP X30, X27, [X31 - 0x50]!
	0x032A7D78 STP X26, X25, [X31 + 0x10]
	0x032A7D7C STP X24, X23, [X31 + 0x20]
	0x032A7D80 STP X22, X21, [X31 + 0x30]
	0x032A7D84 STP X20, X19, [X31 + 0x40]
	0x032A7D88 ADRP X22, 0x1135000
	0x032A7D8C LDRB W8, [X22 + 0x7A6]
	0x032A7D90 MOV X20, X2
	0x032A7D94 MOV X21, X1
	0x032A7D98 MOV X19, X0
	0x032A7D9C TBNZ X8, 0x0, 0x32A7DF0
	0x032A7DA0 ADRP X0, 0xE76000
	0x032A7DA4 LDR X0, [X0 + 0x978]
	0x032A7DA8 BL 0x1C16CF4
	0x032A7DAC ADRP X0, 0xE7D000
	0x032A7DB0 LDR X0, [X0 + 0xB70]
	0x032A7DB4 BL 0x1C16CF4
	0x032A7DB8 ADRP X0, 0xE56000
	0x032A7DBC LDR X0, [X0 + 0x968]
	0x032A7DC0 BL 0x1C16CF4
	0x032A7DC4 ADRP X0, 0xE75000
	0x032A7DC8 LDR X0, [X0 + 0x4E8]
	0x032A7DCC BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1136000
	006 Move W8, [X21+1936]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xE7E000
	014 Move X0, [X0+2792]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1936], W8
	018 Compare X19, 0
	019 JumpIfEqual {45}
	020 Move X21, 0xE7E000
	021 Move X21, [X21+2792]
	022 Move X0, X19
	023 Move X1, X31
	024 Call "il2cpp_vm_object_is_inst", X0
	025 Move X8, [X21]
	026 Move X21, X0
	027 Move W9, [X8+224]
	028 Compare W9, 0
	029 JumpIfNotEqual {32}
	030 Move X0, X8
	031 Call 0x1C17DFC
	032 Move X0, X21
	033 Call SerializationEventsCache.GetSerializationEventsForType, X0
	034 Compare X0, 0
	035 JumpIfEqual {45}
	036 Move X2, [X20+72]
	037 Move X3, [X20+80]
	038 Move X1, X19
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Call SerializationEvents.InvokeOnDeserialized, X0, X1, X2
	044 Return 
	045 Call 0x1C17F20

Method: System.Void RaiseOnDeserializingEvent(System.Object obj)

Disassembly:
	0x032A7DD0 ADRP X0, 0xE7A000
	0x032A7DD4 LDR X0, [X0 + 0x8C8]
	0x032A7DD8 BL 0x1C16CF4
	0x032A7DDC ADRP X0, 0xE4C000
	0x032A7DE0 LDR X0, [X0 + 0x6C0]
	0x032A7DE4 BL 0x1C16CF4
	0x032A7DE8 MOVZ W8, 0x1
	0x032A7DEC STRB W8, [X22 + 0x7A6]
	0x032A7DF0 LDR X22, [X19 + 0x20]
	0x032A7DF4 CBNZ X22, 0x32A8008
	0x032A7DF8 ADRP X26, 0xE75000
	0x032A7DFC LDR X26, [X26 + 0x4E8]
	0x032A7E00 LDR X22, [X19 + 0x28]
	0x032A7E04 LDR X0, [X26]
	0x032A7E08 LDR W8, [X0 + 0xE0]
	0x032A7E0C CBNZ W8, 0x32A7E14
	0x032A7E10 BL 0x1C16DFC
	0x032A7E14 MOV X0, X22
	0x032A7E18 MOV X1, X31
	0x032A7E1C MOV X2, X31
	0x032A7E20 BL 0x33A6674
	0x032A7E24 TBZ X0, 0x0, 0x32A7E30
	0x032A7E28 MOV X22, X19
	0x032A7E2C B 0x32A8008
	0x032A7E30 ADRP X8, 0xE7A000
	0x032A7E34 LDR X8, [X8 + 0x8C8]
	0x032A7E38 LDR X0, [X8]
	0x032A7E3C BL 0x1C16F10
	0x032A7E40 MOV X1, X31
	0x032A7E44 MOV X22, X0
	0x032A7E48 BL 0x3356984
	0x032A7E4C CBZ X22, 0x32A8024
	0x032A7E50 ADRP X25, 0xE56000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1136000
	006 Move W8, [X21+1937]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xE7E000
	014 Move X0, [X0+2792]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1937], W8
	018 Compare X19, 0
	019 JumpIfEqual {45}
	020 Move X21, 0xE7E000
	021 Move X21, [X21+2792]
	022 Move X0, X19
	023 Move X1, X31
	024 Call "il2cpp_vm_object_is_inst", X0
	025 Move X8, [X21]
	026 Move X21, X0
	027 Move W9, [X8+224]
	028 Compare W9, 0
	029 JumpIfNotEqual {32}
	030 Move X0, X8
	031 Call 0x1C17DFC
	032 Move X0, X21
	033 Call SerializationEventsCache.GetSerializationEventsForType, X0
	034 Compare X0, 0
	035 JumpIfEqual {45}
	036 Move X2, [X20+72]
	037 Move X3, [X20+80]
	038 Move X1, X19
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Call SerializationEvents.InvokeOnDeserializing, X0, X1, X2
	044 Return 
	045 Call 0x1C17F20

