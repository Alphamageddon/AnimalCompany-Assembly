Type: System.Runtime.Serialization.SerializationInfo

Method: System.Void .ctor(System.Type type, System.Runtime.Serialization.IFormatterConverter converter)

Disassembly:
	0x032A931C MOV X0, X22
	0x032A9320 MOV X1, X31

ISIL:
	001 Move W3, W31

Method: System.Void .ctor(System.Type type, System.Runtime.Serialization.IFormatterConverter converter, System.Boolean requireSameTokenInPartialTrust)

Disassembly:
	0x032A9324 BL 0x338C698
	0x032A9328 MOV X3, X0
	0x032A932C MOV X0, X20
	0x032A9330 MOV X1, X19
	0x032A9334 MOV X2, X21
	0x032A9338 BL 0x32A89BC
	0x032A933C LDP X20, X19, [X31 + 0x40]
	0x032A9340 LDP X22, X21, [X31 + 0x30]
	0x032A9344 LDP X24, X23, [X31 + 0x20]
	0x032A9348 LDP X30, X25, [X31 + 0x10]
	0x032A934C ADD X31, X31, 0x50
	0x032A9350 RET
	0x032A9354 STR X30, [X31 - 0x40]!
	0x032A9358 STP X24, X23, [X31 + 0x10]
	0x032A935C STP X22, X21, [X31 + 0x20]
	0x032A9360 STP X20, X19, [X31 + 0x30]
	0x032A9364 MOV X19, X3
	0x032A9368 MOV X21, X2
	0x032A936C MOV X23, X1
	0x032A9370 MOV X22, X0
	0x032A9374 BL 0x32A9438
	0x032A9378 TBNZ X0, 0x1F, 0x32A9400
	0x032A937C LDR X24, [X22 + 0x18]
	0x032A9380 CBZ X24, 0x32A9424
	0x032A9384 MOV W20, W0
	0x032A9388 CBZ X21, 0x32A93A0
	0x032A938C LDR X8, [X24]
	0x032A9390 MOV X0, X21
	0x032A9394 LDR X1, [X8 + 0x40]
	0x032A9398 BL 0x1C16E00
	0x032A939C CBZ X0, 0x32A942C
	0x032A93A0 LDR W8, [X24 + 0x18]
	0x032A93A4 CMP W20, W8
	0x032A93A8 B.CS 0x32A9428
	0x032A93AC MOV W23, W20
	0x032A93B0 ADD X8, X24, X23, 0x3, LSL
	0x032A93B4 STR X21, [X8 + 0x20]
	0x032A93B8 LDR X21, [X22 + 0x20]
	0x032A93BC CBZ X21, 0x32A9424
	0x032A93C0 CBZ X19, 0x32A93D8
	0x032A93C4 LDR X8, [X21]
	0x032A93C8 MOV X0, X19
	0x032A93CC LDR X1, [X8 + 0x40]
	0x032A93D0 BL 0x1C16E00
	0x032A93D4 CBZ X0, 0x32A942C
	0x032A93D8 LDR W8, [X21 + 0x18]
	0x032A93DC CMP W20, W8
	0x032A93E0 B.CS 0x32A9428
	0x032A93E4 ADD X8, X21, X23, 0x3, LSL
	0x032A93E8 STR X19, [X8 + 0x20]
	0x032A93EC LDP X20, X19, [X31 + 0x30]
	0x032A93F0 LDP X22, X21, [X31 + 0x20]
	0x032A93F4 LDP X24, X23, [X31 + 0x10]
	0x032A93F8 LDR X30, [X31], #0x40
	0x032A93FC RET
	0x032A9400 MOV X0, X22
	0x032A9404 MOV X1, X23
	0x032A9408 MOV X2, X21
	0x032A940C MOV X3, X19
	0x032A9410 LDP X20, X19, [X31 + 0x30]
	0x032A9414 LDP X22, X21, [X31 + 0x20]
	0x032A9418 LDP X24, X23, [X31 + 0x10]
	0x032A941C LDR X30, [X31], #0x40
	0x032A9420 B 0x32A8A38
	0x032A9424 BL 0x1C16F20
	0x032A9428 BL 0x1C16F28
	0x032A942C BL 0x1C16F44
	0x032A9430 MOV X1, X31
	0x032A9434 BL 0x1C16DEC
	0x032A9438 SUB X31, X31, 0x30
	0x032A943C STP X30, X21, [X31 + 0x10]
	0x032A9440 STP X20, X19, [X31 + 0x20]
	0x032A9444 ADRP X21, 0x1133000
	0x032A9448 LDRB W8, [X21 + 0x7B7]
	0x032A944C MOV X19, X1
	0x032A9450 MOV X20, X0
	0x032A9454 TBNZ X8, 0x0, 0x32A946C
	0x032A9458 ADRP X0, 0xE7B000
	0x032A945C LDR X0, [X0 + 0xF40]
	0x032A9460 BL 0x1C16CF4
	0x032A9464 MOVZ W8, 0x1
	0x032A9468 STRB W8, [X21 + 0x7B7]
	0x032A946C STR W31, [X31 + 0xC]
	0x032A9470 CBZ X19, 0x32A94B0
	0x032A9474 LDR X0, [X20 + 0x28]
	0x032A9478 CBZ X0, 0x32A94F8
	0x032A947C ADRP X8, 0xE7B000
	0x032A9480 LDR X8, [X8 + 0xF40]
	0x032A9484 ADD X2, X31, 0xC
	0x032A9488 MOV X1, X19
	0x032A948C LDR X3, [X8]
	0x032A9490 BL 0x2AA09F8
	0x032A9494 LDR W8, [X31 + 0xC]
	0x032A9498 LDP X20, X19, [X31 + 0x20]
	0x032A949C LDP X30, X21, [X31 + 0x10]
	0x032A94A0 ANDS W31, W0, 0x1
	0x032A94A4 CSINV W0, W8, W31, NE
	0x032A94A8 ADD X31, X31, 0x30
	0x032A94AC RET
	0x032A94B0 ADRP X0, 0xE4F000
	0x032A94B4 LDR X0, [X0 + 0x528]
	0x032A94B8 BL 0x1C16D08
	0x032A94BC BL 0x1C16F10
	0x032A94C0 MOV X19, X0
	0x032A94C4 ADRP X0, 0xE52000
	0x032A94C8 LDR X0, [X0 + 0x588]
	0x032A94CC BL 0x1C16D08
	0x032A94D0 MOV X1, X0
	0x032A94D4 MOV X0, X19
	0x032A94D8 MOV X2, X31
	0x032A94DC BL 0x330E100
	0x032A94E0 ADRP X0, 0xE7B000
	0x032A94E4 LDR X0, [X0 + 0xF48]
	0x032A94E8 BL 0x1C16D08
	0x032A94EC MOV X1, X0
	0x032A94F0 MOV X0, X19
	0x032A94F4 BL 0x1C16DEC
	0x032A94F8 BL 0x1C16F20
	0x032A94FC STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X23, 0x1134000
	012 Move W8, [X23+1961]
	013 Move W21, W3
	014 Move X19, X2
	015 Move X22, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {38}
	021 Move X0, 0xE4D000
	022 Move X0, [X0+2848]
	023 Call 0x1C17CF4
	024 Move X0, 0xE4D000
	025 Move X0, [X0+2840]
	026 Call 0x1C17CF4
	027 Move X0, 0xE4B000
	028 Move X0, [X0+2512]
	029 Call 0x1C17CF4
	030 Move X0, 0xE4B000
	031 Move X0, [X0+2760]
	032 Call 0x1C17CF4
	033 Move X0, 0xE53000
	034 Move X0, [X0+3168]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X23+1961], W8
	038 Move X0, X20
	039 Move X1, X31
	040 Call Object..ctor, X0
	041 Compare X22, 0
	042 JumpIfEqual {113}
	043 Compare X19, 0
	044 JumpIfEqual {120}
	045 Move [X20+80], X22
	046 Move X8, [X22]
	047 Move X0, X22
	048 Move X9, [X8+744]
	049 Move X1, [X8+752]
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Move [X20+64], X0
	052 Move X8, [X22]
	053 Move X0, X22
	054 Move X9, [X8+776]
	055 Move X1, [X8+784]
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Compare X0, 0
	058 JumpIfEqual {112}
	059 Move X8, [X0]
	060 Move X9, [X8+424]
	061 Move X1, [X8+432]
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Compare X0, 0
	064 JumpIfEqual {112}
	065 Move X8, [X0]
	066 Move X22, 0xE4B000
	067 Move X23, 0xE4B000
	068 Move X24, 0xE53000
	069 Move X22, [X22+2760]
	070 Move X23, [X23+2512]
	071 Move X24, [X24+3168]
	072 Move X9, [X8+440]
	073 Move X1, [X8+448]
	074 Move X25, 0xE4D000
	075 Move X26, 0xE4D000
	076 Move X25, [X25+2840]
	077 Move X26, [X26+2848]
	078 And W27, W21, 1
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Move [X20+72], X0
	081 Move X0, [X22]
	082 Move W1, 4
	083 Call 0x1C17D6C
	084 Move [X20+16], X0
	085 Move X0, [X23]
	086 Move W1, 4
	087 Call 0x1C17D6C
	088 Move [X20+24], X0
	089 Move X0, [X24]
	090 Move W1, 4
	091 Call 0x1C17D6C
	092 Move [X20+32], X0
	093 Move X0, [X25]
	094 Call 0x1C17F10
	095 Move X1, [X26]
	096 Move X21, X0
	097 Call Dictionary`2<Object, Int32>..ctor, X0
	098 Move [X20+40], X21
	099 Move [X20+56], X19
	100 Move [X20+90], W27
	101 Move X20, [X31+64]
	102 Move X19, [X31+72]
	103 Move X22, [X31+48]
	104 Move X21, [X31+56]
	105 Move X24, [X31+32]
	106 Move X23, [X31+40]
	107 Move X26, [X31+16]
	108 Move X25, [X31+24]
	109 Move X30, [X31+80]
	110 Move X27, [X31+88]
	111 Return 
	112 Call 0x1C17F20
	113 Move X0, 0xE50000
	114 Move X0, [X0+1320]
	115 Call 0x1C17D08
	116 Call 0x1C17F10
	117 Move X19, X0
	118 Move X0, 0xE53000
	119 Move X0, [X0+1512]
	120 Move X0, 0xE50000
	121 Move X0, [X0+1320]
	122 Call 0x1C17D08
	123 Call 0x1C17F10
	124 Move X19, X0
	125 Move X0, 0xE74000
	126 Move X0, [X0+2824]
	127 Call 0x1C17D08
	128 Move X1, X0
	129 Move X0, X19
	130 Move X2, X31
	131 Call ArgumentNullException..ctor, X0, X1
	132 Move X0, 0xE7C000
	133 Move X0, [X0+3824]
	134 Call 0x1C17D08
	135 Move X1, X0
	136 Move X0, X19
	137 Call 0x1C17DEC

Method: System.String get_FullTypeName()

Disassembly:
	0x032A9500 STP X20, X19, [X31 + 0x10]
	0x032A9504 MOV X20, X2

ISIL:
	001 Move X0, [X0+64]
	002 Return X0

Method: System.String get_AssemblyName()

Disassembly:
	0x032A9508 MOV X19, X1
	0x032A950C MOV X21, X0

ISIL:
	001 Move X0, [X0+72]
	002 Return X0

Method: System.Void SetType(System.Type type)

Disassembly:
	0x032A9510 BL 0x32A9438
	0x032A9514 ADDS W31, W0, 0x1
	0x032A9518 B.EQ 0x32A9570
	0x032A951C LDR X9, [X21 + 0x20]
	0x032A9520 CBZ X9, 0x32A9568
	0x032A9524 LDR W8, [X9 + 0x18]
	0x032A9528 CMP W0, W8
	0x032A952C B.CS 0x32A956C
	0x032A9530 SXTW X8, W0
	0x032A9534 ADD X9, X9, X8, 0x3, LSL
	0x032A9538 LDR X9, [X9 + 0x20]
	0x032A953C STR X9, [X20]
	0x032A9540 LDR X9, [X21 + 0x18]
	0x032A9544 CBZ X9, 0x32A9568
	0x032A9548 LDR W10, [X9 + 0x18]
	0x032A954C CMP W0, W10
	0x032A9550 B.CS 0x32A956C
	0x032A9554 ADD X8, X9, X8, 0x3, LSL
	0x032A9558 LDR X0, [X8 + 0x20]
	0x032A955C LDP X20, X19, [X31 + 0x10]
	0x032A9560 LDP X30, X21, [X31], #0x20
	0x032A9564 RET
	0x032A9568 BL 0x1C16F20
	0x032A956C BL 0x1C16F28
	0x032A9570 ADRP X0, 0xE4A000
	0x032A9574 LDR X0, [X0 + 0x9D0]
	0x032A9578 BL 0x1C16D08
	0x032A957C MOVZ W1, 0x1
	0x032A9580 BL 0x1C16D6C
	0x032A9584 MOV X20, X0
	0x032A9588 BL 0x19903C0
	0x032A958C MOV X0, X20
	0x032A9590 MOV X1, X19
	0x032A9594 BL 0x19980B4
	0x032A9598 MOV X0, X20
	0x032A959C MOV X1, X31
	0x032A95A0 MOV X2, X19
	0x032A95A4 BL 0x1993444
	0x032A95A8 ADRP X0, 0xE7B000
	0x032A95AC LDR X0, [X0 + 0xF50]
	0x032A95B0 BL 0x1C16D08
	0x032A95B4 MOV X1, X20
	0x032A95B8 MOV X2, X31
	0x032A95BC BL 0x33BFB40
	0x032A95C0 MOV X19, X0
	0x032A95C4 ADRP X0, 0xE74000
	0x032A95C8 LDR X0, [X0 + 0x2E0]
	0x032A95CC BL 0x1C16D08
	0x032A95D0 BL 0x1C16F10
	0x032A95D4 MOV X1, X19
	0x032A95D8 MOV X2, X31
	0x032A95DC MOV X20, X0
	0x032A95E0 BL 0x329F100
	0x032A95E4 ADRP X0, 0xE7B000
	0x032A95E8 LDR X0, [X0 + 0xF58]
	0x032A95EC BL 0x1C16D08
	0x032A95F0 MOV X1, X0
	0x032A95F4 MOV X0, X20
	0x032A95F8 BL 0x1C16DEC
	0x032A95FC STR X30, [X31 - 0x20]!
	0x032A9600 STP X20, X19, [X31 + 0x10]
	0x032A9604 MOV X19, X2
	0x032A9608 MOV X20, X0
	0x032A960C BL 0x32A9438
	0x032A9610 ADDS W31, W0, 0x1
	0x032A9614 B.EQ 0x32A965C
	0x032A9618 LDR X9, [X20 + 0x20]
	0x032A961C CBZ X9, 0x32A9670
	0x032A9620 LDR W8, [X9 + 0x18]
	0x032A9624 CMP W0, W8
	0x032A9628 B.CS 0x32A9674
	0x032A962C SXTW X8, W0
	0x032A9630 ADD X9, X9, X8, 0x3, LSL
	0x032A9634 LDR X9, [X9 + 0x20]
	0x032A9638 STR X9, [X19]
	0x032A963C LDR X9, [X20 + 0x18]
	0x032A9640 CBZ X9, 0x32A9670

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X1, 0
	006 JumpIfEqual {74}
	007 Move W8, [X0+90]
	008 Move X20, X1
	009 Move X19, X0
	010 Compare W8, 0
	011 JumpIfEqual {40}
	012 Move X0, [X19+80]
	013 Compare X0, 0
	014 JumpIfEqual {73}
	015 Move X8, [X0]
	016 Move X9, [X8+760]
	017 Move X1, [X8+768]
	018 NotImplemented "Instruction BLR not yet implemented."
	019 Compare X0, 0
	020 JumpIfEqual {73}
	021 Move X8, [X0]
	022 Move X9, [X8+440]
	023 Move X1, [X8+448]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move X8, [X20]
	026 Move X21, X0
	027 Move X0, X20
	028 Move X9, [X8+760]
	029 Move X1, [X8+768]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Compare X0, 0
	032 JumpIfEqual {73}
	033 Move X8, [X0]
	034 Move X9, [X8+440]
	035 Move X1, [X8+448]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move X1, X0
	038 Move X0, X21
	039 Call SerializationInfo.IsAssemblyNameAssignmentSafe, X0, X1
	040 Move X8, [X19+80]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move [X19+80], X20
	043 Move X8, [X20]
	044 Move X0, X20
	045 Move X9, [X8+744]
	046 Move X1, [X8+752]
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Move [X19+64], X0
	049 Move X8, [X20]
	050 Move X0, X20
	051 Move X9, [X8+776]
	052 Move X1, [X8+784]
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Compare X0, 0
	055 JumpIfEqual {73}
	056 Move X8, [X0]
	057 Move X9, [X8+424]
	058 Move X1, [X8+432]
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Compare X0, 0
	061 JumpIfEqual {73}
	062 Move X8, [X0]
	063 Move X9, [X8+440]
	064 Move X1, [X8+448]
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move [X19+72], X0
	067 NotImplemented "Instruction STRH not yet implemented."
	068 Move X20, [X31+16]
	069 Move X19, [X31+24]
	070 Move X30, [X31+32]
	071 Move X21, [X31+40]
	072 Return 
	073 Call 0x1C17F20
	074 Move X0, 0xE50000
	075 Move X0, [X0+1320]
	076 Call 0x1C17D08
	077 Call 0x1C17F10
	078 Move X19, X0
	079 Move X0, 0xE53000
	080 Move X0, [X0+1512]
	081 Call 0x1C17D08
	082 Move X1, X0
	083 Move X0, X19
	084 Move X2, X31
	085 Call ArgumentNullException..ctor, X0, X1
	086 Move X0, 0xE7C000
	087 Move X0, [X0+3832]
	088 Call 0x1C17D08
	089 Move X1, X0
	090 Move X0, X19
	091 Call 0x1C17DEC

Method: System.Boolean Compare(System.Byte[] a, System.Byte[] b)

Disassembly:
	0x032A9648 CMP W0, W10
	0x032A964C B.CS 0x32A9674
	0x032A9650 ADD X8, X9, X8, 0x3, LSL
	0x032A9654 LDR X0, [X8 + 0x20]
	0x032A9658 B 0x32A9664
	0x032A965C MOV X0, X31
	0x032A9660 STR X31, [X19]
	0x032A9664 LDP X20, X19, [X31 + 0x10]
	0x032A9668 LDR X30, [X31], #0x20
	0x032A966C RET
	0x032A9670 BL 0x1C16F20
	0x032A9674 BL 0x1C16F28
	0x032A9678 STR X30, [X31 - 0x30]!
	0x032A967C STP X22, X21, [X31 + 0x10]
	0x032A9680 STP X20, X19, [X31 + 0x20]
	0x032A9684 ADRP X22, 0x1133000
	0x032A9688 LDRB W8, [X22 + 0x7B8]
	0x032A968C MOV X19, X2
	0x032A9690 MOV X21, X1
	0x032A9694 MOV X20, X0
	0x032A9698 TBNZ X8, 0x0, 0x32A96BC
	0x032A969C ADRP X0, 0xE7B000
	0x032A96A0 LDR X0, [X0 + 0xF60]
	0x032A96A4 BL 0x1C16CF4
	0x032A96A8 ADRP X0, 0xE73000
	0x032A96AC LDR X0, [X0 + 0x4E8]
	0x032A96B0 BL 0x1C16CF4
	0x032A96B4 MOVZ W8, 0x1
	0x032A96B8 STRB W8, [X22 + 0x7B8]
	0x032A96BC STR X31, [X31 + 0x8]
	0x032A96C0 CBZ X19, 0x32A97E4
	0x032A96C4 ADRP X22, 0xE73000
	0x032A96C8 LDR X22, [X22 + 0x4E8]
	0x032A96CC LDR X0, [X22]
	0x032A96D0 LDR W8, [X0 + 0xE0]
	0x032A96D4 CBNZ W8, 0x32A96E0
	0x032A96D8 BL 0x1C16DFC

ISIL:
	001 Move [X31-16], X30
	002 Move W8, W31
	003 Compare X0, 0
	004 JumpIfEqual {30}
	005 Compare X1, 0
	006 JumpIfEqual {30}
	007 Move X8, [X0+24]
	008 Compare X8, 0
	009 JumpIfEqual {30}
	010 Move X9, [X1+24]
	011 Compare X9, 0
	012 JumpIfEqual {29}
	013 NotImplemented "Instruction CMP not yet implemented."
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move W10, W31
	016 Subtract W9, W31, W8
	017 Add W31, W9, W10
	018 Move X10, W10
	019 Add X8, X0, X10
	020 Add X12, X1, X10
	021 Move W11, [X8+32]
	022 Move W12, [X12+32]
	023 Add W13, W9, W10
	024 NotImplemented "Instruction CMP not yet implemented."
	025 NotImplemented "Instruction CSET not yet implemented."
	026 Add W31, W13, 1
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Add W10, W10, 1
	029 Move W8, W31
	030 Move W0, W8
	031 Move X30, [X31+16]
	032 Return X0
	033 Move W8, 1
	034 Call 0x1C17F28

Method: System.Void DemandForUnsafeAssemblyNameAssignments(System.String originalAssemblyName, System.String newAssemblyName)

Disassembly:
	0x032A9644 LDR W10, [X9 + 0x18]

ISIL:
	001 Call SerializationInfo.IsAssemblyNameAssignmentSafe, X0, X1
	002 Return 

Method: System.Boolean IsAssemblyNameAssignmentSafe(System.String originalAssemblyName, System.String newAssemblyName)

Disassembly:
	0x032A96DC LDR X0, [X22]
	0x032A96E0 LDR X8, [X19]
	0x032A96E4 LDRB W9, [X0 + 0x130]
	0x032A96E8 LDRB W10, [X8 + 0x130]
	0x032A96EC CMP W10, W9
	0x032A96F0 B.CS 0x32A96FC
	0x032A96F4 MOV X0, X31
	0x032A96F8 B 0x32A9710
	0x032A96FC LDR X8, [X8 + 0xC8]
	0x032A9700 ADD X8, X8, X9, 0x3, LSL
	0x032A9704 LDUR X8, [X8 - 0x8]
	0x032A9708 CMP X8, X0
	0x032A970C CSEL X0, X19, X31, EQ
	0x032A9710 MOV X1, X31
	0x032A9714 MOV X2, X31
	0x032A9718 BL 0x33A6674
	0x032A971C TBNZ X0, 0x0, 0x32A982C
	0x032A9720 ADD X2, X31, 0x8
	0x032A9724 MOV X0, X20
	0x032A9728 MOV X1, X21
	0x032A972C BL 0x32A94FC
	0x032A9730 LDR X1, [X31 + 0x8]
	0x032A9734 MOV X21, X0
	0x032A9738 CMP X1, X19
	0x032A973C B.EQ 0x32A97D0
	0x032A9740 LDR X8, [X19]
	0x032A9744 MOV X0, X19
	0x032A9748 LDR X9, [X8 + 0x2A8]
	0x032A974C LDR X2, [X8 + 0x2B0]
	0x032A9750 BLR X9
	0x032A9754 CBZ X21, 0x32A97D0
	0x032A9758 TBNZ X0, 0x0, 0x32A97D0
	0x032A975C LDR X20, [X20 + 0x38]
	0x032A9760 CBZ X20, 0x32A987C
	0x032A9764 ADRP X10, 0xE7B000
	0x032A9768 LDR X8, [X20]
	0x032A976C LDR X10, [X10 + 0xF60]
	0x032A9770 LDRH W9, [X8 + 0x12E]
	0x032A9774 LDR X1, [X10]
	0x032A9778 CBZ X9, 0x32A979C
	0x032A977C LDR X10, [X8 + 0xB0]
	0x032A9780 ADD X10, X10, 0x8
	0x032A9784 LDUR X11, [X10 - 0x8]
	0x032A9788 CMP X11, X1
	0x032A978C B.EQ 0x32A97AC
	0x032A9790 SUBS X9, X9, 0x1
	0x032A9794 ADD X10, X10, 0x10
	0x032A9798 B.NE 0x32A9784
	0x032A979C MOV X0, X20
	0x032A97A0 MOV W2, W31
	0x032A97A4 BL 0x1C5C788
	0x032A97A8 B 0x32A97B8
	0x032A97AC LDRSW X9, [X10]
	0x032A97B0 ADD X8, X8, X9, 0x4, LSL
	0x032A97B4 ADD X0, X8, 0x138
	0x032A97B8 LDP X8, X3, [X0]
	0x032A97BC MOV X0, X20
	0x032A97C0 MOV X1, X21
	0x032A97C4 MOV X2, X19
	0x032A97C8 BLR X8
	0x032A97CC MOV X21, X0
	0x032A97D0 MOV X0, X21
	0x032A97D4 LDP X20, X19, [X31 + 0x20]
	0x032A97D8 LDP X22, X21, [X31 + 0x10]
	0x032A97DC LDR X30, [X31], #0x30
	0x032A97E0 RET
	0x032A97E4 ADRP X0, 0xE4F000
	0x032A97E8 LDR X0, [X0 + 0x528]
	0x032A97EC BL 0x1C16D08
	0x032A97F0 BL 0x1C16F10
	0x032A97F4 MOV X19, X0
	0x032A97F8 ADRP X0, 0xE52000
	0x032A97FC LDR X0, [X0 + 0x5E8]
	0x032A9800 BL 0x1C16D08
	0x032A9804 MOV X1, X0
	0x032A9808 MOV X0, X19
	0x032A980C MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x1134000
	007 Move W8, [X19+1962]
	008 Move X20, X1
	009 Move X21, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xE7C000
	015 Move X0, [X0+3840]
	016 Call 0x1C17CF4
	017 Move X0, 0xE7C000
	018 Move X0, [X0+3848]
	019 Call 0x1C17CF4
	020 Move X0, 0xE7C000
	021 Move X0, [X0+3856]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X19+1962], W8
	025 Move X0, X21
	026 Move X1, X20
	027 Move X2, X31
	028 Call String.op_Equality, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {34}
	033 Move W0, 1
	034 Move X22, 0xE7C000
	035 Move X22, [X22+3840]
	036 Move X0, [X22]
	037 Call 0x1C17F10
	038 Move X1, X21
	039 Move X2, X31
	040 Move X19, X0
	041 Call AssemblyName..ctor, X0, X1
	042 Move X0, [X22]
	043 Call 0x1C17F10
	044 Move X1, X20
	045 Move X2, X31
	046 Move X21, X0
	047 Call AssemblyName..ctor, X0, X1
	048 Compare X21, 0
	049 JumpIfEqual {97}
	050 Move X8, 0xE7C000
	051 Move X0, [X21+16]
	052 Move X8, [X8+3856]
	053 Move W2, 5
	054 Move X3, X31
	055 Move X1, [X8]
	056 Call String.Equals, X0, X1, X2
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfEqual {72}
	061 Move X8, 0xE7C000
	062 Move X0, [X21+16]
	063 Move X8, [X8+3848]
	064 Move W2, 5
	065 Move X3, X31
	066 Move X1, [X8]
	067 Call String.Equals, X0, X1, X2
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {79}
	072 Move W0, W31
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X22, [X31+16]
	076 Move X21, [X31+24]
	077 Move X30, [X31+48]
	078 Return X0
	079 Compare X19, 0
	080 JumpIfEqual {97}
	081 Move X0, X19
	082 Move X1, X31
	083 Call AssemblyName.GetPublicKeyToken, X0
	084 Move X19, X0
	085 Move X0, X21
	086 Move X1, X31
	087 Call AssemblyName.GetPublicKeyToken, X0
	088 Move X1, X0
	089 Move X0, X19
	090 Move X20, [X31+32]
	091 Move X19, [X31+40]
	092 Move X22, [X31+16]
	093 Move X21, [X31+24]
	094 Move X30, [X31+48]
	095 Call SerializationInfo.Compare, X0, X1
	096 Return X0
	097 Call 0x1C17F20

Method: System.Int32 get_MemberCount()

Disassembly:
	0x032A9810 BL 0x330E100
	0x032A9814 ADRP X0, 0xE7B000

ISIL:
	001 Move W0, [X0+48]
	002 Return X0

Method: System.Type get_ObjectType()

Disassembly:
	0x032A9818 LDR X0, [X0 + 0xF68]
	0x032A981C BL 0x1C16D08

ISIL:
	001 Move X0, [X0+80]
	002 Return X0

Method: System.Boolean get_IsFullTypeNameSetExplicit()

Disassembly:
	0x032A9820 MOV X1, X0
	0x032A9824 MOV X0, X19

ISIL:
	001 Move W0, [X0+88]
	002 Return X0

Method: System.Boolean get_IsAssemblyNameSetExplicit()

Disassembly:
	0x032A9828 BL 0x1C16DEC
	0x032A982C ADRP X0, 0xE7B000

ISIL:
	001 Move W0, [X0+89]
	002 Return X0

Method: System.Runtime.Serialization.SerializationInfoEnumerator GetEnumerator()

Disassembly:
	0x032A9830 LDR X0, [X0 + 0xF70]
	0x032A9834 BL 0x1C16D08
	0x032A9838 MOV X1, X31
	0x032A983C BL 0x33BDD84
	0x032A9840 MOV X19, X0
	0x032A9844 ADRP X0, 0xE52000
	0x032A9848 LDR X0, [X0 + 0x578]
	0x032A984C BL 0x1C16D08
	0x032A9850 BL 0x1C16F10
	0x032A9854 MOV X1, X19
	0x032A9858 MOV X2, X31
	0x032A985C MOV X20, X0
	0x032A9860 BL 0x3314A68
	0x032A9864 ADRP X0, 0xE7B000
	0x032A9868 LDR X0, [X0 + 0xF68]
	0x032A986C BL 0x1C16D08
	0x032A9870 MOV X1, X0
	0x032A9874 MOV X0, X20
	0x032A9878 BL 0x1C16DEC
	0x032A987C BL 0x1C16F20
	0x032A9880 STR X30, [X31 - 0x30]!
	0x032A9884 STP X22, X21, [X31 + 0x10]
	0x032A9888 STP X20, X19, [X31 + 0x20]
	0x032A988C ADRP X22, 0x1133000
	0x032A9890 LDRB W8, [X22 + 0x7B9]
	0x032A9894 MOV X19, X2
	0x032A9898 MOV X20, X1
	0x032A989C MOV X21, X0
	0x032A98A0 TBNZ X8, 0x0, 0x32A98B8
	0x032A98A4 ADRP X0, 0xE7B000
	0x032A98A8 LDR X0, [X0 + 0xF60]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x1134000
	008 Move X23, 0xE7C000
	009 Move W8, [X20+1963]
	010 Move X23, [X23+3864]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xE7C000
	017 Move X0, [X0+3864]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+1963], W8
	021 Move X0, [X23]
	022 Move X20, [X19+16]
	023 Move X21, [X19+24]
	024 Move X22, [X19+32]
	025 Move W19, [X19+48]
	026 Call 0x1C17F10
	027 Move X1, X20
	028 Move X2, X21
	029 Move X3, X22
	030 Move W4, W19
	031 Move X5, X31
	032 Move X23, X0
	033 Call SerializationInfoEnumerator..ctor, X0, X1, X2, X3, X4
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X0, X23
	039 Move X30, [X31+48]
	040 Move X23, [X31+56]
	041 Return X0

Method: System.Void ExpandArrays()

Disassembly:
	0x032A98AC BL 0x1C16CF4
	0x032A98B0 MOVZ W8, 0x1
	0x032A98B4 STRB W8, [X22 + 0x7B9]
	0x032A98B8 ADD X2, X31, 0x8
	0x032A98BC MOV X0, X21
	0x032A98C0 MOV X1, X20
	0x032A98C4 STR X31, [X31 + 0x8]
	0x032A98C8 BL 0x32A95FC
	0x032A98CC MOV X20, X0
	0x032A98D0 CBZ X0, 0x32A9970
	0x032A98D4 LDR X1, [X31 + 0x8]
	0x032A98D8 CMP X1, X19
	0x032A98DC B.EQ 0x32A9970
	0x032A98E0 CBZ X19, 0x32A9984
	0x032A98E4 LDR X8, [X19]
	0x032A98E8 MOV X0, X19
	0x032A98EC LDR X9, [X8 + 0x2A8]
	0x032A98F0 LDR X2, [X8 + 0x2B0]
	0x032A98F4 BLR X9
	0x032A98F8 TBNZ X0, 0x0, 0x32A9970
	0x032A98FC LDR X21, [X21 + 0x38]
	0x032A9900 CBZ X21, 0x32A9984
	0x032A9904 ADRP X10, 0xE7B000
	0x032A9908 LDR X8, [X21]
	0x032A990C LDR X10, [X10 + 0xF60]
	0x032A9910 LDRH W9, [X8 + 0x12E]
	0x032A9914 LDR X1, [X10]
	0x032A9918 CBZ X9, 0x32A993C
	0x032A991C LDR X10, [X8 + 0xB0]
	0x032A9920 ADD X10, X10, 0x8
	0x032A9924 LDUR X11, [X10 - 0x8]
	0x032A9928 CMP X11, X1
	0x032A992C B.EQ 0x32A994C
	0x032A9930 SUBS X9, X9, 0x1
	0x032A9934 ADD X10, X10, 0x10
	0x032A9938 B.NE 0x32A9924
	0x032A993C MOV X0, X21
	0x032A9940 MOV W2, W31
	0x032A9944 BL 0x1C5C788
	0x032A9948 B 0x32A9958
	0x032A994C LDRSW X9, [X10]
	0x032A9950 ADD X8, X8, X9, 0x4, LSL
	0x032A9954 ADD X0, X8, 0x138
	0x032A9958 LDP X8, X3, [X0]
	0x032A995C MOV X0, X21
	0x032A9960 MOV X1, X20
	0x032A9964 MOV X2, X19
	0x032A9968 BLR X8
	0x032A996C MOV X20, X0
	0x032A9970 MOV X0, X20
	0x032A9974 LDP X20, X19, [X31 + 0x20]
	0x032A9978 LDP X22, X21, [X31 + 0x10]
	0x032A997C LDR X30, [X31], #0x30
	0x032A9980 RET
	0x032A9984 BL 0x1C16F20
	0x032A9988 SUB X31, X31, 0x40
	0x032A998C STP X30, X23, [X31 + 0x10]
	0x032A9990 STP X22, X21, [X31 + 0x20]
	0x032A9994 STP X20, X19, [X31 + 0x30]
	0x032A9998 ADRP X23, 0x1133000
	0x032A999C ADRP X21, 0xE73000
	0x032A99A0 ADRP X22, 0xE4A000
	0x032A99A4 LDRB W8, [X23 + 0x7BA]
	0x032A99A8 LDR X21, [X21 + 0x248]
	0x032A99AC LDR X22, [X22 + 0x6C0]
	0x032A99B0 MOV X19, X1
	0x032A99B4 MOV X20, X0
	0x032A99B8 TBNZ X8, 0x0, 0x32A99F4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x1134000
	008 Move X20, 0xE4B000
	009 Move X21, 0xE4B000
	010 Move X22, 0xE53000
	011 Move W8, [X23+1964]
	012 Move X20, [X20+2760]
	013 Move X21, [X21+2512]
	014 Move X22, [X22+3168]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0xE4B000
	021 Move X0, [X0+2512]
	022 Call 0x1C17CF4
	023 Move X0, 0xE4B000
	024 Move X0, [X0+2760]
	025 Call 0x1C17CF4
	026 Move X0, 0xE53000
	027 Move X0, [X0+3168]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X23+1964], W8
	031 Move W8, [X19+48]
	032 Move TEMP, 0x80000000
	033 Not TEMP
	034 Move W9, TEMP
	035 Move TEMP, 1
	036 Not TEMP
	037 Move W10, TEMP
	038 Move X0, [X20]
	039 Move W11, W8
	040 ShiftRight W11, 31
	041 And W11, W11, 0x3FFFFFFF
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction CSEL not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction CSEL not yet implemented."
	046 Move W1, W20
	047 Call 0x1C17D6C
	048 Move X8, [X21]
	049 Move X21, X0
	050 Move W1, W20
	051 Move X0, X8
	052 Call 0x1C17D6C
	053 Move X8, [X22]
	054 Move X22, X0
	055 Move W1, W20
	056 Move X0, X8
	057 Call 0x1C17D6C
	058 Move X8, [X19+16]
	059 Move W2, [X19+48]
	060 Move X20, X0
	061 Move X1, X21
	062 Move X0, X8
	063 Move X3, X31
	064 Call Array.Copy, X0, X1, X2
	065 Move X0, [X19+24]
	066 Move W2, [X19+48]
	067 Move X1, X22
	068 Move X3, X31
	069 Call Array.Copy, X0, X1, X2
	070 Move X0, [X19+32]
	071 Move W2, [X19+48]
	072 Move X1, X20
	073 Move X3, X31
	074 Call Array.Copy, X0, X1, X2
	075 Move [X19+16], X21
	076 Move [X19+24], X22
	077 Move [X19+32], X20
	078 Move X20, [X31+32]
	079 Move X19, [X31+40]
	080 Move X22, [X31+16]
	081 Move X21, [X31+24]
	082 Move X30, [X31+48]
	083 Move X23, [X31+56]
	084 Return 

Method: System.Void AddValue(System.String name, System.Object value, System.Type type)

Disassembly:
	0x032A99BC ADRP X0, 0xE73000
	0x032A99C0 LDR X0, [X0 + 0x248]
	0x032A99C4 BL 0x1C16CF4
	0x032A99C8 ADRP X0, 0xE4A000
	0x032A99CC LDR X0, [X0 + 0xB58]
	0x032A99D0 BL 0x1C16CF4
	0x032A99D4 ADRP X0, 0xE7B000
	0x032A99D8 LDR X0, [X0 + 0xF60]
	0x032A99DC BL 0x1C16CF4
	0x032A99E0 ADRP X0, 0xE4A000
	0x032A99E4 LDR X0, [X0 + 0x6C0]
	0x032A99E8 BL 0x1C16CF4
	0x032A99EC MOVZ W8, 0x1
	0x032A99F0 STRB W8, [X23 + 0x7BA]
	0x032A99F4 ADD X2, X31, 0x8
	0x032A99F8 MOV X0, X20
	0x032A99FC MOV X1, X19
	0x032A9A00 STR X31, [X31 + 0x8]
	0x032A9A04 BL 0x32A94FC
	0x032A9A08 LDR X8, [X22]
	0x032A9A0C LDR X22, [X31 + 0x8]
	0x032A9A10 LDR X21, [X21]
	0x032A9A14 MOV X19, X0
	0x032A9A18 LDR W9, [X8 + 0xE0]
	0x032A9A1C CBNZ W9, 0x32A9A28
	0x032A9A20 MOV X0, X8
	0x032A9A24 BL 0x1C16DFC
	0x032A9A28 MOV X0, X21
	0x032A9A2C MOV X1, X31
	0x032A9A30 BL 0x338C698
	0x032A9A34 CMP X22, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X1, 0
	004 JumpIfEqual {9}
	005 Compare X3, 0
	006 JumpIfEqual {16}
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Move X0, 0xE50000
	010 Move X0, [X0+1320]
	011 Call 0x1C17D08
	012 Call 0x1C17F10
	013 Move X19, X0
	014 Move X0, 0xE53000
	015 Move X0, [X0+1416]
	016 Move X0, 0xE50000
	017 Move X0, [X0+1320]
	018 Call 0x1C17D08
	019 Call 0x1C17F10
	020 Move X19, X0
	021 Move X0, 0xE53000
	022 Move X0, [X0+1512]
	023 Call 0x1C17D08
	024 Move X1, X0
	025 Move X0, X19
	026 Move X2, X31
	027 Call ArgumentNullException..ctor, X0, X1
	028 Move X0, 0xE7C000
	029 Move X0, [X0+3872]
	030 Call 0x1C17D08
	031 Move X1, X0
	032 Move X0, X19
	033 Call 0x1C17DEC

Method: System.Void AddValue(System.String name, System.Object value)

Disassembly:
	0x032A9BF0 SUBS X9, X9, 0x1
	0x032A9BF4 ADD X10, X10, 0x10
	0x032A9BF8 B.NE 0x32A9BE4
	0x032A9BFC MOVZ W2, 0x2
	0x032A9C00 MOV X0, X20
	0x032A9C04 BL 0x1C5C788
	0x032A9C08 B 0x32A9C50
	0x032A9C0C CBZ X19, 0x32A9C74
	0x032A9C10 ADRP X8, 0xE4A000
	0x032A9C14 LDR X8, [X8 + 0x758]
	0x032A9C18 LDR X9, [X19]
	0x032A9C1C MOV X0, X19
	0x032A9C20 LDR X1, [X8]
	0x032A9C24 LDR X8, [X9 + 0x40]
	0x032A9C28 LDR X9, [X1 + 0x40]
	0x032A9C2C CMP X8, X9
	0x032A9C30 B.NE 0x32A9C78
	0x032A9C34 BL 0x1C16E08
	0x032A9C38 LDR W0, [X0]
	0x032A9C3C B 0x32A9C60
	0x032A9C40 LDR W9, [X10]
	0x032A9C44 ADD W9, W9, 0x2
	0x032A9C48 ADD X8, X8, W9, 0x4, SXTW
	0x032A9C4C ADD X0, X8, 0x138
	0x032A9C50 LDP X8, X2, [X0]
	0x032A9C54 MOV X0, X20
	0x032A9C58 MOV X1, X19
	0x032A9C5C BLR X8
	0x032A9C60 LDP X20, X19, [X31 + 0x30]
	0x032A9C64 LDP X22, X21, [X31 + 0x20]
	0x032A9C68 LDP X30, X23, [X31 + 0x10]
	0x032A9C6C ADD X31, X31, 0x40
	0x032A9C70 RET
	0x032A9C74 BL 0x1C16F20
	0x032A9C78 BL 0x1C171E0
	0x032A9C7C SUB X31, X31, 0x40
	0x032A9C80 STP X30, X23, [X31 + 0x10]
	0x032A9C84 STP X22, X21, [X31 + 0x20]
	0x032A9C88 STP X20, X19, [X31 + 0x30]
	0x032A9C8C ADRP X23, 0x1133000
	0x032A9C90 ADRP X21, 0xE71000
	0x032A9C94 ADRP X22, 0xE4A000
	0x032A9C98 LDRB W8, [X23 + 0x7BC]
	0x032A9C9C LDR X21, [X21 + 0xD88]
	0x032A9CA0 LDR X22, [X22 + 0x6C0]
	0x032A9CA4 MOV X19, X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1134000
	007 Move W8, [X22+1965]
	008 Move X21, X2
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xE55000
	016 Move X0, [X0+2408]
	017 Call 0x1C17CF4
	018 Move X0, 0xE4B000
	019 Move X0, [X0+1728]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+1965], W8
	023 Compare X21, 0
	024 JumpIfEqual {32}
	025 Move X0, X21
	026 Move X1, X31
	027 Call "il2cpp_vm_object_is_inst", X0
	028 Move X3, X0
	029 Move X0, X20
	030 Move X1, X19
	031 Move X2, X21
	032 Move X8, 0xE4B000
	033 Move X8, [X8+1728]
	034 Move X0, [X8]
	035 Move X8, 0xE55000
	036 Move X8, [X8+2408]
	037 Move W9, [X0+224]
	038 Move X21, [X8]
	039 Compare W9, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X21
	043 Move X1, X31
	044 Call Type.GetTypeFromHandle, X0
	045 Move X3, X0
	046 Move X0, X20
	047 Move X1, X19
	048 Move X2, X31
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X30, [X31+48]
	054 Call SerializationInfo.AddValue, X0, X1, X2, X3
	055 Return 

Method: System.Void AddValue(System.String name, System.Boolean value)

Disassembly:
	0x032A9CA8 MOV X20, X0
	0x032A9CAC TBNZ X8, 0x0, 0x32A9CE8
	0x032A9CB0 ADRP X0, 0xE7B000
	0x032A9CB4 LDR X0, [X0 + 0xF60]
	0x032A9CB8 BL 0x1C16CF4
	0x032A9CBC ADRP X0, 0xE71000
	0x032A9CC0 LDR X0, [X0 + 0xD88]
	0x032A9CC4 BL 0x1C16CF4
	0x032A9CC8 ADRP X0, 0xE4C000
	0x032A9CCC LDR X0, [X0 + 0xA60]
	0x032A9CD0 BL 0x1C16CF4
	0x032A9CD4 ADRP X0, 0xE4A000
	0x032A9CD8 LDR X0, [X0 + 0x6C0]
	0x032A9CDC BL 0x1C16CF4
	0x032A9CE0 MOVZ W8, 0x1
	0x032A9CE4 STRB W8, [X23 + 0x7BC]
	0x032A9CE8 ADD X2, X31, 0x8
	0x032A9CEC MOV X0, X20
	0x032A9CF0 MOV X1, X19
	0x032A9CF4 STR X31, [X31 + 0x8]
	0x032A9CF8 BL 0x32A94FC
	0x032A9CFC LDR X8, [X22]
	0x032A9D00 LDR X22, [X31 + 0x8]
	0x032A9D04 LDR X21, [X21]
	0x032A9D08 MOV X19, X0
	0x032A9D0C LDR W9, [X8 + 0xE0]
	0x032A9D10 CBNZ W9, 0x32A9D1C
	0x032A9D14 MOV X0, X8
	0x032A9D18 BL 0x1C16DFC
	0x032A9D1C MOV X0, X21
	0x032A9D20 MOV X1, X31
	0x032A9D24 BL 0x338C698
	0x032A9D28 CMP X22, X0
	0x032A9D2C B.EQ 0x32A9D80
	0x032A9D30 LDR X20, [X20 + 0x38]
	0x032A9D34 CBZ X20, 0x32A9DE8
	0x032A9D38 ADRP X10, 0xE7B000
	0x032A9D3C LDR X8, [X20]
	0x032A9D40 LDR X10, [X10 + 0xF60]
	0x032A9D44 LDRH W9, [X8 + 0x12E]
	0x032A9D48 LDR X1, [X10]
	0x032A9D4C CBZ X9, 0x32A9D70
	0x032A9D50 LDR X10, [X8 + 0xB0]
	0x032A9D54 ADD X10, X10, 0x8
	0x032A9D58 LDUR X11, [X10 - 0x8]
	0x032A9D5C CMP X11, X1
	0x032A9D60 B.EQ 0x32A9DB4
	0x032A9D64 SUBS X9, X9, 0x1
	0x032A9D68 ADD X10, X10, 0x10
	0x032A9D6C B.NE 0x32A9D58
	0x032A9D70 MOVZ W2, 0x3
	0x032A9D74 MOV X0, X20
	0x032A9D78 BL 0x1C5C788
	0x032A9D7C B 0x32A9DC4

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x1134000
	011 Move X24, 0xE4B000
	012 Move X22, 0xE74000
	013 Move X23, 0xE4B000
	014 Move W8, [X25+1966]
	015 Move X24, [X24+2904]
	016 Move X22, [X22+584]
	017 Move X23, [X23+1728]
	018 Move W21, W2
	019 Move X19, X1
	020 Move X20, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {36}
	025 Move X0, 0xE74000
	026 Move X0, [X0+584]
	027 Call 0x1C17CF4
	028 Move X0, 0xE4B000
	029 Move X0, [X0+2904]
	030 Call 0x1C17CF4
	031 Move X0, 0xE4B000
	032 Move X0, [X0+1728]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X25+1966], W8
	036 Move X0, [X24]
	037 And W8, W21, 1
	038 Add X1, X31, 12
	039 Move [X31+12], W8
	040 Call 0x1C17E04
	041 Move X8, [X23]
	042 Move X22, [X22]
	043 Move X21, X0
	044 Move W9, [X8+224]
	045 Compare W9, 0
	046 JumpIfNotEqual {49}
	047 Move X0, X8
	048 Call 0x1C17DFC
	049 Move X0, X22
	050 Move X1, X31
	051 Call Type.GetTypeFromHandle, X0
	052 Move X3, X0
	053 Move X0, X20
	054 Move X1, X19
	055 Move X2, X21
	056 Call SerializationInfo.AddValue, X0, X1, X2, X3
	057 Move X20, [X31+64]
	058 Move X19, [X31+72]
	059 Move X22, [X31+48]
	060 Move X21, [X31+56]
	061 Move X24, [X31+32]
	062 Move X23, [X31+40]
	063 Move X30, [X31+16]
	064 Move X25, [X31+24]
	065 Add X31, X31, 80
	066 Return 

Method: System.Void AddValue(System.String name, System.Byte value)

Disassembly:
	0x032A9D80 CBZ X19, 0x32A9DE8
	0x032A9D84 ADRP X8, 0xE4C000
	0x032A9D88 LDR X8, [X8 + 0xA60]
	0x032A9D8C LDR X9, [X19]
	0x032A9D90 MOV X0, X19
	0x032A9D94 LDR X1, [X8]
	0x032A9D98 LDR X8, [X9 + 0x40]
	0x032A9D9C LDR X9, [X1 + 0x40]
	0x032A9DA0 CMP X8, X9
	0x032A9DA4 B.NE 0x32A9DEC
	0x032A9DA8 BL 0x1C16E08
	0x032A9DAC LDR X0, [X0]
	0x032A9DB0 B 0x32A9DD4
	0x032A9DB4 LDR W9, [X10]
	0x032A9DB8 ADD W9, W9, 0x3
	0x032A9DBC ADD X8, X8, W9, 0x4, SXTW
	0x032A9DC0 ADD X0, X8, 0x138
	0x032A9DC4 LDP X8, X2, [X0]
	0x032A9DC8 MOV X0, X20
	0x032A9DCC MOV X1, X19
	0x032A9DD0 BLR X8
	0x032A9DD4 LDP X20, X19, [X31 + 0x30]
	0x032A9DD8 LDP X22, X21, [X31 + 0x20]
	0x032A9DDC LDP X30, X23, [X31 + 0x10]
	0x032A9DE0 ADD X31, X31, 0x40
	0x032A9DE4 RET
	0x032A9DE8 BL 0x1C16F20
	0x032A9DEC BL 0x1C171E0
	0x032A9DF0 SUB X31, X31, 0x40
	0x032A9DF4 STP X30, X23, [X31 + 0x10]
	0x032A9DF8 STP X22, X21, [X31 + 0x20]
	0x032A9DFC STP X20, X19, [X31 + 0x30]
	0x032A9E00 ADRP X23, 0x1133000
	0x032A9E04 ADRP X21, 0xE72000
	0x032A9E08 ADRP X22, 0xE4A000
	0x032A9E0C LDRB W8, [X23 + 0x7BD]
	0x032A9E10 LDR X21, [X21 + 0xA80]
	0x032A9E14 LDR X22, [X22 + 0x6C0]
	0x032A9E18 MOV X19, X1
	0x032A9E1C MOV X20, X0
	0x032A9E20 TBNZ X8, 0x0, 0x32A9E5C
	0x032A9E24 ADRP X0, 0xE7B000
	0x032A9E28 LDR X0, [X0 + 0xF60]
	0x032A9E2C BL 0x1C16CF4
	0x032A9E30 ADRP X0, 0xE72000
	0x032A9E34 LDR X0, [X0 + 0xA80]
	0x032A9E38 BL 0x1C16CF4
	0x032A9E3C ADRP X0, 0xE4A000
	0x032A9E40 LDR X0, [X0 + 0xA90]
	0x032A9E44 BL 0x1C16CF4
	0x032A9E48 ADRP X0, 0xE4A000
	0x032A9E4C LDR X0, [X0 + 0x6C0]
	0x032A9E50 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x1134000
	011 Move X24, 0xE4C000
	012 Move X22, 0xE72000
	013 Move X23, 0xE4B000
	014 Move W8, [X25+1967]
	015 Move X24, [X24+2520]
	016 Move X22, [X22+3432]
	017 Move X23, [X23+1728]
	018 Move W21, W2
	019 Move X19, X1
	020 Move X20, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {36}
	025 Move X0, 0xE72000
	026 Move X0, [X0+3432]
	027 Call 0x1C17CF4
	028 Move X0, 0xE4C000
	029 Move X0, [X0+2520]
	030 Call 0x1C17CF4
	031 Move X0, 0xE4B000
	032 Move X0, [X0+1728]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X25+1967], W8
	036 Move X0, [X24]
	037 Add X1, X31, 12
	038 Move [X31+12], W21
	039 Call 0x1C17E04
	040 Move X8, [X23]
	041 Move X22, [X22]
	042 Move X21, X0
	043 Move W9, [X8+224]
	044 Compare W9, 0
	045 JumpIfNotEqual {48}
	046 Move X0, X8
	047 Call 0x1C17DFC
	048 Move X0, X22
	049 Move X1, X31
	050 Call Type.GetTypeFromHandle, X0
	051 Move X3, X0
	052 Move X0, X20
	053 Move X1, X19
	054 Move X2, X21
	055 Call SerializationInfo.AddValue, X0, X1, X2, X3
	056 Move X20, [X31+64]
	057 Move X19, [X31+72]
	058 Move X22, [X31+48]
	059 Move X21, [X31+56]
	060 Move X24, [X31+32]
	061 Move X23, [X31+40]
	062 Move X30, [X31+16]
	063 Move X25, [X31+24]
	064 Add X31, X31, 80
	065 Return 

Method: System.Void AddValue(System.String name, System.Int16 value)

Disassembly:
	0x032A9E54 MOVZ W8, 0x1
	0x032A9E58 STRB W8, [X23 + 0x7BD]
	0x032A9E5C ADD X2, X31, 0x8
	0x032A9E60 MOV X0, X20
	0x032A9E64 MOV X1, X19
	0x032A9E68 STR X31, [X31 + 0x8]
	0x032A9E6C BL 0x32A94FC
	0x032A9E70 LDR X8, [X22]
	0x032A9E74 LDR X22, [X31 + 0x8]
	0x032A9E78 LDR X21, [X21]
	0x032A9E7C MOV X19, X0
	0x032A9E80 LDR W9, [X8 + 0xE0]
	0x032A9E84 CBNZ W9, 0x32A9E90
	0x032A9E88 MOV X0, X8
	0x032A9E8C BL 0x1C16DFC
	0x032A9E90 MOV X0, X21
	0x032A9E94 MOV X1, X31
	0x032A9E98 BL 0x338C698
	0x032A9E9C CMP X22, X0
	0x032A9EA0 B.EQ 0x32A9EF4
	0x032A9EA4 LDR X20, [X20 + 0x38]
	0x032A9EA8 CBZ X20, 0x32A9F5C
	0x032A9EAC ADRP X10, 0xE7B000
	0x032A9EB0 LDR X8, [X20]
	0x032A9EB4 LDR X10, [X10 + 0xF60]
	0x032A9EB8 LDRH W9, [X8 + 0x12E]
	0x032A9EBC LDR X1, [X10]
	0x032A9EC0 CBZ X9, 0x32A9EE4
	0x032A9EC4 LDR X10, [X8 + 0xB0]
	0x032A9EC8 ADD X10, X10, 0x8
	0x032A9ECC LDUR X11, [X10 - 0x8]
	0x032A9ED0 CMP X11, X1
	0x032A9ED4 B.EQ 0x32A9F28
	0x032A9ED8 SUBS X9, X9, 0x1
	0x032A9EDC ADD X10, X10, 0x10
	0x032A9EE0 B.NE 0x32A9ECC
	0x032A9EE4 MOVZ W2, 0x4
	0x032A9EE8 MOV X0, X20
	0x032A9EEC BL 0x1C5C788
	0x032A9EF0 B 0x32A9F38
	0x032A9EF4 CBZ X19, 0x32A9F5C
	0x032A9EF8 ADRP X8, 0xE4A000
	0x032A9EFC LDR X8, [X8 + 0xA90]
	0x032A9F00 LDR X9, [X19]
	0x032A9F04 MOV X0, X19
	0x032A9F08 LDR X1, [X8]
	0x032A9F0C LDR X8, [X9 + 0x40]
	0x032A9F10 LDR X9, [X1 + 0x40]
	0x032A9F14 CMP X8, X9
	0x032A9F18 B.NE 0x32A9F60
	0x032A9F1C BL 0x1C16E08
	0x032A9F20 LDR V0, [X0]
	0x032A9F24 B 0x32A9F48

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x1134000
	011 Move X24, 0xE4F000
	012 Move X22, 0xE72000
	013 Move X23, 0xE4B000
	014 Move W8, [X25+1968]
	015 Move X24, [X24+1576]
	016 Move X22, [X22+3448]
	017 Move X23, [X23+1728]
	018 Move W21, W2
	019 Move X19, X1
	020 Move X20, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {36}
	025 Move X0, 0xE72000
	026 Move X0, [X0+3448]
	027 Call 0x1C17CF4
	028 Move X0, 0xE4F000
	029 Move X0, [X0+1576]
	030 Call 0x1C17CF4
	031 Move X0, 0xE4B000
	032 Move X0, [X0+1728]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X25+1968], W8
	036 Move X0, [X24]
	037 Add X1, X31, 12
	038 NotImplemented "Instruction STRH not yet implemented."
	039 Call 0x1C17E04
	040 Move X8, [X23]
	041 Move X22, [X22]
	042 Move X21, X0
	043 Move W9, [X8+224]
	044 Compare W9, 0
	045 JumpIfNotEqual {48}
	046 Move X0, X8
	047 Call 0x1C17DFC
	048 Move X0, X22
	049 Move X1, X31
	050 Call Type.GetTypeFromHandle, X0
	051 Move X3, X0
	052 Move X0, X20
	053 Move X1, X19
	054 Move X2, X21
	055 Call SerializationInfo.AddValue, X0, X1, X2, X3
	056 Move X20, [X31+64]
	057 Move X19, [X31+72]
	058 Move X22, [X31+48]
	059 Move X21, [X31+56]
	060 Move X24, [X31+32]
	061 Move X23, [X31+40]
	062 Move X30, [X31+16]
	063 Move X25, [X31+24]
	064 Add X31, X31, 80
	065 Return 

Method: System.Void AddValue(System.String name, System.Int32 value)

Disassembly:
	0x032A9F28 LDR W9, [X10]
	0x032A9F2C ADD W9, W9, 0x4
	0x032A9F30 ADD X8, X8, W9, 0x4, SXTW
	0x032A9F34 ADD X0, X8, 0x138
	0x032A9F38 LDP X8, X2, [X0]
	0x032A9F3C MOV X0, X20
	0x032A9F40 MOV X1, X19
	0x032A9F44 BLR X8
	0x032A9F48 LDP X20, X19, [X31 + 0x30]
	0x032A9F4C LDP X22, X21, [X31 + 0x20]
	0x032A9F50 LDP X30, X23, [X31 + 0x10]
	0x032A9F54 ADD X31, X31, 0x40
	0x032A9F58 RET
	0x032A9F5C BL 0x1C16F20
	0x032A9F60 BL 0x1C171E0
	0x032A9F64 SUB X31, X31, 0x40
	0x032A9F68 STP X30, X23, [X31 + 0x10]
	0x032A9F6C STP X22, X21, [X31 + 0x20]
	0x032A9F70 STP X20, X19, [X31 + 0x30]
	0x032A9F74 ADRP X23, 0x1133000
	0x032A9F78 ADRP X21, 0xE72000
	0x032A9F7C ADRP X22, 0xE4A000
	0x032A9F80 LDRB W8, [X23 + 0x7BE]
	0x032A9F84 LDR X21, [X21 + 0xB60]
	0x032A9F88 LDR X22, [X22 + 0x6C0]
	0x032A9F8C MOV X19, X1
	0x032A9F90 MOV X20, X0
	0x032A9F94 TBNZ X8, 0x0, 0x32A9FD0
	0x032A9F98 ADRP X0, 0xE7B000
	0x032A9F9C LDR X0, [X0 + 0xF60]
	0x032A9FA0 BL 0x1C16CF4
	0x032A9FA4 ADRP X0, 0xE72000
	0x032A9FA8 LDR X0, [X0 + 0xB60]
	0x032A9FAC BL 0x1C16CF4
	0x032A9FB0 ADRP X0, 0xE4C000
	0x032A9FB4 LDR X0, [X0 + 0x278]
	0x032A9FB8 BL 0x1C16CF4
	0x032A9FBC ADRP X0, 0xE4A000
	0x032A9FC0 LDR X0, [X0 + 0x6C0]
	0x032A9FC4 BL 0x1C16CF4
	0x032A9FC8 MOVZ W8, 0x1
	0x032A9FCC STRB W8, [X23 + 0x7BE]
	0x032A9FD0 ADD X2, X31, 0x8
	0x032A9FD4 MOV X0, X20
	0x032A9FD8 MOV X1, X19
	0x032A9FDC STR X31, [X31 + 0x8]
	0x032A9FE0 BL 0x32A94FC
	0x032A9FE4 LDR X8, [X22]
	0x032A9FE8 LDR X22, [X31 + 0x8]
	0x032A9FEC LDR X21, [X21]
	0x032A9FF0 MOV X19, X0
	0x032A9FF4 LDR W9, [X8 + 0xE0]
	0x032A9FF8 CBNZ W9, 0x32AA004

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x1134000
	011 Move X24, 0xE4B000
	012 Move X22, 0xE72000
	013 Move X23, 0xE4B000
	014 Move W8, [X25+1969]
	015 Move X24, [X24+1880]
	016 Move X22, [X22+3456]
	017 Move X23, [X23+1728]
	018 Move W21, W2
	019 Move X19, X1
	020 Move X20, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {36}
	025 Move X0, 0xE72000
	026 Move X0, [X0+3456]
	027 Call 0x1C17CF4
	028 Move X0, 0xE4B000
	029 Move X0, [X0+1880]
	030 Call 0x1C17CF4
	031 Move X0, 0xE4B000
	032 Move X0, [X0+1728]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X25+1969], W8
	036 Move X0, [X24]
	037 Add X1, X31, 12
	038 Move [X31+12], W21
	039 Call 0x1C17E04
	040 Move X8, [X23]
	041 Move X22, [X22]
	042 Move X21, X0
	043 Move W9, [X8+224]
	044 Compare W9, 0
	045 JumpIfNotEqual {48}
	046 Move X0, X8
	047 Call 0x1C17DFC
	048 Move X0, X22
	049 Move X1, X31
	050 Call Type.GetTypeFromHandle, X0
	051 Move X3, X0
	052 Move X0, X20
	053 Move X1, X19
	054 Move X2, X21
	055 Call SerializationInfo.AddValue, X0, X1, X2, X3
	056 Move X20, [X31+64]
	057 Move X19, [X31+72]
	058 Move X22, [X31+48]
	059 Move X21, [X31+56]
	060 Move X24, [X31+32]
	061 Move X23, [X31+40]
	062 Move X30, [X31+16]
	063 Move X25, [X31+24]
	064 Add X31, X31, 80
	065 Return 

Method: System.Void AddValue(System.String name, System.Int64 value)

Disassembly:
	0x032A9FFC MOV X0, X8
	0x032AA000 BL 0x1C16DFC
	0x032AA004 MOV X0, X21
	0x032AA008 MOV X1, X31
	0x032AA00C BL 0x338C698
	0x032AA010 CBZ X19, 0x32AA06C
	0x032AA014 CMP X22, X0
	0x032AA018 B.EQ 0x32AA06C
	0x032AA01C LDR X20, [X20 + 0x38]
	0x032AA020 CBZ X20, 0x32AA0CC
	0x032AA024 ADRP X10, 0xE7A000
	0x032AA028 LDR X8, [X20]
	0x032AA02C LDR X10, [X10 + 0xF60]
	0x032AA030 LDRH W9, [X8 + 0x12E]
	0x032AA034 LDR X1, [X10]
	0x032AA038 CBZ X9, 0x32AA05C
	0x032AA03C LDR X10, [X8 + 0xB0]
	0x032AA040 ADD X10, X10, 0x8
	0x032AA044 LDUR X11, [X10 - 0x8]
	0x032AA048 CMP X11, X1
	0x032AA04C B.EQ 0x32AA090
	0x032AA050 SUBS X9, X9, 0x1
	0x032AA054 ADD X10, X10, 0x10
	0x032AA058 B.NE 0x32AA044
	0x032AA05C MOVZ W2, 0x5
	0x032AA060 MOV X0, X20
	0x032AA064 BL 0x1C5C788
	0x032AA068 B 0x32AA0A0
	0x032AA06C CBZ X19, 0x32AA0B4
	0x032AA070 ADRP X8, 0xE4B000
	0x032AA074 LDR X8, [X8 + 0x278]
	0x032AA078 LDR X1, [X8]
	0x032AA07C LDR X8, [X19]
	0x032AA080 CMP X8, X1
	0x032AA084 B.EQ 0x32AA0B4
	0x032AA088 MOV X0, X19
	0x032AA08C BL 0x1C171E0
	0x032AA090 LDR W9, [X10]
	0x032AA094 ADD W9, W9, 0x5
	0x032AA098 ADD X8, X8, W9, 0x4, SXTW
	0x032AA09C ADD X0, X8, 0x138
	0x032AA0A0 LDP X8, X2, [X0]
	0x032AA0A4 MOV X0, X20
	0x032AA0A8 MOV X1, X19
	0x032AA0AC BLR X8
	0x032AA0B0 MOV X19, X0
	0x032AA0B4 MOV X0, X19
	0x032AA0B8 LDP X20, X19, [X31 + 0x30]
	0x032AA0BC LDP X22, X21, [X31 + 0x20]
	0x032AA0C0 LDP X30, X23, [X31 + 0x10]
	0x032AA0C4 ADD X31, X31, 0x40
	0x032AA0C8 RET
	0x032AA0CC BL 0x1C16F20

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x1133000
	011 Move X24, 0xE4C000
	012 Move X22, 0xE71000
	013 Move X23, 0xE4A000
	014 Move W8, [X25+1970]
	015 Move X24, [X24+2656]
	016 Move X22, [X22+3464]
	017 Move X23, [X23+1728]
	018 Move X21, X2
	019 Move X19, X1
	020 Move X20, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {36}
	025 Move X0, 0xE71000
	026 Move X0, [X0+3464]
	027 Call 0x1C17CF4
	028 Move X0, 0xE4C000
	029 Move X0, [X0+2656]
	030 Call 0x1C17CF4
	031 Move X0, 0xE4A000
	032 Move X0, [X0+1728]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X25+1970], W8
	036 Move X0, [X24]
	037 Add X1, X31, 8
	038 Move [X31+8], X21
	039 Call 0x1C17E04
	040 Move X8, [X23]
	041 Move X22, [X22]
	042 Move X21, X0
	043 Move W9, [X8+224]
	044 Compare W9, 0
	045 JumpIfNotEqual {48}
	046 Move X0, X8
	047 Call 0x1C17DFC
	048 Move X0, X22
	049 Move X1, X31
	050 Call Type.GetTypeFromHandle, X0
	051 Move X3, X0
	052 Move X0, X20
	053 Move X1, X19
	054 Move X2, X21
	055 Call SerializationInfo.AddValue, X0, X1, X2, X3
	056 Move X20, [X31+64]
	057 Move X19, [X31+72]
	058 Move X22, [X31+48]
	059 Move X21, [X31+56]
	060 Move X24, [X31+32]
	061 Move X23, [X31+40]
	062 Move X30, [X31+16]
	063 Move X25, [X31+24]
	064 Add X31, X31, 80
	065 Return 

Method: System.Void AddValue(System.String name, System.UInt64 value)

Disassembly:
	0x032AA0D0 STR W1, [X0 + 0x8]
	0x032AA0D4 STR X31, [X0]
	0x032AA0D8 RET
	0x032AA0DC STR W1, [X0 + 0x8]
	0x032AA0E0 STR X2, [X0]
	0x032AA0E4 RET
	0x032AA0E8 STP X30, X21, [X31 - 0x20]!
	0x032AA0EC STP X20, X19, [X31 + 0x10]
	0x032AA0F0 ADRP X21, 0x1132000
	0x032AA0F4 LDRB W8, [X21 + 0x7C0]
	0x032AA0F8 MOV X19, X1
	0x032AA0FC MOV X20, X0
	0x032AA100 TBNZ X8, 0x0, 0x32AA118
	0x032AA104 ADRP X0, 0xE7A000
	0x032AA108 LDR X0, [X0 + 0xF78]
	0x032AA10C BL 0x1C16CF4
	0x032AA110 MOVZ W8, 0x1
	0x032AA114 STRB W8, [X21 + 0x7C0]
	0x032AA118 CBZ X19, 0x32AA184
	0x032AA11C ADRP X21, 0xE7A000
	0x032AA120 LDR X21, [X21 + 0xF78]
	0x032AA124 LDR X9, [X19]
	0x032AA128 LDR X8, [X21]
	0x032AA12C CMP X9, X8
	0x032AA130 B.NE 0x32AA184
	0x032AA134 MOV X0, X19
	0x032AA138 BL 0x1C16E08
	0x032AA13C LDR X8, [X0]
	0x032AA140 LDR X9, [X20]
	0x032AA144 CMP X8, X9
	0x032AA148 B.NE 0x32AA184
	0x032AA14C LDR X8, [X19]
	0x032AA150 LDR X1, [X21]
	0x032AA154 MOV X0, X19
	0x032AA158 LDR X8, [X8 + 0x40]
	0x032AA15C LDR X9, [X1 + 0x40]
	0x032AA160 CMP X8, X9
	0x032AA164 B.NE 0x32AA194
	0x032AA168 BL 0x1C16E08
	0x032AA16C LDR W8, [X0 + 0x8]
	0x032AA170 LDR W9, [X20 + 0x8]
	0x032AA174 CMP W8, W9
	0x032AA178 B.NE 0x32AA184
	0x032AA17C MOVZ W0, 0x1
	0x032AA180 B 0x32AA188
	0x032AA184 MOV W0, W31
	0x032AA188 LDP X20, X19, [X31 + 0x10]
	0x032AA18C LDP X30, X21, [X31], #0x20
	0x032AA190 RET
	0x032AA194 BL 0x1C171E0
	0x032AA198 LDR W0, [X0 + 0x8]
	0x032AA19C RET
	0x032AA1A0 LDR W0, [X0 + 0x8]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x1133000
	011 Move X24, 0xE4B000
	012 Move X22, 0xE71000
	013 Move X23, 0xE4A000
	014 Move W8, [X25+1971]
	015 Move X24, [X24+1880]
	016 Move X22, [X22+3496]
	017 Move X23, [X23+1728]
	018 Move X21, X2
	019 Move X19, X1
	020 Move X20, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {36}
	025 Move X0, 0xE4A000
	026 Move X0, [X0+1728]
	027 Call 0x1C17CF4
	028 Move X0, 0xE71000
	029 Move X0, [X0+3496]
	030 Call 0x1C17CF4
	031 Move X0, 0xE4B000
	032 Move X0, [X0+1880]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X25+1971], W8
	036 Move X0, [X24]
	037 Add X1, X31, 8
	038 Move [X31+8], X21
	039 Call 0x1C17E04
	040 Move X8, [X23]
	041 Move X22, [X22]
	042 Move X21, X0
	043 Move W9, [X8+224]
	044 Compare W9, 0
	045 JumpIfNotEqual {48}
	046 Move X0, X8
	047 Call 0x1C17DFC
	048 Move X0, X22
	049 Move X1, X31
	050 Call Type.GetTypeFromHandle, X0
	051 Move X3, X0
	052 Move X0, X20
	053 Move X1, X19
	054 Move X2, X21
	055 Call SerializationInfo.AddValue, X0, X1, X2, X3
	056 Move X20, [X31+64]
	057 Move X19, [X31+72]
	058 Move X22, [X31+48]
	059 Move X21, [X31+56]
	060 Move X24, [X31+32]
	061 Move X23, [X31+40]
	062 Move X30, [X31+16]
	063 Move X25, [X31+24]
	064 Add X31, X31, 80
	065 Return 

Method: System.Void AddValue(System.String name, System.Single value)

Disassembly:
	0x032AA1A4 RET
	0x032AA1A8 SUB X31, X31, 0x50
	0x032AA1AC STP X30, X25, [X31 + 0x10]
	0x032AA1B0 STP X24, X23, [X31 + 0x20]
	0x032AA1B4 STP X22, X21, [X31 + 0x30]
	0x032AA1B8 STP X20, X19, [X31 + 0x40]
	0x032AA1BC ADRP X25, 0x1132000
	0x032AA1C0 ADRP X24, 0xE7A000
	0x032AA1C4 LDRB W8, [X25 + 0x7C1]
	0x032AA1C8 LDR X24, [X24 + 0xF80]
	0x032AA1CC MOV X20, X5
	0x032AA1D0 MOV X19, X4
	0x032AA1D4 MOV X23, X3
	0x032AA1D8 MOV X21, X1
	0x032AA1DC MOV X22, X0
	0x032AA1E0 TBNZ X8, 0x0, 0x32AA204
	0x032AA1E4 ADRP X0, 0xE7A000
	0x032AA1E8 LDR X0, [X0 + 0xF80]
	0x032AA1EC BL 0x1C16CF4
	0x032AA1F0 ADRP X0, 0xE7A000
	0x032AA1F4 LDR X0, [X0 + 0xF88]
	0x032AA1F8 BL 0x1C16CF4
	0x032AA1FC MOVZ W8, 0x1
	0x032AA200 STRB W8, [X25 + 0x7C1]
	0x032AA204 STR W31, [X20]
	0x032AA208 STR X31, [X19]
	0x032AA20C LDR X0, [X24]
	0x032AA210 LDR W8, [X0 + 0xE0]
	0x032AA214 CBNZ W8, 0x32AA220
	0x032AA218 BL 0x1C16DFC
	0x032AA21C LDR X0, [X24]
	0x032AA220 LDR X8, [X0 + 0xB8]
	0x032AA224 LDR X9, [X8 + 0x38]
	0x032AA228 CMP X22, X9
	0x032AA22C B.EQ 0x32AA2C0
	0x032AA230 CBZ X21, 0x32AA23C
	0x032AA234 LDRB W9, [X21 + 0x28]
	0x032AA238 CBNZ W9, 0x32AA25C
	0x032AA23C LDR W9, [X0 + 0xE0]
	0x032AA240 CBNZ W9, 0x32AA250
	0x032AA244 BL 0x1C16DFC
	0x032AA248 LDR X0, [X24]
	0x032AA24C LDR X8, [X0 + 0xB8]
	0x032AA250 LDR X8, [X8 + 0xC0]
	0x032AA254 CMP X22, X8
	0x032AA258 B.EQ 0x32AA2D0
	0x032AA25C LDR W8, [X0 + 0xE0]
	0x032AA260 CBNZ W8, 0x32AA26C
	0x032AA264 BL 0x1C16DFC
	0x032AA268 LDR X0, [X24]
	0x032AA26C LDR X8, [X0 + 0xB8]
	0x032AA270 LDR X9, [X8 + 0xF0]
	0x032AA274 CMP X22, X9
	0x032AA278 B.EQ 0x32AA2C8
	0x032AA27C LDR W9, [X0 + 0xE0]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], D8
	003 Move [X31+24], X30
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X24, 0x1133000
	011 Move X23, 0xE4A000
	012 Move X21, 0xE72000
	013 Move X22, 0xE4A000
	014 Move W8, [X24+1972]
	015 Move X23, [X23+2704]
	016 Move X21, [X21+2688]
	017 Move X22, [X22+1728]
	018 Move V8, V0
	019 Move X19, X1
	020 Move X20, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {36}
	025 Move X0, 0xE72000
	026 Move X0, [X0+2688]
	027 Call 0x1C17CF4
	028 Move X0, 0xE4A000
	029 Move X0, [X0+2704]
	030 Call 0x1C17CF4
	031 Move X0, 0xE4A000
	032 Move X0, [X0+1728]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X24+1972], W8
	036 Move X0, [X23]
	037 Add X1, X31, 12
	038 Move [X31+12], S8
	039 Call 0x1C17E04
	040 Move X8, [X22]
	041 Move X22, [X21]
	042 Move X21, X0
	043 Move W9, [X8+224]
	044 Compare W9, 0
	045 JumpIfNotEqual {48}
	046 Move X0, X8
	047 Call 0x1C17DFC
	048 Move X0, X22
	049 Move X1, X31
	050 Call Type.GetTypeFromHandle, X0
	051 Move X3, X0
	052 Move X0, X20
	053 Move X1, X19
	054 Move X2, X21
	055 Call SerializationInfo.AddValue, X0, X1, X2, X3
	056 Move X20, [X31+64]
	057 Move X19, [X31+72]
	058 Move X22, [X31+48]
	059 Move X21, [X31+56]
	060 Move X24, [X31+32]
	061 Move X23, [X31+40]
	062 Move X30, [X31+24]
	063 Move V8, [X31+16]
	064 Add X31, X31, 80
	065 Return 

Method: System.Void AddValue(System.String name, System.DateTime value)

Disassembly:
	0x032AA280 CBNZ W9, 0x32AA290
	0x032AA284 BL 0x1C16DFC
	0x032AA288 LDR X0, [X24]
	0x032AA28C LDR X8, [X0 + 0xB8]
	0x032AA290 LDR X8, [X8 + 0xE8]
	0x032AA294 CMP X22, X8
	0x032AA298 B.EQ 0x32AA2D8
	0x032AA29C LDR W8, [X0 + 0xE0]
	0x032AA2A0 CBNZ W8, 0x32AA2A8
	0x032AA2A4 BL 0x1C16DFC
	0x032AA2A8 MOV X0, X22
	0x032AA2AC MOV X1, X19
	0x032AA2B0 BL 0x32AA490
	0x032AA2B4 TBZ X0, 0x0, 0x32AA2E0
	0x032AA2B8 MOVZ W0, 0x7
	0x032AA2BC B 0x32AA3E4
	0x032AA2C0 MOVZ W0, 0x1
	0x032AA2C4 B 0x32AA3E4
	0x032AA2C8 MOVZ W0, 0x6
	0x032AA2CC B 0x32AA3E4
	0x032AA2D0 MOVZ W0, 0x2
	0x032AA2D4 B 0x32AA3E4
	0x032AA2D8 MOVZ W0, 0x5
	0x032AA2DC B 0x32AA3E4
	0x032AA2E0 CBZ X23, 0x32AA3FC
	0x032AA2E4 MOV X0, X23
	0x032AA2E8 MOV X1, X22
	0x032AA2EC BL 0x32AA788
	0x032AA2F0 CBZ W0, 0x32AA320
	0x032AA2F4 ADRP X8, 0xE7A000
	0x032AA2F8 LDR X8, [X8 + 0xF88]
	0x032AA2FC STR W0, [X31 + 0xC]
	0x032AA300 ADD X1, X31, 0xC
	0x032AA304 LDR X8, [X8]
	0x032AA308 MOV X0, X8
	0x032AA30C BL 0x1C16E04
	0x032AA310 MOV X8, X0
	0x032AA314 MOV W0, W31
	0x032AA318 STR X8, [X19]
	0x032AA31C B 0x32AA3E4
	0x032AA320 CBZ X21, 0x32AA350
	0x032AA324 LDR X23, [X21 + 0x80]
	0x032AA328 CBNZ X23, 0x32AA338
	0x032AA32C LDR X8, [X21 + 0x38]
	0x032AA330 CBZ X8, 0x32AA3FC
	0x032AA334 LDR X23, [X8 + 0x18]
	0x032AA338 LDR X0, [X21 + 0x78]
	0x032AA33C CBNZ X0, 0x32AA390
	0x032AA340 LDR X8, [X21 + 0x38]
	0x032AA344 CBZ X8, 0x32AA3FC
	0x032AA348 LDR X0, [X8 + 0x10]
	0x032AA34C B 0x32AA390
	0x032AA350 CBZ X22, 0x32AA3FC

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x1133000
	011 Move X24, 0xE4B000
	012 Move X22, 0xE7B000
	013 Move X23, 0xE4A000
	014 Move W8, [X25+1973]
	015 Move X24, [X24+2544]
	016 Move X22, [X22+3896]
	017 Move X23, [X23+1728]
	018 Move X21, X2
	019 Move X19, X1
	020 Move X20, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {36}
	025 Move X0, 0xE7B000
	026 Move X0, [X0+3896]
	027 Call 0x1C17CF4
	028 Move X0, 0xE4B000
	029 Move X0, [X0+2544]
	030 Call 0x1C17CF4
	031 Move X0, 0xE4A000
	032 Move X0, [X0+1728]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X25+1973], W8
	036 Move X0, [X24]
	037 Add X1, X31, 8
	038 Move [X31+8], X21
	039 Call 0x1C17E04
	040 Move X8, [X23]
	041 Move X22, [X22]
	042 Move X21, X0
	043 Move W9, [X8+224]
	044 Compare W9, 0
	045 JumpIfNotEqual {48}
	046 Move X0, X8
	047 Call 0x1C17DFC
	048 Move X0, X22
	049 Move X1, X31
	050 Call Type.GetTypeFromHandle, X0
	051 Move X3, X0
	052 Move X0, X20
	053 Move X1, X19
	054 Move X2, X21
	055 Call SerializationInfo.AddValue, X0, X1, X2, X3
	056 Move X20, [X31+64]
	057 Move X19, [X31+72]
	058 Move X22, [X31+48]
	059 Move X21, [X31+56]
	060 Move X24, [X31+32]
	061 Move X23, [X31+40]
	062 Move X30, [X31+16]
	063 Move X25, [X31+24]
	064 Add X31, X31, 80
	065 Return 

Method: System.Void AddValueInternal(System.String name, System.Object value, System.Type type)

Disassembly:
	0x032A9A38 B.EQ 0x32A9A8C
	0x032A9A3C LDR X20, [X20 + 0x38]
	0x032A9A40 CBZ X20, 0x32A9B00
	0x032A9A44 ADRP X10, 0xE7B000
	0x032A9A48 LDR X8, [X20]
	0x032A9A4C LDR X10, [X10 + 0xF60]
	0x032A9A50 LDRH W9, [X8 + 0x12E]
	0x032A9A54 LDR X1, [X10]
	0x032A9A58 CBZ X9, 0x32A9A7C
	0x032A9A5C LDR X10, [X8 + 0xB0]
	0x032A9A60 ADD X10, X10, 0x8
	0x032A9A64 LDUR X11, [X10 - 0x8]
	0x032A9A68 CMP X11, X1
	0x032A9A6C B.EQ 0x32A9AC8
	0x032A9A70 SUBS X9, X9, 0x1
	0x032A9A74 ADD X10, X10, 0x10
	0x032A9A78 B.NE 0x32A9A64
	0x032A9A7C MOVZ W2, 0x1
	0x032A9A80 MOV X0, X20
	0x032A9A84 BL 0x1C5C788
	0x032A9A88 B 0x32A9AD8
	0x032A9A8C CBZ X19, 0x32A9B00
	0x032A9A90 ADRP X8, 0xE4A000
	0x032A9A94 LDR X8, [X8 + 0xB58]
	0x032A9A98 LDR X9, [X19]
	0x032A9A9C MOV X0, X19
	0x032A9AA0 LDR X1, [X8]
	0x032A9AA4 LDR X8, [X9 + 0x40]
	0x032A9AA8 LDR X9, [X1 + 0x40]
	0x032A9AAC CMP X8, X9
	0x032A9AB0 B.NE 0x32A9B04
	0x032A9AB4 BL 0x1C16E08
	0x032A9AB8 LDRB W8, [X0]
	0x032A9ABC CMP W8, 0x0
	0x032A9AC0 CSET W0, NE
	0x032A9AC4 B 0x32A9AE8
	0x032A9AC8 LDR W9, [X10]
	0x032A9ACC ADD W9, W9, 0x1
	0x032A9AD0 ADD X8, X8, W9, 0x4, SXTW
	0x032A9AD4 ADD X0, X8, 0x138
	0x032A9AD8 LDP X8, X2, [X0]
	0x032A9ADC MOV X0, X20
	0x032A9AE0 MOV X1, X19
	0x032A9AE4 BLR X8
	0x032A9AE8 LDP X20, X19, [X31 + 0x30]
	0x032A9AEC LDP X22, X21, [X31 + 0x20]
	0x032A9AF0 LDP X30, X23, [X31 + 0x10]
	0x032A9AF4 AND W0, W0, 0x1
	0x032A9AF8 ADD X31, X31, 0x40
	0x032A9AFC RET
	0x032A9B00 BL 0x1C16F20
	0x032A9B04 BL 0x1C171E0
	0x032A9B08 SUB X31, X31, 0x40
	0x032A9B0C STP X30, X23, [X31 + 0x10]
	0x032A9B10 STP X22, X21, [X31 + 0x20]
	0x032A9B14 STP X20, X19, [X31 + 0x30]
	0x032A9B18 ADRP X23, 0x1133000
	0x032A9B1C ADRP X21, 0xE71000
	0x032A9B20 ADRP X22, 0xE4A000
	0x032A9B24 LDRB W8, [X23 + 0x7BB]
	0x032A9B28 LDR X21, [X21 + 0xD80]
	0x032A9B2C LDR X22, [X22 + 0x6C0]
	0x032A9B30 MOV X19, X1
	0x032A9B34 MOV X20, X0
	0x032A9B38 TBNZ X8, 0x0, 0x32A9B74
	0x032A9B3C ADRP X0, 0xE7B000
	0x032A9B40 LDR X0, [X0 + 0xF60]
	0x032A9B44 BL 0x1C16CF4
	0x032A9B48 ADRP X0, 0xE71000
	0x032A9B4C LDR X0, [X0 + 0xD80]
	0x032A9B50 BL 0x1C16CF4
	0x032A9B54 ADRP X0, 0xE4A000
	0x032A9B58 LDR X0, [X0 + 0x758]
	0x032A9B5C BL 0x1C16CF4
	0x032A9B60 ADRP X0, 0xE4A000
	0x032A9B64 LDR X0, [X0 + 0x6C0]
	0x032A9B68 BL 0x1C16CF4
	0x032A9B6C MOVZ W8, 0x1
	0x032A9B70 STRB W8, [X23 + 0x7BB]
	0x032A9B74 ADD X2, X31, 0x8
	0x032A9B78 MOV X0, X20
	0x032A9B7C MOV X1, X19
	0x032A9B80 STR X31, [X31 + 0x8]
	0x032A9B84 BL 0x32A94FC
	0x032A9B88 LDR X8, [X22]
	0x032A9B8C LDR X22, [X31 + 0x8]
	0x032A9B90 LDR X21, [X21]
	0x032A9B94 MOV X19, X0
	0x032A9B98 LDR W9, [X8 + 0xE0]
	0x032A9B9C CBNZ W9, 0x32A9BA8
	0x032A9BA0 MOV X0, X8
	0x032A9BA4 BL 0x1C16DFC
	0x032A9BA8 MOV X0, X21
	0x032A9BAC MOV X1, X31
	0x032A9BB0 BL 0x338C698
	0x032A9BB4 CMP X22, X0
	0x032A9BB8 B.EQ 0x32A9C0C
	0x032A9BBC LDR X20, [X20 + 0x38]
	0x032A9BC0 CBZ X20, 0x32A9C74
	0x032A9BC4 ADRP X10, 0xE7B000
	0x032A9BC8 LDR X8, [X20]
	0x032A9BCC LDR X10, [X10 + 0xF60]
	0x032A9BD0 LDRH W9, [X8 + 0x12E]
	0x032A9BD4 LDR X1, [X10]
	0x032A9BD8 CBZ X9, 0x32A9BFC
	0x032A9BDC LDR X10, [X8 + 0xB0]
	0x032A9BE0 ADD X10, X10, 0x8
	0x032A9BE4 LDUR X11, [X10 - 0x8]
	0x032A9BE8 CMP X11, X1
	0x032A9BEC B.EQ 0x32A9C40

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x1134000
	008 Move W8, [X23+1974]
	009 Move X19, X3
	010 Move X21, X2
	011 Move X22, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xE4D000
	018 Move X0, [X0+2856]
	019 Call 0x1C17CF4
	020 Move X0, 0xE50000
	021 Move X0, [X0+1944]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+1974], W8
	025 Move X0, [X20+40]
	026 Compare X0, 0
	027 JumpIfEqual {104}
	028 Move X8, 0xE50000
	029 Move X8, [X8+1944]
	030 Move X1, X22
	031 Move X2, [X8]
	032 Call Dictionary`2<Object, Int32>.ContainsKey, X0, X1
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {109}
	037 Move X0, [X20+40]
	038 Compare X0, 0
	039 JumpIfEqual {104}
	040 Move X8, 0xE4D000
	041 Move X8, [X8+2856]
	042 Move W2, [X20+48]
	043 Move X1, X22
	044 Move X3, [X8]
	045 Call Dictionary`2<Object, Int32>.Add, X0, X1, X2
	046 Move X8, [X20+16]
	047 Compare X8, 0
	048 JumpIfEqual {104}
	049 Move W9, [X20+48]
	050 Move W10, [X8+24]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X0, X20
	053 Call SerializationInfo.ExpandArrays, X0
	054 Move X8, [X20+16]
	055 Compare X8, 0
	056 JumpIfEqual {104}
	057 Move W9, [X20+48]
	058 Move W10, [X8+24]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X23, W9
	061 Add X8, X8, X23
	062 Move [X8+32], X22
	063 Move X22, [X20+24]
	064 Compare X22, 0
	065 JumpIfEqual {104}
	066 Compare X21, 0
	067 JumpIfEqual {74}
	068 Move X8, [X22]
	069 Move X0, X21
	070 Move X1, [X8+64]
	071 Call 0x1C17E00
	072 Compare X0, 0
	073 JumpIfEqual {106}
	074 Move W8, [X22+24]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Add X8, X22, X23
	077 Move [X8+32], X21
	078 Move X21, [X20+32]
	079 Compare X21, 0
	080 JumpIfEqual {104}
	081 NotImplemented "Instruction LDRSW not yet implemented."
	082 Compare X19, 0
	083 JumpIfEqual {90}
	084 Move X8, [X21]
	085 Move X0, X19
	086 Move X1, [X8+64]
	087 Call 0x1C17E00
	088 Compare X0, 0
	089 JumpIfEqual {106}
	090 Move W8, [X21+24]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Add X8, X21, X22
	093 Move [X8+32], X19
	094 Move W8, [X20+48]
	095 Move X22, [X31+16]
	096 Move X21, [X31+24]
	097 Add W8, W8, 1
	098 Move [X20+48], W8
	099 Move X20, [X31+32]
	100 Move X19, [X31+40]
	101 Move X30, [X31+48]
	102 Move X23, [X31+56]
	103 Return 
	104 Call 0x1C17F20
	105 Call 0x1C17F28
	106 Call 0x1C17F44
	107 Move X1, X31
	108 Call 0x1C17DEC
	109 Move X0, 0xE7C000
	110 Move X0, [X0+3880]
	111 Call 0x1C17D08
	112 Move X1, X31
	113 Call Environment.GetResourceString, X0
	114 Move X19, X0
	115 Move X0, 0xE75000
	116 Move X0, [X0+736]
	117 Call 0x1C17D08
	118 Call 0x1C17F10
	119 Move X1, X19
	120 Move X2, X31
	121 Move X20, X0
	122 Call SerializationException..ctor, X0, X1
	123 Move X0, 0xE7C000
	124 Move X0, [X0+3888]
	125 Call 0x1C17D08
	126 Move X1, X0
	127 Move X0, X20
	128 Call 0x1C17DEC

Method: System.Void UpdateValue(System.String name, System.Object value, System.Type type)

Disassembly:
	0x032AA354 LDR X8, [X22]
	0x032AA358 MOV X0, X22
	0x032AA35C LDR X9, [X8 + 0x2F8]
	0x032AA360 LDR X1, [X8 + 0x300]
	0x032AA364 BLR X9
	0x032AA368 CBZ X0, 0x32AA3FC
	0x032AA36C LDR X8, [X0]
	0x032AA370 LDP X9, X1, [X8 + 0x1B8]
	0x032AA374 BLR X9
	0x032AA378 LDR X8, [X22]
	0x032AA37C MOV X23, X0
	0x032AA380 MOV X0, X22
	0x032AA384 LDR X9, [X8 + 0x2E8]
	0x032AA388 LDR X1, [X8 + 0x2F0]
	0x032AA38C BLR X9
	0x032AA390 STR X0, [X19]
	0x032AA394 LDR X0, [X24]
	0x032AA398 LDR W8, [X0 + 0xE0]
	0x032AA39C CBNZ W8, 0x32AA3A4
	0x032AA3A0 BL 0x1C16DFC
	0x032AA3A4 CBZ X23, 0x32AA3FC
	0x032AA3A8 LDR X8, [X24]
	0x032AA3AC MOV X0, X23
	0x032AA3B0 MOV X2, X31
	0x032AA3B4 LDR X8, [X8 + 0xB8]
	0x032AA3B8 LDR X1, [X8 + 0xD8]
	0x032AA3BC BL 0x322693C
	0x032AA3C0 TBZ X0, 0x0, 0x32AA3D0
	0x032AA3C4 STR W31, [X20]
	0x032AA3C8 MOVZ W0, 0x3
	0x032AA3CC B 0x32AA3E4
	0x032AA3D0 CBZ X21, 0x32AA3FC
	0x032AA3D4 LDR W8, [X21 + 0x70]
	0x032AA3D8 STR W8, [X20]
	0x032AA3DC CBZ W8, 0x32AA400
	0x032AA3E0 MOVZ W0, 0x4
	0x032AA3E4 LDP X20, X19, [X31 + 0x40]
	0x032AA3E8 LDP X22, X21, [X31 + 0x30]
	0x032AA3EC LDP X24, X23, [X31 + 0x20]
	0x032AA3F0 LDP X30, X25, [X31 + 0x10]
	0x032AA3F4 ADD X31, X31, 0x50
	0x032AA3F8 RET
	0x032AA3FC BL 0x1C16F20
	0x032AA400 ADRP X0, 0xE49000
	0x032AA404 LDR X0, [X0 + 0x9D0]
	0x032AA408 BL 0x1C16D08
	0x032AA40C MOVZ W1, 0x1
	0x032AA410 BL 0x1C16D6C
	0x032AA414 LDR X19, [X19]
	0x032AA418 MOV X20, X0
	0x032AA41C BL 0x19903C0
	0x032AA420 MOV X0, X20
	0x032AA424 MOV X1, X19
	0x032AA428 BL 0x19980B4
	0x032AA42C MOV X0, X20
	0x032AA430 MOV X1, X31
	0x032AA434 MOV X2, X19

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, X3
	009 Move X21, X2
	010 Move X23, X1
	011 Move X22, X0
	012 Call SerializationInfo.FindElement, X0, X1
	013 Move TEMP, X0
	014 And TEMP, TEMP, -2147483648
	015 Compare TEMP, -2147483648
	016 JumpIfEqual {57}
	017 Move X24, [X22+24]
	018 Compare X24, 0
	019 JumpIfEqual {70}
	020 Move W20, W0
	021 Compare X21, 0
	022 JumpIfEqual {29}
	023 Move X8, [X24]
	024 Move X0, X21
	025 Move X1, [X8+64]
	026 Call 0x1C17E00
	027 Compare X0, 0
	028 JumpIfEqual {72}
	029 Move W8, [X24+24]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move W23, W20
	032 Add X8, X24, X23
	033 Move [X8+32], X21
	034 Move X21, [X22+32]
	035 Compare X21, 0
	036 JumpIfEqual {70}
	037 Compare X19, 0
	038 JumpIfEqual {45}
	039 Move X8, [X21]
	040 Move X0, X19
	041 Move X1, [X8+64]
	042 Call 0x1C17E00
	043 Compare X0, 0
	044 JumpIfEqual {72}
	045 Move W8, [X21+24]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Add X8, X21, X23
	048 Move [X8+32], X19
	049 Move X20, [X31+48]
	050 Move X19, [X31+56]
	051 Move X22, [X31+32]
	052 Move X21, [X31+40]
	053 Move X24, [X31+16]
	054 Move X23, [X31+24]
	055 Move X30, [X31+64]
	056 Return 
	057 Move X0, X22
	058 Move X1, X23
	059 Move X2, X21
	060 Move X3, X19
	061 Move X20, [X31+48]
	062 Move X19, [X31+56]
	063 Move X22, [X31+32]
	064 Move X21, [X31+40]
	065 Move X24, [X31+16]
	066 Move X23, [X31+24]
	067 Move X30, [X31+64]
	068 Call SerializationInfo.AddValueInternal, X0, X1, X2, X3
	069 Return 
	070 Call 0x1C17F20
	071 Call 0x1C17F28
	072 Call 0x1C17F44
	073 Move X1, X31
	074 Call 0x1C17DEC

Method: System.Int32 FindElement(System.String name)

Disassembly:
	0x032AA438 BL 0x1993444
	0x032AA43C ADRP X0, 0xE7A000
	0x032AA440 LDR X0, [X0 + 0xF90]
	0x032AA444 BL 0x1C16D08
	0x032AA448 MOV X1, X20
	0x032AA44C MOV X2, X31
	0x032AA450 BL 0x33BFB40
	0x032AA454 MOV X19, X0
	0x032AA458 ADRP X0, 0xE73000
	0x032AA45C LDR X0, [X0 + 0x2E0]
	0x032AA460 BL 0x1C16D08
	0x032AA464 BL 0x1C16F10
	0x032AA468 MOV X1, X19
	0x032AA46C MOV X2, X31
	0x032AA470 MOV X20, X0
	0x032AA474 BL 0x329F100
	0x032AA478 ADRP X0, 0xE7A000
	0x032AA47C LDR X0, [X0 + 0xF98]
	0x032AA480 BL 0x1C16D08
	0x032AA484 MOV X1, X0
	0x032AA488 MOV X0, X20
	0x032AA48C BL 0x1C16DEC
	0x032AA490 STR X30, [X31 - 0x30]!
	0x032AA494 STP X22, X21, [X31 + 0x10]
	0x032AA498 STP X20, X19, [X31 + 0x20]
	0x032AA49C ADRP X22, 0x1132000
	0x032AA4A0 ADRP X21, 0xE7A000
	0x032AA4A4 LDRB W8, [X22 + 0x7DB]
	0x032AA4A8 LDR X21, [X21 + 0xF80]
	0x032AA4AC MOV X19, X1
	0x032AA4B0 MOV X20, X0
	0x032AA4B4 TBNZ X8, 0x0, 0x32AA4D8
	0x032AA4B8 ADRP X0, 0xE7A000
	0x032AA4BC LDR X0, [X0 + 0xF80]
	0x032AA4C0 BL 0x1C16CF4
	0x032AA4C4 ADRP X0, 0xE7A000
	0x032AA4C8 LDR X0, [X0 + 0xF88]
	0x032AA4CC BL 0x1C16CF4
	0x032AA4D0 MOVZ W8, 0x1
	0x032AA4D4 STRB W8, [X22 + 0x7DB]
	0x032AA4D8 STR X31, [X19]
	0x032AA4DC LDR X0, [X21]
	0x032AA4E0 LDR W8, [X0 + 0xE0]
	0x032AA4E4 CBNZ W8, 0x32AA4F0
	0x032AA4E8 BL 0x1C16DFC
	0x032AA4EC LDR X0, [X21]
	0x032AA4F0 LDR X8, [X0 + 0xB8]
	0x032AA4F4 LDR X9, [X8 + 0xF8]
	0x032AA4F8 CMP X20, X9

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1133000
	007 Move W8, [X21+1975]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE7B000
	015 Move X0, [X0+3904]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1975], W8
	019 Move [X31+12], W31
	020 Compare X19, 0
	021 JumpIfEqual {40}
	022 Move X0, [X20+40]
	023 Compare X0, 0
	024 JumpIfEqual {58}
	025 Move X8, 0xE7B000
	026 Move X8, [X8+3904]
	027 Add X2, X31, 12
	028 Move X1, X19
	029 Move X3, [X8]
	030 Call Dictionary`2<Object, Int32>.TryGetValue, X0, X1, X2
	031 Move W8, [X31+12]
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X30, [X31+16]
	035 Move X21, [X31+24]
	036 And W31, W0, 1
	037 NotImplemented "Instruction CSINV not yet implemented."
	038 Add X31, X31, 48
	039 Return X0
	040 Move X0, 0xE4F000
	041 Move X0, [X0+1320]
	042 Call 0x1C17D08
	043 Call 0x1C17F10
	044 Move X19, X0
	045 Move X0, 0xE52000
	046 Move X0, [X0+1416]
	047 Call 0x1C17D08
	048 Move X1, X0
	049 Move X0, X19
	050 Move X2, X31
	051 Call ArgumentNullException..ctor, X0, X1
	052 Move X0, 0xE7B000
	053 Move X0, [X0+3912]
	054 Call 0x1C17D08
	055 Move X1, X0
	056 Move X0, X19
	057 Call 0x1C17DEC
	058 Call 0x1C17F20

Method: System.Object GetElement(System.String name, out System.Type foundType)

Disassembly:
	0x032AA4FC B.EQ 0x32AA668
	0x032AA500 LDR W9, [X0 + 0xE0]
	0x032AA504 CBNZ W9, 0x32AA514
	0x032AA508 BL 0x1C16DFC
	0x032AA50C LDR X0, [X21]
	0x032AA510 LDR X8, [X0 + 0xB8]
	0x032AA514 LDR X9, [X8 + 0x100]
	0x032AA518 CMP X20, X9
	0x032AA51C B.EQ 0x32AA688
	0x032AA520 LDR W9, [X0 + 0xE0]
	0x032AA524 CBNZ W9, 0x32AA534
	0x032AA528 BL 0x1C16DFC
	0x032AA52C LDR X0, [X21]
	0x032AA530 LDR X8, [X0 + 0xB8]
	0x032AA534 LDR X9, [X8 + 0x108]
	0x032AA538 CMP X20, X9
	0x032AA53C B.EQ 0x32AA69C
	0x032AA540 LDR W9, [X0 + 0xE0]
	0x032AA544 CBNZ W9, 0x32AA554
	0x032AA548 BL 0x1C16DFC
	0x032AA54C LDR X0, [X21]
	0x032AA550 LDR X8, [X0 + 0xB8]
	0x032AA554 LDR X9, [X8 + 0x118]
	0x032AA558 CMP X20, X9
	0x032AA55C B.EQ 0x32AA6B0
	0x032AA560 LDR W9, [X0 + 0xE0]
	0x032AA564 CBNZ W9, 0x32AA574
	0x032AA568 BL 0x1C16DFC
	0x032AA56C LDR X0, [X21]
	0x032AA570 LDR X8, [X0 + 0xB8]
	0x032AA574 LDR X9, [X8 + 0x120]
	0x032AA578 CMP X20, X9
	0x032AA57C B.EQ 0x32AA6C4
	0x032AA580 LDR W9, [X0 + 0xE0]
	0x032AA584 CBNZ W9, 0x32AA594
	0x032AA588 BL 0x1C16DFC
	0x032AA58C LDR X0, [X21]
	0x032AA590 LDR X8, [X0 + 0xB8]
	0x032AA594 LDR X9, [X8 + 0x128]
	0x032AA598 CMP X20, X9
	0x032AA59C B.EQ 0x32AA6D8
	0x032AA5A0 LDR W9, [X0 + 0xE0]
	0x032AA5A4 CBNZ W9, 0x32AA5B4
	0x032AA5A8 BL 0x1C16DFC
	0x032AA5AC LDR X0, [X21]
	0x032AA5B0 LDR X8, [X0 + 0xB8]
	0x032AA5B4 LDR X9, [X8 + 0x130]
	0x032AA5B8 CMP X20, X9
	0x032AA5BC B.EQ 0x32AA6EC
	0x032AA5C0 LDR W9, [X0 + 0xE0]
	0x032AA5C4 CBNZ W9, 0x32AA5D4
	0x032AA5C8 BL 0x1C16DFC
	0x032AA5CC LDR X0, [X21]
	0x032AA5D0 LDR X8, [X0 + 0xB8]
	0x032AA5D4 LDR X9, [X8 + 0x138]
	0x032AA5D8 CMP X20, X9
	0x032AA5DC B.EQ 0x32AA700
	0x032AA5E0 LDR W9, [X0 + 0xE0]
	0x032AA5E4 CBNZ W9, 0x32AA5F4
	0x032AA5E8 BL 0x1C16DFC
	0x032AA5EC LDR X0, [X21]
	0x032AA5F0 LDR X8, [X0 + 0xB8]
	0x032AA5F4 LDR X9, [X8 + 0x140]
	0x032AA5F8 CMP X20, X9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X2
	006 Move X19, X1
	007 Move X21, X0
	008 Call SerializationInfo.FindElement, X0, X1
	009 Add W31, W0, 1
	010 Move X9, [X21+32]
	011 Compare X9, 0
	012 JumpIfEqual {31}
	013 Move W8, [X9+24]
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X8, W0
	016 Add X9, X9, X8
	017 Move X9, [X9+32]
	018 Move [X20], X9
	019 Move X9, [X21+24]
	020 Compare X9, 0
	021 JumpIfEqual {31}
	022 Move W10, [X9+24]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Add X8, X9, X8
	025 Move X0, [X8+32]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0
	031 Call 0x1C17F20
	032 Call 0x1C17F28
	033 Move X0, 0xE4A000
	034 Move X0, [X0+2512]
	035 Call 0x1C17D08
	036 Move W1, 1
	037 Call 0x1C17D6C
	038 Move X20, X0
	039 Call 0x19913C0
	040 Move X0, X20
	041 Move X1, X19
	042 Call 0x19990B4
	043 Move X0, X20
	044 Move X1, X31
	045 Move X2, X19
	046 Call 0x1994444
	047 Move X0, 0xE7B000
	048 Move X0, [X0+3920]
	049 Call 0x1C17D08
	050 Move X1, X20
	051 Move X2, X31
	052 Call Environment.GetResourceString, X0, X1
	053 Move X19, X0
	054 Move X0, 0xE74000
	055 Move X0, [X0+736]
	056 Call 0x1C17D08
	057 Call 0x1C17F10
	058 Move X1, X19
	059 Move X2, X31
	060 Move X20, X0
	061 Call SerializationException..ctor, X0, X1
	062 Move X0, 0xE7B000
	063 Move X0, [X0+3928]
	064 Call 0x1C17D08
	065 Move X1, X0
	066 Move X0, X20
	067 Call 0x1C17DEC

Method: System.Object GetElementNoThrow(System.String name, out System.Type foundType)

Disassembly:
	0x032AA5FC B.EQ 0x32AA714
	0x032AA600 LDR W9, [X0 + 0xE0]
	0x032AA604 CBNZ W9, 0x32AA614
	0x032AA608 BL 0x1C16DFC
	0x032AA60C LDR X0, [X21]
	0x032AA610 LDR X8, [X0 + 0xB8]
	0x032AA614 LDR X9, [X8 + 0x158]
	0x032AA618 CMP X20, X9
	0x032AA61C B.EQ 0x32AA728
	0x032AA620 LDR W9, [X0 + 0xE0]
	0x032AA624 CBNZ W9, 0x32AA634
	0x032AA628 BL 0x1C16DFC
	0x032AA62C LDR X0, [X21]
	0x032AA630 LDR X8, [X0 + 0xB8]
	0x032AA634 LDR X9, [X8 + 0x160]
	0x032AA638 CMP X20, X9
	0x032AA63C B.EQ 0x32AA73C
	0x032AA640 LDR W9, [X0 + 0xE0]
	0x032AA644 CBNZ W9, 0x32AA654
	0x032AA648 BL 0x1C16DFC
	0x032AA64C LDR X8, [X21]
	0x032AA650 LDR X8, [X8 + 0xB8]
	0x032AA654 LDR X8, [X8 + 0x168]
	0x032AA658 CMP X20, X8
	0x032AA65C B.EQ 0x32AA750
	0x032AA660 MOV W20, W31
	0x032AA664 B 0x32AA774
	0x032AA668 ADRP X8, 0xE7A000
	0x032AA66C LDR X8, [X8 + 0xF88]
	0x032AA670 MOVZ W20, 0x1
	0x032AA674 ADD X1, X31, 0xC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X2
	005 Move X20, X0
	006 Call SerializationInfo.FindElement, X0, X1
	007 Add W31, W0, 1
	008 Move X9, [X20+32]
	009 Compare X9, 0
	010 JumpIfEqual {30}
	011 Move W8, [X9+24]
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X8, W0
	014 Add X9, X9, X8
	015 Move X9, [X9+32]
	016 Move [X19], X9
	017 Move X9, [X20+24]
	018 Compare X9, 0
	019 JumpIfEqual {30}
	020 Move W10, [X9+24]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Add X8, X9, X8
	023 Move X0, [X8+32]
	024 Move X0, X31
	025 Move [X19], X31
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0
	030 Call 0x1C17F20
	031 Call 0x1C17F28

Method: System.Object GetValue(System.String name, System.Type type)

Disassembly:
	0x032AA678 STR W20, [X31 + 0xC]
	0x032AA67C LDR X0, [X8]
	0x032AA680 BL 0x1C16E04
	0x032AA684 B 0x32AA770
	0x032AA688 ADRP X8, 0xE7A000
	0x032AA68C LDR X8, [X8 + 0xF88]
	0x032AA690 LDR X0, [X8]
	0x032AA694 MOVZ W8, 0x2
	0x032AA698 B 0x32AA760
	0x032AA69C ADRP X8, 0xE7A000
	0x032AA6A0 LDR X8, [X8 + 0xF88]
	0x032AA6A4 LDR X0, [X8]
	0x032AA6A8 MOVZ W8, 0x3
	0x032AA6AC B 0x32AA760
	0x032AA6B0 ADRP X8, 0xE7A000
	0x032AA6B4 LDR X8, [X8 + 0xF88]
	0x032AA6B8 LDR X0, [X8]
	0x032AA6BC MOVZ W8, 0x6
	0x032AA6C0 B 0x32AA760
	0x032AA6C4 ADRP X8, 0xE7A000
	0x032AA6C8 LDR X8, [X8 + 0xF88]
	0x032AA6CC LDR X0, [X8]
	0x032AA6D0 MOVZ W8, 0x7
	0x032AA6D4 B 0x32AA760
	0x032AA6D8 ADRP X8, 0xE7A000
	0x032AA6DC LDR X8, [X8 + 0xF88]
	0x032AA6E0 LDR X0, [X8]
	0x032AA6E4 MOVZ W8, 0x8
	0x032AA6E8 B 0x32AA760
	0x032AA6EC ADRP X8, 0xE7A000
	0x032AA6F0 LDR X8, [X8 + 0xF88]
	0x032AA6F4 LDR X0, [X8]
	0x032AA6F8 MOVZ W8, 0x9
	0x032AA6FC B 0x32AA760
	0x032AA700 ADRP X8, 0xE7A000
	0x032AA704 LDR X8, [X8 + 0xF88]
	0x032AA708 LDR X0, [X8]
	0x032AA70C MOVZ W8, 0xA
	0x032AA710 B 0x32AA760
	0x032AA714 ADRP X8, 0xE7A000
	0x032AA718 LDR X8, [X8 + 0xF88]
	0x032AA71C LDR X0, [X8]
	0x032AA720 MOVZ W8, 0xB
	0x032AA724 B 0x32AA760
	0x032AA728 ADRP X8, 0xE7A000
	0x032AA72C LDR X8, [X8 + 0xF88]
	0x032AA730 LDR X0, [X8]
	0x032AA734 MOVZ W8, 0xE
	0x032AA738 B 0x32AA760
	0x032AA73C ADRP X8, 0xE7A000
	0x032AA740 LDR X8, [X8 + 0xF88]
	0x032AA744 LDR X0, [X8]
	0x032AA748 MOVZ W8, 0xF
	0x032AA74C B 0x32AA760
	0x032AA750 ADRP X8, 0xE7A000
	0x032AA754 LDR X8, [X8 + 0xF88]
	0x032AA758 LDR X0, [X8]
	0x032AA75C MOVZ W8, 0x10
	0x032AA760 ADD X1, X31, 0xC
	0x032AA764 STR W8, [X31 + 0xC]
	0x032AA768 BL 0x1C16E04
	0x032AA76C MOVZ W20, 0x1
	0x032AA770 STR X0, [X19]
	0x032AA774 MOV W0, W20
	0x032AA778 LDP X20, X19, [X31 + 0x20]
	0x032AA77C LDP X22, X21, [X31 + 0x10]
	0x032AA780 LDR X30, [X31], #0x30
	0x032AA784 RET
	0x032AA788 STP X30, X21, [X31 - 0x20]!
	0x032AA78C STP X20, X19, [X31 + 0x10]
	0x032AA790 ADRP X21, 0x1132000
	0x032AA794 LDRB W8, [X21 + 0x82D]
	0x032AA798 MOV X19, X1
	0x032AA79C MOV X20, X0
	0x032AA7A0 TBNZ X8, 0x0, 0x32AA7B8
	0x032AA7A4 ADRP X0, 0xE7A000
	0x032AA7A8 LDR X0, [X0 + 0xF80]
	0x032AA7AC BL 0x1C16CF4
	0x032AA7B0 MOVZ W8, 0x1
	0x032AA7B4 STRB W8, [X21 + 0x82D]
	0x032AA7B8 LDR X8, [X20 + 0xA0]
	0x032AA7BC CMP X8, X19
	0x032AA7C0 B.EQ 0x32AA7F4
	0x032AA7C4 ADRP X8, 0xE7A000
	0x032AA7C8 LDR X8, [X8 + 0xF80]
	0x032AA7CC LDR X0, [X8]
	0x032AA7D0 LDR W8, [X0 + 0xE0]
	0x032AA7D4 CBNZ W8, 0x32AA7DC
	0x032AA7D8 BL 0x1C16DFC
	0x032AA7DC MOV X0, X19
	0x032AA7E0 BL 0x32AAA24
	0x032AA7E4 CBZ W0, 0x32AA7F8
	0x032AA7E8 STR X19, [X20 + 0xA0]
	0x032AA7EC STR W0, [X20 + 0xA8]
	0x032AA7F0 B 0x32AA7F8
	0x032AA7F4 LDR W0, [X20 + 0xA8]
	0x032AA7F8 LDP X20, X19, [X31 + 0x10]
	0x032AA7FC LDP X30, X21, [X31], #0x20
	0x032AA800 RET
	0x032AA804 STR X30, [X31 - 0x10]!
	0x032AA808 MOV X8, X0
	0x032AA80C LDR X0, [X0 + 0x80]
	0x032AA810 CBNZ X0, 0x32AA820
	0x032AA814 LDR X8, [X8 + 0x38]
	0x032AA818 CBZ X8, 0x32AA828
	0x032AA81C LDR X0, [X8 + 0x18]
	0x032AA820 LDR X30, [X31], #0x10
	0x032AA824 RET
	0x032AA828 BL 0x1C16F20
	0x032AA82C STR X30, [X31 - 0x10]!
	0x032AA830 MOV X8, X0
	0x032AA834 LDR X0, [X0 + 0x78]
	0x032AA838 CBNZ X0, 0x32AA848
	0x032AA83C LDR X8, [X8 + 0x38]
	0x032AA840 CBZ X8, 0x32AA850
	0x032AA844 LDR X0, [X8 + 0x10]
	0x032AA848 LDR X30, [X31], #0x10
	0x032AA84C RET
	0x032AA850 BL 0x1C16F20
	0x032AA854 STR X30, [X31 - 0x30]!
	0x032AA858 STP X22, X21, [X31 + 0x10]
	0x032AA85C STP X20, X19, [X31 + 0x20]
	0x032AA860 ADRP X21, 0x1132000
	0x032AA864 ADRP X22, 0xE7A000
	0x032AA868 LDRB W8, [X21 + 0x7C2]
	0x032AA86C LDR X22, [X22 + 0xF80]
	0x032AA870 MOV X19, X1
	0x032AA874 MOV X20, X0
	0x032AA878 TBNZ X8, 0x0, 0x32AA89C
	0x032AA87C ADRP X0, 0xE7A000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1133000
	007 Move W8, [X22+1976]
	008 Move X19, X2
	009 Move X21, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xE7B000
	016 Move X0, [X0+3936]
	017 Call 0x1C17CF4
	018 Move X0, 0xE73000
	019 Move X0, [X0+1256]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+1976], W8
	023 Move [X31+8], X31
	024 Compare X19, 0
	025 JumpIfEqual {105}
	026 Move X22, 0xE73000
	027 Move X22, [X22+1256]
	028 Move X0, [X22]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X22]
	034 Move X8, [X19]
	035 Move W9, [X0+304]
	036 Move W10, [X8+304]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X0, X31
	039 Move X8, [X8+200]
	040 Add X8, X8, X9
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction CSEL not yet implemented."
	044 Move X1, X31
	045 Move X2, X31
	046 Call RuntimeType.op_Equality, X0, X1
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {123}
	051 Add X2, X31, 8
	052 Move X0, X20
	053 Move X1, X21
	054 Call SerializationInfo.GetElement, X0, X1, X2
	055 Move X1, [X31+8]
	056 Move X21, X0
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X8, [X19]
	059 Move X0, X19
	060 Move X9, [X8+680]
	061 Move X2, [X8+688]
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Compare X21, 0
	064 JumpIfEqual {98}
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfEqual {98}
	069 Move X20, [X20+56]
	070 Compare X20, 0
	071 JumpIfEqual {143}
	072 Move X10, 0xE7B000
	073 Move X8, [X20]
	074 Move X10, [X10+3936]
	075 NotImplemented "Instruction LDRH not yet implemented."
	076 Move X1, [X10]
	077 Compare X9, 0
	078 JumpIfEqual {85}
	079 Move X10, [X8+176]
	080 Add X10, X10, 8
	081 NotImplemented "Instruction LDUR not yet implemented."
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Subtract X9, X9, 1
	084 Add X10, X10, 16
	085 Move X0, X20
	086 Move W2, W31
	087 Call 0x1C5D788
	088 NotImplemented "Instruction LDRSW not yet implemented."
	089 Add X8, X8, X9
	090 Add X0, X8, 312
	091 Move X8, [X0]
	092 Move X3, [X0+8]
	093 Move X0, X20
	094 Move X1, X21
	095 Move X2, X19
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Move X21, X0
	098 Move X0, X21
	099 Move X20, [X31+32]
	100 Move X19, [X31+40]
	101 Move X22, [X31+16]
	102 Move X21, [X31+24]
	103 Move X30, [X31+48]
	104 Return X0
	105 Move X0, 0xE4F000
	106 Move X0, [X0+1320]
	107 Call 0x1C17D08
	108 Call 0x1C17F10
	109 Move X19, X0
	110 Move X0, 0xE52000
	111 Move X0, [X0+1512]
	112 Call 0x1C17D08
	113 Move X1, X0
	114 Move X0, X19
	115 Move X2, X31
	116 Call ArgumentNullException..ctor, X0, X1
	117 Move X0, 0xE7B000
	118 Move X0, [X0+3944]
	119 Call 0x1C17D08
	120 Move X1, X0
	121 Move X0, X19
	122 Call 0x1C17DEC
	123 Move X0, 0xE7B000
	124 Move X0, [X0+3952]
	125 Call 0x1C17D08
	126 Move X1, X31
	127 Call Environment.GetResourceString, X0
	128 Move X19, X0
	129 Move X0, 0xE52000
	130 Move X0, [X0+1400]
	131 Call 0x1C17D08
	132 Call 0x1C17F10
	133 Move X1, X19
	134 Move X2, X31
	135 Move X20, X0
	136 Call ArgumentException..ctor, X0, X1
	137 Move X0, 0xE7B000
	138 Move X0, [X0+3944]
	139 Call 0x1C17D08
	140 Move X1, X0
	141 Move X0, X20
	142 Call 0x1C17DEC
	143 Call 0x1C17F20

Method: System.Object GetValueNoThrow(System.String name, System.Type type)

Disassembly:
	0x032AA880 LDR X0, [X0 + 0xF80]
	0x032AA884 BL 0x1C16CF4
	0x032AA888 ADRP X0, 0xE7A000
	0x032AA88C LDR X0, [X0 + 0xF88]
	0x032AA890 BL 0x1C16CF4
	0x032AA894 MOVZ W8, 0x1
	0x032AA898 STRB W8, [X21 + 0x7C2]
	0x032AA89C STR X31, [X19]
	0x032AA8A0 LDR X0, [X22]
	0x032AA8A4 LDR W8, [X0 + 0xE0]
	0x032AA8A8 CBNZ W8, 0x32AA8B4
	0x032AA8AC BL 0x1C16DFC
	0x032AA8B0 LDR X0, [X22]
	0x032AA8B4 LDR X8, [X0 + 0xB8]
	0x032AA8B8 LDR X9, [X8 + 0x38]
	0x032AA8BC CMP X20, X9
	0x032AA8C0 B.EQ 0x32AA948
	0x032AA8C4 LDR W9, [X0 + 0xE0]
	0x032AA8C8 CBNZ W9, 0x32AA8D8
	0x032AA8CC BL 0x1C16DFC
	0x032AA8D0 LDR X0, [X22]
	0x032AA8D4 LDR X8, [X0 + 0xB8]
	0x032AA8D8 LDR X9, [X8 + 0xC0]
	0x032AA8DC CMP X20, X9
	0x032AA8E0 B.EQ 0x32AA950
	0x032AA8E4 LDR W9, [X0 + 0xE0]
	0x032AA8E8 CBNZ W9, 0x32AA8F8
	0x032AA8EC BL 0x1C16DFC
	0x032AA8F0 LDR X0, [X22]
	0x032AA8F4 LDR X8, [X0 + 0xB8]
	0x032AA8F8 LDR X9, [X8 + 0xE8]
	0x032AA8FC CMP X20, X9
	0x032AA900 B.EQ 0x32AA958
	0x032AA904 LDR W9, [X0 + 0xE0]
	0x032AA908 CBNZ W9, 0x32AA918
	0x032AA90C BL 0x1C16DFC
	0x032AA910 LDR X0, [X22]
	0x032AA914 LDR X8, [X0 + 0xB8]
	0x032AA918 LDR X8, [X8 + 0xF0]
	0x032AA91C CMP X20, X8
	0x032AA920 B.EQ 0x32AA960
	0x032AA924 LDR W8, [X0 + 0xE0]
	0x032AA928 CBNZ W8, 0x32AA930
	0x032AA92C BL 0x1C16DFC
	0x032AA930 MOV X0, X20
	0x032AA934 MOV X1, X19
	0x032AA938 BL 0x32AA490
	0x032AA93C TBZ X0, 0x0, 0x32AA968
	0x032AA940 MOVZ W21, 0x7
	0x032AA944 B 0x32AAA0C
	0x032AA948 MOVZ W21, 0x1
	0x032AA94C B 0x32AAA0C
	0x032AA950 MOVZ W21, 0x2
	0x032AA954 B 0x32AAA0C
	0x032AA958 MOVZ W21, 0x5
	0x032AA95C B 0x32AAA0C
	0x032AA960 MOVZ W21, 0x6
	0x032AA964 B 0x32AAA0C
	0x032AA968 LDR X0, [X22]
	0x032AA96C LDR W8, [X0 + 0xE0]
	0x032AA970 CBNZ W8, 0x32AA978
	0x032AA974 BL 0x1C16DFC
	0x032AA978 MOV X0, X20
	0x032AA97C BL 0x32AAA24
	0x032AA980 CBZ W0, 0x32AA9A8
	0x032AA984 ADRP X8, 0xE7A000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1133000
	007 Move W8, [X22+1977]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xE7B000
	016 Move X0, [X0+3936]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1977], W8
	020 Add X2, X31, 8
	021 Move X0, X21
	022 Move X1, X20
	023 Move [X31+8], X31
	024 Call SerializationInfo.GetElementNoThrow, X0, X1, X2
	025 Move X20, X0
	026 Compare X0, 0
	027 JumpIfEqual {70}
	028 Move X1, [X31+8]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Compare X19, 0
	031 JumpIfEqual {77}
	032 Move X8, [X19]
	033 Move X0, X19
	034 Move X9, [X8+680]
	035 Move X2, [X8+688]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {70}
	041 Move X21, [X21+56]
	042 Compare X21, 0
	043 JumpIfEqual {77}
	044 Move X10, 0xE7B000
	045 Move X8, [X21]
	046 Move X10, [X10+3936]
	047 NotImplemented "Instruction LDRH not yet implemented."
	048 Move X1, [X10]
	049 Compare X9, 0
	050 JumpIfEqual {57}
	051 Move X10, [X8+176]
	052 Add X10, X10, 8
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Subtract X9, X9, 1
	056 Add X10, X10, 16
	057 Move X0, X21
	058 Move W2, W31
	059 Call 0x1C5D788
	060 NotImplemented "Instruction LDRSW not yet implemented."
	061 Add X8, X8, X9
	062 Add X0, X8, 312
	063 Move X8, [X0]
	064 Move X3, [X0+8]
	065 Move X0, X21
	066 Move X1, X20
	067 Move X2, X19
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Move X20, X0
	070 Move X0, X20
	071 Move X20, [X31+32]
	072 Move X19, [X31+40]
	073 Move X22, [X31+16]
	074 Move X21, [X31+24]
	075 Move X30, [X31+48]
	076 Return X0
	077 Call 0x1C17F20

Method: System.Boolean GetBoolean(System.String name)

Disassembly:
	0x032AA988 LDR X8, [X8 + 0xF88]
	0x032AA98C STR W0, [X31 + 0xC]
	0x032AA990 ADD X1, X31, 0xC
	0x032AA994 LDR X8, [X8]
	0x032AA998 MOV X0, X8
	0x032AA99C BL 0x1C16E04
	0x032AA9A0 MOV W21, W31
	0x032AA9A4 B 0x32AAA08
	0x032AA9A8 MOV X0, X20
	0x032AA9AC MOV X1, X31
	0x032AA9B0 BL 0x32D58E4
	0x032AA9B4 LDR X8, [X22]
	0x032AA9B8 MOV X21, X0
	0x032AA9BC LDR W9, [X8 + 0xE0]
	0x032AA9C0 CBNZ W9, 0x32AA9D0
	0x032AA9C4 MOV X0, X8
	0x032AA9C8 BL 0x1C16DFC
	0x032AA9CC LDR X8, [X22]
	0x032AA9D0 LDR X8, [X8 + 0xB8]
	0x032AA9D4 MOV X0, X21
	0x032AA9D8 MOV X2, X31
	0x032AA9DC LDR X1, [X8 + 0xD0]
	0x032AA9E0 BL 0x32D5BF8
	0x032AA9E4 CBZ X20, 0x32AAA20
	0x032AA9E8 LDR X8, [X20]
	0x032AA9EC ANDS W31, W0, 0x1
	0x032AA9F0 MOV X0, X20
	0x032AA9F4 LDR X9, [X8 + 0x2E8]
	0x032AA9F8 LDR X1, [X8 + 0x2F0]
	0x032AA9FC MOVZ W8, 0x3
	0x032AAA00 CINC W21, W8, EQ
	0x032AAA04 BLR X9
	0x032AAA08 STR X0, [X19]
	0x032AAA0C MOV W0, W21
	0x032AAA10 LDP X20, X19, [X31 + 0x20]
	0x032AAA14 LDP X22, X21, [X31 + 0x10]
	0x032AAA18 LDR X30, [X31], #0x30
	0x032AAA1C RET
	0x032AAA20 BL 0x1C16F20
	0x032AAA24 STR X30, [X31 - 0x20]!
	0x032AAA28 STP X20, X19, [X31 + 0x10]
	0x032AAA2C ADRP X20, 0x1132000
	0x032AAA30 LDRB W8, [X20 + 0x7D5]
	0x032AAA34 MOV X19, X0
	0x032AAA38 TBNZ X8, 0x0, 0x32AAA5C
	0x032AAA3C ADRP X0, 0xE7A000
	0x032AAA40 LDR X0, [X0 + 0xF80]
	0x032AAA44 BL 0x1C16CF4
	0x032AAA48 ADRP X0, 0xE49000
	0x032AAA4C LDR X0, [X0 + 0x6C0]
	0x032AAA50 BL 0x1C16CF4
	0x032AAA54 MOVZ W8, 0x1
	0x032AAA58 STRB W8, [X20 + 0x7D5]
	0x032AAA5C ADRP X20, 0xE7A000
	0x032AAA60 LDR X20, [X20 + 0xF80]
	0x032AAA64 CBZ X19, 0x32AAA78
	0x032AAA68 MOV X0, X19
	0x032AAA6C MOV X1, X31
	0x032AAA70 BL 0x3397374
	0x032AAA74 TBZ X0, 0x0, 0x32AAAC4
	0x032AAA78 ADRP X8, 0xE49000
	0x032AAA7C LDR X8, [X8 + 0x6C0]
	0x032AAA80 LDR X0, [X8]
	0x032AAA84 LDR W8, [X0 + 0xE0]
	0x032AAA88 CBNZ W8, 0x32AAA90
	0x032AAA8C BL 0x1C16DFC
	0x032AAA90 MOV X0, X19
	0x032AAA94 MOV X1, X31
	0x032AAA98 BL 0x3397AFC
	0x032AAA9C LDR X8, [X20]
	0x032AAAA0 MOV W19, W0
	0x032AAAA4 LDR W9, [X8 + 0xE0]
	0x032AAAA8 CBNZ W9, 0x32AAAB4
	0x032AAAAC MOV X0, X8
	0x032AAAB0 BL 0x1C16DFC
	0x032AAAB4 MOV W0, W19
	0x032AAAB8 LDP X20, X19, [X31 + 0x10]
	0x032AAABC LDR X30, [X31], #0x20
	0x032AAAC0 B 0x32AF060
	0x032AAAC4 LDR X0, [X20]
	0x032AAAC8 LDR W8, [X0 + 0xE0]
	0x032AAACC CBNZ W8, 0x32AAAD8
	0x032AAAD0 BL 0x1C16DFC
	0x032AAAD4 LDR X0, [X20]
	0x032AAAD8 LDR X8, [X0 + 0xB8]
	0x032AAADC LDR X9, [X8 + 0xA0]
	0x032AAAE0 CMP X19, X9
	0x032AAAE4 B.EQ 0x32AAB30
	0x032AAAE8 LDR W9, [X0 + 0xE0]
	0x032AAAEC CBNZ W9, 0x32AAAFC
	0x032AAAF0 BL 0x1C16DFC
	0x032AAAF4 LDR X0, [X20]
	0x032AAAF8 LDR X8, [X0 + 0xB8]
	0x032AAAFC LDR X9, [X8 + 0x98]
	0x032AAB00 CMP X19, X9
	0x032AAB04 B.EQ 0x32AAB38

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x1133000
	009 Move X21, 0xE73000
	010 Move X22, 0xE4A000
	011 Move W8, [X23+1978]
	012 Move X21, [X21+584]
	013 Move X22, [X22+1728]
	014 Move X19, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0xE73000
	021 Move X0, [X0+584]
	022 Call 0x1C17CF4
	023 Move X0, 0xE4A000
	024 Move X0, [X0+2904]
	025 Call 0x1C17CF4
	026 Move X0, 0xE7B000
	027 Move X0, [X0+3936]
	028 Call 0x1C17CF4
	029 Move X0, 0xE4A000
	030 Move X0, [X0+1728]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X23+1978], W8
	034 Add X2, X31, 8
	035 Move X0, X20
	036 Move X1, X19
	037 Move [X31+8], X31
	038 Call SerializationInfo.GetElement, X0, X1, X2
	039 Move X8, [X22]
	040 Move X22, [X31+8]
	041 Move X21, [X21]
	042 Move X19, X0
	043 Move W9, [X8+224]
	044 Compare W9, 0
	045 JumpIfNotEqual {48}
	046 Move X0, X8
	047 Call 0x1C17DFC
	048 Move X0, X21
	049 Move X1, X31
	050 Call Type.GetTypeFromHandle, X0
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X20, [X20+56]
	053 Compare X20, 0
	054 JumpIfEqual {103}
	055 Move X10, 0xE7B000
	056 Move X8, [X20]
	057 Move X10, [X10+3936]
	058 NotImplemented "Instruction LDRH not yet implemented."
	059 Move X1, [X10]
	060 Compare X9, 0
	061 JumpIfEqual {68}
	062 Move X10, [X8+176]
	063 Add X10, X10, 8
	064 NotImplemented "Instruction LDUR not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Subtract X9, X9, 1
	067 Add X10, X10, 16
	068 Move W2, 1
	069 Move X0, X20
	070 Call 0x1C5D788
	071 Compare X19, 0
	072 JumpIfEqual {103}
	073 Move X8, 0xE4A000
	074 Move X8, [X8+2904]
	075 Move X9, [X19]
	076 Move X0, X19
	077 Move X1, [X8]
	078 Move X8, [X9+64]
	079 Move X9, [X1+64]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Call 0x1C17E08
	082 Move W8, [X0]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 NotImplemented "Instruction CSET not yet implemented."
	085 Move W9, [X10]
	086 Add W9, W9, 1
	087 Add X8, X8, W9
	088 Add X0, X8, 312
	089 Move X8, [X0]
	090 Move X2, [X0+8]
	091 Move X0, X20
	092 Move X1, X19
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Move X20, [X31+48]
	095 Move X19, [X31+56]
	096 Move X22, [X31+32]
	097 Move X21, [X31+40]
	098 Move X30, [X31+16]
	099 Move X23, [X31+24]
	100 And W0, W0, 1
	101 Add X31, X31, 64
	102 Return X0
	103 Call 0x1C17F20
	104 Call 0x1C181E0

Method: System.Int32 GetInt32(System.String name)

Disassembly:
	0x032AAB08 LDR W9, [X0 + 0xE0]
	0x032AAB0C CBNZ W9, 0x32AAB1C
	0x032AAB10 BL 0x1C16DFC
	0x032AAB14 LDR X8, [X20]
	0x032AAB18 LDR X8, [X8 + 0xB8]
	0x032AAB1C LDR X8, [X8 + 0x60]
	0x032AAB20 CMP X19, X8
	0x032AAB24 MOVZ W8, 0x5
	0x032AAB28 CSEL W0, W8, W31, EQ
	0x032AAB2C B 0x32AAB3C
	0x032AAB30 MOVZ W0, 0xD
	0x032AAB34 B 0x32AAB3C
	0x032AAB38 MOVZ W0, 0xC
	0x032AAB3C LDP X20, X19, [X31 + 0x10]
	0x032AAB40 LDR X30, [X31], #0x20
	0x032AAB44 RET
	0x032AAB48 SUB X31, X31, 0x40
	0x032AAB4C STP X30, X23, [X31 + 0x10]
	0x032AAB50 STP X22, X21, [X31 + 0x20]
	0x032AAB54 STP X20, X19, [X31 + 0x30]
	0x032AAB58 ADRP X23, 0x1132000
	0x032AAB5C LDRB W8, [X23 + 0x7C3]
	0x032AAB60 MOV X19, X3
	0x032AAB64 MOV W20, W2
	0x032AAB68 MOV X21, X1
	0x032AAB6C MOV W22, W0
	0x032AAB70 TBNZ X8, 0x0, 0x32AAB88
	0x032AAB74 ADRP X0, 0xE7A000
	0x032AAB78 LDR X0, [X0 + 0xF88]
	0x032AAB7C BL 0x1C16CF4
	0x032AAB80 MOVZ W8, 0x1
	0x032AAB84 STRB W8, [X23 + 0x7C3]
	0x032AAB88 CMP W22, 0x7
	0x032AAB8C B.HI 0x32AACB8
	0x032AAB90 ADRP X9, 0xFFFFFFFFFD8EC000
	0x032AAB94 MOV W8, W22
	0x032AAB98 ADD X9, X9, 0x4E0
	0x032AAB9C ADR X10, 0x10
	0x032AABA0 LDRB W11, [X9, X8, LSL]
	0x032AABA4 ADD X10, X10, X11, 0x2, LSL
	0x032AABA8 BR X10
	0x032AABAC LDP X20, X19, [X31 + 0x30]
	0x032AABB0 LDP X22, X21, [X31 + 0x20]
	0x032AABB4 LDP X30, X23, [X31 + 0x10]
	0x032AABB8 ADD X31, X31, 0x40
	0x032AABBC RET
	0x032AABC0 CBZ X19, 0x32AACB0
	0x032AABC4 CBZ X21, 0x32AACB0
	0x032AABC8 ADRP X8, 0xE7A000
	0x032AABCC LDR X8, [X8 + 0xF88]
	0x032AABD0 LDR X9, [X21]
	0x032AABD4 MOV X0, X21
	0x032AABD8 LDR X1, [X8]
	0x032AABDC LDR X8, [X9 + 0x40]
	0x032AABE0 LDR X9, [X1 + 0x40]
	0x032AABE4 CMP X8, X9
	0x032AABE8 B.NE 0x32AACB4
	0x032AABEC BL 0x1C16E08
	0x032AABF0 LDR X8, [X19 + 0x30]
	0x032AABF4 CBZ X8, 0x32AACB0
	0x032AABF8 LDR X9, [X8]
	0x032AABFC LDR W1, [X0]
	0x032AAC00 MOV X0, X8
	0x032AAC04 LDP X3, X2, [X9 + 0x1C8]
	0x032AAC08 B 0x32AAC9C
	0x032AAC0C CBZ X21, 0x32AACB0
	0x032AAC10 LDR X8, [X21]
	0x032AAC14 MOV X0, X21
	0x032AAC18 LDP X9, X1, [X8 + 0x168]
	0x032AAC1C BLR X9
	0x032AAC20 CBZ X19, 0x32AACB0
	0x032AAC24 MOV X1, X0
	0x032AAC28 LDR X0, [X19 + 0x30]
	0x032AAC2C CBZ X0, 0x32AACB0
	0x032AAC30 LDR X8, [X0]
	0x032AAC34 LDP X20, X19, [X31 + 0x30]
	0x032AAC38 LDP X22, X21, [X31 + 0x20]
	0x032AAC3C LDP X30, X23, [X31 + 0x10]
	0x032AAC40 LDR X3, [X8 + 0x298]
	0x032AAC44 LDR X2, [X8 + 0x2A0]
	0x032AAC48 ADD X31, X31, 0x40
	0x032AAC4C BR X3
	0x032AAC50 CBZ X21, 0x32AACB0
	0x032AAC54 LDR X8, [X21]
	0x032AAC58 MOV X0, X21
	0x032AAC5C LDP X9, X1, [X8 + 0x168]
	0x032AAC60 BLR X9
	0x032AAC64 CBZ X19, 0x32AACB0
	0x032AAC68 MOV X1, X0
	0x032AAC6C LDR X0, [X19 + 0x30]
	0x032AAC70 CBZ X0, 0x32AACB0
	0x032AAC74 LDR X8, [X0]
	0x032AAC78 LDR X9, [X8 + 0x298]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x1133000
	009 Move X21, 0xE71000
	010 Move X22, 0xE4A000
	011 Move W8, [X23+1979]
	012 Move X21, [X21+3456]
	013 Move X22, [X22+1728]
	014 Move X19, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0xE7B000
	021 Move X0, [X0+3936]
	022 Call 0x1C17CF4
	023 Move X0, 0xE71000
	024 Move X0, [X0+3456]
	025 Call 0x1C17CF4
	026 Move X0, 0xE4A000
	027 Move X0, [X0+1880]
	028 Call 0x1C17CF4
	029 Move X0, 0xE4A000
	030 Move X0, [X0+1728]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X23+1979], W8
	034 Add X2, X31, 8
	035 Move X0, X20
	036 Move X1, X19
	037 Move [X31+8], X31
	038 Call SerializationInfo.GetElement, X0, X1, X2
	039 Move X8, [X22]
	040 Move X22, [X31+8]
	041 Move X21, [X21]
	042 Move X19, X0
	043 Move W9, [X8+224]
	044 Compare W9, 0
	045 JumpIfNotEqual {48}
	046 Move X0, X8
	047 Call 0x1C17DFC
	048 Move X0, X21
	049 Move X1, X31
	050 Call Type.GetTypeFromHandle, X0
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X20, [X20+56]
	053 Compare X20, 0
	054 JumpIfEqual {100}
	055 Move X10, 0xE7B000
	056 Move X8, [X20]
	057 Move X10, [X10+3936]
	058 NotImplemented "Instruction LDRH not yet implemented."
	059 Move X1, [X10]
	060 Compare X9, 0
	061 JumpIfEqual {68}
	062 Move X10, [X8+176]
	063 Add X10, X10, 8
	064 NotImplemented "Instruction LDUR not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Subtract X9, X9, 1
	067 Add X10, X10, 16
	068 Move W2, 2
	069 Move X0, X20
	070 Call 0x1C5D788
	071 Compare X19, 0
	072 JumpIfEqual {100}
	073 Move X8, 0xE4A000
	074 Move X8, [X8+1880]
	075 Move X9, [X19]
	076 Move X0, X19
	077 Move X1, [X8]
	078 Move X8, [X9+64]
	079 Move X9, [X1+64]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Call 0x1C17E08
	082 Move W0, [X0]
	083 Move W9, [X10]
	084 Add W9, W9, 2
	085 Add X8, X8, W9
	086 Add X0, X8, 312
	087 Move X8, [X0]
	088 Move X2, [X0+8]
	089 Move X0, X20
	090 Move X1, X19
	091 NotImplemented "Instruction BLR not yet implemented."
	092 Move X20, [X31+48]
	093 Move X19, [X31+56]
	094 Move X22, [X31+32]
	095 Move X21, [X31+40]
	096 Move X30, [X31+16]
	097 Move X23, [X31+24]
	098 Add X31, X31, 64
	099 Return X0
	100 Call 0x1C17F20
	101 Call 0x1C181E0

Method: System.Int64 GetInt64(System.String name)

Disassembly:
	0x032AAC7C LDR X2, [X8 + 0x2A0]
	0x032AAC80 BLR X9
	0x032AAC84 LDR X0, [X19 + 0x30]
	0x032AAC88 CBZ X0, 0x32AACB0
	0x032AAC8C LDR X8, [X0]
	0x032AAC90 MOV W1, W20
	0x032AAC94 LDR X3, [X8 + 0x248]
	0x032AAC98 LDR X2, [X8 + 0x250]
	0x032AAC9C LDP X20, X19, [X31 + 0x30]
	0x032AACA0 LDP X22, X21, [X31 + 0x20]
	0x032AACA4 LDP X30, X23, [X31 + 0x10]
	0x032AACA8 ADD X31, X31, 0x40
	0x032AACAC BR X3
	0x032AACB0 BL 0x1C16F20
	0x032AACB4 BL 0x1C171E0
	0x032AACB8 ADRP X0, 0xE49000
	0x032AACBC LDR X0, [X0 + 0x9D0]
	0x032AACC0 BL 0x1C16D08
	0x032AACC4 MOVZ W1, 0x1
	0x032AACC8 BL 0x1C16D6C
	0x032AACCC MOV X19, X0
	0x032AACD0 STR W22, [X31 + 0xC]
	0x032AACD4 ADRP X0, 0xE7A000
	0x032AACD8 LDR X0, [X0 + 0xFA0]
	0x032AACDC BL 0x1C16D08
	0x032AACE0 ADD X1, X31, 0xC
	0x032AACE4 BL 0x1C16E04
	0x032AACE8 MOV X1, X31
	0x032AACEC BL 0x33B162C
	0x032AACF0 MOV X20, X0
	0x032AACF4 MOV X0, X19
	0x032AACF8 BL 0x19903C0
	0x032AACFC MOV X0, X19
	0x032AAD00 MOV X1, X20
	0x032AAD04 BL 0x19980B4
	0x032AAD08 MOV X0, X19
	0x032AAD0C MOV X1, X31
	0x032AAD10 MOV X2, X20
	0x032AAD14 BL 0x1993444
	0x032AAD18 ADRP X0, 0xE7A000
	0x032AAD1C LDR X0, [X0 + 0xFA8]
	0x032AAD20 BL 0x1C16D08
	0x032AAD24 MOV X1, X19
	0x032AAD28 MOV X2, X31
	0x032AAD2C BL 0x33BFB40
	0x032AAD30 MOV X19, X0
	0x032AAD34 ADRP X0, 0xE73000
	0x032AAD38 LDR X0, [X0 + 0x2E0]
	0x032AAD3C BL 0x1C16D08
	0x032AAD40 BL 0x1C16F10
	0x032AAD44 MOV X1, X19
	0x032AAD48 MOV X2, X31
	0x032AAD4C MOV X20, X0
	0x032AAD50 BL 0x329F100
	0x032AAD54 ADRP X0, 0xE7A000
	0x032AAD58 LDR X0, [X0 + 0xFB0]
	0x032AAD5C BL 0x1C16D08
	0x032AAD60 MOV X1, X0
	0x032AAD64 MOV X0, X20
	0x032AAD68 BL 0x1C16DEC
	0x032AAD6C STR X30, [X31 - 0x10]!
	0x032AAD70 LDR X0, [X0 + 0x30]
	0x032AAD74 CBZ X0, 0x32AAD88
	0x032AAD78 LDR X8, [X0]
	0x032AAD7C LDP X3, X2, [X8 + 0x1C8]
	0x032AAD80 LDR X30, [X31], #0x10
	0x032AAD84 BR X3
	0x032AAD88 BL 0x1C16F20
	0x032AAD8C STR X30, [X31 - 0x10]!
	0x032AAD90 LDR X0, [X0 + 0x30]
	0x032AAD94 CBZ X0, 0x32AADAC
	0x032AAD98 LDR X8, [X0]
	0x032AAD9C LDR X3, [X8 + 0x298]
	0x032AADA0 LDR X2, [X8 + 0x2A0]
	0x032AADA4 LDR X30, [X31], #0x10
	0x032AADA8 BR X3
	0x032AADAC BL 0x1C16F20
	0x032AADB0 STR X30, [X31 - 0x10]!
	0x032AADB4 LDR X0, [X0 + 0x30]
	0x032AADB8 CBZ X0, 0x32AADD0
	0x032AADBC LDR X8, [X0]
	0x032AADC0 LDR X3, [X8 + 0x248]
	0x032AADC4 LDR X2, [X8 + 0x250]
	0x032AADC8 LDR X30, [X31], #0x10
	0x032AADCC BR X3
	0x032AADD0 BL 0x1C16F20
	0x032AADD4 STR X30, [X31 - 0x30]!
	0x032AADD8 STP X22, X21, [X31 + 0x10]
	0x032AADDC STP X20, X19, [X31 + 0x20]
	0x032AADE0 ADRP X22, 0x1132000
	0x032AADE4 LDRB W8, [X22 + 0x7C4]
	0x032AADE8 MOV X19, X2
	0x032AADEC MOV X20, X1

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x1133000
	009 Move X21, 0xE71000
	010 Move X22, 0xE4A000
	011 Move W8, [X23+1980]
	012 Move X21, [X21+3464]
	013 Move X22, [X22+1728]
	014 Move X19, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0xE7B000
	021 Move X0, [X0+3936]
	022 Call 0x1C17CF4
	023 Move X0, 0xE71000
	024 Move X0, [X0+3464]
	025 Call 0x1C17CF4
	026 Move X0, 0xE4C000
	027 Move X0, [X0+2656]
	028 Call 0x1C17CF4
	029 Move X0, 0xE4A000
	030 Move X0, [X0+1728]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X23+1980], W8
	034 Add X2, X31, 8
	035 Move X0, X20
	036 Move X1, X19
	037 Move [X31+8], X31
	038 Call SerializationInfo.GetElement, X0, X1, X2
	039 Move X8, [X22]
	040 Move X22, [X31+8]
	041 Move X21, [X21]
	042 Move X19, X0
	043 Move W9, [X8+224]
	044 Compare W9, 0
	045 JumpIfNotEqual {48}
	046 Move X0, X8
	047 Call 0x1C17DFC
	048 Move X0, X21
	049 Move X1, X31
	050 Call Type.GetTypeFromHandle, X0
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X20, [X20+56]
	053 Compare X20, 0
	054 JumpIfEqual {100}
	055 Move X10, 0xE7B000
	056 Move X8, [X20]
	057 Move X10, [X10+3936]
	058 NotImplemented "Instruction LDRH not yet implemented."
	059 Move X1, [X10]
	060 Compare X9, 0
	061 JumpIfEqual {68}
	062 Move X10, [X8+176]
	063 Add X10, X10, 8
	064 NotImplemented "Instruction LDUR not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Subtract X9, X9, 1
	067 Add X10, X10, 16
	068 Move W2, 3
	069 Move X0, X20
	070 Call 0x1C5D788
	071 Compare X19, 0
	072 JumpIfEqual {100}
	073 Move X8, 0xE4C000
	074 Move X8, [X8+2656]
	075 Move X9, [X19]
	076 Move X0, X19
	077 Move X1, [X8]
	078 Move X8, [X9+64]
	079 Move X9, [X1+64]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Call 0x1C17E08
	082 Move X0, [X0]
	083 Move W9, [X10]
	084 Add W9, W9, 3
	085 Add X8, X8, W9
	086 Add X0, X8, 312
	087 Move X8, [X0]
	088 Move X2, [X0+8]
	089 Move X0, X20
	090 Move X1, X19
	091 NotImplemented "Instruction BLR not yet implemented."
	092 Move X20, [X31+48]
	093 Move X19, [X31+56]
	094 Move X22, [X31+32]
	095 Move X21, [X31+40]
	096 Move X30, [X31+16]
	097 Move X23, [X31+24]
	098 Add X31, X31, 64
	099 Return X0
	100 Call 0x1C17F20
	101 Call 0x1C181E0

Method: System.Single GetSingle(System.String name)

Disassembly:
	0x032AADF0 MOV W21, W0
	0x032AADF4 TBNZ X8, 0x0, 0x32AAE0C
	0x032AADF8 ADRP X0, 0xE7A000
	0x032AADFC LDR X0, [X0 + 0xF88]
	0x032AAE00 BL 0x1C16CF4
	0x032AAE04 MOVZ W8, 0x1
	0x032AAE08 STRB W8, [X22 + 0x7C4]
	0x032AAE0C CMP W21, 0x7
	0x032AAE10 B.HI 0x32AAEF4
	0x032AAE14 ADRP X9, 0xFFFFFFFFFD8EC000
	0x032AAE18 MOV W8, W21
	0x032AAE1C ADD X9, X9, 0x4E8
	0x032AAE20 ADR X10, 0x18
	0x032AAE24 LDRB W11, [X9, X8, LSL]
	0x032AAE28 ADD X10, X10, X11, 0x2, LSL
	0x032AAE2C MOV W0, W31
	0x032AAE30 MOV X21, X31
	0x032AAE34 BR X10
	0x032AAE38 CBZ X20, 0x32AAEF0
	0x032AAE3C LDR X0, [X20 + 0x68]
	0x032AAE40 CBZ X0, 0x32AAEF0
	0x032AAE44 LDR X8, [X0]
	0x032AAE48 LDP X9, X1, [X8 + 0x1D8]
	0x032AAE4C BLR X9
	0x032AAE50 ADRP X8, 0xE7A000
	0x032AAE54 LDR X8, [X8 + 0xF88]
	0x032AAE58 AND W9, W0, 0xFF
	0x032AAE5C ADD X1, X31, 0xC
	0x032AAE60 STR W9, [X31 + 0xC]
	0x032AAE64 LDR X8, [X8]
	0x032AAE68 MOV X0, X8
	0x032AAE6C BL 0x1C16E04
	0x032AAE70 B 0x32AAE90
	0x032AAE74 CBZ X20, 0x32AAEF0
	0x032AAE78 LDR X0, [X20 + 0x68]
	0x032AAE7C CBZ X0, 0x32AAEF0
	0x032AAE80 LDR X8, [X0]
	0x032AAE84 LDR X9, [X8 + 0x298]
	0x032AAE88 LDR X1, [X8 + 0x2A0]
	0x032AAE8C BLR X9
	0x032AAE90 MOV X21, X0
	0x032AAE94 MOV W0, W31
	0x032AAE98 B 0x32AAED8
	0x032AAE9C CBZ X20, 0x32AAEF0
	0x032AAEA0 LDR X0, [X20 + 0x68]
	0x032AAEA4 CBZ X0, 0x32AAEF0
	0x032AAEA8 LDR X8, [X0]
	0x032AAEAC LDR X9, [X8 + 0x298]
	0x032AAEB0 LDR X1, [X8 + 0x2A0]
	0x032AAEB4 BLR X9
	0x032AAEB8 LDR X8, [X20 + 0x68]
	0x032AAEBC CBZ X8, 0x32AAEF0
	0x032AAEC0 LDR X9, [X8]
	0x032AAEC4 MOV X21, X0
	0x032AAEC8 MOV X0, X8
	0x032AAECC LDR X10, [X9 + 0x228]
	0x032AAED0 LDR X1, [X9 + 0x230]
	0x032AAED4 BLR X10
	0x032AAED8 STR W0, [X19]
	0x032AAEDC MOV X0, X21
	0x032AAEE0 LDP X20, X19, [X31 + 0x20]
	0x032AAEE4 LDP X22, X21, [X31 + 0x10]
	0x032AAEE8 LDR X30, [X31], #0x30
	0x032AAEEC RET
	0x032AAEF0 BL 0x1C16F20
	0x032AAEF4 ADRP X0, 0xE49000
	0x032AAEF8 LDR X0, [X0 + 0x9D0]
	0x032AAEFC BL 0x1C16D08
	0x032AAF00 MOVZ W1, 0x1
	0x032AAF04 BL 0x1C16D6C
	0x032AAF08 MOV X19, X0
	0x032AAF0C STR W21, [X31 + 0x8]
	0x032AAF10 ADRP X0, 0xE7A000
	0x032AAF14 LDR X0, [X0 + 0xFA0]
	0x032AAF18 BL 0x1C16D08
	0x032AAF1C ADD X1, X31, 0x8
	0x032AAF20 BL 0x1C16E04
	0x032AAF24 MOV X1, X31
	0x032AAF28 BL 0x33B162C
	0x032AAF2C MOV X20, X0
	0x032AAF30 MOV X0, X19
	0x032AAF34 BL 0x19903C0
	0x032AAF38 MOV X0, X19
	0x032AAF3C MOV X1, X20
	0x032AAF40 BL 0x19980B4
	0x032AAF44 MOV X0, X19
	0x032AAF48 MOV X1, X31
	0x032AAF4C MOV X2, X20
	0x032AAF50 BL 0x1993444
	0x032AAF54 ADRP X0, 0xE7A000
	0x032AAF58 LDR X0, [X0 + 0xFB8]
	0x032AAF5C BL 0x1C16D08
	0x032AAF60 MOV X1, X19

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x1133000
	009 Move X21, 0xE72000
	010 Move X22, 0xE4A000
	011 Move W8, [X23+1981]
	012 Move X21, [X21+2688]
	013 Move X22, [X22+1728]
	014 Move X19, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0xE7B000
	021 Move X0, [X0+3936]
	022 Call 0x1C17CF4
	023 Move X0, 0xE72000
	024 Move X0, [X0+2688]
	025 Call 0x1C17CF4
	026 Move X0, 0xE4A000
	027 Move X0, [X0+2704]
	028 Call 0x1C17CF4
	029 Move X0, 0xE4A000
	030 Move X0, [X0+1728]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X23+1981], W8
	034 Add X2, X31, 8
	035 Move X0, X20
	036 Move X1, X19
	037 Move [X31+8], X31
	038 Call SerializationInfo.GetElement, X0, X1, X2
	039 Move X8, [X22]
	040 Move X22, [X31+8]
	041 Move X21, [X21]
	042 Move X19, X0
	043 Move W9, [X8+224]
	044 Compare W9, 0
	045 JumpIfNotEqual {48}
	046 Move X0, X8
	047 Call 0x1C17DFC
	048 Move X0, X21
	049 Move X1, X31
	050 Call Type.GetTypeFromHandle, X0
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X20, [X20+56]
	053 Compare X20, 0
	054 JumpIfEqual {100}
	055 Move X10, 0xE7B000
	056 Move X8, [X20]
	057 Move X10, [X10+3936]
	058 NotImplemented "Instruction LDRH not yet implemented."
	059 Move X1, [X10]
	060 Compare X9, 0
	061 JumpIfEqual {68}
	062 Move X10, [X8+176]
	063 Add X10, X10, 8
	064 NotImplemented "Instruction LDUR not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Subtract X9, X9, 1
	067 Add X10, X10, 16
	068 Move W2, 4
	069 Move X0, X20
	070 Call 0x1C5D788
	071 Compare X19, 0
	072 JumpIfEqual {100}
	073 Move X8, 0xE4A000
	074 Move X8, [X8+2704]
	075 Move X9, [X19]
	076 Move X0, X19
	077 Move X1, [X8]
	078 Move X8, [X9+64]
	079 Move X9, [X1+64]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Call 0x1C17E08
	082 Move V0, [X0]
	083 Move W9, [X10]
	084 Add W9, W9, 4
	085 Add X8, X8, W9
	086 Add X0, X8, 312
	087 Move X8, [X0]
	088 Move X2, [X0+8]
	089 Move X0, X20
	090 Move X1, X19
	091 NotImplemented "Instruction BLR not yet implemented."
	092 Move X20, [X31+48]
	093 Move X19, [X31+56]
	094 Move X22, [X31+32]
	095 Move X21, [X31+40]
	096 Move X30, [X31+16]
	097 Move X23, [X31+24]
	098 Add X31, X31, 64
	099 Return V0
	100 Call 0x1C17F20
	101 Call 0x1C181E0

Method: System.String GetString(System.String name)

Disassembly:
	0x032AAF64 MOV X2, X31
	0x032AAF68 BL 0x33BFB40
	0x032AAF6C MOV X19, X0
	0x032AAF70 ADRP X0, 0xE73000
	0x032AAF74 LDR X0, [X0 + 0x2E0]
	0x032AAF78 BL 0x1C16D08
	0x032AAF7C BL 0x1C16F10
	0x032AAF80 MOV X1, X19
	0x032AAF84 MOV X2, X31
	0x032AAF88 MOV X20, X0
	0x032AAF8C BL 0x329F100
	0x032AAF90 ADRP X0, 0xE7A000
	0x032AAF94 LDR X0, [X0 + 0xFC0]
	0x032AAF98 BL 0x1C16D08
	0x032AAF9C MOV X1, X0
	0x032AAFA0 MOV X0, X20
	0x032AAFA4 BL 0x1C16DEC
	0x032AAFA8 STR X30, [X31 - 0x10]!
	0x032AAFAC LDR X0, [X0 + 0x68]
	0x032AAFB0 CBZ X0, 0x32AAFC4
	0x032AAFB4 LDR X8, [X0]
	0x032AAFB8 LDP X2, X1, [X8 + 0x1D8]
	0x032AAFBC LDR X30, [X31], #0x10
	0x032AAFC0 BR X2
	0x032AAFC4 BL 0x1C16F20
	0x032AAFC8 STR X30, [X31 - 0x10]!
	0x032AAFCC LDR X0, [X0 + 0x68]
	0x032AAFD0 CBZ X0, 0x32AAFE8
	0x032AAFD4 LDR X8, [X0]
	0x032AAFD8 LDR X2, [X8 + 0x298]
	0x032AAFDC LDR X1, [X8 + 0x2A0]
	0x032AAFE0 LDR X30, [X31], #0x10
	0x032AAFE4 BR X2
	0x032AAFE8 BL 0x1C16F20
	0x032AAFEC STR X30, [X31 - 0x10]!
	0x032AAFF0 LDR X0, [X0 + 0x68]
	0x032AAFF4 CBZ X0, 0x32AB00C
	0x032AAFF8 LDR X8, [X0]
	0x032AAFFC LDR X2, [X8 + 0x228]
	0x032AB000 LDR X1, [X8 + 0x230]
	0x032AB004 LDR X30, [X31], #0x10
	0x032AB008 BR X2
	0x032AB00C BL 0x1C16F20
	0x032AB010 SUB X31, X31, 0x60
	0x032AB014 STP X30, X27, [X31 + 0x10]
	0x032AB018 STP X26, X25, [X31 + 0x20]
	0x032AB01C STP X24, X23, [X31 + 0x30]
	0x032AB020 STP X22, X21, [X31 + 0x40]
	0x032AB024 STP X20, X19, [X31 + 0x50]
	0x032AB028 ADRP X27, 0x1131000
	0x032AB02C LDRB W8, [X27 + 0x7C5]
	0x032AB030 MOV X20, X7
	0x032AB034 MOV X19, X6
	0x032AB038 MOV X22, X5
	0x032AB03C MOV X21, X4
	0x032AB040 MOV X24, X3
	0x032AB044 MOV X25, X2
	0x032AB048 MOV X23, X1
	0x032AB04C MOV W26, W0
	0x032AB050 TBNZ X8, 0x0, 0x32AB074
	0x032AB054 ADRP X0, 0xE79000
	0x032AB058 LDR X0, [X0 + 0xF80]
	0x032AB05C BL 0x1C16CF4
	0x032AB060 ADRP X0, 0xE79000
	0x032AB064 LDR X0, [X0 + 0xF88]
	0x032AB068 BL 0x1C16CF4
	0x032AB06C MOVZ W8, 0x1
	0x032AB070 STRB W8, [X27 + 0x7C5]
	0x032AB074 CMP W26, 0x7
	0x032AB078 STRB W31, [X20]
	0x032AB07C STR W31, [X21]
	0x032AB080 STR X31, [X22]
	0x032AB084 STR X31, [X19]
	0x032AB088 B.HI 0x32AB2A8
	0x032AB08C ADRP X9, 0xFFFFFFFFFD8EB000
	0x032AB090 MOV W8, W26
	0x032AB094 ADD X9, X9, 0x4F0
	0x032AB098 ADR X10, 0x10
	0x032AB09C LDRB W11, [X9, X8, LSL]
	0x032AB0A0 ADD X10, X10, X11, 0x2, LSL
	0x032AB0A4 BR X10
	0x032AB0A8 CBZ X23, 0x32AB280
	0x032AB0AC LDR X8, [X23]
	0x032AB0B0 MOV X0, X23
	0x032AB0B4 LDP X9, X1, [X8 + 0x168]
	0x032AB0B8 BLR X9
	0x032AB0BC STR X0, [X22]
	0x032AB0C0 CBZ X25, 0x32AB29C
	0x032AB0C4 MOV X2, X0
	0x032AB0C8 MOV X0, X25
	0x032AB0CC MOV X1, X24

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x1133000
	009 Move X21, 0xE72000
	010 Move X22, 0xE4A000
	011 Move W8, [X23+1982]
	012 Move X21, [X21+2912]
	013 Move X22, [X22+1728]
	014 Move X19, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0xE7B000
	021 Move X0, [X0+3936]
	022 Call 0x1C17CF4
	023 Move X0, 0xE72000
	024 Move X0, [X0+2912]
	025 Call 0x1C17CF4
	026 Move X0, 0xE4C000
	027 Move X0, [X0+632]
	028 Call 0x1C17CF4
	029 Move X0, 0xE4A000
	030 Move X0, [X0+1728]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X23+1982], W8
	034 Add X2, X31, 8
	035 Move X0, X20
	036 Move X1, X19
	037 Move [X31+8], X31
	038 Call SerializationInfo.GetElement, X0, X1, X2
	039 Move X8, [X22]
	040 Move X22, [X31+8]
	041 Move X21, [X21]
	042 Move X19, X0
	043 Move W9, [X8+224]
	044 Compare W9, 0
	045 JumpIfNotEqual {48}
	046 Move X0, X8
	047 Call 0x1C17DFC
	048 Move X0, X21
	049 Move X1, X31
	050 Call Type.GetTypeFromHandle, X0
	051 Compare X19, 0
	052 JumpIfEqual {73}
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X20, [X20+56]
	055 Compare X20, 0
	056 JumpIfEqual {101}
	057 Move X10, 0xE7A000
	058 Move X8, [X20]
	059 Move X10, [X10+3936]
	060 NotImplemented "Instruction LDRH not yet implemented."
	061 Move X1, [X10]
	062 Compare X9, 0
	063 JumpIfEqual {70}
	064 Move X10, [X8+176]
	065 Add X10, X10, 8
	066 NotImplemented "Instruction LDUR not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Subtract X9, X9, 1
	069 Add X10, X10, 16
	070 Move W2, 5
	071 Move X0, X20
	072 Call 0x1C5D788
	073 Compare X19, 0
	074 JumpIfEqual {92}
	075 Move X8, 0xE4B000
	076 Move X8, [X8+632]
	077 Move X1, [X8]
	078 Move X8, [X19]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X0, X19
	081 Call 0x1C181E0
	082 Move W9, [X10]
	083 Add W9, W9, 5
	084 Add X8, X8, W9
	085 Add X0, X8, 312
	086 Move X8, [X0]
	087 Move X2, [X0+8]
	088 Move X0, X20
	089 Move X1, X19
	090 NotImplemented "Instruction BLR not yet implemented."
	091 Move X19, X0
	092 Move X0, X19
	093 Move X20, [X31+48]
	094 Move X19, [X31+56]
	095 Move X22, [X31+32]
	096 Move X21, [X31+40]
	097 Move X30, [X31+16]
	098 Move X23, [X31+24]
	099 Add X31, X31, 64
	100 Return X0
	101 Call 0x1C17F20

