Type: System.Runtime.Serialization.SerializationEvents

Method: System.Void .ctor(System.Type t)

Disassembly:
	0x032A09BC LDR W8, [X19 + 0x18]
	0x032A09C0 CMP W23, W8
	0x032A09C4 B.CS 0x32A0A24
	0x032A09C8 CBZ X20, 0x32A0A28
	0x032A09CC LDR X21, [X21]
	0x032A09D0 CBZ X21, 0x32A09E8
	0x032A09D4 LDR X8, [X20]
	0x032A09D8 MOV X0, X21
	0x032A09DC LDR X1, [X8 + 0x40]
	0x032A09E0 BL 0x1C16E00
	0x032A09E4 CBZ X0, 0x32A0A2C
	0x032A09E8 LDR W8, [X20 + 0x18]
	0x032A09EC CMP W22, W8
	0x032A09F0 B.CS 0x32A0A24
	0x032A09F4 ADD X8, X20, W22, 0x3, SXTW
	0x032A09F8 ADD W22, W22, 0x1
	0x032A09FC STR X21, [X8 + 0x20]
	0x032A0A00 LDR W8, [X19 + 0x18]
	0x032A0A04 ADD W23, W23, 0x1
	0x032A0A08 CMP W23, W8
	0x032A0A0C B.LT 0x32A0994
	0x032A0A10 MOV X0, X20
	0x032A0A14 LDP X20, X19, [X31 + 0x20]
	0x032A0A18 LDP X22, X21, [X31 + 0x10]
	0x032A0A1C LDP X30, X23, [X31], #0x30
	0x032A0A20 RET
	0x032A0A24 BL 0x1C16F28
	0x032A0A28 BL 0x1C16F20
	0x032A0A2C BL 0x1C16F44
	0x032A0A30 MOV X1, X31
	0x032A0A34 BL 0x1C16DEC
	0x032A0A38 STR X30, [X31 - 0x10]!
	0x032A0A3C CBZ X0, 0x32A0A54
	0x032A0A40 LDR X8, [X0]
	0x032A0A44 LDR X2, [X8 + 0x278]
	0x032A0A48 LDR X1, [X8 + 0x280]
	0x032A0A4C LDR X30, [X31], #0x10
	0x032A0A50 BR X2
	0x032A0A54 BL 0x1C16F20
	0x032A0A58 SUB X31, X31, 0x80
	0x032A0A5C STP X29, X30, [X31 + 0x20]
	0x032A0A60 STP X28, X27, [X31 + 0x30]
	0x032A0A64 STP X26, X25, [X31 + 0x40]
	0x032A0A68 STP X24, X23, [X31 + 0x50]
	0x032A0A6C STP X22, X21, [X31 + 0x60]
	0x032A0A70 STP X20, X19, [X31 + 0x70]
	0x032A0A74 ADRP X19, 0x113C000
	0x032A0A78 LDRB W8, [X19 + 0x76A]
	0x032A0A7C MOV X20, X0
	0x032A0A80 TBNZ X8, 0x0, 0x32A0B1C
	0x032A0A84 ADRP X0, 0xE84000
	0x032A0A88 LDR X0, [X0 + 0xB70]
	0x032A0A8C BL 0x1C16CF4
	0x032A0A90 ADRP X0, 0xE5A000
	0x032A0A94 LDR X0, [X0 + 0x2F0]
	0x032A0A98 BL 0x1C16CF4
	0x032A0A9C ADRP X0, 0xE84000
	0x032A0AA0 LDR X0, [X0 + 0xB88]
	0x032A0AA4 BL 0x1C16CF4
	0x032A0AA8 ADRP X0, 0xE84000
	0x032A0AAC LDR X0, [X0 + 0xB90]
	0x032A0AB0 BL 0x1C16CF4
	0x032A0AB4 ADRP X0, 0xE84000
	0x032A0AB8 LDR X0, [X0 + 0xB98]
	0x032A0ABC BL 0x1C16CF4
	0x032A0AC0 ADRP X0, 0xE84000
	0x032A0AC4 LDR X0, [X0 + 0xBA0]
	0x032A0AC8 BL 0x1C16CF4
	0x032A0ACC ADRP X0, 0xE84000
	0x032A0AD0 LDR X0, [X0 + 0xBA8]
	0x032A0AD4 BL 0x1C16CF4
	0x032A0AD8 ADRP X0, 0xE84000
	0x032A0ADC LDR X0, [X0 + 0xBB0]
	0x032A0AE0 BL 0x1C16CF4
	0x032A0AE4 ADRP X0, 0xE5D000
	0x032A0AE8 LDR X0, [X0 + 0x968]
	0x032A0AEC BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0x113D000
	010 Move X21, 0xE85000
	011 Move X24, 0xE54000
	012 Move W8, [X22+1886]
	013 Move X21, [X21+2680]
	014 Move X24, [X24+1728]
	015 Move X20, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {38}
	021 Move X0, 0xE85000
	022 Move X0, [X0+2688]
	023 Call 0x1C17CF4
	024 Move X0, 0xE85000
	025 Move X0, [X0+2696]
	026 Call 0x1C17CF4
	027 Move X0, 0xE85000
	028 Move X0, [X0+2704]
	029 Call 0x1C17CF4
	030 Move X0, 0xE85000
	031 Move X0, [X0+2680]
	032 Call 0x1C17CF4
	033 Move X0, 0xE54000
	034 Move X0, [X0+1728]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X22+1886], W8
	038 Move X25, 0xE85000
	039 Move X23, 0xE85000
	040 Move X22, 0xE85000
	041 Move X25, [X25+2704]
	042 Move X23, [X23+2696]
	043 Move X22, [X22+2688]
	044 Move X0, X19
	045 Move X1, X31
	046 Call Object..ctor, X0
	047 Move X0, [X24]
	048 Move X21, [X21]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X0, X21
	054 Move X1, X31
	055 Call Type.GetTypeFromHandle, X0
	056 Move X1, X0
	057 Move X2, X20
	058 Call SerializationEvents.GetMethodsWithAttribute, X0, X1, X2
	059 Move [X19+16], X0
	060 Move X0, [X25]
	061 Move X1, X31
	062 Call Type.GetTypeFromHandle, X0
	063 Move X1, X0
	064 Move X2, X20
	065 Call SerializationEvents.GetMethodsWithAttribute, X0, X1, X2
	066 Move [X19+24], X0
	067 Move X0, [X23]
	068 Move X1, X31
	069 Call Type.GetTypeFromHandle, X0
	070 Move X1, X0
	071 Move X2, X20
	072 Call SerializationEvents.GetMethodsWithAttribute, X0, X1, X2
	073 Move [X19+32], X0
	074 Move X0, [X22]
	075 Move X1, X31
	076 Call Type.GetTypeFromHandle, X0
	077 Move X1, X0
	078 Move X2, X20
	079 Call SerializationEvents.GetMethodsWithAttribute, X0, X1, X2
	080 Move [X19+40], X0
	081 Move X20, [X31+48]
	082 Move X19, [X31+56]
	083 Move X22, [X31+32]
	084 Move X21, [X31+40]
	085 Move X24, [X31+16]
	086 Move X23, [X31+24]
	087 Move X30, [X31+64]
	088 Move X25, [X31+72]
	089 Return 

Method: System.Collections.Generic.List`1<System.Reflection.MethodInfo> GetMethodsWithAttribute(System.Type attribute, System.Type t)

Disassembly:
	0x032A0AF0 ADRP X0, 0xE7C000
	0x032A0AF4 LDR X0, [X0 + 0x4E8]
	0x032A0AF8 BL 0x1C16CF4
	0x032A0AFC ADRP X0, 0xE84000
	0x032A0B00 LDR X0, [X0 + 0xBB8]
	0x032A0B04 BL 0x1C16CF4
	0x032A0B08 ADRP X0, 0xE53000
	0x032A0B0C LDR X0, [X0 + 0x6C0]
	0x032A0B10 BL 0x1C16CF4
	0x032A0B14 MOVZ W8, 0x1
	0x032A0B18 STRB W8, [X19 + 0x76A]
	0x032A0B1C CBZ X20, 0x32A0F98
	0x032A0B20 MOV X0, X20
	0x032A0B24 MOV X1, X31
	0x032A0B28 BL 0x33962E8
	0x032A0B2C TBZ X0, 0x0, 0x32A0B4C
	0x032A0B30 ADRP X8, 0xE84000
	0x032A0B34 LDR X8, [X8 + 0xBA8]
	0x032A0B38 MOV W1, W31
	0x032A0B3C LDR X0, [X8]
	0x032A0B40 BL 0x1C16D6C
	0x032A0B44 MOV X22, X0
	0x032A0B48 B 0x32A0F74
	0x032A0B4C ADRP X8, 0xE84000
	0x032A0B50 LDR X8, [X8 + 0xB70]
	0x032A0B54 LDR X0, [X8]
	0x032A0B58 LDR W8, [X0 + 0xE0]
	0x032A0B5C CBNZ W8, 0x32A0B64
	0x032A0B60 BL 0x1C16DFC
	0x032A0B64 LDR X8, [X20]
	0x032A0B68 MOV X0, X20
	0x032A0B6C LDR X9, [X8 + 0x278]
	0x032A0B70 LDR X1, [X8 + 0x280]
	0x032A0B74 BLR X9
	0x032A0B78 TBZ X0, 0x0, 0x32A10D0
	0x032A0B7C ADRP X8, 0xE84000
	0x032A0B80 LDR X8, [X8 + 0xB70]
	0x032A0B84 LDR X0, [X8]
	0x032A0B88 LDR W8, [X0 + 0xE0]
	0x032A0B8C CBNZ W8, 0x32A0B94
	0x032A0B90 BL 0x1C16DFC
	0x032A0B94 MOV X0, X20
	0x032A0B98 BL 0x32A08A8
	0x032A0B9C LDR X8, [X20]
	0x032A0BA0 MOV X22, X0
	0x032A0BA4 MOV X0, X20
	0x032A0BA8 LDR X9, [X8 + 0x818]
	0x032A0BAC LDR X1, [X8 + 0x820]
	0x032A0BB0 BLR X9
	0x032A0BB4 ADRP X19, 0xE7C000
	0x032A0BB8 LDR X19, [X19 + 0x4E8]
	0x032A0BBC MOV X20, X0
	0x032A0BC0 LDR X1, [X19]
	0x032A0BC4 CBZ X0, 0x32A0BF0
	0x032A0BC8 LDR X8, [X20]
	0x032A0BCC LDRB W9, [X1 + 0x130]
	0x032A0BD0 LDRB W10, [X8 + 0x130]
	0x032A0BD4 CMP W10, W9
	0x032A0BD8 B.CC 0x32A10C8
	0x032A0BDC LDR X8, [X8 + 0xC8]
	0x032A0BE0 ADD X8, X8, X9, 0x3, LSL
	0x032A0BE4 LDUR X8, [X8 - 0x8]
	0x032A0BE8 CMP X8, X1
	0x032A0BEC B.NE 0x32A10C8
	0x032A0BF0 LDR W8, [X1 + 0xE0]
	0x032A0BF4 CBNZ W8, 0x32A0C00
	0x032A0BF8 MOV X0, X1
	0x032A0BFC BL 0x1C16DFC
	0x032A0C00 MOV X0, X20
	0x032A0C04 MOV X1, X31
	0x032A0C08 MOV X2, X31
	0x032A0C0C BL 0x33A8424
	0x032A0C10 TBZ X0, 0x0, 0x32A0F74
	0x032A0C14 ADRP X8, 0xE53000
	0x032A0C18 LDR X8, [X8 + 0x6C0]
	0x032A0C1C LDR X0, [X8]
	0x032A0C20 ADRP X8, 0xE5D000
	0x032A0C24 LDR X8, [X8 + 0x968]
	0x032A0C28 LDR W9, [X0 + 0xE0]
	0x032A0C2C LDR X21, [X8]
	0x032A0C30 CBNZ W9, 0x32A0C38
	0x032A0C34 BL 0x1C16DFC
	0x032A0C38 MOV X0, X21
	0x032A0C3C MOV X1, X31
	0x032A0C40 BL 0x338C698
	0x032A0C44 LDR X1, [X19]
	0x032A0C48 MOV X21, X0
	0x032A0C4C LDR W8, [X1 + 0xE0]
	0x032A0C50 CBZ W8, 0x32A0C5C
	0x032A0C54 CBNZ X21, 0x32A0C6C
	0x032A0C58 B 0x32A0C94
	0x032A0C5C MOV X0, X1
	0x032A0C60 BL 0x1C16DFC
	0x032A0C64 LDR X1, [X19]
	0x032A0C68 CBZ X21, 0x32A0C94
	0x032A0C6C LDR X8, [X21]
	0x032A0C70 LDRB W9, [X1 + 0x130]
	0x032A0C74 LDRB W10, [X8 + 0x130]
	0x032A0C78 CMP W10, W9
	0x032A0C7C B.CC 0x32A1140
	0x032A0C80 LDR X8, [X8 + 0xC8]
	0x032A0C84 ADD X8, X8, X9, 0x3, LSL
	0x032A0C88 LDUR X8, [X8 - 0x8]
	0x032A0C8C CMP X8, X1
	0x032A0C90 B.NE 0x32A1140
	0x032A0C94 MOV X0, X20
	0x032A0C98 MOV X1, X21
	0x032A0C9C MOV X2, X31
	0x032A0CA0 BL 0x33A8424
	0x032A0CA4 TBZ X0, 0x0, 0x32A0F74
	0x032A0CA8 ADRP X8, 0xE84000
	0x032A0CAC LDR X8, [X8 + 0xB70]
	0x032A0CB0 STR X31, [X31 + 0x18]
	0x032A0CB4 STR W31, [X31 + 0x14]
	0x032A0CB8 LDR X0, [X8]
	0x032A0CBC LDR W8, [X0 + 0xE0]
	0x032A0CC0 CBNZ W8, 0x32A0CC8
	0x032A0CC4 BL 0x1C16DFC
	0x032A0CC8 ADD X1, X31, 0x18
	0x032A0CCC ADD X2, X31, 0x14
	0x032A0CD0 MOV X0, X20
	0x032A0CD4 BL 0x32A1148
	0x032A0CD8 LDR W8, [X31 + 0x14]
	0x032A0CDC CMP W8, 0x1
	0x032A0CE0 STP W8, W0, [X31 + 0xC]
	0x032A0CE4 B.LT 0x32A0F74
	0x032A0CE8 STR X22, [X31]
	0x032A0CEC ADRP X8, 0xE84000
	0x032A0CF0 LDR X8, [X8 + 0xBA0]
	0x032A0CF4 LDR X0, [X8]
	0x032A0CF8 BL 0x1C16F10
	0x032A0CFC ADRP X8, 0xE84000
	0x032A0D00 LDR X8, [X8 + 0xB90]
	0x032A0D04 MOV X20, X0
	0x032A0D08 LDR X1, [X8]
	0x032A0D0C BL 0x301B7C4
	0x032A0D10 LDR X28, [X31 + 0x18]
	0x032A0D14 CBZ X28, 0x32A0F98
	0x032A0D18 ADRP X26, 0xE84000
	0x032A0D1C ADRP X19, 0xE84000
	0x032A0D20 ADRP X21, 0xE84000
	0x032A0D24 LDR X26, [X26 + 0xBB8]
	0x032A0D28 LDR X19, [X19 + 0xBB0]
	0x032A0D2C LDR X21, [X21 + 0xB88]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X21, 0x113D000
	014 Move W8, [X21+1887]
	015 Move X20, X2
	016 Move X19, X1
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {41}
	021 Move X0, 0xE85000
	022 Move X0, [X0+2712]
	023 Call 0x1C17CF4
	024 Move X0, 0xE85000
	025 Move X0, [X0+2720]
	026 Call 0x1C17CF4
	027 Move X0, 0xE85000
	028 Move X0, [X0+2728]
	029 Call 0x1C17CF4
	030 Move X0, 0xE85000
	031 Move X0, [X0+2736]
	032 Call 0x1C17CF4
	033 Move X0, 0xE5E000
	034 Move X0, [X0+2408]
	035 Call 0x1C17CF4
	036 Move X0, 0xE54000
	037 Move X0, [X0+1728]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X21+1887], W8
	041 Move X24, 0xE54000
	042 Move X26, 0xE5E000
	043 Move X27, 0xE85000
	044 Move X28, 0xE85000
	045 Move X29, 0xE85000
	046 Move X24, [X24+1728]
	047 Move X26, [X26+2408]
	048 Move X27, [X27+2736]
	049 Move X28, [X28+2728]
	050 Move X29, [X29+2712]
	051 Move X21, X31
	052 Move X0, [X24]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Move X0, X20
	058 Move X1, X31
	059 Move X2, X31
	060 Call Type.op_Inequality, X0, X1
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {150}
	065 Move X0, [X24]
	066 Move X22, [X26]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 Move X0, X22
	072 Move X1, X31
	073 Call Type.GetTypeFromHandle, X0
	074 Move X1, X0
	075 Move X0, X20
	076 Move X2, X31
	077 Call Type.op_Inequality, X0, X1
	078 Move TEMP, X0
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfNotEqual {150}
	082 Compare X20, 0
	083 JumpIfEqual {171}
	084 Move X8, [X20]
	085 Move W1, 54
	086 Move X0, X20
	087 Move X9, [X8+1880]
	088 Move X2, [X8+1888]
	089 NotImplemented "Instruction BLR not yet implemented."
	090 Compare X0, 0
	091 JumpIfEqual {171}
	092 Move W8, [X0+24]
	093 Move X22, X0
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move W25, W31
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Add X8, X22, W25
	098 Move X23, [X8+32]
	099 Compare X23, 0
	100 JumpIfEqual {171}
	101 Move X8, [X23]
	102 Move X0, X23
	103 Move X1, X19
	104 Move W2, W31
	105 Move X9, [X8+488]
	106 Move X3, [X8+496]
	107 NotImplemented "Instruction BLR not yet implemented."
	108 Move TEMP, X0
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfNotEqual {141}
	112 Compare X21, 0
	113 JumpIfNotEqual {121}
	114 Move X0, [X27]
	115 Call 0x1C17F10
	116 Move X1, [X28]
	117 Move X21, X0
	118 Call List`1<Object>..ctor, X0
	119 Compare X21, 0
	120 JumpIfEqual {171}
	121 Move W10, [X21+28]
	122 Move X8, [X21+16]
	123 Move X9, [X29]
	124 Add W10, W10, 1
	125 Move [X21+28], W10
	126 Compare X8, 0
	127 JumpIfEqual {171}
	128 NotImplemented "Instruction LDRSW not yet implemented."
	129 Move W11, [X8+24]
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Add W9, W10, 1
	132 Add X8, X8, X10
	133 Move [X21+24], W9
	134 Move [X8+32], X23
	135 Move X8, [X9+32]
	136 Move X0, X21
	137 Move X1, X23
	138 Move X8, [X8+192]
	139 Move X2, [X8+112]
	140 Call List`1<Object>.AddWithResize, X0, X1
	141 Move W8, [X22+24]
	142 Add W25, W25, 1
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move X8, [X20]
	145 Move X0, X20
	146 Move X9, [X8+2072]
	147 Move X1, [X8+2080]
	148 NotImplemented "Instruction BLR not yet implemented."
	149 Move X20, X0
	150 Compare X21, 0
	151 JumpIfEqual {157}
	152 Move X8, 0xE85000
	153 Move X8, [X8+2720]
	154 Move X0, X21
	155 Move X1, [X8]
	156 Call List`1<Object>.Reverse, X0
	157 Move X0, X21
	158 Move X20, [X31+80]
	159 Move X19, [X31+88]
	160 Move X22, [X31+64]
	161 Move X21, [X31+72]
	162 Move X24, [X31+48]
	163 Move X23, [X31+56]
	164 Move X26, [X31+32]
	165 Move X25, [X31+40]
	166 Move X28, [X31+16]
	167 Move X27, [X31+24]
	168 Move X29, [X31+96]
	169 Move X30, [X31+104]
	170 Return X0
	171 Call 0x1C17F20
	172 Call 0x1C17F28

Method: System.Boolean get_HasOnSerializingEvents()

Disassembly:
	0x032A0D30 MOV W29, W31
	0x032A0D34 LDR W8, [X28 + 0x18]
	0x032A0D38 CMP W29, W8
	0x032A0D3C B.CS 0x32A0F9C
	0x032A0D40 ADRP X8, 0xE84000
	0x032A0D44 LDR X8, [X8 + 0xB70]
	0x032A0D48 LDR X0, [X8]
	0x032A0D4C ADD X8, X28, W29, 0x3, SXTW

ISIL:
	001 Move X8, [X0+16]
	002 Compare X8, 0
	003 JumpIfEqual {6}
	004 Move W0, 1
	005 Return X0
	006 Move X8, [X0+24]
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSET not yet implemented."
	009 Return X0

Method: System.Void InvokeOnSerializing(System.Object obj, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x032A0D50 LDR X23, [X8 + 0x20]
	0x032A0D54 LDR W9, [X0 + 0xE0]
	0x032A0D58 CBNZ W9, 0x32A0D60
	0x032A0D5C BL 0x1C16DFC
	0x032A0D60 CBZ X23, 0x32A0F98
	0x032A0D64 LDR X8, [X23]
	0x032A0D68 MOV X0, X23
	0x032A0D6C LDR X9, [X8 + 0x278]
	0x032A0D70 LDR X1, [X8 + 0x280]
	0x032A0D74 BLR X9
	0x032A0D78 TBZ X0, 0x0, 0x32A0FA8
	0x032A0D7C LDR X8, [X23]
	0x032A0D80 MOVZ W1, 0x24
	0x032A0D84 MOV X0, X23
	0x032A0D88 LDR X9, [X8 + 0x688]
	0x032A0D8C LDR X2, [X8 + 0x690]
	0x032A0D90 BLR X9
	0x032A0D94 LDR X8, [X23]
	0x032A0D98 LDR W9, [X31 + 0x10]
	0x032A0D9C MOV X22, X0
	0x032A0DA0 TBZ X9, 0x0, 0x32A0DAC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X2
	005 Move X2, [X0+16]
	006 Move X0, X1
	007 Move X1, X31
	008 Move X19, X3
	009 Call SerializationEvents.AddOnDelegate, X0, X1, X2
	010 Compare X0, 0
	011 JumpIfEqual {22}
	012 Move X8, [X0+64]
	013 Move X4, [X0+24]
	014 Move X3, [X0+40]
	015 Move X1, X20
	016 Move X2, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X0, X8
	020 Move X30, [X31+32]
	021 CallNoReturn X4
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Return 

Method: System.Void InvokeOnDeserializing(System.Object obj, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x032A0DF4 TBNZ X0, 0x0, 0x32A0E94
	0x032A0DF8 LDR X0, [X26]
	0x032A0DFC BL 0x1C16F10
	0x032A0E00 LDR X8, [X25]
	0x032A0E04 LDR X1, [X19]
	0x032A0E08 LDRB W10, [X8 + 0x130]
	0x032A0E0C LDRB W9, [X1 + 0x130]
	0x032A0E10 CMP W10, W9
	0x032A0E14 B.CC 0x32A0FA0
	0x032A0E18 LDR X8, [X8 + 0xC8]
	0x032A0E1C ADD X8, X8, X9, 0x3, LSL
	0x032A0E20 LDUR X8, [X8 - 0x8]
	0x032A0E24 CMP X8, X1
	0x032A0E28 B.NE 0x32A0FA0
	0x032A0E2C MOV X1, X25
	0x032A0E30 MOV X2, X23
	0x032A0E34 MOV X24, X0
	0x032A0E38 BL 0x32A1544
	0x032A0E3C CBZ X20, 0x32A0F98
	0x032A0E40 LDR W10, [X20 + 0x1C]
	0x032A0E44 LDR X8, [X20 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X2
	005 Move X2, [X0+32]
	006 Move X0, X1
	007 Move X1, X31
	008 Move X19, X3
	009 Call SerializationEvents.AddOnDelegate, X0, X1, X2
	010 Compare X0, 0
	011 JumpIfEqual {22}
	012 Move X8, [X0+64]
	013 Move X4, [X0+24]
	014 Move X3, [X0+40]
	015 Move X1, X20
	016 Move X2, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X0, X8
	020 Move X30, [X31+32]
	021 CallNoReturn X4
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Return 

Method: System.Void InvokeOnDeserialized(System.Object obj, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x032A0E48 LDR X9, [X21]
	0x032A0E4C ADD W10, W10, 0x1
	0x032A0E50 STR W10, [X20 + 0x1C]
	0x032A0E54 CBZ X8, 0x32A0F98
	0x032A0E58 LDRSW X10, [X20 + 0x18]
	0x032A0E5C LDR W11, [X8 + 0x18]
	0x032A0E60 CMP W10, W11
	0x032A0E64 B.CS 0x32A0E7C
	0x032A0E68 ADD W9, W10, 0x1
	0x032A0E6C ADD X8, X8, X10, 0x3, LSL
	0x032A0E70 STR W9, [X20 + 0x18]
	0x032A0E74 STR X24, [X8 + 0x20]
	0x032A0E78 B 0x32A0E94
	0x032A0E7C LDR X8, [X9 + 0x20]
	0x032A0E80 MOV X0, X20
	0x032A0E84 MOV X1, X24
	0x032A0E88 LDR X8, [X8 + 0xC0]
	0x032A0E8C LDR X2, [X8 + 0x70]
	0x032A0E90 BL 0x301BF90
	0x032A0E94 LDR W8, [X22 + 0x18]
	0x032A0E98 ADD W27, W27, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X2
	005 Move X2, [X0+40]
	006 Move X0, X1
	007 Move X1, X31
	008 Move X19, X3
	009 Call SerializationEvents.AddOnDelegate, X0, X1, X2
	010 Compare X0, 0
	011 JumpIfEqual {22}
	012 Move X8, [X0+64]
	013 Move X4, [X0+24]
	014 Move X3, [X0+40]
	015 Move X1, X20
	016 Move X2, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X0, X8
	020 Move X30, [X31+32]
	021 CallNoReturn X4
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Return 

Method: System.Runtime.Serialization.SerializationEventHandler AddOnSerialized(System.Object obj, System.Runtime.Serialization.SerializationEventHandler handler)

Disassembly:
	0x032A0E9C CMP W27, W8
	0x032A0EA0 B.LT 0x32A0DD4
	0x032A0EA4 LDR W8, [X31 + 0xC]
	0x032A0EA8 ADD W29, W29, 0x1
	0x032A0EAC CMP W29, W8

ISIL:
	001 Move X8, X2
	002 Move X2, [X0+24]
	003 Move X0, X1
	004 Move X1, X8

Method: System.Runtime.Serialization.SerializationEventHandler AddOnDeserialized(System.Object obj, System.Runtime.Serialization.SerializationEventHandler handler)

Disassembly:
	0x032A10EC BL 0x19903C0
	0x032A10F0 LDR X8, [X20]
	0x032A10F4 MOV X0, X20
	0x032A10F8 LDR X9, [X8 + 0x2E8]
	0x032A10FC LDR X1, [X8 + 0x2F0]

ISIL:
	001 Move X8, X2
	002 Move X2, [X0+40]
	003 Move X0, X1
	004 Move X1, X8
	005 Call SerializationEvents.AddOnDelegate, X0, X1, X2
	006 Return X0

Method: System.Void InvokeOnDelegate(System.Object obj, System.Runtime.Serialization.StreamingContext context, System.Collections.Generic.List`1<System.Reflection.MethodInfo> methods)

Disassembly:
	0x032A0DA4 LDP X9, X1, [X8 + 0x1A8]
	0x032A0DA8 B 0x32A0DB4
	0x032A0DAC LDR X9, [X8 + 0x2E8]
	0x032A0DB0 LDR X1, [X8 + 0x2F0]
	0x032A0DB4 MOV X0, X23
	0x032A0DB8 BLR X9
	0x032A0DBC MOV X23, X0
	0x032A0DC0 CBZ X22, 0x32A0F98
	0x032A0DC4 LDR W8, [X22 + 0x18]
	0x032A0DC8 CMP W8, 0x1
	0x032A0DCC B.LT 0x32A0EA4
	0x032A0DD0 MOV W27, W31
	0x032A0DD4 CMP W27, W8
	0x032A0DD8 B.CS 0x32A0F9C
	0x032A0DDC ADD X8, X22, W27, 0x3, SXTW
	0x032A0DE0 LDR X25, [X8 + 0x20]
	0x032A0DE4 CBZ X25, 0x32A0F98
	0x032A0DE8 MOV X0, X25
	0x032A0DEC MOV X1, X31
	0x032A0DF0 BL 0x32CCE30

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X2
	005 Move X20, X1
	006 Move X1, X31
	007 Move X2, X3
	008 Call SerializationEvents.AddOnDelegate, X0, X1, X2
	009 Compare X0, 0
	010 JumpIfEqual {21}
	011 Move X8, [X0+64]
	012 Move X4, [X0+24]
	013 Move X3, [X0+40]
	014 Move X1, X20
	015 Move X2, X19
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X0, X8
	019 Move X30, [X31+32]
	020 CallNoReturn X4
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Return 

Method: System.Runtime.Serialization.SerializationEventHandler AddOnDelegate(System.Object obj, System.Runtime.Serialization.SerializationEventHandler handler, System.Collections.Generic.List`1<System.Reflection.MethodInfo> methods)

Disassembly:
	0x032A0EB0 B.NE 0x32A0D34
	0x032A0EB4 CBZ X20, 0x32A0F48
	0x032A0EB8 LDR W8, [X20 + 0x18]
	0x032A0EBC LDR X22, [X31]
	0x032A0EC0 CMP W8, 0x1
	0x032A0EC4 B.LT 0x32A0F74
	0x032A0EC8 CBZ X22, 0x32A0F98
	0x032A0ECC ADRP X9, 0xE84000
	0x032A0ED0 LDR X9, [X9 + 0xBA8]
	0x032A0ED4 LDR W10, [X22 + 0x18]
	0x032A0ED8 LDR X0, [X9]
	0x032A0EDC ADD W1, W8, W10
	0x032A0EE0 BL 0x1C16D6C
	0x032A0EE4 LDR W2, [X22 + 0x18]
	0x032A0EE8 MOV X21, X0
	0x032A0EEC MOV X0, X22
	0x032A0EF0 MOV X1, X21
	0x032A0EF4 MOV X3, X31
	0x032A0EF8 BL 0x33A0C7C
	0x032A0EFC ADRP X9, 0xE5A000
	0x032A0F00 LDR X8, [X20]
	0x032A0F04 LDR X9, [X9 + 0x2F0]
	0x032A0F08 LDR W19, [X22 + 0x18]
	0x032A0F0C LDR X1, [X9]
	0x032A0F10 LDRH W9, [X8 + 0x12E]
	0x032A0F14 CBZ X9, 0x32A0F38
	0x032A0F18 LDR X10, [X8 + 0xB0]
	0x032A0F1C ADD X10, X10, 0x8
	0x032A0F20 LDUR X11, [X10 - 0x8]
	0x032A0F24 CMP X11, X1
	0x032A0F28 B.EQ 0x32A0F50
	0x032A0F2C SUBS X9, X9, 0x1
	0x032A0F30 ADD X10, X10, 0x10
	0x032A0F34 B.NE 0x32A0F20
	0x032A0F38 MOV X0, X20
	0x032A0F3C MOV W2, W31
	0x032A0F40 BL 0x1C5C788
	0x032A0F44 B 0x32A0F5C
	0x032A0F48 LDR X22, [X31]
	0x032A0F4C B 0x32A0F74
	0x032A0F50 LDRSW X9, [X10]
	0x032A0F54 ADD X8, X8, X9, 0x4, LSL
	0x032A0F58 ADD X0, X8, 0x138
	0x032A0F5C LDP X8, X3, [X0]
	0x032A0F60 MOV X0, X20
	0x032A0F64 MOV X1, X21
	0x032A0F68 MOV W2, W19
	0x032A0F6C BLR X8
	0x032A0F70 MOV X22, X21
	0x032A0F74 MOV X0, X22
	0x032A0F78 LDP X20, X19, [X31 + 0x70]
	0x032A0F7C LDP X22, X21, [X31 + 0x60]
	0x032A0F80 LDP X24, X23, [X31 + 0x50]
	0x032A0F84 LDP X26, X25, [X31 + 0x40]
	0x032A0F88 LDP X28, X27, [X31 + 0x30]
	0x032A0F8C LDP X29, X30, [X31 + 0x20]
	0x032A0F90 ADD X31, X31, 0x80
	0x032A0F94 RET
	0x032A0F98 BL 0x1C16F20
	0x032A0F9C BL 0x1C16F28
	0x032A0FA0 MOV X0, X25
	0x032A0FA4 BL 0x1C171E0
	0x032A0FA8 ADRP X0, 0xE53000
	0x032A0FAC LDR X0, [X0 + 0x9D0]
	0x032A0FB0 BL 0x1C16D08
	0x032A0FB4 MOVZ W1, 0x2
	0x032A0FB8 BL 0x1C16D6C
	0x032A0FBC MOV X19, X0
	0x032A0FC0 MOV X0, X23
	0x032A0FC4 BL 0x19903C0
	0x032A0FC8 LDR X8, [X23]
	0x032A0FCC MOV X0, X23
	0x032A0FD0 LDR X9, [X8 + 0x2E8]
	0x032A0FD4 LDR X1, [X8 + 0x2F0]
	0x032A0FD8 BLR X9
	0x032A0FDC MOV X20, X0
	0x032A0FE0 MOV X0, X19
	0x032A0FE4 BL 0x19903C0
	0x032A0FE8 MOV X0, X19
	0x032A0FEC MOV X1, X20
	0x032A0FF0 BL 0x19980B4
	0x032A0FF4 MOV X0, X19
	0x032A0FF8 MOV X1, X31
	0x032A0FFC MOV X2, X20
	0x032A1000 BL 0x1993444
	0x032A1004 MOV X0, X23
	0x032A1008 BL 0x19903C0
	0x032A100C LDR X8, [X23]
	0x032A1010 MOV X0, X23
	0x032A1014 LDR X9, [X8 + 0x308]
	0x032A1018 LDR X1, [X8 + 0x310]
	0x032A101C BLR X9
	0x032A1020 MOV X20, X0
	0x032A1024 BL 0x19903C0
	0x032A1028 LDR X8, [X20]
	0x032A102C MOV X0, X20
	0x032A1030 LDP X9, X1, [X8 + 0x1A8]
	0x032A1034 BLR X9
	0x032A1038 MOV X20, X0
	0x032A103C BL 0x19903C0
	0x032A1040 LDR X8, [X20]
	0x032A1044 MOV X0, X20
	0x032A1048 LDP X9, X1, [X8 + 0x1B8]
	0x032A104C BLR X9
	0x032A1050 MOV X20, X0
	0x032A1054 MOV X0, X19
	0x032A1058 BL 0x19903C0
	0x032A105C MOV X0, X19
	0x032A1060 MOV X1, X20
	0x032A1064 BL 0x19980B4
	0x032A1068 MOVZ W1, 0x1
	0x032A106C MOV X0, X19
	0x032A1070 MOV X2, X20
	0x032A1074 BL 0x1993444
	0x032A1078 ADRP X0, 0xE83000
	0x032A107C LDR X0, [X0 + 0xBC0]
	0x032A1080 BL 0x1C16D08
	0x032A1084 MOV X1, X19
	0x032A1088 MOV X2, X31
	0x032A108C BL 0x33BFB40
	0x032A1090 MOV X19, X0
	0x032A1094 ADRP X0, 0xE7C000
	0x032A1098 LDR X0, [X0 + 0x2E0]
	0x032A109C BL 0x1C16D08
	0x032A10A0 BL 0x1C16F10
	0x032A10A4 MOV X1, X19
	0x032A10A8 MOV X20, X0
	0x032A10AC BL 0x329F100
	0x032A10B0 ADRP X0, 0xE83000
	0x032A10B4 LDR X0, [X0 + 0xBC8]
	0x032A10B8 BL 0x1C16D08
	0x032A10BC MOV X1, X0
	0x032A10C0 MOV X0, X20
	0x032A10C4 BL 0x1C16DEC
	0x032A10C8 MOV X0, X20
	0x032A10CC BL 0x1C171E0
	0x032A10D0 ADRP X0, 0xE52000
	0x032A10D4 LDR X0, [X0 + 0x9D0]
	0x032A10D8 BL 0x1C16D08
	0x032A10DC MOVZ W1, 0x2
	0x032A10E0 BL 0x1C16D6C
	0x032A10E4 MOV X19, X0
	0x032A10E8 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+64], X30
	003 Move [X31+72], X27
	004 Move [X31+80], X26
	005 Move [X31+88], X25
	006 Move [X31+96], X24
	007 Move [X31+104], X23
	008 Move [X31+112], X22
	009 Move [X31+120], X21
	010 Move [X31+128], X20
	011 Move [X31+136], X19
	012 Move X22, 0x113D000
	013 Move W8, [X22+1888]
	014 Move X21, X2
	015 Move X19, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {44}
	021 Move X0, 0xE85000
	022 Move X0, [X0+2744]
	023 Call 0x1C17CF4
	024 Move X0, 0xE85000
	025 Move X0, [X0+2752]
	026 Call 0x1C17CF4
	027 Move X0, 0xE85000
	028 Move X0, [X0+2760]
	029 Call 0x1C17CF4
	030 Move X0, 0xE85000
	031 Move X0, [X0+2768]
	032 Call 0x1C17CF4
	033 Move X0, 0xE85000
	034 Move X0, [X0+2776]
	035 Call 0x1C17CF4
	036 Move X0, 0xE85000
	037 Move X0, [X0+2784]
	038 Call 0x1C17CF4
	039 Move X0, 0xE54000
	040 Move X0, [X0+1728]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X22+1888], W8
	044 Move [X31+32], X31
	045 Move [X31+40], X31
	046 Move [X31+48], X31
	047 Compare X21, 0
	048 JumpIfEqual {114}
	049 Move X8, 0xE85000
	050 Move X8, [X8+2768]
	051 Move X24, 0xE85000
	052 Move X25, 0xE85000
	053 Move X24, [X24+2752]
	054 Move X25, [X25+2776]
	055 Move X1, [X8]
	056 Move X26, 0xE54000
	057 Move X27, 0xE85000
	058 Move X23, 0xE85000
	059 Move X26, [X26+1728]
	060 Move X27, [X27+2784]
	061 Move X23, [X23+2744]
	062 Add X8, X31, 8
	063 Move X0, X21
	064 Call List`1<Object>.GetEnumerator, X0
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 Move X8, [X31+24]
	067 Move [X31+2], V0
	068 Move [X31+48], X8
	069 Move X1, [X24]
	070 Add X0, X31, 32
	071 Call Enumerator<Object>.MoveNext, X0
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {111}
	076 Move X0, [X26]
	077 Move X21, [X31+48]
	078 Move X22, [X25]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17DFC
	083 Move X0, X22
	084 Move X1, X31
	085 Call Type.GetTypeFromHandle, X0
	086 Move X1, X0
	087 Compare X21, 0
	088 JumpIfEqual {127}
	089 Move X8, [X21]
	090 Move X9, [X8+1000]
	091 Move X3, [X8+1008]
	092 Move X0, X21
	093 Move X2, X20
	094 NotImplemented "Instruction BLR not yet implemented."
	095 Move X8, X0
	096 Compare X0, 0
	097 JumpIfEqual {101}
	098 Move X1, [X27]
	099 Move X9, [X8]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X0, X19
	102 Move X1, X8
	103 Move X2, X31
	104 Call Delegate.Combine, X0, X1
	105 Compare X0, 0
	106 JumpIfEqual {110}
	107 Move X1, [X27]
	108 Move X8, [X0]
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X19, X0
	111 Move X1, [X23]
	112 Add X0, X31, 32
	113 Call Enumerator<Object>.Dispose, X0
	114 Move X0, X19
	115 Move X20, [X31+128]
	116 Move X19, [X31+136]
	117 Move X22, [X31+112]
	118 Move X21, [X31+120]
	119 Move X24, [X31+96]
	120 Move X23, [X31+104]
	121 Move X26, [X31+80]
	122 Move X25, [X31+88]
	123 Move X30, [X31+64]
	124 Move X27, [X31+72]
	125 Add X31, X31, 144
	126 Return X0
	127 Call 0x1C17F20
	128 Move X0, X8
	129 Call 0x1C181E0
	130 Call 0x1C181E0
	131 Move X20, X0
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move X0, X20
	134 Call 0x3EB2AD0
	135 Move X21, [X0]
	136 Call 0x3EB2AE0
	137 Move X1, [X23]
	138 Add X0, X31, 32
	139 Call Enumerator<Object>.Dispose, X0
	140 Compare X21, 0
	141 JumpIfEqual {114}
	142 Move X0, X21
	143 Call 0x1C17F18
	144 Move X21, X31
	145 Move X20, X0
	146 Move X1, [X23]
	147 Add X0, X31, 32
	148 Call Enumerator<Object>.Dispose, X0
	149 Compare X21, 0
	150 JumpIfNotEqual {153}
	151 Move X0, X20
	152 Call 0x1D2D690
	153 Move X0, X21
	154 Call 0x1C17F18
	155 Call 0x1991590

