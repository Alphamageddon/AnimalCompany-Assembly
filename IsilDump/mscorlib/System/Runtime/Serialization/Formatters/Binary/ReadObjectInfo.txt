Type: System.Runtime.Serialization.Formatters.Binary.ReadObjectInfo

Method: System.Void .ctor()

Disassembly:
	0x032B586C LDRB W10, [X26, X8, LSL]
	0x032B5870 ADD X9, X9, X10, 0x2, LSL

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void ObjectEnd()

Disassembly:
	0x032B5874 BR X9

ISIL:
	001 Return 

Method: System.Void PrepareForReuse()

Disassembly:
	0x032AFCDC BL 0x1C16CF4
	0x032AFCE0 MOVZ W8, 0x1

ISIL:
	001 Move [X0+72], W31
	002 Return 

Method: System.Runtime.Serialization.Formatters.Binary.ReadObjectInfo Create(System.Type objectType, System.Runtime.Serialization.ISurrogateSelector surrogateSelector, System.Runtime.Serialization.StreamingContext context, System.Runtime.Serialization.ObjectManager objectManager, System.Runtime.Serialization.Formatters.Binary.SerObjectInfoInit serObjectInfoInit, System.Runtime.Serialization.IFormatterConverter converter, System.Boolean bSimpleAssembly)

Disassembly:
	0x032B5878 MOV X0, X19
	0x032B587C BL 0x32BB788
	0x032B5880 B 0x32B58C0
	0x032B5884 MOV X0, X19
	0x032B5888 BL 0x32BC4A0
	0x032B588C MOVZ W27, 0x1
	0x032B5890 B 0x32B58D0
	0x032B5894 MOV X0, X19
	0x032B5898 BL 0x32BC1AC
	0x032B589C B 0x32B58C0
	0x032B58A0 MOV X0, X19
	0x032B58A4 BL 0x32BAA1C
	0x032B58A8 B 0x32B58C0
	0x032B58AC MOV X0, X19
	0x032B58B0 BL 0x32BB168
	0x032B58B4 B 0x32B588C
	0x032B58B8 MOV X0, X19
	0x032B58BC BL 0x32BB278
	0x032B58C0 AND W8, W20, 0xFF
	0x032B58C4 CMP W8, 0xC
	0x032B58C8 MOVZ W27, 0x1
	0x032B58CC B.EQ 0x32B582C
	0x032B58D0 LDR X0, [X19 + 0x40]
	0x032B58D4 CBZ X0, 0x32B5A90
	0x032B58D8 MOV X1, X31
	0x032B58DC BL 0x32BD930
	0x032B58E0 MOV X20, X0
	0x032B58E4 CBZ X0, 0x32B5A10
	0x032B58E8 LDR X1, [X23]
	0x032B58EC LDR X8, [X20]
	0x032B58F0 CMP X8, X1
	0x032B58F4 B.NE 0x32B5A94
	0x032B58F8 ADD X22, X20, 0x18
	0x032B58FC ADD X21, X20, 0x20

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move W26, W7
	012 Move X22, X6
	013 Move X25, X5
	014 Move X27, X4
	015 Move X19, X3
	016 Move X20, X2
	017 Move X21, X1
	018 Move X24, X0
	019 Call ReadObjectInfo.GetObjectInfo, X0
	020 Compare X0, 0
	021 JumpIfEqual {48}
	022 And W8, W26, 1
	023 Move X1, X24
	024 Move X2, X21
	025 Move X3, X20
	026 Move X4, X19
	027 Move X23, X0
	028 Move [X0+24], X24
	029 Move [X0+32], X27
	030 Move [X0+88], X20
	031 Move [X0+96], X19
	032 Move [X0+112], X25
	033 Move [X0+120], X22
	034 Move [X0+47], W8
	035 Call ReadObjectInfo.InitReadConstructor, X0, X1, X2, X3
	036 Move X0, X23
	037 Move X20, [X31+64]
	038 Move X19, [X31+72]
	039 Move X22, [X31+48]
	040 Move X21, [X31+56]
	041 Move X24, [X31+32]
	042 Move X23, [X31+40]
	043 Move X26, [X31+16]
	044 Move X25, [X31+24]
	045 Move X30, [X31+80]
	046 Move X27, [X31+88]
	047 Return X0
	048 Call 0x1C17F20

Method: System.Void Init(System.Type objectType, System.Runtime.Serialization.ISurrogateSelector surrogateSelector, System.Runtime.Serialization.StreamingContext context, System.Runtime.Serialization.ObjectManager objectManager, System.Runtime.Serialization.Formatters.Binary.SerObjectInfoInit serObjectInfoInit, System.Runtime.Serialization.IFormatterConverter converter, System.Boolean bSimpleAssembly)

Disassembly:
	0x032B5970 CBZ X0, 0x32B5AB4
	0x032B5974 LDR W8, [X20 + 0x38]
	0x032B5978 STR W8, [X0 + 0x20]
	0x032B597C LDR X21, [X19 + 0x10]
	0x032B5980 MOV X0, X19
	0x032B5984 BL 0x32BA8FC
	0x032B5988 MOV X1, X0

ISIL:
	001 Move W8, [X31]
	002 Move [X0+24], X1
	003 Move [X0+32], X5
	004 Move [X0+88], X3
	005 Move [X0+96], X4
	006 Move [X0+112], X6
	007 Move [X0+120], X7
	008 And W8, W8, 1
	009 Move [X0+47], W8

Method: System.Runtime.Serialization.Formatters.Binary.ReadObjectInfo Create(System.Type objectType, System.String[] memberNames, System.Type[] memberTypes, System.Runtime.Serialization.ISurrogateSelector surrogateSelector, System.Runtime.Serialization.StreamingContext context, System.Runtime.Serialization.ObjectManager objectManager, System.Runtime.Serialization.Formatters.Binary.SerObjectInfoInit serObjectInfoInit, System.Runtime.Serialization.IFormatterConverter converter, System.Boolean bSimpleAssembly)

Disassembly:
	0x032B5B24 MOVZ W1, 0x1
	0x032B5B28 BL 0x1C16D6C
	0x032B5B2C MOV X19, X0
	0x032B5B30 STRB W20, [X31 + 0xC]
	0x032B5B34 ADRP X0, 0xE3F000
	0x032B5B38 LDR X0, [X0 + 0x9D8]
	0x032B5B3C BL 0x1C16D08
	0x032B5B40 ADD X1, X31, 0xC
	0x032B5B44 BL 0x1C16E04
	0x032B5B48 CBNZ X19, 0x32B5B50
	0x032B5B4C BL 0x1C16F20
	0x032B5B50 MOV X20, X0
	0x032B5B54 CBZ X0, 0x32B5B78
	0x032B5B58 LDR X8, [X19]
	0x032B5B5C LDR X1, [X8 + 0x40]
	0x032B5B60 MOV X0, X20
	0x032B5B64 BL 0x1C16E00
	0x032B5B68 CBNZ X0, 0x32B5B78
	0x032B5B6C BL 0x1C16F44
	0x032B5B70 MOV X1, X31
	0x032B5B74 BL 0x1C16DEC
	0x032B5B78 LDR W8, [X19 + 0x18]
	0x032B5B7C CBNZ W8, 0x32B5B84
	0x032B5B80 BL 0x1C16F28
	0x032B5B84 STR X20, [X19 + 0x20]
	0x032B5B88 ADRP X0, 0xE70000
	0x032B5B8C LDR X0, [X0 + 0x3D0]
	0x032B5B90 BL 0x1C16D08
	0x032B5B94 MOV X1, X19
	0x032B5B98 MOV X2, X31
	0x032B5B9C BL 0x33BFB40
	0x032B5BA0 MOV X19, X0
	0x032B5BA4 ADRP X0, 0xE68000
	0x032B5BA8 LDR X0, [X0 + 0x2E0]
	0x032B5BAC BL 0x1C16D08
	0x032B5BB0 BL 0x1C16F10
	0x032B5BB4 MOV X20, X0
	0x032B5BB8 MOV X1, X19
	0x032B5BBC MOV X2, X31

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+40], X27
	004 Move [X31+48], X26
	005 Move [X31+56], X25
	006 Move [X31+64], X24
	007 Move [X31+72], X23
	008 Move [X31+80], X22
	009 Move [X31+88], X21
	010 Move [X31+96], X20
	011 Move [X31+104], X19
	012 Move X23, X7
	013 Move X19, X6
	014 Move X20, X5
	015 Move X21, X4
	016 Move X22, X3
	017 Move X25, X2
	018 Move X26, X1
	019 Move X27, X0
	020 Call ReadObjectInfo.GetObjectInfo, X0
	021 Compare X0, 0
	022 JumpIfEqual {51}
	023 Move W8, [X31+120]
	024 Move X9, [X31+112]
	025 Move X1, X27
	026 Move X2, X26
	027 And W8, W8, 1
	028 Move X3, X25
	029 Move X4, X22
	030 Move X5, X21
	031 Move X6, X20
	032 Move X7, X19
	033 Move X24, X0
	034 Move [X31+16], W8
	035 Move [X31], X23
	036 Move [X31+8], X9
	037 Call ReadObjectInfo.Init, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9
	038 Move X0, X24
	039 Move X20, [X31+96]
	040 Move X19, [X31+104]
	041 Move X22, [X31+80]
	042 Move X21, [X31+88]
	043 Move X24, [X31+64]
	044 Move X23, [X31+72]
	045 Move X26, [X31+48]
	046 Move X25, [X31+56]
	047 Move X30, [X31+32]
	048 Move X27, [X31+40]
	049 Add X31, X31, 112
	050 Return X0
	051 Call 0x1C17F20

Method: System.Void Init(System.Type objectType, System.String[] memberNames, System.Type[] memberTypes, System.Runtime.Serialization.ISurrogateSelector surrogateSelector, System.Runtime.Serialization.StreamingContext context, System.Runtime.Serialization.ObjectManager objectManager, System.Runtime.Serialization.Formatters.Binary.SerObjectInfoInit serObjectInfoInit, System.Runtime.Serialization.IFormatterConverter converter, System.Boolean bSimpleAssembly)

Disassembly:
	0x032B5BC0 BL 0x329F100
	0x032B5BC4 ADRP X0, 0xE70000
	0x032B5BC8 LDR X0, [X0 + 0x3C8]
	0x032B5BCC BL 0x1C16D08
	0x032B5BD0 MOV X1, X0
	0x032B5BD4 MOV X0, X20
	0x032B5BD8 BL 0x1C16DEC
	0x032B5BDC B 0x32B5C7C
	0x032B5BE0 B 0x32B5C7C
	0x032B5BE4 B 0x32B5C7C
	0x032B5BE8 B 0x32B5C7C
	0x032B5BEC B 0x32B5C7C
	0x032B5BF0 B 0x32B5C7C
	0x032B5BF4 B 0x32B5C7C
	0x032B5BF8 B 0x32B5C7C
	0x032B5BFC B 0x32B5C7C
	0x032B5C00 B 0x32B5C7C
	0x032B5C04 B 0x32B5C7C
	0x032B5C08 B 0x32B5C7C
	0x032B5C0C B 0x32B5C7C

ISIL:
	001 Move W10, [X31+16]
	002 Move X9, [X31]
	003 Move X8, [X31+8]
	004 Move [X0+24], X1
	005 Move [X0+32], X7
	006 Move [X0+56], X2
	007 Move [X0+64], X3
	008 And W10, W10, 1
	009 Move [X0+88], X5
	010 Move [X0+96], X6
	011 Move [X0+112], X9
	012 Move [X0+120], X8
	013 Move [X0+47], W10
	014 Compare X2, 0
	015 JumpIfEqual {18}
	016 Move W8, 1
	017 Move [X0+45], W8
	018 Compare X3, 0
	019 JumpIfEqual {22}
	020 Move W8, 1
	021 Move [X0+46], W8
	022 Compare X1, 0
	023 JumpIfEqual {29}
	024 Move X2, X4
	025 Move X3, X5
	026 Move X4, X6
	027 Call ReadObjectInfo.InitReadConstructor, X0, X1, X2, X3
	028 Return 
	029 Return 

Method: System.Void InitReadConstructor(System.Type objectType, System.Runtime.Serialization.ISurrogateSelector surrogateSelector, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x032B598C CBZ X21, 0x32B5AA8
	0x032B5990 MOV X0, X21
	0x032B5994 BL 0x32B6068
	0x032B5998 B 0x32B59F0
	0x032B599C MOV X0, X19
	0x032B59A0 BL 0x32BA8FC
	0x032B59A4 CBZ X0, 0x32B5AB8
	0x032B59A8 STR W25, [X0 + 0x10]
	0x032B59AC MOV X0, X19
	0x032B59B0 BL 0x32BA8FC
	0x032B59B4 CBZ X0, 0x32B5AAC
	0x032B59B8 LDR W8, [X20 + 0x34]
	0x032B59BC STR W8, [X0 + 0x1C]
	0x032B59C0 MOV X0, X19
	0x032B59C4 BL 0x32BA8FC
	0x032B59C8 CBZ X0, 0x32B5ABC
	0x032B59CC LDR W8, [X20 + 0x38]
	0x032B59D0 STR W8, [X0 + 0x20]
	0x032B59D4 LDR X21, [X19 + 0x10]
	0x032B59D8 MOV X0, X19
	0x032B59DC BL 0x32BA8FC
	0x032B59E0 MOV X1, X0
	0x032B59E4 CBZ X21, 0x32B5AC0
	0x032B59E8 MOV X0, X21
	0x032B59EC BL 0x32B6068
	0x032B59F0 LDR X0, [X19 + 0x40]
	0x032B59F4 CBZ X0, 0x32B5AA0
	0x032B59F8 MOV X1, X31
	0x032B59FC BL 0x32BD8E0
	0x032B5A00 MOV X0, X19
	0x032B5A04 MOV X1, X20
	0x032B5A08 BL 0x32BC6F0
	0x032B5A0C B 0x32B58D0
	0x032B5A10 MOVZ W8, 0x3
	0x032B5A14 STR W8, [X19 + 0x48]
	0x032B5A18 STR X31, [X19 + 0x50]
	0x032B5A1C TBNZ X27, 0x0, 0x32B5830
	0x032B5A20 B 0x32B5A74
	0x032B5A24 MOV X0, X19
	0x032B5A28 BL 0x32BB1F4
	0x032B5A2C B 0x32B588C
	0x032B5A30 MOV X0, X19
	0x032B5A34 BL 0x32BBCF8
	0x032B5A38 B 0x32B588C
	0x032B5A3C MOV X0, X19
	0x032B5A40 BL 0x32BAFC4
	0x032B5A44 B 0x32B588C
	0x032B5A48 MOV X0, X19
	0x032B5A4C BL 0x32BAC6C
	0x032B5A50 B 0x32B588C
	0x032B5A54 MOV X0, X19
	0x032B5A58 BL 0x32BC34C
	0x032B5A5C MOV W27, W31
	0x032B5A60 B 0x32B58D0
	0x032B5A64 MOV X0, X19
	0x032B5A68 BL 0x32BC018
	0x032B5A6C B 0x32B588C
	0x032B5A70 TBNZ X27, 0x0, 0x32B582C
	0x032B5A74 LDP X20, X19, [X31 + 0x50]
	0x032B5A78 LDP X22, X21, [X31 + 0x40]
	0x032B5A7C LDP X24, X23, [X31 + 0x30]
	0x032B5A80 LDP X26, X25, [X31 + 0x20]
	0x032B5A84 LDP X30, X27, [X31 + 0x10]
	0x032B5A88 ADD X31, X31, 0x60
	0x032B5A8C RET
	0x032B5A90 BL 0x1C16F20
	0x032B5A94 MOV X0, X20
	0x032B5A98 BL 0x1C171E0
	0x032B5A9C BL 0x1C16F20
	0x032B5AA0 BL 0x1C16F20
	0x032B5AA4 BL 0x1C16F20
	0x032B5AA8 BL 0x1C16F20
	0x032B5AAC BL 0x1C16F20
	0x032B5AB0 BL 0x1C16F20
	0x032B5AB4 BL 0x1C16F20
	0x032B5AB8 BL 0x1C16F20
	0x032B5ABC BL 0x1C16F20
	0x032B5AC0 BL 0x1C16F20
	0x032B5AC4 ADRP X0, 0xE70000
	0x032B5AC8 LDR X0, [X0 + 0x3C0]
	0x032B5ACC BL 0x1C16D08
	0x032B5AD0 MOV X1, X31
	0x032B5AD4 BL 0x33BDD84
	0x032B5AD8 MOV X19, X0
	0x032B5ADC ADRP X0, 0xE68000
	0x032B5AE0 LDR X0, [X0 + 0x2E0]
	0x032B5AE4 BL 0x1C16D08
	0x032B5AE8 BL 0x1C16F10
	0x032B5AEC MOV X20, X0
	0x032B5AF0 MOV X1, X19
	0x032B5AF4 MOV X2, X31
	0x032B5AF8 BL 0x329F100
	0x032B5AFC ADRP X0, 0xE70000
	0x032B5B00 LDR X0, [X0 + 0x3C8]
	0x032B5B04 BL 0x1C16D08
	0x032B5B08 MOV X1, X0
	0x032B5B0C MOV X0, X20
	0x032B5B10 BL 0x1C16DEC
	0x032B5B14 BL 0x1C16F20
	0x032B5B18 ADRP X0, 0xE3E000
	0x032B5B1C LDR X0, [X0 + 0x9D0]
	0x032B5B20 BL 0x1C16D08

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x1128000
	009 Move W8, [X24+2053]
	010 Move X21, X4
	011 Move X22, X3
	012 Move X23, X2
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xE70000
	020 Move X0, [X0+3968]
	021 Call 0x1C17CF4
	022 Move X0, 0xE70000
	023 Move X0, [X0+2528]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X24+2053], W8
	027 Compare X20, 0
	028 JumpIfEqual {120}
	029 Move X0, X20
	030 Move X1, X31
	031 Call Type.get_IsArray, X0
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {38}
	036 Move X0, X19
	037 Call ReadObjectInfo.InitNoMembers, X0
	038 Move [X31+8], X31
	039 Compare X23, 0
	040 JumpIfEqual {57}
	041 Move X10, 0xE70000
	042 Move X8, [X23]
	043 Move X10, [X10+2528]
	044 NotImplemented "Instruction LDRH not yet implemented."
	045 Move X1, [X10]
	046 Compare X9, 0
	047 JumpIfEqual {54}
	048 Move X10, [X8+176]
	049 Add X10, X10, 8
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Subtract X9, X9, 1
	053 Add X10, X10, 16
	054 Move X0, X23
	055 Move W2, W31
	056 Call 0x1C5D788
	057 Move X0, [X19+80]
	058 Compare X0, 0
	059 JumpIfNotEqual {103}
	060 NotImplemented "Instruction LDRSW not yet implemented."
	061 Add X8, X8, X9
	062 Add X0, X8, 312
	063 Move X8, [X0]
	064 Move X5, [X0+8]
	065 Add X4, X31, 8
	066 Move X0, X23
	067 Move X1, X20
	068 Move X2, X22
	069 Move X3, X21
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Move [X19+80], X0
	072 Compare X0, 0
	073 JumpIfNotEqual {103}
	074 Move X21, 0xE70000
	075 Move X21, [X21+3968]
	076 Move X0, [X21]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {82}
	080 Call 0x1C17DFC
	081 Move X0, [X21]
	082 Move X8, [X0+184]
	083 Move X9, [X8+192]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move W9, [X0+224]
	086 Compare W9, 0
	087 JumpIfNotEqual {91}
	088 Call 0x1C17DFC
	089 Move X8, [X21]
	090 Move X8, [X8+184]
	091 Move X0, [X8+48]
	092 Compare X0, 0
	093 JumpIfEqual {120}
	094 Move X8, [X0]
	095 Move X1, X20
	096 Move X9, [X8+680]
	097 Move X2, [X8+688]
	098 NotImplemented "Instruction BLR not yet implemented."
	099 Move TEMP, X0
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfNotEqual {105}
	103 Move W8, 1
	104 Move [X19+44], W8
	105 Move W8, [X19+44]
	106 Compare W8, 0
	107 JumpIfEqual {110}
	108 Move X0, X19
	109 Call ReadObjectInfo.InitSiRead, X0
	110 Move X0, X19
	111 Call ReadObjectInfo.InitMemberInfo, X0
	112 Move X20, [X31+48]
	113 Move X19, [X31+56]
	114 Move X22, [X31+32]
	115 Move X21, [X31+40]
	116 Move X24, [X31+16]
	117 Move X23, [X31+24]
	118 Move X30, [X31+64]
	119 Return 
	120 Call 0x1C17F20

Method: System.Void InitSiRead()

Disassembly:
	0x032B5C6C B 0x32B5C7C
	0x032B5C70 B 0x32B5C7C
	0x032B5C74 B 0x32B5C7C
	0x032B5C78 B 0x32B5C7C
	0x032B5C7C MOV X19, X0
	0x032B5C80 CMP W1, 0x1
	0x032B5C84 B.NE 0x32B5D2C
	0x032B5C88 MOV X0, X19
	0x032B5C8C BL 0x3EB1AD0
	0x032B5C90 MOV X19, X0
	0x032B5C94 ADRP X0, 0xE70000
	0x032B5C98 LDR X0, [X0 + 0x3D8]
	0x032B5C9C BL 0x1C16D08
	0x032B5CA0 LDR X8, [X19]
	0x032B5CA4 LDR X1, [X8]
	0x032B5CA8 BL 0x1C17270
	0x032B5CAC TBZ X0, 0x0, 0x32B5D04
	0x032B5CB0 BL 0x3EB1AE0
	0x032B5CB4 ADRP X0, 0xE70000
	0x032B5CB8 LDR X0, [X0 + 0x3E0]
	0x032B5CBC BL 0x1C16D08
	0x032B5CC0 MOV X1, X31
	0x032B5CC4 BL 0x33BDD84
	0x032B5CC8 MOV X19, X0
	0x032B5CCC ADRP X0, 0xE68000
	0x032B5CD0 LDR X0, [X0 + 0x2E0]
	0x032B5CD4 BL 0x1C16D08
	0x032B5CD8 BL 0x1C16F10
	0x032B5CDC MOV X1, X19
	0x032B5CE0 MOV X2, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1128000
	005 Move W8, [X20+2054]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xE71000
	012 Move X0, [X0+888]
	013 Call 0x1C17CF4
	014 Move X0, 0xE49000
	015 Move X0, [X0+2336]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2054], W8
	019 Move X8, [X19+104]
	020 Compare X8, 0
	021 JumpIfEqual {33}
	022 Move X8, 0xE49000
	023 Move X8, [X8+2336]
	024 Move X20, 0xE71000
	025 Move X0, [X8]
	026 Move X20, [X20+888]
	027 Call 0x1C17F10
	028 Move X2, [X20]
	029 Move W1, 20
	030 Move X20, X0
	031 Call List`1<Object>..ctor, X0, X1
	032 Move [X19+104], X20
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return 

Method: System.Void InitNoMembers()

Disassembly:
	0x032B5C10 B 0x32B5C7C
	0x032B5C14 B 0x32B5C7C
	0x032B5C18 B 0x32B5C7C
	0x032B5C1C B 0x32B5C7C
	0x032B5C20 B 0x32B5C7C
	0x032B5C24 B 0x32B5C7C
	0x032B5C28 B 0x32B5C7C
	0x032B5C2C B 0x32B5C7C
	0x032B5C30 B 0x32B5C7C
	0x032B5C34 B 0x32B5C7C
	0x032B5C38 B 0x32B5C7C
	0x032B5C3C B 0x32B5C7C
	0x032B5C40 B 0x32B5C7C
	0x032B5C44 B 0x32B5C7C
	0x032B5C48 B 0x32B5C7C
	0x032B5C4C B 0x32B5C7C
	0x032B5C50 B 0x32B5C7C
	0x032B5C54 B 0x32B5C7C
	0x032B5C58 B 0x32B5C7C
	0x032B5C5C B 0x32B5C7C
	0x032B5C60 B 0x32B5C7C
	0x032B5C64 B 0x32B5C7C
	0x032B5C68 B 0x32B5C7C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1128000
	006 Move X21, 0xE71000
	007 Move W8, [X20+2055]
	008 Move X21, [X21+824]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE71000
	015 Move X0, [X0+824]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2055], W8
	019 Move X0, [X21]
	020 Move X20, [X19+24]
	021 Call 0x1C17F10
	022 Move X1, X20
	023 Move X21, X0
	024 Call SerObjectInfoCache..ctor, X0, X1
	025 Move [X19+48], X21
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return 

Method: System.Void InitMemberInfo()

Disassembly:
	0x032B5CE4 MOV X20, X0
	0x032B5CE8 BL 0x329F100
	0x032B5CEC ADRP X0, 0xE70000
	0x032B5CF0 LDR X0, [X0 + 0x3C8]
	0x032B5CF4 BL 0x1C16D08
	0x032B5CF8 MOV X1, X0
	0x032B5CFC MOV X0, X20
	0x032B5D00 BL 0x1C16DEC
	0x032B5D04 MOVZ W0, 0x8
	0x032B5D08 BL 0x3EB1AF0
	0x032B5D0C LDR X8, [X19]
	0x032B5D10 STR X8, [X0]
	0x032B5D14 ADRP X1, 0xBFF000
	0x032B5D18 ADD X1, X1, 0xE58
	0x032B5D1C MOV X2, X31
	0x032B5D20 BL 0x3EB1B00
	0x032B5D24 MOV X19, X0
	0x032B5D28 BL 0x3EB1AE0
	0x032B5D2C MOV X0, X19
	0x032B5D30 BL 0x1D2C690
	0x032B5D34 BL 0x1990590
	0x032B5D38 STR X30, [X31 - 0x30]!
	0x032B5D3C STP X22, X21, [X31 + 0x10]
	0x032B5D40 STP X20, X19, [X31 + 0x20]
	0x032B5D44 ADRP X20, 0x1127000
	0x032B5D48 LDRB W8, [X20 + 0x814]
	0x032B5D4C MOV X19, X1
	0x032B5D50 MOV X22, X0
	0x032B5D54 TBNZ X8, 0x0, 0x32B5D6C
	0x032B5D58 ADRP X0, 0xE6F000
	0x032B5D5C LDR X0, [X0 + 0x9E0]
	0x032B5D60 BL 0x1C16CF4
	0x032B5D64 MOVZ W8, 0x1
	0x032B5D68 STRB W8, [X20 + 0x814]
	0x032B5D6C STR X31, [X31 + 0x8]
	0x032B5D70 LDR X20, [X22 + 0x18]
	0x032B5D74 CBZ X20, 0x32B5DC4
	0x032B5D78 ADRP X10, 0xE6F000
	0x032B5D7C LDR X8, [X20]
	0x032B5D80 LDR X10, [X10 + 0x9E0]
	0x032B5D84 LDP X22, X21, [X22 + 0x20]
	0x032B5D88 LDRH W9, [X8 + 0x12E]
	0x032B5D8C LDR X1, [X10]
	0x032B5D90 CBZ X9, 0x32B5DB4
	0x032B5D94 LDR X10, [X8 + 0xB0]
	0x032B5D98 ADD X10, X10, 0x8
	0x032B5D9C LDUR X11, [X10 - 0x8]
	0x032B5DA0 CMP X11, X1
	0x032B5DA4 B.EQ 0x32B5DCC
	0x032B5DA8 SUBS X9, X9, 0x1
	0x032B5DAC ADD X10, X10, 0x10
	0x032B5DB0 B.NE 0x32B5D9C
	0x032B5DB4 MOV X0, X20
	0x032B5DB8 MOV W2, W31
	0x032B5DBC BL 0x1C5C788
	0x032B5DC0 B 0x32B5DD8
	0x032B5DC4 MOV W0, W31
	0x032B5DC8 B 0x32B5DFC
	0x032B5DCC LDRSW X9, [X10]
	0x032B5DD0 ADD X8, X8, X9, 0x4, LSL
	0x032B5DD4 ADD X0, X8, 0x138
	0x032B5DD8 LDP X8, X5, [X0]
	0x032B5DDC ADD X4, X31, 0x8
	0x032B5DE0 MOV X0, X20
	0x032B5DE4 MOV X1, X19
	0x032B5DE8 MOV X2, X22
	0x032B5DEC MOV X3, X21
	0x032B5DF0 BLR X8
	0x032B5DF4 CMP X0, 0x0
	0x032B5DF8 CSET W0, NE
	0x032B5DFC LDP X20, X19, [X31 + 0x20]
	0x032B5E00 LDP X22, X21, [X31 + 0x10]
	0x032B5E04 LDR X30, [X31], #0x30
	0x032B5E08 RET
	0x032B5E0C STR X30, [X31 - 0x30]!
	0x032B5E10 STP X22, X21, [X31 + 0x10]
	0x032B5E14 STP X20, X19, [X31 + 0x20]
	0x032B5E18 CBZ X1, 0x32B5E5C
	0x032B5E1C LDR X8, [X1]
	0x032B5E20 MOV X19, X1
	0x032B5E24 MOV X20, X0
	0x032B5E28 MOV X0, X19
	0x032B5E2C LDR X9, [X8 + 0x278]
	0x032B5E30 LDR X1, [X8 + 0x280]
	0x032B5E34 BLR X9
	0x032B5E38 TBNZ X0, 0x0, 0x32B5E4C
	0x032B5E3C MOV X0, X20
	0x032B5E40 MOV X1, X19
	0x032B5E44 BL 0x32B5D38
	0x032B5E48 TBZ X0, 0x0, 0x32B5E60
	0x032B5E4C LDP X20, X19, [X31 + 0x20]
	0x032B5E50 LDP X22, X21, [X31 + 0x10]
	0x032B5E54 LDR X30, [X31], #0x30
	0x032B5E58 RET
	0x032B5E5C BL 0x1C16F20
	0x032B5E60 ADRP X0, 0xE40000
	0x032B5E64 LDR X0, [X0 + 0xC48]
	0x032B5E68 BL 0x1C16D08
	0x032B5E6C BL 0x19903D0
	0x032B5E70 MOV X0, X31
	0x032B5E74 BL 0x3338524
	0x032B5E78 MOV X20, X0
	0x032B5E7C ADRP X0, 0xE6F000
	0x032B5E80 LDR X0, [X0 + 0xBC0]
	0x032B5E84 BL 0x1C16D08
	0x032B5E88 MOV X1, X31
	0x032B5E8C BL 0x33BDD84
	0x032B5E90 MOV X21, X0
	0x032B5E94 MOV X0, X19
	0x032B5E98 BL 0x19903C0
	0x032B5E9C LDR X8, [X19]
	0x032B5EA0 MOV X0, X19
	0x032B5EA4 LDR X9, [X8 + 0x2E8]
	0x032B5EA8 LDR X1, [X8 + 0x2F0]
	0x032B5EAC BLR X9
	0x032B5EB0 MOV X22, X0
	0x032B5EB4 MOV X0, X19
	0x032B5EB8 BL 0x19903C0
	0x032B5EBC LDR X8, [X19]
	0x032B5EC0 MOV X0, X19
	0x032B5EC4 LDR X9, [X8 + 0x2F8]
	0x032B5EC8 LDR X1, [X8 + 0x300]
	0x032B5ECC BLR X9
	0x032B5ED0 MOV X19, X0
	0x032B5ED4 BL 0x19903C0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x1128000
	008 Move X20, 0xE71000
	009 Move X22, 0xE70000
	010 Move W8, [X21+2056]
	011 Move X20, [X20+824]
	012 Move X22, [X22+2928]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0xE70000
	019 Move X0, [X0+2928]
	020 Call 0x1C17CF4
	021 Move X0, 0xE71000
	022 Move X0, [X0+824]
	023 Call 0x1C17CF4
	024 Move X0, 0xE3F000
	025 Move X0, [X0+2760]
	026 Call 0x1C17CF4
	027 Move X0, 0xE47000
	028 Move X0, [X0+3168]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+2056], W8
	032 Move X0, [X20]
	033 Move X21, [X19+24]
	034 Call 0x1C17F10
	035 Move X1, X21
	036 Move X20, X0
	037 Call SerObjectInfoCache..ctor, X0, X1
	038 Move [X19+48], X20
	039 Move X0, [X22]
	040 Move X23, [X19+24]
	041 Move X22, [X19+88]
	042 Move X21, [X19+96]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X0, X23
	048 Move X1, X22
	049 Move X2, X21
	050 Move X3, X31
	051 Call FormatterServices.GetSerializableMembers, X0, X1
	052 Compare X20, 0
	053 JumpIfEqual {140}
	054 Move [X20+40], X0
	055 Move X20, [X19+48]
	056 Compare X20, 0
	057 JumpIfEqual {140}
	058 Move X8, [X20+40]
	059 Compare X8, 0
	060 JumpIfEqual {140}
	061 Move W1, [X8+24]
	062 Move X8, 0xE3F000
	063 Move X8, [X8+2760]
	064 Move X21, 0xE47000
	065 Move [X19+40], W1
	066 Move X0, [X8]
	067 Move X21, [X21+3168]
	068 Call 0x1C17D6C
	069 Move [X20+48], X0
	070 Move W1, [X19+40]
	071 Move X0, [X21]
	072 Move X20, [X19+48]
	073 Call 0x1C17D6C
	074 Compare X20, 0
	075 JumpIfEqual {140}
	076 Move [X20+56], X0
	077 Move W8, [X19+40]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move W21, 4
	080 Move X8, [X19+48]
	081 Compare X8, 0
	082 JumpIfEqual {140}
	083 Move X9, [X8+40]
	084 Compare X9, 0
	085 JumpIfEqual {140}
	086 Move W10, [X9+24]
	087 Subtract X22, X21, 4
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X0, [X9]
	090 Compare X0, 0
	091 JumpIfEqual {140}
	092 Move X9, [X0]
	093 Move X20, [X8+48]
	094 Move X8, [X9+424]
	095 Move X1, [X9+432]
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Compare X20, 0
	098 JumpIfEqual {140}
	099 Move W8, [X20+24]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move [X20], X0
	102 Move X8, [X19+48]
	103 Compare X8, 0
	104 JumpIfEqual {140}
	105 Move X9, [X8+40]
	106 Compare X9, 0
	107 JumpIfEqual {140}
	108 Move W10, [X9+24]
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X1, [X9]
	111 Move X23, [X8+56]
	112 Call ReadObjectInfo.GetMemberType, X0, X1
	113 Compare X23, 0
	114 JumpIfEqual {140}
	115 Move X20, X0
	116 Compare X0, 0
	117 JumpIfEqual {124}
	118 Move X8, [X23]
	119 Move X0, X20
	120 Move X1, [X8+64]
	121 Call 0x1C17E00
	122 Compare X0, 0
	123 JumpIfEqual {142}
	124 Move W8, [X23+24]
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move [X23], X20
	127 Move W8, [X19+40]
	128 Add X21, X21, 1
	129 Subtract W9, W21, 4
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Move W8, 257
	132 NotImplemented "Instruction STURH not yet implemented."
	133 Move X20, [X31+32]
	134 Move X19, [X31+40]
	135 Move X22, [X31+16]
	136 Move X21, [X31+24]
	137 Move X30, [X31+48]
	138 Move X23, [X31+56]
	139 Return 
	140 Call 0x1C17F20
	141 Call 0x1C17F28
	142 Call 0x1C17F44
	143 Move X1, X31
	144 Call 0x1C17DEC

Method: System.Reflection.MemberInfo GetMemberInfo(System.String name)

Disassembly:
	0x032B6040 CBZ X8, 0x32B6060
	0x032B6044 LDR W9, [X8 + 0x18]
	0x032B6048 CMP W9, W1
	0x032B604C B.LS 0x32B6064
	0x032B6050 ADD X8, X8, W1, 0x3, SXTW
	0x032B6054 LDR X0, [X8 + 0x20]
	0x032B6058 LDR X30, [X31], #0x10
	0x032B605C RET
	0x032B6060 BL 0x1C16F20
	0x032B6064 BL 0x1C16F28
	0x032B6068 STR X30, [X31 - 0x20]!
	0x032B606C STP X20, X19, [X31 + 0x10]
	0x032B6070 CBZ X1, 0x32B6108
	0x032B6074 LDR W8, [X1 + 0x10]
	0x032B6078 SUB W8, W8, 0x1
	0x032B607C CMP W8, 0xB
	0x032B6080 B.HI 0x32B610C
	0x032B6084 ADRP X9, 0xFFFFFFFFFD8E0000
	0x032B6088 ADD X9, X9, 0x53C
	0x032B608C ADR X10, 0x10
	0x032B6090 LDRB W11, [X9, X8, LSL]
	0x032B6094 ADD X10, X10, X11, 0x2, LSL
	0x032B6098 BR X10
	0x032B609C LDP X20, X19, [X31 + 0x10]
	0x032B60A0 LDR X30, [X31], #0x20
	0x032B60A4 RET
	0x032B60A8 LDR X0, [X0 + 0x88]
	0x032B60AC CBZ X0, 0x32B6108
	0x032B60B0 LDP X20, X19, [X31 + 0x10]
	0x032B60B4 MOV X2, X31
	0x032B60B8 LDR X30, [X31], #0x20
	0x032B60BC B 0x32BD7AC
	0x032B60C0 LDP X20, X19, [X31 + 0x10]
	0x032B60C4 LDR X30, [X31], #0x20
	0x032B60C8 B 0x32B61E4
	0x032B60CC LDP X20, X19, [X31 + 0x10]
	0x032B60D0 LDR X30, [X31], #0x20
	0x032B60D4 B 0x32B6720
	0x032B60D8 LDP X20, X19, [X31 + 0x10]
	0x032B60DC LDR X30, [X31], #0x20
	0x032B60E0 B 0x32B64F4
	0x032B60E4 LDP X20, X19, [X31 + 0x10]
	0x032B60E8 LDR X30, [X31], #0x20
	0x032B60EC B 0x32B6BE0
	0x032B60F0 LDR X0, [X0 + 0x88]
	0x032B60F4 CBZ X0, 0x32B6108
	0x032B60F8 LDP X20, X19, [X31 + 0x10]
	0x032B60FC MOV X1, X31
	0x032B6100 LDR X30, [X31], #0x20
	0x032B6104 B 0x32BD8E0
	0x032B6108 BL 0x1C16F20
	0x032B610C ADRP X0, 0xE3D000
	0x032B6110 LDR X0, [X0 + 0x9D0]
	0x032B6114 MOV X19, X1
	0x032B6118 BL 0x1C16D08
	0x032B611C MOVZ W1, 0x1
	0x032B6120 BL 0x1C16D6C
	0x032B6124 MOV X20, X0
	0x032B6128 MOV X0, X19
	0x032B612C BL 0x19903C0
	0x032B6130 LDR X19, [X19 + 0x28]
	0x032B6134 MOV X0, X20
	0x032B6138 BL 0x19903C0
	0x032B613C MOV X0, X20
	0x032B6140 MOV X1, X19
	0x032B6144 BL 0x19980B4
	0x032B6148 MOV X0, X20
	0x032B614C MOV X1, X31
	0x032B6150 MOV X2, X19
	0x032B6154 BL 0x1993444
	0x032B6158 ADRP X0, 0xE6F000
	0x032B615C LDR X0, [X0 + 0x3F8]
	0x032B6160 BL 0x1C16D08
	0x032B6164 MOV X1, X20
	0x032B6168 MOV X2, X31
	0x032B616C BL 0x33BFB40
	0x032B6170 MOV X19, X0
	0x032B6174 ADRP X0, 0xE67000
	0x032B6178 LDR X0, [X0 + 0x2E0]
	0x032B617C BL 0x1C16D08
	0x032B6180 BL 0x1C16F10
	0x032B6184 MOV X1, X19
	0x032B6188 MOV X2, X31
	0x032B618C MOV X20, X0
	0x032B6190 BL 0x329F100
	0x032B6194 ADRP X0, 0xE6F000
	0x032B6198 LDR X0, [X0 + 0x400]
	0x032B619C BL 0x1C16D08
	0x032B61A0 MOV X1, X0
	0x032B61A4 MOV X0, X20
	0x032B61A8 BL 0x1C16DEC
	0x032B61AC STR X30, [X31 - 0x10]!
	0x032B61B0 LDR X0, [X0 + 0x88]
	0x032B61B4 CBZ X0, 0x32B61C4
	0x032B61B8 MOV X2, X31
	0x032B61BC LDR X30, [X31], #0x10
	0x032B61C0 B 0x32BD7AC
	0x032B61C4 BL 0x1C16F20
	0x032B61C8 STR X30, [X31 - 0x10]!
	0x032B61CC LDR X0, [X0 + 0x88]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X0+48]
	007 Compare X8, 0
	008 JumpIfEqual {34}
	009 Move W9, [X0+44]
	010 Move X20, X0
	011 Move X19, X1
	012 Compare W9, 0
	013 JumpIfNotEqual {42}
	014 Move X8, [X8+40]
	015 Compare X8, 0
	016 JumpIfEqual {51}
	017 Move X0, X20
	018 Move X1, X19
	019 Call ReadObjectInfo.Position, X0, X1
	020 Add W31, W0, 1
	021 Move X8, [X20+48]
	022 Compare X8, 0
	023 JumpIfEqual {41}
	024 Move X21, [X8+40]
	025 Move X0, X20
	026 Move X1, X19
	027 Call ReadObjectInfo.Position, X0, X1
	028 Compare X21, 0
	029 JumpIfEqual {41}
	030 Move W8, [X21+24]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Add X8, X21, W0
	033 Move X0, [X8+32]
	034 Move X0, X31
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 Return X0
	041 Call 0x1C17F20
	042 Move X0, 0xE3E000
	043 Move X0, [X0+2512]
	044 Call 0x1C17D08
	045 Move W1, 1
	046 Call 0x1C17D6C
	047 Move X22, [X20+24]
	048 Move X20, X0
	049 Move X0, 0xE70000
	050 Move X0, [X0+904]
	051 Move X0, 0xE3E000
	052 Move X0, [X0+2512]
	053 Call 0x1C17D08
	054 Move W1, 1
	055 Call 0x1C17D6C
	056 Move X22, [X20+24]
	057 Move X20, X0
	058 Move X0, 0xE70000
	059 Move X0, [X0+912]
	060 Call 0x1C17D08
	061 Move X21, X0
	062 Compare X22, 0
	063 JumpIfEqual {70}
	064 Move X8, [X22]
	065 Move X0, X22
	066 Move X9, [X8+360]
	067 Move X1, [X8+368]
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Move X22, X0
	070 Move X0, 0xE3E000
	071 Move X0, [X0+3544]
	072 Call 0x1C17D08
	073 Move X1, X0
	074 Move X0, X22
	075 Move X2, X19
	076 Move X3, X31
	077 Call String.Concat, X0, X1, X2
	078 Move X19, X0
	079 Move X0, X20
	080 Call 0x19913C0
	081 Move X0, X20
	082 Move X1, X19
	083 Call 0x19990B4
	084 Move X0, X20
	085 Move X1, X31
	086 Move X2, X19
	087 Call 0x1994444
	088 Move X0, X21
	089 Move X1, X20
	090 Move X2, X31
	091 Call Environment.GetResourceString, X0, X1
	092 Move X19, X0
	093 Move X0, 0xE68000
	094 Move X0, [X0+736]
	095 Call 0x1C17D08
	096 Call 0x1C17F10
	097 Move X1, X19
	098 Move X2, X31
	099 Move X20, X0
	100 Call SerializationException..ctor, X0, X1
	101 Move X0, 0xE70000
	102 Move X0, [X0+920]
	103 Call 0x1C17D08
	104 Move X1, X0
	105 Move X0, X20
	106 Call 0x1C17DEC
	107 Call 0x1C17F28

Method: System.Type GetType(System.String name)

Disassembly:
	0x032B6304 CBNZ W8, 0x32B630C
	0x032B6308 BL 0x1C16DFC
	0x032B630C MOV X0, X21
	0x032B6310 MOV X1, X31
	0x032B6314 BL 0x32A1868
	0x032B6318 STR X0, [X19 + 0xE8]
	0x032B631C MOV X1, X0
	0x032B6320 LDR X0, [X20 + 0x30]
	0x032B6324 CBZ X0, 0x32B644C
	0x032B6328 MOV X2, X31
	0x032B632C BL 0x32A6DD0
	0x032B6330 LDR X8, [X19 + 0xE8]
	0x032B6334 CBZ X8, 0x32B6450
	0x032B6338 LDR W9, [X19 + 0x24]
	0x032B633C CMP W9, 0x1
	0x032B6340 B.NE 0x32B6354
	0x032B6344 LDR X9, [X20 + 0x30]
	0x032B6348 STR X8, [X20 + 0x60]
	0x032B634C CBZ X9, 0x32B6354
	0x032B6350 STR X8, [X9 + 0x28]
	0x032B6354 LDR X8, [X19 + 0xD8]
	0x032B6358 CBNZ X8, 0x32B63A4
	0x032B635C LDR X0, [X19 + 0x48]
	0x032B6360 LDP X1, X2, [X20 + 0x18]
	0x032B6364 LDP X3, X4, [X20 + 0x28]
	0x032B6368 LDP X5, X6, [X20 + 0x78]
	0x032B636C LDRB W7, [X20 + 0x50]
	0x032B6370 BL 0x32B4878
	0x032B6374 STR X0, [X19 + 0xD8]
	0x032B6378 B 0x32B63A4
	0x032B637C ADRP X8, 0xE6E000
	0x032B6380 LDR X20, [X19 + 0x40]
	0x032B6384 LDR X8, [X8 + 0xD38]
	0x032B6388 LDR X0, [X8]
	0x032B638C BL 0x1C16F10
	0x032B6390 MOV X1, X20
	0x032B6394 MOV X2, X31
	0x032B6398 MOV X21, X0
	0x032B639C BL 0x32A74B4
	0x032B63A0 STR X21, [X19 + 0xE8]
	0x032B63A4 LDP X20, X19, [X31 + 0x30]
	0x032B63A8 LDP X22, X21, [X31 + 0x20]
	0x032B63AC LDR X30, [X31 + 0x10]
	0x032B63B0 ADD X31, X31, 0x40
	0x032B63B4 RET
	0x032B63B8 LDR X8, [X19 + 0x30]
	0x032B63BC CBZ X8, 0x32B63A4
	0x032B63C0 LDR W9, [X19 + 0x24]
	0x032B63C4 STR X8, [X19 + 0xE8]
	0x032B63C8 CMP W9, 0x1
	0x032B63CC B.NE 0x32B63E4
	0x032B63D0 LDR X9, [X20 + 0x30]
	0x032B63D4 STR X8, [X20 + 0x60]
	0x032B63D8 CBZ X9, 0x32B63A4
	0x032B63DC STR X8, [X9 + 0x28]
	0x032B63E0 B 0x32B63A4
	0x032B63E4 LDR X0, [X20 + 0x88]
	0x032B63E8 CBZ X0, 0x32B644C
	0x032B63EC MOV X1, X31
	0x032B63F0 BL 0x32BD8E0
	0x032B63F4 LDR X0, [X20 + 0x88]
	0x032B63F8 CBZ X0, 0x32B644C
	0x032B63FC LDR X21, [X19 + 0xE8]
	0x032B6400 MOV X1, X31
	0x032B6404 BL 0x32BD930
	0x032B6408 MOV X3, X0
	0x032B640C CBZ X0, 0x32B6428
	0x032B6410 ADRP X8, 0xE6F000
	0x032B6414 LDR X8, [X8 + 0x60]
	0x032B6418 LDR X1, [X8]
	0x032B641C LDR X8, [X3]
	0x032B6420 CMP X8, X1
	0x032B6424 B.NE 0x32B64EC
	0x032B6428 MOV X0, X20
	0x032B642C MOV X1, X21
	0x032B6430 MOV X2, X19
	0x032B6434 LDP X20, X19, [X31 + 0x30]
	0x032B6438 LDP X22, X21, [X31 + 0x20]
	0x032B643C LDR X30, [X31 + 0x10]
	0x032B6440 MOV W4, W31
	0x032B6444 ADD X31, X31, 0x40
	0x032B6448 B 0x32B7E0C
	0x032B644C BL 0x1C16F20
	0x032B6450 ADRP X0, 0xE3D000
	0x032B6454 LDR X0, [X0 + 0x9D0]
	0x032B6458 BL 0x1C16D08
	0x032B645C MOVZ W1, 0x1
	0x032B6460 BL 0x1C16D6C
	0x032B6464 MOV X20, X0
	0x032B6468 MOV X0, X19
	0x032B646C BL 0x19903C0
	0x032B6470 LDR X19, [X19 + 0x48]
	0x032B6474 MOV X0, X20
	0x032B6478 BL 0x19903C0
	0x032B647C MOV X0, X20
	0x032B6480 MOV X1, X19
	0x032B6484 BL 0x19980B4
	0x032B6488 MOV X0, X20
	0x032B648C MOV X1, X31
	0x032B6490 MOV X2, X19
	0x032B6494 BL 0x1993444

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1127000
	007 Move W8, [X21+2057]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE70000
	015 Move X0, [X0+928]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2057], W8
	019 Move X0, X20
	020 Move X1, X19
	021 Call ReadObjectInfo.Position, X0, X1
	022 Add W31, W0, 1
	023 Move W8, [X20+46]
	024 Move W1, W0
	025 Compare W8, 0
	026 JumpIfEqual {40}
	027 Move X8, [X20+48]
	028 Compare X8, 0
	029 JumpIfEqual {55}
	030 Move X8, [X8+56]
	031 Compare X8, 0
	032 JumpIfEqual {55}
	033 Move W9, [X8+24]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Add X8, X8, W1
	036 Move X0, [X8+32]
	037 Compare X0, 0
	038 JumpIfNotEqual {49}
	039 Move X0, X31
	040 Move X0, [X20+104]
	041 Compare X0, 0
	042 JumpIfEqual {55}
	043 Move X8, 0xE70000
	044 Move X8, [X8+928]
	045 Move X2, [X8]
	046 Call List`1<Object>.get_Item, X0, X1
	047 Compare X0, 0
	048 JumpIfEqual {56}
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X30, [X31+48]
	054 Return X0
	055 Call 0x1C17F20
	056 Move X0, 0xE3E000
	057 Move X0, [X0+2512]
	058 Call 0x1C17D08
	059 Move W1, 1
	060 Call 0x1C17D6C
	061 Move X22, [X20+24]
	062 Move X20, X0
	063 Move X0, 0xE70000
	064 Move X0, [X0+48]
	065 Call 0x1C17D08
	066 Move X21, X0
	067 Compare X22, 0
	068 JumpIfEqual {75}
	069 Move X8, [X22]
	070 Move X0, X22
	071 Move X9, [X8+360]
	072 Move X1, [X8+368]
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Move X22, X0
	075 Move X0, 0xE3E000
	076 Move X0, [X0+3544]
	077 Call 0x1C17D08
	078 Move X1, X0
	079 Move X0, X22
	080 Move X2, X19
	081 Move X3, X31
	082 Call String.Concat, X0, X1, X2
	083 Move X19, X0
	084 Move X0, X20
	085 Call 0x19913C0
	086 Move X0, X20
	087 Move X1, X19
	088 Call 0x19990B4
	089 Move X0, X20
	090 Move X1, X31
	091 Move X2, X19
	092 Call 0x1994444
	093 Move X0, X21
	094 Move X1, X20
	095 Move X2, X31
	096 Call Environment.GetResourceString, X0, X1
	097 Move X19, X0
	098 Move X0, 0xE68000
	099 Move X0, [X0+736]
	100 Call 0x1C17D08
	101 Call 0x1C17F10
	102 Move X1, X19
	103 Move X2, X31
	104 Move X20, X0
	105 Call SerializationException..ctor, X0, X1
	106 Move X0, 0xE70000
	107 Move X0, [X0+936]
	108 Call 0x1C17D08
	109 Move X1, X0
	110 Move X0, X20
	111 Call 0x1C17DEC
	112 Call 0x1C17F28

Method: System.Void AddValue(System.String name, System.Object value, ref System.Runtime.Serialization.SerializationInfo si, ref System.Object[] memberData)

Disassembly:
	0x032B6498 ADRP X0, 0xE6F000
	0x032B649C LDR X0, [X0 + 0x408]
	0x032B64A0 BL 0x1C16D08
	0x032B64A4 MOV X1, X20
	0x032B64A8 MOV X2, X31
	0x032B64AC BL 0x33BFB40
	0x032B64B0 MOV X19, X0
	0x032B64B4 ADRP X0, 0xE67000
	0x032B64B8 LDR X0, [X0 + 0x2E0]
	0x032B64BC BL 0x1C16D08
	0x032B64C0 BL 0x1C16F10
	0x032B64C4 MOV X1, X19
	0x032B64C8 MOV X2, X31
	0x032B64CC MOV X20, X0
	0x032B64D0 BL 0x329F100
	0x032B64D4 ADRP X0, 0xE6F000
	0x032B64D8 LDR X0, [X0 + 0x410]
	0x032B64DC BL 0x1C16D08
	0x032B64E0 MOV X1, X0
	0x032B64E4 MOV X0, X20
	0x032B64E8 BL 0x1C16DEC
	0x032B64EC MOV X0, X3
	0x032B64F0 BL 0x1C171E0
	0x032B64F4 STP X30, X23, [X31 - 0x30]!
	0x032B64F8 STP X22, X21, [X31 + 0x10]
	0x032B64FC STP X20, X19, [X31 + 0x20]
	0x032B6500 ADRP X21, 0x1126000
	0x032B6504 LDRB W8, [X21 + 0x817]
	0x032B6508 MOV X20, X1
	0x032B650C MOV X19, X0
	0x032B6510 TBNZ X8, 0x0, 0x32B6540
	0x032B6514 ADRP X0, 0xE6E000
	0x032B6518 LDR X0, [X0 + 0xF80]
	0x032B651C BL 0x1C16CF4
	0x032B6520 ADRP X0, 0xE6F000
	0x032B6524 LDR X0, [X0 + 0x60]
	0x032B6528 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+44]
	006 Move X19, X2
	007 Compare W8, 0
	008 JumpIfEqual {19}
	009 Move X0, [X3]
	010 Compare X0, 0
	011 JumpIfEqual {43}
	012 Move X2, X19
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move X30, [X31+32]
	016 Move X21, [X31+40]
	017 Call SerializationInfo.AddValue, X0, X1, X2
	018 Return 
	019 Move X21, X4
	020 Call ReadObjectInfo.Position, X0, X1
	021 Add W31, W0, 1
	022 Move X21, [X21]
	023 Compare X21, 0
	024 JumpIfEqual {43}
	025 Move W20, W0
	026 Compare X19, 0
	027 JumpIfEqual {34}
	028 Move X8, [X21]
	029 Move X0, X19
	030 Move X1, [X8+64]
	031 Call 0x1C17E00
	032 Compare X0, 0
	033 JumpIfEqual {45}
	034 Move W8, [X21+24]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Add X8, X21, W20
	037 Move [X8+32], X19
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Return 
	043 Call 0x1C17F20
	044 Call 0x1C17F28
	045 Call 0x1C17F44
	046 Move X1, X31
	047 Call 0x1C17DEC

Method: System.Void InitDataStore(ref System.Runtime.Serialization.SerializationInfo si, ref System.Object[] memberData)

Disassembly:
	0x032AFC10 STR X9, [X19 + 0x78]
	0x032AFC14 B.EQ 0x32AFCA4
	0x032AFC18 ADRP X9, 0xE76000
	0x032AFC1C LDR X9, [X9 + 0x88]
	0x032AFC20 CMP W8, 0xD
	0x032AFC24 LDR X9, [X9]
	0x032AFC28 STR X9, [X19 + 0x80]
	0x032AFC2C B.LS 0x32AFCA4
	0x032AFC30 ADRP X9, 0xE76000
	0x032AFC34 LDR X9, [X9 + 0x98]
	0x032AFC38 CMP W8, 0xE
	0x032AFC3C LDR X9, [X9]
	0x032AFC40 STR X9, [X19 + 0x88]
	0x032AFC44 B.EQ 0x32AFCA4
	0x032AFC48 ADRP X9, 0xE76000
	0x032AFC4C LDR X9, [X9 + 0x90]
	0x032AFC50 CMP W8, 0xF
	0x032AFC54 LDR X9, [X9]
	0x032AFC58 STR X9, [X19 + 0x90]
	0x032AFC5C B.LS 0x32AFCA4
	0x032AFC60 ADRP X9, 0xE76000
	0x032AFC64 LDR X9, [X9 + 0xC0]
	0x032AFC68 CMP W8, 0x10
	0x032AFC6C LDR X9, [X9]
	0x032AFC70 STR X9, [X19 + 0x98]
	0x032AFC74 B.EQ 0x32AFCA4
	0x032AFC78 ADRP X8, 0xE76000
	0x032AFC7C LDR X8, [X8 + 0xD0]
	0x032AFC80 LDR X8, [X8]
	0x032AFC84 STR X8, [X19 + 0xA0]
	0x032AFC88 BL 0x1C16D44
	0x032AFC8C LDR X8, [X20]
	0x032AFC90 LDR X8, [X8 + 0xB8]
	0x032AFC94 STR X19, [X8 + 0x18]
	0x032AFC98 LDP X20, X19, [X31 + 0x10]
	0x032AFC9C LDR X30, [X31], #0x20
	0x032AFCA0 RET
	0x032AFCA4 BL 0x1C16F28
	0x032AFCA8 BL 0x1C16F20
	0x032AFCAC STR X30, [X31 - 0x20]!
	0x032AFCB0 STP X20, X19, [X31 + 0x10]
	0x032AFCB4 ADRP X19, 0x112D000
	0x032AFCB8 ADRP X20, 0xE75000
	0x032AFCBC LDRB W8, [X19 + 0x7DE]
	0x032AFCC0 LDR X20, [X20 + 0xF80]
	0x032AFCC4 TBNZ X8, 0x0, 0x32AFCE8
	0x032AFCC8 ADRP X0, 0xE75000
	0x032AFCCC LDR X0, [X0 + 0xF80]
	0x032AFCD0 BL 0x1C16CF4
	0x032AFCD4 ADRP X0, 0xE76000
	0x032AFCD8 LDR X0, [X0 + 0xF8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x112E000
	007 Move W8, [X22+2058]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xE45000
	016 Move X0, [X0+2512]
	017 Call 0x1C17CF4
	018 Move X0, 0xE77000
	019 Move X0, [X0+80]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2058], W8
	023 Move W8, [X21+44]
	024 Compare W8, 0
	025 JumpIfEqual {41}
	026 Move X8, [X20]
	027 Compare X8, 0
	028 JumpIfNotEqual {56}
	029 Move X8, 0xE77000
	030 Move X19, [X21+24]
	031 Move X21, [X21+120]
	032 Move X8, [X8+80]
	033 Move X0, [X8]
	034 Call 0x1C17F10
	035 Move X1, X19
	036 Move X2, X21
	037 Move W3, W31
	038 Move X22, X0
	039 Call SerializationInfo..ctor, X0, X1, X2, X3
	040 Move [X20], X22
	041 Move X8, [X19]
	042 Compare X8, 0
	043 JumpIfNotEqual {56}
	044 Move X8, [X21+48]
	045 Compare X8, 0
	046 JumpIfEqual {56}
	047 Move X8, [X8+48]
	048 Compare X8, 0
	049 JumpIfEqual {62}
	050 Move X9, 0xE45000
	051 Move X9, [X9+2512]
	052 Move W1, [X8+24]
	053 Move X0, [X9]
	054 Call 0x1C17D6C
	055 Move [X19], X0
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X22, [X31+16]
	059 Move X21, [X31+24]
	060 Move X30, [X31+48]
	061 Return 
	062 Call 0x1C17F20

Method: System.Void RecordFixup(System.Int64 objectId, System.String name, System.Int64 idRef)

Disassembly:
	0x032B652C ADRP X0, 0xE6F000
	0x032B6530 LDR X0, [X0 + 0x418]
	0x032B6534 BL 0x1C16CF4
	0x032B6538 MOVZ W8, 0x1
	0x032B653C STRB W8, [X21 + 0x817]
	0x032B6540 LDR X0, [X19 + 0x88]
	0x032B6544 CBZ X0, 0x32B66E8
	0x032B6548 ADRP X22, 0xE6F000
	0x032B654C LDR X22, [X22 + 0x60]
	0x032B6550 MOV X1, X31
	0x032B6554 BL 0x32BD930
	0x032B6558 CBZ X0, 0x32B656C
	0x032B655C LDR X1, [X22]
	0x032B6560 LDR X8, [X0]
	0x032B6564 CMP X8, X1
	0x032B6568 B.NE 0x32B6714
	0x032B656C CMP X0, 0x0
	0x032B6570 CSEL X20, X20, X0, EQ
	0x032B6574 CBZ X20, 0x32B66E8
	0x032B6578 LDR W8, [X20 + 0x24]
	0x032B657C CMP W8, 0x1
	0x032B6580 B.NE 0x32B65B4
	0x032B6584 ADRP X23, 0xE6E000
	0x032B6588 LDR X23, [X23 + 0xF80]
	0x032B658C LDR X21, [X20 + 0x48]
	0x032B6590 LDR X0, [X23]
	0x032B6594 LDR W8, [X0 + 0xE0]
	0x032B6598 CBNZ W8, 0x32B65A4
	0x032B659C BL 0x1C16DFC
	0x032B65A0 LDR X0, [X23]
	0x032B65A4 LDR X8, [X0 + 0xB8]
	0x032B65A8 LDR X8, [X8 + 0x38]
	0x032B65AC CMP X21, X8
	0x032B65B0 B.EQ 0x32B66EC
	0x032B65B4 LDR X0, [X19 + 0x88]
	0x032B65B8 CBZ X0, 0x32B66E8
	0x032B65BC MOV X1, X31
	0x032B65C0 BL 0x32BD8E0
	0x032B65C4 LDR X0, [X19 + 0x88]
	0x032B65C8 CBZ X0, 0x32B66E8
	0x032B65CC MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+44]
	006 Move X19, X3
	007 Move X21, X0
	008 Move X20, X1
	009 Compare W8, 0
	010 JumpIfEqual {17}
	011 Move X0, [X21+32]
	012 Compare X0, 0
	013 JumpIfEqual {50}
	014 Move X8, [X0]
	015 Move X5, [X8+424]
	016 Move X4, [X8+432]
	017 Move X0, X21
	018 Move X1, X2
	019 Call ReadObjectInfo.Position, X0, X1
	020 Add W31, W0, 1
	021 Move X8, [X21+48]
	022 Compare X8, 0
	023 JumpIfEqual {50}
	024 Move X9, [X8+40]
	025 Compare X9, 0
	026 JumpIfEqual {50}
	027 Move W8, [X9+24]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X8, [X21+32]
	030 Compare X8, 0
	031 JumpIfEqual {50}
	032 Move X10, [X8]
	033 Add X9, X9, W0
	034 Move X2, [X9+32]
	035 Move X0, X8
	036 Move X5, [X10+408]
	037 Move X4, [X10+416]
	038 Move X1, X20
	039 Move X3, X19
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 CallNoReturn X5
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Return 
	050 Call 0x1C17F20
	051 Call 0x1C17F28

Method: System.Void PopulateObjectMembers(System.Object obj, System.Object[] memberData)

Disassembly:
	0x032B65D0 BL 0x32BD930
	0x032B65D4 MOV X21, X0
	0x032B65D8 CBZ X0, 0x32B65EC
	0x032B65DC LDR X1, [X22]
	0x032B65E0 LDR X8, [X21]
	0x032B65E4 CMP X8, X1
	0x032B65E8 B.NE 0x32B6718
	0x032B65EC LDR X1, [X20 + 0xE8]
	0x032B65F0 CBZ X1, 0x32B6704
	0x032B65F4 LDR W8, [X20 + 0x14]
	0x032B65F8 CMP W8, 0x2
	0x032B65FC B.NE 0x32B663C
	0x032B6600 LDR W8, [X20 + 0x24]
	0x032B6604 CMP W8, 0x1
	0x032B6608 B.NE 0x32B661C
	0x032B660C LDR X8, [X19 + 0x30]
	0x032B6610 STR X1, [X19 + 0x60]
	0x032B6614 CBZ X8, 0x32B661C
	0x032B6618 STR X1, [X8 + 0x28]
	0x032B661C MOV X0, X19
	0x032B6620 MOV X2, X20
	0x032B6624 MOV X3, X21
	0x032B6628 LDP X20, X19, [X31 + 0x20]
	0x032B662C LDP X22, X21, [X31 + 0x10]
	0x032B6630 MOV W4, W31
	0x032B6634 LDP X30, X23, [X31], #0x30
	0x032B6638 B 0x32B7E0C
	0x032B663C LDR X0, [X20 + 0xD8]
	0x032B6640 CBZ X0, 0x32B66E8
	0x032B6644 LDR X2, [X20 + 0x108]
	0x032B6648 BL 0x32B55D0
	0x032B664C LDRB W8, [X20 + 0x100]
	0x032B6650 CBNZ W8, 0x32B6678
	0x032B6654 LDR X8, [X20 + 0x58]
	0x032B6658 CMP X8, 0x1
	0x032B665C B.LT 0x32B6678
	0x032B6660 LDR X1, [X20 + 0xE8]
	0x032B6664 MOV X0, X19
	0x032B6668 MOV X2, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1127000
	007 Move W8, [X22+2059]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xE6F000
	016 Move X0, [X0+2928]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2059], W8
	020 Compare X19, 0
	021 JumpIfEqual {47}
	022 Move W8, [X21+44]
	023 Compare W8, 0
	024 JumpIfNotEqual {47}
	025 Move X8, [X21+48]
	026 Compare X8, 0
	027 JumpIfEqual {53}
	028 Move X9, 0xE6F000
	029 Move X9, [X9+2928]
	030 Move X21, [X8+40]
	031 Move X0, [X9]
	032 Move W9, [X0+224]
	033 Compare W9, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X0, X20
	037 Move X1, X21
	038 Move X2, X19
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X3, X31
	044 Move X30, [X31+48]
	045 Call FormatterServices.PopulateObjectMembers, X0, X1, X2
	046 Return 
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move X30, [X31+48]
	052 Return 
	053 Call 0x1C17F20

Method: System.Int32 Position(System.String name)

Disassembly:
	0x032B61D0 CBZ X0, 0x32B61E0
	0x032B61D4 MOV X1, X31
	0x032B61D8 LDR X30, [X31], #0x10
	0x032B61DC B 0x32BD8E0
	0x032B61E0 BL 0x1C16F20
	0x032B61E4 SUB X31, X31, 0x40
	0x032B61E8 STR X30, [X31 + 0x10]
	0x032B61EC STP X22, X21, [X31 + 0x20]
	0x032B61F0 STP X20, X19, [X31 + 0x30]
	0x032B61F4 ADRP X21, 0x1126000
	0x032B61F8 LDRB W8, [X21 + 0x816]
	0x032B61FC MOV X19, X1
	0x032B6200 MOV X20, X0
	0x032B6204 TBNZ X8, 0x0, 0x32B6240
	0x032B6208 ADRP X0, 0xE6E000
	0x032B620C LDR X0, [X0 + 0xF80]
	0x032B6210 BL 0x1C16CF4
	0x032B6214 ADRP X0, 0xE6E000
	0x032B6218 LDR X0, [X0 + 0xB70]
	0x032B621C BL 0x1C16CF4
	0x032B6220 ADRP X0, 0xE6F000
	0x032B6224 LDR X0, [X0 + 0x60]
	0x032B6228 BL 0x1C16CF4
	0x032B622C ADRP X0, 0xE6E000
	0x032B6230 LDR X0, [X0 + 0xD38]
	0x032B6234 BL 0x1C16CF4
	0x032B6238 MOVZ W8, 0x1
	0x032B623C STRB W8, [X21 + 0x816]
	0x032B6240 LDRB W8, [X20 + 0xA0]
	0x032B6244 CBNZ W8, 0x32B6250
	0x032B6248 MOV X0, X20
	0x032B624C BL 0x32B5F3C
	0x032B6250 CBZ X19, 0x32B644C
	0x032B6254 LDR W8, [X19 + 0x24]
	0x032B6258 CMP W8, 0x1
	0x032B625C B.NE 0x32B6268
	0x032B6260 LDR X8, [X19 + 0x58]
	0x032B6264 STR X8, [X20 + 0x48]
	0x032B6268 LDR W8, [X19 + 0x10]
	0x032B626C CMP W8, 0x2
	0x032B6270 B.NE 0x32B6288
	0x032B6274 LDR X0, [X20 + 0x88]
	0x032B6278 CBZ X0, 0x32B644C
	0x032B627C MOV X1, X19
	0x032B6280 MOV X2, X31
	0x032B6284 BL 0x32BD7AC
	0x032B6288 LDR W8, [X19 + 0x14]
	0x032B628C CMP W8, 0x2
	0x032B6290 B.NE 0x32B62B0
	0x032B6294 MOV X0, X20
	0x032B6298 MOV X1, X19
	0x032B629C LDP X20, X19, [X31 + 0x30]
	0x032B62A0 LDP X22, X21, [X31 + 0x20]
	0x032B62A4 LDR X30, [X31 + 0x10]
	0x032B62A8 ADD X31, X31, 0x40
	0x032B62AC B 0x32B6E9C
	0x032B62B0 LDR X21, [X19 + 0x48]
	0x032B62B4 CBZ X21, 0x32B637C
	0x032B62B8 ADRP X22, 0xE6E000
	0x032B62BC LDR X22, [X22 + 0xF80]
	0x032B62C0 LDR X0, [X22]
	0x032B62C4 LDR W8, [X0 + 0xE0]
	0x032B62C8 CBNZ W8, 0x32B62D4
	0x032B62CC BL 0x1C16DFC
	0x032B62D0 LDR X0, [X22]
	0x032B62D4 LDR X8, [X0 + 0xB8]
	0x032B62D8 LDR X8, [X8 + 0x38]
	0x032B62DC CMP X21, X8
	0x032B62E0 B.EQ 0x32B63B8
	0x032B62E4 LDR X1, [X19 + 0x48]
	0x032B62E8 MOV X0, X20
	0x032B62EC BL 0x32B5E0C
	0x032B62F0 ADRP X8, 0xE6E000
	0x032B62F4 LDR X8, [X8 + 0xB70]
	0x032B62F8 LDR X21, [X19 + 0x48]
	0x032B62FC LDR X0, [X8]
	0x032B6300 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X0+48]
	007 Compare X8, 0
	008 JumpIfEqual {85}
	009 Move X9, [X8+48]
	010 Compare X9, 0
	011 JumpIfEqual {83}
	012 Move X22, X0
	013 Move X11, [X9+24]
	014 NotImplemented "Instruction LDRSW not yet implemented."
	015 Move X19, X0
	016 Move X20, X1
	017 Compare X11, 0
	018 JumpIfEqual {39}
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Add X8, X9, X10
	021 Move X0, [X8+32]
	022 Compare X0, 0
	023 JumpIfEqual {83}
	024 Move X1, X20
	025 Move X2, X31
	026 Call String.Equals, X0, X1
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {57}
	031 Move X22, X19
	032 Add X22, X22, 72
	033 Move W9, [X22]
	034 NotImplemented "Instruction LDUR not yet implemented."
	035 Add W9, W9, 1
	036 Move [X22], W9
	037 Compare X8, 0
	038 JumpIfNotEqual {41}
	039 Add W9, W10, 1
	040 Move [X22], W9
	041 Move X10, [X8+48]
	042 Compare X10, 0
	043 JumpIfEqual {83}
	044 Move W11, [X10+24]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Add X8, X10, W9
	047 Move X0, [X8+32]
	048 Compare X0, 0
	049 JumpIfEqual {83}
	050 Move X1, X20
	051 Move X2, X31
	052 Call String.Equals, X0, X1
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {58}
	057 Move W21, [X22]
	058 Move X8, [X19+48]
	059 Compare X8, 0
	060 JumpIfEqual {83}
	061 Move X21, X31
	062 Move X8, [X8+48]
	063 Compare X8, 0
	064 JumpIfEqual {83}
	065 Move W9, [X8+24]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Add X8, X8, X21
	069 Move X0, [X8+32]
	070 Compare X0, 0
	071 JumpIfEqual {83}
	072 Move X1, X20
	073 Move X2, X31
	074 Call String.Equals, X0, X1
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfEqual {88}
	079 Move X8, [X19+48]
	080 Add X21, X21, 1
	081 Compare X8, 0
	082 JumpIfNotEqual {62}
	083 Call 0x1C17F20
	084 Move [X22], W31
	085 Move TEMP, 0
	086 Not TEMP
	087 Move W21, TEMP
	088 Move [X22], W21
	089 Move W0, W21
	090 Move X20, [X31+32]
	091 Move X19, [X31+40]
	092 Move X22, [X31+16]
	093 Move X21, [X31+24]
	094 Move X30, [X31+48]
	095 Return X0
	096 Call 0x1C17F28

Method: System.Type[] GetMemberTypes(System.String[] inMemberNames, System.Type objectType)

Disassembly:
	0x032AF3C0 LDR X8, [X19]
	0x032AF3C4 MOV X0, X20
	0x032AF3C8 LDR X1, [X8 + 0x40]
	0x032AF3CC BL 0x1C16E00
	0x032AF3D0 CBZ X0, 0x32AF508
	0x032AF3D4 LDR W8, [X19 + 0x18]
	0x032AF3D8 CMP W8, 0xB
	0x032AF3DC B.LS 0x32AF504
	0x032AF3E0 STR X20, [X19 + 0x78]
	0x032AF3E4 LDR X9, [X21]
	0x032AF3E8 LDR X9, [X9 + 0xB8]
	0x032AF3EC LDR X20, [X9 + 0x148]
	0x032AF3F0 CBZ X20, 0x32AF40C
	0x032AF3F4 LDR X8, [X19]
	0x032AF3F8 MOV X0, X20
	0x032AF3FC LDR X1, [X8 + 0x40]
	0x032AF400 BL 0x1C16E00
	0x032AF404 CBZ X0, 0x32AF508
	0x032AF408 LDR W8, [X19 + 0x18]
	0x032AF40C CMP W8, 0xC
	0x032AF410 B.LS 0x32AF504
	0x032AF414 STR X20, [X19 + 0x80]
	0x032AF418 LDR X9, [X21]
	0x032AF41C LDR X9, [X9 + 0xB8]
	0x032AF420 LDR X20, [X9 + 0x150]
	0x032AF424 CBZ X20, 0x32AF440
	0x032AF428 LDR X8, [X19]
	0x032AF42C MOV X0, X20
	0x032AF430 LDR X1, [X8 + 0x40]
	0x032AF434 BL 0x1C16E00
	0x032AF438 CBZ X0, 0x32AF508
	0x032AF43C LDR W8, [X19 + 0x18]
	0x032AF440 CMP W8, 0xD
	0x032AF444 B.LS 0x32AF504
	0x032AF448 STR X20, [X19 + 0x88]
	0x032AF44C LDR X9, [X21]
	0x032AF450 LDR X9, [X9 + 0xB8]
	0x032AF454 LDR X20, [X9 + 0x158]
	0x032AF458 CBZ X20, 0x32AF474
	0x032AF45C LDR X8, [X19]
	0x032AF460 MOV X0, X20
	0x032AF464 LDR X1, [X8 + 0x40]
	0x032AF468 BL 0x1C16E00
	0x032AF46C CBZ X0, 0x32AF508
	0x032AF470 LDR W8, [X19 + 0x18]
	0x032AF474 CMP W8, 0xE
	0x032AF478 B.LS 0x32AF504
	0x032AF47C STR X20, [X19 + 0x90]
	0x032AF480 LDR X9, [X21]
	0x032AF484 LDR X9, [X9 + 0xB8]
	0x032AF488 LDR X20, [X9 + 0x160]
	0x032AF48C CBZ X20, 0x32AF4A8
	0x032AF490 LDR X8, [X19]
	0x032AF494 MOV X0, X20
	0x032AF498 LDR X1, [X8 + 0x40]
	0x032AF49C BL 0x1C16E00
	0x032AF4A0 CBZ X0, 0x32AF508
	0x032AF4A4 LDR W8, [X19 + 0x18]
	0x032AF4A8 CMP W8, 0xF
	0x032AF4AC B.LS 0x32AF504
	0x032AF4B0 STR X20, [X19 + 0x98]
	0x032AF4B4 LDR X9, [X21]
	0x032AF4B8 LDR X9, [X9 + 0xB8]
	0x032AF4BC LDR X20, [X9 + 0x168]
	0x032AF4C0 CBZ X20, 0x32AF4DC
	0x032AF4C4 LDR X8, [X19]
	0x032AF4C8 MOV X0, X20
	0x032AF4CC LDR X1, [X8 + 0x40]
	0x032AF4D0 BL 0x1C16E00
	0x032AF4D4 CBZ X0, 0x32AF508
	0x032AF4D8 LDR W8, [X19 + 0x18]
	0x032AF4DC CMP W8, 0x10
	0x032AF4E0 B.LS 0x32AF504
	0x032AF4E4 STR X20, [X19 + 0xA0]
	0x032AF4E8 BL 0x1C16D44
	0x032AF4EC LDR X8, [X21]
	0x032AF4F0 LDR X8, [X8 + 0xB8]
	0x032AF4F4 STR X19, [X8 + 0x10]
	0x032AF4F8 LDP X20, X19, [X31 + 0x10]
	0x032AF4FC LDP X30, X21, [X31], #0x20
	0x032AF500 RET
	0x032AF504 BL 0x1C16F28
	0x032AF508 BL 0x1C16F44
	0x032AF50C MOV X1, X31
	0x032AF510 BL 0x1C16DEC
	0x032AF514 BL 0x1C16F20
	0x032AF518 STP X30, X21, [X31 - 0x20]!
	0x032AF51C STP X20, X19, [X31 + 0x10]
	0x032AF520 ADRP X19, 0x112D000
	0x032AF524 ADRP X21, 0xE75000
	0x032AF528 LDRB W8, [X19 + 0x7D7]
	0x032AF52C LDR X21, [X21 + 0xF80]
	0x032AF530 TBNZ X8, 0x0, 0x32AF554
	0x032AF534 ADRP X0, 0xE75000
	0x032AF538 LDR X0, [X0 + 0xF80]
	0x032AF53C BL 0x1C16CF4
	0x032AF540 ADRP X0, 0xE4C000
	0x032AF544 LDR X0, [X0 + 0xC60]
	0x032AF548 BL 0x1C16CF4
	0x032AF54C MOVZ W8, 0x1
	0x032AF550 STRB W8, [X19 + 0x7D7]
	0x032AF554 LDR X0, [X21]
	0x032AF558 ADRP X19, 0xE4C000
	0x032AF55C LDR W8, [X0 + 0xE0]
	0x032AF560 LDR X19, [X19 + 0xC60]
	0x032AF564 CBNZ W8, 0x32AF570
	0x032AF568 BL 0x1C16DFC
	0x032AF56C LDR X0, [X21]
	0x032AF570 LDR X8, [X0 + 0xB8]
	0x032AF574 LDR X0, [X19]
	0x032AF578 LDR W1, [X8]
	0x032AF57C BL 0x1C16D6C
	0x032AF580 CBZ X0, 0x32AF8CC
	0x032AF584 LDR W8, [X0 + 0x18]
	0x032AF588 MOV X19, X0
	0x032AF58C CBZ W8, 0x32AF8BC
	0x032AF590 STR X31, [X19 + 0x20]
	0x032AF594 LDR X9, [X21]
	0x032AF598 LDR X9, [X9 + 0xB8]
	0x032AF59C LDR X20, [X9 + 0x48]
	0x032AF5A0 CBZ X20, 0x32AF5BC
	0x032AF5A4 LDR X8, [X19]
	0x032AF5A8 MOV X0, X20
	0x032AF5AC LDR X1, [X8 + 0x40]
	0x032AF5B0 BL 0x1C16E00
	0x032AF5B4 CBZ X0, 0x32AF8C0
	0x032AF5B8 LDR W8, [X19 + 0x18]
	0x032AF5BC CMP W8, 0x1
	0x032AF5C0 B.LS 0x32AF8BC
	0x032AF5C4 STR X20, [X19 + 0x28]
	0x032AF5C8 LDR X9, [X21]
	0x032AF5CC LDR X9, [X9 + 0xB8]
	0x032AF5D0 LDR X20, [X9 + 0x50]
	0x032AF5D4 CBZ X20, 0x32AF5F0
	0x032AF5D8 LDR X8, [X19]
	0x032AF5DC MOV X0, X20
	0x032AF5E0 LDR X1, [X8 + 0x40]
	0x032AF5E4 BL 0x1C16E00
	0x032AF5E8 CBZ X0, 0x32AF8C0
	0x032AF5EC LDR W8, [X19 + 0x18]
	0x032AF5F0 CMP W8, 0x2
	0x032AF5F4 B.LS 0x32AF8BC
	0x032AF5F8 STR X20, [X19 + 0x30]
	0x032AF5FC LDR X9, [X21]
	0x032AF600 LDR X9, [X9 + 0xB8]
	0x032AF604 LDR X20, [X9 + 0x58]
	0x032AF608 CBZ X20, 0x32AF624
	0x032AF60C LDR X8, [X19]
	0x032AF610 MOV X0, X20
	0x032AF614 LDR X1, [X8 + 0x40]
	0x032AF618 BL 0x1C16E00
	0x032AF61C CBZ X0, 0x32AF8C0
	0x032AF620 LDR W8, [X19 + 0x18]
	0x032AF624 CMP W8, 0x3
	0x032AF628 B.LS 0x32AF8BC
	0x032AF62C STR X20, [X19 + 0x38]
	0x032AF630 LDR X9, [X21]
	0x032AF634 LDR X9, [X9 + 0xB8]
	0x032AF638 LDR X20, [X9 + 0x60]
	0x032AF63C CBZ X20, 0x32AF658
	0x032AF640 LDR X8, [X19]
	0x032AF644 MOV X0, X20
	0x032AF648 LDR X1, [X8 + 0x40]
	0x032AF64C BL 0x1C16E00
	0x032AF650 CBZ X0, 0x32AF8C0
	0x032AF654 LDR W8, [X19 + 0x18]
	0x032AF658 CMP W8, 0x5
	0x032AF65C B.LS 0x32AF8BC
	0x032AF660 STR X20, [X19 + 0x48]
	0x032AF664 LDR X9, [X21]
	0x032AF668 LDR X9, [X9 + 0xB8]
	0x032AF66C LDR X20, [X9 + 0x68]
	0x032AF670 CBZ X20, 0x32AF68C
	0x032AF674 LDR X8, [X19]
	0x032AF678 MOV X0, X20
	0x032AF67C LDR X1, [X8 + 0x40]
	0x032AF680 BL 0x1C16E00
	0x032AF684 CBZ X0, 0x32AF8C0
	0x032AF688 LDR W8, [X19 + 0x18]
	0x032AF68C CMP W8, 0x6
	0x032AF690 B.LS 0x32AF8BC
	0x032AF694 STR X20, [X19 + 0x50]
	0x032AF698 LDR X9, [X21]
	0x032AF69C LDR X9, [X9 + 0xB8]
	0x032AF6A0 LDR X20, [X9 + 0x70]
	0x032AF6A4 CBZ X20, 0x32AF6C0
	0x032AF6A8 LDR X8, [X19]
	0x032AF6AC MOV X0, X20
	0x032AF6B0 LDR X1, [X8 + 0x40]
	0x032AF6B4 BL 0x1C16E00
	0x032AF6B8 CBZ X0, 0x32AF8C0
	0x032AF6BC LDR W8, [X19 + 0x18]
	0x032AF6C0 CMP W8, 0x7
	0x032AF6C4 B.LS 0x32AF8BC
	0x032AF6C8 STR X20, [X19 + 0x58]
	0x032AF6CC LDR X9, [X21]
	0x032AF6D0 LDR X9, [X9 + 0xB8]
	0x032AF6D4 LDR X20, [X9 + 0x78]
	0x032AF6D8 CBZ X20, 0x32AF6F4
	0x032AF6DC LDR X8, [X19]
	0x032AF6E0 MOV X0, X20
	0x032AF6E4 LDR X1, [X8 + 0x40]
	0x032AF6E8 BL 0x1C16E00
	0x032AF6EC CBZ X0, 0x32AF8C0
	0x032AF6F0 LDR W8, [X19 + 0x18]
	0x032AF6F4 CMP W8, 0x8
	0x032AF6F8 B.LS 0x32AF8BC
	0x032AF6FC STR X20, [X19 + 0x60]
	0x032AF700 LDR X9, [X21]
	0x032AF704 LDR X9, [X9 + 0xB8]
	0x032AF708 LDR X20, [X9 + 0x80]
	0x032AF70C CBZ X20, 0x32AF728
	0x032AF710 LDR X8, [X19]
	0x032AF714 MOV X0, X20
	0x032AF718 LDR X1, [X8 + 0x40]
	0x032AF71C BL 0x1C16E00
	0x032AF720 CBZ X0, 0x32AF8C0
	0x032AF724 LDR W8, [X19 + 0x18]
	0x032AF728 CMP W8, 0x9
	0x032AF72C B.LS 0x32AF8BC
	0x032AF730 STR X20, [X19 + 0x68]
	0x032AF734 LDR X9, [X21]
	0x032AF738 LDR X9, [X9 + 0xB8]
	0x032AF73C LDR X20, [X9 + 0x88]
	0x032AF740 CBZ X20, 0x32AF75C
	0x032AF744 LDR X8, [X19]
	0x032AF748 MOV X0, X20
	0x032AF74C LDR X1, [X8 + 0x40]
	0x032AF750 BL 0x1C16E00
	0x032AF754 CBZ X0, 0x32AF8C0
	0x032AF758 LDR W8, [X19 + 0x18]
	0x032AF75C CMP W8, 0xA
	0x032AF760 B.LS 0x32AF8BC
	0x032AF764 STR X20, [X19 + 0x70]
	0x032AF768 LDR X9, [X21]
	0x032AF76C LDR X9, [X9 + 0xB8]
	0x032AF770 LDR X20, [X9 + 0x90]
	0x032AF774 CBZ X20, 0x32AF790
	0x032AF778 LDR X8, [X19]
	0x032AF77C MOV X0, X20
	0x032AF780 LDR X1, [X8 + 0x40]
	0x032AF784 BL 0x1C16E00
	0x032AF788 CBZ X0, 0x32AF8C0
	0x032AF78C LDR W8, [X19 + 0x18]
	0x032AF790 CMP W8, 0xB
	0x032AF794 B.LS 0x32AF8BC
	0x032AF798 STR X20, [X19 + 0x78]
	0x032AF79C LDR X9, [X21]
	0x032AF7A0 LDR X9, [X9 + 0xB8]
	0x032AF7A4 LDR X20, [X9 + 0x98]
	0x032AF7A8 CBZ X20, 0x32AF7C4
	0x032AF7AC LDR X8, [X19]
	0x032AF7B0 MOV X0, X20
	0x032AF7B4 LDR X1, [X8 + 0x40]
	0x032AF7B8 BL 0x1C16E00
	0x032AF7BC CBZ X0, 0x32AF8C0
	0x032AF7C0 LDR W8, [X19 + 0x18]
	0x032AF7C4 CMP W8, 0xC
	0x032AF7C8 B.LS 0x32AF8BC
	0x032AF7CC STR X20, [X19 + 0x80]
	0x032AF7D0 LDR X9, [X21]
	0x032AF7D4 LDR X9, [X9 + 0xB8]
	0x032AF7D8 LDR X20, [X9 + 0xA0]
	0x032AF7DC CBZ X20, 0x32AF7F8
	0x032AF7E0 LDR X8, [X19]
	0x032AF7E4 MOV X0, X20
	0x032AF7E8 LDR X1, [X8 + 0x40]
	0x032AF7EC BL 0x1C16E00
	0x032AF7F0 CBZ X0, 0x32AF8C0
	0x032AF7F4 LDR W8, [X19 + 0x18]
	0x032AF7F8 CMP W8, 0xD
	0x032AF7FC B.LS 0x32AF8BC
	0x032AF800 STR X20, [X19 + 0x88]
	0x032AF804 LDR X9, [X21]
	0x032AF808 LDR X9, [X9 + 0xB8]
	0x032AF80C LDR X20, [X9 + 0xA8]
	0x032AF810 CBZ X20, 0x32AF82C
	0x032AF814 LDR X8, [X19]
	0x032AF818 MOV X0, X20
	0x032AF81C LDR X1, [X8 + 0x40]
	0x032AF820 BL 0x1C16E00
	0x032AF824 CBZ X0, 0x32AF8C0
	0x032AF828 LDR W8, [X19 + 0x18]
	0x032AF82C CMP W8, 0xE
	0x032AF830 B.LS 0x32AF8BC
	0x032AF834 STR X20, [X19 + 0x90]
	0x032AF838 LDR X9, [X21]
	0x032AF83C LDR X9, [X9 + 0xB8]
	0x032AF840 LDR X20, [X9 + 0xB0]
	0x032AF844 CBZ X20, 0x32AF860
	0x032AF848 LDR X8, [X19]
	0x032AF84C MOV X0, X20
	0x032AF850 LDR X1, [X8 + 0x40]
	0x032AF854 BL 0x1C16E00
	0x032AF858 CBZ X0, 0x32AF8C0
	0x032AF85C LDR W8, [X19 + 0x18]
	0x032AF860 CMP W8, 0xF
	0x032AF864 B.LS 0x32AF8BC
	0x032AF868 STR X20, [X19 + 0x98]
	0x032AF86C LDR X9, [X21]
	0x032AF870 LDR X9, [X9 + 0xB8]
	0x032AF874 LDR X20, [X9 + 0xB8]
	0x032AF878 CBZ X20, 0x32AF894
	0x032AF87C LDR X8, [X19]
	0x032AF880 MOV X0, X20
	0x032AF884 LDR X1, [X8 + 0x40]
	0x032AF888 BL 0x1C16E00
	0x032AF88C CBZ X0, 0x32AF8C0
	0x032AF890 LDR W8, [X19 + 0x18]
	0x032AF894 CMP W8, 0x10
	0x032AF898 B.LS 0x32AF8BC
	0x032AF89C STR X20, [X19 + 0xA0]
	0x032AF8A0 BL 0x1C16D44
	0x032AF8A4 LDR X8, [X21]
	0x032AF8A8 LDR X8, [X8 + 0xB8]
	0x032AF8AC STR X19, [X8 + 0x8]
	0x032AF8B0 LDP X20, X19, [X31 + 0x10]
	0x032AF8B4 LDP X30, X21, [X31], #0x20

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X19, 0x112E000
	015 Move W8, [X19+2060]
	016 Move X26, X2
	017 Move X21, X1
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {34}
	023 Move X0, 0xE77000
	024 Move X0, [X0+24]
	025 Call 0x1C17CF4
	026 Move X0, 0xE4D000
	027 Move X0, [X0+3168]
	028 Call 0x1C17CF4
	029 Move X0, 0xE45000
	030 Move X0, [X0+1728]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X19+2060], W8
	034 Move W8, [X20+44]
	035 Compare W8, 0
	036 JumpIfNotEqual {343}
	037 Move X22, [X20+48]
	038 Compare X22, 0
	039 JumpIfEqual {239}
	040 Move X19, 0xE4D000
	041 Move X8, [X22+56]
	042 Move X19, [X19+3168]
	043 Compare X8, 0
	044 JumpIfNotEqual {82}
	045 Move W1, [X20+40]
	046 Move X0, [X19]
	047 Call 0x1C17D6C
	048 Move [X22+56], X0
	049 Move W8, [X20+40]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move W23, 4
	052 Move X8, [X20+48]
	053 Compare X8, 0
	054 JumpIfEqual {238}
	055 Move X9, [X8+40]
	056 Compare X9, 0
	057 JumpIfEqual {238}
	058 Move W10, [X9+24]
	059 Subtract X24, X23, 4
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X1, [X9]
	062 Move X25, [X8+56]
	063 Call ReadObjectInfo.GetMemberType, X0, X1
	064 Compare X25, 0
	065 JumpIfEqual {238}
	066 Move X22, X0
	067 Compare X0, 0
	068 JumpIfEqual {75}
	069 Move X8, [X25]
	070 Move X0, X22
	071 Move X1, [X8+64]
	072 Call 0x1C17E00
	073 Compare X0, 0
	074 JumpIfEqual {256}
	075 Move W8, [X25+24]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move [X25], X22
	078 NotImplemented "Instruction LDRSW not yet implemented."
	079 Subtract X9, X23, 3
	080 Add X23, X23, 1
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Compare X21, 0
	083 JumpIfEqual {238}
	084 Move X8, [X20+48]
	085 Compare X8, 0
	086 JumpIfEqual {238}
	087 Move X8, [X8+40]
	088 Move [X31+8], X26
	089 Compare X8, 0
	090 JumpIfEqual {238}
	091 Move W23, [X8+24]
	092 Move X0, [X19]
	093 Move W27, [X21+24]
	094 Move W1, W23
	095 Call 0x1C17D6C
	096 Move X8, [X20+48]
	097 Compare X8, 0
	098 JumpIfEqual {238}
	099 Move X28, 0xE77000
	100 Move X29, 0xE45000
	101 Move X28, [X28+24]
	102 Move X29, [X29+1728]
	103 Move X24, X0
	104 Move X22, X31
	105 Add X19, X21, 32
	106 Move X9, [X8+40]
	107 Compare X9, 0
	108 JumpIfEqual {238}
	109 Move W10, [X9+24]
	110 NotImplemented "Instruction CMP not yet implemented."
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move W8, [X21+24]
	113 NotImplemented "Instruction CMP not yet implemented."
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Add X8, X9, X22
	116 Move X0, [X8+32]
	117 Compare X0, 0
	118 JumpIfEqual {238}
	119 Move X8, [X0]
	120 Add X9, X21, X22
	121 Move X25, [X9+32]
	122 Move X9, [X8+424]
	123 Move X1, [X8+432]
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Compare X25, 0
	126 JumpIfEqual {238}
	127 Move X1, X0
	128 Move X0, X25
	129 Move X2, X31
	130 Call String.Equals, X0, X1
	131 Move X8, [X20+48]
	132 Move TEMP, X0
	133 And TEMP, TEMP, 1
	134 Compare TEMP, 1
	135 JumpIfEqual {211}
	136 Move W10, [X21+24]
	137 NotImplemented "Instruction CMP not yet implemented."
	138 NotImplemented "Instruction CSET not yet implemented."
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move X25, X31
	141 Move TEMP, X9
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfEqual {238}
	145 Move X8, [X8+40]
	146 Compare X8, 0
	147 JumpIfEqual {238}
	148 Move W9, [X8+24]
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Add X8, X8, X22
	151 Move X0, [X8+32]
	152 Compare X0, 0
	153 JumpIfEqual {238}
	154 Move X8, [X0]
	155 Move X9, [X8+424]
	156 Move X1, [X8+432]
	157 NotImplemented "Instruction BLR not yet implemented."
	158 Move W8, [X21+24]
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Compare X0, 0
	161 JumpIfEqual {238}
	162 Move X1, [X19]
	163 Move X2, X31
	164 Call String.Equals, X0, X1
	165 Move TEMP, X0
	166 And TEMP, TEMP, 1
	167 Compare TEMP, 1
	168 JumpIfEqual {210}
	169 Move X8, [X20+48]
	170 NotImplemented "Instruction LDRSW not yet implemented."
	171 Add X25, X25, 1
	172 NotImplemented "Instruction CMP not yet implemented."
	173 NotImplemented "Instruction CSET not yet implemented."
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Compare W9, 0
	176 JumpIfNotEqual {238}
	177 Move X8, [X8+40]
	178 Compare X8, 0
	179 JumpIfEqual {238}
	180 Move W9, [X8+24]
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Move X0, [X29]
	183 Add X8, X8, X22
	184 Move X25, [X8+32]
	185 Move X26, [X28]
	186 Move W8, [X0+224]
	187 Compare W8, 0
	188 JumpIfNotEqual {190}
	189 Call 0x1C17DFC
	190 Move X0, X26
	191 Move X1, X31
	192 Call Type.GetTypeFromHandle, X0
	193 Compare X25, 0
	194 JumpIfEqual {238}
	195 Move X8, [X25]
	196 Move X1, X0
	197 Move X0, X25
	198 Move W2, W31
	199 Move X9, [X8+520]
	200 Move X3, [X8+528]
	201 NotImplemented "Instruction BLR not yet implemented."
	202 Compare X0, 0
	203 JumpIfEqual {207}
	204 Move X8, [X0+24]
	205 Compare X8, 0
	206 JumpIfNotEqual {234}
	207 Move W8, [X20+47]
	208 Compare W8, 0
	209 JumpIfNotEqual {234}
	210 Move X8, [X20+48]
	211 Compare X8, 0
	212 JumpIfEqual {238}
	213 Move X8, [X8+56]
	214 Compare X8, 0
	215 JumpIfEqual {238}
	216 Move W9, [X8+24]
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Compare X24, 0
	219 JumpIfEqual {238}
	220 Add X8, X8, X22
	221 Move X25, [X8+32]
	222 Compare X25, 0
	223 JumpIfEqual {230}
	224 Move X8, [X24]
	225 Move X0, X25
	226 Move X1, [X8+64]
	227 Call 0x1C17E00
	228 Compare X0, 0
	229 JumpIfEqual {256}
	230 Move W8, [X24+24]
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Add X8, X24, X22
	233 Move [X8+32], X25
	234 Move X8, [X20+48]
	235 Add X22, X22, 1
	236 Compare X8, 0
	237 JumpIfNotEqual {106}
	238 Call 0x1C17F20
	239 Move X24, X31
	240 Move X0, X24
	241 Move X20, [X31+96]
	242 Move X19, [X31+104]
	243 Move X22, [X31+80]
	244 Move X21, [X31+88]
	245 Move X24, [X31+64]
	246 Move X23, [X31+72]
	247 Move X26, [X31+48]
	248 Move X25, [X31+56]
	249 Move X28, [X31+32]
	250 Move X27, [X31+40]
	251 Move X29, [X31+16]
	252 Move X30, [X31+24]
	253 Add X31, X31, 112
	254 Return X0
	255 Call 0x1C17F28
	256 Call 0x1C17F44
	257 Move X1, X31
	258 Call 0x1C17DEC
	259 Move X0, 0xE45000
	260 Move X0, [X0+2512]
	261 Call 0x1C17D08
	262 Move W1, 3
	263 Call 0x1C17D6C
	264 Move X21, [X20+48]
	265 Move X20, X0
	266 Move X0, X21
	267 Call 0x19913C0
	268 Move X21, [X21+48]
	269 Move X0, X21
	270 Call 0x19913C0
	271 Move X0, X21
	272 Move X1, X22
	273 Call 0x1BB6160
	274 Move X21, X0
	275 Move X0, X20
	276 Call 0x19913C0
	277 Move X0, X20
	278 Move X1, X21
	279 Call 0x19990B4
	280 Move X0, X20
	281 Move X1, X31
	282 Move X2, X21
	283 Call 0x1994444
	284 Move X0, X20
	285 Call 0x19913C0
	286 Move X19, [X31+8]
	287 Move X0, X20
	288 Move X1, X19
	289 Call 0x19990B4
	290 Move W1, 1
	291 Move X0, X20
	292 Move X2, X19
	293 Call 0x1994444
	294 Move X0, 0xE77000
	295 Move X0, [X0+24]
	296 Call 0x1C17D08
	297 Move X19, X0
	298 Move X0, 0xE45000
	299 Move X0, [X0+1728]
	300 Call 0x1C17D08
	301 Call 0x19913D0
	302 Move X0, X19
	303 Move X1, X31
	304 Call Type.GetTypeFromHandle, X0
	305 Move X19, X0
	306 Call 0x19913C0
	307 Move X8, [X19]
	308 Move X0, X19
	309 Move X9, [X8+744]
	310 Move X1, [X8+752]
	311 NotImplemented "Instruction BLR not yet implemented."
	312 Move X19, X0
	313 Move X0, X20
	314 Call 0x19913C0
	315 Move X0, X20
	316 Move X1, X19
	317 Call 0x19990B4
	318 Move W1, 2
	319 Move X0, X20
	320 Move X2, X19
	321 Call 0x1994444
	322 Move X0, 0xE77000
	323 Move X0, [X0+32]
	324 Call 0x1C17D08
	325 Move X1, X20
	326 Move X2, X31
	327 Call Environment.GetResourceString, X0, X1
	328 Move X19, X0
	329 Move X0, 0xE6F000
	330 Move X0, [X0+736]
	331 Call 0x1C17D08
	332 Call 0x1C17F10
	333 Move X1, X19
	334 Move X2, X31
	335 Move X20, X0
	336 Call SerializationException..ctor, X0, X1
	337 Move X0, 0xE77000
	338 Move X0, [X0+40]
	339 Call 0x1C17D08
	340 Move X1, X0
	341 Move X0, X20
	342 Call 0x1C17DEC
	343 Move X0, 0xE45000
	344 Move X0, [X0+2512]
	345 Call 0x1C17D08
	346 Move W1, 1
	347 Call 0x1C17D6C
	348 Move X20, X0
	349 Call 0x19913C0
	350 Move X0, X20
	351 Move X1, X26
	352 Call 0x19990B4
	353 Move X0, X20
	354 Move X1, X31
	355 Move X2, X26
	356 Call 0x1994444
	357 Move X0, 0xE77000
	358 Move X0, [X0+48]

Method: System.Type GetMemberType(System.Reflection.MemberInfo objMember)

Disassembly:
	0x032B5ED8 LDR X8, [X19]
	0x032B5EDC MOV X0, X19
	0x032B5EE0 LDP X9, X1, [X8 + 0x1B8]
	0x032B5EE4 BLR X9
	0x032B5EE8 MOV X3, X0
	0x032B5EEC MOV X0, X20
	0x032B5EF0 MOV X1, X21
	0x032B5EF4 MOV X2, X22
	0x032B5EF8 MOV X4, X31
	0x032B5EFC BL 0x3227D58
	0x032B5F00 MOV X19, X0
	0x032B5F04 ADRP X0, 0xE68000
	0x032B5F08 LDR X0, [X0 + 0x2E0]
	0x032B5F0C BL 0x1C16D08
	0x032B5F10 BL 0x1C16F10
	0x032B5F14 MOV X1, X19
	0x032B5F18 MOV X2, X31
	0x032B5F1C MOV X20, X0
	0x032B5F20 BL 0x329F100
	0x032B5F24 ADRP X0, 0xE70000
	0x032B5F28 LDR X0, [X0 + 0x3E8]
	0x032B5F2C BL 0x1C16D08
	0x032B5F30 MOV X1, X0
	0x032B5F34 MOV X0, X20
	0x032B5F38 BL 0x1C16DEC
	0x032B5F3C STP X30, X23, [X31 - 0x30]!
	0x032B5F40 STP X22, X21, [X31 + 0x10]
	0x032B5F44 STP X20, X19, [X31 + 0x20]
	0x032B5F48 ADRP X22, 0x1127000
	0x032B5F4C ADRP X21, 0xE70000
	0x032B5F50 ADRP X20, 0xE70000
	0x032B5F54 ADRP X23, 0xE70000
	0x032B5F58 LDRB W8, [X22 + 0x815]
	0x032B5F5C LDR X21, [X21 + 0x1F8]
	0x032B5F60 LDR X20, [X20 + 0x3F0]
	0x032B5F64 LDR X23, [X23 + 0x210]
	0x032B5F68 MOV X19, X0
	0x032B5F6C TBNZ X8, 0x0, 0x32B5FA8
	0x032B5F70 ADRP X0, 0xE70000
	0x032B5F74 LDR X0, [X0 + 0x268]
	0x032B5F78 BL 0x1C16CF4
	0x032B5F7C ADRP X0, 0xE70000
	0x032B5F80 LDR X0, [X0 + 0x210]
	0x032B5F84 BL 0x1C16CF4
	0x032B5F88 ADRP X0, 0xE70000
	0x032B5F8C LDR X0, [X0 + 0x1F8]
	0x032B5F90 BL 0x1C16CF4
	0x032B5F94 ADRP X0, 0xE70000
	0x032B5F98 LDR X0, [X0 + 0x3F0]
	0x032B5F9C BL 0x1C16CF4
	0x032B5FA0 MOVZ W8, 0x1
	0x032B5FA4 STRB W8, [X22 + 0x815]
	0x032B5FA8 MOVZ W8, 0x1
	0x032B5FAC STRB W8, [X19 + 0xA0]
	0x032B5FB0 LDR X0, [X21]
	0x032B5FB4 BL 0x1C16F10
	0x032B5FB8 LDR X1, [X20]
	0x032B5FBC MOV X2, X31
	0x032B5FC0 MOV X20, X0
	0x032B5FC4 BL 0x32BD738
	0x032B5FC8 STR X20, [X19 + 0x88]
	0x032B5FCC LDR X0, [X23]
	0x032B5FD0 LDP X20, X21, [X19 + 0x18]
	0x032B5FD4 LDR X22, [X19 + 0x28]
	0x032B5FD8 BL 0x1C16F10
	0x032B5FDC MOV X1, X20
	0x032B5FE0 MOV X2, X21
	0x032B5FE4 MOV X3, X22
	0x032B5FE8 MOV W4, W31
	0x032B5FEC MOV W5, W31
	0x032B5FF0 MOV X6, X31
	0x032B5FF4 MOV X23, X0
	0x032B5FF8 BL 0x32A35C4
	0x032B5FFC LDR X8, [X19 + 0x80]
	0x032B6000 STR X23, [X19 + 0x30]
	0x032B6004 CBNZ X8, 0x32B6028
	0x032B6008 ADRP X8, 0xE6F000
	0x032B600C LDR X8, [X8 + 0x268]
	0x032B6010 LDR X0, [X8]
	0x032B6014 BL 0x1C16F10
	0x032B6018 MOV X1, X31
	0x032B601C MOV X20, X0
	0x032B6020 BL 0x329F8B8
	0x032B6024 STR X20, [X19 + 0x80]
	0x032B6028 LDP X20, X19, [X31 + 0x20]
	0x032B602C LDP X22, X21, [X31 + 0x10]
	0x032B6030 LDP X30, X23, [X31], #0x30
	0x032B6034 RET
	0x032B6038 STR X30, [X31 - 0x10]!
	0x032B603C LDR X8, [X0 + 0x98]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1128000
	005 Move W8, [X20+2061]
	006 Move X19, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xE68000
	012 Move X0, [X0+936]
	013 Call 0x1C17CF4
	014 Move X0, 0xE68000
	015 Move X0, [X0+1008]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2061], W8
	019 Compare X19, 0
	020 JumpIfEqual {50}
	021 Move X9, 0xE68000
	022 Move X9, [X9+936]
	023 Move X8, [X19]
	024 Move X10, [X9]
	025 Move W9, [X8+304]
	026 Move W11, [X10+304]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X12, [X8+200]
	029 Add X11, X12, X11
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X10, 0xE68000
	033 Move X10, [X10+1008]
	034 Move X10, [X10]
	035 Move W11, [X10+304]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X9, [X8+200]
	038 Add X9, X9, X11
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X2, [X8+584]
	042 Move X1, [X8+592]
	043 Move X0, X19
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 CallNoReturn X2
	048 Move X2, [X8+600]
	049 Move X1, [X8+608]
	050 Move X0, 0xE3F000
	051 Move X0, [X0+2512]
	052 Call 0x1C17D08
	053 Move W1, 1
	054 Call 0x1C17D6C
	055 Move X20, X0
	056 Move X0, X19
	057 Call 0x19913C0
	058 Move X0, X19
	059 Move X1, X31
	060 Call "il2cpp_vm_object_is_inst", X0
	061 Move X19, X0
	062 Move X0, X20
	063 Call 0x19913C0
	064 Move X0, X20
	065 Move X1, X19
	066 Call 0x19990B4
	067 Move X0, X20
	068 Move X1, X31
	069 Move X2, X19
	070 Call 0x1994444
	071 Move X0, 0xE71000
	072 Move X0, [X0+848]
	073 Call 0x1C17D08
	074 Move X1, X20
	075 Move X2, X31
	076 Call Environment.GetResourceString, X0, X1
	077 Move X19, X0
	078 Move X0, 0xE68000
	079 Move X0, [X0+736]
	080 Call 0x1C17D08
	081 Call 0x1C17F10
	082 Move X1, X19
	083 Move X2, X31
	084 Move X20, X0
	085 Call SerializationException..ctor, X0, X1
	086 Move X0, 0xE70000
	087 Move X0, [X0+896]
	088 Call 0x1C17D08
	089 Move X1, X0
	090 Move X0, X20
	091 Call 0x1C17DEC

Method: System.Runtime.Serialization.Formatters.Binary.ReadObjectInfo GetObjectInfo(System.Runtime.Serialization.Formatters.Binary.SerObjectInfoInit serObjectInfoInit)

Disassembly:
	0x032B5900 MOV X0, X20
	0x032B5904 MOV X1, X22
	0x032B5908 MOV X2, X21
	0x032B590C BL 0x32AEF00
	0x032B5910 LDR W8, [X22]
	0x032B5914 STR W8, [X19 + 0x48]
	0x032B5918 LDR X8, [X21]
	0x032B591C STR X8, [X19 + 0x50]
	0x032B5920 TBNZ X0, 0x0, 0x32B5A70
	0x032B5924 MOV X0, X19
	0x032B5928 BL 0x32BA8FC
	0x032B592C CBZ X0, 0x32B5A9C
	0x032B5930 MOV X1, X31
	0x032B5934 BL 0x32BD694
	0x032B5938 LDR W8, [X20 + 0x38]
	0x032B593C CMP W8, 0x2
	0x032B5940 B.NE 0x32B599C
	0x032B5944 MOV X0, X19
	0x032B5948 BL 0x32BA8FC
	0x032B594C CBZ X0, 0x32B5AB0
	0x032B5950 STR W24, [X0 + 0x10]
	0x032B5954 MOV X0, X19
	0x032B5958 BL 0x32BA8FC
	0x032B595C CBZ X0, 0x32B5AA4
	0x032B5960 LDR W8, [X20 + 0x34]
	0x032B5964 STR W8, [X0 + 0x1C]
	0x032B5968 MOV X0, X19
	0x032B596C BL 0x32BA8FC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x1128000
	005 Move X20, 0xE71000
	006 Move W8, [X19+2062]
	007 Move X20, [X20+880]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xE71000
	013 Move X0, [X0+880]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2062], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X1, X31
	024 Move X0, [X8+184]
	025 Call Interlocked.Increment, X0
	026 Compare X19, 0
	027 JumpIfEqual {34}
	028 Move [X19+16], W0
	029 Move X0, X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Return X0
	034 Call 0x1C17F20

