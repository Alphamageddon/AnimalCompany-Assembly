Type: System.Runtime.Serialization.Formatters.Binary.BinaryFormatter

Method: System.Void set_AssemblyFormat(System.Runtime.Serialization.Formatters.FormatterAssemblyStyle value)

Disassembly:
	0x032B1918 LDR X8, [X8 + 0x2A0]
	0x032B191C LDR X3, [X8]

ISIL:
	001 Move [X0+52], W1
	002 Return 

Method: System.Void set_SurrogateSelector(System.Runtime.Serialization.ISurrogateSelector value)

Disassembly:
	0x032B1920 ADD X2, X31, 0x10
	0x032B1924 MOV X1, X20

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.Void .ctor()

Disassembly:
	0x032B1928 BL 0x2AA6B2C
	0x032B192C TBNZ X0, 0x0, 0x32B19D0
	0x032B1930 ADRP X8, 0xE73000
	0x032B1934 LDR X8, [X8 + 0xB70]
	0x032B1938 LDR X0, [X8]
	0x032B193C LDR W8, [X0 + 0xE0]
	0x032B1940 CBNZ W8, 0x32B1948
	0x032B1944 BL 0x1C16DFC
	0x032B1948 ADD X1, X31, 0xC
	0x032B194C MOV X0, X20
	0x032B1950 MOV X2, X31
	0x032B1954 BL 0x32A25C0
	0x032B1958 MOV X21, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, 1
	004 Move W9, 3
	005 Move X1, X31
	006 Move X19, X0
	007 Move [X0+48], W8
	008 Move [X0+56], W9
	009 Call Object..ctor, X0
	010 NotImplemented "Instruction MOVI not yet implemented."
	011 Move [X19+16], X31
	012 Move [X19+24], X31
	013 Move [X19+32], D0
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Return 

Method: System.Void .ctor(System.Runtime.Serialization.ISurrogateSelector selector, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x032B195C MOV X0, X20
	0x032B1960 MOV X1, X31
	0x032B1964 BL 0x32A2728
	0x032B1968 ADRP X8, 0xE74000
	0x032B196C LDRB W25, [X31 + 0xC]
	0x032B1970 LDR X8, [X8 + 0x2A8]
	0x032B1974 MOV X22, X0
	0x032B1978 LDR X0, [X8]
	0x032B197C BL 0x1C16F10
	0x032B1980 MOV X23, X0
	0x032B1984 MOV X1, X31
	0x032B1988 BL 0x33BDD8C
	0x032B198C STP X22, X21, [X23 + 0x10]
	0x032B1990 STRB W25, [X23 + 0x20]
	0x032B1994 LDR X0, [X24]
	0x032B1998 STR X23, [X31 + 0x10]
	0x032B199C LDR W8, [X0 + 0xE0]
	0x032B19A0 CBNZ W8, 0x32B19AC
	0x032B19A4 BL 0x1C16DFC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, X1
	007 Move W8, 1
	008 Move W9, 3
	009 Move X1, X31
	010 Move X19, X3
	011 Move X20, X2
	012 Move X22, X0
	013 Move [X0+48], W8
	014 Move [X0+56], W9
	015 Call Object..ctor, X0
	016 Move [X22+16], X21
	017 Move [X22+24], X20
	018 Move [X22+32], X19
	019 Move X20, [X31+32]
	020 Move X19, [X31+40]
	021 Move X22, [X31+16]
	022 Move X21, [X31+24]
	023 Move X30, [X31+48]
	024 Return 

Method: System.Object Deserialize(System.IO.Stream serializationStream)

Disassembly:
	0x032B19A8 LDR X0, [X24]
	0x032B19AC LDR X8, [X0 + 0xB8]
	0x032B19B0 LDR X0, [X8]

ISIL:
	001 Move W3, 1
	002 Move X2, X31
	003 Call BinaryFormatter.Deserialize, X0, X1, X2, X3
	004 Return X0

Method: System.Object Deserialize(System.IO.Stream serializationStream, System.Runtime.Remoting.Messaging.HeaderHandler handler, System.Boolean fCheck)

Disassembly:
	0x032B19BC LDR X2, [X31 + 0x10]
	0x032B19C0 LDR X8, [X8 + 0x298]
	0x032B19C4 LDR X3, [X8]
	0x032B19C8 MOV X1, X20
	0x032B19CC BL 0x2AA5098
	0x032B19D0 LDR X21, [X31 + 0x10]
	0x032B19D4 MOV X20, X31
	0x032B19D8 LDRB W8, [X31 + 0x1C]
	0x032B19DC CBZ W8, 0x32B19EC
	0x032B19E0 MOV X0, X19
	0x032B19E4 MOV X1, X31
	0x032B19E8 BL 0x33E14E4
	0x032B19EC CBNZ X20, 0x32B1A0C
	0x032B19F0 MOV X0, X21
	0x032B19F4 LDP X20, X19, [X31 + 0x50]
	0x032B19F8 LDP X22, X21, [X31 + 0x40]
	0x032B19FC LDP X24, X23, [X31 + 0x30]
	0x032B1A00 LDP X30, X25, [X31 + 0x20]
	0x032B1A04 ADD X31, X31, 0x60
	0x032B1A08 RET
	0x032B1A0C MOV X0, X20
	0x032B1A10 BL 0x1C16F18
	0x032B1A14 BL 0x1C16F20
	0x032B1A18 BL 0x1C16F20
	0x032B1A1C B 0x32B1A38
	0x032B1A20 B 0x32B1A38
	0x032B1A24 B 0x32B1A38
	0x032B1A28 B 0x32B1A38
	0x032B1A2C B 0x32B1A38
	0x032B1A30 B 0x32B1A38
	0x032B1A34 B 0x32B1A38
	0x032B1A38 MOV X21, X0
	0x032B1A3C CMP W1, 0x1
	0x032B1A40 B.NE 0x32B1A5C
	0x032B1A44 MOV X0, X21
	0x032B1A48 BL 0x3EB1AD0
	0x032B1A4C LDR X20, [X0]
	0x032B1A50 BL 0x3EB1AE0
	0x032B1A54 MOV X21, X31
	0x032B1A58 B 0x32B19D8
	0x032B1A5C MOV X20, X31
	0x032B1A60 B 0x32B1A68
	0x032B1A64 MOV X21, X0
	0x032B1A68 LDRB W8, [X31 + 0x1C]
	0x032B1A6C CBZ W8, 0x32B1A7C
	0x032B1A70 MOV X0, X19
	0x032B1A74 MOV X1, X31
	0x032B1A78 BL 0x33E14E4
	0x032B1A7C CBNZ X20, 0x32B1A88
	0x032B1A80 MOV X0, X21
	0x032B1A84 BL 0x1D2C690
	0x032B1A88 MOV X0, X20
	0x032B1A8C BL 0x1C16F18
	0x032B1A90 BL 0x1990590
	0x032B1A94 STR X30, [X31 - 0x30]!
	0x032B1A98 STP X22, X21, [X31 + 0x10]
	0x032B1A9C STP X20, X19, [X31 + 0x20]
	0x032B1AA0 MOV X20, X1
	0x032B1AA4 MOV X1, X31
	0x032B1AA8 MOV X19, X2
	0x032B1AAC MOV X21, X0
	0x032B1AB0 AND W22, W3, 0x1
	0x032B1AB4 BL 0x33BDD8C
	0x032B1AB8 STP X20, X19, [X21 + 0x10]
	0x032B1ABC STRB W22, [X21 + 0x20]
	0x032B1AC0 LDP X20, X19, [X31 + 0x20]
	0x032B1AC4 LDP X22, X21, [X31 + 0x10]
	0x032B1AC8 LDR X30, [X31], #0x30
	0x032B1ACC RET
	0x032B1AD0 STR X30, [X31 - 0x30]!
	0x032B1AD4 STP X22, X21, [X31 + 0x10]
	0x032B1AD8 STP X20, X19, [X31 + 0x20]
	0x032B1ADC ADRP X21, 0x112B000
	0x032B1AE0 ADRP X22, 0xE74000
	0x032B1AE4 ADRP X19, 0xE74000
	0x032B1AE8 ADRP X20, 0xE6E000
	0x032B1AEC LDRB W8, [X21 + 0x7E7]
	0x032B1AF0 LDR X22, [X22 + 0x2B0]
	0x032B1AF4 LDR X19, [X19 + 0x2B8]
	0x032B1AF8 LDR X20, [X20 + 0xD0]
	0x032B1AFC TBNZ X8, 0x0, 0x32B1B2C
	0x032B1B00 ADRP X0, 0xE6E000
	0x032B1B04 LDR X0, [X0 + 0xD0]
	0x032B1B08 BL 0x1C16CF4
	0x032B1B0C ADRP X0, 0xE74000
	0x032B1B10 LDR X0, [X0 + 0x2B8]
	0x032B1B14 BL 0x1C16CF4
	0x032B1B18 ADRP X0, 0xE74000
	0x032B1B1C LDR X0, [X0 + 0x2B0]
	0x032B1B20 BL 0x1C16CF4
	0x032B1B24 MOVZ W8, 0x1
	0x032B1B28 STRB W8, [X21 + 0x7E7]
	0x032B1B2C LDR X0, [X22]
	0x032B1B30 BL 0x1C16F10
	0x032B1B34 LDR X1, [X19]
	0x032B1B38 MOV X19, X0
	0x032B1B3C BL 0x2AA4804
	0x032B1B40 LDR X8, [X20]
	0x032B1B44 LDP X22, X21, [X31 + 0x10]
	0x032B1B48 LDR X8, [X8 + 0xB8]
	0x032B1B4C STR X19, [X8]
	0x032B1B50 LDP X20, X19, [X31 + 0x20]
	0x032B1B54 LDR X30, [X31], #0x30
	0x032B1B58 RET
	0x032B1B5C RET
	0x032B1B60 STR X30, [X31 - 0x10]!
	0x032B1B64 LDR X0, [X0 + 0x30]
	0x032B1B68 CBZ X0, 0x32B1B7C
	0x032B1B6C LDR X8, [X0]
	0x032B1B70 LDP X2, X1, [X8 + 0x1A8]
	0x032B1B74 LDR X30, [X31], #0x10
	0x032B1B78 BR X2
	0x032B1B7C BL 0x1C16F20
	0x032B1B80 STR X30, [X31 - 0x10]!
	0x032B1B84 LDR X0, [X0 + 0x30]
	0x032B1B88 CBZ X0, 0x32B1BA0
	0x032B1B8C LDR X8, [X0]
	0x032B1B90 AND W1, W1, 0x1
	0x032B1B94 LDP X3, X2, [X8 + 0x1B8]
	0x032B1B98 LDR X30, [X31], #0x10
	0x032B1B9C BR X3
	0x032B1BA0 BL 0x1C16F20
	0x032B1BA4 STR X30, [X31 - 0x10]!
	0x032B1BA8 LDR X0, [X0 + 0x30]
	0x032B1BAC CBZ X0, 0x32B1BC0
	0x032B1BB0 LDR X8, [X0]
	0x032B1BB4 LDP X3, X2, [X8 + 0x1D8]
	0x032B1BB8 LDR X30, [X31], #0x10
	0x032B1BBC BR X3
	0x032B1BC0 BL 0x1C16F20
	0x032B1BC4 STR X30, [X31 - 0x10]!
	0x032B1BC8 LDR X0, [X0 + 0x30]
	0x032B1BCC CBZ X0, 0x32B1BE0
	0x032B1BD0 LDR X8, [X0]
	0x032B1BD4 LDP X5, X4, [X8 + 0x1E8]
	0x032B1BD8 LDR X30, [X31], #0x10
	0x032B1BDC BR X5
	0x032B1BE0 BL 0x1C16F20

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X22, 0x112C000
	012 Move W8, [X22+2020]
	013 Move X19, X2
	014 Move X20, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0xE75000
	021 Move X0, [X0+424]
	022 Call 0x1C17CF4
	023 Move X0, 0xE75000
	024 Move X0, [X0+432]
	025 Call 0x1C17CF4
	026 Move X0, 0xE75000
	027 Move X0, [X0+440]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+2020], W8
	031 Compare X20, 0
	032 JumpIfEqual {109}
	033 Move X8, [X20]
	034 Move X0, X20
	035 Move X9, [X8+440]
	036 Move X1, [X8+448]
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {49}
	042 Move X8, [X20]
	043 Move X0, X20
	044 Move X9, [X8+488]
	045 Move X1, [X8+496]
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Compare X0, 0
	048 JumpIfEqual {143}
	049 Move X8, 0xE75000
	050 Move X8, [X8+424]
	051 Move X0, [X8]
	052 Call 0x1C17F10
	053 Move X1, X31
	054 Move X22, X0
	055 Call InternalFE..ctor, X0
	056 Compare X22, 0
	057 JumpIfEqual {108}
	058 Move W8, 2
	059 Move [X22+28], W8
	060 Move V0, [X21+48]
	061 Move X9, 0xE75000
	062 Move [X22+16], D0
	063 Move W8, [X21+56]
	064 Move X9, [X9+432]
	065 Move [X22+24], W8
	066 Move X0, [X9]
	067 Move X24, [X21+16]
	068 Move X25, [X21+24]
	069 Move X26, [X21+32]
	070 Move X27, [X21+40]
	071 Call 0x1C17F10
	072 Move X1, X20
	073 Move X2, X24
	074 Move X3, X25
	075 Move X4, X26
	076 Move X5, X22
	077 Move X6, X27
	078 Move X23, X0
	079 Call ObjectReader..ctor, X0, X1, X2, X3, X4, X5
	080 Compare X23, 0
	081 JumpIfEqual {108}
	082 Move X8, [X21+64]
	083 Move X9, 0xE75000
	084 Move X9, [X9+440]
	085 Move [X23+152], X8
	086 Move X0, [X9]
	087 Call 0x1C17F10
	088 Move X1, X20
	089 Move X2, X23
	090 Move X21, X0
	091 Call __BinaryParser..ctor, X0, X1, X2
	092 Move X0, X23
	093 Move X1, X19
	094 Move X2, X21
	095 Move X20, [X31+64]
	096 Move X19, [X31+72]
	097 Move X22, [X31+48]
	098 Move X21, [X31+56]
	099 Move X24, [X31+32]
	100 Move X23, [X31+40]
	101 Move X26, [X31+16]
	102 Move X25, [X31+24]
	103 Move W3, W31
	104 Move X30, [X31+80]
	105 Move X27, [X31+88]
	106 Call ObjectReader.Deserialize, X0, X1, X2, X3
	107 Return X0
	108 Call 0x1C17F20
	109 Move X0, 0xE43000
	110 Move X0, [X0+2512]
	111 Call 0x1C17D08
	112 Move W1, 1
	113 Call 0x1C17D6C
	114 Move X19, X0
	115 Call 0x19913C0
	116 Move X0, X19
	117 Move X1, X31
	118 Call 0x19990B4
	119 Move X0, X19
	120 Move X1, X31
	121 Move X2, X31
	122 Call 0x1994444
	123 Move X0, 0xE75000
	124 Move X0, [X0+448]
	125 Call 0x1C17D08
	126 Move X1, X19
	127 Move X2, X31
	128 Call Environment.GetResourceString, X0, X1
	129 Move X19, X0
	130 Move X0, 0xE48000
	131 Move X0, [X0+1320]
	132 Call 0x1C17D08
	133 Call 0x1C17F10
	134 Move X20, X0
	135 Move X0, 0xE75000
	136 Move X0, [X0+456]
	137 Call 0x1C17D08
	138 Move X1, X0
	139 Move X0, X20
	140 Move X2, X19
	141 Move X3, X31
	142 Call ArgumentNullException..ctor, X0, X1, X2
	143 Move X0, 0xE75000
	144 Move X0, [X0+464]
	145 Call 0x1C17D08
	146 Move X1, X31
	147 Call Environment.GetResourceString, X0
	148 Move X19, X0
	149 Move X0, 0xE6D000
	150 Move X0, [X0+736]
	151 Call 0x1C17D08
	152 Call 0x1C17F10
	153 Move X1, X19
	154 Move X2, X31
	155 Move X20, X0
	156 Call SerializationException..ctor, X0, X1
	157 Move X0, 0xE75000
	158 Move X0, [X0+472]
	159 Call 0x1C17D08
	160 Move X1, X0
	161 Move X0, X20
	162 Call 0x1C17DEC

Method: System.Object Deserialize(System.IO.Stream serializationStream, System.Runtime.Remoting.Messaging.HeaderHandler handler)

Disassembly:
	0x032B19B4 CBZ X0, 0x32B1A18
	0x032B19B8 ADRP X8, 0xE74000

ISIL:
	001 Move W3, 1

Method: System.Void Serialize(System.IO.Stream serializationStream, System.Object graph)

Disassembly:
	0x032B20F4 SUB X31, X31, 0xC0
	0x032B20F8 STP X29, X30, [X31 + 0x60]
	0x032B20FC STP X28, X27, [X31 + 0x70]

ISIL:
	001 Move W4, 1
	002 Move X3, X31
	003 Call BinaryFormatter.Serialize, X0, X1, X2, X3, X4
	004 Return 

Method: System.Void Serialize(System.IO.Stream serializationStream, System.Object graph, System.Runtime.Remoting.Messaging.Header[] headers)

Disassembly:
	0x032B2100 STP X26, X25, [X31 + 0x80]
	0x032B2104 STP X24, X23, [X31 + 0x90]

ISIL:
	001 Move W4, 1

Method: System.Void Serialize(System.IO.Stream serializationStream, System.Object graph, System.Runtime.Remoting.Messaging.Header[] headers, System.Boolean fCheck)

Disassembly:
	0x032B2108 STP X22, X21, [X31 + 0xA0]
	0x032B210C STP X20, X19, [X31 + 0xB0]
	0x032B2110 ADRP X19, 0x112A000
	0x032B2114 LDRB W8, [X19 + 0x7F0]
	0x032B2118 MOV X20, X5
	0x032B211C MOV X21, X4
	0x032B2120 MOV W22, W3
	0x032B2124 MOV X28, X2
	0x032B2128 MOV X23, X1
	0x032B212C MOV X24, X0
	0x032B2130 STR X6, [X31 + 0x48]
	0x032B2134 TBNZ X8, 0x0, 0x32B21A0
	0x032B2138 ADRP X0, 0xE73000
	0x032B213C LDR X0, [X0 + 0x2D8]
	0x032B2140 BL 0x1C16CF4
	0x032B2144 ADRP X0, 0xE73000
	0x032B2148 LDR X0, [X0 + 0x2E0]
	0x032B214C BL 0x1C16CF4
	0x032B2150 ADRP X0, 0xE73000
	0x032B2154 LDR X0, [X0 + 0x2E8]
	0x032B2158 BL 0x1C16CF4
	0x032B215C ADRP X0, 0xE73000
	0x032B2160 LDR X0, [X0 + 0x10]
	0x032B2164 BL 0x1C16CF4
	0x032B2168 ADRP X0, 0xE71000
	0x032B216C LDR X0, [X0 + 0xDB8]
	0x032B2170 BL 0x1C16CF4
	0x032B2174 ADRP X0, 0xE42000
	0x032B2178 LDR X0, [X0 + 0xE58]
	0x032B217C BL 0x1C16CF4
	0x032B2180 ADRP X0, 0xE73000
	0x032B2184 LDR X0, [X0 + 0x2F0]
	0x032B2188 BL 0x1C16CF4
	0x032B218C ADRP X0, 0xE41000
	0x032B2190 LDR X0, [X0 + 0x9D0]
	0x032B2194 BL 0x1C16CF4
	0x032B2198 MOVZ W8, 0x1
	0x032B219C STRB W8, [X19 + 0x7F0]
	0x032B21A0 MOV X0, X24
	0x032B21A4 STR W31, [X31 + 0x5C]
	0x032B21A8 BL 0x32B25B4
	0x032B21AC CBZ X23, 0x32B2598
	0x032B21B0 LDR W27, [X23 + 0x18]
	0x032B21B4 TBZ X27, 0x1F, 0x32B21C0
	0x032B21B8 MOV X23, X28
	0x032B21BC CBZ X28, 0x32B2598
	0x032B21C0 MOV X0, X23
	0x032B21C4 MOV X1, X31
	0x032B21C8 BL 0x32BED5C
	0x032B21CC LDR X25, [X24 + 0x20]
	0x032B21D0 MOV X19, X0
	0x032B21D4 CBNZ X25, 0x32B21FC
	0x032B21D8 ADRP X8, 0xE71000
	0x032B21DC LDR X8, [X8 + 0xDB8]
	0x032B21E0 LDR X0, [X8]
	0x032B21E4 BL 0x1C16F10
	0x032B21E8 MOV X1, X31
	0x032B21EC MOV X25, X0
	0x032B21F0 BL 0x335A0A0
	0x032B21F4 STR X25, [X24 + 0x20]
	0x032B21F8 CBZ X25, 0x32B2598
	0x032B21FC LDR X8, [X25]
	0x032B2200 ADRP X29, 0xE73000
	0x032B2204 MOV X0, X25
	0x032B2208 MOV X1, X19
	0x032B220C LDR X9, [X8 + 0x2D8]
	0x032B2210 LDR X2, [X8 + 0x2E0]
	0x032B2214 LDR X29, [X29 + 0x2F0]
	0x032B2218 BLR X9
	0x032B221C MOV X25, X0
	0x032B2220 CBZ X0, 0x32B2290
	0x032B2224 LDR X1, [X29]
	0x032B2228 LDR X8, [X25]
	0x032B222C CMP X8, X1
	0x032B2230 B.NE 0x32B25AC
	0x032B2234 MOV X0, X25
	0x032B2238 MOV W1, W22
	0x032B223C MOV X2, X21
	0x032B2240 MOV X3, X20
	0x032B2244 BL 0x32B2644
	0x032B2248 TBZ X0, 0x0, 0x32B2290
	0x032B224C LDR X19, [X24 + 0x50]
	0x032B2250 CBNZ X19, 0x32B2278
	0x032B2254 ADRP X8, 0xE73000
	0x032B2258 LDR X8, [X8 + 0x2E8]
	0x032B225C LDR X0, [X8]
	0x032B2260 BL 0x1C16F10
	0x032B2264 MOV X1, X31
	0x032B2268 MOV X19, X0
	0x032B226C BL 0x33BDD8C
	0x032B2270 STR X19, [X24 + 0x50]
	0x032B2274 CBZ X19, 0x32B2598
	0x032B2278 LDR W8, [X25 + 0x10]
	0x032B227C MOV X0, X19
	0x032B2280 MOV X1, X24
	0x032B2284 STP W27, W8, [X19 + 0x10]
	0x032B2288 BL 0x32AC604
	0x032B228C B 0x32B2578
	0x032B2290 CBZ X28, 0x32B2598
	0x032B2294 LDRB W8, [X28 + 0x3B]
	0x032B2298 CBZ W8, 0x32B240C
	0x032B229C STR X25, [X31 + 0x8]
	0x032B22A0 STP X28, X21, [X31 + 0x18]
	0x032B22A4 STR X19, [X31 + 0x28]
	0x032B22A8 STR W27, [X31 + 0x14]
	0x032B22AC STR X24, [X31 + 0x40]
	0x032B22B0 ADRP X8, 0xE73000
	0x032B22B4 LDR X8, [X8 + 0x10]
	0x032B22B8 MOV W1, W22
	0x032B22BC LDR X0, [X8]
	0x032B22C0 BL 0x1C16D6C
	0x032B22C4 ADRP X8, 0xE41000
	0x032B22C8 LDR X8, [X8 + 0x9D0]
	0x032B22CC MOV X27, X0
	0x032B22D0 MOV W1, W22
	0x032B22D4 LDR X8, [X8]
	0x032B22D8 MOV X0, X8

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X23, 0x112B000
	014 Move W8, [X23+2021]
	015 Move X20, X3
	016 Move X21, X2
	017 Move X22, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {34}
	023 Move X0, 0xE74000
	024 Move X0, [X0+424]
	025 Call 0x1C17CF4
	026 Move X0, 0xE74000
	027 Move X0, [X0+568]
	028 Call 0x1C17CF4
	029 Move X0, 0xE74000
	030 Move X0, [X0+576]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X23+2021], W8
	034 Compare X22, 0
	035 JumpIfEqual {98}
	036 Move X8, 0xE74000
	037 Move X8, [X8+424]
	038 Move X0, [X8]
	039 Call 0x1C17F10
	040 Move X1, X31
	041 Move X24, X0
	042 Call InternalFE..ctor, X0
	043 Compare X24, 0
	044 JumpIfEqual {97}
	045 Move W8, 2
	046 Move [X24+28], W8
	047 Move V0, [X19+48]
	048 Move X8, 0xE74000
	049 Move X8, [X8+568]
	050 Move X29, 0xE74000
	051 Move [X24+16], D0
	052 Move X25, [X19+16]
	053 Move X26, [X19+24]
	054 Move X0, [X8]
	055 Move X27, [X19+32]
	056 Move X28, [X19+40]
	057 Move X29, [X29+576]
	058 Call 0x1C17F10
	059 Move X1, X25
	060 Move X2, X26
	061 Move X3, X27
	062 Move X4, X24
	063 Move X5, X28
	064 Move X23, X0
	065 Call ObjectWriter..ctor, X0, X1, X2, X3, X4
	066 Move X0, [X29]
	067 Move W25, [X19+48]
	068 Call 0x1C17F10
	069 Move X1, X22
	070 Move X2, X23
	071 Move W3, W25
	072 Move X24, X0
	073 Call __BinaryWriter..ctor, X0, X1, X2, X3
	074 Compare X23, 0
	075 JumpIfEqual {97}
	076 Move X0, X23
	077 Move X1, X21
	078 Move X2, X20
	079 Move X3, X24
	080 Move W4, W31
	081 Call ObjectWriter.Serialize, X0, X1, X2, X3, X4
	082 Move X8, [X23+136]
	083 Move X22, [X31+64]
	084 Move X21, [X31+72]
	085 Move X24, [X31+48]
	086 Move X23, [X31+56]
	087 Move X26, [X31+32]
	088 Move X25, [X31+40]
	089 Move [X19+64], X8
	090 Move X20, [X31+80]
	091 Move X19, [X31+88]
	092 Move X28, [X31+16]
	093 Move X27, [X31+24]
	094 Move X29, [X31+96]
	095 Move X30, [X31+104]
	096 Return 
	097 Call 0x1C17F20
	098 Move X0, 0xE42000
	099 Move X0, [X0+2512]
	100 Call 0x1C17D08
	101 Move W1, 1
	102 Call 0x1C17D6C
	103 Move X19, X0
	104 Call 0x19913C0
	105 Move X0, X19
	106 Move X1, X31
	107 Call 0x19990B4
	108 Move X0, X19
	109 Move X1, X31
	110 Move X2, X31
	111 Call 0x1994444
	112 Move X0, 0xE74000
	113 Move X0, [X0+448]
	114 Call 0x1C17D08
	115 Move X1, X19
	116 Move X2, X31
	117 Call Environment.GetResourceString, X0, X1
	118 Move X19, X0
	119 Move X0, 0xE47000
	120 Move X0, [X0+1320]
	121 Call 0x1C17D08
	122 Call 0x1C17F10
	123 Move X20, X0
	124 Move X0, 0xE74000
	125 Move X0, [X0+456]
	126 Call 0x1C17D08
	127 Move X1, X0
	128 Move X0, X20
	129 Move X2, X19
	130 Move X3, X31
	131 Call ArgumentNullException..ctor, X0, X1, X2
	132 Move X0, 0xE74000
	133 Move X0, [X0+584]
	134 Call 0x1C17D08
	135 Move X1, X0
	136 Move X0, X20
	137 Call 0x1C17DEC

Method: System.Runtime.Serialization.Formatters.Binary.TypeInformation GetTypeInformation(System.Type type)

Disassembly:
	0x032B2848 B 0x32ACA4C
	0x032B284C BL 0x1C16F20
	0x032B2850 SUB X31, X31, 0x70
	0x032B2854 STP X29, X30, [X31 + 0x10]
	0x032B2858 STP X28, X27, [X31 + 0x20]
	0x032B285C STP X26, X25, [X31 + 0x30]
	0x032B2860 STP X24, X23, [X31 + 0x40]
	0x032B2864 STP X22, X21, [X31 + 0x50]
	0x032B2868 STP X20, X19, [X31 + 0x60]
	0x032B286C ADRP X25, 0x112A000
	0x032B2870 ADRP X27, 0xE42000
	0x032B2874 LDRB W8, [X25 + 0x7F2]
	0x032B2878 LDR X27, [X27 + 0xE58]
	0x032B287C MOV X20, X7
	0x032B2880 MOV W22, W6
	0x032B2884 MOV W26, W5
	0x032B2888 MOV X21, X4
	0x032B288C MOV X24, X3
	0x032B2890 MOV X23, X2
	0x032B2894 MOV X19, X0
	0x032B2898 TBNZ X8, 0x0, 0x32B28E0
	0x032B289C ADRP X0, 0xE73000
	0x032B28A0 LDR X0, [X0 + 0x308]
	0x032B28A4 BL 0x1C16CF4
	0x032B28A8 ADRP X0, 0xE41000
	0x032B28AC LDR X0, [X0 + 0x618]
	0x032B28B0 BL 0x1C16CF4
	0x032B28B4 ADRP X0, 0xE4A000
	0x032B28B8 LDR X0, [X0 + 0x8D8]
	0x032B28BC BL 0x1C16CF4
	0x032B28C0 ADRP X0, 0xE72000
	0x032B28C4 LDR X0, [X0 + 0xF80]
	0x032B28C8 BL 0x1C16CF4
	0x032B28CC ADRP X0, 0xE42000
	0x032B28D0 LDR X0, [X0 + 0xE58]
	0x032B28D4 BL 0x1C16CF4
	0x032B28D8 MOVZ W8, 0x1
	0x032B28DC STRB W8, [X25 + 0x7F2]
	0x032B28E0 MOV X0, X19
	0x032B28E4 STR W31, [X31 + 0x4]
	0x032B28E8 BL 0x32B25B4
	0x032B28EC LDR X0, [X27]
	0x032B28F0 MOVZ W1, 0x1
	0x032B28F4 BL 0x1C16D6C
	0x032B28F8 CBZ X0, 0x32B2B28
	0x032B28FC LDR W8, [X0 + 0x18]
	0x032B2900 MOV X25, X0
	0x032B2904 CBZ W8, 0x32B2B2C
	0x032B2908 STR W26, [X25 + 0x20]
	0x032B290C STR X31, [X31 + 0x8]
	0x032B2910 CBZ W22, 0x32B2940
	0x032B2914 LDR X0, [X27]
	0x032B2918 MOVZ W1, 0x1
	0x032B291C BL 0x1C16D6C
	0x032B2920 CBZ X0, 0x32B2B28
	0x032B2924 LDR W8, [X0 + 0x18]
	0x032B2928 MOV X26, X0
	0x032B292C CBZ W8, 0x32B2B2C
	0x032B2930 MOVZ W29, 0x3
	0x032B2934 STR W22, [X26 + 0x20]
	0x032B2938 CBNZ X21, 0x32B294C
	0x032B293C B 0x32B2B28
	0x032B2940 MOV X26, X31
	0x032B2944 MOV W29, W31
	0x032B2948 CBZ X21, 0x32B2B28
	0x032B294C LDR X27, [X21 + 0x30]
	0x032B2950 MOV X0, X21
	0x032B2954 MOV X1, X31
	0x032B2958 BL 0x32BED5C
	0x032B295C LDR X3, [X19 + 0x28]
	0x032B2960 ADD X4, X31, 0x8
	0x032B2964 ADD X5, X31, 0x4
	0x032B2968 MOV X0, X27
	0x032B296C MOV X1, X24
	0x032B2970 BL 0x32AA1A8
	0x032B2974 LDR X24, [X19 + 0x70]
	0x032B2978 MOV W27, W0
	0x032B297C CBNZ X24, 0x32B29A0
	0x032B2980 ADRP X8, 0xE73000
	0x032B2984 LDR X8, [X8 + 0x308]
	0x032B2988 LDR X0, [X8]
	0x032B298C BL 0x1C16F10
	0x032B2990 MOV X1, X31
	0x032B2994 MOV X24, X0
	0x032B2998 BL 0x33BDD8C
	0x032B299C STR X24, [X19 + 0x70]
	0x032B29A0 CBZ X23, 0x32B2B28
	0x032B29A4 CBZ X24, 0x32B2B28
	0x032B29A8 ADRP X28, 0xE72000
	0x032B29AC LDR X28, [X28 + 0xF80]
	0x032B29B0 LDR W8, [X31 + 0x4]
	0x032B29B4 LDR X9, [X31 + 0x8]
	0x032B29B8 LDR X10, [X23 + 0x18]
	0x032B29BC MOVZ W11, 0x1
	0x032B29C0 MOVZ W12, 0x7
	0x032B29C4 STP X25, X26, [X24 + 0x18]
	0x032B29C8 STR W27, [X24 + 0x28]
	0x032B29CC STP W10, W11, [X24 + 0x10]
	0x032B29D0 STR X9, [X24 + 0x30]
	0x032B29D4 STR W8, [X24 + 0x38]
	0x032B29D8 STP W12, W29, [X24 + 0x3C]
	0x032B29DC CBNZ W22, 0x32B2A0C
	0x032B29E0 CMP W27, 0x2
	0x032B29E4 B.EQ 0x32B29FC
	0x032B29E8 CMP W27, 0x1
	0x032B29EC B.EQ 0x32B2A04
	0x032B29F0 CBNZ W27, 0x32B2A0C
	0x032B29F4 MOVZ W8, 0xF
	0x032B29F8 B 0x32B2A08
	0x032B29FC MOVZ W8, 0x10
	0x032B2A00 B 0x32B2A08
	0x032B2A04 MOVZ W8, 0x11
	0x032B2A08 STR W8, [X24 + 0x3C]
	0x032B2A0C MOV X0, X24
	0x032B2A10 MOV X1, X19
	0x032B2A14 BL 0x32AD8E4
	0x032B2A18 LDR X0, [X28]
	0x032B2A1C LDR W23, [X21 + 0x28]
	0x032B2A20 LDR W8, [X0 + 0xE0]
	0x032B2A24 CBNZ W8, 0x32B2A2C
	0x032B2A28 BL 0x1C16DFC
	0x032B2A2C MOV W0, W23
	0x032B2A30 BL 0x32AF118
	0x032B2A34 CBNZ W22, 0x32B2B08
	0x032B2A38 TBZ X0, 0x0, 0x32B2B08
	0x032B2A3C LDR W21, [X21 + 0x28]
	0x032B2A40 CMP W21, 0x3
	0x032B2A44 B.EQ 0x32B2A78
	0x032B2A48 CMP W21, 0x2
	0x032B2A4C B.NE 0x32B2AA8
	0x032B2A50 CBZ X20, 0x32B2AD4
	0x032B2A54 ADRP X8, 0xE41000
	0x032B2A58 LDR X8, [X8 + 0x618]
	0x032B2A5C MOV X0, X20
	0x032B2A60 LDR X21, [X8]
	0x032B2A64 MOV X1, X21
	0x032B2A68 BL 0x1C16E00
	0x032B2A6C MOV X1, X0
	0x032B2A70 CBNZ X0, 0x32B2AD8
	0x032B2A74 B 0x32B2A9C
	0x032B2A78 CBZ X20, 0x32B2AEC
	0x032B2A7C ADRP X8, 0xE4A000
	0x032B2A80 LDR X8, [X8 + 0x8D8]
	0x032B2A84 MOV X0, X20
	0x032B2A88 LDR X21, [X8]
	0x032B2A8C MOV X1, X21
	0x032B2A90 BL 0x1C16E00

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+40], X25
	004 Move [X31+48], X24
	005 Move [X31+56], X23
	006 Move [X31+64], X22
	007 Move [X31+72], X21
	008 Move [X31+80], X20
	009 Move [X31+88], X19
	010 Move X19, 0x112B000
	011 Move X24, 0xE6E000
	012 Move W8, [X19+2022]
	013 Move X24, [X24+208]
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {36}
	019 Move X0, 0xE6E000
	020 Move X0, [X0+208]
	021 Call 0x1C17CF4
	022 Move X0, 0xE74000
	023 Move X0, [X0+664]
	024 Call 0x1C17CF4
	025 Move X0, 0xE74000
	026 Move X0, [X0+672]
	027 Call 0x1C17CF4
	028 Move X0, 0xE73000
	029 Move X0, [X0+2928]
	030 Call 0x1C17CF4
	031 Move X0, 0xE74000
	032 Move X0, [X0+680]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X19+2022], W8
	036 Move X0, [X24]
	037 Move [X31+16], X31
	038 Move [X31+12], W31
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X24]
	044 Move X8, [X0+184]
	045 Move X19, [X8]
	046 Move [X31+28], W31
	047 Add X1, X31, 28
	048 Move X0, X19
	049 Move X2, X31
	050 Call Monitor.Enter, X0, X1
	051 Move X0, [X24]
	052 Move [X31+16], X31
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {58}
	056 Call 0x1C17DFC
	057 Move X0, [X24]
	058 Move X8, [X0+184]
	059 Move X0, [X8]
	060 Compare X0, 0
	061 JumpIfEqual {139}
	062 Move X8, 0xE74000
	063 Move X8, [X8+672]
	064 Move X3, [X8]
	065 Add X2, X31, 16
	066 Move X1, X20
	067 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfEqual {116}
	072 Move X8, 0xE73000
	073 Move X8, [X8+2928]
	074 Move X0, [X8]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Add X1, X31, 12
	080 Move X0, X20
	081 Move X2, X31
	082 Call FormatterServices.GetClrAssemblyName, X0, X1
	083 Move X21, X0
	084 Move X0, X20
	085 Move X1, X31
	086 Call FormatterServices.GetClrTypeFullName, X0
	087 Move X8, 0xE74000
	088 Move W25, [X31+12]
	089 Move X8, [X8+680]
	090 Move X22, X0
	091 Move X0, [X8]
	092 Call 0x1C17F10
	093 Move X23, X0
	094 Move X1, X31
	095 Call Object..ctor, X0
	096 Move [X23+16], X22
	097 Move [X23+24], X21
	098 Move [X23+32], W25
	099 Move X0, [X24]
	100 Move [X31+16], X23
	101 Move W8, [X0+224]
	102 Compare W8, 0
	103 JumpIfNotEqual {106}
	104 Call 0x1C17DFC
	105 Move X0, [X24]
	106 Move X8, [X0+184]
	107 Move X0, [X8]
	108 Compare X0, 0
	109 JumpIfEqual {140}
	110 Move X8, 0xE74000
	111 Move X2, [X31+16]
	112 Move X8, [X8+664]
	113 Move X3, [X8]
	114 Move X1, X20
	115 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	116 Move X21, [X31+16]
	117 Move X20, X31
	118 Move W8, [X31+28]
	119 Compare W8, 0
	120 JumpIfEqual {124}
	121 Move X0, X19
	122 Move X1, X31
	123 Call Monitor.Exit, X0
	124 Compare X20, 0
	125 JumpIfNotEqual {137}
	126 Move X0, X21
	127 Move X20, [X31+80]
	128 Move X19, [X31+88]
	129 Move X22, [X31+64]
	130 Move X21, [X31+72]
	131 Move X24, [X31+48]
	132 Move X23, [X31+56]
	133 Move X30, [X31+32]
	134 Move X25, [X31+40]
	135 Add X31, X31, 96
	136 Return X0
	137 Move X0, X20
	138 Call 0x1C17F18
	139 Call 0x1C17F20
	140 Call 0x1C17F20
	141 Move X21, X0
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Move X0, X21
	144 Call 0x3EB2AD0
	145 Move X20, [X0]
	146 Call 0x3EB2AE0
	147 Move X21, X31
	148 Move X20, X31
	149 Move X21, X0
	150 Move W8, [X31+28]
	151 Compare W8, 0
	152 JumpIfEqual {156}
	153 Move X0, X19
	154 Move X1, X31
	155 Call Monitor.Exit, X0
	156 Compare X20, 0
	157 JumpIfNotEqual {160}
	158 Move X0, X21
	159 Call 0x1D2D690
	160 Move X0, X20
	161 Call 0x1C17F18
	162 Call 0x1991590

Method: System.Void .cctor()

Disassembly:
	0x032B2AD0 B 0x32B2B08
	0x032B2AD4 MOV X1, X31
	0x032B2AD8 LDR X0, [X19 + 0x30]
	0x032B2ADC CBZ X0, 0x32B2B28
	0x032B2AE0 LDR X8, [X0]
	0x032B2AE4 LDP X9, X2, [X8 + 0x1D8]
	0x032B2AE8 B 0x32B2B04
	0x032B2AEC MOV X1, X31
	0x032B2AF0 LDR X0, [X19 + 0x30]
	0x032B2AF4 CBZ X0, 0x32B2B28
	0x032B2AF8 LDR X8, [X0]
	0x032B2AFC LDR X9, [X8 + 0x208]
	0x032B2B00 LDR X2, [X8 + 0x210]
	0x032B2B04 BLR X9
	0x032B2B08 LDP X20, X19, [X31 + 0x60]
	0x032B2B0C LDP X22, X21, [X31 + 0x50]
	0x032B2B10 LDP X24, X23, [X31 + 0x40]
	0x032B2B14 LDP X26, X25, [X31 + 0x30]
	0x032B2B18 LDP X28, X27, [X31 + 0x20]
	0x032B2B1C LDP X29, X30, [X31 + 0x10]
	0x032B2B20 ADD X31, X31, 0x70
	0x032B2B24 RET
	0x032B2B28 BL 0x1C16F20
	0x032B2B2C BL 0x1C16F28
	0x032B2B30 STP X30, X25, [X31 - 0x40]!
	0x032B2B34 STP X24, X23, [X31 + 0x10]
	0x032B2B38 STP X22, X21, [X31 + 0x20]
	0x032B2B3C STP X20, X19, [X31 + 0x30]
	0x032B2B40 ADRP X22, 0x112A000
	0x032B2B44 LDRB W8, [X22 + 0x7F3]
	0x032B2B48 MOV W19, W2
	0x032B2B4C MOV X20, X1
	0x032B2B50 MOV X21, X0
	0x032B2B54 TBNZ X8, 0x0, 0x32B2B78
	0x032B2B58 ADRP X0, 0xE41000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x112B000
	007 Move X22, 0xE74000
	008 Move X19, 0xE74000
	009 Move X20, 0xE6E000
	010 Move W8, [X21+2023]
	011 Move X22, [X22+688]
	012 Move X19, [X19+696]
	013 Move X20, [X20+208]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xE6E000
	019 Move X0, [X0+208]
	020 Call 0x1C17CF4
	021 Move X0, 0xE74000
	022 Move X0, [X0+696]
	023 Call 0x1C17CF4
	024 Move X0, 0xE74000
	025 Move X0, [X0+688]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+2023], W8
	029 Move X0, [X22]
	030 Call 0x1C17F10
	031 Move X1, [X19]
	032 Move X19, X0
	033 Call Dictionary`2<Object, Object>..ctor, X0
	034 Move X8, [X20]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X8, [X8+184]
	038 Move [X8], X19
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X30, [X31+48]
	042 Return 

