Type: System.Runtime.Serialization.Formatters.Binary.ObjectMapInfo

Method: System.Void .ctor(System.Int32 objectId, System.Int32 numMembers, System.String[] memberNames, System.Type[] memberTypes)

Disassembly:
	0x032B3780 MOV W2, W31
	0x032B3784 BL 0x1C5C788
	0x032B3788 B 0x32B38DC
	0x032B378C ADRP X27, 0xE70000
	0x032B3790 LDR X27, [X27 + 0xC30]
	0x032B3794 MOV X0, X22
	0x032B3798 LDR X1, [X27]
	0x032B379C BL 0x1C16E00
	0x032B37A0 CBZ X0, 0x32B3884
	0x032B37A4 LDR X0, [X19 + 0x20]
	0x032B37A8 CBZ X0, 0x32B391C
	0x032B37AC LDR X8, [X0]
	0x032B37B0 LDR X9, [X8 + 0x278]
	0x032B37B4 LDR X1, [X8 + 0x280]
	0x032B37B8 BLR X9
	0x032B37BC TBZ X0, 0x0, 0x32B3920

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move W22, W1
	008 Move X1, X31
	009 Move X19, X4
	010 Move X20, X3
	011 Move W21, W2
	012 Move X23, X0
	013 Call Object..ctor, X0
	014 Move [X23+16], W22
	015 Move [X23+20], W21
	016 Move [X23+24], X20
	017 Move [X23+32], X19
	018 Move X20, [X31+32]
	019 Move X19, [X31+40]
	020 Move X22, [X31+16]
	021 Move X21, [X31+24]
	022 Move X30, [X31+48]
	023 Move X23, [X31+56]
	024 Return 

Method: System.Boolean isCompatible(System.Int32 numMembers, System.String[] memberNames, System.Type[] memberTypes)

Disassembly:
	0x032B3644 CBZ X0, 0x32B3660
	0x032B3648 LDR X8, [X0]
	0x032B364C LDR X1, [X19 + 0x20]
	0x032B3650 ADD X2, X19, 0x80
	0x032B3654 ADD X3, X19, 0x78
	0x032B3658 LDP X9, X4, [X8 + 0x178]
	0x032B365C BLR X9
	0x032B3660 CBZ X25, 0x32B391C
	0x032B3664 LDR X0, [X25 + 0x48]
	0x032B3668 CBZ X0, 0x32B391C
	0x032B366C MOV X1, X22
	0x032B3670 MOV X2, X31
	0x032B3674 BL 0x32A040C
	0x032B3678 CBZ X24, 0x32B378C
	0x032B367C ADRP X10, 0xE71000
	0x032B3680 LDR X8, [X24]
	0x032B3684 LDR X25, [X19 + 0x20]
	0x032B3688 LDR X10, [X10 + 0x9E0]
	0x032B368C LDRH W9, [X8 + 0x12E]
	0x032B3690 LDR X1, [X10]
	0x032B3694 CBZ X9, 0x32B36B8
	0x032B3698 LDR X10, [X8 + 0xB0]
	0x032B369C ADD X10, X10, 0x8
	0x032B36A0 LDUR X11, [X10 - 0x8]
	0x032B36A4 CMP X11, X1
	0x032B36A8 B.EQ 0x32B36C8
	0x032B36AC SUBS X9, X9, 0x1
	0x032B36B0 ADD X10, X10, 0x10
	0x032B36B4 B.NE 0x32B36A0
	0x032B36B8 MOV X0, X24
	0x032B36BC MOV W2, W31
	0x032B36C0 BL 0x1C5C788
	0x032B36C4 B 0x32B36D4
	0x032B36C8 LDRSW X9, [X10]
	0x032B36CC ADD X8, X8, X9, 0x4, LSL
	0x032B36D0 ADD X0, X8, 0x138
	0x032B36D4 LDP X8, X5, [X0]
	0x032B36D8 ADD X4, X31, 0x8
	0x032B36DC MOV X0, X24
	0x032B36E0 MOV X1, X25
	0x032B36E4 MOV X2, X21
	0x032B36E8 MOV X3, X20
	0x032B36EC BLR X8
	0x032B36F0 STR X0, [X19 + 0x48]
	0x032B36F4 CBZ X0, 0x32B378C
	0x032B36F8 ADRP X8, 0xE72000
	0x032B36FC LDR X24, [X19 + 0x20]
	0x032B3700 LDR X8, [X8 + 0x50]
	0x032B3704 LDR X0, [X8]
	0x032B3708 BL 0x1C16F10
	0x032B370C MOV X1, X24
	0x032B3710 MOV X2, X23
	0x032B3714 MOV W3, W31
	0x032B3718 MOV X25, X0
	0x032B371C BL 0x32A8324
	0x032B3720 LDR X0, [X19 + 0x20]
	0x032B3724 STR X25, [X19 + 0x30]
	0x032B3728 CBZ X0, 0x32B391C
	0x032B372C MOV X1, X31
	0x032B3730 BL 0x3397374
	0x032B3734 TBNZ X0, 0x0, 0x32B38F8
	0x032B3738 LDR X23, [X19 + 0x48]
	0x032B373C CBZ X23, 0x32B391C
	0x032B3740 ADRP X10, 0xE71000
	0x032B3744 LDR X8, [X23]
	0x032B3748 LDR X24, [X19 + 0x30]
	0x032B374C LDR X10, [X10 + 0xCA0]
	0x032B3750 LDRH W9, [X8 + 0x12E]
	0x032B3754 LDR X1, [X10]
	0x032B3758 CBZ X9, 0x32B377C
	0x032B375C LDR X10, [X8 + 0xB0]
	0x032B3760 ADD X10, X10, 0x8
	0x032B3764 LDUR X11, [X10 - 0x8]
	0x032B3768 CMP X11, X1
	0x032B376C B.EQ 0x32B38D0
	0x032B3770 SUBS X9, X9, 0x1
	0x032B3774 ADD X10, X10, 0x10
	0x032B3778 B.NE 0x32B3764
	0x032B377C MOV X0, X23

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X23, 0x112A000
	011 Move W8, [X23+2044]
	012 Move X19, X3
	013 Move X20, X2
	014 Move W21, W1
	015 Move X22, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xE41000
	021 Move X0, [X0+1728]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+2044], W8
	025 Move W8, [X22+20]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X26, 0xE41000
	029 Move X26, [X26+1728]
	030 Move W25, W31
	031 Move X8, [X22+24]
	032 Compare X8, 0
	033 JumpIfEqual {93}
	034 Move W9, [X8+24]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Compare X20, 0
	037 JumpIfEqual {93}
	038 Move W9, [X20+24]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X24, W25
	041 Add X8, X8, X24
	042 Move X0, [X8+32]
	043 Compare X0, 0
	044 JumpIfEqual {93}
	045 Add X8, X20, X24
	046 Move X1, [X8+32]
	047 Move X2, X31
	048 Call String.Equals, X0, X1
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {82}
	053 Compare X19, 0
	054 JumpIfEqual {79}
	055 Move X8, [X22+32]
	056 Compare X8, 0
	057 JumpIfEqual {93}
	058 Move W9, [X8+24]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move W9, [X19+24]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X0, [X26]
	063 Add X8, X8, X24
	064 Move X23, [X8+32]
	065 Add X8, X19, X24
	066 Move W9, [X0+224]
	067 Move X24, [X8+32]
	068 Compare W9, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 Move X0, X23
	072 Move X1, X24
	073 Move X2, X31
	074 Call Type.op_Inequality, X0, X1
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfEqual {82}
	079 Add W25, W25, 1
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move W0, 1
	082 Move W0, W31
	083 Move X20, [X31+64]
	084 Move X19, [X31+72]
	085 Move X22, [X31+48]
	086 Move X21, [X31+56]
	087 Move X24, [X31+32]
	088 Move X23, [X31+40]
	089 Move X26, [X31+16]
	090 Move X25, [X31+24]
	091 Move X30, [X31+80]
	092 Return X0
	093 Call 0x1C17F20
	094 Call 0x1C17F28

