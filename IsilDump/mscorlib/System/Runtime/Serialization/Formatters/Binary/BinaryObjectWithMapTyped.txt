Type: System.Runtime.Serialization.Formatters.Binary.BinaryObjectWithMapTyped

Method: System.Void .ctor()

Disassembly:
	0x032AE35C ADD X21, X21, 0x1
	0x032AE360 CBNZ X8, 0x32AE2DC

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void .ctor(System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum binaryHeaderEnum)

Disassembly:
	0x032AE364 BL 0x1C16F20
	0x032AE368 LDP X20, X19, [X31 + 0x40]
	0x032AE36C LDP X22, X21, [X31 + 0x30]
	0x032AE370 LDP X24, X23, [X31 + 0x20]
	0x032AE374 LDP X26, X25, [X31 + 0x10]
	0x032AE378 LDR X30, [X31], #0x50
	0x032AE37C RET
	0x032AE380 BL 0x1C16F28
	0x032AE384 BL 0x1C16F44
	0x032AE388 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void Set(System.Int32 objectId, System.String name, System.Int32 numMembers, System.String[] memberNames, System.Runtime.Serialization.Formatters.Binary.BinaryTypeEnum[] binaryTypeEnumA, System.Object[] typeInformationA, System.Int32[] memberAssemIds, System.Int32 assemId)

Disassembly:
	0x032AE38C BL 0x1C16DEC
	0x032AE390 SUB X31, X31, 0x20
	0x032AE394 STR X30, [X31 + 0x10]
	0x032AE398 LDP X8, X2, [X0 + 0x18]
	0x032AE39C LDP X3, X4, [X0 + 0x28]
	0x032AE3A0 LDP X5, X6, [X0 + 0x78]
	0x032AE3A4 LDRB W7, [X0 + 0x50]
	0x032AE3A8 MOV X0, X1
	0x032AE3AC MOV X1, X8
	0x032AE3B0 BL 0x32B4878
	0x032AE3B4 LDR X30, [X31 + 0x10]

ISIL:
	001 Move W8, [X31]
	002 Move W9, 4
	003 Move [X0+24], X2
	004 Move [X0+32], W3
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move [X0+72], W8
	007 NotImplemented "Instruction CINC not yet implemented."
	008 Move [X0+40], X4
	009 Move [X0+48], X5
	010 Move [X0+56], X6
	011 Move [X0+64], X7
	012 Move [X0+16], W8
	013 Move [X0+20], W1
	014 Return 

Method: System.Void Write(System.Runtime.Serialization.Formatters.Binary.__BinaryWriter sout)

Disassembly:
	0x032AE3B8 ADD X31, X31, 0x20
	0x032AE3BC RET
	0x032AE3C0 SUB X31, X31, 0x70
	0x032AE3C4 STP X29, X30, [X31 + 0x10]
	0x032AE3C8 STP X28, X27, [X31 + 0x20]
	0x032AE3CC STP X26, X25, [X31 + 0x30]
	0x032AE3D0 STP X24, X23, [X31 + 0x40]
	0x032AE3D4 STP X22, X21, [X31 + 0x50]
	0x032AE3D8 STP X20, X19, [X31 + 0x60]
	0x032AE3DC ADRP X19, 0x112E000
	0x032AE3E0 LDRB W8, [X19 + 0x80C]
	0x032AE3E4 MOV X26, X2
	0x032AE3E8 MOV X21, X1
	0x032AE3EC MOV X20, X0
	0x032AE3F0 TBNZ X8, 0x0, 0x32AE420
	0x032AE3F4 ADRP X0, 0xE77000
	0x032AE3F8 LDR X0, [X0 + 0x18]
	0x032AE3FC BL 0x1C16CF4
	0x032AE400 ADRP X0, 0xE4D000
	0x032AE404 LDR X0, [X0 + 0xC60]
	0x032AE408 BL 0x1C16CF4
	0x032AE40C ADRP X0, 0xE45000
	0x032AE410 LDR X0, [X0 + 0x6C0]
	0x032AE414 BL 0x1C16CF4
	0x032AE418 MOVZ W8, 0x1
	0x032AE41C STRB W8, [X19 + 0x80C]
	0x032AE420 LDRB W8, [X20 + 0x2C]
	0x032AE424 CBNZ W8, 0x32AE874
	0x032AE428 LDR X22, [X20 + 0x30]
	0x032AE42C CBZ X22, 0x32AE6EC
	0x032AE430 ADRP X19, 0xE4D000
	0x032AE434 LDR X8, [X22 + 0x38]
	0x032AE438 LDR X19, [X19 + 0xC60]
	0x032AE43C CBNZ X8, 0x32AE4D0
	0x032AE440 LDR W1, [X20 + 0x28]
	0x032AE444 LDR X0, [X19]
	0x032AE448 BL 0x1C16D6C
	0x032AE44C STR X0, [X22 + 0x38]
	0x032AE450 LDR W8, [X20 + 0x28]
	0x032AE454 CMP W8, 0x1
	0x032AE458 B.LT 0x32AE4D0
	0x032AE45C MOVZ W23, 0x4
	0x032AE460 LDR X8, [X20 + 0x30]
	0x032AE464 CBZ X8, 0x32AE6E8
	0x032AE468 LDR X9, [X8 + 0x28]
	0x032AE46C CBZ X9, 0x32AE6E8
	0x032AE470 LDR W10, [X9 + 0x18]
	0x032AE474 SUB X24, X23, 0x4
	0x032AE478 CMP X24, X10
	0x032AE47C B.CS 0x32AE714
	0x032AE480 LDR X1, [X9, X23, LSL #3]
	0x032AE484 LDR X25, [X8 + 0x38]
	0x032AE488 BL 0x32B4ED8
	0x032AE48C CBZ X25, 0x32AE6E8
	0x032AE490 MOV X22, X0
	0x032AE494 CBZ X0, 0x32AE4AC
	0x032AE498 LDR X8, [X25]
	0x032AE49C MOV X0, X22
	0x032AE4A0 LDR X1, [X8 + 0x40]
	0x032AE4A4 BL 0x1C16E00
	0x032AE4A8 CBZ X0, 0x32AE718
	0x032AE4AC LDR W8, [X25 + 0x18]
	0x032AE4B0 CMP X24, X8
	0x032AE4B4 B.CS 0x32AE714
	0x032AE4B8 STR X22, [X25, X23, LSL #3]
	0x032AE4BC LDRSW X8, [X20 + 0x28]
	0x032AE4C0 SUB X9, X23, 0x3
	0x032AE4C4 ADD X23, X23, 0x1
	0x032AE4C8 CMP X9, X8
	0x032AE4CC B.LT 0x32AE460
	0x032AE4D0 CBZ X21, 0x32AE6E8
	0x032AE4D4 LDR X8, [X20 + 0x30]
	0x032AE4D8 CBZ X8, 0x32AE6E8
	0x032AE4DC LDR X8, [X8 + 0x28]
	0x032AE4E0 STR X26, [X31 + 0x8]
	0x032AE4E4 CBZ X8, 0x32AE6E8
	0x032AE4E8 LDR W23, [X8 + 0x18]
	0x032AE4EC LDR X0, [X19]
	0x032AE4F0 LDR W27, [X21 + 0x18]
	0x032AE4F4 MOV W1, W23
	0x032AE4F8 BL 0x1C16D6C
	0x032AE4FC LDR X8, [X20 + 0x30]
	0x032AE500 CBZ X8, 0x32AE6E8
	0x032AE504 ADRP X28, 0xE77000
	0x032AE508 ADRP X29, 0xE45000
	0x032AE50C LDR X28, [X28 + 0x18]
	0x032AE510 LDR X29, [X29 + 0x6C0]
	0x032AE514 MOV X24, X0
	0x032AE518 MOV X22, X31
	0x032AE51C ADD X19, X21, 0x20
	0x032AE520 LDR X9, [X8 + 0x28]
	0x032AE524 CBZ X9, 0x32AE6E8
	0x032AE528 LDR W10, [X9 + 0x18]
	0x032AE52C CMP X22, W10, SXTW
	0x032AE530 B.GE 0x32AE6F0
	0x032AE534 CMP W27, W23
	0x032AE538 B.LT 0x32AE58C
	0x032AE53C LDR W8, [X21 + 0x18]
	0x032AE540 CMP X22, X8
	0x032AE544 B.CS 0x32AE714
	0x032AE548 CMP X22, X10
	0x032AE54C B.CS 0x32AE714
	0x032AE550 ADD X8, X9, X22, 0x3, LSL
	0x032AE554 LDR X0, [X8 + 0x20]
	0x032AE558 CBZ X0, 0x32AE6E8
	0x032AE55C LDR X8, [X0]
	0x032AE560 ADD X9, X21, X22, 0x3, LSL
	0x032AE564 LDR X25, [X9 + 0x20]
	0x032AE568 LDP X9, X1, [X8 + 0x1A8]
	0x032AE56C BLR X9
	0x032AE570 CBZ X25, 0x32AE6E8
	0x032AE574 MOV X1, X0
	0x032AE578 MOV X0, X25
	0x032AE57C MOV X2, X31
	0x032AE580 BL 0x322693C
	0x032AE584 LDR X8, [X20 + 0x30]
	0x032AE588 TBNZ X0, 0x0, 0x32AE68C
	0x032AE58C LDR W10, [X21 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X1, 0
	006 JumpIfEqual {126}
	007 Move X20, X0
	008 Move X0, [X1+48]
	009 Move X19, X1
	010 Compare X0, 0
	011 JumpIfEqual {126}
	012 Move X8, [X0]
	013 Move W1, [X20+16]
	014 Move X9, [X8+456]
	015 Move X2, [X8+464]
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Move X0, [X19+48]
	018 Compare X0, 0
	019 JumpIfEqual {126}
	020 Move X8, [X0]
	021 Move W1, [X20+20]
	022 Move X9, [X8+584]
	023 Move X2, [X8+592]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move X0, [X19+48]
	026 Compare X0, 0
	027 JumpIfEqual {126}
	028 Move X8, [X0]
	029 Move X1, [X20+24]
	030 Move X9, [X8+664]
	031 Move X2, [X8+672]
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Move X0, [X19+48]
	034 Compare X0, 0
	035 JumpIfEqual {126}
	036 Move X8, [X0]
	037 Move W1, [X20+32]
	038 Move X9, [X8+584]
	039 Move X2, [X8+592]
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move W8, [X20+32]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X31
	044 Move X8, [X20+40]
	045 Compare X8, 0
	046 JumpIfEqual {126}
	047 Move W9, [X8+24]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X0, [X19+48]
	050 Compare X0, 0
	051 JumpIfEqual {126}
	052 Move X9, [X0]
	053 Add X8, X8, X21
	054 Move X1, [X8+32]
	055 Move X8, [X9+664]
	056 Move X2, [X9+672]
	057 NotImplemented "Instruction BLR not yet implemented."
	058 NotImplemented "Instruction LDRSW not yet implemented."
	059 Add X21, X21, 1
	060 NotImplemented "Instruction CMP not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X21, X31
	063 Move X8, [X20+48]
	064 Compare X8, 0
	065 JumpIfEqual {126}
	066 Move W9, [X8+24]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X0, [X19+48]
	069 Compare X0, 0
	070 JumpIfEqual {126}
	071 Move X9, [X0]
	072 Add X8, X8, X21
	073 Move W1, [X8+32]
	074 Move X8, [X9+456]
	075 Move X2, [X9+464]
	076 NotImplemented "Instruction BLR not yet implemented."
	077 NotImplemented "Instruction LDRSW not yet implemented."
	078 Add X21, X21, 1
	079 NotImplemented "Instruction CMP not yet implemented."
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X21, X31
	082 Move X8, [X20+48]
	083 Compare X8, 0
	084 JumpIfEqual {126}
	085 Move W9, [X8+24]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X9, [X20+56]
	088 Compare X9, 0
	089 JumpIfEqual {126}
	090 Move W10, [X9+24]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X10, [X20+64]
	093 Compare X10, 0
	094 JumpIfEqual {126}
	095 Move W11, [X10+24]
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Add X8, X8, X21
	098 Add X9, X9, X21
	099 Add X10, X10, X21
	100 Move W0, [X8+32]
	101 Move X1, [X9+32]
	102 Move W2, [X10+32]
	103 Move X3, X19
	104 Call BinaryConverter.WriteTypeInfo, X0, X1, X2, X3
	105 NotImplemented "Instruction LDRSW not yet implemented."
	106 Add X21, X21, 1
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move W1, [X20+72]
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X0, [X19+48]
	111 Compare X0, 0
	112 JumpIfEqual {126}
	113 Move X8, [X0]
	114 Move X20, [X31+16]
	115 Move X19, [X31+24]
	116 Move X3, [X8+584]
	117 Move X2, [X8+592]
	118 Move X30, [X31+32]
	119 Move X21, [X31+40]
	120 CallNoReturn X3
	121 Move X20, [X31+16]
	122 Move X19, [X31+24]
	123 Move X30, [X31+32]
	124 Move X21, [X31+40]
	125 Return 
	126 Call 0x1C17F20
	127 Call 0x1C17F28

Method: System.Void Read(System.Runtime.Serialization.Formatters.Binary.__BinaryParser input)

Disassembly:
	0x032AE590 CMP X8, 0x0
	0x032AE594 CSET W9, EQ
	0x032AE598 CMP W10, 0x1
	0x032AE59C B.LT 0x32AE610
	0x032AE5A0 MOV X25, X31
	0x032AE5A4 TBNZ X9, 0x0, 0x32AE6E8
	0x032AE5A8 LDR X8, [X8 + 0x28]
	0x032AE5AC CBZ X8, 0x32AE6E8
	0x032AE5B0 LDR W9, [X8 + 0x18]
	0x032AE5B4 CMP X22, X9
	0x032AE5B8 B.CS 0x32AE714
	0x032AE5BC ADD X8, X8, X22, 0x3, LSL
	0x032AE5C0 LDR X0, [X8 + 0x20]
	0x032AE5C4 CBZ X0, 0x32AE6E8
	0x032AE5C8 LDR X8, [X0]
	0x032AE5CC LDP X9, X1, [X8 + 0x1A8]
	0x032AE5D0 BLR X9
	0x032AE5D4 LDR W8, [X21 + 0x18]
	0x032AE5D8 CMP X25, X8
	0x032AE5DC B.CS 0x32AE714
	0x032AE5E0 CBZ X0, 0x32AE6E8
	0x032AE5E4 LDR X1, [X19, X25, LSL #3]
	0x032AE5E8 MOV X2, X31
	0x032AE5EC BL 0x322693C
	0x032AE5F0 TBNZ X0, 0x0, 0x32AE688
	0x032AE5F4 LDR X8, [X20 + 0x30]
	0x032AE5F8 LDRSW X10, [X21 + 0x18]
	0x032AE5FC ADD X25, X25, 0x1
	0x032AE600 CMP X8, 0x0
	0x032AE604 CSET W9, EQ
	0x032AE608 CMP X25, X10
	0x032AE60C B.LT 0x32AE5A4
	0x032AE610 CBNZ W9, 0x32AE6E8
	0x032AE614 LDR X8, [X8 + 0x28]
	0x032AE618 CBZ X8, 0x32AE6E8
	0x032AE61C LDR W9, [X8 + 0x18]
	0x032AE620 CMP X22, X9
	0x032AE624 B.CS 0x32AE714
	0x032AE628 LDR X0, [X29]
	0x032AE62C ADD X8, X8, X22, 0x3, LSL
	0x032AE630 LDR X25, [X8 + 0x20]
	0x032AE634 LDR X26, [X28]
	0x032AE638 LDR W8, [X0 + 0xE0]
	0x032AE63C CBNZ W8, 0x32AE644
	0x032AE640 BL 0x1C16DFC
	0x032AE644 MOV X0, X26
	0x032AE648 MOV X1, X31
	0x032AE64C BL 0x338C698
	0x032AE650 CBZ X25, 0x32AE6E8
	0x032AE654 LDR X8, [X25]
	0x032AE658 MOV X1, X0
	0x032AE65C MOV X0, X25
	0x032AE660 MOV W2, W31
	0x032AE664 LDR X9, [X8 + 0x208]
	0x032AE668 LDR X3, [X8 + 0x210]
	0x032AE66C BLR X9
	0x032AE670 CBZ X0, 0x32AE67C
	0x032AE674 LDR X8, [X0 + 0x18]
	0x032AE678 CBNZ X8, 0x32AE6DC
	0x032AE67C LDRB W8, [X20 + 0x2F]
	0x032AE680 CBNZ W8, 0x32AE6DC
	0x032AE684 B 0x32AE724
	0x032AE688 LDR X8, [X20 + 0x30]
	0x032AE68C CBZ X8, 0x32AE6E8
	0x032AE690 LDR X8, [X8 + 0x38]
	0x032AE694 CBZ X8, 0x32AE6E8
	0x032AE698 LDR W9, [X8 + 0x18]
	0x032AE69C CMP X22, X9
	0x032AE6A0 B.CS 0x32AE714
	0x032AE6A4 CBZ X24, 0x32AE6E8
	0x032AE6A8 ADD X8, X8, X22, 0x3, LSL
	0x032AE6AC LDR X25, [X8 + 0x20]
	0x032AE6B0 CBZ X25, 0x32AE6C8
	0x032AE6B4 LDR X8, [X24]
	0x032AE6B8 MOV X0, X25
	0x032AE6BC LDR X1, [X8 + 0x40]
	0x032AE6C0 BL 0x1C16E00
	0x032AE6C4 CBZ X0, 0x32AE718
	0x032AE6C8 LDR W8, [X24 + 0x18]
	0x032AE6CC CMP X22, X8
	0x032AE6D0 B.CS 0x32AE714
	0x032AE6D4 ADD X8, X24, X22, 0x3, LSL
	0x032AE6D8 STR X25, [X8 + 0x20]
	0x032AE6DC LDR X8, [X20 + 0x30]
	0x032AE6E0 ADD X22, X22, 0x1
	0x032AE6E4 CBNZ X8, 0x32AE520
	0x032AE6E8 BL 0x1C16F20
	0x032AE6EC MOV X24, X31
	0x032AE6F0 MOV X0, X24
	0x032AE6F4 LDP X20, X19, [X31 + 0x60]
	0x032AE6F8 LDP X22, X21, [X31 + 0x50]
	0x032AE6FC LDP X24, X23, [X31 + 0x40]
	0x032AE700 LDP X26, X25, [X31 + 0x30]
	0x032AE704 LDP X28, X27, [X31 + 0x20]
	0x032AE708 LDP X29, X30, [X31 + 0x10]
	0x032AE70C ADD X31, X31, 0x70
	0x032AE710 RET
	0x032AE714 BL 0x1C16F28
	0x032AE718 BL 0x1C16F44
	0x032AE71C MOV X1, X31
	0x032AE720 BL 0x1C16DEC
	0x032AE724 ADRP X0, 0xE45000
	0x032AE728 LDR X0, [X0 + 0x9D0]
	0x032AE72C BL 0x1C16D08
	0x032AE730 MOVZ W1, 0x3
	0x032AE734 BL 0x1C16D6C
	0x032AE738 LDR X21, [X20 + 0x30]
	0x032AE73C MOV X20, X0
	0x032AE740 MOV X0, X21
	0x032AE744 BL 0x19903C0
	0x032AE748 LDR X21, [X21 + 0x30]
	0x032AE74C MOV X0, X21
	0x032AE750 BL 0x19903C0
	0x032AE754 MOV X0, X21
	0x032AE758 MOV X1, X22
	0x032AE75C BL 0x1BB5160
	0x032AE760 MOV X21, X0
	0x032AE764 MOV X0, X20
	0x032AE768 BL 0x19903C0
	0x032AE76C MOV X0, X20
	0x032AE770 MOV X1, X21
	0x032AE774 BL 0x19980B4
	0x032AE778 MOV X0, X20
	0x032AE77C MOV X1, X31
	0x032AE780 MOV X2, X21
	0x032AE784 BL 0x1993444
	0x032AE788 MOV X0, X20
	0x032AE78C BL 0x19903C0
	0x032AE790 LDR X19, [X31 + 0x8]
	0x032AE794 MOV X0, X20
	0x032AE798 MOV X1, X19
	0x032AE79C BL 0x19980B4
	0x032AE7A0 MOVZ W1, 0x1
	0x032AE7A4 MOV X0, X20
	0x032AE7A8 MOV X2, X19
	0x032AE7AC BL 0x1993444
	0x032AE7B0 ADRP X0, 0xE77000
	0x032AE7B4 LDR X0, [X0 + 0x18]
	0x032AE7B8 BL 0x1C16D08
	0x032AE7BC MOV X19, X0
	0x032AE7C0 ADRP X0, 0xE45000
	0x032AE7C4 LDR X0, [X0 + 0x6C0]
	0x032AE7C8 BL 0x1C16D08
	0x032AE7CC BL 0x19903D0
	0x032AE7D0 MOV X0, X19
	0x032AE7D4 MOV X1, X31
	0x032AE7D8 BL 0x338C698
	0x032AE7DC MOV X19, X0
	0x032AE7E0 BL 0x19903C0
	0x032AE7E4 LDR X8, [X19]
	0x032AE7E8 MOV X0, X19
	0x032AE7EC LDR X9, [X8 + 0x2E8]
	0x032AE7F0 LDR X1, [X8 + 0x2F0]
	0x032AE7F4 BLR X9
	0x032AE7F8 MOV X19, X0
	0x032AE7FC MOV X0, X20
	0x032AE800 BL 0x19903C0
	0x032AE804 MOV X0, X20
	0x032AE808 MOV X1, X19
	0x032AE80C BL 0x19980B4
	0x032AE810 MOVZ W1, 0x2
	0x032AE814 MOV X0, X20
	0x032AE818 MOV X2, X19
	0x032AE81C BL 0x1993444
	0x032AE820 ADRP X0, 0xE77000
	0x032AE824 LDR X0, [X0 + 0x20]
	0x032AE828 BL 0x1C16D08
	0x032AE82C MOV X1, X20
	0x032AE830 MOV X2, X31
	0x032AE834 BL 0x33BFB40
	0x032AE838 MOV X19, X0
	0x032AE83C ADRP X0, 0xE6F000
	0x032AE840 LDR X0, [X0 + 0x2E0]
	0x032AE844 BL 0x1C16D08
	0x032AE848 BL 0x1C16F10
	0x032AE84C MOV X1, X19
	0x032AE850 MOV X2, X31
	0x032AE854 MOV X20, X0
	0x032AE858 BL 0x329F100

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x112F000
	009 Move W8, [X21+1996]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0xE78000
	017 Move X0, [X0+16]
	018 Call 0x1C17CF4
	019 Move X0, 0xE47000
	020 Move X0, [X0+3672]
	021 Call 0x1C17CF4
	022 Move X0, 0xE46000
	023 Move X0, [X0+2512]
	024 Call 0x1C17CF4
	025 Move X0, 0xE46000
	026 Move X0, [X0+2760]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+1996], W8
	030 Compare X20, 0
	031 JumpIfEqual {185}
	032 Move X0, [X20+104]
	033 Compare X0, 0
	034 JumpIfEqual {185}
	035 Move X8, [X0]
	036 Move X9, [X8+552]
	037 Move X1, [X8+560]
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Move [X19+20], W0
	040 Move X0, [X20+104]
	041 Compare X0, 0
	042 JumpIfEqual {185}
	043 Move X8, [X0]
	044 Move X9, [X8+664]
	045 Move X1, [X8+672]
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Move [X19+24], X0
	048 Move X0, [X20+104]
	049 Compare X0, 0
	050 JumpIfEqual {185}
	051 Move X8, [X0]
	052 Move X21, 0xE46000
	053 Move X21, [X21+2760]
	054 Move X22, 0xE78000
	055 Move X9, [X8+552]
	056 Move X1, [X8+560]
	057 Move X23, 0xE46000
	058 Move X24, 0xE47000
	059 Move X22, [X22+16]
	060 Move X23, [X23+2512]
	061 Move X24, [X24+3672]
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move [X19+32], W0
	064 Move W1, W0
	065 Move X0, [X21]
	066 Call 0x1C17D6C
	067 Move [X19+40], X0
	068 Move W1, [X19+32]
	069 Move X0, [X22]
	070 Call 0x1C17D6C
	071 Move [X19+48], X0
	072 Move W1, [X19+32]
	073 Move X0, [X23]
	074 Call 0x1C17D6C
	075 Move [X19+56], X0
	076 Move W1, [X19+32]
	077 Move X0, [X24]
	078 Call 0x1C17D6C
	079 Move W8, [X19+32]
	080 Move [X19+64], X0
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X21, X31
	083 Move X0, [X20+104]
	084 Compare X0, 0
	085 JumpIfEqual {185}
	086 Move X8, [X0]
	087 Move X22, [X19+40]
	088 Move X9, [X8+664]
	089 Move X1, [X8+672]
	090 NotImplemented "Instruction BLR not yet implemented."
	091 Compare X22, 0
	092 JumpIfEqual {185}
	093 Move W8, [X22+24]
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Add X8, X22, X21
	096 Move [X8+32], X0
	097 NotImplemented "Instruction LDRSW not yet implemented."
	098 Add X21, X21, 1
	099 NotImplemented "Instruction CMP not yet implemented."
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X21, X31
	102 Move X0, [X20+104]
	103 Compare X0, 0
	104 JumpIfEqual {185}
	105 Move X8, [X0]
	106 Move X22, [X19+48]
	107 Move X9, [X8+472]
	108 Move X1, [X8+480]
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Compare X22, 0
	111 JumpIfEqual {185}
	112 Move W8, [X22+24]
	113 NotImplemented "Instruction CMP not yet implemented."
	114 And W8, W0, 255
	115 Add X9, X22, X21
	116 Move [X9+32], W8
	117 NotImplemented "Instruction LDRSW not yet implemented."
	118 Add X21, X21, 1
	119 NotImplemented "Instruction CMP not yet implemented."
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move X22, X31
	122 Move W23, 32
	123 Move X8, [X19+48]
	124 Compare X8, 0
	125 JumpIfEqual {185}
	126 Move W9, [X8+24]
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move W0, [X8]
	129 Subtract W8, W0, 3
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Move X8, [X19+64]
	132 Compare X8, 0
	133 JumpIfEqual {185}
	134 Move W9, [X8+24]
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Add X2, X8, X23
	137 Move X1, X20
	138 Call BinaryConverter.ReadTypeInfo, X0, X1, X2
	139 Move X8, [X19+64]
	140 Compare X8, 0
	141 JumpIfEqual {185}
	142 Move W9, [X8+24]
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move X24, [X19+56]
	145 Add X2, X8, X23
	146 Move X1, X20
	147 Call BinaryConverter.ReadTypeInfo, X0, X1, X2
	148 Compare X24, 0
	149 JumpIfEqual {185}
	150 Move X21, X0
	151 Compare X0, 0
	152 JumpIfEqual {159}
	153 Move X8, [X24]
	154 Move X0, X21
	155 Move X1, [X8+64]
	156 Call 0x1C17E00
	157 Compare X0, 0
	158 JumpIfEqual {187}
	159 Move W8, [X24+24]
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Add X8, X24, X22
	162 Move [X8+32], X21
	163 NotImplemented "Instruction LDRSW not yet implemented."
	164 Add X22, X22, 1
	165 Add X23, X23, 4
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Move W8, [X19+16]
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move X0, [X20+104]
	170 Compare X0, 0
	171 JumpIfEqual {185}
	172 Move X8, [X0]
	173 Move X9, [X8+552]
	174 Move X1, [X8+560]
	175 NotImplemented "Instruction BLR not yet implemented."
	176 Move [X19+72], W0
	177 Move X20, [X31+48]
	178 Move X19, [X31+56]
	179 Move X22, [X31+32]
	180 Move X21, [X31+40]
	181 Move X24, [X31+16]
	182 Move X23, [X31+24]
	183 Move X30, [X31+64]
	184 Return 
	185 Call 0x1C17F20
	186 Call 0x1C17F28
	187 Call 0x1C17F44
	188 Move X1, X31
	189 Call 0x1C17DEC

