Type: System.Runtime.Serialization.Formatters.Binary.BinaryAssemblyInfo

Method: System.Void .ctor(System.String assemblyString)

Disassembly:
	0x032AD02C MOV X0, X20
	0x032AD030 BL 0x19903C0
	0x032AD034 MOV X0, X20
	0x032AD038 MOV X1, X19
	0x032AD03C BL 0x19980B4
	0x032AD040 MOV X0, X20
	0x032AD044 MOV X1, X31
	0x032AD048 MOV X2, X19
	0x032AD04C BL 0x1993444
	0x032AD050 ADRP X0, 0xE77000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], X19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void .ctor(System.String assemblyString, System.Reflection.Assembly assembly)

Disassembly:
	0x032AD054 LDR X0, [X0 + 0xFD0]
	0x032AD058 BL 0x1C16D08
	0x032AD05C MOV X1, X20
	0x032AD060 MOV X2, X31
	0x032AD064 BL 0x33BFB40
	0x032AD068 MOV X19, X0
	0x032AD06C ADRP X0, 0xE70000
	0x032AD070 LDR X0, [X0 + 0x2E0]
	0x032AD074 BL 0x1C16D08
	0x032AD078 BL 0x1C16F10
	0x032AD07C MOV X1, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X1
	006 Move X1, X31
	007 Move X19, X2
	008 Move X21, X0
	009 Call Object..ctor, X0
	010 Move [X21+16], X20
	011 Move [X21+24], X19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Move X21, [X31+40]
	016 Return 

Method: System.Reflection.Assembly GetAssembly()

Disassembly:
	0x032AD080 MOV X2, X31
	0x032AD084 MOV X20, X0
	0x032AD088 BL 0x329F100
	0x032AD08C ADRP X0, 0xE78000
	0x032AD090 LDR X0, [X0 + 0x8]
	0x032AD094 BL 0x1C16D08
	0x032AD098 MOV X1, X0
	0x032AD09C MOV X0, X20
	0x032AD0A0 BL 0x1C16DEC
	0x032AD0A4 BL 0x3EB1B20
	0x032AD0A8 RET
	0x032AD0AC MOV X1, X31
	0x032AD0B0 B 0x33BDD8C
	0x032AD0B4 STR X30, [X31 - 0x20]!
	0x032AD0B8 STP X20, X19, [X31 + 0x10]
	0x032AD0BC MOV W19, W1
	0x032AD0C0 MOV X1, X31
	0x032AD0C4 MOV X20, X0
	0x032AD0C8 BL 0x33BDD8C
	0x032AD0CC STR W19, [X20 + 0x10]
	0x032AD0D0 LDP X20, X19, [X31 + 0x10]
	0x032AD0D4 LDR X30, [X31], #0x20
	0x032AD0D8 RET
	0x032AD0DC CMP W5, 0x1
	0x032AD0E0 MOVZ W8, 0x2
	0x032AD0E4 CINC W8, W8, GE
	0x032AD0E8 STR X2, [X0 + 0x18]
	0x032AD0EC STR W3, [X0 + 0x20]
	0x032AD0F0 STR X4, [X0 + 0x28]
	0x032AD0F4 STR W5, [X0 + 0x30]
	0x032AD0F8 STP W8, W1, [X0 + 0x10]
	0x032AD0FC RET
	0x032AD100 STP X30, X21, [X31 - 0x20]!
	0x032AD104 STP X20, X19, [X31 + 0x10]
	0x032AD108 CBZ X1, 0x32AD20C
	0x032AD10C MOV X20, X0
	0x032AD110 LDR X0, [X1 + 0x30]
	0x032AD114 MOV X19, X1
	0x032AD118 CBZ X0, 0x32AD20C
	0x032AD11C LDR X8, [X0]
	0x032AD120 LDR W1, [X20 + 0x10]
	0x032AD124 LDP X9, X2, [X8 + 0x1C8]
	0x032AD128 BLR X9
	0x032AD12C LDR X0, [X19 + 0x30]
	0x032AD130 CBZ X0, 0x32AD20C
	0x032AD134 LDR X8, [X0]
	0x032AD138 LDR W1, [X20 + 0x14]
	0x032AD13C LDR X9, [X8 + 0x248]
	0x032AD140 LDR X2, [X8 + 0x250]
	0x032AD144 BLR X9
	0x032AD148 LDR X0, [X19 + 0x30]
	0x032AD14C CBZ X0, 0x32AD20C
	0x032AD150 LDR X8, [X0]
	0x032AD154 LDR X1, [X20 + 0x18]
	0x032AD158 LDR X9, [X8 + 0x298]
	0x032AD15C LDR X2, [X8 + 0x2A0]
	0x032AD160 BLR X9
	0x032AD164 LDR X0, [X19 + 0x30]
	0x032AD168 CBZ X0, 0x32AD20C
	0x032AD16C LDR X8, [X0]
	0x032AD170 LDR W1, [X20 + 0x20]
	0x032AD174 LDR X9, [X8 + 0x248]
	0x032AD178 LDR X2, [X8 + 0x250]
	0x032AD17C BLR X9
	0x032AD180 LDR W8, [X20 + 0x20]
	0x032AD184 CMP W8, 0x1
	0x032AD188 B.LT 0x32AD1D4
	0x032AD18C MOV X21, X31
	0x032AD190 LDR X8, [X20 + 0x28]
	0x032AD194 CBZ X8, 0x32AD20C
	0x032AD198 LDR W9, [X8 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1130000
	005 Move W8, [X20+1991]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE78000
	012 Move X0, [X0+2928]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1991], W8
	016 Move X0, [X19+24]
	017 Move X1, X31
	018 Move X2, X31
	019 Call Assembly.op_Equality, X0, X1
	020 Move TEMP, X0
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfNotEqual {43}
	024 Move X8, 0xE78000
	025 Move X8, [X8+2928]
	026 Move X20, [X19+16]
	027 Move X0, [X8]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X20
	033 Move X1, X31
	034 Call FormatterServices.LoadAssemblyFromStringNoThrow, X0
	035 Move X1, X31
	036 Move X2, X31
	037 Move [X19+24], X0
	038 Call Assembly.op_Equality, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {48}
	043 Move X0, [X19+24]
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Return X0
	048 Move X0, 0xE47000
	049 Move X0, [X0+2512]
	050 Call 0x1C17D08
	051 Move W1, 1
	052 Call 0x1C17D6C
	053 Move X19, [X19+16]
	054 Move X20, X0
	055 Call 0x19913C0
	056 Move X0, X20
	057 Move X1, X19
	058 Call 0x19990B4
	059 Move X0, X20
	060 Move X1, X31
	061 Move X2, X19
	062 Call 0x1994444
	063 Move X0, 0xE78000
	064 Move X0, [X0+4064]
	065 Call 0x1C17D08
	066 Move X1, X20
	067 Move X2, X31
	068 Call Environment.GetResourceString, X0, X1
	069 Move X19, X0
	070 Move X0, 0xE71000
	071 Move X0, [X0+736]
	072 Call 0x1C17D08
	073 Call 0x1C17F10
	074 Move X1, X19
	075 Move X2, X31
	076 Move X20, X0
	077 Call SerializationException..ctor, X0, X1
	078 Move X0, 0xE78000
	079 Move X0, [X0+4072]
	080 Call 0x1C17D08
	081 Move X1, X0
	082 Move X0, X20
	083 Call 0x1C17DEC

