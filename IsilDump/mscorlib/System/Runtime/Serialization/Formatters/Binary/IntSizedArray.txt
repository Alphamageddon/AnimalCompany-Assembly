Type: System.Runtime.Serialization.Formatters.Binary.IntSizedArray

Method: System.Void .ctor()

Disassembly:
	0x032BEF40 STR X0, [X20 + 0x30]
	0x032BEF44 B 0x32BF05C
	0x032BEF48 CBZ X19, 0x32BF0A0
	0x032BEF4C ADRP X22, 0xE36000
	0x032BEF50 LDR X22, [X22 + 0xE58]
	0x032BEF54 MOV X0, X19
	0x032BEF58 LDR X21, [X22]
	0x032BEF5C MOV X1, X21
	0x032BEF60 BL 0x1C16E00
	0x032BEF64 CBZ X0, 0x32BF0D8
	0x032BEF68 STR X0, [X20 + 0x38]
	0x032BEF6C B 0x32BF05C
	0x032BEF70 CBZ X19, 0x32BF0A8
	0x032BEF74 ADRP X22, 0xE66000
	0x032BEF78 LDR X22, [X22 + 0x838]
	0x032BEF7C MOV X0, X19
	0x032BEF80 LDR X21, [X22]
	0x032BEF84 MOV X1, X21
	0x032BEF88 BL 0x1C16E00
	0x032BEF8C CBZ X0, 0x32BF0D8
	0x032BEF90 STR X0, [X20 + 0x40]
	0x032BEF94 B 0x32BF05C
	0x032BEF98 CBZ X19, 0x32BF0B0
	0x032BEF9C ADRP X22, 0xE64000
	0x032BEFA0 LDR X22, [X22 + 0x708]
	0x032BEFA4 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x111F000
	006 Move X20, 0xE37000
	007 Move W8, [X21+2132]
	008 Move X20, [X20+3672]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE37000
	015 Move X0, [X0+3672]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2132], W8
	019 Move X0, [X20]
	020 Move W1, 16
	021 Call 0x1C17D6C
	022 Move [X19+16], X0
	023 Move X0, [X20]
	024 Move W1, 4
	025 Call 0x1C17D6C
	026 Move [X19+24], X0
	027 Move X0, X19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X1, X31
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Call Object..ctor, X0
	034 Return 

Method: System.Void .ctor(System.Runtime.Serialization.Formatters.Binary.IntSizedArray sizedArray)

Disassembly:
	0x032BEFA8 LDR X21, [X22]
	0x032BEFAC MOV X1, X21
	0x032BEFB0 BL 0x1C16E00
	0x032BEFB4 CBZ X0, 0x32BF0D8
	0x032BEFB8 STR X0, [X20 + 0x48]
	0x032BEFBC B 0x32BF05C
	0x032BEFC0 CBZ X19, 0x32BF0B8
	0x032BEFC4 ADRP X22, 0xE35000
	0x032BEFC8 LDR X22, [X22 + 0x638]
	0x032BEFCC MOV X0, X19
	0x032BEFD0 LDR X21, [X22]
	0x032BEFD4 MOV X1, X21
	0x032BEFD8 BL 0x1C16E00
	0x032BEFDC CBZ X0, 0x32BF0D8
	0x032BEFE0 STR X0, [X20 + 0x50]
	0x032BEFE4 B 0x32BF05C
	0x032BEFE8 CBZ X19, 0x32BF0C0
	0x032BEFEC ADRP X22, 0xE65000
	0x032BEFF0 LDR X22, [X22 + 0x8D0]
	0x032BEFF4 MOV X0, X19
	0x032BEFF8 LDR X21, [X22]
	0x032BEFFC MOV X1, X21
	0x032BF000 BL 0x1C16E00
	0x032BF004 CBZ X0, 0x32BF0D8
	0x032BF008 STR X0, [X20 + 0x58]
	0x032BF00C B 0x32BF05C
	0x032BF010 CBZ X19, 0x32BF0C8
	0x032BF014 ADRP X22, 0xE5D000
	0x032BF018 LDR X22, [X22 + 0xD08]
	0x032BF01C MOV X0, X19
	0x032BF020 LDR X21, [X22]
	0x032BF024 MOV X1, X21
	0x032BF028 BL 0x1C16E00
	0x032BF02C CBZ X0, 0x32BF0D8
	0x032BF030 STR X0, [X20 + 0x60]
	0x032BF034 B 0x32BF05C
	0x032BF038 CBZ X19, 0x32BF0D0
	0x032BF03C ADRP X22, 0xE3C000
	0x032BF040 LDR X22, [X22 + 0x568]
	0x032BF044 MOV X0, X19
	0x032BF048 LDR X21, [X22]
	0x032BF04C MOV X1, X21
	0x032BF050 BL 0x1C16E00
	0x032BF054 CBZ X0, 0x32BF0D8
	0x032BF058 STR X0, [X20 + 0x68]
	0x032BF05C LDR X20, [X22]
	0x032BF060 MOV X0, X19
	0x032BF064 MOV X1, X20
	0x032BF068 BL 0x1C16E00
	0x032BF06C CBZ X0, 0x32BF0E4
	0x032BF070 LDP X20, X19, [X31 + 0x20]
	0x032BF074 LDP X22, X21, [X31 + 0x10]
	0x032BF078 LDR X30, [X31], #0x30
	0x032BF07C RET
	0x032BF080 STR X31, [X20 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x111F000
	007 Move X21, 0xE37000
	008 Move W8, [X22+2133]
	009 Move X21, [X21+3672]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xE37000
	017 Move X0, [X0+3672]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2133], W8
	021 Move X0, [X21]
	022 Move W1, 16
	023 Call 0x1C17D6C
	024 Move [X20+16], X0
	025 Move X0, [X21]
	026 Move W1, 4
	027 Call 0x1C17D6C
	028 Move [X20+24], X0
	029 Move X0, X20
	030 Move X1, X31
	031 Call Object..ctor, X0
	032 Compare X19, 0
	033 JumpIfEqual {68}
	034 Move X8, [X19+16]
	035 Compare X8, 0
	036 JumpIfEqual {68}
	037 Move X0, [X21]
	038 Move W1, [X8+24]
	039 Call 0x1C17D6C
	040 Move [X20+16], X0
	041 Move X1, X0
	042 Move X0, [X19+16]
	043 Compare X0, 0
	044 JumpIfEqual {68}
	045 Move W2, W31
	046 Move X3, X31
	047 Call Array.CopyTo, X0, X1, X2
	048 Move X8, [X19+24]
	049 Compare X8, 0
	050 JumpIfEqual {68}
	051 Move X0, [X21]
	052 Move W1, [X8+24]
	053 Call 0x1C17D6C
	054 Move [X20+24], X0
	055 Move X1, X0
	056 Move X0, [X19+24]
	057 Compare X0, 0
	058 JumpIfEqual {68}
	059 Move X20, [X31+32]
	060 Move X19, [X31+40]
	061 Move X22, [X31+16]
	062 Move X21, [X31+24]
	063 Move W2, W31
	064 Move X3, X31
	065 Move X30, [X31+48]
	066 Call Array.CopyTo, X0, X1, X2
	067 Return 
	068 Call 0x1C17F20

Method: System.Object Clone()

Disassembly:
	0x032BF084 B 0x32BF070
	0x032BF088 STR X31, [X20 + 0x20]
	0x032BF08C B 0x32BF070
	0x032BF090 STR X31, [X20 + 0x28]
	0x032BF094 B 0x32BF070
	0x032BF098 STR X31, [X20 + 0x30]
	0x032BF09C B 0x32BF070
	0x032BF0A0 STR X31, [X20 + 0x38]
	0x032BF0A4 B 0x32BF070
	0x032BF0A8 STR X31, [X20 + 0x40]
	0x032BF0AC B 0x32BF070
	0x032BF0B0 STR X31, [X20 + 0x48]
	0x032BF0B4 B 0x32BF070
	0x032BF0B8 STR X31, [X20 + 0x50]
	0x032BF0BC B 0x32BF070
	0x032BF0C0 STR X31, [X20 + 0x58]
	0x032BF0C4 B 0x32BF070
	0x032BF0C8 STR X31, [X20 + 0x60]
	0x032BF0CC B 0x32BF070
	0x032BF0D0 STR X31, [X20 + 0x68]
	0x032BF0D4 B 0x32BF070
	0x032BF0D8 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x111E000
	006 Move X21, 0xE67000
	007 Move W8, [X20+2134]
	008 Move X21, [X21+1152]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE67000
	015 Move X0, [X0+1152]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2134], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X19
	022 Move X20, X0
	023 Call IntSizedArray..ctor, X0, X1
	024 Move X0, X20
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return X0

Method: System.Int32 get_Item(System.Int32 index)

Disassembly:
	0x032BF0DC MOV X1, X21
	0x032BF0E0 BL 0x1C171E0
	0x032BF0E4 MOV X0, X19
	0x032BF0E8 MOV X1, X20
	0x032BF0EC BL 0x1C171E0
	0x032BF0F0 STR X30, [X31 - 0x30]!
	0x032BF0F4 STP X22, X21, [X31 + 0x10]
	0x032BF0F8 STP X20, X19, [X31 + 0x20]
	0x032BF0FC ADRP X22, 0x111D000
	0x032BF100 LDRB W8, [X22 + 0x85D]
	0x032BF104 MOV W19, W2
	0x032BF108 MOV X20, X1
	0x032BF10C MOV X21, X0
	0x032BF110 TBNZ X8, 0x0, 0x32BF14C
	0x032BF114 ADRP X0, 0xE34000
	0x032BF118 LDR X0, [X0 + 0xB58]
	0x032BF11C BL 0x1C16CF4
	0x032BF120 ADRP X0, 0xE36000
	0x032BF124 LDR X0, [X0 + 0x170]
	0x032BF128 BL 0x1C16CF4
	0x032BF12C ADRP X0, 0xE36000
	0x032BF130 LDR X0, [X0 + 0xC48]
	0x032BF134 BL 0x1C16CF4
	0x032BF138 ADRP X0, 0xE66000
	0x032BF13C LDR X0, [X0 + 0x618]
	0x032BF140 BL 0x1C16CF4
	0x032BF144 MOVZ W8, 0x1
	0x032BF148 STRB W8, [X22 + 0x85D]
	0x032BF14C LDR W8, [X21 + 0x10]
	0x032BF150 SUB W8, W8, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move TEMP, X1
	003 And TEMP, TEMP, -2147483648
	004 Compare TEMP, -2147483648
	005 JumpIfEqual {13}
	006 Move X8, [X0+16]
	007 Compare X8, 0
	008 JumpIfEqual {28}
	009 Move W9, [X8+24]
	010 Subtract W10, W9, 1
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move W0, W31
	013 Move X8, [X0+24]
	014 Compare X8, 0
	015 JumpIfEqual {28}
	016 Move W10, [X8+24]
	017 Subtract W9, W31, W1
	018 Move W0, W31
	019 Subtract W11, W10, 1
	020 NotImplemented "Instruction CMP not yet implemented."
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Add X8, X8, W9
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Add X8, X8, W1
	025 Move W0, [X8+32]
	026 Move X30, [X31+16]
	027 Return X0
	028 Call 0x1C17F20
	029 Call 0x1C17F28

Method: System.Void set_Item(System.Int32 index, System.Int32 value)

Disassembly:
	0x032BF154 CMP W8, 0xF
	0x032BF158 B.HI 0x32BF4D8
	0x032BF15C ADRP X9, 0xFFFFFFFFFD8D7000
	0x032BF160 ADD X9, X9, 0x5A0
	0x032BF164 ADR X10, 0x10
	0x032BF168 LDRB W11, [X9, X8, LSL]
	0x032BF16C ADD X10, X10, X11, 0x2, LSL
	0x032BF170 BR X10
	0x032BF174 ADRP X8, 0xE34000
	0x032BF178 LDR X8, [X8 + 0xB58]
	0x032BF17C LDR X21, [X21 + 0x18]
	0x032BF180 LDR X0, [X8]
	0x032BF184 LDR W8, [X0 + 0xE0]
	0x032BF188 CBNZ W8, 0x32BF190
	0x032BF18C BL 0x1C16DFC
	0x032BF190 MOV X0, X20
	0x032BF194 MOV X1, X31
	0x032BF198 BL 0x331790C
	0x032BF19C CBZ X21, 0x32BF4E8
	0x032BF1A0 LDR W8, [X21 + 0x18]
	0x032BF1A4 CMP W8, W19
	0x032BF1A8 B.LS 0x32BF4EC
	0x032BF1AC AND W8, W0, 0x1
	0x032BF1B0 ADD X9, X21, W19, SXTW
	0x032BF1B4 STRB W8, [X9 + 0x20]
	0x032BF1B8 B 0x32BF4D8
	0x032BF1BC CBZ X20, 0x32BF4E8
	0x032BF1C0 MOV X0, X20
	0x032BF1C4 MOV W1, W31
	0x032BF1C8 MOV X2, X31
	0x032BF1CC BL 0x3222A1C
	0x032BF1D0 AND W8, W0, 0xFFFF
	0x032BF1D4 CMP W8, 0x5F
	0x032BF1D8 B.NE 0x32BF498
	0x032BF1DC ADRP X8, 0xE66000
	0x032BF1E0 LDR X8, [X8 + 0x618]
	0x032BF1E4 MOV X0, X20
	0x032BF1E8 MOV X2, X31
	0x032BF1EC LDR X1, [X8]
	0x032BF1F0 BL 0x322693C
	0x032BF1F4 TBZ X0, 0x0, 0x32BF498
	0x032BF1F8 LDR X8, [X21 + 0x20]
	0x032BF1FC CBZ X8, 0x32BF4E8
	0x032BF200 LDR W9, [X8 + 0x18]
	0x032BF204 CMP W9, W19
	0x032BF208 B.LS 0x32BF4EC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W19, W2
	007 Move W20, W1
	008 Move X21, X0
	009 Move TEMP, X1
	010 And TEMP, TEMP, -2147483648
	011 Compare TEMP, -2147483648
	012 JumpIfEqual {28}
	013 Move X8, [X21+16]
	014 Compare X8, 0
	015 JumpIfEqual {51}
	016 Move W9, [X8+24]
	017 Subtract W9, W9, 1
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move X0, X21
	020 Move W1, W20
	021 Call IntSizedArray.IncreaseCapacity, X0, X1
	022 Move X8, [X21+16]
	023 Compare X8, 0
	024 JumpIfEqual {51}
	025 Move W9, [X8+24]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Add X8, X8, W20
	028 Move X8, [X21+24]
	029 Compare X8, 0
	030 JumpIfEqual {51}
	031 Move W9, [X8+24]
	032 Subtract W22, W31, W20
	033 Subtract W9, W9, 1
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X0, X21
	036 Move W1, W20
	037 Call IntSizedArray.IncreaseCapacity, X0, X1
	038 Move X8, [X21+24]
	039 Compare X8, 0
	040 JumpIfEqual {51}
	041 Move W9, [X8+24]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Add X8, X8, W22
	044 Move [X8+32], W19
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X30, [X31+48]
	050 Return 
	051 Call 0x1C17F20
	052 Call 0x1C17F28

Method: System.Void IncreaseCapacity(System.Int32 index)

Disassembly:
	0x032BF20C ADD X8, X8, W19, 0x1, SXTW
	0x032BF210 STRH W31, [X8 + 0x20]
	0x032BF214 B 0x32BF4D8
	0x032BF218 ADRP X8, 0xE36000
	0x032BF21C LDR X8, [X8 + 0xC48]
	0x032BF220 LDR X21, [X21 + 0x28]
	0x032BF224 LDR X0, [X8]
	0x032BF228 LDR W8, [X0 + 0xE0]
	0x032BF22C CBNZ W8, 0x32BF234
	0x032BF230 BL 0x1C16DFC
	0x032BF234 MOV X0, X31
	0x032BF238 BL 0x3338524
	0x032BF23C MOV X1, X0
	0x032BF240 MOV X0, X20
	0x032BF244 MOV X2, X31
	0x032BF248 BL 0x3366580
	0x032BF24C CBZ X21, 0x32BF4E8
	0x032BF250 LDR W8, [X21 + 0x18]
	0x032BF254 CMP W8, W19
	0x032BF258 B.LS 0x32BF4EC
	0x032BF25C ADD X8, X21, W19, 0x3, SXTW
	0x032BF260 STR D0, [X8 + 0x20]
	0x032BF264 B 0x32BF4D8
	0x032BF268 ADRP X8, 0xE36000
	0x032BF26C LDR X8, [X8 + 0xC48]
	0x032BF270 LDR X21, [X21 + 0x30]
	0x032BF274 LDR X0, [X8]
	0x032BF278 LDR W8, [X0 + 0xE0]
	0x032BF27C CBNZ W8, 0x32BF284
	0x032BF280 BL 0x1C16DFC
	0x032BF284 MOV X0, X31
	0x032BF288 BL 0x3338524
	0x032BF28C MOV X1, X0
	0x032BF290 MOV X0, X20
	0x032BF294 MOV X2, X31
	0x032BF298 BL 0x337AB28
	0x032BF29C CBNZ X21, 0x32BF4C4
	0x032BF2A0 B 0x32BF4E8
	0x032BF2A4 ADRP X8, 0xE36000
	0x032BF2A8 LDR X8, [X8 + 0xC48]
	0x032BF2AC LDR X21, [X21 + 0x38]
	0x032BF2B0 LDR X0, [X8]
	0x032BF2B4 LDR W8, [X0 + 0xE0]
	0x032BF2B8 CBNZ W8, 0x32BF2C0
	0x032BF2BC BL 0x1C16DFC
	0x032BF2C0 MOV X0, X31
	0x032BF2C4 BL 0x3338524
	0x032BF2C8 MOV X1, X0
	0x032BF2CC MOV X0, X20
	0x032BF2D0 MOV X2, X31
	0x032BF2D4 BL 0x337BBA8
	0x032BF2D8 CBNZ X21, 0x32BF430
	0x032BF2DC B 0x32BF4E8
	0x032BF2E0 ADRP X8, 0xE36000
	0x032BF2E4 LDR X8, [X8 + 0xC48]
	0x032BF2E8 LDR X21, [X21 + 0x40]
	0x032BF2EC LDR X0, [X8]
	0x032BF2F0 LDR W8, [X0 + 0xE0]
	0x032BF2F4 CBNZ W8, 0x32BF2FC
	0x032BF2F8 BL 0x1C16DFC
	0x032BF2FC MOV X0, X31
	0x032BF300 BL 0x3338524
	0x032BF304 MOV X1, X0
	0x032BF308 MOV X0, X20
	0x032BF30C MOV X2, X31
	0x032BF310 BL 0x337D210
	0x032BF314 CBNZ X21, 0x32BF480
	0x032BF318 B 0x32BF4E8
	0x032BF31C ADRP X8, 0xE36000
	0x032BF320 LDR X8, [X8 + 0xC48]
	0x032BF324 LDR X21, [X21 + 0x48]
	0x032BF328 LDR X0, [X8]
	0x032BF32C LDR W8, [X0 + 0xE0]
	0x032BF330 CBNZ W8, 0x32BF338
	0x032BF334 BL 0x1C16DFC
	0x032BF338 MOV X0, X31
	0x032BF33C BL 0x3338524
	0x032BF340 MOV X1, X0
	0x032BF344 MOV X0, X20
	0x032BF348 MOV X2, X31
	0x032BF34C BL 0x338F368
	0x032BF350 CBZ X21, 0x32BF4E8
	0x032BF354 LDR W8, [X21 + 0x18]
	0x032BF358 CMP W8, W19
	0x032BF35C B.LS 0x32BF4EC
	0x032BF360 ADD X8, X21, W19, SXTW
	0x032BF364 STRB W0, [X8 + 0x20]
	0x032BF368 B 0x32BF4D8
	0x032BF36C ADRP X8, 0xE36000
	0x032BF370 LDR X8, [X8 + 0xC48]
	0x032BF374 LDR X21, [X21 + 0x50]
	0x032BF378 LDR X0, [X8]
	0x032BF37C LDR W8, [X0 + 0xE0]
	0x032BF380 CBNZ W8, 0x32BF388
	0x032BF384 BL 0x1C16DFC
	0x032BF388 MOV X0, X31
	0x032BF38C BL 0x3338524
	0x032BF390 MOV X1, X0
	0x032BF394 MOV X0, X20
	0x032BF398 MOV X2, X31
	0x032BF39C BL 0x33901B8
	0x032BF3A0 CBZ X21, 0x32BF4E8
	0x032BF3A4 LDR W8, [X21 + 0x18]
	0x032BF3A8 CMP W8, W19
	0x032BF3AC B.LS 0x32BF4EC
	0x032BF3B0 ADD X8, X21, W19, 0x2, SXTW
	0x032BF3B4 STR S0, [X8 + 0x20]
	0x032BF3B8 B 0x32BF4D8
	0x032BF3BC ADRP X8, 0xE36000
	0x032BF3C0 LDR X8, [X8 + 0xC48]
	0x032BF3C4 LDR X21, [X21 + 0x58]
	0x032BF3C8 LDR X0, [X8]
	0x032BF3CC LDR W8, [X0 + 0xE0]
	0x032BF3D0 CBNZ W8, 0x32BF3D8
	0x032BF3D4 BL 0x1C16DFC
	0x032BF3D8 MOV X0, X31
	0x032BF3DC BL 0x3338524
	0x032BF3E0 MOV X1, X0
	0x032BF3E4 MOV X0, X20
	0x032BF3E8 MOV X2, X31
	0x032BF3EC BL 0x3399028
	0x032BF3F0 CBNZ X21, 0x32BF4C4
	0x032BF3F4 B 0x32BF4E8
	0x032BF3F8 ADRP X8, 0xE36000
	0x032BF3FC LDR X8, [X8 + 0xC48]
	0x032BF400 LDR X21, [X21 + 0x60]
	0x032BF404 LDR X0, [X8]
	0x032BF408 LDR W8, [X0 + 0xE0]
	0x032BF40C CBNZ W8, 0x32BF414
	0x032BF410 BL 0x1C16DFC
	0x032BF414 MOV X0, X31
	0x032BF418 BL 0x3338524
	0x032BF41C MOV X1, X0
	0x032BF420 MOV X0, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x111E000
	007 Move W8, [X21+2135]
	008 Move W20, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xE36000
	015 Move X0, [X0+3672]
	016 Call 0x1C17CF4
	017 Move X0, 0xE35000
	018 Move X0, [X0+1448]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2135], W8
	022 Move X8, 0xE35000
	023 Move X21, 0xE36000
	024 Move X8, [X8+1448]
	025 Move X21, [X21+3672]
	026 Move TEMP, X20
	027 And TEMP, TEMP, -2147483648
	028 Compare TEMP, -2147483648
	029 JumpIfEqual {59}
	030 Add X19, X19, 16
	031 Move X22, [X19]
	032 Compare X22, 0
	033 JumpIfEqual {96}
	034 Move X0, [X8]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move W8, [X22+24]
	040 Add W1, W20, 1
	041 Move W0, W8
	042 ShiftRight W0, 31
	043 And W0, W0, 0x3FFFFFFF
	044 Move X2, X31
	045 Call Math.Max, X0, X1
	046 Move W1, W0
	047 Move X0, [X21]
	048 Call 0x1C17D6C
	049 Move X20, X0
	050 Move X0, [X19]
	051 Compare X0, 0
	052 JumpIfEqual {97}
	053 Move W4, [X0+24]
	054 Move W1, W31
	055 Move X2, X20
	056 Move W3, W31
	057 Move X5, X31
	058 Call Array.Copy, X0, X1, X2, X3, X4
	059 Add X19, X19, 24
	060 Move X22, [X19]
	061 Compare X22, 0
	062 JumpIfEqual {98}
	063 Move X0, [X8]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Move W8, [X22+24]
	069 Move W9, 1
	070 Subtract W1, W9, W20
	071 Move W0, W8
	072 ShiftRight W0, 31
	073 And W0, W0, 0x3FFFFFFF
	074 Move X2, X31
	075 Call Math.Max, X0, X1
	076 Move W1, W0
	077 Move X0, [X21]
	078 Call 0x1C17D6C
	079 Move X20, X0
	080 Move X0, [X19]
	081 Compare X0, 0
	082 JumpIfEqual {99}
	083 Move W4, [X0+24]
	084 Move W1, W31
	085 Move X2, X20
	086 Move W3, W31
	087 Move X5, X31
	088 Call Array.Copy, X0, X1, X2, X3, X4
	089 Move [X19], X20
	090 Move X20, [X31+32]
	091 Move X19, [X31+40]
	092 Move X22, [X31+16]
	093 Move X21, [X31+24]
	094 Move X30, [X31+48]
	095 Return 
	096 Call 0x1C17F20
	097 Call 0x1C17F20
	098 Call 0x1C17F20
	099 Call 0x1C17F20
	100 Move X19, X0
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X0, X19
	103 Call 0x3EB2AD0
	104 Move X19, X0
	105 Move X0, 0xE35000
	106 Move X0, [X0+2000]
	107 Call 0x1C17D08
	108 Move X8, [X19]
	109 Move X1, [X8]
	110 Call 0x1C18270
	111 Move TEMP, X0
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfNotEqual {136}
	115 Call 0x3EB2AE0
	116 Move X0, 0xE65000
	117 Move X0, [X0+3304]
	118 Call 0x1C17D08
	119 Move X1, X31
	120 Call Environment.GetResourceString, X0
	121 Move X19, X0
	122 Move X0, 0xE5F000
	123 Move X0, [X0+736]
	124 Call 0x1C17D08
	125 Call 0x1C17F10
	126 Move X1, X19
	127 Move X2, X31
	128 Move X20, X0
	129 Call SerializationException..ctor, X0, X1
	130 Move X0, 0xE67000
	131 Move X0, [X0+1488]
	132 Call 0x1C17D08
	133 Move X1, X0
	134 Move X0, X20
	135 Call 0x1C17DEC
	136 Move W0, 8
	137 Call 0x3EB2AF0
	138 Move X8, [X19]
	139 Move [X0], X8
	140 Move X1, 0xBF6000
	141 Add X1, X1, 3672
	142 Move X2, X31
	143 Call 0x3EB2B00
	144 Move X19, X0
	145 Call 0x3EB2AE0
	146 Move X0, X19
	147 Call 0x1D2D690
	148 Call 0x1991590

