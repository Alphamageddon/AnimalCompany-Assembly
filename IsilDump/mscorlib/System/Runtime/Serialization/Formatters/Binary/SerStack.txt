Type: System.Runtime.Serialization.Formatters.Binary.SerStack

Method: System.Void .ctor(System.String stackId)

Disassembly:
	0x032BE738 LDR X21, [X8]
	0x032BE73C CBNZ W9, 0x32BE744
	0x032BE740 BL 0x1C16DFC
	0x032BE744 MOV X0, X21
	0x032BE748 MOV X1, X31
	0x032BE74C BL 0x338C698
	0x032BE750 ADRP X23, 0xE67000
	0x032BE754 LDR X23, [X23 + 0x418]
	0x032BE758 MOV X21, X0
	0x032BE75C LDR X8, [X23]
	0x032BE760 LDR X8, [X8 + 0xB8]
	0x032BE764 LDR X22, [X8]
	0x032BE768 BL 0x1C16D44
	0x032BE76C MOV X0, X22
	0x032BE770 MOV X1, X31
	0x032BE774 BL 0x32BE96C
	0x032BE778 TBZ X0, 0x0, 0x32BE7C0
	0x032BE77C CBZ X21, 0x32BE8B0
	0x032BE780 ADRP X8, 0xE61000
	0x032BE784 LDR X8, [X8 + 0xE8]
	0x032BE788 MOV X0, X21
	0x032BE78C MOV X2, X31
	0x032BE790 LDR X1, [X8]
	0x032BE794 BL 0x3397580
	0x032BE798 CBZ X0, 0x32BE8B0
	0x032BE79C LDR W8, [X0 + 0x18]
	0x032BE7A0 MOV X21, X0
	0x032BE7A4 CMP W8, 0x1
	0x032BE7A8 B.NE 0x32BE8B4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x111F000
	007 Move X22, 0xE36000
	008 Move W8, [X21+2125]
	009 Move X22, [X22+2512]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xE36000
	017 Move X0, [X0+2512]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2125], W8
	021 Move X0, [X22]
	022 Move W1, 5
	023 Call 0x1C17D6C
	024 Move [X20+16], X0
	025 Move TEMP, 0
	026 Not TEMP
	027 Move W8, TEMP
	028 Move X0, X20
	029 Move X1, X31
	030 Move [X20+32], W8
	031 Call Object..ctor, X0
	032 Move [X20+24], X19
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Return 

Method: System.Void Push(System.Object obj)

Disassembly:
	0x032BE7AC LDR X21, [X21 + 0x20]
	0x032BE7B0 BL 0x1C16D44
	0x032BE7B4 LDR X8, [X23]
	0x032BE7B8 LDR X8, [X8 + 0xB8]
	0x032BE7BC STR X21, [X8]
	0x032BE7C0 LDR X8, [X23]
	0x032BE7C4 LDR X8, [X8 + 0xB8]
	0x032BE7C8 LDR X21, [X8]
	0x032BE7CC BL 0x1C16D44
	0x032BE7D0 ADRP X8, 0xE66000
	0x032BE7D4 LDR X8, [X8 + 0xB70]
	0x032BE7D8 LDR X19, [X19 + 0x28]
	0x032BE7DC LDR X0, [X8]
	0x032BE7E0 LDR W8, [X0 + 0xE0]
	0x032BE7E4 CBNZ W8, 0x32BE7EC
	0x032BE7E8 BL 0x1C16DFC
	0x032BE7EC MOV X0, X21
	0x032BE7F0 MOV X1, X19
	0x032BE7F4 MOV X2, X20
	0x032BE7F8 LDP X20, X19, [X31 + 0x30]
	0x032BE7FC LDP X22, X21, [X31 + 0x20]
	0x032BE800 LDP X30, X23, [X31 + 0x10]
	0x032BE804 MOV X3, X31
	0x032BE808 ADD X31, X31, 0x40
	0x032BE80C B 0x32A1AD0
	0x032BE810 LDR X0, [X19 + 0x38]
	0x032BE814 CBZ X0, 0x32BE8B0
	0x032BE818 LDRB W8, [X0 + 0x2C]
	0x032BE81C CBZ W8, 0x32BE844
	0x032BE820 CBZ X20, 0x32BE8B0
	0x032BE824 LDR X0, [X0 + 0x20]
	0x032BE828 CBZ X0, 0x32BE8B0
	0x032BE82C LDR X8, [X0]
	0x032BE830 LDR X3, [X21 + 0x58]
	0x032BE834 LDR X2, [X19 + 0x40]
	0x032BE838 LDR X1, [X20 + 0x58]
	0x032BE83C LDP X5, X4, [X8 + 0x1A8]
	0x032BE840 B 0x32BE89C
	0x032BE844 LDR X1, [X19 + 0x40]
	0x032BE848 MOV X2, X31
	0x032BE84C BL 0x32B5040
	0x032BE850 MOV X1, X31
	0x032BE854 MOV X22, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, [X0+16]
	007 Compare X21, 0
	008 JumpIfEqual {45}
	009 Move W9, [X21+24]
	010 Move W8, [X0+32]
	011 Move X20, X0
	012 Move X19, X1
	013 Subtract W9, W9, 1
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X0, X20
	016 Call SerStack.IncreaseCapacity, X0
	017 Move W8, [X20+32]
	018 Move X21, [X20+16]
	019 Add W22, W8, 1
	020 Move [X20+32], W22
	021 Compare X21, 0
	022 JumpIfEqual {45}
	023 Compare X19, 0
	024 JumpIfNotEqual {29}
	025 Add W22, W8, 1
	026 Move [X20+32], W22
	027 Compare X19, 0
	028 JumpIfEqual {35}
	029 Move X8, [X21]
	030 Move X0, X19
	031 Move X1, [X8+64]
	032 Call 0x1C17E00
	033 Compare X0, 0
	034 JumpIfEqual {47}
	035 Move W8, [X21+24]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Add X8, X21, W22
	038 Move [X8+32], X19
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return 
	045 Call 0x1C17F20
	046 Call 0x1C17F28
	047 Call 0x1C17F44
	048 Move X1, X31
	049 Call 0x1C17DEC

Method: System.Object Pop()

Disassembly:
	0x032BE8E0 LDR X0, [X0 + 0x758]
	0x032BE8E4 BL 0x1C16D08
	0x032BE8E8 ADD X1, X31, 0xC
	0x032BE8EC BL 0x1C16E04
	0x032BE8F0 MOV X20, X0
	0x032BE8F4 MOV X0, X19
	0x032BE8F8 BL 0x19903C0
	0x032BE8FC MOV X0, X19
	0x032BE900 MOV X1, X20
	0x032BE904 BL 0x19980B4
	0x032BE908 MOV X0, X19
	0x032BE90C MOV X1, X31
	0x032BE910 MOV X2, X20
	0x032BE914 BL 0x1993444
	0x032BE918 ADRP X0, 0xE67000
	0x032BE91C LDR X0, [X0 + 0x600]
	0x032BE920 BL 0x1C16D08
	0x032BE924 MOV X1, X19
	0x032BE928 MOV X2, X31
	0x032BE92C BL 0x33BFB40

ISIL:
	001 Move [X31-16], X30
	002 Move W9, [X0+32]
	003 Move TEMP, X9
	004 And TEMP, TEMP, -2147483648
	005 Compare TEMP, -2147483648
	006 JumpIfEqual {17}
	007 Move X8, [X0+16]
	008 Compare X8, 0
	009 JumpIfEqual {21}
	010 Move W10, [X8+24]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Add X10, X8, X9
	013 Move X8, [X10+32]
	014 Subtract W9, W9, 1
	015 Move [X0+32], W9
	016 Move [X10+32], X31
	017 Move X8, X31
	018 Move X0, X8
	019 Move X30, [X31+16]
	020 Return X0
	021 Call 0x1C17F20
	022 Call 0x1C17F28

Method: System.Void IncreaseCapacity()

Disassembly:
	0x032BE858 BL 0x32BE96C
	0x032BE85C TBZ X0, 0x0, 0x32BE874
	0x032BE860 LDP X20, X19, [X31 + 0x30]
	0x032BE864 LDP X22, X21, [X31 + 0x20]
	0x032BE868 LDP X30, X23, [X31 + 0x10]
	0x032BE86C ADD X31, X31, 0x40
	0x032BE870 RET
	0x032BE874 LDR X8, [X19 + 0x38]
	0x032BE878 CBZ X8, 0x32BE8B0
	0x032BE87C CBZ X20, 0x32BE8B0
	0x032BE880 LDR X0, [X8 + 0x20]
	0x032BE884 CBZ X0, 0x32BE8B0
	0x032BE888 LDR X8, [X0]
	0x032BE88C LDR X3, [X21 + 0x58]
	0x032BE890 LDR X1, [X20 + 0x58]
	0x032BE894 MOV X2, X22
	0x032BE898 LDP X5, X4, [X8 + 0x198]
	0x032BE89C LDP X20, X19, [X31 + 0x30]
	0x032BE8A0 LDP X22, X21, [X31 + 0x20]
	0x032BE8A4 LDP X30, X23, [X31 + 0x10]
	0x032BE8A8 ADD X31, X31, 0x40
	0x032BE8AC BR X5
	0x032BE8B0 BL 0x1C16F20
	0x032BE8B4 ADRP X0, 0xE35000
	0x032BE8B8 LDR X0, [X0 + 0x9D0]
	0x032BE8BC BL 0x1C16D08
	0x032BE8C0 MOVZ W1, 0x1
	0x032BE8C4 BL 0x1C16D6C
	0x032BE8C8 MOV X19, X0
	0x032BE8CC MOV X0, X21
	0x032BE8D0 BL 0x19903C0
	0x032BE8D4 LDR X8, [X21 + 0x18]
	0x032BE8D8 ADRP X0, 0xE35000
	0x032BE8DC STR W8, [X31 + 0xC]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x111F000
	005 Move W8, [X20+2126]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE36000
	012 Move X0, [X0+2512]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2126], W8
	016 Move X8, [X19+16]
	017 Compare X8, 0
	018 JumpIfEqual {43}
	019 Move X9, 0xE36000
	020 Move X9, [X9+2512]
	021 Move W8, [X8+24]
	022 Move X0, [X9]
	023 Move W1, W8
	024 ShiftRight W1, 31
	025 And W1, W1, 0x3FFFFFFF
	026 Call 0x1C17D6C
	027 Move X8, [X19+16]
	028 Compare X8, 0
	029 JumpIfEqual {43}
	030 Move W4, [X8+24]
	031 Move X20, X0
	032 Move X0, X8
	033 Move W1, W31
	034 Move X2, X20
	035 Move W3, W31
	036 Move X5, X31
	037 Call Array.Copy, X0, X1, X2, X3, X4
	038 Move [X19+16], X20
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Return 
	043 Call 0x1C17F20

Method: System.Object Peek()

Disassembly:
	0x032BE930 MOV X19, X0
	0x032BE934 ADRP X0, 0xE5F000
	0x032BE938 LDR X0, [X0 + 0x2E0]
	0x032BE93C BL 0x1C16D08
	0x032BE940 BL 0x1C16F10
	0x032BE944 MOV X1, X19
	0x032BE948 MOV X2, X31
	0x032BE94C MOV X20, X0
	0x032BE950 BL 0x329F100
	0x032BE954 ADRP X0, 0xE67000
	0x032BE958 LDR X0, [X0 + 0x608]
	0x032BE95C BL 0x1C16D08
	0x032BE960 MOV X1, X0
	0x032BE964 MOV X0, X20
	0x032BE968 BL 0x1C16DEC
	0x032BE96C STP X30, X23, [X31 - 0x30]!

ISIL:
	001 Move [X31-16], X30
	002 Move W8, [X0+32]
	003 Move TEMP, X8
	004 And TEMP, TEMP, -2147483648
	005 Compare TEMP, -2147483648
	006 JumpIfEqual {14}
	007 Move X9, [X0+16]
	008 Compare X9, 0
	009 JumpIfEqual {17}
	010 Move W10, [X9+24]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Add X8, X9, X8
	013 Move X0, [X8+32]
	014 Move X0, X31
	015 Move X30, [X31+16]
	016 Return X0
	017 Call 0x1C17F20
	018 Call 0x1C17F28

Method: System.Object PeekPeek()

Disassembly:
	0x032BE970 STP X22, X21, [X31 + 0x10]
	0x032BE974 STP X20, X19, [X31 + 0x20]
	0x032BE978 ADRP X21, 0x111E000
	0x032BE97C LDRB W8, [X21 + 0x8EA]
	0x032BE980 MOV X19, X1
	0x032BE984 MOV X20, X0
	0x032BE988 TBNZ X8, 0x0, 0x32BE9D0
	0x032BE98C ADRP X0, 0xE67000
	0x032BE990 LDR X0, [X0 + 0x610]
	0x032BE994 BL 0x1C16CF4
	0x032BE998 ADRP X0, 0xE5E000
	0x032BE99C LDR X0, [X0 + 0x3A8]
	0x032BE9A0 BL 0x1C16CF4
	0x032BE9A4 ADRP X0, 0xE65000
	0x032BE9A8 LDR X0, [X0 + 0xD78]
	0x032BE9AC BL 0x1C16CF4
	0x032BE9B0 ADRP X0, 0xE5E000

ISIL:
	001 Move [X31-16], X30
	002 Move W8, [X0+32]
	003 Subtract W8, W8, 1
	004 Move X9, [X0+16]
	005 Compare X9, 0
	006 JumpIfEqual {14}
	007 Move W10, [X9+24]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Add X8, X9, W8
	010 Move X0, [X8+32]
	011 Move X0, X31
	012 Move X30, [X31+16]
	013 Return X0
	014 Call 0x1C17F20
	015 Call 0x1C17F28

Method: System.Boolean IsEmpty()

Disassembly:
	0x032BE9B4 LDR X0, [X0 + 0x3F0]
	0x032BE9B8 BL 0x1C16CF4
	0x032BE9BC ADRP X0, 0xE35000
	0x032BE9C0 LDR X0, [X0 + 0x6C0]

ISIL:
	001 Move W8, [X0+32]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

