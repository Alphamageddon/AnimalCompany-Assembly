Type: System.Runtime.Serialization.Formatters.Binary.NameCache

Method: System.Object GetCachedValue(System.String name)

Disassembly:
	0x032BF424 MOV X2, X31
	0x032BF428 BL 0x3399EF8
	0x032BF42C CBZ X21, 0x32BF4E8
	0x032BF430 LDR W8, [X21 + 0x18]
	0x032BF434 CMP W8, W19
	0x032BF438 B.LS 0x32BF4EC
	0x032BF43C ADD X8, X21, W19, 0x2, SXTW
	0x032BF440 STR W0, [X8 + 0x20]
	0x032BF444 B 0x32BF4D8
	0x032BF448 ADRP X8, 0xE36000
	0x032BF44C LDR X8, [X8 + 0xC48]
	0x032BF450 LDR X21, [X21 + 0x68]
	0x032BF454 LDR X0, [X8]
	0x032BF458 LDR W8, [X0 + 0xE0]
	0x032BF45C CBNZ W8, 0x32BF464
	0x032BF460 BL 0x1C16DFC
	0x032BF464 MOV X0, X31
	0x032BF468 BL 0x3338524
	0x032BF46C MOV X1, X0
	0x032BF470 MOV X0, X20
	0x032BF474 MOV X2, X31
	0x032BF478 BL 0x339AD60
	0x032BF47C CBZ X21, 0x32BF4E8
	0x032BF480 LDR W8, [X21 + 0x18]
	0x032BF484 CMP W8, W19
	0x032BF488 B.LS 0x32BF4EC
	0x032BF48C ADD X8, X21, W19, 0x3, SXTW
	0x032BF490 STR X0, [X8 + 0x20]
	0x032BF494 B 0x32BF4D8
	0x032BF498 ADRP X8, 0xE36000
	0x032BF49C LDR X8, [X8 + 0x170]
	0x032BF4A0 LDR X21, [X21 + 0x20]
	0x032BF4A4 LDR X0, [X8]
	0x032BF4A8 LDR W8, [X0 + 0xE0]
	0x032BF4AC CBNZ W8, 0x32BF4B4
	0x032BF4B0 BL 0x1C16DFC
	0x032BF4B4 MOV X0, X20
	0x032BF4B8 MOV X1, X31
	0x032BF4BC BL 0x331A7E0
	0x032BF4C0 CBZ X21, 0x32BF4E8
	0x032BF4C4 LDR W8, [X21 + 0x18]
	0x032BF4C8 CMP W8, W19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x111E000
	007 Move X21, 0xE67000
	008 Move W8, [X22+2136]
	009 Move X21, [X21+480]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xE67000
	017 Move X0, [X0+1496]
	018 Call 0x1C17CF4
	019 Move X0, 0xE67000
	020 Move X0, [X0+480]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2136], W8
	024 Move [X31+8], X31
	025 Move [X20+16], X19
	026 Move X0, [X21]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1C17DFC
	031 Move X0, [X21]
	032 Move X8, [X0+184]
	033 Move X0, [X8]
	034 Compare X0, 0
	035 JumpIfEqual {51}
	036 Move X8, 0xE67000
	037 Move X8, [X8+1496]
	038 Add X2, X31, 8
	039 Move X1, X19
	040 Move X3, [X8]
	041 Call ConcurrentDictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	042 Move X8, [X31+8]
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 And W31, W0, 1
	048 NotImplemented "Instruction CSEL not yet implemented."
	049 Move X30, [X31+48]
	050 Return X0
	051 Call 0x1C17F20

Method: System.Void SetCachedValue(System.Object value)

Disassembly:
	0x032BF4CC B.LS 0x32BF4EC
	0x032BF4D0 ADD X8, X21, W19, 0x1, SXTW
	0x032BF4D4 STRH W0, [X8 + 0x20]
	0x032BF4D8 LDP X20, X19, [X31 + 0x20]
	0x032BF4DC LDP X22, X21, [X31 + 0x10]
	0x032BF4E0 LDR X30, [X31], #0x30
	0x032BF4E4 RET
	0x032BF4E8 BL 0x1C16F20
	0x032BF4EC BL 0x1C16F28
	0x032BF4F0 STP X30, X21, [X31 - 0x20]!
	0x032BF4F4 STP X20, X19, [X31 + 0x10]
	0x032BF4F8 ADRP X20, 0x111D000
	0x032BF4FC ADRP X21, 0xE66000
	0x032BF500 LDRB W8, [X20 + 0x85E]
	0x032BF504 LDR X21, [X21 + 0x620]
	0x032BF508 MOV X19, X0
	0x032BF50C TBNZ X8, 0x0, 0x32BF524
	0x032BF510 ADRP X0, 0xE66000
	0x032BF514 LDR X0, [X0 + 0x620]
	0x032BF518 BL 0x1C16CF4
	0x032BF51C MOVZ W8, 0x1
	0x032BF520 STRB W8, [X20 + 0x85E]
	0x032BF524 LDR X1, [X21]
	0x032BF528 MOV X0, X19
	0x032BF52C MOV X2, X31
	0x032BF530 BL 0x338C8D8
	0x032BF534 MOVZ W8, 0x4005
	0x032BF538 MOVK W8, 0x80000000
	0x032BF53C STR W8, [X19 + 0x60]
	0x032BF540 LDP X20, X19, [X31 + 0x10]
	0x032BF544 LDP X30, X21, [X31], #0x20
	0x032BF548 RET
	0x032BF54C STP X30, X19, [X31 - 0x10]!
	0x032BF550 MOV X2, X31
	0x032BF554 MOV X19, X0
	0x032BF558 BL 0x338C8D8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x111E000
	007 Move X21, 0xE67000
	008 Move W8, [X22+2137]
	009 Move X21, [X21+480]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xE67000
	017 Move X0, [X0+1504]
	018 Call 0x1C17CF4
	019 Move X0, 0xE67000
	020 Move X0, [X0+480]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2137], W8
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X21]
	030 Move X8, [X0+184]
	031 Move X0, [X8]
	032 Compare X0, 0
	033 JumpIfEqual {46}
	034 Move X8, 0xE67000
	035 Move X8, [X8+1504]
	036 Move X1, [X20+16]
	037 Move X2, X19
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X3, [X8]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Call ConcurrentDictionary`2<Object, Object>.set_Item, X0, X1, X2
	045 Return 
	046 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x032BF55C MOVZ W8, 0x4005
	0x032BF560 MOVK W8, 0x80000000

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void .cctor()

Disassembly:
	0x032BF564 STR W8, [X19 + 0x60]
	0x032BF568 LDP X30, X19, [X31], #0x10
	0x032BF56C RET
	0x032BF570 STP X30, X19, [X31 - 0x10]!
	0x032BF574 MOV X3, X31
	0x032BF578 MOV X19, X0
	0x032BF57C BL 0x338C990
	0x032BF580 MOVZ W8, 0x4005
	0x032BF584 MOVK W8, 0x80000000
	0x032BF588 STR W8, [X19 + 0x60]
	0x032BF58C LDP X30, X19, [X31], #0x10
	0x032BF590 RET
	0x032BF594 MOV X4, X31
	0x032BF598 B 0x338CA74
	0x032BF59C LDR W0, [X0 + 0x60]
	0x032BF5A0 RET
	0x032BF5A4 STR X30, [X31 - 0x40]!
	0x032BF5A8 STP X24, X23, [X31 + 0x10]
	0x032BF5AC STP X22, X21, [X31 + 0x20]
	0x032BF5B0 STP X20, X19, [X31 + 0x30]
	0x032BF5B4 ADRP X20, 0x111D000
	0x032BF5B8 LDRB W8, [X20 + 0x85F]
	0x032BF5BC MOV X19, X0
	0x032BF5C0 TBNZ X8, 0x0, 0x32BF614
	0x032BF5C4 ADRP X0, 0xE36000
	0x032BF5C8 LDR X0, [X0 + 0xC48]
	0x032BF5CC BL 0x1C16CF4
	0x032BF5D0 ADRP X0, 0xE66000
	0x032BF5D4 LDR X0, [X0 + 0x628]
	0x032BF5D8 BL 0x1C16CF4
	0x032BF5DC ADRP X0, 0xE38000
	0x032BF5E0 LDR X0, [X0 + 0x928]
	0x032BF5E4 BL 0x1C16CF4
	0x032BF5E8 ADRP X0, 0xE66000
	0x032BF5EC LDR X0, [X0 + 0x630]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x111E000
	007 Move X22, 0xE67000
	008 Move X19, 0xE67000
	009 Move X20, 0xE67000
	010 Move W8, [X21+2138]
	011 Move X22, [X22+1512]
	012 Move X19, [X19+1520]
	013 Move X20, [X20+480]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xE67000
	019 Move X0, [X0+1520]
	020 Call 0x1C17CF4
	021 Move X0, 0xE67000
	022 Move X0, [X0+1512]
	023 Call 0x1C17CF4
	024 Move X0, 0xE67000
	025 Move X0, [X0+480]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+2138], W8
	029 Move X0, [X22]
	030 Call 0x1C17F10
	031 Move X1, [X19]
	032 Move X19, X0
	033 Call ConcurrentDictionary`2<Object, Object>..ctor, X0
	034 Move X8, [X20]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X8, [X8+184]
	038 Move [X8], X19
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X30, [X31+48]
	042 Return 

