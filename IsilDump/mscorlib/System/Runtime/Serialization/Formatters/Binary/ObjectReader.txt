Type: System.Runtime.Serialization.Formatters.Binary.ObjectReader

Method: System.Runtime.Serialization.Formatters.Binary.SerStack get_ValueFixupStack()

Disassembly:
	0x032B6738 MOV X21, X0
	0x032B673C TBNZ X8, 0x0, 0x32B6778
	0x032B6740 ADRP X0, 0xE46000
	0x032B6744 LDR X0, [X0 + 0x9E8]
	0x032B6748 BL 0x1C16CF4
	0x032B674C ADRP X0, 0xE6E000
	0x032B6750 LDR X0, [X0 + 0xF80]
	0x032B6754 BL 0x1C16CF4
	0x032B6758 ADRP X0, 0xE6F000
	0x032B675C LDR X0, [X0 + 0x60]
	0x032B6760 BL 0x1C16CF4
	0x032B6764 ADRP X0, 0xE6F000
	0x032B6768 LDR X0, [X0 + 0x418]
	0x032B676C BL 0x1C16CF4
	0x032B6770 MOVZ W8, 0x1
	0x032B6774 STRB W8, [X20 + 0x81A]
	0x032B6778 LDR X0, [X21 + 0x88]
	0x032B677C CBZ X0, 0x32B6B2C
	0x032B6780 MOV X1, X31
	0x032B6784 BL 0x32BD930
	0x032B6788 MOV X20, X0
	0x032B678C CBZ X0, 0x32B67A8
	0x032B6790 ADRP X8, 0xE6F000
	0x032B6794 LDR X8, [X8 + 0x60]
	0x032B6798 LDR X1, [X8]
	0x032B679C LDR X8, [X20]
	0x032B67A0 CMP X8, X1
	0x032B67A4 B.NE 0x32B6B30
	0x032B67A8 CBZ X19, 0x32B6B2C
	0x032B67AC LDR W8, [X19 + 0x1C]
	0x032B67B0 CMP W8, 0x3

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1127000
	005 Move W8, [X20+2065]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xE70000
	012 Move X0, [X0+504]
	013 Call 0x1C17CF4
	014 Move X0, 0xE70000
	015 Move X0, [X0+952]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2065], W8
	019 Move X20, [X19+144]
	020 Compare X20, 0
	021 JumpIfNotEqual {33}
	022 Move X8, 0xE70000
	023 Move X8, [X8+504]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Move X8, 0xE70000
	027 Move X8, [X8+952]
	028 Move X2, X31
	029 Move X20, X0
	030 Move X1, [X8]
	031 Call SerStack..ctor, X0, X1
	032 Move [X19+144], X20
	033 Move X0, X20
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return X0

Method: System.Object get_TopObject()

Disassembly:
	0x032B67B4 B.NE 0x32B67D0
	0x032B67B8 MOV X0, X21

ISIL:
	001 Move X0, [X0+96]
	002 Return X0

Method: System.Void set_TopObject(System.Object value)

Disassembly:
	0x032B67BC MOV X1, X19
	0x032B67C0 LDP X20, X19, [X31 + 0x20]
	0x032B67C4 LDP X22, X21, [X31 + 0x10]
	0x032B67C8 LDP X30, X23, [X31], #0x30
	0x032B67CC B 0x32B75F8

ISIL:
	001 Move X8, [X0+48]
	002 Move [X0+96], X1
	003 Compare X8, 0
	004 JumpIfEqual {6}
	005 Move [X8+40], X1
	006 Return 

Method: System.Void .ctor(System.IO.Stream stream, System.Runtime.Serialization.ISurrogateSelector selector, System.Runtime.Serialization.StreamingContext context, System.Runtime.Serialization.Formatters.Binary.InternalFE formatterEnums, System.Runtime.Serialization.SerializationBinder binder)

Disassembly:
	0x032B1BE4 STR X30, [X31 - 0x10]!
	0x032B1BE8 LDR X0, [X0 + 0x30]
	0x032B1BEC CBZ X0, 0x32B1C00
	0x032B1BF0 LDR X8, [X0]
	0x032B1BF4 LDP X3, X2, [X8 + 0x1F8]
	0x032B1BF8 LDR X30, [X31], #0x10
	0x032B1BFC BR X3
	0x032B1C00 BL 0x1C16F20
	0x032B1C04 STR X30, [X31 - 0x10]!
	0x032B1C08 LDR X0, [X0 + 0x30]
	0x032B1C0C CBZ X0, 0x32B1C24
	0x032B1C10 LDR X8, [X0]
	0x032B1C14 LDR X3, [X8 + 0x208]
	0x032B1C18 LDR X2, [X8 + 0x210]
	0x032B1C1C LDR X30, [X31], #0x10
	0x032B1C20 BR X3
	0x032B1C24 BL 0x1C16F20
	0x032B1C28 SUB X31, X31, 0x50
	0x032B1C2C STR X30, [X31 + 0x20]
	0x032B1C30 STP X22, X21, [X31 + 0x30]
	0x032B1C34 STP X20, X19, [X31 + 0x40]
	0x032B1C38 MRS X21, 0xC000
	0x032B1C3C LDR X8, [X21 + 0x28]
	0x032B1C40 ADRP X22, 0x112B000
	0x032B1C44 ADRP X20, 0xE44000
	0x032B1C48 MOV X19, X0
	0x032B1C4C STR X8, [X31 + 0x18]
	0x032B1C50 STP X1, X2, [X31 + 0x8]
	0x032B1C54 LDRB W8, [X22 + 0x7E9]
	0x032B1C58 LDR X20, [X20 + 0xC48]
	0x032B1C5C TBNZ X8, 0x0, 0x32B1C80
	0x032B1C60 ADRP X0, 0xE44000
	0x032B1C64 LDR X0, [X0 + 0xC48]
	0x032B1C68 BL 0x1C16CF4
	0x032B1C6C ADRP X0, 0xE6A000
	0x032B1C70 LDR X0, [X0 + 0x5F0]
	0x032B1C74 BL 0x1C16CF4
	0x032B1C78 MOVZ W8, 0x1
	0x032B1C7C STRB W8, [X22 + 0x7E9]
	0x032B1C80 LDR X0, [X20]
	0x032B1C84 ADRP X20, 0xE6A000
	0x032B1C88 LDR W8, [X0 + 0xE0]
	0x032B1C8C LDR X20, [X20 + 0x5F0]
	0x032B1C90 CBNZ W8, 0x32B1C98
	0x032B1C94 BL 0x1C16DFC
	0x032B1C98 MOV X0, X31
	0x032B1C9C BL 0x3338524
	0x032B1CA0 LDR X8, [X20]
	0x032B1CA4 MOV X20, X0
	0x032B1CA8 LDR W9, [X8 + 0xE0]
	0x032B1CAC CBNZ W9, 0x32B1CB8
	0x032B1CB0 MOV X0, X8
	0x032B1CB4 BL 0x1C16DFC
	0x032B1CB8 ADD X0, X31, 0x8
	0x032B1CBC MOV X1, X20
	0x032B1CC0 MOV X2, X31
	0x032B1CC4 BL 0x33D74AC
	0x032B1CC8 LDR X8, [X19 + 0x30]
	0x032B1CCC CBZ X8, 0x32B1D0C
	0x032B1CD0 LDR X9, [X8]
	0x032B1CD4 MOV X1, X0
	0x032B1CD8 MOV X0, X8
	0x032B1CDC LDR X10, [X9 + 0x298]
	0x032B1CE0 LDR X2, [X9 + 0x2A0]
	0x032B1CE4 BLR X10
	0x032B1CE8 LDR X8, [X21 + 0x28]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X26, 0x112C000
	012 Move X27, 0xE75000
	013 Move W8, [X26+2066]
	014 Move X27, [X27+480]
	015 Move X20, X6
	016 Move X19, X5
	017 Move X21, X4
	018 Move X23, X3
	019 Move X24, X2
	020 Move X25, X1
	021 Move X22, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0xE75000
	027 Move X0, [X0+480]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X26+2066], W8
	031 Move X0, [X27]
	032 Call 0x1C17F10
	033 Move X1, X31
	034 Move X26, X0
	035 Call NameCache..ctor, X0
	036 Move X0, X22
	037 Move X1, X31
	038 Move [X22+176], X26
	039 Call Object..ctor, X0
	040 Compare X25, 0
	041 JumpIfEqual {59}
	042 Move [X22+16], X25
	043 Move [X22+24], X24
	044 Move [X22+32], X23
	045 Move [X22+40], X21
	046 Move [X22+56], X19
	047 Move [X22+64], X20
	048 Move X20, [X31+64]
	049 Move X19, [X31+72]
	050 Move X22, [X31+48]
	051 Move X21, [X31+56]
	052 Move X24, [X31+32]
	053 Move X23, [X31+40]
	054 Move X26, [X31+16]
	055 Move X25, [X31+24]
	056 Move X30, [X31+80]
	057 Move X27, [X31+88]
	058 Return 
	059 Move X0, 0xE75000
	060 Move X0, [X0+488]
	061 Call 0x1C17D08
	062 Move X1, X31
	063 Call Environment.GetResourceString, X0
	064 Move X19, X0
	065 Move X0, 0xE48000
	066 Move X0, [X0+1320]
	067 Call 0x1C17D08
	068 Call 0x1C17F10
	069 Move X20, X0
	070 Move X0, 0xE72000
	071 Move X0, [X0+3384]
	072 Call 0x1C17D08
	073 Move X1, X0
	074 Move X0, X20
	075 Move X2, X19
	076 Move X3, X31
	077 Call ArgumentNullException..ctor, X0, X1, X2
	078 Move X0, 0xE75000
	079 Move X0, [X0+496]
	080 Call 0x1C17D08
	081 Move X1, X0
	082 Move X0, X20
	083 Call 0x1C17DEC

Method: System.Object Deserialize(System.Runtime.Remoting.Messaging.HeaderHandler handler, System.Runtime.Serialization.Formatters.Binary.__BinaryParser serParser, System.Boolean fCheck)

Disassembly:
	0x032B1DF0 LDR X0, [X0 + 0x570]
	0x032B1DF4 BL 0x1C16CF4
	0x032B1DF8 MOVZ W8, 0x1
	0x032B1DFC STRB W8, [X21 + 0x7EA]
	0x032B1E00 LDR X0, [X22]
	0x032B1E04 LDR W8, [X0 + 0xE0]
	0x032B1E08 CBNZ W8, 0x32B1E10
	0x032B1E0C BL 0x1C16DFC
	0x032B1E10 LDR X0, [X20 + 0x30]
	0x032B1E14 CBZ X0, 0x32B1E38
	0x032B1E18 LDR X8, [X0]
	0x032B1E1C MOV X1, X19
	0x032B1E20 LDP X20, X19, [X31 + 0x20]
	0x032B1E24 LDP X22, X21, [X31 + 0x10]
	0x032B1E28 LDR X3, [X8 + 0x268]
	0x032B1E2C LDR X2, [X8 + 0x270]
	0x032B1E30 LDR X30, [X31], #0x30
	0x032B1E34 BR X3
	0x032B1E38 BL 0x1C16F20
	0x032B1E3C STR X30, [X31 - 0x30]!
	0x032B1E40 STP X22, X21, [X31 + 0x10]
	0x032B1E44 STP X20, X19, [X31 + 0x20]
	0x032B1E48 ADRP X21, 0x112B000
	0x032B1E4C ADRP X22, 0xE43000
	0x032B1E50 LDRB W8, [X21 + 0x7EB]
	0x032B1E54 LDR X22, [X22 + 0x9F0]
	0x032B1E58 MOV X19, X1
	0x032B1E5C MOV X20, X0
	0x032B1E60 TBNZ X8, 0x0, 0x32B1E78
	0x032B1E64 ADRP X0, 0xE43000
	0x032B1E68 LDR X0, [X0 + 0x9F0]
	0x032B1E6C BL 0x1C16CF4
	0x032B1E70 MOVZ W8, 0x1
	0x032B1E74 STRB W8, [X21 + 0x7EB]
	0x032B1E78 LDR X0, [X22]
	0x032B1E7C LDR W8, [X0 + 0xE0]
	0x032B1E80 CBNZ W8, 0x32B1E88
	0x032B1E84 BL 0x1C16DFC
	0x032B1E88 LDR X0, [X20 + 0x30]
	0x032B1E8C CBZ X0, 0x32B1EB0
	0x032B1E90 LDR X8, [X0]
	0x032B1E94 MOV X1, X19
	0x032B1E98 LDP X20, X19, [X31 + 0x20]
	0x032B1E9C LDP X22, X21, [X31 + 0x10]
	0x032B1EA0 LDR X3, [X8 + 0x268]
	0x032B1EA4 LDR X2, [X8 + 0x270]
	0x032B1EA8 LDR X30, [X31], #0x30
	0x032B1EAC BR X3
	0x032B1EB0 BL 0x1C16F20
	0x032B1EB4 STR X30, [X31 - 0x10]!
	0x032B1EB8 LDR X0, [X0 + 0x30]
	0x032B1EBC CBZ X0, 0x32B1ED4
	0x032B1EC0 LDR X8, [X0]
	0x032B1EC4 LDR X3, [X8 + 0x238]
	0x032B1EC8 LDR X2, [X8 + 0x240]
	0x032B1ECC LDR X30, [X31], #0x10
	0x032B1ED0 BR X3
	0x032B1ED4 BL 0x1C16F20
	0x032B1ED8 STR X30, [X31 - 0x10]!
	0x032B1EDC LDR X0, [X0 + 0x30]
	0x032B1EE0 CBZ X0, 0x32B1EF8
	0x032B1EE4 LDR X8, [X0]
	0x032B1EE8 LDR X3, [X8 + 0x258]
	0x032B1EEC LDR X2, [X8 + 0x260]
	0x032B1EF0 LDR X30, [X31], #0x10
	0x032B1EF4 BR X3
	0x032B1EF8 BL 0x1C16F20
	0x032B1EFC STR X30, [X31 - 0x10]!
	0x032B1F00 LDR X0, [X0 + 0x30]
	0x032B1F04 CBZ X0, 0x32B1F1C
	0x032B1F08 LDR X8, [X0]
	0x032B1F0C LDR X3, [X8 + 0x278]
	0x032B1F10 LDR X2, [X8 + 0x280]
	0x032B1F14 LDR X30, [X31], #0x10
	0x032B1F18 BR X3
	0x032B1F1C BL 0x1C16F20
	0x032B1F20 RET
	0x032B1F24 STP X30, X21, [X31 - 0x20]!
	0x032B1F28 STP X20, X19, [X31 + 0x10]
	0x032B1F2C ADRP X20, 0x112B000
	0x032B1F30 ADRP X21, 0xE74000
	0x032B1F34 LDRB W8, [X20 + 0x7EC]
	0x032B1F38 LDR X21, [X21 + 0x2C0]
	0x032B1F3C MOV X19, X0
	0x032B1F40 TBNZ X8, 0x0, 0x32B1F58
	0x032B1F44 ADRP X0, 0xE74000
	0x032B1F48 LDR X0, [X0 + 0x2C0]
	0x032B1F4C BL 0x1C16CF4
	0x032B1F50 MOVZ W8, 0x1
	0x032B1F54 STRB W8, [X20 + 0x7EC]
	0x032B1F58 LDR X0, [X21]
	0x032B1F5C BL 0x1C16F10
	0x032B1F60 MOV X1, X31
	0x032B1F64 MOV X20, X0
	0x032B1F68 BL 0x33BDD8C
	0x032B1F6C CBZ X20, 0x32B1F80
	0x032B1F70 MOV X1, X19
	0x032B1F74 LDP X20, X19, [X31 + 0x10]
	0x032B1F78 LDP X30, X21, [X31], #0x20
	0x032B1F7C B 0x32AE1AC
	0x032B1F80 BL 0x1C16F20
	0x032B1F84 STP X30, X25, [X31 - 0x40]!
	0x032B1F88 STP X24, X23, [X31 + 0x10]
	0x032B1F8C STP X22, X21, [X31 + 0x20]
	0x032B1F90 STP X20, X19, [X31 + 0x30]
	0x032B1F94 ADRP X24, 0x112B000
	0x032B1F98 ADRP X25, 0xE74000
	0x032B1F9C LDRB W8, [X24 + 0x7ED]
	0x032B1FA0 LDR X25, [X25 + 0x2C8]
	0x032B1FA4 MOV W19, W4
	0x032B1FA8 MOV W21, W3
	0x032B1FAC MOV W22, W2
	0x032B1FB0 MOV W23, W1
	0x032B1FB4 MOV X20, X0
	0x032B1FB8 TBNZ X8, 0x0, 0x32B1FD0
	0x032B1FBC ADRP X0, 0xE74000
	0x032B1FC0 LDR X0, [X0 + 0x2C8]
	0x032B1FC4 BL 0x1C16CF4
	0x032B1FC8 MOVZ W8, 0x1
	0x032B1FCC STRB W8, [X24 + 0x7ED]
	0x032B1FD0 LDR X0, [X25]
	0x032B1FD4 BL 0x1C16F10
	0x032B1FD8 MOVZ W8, 0x1
	0x032B1FDC MOV X1, X31
	0x032B1FE0 MOV X24, X0
	0x032B1FE4 STR W8, [X0 + 0x10]
	0x032B1FE8 BL 0x33BDD8C
	0x032B1FEC STP W31, W23, [X24 + 0x18]
	0x032B1FF0 STP W22, W21, [X24 + 0x20]
	0x032B1FF4 STR W19, [X24 + 0x28]
	0x032B1FF8 MOV X0, X24
	0x032B1FFC MOV X1, X20
	0x032B2000 LDP X20, X19, [X31 + 0x30]
	0x032B2004 LDP X22, X21, [X31 + 0x20]
	0x032B2008 LDP X24, X23, [X31 + 0x10]
	0x032B200C LDP X30, X25, [X31], #0x40
	0x032B2010 B 0x32AC204
	0x032B2014 STR X30, [X31 - 0x20]!
	0x032B2018 STP X20, X19, [X31 + 0x10]
	0x032B201C ADRP X20, 0x112A000
	0x032B2020 LDRB W8, [X20 + 0x7EE]
	0x032B2024 MOV X19, X0
	0x032B2028 TBNZ X8, 0x0, 0x32B2040
	0x032B202C ADRP X0, 0xE73000
	0x032B2030 LDR X0, [X0 + 0x2D0]
	0x032B2034 BL 0x1C16CF4
	0x032B2038 MOVZ W8, 0x1
	0x032B203C STRB W8, [X20 + 0x7EE]
	0x032B2040 LDR X20, [X19 + 0x40]
	0x032B2044 CBNZ X20, 0x32B2070
	0x032B2048 ADRP X8, 0xE73000
	0x032B204C LDR X8, [X8 + 0x2D0]
	0x032B2050 LDR X0, [X8]
	0x032B2054 BL 0x1C16F10
	0x032B2058 MOVZ W8, 0x1
	0x032B205C MOV X1, X31
	0x032B2060 MOV X20, X0
	0x032B2064 STRB W8, [X0 + 0x38]
	0x032B2068 BL 0x33BDD8C
	0x032B206C STR X20, [X19 + 0x40]
	0x032B2070 MOV X0, X20
	0x032B2074 MOV X1, X19
	0x032B2078 LDP X20, X19, [X31 + 0x10]
	0x032B207C LDR X30, [X31], #0x20
	0x032B2080 B 0x32AC6D4
	0x032B2084 STR X30, [X31 - 0x20]!
	0x032B2088 STP X20, X19, [X31 + 0x10]
	0x032B208C ADRP X20, 0x112A000
	0x032B2090 LDRB W8, [X20 + 0x7EF]
	0x032B2094 MOV X19, X0
	0x032B2098 TBNZ X8, 0x0, 0x32B20B0
	0x032B209C ADRP X0, 0xE73000
	0x032B20A0 LDR X0, [X0]
	0x032B20A4 BL 0x1C16CF4
	0x032B20A8 MOVZ W8, 0x1
	0x032B20AC STRB W8, [X20 + 0x7EF]
	0x032B20B0 LDR X20, [X19 + 0x48]
	0x032B20B4 CBNZ X20, 0x32B20E0
	0x032B20B8 ADRP X8, 0xE73000
	0x032B20BC LDR X8, [X8]
	0x032B20C0 LDR X0, [X8]
	0x032B20C4 BL 0x1C16F10
	0x032B20C8 MOVZ W8, 0x1
	0x032B20CC MOV X1, X31
	0x032B20D0 MOV X20, X0
	0x032B20D4 STRB W8, [X0 + 0x30]
	0x032B20D8 BL 0x33BDD8C
	0x032B20DC STR X20, [X19 + 0x48]
	0x032B20E0 MOV X0, X20
	0x032B20E4 MOV X1, X19
	0x032B20E8 LDP X20, X19, [X31 + 0x10]
	0x032B20EC LDR X30, [X31], #0x20
	0x032B20F0 B 0x32AC8EC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0x112C000
	010 Move W8, [X22+2067]
	011 Move X21, X2
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xE74000
	019 Move X0, [X0+3392]
	020 Call 0x1C17CF4
	021 Move X0, 0xE75000
	022 Move X0, [X0+528]
	023 Call 0x1C17CF4
	024 Move X0, 0xE75000
	025 Move X0, [X0+536]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+2067], W8
	029 Compare X21, 0
	030 JumpIfEqual {167}
	031 Move X8, [X19+48]
	032 Move [X19+160], W31
	033 Move [X19+96], X31
	034 Compare X8, 0
	035 JumpIfEqual {37}
	036 Move [X8+40], X31
	037 Move X8, [X19+56]
	038 Move [X19+72], X31
	039 Compare X8, 0
	040 JumpIfEqual {166}
	041 Move W8, [X8+20]
	042 Move X0, X21
	043 Move [X19+112], X20
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction CSET not yet implemented."
	046 Move [X19+80], W8
	047 Call __BinaryParser.Run, X0
	048 Move W8, [X19+160]
	049 Compare W8, 0
	050 JumpIfEqual {58}
	051 Move X0, [X19+48]
	052 Compare X0, 0
	053 JumpIfEqual {166}
	054 Move X8, [X0]
	055 Move X9, [X8+392]
	056 Move X1, [X8+400]
	057 NotImplemented "Instruction BLR not yet implemented."
	058 Move X0, [X19+96]
	059 Compare X0, 0
	060 JumpIfEqual {201}
	061 Move X1, X31
	062 Call "il2cpp_vm_object_is_inst", X0
	063 Move X1, X0
	064 Move X0, X19
	065 Call ObjectReader.HasSurrogate, X0, X1
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {85}
	070 Move X1, [X19+72]
	071 Compare X1, 0
	072 JumpIfEqual {85}
	073 Move X0, [X19+48]
	074 Compare X0, 0
	075 JumpIfEqual {166}
	076 Move X8, [X0]
	077 Move X9, [X8+376]
	078 Move X2, [X8+384]
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Move X8, [X19+48]
	081 Move [X19+96], X0
	082 Compare X8, 0
	083 JumpIfEqual {85}
	084 Move [X8+40], X0
	085 Move X24, 0xE74000
	086 Move X24, [X24+3392]
	087 Move X0, [X19+96]
	088 Move X1, [X24]
	089 Call 0x1C17E00
	090 Compare X0, 0
	091 JumpIfEqual {138}
	092 Move X25, [X19+96]
	093 Compare X25, 0
	094 JumpIfEqual {166}
	095 Move X23, [X24]
	096 Move X21, [X19+32]
	097 Move X22, [X19+40]
	098 Move X0, X25
	099 Move X1, X23
	100 Call 0x1C17E00
	101 Compare X0, 0
	102 JumpIfEqual {221}
	103 Move X24, [X24]
	104 Move X0, X25
	105 Move X1, X24
	106 Call 0x1C17E00
	107 Compare X0, 0
	108 JumpIfEqual {224}
	109 Move X8, [X0]
	110 Move X23, X0
	111 NotImplemented "Instruction LDRH not yet implemented."
	112 Compare X9, 0
	113 JumpIfEqual {120}
	114 Move X10, [X8+176]
	115 Add X10, X10, 8
	116 NotImplemented "Instruction LDUR not yet implemented."
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Subtract X9, X9, 1
	119 Add X10, X10, 16
	120 Move X0, X23
	121 Move X1, X24
	122 Move W2, W31
	123 Call 0x1C5D788
	124 NotImplemented "Instruction LDRSW not yet implemented."
	125 Add X8, X8, X9
	126 Add X0, X8, 312
	127 Move X8, [X0]
	128 Move X3, [X0+8]
	129 Move X0, X23
	130 Move X1, X21
	131 Move X2, X22
	132 NotImplemented "Instruction BLR not yet implemented."
	133 Move X8, [X19+48]
	134 Move [X19+96], X0
	135 Compare X8, 0
	136 JumpIfEqual {138}
	137 Move [X8+40], X0
	138 Move W8, [X19+160]
	139 Compare W8, 0
	140 JumpIfEqual {148}
	141 Move X0, [X19+48]
	142 Compare X0, 0
	143 JumpIfEqual {166}
	144 Move X8, [X0]
	145 Move X9, [X8+456]
	146 Move X1, [X8+464]
	147 NotImplemented "Instruction BLR not yet implemented."
	148 Compare X20, 0
	149 JumpIfEqual {156}
	150 Move X1, [X19+104]
	151 Move X8, [X20+24]
	152 Move X0, [X20+64]
	153 Move X2, [X20+40]
	154 NotImplemented "Instruction BLR not yet implemented."
	155 Move [X19+88], X0
	156 Move X0, [X19+96]
	157 Move X20, [X31+48]
	158 Move X19, [X31+56]
	159 Move X22, [X31+32]
	160 Move X21, [X31+40]
	161 Move X24, [X31+16]
	162 Move X23, [X31+24]
	163 Move X30, [X31+64]
	164 Move X25, [X31+72]
	165 Return X0
	166 Call 0x1C17F20
	167 Move X0, 0xE42000
	168 Move X0, [X0+2512]
	169 Call 0x1C17D08
	170 Move W1, 1
	171 Call 0x1C17D6C
	172 Move X19, X0
	173 Call 0x19913C0
	174 Move X0, X19
	175 Move X1, X31
	176 Call 0x19990B4
	177 Move X0, X19
	178 Move X1, X31
	179 Move X2, X31
	180 Call 0x1994444
	181 Move X0, 0xE74000
	182 Move X0, [X0+448]
	183 Call 0x1C17D08
	184 Move X1, X19
	185 Move X2, X31
	186 Call Environment.GetResourceString, X0, X1
	187 Move X19, X0
	188 Move X0, 0xE47000
	189 Move X0, [X0+1320]
	190 Call 0x1C17D08
	191 Call 0x1C17F10
	192 Move X20, X0
	193 Move X0, 0xE74000
	194 Move X0, [X0+544]
	195 Call 0x1C17D08
	196 Move X1, X0
	197 Move X0, X20
	198 Move X2, X19
	199 Move X3, X31
	200 Call ArgumentNullException..ctor, X0, X1, X2
	201 Move X0, 0xE74000
	202 Move X0, [X0+552]
	203 Call 0x1C17D08
	204 Move X1, X31
	205 Call Environment.GetResourceString, X0
	206 Move X19, X0
	207 Move X0, 0xE6C000
	208 Move X0, [X0+736]
	209 Call 0x1C17D08
	210 Call 0x1C17F10
	211 Move X1, X19
	212 Move X2, X31
	213 Move X20, X0
	214 Call SerializationException..ctor, X0, X1
	215 Move X0, 0xE74000
	216 Move X0, [X0+560]
	217 Call 0x1C17D08
	218 Move X1, X0
	219 Move X0, X20
	220 Call 0x1C17DEC
	221 Move X0, X25
	222 Move X1, X23
	223 Call 0x1C181E0
	224 Move X0, X25
	225 Move X1, X24
	226 Call 0x1C181E0

Method: System.Boolean HasSurrogate(System.Type t)

Disassembly:
	0x032B6D38 BL 0x1C16E04
	0x032B6D3C MOV X23, X0
	0x032B6D40 ADRP X0, 0xE6F000
	0x032B6D44 LDR X0, [X0 + 0x438]
	0x032B6D48 BL 0x1C16D08
	0x032B6D4C MOV X22, X0
	0x032B6D50 CBNZ X23, 0x32B6D5C
	0x032B6D54 MOV X0, X31
	0x032B6D58 B 0x32B6D6C
	0x032B6D5C LDR X8, [X23]
	0x032B6D60 MOV X0, X23
	0x032B6D64 LDP X9, X1, [X8 + 0x168]
	0x032B6D68 BLR X9
	0x032B6D6C LDR W8, [X20 + 0x18]
	0x032B6D70 CMP W8, 0x2
	0x032B6D74 B.LS 0x32B6DF0
	0x032B6D78 STR X0, [X20 + 0x30]
	0x032B6D7C ADRP X0, 0xE3D000
	0x032B6D80 LDR X0, [X0 + 0xDD8]
	0x032B6D84 BL 0x1C16D08
	0x032B6D88 LDR W8, [X20 + 0x18]
	0x032B6D8C CMP W8, 0x3
	0x032B6D90 B.LS 0x32B6DF0
	0x032B6D94 STR X0, [X20 + 0x38]
	0x032B6D98 CBZ X21, 0x32B6CF0
	0x032B6D9C CMP W8, 0x4
	0x032B6DA0 B.LS 0x32B6DF0
	0x032B6DA4 LDR X8, [X21 + 0x28]
	0x032B6DA8 ADRP X0, 0xE3D000
	0x032B6DAC STR X8, [X20 + 0x40]
	0x032B6DB0 LDR X0, [X0 + 0xDD8]
	0x032B6DB4 BL 0x1C16D08
	0x032B6DB8 LDR W8, [X20 + 0x18]
	0x032B6DBC CMP W8, 0x5
	0x032B6DC0 B.LS 0x32B6DF0
	0x032B6DC4 STR X0, [X20 + 0x48]
	0x032B6DC8 LDR W8, [X21 + 0x10]
	0x032B6DCC ADRP X0, 0xE6F000
	0x032B6DD0 STR W8, [X31 + 0x8]
	0x032B6DD4 LDR X0, [X0 + 0x430]
	0x032B6DD8 BL 0x1C16D08
	0x032B6DDC ADD X1, X31, 0x8
	0x032B6DE0 BL 0x1C16E04
	0x032B6DE4 CBNZ X0, 0x32B6DF4
	0x032B6DE8 MOV X21, X31
	0x032B6DEC B 0x32B6E04
	0x032B6DF0 BL 0x1C16F28
	0x032B6DF4 LDR X8, [X0]
	0x032B6DF8 LDP X9, X1, [X8 + 0x168]
	0x032B6DFC BLR X9
	0x032B6E00 MOV X21, X0
	0x032B6E04 MOV X0, X20
	0x032B6E08 BL 0x19903C0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x1127000
	007 Move W8, [X20+2068]
	008 Move X19, X1
	009 Move X22, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE6F000
	015 Move X0, [X0+2528]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2068], W8
	019 Move [X31+8], X31
	020 Move X20, [X22+24]
	021 Compare X20, 0
	022 JumpIfEqual {41}
	023 Move X10, 0xE6F000
	024 Move X8, [X20]
	025 Move X10, [X10+2528]
	026 Move X22, [X22+32]
	027 Move X21, [X22+40]
	028 NotImplemented "Instruction LDRH not yet implemented."
	029 Move X1, [X10]
	030 Compare X9, 0
	031 JumpIfEqual {38}
	032 Move X10, [X8+176]
	033 Add X10, X10, 8
	034 NotImplemented "Instruction LDUR not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Subtract X9, X9, 1
	037 Add X10, X10, 16
	038 Move X0, X20
	039 Move W2, W31
	040 Call 0x1C5D788
	041 Move W0, W31
	042 NotImplemented "Instruction LDRSW not yet implemented."
	043 Add X8, X8, X9
	044 Add X0, X8, 312
	045 Move X8, [X0]
	046 Move X5, [X0+8]
	047 Add X4, X31, 8
	048 Move X0, X20
	049 Move X1, X19
	050 Move X2, X22
	051 Move X3, X21
	052 NotImplemented "Instruction BLR not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 NotImplemented "Instruction CSET not yet implemented."
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 Move X30, [X31+48]
	060 Return X0

Method: System.Void CheckSerializable(System.Type t)

Disassembly:
	0x032B6E0C MOVZ W1, 0x6
	0x032B6E10 MOV X0, X20
	0x032B6E14 MOV X2, X21
	0x032B6E18 BL 0x1993444
	0x032B6E1C MOV X0, X20
	0x032B6E20 MOV X1, X31
	0x032B6E24 BL 0x32278CC
	0x032B6E28 MOV X20, X0
	0x032B6E2C MOV X0, X19
	0x032B6E30 BL 0x19903C0
	0x032B6E34 MOV X0, X19
	0x032B6E38 MOV X1, X20
	0x032B6E3C BL 0x19980B4
	0x032B6E40 MOV X0, X19
	0x032B6E44 MOV X1, X31
	0x032B6E48 MOV X2, X20
	0x032B6E4C BL 0x1993444
	0x032B6E50 MOV X0, X22
	0x032B6E54 MOV X1, X19
	0x032B6E58 MOV X2, X31
	0x032B6E5C BL 0x33BFB40
	0x032B6E60 MOV X19, X0
	0x032B6E64 ADRP X0, 0xE67000
	0x032B6E68 LDR X0, [X0 + 0x2E0]
	0x032B6E6C BL 0x1C16D08
	0x032B6E70 BL 0x1C16F10
	0x032B6E74 MOV X1, X19
	0x032B6E78 MOV X2, X31
	0x032B6E7C MOV X20, X0
	0x032B6E80 BL 0x329F100
	0x032B6E84 ADRP X0, 0xE6F000
	0x032B6E88 LDR X0, [X0 + 0x440]
	0x032B6E8C BL 0x1C16D08
	0x032B6E90 MOV X1, X0
	0x032B6E94 MOV X0, X20
	0x032B6E98 BL 0x1C16DEC
	0x032B6E9C SUB X31, X31, 0x40
	0x032B6EA0 STP X30, X23, [X31 + 0x10]
	0x032B6EA4 STP X22, X21, [X31 + 0x20]
	0x032B6EA8 STP X20, X19, [X31 + 0x30]
	0x032B6EAC ADRP X21, 0x1126000
	0x032B6EB0 LDRB W8, [X21 + 0x818]
	0x032B6EB4 MOV X19, X1
	0x032B6EB8 MOV X20, X0
	0x032B6EBC TBNZ X8, 0x0, 0x32B6F40
	0x032B6EC0 ADRP X0, 0xE3D000
	0x032B6EC4 LDR X0, [X0 + 0x618]
	0x032B6EC8 BL 0x1C16CF4
	0x032B6ECC ADRP X0, 0xE46000
	0x032B6ED0 LDR X0, [X0 + 0x9E8]
	0x032B6ED4 BL 0x1C16CF4
	0x032B6ED8 ADRP X0, 0xE6E000
	0x032B6EDC LDR X0, [X0 + 0xF80]
	0x032B6EE0 BL 0x1C16CF4
	0x032B6EE4 ADRP X0, 0xE6F000
	0x032B6EE8 LDR X0, [X0 + 0x448]
	0x032B6EEC BL 0x1C16CF4
	0x032B6EF0 ADRP X0, 0xE3E000
	0x032B6EF4 LDR X0, [X0 + 0xE58]
	0x032B6EF8 BL 0x1C16CF4
	0x032B6EFC ADRP X0, 0xE3D000
	0x032B6F00 LDR X0, [X0 + 0x9D0]
	0x032B6F04 BL 0x1C16CF4
	0x032B6F08 ADRP X0, 0xE6F000
	0x032B6F0C LDR X0, [X0 + 0x60]
	0x032B6F10 BL 0x1C16CF4
	0x032B6F14 ADRP X0, 0xE6F000
	0x032B6F18 LDR X0, [X0 + 0x450]
	0x032B6F1C BL 0x1C16CF4
	0x032B6F20 ADRP X0, 0xE3D000
	0x032B6F24 LDR X0, [X0 + 0xEF0]
	0x032B6F28 BL 0x1C16CF4
	0x032B6F2C ADRP X0, 0xE3D000
	0x032B6F30 LDR X0, [X0 + 0xAC8]
	0x032B6F34 BL 0x1C16CF4
	0x032B6F38 MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Compare X1, 0
	007 JumpIfEqual {32}
	008 Move X8, [X1]
	009 Move X19, X1
	010 Move X20, X0
	011 Move X0, X19
	012 Move X9, [X8+632]
	013 Move X1, [X8+640]
	014 NotImplemented "Instruction BLR not yet implemented."
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {26}
	019 Move X0, X20
	020 Move X1, X19
	021 Call ObjectReader.HasSurrogate, X0, X1
	022 Move TEMP, X0
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfNotEqual {33}
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move X30, [X31+48]
	031 Return 
	032 Call 0x1C17F20
	033 Move X0, 0xE40000
	034 Move X0, [X0+3144]
	035 Call 0x1C17D08
	036 Call 0x19913D0
	037 Move X0, X31
	038 Call CultureInfo.get_InvariantCulture
	039 Move X20, X0
	040 Move X0, 0xE6F000
	041 Move X0, [X0+3008]
	042 Call 0x1C17D08
	043 Move X1, X31
	044 Call Environment.GetResourceString, X0
	045 Move X21, X0
	046 Move X0, X19
	047 Call 0x19913C0
	048 Move X8, [X19]
	049 Move X0, X19
	050 Move X9, [X8+744]
	051 Move X1, [X8+752]
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move X22, X0
	054 Move X0, X19
	055 Call 0x19913C0
	056 Move X8, [X19]
	057 Move X0, X19
	058 Move X9, [X8+760]
	059 Move X1, [X8+768]
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Move X19, X0
	062 Call 0x19913C0
	063 Move X8, [X19]
	064 Move X0, X19
	065 Move X9, [X8+440]
	066 Move X1, [X8+448]
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Move X3, X0
	069 Move X0, X20
	070 Move X1, X21
	071 Move X2, X22
	072 Move X4, X31
	073 Call String.Format, X0, X1, X2, X3
	074 Move X19, X0
	075 Move X0, 0xE68000
	076 Move X0, [X0+736]
	077 Call 0x1C17D08
	078 Call 0x1C17F10
	079 Move X1, X19
	080 Move X2, X31
	081 Move X20, X0
	082 Call SerializationException..ctor, X0, X1
	083 Move X0, 0xE70000
	084 Move X0, [X0+1000]
	085 Call 0x1C17D08
	086 Move X1, X0
	087 Move X0, X20
	088 Call 0x1C17DEC

Method: System.Void InitFullDeserialization()

Disassembly:
	0x032B6F3C STRB W8, [X21 + 0x818]
	0x032B6F40 CBZ X19, 0x32B7454
	0x032B6F44 LDR W8, [X19 + 0x18]
	0x032B6F48 CMP W8, 0x4
	0x032B6F4C B.NE 0x32B6F8C
	0x032B6F50 LDR X21, [X19 + 0x30]
	0x032B6F54 CBZ X21, 0x32B7454
	0x032B6F58 LDR W8, [X21 + 0x10]
	0x032B6F5C CMP W8, 0x1
	0x032B6F60 B.LT 0x32B7014
	0x032B6F64 ADRP X8, 0xE46000
	0x032B6F68 LDR X8, [X8 + 0x9E8]
	0x032B6F6C LDR X0, [X8]
	0x032B6F70 LDR W8, [X0 + 0xE0]
	0x032B6F74 CBNZ W8, 0x32B6F7C
	0x032B6F78 BL 0x1C16DFC
	0x032B6F7C MOV X0, X21
	0x032B6F80 MOV X1, X31
	0x032B6F84 BL 0x3322D04
	0x032B6F88 B 0x32B7028
	0x032B6F8C LDR X9, [X19 + 0xE8]
	0x032B6F90 CBZ X9, 0x32B6FC0
	0x032B6F94 ADRP X8, 0xE6E000
	0x032B6F98 LDR X8, [X8 + 0xF80]
	0x032B6F9C LDR W21, [X19 + 0x7C]
	0x032B6FA0 LDR X0, [X8]
	0x032B6FA4 LDR W8, [X0 + 0xE0]
	0x032B6FA8 CBNZ W8, 0x32B6FB0
	0x032B6FAC BL 0x1C16DFC
	0x032B6FB0 MOV W0, W21
	0x032B6FB4 BL 0x32AF118
	0x032B6FB8 TBNZ X0, 0x0, 0x32B7054
	0x032B6FBC LDR W8, [X19 + 0x18]
	0x032B6FC0 SUB W9, W8, 0x1
	0x032B6FC4 CMP W9, 0x2
	0x032B6FC8 B.CS 0x32B7174
	0x032B6FCC LDR X2, [X19 + 0x98]
	0x032B6FD0 CBZ X2, 0x32B70C8
	0x032B6FD4 LDR W8, [X2 + 0x18]
	0x032B6FD8 CBZ W8, 0x32B7450
	0x032B6FDC LDR W8, [X2 + 0x20]
	0x032B6FE0 CBZ W8, 0x32B70C8
	0x032B6FE4 LDR X0, [X19 + 0x70]
	0x032B6FE8 CBZ X0, 0x32B6FFC
	0x032B6FEC LDR X1, [X19 + 0x88]
	0x032B6FF0 MOV X3, X31
	0x032B6FF4 BL 0x33A29A0
	0x032B6FF8 STR X0, [X19 + 0xE8]
	0x032B6FFC LDR W8, [X19 + 0x18]
	0x032B7000 MOVZ W9, 0x1
	0x032B7004 STRB W9, [X19 + 0xC0]
	0x032B7008 CMP W8, 0x1
	0x032B700C B.EQ 0x32B72E4
	0x032B7010 B 0x32B73CC
	0x032B7014 ADRP X8, 0xE3C000
	0x032B7018 LDR X8, [X8 + 0x618]
	0x032B701C MOV W1, W31
	0x032B7020 LDR X0, [X8]
	0x032B7024 BL 0x1C16D6C
	0x032B7028 STR X0, [X19 + 0xE8]
	0x032B702C LDR X0, [X20 + 0x88]
	0x032B7030 CBZ X0, 0x32B7454
	0x032B7034 MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1127000
	008 Move X21, 0xE70000
	009 Move X20, 0xE70000
	010 Move X23, 0xE70000
	011 Move W8, [X22+2069]
	012 Move X21, [X21+504]
	013 Move X20, [X20+1008]
	014 Move X23, [X23+528]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0xE70000
	021 Move X0, [X0+616]
	022 Call 0x1C17CF4
	023 Move X0, 0xE70000
	024 Move X0, [X0+528]
	025 Call 0x1C17CF4
	026 Move X0, 0xE70000
	027 Move X0, [X0+504]
	028 Call 0x1C17CF4
	029 Move X0, 0xE70000
	030 Move X0, [X0+1008]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X22+2069], W8
	034 Move W8, 1
	035 Move [X19+160], W8
	036 Move X0, [X21]
	037 Call 0x1C17F10
	038 Move X1, [X20]
	039 Move X2, X31
	040 Move X20, X0
	041 Call SerStack..ctor, X0, X1
	042 Move [X19+136], X20
	043 Move X0, [X23]
	044 Move X20, [X19+24]
	045 Move X21, [X19+32]
	046 Move X22, [X19+40]
	047 Call 0x1C17F10
	048 Move X1, X20
	049 Move X2, X21
	050 Move X3, X22
	051 Move W4, W31
	052 Move W5, W31
	053 Move X6, X31
	054 Move X23, X0
	055 Call ObjectManager..ctor, X0, X1, X2, X3, X4
	056 Move X8, [X19+128]
	057 Move [X19+48], X23
	058 Compare X8, 0
	059 JumpIfNotEqual {68}
	060 Move X8, 0xE6F000
	061 Move X8, [X8+616]
	062 Move X0, [X8]
	063 Call 0x1C17F10
	064 Move X1, X31
	065 Move X20, X0
	066 Call FormatterConverter..ctor, X0
	067 Move [X19+128], X20
	068 Move X20, [X31+32]
	069 Move X19, [X31+40]
	070 Move X22, [X31+16]
	071 Move X21, [X31+24]
	072 Move X30, [X31+48]
	073 Move X23, [X31+56]
	074 Return 

Method: System.Object CrossAppDomainArray(System.Int32 index)

Disassembly:
	0x032B7038 BL 0x32BD930
	0x032B703C CMP X0, X19
	0x032B7040 B.NE 0x32B7054
	0x032B7044 LDR X0, [X20 + 0x88]
	0x032B7048 CBZ X0, 0x32B7454
	0x032B704C MOV X1, X31
	0x032B7050 BL 0x32BD8E0
	0x032B7054 LDR W8, [X19 + 0x24]
	0x032B7058 CMP W8, 0x1
	0x032B705C B.NE 0x32B7074
	0x032B7060 LDR X8, [X19 + 0xE8]
	0x032B7064 LDR X9, [X20 + 0x30]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+152]
	003 Compare X8, 0
	004 JumpIfEqual {11}
	005 Move W9, [X8+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Add X8, X8, W1
	008 Move X0, [X8+32]
	009 Move X30, [X31+16]
	010 Return X0
	011 Call 0x1C17F20
	012 Call 0x1C17F28

Method: System.Runtime.Serialization.Formatters.Binary.ReadObjectInfo CreateReadObjectInfo(System.Type objectType)

Disassembly:
	0x032AF390 MOV X0, X20
	0x032AF394 LDR X1, [X8 + 0x40]
	0x032AF398 BL 0x1C16E00
	0x032AF39C CBZ X0, 0x32AF508
	0x032AF3A0 LDR W8, [X19 + 0x18]
	0x032AF3A4 CMP W8, 0xA
	0x032AF3A8 B.LS 0x32AF504
	0x032AF3AC STR X20, [X19 + 0x70]
	0x032AF3B0 LDR X9, [X21]
	0x032AF3B4 LDR X9, [X9 + 0xB8]
	0x032AF3B8 LDR X20, [X9 + 0x140]
	0x032AF3BC CBZ X20, 0x32AF3D8

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move X8, [X0+24]
	004 Move X2, [X0+32]
	005 Move X3, [X0+40]
	006 Move X4, [X0+48]
	007 Move X5, [X0+120]
	008 Move X6, [X0+128]
	009 Move W7, [X0+80]
	010 Move X0, X1
	011 Move X1, X8
	012 Call ReadObjectInfo.Create, X0, X1, X2, X3, X4, X5, X6
	013 Move X30, [X31+16]
	014 Add X31, X31, 32
	015 Return X0

Method: System.Runtime.Serialization.Formatters.Binary.ReadObjectInfo CreateReadObjectInfo(System.Type objectType, System.String[] memberNames, System.Type[] memberTypes)

Disassembly:
	0x032AFB90 CMP W8, 0x7
	0x032AFB94 LDR X9, [X9]
	0x032AFB98 STR X9, [X19 + 0x50]
	0x032AFB9C B.LS 0x32AFCA4
	0x032AFBA0 ADRP X9, 0xE76000
	0x032AFBA4 LDR X9, [X9 + 0xB8]
	0x032AFBA8 CMP W8, 0x8
	0x032AFBAC LDR X9, [X9]
	0x032AFBB0 STR X9, [X19 + 0x58]
	0x032AFBB4 B.EQ 0x32AFCA4
	0x032AFBB8 ADRP X9, 0xE76000
	0x032AFBBC LDR X9, [X9 + 0xD8]
	0x032AFBC0 CMP W8, 0x9
	0x032AFBC4 LDR X9, [X9]
	0x032AFBC8 STR X9, [X19 + 0x60]
	0x032AFBCC B.LS 0x32AFCA4

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move X8, X3
	004 Move X3, [X0+24]
	005 Move X4, [X0+32]
	006 Move X5, [X0+40]
	007 Move X6, [X0+48]
	008 Move X7, [X0+120]
	009 Move X9, [X0+128]
	010 Move W10, [X0+80]
	011 Move X0, X1
	012 Move X1, X2
	013 Move X2, X8
	014 Move [X31+8], W10
	015 Move [X31], X9
	016 Call ReadObjectInfo.Create, X0, X1, X2, X3, X4, X5, X6, X7, X8
	017 Move X30, [X31+32]
	018 Add X31, X31, 48
	019 Return X0

Method: System.Void Parse(System.Runtime.Serialization.Formatters.Binary.ParseRecord pr)

Disassembly:
	0x032B7068 STR X8, [X20 + 0x60]
	0x032B706C CBZ X9, 0x32B7074
	0x032B7070 STR X8, [X9 + 0x28]
	0x032B7074 LDR X0, [X20 + 0x88]
	0x032B7078 CBZ X0, 0x32B7454
	0x032B707C MOV X1, X31
	0x032B7080 BL 0x32BD930
	0x032B7084 MOV X3, X0
	0x032B7088 CBZ X0, 0x32B70A4
	0x032B708C ADRP X8, 0xE6E000
	0x032B7090 LDR X8, [X8 + 0x60]
	0x032B7094 LDR X1, [X8]
	0x032B7098 LDR X8, [X3]
	0x032B709C CMP X8, X1
	0x032B70A0 B.NE 0x32B7458
	0x032B70A4 LDR X1, [X19 + 0xE8]
	0x032B70A8 MOV X0, X20
	0x032B70AC MOV X2, X19
	0x032B70B0 LDP X20, X19, [X31 + 0x30]
	0x032B70B4 LDP X22, X21, [X31 + 0x20]
	0x032B70B8 LDP X30, X23, [X31 + 0x10]
	0x032B70BC MOV W4, W31
	0x032B70C0 ADD X31, X31, 0x40
	0x032B70C4 B 0x32B7E0C
	0x032B70C8 ADRP X22, 0xE6D000
	0x032B70CC LDR X22, [X22 + 0xF80]
	0x032B70D0 LDR X21, [X19 + 0x70]
	0x032B70D4 LDR X0, [X22]
	0x032B70D8 LDR W8, [X0 + 0xE0]
	0x032B70DC CBNZ W8, 0x32B70E8
	0x032B70E0 BL 0x1C16DFC
	0x032B70E4 LDR X0, [X22]
	0x032B70E8 LDR X8, [X0 + 0xB8]
	0x032B70EC LDR X9, [X8 + 0x38]
	0x032B70F0 CMP X21, X9
	0x032B70F4 B.EQ 0x32B71F0
	0x032B70F8 LDR W9, [X0 + 0xE0]
	0x032B70FC LDR X21, [X19 + 0x70]
	0x032B7100 CBNZ W9, 0x32B7110
	0x032B7104 BL 0x1C16DFC
	0x032B7108 LDR X8, [X22]
	0x032B710C LDR X8, [X8 + 0xB8]
	0x032B7110 LDR X8, [X8 + 0xC0]
	0x032B7114 CMP X21, X8
	0x032B7118 B.EQ 0x32B7210
	0x032B711C LDR X21, [X19 + 0x70]
	0x032B7120 CBZ X21, 0x32B73C0
	0x032B7124 ADRP X8, 0xE3D000
	0x032B7128 LDR X8, [X8 + 0xE58]
	0x032B712C MOVZ W1, 0x1
	0x032B7130 LDR X0, [X8]
	0x032B7134 BL 0x1C16D6C
	0x032B7138 LDR X8, [X19 + 0x88]
	0x032B713C CBZ X8, 0x32B7454
	0x032B7140 LDR W9, [X8 + 0x18]
	0x032B7144 CBZ W9, 0x32B7450
	0x032B7148 MOV X1, X0
	0x032B714C CBZ X0, 0x32B7454
	0x032B7150 LDR W9, [X1 + 0x18]
	0x032B7154 CBZ W9, 0x32B7450
	0x032B7158 LDR W8, [X8 + 0x20]
	0x032B715C MOV X0, X21
	0x032B7160 MOV X2, X31
	0x032B7164 STR W8, [X1 + 0x20]
	0x032B7168 BL 0x33A2DF4
	0x032B716C MOVZ W23, 0x1
	0x032B7170 B 0x32B723C
	0x032B7174 CMP W8, 0x3
	0x032B7178 B.NE 0x32B7460
	0x032B717C LDR X2, [X19 + 0x98]
	0x032B7180 STRB W31, [X19 + 0xC0]
	0x032B7184 CBZ X2, 0x32B71CC
	0x032B7188 LDRSW X9, [X19 + 0x80]
	0x032B718C CMP W9, 0x1
	0x032B7190 B.LT 0x32B71CC
	0x032B7194 LDR W11, [X2 + 0x18]
	0x032B7198 MOV W8, W31
	0x032B719C MOV X10, X31
	0x032B71A0 ADD X12, X2, 0x20
	0x032B71A4 CMP X11, X10
	0x032B71A8 B.EQ 0x32B7450

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {57}
	006 Move W8, [X1+16]
	007 Subtract W8, W8, 1
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move X9, -41025536
	010 Add X9, X9, 1340
	011 NotImplemented "Instruction ADR not yet implemented."
	012 Move W11, [X9]
	013 Add X10, X10, X11
	014 CallNoReturn X10
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 Return 
	019 Move X0, [X0+136]
	020 Compare X0, 0
	021 JumpIfEqual {57}
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X2, X31
	025 Move X30, [X31+32]
	026 Call SerStack.Push, X0, X1
	027 Return 
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Call ObjectReader.ParseObject, X0, X1
	032 Return 
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Call ObjectReader.ParseMember, X0, X1
	037 Return 
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Call ObjectReader.ParseObjectEnd, X0, X1
	042 Return 
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Call ObjectReader.ParseMemberEnd, X0, X1
	047 Return 
	048 Move X0, [X0+136]
	049 Compare X0, 0
	050 JumpIfEqual {57}
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X1, X31
	054 Move X30, [X31+32]
	055 Call SerStack.Pop, X0
	056 Return 
	057 Call 0x1C17F20
	058 Move X0, 0xE3D000
	059 Move X0, [X0+2512]
	060 Move X19, X1
	061 Call 0x1C17D08
	062 Move W1, 1
	063 Call 0x1C17D6C
	064 Move X20, X0
	065 Move X0, X19
	066 Call 0x19913C0
	067 Move X19, [X19+40]
	068 Move X0, X20
	069 Call 0x19913C0
	070 Move X0, X20
	071 Move X1, X19
	072 Call 0x19990B4
	073 Move X0, X20
	074 Move X1, X31
	075 Move X2, X19
	076 Call 0x1994444
	077 Move X0, 0xE6F000
	078 Move X0, [X0+1016]
	079 Call 0x1C17D08
	080 Move X1, X20
	081 Move X2, X31
	082 Call Environment.GetResourceString, X0, X1
	083 Move X19, X0
	084 Move X0, 0xE67000
	085 Move X0, [X0+736]
	086 Call 0x1C17D08
	087 Call 0x1C17F10
	088 Move X1, X19
	089 Move X2, X31
	090 Move X20, X0
	091 Call SerializationException..ctor, X0, X1
	092 Move X0, 0xE6F000
	093 Move X0, [X0+1024]
	094 Call 0x1C17D08
	095 Move X1, X0
	096 Move X0, X20
	097 Call 0x1C17DEC

Method: System.Void ParseError(System.Runtime.Serialization.Formatters.Binary.ParseRecord processing, System.Runtime.Serialization.Formatters.Binary.ParseRecord onStack)

Disassembly:
	0x032B7CA0 LDR W8, [X20 + 0x18]
	0x032B7CA4 CMP W22, W8
	0x032B7CA8 B.CS 0x32B7D24
	0x032B7CAC ADD X8, X20, X22, 0x3, LSL
	0x032B7CB0 STR X21, [X8 + 0x20]
	0x032B7CB4 B 0x32B7D04
	0x032B7CB8 LDR X0, [X19 + 0xE8]
	0x032B7CBC CBZ X0, 0x32B7D28
	0x032B7CC0 ADRP X9, 0xE3C000
	0x032B7CC4 LDR X9, [X9 + 0xEF0]
	0x032B7CC8 LDR X8, [X0]
	0x032B7CCC LDR X1, [X9]
	0x032B7CD0 LDRB W10, [X8 + 0x130]
	0x032B7CD4 LDRB W9, [X1 + 0x130]
	0x032B7CD8 CMP W10, W9
	0x032B7CDC B.CC 0x32B7D30
	0x032B7CE0 LDR X8, [X8 + 0xC8]
	0x032B7CE4 ADD X8, X8, X9, 0x3, LSL
	0x032B7CE8 LDUR X8, [X8 - 0x8]
	0x032B7CEC CMP X8, X1
	0x032B7CF0 B.NE 0x32B7D30
	0x032B7CF4 LDR X2, [X19 + 0xA8]
	0x032B7CF8 MOV X1, X21
	0x032B7CFC MOV X3, X31
	0x032B7D00 BL 0x33A2280
	0x032B7D04 LDR W8, [X19 + 0xB0]
	0x032B7D08 LDP X22, X21, [X31 + 0x20]
	0x032B7D0C LDP X24, X23, [X31 + 0x10]
	0x032B7D10 ADD W8, W8, 0x1
	0x032B7D14 STR W8, [X19 + 0xB0]
	0x032B7D18 LDP X20, X19, [X31 + 0x30]
	0x032B7D1C LDR X30, [X31], #0x40
	0x032B7D20 RET
	0x032B7D24 BL 0x1C16F28
	0x032B7D28 BL 0x1C16F20
	0x032B7D2C MOV X0, X19
	0x032B7D30 BL 0x1C171E0
	0x032B7D34 MOV X1, X20
	0x032B7D38 MOV X2, X19
	0x032B7D3C BL 0x32B6CA0
	0x032B7D40 BL 0x1C16F44
	0x032B7D44 MOV X1, X31
	0x032B7D48 BL 0x1C16DEC
	0x032B7D4C ADRP X0, 0xE6E000
	0x032B7D50 LDR X0, [X0 + 0x470]
	0x032B7D54 BL 0x1C16D08
	0x032B7D58 MOV X1, X31
	0x032B7D5C BL 0x33BDD84
	0x032B7D60 MOV X19, X0
	0x032B7D64 ADRP X0, 0xE66000
	0x032B7D68 LDR X0, [X0 + 0x2E0]
	0x032B7D6C BL 0x1C16D08
	0x032B7D70 BL 0x1C16F10
	0x032B7D74 MOV X1, X19
	0x032B7D78 MOV X2, X31
	0x032B7D7C MOV X20, X0
	0x032B7D80 BL 0x329F100
	0x032B7D84 ADRP X0, 0xE6E000
	0x032B7D88 LDR X0, [X0 + 0x478]
	0x032B7D8C BL 0x1C16D08
	0x032B7D90 MOV X1, X0
	0x032B7D94 MOV X0, X20
	0x032B7D98 BL 0x1C16DEC
	0x032B7D9C MOV X0, X21
	0x032B7DA0 BL 0x1C171E0
	0x032B7DA4 STR X30, [X31 - 0x10]!
	0x032B7DA8 CBZ X1, 0x32B7DE0
	0x032B7DAC LDRB W8, [X1 + 0x100]
	0x032B7DB0 MOV X3, X2
	0x032B7DB4 MOV X2, X1
	0x032B7DB8 CBZ W8, 0x32B7DC4
	0x032B7DBC LDR X30, [X31], #0x10
	0x032B7DC0 RET
	0x032B7DC4 LDR X8, [X2 + 0x58]
	0x032B7DC8 CMP X8, 0x1
	0x032B7DCC B.LT 0x32B7DBC
	0x032B7DD0 LDR X1, [X2 + 0x30]
	0x032B7DD4 MOVZ W4, 0x1
	0x032B7DD8 LDR X30, [X31], #0x10
	0x032B7DDC B 0x32B7E0C
	0x032B7DE0 BL 0x1C16F20
	0x032B7DE4 STR X30, [X31 - 0x10]!
	0x032B7DE8 CBZ X1, 0x32B7E08
	0x032B7DEC LDR W8, [X1 + 0x20]
	0x032B7DF0 CMP W8, 0x2
	0x032B7DF4 B.NE 0x32B7E00
	0x032B7DF8 LDR X30, [X31], #0x10
	0x032B7DFC B 0x32B64F4
	0x032B7E00 LDR X30, [X31], #0x10
	0x032B7E04 RET
	0x032B7E08 BL 0x1C16F20
	0x032B7E0C STR X30, [X31 - 0x40]!
	0x032B7E10 STP X24, X23, [X31 + 0x10]
	0x032B7E14 STP X22, X21, [X31 + 0x20]
	0x032B7E18 STP X20, X19, [X31 + 0x30]
	0x032B7E1C ADRP X24, 0x1125000
	0x032B7E20 LDRB W8, [X24 + 0x81C]
	0x032B7E24 MOV W20, W4
	0x032B7E28 MOV X22, X3
	0x032B7E2C MOV X21, X2
	0x032B7E30 MOV X19, X1
	0x032B7E34 MOV X23, X0
	0x032B7E38 TBNZ X8, 0x0, 0x32B7E50
	0x032B7E3C ADRP X0, 0xE3E000
	0x032B7E40 LDR X0, [X0 + 0x278]
	0x032B7E44 BL 0x1C16CF4
	0x032B7E48 MOVZ W8, 0x1
	0x032B7E4C STRB W8, [X24 + 0x81C]
	0x032B7E50 CBZ X21, 0x32B7F20
	0x032B7E54 LDRB W8, [X21 + 0x100]
	0x032B7E58 CBZ W8, 0x32B7E70
	0x032B7E5C LDP X20, X19, [X31 + 0x30]
	0x032B7E60 LDP X22, X21, [X31 + 0x20]
	0x032B7E64 LDP X24, X23, [X31 + 0x10]
	0x032B7E68 LDR X30, [X31], #0x40
	0x032B7E6C RET
	0x032B7E70 MOVZ W8, 0x1
	0x032B7E74 STRB W8, [X21 + 0x100]
	0x032B7E78 CBZ X22, 0x32B7EA4
	0x032B7E7C LDR X24, [X22 + 0xA8]
	0x032B7E80 LDR X0, [X22 + 0xD8]
	0x032B7E84 LDR X22, [X22 + 0x58]
	0x032B7E88 CBZ X0, 0x32B7EA8
	0x032B7E8C LDRB W8, [X0 + 0x2C]
	0x032B7E90 CBNZ W8, 0x32B7EA8
	0x032B7E94 LDR X1, [X21 + 0x28]
	0x032B7E98 BL 0x32B5040

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X0, 0xE3D000
	009 Move X0, [X0+2512]
	010 Move X22, X2
	011 Move X21, X1
	012 Call 0x1C17D08
	013 Move W1, 1
	014 Call 0x1C17D6C
	015 Move X19, X0
	016 Move X0, 0xE3D000
	017 Move X0, [X0+2760]
	018 Call 0x1C17D08
	019 Move W1, 7
	020 Call 0x1C17D6C
	021 Compare X22, 0
	022 JumpIfEqual {26}
	023 Move X20, X0
	024 Compare X0, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17F20
	027 Move W8, [X20+24]
	028 Compare W8, 0
	029 JumpIfEqual {88}
	030 Move X8, [X22+40]
	031 Move X0, 0xE3D000
	032 Move [X20+32], X8
	033 Move X0, [X0+3544]
	034 Call 0x1C17D08
	035 Move W8, [X20+24]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move [X20+40], X0
	038 Move W8, [X22+16]
	039 Move X0, 0xE6F000
	040 Move [X31+12], W8
	041 Move X0, [X0+1072]
	042 Call 0x1C17D08
	043 Add X1, X31, 12
	044 Call 0x1C17E04
	045 Move X23, X0
	046 Move X0, 0xE6F000
	047 Move X0, [X0+1080]
	048 Call 0x1C17D08
	049 Move X22, X0
	050 Compare X23, 0
	051 JumpIfNotEqual {53}
	052 Move X0, X31
	053 Move X8, [X23]
	054 Move X0, X23
	055 Move X9, [X8+360]
	056 Move X1, [X8+368]
	057 NotImplemented "Instruction BLR not yet implemented."
	058 Move W8, [X20+24]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move [X20+48], X0
	061 Move X0, 0xE3D000
	062 Move X0, [X0+3544]
	063 Call 0x1C17D08
	064 Move W8, [X20+24]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move [X20+56], X0
	067 Compare X21, 0
	068 JumpIfEqual {26}
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X8, [X21+40]
	071 Move X0, 0xE3D000
	072 Move [X20+64], X8
	073 Move X0, [X0+3544]
	074 Call 0x1C17D08
	075 Move W8, [X20+24]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move [X20+72], X0
	078 Move W8, [X21+16]
	079 Move X0, 0xE6F000
	080 Move [X31+8], W8
	081 Move X0, [X0+1072]
	082 Call 0x1C17D08
	083 Add X1, X31, 8
	084 Call 0x1C17E04
	085 Compare X0, 0
	086 JumpIfNotEqual {89}
	087 Move X21, X31
	088 Call 0x1C17F28
	089 Move X8, [X0]
	090 Move X9, [X8+360]
	091 Move X1, [X8+368]
	092 NotImplemented "Instruction BLR not yet implemented."
	093 Move X21, X0
	094 Move X0, X20
	095 Call 0x19913C0
	096 Move W1, 6
	097 Move X0, X20
	098 Move X2, X21
	099 Call 0x1994444
	100 Move X0, X20
	101 Move X1, X31
	102 Call String.Concat, X0
	103 Move X20, X0
	104 Move X0, X19
	105 Call 0x19913C0
	106 Move X0, X19
	107 Move X1, X20
	108 Call 0x19990B4
	109 Move X0, X19
	110 Move X1, X31
	111 Move X2, X20
	112 Call 0x1994444
	113 Move X0, X22
	114 Move X1, X19
	115 Move X2, X31
	116 Call Environment.GetResourceString, X0, X1
	117 Move X19, X0
	118 Move X0, 0xE67000
	119 Move X0, [X0+736]
	120 Call 0x1C17D08
	121 Call 0x1C17F10
	122 Move X1, X19
	123 Move X2, X31
	124 Move X20, X0
	125 Call SerializationException..ctor, X0, X1
	126 Move X0, 0xE6F000
	127 Move X0, [X0+1088]
	128 Call 0x1C17D08
	129 Move X1, X0
	130 Move X0, X20
	131 Call 0x1C17DEC

Method: System.Void ParseSerializedStreamHeader(System.Runtime.Serialization.Formatters.Binary.ParseRecord pr)

Disassembly:
	0x032B71AC LDR W13, [X12, X10, LSL #2]
	0x032B71B0 CBZ W13, 0x32B71BC
	0x032B71B4 MOVZ W8, 0x1
	0x032B71B8 STRB W8, [X19 + 0xC0]
	0x032B71BC ADD X10, X10, 0x1
	0x032B71C0 CMP X10, X9
	0x032B71C4 B.LT 0x32B71A4

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+136]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X2, X31
	006 Move X30, [X31+16]
	007 Call SerStack.Push, X0, X1
	008 Return 
	009 Call 0x1C17F20

Method: System.Void ParseSerializedStreamHeaderEnd(System.Runtime.Serialization.Formatters.Binary.ParseRecord pr)

Disassembly:
	0x032B71C8 B 0x32B71D0
	0x032B71CC MOV W8, W31
	0x032B71D0 LDR X0, [X19 + 0x70]
	0x032B71D4 CBZ X0, 0x32B734C
	0x032B71D8 LDR X1, [X19 + 0x88]
	0x032B71DC ANDS W31, W8, 0xFF
	0x032B71E0 B.EQ 0x32B7340

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+136]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call SerStack.Pop, X0
	008 Return 
	009 Call 0x1C17F20

Method: System.Void ParseObject(System.Runtime.Serialization.Formatters.Binary.ParseRecord pr)

Disassembly:
	0x032B71E4 MOV X3, X31
	0x032B71E8 BL 0x33A29A0
	0x032B71EC B 0x32B7348
	0x032B71F0 LDR X8, [X19 + 0x88]
	0x032B71F4 CBZ X8, 0x32B7454
	0x032B71F8 LDR W9, [X8 + 0x18]
	0x032B71FC CBZ W9, 0x32B7450
	0x032B7200 LDR W1, [X8 + 0x20]
	0x032B7204 ADRP X8, 0xE3C000
	0x032B7208 LDR X8, [X8 + 0xAC8]
	0x032B720C B 0x32B722C
	0x032B7210 LDR X8, [X19 + 0x88]
	0x032B7214 CBZ X8, 0x32B7454
	0x032B7218 LDR W9, [X8 + 0x18]
	0x032B721C CBZ W9, 0x32B7450
	0x032B7220 LDR W1, [X8 + 0x20]
	0x032B7224 ADRP X8, 0xE3C000
	0x032B7228 LDR X8, [X8 + 0x9D0]
	0x032B722C LDR X0, [X8]
	0x032B7230 BL 0x1C16D6C
	0x032B7234 MOV W23, W31
	0x032B7238 STR X0, [X19 + 0xF0]
	0x032B723C STR X0, [X19 + 0xE8]
	0x032B7240 LDR W8, [X19 + 0x18]
	0x032B7244 STRB W31, [X19 + 0xC0]
	0x032B7248 CMP W8, 0x1
	0x032B724C B.NE 0x32B73CC
	0x032B7250 LDR X0, [X22]
	0x032B7254 LDR W21, [X19 + 0x7C]
	0x032B7258 LDR W8, [X0 + 0xE0]
	0x032B725C CBNZ W8, 0x32B7264
	0x032B7260 BL 0x1C16DFC
	0x032B7264 MOV W0, W21
	0x032B7268 BL 0x32AF118
	0x032B726C TBZ X0, 0x0, 0x32B72E0
	0x032B7270 ADRP X8, 0xE6E000
	0x032B7274 LDR W22, [X19 + 0x7C]
	0x032B7278 LDR X21, [X19 + 0xE8]
	0x032B727C LDR X8, [X8 + 0x450]
	0x032B7280 LDR X0, [X8]
	0x032B7284 BL 0x1C16F10
	0x032B7288 MOV X23, X0
	0x032B728C CBZ X21, 0x32B72C4
	0x032B7290 ADRP X9, 0xE3C000
	0x032B7294 LDR X9, [X9 + 0xEF0]
	0x032B7298 LDR X8, [X21]
	0x032B729C LDR X1, [X9]
	0x032B72A0 LDRB W10, [X8 + 0x130]
	0x032B72A4 LDRB W9, [X1 + 0x130]
	0x032B72A8 CMP W10, W9
	0x032B72AC B.CC 0x32B7524
	0x032B72B0 LDR X8, [X8 + 0xC8]
	0x032B72B4 ADD X8, X8, X9, 0x3, LSL
	0x032B72B8 LDUR X8, [X8 - 0x8]
	0x032B72BC CMP X8, X1
	0x032B72C0 B.NE 0x32B7524
	0x032B72C4 MOV X0, X23
	0x032B72C8 MOV W1, W22
	0x032B72CC MOV X2, X21
	0x032B72D0 MOV X3, X31
	0x032B72D4 BL 0x32BED9C
	0x032B72D8 STR X23, [X19 + 0xF8]
	0x032B72DC B 0x32B73CC
	0x032B72E0 CBZ W23, 0x32B73CC
	0x032B72E4 LDR X0, [X19 + 0x70]
	0x032B72E8 CBZ X0, 0x32B73CC
	0x032B72EC MOV X1, X31
	0x032B72F0 BL 0x33970C4
	0x032B72F4 TBNZ X0, 0x0, 0x32B73CC
	0x032B72F8 LDRB W8, [X19 + 0xC0]
	0x032B72FC CBNZ W8, 0x32B73CC
	0x032B7300 LDR X21, [X19 + 0xE8]
	0x032B7304 CBZ X21, 0x32B73C8
	0x032B7308 ADRP X23, 0xE3C000
	0x032B730C LDR X23, [X23 + 0x9D0]
	0x032B7310 MOV X0, X21
	0x032B7314 LDR X22, [X23]
	0x032B7318 MOV X1, X22
	0x032B731C BL 0x1C16E00
	0x032B7320 CBZ X0, 0x32B7518
	0x032B7324 STR X0, [X19 + 0xF0]
	0x032B7328 LDR X22, [X23]
	0x032B732C MOV X0, X21
	0x032B7330 MOV X1, X22
	0x032B7334 BL 0x1C16E00
	0x032B7338 CBNZ X0, 0x32B73CC
	0x032B733C B 0x32B7518
	0x032B7340 MOV X2, X31
	0x032B7344 BL 0x33A2DF4
	0x032B7348 STR X0, [X19 + 0xE8]
	0x032B734C LDRSW X1, [X19 + 0x80]
	0x032B7350 CMP W1, 0x1
	0x032B7354 B.LT 0x32B7390
	0x032B7358 LDR X10, [X19 + 0x88]
	0x032B735C CBZ X10, 0x32B7454
	0x032B7360 LDR W9, [X10 + 0x18]
	0x032B7364 MOV X8, X31
	0x032B7368 ADD X10, X10, 0x20
	0x032B736C MOVZ W20, 0x1
	0x032B7370 CMP X8, X9
	0x032B7374 B.CS 0x32B7450
	0x032B7378 LDR W11, [X10, X8, LSL #2]
	0x032B737C ADD X8, X8, 0x1
	0x032B7380 CMP X8, X1
	0x032B7384 MUL W20, W11, W20
	0x032B7388 B.LT 0x32B7370
	0x032B738C B 0x32B7394
	0x032B7390 MOVZ W20, 0x1
	0x032B7394 ADRP X21, 0xE3D000
	0x032B7398 LDR X21, [X21 + 0xE58]
	0x032B739C LDR X0, [X21]
	0x032B73A0 BL 0x1C16D6C
	0x032B73A4 STR X0, [X19 + 0xA8]
	0x032B73A8 LDR W1, [X19 + 0x80]
	0x032B73AC LDR X0, [X21]
	0x032B73B0 BL 0x1C16D6C
	0x032B73B4 STR X0, [X19 + 0xB8]
	0x032B73B8 STR W20, [X19 + 0xB4]
	0x032B73BC B 0x32B743C
	0x032B73C0 MOVZ W23, 0x1
	0x032B73C4 B 0x32B7240
	0x032B73C8 STR X31, [X19 + 0xF0]
	0x032B73CC LDR W8, [X19 + 0x24]
	0x032B73D0 CMP W8, 0x3
	0x032B73D4 B.NE 0x32B7424
	0x032B73D8 LDR X21, [X19 + 0xE8]
	0x032B73DC CBZ X21, 0x32B7420
	0x032B73E0 ADRP X23, 0xE6E000
	0x032B73E4 LDR X23, [X23 + 0x448]
	0x032B73E8 MOV X0, X21
	0x032B73EC LDR X22, [X23]
	0x032B73F0 MOV X1, X22
	0x032B73F4 BL 0x1C16E00
	0x032B73F8 CBZ X0, 0x32B7518
	0x032B73FC STR X0, [X20 + 0x68]
	0x032B7400 LDR X20, [X23]
	0x032B7404 MOV X0, X21
	0x032B7408 MOV X1, X20
	0x032B740C BL 0x1C16E00
	0x032B7410 CBNZ X0, 0x32B7424
	0x032B7414 MOV X0, X21
	0x032B7418 MOV X1, X20
	0x032B741C BL 0x1C171E0
	0x032B7420 STR X31, [X20 + 0x68]
	0x032B7424 ADRP X8, 0xE3D000
	0x032B7428 LDR X8, [X8 + 0xE58]
	0x032B742C MOVZ W1, 0x1
	0x032B7430 LDR X0, [X8]
	0x032B7434 BL 0x1C16D6C
	0x032B7438 STR X0, [X19 + 0xA8]
	0x032B743C LDP X20, X19, [X31 + 0x30]
	0x032B7440 LDP X22, X21, [X31 + 0x20]
	0x032B7444 LDP X30, X23, [X31 + 0x10]
	0x032B7448 ADD X31, X31, 0x40
	0x032B744C RET
	0x032B7450 BL 0x1C16F28
	0x032B7454 BL 0x1C16F20
	0x032B7458 MOV X0, X3
	0x032B745C BL 0x1C171E0
	0x032B7460 ADRP X0, 0xE3C000
	0x032B7464 LDR X0, [X0 + 0x9D0]
	0x032B7468 BL 0x1C16D08
	0x032B746C MOVZ W1, 0x1
	0x032B7470 BL 0x1C16D6C
	0x032B7474 MOV X20, X0
	0x032B7478 MOV X0, X19
	0x032B747C BL 0x19903C0
	0x032B7480 LDR W8, [X19 + 0x18]
	0x032B7484 ADRP X0, 0xE6E000
	0x032B7488 STR W8, [X31 + 0xC]
	0x032B748C LDR X0, [X0 + 0x458]
	0x032B7490 BL 0x1C16D08
	0x032B7494 ADD X1, X31, 0xC
	0x032B7498 BL 0x1C16E04
	0x032B749C MOV X19, X0
	0x032B74A0 MOV X0, X20
	0x032B74A4 BL 0x19903C0
	0x032B74A8 MOV X0, X20
	0x032B74AC MOV X1, X19
	0x032B74B0 BL 0x19980B4
	0x032B74B4 MOV X0, X20
	0x032B74B8 MOV X1, X31
	0x032B74BC MOV X2, X19
	0x032B74C0 BL 0x1993444
	0x032B74C4 ADRP X0, 0xE6E000
	0x032B74C8 LDR X0, [X0 + 0x460]
	0x032B74CC BL 0x1C16D08
	0x032B74D0 MOV X1, X20
	0x032B74D4 MOV X2, X31
	0x032B74D8 BL 0x33BFB40
	0x032B74DC MOV X19, X0
	0x032B74E0 ADRP X0, 0xE66000
	0x032B74E4 LDR X0, [X0 + 0x2E0]
	0x032B74E8 BL 0x1C16D08
	0x032B74EC BL 0x1C16F10
	0x032B74F0 MOV X1, X19

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X21, 0x1126000
	008 Move W8, [X21+2070]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0xE6E000
	016 Move X0, [X0+3968]
	017 Call 0x1C17CF4
	018 Move X0, 0xE6E000
	019 Move X0, [X0+2928]
	020 Call 0x1C17CF4
	021 Move X0, 0xE6F000
	022 Move X0, [X0+96]
	023 Call 0x1C17CF4
	024 Move X0, 0xE6E000
	025 Move X0, [X0+3384]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+2070], W8
	029 Move W8, [X20+160]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Move X0, X20
	033 Call ObjectReader.InitFullDeserialization, X0
	034 Compare X19, 0
	035 JumpIfEqual {177}
	036 Move W8, [X19+36]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X8, [X19+88]
	039 Move [X20+72], X8
	040 Move W8, [X19+16]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X0, [X20+136]
	043 Compare X0, 0
	044 JumpIfEqual {177}
	045 Move X1, X19
	046 Move X2, X31
	047 Call SerStack.Push, X0, X1
	048 Move W8, [X19+20]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X0, X20
	051 Move X1, X19
	052 Move X20, [X31+48]
	053 Move X19, [X31+56]
	054 Move X22, [X31+32]
	055 Move X21, [X31+40]
	056 Move X30, [X31+16]
	057 Add X31, X31, 64
	058 Call ObjectReader.ParseArray, X0, X1
	059 Return 
	060 Move X21, [X19+72]
	061 Compare X21, 0
	062 JumpIfEqual {118}
	063 Move X22, 0xE6E000
	064 Move X22, [X22+3968]
	065 Move X0, [X22]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {71}
	069 Call 0x1C17DFC
	070 Move X0, [X22]
	071 Move X8, [X0+184]
	072 Move X8, [X8+56]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X1, [X19+72]
	075 Move X0, X20
	076 Call ObjectReader.CheckSerializable, X0, X1
	077 Move X8, 0xE6E000
	078 Move X8, [X8+2928]
	079 Move X21, [X19+72]
	080 Move X0, [X8]
	081 Move W8, [X0+224]
	082 Compare W8, 0
	083 JumpIfNotEqual {85}
	084 Call 0x1C17DFC
	085 Move X0, X21
	086 Move X1, X31
	087 Call FormatterServices.GetUninitializedObject, X0
	088 Move [X19+232], X0
	089 Move X1, X0
	090 Move X0, [X20+48]
	091 Compare X0, 0
	092 JumpIfEqual {177}
	093 Move X2, X31
	094 Call ObjectManager.RaiseOnDeserializingEvent, X0, X1
	095 Move X8, [X19+232]
	096 Compare X8, 0
	097 JumpIfEqual {178}
	098 Move W9, [X19+36]
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X9, [X20+48]
	101 Move [X20+96], X8
	102 Compare X9, 0
	103 JumpIfEqual {105}
	104 Move [X9+40], X8
	105 Move X8, [X19+216]
	106 Compare X8, 0
	107 JumpIfNotEqual {128}
	108 Move X0, [X19+72]
	109 Move X1, [X20+24]
	110 Move X2, [X20+32]
	111 Move X3, [X20+40]
	112 Move X4, [X20+48]
	113 Move X5, [X20+120]
	114 Move X6, [X20+128]
	115 Move W7, [X20+80]
	116 Call ReadObjectInfo.Create, X0, X1, X2, X3, X4, X5, X6
	117 Move [X19+216], X0
	118 Move X8, 0xE6E000
	119 Move X20, [X19+64]
	120 Move X8, [X8+3384]
	121 Move X0, [X8]
	122 Call 0x1C17F10
	123 Move X1, X20
	124 Move X2, X31
	125 Move X21, X0
	126 Call TypeLoadExceptionHolder..ctor, X0, X1
	127 Move [X19+232], X21
	128 Move X20, [X31+48]
	129 Move X19, [X31+56]
	130 Move X22, [X31+32]
	131 Move X21, [X31+40]
	132 Move X30, [X31+16]
	133 Add X31, X31, 64
	134 Return 
	135 Move X8, [X19+48]
	136 Compare X8, 0
	137 JumpIfEqual {128}
	138 Move W9, [X19+36]
	139 Move [X19+232], X8
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Move X9, [X20+48]
	142 Move [X20+96], X8
	143 Compare X9, 0
	144 JumpIfEqual {128}
	145 Move [X9+40], X8
	146 Move X0, [X20+136]
	147 Compare X0, 0
	148 JumpIfEqual {177}
	149 Move X1, X31
	150 Call SerStack.Pop, X0
	151 Move X0, [X20+136]
	152 Compare X0, 0
	153 JumpIfEqual {177}
	154 Move X21, [X19+232]
	155 Move X1, X31
	156 Call SerStack.Peek, X0
	157 Move X3, X0
	158 Compare X0, 0
	159 JumpIfEqual {165}
	160 Move X8, 0xE6F000
	161 Move X8, [X8+96]
	162 Move X1, [X8]
	163 Move X8, [X3]
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move X0, X20
	166 Move X1, X21
	167 Move X2, X19
	168 Move X20, [X31+48]
	169 Move X19, [X31+56]
	170 Move X22, [X31+32]
	171 Move X21, [X31+40]
	172 Move X30, [X31+16]
	173 Move W4, W31
	174 Add X31, X31, 64
	175 Call ObjectReader.RegisterObject, X0, X1, X2, X3, X4
	176 Return 
	177 Call 0x1C17F20
	178 Move X0, 0xE3D000
	179 Move X0, [X0+2512]
	180 Call 0x1C17D08
	181 Move W1, 1
	182 Call 0x1C17D6C
	183 Move X20, X0
	184 Move X0, X19
	185 Call 0x19913C0
	186 Move X19, [X19+72]
	187 Move X0, X20
	188 Call 0x19913C0
	189 Move X0, X20
	190 Move X1, X19
	191 Call 0x19990B4
	192 Move X0, X20
	193 Move X1, X31
	194 Move X2, X19
	195 Call 0x1994444
	196 Move X0, 0xE6F000
	197 Move X0, [X0+1032]
	198 Call 0x1C17D08
	199 Move X1, X20
	200 Move X2, X31
	201 Call Environment.GetResourceString, X0, X1
	202 Move X19, X0
	203 Move X0, 0xE67000
	204 Move X0, [X0+736]
	205 Call 0x1C17D08
	206 Call 0x1C17F10
	207 Move X1, X19
	208 Move X2, X31
	209 Move X20, X0
	210 Call SerializationException..ctor, X0, X1
	211 Move X0, 0xE6F000
	212 Move X0, [X0+1040]
	213 Call 0x1C17D08
	214 Move X1, X0
	215 Move X0, X20
	216 Call 0x1C17DEC
	217 Move X0, X3
	218 Call 0x1C181E0

Method: System.Void ParseObjectEnd(System.Runtime.Serialization.Formatters.Binary.ParseRecord pr)

Disassembly:
	0x032B74F4 MOV X2, X31
	0x032B74F8 MOV X20, X0
	0x032B74FC BL 0x329F100
	0x032B7500 ADRP X0, 0xE6E000
	0x032B7504 LDR X0, [X0 + 0x468]
	0x032B7508 BL 0x1C16D08
	0x032B750C MOV X1, X0
	0x032B7510 MOV X0, X20
	0x032B7514 BL 0x1C16DEC
	0x032B7518 MOV X0, X21
	0x032B751C MOV X1, X22
	0x032B7520 BL 0x1C171E0
	0x032B7524 MOV X0, X21
	0x032B7528 BL 0x1C171E0
	0x032B752C MOV W4, W31
	0x032B7530 B 0x32B7E0C
	0x032B7534 STR X30, [X31 - 0x10]!
	0x032B7538 CBZ X1, 0x32B75F4
	0x032B753C LDR W9, [X1 + 0x80]
	0x032B7540 SUBS W9, W9, 0x1
	0x032B7544 B.MI 0x32B75E8
	0x032B7548 LDR X0, [X1 + 0xB8]
	0x032B754C CBZ X0, 0x32B75F4
	0x032B7550 LDR X8, [X0 + 0x18]
	0x032B7554 CMP W9, W8
	0x032B7558 B.CS 0x32B75F0
	0x032B755C MOV W12, W9
	0x032B7560 ADD X10, X0, X12, 0x2, LSL
	0x032B7564 LDR W11, [X10 + 0x20]!
	0x032B7568 LDR X13, [X1 + 0x88]
	0x032B756C CBZ X13, 0x32B75F4
	0x032B7570 LDR W14, [X13 + 0x18]
	0x032B7574 CMP W9, W14
	0x032B7578 B.CS 0x32B75F0
	0x032B757C ADD X12, X13, X12, 0x2, LSL
	0x032B7580 LDR W12, [X12 + 0x20]
	0x032B7584 SUB W12, W12, 0x1
	0x032B7588 CMP W11, W12
	0x032B758C B.GE 0x32B7540
	0x032B7590 ADD W11, W11, 0x1
	0x032B7594 STR W11, [X10]
	0x032B7598 LDR W2, [X1 + 0x80]
	0x032B759C SUB W10, W2, 0x1
	0x032B75A0 CMP W9, W10
	0x032B75A4 B.GE 0x32B75D8
	0x032B75A8 ADD W9, W9, 0x1
	0x032B75AC CMP W9, W2
	0x032B75B0 B.GE 0x32B75D8
	0x032B75B4 MOV W9, W9
	0x032B75B8 ADD X10, X0, 0x20
	0x032B75BC CMP W9, W8
	0x032B75C0 B.CS 0x32B75F0
	0x032B75C4 STR W31, [X10, X9, LSL #2]
	0x032B75C8 LDRSW X2, [X1 + 0x80]
	0x032B75CC ADD X9, X9, 0x1
	0x032B75D0 CMP X9, X2
	0x032B75D4 B.LT 0x32B75BC
	0x032B75D8 LDR X1, [X1 + 0xA8]
	0x032B75DC MOV X3, X31
	0x032B75E0 LDR X30, [X31], #0x10
	0x032B75E4 B 0x33A0C7C
	0x032B75E8 LDR X30, [X31], #0x10
	0x032B75EC RET
	0x032B75F0 BL 0x1C16F28
	0x032B75F4 BL 0x1C16F20
	0x032B75F8 STR X30, [X31 - 0x40]!
	0x032B75FC STP X24, X23, [X31 + 0x10]
	0x032B7600 STP X22, X21, [X31 + 0x20]
	0x032B7604 STP X20, X19, [X31 + 0x30]
	0x032B7608 ADRP X19, 0x1125000
	0x032B760C LDRB W8, [X19 + 0x819]
	0x032B7610 MOV X20, X1
	0x032B7614 MOV X21, X0
	0x032B7618 TBNZ X8, 0x0, 0x32B7678
	0x032B761C ADRP X0, 0xE6D000
	0x032B7620 LDR X0, [X0 + 0xF80]
	0x032B7624 BL 0x1C16CF4
	0x032B7628 ADRP X0, 0xE6D000
	0x032B762C LDR X0, [X0 + 0xB70]
	0x032B7630 BL 0x1C16CF4
	0x032B7634 ADRP X0, 0xE3D000
	0x032B7638 LDR X0, [X0 + 0xE58]
	0x032B763C BL 0x1C16CF4
	0x032B7640 ADRP X0, 0xE6D000
	0x032B7644 LDR X0, [X0 + 0xF88]
	0x032B7648 BL 0x1C16CF4
	0x032B764C ADRP X0, 0xE6E000
	0x032B7650 LDR X0, [X0 + 0x60]
	0x032B7654 BL 0x1C16CF4
	0x032B7658 ADRP X0, 0xE3C000
	0x032B765C LDR X0, [X0 + 0xEF0]
	0x032B7660 BL 0x1C16CF4
	0x032B7664 ADRP X0, 0xE6E000
	0x032B7668 LDR X0, [X0 + 0x418]
	0x032B766C BL 0x1C16CF4
	0x032B7670 MOVZ W8, 0x1
	0x032B7674 STRB W8, [X19 + 0x819]
	0x032B7678 LDR X0, [X21 + 0x88]
	0x032B767C CBZ X0, 0x32B7D28
	0x032B7680 MOV X1, X31
	0x032B7684 BL 0x32BD930
	0x032B7688 CBZ X0, 0x32B7D28
	0x032B768C ADRP X8, 0xE6E000
	0x032B7690 LDR X8, [X8 + 0x60]
	0x032B7694 MOV X19, X0
	0x032B7698 LDR X1, [X8]
	0x032B769C LDR X8, [X0]
	0x032B76A0 CMP X8, X1
	0x032B76A4 B.NE 0x32B7D2C
	0x032B76A8 LDR W8, [X19 + 0x18]
	0x032B76AC CMP W8, 0x3
	0x032B76B0 B.NE 0x32B7748
	0x032B76B4 LDR W8, [X19 + 0xB0]
	0x032B76B8 CMP W8, 0x1
	0x032B76BC B.LT 0x32B76C8
	0x032B76C0 MOV X1, X19
	0x032B76C4 BL 0x32B7534
	0x032B76C8 LDRB W8, [X19 + 0xC0]
	0x032B76CC CBZ W8, 0x32B7794
	0x032B76D0 LDR W8, [X19 + 0x80]
	0x032B76D4 CMP W8, 0x1
	0x032B76D8 B.LT 0x32B7794
	0x032B76DC LDR X8, [X19 + 0xB8]
	0x032B76E0 CBZ X8, 0x32B7D28
	0x032B76E4 LDR X9, [X19 + 0xA8]
	0x032B76E8 LDR W10, [X8 + 0x18]
	0x032B76EC MOVZ W11, 0x8
	0x032B76F0 SUB X13, X11, 0x8
	0x032B76F4 CMP X13, X10
	0x032B76F8 B.CS 0x32B7D24
	0x032B76FC LDR X12, [X19 + 0x98]
	0x032B7700 CBZ X12, 0x32B7D28
	0x032B7704 LDR W14, [X12 + 0x18]
	0x032B7708 CMP X13, X14
	0x032B770C B.CS 0x32B7D24
	0x032B7710 CBZ X9, 0x32B7D28
	0x032B7714 LDR W14, [X9 + 0x18]
	0x032B7718 CMP X13, X14
	0x032B771C B.CS 0x32B7D24

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x1126000
	008 Move W8, [X21+2071]
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0xE6E000
	016 Move X0, [X0+3968]
	017 Call 0x1C17CF4
	018 Move X0, 0xE6F000
	019 Move X0, [X0+96]
	020 Call 0x1C17CF4
	021 Move X0, 0xE6F000
	022 Move X0, [X0+1048]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+2071], W8
	026 Move X0, [X19+136]
	027 Compare X0, 0
	028 JumpIfEqual {143}
	029 Move X22, 0xE6F000
	030 Move X22, [X22+96]
	031 Move X1, X31
	032 Call SerStack.Peek, X0
	033 Compare X0, 0
	034 JumpIfEqual {38}
	035 Move X1, [X22]
	036 Move X8, [X0]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CSEL not yet implemented."
	040 Compare X20, 0
	041 JumpIfEqual {143}
	042 Move W8, [X20+36]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X23, 0xE6E000
	045 Move X23, [X23+3968]
	046 Move X21, [X20+72]
	047 Move X0, [X23]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {53}
	051 Call 0x1C17DFC
	052 Move X0, [X23]
	053 Move X8, [X0+184]
	054 Move X8, [X8+56]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X0, [X19+136]
	057 Compare X0, 0
	058 JumpIfEqual {143}
	059 Move X1, X31
	060 Call SerStack.Pop, X0
	061 Move X0, [X19+136]
	062 Compare X0, 0
	063 JumpIfEqual {143}
	064 Move X1, X31
	065 Call SerStack.Peek, X0
	066 Move X21, X0
	067 Compare X0, 0
	068 JumpIfEqual {72}
	069 Move X1, [X22]
	070 Move X8, [X21]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X1, [X20+232]
	073 Compare X1, 0
	074 JumpIfEqual {151}
	075 Move W8, [X20+20]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move W8, [X20+36]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move X8, [X19+48]
	080 Move [X19+96], X1
	081 Compare X8, 0
	082 JumpIfEqual {84}
	083 Move [X8+40], X1
	084 Move X0, X19
	085 Move X2, X20
	086 Move X3, X21
	087 Move X20, [X31+32]
	088 Move X19, [X31+40]
	089 Move X22, [X31+16]
	090 Move X21, [X31+24]
	091 Move W4, W31
	092 Move X30, [X31+48]
	093 Move X23, [X31+56]
	094 Call ObjectReader.RegisterObject, X0, X1, X2, X3, X4
	095 Return 
	096 Move X0, [X20+216]
	097 Compare X0, 0
	098 JumpIfEqual {143}
	099 Move X2, [X20+264]
	100 Call ReadObjectInfo.PopulateObjectMembers, X0, X1, X2
	101 Move W8, [X20+256]
	102 Compare W8, 0
	103 JumpIfNotEqual {112}
	104 Move X8, [X20+88]
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move X1, [X20+232]
	107 Move X0, X19
	108 Move X2, X20
	109 Move X3, X21
	110 Move W4, W31
	111 Call ObjectReader.RegisterObject, X0, X1, X2, X3, X4
	112 Move W8, [X20+224]
	113 Compare W8, 0
	114 JumpIfEqual {132}
	115 Move X0, X19
	116 Call ObjectReader.get_ValueFixupStack, X0
	117 Compare X0, 0
	118 JumpIfEqual {143}
	119 Move X1, X31
	120 Call SerStack.Pop, X0
	121 Compare X0, 0
	122 JumpIfEqual {143}
	123 Move X8, 0xE6F000
	124 Move X8, [X8+1048]
	125 Move X1, [X8]
	126 Move X8, [X0]
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move X1, X20
	129 Move X2, X21
	130 Move X3, X31
	131 Call ValueFixup.Fixup, X0, X1, X2
	132 Move W8, [X20+36]
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move X8, [X20+232]
	135 Move X9, [X19+48]
	136 Move [X19+96], X8
	137 Compare X9, 0
	138 JumpIfEqual {140}
	139 Move [X9+40], X8
	140 Move X8, [X20+216]
	141 Compare X8, 0
	142 JumpIfNotEqual {151}
	143 Call 0x1C17F20
	144 Move X8, [X20+48]
	145 Move [X20+232], X8
	146 Move X9, [X19+48]
	147 Move [X19+96], X8
	148 Compare X9, 0
	149 JumpIfEqual {151}
	150 Move [X9+40], X8
	151 Move X20, [X31+32]
	152 Move X19, [X31+40]
	153 Move X22, [X31+16]
	154 Move X21, [X31+24]
	155 Move X30, [X31+48]
	156 Move X23, [X31+56]
	157 Return 
	158 Call 0x1C181E0
	159 Move X0, X21
	160 Call 0x1C181E0

Method: System.Void ParseArray(System.Runtime.Serialization.Formatters.Binary.ParseRecord pr)

Disassembly:
	0x032B7E9C MOV X5, X0
	0x032B7EA0 B 0x32B7EAC
	0x032B7EA4 MOV X24, X31
	0x032B7EA8 MOV X5, X31
	0x032B7EAC LDR X0, [X23 + 0x30]
	0x032B7EB0 CBZ X0, 0x32B7F20
	0x032B7EB4 LDR X3, [X21 + 0x110]
	0x032B7EB8 LDR X2, [X21 + 0x58]
	0x032B7EBC TBZ X20, 0x0, 0x32B7EFC
	0x032B7EC0 CBZ X19, 0x32B7EDC
	0x032B7EC4 ADRP X8, 0xE3E000
	0x032B7EC8 LDR X8, [X8 + 0x278]
	0x032B7ECC LDR X1, [X8]
	0x032B7ED0 LDR X8, [X19]
	0x032B7ED4 CMP X8, X1
	0x032B7ED8 B.NE 0x32B7F24
	0x032B7EDC MOV X1, X19
	0x032B7EE0 MOV X4, X22
	0x032B7EE4 LDP X20, X19, [X31 + 0x30]
	0x032B7EE8 LDP X22, X21, [X31 + 0x20]
	0x032B7EEC LDP X24, X23, [X31 + 0x10]
	0x032B7EF0 MOV X6, X31
	0x032B7EF4 LDR X30, [X31], #0x40
	0x032B7EF8 B 0x32A5400
	0x032B7EFC MOV X1, X19
	0x032B7F00 MOV X4, X22
	0x032B7F04 MOV X6, X24
	0x032B7F08 LDP X20, X19, [X31 + 0x30]
	0x032B7F0C LDP X22, X21, [X31 + 0x20]
	0x032B7F10 LDP X24, X23, [X31 + 0x10]
	0x032B7F14 MOV X7, X31
	0x032B7F18 LDR X30, [X31], #0x40
	0x032B7F1C B 0x32A55D4
	0x032B7F20 BL 0x1C16F20
	0x032B7F24 MOV X0, X19
	0x032B7F28 BL 0x1C171E0
	0x032B7F2C STP X30, X21, [X31 - 0x20]!
	0x032B7F30 STP X20, X19, [X31 + 0x10]
	0x032B7F34 ADRP X21, 0x1125000
	0x032B7F38 LDRB W8, [X21 + 0x81D]
	0x032B7F3C MOV X19, X1
	0x032B7F40 MOV X20, X0
	0x032B7F44 TBNZ X8, 0x0, 0x32B7F5C
	0x032B7F48 ADRP X0, 0xE6E000
	0x032B7F4C LDR X0, [X0 + 0x480]
	0x032B7F50 BL 0x1C16CF4
	0x032B7F54 MOVZ W8, 0x1
	0x032B7F58 STRB W8, [X21 + 0x81D]
	0x032B7F5C LDRB W8, [X20 + 0xA0]
	0x032B7F60 CBNZ W8, 0x32B7F6C
	0x032B7F64 MOV X0, X20
	0x032B7F68 BL 0x32B5F3C
	0x032B7F6C CMP X19, 0x0
	0x032B7F70 B.GT 0x32B8000
	0x032B7F74 ADDS X31, X19, 0x1
	0x032B7F78 B.EQ 0x32B7F8C
	0x032B7F7C LDRB W8, [X20 + 0xA1]
	0x032B7F80 CBNZ W8, 0x32B7F8C
	0x032B7F84 SUB X19, X31, X19
	0x032B7F88 B 0x32B8000
	0x032B7F8C LDR X21, [X20 + 0xA8]
	0x032B7F90 MOVZ W8, 0x1
	0x032B7F94 STRB W8, [X20 + 0xA1]
	0x032B7F98 CBNZ X21, 0x32B7FC0
	0x032B7F9C ADRP X8, 0xE6E000
	0x032B7FA0 LDR X8, [X8 + 0x480]
	0x032B7FA4 LDR X0, [X8]
	0x032B7FA8 BL 0x1C16F10
	0x032B7FAC MOV X1, X31
	0x032B7FB0 MOV X21, X0
	0x032B7FB4 BL 0x32BDF40
	0x032B7FB8 STR X21, [X20 + 0xA8]
	0x032B7FBC CBZ X21, 0x32B8010
	0x032B7FC0 MOV X0, X21
	0x032B7FC4 MOV W1, W19
	0x032B7FC8 MOV X2, X31
	0x032B7FCC BL 0x32BE0DC
	0x032B7FD0 CBZ W0, 0x32B7FDC
	0x032B7FD4 SXTW X19, W0
	0x032B7FD8 B 0x32B8000
	0x032B7FDC LDR X0, [X20 + 0xA8]
	0x032B7FE0 CBZ X0, 0x32B8010
	0x032B7FE4 MOVN W8, 0x80000000
	0x032B7FE8 ADD X20, X19, X8
	0x032B7FEC MOV W1, W19
	0x032B7FF0 MOV W2, W20
	0x032B7FF4 MOV X3, X31
	0x032B7FF8 BL 0x32BE154
	0x032B7FFC MOV X19, X20
	0x032B8000 MOV X0, X19
	0x032B8004 LDP X20, X19, [X31 + 0x10]
	0x032B8008 LDP X30, X21, [X31], #0x20
	0x032B800C RET
	0x032B8010 BL 0x1C16F20
	0x032B8014 STP X30, X21, [X31 - 0x20]!
	0x032B8018 STP X20, X19, [X31 + 0x10]
	0x032B801C MOV X20, X0
	0x032B8020 LDR X0, [X0 + 0x40]
	0x032B8024 MOV X19, X2
	0x032B8028 MOV X21, X1
	0x032B802C CBZ X0, 0x32B8054
	0x032B8030 LDR X8, [X0]
	0x032B8034 MOV X1, X21
	0x032B8038 MOV X2, X19
	0x032B803C LDP X9, X3, [X8 + 0x188]
	0x032B8040 BLR X9
	0x032B8044 CBZ X0, 0x32B8054
	0x032B8048 LDP X20, X19, [X31 + 0x10]
	0x032B804C LDP X30, X21, [X31], #0x20
	0x032B8050 RET
	0x032B8054 MOV X0, X20
	0x032B8058 MOV X2, X19
	0x032B805C LDP X20, X19, [X31 + 0x10]
	0x032B8060 MOV X1, X21
	0x032B8064 LDP X30, X21, [X31], #0x20
	0x032B8068 B 0x32B806C
	0x032B806C SUB X31, X31, 0x40
	0x032B8070 STP X30, X23, [X31 + 0x10]
	0x032B8074 STP X22, X21, [X31 + 0x20]
	0x032B8078 STP X20, X19, [X31 + 0x30]
	0x032B807C ADRP X22, 0x1124000
	0x032B8080 LDRB W8, [X22 + 0x81E]
	0x032B8084 MOV X21, X2
	0x032B8088 MOV X19, X1
	0x032B808C MOV X20, X0
	0x032B8090 TBNZ X8, 0x0, 0x32B80C0
	0x032B8094 ADRP X0, 0xE6C000
	0x032B8098 LDR X0, [X0 + 0xF00]
	0x032B809C BL 0x1C16CF4
	0x032B80A0 ADRP X0, 0xE6C000
	0x032B80A4 LDR X0, [X0 + 0xB70]
	0x032B80A8 BL 0x1C16CF4
	0x032B80AC ADRP X0, 0xE6D000
	0x032B80B0 LDR X0, [X0 + 0x488]
	0x032B80B4 BL 0x1C16CF4
	0x032B80B8 MOVZ W8, 0x1
	0x032B80BC STRB W8, [X22 + 0x81E]
	0x032B80C0 STR X31, [X31 + 0x8]
	0x032B80C4 LDR X0, [X20 + 0xB0]
	0x032B80C8 CBZ X0, 0x32B8260
	0x032B80CC ADRP X23, 0xE6D000
	0x032B80D0 LDR X23, [X23 + 0x488]
	0x032B80D4 MOV X1, X21
	0x032B80D8 MOV X2, X31
	0x032B80DC BL 0x32BE424
	0x032B80E0 CBZ X0, 0x32B8128
	0x032B80E4 LDR X8, [X0]
	0x032B80E8 LDR X1, [X23]
	0x032B80EC MOV X22, X0
	0x032B80F0 LDRB W10, [X8 + 0x130]
	0x032B80F4 LDRB W9, [X1 + 0x130]
	0x032B80F8 CMP W10, W9
	0x032B80FC B.CC 0x32B8264
	0x032B8100 LDR X8, [X8 + 0xC8]
	0x032B8104 ADD X8, X8, X9, 0x3, LSL
	0x032B8108 LDUR X8, [X8 - 0x8]
	0x032B810C CMP X8, X1
	0x032B8110 B.NE 0x32B8264
	0x032B8114 LDR X0, [X22 + 0x18]
	0x032B8118 MOV X1, X19
	0x032B811C MOV X2, X31
	0x032B8120 BL 0x3226EF8
	0x032B8124 TBZ X0, 0x0, 0x32B81E4
	0x032B8128 LDRB W8, [X20 + 0x50]
	0x032B812C CBZ W8, 0x32B81FC
	0x032B8130 ADRP X8, 0xE6C000
	0x032B8134 LDR X8, [X8 + 0xF00]
	0x032B8138 LDR X0, [X8]
	0x032B813C BL 0x1C16F10
	0x032B8140 MOV X22, X0
	0x032B8144 MOV X1, X19
	0x032B8148 MOV X2, X31
	0x032B814C BL 0x32D5CD4
	0x032B8150 MOV X0, X22
	0x032B8154 BL 0x32B8354
	0x032B8158 MOV X22, X0
	0x032B815C MOV X0, X22
	0x032B8160 MOV X1, X31
	0x032B8164 MOV X2, X31
	0x032B8168 BL 0x32D5BF8
	0x032B816C MOV W8, W0
	0x032B8170 MOV X0, X31
	0x032B8174 TBNZ X8, 0x0, 0x32B81E8
	0x032B8178 ADD X2, X31, 0x8
	0x032B817C MOV X0, X22
	0x032B8180 MOV X1, X21
	0x032B8184 BL 0x32B83B4
	0x032B8188 LDR X21, [X31 + 0x8]
	0x032B818C CBZ X21, 0x32B8258
	0x032B8190 LDR X8, [X21]
	0x032B8194 MOV X0, X21
	0x032B8198 LDR X9, [X8 + 0x2F8]
	0x032B819C LDR X1, [X8 + 0x300]
	0x032B81A0 BLR X9
	0x032B81A4 MOV X1, X0
	0x032B81A8 MOV X0, X22
	0x032B81AC MOV X2, X21
	0x032B81B0 BL 0x32B85F0
	0x032B81B4 LDR X0, [X23]
	0x032B81B8 BL 0x1C16F10
	0x032B81BC MOV X1, X31
	0x032B81C0 MOV X22, X0
	0x032B81C4 BL 0x33BDD8C
	0x032B81C8 CBZ X22, 0x32B8260
	0x032B81CC STP X21, X19, [X22 + 0x10]
	0x032B81D0 LDR X0, [X20 + 0xB0]
	0x032B81D4 CBZ X0, 0x32B8260
	0x032B81D8 MOV X1, X22
	0x032B81DC MOV X2, X31
	0x032B81E0 BL 0x32BE4CC
	0x032B81E4 LDR X0, [X22 + 0x10]
	0x032B81E8 LDP X20, X19, [X31 + 0x30]
	0x032B81EC LDP X22, X21, [X31 + 0x20]
	0x032B81F0 LDP X30, X23, [X31 + 0x10]
	0x032B81F4 ADD X31, X31, 0x40
	0x032B81F8 RET
	0x032B81FC MOV X0, X19
	0x032B8200 MOV X1, X31
	0x032B8204 BL 0x32D59A8
	0x032B8208 MOV X22, X0
	0x032B820C MOV X0, X22
	0x032B8210 MOV X1, X31
	0x032B8214 MOV X2, X31
	0x032B8218 BL 0x32D5BF8
	0x032B821C MOV W8, W0
	0x032B8220 MOV X0, X31
	0x032B8224 TBNZ X8, 0x0, 0x32B81E8
	0x032B8228 ADRP X8, 0xE6C000
	0x032B822C LDR X8, [X8 + 0xB70]
	0x032B8230 LDR X0, [X8]
	0x032B8234 LDR W8, [X0 + 0xE0]
	0x032B8238 CBNZ W8, 0x32B8240
	0x032B823C BL 0x1C16DFC
	0x032B8240 MOV X0, X22
	0x032B8244 MOV X1, X21
	0x032B8248 MOV X2, X31
	0x032B824C BL 0x32A244C
	0x032B8250 MOV X21, X0
	0x032B8254 CBNZ X21, 0x32B8190
	0x032B8258 MOV X0, X31
	0x032B825C B 0x32B81E8
	0x032B8260 BL 0x1C16F20
	0x032B8264 MOV X0, X22
	0x032B8268 BL 0x1C171E0
	0x032B826C CMP W1, 0x1
	0x032B8270 MOV X22, X0
	0x032B8274 B.NE 0x32B8348
	0x032B8278 MOV X0, X22
	0x032B827C BL 0x3EB1AD0
	0x032B8280 MOV X22, X0
	0x032B8284 ADRP X0, 0xE3B000
	0x032B8288 LDR X0, [X0 + 0x7D0]
	0x032B828C BL 0x1C16D08
	0x032B8290 LDR X8, [X22]
	0x032B8294 LDR X1, [X8]
	0x032B8298 BL 0x1C17270
	0x032B829C TBZ X0, 0x0, 0x32B82AC
	0x032B82A0 BL 0x3EB1AE0
	0x032B82A4 MOV X22, X31
	0x032B82A8 B 0x32B820C
	0x032B82AC MOVZ W0, 0x8
	0x032B82B0 BL 0x3EB1AF0
	0x032B82B4 LDR X8, [X22]
	0x032B82B8 STR X8, [X0]
	0x032B82BC ADRP X1, 0xBFC000
	0x032B82C0 ADD X1, X1, 0xE58
	0x032B82C4 MOV X2, X31
	0x032B82C8 BL 0x3EB1B00
	0x032B82CC B 0x32B8340
	0x032B82D0 MOV X22, X0
	0x032B82D4 BL 0x3EB1AE0
	0x032B82D8 B 0x32B8348
	0x032B82DC B 0x32B82E0
	0x032B82E0 MOV X22, X0
	0x032B82E4 CMP W1, 0x1
	0x032B82E8 B.NE 0x32B8348
	0x032B82EC MOV X0, X22
	0x032B82F0 BL 0x3EB1AD0
	0x032B82F4 MOV X22, X0
	0x032B82F8 ADRP X0, 0xE3B000
	0x032B82FC LDR X0, [X0 + 0x7D0]
	0x032B8300 BL 0x1C16D08
	0x032B8304 LDR X8, [X22]
	0x032B8308 LDR X1, [X8]
	0x032B830C BL 0x1C17270
	0x032B8310 TBZ X0, 0x0, 0x32B8320
	0x032B8314 BL 0x3EB1AE0
	0x032B8318 MOV X22, X31
	0x032B831C B 0x32B815C
	0x032B8320 MOVZ W0, 0x8
	0x032B8324 BL 0x3EB1AF0
	0x032B8328 LDR X8, [X22]
	0x032B832C STR X8, [X0]
	0x032B8330 ADRP X1, 0xBFC000
	0x032B8334 ADD X1, X1, 0xE58
	0x032B8338 MOV X2, X31
	0x032B833C BL 0x3EB1B00
	0x032B8340 MOV X22, X0
	0x032B8344 BL 0x3EB1AE0
	0x032B8348 MOV X0, X22
	0x032B834C BL 0x1D2C690
	0x032B8350 BL 0x1990590
	0x032B8354 STR X30, [X31 - 0x20]!
	0x032B8358 STP X20, X19, [X31 + 0x10]
	0x032B835C ADD X2, X31, 0xC
	0x032B8360 MOV X1, X31
	0x032B8364 MOV X3, X31
	0x032B8368 MOV X19, X0
	0x032B836C STR W31, [X31 + 0xC]
	0x032B8370 BL 0x32D8C74
	0x032B8374 MOV X1, X31
	0x032B8378 MOV X2, X31
	0x032B837C MOV X20, X0
	0x032B8380 BL 0x32D5BF8
	0x032B8384 CBZ X19, 0x32B83A4
	0x032B8388 TBZ X0, 0x0, 0x32B83A4
	0x032B838C LDR X0, [X19 + 0x10]
	0x032B8390 ADD X2, X31, 0xC
	0x032B8394 MOV X1, X31
	0x032B8398 MOV X3, X31
	0x032B839C BL 0x32D8BEC
	0x032B83A0 MOV X20, X0
	0x032B83A4 MOV X0, X20
	0x032B83A8 LDP X20, X19, [X31 + 0x10]
	0x032B83AC LDR X30, [X31], #0x20
	0x032B83B0 RET
	0x032B83B4 STP X30, X23, [X31 - 0x30]!
	0x032B83B8 STP X22, X21, [X31 + 0x10]
	0x032B83BC STP X20, X19, [X31 + 0x20]
	0x032B83C0 ADRP X22, 0x1124000
	0x032B83C4 ADRP X23, 0xE6C000
	0x032B83C8 LDRB W8, [X22 + 0x81F]
	0x032B83CC LDR X23, [X23 + 0xB70]
	0x032B83D0 MOV X19, X2
	0x032B83D4 MOV X20, X1
	0x032B83D8 MOV X21, X0
	0x032B83DC TBNZ X8, 0x0, 0x32B843C
	0x032B83E0 ADRP X0, 0xE6C000
	0x032B83E4 LDR X0, [X0 + 0xB70]
	0x032B83E8 BL 0x1C16CF4
	0x032B83EC ADRP X0, 0xE6D000
	0x032B83F0 LDR X0, [X0 + 0x490]
	0x032B83F4 BL 0x1C16CF4
	0x032B83F8 ADRP X0, 0xE6D000
	0x032B83FC LDR X0, [X0 + 0x498]
	0x032B8400 BL 0x1C16CF4
	0x032B8404 ADRP X0, 0xE6D000
	0x032B8408 LDR X0, [X0 + 0x4A0]
	0x032B840C BL 0x1C16CF4
	0x032B8410 ADRP X0, 0xE6D000
	0x032B8414 LDR X0, [X0 + 0x4A8]
	0x032B8418 BL 0x1C16CF4
	0x032B841C ADRP X0, 0xE6D000
	0x032B8420 LDR X0, [X0 + 0x4B0]
	0x032B8424 BL 0x1C16CF4
	0x032B8428 ADRP X0, 0xE3B000
	0x032B842C LDR X0, [X0 + 0x6C0]
	0x032B8430 BL 0x1C16CF4
	0x032B8434 MOVZ W8, 0x1
	0x032B8438 STRB W8, [X22 + 0x81F]
	0x032B843C LDR X0, [X23]
	0x032B8440 LDR W8, [X0 + 0xE0]
	0x032B8444 CBNZ W8, 0x32B844C
	0x032B8448 BL 0x1C16DFC
	0x032B844C MOV X0, X21
	0x032B8450 MOV X1, X20
	0x032B8454 MOV X2, X31
	0x032B8458 BL 0x32A244C
	0x032B845C STR X0, [X19]
	0x032B8460 CBNZ X0, 0x32B8510
	0x032B8464 ADRP X8, 0xE6D000
	0x032B8468 LDR X8, [X8 + 0x490]
	0x032B846C LDR X0, [X8]
	0x032B8470 BL 0x1C16F10
	0x032B8474 ADRP X8, 0xE6D000
	0x032B8478 LDR X8, [X8 + 0x4A0]
	0x032B847C MOV X1, X31
	0x032B8480 MOV X3, X31
	0x032B8484 MOV X22, X0
	0x032B8488 LDR X2, [X8]
	0x032B848C BL 0x2D30578
	0x032B8490 ADRP X8, 0xE6D000
	0x032B8494 LDR X8, [X8 + 0x4B0]
	0x032B8498 LDR X0, [X8]
	0x032B849C BL 0x1C16F10
	0x032B84A0 MOV X1, X31
	0x032B84A4 MOV X23, X0
	0x032B84A8 BL 0x33BDD8C
	0x032B84AC STR X21, [X23 + 0x10]
	0x032B84B0 ADRP X8, 0xE6D000
	0x032B84B4 LDR X8, [X8 + 0x498]
	0x032B84B8 LDR X0, [X8]
	0x032B84BC BL 0x1C16F10
	0x032B84C0 ADRP X8, 0xE6D000
	0x032B84C4 LDR X8, [X8 + 0x4A8]
	0x032B84C8 MOV X1, X23
	0x032B84CC MOV X3, X31
	0x032B84D0 MOV X21, X0
	0x032B84D4 LDR X2, [X8]
	0x032B84D8 BL 0x2D40764
	0x032B84DC ADRP X8, 0xE3B000
	0x032B84E0 LDR X8, [X8 + 0x6C0]
	0x032B84E4 LDR X0, [X8]
	0x032B84E8 LDR W8, [X0 + 0xE0]
	0x032B84EC CBNZ W8, 0x32B84F4
	0x032B84F0 BL 0x1C16DFC
	0x032B84F4 MOV X0, X20
	0x032B84F8 MOV X1, X22
	0x032B84FC MOV X2, X21
	0x032B8500 MOV W3, W31
	0x032B8504 MOV X4, X31
	0x032B8508 BL 0x33984A8
	0x032B850C STR X0, [X19]
	0x032B8510 LDP X20, X19, [X31 + 0x20]
	0x032B8514 LDP X22, X21, [X31 + 0x10]
	0x032B8518 LDP X30, X23, [X31], #0x30
	0x032B851C RET
	0x032B8520 B 0x32B8524
	0x032B8524 MOV X22, X0
	0x032B8528 CMP W1, 0x1

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x1126000
	009 Move W8, [X21+2072]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {48}
	016 Move X0, 0xE3D000
	017 Move X0, [X0+1560]
	018 Call 0x1C17CF4
	019 Move X0, 0xE46000
	020 Move X0, [X0+2536]
	021 Call 0x1C17CF4
	022 Move X0, 0xE6E000
	023 Move X0, [X0+3968]
	024 Call 0x1C17CF4
	025 Move X0, 0xE6F000
	026 Move X0, [X0+1096]
	027 Call 0x1C17CF4
	028 Move X0, 0xE3E000
	029 Move X0, [X0+3672]
	030 Call 0x1C17CF4
	031 Move X0, 0xE3D000
	032 Move X0, [X0+2512]
	033 Call 0x1C17CF4
	034 Move X0, 0xE6F000
	035 Move X0, [X0+96]
	036 Call 0x1C17CF4
	037 Move X0, 0xE6F000
	038 Move X0, [X0+1104]
	039 Call 0x1C17CF4
	040 Move X0, 0xE3D000
	041 Move X0, [X0+3824]
	042 Call 0x1C17CF4
	043 Move X0, 0xE3D000
	044 Move X0, [X0+2760]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X21+2072], W8
	048 Compare X19, 0
	049 JumpIfEqual {397}
	050 Move W8, [X19+24]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X21, [X19+48]
	053 Compare X21, 0
	054 JumpIfEqual {397}
	055 Move W8, [X21+16]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X8, 0xE46000
	058 Move X8, [X8+2536]
	059 Move X0, [X8]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X0, X21
	065 Move X1, X31
	066 Call Convert.FromBase64String, X0
	067 Move X9, [X19+232]
	068 Compare X9, 0
	069 JumpIfEqual {85}
	070 Move X8, 0xE6E000
	071 Move X8, [X8+3968]
	072 Move W21, [X19+124]
	073 Move X0, [X8]
	074 Move W8, [X0+224]
	075 Compare W8, 0
	076 JumpIfNotEqual {78}
	077 Call 0x1C17DFC
	078 Move W0, W21
	079 Call Converter.IsWriteAsByteArray, X0
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfEqual {124}
	084 Move W8, [X19+24]
	085 Subtract W9, W8, 1
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X2, [X19+152]
	088 Compare X2, 0
	089 JumpIfEqual {158}
	090 Move W8, [X2+24]
	091 Compare W8, 0
	092 JumpIfEqual {396}
	093 Move W8, [X2+32]
	094 Compare W8, 0
	095 JumpIfEqual {158}
	096 Move X0, [X19+112]
	097 Compare X0, 0
	098 JumpIfEqual {103}
	099 Move X1, [X19+136]
	100 Move X3, X31
	101 Call Array.UnsafeCreateInstance, X0, X1, X2
	102 Move [X19+232], X0
	103 Move W8, [X19+24]
	104 Move W9, 1
	105 Move [X19+192], W9
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move X8, 0xE3C000
	108 Move X8, [X8+1560]
	109 Move W1, W31
	110 Move X0, [X8]
	111 Call 0x1C17D6C
	112 Move [X19+232], X0
	113 Move X0, [X20+136]
	114 Compare X0, 0
	115 JumpIfEqual {397}
	116 Move X1, X31
	117 Call SerStack.Peek, X0
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X0, [X20+136]
	120 Compare X0, 0
	121 JumpIfEqual {397}
	122 Move X1, X31
	123 Call SerStack.Pop, X0
	124 Move W8, [X19+36]
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move X8, [X19+232]
	127 Move X9, [X20+48]
	128 Move [X20+96], X8
	129 Compare X9, 0
	130 JumpIfEqual {132}
	131 Move [X9+40], X8
	132 Move X0, [X20+136]
	133 Compare X0, 0
	134 JumpIfEqual {397}
	135 Move X1, X31
	136 Call SerStack.Peek, X0
	137 Move X3, X0
	138 Compare X0, 0
	139 JumpIfEqual {145}
	140 Move X8, 0xE6E000
	141 Move X8, [X8+96]
	142 Move X1, [X8]
	143 Move X8, [X3]
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move X1, [X19+232]
	146 Move X0, X20
	147 Move X2, X19
	148 Move X20, [X31+48]
	149 Move X19, [X31+56]
	150 Move X22, [X31+32]
	151 Move X21, [X31+40]
	152 Move X30, [X31+16]
	153 Move X23, [X31+24]
	154 Move W4, W31
	155 Add X31, X31, 64
	156 Call ObjectReader.RegisterObject, X0, X1, X2, X3, X4
	157 Return 
	158 Move X22, 0xE6D000
	159 Move X22, [X22+3968]
	160 Move X21, [X19+112]
	161 Move X0, [X22]
	162 Move W8, [X0+224]
	163 Compare W8, 0
	164 JumpIfNotEqual {167}
	165 Call 0x1C17DFC
	166 Move X0, [X22]
	167 Move X8, [X0+184]
	168 Move X9, [X8+56]
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Move W9, [X0+224]
	171 Move X21, [X19+112]
	172 Compare W9, 0
	173 JumpIfNotEqual {177}
	174 Call 0x1C17DFC
	175 Move X8, [X22]
	176 Move X8, [X8+184]
	177 Move X8, [X8+192]
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move X21, [X19+112]
	180 Compare X21, 0
	181 JumpIfEqual {356}
	182 Move X8, 0xE3D000
	183 Move X8, [X8+3672]
	184 Move W1, 1
	185 Move X0, [X8]
	186 Call 0x1C17D6C
	187 Move X8, [X19+136]
	188 Compare X8, 0
	189 JumpIfEqual {397}
	190 Move W9, [X8+24]
	191 Compare W9, 0
	192 JumpIfEqual {396}
	193 Move X1, X0
	194 Compare X0, 0
	195 JumpIfEqual {397}
	196 Move W9, [X1+24]
	197 Compare W9, 0
	198 JumpIfEqual {396}
	199 Move W8, [X8+32]
	200 Move X0, X21
	201 Move X2, X31
	202 Move [X1+32], W8
	203 Call Array.UnsafeCreateInstance, X0, X1
	204 Move W23, 1
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Move X2, [X19+152]
	207 Move [X19+192], W31
	208 Compare X2, 0
	209 JumpIfEqual {224}
	210 NotImplemented "Instruction LDRSW not yet implemented."
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Move W11, [X2+24]
	213 Move W8, W31
	214 Move X10, X31
	215 Add X12, X2, 32
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Move W13, [X12]
	218 Compare W13, 0
	219 JumpIfEqual {222}
	220 Move W8, 1
	221 Move [X19+192], W8
	222 Add X10, X10, 1
	223 NotImplemented "Instruction CMP not yet implemented."
	224 Move W8, W31
	225 Move X0, [X19+112]
	226 Compare X0, 0
	227 JumpIfEqual {331}
	228 Move X1, [X19+136]
	229 And W31, W8, 255
	230 Move X3, X31
	231 Call Array.UnsafeCreateInstance, X0, X1, X2
	232 Move X8, [X19+136]
	233 Compare X8, 0
	234 JumpIfEqual {397}
	235 Move W9, [X8+24]
	236 Compare W9, 0
	237 JumpIfEqual {396}
	238 Move W1, [X8+32]
	239 Move X8, 0xE3C000
	240 Move X8, [X8+2760]
	241 Move X8, [X19+136]
	242 Compare X8, 0
	243 JumpIfEqual {397}
	244 Move W9, [X8+24]
	245 Compare W9, 0
	246 JumpIfEqual {396}
	247 Move W1, [X8+32]
	248 Move X8, 0xE3C000
	249 Move X8, [X8+2512]
	250 Move X0, [X8]
	251 Call 0x1C17D6C
	252 Move W23, W31
	253 Move [X19+240], X0
	254 Move [X19+232], X0
	255 Move W8, [X19+24]
	256 Move [X19+192], W31
	257 NotImplemented "Instruction CMP not yet implemented."
	258 Move X0, [X22]
	259 Move W21, [X19+124]
	260 Move W8, [X0+224]
	261 Compare W8, 0
	262 JumpIfNotEqual {264}
	263 Call 0x1C17DFC
	264 Move W0, W21
	265 Call Converter.IsWriteAsByteArray, X0
	266 Move TEMP, X0
	267 And TEMP, TEMP, 1
	268 Compare TEMP, 1
	269 JumpIfNotEqual {296}
	270 Move X8, 0xE6E000
	271 Move W22, [X19+124]
	272 Move X21, [X19+232]
	273 Move X8, [X8+1104]
	274 Move X0, [X8]
	275 Call 0x1C17F10
	276 Move X23, X0
	277 Compare X21, 0
	278 JumpIfEqual {290}
	279 Move X9, 0xE3C000
	280 Move X9, [X9+3824]
	281 Move X8, [X21]
	282 Move X1, [X9]
	283 Move W10, [X8+304]
	284 Move W9, [X1+304]
	285 NotImplemented "Instruction CMP not yet implemented."
	286 Move X8, [X8+200]
	287 Add X8, X8, X9
	288 NotImplemented "Instruction LDUR not yet implemented."
	289 NotImplemented "Instruction CMP not yet implemented."
	290 Move X0, X23
	291 Move W1, W22
	292 Move X2, X21
	293 Move X3, X31
	294 Call PrimitiveArray..ctor, X0, X1, X2
	295 Move [X19+248], X23
	296 Compare W23, 0
	297 JumpIfEqual {358}
	298 Move X0, [X19+112]
	299 Compare X0, 0
	300 JumpIfEqual {358}
	301 Move X1, X31
	302 Call Type.get_IsValueType, X0
	303 Move TEMP, X0
	304 And TEMP, TEMP, 1
	305 Compare TEMP, 1
	306 JumpIfEqual {358}
	307 Move W8, [X19+192]
	308 Compare W8, 0
	309 JumpIfNotEqual {358}
	310 Move X21, [X19+232]
	311 Compare X21, 0
	312 JumpIfEqual {357}
	313 Move X23, 0xE3C000
	314 Move X23, [X23+2512]
	315 Move X0, X21
	316 Move X22, [X23]
	317 Move X1, X22
	318 Call 0x1C17E00
	319 Compare X0, 0
	320 JumpIfEqual {446}
	321 Move [X19+240], X0
	322 Move X22, [X23]
	323 Move X0, X21
	324 Move X1, X22
	325 Call 0x1C17E00
	326 Compare X0, 0
	327 JumpIfNotEqual {358}
	328 Move X2, X31
	329 Call Array.UnsafeCreateInstance, X0, X1
	330 Move [X19+232], X0
	331 NotImplemented "Instruction LDRSW not yet implemented."
	332 NotImplemented "Instruction CMP not yet implemented."
	333 Move X10, [X19+136]
	334 Compare X10, 0
	335 JumpIfEqual {397}
	336 Move W9, [X10+24]
	337 Move X8, X31
	338 Add X10, X10, 32
	339 Move W20, 1
	340 NotImplemented "Instruction CMP not yet implemented."
	341 Move W11, [X10]
	342 Add X8, X8, 1
	343 NotImplemented "Instruction CMP not yet implemented."
	344 Multiply W20, W11, W20
	345 Move W20, 1
	346 Move X21, 0xE3D000
	347 Move X21, [X21+3672]
	348 Move X0, [X21]
	349 Call 0x1C17D6C
	350 Move [X19+168], X0
	351 Move W1, [X19+128]
	352 Move X0, [X21]
	353 Call 0x1C17D6C
	354 Move [X19+184], X0
	355 Move [X19+180], W20
	356 Move W23, 1
	357 Move [X19+240], X31
	358 Move W8, [X19+36]
	359 NotImplemented "Instruction CMP not yet implemented."
	360 Move X21, [X19+232]
	361 Compare X21, 0
	362 JumpIfEqual {381}
	363 Move X23, 0xE6E000
	364 Move X23, [X23+1096]
	365 Move X0, X21
	366 Move X22, [X23]
	367 Move X1, X22
	368 Call 0x1C17E00
	369 Compare X0, 0
	370 JumpIfEqual {446}
	371 Move [X20+104], X0
	372 Move X20, [X23]
	373 Move X0, X21
	374 Move X1, X20
	375 Call 0x1C17E00
	376 Compare X0, 0
	377 JumpIfNotEqual {382}
	378 Move X0, X21
	379 Move X1, X20
	380 Call 0x1C181E0
	381 Move [X20+104], X31
	382 Move X8, 0xE3D000
	383 Move X8, [X8+3672]
	384 Move W1, 1
	385 Move X0, [X8]
	386 Call 0x1C17D6C
	387 Move [X19+168], X0
	388 Move X20, [X31+48]
	389 Move X19, [X31+56]
	390 Move X22, [X31+32]
	391 Move X21, [X31+40]
	392 Move X30, [X31+16]
	393 Move X23, [X31+24]
	394 Add X31, X31, 64
	395 Return 
	396 Call 0x1C17F28
	397 Call 0x1C17F20
	398 Move X0, X3
	399 Call 0x1C181E0
	400 Move X0, 0xE3C000
	401 Move X0, [X0+2512]
	402 Call 0x1C17D08
	403 Move W1, 1
	404 Call 0x1C17D6C
	405 Move X20, X0
	406 Move X0, X19
	407 Call 0x19913C0
	408 Move W8, [X19+24]
	409 Move X0, 0xE6E000
	410 Move [X31+12], W8
	411 Move X0, [X0+1112]
	412 Call 0x1C17D08
	413 Add X1, X31, 12
	414 Call 0x1C17E04
	415 Move X19, X0
	416 Move X0, X20
	417 Call 0x19913C0
	418 Move X0, X20
	419 Move X1, X19
	420 Call 0x19990B4
	421 Move X0, X20
	422 Move X1, X31
	423 Move X2, X19
	424 Call 0x1994444
	425 Move X0, 0xE6E000
	426 Move X0, [X0+1120]
	427 Call 0x1C17D08
	428 Move X1, X20
	429 Move X2, X31
	430 Call Environment.GetResourceString, X0, X1
	431 Move X19, X0
	432 Move X0, 0xE66000
	433 Move X0, [X0+736]
	434 Call 0x1C17D08
	435 Call 0x1C17F10
	436 Move X1, X19
	437 Move X2, X31
	438 Move X20, X0
	439 Call SerializationException..ctor, X0, X1
	440 Move X0, 0xE6E000
	441 Move X0, [X0+1128]
	442 Call 0x1C17D08
	443 Move X1, X0
	444 Move X0, X20
	445 Call 0x1C17DEC
	446 Move X0, X21
	447 Move X1, X22
	448 Call 0x1C181E0
	449 Move X0, X21
	450 Call 0x1C181E0

Method: System.Void NextRectangleMap(System.Runtime.Serialization.Formatters.Binary.ParseRecord pr)

Disassembly:
	0x032B8534 BL 0x3EB1AD0
	0x032B8538 MOV X22, X0
	0x032B853C ADRP X0, 0xE6D000
	0x032B8540 LDR X0, [X0 + 0x4B8]
	0x032B8544 BL 0x1C16D08
	0x032B8548 LDR X8, [X22]
	0x032B854C LDR X1, [X8]
	0x032B8550 BL 0x1C17270
	0x032B8554 TBNZ X0, 0x0, 0x32B85AC
	0x032B8558 ADRP X0, 0xE69000
	0x032B855C LDR X0, [X0 + 0x7A0]
	0x032B8560 BL 0x1C16D08
	0x032B8564 LDR X8, [X22]
	0x032B8568 LDR X1, [X8]
	0x032B856C BL 0x1C17270
	0x032B8570 TBNZ X0, 0x0, 0x32B85AC
	0x032B8574 ADRP X0, 0xE6D000
	0x032B8578 LDR X0, [X0 + 0x4C0]
	0x032B857C BL 0x1C16D08
	0x032B8580 LDR X8, [X22]
	0x032B8584 LDR X1, [X8]
	0x032B8588 BL 0x1C17270
	0x032B858C TBNZ X0, 0x0, 0x32B85AC
	0x032B8590 ADRP X0, 0xE6D000
	0x032B8594 LDR X0, [X0 + 0x4C8]
	0x032B8598 BL 0x1C16D08
	0x032B859C LDR X8, [X22]
	0x032B85A0 LDR X1, [X8]
	0x032B85A4 BL 0x1C17270
	0x032B85A8 TBZ X0, 0x0, 0x32B85BC
	0x032B85AC BL 0x3EB1AE0
	0x032B85B0 LDR X0, [X19]
	0x032B85B4 CBNZ X0, 0x32B8510
	0x032B85B8 B 0x32B8464
	0x032B85BC MOVZ W0, 0x8
	0x032B85C0 BL 0x3EB1AF0
	0x032B85C4 LDR X8, [X22]
	0x032B85C8 STR X8, [X0]
	0x032B85CC ADRP X1, 0xBFC000
	0x032B85D0 ADD X1, X1, 0xE58
	0x032B85D4 MOV X2, X31
	0x032B85D8 BL 0x3EB1B00
	0x032B85DC MOV X22, X0
	0x032B85E0 BL 0x3EB1AE0
	0x032B85E4 MOV X0, X22
	0x032B85E8 BL 0x1D2C690
	0x032B85EC BL 0x1990590
	0x032B85F0 STP X30, X23, [X31 - 0x30]!
	0x032B85F4 STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {46}
	004 Move W9, [X1+128]
	005 Subtract W9, W9, 1
	006 Move X0, [X1+184]
	007 Compare X0, 0
	008 JumpIfEqual {46}
	009 Move X8, [X0+24]
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move W12, W9
	012 Add X10, X0, X12
	013 Add X10, X10, 32
	014 Move W11, [X10]
	015 Move X13, [X1+136]
	016 Compare X13, 0
	017 JumpIfEqual {46}
	018 Move W14, [X13+24]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Add X12, X13, X12
	021 Move W12, [X12+32]
	022 Subtract W12, W12, 1
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Add W11, W11, 1
	025 Move [X10], W11
	026 Move W2, [X1+128]
	027 Subtract W10, W2, 1
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Add W9, W9, 1
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move W9, W9
	032 Add X10, X0, 32
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move [X10], W31
	035 NotImplemented "Instruction LDRSW not yet implemented."
	036 Add X9, X9, 1
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X1, [X1+168]
	039 Move X3, X31
	040 Move X30, [X31+16]
	041 Call Array.Copy, X0, X1, X2
	042 Return 
	043 Move X30, [X31+16]
	044 Return 
	045 Call 0x1C17F28
	046 Call 0x1C17F20

Method: System.Void ParseArrayMember(System.Runtime.Serialization.Formatters.Binary.ParseRecord pr)

Disassembly:
	0x032B85F8 STP X20, X19, [X31 + 0x20]
	0x032B85FC ADRP X22, 0x1124000
	0x032B8600 ADRP X23, 0xE6C000
	0x032B8604 LDRB W8, [X22 + 0x821]
	0x032B8608 LDR X23, [X23 + 0xB70]
	0x032B860C MOV X19, X2
	0x032B8610 MOV X20, X1
	0x032B8614 MOV X21, X0
	0x032B8618 TBNZ X8, 0x0, 0x32B863C
	0x032B861C ADRP X0, 0xE67000
	0x032B8620 LDR X0, [X0 + 0xD0]
	0x032B8624 BL 0x1C16CF4
	0x032B8628 ADRP X0, 0xE6C000
	0x032B862C LDR X0, [X0 + 0xB70]
	0x032B8630 BL 0x1C16CF4
	0x032B8634 MOVZ W8, 0x1
	0x032B8638 STRB W8, [X22 + 0x821]
	0x032B863C LDR X0, [X23]
	0x032B8640 LDR W8, [X0 + 0xE0]
	0x032B8644 CBNZ W8, 0x32B864C
	0x032B8648 BL 0x1C16DFC
	0x032B864C MOV X0, X31
	0x032B8650 BL 0x32A1A28
	0x032B8654 TBNZ X0, 0x0, 0x32B86A4
	0x032B8658 MOV X0, X21
	0x032B865C MOV X1, X20
	0x032B8660 MOV X2, X31
	0x032B8664 BL 0x32D5C48
	0x032B8668 TBZ X0, 0x0, 0x32B86A4
	0x032B866C ADRP X8, 0xE67000
	0x032B8670 LDR X8, [X8 + 0xD0]
	0x032B8674 LDR X0, [X8]
	0x032B8678 LDR W8, [X0 + 0xE0]
	0x032B867C CBNZ W8, 0x32B8684
	0x032B8680 BL 0x1C16DFC
	0x032B8684 MOV X0, X19
	0x032B8688 BL 0x32B1848
	0x032B868C CBZ X0, 0x32B86B4
	0x032B8690 LDRB W8, [X0 + 0x20]
	0x032B8694 CBZ W8, 0x32B86A4
	0x032B8698 LDR X0, [X0 + 0x18]
	0x032B869C MOV X1, X31
	0x032B86A0 BL 0x32D59A8
	0x032B86A4 LDP X20, X19, [X31 + 0x20]
	0x032B86A8 LDP X22, X21, [X31 + 0x10]
	0x032B86AC LDP X30, X23, [X31], #0x30
	0x032B86B0 RET
	0x032B86B4 BL 0x1C16F20
	0x032B86B8 CMP W1, 0x1
	0x032B86BC MOV X19, X0
	0x032B86C0 B.NE 0x32B8724
	0x032B86C4 MOV X0, X19
	0x032B86C8 BL 0x3EB1AD0
	0x032B86CC MOV X19, X0
	0x032B86D0 ADRP X0, 0xE41000
	0x032B86D4 LDR X0, [X0 + 0xCC0]
	0x032B86D8 BL 0x1C16D08
	0x032B86DC LDR X8, [X19]
	0x032B86E0 LDR X1, [X8]
	0x032B86E4 BL 0x1C17270
	0x032B86E8 TBZ X0, 0x0, 0x32B86FC
	0x032B86EC LDP X20, X19, [X31 + 0x20]
	0x032B86F0 LDP X22, X21, [X31 + 0x10]
	0x032B86F4 LDP X30, X23, [X31], #0x30
	0x032B86F8 B 0x3EB1AE0
	0x032B86FC MOVZ W0, 0x8
	0x032B8700 BL 0x3EB1AF0
	0x032B8704 LDR X8, [X19]
	0x032B8708 STR X8, [X0]
	0x032B870C ADRP X1, 0xBFC000
	0x032B8710 ADD X1, X1, 0xE58
	0x032B8714 MOV X2, X31
	0x032B8718 BL 0x3EB1B00
	0x032B871C MOV X19, X0
	0x032B8720 BL 0x3EB1AE0
	0x032B8724 MOV X0, X19
	0x032B8728 BL 0x1D2C690
	0x032B872C BL 0x1990590
	0x032B8730 MOV X1, X31
	0x032B8734 B 0x33BDD8C
	0x032B8738 STR X30, [X31 - 0x20]!
	0x032B873C STP X20, X19, [X31 + 0x10]
	0x032B8740 MOV X19, X1
	0x032B8744 MOV X1, X31
	0x032B8748 MOV X20, X0
	0x032B874C BL 0x33BDD8C
	0x032B8750 STR X19, [X20 + 0x10]
	0x032B8754 LDP X20, X19, [X31 + 0x10]
	0x032B8758 LDR X30, [X31], #0x20
	0x032B875C RET
	0x032B8760 STR X30, [X31 - 0x30]!
	0x032B8764 STP X22, X21, [X31 + 0x10]
	0x032B8768 STP X20, X19, [X31 + 0x20]
	0x032B876C MOV X19, X2
	0x032B8770 MOV X21, X1
	0x032B8774 MOV X22, X0
	0x032B8778 MOV X0, X1
	0x032B877C MOV X1, X31
	0x032B8780 MOV X2, X31
	0x032B8784 MOV W20, W3
	0x032B8788 BL 0x32D5BF8
	0x032B878C TBZ X0, 0x0, 0x32B8794
	0x032B8790 LDR X21, [X22 + 0x10]
	0x032B8794 CBZ X21, 0x32B87C4
	0x032B8798 LDR X8, [X21]
	0x032B879C AND W3, W20, 0x1
	0x032B87A0 MOV X0, X21
	0x032B87A4 MOV X1, X19
	0x032B87A8 LDR X5, [X8 + 0x278]
	0x032B87AC LDR X4, [X8 + 0x280]
	0x032B87B0 LDP X20, X19, [X31 + 0x20]
	0x032B87B4 LDP X22, X21, [X31 + 0x10]
	0x032B87B8 MOV W2, W31
	0x032B87BC LDR X30, [X31], #0x30
	0x032B87C0 BR X5
	0x032B87C4 BL 0x1C16F20
	0x032B87C8 STR X30, [X31 - 0x10]!
	0x032B87CC LDR X0, [X0 + 0x40]
	0x032B87D0 CBZ X0, 0x32B87E4
	0x032B87D4 MOVZ W3, 0x1
	0x032B87D8 MOV W4, W31
	0x032B87DC LDR X30, [X31], #0x10
	0x032B87E0 B 0x32B1F84
	0x032B87E4 BL 0x1C16F20
	0x032B87E8 STR X30, [X31 - 0x30]!
	0x032B87EC STP X22, X21, [X31 + 0x10]
	0x032B87F0 STP X20, X19, [X31 + 0x20]
	0x032B87F4 LDR X8, [X0 + 0x90]
	0x032B87F8 MOV X20, X4
	0x032B87FC MOV X19, X0
	0x032B8800 CMP X8, X1
	0x032B8804 B.EQ 0x32B8854
	0x032B8808 LDR X0, [X19 + 0x18]
	0x032B880C CBZ X0, 0x32B88A8
	0x032B8810 LDR W8, [X19 + 0x20]
	0x032B8814 MOV X21, X1
	0x032B8818 STR W8, [X0 + 0x10]
	0x032B881C CBZ X3, 0x32B8860
	0x032B8820 MOV X0, X3
	0x032B8824 MOV X1, X31
	0x032B8828 MOV W22, W2
	0x032B882C BL 0x33970C4
	0x032B8830 TBZ X0, 0x0, 0x32B886C
	0x032B8834 TBNZ X22, 0x0, 0x32B886C
	0x032B8838 STRB W31, [X20]
	0x032B883C LDR W8, [X19 + 0x20]
	0x032B8840 ADD W9, W8, 0x1
	0x032B8844 SUB W8, W31, W8
	0x032B8848 STR W9, [X19 + 0x20]
	0x032B884C SXTW X0, W8
	0x032B8850 B 0x32B8898
	0x032B8854 STRB W31, [X20]
	0x032B8858 LDR X0, [X19 + 0x98]
	0x032B885C B 0x32B8898
	0x032B8860 ADD W8, W8, 0x1
	0x032B8864 STR W8, [X19 + 0x20]
	0x032B8868 B 0x32B8880
	0x032B886C LDR W8, [X19 + 0x20]
	0x032B8870 LDR X0, [X19 + 0x18]
	0x032B8874 ADD W8, W8, 0x1
	0x032B8878 STR W8, [X19 + 0x20]
	0x032B887C CBZ X0, 0x32B88A8
	0x032B8880 LDR X8, [X0]
	0x032B8884 MOV X1, X21
	0x032B8888 MOV X2, X20
	0x032B888C LDP X9, X3, [X8 + 0x178]
	0x032B8890 BLR X9
	0x032B8894 STP X21, X0, [X19 + 0x90]
	0x032B8898 LDP X20, X19, [X31 + 0x20]
	0x032B889C LDP X22, X21, [X31 + 0x10]
	0x032B88A0 LDR X30, [X31], #0x30
	0x032B88A4 RET
	0x032B88A8 BL 0x1C16F20
	0x032B88AC SUB X31, X31, 0x40
	0x032B88B0 STR X30, [X31 + 0x10]
	0x032B88B4 STP X22, X21, [X31 + 0x20]
	0x032B88B8 STP X20, X19, [X31 + 0x30]
	0x032B88BC ADRP X20, 0x1124000
	0x032B88C0 LDRB W8, [X20 + 0x82E]
	0x032B88C4 MOV X21, X1
	0x032B88C8 MOV X19, X0
	0x032B88CC TBNZ X8, 0x0, 0x32B8908
	0x032B88D0 ADRP X0, 0xE6C000
	0x032B88D4 LDR X0, [X0 + 0xF80]
	0x032B88D8 BL 0x1C16CF4
	0x032B88DC ADRP X0, 0xE6B000
	0x032B88E0 LDR X0, [X0 + 0xDB8]
	0x032B88E4 BL 0x1C16CF4
	0x032B88E8 ADRP X0, 0xE3D000
	0x032B88EC LDR X0, [X0 + 0xA60]
	0x032B88F0 BL 0x1C16CF4
	0x032B88F4 ADRP X0, 0xE6D000
	0x032B88F8 LDR X0, [X0 + 0x4D0]
	0x032B88FC BL 0x1C16CF4
	0x032B8900 MOVZ W8, 0x1
	0x032B8904 STRB W8, [X20 + 0x82E]
	0x032B8908 LDR X8, [X19 + 0xB0]
	0x032B890C CBNZ X8, 0x32B8934
	0x032B8910 ADRP X8, 0xE6B000
	0x032B8914 LDR X8, [X8 + 0xDB8]
	0x032B8918 LDR X0, [X8]
	0x032B891C BL 0x1C16F10
	0x032B8920 MOVZ W1, 0x5
	0x032B8924 MOV X2, X31
	0x032B8928 MOV X20, X0
	0x032B892C BL 0x335A34C
	0x032B8930 STR X20, [X19 + 0xB0]
	0x032B8934 STRB W31, [X31 + 0x1C]
	0x032B8938 CBZ X21, 0x32B8AB0
	0x032B893C LDR X20, [X21 + 0x80]
	0x032B8940 CBNZ X20, 0x32B8954
	0x032B8944 LDR X8, [X21 + 0x38]
	0x032B8948 CBZ X8, 0x32B8AB0
	0x032B894C LDR X20, [X8 + 0x18]
	0x032B8950 CBZ X20, 0x32B8AB0
	0x032B8954 LDR W8, [X20 + 0x10]
	0x032B8958 CBZ W8, 0x32B8A04
	0x032B895C ADRP X21, 0xE6C000
	0x032B8960 LDR X21, [X21 + 0xF80]
	0x032B8964 LDR X0, [X21]
	0x032B8968 LDR W8, [X0 + 0xE0]
	0x032B896C CBNZ W8, 0x32B8978
	0x032B8970 BL 0x1C16DFC
	0x032B8974 LDR X0, [X21]
	0x032B8978 LDR X8, [X0 + 0xB8]
	0x032B897C MOV X0, X20
	0x032B8980 MOV X2, X31
	0x032B8984 LDR X1, [X8 + 0xD8]
	0x032B8988 BL 0x322693C
	0x032B898C MOV X21, X31
	0x032B8990 TBNZ X0, 0x0, 0x32B8A98
	0x032B8994 LDR X0, [X19 + 0xB0]
	0x032B8998 CBZ X0, 0x32B8AB0
	0x032B899C LDR X8, [X0]
	0x032B89A0 MOV X1, X20
	0x032B89A4 LDR X9, [X8 + 0x2B8]
	0x032B89A8 LDR X2, [X8 + 0x2C0]
	0x032B89AC BLR X9
	0x032B89B0 TBZ X0, 0x0, 0x32B8A0C
	0x032B89B4 LDR X0, [X19 + 0xB0]
	0x032B89B8 CBZ X0, 0x32B8AB0
	0x032B89BC LDR X8, [X0]
	0x032B89C0 MOV X1, X20
	0x032B89C4 LDR X9, [X8 + 0x2D8]
	0x032B89C8 LDR X2, [X8 + 0x2E0]
	0x032B89CC BLR X9
	0x032B89D0 CBZ X0, 0x32B8AB0
	0x032B89D4 ADRP X8, 0xE3D000
	0x032B89D8 LDR X8, [X8 + 0xA60]
	0x032B89DC LDR X9, [X0]
	0x032B89E0 LDR X1, [X8]
	0x032B89E4 LDR X8, [X9 + 0x40]
	0x032B89E8 LDR X9, [X1 + 0x40]
	0x032B89EC CMP X8, X9
	0x032B89F0 B.NE 0x32B8AB4
	0x032B89F4 BL 0x1C16E08
	0x032B89F8 LDR X21, [X0]
	0x032B89FC STRB W31, [X31 + 0x1C]
	0x032B8A00 B 0x32B8A80
	0x032B8A04 MOV X21, X31
	0x032B8A08 B 0x32B8A98
	0x032B8A0C ADRP X8, 0xE6D000
	0x032B8A10 LDR X8, [X8 + 0x4D0]
	0x032B8A14 MOV X1, X20
	0x032B8A18 MOV X2, X31
	0x032B8A1C LDR X0, [X8]
	0x032B8A20 BL 0x321B938
	0x032B8A24 MOV X1, X0
	0x032B8A28 ADD X4, X31, 0x1C
	0x032B8A2C MOV X0, X19
	0x032B8A30 MOV W2, W31
	0x032B8A34 MOV X3, X31
	0x032B8A38 BL 0x32B87E8
	0x032B8A3C ADRP X8, 0xE3D000
	0x032B8A40 LDR X22, [X19 + 0xB0]
	0x032B8A44 LDR X8, [X8 + 0xA60]
	0x032B8A48 MOV X21, X0
	0x032B8A4C STR X0, [X31 + 0x8]
	0x032B8A50 ADD X1, X31, 0x8
	0x032B8A54 LDR X8, [X8]
	0x032B8A58 MOV X0, X8
	0x032B8A5C BL 0x1C16E04
	0x032B8A60 CBZ X22, 0x32B8AB0
	0x032B8A64 LDR X8, [X22]
	0x032B8A68 MOV X2, X0
	0x032B8A6C MOV X0, X22
	0x032B8A70 MOV X1, X20
	0x032B8A74 LDR X9, [X8 + 0x2E8]
	0x032B8A78 LDR X3, [X8 + 0x2F0]
	0x032B8A7C BLR X9
	0x032B8A80 LDR X0, [X19 + 0x40]
	0x032B8A84 CBZ X0, 0x32B8AB0
	0x032B8A88 LDRB W4, [X31 + 0x1C]
	0x032B8A8C MOV X2, X20
	0x032B8A90 MOV W3, W21
	0x032B8A94 BL 0x32B32D8
	0x032B8A98 MOV X0, X21
	0x032B8A9C LDP X20, X19, [X31 + 0x30]
	0x032B8AA0 LDP X22, X21, [X31 + 0x20]
	0x032B8AA4 LDR X30, [X31 + 0x10]
	0x032B8AA8 ADD X31, X31, 0x40
	0x032B8AAC RET
	0x032B8AB0 BL 0x1C16F20
	0x032B8AB4 BL 0x1C171E0
	0x032B8AB8 STP X30, X21, [X31 - 0x20]!
	0x032B8ABC STP X20, X19, [X31 + 0x10]
	0x032B8AC0 CBZ X1, 0x32B8AF8
	0x032B8AC4 LDR X21, [X1 + 0x20]
	0x032B8AC8 MOV X19, X1
	0x032B8ACC MOV X20, X0
	0x032B8AD0 MOV X1, X21
	0x032B8AD4 BL 0x32AA788
	0x032B8AD8 MOV W3, W0
	0x032B8ADC MOV X0, X20
	0x032B8AE0 MOV X2, X19
	0x032B8AE4 LDP X20, X19, [X31 + 0x10]
	0x032B8AE8 MOV X1, X21
	0x032B8AEC MOV X4, X31
	0x032B8AF0 LDP X30, X21, [X31], #0x20
	0x032B8AF4 B 0x32BA648
	0x032B8AF8 BL 0x1C16F20
	0x032B8AFC SUB X31, X31, 0xA0
	0x032B8B00 STP X29, X30, [X31 + 0x40]
	0x032B8B04 STP X28, X27, [X31 + 0x50]
	0x032B8B08 STP X26, X25, [X31 + 0x60]
	0x032B8B0C STP X24, X23, [X31 + 0x70]
	0x032B8B10 STP X22, X21, [X31 + 0x80]
	0x032B8B14 STP X20, X19, [X31 + 0x90]
	0x032B8B18 ADRP X21, 0x1124000
	0x032B8B1C LDRB W8, [X21 + 0x824]
	0x032B8B20 MOV X25, X3
	0x032B8B24 MOV X19, X2
	0x032B8B28 MOV X22, X1
	0x032B8B2C MOV X20, X0
	0x032B8B30 TBNZ X8, 0x0, 0x32B8B54
	0x032B8B34 ADRP X0, 0xE6C000
	0x032B8B38 LDR X0, [X0 + 0xF80]
	0x032B8B3C BL 0x1C16CF4
	0x032B8B40 ADRP X0, 0xE6D000
	0x032B8B44 LDR X0, [X0 + 0x4D8]
	0x032B8B48 BL 0x1C16CF4
	0x032B8B4C MOVZ W8, 0x1
	0x032B8B50 STRB W8, [X21 + 0x824]
	0x032B8B54 STP X31, X31, [X31 + 0x30]
	0x032B8B58 STR X31, [X31 + 0x28]
	0x032B8B5C CBZ X22, 0x32B8DF4
	0x032B8B60 LDR X24, [X22 + 0x18]
	0x032B8B64 CBZ X24, 0x32B8DF8
	0x032B8B68 ADRP X28, 0xE6C000
	0x032B8B6C LDR X28, [X28 + 0xF80]
	0x032B8B70 LDR X21, [X22 + 0x20]
	0x032B8B74 LDR X23, [X22 + 0x68]
	0x032B8B78 LDR X0, [X28]
	0x032B8B7C LDR W8, [X0 + 0xE0]
	0x032B8B80 CBNZ W8, 0x32B8B8C
	0x032B8B84 BL 0x1C16DFC
	0x032B8B88 LDR X0, [X28]
	0x032B8B8C LDR X8, [X0 + 0xB8]
	0x032B8B90 LDR X8, [X8 + 0x38]
	0x032B8B94 CMP X21, X8
	0x032B8B98 B.EQ 0x32B8BB8
	0x032B8B9C LDRB W8, [X22 + 0x2B]
	0x032B8BA0 CBZ W8, 0x32B8BEC
	0x032B8BA4 MOV X0, X20
	0x032B8BA8 MOV X1, X22
	0x032B8BAC MOV X2, X19
	0x032B8BB0 BL 0x32B8FF0
	0x032B8BB4 B 0x32B8DD0
	0x032B8BB8 CBZ X19, 0x32B8DF4
	0x032B8BBC STR X23, [X19 + 0x18]
	0x032B8BC0 LDR X8, [X24]
	0x032B8BC4 LDR X19, [X20 + 0x40]
	0x032B8BC8 MOV X0, X24
	0x032B8BCC LDP X9, X1, [X8 + 0x168]
	0x032B8BD0 BLR X9
	0x032B8BD4 CBZ X19, 0x32B8DF4
	0x032B8BD8 MOV X2, X0
	0x032B8BDC MOV X0, X19
	0x032B8BE0 MOV W1, W23
	0x032B8BE4 BL 0x32B27C0
	0x032B8BE8 B 0x32B8DD0
	0x032B8BEC ADD X1, X31, 0x38
	0x032B8BF0 ADD X2, X31, 0x30
	0x032B8BF4 ADD X3, X31, 0x28
	0x032B8BF8 MOV X0, X22
	0x032B8BFC BL 0x32B47CC
	0x032B8C00 LDRB W8, [X22 + 0x28]
	0x032B8C04 CBNZ W8, 0x32B8C18
	0x032B8C08 LDR X8, [X20 + 0x68]
	0x032B8C0C CBZ X8, 0x32B8DF4
	0x032B8C10 LDRB W8, [X8 + 0x10]
	0x032B8C14 TBZ X8, 0x0, 0x32B8C34
	0x032B8C18 CBZ X19, 0x32B8DF4
	0x032B8C1C MOVZ W8, 0x1
	0x032B8C20 STRB W8, [X19 + 0x3B]
	0x032B8C24 STRB W8, [X19 + 0x3D]
	0x032B8C28 CBZ X25, 0x32B8DF4
	0x032B8C2C STRB W8, [X25 + 0x3B]
	0x032B8C30 STRB W8, [X25 + 0x3D]
	0x032B8C34 LDR X9, [X31 + 0x38]
	0x032B8C38 CBZ X9, 0x32B8DF4
	0x032B8C3C STR X25, [X31 + 0x18]
	0x032B8C40 ADRP X8, 0xE6D000
	0x032B8C44 LDR X8, [X8 + 0x4D8]
	0x032B8C48 LDR W1, [X9 + 0x18]
	0x032B8C4C STR X9, [X31 + 0x10]
	0x032B8C50 LDR X0, [X8]
	0x032B8C54 BL 0x1C16D6C
	0x032B8C58 LDR X25, [X31 + 0x30]
	0x032B8C5C CBZ X25, 0x32B8DF4
	0x032B8C60 LDR X8, [X25 + 0x18]
	0x032B8C64 LDR X26, [X31 + 0x28]
	0x032B8C68 MOV X24, X0
	0x032B8C6C CMP W8, 0x1
	0x032B8C70 B.LT 0x32B8DB0
	0x032B8C74 MOV X29, X31
	0x032B8C78 AND X8, X8, 0x0
	0x032B8C7C ADD X9, X24, 0x20
	0x032B8C80 ADD X21, X26, 0x20
	0x032B8C84 ADD X23, X25, 0x20
	0x032B8C88 STR X9, [X31 + 0x20]
	0x032B8C8C CMP X29, W8, UXTW
	0x032B8C90 B.CS 0x32B8DF0
	0x032B8C94 LDR X27, [X23, X29, LSL #3]
	0x032B8C98 CBNZ X27, 0x32B8CE0
	0x032B8C9C CBZ X26, 0x32B8DF4
	0x032B8CA0 LDR W8, [X26 + 0x18]
	0x032B8CA4 CMP X29, X8
	0x032B8CA8 B.CS 0x32B8DF0
	0x032B8CAC LDR X0, [X21, X29, LSL #3]
	0x032B8CB0 CBZ X0, 0x32B8CC4
	0x032B8CB4 MOV X1, X31
	0x032B8CB8 BL 0x33BE520
	0x032B8CBC MOV X27, X0
	0x032B8CC0 B 0x32B8CE0
	0x032B8CC4 LDR X0, [X28]
	0x032B8CC8 LDR W8, [X0 + 0xE0]
	0x032B8CCC CBNZ W8, 0x32B8CD8
	0x032B8CD0 BL 0x1C16DFC
	0x032B8CD4 LDR X0, [X28]
	0x032B8CD8 LDR X8, [X0 + 0xB8]
	0x032B8CDC LDR X27, [X8 + 0xC0]
	0x032B8CE0 MOV X0, X20
	0x032B8CE4 MOV X1, X27
	0x032B8CE8 BL 0x32AA788
	0x032B8CEC CBNZ W0, 0x32B8DA0
	0x032B8CF0 LDR X0, [X28]
	0x032B8CF4 LDR W8, [X0 + 0xE0]
	0x032B8CF8 CBNZ W8, 0x32B8D04
	0x032B8CFC BL 0x1C16DFC
	0x032B8D00 LDR X0, [X28]
	0x032B8D04 LDR X8, [X0 + 0xB8]
	0x032B8D08 LDR X8, [X8 + 0x38]
	0x032B8D0C CMP X27, X8
	0x032B8D10 B.EQ 0x32B8DA0
	0x032B8D14 CBZ X26, 0x32B8DF4
	0x032B8D18 LDR W8, [X26 + 0x18]
	0x032B8D1C CMP X29, X8
	0x032B8D20 B.CS 0x32B8DF0
	0x032B8D24 LDR X0, [X21, X29, LSL #3]
	0x032B8D28 CBZ X0, 0x32B8D4C
	0x032B8D2C LDP X1, X2, [X20 + 0x28]
	0x032B8D30 LDR X3, [X20 + 0x38]
	0x032B8D34 LDP X4, X5, [X20 + 0x78]
	0x032B8D38 LDR X7, [X20 + 0x70]
	0x032B8D3C MOV X6, X20
	0x032B8D40 BL 0x32B3400
	0x032B8D44 CBNZ X24, 0x32B8D74
	0x032B8D48 B 0x32B8DF4
	0x032B8D4C LDR W8, [X25 + 0x18]
	0x032B8D50 CMP X29, X8
	0x032B8D54 B.CS 0x32B8DF0
	0x032B8D58 LDR X0, [X23, X29, LSL #3]
	0x032B8D5C LDP X1, X2, [X20 + 0x28]
	0x032B8D60 LDR X3, [X20 + 0x38]
	0x032B8D64 LDP X4, X5, [X20 + 0x78]
	0x032B8D68 LDR X6, [X20 + 0x70]
	0x032B8D6C BL 0x32B4240
	0x032B8D70 CBZ X24, 0x32B8DF4
	0x032B8D74 LDR W8, [X24 + 0x18]
	0x032B8D78 CMP X29, X8
	0x032B8D7C B.CS 0x32B8DF0
	0x032B8D80 LDR X8, [X31 + 0x20]
	0x032B8D84 MOV X27, X0
	0x032B8D88 MOV X1, X27
	0x032B8D8C STR X0, [X8, X29, LSL #3]
	0x032B8D90 MOV X0, X20
	0x032B8D94 BL 0x32B88AC
	0x032B8D98 CBZ X27, 0x32B8DF4
	0x032B8D9C STR X0, [X27 + 0x70]
	0x032B8DA0 LDR W8, [X25 + 0x18]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0x1125000
	009 Move W8, [X19+2073]
	010 Move X20, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {39}
	016 Move X0, 0xE6D000
	017 Move X0, [X0+3968]
	018 Call 0x1C17CF4
	019 Move X0, 0xE6D000
	020 Move X0, [X0+2928]
	021 Call 0x1C17CF4
	022 Move X0, 0xE3D000
	023 Move X0, [X0+3672]
	024 Call 0x1C17CF4
	025 Move X0, 0xE6D000
	026 Move X0, [X0+3976]
	027 Call 0x1C17CF4
	028 Move X0, 0xE6E000
	029 Move X0, [X0+96]
	030 Call 0x1C17CF4
	031 Move X0, 0xE3C000
	032 Move X0, [X0+3824]
	033 Call 0x1C17CF4
	034 Move X0, 0xE6E000
	035 Move X0, [X0+1048]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X19+2073], W8
	039 Move X0, [X21+136]
	040 Compare X0, 0
	041 JumpIfEqual {490}
	042 Move X1, X31
	043 Call SerStack.Peek, X0
	044 Compare X0, 0
	045 JumpIfEqual {490}
	046 Move X8, 0xE6E000
	047 Move X8, [X8+96]
	048 Move X19, X0
	049 Move X1, [X8]
	050 Move X8, [X0]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move W8, [X19+24]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move W8, [X19+176]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X1, X19
	057 Call ObjectReader.NextRectangleMap, X0, X1
	058 Move W8, [X19+192]
	059 Compare W8, 0
	060 JumpIfEqual {113}
	061 Move W8, [X19+128]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X8, [X19+184]
	064 Compare X8, 0
	065 JumpIfEqual {490}
	066 Move X9, [X19+168]
	067 Move W10, [X8+24]
	068 Move W11, 8
	069 Subtract X13, X11, 8
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X12, [X19+152]
	072 Compare X12, 0
	073 JumpIfEqual {490}
	074 Move W14, [X12+24]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Compare X9, 0
	077 JumpIfEqual {490}
	078 Move W14, [X9+24]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move W13, [X8]
	081 Move W12, [X12]
	082 Add W12, W12, W13
	083 Move [X9], W12
	084 NotImplemented "Instruction LDRSW not yet implemented."
	085 Subtract X13, X11, 7
	086 Add X11, X11, 1
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move W9, [X19+192]
	089 Move X8, [X19+168]
	090 Compare W9, 0
	091 JumpIfEqual {106}
	092 Move X9, [X19+152]
	093 Compare X9, 0
	094 JumpIfEqual {490}
	095 Move W10, [X9+24]
	096 Compare W10, 0
	097 JumpIfEqual {489}
	098 Compare X8, 0
	099 JumpIfEqual {490}
	100 Move W10, [X8+24]
	101 Compare W10, 0
	102 JumpIfEqual {489}
	103 Move W10, [X19+176]
	104 Move W9, [X9+32]
	105 Add W9, W9, W10
	106 Compare X8, 0
	107 JumpIfEqual {490}
	108 Move W9, [X8+24]
	109 Compare W9, 0
	110 JumpIfEqual {489}
	111 Move W9, [X19+176]
	112 Move [X8+32], W9
	113 Compare X20, 0
	114 JumpIfEqual {490}
	115 Move W8, [X20+32]
	116 Subtract W8, W8, 1
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move X9, -41029632
	119 Add X9, X9, 1356
	120 NotImplemented "Instruction ADR not yet implemented."
	121 Move W11, [X9]
	122 Add X10, X10, X11
	123 CallNoReturn X10
	124 Move X23, 0xE6D000
	125 Move X23, [X23+3968]
	126 Move X22, [X19+112]
	127 Move X0, [X23]
	128 Move W8, [X0+224]
	129 Compare W8, 0
	130 JumpIfNotEqual {133}
	131 Call 0x1C17DFC
	132 Move X0, [X23]
	133 Move X8, [X0+184]
	134 Move X8, [X8+56]
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move W9, [X0+224]
	137 Move X22, [X20+72]
	138 Compare W9, 0
	139 JumpIfNotEqual {144}
	140 Call 0x1C17DFC
	141 Move X0, [X23]
	142 Move X8, [X0+184]
	143 Move X8, [X8+56]
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move W9, [X19+120]
	146 Compare W9, 0
	147 JumpIfEqual {355}
	148 Move X9, [X20+64]
	149 Compare X9, 0
	150 JumpIfEqual {499}
	151 Move W9, [X0+224]
	152 Move X22, [X20+72]
	153 Compare W9, 0
	154 JumpIfNotEqual {159}
	155 Call 0x1C17DFC
	156 Move X8, [X23]
	157 Move X8, [X8+184]
	158 Move X8, [X8+56]
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Move X24, 0xE6D000
	161 Move W8, [X20+80]
	162 Move X24, [X24+3976]
	163 Add X1, X31, 12
	164 Move [X31+12], W8
	165 Move X0, [X24]
	166 Call 0x1C17E04
	167 Move X22, X0
	168 Move X0, [X24]
	169 Add X1, X31, 8
	170 Move [X31+8], W31
	171 Call 0x1C17E04
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move X21, [X20+56]
	174 Compare X21, 0
	175 JumpIfNotEqual {438}
	176 Move X0, [X23]
	177 Move X21, [X20+48]
	178 Move W20, [X20+80]
	179 Move W8, [X0+224]
	180 Compare W8, 0
	181 JumpIfNotEqual {183}
	182 Call 0x1C17DFC
	183 Move X0, X21
	184 Move W1, W20
	185 Move X8, [X20+72]
	186 Compare X8, 0
	187 JumpIfNotEqual {190}
	188 Move X8, [X19+112]
	189 Move [X20+72], X8
	190 Move X0, X21
	191 Move X1, X20
	192 Call ObjectReader.ParseObject, X0, X1
	193 Move X0, [X21+136]
	194 Compare X0, 0
	195 JumpIfEqual {490}
	196 Move X1, X20
	197 Move X2, X31
	198 Call SerStack.Push, X0, X1
	199 Move X0, [X19+112]
	200 Compare X0, 0
	201 JumpIfEqual {478}
	202 Move X1, X31
	203 Call Type.get_IsValueType, X0
	204 Move TEMP, X0
	205 And TEMP, TEMP, 1
	206 Compare TEMP, 1
	207 JumpIfNotEqual {211}
	208 Move W8, [X20+124]
	209 Compare W8, 0
	210 JumpIfEqual {369}
	211 Move X21, [X19+240]
	212 Compare X21, 0
	213 JumpIfEqual {339}
	214 Move X8, [X19+168]
	215 Compare X8, 0
	216 JumpIfEqual {490}
	217 Move W9, [X8+24]
	218 Compare W9, 0
	219 JumpIfEqual {489}
	220 Move X20, [X20+232]
	221 Move X0, [X21+48]
	222 Compare X0, 0
	223 JumpIfEqual {490}
	224 Move X8, [X0]
	225 Move X1, [X20+96]
	226 Move X9, [X8+376]
	227 Move X2, [X8+384]
	228 NotImplemented "Instruction BLR not yet implemented."
	229 Compare X0, 0
	230 JumpIfEqual {284}
	231 Move X20, [X19+240]
	232 Move X22, X0
	233 Compare X20, 0
	234 JumpIfEqual {308}
	235 Move X8, [X19+168]
	236 Compare X8, 0
	237 JumpIfEqual {490}
	238 Move W9, [X8+24]
	239 Compare W9, 0
	240 JumpIfEqual {489}
	241 Move X9, [X20]
	242 NotImplemented "Instruction LDRSW not yet implemented."
	243 Move X0, X22
	244 Move X1, [X9+64]
	245 Call 0x1C17E00
	246 Compare X0, 0
	247 JumpIfEqual {496}
	248 Move W8, [X20+24]
	249 NotImplemented "Instruction CMP not yet implemented."
	250 Add X8, X20, X21
	251 Move [X8+32], X22
	252 Move W8, [X19+176]
	253 Move W9, [X20+280]
	254 Add W8, W8, W9
	255 Subtract W8, W8, 1
	256 Move [X19+176], W8
	257 Move X0, X21
	258 Move X1, X20
	259 Move X2, X19
	260 Call ObjectReader.ParseString, X0, X1, X2
	261 Move X21, [X19+240]
	262 Compare X21, 0
	263 JumpIfEqual {324}
	264 Move X8, [X19+168]
	265 Compare X8, 0
	266 JumpIfEqual {490}
	267 Move W9, [X8+24]
	268 Compare W9, 0
	269 JumpIfEqual {489}
	270 Move X20, [X20+48]
	271 NotImplemented "Instruction LDRSW not yet implemented."
	272 Compare X20, 0
	273 JumpIfEqual {280}
	274 Move X8, [X21]
	275 Move X0, X20
	276 Move X1, [X8+64]
	277 Call 0x1C17E00
	278 Compare X0, 0
	279 JumpIfEqual {496}
	280 Move W8, [X21+24]
	281 NotImplemented "Instruction CMP not yet implemented."
	282 Add X8, X21, X22
	283 Move [X8+32], X20
	284 Move X8, 0xE3D000
	285 Move W1, [X19+128]
	286 Move X8, [X8+3672]
	287 Move X0, [X8]
	288 Call 0x1C17D6C
	289 Move X8, [X19+168]
	290 Move W4, [X19+128]
	291 Move X22, X0
	292 Move W1, W31
	293 Move X0, X8
	294 Move X2, X22
	295 Move W3, W31
	296 Move X5, X31
	297 Call Array.Copy, X0, X1, X2, X3, X4
	298 Move X0, [X21+48]
	299 Compare X0, 0
	300 JumpIfEqual {490}
	301 Move X8, [X0]
	302 Move X3, [X20+96]
	303 Move X1, [X19+88]
	304 Move X2, X22
	305 Move X9, [X8+440]
	306 Move X4, [X8+448]
	307 NotImplemented "Instruction BLR not yet implemented."
	308 Move X0, [X19+232]
	309 Compare X0, 0
	310 JumpIfEqual {490}
	311 Move X9, 0xE3C000
	312 Move X9, [X9+3824]
	313 Move X8, [X0]
	314 Move X1, [X9]
	315 Move W10, [X8+304]
	316 Move W9, [X1+304]
	317 NotImplemented "Instruction CMP not yet implemented."
	318 Move X8, [X8+200]
	319 Add X8, X8, X9
	320 NotImplemented "Instruction LDUR not yet implemented."
	321 NotImplemented "Instruction CMP not yet implemented."
	322 Move X2, [X19+168]
	323 Move X1, X22
	324 Move X0, [X19+232]
	325 Compare X0, 0
	326 JumpIfEqual {490}
	327 Move X9, 0xE3C000
	328 Move X9, [X9+3824]
	329 Move X8, [X0]
	330 Move X1, [X9]
	331 Move W10, [X8+304]
	332 Move W9, [X1+304]
	333 NotImplemented "Instruction CMP not yet implemented."
	334 Move X8, [X8+200]
	335 Add X8, X8, X9
	336 NotImplemented "Instruction LDUR not yet implemented."
	337 NotImplemented "Instruction CMP not yet implemented."
	338 Move X1, [X20+48]
	339 Move X0, [X19+232]
	340 Compare X0, 0
	341 JumpIfEqual {490}
	342 Move X9, 0xE3C000
	343 Move X9, [X9+3824]
	344 Move X8, [X0]
	345 Move X1, [X9]
	346 Move W10, [X8+304]
	347 Move W9, [X1+304]
	348 NotImplemented "Instruction CMP not yet implemented."
	349 Move X8, [X8+200]
	350 Add X8, X8, X9
	351 NotImplemented "Instruction LDUR not yet implemented."
	352 NotImplemented "Instruction CMP not yet implemented."
	353 Move X1, [X20+232]
	354 Move X2, [X19+168]
	355 Move X8, [X19+248]
	356 Compare X8, 0
	357 JumpIfEqual {425}
	358 Move X9, [X19+168]
	359 Compare X9, 0
	360 JumpIfEqual {490}
	361 Move W10, [X9+24]
	362 Compare W10, 0
	363 JumpIfEqual {489}
	364 Move X1, [X20+48]
	365 Move W2, [X9+32]
	366 Move X0, X8
	367 Move X3, X31
	368 Call PrimitiveArray.SetValue, X0, X1, X2
	369 Move W8, 1
	370 Move X0, X21
	371 Move [X20+224], W8
	372 Call ObjectReader.get_ValueFixupStack, X0
	373 Move X8, 0xE6E000
	374 Move X21, [X19+232]
	375 Move X23, [X19+168]
	376 Move X8, [X8+1048]
	377 Move X20, X0
	378 Move X8, [X8]
	379 Move X0, X8
	380 Call 0x1C17F10
	381 Move X22, X0
	382 Compare X21, 0
	383 JumpIfEqual {395}
	384 Move X9, 0xE3C000
	385 Move X9, [X9+3824]
	386 Move X8, [X21]
	387 Move X1, [X9]
	388 Move W10, [X8+304]
	389 Move W9, [X1+304]
	390 NotImplemented "Instruction CMP not yet implemented."
	391 Move X8, [X8+200]
	392 Add X8, X8, X9
	393 NotImplemented "Instruction LDUR not yet implemented."
	394 NotImplemented "Instruction CMP not yet implemented."
	395 Move X0, X22
	396 Move X1, X21
	397 Move X2, X23
	398 Move X3, X31
	399 Call ValueFixup..ctor, X0, X1, X2
	400 Compare X20, 0
	401 JumpIfEqual {490}
	402 Move X0, X20
	403 Move X1, X22
	404 Move X2, X31
	405 Call SerStack.Push, X0, X1
	406 Move X0, X21
	407 Move X1, X20
	408 Move X2, X19
	409 Call ObjectReader.ParseString, X0, X1, X2
	410 Move X21, [X20+48]
	411 Move X1, [X20+72]
	412 Move X0, X21
	413 Call ObjectReader.CheckSerializable, X0, X1
	414 Move X8, 0xE6D000
	415 Move X8, [X8+2928]
	416 Move X20, [X20+72]
	417 Move X0, [X8]
	418 Move W8, [X0+224]
	419 Compare W8, 0
	420 JumpIfNotEqual {422}
	421 Call 0x1C17DFC
	422 Move X0, X20
	423 Move X1, X31
	424 Call FormatterServices.GetUninitializedObject, X0
	425 Move X21, [X20+56]
	426 Compare X21, 0
	427 JumpIfNotEqual {438}
	428 Move X20, [X20+48]
	429 Move W8, [X0+224]
	430 Move W21, [X19+124]
	431 Compare W8, 0
	432 JumpIfNotEqual {434}
	433 Call 0x1C17DFC
	434 Move X0, X20
	435 Move W1, W21
	436 Call Converter.FromString, X0, X1
	437 Move X21, X0
	438 Move X20, [X19+240]
	439 Compare X20, 0
	440 JumpIfEqual {460}
	441 Move X8, [X19+168]
	442 Compare X8, 0
	443 JumpIfEqual {490}
	444 Move W9, [X8+24]
	445 Compare W9, 0
	446 JumpIfEqual {489}
	447 NotImplemented "Instruction LDRSW not yet implemented."
	448 Compare X21, 0
	449 JumpIfEqual {456}
	450 Move X8, [X20]
	451 Move X0, X21
	452 Move X1, [X8+64]
	453 Call 0x1C17E00
	454 Compare X0, 0
	455 JumpIfEqual {496}
	456 Move W8, [X20+24]
	457 NotImplemented "Instruction CMP not yet implemented."
	458 Add X8, X20, X22
	459 Move [X8+32], X21
	460 Move X0, [X19+232]
	461 Compare X0, 0
	462 JumpIfEqual {490}
	463 Move X9, 0xE3C000
	464 Move X9, [X9+3824]
	465 Move X8, [X0]
	466 Move X1, [X9]
	467 Move W10, [X8+304]
	468 Move W9, [X1+304]
	469 NotImplemented "Instruction CMP not yet implemented."
	470 Move X8, [X8+200]
	471 Add X8, X8, X9
	472 NotImplemented "Instruction LDUR not yet implemented."
	473 NotImplemented "Instruction CMP not yet implemented."
	474 Move X2, [X19+168]
	475 Move X1, X21
	476 Move X3, X31
	477 Call Array.SetValue, X0, X1, X2
	478 Move W8, [X19+176]
	479 Move X22, [X31+32]
	480 Move X21, [X31+40]
	481 Move X24, [X31+16]
	482 Move X23, [X31+24]
	483 Add W8, W8, 1
	484 Move [X19+176], W8
	485 Move X20, [X31+48]
	486 Move X19, [X31+56]
	487 Move X30, [X31+64]
	488 Return 
	489 Call 0x1C17F28
	490 Call 0x1C17F20
	491 Move X0, X19
	492 Call 0x1C181E0
	493 Move X1, X20
	494 Move X2, X19
	495 Call ObjectReader.ParseError, X0, X1, X2
	496 Call 0x1C17F44
	497 Move X1, X31
	498 Call 0x1C17DEC
	499 Move X0, 0xE6E000
	500 Move X0, [X0+1136]
	501 Call 0x1C17D08
	502 Move X1, X31
	503 Call Environment.GetResourceString, X0
	504 Move X19, X0
	505 Move X0, 0xE66000
	506 Move X0, [X0+736]
	507 Call 0x1C17D08
	508 Call 0x1C17F10
	509 Move X1, X19
	510 Move X2, X31
	511 Move X20, X0
	512 Call SerializationException..ctor, X0, X1
	513 Move X0, 0xE6E000
	514 Move X0, [X0+1144]
	515 Call 0x1C17D08
	516 Move X1, X0
	517 Move X0, X20
	518 Call 0x1C17DEC
	519 Move X0, X21
	520 Call 0x1C181E0

Method: System.Void ParseArrayMemberEnd(System.Runtime.Serialization.Formatters.Binary.ParseRecord pr)

Disassembly:
	0x032B8DE4 LDP X29, X30, [X31 + 0x40]
	0x032B8DE8 ADD X31, X31, 0xA0
	0x032B8DEC RET
	0x032B8DF0 BL 0x1C16F28
	0x032B8DF4 BL 0x1C16F20
	0x032B8DF8 ADRP X0, 0xE6C000
	0x032B8DFC LDR X0, [X0 + 0xCB0]
	0x032B8E00 BL 0x1C16D08
	0x032B8E04 MOV X1, X31
	0x032B8E08 BL 0x33BDD84

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {11}
	004 Move W8, [X1+32]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move X30, [X31+16]
	007 Call ObjectReader.ParseObjectEnd, X0, X1
	008 Return 
	009 Move X30, [X31+16]
	010 Return 
	011 Call 0x1C17F20

Method: System.Void ParseMember(System.Runtime.Serialization.Formatters.Binary.ParseRecord pr)

Disassembly:
	0x032B7720 LDR W13, [X8, X11, LSL #2]
	0x032B7724 LDR W12, [X12, X11, LSL #2]
	0x032B7728 ADD W12, W12, W13
	0x032B772C STR W12, [X9, X11, LSL #2]
	0x032B7730 LDRSW X12, [X19 + 0x80]
	0x032B7734 SUB X13, X11, 0x7
	0x032B7738 ADD X11, X11, 0x1
	0x032B773C CMP X13, X12
	0x032B7740 B.LT 0x32B76F0
	0x032B7744 B 0x32B7794
	0x032B7748 LDRB W9, [X19 + 0xC0]
	0x032B774C LDR X8, [X19 + 0xA8]
	0x032B7750 CBZ W9, 0x32B7780
	0x032B7754 LDR X9, [X19 + 0x98]
	0x032B7758 CBZ X9, 0x32B7D28
	0x032B775C LDR W10, [X9 + 0x18]
	0x032B7760 CBZ W10, 0x32B7D24
	0x032B7764 CBZ X8, 0x32B7D28
	0x032B7768 LDR W10, [X8 + 0x18]
	0x032B776C CBZ W10, 0x32B7D24
	0x032B7770 LDR W10, [X19 + 0xB0]
	0x032B7774 LDR W9, [X9 + 0x20]
	0x032B7778 ADD W9, W9, W10
	0x032B777C B 0x32B7790
	0x032B7780 CBZ X8, 0x32B7D28
	0x032B7784 LDR W9, [X8 + 0x18]
	0x032B7788 CBZ W9, 0x32B7D24
	0x032B778C LDR W9, [X19 + 0xB0]
	0x032B7790 STR W9, [X8 + 0x20]
	0x032B7794 CBZ X20, 0x32B7D28
	0x032B7798 LDR W8, [X20 + 0x20]
	0x032B779C SUB W8, W8, 0x1
	0x032B77A0 CMP W8, 0x3
	0x032B77A4 B.HI 0x32B7D34
	0x032B77A8 ADRP X9, 0xFFFFFFFFFD8DF000
	0x032B77AC ADD X9, X9, 0x54C
	0x032B77B0 ADR X10, 0x10
	0x032B77B4 LDRB W11, [X9, X8, LSL]
	0x032B77B8 ADD X10, X10, X11, 0x2, LSL
	0x032B77BC BR X10
	0x032B77C0 ADRP X23, 0xE6D000
	0x032B77C4 LDR X23, [X23 + 0xF80]
	0x032B77C8 LDR X22, [X19 + 0x70]
	0x032B77CC LDR X0, [X23]
	0x032B77D0 LDR W8, [X0 + 0xE0]
	0x032B77D4 CBNZ W8, 0x32B77E0
	0x032B77D8 BL 0x1C16DFC
	0x032B77DC LDR X0, [X23]
	0x032B77E0 LDR X8, [X0 + 0xB8]
	0x032B77E4 LDR X8, [X8 + 0x38]
	0x032B77E8 CMP X22, X8
	0x032B77EC B.EQ 0x32B7998
	0x032B77F0 LDR W9, [X0 + 0xE0]
	0x032B77F4 LDR X22, [X20 + 0x48]
	0x032B77F8 CBNZ W9, 0x32B780C
	0x032B77FC BL 0x1C16DFC
	0x032B7800 LDR X0, [X23]
	0x032B7804 LDR X8, [X0 + 0xB8]
	0x032B7808 LDR X8, [X8 + 0x38]
	0x032B780C CMP X22, X8
	0x032B7810 B.EQ 0x32B7998
	0x032B7814 LDRB W9, [X19 + 0x78]
	0x032B7818 CBZ W9, 0x32B7B28
	0x032B781C LDR X9, [X20 + 0x40]
	0x032B7820 CBZ X9, 0x32B7D4C
	0x032B7824 LDR W9, [X0 + 0xE0]
	0x032B7828 LDR X22, [X20 + 0x48]
	0x032B782C CBNZ W9, 0x32B7840
	0x032B7830 BL 0x1C16DFC
	0x032B7834 LDR X8, [X23]
	0x032B7838 LDR X8, [X8 + 0xB8]
	0x032B783C LDR X8, [X8 + 0x38]
	0x032B7840 CMP X22, X8
	0x032B7844 B.EQ 0x32B7BF0
	0x032B7848 ADRP X24, 0xE6D000
	0x032B784C LDR W8, [X20 + 0x50]
	0x032B7850 LDR X24, [X24 + 0xF88]
	0x032B7854 ADD X1, X31, 0xC
	0x032B7858 STR W8, [X31 + 0xC]
	0x032B785C LDR X0, [X24]
	0x032B7860 BL 0x1C16E04
	0x032B7864 MOV X22, X0
	0x032B7868 LDR X0, [X24]
	0x032B786C ADD X1, X31, 0x8
	0x032B7870 STR W31, [X31 + 0x8]
	0x032B7874 BL 0x1C16E04
	0x032B7878 CMP X22, X0
	0x032B787C B.EQ 0x32B7C08
	0x032B7880 LDR X21, [X20 + 0x38]
	0x032B7884 CBNZ X21, 0x32B7C6C
	0x032B7888 LDR X0, [X23]
	0x032B788C LDR X21, [X20 + 0x30]
	0x032B7890 LDR W20, [X20 + 0x50]
	0x032B7894 LDR W8, [X0 + 0xE0]
	0x032B7898 CBNZ W8, 0x32B78A0
	0x032B789C BL 0x1C16DFC
	0x032B78A0 MOV X0, X21
	0x032B78A4 MOV W1, W20
	0x032B78A8 B 0x32B7C64
	0x032B78AC LDR X8, [X20 + 0x48]
	0x032B78B0 CBNZ X8, 0x32B78BC
	0x032B78B4 LDR X8, [X19 + 0x70]
	0x032B78B8 STR X8, [X20 + 0x48]
	0x032B78BC MOV X0, X21
	0x032B78C0 MOV X1, X20
	0x032B78C4 BL 0x32B61E4
	0x032B78C8 LDR X0, [X21 + 0x88]
	0x032B78CC CBZ X0, 0x32B7D28
	0x032B78D0 MOV X1, X20
	0x032B78D4 MOV X2, X31
	0x032B78D8 BL 0x32BD7AC
	0x032B78DC LDR X0, [X19 + 0x70]
	0x032B78E0 CBZ X0, 0x32B7D04
	0x032B78E4 MOV X1, X31
	0x032B78E8 BL 0x33970C4
	0x032B78EC TBZ X0, 0x0, 0x32B78F8
	0x032B78F0 LDR W8, [X20 + 0x7C]
	0x032B78F4 CBZ W8, 0x32B7B58
	0x032B78F8 LDR X21, [X19 + 0xF0]
	0x032B78FC CBZ X21, 0x32B7AE0
	0x032B7900 LDR X8, [X19 + 0xA8]
	0x032B7904 CBZ X8, 0x32B7D28
	0x032B7908 LDR W9, [X8 + 0x18]
	0x032B790C CBZ W9, 0x32B7D24
	0x032B7910 LDR X20, [X20 + 0xE8]
	0x032B7914 B 0x32B79C4
	0x032B7918 LDR X0, [X21 + 0x30]
	0x032B791C CBZ X0, 0x32B7D28
	0x032B7920 LDR X8, [X0]
	0x032B7924 LDR X1, [X20 + 0x60]
	0x032B7928 LDP X9, X2, [X8 + 0x178]
	0x032B792C BLR X9
	0x032B7930 CBZ X0, 0x32B79F8
	0x032B7934 LDR X20, [X19 + 0xF0]
	0x032B7938 MOV X22, X0
	0x032B793C CBZ X20, 0x32B7A54
	0x032B7940 LDR X8, [X19 + 0xA8]
	0x032B7944 CBZ X8, 0x32B7D28
	0x032B7948 LDR W9, [X8 + 0x18]
	0x032B794C CBZ W9, 0x32B7D24
	0x032B7950 LDR X9, [X20]
	0x032B7954 LDRSW X21, [X8 + 0x20]
	0x032B7958 MOV X0, X22
	0x032B795C LDR X1, [X9 + 0x40]
	0x032B7960 BL 0x1C16E00
	0x032B7964 CBZ X0, 0x32B7D40
	0x032B7968 LDR W8, [X20 + 0x18]
	0x032B796C CMP W21, W8
	0x032B7970 B.CS 0x32B7D24
	0x032B7974 ADD X8, X20, X21, 0x3, LSL
	0x032B7978 STR X22, [X8 + 0x20]
	0x032B797C B 0x32B7D04
	0x032B7980 LDR W8, [X19 + 0xB0]
	0x032B7984 LDR W9, [X20 + 0x118]
	0x032B7988 ADD W8, W8, W9
	0x032B798C SUB W8, W8, 0x1
	0x032B7990 STR W8, [X19 + 0xB0]
	0x032B7994 B 0x32B7D04
	0x032B7998 MOV X0, X21
	0x032B799C MOV X1, X20
	0x032B79A0 MOV X2, X19
	0x032B79A4 BL 0x32B7DA4
	0x032B79A8 LDR X21, [X19 + 0xF0]
	0x032B79AC CBZ X21, 0x32B7A9C
	0x032B79B0 LDR X8, [X19 + 0xA8]
	0x032B79B4 CBZ X8, 0x32B7D28
	0x032B79B8 LDR W9, [X8 + 0x18]
	0x032B79BC CBZ W9, 0x32B7D24
	0x032B79C0 LDR X20, [X20 + 0x30]
	0x032B79C4 LDRSW X22, [X8 + 0x20]
	0x032B79C8 CBZ X20, 0x32B79E0
	0x032B79CC LDR X8, [X21]
	0x032B79D0 MOV X0, X20
	0x032B79D4 LDR X1, [X8 + 0x40]
	0x032B79D8 BL 0x1C16E00
	0x032B79DC CBZ X0, 0x32B7D40
	0x032B79E0 LDR W8, [X21 + 0x18]
	0x032B79E4 CMP W22, W8
	0x032B79E8 B.CS 0x32B7D24
	0x032B79EC ADD X8, X21, X22, 0x3, LSL
	0x032B79F0 STR X20, [X8 + 0x20]
	0x032B79F4 B 0x32B7D04
	0x032B79F8 ADRP X8, 0xE3D000
	0x032B79FC LDR W1, [X19 + 0x80]
	0x032B7A00 LDR X8, [X8 + 0xE58]
	0x032B7A04 LDR X0, [X8]
	0x032B7A08 BL 0x1C16D6C
	0x032B7A0C LDR X8, [X19 + 0xA8]
	0x032B7A10 LDR W4, [X19 + 0x80]
	0x032B7A14 MOV X22, X0
	0x032B7A18 MOV W1, W31
	0x032B7A1C MOV X0, X8
	0x032B7A20 MOV X2, X22
	0x032B7A24 MOV W3, W31
	0x032B7A28 MOV X5, X31
	0x032B7A2C BL 0x339FCE8
	0x032B7A30 LDR X0, [X21 + 0x30]
	0x032B7A34 CBZ X0, 0x32B7D28
	0x032B7A38 LDR X8, [X0]
	0x032B7A3C LDR X3, [X20 + 0x60]
	0x032B7A40 LDR X1, [X19 + 0x58]
	0x032B7A44 MOV X2, X22
	0x032B7A48 LDP X9, X4, [X8 + 0x1B8]
	0x032B7A4C BLR X9
	0x032B7A50 B 0x32B7D04
	0x032B7A54 LDR X0, [X19 + 0xE8]
	0x032B7A58 CBZ X0, 0x32B7D28
	0x032B7A5C ADRP X9, 0xE3C000
	0x032B7A60 LDR X9, [X9 + 0xEF0]
	0x032B7A64 LDR X8, [X0]
	0x032B7A68 LDR X1, [X9]
	0x032B7A6C LDRB W10, [X8 + 0x130]
	0x032B7A70 LDRB W9, [X1 + 0x130]
	0x032B7A74 CMP W10, W9
	0x032B7A78 B.CC 0x32B7D30
	0x032B7A7C LDR X8, [X8 + 0xC8]
	0x032B7A80 ADD X8, X8, X9, 0x3, LSL
	0x032B7A84 LDUR X8, [X8 - 0x8]
	0x032B7A88 CMP X8, X1
	0x032B7A8C B.NE 0x32B7D30
	0x032B7A90 LDR X2, [X19 + 0xA8]
	0x032B7A94 MOV X1, X22
	0x032B7A98 B 0x32B7CFC
	0x032B7A9C LDR X0, [X19 + 0xE8]
	0x032B7AA0 CBZ X0, 0x32B7D28
	0x032B7AA4 ADRP X9, 0xE3C000
	0x032B7AA8 LDR X9, [X9 + 0xEF0]
	0x032B7AAC LDR X8, [X0]
	0x032B7AB0 LDR X1, [X9]
	0x032B7AB4 LDRB W10, [X8 + 0x130]
	0x032B7AB8 LDRB W9, [X1 + 0x130]
	0x032B7ABC CMP W10, W9
	0x032B7AC0 B.CC 0x32B7D30
	0x032B7AC4 LDR X8, [X8 + 0xC8]
	0x032B7AC8 ADD X8, X8, X9, 0x3, LSL
	0x032B7ACC LDUR X8, [X8 - 0x8]
	0x032B7AD0 CMP X8, X1
	0x032B7AD4 B.NE 0x32B7D30
	0x032B7AD8 LDR X1, [X20 + 0x30]
	0x032B7ADC B 0x32B7B20
	0x032B7AE0 LDR X0, [X19 + 0xE8]
	0x032B7AE4 CBZ X0, 0x32B7D28
	0x032B7AE8 ADRP X9, 0xE3C000
	0x032B7AEC LDR X9, [X9 + 0xEF0]
	0x032B7AF0 LDR X8, [X0]
	0x032B7AF4 LDR X1, [X9]
	0x032B7AF8 LDRB W10, [X8 + 0x130]
	0x032B7AFC LDRB W9, [X1 + 0x130]
	0x032B7B00 CMP W10, W9
	0x032B7B04 B.CC 0x32B7D30
	0x032B7B08 LDR X8, [X8 + 0xC8]
	0x032B7B0C ADD X8, X8, X9, 0x3, LSL
	0x032B7B10 LDUR X8, [X8 - 0x8]
	0x032B7B14 CMP X8, X1
	0x032B7B18 B.NE 0x32B7D30
	0x032B7B1C LDR X1, [X20 + 0xE8]
	0x032B7B20 LDR X2, [X19 + 0xA8]
	0x032B7B24 B 0x32B7CFC
	0x032B7B28 LDR X8, [X19 + 0xF8]
	0x032B7B2C CBZ X8, 0x32B7C40
	0x032B7B30 LDR X9, [X19 + 0xA8]
	0x032B7B34 CBZ X9, 0x32B7D28
	0x032B7B38 LDR W10, [X9 + 0x18]
	0x032B7B3C CBZ W10, 0x32B7D24
	0x032B7B40 LDR X1, [X20 + 0x30]
	0x032B7B44 LDR W2, [X9 + 0x20]
	0x032B7B48 MOV X0, X8
	0x032B7B4C MOV X3, X31
	0x032B7B50 BL 0x32BF0F0
	0x032B7B54 B 0x32B7D04
	0x032B7B58 MOVZ W8, 0x1
	0x032B7B5C MOV X0, X21
	0x032B7B60 STRB W8, [X20 + 0xE0]
	0x032B7B64 BL 0x32B5738
	0x032B7B68 ADRP X8, 0xE6E000
	0x032B7B6C LDR X21, [X19 + 0xE8]
	0x032B7B70 LDR X23, [X19 + 0xA8]
	0x032B7B74 LDR X8, [X8 + 0x418]
	0x032B7B78 MOV X20, X0
	0x032B7B7C LDR X8, [X8]
	0x032B7B80 MOV X0, X8
	0x032B7B84 BL 0x1C16F10
	0x032B7B88 MOV X22, X0
	0x032B7B8C CBZ X21, 0x32B7BC4
	0x032B7B90 ADRP X9, 0xE3C000
	0x032B7B94 LDR X9, [X9 + 0xEF0]
	0x032B7B98 LDR X8, [X21]
	0x032B7B9C LDR X1, [X9]
	0x032B7BA0 LDRB W10, [X8 + 0x130]
	0x032B7BA4 LDRB W9, [X1 + 0x130]
	0x032B7BA8 CMP W10, W9
	0x032B7BAC B.CC 0x32B7D9C
	0x032B7BB0 LDR X8, [X8 + 0xC8]
	0x032B7BB4 ADD X8, X8, X9, 0x3, LSL
	0x032B7BB8 LDUR X8, [X8 - 0x8]
	0x032B7BBC CMP X8, X1
	0x032B7BC0 B.NE 0x32B7D9C
	0x032B7BC4 MOV X0, X22
	0x032B7BC8 MOV X1, X21
	0x032B7BCC MOV X2, X23
	0x032B7BD0 MOV X3, X31
	0x032B7BD4 BL 0x32BE5F0
	0x032B7BD8 CBZ X20, 0x32B7D28
	0x032B7BDC MOV X0, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x1126000
	008 Move W8, [X20+2074]
	009 Move X19, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0xE46000
	016 Move X0, [X0+2536]
	017 Call 0x1C17CF4
	018 Move X0, 0xE6E000
	019 Move X0, [X0+3968]
	020 Call 0x1C17CF4
	021 Move X0, 0xE6F000
	022 Move X0, [X0+96]
	023 Call 0x1C17CF4
	024 Move X0, 0xE6F000
	025 Move X0, [X0+1048]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+2074], W8
	029 Move X0, [X21+136]
	030 Compare X0, 0
	031 JumpIfEqual {317}
	032 Move X1, X31
	033 Call SerStack.Peek, X0
	034 Move X20, X0
	035 Compare X0, 0
	036 JumpIfEqual {42}
	037 Move X8, 0xE6F000
	038 Move X8, [X8+96]
	039 Move X1, [X8]
	040 Move X8, [X20]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Compare X19, 0
	043 JumpIfEqual {317}
	044 Move W8, [X19+28]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X0, X21
	047 Move X1, X19
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Move X23, [X31+56]
	054 Call ObjectReader.ParseArrayMember, X0, X1
	055 Return 
	056 Move X8, [X19+72]
	057 Compare X8, 0
	058 JumpIfEqual {100}
	059 Move W8, [X19+32]
	060 Subtract W8, W8, 1
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X9, -41025536
	063 Add X9, X9, 1352
	064 NotImplemented "Instruction ADR not yet implemented."
	065 Move W11, [X9]
	066 Add X10, X10, X11
	067 CallNoReturn X10
	068 Move X23, 0xE6E000
	069 Move X23, [X23+3968]
	070 Move X22, [X19+72]
	071 Move X0, [X23]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {77}
	075 Call 0x1C17DFC
	076 Move X0, [X23]
	077 Move X8, [X0+184]
	078 Move X9, [X8+56]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move W22, [X19+80]
	081 Compare W22, 0
	082 JumpIfEqual {248}
	083 Move X2, [X19+56]
	084 Compare X2, 0
	085 JumpIfNotEqual {95}
	086 Move W8, [X0+224]
	087 Move X21, [X19+48]
	088 Compare W8, 0
	089 JumpIfNotEqual {91}
	090 Call 0x1C17DFC
	091 Move X0, X21
	092 Move W1, W22
	093 Call Converter.FromString, X0, X1
	094 Move X2, X0
	095 Compare X20, 0
	096 JumpIfEqual {317}
	097 Move X0, [X20+216]
	098 Compare X0, 0
	099 JumpIfNotEqual {237}
	100 Compare X20, 0
	101 JumpIfEqual {317}
	102 Move X0, [X20+216]
	103 Compare X0, 0
	104 JumpIfEqual {317}
	105 Move W8, [X0+46]
	106 Compare W8, 0
	107 JumpIfEqual {59}
	108 Move X1, [X19+40]
	109 Call ReadObjectInfo.GetType, X0, X1
	110 Move [X19+72], X0
	111 Compare X0, 0
	112 JumpIfEqual {59}
	113 Move X8, 0xE6E000
	114 Move X8, [X8+3968]
	115 Move X22, X0
	116 Move X0, [X8]
	117 Move W8, [X0+224]
	118 Compare W8, 0
	119 JumpIfNotEqual {121}
	120 Call 0x1C17DFC
	121 Move X0, X22
	122 Call Converter.ToCode, X0
	123 Move [X19+80], W0
	124 Move X0, X21
	125 Move X1, X19
	126 Call ObjectReader.ParseObject, X0, X1
	127 Move X0, [X21+136]
	128 Compare X0, 0
	129 JumpIfEqual {317}
	130 Move X1, X19
	131 Move X2, X31
	132 Call SerStack.Push, X0, X1
	133 Move X8, [X19+216]
	134 Compare X8, 0
	135 JumpIfEqual {221}
	136 Move X0, [X8+24]
	137 Compare X0, 0
	138 JumpIfEqual {221}
	139 Move X1, X31
	140 Call Type.get_IsValueType, X0
	141 Move TEMP, X0
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfNotEqual {221}
	145 Move W8, 1
	146 Move X0, X21
	147 Move [X19+224], W8
	148 Call ObjectReader.get_ValueFixupStack, X0
	149 Compare X20, 0
	150 JumpIfEqual {317}
	151 Move X8, 0xE6F000
	152 Move X22, [X20+232]
	153 Move X23, [X19+40]
	154 Move X20, [X20+216]
	155 Move X8, [X8+1048]
	156 Move X21, X0
	157 Move X0, [X8]
	158 Call 0x1C17F10
	159 Move X1, X22
	160 Move X2, X23
	161 Move X3, X20
	162 Move X4, X31
	163 Move X19, X0
	164 Call ValueFixup..ctor, X0, X1, X2, X3
	165 Compare X21, 0
	166 JumpIfEqual {317}
	167 Move X0, X21
	168 Move X1, X19
	169 Move X20, [X31+32]
	170 Move X19, [X31+40]
	171 Move X22, [X31+16]
	172 Move X21, [X31+24]
	173 Move X2, X31
	174 Move X30, [X31+48]
	175 Move X23, [X31+56]
	176 Call SerStack.Push, X0, X1
	177 Return 
	178 Move X0, [X21+48]
	179 Compare X0, 0
	180 JumpIfEqual {317}
	181 Move X8, [X0]
	182 Move X1, [X19+96]
	183 Move X9, [X8+376]
	184 Move X2, [X8+384]
	185 NotImplemented "Instruction BLR not yet implemented."
	186 Compare X20, 0
	187 JumpIfEqual {317}
	188 Move X2, X0
	189 Move X0, [X20+216]
	190 Compare X0, 0
	191 JumpIfEqual {317}
	192 Move X1, [X19+40]
	193 Add X3, X20, 272
	194 Add X4, X20, 264
	195 Compare X2, 0
	196 JumpIfNotEqual {240}
	197 Call ReadObjectInfo.AddValue, X0, X1, X2, X3, X4
	198 Move X0, [X20+216]
	199 Compare X0, 0
	200 JumpIfEqual {317}
	201 Move X3, [X19+96]
	202 Move X2, [X19+40]
	203 Move X1, [X20+88]
	204 Move X20, [X31+32]
	205 Move X19, [X31+40]
	206 Move X22, [X31+16]
	207 Move X21, [X31+24]
	208 Move X30, [X31+48]
	209 Move X23, [X31+56]
	210 Call ReadObjectInfo.RecordFixup, X0, X1, X2, X3
	211 Return 
	212 Compare X20, 0
	213 JumpIfEqual {317}
	214 Move X0, [X20+216]
	215 Compare X0, 0
	216 JumpIfEqual {317}
	217 Move X1, [X19+40]
	218 Add X4, X20, 264
	219 Add X3, X20, 272
	220 Move X2, X31
	221 Compare X20, 0
	222 JumpIfEqual {317}
	223 Move X0, [X20+216]
	224 Compare X0, 0
	225 JumpIfEqual {317}
	226 Move X2, [X19+232]
	227 Move X0, X21
	228 Move X1, X19
	229 Move X2, X20
	230 Call ObjectReader.ParseString, X0, X1, X2
	231 Compare X20, 0
	232 JumpIfEqual {317}
	233 Move X0, [X20+216]
	234 Compare X0, 0
	235 JumpIfEqual {317}
	236 Move X2, [X19+48]
	237 Move X1, [X19+40]
	238 Add X4, X20, 264
	239 Add X3, X20, 272
	240 Move X20, [X31+32]
	241 Move X19, [X31+40]
	242 Move X22, [X31+16]
	243 Move X21, [X31+24]
	244 Move X30, [X31+48]
	245 Move X23, [X31+56]
	246 Call ReadObjectInfo.AddValue, X0, X1, X2, X3, X4
	247 Return 
	248 Move W9, [X19+24]
	249 NotImplemented "Instruction CMP not yet implemented."
	250 Compare X20, 0
	251 JumpIfEqual {317}
	252 Move X8, 0xE46000
	253 Move X8, [X8+2536]
	254 Move X22, [X20+216]
	255 Move X21, [X19+40]
	256 Move X19, [X19+48]
	257 Move X0, [X8]
	258 Move W8, [X0+224]
	259 Compare W8, 0
	260 JumpIfNotEqual {262}
	261 Call 0x1C17DFC
	262 Move X0, X19
	263 Move X1, X31
	264 Call Convert.FromBase64String, X0
	265 Compare X22, 0
	266 JumpIfEqual {317}
	267 Move X2, X0
	268 Add X4, X20, 264
	269 Add X3, X20, 272
	270 Move X0, X22
	271 Move X1, X21
	272 Move W9, [X0+224]
	273 Move X22, [X19+72]
	274 Compare W9, 0
	275 JumpIfNotEqual {279}
	276 Call 0x1C17DFC
	277 Move X8, [X23]
	278 Move X8, [X8+184]
	279 Move X8, [X8+192]
	280 NotImplemented "Instruction CMP not yet implemented."
	281 Move X0, X21
	282 Move X1, X19
	283 Move X2, X20
	284 Call ObjectReader.ParseString, X0, X1, X2
	285 Move X0, [X23]
	286 Move X21, [X19+72]
	287 Move W8, [X0+224]
	288 Compare W8, 0
	289 JumpIfNotEqual {291}
	290 Call 0x1C17DFC
	291 Compare X20, 0
	292 JumpIfEqual {317}
	293 Move X8, [X23]
	294 Move X0, [X20+216]
	295 Move X8, [X8+184]
	296 Move X8, [X8+200]
	297 NotImplemented "Instruction CMP not yet implemented."
	298 Compare X0, 0
	299 JumpIfEqual {317}
	300 Move W8, [X0+44]
	301 Compare W8, 0
	302 JumpIfEqual {310}
	303 Move X1, [X19+40]
	304 Move X2, [X19+48]
	305 Add X3, X20, 272
	306 Add X4, X20, 264
	307 Compare X0, 0
	308 JumpIfEqual {317}
	309 Move X2, [X19+72]
	310 Move X20, [X31+32]
	311 Move X19, [X31+40]
	312 Move X22, [X31+16]
	313 Move X21, [X31+24]
	314 Move X30, [X31+48]
	315 Move X23, [X31+56]
	316 Return 
	317 Call 0x1C17F20
	318 Move X0, X20
	319 Call 0x1C181E0
	320 Move X1, X19
	321 Move X2, X20
	322 Call ObjectReader.ParseError, X0, X1, X2
	323 Move X0, 0xE3D000
	324 Move X0, [X0+2512]
	325 Call 0x1C17D08
	326 Move W1, 1
	327 Call 0x1C17D6C
	328 Move X20, X0
	329 Move X0, X19
	330 Call 0x19913C0
	331 Move X19, [X19+40]
	332 Move X0, X20
	333 Call 0x19913C0
	334 Move X0, X20
	335 Move X1, X19
	336 Call 0x19990B4
	337 Move X0, X20
	338 Move X1, X31
	339 Move X2, X19
	340 Call 0x1994444
	341 Move X0, 0xE6F000
	342 Move X0, [X0+1056]
	343 Call 0x1C17D08
	344 Move X1, X20
	345 Move X2, X31
	346 Call Environment.GetResourceString, X0, X1
	347 Move X19, X0
	348 Move X0, 0xE67000
	349 Move X0, [X0+736]
	350 Call 0x1C17D08
	351 Call 0x1C17F10
	352 Move X1, X19
	353 Move X2, X31
	354 Move X20, X0
	355 Call SerializationException..ctor, X0, X1
	356 Move X0, 0xE6F000
	357 Move X0, [X0+1064]
	358 Call 0x1C17D08
	359 Move X1, X0
	360 Move X0, X20
	361 Call 0x1C17DEC

Method: System.Void ParseMemberEnd(System.Runtime.Serialization.Formatters.Binary.ParseRecord pr)

Disassembly:
	0x032B7BE0 MOV X1, X22
	0x032B7BE4 MOV X2, X31
	0x032B7BE8 BL 0x32BD7AC
	0x032B7BEC B 0x32B7D04
	0x032B7BF0 MOV X0, X21
	0x032B7BF4 MOV X1, X20
	0x032B7BF8 MOV X2, X19
	0x032B7BFC BL 0x32B7DA4
	0x032B7C00 LDR X21, [X20 + 0x30]
	0x032B7C04 B 0x32B7C6C
	0x032B7C08 LDR X1, [X20 + 0x48]
	0x032B7C0C MOV X0, X21
	0x032B7C10 BL 0x32B5E0C
	0x032B7C14 ADRP X8, 0xE6D000
	0x032B7C18 LDR X8, [X8 + 0xB70]
	0x032B7C1C LDR X20, [X20 + 0x48]
	0x032B7C20 LDR X0, [X8]
	0x032B7C24 LDR W8, [X0 + 0xE0]
	0x032B7C28 CBNZ W8, 0x32B7C30
	0x032B7C2C BL 0x1C16DFC
	0x032B7C30 MOV X0, X20
	0x032B7C34 MOV X1, X31
	0x032B7C38 BL 0x32A1868
	0x032B7C3C B 0x32B7C68
	0x032B7C40 LDR X21, [X20 + 0x38]
	0x032B7C44 CBNZ X21, 0x32B7C6C
	0x032B7C48 LDR X20, [X20 + 0x30]
	0x032B7C4C LDR W8, [X0 + 0xE0]
	0x032B7C50 LDR W21, [X19 + 0x7C]
	0x032B7C54 CBNZ W8, 0x32B7C5C
	0x032B7C58 BL 0x1C16DFC
	0x032B7C5C MOV X0, X20
	0x032B7C60 MOV W1, W21
	0x032B7C64 BL 0x32B00A0
	0x032B7C68 MOV X21, X0
	0x032B7C6C LDR X20, [X19 + 0xF0]
	0x032B7C70 CBZ X20, 0x32B7CB8
	0x032B7C74 LDR X8, [X19 + 0xA8]
	0x032B7C78 CBZ X8, 0x32B7D28
	0x032B7C7C LDR W9, [X8 + 0x18]
	0x032B7C80 CBZ W9, 0x32B7D24
	0x032B7C84 LDRSW X22, [X8 + 0x20]
	0x032B7C88 CBZ X21, 0x32B7CA0
	0x032B7C8C LDR X8, [X20]
	0x032B7C90 MOV X0, X21
	0x032B7C94 LDR X1, [X8 + 0x40]
	0x032B7C98 BL 0x1C16E00
	0x032B7C9C CBZ X0, 0x32B7D40

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1126000
	006 Move W8, [X21+2075]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xE6F000
	014 Move X0, [X0+96]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2075], W8
	018 Compare X19, 0
	019 JumpIfEqual {46}
	020 Move W8, [X19+28]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X0, X20
	024 Move X1, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call ObjectReader.ParseArrayMemberEnd, X0, X1
	030 Return 
	031 Move W8, [X19+32]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X20
	034 Move X1, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Call ObjectReader.ParseObjectEnd, X0, X1
	040 Return 
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Return 
	046 Call 0x1C17F20
	047 Move X20, [X20+136]
	048 Move X0, X20
	049 Call 0x19913C0
	050 Move X0, X20
	051 Move X1, X31
	052 Call SerStack.Peek, X0
	053 Move X8, 0xE6F000
	054 Move X8, [X8+96]
	055 Move X1, [X8]
	056 Call 0x1BB6A6C
	057 Move X1, X19
	058 Move X2, X0
	059 Call ObjectReader.ParseError, X0, X1, X2

Method: System.Void ParseString(System.Runtime.Serialization.Formatters.Binary.ParseRecord pr, System.Runtime.Serialization.Formatters.Binary.ParseRecord parentPr)

Disassembly:
	0x032B8DA4 ADD X29, X29, 0x1
	0x032B8DA8 CMP X29, W8, SXTW
	0x032B8DAC B.LT 0x32B8C8C
	0x032B8DB0 LDP X4, X3, [X31 + 0x10]
	0x032B8DB4 MOV X0, X20
	0x032B8DB8 MOV X1, X22
	0x032B8DBC MOV X2, X19
	0x032B8DC0 MOV X5, X25
	0x032B8DC4 MOV X6, X26
	0x032B8DC8 MOV X7, X24
	0x032B8DCC BL 0x32B9724
	0x032B8DD0 LDP X20, X19, [X31 + 0x90]
	0x032B8DD4 LDP X22, X21, [X31 + 0x80]
	0x032B8DD8 LDP X24, X23, [X31 + 0x70]
	0x032B8DDC LDP X26, X25, [X31 + 0x60]
	0x032B8DE0 LDP X28, X27, [X31 + 0x50]

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {18}
	004 Move W8, [X1+256]
	005 Move X3, X2
	006 Move X2, X1
	007 Compare W8, 0
	008 JumpIfEqual {11}
	009 Move X30, [X31+16]
	010 Return 
	011 Move X8, [X2+88]
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X1, [X2+48]
	014 Move W4, 1
	015 Move X30, [X31+16]
	016 Call ObjectReader.RegisterObject, X0, X1, X2, X3, X4
	017 Return 
	018 Call 0x1C17F20

Method: System.Void RegisterObject(System.Object obj, System.Runtime.Serialization.Formatters.Binary.ParseRecord pr, System.Runtime.Serialization.Formatters.Binary.ParseRecord objectPr)

Disassembly:
	0x032B852C B.NE 0x32B85E4
	0x032B8530 MOV X0, X22

ISIL:
	001 Move W4, W31
	002 Call ObjectReader.RegisterObject, X0, X1, X2, X3, X4
	003 Return 

Method: System.Void RegisterObject(System.Object obj, System.Runtime.Serialization.Formatters.Binary.ParseRecord pr, System.Runtime.Serialization.Formatters.Binary.ParseRecord objectPr, System.Boolean bIsString)

Disassembly:
	0x032B8E0C MOV X19, X0
	0x032B8E10 ADRP X0, 0xE40000
	0x032B8E14 LDR X0, [X0 + 0x528]
	0x032B8E18 BL 0x1C16D08
	0x032B8E1C BL 0x1C16F10
	0x032B8E20 MOV X20, X0
	0x032B8E24 ADRP X0, 0xE6D000
	0x032B8E28 LDR X0, [X0 + 0x4E0]
	0x032B8E2C BL 0x1C16D08
	0x032B8E30 MOV X1, X0
	0x032B8E34 MOV X0, X20
	0x032B8E38 MOV X2, X19
	0x032B8E3C MOV X3, X31
	0x032B8E40 BL 0x3315F7C
	0x032B8E44 ADRP X0, 0xE6D000
	0x032B8E48 LDR X0, [X0 + 0x4E8]
	0x032B8E4C BL 0x1C16D08
	0x032B8E50 MOV X1, X0
	0x032B8E54 MOV X0, X20
	0x032B8E58 BL 0x1C16DEC
	0x032B8E5C STR X30, [X31 - 0x10]!
	0x032B8E60 LDR X0, [X0 + 0xB8]
	0x032B8E64 CBZ X0, 0x32B8E74
	0x032B8E68 MOV X2, X31
	0x032B8E6C LDR X30, [X31], #0x10
	0x032B8E70 B 0x32BD7AC
	0x032B8E74 BL 0x1C16F20
	0x032B8E78 STR X30, [X31 - 0x30]!
	0x032B8E7C STP X22, X21, [X31 + 0x10]
	0x032B8E80 STP X20, X19, [X31 + 0x20]
	0x032B8E84 ADRP X21, 0x1124000
	0x032B8E88 LDRB W8, [X21 + 0x82A]
	0x032B8E8C MOV X19, X1
	0x032B8E90 MOV X20, X0
	0x032B8E94 TBNZ X8, 0x0, 0x32B8EAC
	0x032B8E98 ADRP X0, 0xE6D000
	0x032B8E9C LDR X0, [X0 + 0x270]
	0x032B8EA0 BL 0x1C16CF4
	0x032B8EA4 MOVZ W8, 0x1
	0x032B8EA8 STRB W8, [X21 + 0x82A]
	0x032B8EAC STRB W31, [X31 + 0xC]
	0x032B8EB0 LDR X0, [X20 + 0x10]
	0x032B8EB4 CBZ X0, 0x32B8F58
	0x032B8EB8 LDR X8, [X0]
	0x032B8EBC LDP X9, X1, [X8 + 0x1D8]
	0x032B8EC0 BLR X9
	0x032B8EC4 CBZ W0, 0x32B8F0C
	0x032B8EC8 LDR X0, [X20 + 0x10]
	0x032B8ECC CBZ X0, 0x32B8F58
	0x032B8ED0 LDR X8, [X0]
	0x032B8ED4 LDR X9, [X8 + 0x248]
	0x032B8ED8 LDR X1, [X8 + 0x250]
	0x032B8EDC BLR X9
	0x032B8EE0 MOV X22, X0
	0x032B8EE4 CBZ X0, 0x32B8F18
	0x032B8EE8 ADRP X8, 0xE6D000
	0x032B8EEC LDR X8, [X8 + 0x270]
	0x032B8EF0 LDR X9, [X22]
	0x032B8EF4 MOV X21, X22
	0x032B8EF8 LDR X8, [X8]
	0x032B8EFC CMP X9, X8
	0x032B8F00 B.NE 0x32B8F1C
	0x032B8F04 LDR X21, [X22 + 0x18]
	0x032B8F08 B 0x32B8F1C
	0x032B8F0C MOV X22, X31
	0x032B8F10 STR X31, [X19]
	0x032B8F14 B 0x32B8F44
	0x032B8F18 MOV X21, X31
	0x032B8F1C LDR X0, [X20 + 0x18]
	0x032B8F20 CBZ X0, 0x32B8F58
	0x032B8F24 LDR X8, [X0]
	0x032B8F28 ADD X2, X31, 0xC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x1125000
	009 Move W8, [X24+2076]
	010 Move W20, W4
	011 Move X22, X3
	012 Move X21, X2
	013 Move X19, X1
	014 Move X23, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xE3E000
	020 Move X0, [X0+632]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X24+2076], W8
	024 Compare X21, 0
	025 JumpIfEqual {95}
	026 Move W8, [X21+256]
	027 Compare W8, 0
	028 JumpIfEqual {37}
	029 Move X20, [X31+48]
	030 Move X19, [X31+56]
	031 Move X22, [X31+32]
	032 Move X21, [X31+40]
	033 Move X24, [X31+16]
	034 Move X23, [X31+24]
	035 Move X30, [X31+64]
	036 Return 
	037 Move W8, 1
	038 Move [X21+256], W8
	039 Compare X22, 0
	040 JumpIfEqual {52}
	041 Move X24, [X22+168]
	042 Move X0, [X22+216]
	043 Move X22, [X22+88]
	044 Compare X0, 0
	045 JumpIfEqual {53}
	046 Move W8, [X0+44]
	047 Compare W8, 0
	048 JumpIfNotEqual {53}
	049 Move X1, [X21+40]
	050 Call ReadObjectInfo.GetMemberInfo, X0, X1
	051 Move X5, X0
	052 Move X24, X31
	053 Move X5, X31
	054 Move X0, [X23+48]
	055 Compare X0, 0
	056 JumpIfEqual {95}
	057 Move X3, [X21+272]
	058 Move X2, [X21+88]
	059 Move TEMP, X20
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {82}
	063 Compare X19, 0
	064 JumpIfEqual {70}
	065 Move X8, 0xE3E000
	066 Move X8, [X8+632]
	067 Move X1, [X8]
	068 Move X8, [X19]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X1, X19
	071 Move X4, X22
	072 Move X20, [X31+48]
	073 Move X19, [X31+56]
	074 Move X22, [X31+32]
	075 Move X21, [X31+40]
	076 Move X24, [X31+16]
	077 Move X23, [X31+24]
	078 Move X6, X31
	079 Move X30, [X31+64]
	080 Call ObjectManager.RegisterString, X0, X1, X2, X3, X4, X5
	081 Return 
	082 Move X1, X19
	083 Move X4, X22
	084 Move X6, X24
	085 Move X20, [X31+48]
	086 Move X19, [X31+56]
	087 Move X22, [X31+32]
	088 Move X21, [X31+40]
	089 Move X24, [X31+16]
	090 Move X23, [X31+24]
	091 Move X7, X31
	092 Move X30, [X31+64]
	093 Call ObjectManager.RegisterObject, X0, X1, X2, X3, X4, X5, X6
	094 Return 
	095 Call 0x1C17F20
	096 Move X0, X19
	097 Call 0x1C181E0

Method: System.Int64 GetId(System.Int64 objectId)

Disassembly:
	0x032B8F2C MOV X1, X21
	0x032B8F30 LDP X9, X3, [X8 + 0x188]
	0x032B8F34 BLR X9
	0x032B8F38 STR X0, [X19]
	0x032B8F3C LDRB W8, [X31 + 0xC]
	0x032B8F40 CBNZ W8, 0x32B8F5C
	0x032B8F44 MOV X0, X22
	0x032B8F48 LDP X20, X19, [X31 + 0x20]
	0x032B8F4C LDP X22, X21, [X31 + 0x10]
	0x032B8F50 LDR X30, [X31], #0x30
	0x032B8F54 RET
	0x032B8F58 BL 0x1C16F20
	0x032B8F5C ADRP X0, 0xE3B000
	0x032B8F60 LDR X0, [X0 + 0x9D0]
	0x032B8F64 BL 0x1C16D08
	0x032B8F68 MOVZ W1, 0x1
	0x032B8F6C BL 0x1C16D6C
	0x032B8F70 MOV X19, X0
	0x032B8F74 BL 0x19903C0
	0x032B8F78 MOV X0, X19
	0x032B8F7C MOV X1, X21
	0x032B8F80 BL 0x19980B4
	0x032B8F84 MOV X0, X19
	0x032B8F88 MOV X1, X31
	0x032B8F8C MOV X2, X21
	0x032B8F90 BL 0x1993444
	0x032B8F94 ADRP X0, 0xE6D000
	0x032B8F98 LDR X0, [X0 + 0x4F0]
	0x032B8F9C BL 0x1C16D08
	0x032B8FA0 MOV X1, X19
	0x032B8FA4 MOV X2, X31
	0x032B8FA8 BL 0x33BFB40
	0x032B8FAC MOV X19, X0
	0x032B8FB0 ADRP X0, 0xE65000
	0x032B8FB4 LDR X0, [X0 + 0x2E0]
	0x032B8FB8 BL 0x1C16D08
	0x032B8FBC BL 0x1C16F10
	0x032B8FC0 MOV X1, X19
	0x032B8FC4 MOV X2, X31
	0x032B8FC8 MOV X20, X0
	0x032B8FCC BL 0x329F100
	0x032B8FD0 ADRP X0, 0xE6D000
	0x032B8FD4 LDR X0, [X0 + 0x4F8]
	0x032B8FD8 BL 0x1C16D08
	0x032B8FDC MOV X1, X0
	0x032B8FE0 MOV X0, X20
	0x032B8FE4 BL 0x1C16DEC
	0x032B8FE8 LDR X0, [X0 + 0x48]
	0x032B8FEC RET
	0x032B8FF0 SUB X31, X31, 0xA0
	0x032B8FF4 STP X29, X30, [X31 + 0x40]
	0x032B8FF8 STP X28, X27, [X31 + 0x50]
	0x032B8FFC STP X26, X25, [X31 + 0x60]
	0x032B9000 STP X24, X23, [X31 + 0x70]
	0x032B9004 STP X22, X21, [X31 + 0x80]
	0x032B9008 STP X20, X19, [X31 + 0x90]
	0x032B900C ADRP X19, 0x1123000
	0x032B9010 LDRB W8, [X19 + 0x827]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1125000
	006 Move W8, [X21+2077]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xE6E000
	014 Move X0, [X0+1152]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2077], W8
	018 Move W8, [X20+160]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Move X0, X20
	022 Call ObjectReader.InitFullDeserialization, X0
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Add X31, X19, 1
	025 Move W8, [X20+161]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Subtract X19, X31, X19
	029 Move X21, [X20+168]
	030 Move W8, 1
	031 Move [X20+161], W8
	032 Compare X21, 0
	033 JumpIfNotEqual {44}
	034 Move X8, 0xE6E000
	035 Move X8, [X8+1152]
	036 Move X0, [X8]
	037 Call 0x1C17F10
	038 Move X1, X31
	039 Move X21, X0
	040 Call IntSizedArray..ctor, X0
	041 Move [X20+168], X21
	042 Compare X21, 0
	043 JumpIfEqual {69}
	044 Move X0, X21
	045 Move W1, W19
	046 Move X2, X31
	047 Call IntSizedArray.get_Item, X0, X1
	048 Compare W0, 0
	049 JumpIfEqual {51}
	050 Move X19, W0
	051 Move X0, [X20+168]
	052 Compare X0, 0
	053 JumpIfEqual {69}
	054 Move TEMP, 0x80000000
	055 Not TEMP
	056 Move W8, TEMP
	057 Add X20, X19, X8
	058 Move W1, W19
	059 Move W2, W20
	060 Move X3, X31
	061 Call IntSizedArray.set_Item, X0, X1, X2
	062 Move X19, X20
	063 Move X0, X19
	064 Move X20, [X31+16]
	065 Move X19, [X31+24]
	066 Move X30, [X31+32]
	067 Move X21, [X31+40]
	068 Return X0
	069 Call 0x1C17F20

Method: System.Type Bind(System.String assemblyString, System.String typeString)

Disassembly:
	0x032B9014 MOV X21, X2
	0x032B9018 MOV X22, X1
	0x032B901C MOV X20, X0
	0x032B9020 TBNZ X8, 0x0, 0x32B9068
	0x032B9024 ADRP X0, 0xE3A000
	0x032B9028 LDR X0, [X0 + 0x618]
	0x032B902C BL 0x1C16CF4
	0x032B9030 ADRP X0, 0xE6B000
	0x032B9034 LDR X0, [X0 + 0xF80]
	0x032B9038 BL 0x1C16CF4
	0x032B903C ADRP X0, 0xE3B000
	0x032B9040 LDR X0, [X0 + 0xE58]
	0x032B9044 BL 0x1C16CF4
	0x032B9048 ADRP X0, 0xE3A000
	0x032B904C LDR X0, [X0 + 0x9D0]
	0x032B9050 BL 0x1C16CF4
	0x032B9054 ADRP X0, 0xE3A000
	0x032B9058 LDR X0, [X0 + 0xEF0]
	0x032B905C BL 0x1C16CF4
	0x032B9060 MOVZ W8, 0x1
	0x032B9064 STRB W8, [X19 + 0x827]
	0x032B9068 MOV X19, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X0
	006 Move X0, [X0+64]
	007 Move X19, X2
	008 Move X21, X1
	009 Compare X0, 0
	010 JumpIfEqual {24}
	011 Move X8, [X0]
	012 Move X1, X21
	013 Move X2, X19
	014 Move X9, [X8+392]
	015 Move X3, [X8+400]
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Compare X0, 0
	018 JumpIfEqual {24}
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X30, [X31+32]
	022 Move X21, [X31+40]
	023 Return X0
	024 Move X0, X20
	025 Move X2, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X21
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]

Method: System.Type FastBindToType(System.String assemblyName, System.String typeName)

Disassembly:
	0x032B906C CBNZ X21, 0x32B9084
	0x032B9070 MOV X0, X20
	0x032B9074 MOV X1, X22
	0x032B9078 BL 0x32B8AB8
	0x032B907C MOV X19, X0
	0x032B9080 CBZ X0, 0x32B96DC
	0x032B9084 MOVZ W8, 0x1
	0x032B9088 STRB W8, [X19 + 0x39]
	0x032B908C CBZ X22, 0x32B96DC
	0x032B9090 LDR X27, [X22 + 0x68]
	0x032B9094 STR X27, [X19 + 0x18]
	0x032B9098 LDR X24, [X22 + 0x18]
	0x032B909C CBZ X24, 0x32B90D4
	0x032B90A0 ADRP X9, 0xE3A000
	0x032B90A4 LDR X9, [X9 + 0xEF0]
	0x032B90A8 LDR X8, [X24]
	0x032B90AC LDR X1, [X9]
	0x032B90B0 LDRB W10, [X8 + 0x130]
	0x032B90B4 LDRB W9, [X1 + 0x130]
	0x032B90B8 CMP W10, W9
	0x032B90BC B.CC 0x32B96E0
	0x032B90C0 LDR X8, [X8 + 0xC8]
	0x032B90C4 ADD X8, X8, X9, 0x3, LSL
	0x032B90C8 LDUR X8, [X8 - 0x8]
	0x032B90CC CMP X8, X1
	0x032B90D0 B.NE 0x32B96E0
	0x032B90D4 LDR X0, [X22 + 0x20]
	0x032B90D8 CBZ X0, 0x32B96DC
	0x032B90DC LDR X8, [X0]
	0x032B90E0 LDR X9, [X8 + 0x428]
	0x032B90E4 LDR X1, [X8 + 0x430]
	0x032B90E8 BLR X9
	0x032B90EC CBZ X0, 0x32B96DC
	0x032B90F0 MOV X1, X31
	0x032B90F4 MOV X25, X0
	0x032B90F8 BL 0x3397374
	0x032B90FC TBZ X0, 0x0, 0x32B9118
	0x032B9100 MOV X0, X20
	0x032B9104 MOV X1, X25
	0x032B9108 BL 0x32B9A6C
	0x032B910C MOV X23, X0
	0x032B9110 MOV X26, X31
	0x032B9114 B 0x32B9158
	0x032B9118 LDP X1, X2, [X20 + 0x28]
	0x032B911C LDR X3, [X20 + 0x38]
	0x032B9120 LDP X4, X5, [X20 + 0x78]
	0x032B9124 LDR X6, [X20 + 0x70]
	0x032B9128 MOV X0, X25
	0x032B912C BL 0x32B4240
	0x032B9130 MOV X26, X0
	0x032B9134 MOV X0, X20
	0x032B9138 MOV X1, X26
	0x032B913C BL 0x32B88AC
	0x032B9140 CBZ X26, 0x32B96DC
	0x032B9144 STR X0, [X26 + 0x70]
	0x032B9148 MOV X0, X20
	0x032B914C MOV X1, X26
	0x032B9150 BL 0x32B8AB8
	0x032B9154 MOV X23, X0
	0x032B9158 CBZ X23, 0x32B96DC
	0x032B915C LDR X0, [X23 + 0x30]
	0x032B9160 CBZ X0, 0x32B96DC
	0x032B9164 MOV X1, X31
	0x032B9168 STP X21, X26, [X31 + 0x18]
	0x032B916C STP X20, X25, [X31 + 0x28]
	0x032B9170 STR X22, [X31 + 0x10]
	0x032B9174 BL 0x3396BF8
	0x032B9178 AND W8, W0, 0x1
	0x032B917C MOVZ W9, 0x1
	0x032B9180 STRB W8, [X23 + 0x39]
	0x032B9184 STR X27, [X19 + 0x18]
	0x032B9188 STRB W9, [X19 + 0x39]
	0x032B918C STR X27, [X23 + 0x18]
	0x032B9190 LDRB W8, [X19 + 0x3C]
	0x032B9194 STR X27, [X31 + 0x8]
	0x032B9198 STR X19, [X31 + 0x38]
	0x032B919C STRB W8, [X23 + 0x3C]
	0x032B91A0 LDRB W8, [X19 + 0x3B]
	0x032B91A4 STRB W8, [X23 + 0x3B]
	0x032B91A8 LDRB W8, [X19 + 0x3D]
	0x032B91AC STRB W8, [X23 + 0x3D]
	0x032B91B0 CBZ X24, 0x32B96DC
	0x032B91B4 ADRP X19, 0xE3B000
	0x032B91B8 LDR X19, [X19 + 0xE58]
	0x032B91BC MOV X0, X24
	0x032B91C0 MOV X1, X31
	0x032B91C4 BL 0x339FCE4
	0x032B91C8 LDR X8, [X19]
	0x032B91CC MOV W21, W0
	0x032B91D0 MOV W1, W21
	0x032B91D4 MOV X0, X8
	0x032B91D8 BL 0x1C16D6C
	0x032B91DC LDR X8, [X19]
	0x032B91E0 MOV X29, X0
	0x032B91E4 MOV W1, W21
	0x032B91E8 MOV X0, X8
	0x032B91EC BL 0x1C16D6C
	0x032B91F0 LDR X8, [X19]
	0x032B91F4 MOV X25, X0
	0x032B91F8 MOV W1, W21
	0x032B91FC MOV X0, X8
	0x032B9200 BL 0x1C16D6C
	0x032B9204 CMP W21, 0x1
	0x032B9208 MOV X26, X0
	0x032B920C B.LT 0x32B929C
	0x032B9210 MOV X28, X31
	0x032B9214 MOV W20, W21
	0x032B9218 ADD X27, X29, 0x20
	0x032B921C ADD X22, X25, 0x20
	0x032B9220 ADD X19, X26, 0x20
	0x032B9224 MOV X0, X24
	0x032B9228 MOV W1, W28
	0x032B922C MOV X2, X31
	0x032B9230 BL 0x33A0EDC
	0x032B9234 CBZ X29, 0x32B96DC
	0x032B9238 LDR W8, [X29 + 0x18]
	0x032B923C CMP X28, X8
	0x032B9240 B.CS 0x32B9584
	0x032B9244 STR W0, [X27, X28, LSL #2]
	0x032B9248 MOV X0, X24
	0x032B924C MOV W1, W28
	0x032B9250 MOV X2, X31
	0x032B9254 BL 0x339FA30
	0x032B9258 CBZ X25, 0x32B96DC
	0x032B925C LDR W8, [X25 + 0x18]
	0x032B9260 CMP X28, X8
	0x032B9264 B.CS 0x32B9584
	0x032B9268 STR W0, [X22, X28, LSL #2]
	0x032B926C MOV X0, X24
	0x032B9270 MOV W1, W28
	0x032B9274 MOV X2, X31
	0x032B9278 BL 0x33A2968
	0x032B927C CBZ X26, 0x32B96DC
	0x032B9280 LDR W8, [X26 + 0x18]
	0x032B9284 CMP X28, X8
	0x032B9288 B.CS 0x32B9584
	0x032B928C STR W0, [X19, X28, LSL #2]
	0x032B9290 ADD X28, X28, 0x1
	0x032B9294 CMP X20, X28
	0x032B9298 B.NE 0x32B9224
	0x032B929C ADRP X19, 0xE6B000
	0x032B92A0 LDR X19, [X19 + 0xF80]
	0x032B92A4 LDRB W8, [X23 + 0x39]
	0x032B92A8 CMP W21, 0x1
	0x032B92AC MOVZ W9, 0x2
	0x032B92B0 MOVZ W10, 0x3
	0x032B92B4 CSET W28, EQ
	0x032B92B8 CINC W9, W9, NE
	0x032B92BC CSINC W10, W10, W31, NE
	0x032B92C0 CMP W8, 0x0
	0x032B92C4 CSEL W8, W10, W9, EQ
	0x032B92C8 STR W8, [X23 + 0x40]
	0x032B92CC LDR X0, [X19]
	0x032B92D0 CSET W27, NE
	0x032B92D4 CSET W20, EQ
	0x032B92D8 LDR W8, [X0 + 0xE0]
	0x032B92DC CBNZ W8, 0x32B92E8
	0x032B92E0 BL 0x1C16DFC
	0x032B92E4 LDR X0, [X19]
	0x032B92E8 LDR X22, [X31 + 0x28]
	0x032B92EC LDR X8, [X0 + 0xB8]
	0x032B92F0 CMP W21, 0x1
	0x032B92F4 B.NE 0x32B931C
	0x032B92F8 LDR X9, [X8 + 0x50]
	0x032B92FC LDR X10, [X31 + 0x30]
	0x032B9300 CMP X10, X9
	0x032B9304 B.NE 0x32B931C
	0x032B9308 CBZ X25, 0x32B96DC
	0x032B930C LDR W9, [X25 + 0x18]
	0x032B9310 CBZ W9, 0x32B9584
	0x032B9314 LDR W9, [X25 + 0x20]
	0x032B9318 CBZ W9, 0x32B965C
	0x032B931C LDR W9, [X0 + 0xE0]
	0x032B9320 CBNZ W9, 0x32B9330
	0x032B9324 BL 0x1C16DFC
	0x032B9328 LDR X8, [X19]
	0x032B932C LDR X8, [X8 + 0xB8]
	0x032B9330 LDR X8, [X8 + 0xC0]
	0x032B9334 LDR X9, [X31 + 0x30]
	0x032B9338 CMP X9, X8
	0x032B933C B.EQ 0x32B9350
	0x032B9340 LDR X0, [X31 + 0x30]
	0x032B9344 MOV X1, X31
	0x032B9348 BL 0x3380420
	0x032B934C CBZ X0, 0x32B9360
	0x032B9350 LDR X9, [X31 + 0x38]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x1124000
	009 Move W8, [X22+2078]
	010 Move X21, X2
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0xE6C000
	018 Move X0, [X0+3840]
	019 Call 0x1C17CF4
	020 Move X0, 0xE6C000
	021 Move X0, [X0+2928]
	022 Call 0x1C17CF4
	023 Move X0, 0xE6D000
	024 Move X0, [X0+1160]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+2078], W8
	028 Move [X31+8], X31
	029 Move X0, [X20+176]
	030 Compare X0, 0
	031 JumpIfEqual {150}
	032 Move X23, 0xE6D000
	033 Move X23, [X23+1160]
	034 Move X1, X21
	035 Move X2, X31
	036 Call NameCache.GetCachedValue, X0, X1
	037 Compare X0, 0
	038 JumpIfEqual {57}
	039 Move X8, [X0]
	040 Move X1, [X23]
	041 Move X22, X0
	042 Move W10, [X8+304]
	043 Move W9, [X1+304]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X8, [X8+200]
	046 Add X8, X8, X9
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X0, [X22+24]
	050 Move X1, X19
	051 Move X2, X31
	052 Call String.op_Inequality, X0, X1
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {112}
	057 Move W8, [X20+80]
	058 Compare W8, 0
	059 JumpIfEqual {121}
	060 Move X8, 0xE6C000
	061 Move X8, [X8+3840]
	062 Move X0, [X8]
	063 Call 0x1C17F10
	064 Move X22, X0
	065 Move X1, X19
	066 Move X2, X31
	067 Call AssemblyName..ctor, X0, X1
	068 Move X0, X22
	069 Call ObjectReader.ResolveSimpleAssemblyName, X0
	070 Move X22, X0
	071 Move X0, X22
	072 Move X1, X31
	073 Move X2, X31
	074 Call Assembly.op_Equality, X0, X1
	075 Move W8, W0
	076 Move X0, X31
	077 Move TEMP, X8
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfEqual {113}
	081 Add X2, X31, 8
	082 Move X0, X22
	083 Move X1, X21
	084 Call ObjectReader.GetSimplyNamedTypeFromAssembly, X0, X1, X2
	085 Move X21, [X31+8]
	086 Compare X21, 0
	087 JumpIfEqual {149}
	088 Move X8, [X21]
	089 Move X0, X21
	090 Move X9, [X8+760]
	091 Move X1, [X8+768]
	092 NotImplemented "Instruction BLR not yet implemented."
	093 Move X1, X0
	094 Move X0, X22
	095 Move X2, X21
	096 Call ObjectReader.CheckTypeForwardedTo, X0, X1, X2
	097 Move X0, [X23]
	098 Call 0x1C17F10
	099 Move X1, X31
	100 Move X22, X0
	101 Call Object..ctor, X0
	102 Compare X22, 0
	103 JumpIfEqual {150}
	104 Move [X22+16], X21
	105 Move [X22+24], X19
	106 Move X0, [X20+176]
	107 Compare X0, 0
	108 JumpIfEqual {150}
	109 Move X1, X22
	110 Move X2, X31
	111 Call NameCache.SetCachedValue, X0, X1
	112 Move X0, [X22+16]
	113 Move X20, [X31+48]
	114 Move X19, [X31+56]
	115 Move X22, [X31+32]
	116 Move X21, [X31+40]
	117 Move X30, [X31+16]
	118 Move X23, [X31+24]
	119 Add X31, X31, 64
	120 Return X0
	121 Move X0, X19
	122 Move X1, X31
	123 Call Assembly.Load, X0
	124 Move X22, X0
	125 Move X0, X22
	126 Move X1, X31
	127 Move X2, X31
	128 Call Assembly.op_Equality, X0, X1
	129 Move W8, W0
	130 Move X0, X31
	131 Move TEMP, X8
	132 And TEMP, TEMP, 1
	133 Compare TEMP, 1
	134 JumpIfEqual {113}
	135 Move X8, 0xE6C000
	136 Move X8, [X8+2928]
	137 Move X0, [X8]
	138 Move W8, [X0+224]
	139 Compare W8, 0
	140 JumpIfNotEqual {142}
	141 Call 0x1C17DFC
	142 Move X0, X22
	143 Move X1, X21
	144 Move X2, X31
	145 Call FormatterServices.GetTypeFromAssembly, X0, X1
	146 Move X21, X0
	147 Compare X21, 0
	148 JumpIfNotEqual {88}
	149 Move X0, X31
	150 Call 0x1C17F20
	151 Move X0, X22
	152 Call 0x1C181E0
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move X22, X0
	155 Move X0, X22
	156 Call 0x3EB2AD0
	157 Move X22, X0
	158 Move X0, 0xE3B000
	159 Move X0, [X0+2000]
	160 Call 0x1C17D08
	161 Move X8, [X22]
	162 Move X1, [X8]
	163 Call 0x1C18270
	164 Move TEMP, X0
	165 And TEMP, TEMP, 1
	166 Compare TEMP, 1
	167 JumpIfNotEqual {170}
	168 Call 0x3EB2AE0
	169 Move X22, X31
	170 Move W0, 8
	171 Call 0x3EB2AF0
	172 Move X8, [X22]
	173 Move [X0], X8
	174 Move X1, 0xBFC000
	175 Add X1, X1, 3672
	176 Move X2, X31
	177 Call 0x3EB2B00
	178 Move X22, X0
	179 Call 0x3EB2AE0
	180 Move X22, X0
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Move X0, X22
	183 Call 0x3EB2AD0
	184 Move X22, X0
	185 Move X0, 0xE3B000
	186 Move X0, [X0+2000]
	187 Call 0x1C17D08
	188 Move X8, [X22]
	189 Move X1, [X8]
	190 Call 0x1C18270
	191 Move TEMP, X0
	192 And TEMP, TEMP, 1
	193 Compare TEMP, 1
	194 JumpIfNotEqual {197}
	195 Call 0x3EB2AE0
	196 Move X22, X31
	197 Move W0, 8
	198 Call 0x3EB2AF0
	199 Move X8, [X22]
	200 Move [X0], X8
	201 Move X1, 0xBFC000
	202 Add X1, X1, 3672
	203 Move X2, X31
	204 Call 0x3EB2B00
	205 Move X22, X0
	206 Call 0x3EB2AE0
	207 Move X0, X22
	208 Call 0x1D2D690
	209 Call 0x1991590

Method: System.Reflection.Assembly ResolveSimpleAssemblyName(System.Reflection.AssemblyName assemblyName)

Disassembly:
	0x032B9354 MOVZ W8, 0x1
	0x032B9358 STRB W8, [X9 + 0x3C]
	0x032B935C STRB W8, [X23 + 0x3C]
	0x032B9360 LDR X8, [X22 + 0x68]
	0x032B9364 CBZ X8, 0x32B96DC
	0x032B9368 LDRB W9, [X8 + 0x10]
	0x032B936C AND W8, W28, W20, 0x0
	0x032B9370 TBZ X9, 0x0, 0x32B9384
	0x032B9374 LDR X10, [X31 + 0x38]
	0x032B9378 MOVZ W9, 0x1
	0x032B937C STRB W9, [X10 + 0x3B]
	0x032B9380 STRB W9, [X23 + 0x3B]
	0x032B9384 CBZ W8, 0x32B94B8
	0x032B9388 CBZ X29, 0x32B96DC
	0x032B938C LDR W8, [X29 + 0x18]
	0x032B9390 CBZ W8, 0x32B9584
	0x032B9394 CBZ X25, 0x32B96DC
	0x032B9398 LDR W8, [X25 + 0x18]
	0x032B939C CBZ W8, 0x32B9584
	0x032B93A0 LDR X0, [X22 + 0x40]
	0x032B93A4 CBZ X0, 0x32B96DC
	0x032B93A8 LDR W5, [X29 + 0x20]
	0x032B93AC LDR W6, [X25 + 0x20]
	0x032B93B0 LDR X2, [X31 + 0x38]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Add X2, X31, 12
	005 Move X1, X31
	006 Move X3, X31
	007 Move X19, X0
	008 Move [X31+12], W31
	009 Call RuntimeAssembly.LoadWithPartialNameInternal, X0, X1, X2
	010 Move X1, X31
	011 Move X2, X31
	012 Move X20, X0
	013 Call Assembly.op_Equality, X0, X1
	014 Compare X19, 0
	015 JumpIfEqual {26}
	016 Move TEMP, X0
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfNotEqual {26}
	020 Move X0, [X19+16]
	021 Add X2, X31, 12
	022 Move X1, X31
	023 Move X3, X31
	024 Call RuntimeAssembly.LoadWithPartialNameInternal, X0, X1, X2
	025 Move X20, X0
	026 Move X0, X20
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Return X0

Method: System.Void GetSimplyNamedTypeFromAssembly(System.Reflection.Assembly assm, System.String typeName, ref System.Type type)

Disassembly:
	0x032B93B4 LDR X3, [X31 + 0x20]
	0x032B93B8 MOV X4, X23
	0x032B93BC MOV X7, X24
	0x032B93C0 BL 0x32B2850
	0x032B93C4 LDR X0, [X19]
	0x032B93C8 LDR W21, [X23 + 0x28]
	0x032B93CC LDR W8, [X0 + 0xE0]
	0x032B93D0 CBNZ W8, 0x32B93D8
	0x032B93D4 BL 0x1C16DFC
	0x032B93D8 MOV W0, W21
	0x032B93DC BL 0x32AF118
	0x032B93E0 LDR X28, [X31 + 0x10]
	0x032B93E4 TBZ X0, 0x0, 0x32B93F8
	0x032B93E8 LDR W8, [X25 + 0x18]
	0x032B93EC CBZ W8, 0x32B9584
	0x032B93F0 LDR W8, [X25 + 0x20]
	0x032B93F4 CBZ W8, 0x32B9608
	0x032B93F8 LDR X0, [X31 + 0x30]
	0x032B93FC MOV X1, X31
	0x032B9400 BL 0x33970C4
	0x032B9404 MOV X21, X31
	0x032B9408 TBNZ X0, 0x0, 0x32B942C
	0x032B940C ADRP X8, 0xE3A000
	0x032B9410 LDR X8, [X8 + 0x9D0]
	0x032B9414 MOV X0, X24
	0x032B9418 LDR X27, [X8]
	0x032B941C MOV X1, X27
	0x032B9420 BL 0x1C16E00
	0x032B9424 CBZ X0, 0x32B96E8
	0x032B9428 MOV X21, X0
	0x032B942C CBZ X26, 0x32B96DC
	0x032B9430 LDR W8, [X26 + 0x18]
	0x032B9434 CBZ W8, 0x32B9584
	0x032B9438 LDR W8, [X25 + 0x18]
	0x032B943C CBZ W8, 0x32B9584
	0x032B9440 LDR W8, [X26 + 0x20]
	0x032B9444 LDR W25, [X25 + 0x20]
	0x032B9448 ADD W8, W8, 0x1
	0x032B944C CMP W25, W8
	0x032B9450 B.GE 0x32B95FC
	0x032B9454 SXTW X9, W25
	0x032B9458 SXTW X8, W8
	0x032B945C ADD X10, X21, X9, 0x3, LSL
	0x032B9460 ADD X19, X10, 0x20
	0x032B9464 SUB X20, X8, X9
	0x032B9468 CBZ X21, 0x32B9480
	0x032B946C LDR W8, [X21 + 0x18]
	0x032B9470 CMP W25, W8
	0x032B9474 B.CS 0x32B9584
	0x032B9478 LDR X3, [X19]
	0x032B947C B 0x32B9494
	0x032B9480 MOV X0, X24
	0x032B9484 MOV W1, W25
	0x032B9488 MOV X2, X31
	0x032B948C BL 0x3395BDC
	0x032B9490 MOV X3, X0
	0x032B9494 MOV X0, X22
	0x032B9498 MOV X1, X28
	0x032B949C MOV X2, X23
	0x032B94A0 BL 0x32BA088
	0x032B94A4 ADD X19, X19, 0x8
	0x032B94A8 SUBS X20, X20, 0x1
	0x032B94AC ADD W25, W25, 0x1
	0x032B94B0 B.NE 0x32B9468
	0x032B94B4 B 0x32B95FC
	0x032B94B8 LDR X8, [X31 + 0x8]
	0x032B94BC LDR X9, [X31 + 0x38]
	0x032B94C0 STR X8, [X9 + 0x18]
	0x032B94C4 LDR X0, [X22 + 0x40]
	0x032B94C8 AND W8, W28, W27, 0x0
	0x032B94CC CBZ W8, 0x32B9588
	0x032B94D0 CBZ X29, 0x32B96DC
	0x032B94D4 LDR W8, [X29 + 0x18]
	0x032B94D8 CBZ W8, 0x32B9584
	0x032B94DC CBZ X25, 0x32B96DC
	0x032B94E0 LDR W8, [X25 + 0x18]
	0x032B94E4 CBZ W8, 0x32B9584
	0x032B94E8 CBZ X0, 0x32B96DC
	0x032B94EC LDR W5, [X29 + 0x20]
	0x032B94F0 LDR W6, [X25 + 0x20]
	0x032B94F4 LDR X2, [X31 + 0x38]
	0x032B94F8 LDR X3, [X31 + 0x20]
	0x032B94FC MOV X4, X23
	0x032B9500 BL 0x32B2C70
	0x032B9504 ADRP X8, 0xE3A000
	0x032B9508 LDR X8, [X8 + 0x9D0]
	0x032B950C MOV X0, X24
	0x032B9510 LDR X27, [X8]
	0x032B9514 MOV X1, X27
	0x032B9518 BL 0x1C16E00
	0x032B951C CBZ X0, 0x32B96E8
	0x032B9520 LDR W8, [X25 + 0x18]
	0x032B9524 LDR X24, [X31 + 0x10]
	0x032B9528 CBZ W8, 0x32B9584
	0x032B952C CBZ X26, 0x32B96DC
	0x032B9530 LDR W8, [X26 + 0x18]
	0x032B9534 CBZ W8, 0x32B9584
	0x032B9538 LDRSW X19, [X25 + 0x20]
	0x032B953C MOV X21, X0
	0x032B9540 ADD X8, X0, X19, 0x3, LSL
	0x032B9544 ADD X20, X8, 0x20
	0x032B9548 LDR W8, [X26 + 0x20]
	0x032B954C ADD W8, W8, 0x1
	0x032B9550 CMP W19, W8
	0x032B9554 B.GE 0x32B95FC
	0x032B9558 LDR W8, [X21 + 0x18]
	0x032B955C CMP W19, W8
	0x032B9560 B.CS 0x32B9584
	0x032B9564 LDR X3, [X20], #0x8
	0x032B9568 MOV X0, X22
	0x032B956C MOV X1, X24
	0x032B9570 MOV X2, X23
	0x032B9574 BL 0x32BA088
	0x032B9578 LDR W8, [X26 + 0x18]
	0x032B957C ADD W19, W19, 0x1
	0x032B9580 CBNZ W8, 0x32B9548
	0x032B9584 BL 0x1C16F28
	0x032B9588 CBZ X0, 0x32B96DC
	0x032B958C LDR X2, [X31 + 0x38]
	0x032B9590 LDR X3, [X31 + 0x20]
	0x032B9594 MOV X4, X23
	0x032B9598 MOV W5, W21
	0x032B959C MOV X6, X29
	0x032B95A0 MOV X7, X25
	0x032B95A4 BL 0x32B2DF0
	0x032B95A8 CMP W21, 0x1
	0x032B95AC B.LT 0x32B95DC
	0x032B95B0 CBZ X29, 0x32B96DC
	0x032B95B4 LDR W8, [X29 + 0x18]
	0x032B95B8 MOV W9, W31
	0x032B95BC CMP W9, W8
	0x032B95C0 B.CS 0x32B9584
	0x032B95C4 ADD X10, X29, W9, 0x2, SXTW
	0x032B95C8 LDR W10, [X10 + 0x20]
	0x032B95CC CBZ W10, 0x32B95FC
	0x032B95D0 ADD W9, W9, 0x1
	0x032B95D4 CMP W21, W9
	0x032B95D8 B.NE 0x32B95BC
	0x032B95DC LDR X1, [X31 + 0x10]
	0x032B95E0 MOV X0, X22
	0x032B95E4 MOV W2, W21
	0x032B95E8 MOV X3, X29
	0x032B95EC MOV X4, X24

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1124000
	008 Move X23, 0xE6C000
	009 Move W8, [X22+2079]
	010 Move X23, [X23+2928]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {41}
	018 Move X0, 0xE6C000
	019 Move X0, [X0+2928]
	020 Call 0x1C17CF4
	021 Move X0, 0xE6D000
	022 Move X0, [X0+1168]
	023 Call 0x1C17CF4
	024 Move X0, 0xE6D000
	025 Move X0, [X0+1176]
	026 Call 0x1C17CF4
	027 Move X0, 0xE6D000
	028 Move X0, [X0+1184]
	029 Call 0x1C17CF4
	030 Move X0, 0xE6D000
	031 Move X0, [X0+1192]
	032 Call 0x1C17CF4
	033 Move X0, 0xE6D000
	034 Move X0, [X0+1200]
	035 Call 0x1C17CF4
	036 Move X0, 0xE3B000
	037 Move X0, [X0+1728]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X22+2079], W8
	041 Move X0, [X23]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X0, X21
	047 Move X1, X20
	048 Move X2, X31
	049 Call FormatterServices.GetTypeFromAssembly, X0, X1
	050 Move [X19], X0
	051 Compare X0, 0
	052 JumpIfNotEqual {97}
	053 Move X8, 0xE6D000
	054 Move X8, [X8+1168]
	055 Move X0, [X8]
	056 Call 0x1C17F10
	057 Move X8, 0xE6D000
	058 Move X8, [X8+1184]
	059 Move X1, X31
	060 Move X3, X31
	061 Move X22, X0
	062 Move X2, [X8]
	063 Call Func`2<Object, Object>..ctor, X0, X1, X2
	064 Move X8, 0xE6D000
	065 Move X8, [X8+1200]
	066 Move X0, [X8]
	067 Call 0x1C17F10
	068 Move X1, X31
	069 Move X23, X0
	070 Call Object..ctor, X0
	071 Move [X23+16], X21
	072 Move X8, 0xE6D000
	073 Move X8, [X8+1176]
	074 Move X0, [X8]
	075 Call 0x1C17F10
	076 Move X8, 0xE6D000
	077 Move X8, [X8+1192]
	078 Move X1, X23
	079 Move X3, X31
	080 Move X21, X0
	081 Move X2, [X8]
	082 Call Func`4<Object, Object, Boolean, Object>..ctor, X0, X1, X2
	083 Move X8, 0xE3B000
	084 Move X8, [X8+1728]
	085 Move X0, [X8]
	086 Move W8, [X0+224]
	087 Compare W8, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1C17DFC
	090 Move X0, X20
	091 Move X1, X22
	092 Move X2, X21
	093 Move W3, W31
	094 Move X4, X31
	095 Call Type.GetType, X0, X1, X2, X3
	096 Move [X19], X0
	097 Move X20, [X31+32]
	098 Move X19, [X31+40]
	099 Move X22, [X31+16]
	100 Move X21, [X31+24]
	101 Move X30, [X31+48]
	102 Move X23, [X31+56]
	103 Return 
	104 Move X22, X0
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move X0, X22
	107 Call 0x3EB2AD0
	108 Move X22, X0
	109 Move X0, 0xE6D000
	110 Move X0, [X0+1208]
	111 Call 0x1C17D08
	112 Move X8, [X22]
	113 Move X1, [X8]
	114 Call 0x1C18270
	115 Move TEMP, X0
	116 And TEMP, TEMP, 1
	117 Compare TEMP, 1
	118 JumpIfEqual {149}
	119 Move X0, 0xE69000
	120 Move X0, [X0+1952]
	121 Call 0x1C17D08
	122 Move X8, [X22]
	123 Move X1, [X8]
	124 Call 0x1C18270
	125 Move TEMP, X0
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfEqual {149}
	129 Move X0, 0xE6D000
	130 Move X0, [X0+1216]
	131 Call 0x1C17D08
	132 Move X8, [X22]
	133 Move X1, [X8]
	134 Call 0x1C18270
	135 Move TEMP, X0
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfEqual {149}
	139 Move X0, 0xE6D000
	140 Move X0, [X0+1224]
	141 Call 0x1C17D08
	142 Move X8, [X22]
	143 Move X1, [X8]
	144 Call 0x1C18270
	145 Move TEMP, X0
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfNotEqual {153}
	149 Call 0x3EB2AE0
	150 Move X0, [X19]
	151 Compare X0, 0
	152 JumpIfNotEqual {97}
	153 Move W0, 8
	154 Call 0x3EB2AF0
	155 Move X8, [X22]
	156 Move [X0], X8
	157 Move X1, 0xBFC000
	158 Add X1, X1, 3672
	159 Move X2, X31
	160 Call 0x3EB2B00
	161 Move X22, X0
	162 Call 0x3EB2AE0
	163 Move X0, X22
	164 Call 0x1D2D690
	165 Call 0x1991590

Method: System.Type GetType(System.Runtime.Serialization.Formatters.Binary.BinaryAssemblyInfo assemblyInfo, System.String name)

Disassembly:
	0x032AC584 BL 0x1C16F20
	0x032AC588 RET
	0x032AC58C MOV X1, X31
	0x032AC590 B 0x33BDD8C
	0x032AC594 STR X30, [X31 - 0x20]!
	0x032AC598 STP X20, X19, [X31 + 0x10]
	0x032AC59C CBZ X1, 0x32AC5EC
	0x032AC5A0 MOV X19, X0
	0x032AC5A4 LDR X0, [X1 + 0x68]
	0x032AC5A8 MOV X20, X1
	0x032AC5AC CBZ X0, 0x32AC5EC
	0x032AC5B0 LDR X8, [X0]
	0x032AC5B4 LDR X9, [X8 + 0x228]
	0x032AC5B8 LDR X1, [X8 + 0x230]
	0x032AC5BC BLR X9
	0x032AC5C0 STR W0, [X19 + 0x10]
	0x032AC5C4 LDR X0, [X20 + 0x68]
	0x032AC5C8 CBZ X0, 0x32AC5EC
	0x032AC5CC LDR X8, [X0]
	0x032AC5D0 LDR X9, [X8 + 0x228]
	0x032AC5D4 LDR X1, [X8 + 0x230]
	0x032AC5D8 BLR X9
	0x032AC5DC STR W0, [X19 + 0x14]
	0x032AC5E0 LDP X20, X19, [X31 + 0x10]
	0x032AC5E4 LDR X30, [X31], #0x20
	0x032AC5E8 RET
	0x032AC5EC BL 0x1C16F20
	0x032AC5F0 RET
	0x032AC5F4 MOV X1, X31
	0x032AC5F8 B 0x33BDD8C
	0x032AC5FC STP W1, W2, [X0 + 0x10]
	0x032AC600 RET
	0x032AC604 STR X30, [X31 - 0x20]!
	0x032AC608 STP X20, X19, [X31 + 0x10]
	0x032AC60C CBZ X1, 0x32AC670
	0x032AC610 MOV X19, X0
	0x032AC614 LDR X0, [X1 + 0x30]
	0x032AC618 MOV X20, X1
	0x032AC61C CBZ X0, 0x32AC670
	0x032AC620 LDR X8, [X0]
	0x032AC624 MOVZ W1, 0x1
	0x032AC628 LDP X9, X2, [X8 + 0x1C8]
	0x032AC62C BLR X9
	0x032AC630 LDR X0, [X20 + 0x30]
	0x032AC634 CBZ X0, 0x32AC670
	0x032AC638 LDR X8, [X0]
	0x032AC63C LDR W1, [X19 + 0x10]
	0x032AC640 LDR X9, [X8 + 0x248]
	0x032AC644 LDR X2, [X8 + 0x250]
	0x032AC648 BLR X9
	0x032AC64C LDR X0, [X20 + 0x30]
	0x032AC650 CBZ X0, 0x32AC670
	0x032AC654 LDR X8, [X0]
	0x032AC658 LDR W1, [X19 + 0x14]
	0x032AC65C LDP X20, X19, [X31 + 0x10]
	0x032AC660 LDR X3, [X8 + 0x248]
	0x032AC664 LDR X2, [X8 + 0x250]
	0x032AC668 LDR X30, [X31], #0x20
	0x032AC66C BR X3
	0x032AC670 BL 0x1C16F20
	0x032AC674 STR X30, [X31 - 0x20]!
	0x032AC678 STP X20, X19, [X31 + 0x10]
	0x032AC67C CBZ X1, 0x32AC6CC
	0x032AC680 MOV X19, X0
	0x032AC684 LDR X0, [X1 + 0x68]
	0x032AC688 MOV X20, X1
	0x032AC68C CBZ X0, 0x32AC6CC
	0x032AC690 LDR X8, [X0]
	0x032AC694 LDR X9, [X8 + 0x228]
	0x032AC698 LDR X1, [X8 + 0x230]
	0x032AC69C BLR X9
	0x032AC6A0 STR W0, [X19 + 0x10]
	0x032AC6A4 LDR X0, [X20 + 0x68]
	0x032AC6A8 CBZ X0, 0x32AC6CC
	0x032AC6AC LDR X8, [X0]
	0x032AC6B0 LDR X9, [X8 + 0x228]
	0x032AC6B4 LDR X1, [X8 + 0x230]
	0x032AC6B8 BLR X9
	0x032AC6BC STR W0, [X19 + 0x14]
	0x032AC6C0 LDP X20, X19, [X31 + 0x10]
	0x032AC6C4 LDR X30, [X31], #0x20
	0x032AC6C8 RET
	0x032AC6CC BL 0x1C16F20
	0x032AC6D0 RET
	0x032AC6D4 STP X30, X21, [X31 - 0x20]!
	0x032AC6D8 STP X20, X19, [X31 + 0x10]
	0x032AC6DC ADRP X21, 0x1130000
	0x032AC6E0 LDRB W8, [X21 + 0x7C8]
	0x032AC6E4 MOV X19, X1
	0x032AC6E8 MOV X20, X0
	0x032AC6EC TBNZ X8, 0x0, 0x32AC704
	0x032AC6F0 ADRP X0, 0xE49000
	0x032AC6F4 LDR X0, [X0 + 0x278]
	0x032AC6F8 BL 0x1C16CF4
	0x032AC6FC MOVZ W8, 0x1
	0x032AC700 STRB W8, [X21 + 0x7C8]
	0x032AC704 CBZ X19, 0x32AC810
	0x032AC708 LDR X0, [X19 + 0x30]
	0x032AC70C CBZ X0, 0x32AC810
	0x032AC710 LDR X8, [X0]
	0x032AC714 MOVZ W1, 0x15
	0x032AC718 LDP X9, X2, [X8 + 0x1C8]
	0x032AC71C BLR X9
	0x032AC720 LDR X0, [X19 + 0x30]
	0x032AC724 CBZ X0, 0x32AC810

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x1131000
	009 Move W8, [X22+2080]
	010 Move X19, X2
	011 Move X21, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xE79000
	018 Move X0, [X0+2928]
	019 Call 0x1C17CF4
	020 Move X0, 0xE48000
	021 Move X0, [X0+1728]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+2080], W8
	025 Move X0, [X20+192]
	026 Compare X0, 0
	027 JumpIfEqual {58}
	028 Compare X19, 0
	029 JumpIfEqual {131}
	030 Move W8, [X0+16]
	031 Move W9, [X19+16]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X1, X19
	034 Move X2, X31
	035 Call String.Equals, X0, X1
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {58}
	040 Move X0, [X20+184]
	041 Compare X0, 0
	042 JumpIfEqual {58}
	043 Compare X21, 0
	044 JumpIfEqual {131}
	045 Move X1, [X21+16]
	046 Compare X1, 0
	047 JumpIfEqual {131}
	048 Move W8, [X0+16]
	049 Move W9, [X1+16]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X2, X31
	052 Call String.Equals, X0, X1
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {60}
	057 Move X23, [X20+200]
	058 Compare X21, 0
	059 JumpIfEqual {131}
	060 Move X1, [X21+16]
	061 Move X0, X20
	062 Move X2, X19
	063 Call ObjectReader.Bind, X0, X1, X2
	064 Move X23, X0
	065 Move [X31+8], X0
	066 Compare X0, 0
	067 JumpIfNotEqual {118}
	068 Move X0, X21
	069 Call BinaryAssemblyInfo.GetAssembly, X0
	070 Move W8, [X20+80]
	071 Move X22, X0
	072 Compare W8, 0
	073 JumpIfEqual {79}
	074 Add X2, X31, 8
	075 Move X0, X22
	076 Move X1, X19
	077 Call ObjectReader.GetSimplyNamedTypeFromAssembly, X0, X1, X2
	078 Move X23, [X31+8]
	079 Move X8, 0xE79000
	080 Move X8, [X8+2928]
	081 Move X0, [X8]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {86}
	085 Call 0x1C17DFC
	086 Move X0, X22
	087 Move X1, X19
	088 Move X2, X31
	089 Call FormatterServices.GetTypeFromAssembly, X0, X1
	090 Move X23, X0
	091 Move [X31+8], X0
	092 Move X8, 0xE48000
	093 Move X8, [X8+1728]
	094 Move X0, [X8]
	095 Move W8, [X0+224]
	096 Compare W8, 0
	097 JumpIfNotEqual {99}
	098 Call 0x1C17DFC
	099 Move X0, X23
	100 Move X1, X31
	101 Move X2, X31
	102 Call Type.op_Inequality, X0, X1
	103 Move TEMP, X0
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfNotEqual {118}
	107 Compare X23, 0
	108 JumpIfEqual {131}
	109 Move X8, [X23]
	110 Move X0, X23
	111 Move X9, [X8+760]
	112 Move X1, [X8+768]
	113 NotImplemented "Instruction BLR not yet implemented."
	114 Move X1, X0
	115 Move X0, X22
	116 Move X2, X23
	117 Call ObjectReader.CheckTypeForwardedTo, X0, X1, X2
	118 Move X8, [X21+16]
	119 Move [X20+200], X23
	120 Move [X20+184], X8
	121 Move [X20+192], X19
	122 Move X0, X23
	123 Move X20, [X31+48]
	124 Move X19, [X31+56]
	125 Move X22, [X31+32]
	126 Move X21, [X31+40]
	127 Move X30, [X31+16]
	128 Move X23, [X31+24]
	129 Add X31, X31, 64
	130 Return X0
	131 Call 0x1C17F20

Method: System.Void CheckTypeForwardedTo(System.Reflection.Assembly sourceAssembly, System.Reflection.Assembly destAssembly, System.Type resolvedType)

Disassembly:
	0x032B95F0 MOV X5, X23
	0x032B95F4 MOV X6, X25
	0x032B95F8 BL 0x32BA30C
	0x032B95FC LDR X0, [X22 + 0x40]
	0x032B9600 CBZ X0, 0x32B96DC
	0x032B9604 BL 0x32B25B4
	0x032B9608 LDR X8, [X22 + 0x40]
	0x032B960C CBZ X8, 0x32B96DC
	0x032B9610 LDR X0, [X22 + 0xB8]
	0x032B9614 CBZ X0, 0x32B96DC
	0x032B9618 MOV X1, X23
	0x032B961C MOV X2, X31
	0x032B9620 BL 0x32BD7AC
	0x032B9624 LDR X8, [X31 + 0x18]
	0x032B9628 CBNZ X8, 0x32B96BC
	0x032B962C LDR X0, [X22 + 0xB8]
	0x032B9630 CBZ X0, 0x32B96DC
	0x032B9634 LDR X1, [X31 + 0x38]
	0x032B9638 LDP X20, X19, [X31 + 0x90]
	0x032B963C LDP X22, X21, [X31 + 0x80]
	0x032B9640 LDP X24, X23, [X31 + 0x70]
	0x032B9644 LDP X26, X25, [X31 + 0x60]
	0x032B9648 LDP X28, X27, [X31 + 0x50]
	0x032B964C LDP X29, X30, [X31 + 0x40]
	0x032B9650 MOV X2, X31
	0x032B9654 ADD X31, X31, 0xA0
	0x032B9658 B 0x32BD7AC
	0x032B965C CBZ X29, 0x32B96DC
	0x032B9660 LDR W8, [X29 + 0x18]
	0x032B9664 CBZ W8, 0x32B9584
	0x032B9668 LDR X19, [X22 + 0x40]
	0x032B966C CBZ X19, 0x32B96DC
	0x032B9670 ADRP X8, 0xE3A000
	0x032B9674 LDR W21, [X29 + 0x20]
	0x032B9678 LDR X8, [X8 + 0x618]
	0x032B967C MOV X0, X24
	0x032B9680 LDR X25, [X8]
	0x032B9684 MOV X1, X25
	0x032B9688 BL 0x1C16E00
	0x032B968C CBZ X0, 0x32B96F4
	0x032B9690 MOV X22, X0
	0x032B9694 MOV X0, X19
	0x032B9698 BL 0x32B25B4
	0x032B969C LDR X2, [X31 + 0x38]
	0x032B96A0 LDR X3, [X31 + 0x20]
	0x032B96A4 MOV X0, X19
	0x032B96A8 MOV X4, X23
	0x032B96AC MOV W5, W21
	0x032B96B0 MOV W6, W31
	0x032B96B4 MOV X7, X22
	0x032B96B8 BL 0x32B2850
	0x032B96BC LDP X20, X19, [X31 + 0x90]
	0x032B96C0 LDP X22, X21, [X31 + 0x80]
	0x032B96C4 LDP X24, X23, [X31 + 0x70]
	0x032B96C8 LDP X26, X25, [X31 + 0x60]
	0x032B96CC LDP X28, X27, [X31 + 0x50]
	0x032B96D0 LDP X29, X30, [X31 + 0x40]
	0x032B96D4 ADD X31, X31, 0xA0
	0x032B96D8 RET
	0x032B96DC BL 0x1C16F20
	0x032B96E0 MOV X0, X24
	0x032B96E4 BL 0x1C171E0
	0x032B96E8 MOV X0, X24
	0x032B96EC MOV X1, X27
	0x032B96F0 BL 0x1C171E0
	0x032B96F4 MOV X0, X24
	0x032B96F8 MOV X1, X25
	0x032B96FC BL 0x1C171E0
	0x032B9700 BICS W31, W2, W1, 0x0
	0x032B9704 CSET W0, EQ
	0x032B9708 RET
	0x032B970C CBZ X1, 0x32B971C
	0x032B9710 MOV X0, X1
	0x032B9714 MOV X1, X31
	0x032B9718 B 0x33BE520
	0x032B971C STR X30, [X31 - 0x10]!
	0x032B9720 BL 0x1C16F20
	0x032B9724 SUB X31, X31, 0x80
	0x032B9728 STP X29, X30, [X31 + 0x20]
	0x032B972C STP X28, X27, [X31 + 0x30]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1124000
	008 Move X23, 0xE6C000
	009 Move W8, [X22+2081]
	010 Move X23, [X23+2928]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xE67000
	019 Move X0, [X0+208]
	020 Call 0x1C17CF4
	021 Move X0, 0xE6C000
	022 Move X0, [X0+2928]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+2081], W8
	026 Move X0, [X23]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X31
	032 Call FormatterServices.UnsafeTypeForwardersIsEnabled
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {62}
	037 Move X0, X21
	038 Move X1, X20
	039 Move X2, X31
	040 Call Assembly.op_Inequality, X0, X1
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {62}
	045 Move X8, 0xE67000
	046 Move X8, [X8+208]
	047 Move X0, [X8]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X0, X19
	053 Call BinaryFormatter.GetTypeInformation, X0
	054 Compare X0, 0
	055 JumpIfEqual {69}
	056 Move W8, [X0+32]
	057 Compare W8, 0
	058 JumpIfEqual {62}
	059 Move X0, [X0+24]
	060 Move X1, X31
	061 Call Assembly.Load, X0
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Move X23, [X31+56]
	068 Return 
	069 Call 0x1C17F20
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X19, X0
	072 Move X0, X19
	073 Call 0x3EB2AD0
	074 Move X19, X0
	075 Move X0, 0xE41000
	076 Move X0, [X0+3264]
	077 Call 0x1C17D08
	078 Move X8, [X19]
	079 Move X1, [X8]
	080 Call 0x1C18270
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfNotEqual {93}
	085 Move X20, [X31+32]
	086 Move X19, [X31+40]
	087 Move X22, [X31+16]
	088 Move X21, [X31+24]
	089 Move X30, [X31+48]
	090 Move X23, [X31+56]
	091 Call 0x3EB2AE0
	092 Return 
	093 Move W0, 8
	094 Call 0x3EB2AF0
	095 Move X8, [X19]
	096 Move [X0], X8
	097 Move X1, 0xBFC000
	098 Add X1, X1, 3672
	099 Move X2, X31
	100 Call 0x3EB2B00
	101 Move X19, X0
	102 Call 0x3EB2AE0
	103 Move X0, X19
	104 Call 0x1D2D690
	105 Call 0x1991590

