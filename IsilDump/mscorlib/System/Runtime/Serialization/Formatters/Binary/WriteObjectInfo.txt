Type: System.Runtime.Serialization.Formatters.Binary.WriteObjectInfo

Method: System.Void .ctor()

Disassembly:
	0x032B43AC LDR X8, [X24]
	0x032B43B0 LDR X10, [X10 + 0x9E0]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void ObjectEnd()

Disassembly:
	0x032B43B4 LDRH W9, [X8 + 0x12E]
	0x032B43B8 LDR X1, [X10]
	0x032B43BC CBZ X9, 0x32B43E0

ISIL:
	001 Move X1, X0
	002 Move X0, [X0+96]

Method: System.Void InternalInit()

Disassembly:
	0x032B43E0 MOV X0, X24
	0x032B43E4 MOV W2, W31
	0x032B43E8 BL 0x1C5C788
	0x032B43EC B 0x32B44EC
	0x032B43F0 LDR X0, [X20 + 0x48]
	0x032B43F4 CBNZ X0, 0x32B4510
	0x032B43F8 ADRP X22, 0xE70000
	0x032B43FC LDR X22, [X22 + 0xF80]

ISIL:
	001 NotImplemented "Instruction MOVI not yet implemented."
	002 Move [X0+24], X31
	003 Move [X0+32], X31
	004 Move [X0+40], W31
	005 Move [X0+56], X31
	006 Move [X0+64], X31
	007 Move [X0+48], X31
	008 Move [X0+104], V0
	009 Move [X0+120], V0
	010 Return 

Method: System.Runtime.Serialization.Formatters.Binary.WriteObjectInfo Serialize(System.Object obj, System.Runtime.Serialization.ISurrogateSelector surrogateSelector, System.Runtime.Serialization.StreamingContext context, System.Runtime.Serialization.Formatters.Binary.SerObjectInfoInit serObjectInfoInit, System.Runtime.Serialization.IFormatterConverter converter, System.Runtime.Serialization.Formatters.Binary.ObjectWriter objectWriter, System.Runtime.Serialization.SerializationBinder binder)

Disassembly:
	0x032B4400 LDR X0, [X22]
	0x032B4404 LDR W8, [X0 + 0xE0]
	0x032B4408 CBNZ W8, 0x32B4414
	0x032B440C BL 0x1C16DFC
	0x032B4410 LDR X0, [X22]
	0x032B4414 LDR X8, [X0 + 0xB8]
	0x032B4418 LDR X9, [X8 + 0xC0]
	0x032B441C CMP X19, X9
	0x032B4420 B.EQ 0x32B4560
	0x032B4424 LDR W9, [X0 + 0xE0]
	0x032B4428 CBNZ W9, 0x32B4438
	0x032B442C BL 0x1C16DFC
	0x032B4430 LDR X8, [X22]
	0x032B4434 LDR X8, [X8 + 0xB8]
	0x032B4438 LDR X0, [X8 + 0x30]
	0x032B443C CBZ X0, 0x32B459C
	0x032B4440 LDR X8, [X0]
	0x032B4444 MOV X1, X19
	0x032B4448 LDR X9, [X8 + 0x2A8]
	0x032B444C LDR X2, [X8 + 0x2B0]
	0x032B4450 BLR X9
	0x032B4454 TBZ X0, 0x0, 0x32B4560
	0x032B4458 ADRP X8, 0xE70000
	0x032B445C LDR X8, [X8 + 0xB70]
	0x032B4460 LDR X0, [X8]
	0x032B4464 LDR W8, [X0 + 0xE0]
	0x032B4468 CBNZ W8, 0x32B4470
	0x032B446C BL 0x1C16DFC
	0x032B4470 MOV X0, X31
	0x032B4474 BL 0x32A1A28
	0x032B4478 ADRP X8, 0xE71000
	0x032B447C LDR X8, [X8 + 0x50]
	0x032B4480 MOV W22, W0
	0x032B4484 LDR X8, [X8]
	0x032B4488 MOV X0, X8
	0x032B448C BL 0x1C16F10

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X27, X0
	013 Move X0, X4
	014 Move X23, X7
	015 Move X19, X6
	016 Move X20, X5
	017 Move X21, X4
	018 Move X22, X3
	019 Move X24, X2
	020 Move X26, X1
	021 Call WriteObjectInfo.GetObjectInfo, X0
	022 Compare X0, 0
	023 JumpIfEqual {47}
	024 Move X1, X27
	025 Move X2, X26
	026 Move X3, X24
	027 Move X4, X22
	028 Move X5, X21
	029 Move X6, X20
	030 Move X7, X19
	031 Move X25, X0
	032 Move [X31], X23
	033 Call WriteObjectInfo.InitSerialize, X0, X1, X2, X3, X4, X5, X6, X7
	034 Move X0, X25
	035 Move X20, [X31+80]
	036 Move X19, [X31+88]
	037 Move X22, [X31+64]
	038 Move X21, [X31+72]
	039 Move X24, [X31+48]
	040 Move X23, [X31+56]
	041 Move X26, [X31+32]
	042 Move X25, [X31+40]
	043 Move X30, [X31+16]
	044 Move X27, [X31+24]
	045 Add X31, X31, 96
	046 Return X0
	047 Call 0x1C17F20

Method: System.Void InitSerialize(System.Object obj, System.Runtime.Serialization.ISurrogateSelector surrogateSelector, System.Runtime.Serialization.StreamingContext context, System.Runtime.Serialization.Formatters.Binary.SerObjectInfoInit serObjectInfoInit, System.Runtime.Serialization.IFormatterConverter converter, System.Runtime.Serialization.Formatters.Binary.ObjectWriter objectWriter, System.Runtime.Serialization.SerializationBinder binder)

Disassembly:
	0x032B4570 LDR X0, [X20 + 0x38]
	0x032B4574 LDR X2, [X20 + 0x80]
	0x032B4578 MOV X1, X19
	0x032B457C BL 0x32B3E2C
	0x032B4580 LDP X20, X19, [X31 + 0x50]
	0x032B4584 LDP X22, X21, [X31 + 0x40]
	0x032B4588 LDP X24, X23, [X31 + 0x30]
	0x032B458C LDP X26, X25, [X31 + 0x20]
	0x032B4590 LDP X30, X27, [X31 + 0x10]
	0x032B4594 ADD X31, X31, 0x60
	0x032B4598 RET
	0x032B459C BL 0x1C16F20
	0x032B45A0 STR X30, [X31 - 0x30]!
	0x032B45A4 STP X22, X21, [X31 + 0x10]
	0x032B45A8 STP X20, X19, [X31 + 0x20]
	0x032B45AC ADRP X22, 0x1128000
	0x032B45B0 ADRP X21, 0xE6B000
	0x032B45B4 LDRB W8, [X22 + 0x810]
	0x032B45B8 LDR X21, [X21 + 0xD0]
	0x032B45BC MOV X20, X1
	0x032B45C0 MOV X19, X0
	0x032B45C4 TBNZ X8, 0x0, 0x32B45DC
	0x032B45C8 ADRP X0, 0xE6B000
	0x032B45CC LDR X0, [X0 + 0xD0]
	0x032B45D0 BL 0x1C16CF4
	0x032B45D4 MOVZ W8, 0x1
	0x032B45D8 STRB W8, [X22 + 0x810]
	0x032B45DC MOV X0, X19
	0x032B45E0 MOV X1, X31
	0x032B45E4 BL 0x33BDD8C
	0x032B45E8 LDR X0, [X21]
	0x032B45EC LDR W8, [X0 + 0xE0]
	0x032B45F0 CBNZ W8, 0x32B45F8
	0x032B45F4 BL 0x1C16DFC
	0x032B45F8 MOV X0, X20
	0x032B45FC BL 0x32B1848
	0x032B4600 CBZ X0, 0x32B4624
	0x032B4604 LDR V0, [X0 + 0x1]
	0x032B4608 LDP X22, X21, [X31 + 0x10]
	0x032B460C STR V0, [X19 + 0x1]
	0x032B4610 LDRB W8, [X0 + 0x20]
	0x032B4614 STRB W8, [X19 + 0x20]
	0x032B4618 LDP X20, X19, [X31 + 0x20]
	0x032B461C LDR X30, [X31], #0x30
	0x032B4620 RET
	0x032B4624 BL 0x1C16F20
	0x032B4628 STR X30, [X31 - 0x30]!
	0x032B462C STP X22, X21, [X31 + 0x10]
	0x032B4630 STP X20, X19, [X31 + 0x20]
	0x032B4634 MOV X20, X1
	0x032B4638 MOV X1, X31
	0x032B463C MOV X19, X2
	0x032B4640 MOV X21, X0
	0x032B4644 AND W22, W3, 0x1
	0x032B4648 BL 0x33BDD8C
	0x032B464C STP X20, X19, [X21 + 0x10]
	0x032B4650 STRB W22, [X21 + 0x20]
	0x032B4654 LDP X20, X19, [X31 + 0x20]
	0x032B4658 LDP X22, X21, [X31 + 0x10]
	0x032B465C LDR X30, [X31], #0x30
	0x032B4660 RET
	0x032B4664 STR X30, [X31 - 0x20]!
	0x032B4668 STP X20, X19, [X31 + 0x10]
	0x032B466C ADRP X20, 0x1128000
	0x032B4670 LDRB W8, [X20 + 0x803]
	0x032B4674 MOV X19, X1
	0x032B4678 TBNZ X8, 0x0, 0x32B469C
	0x032B467C ADRP X0, 0xE68000
	0x032B4680 LDR X0, [X0 + 0x3A8]
	0x032B4684 BL 0x1C16CF4
	0x032B4688 ADRP X0, 0xE68000
	0x032B468C LDR X0, [X0 + 0x3F0]
	0x032B4690 BL 0x1C16CF4
	0x032B4694 MOVZ W8, 0x1
	0x032B4698 STRB W8, [X20 + 0x803]
	0x032B469C CBZ X19, 0x32B4724
	0x032B46A0 ADRP X9, 0xE68000
	0x032B46A4 LDR X9, [X9 + 0x3A8]
	0x032B46A8 LDR X8, [X19]
	0x032B46AC LDR X10, [X9]
	0x032B46B0 LDRB W9, [X8 + 0x130]
	0x032B46B4 LDRB W11, [X10 + 0x130]
	0x032B46B8 CMP W9, W11
	0x032B46BC B.CC 0x32B46D4
	0x032B46C0 LDR X12, [X8 + 0xC8]
	0x032B46C4 ADD X11, X12, X11, 0x3, LSL
	0x032B46C8 LDUR X11, [X11 - 0x8]
	0x032B46CC CMP X11, X10
	0x032B46D0 B.EQ 0x32B4718
	0x032B46D4 ADRP X10, 0xE68000
	0x032B46D8 LDR X10, [X10 + 0x3F0]
	0x032B46DC LDR X10, [X10]
	0x032B46E0 LDRB W11, [X10 + 0x130]
	0x032B46E4 CMP W9, W11
	0x032B46E8 B.CC 0x32B4724
	0x032B46EC LDR X9, [X8 + 0xC8]
	0x032B46F0 ADD X9, X9, X11, 0x3, LSL
	0x032B46F4 LDUR X9, [X9 - 0x8]
	0x032B46F8 CMP X9, X10
	0x032B46FC B.NE 0x32B4724
	0x032B4700 LDR X2, [X8 + 0x248]
	0x032B4704 LDR X1, [X8 + 0x250]
	0x032B4708 MOV X0, X19
	0x032B470C LDP X20, X19, [X31 + 0x10]
	0x032B4710 LDR X30, [X31], #0x20
	0x032B4714 BR X2
	0x032B4718 LDR X2, [X8 + 0x258]
	0x032B471C LDR X1, [X8 + 0x260]
	0x032B4720 B 0x32B4708
	0x032B4724 ADRP X0, 0xE3F000
	0x032B4728 LDR X0, [X0 + 0x9D0]
	0x032B472C BL 0x1C16D08
	0x032B4730 MOVZ W1, 0x1
	0x032B4734 BL 0x1C16D6C
	0x032B4738 MOV X20, X0
	0x032B473C MOV X0, X19
	0x032B4740 BL 0x19903C0
	0x032B4744 MOV X0, X19
	0x032B4748 MOV X1, X31
	0x032B474C BL 0x33BE520
	0x032B4750 MOV X19, X0
	0x032B4754 MOV X0, X20
	0x032B4758 BL 0x19903C0
	0x032B475C MOV X0, X20
	0x032B4760 MOV X1, X19
	0x032B4764 BL 0x19980B4
	0x032B4768 MOV X0, X20
	0x032B476C MOV X1, X31
	0x032B4770 MOV X2, X19
	0x032B4774 BL 0x1993444
	0x032B4778 ADRP X0, 0xE71000
	0x032B477C LDR X0, [X0 + 0x350]
	0x032B4780 BL 0x1C16D08
	0x032B4784 MOV X1, X20
	0x032B4788 MOV X2, X31
	0x032B478C BL 0x33BFB40
	0x032B4790 MOV X19, X0
	0x032B4794 ADRP X0, 0xE69000
	0x032B4798 LDR X0, [X0 + 0x2E0]
	0x032B479C BL 0x1C16D08
	0x032B47A0 BL 0x1C16F10
	0x032B47A4 MOV X1, X19
	0x032B47A8 MOV X2, X31
	0x032B47AC MOV X20, X0
	0x032B47B0 BL 0x329F100
	0x032B47B4 ADRP X0, 0xE71000
	0x032B47B8 LDR X0, [X0 + 0x358]
	0x032B47BC BL 0x1C16D08
	0x032B47C0 MOV X1, X0
	0x032B47C4 MOV X0, X20
	0x032B47C8 BL 0x1C16DEC
	0x032B47CC STR X30, [X31 - 0x20]!
	0x032B47D0 STP X20, X19, [X31 + 0x10]
	0x032B47D4 LDR X8, [X0 + 0x38]
	0x032B47D8 CBZ X8, 0x32B4818
	0x032B47DC LDR X8, [X8 + 0x30]
	0x032B47E0 STR X8, [X1]
	0x032B47E4 LDR X8, [X0 + 0x38]
	0x032B47E8 CBZ X8, 0x32B4818
	0x032B47EC LDR X8, [X8 + 0x38]
	0x032B47F0 STR X8, [X2]
	0x032B47F4 LDR X8, [X0 + 0x40]
	0x032B47F8 STR X8, [X3]
	0x032B47FC LDRB W8, [X0 + 0x28]
	0x032B4800 CBZ W8, 0x32B480C
	0x032B4804 LDRB W8, [X0 + 0x29]
	0x032B4808 CBZ W8, 0x32B481C
	0x032B480C LDP X20, X19, [X31 + 0x10]
	0x032B4810 LDR X30, [X31], #0x20
	0x032B4814 RET
	0x032B4818 BL 0x1C16F20
	0x032B481C ADRP X0, 0xE71000
	0x032B4820 LDR X0, [X0 + 0x360]
	0x032B4824 BL 0x1C16D08
	0x032B4828 MOV X1, X31
	0x032B482C BL 0x33BDD84
	0x032B4830 MOV X19, X0
	0x032B4834 ADRP X0, 0xE69000
	0x032B4838 LDR X0, [X0 + 0x2E0]
	0x032B483C BL 0x1C16D08
	0x032B4840 BL 0x1C16F10
	0x032B4844 MOV X1, X19
	0x032B4848 MOV X2, X31
	0x032B484C MOV X20, X0
	0x032B4850 BL 0x329F100
	0x032B4854 ADRP X0, 0xE71000
	0x032B4858 LDR X0, [X0 + 0x368]
	0x032B485C BL 0x1C16D08
	0x032B4860 MOV X1, X0
	0x032B4864 MOV X0, X20
	0x032B4868 BL 0x1C16DEC
	0x032B486C MOV X1, X31
	0x032B4870 B 0x33BDD8C
	0x032B4874 RET
	0x032B4878 STP X30, X27, [X31 - 0x50]!
	0x032B487C STP X26, X25, [X31 + 0x10]
	0x032B4880 STP X24, X23, [X31 + 0x20]
	0x032B4884 STP X22, X21, [X31 + 0x30]
	0x032B4888 STP X20, X19, [X31 + 0x40]
	0x032B488C MOV W26, W7
	0x032B4890 MOV X22, X6
	0x032B4894 MOV X25, X5
	0x032B4898 MOV X27, X4
	0x032B489C MOV X19, X3
	0x032B48A0 MOV X20, X2
	0x032B48A4 MOV X21, X1
	0x032B48A8 MOV X24, X0
	0x032B48AC BL 0x32B4900
	0x032B48B0 CBZ X0, 0x32B48FC
	0x032B48B4 AND W8, W26, 0x1
	0x032B48B8 MOV X1, X24
	0x032B48BC MOV X2, X21
	0x032B48C0 MOV X3, X20
	0x032B48C4 MOV X4, X19
	0x032B48C8 MOV X23, X0
	0x032B48CC STP X24, X27, [X0 + 0x18]
	0x032B48D0 STP X20, X19, [X0 + 0x58]
	0x032B48D4 STP X25, X22, [X0 + 0x70]
	0x032B48D8 STRB W8, [X0 + 0x2F]
	0x032B48DC BL 0x32B498C
	0x032B48E0 MOV X0, X23
	0x032B48E4 LDP X20, X19, [X31 + 0x40]
	0x032B48E8 LDP X22, X21, [X31 + 0x30]
	0x032B48EC LDP X24, X23, [X31 + 0x20]
	0x032B48F0 LDP X26, X25, [X31 + 0x10]
	0x032B48F4 LDP X30, X27, [X31], #0x50
	0x032B48F8 RET
	0x032B48FC BL 0x1C16F20
	0x032B4900 STR X30, [X31 - 0x20]!
	0x032B4904 STP X20, X19, [X31 + 0x10]
	0x032B4908 ADRP X19, 0x1128000
	0x032B490C ADRP X20, 0xE71000
	0x032B4910 LDRB W8, [X19 + 0x80E]
	0x032B4914 LDR X20, [X20 + 0x370]
	0x032B4918 TBNZ X8, 0x0, 0x32B4930
	0x032B491C ADRP X0, 0xE71000
	0x032B4920 LDR X0, [X0 + 0x370]
	0x032B4924 BL 0x1C16CF4
	0x032B4928 MOVZ W8, 0x1
	0x032B492C STRB W8, [X19 + 0x80E]
	0x032B4930 LDR X0, [X20]
	0x032B4934 BL 0x1C16F10
	0x032B4938 MOV X1, X31
	0x032B493C MOV X19, X0
	0x032B4940 BL 0x33BDD8C
	0x032B4944 LDR X8, [X20]
	0x032B4948 MOV X1, X31
	0x032B494C LDR X0, [X8 + 0xB8]
	0x032B4950 BL 0x33EB14C
	0x032B4954 CBZ X19, 0x32B496C
	0x032B4958 STR W0, [X19 + 0x10]
	0x032B495C MOV X0, X19
	0x032B4960 LDP X20, X19, [X31 + 0x10]
	0x032B4964 LDR X30, [X31], #0x20
	0x032B4968 RET
	0x032B496C BL 0x1C16F20
	0x032B4970 LDRB W8, [X31]
	0x032B4974 STP X1, X5, [X0 + 0x18]
	0x032B4978 STP X3, X4, [X0 + 0x58]
	0x032B497C STP X6, X7, [X0 + 0x70]
	0x032B4980 AND W8, W8, 0x1
	0x032B4984 STRB W8, [X0 + 0x2F]
	0x032B4988 B 0x32B498C
	0x032B498C STR X30, [X31 - 0x40]!
	0x032B4990 STP X24, X23, [X31 + 0x10]
	0x032B4994 STP X22, X21, [X31 + 0x20]
	0x032B4998 STP X20, X19, [X31 + 0x30]
	0x032B499C ADRP X24, 0x1128000
	0x032B49A0 LDRB W8, [X24 + 0x805]
	0x032B49A4 MOV X21, X4
	0x032B49A8 MOV X22, X3
	0x032B49AC MOV X23, X2
	0x032B49B0 MOV X20, X1
	0x032B49B4 MOV X19, X0
	0x032B49B8 TBNZ X8, 0x0, 0x32B49DC
	0x032B49BC ADRP X0, 0xE70000
	0x032B49C0 LDR X0, [X0 + 0xF80]
	0x032B49C4 BL 0x1C16CF4
	0x032B49C8 ADRP X0, 0xE70000
	0x032B49CC LDR X0, [X0 + 0x9E0]
	0x032B49D0 BL 0x1C16CF4
	0x032B49D4 MOVZ W8, 0x1
	0x032B49D8 STRB W8, [X24 + 0x805]
	0x032B49DC CBZ X20, 0x32B4B20
	0x032B49E0 MOV X0, X20
	0x032B49E4 MOV X1, X31
	0x032B49E8 BL 0x3396BF8
	0x032B49EC TBZ X0, 0x0, 0x32B49FC
	0x032B49F0 MOV X0, X19
	0x032B49F4 BL 0x32B4C10
	0x032B49F8 B 0x32B4B0C
	0x032B49FC STR X31, [X31 + 0x8]
	0x032B4A00 CBZ X23, 0x32B4A4C
	0x032B4A04 ADRP X10, 0xE70000
	0x032B4A08 LDR X8, [X23]
	0x032B4A0C LDR X10, [X10 + 0x9E0]
	0x032B4A10 LDRH W9, [X8 + 0x12E]
	0x032B4A14 LDR X1, [X10]
	0x032B4A18 CBZ X9, 0x32B4A3C
	0x032B4A1C LDR X10, [X8 + 0xB0]
	0x032B4A20 ADD X10, X10, 0x8
	0x032B4A24 LDUR X11, [X10 - 0x8]
	0x032B4A28 CMP X11, X1
	0x032B4A2C B.EQ 0x32B4A58
	0x032B4A30 SUBS X9, X9, 0x1
	0x032B4A34 ADD X10, X10, 0x10
	0x032B4A38 B.NE 0x32B4A24
	0x032B4A3C MOV X0, X23
	0x032B4A40 MOV W2, W31
	0x032B4A44 BL 0x1C5C788
	0x032B4A48 B 0x32B4A64

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X27, 0x1129000
	013 Move W8, [X27+2045]
	014 Move X25, X7
	015 Move X23, X6
	016 Move X26, X5
	017 Move X20, X4
	018 Move X21, X3
	019 Move X24, X2
	020 Move X22, X1
	021 Move X19, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {43}
	026 Move X0, 0xE71000
	027 Move X0, [X0+2928]
	028 Call 0x1C17CF4
	029 Move X0, 0xE70000
	030 Move X0, [X0+3120]
	031 Call 0x1C17CF4
	032 Move X0, 0xE71000
	033 Move X0, [X0+3232]
	034 Call 0x1C17CF4
	035 Move X0, 0xE71000
	036 Move X0, [X0+2528]
	037 Call 0x1C17CF4
	038 Move X0, 0xE72000
	039 Move X0, [X0+80]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X27+2045], W8
	043 Move [X31+8], X31
	044 Move [X19+80], X21
	045 Move [X19+88], X20
	046 Move [X19+24], X22
	047 Move [X19+96], X26
	048 Compare X22, 0
	049 JumpIfEqual {268}
	050 Move X0, X22
	051 Move X1, X31
	052 Call "il2cpp_vm_object_is_inst", X0
	053 Move [X19+32], X0
	054 Compare X0, 0
	055 JumpIfEqual {268}
	056 Move X1, X31
	057 Call Type.get_IsArray, X0
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {66}
	062 Move W8, 1
	063 Move X0, X19
	064 Move [X19+43], W8
	065 Call WriteObjectInfo.InitNoMembers, X0
	066 Move X0, [X31+96]
	067 Compare X0, 0
	068 JumpIfEqual {76}
	069 Move X8, [X0]
	070 Move X1, [X19+32]
	071 Add X2, X19, 128
	072 Add X3, X19, 120
	073 Move X9, [X8+376]
	074 Move X4, [X8+384]
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Compare X25, 0
	077 JumpIfEqual {268}
	078 Move X0, [X25+72]
	079 Compare X0, 0
	080 JumpIfEqual {268}
	081 Move X1, X22
	082 Move X2, X31
	083 Call SerializationObjectManager.RegisterObject, X0, X1
	084 Compare X24, 0
	085 JumpIfEqual {157}
	086 Move X10, 0xE71000
	087 Move X8, [X24]
	088 Move X25, [X19+32]
	089 Move X10, [X10+2528]
	090 NotImplemented "Instruction LDRH not yet implemented."
	091 Move X1, [X10]
	092 Compare X9, 0
	093 JumpIfEqual {100}
	094 Move X10, [X8+176]
	095 Add X10, X10, 8
	096 NotImplemented "Instruction LDUR not yet implemented."
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Subtract X9, X9, 1
	099 Add X10, X10, 16
	100 Move X0, X24
	101 Move W2, W31
	102 Call 0x1C5D788
	103 NotImplemented "Instruction LDRSW not yet implemented."
	104 Add X8, X8, X9
	105 Add X0, X8, 312
	106 Move X8, [X0]
	107 Move X5, [X0+8]
	108 Add X4, X31, 8
	109 Move X0, X24
	110 Move X1, X25
	111 Move X2, X21
	112 Move X3, X20
	113 NotImplemented "Instruction BLR not yet implemented."
	114 Move [X19+72], X0
	115 Compare X0, 0
	116 JumpIfEqual {157}
	117 Move X8, 0xE72000
	118 Move X24, [X19+32]
	119 Move X8, [X8+80]
	120 Move X0, [X8]
	121 Call 0x1C17F10
	122 Move X1, X24
	123 Move X2, X23
	124 Move W3, W31
	125 Move X25, X0
	126 Call SerializationInfo..ctor, X0, X1, X2, X3
	127 Move X0, [X19+32]
	128 Move [X19+48], X25
	129 Compare X0, 0
	130 JumpIfEqual {268}
	131 Move X1, X31
	132 Call Type.get_IsPrimitive, X0
	133 Move TEMP, X0
	134 And TEMP, TEMP, 1
	135 Compare TEMP, 1
	136 JumpIfEqual {254}
	137 Move X23, [X19+72]
	138 Compare X23, 0
	139 JumpIfEqual {268}
	140 Move X10, 0xE71000
	141 Move X8, [X23]
	142 Move X24, [X19+48]
	143 Move X10, [X10+3232]
	144 NotImplemented "Instruction LDRH not yet implemented."
	145 Move X1, [X10]
	146 Compare X9, 0
	147 JumpIfEqual {154}
	148 Move X10, [X8+176]
	149 Add X10, X10, 8
	150 NotImplemented "Instruction LDUR not yet implemented."
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Subtract X9, X9, 1
	153 Add X10, X10, 16
	154 Move X0, X23
	155 Move W2, W31
	156 Call 0x1C5D788
	157 Move X27, 0xE70000
	158 Move X27, [X27+3120]
	159 Move X0, X22
	160 Move X1, [X27]
	161 Call 0x1C17E00
	162 Compare X0, 0
	163 JumpIfEqual {225}
	164 Move X0, [X19+32]
	165 Compare X0, 0
	166 JumpIfEqual {268}
	167 Move X8, [X0]
	168 Move X9, [X8+632]
	169 Move X1, [X8+640]
	170 NotImplemented "Instruction BLR not yet implemented."
	171 Move TEMP, X0
	172 And TEMP, TEMP, 1
	173 Compare TEMP, 1
	174 JumpIfNotEqual {269}
	175 Move X8, 0xE71000
	176 Move X8, [X8+2928]
	177 Move X25, [X19+32]
	178 Move X0, [X8]
	179 Move W8, [X0+224]
	180 Compare W8, 0
	181 JumpIfNotEqual {183}
	182 Call 0x1C17DFC
	183 Move X0, X31
	184 Call FormatterServices.UnsafeTypeForwardersIsEnabled
	185 Move X8, 0xE72000
	186 Move X8, [X8+80]
	187 Move W26, W0
	188 Move X8, [X8]
	189 Move X0, X8
	190 Call 0x1C17F10
	191 NotImplemented "Instruction ORN not yet implemented."
	192 And W3, W8, 1
	193 Move X1, X25
	194 Move X2, X23
	195 Move X24, X0
	196 Call SerializationInfo..ctor, X0, X1, X2, X3
	197 Move [X19+48], X24
	198 Move X23, [X27]
	199 Move X0, X22
	200 Move X1, X23
	201 Call 0x1C17E00
	202 Compare X0, 0
	203 JumpIfEqual {339}
	204 Move X25, [X27]
	205 Move X0, X22
	206 Move X1, X25
	207 Call 0x1C17E00
	208 Compare X0, 0
	209 JumpIfEqual {342}
	210 Move X8, [X0]
	211 Move X23, X0
	212 NotImplemented "Instruction LDRH not yet implemented."
	213 Compare X9, 0
	214 JumpIfEqual {221}
	215 Move X10, [X8+176]
	216 Add X10, X10, 8
	217 NotImplemented "Instruction LDUR not yet implemented."
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Subtract X9, X9, 1
	220 Add X10, X10, 16
	221 Move X0, X23
	222 Move X1, X25
	223 Move W2, W31
	224 Call 0x1C5D788
	225 Move X0, X19
	226 Call WriteObjectInfo.InitMemberInfo, X0
	227 NotImplemented "Instruction LDRSW not yet implemented."
	228 Add X8, X8, X9
	229 Add X0, X8, 312
	230 Move X8, [X0]
	231 Move X4, [X0+8]
	232 Move X0, X23
	233 Move X1, X24
	234 Move X2, X21
	235 Move X3, X20
	236 NotImplemented "Instruction BLR not yet implemented."
	237 Move X0, X19
	238 Call WriteObjectInfo.InitSiWrite, X0
	239 Move X0, [X19+56]
	240 Move X1, [X19+32]
	241 Move X2, [X19+128]
	242 Call WriteObjectInfo.CheckTypeForwardedFrom, X0, X1, X2
	243 NotImplemented "Instruction LDRSW not yet implemented."
	244 Add X8, X8, X9
	245 Add X0, X8, 312
	246 Move X8, [X0]
	247 Move X5, [X0+8]
	248 Move X0, X23
	249 Move X1, X22
	250 Move X2, X24
	251 Move X3, X21
	252 Move X4, X20
	253 NotImplemented "Instruction BLR not yet implemented."
	254 Move X0, X19
	255 Call WriteObjectInfo.InitSiWrite, X0
	256 Move X20, [X31+80]
	257 Move X19, [X31+88]
	258 Move X22, [X31+64]
	259 Move X21, [X31+72]
	260 Move X24, [X31+48]
	261 Move X23, [X31+56]
	262 Move X26, [X31+32]
	263 Move X25, [X31+40]
	264 Move X30, [X31+16]
	265 Move X27, [X31+24]
	266 Add X31, X31, 96
	267 Return 
	268 Call 0x1C17F20
	269 Move X0, 0xE40000
	270 Move X0, [X0+2512]
	271 Call 0x1C17D08
	272 Move W1, 2
	273 Call 0x1C17D6C
	274 Move X21, [X19+32]
	275 Move X20, X0
	276 Move X0, X21
	277 Call 0x19913C0
	278 Move X8, [X21]
	279 Move X0, X21
	280 Move X9, [X8+744]
	281 Move X1, [X8+752]
	282 NotImplemented "Instruction BLR not yet implemented."
	283 Move X21, X0
	284 Move X0, X20
	285 Call 0x19913C0
	286 Move X0, X20
	287 Move X1, X21
	288 Call 0x19990B4
	289 Move X0, X20
	290 Move X1, X31
	291 Move X2, X21
	292 Call 0x1994444
	293 Move X19, [X19+32]
	294 Move X0, X19
	295 Call 0x19913C0
	296 Move X8, [X19]
	297 Move X0, X19
	298 Move X9, [X8+760]
	299 Move X1, [X8+768]
	300 NotImplemented "Instruction BLR not yet implemented."
	301 Move X19, X0
	302 Call 0x19913C0
	303 Move X8, [X19]
	304 Move X0, X19
	305 Move X9, [X8+440]
	306 Move X1, [X8+448]
	307 NotImplemented "Instruction BLR not yet implemented."
	308 Move X19, X0
	309 Move X0, X20
	310 Call 0x19913C0
	311 Move X0, X20
	312 Move X1, X19
	313 Call 0x19990B4
	314 Move W1, 1
	315 Move X0, X20
	316 Move X2, X19
	317 Call 0x1994444
	318 Move X0, 0xE71000
	319 Move X0, [X0+3008]
	320 Call 0x1C17D08
	321 Move X1, X20
	322 Move X2, X31
	323 Call Environment.GetResourceString, X0, X1
	324 Move X19, X0
	325 Move X0, 0xE6A000
	326 Move X0, [X0+736]
	327 Call 0x1C17D08
	328 Call 0x1C17F10
	329 Move X1, X19
	330 Move X2, X31
	331 Move X20, X0
	332 Call SerializationException..ctor, X0, X1
	333 Move X0, 0xE72000
	334 Move X0, [X0+816]
	335 Call 0x1C17D08
	336 Move X1, X0
	337 Move X0, X20
	338 Call 0x1C17DEC
	339 Move X0, X22
	340 Move X1, X23
	341 Call 0x1C181E0
	342 Move X0, X22
	343 Move X1, X25
	344 Call 0x1C181E0

Method: System.Runtime.Serialization.Formatters.Binary.WriteObjectInfo Serialize(System.Type objectType, System.Runtime.Serialization.ISurrogateSelector surrogateSelector, System.Runtime.Serialization.StreamingContext context, System.Runtime.Serialization.Formatters.Binary.SerObjectInfoInit serObjectInfoInit, System.Runtime.Serialization.IFormatterConverter converter, System.Runtime.Serialization.SerializationBinder binder)

Disassembly:
	0x032B5240 B 0x32B52D8
	0x032B5244 ADD W9, W10, 0x1
	0x032B5248 STR W9, [X22]
	0x032B524C LDR X10, [X8 + 0x30]
	0x032B5250 CBZ X10, 0x32B52D8
	0x032B5254 LDR W11, [X10 + 0x18]
	0x032B5258 CMP W9, W11
	0x032B525C B.GE 0x32B5290
	0x032B5260 B.CS 0x32B5300
	0x032B5264 ADD X8, X10, W9, 0x3, SXTW
	0x032B5268 LDR X0, [X8 + 0x20]
	0x032B526C CBZ X0, 0x32B52D8
	0x032B5270 MOV X1, X20
	0x032B5274 MOV X2, X31
	0x032B5278 BL 0x322693C
	0x032B527C TBZ X0, 0x0, 0x32B5288
	0x032B5280 LDR W21, [X22]
	0x032B5284 B 0x32B52EC
	0x032B5288 LDR X8, [X19 + 0x30]
	0x032B528C CBZ X8, 0x32B52D8
	0x032B5290 MOV X21, X31
	0x032B5294 LDR X8, [X8 + 0x30]
	0x032B5298 CBZ X8, 0x32B52D8
	0x032B529C LDR W9, [X8 + 0x18]
	0x032B52A0 CMP W21, W9
	0x032B52A4 B.GE 0x32B52DC
	0x032B52A8 CMP W21, W9
	0x032B52AC B.CS 0x32B5300
	0x032B52B0 ADD X8, X8, X21, 0x3, LSL
	0x032B52B4 LDR X0, [X8 + 0x20]
	0x032B52B8 CBZ X0, 0x32B52D8
	0x032B52BC MOV X1, X20
	0x032B52C0 MOV X2, X31
	0x032B52C4 BL 0x322693C

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X26, X0
	012 Move X0, X4
	013 Move X19, X6
	014 Move X20, X5
	015 Move X21, X4
	016 Move X22, X3
	017 Move X23, X2
	018 Move X25, X1
	019 Call WriteObjectInfo.GetObjectInfo, X0
	020 Compare X0, 0
	021 JumpIfEqual {43}
	022 Move X1, X26
	023 Move X2, X25
	024 Move X3, X23
	025 Move X4, X22
	026 Move X5, X21
	027 Move X6, X20
	028 Move X7, X19
	029 Move X24, X0
	030 Call WriteObjectInfo.InitSerialize, X0, X1, X2, X3, X4, X5, X6
	031 Move X0, X24
	032 Move X20, [X31+80]
	033 Move X19, [X31+88]
	034 Move X22, [X31+64]
	035 Move X21, [X31+72]
	036 Move X24, [X31+48]
	037 Move X23, [X31+56]
	038 Move X26, [X31+32]
	039 Move X25, [X31+40]
	040 Move X30, [X31+16]
	041 Add X31, X31, 96
	042 Return X0
	043 Call 0x1C17F20

Method: System.Void InitSerialize(System.Type objectType, System.Runtime.Serialization.ISurrogateSelector surrogateSelector, System.Runtime.Serialization.StreamingContext context, System.Runtime.Serialization.Formatters.Binary.SerObjectInfoInit serObjectInfoInit, System.Runtime.Serialization.IFormatterConverter converter, System.Runtime.Serialization.SerializationBinder binder)

Disassembly:
	0x032B52C8 TBNZ X0, 0x0, 0x32B52E8
	0x032B52CC LDR X8, [X19 + 0x30]
	0x032B52D0 ADD X21, X21, 0x1
	0x032B52D4 CBNZ X8, 0x32B5294
	0x032B52D8 BL 0x1C16F20
	0x032B52DC STR W31, [X22]
	0x032B52E0 MOVN W21, 0x0
	0x032B52E4 B 0x32B52EC
	0x032B52E8 STR W21, [X22]
	0x032B52EC MOV W0, W21
	0x032B52F0 LDP X20, X19, [X31 + 0x20]
	0x032B52F4 LDP X22, X21, [X31 + 0x10]
	0x032B52F8 LDR X30, [X31], #0x30
	0x032B52FC RET
	0x032B5300 BL 0x1C16F28
	0x032B5304 STR X30, [X31 - 0x30]!
	0x032B5308 STP X22, X21, [X31 + 0x10]
	0x032B530C STP X20, X19, [X31 + 0x20]
	0x032B5310 ADRP X21, 0x1127000
	0x032B5314 LDRB W8, [X21 + 0x809]
	0x032B5318 MOV X19, X1
	0x032B531C MOV X20, X0
	0x032B5320 TBNZ X8, 0x0, 0x32B5338
	0x032B5324 ADRP X0, 0xE70000
	0x032B5328 LDR X0, [X0 + 0x3A0]
	0x032B532C BL 0x1C16CF4
	0x032B5330 MOVZ W8, 0x1
	0x032B5334 STRB W8, [X21 + 0x809]
	0x032B5338 MOV X0, X20
	0x032B533C MOV X1, X19
	0x032B5340 BL 0x32B51D0
	0x032B5344 ADDS W31, W0, 0x1
	0x032B5348 B.EQ 0x32B5384
	0x032B534C LDRB W8, [X20 + 0x2E]
	0x032B5350 MOV W1, W0
	0x032B5354 CBZ W8, 0x32B538C
	0x032B5358 LDR X8, [X20 + 0x30]
	0x032B535C CBZ X8, 0x32B53B8
	0x032B5360 LDR X8, [X8 + 0x38]
	0x032B5364 CBZ X8, 0x32B53B8
	0x032B5368 LDR W9, [X8 + 0x18]
	0x032B536C CMP W1, W9
	0x032B5370 B.CS 0x32B5494
	0x032B5374 ADD X8, X8, W1, 0x3, SXTW
	0x032B5378 LDR X0, [X8 + 0x20]
	0x032B537C CBNZ X0, 0x32B53A8
	0x032B5380 B 0x32B53BC
	0x032B5384 MOV X0, X31
	0x032B5388 B 0x32B53A8
	0x032B538C LDR X0, [X20 + 0x68]
	0x032B5390 CBZ X0, 0x32B53B8
	0x032B5394 ADRP X8, 0xE70000
	0x032B5398 LDR X8, [X8 + 0x3A0]
	0x032B539C LDR X2, [X8]
	0x032B53A0 BL 0x301BCCC
	0x032B53A4 CBZ X0, 0x32B53BC
	0x032B53A8 LDP X20, X19, [X31 + 0x20]
	0x032B53AC LDP X22, X21, [X31 + 0x10]
	0x032B53B0 LDR X30, [X31], #0x30
	0x032B53B4 RET
	0x032B53B8 BL 0x1C16F20
	0x032B53BC ADRP X0, 0xE3E000
	0x032B53C0 LDR X0, [X0 + 0x9D0]
	0x032B53C4 BL 0x1C16D08
	0x032B53C8 MOVZ W1, 0x1
	0x032B53CC BL 0x1C16D6C
	0x032B53D0 LDR X22, [X20 + 0x18]
	0x032B53D4 MOV X20, X0
	0x032B53D8 ADRP X0, 0xE70000
	0x032B53DC LDR X0, [X0 + 0x30]
	0x032B53E0 BL 0x1C16D08
	0x032B53E4 MOV X21, X0
	0x032B53E8 CBZ X22, 0x32B5400
	0x032B53EC LDR X8, [X22]
	0x032B53F0 MOV X0, X22
	0x032B53F4 LDP X9, X1, [X8 + 0x168]
	0x032B53F8 BLR X9
	0x032B53FC MOV X22, X0
	0x032B5400 ADRP X0, 0xE3E000
	0x032B5404 LDR X0, [X0 + 0xDD8]
	0x032B5408 BL 0x1C16D08
	0x032B540C MOV X1, X0
	0x032B5410 MOV X0, X22
	0x032B5414 MOV X2, X19
	0x032B5418 MOV X3, X31
	0x032B541C BL 0x32274B8
	0x032B5420 MOV X19, X0
	0x032B5424 MOV X0, X20
	0x032B5428 BL 0x19903C0
	0x032B542C MOV X0, X20
	0x032B5430 MOV X1, X19
	0x032B5434 BL 0x19980B4
	0x032B5438 MOV X0, X20
	0x032B543C MOV X1, X31
	0x032B5440 MOV X2, X19
	0x032B5444 BL 0x1993444
	0x032B5448 MOV X0, X21
	0x032B544C MOV X1, X20
	0x032B5450 MOV X2, X31
	0x032B5454 BL 0x33BFB40
	0x032B5458 MOV X19, X0
	0x032B545C ADRP X0, 0xE68000
	0x032B5460 LDR X0, [X0 + 0x2E0]
	0x032B5464 BL 0x1C16D08
	0x032B5468 BL 0x1C16F10
	0x032B546C MOV X1, X19
	0x032B5470 MOV X2, X31
	0x032B5474 MOV X20, X0
	0x032B5478 BL 0x329F100
	0x032B547C ADRP X0, 0xE70000
	0x032B5480 LDR X0, [X0 + 0x3A8]
	0x032B5484 BL 0x1C16D08
	0x032B5488 MOV X1, X0
	0x032B548C MOV X0, X20
	0x032B5490 BL 0x1C16DEC
	0x032B5494 BL 0x1C16F28
	0x032B5498 STP X30, X21, [X31 - 0x20]!
	0x032B549C STP X20, X19, [X31 + 0x10]
	0x032B54A0 LDRB W8, [X0 + 0x2C]
	0x032B54A4 MOV X19, X2
	0x032B54A8 CBZ W8, 0x32B54C4
	0x032B54AC LDR X0, [X3]
	0x032B54B0 CBZ X0, 0x32B5518
	0x032B54B4 MOV X2, X19
	0x032B54B8 LDP X20, X19, [X31 + 0x10]
	0x032B54BC LDP X30, X21, [X31], #0x20
	0x032B54C0 B 0x32A8BF0
	0x032B54C4 MOV X21, X4
	0x032B54C8 BL 0x32B51D0
	0x032B54CC ADDS W31, W0, 0x1
	0x032B54D0 B.EQ 0x32B550C
	0x032B54D4 LDR X21, [X21]
	0x032B54D8 CBZ X21, 0x32B5518
	0x032B54DC MOV W20, W0
	0x032B54E0 CBZ X19, 0x32B54F8
	0x032B54E4 LDR X8, [X21]
	0x032B54E8 MOV X0, X19
	0x032B54EC LDR X1, [X8 + 0x40]
	0x032B54F0 BL 0x1C16E00
	0x032B54F4 CBZ X0, 0x32B5520
	0x032B54F8 LDR W8, [X21 + 0x18]
	0x032B54FC CMP W20, W8
	0x032B5500 B.CS 0x32B551C
	0x032B5504 ADD X8, X21, W20, 0x3, SXTW
	0x032B5508 STR X19, [X8 + 0x20]
	0x032B550C LDP X20, X19, [X31 + 0x10]
	0x032B5510 LDP X30, X21, [X31], #0x20
	0x032B5514 RET
	0x032B5518 BL 0x1C16F20
	0x032B551C BL 0x1C16F28
	0x032B5520 BL 0x1C16F44
	0x032B5524 MOV X1, X31
	0x032B5528 BL 0x1C16DEC
	0x032B552C STP X30, X21, [X31 - 0x20]!
	0x032B5530 STP X20, X19, [X31 + 0x10]
	0x032B5534 LDRB W8, [X0 + 0x2C]
	0x032B5538 MOV X19, X3
	0x032B553C MOV X21, X0
	0x032B5540 MOV X20, X1
	0x032B5544 CBZ W8, 0x32B555C
	0x032B5548 LDR X0, [X21 + 0x20]
	0x032B554C CBZ X0, 0x32B55C8
	0x032B5550 LDR X8, [X0]
	0x032B5554 LDP X5, X4, [X8 + 0x1A8]
	0x032B5558 B 0x32B55A8
	0x032B555C MOV X0, X21
	0x032B5560 MOV X1, X2
	0x032B5564 BL 0x32B51D0
	0x032B5568 ADDS W31, W0, 0x1
	0x032B556C B.EQ 0x32B55BC
	0x032B5570 LDR X8, [X21 + 0x30]
	0x032B5574 CBZ X8, 0x32B55C8
	0x032B5578 LDR X9, [X8 + 0x28]
	0x032B557C CBZ X9, 0x32B55C8
	0x032B5580 LDR W8, [X9 + 0x18]
	0x032B5584 CMP W0, W8
	0x032B5588 B.CS 0x32B55CC
	0x032B558C LDR X8, [X21 + 0x20]
	0x032B5590 CBZ X8, 0x32B55C8
	0x032B5594 LDR X10, [X8]
	0x032B5598 ADD X9, X9, W0, 0x3, SXTW
	0x032B559C LDR X2, [X9 + 0x20]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X27, 0x1128000
	013 Move W8, [X27+2046]
	014 Move X25, X7
	015 Move X21, X6
	016 Move X26, X5
	017 Move X22, X4
	018 Move X23, X3
	019 Move X24, X2
	020 Move X19, X1
	021 Move X20, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {43}
	026 Move X0, 0xE70000
	027 Move X0, [X0+3968]
	028 Call 0x1C17CF4
	029 Move X0, 0xE70000
	030 Move X0, [X0+2928]
	031 Call 0x1C17CF4
	032 Move X0, 0xE70000
	033 Move X0, [X0+2528]
	034 Call 0x1C17CF4
	035 Move X0, 0xE71000
	036 Move X0, [X0+824]
	037 Call 0x1C17CF4
	038 Move X0, 0xE71000
	039 Move X0, [X0+80]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X27+2046], W8
	043 Move [X31+8], X31
	044 Move [X20+32], X19
	045 Move [X20+80], X23
	046 Move [X20+88], X22
	047 Move [X20+96], X26
	048 Compare X19, 0
	049 JumpIfEqual {209}
	050 Move X0, X19
	051 Move X1, X31
	052 Call Type.get_IsArray, X0
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {59}
	057 Move X0, X20
	058 Call WriteObjectInfo.InitNoMembers, X0
	059 Compare X25, 0
	060 JumpIfEqual {69}
	061 Move X8, [X25]
	062 Move X1, [X20+32]
	063 Add X2, X20, 128
	064 Add X3, X20, 120
	065 Move X9, [X8+376]
	066 Move X4, [X8+384]
	067 Move X0, X25
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Move [X31+8], X31
	070 Compare X24, 0
	071 JumpIfEqual {88}
	072 Move X10, 0xE70000
	073 Move X8, [X24]
	074 Move X10, [X10+2528]
	075 NotImplemented "Instruction LDRH not yet implemented."
	076 Move X1, [X10]
	077 Compare X9, 0
	078 JumpIfEqual {85}
	079 Move X10, [X8+176]
	080 Add X10, X10, 8
	081 NotImplemented "Instruction LDUR not yet implemented."
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Subtract X9, X9, 1
	084 Add X10, X10, 16
	085 Move X0, X24
	086 Move W2, W31
	087 Call 0x1C5D788
	088 Move X0, [X20+72]
	089 Compare X0, 0
	090 JumpIfNotEqual {168}
	091 Move X22, 0xE70000
	092 Move X22, [X22+3968]
	093 Move X0, [X22]
	094 Move W8, [X0+224]
	095 Compare W8, 0
	096 JumpIfNotEqual {99}
	097 Call 0x1C17DFC
	098 Move X0, [X22]
	099 Move X8, [X0+184]
	100 Move X9, [X8+192]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move W9, [X0+224]
	103 Compare W9, 0
	104 JumpIfNotEqual {108}
	105 Call 0x1C17DFC
	106 Move X8, [X22]
	107 Move X8, [X8+184]
	108 Move X0, [X8+48]
	109 Compare X0, 0
	110 JumpIfEqual {209}
	111 Move X8, [X0]
	112 Move X1, X19
	113 Move X9, [X8+680]
	114 Move X2, [X8+688]
	115 NotImplemented "Instruction BLR not yet implemented."
	116 Move TEMP, X0
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfNotEqual {188}
	120 Move X8, 0xE70000
	121 Move X8, [X8+2928]
	122 Move X0, [X8]
	123 Move W8, [X0+224]
	124 Compare W8, 0
	125 JumpIfNotEqual {127}
	126 Call 0x1C17DFC
	127 Move X0, X31
	128 Call FormatterServices.UnsafeTypeForwardersIsEnabled
	129 Move X8, 0xE71000
	130 Move X8, [X8+80]
	131 Move W22, W0
	132 Move X8, [X8]
	133 Move X0, X8
	134 Call 0x1C17F10
	135 NotImplemented "Instruction ORN not yet implemented."
	136 And W3, W8, 1
	137 Move X1, X19
	138 Move X2, X21
	139 Move X23, X0
	140 Call SerializationInfo..ctor, X0, X1, X2, X3
	141 Move [X20+48], X23
	142 Move X8, 0xE71000
	143 Move X8, [X8+824]
	144 Move X0, [X8]
	145 Call 0x1C17F10
	146 Move X1, X19
	147 Move X21, X0
	148 Call SerObjectInfoCache..ctor, X0, X1
	149 Move X2, [X20+128]
	150 Move X0, X21
	151 Move X1, X19
	152 Move [X20+56], X21
	153 Call WriteObjectInfo.CheckTypeForwardedFrom, X0, X1, X2
	154 NotImplemented "Instruction LDRSW not yet implemented."
	155 Add X8, X8, X9
	156 Add X0, X8, 312
	157 Move X8, [X0]
	158 Move X5, [X0+8]
	159 Add X4, X31, 8
	160 Move X0, X24
	161 Move X1, X19
	162 Move X2, X23
	163 Move X3, X22
	164 NotImplemented "Instruction BLR not yet implemented."
	165 Move [X20+72], X0
	166 Compare X0, 0
	167 JumpIfEqual {91}
	168 Move X8, 0xE71000
	169 Move X8, [X8+80]
	170 Move X0, [X8]
	171 Call 0x1C17F10
	172 Move X1, X19
	173 Move X2, X21
	174 Move W3, W31
	175 Move X22, X0
	176 Call SerializationInfo..ctor, X0, X1, X2, X3
	177 Move [X20+48], X22
	178 Move X8, 0xE71000
	179 Move X8, [X8+824]
	180 Move X0, [X8]
	181 Call 0x1C17F10
	182 Move X1, X19
	183 Move X21, X0
	184 Call SerObjectInfoCache..ctor, X0, X1
	185 Move [X20+56], X21
	186 Move W8, 1
	187 Move [X20+40], W8
	188 Move W8, [X20+40]
	189 Compare W8, 0
	190 JumpIfNotEqual {197}
	191 Move X0, X20
	192 Call WriteObjectInfo.InitMemberInfo, X0
	193 Move X0, [X20+56]
	194 Move X2, [X20+128]
	195 Move X1, X19
	196 Call WriteObjectInfo.CheckTypeForwardedFrom, X0, X1, X2
	197 Move X20, [X31+80]
	198 Move X19, [X31+88]
	199 Move X22, [X31+64]
	200 Move X21, [X31+72]
	201 Move X24, [X31+48]
	202 Move X23, [X31+56]
	203 Move X26, [X31+32]
	204 Move X25, [X31+40]
	205 Move X30, [X31+16]
	206 Move X27, [X31+24]
	207 Add X31, X31, 96
	208 Return 
	209 Call 0x1C17F20

Method: System.Void InitSiWrite()

Disassembly:
	0x032B4B54 MOV X26, X1
	0x032B4B58 MOV X27, X0
	0x032B4B5C BL 0x32B4900
	0x032B4B60 CBZ X0, 0x32B4BBC
	0x032B4B64 LDRB W8, [X31 + 0x78]
	0x032B4B68 LDR X9, [X31 + 0x70]
	0x032B4B6C MOV X1, X27
	0x032B4B70 MOV X2, X26
	0x032B4B74 AND W8, W8, 0x1
	0x032B4B78 MOV X3, X25
	0x032B4B7C MOV X4, X22
	0x032B4B80 MOV X5, X21
	0x032B4B84 MOV X6, X20
	0x032B4B88 MOV X7, X19
	0x032B4B8C MOV X24, X0
	0x032B4B90 STRB W8, [X31 + 0x10]
	0x032B4B94 STP X23, X9, [X31]
	0x032B4B98 BL 0x32B4BC0
	0x032B4B9C MOV X0, X24
	0x032B4BA0 LDP X20, X19, [X31 + 0x60]
	0x032B4BA4 LDP X22, X21, [X31 + 0x50]
	0x032B4BA8 LDP X24, X23, [X31 + 0x40]
	0x032B4BAC LDP X26, X25, [X31 + 0x30]
	0x032B4BB0 LDP X30, X27, [X31 + 0x20]
	0x032B4BB4 ADD X31, X31, 0x70
	0x032B4BB8 RET
	0x032B4BBC BL 0x1C16F20
	0x032B4BC0 LDRB W10, [X31 + 0x10]
	0x032B4BC4 LDP X9, X8, [X31]
	0x032B4BC8 STP X1, X7, [X0 + 0x18]
	0x032B4BCC STP X2, X3, [X0 + 0x38]
	0x032B4BD0 AND W10, W10, 0x1
	0x032B4BD4 STP X5, X6, [X0 + 0x58]
	0x032B4BD8 STP X9, X8, [X0 + 0x70]
	0x032B4BDC STRB W10, [X0 + 0x2F]
	0x032B4BE0 CBZ X2, 0x32B4BEC
	0x032B4BE4 MOVZ W8, 0x1
	0x032B4BE8 STRB W8, [X0 + 0x2D]
	0x032B4BEC CBZ X3, 0x32B4BF8
	0x032B4BF0 MOVZ W8, 0x1
	0x032B4BF4 STRB W8, [X0 + 0x2E]
	0x032B4BF8 CBZ X1, 0x32B4C0C
	0x032B4BFC MOV X2, X4
	0x032B4C00 MOV X3, X5
	0x032B4C04 MOV X4, X6
	0x032B4C08 B 0x32B498C
	0x032B4C0C RET
	0x032B4C10 STP X30, X21, [X31 - 0x20]!
	0x032B4C14 STP X20, X19, [X31 + 0x10]
	0x032B4C18 ADRP X20, 0x1128000
	0x032B4C1C ADRP X21, 0xE71000
	0x032B4C20 LDRB W8, [X20 + 0x807]
	0x032B4C24 LDR X21, [X21 + 0x338]
	0x032B4C28 MOV X19, X0
	0x032B4C2C TBNZ X8, 0x0, 0x32B4C44
	0x032B4C30 ADRP X0, 0xE71000
	0x032B4C34 LDR X0, [X0 + 0x338]
	0x032B4C38 BL 0x1C16CF4
	0x032B4C3C MOVZ W8, 0x1
	0x032B4C40 STRB W8, [X20 + 0x807]
	0x032B4C44 LDR X0, [X21]
	0x032B4C48 LDR X20, [X19 + 0x18]
	0x032B4C4C BL 0x1C16F10
	0x032B4C50 MOV X1, X20
	0x032B4C54 MOV X21, X0
	0x032B4C58 BL 0x32B45A0
	0x032B4C5C STR X21, [X19 + 0x30]
	0x032B4C60 LDP X20, X19, [X31 + 0x10]
	0x032B4C64 LDP X30, X21, [X31], #0x20
	0x032B4C68 RET
	0x032B4C6C STR X30, [X31 - 0x20]!
	0x032B4C70 STP X20, X19, [X31 + 0x10]
	0x032B4C74 ADRP X20, 0x1128000
	0x032B4C78 LDRB W8, [X20 + 0x806]
	0x032B4C7C MOV X19, X0
	0x032B4C80 TBNZ X8, 0x0, 0x32B4CA4
	0x032B4C84 ADRP X0, 0xE71000
	0x032B4C88 LDR X0, [X0 + 0x378]
	0x032B4C8C BL 0x1C16CF4
	0x032B4C90 ADRP X0, 0xE49000
	0x032B4C94 LDR X0, [X0 + 0x920]
	0x032B4C98 BL 0x1C16CF4
	0x032B4C9C MOVZ W8, 0x1
	0x032B4CA0 STRB W8, [X20 + 0x806]
	0x032B4CA4 LDR X8, [X19 + 0x68]
	0x032B4CA8 CBZ X8, 0x32B4CD8
	0x032B4CAC ADRP X8, 0xE49000
	0x032B4CB0 LDR X8, [X8 + 0x920]
	0x032B4CB4 ADRP X20, 0xE71000
	0x032B4CB8 LDR X0, [X8]
	0x032B4CBC LDR X20, [X20 + 0x378]
	0x032B4CC0 BL 0x1C16F10
	0x032B4CC4 LDR X2, [X20]
	0x032B4CC8 MOVZ W1, 0x14
	0x032B4CCC MOV X20, X0
	0x032B4CD0 BL 0x301B830
	0x032B4CD4 STR X20, [X19 + 0x68]
	0x032B4CD8 LDP X20, X19, [X31 + 0x10]
	0x032B4CDC LDR X30, [X31], #0x20
	0x032B4CE0 RET
	0x032B4CE4 STP X30, X23, [X31 - 0x30]!
	0x032B4CE8 STP X22, X21, [X31 + 0x10]
	0x032B4CEC STP X20, X19, [X31 + 0x20]
	0x032B4CF0 ADRP X21, 0x1128000
	0x032B4CF4 ADRP X20, 0xE71000
	0x032B4CF8 ADRP X22, 0xE70000
	0x032B4CFC LDRB W8, [X21 + 0x808]
	0x032B4D00 LDR X20, [X20 + 0x338]
	0x032B4D04 LDR X22, [X22 + 0xB70]
	0x032B4D08 MOV X19, X0
	0x032B4D0C TBNZ X8, 0x0, 0x32B4D48
	0x032B4D10 ADRP X0, 0xE70000
	0x032B4D14 LDR X0, [X0 + 0xB70]
	0x032B4D18 BL 0x1C16CF4
	0x032B4D1C ADRP X0, 0xE71000
	0x032B4D20 LDR X0, [X0 + 0x338]
	0x032B4D24 BL 0x1C16CF4
	0x032B4D28 ADRP X0, 0xE3F000
	0x032B4D2C LDR X0, [X0 + 0xAC8]
	0x032B4D30 BL 0x1C16CF4
	0x032B4D34 ADRP X0, 0xE47000
	0x032B4D38 LDR X0, [X0 + 0xC60]
	0x032B4D3C BL 0x1C16CF4
	0x032B4D40 MOVZ W8, 0x1
	0x032B4D44 STRB W8, [X21 + 0x808]
	0x032B4D48 LDR X0, [X20]
	0x032B4D4C LDR X21, [X19 + 0x18]
	0x032B4D50 BL 0x1C16F10
	0x032B4D54 MOV X1, X21
	0x032B4D58 MOV X20, X0
	0x032B4D5C BL 0x32B45A0
	0x032B4D60 STR X20, [X19 + 0x30]
	0x032B4D64 LDR X0, [X22]
	0x032B4D68 LDR X23, [X19 + 0x18]
	0x032B4D6C LDP X22, X21, [X19 + 0x58]
	0x032B4D70 LDR W8, [X0 + 0xE0]
	0x032B4D74 CBNZ W8, 0x32B4D7C
	0x032B4D78 BL 0x1C16DFC
	0x032B4D7C MOV X0, X23
	0x032B4D80 MOV X1, X22
	0x032B4D84 MOV X2, X21
	0x032B4D88 MOV X3, X31
	0x032B4D8C BL 0x32A15D4
	0x032B4D90 CBZ X20, 0x32B4EC4
	0x032B4D94 STR X0, [X20 + 0x28]
	0x032B4D98 LDR X20, [X19 + 0x30]
	0x032B4D9C CBZ X20, 0x32B4EC4
	0x032B4DA0 LDR X8, [X20 + 0x28]
	0x032B4DA4 CBZ X8, 0x32B4EC4
	0x032B4DA8 LDR W1, [X8 + 0x18]
	0x032B4DAC ADRP X8, 0xE3F000
	0x032B4DB0 LDR X8, [X8 + 0xAC8]
	0x032B4DB4 ADRP X21, 0xE47000
	0x032B4DB8 STR W1, [X19 + 0x28]
	0x032B4DBC LDR X0, [X8]
	0x032B4DC0 LDR X21, [X21 + 0xC60]
	0x032B4DC4 BL 0x1C16D6C
	0x032B4DC8 STR X0, [X20 + 0x30]
	0x032B4DCC LDR W1, [X19 + 0x28]
	0x032B4DD0 LDR X0, [X21]
	0x032B4DD4 LDR X20, [X19 + 0x30]
	0x032B4DD8 BL 0x1C16D6C
	0x032B4DDC CBZ X20, 0x32B4EC4
	0x032B4DE0 STR X0, [X20 + 0x38]
	0x032B4DE4 LDR W8, [X19 + 0x28]
	0x032B4DE8 CMP W8, 0x1
	0x032B4DEC B.LT 0x32B4EAC
	0x032B4DF0 MOVZ W21, 0x4
	0x032B4DF4 LDR X8, [X19 + 0x30]
	0x032B4DF8 CBZ X8, 0x32B4EC4
	0x032B4DFC LDR X9, [X8 + 0x28]
	0x032B4E00 CBZ X9, 0x32B4EC4
	0x032B4E04 LDR W10, [X9 + 0x18]
	0x032B4E08 SUB X22, X21, 0x4
	0x032B4E0C CMP W22, W10
	0x032B4E10 B.CS 0x32B4EC8
	0x032B4E14 LDR X0, [X9, X21, LSL #3]
	0x032B4E18 CBZ X0, 0x32B4EC4
	0x032B4E1C LDR X9, [X0]
	0x032B4E20 LDR X20, [X8 + 0x30]
	0x032B4E24 LDP X8, X1, [X9 + 0x1A8]
	0x032B4E28 BLR X8

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x1129000
	011 Move W8, [X20+2047]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0xE6C000
	018 Move X0, [X0+208]
	019 Call 0x1C17CF4
	020 Move X0, 0xE40000
	021 Move X0, [X0+2512]
	022 Call 0x1C17CF4
	023 Move X0, 0xE72000
	024 Move X0, [X0+824]
	025 Call 0x1C17CF4
	026 Move X0, 0xE40000
	027 Move X0, [X0+2760]
	028 Call 0x1C17CF4
	029 Move X0, 0xE48000
	030 Move X0, [X0+3168]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+2047], W8
	034 Move X0, [X19+48]
	035 Move W8, 1
	036 Move [X19+40], W8
	037 Compare X0, 0
	038 JumpIfEqual {213}
	039 Call SerializationInfo.GetEnumerator, X0
	040 Move X8, [X19+48]
	041 Compare X8, 0
	042 JumpIfEqual {213}
	043 Move W20, [X8+48]
	044 Move W9, [X8+88]
	045 Move X22, [X8+72]
	046 Compare W9, 0
	047 JumpIfEqual {53}
	048 Move W9, [X8+89]
	049 Move X23, [X8+64]
	050 Compare W9, 0
	051 JumpIfEqual {75}
	052 Move W24, W31
	053 Move X9, 0xE6C000
	054 Move X9, [X9+208]
	055 Move X21, [X8+80]
	056 Move X0, [X9]
	057 Move W9, [X0+224]
	058 Compare W9, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move X0, X21
	062 Call BinaryFormatter.GetTypeInformation, X0
	063 Compare X0, 0
	064 JumpIfEqual {213}
	065 Move X8, [X19+48]
	066 Compare X8, 0
	067 JumpIfEqual {213}
	068 Move W9, [X0+32]
	069 Move W8, [X8+89]
	070 Move X23, [X0+16]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 NotImplemented "Instruction CSET not yet implemented."
	073 Compare W8, 0
	074 JumpIfNotEqual {91}
	075 Move X9, 0xE6C000
	076 Move X9, [X9+208]
	077 Move X21, [X8+80]
	078 Move X0, [X9]
	079 Move W9, [X0+224]
	080 Compare W9, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17DFC
	083 Move X0, X21
	084 Call BinaryFormatter.GetTypeInformation, X0
	085 Compare X0, 0
	086 JumpIfEqual {213}
	087 Move W8, [X0+32]
	088 Move X22, [X0+24]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 NotImplemented "Instruction CSET not yet implemented."
	091 Move X8, 0xE72000
	092 Move X8, [X8+824]
	093 Move X25, 0xE40000
	094 Move X26, 0xE48000
	095 Move X0, [X8]
	096 Move X25, [X25+2760]
	097 Move X26, [X26+3168]
	098 Call 0x1C17F10
	099 Move X1, X31
	100 Move X21, X0
	101 Call Object..ctor, X0
	102 Move [X21+16], X23
	103 Move [X21+24], X22
	104 Move [X21+32], W24
	105 Move [X19+56], X21
	106 Move X0, [X25]
	107 Move W1, W20
	108 Call 0x1C17D6C
	109 Move [X21+48], X0
	110 Move X0, [X26]
	111 Move X21, [X19+56]
	112 Move W1, W20
	113 Call 0x1C17D6C
	114 Compare X21, 0
	115 JumpIfEqual {213}
	116 Move X8, 0xE40000
	117 Move X8, [X8+2512]
	118 Move [X21+56], X0
	119 Move W1, W20
	120 Move X0, [X8]
	121 Call 0x1C17D6C
	122 Move X8, [X19+48]
	123 Move [X19+64], X0
	124 Compare X8, 0
	125 JumpIfEqual {213}
	126 Move X0, X8
	127 Call SerializationInfo.GetEnumerator, X0
	128 Compare X0, 0
	129 JumpIfEqual {213}
	130 Move X1, X31
	131 Move X20, X0
	132 Call SerializationInfoEnumerator.MoveNext, X0
	133 Move TEMP, X0
	134 And TEMP, TEMP, 1
	135 Compare TEMP, 1
	136 JumpIfNotEqual {201}
	137 Move W22, W31
	138 Move X8, [X19+56]
	139 Compare X8, 0
	140 JumpIfEqual {213}
	141 Move X21, [X8+48]
	142 Move X0, X20
	143 Move X1, X31
	144 Call SerializationInfoEnumerator.get_Name, X0
	145 Compare X21, 0
	146 JumpIfEqual {213}
	147 Move W8, [X21+24]
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Move X23, W22
	150 Add X8, X21, X23
	151 Move [X8+32], X0
	152 Move X8, [X19+56]
	153 Compare X8, 0
	154 JumpIfEqual {213}
	155 Move X24, [X8+56]
	156 Move X0, X20
	157 Move X1, X31
	158 Call SerializationInfoEnumerator.get_ObjectType, X0
	159 Compare X24, 0
	160 JumpIfEqual {213}
	161 Move X21, X0
	162 Compare X0, 0
	163 JumpIfEqual {170}
	164 Move X8, [X24]
	165 Move X0, X21
	166 Move X1, [X8+64]
	167 Call 0x1C17E00
	168 Compare X0, 0
	169 JumpIfEqual {215}
	170 Move W8, [X24+24]
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Add X8, X24, X23
	173 Move [X8+32], X21
	174 Move X24, [X19+64]
	175 Move X0, X20
	176 Move X1, X31
	177 Call SerializationInfoEnumerator.get_Value, X0
	178 Compare X24, 0
	179 JumpIfEqual {213}
	180 Move X21, X0
	181 Compare X0, 0
	182 JumpIfEqual {189}
	183 Move X8, [X24]
	184 Move X0, X21
	185 Move X1, [X8+64]
	186 Call 0x1C17E00
	187 Compare X0, 0
	188 JumpIfEqual {215}
	189 Move W8, [X24+24]
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Add X8, X24, X23
	192 Move X0, X20
	193 Move X1, X31
	194 Add W22, W22, 1
	195 Move [X8+32], X21
	196 Call SerializationInfoEnumerator.MoveNext, X0
	197 Move TEMP, X0
	198 And TEMP, TEMP, 1
	199 Compare TEMP, 1
	200 JumpIfEqual {138}
	201 Move W8, 1
	202 NotImplemented "Instruction STURH not yet implemented."
	203 Move X20, [X31+64]
	204 Move X19, [X31+72]
	205 Move X22, [X31+48]
	206 Move X21, [X31+56]
	207 Move X24, [X31+32]
	208 Move X23, [X31+40]
	209 Move X26, [X31+16]
	210 Move X25, [X31+24]
	211 Move X30, [X31+80]
	212 Return 
	213 Call 0x1C17F20
	214 Call 0x1C17F28
	215 Call 0x1C17F44
	216 Move X1, X31
	217 Call 0x1C17DEC

Method: System.Void CheckTypeForwardedFrom(System.Runtime.Serialization.Formatters.Binary.SerObjectInfoCache cache, System.Type objectType, System.String binderAssemblyString)

Disassembly:
	0x032B4E2C CBZ X20, 0x32B4EC4
	0x032B4E30 LDR W8, [X20 + 0x18]
	0x032B4E34 CMP W22, W8
	0x032B4E38 B.CS 0x32B4EC8
	0x032B4E3C STR X0, [X20, X21, LSL #3]
	0x032B4E40 LDR X8, [X19 + 0x30]
	0x032B4E44 CBZ X8, 0x32B4EC4
	0x032B4E48 LDR X9, [X8 + 0x28]
	0x032B4E4C CBZ X9, 0x32B4EC4
	0x032B4E50 LDR W10, [X9 + 0x18]
	0x032B4E54 CMP W22, W10
	0x032B4E58 B.CS 0x32B4EC8
	0x032B4E5C LDR X1, [X9, X21, LSL #3]
	0x032B4E60 LDR X23, [X8 + 0x38]
	0x032B4E64 BL 0x32B4ED8
	0x032B4E68 CBZ X23, 0x32B4EC4
	0x032B4E6C MOV X20, X0
	0x032B4E70 CBZ X0, 0x32B4E88
	0x032B4E74 LDR X8, [X23]
	0x032B4E78 MOV X0, X20
	0x032B4E7C LDR X1, [X8 + 0x40]
	0x032B4E80 BL 0x1C16E00
	0x032B4E84 CBZ X0, 0x32B4ECC
	0x032B4E88 LDR W8, [X23 + 0x18]
	0x032B4E8C CMP W22, W8
	0x032B4E90 B.CS 0x32B4EC8
	0x032B4E94 STR X20, [X23, X21, LSL #3]
	0x032B4E98 LDR W8, [X19 + 0x28]
	0x032B4E9C ADD X21, X21, 0x1
	0x032B4EA0 SUB W9, W21, 0x4
	0x032B4EA4 CMP W9, W8
	0x032B4EA8 B.LT 0x32B4DF4
	0x032B4EAC MOVZ W8, 0x101
	0x032B4EB0 STURH W8, [X19 + 0x2D]
	0x032B4EB4 LDP X20, X19, [X31 + 0x20]
	0x032B4EB8 LDP X22, X21, [X31 + 0x10]
	0x032B4EBC LDP X30, X23, [X31], #0x30
	0x032B4EC0 RET
	0x032B4EC4 BL 0x1C16F20
	0x032B4EC8 BL 0x1C16F28
	0x032B4ECC BL 0x1C16F44
	0x032B4ED0 MOV X1, X31
	0x032B4ED4 BL 0x1C16DEC
	0x032B4ED8 STR X30, [X31 - 0x20]!
	0x032B4EDC STP X20, X19, [X31 + 0x10]
	0x032B4EE0 ADRP X20, 0x1128000
	0x032B4EE4 LDRB W8, [X20 + 0x80D]
	0x032B4EE8 MOV X19, X1
	0x032B4EEC TBNZ X8, 0x0, 0x32B4F10
	0x032B4EF0 ADRP X0, 0xE68000
	0x032B4EF4 LDR X0, [X0 + 0x3A8]
	0x032B4EF8 BL 0x1C16CF4
	0x032B4EFC ADRP X0, 0xE68000
	0x032B4F00 LDR X0, [X0 + 0x3F0]
	0x032B4F04 BL 0x1C16CF4
	0x032B4F08 MOVZ W8, 0x1
	0x032B4F0C STRB W8, [X20 + 0x80D]
	0x032B4F10 CBZ X19, 0x32B4F98
	0x032B4F14 ADRP X9, 0xE68000
	0x032B4F18 LDR X9, [X9 + 0x3A8]
	0x032B4F1C LDR X8, [X19]
	0x032B4F20 LDR X10, [X9]
	0x032B4F24 LDRB W9, [X8 + 0x130]
	0x032B4F28 LDRB W11, [X10 + 0x130]
	0x032B4F2C CMP W9, W11
	0x032B4F30 B.CC 0x32B4F48
	0x032B4F34 LDR X12, [X8 + 0xC8]
	0x032B4F38 ADD X11, X12, X11, 0x3, LSL
	0x032B4F3C LDUR X11, [X11 - 0x8]
	0x032B4F40 CMP X11, X10
	0x032B4F44 B.EQ 0x32B4F8C
	0x032B4F48 ADRP X10, 0xE68000
	0x032B4F4C LDR X10, [X10 + 0x3F0]
	0x032B4F50 LDR X10, [X10]
	0x032B4F54 LDRB W11, [X10 + 0x130]
	0x032B4F58 CMP W9, W11
	0x032B4F5C B.CC 0x32B4F98
	0x032B4F60 LDR X9, [X8 + 0xC8]
	0x032B4F64 ADD X9, X9, X11, 0x3, LSL
	0x032B4F68 LDUR X9, [X9 - 0x8]
	0x032B4F6C CMP X9, X10
	0x032B4F70 B.NE 0x32B4F98
	0x032B4F74 LDR X2, [X8 + 0x248]
	0x032B4F78 LDR X1, [X8 + 0x250]
	0x032B4F7C MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1129000
	007 Move W8, [X22+2048]
	008 Move X21, X2
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xE71000
	016 Move X0, [X0+2928]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2048], W8
	020 Compare X20, 0
	021 JumpIfEqual {73}
	022 Compare X21, 0
	023 JumpIfNotEqual {67}
	024 Move W8, [X20+32]
	025 Compare W8, 0
	026 JumpIfEqual {67}
	027 Move X8, 0xE71000
	028 Move X8, [X8+2928]
	029 Move X0, [X8]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X31
	035 Call FormatterServices.UnsafeTypeForwardersIsEnabled
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {67}
	040 Compare X19, 0
	041 JumpIfEqual {73}
	042 Move X8, [X19]
	043 Move X0, X19
	044 Move X9, [X8+760]
	045 Move X1, [X8+768]
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Compare X0, 0
	048 JumpIfEqual {73}
	049 Move X8, [X0]
	050 Move X21, X0
	051 Move X9, [X8+440]
	052 Move X1, [X8+448]
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move X1, [X20+24]
	055 Call SerializationInfo.IsAssemblyNameAssignmentSafe, X0, X1
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {67}
	060 Move X0, X21
	061 Move X1, X31
	062 Call Assembly.get_IsFullyTrusted, X0
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {74}
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X22, [X31+16]
	070 Move X21, [X31+24]
	071 Move X30, [X31+48]
	072 Return 
	073 Call 0x1C17F20
	074 Move X0, 0xE40000
	075 Move X0, [X0+2512]
	076 Call 0x1C17D08
	077 Move W1, 1
	078 Call 0x1C17D6C
	079 Move X20, X0
	080 Call 0x19913C0
	081 Move X0, X20
	082 Move X1, X19
	083 Call 0x19990B4
	084 Move X0, X20
	085 Move X1, X31
	086 Move X2, X19
	087 Call 0x1994444
	088 Move X0, 0xE72000
	089 Move X0, [X0+832]
	090 Call 0x1C17D08
	091 Move X1, X20
	092 Move X2, X31
	093 Call Environment.GetResourceString, X0, X1
	094 Move X19, X0
	095 Move X0, 0xE6E000
	096 Move X0, [X0+1680]
	097 Call 0x1C17D08
	098 Call 0x1C17F10
	099 Move X1, X19
	100 Move X2, X31
	101 Move X20, X0
	102 Call SecurityException..ctor, X0, X1
	103 Move X0, 0xE72000
	104 Move X0, [X0+840]
	105 Call 0x1C17D08
	106 Move X1, X0
	107 Move X0, X20
	108 Call 0x1C17DEC

Method: System.Void InitNoMembers()

Disassembly:
	0x032B4A4C LDR X0, [X19 + 0x50]
	0x032B4A50 CBNZ X0, 0x32B4AE8
	0x032B4A54 B 0x32B4A88
	0x032B4A58 LDRSW X9, [X10]
	0x032B4A5C ADD X8, X8, X9, 0x4, LSL
	0x032B4A60 ADD X0, X8, 0x138
	0x032B4A64 LDP X8, X5, [X0]
	0x032B4A68 ADD X4, X31, 0x8
	0x032B4A6C MOV X0, X23
	0x032B4A70 MOV X1, X20
	0x032B4A74 MOV X2, X22
	0x032B4A78 MOV X3, X21
	0x032B4A7C BLR X8
	0x032B4A80 STR X0, [X19 + 0x50]
	0x032B4A84 CBNZ X0, 0x32B4AE8
	0x032B4A88 ADRP X21, 0xE70000
	0x032B4A8C LDR X21, [X21 + 0xF80]
	0x032B4A90 LDR X0, [X21]
	0x032B4A94 LDR W8, [X0 + 0xE0]
	0x032B4A98 CBNZ W8, 0x32B4AA4
	0x032B4A9C BL 0x1C16DFC
	0x032B4AA0 LDR X0, [X21]
	0x032B4AA4 LDR X8, [X0 + 0xB8]
	0x032B4AA8 LDR X9, [X8 + 0xC0]
	0x032B4AAC CMP X20, X9
	0x032B4AB0 B.EQ 0x32B4AF0
	0x032B4AB4 LDR W9, [X0 + 0xE0]
	0x032B4AB8 CBNZ W9, 0x32B4AC8
	0x032B4ABC BL 0x1C16DFC
	0x032B4AC0 LDR X8, [X21]
	0x032B4AC4 LDR X8, [X8 + 0xB8]
	0x032B4AC8 LDR X0, [X8 + 0x30]
	0x032B4ACC CBZ X0, 0x32B4B20
	0x032B4AD0 LDR X8, [X0]
	0x032B4AD4 MOV X1, X20
	0x032B4AD8 LDR X9, [X8 + 0x2A8]
	0x032B4ADC LDR X2, [X8 + 0x2B0]
	0x032B4AE0 BLR X9
	0x032B4AE4 TBZ X0, 0x0, 0x32B4AF0
	0x032B4AE8 MOVZ W8, 0x1
	0x032B4AEC STRB W8, [X19 + 0x2C]
	0x032B4AF0 LDRB W8, [X19 + 0x2C]
	0x032B4AF4 CBZ W8, 0x32B4B04
	0x032B4AF8 MOV X0, X19
	0x032B4AFC BL 0x32B4C6C
	0x032B4B00 B 0x32B4B0C
	0x032B4B04 MOV X0, X19
	0x032B4B08 BL 0x32B4CE4
	0x032B4B0C LDP X20, X19, [X31 + 0x30]
	0x032B4B10 LDP X22, X21, [X31 + 0x20]
	0x032B4B14 LDP X24, X23, [X31 + 0x10]
	0x032B4B18 LDR X30, [X31], #0x40
	0x032B4B1C RET
	0x032B4B20 BL 0x1C16F20
	0x032B4B24 SUB X31, X31, 0x70
	0x032B4B28 STP X30, X27, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1129000
	006 Move W8, [X20+2049]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xE72000
	013 Move X0, [X0+824]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2049], W8
	017 Move X8, [X19+96]
	018 Compare X8, 0
	019 JumpIfEqual {67}
	020 Move X0, [X8+16]
	021 Compare X0, 0
	022 JumpIfEqual {67}
	023 Move X8, [X0]
	024 Move X1, [X19+32]
	025 Move X20, 0xE72000
	026 Move X9, [X8+728]
	027 Move X2, [X8+736]
	028 Move X20, [X20+824]
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Move X1, [X20]
	031 Compare X0, 0
	032 JumpIfEqual {43}
	033 Move X8, [X0]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move [X19+56], X0
	036 Move X8, [X0]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Return 
	043 Move X21, [X19+32]
	044 Move X0, X1
	045 Move [X19+56], X31
	046 Call 0x1C17F10
	047 Move X1, X21
	048 Move X20, X0
	049 Call SerObjectInfoCache..ctor, X0, X1
	050 Move X8, [X19+96]
	051 Move [X19+56], X20
	052 Compare X8, 0
	053 JumpIfEqual {67}
	054 Move X0, [X8+16]
	055 Compare X0, 0
	056 JumpIfEqual {67}
	057 Move X8, [X0]
	058 Move X1, [X19+32]
	059 Move X2, X20
	060 Move X20, [X31+16]
	061 Move X19, [X31+24]
	062 Move X4, [X8+632]
	063 Move X3, [X8+640]
	064 Move X30, [X31+32]
	065 Move X21, [X31+40]
	066 CallNoReturn X4
	067 Call 0x1C17F20
	068 Call 0x1C181E0

Method: System.Void InitMemberInfo()

Disassembly:
	0x032B4F80 LDP X20, X19, [X31 + 0x10]
	0x032B4F84 LDR X30, [X31], #0x20
	0x032B4F88 BR X2
	0x032B4F8C LDR X2, [X8 + 0x258]
	0x032B4F90 LDR X1, [X8 + 0x260]
	0x032B4F94 B 0x32B4F7C
	0x032B4F98 ADRP X0, 0xE3F000
	0x032B4F9C LDR X0, [X0 + 0x9D0]
	0x032B4FA0 BL 0x1C16D08
	0x032B4FA4 MOVZ W1, 0x1
	0x032B4FA8 BL 0x1C16D6C
	0x032B4FAC MOV X20, X0
	0x032B4FB0 MOV X0, X19
	0x032B4FB4 BL 0x19903C0
	0x032B4FB8 MOV X0, X19
	0x032B4FBC MOV X1, X31
	0x032B4FC0 BL 0x33BE520
	0x032B4FC4 MOV X19, X0
	0x032B4FC8 MOV X0, X20
	0x032B4FCC BL 0x19903C0
	0x032B4FD0 MOV X0, X20
	0x032B4FD4 MOV X1, X19
	0x032B4FD8 BL 0x19980B4
	0x032B4FDC MOV X0, X20
	0x032B4FE0 MOV X1, X31
	0x032B4FE4 MOV X2, X19
	0x032B4FE8 BL 0x1993444
	0x032B4FEC ADRP X0, 0xE71000
	0x032B4FF0 LDR X0, [X0 + 0x350]
	0x032B4FF4 BL 0x1C16D08
	0x032B4FF8 MOV X1, X20
	0x032B4FFC MOV X2, X31
	0x032B5000 BL 0x33BFB40
	0x032B5004 MOV X19, X0
	0x032B5008 ADRP X0, 0xE68000
	0x032B500C LDR X0, [X0 + 0x2E0]
	0x032B5010 BL 0x1C16D08
	0x032B5014 BL 0x1C16F10
	0x032B5018 MOV X1, X19
	0x032B501C MOV X2, X31
	0x032B5020 MOV X20, X0
	0x032B5024 BL 0x329F100
	0x032B5028 ADRP X0, 0xE70000
	0x032B502C LDR X0, [X0 + 0x380]
	0x032B5030 BL 0x1C16D08
	0x032B5034 MOV X1, X0
	0x032B5038 MOV X0, X20
	0x032B503C BL 0x1C16DEC
	0x032B5040 STR X30, [X31 - 0x30]!
	0x032B5044 STP X22, X21, [X31 + 0x10]
	0x032B5048 STP X20, X19, [X31 + 0x20]
	0x032B504C LDR X8, [X0 + 0x30]
	0x032B5050 CBZ X8, 0x32B50B4
	0x032B5054 LDRB W9, [X0 + 0x2C]
	0x032B5058 MOV X20, X0
	0x032B505C MOV X19, X1
	0x032B5060 CBNZ W9, 0x32B50CC
	0x032B5064 LDR X8, [X8 + 0x28]
	0x032B5068 CBZ X8, 0x32B50F4
	0x032B506C MOV X0, X20
	0x032B5070 MOV X1, X19
	0x032B5074 BL 0x32B51D0
	0x032B5078 ADDS W31, W0, 0x1
	0x032B507C B.EQ 0x32B50B4
	0x032B5080 LDR X8, [X20 + 0x30]
	0x032B5084 CBZ X8, 0x32B50C8
	0x032B5088 LDR X21, [X8 + 0x28]
	0x032B508C MOV X0, X20
	0x032B5090 MOV X1, X19
	0x032B5094 BL 0x32B51D0
	0x032B5098 CBZ X21, 0x32B50C8
	0x032B509C LDR W8, [X21 + 0x18]
	0x032B50A0 CMP W0, W8
	0x032B50A4 B.CS 0x32B51CC
	0x032B50A8 ADD X8, X21, W0, 0x3, SXTW
	0x032B50AC LDR X0, [X8 + 0x20]
	0x032B50B0 B 0x32B50B8
	0x032B50B4 MOV X0, X31
	0x032B50B8 LDP X20, X19, [X31 + 0x20]
	0x032B50BC LDP X22, X21, [X31 + 0x10]
	0x032B50C0 LDR X30, [X31], #0x30
	0x032B50C4 RET
	0x032B50C8 BL 0x1C16F20
	0x032B50CC ADRP X0, 0xE3E000
	0x032B50D0 LDR X0, [X0 + 0x9D0]
	0x032B50D4 BL 0x1C16D08
	0x032B50D8 MOVZ W1, 0x1
	0x032B50DC BL 0x1C16D6C
	0x032B50E0 LDR X22, [X20 + 0x18]
	0x032B50E4 MOV X20, X0
	0x032B50E8 ADRP X0, 0xE70000
	0x032B50EC LDR X0, [X0 + 0x388]
	0x032B50F0 B 0x32B5118
	0x032B50F4 ADRP X0, 0xE3E000
	0x032B50F8 LDR X0, [X0 + 0x9D0]
	0x032B50FC BL 0x1C16D08
	0x032B5100 MOVZ W1, 0x1
	0x032B5104 BL 0x1C16D6C
	0x032B5108 LDR X22, [X20 + 0x18]
	0x032B510C MOV X20, X0
	0x032B5110 ADRP X0, 0xE70000
	0x032B5114 LDR X0, [X0 + 0x390]
	0x032B5118 BL 0x1C16D08
	0x032B511C MOV X21, X0
	0x032B5120 CBZ X22, 0x32B5138
	0x032B5124 LDR X8, [X22]
	0x032B5128 MOV X0, X22
	0x032B512C LDP X9, X1, [X8 + 0x168]
	0x032B5130 BLR X9
	0x032B5134 MOV X22, X0
	0x032B5138 ADRP X0, 0xE3E000
	0x032B513C LDR X0, [X0 + 0xDD8]
	0x032B5140 BL 0x1C16D08
	0x032B5144 MOV X1, X0
	0x032B5148 MOV X0, X22
	0x032B514C MOV X2, X19
	0x032B5150 MOV X3, X31
	0x032B5154 BL 0x32274B8
	0x032B5158 MOV X19, X0
	0x032B515C MOV X0, X20
	0x032B5160 BL 0x19903C0
	0x032B5164 MOV X0, X20
	0x032B5168 MOV X1, X19
	0x032B516C BL 0x19980B4
	0x032B5170 MOV X0, X20
	0x032B5174 MOV X1, X31
	0x032B5178 MOV X2, X19
	0x032B517C BL 0x1993444
	0x032B5180 MOV X0, X21
	0x032B5184 MOV X1, X20
	0x032B5188 MOV X2, X31
	0x032B518C BL 0x33BFB40
	0x032B5190 MOV X19, X0
	0x032B5194 ADRP X0, 0xE68000
	0x032B5198 LDR X0, [X0 + 0x2E0]
	0x032B519C BL 0x1C16D08
	0x032B51A0 BL 0x1C16F10
	0x032B51A4 MOV X1, X19
	0x032B51A8 MOV X2, X31
	0x032B51AC MOV X20, X0
	0x032B51B0 BL 0x329F100
	0x032B51B4 ADRP X0, 0xE70000
	0x032B51B8 LDR X0, [X0 + 0x398]
	0x032B51BC BL 0x1C16D08
	0x032B51C0 MOV X1, X0
	0x032B51C4 MOV X0, X20
	0x032B51C8 BL 0x1C16DEC
	0x032B51CC BL 0x1C16F28
	0x032B51D0 STR X30, [X31 - 0x30]!
	0x032B51D4 STP X22, X21, [X31 + 0x10]
	0x032B51D8 STP X20, X19, [X31 + 0x20]
	0x032B51DC LDR X8, [X0 + 0x30]
	0x032B51E0 CBZ X8, 0x32B52E0
	0x032B51E4 LDR X9, [X8 + 0x30]
	0x032B51E8 CBZ X9, 0x32B52D8
	0x032B51EC MOV X22, X0
	0x032B51F0 LDR X11, [X9 + 0x18]
	0x032B51F4 LDRSW X10, [X22 + 0x48]!
	0x032B51F8 MOV X19, X0
	0x032B51FC MOV X20, X1
	0x032B5200 CBZ X11, 0x32B5244
	0x032B5204 CMP W10, W11
	0x032B5208 B.CS 0x32B5300
	0x032B520C ADD X8, X9, X10, 0x3, LSL
	0x032B5210 LDR X0, [X8 + 0x20]
	0x032B5214 CBZ X0, 0x32B52D8
	0x032B5218 MOV X1, X20
	0x032B521C MOV X2, X31
	0x032B5220 BL 0x322693C
	0x032B5224 TBNZ X0, 0x0, 0x32B5280
	0x032B5228 MOV X22, X19
	0x032B522C LDR W9, [X22 + 0x48]!
	0x032B5230 LDUR X8, [X22 - 0x18]
	0x032B5234 ADD W9, W9, 0x1
	0x032B5238 STR W9, [X22]
	0x032B523C CBNZ X8, 0x32B524C

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x1129000
	011 Move W8, [X20+2050]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0xE71000
	018 Move X0, [X0+2928]
	019 Call 0x1C17CF4
	020 Move X0, 0xE72000
	021 Move X0, [X0+824]
	022 Call 0x1C17CF4
	023 Move X0, 0xE40000
	024 Move X0, [X0+2760]
	025 Call 0x1C17CF4
	026 Move X0, 0xE48000
	027 Move X0, [X0+3168]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+2050], W8
	031 Move X8, [X19+96]
	032 Compare X8, 0
	033 JumpIfEqual {199}
	034 Move X0, [X8+16]
	035 Compare X0, 0
	036 JumpIfEqual {199}
	037 Move X8, [X0]
	038 Move X1, [X19+32]
	039 Move X20, 0xE72000
	040 Move X24, 0xE71000
	041 Move X9, [X8+728]
	042 Move X2, [X8+736]
	043 Move X20, [X20+824]
	044 Move X24, [X24+2928]
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move X1, [X20]
	047 Compare X0, 0
	048 JumpIfEqual {56}
	049 Move X8, [X0]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X25, X19
	052 Move [X25+56], X0
	053 Move X8, [X0]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Call 0x1C181E0
	056 Move X25, X19
	057 Move [X25+56], X31
	058 NotImplemented "Instruction LDUR not yet implemented."
	059 Move X0, X1
	060 Call 0x1C17F10
	061 Move X1, X21
	062 Move X20, X0
	063 Call SerObjectInfoCache..ctor, X0, X1
	064 Move [X25], X20
	065 Move X0, [X24]
	066 NotImplemented "Instruction LDUR not yet implemented."
	067 Move X22, [X25+24]
	068 Move X21, [X25+32]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move X0, X23
	074 Move X1, X22
	075 Move X2, X21
	076 Move X3, X31
	077 Call FormatterServices.GetSerializableMembers, X0, X1
	078 Compare X20, 0
	079 JumpIfEqual {199}
	080 Move [X20+40], X0
	081 Move X21, [X25]
	082 Compare X21, 0
	083 JumpIfEqual {199}
	084 Move X8, [X21+40]
	085 Compare X8, 0
	086 JumpIfEqual {199}
	087 Move W20, [X8+24]
	088 Move X8, 0xE3F000
	089 Move X8, [X8+2760]
	090 Move W1, W20
	091 Move X0, [X8]
	092 Call 0x1C17D6C
	093 Move [X21+48], X0
	094 Move X8, 0xE47000
	095 Move X8, [X8+3168]
	096 Move X21, [X25]
	097 Move W1, W20
	098 Move X0, [X8]
	099 Call 0x1C17D6C
	100 Compare X21, 0
	101 JumpIfEqual {199}
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move [X21+56], X0
	104 Move W22, W31
	105 Move X8, [X25]
	106 Compare X8, 0
	107 JumpIfEqual {199}
	108 Move X9, [X8+40]
	109 Compare X9, 0
	110 JumpIfEqual {199}
	111 Move W10, [X9+24]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X23, W22
	114 Add X9, X9, X23
	115 Move X0, [X9+32]
	116 Compare X0, 0
	117 JumpIfEqual {199}
	118 Move X9, [X0]
	119 Move X21, [X8+48]
	120 Move X8, [X9+424]
	121 Move X1, [X9+432]
	122 NotImplemented "Instruction BLR not yet implemented."
	123 Compare X21, 0
	124 JumpIfEqual {199}
	125 Move W8, [X21+24]
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Add X8, X21, X23
	128 Move [X8+32], X0
	129 Move X8, [X25]
	130 Compare X8, 0
	131 JumpIfEqual {199}
	132 Move X9, [X8+40]
	133 Compare X9, 0
	134 JumpIfEqual {199}
	135 Move W10, [X9+24]
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move X26, [X8+56]
	138 Add X8, X9, X23
	139 Move X1, [X8+32]
	140 Call WriteObjectInfo.GetMemberType, X0, X1
	141 Compare X26, 0
	142 JumpIfEqual {199}
	143 Move X21, X0
	144 Compare X0, 0
	145 JumpIfEqual {152}
	146 Move X8, [X26]
	147 Move X0, X21
	148 Move X1, [X8+64]
	149 Call 0x1C17E00
	150 Compare X0, 0
	151 JumpIfEqual {201}
	152 Move W8, [X26+24]
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Add W22, W22, 1
	155 Add X8, X26, X23
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Move [X8+32], X21
	158 Move X8, [X19+96]
	159 Compare X8, 0
	160 JumpIfEqual {199}
	161 Move X0, [X8+16]
	162 Compare X0, 0
	163 JumpIfEqual {199}
	164 Move X8, [X0]
	165 Move X2, [X19+56]
	166 Move X1, [X19+32]
	167 Move X9, [X8+632]
	168 Move X3, [X8+640]
	169 NotImplemented "Instruction BLR not yet implemented."
	170 Move X20, [X19+24]
	171 Compare X20, 0
	172 JumpIfEqual {187}
	173 Move X8, [X25]
	174 Compare X8, 0
	175 JumpIfEqual {199}
	176 Move X0, [X24]
	177 Move X21, [X8+40]
	178 Move W9, [X0+224]
	179 Compare W9, 0
	180 JumpIfNotEqual {182}
	181 Call 0x1C17DFC
	182 Move X0, X20
	183 Move X1, X21
	184 Move X2, X31
	185 Call FormatterServices.GetObjectData, X0, X1
	186 Move [X19+64], X0
	187 Move W8, 257
	188 NotImplemented "Instruction STURH not yet implemented."
	189 Move X20, [X31+64]
	190 Move X19, [X31+72]
	191 Move X22, [X31+48]
	192 Move X21, [X31+56]
	193 Move X24, [X31+32]
	194 Move X23, [X31+40]
	195 Move X26, [X31+16]
	196 Move X25, [X31+24]
	197 Move X30, [X31+80]
	198 Return 
	199 Call 0x1C17F20
	200 Call 0x1C17F28
	201 Call 0x1C17F44
	202 Move X1, X31
	203 Call 0x1C17DEC

Method: System.String GetTypeFullName()

Disassembly:
	0x032AB82C BL 0x32AAA24
	0x032AB830 CBZ X19, 0x32AB8C8
	0x032AB834 MOV W21, W0
	0x032AB838 LDR X0, [X19 + 0x30]
	0x032AB83C CBZ X0, 0x32AB8C8
	0x032AB840 LDR X8, [X0]
	0x032AB844 MOV W1, W21
	0x032AB848 LDP X9, X2, [X8 + 0x1C8]
	0x032AB84C BLR X9
	0x032AB850 MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 Move X8, X0
	003 Move X0, [X0+120]
	004 Compare X0, 0
	005 JumpIfNotEqual {10}
	006 Move X8, [X8+56]
	007 Compare X8, 0
	008 JumpIfEqual {12}
	009 Move X0, [X8+16]
	010 Move X30, [X31+16]
	011 Return X0
	012 Call 0x1C17F20

Method: System.String GetAssemblyString()

Disassembly:
	0x032AB804 BL 0x1C16DFC
	0x032AB808 LDR X0, [X22]
	0x032AB80C LDR X8, [X0 + 0xB8]
	0x032AB810 LDR X8, [X8 + 0x38]
	0x032AB814 CMP X21, X8
	0x032AB818 B.EQ 0x32AB894
	0x032AB81C LDR W8, [X0 + 0xE0]
	0x032AB820 CBNZ W8, 0x32AB828
	0x032AB824 BL 0x1C16DFC
	0x032AB828 MOV X0, X21

ISIL:
	001 Move [X31-16], X30
	002 Move X8, X0
	003 Move X0, [X0+128]
	004 Compare X0, 0
	005 JumpIfNotEqual {10}
	006 Move X8, [X8+56]
	007 Compare X8, 0
	008 JumpIfEqual {12}
	009 Move X0, [X8+24]
	010 Move X30, [X31+16]
	011 Return X0
	012 Call 0x1C17F20

Method: System.Void InvokeSerializationBinder(System.Runtime.Serialization.SerializationBinder binder)

Disassembly:
	0x032B4B2C STP X26, X25, [X31 + 0x30]
	0x032B4B30 STP X24, X23, [X31 + 0x40]
	0x032B4B34 STP X22, X21, [X31 + 0x50]
	0x032B4B38 STP X20, X19, [X31 + 0x60]
	0x032B4B3C MOV X23, X7
	0x032B4B40 MOV X19, X6
	0x032B4B44 MOV X20, X5
	0x032B4B48 MOV X21, X4
	0x032B4B4C MOV X22, X3
	0x032B4B50 MOV X25, X2

ISIL:
	001 Compare X1, 0
	002 JumpIfEqual {12}
	003 Move X9, [X1]
	004 Move X8, [X0+32]
	005 Add X2, X0, 128
	006 Add X3, X0, 120
	007 Move X5, [X9+376]
	008 Move X4, [X9+384]
	009 Move X0, X1
	010 Move X1, X8
	011 CallNoReturn X5
	012 Return 

Method: System.Type GetMemberType(System.Reflection.MemberInfo objMember)

Disassembly:
	0x032B5664 RET
	0x032B5668 BL 0x1C16F20
	0x032B566C STP X30, X23, [X31 - 0x30]!
	0x032B5670 STP X22, X21, [X31 + 0x10]
	0x032B5674 STP X20, X19, [X31 + 0x20]
	0x032B5678 ADRP X20, 0x1127000
	0x032B567C ADRP X23, 0xE6E000
	0x032B5680 ADRP X22, 0xE70000
	0x032B5684 ADRP X21, 0xE70000
	0x032B5688 LDRB W8, [X20 + 0x80F]
	0x032B568C LDR X23, [X23 + 0xDB8]
	0x032B5690 LDR X22, [X22 + 0x1F8]
	0x032B5694 LDR X21, [X21 + 0x3B0]
	0x032B5698 MOV X19, X0
	0x032B569C TBNZ X8, 0x0, 0x32B56CC
	0x032B56A0 ADRP X0, 0xE6E000
	0x032B56A4 LDR X0, [X0 + 0xDB8]
	0x032B56A8 BL 0x1C16CF4
	0x032B56AC ADRP X0, 0xE70000
	0x032B56B0 LDR X0, [X0 + 0x1F8]
	0x032B56B4 BL 0x1C16CF4
	0x032B56B8 ADRP X0, 0xE70000
	0x032B56BC LDR X0, [X0 + 0x3B0]
	0x032B56C0 BL 0x1C16CF4
	0x032B56C4 MOVZ W8, 0x1
	0x032B56C8 STRB W8, [X20 + 0x80F]
	0x032B56CC LDR X0, [X23]
	0x032B56D0 BL 0x1C16F10
	0x032B56D4 MOV X1, X31
	0x032B56D8 MOV X20, X0
	0x032B56DC BL 0x335A0A0
	0x032B56E0 MOVZ W8, 0x1
	0x032B56E4 STR X20, [X19 + 0x10]
	0x032B56E8 STR W8, [X19 + 0x18]
	0x032B56EC LDR X0, [X22]
	0x032B56F0 BL 0x1C16F10
	0x032B56F4 LDR X1, [X21]
	0x032B56F8 MOV X2, X31
	0x032B56FC MOV X20, X0
	0x032B5700 BL 0x32BD738
	0x032B5704 STR X20, [X19 + 0x20]
	0x032B5708 MOV X0, X19
	0x032B570C LDP X20, X19, [X31 + 0x20]
	0x032B5710 LDP X22, X21, [X31 + 0x10]
	0x032B5714 MOV X1, X31
	0x032B5718 LDP X30, X23, [X31], #0x30
	0x032B571C B 0x33BDD8C
	0x032B5720 LDR X0, [X0 + 0x10]
	0x032B5724 RET
	0x032B5728 LDR X0, [X0 + 0x18]
	0x032B572C RET
	0x032B5730 LDRB W0, [X0 + 0x20]
	0x032B5734 RET
	0x032B5738 STR X30, [X31 - 0x20]!
	0x032B573C STP X20, X19, [X31 + 0x10]
	0x032B5740 ADRP X20, 0x1127000
	0x032B5744 LDRB W8, [X20 + 0x811]
	0x032B5748 MOV X19, X0
	0x032B574C TBNZ X8, 0x0, 0x32B5770
	0x032B5750 ADRP X0, 0xE70000
	0x032B5754 LDR X0, [X0 + 0x1F8]
	0x032B5758 BL 0x1C16CF4
	0x032B575C ADRP X0, 0xE70000
	0x032B5760 LDR X0, [X0 + 0x3B8]
	0x032B5764 BL 0x1C16CF4
	0x032B5768 MOVZ W8, 0x1
	0x032B576C STRB W8, [X20 + 0x811]
	0x032B5770 LDR X20, [X19 + 0x90]
	0x032B5774 CBNZ X20, 0x32B57A4
	0x032B5778 ADRP X8, 0xE70000
	0x032B577C LDR X8, [X8 + 0x1F8]
	0x032B5780 LDR X0, [X8]
	0x032B5784 BL 0x1C16F10
	0x032B5788 ADRP X8, 0xE70000
	0x032B578C LDR X8, [X8 + 0x3B8]
	0x032B5790 MOV X2, X31
	0x032B5794 MOV X20, X0
	0x032B5798 LDR X1, [X8]
	0x032B579C BL 0x32BD738
	0x032B57A0 STR X20, [X19 + 0x90]
	0x032B57A4 MOV X0, X20
	0x032B57A8 LDP X20, X19, [X31 + 0x10]
	0x032B57AC LDR X30, [X31], #0x20
	0x032B57B0 RET
	0x032B57B4 LDR X0, [X0 + 0x60]
	0x032B57B8 RET
	0x032B57BC LDR X8, [X0 + 0x30]
	0x032B57C0 STR X1, [X0 + 0x60]
	0x032B57C4 CBZ X8, 0x32B57CC
	0x032B57C8 STR X1, [X8 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1128000
	005 Move W8, [X20+2051]
	006 Move X19, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xE68000
	012 Move X0, [X0+936]
	013 Call 0x1C17CF4
	014 Move X0, 0xE68000
	015 Move X0, [X0+1008]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2051], W8
	019 Compare X19, 0
	020 JumpIfEqual {50}
	021 Move X9, 0xE68000
	022 Move X9, [X9+936]
	023 Move X8, [X19]
	024 Move X10, [X9]
	025 Move W9, [X8+304]
	026 Move W11, [X10+304]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X12, [X8+200]
	029 Add X11, X12, X11
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X10, 0xE68000
	033 Move X10, [X10+1008]
	034 Move X10, [X10]
	035 Move W11, [X10+304]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X9, [X8+200]
	038 Add X9, X9, X11
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X2, [X8+584]
	042 Move X1, [X8+592]
	043 Move X0, X19
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 CallNoReturn X2
	048 Move X2, [X8+600]
	049 Move X1, [X8+608]
	050 Move X0, 0xE3F000
	051 Move X0, [X0+2512]
	052 Call 0x1C17D08
	053 Move W1, 1
	054 Call 0x1C17D6C
	055 Move X20, X0
	056 Move X0, X19
	057 Call 0x19913C0
	058 Move X0, X19
	059 Move X1, X31
	060 Call "il2cpp_vm_object_is_inst", X0
	061 Move X19, X0
	062 Move X0, X20
	063 Call 0x19913C0
	064 Move X0, X20
	065 Move X1, X19
	066 Call 0x19990B4
	067 Move X0, X20
	068 Move X1, X31
	069 Move X2, X19
	070 Call 0x1994444
	071 Move X0, 0xE71000
	072 Move X0, [X0+848]
	073 Call 0x1C17D08
	074 Move X1, X20
	075 Move X2, X31
	076 Call Environment.GetResourceString, X0, X1
	077 Move X19, X0
	078 Move X0, 0xE69000
	079 Move X0, [X0+736]
	080 Call 0x1C17D08
	081 Call 0x1C17F10
	082 Move X1, X19
	083 Move X2, X31
	084 Move X20, X0
	085 Call SerializationException..ctor, X0, X1
	086 Move X0, 0xE71000
	087 Move X0, [X0+856]
	088 Call 0x1C17D08
	089 Move X1, X0
	090 Move X0, X20
	091 Call 0x1C17DEC

Method: System.Void GetMemberInfo(out System.String[] outMemberNames, out System.Type[] outMemberTypes, out System.Object[] outMemberData)

Disassembly:
	0x032B57CC RET
	0x032B57D0 SUB X31, X31, 0x60
	0x032B57D4 STP X30, X27, [X31 + 0x10]
	0x032B57D8 STP X26, X25, [X31 + 0x20]
	0x032B57DC STP X24, X23, [X31 + 0x30]
	0x032B57E0 STP X22, X21, [X31 + 0x40]
	0x032B57E4 STP X20, X19, [X31 + 0x50]
	0x032B57E8 ADRP X20, 0x1127000
	0x032B57EC LDRB W8, [X20 + 0x835]
	0x032B57F0 MOV X19, X0
	0x032B57F4 TBNZ X8, 0x0, 0x32B580C
	0x032B57F8 ADRP X0, 0xE70000
	0x032B57FC LDR X0, [X0 + 0x68]
	0x032B5800 BL 0x1C16CF4
	0x032B5804 MOVZ W8, 0x1
	0x032B5808 STRB W8, [X20 + 0x835]
	0x032B580C MOV X0, X19
	0x032B5810 BL 0x32BA964
	0x032B5814 ADRP X23, 0xE70000
	0x032B5818 LDR X23, [X23 + 0x68]
	0x032B581C ADRP X26, 0xFFFFFFFFFD8E1000
	0x032B5820 MOVZ W24, 0x5
	0x032B5824 MOVZ W25, 0x4
	0x032B5828 ADD X26, X26, 0x528
	0x032B582C LDR W8, [X19 + 0x48]
	0x032B5830 CBZ W8, 0x32B5884
	0x032B5834 SUB W8, W8, 0x1
	0x032B5838 CMP W8, 0x6
	0x032B583C B.HI 0x32B5AC4
	0x032B5840 LDR X0, [X19 + 0x68]
	0x032B5844 CBZ X0, 0x32B5B14
	0x032B5848 LDR X8, [X0]
	0x032B584C LDP X9, X1, [X8 + 0x1D8]
	0x032B5850 BLR X9
	0x032B5854 AND W1, W0, 0xFF
	0x032B5858 SUB W8, W1, 0x1
	0x032B585C MOV W20, W0
	0x032B5860 CMP W8, 0x13
	0x032B5864 B.HI 0x32B5B18
	0x032B5868 ADR X9, 0x10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+56]
	005 Compare X8, 0
	006 JumpIfEqual {26}
	007 Move X8, [X8+48]
	008 Move [X1], X8
	009 Move X8, [X0+56]
	010 Compare X8, 0
	011 JumpIfEqual {26}
	012 Move X8, [X8+56]
	013 Move [X2], X8
	014 Move X8, [X0+64]
	015 Move [X3], X8
	016 Move W8, [X0+40]
	017 Compare W8, 0
	018 JumpIfEqual {22}
	019 Move W8, [X0+41]
	020 Compare W8, 0
	021 JumpIfEqual {27}
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Return 
	026 Call 0x1C17F20
	027 Move X0, 0xE71000
	028 Move X0, [X0+864]
	029 Call 0x1C17D08
	030 Move X1, X31
	031 Call Environment.GetResourceString, X0
	032 Move X19, X0
	033 Move X0, 0xE69000
	034 Move X0, [X0+736]
	035 Call 0x1C17D08
	036 Call 0x1C17F10
	037 Move X1, X19
	038 Move X2, X31
	039 Move X20, X0
	040 Call SerializationException..ctor, X0, X1
	041 Move X0, 0xE71000
	042 Move X0, [X0+872]
	043 Call 0x1C17D08
	044 Move X1, X0
	045 Move X0, X20
	046 Call 0x1C17DEC

Method: System.Runtime.Serialization.Formatters.Binary.WriteObjectInfo GetObjectInfo(System.Runtime.Serialization.Formatters.Binary.SerObjectInfoInit serObjectInfoInit)

Disassembly:
	0x032B4490 ORN W8, W31, W22, 0x0
	0x032B4494 AND W3, W8, 0x1
	0x032B4498 MOV X1, X19
	0x032B449C MOV X2, X21
	0x032B44A0 MOV X23, X0
	0x032B44A4 BL 0x32A8324
	0x032B44A8 STR X23, [X20 + 0x30]
	0x032B44AC ADRP X8, 0xE71000
	0x032B44B0 LDR X8, [X8 + 0x338]
	0x032B44B4 LDR X0, [X8]
	0x032B44B8 BL 0x1C16F10
	0x032B44BC MOV X1, X19
	0x032B44C0 MOV X21, X0
	0x032B44C4 BL 0x32B45A0
	0x032B44C8 LDR X2, [X20 + 0x80]
	0x032B44CC MOV X0, X21
	0x032B44D0 MOV X1, X19
	0x032B44D4 STR X21, [X20 + 0x38]
	0x032B44D8 BL 0x32B3E2C
	0x032B44DC B 0x32B4558
	0x032B44E0 LDRSW X9, [X10]
	0x032B44E4 ADD X8, X8, X9, 0x4, LSL
	0x032B44E8 ADD X0, X8, 0x138
	0x032B44EC LDP X8, X5, [X0]
	0x032B44F0 ADD X4, X31, 0x8
	0x032B44F4 MOV X0, X24
	0x032B44F8 MOV X1, X19
	0x032B44FC MOV X2, X23
	0x032B4500 MOV X3, X22
	0x032B4504 BLR X8
	0x032B4508 STR X0, [X20 + 0x48]
	0x032B450C CBZ X0, 0x32B43F8
	0x032B4510 ADRP X8, 0xE71000
	0x032B4514 LDR X8, [X8 + 0x50]
	0x032B4518 LDR X0, [X8]
	0x032B451C BL 0x1C16F10
	0x032B4520 MOV X1, X19
	0x032B4524 MOV X2, X21
	0x032B4528 MOV W3, W31
	0x032B452C MOV X22, X0
	0x032B4530 BL 0x32A8324
	0x032B4534 STR X22, [X20 + 0x30]
	0x032B4538 ADRP X8, 0xE71000
	0x032B453C LDR X8, [X8 + 0x338]
	0x032B4540 LDR X0, [X8]
	0x032B4544 BL 0x1C16F10
	0x032B4548 MOV X1, X19
	0x032B454C MOV X21, X0
	0x032B4550 BL 0x32B45A0
	0x032B4554 STR X21, [X20 + 0x38]
	0x032B4558 MOVZ W8, 0x1
	0x032B455C STRB W8, [X20 + 0x28]
	0x032B4560 LDRB W8, [X20 + 0x28]
	0x032B4564 CBNZ W8, 0x32B4580
	0x032B4568 MOV X0, X20
	0x032B456C BL 0x32B3F80

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x1129000
	005 Move W8, [X19+2052]
	006 Move X20, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE72000
	012 Move X0, [X0+624]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X19+2052], W8
	016 Compare X20, 0
	017 JumpIfEqual {67}
	018 Move X0, [X20+32]
	019 Compare X0, 0
	020 JumpIfEqual {67}
	021 Move X1, X31
	022 Call SerStack.IsEmpty, X0
	023 Move TEMP, X0
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfNotEqual {40}
	027 Move X8, 0xE72000
	028 Move X8, [X8+624]
	029 Move X0, [X8]
	030 Call 0x1C17F10
	031 Move X1, X31
	032 Move X19, X0
	033 Call Object..ctor, X0
	034 Move W8, [X20+24]
	035 Add W9, W8, 1
	036 Move [X20+24], W9
	037 Compare X19, 0
	038 JumpIfEqual {67}
	039 Move [X19+16], W8
	040 Move X0, [X20+32]
	041 Compare X0, 0
	042 JumpIfEqual {67}
	043 Move X1, X31
	044 Call SerStack.Pop, X0
	045 Compare X0, 0
	046 JumpIfEqual {67}
	047 Move X8, 0xE72000
	048 Move X8, [X8+624]
	049 Move X19, X0
	050 Move X1, [X8]
	051 Move X8, [X0]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 NotImplemented "Instruction MOVI not yet implemented."
	054 Move [X19+24], X31
	055 Move [X19+32], X31
	056 Move [X19+40], W31
	057 Move [X19+56], X31
	058 Move [X19+64], X31
	059 Move [X19+48], X31
	060 Move [X19+104], V0
	061 Move [X19+120], V0
	062 Move X0, X19
	063 Move X20, [X31+16]
	064 Move X19, [X31+24]
	065 Move X30, [X31+32]
	066 Return X0
	067 Call 0x1C17F20
	068 Move X0, X19
	069 Call 0x1C181E0

Method: System.Void PutObjectInfo(System.Runtime.Serialization.Formatters.Binary.SerObjectInfoInit serObjectInfoInit, System.Runtime.Serialization.Formatters.Binary.WriteObjectInfo objectInfo)

Disassembly:
	0x032B43C0 LDR X10, [X8 + 0xB0]
	0x032B43C4 ADD X10, X10, 0x8
	0x032B43C8 LDUR X11, [X10 - 0x8]
	0x032B43CC CMP X11, X1
	0x032B43D0 B.EQ 0x32B44E0
	0x032B43D4 SUBS X9, X9, 0x1
	0x032B43D8 ADD X10, X10, 0x10
	0x032B43DC B.NE 0x32B43C8

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {11}
	004 Move X0, [X0+32]
	005 Compare X0, 0
	006 JumpIfEqual {11}
	007 Move X2, X31
	008 Move X30, [X31+16]
	009 Call SerStack.Push, X0, X1
	010 Return 
	011 Call 0x1C17F20

