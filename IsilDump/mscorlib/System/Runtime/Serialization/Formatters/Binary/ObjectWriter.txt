Type: System.Runtime.Serialization.Formatters.Binary.ObjectWriter

Method: System.Void .ctor(System.Runtime.Serialization.ISurrogateSelector selector, System.Runtime.Serialization.StreamingContext context, System.Runtime.Serialization.Formatters.Binary.InternalFE formatterEnums, System.Runtime.Serialization.SerializationBinder binder)

Disassembly:
	0x032B22DC BL 0x1C16D6C
	0x032B22E0 ADRP X8, 0xE42000
	0x032B22E4 LDR X8, [X8 + 0xE58]
	0x032B22E8 MOV X28, X0
	0x032B22EC MOV W1, W22
	0x032B22F0 LDR X8, [X8]
	0x032B22F4 MOV X0, X8
	0x032B22F8 BL 0x1C16D6C
	0x032B22FC LDR X9, [X31 + 0x48]
	0x032B2300 CMP W22, 0x1
	0x032B2304 MOV X29, X0
	0x032B2308 STR W22, [X31 + 0x34]
	0x032B230C B.LT 0x32B23EC
	0x032B2310 LDR W8, [X31 + 0x34]
	0x032B2314 MOV X23, X31
	0x032B2318 ADD X24, X20, 0x20
	0x032B231C ADD X25, X9, 0x20
	0x032B2320 MOV W8, W8
	0x032B2324 ADD X22, X27, 0x20
	0x032B2328 ADD X19, X28, 0x20
	0x032B232C ADD X26, X29, 0x20
	0x032B2330 STR X8, [X31 + 0x38]
	0x032B2334 STR X31, [X31 + 0x50]
	0x032B2338 CBZ X20, 0x32B2598
	0x032B233C LDR W8, [X20 + 0x18]
	0x032B2340 CMP X23, X8
	0x032B2344 B.CS 0x32B259C
	0x032B2348 CBZ X9, 0x32B2598
	0x032B234C LDR W8, [X9 + 0x18]
	0x032B2350 CMP X23, X8
	0x032B2354 B.CS 0x32B259C
	0x032B2358 LDR X8, [X31 + 0x40]
	0x032B235C LDR X0, [X24, X23, LSL #3]
	0x032B2360 LDR X1, [X25, X23, LSL #3]
	0x032B2364 ADD X4, X31, 0x50
	0x032B2368 LDR X3, [X8 + 0x28]
	0x032B236C ADD X5, X31, 0x5C
	0x032B2370 BL 0x32AA1A8
	0x032B2374 CBZ X27, 0x32B2598
	0x032B2378 LDR W8, [X27 + 0x18]
	0x032B237C CMP X23, X8
	0x032B2380 B.CS 0x32B259C
	0x032B2384 STR W0, [X22, X23, LSL #2]
	0x032B2388 CBZ X28, 0x32B2598
	0x032B238C MOV X21, X20
	0x032B2390 LDR X20, [X31 + 0x50]
	0x032B2394 CBZ X20, 0x32B23AC
	0x032B2398 LDR X8, [X28]
	0x032B239C MOV X0, X20
	0x032B23A0 LDR X1, [X8 + 0x40]
	0x032B23A4 BL 0x1C16E00
	0x032B23A8 CBZ X0, 0x32B25A0
	0x032B23AC LDR W8, [X28 + 0x18]
	0x032B23B0 CMP X23, X8
	0x032B23B4 B.CS 0x32B259C
	0x032B23B8 STR X20, [X19, X23, LSL #3]
	0x032B23BC CBZ X29, 0x32B2598
	0x032B23C0 LDR W8, [X29 + 0x18]
	0x032B23C4 CMP X23, X8
	0x032B23C8 B.CS 0x32B259C
	0x032B23CC LDR W8, [X31 + 0x5C]
	0x032B23D0 LDR X9, [X31 + 0x48]

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X27, 0x112B000
	013 Move X28, 0xE74000
	014 Move X25, 0xE74000
	015 Move X26, 0xE74000
	016 Move W8, [X27+2082]
	017 Move X28, [X28+504]
	018 Move X25, [X25+592]
	019 Move X26, [X26+600]
	020 Move X23, X5
	021 Move X22, X4
	022 Move X20, X3
	023 Move X21, X2
	024 Move X24, X1
	025 Move X19, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {41}
	030 Move X0, 0xE74000
	031 Move X0, [X0+504]
	032 Call 0x1C17CF4
	033 Move X0, 0xE74000
	034 Move X0, [X0+600]
	035 Call 0x1C17CF4
	036 Move X0, 0xE74000
	037 Move X0, [X0+592]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X27+2082], W8
	041 Move X0, [X28]
	042 Call 0x1C17F10
	043 Move X1, [X25]
	044 Move X2, X31
	045 Move X25, X0
	046 Call SerStack..ctor, X0, X1
	047 Move X0, X19
	048 Move X1, X31
	049 Move [X19+184], X25
	050 Call Object..ctor, X0
	051 Move W8, 1
	052 Move [X19+40], X24
	053 Move [X19+48], X21
	054 Move [X19+56], X20
	055 Move [X19+32], W8
	056 Move [X19+104], X22
	057 Move [X19+112], X23
	058 Move X0, [X26]
	059 Call 0x1C17F10
	060 Move X1, X21
	061 Move X2, X20
	062 Move X3, X31
	063 Move X22, X0
	064 Call SerializationObjectManager..ctor, X0, X1
	065 Move [X19+72], X22
	066 Move X20, [X31+80]
	067 Move X19, [X31+88]
	068 Move X22, [X31+64]
	069 Move X21, [X31+72]
	070 Move X24, [X31+48]
	071 Move X23, [X31+56]
	072 Move X26, [X31+32]
	073 Move X25, [X31+40]
	074 Move X28, [X31+16]
	075 Move X27, [X31+24]
	076 Move X30, [X31+96]
	077 Return 

Method: System.Void Serialize(System.Object graph, System.Runtime.Remoting.Messaging.Header[] inHeaders, System.Runtime.Serialization.Formatters.Binary.__BinaryWriter serWriter, System.Boolean fCheck)

Disassembly:
	0x032B2484 STP W8, W23, [X26 + 0x10]
	0x032B2488 BL 0x32AD3B8
	0x032B248C ADRP X9, 0xE73000
	0x032B2490 LDR X8, [X31 + 0x8]
	0x032B2494 LDR X9, [X9 + 0x2F0]
	0x032B2498 CBNZ X8, 0x32B2578
	0x032B249C LDR X0, [X9]
	0x032B24A0 LDR X22, [X22 + 0x20]
	0x032B24A4 BL 0x1C16F10
	0x032B24A8 MOV X1, X31
	0x032B24AC MOV X24, X0
	0x032B24B0 BL 0x33BDD8C
	0x032B24B4 STP W23, W21, [X24 + 0x10]
	0x032B24B8 STP X19, X20, [X24 + 0x18]
	0x032B24BC CBZ X22, 0x32B2598
	0x032B24C0 LDR X8, [X22]
	0x032B24C4 LDR X1, [X31 + 0x28]
	0x032B24C8 MOV X0, X22
	0x032B24CC B 0x32B2568
	0x032B24D0 ADRP X8, 0xE73000
	0x032B24D4 LDR X8, [X8 + 0x2E0]
	0x032B24D8 LDR X0, [X8]
	0x032B24DC BL 0x1C16F10
	0x032B24E0 MOV X1, X31
	0x032B24E4 MOV X26, X0
	0x032B24E8 BL 0x33BDD8C
	0x032B24EC STR X26, [X24 + 0x58]
	0x032B24F0 LDR W8, [X28 + 0x20]
	0x032B24F4 STR W8, [X31 + 0x5C]
	0x032B24F8 CBZ X26, 0x32B2598
	0x032B24FC STR W8, [X26 + 0x30]
	0x032B2500 CMP W8, 0x1
	0x032B2504 MOVZ W8, 0x2
	0x032B2508 CINC W8, W8, GE
	0x032B250C STR X19, [X26 + 0x18]
	0x032B2510 STR W22, [X26 + 0x20]
	0x032B2514 STR X21, [X26 + 0x28]
	0x032B2518 STP W8, W27, [X26 + 0x10]
	0x032B251C CBZ X26, 0x32B2598
	0x032B2520 MOV X0, X26
	0x032B2524 MOV X1, X24
	0x032B2528 MOV X23, X19
	0x032B252C BL 0x32AD100
	0x032B2530 CBNZ X25, 0x32B2578
	0x032B2534 LDR X0, [X29]
	0x032B2538 MOV W19, W22
	0x032B253C LDR X22, [X24 + 0x20]
	0x032B2540 BL 0x1C16F10
	0x032B2544 MOV X1, X31
	0x032B2548 MOV X24, X0
	0x032B254C BL 0x33BDD8C
	0x032B2550 STP W27, W19, [X24 + 0x10]
	0x032B2554 STP X21, X20, [X24 + 0x18]
	0x032B2558 CBZ X22, 0x32B2598
	0x032B255C LDR X8, [X22]
	0x032B2560 MOV X0, X22
	0x032B2564 MOV X1, X23
	0x032B2568 LDR X9, [X8 + 0x278]
	0x032B256C LDR X3, [X8 + 0x280]
	0x032B2570 MOV X2, X24
	0x032B2574 BLR X9
	0x032B2578 LDP X20, X19, [X31 + 0xB0]
	0x032B257C LDP X22, X21, [X31 + 0xA0]
	0x032B2580 LDP X24, X23, [X31 + 0x90]
	0x032B2584 LDP X26, X25, [X31 + 0x80]
	0x032B2588 LDP X28, X27, [X31 + 0x70]
	0x032B258C LDP X29, X30, [X31 + 0x60]
	0x032B2590 ADD X31, X31, 0xC0
	0x032B2594 RET
	0x032B2598 BL 0x1C16F20
	0x032B259C BL 0x1C16F28
	0x032B25A0 BL 0x1C16F44
	0x032B25A4 MOV X1, X31
	0x032B25A8 BL 0x1C16DEC
	0x032B25AC MOV X0, X25
	0x032B25B0 BL 0x1C171E0
	0x032B25B4 STR X30, [X31 - 0x20]!
	0x032B25B8 STP X20, X19, [X31 + 0x10]
	0x032B25BC ADRP X20, 0x112A000
	0x032B25C0 LDRB W8, [X20 + 0x7F9]
	0x032B25C4 MOV X19, X0
	0x032B25C8 TBNZ X8, 0x0, 0x32B25E0
	0x032B25CC ADRP X0, 0xE73000
	0x032B25D0 LDR X0, [X0 + 0x2F8]
	0x032B25D4 BL 0x1C16CF4
	0x032B25D8 MOVZ W8, 0x1
	0x032B25DC STRB W8, [X20 + 0x7F9]
	0x032B25E0 LDR W8, [X19 + 0x3C]
	0x032B25E4 CMP W8, 0x1
	0x032B25E8 B.LT 0x32B2634
	0x032B25EC LDR X20, [X19 + 0x98]
	0x032B25F0 CBNZ X20, 0x32B2618
	0x032B25F4 ADRP X8, 0xE73000
	0x032B25F8 LDR X8, [X8 + 0x2F8]
	0x032B25FC LDR X0, [X8]
	0x032B2600 BL 0x1C16F10
	0x032B2604 MOV X1, X31
	0x032B2608 MOV X20, X0
	0x032B260C BL 0x33BDD8C
	0x032B2610 STR X20, [X19 + 0x98]
	0x032B2614 CBZ X20, 0x32B2640
	0x032B2618 LDR W8, [X19 + 0x3C]
	0x032B261C STR W8, [X20 + 0x10]
	0x032B2620 CBZ X20, 0x32B2640
	0x032B2624 MOV X0, X20
	0x032B2628 MOV X1, X19
	0x032B262C BL 0x32AE080
	0x032B2630 STR W31, [X19 + 0x3C]
	0x032B2634 LDP X20, X19, [X31 + 0x10]
	0x032B2638 LDR X30, [X31], #0x20
	0x032B263C RET
	0x032B2640 BL 0x1C16F20
	0x032B2644 STR X30, [X31 - 0x50]!
	0x032B2648 STP X26, X25, [X31 + 0x10]
	0x032B264C STP X24, X23, [X31 + 0x20]
	0x032B2650 STP X22, X21, [X31 + 0x30]
	0x032B2654 STP X20, X19, [X31 + 0x40]
	0x032B2658 ADRP X23, 0x112A000
	0x032B265C LDRB W8, [X23 + 0x7FC]
	0x032B2660 MOV X19, X3
	0x032B2664 MOV X20, X2
	0x032B2668 MOV W21, W1
	0x032B266C MOV X22, X0
	0x032B2670 TBNZ X8, 0x0, 0x32B2688
	0x032B2674 ADRP X0, 0xE41000
	0x032B2678 LDR X0, [X0 + 0x6C0]
	0x032B267C BL 0x1C16CF4
	0x032B2680 MOVZ W8, 0x1
	0x032B2684 STRB W8, [X23 + 0x7FC]
	0x032B2688 LDR W8, [X22 + 0x14]
	0x032B268C CMP W8, W21
	0x032B2690 B.NE 0x32B275C
	0x032B2694 CMP W21, 0x1
	0x032B2698 B.LT 0x32B2754
	0x032B269C ADRP X26, 0xE41000
	0x032B26A0 LDR X26, [X26 + 0x6C0]
	0x032B26A4 MOV W25, W31
	0x032B26A8 LDR X8, [X22 + 0x18]
	0x032B26AC CBZ X8, 0x32B2778
	0x032B26B0 LDR W9, [X8 + 0x18]
	0x032B26B4 CMP W25, W9
	0x032B26B8 B.CS 0x32B277C
	0x032B26BC CBZ X20, 0x32B2778
	0x032B26C0 LDR W9, [X20 + 0x18]
	0x032B26C4 CMP W25, W9
	0x032B26C8 B.CS 0x32B277C
	0x032B26CC SXTW X24, W25
	0x032B26D0 ADD X8, X8, X24, 0x3, LSL
	0x032B26D4 LDR X0, [X8 + 0x20]
	0x032B26D8 CBZ X0, 0x32B2778
	0x032B26DC ADD X8, X20, X24, 0x3, LSL
	0x032B26E0 LDR X1, [X8 + 0x20]
	0x032B26E4 MOV X2, X31
	0x032B26E8 BL 0x322693C
	0x032B26EC TBZ X0, 0x0, 0x32B275C
	0x032B26F0 CBZ X19, 0x32B2748
	0x032B26F4 LDR X8, [X22 + 0x20]
	0x032B26F8 CBZ X8, 0x32B2778
	0x032B26FC LDR W9, [X8 + 0x18]
	0x032B2700 CMP W25, W9
	0x032B2704 B.CS 0x32B277C
	0x032B2708 LDR W9, [X19 + 0x18]
	0x032B270C CMP W25, W9
	0x032B2710 B.CS 0x32B277C
	0x032B2714 LDR X0, [X26]
	0x032B2718 ADD X8, X8, X24, 0x3, LSL
	0x032B271C LDR X23, [X8 + 0x20]
	0x032B2720 ADD X8, X19, X24, 0x3, LSL
	0x032B2724 LDR W9, [X0 + 0xE0]
	0x032B2728 LDR X24, [X8 + 0x20]
	0x032B272C CBNZ W9, 0x32B2734
	0x032B2730 BL 0x1C16DFC
	0x032B2734 MOV X0, X23
	0x032B2738 MOV X1, X24
	0x032B273C MOV X2, X31
	0x032B2740 BL 0x3395F0C
	0x032B2744 TBNZ X0, 0x0, 0x32B275C
	0x032B2748 ADD W25, W25, 0x1
	0x032B274C CMP W21, W25
	0x032B2750 B.NE 0x32B26A8
	0x032B2754 MOVZ W0, 0x1
	0x032B2758 B 0x32B2760
	0x032B275C MOV W0, W31
	0x032B2760 LDP X20, X19, [X31 + 0x40]
	0x032B2764 LDP X22, X21, [X31 + 0x30]
	0x032B2768 LDP X24, X23, [X31 + 0x20]
	0x032B276C LDP X26, X25, [X31 + 0x10]
	0x032B2770 LDR X30, [X31], #0x50
	0x032B2774 RET
	0x032B2778 BL 0x1C16F20
	0x032B277C BL 0x1C16F28
	0x032B2780 STP X30, X23, [X31 - 0x30]!
	0x032B2784 STP X22, X21, [X31 + 0x10]
	0x032B2788 STP X20, X19, [X31 + 0x20]
	0x032B278C MOV W22, W1
	0x032B2790 MOV X1, X31
	0x032B2794 MOV X19, X4
	0x032B2798 MOV X20, X3
	0x032B279C MOV W21, W2
	0x032B27A0 MOV X23, X0
	0x032B27A4 BL 0x33BDD8C
	0x032B27A8 STP W22, W21, [X23 + 0x10]
	0x032B27AC STP X20, X19, [X23 + 0x18]
	0x032B27B0 LDP X20, X19, [X31 + 0x20]
	0x032B27B4 LDP X22, X21, [X31 + 0x10]
	0x032B27B8 LDP X30, X23, [X31], #0x30
	0x032B27BC RET
	0x032B27C0 STR X30, [X31 - 0x30]!
	0x032B27C4 STP X22, X21, [X31 + 0x10]
	0x032B27C8 STP X20, X19, [X31 + 0x20]
	0x032B27CC ADRP X22, 0x112A000
	0x032B27D0 LDRB W8, [X22 + 0x7F1]
	0x032B27D4 MOV X19, X2
	0x032B27D8 MOV W20, W1
	0x032B27DC MOV X21, X0
	0x032B27E0 TBNZ X8, 0x0, 0x32B27F8
	0x032B27E4 ADRP X0, 0xE73000
	0x032B27E8 LDR X0, [X0 + 0x300]
	0x032B27EC BL 0x1C16CF4
	0x032B27F0 MOVZ W8, 0x1
	0x032B27F4 STRB W8, [X22 + 0x7F1]
	0x032B27F8 MOV X0, X21
	0x032B27FC BL 0x32B25B4
	0x032B2800 LDR X22, [X21 + 0x68]
	0x032B2804 CBNZ X22, 0x32B282C
	0x032B2808 ADRP X8, 0xE73000
	0x032B280C LDR X8, [X8 + 0x300]
	0x032B2810 LDR X0, [X8]
	0x032B2814 BL 0x1C16F10
	0x032B2818 MOV X1, X31
	0x032B281C MOV X22, X0
	0x032B2820 BL 0x33BDD8C
	0x032B2824 STR X22, [X21 + 0x68]
	0x032B2828 CBZ X22, 0x32B284C
	0x032B282C STR W20, [X22 + 0x10]
	0x032B2830 STR X19, [X22 + 0x18]
	0x032B2834 MOV X0, X22
	0x032B2838 MOV X1, X21
	0x032B283C LDP X20, X19, [X31 + 0x20]
	0x032B2840 LDP X22, X21, [X31 + 0x10]
	0x032B2844 LDR X30, [X31], #0x30

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+40], X25
	004 Move [X31+48], X24
	005 Move [X31+56], X23
	006 Move [X31+64], X22
	007 Move [X31+72], X21
	008 Move [X31+80], X20
	009 Move [X31+88], X19
	010 Move X23, 0x112B000
	011 Move W8, [X23+2083]
	012 Move X20, X3
	013 Move X22, X2
	014 Move X21, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {37}
	020 Move X0, 0xE74000
	021 Move X0, [X0+616]
	022 Call 0x1C17CF4
	023 Move X0, 0xE73000
	024 Move X0, [X0+3240]
	025 Call 0x1C17CF4
	026 Move X0, 0xE73000
	027 Move X0, [X0+1272]
	028 Call 0x1C17CF4
	029 Move X0, 0xE74000
	030 Move X0, [X0+536]
	031 Call 0x1C17CF4
	032 Move X0, 0xE74000
	033 Move X0, [X0+624]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X23+2083], W8
	037 Move [X31+24], X31
	038 Move [X31+20], W31
	039 Compare X21, 0
	040 JumpIfEqual {199}
	041 Compare X20, 0
	042 JumpIfEqual {224}
	043 Move X8, 0xE73000
	044 Move X8, [X8+3240]
	045 Move [X19+64], X20
	046 Move [X19+96], X22
	047 Move X23, 0xE73000
	048 Move X0, [X8]
	049 Move X24, 0xE74000
	050 Move X25, 0xE74000
	051 Move X23, [X23+1272]
	052 Move X24, [X24+616]
	053 Move X25, [X25+536]
	054 Call 0x1C17F10
	055 Move X1, X31
	056 Move X22, X0
	057 Call ObjectIDGenerator..ctor, X0
	058 Move [X19+24], X22
	059 Move X0, [X23]
	060 Call 0x1C17F10
	061 Move X1, X31
	062 Move X22, X0
	063 Call Queue..ctor, X0
	064 Move [X19+16], X22
	065 Move X0, [X24]
	066 Call 0x1C17F10
	067 Move X1, X31
	068 Move X22, X0
	069 Call FormatterConverter..ctor, X0
	070 Move [X19+128], X22
	071 Move X0, [X25]
	072 Call 0x1C17F10
	073 Move X22, X0
	074 Call SerObjectInfoInit..ctor, X0
	075 Add X4, X31, 20
	076 Move X0, X19
	077 Move X1, X21
	078 Move W2, W31
	079 Move X3, X31
	080 Move [X19+120], X22
	081 Call ObjectWriter.InternalGetId, X0, X1, X2, X3, X4
	082 Move X1, [X19+96]
	083 Move [X19+80], X0
	084 Compare X1, 0
	085 JumpIfEqual {93}
	086 Add X4, X31, 20
	087 Move X0, X19
	088 Move W2, W31
	089 Move X3, X31
	090 Call ObjectWriter.InternalGetId, X0, X1, X2, X3, X4
	091 Move X8, [X19+80]
	092 Move X2, X0
	093 Move X8, X0
	094 Move TEMP, 0
	095 Not TEMP
	096 Move X2, TEMP
	097 Move X0, X19
	098 Move X1, X8
	099 Call ObjectWriter.WriteSerializedStreamHeader, X0, X1, X2
	100 Move X1, [X19+96]
	101 Compare X1, 0
	102 JumpIfEqual {113}
	103 Move X8, [X1+24]
	104 Compare X8, 0
	105 JumpIfEqual {113}
	106 Move X0, [X19+16]
	107 Compare X0, 0
	108 JumpIfEqual {198}
	109 Move X8, [X0]
	110 Move X9, [X8+552]
	111 Move X2, [X8+560]
	112 NotImplemented "Instruction BLR not yet implemented."
	113 Move X0, [X19+16]
	114 Compare X0, 0
	115 JumpIfEqual {198}
	116 Move X8, [X0]
	117 Move X1, X21
	118 Move X9, [X8+552]
	119 Move X2, [X8+560]
	120 NotImplemented "Instruction BLR not yet implemented."
	121 Add X1, X31, 24
	122 Move X0, X19
	123 Call ObjectWriter.GetNext, X0, X1
	124 Compare X0, 0
	125 JumpIfEqual {174}
	126 Move X23, 0xE74000
	127 Move X23, [X23+624]
	128 Move X21, X0
	129 Move X8, [X23]
	130 Move X9, [X21]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X1, [X19+40]
	133 Move X2, [X19+48]
	134 Move X3, [X19+56]
	135 Move X4, [X19+120]
	136 Move X5, [X19+128]
	137 Move X7, [X19+112]
	138 Move X0, X21
	139 Move X6, X19
	140 Call WriteObjectInfo.Serialize, X0, X1, X2, X3, X4, X5, X6
	141 Move X21, X0
	142 Move X0, X19
	143 Move X1, X21
	144 Call ObjectWriter.GetAssemblyId, X0, X1
	145 Compare X21, 0
	146 JumpIfEqual {198}
	147 Move [X21+112], X0
	148 Move X8, [X31+24]
	149 Move X0, X19
	150 Move X1, X21
	151 Move [X21+104], X8
	152 Call ObjectWriter.TypeToNameInfo, X0, X1
	153 Move X22, X0
	154 Move X0, X19
	155 Move X1, X21
	156 Move X2, X22
	157 Move X3, X22
	158 Call ObjectWriter.Write, X0, X1, X2, X3
	159 Move X0, [X19+184]
	160 Compare X0, 0
	161 JumpIfEqual {198}
	162 Move X1, X22
	163 Move X2, X31
	164 Call SerStack.Push, X0, X1
	165 Move X0, [X21+96]
	166 Move X1, X21
	167 Call WriteObjectInfo.PutObjectInfo, X0, X1
	168 Add X1, X31, 24
	169 Move X0, X19
	170 Call ObjectWriter.GetNext, X0, X1
	171 Move X21, X0
	172 Compare X0, 0
	173 JumpIfNotEqual {129}
	174 Move X0, X20
	175 Call __BinaryWriter.WriteSerializationHeaderEnd, X0
	176 Move X0, [X20+48]
	177 Compare X0, 0
	178 JumpIfEqual {198}
	179 Move X8, [X0]
	180 Move X9, [X8+424]
	181 Move X1, [X8+432]
	182 NotImplemented "Instruction BLR not yet implemented."
	183 Move X0, [X19+72]
	184 Compare X0, 0
	185 JumpIfEqual {198}
	186 Move X1, X31
	187 Call SerializationObjectManager.RaiseOnSerializedEvent, X0
	188 Move X20, [X31+80]
	189 Move X19, [X31+88]
	190 Move X22, [X31+64]
	191 Move X21, [X31+72]
	192 Move X24, [X31+48]
	193 Move X23, [X31+56]
	194 Move X30, [X31+32]
	195 Move X25, [X31+40]
	196 Add X31, X31, 96
	197 Return 
	198 Call 0x1C17F20
	199 Move X0, 0xE74000
	200 Move X0, [X0+632]
	201 Call 0x1C17D08
	202 Move X1, X31
	203 Call Environment.GetResourceString, X0
	204 Move X19, X0
	205 Move X0, 0xE47000
	206 Move X0, [X0+1320]
	207 Call 0x1C17D08
	208 Call 0x1C17F10
	209 Move X20, X0
	210 Move X0, 0xE74000
	211 Move X0, [X0+640]
	212 Call 0x1C17D08
	213 Move X1, X0
	214 Move X0, X20
	215 Move X2, X19
	216 Move X3, X31
	217 Call ArgumentNullException..ctor, X0, X1, X2
	218 Move X0, 0xE74000
	219 Move X0, [X0+648]
	220 Call 0x1C17D08
	221 Move X1, X0
	222 Move X0, X20
	223 Call 0x1C17DEC
	224 Move X0, 0xE42000
	225 Move X0, [X0+2512]
	226 Call 0x1C17D08
	227 Move W1, 1
	228 Call 0x1C17D6C
	229 Move X19, X0
	230 Call 0x19913C0
	231 Move X20, 0xE74000
	232 Move X20, [X20+656]
	233 Move X0, X20
	234 Call 0x1C17D08
	235 Move X1, X0
	236 Move X0, X19
	237 Call 0x19990B4
	238 Move X0, X20
	239 Call 0x1C17D08
	240 Move X2, X0
	241 Move X0, X19
	242 Move X1, X31
	243 Call 0x1994444
	244 Move X0, 0xE74000
	245 Move X0, [X0+448]
	246 Call 0x1C17D08
	247 Move X1, X19
	248 Move X2, X31
	249 Call Environment.GetResourceString, X0, X1
	250 Move X19, X0
	251 Move X0, 0xE47000
	252 Move X0, [X0+1320]
	253 Call 0x1C17D08
	254 Call 0x1C17F10
	255 Move X21, X0
	256 Move X0, X20
	257 Call 0x1C17D08
	258 Move X1, X0
	259 Move X0, X21
	260 Move X2, X19
	261 Move X3, X31
	262 Call ArgumentNullException..ctor, X0, X1, X2
	263 Move X0, 0xE74000
	264 Move X0, [X0+648]
	265 Call 0x1C17D08
	266 Move X1, X0
	267 Move X0, X21
	268 Call 0x1C17DEC

Method: System.Runtime.Serialization.SerializationObjectManager get_ObjectManager()

Disassembly:
	0x032B9FE8 ADRP X24, 0xE6B000
	0x032B9FEC LDR X24, [X24 + 0xF80]

ISIL:
	001 Move X0, [X0+72]
	002 Return X0

Method: System.Void Write(System.Runtime.Serialization.Formatters.Binary.WriteObjectInfo objectInfo, System.Runtime.Serialization.Formatters.Binary.NameInfo memberNameInfo, System.Runtime.Serialization.Formatters.Binary.NameInfo typeNameInfo)

Disassembly:
	0x032B9AFC ADRP X27, 0xE6B000
	0x032B9B00 LDR X27, [X27 + 0xF80]
	0x032B9B04 LDR X24, [X20 + 0x30]
	0x032B9B08 LDR X0, [X27]
	0x032B9B0C LDR W8, [X0 + 0xE0]
	0x032B9B10 CBNZ W8, 0x32B9B1C
	0x032B9B14 BL 0x1C16DFC
	0x032B9B18 LDR X0, [X27]
	0x032B9B1C LDR X8, [X0 + 0xB8]
	0x032B9B20 LDR X8, [X8 + 0xC0]
	0x032B9B24 CMP X24, X8
	0x032B9B28 B.EQ 0x32B9B3C
	0x032B9B2C MOV X0, X24
	0x032B9B30 MOV X1, X31
	0x032B9B34 BL 0x3380420
	0x032B9B38 CBZ X0, 0x32B9B4C
	0x032B9B3C CBZ X25, 0x32B9DD0
	0x032B9B40 MOVZ W8, 0x1
	0x032B9B44 STRB W8, [X25 + 0x3C]
	0x032B9B48 STRB W8, [X20 + 0x3C]
	0x032B9B4C LDR X8, [X21 + 0x68]
	0x032B9B50 CBZ X8, 0x32B9DD0
	0x032B9B54 LDRB W8, [X8 + 0x10]
	0x032B9B58 TBNZ X8, 0x0, 0x32B9B68
	0x032B9B5C CBZ X23, 0x32B9DD0
	0x032B9B60 LDRB W8, [X23 + 0x28]
	0x032B9B64 CBZ W8, 0x32B9B7C
	0x032B9B68 CBZ X25, 0x32B9DD0
	0x032B9B6C MOVZ W8, 0x1
	0x032B9B70 STRB W8, [X25 + 0x3B]
	0x032B9B74 STRB W8, [X20 + 0x3B]
	0x032B9B78 STRB W8, [X20 + 0x3D]
	0x032B9B7C MOV X0, X21
	0x032B9B80 MOV X1, X23
	0x032B9B84 MOV X2, X20
	0x032B9B88 MOV X3, X25
	0x032B9B8C MOV X4, X22
	0x032B9B90 BL 0x32B9DD4
	0x032B9B94 TBNZ X0, 0x0, 0x32B9CDC
	0x032B9B98 CBZ X25, 0x32B9DD0
	0x032B9B9C LDR W8, [X25 + 0x28]
	0x032B9BA0 CBZ W8, 0x32B9BAC
	0x032B9BA4 MOV X26, X31
	0x032B9BA8 B 0x32B9BD8
	0x032B9BAC CBZ X22, 0x32B9DD0
	0x032B9BB0 MOV X0, X22
	0x032B9BB4 MOV X1, X31
	0x032B9BB8 BL 0x33BE520
	0x032B9BBC CMP X24, X0
	0x032B9BC0 MOV X26, X24
	0x032B9BC4 B.EQ 0x32B9BD8
	0x032B9BC8 MOVZ W8, 0x1
	0x032B9BCC MOV X26, X0
	0x032B9BD0 STRB W8, [X25 + 0x3C]
	0x032B9BD4 STRB W8, [X20 + 0x3C]
	0x032B9BD8 LDR X0, [X27]
	0x032B9BDC LDR W8, [X0 + 0xE0]
	0x032B9BE0 CBNZ W8, 0x32B9BEC
	0x032B9BE4 BL 0x1C16DFC
	0x032B9BE8 LDR X0, [X27]
	0x032B9BEC LDR X8, [X0 + 0xB8]
	0x032B9BF0 LDR X28, [X8 + 0xC0]
	0x032B9BF4 CMP X24, X28
	0x032B9BF8 B.EQ 0x32B9C04
	0x032B9BFC CBNZ X19, 0x32B9C28
	0x032B9C00 B 0x32B9CC4
	0x032B9C04 CBZ X22, 0x32B9DD0
	0x032B9C08 MOV X0, X22
	0x032B9C0C MOV X1, X31
	0x032B9C10 BL 0x33BE520
	0x032B9C14 CBZ X19, 0x32B9C9C
	0x032B9C18 MOV X0, X21
	0x032B9C1C MOV X1, X19
	0x032B9C20 MOV X2, X25
	0x032B9C24 BL 0x32B9EB0
	0x032B9C28 LDRB W8, [X19 + 0x2B]
	0x032B9C2C CBZ W8, 0x32B9CC4
	0x032B9C30 CBNZ X26, 0x32B9C44
	0x032B9C34 CBZ X22, 0x32B9DD0
	0x032B9C38 MOV X0, X22
	0x032B9C3C MOV X1, X31
	0x032B9C40 BL 0x33BE520
	0x032B9C44 MOV X0, X21
	0x032B9C48 MOV X1, X22
	0x032B9C4C MOV W2, W31
	0x032B9C50 MOV X3, X31
	0x032B9C54 MOV X4, X19
	0x032B9C58 BL 0x32B9F00
	0x032B9C5C MOV X22, X0
	0x032B9C60 CMP X0, 0x1
	0x032B9C64 B.GE 0x32B9D34
	0x032B9C68 LDR X0, [X21 + 0x40]
	0x032B9C6C CBZ X0, 0x32B9DD0
	0x032B9C70 BL 0x32B25B4
	0x032B9C74 MOV X0, X21
	0x032B9C78 MOV X1, X19
	0x032B9C7C MOV X2, X20
	0x032B9C80 STR X22, [X19 + 0x68]
	0x032B9C84 STR X22, [X20 + 0x18]
	0x032B9C88 BL 0x32B8FF0
	0x032B9C8C CBZ X23, 0x32B9DD0
	0x032B9C90 LDR X0, [X23 + 0x60]
	0x032B9C94 MOV X1, X23
	0x032B9C98 B 0x32B9DB4
	0x032B9C9C MOV X27, X0
	0x032B9CA0 MOV X0, X21
	0x032B9CA4 MOV X1, X27
	0x032B9CA8 BL 0x32AA788
	0x032B9CAC MOV W3, W0
	0x032B9CB0 MOV X0, X21
	0x032B9CB4 MOV X1, X27
	0x032B9CB8 MOV X2, X31
	0x032B9CBC MOV X4, X25
	0x032B9CC0 BL 0x32BA648
	0x032B9CC4 MOV X0, X21
	0x032B9CC8 MOV X1, X20
	0x032B9CCC MOV X2, X25
	0x032B9CD0 MOV X3, X22
	0x032B9CD4 BL 0x32B9FA4
	0x032B9CD8 TBZ X0, 0x0, 0x32B9CF8
	0x032B9CDC LDP X20, X19, [X31 + 0x50]
	0x032B9CE0 LDP X22, X21, [X31 + 0x40]
	0x032B9CE4 LDP X24, X23, [X31 + 0x30]
	0x032B9CE8 LDP X26, X25, [X31 + 0x20]
	0x032B9CEC LDP X28, X27, [X31 + 0x10]
	0x032B9CF0 LDR X30, [X31], #0x60
	0x032B9CF4 RET
	0x032B9CF8 CBNZ X26, 0x32B9D10
	0x032B9CFC CBZ X22, 0x32B9DD0
	0x032B9D00 MOV X0, X22
	0x032B9D04 MOV X1, X31
	0x032B9D08 BL 0x33BE520
	0x032B9D0C MOV X26, X0
	0x032B9D10 CMP X24, X28
	0x032B9D14 CSET W2, EQ
	0x032B9D18 MOV X0, X21
	0x032B9D1C MOV X1, X22
	0x032B9D20 MOV X3, X26
	0x032B9D24 MOV X4, X19
	0x032B9D28 BL 0x32B9F00
	0x032B9D2C MOV X22, X0
	0x032B9D30 TBNZ X0, 0x0, 0x32B9D64
	0x032B9D34 STR X22, [X20 + 0x18]
	0x032B9D38 LDR X0, [X21 + 0x40]
	0x032B9D3C CBZ X0, 0x32B9DD0
	0x032B9D40 MOV X1, X20
	0x032B9D44 MOV W2, W22
	0x032B9D48 LDP X20, X19, [X31 + 0x50]
	0x032B9D4C LDP X22, X21, [X31 + 0x40]
	0x032B9D50 LDP X24, X23, [X31 + 0x30]
	0x032B9D54 LDP X26, X25, [X31 + 0x20]
	0x032B9D58 LDP X28, X27, [X31 + 0x10]
	0x032B9D5C LDR X30, [X31], #0x60
	0x032B9D60 B 0x32B314C
	0x032B9D64 CBZ X19, 0x32B9DD0
	0x032B9D68 MOV X0, X21
	0x032B9D6C MOV X1, X19
	0x032B9D70 STR X22, [X19 + 0x68]
	0x032B9D74 BL 0x32B8AB8
	0x032B9D78 CBZ X0, 0x32B9DD0
	0x032B9D7C MOV X23, X0
	0x032B9D80 STR X22, [X0 + 0x18]
	0x032B9D84 MOV X0, X21
	0x032B9D88 MOV X1, X19
	0x032B9D8C MOV X2, X20
	0x032B9D90 MOV X3, X23
	0x032B9D94 BL 0x32B8AFC
	0x032B9D98 LDR X0, [X21 + 0xB8]
	0x032B9D9C CBZ X0, 0x32B9DD0
	0x032B9DA0 MOV X1, X23
	0x032B9DA4 MOV X2, X31
	0x032B9DA8 BL 0x32BD7AC
	0x032B9DAC LDR X0, [X19 + 0x60]
	0x032B9DB0 MOV X1, X19
	0x032B9DB4 LDP X20, X19, [X31 + 0x50]
	0x032B9DB8 LDP X22, X21, [X31 + 0x40]
	0x032B9DBC LDP X24, X23, [X31 + 0x30]
	0x032B9DC0 LDP X26, X25, [X31 + 0x20]
	0x032B9DC4 LDP X28, X27, [X31 + 0x10]
	0x032B9DC8 LDR X30, [X31], #0x60
	0x032B9DCC B 0x32B33C0
	0x032B9DD0 BL 0x1C16F20
	0x032B9DD4 STR X30, [X31 - 0x10]!
	0x032B9DD8 CBZ X4, 0x32B9DE4
	0x032B9DDC MOV W0, W31
	0x032B9DE0 B 0x32B9E6C
	0x032B9DE4 LDR X8, [X0 + 0x68]
	0x032B9DE8 CBZ X8, 0x32B9E74
	0x032B9DEC LDR W9, [X8 + 0x1C]
	0x032B9DF0 CMP W9, 0x2
	0x032B9DF4 B.EQ 0x32B9E28
	0x032B9DF8 CBZ X2, 0x32B9E74
	0x032B9DFC LDRB W9, [X2 + 0x3A]
	0x032B9E00 CBNZ W9, 0x32B9E28
	0x032B9E04 LDRB W9, [X2 + 0x3B]
	0x032B9E08 CBNZ W9, 0x32B9E28
	0x032B9E0C LDRB W9, [X2 + 0x3C]
	0x032B9E10 CBNZ W9, 0x32B9E28
	0x032B9E14 CBZ X1, 0x32B9E74
	0x032B9E18 LDRB W9, [X1 + 0x28]
	0x032B9E1C CBNZ W9, 0x32B9E28
	0x032B9E20 LDRB W8, [X8 + 0x10]
	0x032B9E24 TBZ X8, 0x0, 0x32B9E68
	0x032B9E28 CBZ X3, 0x32B9E74
	0x032B9E2C LDRB W8, [X3 + 0x3A]
	0x032B9E30 LDR X0, [X0 + 0x40]
	0x032B9E34 CBZ W8, 0x32B9E5C
	0x032B9E38 CBZ X0, 0x32B9E74
	0x032B9E3C LDR W8, [X0 + 0x3C]
	0x032B9E40 LDR W9, [X3 + 0x40]
	0x032B9E44 ADD W8, W8, 0x1
	0x032B9E48 CMP W9, 0x1
	0x032B9E4C STR W8, [X0 + 0x3C]
	0x032B9E50 B.EQ 0x32B9E68
	0x032B9E54 BL 0x32B25B4
	0x032B9E58 B 0x32B9E68

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X21, 0x1124000
	015 Move W8, [X21+2084]
	016 Move X25, X3
	017 Move X19, X2
	018 Move X22, X1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {32}
	024 Move X0, 0xE6C000
	025 Move X0, [X0+3968]
	026 Call 0x1C17CF4
	027 Move X0, 0xE6D000
	028 Move X0, [X0+1240]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+2084], W8
	032 Move [X31+48], X31
	033 Move [X31+56], X31
	034 Move [X31+40], X31
	035 Compare X22, 0
	036 JumpIfEqual {226}
	037 Move X24, [X22+24]
	038 Compare X24, 0
	039 JumpIfEqual {227}
	040 Move X28, 0xE6C000
	041 Move X28, [X28+3968]
	042 Move X21, [X22+32]
	043 Move X23, [X22+104]
	044 Move X0, [X28]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {50}
	048 Call 0x1C17DFC
	049 Move X0, [X28]
	050 Move X8, [X0+184]
	051 Move X8, [X8+56]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move W8, [X22+43]
	054 Compare W8, 0
	055 JumpIfEqual {75}
	056 Move X0, X20
	057 Move X1, X22
	058 Move X2, X19
	059 Call ObjectWriter.WriteArray, X0, X1, X2, X3
	060 Compare X19, 0
	061 JumpIfEqual {226}
	062 Move [X19+24], X23
	063 Move X8, [X24]
	064 Move X19, [X20+64]
	065 Move X0, X24
	066 Move X9, [X8+360]
	067 Move X1, [X8+368]
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Compare X19, 0
	070 JumpIfEqual {226}
	071 Move X2, X0
	072 Move X0, X19
	073 Move W1, W23
	074 Call __BinaryWriter.WriteObjectString, X0, X1, X2
	075 Add X1, X31, 56
	076 Add X2, X31, 48
	077 Add X3, X31, 40
	078 Move X0, X22
	079 Call WriteObjectInfo.GetMemberInfo, X0, X1, X2, X3
	080 Move W8, [X22+40]
	081 Compare W8, 0
	082 JumpIfNotEqual {91}
	083 Move X8, [X20+104]
	084 Compare X8, 0
	085 JumpIfEqual {226}
	086 Move W8, [X8+16]
	087 Move TEMP, X8
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfNotEqual {100}
	091 Compare X19, 0
	092 JumpIfEqual {226}
	093 Move W8, 1
	094 Move [X19+59], W8
	095 Move [X19+61], W8
	096 Compare X25, 0
	097 JumpIfEqual {226}
	098 Move [X25+59], W8
	099 Move [X25+61], W8
	100 Move X9, [X31+56]
	101 Compare X9, 0
	102 JumpIfEqual {226}
	103 Move [X31+24], X25
	104 Move X8, 0xE6D000
	105 Move X8, [X8+1240]
	106 Move W1, [X9+24]
	107 Move [X31+16], X9
	108 Move X0, [X8]
	109 Call 0x1C17D6C
	110 Move X25, [X31+48]
	111 Compare X25, 0
	112 JumpIfEqual {226}
	113 Move X8, [X25+24]
	114 Move X26, [X31+40]
	115 Move X24, X0
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X29, X31
	118 And X8, X8, 0
	119 Add X9, X24, 32
	120 Add X21, X26, 32
	121 Add X23, X25, 32
	122 Move [X31+32], X9
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move X27, [X23]
	125 Compare X27, 0
	126 JumpIfNotEqual {145}
	127 Compare X26, 0
	128 JumpIfEqual {226}
	129 Move W8, [X26+24]
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Move X0, [X21]
	132 Compare X0, 0
	133 JumpIfEqual {137}
	134 Move X1, X31
	135 Call "il2cpp_vm_object_is_inst", X0
	136 Move X27, X0
	137 Move X0, [X28]
	138 Move W8, [X0+224]
	139 Compare W8, 0
	140 JumpIfNotEqual {143}
	141 Call 0x1C17DFC
	142 Move X0, [X28]
	143 Move X8, [X0+184]
	144 Move X27, [X8+192]
	145 Move X0, X20
	146 Move X1, X27
	147 Call ObjectWriter.ToCode, X0, X1
	148 Compare W0, 0
	149 JumpIfNotEqual {199}
	150 Move X0, [X28]
	151 Move W8, [X0+224]
	152 Compare W8, 0
	153 JumpIfNotEqual {156}
	154 Call 0x1C17DFC
	155 Move X0, [X28]
	156 Move X8, [X0+184]
	157 Move X8, [X8+56]
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Compare X26, 0
	160 JumpIfEqual {226}
	161 Move W8, [X26+24]
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Move X0, [X21]
	164 Compare X0, 0
	165 JumpIfEqual {176}
	166 Move X1, [X20+40]
	167 Move X2, [X20+48]
	168 Move X3, [X20+56]
	169 Move X4, [X20+120]
	170 Move X5, [X20+128]
	171 Move X7, [X20+112]
	172 Move X6, X20
	173 Call WriteObjectInfo.Serialize, X0, X1, X2, X3, X4, X5, X6
	174 Compare X24, 0
	175 JumpIfNotEqual {188}
	176 Move W8, [X25+24]
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move X0, [X23]
	179 Move X1, [X20+40]
	180 Move X2, [X20+48]
	181 Move X3, [X20+56]
	182 Move X4, [X20+120]
	183 Move X5, [X20+128]
	184 Move X6, [X20+112]
	185 Call WriteObjectInfo.Serialize, X0, X1, X2, X3, X4, X5
	186 Compare X24, 0
	187 JumpIfEqual {226}
	188 Move W8, [X24+24]
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move X8, [X31+32]
	191 Move X27, X0
	192 Move X1, X27
	193 Move [X8], X0
	194 Move X0, X20
	195 Call ObjectWriter.GetAssemblyId, X0, X1
	196 Compare X27, 0
	197 JumpIfEqual {226}
	198 Move [X27+112], X0
	199 Move W8, [X25+24]
	200 Add X29, X29, 1
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Move X4, [X31+16]
	203 Move X3, [X31+24]
	204 Move X0, X20
	205 Move X1, X22
	206 Move X2, X19
	207 Move X5, X25
	208 Move X6, X26
	209 Move X7, X24
	210 Call ObjectWriter.Write, X0, X1, X2, X3, X4, X5, X6, X7
	211 Move X20, [X31+144]
	212 Move X19, [X31+152]
	213 Move X22, [X31+128]
	214 Move X21, [X31+136]
	215 Move X24, [X31+112]
	216 Move X23, [X31+120]
	217 Move X26, [X31+96]
	218 Move X25, [X31+104]
	219 Move X28, [X31+80]
	220 Move X27, [X31+88]
	221 Move X29, [X31+64]
	222 Move X30, [X31+72]
	223 Add X31, X31, 160
	224 Return 
	225 Call 0x1C17F28
	226 Call 0x1C17F20
	227 Move X0, 0xE6C000
	228 Move X0, [X0+3248]
	229 Call 0x1C17D08
	230 Move X1, X31
	231 Call Environment.GetResourceString, X0
	232 Move X19, X0
	233 Move X0, 0xE40000
	234 Move X0, [X0+1320]
	235 Call 0x1C17D08
	236 Call 0x1C17F10
	237 Move X20, X0
	238 Move X0, 0xE6D000
	239 Move X0, [X0+1248]
	240 Call 0x1C17D08
	241 Move X1, X0
	242 Move X0, X20
	243 Move X2, X19
	244 Move X3, X31
	245 Call ArgumentNullException..ctor, X0, X1, X2
	246 Move X0, 0xE6D000
	247 Move X0, [X0+1256]
	248 Call 0x1C17D08
	249 Move X1, X0
	250 Move X0, X20
	251 Call 0x1C17DEC

Method: System.Void Write(System.Runtime.Serialization.Formatters.Binary.WriteObjectInfo objectInfo, System.Runtime.Serialization.Formatters.Binary.NameInfo memberNameInfo, System.Runtime.Serialization.Formatters.Binary.NameInfo typeNameInfo, System.String[] memberNames, System.Type[] memberTypes, System.Object[] memberData, System.Runtime.Serialization.Formatters.Binary.WriteObjectInfo[] memberObjectInfos)

Disassembly:
	0x032BA724 BL 0x1C16F10
	0x032BA728 MOV X1, X31
	0x032BA72C MOV X19, X0
	0x032BA730 BL 0x32BECE8
	0x032BA734 B 0x32BA774
	0x032BA738 LDR X0, [X19 + 0xB8]
	0x032BA73C CBZ X0, 0x32BA784
	0x032BA740 MOV X1, X31
	0x032BA744 BL 0x32BD8E0
	0x032BA748 CBZ X0, 0x32BA784
	0x032BA74C ADRP X8, 0xE6B000
	0x032BA750 LDR X8, [X8 + 0x500]
	0x032BA754 MOV X19, X0
	0x032BA758 LDR X1, [X8]
	0x032BA75C LDR X8, [X0]
	0x032BA760 CMP X8, X1
	0x032BA764 B.NE 0x32BA788
	0x032BA768 MOV X0, X19
	0x032BA76C MOV X1, X31
	0x032BA770 BL 0x32BECF0
	0x032BA774 MOV X0, X19
	0x032BA778 LDP X20, X19, [X31 + 0x10]
	0x032BA77C LDR X30, [X31], #0x20
	0x032BA780 RET
	0x032BA784 BL 0x1C16F20
	0x032BA788 MOV X0, X19
	0x032BA78C BL 0x1C171E0
	0x032BA790 STR X30, [X31 - 0x30]!
	0x032BA794 STP X22, X21, [X31 + 0x10]
	0x032BA798 STP X20, X19, [X31 + 0x20]
	0x032BA79C ADRP X20, 0x1122000
	0x032BA7A0 LDRB W8, [X20 + 0x831]
	0x032BA7A4 MOV X19, X0
	0x032BA7A8 TBNZ X8, 0x0, 0x32BA7CC
	0x032BA7AC ADRP X0, 0xE6B000
	0x032BA7B0 LDR X0, [X0 + 0x38]
	0x032BA7B4 BL 0x1C16CF4
	0x032BA7B8 ADRP X0, 0xE6A000
	0x032BA7BC LDR X0, [X0 + 0xF80]
	0x032BA7C0 BL 0x1C16CF4
	0x032BA7C4 MOVZ W8, 0x1
	0x032BA7C8 STRB W8, [X20 + 0x831]
	0x032BA7CC LDR X20, [X19 + 0x60]
	0x032BA7D0 CBNZ X20, 0x32BA81C
	0x032BA7D4 ADRP X20, 0xE6A000
	0x032BA7D8 LDR X20, [X20 + 0xF80]
	0x032BA7DC LDR X0, [X20]
	0x032BA7E0 LDR W8, [X0 + 0xE0]
	0x032BA7E4 CBNZ W8, 0x32BA7F0
	0x032BA7E8 BL 0x1C16DFC
	0x032BA7EC LDR X0, [X20]
	0x032BA7F0 ADRP X9, 0xE6B000
	0x032BA7F4 LDR X8, [X0 + 0xB8]
	0x032BA7F8 LDR X9, [X9 + 0x38]
	0x032BA7FC LDP X22, X21, [X8 + 0xD0]
	0x032BA800 LDR X0, [X9]
	0x032BA804 BL 0x1C16F10
	0x032BA808 MOV X1, X31
	0x032BA80C MOV X20, X0
	0x032BA810 BL 0x33BDD8C
	0x032BA814 STP X21, X22, [X20 + 0x10]
	0x032BA818 STR X20, [X19 + 0x60]
	0x032BA81C MOV X0, X20
	0x032BA820 LDP X20, X19, [X31 + 0x20]
	0x032BA824 LDP X22, X21, [X31 + 0x10]
	0x032BA828 LDR X30, [X31], #0x30
	0x032BA82C RET
	0x032BA830 STR X30, [X31 - 0x20]!
	0x032BA834 STP X20, X19, [X31 + 0x10]
	0x032BA838 ADRP X20, 0x1122000
	0x032BA83C LDRB W8, [X20 + 0x832]
	0x032BA840 MOV X19, X0
	0x032BA844 TBNZ X8, 0x0, 0x32BA85C
	0x032BA848 ADRP X0, 0xE6B000
	0x032BA84C LDR X0, [X0 + 0x508]
	0x032BA850 BL 0x1C16CF4
	0x032BA854 MOVZ W8, 0x1
	0x032BA858 STRB W8, [X20 + 0x832]
	0x032BA85C LDR X20, [X19 + 0x30]
	0x032BA860 CBNZ X20, 0x32BA884
	0x032BA864 ADRP X8, 0xE6B000
	0x032BA868 LDR X8, [X8 + 0x508]
	0x032BA86C LDR X0, [X8]
	0x032BA870 BL 0x1C16F10
	0x032BA874 MOV X1, X31
	0x032BA878 MOV X20, X0
	0x032BA87C BL 0x32BD9C4
	0x032BA880 STR X20, [X19 + 0x30]
	0x032BA884 MOV X0, X20
	0x032BA888 LDP X20, X19, [X31 + 0x10]
	0x032BA88C LDR X30, [X31], #0x20
	0x032BA890 RET
	0x032BA894 STR X30, [X31 - 0x20]!
	0x032BA898 STP X20, X19, [X31 + 0x10]
	0x032BA89C ADRP X20, 0x1122000
	0x032BA8A0 LDRB W8, [X20 + 0x833]
	0x032BA8A4 MOV X19, X0
	0x032BA8A8 TBNZ X8, 0x0, 0x32BA8C0
	0x032BA8AC ADRP X0, 0xE6B000
	0x032BA8B0 LDR X0, [X0 + 0x508]
	0x032BA8B4 BL 0x1C16CF4
	0x032BA8B8 MOVZ W8, 0x1
	0x032BA8BC STRB W8, [X20 + 0x833]
	0x032BA8C0 LDR X20, [X19 + 0x38]
	0x032BA8C4 CBNZ X20, 0x32BA8EC
	0x032BA8C8 ADRP X8, 0xE6B000
	0x032BA8CC LDR X8, [X8 + 0x508]
	0x032BA8D0 LDR X0, [X8]
	0x032BA8D4 BL 0x1C16F10
	0x032BA8D8 MOVZ W1, 0x2
	0x032BA8DC MOV X2, X31
	0x032BA8E0 MOV X20, X0
	0x032BA8E4 BL 0x32BDA30
	0x032BA8E8 STR X20, [X19 + 0x38]
	0x032BA8EC MOV X0, X20
	0x032BA8F0 LDP X20, X19, [X31 + 0x10]
	0x032BA8F4 LDR X30, [X31], #0x20
	0x032BA8F8 RET
	0x032BA8FC STR X30, [X31 - 0x20]!
	0x032BA900 STP X20, X19, [X31 + 0x10]
	0x032BA904 ADRP X20, 0x1122000
	0x032BA908 LDRB W8, [X20 + 0x834]
	0x032BA90C MOV X19, X0
	0x032BA910 TBNZ X8, 0x0, 0x32BA928
	0x032BA914 ADRP X0, 0xE6B000
	0x032BA918 LDR X0, [X0 + 0x60]
	0x032BA91C BL 0x1C16CF4
	0x032BA920 MOVZ W8, 0x1
	0x032BA924 STRB W8, [X20 + 0x834]
	0x032BA928 LDR X20, [X19 + 0x58]
	0x032BA92C CBNZ X20, 0x32BA950
	0x032BA930 ADRP X8, 0xE6B000
	0x032BA934 LDR X8, [X8 + 0x60]
	0x032BA938 LDR X0, [X8]
	0x032BA93C BL 0x1C16F10
	0x032BA940 MOV X1, X31
	0x032BA944 MOV X20, X0
	0x032BA948 BL 0x32BD68C
	0x032BA94C STR X20, [X19 + 0x58]
	0x032BA950 MOV X0, X20
	0x032BA954 LDP X20, X19, [X31 + 0x10]
	0x032BA958 LDR X30, [X31], #0x20
	0x032BA95C RET
	0x032BA960 RET
	0x032BA964 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X21, 0x1123000
	015 Move W8, [X21+2085]
	016 Move X19, X7
	017 Move X25, X6
	018 Move X20, X5
	019 Move X26, X2
	020 Move X24, X1
	021 Move [X31+16], X0
	022 Move [X31+24], X4
	023 Move [X31+8], X3
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {33}
	028 Move X0, 0xE6B000
	029 Move X0, [X0+3968]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+2085], W8
	033 Move X8, [X31+24]
	034 Compare X8, 0
	035 JumpIfEqual {169}
	036 Compare X24, 0
	037 JumpIfEqual {169}
	038 Move X8, [X31+24]
	039 Move X27, [X8+24]
	040 Move X8, [X24+104]
	041 Compare X26, 0
	042 JumpIfEqual {120}
	043 Move [X26+24], X8
	044 Move X8, [X31+16]
	045 Move X0, [X8+64]
	046 Compare X0, 0
	047 JumpIfEqual {169}
	048 Move X2, [X31+8]
	049 Move X4, [X31+24]
	050 Move X1, X26
	051 Move W3, W27
	052 Move X5, X20
	053 Move X6, X19
	054 Call __BinaryWriter.WriteObject, X0, X1, X2, X3, X4, X5, X6
	055 Move X9, X26
	056 Add X9, X9, 61
	057 Move W10, [X9]
	058 Subtract X8, X9, 2
	059 Compare W10, 0
	060 JumpIfEqual {64}
	061 Move W10, 1
	062 Move [X8], W10
	063 Move X8, X9
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move [X8], W31
	066 Move X8, [X31+24]
	067 Move X28, X31
	068 And X27, X27, 0
	069 Add X22, X20, 32
	070 Add X29, X8, 32
	071 Add X21, X25, 32
	072 Add X23, X19, 32
	073 Move X8, [X31+24]
	074 Move W8, [X8+24]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Compare X20, 0
	077 JumpIfEqual {169}
	078 Move W8, [X20+24]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Compare X25, 0
	081 JumpIfEqual {169}
	082 Move W8, [X25+24]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Compare X19, 0
	085 JumpIfEqual {169}
	086 Move W8, [X19+24]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X4, [X29]
	089 Move X5, [X22]
	090 Move X6, [X21]
	091 Move X7, [X23]
	092 Move X3, [X31+8]
	093 Move X0, [X31+16]
	094 Move X1, X24
	095 Move X2, X26
	096 Call ObjectWriter.WriteMemberSetup, X0, X1, X2, X3, X4, X5, X6, X7
	097 Add X28, X28, 1
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X8, [X24+104]
	100 Move [X26+24], X8
	101 Move X8, [X31+16]
	102 Move X8, [X8+64]
	103 Compare X8, 0
	104 JumpIfEqual {169}
	105 Move X20, [X31+112]
	106 Move X19, [X31+120]
	107 Move X22, [X31+96]
	108 Move X21, [X31+104]
	109 Move X24, [X31+80]
	110 Move X23, [X31+88]
	111 Move X26, [X31+64]
	112 Move X25, [X31+72]
	113 Move X28, [X31+48]
	114 Move X27, [X31+56]
	115 Move X29, [X31+32]
	116 Move X30, [X31+40]
	117 Add X31, X31, 128
	118 Return 
	119 Call 0x1C17F28
	120 Move X9, [X31+16]
	121 Move X9, [X9+80]
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move X8, [X31+16]
	124 Move X21, [X8+88]
	125 Compare X21, 0
	126 JumpIfNotEqual {151}
	127 Move X22, 0xE6B000
	128 Move X22, [X22+3968]
	129 Move X21, [X24+32]
	130 Move X0, [X22]
	131 Move W8, [X0+224]
	132 Compare W8, 0
	133 JumpIfNotEqual {136}
	134 Call 0x1C17DFC
	135 Move X0, [X22]
	136 Move X8, [X0+184]
	137 Move X8, [X8+56]
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X8, [X31+8]
	140 Compare X8, 0
	141 JumpIfEqual {169}
	142 Move X8, [X24+104]
	143 Move X9, [X31+8]
	144 Move [X9+24], X8
	145 Move X8, [X31+16]
	146 Move X0, [X8+64]
	147 Compare X0, 0
	148 JumpIfEqual {169}
	149 Move X1, [X31+8]
	150 Move X2, X31
	151 Move X0, [X31+16]
	152 Call ObjectWriter.GetNameInfo, X0
	153 Compare X0, 0
	154 JumpIfEqual {169}
	155 Move [X0+16], X21
	156 Move X8, [X24+104]
	157 Move X1, X0
	158 Move [X0+24], X8
	159 Move X8, [X31+16]
	160 Move X0, [X8+64]
	161 Compare X0, 0
	162 JumpIfEqual {169}
	163 Move X2, [X31+8]
	164 Move X4, [X31+24]
	165 Move W3, W27
	166 Move X5, X20
	167 Move X6, X19
	168 Call __BinaryWriter.WriteObject, X0, X1, X2, X3, X4, X5, X6
	169 Call 0x1C17F20

Method: System.Void WriteMemberSetup(System.Runtime.Serialization.Formatters.Binary.WriteObjectInfo objectInfo, System.Runtime.Serialization.Formatters.Binary.NameInfo memberNameInfo, System.Runtime.Serialization.Formatters.Binary.NameInfo typeNameInfo, System.String memberName, System.Type memberType, System.Object memberData, System.Runtime.Serialization.Formatters.Binary.WriteObjectInfo memberObjectInfo)

Disassembly:
	0x032BA988 LDR X0, [X0 + 0x2C8]
	0x032BA98C BL 0x1C16CF4
	0x032BA990 MOVZ W8, 0x1
	0x032BA994 STRB W8, [X20 + 0x838]
	0x032BA998 LDR X0, [X21]
	0x032BA99C BL 0x1C16F10
	0x032BA9A0 MOVZ W8, 0x1
	0x032BA9A4 MOV X1, X31
	0x032BA9A8 MOV X20, X0
	0x032BA9AC STR W8, [X0 + 0x10]
	0x032BA9B0 BL 0x33BDD8C
	0x032BA9B4 MOV X0, X20
	0x032BA9B8 MOV X1, X19
	0x032BA9BC BL 0x32AC328
	0x032BA9C0 LDR W1, [X20 + 0x1C]
	0x032BA9C4 CMP W1, 0x1
	0x032BA9C8 B.LT 0x32BA9DC
	0x032BA9CC LDR X0, [X19 + 0x10]
	0x032BA9D0 CBZ X0, 0x32BAA18
	0x032BA9D4 BL 0x32B7F2C
	0x032BA9D8 B 0x32BA9E4
	0x032BA9DC CBZ X19, 0x32BAA18
	0x032BA9E0 SXTW X0, W1
	0x032BA9E4 STR X0, [X19 + 0x20]
	0x032BA9E8 LDRSW X0, [X20 + 0x20]
	0x032BA9EC CMP W0, 0x0
	0x032BA9F0 B.LE 0x32BAA08
	0x032BA9F4 LDR X8, [X19 + 0x10]
	0x032BA9F8 CBZ X8, 0x32BAA18
	0x032BA9FC AND X1, X0, 0x0
	0x032BAA00 MOV X0, X8
	0x032BAA04 BL 0x32B7F2C
	0x032BAA08 STR X0, [X19 + 0x28]
	0x032BAA0C LDP X20, X19, [X31 + 0x10]
	0x032BAA10 LDP X30, X21, [X31], #0x20
	0x032BAA14 RET
	0x032BAA18 BL 0x1C16F20
	0x032BAA1C STR X30, [X31 - 0x30]!
	0x032BAA20 STP X22, X21, [X31 + 0x10]
	0x032BAA24 STP X20, X19, [X31 + 0x20]
	0x032BAA28 ADRP X21, 0x1122000
	0x032BAA2C ADRP X22, 0xE6B000
	0x032BAA30 LDRB W8, [X21 + 0x839]
	0x032BAA34 LDR X22, [X22 + 0x328]
	0x032BAA38 MOV W20, W1
	0x032BAA3C MOV X19, X0
	0x032BAA40 TBNZ X8, 0x0, 0x32BAA7C
	0x032BAA44 ADRP X0, 0xE6B000
	0x032BAA48 LDR X0, [X0 + 0x38]
	0x032BAA4C BL 0x1C16CF4
	0x032BAA50 ADRP X0, 0xE6B000
	0x032BAA54 LDR X0, [X0 + 0x328]
	0x032BAA58 BL 0x1C16CF4
	0x032BAA5C ADRP X0, 0xE6B000
	0x032BAA60 LDR X0, [X0 + 0x510]
	0x032BAA64 BL 0x1C16CF4
	0x032BAA68 ADRP X0, 0xE3B000

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, X7
	011 Move X22, X6
	012 Move X25, X5
	013 Move X26, X4
	014 Move X24, X2
	015 Move X23, X1
	016 Move X19, X0
	017 Call ObjectWriter.GetNameInfo, X0
	018 Compare X0, 0
	019 JumpIfEqual {70}
	020 Move X20, X0
	021 Move [X0+16], X26
	022 Compare X21, 0
	023 JumpIfEqual {30}
	024 Move X8, [X21+112]
	025 Move X0, X19
	026 Move X1, X21
	027 Move [X20+48], X25
	028 Move [X20+32], X8
	029 Call ObjectWriter.TypeToNameInfo, X0, X1
	030 Move X0, X19
	031 Move X1, X25
	032 Move [X20+48], X25
	033 Call ObjectWriter.TypeToNameInfo, X0, X1
	034 Move X25, X0
	035 Compare X24, 0
	036 JumpIfEqual {70}
	037 Move W8, [X24+59]
	038 Move X0, X19
	039 Move X1, X20
	040 Move X2, X25
	041 Move [X20+59], W8
	042 Move W8, [X24+61]
	043 Move X3, X22
	044 Move X4, X23
	045 Move X6, X21
	046 Move [X20+61], W8
	047 Call ObjectWriter.WriteMembers, X0, X1, X2, X3, X4, X5, X6
	048 Move X0, [X19+184]
	049 Compare X0, 0
	050 JumpIfEqual {70}
	051 Move X1, X20
	052 Move X2, X31
	053 Call SerStack.Push, X0, X1
	054 Move X0, [X19+184]
	055 Compare X0, 0
	056 JumpIfEqual {70}
	057 Move X1, X25
	058 Move X20, [X31+64]
	059 Move X19, [X31+72]
	060 Move X22, [X31+48]
	061 Move X21, [X31+56]
	062 Move X24, [X31+32]
	063 Move X23, [X31+40]
	064 Move X26, [X31+16]
	065 Move X25, [X31+24]
	066 Move X2, X31
	067 Move X30, [X31+80]
	068 Call SerStack.Push, X0, X1
	069 Return 
	070 Call 0x1C17F20

Method: System.Void WriteMembers(System.Runtime.Serialization.Formatters.Binary.NameInfo memberNameInfo, System.Runtime.Serialization.Formatters.Binary.NameInfo memberTypeNameInfo, System.Object memberData, System.Runtime.Serialization.Formatters.Binary.WriteObjectInfo objectInfo, System.Runtime.Serialization.Formatters.Binary.NameInfo typeNameInfo, System.Runtime.Serialization.Formatters.Binary.WriteObjectInfo memberObjectInfo)

Disassembly:
	0x032BAAA8 MOV X1, X31
	0x032BAAAC MOV X20, X0
	0x032BAAB0 BL 0x33BDD8C
	0x032BAAB4 CBZ X20, 0x32BAB74
	0x032BAAB8 MOV X0, X20
	0x032BAABC MOV X1, X19
	0x032BAAC0 BL 0x32AC594
	0x032BAAC4 CBZ X21, 0x32BAB74
	0x032BAAC8 LDR W8, [X20 + 0x10]
	0x032BAACC STR W8, [X21 + 0x10]
	0x032BAAD0 LDR X0, [X19 + 0x10]
	0x032BAAD4 CBZ X0, 0x32BAB74
	0x032BAAD8 LDR W1, [X20 + 0x14]
	0x032BAADC BL 0x32B6038
	0x032BAAE0 CBZ X0, 0x32BAB78
	0x032BAAE4 ADRP X8, 0xE3B000
	0x032BAAE8 LDR X8, [X8 + 0x278]
	0x032BAAEC LDR X9, [X0]
	0x032BAAF0 LDR X8, [X8]
	0x032BAAF4 CMP X9, X8
	0x032BAAF8 CSEL X8, X0, X31, EQ
	0x032BAAFC STR X8, [X21 + 0x18]
	0x032BAB00 CBNZ X8, 0x32BAB18
	0x032BAB04 B 0x32BAB7C
	0x032BAB08 CBZ X21, 0x32BAB74
	0x032BAB0C MOV X0, X21
	0x032BAB10 MOV X1, X19
	0x032BAB14 BL 0x32AC52C
	0x032BAB18 ADRP X20, 0xE6B000
	0x032BAB1C LDR X20, [X20 + 0x38]
	0x032BAB20 MOV X0, X19
	0x032BAB24 BL 0x32BA894
	0x032BAB28 LDR X8, [X20]
	0x032BAB2C LDR W19, [X21 + 0x10]
	0x032BAB30 LDR X22, [X21 + 0x18]
	0x032BAB34 MOV X20, X0
	0x032BAB38 MOV X0, X8
	0x032BAB3C BL 0x1C16F10
	0x032BAB40 MOV X1, X31
	0x032BAB44 MOV X21, X0
	0x032BAB48 BL 0x33BDD8C
	0x032BAB4C STR X22, [X21 + 0x10]
	0x032BAB50 CBZ X20, 0x32BAB74
	0x032BAB54 MOV X0, X20
	0x032BAB58 MOV W1, W19
	0x032BAB5C MOV X2, X21
	0x032BAB60 LDP X20, X19, [X31 + 0x20]
	0x032BAB64 LDP X22, X21, [X31 + 0x10]
	0x032BAB68 MOV X3, X31
	0x032BAB6C LDR X30, [X31], #0x30
	0x032BAB70 B 0x32BDC28
	0x032BAB74 BL 0x1C16F20
	0x032BAB78 STR X31, [X21 + 0x18]
	0x032BAB7C ADRP X0, 0xE39000
	0x032BAB80 LDR X0, [X0 + 0x9D0]
	0x032BAB84 BL 0x1C16D08
	0x032BAB88 MOVZ W1, 0x2
	0x032BAB8C BL 0x1C16D6C
	0x032BAB90 MOV X19, X0
	0x032BAB94 BL 0x19903C0
	0x032BAB98 ADRP X21, 0xE6B000
	0x032BAB9C LDR X21, [X21 + 0x518]
	0x032BABA0 MOV X0, X21
	0x032BABA4 BL 0x1C16D08
	0x032BABA8 MOV X1, X0
	0x032BABAC MOV X0, X19
	0x032BABB0 BL 0x19980B4
	0x032BABB4 MOV X0, X21
	0x032BABB8 BL 0x1C16D08
	0x032BABBC MOV X2, X0
	0x032BABC0 MOV X0, X19
	0x032BABC4 MOV X1, X31
	0x032BABC8 BL 0x1993444
	0x032BABCC MOV X0, X20
	0x032BABD0 BL 0x19903C0
	0x032BABD4 LDR W8, [X20 + 0x14]
	0x032BABD8 ADRP X0, 0xE39000
	0x032BABDC STR W8, [X31 + 0xC]
	0x032BABE0 LDR X0, [X0 + 0x758]
	0x032BABE4 BL 0x1C16D08
	0x032BABE8 ADD X1, X31, 0xC
	0x032BABEC BL 0x1C16E04
	0x032BABF0 MOV X20, X0
	0x032BABF4 MOV X0, X19
	0x032BABF8 BL 0x19903C0
	0x032BABFC MOV X0, X19
	0x032BAC00 MOV X1, X20
	0x032BAC04 BL 0x19980B4
	0x032BAC08 MOVZ W1, 0x1
	0x032BAC0C MOV X0, X19
	0x032BAC10 MOV X2, X20
	0x032BAC14 BL 0x1993444
	0x032BAC18 ADRP X0, 0xE6B000
	0x032BAC1C LDR X0, [X0 + 0x520]
	0x032BAC20 BL 0x1C16D08
	0x032BAC24 MOV X1, X19
	0x032BAC28 MOV X2, X31
	0x032BAC2C BL 0x33BFB40
	0x032BAC30 MOV X19, X0
	0x032BAC34 ADRP X0, 0xE63000
	0x032BAC38 LDR X0, [X0 + 0x2E0]
	0x032BAC3C BL 0x1C16D08
	0x032BAC40 BL 0x1C16F10
	0x032BAC44 MOV X1, X19
	0x032BAC48 MOV X2, X31
	0x032BAC4C MOV X20, X0
	0x032BAC50 BL 0x329F100
	0x032BAC54 ADRP X0, 0xE6B000
	0x032BAC58 LDR X0, [X0 + 0x528]
	0x032BAC5C BL 0x1C16D08
	0x032BAC60 MOV X1, X0
	0x032BAC64 MOV X0, X20
	0x032BAC68 BL 0x1C16DEC
	0x032BAC6C STR X30, [X31 - 0x30]!
	0x032BAC70 STP X22, X21, [X31 + 0x10]
	0x032BAC74 STP X20, X19, [X31 + 0x20]
	0x032BAC78 ADRP X20, 0x1122000
	0x032BAC7C LDRB W8, [X20 + 0x83A]
	0x032BAC80 MOV X19, X0
	0x032BAC84 TBNZ X8, 0x0, 0x32BACB4
	0x032BAC88 ADRP X0, 0xE6B000
	0x032BAC8C LDR X0, [X0 + 0x2E8]
	0x032BAC90 BL 0x1C16CF4
	0x032BAC94 ADRP X0, 0xE6B000
	0x032BAC98 LDR X0, [X0 + 0x58]
	0x032BAC9C BL 0x1C16CF4
	0x032BACA0 ADRP X0, 0xE6B000
	0x032BACA4 LDR X0, [X0 + 0x68]
	0x032BACA8 BL 0x1C16CF4
	0x032BACAC MOVZ W8, 0x1
	0x032BACB0 STRB W8, [X20 + 0x83A]
	0x032BACB4 LDR X20, [X19 + 0x78]
	0x032BACB8 CBNZ X20, 0x32BACE0
	0x032BACBC ADRP X8, 0xE6B000
	0x032BACC0 LDR X8, [X8 + 0x2E8]
	0x032BACC4 LDR X0, [X8]
	0x032BACC8 BL 0x1C16F10
	0x032BACCC MOV X1, X31
	0x032BACD0 MOV X20, X0
	0x032BACD4 BL 0x33BDD8C
	0x032BACD8 STR X20, [X19 + 0x78]
	0x032BACDC CBZ X20, 0x32BAEAC
	0x032BACE0 MOV X0, X20
	0x032BACE4 MOV X1, X19
	0x032BACE8 BL 0x32AC674
	0x032BACEC LDR X8, [X19 + 0x78]
	0x032BACF0 CBZ X8, 0x32BAEAC
	0x032BACF4 MOV X0, X19
	0x032BACF8 BL 0x32BA830
	0x032BACFC LDR X8, [X19 + 0x78]
	0x032BAD00 CBZ X8, 0x32BAEAC
	0x032BAD04 CBZ X0, 0x32BAEAC
	0x032BAD08 LDR W1, [X8 + 0x14]
	0x032BAD0C MOV X2, X31
	0x032BAD10 BL 0x32BDBB4
	0x032BAD14 CBZ X0, 0x32BAEB0
	0x032BAD18 ADRP X8, 0xE6B000
	0x032BAD1C LDR X8, [X8 + 0x58]
	0x032BAD20 MOV X20, X0
	0x032BAD24 LDR X1, [X8]
	0x032BAD28 LDR X8, [X0]
	0x032BAD2C CMP X8, X1
	0x032BAD30 B.NE 0x32BAF6C
	0x032BAD34 MOV X0, X19
	0x032BAD38 BL 0x32BCAD0
	0x032BAD3C CBZ X0, 0x32BAEAC
	0x032BAD40 MOV X22, X0
	0x032BAD44 LDR X0, [X19 + 0x40]
	0x032BAD48 CBZ X0, 0x32BAEAC
	0x032BAD4C LDR X21, [X22 + 0x80]
	0x032BAD50 MOV X1, X22
	0x032BAD54 MOV X2, X31
	0x032BAD58 BL 0x32BD7AC
	0x032BAD5C MOVZ W8, 0x1
	0x032BAD60 STR W8, [X22 + 0x30]
	0x032BAD64 LDR X8, [X20 + 0x20]
	0x032BAD68 STR X8, [X22 + 0x60]
	0x032BAD6C LDR X9, [X20 + 0x38]
	0x032BAD70 STR X9, [X22 + 0x70]
	0x032BAD74 LDR X9, [X20 + 0x30]
	0x032BAD78 STR X9, [X22 + 0x78]
	0x032BAD7C LDR X9, [X20 + 0x28]
	0x032BAD80 STR X9, [X22 + 0x68]
	0x032BAD84 CBZ X8, 0x32BAEAC
	0x032BAD88 LDR X8, [X8 + 0x18]
	0x032BAD8C STR W8, [X22 + 0x5C]
	0x032BAD90 LDR X0, [X19 + 0x40]
	0x032BAD94 CBZ X0, 0x32BAEAC
	0x032BAD98 MOV X1, X31
	0x032BAD9C BL 0x32BD970
	0x032BADA0 CBZ X0, 0x32BADC4
	0x032BADA4 ADRP X8, 0xE6B000
	0x032BADA8 LDR X8, [X8 + 0x68]
	0x032BADAC LDR X1, [X8]
	0x032BADB0 LDR X8, [X0]
	0x032BADB4 CMP X8, X1
	0x032BADB8 B.NE 0x32BAF70
	0x032BADBC LDRB W8, [X0 + 0x10]
	0x032BADC0 CBZ W8, 0x32BAE5C
	0x032BADC4 LDR X8, [X20 + 0x10]
	0x032BADC8 STR X8, [X22 + 0x28]
	0x032BADCC CBZ X21, 0x32BAEAC
	0x032BADD0 MOVZ W8, 0x2

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X24, 0x1123000
	013 Move W8, [X24+2086]
	014 Move X19, X6
	015 Move X23, X4
	016 Move X22, X3
	017 Move X25, X2
	018 Move X20, X1
	019 Move X21, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0xE6B000
	025 Move X0, [X0+3968]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X24+2086], W8
	029 Compare X20, 0
	030 JumpIfEqual {259}
	031 Move X27, 0xE6B000
	032 Move X27, [X27+3968]
	033 Move X24, [X20+48]
	034 Move X0, [X27]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {40}
	038 Call 0x1C17DFC
	039 Move X0, [X27]
	040 Move X8, [X0+184]
	041 Move X8, [X8+192]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X0, X24
	044 Move X1, X31
	045 Call Nullable.GetUnderlyingType, X0
	046 Compare X0, 0
	047 JumpIfEqual {53}
	048 Compare X25, 0
	049 JumpIfEqual {259}
	050 Move W8, 1
	051 Move [X25+60], W8
	052 Move [X20+60], W8
	053 Move X8, [X21+104]
	054 Compare X8, 0
	055 JumpIfEqual {259}
	056 Move W8, [X8+16]
	057 Move TEMP, X8
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfEqual {66}
	061 Compare X23, 0
	062 JumpIfEqual {259}
	063 Move W8, [X23+40]
	064 Compare W8, 0
	065 JumpIfEqual {72}
	066 Compare X25, 0
	067 JumpIfEqual {259}
	068 Move W8, 1
	069 Move [X25+59], W8
	070 Move [X20+59], W8
	071 Move [X20+61], W8
	072 Move X0, X21
	073 Move X1, X23
	074 Move X2, X20
	075 Move X3, X25
	076 Move X4, X22
	077 Call ObjectWriter.CheckForNull, X0, X1, X2, X3, X4
	078 Move TEMP, X0
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfEqual {172}
	082 Compare X25, 0
	083 JumpIfEqual {259}
	084 Move W8, [X25+40]
	085 Compare W8, 0
	086 JumpIfEqual {88}
	087 Move X26, X31
	088 Compare X22, 0
	089 JumpIfEqual {259}
	090 Move X0, X22
	091 Move X1, X31
	092 Call "il2cpp_vm_object_is_inst", X0
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X26, X24
	095 Move W8, 1
	096 Move X26, X0
	097 Move [X25+60], W8
	098 Move [X20+60], W8
	099 Move X0, [X27]
	100 Move W8, [X0+224]
	101 Compare W8, 0
	102 JumpIfNotEqual {105}
	103 Call 0x1C17DFC
	104 Move X0, [X27]
	105 Move X8, [X0+184]
	106 Move X28, [X8+192]
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Compare X19, 0
	109 JumpIfNotEqual {121}
	110 Compare X22, 0
	111 JumpIfEqual {259}
	112 Move X0, X22
	113 Move X1, X31
	114 Call "il2cpp_vm_object_is_inst", X0
	115 Compare X19, 0
	116 JumpIfEqual {153}
	117 Move X0, X21
	118 Move X1, X19
	119 Move X2, X25
	120 Call ObjectWriter.TypeToNameInfo, X0, X1, X2
	121 Move W8, [X19+43]
	122 Compare W8, 0
	123 JumpIfEqual {163}
	124 Compare X26, 0
	125 JumpIfNotEqual {131}
	126 Compare X22, 0
	127 JumpIfEqual {259}
	128 Move X0, X22
	129 Move X1, X31
	130 Call "il2cpp_vm_object_is_inst", X0
	131 Move X0, X21
	132 Move X1, X22
	133 Move W2, W31
	134 Move X3, X31
	135 Move X4, X19
	136 Call ObjectWriter.Schedule, X0, X1, X2, X3, X4
	137 Move X22, X0
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X0, [X21+64]
	140 Compare X0, 0
	141 JumpIfEqual {259}
	142 Call __BinaryWriter.InternalWriteItemNull, X0
	143 Move X0, X21
	144 Move X1, X19
	145 Move X2, X20
	146 Move [X19+104], X22
	147 Move [X20+24], X22
	148 Call ObjectWriter.WriteArray, X0, X1, X2, X3
	149 Compare X23, 0
	150 JumpIfEqual {259}
	151 Move X0, [X23+96]
	152 Move X1, X23
	153 Move X27, X0
	154 Move X0, X21
	155 Move X1, X27
	156 Call ObjectWriter.ToCode, X0, X1
	157 Move W3, W0
	158 Move X0, X21
	159 Move X1, X27
	160 Move X2, X31
	161 Move X4, X25
	162 Call ObjectWriter.TypeToNameInfo, X0, X1, X2, X3, X4
	163 Move X0, X21
	164 Move X1, X20
	165 Move X2, X25
	166 Move X3, X22
	167 Call ObjectWriter.WriteKnownValueClass, X0, X1, X2, X3
	168 Move TEMP, X0
	169 And TEMP, TEMP, 1
	170 Compare TEMP, 1
	171 JumpIfNotEqual {184}
	172 Move X20, [X31+80]
	173 Move X19, [X31+88]
	174 Move X22, [X31+64]
	175 Move X21, [X31+72]
	176 Move X24, [X31+48]
	177 Move X23, [X31+56]
	178 Move X26, [X31+32]
	179 Move X25, [X31+40]
	180 Move X28, [X31+16]
	181 Move X27, [X31+24]
	182 Move X30, [X31+96]
	183 Return 
	184 Compare X26, 0
	185 JumpIfNotEqual {192}
	186 Compare X22, 0
	187 JumpIfEqual {259}
	188 Move X0, X22
	189 Move X1, X31
	190 Call "il2cpp_vm_object_is_inst", X0
	191 Move X26, X0
	192 NotImplemented "Instruction CMP not yet implemented."
	193 NotImplemented "Instruction CSET not yet implemented."
	194 Move X0, X21
	195 Move X1, X22
	196 Move X3, X26
	197 Move X4, X19
	198 Call ObjectWriter.Schedule, X0, X1, X2, X3, X4
	199 Move X22, X0
	200 Move TEMP, X0
	201 And TEMP, TEMP, 1
	202 Compare TEMP, 1
	203 JumpIfEqual {223}
	204 Move [X20+24], X22
	205 Move X0, [X21+64]
	206 Compare X0, 0
	207 JumpIfEqual {259}
	208 Move X1, X20
	209 Move W2, W22
	210 Move X20, [X31+80]
	211 Move X19, [X31+88]
	212 Move X22, [X31+64]
	213 Move X21, [X31+72]
	214 Move X24, [X31+48]
	215 Move X23, [X31+56]
	216 Move X26, [X31+32]
	217 Move X25, [X31+40]
	218 Move X28, [X31+16]
	219 Move X27, [X31+24]
	220 Move X30, [X31+96]
	221 Call __BinaryWriter.WriteMemberObjectRef, X0, X1, X2
	222 Return 
	223 Compare X19, 0
	224 JumpIfEqual {259}
	225 Move X0, X21
	226 Move X1, X19
	227 Move [X19+104], X22
	228 Call ObjectWriter.TypeToNameInfo, X0, X1
	229 Compare X0, 0
	230 JumpIfEqual {259}
	231 Move X23, X0
	232 Move [X0+24], X22
	233 Move X0, X21
	234 Move X1, X19
	235 Move X2, X20
	236 Move X3, X23
	237 Call ObjectWriter.Write, X0, X1, X2, X3
	238 Move X0, [X21+184]
	239 Compare X0, 0
	240 JumpIfEqual {259}
	241 Move X1, X23
	242 Move X2, X31
	243 Call SerStack.Push, X0, X1
	244 Move X0, [X19+96]
	245 Move X1, X19
	246 Move X20, [X31+80]
	247 Move X19, [X31+88]
	248 Move X22, [X31+64]
	249 Move X21, [X31+72]
	250 Move X24, [X31+48]
	251 Move X23, [X31+56]
	252 Move X26, [X31+32]
	253 Move X25, [X31+40]
	254 Move X28, [X31+16]
	255 Move X27, [X31+24]
	256 Move X30, [X31+96]
	257 Call WriteObjectInfo.PutObjectInfo, X0, X1
	258 Return 
	259 Call 0x1C17F20

Method: System.Void WriteArray(System.Runtime.Serialization.Formatters.Binary.WriteObjectInfo objectInfo, System.Runtime.Serialization.Formatters.Binary.NameInfo memberNameInfo, System.Runtime.Serialization.Formatters.Binary.WriteObjectInfo memberObjectInfo)

Disassembly:
	0x032B9FF0 LDR X23, [X20 + 0x30]
	0x032B9FF4 LDR X0, [X24]
	0x032B9FF8 LDR W8, [X0 + 0xE0]
	0x032B9FFC CBNZ W8, 0x32BA008
	0x032BA000 BL 0x1C16DFC
	0x032BA004 LDR X0, [X24]
	0x032BA008 LDR X8, [X0 + 0xB8]
	0x032BA00C LDR X8, [X8 + 0x38]
	0x032BA010 CMP X23, X8
	0x032BA014 B.EQ 0x32BA050
	0x032BA018 LDR W8, [X20 + 0x28]
	0x032BA01C CBZ W8, 0x32BA06C
	0x032BA020 LDR X22, [X22 + 0x40]
	0x032BA024 CBZ X22, 0x32BA084
	0x032BA028 LDRB W8, [X20 + 0x39]
	0x032BA02C CBZ W8, 0x32BA038
	0x032BA030 MOV X0, X22
	0x032BA034 BL 0x32B25B4
	0x032BA038 MOV X0, X22
	0x032BA03C MOV X1, X21
	0x032BA040 MOV X2, X20
	0x032BA044 MOV X3, X19
	0x032BA048 BL 0x32B2FA8
	0x032BA04C B 0x32BA064
	0x032BA050 MOV X0, X22
	0x032BA054 MOV X1, X21
	0x032BA058 MOV X2, X20
	0x032BA05C MOV X3, X19
	0x032BA060 BL 0x32BA554
	0x032BA064 MOVZ W0, 0x1
	0x032BA068 B 0x32BA070
	0x032BA06C MOV W0, W31
	0x032BA070 LDP X20, X19, [X31 + 0x30]
	0x032BA074 LDP X22, X21, [X31 + 0x20]
	0x032BA078 LDP X24, X23, [X31 + 0x10]
	0x032BA07C LDR X30, [X31], #0x40
	0x032BA080 RET
	0x032BA084 BL 0x1C16F20
	0x032BA088 SUB X31, X31, 0x50
	0x032BA08C STP X30, X25, [X31 + 0x10]
	0x032BA090 STP X24, X23, [X31 + 0x20]
	0x032BA094 STP X22, X21, [X31 + 0x30]
	0x032BA098 STP X20, X19, [X31 + 0x40]
	0x032BA09C ADRP X23, 0x1122000
	0x032BA0A0 LDRB W8, [X23 + 0x828]
	0x032BA0A4 MOV X22, X3
	0x032BA0A8 MOV X19, X2
	0x032BA0AC MOV X21, X1
	0x032BA0B0 MOV X20, X0
	0x032BA0B4 TBNZ X8, 0x0, 0x32BA0CC
	0x032BA0B8 ADRP X0, 0xE6A000
	0x032BA0BC LDR X0, [X0 + 0xF80]
	0x032BA0C0 BL 0x1C16CF4
	0x032BA0C4 MOVZ W8, 0x1
	0x032BA0C8 STRB W8, [X23 + 0x828]
	0x032BA0CC CBZ X19, 0x32BA308
	0x032BA0D0 MOVZ W8, 0x1
	0x032BA0D4 MOV X0, X20
	0x032BA0D8 MOV X1, X21
	0x032BA0DC MOV X2, X19
	0x032BA0E0 MOV X3, X19
	0x032BA0E4 MOV X4, X22
	0x032BA0E8 STRB W8, [X19 + 0x3A]
	0x032BA0EC BL 0x32B9DD4
	0x032BA0F0 TBNZ X0, 0x0, 0x32BA2F0
	0x032BA0F4 LDRB W8, [X19 + 0x3C]
	0x032BA0F8 CBZ W8, 0x32BA134
	0x032BA0FC CBZ X22, 0x32BA308
	0x032BA100 MOV X0, X22
	0x032BA104 MOV X1, X31
	0x032BA108 BL 0x33BE520
	0x032BA10C MOV X1, X0
	0x032BA110 MOV X0, X20
	0x032BA114 BL 0x32B9A6C
	0x032BA118 CBZ X0, 0x32BA308
	0x032BA11C MOVZ W8, 0x1
	0x032BA120 STRB W8, [X0 + 0x3C]
	0x032BA124 LDUR V0, [X19 + 0x18]
	0x032BA128 MOV X21, X0
	0x032BA12C STUR V0, [X0 + 0x18]
	0x032BA130 B 0x32BA174
	0x032BA134 MOV X0, X19
	0x032BA138 MOV X1, X31
	0x032BA13C BL 0x32BED10
	0x032BA140 MOV X21, X19
	0x032BA144 TBNZ X0, 0x0, 0x32BA174
	0x032BA148 CBZ X22, 0x32BA308
	0x032BA14C MOV X0, X22
	0x032BA150 MOV X1, X31
	0x032BA154 BL 0x33BE520
	0x032BA158 LDR X8, [X19 + 0x30]
	0x032BA15C MOV X21, X19
	0x032BA160 CMP X8, X0
	0x032BA164 B.EQ 0x32BA174
	0x032BA168 MOV X1, X0
	0x032BA16C CBNZ X0, 0x32BA110
	0x032BA170 B 0x32BA100
	0x032BA174 MOVZ W8, 0x1
	0x032BA178 MOV X0, X20
	0x032BA17C MOV X1, X19
	0x032BA180 MOV X2, X21
	0x032BA184 MOV X3, X22
	0x032BA188 STRB W8, [X21 + 0x3A]
	0x032BA18C BL 0x32B9FA4
	0x032BA190 TBNZ X0, 0x0, 0x32BA2C0
	0x032BA194 ADRP X24, 0xE6A000
	0x032BA198 LDR X24, [X24 + 0xF80]
	0x032BA19C LDR X23, [X19 + 0x30]
	0x032BA1A0 LDR X0, [X24]
	0x032BA1A4 LDR W8, [X0 + 0xE0]
	0x032BA1A8 CBNZ W8, 0x32BA1B4
	0x032BA1AC BL 0x1C16DFC
	0x032BA1B0 LDR X0, [X24]
	0x032BA1B4 LDR X8, [X0 + 0xB8]
	0x032BA1B8 LDR X3, [X21 + 0x30]
	0x032BA1BC MOV X0, X20
	0x032BA1C0 MOV X1, X22
	0x032BA1C4 LDR X8, [X8 + 0xC0]
	0x032BA1C8 MOV X4, X31
	0x032BA1CC CMP X23, X8
	0x032BA1D0 CSET W2, EQ
	0x032BA1D4 BL 0x32B9F00
	0x032BA1D8 MOV X23, X0
	0x032BA1DC CMP X0, 0x0
	0x032BA1E0 STR X0, [X19 + 0x18]
	0x032BA1E4 STR X0, [X21 + 0x18]
	0x032BA1E8 B.LE 0x32BA210
	0x032BA1EC LDR X22, [X20 + 0x40]
	0x032BA1F0 CBZ X22, 0x32BA308
	0x032BA1F4 MOV X0, X22
	0x032BA1F8 BL 0x32B25B4
	0x032BA1FC MOV X0, X22
	0x032BA200 MOV X1, X19
	0x032BA204 MOV W2, W23
	0x032BA208 BL 0x32B314C
	0x032BA20C B 0x32BA2C0
	0x032BA210 LDP X1, X2, [X20 + 0x28]
	0x032BA214 LDR X3, [X20 + 0x38]
	0x032BA218 LDP X4, X5, [X20 + 0x78]
	0x032BA21C LDR X7, [X20 + 0x70]
	0x032BA220 MOV X0, X22
	0x032BA224 MOV X6, X20
	0x032BA228 BL 0x32B3400
	0x032BA22C CBZ X0, 0x32BA308
	0x032BA230 STR X23, [X0 + 0x68]
	0x032BA234 MOV X22, X0
	0x032BA238 LDR X0, [X24]
	0x032BA23C LDR X25, [X19 + 0x30]
	0x032BA240 LDR W8, [X0 + 0xE0]
	0x032BA244 CBNZ W8, 0x32BA250
	0x032BA248 BL 0x1C16DFC
	0x032BA24C LDR X0, [X24]
	0x032BA250 LDR X8, [X0 + 0xB8]
	0x032BA254 LDR X8, [X8 + 0xC0]
	0x032BA258 CMP X25, X8
	0x032BA25C B.EQ 0x32BA270
	0x032BA260 LDR X0, [X19 + 0x30]
	0x032BA264 MOV X1, X31
	0x032BA268 BL 0x3380420
	0x032BA26C CBZ X0, 0x32BA280
	0x032BA270 MOV X0, X20
	0x032BA274 MOV X1, X22
	0x032BA278 BL 0x32B88AC
	0x032BA27C B 0x32BA284
	0x032BA280 LDR X0, [X21 + 0x20]
	0x032BA284 STR X0, [X22 + 0x70]
	0x032BA288 MOV X0, X20
	0x032BA28C MOV X1, X22
	0x032BA290 BL 0x32B8AB8
	0x032BA294 CBZ X0, 0x32BA308
	0x032BA298 MOV X3, X0
	0x032BA29C STR X23, [X0 + 0x18]
	0x032BA2A0 MOV X0, X20
	0x032BA2A4 MOV X1, X22
	0x032BA2A8 MOV X2, X21
	0x032BA2AC STR X23, [X22 + 0x68]
	0x032BA2B0 BL 0x32B8AFC
	0x032BA2B4 LDR X0, [X22 + 0x60]
	0x032BA2B8 MOV X1, X22
	0x032BA2BC BL 0x32B33C0
	0x032BA2C0 LDRB W8, [X19 + 0x3C]
	0x032BA2C4 CBZ W8, 0x32BA2F0
	0x032BA2C8 LDR X0, [X20 + 0xB8]
	0x032BA2CC CBZ X0, 0x32BA308
	0x032BA2D0 MOV X1, X21
	0x032BA2D4 LDP X20, X19, [X31 + 0x40]
	0x032BA2D8 LDP X22, X21, [X31 + 0x30]
	0x032BA2DC LDP X24, X23, [X31 + 0x20]
	0x032BA2E0 LDP X30, X25, [X31 + 0x10]
	0x032BA2E4 MOV X2, X31
	0x032BA2E8 ADD X31, X31, 0x50
	0x032BA2EC B 0x32BD7AC
	0x032BA2F0 LDP X20, X19, [X31 + 0x40]
	0x032BA2F4 LDP X22, X21, [X31 + 0x30]
	0x032BA2F8 LDP X24, X23, [X31 + 0x20]
	0x032BA2FC LDP X30, X25, [X31 + 0x10]
	0x032BA300 ADD X31, X31, 0x50
	0x032BA304 RET
	0x032BA308 BL 0x1C16F20
	0x032BA30C SUB X31, X31, 0x90
	0x032BA310 STP X29, X30, [X31 + 0x30]
	0x032BA314 STP X28, X27, [X31 + 0x40]
	0x032BA318 STP X26, X25, [X31 + 0x50]
	0x032BA31C STP X24, X23, [X31 + 0x60]
	0x032BA320 STP X22, X21, [X31 + 0x70]
	0x032BA324 STP X20, X19, [X31 + 0x80]
	0x032BA328 STP X5, X4, [X31 + 0x20]
	0x032BA32C STP X0, X1, [X31 + 0x10]
	0x032BA330 ADRP X21, 0x1122000
	0x032BA334 ADRP X20, 0xE3A000
	0x032BA338 LDRB W8, [X21 + 0x829]
	0x032BA33C LDR X20, [X20 + 0xE58]
	0x032BA340 MOV X19, X6
	0x032BA344 MOV X22, X3
	0x032BA348 MOV W23, W2
	0x032BA34C TBNZ X8, 0x0, 0x32BA364
	0x032BA350 ADRP X0, 0xE3A000
	0x032BA354 LDR X0, [X0 + 0xE58]
	0x032BA358 BL 0x1C16CF4
	0x032BA35C MOVZ W8, 0x1
	0x032BA360 STRB W8, [X21 + 0x829]
	0x032BA364 LDR X0, [X20]
	0x032BA368 MOV W1, W23
	0x032BA36C BL 0x1C16D6C
	0x032BA370 MOV X26, X0
	0x032BA374 MOV X27, X31
	0x032BA378 SUBS W21, W23, 0x1
	0x032BA37C MOV W12, W31
	0x032BA380 B.LT 0x32BA3D8
	0x032BA384 CBZ X19, 0x32BA3D8
	0x032BA388 LDR W9, [X19 + 0x18]
	0x032BA38C MOV W8, W31
	0x032BA390 MOV W10, W23
	0x032BA394 ADD X11, X19, 0x20
	0x032BA398 CMP W21, W9
	0x032BA39C B.CS 0x32BA540
	0x032BA3A0 LDR W12, [X11], #0x4
	0x032BA3A4 CMP W12, 0x0
	0x032BA3A8 CSINC W8, W8, W31, EQ
	0x032BA3AC SUBS X10, X10, 0x1
	0x032BA3B0 B.NE 0x32BA398
	0x032BA3B4 TBNZ X8, 0x0, 0x32BA3C4
	0x032BA3B8 MOV W12, W31
	0x032BA3BC MOV X27, X31
	0x032BA3C0 B 0x32BA3D8
	0x032BA3C4 LDR X0, [X20]
	0x032BA3C8 MOV W1, W23
	0x032BA3CC BL 0x1C16D6C
	0x032BA3D0 MOV X27, X0
	0x032BA3D4 MOVZ W12, 0x1
	0x032BA3D8 ADD X20, X26, 0x20
	0x032BA3DC ADD X8, X20, W21, 0x2, SXTW
	0x032BA3E0 MOV W29, W23
	0x032BA3E4 ADD X24, X19, 0x20
	0x032BA3E8 ADD X25, X27, 0x20
	0x032BA3EC SXTW X28, W21
	0x032BA3F0 ADD X21, X8, 0x4
	0x032BA3F4 STR W12, [X31 + 0xC]
	0x032BA3F8 CBZ W12, 0x32BA45C
	0x032BA3FC CMP W23, 0x1
	0x032BA400 B.LT 0x32BA454
	0x032BA404 CBZ X26, 0x32BA544
	0x032BA408 LDR W8, [X26 + 0x18]
	0x032BA40C MOV X9, X31
	0x032BA410 CMP X9, X8
	0x032BA414 B.CS 0x32BA540
	0x032BA418 CBZ X19, 0x32BA544
	0x032BA41C LDR W10, [X19 + 0x18]
	0x032BA420 CMP X9, X10
	0x032BA424 B.CS 0x32BA540
	0x032BA428 CBZ X27, 0x32BA544
	0x032BA42C LDR W10, [X27 + 0x18]
	0x032BA430 CMP X9, X10
	0x032BA434 B.CS 0x32BA540
	0x032BA438 LDR W10, [X20, X9, LSL #2]
	0x032BA43C LDR W11, [X24, X9, LSL #2]
	0x032BA440 ADD W10, W11, W10
	0x032BA444 STR W10, [X25, X9, LSL #2]
	0x032BA448 ADD X9, X9, 0x1
	0x032BA44C CMP X29, X9
	0x032BA450 B.NE 0x32BA410
	0x032BA454 MOV X1, X27
	0x032BA458 B 0x32BA460
	0x032BA45C MOV X1, X26
	0x032BA460 LDR X0, [X31 + 0x28]
	0x032BA464 CBZ X0, 0x32BA544
	0x032BA468 MOV X2, X31
	0x032BA46C BL 0x33A137C
	0x032BA470 MOV X3, X0
	0x032BA474 LDP X0, X1, [X31 + 0x10]
	0x032BA478 LDR X2, [X31 + 0x20]
	0x032BA47C BL 0x32BA088
	0x032BA480 TBNZ X28, 0x1F, 0x32BA520
	0x032BA484 CBZ X26, 0x32BA544
	0x032BA488 LDR X9, [X26 + 0x18]
	0x032BA48C MOV X8, X31
	0x032BA490 MOV X10, X28
	0x032BA494 MOV W11, W23
	0x032BA498 SUB W12, W11, 0x1
	0x032BA49C CMP W12, W9
	0x032BA4A0 B.CS 0x32BA540
	0x032BA4A4 ADD X13, X26, X12, 0x2, LSL
	0x032BA4A8 LDR W14, [X13 + 0x20]!
	0x032BA4AC CBZ X22, 0x32BA544
	0x032BA4B0 LDR W15, [X22 + 0x18]
	0x032BA4B4 CMP W12, W15
	0x032BA4B8 B.CS 0x32BA540
	0x032BA4BC ADD X15, X22, X12, 0x2, LSL
	0x032BA4C0 LDR W15, [X15 + 0x20]
	0x032BA4C4 SUB W15, W15, 0x1
	0x032BA4C8 CMP W14, W15
	0x032BA4CC B.LT 0x32BA4E8
	0x032BA4D0 SUB X10, X10, 0x1
	0x032BA4D4 CMP W12, 0x0
	0x032BA4D8 SUB X8, X8, 0x1
	0x032BA4DC MOV W11, W12
	0x032BA4E0 B.GT 0x32BA498
	0x032BA4E4 B 0x32BA520
	0x032BA4E8 CMP W12, W28
	0x032BA4EC LDR W12, [X31 + 0xC]
	0x032BA4F0 ADD W10, W14, 0x1
	0x032BA4F4 STR W10, [X13]
	0x032BA4F8 B.GE 0x32BA3F8
	0x032BA4FC CMP W11, W23
	0x032BA500 B.GE 0x32BA3F8
	0x032BA504 ADD W10, W29, W8
	0x032BA508 CMP W10, W9
	0x032BA50C B.CS 0x32BA540
	0x032BA510 STR W31, [X21, X8, LSL #2]
	0x032BA514 ADD X8, X8, 0x1
	0x032BA518 CBNZ W8, 0x32BA504
	0x032BA51C B 0x32BA3F8
	0x032BA520 LDP X20, X19, [X31 + 0x80]
	0x032BA524 LDP X22, X21, [X31 + 0x70]
	0x032BA528 LDP X24, X23, [X31 + 0x60]
	0x032BA52C LDP X26, X25, [X31 + 0x50]
	0x032BA530 LDP X28, X27, [X31 + 0x40]
	0x032BA534 LDP X29, X30, [X31 + 0x30]
	0x032BA538 ADD X31, X31, 0x90
	0x032BA53C RET
	0x032BA540 BL 0x1C16F28
	0x032BA544 BL 0x1C16F20
	0x032BA548 AND W2, W2, 0x1
	0x032BA54C MOV X4, X31
	0x032BA550 B 0x32B9F00
	0x032BA554 SUB X31, X31, 0x40
	0x032BA558 STP X30, X23, [X31 + 0x10]
	0x032BA55C STP X22, X21, [X31 + 0x20]
	0x032BA560 STP X20, X19, [X31 + 0x30]
	0x032BA564 ADRP X23, 0x1122000
	0x032BA568 LDRB W8, [X23 + 0x82C]
	0x032BA56C MOV X20, X3
	0x032BA570 MOV X21, X2
	0x032BA574 MOV X19, X1
	0x032BA578 MOV X22, X0
	0x032BA57C TBNZ X8, 0x0, 0x32BA594
	0x032BA580 ADRP X0, 0xE3B000
	0x032BA584 LDR X0, [X0 + 0x278]
	0x032BA588 BL 0x1C16CF4
	0x032BA58C MOVZ W8, 0x1
	0x032BA590 STRB W8, [X23 + 0x82C]
	0x032BA594 MOVZ W8, 0x1
	0x032BA598 STRB W8, [X31 + 0xC]
	0x032BA59C LDR X8, [X22 + 0x68]
	0x032BA5A0 CBZ X8, 0x32BA63C
	0x032BA5A4 LDRB W8, [X8 + 0x10]
	0x032BA5A8 TBNZ X8, 0x1, 0x32BA5CC
	0x032BA5AC ADD X4, X31, 0xC
	0x032BA5B0 MOV X0, X22
	0x032BA5B4 MOV X1, X20
	0x032BA5B8 MOV W2, W31
	0x032BA5BC MOV X3, X31
	0x032BA5C0 BL 0x32B87E8
	0x032BA5C4 MOV X2, X0
	0x032BA5C8 B 0x32BA5D0
	0x032BA5CC MOVN X2, 0x0
	0x032BA5D0 CBZ X21, 0x32BA63C
	0x032BA5D4 STR X2, [X21 + 0x18]
	0x032BA5D8 LDR X0, [X22 + 0x40]
	0x032BA5DC TBNZ X2, 0x0, 0x32BA5F8
	0x032BA5E0 LDRB W8, [X31 + 0xC]
	0x032BA5E4 CBNZ W8, 0x32BA5F8
	0x032BA5E8 CBZ X0, 0x32BA63C
	0x032BA5EC MOV X1, X19
	0x032BA5F0 BL 0x32B314C
	0x032BA5F4 B 0x32BA628
	0x032BA5F8 CBZ X0, 0x32BA63C
	0x032BA5FC CBZ X20, 0x32BA618
	0x032BA600 ADRP X8, 0xE3B000
	0x032BA604 LDR X8, [X8 + 0x278]
	0x032BA608 LDR X1, [X8]
	0x032BA60C LDR X8, [X20]
	0x032BA610 CMP X8, X1
	0x032BA614 B.NE 0x32BA640
	0x032BA618 MOV X1, X19
	0x032BA61C MOV X2, X21
	0x032BA620 MOV X3, X20
	0x032BA624 BL 0x32B31FC
	0x032BA628 LDP X20, X19, [X31 + 0x30]
	0x032BA62C LDP X22, X21, [X31 + 0x20]
	0x032BA630 LDP X30, X23, [X31 + 0x10]
	0x032BA634 ADD X31, X31, 0x40
	0x032BA638 RET
	0x032BA63C BL 0x1C16F20
	0x032BA640 MOV X0, X20
	0x032BA644 BL 0x1C171E0
	0x032BA648 STR X30, [X31 - 0x30]!
	0x032BA64C STP X22, X21, [X31 + 0x10]
	0x032BA650 STP X20, X19, [X31 + 0x20]
	0x032BA654 MOV W19, W3
	0x032BA658 MOV X22, X2
	0x032BA65C MOV X20, X1
	0x032BA660 CBZ X4, 0x32BA67C
	0x032BA664 MOV X0, X4
	0x032BA668 MOV X1, X31
	0x032BA66C MOV X21, X4
	0x032BA670 BL 0x32BECF0
	0x032BA674 CBNZ X22, 0x32BA688
	0x032BA678 B 0x32BA6B4
	0x032BA67C BL 0x32BA6D8
	0x032BA680 MOV X21, X0
	0x032BA684 CBZ X22, 0x32BA6B4
	0x032BA688 CBNZ W19, 0x32BA6B4
	0x032BA68C LDR X8, [X22 + 0x78]
	0x032BA690 CBNZ X8, 0x32BA6A0
	0x032BA694 LDR X8, [X22 + 0x38]
	0x032BA698 CBZ X8, 0x32BA6D4
	0x032BA69C LDR X8, [X8 + 0x10]
	0x032BA6A0 CBZ X21, 0x32BA6D4
	0x032BA6A4 STR X8, [X21 + 0x10]
	0x032BA6A8 LDR X8, [X22 + 0x70]
	0x032BA6AC STR X8, [X21 + 0x20]
	0x032BA6B0 B 0x32BA6B8
	0x032BA6B4 CBZ X21, 0x32BA6D4
	0x032BA6B8 STR W19, [X21 + 0x28]
	0x032BA6BC STR X20, [X21 + 0x30]
	0x032BA6C0 MOV X0, X21
	0x032BA6C4 LDP X20, X19, [X31 + 0x20]
	0x032BA6C8 LDP X22, X21, [X31 + 0x10]
	0x032BA6CC LDR X30, [X31], #0x30
	0x032BA6D0 RET
	0x032BA6D4 BL 0x1C16F20
	0x032BA6D8 STR X30, [X31 - 0x20]!
	0x032BA6DC STP X20, X19, [X31 + 0x10]
	0x032BA6E0 ADRP X20, 0x1122000
	0x032BA6E4 LDRB W8, [X20 + 0x82F]
	0x032BA6E8 MOV X19, X0
	0x032BA6EC TBNZ X8, 0x0, 0x32BA704
	0x032BA6F0 ADRP X0, 0xE6B000
	0x032BA6F4 LDR X0, [X0 + 0x500]
	0x032BA6F8 BL 0x1C16CF4
	0x032BA6FC MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X19, 0x1123000
	015 Move W8, [X19+2087]
	016 Move X21, X2
	017 Move X22, X1
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {40}
	023 Move X0, 0xE3A000
	024 Move X0, [X0+1560]
	025 Call 0x1C17CF4
	026 Move X0, 0xE6B000
	027 Move X0, [X0+3968]
	028 Call 0x1C17CF4
	029 Move X0, 0xE3B000
	030 Move X0, [X0+3672]
	031 Call 0x1C17CF4
	032 Move X0, 0xE3A000
	033 Move X0, [X0+2512]
	034 Call 0x1C17CF4
	035 Move X0, 0xE3A000
	036 Move X0, [X0+3824]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X19+2087], W8
	040 Move X19, X21
	041 Compare X21, 0
	042 JumpIfNotEqual {49}
	043 Move X0, X20
	044 Move X1, X22
	045 Call ObjectWriter.TypeToNameInfo, X0, X1
	046 Move X19, X0
	047 Compare X0, 0
	048 JumpIfEqual {518}
	049 Move W8, 1
	050 Move [X19+57], W8
	051 Compare X22, 0
	052 JumpIfEqual {518}
	053 Move X27, [X22+104]
	054 Move [X19+24], X27
	055 Move X24, [X22+24]
	056 Compare X24, 0
	057 JumpIfEqual {69}
	058 Move X9, 0xE3A000
	059 Move X9, [X9+3824]
	060 Move X8, [X24]
	061 Move X1, [X9]
	062 Move W10, [X8+304]
	063 Move W9, [X1+304]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X8, [X8+200]
	066 Add X8, X8, X9
	067 NotImplemented "Instruction LDUR not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X0, [X22+32]
	070 Compare X0, 0
	071 JumpIfEqual {518}
	072 Move X8, [X0]
	073 Move X9, [X8+1064]
	074 Move X1, [X8+1072]
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Compare X0, 0
	077 JumpIfEqual {518}
	078 Move X1, X31
	079 Move X25, X0
	080 Call Type.get_IsPrimitive, X0
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfNotEqual {90}
	085 Move X0, X20
	086 Move X1, X25
	087 Call ObjectWriter.TypeToNameInfo, X0, X1
	088 Move X23, X0
	089 Move X26, X31
	090 Move X1, [X20+40]
	091 Move X2, [X20+48]
	092 Move X3, [X20+56]
	093 Move X4, [X20+120]
	094 Move X5, [X20+128]
	095 Move X6, [X20+112]
	096 Move X0, X25
	097 Call WriteObjectInfo.Serialize, X0, X1, X2, X3, X4, X5
	098 Move X26, X0
	099 Move X0, X20
	100 Move X1, X26
	101 Call ObjectWriter.GetAssemblyId, X0, X1
	102 Compare X26, 0
	103 JumpIfEqual {518}
	104 Move [X26+112], X0
	105 Move X0, X20
	106 Move X1, X26
	107 Call ObjectWriter.TypeToNameInfo, X0, X1
	108 Move X23, X0
	109 Compare X23, 0
	110 JumpIfEqual {518}
	111 Move X0, [X23+48]
	112 Compare X0, 0
	113 JumpIfEqual {518}
	114 Move X1, X31
	115 Move [X31+24], X21
	116 Move [X31+32], X26
	117 Move [X31+40], X20
	118 Move [X31+48], X25
	119 Move [X31+16], X22
	120 Call Type.get_IsArray, X0
	121 And W8, W0, 1
	122 Move W9, 1
	123 Move [X23+57], W8
	124 Move [X19+24], X27
	125 Move [X19+57], W9
	126 Move [X23+24], X27
	127 Move W8, [X19+60]
	128 Move [X31+8], X27
	129 Move [X31+56], X19
	130 Move [X23+60], W8
	131 Move W8, [X19+59]
	132 Move [X23+59], W8
	133 Move W8, [X19+61]
	134 Move [X23+61], W8
	135 Compare X24, 0
	136 JumpIfEqual {518}
	137 Move X19, 0xE3B000
	138 Move X19, [X19+3672]
	139 Move X0, X24
	140 Move X1, X31
	141 Call Array.get_Rank, X0
	142 Move X8, [X19]
	143 Move W21, W0
	144 Move W1, W21
	145 Move X0, X8
	146 Call 0x1C17D6C
	147 Move X8, [X19]
	148 Move X29, X0
	149 Move W1, W21
	150 Move X0, X8
	151 Call 0x1C17D6C
	152 Move X8, [X19]
	153 Move X25, X0
	154 Move W1, W21
	155 Move X0, X8
	156 Call 0x1C17D6C
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Move X26, X0
	159 Move X28, X31
	160 Move W20, W21
	161 Add X27, X29, 32
	162 Add X22, X25, 32
	163 Add X19, X26, 32
	164 Move X0, X24
	165 Move W1, W28
	166 Move X2, X31
	167 Call Array.GetLength, X0, X1
	168 Compare X29, 0
	169 JumpIfEqual {518}
	170 Move W8, [X29+24]
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Move [X27], W0
	173 Move X0, X24
	174 Move W1, W28
	175 Move X2, X31
	176 Call Array.GetLowerBound, X0, X1
	177 Compare X25, 0
	178 JumpIfEqual {518}
	179 Move W8, [X25+24]
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Move [X22], W0
	182 Move X0, X24
	183 Move W1, W28
	184 Move X2, X31
	185 Call Array.GetUpperBound, X0, X1
	186 Compare X26, 0
	187 JumpIfEqual {518}
	188 Move W8, [X26+24]
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move [X19], W0
	191 Add X28, X28, 1
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Move X19, 0xE6B000
	194 Move X19, [X19+3968]
	195 Move W8, [X23+57]
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Move W9, 2
	198 Move W10, 3
	199 NotImplemented "Instruction CSET not yet implemented."
	200 NotImplemented "Instruction CINC not yet implemented."
	201 NotImplemented "Instruction CSINC not yet implemented."
	202 NotImplemented "Instruction CMP not yet implemented."
	203 NotImplemented "Instruction CSEL not yet implemented."
	204 Move [X23+64], W8
	205 Move X0, [X19]
	206 NotImplemented "Instruction CSET not yet implemented."
	207 NotImplemented "Instruction CSET not yet implemented."
	208 Move W8, [X0+224]
	209 Compare W8, 0
	210 JumpIfNotEqual {213}
	211 Call 0x1C17DFC
	212 Move X0, [X19]
	213 Move X22, [X31+40]
	214 Move X8, [X0+184]
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Move X9, [X8+80]
	217 Move X10, [X31+48]
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Compare X25, 0
	220 JumpIfEqual {518}
	221 Move W9, [X25+24]
	222 Compare W9, 0
	223 JumpIfEqual {410}
	224 Move W9, [X25+32]
	225 Compare W9, 0
	226 JumpIfEqual {476}
	227 Move W9, [X0+224]
	228 Compare W9, 0
	229 JumpIfNotEqual {233}
	230 Call 0x1C17DFC
	231 Move X8, [X19]
	232 Move X8, [X8+184]
	233 Move X8, [X8+192]
	234 Move X9, [X31+48]
	235 NotImplemented "Instruction CMP not yet implemented."
	236 Move X0, [X31+48]
	237 Move X1, X31
	238 Call Nullable.GetUnderlyingType, X0
	239 Compare X0, 0
	240 JumpIfEqual {245}
	241 Move X9, [X31+56]
	242 Move W8, 1
	243 Move [X9+60], W8
	244 Move [X23+60], W8
	245 Move X8, [X22+104]
	246 Compare X8, 0
	247 JumpIfEqual {518}
	248 Move W9, [X8+16]
	249 And W8, W28, W20
	250 Move TEMP, X9
	251 And TEMP, TEMP, 1
	252 Compare TEMP, 1
	253 JumpIfNotEqual {258}
	254 Move X10, [X31+56]
	255 Move W9, 1
	256 Move [X10+59], W9
	257 Move [X23+59], W9
	258 Compare W8, 0
	259 JumpIfEqual {350}
	260 Compare X29, 0
	261 JumpIfEqual {518}
	262 Move W8, [X29+24]
	263 Compare W8, 0
	264 JumpIfEqual {410}
	265 Compare X25, 0
	266 JumpIfEqual {518}
	267 Move W8, [X25+24]
	268 Compare W8, 0
	269 JumpIfEqual {410}
	270 Move X0, [X22+64]
	271 Compare X0, 0
	272 JumpIfEqual {518}
	273 Move W5, [X29+32]
	274 Move W6, [X25+32]
	275 Move X2, [X31+56]
	276 Move X3, [X31+32]
	277 Move X4, X23
	278 Move X7, X24
	279 Call __BinaryWriter.WriteSingleArray, X0, X1, X2, X3, X4, X5, X6, X7
	280 Move X0, [X19]
	281 Move W21, [X23+40]
	282 Move W8, [X0+224]
	283 Compare W8, 0
	284 JumpIfNotEqual {286}
	285 Call 0x1C17DFC
	286 Move W0, W21
	287 Call Converter.IsWriteAsByteArray, X0
	288 Move X28, [X31+16]
	289 Move TEMP, X0
	290 And TEMP, TEMP, 1
	291 Compare TEMP, 1
	292 JumpIfNotEqual {299}
	293 Move W8, [X25+24]
	294 Compare W8, 0
	295 JumpIfEqual {410}
	296 Move W8, [X25+32]
	297 Compare W8, 0
	298 JumpIfEqual {444}
	299 Move X0, [X31+48]
	300 Move X1, X31
	301 Call Type.get_IsValueType, X0
	302 Move X21, X31
	303 Move TEMP, X0
	304 And TEMP, TEMP, 1
	305 Compare TEMP, 1
	306 JumpIfEqual {316}
	307 Move X8, 0xE3A000
	308 Move X8, [X8+2512]
	309 Move X0, X24
	310 Move X27, [X8]
	311 Move X1, X27
	312 Call 0x1C17E00
	313 Compare X0, 0
	314 JumpIfEqual {521}
	315 Move X21, X0
	316 Compare X26, 0
	317 JumpIfEqual {518}
	318 Move W8, [X26+24]
	319 Compare W8, 0
	320 JumpIfEqual {410}
	321 Move W8, [X25+24]
	322 Compare W8, 0
	323 JumpIfEqual {410}
	324 Move W8, [X26+32]
	325 Move W25, [X25+32]
	326 Add W8, W8, 1
	327 NotImplemented "Instruction CMP not yet implemented."
	328 Move X9, W25
	329 Move X8, W8
	330 Add X10, X21, X9
	331 Add X19, X10, 32
	332 Subtract X20, X8, X9
	333 Compare X21, 0
	334 JumpIfEqual {338}
	335 Move W8, [X21+24]
	336 NotImplemented "Instruction CMP not yet implemented."
	337 Move X3, [X19]
	338 Move X0, X24
	339 Move W1, W25
	340 Move X2, X31
	341 Call Array.GetValue, X0, X1
	342 Move X3, X0
	343 Move X0, X22
	344 Move X1, X28
	345 Move X2, X23
	346 Call ObjectWriter.WriteArrayMember, X0, X1, X2, X3
	347 Add X19, X19, 8
	348 Subtract X20, X20, 1
	349 Add W25, W25, 1
	350 Move X8, [X31+8]
	351 Move X9, [X31+56]
	352 Move [X9+24], X8
	353 Move X0, [X22+64]
	354 And W8, W28, W27
	355 Compare W8, 0
	356 JumpIfEqual {411}
	357 Compare X29, 0
	358 JumpIfEqual {518}
	359 Move W8, [X29+24]
	360 Compare W8, 0
	361 JumpIfEqual {410}
	362 Compare X25, 0
	363 JumpIfEqual {518}
	364 Move W8, [X25+24]
	365 Compare W8, 0
	366 JumpIfEqual {410}
	367 Compare X0, 0
	368 JumpIfEqual {518}
	369 Move W5, [X29+32]
	370 Move W6, [X25+32]
	371 Move X2, [X31+56]
	372 Move X3, [X31+32]
	373 Move X4, X23
	374 Call __BinaryWriter.WriteJaggedArray, X0, X1, X2, X3, X4, X5, X6
	375 Move X8, 0xE3A000
	376 Move X8, [X8+2512]
	377 Move X0, X24
	378 Move X27, [X8]
	379 Move X1, X27
	380 Call 0x1C17E00
	381 Compare X0, 0
	382 JumpIfEqual {521}
	383 Move W8, [X25+24]
	384 Move X24, [X31+16]
	385 Compare W8, 0
	386 JumpIfEqual {410}
	387 Compare X26, 0
	388 JumpIfEqual {518}
	389 Move W8, [X26+24]
	390 Compare W8, 0
	391 JumpIfEqual {410}
	392 NotImplemented "Instruction LDRSW not yet implemented."
	393 Move X21, X0
	394 Add X8, X0, X19
	395 Add X20, X8, 32
	396 Move W8, [X26+32]
	397 Add W8, W8, 1
	398 NotImplemented "Instruction CMP not yet implemented."
	399 Move W8, [X21+24]
	400 NotImplemented "Instruction CMP not yet implemented."
	401 Move X3, [X20+8]
	402 Move X0, X22
	403 Move X1, X24
	404 Move X2, X23
	405 Call ObjectWriter.WriteArrayMember, X0, X1, X2, X3
	406 Move W8, [X26+24]
	407 Add W19, W19, 1
	408 Compare W8, 0
	409 JumpIfNotEqual {396}
	410 Call 0x1C17F28
	411 Compare X0, 0
	412 JumpIfEqual {518}
	413 Move X2, [X31+56]
	414 Move X3, [X31+32]
	415 Move X4, X23
	416 Move W5, W21
	417 Move X6, X29
	418 Move X7, X25
	419 Call __BinaryWriter.WriteRectangleArray, X0, X1, X2, X3, X4, X5, X6, X7
	420 NotImplemented "Instruction CMP not yet implemented."
	421 Compare X29, 0
	422 JumpIfEqual {518}
	423 Move W8, [X29+24]
	424 Move W9, W31
	425 NotImplemented "Instruction CMP not yet implemented."
	426 Add X10, X29, W9
	427 Move W10, [X10+32]
	428 Compare W10, 0
	429 JumpIfEqual {440}
	430 Add W9, W9, 1
	431 NotImplemented "Instruction CMP not yet implemented."
	432 Move X1, [X31+16]
	433 Move X0, X22
	434 Move W2, W21
	435 Move X3, X29
	436 Move X4, X24
	437 Move X5, X23
	438 Move X6, X25
	439 Call ObjectWriter.WriteRectangle, X0, X1, X2, X3, X4, X5, X6
	440 Move X0, [X22+64]
	441 Compare X0, 0
	442 JumpIfEqual {518}
	443 Call __BinaryWriter.InternalWriteItemNull, X0
	444 Move X8, [X22+64]
	445 Compare X8, 0
	446 JumpIfEqual {518}
	447 Move X0, [X22+184]
	448 Compare X0, 0
	449 JumpIfEqual {518}
	450 Move X1, X23
	451 Move X2, X31
	452 Call SerStack.Push, X0, X1
	453 Move X8, [X31+24]
	454 Compare X8, 0
	455 JumpIfNotEqual {504}
	456 Move X0, [X22+184]
	457 Compare X0, 0
	458 JumpIfEqual {518}
	459 Move X1, [X31+56]
	460 Move X20, [X31+144]
	461 Move X19, [X31+152]
	462 Move X22, [X31+128]
	463 Move X21, [X31+136]
	464 Move X24, [X31+112]
	465 Move X23, [X31+120]
	466 Move X26, [X31+96]
	467 Move X25, [X31+104]
	468 Move X28, [X31+80]
	469 Move X27, [X31+88]
	470 Move X29, [X31+64]
	471 Move X30, [X31+72]
	472 Move X2, X31
	473 Add X31, X31, 160
	474 Call SerStack.Push, X0, X1
	475 Return 
	476 Compare X29, 0
	477 JumpIfEqual {518}
	478 Move W8, [X29+24]
	479 Compare W8, 0
	480 JumpIfEqual {410}
	481 Move X19, [X22+64]
	482 Compare X19, 0
	483 JumpIfEqual {518}
	484 Move X8, 0xE3A000
	485 Move W21, [X29+32]
	486 Move X8, [X8+1560]
	487 Move X0, X24
	488 Move X25, [X8]
	489 Move X1, X25
	490 Call 0x1C17E00
	491 Compare X0, 0
	492 JumpIfEqual {524}
	493 Move X22, X0
	494 Move X0, X19
	495 Call __BinaryWriter.InternalWriteItemNull, X0
	496 Move X2, [X31+56]
	497 Move X3, [X31+32]
	498 Move X0, X19
	499 Move X4, X23
	500 Move W5, W21
	501 Move W6, W31
	502 Move X7, X22
	503 Call __BinaryWriter.WriteSingleArray, X0, X1, X2, X3, X4, X5, X6, X7
	504 Move X20, [X31+144]
	505 Move X19, [X31+152]
	506 Move X22, [X31+128]
	507 Move X21, [X31+136]
	508 Move X24, [X31+112]
	509 Move X23, [X31+120]
	510 Move X26, [X31+96]
	511 Move X25, [X31+104]
	512 Move X28, [X31+80]
	513 Move X27, [X31+88]
	514 Move X29, [X31+64]
	515 Move X30, [X31+72]
	516 Add X31, X31, 160
	517 Return 
	518 Call 0x1C17F20
	519 Move X0, X24
	520 Call 0x1C181E0
	521 Move X0, X24
	522 Move X1, X27
	523 Call 0x1C181E0
	524 Move X0, X24
	525 Move X1, X25
	526 Call 0x1C181E0

Method: System.Void WriteArrayMember(System.Runtime.Serialization.Formatters.Binary.WriteObjectInfo objectInfo, System.Runtime.Serialization.Formatters.Binary.NameInfo arrayElemTypeNameInfo, System.Object data)

Disassembly:
	0x032BB088 MOV X0, X19
	0x032BB08C LDP X20, X19, [X31 + 0x10]
	0x032BB090 LDP X30, X21, [X31], #0x20
	0x032BB094 B 0x32BCB78
	0x032BB098 BL 0x1C16F20
	0x032BB09C ADRP X0, 0xE38000
	0x032BB0A0 LDR X0, [X0 + 0x9D0]
	0x032BB0A4 MOV X19, X1
	0x032BB0A8 BL 0x1C16D08
	0x032BB0AC MOVZ W1, 0x2
	0x032BB0B0 BL 0x1C16D6C
	0x032BB0B4 MOV X20, X0
	0x032BB0B8 BL 0x19903C0
	0x032BB0BC ADRP X21, 0xE6A000
	0x032BB0C0 LDR X21, [X21 + 0x550]
	0x032BB0C4 MOV X0, X21
	0x032BB0C8 BL 0x1C16D08
	0x032BB0CC MOV X1, X0
	0x032BB0D0 MOV X0, X20
	0x032BB0D4 BL 0x19980B4
	0x032BB0D8 MOV X0, X21
	0x032BB0DC BL 0x1C16D08
	0x032BB0E0 MOV X2, X0
	0x032BB0E4 MOV X0, X20
	0x032BB0E8 MOV X1, X31
	0x032BB0EC BL 0x1993444
	0x032BB0F0 MOV X0, X20
	0x032BB0F4 BL 0x19903C0
	0x032BB0F8 MOV X0, X20
	0x032BB0FC MOV X1, X19
	0x032BB100 BL 0x19980B4
	0x032BB104 MOVZ W1, 0x1
	0x032BB108 MOV X0, X20
	0x032BB10C MOV X2, X19
	0x032BB110 BL 0x1993444
	0x032BB114 ADRP X0, 0xE6A000
	0x032BB118 LDR X0, [X0 + 0x520]
	0x032BB11C BL 0x1C16D08
	0x032BB120 MOV X1, X20
	0x032BB124 MOV X2, X31
	0x032BB128 BL 0x33BFB40
	0x032BB12C MOV X19, X0
	0x032BB130 ADRP X0, 0xE62000
	0x032BB134 LDR X0, [X0 + 0x2E0]
	0x032BB138 BL 0x1C16D08
	0x032BB13C BL 0x1C16F10
	0x032BB140 MOV X1, X19
	0x032BB144 MOV X2, X31
	0x032BB148 MOV X20, X0
	0x032BB14C BL 0x329F100
	0x032BB150 ADRP X0, 0xE6A000
	0x032BB154 LDR X0, [X0 + 0x558]
	0x032BB158 BL 0x1C16D08
	0x032BB15C MOV X1, X0
	0x032BB160 MOV X0, X20
	0x032BB164 BL 0x1C16DEC
	0x032BB168 STP X30, X21, [X31 - 0x20]!
	0x032BB16C STP X20, X19, [X31 + 0x10]
	0x032BB170 ADRP X21, 0x1121000
	0x032BB174 LDRB W8, [X21 + 0x83C]
	0x032BB178 MOV W20, W1
	0x032BB17C MOV X19, X0
	0x032BB180 TBNZ X8, 0x0, 0x32BB198
	0x032BB184 ADRP X0, 0xE6A000
	0x032BB188 LDR X0, [X0 + 0x2E0]
	0x032BB18C BL 0x1C16CF4
	0x032BB190 MOVZ W8, 0x1
	0x032BB194 STRB W8, [X21 + 0x83C]
	0x032BB198 LDR X21, [X19 + 0x80]
	0x032BB19C CBZ X21, 0x32BB1A8
	0x032BB1A0 STR W20, [X21 + 0x10]
	0x032BB1A4 B 0x32BB1CC
	0x032BB1A8 ADRP X8, 0xE6A000
	0x032BB1AC LDR X8, [X8 + 0x2E0]
	0x032BB1B0 LDR X0, [X8]
	0x032BB1B4 BL 0x1C16F10
	0x032BB1B8 MOV X1, X31
	0x032BB1BC MOV X21, X0
	0x032BB1C0 BL 0x33BDD8C
	0x032BB1C4 STR W20, [X21 + 0x10]
	0x032BB1C8 STR X21, [X19 + 0x80]
	0x032BB1CC MOV X0, X21
	0x032BB1D0 MOV X1, X19
	0x032BB1D4 BL 0x32AD214
	0x032BB1D8 LDR X1, [X19 + 0x80]
	0x032BB1DC CBZ X1, 0x32BB1F0
	0x032BB1E0 MOV X0, X19
	0x032BB1E4 LDP X20, X19, [X31 + 0x10]
	0x032BB1E8 LDP X30, X21, [X31], #0x20
	0x032BB1EC B 0x32BCB78
	0x032BB1F0 BL 0x1C16F20
	0x032BB1F4 STP X30, X21, [X31 - 0x20]!
	0x032BB1F8 STP X20, X19, [X31 + 0x10]
	0x032BB1FC ADRP X21, 0x1121000
	0x032BB200 LDRB W8, [X21 + 0x83E]
	0x032BB204 MOV W20, W1
	0x032BB208 MOV X19, X0
	0x032BB20C TBNZ X8, 0x0, 0x32BB224
	0x032BB210 ADRP X0, 0xE6A000
	0x032BB214 LDR X0, [X0 + 0x2D8]
	0x032BB218 BL 0x1C16CF4
	0x032BB21C MOVZ W8, 0x1
	0x032BB220 STRB W8, [X21 + 0x83E]
	0x032BB224 LDR X21, [X19 + 0x88]
	0x032BB228 CBZ X21, 0x32BB234
	0x032BB22C STR W20, [X21 + 0x10]
	0x032BB230 B 0x32BB258
	0x032BB234 ADRP X8, 0xE6A000
	0x032BB238 LDR X8, [X8 + 0x2D8]
	0x032BB23C LDR X0, [X8]
	0x032BB240 BL 0x1C16F10
	0x032BB244 MOV X1, X31
	0x032BB248 MOV X21, X0
	0x032BB24C BL 0x33BDD8C
	0x032BB250 STR W20, [X21 + 0x10]
	0x032BB254 STR X21, [X19 + 0x88]
	0x032BB258 MOV X0, X21
	0x032BB25C MOV X1, X19
	0x032BB260 BL 0x32AD590
	0x032BB264 LDR X1, [X19 + 0x88]
	0x032BB268 MOV X0, X19
	0x032BB26C LDP X20, X19, [X31 + 0x10]
	0x032BB270 LDP X30, X21, [X31], #0x20
	0x032BB274 B 0x32BCF88
	0x032BB278 SUB X31, X31, 0x40
	0x032BB27C STP X30, X23, [X31 + 0x10]
	0x032BB280 STP X22, X21, [X31 + 0x20]
	0x032BB284 STP X20, X19, [X31 + 0x30]
	0x032BB288 ADRP X21, 0x1121000
	0x032BB28C LDRB W8, [X21 + 0x840]
	0x032BB290 MOV W20, W1
	0x032BB294 MOV X19, X0
	0x032BB298 TBNZ X8, 0x0, 0x32BB2EC
	0x032BB29C ADRP X0, 0xE6A000
	0x032BB2A0 LDR X0, [X0 + 0x560]
	0x032BB2A4 BL 0x1C16CF4
	0x032BB2A8 ADRP X0, 0xE6A000
	0x032BB2AC LDR X0, [X0 + 0x300]
	0x032BB2B0 BL 0x1C16CF4
	0x032BB2B4 ADRP X0, 0xE69000
	0x032BB2B8 LDR X0, [X0 + 0xF80]
	0x032BB2BC BL 0x1C16CF4
	0x032BB2C0 ADRP X0, 0xE6A000
	0x032BB2C4 LDR X0, [X0 + 0x68]
	0x032BB2C8 BL 0x1C16CF4
	0x032BB2CC ADRP X0, 0xE3A000
	0x032BB2D0 LDR X0, [X0 + 0x278]
	0x032BB2D4 BL 0x1C16CF4
	0x032BB2D8 ADRP X0, 0xE6A000
	0x032BB2DC LDR X0, [X0 + 0x568]
	0x032BB2E0 BL 0x1C16CF4
	0x032BB2E4 MOVZ W8, 0x1
	0x032BB2E8 STRB W8, [X21 + 0x840]
	0x032BB2EC LDR X21, [X19 + 0x90]
	0x032BB2F0 CBNZ X21, 0x32BB314
	0x032BB2F4 ADRP X8, 0xE6A000
	0x032BB2F8 LDR X8, [X8 + 0x300]
	0x032BB2FC LDR X0, [X8]
	0x032BB300 BL 0x1C16F10
	0x032BB304 MOV X1, X31
	0x032BB308 MOV X21, X0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X23, 0x1122000
	011 Move W8, [X23+2088]
	012 Move X22, X3
	013 Move X19, X2
	014 Move X21, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xE6A000
	021 Move X0, [X0+3968]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+2088], W8
	025 Compare X19, 0
	026 JumpIfEqual {195}
	027 Move W8, 1
	028 Move X0, X20
	029 Move X1, X21
	030 Move X2, X19
	031 Move X3, X19
	032 Move X4, X22
	033 Move [X19+58], W8
	034 Call ObjectWriter.CheckForNull, X0, X1, X2, X3, X4
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {185}
	039 Move W8, [X19+60]
	040 Compare W8, 0
	041 JumpIfEqual {57}
	042 Compare X22, 0
	043 JumpIfEqual {195}
	044 Move X0, X22
	045 Move X1, X31
	046 Call "il2cpp_vm_object_is_inst", X0
	047 Move X1, X0
	048 Move X0, X20
	049 Call ObjectWriter.TypeToNameInfo, X0, X1
	050 Compare X0, 0
	051 JumpIfEqual {195}
	052 Move W8, 1
	053 Move [X0+60], W8
	054 NotImplemented "Instruction LDUR not yet implemented."
	055 Move X21, X0
	056 Move [X0+24], V0
	057 Move X0, X19
	058 Move X1, X31
	059 Call NameInfo.get_IsSealed, X0
	060 Move X21, X19
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfEqual {76}
	065 Compare X22, 0
	066 JumpIfEqual {195}
	067 Move X0, X22
	068 Move X1, X31
	069 Call "il2cpp_vm_object_is_inst", X0
	070 Move X8, [X19+48]
	071 Move X21, X19
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X1, X0
	074 Compare X0, 0
	075 JumpIfNotEqual {48}
	076 Move W8, 1
	077 Move X0, X20
	078 Move X1, X19
	079 Move X2, X21
	080 Move X3, X22
	081 Move [X21+58], W8
	082 Call ObjectWriter.WriteKnownValueClass, X0, X1, X2, X3
	083 Move TEMP, X0
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfEqual {166}
	087 Move X24, 0xE6A000
	088 Move X24, [X24+3968]
	089 Move X23, [X19+48]
	090 Move X0, [X24]
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {96}
	094 Call 0x1C17DFC
	095 Move X0, [X24]
	096 Move X8, [X0+184]
	097 Move X3, [X21+48]
	098 Move X0, X20
	099 Move X1, X22
	100 Move X8, [X8+192]
	101 Move X4, X31
	102 NotImplemented "Instruction CMP not yet implemented."
	103 NotImplemented "Instruction CSET not yet implemented."
	104 Call ObjectWriter.Schedule, X0, X1, X2, X3, X4
	105 Move X23, X0
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move [X19+24], X0
	108 Move [X21+24], X0
	109 Move X22, [X20+64]
	110 Compare X22, 0
	111 JumpIfEqual {195}
	112 Move X0, X22
	113 Call __BinaryWriter.InternalWriteItemNull, X0
	114 Move X0, X22
	115 Move X1, X19
	116 Move W2, W23
	117 Call __BinaryWriter.WriteMemberObjectRef, X0, X1, X2
	118 Move X1, [X20+40]
	119 Move X2, [X20+48]
	120 Move X3, [X20+56]
	121 Move X4, [X20+120]
	122 Move X5, [X20+128]
	123 Move X7, [X20+112]
	124 Move X0, X22
	125 Move X6, X20
	126 Call WriteObjectInfo.Serialize, X0, X1, X2, X3, X4, X5, X6
	127 Compare X0, 0
	128 JumpIfEqual {195}
	129 Move [X0+104], X23
	130 Move X22, X0
	131 Move X0, [X24]
	132 Move X25, [X19+48]
	133 Move W8, [X0+224]
	134 Compare W8, 0
	135 JumpIfNotEqual {138}
	136 Call 0x1C17DFC
	137 Move X0, [X24]
	138 Move X8, [X0+184]
	139 Move X8, [X8+192]
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Move X0, [X19+48]
	142 Move X1, X31
	143 Call Nullable.GetUnderlyingType, X0
	144 Compare X0, 0
	145 JumpIfEqual {149}
	146 Move X0, X20
	147 Move X1, X22
	148 Call ObjectWriter.GetAssemblyId, X0, X1
	149 Move X0, [X21+32]
	150 Move [X22+112], X0
	151 Move X0, X20
	152 Move X1, X22
	153 Call ObjectWriter.TypeToNameInfo, X0, X1
	154 Compare X0, 0
	155 JumpIfEqual {195}
	156 Move X3, X0
	157 Move [X0+24], X23
	158 Move X0, X20
	159 Move X1, X22
	160 Move X2, X21
	161 Move [X22+104], X23
	162 Call ObjectWriter.Write, X0, X1, X2, X3
	163 Move X0, [X22+96]
	164 Move X1, X22
	165 Call WriteObjectInfo.PutObjectInfo, X0, X1
	166 Move W8, [X19+60]
	167 Compare W8, 0
	168 JumpIfEqual {185}
	169 Move X0, [X20+184]
	170 Compare X0, 0
	171 JumpIfEqual {195}
	172 Move X1, X21
	173 Move X20, [X31+64]
	174 Move X19, [X31+72]
	175 Move X22, [X31+48]
	176 Move X21, [X31+56]
	177 Move X24, [X31+32]
	178 Move X23, [X31+40]
	179 Move X30, [X31+16]
	180 Move X25, [X31+24]
	181 Move X2, X31
	182 Add X31, X31, 80
	183 Call SerStack.Push, X0, X1
	184 Return 
	185 Move X20, [X31+64]
	186 Move X19, [X31+72]
	187 Move X22, [X31+48]
	188 Move X21, [X31+56]
	189 Move X24, [X31+32]
	190 Move X23, [X31+40]
	191 Move X30, [X31+16]
	192 Move X25, [X31+24]
	193 Add X31, X31, 80
	194 Return 
	195 Call 0x1C17F20

Method: System.Void WriteRectangle(System.Runtime.Serialization.Formatters.Binary.WriteObjectInfo objectInfo, System.Int32 rank, System.Int32[] maxA, System.Array array, System.Runtime.Serialization.Formatters.Binary.NameInfo arrayElemNameTypeInfo, System.Int32[] lowerBoundA)

Disassembly:
	0x032BB30C BL 0x33BDD8C
	0x032BB310 STR X21, [X19 + 0x90]
	0x032BB314 CMP W20, 0x6
	0x032BB318 B.NE 0x32BB338
	0x032BB31C CBZ X21, 0x32BB608
	0x032BB320 MOV X0, X21
	0x032BB324 MOV X1, X19
	0x032BB328 BL 0x32ACABC
	0x032BB32C LDR X8, [X19 + 0x90]
	0x032BB330 CBNZ X8, 0x32BB3D8
	0x032BB334 B 0x32BB608
	0x032BB338 LDR X20, [X19 + 0x98]
	0x032BB33C CBNZ X20, 0x32BB364
	0x032BB340 ADRP X8, 0xE6A000
	0x032BB344 LDR X8, [X8 + 0x560]
	0x032BB348 LDR X0, [X8]
	0x032BB34C BL 0x1C16F10
	0x032BB350 MOV X1, X31
	0x032BB354 MOV X20, X0
	0x032BB358 BL 0x33BDD8C
	0x032BB35C STR X20, [X19 + 0x98]
	0x032BB360 CBZ X20, 0x32BB608
	0x032BB364 MOV X0, X20
	0x032BB368 MOV X1, X19
	0x032BB36C BL 0x32ACB24
	0x032BB370 LDR X8, [X19 + 0x98]
	0x032BB374 CBZ X8, 0x32BB608
	0x032BB378 LDR X0, [X19 + 0x10]
	0x032BB37C CBZ X0, 0x32BB608
	0x032BB380 LDR W1, [X8 + 0x14]
	0x032BB384 LDR X20, [X19 + 0x90]
	0x032BB388 BL 0x32B6038
	0x032BB38C CBZ X20, 0x32BB608
	0x032BB390 CBZ X0, 0x32BB3B0
	0x032BB394 ADRP X8, 0xE3A000
	0x032BB398 LDR X8, [X8 + 0x278]
	0x032BB39C LDR X9, [X0]
	0x032BB3A0 LDR X8, [X8]
	0x032BB3A4 CMP X9, X8
	0x032BB3A8 CSEL X8, X0, X31, EQ
	0x032BB3AC B 0x32BB3B4
	0x032BB3B0 MOV X8, X31
	0x032BB3B4 STR X8, [X20 + 0x18]
	0x032BB3B8 LDR X8, [X19 + 0x90]
	0x032BB3BC CBZ X8, 0x32BB608
	0x032BB3C0 LDR X9, [X8 + 0x18]
	0x032BB3C4 CBZ X9, 0x32BB614
	0x032BB3C8 LDR X9, [X19 + 0x98]
	0x032BB3CC CBZ X9, 0x32BB608
	0x032BB3D0 LDR W9, [X9 + 0x10]
	0x032BB3D4 STR W9, [X8 + 0x10]
	0x032BB3D8 MOV X0, X19
	0x032BB3DC BL 0x32BA8FC
	0x032BB3E0 CBZ X0, 0x32BB608
	0x032BB3E4 MOV X1, X31
	0x032BB3E8 BL 0x32BD694
	0x032BB3EC MOV X0, X19
	0x032BB3F0 BL 0x32BA8FC
	0x032BB3F4 CBZ X0, 0x32BB608
	0x032BB3F8 MOVZ W8, 0x2
	0x032BB3FC STR W8, [X0 + 0x10]
	0x032BB400 MOV X0, X19
	0x032BB404 BL 0x32BA8FC
	0x032BB408 LDR X8, [X19 + 0x90]
	0x032BB40C CBZ X8, 0x32BB608
	0x032BB410 MOV X20, X0
	0x032BB414 LDR X0, [X19 + 0x10]
	0x032BB418 CBZ X0, 0x32BB608
	0x032BB41C LDRSW X1, [X8 + 0x10]
	0x032BB420 BL 0x32B7F2C
	0x032BB424 CBZ X20, 0x32BB608
	0x032BB428 STR X0, [X20 + 0x58]
	0x032BB42C MOV X0, X19
	0x032BB430 BL 0x32BA8FC
	0x032BB434 CBZ X0, 0x32BB608
	0x032BB438 LDR X8, [X0 + 0x58]
	0x032BB43C LDR X9, [X19 + 0x20]
	0x032BB440 CMP X8, X9
	0x032BB444 B.NE 0x32BB45C
	0x032BB448 MOV X0, X19
	0x032BB44C BL 0x32BA8FC
	0x032BB450 CBZ X0, 0x32BB608
	0x032BB454 MOVZ W8, 0x1
	0x032BB458 STR W8, [X0 + 0x24]
	0x032BB45C MOV X0, X19
	0x032BB460 BL 0x32BA8FC
	0x032BB464 CBZ X0, 0x32BB608
	0x032BB468 MOVZ W8, 0x1
	0x032BB46C STR W8, [X0 + 0x14]
	0x032BB470 LDR X0, [X19 + 0x40]
	0x032BB474 CBZ X0, 0x32BB608
	0x032BB478 MOV X1, X31
	0x032BB47C BL 0x32BD930
	0x032BB480 MOV X20, X0
	0x032BB484 CBZ X0, 0x32BB4A0
	0x032BB488 ADRP X8, 0xE6A000
	0x032BB48C LDR X8, [X8 + 0x68]
	0x032BB490 LDR X1, [X8]
	0x032BB494 LDR X8, [X20]
	0x032BB498 CMP X8, X1
	0x032BB49C B.NE 0x32BB60C
	0x032BB4A0 MOV X0, X19
	0x032BB4A4 BL 0x32BA8FC
	0x032BB4A8 LDR X8, [X19 + 0x90]
	0x032BB4AC CBZ X8, 0x32BB608
	0x032BB4B0 CBZ X0, 0x32BB608
	0x032BB4B4 LDR X8, [X8 + 0x18]
	0x032BB4B8 STR X8, [X0 + 0x30]
	0x032BB4BC MOV X0, X19
	0x032BB4C0 BL 0x32BA8FC
	0x032BB4C4 CBZ X0, 0x32BB608
	0x032BB4C8 ADRP X22, 0xE6A000
	0x032BB4CC LDR X22, [X22 + 0x568]
	0x032BB4D0 ADRP X23, 0xE69000
	0x032BB4D4 LDR X8, [X22]
	0x032BB4D8 LDR X23, [X23 + 0xF80]
	0x032BB4DC STR X8, [X0 + 0x40]
	0x032BB4E0 MOV X0, X19
	0x032BB4E4 BL 0x32BA8FC
	0x032BB4E8 LDR X8, [X23]
	0x032BB4EC MOV X21, X0
	0x032BB4F0 LDR W9, [X8 + 0xE0]
	0x032BB4F4 CBNZ W9, 0x32BB500
	0x032BB4F8 MOV X0, X8
	0x032BB4FC BL 0x1C16DFC
	0x032BB500 CBZ X21, 0x32BB608
	0x032BB504 LDR X8, [X23]
	0x032BB508 MOV X0, X19
	0x032BB50C LDR X8, [X8 + 0xB8]
	0x032BB510 LDR X8, [X8 + 0x38]
	0x032BB514 STR X8, [X21 + 0x48]
	0x032BB518 BL 0x32BA8FC
	0x032BB51C CBZ X0, 0x32BB608
	0x032BB520 STR W31, [X0 + 0x50]
	0x032BB524 MOV X0, X19
	0x032BB528 BL 0x32BA8FC
	0x032BB52C LDR X8, [X19 + 0x90]
	0x032BB530 CBZ X8, 0x32BB608
	0x032BB534 CBZ X0, 0x32BB608
	0x032BB538 LDR X8, [X8 + 0x18]
	0x032BB53C STR X8, [X0 + 0x38]
	0x032BB540 MOV X0, X19
	0x032BB544 BL 0x32BA8FC

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move [X31+32], X5
	015 Move [X31+40], X4
	016 Move [X31+16], X0
	017 Move [X31+24], X1
	018 Move X21, 0x1122000
	019 Move X20, 0xE3A000
	020 Move W8, [X21+2089]
	021 Move X20, [X20+3672]
	022 Move X19, X6
	023 Move X22, X3
	024 Move W23, W2
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {34}
	029 Move X0, 0xE3A000
	030 Move X0, [X0+3672]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X21+2089], W8
	034 Move X0, [X20]
	035 Move W1, W23
	036 Call 0x1C17D6C
	037 Move X26, X0
	038 Move X27, X31
	039 Subtract W21, W23, 1
	040 Move W12, W31
	041 Compare X19, 0
	042 JumpIfEqual {63}
	043 Move W9, [X19+24]
	044 Move W8, W31
	045 Move W10, W23
	046 Add X11, X19, 32
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move W12, [X11+4]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 NotImplemented "Instruction CSINC not yet implemented."
	051 Subtract X10, X10, 1
	052 Move TEMP, X8
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {58}
	056 Move W12, W31
	057 Move X27, X31
	058 Move X0, [X20]
	059 Move W1, W23
	060 Call 0x1C17D6C
	061 Move X27, X0
	062 Move W12, 1
	063 Add X20, X26, 32
	064 Add X8, X20, W21
	065 Move W29, W23
	066 Add X24, X19, 32
	067 Add X25, X27, 32
	068 Move X28, W21
	069 Add X21, X8, 4
	070 Move [X31+12], W12
	071 Compare W12, 0
	072 JumpIfEqual {94}
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Compare X26, 0
	075 JumpIfEqual {158}
	076 Move W8, [X26+24]
	077 Move X9, X31
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Compare X19, 0
	080 JumpIfEqual {158}
	081 Move W10, [X19+24]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Compare X27, 0
	084 JumpIfEqual {158}
	085 Move W10, [X27+24]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move W10, [X20]
	088 Move W11, [X24]
	089 Add W10, W11, W10
	090 Move [X25], W10
	091 Add X9, X9, 1
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move X1, X27
	094 Move X1, X26
	095 Move X0, [X31+40]
	096 Compare X0, 0
	097 JumpIfEqual {158}
	098 Move X2, X31
	099 Call Array.GetValue, X0, X1
	100 Move X3, X0
	101 Move X0, [X31+16]
	102 Move X1, [X31+24]
	103 Move X2, [X31+32]
	104 Call ObjectWriter.WriteArrayMember, X0, X1, X2, X3
	105 Move TEMP, X28
	106 And TEMP, TEMP, -2147483648
	107 Compare TEMP, -2147483648
	108 JumpIfEqual {143}
	109 Compare X26, 0
	110 JumpIfEqual {158}
	111 Move X9, [X26+24]
	112 Move X8, X31
	113 Move X10, X28
	114 Move W11, W23
	115 Subtract W12, W11, 1
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Add X13, X26, X12
	118 Add X13, X13, 32
	119 Move W14, [X13]
	120 Compare X22, 0
	121 JumpIfEqual {158}
	122 Move W15, [X22+24]
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Add X15, X22, X12
	125 Move W15, [X15+32]
	126 Subtract W15, W15, 1
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Subtract X10, X10, 1
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Subtract X8, X8, 1
	131 Move W11, W12
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move W12, [X31+12]
	134 Add W10, W14, 1
	135 Move [X13], W10
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Add W10, W29, W8
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move [X21], W31
	140 Add X8, X8, 1
	141 Compare W8, 0
	142 JumpIfNotEqual {137}
	143 Move X20, [X31+128]
	144 Move X19, [X31+136]
	145 Move X22, [X31+112]
	146 Move X21, [X31+120]
	147 Move X24, [X31+96]
	148 Move X23, [X31+104]
	149 Move X26, [X31+80]
	150 Move X25, [X31+88]
	151 Move X28, [X31+64]
	152 Move X27, [X31+72]
	153 Move X29, [X31+48]
	154 Move X30, [X31+56]
	155 Add X31, X31, 144
	156 Return 
	157 Call 0x1C17F28
	158 Call 0x1C17F20

Method: System.Object GetNext(out System.Int64 objID)

Disassembly:
	0x032B9E78 STP X30, X21, [X31 - 0x20]!
	0x032B9E7C STP X20, X19, [X31 + 0x10]
	0x032B9E80 MOV X19, X2
	0x032B9E84 MOV X20, X1
	0x032B9E88 MOV X21, X0
	0x032B9E8C BL 0x32AA788
	0x032B9E90 MOV X1, X20
	0x032B9E94 MOV X4, X19
	0x032B9E98 LDP X20, X19, [X31 + 0x10]
	0x032B9E9C MOV W3, W0
	0x032B9EA0 MOV X0, X21
	0x032B9EA4 MOV X2, X31
	0x032B9EA8 LDP X30, X21, [X31], #0x20
	0x032B9EAC B 0x32BA648
	0x032B9EB0 STR X30, [X31 - 0x30]!
	0x032B9EB4 STP X22, X21, [X31 + 0x10]
	0x032B9EB8 STP X20, X19, [X31 + 0x20]
	0x032B9EBC CBZ X1, 0x32B9EFC
	0x032B9EC0 LDR X22, [X1 + 0x20]
	0x032B9EC4 MOV X20, X1
	0x032B9EC8 MOV X19, X2
	0x032B9ECC MOV X21, X0
	0x032B9ED0 MOV X1, X22
	0x032B9ED4 BL 0x32AA788
	0x032B9ED8 MOV W3, W0
	0x032B9EDC MOV X0, X21
	0x032B9EE0 MOV X1, X22
	0x032B9EE4 MOV X2, X20
	0x032B9EE8 MOV X4, X19
	0x032B9EEC LDP X20, X19, [X31 + 0x20]
	0x032B9EF0 LDP X22, X21, [X31 + 0x10]
	0x032B9EF4 LDR X30, [X31], #0x30
	0x032B9EF8 B 0x32BA648
	0x032B9EFC BL 0x1C16F20
	0x032B9F00 STR X30, [X31 - 0x30]!
	0x032B9F04 STP X22, X21, [X31 + 0x10]
	0x032B9F08 STP X20, X19, [X31 + 0x20]
	0x032B9F0C STRB W31, [X31 + 0xC]
	0x032B9F10 CBZ X1, 0x32B9F58
	0x032B9F14 MOV X20, X4
	0x032B9F18 AND W2, W2, 0x1
	0x032B9F1C ADD X4, X31, 0xC
	0x032B9F20 MOV X21, X1
	0x032B9F24 MOV X22, X0
	0x032B9F28 BL 0x32B87E8
	0x032B9F2C MOV X19, X0
	0x032B9F30 CMP X0, 0x1
	0x032B9F34 B.LT 0x32B9F74
	0x032B9F38 LDRB W8, [X31 + 0xC]
	0x032B9F3C CBZ W8, 0x32B9F74
	0x032B9F40 LDR X0, [X22 + 0x10]
	0x032B9F44 CBZ X0, 0x32B9F88
	0x032B9F48 CBZ X20, 0x32B9F60
	0x032B9F4C LDR X8, [X0]
	0x032B9F50 MOV X1, X20
	0x032B9F54 B 0x32B9F68
	0x032B9F58 MOV X19, X31
	0x032B9F5C B 0x32B9F74
	0x032B9F60 LDR X8, [X0]
	0x032B9F64 MOV X1, X21
	0x032B9F68 LDR X9, [X8 + 0x228]
	0x032B9F6C LDR X2, [X8 + 0x230]
	0x032B9F70 BLR X9
	0x032B9F74 MOV X0, X19
	0x032B9F78 LDP X20, X19, [X31 + 0x20]
	0x032B9F7C LDP X22, X21, [X31 + 0x10]
	0x032B9F80 LDR X30, [X31], #0x30
	0x032B9F84 RET
	0x032B9F88 BL 0x1C16F20
	0x032B9F8C STR X30, [X31 - 0x10]!
	0x032B9F90 LDR X0, [X0 + 0x40]
	0x032B9F94 CBZ X0, 0x32B9FA0
	0x032B9F98 LDR X30, [X31], #0x10
	0x032B9F9C B 0x32B314C
	0x032B9FA0 BL 0x1C16F20
	0x032B9FA4 STR X30, [X31 - 0x40]!
	0x032B9FA8 STP X24, X23, [X31 + 0x10]
	0x032B9FAC STP X22, X21, [X31 + 0x20]
	0x032B9FB0 STP X20, X19, [X31 + 0x30]
	0x032B9FB4 ADRP X23, 0x1123000
	0x032B9FB8 LDRB W8, [X23 + 0x82B]
	0x032B9FBC MOV X19, X3
	0x032B9FC0 MOV X20, X2
	0x032B9FC4 MOV X21, X1
	0x032B9FC8 MOV X22, X0
	0x032B9FCC TBNZ X8, 0x0, 0x32B9FE4
	0x032B9FD0 ADRP X0, 0xE6B000
	0x032B9FD4 LDR X0, [X0 + 0xF80]
	0x032B9FD8 BL 0x1C16CF4
	0x032B9FDC MOVZ W8, 0x1
	0x032B9FE0 STRB W8, [X23 + 0x82B]
	0x032B9FE4 CBZ X20, 0x32BA084

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1124000
	007 Move W8, [X21+2090]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE6D000
	015 Move X0, [X0+624]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2090], W8
	019 Move [X31+12], W31
	020 Move X0, [X20+16]
	021 Compare X0, 0
	022 JumpIfEqual {69}
	023 Move X8, [X0]
	024 Move X9, [X8+472]
	025 Move X1, [X8+480]
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Compare W0, 0
	028 JumpIfEqual {46}
	029 Move X0, [X20+16]
	030 Compare X0, 0
	031 JumpIfEqual {69}
	032 Move X8, [X0]
	033 Move X9, [X8+584]
	034 Move X1, [X8+592]
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Move X22, X0
	037 Compare X0, 0
	038 JumpIfEqual {48}
	039 Move X8, 0xE6D000
	040 Move X8, [X8+624]
	041 Move X9, [X22]
	042 Move X21, X22
	043 Move X8, [X8]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X21, [X22+24]
	046 Move X22, X31
	047 Move [X19], X31
	048 Move X21, X31
	049 Move X0, [X20+24]
	050 Compare X0, 0
	051 JumpIfEqual {69}
	052 Move X8, [X0]
	053 Add X2, X31, 12
	054 Move X1, X21
	055 Move X9, [X8+392]
	056 Move X3, [X8+400]
	057 NotImplemented "Instruction BLR not yet implemented."
	058 Move [X19], X0
	059 Move W8, [X31+12]
	060 Compare W8, 0
	061 JumpIfNotEqual {70}
	062 Move X0, X22
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X22, [X31+16]
	066 Move X21, [X31+24]
	067 Move X30, [X31+48]
	068 Return X0
	069 Call 0x1C17F20
	070 Move X0, 0xE3B000
	071 Move X0, [X0+2512]
	072 Call 0x1C17D08
	073 Move W1, 1
	074 Call 0x1C17D6C
	075 Move X19, X0
	076 Call 0x19913C0
	077 Move X0, X19
	078 Move X1, X21
	079 Call 0x19990B4
	080 Move X0, X19
	081 Move X1, X31
	082 Move X2, X21
	083 Call 0x1994444
	084 Move X0, 0xE6D000
	085 Move X0, [X0+1264]
	086 Call 0x1C17D08
	087 Move X1, X19
	088 Move X2, X31
	089 Call Environment.GetResourceString, X0, X1
	090 Move X19, X0
	091 Move X0, 0xE65000
	092 Move X0, [X0+736]
	093 Call 0x1C17D08
	094 Call 0x1C17F10
	095 Move X1, X19
	096 Move X2, X31
	097 Move X20, X0
	098 Call SerializationException..ctor, X0, X1
	099 Move X0, 0xE6D000
	100 Move X0, [X0+1272]
	101 Call 0x1C17D08
	102 Move X1, X0
	103 Move X0, X20
	104 Call 0x1C17DEC

Method: System.Int64 InternalGetId(System.Object obj, System.Boolean assignUniqueIdToValueType, System.Type type, out System.Boolean isNew)

Disassembly:
	0x032B97E8 B.LT 0x32B9874
	0x032B97EC LDR X8, [X31 + 0x18]
	0x032B97F0 MOV X28, X31
	0x032B97F4 AND X27, X27, 0x0
	0x032B97F8 ADD X22, X20, 0x20
	0x032B97FC ADD X29, X8, 0x20
	0x032B9800 ADD X21, X25, 0x20
	0x032B9804 ADD X23, X19, 0x20
	0x032B9808 LDR X8, [X31 + 0x18]
	0x032B980C LDR W8, [X8 + 0x18]
	0x032B9810 CMP X28, X8
	0x032B9814 B.CS 0x32B98A8
	0x032B9818 CBZ X20, 0x32B9964
	0x032B981C LDR W8, [X20 + 0x18]
	0x032B9820 CMP X28, X8
	0x032B9824 B.CS 0x32B98A8
	0x032B9828 CBZ X25, 0x32B9964
	0x032B982C LDR W8, [X25 + 0x18]
	0x032B9830 CMP X28, X8
	0x032B9834 B.CS 0x32B98A8
	0x032B9838 CBZ X19, 0x32B9964
	0x032B983C LDR W8, [X19 + 0x18]
	0x032B9840 CMP X28, X8
	0x032B9844 B.CS 0x32B98A8
	0x032B9848 LDR X4, [X29, X28, LSL #3]
	0x032B984C LDR X5, [X22, X28, LSL #3]
	0x032B9850 LDR X6, [X21, X28, LSL #3]
	0x032B9854 LDR X7, [X23, X28, LSL #3]
	0x032B9858 LDP X3, X0, [X31 + 0x8]
	0x032B985C MOV X1, X24
	0x032B9860 MOV X2, X26
	0x032B9864 BL 0x32B9988
	0x032B9868 ADD X28, X28, 0x1
	0x032B986C CMP X27, X28
	0x032B9870 B.NE 0x32B9808
	0x032B9874 LDR X8, [X24 + 0x68]
	0x032B9878 STR X8, [X26 + 0x18]
	0x032B987C LDR X8, [X31 + 0x10]
	0x032B9880 LDR X8, [X8 + 0x40]
	0x032B9884 CBZ X8, 0x32B9964
	0x032B9888 LDP X20, X19, [X31 + 0x70]
	0x032B988C LDP X22, X21, [X31 + 0x60]
	0x032B9890 LDP X24, X23, [X31 + 0x50]
	0x032B9894 LDP X26, X25, [X31 + 0x40]
	0x032B9898 LDP X28, X27, [X31 + 0x30]
	0x032B989C LDP X29, X30, [X31 + 0x20]
	0x032B98A0 ADD X31, X31, 0x80
	0x032B98A4 RET
	0x032B98A8 BL 0x1C16F28

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X0+144]
	007 Move X20, X4
	008 Move X19, X0
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X0, [X19+24]
	011 Compare X0, 0
	012 JumpIfEqual {60}
	013 Move W8, [X19+32]
	014 Move X21, X1
	015 Move [X0+16], W8
	016 Compare X3, 0
	017 JumpIfEqual {38}
	018 Move X0, X3
	019 Move X1, X31
	020 Move W22, W2
	021 Call Type.get_IsValueType, X0
	022 Move TEMP, X0
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfNotEqual {40}
	026 Move TEMP, X22
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {40}
	030 Move [X20], W31
	031 Move W8, [X19+32]
	032 Add W9, W8, 1
	033 Subtract W8, W31, W8
	034 Move [X19+32], W9
	035 Move X0, W8
	036 Move [X20], W31
	037 Move X0, [X19+152]
	038 Add W8, W8, 1
	039 Move [X19+32], W8
	040 Move W8, [X19+32]
	041 Move X0, [X19+24]
	042 Add W8, W8, 1
	043 Move [X19+32], W8
	044 Compare X0, 0
	045 JumpIfEqual {60}
	046 Move X8, [X0]
	047 Move X1, X21
	048 Move X2, X20
	049 Move X9, [X8+376]
	050 Move X3, [X8+384]
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move [X19+144], X21
	053 Move [X19+152], X0
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X30, [X31+48]
	059 Return X0
	060 Call 0x1C17F20

Method: System.Int64 Schedule(System.Object obj, System.Boolean assignUniqueIdToValueType, System.Type type)

Disassembly:
	0x032BB548 CBZ X0, 0x32BB608
	0x032BB54C CBZ X20, 0x32BB5A8
	0x032BB550 MOVZ W8, 0x3

ISIL:
	001 And W2, W2, 1
	002 Move X4, X31
	003 Call ObjectWriter.Schedule, X0, X1, X2, X3, X4
	004 Return X0

Method: System.Int64 Schedule(System.Object obj, System.Boolean assignUniqueIdToValueType, System.Type type, System.Runtime.Serialization.Formatters.Binary.WriteObjectInfo objectInfo)

Disassembly:
	0x032BAF00 MOV X1, X19
	0x032BAF04 BL 0x19980B4
	0x032BAF08 MOV X0, X20
	0x032BAF0C MOV X1, X31
	0x032BAF10 MOV X2, X19
	0x032BAF14 BL 0x1993444
	0x032BAF18 ADRP X0, 0xE6B000
	0x032BAF1C LDR X0, [X0 + 0x530]
	0x032BAF20 BL 0x1C16D08
	0x032BAF24 MOV X1, X20
	0x032BAF28 MOV X2, X31
	0x032BAF2C BL 0x33BFB40
	0x032BAF30 MOV X19, X0
	0x032BAF34 ADRP X0, 0xE63000
	0x032BAF38 LDR X0, [X0 + 0x2E0]
	0x032BAF3C BL 0x1C16D08
	0x032BAF40 BL 0x1C16F10
	0x032BAF44 MOV X1, X19
	0x032BAF48 MOV X2, X31
	0x032BAF4C MOV X20, X0
	0x032BAF50 BL 0x329F100
	0x032BAF54 ADRP X0, 0xE6B000
	0x032BAF58 LDR X0, [X0 + 0x538]
	0x032BAF5C BL 0x1C16D08
	0x032BAF60 MOV X1, X0
	0x032BAF64 MOV X0, X20
	0x032BAF68 BL 0x1C16DEC
	0x032BAF6C MOV X0, X20
	0x032BAF70 BL 0x1C171E0
	0x032BAF74 ADRP X8, 0xE39000
	0x032BAF78 LDR X8, [X8 + 0x9D0]
	0x032BAF7C MOV X19, X0
	0x032BAF80 MOV X0, X8
	0x032BAF84 BL 0x1C16D08
	0x032BAF88 MOVZ W1, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move [X31+12], W31
	007 Compare X1, 0
	008 JumpIfEqual {27}
	009 Move X20, X4
	010 And W2, W2, 1
	011 Add X4, X31, 12
	012 Move X21, X1
	013 Move X22, X0
	014 Call ObjectWriter.InternalGetId, X0, X1, X2, X3, X4
	015 Move X19, X0
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move W8, [X31+12]
	018 Compare W8, 0
	019 JumpIfEqual {33}
	020 Move X0, [X22+16]
	021 Compare X0, 0
	022 JumpIfEqual {40}
	023 Compare X20, 0
	024 JumpIfEqual {28}
	025 Move X8, [X0]
	026 Move X1, X20
	027 Move X19, X31
	028 Move X8, [X0]
	029 Move X1, X21
	030 Move X9, [X8+552]
	031 Move X2, [X8+560]
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Move X0, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Return X0
	040 Call 0x1C17F20

Method: System.Boolean WriteKnownValueClass(System.Runtime.Serialization.Formatters.Binary.NameInfo memberNameInfo, System.Runtime.Serialization.Formatters.Binary.NameInfo typeNameInfo, System.Object data)

Disassembly:
	0x032BAFA4 STR W8, [X31 + 0x8]
	0x032BAFA8 LDR X0, [X0 + 0x540]
	0x032BAFAC BL 0x1C16D08
	0x032BAFB0 ADD X1, X31, 0x8
	0x032BAFB4 BL 0x1C16E04
	0x032BAFB8 MOV X1, X31
	0x032BAFBC BL 0x33B162C
	0x032BAFC0 B 0x32BAEF0
	0x032BAFC4 STP X30, X21, [X31 - 0x20]!
	0x032BAFC8 STP X20, X19, [X31 + 0x10]
	0x032BAFCC ADRP X20, 0x1122000
	0x032BAFD0 ADRP X21, 0xE6B000
	0x032BAFD4 LDRB W8, [X20 + 0x83B]
	0x032BAFD8 LDR X21, [X21 + 0x548]
	0x032BAFDC MOV X19, X0
	0x032BAFE0 TBNZ X8, 0x0, 0x32BB010
	0x032BAFE4 ADRP X0, 0xE6B000
	0x032BAFE8 LDR X0, [X0 + 0x548]
	0x032BAFEC BL 0x1C16CF4
	0x032BAFF0 ADRP X0, 0xE6B000
	0x032BAFF4 LDR X0, [X0 + 0x2D8]
	0x032BAFF8 BL 0x1C16CF4
	0x032BAFFC ADRP X0, 0xE6B000
	0x032BB000 LDR X0, [X0 + 0x2E0]
	0x032BB004 BL 0x1C16CF4
	0x032BB008 MOVZ W8, 0x1
	0x032BB00C STRB W8, [X20 + 0x83B]
	0x032BB010 LDR X0, [X21]
	0x032BB014 BL 0x1C16F10
	0x032BB018 MOV X1, X31
	0x032BB01C MOV X20, X0
	0x032BB020 BL 0x33BDD8C
	0x032BB024 CBZ X20, 0x32BB098
	0x032BB028 MOV X0, X20
	0x032BB02C MOV X1, X19
	0x032BB030 BL 0x32ACB8C
	0x032BB034 LDR X0, [X19 + 0x10]
	0x032BB038 CBZ X0, 0x32BB098
	0x032BB03C LDR W1, [X20 + 0x10]
	0x032BB040 BL 0x32B6038
	0x032BB044 MOV X1, X0
	0x032BB048 CBZ X0, 0x32BB09C
	0x032BB04C ADRP X8, 0xE6A000
	0x032BB050 LDR X8, [X8 + 0x2E0]
	0x032BB054 LDR X9, [X8]
	0x032BB058 LDR X8, [X1]
	0x032BB05C CMP X8, X9
	0x032BB060 B.EQ 0x32BB088
	0x032BB064 ADRP X9, 0xE6A000
	0x032BB068 LDR X9, [X9 + 0x2D8]
	0x032BB06C LDR X9, [X9]
	0x032BB070 CMP X8, X9
	0x032BB074 B.NE 0x32BB09C
	0x032BB078 MOV X0, X19
	0x032BB07C LDP X20, X19, [X31 + 0x10]
	0x032BB080 LDP X30, X21, [X31], #0x20
	0x032BB084 B 0x32BCF88

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x1123000
	009 Move W8, [X23+2091]
	010 Move X19, X3
	011 Move X20, X2
	012 Move X21, X1
	013 Move X22, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xE6B000
	019 Move X0, [X0+3968]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+2091], W8
	023 Compare X20, 0
	024 JumpIfEqual {68}
	025 Move X24, 0xE6B000
	026 Move X24, [X24+3968]
	027 Move X23, [X20+48]
	028 Move X0, [X24]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X24]
	034 Move X8, [X0+184]
	035 Move X8, [X8+56]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move W8, [X20+40]
	038 Compare W8, 0
	039 JumpIfEqual {59}
	040 Move X22, [X22+64]
	041 Compare X22, 0
	042 JumpIfEqual {68}
	043 Move W8, [X20+57]
	044 Compare W8, 0
	045 JumpIfEqual {48}
	046 Move X0, X22
	047 Call __BinaryWriter.InternalWriteItemNull, X0
	048 Move X0, X22
	049 Move X1, X21
	050 Move X2, X20
	051 Move X3, X19
	052 Call __BinaryWriter.WriteMember, X0, X1, X2, X3
	053 Move X0, X22
	054 Move X1, X21
	055 Move X2, X20
	056 Move X3, X19
	057 Call ObjectWriter.WriteString, X0, X1, X2, X3
	058 Move W0, 1
	059 Move W0, W31
	060 Move X20, [X31+48]
	061 Move X19, [X31+56]
	062 Move X22, [X31+32]
	063 Move X21, [X31+40]
	064 Move X24, [X31+16]
	065 Move X23, [X31+24]
	066 Move X30, [X31+64]
	067 Return X0
	068 Call 0x1C17F20

Method: System.Void WriteObjectRef(System.Runtime.Serialization.Formatters.Binary.NameInfo nameInfo, System.Int64 objectId)

Disassembly:
	0x032BAF8C BL 0x1C16D6C
	0x032BAF90 MOV X20, X0
	0x032BAF94 MOV X0, X19
	0x032BAF98 BL 0x19903C0
	0x032BAF9C LDR W8, [X19 + 0x30]
	0x032BAFA0 ADRP X0, 0xE6B000

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+64]
	003 Compare X0, 0
	004 JumpIfEqual {8}
	005 Move X30, [X31+16]
	006 Call __BinaryWriter.WriteMemberObjectRef, X0, X1, X2
	007 Return 
	008 Call 0x1C17F20

Method: System.Void WriteString(System.Runtime.Serialization.Formatters.Binary.NameInfo memberNameInfo, System.Runtime.Serialization.Formatters.Binary.NameInfo typeNameInfo, System.Object stringObject)

Disassembly:
	0x032BB554 STR W8, [X0 + 0x10]
	0x032BB558 MOV X0, X19
	0x032BB55C BL 0x32BA8FC
	0x032BB560 CBZ X0, 0x32BB608
	0x032BB564 MOVZ W8, 0x1
	0x032BB568 STR W8, [X0 + 0x20]
	0x032BB56C LDR W8, [X20 + 0x30]
	0x032BB570 CMP W8, 0x2
	0x032BB574 B.EQ 0x32BB5C8
	0x032BB578 CMP W8, 0x1
	0x032BB57C B.NE 0x32BB6C8
	0x032BB580 MOV X0, X19
	0x032BB584 BL 0x32BA8FC
	0x032BB588 CBZ X0, 0x32BB608
	0x032BB58C LDR X8, [X20 + 0x28]
	0x032BB590 STR X8, [X0 + 0x28]
	0x032BB594 MOV X0, X19
	0x032BB598 BL 0x32BA8FC
	0x032BB59C CBZ X0, 0x32BB608
	0x032BB5A0 MOVZ W8, 0x2
	0x032BB5A4 B 0x32BB5D8
	0x032BB5A8 MOVZ W8, 0x2
	0x032BB5AC STR W8, [X0 + 0x10]
	0x032BB5B0 MOV X0, X19
	0x032BB5B4 BL 0x32BA8FC
	0x032BB5B8 CBZ X0, 0x32BB608
	0x032BB5BC LDR X8, [X22]
	0x032BB5C0 STR X8, [X0 + 0x28]
	0x032BB5C4 B 0x32BB5DC
	0x032BB5C8 MOV X0, X19
	0x032BB5CC BL 0x32BA8FC
	0x032BB5D0 CBZ X0, 0x32BB608
	0x032BB5D4 MOVZ W8, 0x3
	0x032BB5D8 STR W8, [X0 + 0x1C]
	0x032BB5DC LDR X20, [X19 + 0x10]
	0x032BB5E0 MOV X0, X19
	0x032BB5E4 BL 0x32BA8FC
	0x032BB5E8 CBZ X20, 0x32BB608
	0x032BB5EC MOV X1, X0
	0x032BB5F0 MOV X0, X20
	0x032BB5F4 LDP X20, X19, [X31 + 0x30]
	0x032BB5F8 LDP X22, X21, [X31 + 0x20]
	0x032BB5FC LDP X30, X23, [X31 + 0x10]
	0x032BB600 ADD X31, X31, 0x40
	0x032BB604 B 0x32B6068
	0x032BB608 BL 0x1C16F20
	0x032BB60C MOV X0, X20
	0x032BB610 BL 0x1C171E0
	0x032BB614 ADRP X0, 0xE38000
	0x032BB618 LDR X0, [X0 + 0x9D0]
	0x032BB61C BL 0x1C16D08
	0x032BB620 MOVZ W1, 0x2
	0x032BB624 BL 0x1C16D6C
	0x032BB628 MOV X20, X0
	0x032BB62C BL 0x19903C0
	0x032BB630 ADRP X21, 0xE6A000
	0x032BB634 LDR X21, [X21 + 0x518]
	0x032BB638 MOV X0, X21
	0x032BB63C BL 0x1C16D08
	0x032BB640 MOV X1, X0
	0x032BB644 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x1122000
	009 Move W8, [X23+2092]
	010 Move X20, X3
	011 Move X21, X2
	012 Move X19, X1
	013 Move X22, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xE3B000
	019 Move X0, [X0+632]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+2092], W8
	023 Move W8, 1
	024 Move [X31+12], W8
	025 Move X8, [X22+104]
	026 Compare X8, 0
	027 JumpIfEqual {79}
	028 Move W8, [X8+16]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 2
	031 Compare TEMP, 2
	032 JumpIfEqual {40}
	033 Add X4, X31, 12
	034 Move X0, X22
	035 Move X1, X20
	036 Move W2, W31
	037 Move X3, X31
	038 Call ObjectWriter.InternalGetId, X0, X1, X2, X3, X4
	039 Move X2, X0
	040 Move TEMP, 0
	041 Not TEMP
	042 Move X2, TEMP
	043 Compare X21, 0
	044 JumpIfEqual {79}
	045 Move [X21+24], X2
	046 Move X0, [X22+64]
	047 Move TEMP, X2
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {58}
	051 Move W8, [X31+12]
	052 Compare W8, 0
	053 JumpIfNotEqual {58}
	054 Compare X0, 0
	055 JumpIfEqual {79}
	056 Move X1, X19
	057 Call __BinaryWriter.WriteMemberObjectRef, X0, X1, X2
	058 Compare X0, 0
	059 JumpIfEqual {79}
	060 Compare X20, 0
	061 JumpIfEqual {67}
	062 Move X8, 0xE3B000
	063 Move X8, [X8+632]
	064 Move X1, [X8]
	065 Move X8, [X20]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X1, X19
	068 Move X2, X21
	069 Move X3, X20
	070 Call __BinaryWriter.WriteMemberString, X0, X1, X2, X3
	071 Move X20, [X31+48]
	072 Move X19, [X31+56]
	073 Move X22, [X31+32]
	074 Move X21, [X31+40]
	075 Move X30, [X31+16]
	076 Move X23, [X31+24]
	077 Add X31, X31, 64
	078 Return 
	079 Call 0x1C17F20
	080 Move X0, X20
	081 Call 0x1C181E0

Method: System.Boolean CheckForNull(System.Runtime.Serialization.Formatters.Binary.WriteObjectInfo objectInfo, System.Runtime.Serialization.Formatters.Binary.NameInfo memberNameInfo, System.Runtime.Serialization.Formatters.Binary.NameInfo typeNameInfo, System.Object data)

Disassembly:
	0x032BADD4 STR W8, [X21 + 0x10]
	0x032BADD8 STR W31, [X22 + 0x38]
	0x032BADDC LDR X8, [X19 + 0x78]
	0x032BADE0 CBZ X8, 0x32BAEAC
	0x032BADE4 LDR X0, [X19 + 0x10]
	0x032BADE8 CBZ X0, 0x32BAEAC
	0x032BADEC LDRSW X1, [X8 + 0x10]
	0x032BADF0 BL 0x32B7F2C
	0x032BADF4 STR X0, [X21 + 0x58]
	0x032BADF8 ADD X1, X21, 0x110
	0x032BADFC ADD X2, X21, 0x108
	0x032BAE00 MOV X0, X20
	0x032BAE04 BL 0x32AEBD0
	0x032BAE08 STR X0, [X21 + 0xD8]
	0x032BAE0C LDR X8, [X21 + 0x58]
	0x032BAE10 LDR X9, [X19 + 0x20]
	0x032BAE14 CMP X8, X9
	0x032BAE18 B.NE 0x32BAE24
	0x032BAE1C MOVZ W8, 0x1
	0x032BAE20 STR W8, [X21 + 0x24]
	0x032BAE24 MOVZ W8, 0x1
	0x032BAE28 STR W8, [X21 + 0x14]
	0x032BAE2C LDR X8, [X20 + 0x10]
	0x032BAE30 STR X8, [X21 + 0x40]
	0x032BAE34 LDR X8, [X20 + 0x18]
	0x032BAE38 STR W31, [X21 + 0x50]
	0x032BAE3C STR X8, [X21 + 0x48]
	0x032BAE40 LDR X0, [X19 + 0x10]
	0x032BAE44 CBZ X0, 0x32BAEAC
	0x032BAE48 MOV X1, X21
	0x032BAE4C LDP X20, X19, [X31 + 0x20]
	0x032BAE50 LDP X22, X21, [X31 + 0x10]
	0x032BAE54 LDR X30, [X31], #0x30
	0x032BAE58 B 0x32B6068
	0x032BAE5C CBZ X21, 0x32BAEAC
	0x032BAE60 MOVZ W8, 0x3
	0x032BAE64 MOVZ W9, 0x2
	0x032BAE68 STR W8, [X21 + 0x10]
	0x032BAE6C STR W9, [X21 + 0x20]
	0x032BAE70 STR W9, [X22 + 0x38]
	0x032BAE74 LDR W9, [X0 + 0x30]

ISIL:
	001 Move [X31-16], X30
	002 Compare X4, 0
	003 JumpIfEqual {5}
	004 Move W0, W31
	005 Move X8, [X0+104]
	006 Compare X8, 0
	007 JumpIfEqual {52}
	008 Move W9, [X8+28]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Compare X2, 0
	011 JumpIfEqual {52}
	012 Move W9, [X2+58]
	013 Compare W9, 0
	014 JumpIfNotEqual {31}
	015 Move W9, [X2+59]
	016 Compare W9, 0
	017 JumpIfNotEqual {31}
	018 Move W9, [X2+60]
	019 Compare W9, 0
	020 JumpIfNotEqual {31}
	021 Compare X1, 0
	022 JumpIfEqual {52}
	023 Move W9, [X1+40]
	024 Compare W9, 0
	025 JumpIfNotEqual {31}
	026 Move W8, [X8+16]
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {49}
	031 Compare X3, 0
	032 JumpIfEqual {52}
	033 Move W8, [X3+58]
	034 Move X0, [X0+64]
	035 Compare W8, 0
	036 JumpIfEqual {45}
	037 Compare X0, 0
	038 JumpIfEqual {52}
	039 Move W8, [X0+60]
	040 Move W9, [X3+64]
	041 Add W8, W8, 1
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move [X0+60], W8
	044 Call __BinaryWriter.InternalWriteItemNull, X0
	045 Compare X0, 0
	046 JumpIfEqual {52}
	047 Move X1, X2
	048 Call __BinaryWriter.WriteNullMember, X0, X1, X2
	049 Move W0, 1
	050 Move X30, [X31+16]
	051 Return X0
	052 Call 0x1C17F20

Method: System.Void WriteSerializedStreamHeader(System.Int64 topId, System.Int64 headerId)

Disassembly:
	0x032B97C8 LDRB W10, [X9 + 0x3D]!
	0x032B97CC SUB X8, X9, 0x2
	0x032B97D0 CBZ W10, 0x32B97E0
	0x032B97D4 MOVZ W10, 0x1
	0x032B97D8 STRB W10, [X8]
	0x032B97DC MOV X8, X9
	0x032B97E0 CMP W27, 0x1
	0x032B97E4 STRB W31, [X8]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+64]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move W3, 1
	006 Move W4, W31
	007 Move X30, [X31+16]
	008 Call __BinaryWriter.WriteSerializationHeader, X0, X1, X2, X3, X4
	009 Return 
	010 Call 0x1C17F20

Method: System.Runtime.Serialization.Formatters.Binary.NameInfo TypeToNameInfo(System.Type type, System.Runtime.Serialization.Formatters.Binary.WriteObjectInfo objectInfo, System.Runtime.Serialization.Formatters.Binary.InternalPrimitiveTypeE code, System.Runtime.Serialization.Formatters.Binary.NameInfo nameInfo)

Disassembly:
	0x032BB648 BL 0x19980B4
	0x032BB64C MOV X0, X21
	0x032BB650 BL 0x1C16D08
	0x032BB654 MOV X2, X0
	0x032BB658 MOV X0, X20
	0x032BB65C MOV X1, X31
	0x032BB660 BL 0x1993444
	0x032BB664 LDR X19, [X19 + 0x98]
	0x032BB668 MOV X0, X19
	0x032BB66C BL 0x19903C0
	0x032BB670 LDR W8, [X19 + 0x14]
	0x032BB674 ADRP X0, 0xE38000
	0x032BB678 STR W8, [X31 + 0xC]
	0x032BB67C LDR X0, [X0 + 0x758]
	0x032BB680 BL 0x1C16D08
	0x032BB684 ADD X1, X31, 0xC
	0x032BB688 BL 0x1C16E04
	0x032BB68C MOV X19, X0
	0x032BB690 MOV X0, X20
	0x032BB694 BL 0x19903C0
	0x032BB698 MOV X0, X20
	0x032BB69C MOV X1, X19
	0x032BB6A0 BL 0x19980B4
	0x032BB6A4 MOVZ W1, 0x1
	0x032BB6A8 MOV X0, X20
	0x032BB6AC MOV X2, X19
	0x032BB6B0 BL 0x1993444
	0x032BB6B4 ADRP X0, 0xE6A000
	0x032BB6B8 LDR X0, [X0 + 0x520]
	0x032BB6BC BL 0x1C16D08
	0x032BB6C0 MOV X1, X20
	0x032BB6C4 B 0x32BB744
	0x032BB6C8 ADRP X0, 0xE38000
	0x032BB6CC LDR X0, [X0 + 0x9D0]
	0x032BB6D0 BL 0x1C16D08
	0x032BB6D4 MOVZ W1, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W19, W3
	007 Move X22, X2
	008 Move X20, X1
	009 Compare X4, 0
	010 JumpIfEqual {17}
	011 Move X0, X4
	012 Move X1, X31
	013 Move X21, X4
	014 Call NameInfo.Init, X0
	015 Compare X22, 0
	016 JumpIfNotEqual {21}
	017 Call ObjectWriter.GetNameInfo, X0
	018 Move X21, X0
	019 Compare X22, 0
	020 JumpIfEqual {35}
	021 Compare W19, 0
	022 JumpIfNotEqual {35}
	023 Move X8, [X22+120]
	024 Compare X8, 0
	025 JumpIfNotEqual {30}
	026 Move X8, [X22+56]
	027 Compare X8, 0
	028 JumpIfEqual {46}
	029 Move X8, [X8+16]
	030 Compare X21, 0
	031 JumpIfEqual {46}
	032 Move [X21+16], X8
	033 Move X8, [X22+112]
	034 Move [X21+32], X8
	035 Compare X21, 0
	036 JumpIfEqual {46}
	037 Move [X21+40], W19
	038 Move [X21+48], X20
	039 Move X0, X21
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X30, [X31+48]
	045 Return X0
	046 Call 0x1C17F20

Method: System.Runtime.Serialization.Formatters.Binary.NameInfo TypeToNameInfo(System.Type type)

Disassembly:
	0x032BAA6C LDR X0, [X0 + 0x278]
	0x032BAA70 BL 0x1C16CF4
	0x032BAA74 MOVZ W8, 0x1
	0x032BAA78 STRB W8, [X21 + 0x839]
	0x032BAA7C LDR X0, [X22]
	0x032BAA80 BL 0x1C16F10
	0x032BAA84 MOV X1, X31
	0x032BAA88 MOV X21, X0
	0x032BAA8C BL 0x33BDD8C
	0x032BAA90 CMP W20, 0x14
	0x032BAA94 B.NE 0x32BAB08
	0x032BAA98 ADRP X8, 0xE6B000
	0x032BAA9C LDR X8, [X8 + 0x510]
	0x032BAAA0 LDR X0, [X8]
	0x032BAAA4 BL 0x1C16F10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X1
	006 Move X21, X0
	007 Call ObjectWriter.ToCode, X0, X1
	008 Move W20, W0
	009 Move X0, X21
	010 Call ObjectWriter.GetNameInfo, X0
	011 Compare X0, 0
	012 JumpIfEqual {20}
	013 Move [X0+40], W20
	014 Move [X0+48], X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 Move X21, [X31+40]
	019 Return X0
	020 Call 0x1C17F20

Method: System.Runtime.Serialization.Formatters.Binary.NameInfo TypeToNameInfo(System.Runtime.Serialization.Formatters.Binary.WriteObjectInfo objectInfo)

Disassembly:
	0x032B9AB8 STP X22, X21, [X31 + 0x40]
	0x032B9ABC STP X20, X19, [X31 + 0x50]
	0x032B9AC0 ADRP X24, 0x1123000
	0x032B9AC4 LDRB W8, [X24 + 0x826]
	0x032B9AC8 MOV X19, X6
	0x032B9ACC MOV X23, X4
	0x032B9AD0 MOV X22, X3
	0x032B9AD4 MOV X25, X2
	0x032B9AD8 MOV X20, X1
	0x032B9ADC MOV X21, X0
	0x032B9AE0 TBNZ X8, 0x0, 0x32B9AF8
	0x032B9AE4 ADRP X0, 0xE6B000
	0x032B9AE8 LDR X0, [X0 + 0xF80]
	0x032B9AEC BL 0x1C16CF4
	0x032B9AF0 MOVZ W8, 0x1
	0x032B9AF4 STRB W8, [X24 + 0x826]
	0x032B9AF8 CBZ X20, 0x32B9DD0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X1, 0
	006 JumpIfEqual {23}
	007 Move X21, [X1+32]
	008 Move X19, X1
	009 Move X20, X0
	010 Move X1, X21
	011 Call ObjectWriter.ToCode, X0, X1
	012 Move W3, W0
	013 Move X0, X20
	014 Move X2, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X1, X21
	018 Move X4, X31
	019 Move X30, [X31+32]
	020 Move X21, [X31+40]
	021 Call ObjectWriter.TypeToNameInfo, X0, X1, X2, X3, X4
	022 Return X0
	023 Call 0x1C17F20

Method: System.Runtime.Serialization.Formatters.Binary.NameInfo TypeToNameInfo(System.Runtime.Serialization.Formatters.Binary.WriteObjectInfo objectInfo, System.Runtime.Serialization.Formatters.Binary.NameInfo nameInfo)

Disassembly:
	0x032BAEB0 ADRP X0, 0xE39000
	0x032BAEB4 LDR X0, [X0 + 0x9D0]
	0x032BAEB8 BL 0x1C16D08
	0x032BAEBC MOVZ W1, 0x1
	0x032BAEC0 BL 0x1C16D6C
	0x032BAEC4 LDR X19, [X19 + 0x78]
	0x032BAEC8 MOV X20, X0
	0x032BAECC MOV X0, X19
	0x032BAED0 BL 0x19903C0
	0x032BAED4 LDR W8, [X19 + 0x14]
	0x032BAED8 ADRP X0, 0xE39000
	0x032BAEDC STR W8, [X31 + 0xC]
	0x032BAEE0 LDR X0, [X0 + 0x758]
	0x032BAEE4 BL 0x1C16D08
	0x032BAEE8 ADD X1, X31, 0xC
	0x032BAEEC BL 0x1C16E04
	0x032BAEF0 MOV X19, X0
	0x032BAEF4 MOV X0, X20
	0x032BAEF8 BL 0x19903C0
	0x032BAEFC MOV X0, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Compare X1, 0
	007 JumpIfEqual {26}
	008 Move X22, [X1+32]
	009 Move X20, X1
	010 Move X19, X2
	011 Move X21, X0
	012 Move X1, X22
	013 Call ObjectWriter.ToCode, X0, X1
	014 Move W3, W0
	015 Move X0, X21
	016 Move X1, X22
	017 Move X2, X20
	018 Move X4, X19
	019 Move X20, [X31+32]
	020 Move X19, [X31+40]
	021 Move X22, [X31+16]
	022 Move X21, [X31+24]
	023 Move X30, [X31+48]
	024 Call ObjectWriter.TypeToNameInfo, X0, X1, X2, X3, X4
	025 Return X0
	026 Call 0x1C17F20

Method: System.Void TypeToNameInfo(System.Type type, System.Runtime.Serialization.Formatters.Binary.NameInfo nameInfo)

Disassembly:
	0x032BAE78 CMP W9, 0x2
	0x032BAE7C B.EQ 0x32BAEA0
	0x032BAE80 CMP W9, 0x1
	0x032BAE84 B.NE 0x32BAF74
	0x032BAE88 LDR X8, [X0 + 0x28]
	0x032BAE8C MOVZ W9, 0x2
	0x032BAE90 STR W9, [X21 + 0x1C]
	0x032BAE94 STR X8, [X21 + 0x28]
	0x032BAE98 STR W9, [X22 + 0x34]
	0x032BAE9C B 0x32BADDC
	0x032BAEA0 STR W8, [X21 + 0x1C]
	0x032BAEA4 STR W8, [X22 + 0x34]
	0x032BAEA8 B 0x32BADDC
	0x032BAEAC BL 0x1C16F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X2
	006 Move X20, X1
	007 Move X21, X0
	008 Call ObjectWriter.ToCode, X0, X1
	009 Move X1, X20
	010 Move X4, X19
	011 Move X20, [X31+16]
	012 Move X19, [X31+24]
	013 Move W3, W0
	014 Move X0, X21
	015 Move X2, X31
	016 Move X30, [X31+32]
	017 Move X21, [X31+40]
	018 Call ObjectWriter.TypeToNameInfo, X0, X1, X2, X3, X4
	019 Return 

Method: System.Runtime.Serialization.Formatters.Binary.NameInfo MemberToNameInfo(System.String name)

Disassembly:
	0x032BA968 STP X20, X19, [X31 + 0x10]
	0x032BA96C ADRP X20, 0x1122000
	0x032BA970 ADRP X21, 0xE6B000
	0x032BA974 LDRB W8, [X20 + 0x838]
	0x032BA978 LDR X21, [X21 + 0x2C8]
	0x032BA97C MOV X19, X0
	0x032BA980 TBNZ X8, 0x0, 0x32BA998
	0x032BA984 ADRP X0, 0xE6B000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X1
	004 Call ObjectWriter.GetNameInfo, X0
	005 Compare X0, 0
	006 JumpIfEqual {11}
	007 Move [X0+16], X19
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Return X0
	011 Call 0x1C17F20

Method: System.Runtime.Serialization.Formatters.Binary.InternalPrimitiveTypeE ToCode(System.Type type)

Disassembly:
	0x032AB788 CBZ X0, 0x32AB7A4
	0x032AB78C LDR X8, [X0]
	0x032AB790 LDP X20, X19, [X31 + 0x10]
	0x032AB794 MOVZ W1, 0x11
	0x032AB798 LDP X3, X2, [X8 + 0x1C8]
	0x032AB79C LDR X30, [X31], #0x20
	0x032AB7A0 BR X3
	0x032AB7A4 BL 0x1C16F20
	0x032AB7A8 STR X30, [X31 - 0x30]!
	0x032AB7AC STP X22, X21, [X31 + 0x10]
	0x032AB7B0 STP X20, X19, [X31 + 0x20]
	0x032AB7B4 ADRP X22, 0x1131000
	0x032AB7B8 LDRB W8, [X22 + 0x7C6]
	0x032AB7BC MOV X19, X2
	0x032AB7C0 MOV X20, X1
	0x032AB7C4 MOV X21, X0
	0x032AB7C8 TBNZ X8, 0x0, 0x32AB7EC
	0x032AB7CC ADRP X0, 0xE79000
	0x032AB7D0 LDR X0, [X0 + 0xF80]
	0x032AB7D4 BL 0x1C16CF4
	0x032AB7D8 ADRP X0, 0xE4A000
	0x032AB7DC LDR X0, [X0 + 0x278]
	0x032AB7E0 BL 0x1C16CF4
	0x032AB7E4 MOVZ W8, 0x1
	0x032AB7E8 STRB W8, [X22 + 0x7C6]
	0x032AB7EC CBZ X21, 0x32AB86C
	0x032AB7F0 ADRP X22, 0xE79000
	0x032AB7F4 LDR X22, [X22 + 0xF80]
	0x032AB7F8 LDR X0, [X22]
	0x032AB7FC LDR W8, [X0 + 0xE0]
	0x032AB800 CBNZ W8, 0x32AB80C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1132000
	006 Move W8, [X21+2093]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xE7A000
	014 Move X0, [X0+3968]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2093], W8
	018 Move X8, [X20+160]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X8, 0xE7A000
	021 Move X8, [X8+3968]
	022 Move X0, [X8]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X19
	028 Call Converter.ToCode, X0
	029 Compare W0, 0
	030 JumpIfEqual {34}
	031 Move [X20+160], X19
	032 Move [X20+168], W0
	033 Move W0, [X20+168]
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Return X0

Method: System.Int64 GetAssemblyId(System.Runtime.Serialization.Formatters.Binary.WriteObjectInfo objectInfo)

Disassembly:
	0x032B98AC LDR X9, [X31 + 0x10]
	0x032B98B0 LDR X9, [X9 + 0x50]
	0x032B98B4 CMP X8, X9
	0x032B98B8 B.NE 0x32B98C8
	0x032B98BC LDR X8, [X31 + 0x10]
	0x032B98C0 LDR X21, [X8 + 0x58]
	0x032B98C4 CBNZ X21, 0x32B9924
	0x032B98C8 ADRP X22, 0xE6B000
	0x032B98CC LDR X22, [X22 + 0xF80]
	0x032B98D0 LDR X21, [X24 + 0x20]
	0x032B98D4 LDR X0, [X22]
	0x032B98D8 LDR W8, [X0 + 0xE0]
	0x032B98DC CBNZ W8, 0x32B98E8
	0x032B98E0 BL 0x1C16DFC
	0x032B98E4 LDR X0, [X22]
	0x032B98E8 LDR X8, [X0 + 0xB8]
	0x032B98EC LDR X8, [X8 + 0x38]
	0x032B98F0 CMP X21, X8
	0x032B98F4 B.EQ 0x32B9964
	0x032B98F8 LDR X8, [X31 + 0x8]
	0x032B98FC CBZ X8, 0x32B9964
	0x032B9900 LDR X8, [X24 + 0x68]
	0x032B9904 LDR X9, [X31 + 0x8]
	0x032B9908 STR X8, [X9 + 0x18]
	0x032B990C LDR X8, [X31 + 0x10]
	0x032B9910 LDR X0, [X8 + 0x40]
	0x032B9914 CBZ X0, 0x32B9964
	0x032B9918 LDR X1, [X31 + 0x8]
	0x032B991C MOV X2, X31
	0x032B9920 B 0x32B9950
	0x032B9924 LDR X0, [X31 + 0x10]
	0x032B9928 BL 0x32BA6D8
	0x032B992C CBZ X0, 0x32B9964
	0x032B9930 STR X21, [X0 + 0x10]
	0x032B9934 LDR X8, [X24 + 0x68]
	0x032B9938 MOV X1, X0
	0x032B993C STR X8, [X0 + 0x18]
	0x032B9940 LDR X8, [X31 + 0x10]
	0x032B9944 LDR X0, [X8 + 0x40]
	0x032B9948 CBZ X0, 0x32B9964
	0x032B994C LDR X2, [X31 + 0x8]
	0x032B9950 LDR X4, [X31 + 0x18]
	0x032B9954 MOV W3, W27
	0x032B9958 MOV X5, X20
	0x032B995C MOV X6, X19
	0x032B9960 BL 0x32B20F4
	0x032B9964 BL 0x1C16F20
	0x032B9968 STP X30, X19, [X31 - 0x10]!
	0x032B996C MOV X19, X1
	0x032B9970 BL 0x32BA6D8
	0x032B9974 CBZ X0, 0x32B9984
	0x032B9978 STR X19, [X0 + 0x10]
	0x032B997C LDP X30, X19, [X31], #0x10
	0x032B9980 RET
	0x032B9984 BL 0x1C16F20
	0x032B9988 STR X30, [X31 - 0x50]!
	0x032B998C STP X26, X25, [X31 + 0x10]
	0x032B9990 STP X24, X23, [X31 + 0x20]
	0x032B9994 STP X22, X21, [X31 + 0x30]
	0x032B9998 STP X20, X19, [X31 + 0x40]
	0x032B999C MOV X21, X7
	0x032B99A0 MOV X22, X6
	0x032B99A4 MOV X25, X5
	0x032B99A8 MOV X26, X4
	0x032B99AC MOV X24, X2
	0x032B99B0 MOV X23, X1
	0x032B99B4 MOV X19, X0
	0x032B99B8 BL 0x32BA6D8
	0x032B99BC CBZ X0, 0x32B9A68
	0x032B99C0 MOV X20, X0
	0x032B99C4 STR X26, [X0 + 0x10]
	0x032B99C8 CBZ X21, 0x32B99E8
	0x032B99CC LDR X8, [X21 + 0x70]
	0x032B99D0 MOV X0, X19
	0x032B99D4 MOV X1, X21
	0x032B99D8 STR X25, [X20 + 0x30]
	0x032B99DC STR X8, [X20 + 0x20]
	0x032B99E0 BL 0x32B8AB8
	0x032B99E4 B 0x32B99F8
	0x032B99E8 MOV X0, X19
	0x032B99EC MOV X1, X25
	0x032B99F0 STR X25, [X20 + 0x30]
	0x032B99F4 BL 0x32B9A6C
	0x032B99F8 MOV X25, X0
	0x032B99FC CBZ X24, 0x32B9A68
	0x032B9A00 LDRB W8, [X24 + 0x3B]
	0x032B9A04 MOV X0, X19
	0x032B9A08 MOV X1, X20
	0x032B9A0C MOV X2, X25
	0x032B9A10 STRB W8, [X20 + 0x3B]
	0x032B9A14 LDRB W8, [X24 + 0x3D]
	0x032B9A18 MOV X3, X22
	0x032B9A1C MOV X4, X23
	0x032B9A20 MOV X6, X21
	0x032B9A24 STRB W8, [X20 + 0x3D]
	0x032B9A28 BL 0x32B9AA8
	0x032B9A2C LDR X0, [X19 + 0xB8]
	0x032B9A30 CBZ X0, 0x32B9A68
	0x032B9A34 MOV X1, X20
	0x032B9A38 MOV X2, X31
	0x032B9A3C BL 0x32BD7AC
	0x032B9A40 LDR X0, [X19 + 0xB8]
	0x032B9A44 CBZ X0, 0x32B9A68
	0x032B9A48 MOV X1, X25
	0x032B9A4C LDP X20, X19, [X31 + 0x40]
	0x032B9A50 LDP X22, X21, [X31 + 0x30]
	0x032B9A54 LDP X24, X23, [X31 + 0x20]
	0x032B9A58 LDP X26, X25, [X31 + 0x10]
	0x032B9A5C MOV X2, X31
	0x032B9A60 LDR X30, [X31], #0x50
	0x032B9A64 B 0x32BD7AC
	0x032B9A68 BL 0x1C16F20
	0x032B9A6C STP X30, X21, [X31 - 0x20]!
	0x032B9A70 STP X20, X19, [X31 + 0x10]
	0x032B9A74 MOV X19, X1
	0x032B9A78 MOV X21, X0
	0x032B9A7C BL 0x32AA788
	0x032B9A80 MOV W20, W0
	0x032B9A84 MOV X0, X21
	0x032B9A88 BL 0x32BA6D8
	0x032B9A8C CBZ X0, 0x32B9AA4
	0x032B9A90 STR W20, [X0 + 0x28]
	0x032B9A94 STR X19, [X0 + 0x30]
	0x032B9A98 LDP X20, X19, [X31 + 0x10]
	0x032B9A9C LDP X30, X21, [X31], #0x20
	0x032B9AA0 RET
	0x032B9AA4 BL 0x1C16F20
	0x032B9AA8 STR X30, [X31 - 0x60]!
	0x032B9AAC STP X28, X27, [X31 + 0x10]
	0x032B9AB0 STP X26, X25, [X31 + 0x20]
	0x032B9AB4 STP X24, X23, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X20, 0x1124000
	008 Move W8, [X20+2094]
	009 Move X21, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0xE6C000
	016 Move X0, [X0+3968]
	017 Call 0x1C17CF4
	018 Move X0, 0xE6B000
	019 Move X0, [X0+3512]
	020 Call 0x1C17CF4
	021 Move X0, 0xE3D000
	022 Move X0, [X0+2656]
	023 Call 0x1C17CF4
	024 Move X0, 0xE6D000
	025 Move X0, [X0+1232]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+2094], W8
	029 Move X8, [X19+176]
	030 Compare X8, 0
	031 JumpIfNotEqual {41}
	032 Move X8, 0xE6B000
	033 Move X8, [X8+3512]
	034 Move X0, [X8]
	035 Call 0x1C17F10
	036 Move W1, 5
	037 Move X2, X31
	038 Move X20, X0
	039 Call Hashtable..ctor, X0, X1
	040 Move [X19+176], X20
	041 Move [X31+28], W31
	042 Compare X21, 0
	043 JumpIfEqual {152}
	044 Move X20, [X21+128]
	045 Compare X20, 0
	046 JumpIfNotEqual {53}
	047 Move X8, [X21+56]
	048 Compare X8, 0
	049 JumpIfEqual {152}
	050 Move X20, [X8+24]
	051 Compare X20, 0
	052 JumpIfEqual {152}
	053 Move W8, [X20+16]
	054 Compare W8, 0
	055 JumpIfEqual {106}
	056 Move X21, 0xE6C000
	057 Move X21, [X21+3968]
	058 Move X0, [X21]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {64}
	062 Call 0x1C17DFC
	063 Move X0, [X21]
	064 Move X8, [X0+184]
	065 Move X0, X20
	066 Move X2, X31
	067 Move X1, [X8+216]
	068 Call String.Equals, X0, X1
	069 Move X21, X31
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfEqual {144}
	074 Move X0, [X19+176]
	075 Compare X0, 0
	076 JumpIfEqual {152}
	077 Move X8, [X0]
	078 Move X1, X20
	079 Move X9, [X8+696]
	080 Move X2, [X8+704]
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Move TEMP, X0
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfNotEqual {107}
	086 Move X0, [X19+176]
	087 Compare X0, 0
	088 JumpIfEqual {152}
	089 Move X8, [X0]
	090 Move X1, X20
	091 Move X9, [X8+728]
	092 Move X2, [X8+736]
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Compare X0, 0
	095 JumpIfEqual {152}
	096 Move X8, 0xE3D000
	097 Move X8, [X8+2656]
	098 Move X9, [X0]
	099 Move X1, [X8]
	100 Move X8, [X9+64]
	101 Move X9, [X1+64]
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Call 0x1C17E08
	104 Move X21, [X0]
	105 Move [X31+28], W31
	106 Move X21, X31
	107 Move X8, 0xE6D000
	108 Move X8, [X8+1232]
	109 Move X1, X20
	110 Move X2, X31
	111 Move X0, [X8]
	112 Call String.Concat, X0, X1
	113 Move X1, X0
	114 Add X4, X31, 28
	115 Move X0, X19
	116 Move W2, W31
	117 Move X3, X31
	118 Call ObjectWriter.InternalGetId, X0, X1, X2, X3, X4
	119 Move X8, 0xE3D000
	120 Move X22, [X19+176]
	121 Move X8, [X8+2656]
	122 Move X21, X0
	123 Move [X31+8], X0
	124 Add X1, X31, 8
	125 Move X8, [X8]
	126 Move X0, X8
	127 Call 0x1C17E04
	128 Compare X22, 0
	129 JumpIfEqual {152}
	130 Move X8, [X22]
	131 Move X2, X0
	132 Move X0, X22
	133 Move X1, X20
	134 Move X9, [X8+744]
	135 Move X3, [X8+752]
	136 NotImplemented "Instruction BLR not yet implemented."
	137 Move X0, [X19+64]
	138 Compare X0, 0
	139 JumpIfEqual {152}
	140 Move W4, [X31+28]
	141 Move X2, X20
	142 Move W3, W21
	143 Call __BinaryWriter.WriteAssembly, X0, X1, X2, X3, X4
	144 Move X0, X21
	145 Move X20, [X31+48]
	146 Move X19, [X31+56]
	147 Move X22, [X31+32]
	148 Move X21, [X31+40]
	149 Move X30, [X31+16]
	150 Add X31, X31, 64
	151 Return X0
	152 Call 0x1C17F20
	153 Call 0x1C181E0

Method: System.Type GetType(System.Object obj)

Disassembly:
	0x032BA70C MOV X1, X31
	0x032BA710 BL 0x32BD9B4
	0x032BA714 TBZ X0, 0x0, 0x32BA738
	0x032BA718 ADRP X8, 0xE6B000
	0x032BA71C LDR X8, [X8 + 0x500]
	0x032BA720 LDR X0, [X8]

ISIL:
	001 Compare X1, 0
	002 JumpIfEqual {7}
	003 Move X0, X1
	004 Move X1, X31
	005 Call "il2cpp_vm_object_is_inst", X0
	006 Return X0
	007 Move [X31-16], X30
	008 Call 0x1C17F20

Method: System.Runtime.Serialization.Formatters.Binary.NameInfo GetNameInfo()

Disassembly:
	0x032BB6D8 BL 0x1C16D6C
	0x032BB6DC MOV X19, X0
	0x032BB6E0 MOV X0, X20
	0x032BB6E4 BL 0x19903C0
	0x032BB6E8 LDR W8, [X20 + 0x30]
	0x032BB6EC ADRP X0, 0xE6A000
	0x032BB6F0 STR W8, [X31 + 0x8]
	0x032BB6F4 LDR X0, [X0 + 0x540]
	0x032BB6F8 BL 0x1C16D08
	0x032BB6FC ADD X1, X31, 0x8
	0x032BB700 BL 0x1C16E04
	0x032BB704 MOV X1, X31
	0x032BB708 BL 0x33B162C
	0x032BB70C MOV X20, X0
	0x032BB710 MOV X0, X19
	0x032BB714 BL 0x19903C0
	0x032BB718 MOV X0, X19
	0x032BB71C MOV X1, X20
	0x032BB720 BL 0x19980B4
	0x032BB724 MOV X0, X19
	0x032BB728 MOV X1, X31
	0x032BB72C MOV X2, X20
	0x032BB730 BL 0x1993444
	0x032BB734 ADRP X0, 0xE6A000
	0x032BB738 LDR X0, [X0 + 0x570]
	0x032BB73C BL 0x1C16D08
	0x032BB740 MOV X1, X19
	0x032BB744 MOV X2, X31
	0x032BB748 BL 0x33BFB40
	0x032BB74C MOV X19, X0
	0x032BB750 ADRP X0, 0xE62000
	0x032BB754 LDR X0, [X0 + 0x2E0]
	0x032BB758 BL 0x1C16D08
	0x032BB75C BL 0x1C16F10
	0x032BB760 MOV X1, X19
	0x032BB764 MOV X2, X31
	0x032BB768 MOV X20, X0
	0x032BB76C BL 0x329F100
	0x032BB770 ADRP X0, 0xE6A000
	0x032BB774 LDR X0, [X0 + 0x578]
	0x032BB778 BL 0x1C16D08
	0x032BB77C MOV X1, X0
	0x032BB780 MOV X0, X20
	0x032BB784 BL 0x1C16DEC
	0x032BB788 SUB X31, X31, 0x40
	0x032BB78C STP X30, X23, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1122000
	005 Move W8, [X20+2095]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE6B000
	012 Move X0, [X0+1280]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2095], W8
	016 Move X0, [X19+184]
	017 Compare X0, 0
	018 JumpIfEqual {53}
	019 Move X1, X31
	020 Call SerStack.IsEmpty, X0
	021 Move TEMP, X0
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {32}
	025 Move X8, 0xE6B000
	026 Move X8, [X8+1280]
	027 Move X0, [X8]
	028 Call 0x1C17F10
	029 Move X1, X31
	030 Move X19, X0
	031 Call NameInfo..ctor, X0
	032 Move X0, [X19+184]
	033 Compare X0, 0
	034 JumpIfEqual {53}
	035 Move X1, X31
	036 Call SerStack.Pop, X0
	037 Compare X0, 0
	038 JumpIfEqual {53}
	039 Move X8, 0xE6B000
	040 Move X8, [X8+1280]
	041 Move X19, X0
	042 Move X1, [X8]
	043 Move X8, [X0]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X0, X19
	046 Move X1, X31
	047 Call NameInfo.Init, X0
	048 Move X0, X19
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 Return X0
	053 Call 0x1C17F20
	054 Move X0, X19
	055 Call 0x1C181E0

Method: System.Boolean CheckTypeFormat(System.Runtime.Serialization.Formatters.FormatterTypeStyle test, System.Runtime.Serialization.Formatters.FormatterTypeStyle want)

Disassembly:
	0x032BA700 STRB W8, [X20 + 0x82F]
	0x032BA704 LDR X0, [X19 + 0xB8]
	0x032BA708 CBZ X0, 0x32BA784

ISIL:
	001 NotImplemented "Instruction BICS not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 Return X0

Method: System.Void PutNameInfo(System.Runtime.Serialization.Formatters.Binary.NameInfo nameInfo)

Disassembly:
	0x032B9E5C CBZ X0, 0x32B9E74
	0x032B9E60 MOV X1, X2
	0x032B9E64 BL 0x32B30B0
	0x032B9E68 MOVZ W0, 0x1
	0x032B9E6C LDR X30, [X31], #0x10
	0x032B9E70 RET
	0x032B9E74 BL 0x1C16F20

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+184]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X2, X31
	006 Move X30, [X31+16]
	007 Call SerStack.Push, X0, X1
	008 Return 
	009 Call 0x1C17F20

