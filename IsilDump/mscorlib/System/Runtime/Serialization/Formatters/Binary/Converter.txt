Type: System.Runtime.Serialization.Formatters.Binary.Converter

Method: System.Runtime.Serialization.Formatters.Binary.InternalPrimitiveTypeE ToCode(System.Type type)

Disassembly:
	0x032ABA24 BL 0x1C16DFC
	0x032ABA28 MOV X0, X31
	0x032ABA2C BL 0x3338524
	0x032ABA30 ADRP X8, 0xE51000
	0x032ABA34 LDR X8, [X8 + 0x9E8]
	0x032ABA38 MOV X21, X0
	0x032ABA3C LDR X8, [X8]
	0x032ABA40 LDR W9, [X8 + 0xE0]
	0x032ABA44 CBNZ W9, 0x32ABA50
	0x032ABA48 MOV X0, X8
	0x032ABA4C BL 0x1C16DFC
	0x032ABA50 MOV X0, X20
	0x032ABA54 MOV X1, X21
	0x032ABA58 MOV X2, X31
	0x032ABA5C BL 0x331E6DC
	0x032ABA60 LDR X8, [X19 + 0x30]
	0x032ABA64 CBZ X8, 0x32ABF6C
	0x032ABA68 LDR X9, [X8]
	0x032ABA6C MOV W1, W0
	0x032ABA70 LDP X3, X2, [X9 + 0x1F8]
	0x032ABA74 B 0x32ABEDC
	0x032ABA78 ADRP X8, 0xE4A000
	0x032ABA7C LDR X8, [X8 + 0xC48]
	0x032ABA80 LDR X0, [X8]
	0x032ABA84 LDR W8, [X0 + 0xE0]
	0x032ABA88 CBNZ W8, 0x32ABA90
	0x032ABA8C BL 0x1C16DFC
	0x032ABA90 MOV X0, X31
	0x032ABA94 BL 0x3338524
	0x032ABA98 ADRP X8, 0xE51000
	0x032ABA9C LDR X8, [X8 + 0x9E8]
	0x032ABAA0 MOV X21, X0
	0x032ABAA4 LDR X8, [X8]
	0x032ABAA8 LDR W9, [X8 + 0xE0]
	0x032ABAAC CBNZ W9, 0x32ABAB8
	0x032ABAB0 MOV X0, X8
	0x032ABAB4 BL 0x1C16DFC
	0x032ABAB8 MOV X0, X20
	0x032ABABC MOV X1, X21
	0x032ABAC0 MOV X2, X31
	0x032ABAC4 BL 0x3321B64
	0x032ABAC8 MOV X2, X0
	0x032ABACC MOV X0, X19
	0x032ABAD0 LDP X20, X19, [X31 + 0x20]
	0x032ABAD4 LDP X22, X21, [X31 + 0x10]
	0x032ABAD8 MOV X3, X1
	0x032ABADC MOV X1, X2
	0x032ABAE0 MOV X2, X3
	0x032ABAE4 LDR X30, [X31], #0x30
	0x032ABAE8 B 0x32B1C28
	0x032ABAEC ADRP X8, 0xE4A000
	0x032ABAF0 LDR X8, [X8 + 0xC48]
	0x032ABAF4 LDR X0, [X8]
	0x032ABAF8 LDR W8, [X0 + 0xE0]
	0x032ABAFC CBNZ W8, 0x32ABB04
	0x032ABB00 BL 0x1C16DFC
	0x032ABB04 MOV X0, X31
	0x032ABB08 BL 0x3338524
	0x032ABB0C ADRP X8, 0xE51000
	0x032ABB10 LDR X8, [X8 + 0x9E8]
	0x032ABB14 MOV X21, X0
	0x032ABB18 LDR X8, [X8]
	0x032ABB1C LDR W9, [X8 + 0xE0]
	0x032ABB20 CBNZ W9, 0x32ABB2C
	0x032ABB24 MOV X0, X8
	0x032ABB28 BL 0x1C16DFC
	0x032ABB2C MOV X0, X20
	0x032ABB30 MOV X1, X21
	0x032ABB34 MOV X2, X31
	0x032ABB38 BL 0x3321990
	0x032ABB3C LDR X0, [X19 + 0x30]
	0x032ABB40 CBZ X0, 0x32ABF6C
	0x032ABB44 LDR X8, [X0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1132000
	005 Move W8, [X20+2005]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xE7A000
	012 Move X0, [X0+3968]
	013 Call 0x1C17CF4
	014 Move X0, 0xE49000
	015 Move X0, [X0+1728]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2005], W8
	019 Move X20, 0xE7A000
	020 Move X20, [X20+3968]
	021 Compare X19, 0
	022 JumpIfEqual {30}
	023 Move X0, X19
	024 Move X1, X31
	025 Call Type.get_IsPrimitive, X0
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {53}
	030 Move X8, 0xE49000
	031 Move X8, [X8+1728]
	032 Move X0, [X8]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X19
	038 Move X1, X31
	039 Call Type.GetTypeCode, X0
	040 Move X8, [X20]
	041 Move W19, W0
	042 Move W9, [X8+224]
	043 Compare W9, 0
	044 JumpIfNotEqual {47}
	045 Move X0, X8
	046 Call 0x1C17DFC
	047 Move W0, W19
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Call Converter.ToPrimitiveTypeEnum, X0
	052 Return X0
	053 Move X0, [X20]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {59}
	057 Call 0x1C17DFC
	058 Move X0, [X20]
	059 Move X8, [X0+184]
	060 Move X9, [X8+160]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move W9, [X0+224]
	063 Compare W9, 0
	064 JumpIfNotEqual {68}
	065 Call 0x1C17DFC
	066 Move X0, [X20]
	067 Move X8, [X0+184]
	068 Move X9, [X8+152]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move W9, [X0+224]
	071 Compare W9, 0
	072 JumpIfNotEqual {76}
	073 Call 0x1C17DFC
	074 Move X8, [X20]
	075 Move X8, [X8+184]
	076 Move X8, [X8+96]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move W8, 5
	079 NotImplemented "Instruction CSEL not yet implemented."
	080 Move W0, 13
	081 Move W0, 12
	082 Move X20, [X31+16]
	083 Move X19, [X31+24]
	084 Move X30, [X31+32]
	085 Return X0

Method: System.Boolean IsWriteAsByteArray(System.Runtime.Serialization.Formatters.Binary.InternalPrimitiveTypeE code)

Disassembly:
	0x032B0118 MOV W0, W20
	0x032B011C BL 0x32AFE40
	0x032B0120 LDR X8, [X22]
	0x032B0124 MOV W20, W0
	0x032B0128 LDR W9, [X8 + 0xE0]
	0x032B012C CBNZ W9, 0x32B0138
	0x032B0130 MOV X0, X8
	0x032B0134 BL 0x1C16DFC
	0x032B0138 MOV X0, X31

ISIL:
	001 Subtract W8, W0, 1
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move W9, 0xE7E7
	004 NotImplemented "Instruction LSRV not yet implemented."
	005 And W0, W8, 1
	006 Return X0
	007 Move W0, W31
	008 Return X0

Method: System.Int32 TypeLength(System.Runtime.Serialization.Formatters.Binary.InternalPrimitiveTypeE code)

Disassembly:
	0x032B013C BL 0x3338524
	0x032B0140 LDR X8, [X21]
	0x032B0144 MOV X21, X0
	0x032B0148 LDR W9, [X8 + 0xE0]
	0x032B014C CBNZ W9, 0x32B0158
	0x032B0150 MOV X0, X8
	0x032B0154 BL 0x1C16DFC
	0x032B0158 MOV X0, X19
	0x032B015C MOV W1, W20

ISIL:
	001 Subtract W8, W0, 1
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move X9, -40996864
	004 Add X9, X9, 1360
	005 Move W0, [X9]
	006 Return X0
	007 Move W0, W31
	008 Return X0

Method: System.Type ToArrayType(System.Runtime.Serialization.Formatters.Binary.InternalPrimitiveTypeE code)

Disassembly:
	0x032AC4CC LDR X0, [X1 + 0x30]
	0x032AC4D0 MOV X20, X1
	0x032AC4D4 CBZ X0, 0x32AC528
	0x032AC4D8 LDR X8, [X0]
	0x032AC4DC MOVZ W1, 0xC
	0x032AC4E0 LDP X9, X2, [X8 + 0x1C8]
	0x032AC4E4 BLR X9
	0x032AC4E8 LDR X0, [X20 + 0x30]
	0x032AC4EC CBZ X0, 0x32AC528
	0x032AC4F0 LDR X8, [X0]
	0x032AC4F4 LDR W1, [X19 + 0x10]
	0x032AC4F8 LDR X9, [X8 + 0x248]
	0x032AC4FC LDR X2, [X8 + 0x250]
	0x032AC500 BLR X9
	0x032AC504 LDR X0, [X20 + 0x30]
	0x032AC508 CBZ X0, 0x32AC528
	0x032AC50C LDR X8, [X0]
	0x032AC510 LDR X1, [X19 + 0x18]
	0x032AC514 LDP X20, X19, [X31 + 0x10]
	0x032AC518 LDR X3, [X8 + 0x298]
	0x032AC51C LDR X2, [X8 + 0x2A0]
	0x032AC520 LDR X30, [X31], #0x20
	0x032AC524 BR X3
	0x032AC528 BL 0x1C16F20
	0x032AC52C STR X30, [X31 - 0x20]!
	0x032AC530 STP X20, X19, [X31 + 0x10]
	0x032AC534 CBZ X1, 0x32AC584
	0x032AC538 MOV X19, X0
	0x032AC53C LDR X0, [X1 + 0x68]
	0x032AC540 MOV X20, X1
	0x032AC544 CBZ X0, 0x32AC584
	0x032AC548 LDR X8, [X0]
	0x032AC54C LDR X9, [X8 + 0x228]
	0x032AC550 LDR X1, [X8 + 0x230]
	0x032AC554 BLR X9
	0x032AC558 STR W0, [X19 + 0x10]
	0x032AC55C LDR X0, [X20 + 0x68]
	0x032AC560 CBZ X0, 0x32AC584
	0x032AC564 LDR X8, [X0]
	0x032AC568 LDR X9, [X8 + 0x298]
	0x032AC56C LDR X1, [X8 + 0x2A0]
	0x032AC570 BLR X9
	0x032AC574 STR X0, [X19 + 0x18]
	0x032AC578 LDP X20, X19, [X31 + 0x10]
	0x032AC57C LDR X30, [X31], #0x20
	0x032AC580 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1131000
	006 Move X20, 0xE79000
	007 Move W8, [X21+2006]
	008 Move X20, [X20+3968]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE79000
	015 Move X0, [X0+3968]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2006], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move X21, [X8+16]
	027 Call 0x1C17D44
	028 Compare X21, 0
	029 JumpIfNotEqual {36}
	030 Move X0, [X20]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Call Converter.InitArrayTypeA
	036 Move X0, [X20]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1C17DFC
	041 Move X0, [X20]
	042 Move X8, [X0+184]
	043 Move X20, [X8+16]
	044 Call 0x1C17D44
	045 Compare X20, 0
	046 JumpIfEqual {56}
	047 Move W8, [X20+24]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Add X8, X20, W19
	050 Move X0, [X8+32]
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Return X0
	056 Call 0x1C17F20
	057 Call 0x1C17F28

Method: System.Void InitTypeA()

Disassembly:
	0x032B0518 MOV X1, X31
	0x032B051C LDR X8, [X8 + 0xB8]
	0x032B0520 STR X0, [X8 + 0x78]
	0x032B0524 ADRP X8, 0xE6A000
	0x032B0528 LDR X8, [X8 + 0xD88]
	0x032B052C LDR X0, [X8]
	0x032B0530 BL 0x338C698
	0x032B0534 LDR X8, [X20]
	0x032B0538 MOV X1, X31
	0x032B053C LDR X8, [X8 + 0xB8]
	0x032B0540 STR X0, [X8 + 0x80]
	0x032B0544 ADRP X8, 0xE6A000
	0x032B0548 LDR X8, [X8 + 0xD90]
	0x032B054C LDR X0, [X8]
	0x032B0550 BL 0x338C698
	0x032B0554 LDR X8, [X20]
	0x032B0558 MOV X1, X31
	0x032B055C LDR X8, [X8 + 0xB8]
	0x032B0560 STR X0, [X8 + 0x88]
	0x032B0564 ADRP X8, 0xE6B000
	0x032B0568 LDR X8, [X8 + 0xA80]
	0x032B056C LDR X0, [X8]
	0x032B0570 BL 0x338C698
	0x032B0574 LDR X8, [X20]
	0x032B0578 MOV X1, X31
	0x032B057C LDR X8, [X8 + 0xB8]
	0x032B0580 STR X0, [X8 + 0x90]
	0x032B0584 ADRP X8, 0xE75000
	0x032B0588 LDR X8, [X8 + 0x180]
	0x032B058C LDR X0, [X8]
	0x032B0590 BL 0x338C698
	0x032B0594 LDR X8, [X20]
	0x032B0598 MOV X1, X31
	0x032B059C LDR X8, [X8 + 0xB8]
	0x032B05A0 STR X0, [X8 + 0x98]
	0x032B05A4 ADRP X8, 0xE74000
	0x032B05A8 LDR X8, [X8 + 0xF38]
	0x032B05AC LDR X0, [X8]
	0x032B05B0 BL 0x338C698
	0x032B05B4 LDR X8, [X20]
	0x032B05B8 MOV X1, X31
	0x032B05BC LDR X8, [X8 + 0xB8]
	0x032B05C0 STR X0, [X8 + 0xA0]
	0x032B05C4 ADRP X8, 0xE6A000
	0x032B05C8 LDR X8, [X8 + 0xD98]
	0x032B05CC LDR X0, [X8]
	0x032B05D0 BL 0x338C698
	0x032B05D4 LDR X8, [X20]
	0x032B05D8 MOV X1, X31
	0x032B05DC LDR X8, [X8 + 0xB8]
	0x032B05E0 STR X0, [X8 + 0xA8]
	0x032B05E4 ADRP X8, 0xE6A000
	0x032B05E8 LDR X8, [X8 + 0xDA0]
	0x032B05EC LDR X0, [X8]
	0x032B05F0 BL 0x338C698
	0x032B05F4 LDR X8, [X20]
	0x032B05F8 MOV X1, X31
	0x032B05FC LDR X8, [X8 + 0xB8]
	0x032B0600 STR X0, [X8 + 0xB0]
	0x032B0604 ADRP X8, 0xE6A000
	0x032B0608 LDR X8, [X8 + 0xDA8]
	0x032B060C LDR X0, [X8]
	0x032B0610 BL 0x338C698
	0x032B0614 LDR X8, [X20]
	0x032B0618 MOV X1, X31
	0x032B061C LDR X8, [X8 + 0xB8]
	0x032B0620 STR X0, [X8 + 0xB8]
	0x032B0624 ADRP X8, 0xE4D000
	0x032B0628 LDR X8, [X8 + 0x968]
	0x032B062C LDR X0, [X8]
	0x032B0630 BL 0x338C698
	0x032B0634 LDR X8, [X20]
	0x032B0638 MOV X1, X31
	0x032B063C LDR X8, [X8 + 0xB8]
	0x032B0640 STR X0, [X8 + 0xC0]
	0x032B0644 ADRP X8, 0xE74000
	0x032B0648 LDR X8, [X8 + 0x810]
	0x032B064C LDR X0, [X8]
	0x032B0650 BL 0x338C698
	0x032B0654 LDR X8, [X20]
	0x032B0658 MOV X1, X31
	0x032B065C LDR X9, [X8 + 0xB8]
	0x032B0660 LDR X8, [X9 + 0x38]
	0x032B0664 STR X0, [X9 + 0xC8]
	0x032B0668 MOV X0, X8
	0x032B066C BL 0x32D58E4
	0x032B0670 LDR X8, [X20]
	0x032B0674 LDR X8, [X8 + 0xB8]
	0x032B0678 STR X0, [X8 + 0xD0]
	0x032B067C CBZ X0, 0x32B0914
	0x032B0680 ADRP X25, 0xE75000
	0x032B0684 ADRP X26, 0xE75000
	0x032B0688 ADRP X27, 0xE75000
	0x032B068C ADRP X28, 0xE75000
	0x032B0690 ADRP X24, 0xE75000
	0x032B0694 ADRP X23, 0xE75000
	0x032B0698 ADRP X22, 0xE75000
	0x032B069C ADRP X21, 0xE75000
	0x032B06A0 ADRP X19, 0xE6C000
	0x032B06A4 ADRP X29, 0xE75000
	0x032B06A8 LDR X25, [X25 + 0x188]
	0x032B06AC LDR X26, [X26 + 0x160]
	0x032B06B0 LDR X27, [X27 + 0x170]
	0x032B06B4 LDR X28, [X28 + 0x110]
	0x032B06B8 LDR X24, [X24 + 0x118]
	0x032B06BC LDR X23, [X23 + 0x120]
	0x032B06C0 LDR X22, [X22 + 0x138]
	0x032B06C4 LDR X21, [X21 + 0x148]
	0x032B06C8 LDR X19, [X19 + 0xA60]
	0x032B06CC LDR X29, [X29 + 0x150]
	0x032B06D0 LDR X8, [X0]
	0x032B06D4 LDP X9, X1, [X8 + 0x1B8]
	0x032B06D8 BLR X9
	0x032B06DC LDR X8, [X20]
	0x032B06E0 MOV X1, X31
	0x032B06E4 LDR X8, [X8 + 0xB8]
	0x032B06E8 STR X0, [X8 + 0xD8]
	0x032B06EC LDR X0, [X25]
	0x032B06F0 BL 0x338C698
	0x032B06F4 LDR X8, [X20]
	0x032B06F8 MOV X1, X31
	0x032B06FC LDR X8, [X8 + 0xB8]
	0x032B0700 STR X0, [X8 + 0xE0]
	0x032B0704 LDR X0, [X26]
	0x032B0708 BL 0x338C698
	0x032B070C LDR X8, [X20]
	0x032B0710 MOV X1, X31
	0x032B0714 LDR X8, [X8 + 0xB8]
	0x032B0718 STR X0, [X8 + 0xE8]
	0x032B071C LDR X0, [X27]
	0x032B0720 BL 0x338C698
	0x032B0724 LDR X8, [X20]
	0x032B0728 MOV X1, X31
	0x032B072C LDR X8, [X8 + 0xB8]
	0x032B0730 STR X0, [X8 + 0xF0]
	0x032B0734 LDR X0, [X28]
	0x032B0738 BL 0x338C698
	0x032B073C LDR X8, [X20]
	0x032B0740 MOV X1, X31
	0x032B0744 LDR X8, [X8 + 0xB8]
	0x032B0748 STR X0, [X8 + 0xF8]
	0x032B074C LDR X0, [X24]
	0x032B0750 BL 0x338C698
	0x032B0754 LDR X8, [X20]
	0x032B0758 MOV X1, X31
	0x032B075C LDR X8, [X8 + 0xB8]
	0x032B0760 STR X0, [X8 + 0x100]
	0x032B0764 LDR X0, [X23]
	0x032B0768 BL 0x338C698
	0x032B076C LDR X8, [X20]
	0x032B0770 MOV X1, X31
	0x032B0774 LDR X8, [X8 + 0xB8]
	0x032B0778 STR X0, [X8 + 0x108]
	0x032B077C LDR X0, [X22]
	0x032B0780 BL 0x338C698
	0x032B0784 LDR X8, [X20]
	0x032B0788 MOV X1, X31
	0x032B078C LDR X8, [X8 + 0xB8]
	0x032B0790 STR X0, [X8 + 0x110]
	0x032B0794 LDR X0, [X21]
	0x032B0798 BL 0x338C698
	0x032B079C LDR X8, [X20]
	0x032B07A0 MOV X1, X31
	0x032B07A4 LDR X8, [X8 + 0xB8]
	0x032B07A8 STR X0, [X8 + 0x118]
	0x032B07AC LDR X0, [X19]
	0x032B07B0 BL 0x338C698
	0x032B07B4 LDR X8, [X20]
	0x032B07B8 MOV X1, X31
	0x032B07BC LDR X8, [X8 + 0xB8]
	0x032B07C0 STR X0, [X8 + 0x120]
	0x032B07C4 LDR X0, [X29]
	0x032B07C8 BL 0x338C698
	0x032B07CC LDR X8, [X20]
	0x032B07D0 MOV X1, X31
	0x032B07D4 LDR X8, [X8 + 0xB8]
	0x032B07D8 STR X0, [X8 + 0x128]
	0x032B07DC ADRP X8, 0xE75000
	0x032B07E0 LDR X8, [X8 + 0x158]
	0x032B07E4 LDR X0, [X8]
	0x032B07E8 BL 0x338C698
	0x032B07EC LDR X8, [X20]
	0x032B07F0 MOV X1, X31
	0x032B07F4 LDR X8, [X8 + 0xB8]
	0x032B07F8 STR X0, [X8 + 0x130]
	0x032B07FC ADRP X8, 0xE75000
	0x032B0800 LDR X8, [X8 + 0x168]
	0x032B0804 LDR X0, [X8]
	0x032B0808 BL 0x338C698
	0x032B080C LDR X8, [X20]
	0x032B0810 MOV X1, X31
	0x032B0814 LDR X8, [X8 + 0xB8]
	0x032B0818 STR X0, [X8 + 0x138]
	0x032B081C ADRP X8, 0xE6C000
	0x032B0820 LDR X8, [X8 + 0xA68]
	0x032B0824 LDR X0, [X8]
	0x032B0828 BL 0x338C698
	0x032B082C LDR X8, [X20]
	0x032B0830 MOV X1, X31
	0x032B0834 LDR X8, [X8 + 0xB8]
	0x032B0838 STR X0, [X8 + 0x140]
	0x032B083C ADRP X8, 0xE75000
	0x032B0840 LDR X8, [X8 + 0x178]
	0x032B0844 LDR X0, [X8]
	0x032B0848 BL 0x338C698
	0x032B084C LDR X8, [X20]
	0x032B0850 MOV X1, X31
	0x032B0854 LDR X8, [X8 + 0xB8]
	0x032B0858 STR X0, [X8 + 0x148]
	0x032B085C ADRP X8, 0xE75000
	0x032B0860 LDR X8, [X8 + 0x130]
	0x032B0864 LDR X0, [X8]
	0x032B0868 BL 0x338C698
	0x032B086C LDR X8, [X20]
	0x032B0870 MOV X1, X31
	0x032B0874 LDR X8, [X8 + 0xB8]
	0x032B0878 STR X0, [X8 + 0x150]
	0x032B087C ADRP X8, 0xE75000
	0x032B0880 LDR X8, [X8 + 0x190]
	0x032B0884 LDR X0, [X8]
	0x032B0888 BL 0x338C698
	0x032B088C LDR X8, [X20]
	0x032B0890 MOV X1, X31
	0x032B0894 LDR X8, [X8 + 0xB8]
	0x032B0898 STR X0, [X8 + 0x158]
	0x032B089C ADRP X8, 0xE75000
	0x032B08A0 LDR X8, [X8 + 0x198]
	0x032B08A4 LDR X0, [X8]
	0x032B08A8 BL 0x338C698
	0x032B08AC LDR X8, [X20]
	0x032B08B0 MOV X1, X31
	0x032B08B4 LDR X8, [X8 + 0xB8]
	0x032B08B8 STR X0, [X8 + 0x160]
	0x032B08BC ADRP X8, 0xE75000
	0x032B08C0 LDR X8, [X8 + 0x1A0]
	0x032B08C4 LDR X0, [X8]
	0x032B08C8 BL 0x338C698
	0x032B08CC LDR X8, [X20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x112D000
	006 Move X21, 0xE75000
	007 Move W8, [X19+2007]
	008 Move X21, [X21+3968]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xE75000
	014 Move X0, [X0+3968]
	015 Call 0x1C17CF4
	016 Move X0, 0xE4C000
	017 Move X0, [X0+3168]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X19+2007], W8
	021 Move X0, [X21]
	022 Move X19, 0xE4C000
	023 Move W8, [X0+224]
	024 Move X19, [X19+3168]
	025 Compare W8, 0
	026 JumpIfNotEqual {29}
	027 Call 0x1C17DFC
	028 Move X0, [X21]
	029 Move X8, [X0+184]
	030 Move X0, [X19]
	031 Move W1, [X8]
	032 Call 0x1C17D6C
	033 Compare X0, 0
	034 JumpIfEqual {263}
	035 Move W8, [X0+24]
	036 Move X19, X0
	037 Compare W8, 0
	038 JumpIfEqual {259}
	039 Move [X19+32], X31
	040 Move X9, [X21]
	041 Move X9, [X9+184]
	042 Move X20, [X9+72]
	043 Compare X20, 0
	044 JumpIfEqual {52}
	045 Move X8, [X19]
	046 Move X0, X20
	047 Move X1, [X8+64]
	048 Call 0x1C17E00
	049 Compare X0, 0
	050 JumpIfEqual {260}
	051 Move W8, [X19+24]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move [X19+40], X20
	054 Move X9, [X21]
	055 Move X9, [X9+184]
	056 Move X20, [X9+80]
	057 Compare X20, 0
	058 JumpIfEqual {66}
	059 Move X8, [X19]
	060 Move X0, X20
	061 Move X1, [X8+64]
	062 Call 0x1C17E00
	063 Compare X0, 0
	064 JumpIfEqual {260}
	065 Move W8, [X19+24]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move [X19+48], X20
	068 Move X9, [X21]
	069 Move X9, [X9+184]
	070 Move X20, [X9+88]
	071 Compare X20, 0
	072 JumpIfEqual {80}
	073 Move X8, [X19]
	074 Move X0, X20
	075 Move X1, [X8+64]
	076 Call 0x1C17E00
	077 Compare X0, 0
	078 JumpIfEqual {260}
	079 Move W8, [X19+24]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move [X19+56], X20
	082 Move X9, [X21]
	083 Move X9, [X9+184]
	084 Move X20, [X9+96]
	085 Compare X20, 0
	086 JumpIfEqual {94}
	087 Move X8, [X19]
	088 Move X0, X20
	089 Move X1, [X8+64]
	090 Call 0x1C17E00
	091 Compare X0, 0
	092 JumpIfEqual {260}
	093 Move W8, [X19+24]
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move [X19+72], X20
	096 Move X9, [X21]
	097 Move X9, [X9+184]
	098 Move X20, [X9+104]
	099 Compare X20, 0
	100 JumpIfEqual {108}
	101 Move X8, [X19]
	102 Move X0, X20
	103 Move X1, [X8+64]
	104 Call 0x1C17E00
	105 Compare X0, 0
	106 JumpIfEqual {260}
	107 Move W8, [X19+24]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move [X19+80], X20
	110 Move X9, [X21]
	111 Move X9, [X9+184]
	112 Move X20, [X9+112]
	113 Compare X20, 0
	114 JumpIfEqual {122}
	115 Move X8, [X19]
	116 Move X0, X20
	117 Move X1, [X8+64]
	118 Call 0x1C17E00
	119 Compare X0, 0
	120 JumpIfEqual {260}
	121 Move W8, [X19+24]
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move [X19+88], X20
	124 Move X9, [X21]
	125 Move X9, [X9+184]
	126 Move X20, [X9+120]
	127 Compare X20, 0
	128 JumpIfEqual {136}
	129 Move X8, [X19]
	130 Move X0, X20
	131 Move X1, [X8+64]
	132 Call 0x1C17E00
	133 Compare X0, 0
	134 JumpIfEqual {260}
	135 Move W8, [X19+24]
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move [X19+96], X20
	138 Move X9, [X21]
	139 Move X9, [X9+184]
	140 Move X20, [X9+128]
	141 Compare X20, 0
	142 JumpIfEqual {150}
	143 Move X8, [X19]
	144 Move X0, X20
	145 Move X1, [X8+64]
	146 Call 0x1C17E00
	147 Compare X0, 0
	148 JumpIfEqual {260}
	149 Move W8, [X19+24]
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move [X19+104], X20
	152 Move X9, [X21]
	153 Move X9, [X9+184]
	154 Move X20, [X9+136]
	155 Compare X20, 0
	156 JumpIfEqual {164}
	157 Move X8, [X19]
	158 Move X0, X20
	159 Move X1, [X8+64]
	160 Call 0x1C17E00
	161 Compare X0, 0
	162 JumpIfEqual {260}
	163 Move W8, [X19+24]
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move [X19+112], X20
	166 Move X9, [X21]
	167 Move X9, [X9+184]
	168 Move X20, [X9+144]
	169 Compare X20, 0
	170 JumpIfEqual {178}
	171 Move X8, [X19]
	172 Move X0, X20
	173 Move X1, [X8+64]
	174 Call 0x1C17E00
	175 Compare X0, 0
	176 JumpIfEqual {260}
	177 Move W8, [X19+24]
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move [X19+120], X20
	180 Move X9, [X21]
	181 Move X9, [X9+184]
	182 Move X20, [X9+152]
	183 Compare X20, 0
	184 JumpIfEqual {192}
	185 Move X8, [X19]
	186 Move X0, X20
	187 Move X1, [X8+64]
	188 Call 0x1C17E00
	189 Compare X0, 0
	190 JumpIfEqual {260}
	191 Move W8, [X19+24]
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Move [X19+128], X20
	194 Move X9, [X21]
	195 Move X9, [X9+184]
	196 Move X20, [X9+160]
	197 Compare X20, 0
	198 JumpIfEqual {206}
	199 Move X8, [X19]
	200 Move X0, X20
	201 Move X1, [X8+64]
	202 Call 0x1C17E00
	203 Compare X0, 0
	204 JumpIfEqual {260}
	205 Move W8, [X19+24]
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Move [X19+136], X20
	208 Move X9, [X21]
	209 Move X9, [X9+184]
	210 Move X20, [X9+168]
	211 Compare X20, 0
	212 JumpIfEqual {220}
	213 Move X8, [X19]
	214 Move X0, X20
	215 Move X1, [X8+64]
	216 Call 0x1C17E00
	217 Compare X0, 0
	218 JumpIfEqual {260}
	219 Move W8, [X19+24]
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Move [X19+144], X20
	222 Move X9, [X21]
	223 Move X9, [X9+184]
	224 Move X20, [X9+176]
	225 Compare X20, 0
	226 JumpIfEqual {234}
	227 Move X8, [X19]
	228 Move X0, X20
	229 Move X1, [X8+64]
	230 Call 0x1C17E00
	231 Compare X0, 0
	232 JumpIfEqual {260}
	233 Move W8, [X19+24]
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Move [X19+152], X20
	236 Move X9, [X21]
	237 Move X9, [X9+184]
	238 Move X20, [X9+184]
	239 Compare X20, 0
	240 JumpIfEqual {248}
	241 Move X8, [X19]
	242 Move X0, X20
	243 Move X1, [X8+64]
	244 Call 0x1C17E00
	245 Compare X0, 0
	246 JumpIfEqual {260}
	247 Move W8, [X19+24]
	248 NotImplemented "Instruction CMP not yet implemented."
	249 Move [X19+160], X20
	250 Call 0x1C17D44
	251 Move X8, [X21]
	252 Move X8, [X8+184]
	253 Move [X8+8], X19
	254 Move X20, [X31+16]
	255 Move X19, [X31+24]
	256 Move X30, [X31+32]
	257 Move X21, [X31+40]
	258 Return 
	259 Call 0x1C17F28
	260 Call 0x1C17F44
	261 Move X1, X31
	262 Call 0x1C17DEC
	263 Call 0x1C17F20

Method: System.Void InitArrayTypeA()

Disassembly:
	0x032B0160 MOV X2, X21
	0x032B0164 LDP X20, X19, [X31 + 0x20]
	0x032B0168 LDP X22, X21, [X31 + 0x10]
	0x032B016C MOV X3, X31
	0x032B0170 LDR X30, [X31], #0x30
	0x032B0174 B 0x331C960
	0x032B0178 MOV X0, X19
	0x032B017C LDP X20, X19, [X31 + 0x20]
	0x032B0180 LDP X22, X21, [X31 + 0x10]
	0x032B0184 LDR X30, [X31], #0x30
	0x032B0188 RET
	0x032B018C STP X29, X30, [X31 - 0x60]!
	0x032B0190 STP X28, X27, [X31 + 0x10]
	0x032B0194 STP X26, X25, [X31 + 0x20]
	0x032B0198 STP X24, X23, [X31 + 0x30]
	0x032B019C STP X22, X21, [X31 + 0x40]
	0x032B01A0 STP X20, X19, [X31 + 0x50]
	0x032B01A4 ADRP X22, 0x112C000
	0x032B01A8 ADRP X20, 0xE74000
	0x032B01AC ADRP X10, 0xE75000
	0x032B01B0 ADRP X19, 0xE43000
	0x032B01B4 LDRB W8, [X22 + 0x7E3]
	0x032B01B8 LDR X20, [X20 + 0xF80]
	0x032B01BC LDR X10, [X10 + 0x108]
	0x032B01C0 LDR X19, [X19 + 0x6C0]
	0x032B01C4 TBNZ X8, 0x0, 0x32B03C4
	0x032B01C8 ADRP X0, 0xE75000
	0x032B01CC LDR X0, [X0 + 0x110]
	0x032B01D0 MOV X21, X10
	0x032B01D4 BL 0x1C16CF4
	0x032B01D8 ADRP X0, 0xE6C000
	0x032B01DC LDR X0, [X0 + 0x248]
	0x032B01E0 BL 0x1C16CF4
	0x032B01E4 ADRP X0, 0xE75000
	0x032B01E8 LDR X0, [X0 + 0x118]
	0x032B01EC BL 0x1C16CF4
	0x032B01F0 ADRP X0, 0xE6A000
	0x032B01F4 LDR X0, [X0 + 0xD68]
	0x032B01F8 BL 0x1C16CF4
	0x032B01FC ADRP X0, 0xE75000
	0x032B0200 LDR X0, [X0 + 0x120]
	0x032B0204 BL 0x1C16CF4
	0x032B0208 ADRP X0, 0xE6A000
	0x032B020C LDR X0, [X0 + 0xD70]
	0x032B0210 BL 0x1C16CF4
	0x032B0214 ADRP X0, 0xE75000
	0x032B0218 LDR X0, [X0 + 0x128]
	0x032B021C BL 0x1C16CF4
	0x032B0220 ADRP X0, 0xE74000
	0x032B0224 LDR X0, [X0 + 0xF80]
	0x032B0228 BL 0x1C16CF4
	0x032B022C ADRP X0, 0xE75000
	0x032B0230 LDR X0, [X0 + 0x130]
	0x032B0234 BL 0x1C16CF4
	0x032B0238 ADRP X0, 0xE74000
	0x032B023C LDR X0, [X0 + 0xF38]
	0x032B0240 BL 0x1C16CF4
	0x032B0244 ADRP X0, 0xE75000
	0x032B0248 LDR X0, [X0 + 0x138]
	0x032B024C BL 0x1C16CF4
	0x032B0250 ADRP X0, 0xE75000
	0x032B0254 LDR X0, [X0 + 0x140]
	0x032B0258 BL 0x1C16CF4
	0x032B025C ADRP X0, 0xE75000
	0x032B0260 LDR X0, [X0 + 0x148]
	0x032B0264 BL 0x1C16CF4
	0x032B0268 ADRP X0, 0xE6B000
	0x032B026C LDR X0, [X0 + 0xA78]
	0x032B0270 BL 0x1C16CF4
	0x032B0274 ADRP X0, 0xE75000
	0x032B0278 LDR X0, [X0 + 0x108]
	0x032B027C BL 0x1C16CF4
	0x032B0280 ADRP X0, 0xE6C000
	0x032B0284 LDR X0, [X0 + 0xA60]
	0x032B0288 BL 0x1C16CF4
	0x032B028C ADRP X0, 0xE6A000
	0x032B0290 LDR X0, [X0 + 0xD78]
	0x032B0294 BL 0x1C16CF4
	0x032B0298 ADRP X0, 0xE75000
	0x032B029C LDR X0, [X0 + 0x150]
	0x032B02A0 BL 0x1C16CF4
	0x032B02A4 ADRP X0, 0xE6A000
	0x032B02A8 LDR X0, [X0 + 0xD80]
	0x032B02AC BL 0x1C16CF4
	0x032B02B0 ADRP X0, 0xE75000
	0x032B02B4 LDR X0, [X0 + 0x158]
	0x032B02B8 BL 0x1C16CF4
	0x032B02BC ADRP X0, 0xE6A000
	0x032B02C0 LDR X0, [X0 + 0xD88]
	0x032B02C4 BL 0x1C16CF4
	0x032B02C8 ADRP X0, 0xE73000
	0x032B02CC LDR X0, [X0 + 0xE00]
	0x032B02D0 BL 0x1C16CF4
	0x032B02D4 ADRP X0, 0xE75000
	0x032B02D8 LDR X0, [X0 + 0x160]
	0x032B02DC BL 0x1C16CF4
	0x032B02E0 ADRP X0, 0xE4D000
	0x032B02E4 LDR X0, [X0 + 0x968]
	0x032B02E8 BL 0x1C16CF4
	0x032B02EC ADRP X0, 0xE75000
	0x032B02F0 LDR X0, [X0 + 0x168]
	0x032B02F4 BL 0x1C16CF4
	0x032B02F8 ADRP X0, 0xE6A000
	0x032B02FC LDR X0, [X0 + 0xD90]
	0x032B0300 BL 0x1C16CF4
	0x032B0304 ADRP X0, 0xE6C000
	0x032B0308 LDR X0, [X0 + 0xA68]
	0x032B030C BL 0x1C16CF4
	0x032B0310 ADRP X0, 0xE6B000
	0x032B0314 LDR X0, [X0 + 0xA80]
	0x032B0318 BL 0x1C16CF4
	0x032B031C ADRP X0, 0xE75000
	0x032B0320 LDR X0, [X0 + 0x170]
	0x032B0324 BL 0x1C16CF4
	0x032B0328 ADRP X0, 0xE6B000
	0x032B032C LDR X0, [X0 + 0xB60]
	0x032B0330 BL 0x1C16CF4
	0x032B0334 ADRP X0, 0xE75000
	0x032B0338 LDR X0, [X0 + 0x178]
	0x032B033C BL 0x1C16CF4
	0x032B0340 ADRP X0, 0xE75000
	0x032B0344 LDR X0, [X0 + 0x180]
	0x032B0348 BL 0x1C16CF4
	0x032B034C ADRP X0, 0xE75000
	0x032B0350 LDR X0, [X0 + 0x188]
	0x032B0354 BL 0x1C16CF4
	0x032B0358 ADRP X0, 0xE43000
	0x032B035C LDR X0, [X0 + 0x6C0]
	0x032B0360 BL 0x1C16CF4
	0x032B0364 ADRP X0, 0xE75000
	0x032B0368 LDR X0, [X0 + 0x190]
	0x032B036C BL 0x1C16CF4
	0x032B0370 ADRP X0, 0xE6A000
	0x032B0374 LDR X0, [X0 + 0xD98]
	0x032B0378 BL 0x1C16CF4
	0x032B037C ADRP X0, 0xE75000
	0x032B0380 LDR X0, [X0 + 0x198]
	0x032B0384 BL 0x1C16CF4
	0x032B0388 ADRP X0, 0xE6A000
	0x032B038C LDR X0, [X0 + 0xDA0]
	0x032B0390 BL 0x1C16CF4
	0x032B0394 ADRP X0, 0xE75000
	0x032B0398 LDR X0, [X0 + 0x1A0]
	0x032B039C BL 0x1C16CF4
	0x032B03A0 ADRP X0, 0xE6A000
	0x032B03A4 LDR X0, [X0 + 0xDA8]
	0x032B03A8 BL 0x1C16CF4
	0x032B03AC ADRP X0, 0xE74000
	0x032B03B0 LDR X0, [X0 + 0x810]
	0x032B03B4 BL 0x1C16CF4
	0x032B03B8 MOV X10, X21
	0x032B03BC MOVZ W8, 0x1
	0x032B03C0 STRB W8, [X22 + 0x7E3]
	0x032B03C4 ADRP X21, 0xE6B000
	0x032B03C8 ADRP X29, 0xE75000
	0x032B03CC ADRP X28, 0xE6C000
	0x032B03D0 ADRP X27, 0xE6A000
	0x032B03D4 ADRP X26, 0xE6A000
	0x032B03D8 ADRP X25, 0xE75000
	0x032B03DC ADRP X24, 0xE6B000
	0x032B03E0 ADRP X22, 0xE6A000
	0x032B03E4 LDR X21, [X21 + 0xB60]
	0x032B03E8 LDR X29, [X29 + 0x128]
	0x032B03EC LDR X28, [X28 + 0x248]
	0x032B03F0 LDR X27, [X27 + 0xD68]
	0x032B03F4 LDR X26, [X26 + 0xD70]
	0x032B03F8 LDR X25, [X25 + 0x140]
	0x032B03FC LDR X24, [X24 + 0xA78]
	0x032B0400 LDR X22, [X22 + 0xD78]
	0x032B0404 LDR X8, [X20]
	0x032B0408 ADRP X23, 0xE6A000
	0x032B040C LDR X23, [X23 + 0xD80]
	0x032B0410 MOVZ W9, 0x11
	0x032B0414 LDR X8, [X8 + 0xB8]
	0x032B0418 STR W9, [X8]
	0x032B041C LDR X0, [X19]
	0x032B0420 LDR X19, [X10]
	0x032B0424 LDR W8, [X0 + 0xE0]
	0x032B0428 CBNZ W8, 0x32B0430
	0x032B042C BL 0x1C16DFC
	0x032B0430 MOV X0, X19
	0x032B0434 MOV X1, X31
	0x032B0438 BL 0x338C698
	0x032B043C LDR X8, [X20]
	0x032B0440 MOV X1, X31
	0x032B0444 LDR X8, [X8 + 0xB8]
	0x032B0448 STR X0, [X8 + 0x30]
	0x032B044C LDR X0, [X21]
	0x032B0450 BL 0x338C698
	0x032B0454 LDR X8, [X20]
	0x032B0458 MOV X1, X31
	0x032B045C LDR X8, [X8 + 0xB8]
	0x032B0460 STR X0, [X8 + 0x38]
	0x032B0464 LDR X0, [X29]
	0x032B0468 BL 0x338C698
	0x032B046C LDR X8, [X20]
	0x032B0470 MOV X1, X31
	0x032B0474 LDR X8, [X8 + 0xB8]
	0x032B0478 STR X0, [X8 + 0x40]
	0x032B047C LDR X0, [X28]
	0x032B0480 BL 0x338C698
	0x032B0484 LDR X8, [X20]
	0x032B0488 MOV X1, X31
	0x032B048C LDR X8, [X8 + 0xB8]
	0x032B0490 STR X0, [X8 + 0x48]
	0x032B0494 LDR X0, [X27]
	0x032B0498 BL 0x338C698
	0x032B049C LDR X8, [X20]
	0x032B04A0 MOV X1, X31
	0x032B04A4 LDR X8, [X8 + 0xB8]
	0x032B04A8 STR X0, [X8 + 0x50]
	0x032B04AC LDR X0, [X26]
	0x032B04B0 BL 0x338C698
	0x032B04B4 LDR X8, [X20]
	0x032B04B8 MOV X1, X31
	0x032B04BC LDR X8, [X8 + 0xB8]
	0x032B04C0 STR X0, [X8 + 0x58]
	0x032B04C4 LDR X0, [X25]
	0x032B04C8 BL 0x338C698
	0x032B04CC LDR X8, [X20]
	0x032B04D0 MOV X1, X31
	0x032B04D4 LDR X8, [X8 + 0xB8]
	0x032B04D8 STR X0, [X8 + 0x60]
	0x032B04DC LDR X0, [X24]
	0x032B04E0 BL 0x338C698
	0x032B04E4 LDR X8, [X20]
	0x032B04E8 MOV X1, X31
	0x032B04EC LDR X8, [X8 + 0xB8]
	0x032B04F0 STR X0, [X8 + 0x68]
	0x032B04F4 LDR X0, [X22]
	0x032B04F8 BL 0x338C698
	0x032B04FC LDR X8, [X20]
	0x032B0500 MOV X1, X31
	0x032B0504 LDR X8, [X8 + 0xB8]
	0x032B0508 STR X0, [X8 + 0x70]
	0x032B050C LDR X0, [X23]
	0x032B0510 BL 0x338C698
	0x032B0514 LDR X8, [X20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x112D000
	006 Move X21, 0xE75000
	007 Move W8, [X19+2008]
	008 Move X21, [X21+3968]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xE75000
	014 Move X0, [X0+3968]
	015 Call 0x1C17CF4
	016 Move X0, 0xE4C000
	017 Move X0, [X0+3168]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X19+2008], W8
	021 Move X0, [X21]
	022 Move X19, 0xE4C000
	023 Move W8, [X0+224]
	024 Move X19, [X19+3168]
	025 Compare W8, 0
	026 JumpIfNotEqual {29}
	027 Call 0x1C17DFC
	028 Move X0, [X21]
	029 Move X8, [X0+184]
	030 Move X0, [X19]
	031 Move W1, [X8]
	032 Call 0x1C17D6C
	033 Compare X0, 0
	034 JumpIfEqual {263}
	035 Move W8, [X0+24]
	036 Move X19, X0
	037 Compare W8, 0
	038 JumpIfEqual {259}
	039 Move [X19+32], X31
	040 Move X9, [X21]
	041 Move X9, [X9+184]
	042 Move X20, [X9+248]
	043 Compare X20, 0
	044 JumpIfEqual {52}
	045 Move X8, [X19]
	046 Move X0, X20
	047 Move X1, [X8+64]
	048 Call 0x1C17E00
	049 Compare X0, 0
	050 JumpIfEqual {260}
	051 Move W8, [X19+24]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move [X19+40], X20
	054 Move X9, [X21]
	055 Move X9, [X9+184]
	056 Move X20, [X9+256]
	057 Compare X20, 0
	058 JumpIfEqual {66}
	059 Move X8, [X19]
	060 Move X0, X20
	061 Move X1, [X8+64]
	062 Call 0x1C17E00
	063 Compare X0, 0
	064 JumpIfEqual {260}
	065 Move W8, [X19+24]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move [X19+48], X20
	068 Move X9, [X21]
	069 Move X9, [X9+184]
	070 Move X20, [X9+264]
	071 Compare X20, 0
	072 JumpIfEqual {80}
	073 Move X8, [X19]
	074 Move X0, X20
	075 Move X1, [X8+64]
	076 Call 0x1C17E00
	077 Compare X0, 0
	078 JumpIfEqual {260}
	079 Move W8, [X19+24]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move [X19+56], X20
	082 Move X9, [X21]
	083 Move X9, [X9+184]
	084 Move X20, [X9+272]
	085 Compare X20, 0
	086 JumpIfEqual {94}
	087 Move X8, [X19]
	088 Move X0, X20
	089 Move X1, [X8+64]
	090 Call 0x1C17E00
	091 Compare X0, 0
	092 JumpIfEqual {260}
	093 Move W8, [X19+24]
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move [X19+72], X20
	096 Move X9, [X21]
	097 Move X9, [X9+184]
	098 Move X20, [X9+280]
	099 Compare X20, 0
	100 JumpIfEqual {108}
	101 Move X8, [X19]
	102 Move X0, X20
	103 Move X1, [X8+64]
	104 Call 0x1C17E00
	105 Compare X0, 0
	106 JumpIfEqual {260}
	107 Move W8, [X19+24]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move [X19+80], X20
	110 Move X9, [X21]
	111 Move X9, [X9+184]
	112 Move X20, [X9+288]
	113 Compare X20, 0
	114 JumpIfEqual {122}
	115 Move X8, [X19]
	116 Move X0, X20
	117 Move X1, [X8+64]
	118 Call 0x1C17E00
	119 Compare X0, 0
	120 JumpIfEqual {260}
	121 Move W8, [X19+24]
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move [X19+88], X20
	124 Move X9, [X21]
	125 Move X9, [X9+184]
	126 Move X20, [X9+296]
	127 Compare X20, 0
	128 JumpIfEqual {136}
	129 Move X8, [X19]
	130 Move X0, X20
	131 Move X1, [X8+64]
	132 Call 0x1C17E00
	133 Compare X0, 0
	134 JumpIfEqual {260}
	135 Move W8, [X19+24]
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move [X19+96], X20
	138 Move X9, [X21]
	139 Move X9, [X9+184]
	140 Move X20, [X9+304]
	141 Compare X20, 0
	142 JumpIfEqual {150}
	143 Move X8, [X19]
	144 Move X0, X20
	145 Move X1, [X8+64]
	146 Call 0x1C17E00
	147 Compare X0, 0
	148 JumpIfEqual {260}
	149 Move W8, [X19+24]
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move [X19+104], X20
	152 Move X9, [X21]
	153 Move X9, [X9+184]
	154 Move X20, [X9+312]
	155 Compare X20, 0
	156 JumpIfEqual {164}
	157 Move X8, [X19]
	158 Move X0, X20
	159 Move X1, [X8+64]
	160 Call 0x1C17E00
	161 Compare X0, 0
	162 JumpIfEqual {260}
	163 Move W8, [X19+24]
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move [X19+112], X20
	166 Move X9, [X21]
	167 Move X9, [X9+184]
	168 Move X20, [X9+320]
	169 Compare X20, 0
	170 JumpIfEqual {178}
	171 Move X8, [X19]
	172 Move X0, X20
	173 Move X1, [X8+64]
	174 Call 0x1C17E00
	175 Compare X0, 0
	176 JumpIfEqual {260}
	177 Move W8, [X19+24]
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move [X19+120], X20
	180 Move X9, [X21]
	181 Move X9, [X9+184]
	182 Move X20, [X9+328]
	183 Compare X20, 0
	184 JumpIfEqual {192}
	185 Move X8, [X19]
	186 Move X0, X20
	187 Move X1, [X8+64]
	188 Call 0x1C17E00
	189 Compare X0, 0
	190 JumpIfEqual {260}
	191 Move W8, [X19+24]
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Move [X19+128], X20
	194 Move X9, [X21]
	195 Move X9, [X9+184]
	196 Move X20, [X9+336]
	197 Compare X20, 0
	198 JumpIfEqual {206}
	199 Move X8, [X19]
	200 Move X0, X20
	201 Move X1, [X8+64]
	202 Call 0x1C17E00
	203 Compare X0, 0
	204 JumpIfEqual {260}
	205 Move W8, [X19+24]
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Move [X19+136], X20
	208 Move X9, [X21]
	209 Move X9, [X9+184]
	210 Move X20, [X9+344]
	211 Compare X20, 0
	212 JumpIfEqual {220}
	213 Move X8, [X19]
	214 Move X0, X20
	215 Move X1, [X8+64]
	216 Call 0x1C17E00
	217 Compare X0, 0
	218 JumpIfEqual {260}
	219 Move W8, [X19+24]
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Move [X19+144], X20
	222 Move X9, [X21]
	223 Move X9, [X9+184]
	224 Move X20, [X9+352]
	225 Compare X20, 0
	226 JumpIfEqual {234}
	227 Move X8, [X19]
	228 Move X0, X20
	229 Move X1, [X8+64]
	230 Call 0x1C17E00
	231 Compare X0, 0
	232 JumpIfEqual {260}
	233 Move W8, [X19+24]
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Move [X19+152], X20
	236 Move X9, [X21]
	237 Move X9, [X9+184]
	238 Move X20, [X9+360]
	239 Compare X20, 0
	240 JumpIfEqual {248}
	241 Move X8, [X19]
	242 Move X0, X20
	243 Move X1, [X8+64]
	244 Call 0x1C17E00
	245 Compare X0, 0
	246 JumpIfEqual {260}
	247 Move W8, [X19+24]
	248 NotImplemented "Instruction CMP not yet implemented."
	249 Move [X19+160], X20
	250 Call 0x1C17D44
	251 Move X8, [X21]
	252 Move X8, [X8+184]
	253 Move [X8+16], X19
	254 Move X20, [X31+16]
	255 Move X19, [X31+24]
	256 Move X30, [X31+32]
	257 Move X21, [X31+40]
	258 Return 
	259 Call 0x1C17F28
	260 Call 0x1C17F44
	261 Move X1, X31
	262 Call 0x1C17DEC
	263 Call 0x1C17F20

Method: System.Type ToType(System.Runtime.Serialization.Formatters.Binary.InternalPrimitiveTypeE code)

Disassembly:
	0x032AC414 BL 0x19980B4
	0x032AC418 MOV X0, X19
	0x032AC41C MOV X1, X31
	0x032AC420 MOV X2, X20
	0x032AC424 BL 0x1993444
	0x032AC428 ADRP X0, 0xE78000
	0x032AC42C LDR X0, [X0 + 0xFF0]
	0x032AC430 BL 0x1C16D08
	0x032AC434 MOV X1, X19
	0x032AC438 MOV X2, X31
	0x032AC43C BL 0x33BFB40
	0x032AC440 MOV X19, X0
	0x032AC444 ADRP X0, 0xE71000
	0x032AC448 LDR X0, [X0 + 0x2E0]
	0x032AC44C BL 0x1C16D08
	0x032AC450 BL 0x1C16F10
	0x032AC454 MOV X1, X19
	0x032AC458 MOV X2, X31
	0x032AC45C MOV X20, X0
	0x032AC460 BL 0x329F100
	0x032AC464 ADRP X0, 0xE78000
	0x032AC468 LDR X0, [X0 + 0xFF8]
	0x032AC46C BL 0x1C16D08
	0x032AC470 MOV X1, X0
	0x032AC474 MOV X0, X20
	0x032AC478 BL 0x1C16DEC
	0x032AC47C BL 0x1C16F28
	0x032AC480 STR X30, [X31 - 0x10]!
	0x032AC484 LDR X0, [X0 + 0x68]
	0x032AC488 CBZ X0, 0x32AC4A0
	0x032AC48C LDR X8, [X0]
	0x032AC490 LDR X3, [X8 + 0x2C8]
	0x032AC494 LDR X2, [X8 + 0x2D0]
	0x032AC498 LDR X30, [X31], #0x10
	0x032AC49C BR X3
	0x032AC4A0 BL 0x1C16F20
	0x032AC4A4 RET
	0x032AC4A8 MOV X1, X31
	0x032AC4AC B 0x33BDD8C
	0x032AC4B0 STR W1, [X0 + 0x10]
	0x032AC4B4 STR X2, [X0 + 0x18]
	0x032AC4B8 RET
	0x032AC4BC STR X30, [X31 - 0x20]!
	0x032AC4C0 STP X20, X19, [X31 + 0x10]
	0x032AC4C4 CBZ X1, 0x32AC528
	0x032AC4C8 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1131000
	006 Move X20, 0xE79000
	007 Move W8, [X21+2009]
	008 Move X20, [X20+3968]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE79000
	015 Move X0, [X0+3968]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2009], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move X21, [X8+8]
	027 Call 0x1C17D44
	028 Compare X21, 0
	029 JumpIfNotEqual {36}
	030 Move X0, [X20]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Call Converter.InitTypeA
	036 Move X0, [X20]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1C17DFC
	041 Move X0, [X20]
	042 Move X8, [X0+184]
	043 Move X20, [X8+8]
	044 Call 0x1C17D44
	045 Compare X20, 0
	046 JumpIfEqual {56}
	047 Move W8, [X20+24]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Add X8, X20, W19
	050 Move X0, [X8+32]
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Return X0
	056 Call 0x1C17F20
	057 Call 0x1C17F28

Method: System.Array CreatePrimitiveArray(System.Runtime.Serialization.Formatters.Binary.InternalPrimitiveTypeE code, System.Int32 length)

Disassembly:
	0x032B08D0 MOV X1, X31
	0x032B08D4 LDR X8, [X8 + 0xB8]
	0x032B08D8 STR X0, [X8 + 0x168]
	0x032B08DC ADRP X8, 0xE73000
	0x032B08E0 LDR X8, [X8 + 0xE00]
	0x032B08E4 LDR X0, [X8]
	0x032B08E8 BL 0x338C698
	0x032B08EC LDR X8, [X20]
	0x032B08F0 LDP X20, X19, [X31 + 0x50]
	0x032B08F4 LDP X22, X21, [X31 + 0x40]
	0x032B08F8 LDP X24, X23, [X31 + 0x30]
	0x032B08FC LDR X8, [X8 + 0xB8]
	0x032B0900 LDP X26, X25, [X31 + 0x20]
	0x032B0904 LDP X28, X27, [X31 + 0x10]
	0x032B0908 STR X0, [X8 + 0x170]
	0x032B090C LDP X29, X30, [X31], #0x60
	0x032B0910 RET
	0x032B0914 BL 0x1C16F20
	0x032B0918 STR W1, [X0 + 0x34]
	0x032B091C RET
	0x032B0920 STR X1, [X0 + 0x10]
	0x032B0924 RET
	0x032B0928 STP X30, X19, [X31 - 0x10]!
	0x032B092C MOVZ W8, 0x1
	0x032B0930 MOVZ W9, 0x3
	0x032B0934 MOV X1, X31
	0x032B0938 MOV X19, X0
	0x032B093C STR W8, [X0 + 0x30]
	0x032B0940 STR W9, [X0 + 0x38]
	0x032B0944 BL 0x33BDD8C
	0x032B0948 MOVI D0, 0xFF
	0x032B094C STP X31, X31, [X19 + 0x10]
	0x032B0950 STR D0, [X19 + 0x20]
	0x032B0954 LDP X30, X19, [X31], #0x10
	0x032B0958 RET
	0x032B095C STR X30, [X31 - 0x30]!
	0x032B0960 STP X22, X21, [X31 + 0x10]
	0x032B0964 STP X20, X19, [X31 + 0x20]
	0x032B0968 MOV X21, X1
	0x032B096C MOVZ W8, 0x1
	0x032B0970 MOVZ W9, 0x3
	0x032B0974 MOV X1, X31
	0x032B0978 MOV X19, X3
	0x032B097C MOV X20, X2
	0x032B0980 MOV X22, X0
	0x032B0984 STR W8, [X0 + 0x30]
	0x032B0988 STR W9, [X0 + 0x38]
	0x032B098C BL 0x33BDD8C
	0x032B0990 STP X21, X20, [X22 + 0x10]
	0x032B0994 STR X19, [X22 + 0x20]
	0x032B0998 LDP X20, X19, [X31 + 0x20]
	0x032B099C LDP X22, X21, [X31 + 0x10]
	0x032B09A0 LDR X30, [X31], #0x30
	0x032B09A4 RET
	0x032B09A8 MOVZ W3, 0x1
	0x032B09AC MOV X2, X31
	0x032B09B0 B 0x32B09BC
	0x032B09B4 MOVZ W3, 0x1
	0x032B09B8 B 0x32B09BC
	0x032B09BC STP X30, X27, [X31 - 0x50]!
	0x032B09C0 STP X26, X25, [X31 + 0x10]
	0x032B09C4 STP X24, X23, [X31 + 0x20]
	0x032B09C8 STP X22, X21, [X31 + 0x30]
	0x032B09CC STP X20, X19, [X31 + 0x40]
	0x032B09D0 ADRP X22, 0x112C000
	0x032B09D4 LDRB W8, [X22 + 0x7E4]
	0x032B09D8 MOV X19, X2
	0x032B09DC MOV X20, X1
	0x032B09E0 MOV X21, X0
	0x032B09E4 TBNZ X8, 0x0, 0x32B0A14
	0x032B09E8 ADRP X0, 0xE75000
	0x032B09EC LDR X0, [X0 + 0x1A8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x112D000
	006 Move W8, [X21+2010]
	007 Move W19, W1
	008 Move W20, W0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {60}
	013 Move X0, 0xE46000
	014 Move X0, [X0+2488]
	015 Call 0x1C17CF4
	016 Move X0, 0xE44000
	017 Move X0, [X0+1560]
	018 Call 0x1C17CF4
	019 Move X0, 0xE4D000
	020 Move X0, [X0+2264]
	021 Call 0x1C17CF4
	022 Move X0, 0xE76000
	023 Move X0, [X0+112]
	024 Call 0x1C17CF4
	025 Move X0, 0xE75000
	026 Move X0, [X0+2088]
	027 Call 0x1C17CF4
	028 Move X0, 0xE75000
	029 Move X0, [X0+2096]
	030 Call 0x1C17CF4
	031 Move X0, 0xE6C000
	032 Move X0, [X0+2080]
	033 Call 0x1C17CF4
	034 Move X0, 0xE45000
	035 Move X0, [X0+3672]
	036 Call 0x1C17CF4
	037 Move X0, 0xE75000
	038 Move X0, [X0+2104]
	039 Call 0x1C17CF4
	040 Move X0, 0xE73000
	041 Move X0, [X0+1800]
	042 Call 0x1C17CF4
	043 Move X0, 0xE44000
	044 Move X0, [X0+1592]
	045 Call 0x1C17CF4
	046 Move X0, 0xE76000
	047 Move X0, [X0+120]
	048 Call 0x1C17CF4
	049 Move X0, 0xE74000
	050 Move X0, [X0+2256]
	051 Call 0x1C17CF4
	052 Move X0, 0xE6D000
	053 Move X0, [X0+3336]
	054 Call 0x1C17CF4
	055 Move X0, 0xE4C000
	056 Move X0, [X0+1384]
	057 Call 0x1C17CF4
	058 Move W8, 1
	059 Move [X21+2010], W8
	060 Subtract W8, W20, 1
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move W9, 0xFFF7
	063 NotImplemented "Instruction LSRV not yet implemented."
	064 Move TEMP, X9
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {74}
	068 Move X20, [X31+16]
	069 Move X19, [X31+24]
	070 Move X0, X31
	071 Move X30, [X31+32]
	072 Move X21, [X31+40]
	073 Return X0
	074 Move X9, 0xC45000
	075 Add X9, X9, 2016
	076 Move X8, [X9]
	077 Move W1, W19
	078 Move X20, [X31+16]
	079 Move X19, [X31+24]
	080 Move X0, [X8]
	081 Move X30, [X31+32]
	082 Move X21, [X31+40]
	083 Call 0x1C17D6C
	084 Return X0

Method: System.Boolean IsPrimitiveArray(System.Type type, out System.Object typeInformation)

Disassembly:
	0x032AB490 LDR X0, [X20]
	0x032AB494 LDR X8, [X0 + 0xB8]
	0x032AB498 LDR X20, [X8 + 0x8]
	0x032AB49C BL 0x1C16D44
	0x032AB4A0 CBZ X20, 0x32AB4C4
	0x032AB4A4 LDR W8, [X20 + 0x18]
	0x032AB4A8 CMP W8, W19
	0x032AB4AC B.LS 0x32AB4C8
	0x032AB4B0 ADD X8, X20, W19, 0x3, SXTW
	0x032AB4B4 LDR X0, [X8 + 0x20]
	0x032AB4B8 LDP X20, X19, [X31 + 0x10]
	0x032AB4BC LDP X30, X21, [X31], #0x20
	0x032AB4C0 RET
	0x032AB4C4 BL 0x1C16F20
	0x032AB4C8 BL 0x1C16F28
	0x032AB4CC STP X30, X21, [X31 - 0x20]!
	0x032AB4D0 STP X20, X19, [X31 + 0x10]
	0x032AB4D4 ADRP X21, 0x1131000
	0x032AB4D8 ADRP X20, 0xE79000
	0x032AB4DC LDRB W8, [X21 + 0x7D6]
	0x032AB4E0 LDR X20, [X20 + 0xF80]
	0x032AB4E4 MOV W19, W0
	0x032AB4E8 TBNZ X8, 0x0, 0x32AB500
	0x032AB4EC ADRP X0, 0xE79000
	0x032AB4F0 LDR X0, [X0 + 0xF80]
	0x032AB4F4 BL 0x1C16CF4
	0x032AB4F8 MOVZ W8, 0x1
	0x032AB4FC STRB W8, [X21 + 0x7D6]
	0x032AB500 LDR X0, [X20]
	0x032AB504 LDR W8, [X0 + 0xE0]
	0x032AB508 CBNZ W8, 0x32AB514
	0x032AB50C BL 0x1C16DFC
	0x032AB510 LDR X0, [X20]
	0x032AB514 LDR X8, [X0 + 0xB8]
	0x032AB518 LDR X21, [X8 + 0x10]
	0x032AB51C BL 0x1C16D44
	0x032AB520 CBNZ X21, 0x32AB538
	0x032AB524 LDR X0, [X20]
	0x032AB528 LDR W8, [X0 + 0xE0]
	0x032AB52C CBNZ W8, 0x32AB534
	0x032AB530 BL 0x1C16DFC
	0x032AB534 BL 0x32AF160
	0x032AB538 LDR X0, [X20]
	0x032AB53C LDR W8, [X0 + 0xE0]
	0x032AB540 CBNZ W8, 0x32AB54C
	0x032AB544 BL 0x1C16DFC
	0x032AB548 LDR X0, [X20]
	0x032AB54C LDR X8, [X0 + 0xB8]
	0x032AB550 LDR X20, [X8 + 0x10]
	0x032AB554 BL 0x1C16D44
	0x032AB558 CBZ X20, 0x32AB57C
	0x032AB55C LDR W8, [X20 + 0x18]
	0x032AB560 CMP W8, W19
	0x032AB564 B.LS 0x32AB580
	0x032AB568 ADD X8, X20, W19, 0x3, SXTW
	0x032AB56C LDR X0, [X8 + 0x20]
	0x032AB570 LDP X20, X19, [X31 + 0x10]
	0x032AB574 LDP X30, X21, [X31], #0x20
	0x032AB578 RET
	0x032AB57C BL 0x1C16F20
	0x032AB580 BL 0x1C16F28
	0x032AB584 SUB X31, X31, 0x40
	0x032AB588 STP X30, X23, [X31 + 0x10]
	0x032AB58C STP X22, X21, [X31 + 0x20]
	0x032AB590 STP X20, X19, [X31 + 0x30]
	0x032AB594 ADRP X22, 0x1131000
	0x032AB598 LDRB W8, [X22 + 0x820]
	0x032AB59C MOV X19, X2
	0x032AB5A0 MOV X21, X1
	0x032AB5A4 MOV X20, X0
	0x032AB5A8 TBNZ X8, 0x0, 0x32AB5CC
	0x032AB5AC ADRP X0, 0xE79000
	0x032AB5B0 LDR X0, [X0 + 0xB70]
	0x032AB5B4 BL 0x1C16CF4
	0x032AB5B8 ADRP X0, 0xE48000
	0x032AB5BC LDR X0, [X0 + 0x6C0]
	0x032AB5C0 BL 0x1C16CF4
	0x032AB5C4 MOVZ W8, 0x1
	0x032AB5C8 STRB W8, [X22 + 0x820]
	0x032AB5CC LDR X0, [X20 + 0xC0]
	0x032AB5D0 CBZ X0, 0x32AB630
	0x032AB5D4 CBZ X19, 0x32AB724
	0x032AB5D8 LDR W8, [X0 + 0x10]
	0x032AB5DC LDR W9, [X19 + 0x10]
	0x032AB5E0 CMP W8, W9
	0x032AB5E4 B.NE 0x32AB630
	0x032AB5E8 MOV X1, X19
	0x032AB5EC MOV X2, X31
	0x032AB5F0 BL 0x322693C
	0x032AB5F4 TBZ X0, 0x0, 0x32AB630
	0x032AB5F8 LDR X0, [X20 + 0xB8]
	0x032AB5FC CBZ X0, 0x32AB630
	0x032AB600 CBZ X21, 0x32AB724
	0x032AB604 LDR X1, [X21 + 0x10]
	0x032AB608 CBZ X1, 0x32AB724
	0x032AB60C LDR W8, [X0 + 0x10]
	0x032AB610 LDR W9, [X1 + 0x10]
	0x032AB614 CMP W8, W9
	0x032AB618 B.NE 0x32AB634
	0x032AB61C MOV X2, X31
	0x032AB620 BL 0x322693C
	0x032AB624 TBZ X0, 0x0, 0x32AB634
	0x032AB628 LDR X23, [X20 + 0xC8]
	0x032AB62C B 0x32AB70C
	0x032AB630 CBZ X21, 0x32AB724
	0x032AB634 LDR X1, [X21 + 0x10]
	0x032AB638 MOV X0, X20
	0x032AB63C MOV X2, X19
	0x032AB640 BL 0x32B8014
	0x032AB644 MOV X23, X0
	0x032AB648 STR X0, [X31 + 0x8]
	0x032AB64C CBNZ X0, 0x32AB700
	0x032AB650 MOV X0, X21
	0x032AB654 BL 0x32AC080
	0x032AB658 LDRB W8, [X20 + 0x50]
	0x032AB65C MOV X22, X0
	0x032AB660 CBZ W8, 0x32AB67C
	0x032AB664 ADD X2, X31, 0x8
	0x032AB668 MOV X0, X22
	0x032AB66C MOV X1, X19
	0x032AB670 BL 0x32B83B4
	0x032AB674 LDR X23, [X31 + 0x8]
	0x032AB678 B 0x32AB6AC
	0x032AB67C ADRP X8, 0xE79000
	0x032AB680 LDR X8, [X8 + 0xB70]
	0x032AB684 LDR X0, [X8]
	0x032AB688 LDR W8, [X0 + 0xE0]
	0x032AB68C CBNZ W8, 0x32AB694
	0x032AB690 BL 0x1C16DFC
	0x032AB694 MOV X0, X22
	0x032AB698 MOV X1, X19
	0x032AB69C MOV X2, X31
	0x032AB6A0 BL 0x32A244C
	0x032AB6A4 MOV X23, X0
	0x032AB6A8 STR X0, [X31 + 0x8]
	0x032AB6AC ADRP X8, 0xE48000
	0x032AB6B0 LDR X8, [X8 + 0x6C0]
	0x032AB6B4 LDR X0, [X8]
	0x032AB6B8 LDR W8, [X0 + 0xE0]
	0x032AB6BC CBNZ W8, 0x32AB6C4
	0x032AB6C0 BL 0x1C16DFC
	0x032AB6C4 MOV X0, X23
	0x032AB6C8 MOV X1, X31
	0x032AB6CC MOV X2, X31
	0x032AB6D0 BL 0x3395F0C
	0x032AB6D4 TBZ X0, 0x0, 0x32AB700
	0x032AB6D8 CBZ X23, 0x32AB724
	0x032AB6DC LDR X8, [X23]
	0x032AB6E0 MOV X0, X23
	0x032AB6E4 LDR X9, [X8 + 0x2F8]
	0x032AB6E8 LDR X1, [X8 + 0x300]
	0x032AB6EC BLR X9
	0x032AB6F0 MOV X1, X0
	0x032AB6F4 MOV X0, X22
	0x032AB6F8 MOV X2, X23
	0x032AB6FC BL 0x32B85F0
	0x032AB700 LDR X8, [X21 + 0x10]
	0x032AB704 STR X23, [X20 + 0xC8]
	0x032AB708 STP X8, X19, [X20 + 0xB8]
	0x032AB70C MOV X0, X23
	0x032AB710 LDP X20, X19, [X31 + 0x30]
	0x032AB714 LDP X22, X21, [X31 + 0x20]
	0x032AB718 LDP X30, X23, [X31 + 0x10]
	0x032AB71C ADD X31, X31, 0x40
	0x032AB720 RET
	0x032AB724 BL 0x1C16F20
	0x032AB728 BICS W31, W1, W0, 0x0
	0x032AB72C CSET W0, EQ
	0x032AB730 RET
	0x032AB734 STR X30, [X31 - 0x20]!
	0x032AB738 STP X20, X19, [X31 + 0x10]
	0x032AB73C CBZ X1, 0x32AB7A4
	0x032AB740 MOV X19, X0
	0x032AB744 LDR X0, [X1 + 0x30]
	0x032AB748 MOV X20, X1
	0x032AB74C CBZ X19, 0x32AB788
	0x032AB750 CBZ X0, 0x32AB7A4
	0x032AB754 LDR X8, [X0]
	0x032AB758 MOVZ W1, 0x12
	0x032AB75C LDP X9, X2, [X8 + 0x1C8]
	0x032AB760 BLR X9
	0x032AB764 LDR X0, [X20 + 0x30]
	0x032AB768 CBZ X0, 0x32AB7A4
	0x032AB76C LDR X8, [X0]
	0x032AB770 MOV X1, X19
	0x032AB774 LDP X20, X19, [X31 + 0x10]
	0x032AB778 LDR X3, [X8 + 0x298]
	0x032AB77C LDR X2, [X8 + 0x2A0]
	0x032AB780 LDR X30, [X31], #0x20
	0x032AB784 BR X3

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1132000
	007 Move X21, 0xE7A000
	008 Move W8, [X22+2011]
	009 Move X21, [X21+3968]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xE7A000
	017 Move X0, [X0+3968]
	018 Call 0x1C17CF4
	019 Move X0, 0xE7A000
	020 Move X0, [X0+3976]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2011], W8
	024 Move [X19], X31
	025 Move X0, [X21]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1C17DFC
	030 Move X0, [X21]
	031 Move X8, [X0+184]
	032 Move X9, [X8+248]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W9, [X0+224]
	035 Compare W9, 0
	036 JumpIfNotEqual {40}
	037 Call 0x1C17DFC
	038 Move X0, [X21]
	039 Move X8, [X0+184]
	040 Move X9, [X8+256]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move W9, [X0+224]
	043 Compare W9, 0
	044 JumpIfNotEqual {48}
	045 Call 0x1C17DFC
	046 Move X0, [X21]
	047 Move X8, [X0+184]
	048 Move X9, [X8+264]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move W9, [X0+224]
	051 Compare W9, 0
	052 JumpIfNotEqual {56}
	053 Call 0x1C17DFC
	054 Move X0, [X21]
	055 Move X8, [X0+184]
	056 Move X9, [X8+280]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move W9, [X0+224]
	059 Compare W9, 0
	060 JumpIfNotEqual {64}
	061 Call 0x1C17DFC
	062 Move X0, [X21]
	063 Move X8, [X0+184]
	064 Move X9, [X8+288]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move W9, [X0+224]
	067 Compare W9, 0
	068 JumpIfNotEqual {72}
	069 Call 0x1C17DFC
	070 Move X0, [X21]
	071 Move X8, [X0+184]
	072 Move X9, [X8+296]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move W9, [X0+224]
	075 Compare W9, 0
	076 JumpIfNotEqual {80}
	077 Call 0x1C17DFC
	078 Move X0, [X21]
	079 Move X8, [X0+184]
	080 Move X9, [X8+304]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move W9, [X0+224]
	083 Compare W9, 0
	084 JumpIfNotEqual {88}
	085 Call 0x1C17DFC
	086 Move X0, [X21]
	087 Move X8, [X0+184]
	088 Move X9, [X8+312]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move W9, [X0+224]
	091 Compare W9, 0
	092 JumpIfNotEqual {96}
	093 Call 0x1C17DFC
	094 Move X0, [X21]
	095 Move X8, [X0+184]
	096 Move X9, [X8+320]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move W9, [X0+224]
	099 Compare W9, 0
	100 JumpIfNotEqual {104}
	101 Call 0x1C17DFC
	102 Move X0, [X21]
	103 Move X8, [X0+184]
	104 Move X9, [X8+344]
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move W9, [X0+224]
	107 Compare W9, 0
	108 JumpIfNotEqual {112}
	109 Call 0x1C17DFC
	110 Move X0, [X21]
	111 Move X8, [X0+184]
	112 Move X9, [X8+352]
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move W9, [X0+224]
	115 Compare W9, 0
	116 JumpIfNotEqual {120}
	117 Call 0x1C17DFC
	118 Move X8, [X21]
	119 Move X8, [X8+184]
	120 Move X8, [X8+360]
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move W20, W31
	123 Move X8, 0xE7A000
	124 Move X8, [X8+3976]
	125 Move W20, 1
	126 Add X1, X31, 12
	127 Move [X31+12], W20
	128 Move X0, [X8]
	129 Call 0x1C17E04
	130 Move X8, 0xE7A000
	131 Move X8, [X8+3976]
	132 Move X0, [X8]
	133 Move W8, 2
	134 Move X8, 0xE7A000
	135 Move X8, [X8+3976]
	136 Move X0, [X8]
	137 Move W8, 3
	138 Move X8, 0xE7A000
	139 Move X8, [X8+3976]
	140 Move X0, [X8]
	141 Move W8, 6
	142 Move X8, 0xE7A000
	143 Move X8, [X8+3976]
	144 Move X0, [X8]
	145 Move W8, 7
	146 Move X8, 0xE7A000
	147 Move X8, [X8+3976]
	148 Move X0, [X8]
	149 Move W8, 8
	150 Move X8, 0xE7A000
	151 Move X8, [X8+3976]
	152 Move X0, [X8]
	153 Move W8, 9
	154 Move X8, 0xE7A000
	155 Move X8, [X8+3976]
	156 Move X0, [X8]
	157 Move W8, 10
	158 Move X8, 0xE7A000
	159 Move X8, [X8+3976]
	160 Move X0, [X8]
	161 Move W8, 11
	162 Move X8, 0xE7A000
	163 Move X8, [X8+3976]
	164 Move X0, [X8]
	165 Move W8, 14
	166 Move X8, 0xE7A000
	167 Move X8, [X8+3976]
	168 Move X0, [X8]
	169 Move W8, 15
	170 Move X8, 0xE7A000
	171 Move X8, [X8+3976]
	172 Move X0, [X8]
	173 Move W8, 16
	174 Add X1, X31, 12
	175 Move [X31+12], W8
	176 Call 0x1C17E04
	177 Move W20, 1
	178 Move [X19], X0
	179 Move W0, W20
	180 Move X20, [X31+32]
	181 Move X19, [X31+40]
	182 Move X22, [X31+16]
	183 Move X21, [X31+24]
	184 Move X30, [X31+48]
	185 Return X0

Method: System.Void InitValueA()

Disassembly:
	0x032B09F0 BL 0x1C16CF4
	0x032B09F4 ADRP X0, 0xE75000
	0x032B09F8 LDR X0, [X0 + 0x1B0]
	0x032B09FC BL 0x1C16CF4
	0x032B0A00 ADRP X0, 0xE75000
	0x032B0A04 LDR X0, [X0 + 0x1B8]
	0x032B0A08 BL 0x1C16CF4
	0x032B0A0C MOVZ W8, 0x1
	0x032B0A10 STRB W8, [X22 + 0x7E4]
	0x032B0A14 CBZ X20, 0x32B0B08
	0x032B0A18 LDR X8, [X20]
	0x032B0A1C MOV X0, X20
	0x032B0A20 LDP X9, X1, [X8 + 0x1B8]
	0x032B0A24 BLR X9
	0x032B0A28 TBZ X0, 0x0, 0x32B0A40
	0x032B0A2C LDR X8, [X20]
	0x032B0A30 MOV X0, X20
	0x032B0A34 LDP X9, X1, [X8 + 0x1E8]
	0x032B0A38 BLR X9
	0x032B0A3C CBZ X0, 0x32B0B94
	0x032B0A40 ADRP X8, 0xE75000
	0x032B0A44 LDR X8, [X8 + 0x1A8]
	0x032B0A48 LDR X0, [X8]
	0x032B0A4C BL 0x1C16F10
	0x032B0A50 MOV X1, X31
	0x032B0A54 MOV X22, X0
	0x032B0A58 BL 0x32BECE0
	0x032B0A5C CBZ X22, 0x32B0B04
	0x032B0A60 MOVZ W8, 0x2
	0x032B0A64 STR W8, [X22 + 0x1C]
	0x032B0A68 LDR V0, [X21 + 0x30]
	0x032B0A6C ADRP X9, 0xE75000
	0x032B0A70 STR D0, [X22 + 0x10]
	0x032B0A74 LDR W8, [X21 + 0x38]
	0x032B0A78 LDR X9, [X9 + 0x1B0]
	0x032B0A7C STR W8, [X22 + 0x18]
	0x032B0A80 LDR X0, [X9]
	0x032B0A84 LDP X24, X25, [X21 + 0x10]
	0x032B0A88 LDP X26, X27, [X21 + 0x20]
	0x032B0A8C BL 0x1C16F10
	0x032B0A90 MOV X1, X20
	0x032B0A94 MOV X2, X24
	0x032B0A98 MOV X3, X25
	0x032B0A9C MOV X4, X26
	0x032B0AA0 MOV X5, X22
	0x032B0AA4 MOV X6, X27
	0x032B0AA8 MOV X23, X0
	0x032B0AAC BL 0x32B0BE4
	0x032B0AB0 CBZ X23, 0x32B0B04
	0x032B0AB4 LDR X8, [X21 + 0x40]
	0x032B0AB8 ADRP X9, 0xE75000
	0x032B0ABC LDR X9, [X9 + 0x1B8]
	0x032B0AC0 STR X8, [X23 + 0x98]
	0x032B0AC4 LDR X0, [X9]
	0x032B0AC8 BL 0x1C16F10
	0x032B0ACC MOV X1, X20
	0x032B0AD0 MOV X2, X23
	0x032B0AD4 MOV X21, X0
	0x032B0AD8 BL 0x32B0CEC
	0x032B0ADC MOV X0, X23
	0x032B0AE0 MOV X1, X19
	0x032B0AE4 MOV X2, X21
	0x032B0AE8 LDP X20, X19, [X31 + 0x40]
	0x032B0AEC LDP X22, X21, [X31 + 0x30]
	0x032B0AF0 LDP X24, X23, [X31 + 0x20]
	0x032B0AF4 LDP X26, X25, [X31 + 0x10]
	0x032B0AF8 MOV W3, W31
	0x032B0AFC LDP X30, X27, [X31], #0x50
	0x032B0B00 B 0x32B0DF0
	0x032B0B04 BL 0x1C16F20
	0x032B0B08 ADRP X0, 0xE43000
	0x032B0B0C LDR X0, [X0 + 0x9D0]
	0x032B0B10 BL 0x1C16D08
	0x032B0B14 MOVZ W1, 0x1
	0x032B0B18 BL 0x1C16D6C
	0x032B0B1C MOV X19, X0
	0x032B0B20 BL 0x19903C0
	0x032B0B24 MOV X0, X19
	0x032B0B28 MOV X1, X31
	0x032B0B2C BL 0x19980B4
	0x032B0B30 MOV X0, X19
	0x032B0B34 MOV X1, X31
	0x032B0B38 MOV X2, X31
	0x032B0B3C BL 0x1993444
	0x032B0B40 ADRP X0, 0xE75000
	0x032B0B44 LDR X0, [X0 + 0x1C0]
	0x032B0B48 BL 0x1C16D08
	0x032B0B4C MOV X1, X19
	0x032B0B50 MOV X2, X31
	0x032B0B54 BL 0x33BFB40
	0x032B0B58 MOV X19, X0
	0x032B0B5C ADRP X0, 0xE48000
	0x032B0B60 LDR X0, [X0 + 0x528]
	0x032B0B64 BL 0x1C16D08
	0x032B0B68 BL 0x1C16F10
	0x032B0B6C MOV X20, X0
	0x032B0B70 ADRP X0, 0xE75000
	0x032B0B74 LDR X0, [X0 + 0x1C8]
	0x032B0B78 BL 0x1C16D08
	0x032B0B7C MOV X1, X0
	0x032B0B80 MOV X0, X20
	0x032B0B84 MOV X2, X19
	0x032B0B88 MOV X3, X31
	0x032B0B8C BL 0x3315F7C
	0x032B0B90 B 0x32B0BCC
	0x032B0B94 ADRP X0, 0xE75000
	0x032B0B98 LDR X0, [X0 + 0x1D0]
	0x032B0B9C BL 0x1C16D08
	0x032B0BA0 MOV X1, X31
	0x032B0BA4 BL 0x33BDD84
	0x032B0BA8 MOV X19, X0
	0x032B0BAC ADRP X0, 0xE6D000
	0x032B0BB0 LDR X0, [X0 + 0x2E0]
	0x032B0BB4 BL 0x1C16D08
	0x032B0BB8 BL 0x1C16F10
	0x032B0BBC MOV X1, X19
	0x032B0BC0 MOV X2, X31
	0x032B0BC4 MOV X20, X0
	0x032B0BC8 BL 0x329F100
	0x032B0BCC ADRP X0, 0xE75000
	0x032B0BD0 LDR X0, [X0 + 0x1D8]
	0x032B0BD4 BL 0x1C16D08
	0x032B0BD8 MOV X1, X0
	0x032B0BDC MOV X0, X20
	0x032B0BE0 BL 0x1C16DEC
	0x032B0BE4 STP X30, X27, [X31 - 0x50]!
	0x032B0BE8 STP X26, X25, [X31 + 0x10]
	0x032B0BEC STP X24, X23, [X31 + 0x20]
	0x032B0BF0 STP X22, X21, [X31 + 0x30]
	0x032B0BF4 STP X20, X19, [X31 + 0x40]
	0x032B0BF8 ADRP X26, 0x112C000
	0x032B0BFC ADRP X27, 0xE75000
	0x032B0C00 LDRB W8, [X26 + 0x812]
	0x032B0C04 LDR X27, [X27 + 0x1E0]
	0x032B0C08 MOV X20, X6
	0x032B0C0C MOV X19, X5
	0x032B0C10 MOV X21, X4
	0x032B0C14 MOV X23, X3
	0x032B0C18 MOV X24, X2
	0x032B0C1C MOV X25, X1
	0x032B0C20 MOV X22, X0
	0x032B0C24 TBNZ X8, 0x0, 0x32B0C3C
	0x032B0C28 ADRP X0, 0xE75000
	0x032B0C2C LDR X0, [X0 + 0x1E0]
	0x032B0C30 BL 0x1C16CF4
	0x032B0C34 MOVZ W8, 0x1
	0x032B0C38 STRB W8, [X26 + 0x812]
	0x032B0C3C LDR X0, [X27]
	0x032B0C40 BL 0x1C16F10
	0x032B0C44 MOV X1, X31
	0x032B0C48 MOV X26, X0
	0x032B0C4C BL 0x32BE55C
	0x032B0C50 MOV X0, X22
	0x032B0C54 MOV X1, X31
	0x032B0C58 STR X26, [X22 + 0xB0]
	0x032B0C5C BL 0x33BDD8C
	0x032B0C60 CBZ X25, 0x32B0C88
	0x032B0C64 STP X25, X24, [X22 + 0x10]
	0x032B0C68 STP X23, X21, [X22 + 0x20]
	0x032B0C6C STP X19, X20, [X22 + 0x38]
	0x032B0C70 LDP X20, X19, [X31 + 0x40]
	0x032B0C74 LDP X22, X21, [X31 + 0x30]
	0x032B0C78 LDP X24, X23, [X31 + 0x20]
	0x032B0C7C LDP X26, X25, [X31 + 0x10]
	0x032B0C80 LDP X30, X27, [X31], #0x50
	0x032B0C84 RET
	0x032B0C88 ADRP X0, 0xE75000
	0x032B0C8C LDR X0, [X0 + 0x1E8]
	0x032B0C90 BL 0x1C16D08
	0x032B0C94 MOV X1, X31
	0x032B0C98 BL 0x33BDD84
	0x032B0C9C MOV X19, X0
	0x032B0CA0 ADRP X0, 0xE48000
	0x032B0CA4 LDR X0, [X0 + 0x528]
	0x032B0CA8 BL 0x1C16D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x112D000
	005 Move X20, 0xE75000
	006 Move W8, [X19+2012]
	007 Move X20, [X20+3968]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {65}
	012 Move X0, 0xE75000
	013 Move X0, [X0+3968]
	014 Call 0x1C17CF4
	015 Move X0, 0xE44000
	016 Move X0, [X0+2760]
	017 Call 0x1C17CF4
	018 Move X0, 0xE76000
	019 Move X0, [X0+128]
	020 Call 0x1C17CF4
	021 Move X0, 0xE76000
	022 Move X0, [X0+136]
	023 Call 0x1C17CF4
	024 Move X0, 0xE76000
	025 Move X0, [X0+144]
	026 Call 0x1C17CF4
	027 Move X0, 0xE76000
	028 Move X0, [X0+152]
	029 Call 0x1C17CF4
	030 Move X0, 0xE76000
	031 Move X0, [X0+160]
	032 Call 0x1C17CF4
	033 Move X0, 0xE76000
	034 Move X0, [X0+168]
	035 Call 0x1C17CF4
	036 Move X0, 0xE76000
	037 Move X0, [X0+176]
	038 Call 0x1C17CF4
	039 Move X0, 0xE76000
	040 Move X0, [X0+184]
	041 Call 0x1C17CF4
	042 Move X0, 0xE76000
	043 Move X0, [X0+192]
	044 Call 0x1C17CF4
	045 Move X0, 0xE76000
	046 Move X0, [X0+200]
	047 Call 0x1C17CF4
	048 Move X0, 0xE76000
	049 Move X0, [X0+208]
	050 Call 0x1C17CF4
	051 Move X0, 0xE76000
	052 Move X0, [X0+216]
	053 Call 0x1C17CF4
	054 Move X0, 0xE76000
	055 Move X0, [X0+224]
	056 Call 0x1C17CF4
	057 Move X0, 0xE76000
	058 Move X0, [X0+232]
	059 Call 0x1C17CF4
	060 Move X0, 0xE76000
	061 Move X0, [X0+240]
	062 Call 0x1C17CF4
	063 Move W8, 1
	064 Move [X19+2012], W8
	065 Move X0, [X20]
	066 Move X19, 0xE44000
	067 Move W8, [X0+224]
	068 Move X19, [X19+2760]
	069 Compare W8, 0
	070 JumpIfNotEqual {73}
	071 Call 0x1C17DFC
	072 Move X0, [X20]
	073 Move X8, [X0+184]
	074 Move X0, [X19]
	075 Move W1, [X8]
	076 Call 0x1C17D6C
	077 Compare X0, 0
	078 JumpIfEqual {168}
	079 Move W8, [X0+24]
	080 Move X19, X0
	081 Compare W8, 0
	082 JumpIfEqual {167}
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move [X19+32], X31
	085 Move X9, 0xE76000
	086 Move X9, [X9+168]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X9, [X9]
	089 Move [X19+40], X9
	090 Move X9, 0xE76000
	091 Move X9, [X9+128]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move X9, [X9]
	094 Move [X19+48], X9
	095 Move X9, 0xE76000
	096 Move X9, [X9+224]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X9, [X9]
	099 Move [X19+56], X9
	100 Move X9, 0xE76000
	101 Move X9, [X9+160]
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X9, [X9]
	104 Move [X19+72], X9
	105 Move X9, 0xE76000
	106 Move X9, [X9+240]
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move X9, [X9]
	109 Move [X19+80], X9
	110 Move X9, 0xE76000
	111 Move X9, [X9+184]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X9, [X9]
	114 Move [X19+88], X9
	115 Move X9, 0xE76000
	116 Move X9, [X9+216]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move X9, [X9]
	119 Move [X19+96], X9
	120 Move X9, 0xE76000
	121 Move X9, [X9+200]
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move X9, [X9]
	124 Move [X19+104], X9
	125 Move X9, 0xE76000
	126 Move X9, [X9+176]
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move X9, [X9]
	129 Move [X19+112], X9
	130 Move X9, 0xE76000
	131 Move X9, [X9+232]
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move X9, [X9]
	134 Move [X19+120], X9
	135 Move X9, 0xE76000
	136 Move X9, [X9+136]
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move X9, [X9]
	139 Move [X19+128], X9
	140 Move X9, 0xE76000
	141 Move X9, [X9+152]
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Move X9, [X9]
	144 Move [X19+136], X9
	145 Move X9, 0xE76000
	146 Move X9, [X9+144]
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move X9, [X9]
	149 Move [X19+144], X9
	150 Move X9, 0xE76000
	151 Move X9, [X9+192]
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move X9, [X9]
	154 Move [X19+152], X9
	155 Move X8, 0xE76000
	156 Move X8, [X8+208]
	157 Move X8, [X8]
	158 Move [X19+160], X8
	159 Call 0x1C17D44
	160 Move X8, [X20]
	161 Move X8, [X8+184]
	162 Move [X8+24], X19
	163 Move X20, [X31+16]
	164 Move X19, [X31+24]
	165 Move X30, [X31+32]
	166 Return 
	167 Call 0x1C17F28
	168 Call 0x1C17F20

Method: System.String ToComType(System.Runtime.Serialization.Formatters.Binary.InternalPrimitiveTypeE code)

Disassembly:
	0x032AC35C MOV X20, X0
	0x032AC360 CMP W8, 0x10
	0x032AC364 B.GT 0x32AC370
	0x032AC368 MOV X0, X31
	0x032AC36C BL 0x32F47B8
	0x032AC370 MOVZ W1, 0x9
	0x032AC374 MOV X0, X20
	0x032AC378 BL 0x32AC2B4
	0x032AC37C LDR W8, [X19 + 0x10]
	0x032AC380 STR W0, [X19 + 0x24]
	0x032AC384 CMP W0, W8
	0x032AC388 B.GT 0x32AC3DC
	0x032AC38C LDR W8, [X20 + 0x18]
	0x032AC390 CBZ W8, 0x32AC47C
	0x032AC394 LDRB W8, [X20 + 0x20]
	0x032AC398 MOVZ W1, 0x1
	0x032AC39C MOV X0, X20
	0x032AC3A0 STR W8, [X19 + 0x18]
	0x032AC3A4 BL 0x32AC2B4
	0x032AC3A8 STR W0, [X19 + 0x1C]
	0x032AC3AC MOVZ W1, 0x5
	0x032AC3B0 MOV X0, X20
	0x032AC3B4 BL 0x32AC2B4
	0x032AC3B8 STR W0, [X19 + 0x20]
	0x032AC3BC MOVZ W1, 0xD
	0x032AC3C0 MOV X0, X20
	0x032AC3C4 BL 0x32AC2B4
	0x032AC3C8 STR W0, [X19 + 0x28]
	0x032AC3CC LDP X20, X19, [X31 + 0x10]
	0x032AC3D0 LDR X30, [X31], #0x20
	0x032AC3D4 RET
	0x032AC3D8 BL 0x1C16F20
	0x032AC3DC ADRP X0, 0xE47000
	0x032AC3E0 LDR X0, [X0 + 0x9D0]
	0x032AC3E4 BL 0x1C16D08
	0x032AC3E8 MOVZ W1, 0x1
	0x032AC3EC BL 0x1C16D6C
	0x032AC3F0 MOV X19, X0
	0x032AC3F4 MOV X0, X20
	0x032AC3F8 MOV X1, X31
	0x032AC3FC BL 0x3317424
	0x032AC400 MOV X20, X0
	0x032AC404 MOV X0, X19
	0x032AC408 BL 0x19903C0
	0x032AC40C MOV X0, X19
	0x032AC410 MOV X1, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1131000
	006 Move X20, 0xE79000
	007 Move W8, [X21+2013]
	008 Move X20, [X20+3968]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE79000
	015 Move X0, [X0+3968]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2013], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move X21, [X8+24]
	027 Call 0x1C17D44
	028 Compare X21, 0
	029 JumpIfNotEqual {36}
	030 Move X0, [X20]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Call Converter.InitValueA
	036 Move X0, [X20]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1C17DFC
	041 Move X0, [X20]
	042 Move X8, [X0+184]
	043 Move X20, [X8+24]
	044 Call 0x1C17D44
	045 Compare X20, 0
	046 JumpIfEqual {56}
	047 Move W8, [X20+24]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Add X8, X20, W19
	050 Move X0, [X8+32]
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Return X0
	056 Call 0x1C17F20
	057 Call 0x1C17F28

Method: System.Void InitTypeCodeA()

Disassembly:
	0x032B0CAC BL 0x1C16F10
	0x032B0CB0 MOV X20, X0
	0x032B0CB4 ADRP X0, 0xE72000
	0x032B0CB8 LDR X0, [X0 + 0xD38]
	0x032B0CBC BL 0x1C16D08
	0x032B0CC0 MOV X1, X0
	0x032B0CC4 MOV X0, X20
	0x032B0CC8 MOV X2, X19
	0x032B0CCC MOV X3, X31
	0x032B0CD0 BL 0x3315F7C
	0x032B0CD4 ADRP X0, 0xE75000
	0x032B0CD8 LDR X0, [X0 + 0x1F0]
	0x032B0CDC BL 0x1C16D08
	0x032B0CE0 MOV X1, X0
	0x032B0CE4 MOV X0, X20
	0x032B0CE8 BL 0x1C16DEC
	0x032B0CEC STP X30, X25, [X31 - 0x40]!
	0x032B0CF0 STP X24, X23, [X31 + 0x10]
	0x032B0CF4 STP X22, X21, [X31 + 0x20]
	0x032B0CF8 STP X20, X19, [X31 + 0x30]
	0x032B0CFC ADRP X25, 0x112C000
	0x032B0D00 ADRP X24, 0xE75000
	0x032B0D04 ADRP X22, 0xE75000
	0x032B0D08 ADRP X23, 0xE75000
	0x032B0D0C LDRB W8, [X25 + 0x830]
	0x032B0D10 LDR X24, [X24 + 0x1F8]
	0x032B0D14 LDR X22, [X22 + 0x200]
	0x032B0D18 LDR X23, [X23 + 0x1B8]
	0x032B0D1C MOV X21, X2
	0x032B0D20 MOV X20, X1
	0x032B0D24 MOV X19, X0
	0x032B0D28 TBNZ X8, 0x0, 0x32B0D64
	0x032B0D2C ADRP X0, 0xE75000
	0x032B0D30 LDR X0, [X0 + 0x208]
	0x032B0D34 BL 0x1C16CF4
	0x032B0D38 ADRP X0, 0xE75000
	0x032B0D3C LDR X0, [X0 + 0x1F8]
	0x032B0D40 BL 0x1C16CF4
	0x032B0D44 ADRP X0, 0xE75000
	0x032B0D48 LDR X0, [X0 + 0x1B8]
	0x032B0D4C BL 0x1C16CF4
	0x032B0D50 ADRP X0, 0xE75000
	0x032B0D54 LDR X0, [X0 + 0x200]
	0x032B0D58 BL 0x1C16CF4
	0x032B0D5C MOVZ W8, 0x1
	0x032B0D60 STRB W8, [X25 + 0x830]
	0x032B0D64 LDR X0, [X24]
	0x032B0D68 ADRP X24, 0xE75000
	0x032B0D6C LDR X24, [X24 + 0x208]
	0x032B0D70 BL 0x1C16F10
	0x032B0D74 LDR X1, [X22]
	0x032B0D78 MOV X2, X31
	0x032B0D7C MOV X22, X0
	0x032B0D80 BL 0x32BD738
	0x032B0D84 MOVZ W8, 0x3
	0x032B0D88 MOV X0, X19
	0x032B0D8C MOV X1, X31
	0x032B0D90 STR X22, [X19 + 0x40]
	0x032B0D94 STR W8, [X19 + 0x48]
	0x032B0D98 BL 0x33BDD8C
	0x032B0D9C STP X21, X20, [X19 + 0x10]
	0x032B0DA0 LDR X0, [X23]
	0x032B0DA4 LDR W8, [X0 + 0xE0]
	0x032B0DA8 CBNZ W8, 0x32B0DB4
	0x032B0DAC BL 0x1C16DFC
	0x032B0DB0 LDR X0, [X23]
	0x032B0DB4 LDR X8, [X0 + 0xB8]
	0x032B0DB8 LDR X0, [X24]
	0x032B0DBC LDR X21, [X8]
	0x032B0DC0 BL 0x1C16F10
	0x032B0DC4 MOV X1, X20
	0x032B0DC8 MOV X2, X21
	0x032B0DCC MOV X3, X31
	0x032B0DD0 MOV X22, X0
	0x032B0DD4 BL 0x32F5334
	0x032B0DD8 STR X22, [X19 + 0x68]
	0x032B0DDC LDP X20, X19, [X31 + 0x30]
	0x032B0DE0 LDP X22, X21, [X31 + 0x20]
	0x032B0DE4 LDP X24, X23, [X31 + 0x10]
	0x032B0DE8 LDP X30, X25, [X31], #0x40
	0x032B0DEC RET
	0x032B0DF0 STP X30, X25, [X31 - 0x40]!
	0x032B0DF4 STP X24, X23, [X31 + 0x10]
	0x032B0DF8 STP X22, X21, [X31 + 0x20]
	0x032B0DFC STP X20, X19, [X31 + 0x30]
	0x032B0E00 ADRP X22, 0x112C000
	0x032B0E04 LDRB W8, [X22 + 0x813]
	0x032B0E08 MOV X21, X2
	0x032B0E0C MOV X20, X1
	0x032B0E10 MOV X19, X0
	0x032B0E14 TBNZ X8, 0x0, 0x32B0E44
	0x032B0E18 ADRP X0, 0xE74000
	0x032B0E1C LDR X0, [X0 + 0xD40]
	0x032B0E20 BL 0x1C16CF4
	0x032B0E24 ADRP X0, 0xE75000
	0x032B0E28 LDR X0, [X0 + 0x210]
	0x032B0E2C BL 0x1C16CF4
	0x032B0E30 ADRP X0, 0xE75000
	0x032B0E34 LDR X0, [X0 + 0x218]
	0x032B0E38 BL 0x1C16CF4
	0x032B0E3C MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x112D000
	005 Move X20, 0xE75000
	006 Move W8, [X19+2014]
	007 Move X20, [X20+3968]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0xE75000
	013 Move X0, [X0+3968]
	014 Call 0x1C17CF4
	015 Move X0, 0xE76000
	016 Move X0, [X0+248]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+2014], W8
	020 Move X0, [X20]
	021 Move X19, 0xE76000
	022 Move W8, [X0+224]
	023 Move X19, [X19+248]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X20]
	028 Move X8, [X0+184]
	029 Move X0, [X19]
	030 Move W1, [X8]
	031 Call 0x1C17D6C
	032 Compare X0, 0
	033 JumpIfEqual {94}
	034 Move W8, [X0+24]
	035 Move X19, X0
	036 Compare W8, 0
	037 JumpIfEqual {93}
	038 Move W9, 1
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move [X19+32], W9
	041 Move W9, 3
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move [X19+36], W9
	044 Move W9, 6
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move [X19+40], W9
	047 Move W9, 4
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move [X19+44], W9
	050 Move W9, 15
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move [X19+52], W9
	053 Move W9, 14
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move [X19+56], W9
	056 Move W9, 7
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move [X19+60], W9
	059 Move W9, 9
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move [X19+64], W9
	062 Move W9, 11
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move [X19+68], W9
	065 Move W9, 5
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move [X19+72], W9
	068 Move W9, 13
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move [X19+76], W9
	071 Move W9, 1
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move [X19+80], W9
	074 Move W9, 16
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move [X19+84], W9
	077 Move W9, 8
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move [X19+88], W9
	080 Move W9, 10
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move [X19+92], W9
	083 Move W8, 12
	084 Move [X19+96], W8
	085 Call 0x1C17D44
	086 Move X8, [X20]
	087 Move X8, [X8+184]
	088 Move [X8+32], X19
	089 Move X20, [X31+16]
	090 Move X19, [X31+24]
	091 Move X30, [X31+32]
	092 Return 
	093 Call 0x1C17F28
	094 Call 0x1C17F20

Method: System.TypeCode ToTypeCode(System.Runtime.Serialization.Formatters.Binary.InternalPrimitiveTypeE code)

Disassembly:
	0x032B0E40 STRB W8, [X22 + 0x813]
	0x032B0E44 CBZ X21, 0x32B1000
	0x032B0E48 LDR X8, [X19 + 0x30]
	0x032B0E4C STRB W31, [X19 + 0xA0]
	0x032B0E50 STR X31, [X19 + 0x60]
	0x032B0E54 CBZ X8, 0x32B0E5C
	0x032B0E58 STR X31, [X8 + 0x28]
	0x032B0E5C LDR X8, [X19 + 0x38]
	0x032B0E60 STR X31, [X19 + 0x48]
	0x032B0E64 CBZ X8, 0x32B0FFC
	0x032B0E68 LDR W8, [X8 + 0x14]
	0x032B0E6C MOV X0, X21
	0x032B0E70 STR X20, [X19 + 0x70]
	0x032B0E74 CMP W8, 0x0
	0x032B0E78 CSET W8, EQ
	0x032B0E7C STRB W8, [X19 + 0x50]
	0x032B0E80 BL 0x32B57D0
	0x032B0E84 LDRB W8, [X19 + 0xA0]
	0x032B0E88 CBZ W8, 0x32B0EA0
	0x032B0E8C LDR X0, [X19 + 0x30]
	0x032B0E90 CBZ X0, 0x32B0FFC
	0x032B0E94 LDR X8, [X0]
	0x032B0E98 LDP X9, X1, [X8 + 0x188]
	0x032B0E9C BLR X9
	0x032B0EA0 LDR X0, [X19 + 0x60]
	0x032B0EA4 CBZ X0, 0x32B108C
	0x032B0EA8 MOV X1, X31
	0x032B0EAC BL 0x33BE520
	0x032B0EB0 MOV X1, X0
	0x032B0EB4 MOV X0, X19
	0x032B0EB8 BL 0x32B5D38
	0x032B0EBC TBZ X0, 0x0, 0x32B0EEC
	0x032B0EC0 LDR X1, [X19 + 0x48]
	0x032B0EC4 CBZ X1, 0x32B0EEC
	0x032B0EC8 LDR X0, [X19 + 0x30]
	0x032B0ECC CBZ X0, 0x32B0FFC
	0x032B0ED0 LDR X8, [X0]
	0x032B0ED4 LDP X9, X2, [X8 + 0x178]
	0x032B0ED8 BLR X9
	0x032B0EDC LDR X8, [X19 + 0x30]
	0x032B0EE0 STR X0, [X19 + 0x60]
	0x032B0EE4 CBZ X8, 0x32B0EEC
	0x032B0EE8 STR X0, [X8 + 0x28]
	0x032B0EEC ADRP X24, 0xE74000
	0x032B0EF0 LDR X24, [X24 + 0xD40]
	0x032B0EF4 LDR X0, [X19 + 0x60]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x112D000
	006 Move X20, 0xE75000
	007 Move W8, [X21+2015]
	008 Move X20, [X20+3968]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE75000
	015 Move X0, [X0+3968]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2015], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move X21, [X8+32]
	027 Call 0x1C17D44
	028 Compare X21, 0
	029 JumpIfNotEqual {36}
	030 Move X0, [X20]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Call Converter.InitTypeCodeA
	036 Move X0, [X20]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1C17DFC
	041 Move X0, [X20]
	042 Move X8, [X0+184]
	043 Move X20, [X8+32]
	044 Call 0x1C17D44
	045 Compare X20, 0
	046 JumpIfEqual {56}
	047 Move W8, [X20+24]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Add X8, X20, W19
	050 Move W0, [X8+32]
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Return X0
	056 Call 0x1C17F20
	057 Call 0x1C17F28

Method: System.Void InitCodeA()

Disassembly:
	0x032B0EF8 LDR X1, [X24]
	0x032B0EFC BL 0x1C16E00
	0x032B0F00 CBZ X0, 0x32B0FAC
	0x032B0F04 LDR X25, [X19 + 0x60]
	0x032B0F08 CBZ X25, 0x32B0FFC
	0x032B0F0C LDR X23, [X24]
	0x032B0F10 LDP X21, X22, [X19 + 0x20]
	0x032B0F14 MOV X0, X25
	0x032B0F18 MOV X1, X23
	0x032B0F1C BL 0x1C16E00
	0x032B0F20 CBZ X0, 0x32B10DC
	0x032B0F24 LDR X24, [X24]
	0x032B0F28 MOV X0, X25
	0x032B0F2C MOV X1, X24
	0x032B0F30 BL 0x1C16E00
	0x032B0F34 CBZ X0, 0x32B10E8
	0x032B0F38 LDR X8, [X0]
	0x032B0F3C MOV X23, X0
	0x032B0F40 LDRH W9, [X8 + 0x12E]
	0x032B0F44 CBZ X9, 0x32B0F68
	0x032B0F48 LDR X10, [X8 + 0xB0]
	0x032B0F4C ADD X10, X10, 0x8
	0x032B0F50 LDUR X11, [X10 - 0x8]
	0x032B0F54 CMP X11, X24
	0x032B0F58 B.EQ 0x32B0F7C
	0x032B0F5C SUBS X9, X9, 0x1
	0x032B0F60 ADD X10, X10, 0x10
	0x032B0F64 B.NE 0x32B0F50
	0x032B0F68 MOV X0, X23
	0x032B0F6C MOV X1, X24
	0x032B0F70 MOV W2, W31
	0x032B0F74 BL 0x1C5C788
	0x032B0F78 B 0x32B0F88
	0x032B0F7C LDRSW X9, [X10]
	0x032B0F80 ADD X8, X8, X9, 0x4, LSL
	0x032B0F84 ADD X0, X8, 0x138
	0x032B0F88 LDP X8, X3, [X0]
	0x032B0F8C MOV X0, X23
	0x032B0F90 MOV X1, X21
	0x032B0F94 MOV X2, X22
	0x032B0F98 BLR X8
	0x032B0F9C LDR X8, [X19 + 0x30]
	0x032B0FA0 STR X0, [X19 + 0x60]
	0x032B0FA4 CBZ X8, 0x32B0FAC
	0x032B0FA8 STR X0, [X8 + 0x28]
	0x032B0FAC LDRB W8, [X19 + 0xA0]
	0x032B0FB0 CBZ W8, 0x32B0FC8
	0x032B0FB4 LDR X0, [X19 + 0x30]
	0x032B0FB8 CBZ X0, 0x32B0FFC
	0x032B0FBC LDR X8, [X0]
	0x032B0FC0 LDP X9, X1, [X8 + 0x1C8]
	0x032B0FC4 BLR X9
	0x032B0FC8 CBZ X20, 0x32B0FE4
	0x032B0FCC LDR X1, [X19 + 0x68]
	0x032B0FD0 LDR X8, [X20 + 0x18]
	0x032B0FD4 LDR X0, [X20 + 0x40]
	0x032B0FD8 LDR X2, [X20 + 0x28]
	0x032B0FDC BLR X8
	0x032B0FE0 STR X0, [X19 + 0x58]
	0x032B0FE4 LDR X0, [X19 + 0x60]
	0x032B0FE8 LDP X20, X19, [X31 + 0x30]
	0x032B0FEC LDP X22, X21, [X31 + 0x20]
	0x032B0FF0 LDP X24, X23, [X31 + 0x10]
	0x032B0FF4 LDP X30, X25, [X31], #0x40
	0x032B0FF8 RET
	0x032B0FFC BL 0x1C16F20
	0x032B1000 ADRP X0, 0xE42000
	0x032B1004 LDR X0, [X0 + 0x9D0]
	0x032B1008 BL 0x1C16D08
	0x032B100C MOVZ W1, 0x1
	0x032B1010 BL 0x1C16D6C
	0x032B1014 MOV X19, X0
	0x032B1018 BL 0x19903C0
	0x032B101C MOV X0, X19
	0x032B1020 MOV X1, X31
	0x032B1024 BL 0x19980B4
	0x032B1028 MOV X0, X19
	0x032B102C MOV X1, X31
	0x032B1030 MOV X2, X31
	0x032B1034 BL 0x1993444
	0x032B1038 ADRP X0, 0xE74000
	0x032B103C LDR X0, [X0 + 0x1C0]
	0x032B1040 BL 0x1C16D08
	0x032B1044 MOV X1, X19
	0x032B1048 MOV X2, X31
	0x032B104C BL 0x33BFB40
	0x032B1050 MOV X19, X0
	0x032B1054 ADRP X0, 0xE47000
	0x032B1058 LDR X0, [X0 + 0x528]
	0x032B105C BL 0x1C16D08
	0x032B1060 BL 0x1C16F10
	0x032B1064 MOV X20, X0
	0x032B1068 ADRP X0, 0xE74000
	0x032B106C LDR X0, [X0 + 0x220]
	0x032B1070 BL 0x1C16D08
	0x032B1074 MOV X1, X0
	0x032B1078 MOV X0, X20
	0x032B107C MOV X2, X19
	0x032B1080 MOV X3, X31
	0x032B1084 BL 0x3315F7C
	0x032B1088 B 0x32B10C4
	0x032B108C ADRP X0, 0xE74000
	0x032B1090 LDR X0, [X0 + 0x228]
	0x032B1094 BL 0x1C16D08
	0x032B1098 MOV X1, X31
	0x032B109C BL 0x33BDD84

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x112D000
	005 Move X20, 0xE76000
	006 Move W8, [X19+2016]
	007 Move X20, [X20+256]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0xE75000
	013 Move X0, [X0+3968]
	014 Call 0x1C17CF4
	015 Move X0, 0xE76000
	016 Move X0, [X0+256]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+2016], W8
	020 Move X0, [X20]
	021 Move W1, 19
	022 Call 0x1C17D6C
	023 Compare X0, 0
	024 JumpIfEqual {96}
	025 Move W8, [X0+24]
	026 Move X19, X0
	027 Compare W8, 0
	028 JumpIfEqual {95}
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move [X19+32], W31
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move [X19+36], W31
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move [X19+40], W31
	035 Move W9, 1
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move [X19+44], W9
	038 Move W9, 3
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move [X19+48], W9
	041 Move W9, 10
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move [X19+52], W9
	044 Move W9, 2
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move [X19+56], W9
	047 Move W9, 7
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move [X19+60], W9
	050 Move W9, 14
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move [X19+64], W9
	053 Move W9, 8
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move [X19+68], W9
	056 Move W9, 15
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move [X19+72], W9
	059 Move W9, 9
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move [X19+76], W9
	062 Move W9, 16
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move [X19+80], W9
	065 Move W9, 11
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move [X19+84], W9
	068 Move W9, 6
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move [X19+88], W9
	071 Move W9, 5
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move [X19+92], W9
	074 Move W9, 13
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move [X19+96], W9
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move [X19+100], W31
	079 Move X20, 0xE74000
	080 Move X20, [X20+3968]
	081 Move [X19+104], W31
	082 Move X0, [X20]
	083 Move W8, [X0+224]
	084 Compare W8, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1C17DFC
	087 Call 0x1C17D44
	088 Move X8, [X20]
	089 Move X8, [X8+184]
	090 Move [X8+40], X19
	091 Move X20, [X31+16]
	092 Move X19, [X31+24]
	093 Move X30, [X31+32]
	094 Return 
	095 Call 0x1C17F28
	096 Call 0x1C17F20

Method: System.Runtime.Serialization.Formatters.Binary.InternalPrimitiveTypeE ToPrimitiveTypeEnum(System.TypeCode typeCode)

Disassembly:
	0x032B0060 ADRP X20, 0xE74000
	0x032B0064 LDR X20, [X20 + 0xF80]
	0x032B0068 STR W31, [X19 + 0x68]
	0x032B006C LDR X0, [X20]
	0x032B0070 LDR W8, [X0 + 0xE0]
	0x032B0074 CBNZ W8, 0x32B007C
	0x032B0078 BL 0x1C16DFC
	0x032B007C BL 0x1C16D44
	0x032B0080 LDR X8, [X20]
	0x032B0084 LDR X8, [X8 + 0xB8]
	0x032B0088 STR X19, [X8 + 0x28]
	0x032B008C LDP X20, X19, [X31 + 0x10]
	0x032B0090 LDR X30, [X31], #0x20
	0x032B0094 RET
	0x032B0098 BL 0x1C16F28
	0x032B009C BL 0x1C16F20
	0x032B00A0 STR X30, [X31 - 0x30]!
	0x032B00A4 STP X22, X21, [X31 + 0x10]
	0x032B00A8 STP X20, X19, [X31 + 0x20]
	0x032B00AC ADRP X21, 0x112C000
	0x032B00B0 LDRB W8, [X21 + 0x7E2]
	0x032B00B4 MOV W20, W1
	0x032B00B8 MOV X19, X0
	0x032B00BC TBNZ X8, 0x0, 0x32B00EC
	0x032B00C0 ADRP X0, 0xE4C000
	0x032B00C4 LDR X0, [X0 + 0x9E8]
	0x032B00C8 BL 0x1C16CF4
	0x032B00CC ADRP X0, 0xE74000
	0x032B00D0 LDR X0, [X0 + 0xF80]
	0x032B00D4 BL 0x1C16CF4
	0x032B00D8 ADRP X0, 0xE45000
	0x032B00DC LDR X0, [X0 + 0xC48]
	0x032B00E0 BL 0x1C16CF4
	0x032B00E4 MOVZ W8, 0x1
	0x032B00E8 STRB W8, [X21 + 0x7E2]
	0x032B00EC CBZ W20, 0x32B0178
	0x032B00F0 ADRP X8, 0xE74000
	0x032B00F4 LDR X8, [X8 + 0xF80]
	0x032B00F8 ADRP X22, 0xE45000
	0x032B00FC LDR X0, [X8]
	0x032B0100 LDR W8, [X0 + 0xE0]
	0x032B0104 LDR X22, [X22 + 0xC48]
	0x032B0108 CBNZ W8, 0x32B0110
	0x032B010C BL 0x1C16DFC
	0x032B0110 ADRP X21, 0xE4C000
	0x032B0114 LDR X21, [X21 + 0x9E8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x112D000
	006 Move X20, 0xE75000
	007 Move W8, [X21+2017]
	008 Move X20, [X20+3968]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE75000
	015 Move X0, [X0+3968]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2017], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move X21, [X8+40]
	027 Call 0x1C17D44
	028 Compare X21, 0
	029 JumpIfNotEqual {36}
	030 Move X0, [X20]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Call Converter.InitCodeA
	036 Move X0, [X20]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1C17DFC
	041 Move X0, [X20]
	042 Move X8, [X0+184]
	043 Move X20, [X8+40]
	044 Call 0x1C17D44
	045 Compare X20, 0
	046 JumpIfEqual {56}
	047 Move W8, [X20+24]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Add X8, X20, W19
	050 Move W0, [X8+32]
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Return X0
	056 Call 0x1C17F20
	057 Call 0x1C17F28

Method: System.Object FromString(System.String value, System.Runtime.Serialization.Formatters.Binary.InternalPrimitiveTypeE code)

Disassembly:
	0x032B10A0 MOV X19, X0
	0x032B10A4 ADRP X0, 0xE6C000
	0x032B10A8 LDR X0, [X0 + 0x2E0]
	0x032B10AC BL 0x1C16D08
	0x032B10B0 BL 0x1C16F10
	0x032B10B4 MOV X1, X19
	0x032B10B8 MOV X2, X31
	0x032B10BC MOV X20, X0
	0x032B10C0 BL 0x329F100
	0x032B10C4 ADRP X0, 0xE74000
	0x032B10C8 LDR X0, [X0 + 0x230]
	0x032B10CC BL 0x1C16D08
	0x032B10D0 MOV X1, X0
	0x032B10D4 MOV X0, X20
	0x032B10D8 BL 0x1C16DEC
	0x032B10DC MOV X0, X25
	0x032B10E0 MOV X1, X23
	0x032B10E4 BL 0x1C171E0
	0x032B10E8 MOV X0, X25
	0x032B10EC MOV X1, X24
	0x032B10F0 BL 0x1C171E0
	0x032B10F4 MOVZ W4, 0x1
	0x032B10F8 MOV X3, X31
	0x032B10FC B 0x32B1108
	0x032B1100 MOVZ W4, 0x1
	0x032B1104 B 0x32B1108
	0x032B1108 STP X29, X30, [X31 - 0x60]!
	0x032B110C STP X28, X27, [X31 + 0x10]
	0x032B1110 STP X26, X25, [X31 + 0x20]
	0x032B1114 STP X24, X23, [X31 + 0x30]
	0x032B1118 STP X22, X21, [X31 + 0x40]
	0x032B111C STP X20, X19, [X31 + 0x50]
	0x032B1120 ADRP X23, 0x112B000
	0x032B1124 LDRB W8, [X23 + 0x7E5]
	0x032B1128 MOV X20, X3
	0x032B112C MOV X21, X2
	0x032B1130 MOV X22, X1
	0x032B1134 MOV X19, X0
	0x032B1138 TBNZ X8, 0x0, 0x32B1168
	0x032B113C ADRP X0, 0xE74000
	0x032B1140 LDR X0, [X0 + 0x1A8]
	0x032B1144 BL 0x1C16CF4
	0x032B1148 ADRP X0, 0xE74000
	0x032B114C LDR X0, [X0 + 0x238]
	0x032B1150 BL 0x1C16CF4
	0x032B1154 ADRP X0, 0xE74000
	0x032B1158 LDR X0, [X0 + 0x240]
	0x032B115C BL 0x1C16CF4
	0x032B1160 MOVZ W8, 0x1
	0x032B1164 STRB W8, [X23 + 0x7E5]
	0x032B1168 CBZ X22, 0x32B123C
	0x032B116C ADRP X8, 0xE74000
	0x032B1170 LDR X8, [X8 + 0x1A8]
	0x032B1174 LDR X0, [X8]
	0x032B1178 BL 0x1C16F10
	0x032B117C MOV X1, X31
	0x032B1180 MOV X24, X0
	0x032B1184 BL 0x32BECE0
	0x032B1188 CBZ X24, 0x32B1238

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x112C000
	007 Move W8, [X21+2018]
	008 Move W20, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xE4C000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move X0, 0xE74000
	018 Move X0, [X0+3968]
	019 Call 0x1C17CF4
	020 Move X0, 0xE45000
	021 Move X0, [X0+3144]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2018], W8
	025 Compare W20, 0
	026 JumpIfEqual {67}
	027 Move X8, 0xE74000
	028 Move X8, [X8+3968]
	029 Move X22, 0xE45000
	030 Move X0, [X8]
	031 Move W8, [X0+224]
	032 Move X22, [X22+3144]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X21, 0xE4C000
	037 Move X21, [X21+2536]
	038 Move W0, W20
	039 Call Converter.ToTypeCode, X0
	040 Move X8, [X22]
	041 Move W20, W0
	042 Move W9, [X8+224]
	043 Compare W9, 0
	044 JumpIfNotEqual {47}
	045 Move X0, X8
	046 Call 0x1C17DFC
	047 Move X0, X31
	048 Call CultureInfo.get_InvariantCulture
	049 Move X8, [X21]
	050 Move X21, X0
	051 Move W9, [X8+224]
	052 Compare W9, 0
	053 JumpIfNotEqual {56}
	054 Move X0, X8
	055 Call 0x1C17DFC
	056 Move X0, X19
	057 Move W1, W20
	058 Move X2, X21
	059 Move X20, [X31+32]
	060 Move X19, [X31+40]
	061 Move X22, [X31+16]
	062 Move X21, [X31+24]
	063 Move X3, X31
	064 Move X30, [X31+48]
	065 Call Convert.ChangeType, X0, X1, X2
	066 Return X0
	067 Move X0, X19
	068 Move X20, [X31+32]
	069 Move X19, [X31+40]
	070 Move X22, [X31+16]
	071 Move X21, [X31+24]
	072 Move X30, [X31+48]
	073 Return X0

Method: System.Void .cctor()

Disassembly:
	0x032B118C MOVZ W8, 0x2
	0x032B1190 STR W8, [X24 + 0x1C]
	0x032B1194 LDR V0, [X19 + 0x30]
	0x032B1198 ADRP X8, 0xE74000
	0x032B119C LDR X8, [X8 + 0x238]
	0x032B11A0 ADRP X29, 0xE74000
	0x032B11A4 STR D0, [X24 + 0x10]
	0x032B11A8 LDP X25, X26, [X19 + 0x10]
	0x032B11AC LDR X0, [X8]
	0x032B11B0 LDP X27, X28, [X19 + 0x20]
	0x032B11B4 LDR X29, [X29 + 0x240]
	0x032B11B8 BL 0x1C16F10
	0x032B11BC MOV X1, X25
	0x032B11C0 MOV X2, X26
	0x032B11C4 MOV X3, X27
	0x032B11C8 MOV X4, X24
	0x032B11CC MOV X5, X28
	0x032B11D0 MOV X23, X0
	0x032B11D4 BL 0x32B12DC
	0x032B11D8 LDR X0, [X29]
	0x032B11DC LDR W25, [X19 + 0x30]
	0x032B11E0 BL 0x1C16F10
	0x032B11E4 MOV X1, X22
	0x032B11E8 MOV X2, X23
	0x032B11EC MOV W3, W25
	0x032B11F0 MOV X24, X0
	0x032B11F4 BL 0x32B13D4
	0x032B11F8 CBZ X23, 0x32B1238
	0x032B11FC MOV X0, X23
	0x032B1200 MOV X1, X21
	0x032B1204 MOV X2, X20
	0x032B1208 MOV X3, X24
	0x032B120C MOV W4, W31
	0x032B1210 BL 0x32B1484
	0x032B1214 LDR X8, [X23 + 0x88]
	0x032B1218 LDP X22, X21, [X31 + 0x40]
	0x032B121C LDP X24, X23, [X31 + 0x30]
	0x032B1220 LDP X26, X25, [X31 + 0x20]
	0x032B1224 STR X8, [X19 + 0x40]
	0x032B1228 LDP X20, X19, [X31 + 0x50]
	0x032B122C LDP X28, X27, [X31 + 0x10]
	0x032B1230 LDP X29, X30, [X31], #0x60
	0x032B1234 RET
	0x032B1238 BL 0x1C16F20
	0x032B123C ADRP X0, 0xE42000
	0x032B1240 LDR X0, [X0 + 0x9D0]
	0x032B1244 BL 0x1C16D08
	0x032B1248 MOVZ W1, 0x1
	0x032B124C BL 0x1C16D6C
	0x032B1250 MOV X19, X0
	0x032B1254 BL 0x19903C0
	0x032B1258 MOV X0, X19
	0x032B125C MOV X1, X31
	0x032B1260 BL 0x19980B4
	0x032B1264 MOV X0, X19
	0x032B1268 MOV X1, X31
	0x032B126C MOV X2, X31
	0x032B1270 BL 0x1993444
	0x032B1274 ADRP X0, 0xE74000
	0x032B1278 LDR X0, [X0 + 0x1C0]
	0x032B127C BL 0x1C16D08
	0x032B1280 MOV X1, X19
	0x032B1284 MOV X2, X31
	0x032B1288 BL 0x33BFB40
	0x032B128C MOV X19, X0
	0x032B1290 ADRP X0, 0xE47000
	0x032B1294 LDR X0, [X0 + 0x528]
	0x032B1298 BL 0x1C16D08
	0x032B129C BL 0x1C16F10
	0x032B12A0 MOV X20, X0
	0x032B12A4 ADRP X0, 0xE74000
	0x032B12A8 LDR X0, [X0 + 0x1C8]
	0x032B12AC BL 0x1C16D08
	0x032B12B0 MOV X1, X0
	0x032B12B4 MOV X0, X20
	0x032B12B8 MOV X2, X19
	0x032B12BC MOV X3, X31
	0x032B12C0 BL 0x3315F7C
	0x032B12C4 ADRP X0, 0xE74000
	0x032B12C8 LDR X0, [X0 + 0x248]
	0x032B12CC BL 0x1C16D08
	0x032B12D0 MOV X1, X0
	0x032B12D4 MOV X0, X20
	0x032B12D8 BL 0x1C16DEC
	0x032B12DC STR X30, [X31 - 0x60]!
	0x032B12E0 STP X28, X27, [X31 + 0x10]
	0x032B12E4 STP X26, X25, [X31 + 0x20]
	0x032B12E8 STP X24, X23, [X31 + 0x30]
	0x032B12EC STP X22, X21, [X31 + 0x40]
	0x032B12F0 STP X20, X19, [X31 + 0x50]
	0x032B12F4 ADRP X27, 0x112B000
	0x032B12F8 ADRP X28, 0xE74000
	0x032B12FC ADRP X25, 0xE74000
	0x032B1300 ADRP X26, 0xE74000
	0x032B1304 LDRB W8, [X27 + 0x822]
	0x032B1308 LDR X28, [X28 + 0x1F8]
	0x032B130C LDR X25, [X25 + 0x250]
	0x032B1310 LDR X26, [X26 + 0x258]
	0x032B1314 MOV X23, X5
	0x032B1318 MOV X22, X4
	0x032B131C MOV X20, X3
	0x032B1320 MOV X21, X2
	0x032B1324 MOV X24, X1
	0x032B1328 MOV X19, X0
	0x032B132C TBNZ X8, 0x0, 0x32B135C
	0x032B1330 ADRP X0, 0xE74000
	0x032B1334 LDR X0, [X0 + 0x1F8]
	0x032B1338 BL 0x1C16CF4
	0x032B133C ADRP X0, 0xE74000
	0x032B1340 LDR X0, [X0 + 0x258]
	0x032B1344 BL 0x1C16CF4
	0x032B1348 ADRP X0, 0xE74000
	0x032B134C LDR X0, [X0 + 0x250]
	0x032B1350 BL 0x1C16CF4
	0x032B1354 MOVZ W8, 0x1
	0x032B1358 STRB W8, [X27 + 0x822]
	0x032B135C LDR X0, [X28]
	0x032B1360 BL 0x1C16F10
	0x032B1364 LDR X1, [X25]
	0x032B1368 MOV X2, X31
	0x032B136C MOV X25, X0
	0x032B1370 BL 0x32BD738
	0x032B1374 MOV X0, X19
	0x032B1378 MOV X1, X31
	0x032B137C STR X25, [X19 + 0xB8]
	0x032B1380 BL 0x33BDD8C
	0x032B1384 MOVZ W8, 0x1
	0x032B1388 STP X24, X21, [X19 + 0x28]
	0x032B138C STR X20, [X19 + 0x38]
	0x032B1390 STR W8, [X19 + 0x20]
	0x032B1394 STP X22, X23, [X19 + 0x68]
	0x032B1398 LDR X0, [X26]
	0x032B139C BL 0x1C16F10
	0x032B13A0 MOV X1, X21
	0x032B13A4 MOV X2, X20
	0x032B13A8 MOV X3, X31
	0x032B13AC MOV X22, X0
	0x032B13B0 BL 0x32A0378
	0x032B13B4 STR X22, [X19 + 0x48]
	0x032B13B8 LDP X20, X19, [X31 + 0x50]
	0x032B13BC LDP X22, X21, [X31 + 0x40]
	0x032B13C0 LDP X24, X23, [X31 + 0x30]
	0x032B13C4 LDP X26, X25, [X31 + 0x20]
	0x032B13C8 LDP X28, X27, [X31 + 0x10]
	0x032B13CC LDR X30, [X31], #0x60
	0x032B13D0 RET
	0x032B13D4 STR X30, [X31 - 0x40]!
	0x032B13D8 STP X24, X23, [X31 + 0x10]
	0x032B13DC STP X22, X21, [X31 + 0x20]
	0x032B13E0 STP X20, X19, [X31 + 0x30]
	0x032B13E4 ADRP X24, 0x112B000
	0x032B13E8 ADRP X23, 0xE74000
	0x032B13EC LDRB W8, [X24 + 0x7E8]
	0x032B13F0 LDR X23, [X23 + 0x260]
	0x032B13F4 MOV W22, W3
	0x032B13F8 MOV X21, X2
	0x032B13FC MOV X20, X1
	0x032B1400 MOV X19, X0
	0x032B1404 TBNZ X8, 0x0, 0x32B141C
	0x032B1408 ADRP X0, 0xE74000
	0x032B140C LDR X0, [X0 + 0x260]
	0x032B1410 BL 0x1C16CF4
	0x032B1414 MOVZ W8, 0x1
	0x032B1418 STRB W8, [X24 + 0x7E8]
	0x032B141C MOVZ W8, 0x1000
	0x032B1420 MOV X0, X19
	0x032B1424 MOV X1, X31
	0x032B1428 STR W8, [X19 + 0x80]
	0x032B142C BL 0x33BDD8C
	0x032B1430 MOV X0, X31
	0x032B1434 STR X20, [X19 + 0x10]
	0x032B1438 STR W22, [X19 + 0x18]
	0x032B143C STR X21, [X19 + 0x28]
	0x032B1440 STR W31, [X19 + 0x38]
	0x032B1444 BL 0x3241948
	0x032B1448 LDR X8, [X23]
	0x032B144C MOV X21, X0
	0x032B1450 MOV X0, X8
	0x032B1454 BL 0x1C16F10
	0x032B1458 MOV X1, X20
	0x032B145C MOV X2, X21
	0x032B1460 MOV X3, X31
	0x032B1464 MOV X22, X0
	0x032B1468 BL 0x32F6AB8
	0x032B146C STR X22, [X19 + 0x30]
	0x032B1470 LDP X20, X19, [X31 + 0x30]
	0x032B1474 LDP X22, X21, [X31 + 0x20]
	0x032B1478 LDP X24, X23, [X31 + 0x10]
	0x032B147C LDR X30, [X31], #0x40
	0x032B1480 RET
	0x032B1484 SUB X31, X31, 0x60
	0x032B1488 STP X30, X25, [X31 + 0x20]
	0x032B148C STP X24, X23, [X31 + 0x30]
	0x032B1490 STP X22, X21, [X31 + 0x40]
	0x032B1494 STP X20, X19, [X31 + 0x50]
	0x032B1498 ADRP X23, 0x112B000
	0x032B149C LDRB W8, [X23 + 0x823]
	0x032B14A0 MOV X20, X3
	0x032B14A4 MOV X22, X2
	0x032B14A8 MOV X21, X1
	0x032B14AC MOV X19, X0
	0x032B14B0 TBNZ X8, 0x0, 0x32B14F8
	0x032B14B4 ADRP X0, 0xE74000
	0x032B14B8 LDR X0, [X0 + 0x268]
	0x032B14BC BL 0x1C16CF4
	0x032B14C0 ADRP X0, 0xE73000
	0x032B14C4 LDR X0, [X0 + 0xCA8]
	0x032B14C8 BL 0x1C16CF4
	0x032B14CC ADRP X0, 0xE73000
	0x032B14D0 LDR X0, [X0 + 0x4F8]
	0x032B14D4 BL 0x1C16CF4
	0x032B14D8 ADRP X0, 0xE74000
	0x032B14DC LDR X0, [X0 + 0x218]
	0x032B14E0 BL 0x1C16CF4
	0x032B14E4 ADRP X0, 0xE74000
	0x032B14E8 LDR X0, [X0 + 0x270]
	0x032B14EC BL 0x1C16CF4
	0x032B14F0 MOVZ W8, 0x1
	0x032B14F4 STRB W8, [X23 + 0x823]
	0x032B14F8 STR X31, [X31 + 0x18]
	0x032B14FC STRB W31, [X31 + 0x14]
	0x032B1500 CBZ X21, 0x32B1730
	0x032B1504 CBZ X20, 0x32B1794
	0x032B1508 ADRP X8, 0xE73000
	0x032B150C LDR X8, [X8 + 0xCA8]
	0x032B1510 STR X20, [X19 + 0x40]
	0x032B1514 STR X22, [X19 + 0x60]
	0x032B1518 ADRP X23, 0xE73000
	0x032B151C LDR X0, [X8]
	0x032B1520 ADRP X24, 0xE74000
	0x032B1524 ADRP X25, 0xE74000
	0x032B1528 LDR X23, [X23 + 0x4F8]
	0x032B152C LDR X24, [X24 + 0x268]
	0x032B1530 LDR X25, [X25 + 0x218]
	0x032B1534 BL 0x1C16F10
	0x032B1538 MOV X1, X31
	0x032B153C MOV X22, X0
	0x032B1540 BL 0x32A2E98
	0x032B1544 STR X22, [X19 + 0x18]
	0x032B1548 LDR X0, [X23]
	0x032B154C BL 0x1C16F10
	0x032B1550 MOV X1, X31
	0x032B1554 MOV X22, X0
	0x032B1558 BL 0x3352B00
	0x032B155C STR X22, [X19 + 0x10]
	0x032B1560 LDR X0, [X24]
	0x032B1564 BL 0x1C16F10
	0x032B1568 MOV X1, X31
	0x032B156C MOV X22, X0
	0x032B1570 BL 0x329F8B8
	0x032B1574 STR X22, [X19 + 0x80]
	0x032B1578 LDR X0, [X25]
	0x032B157C BL 0x1C16F10
	0x032B1580 MOV X22, X0
	0x032B1584 BL 0x32B566C
	0x032B1588 ADD X4, X31, 0x14
	0x032B158C MOV X0, X19
	0x032B1590 MOV X1, X21
	0x032B1594 MOV W2, W31
	0x032B1598 MOV X3, X31
	0x032B159C STR X22, [X19 + 0x78]
	0x032B15A0 BL 0x32B87E8
	0x032B15A4 LDR X1, [X19 + 0x60]
	0x032B15A8 STR X0, [X19 + 0x50]
	0x032B15AC CBZ X1, 0x32B15D0
	0x032B15B0 ADD X4, X31, 0x14
	0x032B15B4 MOV X0, X19
	0x032B15B8 MOV W2, W31
	0x032B15BC MOV X3, X31
	0x032B15C0 BL 0x32B87E8
	0x032B15C4 LDR X8, [X19 + 0x50]
	0x032B15C8 MOV X2, X0
	0x032B15CC B 0x32B15D8
	0x032B15D0 MOV X8, X0
	0x032B15D4 MOVN X2, 0x0
	0x032B15D8 MOV X0, X19
	0x032B15DC MOV X1, X8
	0x032B15E0 BL 0x32B87C8
	0x032B15E4 LDR X1, [X19 + 0x60]
	0x032B15E8 CBZ X1, 0x32B160C
	0x032B15EC LDR X8, [X1 + 0x18]
	0x032B15F0 CBZ X8, 0x32B160C
	0x032B15F4 LDR X0, [X19 + 0x10]
	0x032B15F8 CBZ X0, 0x32B172C
	0x032B15FC LDR X8, [X0]
	0x032B1600 LDR X9, [X8 + 0x228]
	0x032B1604 LDR X2, [X8 + 0x230]
	0x032B1608 BLR X9
	0x032B160C LDR X0, [X19 + 0x10]
	0x032B1610 CBZ X0, 0x32B172C
	0x032B1614 LDR X8, [X0]
	0x032B1618 MOV X1, X21
	0x032B161C LDR X9, [X8 + 0x228]
	0x032B1620 LDR X2, [X8 + 0x230]
	0x032B1624 BLR X9
	0x032B1628 ADD X1, X31, 0x18
	0x032B162C MOV X0, X19
	0x032B1630 BL 0x32B8E78
	0x032B1634 CBZ X0, 0x32B16E8
	0x032B1638 ADRP X23, 0xE74000
	0x032B163C LDR X23, [X23 + 0x270]
	0x032B1640 MOV X21, X0
	0x032B1644 LDR X8, [X23]
	0x032B1648 LDR X9, [X21]
	0x032B164C CMP X9, X8
	0x032B1650 B.EQ 0x32B1688
	0x032B1654 LDP X1, X2, [X19 + 0x28]
	0x032B1658 LDR X3, [X19 + 0x38]
	0x032B165C LDP X4, X5, [X19 + 0x78]
	0x032B1660 LDR X7, [X19 + 0x70]
	0x032B1664 MOV X0, X21
	0x032B1668 MOV X6, X19
	0x032B166C BL 0x32B3400
	0x032B1670 MOV X21, X0
	0x032B1674 MOV X0, X19
	0x032B1678 MOV X1, X21
	0x032B167C BL 0x32B88AC
	0x032B1680 CBZ X21, 0x32B172C
	0x032B1684 STR X0, [X21 + 0x70]
	0x032B1688 LDR X8, [X31 + 0x18]
	0x032B168C MOV X0, X19
	0x032B1690 MOV X1, X21
	0x032B1694 STR X8, [X21 + 0x68]
	0x032B1698 BL 0x32B8AB8
	0x032B169C MOV X22, X0
	0x032B16A0 MOV X0, X19
	0x032B16A4 MOV X1, X21
	0x032B16A8 MOV X2, X22
	0x032B16AC MOV X3, X22
	0x032B16B0 BL 0x32B8AFC
	0x032B16B4 LDR X0, [X19 + 0xB8]
	0x032B16B8 CBZ X0, 0x32B172C
	0x032B16BC MOV X1, X22
	0x032B16C0 MOV X2, X31
	0x032B16C4 BL 0x32BD7AC
	0x032B16C8 LDR X0, [X21 + 0x60]
	0x032B16CC MOV X1, X21
	0x032B16D0 BL 0x32B33C0
	0x032B16D4 ADD X1, X31, 0x18
	0x032B16D8 MOV X0, X19
	0x032B16DC BL 0x32B8E78
	0x032B16E0 MOV X21, X0
	0x032B16E4 CBNZ X0, 0x32B1644
	0x032B16E8 MOV X0, X20
	0x032B16EC BL 0x32B1F24
	0x032B16F0 LDR X0, [X20 + 0x30]
	0x032B16F4 CBZ X0, 0x32B172C
	0x032B16F8 LDR X8, [X0]
	0x032B16FC LDP X9, X1, [X8 + 0x1A8]
	0x032B1700 BLR X9
	0x032B1704 LDR X0, [X19 + 0x48]
	0x032B1708 CBZ X0, 0x32B172C
	0x032B170C MOV X1, X31
	0x032B1710 BL 0x32A05AC
	0x032B1714 LDP X20, X19, [X31 + 0x50]
	0x032B1718 LDP X22, X21, [X31 + 0x40]
	0x032B171C LDP X24, X23, [X31 + 0x30]
	0x032B1720 LDP X30, X25, [X31 + 0x20]
	0x032B1724 ADD X31, X31, 0x60
	0x032B1728 RET
	0x032B172C BL 0x1C16F20
	0x032B1730 ADRP X0, 0xE74000
	0x032B1734 LDR X0, [X0 + 0x278]
	0x032B1738 BL 0x1C16D08
	0x032B173C MOV X1, X31
	0x032B1740 BL 0x33BDD84
	0x032B1744 MOV X19, X0
	0x032B1748 ADRP X0, 0xE47000
	0x032B174C LDR X0, [X0 + 0x528]
	0x032B1750 BL 0x1C16D08
	0x032B1754 BL 0x1C16F10
	0x032B1758 MOV X20, X0
	0x032B175C ADRP X0, 0xE74000
	0x032B1760 LDR X0, [X0 + 0x280]
	0x032B1764 BL 0x1C16D08
	0x032B1768 MOV X1, X0
	0x032B176C MOV X0, X20
	0x032B1770 MOV X2, X19
	0x032B1774 MOV X3, X31
	0x032B1778 BL 0x3315F7C
	0x032B177C ADRP X0, 0xE74000
	0x032B1780 LDR X0, [X0 + 0x288]
	0x032B1784 BL 0x1C16D08
	0x032B1788 MOV X1, X0
	0x032B178C MOV X0, X20
	0x032B1790 BL 0x1C16DEC
	0x032B1794 ADRP X0, 0xE42000
	0x032B1798 LDR X0, [X0 + 0x9D0]
	0x032B179C BL 0x1C16D08
	0x032B17A0 MOVZ W1, 0x1
	0x032B17A4 BL 0x1C16D6C
	0x032B17A8 MOV X19, X0
	0x032B17AC BL 0x19903C0
	0x032B17B0 ADRP X20, 0xE74000
	0x032B17B4 LDR X20, [X20 + 0x290]
	0x032B17B8 MOV X0, X20
	0x032B17BC BL 0x1C16D08
	0x032B17C0 MOV X1, X0
	0x032B17C4 MOV X0, X19
	0x032B17C8 BL 0x19980B4
	0x032B17CC MOV X0, X20
	0x032B17D0 BL 0x1C16D08
	0x032B17D4 MOV X2, X0
	0x032B17D8 MOV X0, X19
	0x032B17DC MOV X1, X31
	0x032B17E0 BL 0x1993444
	0x032B17E4 ADRP X0, 0xE74000
	0x032B17E8 LDR X0, [X0 + 0x1C0]
	0x032B17EC BL 0x1C16D08
	0x032B17F0 MOV X1, X19
	0x032B17F4 MOV X2, X31
	0x032B17F8 BL 0x33BFB40
	0x032B17FC MOV X19, X0
	0x032B1800 ADRP X0, 0xE47000
	0x032B1804 LDR X0, [X0 + 0x528]
	0x032B1808 BL 0x1C16D08
	0x032B180C BL 0x1C16F10
	0x032B1810 MOV X21, X0
	0x032B1814 MOV X0, X20
	0x032B1818 BL 0x1C16D08
	0x032B181C MOV X1, X0
	0x032B1820 MOV X0, X21
	0x032B1824 MOV X2, X19
	0x032B1828 MOV X3, X31
	0x032B182C BL 0x3315F7C
	0x032B1830 ADRP X0, 0xE74000
	0x032B1834 LDR X0, [X0 + 0x288]
	0x032B1838 BL 0x1C16D08
	0x032B183C MOV X1, X0
	0x032B1840 MOV X0, X21
	0x032B1844 BL 0x1C16DEC
	0x032B1848 SUB X31, X31, 0x60
	0x032B184C STP X30, X25, [X31 + 0x20]
	0x032B1850 STP X24, X23, [X31 + 0x30]
	0x032B1854 STP X22, X21, [X31 + 0x40]
	0x032B1858 STP X20, X19, [X31 + 0x50]
	0x032B185C ADRP X19, 0x112B000
	0x032B1860 ADRP X24, 0xE6E000
	0x032B1864 LDRB W8, [X19 + 0x7E6]
	0x032B1868 LDR X24, [X24 + 0xD0]
	0x032B186C MOV X20, X0
	0x032B1870 TBNZ X8, 0x0, 0x32B18B8
	0x032B1874 ADRP X0, 0xE6E000
	0x032B1878 LDR X0, [X0 + 0xD0]
	0x032B187C BL 0x1C16CF4
	0x032B1880 ADRP X0, 0xE74000
	0x032B1884 LDR X0, [X0 + 0x298]
	0x032B1888 BL 0x1C16CF4
	0x032B188C ADRP X0, 0xE74000
	0x032B1890 LDR X0, [X0 + 0x2A0]
	0x032B1894 BL 0x1C16CF4
	0x032B1898 ADRP X0, 0xE73000
	0x032B189C LDR X0, [X0 + 0xB70]
	0x032B18A0 BL 0x1C16CF4
	0x032B18A4 ADRP X0, 0xE74000
	0x032B18A8 LDR X0, [X0 + 0x2A8]
	0x032B18AC BL 0x1C16CF4
	0x032B18B0 MOVZ W8, 0x1
	0x032B18B4 STRB W8, [X19 + 0x7E6]
	0x032B18B8 LDR X0, [X24]
	0x032B18BC STR X31, [X31 + 0x10]
	0x032B18C0 STRB W31, [X31 + 0xC]
	0x032B18C4 LDR W8, [X0 + 0xE0]
	0x032B18C8 CBNZ W8, 0x32B18D4
	0x032B18CC BL 0x1C16DFC
	0x032B18D0 LDR X0, [X24]
	0x032B18D4 LDR X8, [X0 + 0xB8]
	0x032B18D8 LDR X19, [X8]
	0x032B18DC STRB W31, [X31 + 0x1C]
	0x032B18E0 ADD X1, X31, 0x1C
	0x032B18E4 MOV X0, X19
	0x032B18E8 MOV X2, X31
	0x032B18EC BL 0x33DE64C
	0x032B18F0 LDR X0, [X24]
	0x032B18F4 STR X31, [X31 + 0x10]
	0x032B18F8 LDR W8, [X0 + 0xE0]
	0x032B18FC CBNZ W8, 0x32B1908
	0x032B1900 BL 0x1C16DFC
	0x032B1904 LDR X0, [X24]
	0x032B1908 LDR X8, [X0 + 0xB8]
	0x032B190C LDR X0, [X8]
	0x032B1910 CBZ X0, 0x32B1A14
	0x032B1914 ADRP X8, 0xE74000

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X22, 0x112C000
	014 Move X20, 0xE74000
	015 Move X10, 0xE75000
	016 Move X19, 0xE43000
	017 Move W8, [X22+2019]
	018 Move X20, [X20+3968]
	019 Move X10, [X10+264]
	020 Move X19, [X19+1728]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {152}
	025 Move X0, 0xE75000
	026 Move X0, [X0+272]
	027 Move X21, X10
	028 Call 0x1C17CF4
	029 Move X0, 0xE6C000
	030 Move X0, [X0+584]
	031 Call 0x1C17CF4
	032 Move X0, 0xE75000
	033 Move X0, [X0+280]
	034 Call 0x1C17CF4
	035 Move X0, 0xE6A000
	036 Move X0, [X0+3432]
	037 Call 0x1C17CF4
	038 Move X0, 0xE75000
	039 Move X0, [X0+288]
	040 Call 0x1C17CF4
	041 Move X0, 0xE6A000
	042 Move X0, [X0+3440]
	043 Call 0x1C17CF4
	044 Move X0, 0xE75000
	045 Move X0, [X0+296]
	046 Call 0x1C17CF4
	047 Move X0, 0xE74000
	048 Move X0, [X0+3968]
	049 Call 0x1C17CF4
	050 Move X0, 0xE75000
	051 Move X0, [X0+304]
	052 Call 0x1C17CF4
	053 Move X0, 0xE74000
	054 Move X0, [X0+3896]
	055 Call 0x1C17CF4
	056 Move X0, 0xE75000
	057 Move X0, [X0+312]
	058 Call 0x1C17CF4
	059 Move X0, 0xE75000
	060 Move X0, [X0+320]
	061 Call 0x1C17CF4
	062 Move X0, 0xE75000
	063 Move X0, [X0+328]
	064 Call 0x1C17CF4
	065 Move X0, 0xE6B000
	066 Move X0, [X0+2680]
	067 Call 0x1C17CF4
	068 Move X0, 0xE75000
	069 Move X0, [X0+264]
	070 Call 0x1C17CF4
	071 Move X0, 0xE6C000
	072 Move X0, [X0+2656]
	073 Call 0x1C17CF4
	074 Move X0, 0xE6A000
	075 Move X0, [X0+3448]
	076 Call 0x1C17CF4
	077 Move X0, 0xE75000
	078 Move X0, [X0+336]
	079 Call 0x1C17CF4
	080 Move X0, 0xE6A000
	081 Move X0, [X0+3456]
	082 Call 0x1C17CF4
	083 Move X0, 0xE75000
	084 Move X0, [X0+344]
	085 Call 0x1C17CF4
	086 Move X0, 0xE6A000
	087 Move X0, [X0+3464]
	088 Call 0x1C17CF4
	089 Move X0, 0xE73000
	090 Move X0, [X0+3584]
	091 Call 0x1C17CF4
	092 Move X0, 0xE75000
	093 Move X0, [X0+352]
	094 Call 0x1C17CF4
	095 Move X0, 0xE4D000
	096 Move X0, [X0+2408]
	097 Call 0x1C17CF4
	098 Move X0, 0xE75000
	099 Move X0, [X0+360]
	100 Call 0x1C17CF4
	101 Move X0, 0xE6A000
	102 Move X0, [X0+3472]
	103 Call 0x1C17CF4
	104 Move X0, 0xE6C000
	105 Move X0, [X0+2664]
	106 Call 0x1C17CF4
	107 Move X0, 0xE6B000
	108 Move X0, [X0+2688]
	109 Call 0x1C17CF4
	110 Move X0, 0xE75000
	111 Move X0, [X0+368]
	112 Call 0x1C17CF4
	113 Move X0, 0xE6B000
	114 Move X0, [X0+2912]
	115 Call 0x1C17CF4
	116 Move X0, 0xE75000
	117 Move X0, [X0+376]
	118 Call 0x1C17CF4
	119 Move X0, 0xE75000
	120 Move X0, [X0+384]
	121 Call 0x1C17CF4
	122 Move X0, 0xE75000
	123 Move X0, [X0+392]
	124 Call 0x1C17CF4
	125 Move X0, 0xE43000
	126 Move X0, [X0+1728]
	127 Call 0x1C17CF4
	128 Move X0, 0xE75000
	129 Move X0, [X0+400]
	130 Call 0x1C17CF4
	131 Move X0, 0xE6A000
	132 Move X0, [X0+3480]
	133 Call 0x1C17CF4
	134 Move X0, 0xE75000
	135 Move X0, [X0+408]
	136 Call 0x1C17CF4
	137 Move X0, 0xE6A000
	138 Move X0, [X0+3488]
	139 Call 0x1C17CF4
	140 Move X0, 0xE75000
	141 Move X0, [X0+416]
	142 Call 0x1C17CF4
	143 Move X0, 0xE6A000
	144 Move X0, [X0+3496]
	145 Call 0x1C17CF4
	146 Move X0, 0xE74000
	147 Move X0, [X0+2064]
	148 Call 0x1C17CF4
	149 Move X10, X21
	150 Move W8, 1
	151 Move [X22+2019], W8
	152 Move X21, 0xE6B000
	153 Move X29, 0xE75000
	154 Move X28, 0xE6C000
	155 Move X27, 0xE6A000
	156 Move X26, 0xE6A000
	157 Move X25, 0xE75000
	158 Move X24, 0xE6B000
	159 Move X22, 0xE6A000
	160 Move X21, [X21+2912]
	161 Move X29, [X29+296]
	162 Move X28, [X28+584]
	163 Move X27, [X27+3432]
	164 Move X26, [X26+3440]
	165 Move X25, [X25+320]
	166 Move X24, [X24+2680]
	167 Move X22, [X22+3448]
	168 Move X8, [X20]
	169 Move X23, 0xE6A000
	170 Move X23, [X23+3456]
	171 Move W9, 17
	172 Move X8, [X8+184]
	173 Move [X8], W9
	174 Move X0, [X19]
	175 Move X19, [X10]
	176 Move W8, [X0+224]
	177 Compare W8, 0
	178 JumpIfNotEqual {180}
	179 Call 0x1C17DFC
	180 Move X0, X19
	181 Move X1, X31
	182 Call Type.GetTypeFromHandle, X0
	183 Move X8, [X20]
	184 Move X1, X31
	185 Move X8, [X8+184]
	186 Move [X8+48], X0
	187 Move X0, [X21]
	188 Call Type.GetTypeFromHandle, X0
	189 Move X8, [X20]
	190 Move X1, X31
	191 Move X8, [X8+184]
	192 Move [X8+56], X0
	193 Move X0, [X29]
	194 Call Type.GetTypeFromHandle, X0
	195 Move X8, [X20]
	196 Move X1, X31
	197 Move X8, [X8+184]
	198 Move [X8+64], X0
	199 Move X0, [X28]
	200 Call Type.GetTypeFromHandle, X0
	201 Move X8, [X20]
	202 Move X1, X31
	203 Move X8, [X8+184]
	204 Move [X8+72], X0
	205 Move X0, [X27]
	206 Call Type.GetTypeFromHandle, X0
	207 Move X8, [X20]
	208 Move X1, X31
	209 Move X8, [X8+184]
	210 Move [X8+80], X0
	211 Move X0, [X26]
	212 Call Type.GetTypeFromHandle, X0
	213 Move X8, [X20]
	214 Move X1, X31
	215 Move X8, [X8+184]
	216 Move [X8+88], X0
	217 Move X0, [X25]
	218 Call Type.GetTypeFromHandle, X0
	219 Move X8, [X20]
	220 Move X1, X31
	221 Move X8, [X8+184]
	222 Move [X8+96], X0
	223 Move X0, [X24]
	224 Call Type.GetTypeFromHandle, X0
	225 Move X8, [X20]
	226 Move X1, X31
	227 Move X8, [X8+184]
	228 Move [X8+104], X0
	229 Move X0, [X22]
	230 Call Type.GetTypeFromHandle, X0
	231 Move X8, [X20]
	232 Move X1, X31
	233 Move X8, [X8+184]
	234 Move [X8+112], X0
	235 Move X0, [X23]
	236 Call Type.GetTypeFromHandle, X0
	237 Move X8, [X20]
	238 Move X1, X31
	239 Move X8, [X8+184]
	240 Move [X8+120], X0
	241 Move X8, 0xE6A000
	242 Move X8, [X8+3464]
	243 Move X0, [X8]
	244 Call Type.GetTypeFromHandle, X0
	245 Move X8, [X20]
	246 Move X1, X31
	247 Move X8, [X8+184]
	248 Move [X8+128], X0
	249 Move X8, 0xE6A000
	250 Move X8, [X8+3472]
	251 Move X0, [X8]
	252 Call Type.GetTypeFromHandle, X0
	253 Move X8, [X20]
	254 Move X1, X31
	255 Move X8, [X8+184]
	256 Move [X8+136], X0
	257 Move X8, 0xE6B000
	258 Move X8, [X8+2688]
	259 Move X0, [X8]
	260 Call Type.GetTypeFromHandle, X0
	261 Move X8, [X20]
	262 Move X1, X31
	263 Move X8, [X8+184]
	264 Move [X8+144], X0
	265 Move X8, 0xE75000
	266 Move X8, [X8+384]
	267 Move X0, [X8]
	268 Call Type.GetTypeFromHandle, X0
	269 Move X8, [X20]
	270 Move X1, X31
	271 Move X8, [X8+184]
	272 Move [X8+152], X0
	273 Move X8, 0xE74000
	274 Move X8, [X8+3896]
	275 Move X0, [X8]
	276 Call Type.GetTypeFromHandle, X0
	277 Move X8, [X20]
	278 Move X1, X31
	279 Move X8, [X8+184]
	280 Move [X8+160], X0
	281 Move X8, 0xE6A000
	282 Move X8, [X8+3480]
	283 Move X0, [X8]
	284 Call Type.GetTypeFromHandle, X0
	285 Move X8, [X20]
	286 Move X1, X31
	287 Move X8, [X8+184]
	288 Move [X8+168], X0
	289 Move X8, 0xE6A000
	290 Move X8, [X8+3488]
	291 Move X0, [X8]
	292 Call Type.GetTypeFromHandle, X0
	293 Move X8, [X20]
	294 Move X1, X31
	295 Move X8, [X8+184]
	296 Move [X8+176], X0
	297 Move X8, 0xE6A000
	298 Move X8, [X8+3496]
	299 Move X0, [X8]
	300 Call Type.GetTypeFromHandle, X0
	301 Move X8, [X20]
	302 Move X1, X31
	303 Move X8, [X8+184]
	304 Move [X8+184], X0
	305 Move X8, 0xE4D000
	306 Move X8, [X8+2408]
	307 Move X0, [X8]
	308 Call Type.GetTypeFromHandle, X0
	309 Move X8, [X20]
	310 Move X1, X31
	311 Move X8, [X8+184]
	312 Move [X8+192], X0
	313 Move X8, 0xE74000
	314 Move X8, [X8+2064]
	315 Move X0, [X8]
	316 Call Type.GetTypeFromHandle, X0
	317 Move X8, [X20]
	318 Move X1, X31
	319 Move X9, [X8+184]
	320 Move X8, [X9+56]
	321 Move [X9+200], X0
	322 Move X0, X8
	323 Call Assembly.GetAssembly, X0
	324 Move X8, [X20]
	325 Move X8, [X8+184]
	326 Move [X8+208], X0
	327 Compare X0, 0
	328 JumpIfEqual {501}
	329 Move X25, 0xE75000
	330 Move X26, 0xE75000
	331 Move X27, 0xE75000
	332 Move X28, 0xE75000
	333 Move X24, 0xE75000
	334 Move X23, 0xE75000
	335 Move X22, 0xE75000
	336 Move X21, 0xE75000
	337 Move X19, 0xE6C000
	338 Move X29, 0xE75000
	339 Move X25, [X25+392]
	340 Move X26, [X26+352]
	341 Move X27, [X27+368]
	342 Move X28, [X28+272]
	343 Move X24, [X24+280]
	344 Move X23, [X23+288]
	345 Move X22, [X22+312]
	346 Move X21, [X21+328]
	347 Move X19, [X19+2656]
	348 Move X29, [X29+336]
	349 Move X8, [X0]
	350 Move X9, [X8+440]
	351 Move X1, [X8+448]
	352 NotImplemented "Instruction BLR not yet implemented."
	353 Move X8, [X20]
	354 Move X1, X31
	355 Move X8, [X8+184]
	356 Move [X8+216], X0
	357 Move X0, [X25]
	358 Call Type.GetTypeFromHandle, X0
	359 Move X8, [X20]
	360 Move X1, X31
	361 Move X8, [X8+184]
	362 Move [X8+224], X0
	363 Move X0, [X26]
	364 Call Type.GetTypeFromHandle, X0
	365 Move X8, [X20]
	366 Move X1, X31
	367 Move X8, [X8+184]
	368 Move [X8+232], X0
	369 Move X0, [X27]
	370 Call Type.GetTypeFromHandle, X0
	371 Move X8, [X20]
	372 Move X1, X31
	373 Move X8, [X8+184]
	374 Move [X8+240], X0
	375 Move X0, [X28]
	376 Call Type.GetTypeFromHandle, X0
	377 Move X8, [X20]
	378 Move X1, X31
	379 Move X8, [X8+184]
	380 Move [X8+248], X0
	381 Move X0, [X24]
	382 Call Type.GetTypeFromHandle, X0
	383 Move X8, [X20]
	384 Move X1, X31
	385 Move X8, [X8+184]
	386 Move [X8+256], X0
	387 Move X0, [X23]
	388 Call Type.GetTypeFromHandle, X0
	389 Move X8, [X20]
	390 Move X1, X31
	391 Move X8, [X8+184]
	392 Move [X8+264], X0
	393 Move X0, [X22]
	394 Call Type.GetTypeFromHandle, X0
	395 Move X8, [X20]
	396 Move X1, X31
	397 Move X8, [X8+184]
	398 Move [X8+272], X0
	399 Move X0, [X21]
	400 Call Type.GetTypeFromHandle, X0
	401 Move X8, [X20]
	402 Move X1, X31
	403 Move X8, [X8+184]
	404 Move [X8+280], X0
	405 Move X0, [X19]
	406 Call Type.GetTypeFromHandle, X0
	407 Move X8, [X20]
	408 Move X1, X31
	409 Move X8, [X8+184]
	410 Move [X8+288], X0
	411 Move X0, [X29]
	412 Call Type.GetTypeFromHandle, X0
	413 Move X8, [X20]
	414 Move X1, X31
	415 Move X8, [X8+184]
	416 Move [X8+296], X0
	417 Move X8, 0xE75000
	418 Move X8, [X8+344]
	419 Move X0, [X8]
	420 Call Type.GetTypeFromHandle, X0
	421 Move X8, [X20]
	422 Move X1, X31
	423 Move X8, [X8+184]
	424 Move [X8+304], X0
	425 Move X8, 0xE75000
	426 Move X8, [X8+360]
	427 Move X0, [X8]
	428 Call Type.GetTypeFromHandle, X0
	429 Move X8, [X20]
	430 Move X1, X31
	431 Move X8, [X8+184]
	432 Move [X8+312], X0
	433 Move X8, 0xE6C000
	434 Move X8, [X8+2664]
	435 Move X0, [X8]
	436 Call Type.GetTypeFromHandle, X0
	437 Move X8, [X20]
	438 Move X1, X31
	439 Move X8, [X8+184]
	440 Move [X8+320], X0
	441 Move X8, 0xE75000
	442 Move X8, [X8+376]
	443 Move X0, [X8]
	444 Call Type.GetTypeFromHandle, X0
	445 Move X8, [X20]
	446 Move X1, X31
	447 Move X8, [X8+184]
	448 Move [X8+328], X0
	449 Move X8, 0xE75000
	450 Move X8, [X8+304]
	451 Move X0, [X8]
	452 Call Type.GetTypeFromHandle, X0
	453 Move X8, [X20]
	454 Move X1, X31
	455 Move X8, [X8+184]
	456 Move [X8+336], X0
	457 Move X8, 0xE75000
	458 Move X8, [X8+400]
	459 Move X0, [X8]
	460 Call Type.GetTypeFromHandle, X0
	461 Move X8, [X20]
	462 Move X1, X31
	463 Move X8, [X8+184]
	464 Move [X8+344], X0
	465 Move X8, 0xE75000
	466 Move X8, [X8+408]
	467 Move X0, [X8]
	468 Call Type.GetTypeFromHandle, X0
	469 Move X8, [X20]
	470 Move X1, X31
	471 Move X8, [X8+184]
	472 Move [X8+352], X0
	473 Move X8, 0xE75000
	474 Move X8, [X8+416]
	475 Move X0, [X8]
	476 Call Type.GetTypeFromHandle, X0
	477 Move X8, [X20]
	478 Move X1, X31
	479 Move X8, [X8+184]
	480 Move [X8+360], X0
	481 Move X8, 0xE73000
	482 Move X8, [X8+3584]
	483 Move X0, [X8]
	484 Call Type.GetTypeFromHandle, X0
	485 Move X8, [X20]
	486 Move X20, [X31+80]
	487 Move X19, [X31+88]
	488 Move X22, [X31+64]
	489 Move X21, [X31+72]
	490 Move X24, [X31+48]
	491 Move X23, [X31+56]
	492 Move X8, [X8+184]
	493 Move X26, [X31+32]
	494 Move X25, [X31+40]
	495 Move X28, [X31+16]
	496 Move X27, [X31+24]
	497 Move [X8+368], X0
	498 Move X29, [X31+96]
	499 Move X30, [X31+104]
	500 Return 
	501 Call 0x1C17F20

