Type: System.Runtime.Serialization.FormatterConverter

Method: System.Object Convert(System.Object value, System.Type type)

Disassembly:
	0x032A04D4 MOV X2, X0
	0x032A04D8 MOV X0, X22
	0x032A04DC MOV X1, X19
	0x032A04E0 LDR X3, [X8]
	0x032A04E4 BL 0x2AA6B98
	0x032A04E8 TBZ X0, 0x0, 0x32A0508
	0x032A04EC LDP X2, X3, [X20 + 0x18]
	0x032A04F0 MOV X0, X21
	0x032A04F4 MOV X1, X19
	0x032A04F8 BL 0x329FD50
	0x032A04FC MOV X0, X20
	0x032A0500 MOV X1, X19
	0x032A0504 BL 0x32A051C
	0x032A0508 LDP X20, X19, [X31 + 0x20]
	0x032A050C LDP X22, X21, [X31 + 0x10]
	0x032A0510 LDR X30, [X31], #0x30
	0x032A0514 RET
	0x032A0518 BL 0x1C16F20
	0x032A051C STP X30, X21, [X31 - 0x20]!
	0x032A0520 STP X20, X19, [X31 + 0x10]
	0x032A0524 ADRP X21, 0x113C000
	0x032A0528 LDRB W8, [X21 + 0x767]
	0x032A052C MOV X20, X1
	0x032A0530 MOV X19, X0
	0x032A0534 TBNZ X8, 0x0, 0x32A054C
	0x032A0538 ADRP X0, 0xE84000
	0x032A053C LDR X0, [X0 + 0xAE8]
	0x032A0540 BL 0x1C16CF4
	0x032A0544 MOVZ W8, 0x1
	0x032A0548 STRB W8, [X21 + 0x767]
	0x032A054C CBZ X20, 0x32A05A8
	0x032A0550 ADRP X21, 0xE84000
	0x032A0554 LDR X21, [X21 + 0xAE8]
	0x032A0558 MOV X0, X20
	0x032A055C MOV X1, X31
	0x032A0560 BL 0x33BE520
	0x032A0564 LDR X8, [X21]
	0x032A0568 MOV X21, X0
	0x032A056C LDR W9, [X8 + 0xE0]
	0x032A0570 CBNZ W9, 0x32A057C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x113D000
	006 Move W8, [X21+1879]
	007 Move X19, X2
	008 Move X20, X1
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xE5D000
	014 Move X0, [X0+2536]
	015 Call 0x1C17CF4
	016 Move X0, 0xE56000
	017 Move X0, [X0+3144]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1879], W8
	021 Compare X20, 0
	022 JumpIfEqual {51}
	023 Move X8, 0xE56000
	024 Move X8, [X8+3144]
	025 Move X21, 0xE5D000
	026 Move X0, [X8]
	027 Move W8, [X0+224]
	028 Move X21, [X21+2536]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X31
	033 Call CultureInfo.get_InvariantCulture
	034 Move X8, [X21]
	035 Move X21, X0
	036 Move W9, [X8+224]
	037 Compare W9, 0
	038 JumpIfNotEqual {41}
	039 Move X0, X8
	040 Call 0x1C17DFC
	041 Move X0, X20
	042 Move X1, X19
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X2, X21
	046 Move X3, X31
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Call Convert.ChangeType, X0, X1, X2
	050 Return X0
	051 Call FormatterConverter.ThrowValueNullException

Method: System.Boolean ToBoolean(System.Object value)

Disassembly:
	0x032A05C0 LDR X3, [X8 + 0x28]
	0x032A05C4 BR X4
	0x032A05C8 RET
	0x032A05CC STR X30, [X31 - 0x30]!
	0x032A05D0 STP X22, X21, [X31 + 0x10]
	0x032A05D4 STP X20, X19, [X31 + 0x20]
	0x032A05D8 MOV X22, X1
	0x032A05DC MOV X1, X31
	0x032A05E0 MOV X19, X3
	0x032A05E4 MOV X20, X2
	0x032A05E8 MOV X21, X0
	0x032A05EC BL 0x33BDD8C
	0x032A05F0 MOV X0, X20
	0x032A05F4 MOV X1, X31
	0x032A05F8 MOV X2, X31
	0x032A05FC BL 0x32CCEA8
	0x032A0600 CBNZ X19, 0x32A0608
	0x032A0604 TBNZ X0, 0x0, 0x32A0684
	0x032A0608 CBNZ X22, 0x32A0628
	0x032A060C MOV X0, X20
	0x032A0610 MOV X1, X31
	0x032A0614 MOV X2, X31
	0x032A0618 BL 0x32CCEA8
	0x032A061C TBZ X0, 0x0, 0x32A0628
	0x032A0620 STP X31, X20, [X21 + 0x10]
	0x032A0624 STR X19, [X21 + 0x20]
	0x032A0628 MOV X0, X20
	0x032A062C MOV X1, X31
	0x032A0630 MOV X2, X31
	0x032A0634 BL 0x32CCED4
	0x032A0638 TBZ X0, 0x0, 0x32A066C
	0x032A063C CBNZ X19, 0x32A06A8
	0x032A0640 CBZ X20, 0x32A06A4
	0x032A0644 LDR X8, [X20]
	0x032A0648 MOV X0, X20
	0x032A064C LDR X9, [X8 + 0x258]
	0x032A0650 LDR X1, [X8 + 0x260]
	0x032A0654 BLR X9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x113D000
	005 Move W8, [X20+1880]
	006 Move X19, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xE5D000
	012 Move X0, [X0+2536]
	013 Call 0x1C17CF4
	014 Move X0, 0xE56000
	015 Move X0, [X0+3144]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1880], W8
	019 Compare X19, 0
	020 JumpIfEqual {47}
	021 Move X8, 0xE56000
	022 Move X8, [X8+3144]
	023 Move X20, 0xE5D000
	024 Move X0, [X8]
	025 Move W8, [X0+224]
	026 Move X20, [X20+2536]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X31
	031 Call CultureInfo.get_InvariantCulture
	032 Move X8, [X20]
	033 Move X20, X0
	034 Move W9, [X8+224]
	035 Compare W9, 0
	036 JumpIfNotEqual {39}
	037 Move X0, X8
	038 Call 0x1C17DFC
	039 Move X0, X19
	040 Move X1, X20
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X2, X31
	044 Move X30, [X31+32]
	045 Call Convert.ToBoolean, X0, X1
	046 Return X0
	047 Call FormatterConverter.ThrowValueNullException

Method: System.Int32 ToInt32(System.Object value)

Disassembly:
	0x032A0658 CBZ X0, 0x32A06A4
	0x032A065C MOV X1, X31
	0x032A0660 BL 0x33970C4
	0x032A0664 CBNZ X22, 0x32A066C
	0x032A0668 TBNZ X0, 0x0, 0x32A06C8
	0x032A066C STP X22, X20, [X21 + 0x10]
	0x032A0670 STR X19, [X21 + 0x20]
	0x032A0674 LDP X20, X19, [X31 + 0x20]
	0x032A0678 LDP X22, X21, [X31 + 0x10]
	0x032A067C LDR X30, [X31], #0x30
	0x032A0680 RET
	0x032A0684 ADRP X0, 0xE5B000
	0x032A0688 LDR X0, [X0 + 0x578]
	0x032A068C BL 0x1C16D08
	0x032A0690 BL 0x1C16F10
	0x032A0694 MOV X19, X0
	0x032A0698 ADRP X0, 0xE84000
	0x032A069C LDR X0, [X0 + 0xB40]
	0x032A06A0 B 0x32A06E4
	0x032A06A4 BL 0x1C16F20
	0x032A06A8 ADRP X0, 0xE5B000
	0x032A06AC LDR X0, [X0 + 0x578]
	0x032A06B0 BL 0x1C16D08
	0x032A06B4 BL 0x1C16F10
	0x032A06B8 MOV X19, X0
	0x032A06BC ADRP X0, 0xE84000
	0x032A06C0 LDR X0, [X0 + 0xB48]
	0x032A06C4 B 0x32A06E4
	0x032A06C8 ADRP X0, 0xE5B000
	0x032A06CC LDR X0, [X0 + 0x578]
	0x032A06D0 BL 0x1C16D08
	0x032A06D4 BL 0x1C16F10
	0x032A06D8 MOV X19, X0
	0x032A06DC ADRP X0, 0xE84000
	0x032A06E0 LDR X0, [X0 + 0xB50]
	0x032A06E4 BL 0x1C16D08
	0x032A06E8 MOV X1, X0
	0x032A06EC MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x113D000
	005 Move W8, [X20+1881]
	006 Move X19, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xE5D000
	012 Move X0, [X0+2536]
	013 Call 0x1C17CF4
	014 Move X0, 0xE56000
	015 Move X0, [X0+3144]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1881], W8
	019 Compare X19, 0
	020 JumpIfEqual {47}
	021 Move X8, 0xE56000
	022 Move X8, [X8+3144]
	023 Move X20, 0xE5D000
	024 Move X0, [X8]
	025 Move W8, [X0+224]
	026 Move X20, [X20+2536]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X31
	031 Call CultureInfo.get_InvariantCulture
	032 Move X8, [X20]
	033 Move X20, X0
	034 Move W9, [X8+224]
	035 Compare W9, 0
	036 JumpIfNotEqual {39}
	037 Move X0, X8
	038 Call 0x1C17DFC
	039 Move X0, X19
	040 Move X1, X20
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X2, X31
	044 Move X30, [X31+32]
	045 Call Convert.ToInt32, X0, X1
	046 Return X0
	047 Call FormatterConverter.ThrowValueNullException

Method: System.Int64 ToInt64(System.Object value)

Disassembly:
	0x032A06F0 MOV X2, X31
	0x032A06F4 BL 0x3314A68
	0x032A06F8 ADRP X0, 0xE84000
	0x032A06FC LDR X0, [X0 + 0xB58]
	0x032A0700 BL 0x1C16D08
	0x032A0704 MOV X1, X0
	0x032A0708 MOV X0, X19
	0x032A070C BL 0x1C16DEC
	0x032A0710 LDR X0, [X0 + 0x10]
	0x032A0714 RET
	0x032A0718 LDR X0, [X0 + 0x18]
	0x032A071C RET
	0x032A0720 LDR X0, [X0 + 0x20]
	0x032A0724 RET
	0x032A0728 STP X30, X25, [X31 - 0x40]!
	0x032A072C STP X24, X23, [X31 + 0x10]
	0x032A0730 STP X22, X21, [X31 + 0x20]
	0x032A0734 STP X20, X19, [X31 + 0x30]
	0x032A0738 ADRP X24, 0x113C000
	0x032A073C ADRP X25, 0xE84000
	0x032A0740 ADRP X19, 0xE84000
	0x032A0744 ADRP X21, 0xE84000
	0x032A0748 ADRP X23, 0xE5B000
	0x032A074C ADRP X20, 0xE84000
	0x032A0750 ADRP X22, 0xE53000
	0x032A0754 LDR X25, [X25 + 0xB60]
	0x032A0758 LDRB W8, [X24 + 0x768]
	0x032A075C LDR X19, [X19 + 0xB68]
	0x032A0760 LDR X21, [X21 + 0xB70]
	0x032A0764 LDR X23, [X23 + 0xC60]
	0x032A0768 LDR X20, [X20 + 0xB78]
	0x032A076C LDR X22, [X22 + 0x6C0]
	0x032A0770 TBNZ X8, 0x0, 0x32A07C4
	0x032A0774 ADRP X0, 0xE84000
	0x032A0778 LDR X0, [X0 + 0xB68]
	0x032A077C BL 0x1C16CF4
	0x032A0780 ADRP X0, 0xE84000
	0x032A0784 LDR X0, [X0 + 0xB60]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x113D000
	005 Move W8, [X20+1882]
	006 Move X19, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xE5D000
	012 Move X0, [X0+2536]
	013 Call 0x1C17CF4
	014 Move X0, 0xE56000
	015 Move X0, [X0+3144]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1882], W8
	019 Compare X19, 0
	020 JumpIfEqual {47}
	021 Move X8, 0xE56000
	022 Move X8, [X8+3144]
	023 Move X20, 0xE5D000
	024 Move X0, [X8]
	025 Move W8, [X0+224]
	026 Move X20, [X20+2536]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X31
	031 Call CultureInfo.get_InvariantCulture
	032 Move X8, [X20]
	033 Move X20, X0
	034 Move W9, [X8+224]
	035 Compare W9, 0
	036 JumpIfNotEqual {39}
	037 Move X0, X8
	038 Call 0x1C17DFC
	039 Move X0, X19
	040 Move X1, X20
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X2, X31
	044 Move X30, [X31+32]
	045 Call Convert.ToInt64, X0, X1
	046 Return X0
	047 Call FormatterConverter.ThrowValueNullException

Method: System.Single ToSingle(System.Object value)

Disassembly:
	0x032A0788 BL 0x1C16CF4
	0x032A078C ADRP X0, 0xE84000
	0x032A0790 LDR X0, [X0 + 0xB78]
	0x032A0794 BL 0x1C16CF4
	0x032A0798 ADRP X0, 0xE84000
	0x032A079C LDR X0, [X0 + 0xB70]
	0x032A07A0 BL 0x1C16CF4
	0x032A07A4 ADRP X0, 0xE5B000
	0x032A07A8 LDR X0, [X0 + 0xC60]
	0x032A07AC BL 0x1C16CF4
	0x032A07B0 ADRP X0, 0xE53000
	0x032A07B4 LDR X0, [X0 + 0x6C0]
	0x032A07B8 BL 0x1C16CF4
	0x032A07BC MOVZ W8, 0x1
	0x032A07C0 STRB W8, [X24 + 0x768]
	0x032A07C4 LDR X0, [X25]
	0x032A07C8 BL 0x1C16F10
	0x032A07CC LDR X1, [X19]
	0x032A07D0 MOV X19, X0
	0x032A07D4 BL 0x2984BBC
	0x032A07D8 LDR X8, [X21]
	0x032A07DC LDR X8, [X8 + 0xB8]
	0x032A07E0 STR X19, [X8]
	0x032A07E4 LDR X8, [X21]
	0x032A07E8 LDR X8, [X8 + 0xB8]
	0x032A07EC STRB W31, [X8 + 0x8]
	0x032A07F0 BL 0x1C16D44
	0x032A07F4 LDR X8, [X21]
	0x032A07F8 MOVZ W1, 0x1
	0x032A07FC LDR X8, [X8 + 0xB8]
	0x032A0800 STRB W31, [X8 + 0x9]
	0x032A0804 LDR X0, [X23]
	0x032A0808 BL 0x1C16D6C
	0x032A080C LDR X8, [X22]
	0x032A0810 LDR X20, [X20]
	0x032A0814 MOV X19, X0
	0x032A0818 LDR W9, [X8 + 0xE0]
	0x032A081C CBNZ W9, 0x32A0828

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x113D000
	005 Move W8, [X20+1883]
	006 Move X19, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xE5D000
	012 Move X0, [X0+2536]
	013 Call 0x1C17CF4
	014 Move X0, 0xE56000
	015 Move X0, [X0+3144]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1883], W8
	019 Compare X19, 0
	020 JumpIfEqual {47}
	021 Move X8, 0xE56000
	022 Move X8, [X8+3144]
	023 Move X20, 0xE5D000
	024 Move X0, [X8]
	025 Move W8, [X0+224]
	026 Move X20, [X20+2536]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X31
	031 Call CultureInfo.get_InvariantCulture
	032 Move X8, [X20]
	033 Move X20, X0
	034 Move W9, [X8+224]
	035 Compare W9, 0
	036 JumpIfNotEqual {39}
	037 Move X0, X8
	038 Call 0x1C17DFC
	039 Move X0, X19
	040 Move X1, X20
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X2, X31
	044 Move X30, [X31+32]
	045 Call Convert.ToSingle, X0, X1
	046 Return V0
	047 Call FormatterConverter.ThrowValueNullException

Method: System.String ToString(System.Object value)

Disassembly:
	0x032A0820 MOV X0, X8
	0x032A0824 BL 0x1C16DFC
	0x032A0828 MOV X0, X20
	0x032A082C MOV X1, X31
	0x032A0830 BL 0x338C698
	0x032A0834 CBZ X19, 0x32A0894
	0x032A0838 MOV X20, X0
	0x032A083C CBZ X0, 0x32A0854
	0x032A0840 LDR X8, [X19]
	0x032A0844 MOV X0, X20
	0x032A0848 LDR X1, [X8 + 0x40]
	0x032A084C BL 0x1C16E00
	0x032A0850 CBZ X0, 0x32A089C
	0x032A0854 LDR W8, [X19 + 0x18]
	0x032A0858 CBZ W8, 0x32A0898
	0x032A085C STR X20, [X19 + 0x20]
	0x032A0860 LDR X8, [X21]
	0x032A0864 MOV X0, X31
	0x032A0868 LDR X8, [X8 + 0xB8]
	0x032A086C STR X19, [X8 + 0x10]
	0x032A0870 BL 0x33981F8
	0x032A0874 LDR X8, [X21]
	0x032A0878 LDP X20, X19, [X31 + 0x30]
	0x032A087C LDP X22, X21, [X31 + 0x20]
	0x032A0880 LDP X24, X23, [X31 + 0x10]
	0x032A0884 LDR X8, [X8 + 0xB8]
	0x032A0888 STR X0, [X8 + 0x18]
	0x032A088C LDP X30, X25, [X31], #0x40
	0x032A0890 RET
	0x032A0894 BL 0x1C16F20
	0x032A0898 BL 0x1C16F28
	0x032A089C BL 0x1C16F44
	0x032A08A0 MOV X1, X31
	0x032A08A4 BL 0x1C16DEC
	0x032A08A8 STP X30, X23, [X31 - 0x30]!
	0x032A08AC STP X22, X21, [X31 + 0x10]
	0x032A08B0 STP X20, X19, [X31 + 0x20]
	0x032A08B4 ADRP X20, 0x113C000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x113D000
	005 Move W8, [X20+1884]
	006 Move X19, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xE5D000
	012 Move X0, [X0+2536]
	013 Call 0x1C17CF4
	014 Move X0, 0xE56000
	015 Move X0, [X0+3144]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1884], W8
	019 Compare X19, 0
	020 JumpIfEqual {47}
	021 Move X8, 0xE56000
	022 Move X8, [X8+3144]
	023 Move X20, 0xE5D000
	024 Move X0, [X8]
	025 Move W8, [X0+224]
	026 Move X20, [X20+2536]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X31
	031 Call CultureInfo.get_InvariantCulture
	032 Move X8, [X20]
	033 Move X20, X0
	034 Move W9, [X8+224]
	035 Compare W9, 0
	036 JumpIfNotEqual {39}
	037 Move X0, X8
	038 Call 0x1C17DFC
	039 Move X0, X19
	040 Move X1, X20
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X2, X31
	044 Move X30, [X31+32]
	045 Call Convert.ToString, X0, X1
	046 Return X0
	047 Call FormatterConverter.ThrowValueNullException

Method: System.Void ThrowValueNullException()

Disassembly:
	0x032A0574 MOV X0, X8
	0x032A0578 BL 0x1C16DFC
	0x032A057C MOV X0, X21
	0x032A0580 BL 0x32A0100
	0x032A0584 CBZ X0, 0x32A05A8
	0x032A0588 LDR X1, [X19 + 0x28]
	0x032A058C LDR X2, [X0 + 0x18]
	0x032A0590 MOV X0, X20
	0x032A0594 BL 0x329FEB0
	0x032A0598 STR X0, [X19 + 0x28]
	0x032A059C LDP X20, X19, [X31 + 0x10]
	0x032A05A0 LDP X30, X21, [X31], #0x20
	0x032A05A4 RET
	0x032A05A8 BL 0x1C16F20
	0x032A05AC LDR X8, [X0 + 0x28]
	0x032A05B0 CBZ X8, 0x32A05C8
	0x032A05B4 LDP X1, X2, [X0 + 0x18]
	0x032A05B8 LDR X4, [X8 + 0x18]
	0x032A05BC LDR X0, [X8 + 0x40]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xE59000
	004 Move X0, [X0+1320]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xE5E000
	009 Move X0, [X0+3784]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call ArgumentNullException..ctor, X0, X1
	015 Move X0, 0xE85000
	016 Move X0, [X0+2664]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Void .ctor()

Disassembly:
	0x032A08B8 LDRB W8, [X20 + 0x769]
	0x032A08BC MOV X19, X0

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

