Type: System.Runtime.Serialization.FixupHolderList

Method: System.Void .ctor()

Disassembly:
	0x032A7F50 B.NE 0x32A8024
	0x032A7F54 MOV X0, X23

ISIL:
	001 Move W1, 2
	002 Call FixupHolderList..ctor, X0, X1
	003 Return 

Method: System.Void .ctor(System.Int32 startingSize)

Disassembly:
	0x032A805C STRB W8, [X22 + 0x7A7]
	0x032A8060 LDR X0, [X20 + 0x20]
	0x032A8064 CBZ X0, 0x32A80B0
	0x032A8068 ADRP X22, 0xE7C000
	0x032A806C LDR X22, [X22 + 0xAE8]
	0x032A8070 MOV X1, X31
	0x032A8074 BL 0x33BE520
	0x032A8078 LDR X8, [X22]
	0x032A807C MOV X22, X0
	0x032A8080 LDR W9, [X8 + 0xE0]
	0x032A8084 CBNZ W9, 0x32A8090
	0x032A8088 MOV X0, X8
	0x032A808C BL 0x1C16DFC
	0x032A8090 MOV X0, X22
	0x032A8094 BL 0x32A0100
	0x032A8098 CBZ X0, 0x32A80C0
	0x032A809C LDR X1, [X20 + 0x20]
	0x032A80A0 MOV X2, X21
	0x032A80A4 MOV X3, X19
	0x032A80A8 BL 0x329FE48
	0x032A80AC STR X31, [X20 + 0x20]
	0x032A80B0 LDP X20, X19, [X31 + 0x20]
	0x032A80B4 LDP X22, X21, [X31 + 0x10]
	0x032A80B8 LDR X30, [X31], #0x30
	0x032A80BC RET
	0x032A80C0 BL 0x1C16F20
	0x032A80C4 MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1135000
	007 Move X21, 0xE7D000
	008 Move W8, [X22+1946]
	009 Move X21, [X21+3728]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xE7D000
	017 Move X0, [X0+3728]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1946], W8
	021 Move X0, X19
	022 Move X1, X31
	023 Call Object..ctor, X0
	024 Move [X19+24], W31
	025 Move X0, [X21]
	026 Move W1, W20
	027 Call 0x1C17D6C
	028 Move [X19+16], X0
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X30, [X31+48]
	034 Return 

Method: System.Void Add(System.Runtime.Serialization.FixupHolder fixup)

Disassembly:
	0x032A80C8 MOV X1, X31
	0x032A80CC STR W8, [X0 + 0x10]
	0x032A80D0 B 0x33A51F0
	0x032A80D4 STR X30, [X31 - 0x20]!
	0x032A80D8 STP X20, X19, [X31 + 0x10]
	0x032A80DC CMP W1, 0x0
	0x032A80E0 B.LE 0x32A80F4
	0x032A80E4 LDP X20, X19, [X31 + 0x10]
	0x032A80E8 STR W1, [X0 + 0x10]
	0x032A80EC LDR X30, [X31], #0x20
	0x032A80F0 RET
	0x032A80F4 ADRP X0, 0xE7C000
	0x032A80F8 LDR X0, [X0 + 0xEE0]
	0x032A80FC BL 0x1C16D08
	0x032A8100 MOV X1, X31
	0x032A8104 BL 0x33BDD84
	0x032A8108 MOV X19, X0
	0x032A810C ADRP X0, 0xE53000
	0x032A8110 LDR X0, [X0 + 0x578]
	0x032A8114 BL 0x1C16D08
	0x032A8118 BL 0x1C16F10
	0x032A811C MOV X1, X19
	0x032A8120 MOV X2, X31
	0x032A8124 MOV X20, X0
	0x032A8128 BL 0x3314A68
	0x032A812C ADRP X0, 0xE7C000
	0x032A8130 LDR X0, [X0 + 0xEE8]
	0x032A8134 BL 0x1C16D08
	0x032A8138 MOV X1, X0
	0x032A813C MOV X0, X20
	0x032A8140 BL 0x1C16DEC
	0x032A8144 MOV X1, X31
	0x032A8148 B 0x33A51F0
	0x032A814C MOV X1, X31
	0x032A8150 B 0x33A51F0
	0x032A8154 MOV X1, X31
	0x032A8158 B 0x33A51F0
	0x032A815C MOV X1, X31
	0x032A8160 B 0x33A51F0
	0x032A8164 STR X30, [X31 - 0x10]!
	0x032A8168 LDR X0, [X0 + 0x10]
	0x032A816C CBZ X0, 0x32A8180

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, [X0+16]
	007 Compare X21, 0
	008 JumpIfEqual {44}
	009 Move W22, [X0+24]
	010 Move W8, [X21+24]
	011 Move X20, X0
	012 Move X19, X1
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move X0, X20
	015 Call FixupHolderList.EnlargeArray, X0
	016 Move W22, [X20+24]
	017 Move X21, [X20+16]
	018 Add W8, W22, 1
	019 Move [X20+24], W8
	020 Compare X21, 0
	021 JumpIfEqual {44}
	022 Compare X19, 0
	023 JumpIfNotEqual {28}
	024 Add W8, W22, 1
	025 Move [X20+24], W8
	026 Compare X19, 0
	027 JumpIfEqual {34}
	028 Move X8, [X21]
	029 Move X0, X19
	030 Move X1, [X8+64]
	031 Call 0x1C17E00
	032 Compare X0, 0
	033 JumpIfEqual {46}
	034 Move W8, [X21+24]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Add X8, X21, W22
	037 Move [X8+32], X19
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 Return 
	044 Call 0x1C17F20
	045 Call 0x1C17F28
	046 Call 0x1C17F44
	047 Move X1, X31
	048 Call 0x1C17DEC

Method: System.Void EnlargeArray()

Disassembly:
	0x032A8170 LDR X8, [X0]
	0x032A8174 LDP X2, X1, [X8 + 0x1D8]
	0x032A8178 LDR X30, [X31], #0x10
	0x032A817C BR X2
	0x032A8180 BL 0x1C16F20
	0x032A8184 STR X30, [X31 - 0x10]!
	0x032A8188 LDR X0, [X0 + 0x10]
	0x032A818C CBZ X0, 0x32A81A4
	0x032A8190 LDR X8, [X0]
	0x032A8194 LDR X2, [X8 + 0x238]
	0x032A8198 LDR X1, [X8 + 0x240]
	0x032A819C LDR X30, [X31], #0x10
	0x032A81A0 BR X2
	0x032A81A4 BL 0x1C16F20
	0x032A81A8 LDR X0, [X0 + 0x18]
	0x032A81AC RET
	0x032A81B0 STR X30, [X31 - 0x10]!
	0x032A81B4 LDR X0, [X0 + 0x10]
	0x032A81B8 CBZ X0, 0x32A81CC
	0x032A81BC LDR X8, [X0]
	0x032A81C0 LDP X2, X1, [X8 + 0x1B8]
	0x032A81C4 LDR X30, [X31], #0x10
	0x032A81C8 BR X2
	0x032A81CC BL 0x1C16F20
	0x032A81D0 STR X30, [X31 - 0x10]!
	0x032A81D4 LDR X0, [X0 + 0x10]
	0x032A81D8 CBZ X0, 0x32A81EC
	0x032A81DC LDR X8, [X0]
	0x032A81E0 LDP X2, X1, [X8 + 0x1C8]
	0x032A81E4 LDR X30, [X31], #0x10
	0x032A81E8 BR X2
	0x032A81EC BL 0x1C16F20
	0x032A81F0 STR X30, [X31 - 0x10]!
	0x032A81F4 LDR X0, [X0 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1135000
	005 Move W8, [X20+1947]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE7D000
	012 Move X0, [X0+3728]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1947], W8
	016 Move X8, [X19+16]
	017 Compare X8, 0
	018 JumpIfEqual {44}
	019 Move X9, 0xE7D000
	020 Move W8, [X8+24]
	021 Move X9, [X9+3728]
	022 Move W8, W8
	023 ShiftRight W8, 31
	024 And W8, W8, 0x3FFFFFFF
	025 Move X0, [X9]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move TEMP, 0x80000000
	028 Not TEMP
	029 Move W9, TEMP
	030 NotImplemented "Instruction CSEL not yet implemented."
	031 Call 0x1C17D6C
	032 Move X8, [X19+16]
	033 Move W2, [X19+24]
	034 Move X20, X0
	035 Move X1, X20
	036 Move X0, X8
	037 Move X3, X31
	038 Call Array.Copy, X0, X1, X2
	039 Move [X19+16], X20
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Return 
	044 Call 0x1C17F20

