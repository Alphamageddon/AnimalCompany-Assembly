Type: System.Runtime.Serialization.ObjectHolderListEnumerator

Method: System.Void .ctor(System.Runtime.Serialization.ObjectHolderList list, System.Boolean isFixupEnumerator)

Disassembly:
	0x032A845C LDR X0, [X25]
	0x032A8460 BL 0x1C16F10
	0x032A8464 LDR X1, [X26]
	0x032A8468 MOV X21, X0
	0x032A846C BL 0x2A9E704
	0x032A8470 STR X21, [X20 + 0x28]
	0x032A8474 STR X19, [X20 + 0x38]
	0x032A8478 STRB W27, [X20 + 0x5A]
	0x032A847C LDP X20, X19, [X31 + 0x40]
	0x032A8480 LDP X22, X21, [X31 + 0x30]
	0x032A8484 LDP X24, X23, [X31 + 0x20]
	0x032A8488 LDP X26, X25, [X31 + 0x10]
	0x032A848C LDP X30, X27, [X31], #0x50
	0x032A8490 RET
	0x032A8494 BL 0x1C16F20
	0x032A8498 ADRP X0, 0xE50000
	0x032A849C LDR X0, [X0 + 0x528]
	0x032A84A0 BL 0x1C16D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, X1
	006 Move X1, X31
	007 Move W20, W2
	008 Move X19, X0
	009 Call Object..ctor, X0
	010 Move [X19+24], X21
	011 Compare X21, 0
	012 JumpIfEqual {26}
	013 Move W8, [X21+24]
	014 And W9, W20, 1
	015 Move TEMP, 0
	016 Not TEMP
	017 Move W10, TEMP
	018 Move [X19+16], W9
	019 Move [X19+32], W8
	020 Move [X19+36], W10
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Return 
	026 Call 0x1C17F20

Method: System.Boolean MoveNext()

Disassembly:
	0x032A73C4 LDP X20, X19, [X31 + 0x10]
	0x032A73C8 LDR X30, [X31], #0x20
	0x032A73CC RET
	0x032A73D0 BL 0x1C16F28
	0x032A73D4 STR X30, [X31 - 0x20]!
	0x032A73D8 STP X20, X19, [X31 + 0x10]
	0x032A73DC ADRP X20, 0x1135000
	0x032A73E0 LDRB W8, [X20 + 0x7A0]
	0x032A73E4 MOV X19, X0
	0x032A73E8 TBNZ X8, 0x0, 0x32A7400
	0x032A73EC ADRP X0, 0xE7D000
	0x032A73F0 LDR X0, [X0 + 0xCE0]
	0x032A73F4 BL 0x1C16CF4
	0x032A73F8 MOVZ W8, 0x1
	0x032A73FC STRB W8, [X20 + 0x7A0]
	0x032A7400 LDR X8, [X19 + 0x10]
	0x032A7404 CBZ X8, 0x32A7458
	0x032A7408 ADRP X9, 0xE7D000
	0x032A740C LDR W8, [X8 + 0x18]
	0x032A7410 LDR X9, [X9 + 0xCE0]
	0x032A7414 UBFM W8, W8, 0x1F, 0x1E
	0x032A7418 LDR X0, [X9]
	0x032A741C CMP W8, 0x0
	0x032A7420 MOVN W9, 0x80000000
	0x032A7424 CSEL W1, W8, W9, GE
	0x032A7428 BL 0x1C16D6C
	0x032A742C LDR X8, [X19 + 0x10]
	0x032A7430 LDR W2, [X19 + 0x18]
	0x032A7434 MOV X20, X0
	0x032A7438 MOV X1, X20
	0x032A743C MOV X0, X8
	0x032A7440 MOV X3, X31
	0x032A7444 BL 0x33A0C7C
	0x032A7448 STR X20, [X19 + 0x10]
	0x032A744C LDP X20, X19, [X31 + 0x10]
	0x032A7450 LDR X30, [X31], #0x20
	0x032A7454 RET
	0x032A7458 BL 0x1C16F20
	0x032A745C STP X30, X21, [X31 - 0x20]!
	0x032A7460 STP X20, X19, [X31 + 0x10]
	0x032A7464 MOV X21, X1
	0x032A7468 MOV X1, X31
	0x032A746C MOV W20, W2
	0x032A7470 MOV X19, X0
	0x032A7474 BL 0x33BDD8C
	0x032A7478 STR X21, [X19 + 0x18]
	0x032A747C CBZ X21, 0x32A74A0

ISIL:
	001 Move [X31-16], X30
	002 Move W8, [X0+16]
	003 Compare W8, 0
	004 JumpIfEqual {40}
	005 Move W9, [X0+36]
	006 Move X8, [X0+24]
	007 Add W11, W9, 1
	008 Move W9, W11
	009 Compare X8, 0
	010 JumpIfEqual {51}
	011 Move W10, [X8+24]
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X11, [X8+16]
	014 Compare X11, 0
	015 JumpIfEqual {51}
	016 Move W12, [X11+24]
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Add X11, X11, W9
	019 Move X11, [X11+32]
	020 Compare X11, 0
	021 JumpIfEqual {51}
	022 Move W11, [X11+80]
	023 And W31, W11, 6
	024 NotImplemented "Instruction CSET not yet implemented."
	025 Move TEMP, X11
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {36}
	029 And W11, W11, 0x4000
	030 Or W12, W12, W11
	031 Add W11, W9, 1
	032 Move TEMP, X12
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {8}
	036 NotImplemented "Instruction CMP not yet implemented."
	037 NotImplemented "Instruction CSET not yet implemented."
	038 Move [X0+36], W9
	039 Move W0, W8
	040 Move W8, [X0+36]
	041 Move X9, [X0+24]
	042 Add W8, W8, 1
	043 Move [X0+36], W8
	044 Compare X9, 0
	045 JumpIfEqual {55}
	046 Move W9, [X9+24]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 NotImplemented "Instruction CSET not yet implemented."
	049 Move X30, [X31+16]
	050 Return X0
	051 Move [X0+36], W9
	052 Call 0x1C17F20
	053 Move [X0+36], W9
	054 Call 0x1C17F28
	055 Call 0x1C17F20

Method: System.Runtime.Serialization.ObjectHolder get_Current()

Disassembly:
	0x032A736C CBZ X8, 0x32A73A4
	0x032A7370 LDR W9, [X0 + 0x18]
	0x032A7374 LDR W10, [X8 + 0x18]
	0x032A7378 MOV X20, X0
	0x032A737C MOV X19, X1
	0x032A7380 CMP W9, W10
	0x032A7384 B.NE 0x32A73A8
	0x032A7388 MOV X0, X20
	0x032A738C BL 0x32A73D4
	0x032A7390 LDR W9, [X20 + 0x18]
	0x032A7394 LDR X8, [X20 + 0x10]
	0x032A7398 ADD W10, W9, 0x1
	0x032A739C STR W10, [X20 + 0x18]
	0x032A73A0 CBNZ X8, 0x32A73B0
	0x032A73A4 BL 0x1C16F20

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+24]
	003 Compare X8, 0
	004 JumpIfEqual {15}
	005 Move X8, [X8+16]
	006 Compare X8, 0
	007 JumpIfEqual {15}
	008 NotImplemented "Instruction LDRSW not yet implemented."
	009 Move W10, [X8+24]
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Add X8, X8, X9
	012 Move X0, [X8+32]
	013 Move X30, [X31+16]
	014 Return X0
	015 Call 0x1C17F20
	016 Call 0x1C17F28

