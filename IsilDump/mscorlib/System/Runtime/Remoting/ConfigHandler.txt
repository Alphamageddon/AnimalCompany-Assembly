Type: System.Runtime.Remoting.ConfigHandler

Method: System.Void .ctor(System.Boolean onlyDelayedChannels)

Disassembly:
	0x03276938 ADD X10, X10, 0x8
	0x0327693C LDUR X11, [X10 - 0x8]
	0x03276940 CMP X11, X1
	0x03276944 B.EQ 0x3276964
	0x03276948 SUBS X9, X9, 0x1
	0x0327694C ADD X10, X10, 0x10
	0x03276950 B.NE 0x327693C
	0x03276954 MOV X0, X19
	0x03276958 MOV W2, W31
	0x0327695C BL 0x1C5C788
	0x03276960 B 0x3276970
	0x03276964 LDRSW X9, [X10]
	0x03276968 ADD X8, X8, X9, 0x4, LSL
	0x0327696C ADD X0, X8, 0x138
	0x03276970 LDP X8, X1, [X0]
	0x03276974 MOV X0, X19
	0x03276978 BLR X8
	0x0327697C TBZ X0, 0x0, 0x3277148
	0x03276980 LDR X8, [X19]
	0x03276984 LDR X1, [X21]
	0x03276988 LDRH W9, [X8 + 0x12E]
	0x0327698C CBZ X9, 0x32769B0
	0x03276990 LDR X10, [X8 + 0xB0]
	0x03276994 ADD X10, X10, 0x8
	0x03276998 LDUR X11, [X10 - 0x8]
	0x0327699C CMP X11, X1
	0x032769A0 B.EQ 0x32769C0
	0x032769A4 SUBS X9, X9, 0x1
	0x032769A8 ADD X10, X10, 0x10
	0x032769AC B.NE 0x3276998
	0x032769B0 MOVZ W2, 0x1
	0x032769B4 MOV X0, X19
	0x032769B8 BL 0x1C5C788
	0x032769BC B 0x32769D0
	0x032769C0 LDR W9, [X10]
	0x032769C4 ADD W9, W9, 0x1
	0x032769C8 ADD X8, X8, W9, 0x4, SXTW
	0x032769CC ADD X0, X8, 0x138
	0x032769D0 LDP X8, X1, [X0]
	0x032769D4 MOV X0, X19
	0x032769D8 BLR X8
	0x032769DC MOV X25, X0
	0x032769E0 CBZ X0, 0x3276A3C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x1167000
	008 Move X22, 0xEAB000
	009 Move X21, 0xE7E000
	010 Move W8, [X23+1516]
	011 Move X22, [X22+2976]
	012 Move X21, [X21+2440]
	013 Move W20, W1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xEAB000
	020 Move X0, [X0+2976]
	021 Call 0x1C17CF4
	022 Move X0, 0xE7E000
	023 Move X0, [X0+2440]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+1516], W8
	027 Move X0, [X22]
	028 And W23, W20, 1
	029 Call 0x1C17F10
	030 Move X1, X31
	031 Move X20, X0
	032 Call ArrayList..ctor, X0
	033 Move [X19+16], X20
	034 Move X0, [X22]
	035 Call 0x1C17F10
	036 Move X1, X31
	037 Move X20, X0
	038 Call ArrayList..ctor, X0
	039 Move [X19+24], X20
	040 Move X8, [X21]
	041 Move X0, X19
	042 Move X1, X31
	043 Move [X19+64], X8
	044 Call Object..ctor, X0
	045 Move [X19+72], W23
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X22, [X31+16]
	049 Move X21, [X31+24]
	050 Move X30, [X31+48]
	051 Move X23, [X31+56]
	052 Return 

Method: System.Void ValidatePath(System.String element, System.String[] paths)

Disassembly:
	0x0327AAF4 LDP X20, X19, [X31 + 0x20]
	0x0327AAF8 LDP X22, X21, [X31 + 0x10]
	0x0327AAFC LDR X30, [X31], #0x30
	0x0327AB00 B 0x327974C
	0x0327AB04 LDR W9, [X10]
	0x0327AB08 ADD W9, W9, 0x5
	0x0327AB0C ADD X8, X8, W9, 0x4, SXTW
	0x0327AB10 ADD X0, X8, 0x138
	0x0327AB14 LDP X8, X1, [X0]
	0x0327AB18 MOV X0, X21
	0x0327AB1C BLR X8
	0x0327AB20 CBZ X0, 0x327ACC8
	0x0327AB24 LDR W8, [X0 + 0x18]
	0x0327AB28 CBZ W8, 0x327ACCC
	0x0327AB2C LDR X8, [X0 + 0x20]
	0x0327AB30 STR X8, [X19 + 0x38]
	0x0327AB34 LDP X20, X19, [X31 + 0x20]
	0x0327AB38 LDP X22, X21, [X31 + 0x10]
	0x0327AB3C LDR X30, [X31], #0x30
	0x0327AB40 RET
	0x0327AB44 ADRP X8, 0xEAA000
	0x0327AB48 LDR X8, [X8]
	0x0327AB4C MOV X0, X19
	0x0327AB50 LDR X1, [X8]
	0x0327AB54 BL 0x3279BD0
	0x0327AB58 TBZ X0, 0x0, 0x327ABA4
	0x0327AB5C MOVZ W3, 0x1
	0x0327AB60 MOV X0, X19
	0x0327AB64 MOV X1, X20
	0x0327AB68 MOV X2, X21
	0x0327AB6C BL 0x327B930
	0x0327AB70 ADRP X8, 0xEA9000
	0x0327AB74 LDR X8, [X8 + 0xDE0]
	0x0327AB78 MOV X19, X0
	0x0327AB7C LDR X8, [X8]
	0x0327AB80 LDR W9, [X8 + 0xE0]
	0x0327AB84 CBNZ W9, 0x327AB90
	0x0327AB88 MOV X0, X8
	0x0327AB8C BL 0x1C16DFC
	0x0327AB90 MOV X0, X19
	0x0327AB94 LDP X20, X19, [X31 + 0x20]
	0x0327AB98 LDP X22, X21, [X31 + 0x10]
	0x0327AB9C LDR X30, [X31], #0x30
	0x0327ABA0 B 0x32767E0
	0x0327ABA4 ADRP X8, 0xEAA000
	0x0327ABA8 LDR X8, [X8 + 0xC0]
	0x0327ABAC MOV X0, X19
	0x0327ABB0 LDR X1, [X8]
	0x0327ABB4 BL 0x3279BD0
	0x0327ABB8 TBZ X0, 0x0, 0x327AC04
	0x0327ABBC MOVZ W3, 0x1
	0x0327ABC0 MOV X0, X19
	0x0327ABC4 MOV X1, X20
	0x0327ABC8 MOV X2, X21
	0x0327ABCC BL 0x327B930

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Compare X2, 0
	008 JumpIfEqual {62}
	009 Move X8, [X2+24]
	010 Move X20, X2
	011 Move X19, X1
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X21, X0
	014 Move X22, X31
	015 And X8, X8, 0
	016 Add X23, X20, 32
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move X1, [X23]
	019 Move X0, X21
	020 Call ConfigHandler.CheckPath, X0, X1
	021 Move TEMP, X0
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {54}
	025 Move W8, [X20+24]
	026 Add X22, X22, 1
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X0, 0xEAA000
	029 Move X0, [X0+4032]
	030 Call 0x1C17D08
	031 Move X20, X0
	032 Move X0, 0xEAA000
	033 Move X0, [X0+4040]
	034 Call 0x1C17D08
	035 Move X2, X0
	036 Move X0, X20
	037 Move X1, X19
	038 Move X3, X31
	039 Call String.Concat, X0, X1, X2
	040 Move X19, X0
	041 Move X0, 0xEAA000
	042 Move X0, [X0+3360]
	043 Call 0x1C17D08
	044 Call 0x1C17F10
	045 Move X1, X19
	046 Move X20, X0
	047 Call RemotingException..ctor, X0, X1
	048 Move X0, 0xEAA000
	049 Move X0, [X0+4048]
	050 Call 0x1C17D08
	051 Move X1, X0
	052 Move X0, X20
	053 Call 0x1C17DEC
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X30, [X31+48]
	059 Move X23, [X31+56]
	060 Return 
	061 Call 0x1C17F28
	062 Call 0x1C17F20

Method: System.Boolean CheckPath(System.String path)

Disassembly:
	0x0327ABD0 ADRP X8, 0xEA9000
	0x0327ABD4 LDR X8, [X8 + 0xDE0]
	0x0327ABD8 MOV X19, X0
	0x0327ABDC LDR X8, [X8]
	0x0327ABE0 LDR W9, [X8 + 0xE0]
	0x0327ABE4 CBNZ W9, 0x327ABF0
	0x0327ABE8 MOV X0, X8
	0x0327ABEC BL 0x1C16DFC
	0x0327ABF0 MOV X0, X19
	0x0327ABF4 LDP X20, X19, [X31 + 0x20]
	0x0327ABF8 LDP X22, X21, [X31 + 0x10]
	0x0327ABFC LDR X30, [X31], #0x30
	0x0327AC00 B 0x3276764
	0x0327AC04 ADRP X8, 0xEA8000
	0x0327AC08 LDR X8, [X8 + 0x1B8]
	0x0327AC0C LDR X21, [X8]
	0x0327AC10 LDR X8, [X21 + 0x38]
	0x0327AC14 CBNZ X8, 0x327AC24
	0x0327AC18 MOV X0, X21
	0x0327AC1C BL 0x1C5C6E0
	0x0327AC20 LDR X8, [X21 + 0x38]
	0x0327AC24 LDR X0, [X8 + 0x10]
	0x0327AC28 LDRB W8, [X0 + 0x135]
	0x0327AC2C TBNZ X8, 0x0, 0x327AC34
	0x0327AC30 BL 0x1C5C684
	0x0327AC34 LDR W8, [X0 + 0xE0]
	0x0327AC38 CBNZ W8, 0x327AC40
	0x0327AC3C BL 0x1C16DFC
	0x0327AC40 LDR X8, [X21 + 0x38]
	0x0327AC44 LDR X0, [X8 + 0x10]
	0x0327AC48 LDRB W8, [X0 + 0x135]
	0x0327AC4C TBNZ X8, 0x0, 0x327AC54
	0x0327AC50 BL 0x1C5C684
	0x0327AC54 LDR X8, [X0 + 0xB8]
	0x0327AC58 LDR X2, [X8]
	0x0327AC5C B 0x327A940
	0x0327AC60 ADRP X0, 0xEAA000
	0x0327AC64 LDR X0, [X0 + 0xC8]
	0x0327AC68 BL 0x1C16D08
	0x0327AC6C MOV X19, X0
	0x0327AC70 ADRP X0, 0xEAA000
	0x0327AC74 LDR X0, [X0 + 0xD0]
	0x0327AC78 BL 0x1C16D08
	0x0327AC7C MOV X2, X0
	0x0327AC80 MOV X0, X19
	0x0327AC84 MOV X1, X20
	0x0327AC88 MOV X3, X31
	0x0327AC8C BL 0x32274B8
	0x0327AC90 MOV X19, X0
	0x0327AC94 ADRP X0, 0xEA9000
	0x0327AC98 LDR X0, [X0 + 0xD20]
	0x0327AC9C BL 0x1C16D08
	0x0327ACA0 BL 0x1C16F10
	0x0327ACA4 MOV X1, X19
	0x0327ACA8 MOV X20, X0
	0x0327ACAC BL 0x3273098

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1163000
	007 Move X22, 0xE7C000
	008 Move W8, [X21+1517]
	009 Move X22, [X22+3144]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xE7C000
	017 Move X0, [X0+3144]
	018 Call 0x1C17CF4
	019 Move X0, 0xE7B000
	020 Move X0, [X0+3784]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+1517], W8
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X31
	030 Call CultureInfo.get_InvariantCulture
	031 Compare X0, 0
	032 JumpIfEqual {75}
	033 Move X8, [X0]
	034 Move X9, [X8+504]
	035 Move X1, [X8+512]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Compare X0, 0
	038 JumpIfEqual {75}
	039 Move X9, 0xE7B000
	040 Move X8, [X0]
	041 Move X9, [X9+3784]
	042 Move W3, 0x40000000
	043 Move X1, X19
	044 Move X21, X0
	045 Move X2, [X9]
	046 Move X9, [X8+456]
	047 Move X4, [X8+464]
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Move X1, [X20+64]
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {63}
	054 Move X0, X19
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 Move X2, X31
	060 Move X30, [X31+48]
	061 Call String.op_Equality, X0, X1
	062 Return X0
	063 Move X8, [X21]
	064 Move X0, X21
	065 Move X2, X19
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X5, [X8+472]
	069 Move X4, [X8+480]
	070 Move X22, [X31+16]
	071 Move X21, [X31+24]
	072 Move W3, 0x40000000
	073 Move X30, [X31+48]
	074 CallNoReturn X5
	075 Call 0x1C17F20

Method: System.Void OnStartParsing(Mono.Xml.SmallXmlParser parser)

Disassembly:
	0x0327ACB0 ADRP X0, 0xEAA000

ISIL:
	001 Return 

Method: System.Void OnProcessingInstruction(System.String name, System.String text)

Disassembly:
	0x0327ACB4 LDR X0, [X0 + 0xD8]

ISIL:
	001 Return 

Method: System.Void OnIgnorableWhitespace(System.String s)

Disassembly:
	0x0327ACB8 BL 0x1C16D08

ISIL:
	001 Return 

Method: System.Void OnStartElement(System.String name, Mono.Xml.SmallXmlParser/IAttrList attrs)

Disassembly:
	0x0327ACBC MOV X1, X0
	0x0327ACC0 MOV X0, X20
	0x0327ACC4 BL 0x1C16DEC
	0x0327ACC8 BL 0x1C16F20
	0x0327ACCC BL 0x1C16F28
	0x0327ACD0 MOV X3, X31
	0x0327ACD4 B 0x338C990
	0x0327ACD8 STP X29, X30, [X31 - 0x60]!
	0x0327ACDC STP X28, X27, [X31 + 0x10]
	0x0327ACE0 STP X26, X25, [X31 + 0x20]
	0x0327ACE4 STP X24, X23, [X31 + 0x30]
	0x0327ACE8 STP X22, X21, [X31 + 0x40]
	0x0327ACEC STP X20, X19, [X31 + 0x50]
	0x0327ACF0 ADRP X20, 0x1162000
	0x0327ACF4 LDRB W8, [X20 + 0x5F0]
	0x0327ACF8 MOV X21, X2
	0x0327ACFC MOV X23, X1
	0x0327AD00 MOV X19, X0
	0x0327AD04 TBNZ X8, 0x0, 0x327AD40
	0x0327AD08 ADRP X0, 0xEA7000
	0x0327AD0C LDR X0, [X0 + 0x8F8]
	0x0327AD10 BL 0x1C16CF4
	0x0327AD14 ADRP X0, 0xE79000
	0x0327AD18 LDR X0, [X0 + 0x818]
	0x0327AD1C BL 0x1C16CF4
	0x0327AD20 ADRP X0, 0xE80000
	0x0327AD24 LDR X0, [X0 + 0x2F8]
	0x0327AD28 BL 0x1C16CF4
	0x0327AD2C ADRP X0, 0xEA9000
	0x0327AD30 LDR X0, [X0 + 0xF00]
	0x0327AD34 BL 0x1C16CF4
	0x0327AD38 MOVZ W8, 0x1
	0x0327AD3C STRB W8, [X20 + 0x5F0]
	0x0327AD40 LDR X0, [X19 + 0x28]
	0x0327AD44 CBZ X0, 0x327B028
	0x0327AD48 LDR X8, [X0]
	0x0327AD4C ADRP X20, 0xEA9000
	0x0327AD50 LDR X9, [X8 + 0x248]
	0x0327AD54 LDR X1, [X8 + 0x250]
	0x0327AD58 LDR X20, [X20 + 0xF00]
	0x0327AD5C BLR X9
	0x0327AD60 LDR X1, [X20]
	0x0327AD64 MOV X22, X0
	0x0327AD68 CBZ X0, 0x327AD94
	0x0327AD6C LDR X8, [X22]
	0x0327AD70 LDRB W9, [X1 + 0x130]
	0x0327AD74 LDRB W10, [X8 + 0x130]
	0x0327AD78 CMP W10, W9
	0x0327AD7C B.CC 0x327B030
	0x0327AD80 LDR X8, [X8 + 0xC8]
	0x0327AD84 ADD X8, X8, X9, 0x3, LSL
	0x0327AD88 LDUR X8, [X8 - 0x8]
	0x0327AD8C CMP X8, X1
	0x0327AD90 B.NE 0x327B030
	0x0327AD94 MOV X0, X1
	0x0327AD98 BL 0x1C16F10
	0x0327AD9C MOV X1, X23
	0x0327ADA0 MOV X2, X31
	0x0327ADA4 MOV X20, X0
	0x0327ADA8 BL 0x328E67C
	0x0327ADAC CBZ X21, 0x327B028
	0x0327ADB0 ADRP X28, 0xEA7000
	0x0327ADB4 ADRP X29, 0xE79000
	0x0327ADB8 ADRP X27, 0xE80000
	0x0327ADBC LDR X28, [X28 + 0x8F8]
	0x0327ADC0 LDR X29, [X29 + 0x818]
	0x0327ADC4 LDR X27, [X27 + 0x2F8]
	0x0327ADC8 MOV X23, X31
	0x0327ADCC LDR X8, [X21]
	0x0327ADD0 LDR X1, [X28]
	0x0327ADD4 LDRH W9, [X8 + 0x12E]
	0x0327ADD8 CBZ X9, 0x327ADFC
	0x0327ADDC LDR X10, [X8 + 0xB0]
	0x0327ADE0 ADD X10, X10, 0x8
	0x0327ADE4 LDUR X11, [X10 - 0x8]
	0x0327ADE8 CMP X11, X1
	0x0327ADEC B.EQ 0x327AE0C
	0x0327ADF0 SUBS X9, X9, 0x1
	0x0327ADF4 ADD X10, X10, 0x10
	0x0327ADF8 B.NE 0x327ADE4
	0x0327ADFC MOVZ W2, 0x4
	0x0327AE00 MOV X0, X21
	0x0327AE04 BL 0x1C5C788
	0x0327AE08 B 0x327AE1C
	0x0327AE0C LDR W9, [X10]
	0x0327AE10 ADD W9, W9, 0x4
	0x0327AE14 ADD X8, X8, W9, 0x4, SXTW
	0x0327AE18 ADD X0, X8, 0x138
	0x0327AE1C LDP X8, X1, [X0]
	0x0327AE20 MOV X0, X21
	0x0327AE24 BLR X8
	0x0327AE28 CBZ X0, 0x327B028
	0x0327AE2C LDRSW X8, [X0 + 0x18]
	0x0327AE30 CMP X23, X8
	0x0327AE34 B.GE 0x327AF88
	0x0327AE38 CBZ X20, 0x327B028
	0x0327AE3C LDR X8, [X21]
	0x0327AE40 LDR X24, [X20 + 0x20]
	0x0327AE44 LDR X1, [X28]
	0x0327AE48 LDRH W9, [X8 + 0x12E]
	0x0327AE4C CBZ X9, 0x327AE70
	0x0327AE50 LDR X10, [X8 + 0xB0]
	0x0327AE54 ADD X10, X10, 0x8
	0x0327AE58 LDUR X11, [X10 - 0x8]
	0x0327AE5C CMP X11, X1
	0x0327AE60 B.EQ 0x327AE80
	0x0327AE64 SUBS X9, X9, 0x1
	0x0327AE68 ADD X10, X10, 0x10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1163000
	007 Move W8, [X22+1518]
	008 Move X21, X2
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xE7B000
	016 Move X0, [X0+3784]
	017 Call 0x1C17CF4
	018 Move X0, 0xEAA000
	019 Move X0, [X0+4056]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+1518], W8
	023 Move X0, [X20+64]
	024 Compare X0, 0
	025 JumpIfEqual {53}
	026 Move X8, 0xEAA000
	027 Move X8, [X8+4056]
	028 Move X1, [X8]
	029 Move X2, X31
	030 Call String.StartsWith, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {39}
	035 Move X0, X20
	036 Move X1, X19
	037 Move X2, X21
	038 Call ConfigHandler.ParseElement, X0, X1, X2
	039 Move X8, 0xE7B000
	040 Move X8, [X8+3784]
	041 Move X0, [X20+64]
	042 Move X1, [X8]
	043 Move X2, X19
	044 Move X3, X31
	045 Call String.Concat, X0, X1, X2
	046 Move [X20+64], X0
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move X30, [X31+48]
	052 Return 
	053 Call 0x1C17F20
	054 Move X20, X0
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X0, X20
	057 Call 0x3EB2AD0
	058 Move X20, X0
	059 Move X0, 0xE7A000
	060 Move X0, [X0+2000]
	061 Call 0x1C17D08
	062 Move X8, [X20]
	063 Move X1, [X8]
	064 Call 0x1C18270
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {107}
	069 Move X20, [X20]
	070 Call 0x3EB2AE0
	071 Move X0, X20
	072 Call 0x19913C0
	073 Move X8, [X20]
	074 Move X0, X20
	075 Move X9, [X8+392]
	076 Move X1, [X8+400]
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Move X21, X0
	079 Move X0, 0xEAA000
	080 Move X0, [X0+4064]
	081 Call 0x1C17D08
	082 Move X22, X0
	083 Move X0, 0xE7E000
	084 Move X0, [X0+2344]
	085 Call 0x1C17D08
	086 Move X2, X0
	087 Move X0, X22
	088 Move X1, X19
	089 Move X3, X21
	090 Move X4, X31
	091 Call String.Concat, X0, X1, X2, X3
	092 Move X19, X0
	093 Move X0, 0xEAA000
	094 Move X0, [X0+3360]
	095 Call 0x1C17D08
	096 Call 0x1C17F10
	097 Move X1, X19
	098 Move X2, X20
	099 Move X21, X0
	100 Call RemotingException..ctor, X0, X1, X2
	101 Move X0, 0xEAA000
	102 Move X0, [X0+4072]
	103 Call 0x1C17D08
	104 Move X1, X0
	105 Move X0, X21
	106 Call 0x1C17DEC
	107 Move W0, 8
	108 Call 0x3EB2AF0
	109 Move X8, [X20]
	110 Move [X0], X8
	111 Move X1, 0xC3B000
	112 Add X1, X1, 3672
	113 Move X2, X31
	114 Call 0x3EB2B00
	115 Move X20, X0
	116 Call 0x3EB2AE0
	117 Move X0, X20
	118 Call 0x1D2D690
	119 Call 0x1991590

Method: System.Void ParseElement(System.String name, Mono.Xml.SmallXmlParser/IAttrList attrs)

Disassembly:
	0x0327AE6C B.NE 0x327AE58
	0x0327AE70 MOVZ W2, 0x4
	0x0327AE74 MOV X0, X21
	0x0327AE78 BL 0x1C5C788
	0x0327AE7C B 0x327AE90
	0x0327AE80 LDR W9, [X10]
	0x0327AE84 ADD W9, W9, 0x4
	0x0327AE88 ADD X8, X8, W9, 0x4, SXTW
	0x0327AE8C ADD X0, X8, 0x138
	0x0327AE90 LDP X8, X1, [X0]
	0x0327AE94 MOV X0, X21
	0x0327AE98 BLR X8
	0x0327AE9C CBZ X0, 0x327B028
	0x0327AEA0 LDR W8, [X0 + 0x18]
	0x0327AEA4 CMP X23, X8
	0x0327AEA8 B.CS 0x327B02C
	0x0327AEAC LDR X8, [X21]
	0x0327AEB0 ADD X9, X0, X23, 0x3, LSL
	0x0327AEB4 LDR X25, [X9 + 0x20]
	0x0327AEB8 LDR X1, [X28]
	0x0327AEBC LDRH W9, [X8 + 0x12E]
	0x0327AEC0 CBZ X9, 0x327AEE4
	0x0327AEC4 LDR X10, [X8 + 0xB0]
	0x0327AEC8 ADD X10, X10, 0x8
	0x0327AECC LDUR X11, [X10 - 0x8]
	0x0327AED0 CMP X11, X1
	0x0327AED4 B.EQ 0x327AEF4
	0x0327AED8 SUBS X9, X9, 0x1
	0x0327AEDC ADD X10, X10, 0x10
	0x0327AEE0 B.NE 0x327AECC
	0x0327AEE4 MOVZ W2, 0x2
	0x0327AEE8 MOV X0, X21
	0x0327AEEC BL 0x1C5C788
	0x0327AEF0 B 0x327AF04
	0x0327AEF4 LDR W9, [X10]
	0x0327AEF8 ADD W9, W9, 0x2
	0x0327AEFC ADD X8, X8, W9, 0x4, SXTW
	0x0327AF00 ADD X0, X8, 0x138
	0x0327AF04 LDP X8, X2, [X0]
	0x0327AF08 MOV X0, X21
	0x0327AF0C MOV W1, W23
	0x0327AF10 BLR X8
	0x0327AF14 CBZ X24, 0x327B028
	0x0327AF18 LDR X8, [X24]
	0x0327AF1C LDR X1, [X29]
	0x0327AF20 MOV X26, X0
	0x0327AF24 LDRH W9, [X8 + 0x12E]
	0x0327AF28 CBZ X9, 0x327AF4C
	0x0327AF2C LDR X10, [X8 + 0xB0]
	0x0327AF30 ADD X10, X10, 0x8
	0x0327AF34 LDUR X11, [X10 - 0x8]
	0x0327AF38 CMP X11, X1
	0x0327AF3C B.EQ 0x327AF5C
	0x0327AF40 SUBS X9, X9, 0x1
	0x0327AF44 ADD X10, X10, 0x10
	0x0327AF48 B.NE 0x327AF34
	0x0327AF4C MOVZ W2, 0x1
	0x0327AF50 MOV X0, X24
	0x0327AF54 BL 0x1C5C788
	0x0327AF58 B 0x327AF6C
	0x0327AF5C LDR W9, [X10]
	0x0327AF60 ADD W9, W9, 0x1
	0x0327AF64 ADD X8, X8, W9, 0x4, SXTW
	0x0327AF68 ADD X0, X8, 0x138
	0x0327AF6C LDP X8, X3, [X0]
	0x0327AF70 MOV X0, X24
	0x0327AF74 MOV X1, X25
	0x0327AF78 MOV X2, X26
	0x0327AF7C BLR X8
	0x0327AF80 ADD X23, X23, 0x1
	0x0327AF84 B 0x327ADCC
	0x0327AF88 CBZ X22, 0x327B028
	0x0327AF8C LDR X21, [X22 + 0x18]
	0x0327AF90 CBZ X21, 0x327B028
	0x0327AF94 LDR X8, [X21]
	0x0327AF98 LDR X1, [X27]
	0x0327AF9C LDRH W9, [X8 + 0x12E]
	0x0327AFA0 CBZ X9, 0x327AFC4
	0x0327AFA4 LDR X10, [X8 + 0xB0]
	0x0327AFA8 ADD X10, X10, 0x8
	0x0327AFAC LDUR X11, [X10 - 0x8]
	0x0327AFB0 CMP X11, X1
	0x0327AFB4 B.EQ 0x327AFD4
	0x0327AFB8 SUBS X9, X9, 0x1
	0x0327AFBC ADD X10, X10, 0x10
	0x0327AFC0 B.NE 0x327AFAC
	0x0327AFC4 MOVZ W2, 0x2
	0x0327AFC8 MOV X0, X21
	0x0327AFCC BL 0x1C5C788
	0x0327AFD0 B 0x327AFE4
	0x0327AFD4 LDR W9, [X10]
	0x0327AFD8 ADD W9, W9, 0x2
	0x0327AFDC ADD X8, X8, W9, 0x4, SXTW
	0x0327AFE0 ADD X0, X8, 0x138
	0x0327AFE4 LDP X8, X2, [X0]
	0x0327AFE8 MOV X0, X21
	0x0327AFEC MOV X1, X20
	0x0327AFF0 BLR X8
	0x0327AFF4 LDR X0, [X19 + 0x28]
	0x0327AFF8 CBZ X0, 0x327B028
	0x0327AFFC LDR X8, [X0]
	0x0327B000 MOV X1, X20
	0x0327B004 LDP X20, X19, [X31 + 0x50]
	0x0327B008 LDP X22, X21, [X31 + 0x40]
	0x0327B00C LDR X3, [X8 + 0x268]
	0x0327B010 LDR X2, [X8 + 0x270]
	0x0327B014 LDP X24, X23, [X31 + 0x30]
	0x0327B018 LDP X26, X25, [X31 + 0x20]
	0x0327B01C LDP X28, X27, [X31 + 0x10]
	0x0327B020 LDP X29, X30, [X31], #0x60
	0x0327B024 BR X3
	0x0327B028 BL 0x1C16F20
	0x0327B02C BL 0x1C16F28
	0x0327B030 MOV X0, X22
	0x0327B034 BL 0x1C171E0
	0x0327B038 STP X29, X30, [X31 - 0x60]!
	0x0327B03C STP X28, X27, [X31 + 0x10]
	0x0327B040 STP X26, X25, [X31 + 0x20]
	0x0327B044 STP X24, X23, [X31 + 0x30]
	0x0327B048 STP X22, X21, [X31 + 0x40]
	0x0327B04C STP X20, X19, [X31 + 0x50]
	0x0327B050 ADRP X20, 0x1161000
	0x0327B054 LDRB W8, [X20 + 0x5F1]
	0x0327B058 MOV X19, X1
	0x0327B05C TBNZ X8, 0x0, 0x327B0B0
	0x0327B060 ADRP X0, 0xEA6000
	0x0327B064 LDR X0, [X0 + 0x8F8]
	0x0327B068 BL 0x1C16CF4
	0x0327B06C ADRP X0, 0xEA9000
	0x0327B070 LDR X0, [X0 + 0xE0]
	0x0327B074 BL 0x1C16CF4
	0x0327B078 ADRP X0, 0xEA9000
	0x0327B07C LDR X0, [X0 + 0xE8]
	0x0327B080 BL 0x1C16CF4
	0x0327B084 ADRP X0, 0xEA9000
	0x0327B088 LDR X0, [X0 + 0xF0]
	0x0327B08C BL 0x1C16CF4
	0x0327B090 ADRP X0, 0xEA9000
	0x0327B094 LDR X0, [X0 + 0xF8]
	0x0327B098 BL 0x1C16CF4
	0x0327B09C ADRP X0, 0xEA9000
	0x0327B0A0 LDR X0, [X0 + 0x100]
	0x0327B0A4 BL 0x1C16CF4
	0x0327B0A8 MOVZ W8, 0x1
	0x0327B0AC STRB W8, [X20 + 0x5F1]
	0x0327B0B0 CBZ X19, 0x327B4F4
	0x0327B0B4 ADRP X23, 0xEA6000
	0x0327B0B8 ADRP X24, 0xEA9000
	0x0327B0BC ADRP X21, 0xEA9000
	0x0327B0C0 ADRP X25, 0xEA9000
	0x0327B0C4 ADRP X26, 0xEA9000
	0x0327B0C8 LDR X23, [X23 + 0x8F8]
	0x0327B0CC LDR X24, [X24 + 0x100]
	0x0327B0D0 LDR X21, [X21 + 0xE0]
	0x0327B0D4 LDR X25, [X25 + 0xE8]
	0x0327B0D8 LDR X26, [X26 + 0xF0]
	0x0327B0DC MOV X20, X31
	0x0327B0E0 ADRP X28, 0x1161000
	0x0327B0E4 MOVZ W29, 0x1
	0x0327B0E8 ADRP X27, 0x1161000
	0x0327B0EC LDR X8, [X19]
	0x0327B0F0 LDR X1, [X23]
	0x0327B0F4 LDRH W9, [X8 + 0x12E]
	0x0327B0F8 CBZ X9, 0x327B11C
	0x0327B0FC LDR X10, [X8 + 0xB0]
	0x0327B100 ADD X10, X10, 0x8
	0x0327B104 LDUR X11, [X10 - 0x8]
	0x0327B108 CMP X11, X1
	0x0327B10C B.EQ 0x327B12C
	0x0327B110 SUBS X9, X9, 0x1
	0x0327B114 ADD X10, X10, 0x10
	0x0327B118 B.NE 0x327B104
	0x0327B11C MOVZ W2, 0x4
	0x0327B120 MOV X0, X19
	0x0327B124 BL 0x1C5C788
	0x0327B128 B 0x327B13C
	0x0327B12C LDR W9, [X10]
	0x0327B130 ADD W9, W9, 0x4
	0x0327B134 ADD X8, X8, W9, 0x4, SXTW
	0x0327B138 ADD X0, X8, 0x138
	0x0327B13C LDP X8, X1, [X0]
	0x0327B140 MOV X0, X19
	0x0327B144 BLR X8
	0x0327B148 CBZ X0, 0x327B4F4
	0x0327B14C LDRSW X8, [X0 + 0x18]
	0x0327B150 CMP X20, X8
	0x0327B154 B.GE 0x327B4D8
	0x0327B158 LDR X8, [X19]
	0x0327B15C LDR X1, [X23]
	0x0327B160 LDRH W9, [X8 + 0x12E]
	0x0327B164 CBZ X9, 0x327B188
	0x0327B168 LDR X10, [X8 + 0xB0]
	0x0327B16C ADD X10, X10, 0x8
	0x0327B170 LDUR X11, [X10 - 0x8]
	0x0327B174 CMP X11, X1
	0x0327B178 B.EQ 0x327B198
	0x0327B17C SUBS X9, X9, 0x1
	0x0327B180 ADD X10, X10, 0x10
	0x0327B184 B.NE 0x327B170
	0x0327B188 MOVZ W2, 0x4
	0x0327B18C MOV X0, X19
	0x0327B190 BL 0x1C5C788
	0x0327B194 B 0x327B1A8
	0x0327B198 LDR W9, [X10]
	0x0327B19C ADD W9, W9, 0x4
	0x0327B1A0 ADD X8, X8, W9, 0x4, SXTW
	0x0327B1A4 ADD X0, X8, 0x138
	0x0327B1A8 LDP X8, X1, [X0]
	0x0327B1AC MOV X0, X19
	0x0327B1B0 BLR X8
	0x0327B1B4 CBZ X0, 0x327B4F4
	0x0327B1B8 LDR W8, [X0 + 0x18]
	0x0327B1BC CMP X20, X8
	0x0327B1C0 B.CS 0x327B4F8
	0x0327B1C4 ADD X8, X0, X20, 0x3, LSL
	0x0327B1C8 LDR X22, [X8 + 0x20]
	0x0327B1CC LDR X1, [X24]
	0x0327B1D0 MOV X2, X31
	0x0327B1D4 MOV X0, X22
	0x0327B1D8 BL 0x321BA08
	0x0327B1DC TBZ X0, 0x0, 0x327B220
	0x0327B1E0 LDR X8, [X19]
	0x0327B1E4 LDR X1, [X23]
	0x0327B1E8 LDRH W9, [X8 + 0x12E]
	0x0327B1EC CBZ X9, 0x327B210
	0x0327B1F0 LDR X10, [X8 + 0xB0]
	0x0327B1F4 ADD X10, X10, 0x8
	0x0327B1F8 LDUR X11, [X10 - 0x8]
	0x0327B1FC CMP X11, X1
	0x0327B200 B.EQ 0x327B2C8
	0x0327B204 SUBS X9, X9, 0x1
	0x0327B208 ADD X10, X10, 0x10
	0x0327B20C B.NE 0x327B1F8
	0x0327B210 MOVZ W2, 0x2
	0x0327B214 MOV X0, X19
	0x0327B218 BL 0x1C5C788
	0x0327B21C B 0x327B2D8
	0x0327B220 LDR X1, [X25]
	0x0327B224 MOV X0, X22
	0x0327B228 MOV X2, X31
	0x0327B22C BL 0x321BA08
	0x0327B230 TBZ X0, 0x0, 0x327B274
	0x0327B234 LDR X8, [X19]
	0x0327B238 LDR X1, [X23]
	0x0327B23C LDRH W9, [X8 + 0x12E]
	0x0327B240 CBZ X9, 0x327B264
	0x0327B244 LDR X10, [X8 + 0xB0]
	0x0327B248 ADD X10, X10, 0x8
	0x0327B24C LDUR X11, [X10 - 0x8]
	0x0327B250 CMP X11, X1
	0x0327B254 B.EQ 0x327B398
	0x0327B258 SUBS X9, X9, 0x1
	0x0327B25C ADD X10, X10, 0x10
	0x0327B260 B.NE 0x327B24C
	0x0327B264 MOVZ W2, 0x2
	0x0327B268 MOV X0, X19
	0x0327B26C BL 0x1C5C788
	0x0327B270 B 0x327B3A8
	0x0327B274 LDR X1, [X26]
	0x0327B278 MOV X0, X22
	0x0327B27C MOV X2, X31
	0x0327B280 BL 0x321BA08
	0x0327B284 TBZ X0, 0x0, 0x327B33C
	0x0327B288 LDR X8, [X19]
	0x0327B28C LDR X1, [X23]
	0x0327B290 LDRH W9, [X8 + 0x12E]
	0x0327B294 CBZ X9, 0x327B2B8
	0x0327B298 LDR X10, [X8 + 0xB0]
	0x0327B29C ADD X10, X10, 0x8
	0x0327B2A0 LDUR X11, [X10 - 0x8]
	0x0327B2A4 CMP X11, X1
	0x0327B2A8 B.EQ 0x327B40C
	0x0327B2AC SUBS X9, X9, 0x1
	0x0327B2B0 ADD X10, X10, 0x10
	0x0327B2B4 B.NE 0x327B2A0
	0x0327B2B8 MOVZ W2, 0x2
	0x0327B2BC MOV X0, X19
	0x0327B2C0 BL 0x1C5C788
	0x0327B2C4 B 0x327B41C
	0x0327B2C8 LDR W9, [X10]
	0x0327B2CC ADD W9, W9, 0x2
	0x0327B2D0 ADD X8, X8, W9, 0x4, SXTW
	0x0327B2D4 ADD X0, X8, 0x138
	0x0327B2D8 LDP X8, X2, [X0]
	0x0327B2DC MOV X0, X19
	0x0327B2E0 MOV W1, W20
	0x0327B2E4 BLR X8
	0x0327B2E8 MOV X1, X0
	0x0327B2EC BL 0x327C66C
	0x0327B2F0 LDR X8, [X21]
	0x0327B2F4 MOV X22, X0
	0x0327B2F8 LDR W9, [X8 + 0xE0]
	0x0327B2FC CBNZ W9, 0x327B308
	0x0327B300 MOV X0, X8
	0x0327B304 BL 0x1C16DFC
	0x0327B308 LDRB W8, [X28 + 0x6B3]
	0x0327B30C CBNZ W8, 0x327B31C
	0x0327B310 MOV X0, X21
	0x0327B314 BL 0x1C16CF4
	0x0327B318 STRB W29, [X28 + 0x6B3]
	0x0327B31C LDR X0, [X21]
	0x0327B320 LDR W8, [X0 + 0xE0]
	0x0327B324 CBNZ W8, 0x327B330
	0x0327B328 BL 0x1C16DFC
	0x0327B32C LDR X0, [X21]
	0x0327B330 LDR X8, [X0 + 0xB8]
	0x0327B334 STR X22, [X8 + 0x8]
	0x0327B338 B 0x327B4D0
	0x0327B33C ADRP X8, 0xEA9000
	0x0327B340 LDR X8, [X8 + 0xF8]
	0x0327B344 MOV X0, X22
	0x0327B348 MOV X2, X31
	0x0327B34C LDR X1, [X8]
	0x0327B350 BL 0x321BA08
	0x0327B354 TBZ X0, 0x0, 0x327B4FC
	0x0327B358 LDR X8, [X19]
	0x0327B35C LDR X1, [X23]
	0x0327B360 LDRH W9, [X8 + 0x12E]
	0x0327B364 CBZ X9, 0x327B388
	0x0327B368 LDR X10, [X8 + 0xB0]
	0x0327B36C ADD X10, X10, 0x8
	0x0327B370 LDUR X11, [X10 - 0x8]
	0x0327B374 CMP X11, X1
	0x0327B378 B.EQ 0x327B488
	0x0327B37C SUBS X9, X9, 0x1
	0x0327B380 ADD X10, X10, 0x10
	0x0327B384 B.NE 0x327B370
	0x0327B388 MOVZ W2, 0x2
	0x0327B38C MOV X0, X19
	0x0327B390 BL 0x1C5C788
	0x0327B394 B 0x327B498
	0x0327B398 LDR W9, [X10]
	0x0327B39C ADD W9, W9, 0x2
	0x0327B3A0 ADD X8, X8, W9, 0x4, SXTW
	0x0327B3A4 ADD X0, X8, 0x138
	0x0327B3A8 LDP X8, X2, [X0]
	0x0327B3AC MOV X0, X19
	0x0327B3B0 MOV W1, W20
	0x0327B3B4 BLR X8
	0x0327B3B8 MOV X1, X0
	0x0327B3BC BL 0x327C66C
	0x0327B3C0 LDR X8, [X21]
	0x0327B3C4 MOV X22, X0
	0x0327B3C8 LDR W9, [X8 + 0xE0]
	0x0327B3CC CBNZ W9, 0x327B3D8
	0x0327B3D0 MOV X0, X8
	0x0327B3D4 BL 0x1C16DFC
	0x0327B3D8 LDRB W8, [X27 + 0x6B4]
	0x0327B3DC CBNZ W8, 0x327B3EC
	0x0327B3E0 MOV X0, X21
	0x0327B3E4 BL 0x1C16CF4
	0x0327B3E8 STRB W29, [X27 + 0x6B4]
	0x0327B3EC LDR X0, [X21]
	0x0327B3F0 LDR W8, [X0 + 0xE0]
	0x0327B3F4 CBNZ W8, 0x327B400
	0x0327B3F8 BL 0x1C16DFC
	0x0327B3FC LDR X0, [X21]
	0x0327B400 LDR X8, [X0 + 0xB8]
	0x0327B404 STR X22, [X8 + 0x18]
	0x0327B408 B 0x327B4D0
	0x0327B40C LDR W9, [X10]
	0x0327B410 ADD W9, W9, 0x2
	0x0327B414 ADD X8, X8, W9, 0x4, SXTW
	0x0327B418 ADD X0, X8, 0x138
	0x0327B41C LDP X8, X2, [X0]
	0x0327B420 MOV X0, X19
	0x0327B424 MOV W1, W20
	0x0327B428 BLR X8
	0x0327B42C MOV X1, X0
	0x0327B430 BL 0x327C66C
	0x0327B434 LDR X8, [X21]
	0x0327B438 MOV X22, X0
	0x0327B43C LDR W9, [X8 + 0xE0]
	0x0327B440 CBNZ W9, 0x327B44C
	0x0327B444 MOV X0, X8
	0x0327B448 BL 0x1C16DFC
	0x0327B44C ADRP X8, 0x1161000
	0x0327B450 LDRB W8, [X8 + 0x6B5]
	0x0327B454 CBNZ W8, 0x327B468
	0x0327B458 MOV X0, X21
	0x0327B45C BL 0x1C16CF4
	0x0327B460 ADRP X8, 0x1161000
	0x0327B464 STRB W29, [X8 + 0x6B5]
	0x0327B468 LDR X0, [X21]
	0x0327B46C LDR W8, [X0 + 0xE0]
	0x0327B470 CBNZ W8, 0x327B47C
	0x0327B474 BL 0x1C16DFC
	0x0327B478 LDR X0, [X21]
	0x0327B47C LDR X8, [X0 + 0xB8]
	0x0327B480 STR X22, [X8 + 0x10]
	0x0327B484 B 0x327B4D0
	0x0327B488 LDR W9, [X10]
	0x0327B48C ADD W9, W9, 0x2
	0x0327B490 ADD X8, X8, W9, 0x4, SXTW
	0x0327B494 ADD X0, X8, 0x138
	0x0327B498 LDP X8, X2, [X0]
	0x0327B49C MOV X0, X19
	0x0327B4A0 MOV W1, W20
	0x0327B4A4 BLR X8
	0x0327B4A8 MOV X1, X0
	0x0327B4AC BL 0x327C66C
	0x0327B4B0 LDR X8, [X21]
	0x0327B4B4 MOV X22, X0
	0x0327B4B8 LDR W9, [X8 + 0xE0]
	0x0327B4BC CBNZ W9, 0x327B4C8
	0x0327B4C0 MOV X0, X8
	0x0327B4C4 BL 0x1C16DFC
	0x0327B4C8 MOV X0, X22
	0x0327B4CC BL 0x327CA40
	0x0327B4D0 ADD X20, X20, 0x1
	0x0327B4D4 B 0x327B0EC
	0x0327B4D8 LDP X20, X19, [X31 + 0x50]
	0x0327B4DC LDP X22, X21, [X31 + 0x40]
	0x0327B4E0 LDP X24, X23, [X31 + 0x30]
	0x0327B4E4 LDP X26, X25, [X31 + 0x20]
	0x0327B4E8 LDP X28, X27, [X31 + 0x10]
	0x0327B4EC LDP X29, X30, [X31], #0x60
	0x0327B4F0 RET
	0x0327B4F4 BL 0x1C16F20
	0x0327B4F8 BL 0x1C16F28
	0x0327B4FC ADRP X0, 0xEA6000
	0x0327B500 LDR X0, [X0 + 0x8F8]
	0x0327B504 BL 0x1C16D08
	0x0327B508 MOV X1, X0
	0x0327B50C MOVZ W0, 0x4
	0x0327B510 MOV X2, X19
	0x0327B514 BL 0x19963F0
	0x0327B518 MOV X19, X0
	0x0327B51C BL 0x19903C0
	0x0327B520 MOV X0, X19
	0x0327B524 MOV X1, X20
	0x0327B528 BL 0x1BB5160
	0x0327B52C MOV X19, X0
	0x0327B530 ADRP X0, 0xEA9000
	0x0327B534 LDR X0, [X0 + 0x108]
	0x0327B538 BL 0x1C16D08
	0x0327B53C MOV X1, X19
	0x0327B540 MOV X2, X31
	0x0327B544 BL 0x321B938
	0x0327B548 MOV X19, X0
	0x0327B54C ADRP X0, 0xEA8000
	0x0327B550 LDR X0, [X0 + 0xD20]
	0x0327B554 BL 0x1C16D08
	0x0327B558 BL 0x1C16F10
	0x0327B55C MOV X1, X19
	0x0327B560 MOV X20, X0
	0x0327B564 BL 0x3273098
	0x0327B568 ADRP X0, 0xEA9000
	0x0327B56C LDR X0, [X0 + 0x110]
	0x0327B570 BL 0x1C16D08
	0x0327B574 MOV X1, X0
	0x0327B578 MOV X0, X20
	0x0327B57C BL 0x1C16DEC
	0x0327B580 SUB X31, X31, 0x70
	0x0327B584 STP X29, X30, [X31 + 0x10]
	0x0327B588 STP X28, X27, [X31 + 0x20]
	0x0327B58C STP X26, X25, [X31 + 0x30]
	0x0327B590 STP X24, X23, [X31 + 0x40]
	0x0327B594 STP X22, X21, [X31 + 0x50]
	0x0327B598 STP X20, X19, [X31 + 0x60]
	0x0327B59C STR X0, [X31 + 0x8]
	0x0327B5A0 ADRP X19, 0x1161000
	0x0327B5A4 ADRP X22, 0xEA8000
	0x0327B5A8 LDRB W8, [X19 + 0x5F3]
	0x0327B5AC LDR X22, [X22 + 0xED0]
	0x0327B5B0 MOV W20, W2
	0x0327B5B4 MOV X21, X1
	0x0327B5B8 TBNZ X8, 0x0, 0x327B618
	0x0327B5BC ADRP X0, 0xEA8000
	0x0327B5C0 LDR X0, [X0 + 0xED0]
	0x0327B5C4 BL 0x1C16CF4
	0x0327B5C8 ADRP X0, 0xEA6000
	0x0327B5CC LDR X0, [X0 + 0x8F8]
	0x0327B5D0 BL 0x1C16CF4
	0x0327B5D4 ADRP X0, 0xEA8000
	0x0327B5D8 LDR X0, [X0 + 0xDE0]
	0x0327B5DC BL 0x1C16CF4
	0x0327B5E0 ADRP X0, 0xEA9000
	0x0327B5E4 LDR X0, [X0 + 0x118]
	0x0327B5E8 BL 0x1C16CF4
	0x0327B5EC ADRP X0, 0xE7A000
	0x0327B5F0 LDR X0, [X0 + 0xC10]
	0x0327B5F4 BL 0x1C16CF4
	0x0327B5F8 ADRP X0, 0xEA9000
	0x0327B5FC LDR X0, [X0 + 0x120]
	0x0327B600 BL 0x1C16CF4
	0x0327B604 ADRP X0, 0xE80000
	0x0327B608 LDR X0, [X0 + 0x5E8]
	0x0327B60C BL 0x1C16CF4
	0x0327B610 MOVZ W8, 0x1
	0x0327B614 STRB W8, [X19 + 0x5F3]
	0x0327B618 LDR X0, [X22]
	0x0327B61C BL 0x1C16F10
	0x0327B620 MOV X22, X0
	0x0327B624 BL 0x327CAB4
	0x0327B628 CBZ X21, 0x327B8E4
	0x0327B62C ADRP X26, 0xEA6000
	0x0327B630 ADRP X27, 0xEA9000
	0x0327B634 ADRP X28, 0xEA9000
	0x0327B638 ADRP X29, 0xE7A000
	0x0327B63C ADRP X19, 0xE80000
	0x0327B640 LDR X26, [X26 + 0x8F8]
	0x0327B644 LDR X27, [X27 + 0x118]
	0x0327B648 LDR X28, [X28 + 0x120]
	0x0327B64C LDR X29, [X29 + 0xC10]
	0x0327B650 LDR X19, [X19 + 0x5E8]
	0x0327B654 MOV X25, X31
	0x0327B658 LDR X8, [X21]
	0x0327B65C LDR X1, [X26]
	0x0327B660 LDRH W9, [X8 + 0x12E]
	0x0327B664 CBZ X9, 0x327B688
	0x0327B668 LDR X10, [X8 + 0xB0]
	0x0327B66C ADD X10, X10, 0x8
	0x0327B670 LDUR X11, [X10 - 0x8]
	0x0327B674 CMP X11, X1
	0x0327B678 B.EQ 0x327B698
	0x0327B67C SUBS X9, X9, 0x1
	0x0327B680 ADD X10, X10, 0x10
	0x0327B684 B.NE 0x327B670
	0x0327B688 MOVZ W2, 0x4
	0x0327B68C MOV X0, X21
	0x0327B690 BL 0x1C5C788
	0x0327B694 B 0x327B6A8
	0x0327B698 LDR W9, [X10]
	0x0327B69C ADD W9, W9, 0x4
	0x0327B6A0 ADD X8, X8, W9, 0x4, SXTW
	0x0327B6A4 ADD X0, X8, 0x138
	0x0327B6A8 LDP X8, X1, [X0]
	0x0327B6AC MOV X0, X21
	0x0327B6B0 BLR X8
	0x0327B6B4 CBZ X0, 0x327B8E4
	0x0327B6B8 LDRSW X8, [X0 + 0x18]
	0x0327B6BC CMP X25, X8
	0x0327B6C0 B.GE 0x327B860
	0x0327B6C4 LDR X8, [X21]
	0x0327B6C8 LDR X1, [X26]
	0x0327B6CC LDRH W9, [X8 + 0x12E]
	0x0327B6D0 CBZ X9, 0x327B6F4
	0x0327B6D4 LDR X10, [X8 + 0xB0]
	0x0327B6D8 ADD X10, X10, 0x8
	0x0327B6DC LDUR X11, [X10 - 0x8]
	0x0327B6E0 CMP X11, X1
	0x0327B6E4 B.EQ 0x327B704
	0x0327B6E8 SUBS X9, X9, 0x1
	0x0327B6EC ADD X10, X10, 0x10
	0x0327B6F0 B.NE 0x327B6DC
	0x0327B6F4 MOVZ W2, 0x4
	0x0327B6F8 MOV X0, X21
	0x0327B6FC BL 0x1C5C788
	0x0327B700 B 0x327B714
	0x0327B704 LDR W9, [X10]
	0x0327B708 ADD W9, W9, 0x4
	0x0327B70C ADD X8, X8, W9, 0x4, SXTW
	0x0327B710 ADD X0, X8, 0x138
	0x0327B714 LDP X8, X1, [X0]
	0x0327B718 MOV X0, X21
	0x0327B71C BLR X8
	0x0327B720 CBZ X0, 0x327B8E4
	0x0327B724 LDR W8, [X0 + 0x18]
	0x0327B728 CMP X25, X8
	0x0327B72C B.CS 0x327B8E8
	0x0327B730 LDR X8, [X21]
	0x0327B734 ADD X9, X0, X25, 0x3, LSL
	0x0327B738 LDR X23, [X9 + 0x20]
	0x0327B73C LDR X1, [X26]
	0x0327B740 LDRH W9, [X8 + 0x12E]
	0x0327B744 CBZ X9, 0x327B768
	0x0327B748 LDR X10, [X8 + 0xB0]
	0x0327B74C ADD X10, X10, 0x8
	0x0327B750 LDUR X11, [X10 - 0x8]
	0x0327B754 CMP X11, X1
	0x0327B758 B.EQ 0x327B778
	0x0327B75C SUBS X9, X9, 0x1
	0x0327B760 ADD X10, X10, 0x10
	0x0327B764 B.NE 0x327B750
	0x0327B768 MOVZ W2, 0x5
	0x0327B76C MOV X0, X21
	0x0327B770 BL 0x1C5C788
	0x0327B774 B 0x327B788
	0x0327B778 LDR W9, [X10]
	0x0327B77C ADD W9, W9, 0x5
	0x0327B780 ADD X8, X8, W9, 0x4, SXTW
	0x0327B784 ADD X0, X8, 0x138
	0x0327B788 LDP X8, X1, [X0]
	0x0327B78C MOV X0, X21
	0x0327B790 BLR X8
	0x0327B794 CBZ X0, 0x327B8E4
	0x0327B798 LDR W8, [X0 + 0x18]
	0x0327B79C CMP X25, X8
	0x0327B7A0 B.CS 0x327B8E8
	0x0327B7A4 ADD X8, X0, X25, 0x3, LSL
	0x0327B7A8 LDR X1, [X27]
	0x0327B7AC LDR X24, [X8 + 0x20]
	0x0327B7B0 MOV X0, X23
	0x0327B7B4 MOV X2, X31
	0x0327B7B8 BL 0x321BA08
	0x0327B7BC TBZ X0, 0x0, 0x327B7D0
	0x0327B7C0 TBNZ X20, 0x0, 0x327B7D0
	0x0327B7C4 CBZ X22, 0x327B8E4
	0x0327B7C8 STR X24, [X22 + 0x10]
	0x0327B7CC B 0x327B858
	0x0327B7D0 LDR X1, [X28]
	0x0327B7D4 MOV X0, X23
	0x0327B7D8 MOV X2, X31
	0x0327B7DC BL 0x321BA08
	0x0327B7E0 TBZ X0, 0x0, 0x327B7F0
	0x0327B7E4 CBZ X22, 0x327B8E4
	0x0327B7E8 STR X24, [X22 + 0x28]
	0x0327B7EC B 0x327B858
	0x0327B7F0 LDR X1, [X29]
	0x0327B7F4 MOV X0, X23
	0x0327B7F8 MOV X2, X31
	0x0327B7FC BL 0x321BA08
	0x0327B800 TBZ X0, 0x0, 0x327B814
	0x0327B804 TBZ X20, 0x0, 0x327B814
	0x0327B808 CBZ X22, 0x327B8E4
	0x0327B80C STR X24, [X22 + 0x20]
	0x0327B810 B 0x327B858
	0x0327B814 LDR X1, [X19]
	0x0327B818 MOV X0, X23
	0x0327B81C MOV X2, X31
	0x0327B820 BL 0x321BA08
	0x0327B824 CBZ X22, 0x327B8E4
	0x0327B828 TBZ X0, 0x0, 0x327B834
	0x0327B82C STR X24, [X22 + 0x18]
	0x0327B830 B 0x327B858
	0x0327B834 MOV X0, X22
	0x0327B838 BL 0x327CB60
	0x0327B83C CBZ X0, 0x327B8E4
	0x0327B840 LDR X8, [X0]
	0x0327B844 MOV X1, X23
	0x0327B848 MOV X2, X24
	0x0327B84C LDR X9, [X8 + 0x278]
	0x0327B850 LDR X3, [X8 + 0x280]
	0x0327B854 BLR X9
	0x0327B858 ADD X25, X25, 0x1
	0x0327B85C B 0x327B658
	0x0327B860 TBZ X20, 0x0, 0x327B8A0
	0x0327B864 CBZ X22, 0x327B8E4
	0x0327B868 LDR X8, [X22 + 0x20]
	0x0327B86C CBZ X8, 0x327B8EC
	0x0327B870 LDR X8, [X22 + 0x18]
	0x0327B874 CBZ X8, 0x327B8EC
	0x0327B878 ADRP X8, 0xEA8000
	0x0327B87C LDR X8, [X8 + 0xDE0]
	0x0327B880 LDR X19, [X31 + 0x8]
	0x0327B884 LDR X0, [X8]
	0x0327B888 LDR W8, [X0 + 0xE0]
	0x0327B88C CBNZ W8, 0x327B894
	0x0327B890 BL 0x1C16DFC
	0x0327B894 MOV X0, X22
	0x0327B898 BL 0x32766E8
	0x0327B89C B 0x327B8C0
	0x0327B8A0 LDR X19, [X31 + 0x8]
	0x0327B8A4 LDR X0, [X19 + 0x18]
	0x0327B8A8 CBZ X0, 0x327B8E4
	0x0327B8AC LDR X8, [X0]
	0x0327B8B0 MOV X1, X22
	0x0327B8B4 LDR X9, [X8 + 0x308]
	0x0327B8B8 LDR X2, [X8 + 0x310]
	0x0327B8BC BLR X9
	0x0327B8C0 STR X22, [X19 + 0x20]
	0x0327B8C4 LDP X20, X19, [X31 + 0x60]
	0x0327B8C8 LDP X22, X21, [X31 + 0x50]
	0x0327B8CC LDP X24, X23, [X31 + 0x40]
	0x0327B8D0 LDP X26, X25, [X31 + 0x30]
	0x0327B8D4 LDP X28, X27, [X31 + 0x20]
	0x0327B8D8 LDP X29, X30, [X31 + 0x10]
	0x0327B8DC ADD X31, X31, 0x70
	0x0327B8E0 RET
	0x0327B8E4 BL 0x1C16F20
	0x0327B8E8 BL 0x1C16F28
	0x0327B8EC ADRP X0, 0xEA8000
	0x0327B8F0 LDR X0, [X0 + 0xD20]
	0x0327B8F4 BL 0x1C16D08
	0x0327B8F8 BL 0x1C16F10
	0x0327B8FC MOV X19, X0
	0x0327B900 ADRP X0, 0xEA9000
	0x0327B904 LDR X0, [X0 + 0x128]
	0x0327B908 BL 0x1C16D08
	0x0327B90C MOV X1, X0
	0x0327B910 MOV X0, X19
	0x0327B914 BL 0x3273098
	0x0327B918 ADRP X0, 0xEA9000
	0x0327B91C LDR X0, [X0 + 0x130]
	0x0327B920 BL 0x1C16D08
	0x0327B924 MOV X1, X0
	0x0327B928 MOV X0, X19
	0x0327B92C BL 0x1C16DEC
	0x0327B930 STR X30, [X31 - 0x60]!
	0x0327B934 STP X28, X27, [X31 + 0x10]
	0x0327B938 STP X26, X25, [X31 + 0x20]
	0x0327B93C STP X24, X23, [X31 + 0x30]
	0x0327B940 STP X22, X21, [X31 + 0x40]
	0x0327B944 STP X20, X19, [X31 + 0x50]
	0x0327B948 ADRP X27, 0x1161000
	0x0327B94C ADRP X28, 0xEA9000
	0x0327B950 ADRP X25, 0xEA9000
	0x0327B954 ADRP X26, 0xEA8000
	0x0327B958 ADRP X24, 0xEA8000
	0x0327B95C ADRP X23, 0xE9F000
	0x0327B960 LDRB W8, [X27 + 0x5F4]
	0x0327B964 LDR X28, [X28 + 0x18]
	0x0327B968 LDR X25, [X25 + 0x138]
	0x0327B96C LDR X26, [X26 + 0xED8]
	0x0327B970 LDR X24, [X24 + 0xF00]
	0x0327B974 LDR X23, [X23 + 0x3F0]
	0x0327B978 MOV W19, W3
	0x0327B97C MOV X20, X2
	0x0327B980 MOV X21, X1
	0x0327B984 MOV X22, X0
	0x0327B988 TBNZ X8, 0x0, 0x327BA0C
	0x0327B98C ADRP X0, 0xEA9000
	0x0327B990 LDR X0, [X0 + 0x138]
	0x0327B994 BL 0x1C16CF4
	0x0327B998 ADRP X0, 0xEA6000
	0x0327B99C LDR X0, [X0 + 0x8F8]
	0x0327B9A0 BL 0x1C16CF4
	0x0327B9A4 ADRP X0, 0xEA8000
	0x0327B9A8 LDR X0, [X0 + 0xED8]
	0x0327B9AC BL 0x1C16CF4
	0x0327B9B0 ADRP X0, 0xEA8000
	0x0327B9B4 LDR X0, [X0 + 0xF00]
	0x0327B9B8 BL 0x1C16CF4
	0x0327B9BC ADRP X0, 0xEA6000
	0x0327B9C0 LDR X0, [X0 + 0x8C8]
	0x0327B9C4 BL 0x1C16CF4
	0x0327B9C8 ADRP X0, 0xEA9000
	0x0327B9CC LDR X0, [X0 + 0x18]
	0x0327B9D0 BL 0x1C16CF4
	0x0327B9D4 ADRP X0, 0xEA9000
	0x0327B9D8 LDR X0, [X0 + 0x118]
	0x0327B9DC BL 0x1C16CF4
	0x0327B9E0 ADRP X0, 0xE7A000
	0x0327B9E4 LDR X0, [X0 + 0xC10]
	0x0327B9E8 BL 0x1C16CF4
	0x0327B9EC ADRP X0, 0xE9F000
	0x0327B9F0 LDR X0, [X0 + 0x3F0]
	0x0327B9F4 BL 0x1C16CF4
	0x0327B9F8 ADRP X0, 0xE80000
	0x0327B9FC LDR X0, [X0 + 0x5E8]
	0x0327BA00 BL 0x1C16CF4
	0x0327BA04 MOVZ W8, 0x1
	0x0327BA08 STRB W8, [X27 + 0x5F4]
	0x0327BA0C LDR X1, [X28]
	0x0327BA10 MOV X0, X21
	0x0327BA14 MOV X2, X31
	0x0327BA18 BL 0x321BA08
	0x0327BA1C ANDS W31, W0, 0x1
	0x0327BA20 CSEL X8, X26, X25, NE
	0x0327BA24 LDR X0, [X8]
	0x0327BA28 BL 0x1C16F10
	0x0327BA2C MOV X21, X0
	0x0327BA30 BL 0x327CBC8
	0x0327BA34 LDR X0, [X24]
	0x0327BA38 BL 0x1C16F10
	0x0327BA3C LDR X1, [X23]
	0x0327BA40 MOV X2, X31
	0x0327BA44 MOV X23, X0
	0x0327BA48 BL 0x328E67C
	0x0327BA4C CBZ X23, 0x327BCC4
	0x0327BA50 CBZ X21, 0x327BCC4
	0x0327BA54 LDR X8, [X23 + 0x18]
	0x0327BA58 ADRP X9, 0xEA6000
	0x0327BA5C LDR X9, [X9 + 0x8C8]
	0x0327BA60 STR X8, [X21 + 0x30]
	0x0327BA64 LDR X0, [X9]
	0x0327BA68 BL 0x1C16F10
	0x0327BA6C MOV X1, X31
	0x0327BA70 MOV X24, X0
	0x0327BA74 BL 0x3356984
	0x0327BA78 STR X24, [X22 + 0x28]
	0x0327BA7C CBZ X24, 0x327BCC4
	0x0327BA80 LDR X8, [X24]
	0x0327BA84 MOV X0, X24
	0x0327BA88 MOV X1, X23
	0x0327BA8C LDR X9, [X8 + 0x268]
	0x0327BA90 LDR X2, [X8 + 0x270]
	0x0327BA94 BLR X9
	0x0327BA98 CBZ X20, 0x327BCC4
	0x0327BA9C ADRP X25, 0xEA6000
	0x0327BAA0 ADRP X26, 0xE7A000
	0x0327BAA4 ADRP X27, 0xE80000
	0x0327BAA8 ADRP X28, 0xEA9000
	0x0327BAAC LDR X25, [X25 + 0x8F8]
	0x0327BAB0 LDR X26, [X26 + 0xC10]
	0x0327BAB4 LDR X27, [X27 + 0x5E8]
	0x0327BAB8 LDR X28, [X28 + 0x118]
	0x0327BABC MOV X24, X31
	0x0327BAC0 LDR X8, [X20]
	0x0327BAC4 LDR X1, [X25]
	0x0327BAC8 LDRH W9, [X8 + 0x12E]
	0x0327BACC CBZ X9, 0x327BAF0
	0x0327BAD0 LDR X10, [X8 + 0xB0]
	0x0327BAD4 ADD X10, X10, 0x8
	0x0327BAD8 LDUR X11, [X10 - 0x8]
	0x0327BADC CMP X11, X1
	0x0327BAE0 B.EQ 0x327BB00
	0x0327BAE4 SUBS X9, X9, 0x1
	0x0327BAE8 ADD X10, X10, 0x10
	0x0327BAEC B.NE 0x327BAD8
	0x0327BAF0 MOVZ W2, 0x4
	0x0327BAF4 MOV X0, X20
	0x0327BAF8 BL 0x1C5C788
	0x0327BAFC B 0x327BB10
	0x0327BB00 LDR W9, [X10]
	0x0327BB04 ADD W9, W9, 0x4
	0x0327BB08 ADD X8, X8, W9, 0x4, SXTW
	0x0327BB0C ADD X0, X8, 0x138
	0x0327BB10 LDP X8, X1, [X0]
	0x0327BB14 MOV X0, X20
	0x0327BB18 BLR X8
	0x0327BB1C CBZ X0, 0x327BCC4
	0x0327BB20 LDRSW X8, [X0 + 0x18]
	0x0327BB24 CMP X24, X8
	0x0327BB28 B.GE 0x327BC98
	0x0327BB2C LDR X8, [X20]
	0x0327BB30 LDR X1, [X25]
	0x0327BB34 LDRH W9, [X8 + 0x12E]
	0x0327BB38 CBZ X9, 0x327BB5C
	0x0327BB3C LDR X10, [X8 + 0xB0]
	0x0327BB40 ADD X10, X10, 0x8
	0x0327BB44 LDUR X11, [X10 - 0x8]
	0x0327BB48 CMP X11, X1
	0x0327BB4C B.EQ 0x327BB6C
	0x0327BB50 SUBS X9, X9, 0x1
	0x0327BB54 ADD X10, X10, 0x10
	0x0327BB58 B.NE 0x327BB44
	0x0327BB5C MOVZ W2, 0x4
	0x0327BB60 MOV X0, X20
	0x0327BB64 BL 0x1C5C788
	0x0327BB68 B 0x327BB7C
	0x0327BB6C LDR W9, [X10]
	0x0327BB70 ADD W9, W9, 0x4
	0x0327BB74 ADD X8, X8, W9, 0x4, SXTW
	0x0327BB78 ADD X0, X8, 0x138
	0x0327BB7C LDP X8, X1, [X0]
	0x0327BB80 MOV X0, X20
	0x0327BB84 BLR X8
	0x0327BB88 CBZ X0, 0x327BCC4
	0x0327BB8C LDR W8, [X0 + 0x18]
	0x0327BB90 CMP X24, X8
	0x0327BB94 B.CS 0x327BCC8
	0x0327BB98 LDR X8, [X20]
	0x0327BB9C ADD X9, X0, X24, 0x3, LSL
	0x0327BBA0 LDR X22, [X9 + 0x20]
	0x0327BBA4 LDR X1, [X25]
	0x0327BBA8 LDRH W9, [X8 + 0x12E]
	0x0327BBAC CBZ X9, 0x327BBD0
	0x0327BBB0 LDR X10, [X8 + 0xB0]
	0x0327BBB4 ADD X10, X10, 0x8
	0x0327BBB8 LDUR X11, [X10 - 0x8]
	0x0327BBBC CMP X11, X1
	0x0327BBC0 B.EQ 0x327BBE0
	0x0327BBC4 SUBS X9, X9, 0x1
	0x0327BBC8 ADD X10, X10, 0x10
	0x0327BBCC B.NE 0x327BBB8
	0x0327BBD0 MOVZ W2, 0x5
	0x0327BBD4 MOV X0, X20
	0x0327BBD8 BL 0x1C5C788
	0x0327BBDC B 0x327BBF0
	0x0327BBE0 LDR W9, [X10]
	0x0327BBE4 ADD W9, W9, 0x5
	0x0327BBE8 ADD X8, X8, W9, 0x4, SXTW
	0x0327BBEC ADD X0, X8, 0x138
	0x0327BBF0 LDP X8, X1, [X0]
	0x0327BBF4 MOV X0, X20
	0x0327BBF8 BLR X8
	0x0327BBFC CBZ X0, 0x327BCC4
	0x0327BC00 LDR W8, [X0 + 0x18]
	0x0327BC04 CMP X24, X8
	0x0327BC08 B.CS 0x327BCC8
	0x0327BC0C ADD X8, X0, X24, 0x3, LSL
	0x0327BC10 LDR X1, [X26]
	0x0327BC14 LDR X23, [X8 + 0x20]
	0x0327BC18 MOV X0, X22
	0x0327BC1C MOV X2, X31
	0x0327BC20 BL 0x321BA08
	0x0327BC24 TBZ X0, 0x0, 0x327BC34
	0x0327BC28 TBZ X19, 0x0, 0x327BC34
	0x0327BC2C STR X23, [X21 + 0x20]
	0x0327BC30 B 0x327BC90
	0x0327BC34 LDR X1, [X27]
	0x0327BC38 MOV X0, X22
	0x0327BC3C MOV X2, X31
	0x0327BC40 BL 0x321BA08
	0x0327BC44 TBZ X0, 0x0, 0x327BC50
	0x0327BC48 STR X23, [X21 + 0x18]
	0x0327BC4C B 0x327BC90
	0x0327BC50 LDR X1, [X28]
	0x0327BC54 MOV X0, X22
	0x0327BC58 MOV X2, X31
	0x0327BC5C BL 0x321BA08
	0x0327BC60 TBZ X0, 0x0, 0x327BC70
	0x0327BC64 TBNZ X19, 0x0, 0x327BC70
	0x0327BC68 STR X23, [X21 + 0x10]
	0x0327BC6C B 0x327BC90
	0x0327BC70 LDR X0, [X21 + 0x28]
	0x0327BC74 CBZ X0, 0x327BCC4
	0x0327BC78 LDR X8, [X0]
	0x0327BC7C MOV X1, X22
	0x0327BC80 MOV X2, X23
	0x0327BC84 LDR X9, [X8 + 0x278]
	0x0327BC88 LDR X3, [X8 + 0x280]
	0x0327BC8C BLR X9
	0x0327BC90 ADD X24, X24, 0x1
	0x0327BC94 B 0x327BAC0
	0x0327BC98 LDR X8, [X21 + 0x20]
	0x0327BC9C CBNZ X8, 0x327BCA4
	0x0327BCA0 TBNZ X19, 0x0, 0x327BCCC
	0x0327BCA4 MOV X0, X21
	0x0327BCA8 LDP X20, X19, [X31 + 0x50]
	0x0327BCAC LDP X22, X21, [X31 + 0x40]
	0x0327BCB0 LDP X24, X23, [X31 + 0x30]
	0x0327BCB4 LDP X26, X25, [X31 + 0x20]
	0x0327BCB8 LDP X28, X27, [X31 + 0x10]
	0x0327BCBC LDR X30, [X31], #0x60
	0x0327BCC0 RET
	0x0327BCC4 BL 0x1C16F20
	0x0327BCC8 BL 0x1C16F28
	0x0327BCCC ADRP X0, 0xEA8000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1163000
	007 Move W8, [X22+1519]
	008 Move X21, X2
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {113}
	015 Move X0, 0xEA9000
	016 Move X0, [X0+440]
	017 Call 0x1C17CF4
	018 Move X0, 0xEA8000
	019 Move X0, [X0+2296]
	020 Call 0x1C17CF4
	021 Move X0, 0xEAA000
	022 Move X0, [X0+3552]
	023 Call 0x1C17CF4
	024 Move X0, 0xE7A000
	025 Move X0, [X0+2760]
	026 Call 0x1C17CF4
	027 Move X0, 0xEAA000
	028 Move X0, [X0+4080]
	029 Call 0x1C17CF4
	030 Move X0, 0xEAA000
	031 Move X0, [X0+4088]
	032 Call 0x1C17CF4
	033 Move X0, 0xEAB000
	034 Move X0, [X0]
	035 Call 0x1C17CF4
	036 Move X0, 0xEAB000
	037 Move X0, [X0+8]
	038 Call 0x1C17CF4
	039 Move X0, 0xEAB000
	040 Move X0, [X0+16]
	041 Call 0x1C17CF4
	042 Move X0, 0xEAB000
	043 Move X0, [X0+24]
	044 Call 0x1C17CF4
	045 Move X0, 0xEAB000
	046 Move X0, [X0+32]
	047 Call 0x1C17CF4
	048 Move X0, 0xEAB000
	049 Move X0, [X0+40]
	050 Call 0x1C17CF4
	051 Move X0, 0xEAB000
	052 Move X0, [X0+48]
	053 Call 0x1C17CF4
	054 Move X0, 0xEA4000
	055 Move X0, [X0+1368]
	056 Call 0x1C17CF4
	057 Move X0, 0xEAB000
	058 Move X0, [X0+56]
	059 Call 0x1C17CF4
	060 Move X0, 0xEAB000
	061 Move X0, [X0+64]
	062 Call 0x1C17CF4
	063 Move X0, 0xEAB000
	064 Move X0, [X0+72]
	065 Call 0x1C17CF4
	066 Move X0, 0xEAB000
	067 Move X0, [X0+80]
	068 Call 0x1C17CF4
	069 Move X0, 0xEAB000
	070 Move X0, [X0+88]
	071 Call 0x1C17CF4
	072 Move X0, 0xEAB000
	073 Move X0, [X0+96]
	074 Call 0x1C17CF4
	075 Move X0, 0xEAB000
	076 Move X0, [X0+104]
	077 Call 0x1C17CF4
	078 Move X0, 0xEAB000
	079 Move X0, [X0+112]
	080 Call 0x1C17CF4
	081 Move X0, 0xEAB000
	082 Move X0, [X0+120]
	083 Call 0x1C17CF4
	084 Move X0, 0xEAB000
	085 Move X0, [X0+128]
	086 Call 0x1C17CF4
	087 Move X0, 0xEAB000
	088 Move X0, [X0+136]
	089 Call 0x1C17CF4
	090 Move X0, 0xEAB000
	091 Move X0, [X0+144]
	092 Call 0x1C17CF4
	093 Move X0, 0xEAB000
	094 Move X0, [X0+152]
	095 Call 0x1C17CF4
	096 Move X0, 0xEAB000
	097 Move X0, [X0+160]
	098 Call 0x1C17CF4
	099 Move X0, 0xEAB000
	100 Move X0, [X0+168]
	101 Call 0x1C17CF4
	102 Move X0, 0xEAB000
	103 Move X0, [X0+176]
	104 Call 0x1C17CF4
	105 Move X0, 0xEAB000
	106 Move X0, [X0+184]
	107 Call 0x1C17CF4
	108 Move X0, 0xEAA000
	109 Move X0, [X0+192]
	110 Call 0x1C17CF4
	111 Move W8, 1
	112 Move [X22+1519], W8
	113 Move X8, [X19+40]
	114 Compare X8, 0
	115 JumpIfEqual {126}
	116 Move X0, X19
	117 Move X1, X20
	118 Move X2, X21
	119 Move X20, [X31+32]
	120 Move X19, [X31+40]
	121 Move X22, [X31+16]
	122 Move X21, [X31+24]
	123 Move X30, [X31+48]
	124 Call ConfigHandler.ReadCustomProviderData, X0, X1, X2
	125 Return 
	126 Move X0, X20
	127 Move X1, X31
	128 Call <PrivateImplementationDetails>.ComputeStringHash, X0
	129 Move W8, 0x3918
	130 NotImplemented "Instruction MOVK not yet implemented."
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move W8, 0xC298
	133 NotImplemented "Instruction MOVK not yet implemented."
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move W8, 0x52A4
	136 NotImplemented "Instruction MOVK not yet implemented."
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move W8, 0xA245
	139 NotImplemented "Instruction MOVK not yet implemented."
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Move W8, 0x52A4
	142 NotImplemented "Instruction MOVK not yet implemented."
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move X8, 0xEAA000
	145 Move X8, [X8+56]
	146 Move X0, X20
	147 Move X2, X31
	148 Move X1, [X8]
	149 Call String.op_Equality, X0, X1
	150 Move TEMP, X0
	151 And TEMP, TEMP, 1
	152 Compare TEMP, 1
	153 JumpIfNotEqual {1011}
	154 Move X8, 0xE79000
	155 Move X8, [X8+2760]
	156 Move W1, 1
	157 Move X0, [X8]
	158 Call 0x1C17D6C
	159 Compare X0, 0
	160 JumpIfEqual {1037}
	161 Move W8, [X0+24]
	162 Move X2, X0
	163 Compare W8, 0
	164 JumpIfEqual {1038}
	165 Move X8, 0xEAA000
	166 Move X8, [X8+64]
	167 Move X0, X19
	168 Move X1, X20
	169 Move X8, [X8]
	170 Move [X2+32], X8
	171 Call ConfigHandler.ValidatePath, X0, X1, X2
	172 Move X0, [X19+64]
	173 Compare X0, 0
	174 JumpIfEqual {1037}
	175 Move X8, 0xEAA000
	176 Move X8, [X8+168]
	177 Move X2, X31
	178 Move X1, [X8]
	179 Call String.IndexOf, X0, X1
	180 Add W31, W0, 1
	181 Move X0, X19
	182 Move X1, X21
	183 Move W2, W31
	184 Move W8, 0xBBBC
	185 NotImplemented "Instruction MOVK not yet implemented."
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Move W8, 0x2C25
	188 NotImplemented "Instruction MOVK not yet implemented."
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move W8, 0x9C1E
	191 NotImplemented "Instruction MOVK not yet implemented."
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Move W8, 0x2C25
	194 NotImplemented "Instruction MOVK not yet implemented."
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Move X8, 0xEAA000
	197 Move X8, [X8+136]
	198 Move W8, 0xDE64
	199 NotImplemented "Instruction MOVK not yet implemented."
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Move W8, 0xABEE
	202 NotImplemented "Instruction MOVK not yet implemented."
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Move W8, 0xDE64
	205 NotImplemented "Instruction MOVK not yet implemented."
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Move X8, 0xEAA000
	208 Move X8, [X8+160]
	209 Move W8, 660
	210 NotImplemented "Instruction MOVK not yet implemented."
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Move W8, 0xEFC3
	213 NotImplemented "Instruction MOVK not yet implemented."
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Move W8, 660
	216 NotImplemented "Instruction MOVK not yet implemented."
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Move X8, 0xEAA000
	219 Move X8, [X8+128]
	220 Move W8, 0xDBED
	221 NotImplemented "Instruction MOVK not yet implemented."
	222 NotImplemented "Instruction CMP not yet implemented."
	223 Move W8, 0xC298
	224 NotImplemented "Instruction MOVK not yet implemented."
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Move X8, 0xEAA000
	227 Move X8, [X8+8]
	228 Move X0, X20
	229 Move X2, X31
	230 Move X1, [X8]
	231 Call String.op_Equality, X0, X1
	232 Move TEMP, X0
	233 And TEMP, TEMP, 1
	234 Compare TEMP, 1
	235 JumpIfNotEqual {1011}
	236 Move X8, 0xE79000
	237 Move X8, [X8+2760]
	238 Move W1, 2
	239 Move X0, [X8]
	240 Call 0x1C17D6C
	241 Compare X0, 0
	242 JumpIfEqual {1037}
	243 Move W8, [X0+24]
	244 Move X2, X0
	245 Compare W8, 0
	246 JumpIfEqual {1038}
	247 Move X22, 0xEAA000
	248 Move X22, [X22+88]
	249 NotImplemented "Instruction CMP not yet implemented."
	250 Move X9, [X22]
	251 Move [X2+32], X9
	252 Move X8, 0xEAA000
	253 Move X8, [X8+160]
	254 Move X0, X19
	255 Move X1, X20
	256 Move X8, [X8]
	257 Move [X2+40], X8
	258 Call ConfigHandler.ValidatePath, X0, X1, X2
	259 Move X1, [X22]
	260 Move X0, X19
	261 Call ConfigHandler.CheckPath, X0, X1
	262 Move TEMP, X0
	263 And TEMP, TEMP, 1
	264 Compare TEMP, 1
	265 JumpIfNotEqual {766}
	266 Move X0, X19
	267 Move X1, X21
	268 Move X20, [X31+32]
	269 Move X19, [X31+40]
	270 Move X22, [X31+16]
	271 Move X21, [X31+24]
	272 Move X30, [X31+48]
	273 Call ConfigHandler.ReadClientWellKnown, X0, X1
	274 Return 
	275 Move W8, 0xDF7C
	276 NotImplemented "Instruction MOVK not yet implemented."
	277 NotImplemented "Instruction CMP not yet implemented."
	278 Move W8, 0x976B
	279 NotImplemented "Instruction MOVK not yet implemented."
	280 NotImplemented "Instruction CMP not yet implemented."
	281 Move W8, 0xBBBC
	282 NotImplemented "Instruction MOVK not yet implemented."
	283 NotImplemented "Instruction CMP not yet implemented."
	284 Move X8, 0xEAA000
	285 Move X8, [X8+24]
	286 Move X1, [X8]
	287 Move X0, X20
	288 Move X2, X31
	289 Call String.op_Equality, X0, X1
	290 Move TEMP, X0
	291 And TEMP, TEMP, 1
	292 Compare TEMP, 1
	293 JumpIfNotEqual {1011}
	294 Move X8, 0xEAA000
	295 Move X8, [X8+16]
	296 Move X0, X19
	297 Move X1, [X8]
	298 Call ConfigHandler.CheckPath, X0, X1
	299 Move TEMP, X0
	300 And TEMP, TEMP, 1
	301 Compare TEMP, 1
	302 JumpIfEqual {312}
	303 Move X8, 0xEAA000
	304 Move X8, [X8+176]
	305 Move X0, X19
	306 Move X1, [X8]
	307 Call ConfigHandler.CheckPath, X0, X1
	308 Move TEMP, X0
	309 And TEMP, TEMP, 1
	310 Compare TEMP, 1
	311 JumpIfNotEqual {775}
	312 Move X0, X19
	313 Move X1, X20
	314 Move X2, X21
	315 Move W3, W31
	316 Call ConfigHandler.ReadProvider, X0, X1, X2, X3
	317 Move X8, [X19+32]
	318 Compare X8, 0
	319 JumpIfEqual {1037}
	320 Move X19, X0
	321 Move X0, X8
	322 Call ChannelData.get_ServerProviders, X0
	323 Compare X0, 0
	324 JumpIfNotEqual {806}
	325 Move W8, 0xED98
	326 NotImplemented "Instruction MOVK not yet implemented."
	327 NotImplemented "Instruction CMP not yet implemented."
	328 Move W8, 0x6491
	329 NotImplemented "Instruction MOVK not yet implemented."
	330 NotImplemented "Instruction CMP not yet implemented."
	331 Move W8, 0x3918
	332 NotImplemented "Instruction MOVK not yet implemented."
	333 NotImplemented "Instruction CMP not yet implemented."
	334 Move X8, 0xEAA000
	335 Move X8, [X8+144]
	336 Move X1, [X8]
	337 Move X0, X20
	338 Move X2, X31
	339 Call String.op_Equality, X0, X1
	340 Move TEMP, X0
	341 And TEMP, TEMP, 1
	342 Compare TEMP, 1
	343 JumpIfNotEqual {1011}
	344 Move X8, 0xE79000
	345 Move X8, [X8+2760]
	346 Move W1, 2
	347 Move X0, [X8]
	348 Call 0x1C17D6C
	349 Compare X0, 0
	350 JumpIfEqual {1037}
	351 Move W8, [X0+24]
	352 Move X2, X0
	353 Compare W8, 0
	354 JumpIfEqual {1038}
	355 Move X9, 0xEAA000
	356 Move X9, [X9+152]
	357 NotImplemented "Instruction CMP not yet implemented."
	358 Move X9, [X9]
	359 Move [X2+32], X9
	360 Move X8, 0xEAA000
	361 Move X8, [X8+56]
	362 Move W8, 0xF3E6
	363 NotImplemented "Instruction MOVK not yet implemented."
	364 NotImplemented "Instruction CMP not yet implemented."
	365 Move W8, 295
	366 NotImplemented "Instruction MOVK not yet implemented."
	367 NotImplemented "Instruction CMP not yet implemented."
	368 Move W8, 0x6875
	369 NotImplemented "Instruction MOVK not yet implemented."
	370 NotImplemented "Instruction CMP not yet implemented."
	371 Move X8, 0xEAA000
	372 Move X8, [X8+64]
	373 Move X0, X20
	374 Move X2, X31
	375 Move X1, [X8]
	376 Call String.op_Equality, X0, X1
	377 Move TEMP, X0
	378 And TEMP, TEMP, 1
	379 Compare TEMP, 1
	380 JumpIfNotEqual {1011}
	381 Move X8, 0xE79000
	382 Move X8, [X8+2760]
	383 Move W1, 2
	384 Move X0, [X8]
	385 Call 0x1C17D6C
	386 Compare X0, 0
	387 JumpIfEqual {1037}
	388 Move W8, [X0+24]
	389 Move X2, X0
	390 Compare W8, 0
	391 JumpIfEqual {1038}
	392 Move X9, 0xEA9000
	393 Move X9, [X9+4088]
	394 NotImplemented "Instruction CMP not yet implemented."
	395 Move X9, [X9]
	396 Move [X2+32], X9
	397 Move X8, 0xEAA000
	398 Move X8, [X8+168]
	399 Move X8, [X8]
	400 Move [X2+40], X8
	401 Move X8, 0xEAA000
	402 Move X8, [X8+168]
	403 Move X0, X20
	404 Move X2, X31
	405 Move X1, [X8]
	406 Call String.op_Equality, X0, X1
	407 Move TEMP, X0
	408 And TEMP, TEMP, 1
	409 Compare TEMP, 1
	410 JumpIfNotEqual {1011}
	411 Move X8, 0xE79000
	412 Move X8, [X8+2760]
	413 Move W1, 1
	414 Move X0, [X8]
	415 Call 0x1C17D6C
	416 Compare X0, 0
	417 JumpIfEqual {1037}
	418 Move W8, [X0+24]
	419 Move X2, X0
	420 Compare W8, 0
	421 JumpIfEqual {1038}
	422 Move X8, 0xEA9000
	423 Move X8, [X8+4088]
	424 Move X0, X19
	425 Move X1, X20
	426 Move X8, [X8]
	427 Move [X2+32], X8
	428 Call ConfigHandler.ValidatePath, X0, X1, X2
	429 Compare X21, 0
	430 JumpIfEqual {1037}
	431 Move X20, 0xEA7000
	432 Move X8, [X21]
	433 Move X20, [X20+2296]
	434 NotImplemented "Instruction LDRH not yet implemented."
	435 Move X1, [X20]
	436 Compare X9, 0
	437 JumpIfEqual {444}
	438 Move X10, [X8+176]
	439 Add X10, X10, 8
	440 NotImplemented "Instruction LDUR not yet implemented."
	441 NotImplemented "Instruction CMP not yet implemented."
	442 Subtract X9, X9, 1
	443 Add X10, X10, 16
	444 Move W2, 4
	445 Move X0, X21
	446 Call 0x1C5D788
	447 Move X8, 0xEAA000
	448 Move X8, [X8+88]
	449 Move X0, X20
	450 Move X2, X31
	451 Move X1, [X8]
	452 Call String.op_Equality, X0, X1
	453 Move TEMP, X0
	454 And TEMP, TEMP, 1
	455 Compare TEMP, 1
	456 JumpIfNotEqual {1011}
	457 Move X8, 0xE79000
	458 Move X8, [X8+2760]
	459 Move W1, 1
	460 Move X0, [X8]
	461 Call 0x1C17D6C
	462 Compare X0, 0
	463 JumpIfEqual {1037}
	464 Move W8, [X0+24]
	465 Move X2, X0
	466 Compare W8, 0
	467 JumpIfEqual {1038}
	468 Move X8, 0xEAA000
	469 Move X8, [X8+168]
	470 Move X0, X19
	471 Move X1, X20
	472 Move X8, [X8]
	473 Move [X2+32], X8
	474 Call ConfigHandler.ValidatePath, X0, X1, X2
	475 Compare X21, 0
	476 JumpIfEqual {1037}
	477 Move X9, 0xEA7000
	478 Move X8, [X21]
	479 Move X9, [X9+2296]
	480 Move X10, 0xEA9000
	481 Move X1, [X9]
	482 Move X10, [X10+4080]
	483 NotImplemented "Instruction LDRH not yet implemented."
	484 Move X20, [X10]
	485 Compare X9, 0
	486 JumpIfEqual {493}
	487 Move X10, [X8+176]
	488 Add X10, X10, 8
	489 NotImplemented "Instruction LDUR not yet implemented."
	490 NotImplemented "Instruction CMP not yet implemented."
	491 Subtract X9, X9, 1
	492 Add X10, X10, 16
	493 Move W2, 3
	494 Move X0, X21
	495 Call 0x1C5D788
	496 Move X8, 0xEAA000
	497 Move X8, [X8+112]
	498 Move X0, X20
	499 Move X2, X31
	500 Move X1, [X8]
	501 Call String.op_Equality, X0, X1
	502 Move TEMP, X0
	503 And TEMP, TEMP, 1
	504 Compare TEMP, 1
	505 JumpIfNotEqual {1011}
	506 Move X8, 0xE79000
	507 Move X8, [X8+2760]
	508 Move W1, 1
	509 Move X0, [X8]
	510 Call 0x1C17D6C
	511 Compare X0, 0
	512 JumpIfEqual {1037}
	513 Move W8, [X0+24]
	514 Move X2, X0
	515 Compare W8, 0
	516 JumpIfEqual {1038}
	517 Move X8, 0xEAA000
	518 Move X8, [X8+168]
	519 Move X0, X19
	520 Move X1, X20
	521 Move X8, [X8]
	522 Move [X2+32], X8
	523 Call ConfigHandler.ValidatePath, X0, X1, X2
	524 Move X0, X19
	525 Move X1, X21
	526 Move X20, [X31+32]
	527 Move X19, [X31+40]
	528 Move X22, [X31+16]
	529 Move X21, [X31+24]
	530 Move X30, [X31+48]
	531 Call ConfigHandler.ReadLifetine, X0, X1
	532 Return 
	533 Move X8, 0xEAA000
	534 Move X8, [X8+40]
	535 Move X8, 0xEAA000
	536 Move X8, [X8+120]
	537 Move X1, [X8]
	538 Move X0, X20
	539 Move X2, X31
	540 Call String.op_Equality, X0, X1
	541 Move TEMP, X0
	542 And TEMP, TEMP, 1
	543 Compare TEMP, 1
	544 JumpIfNotEqual {1011}
	545 Move X8, 0xE79000
	546 Move X8, [X8+2760]
	547 Move W1, 1
	548 Move X0, [X8]
	549 Call 0x1C17D6C
	550 Compare X0, 0
	551 JumpIfEqual {1037}
	552 Move W8, [X0+24]
	553 Move X2, X0
	554 Compare W8, 0
	555 JumpIfEqual {1038}
	556 Move X8, 0xEAA000
	557 Move X8, [X8+48]
	558 Move X0, X19
	559 Move X1, X20
	560 Move X8, [X8]
	561 Move [X2+32], X8
	562 Call ConfigHandler.ValidatePath, X0, X1, X2
	563 Move X0, X19
	564 Move X1, X21
	565 Move X20, [X31+32]
	566 Move X19, [X31+40]
	567 Move X22, [X31+16]
	568 Move X21, [X31+24]
	569 Move W2, W31
	570 Move X30, [X31+48]
	571 Call ConfigHandler.ReadInteropXml, X0, X1, X2
	572 Return 
	573 Move X8, 0xEA3000
	574 Move X8, [X8+1368]
	575 Move X0, X20
	576 Move X2, X31
	577 Move X1, [X8]
	578 Call String.op_Equality, X0, X1
	579 Move TEMP, X0
	580 And TEMP, TEMP, 1
	581 Compare TEMP, 1
	582 JumpIfNotEqual {1011}
	583 Move X8, 0xE79000
	584 Move X8, [X8+2760]
	585 Move W1, 2
	586 Move X0, [X8]
	587 Call 0x1C17D6C
	588 Compare X0, 0
	589 JumpIfEqual {1037}
	590 Move W8, [X0+24]
	591 Move X2, X0
	592 Compare W8, 0
	593 JumpIfEqual {1038}
	594 Move X22, 0xEAA000
	595 Move X22, [X22+88]
	596 NotImplemented "Instruction CMP not yet implemented."
	597 Move X9, [X22]
	598 Move [X2+32], X9
	599 Move X8, 0xEAA000
	600 Move X8, [X8+160]
	601 Move X0, X19
	602 Move X1, X20
	603 Move X8, [X8]
	604 Move [X2+40], X8
	605 Call ConfigHandler.ValidatePath, X0, X1, X2
	606 Move X1, [X22]
	607 Move X0, X19
	608 Call ConfigHandler.CheckPath, X0, X1
	609 Move TEMP, X0
	610 And TEMP, TEMP, 1
	611 Compare TEMP, 1
	612 JumpIfNotEqual {826}
	613 Move X0, X19
	614 Move X1, X21
	615 Move X20, [X31+32]
	616 Move X19, [X31+40]
	617 Move X22, [X31+16]
	618 Move X21, [X31+24]
	619 Move X30, [X31+48]
	620 Call ConfigHandler.ReadClientActivated, X0, X1
	621 Return 
	622 Move X8, 0xEAA000
	623 Move X8, [X8+48]
	624 Move X1, [X8]
	625 Move X0, X20
	626 Move X2, X31
	627 Call String.op_Equality, X0, X1
	628 Move TEMP, X0
	629 And TEMP, TEMP, 1
	630 Compare TEMP, 1
	631 JumpIfNotEqual {1011}
	632 Move X8, 0xE79000
	633 Move X8, [X8+2760]
	634 Move W1, 1
	635 Move X0, [X8]
	636 Call 0x1C17D6C
	637 Compare X0, 0
	638 JumpIfEqual {1037}
	639 Move W8, [X0+24]
	640 Move X2, X0
	641 Compare W8, 0
	642 JumpIfEqual {1038}
	643 Move X8, 0xEAA000
	644 Move X8, [X8+168]
	645 Move X8, 0xEAA000
	646 Move X8, [X8+32]
	647 Move X8, 0xEAA000
	648 Move X8, [X8+80]
	649 Move X0, X20
	650 Move X2, X31
	651 Move X1, [X8]
	652 Call String.op_Equality, X0, X1
	653 Move TEMP, X0
	654 And TEMP, TEMP, 1
	655 Compare TEMP, 1
	656 JumpIfNotEqual {1011}
	657 Move X8, 0xE79000
	658 Move X8, [X8+2760]
	659 Move W1, 1
	660 Move X0, [X8]
	661 Call 0x1C17D6C
	662 Compare X0, 0
	663 JumpIfEqual {1037}
	664 Move W8, [X0+24]
	665 Move X2, X0
	666 Compare W8, 0
	667 JumpIfEqual {1038}
	668 Move X8, 0xEA9000
	669 Move X8, [X8+4088]
	670 Move X0, X19
	671 Move X1, X20
	672 Move X8, [X8]
	673 Move [X2+32], X8
	674 Call ConfigHandler.ValidatePath, X0, X1, X2
	675 Compare X21, 0
	676 JumpIfEqual {1037}
	677 Move X9, 0xEA7000
	678 Move X8, [X21]
	679 Move X9, [X9+2296]
	680 Move X10, 0xEAA000
	681 Move X1, [X9]
	682 Move X10, [X10+104]
	683 NotImplemented "Instruction LDRH not yet implemented."
	684 Move X19, [X10]
	685 Compare X9, 0
	686 JumpIfEqual {693}
	687 Move X10, [X8+176]
	688 Add X10, X10, 8
	689 NotImplemented "Instruction LDUR not yet implemented."
	690 NotImplemented "Instruction CMP not yet implemented."
	691 Subtract X9, X9, 1
	692 Add X10, X10, 16
	693 Move W2, 3
	694 Move X0, X21
	695 Call 0x1C5D788
	696 Move X8, 0xEAA000
	697 Move X8, [X8+72]
	698 Move X0, X20
	699 Move X2, X31
	700 Move X1, [X8]
	701 Call String.op_Equality, X0, X1
	702 Move TEMP, X0
	703 And TEMP, TEMP, 1
	704 Compare TEMP, 1
	705 JumpIfNotEqual {1011}
	706 Move X8, 0xE79000
	707 Move X8, [X8+2760]
	708 Move W1, 1
	709 Move X0, [X8]
	710 Call 0x1C17D6C
	711 Compare X0, 0
	712 JumpIfEqual {1037}
	713 Move W8, [X0+24]
	714 Move X2, X0
	715 Compare W8, 0
	716 JumpIfEqual {1038}
	717 Move X8, 0xEAA000
	718 Move X8, [X8+48]
	719 Move X0, X19
	720 Move X1, X20
	721 Move X8, [X8]
	722 Move [X2+32], X8
	723 Call ConfigHandler.ValidatePath, X0, X1, X2
	724 Move X1, X21
	725 Move X20, [X31+32]
	726 Move X19, [X31+40]
	727 Move X22, [X31+16]
	728 Move X21, [X31+24]
	729 Move X30, [X31+48]
	730 Call ConfigHandler.ReadPreload, X0, X1
	731 Return 
	732 Move X8, 0xEAA000
	733 Move X8, [X8+152]
	734 Move X1, [X8]
	735 Move X0, X20
	736 Move X2, X31
	737 Call String.op_Equality, X0, X1
	738 Move TEMP, X0
	739 And TEMP, TEMP, 1
	740 Compare TEMP, 1
	741 JumpIfNotEqual {1011}
	742 Move X8, 0xE79000
	743 Move X8, [X8+2760]
	744 Move W1, 1
	745 Move X0, [X8]
	746 Call 0x1C17D6C
	747 Compare X0, 0
	748 JumpIfEqual {1037}
	749 Move W8, [X0+24]
	750 Move X2, X0
	751 Compare W8, 0
	752 JumpIfEqual {1038}
	753 Move X8, 0xEA9000
	754 Move X8, [X8+4088]
	755 Move X8, [X8]
	756 Move [X2+32], X8
	757 Move X0, X19
	758 Move X1, X20
	759 Move X20, [X31+32]
	760 Move X19, [X31+40]
	761 Move X22, [X31+16]
	762 Move X21, [X31+24]
	763 Move X30, [X31+48]
	764 Call ConfigHandler.ValidatePath, X0, X1, X2
	765 Return 
	766 Move X0, X19
	767 Move X1, X21
	768 Move X20, [X31+32]
	769 Move X19, [X31+40]
	770 Move X22, [X31+16]
	771 Move X21, [X31+24]
	772 Move X30, [X31+48]
	773 Call ConfigHandler.ReadServiceWellKnown, X0, X1
	774 Return 
	775 Move X8, 0xEAA000
	776 Move X8, [X8+184]
	777 Move X0, X19
	778 Move X1, [X8]
	779 Call ConfigHandler.CheckPath, X0, X1
	780 Move TEMP, X0
	781 And TEMP, TEMP, 1
	782 Compare TEMP, 1
	783 JumpIfEqual {793}
	784 Move X8, 0xEAA000
	785 Move X8, [X8+96]
	786 Move X0, X19
	787 Move X1, [X8]
	788 Call ConfigHandler.CheckPath, X0, X1
	789 Move TEMP, X0
	790 And TEMP, TEMP, 1
	791 Compare TEMP, 1
	792 JumpIfNotEqual {919}
	793 Move X0, X19
	794 Move X1, X20
	795 Move X2, X21
	796 Move W3, W31
	797 Call ConfigHandler.ReadProvider, X0, X1, X2, X3
	798 Move X8, [X19+32]
	799 Compare X8, 0
	800 JumpIfEqual {1037}
	801 Move X19, X0
	802 Move X0, X8
	803 Call ChannelData.get_ClientProviders, X0
	804 Compare X0, 0
	805 JumpIfEqual {1037}
	806 Move X8, [X0]
	807 Move X1, X19
	808 Move X20, [X31+32]
	809 Move X19, [X31+40]
	810 Move X22, [X31+16]
	811 Move X21, [X31+24]
	812 Move X3, [X8+776]
	813 Move X2, [X8+784]
	814 Move X30, [X31+48]
	815 CallNoReturn X3
	816 Move W2, 1
	817 Move X0, X19
	818 Move X1, X21
	819 Move X20, [X31+32]
	820 Move X19, [X31+40]
	821 Move X22, [X31+16]
	822 Move X21, [X31+24]
	823 Move X30, [X31+48]
	824 Call ConfigHandler.ReadChannel, X0, X1, X2
	825 Return 
	826 Move X0, X19
	827 Move X1, X21
	828 Move X20, [X31+32]
	829 Move X19, [X31+40]
	830 Move X22, [X31+16]
	831 Move X21, [X31+24]
	832 Move X30, [X31+48]
	833 Call ConfigHandler.ReadServiceActivated, X0, X1
	834 Return 
	835 Move W9, [X10]
	836 Add W9, W9, 4
	837 Add X8, X8, W9
	838 Add X0, X8, 312
	839 Move X8, [X0]
	840 Move X1, [X0+8]
	841 Move X0, X21
	842 NotImplemented "Instruction BLR not yet implemented."
	843 Compare X0, 0
	844 JumpIfEqual {1037}
	845 Move X8, [X0+24]
	846 Compare X8, 0
	847 JumpIfEqual {913}
	848 Move X8, [X21]
	849 Move X1, [X20]
	850 NotImplemented "Instruction LDRH not yet implemented."
	851 Compare X9, 0
	852 JumpIfEqual {859}
	853 Move X10, [X8+176]
	854 Add X10, X10, 8
	855 NotImplemented "Instruction LDUR not yet implemented."
	856 NotImplemented "Instruction CMP not yet implemented."
	857 Subtract X9, X9, 1
	858 Add X10, X10, 16
	859 Move W2, 5
	860 Move X0, X21
	861 Call 0x1C5D788
	862 Move W9, [X10]
	863 Add W9, W9, 3
	864 Add X8, X8, W9
	865 Add X0, X8, 312
	866 Move X8, [X0]
	867 Move X2, [X0+8]
	868 Move X0, X21
	869 Move X1, X20
	870 NotImplemented "Instruction BLR not yet implemented."
	871 Move [X19+48], X0
	872 Move W9, [X10]
	873 Add W9, W9, 3
	874 Add X8, X8, W9
	875 Add X0, X8, 312
	876 Move X8, [X0]
	877 Move X2, [X0+8]
	878 Move X0, X21
	879 Move X1, X19
	880 NotImplemented "Instruction BLR not yet implemented."
	881 Move X8, 0xEA9000
	882 Move X8, [X8+3552]
	883 Move X19, X0
	884 Move X8, [X8]
	885 Move W9, [X8+224]
	886 Compare W9, 0
	887 JumpIfNotEqual {890}
	888 Move X0, X8
	889 Call 0x1C17DFC
	890 Move X0, X19
	891 Move X20, [X31+32]
	892 Move X19, [X31+40]
	893 Move X22, [X31+16]
	894 Move X21, [X31+24]
	895 Move X30, [X31+48]
	896 Call RemotingConfiguration.SetCustomErrorsMode, X0
	897 Return 
	898 Move W9, [X10]
	899 Add W9, W9, 5
	900 Add X8, X8, W9
	901 Add X0, X8, 312
	902 Move X8, [X0]
	903 Move X1, [X0+8]
	904 Move X0, X21
	905 NotImplemented "Instruction BLR not yet implemented."
	906 Compare X0, 0
	907 JumpIfEqual {1037}
	908 Move W8, [X0+24]
	909 Compare W8, 0
	910 JumpIfEqual {1038}
	911 Move X8, [X0+32]
	912 Move [X19+56], X8
	913 Move X20, [X31+32]
	914 Move X19, [X31+40]
	915 Move X22, [X31+16]
	916 Move X21, [X31+24]
	917 Move X30, [X31+48]
	918 Return 
	919 Move X8, 0xEAA000
	920 Move X8, [X8]
	921 Move X0, X19
	922 Move X1, [X8]
	923 Call ConfigHandler.CheckPath, X0, X1
	924 Move TEMP, X0
	925 And TEMP, TEMP, 1
	926 Compare TEMP, 1
	927 JumpIfNotEqual {950}
	928 Move W3, 1
	929 Move X0, X19
	930 Move X1, X20
	931 Move X2, X21
	932 Call ConfigHandler.ReadProvider, X0, X1, X2, X3
	933 Move X8, 0xEA9000
	934 Move X8, [X8+3552]
	935 Move X19, X0
	936 Move X8, [X8]
	937 Move W9, [X8+224]
	938 Compare W9, 0
	939 JumpIfNotEqual {942}
	940 Move X0, X8
	941 Call 0x1C17DFC
	942 Move X0, X19
	943 Move X20, [X31+32]
	944 Move X19, [X31+40]
	945 Move X22, [X31+16]
	946 Move X21, [X31+24]
	947 Move X30, [X31+48]
	948 Call RemotingConfiguration.RegisterServerProviderTemplate, X0
	949 Return 
	950 Move X8, 0xEAA000
	951 Move X8, [X8+192]
	952 Move X0, X19
	953 Move X1, [X8]
	954 Call ConfigHandler.CheckPath, X0, X1
	955 Move TEMP, X0
	956 And TEMP, TEMP, 1
	957 Compare TEMP, 1
	958 JumpIfNotEqual {981}
	959 Move W3, 1
	960 Move X0, X19
	961 Move X1, X20
	962 Move X2, X21
	963 Call ConfigHandler.ReadProvider, X0, X1, X2, X3
	964 Move X8, 0xEA9000
	965 Move X8, [X8+3552]
	966 Move X19, X0
	967 Move X8, [X8]
	968 Move W9, [X8+224]
	969 Compare W9, 0
	970 JumpIfNotEqual {973}
	971 Move X0, X8
	972 Call 0x1C17DFC
	973 Move X0, X19
	974 Move X20, [X31+32]
	975 Move X19, [X31+40]
	976 Move X22, [X31+16]
	977 Move X21, [X31+24]
	978 Move X30, [X31+48]
	979 Call RemotingConfiguration.RegisterClientProviderTemplate, X0
	980 Return 
	981 Move X8, 0xEA8000
	982 Move X8, [X8+440]
	983 Move X21, [X8]
	984 Move X8, [X21+56]
	985 Compare X8, 0
	986 JumpIfNotEqual {990}
	987 Move X0, X21
	988 Call 0x1C5D6E0
	989 Move X8, [X21+56]
	990 Move X0, [X8+16]
	991 Move W8, [X0+309]
	992 Move TEMP, X8
	993 And TEMP, TEMP, 1
	994 Compare TEMP, 1
	995 JumpIfEqual {997}
	996 Call 0x1C5D684
	997 Move W8, [X0+224]
	998 Compare W8, 0
	999 JumpIfNotEqual {1001}
	1000 Call 0x1C17DFC
	1001 Move X8, [X21+56]
	1002 Move X0, [X8+16]
	1003 Move W8, [X0+309]
	1004 Move TEMP, X8
	1005 And TEMP, TEMP, 1
	1006 Compare TEMP, 1
	1007 JumpIfEqual {1009}
	1008 Call 0x1C5D684
	1009 Move X8, [X0+184]
	1010 Move X2, [X8]
	1011 Move X0, 0xEAA000
	1012 Move X0, [X0+200]
	1013 Call 0x1C17D08
	1014 Move X19, X0
	1015 Move X0, 0xEAA000
	1016 Move X0, [X0+208]
	1017 Call 0x1C17D08
	1018 Move X2, X0
	1019 Move X0, X19
	1020 Move X1, X20
	1021 Move X3, X31
	1022 Call String.Concat, X0, X1, X2
	1023 Move X19, X0
	1024 Move X0, 0xEA9000
	1025 Move X0, [X0+3360]
	1026 Call 0x1C17D08
	1027 Call 0x1C17F10
	1028 Move X1, X19
	1029 Move X20, X0
	1030 Call RemotingException..ctor, X0, X1
	1031 Move X0, 0xEAA000
	1032 Move X0, [X0+216]
	1033 Call 0x1C17D08
	1034 Move X1, X0
	1035 Move X0, X20
	1036 Call 0x1C17DEC
	1037 Call 0x1C17F20
	1038 Call 0x1C17F28

Method: System.Void OnEndElement(System.String name)

Disassembly:
	0x0327D5EC LDRB W8, [X25 + 0x30]
	0x0327D5F0 CBZ W8, 0x327D6DC
	0x0327D5F4 LDR X8, [X25]
	0x0327D5F8 LDR X24, [X25 + 0x28]
	0x0327D5FC LDP X9, X1, [X8 + 0x188]
	0x0327D600 MOV X0, X25
	0x0327D604 BLR X9
	0x0327D608 MOV X26, X0
	0x0327D60C LDR X0, [X27]
	0x0327D610 LDR W8, [X0 + 0xE0]
	0x0327D614 CBNZ W8, 0x327D61C
	0x0327D618 BL 0x1C16DFC
	0x0327D61C MOV X0, X24
	0x0327D620 MOV X1, X26
	0x0327D624 BL 0x3284430
	0x0327D628 LDR X8, [X25]
	0x0327D62C MOV X24, X0
	0x0327D630 LDP X9, X1, [X8 + 0x178]
	0x0327D634 MOV X0, X25
	0x0327D638 BLR X9
	0x0327D63C TBZ X0, 0x0, 0x327D690
	0x0327D640 CBZ X21, 0x327D77C
	0x0327D644 LDR X25, [X21 + 0x10]
	0x0327D648 CBNZ X25, 0x327D670
	0x0327D64C ADRP X8, 0xEA6000
	0x0327D650 LDR X8, [X8 + 0xDB8]
	0x0327D654 LDR X0, [X8]
	0x0327D658 BL 0x1C16F10
	0x0327D65C MOV X25, X0
	0x0327D660 MOV X1, X31
	0x0327D664 BL 0x335A0A0
	0x0327D668 STR X25, [X21 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+40]
	006 Move X20, X1
	007 Compare X0, 0
	008 JumpIfEqual {23}
	009 Move X8, [X0]
	010 Move X9, [X8+600]
	011 Move X1, [X8+608]
	012 NotImplemented "Instruction BLR not yet implemented."
	013 Move X0, [X19+40]
	014 Compare X0, 0
	015 JumpIfEqual {40}
	016 Move X8, [X0]
	017 Move X9, [X8+472]
	018 Move X1, [X8+480]
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Compare W0, 0
	021 JumpIfNotEqual {23}
	022 Move [X19+40], X31
	023 Move X0, [X19+64]
	024 Compare X0, 0
	025 JumpIfEqual {40}
	026 Compare X20, 0
	027 JumpIfEqual {40}
	028 Move W8, [X20+16]
	029 Move W9, [X0+16]
	030 Move W1, W31
	031 Move X3, X31
	032 NotImplemented "Instruction ORN not yet implemented."
	033 Add W2, W9, W8
	034 Call String.Substring, X0, X1, X2
	035 Move [X19+64], X0
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Return 
	040 Call 0x1C17F20

Method: System.Void ReadCustomProviderData(System.String name, Mono.Xml.SmallXmlParser/IAttrList attrs)

Disassembly:
	0x0327BCD8 BL 0x1C16F10
	0x0327BCDC MOV X19, X0
	0x0327BCE0 ADRP X0, 0xEA9000
	0x0327BCE4 LDR X0, [X0 + 0x128]
	0x0327BCE8 BL 0x1C16D08
	0x0327BCEC MOV X1, X0
	0x0327BCF0 MOV X0, X19
	0x0327BCF4 BL 0x3273098
	0x0327BCF8 ADRP X0, 0xEA9000
	0x0327BCFC LDR X0, [X0 + 0x140]
	0x0327BD00 BL 0x1C16D08
	0x0327BD04 MOV X1, X0
	0x0327BD08 MOV X0, X19
	0x0327BD0C BL 0x1C16DEC
	0x0327BD10 STR X30, [X31 - 0x40]!
	0x0327BD14 STP X24, X23, [X31 + 0x10]
	0x0327BD18 STP X22, X21, [X31 + 0x20]
	0x0327BD1C STP X20, X19, [X31 + 0x30]
	0x0327BD20 ADRP X22, 0x1161000
	0x0327BD24 ADRP X24, 0xEA8000
	0x0327BD28 ADRP X21, 0xE80000
	0x0327BD2C ADRP X23, 0xEA8000
	0x0327BD30 LDRB W8, [X22 + 0x5F7]
	0x0327BD34 LDR X24, [X24 + 0xFF0]
	0x0327BD38 LDR X21, [X21 + 0x5E8]
	0x0327BD3C LDR X23, [X23 + 0xE90]
	0x0327BD40 MOV X20, X1
	0x0327BD44 MOV X19, X0
	0x0327BD48 TBNZ X8, 0x0, 0x327BD78
	0x0327BD4C ADRP X0, 0xEA8000
	0x0327BD50 LDR X0, [X0 + 0xE90]
	0x0327BD54 BL 0x1C16CF4
	0x0327BD58 ADRP X0, 0xEA8000
	0x0327BD5C LDR X0, [X0 + 0xFF0]
	0x0327BD60 BL 0x1C16CF4
	0x0327BD64 ADRP X0, 0xE80000
	0x0327BD68 LDR X0, [X0 + 0x5E8]
	0x0327BD6C BL 0x1C16CF4
	0x0327BD70 MOVZ W8, 0x1
	0x0327BD74 STRB W8, [X22 + 0x5F7]
	0x0327BD78 LDR X2, [X24]
	0x0327BD7C MOV X1, X20
	0x0327BD80 BL 0x327CC28
	0x0327BD84 LDR X2, [X21]
	0x0327BD88 MOV X1, X20
	0x0327BD8C MOV X21, X0
	0x0327BD90 BL 0x327CC28
	0x0327BD94 ADD X1, X31, 0x8
	0x0327BD98 STR X0, [X31 + 0x8]
	0x0327BD9C BL 0x327CD58
	0x0327BDA0 LDR X8, [X23]
	0x0327BDA4 LDR X19, [X19 + 0x10]
	0x0327BDA8 LDR X22, [X31 + 0x8]
	0x0327BDAC MOV X23, X0
	0x0327BDB0 MOV X0, X8
	0x0327BDB4 BL 0x1C16F10
	0x0327BDB8 MOV X1, X22
	0x0327BDBC MOV X2, X23
	0x0327BDC0 MOV X3, X21
	0x0327BDC4 MOV X20, X0
	0x0327BDC8 BL 0x327CE18
	0x0327BDCC CBZ X19, 0x327BDF8
	0x0327BDD0 LDR X8, [X19]
	0x0327BDD4 MOV X0, X19
	0x0327BDD8 MOV X1, X20
	0x0327BDDC LDP X20, X19, [X31 + 0x30]
	0x0327BDE0 LDR X3, [X8 + 0x308]
	0x0327BDE4 LDR X2, [X8 + 0x310]
	0x0327BDE8 LDP X22, X21, [X31 + 0x20]
	0x0327BDEC LDP X24, X23, [X31 + 0x10]
	0x0327BDF0 LDR X30, [X31], #0x40
	0x0327BDF4 BR X3
	0x0327BDF8 BL 0x1C16F20
	0x0327BDFC SUB X31, X31, 0x50
	0x0327BE00 STP X30, X25, [X31 + 0x10]
	0x0327BE04 STP X24, X23, [X31 + 0x20]
	0x0327BE08 STP X22, X21, [X31 + 0x30]
	0x0327BE0C STP X20, X19, [X31 + 0x40]
	0x0327BE10 ADRP X24, 0x1161000
	0x0327BE14 ADRP X25, 0xEA9000
	0x0327BE18 ADRP X20, 0xEA9000
	0x0327BE1C ADRP X22, 0xE80000
	0x0327BE20 ADRP X23, 0xEA9000
	0x0327BE24 LDRB W8, [X24 + 0x5F8]
	0x0327BE28 LDR X25, [X25 + 0x148]
	0x0327BE2C LDR X20, [X20 + 0x68]
	0x0327BE30 LDR X22, [X22 + 0x5E8]
	0x0327BE34 LDR X23, [X23 + 0x150]
	0x0327BE38 MOV X21, X1
	0x0327BE3C MOV X19, X0
	0x0327BE40 TBNZ X8, 0x0, 0x327BE94
	0x0327BE44 ADRP X0, 0xEA8000
	0x0327BE48 LDR X0, [X0 + 0xF78]
	0x0327BE4C BL 0x1C16CF4
	0x0327BE50 ADRP X0, 0xEA9000
	0x0327BE54 LDR X0, [X0 + 0x158]
	0x0327BE58 BL 0x1C16CF4
	0x0327BE5C ADRP X0, 0xEA9000
	0x0327BE60 LDR X0, [X0 + 0x150]
	0x0327BE64 BL 0x1C16CF4
	0x0327BE68 ADRP X0, 0xEA9000
	0x0327BE6C LDR X0, [X0 + 0x68]
	0x0327BE70 BL 0x1C16CF4
	0x0327BE74 ADRP X0, 0xEA9000
	0x0327BE78 LDR X0, [X0 + 0x148]
	0x0327BE7C BL 0x1C16CF4
	0x0327BE80 ADRP X0, 0xE80000
	0x0327BE84 LDR X0, [X0 + 0x5E8]
	0x0327BE88 BL 0x1C16CF4
	0x0327BE8C MOVZ W8, 0x1
	0x0327BE90 STRB W8, [X24 + 0x5F8]
	0x0327BE94 LDR X2, [X25]
	0x0327BE98 MOV X1, X21
	0x0327BE9C BL 0x327CC28
	0x0327BEA0 LDR X2, [X20]
	0x0327BEA4 MOV X1, X21
	0x0327BEA8 MOV X20, X0
	0x0327BEAC BL 0x327CC28
	0x0327BEB0 LDR X2, [X22]
	0x0327BEB4 MOV X1, X21
	0x0327BEB8 MOV X22, X0
	0x0327BEBC BL 0x327CC28
	0x0327BEC0 ADD X1, X31, 0x8
	0x0327BEC4 STR X0, [X31 + 0x8]
	0x0327BEC8 BL 0x327CD58
	0x0327BECC LDR X1, [X23]
	0x0327BED0 MOV X21, X0
	0x0327BED4 MOV X0, X22
	0x0327BED8 MOV X2, X31
	0x0327BEDC BL 0x321BA08
	0x0327BEE0 TBZ X0, 0x0, 0x327BEEC
	0x0327BEE4 MOVZ W22, 0x2
	0x0327BEE8 B 0x327BF0C
	0x0327BEEC ADRP X8, 0xEA9000
	0x0327BEF0 LDR X8, [X8 + 0x158]
	0x0327BEF4 MOV X0, X22
	0x0327BEF8 MOV X2, X31
	0x0327BEFC LDR X1, [X8]
	0x0327BF00 BL 0x321BA08
	0x0327BF04 TBZ X0, 0x0, 0x327BF70
	0x0327BF08 MOVZ W22, 0x1
	0x0327BF0C ADRP X8, 0xEA8000
	0x0327BF10 LDR X8, [X8 + 0xF78]
	0x0327BF14 LDR X19, [X19 + 0x10]
	0x0327BF18 LDR X24, [X31 + 0x8]
	0x0327BF1C LDR X0, [X8]
	0x0327BF20 BL 0x1C16F10
	0x0327BF24 MOV X1, X24
	0x0327BF28 MOV X2, X21
	0x0327BF2C MOV X3, X20
	0x0327BF30 MOV W4, W22
	0x0327BF34 MOV X23, X0
	0x0327BF38 BL 0x327CF40
	0x0327BF3C CBZ X19, 0x327BF6C
	0x0327BF40 LDR X8, [X19]
	0x0327BF44 MOV X0, X19
	0x0327BF48 MOV X1, X23
	0x0327BF4C LDP X20, X19, [X31 + 0x40]
	0x0327BF50 LDR X3, [X8 + 0x308]
	0x0327BF54 LDR X2, [X8 + 0x310]
	0x0327BF58 LDP X22, X21, [X31 + 0x30]
	0x0327BF5C LDP X24, X23, [X31 + 0x20]
	0x0327BF60 LDP X30, X25, [X31 + 0x10]
	0x0327BF64 ADD X31, X31, 0x50
	0x0327BF68 BR X3
	0x0327BF6C BL 0x1C16F20
	0x0327BF70 ADRP X0, 0xEA9000
	0x0327BF74 LDR X0, [X0 + 0x160]
	0x0327BF78 BL 0x1C16D08
	0x0327BF7C MOV X19, X0
	0x0327BF80 ADRP X0, 0xEA9000
	0x0327BF84 LDR X0, [X0 + 0x168]
	0x0327BF88 BL 0x1C16D08
	0x0327BF8C MOV X2, X0
	0x0327BF90 MOV X0, X19
	0x0327BF94 MOV X1, X22
	0x0327BF98 MOV X3, X31
	0x0327BF9C BL 0x32274B8
	0x0327BFA0 MOV X19, X0
	0x0327BFA4 ADRP X0, 0xEA8000
	0x0327BFA8 LDR X0, [X0 + 0xD20]
	0x0327BFAC BL 0x1C16D08
	0x0327BFB0 BL 0x1C16F10
	0x0327BFB4 MOV X1, X19
	0x0327BFB8 MOV X20, X0
	0x0327BFBC BL 0x3273098
	0x0327BFC0 ADRP X0, 0xEA9000
	0x0327BFC4 LDR X0, [X0 + 0x170]
	0x0327BFC8 BL 0x1C16D08
	0x0327BFCC MOV X1, X0
	0x0327BFD0 MOV X0, X20
	0x0327BFD4 BL 0x1C16DEC
	0x0327BFD8 SUB X31, X31, 0x40
	0x0327BFDC STP X30, X23, [X31 + 0x10]
	0x0327BFE0 STP X22, X21, [X31 + 0x20]
	0x0327BFE4 STP X20, X19, [X31 + 0x30]
	0x0327BFE8 ADRP X21, 0x1161000
	0x0327BFEC ADRP X22, 0xE80000
	0x0327BFF0 LDRB W8, [X21 + 0x5F5]
	0x0327BFF4 LDR X22, [X22 + 0x5E8]
	0x0327BFF8 MOV X20, X1
	0x0327BFFC MOV X19, X0
	0x0327C000 TBNZ X8, 0x0, 0x327C030
	0x0327C004 ADRP X0, 0xEA7000
	0x0327C008 LDR X0, [X0 + 0xE88]
	0x0327C00C BL 0x1C16CF4
	0x0327C010 ADRP X0, 0xE77000
	0x0327C014 LDR X0, [X0 + 0x988]
	0x0327C018 BL 0x1C16CF4
	0x0327C01C ADRP X0, 0xE7F000
	0x0327C020 LDR X0, [X0 + 0x5E8]
	0x0327C024 BL 0x1C16CF4
	0x0327C028 MOVZ W8, 0x1
	0x0327C02C STRB W8, [X21 + 0x5F5]
	0x0327C030 LDR X2, [X22]
	0x0327C034 MOV X1, X20

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X20, 0x1162000
	014 Move W8, [X20+1520]
	015 Move X21, X2
	016 Move X23, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {36}
	022 Move X0, 0xEA7000
	023 Move X0, [X0+2296]
	024 Call 0x1C17CF4
	025 Move X0, 0xE79000
	026 Move X0, [X0+2072]
	027 Call 0x1C17CF4
	028 Move X0, 0xE80000
	029 Move X0, [X0+760]
	030 Call 0x1C17CF4
	031 Move X0, 0xEA9000
	032 Move X0, [X0+3840]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X20+1520], W8
	036 Move X0, [X19+40]
	037 Compare X0, 0
	038 JumpIfEqual {228}
	039 Move X8, [X0]
	040 Move X20, 0xEA9000
	041 Move X9, [X8+584]
	042 Move X1, [X8+592]
	043 Move X20, [X20+3840]
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move X1, [X20]
	046 Move X22, X0
	047 Compare X0, 0
	048 JumpIfEqual {57}
	049 Move X8, [X22]
	050 Move W9, [X1+304]
	051 Move W10, [X8+304]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X8, [X8+200]
	054 Add X8, X8, X9
	055 NotImplemented "Instruction LDUR not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X0, X1
	058 Call 0x1C17F10
	059 Move X1, X23
	060 Move X2, X31
	061 Move X20, X0
	062 Call SinkProviderData..ctor, X0, X1
	063 Compare X21, 0
	064 JumpIfEqual {228}
	065 Move X28, 0xEA7000
	066 Move X29, 0xE79000
	067 Move X27, 0xE80000
	068 Move X28, [X28+2296]
	069 Move X29, [X29+2072]
	070 Move X27, [X27+760]
	071 Move X23, X31
	072 Move X8, [X21]
	073 Move X1, [X28]
	074 NotImplemented "Instruction LDRH not yet implemented."
	075 Compare X9, 0
	076 JumpIfEqual {83}
	077 Move X10, [X8+176]
	078 Add X10, X10, 8
	079 NotImplemented "Instruction LDUR not yet implemented."
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Subtract X9, X9, 1
	082 Add X10, X10, 16
	083 Move W2, 4
	084 Move X0, X21
	085 Call 0x1C5D788
	086 Move W9, [X10]
	087 Add W9, W9, 4
	088 Add X8, X8, W9
	089 Add X0, X8, 312
	090 Move X8, [X0]
	091 Move X1, [X0+8]
	092 Move X0, X21
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Compare X0, 0
	095 JumpIfEqual {228}
	096 NotImplemented "Instruction LDRSW not yet implemented."
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Compare X20, 0
	099 JumpIfEqual {228}
	100 Move X8, [X21]
	101 Move X24, [X20+32]
	102 Move X1, [X28]
	103 NotImplemented "Instruction LDRH not yet implemented."
	104 Compare X9, 0
	105 JumpIfEqual {112}
	106 Move X10, [X8+176]
	107 Add X10, X10, 8
	108 NotImplemented "Instruction LDUR not yet implemented."
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Subtract X9, X9, 1
	111 Add X10, X10, 16
	112 Move W2, 4
	113 Move X0, X21
	114 Call 0x1C5D788
	115 Move W9, [X10]
	116 Add W9, W9, 4
	117 Add X8, X8, W9
	118 Add X0, X8, 312
	119 Move X8, [X0]
	120 Move X1, [X0+8]
	121 Move X0, X21
	122 NotImplemented "Instruction BLR not yet implemented."
	123 Compare X0, 0
	124 JumpIfEqual {228}
	125 Move W8, [X0+24]
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move X8, [X21]
	128 Add X9, X0, X23
	129 Move X25, [X9+32]
	130 Move X1, [X28]
	131 NotImplemented "Instruction LDRH not yet implemented."
	132 Compare X9, 0
	133 JumpIfEqual {140}
	134 Move X10, [X8+176]
	135 Add X10, X10, 8
	136 NotImplemented "Instruction LDUR not yet implemented."
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Subtract X9, X9, 1
	139 Add X10, X10, 16
	140 Move W2, 2
	141 Move X0, X21
	142 Call 0x1C5D788
	143 Move W9, [X10]
	144 Add W9, W9, 2
	145 Add X8, X8, W9
	146 Add X0, X8, 312
	147 Move X8, [X0]
	148 Move X2, [X0+8]
	149 Move X0, X21
	150 Move W1, W23
	151 NotImplemented "Instruction BLR not yet implemented."
	152 Compare X24, 0
	153 JumpIfEqual {228}
	154 Move X8, [X24]
	155 Move X1, [X29]
	156 Move X26, X0
	157 NotImplemented "Instruction LDRH not yet implemented."
	158 Compare X9, 0
	159 JumpIfEqual {166}
	160 Move X10, [X8+176]
	161 Add X10, X10, 8
	162 NotImplemented "Instruction LDUR not yet implemented."
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Subtract X9, X9, 1
	165 Add X10, X10, 16
	166 Move W2, 1
	167 Move X0, X24
	168 Call 0x1C5D788
	169 Move W9, [X10]
	170 Add W9, W9, 1
	171 Add X8, X8, W9
	172 Add X0, X8, 312
	173 Move X8, [X0]
	174 Move X3, [X0+8]
	175 Move X0, X24
	176 Move X1, X25
	177 Move X2, X26
	178 NotImplemented "Instruction BLR not yet implemented."
	179 Add X23, X23, 1
	180 Compare X22, 0
	181 JumpIfEqual {228}
	182 Move X21, [X22+24]
	183 Compare X21, 0
	184 JumpIfEqual {228}
	185 Move X8, [X21]
	186 Move X1, [X27]
	187 NotImplemented "Instruction LDRH not yet implemented."
	188 Compare X9, 0
	189 JumpIfEqual {196}
	190 Move X10, [X8+176]
	191 Add X10, X10, 8
	192 NotImplemented "Instruction LDUR not yet implemented."
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Subtract X9, X9, 1
	195 Add X10, X10, 16
	196 Move W2, 2
	197 Move X0, X21
	198 Call 0x1C5D788
	199 Move W9, [X10]
	200 Add W9, W9, 2
	201 Add X8, X8, W9
	202 Add X0, X8, 312
	203 Move X8, [X0]
	204 Move X2, [X0+8]
	205 Move X0, X21
	206 Move X1, X20
	207 NotImplemented "Instruction BLR not yet implemented."
	208 Move X0, [X19+40]
	209 Compare X0, 0
	210 JumpIfEqual {228}
	211 Move X8, [X0]
	212 Move X1, X20
	213 Move X20, [X31+80]
	214 Move X19, [X31+88]
	215 Move X22, [X31+64]
	216 Move X21, [X31+72]
	217 Move X3, [X8+616]
	218 Move X2, [X8+624]
	219 Move X24, [X31+48]
	220 Move X23, [X31+56]
	221 Move X26, [X31+32]
	222 Move X25, [X31+40]
	223 Move X28, [X31+16]
	224 Move X27, [X31+24]
	225 Move X29, [X31+96]
	226 Move X30, [X31+104]
	227 CallNoReturn X3
	228 Call 0x1C17F20
	229 Call 0x1C17F28
	230 Move X0, X22
	231 Call 0x1C181E0

Method: System.Void ReadLifetine(Mono.Xml.SmallXmlParser/IAttrList attrs)

Disassembly:
	0x0327C038 BL 0x327CC28
	0x0327C03C ADD X1, X31, 0x8
	0x0327C040 STR X0, [X31 + 0x8]
	0x0327C044 BL 0x327CD58
	0x0327C048 LDR X8, [X19 + 0x30]
	0x0327C04C CBZ X8, 0x327C0CC
	0x0327C050 ADRP X9, 0xE77000
	0x0327C054 LDR X9, [X9 + 0x988]
	0x0327C058 MOV X20, X0
	0x0327C05C MOV X0, X8
	0x0327C060 MOV X2, X31
	0x0327C064 LDR X1, [X9]
	0x0327C068 BL 0x321BA08
	0x0327C06C TBNZ X0, 0x0, 0x327C0CC
	0x0327C070 ADRP X8, 0xEA7000
	0x0327C074 LDR X8, [X8 + 0xE88]
	0x0327C078 LDR X21, [X19 + 0x10]
	0x0327C07C LDR X22, [X31 + 0x8]
	0x0327C080 LDR X23, [X19 + 0x30]
	0x0327C084 LDR X0, [X8]
	0x0327C088 BL 0x1C16F10
	0x0327C08C MOV X1, X22
	0x0327C090 MOV X2, X20
	0x0327C094 MOV X3, X23
	0x0327C098 MOV X19, X0
	0x0327C09C BL 0x3272F68
	0x0327C0A0 CBZ X21, 0x327C110
	0x0327C0A4 LDR X8, [X21]
	0x0327C0A8 MOV X0, X21
	0x0327C0AC MOV X1, X19
	0x0327C0B0 LDP X20, X19, [X31 + 0x30]
	0x0327C0B4 LDR X3, [X8 + 0x308]
	0x0327C0B8 LDR X2, [X8 + 0x310]
	0x0327C0BC LDP X22, X21, [X31 + 0x20]
	0x0327C0C0 LDP X30, X23, [X31 + 0x10]
	0x0327C0C4 ADD X31, X31, 0x40
	0x0327C0C8 BR X3
	0x0327C0CC ADRP X0, 0xEA7000
	0x0327C0D0 LDR X0, [X0 + 0xD20]
	0x0327C0D4 BL 0x1C16D08
	0x0327C0D8 BL 0x1C16F10
	0x0327C0DC MOV X19, X0
	0x0327C0E0 ADRP X0, 0xEA8000
	0x0327C0E4 LDR X0, [X0 + 0x178]
	0x0327C0E8 BL 0x1C16D08
	0x0327C0EC MOV X1, X0
	0x0327C0F0 MOV X0, X19
	0x0327C0F4 BL 0x3273098
	0x0327C0F8 ADRP X0, 0xEA8000
	0x0327C0FC LDR X0, [X0 + 0x180]
	0x0327C100 BL 0x1C16D08
	0x0327C104 MOV X1, X0
	0x0327C108 MOV X0, X19
	0x0327C10C BL 0x1C16DEC
	0x0327C110 BL 0x1C16F20
	0x0327C114 SUB X31, X31, 0x40
	0x0327C118 STP X30, X23, [X31 + 0x10]
	0x0327C11C STP X22, X21, [X31 + 0x20]
	0x0327C120 STP X20, X19, [X31 + 0x30]
	0x0327C124 ADRP X21, 0x1160000
	0x0327C128 ADRP X23, 0xE7F000
	0x0327C12C ADRP X22, 0xEA7000
	0x0327C130 LDRB W8, [X21 + 0x5F6]
	0x0327C134 LDR X23, [X23 + 0x5E8]
	0x0327C138 LDR X22, [X22 + 0xF68]
	0x0327C13C MOV X20, X1
	0x0327C140 MOV X19, X0
	0x0327C144 TBNZ X8, 0x0, 0x327C168
	0x0327C148 ADRP X0, 0xEA7000
	0x0327C14C LDR X0, [X0 + 0xF68]
	0x0327C150 BL 0x1C16CF4
	0x0327C154 ADRP X0, 0xE7F000
	0x0327C158 LDR X0, [X0 + 0x5E8]
	0x0327C15C BL 0x1C16CF4
	0x0327C160 MOVZ W8, 0x1
	0x0327C164 STRB W8, [X21 + 0x5F6]
	0x0327C168 LDR X2, [X23]
	0x0327C16C MOV X1, X20
	0x0327C170 BL 0x327CC28
	0x0327C174 ADD X1, X31, 0x8
	0x0327C178 STR X0, [X31 + 0x8]
	0x0327C17C BL 0x327CD58
	0x0327C180 LDR X8, [X22]
	0x0327C184 LDR X19, [X19 + 0x10]
	0x0327C188 LDR X21, [X31 + 0x8]
	0x0327C18C MOV X22, X0
	0x0327C190 MOV X0, X8
	0x0327C194 BL 0x1C16F10
	0x0327C198 MOV X1, X21
	0x0327C19C MOV X2, X22
	0x0327C1A0 MOV X20, X0
	0x0327C1A4 BL 0x32730CC
	0x0327C1A8 CBZ X19, 0x327C1D4
	0x0327C1AC LDR X8, [X19]
	0x0327C1B0 MOV X0, X19
	0x0327C1B4 MOV X1, X20
	0x0327C1B8 LDP X20, X19, [X31 + 0x30]
	0x0327C1BC LDR X3, [X8 + 0x308]
	0x0327C1C0 LDR X2, [X8 + 0x310]
	0x0327C1C4 LDP X22, X21, [X31 + 0x20]
	0x0327C1C8 LDP X30, X23, [X31 + 0x10]
	0x0327C1CC ADD X31, X31, 0x40
	0x0327C1D0 BR X3
	0x0327C1D4 BL 0x1C16F20
	0x0327C1D8 STR X30, [X31 - 0x40]!
	0x0327C1DC STP X24, X23, [X31 + 0x10]
	0x0327C1E0 STP X22, X21, [X31 + 0x20]
	0x0327C1E4 STP X20, X19, [X31 + 0x30]
	0x0327C1E8 ADRP X23, 0x1160000
	0x0327C1EC ADRP X22, 0xEA8000
	0x0327C1F0 ADRP X20, 0xE77000
	0x0327C1F4 LDRB W8, [X23 + 0x5F9]
	0x0327C1F8 LDR X22, [X22 + 0x188]
	0x0327C1FC LDR X20, [X20 + 0x6C0]
	0x0327C200 MOV W19, W2
	0x0327C204 MOV X21, X1
	0x0327C208 TBNZ X8, 0x0, 0x327C25C
	0x0327C20C ADRP X0, 0xEA8000
	0x0327C210 LDR X0, [X0 + 0x190]
	0x0327C214 BL 0x1C16CF4
	0x0327C218 ADRP X0, 0xEA8000
	0x0327C21C LDR X0, [X0 + 0x198]
	0x0327C220 BL 0x1C16CF4
	0x0327C224 ADRP X0, 0xEA0000
	0x0327C228 LDR X0, [X0 + 0x1B0]
	0x0327C22C BL 0x1C16CF4
	0x0327C230 ADRP X0, 0xE77000
	0x0327C234 LDR X0, [X0 + 0x6C0]
	0x0327C238 BL 0x1C16CF4
	0x0327C23C ADRP X0, 0xEA8000
	0x0327C240 LDR X0, [X0 + 0x1A0]
	0x0327C244 BL 0x1C16CF4
	0x0327C248 ADRP X0, 0xEA8000
	0x0327C24C LDR X0, [X0 + 0x188]
	0x0327C250 BL 0x1C16CF4
	0x0327C254 MOVZ W8, 0x1
	0x0327C258 STRB W8, [X23 + 0x5F9]
	0x0327C25C LDR X2, [X22]
	0x0327C260 ADRP X24, 0xEA0000
	0x0327C264 ADRP X23, 0xEA8000
	0x0327C268 ADRP X22, 0xEA8000
	0x0327C26C LDR X24, [X24 + 0x1B0]
	0x0327C270 LDR X23, [X23 + 0x190]
	0x0327C274 LDR X22, [X22 + 0x1A0]
	0x0327C278 MOV X1, X21
	0x0327C27C BL 0x327CC28
	0x0327C280 LDR X8, [X20]
	0x0327C284 MOV X20, X0
	0x0327C288 LDR W9, [X8 + 0xE0]
	0x0327C28C CBNZ W9, 0x327C298
	0x0327C290 MOV X0, X8
	0x0327C294 BL 0x1C16DFC
	0x0327C298 LDR X1, [X24]
	0x0327C29C LDR X2, [X23]
	0x0327C2A0 MOV X0, X20
	0x0327C2A4 BL 0x1C1703C
	0x0327C2A8 LDR X2, [X22]
	0x0327C2AC MOV X1, X21
	0x0327C2B0 MOV X20, X0
	0x0327C2B4 BL 0x327CC28
	0x0327C2B8 CBZ X0, 0x327C36C
	0x0327C2BC MOVZ W1, 0x2C
	0x0327C2C0 MOV W2, W31
	0x0327C2C4 MOV X3, X31
	0x0327C2C8 BL 0x3229AE8
	0x0327C2CC CBZ X0, 0x327C36C
	0x0327C2D0 LDR W8, [X0 + 0x18]
	0x0327C2D4 MOV X22, X0
	0x0327C2D8 CBZ W8, 0x327C370
	0x0327C2DC LDR X0, [X22 + 0x20]
	0x0327C2E0 CBZ X0, 0x327C36C
	0x0327C2E4 MOV X1, X31
	0x0327C2E8 BL 0x322B8DC
	0x0327C2EC LDR X8, [X22 + 0x18]
	0x0327C2F0 MOV X21, X0
	0x0327C2F4 CBZ X8, 0x327C318
	0x0327C2F8 CMP W8, 0x1
	0x0327C2FC B.LS 0x327C370
	0x0327C300 LDR X0, [X22 + 0x28]
	0x0327C304 CBZ X0, 0x327C36C
	0x0327C308 MOV X1, X31
	0x0327C30C BL 0x322B8DC
	0x0327C310 MOV X22, X0
	0x0327C314 B 0x327C31C
	0x0327C318 MOV X22, X31
	0x0327C31C ADRP X8, 0xEA8000
	0x0327C320 LDR X8, [X8 + 0x198]
	0x0327C324 LDR X0, [X8]
	0x0327C328 LDR W8, [X0 + 0xE0]
	0x0327C32C CBNZ W8, 0x327C334
	0x0327C330 BL 0x1C16DFC
	0x0327C334 MOV X0, X21
	0x0327C338 MOV X1, X22
	0x0327C33C MOV X2, X20
	0x0327C340 TBZ X19, 0x0, 0x327C358
	0x0327C344 LDP X20, X19, [X31 + 0x30]
	0x0327C348 LDP X22, X21, [X31 + 0x20]
	0x0327C34C LDP X24, X23, [X31 + 0x10]
	0x0327C350 LDR X30, [X31], #0x40
	0x0327C354 B 0x327D074
	0x0327C358 LDP X20, X19, [X31 + 0x30]
	0x0327C35C LDP X22, X21, [X31 + 0x20]
	0x0327C360 LDP X24, X23, [X31 + 0x10]
	0x0327C364 LDR X30, [X31], #0x40
	0x0327C368 B 0x327D200
	0x0327C36C BL 0x1C16F20
	0x0327C370 BL 0x1C16F28
	0x0327C374 STR X30, [X31 - 0x30]!
	0x0327C378 STP X22, X21, [X31 + 0x10]
	0x0327C37C STP X20, X19, [X31 + 0x20]
	0x0327C380 ADRP X20, 0x1160000
	0x0327C384 LDRB W8, [X20 + 0x5FA]
	0x0327C388 MOV X19, X1
	0x0327C38C TBNZ X8, 0x0, 0x327C3EC
	0x0327C390 ADRP X0, 0xEA8000
	0x0327C394 LDR X0, [X0 + 0x1A8]
	0x0327C398 BL 0x1C16CF4
	0x0327C39C ADRP X0, 0xEA5000
	0x0327C3A0 LDR X0, [X0 + 0x8F8]
	0x0327C3A4 BL 0x1C16CF4
	0x0327C3A8 ADRP X0, 0xEA8000
	0x0327C3AC LDR X0, [X0 + 0x198]
	0x0327C3B0 BL 0x1C16CF4
	0x0327C3B4 ADRP X0, 0xEA0000
	0x0327C3B8 LDR X0, [X0 + 0x1B0]
	0x0327C3BC BL 0x1C16CF4
	0x0327C3C0 ADRP X0, 0xE77000
	0x0327C3C4 LDR X0, [X0 + 0x6C0]
	0x0327C3C8 BL 0x1C16CF4
	0x0327C3CC ADRP X0, 0xEA8000
	0x0327C3D0 LDR X0, [X0 + 0x1B0]
	0x0327C3D4 BL 0x1C16CF4
	0x0327C3D8 ADRP X0, 0xE7F000
	0x0327C3DC LDR X0, [X0 + 0x5E8]
	0x0327C3E0 BL 0x1C16CF4
	0x0327C3E4 MOVZ W8, 0x1
	0x0327C3E8 STRB W8, [X20 + 0x5FA]
	0x0327C3EC CBZ X19, 0x327C584
	0x0327C3F0 ADRP X21, 0xEA5000
	0x0327C3F4 ADRP X10, 0xE7F000
	0x0327C3F8 LDR X8, [X19]
	0x0327C3FC LDR X21, [X21 + 0x8F8]
	0x0327C400 LDR X10, [X10 + 0x5E8]
	0x0327C404 ADRP X22, 0xEA8000
	0x0327C408 LDRH W9, [X8 + 0x12E]
	0x0327C40C LDR X1, [X21]
	0x0327C410 LDR X20, [X10]
	0x0327C414 LDR X22, [X22 + 0x1B0]
	0x0327C418 CBZ X9, 0x327C43C
	0x0327C41C LDR X10, [X8 + 0xB0]
	0x0327C420 ADD X10, X10, 0x8
	0x0327C424 LDUR X11, [X10 - 0x8]
	0x0327C428 CMP X11, X1
	0x0327C42C B.EQ 0x327C44C
	0x0327C430 SUBS X9, X9, 0x1
	0x0327C434 ADD X10, X10, 0x10
	0x0327C438 B.NE 0x327C424
	0x0327C43C MOVZ W2, 0x3
	0x0327C440 MOV X0, X19
	0x0327C444 BL 0x1C5C788
	0x0327C448 B 0x327C45C
	0x0327C44C LDR W9, [X10]
	0x0327C450 ADD W9, W9, 0x3
	0x0327C454 ADD X8, X8, W9, 0x4, SXTW
	0x0327C458 ADD X0, X8, 0x138
	0x0327C45C LDP X8, X2, [X0]
	0x0327C460 MOV X0, X19
	0x0327C464 MOV X1, X20
	0x0327C468 BLR X8
	0x0327C46C LDR X8, [X19]
	0x0327C470 LDR X1, [X21]
	0x0327C474 LDR X21, [X22]
	0x0327C478 MOV X20, X0
	0x0327C47C LDRH W9, [X8 + 0x12E]
	0x0327C480 CBZ X9, 0x327C4A4
	0x0327C484 LDR X10, [X8 + 0xB0]
	0x0327C488 ADD X10, X10, 0x8
	0x0327C48C LDUR X11, [X10 - 0x8]
	0x0327C490 CMP X11, X1
	0x0327C494 B.EQ 0x327C4B4
	0x0327C498 SUBS X9, X9, 0x1
	0x0327C49C ADD X10, X10, 0x10
	0x0327C4A0 B.NE 0x327C48C
	0x0327C4A4 MOVZ W2, 0x3
	0x0327C4A8 MOV X0, X19
	0x0327C4AC BL 0x1C5C788
	0x0327C4B0 B 0x327C4C4
	0x0327C4B4 LDR W9, [X10]
	0x0327C4B8 ADD W9, W9, 0x3
	0x0327C4BC ADD X8, X8, W9, 0x4, SXTW
	0x0327C4C0 ADD X0, X8, 0x138
	0x0327C4C4 LDP X8, X2, [X0]
	0x0327C4C8 MOV X0, X19
	0x0327C4CC MOV X1, X21
	0x0327C4D0 BLR X8
	0x0327C4D4 CBZ X20, 0x327C4DC
	0x0327C4D8 CBNZ X0, 0x327C588
	0x0327C4DC ADRP X19, 0xEA8000
	0x0327C4E0 LDR X19, [X19 + 0x198]
	0x0327C4E4 CBZ X20, 0x327C54C
	0x0327C4E8 ADRP X8, 0xE77000
	0x0327C4EC LDR X8, [X8 + 0x6C0]
	0x0327C4F0 ADRP X22, 0xEA0000
	0x0327C4F4 ADRP X21, 0xEA8000
	0x0327C4F8 LDR X0, [X8]
	0x0327C4FC LDR W8, [X0 + 0xE0]
	0x0327C500 LDR X22, [X22 + 0x1B0]
	0x0327C504 LDR X21, [X21 + 0x1A8]
	0x0327C508 CBNZ W8, 0x327C510
	0x0327C50C BL 0x1C16DFC
	0x0327C510 LDR X1, [X22]
	0x0327C514 LDR X2, [X21]
	0x0327C518 MOV X0, X20
	0x0327C51C BL 0x1C1703C
	0x0327C520 LDR X8, [X19]
	0x0327C524 MOV X19, X0
	0x0327C528 LDR W9, [X8 + 0xE0]
	0x0327C52C CBNZ W9, 0x327C538
	0x0327C530 MOV X0, X8
	0x0327C534 BL 0x1C16DFC
	0x0327C538 MOV X0, X19
	0x0327C53C LDP X20, X19, [X31 + 0x20]
	0x0327C540 LDP X22, X21, [X31 + 0x10]
	0x0327C544 LDR X30, [X31], #0x30
	0x0327C548 B 0x327D38C
	0x0327C54C CBZ X0, 0x327C5A8
	0x0327C550 MOV X1, X31
	0x0327C554 BL 0x32D59A8
	0x0327C558 LDR X8, [X19]
	0x0327C55C MOV X19, X0
	0x0327C560 LDR W9, [X8 + 0xE0]
	0x0327C564 CBNZ W9, 0x327C570
	0x0327C568 MOV X0, X8
	0x0327C56C BL 0x1C16DFC
	0x0327C570 MOV X0, X19
	0x0327C574 LDP X20, X19, [X31 + 0x20]
	0x0327C578 LDP X22, X21, [X31 + 0x10]
	0x0327C57C LDR X30, [X31], #0x30

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X20, 0x1161000
	014 Move W8, [X20+1521]
	015 Move X19, X1
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {40}
	020 Move X0, 0xEA6000
	021 Move X0, [X0+2296]
	022 Call 0x1C17CF4
	023 Move X0, 0xEA9000
	024 Move X0, [X0+224]
	025 Call 0x1C17CF4
	026 Move X0, 0xEA9000
	027 Move X0, [X0+232]
	028 Call 0x1C17CF4
	029 Move X0, 0xEA9000
	030 Move X0, [X0+240]
	031 Call 0x1C17CF4
	032 Move X0, 0xEA9000
	033 Move X0, [X0+248]
	034 Call 0x1C17CF4
	035 Move X0, 0xEA9000
	036 Move X0, [X0+256]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X20+1521], W8
	040 Compare X19, 0
	041 JumpIfEqual {332}
	042 Move X23, 0xEA6000
	043 Move X24, 0xEA9000
	044 Move X21, 0xEA9000
	045 Move X25, 0xEA9000
	046 Move X26, 0xEA9000
	047 Move X23, [X23+2296]
	048 Move X24, [X24+256]
	049 Move X21, [X21+224]
	050 Move X25, [X25+232]
	051 Move X26, [X26+240]
	052 Move X20, X31
	053 Move X28, 0x1161000
	054 Move W29, 1
	055 Move X27, 0x1161000
	056 Move X8, [X19]
	057 Move X1, [X23]
	058 NotImplemented "Instruction LDRH not yet implemented."
	059 Compare X9, 0
	060 JumpIfEqual {67}
	061 Move X10, [X8+176]
	062 Add X10, X10, 8
	063 NotImplemented "Instruction LDUR not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Subtract X9, X9, 1
	066 Add X10, X10, 16
	067 Move W2, 4
	068 Move X0, X19
	069 Call 0x1C5D788
	070 Move W9, [X10]
	071 Add W9, W9, 4
	072 Add X8, X8, W9
	073 Add X0, X8, 312
	074 Move X8, [X0]
	075 Move X1, [X0+8]
	076 Move X0, X19
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Compare X0, 0
	079 JumpIfEqual {332}
	080 NotImplemented "Instruction LDRSW not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X8, [X19]
	083 Move X1, [X23]
	084 NotImplemented "Instruction LDRH not yet implemented."
	085 Compare X9, 0
	086 JumpIfEqual {93}
	087 Move X10, [X8+176]
	088 Add X10, X10, 8
	089 NotImplemented "Instruction LDUR not yet implemented."
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Subtract X9, X9, 1
	092 Add X10, X10, 16
	093 Move W2, 4
	094 Move X0, X19
	095 Call 0x1C5D788
	096 Move W9, [X10]
	097 Add W9, W9, 4
	098 Add X8, X8, W9
	099 Add X0, X8, 312
	100 Move X8, [X0]
	101 Move X1, [X0+8]
	102 Move X0, X19
	103 NotImplemented "Instruction BLR not yet implemented."
	104 Compare X0, 0
	105 JumpIfEqual {332}
	106 Move W8, [X0+24]
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Add X8, X0, X20
	109 Move X22, [X8+32]
	110 Move X1, [X24]
	111 Move X2, X31
	112 Move X0, X22
	113 Call String.op_Equality, X0, X1
	114 Move TEMP, X0
	115 And TEMP, TEMP, 1
	116 Compare TEMP, 1
	117 JumpIfNotEqual {132}
	118 Move X8, [X19]
	119 Move X1, [X23]
	120 NotImplemented "Instruction LDRH not yet implemented."
	121 Compare X9, 0
	122 JumpIfEqual {129}
	123 Move X10, [X8+176]
	124 Add X10, X10, 8
	125 NotImplemented "Instruction LDUR not yet implemented."
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Subtract X9, X9, 1
	128 Add X10, X10, 16
	129 Move W2, 2
	130 Move X0, X19
	131 Call 0x1C5D788
	132 Move X1, [X25]
	133 Move X0, X22
	134 Move X2, X31
	135 Call String.op_Equality, X0, X1
	136 Move TEMP, X0
	137 And TEMP, TEMP, 1
	138 Compare TEMP, 1
	139 JumpIfNotEqual {154}
	140 Move X8, [X19]
	141 Move X1, [X23]
	142 NotImplemented "Instruction LDRH not yet implemented."
	143 Compare X9, 0
	144 JumpIfEqual {151}
	145 Move X10, [X8+176]
	146 Add X10, X10, 8
	147 NotImplemented "Instruction LDUR not yet implemented."
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Subtract X9, X9, 1
	150 Add X10, X10, 16
	151 Move W2, 2
	152 Move X0, X19
	153 Call 0x1C5D788
	154 Move X1, [X26]
	155 Move X0, X22
	156 Move X2, X31
	157 Call String.op_Equality, X0, X1
	158 Move TEMP, X0
	159 And TEMP, TEMP, 1
	160 Compare TEMP, 1
	161 JumpIfNotEqual {208}
	162 Move X8, [X19]
	163 Move X1, [X23]
	164 NotImplemented "Instruction LDRH not yet implemented."
	165 Compare X9, 0
	166 JumpIfEqual {173}
	167 Move X10, [X8+176]
	168 Add X10, X10, 8
	169 NotImplemented "Instruction LDUR not yet implemented."
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Subtract X9, X9, 1
	172 Add X10, X10, 16
	173 Move W2, 2
	174 Move X0, X19
	175 Call 0x1C5D788
	176 Move W9, [X10]
	177 Add W9, W9, 2
	178 Add X8, X8, W9
	179 Add X0, X8, 312
	180 Move X8, [X0]
	181 Move X2, [X0+8]
	182 Move X0, X19
	183 Move W1, W20
	184 NotImplemented "Instruction BLR not yet implemented."
	185 Move X1, X0
	186 Call ConfigHandler.ParseTime, X0, X1
	187 Move X8, [X21]
	188 Move X22, X0
	189 Move W9, [X8+224]
	190 Compare W9, 0
	191 JumpIfNotEqual {194}
	192 Move X0, X8
	193 Call 0x1C17DFC
	194 Move W8, [X28+1715]
	195 Compare W8, 0
	196 JumpIfNotEqual {200}
	197 Move X0, X21
	198 Call 0x1C17CF4
	199 Move [X28+1715], W29
	200 Move X0, [X21]
	201 Move W8, [X0+224]
	202 Compare W8, 0
	203 JumpIfNotEqual {206}
	204 Call 0x1C17DFC
	205 Move X0, [X21]
	206 Move X8, [X0+184]
	207 Move [X8+8], X22
	208 Move X8, 0xEA9000
	209 Move X8, [X8+248]
	210 Move X0, X22
	211 Move X2, X31
	212 Move X1, [X8]
	213 Call String.op_Equality, X0, X1
	214 Move TEMP, X0
	215 And TEMP, TEMP, 1
	216 Compare TEMP, 1
	217 JumpIfNotEqual {334}
	218 Move X8, [X19]
	219 Move X1, [X23]
	220 NotImplemented "Instruction LDRH not yet implemented."
	221 Compare X9, 0
	222 JumpIfEqual {229}
	223 Move X10, [X8+176]
	224 Add X10, X10, 8
	225 NotImplemented "Instruction LDUR not yet implemented."
	226 NotImplemented "Instruction CMP not yet implemented."
	227 Subtract X9, X9, 1
	228 Add X10, X10, 16
	229 Move W2, 2
	230 Move X0, X19
	231 Call 0x1C5D788
	232 Move W9, [X10]
	233 Add W9, W9, 2
	234 Add X8, X8, W9
	235 Add X0, X8, 312
	236 Move X8, [X0]
	237 Move X2, [X0+8]
	238 Move X0, X19
	239 Move W1, W20
	240 NotImplemented "Instruction BLR not yet implemented."
	241 Move X1, X0
	242 Call ConfigHandler.ParseTime, X0, X1
	243 Move X8, [X21]
	244 Move X22, X0
	245 Move W9, [X8+224]
	246 Compare W9, 0
	247 JumpIfNotEqual {250}
	248 Move X0, X8
	249 Call 0x1C17DFC
	250 Move W8, [X27+1716]
	251 Compare W8, 0
	252 JumpIfNotEqual {256}
	253 Move X0, X21
	254 Call 0x1C17CF4
	255 Move [X27+1716], W29
	256 Move X0, [X21]
	257 Move W8, [X0+224]
	258 Compare W8, 0
	259 JumpIfNotEqual {262}
	260 Call 0x1C17DFC
	261 Move X0, [X21]
	262 Move X8, [X0+184]
	263 Move [X8+24], X22
	264 Move W9, [X10]
	265 Add W9, W9, 2
	266 Add X8, X8, W9
	267 Add X0, X8, 312
	268 Move X8, [X0]
	269 Move X2, [X0+8]
	270 Move X0, X19
	271 Move W1, W20
	272 NotImplemented "Instruction BLR not yet implemented."
	273 Move X1, X0
	274 Call ConfigHandler.ParseTime, X0, X1
	275 Move X8, [X21]
	276 Move X22, X0
	277 Move W9, [X8+224]
	278 Compare W9, 0
	279 JumpIfNotEqual {282}
	280 Move X0, X8
	281 Call 0x1C17DFC
	282 Move X8, 0x1161000
	283 Move W8, [X8+1717]
	284 Compare W8, 0
	285 JumpIfNotEqual {290}
	286 Move X0, X21
	287 Call 0x1C17CF4
	288 Move X8, 0x1161000
	289 Move [X8+1717], W29
	290 Move X0, [X21]
	291 Move W8, [X0+224]
	292 Compare W8, 0
	293 JumpIfNotEqual {296}
	294 Call 0x1C17DFC
	295 Move X0, [X21]
	296 Move X8, [X0+184]
	297 Move [X8+16], X22
	298 Move W9, [X10]
	299 Add W9, W9, 2
	300 Add X8, X8, W9
	301 Add X0, X8, 312
	302 Move X8, [X0]
	303 Move X2, [X0+8]
	304 Move X0, X19
	305 Move W1, W20
	306 NotImplemented "Instruction BLR not yet implemented."
	307 Move X1, X0
	308 Call ConfigHandler.ParseTime, X0, X1
	309 Move X8, [X21]
	310 Move X22, X0
	311 Move W9, [X8+224]
	312 Compare W9, 0
	313 JumpIfNotEqual {316}
	314 Move X0, X8
	315 Call 0x1C17DFC
	316 Move X0, X22
	317 Call LifetimeServices.set_LeaseManagerPollTime, X0
	318 Add X20, X20, 1
	319 Move X20, [X31+80]
	320 Move X19, [X31+88]
	321 Move X22, [X31+64]
	322 Move X21, [X31+72]
	323 Move X24, [X31+48]
	324 Move X23, [X31+56]
	325 Move X26, [X31+32]
	326 Move X25, [X31+40]
	327 Move X28, [X31+16]
	328 Move X27, [X31+24]
	329 Move X29, [X31+96]
	330 Move X30, [X31+104]
	331 Return 
	332 Call 0x1C17F20
	333 Call 0x1C17F28
	334 Move X0, 0xEA6000
	335 Move X0, [X0+2296]
	336 Call 0x1C17D08
	337 Move X1, X0
	338 Move W0, 4
	339 Move X2, X19
	340 Call 0x19973F0
	341 Move X19, X0
	342 Call 0x19913C0
	343 Move X0, X19
	344 Move X1, X20
	345 Call 0x1BB6160
	346 Move X19, X0
	347 Move X0, 0xEA9000
	348 Move X0, [X0+264]
	349 Call 0x1C17D08
	350 Move X1, X19
	351 Move X2, X31
	352 Call String.Concat, X0, X1
	353 Move X19, X0
	354 Move X0, 0xEA8000
	355 Move X0, [X0+3360]
	356 Call 0x1C17D08
	357 Call 0x1C17F10
	358 Move X1, X19
	359 Move X20, X0
	360 Call RemotingException..ctor, X0, X1
	361 Move X0, 0xEA9000
	362 Move X0, [X0+272]
	363 Call 0x1C17D08
	364 Move X1, X0
	365 Move X0, X20
	366 Call 0x1C17DEC

Method: System.TimeSpan ParseTime(System.String s)

Disassembly:
	0x0327D66C CBZ X25, 0x327D780
	0x0327D670 LDR X8, [X25]
	0x0327D674 LDR X9, [X8 + 0x2E8]
	0x0327D678 LDR X3, [X8 + 0x2F0]
	0x0327D67C MOV X0, X25
	0x0327D680 MOV X1, X24
	0x0327D684 MOV X2, X23
	0x0327D688 BLR X9
	0x0327D68C B 0x327D6DC
	0x0327D690 CBZ X21, 0x327D778
	0x0327D694 LDR X25, [X21 + 0x18]
	0x0327D698 CBNZ X25, 0x327D6C0
	0x0327D69C ADRP X8, 0xEA6000
	0x0327D6A0 LDR X8, [X8 + 0xDB8]
	0x0327D6A4 LDR X0, [X8]
	0x0327D6A8 BL 0x1C16F10
	0x0327D6AC MOV X25, X0
	0x0327D6B0 MOV X1, X31
	0x0327D6B4 BL 0x335A0A0
	0x0327D6B8 STR X25, [X21 + 0x18]
	0x0327D6BC CBZ X25, 0x327D784
	0x0327D6C0 LDR X8, [X25]
	0x0327D6C4 LDR X9, [X8 + 0x2E8]
	0x0327D6C8 LDR X3, [X8 + 0x2F0]
	0x0327D6CC MOV X0, X25
	0x0327D6D0 MOV X1, X24
	0x0327D6D4 MOV X2, X23
	0x0327D6D8 BLR X9
	0x0327D6DC LDR W8, [X22 + 0x18]
	0x0327D6E0 ADD X28, X28, 0x1
	0x0327D6E4 CMP X28, W8, SXTW
	0x0327D6E8 B.LT 0x327D5B0
	0x0327D6EC LDR X0, [X27]
	0x0327D6F0 LDR W8, [X0 + 0xE0]
	0x0327D6F4 CBZ W8, 0x327D700
	0x0327D6F8 LDR X1, [X31 + 0x10]
	0x0327D6FC B 0x327D70C
	0x0327D700 BL 0x1C16DFC
	0x0327D704 LDR X1, [X31 + 0x10]
	0x0327D708 LDR X0, [X27]
	0x0327D70C LDR X8, [X0 + 0xB8]
	0x0327D710 LDR X0, [X8 + 0x20]
	0x0327D714 CBZ X0, 0x327D79C
	0x0327D718 LDR X8, [X0]
	0x0327D71C LDR X9, [X8 + 0x2E8]
	0x0327D720 LDR X3, [X8 + 0x2F0]
	0x0327D724 MOV X2, X21
	0x0327D728 BLR X9
	0x0327D72C MOV X21, X31
	0x0327D730 LDRB W8, [X31 + 0x1C]
	0x0327D734 CBZ W8, 0x327D744
	0x0327D738 LDR X0, [X31 + 0x8]
	0x0327D73C MOV X1, X31
	0x0327D740 BL 0x33E14E4
	0x0327D744 CBNZ X21, 0x327D78C
	0x0327D748 LDP X20, X19, [X31 + 0x80]
	0x0327D74C LDP X22, X21, [X31 + 0x70]
	0x0327D750 LDP X24, X23, [X31 + 0x60]
	0x0327D754 LDP X26, X25, [X31 + 0x50]
	0x0327D758 LDP X28, X27, [X31 + 0x40]
	0x0327D75C LDP X29, X30, [X31 + 0x30]
	0x0327D760 ADD X31, X31, 0x90
	0x0327D764 RET
	0x0327D768 BL 0x1C16F20
	0x0327D76C BL 0x1C16F28
	0x0327D770 MOV X0, X25
	0x0327D774 BL 0x1C171E0
	0x0327D778 BL 0x1C16F20
	0x0327D77C BL 0x1C16F20
	0x0327D780 BL 0x1C16F20
	0x0327D784 BL 0x1C16F20
	0x0327D788 BL 0x1C16F20
	0x0327D78C MOV X0, X21
	0x0327D790 BL 0x1C16F18
	0x0327D794 BL 0x1C16F20
	0x0327D798 BL 0x1C16F20
	0x0327D79C BL 0x1C16F20
	0x0327D7A0 B 0x327D7F8
	0x0327D7A4 B 0x327D7F8
	0x0327D7A8 B 0x327D7F8
	0x0327D7AC B 0x327D7F8
	0x0327D7B0 B 0x327D7F8
	0x0327D7B4 B 0x327D7F8
	0x0327D7B8 B 0x327D7F8
	0x0327D7BC B 0x327D7F8
	0x0327D7C0 B 0x327D7F8
	0x0327D7C4 B 0x327D7F8
	0x0327D7C8 B 0x327D7F8
	0x0327D7CC B 0x327D7F8
	0x0327D7D0 B 0x327D7F8
	0x0327D7D4 B 0x327D7F8
	0x0327D7D8 B 0x327D7F8
	0x0327D7DC B 0x327D7F8
	0x0327D7E0 B 0x327D7F8
	0x0327D7E4 B 0x327D7F8
	0x0327D7E8 B 0x327D7F8
	0x0327D7EC B 0x327D7F8
	0x0327D7F0 B 0x327D7F8
	0x0327D7F4 B 0x327D7F8
	0x0327D7F8 MOV X20, X0
	0x0327D7FC CMP W1, 0x1
	0x0327D800 B.NE 0x327D818
	0x0327D804 MOV X0, X20
	0x0327D808 BL 0x3EB1AD0
	0x0327D80C LDR X21, [X0]
	0x0327D810 BL 0x3EB1AE0
	0x0327D814 B 0x327D730
	0x0327D818 MOV X21, X31
	0x0327D81C B 0x327D824
	0x0327D820 MOV X20, X0
	0x0327D824 LDRB W8, [X31 + 0x1C]
	0x0327D828 CBZ W8, 0x327D838
	0x0327D82C LDR X0, [X31 + 0x8]
	0x0327D830 MOV X1, X31
	0x0327D834 BL 0x33E14E4
	0x0327D838 CBNZ X21, 0x327D844
	0x0327D83C MOV X0, X20
	0x0327D840 BL 0x1D2C690
	0x0327D844 MOV X0, X21
	0x0327D848 BL 0x1C16F18
	0x0327D84C BL 0x1990590
	0x0327D850 STP X30, X23, [X31 - 0x30]!
	0x0327D854 STP X22, X21, [X31 + 0x10]
	0x0327D858 STP X20, X19, [X31 + 0x20]
	0x0327D85C ADRP X20, 0x115F000
	0x0327D860 LDRB W8, [X20 + 0x643]
	0x0327D864 MOV X19, X0
	0x0327D868 TBNZ X8, 0x0, 0x327D880
	0x0327D86C ADRP X0, 0xEA7000
	0x0327D870 LDR X0, [X0 + 0x198]
	0x0327D874 BL 0x1C16CF4
	0x0327D878 MOVZ W8, 0x1
	0x0327D87C STRB W8, [X20 + 0x643]
	0x0327D880 CBZ X19, 0x327D908
	0x0327D884 LDR X8, [X19]
	0x0327D888 MOV X0, X19
	0x0327D88C LDR X9, [X8 + 0x228]
	0x0327D890 LDR X1, [X8 + 0x230]
	0x0327D894 BLR X9
	0x0327D898 CBZ X0, 0x327D908
	0x0327D89C LDR X8, [X0 + 0x18]
	0x0327D8A0 MOV X19, X0
	0x0327D8A4 CMP W8, 0x1
	0x0327D8A8 B.LT 0x327D8F4
	0x0327D8AC ADRP X22, 0xEA7000
	0x0327D8B0 LDR X22, [X22 + 0x198]
	0x0327D8B4 MOV X21, X31
	0x0327D8B8 AND X8, X8, 0x0
	0x0327D8BC ADD X23, X19, 0x20
	0x0327D8C0 CMP X21, W8, UXTW
	0x0327D8C4 B.CS 0x327D904
	0x0327D8C8 LDR X0, [X22]
	0x0327D8CC LDR X20, [X23, X21, LSL #3]
	0x0327D8D0 LDR W8, [X0 + 0xE0]
	0x0327D8D4 CBNZ W8, 0x327D8DC
	0x0327D8D8 BL 0x1C16DFC
	0x0327D8DC MOV X0, X20
	0x0327D8E0 BL 0x327D38C
	0x0327D8E4 LDR W8, [X19 + 0x18]
	0x0327D8E8 ADD X21, X21, 0x1
	0x0327D8EC CMP X21, W8, SXTW
	0x0327D8F0 B.LT 0x327D8C0
	0x0327D8F4 LDP X20, X19, [X31 + 0x20]
	0x0327D8F8 LDP X22, X21, [X31 + 0x10]
	0x0327D8FC LDP X30, X23, [X31], #0x30
	0x0327D900 RET
	0x0327D904 BL 0x1C16F28
	0x0327D908 BL 0x1C16F20
	0x0327D90C RET
	0x0327D910 STR X30, [X31 - 0x30]!
	0x0327D914 STP X22, X21, [X31 + 0x10]
	0x0327D918 STP X20, X19, [X31 + 0x20]
	0x0327D91C ADRP X20, 0x115F000
	0x0327D920 ADRP X21, 0xEA6000
	0x0327D924 LDRB W8, [X20 + 0x5FD]
	0x0327D928 LDR X21, [X21 + 0xDE0]
	0x0327D92C MOV X19, X0
	0x0327D930 TBNZ X8, 0x0, 0x327D948
	0x0327D934 ADRP X0, 0xEA6000
	0x0327D938 LDR X0, [X0 + 0xDE0]
	0x0327D93C BL 0x1C16CF4
	0x0327D940 MOVZ W8, 0x1
	0x0327D944 STRB W8, [X20 + 0x5FD]
	0x0327D948 LDR X0, [X21]
	0x0327D94C LDR X20, [X19 + 0x18]
	0x0327D950 LDRB W22, [X19 + 0x48]
	0x0327D954 LDR W8, [X0 + 0xE0]
	0x0327D958 CBNZ W8, 0x327D960
	0x0327D95C BL 0x1C16DFC
	0x0327D960 CMP W22, 0x0
	0x0327D964 CSET W1, NE
	0x0327D968 MOV X0, X20
	0x0327D96C BL 0x327685C
	0x0327D970 LDR X20, [X19 + 0x38]
	0x0327D974 CBZ X20, 0x327D9C4
	0x0327D978 LDR X0, [X21]
	0x0327D97C LDR W8, [X0 + 0xE0]
	0x0327D980 CBNZ W8, 0x327D988
	0x0327D984 BL 0x1C16DFC
	0x0327D988 ADRP X22, 0x115F000
	0x0327D98C LDRB W8, [X22 + 0x6B6]
	0x0327D990 CBNZ W8, 0x327D9A8
	0x0327D994 ADRP X0, 0xEA6000
	0x0327D998 LDR X0, [X0 + 0xDE0]
	0x0327D99C BL 0x1C16CF4
	0x0327D9A0 MOVZ W8, 0x1
	0x0327D9A4 STRB W8, [X22 + 0x6B6]
	0x0327D9A8 LDR X0, [X21]
	0x0327D9AC LDR W8, [X0 + 0xE0]
	0x0327D9B0 CBNZ W8, 0x327D9BC
	0x0327D9B4 BL 0x1C16DFC
	0x0327D9B8 LDR X0, [X21]
	0x0327D9BC LDR X8, [X0 + 0xB8]
	0x0327D9C0 STR X20, [X8 + 0x8]
	0x0327D9C4 LDRB W8, [X19 + 0x48]
	0x0327D9C8 CBZ W8, 0x327D9DC
	0x0327D9CC LDP X20, X19, [X31 + 0x20]
	0x0327D9D0 LDP X22, X21, [X31 + 0x10]
	0x0327D9D4 LDR X30, [X31], #0x30
	0x0327D9D8 RET
	0x0327D9DC LDR X0, [X21]
	0x0327D9E0 LDR X19, [X19 + 0x10]
	0x0327D9E4 LDR W8, [X0 + 0xE0]
	0x0327D9E8 CBNZ W8, 0x327D9F0
	0x0327D9EC BL 0x1C16DFC
	0x0327D9F0 MOV X0, X19
	0x0327D9F4 LDP X20, X19, [X31 + 0x20]
	0x0327D9F8 LDP X22, X21, [X31 + 0x10]
	0x0327D9FC LDR X30, [X31], #0x30
	0x0327DA00 B 0x327919C
	0x0327DA04 MOV X1, X31
	0x0327DA08 B 0x3393E38
	0x0327DA0C MOV X4, X31
	0x0327DA10 B 0x338CA74
	0x0327DA14 SUB X31, X31, 0x50
	0x0327DA18 STP X30, X25, [X31 + 0x10]
	0x0327DA1C STP X24, X23, [X31 + 0x20]
	0x0327DA20 STP X22, X21, [X31 + 0x30]
	0x0327DA24 STP X20, X19, [X31 + 0x40]
	0x0327DA28 ADRP X22, 0x115F000
	0x0327DA2C ADRP X19, 0xEA6000
	0x0327DA30 ADRP X23, 0xEA6000
	0x0327DA34 ADRP X21, 0xE7C000
	0x0327DA38 ADRP X20, 0xEA7000
	0x0327DA3C ADRP X24, 0xEA2000

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x1160000
	007 Move X21, 0xE77000
	008 Move W8, [X20+1522]
	009 Move X21, [X21+2440]
	010 Move X19, X1
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {44}
	015 Move X0, 0xE80000
	016 Move X0, [X0+2264]
	017 Call 0x1C17CF4
	018 Move X0, 0xE79000
	019 Move X0, [X0+1392]
	020 Call 0x1C17CF4
	021 Move X0, 0xEA8000
	022 Move X0, [X0+456]
	023 Call 0x1C17CF4
	024 Move X0, 0xEA8000
	025 Move X0, [X0+464]
	026 Call 0x1C17CF4
	027 Move X0, 0xEA8000
	028 Move X0, [X0+472]
	029 Call 0x1C17CF4
	030 Move X0, 0xEA8000
	031 Move X0, [X0+480]
	032 Call 0x1C17CF4
	033 Move X0, 0xE9F000
	034 Move X0, [X0+3040]
	035 Call 0x1C17CF4
	036 Move X0, 0xE77000
	037 Move X0, [X0+2440]
	038 Call 0x1C17CF4
	039 Move X0, 0xEA8000
	040 Move X0, [X0+488]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X20+1522], W8
	044 Move X1, [X21]
	045 Move X0, X19
	046 Move X2, X31
	047 Call String.op_Equality, X0, X1
	048 Compare X19, 0
	049 JumpIfEqual {219}
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {219}
	054 Move X8, 0xE80000
	055 Move X8, [X8+2264]
	056 Move X20, 0xEA8000
	057 Move W1, 4
	058 Move X0, [X8]
	059 Move X20, [X20+456]
	060 Call 0x1C17D6C
	061 Move X1, [X20]
	062 Move X2, X31
	063 Move X20, X0
	064 Call RuntimeHelpers.InitializeArray, X0, X1
	065 Move X0, X19
	066 Move X1, X20
	067 Move X2, X31
	068 Call String.IndexOfAny, X0, X1
	069 Add W31, W0, 1
	070 Move W21, W0
	071 Move X0, X19
	072 Move W1, W21
	073 Move X2, X31
	074 Call String.Substring, X0, X1
	075 Move X20, X0
	076 Move X0, X19
	077 Move W1, W31
	078 Move W2, W21
	079 Move X3, X31
	080 Call String.Substring, X0, X1, X2
	081 Move X19, X0
	082 Move X8, 0xEA8000
	083 Move X8, [X8+464]
	084 Move X20, [X8]
	085 Move X0, X19
	086 Move X1, X31
	087 Call Double.Parse, X0
	088 Move X8, 0xE9F000
	089 Move X8, [X8+3040]
	090 Move X0, X20
	091 Move X2, X31
	092 Move V8, V0
	093 Move X1, [X8]
	094 Call String.op_Equality, X0, X1
	095 Move TEMP, X0
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfNotEqual {115}
	099 Move X8, 0xE79000
	100 Move X8, [X8+1392]
	101 Move X0, [X8]
	102 Move W8, [X0+224]
	103 Compare W8, 0
	104 JumpIfNotEqual {106}
	105 Call 0x1C17DFC
	106 Move X20, [X31+32]
	107 Move X19, [X31+40]
	108 Move X30, [X31+16]
	109 Move X21, [X31+24]
	110 Move V0, V8
	111 Move X0, X31
	112 Move V8, [X31+48]
	113 Call TimeSpan.FromDays, V0
	114 Return X0
	115 Move X8, 0xEA8000
	116 Move X8, [X8+472]
	117 Move X0, X20
	118 Move X2, X31
	119 Move X1, [X8]
	120 Call String.op_Equality, X0, X1
	121 Move TEMP, X0
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfNotEqual {141}
	125 Move X8, 0xE79000
	126 Move X8, [X8+1392]
	127 Move X0, [X8]
	128 Move W8, [X0+224]
	129 Compare W8, 0
	130 JumpIfNotEqual {132}
	131 Call 0x1C17DFC
	132 Move X20, [X31+32]
	133 Move X19, [X31+40]
	134 Move X30, [X31+16]
	135 Move X21, [X31+24]
	136 Move V0, V8
	137 Move X0, X31
	138 Move V8, [X31+48]
	139 Call TimeSpan.FromHours, V0
	140 Return X0
	141 Move X8, 0xEA8000
	142 Move X8, [X8+488]
	143 Move X0, X20
	144 Move X2, X31
	145 Move X1, [X8]
	146 Call String.op_Equality, X0, X1
	147 Move TEMP, X0
	148 And TEMP, TEMP, 1
	149 Compare TEMP, 1
	150 JumpIfNotEqual {167}
	151 Move X8, 0xE79000
	152 Move X8, [X8+1392]
	153 Move X0, [X8]
	154 Move W8, [X0+224]
	155 Compare W8, 0
	156 JumpIfNotEqual {158}
	157 Call 0x1C17DFC
	158 Move X20, [X31+32]
	159 Move X19, [X31+40]
	160 Move X30, [X31+16]
	161 Move X21, [X31+24]
	162 Move V0, V8
	163 Move X0, X31
	164 Move V8, [X31+48]
	165 Call TimeSpan.FromMinutes, V0
	166 Return X0
	167 Move X8, 0xEA8000
	168 Move X8, [X8+464]
	169 Move X0, X20
	170 Move X2, X31
	171 Move X1, [X8]
	172 Call String.op_Equality, X0, X1
	173 Move TEMP, X0
	174 And TEMP, TEMP, 1
	175 Compare TEMP, 1
	176 JumpIfNotEqual {193}
	177 Move X8, 0xE79000
	178 Move X8, [X8+1392]
	179 Move X0, [X8]
	180 Move W8, [X0+224]
	181 Compare W8, 0
	182 JumpIfNotEqual {184}
	183 Call 0x1C17DFC
	184 Move X20, [X31+32]
	185 Move X19, [X31+40]
	186 Move X30, [X31+16]
	187 Move X21, [X31+24]
	188 Move V0, V8
	189 Move X0, X31
	190 Move V8, [X31+48]
	191 Call TimeSpan.FromSeconds, V0
	192 Return X0
	193 Move X8, 0xEA8000
	194 Move X8, [X8+480]
	195 Move X0, X20
	196 Move X2, X31
	197 Move X1, [X8]
	198 Call String.op_Equality, X0, X1
	199 Move TEMP, X0
	200 And TEMP, TEMP, 1
	201 Compare TEMP, 1
	202 JumpIfNotEqual {236}
	203 Move X8, 0xE79000
	204 Move X8, [X8+1392]
	205 Move X0, [X8]
	206 Move W8, [X0+224]
	207 Compare W8, 0
	208 JumpIfNotEqual {210}
	209 Call 0x1C17DFC
	210 Move X20, [X31+32]
	211 Move X19, [X31+40]
	212 Move X30, [X31+16]
	213 Move X21, [X31+24]
	214 Move V0, V8
	215 Move X0, X31
	216 Move V8, [X31+48]
	217 Call TimeSpan.FromMilliseconds, V0
	218 Return X0
	219 Move X0, 0xEA7000
	220 Move X0, [X0+3360]
	221 Call 0x1C17D08
	222 Call 0x1C17F10
	223 Move X19, X0
	224 Move X0, 0xEA8000
	225 Move X0, [X0+496]
	226 Call 0x1C17D08
	227 Move X1, X0
	228 Move X0, X19
	229 Call RemotingException..ctor, X0, X1
	230 Move X0, 0xEA8000
	231 Move X0, [X0+504]
	232 Call 0x1C17D08
	233 Move X1, X0
	234 Move X0, X19
	235 Call 0x1C17DEC
	236 Move X0, 0xEA8000
	237 Move X0, [X0+512]
	238 Call 0x1C17D08
	239 Move X1, X20
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Move X20, X0
	242 Move X0, X20
	243 Call 0x3EB2AD0
	244 Move X20, X0
	245 Move X0, 0xE7D000
	246 Move X0, [X0+3264]
	247 Call 0x1C17D08
	248 Move X8, [X20]
	249 Move X1, [X8]
	250 Call 0x1C18270
	251 Move TEMP, X0
	252 And TEMP, TEMP, 1
	253 Compare TEMP, 1
	254 JumpIfNotEqual {276}
	255 Call 0x3EB2AE0
	256 Move X0, 0xEA8000
	257 Move X0, [X0+520]
	258 Call 0x1C17D08
	259 Move X1, X19
	260 Move X2, X31
	261 Call String.Concat, X0, X1
	262 Move X19, X0
	263 Move X0, 0xEA7000
	264 Move X0, [X0+3360]
	265 Call 0x1C17D08
	266 Call 0x1C17F10
	267 Move X1, X19
	268 Move X20, X0
	269 Call RemotingException..ctor, X0, X1
	270 Move X0, 0xEA8000
	271 Move X0, [X0+504]
	272 Call 0x1C17D08
	273 Move X1, X0
	274 Move X0, X20
	275 Call 0x1C17DEC
	276 Move W0, 8
	277 Call 0x3EB2AF0
	278 Move X8, [X20]
	279 Move [X0], X8
	280 Move X1, 0xC38000
	281 Add X1, X1, 3672
	282 Move X2, X31
	283 Call 0x3EB2B00
	284 Move X20, X0
	285 Call 0x3EB2AE0
	286 Move X0, X20
	287 Call 0x1D2D690
	288 Call 0x1991590

Method: System.Void ReadChannel(Mono.Xml.SmallXmlParser/IAttrList attrs, System.Boolean isTemplate)

Disassembly:
	0x0327C580 B 0x327D850
	0x0327C584 BL 0x1C16F20
	0x0327C588 ADRP X0, 0xEA7000
	0x0327C58C LDR X0, [X0 + 0xD20]
	0x0327C590 BL 0x1C16D08
	0x0327C594 BL 0x1C16F10
	0x0327C598 MOV X19, X0
	0x0327C59C ADRP X0, 0xEA8000
	0x0327C5A0 LDR X0, [X0 + 0x1B8]
	0x0327C5A4 B 0x327C5C4
	0x0327C5A8 ADRP X0, 0xEA7000
	0x0327C5AC LDR X0, [X0 + 0xD20]
	0x0327C5B0 BL 0x1C16D08
	0x0327C5B4 BL 0x1C16F10
	0x0327C5B8 MOV X19, X0
	0x0327C5BC ADRP X0, 0xEA8000
	0x0327C5C0 LDR X0, [X0 + 0x1C0]
	0x0327C5C4 BL 0x1C16D08
	0x0327C5C8 MOV X1, X0
	0x0327C5CC MOV X0, X19
	0x0327C5D0 BL 0x3273098
	0x0327C5D4 ADRP X0, 0xEA8000
	0x0327C5D8 LDR X0, [X0 + 0x1A8]
	0x0327C5DC BL 0x1C16D08
	0x0327C5E0 MOV X1, X0
	0x0327C5E4 MOV X0, X19
	0x0327C5E8 BL 0x1C16DEC
	0x0327C5EC STR X30, [X31 - 0x20]!
	0x0327C5F0 STP X20, X19, [X31 + 0x10]
	0x0327C5F4 MOV X19, X0
	0x0327C5F8 LDR X0, [X0 + 0x28]
	0x0327C5FC MOV X20, X1
	0x0327C600 CBZ X0, 0x327C630
	0x0327C604 LDR X8, [X0]
	0x0327C608 LDR X9, [X8 + 0x258]
	0x0327C60C LDR X1, [X8 + 0x260]
	0x0327C610 BLR X9
	0x0327C614 LDR X0, [X19 + 0x28]
	0x0327C618 CBZ X0, 0x327C668
	0x0327C61C LDR X8, [X0]
	0x0327C620 LDP X9, X1, [X8 + 0x1D8]
	0x0327C624 BLR X9
	0x0327C628 CBNZ W0, 0x327C630
	0x0327C62C STR X31, [X19 + 0x28]
	0x0327C630 LDR X0, [X19 + 0x40]
	0x0327C634 CBZ X0, 0x327C668
	0x0327C638 CBZ X20, 0x327C668
	0x0327C63C LDR W8, [X20 + 0x10]
	0x0327C640 LDR W9, [X0 + 0x10]
	0x0327C644 MOV W1, W31
	0x0327C648 MOV X3, X31
	0x0327C64C ORN W8, W31, W8, 0x0
	0x0327C650 ADD W2, W9, W8
	0x0327C654 BL 0x3228DE4
	0x0327C658 STR X0, [X19 + 0x40]
	0x0327C65C LDP X20, X19, [X31 + 0x10]
	0x0327C660 LDR X30, [X31], #0x20
	0x0327C664 RET
	0x0327C668 BL 0x1C16F20
	0x0327C66C STR D8, [X31 - 0x30]!
	0x0327C670 STP X30, X21, [X31 + 0x10]
	0x0327C674 STP X20, X19, [X31 + 0x20]
	0x0327C678 ADRP X20, 0x1160000
	0x0327C67C ADRP X21, 0xE77000
	0x0327C680 LDRB W8, [X20 + 0x5F2]
	0x0327C684 LDR X21, [X21 + 0x988]
	0x0327C688 MOV X19, X1
	0x0327C68C TBNZ X8, 0x0, 0x327C704
	0x0327C690 ADRP X0, 0xE80000
	0x0327C694 LDR X0, [X0 + 0x8D8]
	0x0327C698 BL 0x1C16CF4
	0x0327C69C ADRP X0, 0xE79000
	0x0327C6A0 LDR X0, [X0 + 0x570]
	0x0327C6A4 BL 0x1C16CF4
	0x0327C6A8 ADRP X0, 0xEA8000
	0x0327C6AC LDR X0, [X0 + 0x1C8]
	0x0327C6B0 BL 0x1C16CF4
	0x0327C6B4 ADRP X0, 0xEA8000
	0x0327C6B8 LDR X0, [X0 + 0x1D0]
	0x0327C6BC BL 0x1C16CF4
	0x0327C6C0 ADRP X0, 0xEA8000
	0x0327C6C4 LDR X0, [X0 + 0x1D8]
	0x0327C6C8 BL 0x1C16CF4
	0x0327C6CC ADRP X0, 0xEA8000
	0x0327C6D0 LDR X0, [X0 + 0x1E0]
	0x0327C6D4 BL 0x1C16CF4
	0x0327C6D8 ADRP X0, 0xE9F000
	0x0327C6DC LDR X0, [X0 + 0xBE0]
	0x0327C6E0 BL 0x1C16CF4
	0x0327C6E4 ADRP X0, 0xE77000
	0x0327C6E8 LDR X0, [X0 + 0x988]
	0x0327C6EC BL 0x1C16CF4
	0x0327C6F0 ADRP X0, 0xEA8000
	0x0327C6F4 LDR X0, [X0 + 0x1E8]
	0x0327C6F8 BL 0x1C16CF4
	0x0327C6FC MOVZ W8, 0x1
	0x0327C700 STRB W8, [X20 + 0x5F2]
	0x0327C704 LDR X1, [X21]
	0x0327C708 MOV X0, X19
	0x0327C70C MOV X2, X31
	0x0327C710 BL 0x321BA08
	0x0327C714 CBZ X19, 0x327C92C
	0x0327C718 TBNZ X0, 0x0, 0x327C92C
	0x0327C71C ADRP X8, 0xE80000
	0x0327C720 LDR X8, [X8 + 0x8D8]
	0x0327C724 ADRP X20, 0xEA8000
	0x0327C728 MOVZ W1, 0x4
	0x0327C72C LDR X0, [X8]
	0x0327C730 LDR X20, [X20 + 0x1C8]
	0x0327C734 BL 0x1C16D6C
	0x0327C738 LDR X1, [X20]
	0x0327C73C MOV X2, X31
	0x0327C740 MOV X20, X0
	0x0327C744 BL 0x32C5BD8
	0x0327C748 MOV X0, X19
	0x0327C74C MOV X1, X20
	0x0327C750 MOV X2, X31
	0x0327C754 BL 0x322BE8C
	0x0327C758 ADDS W31, W0, 0x1
	0x0327C75C B.EQ 0x327C794
	0x0327C760 MOV W21, W0
	0x0327C764 MOV X0, X19
	0x0327C768 MOV W1, W21
	0x0327C76C MOV X2, X31
	0x0327C770 BL 0x322B484
	0x0327C774 MOV X20, X0
	0x0327C778 MOV X0, X19
	0x0327C77C MOV W1, W31
	0x0327C780 MOV W2, W21
	0x0327C784 MOV X3, X31
	0x0327C788 BL 0x3228DE4
	0x0327C78C MOV X19, X0
	0x0327C790 B 0x327C7A0
	0x0327C794 ADRP X8, 0xEA8000
	0x0327C798 LDR X8, [X8 + 0x1D0]
	0x0327C79C LDR X20, [X8]
	0x0327C7A0 MOV X0, X19
	0x0327C7A4 MOV X1, X31
	0x0327C7A8 BL 0x33664BC
	0x0327C7AC ADRP X8, 0xE9F000
	0x0327C7B0 LDR X8, [X8 + 0xBE0]
	0x0327C7B4 MOV X0, X20
	0x0327C7B8 MOV X2, X31
	0x0327C7BC MOV V8.16B, V0.16B
	0x0327C7C0 LDR X1, [X8]
	0x0327C7C4 BL 0x321BA08
	0x0327C7C8 TBZ X0, 0x0, 0x327C7FC
	0x0327C7CC ADRP X8, 0xE79000
	0x0327C7D0 LDR X8, [X8 + 0x570]
	0x0327C7D4 LDR X0, [X8]
	0x0327C7D8 LDR W8, [X0 + 0xE0]
	0x0327C7DC CBNZ W8, 0x327C7E4
	0x0327C7E0 BL 0x1C16DFC
	0x0327C7E4 LDP X20, X19, [X31 + 0x20]
	0x0327C7E8 LDP X30, X21, [X31 + 0x10]
	0x0327C7EC MOV V0.16B, V8.16B
	0x0327C7F0 MOV X0, X31
	0x0327C7F4 LDR V8, [X31], #0x30
	0x0327C7F8 B 0x3394394
	0x0327C7FC ADRP X8, 0xEA8000
	0x0327C800 LDR X8, [X8 + 0x1D8]
	0x0327C804 MOV X0, X20
	0x0327C808 MOV X2, X31
	0x0327C80C LDR X1, [X8]
	0x0327C810 BL 0x321BA08
	0x0327C814 TBZ X0, 0x0, 0x327C848
	0x0327C818 ADRP X8, 0xE79000
	0x0327C81C LDR X8, [X8 + 0x570]
	0x0327C820 LDR X0, [X8]
	0x0327C824 LDR W8, [X0 + 0xE0]
	0x0327C828 CBNZ W8, 0x327C830
	0x0327C82C BL 0x1C16DFC
	0x0327C830 LDP X20, X19, [X31 + 0x20]
	0x0327C834 LDP X30, X21, [X31 + 0x10]
	0x0327C838 MOV V0.16B, V8.16B
	0x0327C83C MOV X0, X31
	0x0327C840 LDR V8, [X31], #0x30
	0x0327C844 B 0x3394580
	0x0327C848 ADRP X8, 0xEA8000
	0x0327C84C LDR X8, [X8 + 0x1E8]
	0x0327C850 MOV X0, X20
	0x0327C854 MOV X2, X31
	0x0327C858 LDR X1, [X8]
	0x0327C85C BL 0x321BA08
	0x0327C860 TBZ X0, 0x0, 0x327C894
	0x0327C864 ADRP X8, 0xE79000
	0x0327C868 LDR X8, [X8 + 0x570]
	0x0327C86C LDR X0, [X8]
	0x0327C870 LDR W8, [X0 + 0xE0]
	0x0327C874 CBNZ W8, 0x327C87C
	0x0327C878 BL 0x1C16DFC
	0x0327C87C LDP X20, X19, [X31 + 0x20]
	0x0327C880 LDP X30, X21, [X31 + 0x10]
	0x0327C884 MOV V0.16B, V8.16B
	0x0327C888 MOV X0, X31
	0x0327C88C LDR V8, [X31], #0x30
	0x0327C890 B 0x3394644
	0x0327C894 ADRP X8, 0xEA8000
	0x0327C898 LDR X8, [X8 + 0x1D0]
	0x0327C89C MOV X0, X20
	0x0327C8A0 MOV X2, X31
	0x0327C8A4 LDR X1, [X8]
	0x0327C8A8 BL 0x321BA08
	0x0327C8AC TBZ X0, 0x0, 0x327C8E0
	0x0327C8B0 ADRP X8, 0xE79000
	0x0327C8B4 LDR X8, [X8 + 0x570]
	0x0327C8B8 LDR X0, [X8]
	0x0327C8BC LDR W8, [X0 + 0xE0]
	0x0327C8C0 CBNZ W8, 0x327C8C8
	0x0327C8C4 BL 0x1C16DFC
	0x0327C8C8 LDP X20, X19, [X31 + 0x20]
	0x0327C8CC LDP X30, X21, [X31 + 0x10]
	0x0327C8D0 MOV V0.16B, V8.16B
	0x0327C8D4 MOV X0, X31
	0x0327C8D8 LDR V8, [X31], #0x30
	0x0327C8DC B 0x3394754
	0x0327C8E0 ADRP X8, 0xEA8000
	0x0327C8E4 LDR X8, [X8 + 0x1E0]
	0x0327C8E8 MOV X0, X20
	0x0327C8EC MOV X2, X31
	0x0327C8F0 LDR X1, [X8]
	0x0327C8F4 BL 0x321BA08
	0x0327C8F8 TBZ X0, 0x0, 0x327C970
	0x0327C8FC ADRP X8, 0xE79000
	0x0327C900 LDR X8, [X8 + 0x570]
	0x0327C904 LDR X0, [X8]
	0x0327C908 LDR W8, [X0 + 0xE0]
	0x0327C90C CBNZ W8, 0x327C914
	0x0327C910 BL 0x1C16DFC
	0x0327C914 LDP X20, X19, [X31 + 0x20]
	0x0327C918 LDP X30, X21, [X31 + 0x10]
	0x0327C91C MOV V0.16B, V8.16B
	0x0327C920 MOV X0, X31
	0x0327C924 LDR V8, [X31], #0x30
	0x0327C928 B 0x33945E4
	0x0327C92C ADRP X0, 0xEA7000

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move [X31+8], X0
	015 Move X19, 0x1161000
	016 Move X22, 0xEA8000
	017 Move W8, [X19+1523]
	018 Move X22, [X22+3792]
	019 Move W20, W2
	020 Move X21, X1
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {48}
	025 Move X0, 0xEA8000
	026 Move X0, [X0+3792]
	027 Call 0x1C17CF4
	028 Move X0, 0xEA6000
	029 Move X0, [X0+2296]
	030 Call 0x1C17CF4
	031 Move X0, 0xEA8000
	032 Move X0, [X0+3552]
	033 Call 0x1C17CF4
	034 Move X0, 0xEA9000
	035 Move X0, [X0+280]
	036 Call 0x1C17CF4
	037 Move X0, 0xE7A000
	038 Move X0, [X0+3088]
	039 Call 0x1C17CF4
	040 Move X0, 0xEA9000
	041 Move X0, [X0+288]
	042 Call 0x1C17CF4
	043 Move X0, 0xE80000
	044 Move X0, [X0+1512]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X19+1523], W8
	048 Move X0, [X22]
	049 Call 0x1C17F10
	050 Move X22, X0
	051 Call ChannelData..ctor, X0
	052 Compare X21, 0
	053 JumpIfEqual {256}
	054 Move X26, 0xEA6000
	055 Move X27, 0xEA9000
	056 Move X28, 0xEA9000
	057 Move X29, 0xE7A000
	058 Move X19, 0xE80000
	059 Move X26, [X26+2296]
	060 Move X27, [X27+280]
	061 Move X28, [X28+288]
	062 Move X29, [X29+3088]
	063 Move X19, [X19+1512]
	064 Move X25, X31
	065 Move X8, [X21]
	066 Move X1, [X26]
	067 NotImplemented "Instruction LDRH not yet implemented."
	068 Compare X9, 0
	069 JumpIfEqual {76}
	070 Move X10, [X8+176]
	071 Add X10, X10, 8
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Subtract X9, X9, 1
	075 Add X10, X10, 16
	076 Move W2, 4
	077 Move X0, X21
	078 Call 0x1C5D788
	079 Move W9, [X10]
	080 Add W9, W9, 4
	081 Add X8, X8, W9
	082 Add X0, X8, 312
	083 Move X8, [X0]
	084 Move X1, [X0+8]
	085 Move X0, X21
	086 NotImplemented "Instruction BLR not yet implemented."
	087 Compare X0, 0
	088 JumpIfEqual {256}
	089 NotImplemented "Instruction LDRSW not yet implemented."
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X8, [X21]
	092 Move X1, [X26]
	093 NotImplemented "Instruction LDRH not yet implemented."
	094 Compare X9, 0
	095 JumpIfEqual {102}
	096 Move X10, [X8+176]
	097 Add X10, X10, 8
	098 NotImplemented "Instruction LDUR not yet implemented."
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Subtract X9, X9, 1
	101 Add X10, X10, 16
	102 Move W2, 4
	103 Move X0, X21
	104 Call 0x1C5D788
	105 Move W9, [X10]
	106 Add W9, W9, 4
	107 Add X8, X8, W9
	108 Add X0, X8, 312
	109 Move X8, [X0]
	110 Move X1, [X0+8]
	111 Move X0, X21
	112 NotImplemented "Instruction BLR not yet implemented."
	113 Compare X0, 0
	114 JumpIfEqual {256}
	115 Move W8, [X0+24]
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X8, [X21]
	118 Add X9, X0, X25
	119 Move X23, [X9+32]
	120 Move X1, [X26]
	121 NotImplemented "Instruction LDRH not yet implemented."
	122 Compare X9, 0
	123 JumpIfEqual {130}
	124 Move X10, [X8+176]
	125 Add X10, X10, 8
	126 NotImplemented "Instruction LDUR not yet implemented."
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Subtract X9, X9, 1
	129 Add X10, X10, 16
	130 Move W2, 5
	131 Move X0, X21
	132 Call 0x1C5D788
	133 Move W9, [X10]
	134 Add W9, W9, 5
	135 Add X8, X8, W9
	136 Add X0, X8, 312
	137 Move X8, [X0]
	138 Move X1, [X0+8]
	139 Move X0, X21
	140 NotImplemented "Instruction BLR not yet implemented."
	141 Compare X0, 0
	142 JumpIfEqual {256}
	143 Move W8, [X0+24]
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Add X8, X0, X25
	146 Move X1, [X27]
	147 Move X24, [X8+32]
	148 Move X0, X23
	149 Move X2, X31
	150 Call String.op_Equality, X0, X1
	151 Move TEMP, X0
	152 And TEMP, TEMP, 1
	153 Compare TEMP, 1
	154 JumpIfNotEqual {162}
	155 Move TEMP, X20
	156 And TEMP, TEMP, 1
	157 Compare TEMP, 1
	158 JumpIfEqual {162}
	159 Compare X22, 0
	160 JumpIfEqual {256}
	161 Move [X22+16], X24
	162 Move X1, [X28]
	163 Move X0, X23
	164 Move X2, X31
	165 Call String.op_Equality, X0, X1
	166 Move TEMP, X0
	167 And TEMP, TEMP, 1
	168 Compare TEMP, 1
	169 JumpIfNotEqual {173}
	170 Compare X22, 0
	171 JumpIfEqual {256}
	172 Move [X22+40], X24
	173 Move X1, [X29]
	174 Move X0, X23
	175 Move X2, X31
	176 Call String.op_Equality, X0, X1
	177 Move TEMP, X0
	178 And TEMP, TEMP, 1
	179 Compare TEMP, 1
	180 JumpIfNotEqual {188}
	181 Move TEMP, X20
	182 And TEMP, TEMP, 1
	183 Compare TEMP, 1
	184 JumpIfNotEqual {188}
	185 Compare X22, 0
	186 JumpIfEqual {256}
	187 Move [X22+32], X24
	188 Move X1, [X19]
	189 Move X0, X23
	190 Move X2, X31
	191 Call String.op_Equality, X0, X1
	192 Compare X22, 0
	193 JumpIfEqual {256}
	194 Move TEMP, X0
	195 And TEMP, TEMP, 1
	196 Compare TEMP, 1
	197 JumpIfNotEqual {199}
	198 Move [X22+24], X24
	199 Move X0, X22
	200 Call ChannelData.get_CustomProperties, X0
	201 Compare X0, 0
	202 JumpIfEqual {256}
	203 Move X8, [X0]
	204 Move X1, X23
	205 Move X2, X24
	206 Move X9, [X8+632]
	207 Move X3, [X8+640]
	208 NotImplemented "Instruction BLR not yet implemented."
	209 Add X25, X25, 1
	210 Move TEMP, X20
	211 And TEMP, TEMP, 1
	212 Compare TEMP, 1
	213 JumpIfNotEqual {232}
	214 Compare X22, 0
	215 JumpIfEqual {256}
	216 Move X8, [X22+32]
	217 Compare X8, 0
	218 JumpIfEqual {258}
	219 Move X8, [X22+24]
	220 Compare X8, 0
	221 JumpIfEqual {258}
	222 Move X8, 0xEA8000
	223 Move X8, [X8+3552]
	224 Move X19, [X31+8]
	225 Move X0, [X8]
	226 Move W8, [X0+224]
	227 Compare W8, 0
	228 JumpIfNotEqual {230}
	229 Call 0x1C17DFC
	230 Move X0, X22
	231 Call RemotingConfiguration.RegisterChannelTemplate, X0
	232 Move X19, [X31+8]
	233 Move X0, [X19+24]
	234 Compare X0, 0
	235 JumpIfEqual {256}
	236 Move X8, [X0]
	237 Move X1, X22
	238 Move X9, [X8+776]
	239 Move X2, [X8+784]
	240 NotImplemented "Instruction BLR not yet implemented."
	241 Move [X19+32], X22
	242 Move X20, [X31+96]
	243 Move X19, [X31+104]
	244 Move X22, [X31+80]
	245 Move X21, [X31+88]
	246 Move X24, [X31+64]
	247 Move X23, [X31+72]
	248 Move X26, [X31+48]
	249 Move X25, [X31+56]
	250 Move X28, [X31+32]
	251 Move X27, [X31+40]
	252 Move X29, [X31+16]
	253 Move X30, [X31+24]
	254 Add X31, X31, 112
	255 Return 
	256 Call 0x1C17F20
	257 Call 0x1C17F28
	258 Move X0, 0xEA8000
	259 Move X0, [X0+3360]
	260 Call 0x1C17D08
	261 Call 0x1C17F10
	262 Move X19, X0
	263 Move X0, 0xEA9000
	264 Move X0, [X0+296]
	265 Call 0x1C17D08
	266 Move X1, X0
	267 Move X0, X19
	268 Call RemotingException..ctor, X0, X1
	269 Move X0, 0xEA9000
	270 Move X0, [X0+304]
	271 Call 0x1C17D08
	272 Move X1, X0
	273 Move X0, X19
	274 Call 0x1C17DEC

Method: System.Runtime.Remoting.ProviderData ReadProvider(System.String name, Mono.Xml.SmallXmlParser/IAttrList attrs, System.Boolean isTemplate)

Disassembly:
	0x0327C930 LDR X0, [X0 + 0xD20]
	0x0327C934 BL 0x1C16D08
	0x0327C938 BL 0x1C16F10
	0x0327C93C MOV X19, X0
	0x0327C940 ADRP X0, 0xEA8000
	0x0327C944 LDR X0, [X0 + 0x1F0]
	0x0327C948 BL 0x1C16D08
	0x0327C94C MOV X1, X0
	0x0327C950 MOV X0, X19
	0x0327C954 BL 0x3273098
	0x0327C958 ADRP X0, 0xEA8000
	0x0327C95C LDR X0, [X0 + 0x1F8]
	0x0327C960 BL 0x1C16D08
	0x0327C964 MOV X1, X0
	0x0327C968 MOV X0, X19
	0x0327C96C BL 0x1C16DEC
	0x0327C970 ADRP X0, 0xEA8000
	0x0327C974 LDR X0, [X0 + 0x200]
	0x0327C978 BL 0x1C16D08
	0x0327C97C MOV X1, X20
	0x0327C980 B 0x327C9CC
	0x0327C984 CMP W1, 0x1
	0x0327C988 MOV X20, X0
	0x0327C98C B.NE 0x327CA34
	0x0327C990 MOV X0, X20
	0x0327C994 BL 0x3EB1AD0
	0x0327C998 MOV X20, X0
	0x0327C99C ADRP X0, 0xE7D000
	0x0327C9A0 LDR X0, [X0 + 0xCC0]
	0x0327C9A4 BL 0x1C16D08
	0x0327C9A8 LDR X8, [X20]
	0x0327C9AC LDR X1, [X8]
	0x0327C9B0 BL 0x1C17270
	0x0327C9B4 TBZ X0, 0x0, 0x327CA0C
	0x0327C9B8 BL 0x3EB1AE0
	0x0327C9BC ADRP X0, 0xEA8000
	0x0327C9C0 LDR X0, [X0 + 0x208]
	0x0327C9C4 BL 0x1C16D08
	0x0327C9C8 MOV X1, X19
	0x0327C9CC MOV X2, X31
	0x0327C9D0 BL 0x321B938
	0x0327C9D4 MOV X19, X0
	0x0327C9D8 ADRP X0, 0xEA7000
	0x0327C9DC LDR X0, [X0 + 0xD20]
	0x0327C9E0 BL 0x1C16D08
	0x0327C9E4 BL 0x1C16F10
	0x0327C9E8 MOV X1, X19
	0x0327C9EC MOV X20, X0
	0x0327C9F0 BL 0x3273098
	0x0327C9F4 ADRP X0, 0xEA8000
	0x0327C9F8 LDR X0, [X0 + 0x1F8]
	0x0327C9FC BL 0x1C16D08
	0x0327CA00 MOV X1, X0
	0x0327CA04 MOV X0, X20
	0x0327CA08 BL 0x1C16DEC
	0x0327CA0C MOVZ W0, 0x8
	0x0327CA10 BL 0x3EB1AF0
	0x0327CA14 LDR X8, [X20]
	0x0327CA18 STR X8, [X0]
	0x0327CA1C ADRP X1, 0xC38000
	0x0327CA20 ADD X1, X1, 0xE58
	0x0327CA24 MOV X2, X31
	0x0327CA28 BL 0x3EB1B00
	0x0327CA2C MOV X20, X0
	0x0327CA30 BL 0x3EB1AE0
	0x0327CA34 MOV X0, X20
	0x0327CA38 BL 0x1D2C690
	0x0327CA3C BL 0x1990590
	0x0327CA40 STP X30, X21, [X31 - 0x20]!
	0x0327CA44 STP X20, X19, [X31 + 0x10]
	0x0327CA48 ADRP X21, 0x1160000
	0x0327CA4C ADRP X20, 0xEA8000
	0x0327CA50 LDRB W8, [X21 + 0x672]
	0x0327CA54 LDR X20, [X20 + 0xE0]
	0x0327CA58 MOV X19, X0
	0x0327CA5C TBNZ X8, 0x0, 0x327CA74
	0x0327CA60 ADRP X0, 0xEA8000
	0x0327CA64 LDR X0, [X0 + 0xE0]
	0x0327CA68 BL 0x1C16CF4
	0x0327CA6C MOVZ W8, 0x1
	0x0327CA70 STRB W8, [X21 + 0x672]
	0x0327CA74 LDR X0, [X20]
	0x0327CA78 LDR W8, [X0 + 0xE0]
	0x0327CA7C CBNZ W8, 0x327CA88
	0x0327CA80 BL 0x1C16DFC
	0x0327CA84 LDR X0, [X20]
	0x0327CA88 LDR X8, [X0 + 0xB8]
	0x0327CA8C STR X19, [X8]
	0x0327CA90 LDR X8, [X20]
	0x0327CA94 LDR X8, [X8 + 0xB8]
	0x0327CA98 LDR X0, [X8 + 0x20]
	0x0327CA9C CBZ X0, 0x327CAB0
	0x0327CAA0 MOV X1, X19
	0x0327CAA4 LDP X20, X19, [X31 + 0x10]
	0x0327CAA8 LDP X30, X21, [X31], #0x20
	0x0327CAAC B 0x3288444
	0x0327CAB0 BL 0x1C16F20
	0x0327CAB4 STR X30, [X31 - 0x30]!
	0x0327CAB8 STP X22, X21, [X31 + 0x10]
	0x0327CABC STP X20, X19, [X31 + 0x20]
	0x0327CAC0 ADRP X20, 0x1160000
	0x0327CAC4 ADRP X22, 0xEA4000
	0x0327CAC8 ADRP X21, 0xEA7000
	0x0327CACC LDRB W8, [X20 + 0x602]
	0x0327CAD0 LDR X22, [X22 + 0xBA0]
	0x0327CAD4 LDR X21, [X21 + 0xDB8]
	0x0327CAD8 MOV X19, X0
	0x0327CADC TBNZ X8, 0x0, 0x327CB00
	0x0327CAE0 ADRP X0, 0xEA4000
	0x0327CAE4 LDR X0, [X0 + 0xBA0]
	0x0327CAE8 BL 0x1C16CF4
	0x0327CAEC ADRP X0, 0xEA7000
	0x0327CAF0 LDR X0, [X0 + 0xDB8]
	0x0327CAF4 BL 0x1C16CF4
	0x0327CAF8 MOVZ W8, 0x1
	0x0327CAFC STRB W8, [X20 + 0x602]
	0x0327CB00 LDR X0, [X22]
	0x0327CB04 BL 0x1C16F10
	0x0327CB08 MOV X1, X31
	0x0327CB0C MOV X20, X0
	0x0327CB10 BL 0x3351F5C
	0x0327CB14 STR X20, [X19 + 0x30]
	0x0327CB18 LDR X0, [X22]
	0x0327CB1C BL 0x1C16F10
	0x0327CB20 MOV X1, X31
	0x0327CB24 MOV X20, X0
	0x0327CB28 BL 0x3351F5C
	0x0327CB2C STR X20, [X19 + 0x38]
	0x0327CB30 LDR X0, [X21]
	0x0327CB34 BL 0x1C16F10
	0x0327CB38 MOV X1, X31
	0x0327CB3C MOV X20, X0
	0x0327CB40 BL 0x335A0A0
	0x0327CB44 STR X20, [X19 + 0x40]
	0x0327CB48 MOV X0, X19
	0x0327CB4C LDP X20, X19, [X31 + 0x20]
	0x0327CB50 LDP X22, X21, [X31 + 0x10]
	0x0327CB54 MOV X1, X31
	0x0327CB58 LDR X30, [X31], #0x30
	0x0327CB5C B 0x33BDD8C
	0x0327CB60 STR X30, [X31 - 0x20]!
	0x0327CB64 STP X20, X19, [X31 + 0x10]
	0x0327CB68 ADRP X20, 0x1160000
	0x0327CB6C LDRB W8, [X20 + 0x600]
	0x0327CB70 MOV X19, X0
	0x0327CB74 TBNZ X8, 0x0, 0x327CB8C
	0x0327CB78 ADRP X0, 0xEA7000
	0x0327CB7C LDR X0, [X0 + 0xDB8]
	0x0327CB80 BL 0x1C16CF4
	0x0327CB84 MOVZ W8, 0x1
	0x0327CB88 STRB W8, [X20 + 0x600]
	0x0327CB8C LDR X20, [X19 + 0x40]
	0x0327CB90 CBNZ X20, 0x327CBB4
	0x0327CB94 ADRP X8, 0xEA7000
	0x0327CB98 LDR X8, [X8 + 0xDB8]
	0x0327CB9C LDR X0, [X8]
	0x0327CBA0 BL 0x1C16F10
	0x0327CBA4 MOV X1, X31
	0x0327CBA8 MOV X20, X0
	0x0327CBAC BL 0x335A0A0
	0x0327CBB0 STR X20, [X19 + 0x40]
	0x0327CBB4 MOV X0, X20
	0x0327CBB8 LDP X20, X19, [X31 + 0x10]
	0x0327CBBC LDR X30, [X31], #0x20
	0x0327CBC0 RET
	0x0327CBC4 B 0x327CBC8
	0x0327CBC8 STP X30, X21, [X31 - 0x20]!
	0x0327CBCC STP X20, X19, [X31 + 0x10]
	0x0327CBD0 ADRP X20, 0x1160000
	0x0327CBD4 ADRP X21, 0xEA7000
	0x0327CBD8 LDRB W8, [X20 + 0x604]
	0x0327CBDC LDR X21, [X21 + 0xDB8]
	0x0327CBE0 MOV X19, X0
	0x0327CBE4 TBNZ X8, 0x0, 0x327CBFC
	0x0327CBE8 ADRP X0, 0xEA7000
	0x0327CBEC LDR X0, [X0 + 0xDB8]
	0x0327CBF0 BL 0x1C16CF4
	0x0327CBF4 MOVZ W8, 0x1
	0x0327CBF8 STRB W8, [X20 + 0x604]
	0x0327CBFC LDR X0, [X21]
	0x0327CC00 BL 0x1C16F10
	0x0327CC04 MOV X1, X31
	0x0327CC08 MOV X20, X0
	0x0327CC0C BL 0x335A0A0
	0x0327CC10 STR X20, [X19 + 0x28]
	0x0327CC14 MOV X0, X19
	0x0327CC18 LDP X20, X19, [X31 + 0x10]
	0x0327CC1C MOV X1, X31
	0x0327CC20 LDP X30, X21, [X31], #0x20
	0x0327CC24 B 0x33BDD8C
	0x0327CC28 STP X30, X21, [X31 - 0x20]!
	0x0327CC2C STP X20, X19, [X31 + 0x10]
	0x0327CC30 ADRP X21, 0x1160000
	0x0327CC34 LDRB W8, [X21 + 0x5FB]
	0x0327CC38 MOV X19, X2
	0x0327CC3C MOV X20, X1
	0x0327CC40 TBNZ X8, 0x0, 0x327CC64
	0x0327CC44 ADRP X0, 0xEA5000
	0x0327CC48 LDR X0, [X0 + 0x8F8]
	0x0327CC4C BL 0x1C16CF4
	0x0327CC50 ADRP X0, 0xE77000
	0x0327CC54 LDR X0, [X0 + 0x988]
	0x0327CC58 BL 0x1C16CF4
	0x0327CC5C MOVZ W8, 0x1
	0x0327CC60 STRB W8, [X21 + 0x5FB]
	0x0327CC64 CBZ X20, 0x327CD54
	0x0327CC68 ADRP X10, 0xEA5000
	0x0327CC6C LDR X8, [X20]
	0x0327CC70 LDR X10, [X10 + 0x8F8]
	0x0327CC74 LDRH W9, [X8 + 0x12E]
	0x0327CC78 LDR X1, [X10]
	0x0327CC7C CBZ X9, 0x327CCA0
	0x0327CC80 LDR X10, [X8 + 0xB0]
	0x0327CC84 ADD X10, X10, 0x8
	0x0327CC88 LDUR X11, [X10 - 0x8]
	0x0327CC8C CMP X11, X1
	0x0327CC90 B.EQ 0x327CCB0
	0x0327CC94 SUBS X9, X9, 0x1
	0x0327CC98 ADD X10, X10, 0x10
	0x0327CC9C B.NE 0x327CC88
	0x0327CCA0 MOVZ W2, 0x3
	0x0327CCA4 MOV X0, X20
	0x0327CCA8 BL 0x1C5C788
	0x0327CCAC B 0x327CCC0
	0x0327CCB0 LDR W9, [X10]
	0x0327CCB4 ADD W9, W9, 0x3
	0x0327CCB8 ADD X8, X8, W9, 0x4, SXTW
	0x0327CCBC ADD X0, X8, 0x138
	0x0327CCC0 LDP X8, X2, [X0]
	0x0327CCC4 MOV X0, X20
	0x0327CCC8 MOV X1, X19
	0x0327CCCC BLR X8
	0x0327CCD0 CBZ X0, 0x327CD00
	0x0327CCD4 ADRP X8, 0xE77000
	0x0327CCD8 LDR X8, [X8 + 0x988]
	0x0327CCDC MOV X2, X31
	0x0327CCE0 MOV X20, X0
	0x0327CCE4 LDR X1, [X8]
	0x0327CCE8 BL 0x321BA08
	0x0327CCEC TBNZ X0, 0x0, 0x327CD00
	0x0327CCF0 MOV X0, X20
	0x0327CCF4 LDP X20, X19, [X31 + 0x10]
	0x0327CCF8 LDP X30, X21, [X31], #0x20
	0x0327CCFC RET
	0x0327CD00 ADRP X0, 0xEA8000
	0x0327CD04 LDR X0, [X0 + 0x210]
	0x0327CD08 BL 0x1C16D08
	0x0327CD0C MOV X1, X0

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X27, 0x1161000
	013 Move X28, 0xEA9000
	014 Move X25, 0xEA9000
	015 Move X26, 0xEA8000
	016 Move X24, 0xEA8000
	017 Move X23, 0xE9F000
	018 Move W8, [X27+1524]
	019 Move X28, [X28+24]
	020 Move X25, [X25+312]
	021 Move X26, [X26+3800]
	022 Move X24, [X24+3840]
	023 Move X23, [X23+1008]
	024 Move W19, W3
	025 Move X20, X2
	026 Move X21, X1
	027 Move X22, X0
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {64}
	032 Move X0, 0xEA9000
	033 Move X0, [X0+312]
	034 Call 0x1C17CF4
	035 Move X0, 0xEA6000
	036 Move X0, [X0+2296]
	037 Call 0x1C17CF4
	038 Move X0, 0xEA8000
	039 Move X0, [X0+3800]
	040 Call 0x1C17CF4
	041 Move X0, 0xEA8000
	042 Move X0, [X0+3840]
	043 Call 0x1C17CF4
	044 Move X0, 0xEA6000
	045 Move X0, [X0+2248]
	046 Call 0x1C17CF4
	047 Move X0, 0xEA9000
	048 Move X0, [X0+24]
	049 Call 0x1C17CF4
	050 Move X0, 0xEA9000
	051 Move X0, [X0+280]
	052 Call 0x1C17CF4
	053 Move X0, 0xE7A000
	054 Move X0, [X0+3088]
	055 Call 0x1C17CF4
	056 Move X0, 0xE9F000
	057 Move X0, [X0+1008]
	058 Call 0x1C17CF4
	059 Move X0, 0xE80000
	060 Move X0, [X0+1512]
	061 Call 0x1C17CF4
	062 Move W8, 1
	063 Move [X27+1524], W8
	064 Move X1, [X28]
	065 Move X0, X21
	066 Move X2, X31
	067 Call String.op_Equality, X0, X1
	068 And W31, W0, 1
	069 NotImplemented "Instruction CSEL not yet implemented."
	070 Move X0, [X8]
	071 Call 0x1C17F10
	072 Move X21, X0
	073 Call ProviderData..ctor, X0
	074 Move X0, [X24]
	075 Call 0x1C17F10
	076 Move X1, [X23]
	077 Move X2, X31
	078 Move X23, X0
	079 Call SinkProviderData..ctor, X0, X1
	080 Compare X23, 0
	081 JumpIfEqual {260}
	082 Compare X21, 0
	083 JumpIfEqual {260}
	084 Move X8, [X23+24]
	085 Move X9, 0xEA6000
	086 Move X9, [X9+2248]
	087 Move [X21+48], X8
	088 Move X0, [X9]
	089 Call 0x1C17F10
	090 Move X1, X31
	091 Move X24, X0
	092 Call Stack..ctor, X0
	093 Move [X22+40], X24
	094 Compare X24, 0
	095 JumpIfEqual {260}
	096 Move X8, [X24]
	097 Move X0, X24
	098 Move X1, X23
	099 Move X9, [X8+616]
	100 Move X2, [X8+624]
	101 NotImplemented "Instruction BLR not yet implemented."
	102 Compare X20, 0
	103 JumpIfEqual {260}
	104 Move X25, 0xEA6000
	105 Move X26, 0xE7A000
	106 Move X27, 0xE80000
	107 Move X28, 0xEA9000
	108 Move X25, [X25+2296]
	109 Move X26, [X26+3088]
	110 Move X27, [X27+1512]
	111 Move X28, [X28+280]
	112 Move X24, X31
	113 Move X8, [X20]
	114 Move X1, [X25]
	115 NotImplemented "Instruction LDRH not yet implemented."
	116 Compare X9, 0
	117 JumpIfEqual {124}
	118 Move X10, [X8+176]
	119 Add X10, X10, 8
	120 NotImplemented "Instruction LDUR not yet implemented."
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Subtract X9, X9, 1
	123 Add X10, X10, 16
	124 Move W2, 4
	125 Move X0, X20
	126 Call 0x1C5D788
	127 Move W9, [X10]
	128 Add W9, W9, 4
	129 Add X8, X8, W9
	130 Add X0, X8, 312
	131 Move X8, [X0]
	132 Move X1, [X0+8]
	133 Move X0, X20
	134 NotImplemented "Instruction BLR not yet implemented."
	135 Compare X0, 0
	136 JumpIfEqual {260}
	137 NotImplemented "Instruction LDRSW not yet implemented."
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X8, [X20]
	140 Move X1, [X25]
	141 NotImplemented "Instruction LDRH not yet implemented."
	142 Compare X9, 0
	143 JumpIfEqual {150}
	144 Move X10, [X8+176]
	145 Add X10, X10, 8
	146 NotImplemented "Instruction LDUR not yet implemented."
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Subtract X9, X9, 1
	149 Add X10, X10, 16
	150 Move W2, 4
	151 Move X0, X20
	152 Call 0x1C5D788
	153 Move W9, [X10]
	154 Add W9, W9, 4
	155 Add X8, X8, W9
	156 Add X0, X8, 312
	157 Move X8, [X0]
	158 Move X1, [X0+8]
	159 Move X0, X20
	160 NotImplemented "Instruction BLR not yet implemented."
	161 Compare X0, 0
	162 JumpIfEqual {260}
	163 Move W8, [X0+24]
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move X8, [X20]
	166 Add X9, X0, X24
	167 Move X22, [X9+32]
	168 Move X1, [X25]
	169 NotImplemented "Instruction LDRH not yet implemented."
	170 Compare X9, 0
	171 JumpIfEqual {178}
	172 Move X10, [X8+176]
	173 Add X10, X10, 8
	174 NotImplemented "Instruction LDUR not yet implemented."
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Subtract X9, X9, 1
	177 Add X10, X10, 16
	178 Move W2, 5
	179 Move X0, X20
	180 Call 0x1C5D788
	181 Move W9, [X10]
	182 Add W9, W9, 5
	183 Add X8, X8, W9
	184 Add X0, X8, 312
	185 Move X8, [X0]
	186 Move X1, [X0+8]
	187 Move X0, X20
	188 NotImplemented "Instruction BLR not yet implemented."
	189 Compare X0, 0
	190 JumpIfEqual {260}
	191 Move W8, [X0+24]
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Add X8, X0, X24
	194 Move X1, [X26]
	195 Move X23, [X8+32]
	196 Move X0, X22
	197 Move X2, X31
	198 Call String.op_Equality, X0, X1
	199 Move TEMP, X0
	200 And TEMP, TEMP, 1
	201 Compare TEMP, 1
	202 JumpIfNotEqual {208}
	203 Move TEMP, X19
	204 And TEMP, TEMP, 1
	205 Compare TEMP, 1
	206 JumpIfNotEqual {208}
	207 Move [X21+32], X23
	208 Move X1, [X27]
	209 Move X0, X22
	210 Move X2, X31
	211 Call String.op_Equality, X0, X1
	212 Move TEMP, X0
	213 And TEMP, TEMP, 1
	214 Compare TEMP, 1
	215 JumpIfNotEqual {217}
	216 Move [X21+24], X23
	217 Move X1, [X28]
	218 Move X0, X22
	219 Move X2, X31
	220 Call String.op_Equality, X0, X1
	221 Move TEMP, X0
	222 And TEMP, TEMP, 1
	223 Compare TEMP, 1
	224 JumpIfNotEqual {230}
	225 Move TEMP, X19
	226 And TEMP, TEMP, 1
	227 Compare TEMP, 1
	228 JumpIfEqual {230}
	229 Move [X21+16], X23
	230 Move X0, [X21+40]
	231 Compare X0, 0
	232 JumpIfEqual {260}
	233 Move X8, [X0]
	234 Move X1, X22
	235 Move X2, X23
	236 Move X9, [X8+632]
	237 Move X3, [X8+640]
	238 NotImplemented "Instruction BLR not yet implemented."
	239 Add X24, X24, 1
	240 Move X8, [X21+32]
	241 Compare X8, 0
	242 JumpIfNotEqual {247}
	243 Move TEMP, X19
	244 And TEMP, TEMP, 1
	245 Compare TEMP, 1
	246 JumpIfEqual {262}
	247 Move X0, X21
	248 Move X20, [X31+80]
	249 Move X19, [X31+88]
	250 Move X22, [X31+64]
	251 Move X21, [X31+72]
	252 Move X24, [X31+48]
	253 Move X23, [X31+56]
	254 Move X26, [X31+32]
	255 Move X25, [X31+40]
	256 Move X28, [X31+16]
	257 Move X27, [X31+24]
	258 Move X30, [X31+96]
	259 Return X0
	260 Call 0x1C17F20
	261 Call 0x1C17F28
	262 Move X0, 0xEA8000
	263 Move X0, [X0+3360]
	264 Call 0x1C17D08
	265 Call 0x1C17F10
	266 Move X19, X0
	267 Move X0, 0xEA9000
	268 Move X0, [X0+296]
	269 Call 0x1C17D08
	270 Move X1, X0
	271 Move X0, X19
	272 Call RemotingException..ctor, X0, X1
	273 Move X0, 0xEA9000
	274 Move X0, [X0+320]
	275 Call 0x1C17D08
	276 Move X1, X0
	277 Move X0, X19
	278 Call 0x1C17DEC

Method: System.Void ReadClientActivated(Mono.Xml.SmallXmlParser/IAttrList attrs)

Disassembly:
	0x0327CFD8 BL 0x1C16DFC
	0x0327CFDC MOV X0, X24
	0x0327CFE0 MOV X1, X31
	0x0327CFE4 MOV X2, X31
	0x0327CFE8 BL 0x3395194
	0x0327CFEC TBNZ X0, 0x0, 0x327D008
	0x0327CFF0 LDP X20, X19, [X31 + 0x30]
	0x0327CFF4 LDP X22, X21, [X31 + 0x20]
	0x0327CFF8 LDP X24, X23, [X31 + 0x10]
	0x0327CFFC LDP X30, X25, [X31], #0x40
	0x0327D000 RET
	0x0327D004 BL 0x1C16F20
	0x0327D008 ADRP X0, 0xEA6000
	0x0327D00C LDR X0, [X0 + 0xD18]
	0x0327D010 BL 0x1C16D08
	0x0327D014 MOV X21, X0
	0x0327D018 ADRP X0, 0xE76000
	0x0327D01C LDR X0, [X0 + 0x838]
	0x0327D020 BL 0x1C16D08
	0x0327D024 MOV X2, X0
	0x0327D028 MOV X0, X21
	0x0327D02C MOV X1, X20
	0x0327D030 MOV X3, X19
	0x0327D034 MOV X4, X31
	0x0327D038 BL 0x32277C4
	0x0327D03C MOV X19, X0
	0x0327D040 ADRP X0, 0xEA6000
	0x0327D044 LDR X0, [X0 + 0xD20]
	0x0327D048 BL 0x1C16D08
	0x0327D04C BL 0x1C16F10
	0x0327D050 MOV X1, X19
	0x0327D054 MOV X20, X0
	0x0327D058 BL 0x3273098
	0x0327D05C ADRP X0, 0xEA7000
	0x0327D060 LDR X0, [X0 + 0x228]
	0x0327D064 BL 0x1C16D08
	0x0327D068 MOV X1, X0
	0x0327D06C MOV X0, X20
	0x0327D070 BL 0x1C16DEC
	0x0327D074 SUB X31, X31, 0x40
	0x0327D078 STP X30, X23, [X31 + 0x10]
	0x0327D07C STP X22, X21, [X31 + 0x20]
	0x0327D080 STP X20, X19, [X31 + 0x30]
	0x0327D084 ADRP X19, 0x115F000
	0x0327D088 ADRP X23, 0xEA7000
	0x0327D08C LDRB W8, [X19 + 0x645]
	0x0327D090 LDR X23, [X23 + 0x198]
	0x0327D094 MOV X20, X2
	0x0327D098 MOV X21, X1
	0x0327D09C MOV X22, X0
	0x0327D0A0 TBNZ X8, 0x0, 0x327D0C4
	0x0327D0A4 ADRP X0, 0xEA7000
	0x0327D0A8 LDR X0, [X0 + 0x198]
	0x0327D0AC BL 0x1C16CF4
	0x0327D0B0 ADRP X0, 0xE76000
	0x0327D0B4 LDR X0, [X0 + 0xDD8]
	0x0327D0B8 BL 0x1C16CF4
	0x0327D0BC MOVZ W8, 0x1
	0x0327D0C0 STRB W8, [X19 + 0x645]
	0x0327D0C4 LDR X0, [X23]
	0x0327D0C8 LDR W8, [X0 + 0xE0]
	0x0327D0CC CBNZ W8, 0x327D0D8
	0x0327D0D0 BL 0x1C16DFC
	0x0327D0D4 LDR X0, [X23]
	0x0327D0D8 LDR X8, [X0 + 0xB8]
	0x0327D0DC LDR X0, [X8 + 0x8]
	0x0327D0E0 CBZ X0, 0x327D190
	0x0327D0E4 LDR X8, [X0]
	0x0327D0E8 LDR X9, [X8 + 0x368]
	0x0327D0EC LDR X1, [X8 + 0x370]
	0x0327D0F0 BLR X9
	0x0327D0F4 MOV X19, X0
	0x0327D0F8 STRB W31, [X31 + 0xC]
	0x0327D0FC ADD X1, X31, 0xC
	0x0327D100 MOV X2, X31
	0x0327D104 BL 0x33DE64C
	0x0327D108 LDR X0, [X23]
	0x0327D10C LDR W8, [X0 + 0xE0]
	0x0327D110 CBNZ W8, 0x327D11C

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x1161000
	009 Move X22, 0xE80000
	010 Move W8, [X21+1525]
	011 Move X22, [X22+1512]
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xEA7000
	019 Move X0, [X0+3720]
	020 Call 0x1C17CF4
	021 Move X0, 0xE77000
	022 Move X0, [X0+2440]
	023 Call 0x1C17CF4
	024 Move X0, 0xE7F000
	025 Move X0, [X0+1512]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+1525], W8
	029 Move X2, [X22]
	030 Move X1, X20
	031 Call ConfigHandler.GetNotNull, X0, X1, X2
	032 Add X1, X31, 8
	033 Move [X31+8], X0
	034 Call ConfigHandler.ExtractAssembly, X0, X1
	035 Move X8, [X19+48]
	036 Compare X8, 0
	037 JumpIfEqual {76}
	038 Move X9, 0xE77000
	039 Move X9, [X9+2440]
	040 Move X20, X0
	041 Move X0, X8
	042 Move X2, X31
	043 Move X1, [X9]
	044 Call String.op_Equality, X0, X1
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {76}
	049 Move X8, 0xEA7000
	050 Move X8, [X8+3720]
	051 Move X21, [X19+16]
	052 Move X22, [X31+8]
	053 Move X23, [X19+48]
	054 Move X0, [X8]
	055 Call 0x1C17F10
	056 Move X1, X22
	057 Move X2, X20
	058 Move X3, X23
	059 Move X19, X0
	060 Call ActivatedClientTypeEntry..ctor, X0, X1, X2, X3
	061 Compare X21, 0
	062 JumpIfEqual {93}
	063 Move X8, [X21]
	064 Move X0, X21
	065 Move X1, X19
	066 Move X20, [X31+48]
	067 Move X19, [X31+56]
	068 Move X3, [X8+776]
	069 Move X2, [X8+784]
	070 Move X22, [X31+32]
	071 Move X21, [X31+40]
	072 Move X30, [X31+16]
	073 Move X23, [X31+24]
	074 Add X31, X31, 64
	075 CallNoReturn X3
	076 Move X0, 0xEA7000
	077 Move X0, [X0+3360]
	078 Call 0x1C17D08
	079 Call 0x1C17F10
	080 Move X19, X0
	081 Move X0, 0xEA8000
	082 Move X0, [X0+376]
	083 Call 0x1C17D08
	084 Move X1, X0
	085 Move X0, X19
	086 Call RemotingException..ctor, X0, X1
	087 Move X0, 0xEA8000
	088 Move X0, [X0+384]
	089 Call 0x1C17D08
	090 Move X1, X0
	091 Move X0, X19
	092 Call 0x1C17DEC
	093 Call 0x1C17F20

Method: System.Void ReadServiceActivated(Mono.Xml.SmallXmlParser/IAttrList attrs)

Disassembly:
	0x0327D114 BL 0x1C16DFC
	0x0327D118 LDR X0, [X23]
	0x0327D11C ADRP X9, 0xE76000
	0x0327D120 LDR X8, [X0 + 0xB8]
	0x0327D124 LDR X9, [X9 + 0xDD8]
	0x0327D128 LDR X23, [X8 + 0x8]
	0x0327D12C LDR X1, [X9]
	0x0327D130 MOV X0, X22
	0x0327D134 MOV X2, X21
	0x0327D138 MOV X3, X31
	0x0327D13C BL 0x32274B8
	0x0327D140 MOV X1, X0
	0x0327D144 CBZ X23, 0x327D19C
	0x0327D148 LDR X8, [X23]
	0x0327D14C LDR X9, [X8 + 0x2E8]
	0x0327D150 LDR X3, [X8 + 0x2F0]
	0x0327D154 MOV X0, X23
	0x0327D158 MOV X2, X20
	0x0327D15C BLR X9
	0x0327D160 MOV X20, X31
	0x0327D164 LDRB W8, [X31 + 0xC]
	0x0327D168 CBZ W8, 0x327D178
	0x0327D16C MOV X0, X19
	0x0327D170 MOV X1, X31
	0x0327D174 BL 0x33E14E4
	0x0327D178 CBNZ X20, 0x327D194
	0x0327D17C LDP X20, X19, [X31 + 0x30]
	0x0327D180 LDP X22, X21, [X31 + 0x20]
	0x0327D184 LDP X30, X23, [X31 + 0x10]
	0x0327D188 ADD X31, X31, 0x40
	0x0327D18C RET
	0x0327D190 BL 0x1C16F20
	0x0327D194 MOV X0, X20
	0x0327D198 BL 0x1C16F18
	0x0327D19C BL 0x1C16F20
	0x0327D1A0 B 0x327D1A8
	0x0327D1A4 B 0x327D1A8
	0x0327D1A8 MOV X21, X0
	0x0327D1AC CMP W1, 0x1
	0x0327D1B0 B.NE 0x327D1C8
	0x0327D1B4 MOV X0, X21
	0x0327D1B8 BL 0x3EB1AD0
	0x0327D1BC LDR X20, [X0]
	0x0327D1C0 BL 0x3EB1AE0
	0x0327D1C4 B 0x327D164
	0x0327D1C8 MOV X20, X31
	0x0327D1CC B 0x327D1D4
	0x0327D1D0 MOV X21, X0
	0x0327D1D4 LDRB W8, [X31 + 0xC]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x1160000
	009 Move X23, 0xE7F000
	010 Move X22, 0xEA7000
	011 Move W8, [X21+1526]
	012 Move X23, [X23+1512]
	013 Move X22, [X22+3944]
	014 Move X20, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0xEA7000
	021 Move X0, [X0+3944]
	022 Call 0x1C17CF4
	023 Move X0, 0xE7F000
	024 Move X0, [X0+1512]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+1526], W8
	028 Move X2, [X23]
	029 Move X1, X20
	030 Call ConfigHandler.GetNotNull, X0, X1, X2
	031 Add X1, X31, 8
	032 Move [X31+8], X0
	033 Call ConfigHandler.ExtractAssembly, X0, X1
	034 Move X8, [X22]
	035 Move X19, [X19+16]
	036 Move X21, [X31+8]
	037 Move X22, X0
	038 Move X0, X8
	039 Call 0x1C17F10
	040 Move X1, X21
	041 Move X2, X22
	042 Move X20, X0
	043 Call ActivatedServiceTypeEntry..ctor, X0, X1, X2
	044 Compare X19, 0
	045 JumpIfEqual {59}
	046 Move X8, [X19]
	047 Move X0, X19
	048 Move X1, X20
	049 Move X20, [X31+48]
	050 Move X19, [X31+56]
	051 Move X3, [X8+776]
	052 Move X2, [X8+784]
	053 Move X22, [X31+32]
	054 Move X21, [X31+40]
	055 Move X30, [X31+16]
	056 Move X23, [X31+24]
	057 Add X31, X31, 64
	058 CallNoReturn X3
	059 Call 0x1C17F20

Method: System.Void ReadClientWellKnown(Mono.Xml.SmallXmlParser/IAttrList attrs)

Disassembly:
	0x0327CD10 MOV X0, X19
	0x0327CD14 MOV X2, X31
	0x0327CD18 BL 0x321B938
	0x0327CD1C MOV X19, X0
	0x0327CD20 ADRP X0, 0xEA7000
	0x0327CD24 LDR X0, [X0 + 0xD20]
	0x0327CD28 BL 0x1C16D08
	0x0327CD2C BL 0x1C16F10
	0x0327CD30 MOV X1, X19
	0x0327CD34 MOV X20, X0
	0x0327CD38 BL 0x3273098
	0x0327CD3C ADRP X0, 0xEA8000
	0x0327CD40 LDR X0, [X0 + 0x218]
	0x0327CD44 BL 0x1C16D08
	0x0327CD48 MOV X1, X0
	0x0327CD4C MOV X0, X20
	0x0327CD50 BL 0x1C16DEC
	0x0327CD54 BL 0x1C16F20
	0x0327CD58 STP X30, X21, [X31 - 0x20]!
	0x0327CD5C STP X20, X19, [X31 + 0x10]
	0x0327CD60 ADRP X20, 0x1160000
	0x0327CD64 LDRB W8, [X20 + 0x5FC]
	0x0327CD68 MOV X19, X1
	0x0327CD6C TBNZ X8, 0x0, 0x327CD84
	0x0327CD70 ADRP X0, 0xE77000
	0x0327CD74 LDR X0, [X0 + 0x988]
	0x0327CD78 BL 0x1C16CF4
	0x0327CD7C MOVZ W8, 0x1
	0x0327CD80 STRB W8, [X20 + 0x5FC]
	0x0327CD84 LDR X0, [X19]
	0x0327CD88 CBZ X0, 0x327CE14
	0x0327CD8C MOVZ W1, 0x2C
	0x0327CD90 MOV X2, X31
	0x0327CD94 BL 0x322BD98
	0x0327CD98 ADDS W31, W0, 0x1
	0x0327CD9C B.EQ 0x327CDF8
	0x0327CDA0 MOV W20, W0
	0x0327CDA4 LDR X0, [X19]
	0x0327CDA8 CBZ X0, 0x327CE14
	0x0327CDAC ADD W1, W20, 0x1
	0x0327CDB0 MOV X2, X31
	0x0327CDB4 BL 0x322B484
	0x0327CDB8 CBZ X0, 0x327CE14
	0x0327CDBC MOV X1, X31
	0x0327CDC0 BL 0x322B8DC
	0x0327CDC4 LDR X8, [X19]
	0x0327CDC8 CBZ X8, 0x327CE14
	0x0327CDCC MOV X21, X0
	0x0327CDD0 MOV X0, X8
	0x0327CDD4 MOV W1, W31
	0x0327CDD8 MOV W2, W20
	0x0327CDDC MOV X3, X31
	0x0327CDE0 BL 0x3228DE4
	0x0327CDE4 CBZ X0, 0x327CE14
	0x0327CDE8 MOV X1, X31
	0x0327CDEC BL 0x322B8DC
	0x0327CDF0 STR X0, [X19]
	0x0327CDF4 B 0x327CE04
	0x0327CDF8 ADRP X8, 0xE77000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x1161000
	009 Move X24, 0xEA8000
	010 Move X21, 0xE80000
	011 Move X23, 0xEA8000
	012 Move W8, [X22+1527]
	013 Move X24, [X24+4080]
	014 Move X21, [X21+1512]
	015 Move X23, [X23+3728]
	016 Move X20, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {33}
	022 Move X0, 0xEA8000
	023 Move X0, [X0+3728]
	024 Call 0x1C17CF4
	025 Move X0, 0xEA8000
	026 Move X0, [X0+4080]
	027 Call 0x1C17CF4
	028 Move X0, 0xE80000
	029 Move X0, [X0+1512]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X22+1527], W8
	033 Move X2, [X24]
	034 Move X1, X20
	035 Call ConfigHandler.GetNotNull, X0, X1, X2
	036 Move X2, [X21]
	037 Move X1, X20
	038 Move X21, X0
	039 Call ConfigHandler.GetNotNull, X0, X1, X2
	040 Add X1, X31, 8
	041 Move [X31+8], X0
	042 Call ConfigHandler.ExtractAssembly, X0, X1
	043 Move X8, [X23]
	044 Move X19, [X19+16]
	045 Move X22, [X31+8]
	046 Move X23, X0
	047 Move X0, X8
	048 Call 0x1C17F10
	049 Move X1, X22
	050 Move X2, X23
	051 Move X3, X21
	052 Move X20, X0
	053 Call WellKnownClientTypeEntry..ctor, X0, X1, X2, X3
	054 Compare X19, 0
	055 JumpIfEqual {69}
	056 Move X8, [X19]
	057 Move X0, X19
	058 Move X1, X20
	059 Move X20, [X31+48]
	060 Move X19, [X31+56]
	061 Move X3, [X8+776]
	062 Move X2, [X8+784]
	063 Move X22, [X31+32]
	064 Move X21, [X31+40]
	065 Move X24, [X31+16]
	066 Move X23, [X31+24]
	067 Move X30, [X31+64]
	068 CallNoReturn X3
	069 Call 0x1C17F20

Method: System.Void ReadServiceWellKnown(Mono.Xml.SmallXmlParser/IAttrList attrs)

Disassembly:
	0x0327CDFC LDR X8, [X8 + 0x988]
	0x0327CE00 LDR X21, [X8]
	0x0327CE04 LDP X20, X19, [X31 + 0x10]
	0x0327CE08 MOV X0, X21
	0x0327CE0C LDP X30, X21, [X31], #0x20
	0x0327CE10 RET
	0x0327CE14 BL 0x1C16F20
	0x0327CE18 STP X30, X23, [X31 - 0x30]!
	0x0327CE1C STP X22, X21, [X31 + 0x10]
	0x0327CE20 STP X20, X19, [X31 + 0x20]
	0x0327CE24 ADRP X23, 0x1160000
	0x0327CE28 LDRB W8, [X23 + 0x64B]
	0x0327CE2C MOV X22, X3
	0x0327CE30 MOV X19, X2
	0x0327CE34 MOV X20, X1
	0x0327CE38 MOV X21, X0
	0x0327CE3C TBNZ X8, 0x0, 0x327CE54
	0x0327CE40 ADRP X0, 0xE77000
	0x0327CE44 LDR X0, [X0 + 0x6C0]
	0x0327CE48 BL 0x1C16CF4
	0x0327CE4C MOVZ W8, 0x1
	0x0327CE50 STRB W8, [X23 + 0x64B]
	0x0327CE54 MOV X0, X21
	0x0327CE58 MOV X1, X31
	0x0327CE5C BL 0x33BDD8C
	0x0327CE60 MOV X0, X19
	0x0327CE64 MOV X1, X31
	0x0327CE68 STR X22, [X21 + 0x28]
	0x0327CE6C STP X19, X20, [X21 + 0x10]
	0x0327CE70 BL 0x32D59A8
	0x0327CE74 CBZ X0, 0x327CED0
	0x0327CE78 LDR X8, [X0]
	0x0327CE7C ADRP X23, 0xE77000
	0x0327CE80 MOV X1, X20
	0x0327CE84 LDR X9, [X8 + 0x238]
	0x0327CE88 LDR X2, [X8 + 0x240]
	0x0327CE8C LDR X23, [X23 + 0x6C0]
	0x0327CE90 BLR X9
	0x0327CE94 STR X0, [X21 + 0x20]
	0x0327CE98 MOV X22, X0
	0x0327CE9C LDR X0, [X23]
	0x0327CEA0 LDR W8, [X0 + 0xE0]
	0x0327CEA4 CBNZ W8, 0x327CEAC
	0x0327CEA8 BL 0x1C16DFC
	0x0327CEAC MOV X0, X22
	0x0327CEB0 MOV X1, X31
	0x0327CEB4 MOV X2, X31
	0x0327CEB8 BL 0x3395194
	0x0327CEBC TBNZ X0, 0x0, 0x327CED4
	0x0327CEC0 LDP X20, X19, [X31 + 0x20]
	0x0327CEC4 LDP X22, X21, [X31 + 0x10]
	0x0327CEC8 LDP X30, X23, [X31], #0x30
	0x0327CECC RET
	0x0327CED0 BL 0x1C16F20
	0x0327CED4 ADRP X0, 0xEA7000
	0x0327CED8 LDR X0, [X0 + 0xD18]
	0x0327CEDC BL 0x1C16D08
	0x0327CEE0 MOV X21, X0
	0x0327CEE4 ADRP X0, 0xE77000
	0x0327CEE8 LDR X0, [X0 + 0x838]
	0x0327CEEC BL 0x1C16D08
	0x0327CEF0 MOV X2, X0
	0x0327CEF4 MOV X0, X21
	0x0327CEF8 MOV X1, X20
	0x0327CEFC MOV X3, X19
	0x0327CF00 MOV X4, X31
	0x0327CF04 BL 0x32277C4
	0x0327CF08 MOV X19, X0
	0x0327CF0C ADRP X0, 0xEA7000
	0x0327CF10 LDR X0, [X0 + 0xD20]
	0x0327CF14 BL 0x1C16D08
	0x0327CF18 BL 0x1C16F10
	0x0327CF1C MOV X1, X19
	0x0327CF20 MOV X20, X0
	0x0327CF24 BL 0x3273098
	0x0327CF28 ADRP X0, 0xEA8000
	0x0327CF2C LDR X0, [X0 + 0x220]
	0x0327CF30 BL 0x1C16D08
	0x0327CF34 MOV X1, X0
	0x0327CF38 MOV X0, X20
	0x0327CF3C BL 0x1C16DEC
	0x0327CF40 STP X30, X25, [X31 - 0x40]!
	0x0327CF44 STP X24, X23, [X31 + 0x10]
	0x0327CF48 STP X22, X21, [X31 + 0x20]
	0x0327CF4C STP X20, X19, [X31 + 0x30]
	0x0327CF50 ADRP X24, 0x1160000
	0x0327CF54 LDRB W8, [X24 + 0x64C]
	0x0327CF58 MOV W21, W4
	0x0327CF5C MOV X22, X3
	0x0327CF60 MOV X19, X2
	0x0327CF64 MOV X20, X1
	0x0327CF68 MOV X23, X0
	0x0327CF6C TBNZ X8, 0x0, 0x327CF84
	0x0327CF70 ADRP X0, 0xE77000
	0x0327CF74 LDR X0, [X0 + 0x6C0]
	0x0327CF78 BL 0x1C16CF4
	0x0327CF7C MOVZ W8, 0x1
	0x0327CF80 STRB W8, [X24 + 0x64C]
	0x0327CF84 MOV X0, X23
	0x0327CF88 MOV X1, X31
	0x0327CF8C BL 0x33BDD8C
	0x0327CF90 MOV X0, X19
	0x0327CF94 MOV X1, X31
	0x0327CF98 STP X19, X20, [X23 + 0x10]
	0x0327CF9C BL 0x32D59A8
	0x0327CFA0 CBZ X0, 0x327D004
	0x0327CFA4 LDR X8, [X0]
	0x0327CFA8 ADRP X25, 0xE77000
	0x0327CFAC MOV X1, X20
	0x0327CFB0 LDR X9, [X8 + 0x238]
	0x0327CFB4 LDR X2, [X8 + 0x240]
	0x0327CFB8 LDR X25, [X25 + 0x6C0]
	0x0327CFBC BLR X9
	0x0327CFC0 STP X0, X22, [X23 + 0x20]
	0x0327CFC4 STR W21, [X23 + 0x30]
	0x0327CFC8 MOV X24, X0
	0x0327CFCC LDR X0, [X25]
	0x0327CFD0 LDR W8, [X0 + 0xE0]
	0x0327CFD4 CBNZ W8, 0x327CFDC

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X24, 0x1161000
	011 Move X25, 0xEA9000
	012 Move X20, 0xEA9000
	013 Move X22, 0xE80000
	014 Move X23, 0xEA9000
	015 Move W8, [X24+1528]
	016 Move X25, [X25+328]
	017 Move X20, [X20+104]
	018 Move X22, [X22+1512]
	019 Move X23, [X23+336]
	020 Move X21, X1
	021 Move X19, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {46}
	026 Move X0, 0xEA8000
	027 Move X0, [X0+3960]
	028 Call 0x1C17CF4
	029 Move X0, 0xEA9000
	030 Move X0, [X0+344]
	031 Call 0x1C17CF4
	032 Move X0, 0xEA9000
	033 Move X0, [X0+336]
	034 Call 0x1C17CF4
	035 Move X0, 0xEA9000
	036 Move X0, [X0+104]
	037 Call 0x1C17CF4
	038 Move X0, 0xEA9000
	039 Move X0, [X0+328]
	040 Call 0x1C17CF4
	041 Move X0, 0xE80000
	042 Move X0, [X0+1512]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X24+1528], W8
	046 Move X2, [X25]
	047 Move X1, X21
	048 Call ConfigHandler.GetNotNull, X0, X1, X2
	049 Move X2, [X20]
	050 Move X1, X21
	051 Move X20, X0
	052 Call ConfigHandler.GetNotNull, X0, X1, X2
	053 Move X2, [X22]
	054 Move X1, X21
	055 Move X22, X0
	056 Call ConfigHandler.GetNotNull, X0, X1, X2
	057 Add X1, X31, 8
	058 Move [X31+8], X0
	059 Call ConfigHandler.ExtractAssembly, X0, X1
	060 Move X1, [X23]
	061 Move X21, X0
	062 Move X0, X22
	063 Move X2, X31
	064 Call String.op_Equality, X0, X1
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {70}
	069 Move W22, 2
	070 Move X8, 0xEA9000
	071 Move X8, [X8+344]
	072 Move X0, X22
	073 Move X2, X31
	074 Move X1, [X8]
	075 Call String.op_Equality, X0, X1
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {111}
	080 Move W22, 1
	081 Move X8, 0xEA8000
	082 Move X8, [X8+3960]
	083 Move X19, [X19+16]
	084 Move X24, [X31+8]
	085 Move X0, [X8]
	086 Call 0x1C17F10
	087 Move X1, X24
	088 Move X2, X21
	089 Move X3, X20
	090 Move W4, W22
	091 Move X23, X0
	092 Call WellKnownServiceTypeEntry..ctor, X0, X1, X2, X3, X4
	093 Compare X19, 0
	094 JumpIfEqual {110}
	095 Move X8, [X19]
	096 Move X0, X19
	097 Move X1, X23
	098 Move X20, [X31+64]
	099 Move X19, [X31+72]
	100 Move X3, [X8+776]
	101 Move X2, [X8+784]
	102 Move X22, [X31+48]
	103 Move X21, [X31+56]
	104 Move X24, [X31+32]
	105 Move X23, [X31+40]
	106 Move X30, [X31+16]
	107 Move X25, [X31+24]
	108 Add X31, X31, 80
	109 CallNoReturn X3
	110 Call 0x1C17F20
	111 Move X0, 0xEA9000
	112 Move X0, [X0+352]
	113 Call 0x1C17D08
	114 Move X19, X0
	115 Move X0, 0xEA9000
	116 Move X0, [X0+360]
	117 Call 0x1C17D08
	118 Move X2, X0
	119 Move X0, X19
	120 Move X1, X22
	121 Move X3, X31
	122 Call String.Concat, X0, X1, X2
	123 Move X19, X0
	124 Move X0, 0xEA8000
	125 Move X0, [X0+3360]
	126 Call 0x1C17D08
	127 Call 0x1C17F10
	128 Move X1, X19
	129 Move X20, X0
	130 Call RemotingException..ctor, X0, X1
	131 Move X0, 0xEA9000
	132 Move X0, [X0+368]
	133 Call 0x1C17D08
	134 Move X1, X0
	135 Move X0, X20
	136 Call 0x1C17DEC

Method: System.Void ReadInteropXml(Mono.Xml.SmallXmlParser/IAttrList attrs, System.Boolean isElement)

Disassembly:
	0x0327D1D8 CBZ W8, 0x327D1E8
	0x0327D1DC MOV X0, X19
	0x0327D1E0 MOV X1, X31
	0x0327D1E4 BL 0x33E14E4
	0x0327D1E8 CBNZ X20, 0x327D1F4
	0x0327D1EC MOV X0, X21
	0x0327D1F0 BL 0x1D2C690
	0x0327D1F4 MOV X0, X20
	0x0327D1F8 BL 0x1C16F18
	0x0327D1FC BL 0x1990590
	0x0327D200 SUB X31, X31, 0x40
	0x0327D204 STP X30, X23, [X31 + 0x10]
	0x0327D208 STP X22, X21, [X31 + 0x20]
	0x0327D20C STP X20, X19, [X31 + 0x30]
	0x0327D210 ADRP X19, 0x115F000
	0x0327D214 ADRP X23, 0xEA7000
	0x0327D218 LDRB W8, [X19 + 0x646]
	0x0327D21C LDR X23, [X23 + 0x198]
	0x0327D220 MOV X20, X2
	0x0327D224 MOV X21, X1
	0x0327D228 MOV X22, X0
	0x0327D22C TBNZ X8, 0x0, 0x327D250
	0x0327D230 ADRP X0, 0xEA7000
	0x0327D234 LDR X0, [X0 + 0x198]
	0x0327D238 BL 0x1C16CF4
	0x0327D23C ADRP X0, 0xE76000
	0x0327D240 LDR X0, [X0 + 0xDD8]
	0x0327D244 BL 0x1C16CF4
	0x0327D248 MOVZ W8, 0x1
	0x0327D24C STRB W8, [X19 + 0x646]
	0x0327D250 LDR X0, [X23]
	0x0327D254 LDR W8, [X0 + 0xE0]
	0x0327D258 CBNZ W8, 0x327D264
	0x0327D25C BL 0x1C16DFC
	0x0327D260 LDR X0, [X23]
	0x0327D264 LDR X8, [X0 + 0xB8]
	0x0327D268 LDR X0, [X8]
	0x0327D26C CBZ X0, 0x327D31C
	0x0327D270 LDR X8, [X0]
	0x0327D274 LDR X9, [X8 + 0x368]
	0x0327D278 LDR X1, [X8 + 0x370]
	0x0327D27C BLR X9
	0x0327D280 MOV X19, X0
	0x0327D284 STRB W31, [X31 + 0xC]
	0x0327D288 ADD X1, X31, 0xC
	0x0327D28C MOV X2, X31
	0x0327D290 BL 0x33DE64C
	0x0327D294 LDR X0, [X23]
	0x0327D298 LDR W8, [X0 + 0xE0]
	0x0327D29C CBNZ W8, 0x327D2A8
	0x0327D2A0 BL 0x1C16DFC
	0x0327D2A4 LDR X0, [X23]
	0x0327D2A8 ADRP X9, 0xE76000
	0x0327D2AC LDR X8, [X0 + 0xB8]
	0x0327D2B0 LDR X9, [X9 + 0xDD8]
	0x0327D2B4 LDR X23, [X8]
	0x0327D2B8 LDR X1, [X9]
	0x0327D2BC MOV X0, X22
	0x0327D2C0 MOV X2, X21
	0x0327D2C4 MOV X3, X31
	0x0327D2C8 BL 0x32274B8
	0x0327D2CC MOV X1, X0
	0x0327D2D0 CBZ X23, 0x327D328
	0x0327D2D4 LDR X8, [X23]
	0x0327D2D8 LDR X9, [X8 + 0x2E8]
	0x0327D2DC LDR X3, [X8 + 0x2F0]
	0x0327D2E0 MOV X0, X23
	0x0327D2E4 MOV X2, X20
	0x0327D2E8 BLR X9
	0x0327D2EC MOV X20, X31
	0x0327D2F0 LDRB W8, [X31 + 0xC]
	0x0327D2F4 CBZ W8, 0x327D304
	0x0327D2F8 MOV X0, X19
	0x0327D2FC MOV X1, X31
	0x0327D300 BL 0x33E14E4
	0x0327D304 CBNZ X20, 0x327D320
	0x0327D308 LDP X20, X19, [X31 + 0x30]
	0x0327D30C LDP X22, X21, [X31 + 0x20]
	0x0327D310 LDP X30, X23, [X31 + 0x10]
	0x0327D314 ADD X31, X31, 0x40
	0x0327D318 RET
	0x0327D31C BL 0x1C16F20
	0x0327D320 MOV X0, X20
	0x0327D324 BL 0x1C16F18
	0x0327D328 BL 0x1C16F20
	0x0327D32C B 0x327D334
	0x0327D330 B 0x327D334
	0x0327D334 MOV X21, X0
	0x0327D338 CMP W1, 0x1
	0x0327D33C B.NE 0x327D354
	0x0327D340 MOV X0, X21
	0x0327D344 BL 0x3EB1AD0
	0x0327D348 LDR X20, [X0]
	0x0327D34C BL 0x3EB1AE0
	0x0327D350 B 0x327D2F0
	0x0327D354 MOV X20, X31
	0x0327D358 B 0x327D360
	0x0327D35C MOV X21, X0
	0x0327D360 LDRB W8, [X31 + 0xC]
	0x0327D364 CBZ W8, 0x327D374
	0x0327D368 MOV X0, X19
	0x0327D36C MOV X1, X31
	0x0327D370 BL 0x33E14E4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x1160000
	009 Move X22, 0xEA8000
	010 Move X20, 0xE77000
	011 Move W8, [X23+1529]
	012 Move X22, [X22+392]
	013 Move X20, [X20+1728]
	014 Move W19, W2
	015 Move X21, X1
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {40}
	020 Move X0, 0xEA8000
	021 Move X0, [X0+400]
	022 Call 0x1C17CF4
	023 Move X0, 0xEA8000
	024 Move X0, [X0+408]
	025 Call 0x1C17CF4
	026 Move X0, 0xEA0000
	027 Move X0, [X0+432]
	028 Call 0x1C17CF4
	029 Move X0, 0xE77000
	030 Move X0, [X0+1728]
	031 Call 0x1C17CF4
	032 Move X0, 0xEA8000
	033 Move X0, [X0+416]
	034 Call 0x1C17CF4
	035 Move X0, 0xEA8000
	036 Move X0, [X0+392]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X23+1529], W8
	040 Move X2, [X22]
	041 Move X24, 0xEA0000
	042 Move X23, 0xEA8000
	043 Move X22, 0xEA8000
	044 Move X24, [X24+432]
	045 Move X23, [X23+400]
	046 Move X22, [X22+416]
	047 Move X1, X21
	048 Call ConfigHandler.GetNotNull, X0, X1, X2
	049 Move X8, [X20]
	050 Move X20, X0
	051 Move W9, [X8+224]
	052 Compare W9, 0
	053 JumpIfNotEqual {56}
	054 Move X0, X8
	055 Call 0x1C17DFC
	056 Move X1, [X24]
	057 Move X2, [X23]
	058 Move X0, X20
	059 Call 0x1C1803C
	060 Move X2, [X22]
	061 Move X1, X21
	062 Move X20, X0
	063 Call ConfigHandler.GetNotNull, X0, X1, X2
	064 Compare X0, 0
	065 JumpIfEqual {125}
	066 Move W1, 44
	067 Move W2, W31
	068 Move X3, X31
	069 Call String.Split, X0, X1, X2
	070 Compare X0, 0
	071 JumpIfEqual {125}
	072 Move W8, [X0+24]
	073 Move X22, X0
	074 Compare W8, 0
	075 JumpIfEqual {126}
	076 Move X0, [X22+32]
	077 Compare X0, 0
	078 JumpIfEqual {125}
	079 Move X1, X31
	080 Call String.Trim, X0
	081 Move X8, [X22+24]
	082 Move X21, X0
	083 Compare X8, 0
	084 JumpIfEqual {92}
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X0, [X22+40]
	087 Compare X0, 0
	088 JumpIfEqual {125}
	089 Move X1, X31
	090 Call String.Trim, X0
	091 Move X22, X0
	092 Move X22, X31
	093 Move X8, 0xEA8000
	094 Move X8, [X8+408]
	095 Move X0, [X8]
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {100}
	099 Call 0x1C17DFC
	100 Move X0, X21
	101 Move X1, X22
	102 Move X2, X20
	103 Move TEMP, X19
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfNotEqual {116}
	107 Move X20, [X31+48]
	108 Move X19, [X31+56]
	109 Move X22, [X31+32]
	110 Move X21, [X31+40]
	111 Move X24, [X31+16]
	112 Move X23, [X31+24]
	113 Move X30, [X31+64]
	114 Call SoapServices.RegisterInteropXmlElement, X0, X1, X2
	115 Return 
	116 Move X20, [X31+48]
	117 Move X19, [X31+56]
	118 Move X22, [X31+32]
	119 Move X21, [X31+40]
	120 Move X24, [X31+16]
	121 Move X23, [X31+24]
	122 Move X30, [X31+64]
	123 Call SoapServices.RegisterInteropXmlType, X0, X1, X2
	124 Return 
	125 Call 0x1C17F20
	126 Call 0x1C17F28

Method: System.Void ReadPreload(Mono.Xml.SmallXmlParser/IAttrList attrs)

Disassembly:
	0x0327D374 CBNZ X20, 0x327D380
	0x0327D378 MOV X0, X21
	0x0327D37C BL 0x1D2C690
	0x0327D380 MOV X0, X20
	0x0327D384 BL 0x1C16F18
	0x0327D388 BL 0x1990590
	0x0327D38C SUB X31, X31, 0x90
	0x0327D390 STP X29, X30, [X31 + 0x30]
	0x0327D394 STP X28, X27, [X31 + 0x40]
	0x0327D398 STP X26, X25, [X31 + 0x50]
	0x0327D39C STP X24, X23, [X31 + 0x60]
	0x0327D3A0 STP X22, X21, [X31 + 0x70]
	0x0327D3A4 STP X20, X19, [X31 + 0x80]
	0x0327D3A8 ADRP X19, 0x115F000
	0x0327D3AC ADRP X27, 0xEA7000
	0x0327D3B0 LDRB W8, [X19 + 0x644]
	0x0327D3B4 LDR X27, [X27 + 0x198]
	0x0327D3B8 MOV X23, X0
	0x0327D3BC TBNZ X8, 0x0, 0x327D404
	0x0327D3C0 ADRP X0, 0xEA6000
	0x0327D3C4 LDR X0, [X0 + 0xDB8]
	0x0327D3C8 BL 0x1C16CF4
	0x0327D3CC ADRP X0, 0xEA6000
	0x0327D3D0 LDR X0, [X0 + 0xD68]
	0x0327D3D4 BL 0x1C16CF4
	0x0327D3D8 ADRP X0, 0xEA6000
	0x0327D3DC LDR X0, [X0 + 0xD98]
	0x0327D3E0 BL 0x1C16CF4
	0x0327D3E4 ADRP X0, 0xEA7000
	0x0327D3E8 LDR X0, [X0 + 0x198]
	0x0327D3EC BL 0x1C16CF4
	0x0327D3F0 ADRP X0, 0xEA7000
	0x0327D3F4 LDR X0, [X0 + 0x230]
	0x0327D3F8 BL 0x1C16CF4
	0x0327D3FC MOVZ W8, 0x1
	0x0327D400 STRB W8, [X19 + 0x644]
	0x0327D404 LDR X0, [X27]
	0x0327D408 STP X31, X31, [X31 + 0x20]
	0x0327D40C STRB W31, [X31 + 0x1C]
	0x0327D410 LDR W8, [X0 + 0xE0]
	0x0327D414 CBNZ W8, 0x327D420
	0x0327D418 BL 0x1C16DFC
	0x0327D41C LDR X0, [X27]
	0x0327D420 LDR X8, [X0 + 0xB8]
	0x0327D424 LDR X0, [X8 + 0x20]
	0x0327D428 CBZ X0, 0x327D788
	0x0327D42C LDR X8, [X0]
	0x0327D430 ADRP X20, 0xEA7000
	0x0327D434 MOV X1, X23
	0x0327D438 LDR X9, [X8 + 0x2D8]
	0x0327D43C LDR X2, [X8 + 0x2E0]
	0x0327D440 LDR X20, [X20 + 0x230]
	0x0327D444 BLR X9
	0x0327D448 CBZ X0, 0x327D478
	0x0327D44C LDR X9, [X0]
	0x0327D450 LDR X8, [X20]
	0x0327D454 LDRB W11, [X9 + 0x130]
	0x0327D458 LDRB W10, [X8 + 0x130]
	0x0327D45C CMP W11, W10
	0x0327D460 B.CC 0x327D478
	0x0327D464 LDR X9, [X9 + 0xC8]
	0x0327D468 ADD X9, X9, X10, 0x3, LSL
	0x0327D46C LDUR X9, [X9 - 0x8]
	0x0327D470 CMP X9, X8
	0x0327D474 B.EQ 0x327D748
	0x0327D478 LDR X0, [X27]
	0x0327D47C LDR W8, [X0 + 0xE0]
	0x0327D480 CBNZ W8, 0x327D488
	0x0327D484 BL 0x1C16DFC
	0x0327D488 ADD X1, X31, 0x28
	0x0327D48C ADD X2, X31, 0x20
	0x0327D490 MOV X0, X23
	0x0327D494 BL 0x32847C4
	0x0327D498 TBZ X0, 0x0, 0x327D4C0
	0x0327D49C LDR X0, [X27]
	0x0327D4A0 LDP X21, X19, [X31 + 0x20]
	0x0327D4A4 LDR W8, [X0 + 0xE0]
	0x0327D4A8 CBNZ W8, 0x327D4B0
	0x0327D4AC BL 0x1C16DFC
	0x0327D4B0 MOV X0, X19
	0x0327D4B4 MOV X1, X21
	0x0327D4B8 MOV X2, X23
	0x0327D4BC BL 0x327D200
	0x0327D4C0 LDR X0, [X27]
	0x0327D4C4 LDR W8, [X0 + 0xE0]
	0x0327D4C8 CBNZ W8, 0x327D4D0
	0x0327D4CC BL 0x1C16DFC
	0x0327D4D0 ADD X1, X31, 0x28
	0x0327D4D4 ADD X2, X31, 0x20
	0x0327D4D8 MOV X0, X23
	0x0327D4DC BL 0x32845CC
	0x0327D4E0 TBZ X0, 0x0, 0x327D508
	0x0327D4E4 LDR X0, [X27]
	0x0327D4E8 LDP X21, X19, [X31 + 0x20]
	0x0327D4EC LDR W8, [X0 + 0xE0]
	0x0327D4F0 CBNZ W8, 0x327D4F8
	0x0327D4F4 BL 0x1C16DFC
	0x0327D4F8 MOV X0, X19
	0x0327D4FC MOV X1, X21
	0x0327D500 MOV X2, X23
	0x0327D504 BL 0x327D074
	0x0327D508 LDR X0, [X27]
	0x0327D50C LDR W8, [X0 + 0xE0]
	0x0327D510 CBNZ W8, 0x327D51C
	0x0327D514 BL 0x1C16DFC
	0x0327D518 LDR X0, [X27]
	0x0327D51C LDR X8, [X0 + 0xB8]
	0x0327D520 LDR X0, [X8 + 0x20]
	0x0327D524 CBZ X0, 0x327D788
	0x0327D528 LDR X8, [X0]
	0x0327D52C LDR X9, [X8 + 0x368]
	0x0327D530 LDR X1, [X8 + 0x370]
	0x0327D534 BLR X9
	0x0327D538 STRB W31, [X31 + 0x1C]
	0x0327D53C ADD X1, X31, 0x1C
	0x0327D540 MOV X2, X31
	0x0327D544 STR X0, [X31 + 0x8]
	0x0327D548 BL 0x33DE64C
	0x0327D54C LDR X0, [X20]
	0x0327D550 BL 0x1C16F10
	0x0327D554 MOV X21, X0
	0x0327D558 MOV X1, X31
	0x0327D55C BL 0x33BDD8C
	0x0327D560 CBZ X23, 0x327D794
	0x0327D564 LDR X8, [X23]
	0x0327D568 LDR X9, [X8 + 0x688]
	0x0327D56C LDR X2, [X8 + 0x690]
	0x0327D570 MOVZ W1, 0x34
	0x0327D574 MOV X0, X23
	0x0327D578 BLR X9
	0x0327D57C MOV X22, X0
	0x0327D580 STR X23, [X31 + 0x10]
	0x0327D584 CBZ X0, 0x327D798
	0x0327D588 LDR X8, [X22 + 0x18]
	0x0327D58C CMP W8, 0x1
	0x0327D590 B.LT 0x327D6EC
	0x0327D594 ADRP X29, 0xEA6000
	0x0327D598 ADRP X19, 0xEA6000
	0x0327D59C LDR X29, [X29 + 0xD68]
	0x0327D5A0 LDR X19, [X19 + 0xD98]
	0x0327D5A4 MOV X28, X31
	0x0327D5A8 AND X8, X8, 0x0
	0x0327D5AC ADD X20, X22, 0x20
	0x0327D5B0 CMP X28, W8, UXTW
	0x0327D5B4 B.CS 0x327D76C
	0x0327D5B8 LDR X0, [X29]
	0x0327D5BC LDR X23, [X20, X28, LSL #3]
	0x0327D5C0 LDR W8, [X0 + 0xE0]
	0x0327D5C4 CBNZ W8, 0x327D5CC
	0x0327D5C8 BL 0x1C16DFC
	0x0327D5CC MOV X0, X23
	0x0327D5D0 BL 0x3273D58
	0x0327D5D4 MOV X25, X0
	0x0327D5D8 CBZ X0, 0x327D768
	0x0327D5DC LDR X1, [X19]
	0x0327D5E0 LDR X8, [X25]
	0x0327D5E4 CMP X8, X1
	0x0327D5E8 B.NE 0x327D770

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x1160000
	007 Move W8, [X20+1530]
	008 Move X19, X1
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {36}
	013 Move X0, 0xEA8000
	014 Move X0, [X0+424]
	015 Call 0x1C17CF4
	016 Move X0, 0xEA5000
	017 Move X0, [X0+2296]
	018 Call 0x1C17CF4
	019 Move X0, 0xEA8000
	020 Move X0, [X0+408]
	021 Call 0x1C17CF4
	022 Move X0, 0xEA0000
	023 Move X0, [X0+432]
	024 Call 0x1C17CF4
	025 Move X0, 0xE77000
	026 Move X0, [X0+1728]
	027 Call 0x1C17CF4
	028 Move X0, 0xEA8000
	029 Move X0, [X0+432]
	030 Call 0x1C17CF4
	031 Move X0, 0xE7F000
	032 Move X0, [X0+1512]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X20+1530], W8
	036 Compare X19, 0
	037 JumpIfEqual {150}
	038 Move X21, 0xEA5000
	039 Move X10, 0xE7F000
	040 Move X8, [X19]
	041 Move X21, [X21+2296]
	042 Move X10, [X10+1512]
	043 Move X22, 0xEA8000
	044 NotImplemented "Instruction LDRH not yet implemented."
	045 Move X1, [X21]
	046 Move X20, [X10]
	047 Move X22, [X22+432]
	048 Compare X9, 0
	049 JumpIfEqual {56}
	050 Move X10, [X8+176]
	051 Add X10, X10, 8
	052 NotImplemented "Instruction LDUR not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Subtract X9, X9, 1
	055 Add X10, X10, 16
	056 Move W2, 3
	057 Move X0, X19
	058 Call 0x1C5D788
	059 Move W9, [X10]
	060 Add W9, W9, 3
	061 Add X8, X8, W9
	062 Add X0, X8, 312
	063 Move X8, [X0]
	064 Move X2, [X0+8]
	065 Move X0, X19
	066 Move X1, X20
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Move X8, [X19]
	069 Move X1, [X21]
	070 Move X21, [X22]
	071 Move X20, X0
	072 NotImplemented "Instruction LDRH not yet implemented."
	073 Compare X9, 0
	074 JumpIfEqual {81}
	075 Move X10, [X8+176]
	076 Add X10, X10, 8
	077 NotImplemented "Instruction LDUR not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Subtract X9, X9, 1
	080 Add X10, X10, 16
	081 Move W2, 3
	082 Move X0, X19
	083 Call 0x1C5D788
	084 Move W9, [X10]
	085 Add W9, W9, 3
	086 Add X8, X8, W9
	087 Add X0, X8, 312
	088 Move X8, [X0]
	089 Move X2, [X0+8]
	090 Move X0, X19
	091 Move X1, X21
	092 NotImplemented "Instruction BLR not yet implemented."
	093 Compare X20, 0
	094 JumpIfEqual {97}
	095 Compare X0, 0
	096 JumpIfNotEqual {151}
	097 Move X19, 0xEA8000
	098 Move X19, [X19+408]
	099 Compare X20, 0
	100 JumpIfEqual {131}
	101 Move X8, 0xE77000
	102 Move X8, [X8+1728]
	103 Move X22, 0xEA0000
	104 Move X21, 0xEA8000
	105 Move X0, [X8]
	106 Move W8, [X0+224]
	107 Move X22, [X22+432]
	108 Move X21, [X21+424]
	109 Compare W8, 0
	110 JumpIfNotEqual {112}
	111 Call 0x1C17DFC
	112 Move X1, [X22]
	113 Move X2, [X21]
	114 Move X0, X20
	115 Call 0x1C1803C
	116 Move X8, [X19]
	117 Move X19, X0
	118 Move W9, [X8+224]
	119 Compare W9, 0
	120 JumpIfNotEqual {123}
	121 Move X0, X8
	122 Call 0x1C17DFC
	123 Move X0, X19
	124 Move X20, [X31+32]
	125 Move X19, [X31+40]
	126 Move X22, [X31+16]
	127 Move X21, [X31+24]
	128 Move X30, [X31+48]
	129 Call SoapServices.PreLoad, X0
	130 Return 
	131 Compare X0, 0
	132 JumpIfEqual {158}
	133 Move X1, X31
	134 Call Assembly.Load, X0
	135 Move X8, [X19]
	136 Move X19, X0
	137 Move W9, [X8+224]
	138 Compare W9, 0
	139 JumpIfNotEqual {142}
	140 Move X0, X8
	141 Call 0x1C17DFC
	142 Move X0, X19
	143 Move X20, [X31+32]
	144 Move X19, [X31+40]
	145 Move X22, [X31+16]
	146 Move X21, [X31+24]
	147 Move X30, [X31+48]
	148 Call SoapServices.PreLoad, X0
	149 Return 
	150 Call 0x1C17F20
	151 Move X0, 0xEA7000
	152 Move X0, [X0+3360]
	153 Call 0x1C17D08
	154 Call 0x1C17F10
	155 Move X19, X0
	156 Move X0, 0xEA8000
	157 Move X0, [X0+440]
	158 Move X0, 0xEA7000
	159 Move X0, [X0+3360]
	160 Call 0x1C17D08
	161 Call 0x1C17F10
	162 Move X19, X0
	163 Move X0, 0xEA8000
	164 Move X0, [X0+448]
	165 Call 0x1C17D08
	166 Move X1, X0
	167 Move X0, X19
	168 Call RemotingException..ctor, X0, X1
	169 Move X0, 0xEA8000
	170 Move X0, [X0+424]
	171 Call 0x1C17D08
	172 Move X1, X0
	173 Move X0, X19
	174 Call 0x1C17DEC

Method: System.String GetNotNull(Mono.Xml.SmallXmlParser/IAttrList attrs, System.String name)

Disassembly:
	0x0327DC28 MOV X1, X31
	0x0327DC2C BL 0x338C698
	0x0327DC30 CBZ X0, 0x327DCA4
	0x0327DC34 ADRP X8, 0xEA7000
	0x0327DC38 LDR X8, [X8 + 0x248]
	0x0327DC3C MOVZ W2, 0x24
	0x0327DC40 MOV X3, X31
	0x0327DC44 LDR X1, [X8]
	0x0327DC48 BL 0x3397600
	0x0327DC4C LDR X8, [X23]
	0x0327DC50 MOV X1, X31
	0x0327DC54 LDR X8, [X8 + 0xB8]
	0x0327DC58 STR X0, [X8 + 0x30]
	0x0327DC5C LDR X0, [X20]
	0x0327DC60 BL 0x338C698
	0x0327DC64 CBZ X0, 0x327DCA4
	0x0327DC68 ADRP X8, 0xEA7000
	0x0327DC6C LDR X8, [X8 + 0x258]
	0x0327DC70 MOVZ W2, 0x24
	0x0327DC74 MOV X3, X31
	0x0327DC78 LDR X1, [X8]
	0x0327DC7C BL 0x3397600
	0x0327DC80 LDR X8, [X23]
	0x0327DC84 LDP X20, X19, [X31 + 0x40]
	0x0327DC88 LDP X22, X21, [X31 + 0x30]
	0x0327DC8C LDP X24, X23, [X31 + 0x20]
	0x0327DC90 LDR X8, [X8 + 0xB8]
	0x0327DC94 LDP X30, X25, [X31 + 0x10]
	0x0327DC98 STR X0, [X8 + 0x38]
	0x0327DC9C ADD X31, X31, 0x50
	0x0327DCA0 RET
	0x0327DCA4 BL 0x1C16F20
	0x0327DCA8 STR X30, [X31 - 0x20]!
	0x0327DCAC STP X20, X19, [X31 + 0x10]
	0x0327DCB0 ADRP X19, 0x115F000
	0x0327DCB4 ADRP X20, 0xEA7000
	0x0327DCB8 LDRB W8, [X19 + 0x626]
	0x0327DCBC LDR X20, [X20 + 0x260]
	0x0327DCC0 TBNZ X8, 0x0, 0x327DCD8
	0x0327DCC4 ADRP X0, 0xEA7000
	0x0327DCC8 LDR X0, [X0 + 0x260]
	0x0327DCCC BL 0x1C16CF4
	0x0327DCD0 MOVZ W8, 0x1
	0x0327DCD4 STRB W8, [X19 + 0x626]
	0x0327DCD8 LDR X0, [X20]
	0x0327DCDC LDR W8, [X0 + 0xE0]
	0x0327DCE0 CBNZ W8, 0x327DCE8
	0x0327DCE4 BL 0x1C16DFC
	0x0327DCE8 LDP X20, X19, [X31 + 0x10]
	0x0327DCEC LDR X30, [X31], #0x20
	0x0327DCF0 B 0x32823E4
	0x0327DCF4 B 0x1C4A608
	0x0327DCF8 B 0x1C4A5F0
	0x0327DCFC STP X30, X19, [X31 - 0x10]!
	0x0327DD00 ADRP X0, 0xE76000
	0x0327DD04 LDR X0, [X0 + 0xB40]
	0x0327DD08 BL 0x1C16D08
	0x0327DD0C BL 0x1C16F10
	0x0327DD10 MOV X1, X31
	0x0327DD14 MOV X19, X0
	0x0327DD18 BL 0x3380310
	0x0327DD1C ADRP X0, 0xEA7000
	0x0327DD20 LDR X0, [X0 + 0x268]
	0x0327DD24 BL 0x1C16D08
	0x0327DD28 MOV X1, X0
	0x0327DD2C MOV X0, X19
	0x0327DD30 BL 0x1C16DEC
	0x0327DD34 SUB X31, X31, 0x60
	0x0327DD38 STP X30, X27, [X31 + 0x10]
	0x0327DD3C STP X26, X25, [X31 + 0x20]
	0x0327DD40 STP X24, X23, [X31 + 0x30]
	0x0327DD44 STP X22, X21, [X31 + 0x40]
	0x0327DD48 STP X20, X19, [X31 + 0x50]
	0x0327DD4C ADRP X20, 0x115F000
	0x0327DD50 LDRB W8, [X20 + 0x606]
	0x0327DD54 MOV X19, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1160000
	006 Move W8, [X21+1531]
	007 Move X19, X2
	008 Move X20, X1
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xEA5000
	014 Move X0, [X0+2296]
	015 Call 0x1C17CF4
	016 Move X0, 0xE77000
	017 Move X0, [X0+2440]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1531], W8
	021 Compare X20, 0
	022 JumpIfEqual {87}
	023 Move X10, 0xEA5000
	024 Move X8, [X20]
	025 Move X10, [X10+2296]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X1, [X10]
	028 Compare X9, 0
	029 JumpIfEqual {36}
	030 Move X10, [X8+176]
	031 Add X10, X10, 8
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Subtract X9, X9, 1
	035 Add X10, X10, 16
	036 Move W2, 3
	037 Move X0, X20
	038 Call 0x1C5D788
	039 Move W9, [X10]
	040 Add W9, W9, 3
	041 Add X8, X8, W9
	042 Add X0, X8, 312
	043 Move X8, [X0]
	044 Move X2, [X0+8]
	045 Move X0, X20
	046 Move X1, X19
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Compare X0, 0
	049 JumpIfEqual {66}
	050 Move X8, 0xE77000
	051 Move X8, [X8+2440]
	052 Move X2, X31
	053 Move X20, X0
	054 Move X1, [X8]
	055 Call String.op_Equality, X0, X1
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {66}
	060 Move X0, X20
	061 Move X20, [X31+16]
	062 Move X19, [X31+24]
	063 Move X30, [X31+32]
	064 Move X21, [X31+40]
	065 Return X0
	066 Move X0, 0xEA8000
	067 Move X0, [X0+528]
	068 Call 0x1C17D08
	069 Move X1, X0
	070 Move X0, X19
	071 Move X2, X31
	072 Call String.Concat, X0, X1
	073 Move X19, X0
	074 Move X0, 0xEA7000
	075 Move X0, [X0+3360]
	076 Call 0x1C17D08
	077 Call 0x1C17F10
	078 Move X1, X19
	079 Move X20, X0
	080 Call RemotingException..ctor, X0, X1
	081 Move X0, 0xEA8000
	082 Move X0, [X0+536]
	083 Call 0x1C17D08
	084 Move X1, X0
	085 Move X0, X20
	086 Call 0x1C17DEC
	087 Call 0x1C17F20

Method: System.String ExtractAssembly(ref System.String type)

Disassembly:
	0x0327DD58 MOV X21, X0
	0x0327DD5C TBNZ X8, 0x0, 0x327DDB0
	0x0327DD60 ADRP X0, 0xEA7000
	0x0327DD64 LDR X0, [X0 + 0x270]
	0x0327DD68 BL 0x1C16CF4
	0x0327DD6C ADRP X0, 0xEA7000
	0x0327DD70 LDR X0, [X0 + 0x278]
	0x0327DD74 BL 0x1C16CF4
	0x0327DD78 ADRP X0, 0xE76000
	0x0327DD7C LDR X0, [X0 + 0x9D0]
	0x0327DD80 BL 0x1C16CF4
	0x0327DD84 ADRP X0, 0xEA6000
	0x0327DD88 LDR X0, [X0 + 0xE68]
	0x0327DD8C BL 0x1C16CF4
	0x0327DD90 ADRP X0, 0xEA7000
	0x0327DD94 LDR X0, [X0 + 0x280]
	0x0327DD98 BL 0x1C16CF4
	0x0327DD9C ADRP X0, 0xE76000
	0x0327DDA0 LDR X0, [X0 + 0x6C0]
	0x0327DDA4 BL 0x1C16CF4
	0x0327DDA8 MOVZ W8, 0x1
	0x0327DDAC STRB W8, [X20 + 0x606]
	0x0327DDB0 STR X31, [X31 + 0x8]
	0x0327DDB4 CBZ X21, 0x327E5C8
	0x0327DDB8 MOV X0, X21
	0x0327DDBC MOV X1, X31
	0x0327DDC0 BL 0x33BE520
	0x0327DDC4 CBZ X19, 0x327E5C8
	0x0327DDC8 ADRP X26, 0xEA7000
	0x0327DDCC LDR X8, [X19]
	0x0327DDD0 LDR X26, [X26 + 0x270]
	0x0327DDD4 MOV X20, X0
	0x0327DDD8 LDRH W9, [X8 + 0x12E]
	0x0327DDDC LDR X1, [X26]
	0x0327DDE0 CBZ X9, 0x327DE04
	0x0327DDE4 LDR X10, [X8 + 0xB0]
	0x0327DDE8 ADD X10, X10, 0x8
	0x0327DDEC LDUR X11, [X10 - 0x8]
	0x0327DDF0 CMP X11, X1
	0x0327DDF4 B.EQ 0x327DE14
	0x0327DDF8 SUBS X9, X9, 0x1
	0x0327DDFC ADD X10, X10, 0x10
	0x0327DE00 B.NE 0x327DDEC
	0x0327DE04 MOVZ W2, 0x3
	0x0327DE08 MOV X0, X19
	0x0327DE0C BL 0x1C5C788
	0x0327DE10 B 0x327DE24
	0x0327DE14 LDR W9, [X10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1160000
	006 Move W8, [X20+1532]
	007 Move X19, X1
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xE77000
	013 Move X0, [X0+2440]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1532], W8
	017 Move X0, [X19]
	018 Compare X0, 0
	019 JumpIfEqual {58}
	020 Move W1, 44
	021 Move X2, X31
	022 Call String.IndexOf, X0, X1
	023 Add W31, W0, 1
	024 Move W20, W0
	025 Move X0, [X19]
	026 Compare X0, 0
	027 JumpIfEqual {58}
	028 Add W1, W20, 1
	029 Move X2, X31
	030 Call String.Substring, X0, X1
	031 Compare X0, 0
	032 JumpIfEqual {58}
	033 Move X1, X31
	034 Call String.Trim, X0
	035 Move X8, [X19]
	036 Compare X8, 0
	037 JumpIfEqual {58}
	038 Move X21, X0
	039 Move X0, X8
	040 Move W1, W31
	041 Move W2, W20
	042 Move X3, X31
	043 Call String.Substring, X0, X1, X2
	044 Compare X0, 0
	045 JumpIfEqual {58}
	046 Move X1, X31
	047 Call String.Trim, X0
	048 Move [X19], X0
	049 Move X8, 0xE77000
	050 Move X8, [X8+2440]
	051 Move X21, [X8]
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X0, X21
	055 Move X30, [X31+32]
	056 Move X21, [X31+40]
	057 Return X0
	058 Call 0x1C17F20

Method: System.Void OnChars(System.String ch)

Disassembly:
	0x0327E90C LDR X9, [X0]

ISIL:
	001 Return 

Method: System.Void OnEndParsing(Mono.Xml.SmallXmlParser parser)

Disassembly:
	0x0327E910 LDR X8, [X8]
	0x0327E914 LDRB W11, [X9 + 0x130]
	0x0327E918 LDRB W10, [X8 + 0x130]
	0x0327E91C CMP W11, W10
	0x0327E920 B.CC 0x327E938
	0x0327E924 LDR X9, [X9 + 0xC8]
	0x0327E928 ADD X9, X9, X10, 0x3, LSL
	0x0327E92C LDUR X9, [X9 - 0x8]
	0x0327E930 CMP X9, X8
	0x0327E934 B.EQ 0x327E940
	0x0327E938 MOV X0, X31
	0x0327E93C B 0x327E944
	0x0327E940 LDR X0, [X0 + 0x48]
	0x0327E944 LDP X20, X19, [X31 + 0x10]
	0x0327E948 LDP X30, X21, [X31], #0x20
	0x0327E94C RET
	0x0327E950 SUB X31, X31, 0x40
	0x0327E954 STP X30, X23, [X31 + 0x10]
	0x0327E958 STP X22, X21, [X31 + 0x20]
	0x0327E95C STP X20, X19, [X31 + 0x30]
	0x0327E960 ADRP X19, 0x115E000
	0x0327E964 ADRP X22, 0xEA5000
	0x0327E968 LDRB W8, [X19 + 0x619]
	0x0327E96C LDR X22, [X22 + 0xE68]
	0x0327E970 MOV X20, X0
	0x0327E974 TBNZ X8, 0x0, 0x327E998
	0x0327E978 ADRP X0, 0xEA6000
	0x0327E97C LDR X0, [X0 + 0x2A0]
	0x0327E980 BL 0x1C16CF4
	0x0327E984 ADRP X0, 0xEA5000
	0x0327E988 LDR X0, [X0 + 0xE68]
	0x0327E98C BL 0x1C16CF4
	0x0327E990 MOVZ W8, 0x1
	0x0327E994 STRB W8, [X19 + 0x619]
	0x0327E998 LDR X0, [X22]
	0x0327E99C LDR W8, [X0 + 0xE0]
	0x0327E9A0 CBNZ W8, 0x327E9A8
	0x0327E9A4 BL 0x1C16DFC
	0x0327E9A8 MOV X0, X20
	0x0327E9AC BL 0x3280B18
	0x0327E9B0 LDR X8, [X22]
	0x0327E9B4 MOV X21, X0
	0x0327E9B8 LDR X8, [X8 + 0xB8]
	0x0327E9BC LDR X19, [X8]
	0x0327E9C0 STRB W31, [X31 + 0xC]
	0x0327E9C4 ADD X1, X31, 0xC
	0x0327E9C8 MOV X0, X19
	0x0327E9CC MOV X2, X31
	0x0327E9D0 BL 0x33DE64C
	0x0327E9D4 LDR X0, [X22]
	0x0327E9D8 LDR W8, [X0 + 0xE0]
	0x0327E9DC CBNZ W8, 0x327E9E8
	0x0327E9E0 BL 0x1C16DFC
	0x0327E9E4 LDR X0, [X22]
	0x0327E9E8 LDR X8, [X0 + 0xB8]
	0x0327E9EC LDR X0, [X8]
	0x0327E9F0 CBZ X0, 0x327EB20
	0x0327E9F4 LDR X8, [X0]
	0x0327E9F8 LDR X9, [X8 + 0x2D8]
	0x0327E9FC LDR X2, [X8 + 0x2E0]
	0x0327EA00 MOV X1, X21

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x115F000
	007 Move X21, 0xEA6000
	008 Move W8, [X20+1533]
	009 Move X21, [X21+3552]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xEA6000
	016 Move X0, [X0+3552]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+1533], W8
	020 Move X0, [X21]
	021 Move X20, [X19+24]
	022 Move W22, [X19+72]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction CSET not yet implemented."
	029 Move X0, X20
	030 Call RemotingConfiguration.RegisterChannels, X0, X1
	031 Move X20, [X19+56]
	032 Compare X20, 0
	033 JumpIfEqual {56}
	034 Move X0, [X21]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X22, 0x115F000
	040 Move W8, [X22+1718]
	041 Compare W8, 0
	042 JumpIfNotEqual {48}
	043 Move X0, 0xEA6000
	044 Move X0, [X0+3552]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X22+1718], W8
	048 Move X0, [X21]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {54}
	052 Call 0x1C17DFC
	053 Move X0, [X21]
	054 Move X8, [X0+184]
	055 Move [X8+8], X20
	056 Move W8, [X19+72]
	057 Compare W8, 0
	058 JumpIfEqual {65}
	059 Move X20, [X31+32]
	060 Move X19, [X31+40]
	061 Move X22, [X31+16]
	062 Move X21, [X31+24]
	063 Move X30, [X31+48]
	064 Return 
	065 Move X0, [X21]
	066 Move X19, [X19+16]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 Move X0, X19
	072 Move X20, [X31+32]
	073 Move X19, [X31+40]
	074 Move X22, [X31+16]
	075 Move X21, [X31+24]
	076 Move X30, [X31+48]
	077 Call RemotingConfiguration.RegisterTypes, X0
	078 Return 

