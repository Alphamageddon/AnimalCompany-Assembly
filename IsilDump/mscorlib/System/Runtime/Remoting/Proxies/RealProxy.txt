Type: System.Runtime.Remoting.Proxies.RealProxy

Method: System.Void .ctor()

Disassembly:
	0x03286EBC ADRP X8, 0xE9E000
	0x03286EC0 LDR X8, [X8 + 0x430]
	0x03286EC4 LDR X9, [X19]
	0x03286EC8 LDR X8, [X8]

ISIL:
	001 Move TEMP, 0
	002 Not TEMP
	003 Move W8, TEMP
	004 Move X1, X31
	005 Move [X0+40], W8
	006 Call Object..ctor, X0
	007 Return 

Method: System.Void .ctor(System.Type classToProxy)

Disassembly:
	0x03286ECC LDRB W11, [X9 + 0x130]
	0x03286ED0 LDRB W10, [X8 + 0x130]

ISIL:
	001 Move X2, X31

Method: System.Void .ctor(System.Type classToProxy, System.Runtime.Remoting.ClientIdentity identity)

Disassembly:
	0x03286FC0 LDP X8, X2, [X0]
	0x03286FC4 MOV X0, X21
	0x03286FC8 MOV X1, X19
	0x03286FCC BLR X8
	0x03286FD0 MOV X22, X0
	0x03286FD4 LDR X0, [X20 + 0x38]
	0x03286FD8 CBZ X0, 0x3287098
	0x03286FDC MOVZ W3, 0x1
	0x03286FE0 MOV W1, W31
	0x03286FE4 MOV X2, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X2
	005 Move X2, X31
	006 Move X20, X0
	007 Call RealProxy..ctor, X0, X1, X2, X3
	008 Move [X20+56], X19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void .ctor(System.Type classToProxy, System.IntPtr stub, System.Object stubData)

Disassembly:
	0x03286ED4 CMP W11, W10
	0x03286ED8 B.CC 0x3286F68
	0x03286EDC LDR X9, [X9 + 0xC8]
	0x03286EE0 ADD X9, X9, X10, 0x3, LSL
	0x03286EE4 LDUR X9, [X9 - 0x8]
	0x03286EE8 CMP X9, X8
	0x03286EEC B.NE 0x3286F68
	0x03286EF0 MOV X0, X19
	0x03286EF4 MOV X1, X31
	0x03286EF8 BL 0x329D0D4
	0x03286EFC CBZ W0, 0x3286F68
	0x03286F00 CBZ X21, 0x3287098
	0x03286F04 ADRP X10, 0xE9E000
	0x03286F08 LDR X8, [X21]
	0x03286F0C LDR X22, [X19 + 0x48]
	0x03286F10 LDR X10, [X10 + 0x3B8]
	0x03286F14 LDRH W9, [X8 + 0x12E]
	0x03286F18 LDR X1, [X10]
	0x03286F1C CBZ X9, 0x3286F40
	0x03286F20 LDR X10, [X8 + 0xB0]
	0x03286F24 ADD X10, X10, 0x8
	0x03286F28 LDUR X11, [X10 - 0x8]
	0x03286F2C CMP X11, X1
	0x03286F30 B.EQ 0x3287008
	0x03286F34 SUBS X9, X9, 0x1
	0x03286F38 ADD X10, X10, 0x10
	0x03286F3C B.NE 0x3286F28
	0x03286F40 MOVZ W2, 0x1
	0x03286F44 MOV X0, X21
	0x03286F48 BL 0x1C5C788
	0x03286F4C B 0x3287018
	0x03286F50 MOV X0, X31
	0x03286F54 BL 0x33E6FB0
	0x03286F58 CBZ X0, 0x3287098
	0x03286F5C BL 0x3287154
	0x03286F60 MOV X21, X0
	0x03286F64 CBNZ X19, 0x3286EBC
	0x03286F68 CBZ X21, 0x3287098
	0x03286F6C ADRP X10, 0xE9E000
	0x03286F70 LDR X8, [X21]
	0x03286F74 LDR X10, [X10 + 0x3B8]
	0x03286F78 LDRH W9, [X8 + 0x12E]
	0x03286F7C LDR X1, [X10]
	0x03286F80 CBZ X9, 0x3286FA4
	0x03286F84 LDR X10, [X8 + 0xB0]
	0x03286F88 ADD X10, X10, 0x8
	0x03286F8C LDUR X11, [X10 - 0x8]
	0x03286F90 CMP X11, X1
	0x03286F94 B.EQ 0x3286FB4
	0x03286F98 SUBS X9, X9, 0x1
	0x03286F9C ADD X10, X10, 0x10
	0x03286FA0 B.NE 0x3286F8C
	0x03286FA4 MOV X0, X21
	0x03286FA8 MOV W2, W31
	0x03286FAC BL 0x1C5C788
	0x03286FB0 B 0x3286FC0
	0x03286FB4 LDRSW X9, [X10]
	0x03286FB8 ADD X8, X8, X9, 0x4, LSL
	0x03286FBC ADD X0, X8, 0x138

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X1
	006 Move TEMP, 0
	007 Not TEMP
	008 Move W8, TEMP
	009 Move X1, X31
	010 Move X19, X2
	011 Move X21, X0
	012 Move [X0+40], W8
	013 Call Object..ctor, X0
	014 Compare X20, 0
	015 JumpIfEqual {44}
	016 Move X0, X20
	017 Move X1, X31
	018 Call Type.get_IsMarshalByRef, X0
	019 Move TEMP, X0
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {30}
	023 Move X0, X20
	024 Move X1, X31
	025 Call Type.get_IsInterface, X0
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {57}
	030 Move X0, X19
	031 Move X1, X31
	032 Move X2, X31
	033 Move [X21+16], X20
	034 Call IntPtr.op_Inequality, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {45}
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Return 
	044 Call 0x1C17F20
	045 Move X0, 0xE6E000
	046 Move X0, [X0+2880]
	047 Call 0x1C17D08
	048 Call 0x1C17F10
	049 Move X19, X0
	050 Move X0, 0xE9F000
	051 Move X0, [X0+1144]
	052 Call 0x1C17D08
	053 Move X1, X0
	054 Move X0, X19
	055 Move X2, X31
	056 Call NotSupportedException..ctor, X0, X1
	057 Move X0, 0xE76000
	058 Move X0, [X0+1400]
	059 Call 0x1C17D08
	060 Call 0x1C17F10
	061 Move X19, X0
	062 Move X0, 0xE9F000
	063 Move X0, [X0+1152]
	064 Call 0x1C17D08
	065 Move X1, X0
	066 Move X0, X19
	067 Move X2, X31
	068 Call ArgumentException..ctor, X0, X1
	069 Move X0, 0xE9F000
	070 Move X0, [X0+1160]
	071 Call 0x1C17D08
	072 Move X1, X0
	073 Move X0, X19
	074 Call 0x1C17DEC

Method: System.Type InternalGetProxyType(System.Object transparentProxy)

Disassembly:
	0x03286FE8 MOV W4, W31

ISIL:
	001 Call 0x1C723C4
	002 Return X0

Method: System.Type GetProxiedType()

Disassembly:
	0x03280304 CBNZ W8, 0x3280310
	0x03280308 BL 0x1C16DFC
	0x0328030C LDR X0, [X20]
	0x03280310 LDR X8, [X0 + 0xB8]
	0x03280314 MOVZ W1, 0x34
	0x03280318 MOV X0, X19
	0x0328031C MOV X2, X31
	0x03280320 LDR X3, [X8 + 0x10]
	0x03280324 LDP X20, X19, [X31 + 0x20]
	0x03280328 LDP X22, X21, [X31 + 0x10]
	0x0328032C MOV X4, X31
	0x03280330 MOV X5, X31
	0x03280334 LDR X30, [X31], #0x30
	0x03280338 B 0x3397430
	0x0328033C BL 0x1C16F20
	0x03280340 STP X30, X25, [X31 - 0x40]!
	0x03280344 STP X24, X23, [X31 + 0x10]
	0x03280348 STP X22, X21, [X31 + 0x20]
	0x0328034C STP X20, X19, [X31 + 0x30]
	0x03280350 ADRP X22, 0x115C000
	0x03280354 LDRB W8, [X22 + 0x612]
	0x03280358 MOV X19, X2
	0x0328035C MOV X20, X1
	0x03280360 MOV X21, X0
	0x03280364 TBNZ X8, 0x0, 0x328037C
	0x03280368 ADRP X0, 0xEA3000
	0x0328036C LDR X0, [X0 + 0xE68]
	0x03280370 BL 0x1C16CF4
	0x03280374 MOVZ W8, 0x1
	0x03280378 STRB W8, [X22 + 0x612]
	0x0328037C CBZ X21, 0x328046C
	0x03280380 MOVZ W2, 0x34
	0x03280384 MOV X0, X21
	0x03280388 MOV X1, X20
	0x0328038C MOV X3, X31
	0x03280390 CBZ X19, 0x32803A8
	0x03280394 MOV X4, X19
	0x03280398 MOV X5, X31
	0x0328039C MOV X6, X31
	0x032803A0 BL 0x33976A4
	0x032803A4 B 0x32803AC
	0x032803A8 BL 0x3397600
	0x032803AC MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x115D000
	005 Move W8, [X20+1623]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xEA4000
	012 Move X0, [X0+3584]
	013 Call 0x1C17CF4
	014 Move X0, 0xE74000
	015 Move X0, [X0+1728]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1623], W8
	019 Move X0, [X19+64]
	020 Compare X0, 0
	021 JumpIfEqual {27}
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Call 0x1C723C4
	026 Return X0
	027 Move X0, [X19+16]
	028 Compare X0, 0
	029 JumpIfEqual {58}
	030 Move X1, X31
	031 Call Type.get_IsInterface, X0
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {53}
	036 Move X8, 0xE74000
	037 Move X8, [X8+1728]
	038 Move X0, [X8]
	039 Move X8, 0xEA4000
	040 Move X8, [X8+3584]
	041 Move W9, [X0+224]
	042 Move X19, [X8]
	043 Compare W9, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X0, X19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X1, X31
	050 Move X30, [X31+32]
	051 Call Type.GetTypeFromHandle, X0
	052 Return X0
	053 Move X0, [X19+16]
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move X30, [X31+32]
	057 Return X0
	058 Call 0x1C17F20

Method: System.Void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x03286FEC BL 0x32733D8
	0x03286FF0 MOV X0, X22
	0x03286FF4 LDP X20, X19, [X31 + 0x30]
	0x03286FF8 LDP X22, X21, [X31 + 0x20]
	0x03286FFC LDP X24, X23, [X31 + 0x10]
	0x03287000 LDR X30, [X31], #0x40
	0x03287004 RET
	0x03287008 LDR W9, [X10]
	0x0328700C ADD W9, W9, 0x1
	0x03287010 ADD X8, X8, W9, 0x4, SXTW
	0x03287014 ADD X0, X8, 0x138
	0x03287018 LDP X8, X3, [X0]
	0x0328701C MOV X0, X21
	0x03287020 MOV X1, X19
	0x03287024 MOV X2, X22
	0x03287028 BLR X8
	0x0328702C CBZ X22, 0x3287048
	0x03287030 LDR X8, [X22]
	0x03287034 MOV X1, X0
	0x03287038 MOV X0, X22
	0x0328703C LDR X9, [X8 + 0x278]
	0x03287040 LDR X2, [X8 + 0x280]
	0x03287044 BLR X9
	0x03287048 ADRP X8, 0xE6C000
	0x0328704C LDR X8, [X8 + 0x9D0]
	0x03287050 MOV W1, W31
	0x03287054 LDR X0, [X8]
	0x03287058 BL 0x1C16D6C
	0x0328705C ADRP X8, 0xE9D000
	0x03287060 LDR X8, [X8 + 0x280]
	0x03287064 MOV X21, X0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x1157000
	009 Move X23, 0xE9D000
	010 Move W8, [X24+1624]
	011 Call 0x3EB261C
	012 Return 
	013 Move X19, X3
	014 Move X20, X2
	015 Move X21, X1
	016 Move X22, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0xE9D000
	022 Move X0, [X0+3688]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X24+1624], W8
	026 Move X8, [X22]
	027 Move X0, X22
	028 Move X9, [X8+424]
	029 Move X1, [X8+432]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move X8, [X23]
	032 Move X22, X0
	033 Move X0, X8
	034 Call 0x19913D0
	035 Move X0, X22
	036 Move X1, X21
	037 Move X2, X20
	038 Move X3, X19
	039 Call RemotingServices.GetObjectData, X0, X1, X2

Method: System.Runtime.Remoting.Identity get_ObjectIdentity()

Disassembly:
	0x03287068 LDR X8, [X8]
	0x0328706C MOV X0, X8

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Void set_ObjectIdentity(System.Runtime.Remoting.Identity value)

Disassembly:
	0x03287070 BL 0x1C16F10
	0x03287074 MOV X1, X31

ISIL:
	001 Move [X0+56], X1
	002 Return 

Method: System.Runtime.Remoting.Messaging.IMessage Invoke(System.Runtime.Remoting.Messaging.IMessage msg)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Object PrivateInvoke(System.Runtime.Remoting.Proxies.RealProxy rp, System.Runtime.Remoting.Messaging.IMessage msg, out System.Exception exc, out System.Object[] out_args)

Disassembly:
	0x03286320 BL 0x329D598
	0x03286324 TBZ X0, 0x0, 0x32866A8
	0x03286328 CBZ X21, 0x32866E4
	0x0328632C LDR X8, [X21]
	0x03286330 MOV X0, X21
	0x03286334 LDR X9, [X8 + 0x248]
	0x03286338 LDR X1, [X8 + 0x250]
	0x0328633C BLR X9
	0x03286340 ADRP X8, 0xE6D000
	0x03286344 LDR W1, [X31 + 0xC]
	0x03286348 LDR X8, [X8 + 0x9D0]
	0x0328634C MOV X22, X0
	0x03286350 LDR X8, [X8]
	0x03286354 MOV X0, X8
	0x03286358 BL 0x1C16D6C
	0x0328635C CBZ X22, 0x32866E4
	0x03286360 LDR W8, [X22 + 0x18]
	0x03286364 MOV X21, X0
	0x03286368 CMP W8, 0x1
	0x0328636C B.LT 0x32866C0
	0x03286370 ADRP X28, 0xE9E000
	0x03286374 ADRP X29, 0xE9D000
	0x03286378 LDR X28, [X28 + 0x270]
	0x0328637C LDR X29, [X29 + 0xE68]
	0x03286380 MOV W26, W31
	0x03286384 MOV W27, W31
	0x03286388 CMP W26, W8
	0x0328638C B.CS 0x32866E8
	0x03286390 ADD X8, X22, W26, 0x3, SXTW
	0x03286394 LDR X23, [X8 + 0x20]
	0x03286398 CBZ X23, 0x32866E4
	0x0328639C MOV X0, X23
	0x032863A0 MOV X1, X31
	0x032863A4 BL 0x32CF478
	0x032863A8 TBZ X0, 0x0, 0x32863CC
	0x032863AC LDR X8, [X23]
	0x032863B0 MOV X0, X23
	0x032863B4 LDP X9, X1, [X8 + 0x1D8]
	0x032863B8 BLR X9
	0x032863BC CBZ X0, 0x32866E4
	0x032863C0 MOV X1, X31
	0x032863C4 BL 0x3396C08
	0x032863C8 TBZ X0, 0x0, 0x3286440
	0x032863CC LDR X8, [X23]
	0x032863D0 MOV X0, X23
	0x032863D4 LDP X9, X1, [X8 + 0x1D8]
	0x032863D8 BLR X9
	0x032863DC CBZ X0, 0x32866E4
	0x032863E0 MOV X1, X31
	0x032863E4 BL 0x3396C08
	0x032863E8 TBZ X0, 0x0, 0x3286620
	0x032863EC LDR X8, [X23]
	0x032863F0 MOV X0, X23
	0x032863F4 LDP X9, X1, [X8 + 0x1E8]
	0x032863F8 BLR X9
	0x032863FC LDR X8, [X20]
	0x03286400 LDR X1, [X28]
	0x03286404 MOV W24, W0
	0x03286408 LDRH W9, [X8 + 0x12E]
	0x0328640C CBZ X9, 0x3286430
	0x03286410 LDR X10, [X8 + 0xB0]
	0x03286414 ADD X10, X10, 0x8
	0x03286418 LDUR X11, [X10 - 0x8]
	0x0328641C CMP X11, X1
	0x03286420 B.EQ 0x3286494
	0x03286424 SUBS X9, X9, 0x1
	0x03286428 ADD X10, X10, 0x10
	0x0328642C B.NE 0x3286418
	0x03286430 MOV X0, X20
	0x03286434 MOV W2, W31
	0x03286438 BL 0x1C5C788
	0x0328643C B 0x32864A0
	0x03286440 LDR X8, [X23]
	0x03286444 MOV X0, X23
	0x03286448 LDP X9, X1, [X8 + 0x1E8]
	0x0328644C BLR X9
	0x03286450 LDR X8, [X20]
	0x03286454 LDR X1, [X28]
	0x03286458 MOV W24, W0
	0x0328645C LDRH W9, [X8 + 0x12E]
	0x03286460 CBZ X9, 0x3286484
	0x03286464 LDR X10, [X8 + 0xB0]
	0x03286468 ADD X10, X10, 0x8
	0x0328646C LDUR X11, [X10 - 0x8]
	0x03286470 CMP X11, X1
	0x03286474 B.EQ 0x3286510
	0x03286478 SUBS X9, X9, 0x1
	0x0328647C ADD X10, X10, 0x10
	0x03286480 B.NE 0x328646C
	0x03286484 MOV X0, X20
	0x03286488 MOV W2, W31
	0x0328648C BL 0x1C5C788
	0x03286490 B 0x328651C
	0x03286494 LDRSW X9, [X10]
	0x03286498 ADD X8, X8, X9, 0x4, LSL
	0x0328649C ADD X0, X8, 0x138
	0x032864A0 LDP X8, X1, [X0]
	0x032864A4 MOV X0, X20
	0x032864A8 BLR X8
	0x032864AC CMP W24, W0
	0x032864B0 B.GE 0x3286508
	0x032864B4 LDR X8, [X23]
	0x032864B8 MOV X0, X23
	0x032864BC LDP X9, X1, [X8 + 0x1E8]
	0x032864C0 BLR X9
	0x032864C4 LDR X8, [X20]
	0x032864C8 LDR X1, [X28]
	0x032864CC MOV W24, W0
	0x032864D0 LDRH W9, [X8 + 0x12E]
	0x032864D4 CBZ X9, 0x32864F8
	0x032864D8 LDR X10, [X8 + 0xB0]
	0x032864DC ADD X10, X10, 0x8
	0x032864E0 LDUR X11, [X10 - 0x8]
	0x032864E4 CMP X11, X1
	0x032864E8 B.EQ 0x3286584
	0x032864EC SUBS X9, X9, 0x1
	0x032864F0 ADD X10, X10, 0x10
	0x032864F4 B.NE 0x32864E0
	0x032864F8 MOVZ W2, 0x8
	0x032864FC MOV X0, X20
	0x03286500 BL 0x1C5C788
	0x03286504 B 0x3286594
	0x03286508 MOV X24, X31
	0x0328650C B 0x32865EC
	0x03286510 LDRSW X9, [X10]
	0x03286514 ADD X8, X8, X9, 0x4, LSL
	0x03286518 ADD X0, X8, 0x138
	0x0328651C LDP X8, X1, [X0]
	0x03286520 MOV X0, X20
	0x03286524 BLR X8
	0x03286528 CMP W24, W0
	0x0328652C B.GE 0x3286620
	0x03286530 LDR X8, [X23]
	0x03286534 MOV X0, X23
	0x03286538 LDP X9, X1, [X8 + 0x1E8]
	0x0328653C BLR X9
	0x03286540 LDR X8, [X20]
	0x03286544 LDR X1, [X28]
	0x03286548 MOV W24, W0
	0x0328654C LDRH W9, [X8 + 0x12E]
	0x03286550 CBZ X9, 0x3286574
	0x03286554 LDR X10, [X8 + 0xB0]
	0x03286558 ADD X10, X10, 0x8
	0x0328655C LDUR X11, [X10 - 0x8]
	0x03286560 CMP X11, X1
	0x03286564 B.EQ 0x3286634
	0x03286568 SUBS X9, X9, 0x1
	0x0328656C ADD X10, X10, 0x10
	0x03286570 B.NE 0x328655C
	0x03286574 MOVZ W2, 0x8
	0x03286578 MOV X0, X20
	0x0328657C BL 0x1C5C788
	0x03286580 B 0x3286644
	0x03286584 LDR W9, [X10]
	0x03286588 ADD W9, W9, 0x8
	0x0328658C ADD X8, X8, W9, 0x4, SXTW
	0x03286590 ADD X0, X8, 0x138
	0x03286594 LDP X8, X2, [X0]
	0x03286598 MOV X0, X20
	0x0328659C MOV W1, W24
	0x032865A0 BLR X8
	0x032865A4 MOV X24, X0
	0x032865A8 CBZ X0, 0x32865EC
	0x032865AC LDR X8, [X23]
	0x032865B0 MOV X0, X23
	0x032865B4 LDP X9, X1, [X8 + 0x1D8]
	0x032865B8 BLR X9
	0x032865BC CBZ X0, 0x32866E4
	0x032865C0 LDR X8, [X0]
	0x032865C4 LDR X9, [X8 + 0x428]
	0x032865C8 LDR X1, [X8 + 0x430]
	0x032865CC BLR X9
	0x032865D0 CBZ X0, 0x32866E4
	0x032865D4 LDR X8, [X0]
	0x032865D8 MOV X1, X24
	0x032865DC LDR X9, [X8 + 0x868]
	0x032865E0 LDR X2, [X8 + 0x870]
	0x032865E4 BLR X9
	0x032865E8 TBZ X0, 0x0, 0x3286700
	0x032865EC CBZ X21, 0x32866E4
	0x032865F0 CBZ X24, 0x3286608
	0x032865F4 LDR X8, [X21]
	0x032865F8 MOV X0, X24
	0x032865FC LDR X1, [X8 + 0x40]
	0x03286600 BL 0x1C16E00
	0x03286604 CBZ X0, 0x32866EC
	0x03286608 LDR W8, [X21 + 0x18]
	0x0328660C CMP W27, W8
	0x03286610 B.CS 0x32866E8
	0x03286614 ADD X8, X21, W27, 0x3, SXTW
	0x03286618 ADD W27, W27, 0x1
	0x0328661C STR X24, [X8 + 0x20]
	0x03286620 LDR W8, [X22 + 0x18]
	0x03286624 ADD W26, W26, 0x1
	0x03286628 CMP W26, W8
	0x0328662C B.LT 0x3286388
	0x03286630 B 0x32866C0
	0x03286634 LDR W9, [X10]
	0x03286638 ADD W9, W9, 0x8
	0x0328663C ADD X8, X8, W9, 0x4, SXTW
	0x03286640 ADD X0, X8, 0x138
	0x03286644 LDP X8, X2, [X0]
	0x03286648 MOV X0, X20
	0x0328664C MOV W1, W24
	0x03286650 BLR X8
	0x03286654 CBZ X0, 0x3286620
	0x03286658 LDR X8, [X23]
	0x0328665C MOV X24, X0
	0x03286660 MOV X0, X23
	0x03286664 LDP X9, X1, [X8 + 0x1E8]
	0x03286668 BLR X9
	0x0328666C MOV W1, W0
	0x03286670 MOV X0, X19
	0x03286674 MOV X2, X31
	0x03286678 BL 0x329D3B0
	0x0328667C CBZ X0, 0x3286774
	0x03286680 MOV X25, X0
	0x03286684 LDR X0, [X29]
	0x03286688 LDR W8, [X0 + 0xE0]
	0x0328668C CBNZ W8, 0x3286694
	0x03286690 BL 0x1C16DFC
	0x03286694 MOV X0, X23
	0x03286698 MOV X1, X25
	0x0328669C MOV X2, X24
	0x032866A0 BL 0x3282960
	0x032866A4 B 0x3286620
	0x032866A8 ADRP X8, 0xE6D000
	0x032866AC LDR X8, [X8 + 0x9D0]
	0x032866B0 MOV W1, W31
	0x032866B4 LDR X0, [X8]
	0x032866B8 BL 0x1C16D6C
	0x032866BC MOV X21, X0
	0x032866C0 MOV X0, X21
	0x032866C4 LDP X20, X19, [X31 + 0x60]
	0x032866C8 LDP X22, X21, [X31 + 0x50]
	0x032866CC LDP X24, X23, [X31 + 0x40]
	0x032866D0 LDP X26, X25, [X31 + 0x30]
	0x032866D4 LDP X28, X27, [X31 + 0x20]
	0x032866D8 LDP X29, X30, [X31 + 0x10]
	0x032866DC ADD X31, X31, 0x70
	0x032866E0 RET
	0x032866E4 BL 0x1C16F20
	0x032866E8 BL 0x1C16F28
	0x032866EC BL 0x1C16F44
	0x032866F0 MOV X1, X31
	0x032866F4 BL 0x1C16DEC
	0x032866F8 MOV X0, X21
	0x032866FC BL 0x1C171E0
	0x03286700 MOV X0, X23
	0x03286704 BL 0x19903C0
	0x03286708 LDR X8, [X23]
	0x0328670C MOV X0, X23
	0x03286710 LDP X9, X1, [X8 + 0x1C8]
	0x03286714 BLR X9
	0x03286718 MOV X19, X0
	0x0328671C ADRP X0, 0xE9E000
	0x03286720 LDR X0, [X0 + 0x498]
	0x03286724 BL 0x1C16D08
	0x03286728 MOV X20, X0
	0x0328672C ADRP X0, 0xE9E000
	0x03286730 LDR X0, [X0 + 0x4A0]
	0x03286734 BL 0x1C16D08
	0x03286738 MOV X2, X0
	0x0328673C MOV X0, X20
	0x03286740 MOV X1, X19
	0x03286744 MOV X3, X31
	0x03286748 BL 0x32274B8
	0x0328674C MOV X19, X0
	0x03286750 ADRP X0, 0xE75000
	0x03286754 LDR X0, [X0 + 0xC08]
	0x03286758 BL 0x1C16D08
	0x0328675C BL 0x1C16F10
	0x03286760 MOV X1, X19
	0x03286764 MOV X2, X31
	0x03286768 MOV X20, X0
	0x0328676C BL 0x337B498
	0x03286770 B 0x32867E0
	0x03286774 MOV X0, X23
	0x03286778 BL 0x19903C0
	0x0328677C LDR X8, [X23]
	0x03286780 MOV X0, X23
	0x03286784 LDP X9, X1, [X8 + 0x1C8]
	0x03286788 BLR X9
	0x0328678C MOV X19, X0
	0x03286790 ADRP X0, 0xE9E000
	0x03286794 LDR X0, [X0 + 0x4A8]
	0x03286798 BL 0x1C16D08
	0x0328679C MOV X20, X0
	0x032867A0 ADRP X0, 0xE75000
	0x032867A4 LDR X0, [X0 + 0x9B0]
	0x032867A8 BL 0x1C16D08
	0x032867AC MOV X2, X0
	0x032867B0 MOV X0, X20
	0x032867B4 MOV X1, X19
	0x032867B8 MOV X3, X31
	0x032867BC BL 0x32274B8
	0x032867C0 MOV X19, X0
	0x032867C4 ADRP X0, 0xE9D000
	0x032867C8 LDR X0, [X0 + 0xD20]
	0x032867CC BL 0x1C16D08
	0x032867D0 BL 0x1C16F10
	0x032867D4 MOV X1, X19
	0x032867D8 MOV X20, X0
	0x032867DC BL 0x3273098
	0x032867E0 ADRP X0, 0xE9E000
	0x032867E4 LDR X0, [X0 + 0x4B0]
	0x032867E8 BL 0x1C16D08
	0x032867EC MOV X1, X0
	0x032867F0 MOV X0, X20
	0x032867F4 BL 0x1C16DEC
	0x032867F8 ADRP X0, 0xE75000
	0x032867FC LDR X0, [X0 + 0xC08]
	0x03286800 BL 0x1C16D08
	0x03286804 BL 0x1C16F10
	0x03286808 MOV X19, X0
	0x0328680C ADRP X0, 0xE9E000
	0x03286810 LDR X0, [X0 + 0x4B8]
	0x03286814 BL 0x1C16D08
	0x03286818 MOV X1, X0
	0x0328681C MOV X0, X19
	0x03286820 MOV X2, X31
	0x03286824 BL 0x337B498
	0x03286828 ADRP X0, 0xE9E000
	0x0328682C LDR X0, [X0 + 0x4B0]
	0x03286830 BL 0x1C16D08
	0x03286834 MOV X1, X0
	0x03286838 MOV X0, X19
	0x0328683C BL 0x1C16DEC
	0x03286840 B 0x1C713AC
	0x03286844 STP X30, X21, [X31 - 0x20]!
	0x03286848 STP X20, X19, [X31 + 0x10]
	0x0328684C ADRP X20, 0x1156000
	0x03286850 LDRB W8, [X20 + 0x65A]
	0x03286854 MOV X19, X0
	0x03286858 TBNZ X8, 0x0, 0x3286888
	0x0328685C ADRP X0, 0xE9D000
	0x03286860 LDR X0, [X0 + 0xDD8]
	0x03286864 BL 0x1C16CF4
	0x03286868 ADRP X0, 0xE9D000
	0x0328686C LDR X0, [X0 + 0xE00]
	0x03286870 BL 0x1C16CF4
	0x03286874 ADRP X0, 0xE6D000
	0x03286878 LDR X0, [X0 + 0x6C0]
	0x0328687C BL 0x1C16CF4
	0x03286880 MOVZ W8, 0x1
	0x03286884 STRB W8, [X20 + 0x65A]
	0x03286888 LDR X0, [X19 + 0x40]
	0x0328688C CBNZ X0, 0x3286998
	0x03286890 ADRP X21, 0xE9D000
	0x03286894 LDR X21, [X21 + 0xDD8]
	0x03286898 MOV X0, X19
	0x0328689C LDR X1, [X21]
	0x032868A0 BL 0x1C16E00
	0x032868A4 CBZ X0, 0x3286964
	0x032868A8 LDR X8, [X0]
	0x032868AC LDR X1, [X21]
	0x032868B0 MOV X20, X0
	0x032868B4 LDRH W9, [X8 + 0x12E]
	0x032868B8 CBZ X9, 0x32868DC
	0x032868BC LDR X10, [X8 + 0xB0]
	0x032868C0 ADD X10, X10, 0x8
	0x032868C4 LDUR X11, [X10 - 0x8]
	0x032868C8 CMP X11, X1
	0x032868CC B.EQ 0x32868EC
	0x032868D0 SUBS X9, X9, 0x1
	0x032868D4 ADD X10, X10, 0x10
	0x032868D8 B.NE 0x32868C4
	0x032868DC MOV X0, X20
	0x032868E0 MOV W2, W31
	0x032868E4 BL 0x1C5C788
	0x032868E8 B 0x32868F8
	0x032868EC LDRSW X9, [X10]
	0x032868F0 ADD X8, X8, X9, 0x4, LSL
	0x032868F4 ADD X0, X8, 0x138
	0x032868F8 LDP X8, X1, [X0]
	0x032868FC MOV X0, X20
	0x03286900 BLR X8
	0x03286904 CBZ X0, 0x3286964
	0x03286908 ADRP X8, 0xE6D000
	0x0328690C LDR X8, [X8 + 0x6C0]
	0x03286910 MOV X20, X0
	0x03286914 LDR X0, [X8]
	0x03286918 ADRP X8, 0xE9D000
	0x0328691C LDR X8, [X8 + 0xE00]
	0x03286920 LDR W9, [X0 + 0xE0]
	0x03286924 LDR X21, [X8]
	0x03286928 CBNZ W9, 0x3286930
	0x0328692C BL 0x1C16DFC
	0x03286930 MOV X0, X21
	0x03286934 MOV X1, X31
	0x03286938 BL 0x338C698
	0x0328693C CBZ X0, 0x32869A4
	0x03286940 LDR X8, [X0]
	0x03286944 LDR X9, [X8 + 0x2D8]
	0x03286948 LDR X1, [X8 + 0x2E0]
	0x0328694C BLR X9
	0x03286950 MOV X1, X0
	0x03286954 MOV X0, X20
	0x03286958 MOV X2, X31
	0x0328695C BL 0x321BA08
	0x03286960 TBZ X0, 0x0, 0x3286980
	0x03286964 LDR X0, [X19 + 0x10]
	0x03286968 CBZ X0, 0x32869A4
	0x0328696C LDR X8, [X0]
	0x03286970 LDR X9, [X8 + 0x2D8]
	0x03286974 LDR X1, [X8 + 0x2E0]
	0x03286978 BLR X9
	0x0328697C MOV X20, X0
	0x03286980 LDR X8, [X19]
	0x03286984 MOV X0, X19
	0x03286988 MOV X1, X20
	0x0328698C LDP X9, X2, [X8 + 0x198]
	0x03286990 BLR X9
	0x03286994 STR X0, [X19 + 0x40]
	0x03286998 LDP X20, X19, [X31 + 0x10]
	0x0328699C LDP X30, X21, [X31], #0x20
	0x032869A0 RET
	0x032869A4 BL 0x1C16F20
	0x032869A8 STR X1, [X0 + 0x20]
	0x032869AC RET
	0x032869B0 STR W1, [X0 + 0x28]
	0x032869B4 RET
	0x032869B8 STR X30, [X31 - 0x20]!
	0x032869BC STP X20, X19, [X31 + 0x10]
	0x032869C0 ADRP X20, 0x1156000
	0x032869C4 LDRB W8, [X20 + 0x65B]
	0x032869C8 MOV X19, X0
	0x032869CC TBNZ X8, 0x0, 0x32869F0
	0x032869D0 ADRP X0, 0xE9E000
	0x032869D4 LDR X0, [X0 + 0x2D8]
	0x032869D8 BL 0x1C16CF4
	0x032869DC ADRP X0, 0xE9D000
	0x032869E0 LDR X0, [X0 + 0xE68]
	0x032869E4 BL 0x1C16CF4
	0x032869E8 MOVZ W8, 0x1
	0x032869EC STRB W8, [X20 + 0x65B]
	0x032869F0 LDR X0, [X19 + 0x20]
	0x032869F4 CBNZ X0, 0x3286A5C
	0x032869F8 ADRP X8, 0xE9D000
	0x032869FC LDR X8, [X8 + 0xE68]
	0x03286A00 LDR X20, [X19 + 0x30]
	0x03286A04 LDR X0, [X8]
	0x03286A08 LDR W8, [X0 + 0xE0]
	0x03286A0C CBNZ W8, 0x3286A14
	0x03286A10 BL 0x1C16DFC
	0x03286A14 MOV X0, X20
	0x03286A18 BL 0x327E950
	0x03286A1C CBZ X0, 0x3286A68
	0x03286A20 ADRP X8, 0xE9E000
	0x03286A24 LDR X8, [X8 + 0x2D8]
	0x03286A28 LDR X9, [X0]
	0x03286A2C LDR X8, [X8]
	0x03286A30 LDRB W11, [X9 + 0x130]
	0x03286A34 LDRB W10, [X8 + 0x130]
	0x03286A38 CMP W11, W10
	0x03286A3C B.CC 0x3286A68
	0x03286A40 LDR X9, [X9 + 0xC8]
	0x03286A44 ADD X9, X9, X10, 0x3, LSL
	0x03286A48 LDUR X9, [X9 - 0x8]
	0x03286A4C CMP X9, X8
	0x03286A50 B.NE 0x3286A68
	0x03286A54 LDR X0, [X0 + 0x50]
	0x03286A58 STR X0, [X19 + 0x20]
	0x03286A5C LDP X20, X19, [X31 + 0x10]
	0x03286A60 LDR X30, [X31], #0x20
	0x03286A64 RET
	0x03286A68 ADRP X0, 0xE9E000
	0x03286A6C LDR X19, [X19 + 0x30]
	0x03286A70 LDR X0, [X0 + 0x4C0]
	0x03286A74 BL 0x1C16D08
	0x03286A78 MOV X20, X0
	0x03286A7C ADRP X0, 0xE9D000
	0x03286A80 LDR X0, [X0 + 0xEE8]
	0x03286A84 BL 0x1C16D08
	0x03286A88 MOV X2, X0
	0x03286A8C MOV X0, X20
	0x03286A90 MOV X1, X19
	0x03286A94 MOV X3, X31
	0x03286A98 BL 0x32274B8
	0x03286A9C MOV X19, X0
	0x03286AA0 ADRP X0, 0xE9D000
	0x03286AA4 LDR X0, [X0 + 0xD20]
	0x03286AA8 BL 0x1C16D08
	0x03286AAC BL 0x1C16F10
	0x03286AB0 MOV X1, X19
	0x03286AB4 MOV X20, X0
	0x03286AB8 BL 0x3273098
	0x03286ABC ADRP X0, 0xE9E000
	0x03286AC0 LDR X0, [X0 + 0x4C8]
	0x03286AC4 BL 0x1C16D08
	0x03286AC8 MOV X1, X0
	0x03286ACC MOV X0, X20
	0x03286AD0 BL 0x1C16DEC
	0x03286AD4 STR X30, [X31 - 0x40]!
	0x03286AD8 STP X24, X23, [X31 + 0x10]
	0x03286ADC STP X22, X21, [X31 + 0x20]
	0x03286AE0 STP X20, X19, [X31 + 0x30]
	0x03286AE4 ADRP X21, 0x1156000
	0x03286AE8 ADRP X22, 0xE9E000
	0x03286AEC LDRB W8, [X21 + 0x65D]
	0x03286AF0 LDR X22, [X22 + 0x458]
	0x03286AF4 MOV X19, X1
	0x03286AF8 MOV X20, X0
	0x03286AFC TBNZ X8, 0x0, 0x3286B80
	0x03286B00 ADRP X0, 0xE9E000
	0x03286B04 LDR X0, [X0 + 0x378]
	0x03286B08 BL 0x1C16CF4
	0x03286B0C ADRP X0, 0xE9E000
	0x03286B10 LDR X0, [X0 + 0x3B8]
	0x03286B14 BL 0x1C16CF4
	0x03286B18 ADRP X0, 0xE9E000
	0x03286B1C LDR X0, [X0 + 0x458]
	0x03286B20 BL 0x1C16CF4
	0x03286B24 ADRP X0, 0xE9E000
	0x03286B28 LDR X0, [X0 + 0x270]
	0x03286B2C BL 0x1C16CF4
	0x03286B30 ADRP X0, 0xE6D000
	0x03286B34 LDR X0, [X0 + 0x758]
	0x03286B38 BL 0x1C16CF4
	0x03286B3C ADRP X0, 0xE9E000
	0x03286B40 LDR X0, [X0 + 0x4D0]
	0x03286B44 BL 0x1C16CF4
	0x03286B48 ADRP X0, 0xE9E000
	0x03286B4C LDR X0, [X0 + 0x430]
	0x03286B50 BL 0x1C16CF4
	0x03286B54 ADRP X0, 0xE6D000
	0x03286B58 LDR X0, [X0 + 0x9D0]
	0x03286B5C BL 0x1C16CF4
	0x03286B60 ADRP X0, 0xE9E000
	0x03286B64 LDR X0, [X0 + 0x330]
	0x03286B68 BL 0x1C16CF4
	0x03286B6C ADRP X0, 0xE9E000
	0x03286B70 LDR X0, [X0 + 0x280]
	0x03286B74 BL 0x1C16CF4
	0x03286B78 MOVZ W8, 0x1
	0x03286B7C STRB W8, [X21 + 0x65D]
	0x03286B80 LDR X1, [X22]
	0x03286B84 MOV X0, X19
	0x03286B88 BL 0x1C16E00
	0x03286B8C CBZ X0, 0x3286D38
	0x03286B90 ADRP X24, 0xE9E000
	0x03286B94 LDR X8, [X0]
	0x03286B98 LDR X24, [X24 + 0x270]
	0x03286B9C ADRP X23, 0xE9E000
	0x03286BA0 MOV X21, X0
	0x03286BA4 LDRH W9, [X8 + 0x12E]
	0x03286BA8 LDR X1, [X24]
	0x03286BAC LDR X23, [X23 + 0x330]
	0x03286BB0 CBZ X9, 0x3286BD4
	0x03286BB4 LDR X10, [X8 + 0xB0]
	0x03286BB8 ADD X10, X10, 0x8
	0x03286BBC LDUR X11, [X10 - 0x8]
	0x03286BC0 CMP X11, X1
	0x03286BC4 B.EQ 0x3286BE4
	0x03286BC8 SUBS X9, X9, 0x1
	0x03286BCC ADD X10, X10, 0x10
	0x03286BD0 B.NE 0x3286BBC
	0x03286BD4 MOVZ W2, 0x3
	0x03286BD8 MOV X0, X21
	0x03286BDC BL 0x1C5C788
	0x03286BE0 B 0x3286BF4
	0x03286BE4 LDR W9, [X10]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X22, 0x1157000
	014 Move W8, [X22+1625]
	015 Move X21, X3
	016 Move X28, X2
	017 Move X20, X1
	018 Move X24, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {49}
	023 Move X0, 0xE9F000
	024 Move X0, [X0+1096]
	025 Call 0x1C17CF4
	026 Move X0, 0xE9F000
	027 Move X0, [X0+1104]
	028 Call 0x1C17CF4
	029 Move X0, 0xE9F000
	030 Move X0, [X0+1112]
	031 Call 0x1C17CF4
	032 Move X0, 0xE9F000
	033 Move X0, [X0+624]
	034 Call 0x1C17CF4
	035 Move X0, 0xE9F000
	036 Move X0, [X0+1120]
	037 Call 0x1C17CF4
	038 Move X0, 0xE9F000
	039 Move X0, [X0+1072]
	040 Call 0x1C17CF4
	041 Move X0, 0xE9F000
	042 Move X0, [X0+816]
	043 Call 0x1C17CF4
	044 Move X0, 0xE9F000
	045 Move X0, [X0+640]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X22+1625], W8
	049 Compare X20, 0
	050 JumpIfEqual {62}
	051 Move X9, 0xE9F000
	052 Move X9, [X9+1072]
	053 Move X8, [X20]
	054 Move X1, [X9]
	055 Move W10, [X8+304]
	056 Move W9, [X1+304]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X8, [X8+200]
	059 Add X8, X8, X9
	060 NotImplemented "Instruction LDUR not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X0, X31
	063 Call Thread.get_CurrentThread
	064 Compare X0, 0
	065 JumpIfEqual {584}
	066 Move X1, X31
	067 Call Thread.GetMutableExecutionContext, X0
	068 Compare X0, 0
	069 JumpIfEqual {584}
	070 Move X1, X31
	071 Call ExecutionContext.get_LogicalCallContext, X0
	072 Compare X20, 0
	073 JumpIfEqual {584}
	074 Move X27, 0xE9F000
	075 Move X27, [X27+816]
	076 Move [X20+48], X0
	077 Move X0, X20
	078 Move X1, X31
	079 Call MonoMethodMessage.get_CallType, X0
	080 Move W23, W0
	081 Compare X24, 0
	082 JumpIfEqual {88}
	083 Move X9, [X24]
	084 Move X8, [X27]
	085 Move W11, [X9+304]
	086 Move W10, [X8+304]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X29, X31
	089 Move X9, [X9+200]
	090 Add X9, X9, X10
	091 NotImplemented "Instruction LDUR not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 NotImplemented "Instruction CSEL not yet implemented."
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move [X21], X31
	096 Move X8, [X20+72]
	097 Compare X8, 0
	098 JumpIfEqual {584}
	099 Move X22, X31
	100 Move [X8+96], X20
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X0, [X20+72]
	103 Compare X0, 0
	104 JumpIfEqual {584}
	105 Move X1, X31
	106 Call AsyncResult.EndInvoke, X0
	107 Compare X0, 0
	108 JumpIfEqual {121}
	109 Move X8, 0xE9F000
	110 Move X8, [X8+1120]
	111 Move X25, X0
	112 Move X26, [X8]
	113 Move X1, X26
	114 Call 0x1C17E00
	115 Move X22, X0
	116 Compare X0, 0
	117 JumpIfNotEqual {122}
	118 Move X0, X25
	119 Move X1, X26
	120 Call 0x1C181E0
	121 Move X22, X31
	122 Move X0, [X20+16]
	123 Compare X0, 0
	124 JumpIfEqual {584}
	125 Move X19, 0xE9F000
	126 Move X19, [X19+624]
	127 Move X1, X31
	128 Call MethodBase.get_IsConstructor, X0
	129 Move TEMP, X0
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfNotEqual {174}
	133 Compare X29, 0
	134 JumpIfEqual {182}
	135 Compare X24, 0
	136 JumpIfEqual {584}
	137 Move X8, [X24]
	138 Move X25, [X27]
	139 Move W10, [X8+304]
	140 Move W9, [X25+304]
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move X10, [X8+200]
	143 Add X10, X10, X9
	144 NotImplemented "Instruction LDUR not yet implemented."
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move X8, [X8+200]
	147 Move X22, [X19]
	148 Move X0, X20
	149 Add X8, X8, X9
	150 NotImplemented "Instruction LDUR not yet implemented."
	151 Move X1, X22
	152 Call 0x1C17E00
	153 Compare X0, 0
	154 JumpIfEqual {513}
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Move X1, X0
	157 NotImplemented "Instruction CSEL not yet implemented."
	158 Call RemotingProxy.ActivateRemoteObject, X0, X1
	159 Move X27, 0xE9F000
	160 Move X27, [X27+1120]
	161 Move X25, X20
	162 Compare X0, 0
	163 JumpIfEqual {200}
	164 Move X23, [X27]
	165 Move X26, X0
	166 Move X1, X23
	167 Call 0x1C17E00
	168 Move X22, X0
	169 Compare X0, 0
	170 JumpIfNotEqual {278}
	171 Move X0, X26
	172 Move X1, X23
	173 Call 0x1C181E0
	174 Move X27, 0xE9F000
	175 Move X27, [X27+1120]
	176 Compare X22, 0
	177 JumpIfNotEqual {278}
	178 Move X25, X20
	179 Compare X24, 0
	180 JumpIfNotEqual {200}
	181 Call 0x1C17F20
	182 Move X27, 0xE9F000
	183 Move X27, [X27+1120]
	184 Compare X24, 0
	185 JumpIfEqual {584}
	186 Move X0, X24
	187 Call RealProxy.GetProxiedType, X0
	188 Move X8, 0xE9F000
	189 Move X8, [X8+1096]
	190 Move X26, X0
	191 Move X8, [X8]
	192 Move X0, X8
	193 Call 0x1C17F10
	194 Move X1, X26
	195 Move X2, X31
	196 Move X25, X0
	197 Call ConstructionCall..ctor, X0, X1
	198 Compare X22, 0
	199 JumpIfNotEqual {278}
	200 Move X8, [X24]
	201 Move X9, [X8+392]
	202 Move X2, [X8+400]
	203 Move X0, X24
	204 Move X1, X25
	205 NotImplemented "Instruction BLR not yet implemented."
	206 Move X24, X0
	207 Compare X0, 0
	208 JumpIfEqual {219}
	209 Move X26, [X27]
	210 Move X0, X24
	211 Move X1, X26
	212 Call 0x1C17E00
	213 Move X22, X0
	214 Compare X0, 0
	215 JumpIfNotEqual {220}
	216 Move X0, X24
	217 Move X1, X26
	218 Call 0x1C181E0
	219 Move X22, X31
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Compare X29, 0
	222 JumpIfNotEqual {276}
	223 Move X0, [X20+72]
	224 Compare X0, 0
	225 JumpIfEqual {584}
	226 Move X8, [X0]
	227 Move X1, X22
	228 Move X9, [X8+648]
	229 Move X2, [X8+656]
	230 NotImplemented "Instruction BLR not yet implemented."
	231 Compare X22, 0
	232 JumpIfEqual {584}
	233 Move X8, [X22]
	234 Move X1, [X27]
	235 Move X23, X0
	236 NotImplemented "Instruction LDRH not yet implemented."
	237 Compare X9, 0
	238 JumpIfEqual {245}
	239 Move X10, [X8+176]
	240 Add X10, X10, 8
	241 NotImplemented "Instruction LDUR not yet implemented."
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Subtract X9, X9, 1
	244 Add X10, X10, 16
	245 Move W2, 1
	246 Move X0, X22
	247 Call 0x1C5D788
	248 Move W9, [X10]
	249 Add W9, W9, 1
	250 Add X8, X8, W9
	251 Add X0, X8, 312
	252 Move X8, [X0]
	253 Move X1, [X0+8]
	254 Move X0, X22
	255 NotImplemented "Instruction BLR not yet implemented."
	256 Move [X21], X0
	257 Move X8, 0xE9F000
	258 Move X8, [X8+640]
	259 Move X0, [X8]
	260 Call 0x1C17F10
	261 Move X8, 0xE9F000
	262 Move X8, [X8+1112]
	263 Move X24, X0
	264 Move X0, X22
	265 Move X1, [X8]
	266 Call 0x1C17E00
	267 Move X5, X0
	268 Move X0, X24
	269 Move X1, X23
	270 Move X2, X31
	271 Move W3, W31
	272 Move X4, X31
	273 Move X6, X31
	274 Call ReturnMessage..ctor, X0, X1, X2, X3, X4, X5
	275 Move X22, X24
	276 Compare X22, 0
	277 JumpIfEqual {584}
	278 Move X8, [X22]
	279 Move X1, [X19]
	280 NotImplemented "Instruction LDRH not yet implemented."
	281 Compare X9, 0
	282 JumpIfEqual {289}
	283 Move X10, [X8+176]
	284 Add X10, X10, 8
	285 NotImplemented "Instruction LDUR not yet implemented."
	286 NotImplemented "Instruction CMP not yet implemented."
	287 Subtract X9, X9, 1
	288 Add X10, X10, 16
	289 Move W2, 2
	290 Move X0, X22
	291 Call 0x1C5D788
	292 Move W9, [X10]
	293 Add W9, W9, 2
	294 Add X8, X8, W9
	295 Add X0, X8, 312
	296 Move X8, [X0]
	297 Move X1, [X0+8]
	298 Move X0, X22
	299 NotImplemented "Instruction BLR not yet implemented."
	300 Compare X0, 0
	301 JumpIfEqual {371}
	302 Move X8, [X22]
	303 Move X1, [X19]
	304 NotImplemented "Instruction LDRH not yet implemented."
	305 Compare X9, 0
	306 JumpIfEqual {313}
	307 Move X10, [X8+176]
	308 Add X10, X10, 8
	309 NotImplemented "Instruction LDUR not yet implemented."
	310 NotImplemented "Instruction CMP not yet implemented."
	311 Subtract X9, X9, 1
	312 Add X10, X10, 16
	313 Move W2, 2
	314 Move X0, X22
	315 Call 0x1C5D788
	316 Move W9, [X10]
	317 Add W9, W9, 2
	318 Add X8, X8, W9
	319 Add X0, X8, 312
	320 Move X8, [X0]
	321 Move X1, [X0+8]
	322 Move X0, X22
	323 NotImplemented "Instruction BLR not yet implemented."
	324 Compare X0, 0
	325 JumpIfEqual {584}
	326 Move X1, X31
	327 Call LogicalCallContext.get_HasInfo, X0
	328 Move TEMP, X0
	329 And TEMP, TEMP, 1
	330 Compare TEMP, 1
	331 JumpIfNotEqual {371}
	332 Move X0, X31
	333 Call Thread.get_CurrentThread
	334 Compare X0, 0
	335 JumpIfEqual {584}
	336 Move X1, X31
	337 Call Thread.GetMutableExecutionContext, X0
	338 Compare X0, 0
	339 JumpIfEqual {584}
	340 Move X1, X31
	341 Call ExecutionContext.get_LogicalCallContext, X0
	342 Move X8, [X22]
	343 Move X1, [X19]
	344 Move X23, X0
	345 NotImplemented "Instruction LDRH not yet implemented."
	346 Compare X9, 0
	347 JumpIfEqual {354}
	348 Move X10, [X8+176]
	349 Add X10, X10, 8
	350 NotImplemented "Instruction LDUR not yet implemented."
	351 NotImplemented "Instruction CMP not yet implemented."
	352 Subtract X9, X9, 1
	353 Add X10, X10, 16
	354 Move W2, 2
	355 Move X0, X22
	356 Call 0x1C5D788
	357 Move W9, [X10]
	358 Add W9, W9, 2
	359 Add X8, X8, W9
	360 Add X0, X8, 312
	361 Move X8, [X0]
	362 Move X1, [X0+8]
	363 Move X0, X22
	364 NotImplemented "Instruction BLR not yet implemented."
	365 Compare X23, 0
	366 JumpIfEqual {584}
	367 Move X1, X0
	368 Move X0, X23
	369 Move X2, X31
	370 Call LogicalCallContext.Merge, X0, X1
	371 Move X8, [X22]
	372 Move X1, [X27]
	373 NotImplemented "Instruction LDRH not yet implemented."
	374 Compare X9, 0
	375 JumpIfEqual {382}
	376 Move X10, [X8+176]
	377 Add X10, X10, 8
	378 NotImplemented "Instruction LDUR not yet implemented."
	379 NotImplemented "Instruction CMP not yet implemented."
	380 Subtract X9, X9, 1
	381 Add X10, X10, 16
	382 Move X0, X22
	383 Move W2, W31
	384 Call 0x1C5D788
	385 NotImplemented "Instruction LDRSW not yet implemented."
	386 Add X8, X8, X9
	387 Add X0, X8, 312
	388 Move X8, [X0]
	389 Move X1, [X0+8]
	390 Move X0, X22
	391 NotImplemented "Instruction BLR not yet implemented."
	392 Move [X28], X0
	393 Compare X0, 0
	394 JumpIfNotEqual {499}
	395 Move X8, 0xE9F000
	396 Move X8, [X8+1104]
	397 Move X0, X22
	398 Move X1, [X8]
	399 Call 0x1C17E00
	400 Compare X0, 0
	401 JumpIfEqual {419}
	402 Move X8, [X21]
	403 Compare X8, 0
	404 JumpIfNotEqual {463}
	405 Move X8, [X22]
	406 Move X1, [X27]
	407 NotImplemented "Instruction LDRH not yet implemented."
	408 Compare X9, 0
	409 JumpIfEqual {416}
	410 Move X10, [X8+176]
	411 Add X10, X10, 8
	412 NotImplemented "Instruction LDUR not yet implemented."
	413 NotImplemented "Instruction CMP not yet implemented."
	414 Subtract X9, X9, 1
	415 Add X10, X10, 16
	416 Move W2, 1
	417 Move X0, X22
	418 Call 0x1C5D788
	419 Move X0, X20
	420 Move X1, X31
	421 Call MonoMethodMessage.get_CallType, X0
	422 NotImplemented "Instruction CMP not yet implemented."
	423 Move X0, X20
	424 Move X1, X31
	425 Call MonoMethodMessage.get_CallType, X0
	426 Compare W0, 0
	427 JumpIfEqual {437}
	428 Move X0, X20
	429 Move X1, X31
	430 Call MonoMethodMessage.get_CallType, X0
	431 NotImplemented "Instruction CMP not yet implemented."
	432 Move X8, [X20+72]
	433 Compare X8, 0
	434 JumpIfEqual {584}
	435 Move X1, [X8+96]
	436 Move X0, X22
	437 Move X0, X22
	438 Move X1, X20
	439 Call RealProxy.ProcessResponse, X0, X1
	440 Move X8, [X21]
	441 Compare X8, 0
	442 JumpIfNotEqual {463}
	443 Move X8, [X22]
	444 Move X1, [X27]
	445 NotImplemented "Instruction LDRH not yet implemented."
	446 Compare X9, 0
	447 JumpIfEqual {416}
	448 Move X10, [X8+176]
	449 Add X10, X10, 8
	450 NotImplemented "Instruction LDUR not yet implemented."
	451 NotImplemented "Instruction CMP not yet implemented."
	452 Subtract X9, X9, 1
	453 Add X10, X10, 16
	454 Move W9, [X10]
	455 Add W9, W9, 1
	456 Add X8, X8, W9
	457 Add X0, X8, 312
	458 Move X8, [X0]
	459 Move X1, [X0+8]
	460 Move X0, X22
	461 NotImplemented "Instruction BLR not yet implemented."
	462 Move [X21], X0
	463 Move X8, [X22]
	464 Move X1, [X27]
	465 NotImplemented "Instruction LDRH not yet implemented."
	466 Compare X9, 0
	467 JumpIfEqual {474}
	468 Move X10, [X8+176]
	469 Add X10, X10, 8
	470 NotImplemented "Instruction LDUR not yet implemented."
	471 NotImplemented "Instruction CMP not yet implemented."
	472 Subtract X9, X9, 1
	473 Add X10, X10, 16
	474 Move W2, 2
	475 Move X0, X22
	476 Call 0x1C5D788
	477 Move W9, [X10]
	478 Add W9, W9, 2
	479 Add X8, X8, W9
	480 Add X0, X8, 312
	481 Move X2, [X0]
	482 Move X1, [X0+8]
	483 Move X0, X22
	484 Move X20, [X31+80]
	485 Move X19, [X31+88]
	486 Move X22, [X31+64]
	487 Move X21, [X31+72]
	488 Move X24, [X31+48]
	489 Move X23, [X31+56]
	490 Move X26, [X31+32]
	491 Move X25, [X31+40]
	492 Move X28, [X31+16]
	493 Move X27, [X31+24]
	494 Move X29, [X31+96]
	495 Move X30, [X31+104]
	496 CallNoReturn X2
	497 Move X0, X20
	498 Call 0x1C181E0
	499 Move [X21], X31
	500 Move X19, [X28]
	501 Move X0, X19
	502 Call 0x19913C0
	503 Move X0, X19
	504 Move X1, X31
	505 Call Exception.FixRemotingException, X0
	506 Move X19, X0
	507 Move X0, 0xE9F000
	508 Move X0, [X0+1128]
	509 Call 0x1C17D08
	510 Move X1, X0
	511 Move X0, X19
	512 Call 0x1C17DEC
	513 Move X0, X20
	514 Move X1, X22
	515 Call 0x1C181E0
	516 Move X22, X0
	517 Move X25, X20
	518 Move X22, X0
	519 NotImplemented "Instruction CMP not yet implemented."
	520 Move X0, X22
	521 Call 0x3EB2AD0
	522 Move X22, X0
	523 Move X0, 0xE6E000
	524 Move X0, [X0+2000]
	525 Call 0x1C17D08
	526 Move X8, [X22]
	527 Move X1, [X8]
	528 Call 0x1C18270
	529 Move TEMP, X0
	530 And TEMP, TEMP, 1
	531 Compare TEMP, 1
	532 JumpIfNotEqual {585}
	533 Move X24, [X22]
	534 Call 0x3EB2AE0
	535 NotImplemented "Instruction CMP not yet implemented."
	536 Move X0, 0xE9F000
	537 Move X22, [X20+72]
	538 Move X0, [X0+640]
	539 Call 0x1C17D08
	540 Call 0x1C17F10
	541 Move X23, X0
	542 Move X0, 0xE9F000
	543 Move X0, [X0+1112]
	544 Call 0x1C17D08
	545 Move X1, X0
	546 Move X0, X25
	547 Call 0x1C17E00
	548 Move X2, X0
	549 Move X0, X23
	550 Move X1, X24
	551 Move X3, X31
	552 Call ReturnMessage..ctor, X0, X1, X2
	553 Compare X22, 0
	554 JumpIfEqual {584}
	555 Move X8, [X22]
	556 Move X0, X22
	557 Move X1, X23
	558 Move X9, [X8+648]
	559 Move X2, [X8+656]
	560 NotImplemented "Instruction BLR not yet implemented."
	561 Move X0, 0xE9F000
	562 Move X0, [X0+640]
	563 Call 0x1C17D08
	564 Call 0x1C17F10
	565 Move X22, X0
	566 Move X0, 0xE9F000
	567 Move X0, [X0+1112]
	568 Call 0x1C17D08
	569 Move X1, X0
	570 Move X0, X25
	571 Call 0x1C17E00
	572 Move X5, X0
	573 Move X0, X22
	574 Move X1, X31
	575 Move X2, X31
	576 Move W3, W31
	577 Move X4, X31
	578 Move X6, X31
	579 Call ReturnMessage..ctor, X0, X1, X2, X3, X4, X5
	580 Move X27, 0xE9F000
	581 Move X27, [X27+1120]
	582 Compare X22, 0
	583 JumpIfNotEqual {278}
	584 Call 0x1C17F20
	585 Move W0, 8
	586 Call 0x3EB2AF0
	587 Move X8, [X22]
	588 Move [X0], X8
	589 Move X1, 0xC2F000
	590 Add X1, X1, 3672
	591 Move X2, X31
	592 Call 0x3EB2B00
	593 Move X0, X24
	594 Call 0x1C17F18
	595 Move X22, X0
	596 Call 0x3EB2AE0
	597 Move X0, X22
	598 Call 0x1D2D690
	599 Call 0x1991590

Method: System.Object InternalGetTransparentProxy(System.String className)

Disassembly:
	0x03287840 MOV X0, X22

ISIL:
	001 Call 0x1C723AC
	002 Return X0

Method: System.Object GetTransparentProxy()

Disassembly:
	0x03287844 LDP X9, X1, [X8 + 0x1C8]
	0x03287848 BLR X9
	0x0328784C CBZ X0, 0x32878D0
	0x03287850 ADRP X10, 0xE9C000
	0x03287854 LDR X8, [X0]
	0x03287858 LDR X10, [X10 + 0xDD8]
	0x0328785C MOV X21, X0
	0x03287860 LDRH W9, [X8 + 0x12E]
	0x03287864 LDR X1, [X10]
	0x03287868 CBZ X9, 0x328788C
	0x0328786C LDR X10, [X8 + 0xB0]
	0x03287870 ADD X10, X10, 0x8
	0x03287874 LDUR X11, [X10 - 0x8]
	0x03287878 CMP X11, X1
	0x0328787C B.EQ 0x328789C
	0x03287880 SUBS X9, X9, 0x1
	0x03287884 ADD X10, X10, 0x10
	0x03287888 B.NE 0x3287874
	0x0328788C MOVZ W2, 0x1
	0x03287890 MOV X0, X21
	0x03287894 BL 0x1C5C788
	0x03287898 B 0x32878AC
	0x0328789C LDR W9, [X10]
	0x032878A0 ADD W9, W9, 0x1
	0x032878A4 ADD X8, X8, W9, 0x4, SXTW
	0x032878A8 ADD X0, X8, 0x138
	0x032878AC LDP X4, X3, [X0]
	0x032878B0 MOV X0, X21
	0x032878B4 MOV X1, X19
	0x032878B8 MOV X2, X20
	0x032878BC LDP X20, X19, [X31 + 0x30]
	0x032878C0 LDP X22, X21, [X31 + 0x20]
	0x032878C4 LDP X24, X23, [X31 + 0x10]
	0x032878C8 LDR X30, [X31], #0x40
	0x032878CC BR X4
	0x032878D0 BL 0x1C16F20
	0x032878D4 STP X30, X21, [X31 - 0x20]!
	0x032878D8 STP X20, X19, [X31 + 0x10]
	0x032878DC ADRP X20, 0x1155000
	0x032878E0 LDRB W8, [X20 + 0x662]
	0x032878E4 MOV X19, X0
	0x032878E8 TBNZ X8, 0x0, 0x328790C
	0x032878EC ADRP X0, 0xE9D000
	0x032878F0 LDR X0, [X0 + 0x2D8]
	0x032878F4 BL 0x1C16CF4
	0x032878F8 ADRP X0, 0xE9C000
	0x032878FC LDR X0, [X0 + 0xE68]
	0x03287900 BL 0x1C16CF4
	0x03287904 MOVZ W8, 0x1
	0x03287908 STRB W8, [X20 + 0x662]
	0x0328790C LDR X20, [X19 + 0x38]
	0x03287910 CBZ X20, 0x3287968
	0x03287914 ADRP X8, 0xE9D000
	0x03287918 LDR X8, [X8 + 0x2D8]
	0x0328791C LDR X9, [X20]
	0x03287920 LDR X8, [X8]
	0x03287924 LDRB W11, [X9 + 0x130]
	0x03287928 LDRB W10, [X8 + 0x130]
	0x0328792C CMP W11, W10
	0x03287930 B.CC 0x3287948
	0x03287934 LDR X9, [X9 + 0xC8]
	0x03287938 ADD X9, X9, X10, 0x3, LSL
	0x0328793C LDUR X9, [X9 - 0x8]
	0x03287940 CMP X9, X8
	0x03287944 B.EQ 0x3287968
	0x03287948 ADRP X8, 0xE9C000
	0x0328794C LDR X8, [X8 + 0xE68]
	0x03287950 LDR X0, [X8]
	0x03287954 LDR W8, [X0 + 0xE0]
	0x03287958 CBNZ W8, 0x3287960
	0x0328795C BL 0x1C16DFC
	0x03287960 MOV X0, X20
	0x03287964 BL 0x3281154
	0x03287968 MOV X0, X19
	0x0328796C LDP X20, X19, [X31 + 0x10]
	0x03287970 MOV X1, X31
	0x03287974 LDP X30, X21, [X31], #0x20
	0x03287978 B 0x33CB4DC
	0x0328797C CMP W1, 0x1
	0x03287980 MOV X21, X0
	0x03287984 B.NE 0x32879B4
	0x03287988 MOV X0, X21
	0x0328798C BL 0x3EB1AD0
	0x03287990 LDR X20, [X0]
	0x03287994 BL 0x3EB1AE0
	0x03287998 MOV X0, X19
	0x0328799C MOV X1, X31
	0x032879A0 BL 0x33CB4DC
	0x032879A4 CBNZ X20, 0x32879BC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1156000
	006 Move W8, [X20+1626]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0xE9D000
	013 Move X0, [X0+3544]
	014 Call 0x1C17CF4
	015 Move X0, 0xE9D000
	016 Move X0, [X0+3584]
	017 Call 0x1C17CF4
	018 Move X0, 0xE6D000
	019 Move X0, [X0+1728]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+1626], W8
	023 Move X0, [X19+64]
	024 Compare X0, 0
	025 JumpIfNotEqual {100}
	026 Move X21, 0xE9D000
	027 Move X21, [X21+3544]
	028 Move X0, X19
	029 Move X1, [X21]
	030 Call 0x1C17E00
	031 Compare X0, 0
	032 JumpIfEqual {85}
	033 Move X8, [X0]
	034 Move X1, [X21]
	035 Move X20, X0
	036 NotImplemented "Instruction LDRH not yet implemented."
	037 Compare X9, 0
	038 JumpIfEqual {45}
	039 Move X10, [X8+176]
	040 Add X10, X10, 8
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Subtract X9, X9, 1
	044 Add X10, X10, 16
	045 Move X0, X20
	046 Move W2, W31
	047 Call 0x1C5D788
	048 NotImplemented "Instruction LDRSW not yet implemented."
	049 Add X8, X8, X9
	050 Add X0, X8, 312
	051 Move X8, [X0]
	052 Move X1, [X0+8]
	053 Move X0, X20
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Compare X0, 0
	056 JumpIfEqual {85}
	057 Move X8, 0xE6D000
	058 Move X8, [X8+1728]
	059 Move X20, X0
	060 Move X0, [X8]
	061 Move X8, 0xE9D000
	062 Move X8, [X8+3584]
	063 Move W9, [X0+224]
	064 Move X21, [X8]
	065 Compare W9, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Move X0, X21
	069 Move X1, X31
	070 Call Type.GetTypeFromHandle, X0
	071 Compare X0, 0
	072 JumpIfEqual {105}
	073 Move X8, [X0]
	074 Move X9, [X8+728]
	075 Move X1, [X8+736]
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Move X1, X0
	078 Move X0, X20
	079 Move X2, X31
	080 Call String.op_Equality, X0, X1
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfNotEqual {93}
	085 Move X0, [X19+16]
	086 Compare X0, 0
	087 JumpIfEqual {105}
	088 Move X8, [X0]
	089 Move X9, [X8+728]
	090 Move X1, [X8+736]
	091 NotImplemented "Instruction BLR not yet implemented."
	092 Move X20, X0
	093 Move X8, [X19]
	094 Move X0, X19
	095 Move X1, X20
	096 Move X9, [X8+408]
	097 Move X2, [X8+416]
	098 NotImplemented "Instruction BLR not yet implemented."
	099 Move [X19+64], X0
	100 Move X20, [X31+16]
	101 Move X19, [X31+24]
	102 Move X30, [X31+32]
	103 Move X21, [X31+40]
	104 Return X0
	105 Call 0x1C17F20

Method: System.Void AttachServer(System.MarshalByRefObject s)

Disassembly:
	0x032879A8 LDP X20, X19, [X31 + 0x10]
	0x032879AC LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.Void SetTargetDomain(System.Int32 domainId)

Disassembly:
	0x032879B0 RET
	0x032879B4 MOV X20, X31

ISIL:
	001 Move [X0+40], W1
	002 Return 

Method: System.Object GetAppDomainTarget()

Disassembly:
	0x032879B8 B 0x32879C8
	0x032879BC MOV X0, X20
	0x032879C0 BL 0x1C16F18
	0x032879C4 MOV X21, X0
	0x032879C8 MOV X0, X19
	0x032879CC MOV X1, X31
	0x032879D0 BL 0x33CB4DC
	0x032879D4 CBNZ X20, 0x32879E0
	0x032879D8 MOV X0, X21
	0x032879DC BL 0x1D2C690
	0x032879E0 MOV X0, X20
	0x032879E4 BL 0x1C16F18
	0x032879E8 BL 0x1990590
	0x032879EC STP X30, X21, [X31 - 0x20]!
	0x032879F0 STP X20, X19, [X31 + 0x10]
	0x032879F4 ADRP X21, 0x1155000
	0x032879F8 ADRP X20, 0xE76000
	0x032879FC ADRP X19, 0xE6C000
	0x03287A00 LDRB W8, [X21 + 0x663]
	0x03287A04 LDR X20, [X20 + 0x968]
	0x03287A08 LDR X19, [X19 + 0x6C0]
	0x03287A0C TBNZ X8, 0x0, 0x3287A54
	0x03287A10 ADRP X0, 0xE9D000
	0x03287A14 LDR X0, [X0 + 0x330]
	0x03287A18 BL 0x1C16CF4
	0x03287A1C ADRP X0, 0xE76000
	0x03287A20 LDR X0, [X0 + 0x968]
	0x03287A24 BL 0x1C16CF4
	0x03287A28 ADRP X0, 0xE6C000
	0x03287A2C LDR X0, [X0 + 0x6C0]
	0x03287A30 BL 0x1C16CF4
	0x03287A34 ADRP X0, 0xE9D000
	0x03287A38 LDR X0, [X0 + 0x4E8]
	0x03287A3C BL 0x1C16CF4
	0x03287A40 ADRP X0, 0xE9D000
	0x03287A44 LDR X0, [X0 + 0x4F0]
	0x03287A48 BL 0x1C16CF4
	0x03287A4C MOVZ W8, 0x1
	0x03287A50 STRB W8, [X21 + 0x663]
	0x03287A54 LDR X0, [X19]
	0x03287A58 LDR X19, [X20]
	0x03287A5C LDR W8, [X0 + 0xE0]
	0x03287A60 CBNZ W8, 0x3287A68
	0x03287A64 BL 0x1C16DFC
	0x03287A68 MOV X0, X19
	0x03287A6C MOV X1, X31
	0x03287A70 BL 0x338C698
	0x03287A74 CBZ X0, 0x3287ADC
	0x03287A78 ADRP X8, 0xE9D000
	0x03287A7C LDR X8, [X8 + 0x4E8]
	0x03287A80 ADRP X19, 0xE9D000
	0x03287A84 MOV X2, X31
	0x03287A88 LDR X1, [X8]
	0x03287A8C LDR X19, [X19 + 0x330]
	0x03287A90 BL 0x33975F8
	0x03287A94 LDR X8, [X19]
	0x03287A98 MOV X1, X31
	0x03287A9C LDR X8, [X8 + 0xB8]
	0x03287AA0 STR X0, [X8]
	0x03287AA4 LDR X0, [X20]
	0x03287AA8 BL 0x338C698
	0x03287AAC CBZ X0, 0x3287ADC
	0x03287AB0 ADRP X8, 0xE9D000
	0x03287AB4 LDR X8, [X8 + 0x4F0]
	0x03287AB8 MOV X2, X31
	0x03287ABC LDR X1, [X8]
	0x03287AC0 BL 0x33975F8
	0x03287AC4 LDR X8, [X19]
	0x03287AC8 LDP X20, X19, [X31 + 0x10]
	0x03287ACC LDR X8, [X8 + 0xB8]
	0x03287AD0 STR X0, [X8 + 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1156000
	005 Move W8, [X20+1627]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xE9E000
	012 Move X0, [X0+728]
	013 Call 0x1C17CF4
	014 Move X0, 0xE9D000
	015 Move X0, [X0+3688]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1627], W8
	019 Move X0, [X19+32]
	020 Compare X0, 0
	021 JumpIfNotEqual {47}
	022 Move X8, 0xE9D000
	023 Move X8, [X8+3688]
	024 Move X20, [X19+48]
	025 Move X0, [X8]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X20
	031 Call RemotingServices.GetIdentityForUri, X0
	032 Compare X0, 0
	033 JumpIfEqual {51}
	034 Move X8, 0xE9E000
	035 Move X8, [X8+728]
	036 Move X9, [X0]
	037 Move X8, [X8]
	038 Move W11, [X9+304]
	039 Move W10, [X8+304]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X9, [X9+200]
	042 Add X9, X9, X10
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X0, [X0+80]
	046 Move [X19+32], X0
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Return X0
	051 Move X0, 0xE9E000
	052 Move X19, [X19+48]
	053 Move X0, [X0+1216]
	054 Call 0x1C17D08
	055 Move X20, X0
	056 Move X0, 0xE9D000
	057 Move X0, [X0+3816]
	058 Call 0x1C17D08
	059 Move X2, X0
	060 Move X0, X20
	061 Move X1, X19
	062 Move X3, X31
	063 Call String.Concat, X0, X1, X2
	064 Move X19, X0
	065 Move X0, 0xE9D000
	066 Move X0, [X0+3360]
	067 Call 0x1C17D08
	068 Call 0x1C17F10
	069 Move X1, X19
	070 Move X20, X0
	071 Call RemotingException..ctor, X0, X1
	072 Move X0, 0xE9E000
	073 Move X0, [X0+1224]
	074 Call 0x1C17D08
	075 Move X1, X0
	076 Move X0, X20
	077 Call 0x1C17DEC

Method: System.Object[] ProcessResponse(System.Runtime.Remoting.Messaging.IMethodReturnMessage mrm, System.Runtime.Remoting.Messaging.MonoMethodMessage call)

Disassembly:
	0x03287158 STP X30, X23, [X31 + 0x20]
	0x0328715C STP X22, X21, [X31 + 0x30]
	0x03287160 STP X20, X19, [X31 + 0x40]
	0x03287164 ADRP X20, 0x1155000
	0x03287168 LDRB W8, [X20 + 0x689]
	0x0328716C MOV X19, X0
	0x03287170 TBNZ X8, 0x0, 0x32871C4
	0x03287174 ADRP X0, 0xE9D000
	0x03287178 LDR X0, [X0 + 0x4D8]
	0x0328717C BL 0x1C16CF4
	0x03287180 ADRP X0, 0xE9D000
	0x03287184 LDR X0, [X0 + 0x390]
	0x03287188 BL 0x1C16CF4
	0x0328718C ADRP X0, 0xE9D000
	0x03287190 LDR X0, [X0 + 0x398]
	0x03287194 BL 0x1C16CF4
	0x03287198 ADRP X0, 0xE9D000
	0x0328719C LDR X0, [X0 + 0x3A0]
	0x032871A0 BL 0x1C16CF4
	0x032871A4 ADRP X0, 0xE9D000
	0x032871A8 LDR X0, [X0 + 0x4E0]
	0x032871AC BL 0x1C16CF4
	0x032871B0 ADRP X0, 0xE9D000
	0x032871B4 LDR X0, [X0 + 0x3B0]
	0x032871B8 BL 0x1C16CF4
	0x032871BC MOVZ W8, 0x1
	0x032871C0 STRB W8, [X20 + 0x689]
	0x032871C4 STP X31, X31, [X31 + 0x8]
	0x032871C8 STR X31, [X31 + 0x18]
	0x032871CC LDR X8, [X19 + 0x30]
	0x032871D0 CBNZ X8, 0x32872C4
	0x032871D4 ADRP X8, 0xE9D000
	0x032871D8 LDR X8, [X8 + 0x4D8]
	0x032871DC LDR X0, [X8]
	0x032871E0 BL 0x1C16F10
	0x032871E4 MOV X1, X19
	0x032871E8 MOV X2, X31
	0x032871EC MOV X20, X0
	0x032871F0 BL 0x3296038
	0x032871F4 LDR X0, [X19 + 0x38]
	0x032871F8 STR X20, [X19 + 0x30]
	0x032871FC CBZ X0, 0x32872C4
	0x03287200 ADRP X8, 0xE9D000
	0x03287204 LDR X8, [X8 + 0x3B0]
	0x03287208 LDR X1, [X8]
	0x0328720C ADD X8, X31, 0x8
	0x03287210 BL 0x301CB58
	0x03287214 ADRP X22, 0xE9D000
	0x03287218 ADRP X23, 0xE9D000
	0x0328721C LDR X22, [X22 + 0x398]
	0x03287220 LDR X23, [X23 + 0x4E0]
	0x03287224 LDR X1, [X22]
	0x03287228 ADD X0, X31, 0x8
	0x0328722C BL 0x2BC4350
	0x03287230 TBZ X0, 0x0, 0x32872B0
	0x03287234 LDR X0, [X31 + 0x18]
	0x03287238 LDR X1, [X23]
	0x0328723C BL 0x1C16E00
	0x03287240 MOV X20, X0
	0x03287244 CBZ X0, 0x3287224
	0x03287248 LDR X8, [X20]
	0x0328724C LDR X21, [X19 + 0x30]
	0x03287250 LDR X1, [X23]
	0x03287254 LDRH W9, [X8 + 0x12E]
	0x03287258 CBZ X9, 0x328727C
	0x0328725C LDR X10, [X8 + 0xB0]
	0x03287260 ADD X10, X10, 0x8
	0x03287264 LDUR X11, [X10 - 0x8]
	0x03287268 CMP X11, X1
	0x0328726C B.EQ 0x328728C
	0x03287270 SUBS X9, X9, 0x1
	0x03287274 ADD X10, X10, 0x10
	0x03287278 B.NE 0x3287264
	0x0328727C MOV X0, X20
	0x03287280 MOV W2, W31
	0x03287284 BL 0x1C5C788
	0x03287288 B 0x3287298
	0x0328728C LDRSW X9, [X10]
	0x03287290 ADD X8, X8, X9, 0x4, LSL
	0x03287294 ADD X0, X8, 0x138
	0x03287298 LDP X8, X2, [X0]
	0x0328729C MOV X0, X20
	0x032872A0 MOV X1, X21
	0x032872A4 BLR X8
	0x032872A8 STR X0, [X19 + 0x30]
	0x032872AC B 0x3287224
	0x032872B0 ADRP X8, 0xE9D000
	0x032872B4 LDR X8, [X8 + 0x390]
	0x032872B8 ADD X0, X31, 0x8
	0x032872BC LDR X1, [X8]
	0x032872C0 BL 0x2BC434C
	0x032872C4 LDR X0, [X19 + 0x30]
	0x032872C8 LDP X20, X19, [X31 + 0x40]
	0x032872CC LDP X22, X21, [X31 + 0x30]
	0x032872D0 LDP X30, X23, [X31 + 0x20]
	0x032872D4 ADD X31, X31, 0x50
	0x032872D8 RET
	0x032872DC B 0x32872E4
	0x032872E0 B 0x32872E4
	0x032872E4 MOV X20, X0
	0x032872E8 CMP W1, 0x1
	0x032872EC B.NE 0x3287320
	0x032872F0 MOV X0, X20
	0x032872F4 BL 0x3EB1AD0
	0x032872F8 LDR X21, [X0]
	0x032872FC BL 0x3EB1AE0
	0x03287300 ADRP X8, 0xE9D000
	0x03287304 LDR X8, [X8 + 0x390]
	0x03287308 ADD X0, X31, 0x8
	0x0328730C LDR X1, [X8]
	0x03287310 BL 0x2BC434C
	0x03287314 CBZ X21, 0x32872C4
	0x03287318 MOV X0, X21
	0x0328731C BL 0x1C16F18
	0x03287320 MOV X21, X31
	0x03287324 B 0x328732C
	0x03287328 MOV X20, X0
	0x0328732C ADRP X8, 0xE9D000
	0x03287330 LDR X8, [X8 + 0x390]
	0x03287334 LDR X1, [X8]
	0x03287338 ADD X0, X31, 0x8
	0x0328733C BL 0x2BC434C
	0x03287340 CBNZ X21, 0x328734C
	0x03287344 MOV X0, X20
	0x03287348 BL 0x1D2C690
	0x0328734C MOV X0, X21
	0x03287350 BL 0x1C16F18
	0x03287354 BL 0x1990590
	0x03287358 STP X30, X21, [X31 - 0x20]!
	0x0328735C STP X20, X19, [X31 + 0x10]
	0x03287360 ADRP X21, 0x1155000
	0x03287364 LDRB W8, [X21 + 0x65E]
	0x03287368 MOV X20, X1
	0x0328736C MOV X19, X0
	0x03287370 TBNZ X8, 0x0, 0x32873A0
	0x03287374 ADRP X0, 0xE9D000
	0x03287378 LDR X0, [X0 + 0x2D8]
	0x0328737C BL 0x1C16CF4
	0x03287380 ADRP X0, 0xE9D000
	0x03287384 LDR X0, [X0 + 0x350]
	0x03287388 BL 0x1C16CF4
	0x0328738C ADRP X0, 0xE9C000
	0x03287390 LDR X0, [X0 + 0xD58]
	0x03287394 BL 0x1C16CF4
	0x03287398 MOVZ W8, 0x1
	0x0328739C STRB W8, [X21 + 0x65E]
	0x032873A0 STR X20, [X19 + 0x38]
	0x032873A4 CBZ X20, 0x3287570
	0x032873A8 ADRP X9, 0xE9D000
	0x032873AC LDR X9, [X9 + 0x2D8]
	0x032873B0 LDR X8, [X20]
	0x032873B4 LDR X10, [X9]
	0x032873B8 LDRB W9, [X8 + 0x130]
	0x032873BC LDRB W11, [X10 + 0x130]
	0x032873C0 CMP W9, W11
	0x032873C4 B.CC 0x3287440
	0x032873C8 LDR X12, [X8 + 0xC8]
	0x032873CC ADD X11, X12, X11, 0x3, LSL
	0x032873D0 LDUR X11, [X11 - 0x8]
	0x032873D4 CMP X11, X10
	0x032873D8 B.NE 0x3287440
	0x032873DC LDR X8, [X20 + 0x60]
	0x032873E0 LDR X9, [X19]
	0x032873E4 MOV X0, X19
	0x032873E8 STR X8, [X19 + 0x18]
	0x032873EC LDR X8, [X20 + 0x50]
	0x032873F0 STR X8, [X19 + 0x20]
	0x032873F4 LDP X8, X1, [X9 + 0x1A8]
	0x032873F8 BLR X8
	0x032873FC CBZ X0, 0x3287434
	0x03287400 ADRP X9, 0xE9C000
	0x03287404 LDR X9, [X9 + 0xD58]
	0x03287408 LDR X8, [X0]
	0x0328740C LDR X1, [X9]
	0x03287410 LDRB W10, [X8 + 0x130]
	0x03287414 LDRB W9, [X1 + 0x130]
	0x03287418 CMP W10, W9
	0x0328741C B.CC 0x3287578
	0x03287420 LDR X8, [X8 + 0xC8]
	0x03287424 ADD X8, X8, X9, 0x3, LSL
	0x03287428 LDUR X8, [X8 - 0x8]
	0x0328742C CMP X8, X1
	0x03287430 B.NE 0x3287578
	0x03287434 LDR X8, [X20]
	0x03287438 STR X0, [X20 + 0x70]
	0x0328743C LDRB W9, [X8 + 0x130]
	0x03287440 ADRP X21, 0xE9D000
	0x03287444 LDR X21, [X21 + 0x350]
	0x03287448 LDR X10, [X21]
	0x0328744C LDRB W11, [X10 + 0x130]
	0x03287450 CMP W9, W11
	0x03287454 B.CC 0x328746C
	0x03287458 LDR X8, [X8 + 0xC8]
	0x0328745C ADD X8, X8, X11, 0x3, LSL
	0x03287460 LDUR X8, [X8 - 0x8]
	0x03287464 CMP X8, X10
	0x03287468 B.EQ 0x32874A8
	0x0328746C LDR X0, [X20 + 0x10]
	0x03287470 LDR X9, [X19 + 0x38]
	0x03287474 STR X0, [X19 + 0x30]
	0x03287478 CBZ X9, 0x3287570
	0x0328747C LDR X8, [X9 + 0x20]
	0x03287480 CBZ X8, 0x3287490
	0x03287484 MOVZ W9, 0x1
	0x03287488 STRB W9, [X19 + 0x58]
	0x0328748C B 0x3287494
	0x03287490 LDR X8, [X9 + 0x18]
	0x03287494 STR X8, [X19 + 0x50]
	0x03287498 STR X31, [X19 + 0x60]
	0x0328749C LDP X20, X19, [X31 + 0x10]
	0x032874A0 LDP X30, X21, [X31], #0x20
	0x032874A4 RET
	0x032874A8 LDR X8, [X19]
	0x032874AC MOV X0, X19
	0x032874B0 LDP X9, X1, [X8 + 0x1A8]
	0x032874B4 BLR X9
	0x032874B8 LDR X9, [X20]
	0x032874BC LDR X1, [X21]
	0x032874C0 LDRB W8, [X9 + 0x130]
	0x032874C4 LDRB W10, [X1 + 0x130]
	0x032874C8 CMP W8, W10
	0x032874CC B.CC 0x3287574
	0x032874D0 LDR X9, [X9 + 0xC8]
	0x032874D4 ADD X9, X9, X10, 0x3, LSL
	0x032874D8 LDUR X9, [X9 - 0x8]
	0x032874DC CMP X9, X1
	0x032874E0 B.NE 0x3287574
	0x032874E4 MOV X8, X0
	0x032874E8 CBZ X0, 0x3287520
	0x032874EC ADRP X10, 0xE9C000
	0x032874F0 LDR X10, [X10 + 0xD58]
	0x032874F4 LDR X9, [X8]
	0x032874F8 LDR X1, [X10]
	0x032874FC LDRB W11, [X9 + 0x130]
	0x03287500 LDRB W10, [X1 + 0x130]
	0x03287504 CMP W11, W10
	0x03287508 B.CC 0x328757C
	0x0328750C LDR X9, [X9 + 0xC8]
	0x03287510 ADD X9, X9, X10, 0x3, LSL
	0x03287514 LDUR X9, [X9 - 0x8]
	0x03287518 CMP X9, X1
	0x0328751C B.NE 0x328757C
	0x03287520 MOV X0, X20
	0x03287524 MOV X1, X8
	0x03287528 BL 0x3273CC8
	0x0328752C LDR X8, [X20]
	0x03287530 LDR X1, [X21]
	0x03287534 LDRB W10, [X8 + 0x130]
	0x03287538 LDRB W9, [X1 + 0x130]
	0x0328753C CMP W10, W9
	0x03287540 B.CC 0x3287574
	0x03287544 LDR X8, [X8 + 0xC8]
	0x03287548 ADD X8, X8, X9, 0x3, LSL
	0x0328754C LDUR X8, [X8 - 0x8]
	0x03287550 CMP X8, X1
	0x03287554 B.NE 0x3287574
	0x03287558 LDR X0, [X20 + 0x38]
	0x0328755C CBZ X0, 0x3287570
	0x03287560 LDR X8, [X0]
	0x03287564 LDP X9, X1, [X8 + 0x1E8]
	0x03287568 BLR X9
	0x0328756C B 0x3287470
	0x03287570 BL 0x1C16F20
	0x03287574 MOV X0, X20
	0x03287578 BL 0x1C171E0
	0x0328757C MOV X0, X8
	0x03287580 BL 0x1C171E0
	0x03287584 STR X30, [X31 - 0x20]!
	0x03287588 STP X20, X19, [X31 + 0x10]
	0x0328758C ADRP X20, 0x1155000
	0x03287590 LDRB W8, [X20 + 0x660]
	0x03287594 MOV X19, X0
	0x03287598 TBNZ X8, 0x0, 0x32875BC
	0x0328759C ADRP X0, 0xE9D000
	0x032875A0 LDR X0, [X0 + 0x350]
	0x032875A4 BL 0x1C16CF4
	0x032875A8 ADRP X0, 0xE9C000
	0x032875AC LDR X0, [X0 + 0xDD8]
	0x032875B0 BL 0x1C16CF4
	0x032875B4 MOVZ W8, 0x1
	0x032875B8 STRB W8, [X20 + 0x660]
	0x032875BC LDR X0, [X19 + 0x38]
	0x032875C0 CBZ X0, 0x32875F8
	0x032875C4 ADRP X9, 0xE9D000
	0x032875C8 LDR X9, [X9 + 0x350]
	0x032875CC LDR X8, [X0]
	0x032875D0 LDR X9, [X9]
	0x032875D4 LDRB W11, [X8 + 0x130]
	0x032875D8 LDRB W10, [X9 + 0x130]
	0x032875DC CMP W11, W10
	0x032875E0 B.CC 0x32875F8
	0x032875E4 LDR X11, [X8 + 0xC8]
	0x032875E8 ADD X10, X11, X10, 0x3, LSL
	0x032875EC LDUR X10, [X10 - 0x8]
	0x032875F0 CMP X10, X9
	0x032875F4 B.EQ 0x328761C
	0x032875F8 MOV X0, X19
	0x032875FC BL 0x327F304
	0x03287600 CBZ X0, 0x32876B8
	0x03287604 LDR X8, [X0]
	0x03287608 LDR X2, [X8 + 0x2D8]
	0x0328760C LDR X1, [X8 + 0x2E0]
	0x03287610 LDP X20, X19, [X31 + 0x10]
	0x03287614 LDR X30, [X31], #0x20
	0x03287618 BR X2
	0x0328761C LDP X9, X2, [X8 + 0x178]
	0x03287620 MOV X1, X31
	0x03287624 BLR X9
	0x03287628 CBZ X0, 0x32876B8
	0x0328762C LDR X8, [X0]
	0x03287630 MOV X20, X0
	0x03287634 LDP X9, X1, [X8 + 0x1C8]
	0x03287638 BLR X9
	0x0328763C CBZ X0, 0x32875F8
	0x03287640 LDR X8, [X20]
	0x03287644 MOV X0, X20
	0x03287648 LDP X9, X1, [X8 + 0x1C8]
	0x0328764C BLR X9
	0x03287650 CBZ X0, 0x32876B8
	0x03287654 ADRP X10, 0xE9C000
	0x03287658 LDR X8, [X0]
	0x0328765C LDR X10, [X10 + 0xDD8]
	0x03287660 MOV X19, X0
	0x03287664 LDRH W9, [X8 + 0x12E]
	0x03287668 LDR X1, [X10]
	0x0328766C CBZ X9, 0x3287690
	0x03287670 LDR X10, [X8 + 0xB0]
	0x03287674 ADD X10, X10, 0x8
	0x03287678 LDUR X11, [X10 - 0x8]
	0x0328767C CMP X11, X1
	0x03287680 B.EQ 0x32876A0
	0x03287684 SUBS X9, X9, 0x1
	0x03287688 ADD X10, X10, 0x10
	0x0328768C B.NE 0x3287678
	0x03287690 MOV X0, X19
	0x03287694 MOV W2, W31
	0x03287698 BL 0x1C5C788
	0x0328769C B 0x32876AC
	0x032876A0 LDRSW X9, [X10]
	0x032876A4 ADD X8, X8, X9, 0x4, LSL
	0x032876A8 ADD X0, X8, 0x138
	0x032876AC LDP X2, X1, [X0]
	0x032876B0 MOV X0, X19
	0x032876B4 B 0x3287610
	0x032876B8 BL 0x1C16F20
	0x032876BC STR X30, [X31 - 0x40]!
	0x032876C0 STP X24, X23, [X31 + 0x10]
	0x032876C4 STP X22, X21, [X31 + 0x20]
	0x032876C8 STP X20, X19, [X31 + 0x30]
	0x032876CC ADRP X22, 0x1155000
	0x032876D0 LDRB W8, [X22 + 0x661]
	0x032876D4 MOV X20, X2
	0x032876D8 MOV X19, X1
	0x032876DC MOV X21, X0
	0x032876E0 TBNZ X8, 0x0, 0x328771C
	0x032876E4 ADRP X0, 0xE9D000
	0x032876E8 LDR X0, [X0 + 0x350]
	0x032876EC BL 0x1C16CF4
	0x032876F0 ADRP X0, 0xE9C000
	0x032876F4 LDR X0, [X0 + 0xDD8]
	0x032876F8 BL 0x1C16CF4
	0x032876FC ADRP X0, 0xE9C000
	0x03287700 LDR X0, [X0 + 0xE00]
	0x03287704 BL 0x1C16CF4
	0x03287708 ADRP X0, 0xE6C000
	0x0328770C LDR X0, [X0 + 0x6C0]
	0x03287710 BL 0x1C16CF4
	0x03287714 MOVZ W8, 0x1
	0x03287718 STRB W8, [X22 + 0x661]
	0x0328771C LDR X0, [X21 + 0x38]
	0x03287720 CBZ X0, 0x3287758
	0x03287724 ADRP X9, 0xE9D000
	0x03287728 LDR X9, [X9 + 0x350]
	0x0328772C LDR X8, [X0]
	0x03287730 LDR X9, [X9]
	0x03287734 LDRB W11, [X8 + 0x130]
	0x03287738 LDRB W10, [X9 + 0x130]
	0x0328773C CMP W11, W10
	0x03287740 B.CC 0x3287758
	0x03287744 LDR X11, [X8 + 0xC8]
	0x03287748 ADD X10, X11, X10, 0x3, LSL
	0x0328774C LDUR X10, [X10 - 0x8]
	0x03287750 CMP X10, X9
	0x03287754 B.EQ 0x328778C
	0x03287758 MOV X0, X21
	0x0328775C BL 0x327F304
	0x03287760 CBZ X19, 0x32878D0
	0x03287764 LDR X8, [X19]
	0x03287768 MOV X1, X0
	0x0328776C MOV X0, X19
	0x03287770 LDP X20, X19, [X31 + 0x30]
	0x03287774 LDR X3, [X8 + 0x2A8]
	0x03287778 LDR X2, [X8 + 0x2B0]
	0x0328777C LDP X22, X21, [X31 + 0x20]
	0x03287780 LDP X24, X23, [X31 + 0x10]
	0x03287784 LDR X30, [X31], #0x40
	0x03287788 BR X3
	0x0328778C LDP X9, X2, [X8 + 0x178]
	0x03287790 MOV X1, X31
	0x03287794 BLR X9
	0x03287798 CBZ X0, 0x32878D0
	0x0328779C MOV X22, X0
	0x032877A0 BL 0x3274F74
	0x032877A4 TBZ X0, 0x0, 0x3287828
	0x032877A8 CBZ X19, 0x32878D0
	0x032877AC MOV X0, X19
	0x032877B0 MOV X1, X31
	0x032877B4 BL 0x33962E8
	0x032877B8 TBNZ X0, 0x0, 0x3287810
	0x032877BC MOV X0, X21
	0x032877C0 BL 0x327F304
	0x032877C4 ADRP X8, 0xE6C000
	0x032877C8 LDR X8, [X8 + 0x6C0]
	0x032877CC ADRP X9, 0xE9C000
	0x032877D0 MOV X23, X0
	0x032877D4 LDR X8, [X8]
	0x032877D8 LDR X9, [X9 + 0xE00]
	0x032877DC LDR W10, [X8 + 0xE0]
	0x032877E0 LDR X24, [X9]
	0x032877E4 CBNZ W10, 0x32877F0
	0x032877E8 MOV X0, X8
	0x032877EC BL 0x1C16DFC
	0x032877F0 MOV X0, X24
	0x032877F4 MOV X1, X31
	0x032877F8 BL 0x338C698
	0x032877FC MOV X1, X0
	0x03287800 MOV X0, X23
	0x03287804 MOV X2, X31
	0x03287808 BL 0x3395194
	0x0328780C TBZ X0, 0x0, 0x3287828
	0x03287810 LDP X20, X19, [X31 + 0x30]
	0x03287814 LDP X22, X21, [X31 + 0x20]
	0x03287818 LDP X24, X23, [X31 + 0x10]
	0x0328781C MOVZ W0, 0x1
	0x03287820 LDR X30, [X31], #0x40
	0x03287824 RET
	0x03287828 LDR X8, [X22]
	0x0328782C MOV X0, X22
	0x03287830 LDP X9, X1, [X8 + 0x1C8]
	0x03287834 BLR X9
	0x03287838 CBZ X0, 0x3287758
	0x0328783C LDR X8, [X22]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X21, 0x1156000
	015 Move W8, [X21+1628]
	016 Move X19, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {39}
	022 Move X0, 0xE9E000
	023 Move X0, [X0+624]
	024 Call 0x1C17CF4
	025 Move X0, 0xE9E000
	026 Move X0, [X0+1120]
	027 Call 0x1C17CF4
	028 Move X0, 0xE9E000
	029 Move X0, [X0+632]
	030 Call 0x1C17CF4
	031 Move X0, 0xE6D000
	032 Move X0, [X0+2512]
	033 Call 0x1C17CF4
	034 Move X0, 0xE9D000
	035 Move X0, [X0+3688]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X21+1628], W8
	039 Move [X31+12], W31
	040 Compare X19, 0
	041 JumpIfEqual {400}
	042 Move X21, [X19+16]
	043 Compare X21, 0
	044 JumpIfEqual {56}
	045 Move X9, 0xE9E000
	046 Move X9, [X9+632]
	047 Move X8, [X21]
	048 Move X1, [X9]
	049 Move W10, [X8+304]
	050 Move W9, [X1+304]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X8, [X8+200]
	053 Add X8, X8, X9
	054 NotImplemented "Instruction LDUR not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Compare X20, 0
	057 JumpIfEqual {400}
	058 Move X22, 0xE9E000
	059 Move X8, [X20]
	060 Move X22, [X22+1120]
	061 NotImplemented "Instruction LDRH not yet implemented."
	062 Move X1, [X22]
	063 Compare X9, 0
	064 JumpIfEqual {71}
	065 Move X10, [X8+176]
	066 Add X10, X10, 8
	067 NotImplemented "Instruction LDUR not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Subtract X9, X9, 1
	070 Add X10, X10, 16
	071 Move W2, 2
	072 Move X0, X20
	073 Call 0x1C5D788
	074 Move W9, [X10]
	075 Add W9, W9, 2
	076 Add X8, X8, W9
	077 Add X0, X8, 312
	078 Move X8, [X0]
	079 Move X1, [X0+8]
	080 Move X0, X20
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Compare X0, 0
	083 JumpIfEqual {126}
	084 Compare X21, 0
	085 JumpIfEqual {400}
	086 Move X8, [X21]
	087 Move X0, X21
	088 Move X9, [X8+952]
	089 Move X1, [X8+960]
	090 NotImplemented "Instruction BLR not yet implemented."
	091 Move X8, [X20]
	092 Move X1, [X22]
	093 Move X22, X0
	094 NotImplemented "Instruction LDRH not yet implemented."
	095 Compare X9, 0
	096 JumpIfEqual {103}
	097 Move X10, [X8+176]
	098 Add X10, X10, 8
	099 NotImplemented "Instruction LDUR not yet implemented."
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Subtract X9, X9, 1
	102 Add X10, X10, 16
	103 Move W2, 2
	104 Move X0, X20
	105 Call 0x1C5D788
	106 Move W9, [X10]
	107 Add W9, W9, 2
	108 Add X8, X8, W9
	109 Add X0, X8, 312
	110 Move X8, [X0]
	111 Move X1, [X0+8]
	112 Move X0, X20
	113 NotImplemented "Instruction BLR not yet implemented."
	114 Compare X22, 0
	115 JumpIfEqual {400}
	116 Move X8, [X22]
	117 Move X1, X0
	118 Move X0, X22
	119 Move X9, [X8+2152]
	120 Move X2, [X8+2160]
	121 NotImplemented "Instruction BLR not yet implemented."
	122 Move TEMP, X0
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfNotEqual {470}
	126 Add X1, X31, 12
	127 Move X0, X19
	128 Move X2, X31
	129 Call MonoMethodMessage.NeedsOutProcessing, X0, X1
	130 Move TEMP, X0
	131 And TEMP, TEMP, 1
	132 Compare TEMP, 1
	133 JumpIfNotEqual {379}
	134 Compare X21, 0
	135 JumpIfEqual {400}
	136 Move X8, [X21]
	137 Move X0, X21
	138 Move X9, [X8+584]
	139 Move X1, [X8+592]
	140 NotImplemented "Instruction BLR not yet implemented."
	141 Move X8, 0xE6D000
	142 Move W1, [X31+12]
	143 Move X8, [X8+2512]
	144 Move X22, X0
	145 Move X8, [X8]
	146 Move X0, X8
	147 Call 0x1C17D6C
	148 Compare X22, 0
	149 JumpIfEqual {400}
	150 Move W8, [X22+24]
	151 Move X21, X0
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move X28, 0xE9E000
	154 Move X29, 0xE9D000
	155 Move X28, [X28+624]
	156 Move X29, [X29+3688]
	157 Move W26, W31
	158 Move W27, W31
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Add X8, X22, W26
	161 Move X23, [X8+32]
	162 Compare X23, 0
	163 JumpIfEqual {400}
	164 Move X0, X23
	165 Move X1, X31
	166 Call ParameterInfo.get_IsOut, X0
	167 Move TEMP, X0
	168 And TEMP, TEMP, 1
	169 Compare TEMP, 1
	170 JumpIfNotEqual {184}
	171 Move X8, [X23]
	172 Move X0, X23
	173 Move X9, [X8+472]
	174 Move X1, [X8+480]
	175 NotImplemented "Instruction BLR not yet implemented."
	176 Compare X0, 0
	177 JumpIfEqual {400}
	178 Move X1, X31
	179 Call Type.get_IsByRef, X0
	180 Move TEMP, X0
	181 And TEMP, TEMP, 1
	182 Compare TEMP, 1
	183 JumpIfNotEqual {217}
	184 Move X8, [X23]
	185 Move X0, X23
	186 Move X9, [X8+472]
	187 Move X1, [X8+480]
	188 NotImplemented "Instruction BLR not yet implemented."
	189 Compare X0, 0
	190 JumpIfEqual {400}
	191 Move X1, X31
	192 Call Type.get_IsByRef, X0
	193 Move TEMP, X0
	194 And TEMP, TEMP, 1
	195 Compare TEMP, 1
	196 JumpIfNotEqual {343}
	197 Move X8, [X23]
	198 Move X0, X23
	199 Move X9, [X8+488]
	200 Move X1, [X8+496]
	201 NotImplemented "Instruction BLR not yet implemented."
	202 Move X8, [X20]
	203 Move X1, [X28]
	204 Move W24, W0
	205 NotImplemented "Instruction LDRH not yet implemented."
	206 Compare X9, 0
	207 JumpIfEqual {214}
	208 Move X10, [X8+176]
	209 Add X10, X10, 8
	210 NotImplemented "Instruction LDUR not yet implemented."
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Subtract X9, X9, 1
	213 Add X10, X10, 16
	214 Move X0, X20
	215 Move W2, W31
	216 Call 0x1C5D788
	217 Move X8, [X23]
	218 Move X0, X23
	219 Move X9, [X8+488]
	220 Move X1, [X8+496]
	221 NotImplemented "Instruction BLR not yet implemented."
	222 Move X8, [X20]
	223 Move X1, [X28]
	224 Move W24, W0
	225 NotImplemented "Instruction LDRH not yet implemented."
	226 Compare X9, 0
	227 JumpIfEqual {234}
	228 Move X10, [X8+176]
	229 Add X10, X10, 8
	230 NotImplemented "Instruction LDUR not yet implemented."
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Subtract X9, X9, 1
	233 Add X10, X10, 16
	234 Move X0, X20
	235 Move W2, W31
	236 Call 0x1C5D788
	237 NotImplemented "Instruction LDRSW not yet implemented."
	238 Add X8, X8, X9
	239 Add X0, X8, 312
	240 Move X8, [X0]
	241 Move X1, [X0+8]
	242 Move X0, X20
	243 NotImplemented "Instruction BLR not yet implemented."
	244 NotImplemented "Instruction CMP not yet implemented."
	245 Move X8, [X23]
	246 Move X0, X23
	247 Move X9, [X8+488]
	248 Move X1, [X8+496]
	249 NotImplemented "Instruction BLR not yet implemented."
	250 Move X8, [X20]
	251 Move X1, [X28]
	252 Move W24, W0
	253 NotImplemented "Instruction LDRH not yet implemented."
	254 Compare X9, 0
	255 JumpIfEqual {262}
	256 Move X10, [X8+176]
	257 Add X10, X10, 8
	258 NotImplemented "Instruction LDUR not yet implemented."
	259 NotImplemented "Instruction CMP not yet implemented."
	260 Subtract X9, X9, 1
	261 Add X10, X10, 16
	262 Move W2, 8
	263 Move X0, X20
	264 Call 0x1C5D788
	265 Move X24, X31
	266 NotImplemented "Instruction LDRSW not yet implemented."
	267 Add X8, X8, X9
	268 Add X0, X8, 312
	269 Move X8, [X0]
	270 Move X1, [X0+8]
	271 Move X0, X20
	272 NotImplemented "Instruction BLR not yet implemented."
	273 NotImplemented "Instruction CMP not yet implemented."
	274 Move X8, [X23]
	275 Move X0, X23
	276 Move X9, [X8+488]
	277 Move X1, [X8+496]
	278 NotImplemented "Instruction BLR not yet implemented."
	279 Move X8, [X20]
	280 Move X1, [X28]
	281 Move W24, W0
	282 NotImplemented "Instruction LDRH not yet implemented."
	283 Compare X9, 0
	284 JumpIfEqual {291}
	285 Move X10, [X8+176]
	286 Add X10, X10, 8
	287 NotImplemented "Instruction LDUR not yet implemented."
	288 NotImplemented "Instruction CMP not yet implemented."
	289 Subtract X9, X9, 1
	290 Add X10, X10, 16
	291 Move W2, 8
	292 Move X0, X20
	293 Call 0x1C5D788
	294 Move W9, [X10]
	295 Add W9, W9, 8
	296 Add X8, X8, W9
	297 Add X0, X8, 312
	298 Move X8, [X0]
	299 Move X2, [X0+8]
	300 Move X0, X20
	301 Move W1, W24
	302 NotImplemented "Instruction BLR not yet implemented."
	303 Move X24, X0
	304 Compare X0, 0
	305 JumpIfEqual {328}
	306 Move X8, [X23]
	307 Move X0, X23
	308 Move X9, [X8+472]
	309 Move X1, [X8+480]
	310 NotImplemented "Instruction BLR not yet implemented."
	311 Compare X0, 0
	312 JumpIfEqual {400}
	313 Move X8, [X0]
	314 Move X9, [X8+1064]
	315 Move X1, [X8+1072]
	316 NotImplemented "Instruction BLR not yet implemented."
	317 Compare X0, 0
	318 JumpIfEqual {400}
	319 Move X8, [X0]
	320 Move X1, X24
	321 Move X9, [X8+2152]
	322 Move X2, [X8+2160]
	323 NotImplemented "Instruction BLR not yet implemented."
	324 Move TEMP, X0
	325 And TEMP, TEMP, 1
	326 Compare TEMP, 1
	327 JumpIfNotEqual {407}
	328 Compare X21, 0
	329 JumpIfEqual {400}
	330 Compare X24, 0
	331 JumpIfEqual {338}
	332 Move X8, [X21]
	333 Move X0, X24
	334 Move X1, [X8+64]
	335 Call 0x1C17E00
	336 Compare X0, 0
	337 JumpIfEqual {402}
	338 Move W8, [X21+24]
	339 NotImplemented "Instruction CMP not yet implemented."
	340 Add X8, X21, W27
	341 Add W27, W27, 1
	342 Move [X8+32], X24
	343 Move W8, [X22+24]
	344 Add W26, W26, 1
	345 NotImplemented "Instruction CMP not yet implemented."
	346 Move W9, [X10]
	347 Add W9, W9, 8
	348 Add X8, X8, W9
	349 Add X0, X8, 312
	350 Move X8, [X0]
	351 Move X2, [X0+8]
	352 Move X0, X20
	353 Move W1, W24
	354 NotImplemented "Instruction BLR not yet implemented."
	355 Compare X0, 0
	356 JumpIfEqual {343}
	357 Move X8, [X23]
	358 Move X24, X0
	359 Move X0, X23
	360 Move X9, [X8+488]
	361 Move X1, [X8+496]
	362 NotImplemented "Instruction BLR not yet implemented."
	363 Move W1, W0
	364 Move X0, X19
	365 Move X2, X31
	366 Call MonoMethodMessage.GetArg, X0, X1
	367 Compare X0, 0
	368 JumpIfEqual {436}
	369 Move X25, X0
	370 Move X0, [X29]
	371 Move W8, [X0+224]
	372 Compare W8, 0
	373 JumpIfNotEqual {375}
	374 Call 0x1C17DFC
	375 Move X0, X23
	376 Move X1, X25
	377 Move X2, X24
	378 Call RemotingServices.UpdateOutArgObject, X0, X1, X2
	379 Move X8, 0xE6D000
	380 Move X8, [X8+2512]
	381 Move W1, W31
	382 Move X0, [X8]
	383 Call 0x1C17D6C
	384 Move X21, X0
	385 Move X0, X21
	386 Move X20, [X31+96]
	387 Move X19, [X31+104]
	388 Move X22, [X31+80]
	389 Move X21, [X31+88]
	390 Move X24, [X31+64]
	391 Move X23, [X31+72]
	392 Move X26, [X31+48]
	393 Move X25, [X31+56]
	394 Move X28, [X31+32]
	395 Move X27, [X31+40]
	396 Move X29, [X31+16]
	397 Move X30, [X31+24]
	398 Add X31, X31, 112
	399 Return X0
	400 Call 0x1C17F20
	401 Call 0x1C17F28
	402 Call 0x1C17F44
	403 Move X1, X31
	404 Call 0x1C17DEC
	405 Move X0, X21
	406 Call 0x1C181E0
	407 Move X0, X23
	408 Call 0x19913C0
	409 Move X8, [X23]
	410 Move X0, X23
	411 Move X9, [X8+456]
	412 Move X1, [X8+464]
	413 NotImplemented "Instruction BLR not yet implemented."
	414 Move X19, X0
	415 Move X0, 0xE9E000
	416 Move X0, [X0+1176]
	417 Call 0x1C17D08
	418 Move X20, X0
	419 Move X0, 0xE9E000
	420 Move X0, [X0+1184]
	421 Call 0x1C17D08
	422 Move X2, X0
	423 Move X0, X20
	424 Move X1, X19
	425 Move X3, X31
	426 Call String.Concat, X0, X1, X2
	427 Move X19, X0
	428 Move X0, 0xE75000
	429 Move X0, [X0+3080]
	430 Call 0x1C17D08
	431 Call 0x1C17F10
	432 Move X1, X19
	433 Move X2, X31
	434 Move X20, X0
	435 Call InvalidCastException..ctor, X0, X1
	436 Move X0, X23
	437 Call 0x19913C0
	438 Move X8, [X23]
	439 Move X0, X23
	440 Move X9, [X8+456]
	441 Move X1, [X8+464]
	442 NotImplemented "Instruction BLR not yet implemented."
	443 Move X19, X0
	444 Move X0, 0xE9E000
	445 Move X0, [X0+1192]
	446 Call 0x1C17D08
	447 Move X20, X0
	448 Move X0, 0xE75000
	449 Move X0, [X0+2480]
	450 Call 0x1C17D08
	451 Move X2, X0
	452 Move X0, X20
	453 Move X1, X19
	454 Move X3, X31
	455 Call String.Concat, X0, X1, X2
	456 Move X19, X0
	457 Move X0, 0xE9D000
	458 Move X0, [X0+3360]
	459 Call 0x1C17D08
	460 Call 0x1C17F10
	461 Move X1, X19
	462 Move X20, X0
	463 Call RemotingException..ctor, X0, X1
	464 Move X0, 0xE9E000
	465 Move X0, [X0+1200]
	466 Call 0x1C17D08
	467 Move X1, X0
	468 Move X0, X20
	469 Call 0x1C17DEC
	470 Move X0, 0xE75000
	471 Move X0, [X0+3080]
	472 Call 0x1C17D08
	473 Call 0x1C17F10
	474 Move X19, X0
	475 Move X0, 0xE9E000
	476 Move X0, [X0+1208]
	477 Call 0x1C17D08
	478 Move X1, X0
	479 Move X0, X19
	480 Move X2, X31
	481 Call InvalidCastException..ctor, X0, X1
	482 Move X0, 0xE9E000
	483 Move X0, [X0+1200]
	484 Call 0x1C17D08
	485 Move X1, X0
	486 Move X0, X19
	487 Call 0x1C17DEC

