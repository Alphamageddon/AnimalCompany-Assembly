Type: System.Runtime.Remoting.Proxies.TransparentProxy

Method: System.RuntimeType GetProxyType()

Disassembly:
	0x03285F0C MOV X0, X20
	0x03285F10 MOV X1, X31
	0x03285F14 BL 0x33962E8
	0x03285F18 TBZ X0, 0x0, 0x3285F78
	0x03285F1C MOV X0, X19
	0x03285F20 MOV X1, X31
	0x03285F24 MOV X2, X31
	0x03285F28 STR X20, [X21 + 0x10]
	0x03285F2C BL 0x33C5D2C
	0x03285F30 TBNZ X0, 0x0, 0x3285F44
	0x03285F34 LDP X20, X19, [X31 + 0x10]
	0x03285F38 LDP X30, X21, [X31], #0x20
	0x03285F3C RET
	0x03285F40 BL 0x1C16F20
	0x03285F44 ADRP X0, 0xE6E000
	0x03285F48 LDR X0, [X0 + 0xB40]
	0x03285F4C BL 0x1C16D08
	0x03285F50 BL 0x1C16F10
	0x03285F54 MOV X19, X0
	0x03285F58 ADRP X0, 0xE9F000
	0x03285F5C LDR X0, [X0 + 0x478]
	0x03285F60 BL 0x1C16D08
	0x03285F64 MOV X1, X0
	0x03285F68 MOV X0, X19
	0x03285F6C MOV X2, X31
	0x03285F70 BL 0x3379A44
	0x03285F74 B 0x3285FA8
	0x03285F78 ADRP X0, 0xE76000
	0x03285F7C LDR X0, [X0 + 0x578]
	0x03285F80 BL 0x1C16D08
	0x03285F84 BL 0x1C16F10
	0x03285F88 MOV X19, X0
	0x03285F8C ADRP X0, 0xE9F000
	0x03285F90 LDR X0, [X0 + 0x480]
	0x03285F94 BL 0x1C16D08
	0x03285F98 MOV X1, X0
	0x03285F9C MOV X0, X19
	0x03285FA0 MOV X2, X31
	0x03285FA4 BL 0x3314A68
	0x03285FA8 ADRP X0, 0xE9F000
	0x03285FAC LDR X0, [X0 + 0x488]
	0x03285FB0 BL 0x1C16D08
	0x03285FB4 MOV X1, X0
	0x03285FB8 MOV X0, X19
	0x03285FBC BL 0x1C16DEC
	0x03285FC0 STR X30, [X31 - 0x20]!
	0x03285FC4 STP X20, X19, [X31 + 0x10]
	0x03285FC8 MOV X19, X2
	0x03285FCC MOV X2, X31
	0x03285FD0 MOV X20, X0
	0x03285FD4 BL 0x3285ED4
	0x03285FD8 STR X19, [X20 + 0x38]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1158000
	007 Move X20, 0xE6F000
	008 Move W8, [X21+1620]
	009 Move X20, [X20+1728]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xE98000
	016 Move X0, [X0+1256]
	017 Call 0x1C17CF4
	018 Move X0, 0xE6F000
	019 Move X0, [X0+1728]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+1620], W8
	023 Add X0, X19, 24
	024 Move X1, X31
	025 Call RuntimeRemoteClassHandle.get_ProxyClass, X0
	026 Move [X31+8], X0
	027 Add X0, X31, 8
	028 Move X1, X31
	029 Call RuntimeClassHandle.GetTypeHandle, X0
	030 Move X8, [X20]
	031 Move X19, X0
	032 Move W9, [X8+224]
	033 Compare W9, 0
	034 JumpIfNotEqual {37}
	035 Move X0, X8
	036 Call 0x1C17DFC
	037 Move X0, X19
	038 Move X1, X31
	039 Call Type.GetTypeFromHandle, X0
	040 Compare X0, 0
	041 JumpIfEqual {53}
	042 Move X9, 0xE98000
	043 Move X9, [X9+1256]
	044 Move X8, [X0]
	045 Move X1, [X9]
	046 Move W10, [X8+304]
	047 Move W9, [X1+304]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X8, [X8+200]
	050 Add X8, X8, X9
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X30, [X31+16]
	056 Move X21, [X31+24]
	057 Add X31, X31, 48
	058 Return X0
	059 Call 0x1C181E0

Method: System.Boolean get_IsContextBoundObject()

Disassembly:
	0x03285FDC LDP X20, X19, [X31 + 0x10]
	0x03285FE0 LDR X30, [X31], #0x20
	0x03285FE4 RET
	0x03285FE8 B 0x1C713C4
	0x03285FEC STR X30, [X31 - 0x40]!
	0x03285FF0 STP X24, X23, [X31 + 0x10]
	0x03285FF4 STP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Call TransparentProxy.GetProxyType, X0
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call Type.get_IsContextful, X0
	008 Return X0
	009 Call 0x1C17F20

Method: System.Runtime.Remoting.Contexts.Context get_TargetContext()

Disassembly:
	0x03285FF8 STP X20, X19, [X31 + 0x30]
	0x03285FFC ADRP X24, 0x1157000
	0x03286000 ADRP X23, 0xE9D000
	0x03286004 LDRB W8, [X24 + 0x658]
	0x03286008 B 0x3EB161C
	0x0328600C MOV X19, X3
	0x03286010 MOV X20, X2

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move X0, [X8+24]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Boolean InCurrentContext()

Disassembly:
	0x03286014 MOV X21, X1
	0x03286018 MOV X22, X0
	0x0328601C TBNZ X8, 0x0, 0x3286034
	0x03286020 ADRP X0, 0xE9D000
	0x03286024 LDR X0, [X0 + 0xE68]
	0x03286028 BL 0x1C16CF4
	0x0328602C MOVZ W8, 0x1
	0x03286030 STRB W8, [X24 + 0x658]
	0x03286034 LDR X8, [X22]
	0x03286038 MOV X0, X22
	0x0328603C LDP X9, X1, [X8 + 0x1A8]
	0x03286040 BLR X9
	0x03286044 LDR X8, [X23]
	0x03286048 MOV X22, X0
	0x0328604C MOV X0, X8
	0x03286050 BL 0x19903D0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call TransparentProxy.get_IsContextBoundObject, X0
	005 Move TEMP, X0
	006 And TEMP, TEMP, 1
	007 Compare TEMP, 1
	008 JumpIfNotEqual {17}
	009 Move X8, [X19+16]
	010 Compare X8, 0
	011 JumpIfEqual {21}
	012 Move X19, [X8+24]
	013 Move X0, X31
	014 Call Thread.get_CurrentContext
	015 NotImplemented "Instruction CMP not yet implemented."
	016 NotImplemented "Instruction CSET not yet implemented."
	017 Move W0, W31
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 Return X0
	021 Call 0x1C17F20

Method: System.Object LoadRemoteFieldNew(System.IntPtr classPtr, System.IntPtr fieldPtr)

Disassembly:
	0x03286054 MOV X0, X22
	0x03286058 MOV X1, X21
	0x0328605C MOV X2, X20
	0x03286060 MOV X3, X19
	0x03286064 BL 0x3280470
	0x03286068 LDR X0, [X0 + 0x38]
	0x0328606C RET
	0x03286070 STR X1, [X0 + 0x38]
	0x03286074 RET
	0x03286078 STR X30, [X31 - 0x30]!
	0x0328607C STP X22, X21, [X31 + 0x10]
	0x03286080 STP X20, X19, [X31 + 0x20]
	0x03286084 ADRP X21, 0x1156000
	0x03286088 LDRB W8, [X21 + 0x65F]
	0x0328608C MOV X20, X1
	0x03286090 MOV X19, X0
	0x03286094 TBNZ X8, 0x0, 0x32860B8
	0x03286098 ADRP X0, 0xE9E000
	0x0328609C LDR X0, [X0 + 0x490]
	0x032860A0 BL 0x1C16CF4
	0x032860A4 ADRP X0, 0xE9E000
	0x032860A8 LDR X0, [X0 + 0x458]
	0x032860AC BL 0x1C16CF4
	0x032860B0 MOVZ W8, 0x1
	0x032860B4 STRB W8, [X21 + 0x65F]
	0x032860B8 LDR X0, [X19 + 0x60]
	0x032860BC CBZ X0, 0x32860E8
	0x032860C0 MOV X1, X20
	0x032860C4 MOV X2, X31
	0x032860C8 BL 0x3299050
	0x032860CC LDR X1, [X19 + 0x60]
	0x032860D0 MOV X0, X19
	0x032860D4 LDP X20, X19, [X31 + 0x20]
	0x032860D8 LDP X22, X21, [X31 + 0x10]
	0x032860DC MOV X2, X31
	0x032860E0 LDR X30, [X31], #0x30
	0x032860E4 B 0x328E7C0
	0x032860E8 ADRP X8, 0xE9E000
	0x032860EC LDR X8, [X8 + 0x490]
	0x032860F0 LDR X0, [X8]
	0x032860F4 BL 0x1C16F10
	0x032860F8 MOV X21, X0
	0x032860FC CBZ X20, 0x328612C
	0x03286100 ADRP X8, 0xE9E000
	0x03286104 LDR X8, [X8 + 0x458]
	0x03286108 MOV X0, X20
	0x0328610C LDR X22, [X8]
	0x03286110 MOV X1, X22
	0x03286114 BL 0x1C16E00
	0x03286118 MOV X3, X0
	0x0328611C CBNZ X0, 0x3286130
	0x03286120 MOV X0, X20
	0x03286124 MOV X1, X22
	0x03286128 BL 0x1C171E0
	0x0328612C MOV X3, X31
	0x03286130 MOV X0, X21
	0x03286134 MOV X1, X19
	0x03286138 MOV X2, X31
	0x0328613C MOV X4, X31
	0x03286140 BL 0x328FB74
	0x03286144 MOV X0, X21
	0x03286148 LDP X20, X19, [X31 + 0x20]
	0x0328614C LDP X22, X21, [X31 + 0x10]
	0x03286150 LDR X30, [X31], #0x30
	0x03286154 RET
	0x03286158 SUB X31, X31, 0x70
	0x0328615C STP X29, X30, [X31 + 0x10]
	0x03286160 STP X28, X27, [X31 + 0x20]
	0x03286164 STP X26, X25, [X31 + 0x30]
	0x03286168 STP X24, X23, [X31 + 0x40]
	0x0328616C STP X22, X21, [X31 + 0x50]
	0x03286170 STP X20, X19, [X31 + 0x60]
	0x03286174 ADRP X21, 0x1156000
	0x03286178 LDRB W8, [X21 + 0x65C]
	0x0328617C MOV X19, X1
	0x03286180 MOV X20, X0
	0x03286184 TBNZ X8, 0x0, 0x32861CC
	0x03286188 ADRP X0, 0xE9E000
	0x0328618C LDR X0, [X0 + 0x270]
	0x03286190 BL 0x1C16CF4
	0x03286194 ADRP X0, 0xE9E000
	0x03286198 LDR X0, [X0 + 0x460]
	0x0328619C BL 0x1C16CF4
	0x032861A0 ADRP X0, 0xE9E000
	0x032861A4 LDR X0, [X0 + 0x278]
	0x032861A8 BL 0x1C16CF4
	0x032861AC ADRP X0, 0xE6D000
	0x032861B0 LDR X0, [X0 + 0x9D0]
	0x032861B4 BL 0x1C16CF4
	0x032861B8 ADRP X0, 0xE9D000
	0x032861BC LDR X0, [X0 + 0xE68]
	0x032861C0 BL 0x1C16CF4
	0x032861C4 MOVZ W8, 0x1
	0x032861C8 STRB W8, [X21 + 0x65C]
	0x032861CC STR W31, [X31 + 0xC]
	0x032861D0 CBZ X19, 0x32866E4
	0x032861D4 LDR X21, [X19 + 0x10]
	0x032861D8 CBZ X21, 0x3286210
	0x032861DC ADRP X9, 0xE9E000
	0x032861E0 LDR X9, [X9 + 0x278]
	0x032861E4 LDR X8, [X21]
	0x032861E8 LDR X1, [X9]
	0x032861EC LDRB W10, [X8 + 0x130]
	0x032861F0 LDRB W9, [X1 + 0x130]
	0x032861F4 CMP W10, W9
	0x032861F8 B.CC 0x32866F8
	0x032861FC LDR X8, [X8 + 0xC8]
	0x03286200 ADD X8, X8, X9, 0x3, LSL
	0x03286204 LDUR X8, [X8 - 0x8]
	0x03286208 CMP X8, X1
	0x0328620C B.NE 0x32866F8
	0x03286210 CBZ X20, 0x32866E4
	0x03286214 ADRP X22, 0xE9E000
	0x03286218 LDR X8, [X20]
	0x0328621C LDR X22, [X22 + 0x460]
	0x03286220 LDRH W9, [X8 + 0x12E]
	0x03286224 LDR X1, [X22]
	0x03286228 CBZ X9, 0x328624C
	0x0328622C LDR X10, [X8 + 0xB0]
	0x03286230 ADD X10, X10, 0x8
	0x03286234 LDUR X11, [X10 - 0x8]
	0x03286238 CMP X11, X1
	0x0328623C B.EQ 0x328625C
	0x03286240 SUBS X9, X9, 0x1
	0x03286244 ADD X10, X10, 0x10
	0x03286248 B.NE 0x3286234
	0x0328624C MOVZ W2, 0x2
	0x03286250 MOV X0, X20
	0x03286254 BL 0x1C5C788
	0x03286258 B 0x328626C
	0x0328625C LDR W9, [X10]
	0x03286260 ADD W9, W9, 0x2
	0x03286264 ADD X8, X8, W9, 0x4, SXTW
	0x03286268 ADD X0, X8, 0x138
	0x0328626C LDP X8, X1, [X0]
	0x03286270 MOV X0, X20
	0x03286274 BLR X8
	0x03286278 CBZ X0, 0x3286314
	0x0328627C CBZ X21, 0x32866E4
	0x03286280 LDR X8, [X21]
	0x03286284 MOV X0, X21
	0x03286288 LDR X9, [X8 + 0x3B8]
	0x0328628C LDR X1, [X8 + 0x3C0]
	0x03286290 BLR X9
	0x03286294 LDR X8, [X20]
	0x03286298 LDR X1, [X22]
	0x0328629C MOV X22, X0
	0x032862A0 LDRH W9, [X8 + 0x12E]
	0x032862A4 CBZ X9, 0x32862C8
	0x032862A8 LDR X10, [X8 + 0xB0]
	0x032862AC ADD X10, X10, 0x8
	0x032862B0 LDUR X11, [X10 - 0x8]
	0x032862B4 CMP X11, X1
	0x032862B8 B.EQ 0x32862D8
	0x032862BC SUBS X9, X9, 0x1
	0x032862C0 ADD X10, X10, 0x10
	0x032862C4 B.NE 0x32862B0
	0x032862C8 MOVZ W2, 0x2
	0x032862CC MOV X0, X20
	0x032862D0 BL 0x1C5C788
	0x032862D4 B 0x32862E8
	0x032862D8 LDR W9, [X10]
	0x032862DC ADD W9, W9, 0x2
	0x032862E0 ADD X8, X8, W9, 0x4, SXTW
	0x032862E4 ADD X0, X8, 0x138
	0x032862E8 LDP X8, X1, [X0]
	0x032862EC MOV X0, X20
	0x032862F0 BLR X8
	0x032862F4 CBZ X22, 0x32866E4
	0x032862F8 LDR X8, [X22]
	0x032862FC MOV X1, X0
	0x03286300 MOV X0, X22
	0x03286304 LDR X9, [X8 + 0x868]
	0x03286308 LDR X2, [X8 + 0x870]
	0x0328630C BLR X9
	0x03286310 TBZ X0, 0x0, 0x32867F8
	0x03286314 ADD X1, X31, 0xC
	0x03286318 MOV X0, X19
	0x0328631C MOV X2, X31

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X22, 0x1157000
	009 Move W8, [X22+1621]
	010 Move X20, X2
	011 Move X21, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0xE9F000
	018 Move X0, [X0+1072]
	019 Call 0x1C17CF4
	020 Move X0, 0xE6E000
	021 Move X0, [X0+2512]
	022 Call 0x1C17CF4
	023 Move X0, 0xE78000
	024 Move X0, [X0+2408]
	025 Call 0x1C17CF4
	026 Move X0, 0xE6E000
	027 Move X0, [X0+1728]
	028 Call 0x1C17CF4
	029 Move X0, 0xE9F000
	030 Move X0, [X0+600]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X22+1621], W8
	034 Add X0, X31, 24
	035 Move X1, X21
	036 Move X2, X31
	037 Move [X31+16], X31
	038 Move [X31+24], X31
	039 Move [X31+8], X31
	040 Call RuntimeClassHandle..ctor, X0, X1
	041 Add X0, X31, 24
	042 Move X1, X31
	043 Call RuntimeClassHandle.GetTypeHandle, X0
	044 Move X21, X0
	045 Move X0, X20
	046 Move X1, X31
	047 Call FieldInfo.GetFieldFromHandle, X0
	048 Move X20, X0
	049 Move X0, X19
	050 Call TransparentProxy.InCurrentContext, X0
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {66}
	055 Move X8, [X19+16]
	056 Compare X8, 0
	057 JumpIfEqual {182}
	058 Compare X20, 0
	059 JumpIfEqual {182}
	060 Move X9, [X20]
	061 Move X1, [X8+32]
	062 Move X0, X20
	063 Move X8, [X9+712]
	064 Move X2, [X9+720]
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move X8, 0xE6E000
	067 Move X8, [X8+1728]
	068 Move X0, [X8]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move X0, X21
	074 Move X1, X31
	075 Call Type.GetTypeFromHandle, X0
	076 Compare X0, 0
	077 JumpIfEqual {182}
	078 Move X8, [X0]
	079 Move X9, [X8+744]
	080 Move X1, [X8+752]
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Compare X20, 0
	083 JumpIfEqual {182}
	084 Move X8, [X20]
	085 Move X22, X0
	086 Move X0, X20
	087 Move X9, [X8+424]
	088 Move X1, [X8+432]
	089 NotImplemented "Instruction BLR not yet implemented."
	090 Move X23, 0xE6E000
	091 Move X23, [X23+2512]
	092 Move X21, X0
	093 Move W1, 2
	094 Move X8, [X23]
	095 Move X0, X8
	096 Call 0x1C17D6C
	097 Compare X0, 0
	098 JumpIfEqual {182}
	099 Move X20, X0
	100 Compare X22, 0
	101 JumpIfEqual {108}
	102 Move X8, [X20]
	103 Move X0, X22
	104 Move X1, [X8+64]
	105 Call 0x1C17E00
	106 Compare X0, 0
	107 JumpIfEqual {184}
	108 Move W8, [X20+24]
	109 Compare W8, 0
	110 JumpIfEqual {183}
	111 Move [X20+32], X22
	112 Compare X21, 0
	113 JumpIfEqual {121}
	114 Move X8, [X20]
	115 Move X0, X21
	116 Move X1, [X8+64]
	117 Call 0x1C17E00
	118 Compare X0, 0
	119 JumpIfEqual {184}
	120 Move W8, [X20+24]
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move [X20+40], X21
	123 Move X0, [X23]
	124 Move W1, 1
	125 Call 0x1C17D6C
	126 Move X8, 0xE78000
	127 Move X8, [X8+2408]
	128 Move X21, X0
	129 Move X1, X31
	130 Move X8, [X8]
	131 Move X0, X8
	132 Call Type.GetTypeFromHandle, X0
	133 Compare X0, 0
	134 JumpIfEqual {182}
	135 Move X8, 0xE9F000
	136 Move X8, [X8+600]
	137 Move W2, 36
	138 Move X3, X31
	139 Move X1, [X8]
	140 Call Type.GetMethod, X0, X1, X2
	141 Move X1, X31
	142 Move X2, X31
	143 Move X22, X0
	144 Call MethodInfo.op_Equality, X0, X1
	145 Move TEMP, X0
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfEqual {187}
	149 Move X8, 0xE9F000
	150 Move X8, [X8+1072]
	151 Move X0, [X8]
	152 Call 0x1C17F10
	153 Move X1, X22
	154 Move X2, X20
	155 Move X3, X21
	156 Move X4, X31
	157 Move X23, X0
	158 Call MonoMethodMessage..ctor, X0, X1, X2, X3
	159 Move X0, [X19+16]
	160 Add X2, X31, 8
	161 Add X3, X31, 16
	162 Move X1, X23
	163 Call RealProxy.PrivateInvoke, X0, X1, X2, X3
	164 Move X19, [X31+8]
	165 Compare X19, 0
	166 JumpIfNotEqual {204}
	167 Move X8, [X31+16]
	168 Compare X8, 0
	169 JumpIfEqual {182}
	170 Move W9, [X8+24]
	171 Compare W9, 0
	172 JumpIfEqual {183}
	173 Move X0, [X8+32]
	174 Move X20, [X31+64]
	175 Move X19, [X31+72]
	176 Move X22, [X31+48]
	177 Move X21, [X31+56]
	178 Move X30, [X31+32]
	179 Move X23, [X31+40]
	180 Add X31, X31, 80
	181 Return X0
	182 Call 0x1C17F20
	183 Call 0x1C17F28
	184 Call 0x1C17F44
	185 Move X1, X31
	186 Call 0x1C17DEC
	187 Move X0, 0xE97000
	188 Move X0, [X0+40]
	189 Call 0x1C17D08
	190 Call 0x1C17F10
	191 Move X19, X0
	192 Move X0, 0xE9F000
	193 Move X0, [X0+1080]
	194 Call 0x1C17D08
	195 Move X20, X0
	196 Move X0, 0xE9F000
	197 Move X0, [X0+600]
	198 Call 0x1C17D08
	199 Move X2, X0
	200 Move X0, X19
	201 Move X1, X20
	202 Move X3, X31
	203 Call MissingMethodException..ctor, X0, X1, X2
	204 Move X0, 0xE9F000
	205 Move X0, [X0+1088]
	206 Call 0x1C17D08
	207 Move X1, X0
	208 Move X0, X19
	209 Call 0x1C17DEC

Method: System.Void StoreRemoteField(System.IntPtr classPtr, System.IntPtr fieldPtr, System.Object arg)

Disassembly:
	0x03286BE8 ADD W9, W9, 0x3
	0x03286BEC ADD X8, X8, W9, 0x4, SXTW
	0x03286BF0 ADD X0, X8, 0x138
	0x03286BF4 LDP X8, X1, [X0]
	0x03286BF8 MOV X0, X21
	0x03286BFC BLR X8
	0x03286C00 LDR X8, [X23]
	0x03286C04 MOV X22, X0
	0x03286C08 LDR W9, [X8 + 0xE0]
	0x03286C0C CBNZ W9, 0x3286C1C
	0x03286C10 MOV X0, X8
	0x03286C14 BL 0x1C16DFC
	0x03286C18 LDR X8, [X23]
	0x03286C1C LDR X8, [X8 + 0xB8]
	0x03286C20 MOV X0, X22
	0x03286C24 MOV X2, X31
	0x03286C28 LDR X1, [X8 + 0x8]
	0x03286C2C BL 0x32CE12C
	0x03286C30 TBZ X0, 0x0, 0x3286C68
	0x03286C34 LDR X0, [X20 + 0x38]
	0x03286C38 CBZ X0, 0x3287098
	0x03286C3C LDR X8, [X0]
	0x03286C40 LDP X9, X1, [X8 + 0x158]
	0x03286C44 BLR X9
	0x03286C48 ADRP X8, 0xE6D000
	0x03286C4C LDR X8, [X8 + 0x758]
	0x03286C50 STR W0, [X31 + 0xC]
	0x03286C54 ADD X1, X31, 0xC
	0x03286C58 LDR X8, [X8]
	0x03286C5C MOV X0, X8
	0x03286C60 BL 0x1C16E04
	0x03286C64 B 0x3286D00
	0x03286C68 LDR X8, [X21]
	0x03286C6C LDR X1, [X24]
	0x03286C70 LDRH W9, [X8 + 0x12E]
	0x03286C74 CBZ X9, 0x3286C98
	0x03286C78 LDR X10, [X8 + 0xB0]
	0x03286C7C ADD X10, X10, 0x8
	0x03286C80 LDUR X11, [X10 - 0x8]
	0x03286C84 CMP X11, X1
	0x03286C88 B.EQ 0x3286CA8
	0x03286C8C SUBS X9, X9, 0x1
	0x03286C90 ADD X10, X10, 0x10
	0x03286C94 B.NE 0x3286C80
	0x03286C98 MOVZ W2, 0x3
	0x03286C9C MOV X0, X21
	0x03286CA0 BL 0x1C5C788
	0x03286CA4 B 0x3286CB8
	0x03286CA8 LDR W9, [X10]
	0x03286CAC ADD W9, W9, 0x3
	0x03286CB0 ADD X8, X8, W9, 0x4, SXTW
	0x03286CB4 ADD X0, X8, 0x138
	0x03286CB8 LDP X8, X1, [X0]
	0x03286CBC MOV X0, X21
	0x03286CC0 BLR X8
	0x03286CC4 LDR X8, [X23]
	0x03286CC8 MOV X22, X0
	0x03286CCC LDR W9, [X8 + 0xE0]
	0x03286CD0 CBNZ W9, 0x3286CE0
	0x03286CD4 MOV X0, X8
	0x03286CD8 BL 0x1C16DFC
	0x03286CDC LDR X8, [X23]
	0x03286CE0 LDR X8, [X8 + 0xB8]
	0x03286CE4 MOV X0, X22
	0x03286CE8 MOV X2, X31
	0x03286CEC LDR X1, [X8]
	0x03286CF0 BL 0x32CE12C
	0x03286CF4 TBZ X0, 0x0, 0x3286D38
	0x03286CF8 MOV X0, X20
	0x03286CFC BL 0x327F304
	0x03286D00 ADRP X8, 0xE9E000
	0x03286D04 LDR X8, [X8 + 0x4D0]
	0x03286D08 MOV X19, X0
	0x03286D0C LDR X8, [X8]
	0x03286D10 MOV X0, X8
	0x03286D14 BL 0x1C16F10
	0x03286D18 MOV X1, X19
	0x03286D1C MOV X2, X31
	0x03286D20 MOV X3, X31
	0x03286D24 MOV X4, X21
	0x03286D28 MOV X5, X31
	0x03286D2C MOV X22, X0
	0x03286D30 BL 0x329876C
	0x03286D34 B 0x3286FF0
	0x03286D38 ADRP X23, 0xE9E000
	0x03286D3C LDR X23, [X23 + 0x378]
	0x03286D40 MOV X0, X19
	0x03286D44 LDR X1, [X23]
	0x03286D48 BL 0x1C16E00
	0x03286D4C CBZ X0, 0x3286E7C
	0x03286D50 LDR X8, [X0]
	0x03286D54 LDR X1, [X23]
	0x03286D58 MOV X21, X0
	0x03286D5C LDRH W9, [X8 + 0x12E]
	0x03286D60 CBZ X9, 0x3286D84
	0x03286D64 LDR X10, [X8 + 0xB0]
	0x03286D68 ADD X10, X10, 0x8
	0x03286D6C LDUR X11, [X10 - 0x8]
	0x03286D70 CMP X11, X1
	0x03286D74 B.EQ 0x3286D94
	0x03286D78 SUBS X9, X9, 0x1
	0x03286D7C ADD X10, X10, 0x10
	0x03286D80 B.NE 0x3286D6C
	0x03286D84 MOVZ W2, 0x2
	0x03286D88 MOV X0, X21
	0x03286D8C BL 0x1C5C788
	0x03286D90 B 0x3286DA4
	0x03286D94 LDR W9, [X10]
	0x03286D98 ADD W9, W9, 0x2
	0x03286D9C ADD X8, X8, W9, 0x4, SXTW
	0x03286DA0 ADD X0, X8, 0x138
	0x03286DA4 LDP X8, X1, [X0]
	0x03286DA8 MOV X0, X21
	0x03286DAC BLR X8
	0x03286DB0 CBNZ X0, 0x3286E18
	0x03286DB4 LDR X8, [X21]
	0x03286DB8 LDR X22, [X20 + 0x30]
	0x03286DBC LDR X1, [X23]
	0x03286DC0 LDRH W9, [X8 + 0x12E]
	0x03286DC4 CBZ X9, 0x3286DE8
	0x03286DC8 LDR X10, [X8 + 0xB0]
	0x03286DCC ADD X10, X10, 0x8
	0x03286DD0 LDUR X11, [X10 - 0x8]
	0x03286DD4 CMP X11, X1
	0x03286DD8 B.EQ 0x3286DF8
	0x03286DDC SUBS X9, X9, 0x1
	0x03286DE0 ADD X10, X10, 0x10
	0x03286DE4 B.NE 0x3286DD0
	0x03286DE8 MOVZ W2, 0x3
	0x03286DEC MOV X0, X21
	0x03286DF0 BL 0x1C5C788
	0x03286DF4 B 0x3286E08
	0x03286DF8 LDR W9, [X10]
	0x03286DFC ADD W9, W9, 0x3
	0x03286E00 ADD X8, X8, W9, 0x4, SXTW
	0x03286E04 ADD X0, X8, 0x138
	0x03286E08 LDP X8, X2, [X0]
	0x03286E0C MOV X0, X21
	0x03286E10 MOV X1, X22
	0x03286E14 BLR X8
	0x03286E18 LDR X8, [X21]
	0x03286E1C LDR X22, [X20 + 0x38]
	0x03286E20 LDR X1, [X23]
	0x03286E24 LDRH W9, [X8 + 0x12E]
	0x03286E28 CBZ X9, 0x3286E4C
	0x03286E2C LDR X10, [X8 + 0xB0]
	0x03286E30 ADD X10, X10, 0x8
	0x03286E34 LDUR X11, [X10 - 0x8]
	0x03286E38 CMP X11, X1
	0x03286E3C B.EQ 0x3286E5C
	0x03286E40 SUBS X9, X9, 0x1
	0x03286E44 ADD X10, X10, 0x10
	0x03286E48 B.NE 0x3286E34
	0x03286E4C MOVZ W2, 0x1
	0x03286E50 MOV X0, X21
	0x03286E54 BL 0x1C5C788
	0x03286E58 B 0x3286E6C
	0x03286E5C LDR W9, [X10]
	0x03286E60 ADD W9, W9, 0x1
	0x03286E64 ADD X8, X8, W9, 0x4, SXTW
	0x03286E68 ADD X0, X8, 0x138
	0x03286E6C LDP X8, X2, [X0]
	0x03286E70 MOV X0, X21
	0x03286E74 MOV X1, X22
	0x03286E78 BLR X8
	0x03286E7C LDR X0, [X20 + 0x38]
	0x03286E80 CBZ X0, 0x3287098
	0x03286E84 MOVZ W1, 0x1
	0x03286E88 MOVZ W3, 0x1
	0x03286E8C MOV X2, X19
	0x03286E90 MOV W4, W31
	0x03286E94 BL 0x32733D8
	0x03286E98 MOV X0, X31
	0x03286E9C BL 0x33E6FB0
	0x03286EA0 CBZ X0, 0x3287098
	0x03286EA4 BL 0x328709C
	0x03286EA8 TBZ X0, 0x0, 0x3286EB4
	0x03286EAC LDRB W8, [X20 + 0x58]
	0x03286EB0 CBZ W8, 0x3286F50

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X23, 0x1157000
	009 Move W8, [X23+1622]
	010 Move X20, X3
	011 Move X21, X2
	012 Move X22, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {35}
	018 Move X0, 0xE9F000
	019 Move X0, [X0+1072]
	020 Call 0x1C17CF4
	021 Move X0, 0xE6E000
	022 Move X0, [X0+2512]
	023 Call 0x1C17CF4
	024 Move X0, 0xE78000
	025 Move X0, [X0+2408]
	026 Call 0x1C17CF4
	027 Move X0, 0xE6E000
	028 Move X0, [X0+1728]
	029 Call 0x1C17CF4
	030 Move X0, 0xE9F000
	031 Move X0, [X0+584]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X23+1622], W8
	035 Add X0, X31, 24
	036 Move X1, X22
	037 Move X2, X31
	038 Move [X31+16], X31
	039 Move [X31+24], X31
	040 Move [X31+8], X31
	041 Call RuntimeClassHandle..ctor, X0, X1
	042 Add X0, X31, 24
	043 Move X1, X31
	044 Call RuntimeClassHandle.GetTypeHandle, X0
	045 Move X22, X0
	046 Move X0, X21
	047 Move X1, X31
	048 Call FieldInfo.GetFieldFromHandle, X0
	049 Move X21, X0
	050 Move X0, X19
	051 Call TransparentProxy.InCurrentContext, X0
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {66}
	056 Move X8, [X19+16]
	057 Compare X8, 0
	058 JumpIfEqual {181}
	059 Compare X21, 0
	060 JumpIfEqual {181}
	061 Move X1, [X8+32]
	062 Move X0, X21
	063 Move X2, X20
	064 Move X3, X31
	065 Call FieldInfo.SetValue, X0, X1, X2
	066 Move X8, 0xE6E000
	067 Move X8, [X8+1728]
	068 Move X0, [X8]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move X0, X22
	074 Move X1, X31
	075 Call Type.GetTypeFromHandle, X0
	076 Compare X0, 0
	077 JumpIfEqual {181}
	078 Move X8, [X0]
	079 Move X9, [X8+744]
	080 Move X1, [X8+752]
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Compare X21, 0
	083 JumpIfEqual {181}
	084 Move X8, [X21]
	085 Move X23, X0
	086 Move X0, X21
	087 Move X9, [X8+424]
	088 Move X1, [X8+432]
	089 NotImplemented "Instruction BLR not yet implemented."
	090 Move X8, 0xE6E000
	091 Move X8, [X8+2512]
	092 Move X22, X0
	093 Move W1, 3
	094 Move X8, [X8]
	095 Move X0, X8
	096 Call 0x1C17D6C
	097 Compare X0, 0
	098 JumpIfEqual {181}
	099 Move X21, X0
	100 Compare X23, 0
	101 JumpIfEqual {108}
	102 Move X8, [X21]
	103 Move X0, X23
	104 Move X1, [X8+64]
	105 Call 0x1C17E00
	106 Compare X0, 0
	107 JumpIfEqual {183}
	108 Move W8, [X21+24]
	109 Compare W8, 0
	110 JumpIfEqual {182}
	111 Move [X21+32], X23
	112 Compare X22, 0
	113 JumpIfEqual {121}
	114 Move X8, [X21]
	115 Move X0, X22
	116 Move X1, [X8+64]
	117 Call 0x1C17E00
	118 Compare X0, 0
	119 JumpIfEqual {183}
	120 Move W8, [X21+24]
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move [X21+40], X22
	123 Compare X20, 0
	124 JumpIfEqual {132}
	125 Move X8, [X21]
	126 Move X0, X20
	127 Move X1, [X8+64]
	128 Call 0x1C17E00
	129 Compare X0, 0
	130 JumpIfEqual {183}
	131 Move W8, [X21+24]
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move [X21+48], X20
	134 Move X8, 0xE78000
	135 Move X8, [X8+2408]
	136 Move X1, X31
	137 Move X0, [X8]
	138 Call Type.GetTypeFromHandle, X0
	139 Compare X0, 0
	140 JumpIfEqual {181}
	141 Move X8, 0xE9F000
	142 Move X8, [X8+584]
	143 Move W2, 36
	144 Move X3, X31
	145 Move X1, [X8]
	146 Call Type.GetMethod, X0, X1, X2
	147 Move X1, X31
	148 Move X2, X31
	149 Move X20, X0
	150 Call MethodInfo.op_Equality, X0, X1
	151 Move TEMP, X0
	152 And TEMP, TEMP, 1
	153 Compare TEMP, 1
	154 JumpIfEqual {186}
	155 Move X8, 0xE9F000
	156 Move X8, [X8+1072]
	157 Move X0, [X8]
	158 Call 0x1C17F10
	159 Move X1, X20
	160 Move X2, X21
	161 Move X3, X31
	162 Move X4, X31
	163 Move X22, X0
	164 Call MonoMethodMessage..ctor, X0, X1, X2, X3
	165 Move X0, [X19+16]
	166 Add X2, X31, 8
	167 Add X3, X31, 16
	168 Move X1, X22
	169 Call RealProxy.PrivateInvoke, X0, X1, X2, X3
	170 Move X19, [X31+8]
	171 Compare X19, 0
	172 JumpIfNotEqual {203}
	173 Move X20, [X31+64]
	174 Move X19, [X31+72]
	175 Move X22, [X31+48]
	176 Move X21, [X31+56]
	177 Move X30, [X31+32]
	178 Move X23, [X31+40]
	179 Add X31, X31, 80
	180 Return 
	181 Call 0x1C17F20
	182 Call 0x1C17F28
	183 Call 0x1C17F44
	184 Move X1, X31
	185 Call 0x1C17DEC
	186 Move X0, 0xE97000
	187 Move X0, [X0+40]
	188 Call 0x1C17D08
	189 Call 0x1C17F10
	190 Move X19, X0
	191 Move X0, 0xE9F000
	192 Move X0, [X0+1080]
	193 Call 0x1C17D08
	194 Move X20, X0
	195 Move X0, 0xE9F000
	196 Move X0, [X0+584]
	197 Call 0x1C17D08
	198 Move X2, X0
	199 Move X0, X19
	200 Move X1, X20
	201 Move X3, X31
	202 Call MissingMethodException..ctor, X0, X1, X2
	203 Move X0, 0xE9F000
	204 Move X0, [X0+1136]
	205 Call 0x1C17D08
	206 Move X1, X0
	207 Move X0, X19
	208 Call 0x1C17DEC

Method: System.Void .ctor()

Disassembly:
	0x03286EB4 LDR X21, [X20 + 0x50]
	0x03286EB8 CBZ X19, 0x3286F68

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

