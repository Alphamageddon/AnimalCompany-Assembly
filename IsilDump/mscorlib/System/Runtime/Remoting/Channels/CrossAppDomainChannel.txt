Type: System.Runtime.Remoting.Channels.CrossAppDomainChannel

Method: System.Void RegisterCrossAppDomainChannel()

Disassembly:
	0x032833E4 MOV X21, X0
	0x032833E8 LDRB W8, [X31 + 0xC]
	0x032833EC CBZ W8, 0x32833FC
	0x032833F0 MOV X0, X20
	0x032833F4 MOV X1, X31
	0x032833F8 BL 0x33E14E4
	0x032833FC CBNZ X22, 0x3283408
	0x03283400 MOV X0, X21
	0x03283404 BL 0x1D2C690
	0x03283408 MOV X0, X22
	0x0328340C BL 0x1C16F18
	0x03283410 BL 0x1990590
	0x03283414 LDR X0, [X0 + 0x50]
	0x03283418 RET
	0x0328341C STR X1, [X0 + 0x70]
	0x03283420 RET
	0x03283424 STP X30, X21, [X31 - 0x20]!
	0x03283428 STP X20, X19, [X31 + 0x10]
	0x0328342C ADRP X21, 0x1159000
	0x03283430 ADRP X20, 0xEA0000
	0x03283434 LDRB W8, [X21 + 0x630]
	0x03283438 LDR X20, [X20 + 0xE68]
	0x0328343C MOV X19, X0
	0x03283440 TBNZ X8, 0x0, 0x3283458
	0x03283444 ADRP X0, 0xEA0000
	0x03283448 LDR X0, [X0 + 0xE68]
	0x0328344C BL 0x1C16CF4
	0x03283450 MOVZ W8, 0x1
	0x03283454 STRB W8, [X21 + 0x630]
	0x03283458 MOV X0, X19
	0x0328345C BL 0x3282CD4
	0x03283460 LDR X0, [X20]
	0x03283464 LDR W8, [X0 + 0xE0]
	0x03283468 CBNZ W8, 0x3283470
	0x0328346C BL 0x1C16DFC
	0x03283470 MOV X0, X19
	0x03283474 LDP X20, X19, [X31 + 0x10]
	0x03283478 LDP X30, X21, [X31], #0x20
	0x0328347C B 0x3281154
	0x03283480 STP X30, X21, [X31 - 0x20]!
	0x03283484 STP X20, X19, [X31 + 0x10]
	0x03283488 ADRP X20, 0x1159000
	0x0328348C LDRB W8, [X20 + 0x631]
	0x03283490 MOV X19, X1
	0x03283494 MOV X21, X0
	0x03283498 TBNZ X8, 0x0, 0x32834B0
	0x0328349C ADRP X0, 0xEA1000
	0x032834A0 LDR X0, [X0 + 0x3B8]
	0x032834A4 BL 0x1C16CF4
	0x032834A8 MOVZ W8, 0x1
	0x032834AC STRB W8, [X20 + 0x631]
	0x032834B0 LDR X20, [X21 + 0x58]
	0x032834B4 CBNZ X20, 0x32834EC
	0x032834B8 LDR X0, [X21 + 0x60]
	0x032834BC CBZ X0, 0x3283558
	0x032834C0 LDR X8, [X21 + 0x70]
	0x032834C4 MOVZ W9, 0x50
	0x032834C8 CMP X8, 0x0
	0x032834CC MOVZ W8, 0x70
	0x032834D0 CSEL X8, X8, X9, NE
	0x032834D4 LDR X1, [X21, X8, LSL]
	0x032834D8 CSET W2, NE
	0x032834DC BL 0x328355C
	0x032834E0 MOV X20, X0
	0x032834E4 STR X0, [X21 + 0x58]
	0x032834E8 CBZ X0, 0x3283558
	0x032834EC ADRP X10, 0xEA1000
	0x032834F0 LDR X8, [X20]
	0x032834F4 LDR X10, [X10 + 0x3B8]
	0x032834F8 LDRH W9, [X8 + 0x12E]
	0x032834FC LDR X1, [X10]
	0x03283500 CBZ X9, 0x3283524
	0x03283504 LDR X10, [X8 + 0xB0]
	0x03283508 ADD X10, X10, 0x8
	0x0328350C LDUR X11, [X10 - 0x8]
	0x03283510 CMP X11, X1
	0x03283514 B.EQ 0x3283534

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x115A000
	007 Move X20, 0xEA2000
	008 Move W8, [X19+1704]
	009 Move X20, [X20+608]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xEA1000
	015 Move X0, [X0+3336]
	016 Call 0x1C17CF4
	017 Move X0, 0xEA2000
	018 Move X0, [X0+608]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X19+1704], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X20]
	028 Move X8, [X0+184]
	029 Move X19, [X8]
	030 Move [X31+12], W31
	031 Add X1, X31, 12
	032 Move X0, X19
	033 Move X2, X31
	034 Call Monitor.Enter, X0, X1
	035 Move X0, [X20]
	036 Call 0x1C17F10
	037 Move X20, X0
	038 Move X1, X31
	039 Call Object..ctor, X0
	040 Move X8, 0xEA1000
	041 Move X8, [X8+3336]
	042 Move X0, [X8]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X0, X20
	048 Call ChannelServices.RegisterChannel, X0
	049 Move X20, X31
	050 Move W8, [X31+12]
	051 Compare W8, 0
	052 JumpIfEqual {56}
	053 Move X0, X19
	054 Move X1, X31
	055 Call Monitor.Exit, X0
	056 Compare X20, 0
	057 JumpIfNotEqual {64}
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X30, [X31+16]
	061 Move X21, [X31+24]
	062 Add X31, X31, 48
	063 Return 
	064 Move X0, X20
	065 Call 0x1C17F18
	066 Move X21, X0
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X0, X21
	069 Call 0x3EB2AD0
	070 Move X20, [X0]
	071 Call 0x3EB2AE0
	072 Move X20, X31
	073 Move X21, X0
	074 Move W8, [X31+12]
	075 Compare W8, 0
	076 JumpIfEqual {80}
	077 Move X0, X19
	078 Move X1, X31
	079 Call Monitor.Exit, X0
	080 Compare X20, 0
	081 JumpIfNotEqual {84}
	082 Move X0, X21
	083 Call 0x1D2D690
	084 Move X0, X20
	085 Call 0x1C17F18
	086 Call 0x1991590

Method: System.String get_ChannelName()

Disassembly:
	0x0328E4E8 ADRP X21, 0xE91000
	0x0328E4EC LDRB W8, [X20 + 0x6C0]
	0x0328E4F0 LDR X21, [X21 + 0xD0]
	0x0328E4F4 MOV X19, X0
	0x0328E4F8 TBNZ X8, 0x0, 0x328E510
	0x0328E4FC ADRP X0, 0xE91000
	0x0328E500 LDR X0, [X0 + 0xD0]
	0x0328E504 BL 0x1C16CF4
	0x0328E508 MOVZ W8, 0x1
	0x0328E50C STRB W8, [X20 + 0x6C0]
	0x0328E510 LDR X0, [X21]
	0x0328E514 BL 0x1C16F10
	0x0328E518 MOV X1, X31
	0x0328E51C MOV X20, X0
	0x0328E520 BL 0x32B0928
	0x0328E524 CBZ X20, 0x328E560

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x114F000
	005 Move X20, 0xE97000
	006 Move W8, [X19+1705]
	007 Move X20, [X20+1680]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xE97000
	013 Move X0, [X0+1680]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1705], W8
	017 Move X0, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Return X0

Method: System.Int32 get_ChannelPriority()

Disassembly:
	0x0328E528 STR X31, [X20 + 0x10]
	0x0328E52C CBZ X19, 0x328E560

ISIL:
	001 Move W0, 100
	002 Return X0

Method: System.Object get_ChannelData()

Disassembly:
	0x0328E530 LDR X8, [X19]
	0x0328E534 MOV X0, X19
	0x0328E538 MOV X1, X31
	0x0328E53C LDR X9, [X8 + 0x208]
	0x0328E540 LDR X2, [X8 + 0x210]
	0x0328E544 BLR X9
	0x0328E548 MOV X0, X20
	0x0328E54C MOV X1, X19
	0x0328E550 LDP X20, X19, [X31 + 0x10]
	0x0328E554 MOV X2, X31
	0x0328E558 LDP X30, X21, [X31], #0x20
	0x0328E55C B 0x32B09A8
	0x0328E560 BL 0x1C16F20
	0x0328E564 STP X30, X23, [X31 - 0x30]!
	0x0328E568 STP X22, X21, [X31 + 0x10]
	0x0328E56C STP X20, X19, [X31 + 0x20]
	0x0328E570 ADRP X20, 0x114E000
	0x0328E574 ADRP X23, 0xE6D000
	0x0328E578 ADRP X21, 0xE91000
	0x0328E57C ADRP X22, 0xE96000
	0x0328E580 LDRB W8, [X20 + 0x6BF]
	0x0328E584 LDR X23, [X23 + 0x558]
	0x0328E588 LDR X21, [X21 + 0xD0]
	0x0328E58C LDR X22, [X22 + 0x238]
	0x0328E590 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x114F000
	005 Move X19, 0xE96000
	006 Move W8, [X20+1706]
	007 Move X19, [X19+3528]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xE96000
	013 Move X0, [X0+3528]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1706], W8
	017 Move X0, X31
	018 Call Thread.GetDomainID
	019 Move X8, [X19]
	020 Move W19, W0
	021 Move X0, X8
	022 Call 0x1C17F10
	023 Move W1, W19
	024 Move X20, X0
	025 Call CrossAppDomainData..ctor, X0, X1
	026 Move X0, X20
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Return X0

Method: System.Void StartListening(System.Object data)

Disassembly:
	0x0328E594 TBNZ X8, 0x0, 0x328E5C4

ISIL:
	001 Return 

Method: System.Runtime.Remoting.Messaging.IMessageSink CreateMessageSink(System.String url, System.Object data, out System.String uri)

Disassembly:
	0x0328E598 ADRP X0, 0xE91000
	0x0328E59C LDR X0, [X0 + 0xD0]
	0x0328E5A0 BL 0x1C16CF4
	0x0328E5A4 ADRP X0, 0xE6D000
	0x0328E5A8 LDR X0, [X0 + 0x558]
	0x0328E5AC BL 0x1C16CF4
	0x0328E5B0 ADRP X0, 0xE96000
	0x0328E5B4 LDR X0, [X0 + 0x238]
	0x0328E5B8 BL 0x1C16CF4
	0x0328E5BC MOVZ W8, 0x1
	0x0328E5C0 STRB W8, [X20 + 0x6BF]
	0x0328E5C4 LDR X0, [X23]
	0x0328E5C8 BL 0x1C16F10
	0x0328E5CC MOV X1, X31
	0x0328E5D0 MOV X20, X0
	0x0328E5D4 BL 0x32E23B4
	0x0328E5D8 LDR X0, [X21]
	0x0328E5DC BL 0x1C16F10
	0x0328E5E0 MOV X1, X31
	0x0328E5E4 MOV X21, X0
	0x0328E5E8 BL 0x32B0928
	0x0328E5EC LDR X0, [X22]
	0x0328E5F0 BL 0x1C16F10
	0x0328E5F4 MOV X1, X31
	0x0328E5F8 MOV X22, X0
	0x0328E5FC BL 0x33BDD8C
	0x0328E600 CBZ X21, 0x328E64C
	0x0328E604 MOV X0, X21
	0x0328E608 MOV X1, X20
	0x0328E60C MOV X2, X19
	0x0328E610 MOV X3, X31
	0x0328E614 STR X22, [X21 + 0x10]
	0x0328E618 BL 0x32B10F4
	0x0328E61C CBZ X20, 0x328E64C
	0x0328E620 LDR X8, [X20]
	0x0328E624 MOV X0, X20
	0x0328E628 MOV X1, X31
	0x0328E62C LDR X9, [X8 + 0x208]
	0x0328E630 LDR X2, [X8 + 0x210]
	0x0328E634 BLR X9
	0x0328E638 MOV X0, X20
	0x0328E63C LDP X20, X19, [X31 + 0x20]
	0x0328E640 LDP X22, X21, [X31 + 0x10]
	0x0328E644 LDP X30, X23, [X31], #0x30
	0x0328E648 RET
	0x0328E64C BL 0x1C16F20
	0x0328E650 STP X30, X21, [X31 - 0x20]!
	0x0328E654 STP X20, X19, [X31 + 0x10]
	0x0328E658 MOV X20, X1
	0x0328E65C MOV X1, X31
	0x0328E660 MOV X19, X2
	0x0328E664 MOV X21, X0
	0x0328E668 BL 0x33BDD8C
	0x0328E66C STP X19, X20, [X21 + 0x10]
	0x0328E670 LDP X20, X19, [X31 + 0x10]
	0x0328E674 LDP X30, X21, [X31], #0x20
	0x0328E678 RET
	0x0328E67C STP X30, X23, [X31 - 0x30]!
	0x0328E680 STP X22, X21, [X31 + 0x10]
	0x0328E684 STP X20, X19, [X31 + 0x20]
	0x0328E688 ADRP X23, 0x114E000
	0x0328E68C ADRP X22, 0xE92000
	0x0328E690 ADRP X21, 0xE95000
	0x0328E694 LDRB W8, [X23 + 0x6C1]
	0x0328E698 LDR X22, [X22 + 0xBA0]
	0x0328E69C LDR X21, [X21 + 0xDB8]
	0x0328E6A0 MOV X20, X1
	0x0328E6A4 MOV X19, X0
	0x0328E6A8 TBNZ X8, 0x0, 0x328E6CC
	0x0328E6AC ADRP X0, 0xE92000
	0x0328E6B0 LDR X0, [X0 + 0xBA0]
	0x0328E6B4 BL 0x1C16CF4
	0x0328E6B8 ADRP X0, 0xE95000
	0x0328E6BC LDR X0, [X0 + 0xDB8]
	0x0328E6C0 BL 0x1C16CF4
	0x0328E6C4 MOVZ W8, 0x1
	0x0328E6C8 STRB W8, [X23 + 0x6C1]
	0x0328E6CC MOV X0, X19
	0x0328E6D0 MOV X1, X31
	0x0328E6D4 BL 0x33BDD8C
	0x0328E6D8 STR X20, [X19 + 0x10]
	0x0328E6DC LDR X0, [X22]
	0x0328E6E0 BL 0x1C16F10
	0x0328E6E4 MOV X1, X31
	0x0328E6E8 MOV X20, X0
	0x0328E6EC BL 0x3351F5C
	0x0328E6F0 STR X20, [X19 + 0x18]
	0x0328E6F4 LDR X0, [X21]
	0x0328E6F8 BL 0x1C16F10
	0x0328E6FC MOV X1, X31
	0x0328E700 MOV X20, X0
	0x0328E704 BL 0x335A0A0
	0x0328E708 STR X20, [X19 + 0x20]
	0x0328E70C LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x114F000
	007 Move W8, [X22+1707]
	008 Move X21, X3
	009 Move X19, X2
	010 Move X20, X1
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0xE96000
	016 Move X0, [X0+3528]
	017 Call 0x1C17CF4
	018 Move X0, 0xE97000
	019 Move X0, [X0+856]
	020 Call 0x1C17CF4
	021 Move X0, 0xE96000
	022 Move X0, [X0+3552]
	023 Call 0x1C17CF4
	024 Move X0, 0xE97000
	025 Move X0, [X0+1680]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+1707], W8
	029 Move [X21], X31
	030 Compare X19, 0
	031 JumpIfEqual {74}
	032 Move X8, 0xE96000
	033 Move X8, [X8+3528]
	034 Move X9, [X19]
	035 Move X8, [X8]
	036 Move W11, [X9+304]
	037 Move W10, [X8+304]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X9, [X9+200]
	040 Add X9, X9, X10
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X8, 0xE96000
	044 Move X8, [X8+3552]
	045 Move X21, [X19+32]
	046 Move X0, [X8]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Call RemotingConfiguration.get_ProcessId
	052 Move X1, X0
	053 Move X0, X21
	054 Move X2, X31
	055 Call String.op_Equality, X0, X1
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {74}
	060 Move X8, 0xE97000
	061 Move X8, [X8+856]
	062 Move W19, [X19+24]
	063 Move X0, [X8]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Move W0, W19
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move X22, [X31+16]
	072 Move X21, [X31+24]
	073 Move X30, [X31+48]
	074 Compare X20, 0
	075 JumpIfEqual {86}
	076 Move X8, 0xE97000
	077 Move X8, [X8+1680]
	078 Move X0, X20
	079 Move X2, X31
	080 Move X1, [X8]
	081 Call String.StartsWith, X0, X1
	082 Move TEMP, X0
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfEqual {93}
	086 Move X20, [X31+32]
	087 Move X19, [X31+40]
	088 Move X22, [X31+16]
	089 Move X21, [X31+24]
	090 Move X0, X31
	091 Move X30, [X31+48]
	092 Return X0
	093 Move X0, 0xE66000
	094 Move X0, [X0+2880]
	095 Call 0x1C17D08
	096 Call 0x1C17F10
	097 Move X19, X0
	098 Move X0, 0xE97000
	099 Move X0, [X0+1688]
	100 Call 0x1C17D08
	101 Move X1, X0
	102 Move X0, X19
	103 Move X2, X31
	104 Call NotSupportedException..ctor, X0, X1
	105 Move X0, 0xE97000
	106 Move X0, [X0+1696]
	107 Call 0x1C17D08
	108 Move X1, X0
	109 Move X0, X19
	110 Call 0x1C17DEC

Method: System.Void .ctor()

Disassembly:
	0x0328E4E0 STP X20, X19, [X31 + 0x10]
	0x0328E4E4 ADRP X20, 0x114E000

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void .cctor()

Disassembly:
	0x0328E9A0 ADD X10, X10, 0x10
	0x0328E9A4 B.NE 0x328E990
	0x0328E9A8 MOV X0, X21
	0x0328E9AC MOV W2, W31
	0x0328E9B0 BL 0x1C5C788
	0x0328E9B4 B 0x328E9C4
	0x0328E9B8 LDRSW X9, [X10]
	0x0328E9BC ADD X8, X8, X9, 0x4, LSL
	0x0328E9C0 ADD X0, X8, 0x138
	0x0328E9C4 LDP X8, X2, [X0]
	0x0328E9C8 MOV X0, X21
	0x0328E9CC MOV X1, X20
	0x0328E9D0 BLR X8
	0x0328E9D4 B 0x328E84C
	0x0328E9D8 BL 0x1C16F20
	0x0328E9DC MOV X0, X21
	0x0328E9E0 MOV X1, X22
	0x0328E9E4 BL 0x1C171E0
	0x0328E9E8 MOV X0, X21
	0x0328E9EC MOV X1, X24
	0x0328E9F0 BL 0x1C171E0
	0x0328E9F4 STP X30, X21, [X31 - 0x20]!
	0x0328E9F8 STP X20, X19, [X31 + 0x10]
	0x0328E9FC ADRP X20, 0x114E000
	0x0328EA00 LDRB W8, [X20 + 0x6C4]
	0x0328EA04 MOV X19, X0
	0x0328EA08 TBNZ X8, 0x0, 0x328EA2C
	0x0328EA0C ADRP X0, 0xE96000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x114F000
	006 Move X21, 0xE6C000
	007 Move X20, 0xE97000
	008 Move W8, [X19+1708]
	009 Move X21, [X21+3264]
	010 Move X20, [X20+608]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xE97000
	016 Move X0, [X0+608]
	017 Call 0x1C17CF4
	018 Move X0, 0xE6C000
	019 Move X0, [X0+3264]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+1708], W8
	023 Move X0, [X21]
	024 Call 0x1C17F10
	025 Move X1, X31
	026 Move X19, X0
	027 Call Object..ctor, X0
	028 Move X8, [X20]
	029 Move X8, [X8+184]
	030 Move [X8], X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 

