Type: System.Runtime.Remoting.Channels.CrossAppDomainSink

Method: System.Void .ctor(System.Int32 domainID)

Disassembly:
	0x0328EA10 LDR X0, [X0 + 0x6F0]
	0x0328EA14 BL 0x1C16CF4
	0x0328EA18 ADRP X0, 0xE96000
	0x0328EA1C LDR X0, [X0 + 0x5D8]
	0x0328EA20 BL 0x1C16CF4
	0x0328EA24 MOVZ W8, 0x1
	0x0328EA28 STRB W8, [X20 + 0x6C4]
	0x0328EA2C CBZ X19, 0x328EB18
	0x0328EA30 ADRP X10, 0xE96000
	0x0328EA34 LDR X8, [X19]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Runtime.Remoting.Channels.CrossAppDomainSink GetSink(System.Int32 domainID)

Disassembly:
	0x0328E710 LDP X22, X21, [X31 + 0x10]
	0x0328E714 LDP X30, X23, [X31], #0x30
	0x0328E718 RET
	0x0328E71C LDR X0, [X0 + 0x18]
	0x0328E720 RET
	0x0328E724 LDR X0, [X0 + 0x20]
	0x0328E728 RET
	0x0328E72C STR X30, [X31 - 0x20]!
	0x0328E730 STP X20, X19, [X31 + 0x10]
	0x0328E734 ADRP X19, 0x114E000
	0x0328E738 ADRP X20, 0xE96000
	0x0328E73C LDRB W8, [X19 + 0x6C2]
	0x0328E740 LDR X20, [X20 + 0x6E0]
	0x0328E744 TBNZ X8, 0x0, 0x328E768
	0x0328E748 ADRP X0, 0xE96000
	0x0328E74C LDR X0, [X0 + 0x6E0]
	0x0328E750 BL 0x1C16CF4
	0x0328E754 ADRP X0, 0xE96000
	0x0328E758 LDR X0, [X0 + 0x6E8]
	0x0328E75C BL 0x1C16CF4
	0x0328E760 MOVZ W8, 0x1
	0x0328E764 STRB W8, [X19 + 0x6C2]
	0x0328E768 LDR X8, [X20]
	0x0328E76C LDR X8, [X8 + 0xB8]
	0x0328E770 LDR X0, [X8]
	0x0328E774 CBNZ X0, 0x328E7AC
	0x0328E778 ADRP X8, 0xE96000
	0x0328E77C LDR X8, [X8 + 0x6E8]
	0x0328E780 LDR X0, [X8]
	0x0328E784 BL 0x1C16F10
	0x0328E788 MOV X1, X31
	0x0328E78C MOV X19, X0
	0x0328E790 BL 0x33BDD8C
	0x0328E794 LDR X8, [X20]
	0x0328E798 LDR X8, [X8 + 0xB8]
	0x0328E79C STR X19, [X8]
	0x0328E7A0 LDR X8, [X20]
	0x0328E7A4 LDR X8, [X8 + 0xB8]
	0x0328E7A8 LDR X0, [X8]
	0x0328E7AC LDP X20, X19, [X31 + 0x10]
	0x0328E7B0 LDR X30, [X31], #0x20
	0x0328E7B4 RET
	0x0328E7B8 MOV X1, X31
	0x0328E7BC B 0x33BDD8C
	0x0328E7C0 STR X30, [X31 - 0x40]!
	0x0328E7C4 STP X24, X23, [X31 + 0x10]
	0x0328E7C8 STP X22, X21, [X31 + 0x20]
	0x0328E7CC STP X20, X19, [X31 + 0x30]
	0x0328E7D0 ADRP X21, 0x114E000
	0x0328E7D4 LDRB W8, [X21 + 0x6C3]
	0x0328E7D8 MOV X20, X1
	0x0328E7DC MOV X19, X0
	0x0328E7E0 TBNZ X8, 0x0, 0x328E81C
	0x0328E7E4 ADRP X0, 0xE96000
	0x0328E7E8 LDR X0, [X0 + 0x450]
	0x0328E7EC BL 0x1C16CF4
	0x0328E7F0 ADRP X0, 0xE96000
	0x0328E7F4 LDR X0, [X0 + 0x3B8]
	0x0328E7F8 BL 0x1C16CF4
	0x0328E7FC ADRP X0, 0xE96000
	0x0328E800 LDR X0, [X0 + 0x460]
	0x0328E804 BL 0x1C16CF4
	0x0328E808 ADRP X0, 0xE95000
	0x0328E80C LDR X0, [X0 + 0xE68]
	0x0328E810 BL 0x1C16CF4
	0x0328E814 MOVZ W8, 0x1
	0x0328E818 STRB W8, [X21 + 0x6C3]
	0x0328E81C CBZ X20, 0x328E9D8
	0x0328E820 MOV X0, X31
	0x0328E824 STR X19, [X20 + 0x98]
	0x0328E828 BL 0x33E6FB0
	0x0328E82C CBZ X0, 0x328E9D8
	0x0328E830 MOV X1, X31
	0x0328E834 BL 0x328709C
	0x0328E838 TBZ X0, 0x0, 0x328E844
	0x0328E83C LDRB W8, [X20 + 0x90]
	0x0328E840 CBZ W8, 0x328E954
	0x0328E844 MOV X0, X20
	0x0328E848 BL 0x328E9F4
	0x0328E84C ADRP X24, 0xE96000
	0x0328E850 LDR X24, [X24 + 0x450]
	0x0328E854 MOV X21, X0
	0x0328E858 LDR X1, [X24]
	0x0328E85C BL 0x1C16E00
	0x0328E860 CBZ X0, 0x328E93C
	0x0328E864 CBZ X21, 0x328E9D8
	0x0328E868 LDR X22, [X24]
	0x0328E86C MOV X0, X21
	0x0328E870 MOV X1, X22
	0x0328E874 BL 0x1C16E00
	0x0328E878 CBZ X0, 0x328E9DC
	0x0328E87C ADRP X8, 0xE96000
	0x0328E880 LDR X8, [X8 + 0x460]
	0x0328E884 LDR X24, [X24]
	0x0328E888 MOV X0, X21
	0x0328E88C LDR X23, [X8]
	0x0328E890 MOV X1, X24
	0x0328E894 BL 0x1C16E00
	0x0328E898 CBZ X0, 0x328E9E8
	0x0328E89C LDR X8, [X0]
	0x0328E8A0 MOV X22, X0
	0x0328E8A4 LDRH W9, [X8 + 0x12E]
	0x0328E8A8 CBZ X9, 0x328E8CC
	0x0328E8AC LDR X10, [X8 + 0xB0]
	0x0328E8B0 ADD X10, X10, 0x8
	0x0328E8B4 LDUR X11, [X10 - 0x8]
	0x0328E8B8 CMP X11, X23
	0x0328E8BC B.EQ 0x328E8E0
	0x0328E8C0 SUBS X9, X9, 0x1
	0x0328E8C4 ADD X10, X10, 0x10
	0x0328E8C8 B.NE 0x328E8B4
	0x0328E8CC MOV X0, X22
	0x0328E8D0 MOV X1, X23
	0x0328E8D4 MOV W2, W31
	0x0328E8D8 BL 0x1C5C788
	0x0328E8DC B 0x328E8EC
	0x0328E8E0 LDRSW X9, [X10]
	0x0328E8E4 ADD X8, X8, X9, 0x4, LSL
	0x0328E8E8 ADD X0, X8, 0x138
	0x0328E8EC LDP X8, X1, [X0]
	0x0328E8F0 MOV X0, X22
	0x0328E8F4 BLR X8
	0x0328E8F8 CBNZ X0, 0x328E93C
	0x0328E8FC CBZ X19, 0x328E9D8
	0x0328E900 LDR X8, [X19 + 0x38]
	0x0328E904 CBNZ X8, 0x328E93C
	0x0328E908 ADRP X8, 0xE95000
	0x0328E90C LDR X8, [X8 + 0xE68]
	0x0328E910 LDR X0, [X8]
	0x0328E914 LDR W8, [X0 + 0xE0]
	0x0328E918 CBNZ W8, 0x328E920
	0x0328E91C BL 0x1C16DFC
	0x0328E920 MOV X0, X20
	0x0328E924 MOV X1, X31
	0x0328E928 BL 0x3282518
	0x0328E92C MOV X1, X0
	0x0328E930 MOV X0, X19
	0x0328E934 MOV X2, X31
	0x0328E938 BL 0x3287358
	0x0328E93C MOV X0, X21
	0x0328E940 LDP X20, X19, [X31 + 0x30]
	0x0328E944 LDP X22, X21, [X31 + 0x20]
	0x0328E948 LDP X24, X23, [X31 + 0x10]
	0x0328E94C LDR X30, [X31], #0x40
	0x0328E950 RET
	0x0328E954 MOV X0, X31
	0x0328E958 BL 0x33E6FB0
	0x0328E95C CBZ X0, 0x328E9D8
	0x0328E960 MOV X1, X31
	0x0328E964 BL 0x3287154
	0x0328E968 CBZ X0, 0x328E9D8
	0x0328E96C ADRP X10, 0xE96000
	0x0328E970 LDR X8, [X0]
	0x0328E974 LDR X10, [X10 + 0x3B8]
	0x0328E978 MOV X21, X0
	0x0328E97C LDRH W9, [X8 + 0x12E]
	0x0328E980 LDR X1, [X10]
	0x0328E984 CBZ X9, 0x328E9A8
	0x0328E988 LDR X10, [X8 + 0xB0]
	0x0328E98C ADD X10, X10, 0x8
	0x0328E990 LDUR X11, [X10 - 0x8]
	0x0328E994 CMP X11, X1
	0x0328E998 B.EQ 0x328E9B8
	0x0328E99C SUBS X9, X9, 0x1

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0x114F000
	009 Move X22, 0xE97000
	010 Move W8, [X19+1709]
	011 Move X22, [X22+856]
	012 Move W20, W0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xE97000
	018 Move X0, [X0+856]
	019 Call 0x1C17CF4
	020 Move X0, 0xE66000
	021 Move X0, [X0+1880]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X19+1709], W8
	025 Move X0, [X22]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1C17DFC
	030 Move X0, [X22]
	031 Move X8, [X0+184]
	032 Move X0, [X8]
	033 Compare X0, 0
	034 JumpIfEqual {149}
	035 Move X8, [X0]
	036 Move X9, [X8+872]
	037 Move X1, [X8+880]
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Move X19, X0
	040 Move [X31+12], W31
	041 Add X1, X31, 12
	042 Move X2, X31
	043 Call Monitor.Enter, X0, X1
	044 Move X0, [X22]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {50}
	048 Call 0x1C17DFC
	049 Move X0, [X22]
	050 Move X23, 0xE66000
	051 Move X8, [X0+184]
	052 Move X23, [X23+1880]
	053 Move X21, [X8]
	054 Move X0, [X23]
	055 Move [X31+8], W20
	056 Add X1, X31, 8
	057 Call 0x1C17E04
	058 Move X1, X0
	059 Compare X21, 0
	060 JumpIfEqual {152}
	061 Move X8, [X21]
	062 Move X9, [X8+696]
	063 Move X2, [X8+704]
	064 Move X0, X21
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move W8, W0
	067 Move X0, [X22]
	068 Move TEMP, X8
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {105}
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {77}
	075 Call 0x1C17DFC
	076 Move X0, [X22]
	077 Move X8, [X0+184]
	078 Move X0, [X23]
	079 Move X21, [X8]
	080 Move [X31+4], W20
	081 Add X1, X31, 4
	082 Call 0x1C17E04
	083 Move X1, X0
	084 Compare X21, 0
	085 JumpIfEqual {153}
	086 Move X8, [X21]
	087 Move X9, [X8+728]
	088 Move X2, [X8+736]
	089 Move X0, X21
	090 NotImplemented "Instruction BLR not yet implemented."
	091 Move X21, X0
	092 Compare X0, 0
	093 JumpIfEqual {131}
	094 Move X8, [X21]
	095 Move X1, [X22]
	096 Move W10, [X8+304]
	097 Move W9, [X1+304]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X8, [X8+200]
	100 Add X8, X8, X9
	101 NotImplemented "Instruction LDUR not yet implemented."
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X0, X21
	104 Call 0x1C181E0
	105 Call 0x1C17F10
	106 Move X21, X0
	107 Move X1, X31
	108 Call Object..ctor, X0
	109 Move [X21+16], W20
	110 Move X0, [X22]
	111 Move W8, [X0+224]
	112 Compare W8, 0
	113 JumpIfNotEqual {116}
	114 Call 0x1C17DFC
	115 Move X0, [X22]
	116 Move X8, [X0+184]
	117 Move X0, [X23]
	118 Move X22, [X8]
	119 Move [X31], W20
	120 Add X1, X31, 0
	121 Call 0x1C17E04
	122 Move X1, X0
	123 Compare X22, 0
	124 JumpIfEqual {154}
	125 Move X8, [X22]
	126 Move X9, [X8+744]
	127 Move X3, [X8+752]
	128 Move X0, X22
	129 Move X2, X21
	130 NotImplemented "Instruction BLR not yet implemented."
	131 Move X20, X31
	132 Move W8, [X31+12]
	133 Compare W8, 0
	134 JumpIfEqual {138}
	135 Move X0, X19
	136 Move X1, X31
	137 Call Monitor.Exit, X0
	138 Compare X20, 0
	139 JumpIfNotEqual {150}
	140 Move X0, X21
	141 Move X20, [X31+48]
	142 Move X19, [X31+56]
	143 Move X22, [X31+32]
	144 Move X21, [X31+40]
	145 Move X30, [X31+16]
	146 Move X23, [X31+24]
	147 Add X31, X31, 64
	148 Return X0
	149 Call 0x1C17F20
	150 Move X0, X20
	151 Call 0x1C17F18
	152 Call 0x1C17F20
	153 Call 0x1C17F20
	154 Call 0x1C17F20
	155 Move X21, X0
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Move X0, X21
	158 Call 0x3EB2AD0
	159 Move X20, [X0]
	160 Call 0x3EB2AE0
	161 Move X21, X31
	162 Move X20, X31
	163 Move X21, X0
	164 Move W8, [X31+12]
	165 Compare W8, 0
	166 JumpIfEqual {170}
	167 Move X0, X19
	168 Move X1, X31
	169 Call Monitor.Exit, X0
	170 Compare X20, 0
	171 JumpIfNotEqual {174}
	172 Move X0, X21
	173 Call 0x1D2D690
	174 Move X0, X20
	175 Call 0x1C17F18
	176 Call 0x1991590

Method: System.Int32 get_TargetDomainId()

Disassembly:
	0x0328EA38 LDR X10, [X10 + 0x5D8]
	0x0328EA3C LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Runtime.Remoting.Channels.CrossAppDomainSink/ProcessMessageRes ProcessMessageInDomain(System.Byte[] arrRequest, System.Runtime.Remoting.Messaging.CADMethodCallMessage cadMsg)

Disassembly:
	0x0328EA40 LDR X1, [X10]
	0x0328EA44 CBZ X9, 0x328EA68
	0x0328EA48 LDR X10, [X8 + 0xB0]
	0x0328EA4C ADD X10, X10, 0x8
	0x0328EA50 LDUR X11, [X10 - 0x8]
	0x0328EA54 CMP X11, X1
	0x0328EA58 B.EQ 0x328EA78
	0x0328EA5C SUBS X9, X9, 0x1
	0x0328EA60 ADD X10, X10, 0x10
	0x0328EA64 B.NE 0x328EA50
	0x0328EA68 MOVZ W2, 0x2
	0x0328EA6C MOV X0, X19
	0x0328EA70 BL 0x1C5C788
	0x0328EA74 B 0x328EA88
	0x0328EA78 LDR W9, [X10]
	0x0328EA7C ADD W9, W9, 0x2
	0x0328EA80 ADD X8, X8, W9, 0x4, SXTW
	0x0328EA84 ADD X0, X8, 0x138
	0x0328EA88 LDP X8, X1, [X0]
	0x0328EA8C MOV X0, X19
	0x0328EA90 BLR X8
	0x0328EA94 MOV X20, X0
	0x0328EA98 CBZ X0, 0x328EB1C
	0x0328EA9C ADRP X10, 0xE96000
	0x0328EAA0 LDR X8, [X20]
	0x0328EAA4 LDR X10, [X10 + 0x6F0]
	0x0328EAA8 LDRH W9, [X8 + 0x12E]
	0x0328EAAC LDR X1, [X10]
	0x0328EAB0 CBZ X9, 0x328EAD4
	0x0328EAB4 LDR X10, [X8 + 0xB0]
	0x0328EAB8 ADD X10, X10, 0x8
	0x0328EABC LDUR X11, [X10 - 0x8]
	0x0328EAC0 CMP X11, X1
	0x0328EAC4 B.EQ 0x328EAE4
	0x0328EAC8 SUBS X9, X9, 0x1
	0x0328EACC ADD X10, X10, 0x10
	0x0328EAD0 B.NE 0x328EABC
	0x0328EAD4 MOVZ W2, 0x1
	0x0328EAD8 MOV X0, X20
	0x0328EADC BL 0x1C5C788
	0x0328EAE0 B 0x328EAF4
	0x0328EAE4 LDR W9, [X10]
	0x0328EAE8 ADD W9, W9, 0x1
	0x0328EAEC ADD X8, X8, W9, 0x4, SXTW
	0x0328EAF0 ADD X0, X8, 0x138
	0x0328EAF4 LDP X8, X2, [X0]
	0x0328EAF8 MOV X0, X20
	0x0328EAFC MOV X1, X19
	0x0328EB00 BLR X8
	0x0328EB04 MOV X20, X0
	0x0328EB08 MOV X0, X20
	0x0328EB0C LDP X20, X19, [X31 + 0x10]
	0x0328EB10 LDP X30, X21, [X31], #0x20
	0x0328EB14 RET
	0x0328EB18 BL 0x1C16F20
	0x0328EB1C BL 0x1C16F20
	0x0328EB20 B 0x328EB2C
	0x0328EB24 B 0x328EB2C
	0x0328EB28 B 0x328EB2C
	0x0328EB2C MOV X20, X0
	0x0328EB30 CMP W1, 0x1
	0x0328EB34 B.NE 0x328EBB4
	0x0328EB38 MOV X0, X20
	0x0328EB3C BL 0x3EB1AD0
	0x0328EB40 MOV X20, X0
	0x0328EB44 ADRP X0, 0xE65000
	0x0328EB48 LDR X0, [X0 + 0x7D0]
	0x0328EB4C BL 0x1C16D08
	0x0328EB50 LDR X8, [X20]
	0x0328EB54 LDR X1, [X8]
	0x0328EB58 BL 0x1C17270
	0x0328EB5C TBZ X0, 0x0, 0x328EB8C
	0x0328EB60 LDR X21, [X20]
	0x0328EB64 BL 0x3EB1AE0
	0x0328EB68 ADRP X0, 0xE96000
	0x0328EB6C LDR X0, [X0 + 0x280]
	0x0328EB70 BL 0x1C16D08
	0x0328EB74 BL 0x1C16F10

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X1
	007 Move X20, X0
	008 Move [X31], X31
	009 Move [X31+8], X31
	010 Move X0, X31
	011 Call AppDomain.get_CurrentDomain
	012 Compare X0, 0
	013 JumpIfEqual {29}
	014 Add X8, X31, 0
	015 Add X4, X8, 8
	016 Add X3, X31, 0
	017 Move X1, X20
	018 Move X2, X19
	019 Move X5, X31
	020 Call AppDomain.ProcessMessageInDomain, X0, X1, X2, X3, X4
	021 Move X0, [X31]
	022 Move X1, [X31+8]
	023 Move X20, [X31+32]
	024 Move X19, [X31+40]
	025 Move X30, [X31+16]
	026 Move X21, [X31+24]
	027 Add X31, X31, 48
	028 Return X0
	029 Call 0x1C17F20
	030 Move X19, X0
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X0, X19
	033 Call 0x3EB2AD0
	034 Move X19, X0
	035 Move X0, 0xE66000
	036 Move X0, [X0+2000]
	037 Call 0x1C17D08
	038 Move X8, [X19]
	039 Move X1, [X8]
	040 Call 0x1C18270
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {72}
	045 Move X19, [X19]
	046 Call 0x3EB2AE0
	047 Move X0, 0xE97000
	048 Move X0, [X0+1704]
	049 Call 0x1C17D08
	050 Call 0x1C17F10
	051 Move X1, X31
	052 Move X20, X0
	053 Call ErrorMessage..ctor, X0
	054 Move X0, 0xE97000
	055 Move X0, [X0+1232]
	056 Call 0x1C17D08
	057 Call 0x1C17F10
	058 Move X1, X19
	059 Move X2, X20
	060 Move X3, X31
	061 Move X21, X0
	062 Call MethodResponse..ctor, X0, X1, X2
	063 Move X0, X21
	064 Move X1, X31
	065 Call CADSerializer.SerializeMessage, X0
	066 Compare X0, 0
	067 JumpIfEqual {80}
	068 Move X8, [X0]
	069 Move X9, [X8+952]
	070 Move X1, [X8+960]
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move W0, 8
	073 Call 0x3EB2AF0
	074 Move X8, [X19]
	075 Move [X0], X8
	076 Move X1, 0xC27000
	077 Add X1, X1, 3672
	078 Move X2, X31
	079 Call 0x3EB2B00
	080 Call 0x1C17F20
	081 Move X19, X0
	082 Call 0x3EB2AE0
	083 Move X0, X19
	084 Call 0x1D2D690
	085 Call 0x1991590

Method: System.Runtime.Remoting.Messaging.IMessage SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage msgRequest)

Disassembly:
	0x0328EB78 MOV X1, X21
	0x0328EB7C MOV X2, X19
	0x0328EB80 MOV X20, X0
	0x0328EB84 BL 0x328EBC0
	0x0328EB88 B 0x328EB08
	0x0328EB8C MOVZ W0, 0x8
	0x0328EB90 BL 0x3EB1AF0
	0x0328EB94 LDR X8, [X20]
	0x0328EB98 STR X8, [X0]
	0x0328EB9C ADRP X1, 0xC26000
	0x0328EBA0 ADD X1, X1, 0xE58
	0x0328EBA4 MOV X2, X31
	0x0328EBA8 BL 0x3EB1B00
	0x0328EBAC MOV X20, X0
	0x0328EBB0 BL 0x3EB1AE0
	0x0328EBB4 MOV X0, X20
	0x0328EBB8 BL 0x1D2C690
	0x0328EBBC BL 0x1990590
	0x0328EBC0 STR X30, [X31 - 0x30]!
	0x0328EBC4 STP X22, X21, [X31 + 0x10]
	0x0328EBC8 STP X20, X19, [X31 + 0x20]
	0x0328EBCC ADRP X22, 0x114E000
	0x0328EBD0 LDRB W8, [X22 + 0x744]
	0x0328EBD4 MOV X20, X2
	0x0328EBD8 MOV X21, X1
	0x0328EBDC MOV X19, X0
	0x0328EBE0 TBNZ X8, 0x0, 0x328EC04
	0x0328EBE4 ADRP X0, 0xE96000
	0x0328EBE8 LDR X0, [X0 + 0x270]
	0x0328EBEC BL 0x1C16CF4
	0x0328EBF0 ADRP X0, 0xE65000
	0x0328EBF4 LDR X0, [X0 + 0x9D0]
	0x0328EBF8 BL 0x1C16CF4
	0x0328EBFC MOVZ W8, 0x1
	0x0328EC00 STRB W8, [X22 + 0x744]
	0x0328EC04 ADRP X22, 0xE65000
	0x0328EC08 LDR X22, [X22 + 0x9D0]
	0x0328EC0C MOV X0, X19
	0x0328EC10 MOV X1, X31
	0x0328EC14 BL 0x33BDD8C
	0x0328EC18 STR X21, [X19 + 0x38]
	0x0328EC1C CBZ X20, 0x328ECE8
	0x0328EC20 ADRP X21, 0xE96000
	0x0328EC24 LDR X8, [X20]
	0x0328EC28 LDR X21, [X21 + 0x270]
	0x0328EC2C LDRH W9, [X8 + 0x12E]
	0x0328EC30 LDR X1, [X21]
	0x0328EC34 CBZ X9, 0x328EC58
	0x0328EC38 LDR X10, [X8 + 0xB0]
	0x0328EC3C ADD X10, X10, 0x8
	0x0328EC40 LDUR X11, [X10 - 0x8]
	0x0328EC44 CMP X11, X1
	0x0328EC48 B.EQ 0x328EC68
	0x0328EC4C SUBS X9, X9, 0x1
	0x0328EC50 ADD X10, X10, 0x10
	0x0328EC54 B.NE 0x328EC40
	0x0328EC58 MOVZ W2, 0x3
	0x0328EC5C MOV X0, X20
	0x0328EC60 BL 0x1C5C788
	0x0328EC64 B 0x328EC78
	0x0328EC68 LDR W9, [X10]
	0x0328EC6C ADD W9, W9, 0x3
	0x0328EC70 ADD X8, X8, W9, 0x4, SXTW
	0x0328EC74 ADD X0, X8, 0x138
	0x0328EC78 LDP X8, X1, [X0]
	0x0328EC7C MOV X0, X20
	0x0328EC80 BLR X8
	0x0328EC84 STR X0, [X19 + 0x40]
	0x0328EC88 LDR X8, [X20]
	0x0328EC8C LDR X1, [X21]
	0x0328EC90 LDRH W9, [X8 + 0x12E]
	0x0328EC94 CBZ X9, 0x328ECB8
	0x0328EC98 LDR X10, [X8 + 0xB0]
	0x0328EC9C ADD X10, X10, 0x8
	0x0328ECA0 LDUR X11, [X10 - 0x8]
	0x0328ECA4 CMP X11, X1
	0x0328ECA8 B.EQ 0x328ECC8
	0x0328ECAC SUBS X9, X9, 0x1
	0x0328ECB0 ADD X10, X10, 0x10
	0x0328ECB4 B.NE 0x328ECA0
	0x0328ECB8 MOVZ W2, 0x2
	0x0328ECBC MOV X0, X20
	0x0328ECC0 BL 0x1C5C788
	0x0328ECC4 B 0x328ECD8
	0x0328ECC8 LDR W9, [X10]
	0x0328ECCC ADD W9, W9, 0x2
	0x0328ECD0 ADD X8, X8, W9, 0x4, SXTW
	0x0328ECD4 ADD X0, X8, 0x138
	0x0328ECD8 LDP X8, X1, [X0]
	0x0328ECDC MOV X0, X20
	0x0328ECE0 BLR X8
	0x0328ECE4 STR X0, [X19 + 0x20]
	0x0328ECE8 LDR X0, [X22]
	0x0328ECEC MOV W1, W31
	0x0328ECF0 BL 0x1C16D6C
	0x0328ECF4 STR X0, [X19 + 0x18]
	0x0328ECF8 LDP X20, X19, [X31 + 0x20]
	0x0328ECFC LDP X22, X21, [X31 + 0x10]
	0x0328ED00 LDR X30, [X31], #0x30
	0x0328ED04 RET
	0x0328ED08 SUB X31, X31, 0x80
	0x0328ED0C STP X29, X30, [X31 + 0x20]
	0x0328ED10 STP X28, X27, [X31 + 0x30]
	0x0328ED14 STP X26, X25, [X31 + 0x40]
	0x0328ED18 STP X24, X23, [X31 + 0x50]
	0x0328ED1C STP X22, X21, [X31 + 0x60]
	0x0328ED20 STP X20, X19, [X31 + 0x70]
	0x0328ED24 STR X1, [X31 + 0x18]
	0x0328ED28 ADRP X19, 0x114E000
	0x0328ED2C ADRP X20, 0xE96000
	0x0328ED30 LDRB W8, [X19 + 0x6C5]
	0x0328ED34 LDR X20, [X20 + 0x448]
	0x0328ED38 MOV X23, X2
	0x0328ED3C MOV X24, X0
	0x0328ED40 TBNZ X8, 0x0, 0x328EDAC
	0x0328ED44 ADRP X0, 0xE96000
	0x0328ED48 LDR X0, [X0 + 0x6F8]
	0x0328ED4C BL 0x1C16CF4
	0x0328ED50 ADRP X0, 0xE92000
	0x0328ED54 LDR X0, [X0 + 0xBA0]
	0x0328ED58 BL 0x1C16CF4
	0x0328ED5C ADRP X0, 0xE95000
	0x0328ED60 LDR X0, [X0 + 0xD08]
	0x0328ED64 BL 0x1C16CF4
	0x0328ED68 ADRP X0, 0xE96000
	0x0328ED6C LDR X0, [X0 + 0x448]
	0x0328ED70 BL 0x1C16CF4
	0x0328ED74 ADRP X0, 0xE96000
	0x0328ED78 LDR X0, [X0 + 0x700]
	0x0328ED7C BL 0x1C16CF4
	0x0328ED80 ADRP X0, 0xE96000
	0x0328ED84 LDR X0, [X0 + 0x708]
	0x0328ED88 BL 0x1C16CF4
	0x0328ED8C ADRP X0, 0xE65000
	0x0328ED90 LDR X0, [X0 + 0xE00]
	0x0328ED94 BL 0x1C16CF4
	0x0328ED98 ADRP X0, 0xE65000
	0x0328ED9C LDR X0, [X0 + 0xE18]
	0x0328EDA0 BL 0x1C16CF4
	0x0328EDA4 MOVZ W8, 0x1
	0x0328EDA8 STRB W8, [X19 + 0x6C5]
	0x0328EDAC LDR X0, [X20]
	0x0328EDB0 BL 0x1C16F10
	0x0328EDB4 MOV X1, X24
	0x0328EDB8 MOV X20, X0
	0x0328EDBC BL 0x328F6CC
	0x0328EDC0 CBZ X24, 0x328F4BC
	0x0328EDC4 MOV X0, X24
	0x0328EDC8 MOV X1, X31
	0x0328EDCC BL 0x33971A8
	0x0328EDD0 MOV W21, W0
	0x0328EDD4 BL 0x328E72C
	0x0328EDD8 MOV X22, X0
	0x0328EDDC TBZ X21, 0x0, 0x328F074
	0x0328EDE0 ADRP X8, 0xE96000
	0x0328EDE4 LDR X8, [X8 + 0x700]
	0x0328EDE8 LDR X0, [X8]
	0x0328EDEC BL 0x1C16F10
	0x0328EDF0 MOV X1, X31
	0x0328EDF4 MOV X19, X0
	0x0328EDF8 BL 0x33BDD8C
	0x0328EDFC STR X19, [X31 + 0x10]
	0x0328EE00 STR X22, [X19 + 0x10]
	0x0328EE04 ADRP X8, 0xE92000
	0x0328EE08 LDR X8, [X8 + 0xBA0]
	0x0328EE0C LDR X0, [X8]
	0x0328EE10 BL 0x1C16F10
	0x0328EE14 MOV X1, X31
	0x0328EE18 MOV X22, X0
	0x0328EE1C BL 0x3351F5C
	0x0328EE20 CBZ X23, 0x328EE40
	0x0328EE24 CBZ X22, 0x328F4BC
	0x0328EE28 LDR X8, [X22]
	0x0328EE2C MOV X0, X22
	0x0328EE30 MOV X1, X23
	0x0328EE34 LDR X9, [X8 + 0x318]
	0x0328EE38 LDR X2, [X8 + 0x320]
	0x0328EE3C BLR X9
	0x0328EE40 ADRP X19, 0xE95000
	0x0328EE44 LDR X19, [X19 + 0xD08]
	0x0328EE48 LDR X0, [X19]
	0x0328EE4C LDR W8, [X0 + 0xE0]
	0x0328EE50 CBNZ W8, 0x328EE5C
	0x0328EE54 BL 0x1C16DFC
	0x0328EE58 LDR X0, [X19]
	0x0328EE5C LDR X8, [X0 + 0xB8]
	0x0328EE60 LDR X9, [X31 + 0x18]
	0x0328EE64 MOV X2, X31
	0x0328EE68 LDR X1, [X8 + 0x18]
	0x0328EE6C MOV X0, X9
	0x0328EE70 BL 0x321BA08
	0x0328EE74 MOV W25, W0
	0x0328EE78 MOV X0, X31
	0x0328EE7C BL 0x33E6FB0
	0x0328EE80 MOV X23, X0
	0x0328EE84 TBZ X25, 0x0, 0x328F0A8
	0x0328EE88 CBZ X22, 0x328F4BC
	0x0328EE8C LDR X8, [X22]
	0x0328EE90 MOV X0, X22
	0x0328EE94 LDR X9, [X8 + 0x388]
	0x0328EE98 LDR X1, [X8 + 0x390]
	0x0328EE9C BLR X9
	0x0328EEA0 MOV X25, X0
	0x0328EEA4 CBZ X0, 0x328F514
	0x0328EEA8 ADRP X21, 0xE65000
	0x0328EEAC ADRP X19, 0xE96000
	0x0328EEB0 LDR X21, [X21 + 0xE18]
	0x0328EEB4 LDR X19, [X19 + 0x708]
	0x0328EEB8 LDR X8, [X25]
	0x0328EEBC LDR X1, [X21]
	0x0328EEC0 LDRH W9, [X8 + 0x12E]
	0x0328EEC4 CBZ X9, 0x328EEE8
	0x0328EEC8 LDR X10, [X8 + 0xB0]
	0x0328EECC ADD X10, X10, 0x8
	0x0328EED0 LDUR X11, [X10 - 0x8]
	0x0328EED4 CMP X11, X1
	0x0328EED8 B.EQ 0x328EEF8
	0x0328EEDC SUBS X9, X9, 0x1
	0x0328EEE0 ADD X10, X10, 0x10
	0x0328EEE4 B.NE 0x328EED0
	0x0328EEE8 MOV X0, X25
	0x0328EEEC MOV W2, W31
	0x0328EEF0 BL 0x1C5C788
	0x0328EEF4 B 0x328EF04
	0x0328EEF8 LDRSW X9, [X10]
	0x0328EEFC ADD X8, X8, X9, 0x4, LSL
	0x0328EF00 ADD X0, X8, 0x138
	0x0328EF04 LDP X8, X1, [X0]
	0x0328EF08 MOV X0, X25
	0x0328EF0C BLR X8
	0x0328EF10 MOV W26, W0
	0x0328EF14 TBZ X0, 0x0, 0x328F010
	0x0328EF18 LDR X8, [X25]
	0x0328EF1C LDR X1, [X21]
	0x0328EF20 LDRH W9, [X8 + 0x12E]
	0x0328EF24 CBZ X9, 0x328EF48
	0x0328EF28 LDR X10, [X8 + 0xB0]
	0x0328EF2C ADD X10, X10, 0x8
	0x0328EF30 LDUR X11, [X10 - 0x8]
	0x0328EF34 CMP X11, X1
	0x0328EF38 B.EQ 0x328EF58
	0x0328EF3C SUBS X9, X9, 0x1
	0x0328EF40 ADD X10, X10, 0x10
	0x0328EF44 B.NE 0x328EF30
	0x0328EF48 MOVZ W2, 0x1
	0x0328EF4C MOV X0, X25
	0x0328EF50 BL 0x1C5C788
	0x0328EF54 B 0x328EF68
	0x0328EF58 LDR W9, [X10]
	0x0328EF5C ADD W9, W9, 0x1
	0x0328EF60 ADD X8, X8, W9, 0x4, SXTW
	0x0328EF64 ADD X0, X8, 0x138
	0x0328EF68 LDP X8, X1, [X0]
	0x0328EF6C MOV X0, X25
	0x0328EF70 BLR X8
	0x0328EF74 MOV X29, X0
	0x0328EF78 CBZ X0, 0x328F4EC
	0x0328EF7C LDR X27, [X19]
	0x0328EF80 MOV X0, X29
	0x0328EF84 MOV X1, X27
	0x0328EF88 BL 0x1C16E00
	0x0328EF8C CBZ X0, 0x328F4F0
	0x0328EF90 LDR X28, [X19]
	0x0328EF94 MOV X0, X29
	0x0328EF98 MOV X1, X28
	0x0328EF9C BL 0x1C16E00
	0x0328EFA0 MOV X27, X0
	0x0328EFA4 CBZ X0, 0x328F4E0
	0x0328EFA8 LDR X8, [X27]
	0x0328EFAC LDRH W9, [X8 + 0x12E]
	0x0328EFB0 CBZ X9, 0x328EFD4
	0x0328EFB4 LDR X10, [X8 + 0xB0]
	0x0328EFB8 ADD X10, X10, 0x8
	0x0328EFBC LDUR X11, [X10 - 0x8]
	0x0328EFC0 CMP X11, X28

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x114F000
	010 Move W8, [X20+1710]
	011 Move X19, X1
	012 Move X22, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {37}
	017 Move X0, 0xE97000
	018 Move X0, [X0+856]
	019 Call 0x1C17CF4
	020 Move X0, 0xE97000
	021 Move X0, [X0+1112]
	022 Call 0x1C17CF4
	023 Move X0, 0xE6E000
	024 Move X0, [X0+1368]
	025 Call 0x1C17CF4
	026 Move X0, 0xE97000
	027 Move X0, [X0+1232]
	028 Call 0x1C17CF4
	029 Move X0, 0xE66000
	030 Move X0, [X0+2512]
	031 Call 0x1C17CF4
	032 Move X0, 0xE97000
	033 Move X0, [X0+1712]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X20+1710], W8
	037 Move X0, X19
	038 Move X1, X31
	039 Call CADMethodCallMessage.Create, X0
	040 Move X21, X0
	041 Compare X0, 0
	042 JumpIfEqual {44}
	043 Move X23, X31
	044 Move X0, X19
	045 Move X1, X31
	046 Call CADSerializer.SerializeMessage, X0
	047 Compare X0, 0
	048 JumpIfEqual {185}
	049 Move X8, [X0]
	050 Move X1, [X8+960]
	051 Move X9, [X8+952]
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move X23, X0
	054 Move X0, X31
	055 Call Thread.get_CurrentContext
	056 Move X24, 0xE97000
	057 Move X24, [X24+856]
	058 Move X20, X0
	059 Move W22, [X22+16]
	060 Move X0, [X24]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {66}
	064 Call 0x1C17DFC
	065 Move X0, [X24]
	066 Move X9, 0xE66000
	067 Move X8, [X0+184]
	068 Move X9, [X9+2512]
	069 Move X24, [X8+8]
	070 Move X0, [X9]
	071 Move W1, 2
	072 Call 0x1C17D6C
	073 Move X25, X0
	074 Compare X0, 0
	075 JumpIfEqual {172}
	076 Compare X23, 0
	077 JumpIfEqual {84}
	078 Move X8, [X25]
	079 Move X1, [X8+64]
	080 Move X0, X23
	081 Call 0x1C17E00
	082 Compare X0, 0
	083 JumpIfEqual {179}
	084 Move W8, [X25+24]
	085 Compare W8, 0
	086 JumpIfEqual {173}
	087 Move [X25+32], X23
	088 Compare X21, 0
	089 JumpIfEqual {97}
	090 Move X8, [X25]
	091 Move X1, [X8+64]
	092 Move X0, X21
	093 Call 0x1C17E00
	094 Compare X0, 0
	095 JumpIfEqual {182}
	096 Move W8, [X25+24]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move [X25+40], X21
	099 Move W0, W22
	100 Move X1, X24
	101 Move X2, X31
	102 Move X3, X25
	103 Move X4, X31
	104 Call AppDomain.InvokeInDomainByID, X0, X1, X2, X3
	105 Compare X0, 0
	106 JumpIfEqual {177}
	107 Move X8, 0xE97000
	108 Move X8, [X8+1712]
	109 Move X9, [X0]
	110 Move X1, [X8]
	111 Move X8, [X9+64]
	112 Move X9, [X1+64]
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Call 0x1C17E08
	115 Move X22, [X0]
	116 Move X21, [X0+8]
	117 Move X23, X31
	118 Move W24, 3
	119 Move X0, X20
	120 Move X1, X31
	121 Call AppDomain.InternalSetContext, X0
	122 Compare X23, 0
	123 JumpIfNotEqual {175}
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Compare W24, 0
	126 JumpIfNotEqual {162}
	127 Compare X22, 0
	128 JumpIfEqual {147}
	129 Move X8, 0xE6E000
	130 Move X8, [X8+1368]
	131 Move X0, [X8]
	132 Call 0x1C17F10
	133 Move X20, X0
	134 Move X1, X22
	135 Move X2, X31
	136 Call MemoryStream..ctor, X0, X1
	137 Move X8, 0xE97000
	138 Move X8, [X8+1112]
	139 Move X1, [X8]
	140 Move X0, X19
	141 Call 0x1C17E00
	142 Move X1, X0
	143 Move X0, X20
	144 Move X2, X31
	145 Call CADSerializer.DeserializeMessage, X0, X1
	146 Move X20, X0
	147 Move X8, 0xE97000
	148 Move X8, [X8+1232]
	149 Move X0, [X8]
	150 Call 0x1C17F10
	151 Move X8, 0xE97000
	152 Move X8, [X8+1112]
	153 Move X20, X0
	154 Move X1, [X8]
	155 Move X0, X19
	156 Call 0x1C17E00
	157 Move X1, X0
	158 Move X0, X20
	159 Move X2, X21
	160 Move X3, X31
	161 Call MethodResponse..ctor, X0, X1, X2
	162 Move X0, X20
	163 Move X20, [X31+48]
	164 Move X19, [X31+56]
	165 Move X22, [X31+32]
	166 Move X21, [X31+40]
	167 Move X24, [X31+16]
	168 Move X23, [X31+24]
	169 Move X30, [X31+64]
	170 Move X25, [X31+72]
	171 Return X0
	172 Call 0x1C17F20
	173 Call 0x1C17F28
	174 Call 0x1C17F28
	175 Move X0, X23
	176 Call 0x1C17F18
	177 Call 0x1C17F20
	178 Call 0x1C181E0
	179 Call 0x1C17F44
	180 Move X1, X31
	181 Call 0x1C17DEC
	182 Call 0x1C17F44
	183 Move X1, X31
	184 Call 0x1C17DEC
	185 Call 0x1C17F20
	186 Move X22, X1
	187 Move X21, X0
	188 Move X22, X1
	189 Move X21, X0
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Move X0, X21
	192 Call 0x3EB2AD0
	193 Move X23, [X0]
	194 Call 0x3EB2AE0
	195 Move W24, W31
	196 Move X21, X31
	197 Move X22, X31
	198 Move X23, X31
	199 Move X0, X20
	200 Move X1, X31
	201 Call AppDomain.InternalSetContext, X0
	202 Compare X23, 0
	203 JumpIfNotEqual {245}
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Move X0, X21
	206 Call 0x3EB2AD0
	207 Move X20, X0
	208 Move X0, 0xE66000
	209 Move X0, [X0+2000]
	210 Call 0x1C17D08
	211 Move X8, [X20]
	212 Move X1, [X8]
	213 Call 0x1C18270
	214 Move TEMP, X0
	215 And TEMP, TEMP, 1
	216 Compare TEMP, 1
	217 JumpIfNotEqual {237}
	218 Move X21, [X20]
	219 Move W22, 1
	220 Call 0x3EB2AE0
	221 Move X0, 0xE97000
	222 Move X0, [X0+640]
	223 Call 0x1C17D08
	224 Call 0x1C17F10
	225 Move X20, X0
	226 Move X0, 0xE97000
	227 Move X0, [X0+1112]
	228 Call 0x1C17D08
	229 Move X1, X0
	230 Move X0, X19
	231 Call 0x1C17E00
	232 Move X2, X0
	233 Move X0, X20
	234 Move X1, X21
	235 Move X3, X31
	236 Call ReturnMessage..ctor, X0, X1, X2
	237 Move W0, 8
	238 Call 0x3EB2AF0
	239 Move X8, [X20]
	240 Move [X0], X8
	241 Move X1, 0xC27000
	242 Add X1, X1, 3672
	243 Move X2, X31
	244 Call 0x3EB2B00
	245 Move X0, X23
	246 Call 0x1C17F18
	247 Move X22, X1
	248 Move X21, X0
	249 Move X21, X0
	250 Call 0x3EB2AE0
	251 Move X0, X21
	252 Call 0x1D2D690
	253 NotImplemented "Instruction CMP not yet implemented."
	254 Move X21, X0
	255 Move X0, X21
	256 Call 0x3EB2AD0
	257 Move X19, X0
	258 Move X0, 0xE66000
	259 Move X0, [X0+2000]
	260 Call 0x1C17D08
	261 Move X8, [X19]
	262 Move X1, [X8]
	263 Call 0x1C18270
	264 Move TEMP, X0
	265 And TEMP, TEMP, 1
	266 Compare TEMP, 1
	267 JumpIfNotEqual {270}
	268 Call 0x3EB2AE0
	269 Move X20, X31
	270 Move W0, 8
	271 Call 0x3EB2AF0
	272 Move X8, [X19]
	273 Move [X0], X8
	274 Move X1, 0xC27000
	275 Add X1, X1, 3672
	276 Move X2, X31
	277 Call 0x3EB2B00
	278 Move X21, X0
	279 Call 0x3EB2AE0
	280 Call 0x1991590

Method: System.Runtime.Remoting.Messaging.IMessageCtrl AsyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage reqMsg, System.Runtime.Remoting.Messaging.IMessageSink replySink)

Disassembly:
	0x0328EFC4 B.EQ 0x328EFE8
	0x0328EFC8 SUBS X9, X9, 0x1
	0x0328EFCC ADD X10, X10, 0x10
	0x0328EFD0 B.NE 0x328EFBC
	0x0328EFD4 MOVZ W2, 0x1
	0x0328EFD8 MOV X0, X27
	0x0328EFDC MOV X1, X28
	0x0328EFE0 BL 0x1C5C788
	0x0328EFE4 B 0x328EFF8
	0x0328EFE8 LDR W9, [X10]
	0x0328EFEC ADD W9, W9, 0x1
	0x0328EFF0 ADD X8, X8, W9, 0x4, SXTW
	0x0328EFF4 ADD X0, X8, 0x138
	0x0328EFF8 LDP X8, X3, [X0]
	0x0328EFFC MOV X0, X27
	0x0328F000 MOV X1, X23
	0x0328F004 MOV X2, X20
	0x0328F008 BLR X8
	0x0328F00C TBNZ X0, 0x0, 0x328EEB8
	0x0328F010 MOV X27, X31
	0x0328F014 EOR W28, W26, 0x1
	0x0328F018 ADRP X19, 0xE64000
	0x0328F01C LDR X19, [X19 + 0xE00]
	0x0328F020 MOV X0, X25
	0x0328F024 LDR X1, [X19]
	0x0328F028 BL 0x1C16E00
	0x0328F02C CBZ X0, 0x328F0C8
	0x0328F030 LDR X8, [X0]
	0x0328F034 LDR X1, [X19]
	0x0328F038 MOV X25, X0
	0x0328F03C LDRH W9, [X8 + 0x12E]
	0x0328F040 CBZ X9, 0x328F064
	0x0328F044 LDR X10, [X8 + 0xB0]
	0x0328F048 ADD X10, X10, 0x8
	0x0328F04C LDUR X11, [X10 - 0x8]
	0x0328F050 CMP X11, X1
	0x0328F054 B.EQ 0x328F0B0
	0x0328F058 SUBS X9, X9, 0x1
	0x0328F05C ADD X10, X10, 0x10
	0x0328F060 B.NE 0x328F04C
	0x0328F064 MOV X0, X25
	0x0328F068 MOV W2, W31
	0x0328F06C BL 0x1C5C788
	0x0328F070 B 0x328F0BC
	0x0328F074 ADRP X8, 0xE95000
	0x0328F078 LDR X8, [X8 + 0x6F8]
	0x0328F07C LDR X0, [X8]
	0x0328F080 BL 0x1C16F10
	0x0328F084 MOV X1, X31
	0x0328F088 MOV X21, X0
	0x0328F08C BL 0x33BDD8C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0x114F000
	010 Move X25, 0xE97000
	011 Move X24, 0xE6F000
	012 Move X23, 0xE97000
	013 Move W8, [X22+1711]
	014 Move X25, [X25+1720]
	015 Move X24, [X24+2392]
	016 Move X23, [X23+1728]
	017 Move X20, X2
	018 Move X21, X1
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {35}
	024 Move X0, 0xE96000
	025 Move X0, [X0+1720]
	026 Call 0x1C17CF4
	027 Move X0, 0xE96000
	028 Move X0, [X0+1728]
	029 Call 0x1C17CF4
	030 Move X0, 0xE6E000
	031 Move X0, [X0+2392]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+1711], W8
	035 Move X0, [X25]
	036 Call 0x1C17F10
	037 Move X1, X21
	038 Move X2, X20
	039 Move X3, X31
	040 Move X22, X0
	041 Call AsyncRequest..ctor, X0, X1, X2
	042 Move X0, [X24]
	043 Call 0x1C17F10
	044 Move X2, [X23]
	045 Move X1, X19
	046 Move X3, X31
	047 Move X20, X0
	048 Call WaitCallback..ctor, X0, X1, X2
	049 Move X0, X20
	050 Move X1, X22
	051 Move X2, X31
	052 Call ThreadPool.QueueUserWorkItem, X0, X1
	053 Move X20, [X31+48]
	054 Move X19, [X31+56]
	055 Move X22, [X31+32]
	056 Move X21, [X31+40]
	057 Move X24, [X31+16]
	058 Move X23, [X31+24]
	059 Move X0, X31
	060 Move X30, [X31+64]
	061 Move X25, [X31+72]
	062 Return X0

Method: System.Void SendAsyncMessage(System.Object data)

Disassembly:
	0x0328F090 LDR X8, [X31 + 0x18]
	0x0328F094 STP X8, X22, [X21 + 0x10]
	0x0328F098 CBZ X20, 0x328F4BC
	0x0328F09C MOV W8, W31
	0x0328F0A0 STR X21, [X20 + 0x68]
	0x0328F0A4 B 0x328F494
	0x0328F0A8 MOV W28, W31
	0x0328F0AC B 0x328F0CC
	0x0328F0B0 LDRSW X9, [X10]
	0x0328F0B4 ADD X8, X8, X9, 0x4, LSL
	0x0328F0B8 ADD X0, X8, 0x138
	0x0328F0BC LDP X8, X1, [X0]
	0x0328F0C0 MOV X0, X25
	0x0328F0C4 BLR X8
	0x0328F0C8 CBNZ X27, 0x328F518
	0x0328F0CC LDR X8, [X24]
	0x0328F0D0 MOVZ W1, 0x1
	0x0328F0D4 MOV X0, X24
	0x0328F0D8 LDP X9, X2, [X8 + 0x1F8]
	0x0328F0DC BLR X9
	0x0328F0E0 CBZ X0, 0x328F4BC
	0x0328F0E4 LDR X8, [X0 + 0x18]
	0x0328F0E8 MOV X24, X0
	0x0328F0EC CMP W8, 0x1
	0x0328F0F0 B.LT 0x328F1FC
	0x0328F0F4 ADRP X21, 0xE95000
	0x0328F0F8 LDR X21, [X21 + 0x708]
	0x0328F0FC MOV X19, X31
	0x0328F100 AND X8, X8, 0x0
	0x0328F104 CMP X19, W8, UXTW
	0x0328F108 B.CS 0x328F4C0
	0x0328F10C ADD X8, X24, X19, 0x3, LSL
	0x0328F110 LDR X25, [X8 + 0x20]
	0x0328F114 LDR X1, [X21]
	0x0328F118 MOV X0, X25
	0x0328F11C BL 0x1C16E00
	0x0328F120 CBZ X0, 0x328F1EC
	0x0328F124 TBZ X28, 0x0, 0x328F198
	0x0328F128 CBZ X25, 0x328F4BC
	0x0328F12C LDR X26, [X21]
	0x0328F130 MOV X0, X25
	0x0328F134 MOV X1, X26
	0x0328F138 BL 0x1C16E00
	0x0328F13C CBZ X0, 0x328F508
	0x0328F140 LDR X27, [X21]
	0x0328F144 MOV X0, X25
	0x0328F148 MOV X1, X27
	0x0328F14C BL 0x1C16E00
	0x0328F150 CBZ X0, 0x328F4FC
	0x0328F154 LDR X8, [X0]
	0x0328F158 MOV X26, X0
	0x0328F15C LDRH W9, [X8 + 0x12E]
	0x0328F160 CBZ X9, 0x328F184
	0x0328F164 LDR X10, [X8 + 0xB0]
	0x0328F168 ADD X10, X10, 0x8
	0x0328F16C LDUR X11, [X10 - 0x8]
	0x0328F170 CMP X11, X27
	0x0328F174 B.EQ 0x328F1A0
	0x0328F178 SUBS X9, X9, 0x1
	0x0328F17C ADD X10, X10, 0x10
	0x0328F180 B.NE 0x328F16C
	0x0328F184 MOVZ W2, 0x1
	0x0328F188 MOV X0, X26
	0x0328F18C MOV X1, X27
	0x0328F190 BL 0x1C5C788
	0x0328F194 B 0x328F1B0
	0x0328F198 MOV W8, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x114E000
	006 Move W8, [X21+1712]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xE96000
	014 Move X0, [X0+1720]
	015 Call 0x1C17CF4
	016 Move X0, 0xE96000
	017 Move X0, [X0+952]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1712], W8
	021 Compare X19, 0
	022 JumpIfEqual {72}
	023 Move X9, 0xE96000
	024 Move X9, [X9+1720]
	025 Move X8, [X19]
	026 Move X1, [X9]
	027 Move W10, [X8+304]
	028 Move W9, [X1+304]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X8, [X8+200]
	031 Add X8, X8, X9
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X8, [X20]
	035 Move X1, [X19+24]
	036 Move X0, X20
	037 Move X9, [X8+408]
	038 Move X2, [X8+416]
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move X20, [X19+16]
	041 Compare X20, 0
	042 JumpIfEqual {72}
	043 Move X10, 0xE96000
	044 Move X8, [X20]
	045 Move X10, [X10+952]
	046 Move X19, X0
	047 NotImplemented "Instruction LDRH not yet implemented."
	048 Move X1, [X10]
	049 Compare X9, 0
	050 JumpIfEqual {57}
	051 Move X10, [X8+176]
	052 Add X10, X10, 8
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Subtract X9, X9, 1
	056 Add X10, X10, 16
	057 Move X0, X20
	058 Move W2, W31
	059 Call 0x1C5D788
	060 NotImplemented "Instruction LDRSW not yet implemented."
	061 Add X8, X8, X9
	062 Add X0, X8, 312
	063 Move X3, [X0]
	064 Move X2, [X0+8]
	065 Move X0, X20
	066 Move X1, X19
	067 Move X20, [X31+16]
	068 Move X19, [X31+24]
	069 Move X30, [X31+32]
	070 Move X21, [X31+40]
	071 CallNoReturn X3
	072 Call 0x1C17F20
	073 Move X0, X19
	074 Call 0x1C181E0

Method: System.Void .cctor()

Disassembly:
	0x0328F19C B 0x328F1C8
	0x0328F1A0 LDR W9, [X10]
	0x0328F1A4 ADD W9, W9, 0x1
	0x0328F1A8 ADD X8, X8, W9, 0x4, SXTW
	0x0328F1AC ADD X0, X8, 0x138
	0x0328F1B0 LDP X8, X3, [X0]
	0x0328F1B4 MOV X0, X26
	0x0328F1B8 MOV X1, X23
	0x0328F1BC MOV X2, X20
	0x0328F1C0 BLR X8
	0x0328F1C4 AND W8, W0, 0x1
	0x0328F1C8 CBZ X22, 0x328F4BC
	0x0328F1CC LDR X9, [X22]
	0x0328F1D0 CMP W8, 0x0
	0x0328F1D4 MOV X0, X22
	0x0328F1D8 MOV X1, X25
	0x0328F1DC LDR X10, [X9 + 0x308]
	0x0328F1E0 LDR X2, [X9 + 0x310]
	0x0328F1E4 CSET W28, NE
	0x0328F1E8 BLR X10
	0x0328F1EC LDR W8, [X24 + 0x18]
	0x0328F1F0 ADD X19, X19, 0x1
	0x0328F1F4 CMP X19, W8, SXTW
	0x0328F1F8 B.LT 0x328F104
	0x0328F1FC TBNZ X28, 0x0, 0x328F424
	0x0328F200 CBZ X22, 0x328F4BC
	0x0328F204 LDR X8, [X22]
	0x0328F208 MOV X0, X22
	0x0328F20C LDR X9, [X8 + 0x3F8]
	0x0328F210 LDR X1, [X8 + 0x400]
	0x0328F214 BLR X9
	0x0328F218 CBZ X20, 0x328F4BC
	0x0328F21C STR X0, [X20 + 0x70]
	0x0328F220 LDR X8, [X22]
	0x0328F224 MOV X0, X22
	0x0328F228 LDR X9, [X8 + 0x388]
	0x0328F22C LDR X1, [X8 + 0x390]
	0x0328F230 BLR X9
	0x0328F234 MOV X22, X0
	0x0328F238 CBZ X0, 0x328F520
	0x0328F23C ADRP X19, 0xE64000
	0x0328F240 ADRP X21, 0xE95000
	0x0328F244 LDR X19, [X19 + 0xE18]
	0x0328F248 LDR X21, [X21 + 0x708]
	0x0328F24C LDR X8, [X22]
	0x0328F250 LDR X1, [X19]
	0x0328F254 LDRH W9, [X8 + 0x12E]
	0x0328F258 CBZ X9, 0x328F27C
	0x0328F25C LDR X10, [X8 + 0xB0]
	0x0328F260 ADD X10, X10, 0x8
	0x0328F264 LDUR X11, [X10 - 0x8]
	0x0328F268 CMP X11, X1
	0x0328F26C B.EQ 0x328F28C
	0x0328F270 SUBS X9, X9, 0x1
	0x0328F274 ADD X10, X10, 0x10
	0x0328F278 B.NE 0x328F264
	0x0328F27C MOV X0, X22
	0x0328F280 MOV W2, W31
	0x0328F284 BL 0x1C5C788
	0x0328F288 B 0x328F298
	0x0328F28C LDRSW X9, [X10]
	0x0328F290 ADD X8, X8, X9, 0x4, LSL

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0x114E000
	008 Move X23, 0xE95000
	009 Move X20, 0xE96000
	010 Move X21, 0xE96000
	011 Move X22, 0xE65000
	012 Move W8, [X19+1713]
	013 Move X23, [X23+3512]
	014 Move X20, [X20+856]
	015 Move X21, [X21+1736]
	016 Move X22, [X22+1728]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {38}
	021 Move X0, 0xE96000
	022 Move X0, [X0+1736]
	023 Call 0x1C17CF4
	024 Move X0, 0xE96000
	025 Move X0, [X0+856]
	026 Call 0x1C17CF4
	027 Move X0, 0xE95000
	028 Move X0, [X0+3512]
	029 Call 0x1C17CF4
	030 Move X0, 0xE65000
	031 Move X0, [X0+1728]
	032 Call 0x1C17CF4
	033 Move X0, 0xE96000
	034 Move X0, [X0+1744]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X19+1713], W8
	038 Move X0, [X23]
	039 Call 0x1C17F10
	040 Move X1, X31
	041 Move X19, X0
	042 Call Hashtable..ctor, X0
	043 Move X8, [X20]
	044 Move X8, [X8+184]
	045 Move [X8], X19
	046 Move X0, [X22]
	047 Move X19, [X21]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X0, X19
	053 Move X1, X31
	054 Call Type.GetTypeFromHandle, X0
	055 Compare X0, 0
	056 JumpIfEqual {73}
	057 Move X8, 0xE96000
	058 Move X8, [X8+1744]
	059 Move W2, 40
	060 Move X3, X31
	061 Move X1, [X8]
	062 Call Type.GetMethod, X0, X1, X2
	063 Move X8, [X20]
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X22, [X31+16]
	067 Move X21, [X31+24]
	068 Move X8, [X8+184]
	069 Move [X8+8], X0
	070 Move X30, [X31+48]
	071 Move X23, [X31+56]
	072 Return 
	073 Call 0x1C17F20

Method: System.Void <AsyncProcessMessage>b__10_0(System.Object data)

Disassembly:
	0x0328F294 ADD X0, X8, 0x138
	0x0328F298 LDP X8, X1, [X0]
	0x0328F29C MOV X0, X22
	0x0328F2A0 BLR X8
	0x0328F2A4 TBZ X0, 0x0, 0x328F398
	0x0328F2A8 LDR X8, [X22]
	0x0328F2AC LDR X1, [X19]
	0x0328F2B0 LDRH W9, [X8 + 0x12E]
	0x0328F2B4 CBZ X9, 0x328F2D8
	0x0328F2B8 LDR X10, [X8 + 0xB0]
	0x0328F2BC ADD X10, X10, 0x8
	0x0328F2C0 LDUR X11, [X10 - 0x8]
	0x0328F2C4 CMP X11, X1
	0x0328F2C8 B.EQ 0x328F2E8
	0x0328F2CC SUBS X9, X9, 0x1
	0x0328F2D0 ADD X10, X10, 0x10
	0x0328F2D4 B.NE 0x328F2C0
	0x0328F2D8 MOVZ W2, 0x1
	0x0328F2DC MOV X0, X22
	0x0328F2E0 BL 0x1C5C788
	0x0328F2E4 B 0x328F2F8
	0x0328F2E8 LDR W9, [X10]
	0x0328F2EC ADD W9, W9, 0x1
	0x0328F2F0 ADD X8, X8, W9, 0x4, SXTW
	0x0328F2F4 ADD X0, X8, 0x138
	0x0328F2F8 LDP X8, X1, [X0]
	0x0328F2FC MOV X0, X22
	0x0328F300 BLR X8
	0x0328F304 MOV X25, X0
	0x0328F308 CBZ X0, 0x328F4D0
	0x0328F30C LDR X23, [X21]
	0x0328F310 MOV X0, X25

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Call CrossAppDomainSink.SendAsyncMessage, X0, X1
	004 Move X30, [X31+16]
	005 Move X19, [X31+24]
	006 Return 
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move X19, X0
	009 Move X0, X19
	010 Call 0x3EB2AD0
	011 Move X19, X0
	012 Move X0, 0xE6B000
	013 Move X0, [X0+3264]
	014 Call 0x1C17D08
	015 Move X8, [X19]
	016 Move X1, [X8]
	017 Call 0x1C18270
	018 Move TEMP, X0
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfNotEqual {26}
	022 Move X30, [X31+16]
	023 Move X19, [X31+24]
	024 Call 0x3EB2AE0
	025 Return 
	026 Move W0, 8
	027 Call 0x3EB2AF0
	028 Move X8, [X19]
	029 Move [X0], X8
	030 Move X1, 0xC26000
	031 Add X1, X1, 3672
	032 Move X2, X31
	033 Call 0x3EB2B00
	034 Move X19, X0
	035 Call 0x3EB2AE0
	036 Move X0, X19
	037 Call 0x1D2D690
	038 Call 0x1991590

