Type: System.Runtime.Remoting.TypeInfo

Method: System.Void .ctor(System.Type type)

Disassembly:
	0x032756A4 MOV X20, X31
	0x032756A8 LDRB W8, [X31 + 0xC]
	0x032756AC CBZ W8, 0x32756BC
	0x032756B0 MOV X0, X19
	0x032756B4 MOV X1, X31
	0x032756B8 BL 0x33E14E4
	0x032756BC CBNZ X20, 0x32757F4
	0x032756C0 LDP X20, X19, [X31 + 0x30]
	0x032756C4 LDP X22, X21, [X31 + 0x20]
	0x032756C8 LDP X30, X23, [X31 + 0x10]
	0x032756CC ADD X31, X31, 0x40
	0x032756D0 RET
	0x032756D4 ADRP X8, 0xEAE000
	0x032756D8 LDR X8, [X8 + 0xE80]
	0x032756DC LDR X0, [X8]
	0x032756E0 BL 0x1C16F10
	0x032756E4 MOV X21, X0
	0x032756E8 MOV X1, X31
	0x032756EC BL 0x320B2F4
	0x032756F0 MOV X0, X31
	0x032756F4 BL 0x33C2370
	0x032756F8 ADRP X8, 0xEAD000
	0x032756FC LDR X8, [X8 + 0xCC8]
	0x03275700 MOV X22, X0
	0x03275704 LDR X0, [X8]
	0x03275708 BL 0x1C16F10
	0x0327570C MOV X20, X0
	0x03275710 MOV X1, X22
	0x03275714 MOV X2, X31
	0x03275718 BL 0x32E6824
	0x0327571C ADRP X8, 0xEAE000
	0x03275720 LDR X8, [X8 + 0xE78]
	0x03275724 LDR X0, [X8]
	0x03275728 BL 0x1C16F10
	0x0327572C MOV X22, X0
	0x03275730 MOVZ W1, 0x1
	0x03275734 BL 0x3275938
	0x03275738 CBZ X21, 0x32757FC
	0x0327573C MOV X0, X21
	0x03275740 MOV X1, X20
	0x03275744 MOV X2, X22
	0x03275748 MOV X3, X31
	0x0327574C BL 0x320B488
	0x03275750 MOV X21, X31
	0x03275754 MOVZ W22, 0x5
	0x03275758 CBZ X20, 0x32757BC
	0x0327575C ADRP X10, 0xE7E000
	0x03275760 LDR X8, [X20]
	0x03275764 LDR X10, [X10 + 0xE00]
	0x03275768 LDRH W9, [X8 + 0x12E]
	0x0327576C LDR X1, [X10]
	0x03275770 CBZ X9, 0x3275794
	0x03275774 LDR X10, [X8 + 0xB0]
	0x03275778 ADD X10, X10, 0x8
	0x0327577C LDUR X11, [X10 - 0x8]
	0x03275780 CMP X11, X1
	0x03275784 B.EQ 0x32757A4
	0x03275788 SUBS X9, X9, 0x1
	0x0327578C ADD X10, X10, 0x10
	0x03275790 B.NE 0x327577C
	0x03275794 MOV X0, X20
	0x03275798 MOV W2, W31
	0x0327579C BL 0x1C5C788
	0x032757A0 B 0x32757B0
	0x032757A4 LDRSW X9, [X10]
	0x032757A8 ADD X8, X8, X9, 0x4, LSL
	0x032757AC ADD X0, X8, 0x138
	0x032757B0 LDP X8, X1, [X0]
	0x032757B4 MOV X0, X20
	0x032757B8 BLR X8
	0x032757BC CBNZ X21, 0x3275800
	0x032757C0 CMP W22, 0x5
	0x032757C4 B.EQ 0x32757CC
	0x032757C8 CBNZ W22, 0x32756A4
	0x032757CC LDR X0, [X23]
	0x032757D0 LDR W8, [X0 + 0xE0]
	0x032757D4 CBNZ W8, 0x32757E0
	0x032757D8 BL 0x1C16DFC
	0x032757DC LDR X0, [X23]
	0x032757E0 LDR X8, [X0 + 0xB8]
	0x032757E4 MOVZ W9, 0x1
	0x032757E8 MOV X20, X31
	0x032757EC STRB W9, [X8 + 0x19]
	0x032757F0 B 0x32756A8
	0x032757F4 MOV X0, X20
	0x032757F8 BL 0x1C16F18
	0x032757FC BL 0x1C16F20
	0x03275800 MOV X0, X21
	0x03275804 BL 0x1C16F18
	0x03275808 B 0x32758DC
	0x0327580C B 0x32758DC
	0x03275810 B 0x3275814
	0x03275814 MOV X22, X1
	0x03275818 MOV X21, X0
	0x0327581C CMP W22, 0x1
	0x03275820 B.NE 0x3275848
	0x03275824 MOV X0, X21
	0x03275828 BL 0x3EB1AD0
	0x0327582C LDR X8, [X0]
	0x03275830 STR X8, [X31]
	0x03275834 BL 0x3EB1AE0
	0x03275838 LDR X21, [X31]
	0x0327583C MOV W22, W31
	0x03275840 CBNZ X20, 0x327575C
	0x03275844 B 0x32757BC
	0x03275848 STR X31, [X31]
	0x0327584C CBZ X20, 0x32758B0
	0x03275850 ADRP X10, 0xE7E000
	0x03275854 LDR X8, [X20]
	0x03275858 LDR X10, [X10 + 0xE00]
	0x0327585C LDRH W9, [X8 + 0x12E]
	0x03275860 LDR X1, [X10]
	0x03275864 CBZ X9, 0x3275888
	0x03275868 LDR X10, [X8 + 0xB0]
	0x0327586C ADD X10, X10, 0x8
	0x03275870 LDUR X11, [X10 - 0x8]
	0x03275874 CMP X11, X1
	0x03275878 B.EQ 0x3275898
	0x0327587C SUBS X9, X9, 0x1
	0x03275880 ADD X10, X10, 0x10
	0x03275884 B.NE 0x3275870
	0x03275888 MOV X0, X20
	0x0327588C MOV W2, W31
	0x03275890 BL 0x1C5C788
	0x03275894 B 0x32758A4
	0x03275898 LDRSW X9, [X10]
	0x0327589C ADD X8, X8, X9, 0x4, LSL
	0x032758A0 ADD X0, X8, 0x138
	0x032758A4 LDP X8, X1, [X0]
	0x032758A8 MOV X0, X20
	0x032758AC BLR X8
	0x032758B0 LDR X8, [X31]
	0x032758B4 CBZ X8, 0x32758E4
	0x032758B8 LDR X0, [X31]
	0x032758BC BL 0x1C16F18
	0x032758C0 MOV X22, X1
	0x032758C4 MOV X21, X0
	0x032758C8 CBNZ X20, 0x3275850
	0x032758CC B 0x32758B0
	0x032758D0 B 0x32758DC
	0x032758D4 B 0x32758DC
	0x032758D8 B 0x32758DC
	0x032758DC MOV X22, X1
	0x032758E0 MOV X21, X0
	0x032758E4 CMP W22, 0x1
	0x032758E8 B.NE 0x3275900
	0x032758EC MOV X0, X21
	0x032758F0 BL 0x3EB1AD0
	0x032758F4 LDR X20, [X0]
	0x032758F8 BL 0x3EB1AE0
	0x032758FC B 0x32756A8
	0x03275900 MOV X20, X31
	0x03275904 B 0x327590C
	0x03275908 MOV X21, X0
	0x0327590C LDRB W8, [X31 + 0xC]
	0x03275910 CBZ W8, 0x3275920
	0x03275914 MOV X0, X19
	0x03275918 MOV X1, X31
	0x0327591C BL 0x33E14E4
	0x03275920 CBNZ X20, 0x327592C
	0x03275924 MOV X0, X21
	0x03275928 BL 0x1D2C690
	0x0327592C MOV X0, X20
	0x03275930 BL 0x1C16F18
	0x03275934 BL 0x1990590
	0x03275938 STP X30, X23, [X31 - 0x30]!
	0x0327593C STP X22, X21, [X31 + 0x10]
	0x03275940 STP X20, X19, [X31 + 0x20]
	0x03275944 ADRP X23, 0x1167000
	0x03275948 ADRP X22, 0xEAB000
	0x0327594C ADRP X21, 0xE7E000
	0x03275950 LDRB W8, [X23 + 0x5EC]
	0x03275954 LDR X22, [X22 + 0xBA0]
	0x03275958 LDR X21, [X21 + 0x988]
	0x0327595C MOV W20, W1
	0x03275960 MOV X19, X0
	0x03275964 TBNZ X8, 0x0, 0x3275988
	0x03275968 ADRP X0, 0xEAB000
	0x0327596C LDR X0, [X0 + 0xBA0]
	0x03275970 BL 0x1C16CF4
	0x03275974 ADRP X0, 0xE7E000
	0x03275978 LDR X0, [X0 + 0x988]
	0x0327597C BL 0x1C16CF4
	0x03275980 MOVZ W8, 0x1
	0x03275984 STRB W8, [X23 + 0x5EC]
	0x03275988 LDR X0, [X22]
	0x0327598C AND W23, W20, 0x1
	0x03275990 BL 0x1C16F10
	0x03275994 MOV X1, X31
	0x03275998 MOV X20, X0
	0x0327599C BL 0x3351F5C
	0x032759A0 STR X20, [X19 + 0x10]
	0x032759A4 LDR X0, [X22]
	0x032759A8 BL 0x1C16F10
	0x032759AC MOV X1, X31
	0x032759B0 MOV X20, X0
	0x032759B4 BL 0x3351F5C
	0x032759B8 STR X20, [X19 + 0x18]
	0x032759BC LDR X8, [X21]
	0x032759C0 MOV X0, X19
	0x032759C4 MOV X1, X31
	0x032759C8 STR X8, [X19 + 0x40]
	0x032759CC BL 0x33BDD8C
	0x032759D0 STRB W23, [X19 + 0x48]
	0x032759D4 LDP X20, X19, [X31 + 0x20]
	0x032759D8 LDP X22, X21, [X31 + 0x10]
	0x032759DC LDP X30, X23, [X31], #0x30
	0x032759E0 RET
	0x032759E4 SUB X31, X31, 0x30
	0x032759E8 STP X30, X21, [X31 + 0x10]
	0x032759EC STP X20, X19, [X31 + 0x20]
	0x032759F0 ADRP X19, 0x1167000
	0x032759F4 ADRP X21, 0xEAE000
	0x032759F8 LDRB W8, [X19 + 0x5DD]
	0x032759FC LDR X21, [X21 + 0xDE0]
	0x03275A00 MOV X20, X0
	0x03275A04 TBNZ X8, 0x0, 0x3275A1C
	0x03275A08 ADRP X0, 0xEAE000
	0x03275A0C LDR X0, [X0 + 0xDE0]
	0x03275A10 BL 0x1C16CF4
	0x03275A14 MOVZ W8, 0x1
	0x03275A18 STRB W8, [X19 + 0x5DD]
	0x03275A1C LDR X0, [X21]
	0x03275A20 LDR W8, [X0 + 0xE0]
	0x03275A24 CBNZ W8, 0x3275A30
	0x03275A28 BL 0x1C16DFC
	0x03275A2C LDR X0, [X21]
	0x03275A30 LDR X8, [X0 + 0xB8]
	0x03275A34 LDR X19, [X8 + 0x40]
	0x03275A38 STRB W31, [X31 + 0xC]
	0x03275A3C ADD X1, X31, 0xC
	0x03275A40 MOV X0, X19
	0x03275A44 MOV X2, X31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x1168000
	010 Move W8, [X21+1609]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0xEAF000
	018 Move X0, [X0+3584]
	019 Call 0x1C17CF4
	020 Move X0, 0xE7F000
	021 Move X0, [X0+2760]
	022 Call 0x1C17CF4
	023 Move X0, 0xE7F000
	024 Move X0, [X0+1728]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+1609], W8
	028 Move X0, X19
	029 Move X1, X31
	030 Call Object..ctor, X0
	031 Compare X20, 0
	032 JumpIfEqual {256}
	033 Move X0, X20
	034 Move X1, X31
	035 Call Type.get_IsInterface, X0
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {117}
	040 Move X8, 0xE7F000
	041 Move X8, [X8+1728]
	042 Move X0, [X8]
	043 Move X8, 0xEAF000
	044 Move X8, [X8+3584]
	045 Move W9, [X0+224]
	046 Move X21, [X8]
	047 Compare W9, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, X21
	051 Move X1, X31
	052 Call Type.GetTypeFromHandle, X0
	053 Compare X0, 0
	054 JumpIfEqual {256}
	055 Move X8, [X0]
	056 Move X9, [X8+728]
	057 Move X1, [X8+736]
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move [X19+16], X0
	060 Move X22, 0xE7F000
	061 Move X22, [X22+2760]
	062 Move W1, W31
	063 Move X0, [X22]
	064 Call 0x1C17D6C
	065 Move [X19+24], X0
	066 Move X8, [X20]
	067 Move X0, X20
	068 Move X9, [X8+2136]
	069 Move X1, [X8+2144]
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Compare X0, 0
	072 JumpIfEqual {256}
	073 Move W8, [X0+24]
	074 Move X21, X0
	075 Move X0, [X22]
	076 Add W1, W8, 1
	077 Call 0x1C17D6C
	078 Move [X19+32], X0
	079 Move W8, [X21+24]
	080 Move X22, X0
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move W23, 4
	083 Subtract X24, X23, 4
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X0, [X21]
	086 Compare X0, 0
	087 JumpIfEqual {256}
	088 Move X8, [X0]
	089 Move X9, [X8+728]
	090 Move X1, [X8+736]
	091 NotImplemented "Instruction BLR not yet implemented."
	092 Compare X22, 0
	093 JumpIfEqual {256}
	094 Move W8, [X22+24]
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move [X22], X0
	097 Move W8, [X21+24]
	098 Move X22, [X19+32]
	099 Add X23, X23, 1
	100 Subtract W9, W23, 4
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X8, [X20]
	103 Move X0, X20
	104 Move X9, [X8+728]
	105 Move X1, [X8+736]
	106 NotImplemented "Instruction BLR not yet implemented."
	107 Compare X22, 0
	108 JumpIfEqual {256}
	109 Move X8, [X21+24]
	110 Move W9, [X22+24]
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move X8, X8
	113 ShiftRight X8, 32
	114 And X8, X8, 0x7FFFFFFF
	115 Add X8, X22, X8
	116 Move [X8+32], X0
	117 Move X8, [X20]
	118 Move X0, X20
	119 Move X9, [X8+728]
	120 Move X1, [X8+736]
	121 NotImplemented "Instruction BLR not yet implemented."
	122 Move [X19+16], X0
	123 Move X8, [X20]
	124 Move X0, X20
	125 Move X9, [X8+2072]
	126 Move X1, [X8+2080]
	127 NotImplemented "Instruction BLR not yet implemented."
	128 Move X24, 0xEAF000
	129 Move X25, 0xE7F000
	130 Move X24, [X24+3584]
	131 Move X25, [X25+1728]
	132 Move X22, X0
	133 Move W21, W31
	134 Move X0, [X25]
	135 Move X23, [X24]
	136 Move W8, [X0+224]
	137 Compare W8, 0
	138 JumpIfNotEqual {140}
	139 Call 0x1C17DFC
	140 Move X0, X23
	141 Move X1, X31
	142 Call Type.GetTypeFromHandle, X0
	143 Move X1, X0
	144 Move X0, X22
	145 Move X2, X31
	146 Call Type.op_Inequality, X0, X1
	147 Move TEMP, X0
	148 And TEMP, TEMP, 1
	149 Compare TEMP, 1
	150 JumpIfNotEqual {173}
	151 Move X0, [X25]
	152 Move W8, [X0+224]
	153 Compare W8, 0
	154 JumpIfNotEqual {156}
	155 Call 0x1C17DFC
	156 Move X0, X22
	157 Move X1, X31
	158 Move X2, X31
	159 Call Type.op_Inequality, X0, X1
	160 Move TEMP, X0
	161 And TEMP, TEMP, 1
	162 Compare TEMP, 1
	163 JumpIfNotEqual {173}
	164 Compare X22, 0
	165 JumpIfEqual {256}
	166 Move X8, [X22]
	167 Move X0, X22
	168 Move X9, [X8+2072]
	169 Move X1, [X8+2080]
	170 NotImplemented "Instruction BLR not yet implemented."
	171 Move X22, X0
	172 Add W21, W21, 1
	173 Move X23, 0xE7F000
	174 Move X23, [X23+2760]
	175 Move W1, W21
	176 Move X0, [X23]
	177 Call 0x1C17D6C
	178 Move [X19+24], X0
	179 Move X8, [X20]
	180 Move X0, X20
	181 Move X9, [X8+2072]
	182 Move X1, [X8+2080]
	183 NotImplemented "Instruction BLR not yet implemented."
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Move X22, X0
	186 Move X24, X31
	187 Move W21, W21
	188 Compare X22, 0
	189 JumpIfEqual {256}
	190 Move X8, [X22]
	191 Move X25, [X19+24]
	192 Move X0, X22
	193 Move X9, [X8+728]
	194 Move X1, [X8+736]
	195 NotImplemented "Instruction BLR not yet implemented."
	196 Compare X25, 0
	197 JumpIfEqual {256}
	198 Move W8, [X25+24]
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Add X8, X25, X24
	201 Move [X8+32], X0
	202 Move X8, [X22]
	203 Move X0, X22
	204 Move X9, [X8+2072]
	205 Move X1, [X8+2080]
	206 NotImplemented "Instruction BLR not yet implemented."
	207 Add X24, X24, 1
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Move X22, X0
	210 Move X8, [X20]
	211 Move X0, X20
	212 Move X9, [X8+2136]
	213 Move X1, [X8+2144]
	214 NotImplemented "Instruction BLR not yet implemented."
	215 Compare X0, 0
	216 JumpIfEqual {256}
	217 Move X20, X0
	218 Move X0, [X23]
	219 Move W1, [X20+24]
	220 Call 0x1C17D6C
	221 Move [X19+32], X0
	222 Move W8, [X20+24]
	223 NotImplemented "Instruction CMP not yet implemented."
	224 Move X21, X0
	225 Move W22, 4
	226 Move X0, [X20]
	227 Compare X0, 0
	228 JumpIfEqual {256}
	229 Move X8, [X0]
	230 Move X9, [X8+728]
	231 Move X1, [X8+736]
	232 NotImplemented "Instruction BLR not yet implemented."
	233 Compare X21, 0
	234 JumpIfEqual {256}
	235 Move W8, [X21+24]
	236 Subtract X9, X22, 4
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Move [X21], X0
	239 Move W8, [X20+24]
	240 Subtract W9, W22, 3
	241 NotImplemented "Instruction CMP not yet implemented."
	242 Move X21, [X19+32]
	243 Add X22, X22, 1
	244 Subtract W9, W22, 4
	245 NotImplemented "Instruction CMP not yet implemented."
	246 Call 0x1C17F28
	247 Move X20, [X31+48]
	248 Move X19, [X31+56]
	249 Move X22, [X31+32]
	250 Move X21, [X31+40]
	251 Move X24, [X31+16]
	252 Move X23, [X31+24]
	253 Move X30, [X31+64]
	254 Move X25, [X31+72]
	255 Return 
	256 Call 0x1C17F20

Method: System.String get_TypeName()

Disassembly:
	0x032859A0 ADD X10, X10, 0x8
	0x032859A4 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Boolean CanCastTo(System.Type fromType, System.Object o)

Disassembly:
	0x032859A8 CMP X11, X1
	0x032859AC B.EQ 0x32859C0
	0x032859B0 SUBS X9, X9, 0x1
	0x032859B4 ADD X10, X10, 0x10
	0x032859B8 B.NE 0x32859A4
	0x032859BC B 0x3285918
	0x032859C0 LDR W9, [X10]
	0x032859C4 ADD W9, W9, 0x1
	0x032859C8 ADD X8, X8, W9, 0x4, SXTW
	0x032859CC ADD X0, X8, 0x138
	0x032859D0 LDP X8, X1, [X0]
	0x032859D4 MOV X0, X22
	0x032859D8 BLR X8
	0x032859DC STR X0, [X21]
	0x032859E0 LDR X8, [X22]
	0x032859E4 LDR X1, [X27]
	0x032859E8 LDRH W9, [X8 + 0x12E]
	0x032859EC CBZ X9, 0x3285A10
	0x032859F0 LDR X10, [X8 + 0xB0]
	0x032859F4 ADD X10, X10, 0x8
	0x032859F8 LDUR X11, [X10 - 0x8]
	0x032859FC CMP X11, X1
	0x03285A00 B.EQ 0x3285A20
	0x03285A04 SUBS X9, X9, 0x1
	0x03285A08 ADD X10, X10, 0x10
	0x03285A0C B.NE 0x32859F8
	0x03285A10 MOVZ W2, 0x2
	0x03285A14 MOV X0, X22
	0x03285A18 BL 0x1C5C788
	0x03285A1C B 0x3285A30
	0x03285A20 LDR W9, [X10]
	0x03285A24 ADD W9, W9, 0x2
	0x03285A28 ADD X8, X8, W9, 0x4, SXTW
	0x03285A2C ADD X0, X8, 0x138
	0x03285A30 LDP X2, X1, [X0]
	0x03285A34 MOV X0, X22
	0x03285A38 LDP X20, X19, [X31 + 0x50]
	0x03285A3C LDP X22, X21, [X31 + 0x40]
	0x03285A40 LDP X24, X23, [X31 + 0x30]
	0x03285A44 LDP X26, X25, [X31 + 0x20]
	0x03285A48 LDP X28, X27, [X31 + 0x10]
	0x03285A4C LDP X29, X30, [X31], #0x60
	0x03285A50 BR X2
	0x03285A54 MOV X0, X20
	0x03285A58 BL 0x1C171E0
	0x03285A5C STR X31, [X21]
	0x03285A60 LDR X19, [X28]
	0x03285A64 MOV X0, X19
	0x03285A68 BL 0x19903C0
	0x03285A6C MOV X0, X19
	0x03285A70 MOV X1, X31
	0x03285A74 BL 0x33B3C70
	0x03285A78 MOV X19, X0
	0x03285A7C ADRP X0, 0xE9F000
	0x03285A80 LDR X0, [X0 + 0x468]
	0x03285A84 BL 0x1C16D08
	0x03285A88 MOV X1, X0
	0x03285A8C MOV X0, X19
	0x03285A90 BL 0x1C16DEC
	0x03285A94 MOV X0, X20
	0x03285A98 MOV X1, X22
	0x03285A9C BL 0x1C171E0
	0x03285AA0 MOV X22, X0
	0x03285AA4 MOV X25, X20
	0x03285AA8 B 0x3285AB0
	0x03285AAC MOV X22, X0
	0x03285AB0 CMP W1, 0x1
	0x03285AB4 B.NE 0x3285BDC
	0x03285AB8 MOV X0, X22
	0x03285ABC BL 0x3EB1AD0
	0x03285AC0 MOV X22, X0
	0x03285AC4 ADRP X0, 0xE6E000
	0x03285AC8 LDR X0, [X0 + 0x7D0]
	0x03285ACC BL 0x1C16D08
	0x03285AD0 LDR X8, [X22]
	0x03285AD4 LDR X1, [X8]
	0x03285AD8 BL 0x1C17270
	0x03285ADC TBZ X0, 0x0, 0x3285BAC
	0x03285AE0 LDR X24, [X22]
	0x03285AE4 BL 0x3EB1AE0
	0x03285AE8 CMP W23, 0x1
	0x03285AEC B.NE 0x3285BCC
	0x03285AF0 ADRP X0, 0xE9F000
	0x03285AF4 LDR X22, [X20 + 0x48]
	0x03285AF8 LDR X0, [X0 + 0x280]
	0x03285AFC BL 0x1C16D08
	0x03285B00 BL 0x1C16F10
	0x03285B04 MOV X23, X0
	0x03285B08 ADRP X0, 0xE9F000
	0x03285B0C LDR X0, [X0 + 0x458]
	0x03285B10 BL 0x1C16D08
	0x03285B14 MOV X1, X0
	0x03285B18 MOV X0, X25
	0x03285B1C BL 0x1C16E00
	0x03285B20 MOV X2, X0
	0x03285B24 MOV X0, X23
	0x03285B28 MOV X1, X24
	0x03285B2C MOV X3, X31
	0x03285B30 BL 0x328EBC0
	0x03285B34 CBZ X22, 0x3285BA8
	0x03285B38 LDR X8, [X22]
	0x03285B3C MOV X0, X22
	0x03285B40 MOV X1, X23
	0x03285B44 LDR X9, [X8 + 0x288]
	0x03285B48 LDR X2, [X8 + 0x290]
	0x03285B4C BLR X9
	0x03285B50 ADRP X0, 0xE9F000
	0x03285B54 LDR X0, [X0 + 0x280]
	0x03285B58 BL 0x1C16D08
	0x03285B5C BL 0x1C16F10
	0x03285B60 MOV X22, X0
	0x03285B64 ADRP X0, 0xE9F000
	0x03285B68 LDR X0, [X0 + 0x458]
	0x03285B6C BL 0x1C16D08
	0x03285B70 MOV X1, X0
	0x03285B74 MOV X0, X25
	0x03285B78 BL 0x1C16E00
	0x03285B7C MOV X5, X0
	0x03285B80 MOV X0, X22
	0x03285B84 MOV X1, X31
	0x03285B88 MOV X2, X31
	0x03285B8C MOV W3, W31
	0x03285B90 MOV X4, X31
	0x03285B94 MOV X6, X31
	0x03285B98 BL 0x329DB68
	0x03285B9C ADRP X27, 0xE9F000
	0x03285BA0 LDR X27, [X27 + 0x460]
	0x03285BA4 CBNZ X22, 0x3285708
	0x03285BA8 BL 0x1C16F20
	0x03285BAC MOVZ W0, 0x8
	0x03285BB0 BL 0x3EB1AF0
	0x03285BB4 LDR X8, [X22]
	0x03285BB8 STR X8, [X0]
	0x03285BBC ADRP X1, 0xC2F000
	0x03285BC0 ADD X1, X1, 0xE58
	0x03285BC4 MOV X2, X31
	0x03285BC8 BL 0x3EB1B00
	0x03285BCC MOV X0, X24
	0x03285BD0 BL 0x1C16F18
	0x03285BD4 MOV X22, X0
	0x03285BD8 BL 0x3EB1AE0
	0x03285BDC MOV X0, X22
	0x03285BE0 BL 0x1D2C690
	0x03285BE4 BL 0x1990590
	0x03285BE8 SUB X31, X31, 0x50
	0x03285BEC STP X30, X23, [X31 + 0x20]
	0x03285BF0 STP X22, X21, [X31 + 0x30]
	0x03285BF4 STP X20, X19, [X31 + 0x40]
	0x03285BF8 ADRP X23, 0x1157000
	0x03285BFC LDRB W8, [X23 + 0x656]
	0x03285C00 MOV X20, X3
	0x03285C04 MOV X21, X2
	0x03285C08 MOV X22, X1
	0x03285C0C MOV X19, X0
	0x03285C10 TBNZ X8, 0x0, 0x3285C58
	0x03285C14 ADRP X0, 0xE9F000
	0x03285C18 LDR X0, [X0 + 0x430]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x1158000
	009 Move X21, 0xE79000
	010 Move X22, 0xE6F000
	011 Move W8, [X23+1610]
	012 Move X21, [X21+2408]
	013 Move X22, [X22+1728]
	014 Move X20, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0xE9F000
	021 Move X0, [X0+3584]
	022 Call 0x1C17CF4
	023 Move X0, 0xE79000
	024 Move X0, [X0+2408]
	025 Call 0x1C17CF4
	026 Move X0, 0xE6F000
	027 Move X0, [X0+1728]
	028 Call 0x1C17CF4
	029 Move X0, 0xE71000
	030 Move X0, [X0+928]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X23+1610], W8
	034 Move X0, [X22]
	035 Move X21, [X21]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X21
	041 Move X1, X31
	042 Call Type.GetTypeFromHandle, X0
	043 Move X1, X0
	044 Move X0, X20
	045 Move X2, X31
	046 Call Type.op_Equality, X0, X1
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {117}
	051 Move X8, 0xE9F000
	052 Move X0, [X22]
	053 Move X8, [X8+3584]
	054 Move W9, [X0+224]
	055 Move X21, [X8]
	056 Compare W9, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move X0, X21
	060 Move X1, X31
	061 Call Type.GetTypeFromHandle, X0
	062 Move X1, X0
	063 Move X0, X20
	064 Move X2, X31
	065 Call Type.op_Equality, X0, X1
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfEqual {117}
	070 Compare X20, 0
	071 JumpIfEqual {178}
	072 Move X8, [X20]
	073 Move X0, X20
	074 Move X9, [X8+728]
	075 Move X1, [X8+736]
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Compare X0, 0
	078 JumpIfEqual {178}
	079 Move W1, 44
	080 Move X2, X31
	081 Move X20, X0
	082 Call String.IndexOf, X0, X1
	083 Add W31, W0, 1
	084 Add W2, W0, 1
	085 Move W1, 44
	086 Move X0, X20
	087 Move X3, X31
	088 Call String.IndexOf, X0, X1, X2
	089 Add W31, W0, 1
	090 Add W2, W0, 1
	091 Move X0, X20
	092 Move W1, W31
	093 Move X3, X31
	094 Call String.Substring, X0, X1, X2
	095 Move X8, 0xE71000
	096 Move X8, [X8+928]
	097 Move X0, X20
	098 Move X2, X31
	099 Move X1, [X8]
	100 Call String.Concat, X0, X1
	101 Move X21, 0xE71000
	102 Move X20, X0
	103 Move X0, [X19+16]
	104 Move X21, [X21+928]
	105 Move X2, X31
	106 Move X1, [X21]
	107 Call String.Concat, X0, X1
	108 Compare X0, 0
	109 JumpIfEqual {178}
	110 Move X1, X20
	111 Move X2, X31
	112 Call String.StartsWith, X0, X1
	113 Move TEMP, X0
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfNotEqual {127}
	117 Move W0, 1
	118 Move X20, [X31+48]
	119 Move X19, [X31+56]
	120 Move X22, [X31+32]
	121 Move X21, [X31+40]
	122 Move X24, [X31+16]
	123 Move X23, [X31+24]
	124 And W0, W0, 1
	125 Move X30, [X31+64]
	126 Return X0
	127 Move X22, [X19+24]
	128 Compare X22, 0
	129 JumpIfEqual {152}
	130 Move X8, [X22+24]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X23, X31
	133 And X8, X8, 0
	134 Add X24, X22, 32
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move X0, [X24]
	137 Move X1, [X21]
	138 Move X2, X31
	139 Call String.Concat, X0, X1
	140 Compare X0, 0
	141 JumpIfEqual {178}
	142 Move X1, X20
	143 Move X2, X31
	144 Call String.StartsWith, X0, X1
	145 Move TEMP, X0
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfEqual {117}
	149 Move W8, [X22+24]
	150 Add X23, X23, 1
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move X19, [X19+32]
	153 Compare X19, 0
	154 JumpIfEqual {177}
	155 Move X8, [X19+24]
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Move X22, X31
	158 And X8, X8, 0
	159 Add X23, X19, 32
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Move X0, [X23]
	162 Move X1, [X21]
	163 Move X2, X31
	164 Call String.Concat, X0, X1
	165 Compare X0, 0
	166 JumpIfEqual {178}
	167 Move X1, X20
	168 Move X2, X31
	169 Call String.StartsWith, X0, X1
	170 Move TEMP, X0
	171 And TEMP, TEMP, 1
	172 Compare TEMP, 1
	173 JumpIfEqual {118}
	174 Move W8, [X19+24]
	175 Add X22, X22, 1
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Move W0, W31
	178 Call 0x1C17F20
	179 Call 0x1C17F28

