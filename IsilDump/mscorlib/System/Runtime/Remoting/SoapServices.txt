Type: System.Runtime.Remoting.SoapServices

Method: System.String get_XmlNsForClrTypeWithAssembly()

Disassembly:
	0x032850F4 MOV X20, X0
	0x032850F8 MOV X0, X19
	0x032850FC BL 0x3285014
	0x03285100 TBZ X0, 0x0, 0x328512C
	0x03285104 LDR X8, [X19 + 0x10]
	0x03285108 CBZ X8, 0x32852B0
	0x0328510C CBZ X20, 0x32852B0
	0x03285110 LDR X9, [X20]
	0x03285114 LDR X1, [X8 + 0x20]
	0x03285118 MOV X0, X20
	0x0328511C LDR X8, [X9 + 0x2C8]
	0x03285120 LDR X2, [X9 + 0x2D0]
	0x03285124 BLR X8
	0x03285128 B 0x328529C
	0x0328512C ADRP X8, 0xE6E000
	0x03285130 LDR X8, [X8 + 0x6C0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x1158000
	005 Move X20, 0xEA0000
	006 Move W8, [X19+1593]
	007 Move X20, [X20+1024]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xEA0000
	013 Move X0, [X0+1024]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1593], W8
	017 Move X0, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Return X0

Method: System.String get_XmlNsForClrTypeWithNs()

Disassembly:
	0x03285134 LDR X0, [X8]
	0x03285138 LDR W8, [X0 + 0xE0]
	0x0328513C CBNZ W8, 0x3285144
	0x03285140 BL 0x1C16DFC
	0x03285144 MOV X0, X21
	0x03285148 MOV X1, X31
	0x0328514C BL 0x338C698
	0x03285150 CBZ X0, 0x32852B0
	0x03285154 LDR X8, [X0]
	0x03285158 LDR X9, [X8 + 0x2E8]
	0x0328515C LDR X1, [X8 + 0x2F0]
	0x03285160 BLR X9
	0x03285164 CBZ X20, 0x32852B0
	0x03285168 LDR X8, [X20]
	0x0328516C MOV X22, X0
	0x03285170 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x1158000
	005 Move X20, 0xEA0000
	006 Move W8, [X19+1594]
	007 Move X20, [X20+1032]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xEA0000
	013 Move X0, [X0+1032]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1594], W8
	017 Move X0, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Return X0

Method: System.String get_XmlNsForClrTypeWithNsAndAssembly()

Disassembly:
	0x03285174 LDP X9, X1, [X8 + 0x1A8]
	0x03285178 BLR X9
	0x0328517C ADRP X23, 0xE6E000
	0x03285180 LDR X23, [X23 + 0x9D0]
	0x03285184 MOV X21, X0
	0x03285188 MOVZ W1, 0x2
	0x0328518C LDR X8, [X23]
	0x03285190 MOV X0, X8
	0x03285194 BL 0x1C16D6C
	0x03285198 CBZ X0, 0x32852B0
	0x0328519C MOV X20, X0
	0x032851A0 CBZ X22, 0x32851B8
	0x032851A4 LDR X8, [X20]
	0x032851A8 MOV X0, X22
	0x032851AC LDR X1, [X8 + 0x40]
	0x032851B0 BL 0x1C16E00

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x1158000
	005 Move X20, 0xEA0000
	006 Move W8, [X19+1595]
	007 Move X20, [X20+1040]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xEA0000
	013 Move X0, [X0+1040]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1595], W8
	017 Move X0, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Return X0

Method: System.String CodeXmlNamespaceForClrTypeNamespace(System.String typeNamespace, System.String assemblyName)

Disassembly:
	0x032851B4 CBZ X0, 0x32852B8
	0x032851B8 LDR W8, [X20 + 0x18]
	0x032851BC CBZ W8, 0x32852B4
	0x032851C0 STR X22, [X20 + 0x20]
	0x032851C4 CBZ X21, 0x32851E0
	0x032851C8 LDR X8, [X20]
	0x032851CC MOV X0, X21
	0x032851D0 LDR X1, [X8 + 0x40]
	0x032851D4 BL 0x1C16E00
	0x032851D8 CBZ X0, 0x32852B8
	0x032851DC LDR W8, [X20 + 0x18]
	0x032851E0 CMP W8, 0x1
	0x032851E4 B.LS 0x32852B4
	0x032851E8 STR X21, [X20 + 0x28]
	0x032851EC LDR X0, [X23]
	0x032851F0 MOVZ W1, 0x1
	0x032851F4 BL 0x1C16D6C
	0x032851F8 ADRP X8, 0xE78000
	0x032851FC LDR X8, [X8 + 0x968]
	0x03285200 MOV X21, X0
	0x03285204 MOV X1, X31
	0x03285208 LDR X8, [X8]
	0x0328520C MOV X0, X8
	0x03285210 BL 0x338C698
	0x03285214 CBZ X0, 0x32852B0
	0x03285218 ADRP X8, 0xE9F000
	0x0328521C LDR X8, [X8 + 0x258]
	0x03285220 MOVZ W2, 0x24
	0x03285224 MOV X3, X31
	0x03285228 LDR X1, [X8]
	0x0328522C BL 0x3397600
	0x03285230 MOV X1, X31
	0x03285234 MOV X2, X31
	0x03285238 MOV X22, X0
	0x0328523C BL 0x32C2354
	0x03285240 TBNZ X0, 0x0, 0x32852C4
	0x03285244 ADRP X8, 0xE9F000
	0x03285248 LDR X8, [X8 + 0x430]
	0x0328524C LDR X0, [X8]
	0x03285250 BL 0x1C16F10
	0x03285254 MOV X1, X22
	0x03285258 MOV X2, X20
	0x0328525C MOV X3, X21
	0x03285260 MOV X4, X31
	0x03285264 MOV X23, X0
	0x03285268 BL 0x329CE18
	0x0328526C LDR X0, [X19 + 0x10]
	0x03285270 ADD X2, X31, 0x8
	0x03285274 ADD X3, X31, 0x10
	0x03285278 MOV X1, X23
	0x0328527C BL 0x3285320
	0x03285280 LDR X19, [X31 + 0x8]
	0x03285284 CBNZ X19, 0x3285308
	0x03285288 LDR X8, [X31 + 0x10]
	0x0328528C CBZ X8, 0x32852B0
	0x03285290 LDR W9, [X8 + 0x18]
	0x03285294 CBZ W9, 0x32852B4
	0x03285298 LDR X0, [X8 + 0x20]
	0x0328529C LDP X20, X19, [X31 + 0x40]
	0x032852A0 LDP X22, X21, [X31 + 0x30]
	0x032852A4 LDP X30, X23, [X31 + 0x20]
	0x032852A8 ADD X31, X31, 0x50
	0x032852AC RET
	0x032852B0 BL 0x1C16F20
	0x032852B4 BL 0x1C16F28
	0x032852B8 BL 0x1C16F44
	0x032852BC MOV X1, X31
	0x032852C0 BL 0x1C16DEC
	0x032852C4 ADRP X0, 0xE97000
	0x032852C8 LDR X0, [X0 + 0x28]
	0x032852CC BL 0x1C16D08
	0x032852D0 BL 0x1C16F10
	0x032852D4 MOV X19, X0
	0x032852D8 ADRP X0, 0xE9F000
	0x032852DC LDR X0, [X0 + 0x438]
	0x032852E0 BL 0x1C16D08
	0x032852E4 MOV X20, X0
	0x032852E8 ADRP X0, 0xE9F000
	0x032852EC LDR X0, [X0 + 0x258]
	0x032852F0 BL 0x1C16D08
	0x032852F4 MOV X2, X0
	0x032852F8 MOV X0, X19
	0x032852FC MOV X1, X20
	0x03285300 MOV X3, X31
	0x03285304 BL 0x338009C
	0x03285308 ADRP X0, 0xE9F000
	0x0328530C LDR X0, [X0 + 0x440]
	0x03285310 BL 0x1C16D08
	0x03285314 MOV X1, X0
	0x03285318 MOV X0, X19
	0x0328531C BL 0x1C16DEC
	0x03285320 STP X29, X30, [X31 - 0x60]!
	0x03285324 STP X28, X27, [X31 + 0x10]
	0x03285328 STP X26, X25, [X31 + 0x20]
	0x0328532C STP X24, X23, [X31 + 0x30]
	0x03285330 STP X22, X21, [X31 + 0x40]
	0x03285334 STP X20, X19, [X31 + 0x50]
	0x03285338 ADRP X22, 0x1157000
	0x0328533C LDRB W8, [X22 + 0x659]
	0x03285340 MOV X21, X3
	0x03285344 MOV X28, X2
	0x03285348 MOV X20, X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1158000
	007 Move X21, 0xE71000
	008 Move W8, [X22+1596]
	009 Move X21, [X21+632]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0xEA0000
	017 Move X0, [X0+408]
	018 Call 0x1C17CF4
	019 Move X0, 0xE71000
	020 Move X0, [X0+632]
	021 Call 0x1C17CF4
	022 Move X0, 0xE70000
	023 Move X0, [X0+3784]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+1596], W8
	027 Move X8, [X21]
	028 Move X22, 0xEA0000
	029 Move X0, X20
	030 Move X2, X31
	031 Move X8, [X8+184]
	032 Move X1, [X8]
	033 Move X22, [X22+408]
	034 Call String.op_Equality, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {67}
	039 Move X0, [X22]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X20, 0x1158000
	045 Move X21, 0xEA0000
	046 Move W8, [X20+1594]
	047 Move X21, [X21+1032]
	048 Move TEMP, X8
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {57}
	052 Move X0, 0xEA0000
	053 Move X0, [X0+1032]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X20+1594], W8
	057 Move X0, [X21]
	058 Move X1, X19
	059 Move X20, [X31+32]
	060 Move X19, [X31+40]
	061 Move X22, [X31+16]
	062 Move X21, [X31+24]
	063 Move X2, X31
	064 Move X30, [X31+48]
	065 Call String.Concat, X0, X1
	066 Return X0
	067 Move X8, [X21]
	068 Move X0, X19
	069 Move X2, X31
	070 Move X8, [X8+184]
	071 Move X1, [X8]
	072 Call String.op_Equality, X0, X1
	073 Move X8, [X22]
	074 Move W21, W0
	075 Move W9, [X8+224]
	076 Compare W9, 0
	077 JumpIfEqual {99}
	078 Move TEMP, X21
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfNotEqual {105}
	082 Move X19, 0x1158000
	083 Move X21, 0xEA0000
	084 Move W8, [X19+1593]
	085 Move X21, [X21+1024]
	086 Move TEMP, X8
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfEqual {95}
	090 Move X0, 0xEA0000
	091 Move X0, [X0+1024]
	092 Call 0x1C17CF4
	093 Move W8, 1
	094 Move [X19+1593], W8
	095 Move X0, [X21]
	096 Move X1, X20
	097 Move X2, X31
	098 Call String.Concat, X0, X1
	099 Move X0, X8
	100 Call 0x1C17DFC
	101 Move TEMP, X21
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfEqual {82}
	105 Move X21, 0x1158000
	106 Move X22, 0xEA0000
	107 Move W8, [X21+1595]
	108 Move X22, [X22+1040]
	109 Move TEMP, X8
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfEqual {118}
	113 Move X0, 0xEA0000
	114 Move X0, [X0+1040]
	115 Call 0x1C17CF4
	116 Move W8, 1
	117 Move [X21+1595], W8
	118 Move X8, 0xE70000
	119 Move X0, [X22]
	120 Move X8, [X8+3784]
	121 Move X1, X19
	122 Move X3, X20
	123 Move X4, X31
	124 Move X2, [X8]
	125 Call String.Concat, X0, X1, X2, X3
	126 Move X20, [X31+32]
	127 Move X19, [X31+40]
	128 Move X22, [X31+16]
	129 Move X21, [X31+24]
	130 Move X30, [X31+48]

Method: System.String GetNameKey(System.String name, System.String namspace)

Disassembly:
	0x03285430 MOV W23, W0
	0x03285434 CBZ X24, 0x3285450
	0x03285438 LDR X9, [X24]
	0x0328543C LDR X8, [X27]
	0x03285440 LDRB W11, [X9 + 0x130]
	0x03285444 LDRB W10, [X8 + 0x130]
	0x03285448 CMP W11, W10
	0x0328544C B.CS 0x3285458
	0x03285450 MOV X29, X31
	0x03285454 B 0x328546C
	0x03285458 LDR X9, [X9 + 0xC8]
	0x0328545C ADD X9, X9, X10, 0x3, LSL
	0x03285460 LDUR X9, [X9 - 0x8]
	0x03285464 CMP X9, X8
	0x03285468 CSEL X29, X24, X31, EQ
	0x0328546C CMP W23, 0x1
	0x03285470 STR X31, [X21]
	0x03285474 B.NE 0x328548C
	0x03285478 LDR X8, [X20 + 0x48]
	0x0328547C CBZ X8, 0x3285BA8
	0x03285480 MOV X22, X31
	0x03285484 STR X20, [X8 + 0x60]
	0x03285488 B 0x32854D8
	0x0328548C CMP W23, 0x2
	0x03285490 B.NE 0x32854D4
	0x03285494 LDR X0, [X20 + 0x48]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1158000
	006 Move W8, [X21+1597]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xE6F000
	014 Move X0, [X0+3544]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1597], W8
	018 Compare X19, 0
	019 JumpIfEqual {32}
	020 Move X8, 0xE6F000
	021 Move X8, [X8+3544]
	022 Move X0, X20
	023 Move X2, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X1, [X8]
	027 Move X3, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call String.Concat, X0, X1, X2
	031 Return X0
	032 Move X0, X20
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Return X0

Method: System.String GetAssemblyName(System.Reflection.MethodBase mb)

Disassembly:
	0x03285498 CBZ X0, 0x3285BA8
	0x0328549C MOV X1, X31
	0x032854A0 BL 0x3292E4C
	0x032854A4 CBZ X0, 0x32854D4
	0x032854A8 ADRP X8, 0xE9F000
	0x032854AC LDR X8, [X8 + 0x460]
	0x032854B0 MOV X25, X0
	0x032854B4 LDR X26, [X8]
	0x032854B8 MOV X1, X26
	0x032854BC BL 0x1C16E00
	0x032854C0 MOV X22, X0
	0x032854C4 CBNZ X0, 0x32854D8
	0x032854C8 MOV X0, X25
	0x032854CC MOV X1, X26
	0x032854D0 BL 0x1C171E0
	0x032854D4 MOV X22, X31
	0x032854D8 LDR X0, [X20 + 0x10]
	0x032854DC CBZ X0, 0x3285BA8
	0x032854E0 ADRP X19, 0xE9F000
	0x032854E4 LDR X19, [X19 + 0x270]
	0x032854E8 MOV X1, X31
	0x032854EC BL 0x32CE370
	0x032854F0 TBZ X0, 0x0, 0x328558C
	0x032854F4 CBZ X29, 0x32855A4
	0x032854F8 CBZ X24, 0x3285BA8
	0x032854FC LDR X8, [X24]
	0x03285500 LDR X25, [X27]
	0x03285504 LDRB W10, [X8 + 0x130]
	0x03285508 LDRB W9, [X25 + 0x130]
	0x0328550C CMP W10, W9
	0x03285510 B.CC 0x3285BA8
	0x03285514 LDR X10, [X8 + 0xC8]
	0x03285518 ADD X10, X10, X9, 0x3, LSL
	0x0328551C LDUR X10, [X10 - 0x8]
	0x03285520 CMP X10, X25
	0x03285524 B.NE 0x3285BA8
	0x03285528 LDR X8, [X8 + 0xC8]
	0x0328552C LDR X22, [X19]
	0x03285530 MOV X0, X20
	0x03285534 ADD X8, X8, X9, 0x3, LSL
	0x03285538 LDUR X26, [X8 - 0x8]
	0x0328553C MOV X1, X22
	0x03285540 BL 0x1C16E00
	0x03285544 CBZ X0, 0x3285A94
	0x03285548 CMP X26, X25
	0x0328554C MOV X1, X0
	0x03285550 CSEL X0, X24, X31, EQ
	0x03285554 BL 0x3286078
	0x03285558 ADRP X27, 0xE9F000
	0x0328555C LDR X27, [X27 + 0x460]
	0x03285560 MOV X25, X20
	0x03285564 CBZ X0, 0x32855E4
	0x03285568 LDR X23, [X27]
	0x0328556C MOV X26, X0
	0x03285570 MOV X1, X23
	0x03285574 BL 0x1C16E00
	0x03285578 MOV X22, X0
	0x0328557C CBNZ X0, 0x3285708
	0x03285580 MOV X0, X26
	0x03285584 MOV X1, X23
	0x03285588 BL 0x1C171E0
	0x0328558C ADRP X27, 0xE9F000
	0x03285590 LDR X27, [X27 + 0x460]
	0x03285594 CBNZ X22, 0x3285708
	0x03285598 MOV X25, X20
	0x0328559C CBNZ X24, 0x32855E4
	0x032855A0 BL 0x1C16F20
	0x032855A4 ADRP X27, 0xE9F000
	0x032855A8 LDR X27, [X27 + 0x460]
	0x032855AC CBZ X24, 0x3285BA8
	0x032855B0 MOV X0, X24
	0x032855B4 BL 0x327F304
	0x032855B8 ADRP X8, 0xE9F000
	0x032855BC LDR X8, [X8 + 0x448]
	0x032855C0 MOV X26, X0
	0x032855C4 LDR X8, [X8]
	0x032855C8 MOV X0, X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1158000
	006 Move W8, [X20+1598]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0xE79000
	013 Move X0, [X0+2408]
	014 Call 0x1C17CF4
	015 Move X0, 0xE71000
	016 Move X0, [X0+632]
	017 Call 0x1C17CF4
	018 Move X0, 0xE6F000
	019 Move X0, [X0+1728]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+1598], W8
	023 Compare X19, 0
	024 JumpIfEqual {95}
	025 Move X8, [X19]
	026 Move X0, X19
	027 Move X9, [X8+440]
	028 Move X1, [X8+448]
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Compare X0, 0
	031 JumpIfEqual {95}
	032 Move X8, [X0]
	033 Move X20, 0xE79000
	034 Move X21, 0xE6F000
	035 Move X9, [X8+760]
	036 Move X1, [X8+768]
	037 Move X20, [X20+2408]
	038 Move X21, [X21+1728]
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move X8, [X21]
	041 Move X21, [X20]
	042 Move X20, X0
	043 Move W9, [X8+224]
	044 Compare W9, 0
	045 JumpIfNotEqual {48}
	046 Move X0, X8
	047 Call 0x1C17DFC
	048 Move X0, X21
	049 Move X1, X31
	050 Call Type.GetTypeFromHandle, X0
	051 Compare X0, 0
	052 JumpIfEqual {95}
	053 Move X8, [X0]
	054 Move X9, [X8+760]
	055 Move X1, [X8+768]
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Move X1, X0
	058 Move X0, X20
	059 Move X2, X31
	060 Call Assembly.op_Equality, X0, X1
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {69}
	065 Move X8, 0xE71000
	066 Move X8, [X8+632]
	067 Move X8, [X8]
	068 Move X8, [X8+184]
	069 Move X8, [X19]
	070 Move X0, X19
	071 Move X9, [X8+440]
	072 Move X1, [X8+448]
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Compare X0, 0
	075 JumpIfEqual {95}
	076 Move X8, [X0]
	077 Move X9, [X8+760]
	078 Move X1, [X8+768]
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Compare X0, 0
	081 JumpIfEqual {95}
	082 Move X8, [X0]
	083 Move X9, [X8+600]
	084 Move X1, [X8+608]
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Compare X0, 0
	087 JumpIfEqual {95}
	088 Add X8, X0, 16
	089 Move X0, [X8]
	090 Move X20, [X31+16]
	091 Move X19, [X31+24]
	092 Move X30, [X31+32]
	093 Move X21, [X31+40]
	094 Return X0
	095 Call 0x1C17F20

Method: System.Boolean GetXmlElementForInteropType(System.Type type, out System.String xmlElement, out System.String xmlNamespace)

Disassembly:
	0x032855CC BL 0x1C16F10
	0x032855D0 MOV X1, X26
	0x032855D4 MOV X2, X31
	0x032855D8 MOV X25, X0
	0x032855DC BL 0x328F6CC
	0x032855E0 CBNZ X22, 0x3285708
	0x032855E4 LDR X8, [X24]
	0x032855E8 LDP X9, X2, [X8 + 0x188]
	0x032855EC MOV X0, X24
	0x032855F0 MOV X1, X25
	0x032855F4 BLR X9
	0x032855F8 MOV X24, X0
	0x032855FC CBZ X0, 0x3285624
	0x03285600 LDR X26, [X27]
	0x03285604 MOV X0, X24
	0x03285608 MOV X1, X26
	0x0328560C BL 0x1C16E00
	0x03285610 MOV X22, X0
	0x03285614 CBNZ X0, 0x3285628
	0x03285618 MOV X0, X24
	0x0328561C MOV X1, X26
	0x03285620 BL 0x1C171E0
	0x03285624 MOV X22, X31
	0x03285628 CMP W23, 0x1
	0x0328562C B.NE 0x3285704
	0x03285630 CBNZ X29, 0x3285704
	0x03285634 LDR X0, [X20 + 0x48]
	0x03285638 CBZ X0, 0x3285BA8
	0x0328563C LDR X8, [X0]
	0x03285640 MOV X1, X22
	0x03285644 LDR X9, [X8 + 0x288]
	0x03285648 LDR X2, [X8 + 0x290]
	0x0328564C BLR X9
	0x03285650 CBZ X22, 0x3285BA8
	0x03285654 LDR X8, [X22]
	0x03285658 LDR X1, [X27]
	0x0328565C MOV X23, X0
	0x03285660 LDRH W9, [X8 + 0x12E]
	0x03285664 CBZ X9, 0x3285688
	0x03285668 LDR X10, [X8 + 0xB0]
	0x0328566C ADD X10, X10, 0x8
	0x03285670 LDUR X11, [X10 - 0x8]
	0x03285674 CMP X11, X1
	0x03285678 B.EQ 0x3285698
	0x0328567C SUBS X9, X9, 0x1
	0x03285680 ADD X10, X10, 0x10
	0x03285684 B.NE 0x3285670
	0x03285688 MOVZ W2, 0x1
	0x0328568C MOV X0, X22
	0x03285690 BL 0x1C5C788
	0x03285694 B 0x32856A8
	0x03285698 LDR W9, [X10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1158000
	008 Move X23, 0xE9F000
	009 Move W8, [X22+1599]
	010 Move X23, [X23+3432]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xE9F000
	019 Move X0, [X0+3432]
	020 Call 0x1C17CF4
	021 Move X0, 0xE9F000
	022 Move X0, [X0+3504]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+1599], W8
	026 Move X0, [X23]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X21
	032 Call InternalRemotingServices.GetCachedSoapAttribute, X0
	033 Compare X0, 0
	034 JumpIfEqual {62}
	035 Move X8, 0xE9F000
	036 Move X8, [X8+3504]
	037 Move X1, [X8]
	038 Move X8, [X0]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move W21, [X0+81]
	041 Compare W21, 0
	042 JumpIfEqual {49}
	043 Move X8, [X0+48]
	044 Move [X20], X8
	045 Move X8, [X0]
	046 Move X9, [X8+392]
	047 Move X1, [X8+400]
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Move X0, X31
	050 Move [X20], X31
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move [X19], X0
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 NotImplemented "Instruction CSET not yet implemented."
	058 Move W0, W8
	059 Move X30, [X31+48]
	060 Move X23, [X31+56]
	061 Return X0
	062 Call 0x1C17F20
	063 Call 0x1C181E0

Method: System.String GetXmlNamespaceForMethodCall(System.Reflection.MethodBase mb)

Disassembly:
	0x0328569C ADD W9, W9, 0x1
	0x032856A0 ADD X8, X8, W9, 0x4, SXTW
	0x032856A4 ADD X0, X8, 0x138
	0x032856A8 LDP X8, X1, [X0]
	0x032856AC MOV X0, X22
	0x032856B0 BLR X8
	0x032856B4 STR X0, [X21]
	0x032856B8 ADRP X8, 0xE9F000
	0x032856BC LDR X8, [X8 + 0x280]
	0x032856C0 LDR X0, [X8]
	0x032856C4 BL 0x1C16F10
	0x032856C8 ADRP X8, 0xE9F000
	0x032856CC LDR X8, [X8 + 0x458]
	0x032856D0 MOV X24, X0
	0x032856D4 MOV X0, X22
	0x032856D8 LDR X1, [X8]
	0x032856DC BL 0x1C16E00
	0x032856E0 MOV X5, X0
	0x032856E4 MOV X0, X24
	0x032856E8 MOV X1, X23
	0x032856EC MOV X2, X31
	0x032856F0 MOV W3, W31
	0x032856F4 MOV X4, X31
	0x032856F8 MOV X6, X31
	0x032856FC BL 0x329DB68
	0x03285700 MOV X22, X24
	0x03285704 CBZ X22, 0x3285BA8
	0x03285708 LDR X8, [X22]
	0x0328570C LDR X1, [X19]
	0x03285710 LDRH W9, [X8 + 0x12E]
	0x03285714 CBZ X9, 0x3285738
	0x03285718 LDR X10, [X8 + 0xB0]
	0x0328571C ADD X10, X10, 0x8
	0x03285720 LDUR X11, [X10 - 0x8]
	0x03285724 CMP X11, X1
	0x03285728 B.EQ 0x3285748
	0x0328572C SUBS X9, X9, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1158000
	005 Move W8, [X20+1600]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xEA0000
	012 Move X0, [X0+408]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1600], W8
	016 Compare X19, 0
	017 JumpIfEqual {47}
	018 Move X8, [X19]
	019 Move X0, X19
	020 Move X9, [X8+440]
	021 Move X1, [X8+448]
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Compare X0, 0
	024 JumpIfEqual {47}
	025 Move X8, [X0]
	026 Move X20, 0xEA0000
	027 Move X9, [X8+744]
	028 Move X1, [X8+752]
	029 Move X20, [X20+408]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move X8, [X20]
	032 Move X20, X0
	033 Move W9, [X8+224]
	034 Compare W9, 0
	035 JumpIfNotEqual {38}
	036 Move X0, X8
	037 Call 0x1C17DFC
	038 Move X0, X19
	039 Call SoapServices.GetAssemblyName, X0
	040 Move X1, X0
	041 Move X0, X20
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Call SoapServices.CodeXmlNamespaceForClrTypeNamespace, X0, X1
	046 Return X0
	047 Call 0x1C17F20

Method: System.String GetXmlNamespaceForMethodResponse(System.Reflection.MethodBase mb)

Disassembly:
	0x03285730 ADD X10, X10, 0x10
	0x03285734 B.NE 0x3285720
	0x03285738 MOVZ W2, 0x2
	0x0328573C MOV X0, X22
	0x03285740 BL 0x1C5C788
	0x03285744 B 0x3285758
	0x03285748 LDR W9, [X10]
	0x0328574C ADD W9, W9, 0x2
	0x03285750 ADD X8, X8, W9, 0x4, SXTW
	0x03285754 ADD X0, X8, 0x138
	0x03285758 LDP X8, X1, [X0]
	0x0328575C MOV X0, X22
	0x03285760 BLR X8
	0x03285764 CBZ X0, 0x3285868
	0x03285768 LDR X8, [X22]
	0x0328576C LDR X1, [X19]
	0x03285770 LDRH W9, [X8 + 0x12E]
	0x03285774 CBZ X9, 0x3285798
	0x03285778 LDR X10, [X8 + 0xB0]
	0x0328577C ADD X10, X10, 0x8
	0x03285780 LDUR X11, [X10 - 0x8]
	0x03285784 CMP X11, X1
	0x03285788 B.EQ 0x32857A8
	0x0328578C SUBS X9, X9, 0x1
	0x03285790 ADD X10, X10, 0x10
	0x03285794 B.NE 0x3285780
	0x03285798 MOVZ W2, 0x2
	0x0328579C MOV X0, X22
	0x032857A0 BL 0x1C5C788
	0x032857A4 B 0x32857B8
	0x032857A8 LDR W9, [X10]
	0x032857AC ADD W9, W9, 0x2
	0x032857B0 ADD X8, X8, W9, 0x4, SXTW
	0x032857B4 ADD X0, X8, 0x138
	0x032857B8 LDP X8, X1, [X0]
	0x032857BC MOV X0, X22
	0x032857C0 BLR X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1158000
	005 Move W8, [X20+1601]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xEA0000
	012 Move X0, [X0+408]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1601], W8
	016 Compare X19, 0
	017 JumpIfEqual {47}
	018 Move X8, [X19]
	019 Move X0, X19
	020 Move X9, [X8+440]
	021 Move X1, [X8+448]
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Compare X0, 0
	024 JumpIfEqual {47}
	025 Move X8, [X0]
	026 Move X20, 0xEA0000
	027 Move X9, [X8+744]
	028 Move X1, [X8+752]
	029 Move X20, [X20+408]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move X8, [X20]
	032 Move X20, X0
	033 Move W9, [X8+224]
	034 Compare W9, 0
	035 JumpIfNotEqual {38}
	036 Move X0, X8
	037 Call 0x1C17DFC
	038 Move X0, X19
	039 Call SoapServices.GetAssemblyName, X0
	040 Move X1, X0
	041 Move X0, X20
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Call SoapServices.CodeXmlNamespaceForClrTypeNamespace, X0, X1
	046 Return X0
	047 Call 0x1C17F20

Method: System.Boolean GetXmlTypeForInteropType(System.Type type, out System.String xmlType, out System.String xmlTypeNamespace)

Disassembly:
	0x032857C4 CBZ X0, 0x3285BA8
	0x032857C8 MOV X1, X31
	0x032857CC BL 0x3292828
	0x032857D0 TBZ X0, 0x0, 0x3285868
	0x032857D4 MOV X0, X31
	0x032857D8 BL 0x33E3C68
	0x032857DC CBZ X0, 0x3285BA8
	0x032857E0 MOV X1, X31
	0x032857E4 BL 0x33E5BCC
	0x032857E8 CBZ X0, 0x3285BA8
	0x032857EC MOV X1, X31
	0x032857F0 BL 0x33E48DC
	0x032857F4 LDR X8, [X22]
	0x032857F8 LDR X1, [X19]
	0x032857FC MOV X23, X0
	0x03285800 LDRH W9, [X8 + 0x12E]
	0x03285804 CBZ X9, 0x3285828
	0x03285808 LDR X10, [X8 + 0xB0]
	0x0328580C ADD X10, X10, 0x8
	0x03285810 LDUR X11, [X10 - 0x8]
	0x03285814 CMP X11, X1
	0x03285818 B.EQ 0x3285838
	0x0328581C SUBS X9, X9, 0x1
	0x03285820 ADD X10, X10, 0x10
	0x03285824 B.NE 0x3285810
	0x03285828 MOVZ W2, 0x2
	0x0328582C MOV X0, X22
	0x03285830 BL 0x1C5C788
	0x03285834 B 0x3285848
	0x03285838 LDR W9, [X10]
	0x0328583C ADD W9, W9, 0x2
	0x03285840 ADD X8, X8, W9, 0x4, SXTW
	0x03285844 ADD X0, X8, 0x138
	0x03285848 LDP X8, X1, [X0]
	0x0328584C MOV X0, X22
	0x03285850 BLR X8
	0x03285854 CBZ X23, 0x3285BA8
	0x03285858 MOV X1, X0
	0x0328585C MOV X0, X23
	0x03285860 MOV X2, X31
	0x03285864 BL 0x32925F8
	0x03285868 LDR X8, [X22]
	0x0328586C LDR X1, [X27]
	0x03285870 LDRH W9, [X8 + 0x12E]
	0x03285874 CBZ X9, 0x3285898
	0x03285878 LDR X10, [X8 + 0xB0]
	0x0328587C ADD X10, X10, 0x8
	0x03285880 LDUR X11, [X10 - 0x8]
	0x03285884 CMP X11, X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1158000
	008 Move X23, 0xE9F000
	009 Move W8, [X22+1602]
	010 Move X23, [X23+3432]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xE9F000
	019 Move X0, [X0+3432]
	020 Call 0x1C17CF4
	021 Move X0, 0xE9F000
	022 Move X0, [X0+3504]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+1602], W8
	026 Move X0, [X23]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X21
	032 Call InternalRemotingServices.GetCachedSoapAttribute, X0
	033 Compare X0, 0
	034 JumpIfEqual {58}
	035 Move X8, 0xE9F000
	036 Move X8, [X8+3504]
	037 Move X1, [X8]
	038 Move X8, [X0]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move W8, [X0+80]
	041 Compare W8, 0
	042 JumpIfEqual {46}
	043 Move X9, [X0+64]
	044 Move [X20], X9
	045 Move X9, [X0+72]
	046 Move X9, X31
	047 Move [X20], X31
	048 Move [X19], X9
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 NotImplemented "Instruction CSET not yet implemented."
	055 Move X30, [X31+48]
	056 Move X23, [X31+56]
	057 Return X0
	058 Call 0x1C17F20
	059 Call 0x1C181E0

Method: System.Void PreLoad(System.Reflection.Assembly assembly)

Disassembly:
	0x0327E850 LDR X0, [X0 + 0xE68]
	0x0327E854 BL 0x1C16CF4
	0x0327E858 MOVZ W8, 0x1
	0x0327E85C STRB W8, [X22 + 0x608]
	0x0327E860 LDR X0, [X24]
	0x0327E864 BL 0x1C16F10
	0x0327E868 MOV X1, X19
	0x0327E86C MOV X2, X21
	0x0327E870 MOV X3, X20
	0x0327E874 MOV X22, X0
	0x0327E878 BL 0x32745B4
	0x0327E87C LDR X0, [X23]
	0x0327E880 LDR W8, [X0 + 0xE0]
	0x0327E884 CBNZ W8, 0x327E88C
	0x0327E888 BL 0x1C16DFC
	0x0327E88C MOV X0, X22
	0x0327E890 MOV X1, X19
	0x0327E894 LDP X20, X19, [X31 + 0x30]
	0x0327E898 LDP X22, X21, [X31 + 0x20]
	0x0327E89C LDP X24, X23, [X31 + 0x10]
	0x0327E8A0 LDR X30, [X31], #0x40
	0x0327E8A4 B 0x327E794
	0x0327E8A8 STP X30, X21, [X31 - 0x20]!
	0x0327E8AC STP X20, X19, [X31 + 0x10]
	0x0327E8B0 ADRP X20, 0x115E000
	0x0327E8B4 ADRP X21, 0xEA5000
	0x0327E8B8 LDRB W8, [X20 + 0x609]
	0x0327E8BC LDR X21, [X21 + 0xE68]
	0x0327E8C0 MOV X19, X0
	0x0327E8C4 TBNZ X8, 0x0, 0x327E8E8
	0x0327E8C8 ADRP X0, 0xEA5000
	0x0327E8CC LDR X0, [X0 + 0xE68]
	0x0327E8D0 BL 0x1C16CF4
	0x0327E8D4 ADRP X0, 0xEA6000
	0x0327E8D8 LDR X0, [X0 + 0x298]
	0x0327E8DC BL 0x1C16CF4
	0x0327E8E0 MOVZ W8, 0x1
	0x0327E8E4 STRB W8, [X20 + 0x609]
	0x0327E8E8 LDR X0, [X21]
	0x0327E8EC LDR W8, [X0 + 0xE0]
	0x0327E8F0 CBNZ W8, 0x327E8F8
	0x0327E8F4 BL 0x1C16DFC
	0x0327E8F8 MOV X0, X19
	0x0327E8FC BL 0x327E950
	0x0327E900 CBZ X0, 0x327E944
	0x0327E904 ADRP X8, 0xEA6000
	0x0327E908 LDR X8, [X8 + 0x298]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x115F000
	008 Move W8, [X20+1603]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xEA7000
	015 Move X0, [X0+408]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1603], W8
	019 Compare X19, 0
	020 JumpIfEqual {56}
	021 Move X8, [X19]
	022 Move X0, X19
	023 Move X9, [X8+552]
	024 Move X1, [X8+560]
	025 NotImplemented "Instruction BLR not yet implemented."
	026 Compare X0, 0
	027 JumpIfEqual {56}
	028 Move X8, [X0+24]
	029 Move X19, X0
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X22, 0xEA7000
	032 Move X22, [X22+408]
	033 Move X21, X31
	034 And X8, X8, 0
	035 Add X23, X19, 32
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X0, [X22]
	038 Move X20, [X23]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X20
	044 Call SoapServices.PreLoad, X0
	045 Move W8, [X19+24]
	046 Add X21, X21, 1
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Move X23, [X31+56]
	054 Return 
	055 Call 0x1C17F28
	056 Call 0x1C17F20

Method: System.Void PreLoad(System.Type type)

Disassembly:
	0x0327E38C B.NE 0x327E378
	0x0327E390 MOVZ W2, 0x8
	0x0327E394 MOV X0, X19
	0x0327E398 BL 0x1C5C788
	0x0327E39C B 0x327E3B0
	0x0327E3A0 LDR W9, [X10]
	0x0327E3A4 ADD W9, W9, 0x8
	0x0327E3A8 ADD X8, X8, W9, 0x4, SXTW
	0x0327E3AC ADD X0, X8, 0x138
	0x0327E3B0 LDP X8, X2, [X0]
	0x0327E3B4 MOV X0, X19
	0x0327E3B8 MOV W1, W25
	0x0327E3BC BLR X8
	0x0327E3C0 CBZ X22, 0x327E5D0
	0x0327E3C4 MOV X25, X0
	0x0327E3C8 CBZ X0, 0x327E3E0
	0x0327E3CC LDR X8, [X22]
	0x0327E3D0 LDR X1, [X8 + 0x40]
	0x0327E3D4 MOV X0, X25
	0x0327E3D8 BL 0x1C16E00
	0x0327E3DC CBZ X0, 0x327E5E0
	0x0327E3E0 LDR W8, [X22 + 0x18]
	0x0327E3E4 CMP W23, W8
	0x0327E3E8 B.CS 0x327E5CC
	0x0327E3EC SXTW X8, W23
	0x0327E3F0 ADD X8, X22, X8, 0x3, LSL
	0x0327E3F4 STR X25, [X8 + 0x20]
	0x0327E3F8 LDR W8, [X24 + 0x18]
	0x0327E3FC ADD W23, W23, 0x1
	0x0327E400 CMP W23, W8
	0x0327E404 B.LT 0x327E284
	0x0327E408 B 0x327E410
	0x0327E40C MOV W23, W31
	0x0327E410 MOV X0, X31
	0x0327E414 BL 0x33E3C68
	0x0327E418 CBZ X0, 0x327E5FC
	0x0327E41C MOV X1, X31
	0x0327E420 BL 0x33E5BCC
	0x0327E424 CBZ X0, 0x327E600
	0x0327E428 MOV X1, X31
	0x0327E42C BL 0x33E48DC
	0x0327E430 ADRP X8, 0xEA6000
	0x0327E434 LDR X8, [X8 + 0x280]
	0x0327E438 MOV X25, X0
	0x0327E43C LDR X0, [X8]
	0x0327E440 BL 0x1C16F10
	0x0327E444 MOV X24, X0
	0x0327E448 MOV X1, X21
	0x0327E44C MOV X2, X22
	0x0327E450 MOV W3, W23
	0x0327E454 MOV X4, X25
	0x0327E458 MOV X5, X19
	0x0327E45C MOV X6, X31
	0x0327E460 BL 0x329DB68
	0x0327E464 MOV X0, X20
	0x0327E468 MOV X1, X31
	0x0327E46C BL 0x32913D8
	0x0327E470 MOV X0, X24
	0x0327E474 LDP X20, X19, [X31 + 0x50]
	0x0327E478 LDP X22, X21, [X31 + 0x40]
	0x0327E47C LDP X24, X23, [X31 + 0x30]
	0x0327E480 LDP X26, X25, [X31 + 0x20]
	0x0327E484 LDP X30, X27, [X31 + 0x10]
	0x0327E488 ADD X31, X31, 0x60
	0x0327E48C RET
	0x0327E490 LDR X8, [X19]
	0x0327E494 LDR X1, [X26]
	0x0327E498 LDRH W9, [X8 + 0x12E]
	0x0327E49C CBZ X9, 0x327E4C0
	0x0327E4A0 LDR X10, [X8 + 0xB0]
	0x0327E4A4 ADD X10, X10, 0x8
	0x0327E4A8 LDUR X11, [X10 - 0x8]
	0x0327E4AC CMP X11, X1
	0x0327E4B0 B.EQ 0x327E4D0
	0x0327E4B4 SUBS X9, X9, 0x1
	0x0327E4B8 ADD X10, X10, 0x10
	0x0327E4BC B.NE 0x327E4A8
	0x0327E4C0 MOVZ W2, 0x3
	0x0327E4C4 MOV X0, X19
	0x0327E4C8 BL 0x1C5C788
	0x0327E4CC B 0x327E4E0
	0x0327E4D0 LDR W9, [X10]
	0x0327E4D4 ADD W9, W9, 0x3
	0x0327E4D8 ADD X8, X8, W9, 0x4, SXTW
	0x0327E4DC ADD X0, X8, 0x138
	0x0327E4E0 LDP X8, X1, [X0]
	0x0327E4E4 MOV X0, X19
	0x0327E4E8 BLR X8
	0x0327E4EC LDR X8, [X24]
	0x0327E4F0 MOV X22, X0
	0x0327E4F4 LDR W9, [X8 + 0xE0]
	0x0327E4F8 CBNZ W9, 0x327E504
	0x0327E4FC MOV X0, X8
	0x0327E500 BL 0x1C16DFC
	0x0327E504 MOV X0, X20
	0x0327E508 MOV X1, X22
	0x0327E50C BL 0x1C4A5F0
	0x0327E510 MOV X1, X31
	0x0327E514 MOV X2, X31
	0x0327E518 MOV X22, X0
	0x0327E51C BL 0x32CE12C
	0x0327E520 TBZ X0, 0x0, 0x327DFFC
	0x0327E524 MOV X0, X19
	0x0327E528 BL 0x19903C0
	0x0327E52C ADRP X0, 0xEA6000
	0x0327E530 LDR X0, [X0 + 0x270]
	0x0327E534 BL 0x1C16D08
	0x0327E538 MOV X1, X0
	0x0327E53C MOVZ W0, 0x4
	0x0327E540 MOV X2, X19
	0x0327E544 BL 0x19963F0
	0x0327E548 MOV X19, X0
	0x0327E54C ADRP X0, 0xEA6000
	0x0327E550 LDR X0, [X0 + 0x288]
	0x0327E554 BL 0x1C16D08
	0x0327E558 MOV X1, X20
	0x0327E55C MOV X2, X19
	0x0327E560 MOV X3, X31
	0x0327E564 BL 0x3227BD4
	0x0327E568 MOV X19, X0
	0x0327E56C ADRP X0, 0xEA5000
	0x0327E570 LDR X0, [X0 + 0xD20]
	0x0327E574 BL 0x1C16D08
	0x0327E578 BL 0x1C16F10
	0x0327E57C MOV X1, X19
	0x0327E580 MOV X20, X0
	0x0327E584 BL 0x3273098
	0x0327E588 ADRP X0, 0xEA6000
	0x0327E58C LDR X0, [X0 + 0x290]
	0x0327E590 BL 0x1C16D08
	0x0327E594 MOV X1, X0
	0x0327E598 MOV X0, X20
	0x0327E59C BL 0x1C16DEC
	0x0327E5A0 BL 0x1C16F28
	0x0327E5A4 BL 0x1C16F20
	0x0327E5A8 BL 0x1C16F20
	0x0327E5AC BL 0x1C16F20
	0x0327E5B0 BL 0x1C16F28
	0x0327E5B4 BL 0x1C16F28
	0x0327E5B8 BL 0x1C16F20
	0x0327E5BC BL 0x1C16F20
	0x0327E5C0 BL 0x1C16F20
	0x0327E5C4 BL 0x1C16F28
	0x0327E5C8 BL 0x1C16F20
	0x0327E5CC BL 0x1C16F28
	0x0327E5D0 BL 0x1C16F20
	0x0327E5D4 BL 0x1C16F44
	0x0327E5D8 MOV X1, X31
	0x0327E5DC BL 0x1C16DEC
	0x0327E5E0 BL 0x1C16F44
	0x0327E5E4 MOV X1, X31
	0x0327E5E8 BL 0x1C16DEC
	0x0327E5EC MOV X0, X22
	0x0327E5F0 BL 0x1C171E0
	0x0327E5F4 BL 0x1C16F20
	0x0327E5F8 BL 0x1C16F20
	0x0327E5FC BL 0x1C16F20
	0x0327E600 BL 0x1C16F20
	0x0327E604 B 0x327E668
	0x0327E608 B 0x327E668
	0x0327E60C B 0x327E668
	0x0327E610 B 0x327E668
	0x0327E614 B 0x327E668
	0x0327E618 B 0x327E668
	0x0327E61C B 0x327E668
	0x0327E620 B 0x327E668
	0x0327E624 B 0x327E668
	0x0327E628 B 0x327E668
	0x0327E62C B 0x327E668
	0x0327E630 B 0x327E668
	0x0327E634 B 0x327E668
	0x0327E638 B 0x327E668
	0x0327E63C B 0x327E668
	0x0327E640 B 0x327E668
	0x0327E644 B 0x327E668
	0x0327E648 B 0x327E668
	0x0327E64C B 0x327E668
	0x0327E650 B 0x327E668
	0x0327E654 B 0x327E668
	0x0327E658 B 0x327E668
	0x0327E65C B 0x327E668
	0x0327E660 B 0x327E668
	0x0327E664 B 0x327E668
	0x0327E668 MOV X21, X0
	0x0327E66C CMP W1, 0x1
	0x0327E670 B.NE 0x327E6F4
	0x0327E674 MOV X0, X21
	0x0327E678 BL 0x3EB1AD0
	0x0327E67C MOV X21, X0
	0x0327E680 ADRP X0, 0xE75000
	0x0327E684 LDR X0, [X0 + 0x7D0]
	0x0327E688 BL 0x1C16D08
	0x0327E68C LDR X8, [X21]
	0x0327E690 LDR X1, [X8]
	0x0327E694 BL 0x1C17270
	0x0327E698 TBZ X0, 0x0, 0x327E6CC
	0x0327E69C LDR X21, [X21]
	0x0327E6A0 BL 0x3EB1AE0
	0x0327E6A4 ADRP X0, 0xEA6000
	0x0327E6A8 LDR X0, [X0 + 0x280]
	0x0327E6AC BL 0x1C16D08
	0x0327E6B0 BL 0x1C16F10
	0x0327E6B4 MOV X1, X21
	0x0327E6B8 MOV X2, X19
	0x0327E6BC MOV X3, X31
	0x0327E6C0 MOV X24, X0
	0x0327E6C4 BL 0x328EBC0
	0x0327E6C8 B 0x327E464
	0x0327E6CC MOVZ W0, 0x8
	0x0327E6D0 BL 0x3EB1AF0
	0x0327E6D4 LDR X8, [X21]
	0x0327E6D8 STR X8, [X0]
	0x0327E6DC ADRP X1, 0xC36000
	0x0327E6E0 ADD X1, X1, 0xE58
	0x0327E6E4 MOV X2, X31
	0x0327E6E8 BL 0x3EB1B00
	0x0327E6EC MOV X21, X0
	0x0327E6F0 BL 0x3EB1AE0
	0x0327E6F4 MOV X0, X21
	0x0327E6F8 BL 0x1D2C690
	0x0327E6FC BL 0x1990590
	0x0327E700 STP X30, X23, [X31 - 0x30]!
	0x0327E704 STP X22, X21, [X31 + 0x10]
	0x0327E708 STP X20, X19, [X31 + 0x20]
	0x0327E70C ADRP X21, 0x115E000
	0x0327E710 ADRP X23, 0xEA5000
	0x0327E714 ADRP X22, 0xEA5000
	0x0327E718 LDRB W8, [X21 + 0x607]
	0x0327E71C LDR X23, [X23 + 0xDD0]
	0x0327E720 LDR X22, [X22 + 0xE68]
	0x0327E724 MOV X20, X1
	0x0327E728 MOV X19, X0
	0x0327E72C TBNZ X8, 0x0, 0x327E750
	0x0327E730 ADRP X0, 0xEA5000
	0x0327E734 LDR X0, [X0 + 0xDD0]
	0x0327E738 BL 0x1C16CF4
	0x0327E73C ADRP X0, 0xEA5000
	0x0327E740 LDR X0, [X0 + 0xE68]
	0x0327E744 BL 0x1C16CF4
	0x0327E748 MOVZ W8, 0x1
	0x0327E74C STRB W8, [X21 + 0x607]
	0x0327E750 LDR X0, [X23]
	0x0327E754 BL 0x1C16F10
	0x0327E758 MOV X1, X19
	0x0327E75C MOV X2, X20
	0x0327E760 MOV X3, X31
	0x0327E764 MOV X21, X0
	0x0327E768 BL 0x32745B4
	0x0327E76C LDR X0, [X22]
	0x0327E770 LDR W8, [X0 + 0xE0]
	0x0327E774 CBNZ W8, 0x327E77C
	0x0327E778 BL 0x1C16DFC
	0x0327E77C MOV X0, X21
	0x0327E780 MOV X1, X19
	0x0327E784 LDP X20, X19, [X31 + 0x20]
	0x0327E788 LDP X22, X21, [X31 + 0x10]
	0x0327E78C LDP X30, X23, [X31], #0x30
	0x0327E790 B 0x327E794
	0x0327E794 STR X30, [X31 - 0x30]!
	0x0327E798 STP X22, X21, [X31 + 0x10]
	0x0327E79C STP X20, X19, [X31 + 0x20]
	0x0327E7A0 ADRP X22, 0x115E000
	0x0327E7A4 ADRP X21, 0xEA5000
	0x0327E7A8 LDRB W8, [X22 + 0x622]
	0x0327E7AC LDR X21, [X21 + 0xE68]
	0x0327E7B0 MOV X19, X1
	0x0327E7B4 MOV X20, X0
	0x0327E7B8 TBNZ X8, 0x0, 0x327E7D0
	0x0327E7BC ADRP X0, 0xEA5000
	0x0327E7C0 LDR X0, [X0 + 0xE68]
	0x0327E7C4 BL 0x1C16CF4
	0x0327E7C8 MOVZ W8, 0x1
	0x0327E7CC STRB W8, [X22 + 0x622]
	0x0327E7D0 LDR X0, [X21]
	0x0327E7D4 STR X31, [X31 + 0x8]
	0x0327E7D8 LDR W8, [X0 + 0xE0]
	0x0327E7DC CBNZ W8, 0x327E7E4
	0x0327E7E0 BL 0x1C16DFC
	0x0327E7E4 ADD X2, X31, 0x8
	0x0327E7E8 MOV X0, X20
	0x0327E7EC MOV X1, X19
	0x0327E7F0 BL 0x3280C84
	0x0327E7F4 LDR X0, [X31 + 0x8]
	0x0327E7F8 LDP X20, X19, [X31 + 0x20]
	0x0327E7FC LDP X22, X21, [X31 + 0x10]
	0x0327E800 LDR X30, [X31], #0x30
	0x0327E804 RET
	0x0327E808 STR X30, [X31 - 0x40]!
	0x0327E80C STP X24, X23, [X31 + 0x10]
	0x0327E810 STP X22, X21, [X31 + 0x20]
	0x0327E814 STP X20, X19, [X31 + 0x30]
	0x0327E818 ADRP X22, 0x115E000
	0x0327E81C ADRP X24, 0xEA5000
	0x0327E820 ADRP X23, 0xEA5000
	0x0327E824 LDRB W8, [X22 + 0x608]
	0x0327E828 LDR X24, [X24 + 0xDD0]
	0x0327E82C LDR X23, [X23 + 0xE68]
	0x0327E830 MOV X20, X2
	0x0327E834 MOV X21, X1
	0x0327E838 MOV X19, X0
	0x0327E83C TBNZ X8, 0x0, 0x327E860
	0x0327E840 ADRP X0, 0xEA5000
	0x0327E844 LDR X0, [X0 + 0xDD0]
	0x0327E848 BL 0x1C16CF4
	0x0327E84C ADRP X0, 0xEA5000

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X19, 0x115F000
	015 Move X27, 0xEA7000
	016 Move W8, [X19+1604]
	017 Move X27, [X27+408]
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {40}
	023 Move X0, 0xEA6000
	024 Move X0, [X0+3512]
	025 Call 0x1C17CF4
	026 Move X0, 0xEA6000
	027 Move X0, [X0+3432]
	028 Call 0x1C17CF4
	029 Move X0, 0xEA6000
	030 Move X0, [X0+3480]
	031 Call 0x1C17CF4
	032 Move X0, 0xEA7000
	033 Move X0, [X0+408]
	034 Call 0x1C17CF4
	035 Move X0, 0xEA7000
	036 Move X0, [X0+560]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X19+1604], W8
	040 Move X0, [X27]
	041 Move [X31+32], X31
	042 Move [X31+40], X31
	043 Move [X31+28], W31
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {49}
	047 Call 0x1C17DFC
	048 Move X0, [X27]
	049 Move X8, [X0+184]
	050 Move X0, [X8+32]
	051 Compare X0, 0
	052 JumpIfEqual {302}
	053 Move X8, [X0]
	054 Move X20, 0xEA7000
	055 Move X1, X23
	056 Move X9, [X8+728]
	057 Move X2, [X8+736]
	058 Move X20, [X20+560]
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Compare X0, 0
	061 JumpIfEqual {71}
	062 Move X9, [X0]
	063 Move X8, [X20]
	064 Move W11, [X9+304]
	065 Move W10, [X8+304]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X9, [X9+200]
	068 Add X9, X9, X10
	069 NotImplemented "Instruction LDUR not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X0, [X27]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Add X1, X31, 40
	077 Add X2, X31, 32
	078 Move X0, X23
	079 Call SoapServices.GetXmlTypeForInteropType, X0, X1, X2
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {95}
	084 Move X0, [X27]
	085 Move X21, [X31+32]
	086 Move X19, [X31+40]
	087 Move W8, [X0+224]
	088 Compare W8, 0
	089 JumpIfNotEqual {91}
	090 Call 0x1C17DFC
	091 Move X0, X19
	092 Move X1, X21
	093 Move X2, X23
	094 Call SoapServices.RegisterInteropXmlType, X0, X1, X2
	095 Move X0, [X27]
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {100}
	099 Call 0x1C17DFC
	100 Add X1, X31, 40
	101 Add X2, X31, 32
	102 Move X0, X23
	103 Call SoapServices.GetXmlElementForInteropType, X0, X1, X2
	104 Move TEMP, X0
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfNotEqual {119}
	108 Move X0, [X27]
	109 Move X21, [X31+32]
	110 Move X19, [X31+40]
	111 Move W8, [X0+224]
	112 Compare W8, 0
	113 JumpIfNotEqual {115}
	114 Call 0x1C17DFC
	115 Move X0, X19
	116 Move X1, X21
	117 Move X2, X23
	118 Call SoapServices.RegisterInteropXmlElement, X0, X1, X2
	119 Move X0, [X27]
	120 Move W8, [X0+224]
	121 Compare W8, 0
	122 JumpIfNotEqual {125}
	123 Call 0x1C17DFC
	124 Move X0, [X27]
	125 Move X8, [X0+184]
	126 Move X0, [X8+32]
	127 Compare X0, 0
	128 JumpIfEqual {302}
	129 Move X8, [X0]
	130 Move X9, [X8+872]
	131 Move X1, [X8+880]
	132 NotImplemented "Instruction BLR not yet implemented."
	133 Move [X31+28], W31
	134 Add X1, X31, 28
	135 Move X2, X31
	136 Move [X31+8], X0
	137 Call Monitor.Enter, X0, X1
	138 Move X0, [X20]
	139 Call 0x1C17F10
	140 Move X21, X0
	141 Move X1, X31
	142 Call Object..ctor, X0
	143 Compare X23, 0
	144 JumpIfEqual {305}
	145 Move X8, [X23]
	146 Move X9, [X8+1672]
	147 Move X2, [X8+1680]
	148 Move W1, 52
	149 Move X0, X23
	150 NotImplemented "Instruction BLR not yet implemented."
	151 Move X22, X0
	152 Move [X31+16], X23
	153 Compare X0, 0
	154 JumpIfEqual {306}
	155 Move X8, [X22+24]
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Move X29, 0xEA6000
	158 Move X19, 0xEA6000
	159 Move X29, [X29+3432]
	160 Move X19, [X19+3480]
	161 Move X28, X31
	162 And X8, X8, 0
	163 Add X20, X22, 32
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move X0, [X29]
	166 Move X23, [X20]
	167 Move W8, [X0+224]
	168 Compare W8, 0
	169 JumpIfNotEqual {171}
	170 Call 0x1C17DFC
	171 Move X0, X23
	172 Call InternalRemotingServices.GetCachedSoapAttribute, X0
	173 Move X25, X0
	174 Compare X0, 0
	175 JumpIfEqual {294}
	176 Move X1, [X19]
	177 Move X8, [X25]
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move W8, [X25+48]
	180 Compare W8, 0
	181 JumpIfEqual {251}
	182 Move X8, [X25]
	183 Move X24, [X25+40]
	184 Move X9, [X8+392]
	185 Move X1, [X8+400]
	186 Move X0, X25
	187 NotImplemented "Instruction BLR not yet implemented."
	188 Move X26, X0
	189 Move X0, [X27]
	190 Move W8, [X0+224]
	191 Compare W8, 0
	192 JumpIfNotEqual {194}
	193 Call 0x1C17DFC
	194 Move X0, X24
	195 Move X1, X26
	196 Call SoapServices.GetNameKey, X0, X1
	197 Move X8, [X25]
	198 Move X24, X0
	199 Move X9, [X8+376]
	200 Move X1, [X8+384]
	201 Move X0, X25
	202 NotImplemented "Instruction BLR not yet implemented."
	203 Move TEMP, X0
	204 And TEMP, TEMP, 1
	205 Compare TEMP, 1
	206 JumpIfNotEqual {229}
	207 Compare X21, 0
	208 JumpIfEqual {299}
	209 Move X25, [X21+16]
	210 Compare X25, 0
	211 JumpIfNotEqual {222}
	212 Move X8, 0xEA6000
	213 Move X8, [X8+3512]
	214 Move X0, [X8]
	215 Call 0x1C17F10
	216 Move X25, X0
	217 Move X1, X31
	218 Call Hashtable..ctor, X0
	219 Move [X21+16], X25
	220 Compare X25, 0
	221 JumpIfEqual {300}
	222 Move X8, [X25]
	223 Move X9, [X8+744]
	224 Move X3, [X8+752]
	225 Move X0, X25
	226 Move X1, X24
	227 Move X2, X23
	228 NotImplemented "Instruction BLR not yet implemented."
	229 Compare X21, 0
	230 JumpIfEqual {298}
	231 Move X25, [X21+24]
	232 Compare X25, 0
	233 JumpIfNotEqual {244}
	234 Move X8, 0xEA6000
	235 Move X8, [X8+3512]
	236 Move X0, [X8]
	237 Call 0x1C17F10
	238 Move X25, X0
	239 Move X1, X31
	240 Call Hashtable..ctor, X0
	241 Move [X21+24], X25
	242 Compare X25, 0
	243 JumpIfEqual {301}
	244 Move X8, [X25]
	245 Move X9, [X8+744]
	246 Move X3, [X8+752]
	247 Move X0, X25
	248 Move X1, X24
	249 Move X2, X23
	250 NotImplemented "Instruction BLR not yet implemented."
	251 Move W8, [X22+24]
	252 Add X28, X28, 1
	253 NotImplemented "Instruction CMP not yet implemented."
	254 Move X0, [X27]
	255 Move W8, [X0+224]
	256 Compare W8, 0
	257 JumpIfEqual {259}
	258 Move X1, [X31+16]
	259 Call 0x1C17DFC
	260 Move X1, [X31+16]
	261 Move X0, [X27]
	262 Move X8, [X0+184]
	263 Move X0, [X8+32]
	264 Compare X0, 0
	265 JumpIfEqual {307}
	266 Move X8, [X0]
	267 Move X9, [X8+744]
	268 Move X3, [X8+752]
	269 Move X2, X21
	270 NotImplemented "Instruction BLR not yet implemented."
	271 Move X21, X31
	272 Move W8, [X31+28]
	273 Compare W8, 0
	274 JumpIfEqual {278}
	275 Move X0, [X31+8]
	276 Move X1, X31
	277 Call Monitor.Exit, X0
	278 Compare X21, 0
	279 JumpIfNotEqual {303}
	280 Move X20, [X31+128]
	281 Move X19, [X31+136]
	282 Move X22, [X31+112]
	283 Move X21, [X31+120]
	284 Move X24, [X31+96]
	285 Move X23, [X31+104]
	286 Move X26, [X31+80]
	287 Move X25, [X31+88]
	288 Move X28, [X31+64]
	289 Move X27, [X31+72]
	290 Move X29, [X31+48]
	291 Move X30, [X31+56]
	292 Add X31, X31, 144
	293 Return 
	294 Call 0x1C17F20
	295 Call 0x1C17F28
	296 Move X0, X25
	297 Call 0x1C181E0
	298 Call 0x1C17F20
	299 Call 0x1C17F20
	300 Call 0x1C17F20
	301 Call 0x1C17F20
	302 Call 0x1C17F20
	303 Move X0, X21
	304 Call 0x1C17F18
	305 Call 0x1C17F20
	306 Call 0x1C17F20
	307 Call 0x1C17F20
	308 Move X20, X0
	309 NotImplemented "Instruction CMP not yet implemented."
	310 Move X0, X20
	311 Call 0x3EB2AD0
	312 Move X21, [X0]
	313 Call 0x3EB2AE0
	314 Move X21, X31
	315 Move X20, X0
	316 Move W8, [X31+28]
	317 Compare W8, 0
	318 JumpIfEqual {322}
	319 Move X0, [X31+8]
	320 Move X1, X31
	321 Call Monitor.Exit, X0
	322 Compare X21, 0
	323 JumpIfNotEqual {326}
	324 Move X0, X20
	325 Call 0x1D2D690
	326 Move X0, X21
	327 Call 0x1C17F18
	328 Call 0x1991590

Method: System.Void RegisterInteropXmlElement(System.String xmlElement, System.String xmlNamespace, System.Type type)

Disassembly:
	0x0327E074 LDR X1, [X26]
	0x0327E078 LDRH W9, [X8 + 0x12E]
	0x0327E07C CBZ X9, 0x327E0A0
	0x0327E080 LDR X10, [X8 + 0xB0]
	0x0327E084 ADD X10, X10, 0x8
	0x0327E088 LDUR X11, [X10 - 0x8]
	0x0327E08C CMP X11, X1
	0x0327E090 B.EQ 0x327E0B0
	0x0327E094 SUBS X9, X9, 0x1
	0x0327E098 ADD X10, X10, 0x10
	0x0327E09C B.NE 0x327E088
	0x0327E0A0 MOVZ W2, 0x3
	0x0327E0A4 MOV X0, X19
	0x0327E0A8 BL 0x1C5C788
	0x0327E0AC B 0x327E0C0
	0x0327E0B0 LDR W9, [X10]
	0x0327E0B4 ADD W9, W9, 0x3
	0x0327E0B8 ADD X8, X8, W9, 0x4, SXTW
	0x0327E0BC ADD X0, X8, 0x138
	0x0327E0C0 LDP X8, X1, [X0]
	0x0327E0C4 MOV X0, X19
	0x0327E0C8 BLR X8
	0x0327E0CC CBZ X0, 0x327E5C8
	0x0327E0D0 LDR X8, [X0]
	0x0327E0D4 LDR X9, [X8 + 0x2F8]
	0x0327E0D8 LDR X1, [X8 + 0x300]
	0x0327E0DC BLR X9
	0x0327E0E0 CBZ X22, 0x327E5C8
	0x0327E0E4 ADRP X9, 0xEA6000
	0x0327E0E8 LDR X9, [X9 + 0x278]
	0x0327E0EC LDR X8, [X22]
	0x0327E0F0 LDR X1, [X9]
	0x0327E0F4 LDRB W10, [X8 + 0x130]
	0x0327E0F8 LDRB W9, [X1 + 0x130]
	0x0327E0FC CMP W10, W9
	0x0327E100 B.CC 0x327E5EC
	0x0327E104 LDR X10, [X8 + 0xC8]
	0x0327E108 ADD X9, X10, X9, 0x3, LSL
	0x0327E10C LDUR X9, [X9 - 0x8]
	0x0327E110 CMP X9, X1
	0x0327E114 B.NE 0x327E5EC
	0x0327E118 LDR X9, [X8 + 0x3C8]
	0x0327E11C LDR X1, [X8 + 0x3D0]
	0x0327E120 MOV X20, X0
	0x0327E124 MOV X0, X22
	0x0327E128 BLR X9
	0x0327E12C CBZ X0, 0x327E5C8
	0x0327E130 LDR X8, [X0]
	0x0327E134 MOV X1, X20
	0x0327E138 LDR X9, [X8 + 0x3D8]
	0x0327E13C LDR X2, [X8 + 0x3E0]
	0x0327E140 BLR X9
	0x0327E144 MOV X22, X0
	0x0327E148 LDR X8, [X19]
	0x0327E14C LDR X1, [X26]
	0x0327E150 LDRH W9, [X8 + 0x12E]
	0x0327E154 CBZ X9, 0x327E178
	0x0327E158 LDR X10, [X8 + 0xB0]
	0x0327E15C ADD X10, X10, 0x8
	0x0327E160 LDUR X11, [X10 - 0x8]
	0x0327E164 CMP X11, X1
	0x0327E168 B.EQ 0x327E188
	0x0327E16C SUBS X9, X9, 0x1
	0x0327E170 ADD X10, X10, 0x10
	0x0327E174 B.NE 0x327E160
	0x0327E178 MOVZ W2, 0x2
	0x0327E17C MOV X0, X19
	0x0327E180 BL 0x1C5C788
	0x0327E184 B 0x327E198
	0x0327E188 LDR W9, [X10]
	0x0327E18C ADD W9, W9, 0x2
	0x0327E190 ADD X8, X8, W9, 0x4, SXTW
	0x0327E194 ADD X0, X8, 0x138
	0x0327E198 LDP X8, X1, [X0]
	0x0327E19C MOV X0, X19
	0x0327E1A0 BLR X8
	0x0327E1A4 MOV X1, X31
	0x0327E1A8 BL 0x32913D8
	0x0327E1AC LDR X8, [X19]
	0x0327E1B0 LDR X1, [X26]
	0x0327E1B4 MOV X20, X0
	0x0327E1B8 LDRH W9, [X8 + 0x12E]
	0x0327E1BC CBZ X9, 0x327E1E0
	0x0327E1C0 LDR X10, [X8 + 0xB0]
	0x0327E1C4 ADD X10, X10, 0x8
	0x0327E1C8 LDUR X11, [X10 - 0x8]
	0x0327E1CC CMP X11, X1
	0x0327E1D0 B.EQ 0x327E1F0
	0x0327E1D4 SUBS X9, X9, 0x1
	0x0327E1D8 ADD X10, X10, 0x10
	0x0327E1DC B.NE 0x327E1C8
	0x0327E1E0 MOVZ W2, 0x1
	0x0327E1E4 MOV X0, X19
	0x0327E1E8 BL 0x1C5C788
	0x0327E1EC B 0x327E200
	0x0327E1F0 LDR W9, [X10]
	0x0327E1F4 ADD W9, W9, 0x1
	0x0327E1F8 ADD X8, X8, W9, 0x4, SXTW
	0x0327E1FC ADD X0, X8, 0x138

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0x115F000
	009 Move X23, 0xEA7000
	010 Move W8, [X19+1605]
	011 Move X23, [X23+408]
	012 Move X20, X2
	013 Move X21, X1
	014 Move X22, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xEA7000
	020 Move X0, [X0+408]
	021 Call 0x1C17CF4
	022 Move X0, 0xE76000
	023 Move X0, [X0+3544]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X19+1605], W8
	027 Move X0, [X23]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {33}
	031 Call 0x1C17DFC
	032 Move X0, [X23]
	033 Move X8, [X0+184]
	034 Move X0, [X8+8]
	035 Compare X0, 0
	036 JumpIfEqual {87}
	037 Move X8, [X0]
	038 Move X9, [X8+872]
	039 Move X1, [X8+880]
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move X19, X0
	042 Move [X31+12], W31
	043 Add X1, X31, 12
	044 Move X2, X31
	045 Call Monitor.Enter, X0, X1
	046 Move X0, [X23]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1C17DFC
	051 Move X0, [X23]
	052 Move X9, 0xE76000
	053 Move X8, [X0+184]
	054 Move X9, [X9+3544]
	055 Move X23, [X8+8]
	056 Move X1, [X9]
	057 Move X0, X22
	058 Move X2, X21
	059 Move X3, X31
	060 Call String.Concat, X0, X1, X2
	061 Move X1, X0
	062 Compare X23, 0
	063 JumpIfEqual {90}
	064 Move X8, [X23]
	065 Move X9, [X8+744]
	066 Move X3, [X8+752]
	067 Move X0, X23
	068 Move X2, X20
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Move X20, X31
	071 Move W8, [X31+12]
	072 Compare W8, 0
	073 JumpIfEqual {77}
	074 Move X0, X19
	075 Move X1, X31
	076 Call Monitor.Exit, X0
	077 Compare X20, 0
	078 JumpIfNotEqual {88}
	079 Move X20, [X31+48]
	080 Move X19, [X31+56]
	081 Move X22, [X31+32]
	082 Move X21, [X31+40]
	083 Move X30, [X31+16]
	084 Move X23, [X31+24]
	085 Add X31, X31, 64
	086 Return 
	087 Call 0x1C17F20
	088 Move X0, X20
	089 Call 0x1C17F18
	090 Call 0x1C17F20
	091 Move X21, X0
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move X0, X21
	094 Call 0x3EB2AD0
	095 Move X20, [X0]
	096 Call 0x3EB2AE0
	097 Move X20, X31
	098 Move X21, X0
	099 Move W8, [X31+12]
	100 Compare W8, 0
	101 JumpIfEqual {105}
	102 Move X0, X19
	103 Move X1, X31
	104 Call Monitor.Exit, X0
	105 Compare X20, 0
	106 JumpIfNotEqual {109}
	107 Move X0, X21
	108 Call 0x1D2D690
	109 Move X0, X20
	110 Call 0x1C17F18
	111 Call 0x1991590

Method: System.Void RegisterInteropXmlType(System.String xmlType, System.String xmlTypeNamespace, System.Type type)

Disassembly:
	0x0327E200 LDP X8, X1, [X0]
	0x0327E204 MOV X0, X19
	0x0327E208 BLR X8
	0x0327E20C MOV X23, X0
	0x0327E210 LDR X0, [X24]
	0x0327E214 LDR W8, [X0 + 0xE0]
	0x0327E218 CBNZ W8, 0x327E220
	0x0327E21C BL 0x1C16DFC
	0x0327E220 ADD X3, X31, 0x8
	0x0327E224 MOV X0, X22
	0x0327E228 MOV X1, X21
	0x0327E22C MOV X2, X23
	0x0327E230 BL 0x1C4A608
	0x0327E234 CBZ X22, 0x327E5F4
	0x0327E238 LDR X8, [X22]
	0x0327E23C MOV X21, X0
	0x0327E240 LDR X1, [X8 + 0x250]
	0x0327E244 LDR X9, [X8 + 0x248]
	0x0327E248 MOV X0, X22
	0x0327E24C BLR X9
	0x0327E250 MOV X24, X0
	0x0327E254 CBZ X0, 0x327E5F8
	0x0327E258 ADRP X8, 0xE75000
	0x0327E25C LDR X8, [X8 + 0x9D0]
	0x0327E260 LDR W1, [X24 + 0x18]
	0x0327E264 LDR X0, [X8]
	0x0327E268 BL 0x1C16D6C
	0x0327E26C LDR W8, [X24 + 0x18]
	0x0327E270 MOV X22, X0
	0x0327E274 CMP W8, 0x1
	0x0327E278 B.LT 0x327E40C
	0x0327E27C MOV W23, W31
	0x0327E280 MOV W27, W31
	0x0327E284 CMP W23, W8
	0x0327E288 B.CS 0x327E5A0
	0x0327E28C ADD X8, X24, W23, 0x3, SXTW
	0x0327E290 LDR X25, [X8 + 0x20]
	0x0327E294 CBZ X25, 0x327E5A4
	0x0327E298 MOV X0, X25
	0x0327E29C MOV X1, X31
	0x0327E2A0 BL 0x32CF478
	0x0327E2A4 TBZ X0, 0x0, 0x327E2C8
	0x0327E2A8 LDR X8, [X25]
	0x0327E2AC LDP X9, X1, [X8 + 0x1D8]
	0x0327E2B0 MOV X0, X25
	0x0327E2B4 BLR X9
	0x0327E2B8 CBZ X0, 0x327E5AC
	0x0327E2BC MOV X1, X31
	0x0327E2C0 BL 0x3396C08
	0x0327E2C4 TBZ X0, 0x0, 0x327E34C
	0x0327E2C8 LDR X8, [X25]
	0x0327E2CC LDP X9, X1, [X8 + 0x1D8]
	0x0327E2D0 MOV X0, X25
	0x0327E2D4 BLR X9
	0x0327E2D8 CBZ X0, 0x327E5A8
	0x0327E2DC MOV X1, X31
	0x0327E2E0 BL 0x3396C08
	0x0327E2E4 TBZ X0, 0x0, 0x327E334
	0x0327E2E8 LDR X8, [X31 + 0x8]
	0x0327E2EC CBZ X8, 0x327E5C0
	0x0327E2F0 LDR W9, [X8 + 0x18]
	0x0327E2F4 CMP W27, W9
	0x0327E2F8 B.CS 0x327E5C4
	0x0327E2FC CBZ X22, 0x327E5BC
	0x0327E300 ADD X8, X8, W27, 0x3, SXTW
	0x0327E304 LDR X25, [X8 + 0x20]
	0x0327E308 CBZ X25, 0x327E320
	0x0327E30C LDR X8, [X22]
	0x0327E310 LDR X1, [X8 + 0x40]
	0x0327E314 MOV X0, X25
	0x0327E318 BL 0x1C16E00
	0x0327E31C CBZ X0, 0x327E5D4
	0x0327E320 LDR W8, [X22 + 0x18]
	0x0327E324 CMP W23, W8
	0x0327E328 B.CS 0x327E5B4
	0x0327E32C ADD W27, W27, 0x1
	0x0327E330 B 0x327E3EC
	0x0327E334 CBZ X22, 0x327E5B8
	0x0327E338 LDR W8, [X22 + 0x18]
	0x0327E33C CMP W23, W8
	0x0327E340 B.CS 0x327E5B0
	0x0327E344 MOV X25, X31
	0x0327E348 B 0x327E3EC
	0x0327E34C LDR X8, [X25]
	0x0327E350 LDP X9, X1, [X8 + 0x1E8]
	0x0327E354 MOV X0, X25
	0x0327E358 BLR X9
	0x0327E35C LDR X8, [X19]
	0x0327E360 LDR X1, [X26]
	0x0327E364 MOV W25, W0
	0x0327E368 LDRH W9, [X8 + 0x12E]
	0x0327E36C CBZ X9, 0x327E390
	0x0327E370 LDR X10, [X8 + 0xB0]
	0x0327E374 ADD X10, X10, 0x8
	0x0327E378 LDUR X11, [X10 - 0x8]
	0x0327E37C CMP X11, X1
	0x0327E380 B.EQ 0x327E3A0
	0x0327E384 SUBS X9, X9, 0x1
	0x0327E388 ADD X10, X10, 0x10

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0x115F000
	009 Move X23, 0xEA7000
	010 Move W8, [X19+1606]
	011 Move X23, [X23+408]
	012 Move X20, X2
	013 Move X21, X1
	014 Move X22, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xEA7000
	020 Move X0, [X0+408]
	021 Call 0x1C17CF4
	022 Move X0, 0xE76000
	023 Move X0, [X0+3544]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X19+1606], W8
	027 Move X0, [X23]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {33}
	031 Call 0x1C17DFC
	032 Move X0, [X23]
	033 Move X8, [X0+184]
	034 Move X0, [X8]
	035 Compare X0, 0
	036 JumpIfEqual {87}
	037 Move X8, [X0]
	038 Move X9, [X8+872]
	039 Move X1, [X8+880]
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move X19, X0
	042 Move [X31+12], W31
	043 Add X1, X31, 12
	044 Move X2, X31
	045 Call Monitor.Enter, X0, X1
	046 Move X0, [X23]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1C17DFC
	051 Move X0, [X23]
	052 Move X9, 0xE76000
	053 Move X8, [X0+184]
	054 Move X9, [X9+3544]
	055 Move X23, [X8]
	056 Move X1, [X9]
	057 Move X0, X22
	058 Move X2, X21
	059 Move X3, X31
	060 Call String.Concat, X0, X1, X2
	061 Move X1, X0
	062 Compare X23, 0
	063 JumpIfEqual {90}
	064 Move X8, [X23]
	065 Move X9, [X8+744]
	066 Move X3, [X8+752]
	067 Move X0, X23
	068 Move X2, X20
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Move X20, X31
	071 Move W8, [X31+12]
	072 Compare W8, 0
	073 JumpIfEqual {77}
	074 Move X0, X19
	075 Move X1, X31
	076 Call Monitor.Exit, X0
	077 Compare X20, 0
	078 JumpIfNotEqual {88}
	079 Move X20, [X31+48]
	080 Move X19, [X31+56]
	081 Move X22, [X31+32]
	082 Move X21, [X31+40]
	083 Move X30, [X31+16]
	084 Move X23, [X31+24]
	085 Add X31, X31, 64
	086 Return 
	087 Call 0x1C17F20
	088 Move X0, X20
	089 Call 0x1C17F18
	090 Call 0x1C17F20
	091 Move X21, X0
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move X0, X21
	094 Call 0x3EB2AD0
	095 Move X20, [X0]
	096 Call 0x3EB2AE0
	097 Move X20, X31
	098 Move X21, X0
	099 Move W8, [X31+12]
	100 Compare W8, 0
	101 JumpIfEqual {105}
	102 Move X0, X19
	103 Move X1, X31
	104 Call Monitor.Exit, X0
	105 Compare X20, 0
	106 JumpIfNotEqual {109}
	107 Move X0, X21
	108 Call 0x1D2D690
	109 Move X0, X20
	110 Call 0x1C17F18
	111 Call 0x1991590

Method: System.String EncodeNs(System.String ns)

Disassembly:
	0x0328534C MOV X24, X0
	0x03285350 TBNZ X8, 0x0, 0x32853BC
	0x03285354 ADRP X0, 0xE9F000
	0x03285358 LDR X0, [X0 + 0x448]
	0x0328535C BL 0x1C16CF4
	0x03285360 ADRP X0, 0xE9F000
	0x03285364 LDR X0, [X0 + 0x450]
	0x03285368 BL 0x1C16CF4
	0x0328536C ADRP X0, 0xE9F000
	0x03285370 LDR X0, [X0 + 0x458]
	0x03285374 BL 0x1C16CF4
	0x03285378 ADRP X0, 0xE9F000
	0x0328537C LDR X0, [X0 + 0x270]
	0x03285380 BL 0x1C16CF4
	0x03285384 ADRP X0, 0xE9F000
	0x03285388 LDR X0, [X0 + 0x460]
	0x0328538C BL 0x1C16CF4
	0x03285390 ADRP X0, 0xE9F000
	0x03285394 LDR X0, [X0 + 0x430]
	0x03285398 BL 0x1C16CF4
	0x0328539C ADRP X0, 0xE9F000
	0x032853A0 LDR X0, [X0 + 0x330]
	0x032853A4 BL 0x1C16CF4
	0x032853A8 ADRP X0, 0xE9F000
	0x032853AC LDR X0, [X0 + 0x280]
	0x032853B0 BL 0x1C16CF4
	0x032853B4 MOVZ W8, 0x1
	0x032853B8 STRB W8, [X22 + 0x659]
	0x032853BC CBZ X20, 0x32853F4
	0x032853C0 ADRP X9, 0xE9F000
	0x032853C4 LDR X9, [X9 + 0x430]
	0x032853C8 LDR X8, [X20]
	0x032853CC LDR X1, [X9]
	0x032853D0 LDRB W10, [X8 + 0x130]
	0x032853D4 LDRB W9, [X1 + 0x130]
	0x032853D8 CMP W10, W9
	0x032853DC B.CC 0x3285A54
	0x032853E0 LDR X8, [X8 + 0xC8]
	0x032853E4 ADD X8, X8, X9, 0x3, LSL
	0x032853E8 LDUR X8, [X8 - 0x8]
	0x032853EC CMP X8, X1
	0x032853F0 B.NE 0x3285A54
	0x032853F4 MOV X0, X31
	0x032853F8 BL 0x33E3C68
	0x032853FC CBZ X0, 0x3285BA8
	0x03285400 MOV X1, X31
	0x03285404 BL 0x33E5BCC
	0x03285408 CBZ X0, 0x3285BA8
	0x0328540C MOV X1, X31
	0x03285410 BL 0x33E48DC
	0x03285414 CBZ X20, 0x3285BA8
	0x03285418 ADRP X27, 0xE9F000
	0x0328541C LDR X27, [X27 + 0x330]
	0x03285420 STR X0, [X20 + 0x30]
	0x03285424 MOV X0, X20
	0x03285428 MOV X1, X31
	0x0328542C BL 0x329D0D4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1158000
	005 Move W8, [X20+1607]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {31}
	011 Move X0, 0xEA0000
	012 Move X0, [X0+1048]
	013 Call 0x1C17CF4
	014 Move X0, 0xE9C000
	015 Move X0, [X0+4024]
	016 Call 0x1C17CF4
	017 Move X0, 0xE6F000
	018 Move X0, [X0+3544]
	019 Call 0x1C17CF4
	020 Move X0, 0xEA0000
	021 Move X0, [X0+1056]
	022 Call 0x1C17CF4
	023 Move X0, 0xE71000
	024 Move X0, [X0+928]
	025 Call 0x1C17CF4
	026 Move X0, 0xEA0000
	027 Move X0, [X0+1064]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+1607], W8
	031 Compare X19, 0
	032 JumpIfEqual {66}
	033 Move X8, 0xE71000
	034 Move X9, 0xEA0000
	035 Move X8, [X8+928]
	036 Move X9, [X9+1056]
	037 Move X0, X19
	038 Move X3, X31
	039 Move X1, [X8]
	040 Move X2, [X9]
	041 Call String.Replace, X0, X1, X2
	042 Compare X0, 0
	043 JumpIfEqual {66}
	044 Move X8, 0xE6F000
	045 Move X9, 0xEA0000
	046 Move X8, [X8+3544]
	047 Move X9, [X9+1048]
	048 Move X3, X31
	049 Move X1, [X8]
	050 Move X2, [X9]
	051 Call String.Replace, X0, X1, X2
	052 Compare X0, 0
	053 JumpIfEqual {66}
	054 Move X8, 0xE9C000
	055 Move X9, 0xEA0000
	056 Move X8, [X8+4024]
	057 Move X9, [X9+1064]
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move X3, X31
	061 Move X1, [X8]
	062 Move X2, [X9]
	063 Move X30, [X31+32]
	064 Call String.Replace, X0, X1, X2
	065 Return X0
	066 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03285890 ADD X10, X10, 0x10
	0x03285894 B.NE 0x3285880
	0x03285898 MOV X0, X22
	0x0328589C MOV W2, W31
	0x032858A0 BL 0x1C5C788
	0x032858A4 B 0x32858B4
	0x032858A8 LDRSW X9, [X10]
	0x032858AC ADD X8, X8, X9, 0x4, LSL
	0x032858B0 ADD X0, X8, 0x138
	0x032858B4 LDP X8, X1, [X0]
	0x032858B8 MOV X0, X22
	0x032858BC BLR X8
	0x032858C0 STR X0, [X28]
	0x032858C4 CBNZ X0, 0x3285A5C
	0x032858C8 ADRP X8, 0xE9F000
	0x032858CC LDR X8, [X8 + 0x450]
	0x032858D0 MOV X0, X22
	0x032858D4 LDR X1, [X8]
	0x032858D8 BL 0x1C16E00
	0x032858DC CBZ X0, 0x3285928
	0x032858E0 LDR X8, [X21]
	0x032858E4 CBNZ X8, 0x32859E0
	0x032858E8 LDR X8, [X22]
	0x032858EC LDR X1, [X27]
	0x032858F0 LDRH W9, [X8 + 0x12E]
	0x032858F4 CBZ X9, 0x3285918
	0x032858F8 LDR X10, [X8 + 0xB0]
	0x032858FC ADD X10, X10, 0x8
	0x03285900 LDUR X11, [X10 - 0x8]
	0x03285904 CMP X11, X1
	0x03285908 B.EQ 0x32859C0
	0x0328590C SUBS X9, X9, 0x1
	0x03285910 ADD X10, X10, 0x10
	0x03285914 B.NE 0x3285900
	0x03285918 MOVZ W2, 0x1
	0x0328591C MOV X0, X22
	0x03285920 BL 0x1C5C788
	0x03285924 B 0x32859D0
	0x03285928 MOV X0, X20
	0x0328592C MOV X1, X31
	0x03285930 BL 0x329D0D4
	0x03285934 CMP W0, 0x1
	0x03285938 B.EQ 0x32859E0
	0x0328593C MOV X0, X20
	0x03285940 MOV X1, X31
	0x03285944 BL 0x329D0D4
	0x03285948 CBZ W0, 0x3285974
	0x0328594C MOV X0, X20
	0x03285950 MOV X1, X31
	0x03285954 BL 0x329D0D4
	0x03285958 CMP W0, 0x2
	0x0328595C B.NE 0x3285984
	0x03285960 LDR X8, [X20 + 0x48]
	0x03285964 CBZ X8, 0x3285BA8
	0x03285968 LDR X1, [X8 + 0x60]
	0x0328596C MOV X0, X22
	0x03285970 B 0x328597C
	0x03285974 MOV X0, X22
	0x03285978 MOV X1, X20
	0x0328597C BL 0x3286158

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x1158000
	006 Move X21, 0xE9F000
	007 Move X20, 0xEA0000
	008 Move W8, [X19+1608]
	009 Move X21, [X21+3512]
	010 Move X20, [X20+408]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xE9F000
	016 Move X0, [X0+3512]
	017 Call 0x1C17CF4
	018 Move X0, 0xEA0000
	019 Move X0, [X0+408]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+1608], W8
	023 Move X0, [X21]
	024 Call 0x1C17F10
	025 Move X1, X31
	026 Move X19, X0
	027 Call Hashtable..ctor, X0
	028 Move X8, [X20]
	029 Move X8, [X8+184]
	030 Move [X8], X19
	031 Move X0, [X21]
	032 Call 0x1C17F10
	033 Move X1, X31
	034 Move X19, X0
	035 Call Hashtable..ctor, X0
	036 Move X8, [X20]
	037 Move X8, [X8+184]
	038 Move [X8+8], X19
	039 Move X0, [X21]
	040 Call 0x1C17F10
	041 Move X1, X31
	042 Move X19, X0
	043 Call Hashtable..ctor, X0
	044 Move X8, [X20]
	045 Move X8, [X8+184]
	046 Move [X8+16], X19
	047 Move X0, [X21]
	048 Call 0x1C17F10
	049 Move X1, X31
	050 Move X19, X0
	051 Call Hashtable..ctor, X0
	052 Move X8, [X20]
	053 Move X8, [X8+184]
	054 Move [X8+24], X19
	055 Move X0, [X21]
	056 Call 0x1C17F10
	057 Move X1, X31
	058 Move X19, X0
	059 Call Hashtable..ctor, X0
	060 Move X8, [X20]
	061 Move X8, [X8+184]
	062 Move [X8+32], X19
	063 Move X20, [X31+16]
	064 Move X19, [X31+24]
	065 Move X30, [X31+32]
	066 Move X21, [X31+40]
	067 Return 

