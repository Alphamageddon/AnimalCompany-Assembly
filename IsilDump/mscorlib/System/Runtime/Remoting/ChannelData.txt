Type: System.Runtime.Remoting.ChannelData

Method: System.Collections.ArrayList get_ServerProviders()

Disassembly:
	0x03278DF4 B.LS 0x3278FAC
	0x03278DF8 STR X20, [X24 + 0x28]
	0x03278DFC CBZ X21, 0x3278F90
	0x03278E00 ADRP X20, 0xEA5000
	0x03278E04 LDR X20, [X20 + 0x978]
	0x03278E08 MOV X0, X21
	0x03278E0C MOV X1, X23
	0x03278E10 MOV X2, X31
	0x03278E14 BL 0x3397418
	0x03278E18 LDR X8, [X20]
	0x03278E1C MOV X20, X0
	0x03278E20 LDR W9, [X8 + 0xE0]
	0x03278E24 CBNZ W9, 0x3278E30
	0x03278E28 MOV X0, X8
	0x03278E2C BL 0x1C16DFC
	0x03278E30 MOV X0, X20
	0x03278E34 MOV X1, X31
	0x03278E38 MOV X2, X31
	0x03278E3C BL 0x32CC828
	0x03278E40 TBNZ X0, 0x0, 0x3278FFC
	0x03278E44 CBZ X20, 0x327901C
	0x03278E48 MOV X0, X20
	0x03278E4C MOV X1, X24
	0x03278E50 MOV X2, X31
	0x03278E54 BL 0x32CC7E8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1165000
	005 Move W8, [X20+1534]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xEA9000
	012 Move X0, [X0+2976]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1534], W8
	016 Move X20, [X19+48]
	017 Compare X20, 0
	018 JumpIfNotEqual {27}
	019 Move X8, 0xEA9000
	020 Move X8, [X8+2976]
	021 Move X0, [X8]
	022 Call 0x1C17F10
	023 Move X1, X31
	024 Move X20, X0
	025 Call ArrayList..ctor, X0
	026 Move [X19+48], X20
	027 Move X0, X20
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Return X0

Method: System.Collections.ArrayList get_ClientProviders()

Disassembly:
	0x03279558 ADD X10, X10, 0x10
	0x0327955C B.NE 0x3279548
	0x03279560 MOV X0, X19
	0x03279564 MOV W2, W31
	0x03279568 BL 0x1C5C788
	0x0327956C B 0x327957C
	0x03279570 LDRSW X9, [X10]
	0x03279574 ADD X8, X8, X9, 0x4, LSL
	0x03279578 ADD X0, X8, 0x138
	0x0327957C LDP X8, X1, [X0]
	0x03279580 MOV X0, X19
	0x03279584 BLR X8
	0x03279588 CBNZ X20, 0x32795D8
	0x0327958C LDP X20, X19, [X31 + 0x50]
	0x03279590 LDP X22, X21, [X31 + 0x40]
	0x03279594 LDP X24, X23, [X31 + 0x30]
	0x03279598 LDP X26, X25, [X31 + 0x20]
	0x0327959C LDP X28, X27, [X31 + 0x10]
	0x032795A0 LDR X30, [X31], #0x60
	0x032795A4 RET
	0x032795A8 MOV X0, X20
	0x032795AC BL 0x1C171E0
	0x032795B0 MOV X0, X20
	0x032795B4 BL 0x1C171E0
	0x032795B8 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1164000
	005 Move W8, [X20+1535]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xEA8000
	012 Move X0, [X0+2976]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1535], W8
	016 Move X20, [X19+56]
	017 Compare X20, 0
	018 JumpIfNotEqual {27}
	019 Move X8, 0xEA8000
	020 Move X8, [X8+2976]
	021 Move X0, [X8]
	022 Call 0x1C17F10
	023 Move X1, X31
	024 Move X20, X0
	025 Call ArrayList..ctor, X0
	026 Move [X19+56], X20
	027 Move X0, X20
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Return X0

Method: System.Collections.Hashtable get_CustomProperties()

Disassembly:
	0x0327DB60 LDP X20, X21, [X31]
	0x0327DB64 BL 0x1C16F10
	0x0327DB68 MOV X1, X19
	0x0327DB6C MOV X2, X20
	0x0327DB70 MOV X3, X21
	0x0327DB74 MOV X4, X31
	0x0327DB78 MOV X22, X0
	0x0327DB7C BL 0x32B095C
	0x0327DB80 LDR X8, [X23]
	0x0327DB84 LDR X8, [X8 + 0xB8]
	0x0327DB88 STR X22, [X8 + 0x8]
	0x0327DB8C LDR X0, [X24]
	0x0327DB90 LDP X20, X21, [X31]
	0x0327DB94 BL 0x1C16F10
	0x0327DB98 MOV X1, X31
	0x0327DB9C MOV X2, X20
	0x0327DBA0 MOV X3, X21
	0x0327DBA4 MOV X4, X31
	0x0327DBA8 MOV X19, X0
	0x0327DBAC BL 0x32B095C
	0x0327DBB0 LDR X8, [X23]
	0x0327DBB4 LDR X9, [X8 + 0xB8]
	0x0327DBB8 LDR X8, [X9 + 0x8]
	0x0327DBBC STR X19, [X9 + 0x10]
	0x0327DBC0 CBZ X8, 0x327DCA4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1160000
	005 Move W8, [X20+1536]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xEA7000
	012 Move X0, [X0+3512]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1536], W8
	016 Move X20, [X19+64]
	017 Compare X20, 0
	018 JumpIfNotEqual {27}
	019 Move X8, 0xEA7000
	020 Move X8, [X8+3512]
	021 Move X0, [X8]
	022 Call 0x1C17F10
	023 Move X1, X31
	024 Move X20, X0
	025 Call Hashtable..ctor, X0
	026 Move [X19+64], X20
	027 Move X0, X20
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Return X0

Method: System.Void CopyFrom(System.Runtime.Remoting.ChannelData other)

Disassembly:
	0x032784BC MOV W23, W31
	0x032784C0 B 0x3278084
	0x032784C4 MOV X19, X0
	0x032784C8 MOV X22, X31
	0x032784CC B 0x32784D4
	0x032784D0 MOV X19, X0
	0x032784D4 LDR X1, [X24]
	0x032784D8 MOV X0, X21
	0x032784DC BL 0x1C16E00
	0x032784E0 MOV X20, X0
	0x032784E4 CBZ X0, 0x3278540
	0x032784E8 LDR X8, [X20]
	0x032784EC LDR X1, [X24]
	0x032784F0 LDRH W9, [X8 + 0x12E]
	0x032784F4 CBZ X9, 0x3278518
	0x032784F8 LDR X10, [X8 + 0xB0]
	0x032784FC ADD X10, X10, 0x8
	0x03278500 LDUR X11, [X10 - 0x8]
	0x03278504 CMP X11, X1
	0x03278508 B.EQ 0x3278528
	0x0327850C SUBS X9, X9, 0x1
	0x03278510 ADD X10, X10, 0x10
	0x03278514 B.NE 0x3278500
	0x03278518 MOV X0, X20
	0x0327851C MOV W2, W31
	0x03278520 BL 0x1C5C788
	0x03278524 B 0x3278534
	0x03278528 LDRSW X9, [X10]
	0x0327852C ADD X8, X8, X9, 0x4, LSL
	0x03278530 ADD X0, X8, 0x138
	0x03278534 LDP X8, X1, [X0]
	0x03278538 MOV X0, X20
	0x0327853C BLR X8
	0x03278540 CBNZ X22, 0x327854C
	0x03278544 MOV X0, X19
	0x03278548 BL 0x1D2C690
	0x0327854C MOV X0, X22
	0x03278550 BL 0x1C16F18
	0x03278554 BL 0x1990590
	0x03278558 STR X30, [X31 - 0x20]!
	0x0327855C STP X20, X19, [X31 + 0x10]
	0x03278560 ADRP X20, 0x1164000
	0x03278564 LDRB W8, [X20 + 0x5FF]
	0x03278568 MOV X19, X0
	0x0327856C TBNZ X8, 0x0, 0x3278584
	0x03278570 ADRP X0, 0xEA8000
	0x03278574 LDR X0, [X0 + 0xBA0]
	0x03278578 BL 0x1C16CF4
	0x0327857C MOVZ W8, 0x1
	0x03278580 STRB W8, [X20 + 0x5FF]
	0x03278584 LDR X20, [X19 + 0x38]
	0x03278588 CBNZ X20, 0x32785AC
	0x0327858C ADRP X8, 0xEA8000
	0x03278590 LDR X8, [X8 + 0xBA0]
	0x03278594 LDR X0, [X8]
	0x03278598 BL 0x1C16F10
	0x0327859C MOV X1, X31
	0x032785A0 MOV X20, X0
	0x032785A4 BL 0x3351F5C
	0x032785A8 STR X20, [X19 + 0x38]
	0x032785AC MOV X0, X20
	0x032785B0 LDP X20, X19, [X31 + 0x10]
	0x032785B4 LDR X30, [X31], #0x20
	0x032785B8 RET
	0x032785BC STR X30, [X31 - 0x60]!
	0x032785C0 STP X28, X27, [X31 + 0x10]
	0x032785C4 STP X26, X25, [X31 + 0x20]
	0x032785C8 STP X24, X23, [X31 + 0x30]
	0x032785CC STP X22, X21, [X31 + 0x40]
	0x032785D0 STP X20, X19, [X31 + 0x50]
	0x032785D4 ADRP X20, 0x1164000
	0x032785D8 LDRB W8, [X20 + 0x6A0]
	0x032785DC MOV X19, X0
	0x032785E0 TBNZ X8, 0x0, 0x32786C4
	0x032785E4 ADRP X0, 0xEAB000
	0x032785E8 LDR X0, [X0 + 0xF08]
	0x032785EC BL 0x1C16CF4
	0x032785F0 ADRP X0, 0xEAB000
	0x032785F4 LDR X0, [X0 + 0xD08]
	0x032785F8 BL 0x1C16CF4
	0x032785FC ADRP X0, 0xEA5000
	0x03278600 LDR X0, [X0 + 0x978]
	0x03278604 BL 0x1C16CF4
	0x03278608 ADRP X0, 0xEAB000
	0x0327860C LDR X0, [X0 + 0xF10]
	0x03278610 BL 0x1C16CF4
	0x03278614 ADRP X0, 0xEAB000
	0x03278618 LDR X0, [X0 + 0xD10]
	0x0327861C BL 0x1C16CF4
	0x03278620 ADRP X0, 0xEAB000
	0x03278624 LDR X0, [X0 + 0xF18]
	0x03278628 BL 0x1C16CF4
	0x0327862C ADRP X0, 0xEAB000
	0x03278630 LDR X0, [X0 + 0xF20]
	0x03278634 BL 0x1C16CF4
	0x03278638 ADRP X0, 0xEAB000
	0x0327863C LDR X0, [X0 + 0xF28]
	0x03278640 BL 0x1C16CF4
	0x03278644 ADRP X0, 0xEAB000
	0x03278648 LDR X0, [X0 + 0xF30]
	0x0327864C BL 0x1C16CF4
	0x03278650 ADRP X0, 0xEAB000
	0x03278654 LDR X0, [X0 + 0xF38]
	0x03278658 BL 0x1C16CF4
	0x0327865C ADRP X0, 0xEAB000
	0x03278660 LDR X0, [X0 + 0xF40]
	0x03278664 BL 0x1C16CF4
	0x03278668 ADRP X0, 0xEAB000
	0x0327866C LDR X0, [X0 + 0xF48]
	0x03278670 BL 0x1C16CF4
	0x03278674 ADRP X0, 0xE7B000
	0x03278678 LDR X0, [X0 + 0x9D0]
	0x0327867C BL 0x1C16CF4
	0x03278680 ADRP X0, 0xEAB000
	0x03278684 LDR X0, [X0 + 0xED8]
	0x03278688 BL 0x1C16CF4
	0x0327868C ADRP X0, 0xE83000
	0x03278690 LDR X0, [X0 + 0xC60]
	0x03278694 BL 0x1C16CF4
	0x03278698 ADRP X0, 0xEA4000
	0x0327869C LDR X0, [X0 + 0x1B0]
	0x032786A0 BL 0x1C16CF4
	0x032786A4 ADRP X0, 0xE7B000
	0x032786A8 LDR X0, [X0 + 0x6C0]
	0x032786AC BL 0x1C16CF4
	0x032786B0 ADRP X0, 0xE86000
	0x032786B4 LDR X0, [X0]
	0x032786B8 BL 0x1C16CF4
	0x032786BC MOVZ W8, 0x1
	0x032786C0 STRB W8, [X20 + 0x6A0]
	0x032786C4 STRB W31, [X31 + 0xC]
	0x032786C8 CBZ X19, 0x3278F90
	0x032786CC MOV X0, X19
	0x032786D0 BL 0x3277DF4
	0x032786D4 CBZ X0, 0x3278F90
	0x032786D8 LDR X8, [X0]
	0x032786DC ADRP X26, 0xEAB000
	0x032786E0 ADRP X27, 0xEAB000
	0x032786E4 LDR X9, [X8 + 0x298]
	0x032786E8 LDR X1, [X8 + 0x2A0]
	0x032786EC LDR X26, [X26 + 0xD08]
	0x032786F0 LDR X27, [X27 + 0xED8]
	0x032786F4 BLR X9
	0x032786F8 SUBS W21, W0, 0x1
	0x032786FC B.MI 0x3278810
	0x03278700 ADRP X25, 0xEAB000
	0x03278704 LDR X25, [X25 + 0xF48]
	0x03278708 MOV X22, X31
	0x0327870C MOV X0, X19
	0x03278710 BL 0x3277DF4
	0x03278714 CBZ X0, 0x3278F90
	0x03278718 LDR X8, [X0]
	0x0327871C MOV W1, W21
	0x03278720 LDR X9, [X8 + 0x2E8]
	0x03278724 LDR X2, [X8 + 0x2F0]
	0x03278728 BLR X9
	0x0327872C LDR X8, [X26]
	0x03278730 MOV X20, X0
	0x03278734 LDR W9, [X8 + 0xE0]
	0x03278738 CBZ W9, 0x3278744
	0x0327873C CBNZ X20, 0x3278750
	0x03278740 B 0x3278768
	0x03278744 MOV X0, X8
	0x03278748 BL 0x1C16DFC
	0x0327874C CBZ X20, 0x3278768
	0x03278750 LDR X9, [X20]
	0x03278754 LDR X8, [X27]
	0x03278758 LDRB W11, [X9 + 0x130]
	0x0327875C LDRB W10, [X8 + 0x130]
	0x03278760 CMP W11, W10
	0x03278764 B.CS 0x3278770
	0x03278768 MOV X0, X31
	0x0327876C B 0x3278784
	0x03278770 LDR X9, [X9 + 0xC8]
	0x03278774 ADD X9, X9, X10, 0x3, LSL
	0x03278778 LDUR X9, [X9 - 0x8]
	0x0327877C CMP X9, X8
	0x03278780 CSEL X0, X20, X31, EQ
	0x03278784 BL 0x328CB60
	0x03278788 CBZ X0, 0x3278F90
	0x0327878C LDR X24, [X25]
	0x03278790 MOV X23, X0
	0x03278794 MOV X1, X24
	0x03278798 BL 0x1C16E00
	0x0327879C CBZ X0, 0x3278F94
	0x032787A0 LDR X8, [X0]
	0x032787A4 LDR X1, [X25]
	0x032787A8 MOV X20, X0
	0x032787AC LDRH W9, [X8 + 0x12E]
	0x032787B0 CBZ X9, 0x32787D4
	0x032787B4 LDR X10, [X8 + 0xB0]
	0x032787B8 ADD X10, X10, 0x8
	0x032787BC LDUR X11, [X10 - 0x8]
	0x032787C0 CMP X11, X1
	0x032787C4 B.EQ 0x32787E4
	0x032787C8 SUBS X9, X9, 0x1
	0x032787CC ADD X10, X10, 0x10
	0x032787D0 B.NE 0x32787BC
	0x032787D4 MOV X0, X20
	0x032787D8 MOV W2, W31
	0x032787DC BL 0x1C5C788
	0x032787E0 B 0x32787F0
	0x032787E4 LDRSW X9, [X10]
	0x032787E8 ADD X8, X8, X9, 0x4, LSL
	0x032787EC ADD X0, X8, 0x138
	0x032787F0 LDP X8, X2, [X0]
	0x032787F4 MOV X0, X20
	0x032787F8 MOV X1, X22
	0x032787FC BLR X8
	0x03278800 SUBS W21, W21, 0x1
	0x03278804 MOV X22, X20
	0x03278808 B.PL 0x327870C
	0x0327880C B 0x3278814
	0x03278810 MOV X20, X31
	0x03278814 MOV X0, X19
	0x03278818 BL 0x3278558
	0x0327881C CBZ X0, 0x3278F90
	0x03278820 LDR X8, [X0]
	0x03278824 LDR X9, [X8 + 0x298]
	0x03278828 LDR X1, [X8 + 0x2A0]
	0x0327882C BLR X9
	0x03278830 SUBS W21, W0, 0x1
	0x03278834 B.MI 0x3278948
	0x03278838 ADRP X28, 0xEAB000
	0x0327883C LDR X28, [X28 + 0xF30]
	0x03278840 MOV X23, X31
	0x03278844 MOV X0, X19
	0x03278848 BL 0x3278558
	0x0327884C CBZ X0, 0x3278F90
	0x03278850 LDR X8, [X0]
	0x03278854 MOV W1, W21
	0x03278858 LDR X9, [X8 + 0x2E8]
	0x0327885C LDR X2, [X8 + 0x2F0]
	0x03278860 BLR X9
	0x03278864 LDR X8, [X26]
	0x03278868 MOV X22, X0
	0x0327886C LDR W9, [X8 + 0xE0]
	0x03278870 CBZ W9, 0x327887C
	0x03278874 CBNZ X22, 0x3278888
	0x03278878 B 0x32788A0
	0x0327887C MOV X0, X8
	0x03278880 BL 0x1C16DFC
	0x03278884 CBZ X22, 0x32788A0
	0x03278888 LDR X9, [X22]
	0x0327888C LDR X8, [X27]
	0x03278890 LDRB W11, [X9 + 0x130]
	0x03278894 LDRB W10, [X8 + 0x130]
	0x03278898 CMP W11, W10
	0x0327889C B.CS 0x32788A8
	0x032788A0 MOV X0, X31
	0x032788A4 B 0x32788BC
	0x032788A8 LDR X9, [X9 + 0xC8]
	0x032788AC ADD X9, X9, X10, 0x3, LSL
	0x032788B0 LDUR X9, [X9 - 0x8]
	0x032788B4 CMP X9, X8
	0x032788B8 CSEL X0, X22, X31, EQ
	0x032788BC BL 0x328CB60
	0x032788C0 CBZ X0, 0x3278F90
	0x032788C4 LDR X25, [X28]
	0x032788C8 MOV X24, X0
	0x032788CC MOV X1, X25
	0x032788D0 BL 0x1C16E00
	0x032788D4 CBZ X0, 0x3278FA0
	0x032788D8 LDR X8, [X0]
	0x032788DC LDR X1, [X28]
	0x032788E0 MOV X22, X0
	0x032788E4 LDRH W9, [X8 + 0x12E]
	0x032788E8 CBZ X9, 0x327890C
	0x032788EC LDR X10, [X8 + 0xB0]
	0x032788F0 ADD X10, X10, 0x8
	0x032788F4 LDUR X11, [X10 - 0x8]
	0x032788F8 CMP X11, X1
	0x032788FC B.EQ 0x327891C
	0x03278900 SUBS X9, X9, 0x1
	0x03278904 ADD X10, X10, 0x10
	0x03278908 B.NE 0x32788F4
	0x0327890C MOV X0, X22
	0x03278910 MOV W2, W31
	0x03278914 BL 0x1C5C788
	0x03278918 B 0x3278928
	0x0327891C LDRSW X9, [X10]
	0x03278920 ADD X8, X8, X9, 0x4, LSL
	0x03278924 ADD X0, X8, 0x138
	0x03278928 LDP X8, X2, [X0]
	0x0327892C MOV X0, X22
	0x03278930 MOV X1, X23
	0x03278934 BLR X8
	0x03278938 SUBS W21, W21, 0x1
	0x0327893C MOV X23, X22
	0x03278940 B.PL 0x3278844
	0x03278944 B 0x327894C
	0x03278948 MOV X22, X31
	0x0327894C ADRP X24, 0xE7B000
	0x03278950 LDR X24, [X24 + 0x6C0]
	0x03278954 ADRP X25, 0xEA4000
	0x03278958 ADRP X23, 0xEAB000
	0x0327895C LDR X21, [X19 + 0x18]
	0x03278960 LDR X0, [X24]
	0x03278964 LDR W8, [X0 + 0xE0]
	0x03278968 LDR X25, [X25 + 0x1B0]
	0x0327896C LDR X23, [X23 + 0xF08]
	0x03278970 CBNZ W8, 0x3278978
	0x03278974 BL 0x1C16DFC
	0x03278978 LDR X1, [X25]
	0x0327897C LDR X2, [X23]
	0x03278980 MOV X0, X21
	0x03278984 BL 0x1C1703C
	0x03278988 MOV X1, X31
	0x0327898C MOV X2, X31
	0x03278990 MOV X21, X0
	0x03278994 BL 0x3395194
	0x03278998 TBNZ X0, 0x0, 0x3278FBC
	0x0327899C ADRP X8, 0xEAB000
	0x032789A0 LDR X0, [X24]
	0x032789A4 LDR X8, [X8 + 0xF18]
	0x032789A8 LDR W9, [X0 + 0xE0]
	0x032789AC LDR X23, [X8]
	0x032789B0 CBNZ W9, 0x32789B8
	0x032789B4 BL 0x1C16DFC
	0x032789B8 MOV X0, X23
	0x032789BC MOV X1, X31
	0x032789C0 BL 0x338C698
	0x032789C4 CBZ X0, 0x3278F90
	0x032789C8 LDR X8, [X0]
	0x032789CC ADRP X23, 0xEAB000
	0x032789D0 MOV X1, X21
	0x032789D4 LDR X9, [X8 + 0x2A8]
	0x032789D8 LDR X2, [X8 + 0x2B0]
	0x032789DC LDR X23, [X23 + 0xF10]
	0x032789E0 BLR X9
	0x032789E4 LDR X8, [X23]
	0x032789E8 MOV W23, W0
	0x032789EC MOV X1, X31
	0x032789F0 MOV X0, X8
	0x032789F4 BL 0x338C698
	0x032789F8 CBZ X0, 0x3278F90
	0x032789FC LDR X8, [X0]
	0x03278A00 MOV X1, X21
	0x03278A04 LDR X9, [X8 + 0x2A8]
	0x03278A08 LDR X2, [X8 + 0x2B0]
	0x03278A0C BLR X9
	0x03278A10 AND W8, W23, W0, 0x0
	0x03278A14 TBZ X8, 0x0, 0x3278BA8
	0x03278A18 ADRP X8, 0xE83000
	0x03278A1C LDR X8, [X8 + 0xC60]
	0x03278A20 MOVZ W1, 0x3
	0x03278A24 LDR X0, [X8]
	0x03278A28 BL 0x1C16D6C
	0x03278A2C ADRP X9, 0xEAB000
	0x03278A30 LDR X8, [X24]
	0x03278A34 LDR X9, [X9 + 0xF38]
	0x03278A38 MOV X23, X0
	0x03278A3C LDR W10, [X8 + 0xE0]
	0x03278A40 LDR X24, [X9]
	0x03278A44 CBNZ W10, 0x3278A50
	0x03278A48 MOV X0, X8
	0x03278A4C BL 0x1C16DFC
	0x03278A50 MOV X0, X24
	0x03278A54 MOV X1, X31
	0x03278A58 BL 0x338C698
	0x03278A5C CBZ X23, 0x3278F90
	0x03278A60 MOV X24, X0
	0x03278A64 CBZ X0, 0x3278A7C
	0x03278A68 LDR X8, [X23]
	0x03278A6C MOV X0, X24
	0x03278A70 LDR X1, [X8 + 0x40]
	0x03278A74 BL 0x1C16E00
	0x03278A78 CBZ X0, 0x3278FB0
	0x03278A7C LDR W8, [X23 + 0x18]
	0x03278A80 CBZ W8, 0x3278FAC
	0x03278A84 STR X24, [X23 + 0x20]
	0x03278A88 ADRP X8, 0xEAB000
	0x03278A8C LDR X8, [X8 + 0xF28]
	0x03278A90 MOV X1, X31
	0x03278A94 LDR X0, [X8]
	0x03278A98 BL 0x338C698
	0x03278A9C MOV X24, X0
	0x03278AA0 CBZ X0, 0x3278AB8
	0x03278AA4 LDR X8, [X23]
	0x03278AA8 MOV X0, X24
	0x03278AAC LDR X1, [X8 + 0x40]
	0x03278AB0 BL 0x1C16E00
	0x03278AB4 CBZ X0, 0x3278FB0
	0x03278AB8 LDR W8, [X23 + 0x18]
	0x03278ABC CMP W8, 0x1
	0x03278AC0 B.LS 0x3278FAC
	0x03278AC4 STR X24, [X23 + 0x28]
	0x03278AC8 ADRP X8, 0xEAB000
	0x03278ACC LDR X8, [X8 + 0xF40]
	0x03278AD0 MOV X1, X31
	0x03278AD4 LDR X0, [X8]
	0x03278AD8 BL 0x338C698
	0x03278ADC MOV X24, X0
	0x03278AE0 CBZ X0, 0x3278AF8
	0x03278AE4 LDR X8, [X23]
	0x03278AE8 MOV X0, X24
	0x03278AEC LDR X1, [X8 + 0x40]
	0x03278AF0 BL 0x1C16E00
	0x03278AF4 CBZ X0, 0x3278FB0
	0x03278AF8 LDR W8, [X23 + 0x18]
	0x03278AFC CMP W8, 0x2
	0x03278B00 B.LS 0x3278FAC
	0x03278B04 STR X24, [X23 + 0x30]
	0x03278B08 ADRP X8, 0xE7B000
	0x03278B0C LDR X8, [X8 + 0x9D0]
	0x03278B10 MOVZ W1, 0x3
	0x03278B14 LDR X0, [X8]
	0x03278B18 BL 0x1C16D6C
	0x03278B1C MOV X24, X0
	0x03278B20 MOV X0, X19
	0x03278B24 BL 0x327CB60
	0x03278B28 CBZ X24, 0x3278F90
	0x03278B2C MOV X25, X0
	0x03278B30 CBZ X0, 0x3278B48
	0x03278B34 LDR X8, [X24]
	0x03278B38 MOV X0, X25
	0x03278B3C LDR X1, [X8 + 0x40]
	0x03278B40 BL 0x1C16E00
	0x03278B44 CBZ X0, 0x3278FB0
	0x03278B48 LDR W8, [X24 + 0x18]
	0x03278B4C CBZ W8, 0x3278FAC
	0x03278B50 STR X25, [X24 + 0x20]
	0x03278B54 CBZ X22, 0x3278B70
	0x03278B58 LDR X8, [X24]
	0x03278B5C MOV X0, X22
	0x03278B60 LDR X1, [X8 + 0x40]
	0x03278B64 BL 0x1C16E00
	0x03278B68 CBZ X0, 0x3278FB0
	0x03278B6C LDR W8, [X24 + 0x18]
	0x03278B70 CMP W8, 0x1
	0x03278B74 B.LS 0x3278FAC
	0x03278B78 STR X22, [X24 + 0x28]
	0x03278B7C CBZ X20, 0x3278B98
	0x03278B80 LDR X8, [X24]
	0x03278B84 MOV X0, X20
	0x03278B88 LDR X1, [X8 + 0x40]
	0x03278B8C BL 0x1C16E00
	0x03278B90 CBZ X0, 0x3278FB0
	0x03278B94 LDR W8, [X24 + 0x18]
	0x03278B98 CMP W8, 0x2
	0x03278B9C B.LS 0x3278FAC
	0x03278BA0 STR X20, [X24 + 0x30]
	0x03278BA4 B 0x3278DFC
	0x03278BA8 TBZ X23, 0x0, 0x3278CD4
	0x03278BAC ADRP X8, 0xE83000
	0x03278BB0 LDR X8, [X8 + 0xC60]
	0x03278BB4 MOVZ W1, 0x2
	0x03278BB8 LDR X0, [X8]
	0x03278BBC BL 0x1C16D6C
	0x03278BC0 ADRP X9, 0xEAB000
	0x03278BC4 LDR X8, [X24]
	0x03278BC8 LDR X9, [X9 + 0xF38]
	0x03278BCC MOV X23, X0
	0x03278BD0 LDR W10, [X8 + 0xE0]
	0x03278BD4 LDR X20, [X9]
	0x03278BD8 CBNZ W10, 0x3278BE4
	0x03278BDC MOV X0, X8
	0x03278BE0 BL 0x1C16DFC
	0x03278BE4 MOV X0, X20
	0x03278BE8 MOV X1, X31
	0x03278BEC BL 0x338C698
	0x03278BF0 CBZ X23, 0x3278F90
	0x03278BF4 MOV X20, X0
	0x03278BF8 CBZ X0, 0x3278C10
	0x03278BFC LDR X8, [X23]
	0x03278C00 MOV X0, X20
	0x03278C04 LDR X1, [X8 + 0x40]
	0x03278C08 BL 0x1C16E00
	0x03278C0C CBZ X0, 0x3278FB0
	0x03278C10 LDR W8, [X23 + 0x18]
	0x03278C14 CBZ W8, 0x3278FAC
	0x03278C18 STR X20, [X23 + 0x20]
	0x03278C1C ADRP X8, 0xEAB000
	0x03278C20 LDR X8, [X8 + 0xF28]
	0x03278C24 MOV X1, X31
	0x03278C28 LDR X0, [X8]
	0x03278C2C BL 0x338C698
	0x03278C30 MOV X20, X0
	0x03278C34 CBZ X0, 0x3278C4C
	0x03278C38 LDR X8, [X23]
	0x03278C3C MOV X0, X20
	0x03278C40 LDR X1, [X8 + 0x40]
	0x03278C44 BL 0x1C16E00
	0x03278C48 CBZ X0, 0x3278FB0
	0x03278C4C LDR W8, [X23 + 0x18]
	0x03278C50 CMP W8, 0x1
	0x03278C54 B.LS 0x3278FAC
	0x03278C58 STR X20, [X23 + 0x28]
	0x03278C5C ADRP X8, 0xE7B000
	0x03278C60 LDR X8, [X8 + 0x9D0]
	0x03278C64 MOVZ W1, 0x2
	0x03278C68 LDR X0, [X8]
	0x03278C6C BL 0x1C16D6C
	0x03278C70 MOV X24, X0
	0x03278C74 MOV X0, X19
	0x03278C78 BL 0x327CB60
	0x03278C7C CBZ X24, 0x3278F90
	0x03278C80 MOV X20, X0
	0x03278C84 CBZ X0, 0x3278C9C
	0x03278C88 LDR X8, [X24]
	0x03278C8C MOV X0, X20
	0x03278C90 LDR X1, [X8 + 0x40]
	0x03278C94 BL 0x1C16E00
	0x03278C98 CBZ X0, 0x3278FB0
	0x03278C9C LDR W8, [X24 + 0x18]
	0x03278CA0 CBZ W8, 0x3278FAC
	0x03278CA4 STR X20, [X24 + 0x20]
	0x03278CA8 CBZ X22, 0x3278CC4
	0x03278CAC LDR X8, [X24]
	0x03278CB0 MOV X0, X22
	0x03278CB4 LDR X1, [X8 + 0x40]
	0x03278CB8 BL 0x1C16E00
	0x03278CBC CBZ X0, 0x3278FB0
	0x03278CC0 LDR W8, [X24 + 0x18]
	0x03278CC4 CMP W8, 0x1
	0x03278CC8 B.LS 0x3278FAC
	0x03278CCC STR X22, [X24 + 0x28]
	0x03278CD0 B 0x3278DFC
	0x03278CD4 TBZ X0, 0x0, 0x3279028
	0x03278CD8 ADRP X8, 0xE83000
	0x03278CDC LDR X8, [X8 + 0xC60]
	0x03278CE0 MOVZ W1, 0x2
	0x03278CE4 LDR X0, [X8]
	0x03278CE8 BL 0x1C16D6C
	0x03278CEC ADRP X9, 0xEAB000
	0x03278CF0 LDR X8, [X24]
	0x03278CF4 LDR X9, [X9 + 0xF38]
	0x03278CF8 MOV X23, X0
	0x03278CFC LDR W10, [X8 + 0xE0]
	0x03278D00 LDR X22, [X9]
	0x03278D04 CBNZ W10, 0x3278D10
	0x03278D08 MOV X0, X8
	0x03278D0C BL 0x1C16DFC
	0x03278D10 MOV X0, X22
	0x03278D14 MOV X1, X31
	0x03278D18 BL 0x338C698
	0x03278D1C CBZ X23, 0x3278F90
	0x03278D20 MOV X22, X0
	0x03278D24 CBZ X0, 0x3278D3C
	0x03278D28 LDR X8, [X23]
	0x03278D2C MOV X0, X22
	0x03278D30 LDR X1, [X8 + 0x40]
	0x03278D34 BL 0x1C16E00
	0x03278D38 CBZ X0, 0x3278FB0
	0x03278D3C LDR W8, [X23 + 0x18]
	0x03278D40 CBZ W8, 0x3278FAC
	0x03278D44 STR X22, [X23 + 0x20]
	0x03278D48 ADRP X8, 0xEAB000
	0x03278D4C LDR X8, [X8 + 0xF40]
	0x03278D50 MOV X1, X31
	0x03278D54 LDR X0, [X8]
	0x03278D58 BL 0x338C698
	0x03278D5C MOV X22, X0
	0x03278D60 CBZ X0, 0x3278D78
	0x03278D64 LDR X8, [X23]
	0x03278D68 MOV X0, X22
	0x03278D6C LDR X1, [X8 + 0x40]
	0x03278D70 BL 0x1C16E00
	0x03278D74 CBZ X0, 0x3278FB0
	0x03278D78 LDR W8, [X23 + 0x18]
	0x03278D7C CMP W8, 0x1
	0x03278D80 B.LS 0x3278FAC
	0x03278D84 STR X22, [X23 + 0x28]
	0x03278D88 ADRP X8, 0xE7B000
	0x03278D8C LDR X8, [X8 + 0x9D0]
	0x03278D90 MOVZ W1, 0x2
	0x03278D94 LDR X0, [X8]
	0x03278D98 BL 0x1C16D6C
	0x03278D9C MOV X24, X0
	0x03278DA0 MOV X0, X19
	0x03278DA4 BL 0x327CB60
	0x03278DA8 CBZ X24, 0x3278F90
	0x03278DAC MOV X22, X0
	0x03278DB0 CBZ X0, 0x3278DC8
	0x03278DB4 LDR X8, [X24]
	0x03278DB8 MOV X0, X22
	0x03278DBC LDR X1, [X8 + 0x40]
	0x03278DC0 BL 0x1C16E00
	0x03278DC4 CBZ X0, 0x3278FB0
	0x03278DC8 LDR W8, [X24 + 0x18]
	0x03278DCC CBZ W8, 0x3278FAC
	0x03278DD0 STR X22, [X24 + 0x20]
	0x03278DD4 CBZ X20, 0x3278DF0
	0x03278DD8 LDR X8, [X24]
	0x03278DDC MOV X0, X20
	0x03278DE0 LDR X1, [X8 + 0x40]
	0x03278DE4 BL 0x1C16E00
	0x03278DE8 CBZ X0, 0x3278FB0
	0x03278DEC LDR W8, [X24 + 0x18]
	0x03278DF0 CMP W8, 0x1

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x1165000
	011 Move W8, [X21+1537]
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0xE84000
	019 Move X0, [X0+3856]
	020 Call 0x1C17CF4
	021 Move X0, 0xE7C000
	022 Move X0, [X0+3584]
	023 Call 0x1C17CF4
	024 Move X0, 0xE7C000
	025 Move X0, [X0+3608]
	026 Call 0x1C17CF4
	027 Move X0, 0xEAC000
	028 Move X0, [X0+3800]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+1537], W8
	032 Move X8, [X19+16]
	033 Compare X8, 0
	034 JumpIfNotEqual {39}
	035 Compare X20, 0
	036 JumpIfEqual {466}
	037 Move X8, [X20+16]
	038 Move [X19+16], X8
	039 Move X8, [X19+32]
	040 Compare X8, 0
	041 JumpIfNotEqual {46}
	042 Compare X20, 0
	043 JumpIfEqual {466}
	044 Move X8, [X20+32]
	045 Move [X19+32], X8
	046 Move X8, [X19+24]
	047 Compare X8, 0
	048 JumpIfNotEqual {53}
	049 Compare X20, 0
	050 JumpIfEqual {466}
	051 Move X8, [X20+24]
	052 Move [X19+24], X8
	053 Move X8, [X19+40]
	054 Compare X8, 0
	055 JumpIfEqual {58}
	056 Compare X20, 0
	057 JumpIfNotEqual {62}
	058 Compare X20, 0
	059 JumpIfEqual {466}
	060 Move X8, [X20+40]
	061 Move [X19+40], X8
	062 Move X24, 0xE7C000
	063 Move X0, [X20+64]
	064 Move X24, [X24+3584]
	065 Compare X0, 0
	066 JumpIfEqual {192}
	067 Move X8, [X0]
	068 Move X9, [X8+760]
	069 Move X1, [X8+768]
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Move X21, X0
	072 Compare X0, 0
	073 JumpIfEqual {469}
	074 Move X25, 0xE7C000
	075 Move X26, 0xE84000
	076 Move X25, [X25+3608]
	077 Move X26, [X26+3856]
	078 Move X8, [X21]
	079 Move X1, [X25]
	080 NotImplemented "Instruction LDRH not yet implemented."
	081 Compare X9, 0
	082 JumpIfEqual {89}
	083 Move X10, [X8+176]
	084 Add X10, X10, 8
	085 NotImplemented "Instruction LDUR not yet implemented."
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Subtract X9, X9, 1
	088 Add X10, X10, 16
	089 Move X0, X21
	090 Move W2, W31
	091 Call 0x1C5D788
	092 NotImplemented "Instruction LDRSW not yet implemented."
	093 Add X8, X8, X9
	094 Add X0, X8, 312
	095 Move X8, [X0]
	096 Move X1, [X0+8]
	097 Move X0, X21
	098 NotImplemented "Instruction BLR not yet implemented."
	099 Move TEMP, X0
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfNotEqual {158}
	103 Move X8, [X21]
	104 Move X1, [X25]
	105 NotImplemented "Instruction LDRH not yet implemented."
	106 Compare X9, 0
	107 JumpIfEqual {114}
	108 Move X10, [X8+176]
	109 Add X10, X10, 8
	110 NotImplemented "Instruction LDUR not yet implemented."
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Subtract X9, X9, 1
	113 Add X10, X10, 16
	114 Move W2, 1
	115 Move X0, X21
	116 Call 0x1C5D788
	117 Move W9, [X10]
	118 Add W9, W9, 1
	119 Add X8, X8, W9
	120 Add X0, X8, 312
	121 Move X8, [X0]
	122 Move X1, [X0+8]
	123 Move X0, X21
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Compare X0, 0
	126 JumpIfEqual {455}
	127 Move X8, [X0]
	128 Move X1, [X26]
	129 Move X8, [X8+64]
	130 Move X9, [X1+64]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Call 0x1C17E08
	133 Move X22, [X0]
	134 Move X23, [X0+8]
	135 Move X0, X19
	136 Call ChannelData.get_CustomProperties, X0
	137 Compare X0, 0
	138 JumpIfEqual {456}
	139 Move X8, [X0]
	140 Move X9, [X8+696]
	141 Move X2, [X8+704]
	142 Move X1, X22
	143 NotImplemented "Instruction BLR not yet implemented."
	144 Move TEMP, X0
	145 And TEMP, TEMP, 1
	146 Compare TEMP, 1
	147 JumpIfEqual {78}
	148 Move X0, X19
	149 Call ChannelData.get_CustomProperties, X0
	150 Compare X0, 0
	151 JumpIfEqual {457}
	152 Move X8, [X0]
	153 Move X9, [X8+744]
	154 Move X3, [X8+752]
	155 Move X1, X22
	156 Move X2, X23
	157 NotImplemented "Instruction BLR not yet implemented."
	158 Move X22, X31
	159 Move W23, 6
	160 Move X1, [X24]
	161 Move X0, X21
	162 Call 0x1C17E00
	163 Compare X0, 0
	164 JumpIfEqual {187}
	165 Move X8, [X0]
	166 Move X1, [X24]
	167 Move X21, X0
	168 NotImplemented "Instruction LDRH not yet implemented."
	169 Compare X9, 0
	170 JumpIfEqual {177}
	171 Move X10, [X8+176]
	172 Add X10, X10, 8
	173 NotImplemented "Instruction LDUR not yet implemented."
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Subtract X9, X9, 1
	176 Add X10, X10, 16
	177 Move X0, X21
	178 Move W2, W31
	179 Call 0x1C5D788
	180 NotImplemented "Instruction LDRSW not yet implemented."
	181 Add X8, X8, X9
	182 Add X0, X8, 312
	183 Move X8, [X0]
	184 Move X1, [X0+8]
	185 Move X0, X21
	186 NotImplemented "Instruction BLR not yet implemented."
	187 Compare X22, 0
	188 JumpIfNotEqual {467}
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Compare W23, 0
	191 JumpIfNotEqual {444}
	192 Move X8, [X19+48]
	193 Compare X8, 0
	194 JumpIfEqual {289}
	195 Move X8, [X19+56]
	196 Compare X8, 0
	197 JumpIfNotEqual {444}
	198 Move X0, [X20+56]
	199 Compare X0, 0
	200 JumpIfEqual {444}
	201 Move X8, [X0]
	202 Move X9, [X8+904]
	203 Move X1, [X8+912]
	204 NotImplemented "Instruction BLR not yet implemented."
	205 Move X20, X0
	206 Compare X0, 0
	207 JumpIfEqual {471}
	208 Move X23, 0xE7C000
	209 Move X25, 0xEAC000
	210 Move X23, [X23+3608]
	211 Move X25, [X25+3800]
	212 Move X8, [X20]
	213 Move X1, [X23]
	214 NotImplemented "Instruction LDRH not yet implemented."
	215 Compare X9, 0
	216 JumpIfEqual {223}
	217 Move X10, [X8+176]
	218 Add X10, X10, 8
	219 NotImplemented "Instruction LDUR not yet implemented."
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Subtract X9, X9, 1
	222 Add X10, X10, 16
	223 Move X0, X20
	224 Move W2, W31
	225 Call 0x1C5D788
	226 NotImplemented "Instruction LDRSW not yet implemented."
	227 Add X8, X8, X9
	228 Add X0, X8, 312
	229 Move X8, [X0]
	230 Move X1, [X0+8]
	231 Move X0, X20
	232 NotImplemented "Instruction BLR not yet implemented."
	233 Move TEMP, X0
	234 And TEMP, TEMP, 1
	235 Compare TEMP, 1
	236 JumpIfNotEqual {402}
	237 Move X8, [X20]
	238 Move X1, [X23]
	239 NotImplemented "Instruction LDRH not yet implemented."
	240 Compare X9, 0
	241 JumpIfEqual {248}
	242 Move X10, [X8+176]
	243 Add X10, X10, 8
	244 NotImplemented "Instruction LDUR not yet implemented."
	245 NotImplemented "Instruction CMP not yet implemented."
	246 Subtract X9, X9, 1
	247 Add X10, X10, 16
	248 Move W2, 1
	249 Move X0, X20
	250 Call 0x1C5D788
	251 Move W9, [X10]
	252 Add W9, W9, 1
	253 Add X8, X8, W9
	254 Add X0, X8, 312
	255 Move X8, [X0]
	256 Move X1, [X0+8]
	257 Move X0, X20
	258 NotImplemented "Instruction BLR not yet implemented."
	259 Move X1, [X25]
	260 Move X21, X0
	261 Compare X0, 0
	262 JumpIfEqual {271}
	263 Move X8, [X21]
	264 Move W9, [X1+304]
	265 Move W10, [X8+304]
	266 NotImplemented "Instruction CMP not yet implemented."
	267 Move X8, [X8+200]
	268 Add X8, X8, X9
	269 NotImplemented "Instruction LDUR not yet implemented."
	270 NotImplemented "Instruction CMP not yet implemented."
	271 Move X0, X1
	272 Call 0x1C17F10
	273 Move X22, X0
	274 Call ProviderData..ctor, X0
	275 Compare X22, 0
	276 JumpIfEqual {464}
	277 Move X0, X22
	278 Move X1, X21
	279 Call ProviderData.CopyFrom, X0, X1
	280 Move X0, X19
	281 Call ChannelData.get_ClientProviders, X0
	282 Compare X0, 0
	283 JumpIfEqual {465}
	284 Move X8, [X0]
	285 Move X9, [X8+776]
	286 Move X2, [X8+784]
	287 Move X1, X22
	288 NotImplemented "Instruction BLR not yet implemented."
	289 Move X0, [X20+48]
	290 Compare X0, 0
	291 JumpIfEqual {195}
	292 Move X8, [X0]
	293 Move X9, [X8+904]
	294 Move X1, [X8+912]
	295 NotImplemented "Instruction BLR not yet implemented."
	296 Move X21, X0
	297 Compare X0, 0
	298 JumpIfEqual {470}
	299 Move X25, 0xE7C000
	300 Move X26, 0xEAC000
	301 Move X25, [X25+3608]
	302 Move X26, [X26+3800]
	303 Move X8, [X21]
	304 Move X1, [X25]
	305 NotImplemented "Instruction LDRH not yet implemented."
	306 Compare X9, 0
	307 JumpIfEqual {314}
	308 Move X10, [X8+176]
	309 Add X10, X10, 8
	310 NotImplemented "Instruction LDUR not yet implemented."
	311 NotImplemented "Instruction CMP not yet implemented."
	312 Subtract X9, X9, 1
	313 Add X10, X10, 16
	314 Move X0, X21
	315 Move W2, W31
	316 Call 0x1C5D788
	317 NotImplemented "Instruction LDRSW not yet implemented."
	318 Add X8, X8, X9
	319 Add X0, X8, 312
	320 Move X8, [X0]
	321 Move X1, [X0+8]
	322 Move X0, X21
	323 NotImplemented "Instruction BLR not yet implemented."
	324 Move TEMP, X0
	325 And TEMP, TEMP, 1
	326 Compare TEMP, 1
	327 JumpIfNotEqual {380}
	328 Move X8, [X21]
	329 Move X1, [X25]
	330 NotImplemented "Instruction LDRH not yet implemented."
	331 Compare X9, 0
	332 JumpIfEqual {339}
	333 Move X10, [X8+176]
	334 Add X10, X10, 8
	335 NotImplemented "Instruction LDUR not yet implemented."
	336 NotImplemented "Instruction CMP not yet implemented."
	337 Subtract X9, X9, 1
	338 Add X10, X10, 16
	339 Move W2, 1
	340 Move X0, X21
	341 Call 0x1C5D788
	342 Move W9, [X10]
	343 Add W9, W9, 1
	344 Add X8, X8, W9
	345 Add X0, X8, 312
	346 Move X8, [X0]
	347 Move X1, [X0+8]
	348 Move X0, X21
	349 NotImplemented "Instruction BLR not yet implemented."
	350 Move X1, [X26]
	351 Move X22, X0
	352 Compare X0, 0
	353 JumpIfEqual {362}
	354 Move X8, [X22]
	355 Move W9, [X1+304]
	356 Move W10, [X8+304]
	357 NotImplemented "Instruction CMP not yet implemented."
	358 Move X8, [X8+200]
	359 Add X8, X8, X9
	360 NotImplemented "Instruction LDUR not yet implemented."
	361 NotImplemented "Instruction CMP not yet implemented."
	362 Move X0, X1
	363 Call 0x1C17F10
	364 Move X23, X0
	365 Call ProviderData..ctor, X0
	366 Compare X23, 0
	367 JumpIfEqual {462}
	368 Move X0, X23
	369 Move X1, X22
	370 Call ProviderData.CopyFrom, X0, X1
	371 Move X0, X19
	372 Call ChannelData.get_ServerProviders, X0
	373 Compare X0, 0
	374 JumpIfEqual {463}
	375 Move X8, [X0]
	376 Move X9, [X8+776]
	377 Move X2, [X8+784]
	378 Move X1, X23
	379 NotImplemented "Instruction BLR not yet implemented."
	380 Move X22, X31
	381 Move W23, 9
	382 Move X1, [X24]
	383 Move X0, X21
	384 Call 0x1C17E00
	385 Compare X0, 0
	386 JumpIfEqual {430}
	387 Move X8, [X0]
	388 Move X1, [X24]
	389 Move X21, X0
	390 NotImplemented "Instruction LDRH not yet implemented."
	391 Compare X9, 0
	392 JumpIfEqual {399}
	393 Move X10, [X8+176]
	394 Add X10, X10, 8
	395 NotImplemented "Instruction LDUR not yet implemented."
	396 NotImplemented "Instruction CMP not yet implemented."
	397 Subtract X9, X9, 1
	398 Add X10, X10, 16
	399 Move X0, X21
	400 Move W2, W31
	401 Call 0x1C5D788
	402 Move X19, X31
	403 Move X1, [X24]
	404 Move X0, X20
	405 Call 0x1C17E00
	406 Compare X0, 0
	407 JumpIfEqual {442}
	408 Move X8, [X0]
	409 Move X1, [X24]
	410 Move X20, X0
	411 NotImplemented "Instruction LDRH not yet implemented."
	412 Compare X9, 0
	413 JumpIfEqual {420}
	414 Move X10, [X8+176]
	415 Add X10, X10, 8
	416 NotImplemented "Instruction LDUR not yet implemented."
	417 NotImplemented "Instruction CMP not yet implemented."
	418 Subtract X9, X9, 1
	419 Add X10, X10, 16
	420 Move X0, X20
	421 Move W2, W31
	422 Call 0x1C5D788
	423 NotImplemented "Instruction LDRSW not yet implemented."
	424 Add X8, X8, X9
	425 Add X0, X8, 312
	426 Move X8, [X0]
	427 Move X1, [X0+8]
	428 Move X0, X21
	429 NotImplemented "Instruction BLR not yet implemented."
	430 Compare X22, 0
	431 JumpIfNotEqual {467}
	432 NotImplemented "Instruction CMP not yet implemented."
	433 Compare W23, 0
	434 JumpIfEqual {195}
	435 NotImplemented "Instruction LDRSW not yet implemented."
	436 Add X8, X8, X9
	437 Add X0, X8, 312
	438 Move X8, [X0]
	439 Move X1, [X0+8]
	440 Move X0, X20
	441 NotImplemented "Instruction BLR not yet implemented."
	442 Compare X19, 0
	443 JumpIfNotEqual {472}
	444 Move X20, [X31+64]
	445 Move X19, [X31+72]
	446 Move X22, [X31+48]
	447 Move X21, [X31+56]
	448 Move X24, [X31+32]
	449 Move X23, [X31+40]
	450 Move X26, [X31+16]
	451 Move X25, [X31+24]
	452 Move X30, [X31+80]
	453 Return 
	454 Call 0x1C181E0
	455 Call 0x1C17F20
	456 Call 0x1C17F20
	457 Call 0x1C17F20
	458 Move X0, X22
	459 Call 0x1C181E0
	460 Move X0, X21
	461 Call 0x1C181E0
	462 Call 0x1C17F20
	463 Call 0x1C17F20
	464 Call 0x1C17F20
	465 Call 0x1C17F20
	466 Call 0x1C17F20
	467 Move X0, X22
	468 Call 0x1C17F18
	469 Call 0x1C17F20
	470 Call 0x1C17F20
	471 Call 0x1C17F20
	472 Move X0, X19
	473 Call 0x1C17F18
	474 NotImplemented "Instruction CMP not yet implemented."
	475 Move [X31+8], X0
	476 Move X0, [X31+8]
	477 Call 0x3EB2AD0
	478 Move X19, [X0]
	479 Call 0x3EB2AE0
	480 Move X19, X31
	481 Move [X31+8], X0
	482 Move X1, [X24]
	483 Move X0, X20
	484 Call 0x1C17E00
	485 Move X20, X0
	486 Compare X0, 0
	487 JumpIfEqual {509}
	488 Move X8, [X20]
	489 Move X1, [X24]
	490 NotImplemented "Instruction LDRH not yet implemented."
	491 Compare X9, 0
	492 JumpIfEqual {499}
	493 Move X10, [X8+176]
	494 Add X10, X10, 8
	495 NotImplemented "Instruction LDUR not yet implemented."
	496 NotImplemented "Instruction CMP not yet implemented."
	497 Subtract X9, X9, 1
	498 Add X10, X10, 16
	499 Move X0, X20
	500 Move W2, W31
	501 Call 0x1C5D788
	502 NotImplemented "Instruction LDRSW not yet implemented."
	503 Add X8, X8, X9
	504 Add X0, X8, 312
	505 Move X8, [X0]
	506 Move X1, [X0+8]
	507 Move X0, X20
	508 NotImplemented "Instruction BLR not yet implemented."
	509 Compare X19, 0
	510 JumpIfEqual {590}
	511 Move X0, X19
	512 Call 0x1C17F18
	513 NotImplemented "Instruction CMP not yet implemented."
	514 Move [X31+8], X0
	515 Move X0, [X31+8]
	516 Call 0x3EB2AD0
	517 Move X22, [X0]
	518 Call 0x3EB2AE0
	519 Move W23, W31
	520 Move X22, X31
	521 Move [X31+8], X0
	522 Move X1, [X24]
	523 Move X0, X21
	524 Call 0x1C17E00
	525 Move X19, X0
	526 Compare X0, 0
	527 JumpIfEqual {549}
	528 Move X8, [X19]
	529 Move X1, [X24]
	530 NotImplemented "Instruction LDRH not yet implemented."
	531 Compare X9, 0
	532 JumpIfEqual {539}
	533 Move X10, [X8+176]
	534 Add X10, X10, 8
	535 NotImplemented "Instruction LDUR not yet implemented."
	536 NotImplemented "Instruction CMP not yet implemented."
	537 Subtract X9, X9, 1
	538 Add X10, X10, 16
	539 Move X0, X19
	540 Move W2, W31
	541 Call 0x1C5D788
	542 NotImplemented "Instruction LDRSW not yet implemented."
	543 Add X8, X8, X9
	544 Add X0, X8, 312
	545 Move X8, [X0]
	546 Move X1, [X0+8]
	547 Move X0, X19
	548 NotImplemented "Instruction BLR not yet implemented."
	549 Compare X22, 0
	550 JumpIfEqual {590}
	551 Move X0, X22
	552 Call 0x1C17F18
	553 NotImplemented "Instruction CMP not yet implemented."
	554 Call 0x3EB2AD0
	555 Move X22, [X0]
	556 Call 0x3EB2AE0
	557 Move W23, W31
	558 Move [X31+8], X0
	559 Move X22, X31
	560 Move [X31+8], X0
	561 Move X1, [X24]
	562 Move X0, X21
	563 Call 0x1C17E00
	564 Move X19, X0
	565 Compare X0, 0
	566 JumpIfEqual {588}
	567 Move X8, [X19]
	568 Move X1, [X24]
	569 NotImplemented "Instruction LDRH not yet implemented."
	570 Compare X9, 0
	571 JumpIfEqual {578}
	572 Move X10, [X8+176]
	573 Add X10, X10, 8
	574 NotImplemented "Instruction LDUR not yet implemented."
	575 NotImplemented "Instruction CMP not yet implemented."
	576 Subtract X9, X9, 1
	577 Add X10, X10, 16
	578 Move X0, X19
	579 Move W2, W31
	580 Call 0x1C5D788
	581 NotImplemented "Instruction LDRSW not yet implemented."
	582 Add X8, X8, X9
	583 Add X0, X8, 312
	584 Move X8, [X0]
	585 Move X1, [X0+8]
	586 Move X0, X19
	587 NotImplemented "Instruction BLR not yet implemented."
	588 Compare X22, 0
	589 JumpIfNotEqual {592}
	590 Move X0, [X31+8]
	591 Call 0x1D2D690
	592 Move X0, X22
	593 Call 0x1C17F18
	594 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x0327DAB4 LDR X0, [X0 + 0x6C0]
	0x0327DAB8 BL 0x1C16CF4
	0x0327DABC ADRP X0, 0xEA7000
	0x0327DAC0 LDR X0, [X0 + 0x248]
	0x0327DAC4 BL 0x1C16CF4
	0x0327DAC8 ADRP X0, 0xEA7000
	0x0327DACC LDR X0, [X0 + 0x250]
	0x0327DAD0 BL 0x1C16CF4
	0x0327DAD4 ADRP X0, 0xEA7000
	0x0327DAD8 LDR X0, [X0 + 0x258]
	0x0327DADC BL 0x1C16CF4
	0x0327DAE0 MOVZ W8, 0x1
	0x0327DAE4 STRB W8, [X22 + 0x605]
	0x0327DAE8 LDR X0, [X19]
	0x0327DAEC STP X31, X31, [X31]
	0x0327DAF0 BL 0x1C16F10
	0x0327DAF4 MOV X1, X31
	0x0327DAF8 MOV X19, X0
	0x0327DAFC BL 0x335A0A0
	0x0327DB00 LDR X8, [X23]
	0x0327DB04 LDR X8, [X8 + 0xB8]
	0x0327DB08 STR X19, [X8]
	0x0327DB0C LDR X0, [X21]
	0x0327DB10 BL 0x1C16F10
	0x0327DB14 MOV X1, X31
	0x0327DB18 MOV X19, X0
	0x0327DB1C BL 0x33BDD8C
	0x0327DB20 LDR X8, [X23]
	0x0327DB24 MOVZ W25, 0x1
	0x0327DB28 LDR X8, [X8 + 0xB8]
	0x0327DB2C STR X19, [X8 + 0x20]
	0x0327DB30 STR W25, [X8 + 0x28]
	0x0327DB34 LDR X0, [X20]
	0x0327DB38 BL 0x1C16F10
	0x0327DB3C MOV X1, X31
	0x0327DB40 MOV X19, X0
	0x0327DB44 BL 0x328E438
	0x0327DB48 ADD X0, X31, 0x0
	0x0327DB4C MOVZ W1, 0x10
	0x0327DB50 MOV X2, X31
	0x0327DB54 MOV X3, X31
	0x0327DB58 BL 0x32AA0DC
	0x0327DB5C LDR X0, [X24]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x1160000
	007 Move X22, 0xEA4000
	008 Move X21, 0xEA7000
	009 Move W8, [X20+1538]
	010 Move X22, [X22+2976]
	011 Move X21, [X21+3512]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xEA4000
	018 Move X0, [X0+2976]
	019 Call 0x1C17CF4
	020 Move X0, 0xEA7000
	021 Move X0, [X0+3512]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+1538], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X1, X31
	028 Move X20, X0
	029 Call ArrayList..ctor, X0
	030 Move [X19+48], X20
	031 Move X0, [X22]
	032 Call 0x1C17F10
	033 Move X1, X31
	034 Move X20, X0
	035 Call ArrayList..ctor, X0
	036 Move [X19+56], X20
	037 Move X0, [X21]
	038 Call 0x1C17F10
	039 Move X1, X31
	040 Move X20, X0
	041 Call Hashtable..ctor, X0
	042 Move [X19+64], X20
	043 Move X0, X19
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X1, X31
	049 Move X30, [X31+48]
	050 Call Object..ctor, X0
	051 Return 

