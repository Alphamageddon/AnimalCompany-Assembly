Type: System.Runtime.Remoting.Contexts.CrossContextChannel/ContextRestoreSink

Method: System.Void .ctor(System.Runtime.Remoting.Messaging.IMessageSink next, System.Runtime.Remoting.Contexts.Context context, System.Runtime.Remoting.Messaging.IMessage call)

Disassembly:
	0x0328CC78 MOV X0, X19
	0x0328CC7C MOV X1, X21
	0x0328CC80 MOV X2, X31
	0x0328CC84 BL 0x33A700C
	0x0328CC88 LDP X20, X19, [X31 + 0x20]
	0x0328CC8C LDP X22, X21, [X31 + 0x10]
	0x0328CC90 LDR X30, [X31], #0x30
	0x0328CC94 RET
	0x0328CC98 BL 0x1C16F20
	0x0328CC9C BL 0x1C16F28
	0x0328CCA0 BL 0x1C16F44
	0x0328CCA4 MOV X1, X31
	0x0328CCA8 BL 0x1C16DEC
	0x0328CCAC MOV X0, X20
	0x0328CCB0 BL 0x19903C0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, X1
	007 Move X1, X31
	008 Move X19, X3
	009 Move X20, X2
	010 Move X22, X0
	011 Call Object..ctor, X0
	012 Move [X22+16], X21
	013 Move [X22+24], X20
	014 Move [X22+32], X19
	015 Move X20, [X31+32]
	016 Move X19, [X31+40]
	017 Move X22, [X31+16]
	018 Move X21, [X31+24]
	019 Move X30, [X31+48]
	020 Return 

Method: System.Runtime.Remoting.Messaging.IMessage SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage msg)

Disassembly:
	0x0328CCBC LDR X0, [X0 + 0xCD0]
	0x0328CCC0 BL 0x1C16D08
	0x0328CCC4 MOV X20, X0
	0x0328CCC8 ADRP X0, 0xE97000
	0x0328CCCC LDR X0, [X0 + 0xEE8]
	0x0328CCD0 BL 0x1C16D08
	0x0328CCD4 MOV X2, X0
	0x0328CCD8 MOV X0, X20
	0x0328CCDC MOV X1, X19
	0x0328CCE0 MOV X3, X31
	0x0328CCE4 BL 0x32274B8
	0x0328CCE8 MOV X19, X0
	0x0328CCEC ADRP X0, 0xE97000
	0x0328CCF0 LDR X0, [X0 + 0xD20]
	0x0328CCF4 BL 0x1C16D08
	0x0328CCF8 BL 0x1C16F10
	0x0328CCFC MOV X1, X19
	0x0328CD00 MOV X20, X0
	0x0328CD04 BL 0x3273098
	0x0328CD08 ADRP X0, 0xE98000
	0x0328CD0C LDR X0, [X0 + 0x648]
	0x0328CD10 BL 0x1C16D08
	0x0328CD14 MOV X1, X0
	0x0328CD18 MOV X0, X20
	0x0328CD1C BL 0x1C16DEC
	0x0328CD20 CMP W1, 0x1
	0x0328CD24 MOV X20, X0
	0x0328CD28 B.NE 0x328CE4C
	0x0328CD2C MOV X0, X20
	0x0328CD30 BL 0x3EB1AD0
	0x0328CD34 MOV X20, X0
	0x0328CD38 ADRP X0, 0xE67000
	0x0328CD3C LDR X0, [X0 + 0x7D0]
	0x0328CD40 BL 0x1C16D08
	0x0328CD44 LDR X8, [X20]
	0x0328CD48 LDR X1, [X8]
	0x0328CD4C BL 0x1C17270
	0x0328CD50 TBZ X0, 0x0, 0x328CE18
	0x0328CD54 LDR X20, [X20]
	0x0328CD58 BL 0x3EB1AE0
	0x0328CD5C ADRP X0, 0xE97000
	0x0328CD60 LDR X0, [X0 + 0xF60]
	0x0328CD64 BL 0x1C16D08
	0x0328CD68 CBZ X20, 0x328CDAC
	0x0328CD6C LDR X8, [X20]
	0x0328CD70 CMP X8, X0
	0x0328CD74 B.NE 0x328CDAC
	0x0328CD78 ADRP X0, 0xE97000
	0x0328CD7C LDR X0, [X0 + 0xF60]
	0x0328CD80 BL 0x1C16D08
	0x0328CD84 LDR X8, [X20]
	0x0328CD88 CMP X8, X0
	0x0328CD8C B.NE 0x328CE38
	0x0328CD90 ADRP X0, 0xE97000
	0x0328CD94 LDR X0, [X0 + 0xF60]
	0x0328CD98 BL 0x1C16D08
	0x0328CD9C LDR X8, [X20]
	0x0328CDA0 CMP X8, X0
	0x0328CDA4 B.NE 0x328CE38
	0x0328CDA8 LDR X20, [X20 + 0x28]
	0x0328CDAC ADRP X0, 0xE98000
	0x0328CDB0 LDR X0, [X0 + 0x650]
	0x0328CDB4 BL 0x1C16D08
	0x0328CDB8 MOV X21, X0
	0x0328CDBC CBZ X19, 0x328CDD4
	0x0328CDC0 LDR X8, [X19]
	0x0328CDC4 MOV X0, X19
	0x0328CDC8 LDP X9, X1, [X8 + 0x168]
	0x0328CDCC BLR X9
	0x0328CDD0 MOV X19, X0
	0x0328CDD4 MOV X0, X20
	0x0328CDD8 BL 0x19903C0
	0x0328CDDC LDR X8, [X20]
	0x0328CDE0 MOV X0, X20
	0x0328CDE4 LDP X9, X1, [X8 + 0x188]
	0x0328CDE8 BLR X9
	0x0328CDEC MOV X20, X0
	0x0328CDF0 ADRP X0, 0xE98000
	0x0328CDF4 LDR X0, [X0 + 0x658]
	0x0328CDF8 BL 0x1C16D08
	0x0328CDFC MOV X2, X0
	0x0328CE00 MOV X0, X21
	0x0328CE04 MOV X1, X19
	0x0328CE08 MOV X3, X20
	0x0328CE0C MOV X4, X31
	0x0328CE10 BL 0x32277C4
	0x0328CE14 B 0x328CCE8
	0x0328CE18 MOVZ W0, 0x8
	0x0328CE1C BL 0x3EB1AF0
	0x0328CE20 LDR X8, [X20]
	0x0328CE24 STR X8, [X0]
	0x0328CE28 ADRP X1, 0xC28000
	0x0328CE2C ADD X1, X1, 0xE58
	0x0328CE30 MOV X2, X31
	0x0328CE34 BL 0x3EB1B00
	0x0328CE38 MOV X1, X0
	0x0328CE3C MOV X0, X20
	0x0328CE40 BL 0x1C171E0
	0x0328CE44 MOV X20, X0
	0x0328CE48 BL 0x3EB1AE0
	0x0328CE4C MOV X0, X20
	0x0328CE50 BL 0x1D2C690
	0x0328CE54 BL 0x1990590
	0x0328CE58 STP X30, X21, [X31 - 0x20]!
	0x0328CE5C STP X20, X19, [X31 + 0x10]
	0x0328CE60 ADRP X20, 0x1150000
	0x0328CE64 ADRP X21, 0xE97000
	0x0328CE68 LDRB W8, [X20 + 0x6A2]
	0x0328CE6C LDR X21, [X21 + 0xD08]
	0x0328CE70 MOV X19, X0
	0x0328CE74 TBNZ X8, 0x0, 0x328CE8C
	0x0328CE78 ADRP X0, 0xE97000
	0x0328CE7C LDR X0, [X0 + 0xD08]
	0x0328CE80 BL 0x1C16CF4
	0x0328CE84 MOVZ W8, 0x1
	0x0328CE88 STRB W8, [X20 + 0x6A2]
	0x0328CE8C LDR X0, [X21]
	0x0328CE90 LDR W8, [X0 + 0xE0]
	0x0328CE94 CBNZ W8, 0x328CE9C
	0x0328CE98 BL 0x1C16DFC
	0x0328CE9C MOV X0, X19
	0x0328CEA0 BL 0x328CEFC
	0x0328CEA4 LDR X8, [X21]
	0x0328CEA8 MOV X20, X0
	0x0328CEAC LDR W9, [X8 + 0xE0]
	0x0328CEB0 CBZ W9, 0x328CEBC
	0x0328CEB4 CBNZ X20, 0x328CEE4
	0x0328CEB8 B 0x328CEC8
	0x0328CEBC MOV X0, X8
	0x0328CEC0 BL 0x1C16DFC
	0x0328CEC4 CBNZ X20, 0x328CEE4
	0x0328CEC8 LDR X8, [X21]
	0x0328CECC LDR X8, [X8 + 0xB8]
	0x0328CED0 LDR X8, [X8 + 0x10]
	0x0328CED4 CBZ X8, 0x328CEF8
	0x0328CED8 MOV X1, X19
	0x0328CEDC BL 0x328B47C
	0x0328CEE0 MOV X20, X0
	0x0328CEE4 MOV X0, X19
	0x0328CEE8 MOV X1, X20
	0x0328CEEC LDP X20, X19, [X31 + 0x10]
	0x0328CEF0 LDP X30, X21, [X31], #0x20
	0x0328CEF4 B 0x328D198
	0x0328CEF8 BL 0x1C16F20
	0x0328CEFC STP X30, X23, [X31 - 0x30]!
	0x0328CF00 STP X22, X21, [X31 + 0x10]
	0x0328CF04 STP X20, X19, [X31 + 0x20]
	0x0328CF08 ADRP X20, 0x1150000
	0x0328CF0C LDRB W8, [X20 + 0x6A3]
	0x0328CF10 MOV X19, X0
	0x0328CF14 TBNZ X8, 0x0, 0x328CF74
	0x0328CF18 ADRP X0, 0xE98000
	0x0328CF1C LDR X0, [X0 + 0x458]
	0x0328CF20 BL 0x1C16CF4
	0x0328CF24 ADRP X0, 0xE98000
	0x0328CF28 LDR X0, [X0 + 0x270]
	0x0328CF2C BL 0x1C16CF4
	0x0328CF30 ADRP X0, 0xE97000
	0x0328CF34 LDR X0, [X0 + 0xD20]
	0x0328CF38 BL 0x1C16CF4
	0x0328CF3C ADRP X0, 0xE97000
	0x0328CF40 LDR X0, [X0 + 0xE68]
	0x0328CF44 BL 0x1C16CF4
	0x0328CF48 ADRP X0, 0xE98000
	0x0328CF4C LDR X0, [X0 + 0x280]
	0x0328CF50 BL 0x1C16CF4
	0x0328CF54 ADRP X0, 0xE98000
	0x0328CF58 LDR X0, [X0 + 0x298]
	0x0328CF5C BL 0x1C16CF4
	0x0328CF60 ADRP X0, 0xE98000
	0x0328CF64 LDR X0, [X0 + 0x660]
	0x0328CF68 BL 0x1C16CF4
	0x0328CF6C MOVZ W8, 0x1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x1151000
	009 Move X24, 0xE98000
	010 Move W8, [X21+1690]
	011 Move X24, [X24+3768]
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xE98000
	019 Move X0, [X0+3768]
	020 Call 0x1C17CF4
	021 Move X0, 0xE99000
	022 Move X0, [X0+952]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+1690], W8
	026 Move X0, [X24]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move W0, W31
	032 Move X1, X20
	033 Move W2, W31
	034 Move W3, W31
	035 Call Context.NotifyGlobalDynamicSinks, X0, X1, X2, X3
	036 Move X0, X31
	037 Call Thread.get_CurrentContext
	038 Compare X0, 0
	039 JumpIfEqual {98}
	040 Move W1, W31
	041 Move X2, X20
	042 Move W3, W31
	043 Move W4, W31
	044 Call Context.NotifyDynamicSinks, X0, X1, X2, X3, X4
	045 Move X21, [X19+16]
	046 Compare X21, 0
	047 JumpIfEqual {99}
	048 Move X10, 0xE99000
	049 Move X8, [X21]
	050 Move X10, [X10+952]
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 Move X1, [X10]
	053 Compare X9, 0
	054 JumpIfEqual {61}
	055 Move X10, [X8+176]
	056 Add X10, X10, 8
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Subtract X9, X9, 1
	060 Add X10, X10, 16
	061 Move X0, X21
	062 Move W2, W31
	063 Call 0x1C5D788
	064 NotImplemented "Instruction LDRSW not yet implemented."
	065 Add X8, X8, X9
	066 Add X0, X8, 312
	067 Move X8, [X0]
	068 Move X2, [X0+8]
	069 Move X0, X21
	070 Move X1, X20
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move X20, X0
	073 Move X21, X31
	074 Move X19, [X19+24]
	075 Compare X19, 0
	076 JumpIfEqual {85}
	077 Move X0, [X24]
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {82}
	081 Call 0x1C17DFC
	082 Move X0, X19
	083 Move X1, X31
	084 Call AppDomain.InternalSetContext, X0
	085 Compare X21, 0
	086 JumpIfNotEqual {96}
	087 Move X0, X20
	088 Move X20, [X31+48]
	089 Move X19, [X31+56]
	090 Move X22, [X31+32]
	091 Move X21, [X31+40]
	092 Move X24, [X31+16]
	093 Move X23, [X31+24]
	094 Move X30, [X31+64]
	095 Return X0
	096 Move X0, X21
	097 Call 0x1C17F18
	098 Call 0x1C17F20
	099 Call 0x1C17F20
	100 Move X20, X0
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X0, X20
	103 Call 0x3EB2AD0
	104 Move X20, X0
	105 Move X0, 0xE68000
	106 Move X0, [X0+2000]
	107 Call 0x1C17D08
	108 Move X8, [X20]
	109 Move X1, [X8]
	110 Call 0x1C18270
	111 Move TEMP, X0
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfNotEqual {144}
	115 Move X21, [X20]
	116 Call 0x3EB2AE0
	117 Move X22, [X19+32]
	118 Move X0, 0xE99000
	119 Move X0, [X0+640]
	120 Call 0x1C17D08
	121 Call 0x1C17F10
	122 Move X20, X0
	123 Move X0, 0xE99000
	124 Move X0, [X0+1112]
	125 Call 0x1C17D08
	126 Compare X22, 0
	127 JumpIfEqual {138}
	128 Move X23, X0
	129 Move X0, X22
	130 Move X1, X23
	131 Call 0x1C17E00
	132 Move X2, X0
	133 Compare X0, 0
	134 JumpIfNotEqual {139}
	135 Move X0, X22
	136 Move X1, X23
	137 Call 0x1C181E0
	138 Move X2, X31
	139 Move X0, X20
	140 Move X1, X21
	141 Move X3, X31
	142 Call ReturnMessage..ctor, X0, X1, X2
	143 Move X21, X31
	144 Move W0, 8
	145 Call 0x3EB2AF0
	146 Move X8, [X20]
	147 Move [X0], X8
	148 Move X1, 0xC29000
	149 Add X1, X1, 3672
	150 Move X2, X31
	151 Call 0x3EB2B00
	152 Move X20, X0
	153 Move X21, X1
	154 Move X20, X0
	155 Call 0x3EB2AE0
	156 Move W1, W21
	157 Move X20, X0
	158 Move W8, 1
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Move X0, X20
	161 Call 0x3EB2AD0
	162 Move X21, [X0]
	163 Call 0x3EB2AE0
	164 Move X20, X31
	165 Move X21, X31
	166 Move X20, X0
	167 Move X19, [X19+24]
	168 Compare X19, 0
	169 JumpIfEqual {178}
	170 Move X0, [X24]
	171 Move W8, [X0+224]
	172 Compare W8, 0
	173 JumpIfNotEqual {175}
	174 Call 0x1C17DFC
	175 Move X0, X19
	176 Move X1, X31
	177 Call AppDomain.InternalSetContext, X0
	178 Compare X21, 0
	179 JumpIfNotEqual {182}
	180 Move X0, X20
	181 Call 0x1D2D690
	182 Move X0, X21
	183 Call 0x1C17F18
	184 Call 0x1991590

Method: System.Runtime.Remoting.Messaging.IMessageCtrl AsyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Messaging.IMessageSink replySink)

Disassembly:
	0x0328CF70 STRB W8, [X20 + 0x6A3]
	0x0328CF74 CBZ X19, 0x328D188
	0x0328CF78 ADRP X22, 0xE98000
	0x0328CF7C LDR X22, [X22 + 0x270]
	0x0328CF80 MOV X0, X19
	0x0328CF84 LDR X21, [X22]
	0x0328CF88 MOV X1, X21
	0x0328CF8C BL 0x1C16E00
	0x0328CF90 CBZ X0, 0x328D18C
	0x0328CF94 LDR X8, [X0]
	0x0328CF98 ADRP X23, 0xE97000
	0x0328CF9C LDR X1, [X22]
	0x0328CFA0 MOV X20, X0
	0x0328CFA4 LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xE68000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0xE99000
	011 Move X0, [X0+1544]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

