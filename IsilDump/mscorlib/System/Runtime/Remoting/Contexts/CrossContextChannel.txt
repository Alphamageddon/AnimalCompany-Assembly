Type: System.Runtime.Remoting.Contexts.CrossContextChannel

Method: System.Runtime.Remoting.Messaging.IMessage SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage msg)

Disassembly:
	0x0328C47C LDR X0, [X27]
	0x0328C480 LDR X8, [X0 + 0xB8]
	0x0328C484 LDR X0, [X8]
	0x0328C488 CBZ X0, 0x328C8D4
	0x0328C48C LDR X8, [X0]
	0x0328C490 LDR X1, [X8 + 0x2A0]
	0x0328C494 LDR X9, [X8 + 0x298]
	0x0328C498 BLR X9
	0x0328C49C CMP W22, W0
	0x0328C4A0 B.GE 0x328C6F8
	0x0328C4A4 LDR X0, [X27]
	0x0328C4A8 LDR W8, [X0 + 0xE0]
	0x0328C4AC CBNZ W8, 0x328C4B8
	0x0328C4B0 BL 0x1C16DFC
	0x0328C4B4 LDR X0, [X27]
	0x0328C4B8 LDR X8, [X0 + 0xB8]
	0x0328C4BC LDR X0, [X8]
	0x0328C4C0 CBZ X0, 0x328C8E4
	0x0328C4C4 LDR X8, [X0]
	0x0328C4C8 LDR X9, [X8 + 0x2E8]
	0x0328C4CC LDR X2, [X8 + 0x2F0]
	0x0328C4D0 MOV W1, W22
	0x0328C4D4 BLR X9
	0x0328C4D8 MOV X24, X0
	0x0328C4DC CBZ X0, 0x328C8E8
	0x0328C4E0 LDR X25, [X29]
	0x0328C4E4 MOV X0, X24
	0x0328C4E8 MOV X1, X25
	0x0328C4EC BL 0x1C16E00
	0x0328C4F0 MOV X23, X0
	0x0328C4F4 CBZ X0, 0x328C8D8
	0x0328C4F8 LDR X8, [X23]
	0x0328C4FC LDR X1, [X29]
	0x0328C500 LDRH W9, [X8 + 0x12E]
	0x0328C504 CBZ X9, 0x328C528
	0x0328C508 LDR X10, [X8 + 0xB0]
	0x0328C50C ADD X10, X10, 0x8
	0x0328C510 LDUR X11, [X10 - 0x8]
	0x0328C514 CMP X11, X1
	0x0328C518 B.EQ 0x328C538
	0x0328C51C SUBS X9, X9, 0x1
	0x0328C520 ADD X10, X10, 0x10
	0x0328C524 B.NE 0x328C510
	0x0328C528 MOV X0, X23
	0x0328C52C MOV W2, W31
	0x0328C530 BL 0x1C5C788
	0x0328C534 B 0x328C544
	0x0328C538 LDRSW X9, [X10]
	0x0328C53C ADD X8, X8, X9, 0x4, LSL
	0x0328C540 ADD X0, X8, 0x138
	0x0328C544 LDP X8, X1, [X0]
	0x0328C548 MOV X0, X23
	0x0328C54C BLR X8
	0x0328C550 LDR X8, [X20]
	0x0328C554 LDR X1, [X29]
	0x0328C558 MOV X24, X0
	0x0328C55C LDRH W9, [X8 + 0x12E]
	0x0328C560 CBZ X9, 0x328C584
	0x0328C564 LDR X10, [X8 + 0xB0]
	0x0328C568 ADD X10, X10, 0x8
	0x0328C56C LDUR X11, [X10 - 0x8]
	0x0328C570 CMP X11, X1
	0x0328C574 B.EQ 0x328C594
	0x0328C578 SUBS X9, X9, 0x1
	0x0328C57C ADD X10, X10, 0x10
	0x0328C580 B.NE 0x328C56C
	0x0328C584 MOV X0, X20
	0x0328C588 MOV W2, W31
	0x0328C58C BL 0x1C5C788
	0x0328C590 B 0x328C5A0
	0x0328C594 LDRSW X9, [X10]
	0x0328C598 ADD X8, X8, X9, 0x4, LSL
	0x0328C59C ADD X0, X8, 0x138
	0x0328C5A0 LDP X8, X1, [X0]
	0x0328C5A4 MOV X0, X20
	0x0328C5A8 BLR X8
	0x0328C5AC MOV X1, X0
	0x0328C5B0 MOV X0, X24
	0x0328C5B4 MOV X2, X31
	0x0328C5B8 BL 0x321BA08
	0x0328C5BC TBZ X0, 0x0, 0x328C628
	0x0328C5C0 LDR X8, [X20]
	0x0328C5C4 LDR X1, [X29]
	0x0328C5C8 LDRH W9, [X8 + 0x12E]
	0x0328C5CC CBZ X9, 0x328C5F0
	0x0328C5D0 LDR X10, [X8 + 0xB0]
	0x0328C5D4 ADD X10, X10, 0x8
	0x0328C5D8 LDUR X11, [X10 - 0x8]
	0x0328C5DC CMP X11, X1
	0x0328C5E0 B.EQ 0x328C600
	0x0328C5E4 SUBS X9, X9, 0x1
	0x0328C5E8 ADD X10, X10, 0x10
	0x0328C5EC B.NE 0x328C5D8
	0x0328C5F0 MOV X0, X20
	0x0328C5F4 MOV W2, W31
	0x0328C5F8 BL 0x1C5C788
	0x0328C5FC B 0x328C60C
	0x0328C600 LDRSW X9, [X10]
	0x0328C604 ADD X8, X8, X9, 0x4, LSL
	0x0328C608 ADD X0, X8, 0x138
	0x0328C60C LDP X8, X1, [X0]
	0x0328C610 MOV X0, X20
	0x0328C614 BLR X8
	0x0328C618 LDR X1, [X28]
	0x0328C61C MOV X2, X31
	0x0328C620 BL 0x3226EF8
	0x0328C624 TBNZ X0, 0x0, 0x328C8EC
	0x0328C628 LDR X8, [X23]
	0x0328C62C LDR X1, [X29]
	0x0328C630 LDRH W9, [X8 + 0x12E]
	0x0328C634 CBZ X9, 0x328C658
	0x0328C638 LDR X10, [X8 + 0xB0]
	0x0328C63C ADD X10, X10, 0x8
	0x0328C640 LDUR X11, [X10 - 0x8]
	0x0328C644 CMP X11, X1
	0x0328C648 B.EQ 0x328C668
	0x0328C64C SUBS X9, X9, 0x1
	0x0328C650 ADD X10, X10, 0x10
	0x0328C654 B.NE 0x328C640
	0x0328C658 MOVZ W2, 0x1
	0x0328C65C MOV X0, X23
	0x0328C660 BL 0x1C5C788
	0x0328C664 B 0x328C678
	0x0328C668 LDR W9, [X10]
	0x0328C66C ADD W9, W9, 0x1
	0x0328C670 ADD X8, X8, W9, 0x4, SXTW
	0x0328C674 ADD X0, X8, 0x138
	0x0328C678 LDP X8, X1, [X0]
	0x0328C67C MOV X0, X23
	0x0328C680 BLR X8
	0x0328C684 LDR X8, [X20]
	0x0328C688 LDR X1, [X29]
	0x0328C68C MOV W23, W0
	0x0328C690 LDRH W9, [X8 + 0x12E]
	0x0328C694 CBZ X9, 0x328C6B8
	0x0328C698 LDR X10, [X8 + 0xB0]
	0x0328C69C ADD X10, X10, 0x8
	0x0328C6A0 LDUR X11, [X10 - 0x8]
	0x0328C6A4 CMP X11, X1
	0x0328C6A8 B.EQ 0x328C6C8
	0x0328C6AC SUBS X9, X9, 0x1
	0x0328C6B0 ADD X10, X10, 0x10
	0x0328C6B4 B.NE 0x328C6A0
	0x0328C6B8 MOVZ W2, 0x1
	0x0328C6BC MOV X0, X20
	0x0328C6C0 BL 0x1C5C788
	0x0328C6C4 B 0x328C6D8
	0x0328C6C8 LDR W9, [X10]
	0x0328C6CC ADD W9, W9, 0x1
	0x0328C6D0 ADD X8, X8, W9, 0x4, SXTW
	0x0328C6D4 ADD X0, X8, 0x138
	0x0328C6D8 LDP X8, X1, [X0]
	0x0328C6DC MOV X0, X20
	0x0328C6E0 BLR X8
	0x0328C6E4 CMP W23, W0
	0x0328C6E8 CCMP W21, W26, 0x0, LT
	0x0328C6EC CSEL W21, W22, W21, EQ
	0x0328C6F0 ADD W22, W22, 0x1
	0x0328C6F4 B 0x328C46C
	0x0328C6F8 LDR X0, [X27]
	0x0328C6FC ADRP X23, 0xE97000
	0x0328C700 ADDS W31, W21, 0x1
	0x0328C704 LDR W8, [X0 + 0xE0]
	0x0328C708 LDR X23, [X23 + 0xD10]
	0x0328C70C B.EQ 0x328C744
	0x0328C710 CBNZ W8, 0x328C71C
	0x0328C714 BL 0x1C16DFC
	0x0328C718 LDR X0, [X27]
	0x0328C71C LDR X8, [X0 + 0xB8]
	0x0328C720 LDR X0, [X8]
	0x0328C724 CBZ X0, 0x328CA14
	0x0328C728 LDR X8, [X0]
	0x0328C72C LDR X9, [X8 + 0x3A8]
	0x0328C730 LDR X3, [X8 + 0x3B0]
	0x0328C734 MOV W1, W21
	0x0328C738 MOV X2, X20
	0x0328C73C BLR X9
	0x0328C740 B 0x328C770
	0x0328C744 CBNZ W8, 0x328C750
	0x0328C748 BL 0x1C16DFC
	0x0328C74C LDR X0, [X27]
	0x0328C750 LDR X8, [X0 + 0xB8]
	0x0328C754 LDR X0, [X8]
	0x0328C758 CBZ X0, 0x328CA98
	0x0328C75C LDR X8, [X0]
	0x0328C760 LDR X9, [X8 + 0x308]
	0x0328C764 LDR X2, [X8 + 0x310]
	0x0328C768 MOV X1, X20
	0x0328C76C BLR X9
	0x0328C770 LDR X1, [X23]
	0x0328C774 MOV X0, X20
	0x0328C778 BL 0x1C16E00
	0x0328C77C MOV X21, X0
	0x0328C780 CBZ X0, 0x328C89C
	0x0328C784 LDR X0, [X27]
	0x0328C788 LDR W8, [X0 + 0xE0]
	0x0328C78C CBNZ W8, 0x328C798
	0x0328C790 BL 0x1C16DFC
	0x0328C794 LDR X0, [X27]
	0x0328C798 LDR X8, [X0 + 0xB8]
	0x0328C79C LDR X22, [X8 + 0x20]
	0x0328C7A0 MOV X0, X20
	0x0328C7A4 MOV X1, X31
	0x0328C7A8 BL 0x33BE520
	0x0328C7AC CBZ X0, 0x328CA18
	0x0328C7B0 LDR X8, [X0]
	0x0328C7B4 LDP X9, X1, [X8 + 0x168]
	0x0328C7B8 BLR X9
	0x0328C7BC CBZ X22, 0x328CA1C
	0x0328C7C0 LDR X8, [X22]
	0x0328C7C4 ADRP X10, 0xE6E000
	0x0328C7C8 MOV X20, X0
	0x0328C7CC LDRH W9, [X8 + 0x12E]
	0x0328C7D0 LDR X10, [X10 + 0x2F8]
	0x0328C7D4 LDR X1, [X10]
	0x0328C7D8 CBZ X9, 0x328C7FC
	0x0328C7DC LDR X10, [X8 + 0xB0]
	0x0328C7E0 ADD X10, X10, 0x8
	0x0328C7E4 LDUR X11, [X10 - 0x8]
	0x0328C7E8 CMP X11, X1
	0x0328C7EC B.EQ 0x328C80C
	0x0328C7F0 SUBS X9, X9, 0x1
	0x0328C7F4 ADD X10, X10, 0x10
	0x0328C7F8 B.NE 0x328C7E4
	0x0328C7FC MOVZ W2, 0x3
	0x0328C800 MOV X0, X22
	0x0328C804 BL 0x1C5C788
	0x0328C808 B 0x328C81C
	0x0328C80C LDR W9, [X10]
	0x0328C810 ADD W9, W9, 0x3
	0x0328C814 ADD X8, X8, W9, 0x4, SXTW
	0x0328C818 ADD X0, X8, 0x138
	0x0328C81C LDP X8, X2, [X0]
	0x0328C820 MOV X0, X22
	0x0328C824 MOV X1, X20
	0x0328C828 BLR X8
	0x0328C82C TBZ X0, 0x0, 0x328C870
	0x0328C830 LDR X8, [X21]
	0x0328C834 LDR X1, [X23]
	0x0328C838 LDRH W9, [X8 + 0x12E]
	0x0328C83C CBZ X9, 0x328C860
	0x0328C840 LDR X10, [X8 + 0xB0]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X19, 0x1151000
	010 Move X21, 0xE98000
	011 Move W8, [X19+1688]
	012 Move X21, [X21+3688]
	013 Move X20, X1
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0xE98000
	019 Move X0, [X0+3768]
	020 Call 0x1C17CF4
	021 Move X0, 0xE99000
	022 Move X0, [X0+952]
	023 Call 0x1C17CF4
	024 Move X0, 0xE98000
	025 Move X0, [X0+3688]
	026 Call 0x1C17CF4
	027 Move X0, 0xE99000
	028 Move X0, [X0+664]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X19+1688], W8
	032 Move X0, [X21]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X20
	038 Call RemotingServices.GetMessageTargetIdentity, X0
	039 Compare X0, 0
	040 JumpIfEqual {160}
	041 Move X9, 0xE99000
	042 Move X9, [X9+664]
	043 Move X8, [X0]
	044 Move X21, X0
	045 Move X1, [X9]
	046 Move W10, [X8+304]
	047 Move W9, [X1+304]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X8, [X8+200]
	050 Add X8, X8, X9
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X25, 0xE98000
	054 Move X25, [X25+3768]
	055 Move X0, X31
	056 Call Thread.get_CurrentContext
	057 Move X19, [X21+96]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X0, [X25]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X0, X19
	065 Move X1, X31
	066 Call AppDomain.InternalSetContext, X0
	067 Move X19, X0
	068 Move X19, X31
	069 Move X0, [X25]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Move W0, 1
	075 Move X1, X20
	076 Move W2, W31
	077 Move W3, W31
	078 Call Context.NotifyGlobalDynamicSinks, X0, X1, X2, X3
	079 Move X0, X31
	080 Call Thread.get_CurrentContext
	081 Compare X0, 0
	082 JumpIfEqual {164}
	083 Move W1, 1
	084 Move X2, X20
	085 Move W3, W31
	086 Move W4, W31
	087 Call Context.NotifyDynamicSinks, X0, X1, X2, X3, X4
	088 Move X0, [X21+96]
	089 Compare X0, 0
	090 JumpIfEqual {165}
	091 Call Context.GetServerContextSinkChain, X0
	092 Move X21, X0
	093 Compare X0, 0
	094 JumpIfEqual {166}
	095 Move X10, 0xE99000
	096 Move X8, [X21]
	097 Move X10, [X10+952]
	098 NotImplemented "Instruction LDRH not yet implemented."
	099 Move X1, [X10]
	100 Compare X9, 0
	101 JumpIfEqual {108}
	102 Move X10, [X8+176]
	103 Add X10, X10, 8
	104 NotImplemented "Instruction LDUR not yet implemented."
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Subtract X9, X9, 1
	107 Add X10, X10, 16
	108 Move X0, X21
	109 Move W2, W31
	110 Call 0x1C5D788
	111 NotImplemented "Instruction LDRSW not yet implemented."
	112 Add X8, X8, X9
	113 Add X0, X8, 312
	114 Move X8, [X0]
	115 Move X2, [X0+8]
	116 Move X0, X21
	117 Move X1, X20
	118 NotImplemented "Instruction BLR not yet implemented."
	119 Move X21, X0
	120 Move W0, W31
	121 Move X1, X20
	122 Move W2, W31
	123 Move W3, W31
	124 Call Context.NotifyGlobalDynamicSinks, X0, X1, X2, X3
	125 Move X0, X31
	126 Call Thread.get_CurrentContext
	127 Compare X0, 0
	128 JumpIfEqual {167}
	129 Move W1, W31
	130 Move X2, X20
	131 Move W3, W31
	132 Move W4, W31
	133 Call Context.NotifyDynamicSinks, X0, X1, X2, X3, X4
	134 Move X20, X31
	135 Move X22, X21
	136 Compare X19, 0
	137 JumpIfEqual {146}
	138 Move X0, [X25]
	139 Move W8, [X0+224]
	140 Compare W8, 0
	141 JumpIfNotEqual {143}
	142 Call 0x1C17DFC
	143 Move X0, X19
	144 Move X1, X31
	145 Call AppDomain.InternalSetContext, X0
	146 Compare X20, 0
	147 JumpIfNotEqual {162}
	148 Move X0, X22
	149 Move X20, [X31+48]
	150 Move X19, [X31+56]
	151 Move X22, [X31+32]
	152 Move X21, [X31+40]
	153 Move X24, [X31+16]
	154 Move X23, [X31+24]
	155 Move X30, [X31+64]
	156 Move X25, [X31+72]
	157 Return X0
	158 Move X0, X21
	159 Call 0x1C181E0
	160 Call Thread.get_CurrentContext
	161 Call 0x1C17F20
	162 Move X0, X20
	163 Call 0x1C17F18
	164 Call 0x1C17F20
	165 Call 0x1C17F20
	166 Call 0x1C17F20
	167 Call 0x1C17F20
	168 Move X22, X0
	169 Move X22, X0
	170 Move X21, X31
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Move X0, X22
	173 Call 0x3EB2AD0
	174 Move X22, X0
	175 Move X0, 0xE68000
	176 Move X0, [X0+2000]
	177 Call 0x1C17D08
	178 Move X8, [X22]
	179 Move X1, [X8]
	180 Call 0x1C18270
	181 Move TEMP, X0
	182 And TEMP, TEMP, 1
	183 Compare TEMP, 1
	184 JumpIfNotEqual {213}
	185 Move X23, [X22]
	186 Call 0x3EB2AE0
	187 Move X0, 0xE99000
	188 Move X0, [X0+640]
	189 Call 0x1C17D08
	190 Call 0x1C17F10
	191 Move X22, X0
	192 Move X0, 0xE99000
	193 Move X0, [X0+1112]
	194 Call 0x1C17D08
	195 Compare X20, 0
	196 JumpIfEqual {207}
	197 Move X24, X0
	198 Move X0, X20
	199 Move X1, X24
	200 Call 0x1C17E00
	201 Move X2, X0
	202 Compare X0, 0
	203 JumpIfNotEqual {208}
	204 Move X0, X20
	205 Move X1, X24
	206 Call 0x1C181E0
	207 Move X2, X31
	208 Move X0, X22
	209 Move X1, X23
	210 Move X3, X31
	211 Call ReturnMessage..ctor, X0, X1, X2
	212 Move X20, X31
	213 Move W0, 8
	214 Call 0x3EB2AF0
	215 Move X8, [X22]
	216 Move [X0], X8
	217 Move X1, 0xC29000
	218 Add X1, X1, 3672
	219 Move X2, X31
	220 Call 0x3EB2B00
	221 Move X22, X0
	222 Move X20, X1
	223 Move X22, X0
	224 Call 0x3EB2AE0
	225 Move W1, W20
	226 Move X22, X0
	227 Move W8, 1
	228 NotImplemented "Instruction CMP not yet implemented."
	229 Move X0, X22
	230 Call 0x3EB2AD0
	231 Move X20, [X0]
	232 Call 0x3EB2AE0
	233 Move X20, X31
	234 Move X22, X0
	235 Compare X19, 0
	236 JumpIfEqual {245}
	237 Move X0, [X25]
	238 Move W8, [X0+224]
	239 Compare W8, 0
	240 JumpIfNotEqual {242}
	241 Call 0x1C17DFC
	242 Move X0, X19
	243 Move X1, X31
	244 Call AppDomain.InternalSetContext, X0
	245 Compare X20, 0
	246 JumpIfNotEqual {249}
	247 Move X0, X22
	248 Call 0x1D2D690
	249 Move X0, X20
	250 Call 0x1C17F18
	251 Call 0x1991590

Method: System.Runtime.Remoting.Messaging.IMessageCtrl AsyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Messaging.IMessageSink replySink)

Disassembly:
	0x0328C844 ADD X10, X10, 0x8
	0x0328C848 LDUR X11, [X10 - 0x8]
	0x0328C84C CMP X11, X1
	0x0328C850 B.EQ 0x328C878
	0x0328C854 SUBS X9, X9, 0x1
	0x0328C858 ADD X10, X10, 0x10
	0x0328C85C B.NE 0x328C848
	0x0328C860 MOVZ W2, 0x1
	0x0328C864 MOV X0, X21
	0x0328C868 BL 0x1C5C788
	0x0328C86C B 0x328C888
	0x0328C870 MOV X21, X31
	0x0328C874 B 0x328C89C
	0x0328C878 LDR W9, [X10]
	0x0328C87C ADD W9, W9, 0x1
	0x0328C880 ADD X8, X8, W9, 0x4, SXTW
	0x0328C884 ADD X0, X8, 0x138
	0x0328C888 LDP X8, X2, [X0]
	0x0328C88C MOV X0, X21
	0x0328C890 MOV X1, X31
	0x0328C894 BLR X8
	0x0328C898 MOV X21, X31
	0x0328C89C LDRB W8, [X31 + 0xC]
	0x0328C8A0 CBZ W8, 0x328C8B0
	0x0328C8A4 MOV X0, X19
	0x0328C8A8 MOV X1, X31
	0x0328C8AC BL 0x33E14E4
	0x0328C8B0 CBNZ X21, 0x328CA0C
	0x0328C8B4 LDP X20, X19, [X31 + 0x60]
	0x0328C8B8 LDP X22, X21, [X31 + 0x50]
	0x0328C8BC LDP X24, X23, [X31 + 0x40]
	0x0328C8C0 LDP X26, X25, [X31 + 0x30]
	0x0328C8C4 LDP X28, X27, [X31 + 0x20]
	0x0328C8C8 LDP X29, X30, [X31 + 0x10]
	0x0328C8CC ADD X31, X31, 0x70
	0x0328C8D0 RET
	0x0328C8D4 BL 0x1C16F20
	0x0328C8D8 MOV X0, X24
	0x0328C8DC MOV X1, X25
	0x0328C8E0 BL 0x1C171E0
	0x0328C8E4 BL 0x1C16F20
	0x0328C8E8 BL 0x1C16F20
	0x0328C8EC ADRP X0, 0xE97000
	0x0328C8F0 LDR X0, [X0 + 0xF20]
	0x0328C8F4 BL 0x1C16D08
	0x0328C8F8 MOV X1, X0
	0x0328C8FC LDR X8, [X23]
	0x0328C900 LDRH W9, [X8 + 0x12E]
	0x0328C904 CBZ X9, 0x328C928
	0x0328C908 LDR X10, [X8 + 0xB0]
	0x0328C90C ADD X10, X10, 0x8
	0x0328C910 LDUR X11, [X10 - 0x8]
	0x0328C914 CMP X11, X1
	0x0328C918 B.EQ 0x328C938
	0x0328C91C SUBS X9, X9, 0x1
	0x0328C920 ADD X10, X10, 0x10
	0x0328C924 B.NE 0x328C910
	0x0328C928 MOV X0, X23
	0x0328C92C MOV W2, W31
	0x0328C930 BL 0x1C5C788
	0x0328C934 B 0x328C944
	0x0328C938 LDRSW X9, [X10]
	0x0328C93C ADD X8, X8, X9, 0x4, LSL
	0x0328C940 ADD X0, X8, 0x138
	0x0328C944 LDP X8, X1, [X0]
	0x0328C948 MOV X0, X23
	0x0328C94C BLR X8
	0x0328C950 MOV X20, X0
	0x0328C954 ADRP X0, 0xE98000
	0x0328C958 LDR X0, [X0 + 0x620]
	0x0328C95C BL 0x1C16D08
	0x0328C960 MOV X21, X0
	0x0328C964 ADRP X0, 0xE98000
	0x0328C968 LDR X0, [X0 + 0x628]
	0x0328C96C BL 0x1C16D08
	0x0328C970 MOV X2, X0
	0x0328C974 MOV X0, X21
	0x0328C978 MOV X1, X20
	0x0328C97C MOV X3, X31
	0x0328C980 BL 0x32274B8
	0x0328C984 MOV X20, X0
	0x0328C988 ADRP X0, 0xE97000
	0x0328C98C LDR X0, [X0 + 0xD20]
	0x0328C990 BL 0x1C16D08
	0x0328C994 BL 0x1C16F10
	0x0328C998 MOV X21, X0
	0x0328C99C MOV X1, X20
	0x0328C9A0 MOV X2, X31
	0x0328C9A4 BL 0x338C8D8
	0x0328C9A8 ADRP X0, 0xE98000
	0x0328C9AC LDR X0, [X0 + 0x630]
	0x0328C9B0 BL 0x1C16D08
	0x0328C9B4 MOV X1, X0
	0x0328C9B8 MOV X0, X21
	0x0328C9BC BL 0x1C16DEC
	0x0328C9C0 ADRP X0, 0xE6C000
	0x0328C9C4 LDR X0, [X0 + 0x528]
	0x0328C9C8 BL 0x1C16D08
	0x0328C9CC BL 0x1C16F10
	0x0328C9D0 MOV X19, X0
	0x0328C9D4 ADRP X0, 0xE98000
	0x0328C9D8 LDR X0, [X0 + 0x638]
	0x0328C9DC BL 0x1C16D08
	0x0328C9E0 MOV X1, X0
	0x0328C9E4 MOV X0, X19
	0x0328C9E8 MOV X2, X31
	0x0328C9EC BL 0x330E100
	0x0328C9F0 ADRP X0, 0xE98000
	0x0328C9F4 LDR X0, [X0 + 0x630]
	0x0328C9F8 BL 0x1C16D08
	0x0328C9FC MOV X1, X0
	0x0328CA00 MOV X0, X19
	0x0328CA04 BL 0x1C16DEC
	0x0328CA08 BL 0x1C16F20
	0x0328CA0C MOV X0, X21
	0x0328CA10 BL 0x1C16F18
	0x0328CA14 BL 0x1C16F20
	0x0328CA18 BL 0x1C16F20
	0x0328CA1C BL 0x1C16F20
	0x0328CA20 MOV X0, X20
	0x0328CA24 BL 0x19903C0
	0x0328CA28 ADRP X0, 0xE97000
	0x0328CA2C LDR X0, [X0 + 0xF20]
	0x0328CA30 BL 0x1C16D08
	0x0328CA34 MOV X1, X0
	0x0328CA38 MOV W0, W31
	0x0328CA3C MOV X2, X20
	0x0328CA40 BL 0x19963F0
	0x0328CA44 MOV X19, X0
	0x0328CA48 ADRP X0, 0xE98000
	0x0328CA4C LDR X0, [X0 + 0x640]
	0x0328CA50 BL 0x1C16D08
	0x0328CA54 MOV X1, X19
	0x0328CA58 MOV X2, X31
	0x0328CA5C BL 0x321EFD0
	0x0328CA60 MOV X19, X0
	0x0328CA64 ADRP X0, 0xE97000
	0x0328CA68 LDR X0, [X0 + 0xD20]
	0x0328CA6C BL 0x1C16D08
	0x0328CA70 BL 0x1C16F10
	0x0328CA74 MOV X1, X19
	0x0328CA78 MOV X20, X0
	0x0328CA7C BL 0x3273098
	0x0328CA80 ADRP X0, 0xE98000
	0x0328CA84 LDR X0, [X0 + 0x630]
	0x0328CA88 BL 0x1C16D08
	0x0328CA8C MOV X1, X0
	0x0328CA90 MOV X0, X20
	0x0328CA94 BL 0x1C16DEC
	0x0328CA98 BL 0x1C16F20
	0x0328CA9C B 0x328CB08
	0x0328CAA0 B 0x328CB08
	0x0328CAA4 B 0x328CB08
	0x0328CAA8 B 0x328CB08
	0x0328CAAC B 0x328CB08
	0x0328CAB0 B 0x328CB08
	0x0328CAB4 B 0x328CB08
	0x0328CAB8 B 0x328CB08
	0x0328CABC B 0x328CB08
	0x0328CAC0 B 0x328CB08
	0x0328CAC4 B 0x328CB08
	0x0328CAC8 B 0x328CB08
	0x0328CACC B 0x328CB08
	0x0328CAD0 B 0x328CB08
	0x0328CAD4 B 0x328CB08
	0x0328CAD8 B 0x328CB08
	0x0328CADC B 0x328CB08
	0x0328CAE0 B 0x328CB08
	0x0328CAE4 B 0x328CB08
	0x0328CAE8 B 0x328CB08
	0x0328CAEC B 0x328CB08
	0x0328CAF0 B 0x328CB08
	0x0328CAF4 B 0x328CB08
	0x0328CAF8 B 0x328CB08
	0x0328CAFC B 0x328CB08
	0x0328CB00 B 0x328CB08
	0x0328CB04 B 0x328CB08
	0x0328CB08 MOV X20, X0
	0x0328CB0C CMP W1, 0x1
	0x0328CB10 B.NE 0x328CB28
	0x0328CB14 MOV X0, X20
	0x0328CB18 BL 0x3EB1AD0
	0x0328CB1C LDR X21, [X0]
	0x0328CB20 BL 0x3EB1AE0
	0x0328CB24 B 0x328C89C
	0x0328CB28 MOV X21, X31
	0x0328CB2C B 0x328CB34
	0x0328CB30 MOV X20, X0
	0x0328CB34 LDRB W8, [X31 + 0xC]
	0x0328CB38 CBZ W8, 0x328CB48
	0x0328CB3C MOV X0, X19
	0x0328CB40 MOV X1, X31
	0x0328CB44 BL 0x33E14E4
	0x0328CB48 CBNZ X21, 0x328CB54
	0x0328CB4C MOV X0, X20
	0x0328CB50 BL 0x1D2C690
	0x0328CB54 MOV X0, X21
	0x0328CB58 BL 0x1C16F18
	0x0328CB5C BL 0x1990590
	0x0328CB60 STR X30, [X31 - 0x30]!
	0x0328CB64 STP X22, X21, [X31 + 0x10]
	0x0328CB68 STP X20, X19, [X31 + 0x20]
	0x0328CB6C ADRP X19, 0x1150000
	0x0328CB70 LDRB W8, [X19 + 0x6A1]
	0x0328CB74 MOV X20, X0
	0x0328CB78 TBNZ X8, 0x0, 0x328CBB4
	0x0328CB7C ADRP X0, 0xE98000
	0x0328CB80 LDR X0, [X0 + 0x648]
	0x0328CB84 BL 0x1C16CF4
	0x0328CB88 ADRP X0, 0xE67000
	0x0328CB8C LDR X0, [X0 + 0x9D0]
	0x0328CB90 BL 0x1C16CF4
	0x0328CB94 ADRP X0, 0xE90000
	0x0328CB98 LDR X0, [X0 + 0x1B0]
	0x0328CB9C BL 0x1C16CF4
	0x0328CBA0 ADRP X0, 0xE67000
	0x0328CBA4 LDR X0, [X0 + 0x6C0]
	0x0328CBA8 BL 0x1C16CF4
	0x0328CBAC MOVZ W8, 0x1
	0x0328CBB0 STRB W8, [X19 + 0x6A1]
	0x0328CBB4 CBZ X20, 0x328CC98
	0x0328CBB8 ADRP X8, 0xE67000
	0x0328CBBC LDR X8, [X8 + 0x6C0]
	0x0328CBC0 ADRP X22, 0xE90000
	0x0328CBC4 ADRP X21, 0xE98000
	0x0328CBC8 LDR X19, [X20 + 0x18]
	0x0328CBCC LDR X0, [X8]
	0x0328CBD0 LDR W8, [X0 + 0xE0]
	0x0328CBD4 LDR X22, [X22 + 0x1B0]
	0x0328CBD8 LDR X21, [X21 + 0x648]
	0x0328CBDC CBNZ W8, 0x328CBE4
	0x0328CBE0 BL 0x1C16DFC
	0x0328CBE4 LDR X1, [X22]
	0x0328CBE8 LDR X2, [X21]
	0x0328CBEC MOV X0, X19
	0x0328CBF0 BL 0x1C1703C
	0x0328CBF4 MOV X1, X31
	0x0328CBF8 MOV X2, X31
	0x0328CBFC MOV X19, X0
	0x0328CC00 BL 0x3395194
	0x0328CC04 TBNZ X0, 0x0, 0x328CCAC
	0x0328CC08 ADRP X8, 0xE67000
	0x0328CC0C LDR X8, [X8 + 0x9D0]
	0x0328CC10 MOVZ W1, 0x2
	0x0328CC14 LDR X0, [X8]
	0x0328CC18 BL 0x1C16D6C
	0x0328CC1C CBZ X0, 0x328CC98
	0x0328CC20 LDR X22, [X20 + 0x28]
	0x0328CC24 MOV X21, X0
	0x0328CC28 CBZ X22, 0x328CC40
	0x0328CC2C LDR X8, [X21]
	0x0328CC30 MOV X0, X22
	0x0328CC34 LDR X1, [X8 + 0x40]
	0x0328CC38 BL 0x1C16E00
	0x0328CC3C CBZ X0, 0x328CCA0
	0x0328CC40 LDR W8, [X21 + 0x18]
	0x0328CC44 CBZ W8, 0x328CC9C
	0x0328CC48 STR X22, [X21 + 0x20]
	0x0328CC4C LDR X20, [X20 + 0x30]
	0x0328CC50 CBZ X20, 0x328CC6C
	0x0328CC54 LDR X8, [X21]
	0x0328CC58 MOV X0, X20
	0x0328CC5C LDR X1, [X8 + 0x40]
	0x0328CC60 BL 0x1C16E00
	0x0328CC64 CBZ X0, 0x328CCA0
	0x0328CC68 LDR W8, [X21 + 0x18]
	0x0328CC6C CMP W8, 0x1
	0x0328CC70 B.LS 0x328CC9C
	0x0328CC74 STR X20, [X21 + 0x28]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0x1151000
	009 Move X22, 0xE98000
	010 Move W8, [X19+1689]
	011 Move X22, [X22+3688]
	012 Move X21, X2
	013 Move X20, X1
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0xE99000
	019 Move X0, [X0+1536]
	020 Call 0x1C17CF4
	021 Move X0, 0xE98000
	022 Move X0, [X0+3768]
	023 Call 0x1C17CF4
	024 Move X0, 0xE98000
	025 Move X0, [X0+3688]
	026 Call 0x1C17CF4
	027 Move X0, 0xE99000
	028 Move X0, [X0+664]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X19+1689], W8
	032 Move X0, [X22]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X20
	038 Call RemotingServices.GetMessageTargetIdentity, X0
	039 Compare X0, 0
	040 JumpIfEqual {154}
	041 Move X9, 0xE99000
	042 Move X9, [X9+664]
	043 Move X8, [X0]
	044 Move X22, X0
	045 Move X1, [X9]
	046 Move W10, [X8+304]
	047 Move W9, [X1+304]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X8, [X8+200]
	050 Add X8, X8, X9
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X24, 0xE98000
	054 Move X24, [X24+3768]
	055 Move X0, X31
	056 Call Thread.get_CurrentContext
	057 Move X19, [X22+96]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X0, [X24]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X0, X19
	065 Move X1, X31
	066 Call AppDomain.InternalSetContext, X0
	067 Move X19, X0
	068 Move X19, X31
	069 Move X0, [X24]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Move W0, 1
	075 Move W3, 1
	076 Move X1, X20
	077 Move W2, W31
	078 Call Context.NotifyGlobalDynamicSinks, X0, X1, X2, X3
	079 Move X0, X31
	080 Call Thread.get_CurrentContext
	081 Compare X0, 0
	082 JumpIfEqual {158}
	083 Move W1, 1
	084 Move X2, X20
	085 Move W3, W31
	086 Move W4, W31
	087 Call Context.NotifyDynamicSinks, X0, X1, X2, X3, X4
	088 Compare X21, 0
	089 JumpIfEqual {100}
	090 Move X8, 0xE99000
	091 Move X8, [X8+1536]
	092 Move X0, [X8]
	093 Call 0x1C17F10
	094 Move X23, X0
	095 Move X1, X31
	096 Call Object..ctor, X0
	097 Move [X23+16], X21
	098 Move [X23+24], X19
	099 Move [X23+32], X20
	100 Move X23, X31
	101 Move X8, [X22]
	102 Move X9, [X8+424]
	103 Move X3, [X8+432]
	104 Move X0, X22
	105 Move X1, X20
	106 Move X2, X23
	107 NotImplemented "Instruction BLR not yet implemented."
	108 Move X21, X0
	109 Compare X23, 0
	110 JumpIfNotEqual {130}
	111 Move X0, [X24]
	112 Move W8, [X0+224]
	113 Compare W8, 0
	114 JumpIfNotEqual {116}
	115 Call 0x1C17DFC
	116 Move W0, W31
	117 Move X1, X20
	118 Move W2, W31
	119 Move W3, W31
	120 Call Context.NotifyGlobalDynamicSinks, X0, X1, X2, X3
	121 Move X0, X31
	122 Call Thread.get_CurrentContext
	123 Compare X0, 0
	124 JumpIfEqual {159}
	125 Move W1, W31
	126 Move X2, X20
	127 Move W3, W31
	128 Move W4, W31
	129 Call Context.NotifyDynamicSinks, X0, X1, X2, X3, X4
	130 Move X20, X31
	131 Compare X19, 0
	132 JumpIfEqual {141}
	133 Move X0, [X24]
	134 Move W8, [X0+224]
	135 Compare W8, 0
	136 JumpIfNotEqual {138}
	137 Call 0x1C17DFC
	138 Move X0, X19
	139 Move X1, X31
	140 Call AppDomain.InternalSetContext, X0
	141 Compare X20, 0
	142 JumpIfNotEqual {156}
	143 Move X0, X21
	144 Move X20, [X31+48]
	145 Move X19, [X31+56]
	146 Move X22, [X31+32]
	147 Move X21, [X31+40]
	148 Move X24, [X31+16]
	149 Move X23, [X31+24]
	150 Move X30, [X31+64]
	151 Return X0
	152 Move X0, X22
	153 Call 0x1C181E0
	154 Call Thread.get_CurrentContext
	155 Call 0x1C17F20
	156 Move X0, X20
	157 Call 0x1C17F18
	158 Call 0x1C17F20
	159 Call 0x1C17F20
	160 Move X22, X0
	161 Move X21, X31
	162 Move X22, X0
	163 Move X21, X23
	164 Move X22, X0
	165 Move X22, X0
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Move X0, X22
	168 Call 0x3EB2AD0
	169 Move X22, X0
	170 Move X0, 0xE68000
	171 Move X0, [X0+2000]
	172 Call 0x1C17D08
	173 Move X8, [X22]
	174 Move X1, [X8]
	175 Call 0x1C18270
	176 Move TEMP, X0
	177 And TEMP, TEMP, 1
	178 Compare TEMP, 1
	179 JumpIfNotEqual {236}
	180 Move X23, [X22]
	181 Call 0x3EB2AE0
	182 Compare X21, 0
	183 JumpIfEqual {204}
	184 Move X0, 0xE99000
	185 Move X0, [X0+640]
	186 Call 0x1C17D08
	187 Call 0x1C17F10
	188 Move X22, X0
	189 Move X0, 0xE99000
	190 Move X0, [X0+1112]
	191 Call 0x1C17D08
	192 Compare X20, 0
	193 JumpIfEqual {205}
	194 Move X24, X0
	195 Move X0, X20
	196 Move X1, X24
	197 Call 0x1C17E00
	198 Move X2, X0
	199 Compare X0, 0
	200 JumpIfNotEqual {206}
	201 Move X0, X20
	202 Move X1, X24
	203 Call 0x1C181E0
	204 Move X20, X31
	205 Move X2, X31
	206 Move X0, X22
	207 Move X1, X23
	208 Move X3, X31
	209 Call ReturnMessage..ctor, X0, X1, X2
	210 Move X0, 0xE99000
	211 Move X0, [X0+952]
	212 Call 0x1C17D08
	213 Move X1, X0
	214 Move X8, [X21]
	215 NotImplemented "Instruction LDRH not yet implemented."
	216 Compare X9, 0
	217 JumpIfEqual {224}
	218 Move X10, [X8+176]
	219 Add X10, X10, 8
	220 NotImplemented "Instruction LDUR not yet implemented."
	221 NotImplemented "Instruction CMP not yet implemented."
	222 Subtract X9, X9, 1
	223 Add X10, X10, 16
	224 Move X0, X21
	225 Move W2, W31
	226 Call 0x1C5D788
	227 NotImplemented "Instruction LDRSW not yet implemented."
	228 Add X8, X8, X9
	229 Add X0, X8, 312
	230 Move X8, [X0]
	231 Move X2, [X0+8]
	232 Move X0, X21
	233 Move X1, X22
	234 NotImplemented "Instruction BLR not yet implemented."
	235 Move X20, X31
	236 Move W0, 8
	237 Call 0x3EB2AF0
	238 Move X8, [X22]
	239 Move [X0], X8
	240 Move X1, 0xC29000
	241 Add X1, X1, 3672
	242 Move X2, X31
	243 Call 0x3EB2B00
	244 Move X20, X1
	245 Move X22, X0
	246 Call 0x3EB2AE0
	247 Move W1, W20
	248 Move X22, X0
	249 Move W8, 1
	250 NotImplemented "Instruction CMP not yet implemented."
	251 Move X0, X22
	252 Call 0x3EB2AD0
	253 Move X20, [X0]
	254 Call 0x3EB2AE0
	255 Move X21, X31
	256 Move X24, 0xE98000
	257 Move X24, [X24+3768]
	258 Compare X19, 0
	259 JumpIfNotEqual {133}
	260 Move X20, X31
	261 Move X22, X0
	262 Compare X19, 0
	263 JumpIfEqual {274}
	264 Move X8, 0xE98000
	265 Move X8, [X8+3768]
	266 Move X0, [X8]
	267 Move W8, [X0+224]
	268 Compare W8, 0
	269 JumpIfNotEqual {271}
	270 Call 0x1C17DFC
	271 Move X0, X19
	272 Move X1, X31
	273 Call AppDomain.InternalSetContext, X0
	274 Compare X20, 0
	275 JumpIfNotEqual {278}
	276 Move X0, X22
	277 Call 0x1D2D690
	278 Move X0, X20
	279 Call 0x1C17F18
	280 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x0328CCB4 ADRP X0, 0xE8F000
	0x0328CCB8 LDR X19, [X20 + 0x18]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

