Type: System.Runtime.Remoting.Contexts.Context

Method: System.Void RegisterContext(System.Runtime.Remoting.Contexts.Context ctx)

Disassembly:
	0x0328A22C BL 0x301CB58

ISIL:
	001 Call 0x1C60FD4
	002 Return 

Method: System.Void ReleaseContext(System.Runtime.Remoting.Contexts.Context ctx)

Disassembly:
	0x0328A230 LDR X1, [X22]

ISIL:
	001 Call 0x1C60FEC
	002 Return 

Method: System.Void .ctor()

Disassembly:
	0x0328A234 ADD X0, X31, 0x8
	0x0328A238 BL 0x2BC4350
	0x0328A23C TBZ X0, 0x0, 0x328A2AC
	0x0328A240 LDR X20, [X31 + 0x18]
	0x0328A244 CBZ X20, 0x328A2CC
	0x0328A248 LDR X8, [X20]
	0x0328A24C LDR X1, [X23]
	0x0328A250 LDRH W9, [X8 + 0x12E]
	0x0328A254 CBZ X9, 0x328A278
	0x0328A258 LDR X10, [X8 + 0xB0]
	0x0328A25C ADD X10, X10, 0x8
	0x0328A260 LDUR X11, [X10 - 0x8]
	0x0328A264 CMP X11, X1
	0x0328A268 B.EQ 0x328A288
	0x0328A26C SUBS X9, X9, 0x1
	0x0328A270 ADD X10, X10, 0x10
	0x0328A274 B.NE 0x328A260
	0x0328A278 MOVZ W2, 0x1
	0x0328A27C MOV X0, X20
	0x0328A280 BL 0x1C5C788
	0x0328A284 B 0x328A298
	0x0328A288 LDR W9, [X10]
	0x0328A28C ADD W9, W9, 0x1
	0x0328A290 ADD X8, X8, W9, 0x4, SXTW
	0x0328A294 ADD X0, X8, 0x138
	0x0328A298 LDP X8, X2, [X0]
	0x0328A29C MOV X0, X20
	0x0328A2A0 MOV X1, X19
	0x0328A2A4 BLR X8
	0x0328A2A8 B 0x328A230
	0x0328A2AC LDR X1, [X21]
	0x0328A2B0 ADD X0, X31, 0x8
	0x0328A2B4 BL 0x2BC434C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1153000
	006 Move X20, 0xE9A000
	007 Move W8, [X21+1658]
	008 Move X20, [X20+3768]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE9A000
	015 Move X0, [X0+3768]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1658], W8
	019 Move X0, X19
	020 Move X1, X31
	021 Call Object..ctor, X0
	022 Move X0, X31
	023 Call Thread.GetDomainID
	024 Move [X19+16], W0
	025 Move X0, [X20]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1C17DFC
	030 Move X0, [X20]
	031 Move X8, [X0+184]
	032 Move X1, X31
	033 Add X0, X8, 16
	034 Call Interlocked.Increment, X0
	035 Move [X19+20], W0
	036 Move X0, X19
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Call 0x1C60FD4
	042 Return 

Method: System.Void Finalize()

Disassembly:
	0x0328A2B8 LDP X20, X19, [X31 + 0x40]
	0x0328A2BC LDP X22, X21, [X31 + 0x30]
	0x0328A2C0 LDP X30, X23, [X31 + 0x20]
	0x0328A2C4 ADD X31, X31, 0x50
	0x0328A2C8 RET
	0x0328A2CC BL 0x1C16F20
	0x0328A2D0 B 0x328A2D8
	0x0328A2D4 B 0x328A2D8
	0x0328A2D8 MOV X19, X0
	0x0328A2DC CMP W1, 0x1
	0x0328A2E0 B.NE 0x328A30C
	0x0328A2E4 MOV X0, X19
	0x0328A2E8 BL 0x3EB1AD0
	0x0328A2EC LDR X20, [X0]
	0x0328A2F0 BL 0x3EB1AE0
	0x0328A2F4 LDR X1, [X21]
	0x0328A2F8 ADD X0, X31, 0x8
	0x0328A2FC BL 0x2BC434C
	0x0328A300 CBZ X20, 0x328A2B8
	0x0328A304 MOV X0, X20
	0x0328A308 BL 0x1C16F18
	0x0328A30C MOV X20, X31
	0x0328A310 B 0x328A318
	0x0328A314 MOV X19, X0
	0x0328A318 LDR X1, [X21]
	0x0328A31C ADD X0, X31, 0x8
	0x0328A320 BL 0x2BC434C
	0x0328A324 CBNZ X20, 0x328A330
	0x0328A328 MOV X0, X19
	0x0328A32C BL 0x1D2C690
	0x0328A330 MOV X0, X20
	0x0328A334 BL 0x1C16F18
	0x0328A338 BL 0x1990590
	0x0328A33C STP X30, X21, [X31 - 0x20]!
	0x0328A340 STP X20, X19, [X31 + 0x10]
	0x0328A344 ADRP X21, 0x1152000
	0x0328A348 ADRP X20, 0xE9A000
	0x0328A34C LDRB W8, [X21 + 0x687]
	0x0328A350 LDR X20, [X20 + 0x5C0]
	0x0328A354 MOV X19, X0
	0x0328A358 TBNZ X8, 0x0, 0x328A370
	0x0328A35C ADRP X0, 0xE9A000
	0x0328A360 LDR X0, [X0 + 0x5C0]
	0x0328A364 BL 0x1C16CF4
	0x0328A368 MOVZ W8, 0x1
	0x0328A36C STRB W8, [X21 + 0x687]
	0x0328A370 ADD X0, X19, 0x14
	0x0328A374 MOV X1, X31
	0x0328A378 BL 0x337B6E0
	0x0328A37C LDR X8, [X20]
	0x0328A380 LDP X20, X19, [X31 + 0x10]
	0x0328A384 MOV X1, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1153000
	006 Move X21, 0xE9A000
	007 Move W8, [X20+1659]
	008 Move X21, [X21+3768]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE9A000
	015 Move X0, [X0+3768]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1659], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call 0x1C60FEC
	026 Move X0, X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X1, X31
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Call Object.Finalize, X0
	033 Return 
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X21, X0
	036 Move X0, X21
	037 Call 0x3EB2AD0
	038 Move X20, [X0]
	039 Call 0x3EB2AE0
	040 Move X0, X19
	041 Move X1, X31
	042 Call Object.Finalize, X0
	043 Compare X20, 0
	044 JumpIfNotEqual {51}
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Return 
	050 Move X20, X31
	051 Move X0, X20
	052 Call 0x1C17F18
	053 Move X21, X0
	054 Move X0, X19
	055 Move X1, X31
	056 Call Object.Finalize, X0
	057 Compare X20, 0
	058 JumpIfNotEqual {61}
	059 Move X0, X21
	060 Call 0x1D2D690
	061 Move X0, X20
	062 Call 0x1C17F18
	063 Call 0x1991590

Method: System.Runtime.Remoting.Contexts.Context get_DefaultContext()

Disassembly:
	0x03282D3C LDP X30, X21, [X31], #0x20
	0x03282D40 B 0x3283114

ISIL:
	001 Move X0, X31
	002 Call AppDomain.InternalGetDefaultContext
	003 Return X0

Method: System.Int32 get_ContextID()

Disassembly:
	0x0328A388 MOV X2, X31
	0x0328A38C MOV X0, X8

ISIL:
	001 Move W0, [X0+20]
	002 Return X0

Method: System.Runtime.Remoting.Contexts.IContextProperty[] get_ContextProperties()

Disassembly:
	0x0328A390 LDP X30, X21, [X31], #0x20
	0x0328A394 B 0x321B938
	0x0328A398 STR X30, [X31 - 0x40]!
	0x0328A39C STP X24, X23, [X31 + 0x10]
	0x0328A3A0 STP X22, X21, [X31 + 0x20]
	0x0328A3A4 STP X20, X19, [X31 + 0x30]
	0x0328A3A8 ADRP X20, 0x1152000
	0x0328A3AC LDRB W8, [X20 + 0x688]
	0x0328A3B0 MOV X19, X0
	0x0328A3B4 TBNZ X8, 0x0, 0x328A3FC
	0x0328A3B8 ADRP X0, 0xE99000
	0x0328A3BC LDR X0, [X0 + 0xEB8]
	0x0328A3C0 BL 0x1C16CF4
	0x0328A3C4 ADRP X0, 0xE9A000
	0x0328A3C8 LDR X0, [X0 + 0x5C8]
	0x0328A3CC BL 0x1C16CF4
	0x0328A3D0 ADRP X0, 0xE9A000
	0x0328A3D4 LDR X0, [X0 + 0x3E0]
	0x0328A3D8 BL 0x1C16CF4
	0x0328A3DC ADRP X0, 0xE9A000
	0x0328A3E0 LDR X0, [X0 + 0x3E8]
	0x0328A3E4 BL 0x1C16CF4
	0x0328A3E8 ADRP X0, 0xE9A000
	0x0328A3EC LDR X0, [X0 + 0x5D0]
	0x0328A3F0 BL 0x1C16CF4
	0x0328A3F4 MOVZ W8, 0x1
	0x0328A3F8 STRB W8, [X20 + 0x688]
	0x0328A3FC LDR X8, [X19 + 0x28]
	0x0328A400 CBZ X8, 0x328A41C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1153000
	005 Move W8, [X20+1660]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xE9B000
	012 Move X0, [X0+1328]
	013 Call 0x1C17CF4
	014 Move X0, 0xE9B000
	015 Move X0, [X0+1336]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1660], W8
	019 Move X0, [X19+56]
	020 Compare X0, 0
	021 JumpIfEqual {30}
	022 Move X8, 0xE9B000
	023 Move X8, [X8+1336]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X1, [X8]
	027 Move X30, [X31+32]
	028 Call List`1<Object>.ToArray, X0
	029 Return X0
	030 Move X8, 0xE9B000
	031 Move X8, [X8+1328]
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move W1, W31
	035 Move X0, [X8]
	036 Move X30, [X31+32]
	037 Call 0x1C17D6C
	038 Return X0

Method: System.Boolean get_IsDefaultContext()

Disassembly:
	0x0328A404 LDP X20, X19, [X31 + 0x30]
	0x0328A408 LDP X22, X21, [X31 + 0x20]
	0x0328A40C LDP X24, X23, [X31 + 0x10]
	0x0328A410 MOV X0, X8

ISIL:
	001 Move W8, [X0+20]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean get_NeedsContextSink()

Disassembly:
	0x0328A414 LDR X30, [X31], #0x40
	0x0328A418 RET
	0x0328A41C ADRP X21, 0xE99000
	0x0328A420 LDR X21, [X21 + 0xEB8]
	0x0328A424 LDR X0, [X21]
	0x0328A428 LDR W8, [X0 + 0xE0]
	0x0328A42C CBNZ W8, 0x328A438
	0x0328A430 BL 0x1C16DFC
	0x0328A434 LDR X0, [X21]
	0x0328A438 LDR X8, [X0 + 0xB8]
	0x0328A43C LDR X8, [X8 + 0x8]
	0x0328A440 CBNZ X8, 0x328A47C
	0x0328A444 ADRP X8, 0xE9A000
	0x0328A448 LDR X8, [X8 + 0x5D0]
	0x0328A44C LDR X0, [X8]
	0x0328A450 BL 0x1C16F10
	0x0328A454 MOV X1, X31
	0x0328A458 MOV X20, X0
	0x0328A45C BL 0x329E274
	0x0328A460 LDR X0, [X21]
	0x0328A464 LDR W8, [X0 + 0xE0]
	0x0328A468 CBNZ W8, 0x328A474
	0x0328A46C BL 0x1C16DFC
	0x0328A470 LDR X0, [X21]
	0x0328A474 LDR X8, [X0 + 0xB8]
	0x0328A478 STR X20, [X8 + 0x8]
	0x0328A47C LDR W8, [X0 + 0xE0]
	0x0328A480 CBNZ W8, 0x328A48C
	0x0328A484 BL 0x1C16DFC
	0x0328A488 LDR X0, [X21]
	0x0328A48C LDR X8, [X0 + 0xB8]
	0x0328A490 LDR X0, [X19 + 0x38]
	0x0328A494 LDR X8, [X8 + 0x8]
	0x0328A498 STR X8, [X19 + 0x28]
	0x0328A49C CBZ X0, 0x328A404
	0x0328A4A0 LDR W9, [X0 + 0x18]
	0x0328A4A4 SUBS W20, W9, 0x1
	0x0328A4A8 B.MI 0x328A404
	0x0328A4AC ADRP X23, 0xE9A000
	0x0328A4B0 ADRP X24, 0xE9A000
	0x0328A4B4 LDR X23, [X23 + 0x3E8]
	0x0328A4B8 LDR X24, [X24 + 0x5C8]
	0x0328A4BC LDR X2, [X23]
	0x0328A4C0 MOV W1, W20
	0x0328A4C4 BL 0x301BCCC
	0x0328A4C8 LDR X1, [X24]
	0x0328A4CC BL 0x1C16E00
	0x0328A4D0 CBZ X0, 0x328A53C
	0x0328A4D4 LDR X8, [X0]
	0x0328A4D8 LDR X22, [X19 + 0x28]
	0x0328A4DC LDR X1, [X24]
	0x0328A4E0 MOV X21, X0
	0x0328A4E4 LDRH W9, [X8 + 0x12E]
	0x0328A4E8 CBZ X9, 0x328A50C
	0x0328A4EC LDR X10, [X8 + 0xB0]
	0x0328A4F0 ADD X10, X10, 0x8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1153000
	005 Move W8, [X20+1661]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE9A000
	012 Move X0, [X0+3768]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1661], W8
	016 Move W8, [X19+20]
	017 Compare W8, 0
	018 JumpIfEqual {24}
	019 Move W0, 1
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X30, [X31+32]
	023 Return X0
	024 Move X20, 0xE9A000
	025 Move X20, [X20+3768]
	026 Move X0, [X20]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1C17DFC
	031 Move X0, [X20]
	032 Move X8, [X0+184]
	033 Move X8, [X8+32]
	034 Compare X8, 0
	035 JumpIfEqual {53}
	036 Move W9, [X0+224]
	037 Compare W9, 0
	038 JumpIfNotEqual {45}
	039 Call 0x1C17DFC
	040 Move X8, [X20]
	041 Move X8, [X8+184]
	042 Move X8, [X8+32]
	043 Compare X8, 0
	044 JumpIfEqual {66}
	045 Move X0, [X8+16]
	046 Compare X0, 0
	047 JumpIfEqual {66}
	048 Move X8, [X0]
	049 Move X9, [X8+664]
	050 Move X1, [X8+672]
	051 NotImplemented "Instruction BLR not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X8, [X19+72]
	054 Compare X8, 0
	055 JumpIfEqual {65}
	056 Move X0, [X8+16]
	057 Compare X0, 0
	058 JumpIfEqual {66}
	059 Move X8, [X0]
	060 Move X9, [X8+664]
	061 Move X1, [X8+672]
	062 NotImplemented "Instruction BLR not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 NotImplemented "Instruction CSET not yet implemented."
	065 Move W0, W31
	066 Call 0x1C17F20

Method: System.Boolean RegisterDynamicProperty(System.Runtime.Remoting.Contexts.IDynamicProperty prop, System.ContextBoundObject obj, System.Runtime.Remoting.Contexts.Context ctx)

Disassembly:
	0x0328A4F4 LDUR X11, [X10 - 0x8]
	0x0328A4F8 CMP X11, X1
	0x0328A4FC B.EQ 0x328A51C
	0x0328A500 SUBS X9, X9, 0x1
	0x0328A504 ADD X10, X10, 0x10
	0x0328A508 B.NE 0x328A4F4
	0x0328A50C MOV X0, X21
	0x0328A510 MOV W2, W31
	0x0328A514 BL 0x1C5C788
	0x0328A518 B 0x328A528
	0x0328A51C LDRSW X9, [X10]
	0x0328A520 ADD X8, X8, X9, 0x4, LSL
	0x0328A524 ADD X0, X8, 0x138
	0x0328A528 LDP X8, X2, [X0]
	0x0328A52C MOV X0, X21
	0x0328A530 MOV X1, X22
	0x0328A534 BLR X8
	0x0328A538 STR X0, [X19 + 0x28]
	0x0328A53C SUBS W20, W20, 0x1
	0x0328A540 B.MI 0x328A550
	0x0328A544 LDR X0, [X19 + 0x38]
	0x0328A548 CBNZ X0, 0x328A4BC
	0x0328A54C BL 0x1C16F20
	0x0328A550 LDR X8, [X19 + 0x28]
	0x0328A554 B 0x328A404
	0x0328A558 MOV X1, X31
	0x0328A55C B 0x33C0284
	0x0328A560 STP X29, X30, [X31 - 0x60]!
	0x0328A564 STP X28, X27, [X31 + 0x10]
	0x0328A568 STP X26, X25, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1153000
	008 Move X23, 0xE9A000
	009 Move W8, [X22+1662]
	010 Move X23, [X23+3768]
	011 Move X20, X2
	012 Move X21, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xE9A000
	019 Move X0, [X0+3768]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+1662], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X21
	029 Move X1, X20
	030 Call Context.GetDynamicPropertyCollection, X0, X1
	031 Compare X0, 0
	032 JumpIfEqual {42}
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Move X23, [X31+56]
	040 Call DynamicPropertyCollection.RegisterDynamicProperty, X0, X1
	041 Return X0
	042 Call 0x1C17F20

Method: System.Boolean UnregisterDynamicProperty(System.String name, System.ContextBoundObject obj, System.Runtime.Remoting.Contexts.Context ctx)

Disassembly:
	0x0328A9AC CBZ X9, 0x328A9D0
	0x0328A9B0 LDR X10, [X8 + 0xB0]
	0x0328A9B4 ADD X10, X10, 0x8
	0x0328A9B8 LDUR X11, [X10 - 0x8]
	0x0328A9BC CMP X11, X1
	0x0328A9C0 B.EQ 0x328A9E0
	0x0328A9C4 SUBS X9, X9, 0x1
	0x0328A9C8 ADD X10, X10, 0x10
	0x0328A9CC B.NE 0x328A9B8
	0x0328A9D0 MOV X0, X20
	0x0328A9D4 MOV W2, W31
	0x0328A9D8 BL 0x1C5C788
	0x0328A9DC B 0x328A9EC
	0x0328A9E0 LDRSW X9, [X10]
	0x0328A9E4 ADD X8, X8, X9, 0x4, LSL
	0x0328A9E8 ADD X0, X8, 0x138
	0x0328A9EC LDP X8, X1, [X0]
	0x0328A9F0 MOV X0, X20
	0x0328A9F4 BLR X8
	0x0328A9F8 TBZ X0, 0x0, 0x328AB38
	0x0328A9FC LDR X8, [X20]
	0x0328AA00 LDR X1, [X24]
	0x0328AA04 LDRH W9, [X8 + 0x12E]
	0x0328AA08 CBZ X9, 0x328AA2C
	0x0328AA0C LDR X10, [X8 + 0xB0]
	0x0328AA10 ADD X10, X10, 0x8
	0x0328AA14 LDUR X11, [X10 - 0x8]
	0x0328AA18 CMP X11, X1
	0x0328AA1C B.EQ 0x328AA3C
	0x0328AA20 SUBS X9, X9, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1153000
	008 Move X23, 0xE9A000
	009 Move W8, [X22+1663]
	010 Move X23, [X23+3768]
	011 Move X20, X2
	012 Move X21, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xE9A000
	019 Move X0, [X0+3768]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+1663], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X21
	029 Move X1, X20
	030 Call Context.GetDynamicPropertyCollection, X0, X1
	031 Compare X0, 0
	032 JumpIfEqual {40}
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Move X23, [X31+56]
	040 Call 0x1C17F20

Method: System.Runtime.Remoting.Contexts.DynamicPropertyCollection GetDynamicPropertyCollection(System.ContextBoundObject obj, System.Runtime.Remoting.Contexts.Context ctx)

Disassembly:
	0x0328A56C STP X24, X23, [X31 + 0x30]
	0x0328A570 STP X22, X21, [X31 + 0x40]
	0x0328A574 STP X20, X19, [X31 + 0x50]
	0x0328A578 ADRP X19, 0x1152000
	0x0328A57C ADRP X21, 0xE99000
	0x0328A580 LDRB W8, [X19 + 0x68C]
	0x0328A584 LDR X21, [X21 + 0xEB8]
	0x0328A588 MOV X20, X0
	0x0328A58C TBNZ X8, 0x0, 0x328A5E0
	0x0328A590 ADRP X0, 0xE99000
	0x0328A594 LDR X0, [X0 + 0xEB8]
	0x0328A598 BL 0x1C16CF4
	0x0328A59C ADRP X0, 0xE9A000
	0x0328A5A0 LDR X0, [X0 + 0x5D8]
	0x0328A5A4 BL 0x1C16CF4
	0x0328A5A8 ADRP X0, 0xE9A000
	0x0328A5AC LDR X0, [X0 + 0x588]
	0x0328A5B0 BL 0x1C16CF4
	0x0328A5B4 ADRP X0, 0xE69000
	0x0328A5B8 LDR X0, [X0 + 0xE00]
	0x0328A5BC BL 0x1C16CF4
	0x0328A5C0 ADRP X0, 0xE71000
	0x0328A5C4 LDR X0, [X0 + 0xDB8]
	0x0328A5C8 BL 0x1C16CF4
	0x0328A5CC ADRP X0, 0xE69000
	0x0328A5D0 LDR X0, [X0 + 0xE18]
	0x0328A5D4 BL 0x1C16CF4
	0x0328A5D8 MOVZ W8, 0x1
	0x0328A5DC STRB W8, [X19 + 0x68C]
	0x0328A5E0 LDR X0, [X21]
	0x0328A5E4 BL 0x1C16F10
	0x0328A5E8 MOV X19, X0
	0x0328A5EC BL 0x3289234
	0x0328A5F0 CBZ X20, 0x328ABFC
	0x0328A5F4 ADRP X26, 0xE9A000
	0x0328A5F8 LDR X8, [X20]
	0x0328A5FC LDR X26, [X26 + 0x5D8]
	0x0328A600 LDRH W9, [X8 + 0x12E]
	0x0328A604 LDR X1, [X26]
	0x0328A608 CBZ X9, 0x328A62C
	0x0328A60C LDR X10, [X8 + 0xB0]
	0x0328A610 ADD X10, X10, 0x8
	0x0328A614 LDUR X11, [X10 - 0x8]
	0x0328A618 CMP X11, X1
	0x0328A61C B.EQ 0x328A63C
	0x0328A620 SUBS X9, X9, 0x1
	0x0328A624 ADD X10, X10, 0x10
	0x0328A628 B.NE 0x328A614
	0x0328A62C MOVZ W2, 0x5
	0x0328A630 MOV X0, X20
	0x0328A634 BL 0x1C5C788
	0x0328A638 B 0x328A64C
	0x0328A63C LDR W9, [X10]
	0x0328A640 ADD W9, W9, 0x5
	0x0328A644 ADD X8, X8, W9, 0x4, SXTW
	0x0328A648 ADD X0, X8, 0x138
	0x0328A64C LDP X8, X1, [X0]
	0x0328A650 MOV X0, X20
	0x0328A654 BLR X8
	0x0328A658 CBZ X0, 0x328ABFC
	0x0328A65C ADRP X27, 0xE71000
	0x0328A660 LDR X8, [X0]
	0x0328A664 LDR X27, [X27 + 0xDB8]
	0x0328A668 MOV X21, X0
	0x0328A66C LDRH W9, [X8 + 0x12E]
	0x0328A670 LDR X1, [X27]
	0x0328A674 CBZ X9, 0x328A698
	0x0328A678 LDR X10, [X8 + 0xB0]
	0x0328A67C ADD X10, X10, 0x8
	0x0328A680 LDUR X11, [X10 - 0x8]
	0x0328A684 CMP X11, X1
	0x0328A688 B.EQ 0x328A6A8
	0x0328A68C SUBS X9, X9, 0x1
	0x0328A690 ADD X10, X10, 0x10
	0x0328A694 B.NE 0x328A680
	0x0328A698 MOV X0, X21
	0x0328A69C MOV W2, W31
	0x0328A6A0 BL 0x1C5C788
	0x0328A6A4 B 0x328A6B4
	0x0328A6A8 LDRSW X9, [X10]
	0x0328A6AC ADD X8, X8, X9, 0x4, LSL
	0x0328A6B0 ADD X0, X8, 0x138
	0x0328A6B4 LDP X8, X1, [X0]
	0x0328A6B8 ADRP X25, 0xE69000
	0x0328A6BC LDR X25, [X25 + 0xE00]
	0x0328A6C0 MOV X0, X21
	0x0328A6C4 BLR X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1153000
	006 Move W8, [X21+1664]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0xE9A000
	014 Move X0, [X0+3768]
	015 Call 0x1C17CF4
	016 Move X0, 0xE9A000
	017 Move X0, [X0+3384]
	018 Call 0x1C17CF4
	019 Move X0, 0xE9A000
	020 Move X0, [X0+3688]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+1664], W8
	024 Compare X19, 0
	025 JumpIfEqual {38}
	026 Compare X20, 0
	027 JumpIfNotEqual {79}
	028 Move X20, [X19+72]
	029 Compare X20, 0
	030 JumpIfNotEqual {73}
	031 Move X8, 0xE9A000
	032 Move X8, [X8+3384]
	033 Move X0, [X8]
	034 Call 0x1C17F10
	035 Move X20, X0
	036 Call DynamicPropertyCollection..ctor, X0
	037 Move [X19+72], X20
	038 Compare X20, 0
	039 JumpIfNotEqual {97}
	040 Move X20, 0xE9A000
	041 Move X20, [X20+3768]
	042 Move X0, [X20]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {48}
	046 Call 0x1C17DFC
	047 Move X0, [X20]
	048 Move X8, [X0+184]
	049 Move X8, [X8+32]
	050 Compare X8, 0
	051 JumpIfNotEqual {66}
	052 Move X8, 0xE9A000
	053 Move X8, [X8+3384]
	054 Move X0, [X8]
	055 Call 0x1C17F10
	056 Move X19, X0
	057 Call DynamicPropertyCollection..ctor, X0
	058 Move X0, [X20]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {64}
	062 Call 0x1C17DFC
	063 Move X0, [X20]
	064 Move X8, [X0+184]
	065 Move [X8+32], X19
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {71}
	069 Call 0x1C17DFC
	070 Move X0, [X20]
	071 Move X8, [X0+184]
	072 Move X20, [X8+32]
	073 Move X0, X20
	074 Move X20, [X31+16]
	075 Move X19, [X31+24]
	076 Move X30, [X31+32]
	077 Move X21, [X31+40]
	078 Return X0
	079 Move X0, 0xE72000
	080 Move X0, [X0+1400]
	081 Call 0x1C17D08
	082 Call 0x1C17F10
	083 Move X19, X0
	084 Move X0, 0xE9B000
	085 Move X0, [X0+1344]
	086 Call 0x1C17D08
	087 Move X1, X0
	088 Move X0, X19
	089 Move X2, X31
	090 Call ArgumentException..ctor, X0, X1
	091 Move X0, 0xE9B000
	092 Move X0, [X0+1352]
	093 Call 0x1C17D08
	094 Move X1, X0
	095 Move X0, X19
	096 Call 0x1C17DEC
	097 Move X8, 0xE9A000
	098 Move X8, [X8+3688]
	099 Move X0, [X8]
	100 Call 0x19913D0
	101 Call RemotingServices.IsTransparentProxy, X0

Method: System.Void NotifyGlobalDynamicSinks(System.Boolean start, System.Runtime.Remoting.Messaging.IMessage req_msg, System.Boolean client_site, System.Boolean async)

Disassembly:
	0x0328AB90 LDRSW X9, [X10]
	0x0328AB94 ADD X8, X8, X9, 0x4, LSL
	0x0328AB98 ADD X0, X8, 0x138
	0x0328AB9C LDP X8, X1, [X0]
	0x0328ABA0 MOV X0, X20
	0x0328ABA4 BLR X8
	0x0328ABA8 CBNZ X21, 0x328AC10
	0x0328ABAC MOV X0, X19
	0x0328ABB0 LDP X20, X19, [X31 + 0x50]
	0x0328ABB4 LDP X22, X21, [X31 + 0x40]
	0x0328ABB8 LDP X24, X23, [X31 + 0x30]
	0x0328ABBC LDP X26, X25, [X31 + 0x20]
	0x0328ABC0 LDP X28, X27, [X31 + 0x10]
	0x0328ABC4 LDP X29, X30, [X31], #0x60
	0x0328ABC8 RET
	0x0328ABCC BL 0x1C16F20
	0x0328ABD0 BL 0x1C16F20
	0x0328ABD4 MOV X0, X23
	0x0328ABD8 MOV X1, X24
	0x0328ABDC BL 0x1C171E0
	0x0328ABE0 MOV X0, X23
	0x0328ABE4 MOV X1, X22
	0x0328ABE8 BL 0x1C171E0
	0x0328ABEC BL 0x1C16F20
	0x0328ABF0 MOV X0, X23
	0x0328ABF4 MOV X1, X21
	0x0328ABF8 BL 0x1C171E0
	0x0328ABFC BL 0x1C16F20
	0x0328AC00 BL 0x1C16F20
	0x0328AC04 MOV X0, X22
	0x0328AC08 BL 0x1C16F18
	0x0328AC0C BL 0x1C16F20
	0x0328AC10 MOV X0, X21
	0x0328AC14 BL 0x1C16F18
	0x0328AC18 B 0x328AC54
	0x0328AC1C B 0x328ACF4
	0x0328AC20 B 0x328ACF4
	0x0328AC24 B 0x328AC54
	0x0328AC28 B 0x328AC54
	0x0328AC2C B 0x328AC54
	0x0328AC30 B 0x328ACF4
	0x0328AC34 B 0x328ACF4
	0x0328AC38 B 0x328ACF4
	0x0328AC3C B 0x328ACF4
	0x0328AC40 B 0x328AC54
	0x0328AC44 B 0x328ACF4
	0x0328AC48 B 0x328AC54
	0x0328AC4C B 0x328ACF4
	0x0328AC50 B 0x328AC54
	0x0328AC54 CMP W1, 0x1
	0x0328AC58 B.NE 0x328AC6C
	0x0328AC5C BL 0x3EB1AD0
	0x0328AC60 LDR X21, [X0]
	0x0328AC64 BL 0x3EB1AE0
	0x0328AC68 B 0x328AB3C
	0x0328AC6C MOV X19, X0
	0x0328AC70 MOV X21, X31
	0x0328AC74 B 0x328AC7C
	0x0328AC78 MOV X19, X0
	0x0328AC7C LDR X1, [X25]
	0x0328AC80 MOV X0, X20
	0x0328AC84 BL 0x1C16E00
	0x0328AC88 MOV X20, X0
	0x0328AC8C CBZ X0, 0x328ACE8

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x1153000
	009 Move X23, 0xE9A000
	010 Move W8, [X24+1665]
	011 Move X23, [X23+3768]
	012 Move W20, W3
	013 Move W21, W2
	014 Move X19, X1
	015 Move W22, W0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xE9A000
	021 Move X0, [X0+3768]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+1665], W8
	025 Move X0, [X23]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1C17DFC
	030 Move X0, [X23]
	031 Move X8, [X0+184]
	032 Move X8, [X8+32]
	033 Compare X8, 0
	034 JumpIfEqual {75}
	035 Move W9, [X0+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {44}
	038 Call 0x1C17DFC
	039 Move X8, [X23]
	040 Move X8, [X8+184]
	041 Move X8, [X8+32]
	042 Compare X8, 0
	043 JumpIfEqual {83}
	044 Move X0, [X8+16]
	045 Compare X0, 0
	046 JumpIfEqual {83}
	047 Move X8, [X0]
	048 Move X9, [X8+664]
	049 Move X1, [X8+672]
	050 NotImplemented "Instruction BLR not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X0, [X23]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {58}
	056 Call 0x1C17DFC
	057 Move X0, [X23]
	058 Move X8, [X0+184]
	059 Move X0, [X8+32]
	060 Compare X0, 0
	061 JumpIfEqual {83}
	062 And W1, W22, 1
	063 And W3, W21, 1
	064 And W4, W20, 1
	065 Move X2, X19
	066 Move X20, [X31+48]
	067 Move X19, [X31+56]
	068 Move X22, [X31+32]
	069 Move X21, [X31+40]
	070 Move X24, [X31+16]
	071 Move X23, [X31+24]
	072 Move X30, [X31+64]
	073 Call DynamicPropertyCollection.NotifyMessage, X0, X1, X2, X3, X4
	074 Return 
	075 Move X20, [X31+48]
	076 Move X19, [X31+56]
	077 Move X22, [X31+32]
	078 Move X21, [X31+40]
	079 Move X24, [X31+16]
	080 Move X23, [X31+24]
	081 Move X30, [X31+64]
	082 Return 
	083 Call 0x1C17F20

Method: System.Boolean get_HasGlobalDynamicSinks()

Disassembly:
	0x0328AC90 LDR X8, [X20]
	0x0328AC94 LDR X1, [X25]
	0x0328AC98 LDRH W9, [X8 + 0x12E]
	0x0328AC9C CBZ X9, 0x328ACC0
	0x0328ACA0 LDR X10, [X8 + 0xB0]
	0x0328ACA4 ADD X10, X10, 0x8
	0x0328ACA8 LDUR X11, [X10 - 0x8]
	0x0328ACAC CMP X11, X1
	0x0328ACB0 B.EQ 0x328ACD0
	0x0328ACB4 SUBS X9, X9, 0x1
	0x0328ACB8 ADD X10, X10, 0x10
	0x0328ACBC B.NE 0x328ACA8
	0x0328ACC0 MOV X0, X20
	0x0328ACC4 MOV W2, W31
	0x0328ACC8 BL 0x1C5C788
	0x0328ACCC B 0x328ACDC
	0x0328ACD0 LDRSW X9, [X10]
	0x0328ACD4 ADD X8, X8, X9, 0x4, LSL
	0x0328ACD8 ADD X0, X8, 0x138
	0x0328ACDC LDP X8, X1, [X0]
	0x0328ACE0 MOV X0, X20
	0x0328ACE4 BLR X8
	0x0328ACE8 CBZ X21, 0x328AD8C
	0x0328ACEC MOV X0, X21
	0x0328ACF0 BL 0x1C16F18
	0x0328ACF4 CMP W1, 0x1
	0x0328ACF8 B.NE 0x328AD0C
	0x0328ACFC BL 0x3EB1AD0
	0x0328AD00 LDR X22, [X0]
	0x0328AD04 BL 0x3EB1AE0
	0x0328AD08 B 0x328A848
	0x0328AD0C MOV X19, X0
	0x0328AD10 MOV X22, X31
	0x0328AD14 B 0x328AD1C
	0x0328AD18 MOV X19, X0
	0x0328AD1C LDR X1, [X25]
	0x0328AD20 MOV X0, X21
	0x0328AD24 BL 0x1C16E00
	0x0328AD28 MOV X20, X0
	0x0328AD2C CBZ X0, 0x328AD88
	0x0328AD30 LDR X8, [X20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1153000
	005 Move X19, 0xE9A000
	006 Move W8, [X20+1666]
	007 Move X19, [X19+3768]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xE9A000
	013 Move X0, [X0+3768]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1666], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X8, [X8+32]
	025 Compare X8, 0
	026 JumpIfEqual {45}
	027 Move W9, [X0+224]
	028 Compare W9, 0
	029 JumpIfNotEqual {36}
	030 Call 0x1C17DFC
	031 Move X8, [X19]
	032 Move X8, [X8+184]
	033 Move X8, [X8+32]
	034 Compare X8, 0
	035 JumpIfEqual {50}
	036 Move X0, [X8+16]
	037 Compare X0, 0
	038 JumpIfEqual {50}
	039 Move X8, [X0]
	040 Move X9, [X8+664]
	041 Move X1, [X8+672]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 NotImplemented "Instruction CSET not yet implemented."
	045 Move W0, W31
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Return X0
	050 Call 0x1C17F20

Method: System.Void NotifyDynamicSinks(System.Boolean start, System.Runtime.Remoting.Messaging.IMessage req_msg, System.Boolean client_site, System.Boolean async)

Disassembly:
	0x0328AD34 LDR X1, [X25]
	0x0328AD38 LDRH W9, [X8 + 0x12E]
	0x0328AD3C CBZ X9, 0x328AD60
	0x0328AD40 LDR X10, [X8 + 0xB0]
	0x0328AD44 ADD X10, X10, 0x8
	0x0328AD48 LDUR X11, [X10 - 0x8]
	0x0328AD4C CMP X11, X1
	0x0328AD50 B.EQ 0x328AD70
	0x0328AD54 SUBS X9, X9, 0x1
	0x0328AD58 ADD X10, X10, 0x10
	0x0328AD5C B.NE 0x328AD48
	0x0328AD60 MOV X0, X20
	0x0328AD64 MOV W2, W31
	0x0328AD68 BL 0x1C5C788
	0x0328AD6C B 0x328AD7C
	0x0328AD70 LDRSW X9, [X10]
	0x0328AD74 ADD X8, X8, X9, 0x4, LSL
	0x0328AD78 ADD X0, X8, 0x138
	0x0328AD7C LDP X8, X1, [X0]
	0x0328AD80 MOV X0, X20
	0x0328AD84 BLR X8
	0x0328AD88 CBNZ X22, 0x328AD94
	0x0328AD8C MOV X0, X19
	0x0328AD90 BL 0x1D2C690
	0x0328AD94 MOV X0, X22
	0x0328AD98 BL 0x1C16F18
	0x0328AD9C BL 0x1990590
	0x0328ADA0 SUB X31, X31, 0x30
	0x0328ADA4 STP X30, X21, [X31 + 0x10]
	0x0328ADA8 STP X20, X19, [X31 + 0x20]
	0x0328ADAC ADRP X20, 0x1152000
	0x0328ADB0 LDRB W8, [X20 + 0x68D]
	0x0328ADB4 MOV X19, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X0+72]
	008 Compare X8, 0
	009 JumpIfEqual {38}
	010 Move X23, X0
	011 Move X0, [X8+16]
	012 Compare X0, 0
	013 JumpIfEqual {45}
	014 Move X8, [X0]
	015 Move W22, W1
	016 Move W20, W4
	017 Move W21, W3
	018 Move X9, [X8+664]
	019 Move X1, [X8+672]
	020 Move X19, X2
	021 NotImplemented "Instruction BLR not yet implemented."
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X0, [X23+72]
	024 Compare X0, 0
	025 JumpIfEqual {45}
	026 And W1, W22, 1
	027 And W3, W21, 1
	028 And W4, W20, 1
	029 Move X2, X19
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Move X23, [X31+56]
	036 Call DynamicPropertyCollection.NotifyMessage, X0, X1, X2, X3, X4
	037 Return 
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 Move X23, [X31+56]
	044 Return 
	045 Call 0x1C17F20

Method: System.Boolean get_HasDynamicSinks()

Disassembly:
	0x0328ADB8 TBNZ X8, 0x0, 0x328ADDC
	0x0328ADBC ADRP X0, 0xE9A000
	0x0328ADC0 LDR X0, [X0 + 0x5F0]
	0x0328ADC4 BL 0x1C16CF4
	0x0328ADC8 ADRP X0, 0xE99000
	0x0328ADCC LDR X0, [X0 + 0xEB8]
	0x0328ADD0 BL 0x1C16CF4
	0x0328ADD4 MOVZ W8, 0x1
	0x0328ADD8 STRB W8, [X20 + 0x68D]
	0x0328ADDC STRB W31, [X31 + 0xC]
	0x0328ADE0 ADD X1, X31, 0xC
	0x0328ADE4 MOV X0, X19
	0x0328ADE8 MOV X2, X31
	0x0328ADEC BL 0x33DE64C
	0x0328ADF0 LDR X8, [X19 + 0x50]
	0x0328ADF4 CBNZ X8, 0x328AE4C

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+72]
	003 Compare X8, 0
	004 JumpIfEqual {14}
	005 Move X0, [X8+16]
	006 Compare X0, 0
	007 JumpIfEqual {17}
	008 Move X8, [X0]
	009 Move X9, [X8+664]
	010 Move X1, [X8+672]
	011 NotImplemented "Instruction BLR not yet implemented."
	012 NotImplemented "Instruction CMP not yet implemented."
	013 NotImplemented "Instruction CSET not yet implemented."
	014 Move W0, W31
	015 Move X30, [X31+16]
	016 Return X0
	017 Call 0x1C17F20

Method: System.Boolean get_HasExitSinks()

Disassembly:
	0x0328809C ADD X0, X8, 0x138
	0x032880A0 LDP X8, X1, [X0]
	0x032880A4 MOV X0, X20
	0x032880A8 BLR X8
	0x032880AC LDR X8, [X21]
	0x032880B0 MOV X21, X0
	0x032880B4 MOV X0, X8
	0x032880B8 BL 0x1C16F10
	0x032880BC LDR X2, [X22]
	0x032880C0 MOV X1, X19
	0x032880C4 MOV X3, X31
	0x032880C8 MOV X22, X0
	0x032880CC BL 0x33E761C
	0x032880D0 LDR X3, [X19 + 0x38]
	0x032880D4 MOVZ W4, 0x1
	0x032880D8 MOV X0, X21
	0x032880DC MOV X1, X22
	0x032880E0 MOV X2, X20
	0x032880E4 MOV X5, X31
	0x032880E8 BL 0x33E9B84
	0x032880EC LDP X20, X19, [X31 + 0x30]
	0x032880F0 LDP X22, X21, [X31 + 0x20]
	0x032880F4 LDP X30, X23, [X31 + 0x10]
	0x032880F8 ADD X31, X31, 0x40
	0x032880FC RET
	0x03288100 BL 0x1C16F20
	0x03288104 STR X30, [X31 - 0x30]!
	0x03288108 STP X22, X21, [X31 + 0x10]
	0x0328810C STP X20, X19, [X31 + 0x20]
	0x03288110 LDR X8, [X2 + 0x8]
	0x03288114 STP X1, X2, [X0 + 0x20]
	0x03288118 MOV X19, X0
	0x0328811C MOV X20, X2
	0x03288120 STR X8, [X0 + 0x10]
	0x03288124 LDRB W22, [X2 + 0x52]
	0x03288128 STR X0, [X0 + 0x40]
	0x0328812C MOV X0, X2
	0x03288130 MOV X21, X1
	0x03288134 BL 0x1C16D84
	0x03288138 TBZ X0, 0x0, 0x3288150
	0x0328813C CMP W22, 0x1
	0x03288140 B.NE 0x3288158
	0x03288144 ADRP X8, 0xFFFFFFFFFE92D000
	0x03288148 ADD X8, X8, 0x25C
	0x0328814C B 0x32881CC
	0x03288150 CBZ W22, 0x328816C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1155000
	005 Move W8, [X20+1667]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xE9D000
	012 Move X0, [X0+1240]
	013 Call 0x1C17CF4
	014 Move X0, 0xE9C000
	015 Move X0, [X0+3768]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1667], W8
	019 Move X0, X19
	020 Call Context.GetClientContextSinkChain, X0
	021 Compare X0, 0
	022 JumpIfEqual {40}
	023 Move X8, 0xE9D000
	024 Move X8, [X8+1240]
	025 Move X9, [X0]
	026 Move X8, [X8]
	027 Move W11, [X9+304]
	028 Move W10, [X8+304]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X9, [X9+200]
	031 Add X9, X9, X10
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X0, X19
	035 Call Context.get_HasDynamicSinks, X0
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {45}
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move W0, 1
	043 Move X30, [X31+32]
	044 Return X0
	045 Move X8, 0xE9C000
	046 Move X8, [X8+3768]
	047 Move X0, [X8]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X30, [X31+32]
	055 Call Context.get_HasGlobalDynamicSinks
	056 Return X0

Method: System.Runtime.Remoting.Contexts.IContextProperty GetProperty(System.String name)

Disassembly:
	0x0328ADF8 ADRP X8, 0xE99000
	0x0328ADFC LDR X8, [X8 + 0xEB8]
	0x0328AE00 LDR X0, [X8]
	0x0328AE04 LDR W8, [X0 + 0xE0]
	0x0328AE08 CBNZ W8, 0x328AE10
	0x0328AE0C BL 0x1C16DFC
	0x0328AE10 MOV X0, X19
	0x0328AE14 MOV X1, X31
	0x0328AE18 BL 0x33C0284
	0x0328AE1C ADRP X8, 0xE9A000
	0x0328AE20 LDR X8, [X8 + 0x5F0]
	0x0328AE24 MOV X20, X0
	0x0328AE28 LDR X0, [X8]
	0x0328AE2C BL 0x1C16F10
	0x0328AE30 MOV X21, X0
	0x0328AE34 MOV X1, X31
	0x0328AE38 BL 0x33A8E7C
	0x0328AE3C STR X21, [X19 + 0x50]
	0x0328AE40 MOV X0, X20
	0x0328AE44 MOV X1, X31
	0x0328AE48 BL 0x33C0284
	0x0328AE4C MOV X20, X31
	0x0328AE50 MOVZ W21, 0x3
	0x0328AE54 LDRB W8, [X31 + 0xC]
	0x0328AE58 CBZ W8, 0x328AE68
	0x0328AE5C MOV X0, X19
	0x0328AE60 MOV X1, X31
	0x0328AE64 BL 0x33E14E4
	0x0328AE68 CBNZ X20, 0x328AE90
	0x0328AE6C CMP W21, 0x3
	0x0328AE70 B.EQ 0x328AE78
	0x0328AE74 CBNZ W21, 0x328AE80
	0x0328AE78 LDR X8, [X19 + 0x50]
	0x0328AE7C CBZ X8, 0x328AE98
	0x0328AE80 LDP X20, X19, [X31 + 0x20]
	0x0328AE84 LDP X30, X21, [X31 + 0x10]
	0x0328AE88 ADD X31, X31, 0x30
	0x0328AE8C RET
	0x0328AE90 MOV X0, X20
	0x0328AE94 BL 0x1C16F18
	0x0328AE98 BL 0x1C16F20
	0x0328AE9C B 0x328AEAC
	0x0328AEA0 B 0x328AEAC
	0x0328AEA4 B 0x328AEAC
	0x0328AEA8 B 0x328AEAC
	0x0328AEAC MOV X21, X0
	0x0328AEB0 CMP W1, 0x1
	0x0328AEB4 B.NE 0x328AED0
	0x0328AEB8 MOV X0, X21
	0x0328AEBC BL 0x3EB1AD0
	0x0328AEC0 LDR X20, [X0]
	0x0328AEC4 BL 0x3EB1AE0
	0x0328AEC8 MOV W21, W31
	0x0328AECC B 0x328AE54
	0x0328AED0 MOV X20, X31
	0x0328AED4 B 0x328AEDC
	0x0328AED8 MOV X21, X0
	0x0328AEDC LDRB W8, [X31 + 0xC]
	0x0328AEE0 CBZ W8, 0x328AEF0
	0x0328AEE4 MOV X0, X19
	0x0328AEE8 MOV X1, X31
	0x0328AEEC BL 0x33E14E4
	0x0328AEF0 CBNZ X20, 0x328AEFC
	0x0328AEF4 MOV X0, X21
	0x0328AEF8 BL 0x1D2C690
	0x0328AEFC MOV X0, X20
	0x0328AF00 BL 0x1C16F18
	0x0328AF04 BL 0x1990590
	0x0328AF08 MOV X1, X31
	0x0328AF0C B 0x33A8E7C
	0x0328AF10 RET
	0x0328AF14 STR X30, [X31 - 0x30]!
	0x0328AF18 STP X22, X21, [X31 + 0x10]
	0x0328AF1C STP X20, X19, [X31 + 0x20]
	0x0328AF20 ADRP X20, 0x1152000
	0x0328AF24 LDRB W8, [X20 + 0x68E]
	0x0328AF28 MOV X19, X0
	0x0328AF2C TBNZ X8, 0x0, 0x328AF44
	0x0328AF30 ADRP X0, 0xE99000
	0x0328AF34 LDR X0, [X0 + 0xEB8]
	0x0328AF38 BL 0x1C16CF4
	0x0328AF3C MOVZ W8, 0x1
	0x0328AF40 STRB W8, [X20 + 0x68E]
	0x0328AF44 STRB W31, [X31 + 0xC]
	0x0328AF48 LDR X20, [X19 + 0x40]
	0x0328AF4C BL 0x1C16D44
	0x0328AF50 CBNZ X20, 0x328AFF0
	0x0328AF54 ADRP X21, 0xE99000
	0x0328AF58 LDR X21, [X21 + 0xEB8]
	0x0328AF5C LDR X0, [X21]
	0x0328AF60 LDR W8, [X0 + 0xE0]
	0x0328AF64 CBNZ W8, 0x328AF70
	0x0328AF68 BL 0x1C16DFC
	0x0328AF6C LDR X0, [X21]
	0x0328AF70 LDR X8, [X0 + 0xB8]
	0x0328AF74 LDR X20, [X8 + 0x18]
	0x0328AF78 STRB W31, [X31 + 0xC]
	0x0328AF7C ADD X1, X31, 0xC
	0x0328AF80 MOV X0, X20
	0x0328AF84 MOV X2, X31
	0x0328AF88 BL 0x33DE64C
	0x0328AF8C LDR X22, [X19 + 0x40]
	0x0328AF90 BL 0x1C16D44
	0x0328AF94 CBZ X22, 0x328AFA0
	0x0328AF98 MOV X21, X31
	0x0328AF9C B 0x328AFD8
	0x0328AFA0 LDR X0, [X21]
	0x0328AFA4 LDR W8, [X0 + 0xE0]
	0x0328AFA8 CBNZ W8, 0x328AFB4
	0x0328AFAC BL 0x1C16DFC
	0x0328AFB0 LDR X0, [X21]
	0x0328AFB4 LDR X8, [X0 + 0xB8]
	0x0328AFB8 LDR X0, [X8 + 0x18]
	0x0328AFBC CBZ X0, 0x328B01C
	0x0328AFC0 MOV X1, X31
	0x0328AFC4 BL 0x33A5C78
	0x0328AFC8 MOV X22, X0
	0x0328AFCC BL 0x1C16D44
	0x0328AFD0 MOV X21, X31
	0x0328AFD4 STR X22, [X19 + 0x40]
	0x0328AFD8 LDRB W8, [X31 + 0xC]
	0x0328AFDC CBZ W8, 0x328AFEC
	0x0328AFE0 MOV X0, X20
	0x0328AFE4 MOV X1, X31
	0x0328AFE8 BL 0x33E14E4
	0x0328AFEC CBNZ X21, 0x328B014

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+80], X22
	004 Move [X31+88], X21
	005 Move [X31+96], X20
	006 Move [X31+104], X19
	007 Move X21, 0x1153000
	008 Move W8, [X21+1668]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0xE9B000
	016 Move X0, [X0+912]
	017 Call 0x1C17CF4
	018 Move X0, 0xE9B000
	019 Move X0, [X0+920]
	020 Call 0x1C17CF4
	021 Move X0, 0xE9B000
	022 Move X0, [X0+928]
	023 Call 0x1C17CF4
	024 Move X0, 0xE9B000
	025 Move X0, [X0+1416]
	026 Call 0x1C17CF4
	027 Move X0, 0xE9B000
	028 Move X0, [X0+944]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+1668], W8
	032 Move [X31+32], X31
	033 Move [X31+40], X31
	034 Move [X31+48], X31
	035 Move X0, [X20+56]
	036 Compare X0, 0
	037 JumpIfEqual {99}
	038 Move X8, 0xE9B000
	039 Move X8, [X8+944]
	040 Move X21, 0xE9B000
	041 Move X22, 0xE9B000
	042 Move X1, [X8]
	043 Move X21, [X21+920]
	044 Move X22, [X22+1416]
	045 Add X8, X31, 8
	046 Call List`1<Object>.GetEnumerator, X0
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 Move X8, [X31+24]
	049 Move [X31+2], V0
	050 Move [X31+48], X8
	051 Move X1, [X21]
	052 Add X0, X31, 32
	053 Call Enumerator<Object>.MoveNext, X0
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {94}
	058 Move X20, [X31+48]
	059 Compare X20, 0
	060 JumpIfEqual {108}
	061 Move X8, [X20]
	062 Move X1, [X22]
	063 NotImplemented "Instruction LDRH not yet implemented."
	064 Compare X9, 0
	065 JumpIfEqual {72}
	066 Move X10, [X8+176]
	067 Add X10, X10, 8
	068 NotImplemented "Instruction LDUR not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Subtract X9, X9, 1
	071 Add X10, X10, 16
	072 Move X0, X20
	073 Move W2, W31
	074 Call 0x1C5D788
	075 NotImplemented "Instruction LDRSW not yet implemented."
	076 Add X8, X8, X9
	077 Add X0, X8, 312
	078 Move X8, [X0]
	079 Move X1, [X0+8]
	080 Move X0, X20
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Move X1, X19
	083 Move X2, X31
	084 Call String.op_Equality, X0, X1
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfNotEqual {51}
	089 Move X8, 0xE9B000
	090 Move X8, [X8+912]
	091 Add X0, X31, 32
	092 Move X1, [X8]
	093 Call Enumerator<Object>.Dispose, X0
	094 Move X8, 0xE9B000
	095 Move X8, [X8+912]
	096 Add X0, X31, 32
	097 Move X1, [X8]
	098 Call Enumerator<Object>.Dispose, X0
	099 Move X20, X31
	100 Move X0, X20
	101 Move X20, [X31+96]
	102 Move X19, [X31+104]
	103 Move X22, [X31+80]
	104 Move X21, [X31+88]
	105 Move X30, [X31+64]
	106 Add X31, X31, 112
	107 Return X0
	108 Call 0x1C17F20
	109 Move X19, X0
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move X0, X19
	112 Call 0x3EB2AD0
	113 Move X20, [X0]
	114 Call 0x3EB2AE0
	115 Move X8, 0xE9B000
	116 Move X8, [X8+912]
	117 Add X0, X31, 32
	118 Move X1, [X8]
	119 Call Enumerator<Object>.Dispose, X0
	120 Compare X20, 0
	121 JumpIfEqual {100}
	122 Move X0, X20
	123 Call 0x1C17F18
	124 Move X20, X31
	125 Move X19, X0
	126 Move X8, 0xE9B000
	127 Move X8, [X8+912]
	128 Move X1, [X8]
	129 Add X0, X31, 32
	130 Call Enumerator<Object>.Dispose, X0
	131 Compare X20, 0
	132 JumpIfNotEqual {135}
	133 Move X0, X19
	134 Call 0x1D2D690
	135 Move X0, X20
	136 Call 0x1C17F18
	137 Call 0x1991590

Method: System.Void SetProperty(System.Runtime.Remoting.Contexts.IContextProperty prop)

Disassembly:
	0x0328AFF0 LDR X19, [X19 + 0x40]
	0x0328AFF4 BL 0x1C16D44
	0x0328AFF8 CBZ X19, 0x328B010
	0x0328AFFC LDR X0, [X19 + 0x10]
	0x0328B000 LDP X20, X19, [X31 + 0x20]
	0x0328B004 LDP X22, X21, [X31 + 0x10]
	0x0328B008 LDR X30, [X31], #0x30
	0x0328B00C RET
	0x0328B010 BL 0x1C16F20
	0x0328B014 MOV X0, X21
	0x0328B018 BL 0x1C16F18
	0x0328B01C BL 0x1C16F20
	0x0328B020 B 0x328B030
	0x0328B024 B 0x328B030
	0x0328B028 B 0x328B030
	0x0328B02C B 0x328B030
	0x0328B030 MOV X22, X0
	0x0328B034 CMP W1, 0x1
	0x0328B038 B.NE 0x328B050
	0x0328B03C MOV X0, X22
	0x0328B040 BL 0x3EB1AD0
	0x0328B044 LDR X21, [X0]
	0x0328B048 BL 0x3EB1AE0
	0x0328B04C B 0x328AFD8
	0x0328B050 MOV X21, X31
	0x0328B054 B 0x328B05C
	0x0328B058 MOV X22, X0
	0x0328B05C LDRB W8, [X31 + 0xC]
	0x0328B060 CBZ W8, 0x328B070
	0x0328B064 MOV X0, X20
	0x0328B068 MOV X1, X31
	0x0328B06C BL 0x33E14E4
	0x0328B070 CBNZ X21, 0x328B07C
	0x0328B074 MOV X0, X22
	0x0328B078 BL 0x1D2C690
	0x0328B07C MOV X0, X21
	0x0328B080 BL 0x1C16F18
	0x0328B084 BL 0x1990590
	0x0328B088 STR X30, [X31 - 0x20]!
	0x0328B08C STP X20, X19, [X31 + 0x10]
	0x0328B090 ADRP X20, 0x1151000
	0x0328B094 ADRP X19, 0xE98000
	0x0328B098 LDRB W8, [X20 + 0x68F]
	0x0328B09C LDR X19, [X19 + 0xEB8]
	0x0328B0A0 TBNZ X8, 0x0, 0x328B0B8
	0x0328B0A4 ADRP X0, 0xE98000
	0x0328B0A8 LDR X0, [X0 + 0xEB8]
	0x0328B0AC BL 0x1C16CF4
	0x0328B0B0 MOVZ W8, 0x1
	0x0328B0B4 STRB W8, [X20 + 0x68F]
	0x0328B0B8 LDR X0, [X19]
	0x0328B0BC LDR W8, [X0 + 0xE0]
	0x0328B0C0 CBNZ W8, 0x328B0CC
	0x0328B0C4 BL 0x1C16DFC
	0x0328B0C8 LDR X0, [X19]
	0x0328B0CC LDR X8, [X0 + 0xB8]
	0x0328B0D0 LDR X0, [X8 + 0x18]
	0x0328B0D4 CBZ X0, 0x328B0E8
	0x0328B0D8 LDP X20, X19, [X31 + 0x10]
	0x0328B0DC MOV X1, X31
	0x0328B0E0 LDR X30, [X31], #0x20
	0x0328B0E4 B 0x33A5E28
	0x0328B0E8 BL 0x1C16F20
	0x0328B0EC STP X30, X21, [X31 - 0x20]!
	0x0328B0F0 STP X20, X19, [X31 + 0x10]
	0x0328B0F4 ADRP X21, 0x1151000
	0x0328B0F8 ADRP X20, 0xE98000
	0x0328B0FC LDRB W8, [X21 + 0x690]
	0x0328B100 LDR X20, [X20 + 0xEB8]
	0x0328B104 MOV X19, X0
	0x0328B108 TBNZ X8, 0x0, 0x328B120
	0x0328B10C ADRP X0, 0xE98000
	0x0328B110 LDR X0, [X0 + 0xEB8]
	0x0328B114 BL 0x1C16CF4
	0x0328B118 MOVZ W8, 0x1
	0x0328B11C STRB W8, [X21 + 0x690]
	0x0328B120 LDR X0, [X20]
	0x0328B124 LDR W8, [X0 + 0xE0]
	0x0328B128 CBNZ W8, 0x328B134
	0x0328B12C BL 0x1C16DFC
	0x0328B130 LDR X0, [X20]
	0x0328B134 LDR X8, [X0 + 0xB8]
	0x0328B138 LDR X0, [X8 + 0x18]
	0x0328B13C CBZ X0, 0x328B154
	0x0328B140 MOV X1, X19
	0x0328B144 LDP X20, X19, [X31 + 0x10]
	0x0328B148 MOV X2, X31
	0x0328B14C LDP X30, X21, [X31], #0x20
	0x0328B150 B 0x33A605C
	0x0328B154 BL 0x1C16F20
	0x0328B158 STP X30, X21, [X31 - 0x20]!
	0x0328B15C STP X20, X19, [X31 + 0x10]
	0x0328B160 ADRP X21, 0x1151000
	0x0328B164 ADRP X20, 0xE98000
	0x0328B168 LDRB W8, [X21 + 0x691]
	0x0328B16C LDR X20, [X20 + 0xEB8]
	0x0328B170 MOV X19, X0
	0x0328B174 TBNZ X8, 0x0, 0x328B18C
	0x0328B178 ADRP X0, 0xE98000
	0x0328B17C LDR X0, [X0 + 0xEB8]
	0x0328B180 BL 0x1C16CF4
	0x0328B184 MOVZ W8, 0x1
	0x0328B188 STRB W8, [X21 + 0x691]
	0x0328B18C LDR X0, [X20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1153000
	006 Move W8, [X21+1669]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0xE99000
	014 Move X0, [X0+3768]
	015 Call 0x1C17CF4
	016 Move X0, 0xE9A000
	017 Move X0, [X0+1424]
	018 Call 0x1C17CF4
	019 Move X0, 0xE9A000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move X0, 0xE9A000
	023 Move X0, [X0+1440]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+1669], W8
	027 Compare X19, 0
	028 JumpIfEqual {87}
	029 Move X8, 0xE99000
	030 Move X8, [X8+3768]
	031 Move X0, [X8]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X0, X31
	037 Call AppDomain.InternalGetDefaultContext
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X21, [X20+56]
	040 Compare X21, 0
	041 JumpIfNotEqual {54}
	042 Move X8, 0xE9A000
	043 Move X8, [X8+1440]
	044 Move X0, [X8]
	045 Call 0x1C17F10
	046 Move X8, 0xE9A000
	047 Move X8, [X8+1432]
	048 Move X21, X0
	049 Move X1, [X8]
	050 Call List`1<Object>..ctor, X0
	051 Move [X20+56], X21
	052 Compare X21, 0
	053 JumpIfEqual {86}
	054 Move X9, 0xE9A000
	055 Move X9, [X9+1424]
	056 Move W10, [X21+28]
	057 Move X8, [X21+16]
	058 Move X9, [X9]
	059 Add W10, W10, 1
	060 Move [X21+28], W10
	061 Compare X8, 0
	062 JumpIfEqual {86}
	063 NotImplemented "Instruction LDRSW not yet implemented."
	064 Move W11, [X8+24]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Add W9, W10, 1
	067 Add X8, X8, X10
	068 Move [X21+24], W9
	069 Move [X8+32], X19
	070 Move X20, [X31+16]
	071 Move X19, [X31+24]
	072 Move X30, [X31+32]
	073 Move X21, [X31+40]
	074 Return 
	075 Move X8, [X9+32]
	076 Move X1, X19
	077 Move X20, [X31+16]
	078 Move X19, [X31+24]
	079 Move X0, X21
	080 Move X8, [X8+192]
	081 Move X2, [X8+112]
	082 Move X30, [X31+32]
	083 Move X21, [X31+40]
	084 Call List`1<Object>.AddWithResize, X0, X1
	085 Return 
	086 Call 0x1C17F20
	087 Move X0, 0xE6E000
	088 Move X0, [X0+1320]
	089 Call 0x1C17D08
	090 Call 0x1C17F10
	091 Move X19, X0
	092 Move X0, 0xE9A000
	093 Move X0, [X0+1448]
	094 Call 0x1C17D08
	095 Move X1, X0
	096 Move X0, X19
	097 Move X2, X31
	098 Call ArgumentNullException..ctor, X0, X1
	099 Move X0, 0xE69000
	100 Move X0, [X0+1456]
	101 Call 0x1C17D08
	102 Call 0x1C17F10
	103 Move X19, X0
	104 Move X0, 0xE9A000
	105 Move X0, [X0+1456]
	106 Call 0x1C17D08
	107 Move X1, X0
	108 Move X0, X19
	109 Move X2, X31
	110 Call InvalidOperationException..ctor, X0, X1
	111 Move X0, 0xE9A000
	112 Move X0, [X0+1464]
	113 Call 0x1C17D08
	114 Move X1, X0
	115 Move X0, X19
	116 Call 0x1C17DEC

Method: System.Void Freeze()

Disassembly:
	0x0328B190 LDR W8, [X0 + 0xE0]
	0x0328B194 CBNZ W8, 0x328B1A0
	0x0328B198 BL 0x1C16DFC
	0x0328B19C LDR X0, [X20]
	0x0328B1A0 LDR X8, [X0 + 0xB8]
	0x0328B1A4 LDR X0, [X8 + 0x18]
	0x0328B1A8 CBZ X0, 0x328B1C0
	0x0328B1AC MOV X1, X19
	0x0328B1B0 LDP X20, X19, [X31 + 0x10]
	0x0328B1B4 MOV X2, X31
	0x0328B1B8 LDP X30, X21, [X31], #0x20
	0x0328B1BC B 0x33A6294
	0x0328B1C0 BL 0x1C16F20
	0x0328B1C4 STP X30, X21, [X31 - 0x20]!
	0x0328B1C8 STP X20, X19, [X31 + 0x10]
	0x0328B1CC ADRP X21, 0x1151000
	0x0328B1D0 ADRP X20, 0xE98000
	0x0328B1D4 LDRB W8, [X21 + 0x692]
	0x0328B1D8 LDR X20, [X20 + 0xEB8]
	0x0328B1DC MOV X19, X0
	0x0328B1E0 TBNZ X8, 0x0, 0x328B1F8
	0x0328B1E4 ADRP X0, 0xE98000
	0x0328B1E8 LDR X0, [X0 + 0xEB8]
	0x0328B1EC BL 0x1C16CF4
	0x0328B1F0 MOVZ W8, 0x1
	0x0328B1F4 STRB W8, [X21 + 0x692]
	0x0328B1F8 LDR X0, [X20]
	0x0328B1FC LDR W8, [X0 + 0xE0]
	0x0328B200 CBNZ W8, 0x328B20C
	0x0328B204 BL 0x1C16DFC
	0x0328B208 LDR X0, [X20]
	0x0328B20C LDR X8, [X0 + 0xB8]
	0x0328B210 LDR X0, [X8 + 0x18]
	0x0328B214 CBZ X0, 0x328B22C
	0x0328B218 MOV X1, X19
	0x0328B21C LDP X20, X19, [X31 + 0x10]
	0x0328B220 MOV X2, X31
	0x0328B224 LDP X30, X21, [X31], #0x20
	0x0328B228 B 0x33A6178
	0x0328B22C BL 0x1C16F20
	0x0328B230 STP X30, X19, [X31 - 0x10]!
	0x0328B234 MOV X19, X0
	0x0328B238 MOV X0, X31
	0x0328B23C BL 0x33E6FB0
	0x0328B240 CBZ X0, 0x328B25C
	0x0328B244 BL 0x328AF14
	0x0328B248 CBZ X0, 0x328B25C
	0x0328B24C MOV X1, X19
	0x0328B250 MOV X2, X31
	0x0328B254 LDP X30, X19, [X31], #0x10
	0x0328B258 B 0x33A54E4
	0x0328B25C BL 0x1C16F20
	0x0328B260 STR X30, [X31 - 0x20]!
	0x0328B264 STP X20, X19, [X31 + 0x10]
	0x0328B268 MOV X20, X0
	0x0328B26C MOV X0, X31
	0x0328B270 MOV X19, X1
	0x0328B274 BL 0x33E6FB0
	0x0328B278 CBZ X0, 0x328B29C
	0x0328B27C BL 0x328AF14
	0x0328B280 CBZ X0, 0x328B29C
	0x0328B284 MOV X1, X20
	0x0328B288 MOV X2, X19
	0x0328B28C LDP X20, X19, [X31 + 0x10]
	0x0328B290 MOV X3, X31
	0x0328B294 LDR X30, [X31], #0x20
	0x0328B298 B 0x33A5628
	0x0328B29C BL 0x1C16F20
	0x0328B2A0 STP X30, X21, [X31 - 0x20]!
	0x0328B2A4 STP X20, X19, [X31 + 0x10]
	0x0328B2A8 ADRP X19, 0x1151000
	0x0328B2AC ADRP X21, 0xE99000
	0x0328B2B0 ADRP X20, 0xE98000
	0x0328B2B4 LDRB W8, [X19 + 0x693]
	0x0328B2B8 LDR X21, [X21 + 0x5F8]
	0x0328B2BC LDR X20, [X20 + 0xEB8]
	0x0328B2C0 TBNZ X8, 0x0, 0x328B2E4
	0x0328B2C4 ADRP X0, 0xE98000
	0x0328B2C8 LDR X0, [X0 + 0xEB8]
	0x0328B2CC BL 0x1C16CF4
	0x0328B2D0 ADRP X0, 0xE99000
	0x0328B2D4 LDR X0, [X0 + 0x5F8]
	0x0328B2D8 BL 0x1C16CF4
	0x0328B2DC MOVZ W8, 0x1
	0x0328B2E0 STRB W8, [X19 + 0x693]
	0x0328B2E4 LDR X0, [X21]
	0x0328B2E8 BL 0x1C16F10
	0x0328B2EC MOV X1, X31
	0x0328B2F0 MOV X19, X0
	0x0328B2F4 BL 0x33A6398
	0x0328B2F8 LDR X8, [X20]
	0x0328B2FC LDR X8, [X8 + 0xB8]
	0x0328B300 STR X19, [X8 + 0x18]
	0x0328B304 LDP X20, X19, [X31 + 0x10]
	0x0328B308 LDP X30, X21, [X31], #0x20
	0x0328B30C RET
	0x0328B310 STR X30, [X31 - 0x40]!
	0x0328B314 STP X24, X23, [X31 + 0x10]
	0x0328B318 STP X22, X21, [X31 + 0x20]
	0x0328B31C STP X20, X19, [X31 + 0x30]
	0x0328B320 ADRP X21, 0x1151000
	0x0328B324 LDRB W8, [X21 + 0x696]
	0x0328B328 MOV X19, X1
	0x0328B32C MOV X20, X0
	0x0328B330 TBNZ X8, 0x0, 0x328B354
	0x0328B334 ADRP X0, 0xE98000
	0x0328B338 LDR X0, [X0 + 0xD40]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X20, 0x1152000
	009 Move W8, [X20+1670]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0xE9A000
	016 Move X0, [X0+912]
	017 Call 0x1C17CF4
	018 Move X0, 0xE9A000
	019 Move X0, [X0+920]
	020 Call 0x1C17CF4
	021 Move X0, 0xE9A000
	022 Move X0, [X0+928]
	023 Call 0x1C17CF4
	024 Move X0, 0xE9A000
	025 Move X0, [X0+1416]
	026 Call 0x1C17CF4
	027 Move X0, 0xE9A000
	028 Move X0, [X0+944]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+1670], W8
	032 Move [X31+8], X31
	033 Move [X31+16], X31
	034 Move [X31+24], X31
	035 Move X0, [X19+56]
	036 Compare X0, 0
	037 JumpIfEqual {85}
	038 Move X8, 0xE9A000
	039 Move X8, [X8+944]
	040 Move X22, 0xE9A000
	041 Move X23, 0xE9A000
	042 Move X21, 0xE9A000
	043 Move X1, [X8]
	044 Move X22, [X22+920]
	045 Move X23, [X23+1416]
	046 Move X21, [X21+912]
	047 Add X8, X31, 8
	048 Call List`1<Object>.GetEnumerator, X0
	049 Move X1, [X22]
	050 Add X0, X31, 8
	051 Call Enumerator<Object>.MoveNext, X0
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {82}
	056 Move X20, [X31+24]
	057 Compare X20, 0
	058 JumpIfEqual {93}
	059 Move X8, [X20]
	060 Move X1, [X23]
	061 NotImplemented "Instruction LDRH not yet implemented."
	062 Compare X9, 0
	063 JumpIfEqual {70}
	064 Move X10, [X8+176]
	065 Add X10, X10, 8
	066 NotImplemented "Instruction LDUR not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Subtract X9, X9, 1
	069 Add X10, X10, 16
	070 Move W2, 1
	071 Move X0, X20
	072 Call 0x1C5D788
	073 Move W9, [X10]
	074 Add W9, W9, 1
	075 Add X8, X8, W9
	076 Add X0, X8, 312
	077 Move X8, [X0]
	078 Move X2, [X0+8]
	079 Move X0, X20
	080 Move X1, X19
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Move X1, [X21]
	083 Add X0, X31, 8
	084 Call Enumerator<Object>.Dispose, X0
	085 Move X20, [X31+64]
	086 Move X19, [X31+72]
	087 Move X22, [X31+48]
	088 Move X21, [X31+56]
	089 Move X30, [X31+32]
	090 Move X23, [X31+40]
	091 Add X31, X31, 80
	092 Return 
	093 Call 0x1C17F20
	094 Move X19, X0
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X0, X19
	097 Call 0x3EB2AD0
	098 Move X20, [X0]
	099 Call 0x3EB2AE0
	100 Move X1, [X21]
	101 Add X0, X31, 8
	102 Call Enumerator<Object>.Dispose, X0
	103 Compare X20, 0
	104 JumpIfEqual {85}
	105 Move X0, X20
	106 Call 0x1C17F18
	107 Move X20, X31
	108 Move X19, X0
	109 Move X1, [X21]
	110 Add X0, X31, 8
	111 Call Enumerator<Object>.Dispose, X0
	112 Compare X20, 0
	113 JumpIfNotEqual {116}
	114 Move X0, X19
	115 Call 0x1D2D690
	116 Move X0, X20
	117 Call 0x1C17F18
	118 Call 0x1991590

Method: System.String ToString()

Disassembly:
	0x0328B33C BL 0x1C16CF4
	0x0328B340 ADRP X0, 0xE99000
	0x0328B344 LDR X0, [X0 + 0x558]
	0x0328B348 BL 0x1C16CF4
	0x0328B34C MOVZ W8, 0x1
	0x0328B350 STRB W8, [X21 + 0x696]
	0x0328B354 LDR X0, [X20 + 0x10]
	0x0328B358 CBZ X0, 0x328B450
	0x0328B35C ADRP X23, 0xE98000
	0x0328B360 ADRP X24, 0xE99000
	0x0328B364 LDR X23, [X23 + 0xD40]
	0x0328B368 LDR X24, [X24 + 0x558]
	0x0328B36C MOV W21, W31
	0x0328B370 LDR X8, [X0]
	0x0328B374 LDR X9, [X8 + 0x298]
	0x0328B378 LDR X1, [X8 + 0x2A0]
	0x0328B37C BLR X9
	0x0328B380 CMP W21, W0
	0x0328B384 B.GE 0x328B454
	0x0328B388 LDR X0, [X20 + 0x10]
	0x0328B38C CBZ X0, 0x328B450
	0x0328B390 LDR X8, [X0]
	0x0328B394 MOV W1, W21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1152000
	006 Move X20, 0xE9A000
	007 Move W8, [X21+1671]
	008 Move X20, [X20+1472]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE9A000
	015 Move X0, [X0+1472]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1671], W8
	019 Add X0, X19, 20
	020 Move X1, X31
	021 Call Int32.ToString, X0
	022 Move X8, [X20]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X1, X0
	026 Move X2, X31
	027 Move X0, X8
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call String.Concat, X0, X1
	031 Return X0

Method: System.Runtime.Remoting.Messaging.IMessageSink GetServerContextSinkChain()

Disassembly:
	0x0328B398 LDR X9, [X8 + 0x2E8]
	0x0328B39C LDR X2, [X8 + 0x2F0]
	0x0328B3A0 BLR X9
	0x0328B3A4 CBZ X0, 0x328B450
	0x0328B3A8 LDR X8, [X0]
	0x0328B3AC LDR X1, [X23]
	0x0328B3B0 LDRB W10, [X8 + 0x130]
	0x0328B3B4 LDRB W9, [X1 + 0x130]
	0x0328B3B8 CMP W10, W9
	0x0328B3BC B.CC 0x328B470
	0x0328B3C0 LDR X8, [X8 + 0xC8]
	0x0328B3C4 ADD X8, X8, X9, 0x3, LSL
	0x0328B3C8 LDUR X8, [X8 - 0x8]
	0x0328B3CC CMP X8, X1
	0x0328B3D0 B.NE 0x328B470
	0x0328B3D4 LDR X22, [X0 + 0x10]
	0x0328B3D8 CBZ X22, 0x328B450
	0x0328B3DC LDR X8, [X22]
	0x0328B3E0 LDR X1, [X24]
	0x0328B3E4 LDRH W9, [X8 + 0x12E]
	0x0328B3E8 CBZ X9, 0x328B40C
	0x0328B3EC LDR X10, [X8 + 0xB0]
	0x0328B3F0 ADD X10, X10, 0x8
	0x0328B3F4 LDUR X11, [X10 - 0x8]
	0x0328B3F8 CMP X11, X1
	0x0328B3FC B.EQ 0x328B41C
	0x0328B400 SUBS X9, X9, 0x1
	0x0328B404 ADD X10, X10, 0x10
	0x0328B408 B.NE 0x328B3F4
	0x0328B40C MOV X0, X22
	0x0328B410 MOV W2, W31
	0x0328B414 BL 0x1C5C788
	0x0328B418 B 0x328B428
	0x0328B41C LDRSW X9, [X10]
	0x0328B420 ADD X8, X8, X9, 0x4, LSL
	0x0328B424 ADD X0, X8, 0x138
	0x0328B428 LDP X8, X1, [X0]
	0x0328B42C MOV X0, X22
	0x0328B430 BLR X8
	0x0328B434 MOV X1, X19
	0x0328B438 MOV X2, X31
	0x0328B43C BL 0x321BA08
	0x0328B440 TBNZ X0, 0x0, 0x328B458
	0x0328B444 LDR X0, [X20 + 0x10]
	0x0328B448 ADD W21, W21, 0x1
	0x0328B44C CBNZ X0, 0x328B370
	0x0328B450 BL 0x1C16F20
	0x0328B454 MOVN W21, 0x0
	0x0328B458 MOV W0, W21
	0x0328B45C LDP X20, X19, [X31 + 0x30]
	0x0328B460 LDP X22, X21, [X31 + 0x20]
	0x0328B464 LDP X24, X23, [X31 + 0x10]
	0x0328B468 LDR X30, [X31], #0x40
	0x0328B46C RET
	0x0328B470 BL 0x1C171E0
	0x0328B474 MOV X1, X31
	0x0328B478 B 0x33BDD8C
	0x0328B47C STP X30, X25, [X31 - 0x40]!
	0x0328B480 STP X24, X23, [X31 + 0x10]
	0x0328B484 STP X22, X21, [X31 + 0x20]
	0x0328B488 STP X20, X19, [X31 + 0x30]
	0x0328B48C ADRP X19, 0x1151000
	0x0328B490 ADRP X21, 0xE98000
	0x0328B494 LDRB W8, [X19 + 0x698]
	0x0328B498 LDR X21, [X21 + 0xE68]
	0x0328B49C MOV X20, X1
	0x0328B4A0 TBNZ X8, 0x0, 0x328B4DC
	0x0328B4A4 ADRP X0, 0xE98000
	0x0328B4A8 LDR X0, [X0 + 0xEB8]
	0x0328B4AC BL 0x1C16CF4
	0x0328B4B0 ADRP X0, 0xE99000
	0x0328B4B4 LDR X0, [X0 + 0x3B8]
	0x0328B4B8 BL 0x1C16CF4
	0x0328B4BC ADRP X0, 0xE98000
	0x0328B4C0 LDR X0, [X0 + 0xE68]
	0x0328B4C4 BL 0x1C16CF4
	0x0328B4C8 ADRP X0, 0xE99000
	0x0328B4CC LDR X0, [X0 + 0x298]
	0x0328B4D0 BL 0x1C16CF4
	0x0328B4D4 MOVZ W8, 0x1
	0x0328B4D8 STRB W8, [X19 + 0x698]
	0x0328B4DC LDR X0, [X21]
	0x0328B4E0 LDR W8, [X0 + 0xE0]
	0x0328B4E4 CBNZ W8, 0x328B4EC
	0x0328B4E8 BL 0x1C16DFC
	0x0328B4EC MOV X0, X20
	0x0328B4F0 BL 0x3282518
	0x0328B4F4 CBZ X0, 0x328B6B4
	0x0328B4F8 ADRP X9, 0xE99000
	0x0328B4FC LDR X9, [X9 + 0x298]
	0x0328B500 LDR X8, [X0]
	0x0328B504 MOV X21, X0
	0x0328B508 LDR X1, [X9]
	0x0328B50C LDRB W10, [X8 + 0x130]
	0x0328B510 LDRB W9, [X1 + 0x130]
	0x0328B514 CMP W10, W9
	0x0328B518 B.CC 0x328B6AC
	0x0328B51C LDR X8, [X8 + 0xC8]
	0x0328B520 ADD X8, X8, X9, 0x3, LSL
	0x0328B524 LDUR X8, [X8 - 0x8]
	0x0328B528 CMP X8, X1
	0x0328B52C B.NE 0x328B6AC
	0x0328B530 ADRP X25, 0xE98000
	0x0328B534 LDR X25, [X25 + 0xEB8]
	0x0328B538 MOV X0, X31
	0x0328B53C BL 0x33E6FB0
	0x0328B540 LDR X19, [X21 + 0x60]
	0x0328B544 CMP X0, X19
	0x0328B548 B.EQ 0x328B570
	0x0328B54C LDR X0, [X25]
	0x0328B550 LDR W8, [X0 + 0xE0]
	0x0328B554 CBNZ W8, 0x328B55C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x1152000
	009 Move W8, [X20+1672]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0xE99000
	016 Move X0, [X0+3768]
	017 Call 0x1C17CF4
	018 Move X0, 0xE9A000
	019 Move X0, [X0+1480]
	020 Call 0x1C17CF4
	021 Move X0, 0xE9A000
	022 Move X0, [X0+992]
	023 Call 0x1C17CF4
	024 Move X0, 0xE9A000
	025 Move X0, [X0+1000]
	026 Call 0x1C17CF4
	027 Move X0, 0xE9A000
	028 Move X0, [X0+1488]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+1672], W8
	032 Move X8, [X19+40]
	033 Compare X8, 0
	034 JumpIfEqual {44}
	035 Move X20, [X31+48]
	036 Move X19, [X31+56]
	037 Move X22, [X31+32]
	038 Move X21, [X31+40]
	039 Move X24, [X31+16]
	040 Move X23, [X31+24]
	041 Move X0, X8
	042 Move X30, [X31+64]
	043 Return X0
	044 Move X21, 0xE99000
	045 Move X21, [X21+3768]
	046 Move X0, [X21]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1C17DFC
	051 Move X0, [X21]
	052 Move X8, [X0+184]
	053 Move X8, [X8+8]
	054 Compare X8, 0
	055 JumpIfNotEqual {71}
	056 Move X8, 0xE9A000
	057 Move X8, [X8+1488]
	058 Move X0, [X8]
	059 Call 0x1C17F10
	060 Move X1, X31
	061 Move X20, X0
	062 Call ServerContextTerminatorSink..ctor, X0
	063 Move X0, [X21]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {69}
	067 Call 0x1C17DFC
	068 Move X0, [X21]
	069 Move X8, [X0+184]
	070 Move [X8+8], X20
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {76}
	074 Call 0x1C17DFC
	075 Move X0, [X21]
	076 Move X8, [X0+184]
	077 Move X0, [X19+56]
	078 Move X8, [X8+8]
	079 Move [X19+40], X8
	080 Compare X0, 0
	081 JumpIfEqual {35}
	082 Move W9, [X0+24]
	083 Subtract W20, W9, 1
	084 Move X23, 0xE9A000
	085 Move X24, 0xE9A000
	086 Move X23, [X23+1000]
	087 Move X24, [X24+1480]
	088 Move X2, [X23]
	089 Move W1, W20
	090 Call List`1<Object>.get_Item, X0, X1
	091 Move X1, [X24]
	092 Call 0x1C17E00
	093 Compare X0, 0
	094 JumpIfEqual {120}
	095 Move X8, [X0]
	096 Move X22, [X19+40]
	097 Move X1, [X24]
	098 Move X21, X0
	099 NotImplemented "Instruction LDRH not yet implemented."
	100 Compare X9, 0
	101 JumpIfEqual {108}
	102 Move X10, [X8+176]
	103 Add X10, X10, 8
	104 NotImplemented "Instruction LDUR not yet implemented."
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Subtract X9, X9, 1
	107 Add X10, X10, 16
	108 Move X0, X21
	109 Move W2, W31
	110 Call 0x1C5D788
	111 NotImplemented "Instruction LDRSW not yet implemented."
	112 Add X8, X8, X9
	113 Add X0, X8, 312
	114 Move X8, [X0]
	115 Move X2, [X0+8]
	116 Move X0, X21
	117 Move X1, X22
	118 NotImplemented "Instruction BLR not yet implemented."
	119 Move [X19+40], X0
	120 Subtract W20, W20, 1
	121 Move X0, [X19+56]
	122 Compare X0, 0
	123 JumpIfNotEqual {88}
	124 Call 0x1C17F20
	125 Move X8, [X19+40]

Method: System.Runtime.Remoting.Messaging.IMessageSink GetClientContextSinkChain()

Disassembly:
	0x03288154 CBZ X21, 0x32881EC
	0x03288158 LDR X8, [X19 + 0x10]
	0x0328815C LDR X9, [X19 + 0x20]
	0x03288160 STR X8, [X19 + 0x18]
	0x03288164 STR X9, [X19 + 0x40]
	0x03288168 B 0x32881D0
	0x0328816C LDRB W8, [X19 + 0x70]
	0x03288170 CBZ W8, 0x328819C
	0x03288174 MOV X0, X20
	0x03288178 BL 0x1C16D7C
	0x0328817C MOV W21, W0
	0x03288180 MOV X0, X20
	0x03288184 BL 0x1C17238
	0x03288188 TBZ X21, 0x0, 0x32881A8
	0x0328818C TBZ X0, 0x0, 0x32881B8
	0x03288190 ADRP X8, 0xFFFFFFFFFE92D000
	0x03288194 ADD X8, X8, 0x358
	0x03288198 B 0x32881CC
	0x0328819C ADRP X8, 0xFFFFFFFFFE92D000
	0x032881A0 ADD X8, X8, 0x23C
	0x032881A4 B 0x32881CC
	0x032881A8 TBZ X0, 0x0, 0x32881C4
	0x032881AC ADRP X8, 0xFFFFFFFFFE92D000
	0x032881B0 ADD X8, X8, 0x298
	0x032881B4 B 0x32881CC
	0x032881B8 ADRP X8, 0xFFFFFFFFFE92D000
	0x032881BC ADD X8, X8, 0x31C
	0x032881C0 B 0x32881CC
	0x032881C4 ADRP X8, 0xFFFFFFFFFE92D000
	0x032881C8 ADD X8, X8, 0x26C
	0x032881CC STR X8, [X19 + 0x18]
	0x032881D0 ADRP X8, 0xFFFFFFFFFE92D000
	0x032881D4 ADD X8, X8, 0x1EC
	0x032881D8 STR X8, [X19 + 0x38]
	0x032881DC LDP X20, X19, [X31 + 0x20]
	0x032881E0 LDP X22, X21, [X31 + 0x10]
	0x032881E4 LDR X30, [X31], #0x30
	0x032881E8 RET
	0x032881EC ADRP X1, 0xFFFFFFFFFD893000
	0x032881F0 ADD X1, X1, 0xEE3
	0x032881F4 MOV X0, X31
	0x032881F8 BL 0x1C16F3C
	0x032881FC MOV X1, X31
	0x03288200 BL 0x1C16DEC
	0x03288204 SUB X31, X31, 0x20
	0x03288208 STP X31, X30, [X31 + 0x8]
	0x0328820C STR X1, [X31]
	0x03288210 ADD X1, X31, 0x0
	0x03288214 BL 0x1C16CB0
	0x03288218 LDR X30, [X31 + 0x10]
	0x0328821C ADD X31, X31, 0x20
	0x03288220 RET
	0x03288224 STR X30, [X31 - 0x30]!
	0x03288228 STP X22, X21, [X31 + 0x10]
	0x0328822C STP X20, X19, [X31 + 0x20]
	0x03288230 ADRP X22, 0x1154000
	0x03288234 LDRB W8, [X22 + 0x669]
	0x03288238 MOV W21, W2
	0x0328823C MOV X20, X1
	0x03288240 MOV X19, X0
	0x03288244 TBNZ X8, 0x0, 0x3288274
	0x03288248 ADRP X0, 0xE93000
	0x0328824C LDR X0, [X0 + 0x718]
	0x03288250 BL 0x1C16CF4
	0x03288254 ADRP X0, 0xE9C000
	0x03288258 LDR X0, [X0 + 0x500]
	0x0328825C BL 0x1C16CF4
	0x03288260 ADRP X0, 0xE6D000
	0x03288264 LDR X0, [X0 + 0x570]
	0x03288268 BL 0x1C16CF4
	0x0328826C MOVZ W8, 0x1
	0x03288270 STRB W8, [X22 + 0x669]
	0x03288274 TBNZ X21, 0x0, 0x3288368
	0x03288278 CBZ X20, 0x32882A8
	0x0328827C ADRP X8, 0xE93000
	0x03288280 LDR X8, [X8 + 0x718]
	0x03288284 LDR X21, [X8]
	0x03288288 MOV X0, X20
	0x0328828C MOV X1, X21
	0x03288290 BL 0x1C16E00
	0x03288294 MOV X1, X0
	0x03288298 CBNZ X1, 0x32882AC
	0x0328829C MOV X0, X20
	0x032882A0 MOV X1, X21
	0x032882A4 BL 0x1C171E0
	0x032882A8 MOV X1, X31
	0x032882AC LDR X8, [X19 + 0x50]
	0x032882B0 CBZ X8, 0x3288318
	0x032882B4 BL 0x3288408
	0x032882B8 ADRP X21, 0xE6D000
	0x032882BC LDR X21, [X21 + 0x570]
	0x032882C0 MOV X20, X0
	0x032882C4 LDR X0, [X21]
	0x032882C8 LDR W8, [X0 + 0xE0]
	0x032882CC CBNZ W8, 0x32882D8
	0x032882D0 BL 0x1C16DFC
	0x032882D4 LDR X0, [X21]
	0x032882D8 LDR X8, [X0 + 0xB8]
	0x032882DC LDR X1, [X8]
	0x032882E0 MOV X0, X20
	0x032882E4 MOV X2, X31
	0x032882E8 BL 0x3394CE4
	0x032882EC TBZ X0, 0x0, 0x3288368
	0x032882F0 MOV X0, X19
	0x032882F4 MOV X1, X20
	0x032882F8 BL 0x3287B64
	0x032882FC MOVZ W8, 0x2
	0x03288300 STR W8, [X19 + 0x20]
	0x03288304 STR X31, [X19 + 0x48]
	0x03288308 LDP X20, X19, [X31 + 0x20]
	0x0328830C LDP X22, X21, [X31 + 0x10]
	0x03288310 LDR X30, [X31], #0x30
	0x03288314 RET
	0x03288318 BL 0x1C16F20
	0x0328831C B 0x3288330
	0x03288320 B 0x3288330
	0x03288324 B 0x3288330
	0x03288328 B 0x3288330
	0x0328832C B 0x3288330
	0x03288330 MOV X20, X0
	0x03288334 CMP W1, 0x1
	0x03288338 B.NE 0x32883FC
	0x0328833C MOV X0, X20
	0x03288340 BL 0x3EB1AD0
	0x03288344 MOV X20, X0
	0x03288348 ADRP X0, 0xE71000
	0x0328834C LDR X0, [X0 + 0xCC0]
	0x03288350 BL 0x1C16D08
	0x03288354 LDR X8, [X20]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X20, 0x1155000
	009 Move W8, [X20+1673]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {35}
	015 Move X0, 0xE9D000
	016 Move X0, [X0+1240]
	017 Call 0x1C17CF4
	018 Move X0, 0xE9D000
	019 Move X0, [X0+912]
	020 Call 0x1C17CF4
	021 Move X0, 0xE9D000
	022 Move X0, [X0+920]
	023 Call 0x1C17CF4
	024 Move X0, 0xE9D000
	025 Move X0, [X0+928]
	026 Call 0x1C17CF4
	027 Move X0, 0xE9D000
	028 Move X0, [X0+1248]
	029 Call 0x1C17CF4
	030 Move X0, 0xE9D000
	031 Move X0, [X0+944]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X20+1673], W8
	035 Move [X31+8], X31
	036 Move [X31+16], X31
	037 Move [X31+24], X31
	038 Move X8, [X19+48]
	039 Compare X8, 0
	040 JumpIfNotEqual {104}
	041 Move X8, 0xE9D000
	042 Move X8, [X8+1240]
	043 Move X0, [X8]
	044 Call 0x1C17F10
	045 Move X1, X19
	046 Move X2, X31
	047 Move X20, X0
	048 Call ClientContextTerminatorSink..ctor, X0, X1
	049 Move X0, [X19+56]
	050 Move [X19+48], X20
	051 Compare X0, 0
	052 JumpIfEqual {104}
	053 Move X8, 0xE9D000
	054 Move X8, [X8+944]
	055 Move X1, [X8]
	056 Add X8, X31, 8
	057 Call List`1<Object>.GetEnumerator, X0
	058 Move X22, 0xE9D000
	059 Move X23, 0xE9D000
	060 Move X22, [X22+920]
	061 Move X23, [X23+1248]
	062 Move X1, [X22]
	063 Add X0, X31, 8
	064 Call Enumerator<Object>.MoveNext, X0
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {99}
	069 Move X0, [X31+24]
	070 Move X1, [X23]
	071 Call 0x1C17E00
	072 Move X20, X0
	073 Compare X0, 0
	074 JumpIfEqual {62}
	075 Move X8, [X20]
	076 Move X21, [X19+48]
	077 Move X1, [X23]
	078 NotImplemented "Instruction LDRH not yet implemented."
	079 Compare X9, 0
	080 JumpIfEqual {87}
	081 Move X10, [X8+176]
	082 Add X10, X10, 8
	083 NotImplemented "Instruction LDUR not yet implemented."
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Subtract X9, X9, 1
	086 Add X10, X10, 16
	087 Move X0, X20
	088 Move W2, W31
	089 Call 0x1C5D788
	090 NotImplemented "Instruction LDRSW not yet implemented."
	091 Add X8, X8, X9
	092 Add X0, X8, 312
	093 Move X8, [X0]
	094 Move X2, [X0+8]
	095 Move X0, X20
	096 Move X1, X21
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Move [X19+48], X0
	099 Move X8, 0xE9D000
	100 Move X8, [X8+912]
	101 Add X0, X31, 8
	102 Move X1, [X8]
	103 Call Enumerator<Object>.Dispose, X0
	104 Move X0, [X19+48]
	105 Move X20, [X31+64]
	106 Move X19, [X31+72]
	107 Move X22, [X31+48]
	108 Move X21, [X31+56]
	109 Move X30, [X31+32]
	110 Move X23, [X31+40]
	111 Add X31, X31, 80
	112 Return X0
	113 Move X20, X0
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move X0, X20
	116 Call 0x3EB2AD0
	117 Move X21, [X0]
	118 Call 0x3EB2AE0
	119 Move X8, 0xE9D000
	120 Move X8, [X8+912]
	121 Add X0, X31, 8
	122 Move X1, [X8]
	123 Call Enumerator<Object>.Dispose, X0
	124 Compare X21, 0
	125 JumpIfEqual {104}
	126 Move X0, X21
	127 Call 0x1C17F18
	128 Move X21, X31
	129 Move X20, X0
	130 Move X8, 0xE9D000
	131 Move X8, [X8+912]
	132 Move X1, [X8]
	133 Add X0, X31, 8
	134 Call Enumerator<Object>.Dispose, X0
	135 Compare X21, 0
	136 JumpIfNotEqual {139}
	137 Move X0, X20
	138 Call 0x1D2D690
	139 Move X0, X21
	140 Call 0x1C17F18
	141 Call 0x1991590

Method: System.Runtime.Remoting.Messaging.IMessageSink CreateServerObjectSinkChain(System.MarshalByRefObject obj, System.Boolean forceInternalExecute)

Disassembly:
	0x0328455C BL 0x32D5BF8
	0x03284560 TBZ X0, 0x0, 0x3284578
	0x03284564 ADRP X8, 0xE71000
	0x03284568 LDR X8, [X8 + 0x278]
	0x0328456C LDR X8, [X8]
	0x03284570 LDR X8, [X8 + 0xB8]
	0x03284574 B 0x32845B8
	0x03284578 LDR X8, [X19]
	0x0328457C MOV X0, X19
	0x03284580 LDP X9, X1, [X8 + 0x1B8]
	0x03284584 BLR X9
	0x03284588 CBZ X0, 0x32845C8
	0x0328458C LDR X8, [X0]
	0x03284590 LDR X9, [X8 + 0x2F8]
	0x03284594 LDR X1, [X8 + 0x300]
	0x03284598 BLR X9
	0x0328459C CBZ X0, 0x32845C8
	0x032845A0 LDR X8, [X0]
	0x032845A4 LDR X9, [X8 + 0x258]
	0x032845A8 LDR X1, [X8 + 0x260]
	0x032845AC BLR X9
	0x032845B0 CBZ X0, 0x32845C8
	0x032845B4 ADD X8, X0, 0x10
	0x032845B8 LDR X0, [X8]
	0x032845BC LDP X20, X19, [X31 + 0x10]
	0x032845C0 LDP X30, X21, [X31], #0x20
	0x032845C4 RET
	0x032845C8 BL 0x1C16F20
	0x032845CC STP X30, X23, [X31 - 0x30]!
	0x032845D0 STP X22, X21, [X31 + 0x10]
	0x032845D4 STP X20, X19, [X31 + 0x20]
	0x032845D8 ADRP X22, 0x1158000
	0x032845DC ADRP X23, 0xE9F000
	0x032845E0 LDRB W8, [X22 + 0x63F]
	0x032845E4 LDR X23, [X23 + 0xD68]
	0x032845E8 MOV X19, X2
	0x032845EC MOV X20, X1
	0x032845F0 MOV X21, X0
	0x032845F4 TBNZ X8, 0x0, 0x3284618
	0x032845F8 ADRP X0, 0xE9F000
	0x032845FC LDR X0, [X0 + 0xD68]
	0x03284600 BL 0x1C16CF4
	0x03284604 ADRP X0, 0xE9F000
	0x03284608 LDR X0, [X0 + 0xDB0]
	0x0328460C BL 0x1C16CF4
	0x03284610 MOVZ W8, 0x1
	0x03284614 STRB W8, [X22 + 0x63F]
	0x03284618 LDR X0, [X23]
	0x0328461C LDR W8, [X0 + 0xE0]
	0x03284620 CBNZ W8, 0x3284628
	0x03284624 BL 0x1C16DFC
	0x03284628 MOV X0, X21
	0x0328462C BL 0x3273D58
	0x03284630 CBZ X0, 0x3284694
	0x03284634 ADRP X8, 0xE9F000
	0x03284638 LDR X8, [X8 + 0xDB0]
	0x0328463C LDR X1, [X8]
	0x03284640 LDR X8, [X0]
	0x03284644 CMP X8, X1
	0x03284648 B.NE 0x3284698
	0x0328464C LDRB W21, [X0 + 0x51]
	0x03284650 CBZ W21, 0x328466C
	0x03284654 LDR X8, [X0 + 0x30]
	0x03284658 STR X8, [X20]
	0x0328465C LDR X8, [X0]
	0x03284660 LDP X9, X1, [X8 + 0x188]
	0x03284664 BLR X9
	0x03284668 B 0x3284674
	0x0328466C MOV X0, X31
	0x03284670 STR X31, [X20]
	0x03284674 CMP W21, 0x0
	0x03284678 STR X0, [X19]
	0x0328467C LDP X20, X19, [X31 + 0x20]
	0x03284680 LDP X22, X21, [X31 + 0x10]
	0x03284684 CSET W8, NE
	0x03284688 MOV W0, W8
	0x0328468C LDP X30, X23, [X31], #0x30
	0x03284690 RET
	0x03284694 BL 0x1C16F20
	0x03284698 BL 0x1C171E0
	0x0328469C STR X30, [X31 - 0x20]!
	0x032846A0 STP X20, X19, [X31 + 0x10]
	0x032846A4 ADRP X20, 0x1158000
	0x032846A8 LDRB W8, [X20 + 0x640]
	0x032846AC MOV X19, X0
	0x032846B0 TBNZ X8, 0x0, 0x32846C8
	0x032846B4 ADRP X0, 0xEA0000
	0x032846B8 LDR X0, [X0 + 0x198]
	0x032846BC BL 0x1C16CF4
	0x032846C0 MOVZ W8, 0x1
	0x032846C4 STRB W8, [X20 + 0x640]
	0x032846C8 CBZ X19, 0x328472C
	0x032846CC LDR X8, [X19]
	0x032846D0 MOV X0, X19
	0x032846D4 LDP X9, X1, [X8 + 0x1B8]
	0x032846D8 BLR X9
	0x032846DC CBZ X0, 0x328472C
	0x032846E0 LDR X8, [X0]
	0x032846E4 ADRP X20, 0xEA0000
	0x032846E8 LDR X9, [X8 + 0x2E8]
	0x032846EC LDR X1, [X8 + 0x2F0]
	0x032846F0 LDR X20, [X20 + 0x198]
	0x032846F4 BLR X9
	0x032846F8 LDR X8, [X20]
	0x032846FC MOV X20, X0
	0x03284700 LDR W9, [X8 + 0xE0]
	0x03284704 CBNZ W9, 0x3284710

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0x1159000
	010 Move X25, 0xEA1000
	011 Move X23, 0xEA1000
	012 Move X24, 0xEA1000
	013 Move W8, [X22+1674]
	014 Move X25, [X25+960]
	015 Move X23, [X23+968]
	016 Move X24, [X24+976]
	017 Move W21, W2
	018 Move X19, X1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {44}
	024 Move X0, 0xEA1000
	025 Move X0, [X0+984]
	026 Call 0x1C17CF4
	027 Move X0, 0xEA1000
	028 Move X0, [X0+976]
	029 Call 0x1C17CF4
	030 Move X0, 0xEA1000
	031 Move X0, [X0+992]
	032 Call 0x1C17CF4
	033 Move X0, 0xEA1000
	034 Move X0, [X0+1000]
	035 Call 0x1C17CF4
	036 Move X0, 0xEA1000
	037 Move X0, [X0+968]
	038 Call 0x1C17CF4
	039 Move X0, 0xEA1000
	040 Move X0, [X0+960]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X22+1674], W8
	044 Move X0, [X25]
	045 Call 0x1C17F10
	046 And W2, W21, 1
	047 Move X1, X19
	048 Move X3, X31
	049 Move X22, X0
	050 Call StackBuilderSink..ctor, X0, X1, X2
	051 Move X0, [X23]
	052 Call 0x1C17F10
	053 Move X1, X22
	054 Move X2, X31
	055 Move X23, X0
	056 Call ServerObjectTerminatorSink..ctor, X0, X1
	057 Move X0, [X24]
	058 Call 0x1C17F10
	059 Move X1, X31
	060 Move X21, X0
	061 Call Object..ctor, X0
	062 Move [X21+16], X23
	063 Move X0, [X20+56]
	064 Compare X0, 0
	065 JumpIfEqual {109}
	066 Move W8, [X0+24]
	067 Subtract W22, W8, 1
	068 Move X24, 0xEA1000
	069 Move X25, 0xEA1000
	070 Move X24, [X24+1000]
	071 Move X25, [X25+984]
	072 Move X2, [X24]
	073 Move W1, W22
	074 Call List`1<Object>.get_Item, X0, X1
	075 Move X1, [X25]
	076 Call 0x1C17E00
	077 Compare X0, 0
	078 JumpIfEqual {104}
	079 Move X8, [X0]
	080 Move X1, [X25]
	081 Move X23, X0
	082 NotImplemented "Instruction LDRH not yet implemented."
	083 Compare X9, 0
	084 JumpIfEqual {91}
	085 Move X10, [X8+176]
	086 Add X10, X10, 8
	087 NotImplemented "Instruction LDUR not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Subtract X9, X9, 1
	090 Add X10, X10, 16
	091 Move X0, X23
	092 Move W2, W31
	093 Call 0x1C5D788
	094 NotImplemented "Instruction LDRSW not yet implemented."
	095 Add X8, X8, X9
	096 Add X0, X8, 312
	097 Move X8, [X0]
	098 Move X3, [X0+8]
	099 Move X0, X23
	100 Move X1, X19
	101 Move X2, X21
	102 NotImplemented "Instruction BLR not yet implemented."
	103 Move X21, X0
	104 Subtract W22, W22, 1
	105 Move X0, [X20+56]
	106 Compare X0, 0
	107 JumpIfNotEqual {72}
	108 Call 0x1C17F20
	109 Move X0, X21
	110 Move X20, [X31+48]
	111 Move X19, [X31+56]
	112 Move X22, [X31+32]
	113 Move X21, [X31+40]
	114 Move X24, [X31+16]
	115 Move X23, [X31+24]
	116 Move X30, [X31+64]
	117 Move X25, [X31+72]
	118 Return X0

Method: System.Runtime.Remoting.Messaging.IMessageSink CreateEnvoySink(System.MarshalByRefObject serverObject)

Disassembly:
	0x03283EF8 LDRH W9, [X8 + 0x12E]
	0x03283EFC LDR X1, [X10]
	0x03283F00 CBZ X9, 0x3283F24
	0x03283F04 LDR X10, [X8 + 0xB0]
	0x03283F08 ADD X10, X10, 0x8
	0x03283F0C LDUR X11, [X10 - 0x8]
	0x03283F10 CMP X11, X1
	0x03283F14 B.EQ 0x3283F34
	0x03283F18 SUBS X9, X9, 0x1
	0x03283F1C ADD X10, X10, 0x10
	0x03283F20 B.NE 0x3283F0C
	0x03283F24 MOVZ W2, 0x1
	0x03283F28 MOV X0, X21
	0x03283F2C BL 0x1C5C788
	0x03283F30 B 0x3283F44
	0x03283F34 LDR W9, [X10]
	0x03283F38 ADD W9, W9, 0x1
	0x03283F3C ADD X8, X8, W9, 0x4, SXTW
	0x03283F40 ADD X0, X8, 0x138
	0x03283F44 LDP X4, X3, [X0]
	0x03283F48 MOV X0, X21
	0x03283F4C MOV X1, X19
	0x03283F50 MOV X2, X20
	0x03283F54 LDP X20, X19, [X31 + 0x30]
	0x03283F58 LDP X22, X21, [X31 + 0x20]
	0x03283F5C LDP X24, X23, [X31 + 0x10]
	0x03283F60 LDP X30, X25, [X31], #0x40
	0x03283F64 BR X4
	0x03283F68 BL 0x1C16F20
	0x03283F6C MOV X0, X22
	0x03283F70 BL 0x1C171E0
	0x03283F74 STP X30, X21, [X31 - 0x20]!
	0x03283F78 STP X20, X19, [X31 + 0x10]
	0x03283F7C MOV X20, X1
	0x03283F80 MOV X1, X31
	0x03283F84 MOV X19, X2
	0x03283F88 MOV X21, X0
	0x03283F8C BL 0x33BDD8C
	0x03283F90 STP X20, X19, [X21 + 0x10]
	0x03283F94 LDP X20, X19, [X31 + 0x10]
	0x03283F98 LDP X30, X21, [X31], #0x20
	0x03283F9C RET
	0x03283FA0 STP X30, X21, [X31 - 0x20]!
	0x03283FA4 STP X20, X19, [X31 + 0x10]
	0x03283FA8 ADRP X21, 0x1159000
	0x03283FAC LDRB W8, [X21 + 0x638]
	0x03283FB0 MOV X19, X1
	0x03283FB4 MOV X20, X0
	0x03283FB8 TBNZ X8, 0x0, 0x3283FDC
	0x03283FBC ADRP X0, 0xE70000
	0x03283FC0 LDR X0, [X0 + 0xE00]
	0x03283FC4 BL 0x1C16CF4
	0x03283FC8 ADRP X0, 0xEA1000
	0x03283FCC LDR X0, [X0 + 0x3B8]
	0x03283FD0 BL 0x1C16CF4
	0x03283FD4 MOVZ W8, 0x1
	0x03283FD8 STRB W8, [X21 + 0x638]
	0x03283FDC LDR X21, [X20 + 0x18]
	0x03283FE0 CBZ X21, 0x32840B8
	0x03283FE4 ADRP X10, 0xE70000
	0x03283FE8 LDR X8, [X21]
	0x03283FEC LDR X10, [X10 + 0xE00]
	0x03283FF0 LDRH W9, [X8 + 0x12E]
	0x03283FF4 LDR X1, [X10]
	0x03283FF8 CBZ X9, 0x328401C
	0x03283FFC LDR X10, [X8 + 0xB0]
	0x03284000 ADD X10, X10, 0x8
	0x03284004 LDUR X11, [X10 - 0x8]
	0x03284008 CMP X11, X1
	0x0328400C B.EQ 0x328402C
	0x03284010 SUBS X9, X9, 0x1
	0x03284014 ADD X10, X10, 0x10
	0x03284018 B.NE 0x3284004
	0x0328401C MOV X0, X21
	0x03284020 MOV W2, W31
	0x03284024 BL 0x1C5C788
	0x03284028 B 0x3284038
	0x0328402C LDRSW X9, [X10]
	0x03284030 ADD X8, X8, X9, 0x4, LSL
	0x03284034 ADD X0, X8, 0x138
	0x03284038 LDP X8, X1, [X0]
	0x0328403C MOV X0, X21
	0x03284040 BLR X8
	0x03284044 LDR X20, [X20 + 0x10]
	0x03284048 CBZ X20, 0x32840B8
	0x0328404C ADRP X10, 0xEA0000
	0x03284050 LDR X8, [X20]
	0x03284054 LDR X10, [X10 + 0x3B8]
	0x03284058 LDRH W9, [X8 + 0x12E]
	0x0328405C LDR X1, [X10]
	0x03284060 CBZ X9, 0x3284084
	0x03284064 LDR X10, [X8 + 0xB0]
	0x03284068 ADD X10, X10, 0x8
	0x0328406C LDUR X11, [X10 - 0x8]
	0x03284070 CMP X11, X1
	0x03284074 B.EQ 0x3284094
	0x03284078 SUBS X9, X9, 0x1
	0x0328407C ADD X10, X10, 0x10
	0x03284080 B.NE 0x328406C
	0x03284084 MOV X0, X20
	0x03284088 MOV W2, W31
	0x0328408C BL 0x1C5C788
	0x03284090 B 0x32840A0
	0x03284094 LDRSW X9, [X10]
	0x03284098 ADD X8, X8, X9, 0x4, LSL
	0x0328409C ADD X0, X8, 0x138
	0x032840A0 LDP X3, X2, [X0]
	0x032840A4 MOV X0, X20
	0x032840A8 MOV X1, X19
	0x032840AC LDP X20, X19, [X31 + 0x10]
	0x032840B0 LDP X30, X21, [X31], #0x20
	0x032840B4 BR X3
	0x032840B8 BL 0x1C16F20
	0x032840BC STP X30, X19, [X31 - 0x10]!
	0x032840C0 ADRP X0, 0xE6F000
	0x032840C4 LDR X0, [X0 + 0xB40]
	0x032840C8 BL 0x1C16D08
	0x032840CC BL 0x1C16F10
	0x032840D0 MOV X1, X31
	0x032840D4 MOV X19, X0
	0x032840D8 BL 0x3380310
	0x032840DC ADRP X0, 0xEA0000
	0x032840E0 LDR X0, [X0 + 0x3F8]
	0x032840E4 BL 0x1C16D08
	0x032840E8 MOV X1, X0
	0x032840EC MOV X0, X19
	0x032840F0 BL 0x1C16DEC
	0x032840F4 STR X30, [X31 - 0x20]!
	0x032840F8 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X22, 0x115A000
	010 Move X21, 0xEA2000
	011 Move W8, [X22+1675]
	012 Move X21, [X21+904]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {39}
	019 Move X0, 0xEA2000
	020 Move X0, [X0+912]
	021 Call 0x1C17CF4
	022 Move X0, 0xEA2000
	023 Move X0, [X0+920]
	024 Call 0x1C17CF4
	025 Move X0, 0xEA2000
	026 Move X0, [X0+928]
	027 Call 0x1C17CF4
	028 Move X0, 0xEA2000
	029 Move X0, [X0+904]
	030 Call 0x1C17CF4
	031 Move X0, 0xEA2000
	032 Move X0, [X0+936]
	033 Call 0x1C17CF4
	034 Move X0, 0xEA2000
	035 Move X0, [X0+944]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X22+1675], W8
	039 Move X0, [X21]
	040 Move [X31+8], X31
	041 Move [X31+16], X31
	042 Move [X31+24], X31
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {48}
	046 Call 0x1C17DFC
	047 Move X0, [X21]
	048 Move X8, [X0+184]
	049 Move X0, [X20+56]
	050 Move X21, [X8]
	051 Compare X0, 0
	052 JumpIfEqual {105}
	053 Move X8, 0xEA2000
	054 Move X8, [X8+944]
	055 Move X23, 0xEA2000
	056 Move X24, 0xEA2000
	057 Move X22, 0xEA2000
	058 Move X1, [X8]
	059 Move X23, [X23+920]
	060 Move X24, [X24+936]
	061 Move X22, [X22+912]
	062 Add X8, X31, 8
	063 Call List`1<Object>.GetEnumerator, X0
	064 Move X20, X21
	065 Move X1, [X23]
	066 Add X0, X31, 8
	067 Call Enumerator<Object>.MoveNext, X0
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {102}
	072 Move X0, [X31+24]
	073 Move X1, [X24]
	074 Call 0x1C17E00
	075 Move X21, X0
	076 Compare X0, 0
	077 JumpIfEqual {65}
	078 Move X8, [X21]
	079 Move X1, [X24]
	080 NotImplemented "Instruction LDRH not yet implemented."
	081 Compare X9, 0
	082 JumpIfEqual {89}
	083 Move X10, [X8+176]
	084 Add X10, X10, 8
	085 NotImplemented "Instruction LDUR not yet implemented."
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Subtract X9, X9, 1
	088 Add X10, X10, 16
	089 Move X0, X21
	090 Move W2, W31
	091 Call 0x1C5D788
	092 NotImplemented "Instruction LDRSW not yet implemented."
	093 Add X8, X8, X9
	094 Add X0, X8, 312
	095 Move X8, [X0]
	096 Move X3, [X0+8]
	097 Move X0, X21
	098 Move X1, X19
	099 Move X2, X20
	100 NotImplemented "Instruction BLR not yet implemented."
	101 Move X21, X0
	102 Move X1, [X22]
	103 Add X0, X31, 8
	104 Call Enumerator<Object>.Dispose, X0
	105 Move X20, X21
	106 Move X0, X20
	107 Move X20, [X31+80]
	108 Move X19, [X31+88]
	109 Move X22, [X31+64]
	110 Move X21, [X31+72]
	111 Move X24, [X31+48]
	112 Move X23, [X31+56]
	113 Move X30, [X31+32]
	114 Add X31, X31, 96
	115 Return X0
	116 Move X19, X0
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move X0, X19
	119 Call 0x3EB2AD0
	120 Move X21, [X0]
	121 Call 0x3EB2AE0
	122 Move X1, [X22]
	123 Add X0, X31, 8
	124 Call Enumerator<Object>.Dispose, X0
	125 Compare X21, 0
	126 JumpIfEqual {106}
	127 Move X0, X21
	128 Call 0x1C17F18
	129 Move X21, X31
	130 Move X19, X0
	131 Move X1, [X22]
	132 Add X0, X31, 8
	133 Call Enumerator<Object>.Dispose, X0
	134 Compare X21, 0
	135 JumpIfNotEqual {138}
	136 Move X0, X19
	137 Call 0x1D2D690
	138 Move X0, X21
	139 Call 0x1C17F18
	140 Call 0x1991590

Method: System.Runtime.Remoting.Contexts.Context SwitchToContext(System.Runtime.Remoting.Contexts.Context newContext)

Disassembly:
	0x0328B558 BL 0x1C16DFC
	0x0328B55C MOV X0, X19

ISIL:
	001 Move X1, X31
	002 Call AppDomain.InternalSetContext, X0
	003 Return X0

Method: System.Runtime.Remoting.Contexts.Context CreateNewContext(System.Runtime.Remoting.Activation.IConstructionCallMessage msg)

Disassembly:
	0x0328B560 MOV X1, X31
	0x0328B564 BL 0x33C0284
	0x0328B568 MOV X19, X0
	0x0328B56C B 0x328B574
	0x0328B570 MOV X19, X31
	0x0328B574 LDR X0, [X25]
	0x0328B578 LDR W8, [X0 + 0xE0]
	0x0328B57C CBNZ W8, 0x328B584
	0x0328B580 BL 0x1C16DFC
	0x0328B584 MOVZ W0, 0x1
	0x0328B588 MOV X1, X20
	0x0328B58C MOV W2, W31
	0x0328B590 MOV W3, W31
	0x0328B594 BL 0x3289B90
	0x0328B598 MOV X0, X31
	0x0328B59C BL 0x33E6FB0
	0x0328B5A0 CBZ X0, 0x328B6C4
	0x0328B5A4 MOVZ W1, 0x1
	0x0328B5A8 MOV X2, X20
	0x0328B5AC MOV W3, W31
	0x0328B5B0 MOV W4, W31
	0x0328B5B4 BL 0x3289D34
	0x0328B5B8 LDR X0, [X21 + 0x60]
	0x0328B5BC CBZ X0, 0x328B6C8
	0x0328B5C0 BL 0x328A398
	0x0328B5C4 MOV X21, X0
	0x0328B5C8 CBZ X0, 0x328B6CC
	0x0328B5CC ADRP X10, 0xE99000
	0x0328B5D0 LDR X8, [X21]
	0x0328B5D4 LDR X10, [X10 + 0x3B8]
	0x0328B5D8 LDRH W9, [X8 + 0x12E]
	0x0328B5DC LDR X1, [X10]
	0x0328B5E0 CBZ X9, 0x328B604
	0x0328B5E4 LDR X10, [X8 + 0xB0]
	0x0328B5E8 ADD X10, X10, 0x8
	0x0328B5EC LDUR X11, [X10 - 0x8]
	0x0328B5F0 CMP X11, X1
	0x0328B5F4 B.EQ 0x328B614
	0x0328B5F8 SUBS X9, X9, 0x1
	0x0328B5FC ADD X10, X10, 0x10
	0x0328B600 B.NE 0x328B5EC
	0x0328B604 MOV X0, X21
	0x0328B608 MOV W2, W31
	0x0328B60C BL 0x1C5C788
	0x0328B610 B 0x328B620
	0x0328B614 LDRSW X9, [X10]
	0x0328B618 ADD X8, X8, X9, 0x4, LSL
	0x0328B61C ADD X0, X8, 0x138
	0x0328B620 LDP X8, X2, [X0]
	0x0328B624 MOV X0, X21
	0x0328B628 MOV X1, X20
	0x0328B62C BLR X8
	0x0328B630 MOV X21, X0
	0x0328B634 MOV W0, W31
	0x0328B638 MOV X1, X20
	0x0328B63C MOV W2, W31
	0x0328B640 MOV W3, W31
	0x0328B644 BL 0x3289B90
	0x0328B648 MOV X0, X31
	0x0328B64C BL 0x33E6FB0
	0x0328B650 CBZ X0, 0x328B6D0
	0x0328B654 MOV W1, W31
	0x0328B658 MOV X2, X20
	0x0328B65C MOV W3, W31
	0x0328B660 MOV W4, W31
	0x0328B664 BL 0x3289D34
	0x0328B668 MOV X20, X31
	0x0328B66C MOV X22, X21
	0x0328B670 CBZ X19, 0x328B690
	0x0328B674 LDR X0, [X25]
	0x0328B678 LDR W8, [X0 + 0xE0]
	0x0328B67C CBNZ W8, 0x328B684
	0x0328B680 BL 0x1C16DFC
	0x0328B684 MOV X0, X19
	0x0328B688 MOV X1, X31
	0x0328B68C BL 0x33C0284
	0x0328B690 CBNZ X20, 0x328B6BC
	0x0328B694 MOV X0, X22
	0x0328B698 LDP X20, X19, [X31 + 0x30]
	0x0328B69C LDP X22, X21, [X31 + 0x20]
	0x0328B6A0 LDP X24, X23, [X31 + 0x10]
	0x0328B6A4 LDP X30, X25, [X31], #0x40
	0x0328B6A8 RET
	0x0328B6AC MOV X0, X21
	0x0328B6B0 BL 0x1C171E0
	0x0328B6B4 BL 0x33E6FB0
	0x0328B6B8 BL 0x1C16F20
	0x0328B6BC MOV X0, X20
	0x0328B6C0 BL 0x1C16F18
	0x0328B6C4 BL 0x1C16F20
	0x0328B6C8 BL 0x1C16F20
	0x0328B6CC BL 0x1C16F20
	0x0328B6D0 BL 0x1C16F20
	0x0328B6D4 B 0x328B6F4
	0x0328B6D8 B 0x328B6F4
	0x0328B6DC B 0x328B6FC
	0x0328B6E0 B 0x328B6FC
	0x0328B6E4 B 0x328B6FC
	0x0328B6E8 B 0x328B6FC
	0x0328B6EC B 0x328B6FC
	0x0328B6F0 B 0x328B6FC
	0x0328B6F4 MOV X22, X0
	0x0328B6F8 B 0x328B704
	0x0328B6FC MOV X22, X0
	0x0328B700 MOV X21, X31
	0x0328B704 CMP W1, 0x1
	0x0328B708 B.NE 0x328B7E0
	0x0328B70C MOV X0, X22
	0x0328B710 BL 0x3EB1AD0
	0x0328B714 MOV X22, X0
	0x0328B718 ADRP X0, 0xE68000
	0x0328B71C LDR X0, [X0 + 0x7D0]
	0x0328B720 BL 0x1C16D08
	0x0328B724 LDR X8, [X22]
	0x0328B728 LDR X1, [X8]
	0x0328B72C BL 0x1C17270
	0x0328B730 TBZ X0, 0x0, 0x328B7A0
	0x0328B734 LDR X23, [X22]
	0x0328B738 BL 0x3EB1AE0
	0x0328B73C ADRP X0, 0xE99000
	0x0328B740 LDR X0, [X0 + 0x280]
	0x0328B744 BL 0x1C16D08
	0x0328B748 BL 0x1C16F10
	0x0328B74C MOV X22, X0
	0x0328B750 ADRP X0, 0xE99000
	0x0328B754 LDR X0, [X0 + 0x458]
	0x0328B758 BL 0x1C16D08
	0x0328B75C CBZ X20, 0x328B784
	0x0328B760 MOV X24, X0
	0x0328B764 MOV X0, X20
	0x0328B768 MOV X1, X24
	0x0328B76C BL 0x1C16E00
	0x0328B770 MOV X2, X0
	0x0328B774 CBNZ X0, 0x328B788
	0x0328B778 MOV X0, X20
	0x0328B77C MOV X1, X24
	0x0328B780 BL 0x1C171E0
	0x0328B784 MOV X2, X31
	0x0328B788 MOV X0, X22
	0x0328B78C MOV X1, X23
	0x0328B790 MOV X3, X31
	0x0328B794 BL 0x328EBC0
	0x0328B798 MOV X20, X31
	0x0328B79C B 0x328B670
	0x0328B7A0 MOVZ W0, 0x8
	0x0328B7A4 BL 0x3EB1AF0
	0x0328B7A8 LDR X8, [X22]
	0x0328B7AC STR X8, [X0]
	0x0328B7B0 ADRP X1, 0xC29000
	0x0328B7B4 ADD X1, X1, 0xE58
	0x0328B7B8 MOV X2, X31
	0x0328B7BC BL 0x3EB1B00
	0x0328B7C0 MOV X22, X0
	0x0328B7C4 B 0x328B7E0
	0x0328B7C8 MOV X20, X1
	0x0328B7CC MOV X22, X0
	0x0328B7D0 BL 0x3EB1AE0
	0x0328B7D4 MOV W1, W20
	0x0328B7D8 B 0x328B7E0
	0x0328B7DC MOV X22, X0
	0x0328B7E0 MOVZ W8, 0x1
	0x0328B7E4 CMP W1, W8
	0x0328B7E8 B.NE 0x328B800
	0x0328B7EC MOV X0, X22
	0x0328B7F0 BL 0x3EB1AD0
	0x0328B7F4 LDR X20, [X0]
	0x0328B7F8 BL 0x3EB1AE0
	0x0328B7FC B 0x328B66C
	0x0328B800 MOV X20, X31
	0x0328B804 B 0x328B80C
	0x0328B808 MOV X22, X0
	0x0328B80C CBZ X19, 0x328B82C
	0x0328B810 LDR X0, [X25]
	0x0328B814 LDR W8, [X0 + 0xE0]
	0x0328B818 CBNZ W8, 0x328B820
	0x0328B81C BL 0x1C16DFC
	0x0328B820 MOV X0, X19
	0x0328B824 MOV X1, X31
	0x0328B828 BL 0x33C0284
	0x0328B82C CBNZ X20, 0x328B838
	0x0328B830 MOV X0, X22
	0x0328B834 BL 0x1D2C690
	0x0328B838 MOV X0, X20
	0x0328B83C BL 0x1C16F18
	0x0328B840 BL 0x1990590
	0x0328B844 STR X30, [X31 - 0x40]!
	0x0328B848 STP X24, X23, [X31 + 0x10]
	0x0328B84C STP X22, X21, [X31 + 0x20]
	0x0328B850 STP X20, X19, [X31 + 0x30]
	0x0328B854 ADRP X19, 0x1151000
	0x0328B858 ADRP X22, 0xE98000
	0x0328B85C LDRB W8, [X19 + 0x699]
	0x0328B860 LDR X22, [X22 + 0xE68]
	0x0328B864 MOV X21, X2
	0x0328B868 MOV X20, X1
	0x0328B86C TBNZ X8, 0x0, 0x328B8A8
	0x0328B870 ADRP X0, 0xE99000
	0x0328B874 LDR X0, [X0 + 0x600]
	0x0328B878 BL 0x1C16CF4
	0x0328B87C ADRP X0, 0xE98000
	0x0328B880 LDR X0, [X0 + 0xEB8]
	0x0328B884 BL 0x1C16CF4
	0x0328B888 ADRP X0, 0xE98000
	0x0328B88C LDR X0, [X0 + 0xE68]
	0x0328B890 BL 0x1C16CF4
	0x0328B894 ADRP X0, 0xE99000
	0x0328B898 LDR X0, [X0 + 0x298]
	0x0328B89C BL 0x1C16CF4
	0x0328B8A0 MOVZ W8, 0x1
	0x0328B8A4 STRB W8, [X19 + 0x699]
	0x0328B8A8 LDR X0, [X22]
	0x0328B8AC LDR W8, [X0 + 0xE0]
	0x0328B8B0 CBNZ W8, 0x328B8B8
	0x0328B8B4 BL 0x1C16DFC
	0x0328B8B8 MOV X0, X20
	0x0328B8BC BL 0x3282518
	0x0328B8C0 CBZ X0, 0x328BA60
	0x0328B8C4 ADRP X9, 0xE99000
	0x0328B8C8 LDR X9, [X9 + 0x298]
	0x0328B8CC LDR X8, [X0]
	0x0328B8D0 MOV X22, X0
	0x0328B8D4 LDR X1, [X9]
	0x0328B8D8 LDRB W10, [X8 + 0x130]
	0x0328B8DC LDRB W9, [X1 + 0x130]
	0x0328B8E0 CMP W10, W9
	0x0328B8E4 B.CC 0x328BA58
	0x0328B8E8 LDR X8, [X8 + 0xC8]
	0x0328B8EC ADD X8, X8, X9, 0x3, LSL
	0x0328B8F0 LDUR X8, [X8 - 0x8]
	0x0328B8F4 CMP X8, X1
	0x0328B8F8 B.NE 0x328BA58
	0x0328B8FC ADRP X24, 0xE98000
	0x0328B900 LDR X24, [X24 + 0xEB8]
	0x0328B904 MOV X0, X31
	0x0328B908 BL 0x33E6FB0
	0x0328B90C LDR X19, [X22 + 0x60]
	0x0328B910 CMP X0, X19
	0x0328B914 B.EQ 0x328B93C
	0x0328B918 LDR X0, [X24]
	0x0328B91C LDR W8, [X0 + 0xE0]
	0x0328B920 CBNZ W8, 0x328B928
	0x0328B924 BL 0x1C16DFC
	0x0328B928 MOV X0, X19
	0x0328B92C MOV X1, X31
	0x0328B930 BL 0x33C0284
	0x0328B934 MOV X19, X0
	0x0328B938 B 0x328B940
	0x0328B93C MOV X19, X31
	0x0328B940 LDR X0, [X24]
	0x0328B944 LDR W8, [X0 + 0xE0]
	0x0328B948 CBNZ W8, 0x328B950
	0x0328B94C BL 0x1C16DFC
	0x0328B950 MOVZ W0, 0x1
	0x0328B954 MOVZ W3, 0x1
	0x0328B958 MOV X1, X20
	0x0328B95C MOV W2, W31
	0x0328B960 BL 0x3289B90
	0x0328B964 MOV X0, X31
	0x0328B968 BL 0x33E6FB0
	0x0328B96C CBZ X0, 0x328BA70
	0x0328B970 MOVZ W1, 0x1
	0x0328B974 MOV X2, X20
	0x0328B978 MOV W3, W31
	0x0328B97C MOV W4, W31
	0x0328B980 BL 0x3289D34
	0x0328B984 CBZ X21, 0x328B9B0
	0x0328B988 ADRP X8, 0xE99000
	0x0328B98C LDR X8, [X8 + 0x600]
	0x0328B990 LDR X0, [X8]
	0x0328B994 BL 0x1C16F10
	0x0328B998 MOV X23, X0
	0x0328B99C MOV X1, X31
	0x0328B9A0 BL 0x33BDD8C
	0x0328B9A4 STP X21, X19, [X23 + 0x10]
	0x0328B9A8 STR X20, [X23 + 0x20]
	0x0328B9AC B 0x328B9B4
	0x0328B9B0 MOV X23, X31
	0x0328B9B4 LDR X8, [X22]
	0x0328B9B8 LDP X9, X3, [X8 + 0x1A8]
	0x0328B9BC MOV X0, X22
	0x0328B9C0 MOV X1, X20
	0x0328B9C4 MOV X2, X23
	0x0328B9C8 BLR X9
	0x0328B9CC MOV X21, X0
	0x0328B9D0 CBNZ X23, 0x328BA18
	0x0328B9D4 LDR X0, [X24]
	0x0328B9D8 LDR W8, [X0 + 0xE0]
	0x0328B9DC CBNZ W8, 0x328B9E4
	0x0328B9E0 BL 0x1C16DFC
	0x0328B9E4 MOV W0, W31
	0x0328B9E8 MOV X1, X20
	0x0328B9EC MOV W2, W31
	0x0328B9F0 MOV W3, W31
	0x0328B9F4 BL 0x3289B90
	0x0328B9F8 MOV X0, X31
	0x0328B9FC BL 0x33E6FB0
	0x0328BA00 CBZ X0, 0x328BA74
	0x0328BA04 MOV W1, W31
	0x0328BA08 MOV X2, X20
	0x0328BA0C MOV W3, W31
	0x0328BA10 MOV W4, W31
	0x0328BA14 BL 0x3289D34
	0x0328BA18 MOV X20, X31
	0x0328BA1C CBZ X19, 0x328BA3C
	0x0328BA20 LDR X0, [X24]
	0x0328BA24 LDR W8, [X0 + 0xE0]
	0x0328BA28 CBNZ W8, 0x328BA30
	0x0328BA2C BL 0x1C16DFC
	0x0328BA30 MOV X0, X19
	0x0328BA34 MOV X1, X31
	0x0328BA38 BL 0x33C0284
	0x0328BA3C CBNZ X20, 0x328BA68
	0x0328BA40 MOV X0, X21
	0x0328BA44 LDP X20, X19, [X31 + 0x30]
	0x0328BA48 LDP X22, X21, [X31 + 0x20]
	0x0328BA4C LDP X24, X23, [X31 + 0x10]
	0x0328BA50 LDR X30, [X31], #0x40
	0x0328BA54 RET
	0x0328BA58 MOV X0, X22
	0x0328BA5C BL 0x1C171E0
	0x0328BA60 BL 0x33E6FB0
	0x0328BA64 BL 0x1C16F20
	0x0328BA68 MOV X0, X20
	0x0328BA6C BL 0x1C16F18
	0x0328BA70 BL 0x1C16F20
	0x0328BA74 BL 0x1C16F20
	0x0328BA78 B 0x328BA80
	0x0328BA7C B 0x328BA80
	0x0328BA80 MOV X22, X0
	0x0328BA84 MOV X21, X31
	0x0328BA88 B 0x328BAAC
	0x0328BA8C MOV X22, X0
	0x0328BA90 MOV X21, X23
	0x0328BA94 B 0x328BAAC
	0x0328BA98 B 0x328BAA8
	0x0328BA9C B 0x328BAA8
	0x0328BAA0 MOV X22, X0
	0x0328BAA4 B 0x328BAAC
	0x0328BAA8 MOV X22, X0
	0x0328BAAC CMP W1, 0x1
	0x0328BAB0 B.NE 0x328BBFC
	0x0328BAB4 MOV X0, X22
	0x0328BAB8 BL 0x3EB1AD0
	0x0328BABC MOV X22, X0
	0x0328BAC0 ADRP X0, 0xE68000
	0x0328BAC4 LDR X0, [X0 + 0x7D0]
	0x0328BAC8 BL 0x1C16D08
	0x0328BACC LDR X8, [X22]
	0x0328BAD0 LDR X1, [X8]
	0x0328BAD4 BL 0x1C17270
	0x0328BAD8 TBZ X0, 0x0, 0x328BBBC
	0x0328BADC LDR X23, [X22]
	0x0328BAE0 BL 0x3EB1AE0
	0x0328BAE4 CBZ X21, 0x328BB30
	0x0328BAE8 ADRP X0, 0xE99000
	0x0328BAEC LDR X0, [X0 + 0x280]
	0x0328BAF0 BL 0x1C16D08
	0x0328BAF4 BL 0x1C16F10
	0x0328BAF8 MOV X22, X0
	0x0328BAFC ADRP X0, 0xE99000
	0x0328BB00 LDR X0, [X0 + 0x458]
	0x0328BB04 BL 0x1C16D08
	0x0328BB08 CBZ X20, 0x328BB38
	0x0328BB0C MOV X24, X0
	0x0328BB10 MOV X0, X20
	0x0328BB14 MOV X1, X24
	0x0328BB18 BL 0x1C16E00
	0x0328BB1C MOV X2, X0
	0x0328BB20 CBNZ X0, 0x328BB3C
	0x0328BB24 MOV X0, X20
	0x0328BB28 MOV X1, X24
	0x0328BB2C BL 0x1C171E0
	0x0328BB30 MOV X20, X31
	0x0328BB34 B 0x328BC1C
	0x0328BB38 MOV X2, X31
	0x0328BB3C MOV X0, X22
	0x0328BB40 MOV X1, X23
	0x0328BB44 MOV X3, X31
	0x0328BB48 BL 0x328EBC0
	0x0328BB4C ADRP X0, 0xE99000
	0x0328BB50 LDR X0, [X0 + 0x3B8]
	0x0328BB54 BL 0x1C16D08
	0x0328BB58 MOV X1, X0
	0x0328BB5C LDR X8, [X21]
	0x0328BB60 LDRH W9, [X8 + 0x12E]
	0x0328BB64 CBZ X9, 0x328BB88
	0x0328BB68 LDR X10, [X8 + 0xB0]
	0x0328BB6C ADD X10, X10, 0x8
	0x0328BB70 LDUR X11, [X10 - 0x8]
	0x0328BB74 CMP X11, X1
	0x0328BB78 B.EQ 0x328BB98
	0x0328BB7C SUBS X9, X9, 0x1
	0x0328BB80 ADD X10, X10, 0x10
	0x0328BB84 B.NE 0x328BB70
	0x0328BB88 MOV X0, X21
	0x0328BB8C MOV W2, W31
	0x0328BB90 BL 0x1C5C788
	0x0328BB94 B 0x328BBA4
	0x0328BB98 LDRSW X9, [X10]
	0x0328BB9C ADD X8, X8, X9, 0x4, LSL
	0x0328BBA0 ADD X0, X8, 0x138
	0x0328BBA4 LDP X8, X2, [X0]
	0x0328BBA8 MOV X0, X21
	0x0328BBAC MOV X1, X22
	0x0328BBB0 BLR X8
	0x0328BBB4 MOV X20, X31
	0x0328BBB8 B 0x328BC18
	0x0328BBBC MOVZ W0, 0x8
	0x0328BBC0 BL 0x3EB1AF0
	0x0328BBC4 LDR X8, [X22]
	0x0328BBC8 STR X8, [X0]
	0x0328BBCC ADRP X1, 0xC29000
	0x0328BBD0 ADD X1, X1, 0xE58
	0x0328BBD4 MOV X2, X31
	0x0328BBD8 BL 0x3EB1B00
	0x0328BBDC B 0x328BBF8
	0x0328BBE0 B 0x328BBF8
	0x0328BBE4 MOV X20, X1
	0x0328BBE8 MOV X22, X0
	0x0328BBEC BL 0x3EB1AE0
	0x0328BBF0 MOV W1, W20
	0x0328BBF4 B 0x328BBFC
	0x0328BBF8 MOV X22, X0
	0x0328BBFC MOVZ W8, 0x1
	0x0328BC00 CMP W1, W8
	0x0328BC04 B.NE 0x328BC2C
	0x0328BC08 MOV X0, X22
	0x0328BC0C BL 0x3EB1AD0
	0x0328BC10 LDR X20, [X0]
	0x0328BC14 BL 0x3EB1AE0
	0x0328BC18 MOV X21, X31
	0x0328BC1C ADRP X24, 0xE98000
	0x0328BC20 LDR X24, [X24 + 0xEB8]
	0x0328BC24 CBNZ X19, 0x328BA20
	0x0328BC28 B 0x328BA3C
	0x0328BC2C MOV X20, X31
	0x0328BC30 B 0x328BC38
	0x0328BC34 MOV X22, X0
	0x0328BC38 CBZ X19, 0x328BC60
	0x0328BC3C ADRP X8, 0xE98000
	0x0328BC40 LDR X8, [X8 + 0xEB8]
	0x0328BC44 LDR X0, [X8]
	0x0328BC48 LDR W8, [X0 + 0xE0]
	0x0328BC4C CBNZ W8, 0x328BC54
	0x0328BC50 BL 0x1C16DFC
	0x0328BC54 MOV X0, X19
	0x0328BC58 MOV X1, X31
	0x0328BC5C BL 0x33C0284
	0x0328BC60 CBNZ X20, 0x328BC6C
	0x0328BC64 MOV X0, X22
	0x0328BC68 BL 0x1D2C690
	0x0328BC6C MOV X0, X20
	0x0328BC70 BL 0x1C16F18
	0x0328BC74 BL 0x1990590
	0x0328BC78 STR X30, [X31 - 0x30]!
	0x0328BC7C STP X22, X21, [X31 + 0x10]
	0x0328BC80 STP X20, X19, [X31 + 0x20]
	0x0328BC84 MOV X21, X1
	0x0328BC88 MOV X1, X31
	0x0328BC8C MOV X19, X3
	0x0328BC90 MOV X20, X2
	0x0328BC94 MOV X22, X0
	0x0328BC98 BL 0x33BDD8C
	0x0328BC9C STP X21, X20, [X22 + 0x10]
	0x0328BCA0 STR X19, [X22 + 0x20]
	0x0328BCA4 LDP X20, X19, [X31 + 0x20]
	0x0328BCA8 LDP X22, X21, [X31 + 0x10]
	0x0328BCAC LDR X30, [X31], #0x30
	0x0328BCB0 RET
	0x0328BCB4 MOV X1, X31
	0x0328BCB8 B 0x33BDD8C
	0x0328BCBC STR X30, [X31 - 0x40]!
	0x0328BCC0 STP X24, X23, [X31 + 0x10]
	0x0328BCC4 STP X22, X21, [X31 + 0x20]
	0x0328BCC8 STP X20, X19, [X31 + 0x30]
	0x0328BCCC ADRP X21, 0x1151000
	0x0328BCD0 ADRP X24, 0xE98000
	0x0328BCD4 LDRB W8, [X21 + 0x69A]
	0x0328BCD8 LDR X24, [X24 + 0xEB8]
	0x0328BCDC MOV X20, X1
	0x0328BCE0 MOV X19, X0
	0x0328BCE4 TBNZ X8, 0x0, 0x328BD08
	0x0328BCE8 ADRP X0, 0xE98000
	0x0328BCEC LDR X0, [X0 + 0xEB8]
	0x0328BCF0 BL 0x1C16CF4
	0x0328BCF4 ADRP X0, 0xE99000
	0x0328BCF8 LDR X0, [X0 + 0x3B8]
	0x0328BCFC BL 0x1C16CF4
	0x0328BD00 MOVZ W8, 0x1
	0x0328BD04 STRB W8, [X21 + 0x69A]
	0x0328BD08 LDR X0, [X24]
	0x0328BD0C LDR W8, [X0 + 0xE0]
	0x0328BD10 CBNZ W8, 0x328BD18
	0x0328BD14 BL 0x1C16DFC
	0x0328BD18 MOV W0, W31
	0x0328BD1C MOV X1, X20
	0x0328BD20 MOV W2, W31
	0x0328BD24 MOV W3, W31
	0x0328BD28 BL 0x3289B90
	0x0328BD2C MOV X0, X31
	0x0328BD30 BL 0x33E6FB0
	0x0328BD34 CBZ X0, 0x328BE08
	0x0328BD38 MOV W1, W31
	0x0328BD3C MOV X2, X20
	0x0328BD40 MOV W3, W31
	0x0328BD44 MOV W4, W31
	0x0328BD48 BL 0x3289D34
	0x0328BD4C LDR X21, [X19 + 0x10]
	0x0328BD50 CBZ X21, 0x328BE0C
	0x0328BD54 ADRP X10, 0xE99000
	0x0328BD58 LDR X8, [X21]
	0x0328BD5C LDR X10, [X10 + 0x3B8]
	0x0328BD60 LDRH W9, [X8 + 0x12E]
	0x0328BD64 LDR X1, [X10]
	0x0328BD68 CBZ X9, 0x328BD8C
	0x0328BD6C LDR X10, [X8 + 0xB0]
	0x0328BD70 ADD X10, X10, 0x8
	0x0328BD74 LDUR X11, [X10 - 0x8]
	0x0328BD78 CMP X11, X1
	0x0328BD7C B.EQ 0x328BD9C
	0x0328BD80 SUBS X9, X9, 0x1
	0x0328BD84 ADD X10, X10, 0x10
	0x0328BD88 B.NE 0x328BD74
	0x0328BD8C MOV X0, X21
	0x0328BD90 MOV W2, W31
	0x0328BD94 BL 0x1C5C788
	0x0328BD98 B 0x328BDA8
	0x0328BD9C LDRSW X9, [X10]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X19, 0x1152000
	014 Move X21, 0xE99000
	015 Move W8, [X19+1676]
	016 Move X21, [X21+3768]
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {42}
	022 Move X0, 0xE99000
	023 Move X0, [X0+3768]
	024 Call 0x1C17CF4
	025 Move X0, 0xE9A000
	026 Move X0, [X0+1496]
	027 Call 0x1C17CF4
	028 Move X0, 0xE9A000
	029 Move X0, [X0+1416]
	030 Call 0x1C17CF4
	031 Move X0, 0xE69000
	032 Move X0, [X0+3584]
	033 Call 0x1C17CF4
	034 Move X0, 0xE71000
	035 Move X0, [X0+3512]
	036 Call 0x1C17CF4
	037 Move X0, 0xE69000
	038 Move X0, [X0+3608]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X19+1676], W8
	042 Move X0, [X21]
	043 Call 0x1C17F10
	044 Move X19, X0
	045 Call Context..ctor, X0
	046 Compare X20, 0
	047 JumpIfEqual {455}
	048 Move X26, 0xE9A000
	049 Move X8, [X20]
	050 Move X26, [X26+1496]
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 Move X1, [X26]
	053 Compare X9, 0
	054 JumpIfEqual {61}
	055 Move X10, [X8+176]
	056 Add X10, X10, 8
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Subtract X9, X9, 1
	060 Add X10, X10, 16
	061 Move W2, 5
	062 Move X0, X20
	063 Call 0x1C5D788
	064 Move W9, [X10]
	065 Add W9, W9, 5
	066 Add X8, X8, W9
	067 Add X0, X8, 312
	068 Move X8, [X0]
	069 Move X1, [X0+8]
	070 Move X0, X20
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Compare X0, 0
	073 JumpIfEqual {455}
	074 Move X27, 0xE71000
	075 Move X8, [X0]
	076 Move X27, [X27+3512]
	077 Move X21, X0
	078 NotImplemented "Instruction LDRH not yet implemented."
	079 Move X1, [X27]
	080 Compare X9, 0
	081 JumpIfEqual {88}
	082 Move X10, [X8+176]
	083 Add X10, X10, 8
	084 NotImplemented "Instruction LDUR not yet implemented."
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Subtract X9, X9, 1
	087 Add X10, X10, 16
	088 Move X0, X21
	089 Move W2, W31
	090 Call 0x1C5D788
	091 NotImplemented "Instruction LDRSW not yet implemented."
	092 Add X8, X8, X9
	093 Add X0, X8, 312
	094 Move X8, [X0]
	095 Move X1, [X0+8]
	096 Move X25, 0xE69000
	097 Move X25, [X25+3584]
	098 Move X0, X21
	099 NotImplemented "Instruction BLR not yet implemented."
	100 Move X21, X0
	101 Compare X0, 0
	102 JumpIfEqual {456}
	103 Move X28, 0xE69000
	104 Move X29, 0xE9A000
	105 Move X28, [X28+3608]
	106 Move X29, [X29+1416]
	107 Move X8, [X21]
	108 Move X1, [X28]
	109 NotImplemented "Instruction LDRH not yet implemented."
	110 Compare X9, 0
	111 JumpIfEqual {118}
	112 Move X10, [X8+176]
	113 Add X10, X10, 8
	114 NotImplemented "Instruction LDUR not yet implemented."
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Subtract X9, X9, 1
	117 Add X10, X10, 16
	118 Move X0, X21
	119 Move W2, W31
	120 Call 0x1C5D788
	121 NotImplemented "Instruction LDRSW not yet implemented."
	122 Add X8, X8, X9
	123 Add X0, X8, 312
	124 Move X8, [X0]
	125 Move X1, [X0+8]
	126 Move X0, X21
	127 NotImplemented "Instruction BLR not yet implemented."
	128 Move TEMP, X0
	129 And TEMP, TEMP, 1
	130 Compare TEMP, 1
	131 JumpIfNotEqual {201}
	132 Move X8, [X21]
	133 Move X1, [X28]
	134 NotImplemented "Instruction LDRH not yet implemented."
	135 Compare X9, 0
	136 JumpIfEqual {143}
	137 Move X10, [X8+176]
	138 Add X10, X10, 8
	139 NotImplemented "Instruction LDUR not yet implemented."
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Subtract X9, X9, 1
	142 Add X10, X10, 16
	143 Move W2, 1
	144 Move X0, X21
	145 Call 0x1C5D788
	146 Move W9, [X10]
	147 Add W9, W9, 1
	148 Add X8, X8, W9
	149 Add X0, X8, 312
	150 Move X8, [X0]
	151 Move X1, [X0+8]
	152 Move X0, X21
	153 NotImplemented "Instruction BLR not yet implemented."
	154 Move X23, X0
	155 Compare X0, 0
	156 JumpIfEqual {444}
	157 Move X24, [X29]
	158 Move X0, X23
	159 Move X1, X24
	160 Call 0x1C17E00
	161 Move X22, X0
	162 Compare X0, 0
	163 JumpIfEqual {445}
	164 Move X8, [X22]
	165 Move X1, [X29]
	166 NotImplemented "Instruction LDRH not yet implemented."
	167 Compare X9, 0
	168 JumpIfEqual {175}
	169 Move X10, [X8+176]
	170 Add X10, X10, 8
	171 NotImplemented "Instruction LDUR not yet implemented."
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Subtract X9, X9, 1
	174 Add X10, X10, 16
	175 Move X0, X22
	176 Move W2, W31
	177 Call 0x1C5D788
	178 NotImplemented "Instruction LDRSW not yet implemented."
	179 Add X8, X8, X9
	180 Add X0, X8, 312
	181 Move X8, [X0]
	182 Move X1, [X0+8]
	183 Move X0, X22
	184 NotImplemented "Instruction BLR not yet implemented."
	185 Move X1, X0
	186 Compare X19, 0
	187 JumpIfEqual {443}
	188 Move X8, [X19]
	189 Move X9, [X8+408]
	190 Move X2, [X8+416]
	191 Move X0, X19
	192 NotImplemented "Instruction BLR not yet implemented."
	193 Compare X0, 0
	194 JumpIfNotEqual {107}
	195 Move X8, [X19]
	196 Move X9, [X8+424]
	197 Move X2, [X8+432]
	198 Move X0, X19
	199 Move X1, X22
	200 NotImplemented "Instruction BLR not yet implemented."
	201 Move X22, X31
	202 Move X1, [X25]
	203 Move X0, X21
	204 Call 0x1C17E00
	205 Compare X0, 0
	206 JumpIfEqual {229}
	207 Move X8, [X0]
	208 Move X1, [X25]
	209 Move X21, X0
	210 NotImplemented "Instruction LDRH not yet implemented."
	211 Compare X9, 0
	212 JumpIfEqual {219}
	213 Move X10, [X8+176]
	214 Add X10, X10, 8
	215 NotImplemented "Instruction LDUR not yet implemented."
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Subtract X9, X9, 1
	218 Add X10, X10, 16
	219 Move X0, X21
	220 Move W2, W31
	221 Call 0x1C5D788
	222 NotImplemented "Instruction LDRSW not yet implemented."
	223 Add X8, X8, X9
	224 Add X0, X8, 312
	225 Move X8, [X0]
	226 Move X1, [X0+8]
	227 Move X0, X21
	228 NotImplemented "Instruction BLR not yet implemented."
	229 Compare X22, 0
	230 JumpIfNotEqual {457}
	231 Compare X19, 0
	232 JumpIfEqual {455}
	233 Move X8, [X19]
	234 Move X0, X19
	235 Move X9, [X8+440]
	236 Move X1, [X8+448]
	237 NotImplemented "Instruction BLR not yet implemented."
	238 Move X8, [X20]
	239 Move X1, [X26]
	240 NotImplemented "Instruction LDRH not yet implemented."
	241 Compare X9, 0
	242 JumpIfEqual {249}
	243 Move X10, [X8+176]
	244 Add X10, X10, 8
	245 NotImplemented "Instruction LDUR not yet implemented."
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Subtract X9, X9, 1
	248 Add X10, X10, 16
	249 Move W2, 5
	250 Move X0, X20
	251 Call 0x1C5D788
	252 Move W9, [X10]
	253 Add W9, W9, 5
	254 Add X8, X8, W9
	255 Add X0, X8, 312
	256 Move X8, [X0]
	257 Move X1, [X0+8]
	258 Move X0, X20
	259 NotImplemented "Instruction BLR not yet implemented."
	260 Compare X0, 0
	261 JumpIfEqual {455}
	262 Move X8, [X0]
	263 Move X1, [X27]
	264 Move X20, X0
	265 NotImplemented "Instruction LDRH not yet implemented."
	266 Compare X9, 0
	267 JumpIfEqual {274}
	268 Move X10, [X8+176]
	269 Add X10, X10, 8
	270 NotImplemented "Instruction LDUR not yet implemented."
	271 NotImplemented "Instruction CMP not yet implemented."
	272 Subtract X9, X9, 1
	273 Add X10, X10, 16
	274 Move X0, X20
	275 Move W2, W31
	276 Call 0x1C5D788
	277 NotImplemented "Instruction LDRSW not yet implemented."
	278 Add X8, X8, X9
	279 Add X0, X8, 312
	280 Move X8, [X0]
	281 Move X1, [X0+8]
	282 Move X0, X20
	283 NotImplemented "Instruction BLR not yet implemented."
	284 Move X20, X0
	285 Compare X0, 0
	286 JumpIfEqual {459}
	287 Move X24, 0xE69000
	288 Move X26, 0xE9A000
	289 Move X24, [X24+3608]
	290 Move X26, [X26+1416]
	291 Move X8, [X20]
	292 Move X1, [X24]
	293 NotImplemented "Instruction LDRH not yet implemented."
	294 Compare X9, 0
	295 JumpIfEqual {302}
	296 Move X10, [X8+176]
	297 Add X10, X10, 8
	298 NotImplemented "Instruction LDUR not yet implemented."
	299 NotImplemented "Instruction CMP not yet implemented."
	300 Subtract X9, X9, 1
	301 Add X10, X10, 16
	302 Move X0, X20
	303 Move W2, W31
	304 Call 0x1C5D788
	305 NotImplemented "Instruction LDRSW not yet implemented."
	306 Add X8, X8, X9
	307 Add X0, X8, 312
	308 Move X8, [X0]
	309 Move X1, [X0+8]
	310 Move X0, X20
	311 NotImplemented "Instruction BLR not yet implemented."
	312 Move TEMP, X0
	313 And TEMP, TEMP, 1
	314 Compare TEMP, 1
	315 JumpIfNotEqual {399}
	316 Move X8, [X20]
	317 Move X1, [X24]
	318 NotImplemented "Instruction LDRH not yet implemented."
	319 Compare X9, 0
	320 JumpIfEqual {327}
	321 Move X10, [X8+176]
	322 Add X10, X10, 8
	323 NotImplemented "Instruction LDUR not yet implemented."
	324 NotImplemented "Instruction CMP not yet implemented."
	325 Subtract X9, X9, 1
	326 Add X10, X10, 16
	327 Move W2, 1
	328 Move X0, X20
	329 Call 0x1C5D788
	330 Move W9, [X10]
	331 Add W9, W9, 1
	332 Add X8, X8, W9
	333 Add X0, X8, 312
	334 Move X8, [X0]
	335 Move X1, [X0+8]
	336 Move X0, X20
	337 NotImplemented "Instruction BLR not yet implemented."
	338 Move X23, X0
	339 Compare X0, 0
	340 JumpIfEqual {451}
	341 Move X21, [X26]
	342 Move X0, X23
	343 Move X1, X21
	344 Call 0x1C17E00
	345 Compare X0, 0
	346 JumpIfEqual {452}
	347 Move X22, [X26]
	348 Move X0, X23
	349 Move X1, X22
	350 Call 0x1C17E00
	351 Move X21, X0
	352 Compare X0, 0
	353 JumpIfEqual {448}
	354 Move X8, [X21]
	355 NotImplemented "Instruction LDRH not yet implemented."
	356 Compare X9, 0
	357 JumpIfEqual {364}
	358 Move X10, [X8+176]
	359 Add X10, X10, 8
	360 NotImplemented "Instruction LDUR not yet implemented."
	361 NotImplemented "Instruction CMP not yet implemented."
	362 Subtract X9, X9, 1
	363 Add X10, X10, 16
	364 Move W2, 2
	365 Move X0, X21
	366 Move X1, X22
	367 Call 0x1C5D788
	368 Move W9, [X10]
	369 Add W9, W9, 2
	370 Add X8, X8, W9
	371 Add X0, X8, 312
	372 Move X8, [X0]
	373 Move X2, [X0+8]
	374 Move X0, X21
	375 Move X1, X19
	376 NotImplemented "Instruction BLR not yet implemented."
	377 Move TEMP, X0
	378 And TEMP, TEMP, 1
	379 Compare TEMP, 1
	380 JumpIfEqual {291}
	381 Move X0, 0xE99000
	382 Move X0, [X0+3360]
	383 Call 0x1C17D08
	384 Call 0x1C17F10
	385 Move X21, X0
	386 Move X0, 0xE9A000
	387 Move X0, [X0+1504]
	388 Call 0x1C17D08
	389 Move X1, X0
	390 Move X0, X21
	391 Move X2, X31
	392 Call SystemException..ctor, X0, X1
	393 Move X0, 0xE9A000
	394 Move X0, [X0+1512]
	395 Call 0x1C17D08
	396 Move X1, X0
	397 Move X0, X21
	398 Call 0x1C17DEC
	399 Move X21, X31
	400 Move X1, [X25]
	401 Move X0, X20
	402 Call 0x1C17E00
	403 Compare X0, 0
	404 JumpIfEqual {427}
	405 Move X8, [X0]
	406 Move X1, [X25]
	407 Move X20, X0
	408 NotImplemented "Instruction LDRH not yet implemented."
	409 Compare X9, 0
	410 JumpIfEqual {417}
	411 Move X10, [X8+176]
	412 Add X10, X10, 8
	413 NotImplemented "Instruction LDUR not yet implemented."
	414 NotImplemented "Instruction CMP not yet implemented."
	415 Subtract X9, X9, 1
	416 Add X10, X10, 16
	417 Move X0, X20
	418 Move W2, W31
	419 Call 0x1C5D788
	420 NotImplemented "Instruction LDRSW not yet implemented."
	421 Add X8, X8, X9
	422 Add X0, X8, 312
	423 Move X8, [X0]
	424 Move X1, [X0+8]
	425 Move X0, X20
	426 NotImplemented "Instruction BLR not yet implemented."
	427 Compare X21, 0
	428 JumpIfNotEqual {460}
	429 Move X0, X19
	430 Move X20, [X31+80]
	431 Move X19, [X31+88]
	432 Move X22, [X31+64]
	433 Move X21, [X31+72]
	434 Move X24, [X31+48]
	435 Move X23, [X31+56]
	436 Move X26, [X31+32]
	437 Move X25, [X31+40]
	438 Move X28, [X31+16]
	439 Move X27, [X31+24]
	440 Move X29, [X31+96]
	441 Move X30, [X31+104]
	442 Return X0
	443 Call 0x1C17F20
	444 Call 0x1C17F20
	445 Move X0, X23
	446 Move X1, X24
	447 Call 0x1C181E0
	448 Move X0, X23
	449 Move X1, X22
	450 Call 0x1C181E0
	451 Call 0x1C17F20
	452 Move X0, X23
	453 Move X1, X21
	454 Call 0x1C181E0
	455 Call 0x1C17F20
	456 Call 0x1C17F20
	457 Move X0, X22
	458 Call 0x1C17F18
	459 Call 0x1C17F20
	460 Move X0, X21
	461 Call 0x1C17F18
	462 NotImplemented "Instruction CMP not yet implemented."
	463 Call 0x3EB2AD0
	464 Move X21, [X0]
	465 Call 0x3EB2AE0
	466 Move X19, X0
	467 Move X21, X31
	468 Move X19, X0
	469 Move X1, [X25]
	470 Move X0, X20
	471 Call 0x1C17E00
	472 Move X20, X0
	473 Compare X0, 0
	474 JumpIfEqual {496}
	475 Move X8, [X20]
	476 Move X1, [X25]
	477 NotImplemented "Instruction LDRH not yet implemented."
	478 Compare X9, 0
	479 JumpIfEqual {486}
	480 Move X10, [X8+176]
	481 Add X10, X10, 8
	482 NotImplemented "Instruction LDUR not yet implemented."
	483 NotImplemented "Instruction CMP not yet implemented."
	484 Subtract X9, X9, 1
	485 Add X10, X10, 16
	486 Move X0, X20
	487 Move W2, W31
	488 Call 0x1C5D788
	489 NotImplemented "Instruction LDRSW not yet implemented."
	490 Add X8, X8, X9
	491 Add X0, X8, 312
	492 Move X8, [X0]
	493 Move X1, [X0+8]
	494 Move X0, X20
	495 NotImplemented "Instruction BLR not yet implemented."
	496 Compare X21, 0
	497 JumpIfEqual {536}
	498 Move X0, X21
	499 Call 0x1C17F18
	500 NotImplemented "Instruction CMP not yet implemented."
	501 Call 0x3EB2AD0
	502 Move X22, [X0]
	503 Call 0x3EB2AE0
	504 Move X19, X0
	505 Move X22, X31
	506 Move X19, X0
	507 Move X1, [X25]
	508 Move X0, X21
	509 Call 0x1C17E00
	510 Move X20, X0
	511 Compare X0, 0
	512 JumpIfEqual {534}
	513 Move X8, [X20]
	514 Move X1, [X25]
	515 NotImplemented "Instruction LDRH not yet implemented."
	516 Compare X9, 0
	517 JumpIfEqual {524}
	518 Move X10, [X8+176]
	519 Add X10, X10, 8
	520 NotImplemented "Instruction LDUR not yet implemented."
	521 NotImplemented "Instruction CMP not yet implemented."
	522 Subtract X9, X9, 1
	523 Add X10, X10, 16
	524 Move X0, X20
	525 Move W2, W31
	526 Call 0x1C5D788
	527 NotImplemented "Instruction LDRSW not yet implemented."
	528 Add X8, X8, X9
	529 Add X0, X8, 312
	530 Move X8, [X0]
	531 Move X1, [X0+8]
	532 Move X0, X20
	533 NotImplemented "Instruction BLR not yet implemented."
	534 Compare X22, 0
	535 JumpIfNotEqual {538}
	536 Move X0, X19
	537 Call 0x1D2D690
	538 Move X0, X22
	539 Call 0x1C17F18
	540 Call 0x1991590

Method: System.Void DoCallBack(System.Runtime.Remoting.Contexts.CrossContextDelegate deleg)

Disassembly:
	0x0328BDA0 ADD X8, X8, X9, 0x4, LSL
	0x0328BDA4 ADD X0, X8, 0x138
	0x0328BDA8 LDP X8, X2, [X0]
	0x0328BDAC MOV X0, X21
	0x0328BDB0 MOV X1, X20
	0x0328BDB4 BLR X8
	0x0328BDB8 MOV X20, X0
	0x0328BDBC MOV X21, X31
	0x0328BDC0 LDR X19, [X19 + 0x18]
	0x0328BDC4 CBZ X19, 0x328BDE4
	0x0328BDC8 LDR X0, [X24]
	0x0328BDCC LDR W8, [X0 + 0xE0]
	0x0328BDD0 CBNZ W8, 0x328BDD8
	0x0328BDD4 BL 0x1C16DFC
	0x0328BDD8 MOV X0, X19
	0x0328BDDC MOV X1, X31
	0x0328BDE0 BL 0x33C0284
	0x0328BDE4 CBNZ X21, 0x328BE00
	0x0328BDE8 MOV X0, X20
	0x0328BDEC LDP X20, X19, [X31 + 0x30]
	0x0328BDF0 LDP X22, X21, [X31 + 0x20]
	0x0328BDF4 LDP X24, X23, [X31 + 0x10]
	0x0328BDF8 LDR X30, [X31], #0x40
	0x0328BDFC RET
	0x0328BE00 MOV X0, X21
	0x0328BE04 BL 0x1C16F18
	0x0328BE08 BL 0x1C16F20
	0x0328BE0C BL 0x1C16F20
	0x0328BE10 B 0x328BE20
	0x0328BE14 B 0x328BE20
	0x0328BE18 B 0x328BE20
	0x0328BE1C B 0x328BE20
	0x0328BE20 MOV X20, X0
	0x0328BE24 CMP W1, 0x1
	0x0328BE28 B.NE 0x328BF04
	0x0328BE2C MOV X0, X20
	0x0328BE30 BL 0x3EB1AD0
	0x0328BE34 MOV X20, X0
	0x0328BE38 ADRP X0, 0xE68000
	0x0328BE3C LDR X0, [X0 + 0x7D0]
	0x0328BE40 BL 0x1C16D08
	0x0328BE44 LDR X8, [X20]
	0x0328BE48 LDR X1, [X8]
	0x0328BE4C BL 0x1C17270
	0x0328BE50 TBZ X0, 0x0, 0x328BEC4
	0x0328BE54 LDR X21, [X20]
	0x0328BE58 BL 0x3EB1AE0
	0x0328BE5C LDR X22, [X19 + 0x20]
	0x0328BE60 ADRP X0, 0xE99000
	0x0328BE64 LDR X0, [X0 + 0x280]
	0x0328BE68 BL 0x1C16D08
	0x0328BE6C BL 0x1C16F10
	0x0328BE70 MOV X20, X0
	0x0328BE74 ADRP X0, 0xE99000
	0x0328BE78 LDR X0, [X0 + 0x458]
	0x0328BE7C BL 0x1C16D08
	0x0328BE80 CBZ X22, 0x328BEA8
	0x0328BE84 MOV X23, X0
	0x0328BE88 MOV X0, X22
	0x0328BE8C MOV X1, X23
	0x0328BE90 BL 0x1C16E00
	0x0328BE94 MOV X2, X0
	0x0328BE98 CBNZ X0, 0x328BEAC
	0x0328BE9C MOV X0, X22
	0x0328BEA0 MOV X1, X23
	0x0328BEA4 BL 0x1C171E0
	0x0328BEA8 MOV X2, X31
	0x0328BEAC MOV X0, X20
	0x0328BEB0 MOV X1, X21
	0x0328BEB4 MOV X3, X31
	0x0328BEB8 BL 0x328EBC0
	0x0328BEBC MOV X21, X31
	0x0328BEC0 B 0x328BDC0
	0x0328BEC4 MOVZ W0, 0x8
	0x0328BEC8 BL 0x3EB1AF0
	0x0328BECC LDR X8, [X20]
	0x0328BED0 STR X8, [X0]
	0x0328BED4 ADRP X1, 0xC29000
	0x0328BED8 ADD X1, X1, 0xE58
	0x0328BEDC MOV X2, X31
	0x0328BEE0 BL 0x3EB1B00
	0x0328BEE4 MOV X20, X0
	0x0328BEE8 B 0x328BF04
	0x0328BEEC MOV X21, X1
	0x0328BEF0 MOV X20, X0
	0x0328BEF4 BL 0x3EB1AE0
	0x0328BEF8 MOV W1, W21
	0x0328BEFC B 0x328BF04
	0x0328BF00 MOV X20, X0
	0x0328BF04 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x1152000
	007 Move W8, [X20+1677]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xE9A000
	014 Move X0, [X0+1520]
	015 Call 0x1C17CF4
	016 Move X0, 0xE99000
	017 Move X0, [X0+3768]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+1677], W8
	021 Move [X31+12], W31
	022 Add X1, X31, 12
	023 Move X0, X19
	024 Move X2, X31
	025 Call Monitor.Enter, X0, X1
	026 Move X8, [X19+80]
	027 Compare X8, 0
	028 JumpIfNotEqual {51}
	029 Move X8, 0xE99000
	030 Move X8, [X8+3768]
	031 Move X0, [X8]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X0, X19
	037 Move X1, X31
	038 Call AppDomain.InternalSetContext, X0
	039 Move X8, 0xE9A000
	040 Move X8, [X8+1520]
	041 Move X20, X0
	042 Move X0, [X8]
	043 Call 0x1C17F10
	044 Move X21, X0
	045 Move X1, X31
	046 Call ContextBoundObject..ctor, X0
	047 Move [X19+80], X21
	048 Move X0, X20
	049 Move X1, X31
	050 Call AppDomain.InternalSetContext, X0
	051 Move X20, X31
	052 Move W21, 3
	053 Move W8, [X31+12]
	054 Compare W8, 0
	055 JumpIfEqual {59}
	056 Move X0, X19
	057 Move X1, X31
	058 Call Monitor.Exit, X0
	059 Compare X20, 0
	060 JumpIfNotEqual {73}
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Compare W21, 0
	063 JumpIfNotEqual {67}
	064 Move X8, [X19+80]
	065 Compare X8, 0
	066 JumpIfEqual {75}
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X30, [X31+16]
	070 Move X21, [X31+24]
	071 Add X31, X31, 48
	072 Return 
	073 Move X0, X20
	074 Call 0x1C17F18
	075 Call 0x1C17F20
	076 Move X21, X0
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X0, X21
	079 Call 0x3EB2AD0
	080 Move X20, [X0]
	081 Call 0x3EB2AE0
	082 Move W21, W31
	083 Move X20, X31
	084 Move X21, X0
	085 Move W8, [X31+12]
	086 Compare W8, 0
	087 JumpIfEqual {91}
	088 Move X0, X19
	089 Move X1, X31
	090 Call Monitor.Exit, X0
	091 Compare X20, 0
	092 JumpIfNotEqual {95}
	093 Move X0, X21
	094 Call 0x1D2D690
	095 Move X0, X20
	096 Call 0x1C17F18
	097 Call 0x1991590

Method: System.LocalDataStore get_MyLocalStore()

Disassembly:
	0x0328BF14 BL 0x3EB1AD0
	0x0328BF18 LDR X21, [X0]
	0x0328BF1C BL 0x3EB1AE0
	0x0328BF20 MOV X20, X31
	0x0328BF24 B 0x328BDC0
	0x0328BF28 MOV X21, X31
	0x0328BF2C B 0x328BF34
	0x0328BF30 MOV X20, X0
	0x0328BF34 LDR X19, [X19 + 0x18]
	0x0328BF38 CBZ X19, 0x328BF58
	0x0328BF3C LDR X0, [X24]
	0x0328BF40 LDR W8, [X0 + 0xE0]
	0x0328BF44 CBNZ W8, 0x328BF4C
	0x0328BF48 BL 0x1C16DFC
	0x0328BF4C MOV X0, X19
	0x0328BF50 MOV X1, X31
	0x0328BF54 BL 0x33C0284
	0x0328BF58 CBNZ X21, 0x328BF64
	0x0328BF5C MOV X0, X20
	0x0328BF60 BL 0x1D2C690
	0x0328BF64 MOV X0, X21
	0x0328BF68 BL 0x1C16F18
	0x0328BF6C BL 0x1990590
	0x0328BF70 STP X30, X19, [X31 - 0x10]!
	0x0328BF74 ADRP X0, 0xE68000
	0x0328BF78 LDR X0, [X0 + 0xB40]
	0x0328BF7C BL 0x1C16D08
	0x0328BF80 BL 0x1C16F10
	0x0328BF84 MOV X1, X31
	0x0328BF88 MOV X19, X0
	0x0328BF8C BL 0x3380310
	0x0328BF90 ADRP X0, 0xE99000
	0x0328BF94 LDR X0, [X0 + 0x608]
	0x0328BF98 BL 0x1C16D08
	0x0328BF9C MOV X1, X0
	0x0328BFA0 MOV X0, X19
	0x0328BFA4 BL 0x1C16DEC
	0x0328BFA8 STP X30, X21, [X31 - 0x20]!
	0x0328BFAC STP X20, X19, [X31 + 0x10]
	0x0328BFB0 LDR X8, [X2 + 0x8]
	0x0328BFB4 STP X1, X2, [X0 + 0x20]
	0x0328BFB8 MOV X19, X0
	0x0328BFBC MOV X20, X1
	0x0328BFC0 STR X8, [X0 + 0x10]
	0x0328BFC4 LDRB W21, [X2 + 0x52]
	0x0328BFC8 STR X0, [X0 + 0x40]
	0x0328BFCC MOV X0, X2
	0x0328BFD0 BL 0x1C16D84
	0x0328BFD4 TBZ X0, 0x0, 0x328BFEC
	0x0328BFD8 CBNZ W21, 0x328BFF0
	0x0328BFDC ADRP X8, 0xFFFFFFFFFE92A000
	0x0328BFE0 ADD X8, X8, 0x458
	0x0328BFE4 STR X8, [X19 + 0x18]
	0x0328BFE8 B 0x328C000
	0x0328BFEC CBZ X20, 0x328C018
	0x0328BFF0 LDR X8, [X19 + 0x10]
	0x0328BFF4 LDR X9, [X19 + 0x20]
	0x0328BFF8 STR X8, [X19 + 0x18]
	0x0328BFFC STR X9, [X19 + 0x40]
	0x0328C000 ADRP X8, 0xFFFFFFFFFE929000
	0x0328C004 ADD X8, X8, 0x418
	0x0328C008 STR X8, [X19 + 0x38]
	0x0328C00C LDP X20, X19, [X31 + 0x10]
	0x0328C010 LDP X30, X21, [X31], #0x20
	0x0328C014 RET
	0x0328C018 ADRP X1, 0xFFFFFFFFFD88F000
	0x0328C01C ADD X1, X1, 0xEE3
	0x0328C020 MOV X0, X31
	0x0328C024 BL 0x1C16F3C
	0x0328C028 MOV X1, X31
	0x0328C02C BL 0x1C16DEC
	0x0328C030 LDR X8, [X0 + 0x40]
	0x0328C034 LDR X2, [X0 + 0x18]
	0x0328C038 LDR X1, [X0 + 0x28]
	0x0328C03C MOV X0, X8
	0x0328C040 BR X2
	0x0328C044 STR X30, [X31 - 0x20]!
	0x0328C048 STP X20, X19, [X31 + 0x10]
	0x0328C04C ADRP X20, 0x1150000
	0x0328C050 ADRP X19, 0xE97000
	0x0328C054 LDRB W8, [X20 + 0x69B]
	0x0328C058 LDR X19, [X19 + 0xD08]
	0x0328C05C TBNZ X8, 0x0, 0x328C074
	0x0328C060 ADRP X0, 0xE97000
	0x0328C064 LDR X0, [X0 + 0xD08]
	0x0328C068 BL 0x1C16CF4
	0x0328C06C MOVZ W8, 0x1
	0x0328C070 STRB W8, [X20 + 0x69B]
	0x0328C074 LDR X0, [X19]
	0x0328C078 LDR W8, [X0 + 0xE0]
	0x0328C07C CBNZ W8, 0x328C088
	0x0328C080 BL 0x1C16DFC
	0x0328C084 LDR X0, [X19]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x1152000
	007 Move W8, [X20+1678]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xE99000
	014 Move X0, [X0+3768]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+1678], W8
	018 Move [X31+12], W31
	019 Move X20, [X19+64]
	020 Call 0x1C17D44
	021 Compare X20, 0
	022 JumpIfNotEqual {67}
	023 Move X21, 0xE99000
	024 Move X21, [X21+3768]
	025 Move X0, [X21]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1C17DFC
	030 Move X0, [X21]
	031 Move X8, [X0+184]
	032 Move X20, [X8+24]
	033 Move [X31+12], W31
	034 Add X1, X31, 12
	035 Move X0, X20
	036 Move X2, X31
	037 Call Monitor.Enter, X0, X1
	038 Move X22, [X19+64]
	039 Call 0x1C17D44
	040 Compare X22, 0
	041 JumpIfEqual {43}
	042 Move X21, X31
	043 Move X0, [X21]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {49}
	047 Call 0x1C17DFC
	048 Move X0, [X21]
	049 Move X8, [X0+184]
	050 Move X0, [X8+24]
	051 Compare X0, 0
	052 JumpIfEqual {81}
	053 Move X1, X31
	054 Call LocalDataStoreMgr.CreateLocalDataStore, X0
	055 Move X22, X0
	056 Call 0x1C17D44
	057 Move X21, X31
	058 Move [X19+64], X22
	059 Move W8, [X31+12]
	060 Compare W8, 0
	061 JumpIfEqual {65}
	062 Move X0, X20
	063 Move X1, X31
	064 Call Monitor.Exit, X0
	065 Compare X21, 0
	066 JumpIfNotEqual {79}
	067 Move X19, [X19+64]
	068 Call 0x1C17D44
	069 Compare X19, 0
	070 JumpIfEqual {78}
	071 Move X0, [X19+16]
	072 Move X20, [X31+32]
	073 Move X19, [X31+40]
	074 Move X22, [X31+16]
	075 Move X21, [X31+24]
	076 Move X30, [X31+48]
	077 Return X0
	078 Call 0x1C17F20
	079 Move X0, X21
	080 Call 0x1C17F18
	081 Call 0x1C17F20
	082 Move X22, X0
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X0, X22
	085 Call 0x3EB2AD0
	086 Move X21, [X0]
	087 Call 0x3EB2AE0
	088 Move X21, X31
	089 Move X22, X0
	090 Move W8, [X31+12]
	091 Compare W8, 0
	092 JumpIfEqual {96}
	093 Move X0, X20
	094 Move X1, X31
	095 Call Monitor.Exit, X0
	096 Compare X21, 0
	097 JumpIfNotEqual {100}
	098 Move X0, X22
	099 Call 0x1D2D690
	100 Move X0, X21
	101 Call 0x1C17F18
	102 Call 0x1991590

Method: System.LocalDataStoreSlot AllocateDataSlot()

Disassembly:
	0x0328C088 LDR X8, [X0 + 0xB8]
	0x0328C08C LDP X20, X19, [X31 + 0x10]
	0x0328C090 LDR X0, [X8 + 0x10]
	0x0328C094 LDR X30, [X31], #0x20
	0x0328C098 RET
	0x0328C09C STR X30, [X31 - 0x50]!
	0x0328C0A0 STP X26, X25, [X31 + 0x10]
	0x0328C0A4 STP X24, X23, [X31 + 0x20]
	0x0328C0A8 STP X22, X21, [X31 + 0x30]
	0x0328C0AC STP X20, X19, [X31 + 0x40]
	0x0328C0B0 ADRP X23, 0x1150000
	0x0328C0B4 LDRB W8, [X23 + 0x69D]
	0x0328C0B8 MOV X19, X3
	0x0328C0BC MOV X22, X2
	0x0328C0C0 MOV X20, X1
	0x0328C0C4 MOV X21, X0
	0x0328C0C8 TBNZ X8, 0x0, 0x328C0EC
	0x0328C0CC ADRP X0, 0xE98000
	0x0328C0D0 LDR X0, [X0 + 0x610]
	0x0328C0D4 BL 0x1C16CF4
	0x0328C0D8 ADRP X0, 0xE98000
	0x0328C0DC LDR X0, [X0 + 0x360]
	0x0328C0E0 BL 0x1C16CF4
	0x0328C0E4 MOVZ W8, 0x1
	0x0328C0E8 STRB W8, [X23 + 0x69D]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1151000
	005 Move X19, 0xE98000
	006 Move W8, [X20+1679]
	007 Move X19, [X19+3768]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xE98000
	013 Move X0, [X0+3768]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1679], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X0, [X8+24]
	025 Compare X0, 0
	026 JumpIfEqual {33}
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X1, X31
	030 Move X30, [X31+32]
	031 Call LocalDataStoreMgr.AllocateDataSlot, X0
	032 Return X0
	033 Call 0x1C17F20

Method: System.LocalDataStoreSlot AllocateNamedDataSlot(System.String name)

Disassembly:
	0x0328C0EC STR X31, [X19]
	0x0328C0F0 CBZ X22, 0x328C220
	0x0328C0F4 LDR X8, [X22 + 0x18]
	0x0328C0F8 CMP W8, 0x1
	0x0328C0FC B.LT 0x328C204
	0x0328C100 ADRP X25, 0xE98000
	0x0328C104 ADRP X26, 0xE98000
	0x0328C108 LDR X25, [X25 + 0x610]
	0x0328C10C LDR X26, [X26 + 0x360]
	0x0328C110 MOV X24, X31
	0x0328C114 AND X8, X8, 0x0
	0x0328C118 CMP X24, W8, UXTW
	0x0328C11C B.CS 0x328C2A8
	0x0328C120 ADD X8, X22, X24, 0x3, LSL
	0x0328C124 LDR X23, [X8 + 0x20]
	0x0328C128 LDR X1, [X25]
	0x0328C12C MOV X0, X23
	0x0328C130 BL 0x1C16E00
	0x0328C134 CBZ X21, 0x328C2A4
	0x0328C138 LDR X8, [X21]
	0x0328C13C LDR X1, [X26]
	0x0328C140 LDRH W9, [X8 + 0x12E]
	0x0328C144 CBZ X0, 0x328C17C
	0x0328C148 CBZ W9, 0x328C16C
	0x0328C14C LDR X10, [X8 + 0xB0]
	0x0328C150 ADD X10, X10, 0x8
	0x0328C154 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1151000
	006 Move X20, 0xE98000
	007 Move W8, [X21+1680]
	008 Move X20, [X20+3768]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE98000
	015 Move X0, [X0+3768]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1680], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move X0, [X8+24]
	027 Compare X0, 0
	028 JumpIfEqual {37}
	029 Move X1, X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Call LocalDataStoreMgr.AllocateNamedDataSlot, X0, X1
	036 Return X0
	037 Call 0x1C17F20

Method: System.Void FreeNamedDataSlot(System.String name)

Disassembly:
	0x0328C158 CMP X11, X1
	0x0328C15C B.EQ 0x328C1B0
	0x0328C160 SUBS X9, X9, 0x1
	0x0328C164 ADD X10, X10, 0x10
	0x0328C168 B.NE 0x328C154
	0x0328C16C MOV X0, X21
	0x0328C170 MOV W2, W31
	0x0328C174 BL 0x1C5C788
	0x0328C178 B 0x328C1BC
	0x0328C17C CBZ W9, 0x328C1A0
	0x0328C180 LDR X10, [X8 + 0xB0]
	0x0328C184 ADD X10, X10, 0x8
	0x0328C188 LDUR X11, [X10 - 0x8]
	0x0328C18C CMP X11, X1
	0x0328C190 B.EQ 0x328C1CC
	0x0328C194 SUBS X9, X9, 0x1
	0x0328C198 ADD X10, X10, 0x10
	0x0328C19C B.NE 0x328C188
	0x0328C1A0 MOV X0, X21
	0x0328C1A4 MOV W2, W31
	0x0328C1A8 BL 0x1C5C788
	0x0328C1AC B 0x328C1D8
	0x0328C1B0 LDRSW X9, [X10]
	0x0328C1B4 ADD X8, X8, X9, 0x4, LSL
	0x0328C1B8 ADD X0, X8, 0x138
	0x0328C1BC LDP X8, X4, [X0]
	0x0328C1C0 MOV X0, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1151000
	006 Move X20, 0xE98000
	007 Move W8, [X21+1681]
	008 Move X20, [X20+3768]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE98000
	015 Move X0, [X0+3768]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1681], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move X0, [X8+24]
	027 Compare X0, 0
	028 JumpIfEqual {37}
	029 Move X1, X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Call LocalDataStoreMgr.FreeNamedDataSlot, X0, X1
	036 Return 
	037 Call 0x1C17F20

Method: System.LocalDataStoreSlot GetNamedDataSlot(System.String name)

Disassembly:
	0x0328C1C4 MOV X1, X31
	0x0328C1C8 B 0x328C1E4
	0x0328C1CC LDRSW X9, [X10]
	0x0328C1D0 ADD X8, X8, X9, 0x4, LSL
	0x0328C1D4 ADD X0, X8, 0x138
	0x0328C1D8 LDP X8, X4, [X0]
	0x0328C1DC MOV X0, X21
	0x0328C1E0 MOV X1, X20
	0x0328C1E4 MOV X2, X23
	0x0328C1E8 MOV X3, X19
	0x0328C1EC BLR X8
	0x0328C1F0 CBNZ X0, 0x328C208
	0x0328C1F4 LDR W8, [X22 + 0x18]
	0x0328C1F8 ADD X24, X24, 0x1
	0x0328C1FC CMP X24, W8, SXTW
	0x0328C200 B.LT 0x328C118
	0x0328C204 MOV X0, X31
	0x0328C208 LDP X20, X19, [X31 + 0x40]
	0x0328C20C LDP X22, X21, [X31 + 0x30]
	0x0328C210 LDP X24, X23, [X31 + 0x20]
	0x0328C214 LDP X26, X25, [X31 + 0x10]
	0x0328C218 LDR X30, [X31], #0x50
	0x0328C21C RET
	0x0328C220 CBZ X21, 0x328C2A4
	0x0328C224 ADRP X10, 0xE98000
	0x0328C228 LDR X8, [X21]
	0x0328C22C LDR X10, [X10 + 0x360]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1151000
	006 Move X20, 0xE98000
	007 Move W8, [X21+1682]
	008 Move X20, [X20+3768]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE98000
	015 Move X0, [X0+3768]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1682], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move X0, [X8+24]
	027 Compare X0, 0
	028 JumpIfEqual {37}
	029 Move X1, X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Call LocalDataStoreMgr.GetNamedDataSlot, X0, X1
	036 Return X0
	037 Call 0x1C17F20

Method: System.Object GetData(System.LocalDataStoreSlot slot)

Disassembly:
	0x0328C230 LDRH W9, [X8 + 0x12E]
	0x0328C234 LDR X1, [X10]
	0x0328C238 CBZ X9, 0x328C25C
	0x0328C23C LDR X10, [X8 + 0xB0]
	0x0328C240 ADD X10, X10, 0x8
	0x0328C244 LDUR X11, [X10 - 0x8]
	0x0328C248 CMP X11, X1
	0x0328C24C B.EQ 0x328C26C
	0x0328C250 SUBS X9, X9, 0x1
	0x0328C254 ADD X10, X10, 0x10
	0x0328C258 B.NE 0x328C244
	0x0328C25C MOV X0, X21

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, X31
	005 Call Thread.get_CurrentContext
	006 Compare X0, 0
	007 JumpIfEqual {17}
	008 Call Context.get_MyLocalStore, X0
	009 Compare X0, 0
	010 JumpIfEqual {17}
	011 Move X1, X19
	012 Move X2, X31
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Call LocalDataStore.GetData, X0, X1
	016 Return X0
	017 Call 0x1C17F20

Method: System.Void SetData(System.LocalDataStoreSlot slot, System.Object data)

Disassembly:
	0x0328C260 MOV W2, W31
	0x0328C264 BL 0x1C5C788
	0x0328C268 B 0x328C278
	0x0328C26C LDRSW X9, [X10]
	0x0328C270 ADD X8, X8, X9, 0x4, LSL
	0x0328C274 ADD X0, X8, 0x138
	0x0328C278 LDP X5, X4, [X0]
	0x0328C27C MOV X0, X21
	0x0328C280 MOV X1, X20
	0x0328C284 MOV X3, X19
	0x0328C288 LDP X20, X19, [X31 + 0x40]
	0x0328C28C LDP X22, X21, [X31 + 0x30]
	0x0328C290 LDP X24, X23, [X31 + 0x20]
	0x0328C294 LDP X26, X25, [X31 + 0x10]
	0x0328C298 MOV X2, X31
	0x0328C29C LDR X30, [X31], #0x50

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X0
	005 Move X0, X31
	006 Move X19, X1
	007 Call Thread.get_CurrentContext
	008 Compare X0, 0
	009 JumpIfEqual {21}
	010 Call Context.get_MyLocalStore, X0
	011 Compare X0, 0
	012 JumpIfEqual {21}
	013 Move X1, X20
	014 Move X2, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X3, X31
	018 Move X30, [X31+32]
	019 Call LocalDataStore.SetData, X0, X1, X2
	020 Return 
	021 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x0328C2A0 BR X5
	0x0328C2A4 BL 0x1C16F20
	0x0328C2A8 BL 0x1C16F28
	0x0328C2AC STP X30, X21, [X31 - 0x20]!
	0x0328C2B0 STP X20, X19, [X31 + 0x10]
	0x0328C2B4 ADRP X20, 0x1150000
	0x0328C2B8 ADRP X21, 0xE97000
	0x0328C2BC LDRB W8, [X20 + 0x69E]
	0x0328C2C0 LDR X21, [X21 + 0xD08]
	0x0328C2C4 MOV X19, X0
	0x0328C2C8 TBNZ X8, 0x0, 0x328C2E0
	0x0328C2CC ADRP X0, 0xE97000
	0x0328C2D0 LDR X0, [X0 + 0xD08]
	0x0328C2D4 BL 0x1C16CF4
	0x0328C2D8 MOVZ W8, 0x1
	0x0328C2DC STRB W8, [X20 + 0x69E]
	0x0328C2E0 LDR X0, [X21]
	0x0328C2E4 LDR W8, [X0 + 0xE0]
	0x0328C2E8 CBNZ W8, 0x328C2F0
	0x0328C2EC BL 0x1C16DFC
	0x0328C2F0 MOV X0, X19
	0x0328C2F4 LDP X20, X19, [X31 + 0x10]
	0x0328C2F8 MOV W1, W31
	0x0328C2FC LDP X30, X21, [X31], #0x20
	0x0328C300 B 0x328C304
	0x0328C304 SUB X31, X31, 0x70
	0x0328C308 STP X29, X30, [X31 + 0x10]
	0x0328C30C STP X28, X27, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x1151000
	006 Move X21, 0xE99000
	007 Move X20, 0xE98000
	008 Move W8, [X19+1683]
	009 Move X21, [X21+1528]
	010 Move X20, [X20+3768]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xE98000
	016 Move X0, [X0+3768]
	017 Call 0x1C17CF4
	018 Move X0, 0xE99000
	019 Move X0, [X0+1528]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+1683], W8
	023 Move X0, [X21]
	024 Call 0x1C17F10
	025 Move X1, X31
	026 Move X19, X0
	027 Call LocalDataStoreMgr..ctor, X0
	028 Move X8, [X20]
	029 Move X8, [X8+184]
	030 Move [X8+24], X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 

