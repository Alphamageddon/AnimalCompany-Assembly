Type: System.Runtime.Remoting.Lifetime.Lease

Method: System.Void .ctor()

Disassembly:
	0x03283B10 MOV X21, X0
	0x03283B14 STR X0, [X22 + 0x58]
	0x03283B18 CBZ X0, 0x3283B94
	0x03283B1C ADRP X10, 0xEA1000
	0x03283B20 LDR X8, [X21]
	0x03283B24 LDR X10, [X10 + 0x3B8]
	0x03283B28 LDRH W9, [X8 + 0x12E]
	0x03283B2C LDR X1, [X10]
	0x03283B30 CBZ X9, 0x3283B54
	0x03283B34 LDR X10, [X8 + 0xB0]
	0x03283B38 ADD X10, X10, 0x8
	0x03283B3C LDUR X11, [X10 - 0x8]
	0x03283B40 CMP X11, X1
	0x03283B44 B.EQ 0x3283B64
	0x03283B48 SUBS X9, X9, 0x1
	0x03283B4C ADD X10, X10, 0x10
	0x03283B50 B.NE 0x3283B3C
	0x03283B54 MOVZ W2, 0x1
	0x03283B58 MOV X0, X21
	0x03283B5C BL 0x1C5C788
	0x03283B60 B 0x3283B74
	0x03283B64 LDR W9, [X10]
	0x03283B68 ADD W9, W9, 0x1
	0x03283B6C ADD X8, X8, W9, 0x4, SXTW
	0x03283B70 ADD X0, X8, 0x138
	0x03283B74 LDP X4, X3, [X0]
	0x03283B78 MOV X0, X21
	0x03283B7C MOV X1, X20
	0x03283B80 MOV X2, X19
	0x03283B84 LDP X20, X19, [X31 + 0x20]
	0x03283B88 LDP X22, X21, [X31 + 0x10]
	0x03283B8C LDR X30, [X31], #0x30
	0x03283B90 BR X4
	0x03283B94 BL 0x1C16F20
	0x03283B98 STR X30, [X31 - 0x30]!
	0x03283B9C STP X22, X21, [X31 + 0x10]
	0x03283BA0 STP X20, X19, [X31 + 0x20]
	0x03283BA4 ADRP X19, 0x1159000
	0x03283BA8 LDRB W8, [X19 + 0x636]
	0x03283BAC MOV X20, X1
	0x03283BB0 MOV X21, X0
	0x03283BB4 TBNZ X8, 0x0, 0x3283BE4
	0x03283BB8 ADRP X0, 0xE70000
	0x03283BBC LDR X0, [X0 + 0xE00]
	0x03283BC0 BL 0x1C16CF4
	0x03283BC4 ADRP X0, 0xEA1000
	0x03283BC8 LDR X0, [X0 + 0x3B8]
	0x03283BCC BL 0x1C16CF4
	0x03283BD0 ADRP X0, 0xEA0000
	0x03283BD4 LDR X0, [X0 + 0xD58]
	0x03283BD8 BL 0x1C16CF4
	0x03283BDC MOVZ W8, 0x1
	0x03283BE0 STRB W8, [X19 + 0x636]
	0x03283BE4 LDR X0, [X21 + 0x48]
	0x03283BE8 MOVZ W1, 0x1
	0x03283BEC MOV X2, X31
	0x03283BF0 BL 0x33A7048
	0x03283BF4 CBZ X0, 0x3283D94
	0x03283BF8 ADRP X9, 0xEA0000
	0x03283BFC LDR X9, [X9 + 0xD58]
	0x03283C00 LDR X8, [X0]
	0x03283C04 MOV X19, X0
	0x03283C08 LDR X1, [X9]
	0x03283C0C LDRB W10, [X8 + 0x130]
	0x03283C10 LDRB W9, [X1 + 0x130]
	0x03283C14 CMP W10, W9
	0x03283C18 B.CC 0x3283D98
	0x03283C1C LDR X8, [X8 + 0xC8]
	0x03283C20 ADD X8, X8, X9, 0x3, LSL
	0x03283C24 LDUR X8, [X8 - 0x8]
	0x03283C28 CMP X8, X1
	0x03283C2C B.NE 0x3283D98
	0x03283C30 MOV X0, X19
	0x03283C34 MOV X1, X31
	0x03283C38 BL 0x33C6AD4
	0x03283C3C CBNZ X0, 0x3283C50
	0x03283C40 MOV X0, X19
	0x03283C44 MOV X1, X21
	0x03283C48 MOV X2, X31
	0x03283C4C BL 0x33C6B0C
	0x03283C50 LDR X0, [X21 + 0x60]
	0x03283C54 CBZ X0, 0x3283D94
	0x03283C58 MOV X1, X19
	0x03283C5C MOV W2, W31
	0x03283C60 BL 0x328355C
	0x03283C64 CBZ X0, 0x3283D94

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x115A000
	006 Move X20, 0xEA2000
	007 Move W8, [X21+1636]
	008 Move X20, [X20+224]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xE72000
	015 Move X0, [X0+2544]
	016 Call 0x1C17CF4
	017 Move X0, 0xEA2000
	018 Move X0, [X0+224]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1636], W8
	022 Move X0, X19
	023 Move X1, X31
	024 Call MarshalByRefObject..ctor, X0
	025 Move W8, 1
	026 Move [X19+32], W8
	027 Move X0, [X20]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X21, 0x115A000
	033 Move W8, [X21+1721]
	034 Compare W8, 0
	035 JumpIfNotEqual {41}
	036 Move X0, 0xEA2000
	037 Move X0, [X0+224]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X21+1721], W8
	041 Move X0, [X20]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {47}
	045 Call 0x1C17DFC
	046 Move X0, [X20]
	047 Move X8, [X0+184]
	048 Move X21, 0x115A000
	049 Move X8, [X8+8]
	050 Move [X19+40], X8
	051 Move W8, [X21+1722]
	052 Compare W8, 0
	053 JumpIfNotEqual {59}
	054 Move X0, X20
	055 Call 0x1C17CF4
	056 Move X0, [X20]
	057 Move W8, 1
	058 Move [X21+1722], W8
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {64}
	062 Call 0x1C17DFC
	063 Move X0, [X20]
	064 Move X8, [X0+184]
	065 Move X21, 0x115A000
	066 Move X8, [X8+16]
	067 Move [X19+48], X8
	068 Move W8, [X21+1723]
	069 Compare W8, 0
	070 JumpIfNotEqual {76}
	071 Move X0, X20
	072 Call 0x1C17CF4
	073 Move X0, [X20]
	074 Move W8, 1
	075 Move [X21+1723], W8
	076 Move X21, 0xE72000
	077 Move W8, [X0+224]
	078 Move X21, [X21+2544]
	079 Compare W8, 0
	080 JumpIfNotEqual {83}
	081 Call 0x1C17DFC
	082 Move X0, [X20]
	083 Move X8, [X0+184]
	084 Move X8, [X8+24]
	085 Move [X19+56], X8
	086 Move X0, [X21]
	087 Move W8, [X0+224]
	088 Compare W8, 0
	089 JumpIfNotEqual {91}
	090 Call 0x1C17DFC
	091 Move X0, X31
	092 Call DateTime.get_UtcNow
	093 Move X1, [X19+40]
	094 Move X2, X31
	095 Call DateTime.op_Addition, X0, X1
	096 Move [X19+24], X0
	097 Move X20, [X31+16]
	098 Move X19, [X31+24]
	099 Move X30, [X31+32]
	100 Move X21, [X31+40]
	101 Return 

Method: System.TimeSpan get_CurrentLeaseTime()

Disassembly:
	0x03288AE0 LDR X0, [X0 + 0x3B8]
	0x03288AE4 BL 0x1C16CF4
	0x03288AE8 MOVZ W8, 0x1
	0x03288AEC STRB W8, [X21 + 0x66D]
	0x03288AF0 MOV X1, X19
	0x03288AF4 BL 0x3288B70
	0x03288AF8 LDR X20, [X20 + 0x10]
	0x03288AFC CBZ X20, 0x3288B6C
	0x03288B00 ADRP X10, 0xE9C000
	0x03288B04 LDR X8, [X20]
	0x03288B08 LDR X10, [X10 + 0x3B8]
	0x03288B0C LDRH W9, [X8 + 0x12E]
	0x03288B10 LDR X1, [X10]
	0x03288B14 CBZ X9, 0x3288B38
	0x03288B18 LDR X10, [X8 + 0xB0]
	0x03288B1C ADD X10, X10, 0x8
	0x03288B20 LDUR X11, [X10 - 0x8]
	0x03288B24 CMP X11, X1
	0x03288B28 B.EQ 0x3288B48
	0x03288B2C SUBS X9, X9, 0x1
	0x03288B30 ADD X10, X10, 0x10
	0x03288B34 B.NE 0x3288B20
	0x03288B38 MOV X0, X20
	0x03288B3C MOV W2, W31
	0x03288B40 BL 0x1C5C788
	0x03288B44 B 0x3288B54

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1155000
	006 Move X20, 0xE6D000
	007 Move W8, [X21+1637]
	008 Move X20, [X20+2544]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE6D000
	015 Move X0, [X0+2544]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1637], W8
	019 Move X0, [X20]
	020 Move X19, [X19+24]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X31
	026 Call DateTime.get_UtcNow
	027 Move X1, X0
	028 Move X0, X19
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X2, X31
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Call DateTime.op_Subtraction, X0, X1
	035 Return X0

Method: System.Runtime.Remoting.Lifetime.LeaseState get_CurrentState()

Disassembly:
	0x03288B48 LDRSW X9, [X10]
	0x03288B4C ADD X8, X8, X9, 0x4, LSL

ISIL:
	001 Move W0, [X0+32]
	002 Return X0

Method: System.Void Activate()

Disassembly:
	0x03288B50 ADD X0, X8, 0x138
	0x03288B54 LDP X3, X2, [X0]
	0x03288B58 MOV X0, X20

ISIL:
	001 Move W8, 2
	002 Move [X0+32], W8
	003 Return 

Method: System.TimeSpan get_RenewOnCallTime()

Disassembly:
	0x03288B5C MOV X1, X19
	0x03288B60 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.TimeSpan Renew(System.TimeSpan renewalTime)

Disassembly:
	0x03288B64 LDP X30, X21, [X31], #0x20
	0x03288B68 BR X3
	0x03288B6C BL 0x1C16F20
	0x03288B70 STR X30, [X31 - 0x30]!
	0x03288B74 STP X22, X21, [X31 + 0x10]
	0x03288B78 STP X20, X19, [X31 + 0x20]
	0x03288B7C ADRP X20, 0x1154000
	0x03288B80 ADRP X21, 0xE9B000
	0x03288B84 LDRB W8, [X20 + 0x66F]
	0x03288B88 LDR X21, [X21 + 0xE68]
	0x03288B8C MOV X19, X1
	0x03288B90 TBNZ X8, 0x0, 0x3288BCC
	0x03288B94 ADRP X0, 0xE9C000
	0x03288B98 LDR X0, [X0 + 0x2E0]
	0x03288B9C BL 0x1C16CF4
	0x03288BA0 ADRP X0, 0xE9B000
	0x03288BA4 LDR X0, [X0 + 0xE68]
	0x03288BA8 BL 0x1C16CF4
	0x03288BAC ADRP X0, 0xE9C000
	0x03288BB0 LDR X0, [X0 + 0x298]
	0x03288BB4 BL 0x1C16CF4
	0x03288BB8 ADRP X0, 0xE6D000
	0x03288BBC LDR X0, [X0 + 0x570]
	0x03288BC0 BL 0x1C16CF4
	0x03288BC4 MOVZ W8, 0x1
	0x03288BC8 STRB W8, [X20 + 0x66F]
	0x03288BCC LDR X0, [X21]
	0x03288BD0 LDR W8, [X0 + 0xE0]
	0x03288BD4 CBNZ W8, 0x3288BDC
	0x03288BD8 BL 0x1C16DFC
	0x03288BDC MOV X0, X19
	0x03288BE0 BL 0x3282518
	0x03288BE4 CBZ X0, 0x3288DF8
	0x03288BE8 ADRP X9, 0xE9C000
	0x03288BEC LDR X9, [X9 + 0x298]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1155000
	007 Move X22, 0xE6D000
	008 Move W8, [X21+1638]
	009 Move X22, [X22+2544]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xE6D000
	017 Move X0, [X0+2544]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1638], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X31
	027 Call DateTime.get_UtcNow
	028 Move X1, X20
	029 Move X2, X31
	030 Call DateTime.op_Addition, X0, X1
	031 Move X1, [X19+24]
	032 Move X2, X31
	033 Move X20, X0
	034 Call DateTime.op_GreaterThan, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {40}
	039 Move [X19+24], X20
	040 Move X0, X19
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Move X30, [X31+48]
	046 Call Lease.get_CurrentLeaseTime, X0
	047 Return X0

Method: System.Void Unregister(System.Runtime.Remoting.Lifetime.ISponsor obj)

Disassembly:
	0x03288BF0 LDR X8, [X0]
	0x03288BF4 LDR X1, [X9]
	0x03288BF8 LDRB W10, [X8 + 0x130]
	0x03288BFC LDRB W9, [X1 + 0x130]
	0x03288C00 CMP W10, W9
	0x03288C04 B.CC 0x3288DF4
	0x03288C08 LDR X8, [X8 + 0xC8]
	0x03288C0C ADD X8, X8, X9, 0x3, LSL
	0x03288C10 LDUR X8, [X8 - 0x8]
	0x03288C14 CMP X8, X1
	0x03288C18 B.NE 0x3288DF4
	0x03288C1C LDR X19, [X0 + 0x68]
	0x03288C20 CBZ X19, 0x3288D58
	0x03288C24 ADRP X22, 0xE9C000
	0x03288C28 LDR X8, [X19]
	0x03288C2C LDR X22, [X22 + 0x2E0]
	0x03288C30 LDRH W9, [X8 + 0x12E]
	0x03288C34 LDR X1, [X22]
	0x03288C38 CBZ X9, 0x3288C5C
	0x03288C3C LDR X10, [X8 + 0xB0]
	0x03288C40 ADD X10, X10, 0x8
	0x03288C44 LDUR X11, [X10 - 0x8]
	0x03288C48 CMP X11, X1
	0x03288C4C B.EQ 0x3288C6C
	0x03288C50 SUBS X9, X9, 0x1
	0x03288C54 ADD X10, X10, 0x10
	0x03288C58 B.NE 0x3288C44
	0x03288C5C MOV X0, X19
	0x03288C60 MOV W2, W31
	0x03288C64 BL 0x1C5C788
	0x03288C68 B 0x3288C78
	0x03288C6C LDRSW X9, [X10]
	0x03288C70 ADD X8, X8, X9, 0x4, LSL
	0x03288C74 ADD X0, X8, 0x138
	0x03288C78 LDP X8, X1, [X0]
	0x03288C7C ADRP X21, 0xE6D000
	0x03288C80 LDR X21, [X21 + 0x570]
	0x03288C84 MOV X0, X19
	0x03288C88 BLR X8
	0x03288C8C LDR X8, [X19]
	0x03288C90 LDR X1, [X22]
	0x03288C94 MOV X20, X0
	0x03288C98 LDRH W9, [X8 + 0x12E]
	0x03288C9C CBZ X9, 0x3288CC0
	0x03288CA0 LDR X10, [X8 + 0xB0]
	0x03288CA4 ADD X10, X10, 0x8
	0x03288CA8 LDUR X11, [X10 - 0x8]
	0x03288CAC CMP X11, X1
	0x03288CB0 B.EQ 0x3288CD0
	0x03288CB4 SUBS X9, X9, 0x1
	0x03288CB8 ADD X10, X10, 0x10
	0x03288CBC B.NE 0x3288CA8
	0x03288CC0 MOVZ W2, 0x2
	0x03288CC4 MOV X0, X19
	0x03288CC8 BL 0x1C5C788
	0x03288CCC B 0x3288CE0
	0x03288CD0 LDR W9, [X10]
	0x03288CD4 ADD W9, W9, 0x2
	0x03288CD8 ADD X8, X8, W9, 0x4, SXTW
	0x03288CDC ADD X0, X8, 0x138
	0x03288CE0 LDP X8, X1, [X0]
	0x03288CE4 MOV X0, X19
	0x03288CE8 BLR X8
	0x03288CEC LDR X8, [X21]
	0x03288CF0 MOV X21, X0
	0x03288CF4 LDR W9, [X8 + 0xE0]
	0x03288CF8 CBNZ W9, 0x3288D04
	0x03288CFC MOV X0, X8
	0x03288D00 BL 0x1C16DFC
	0x03288D04 MOV X0, X20
	0x03288D08 MOV X1, X21
	0x03288D0C MOV X2, X31
	0x03288D10 BL 0x3394CF0
	0x03288D14 TBZ X0, 0x0, 0x3288D58
	0x03288D18 LDR X8, [X19]
	0x03288D1C LDR X1, [X22]
	0x03288D20 LDRH W9, [X8 + 0x12E]
	0x03288D24 CBZ X9, 0x3288D48
	0x03288D28 LDR X10, [X8 + 0xB0]
	0x03288D2C ADD X10, X10, 0x8
	0x03288D30 LDUR X11, [X10 - 0x8]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, X1
	007 Move X19, X0
	008 Move [X31+12], W31
	009 Add X1, X31, 12
	010 Move X2, X31
	011 Call Monitor.Enter, X0, X1
	012 Move X8, [X19+64]
	013 Compare X8, 0
	014 JumpIfEqual {44}
	015 Move W21, W31
	016 Move X9, [X8]
	017 Move X1, [X9+672]
	018 Move X10, [X9+664]
	019 Move X0, X8
	020 NotImplemented "Instruction BLR not yet implemented."
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X0, [X19+64]
	023 Compare X0, 0
	024 JumpIfEqual {59}
	025 Move X8, [X0]
	026 Move X9, [X8+744]
	027 Move X2, [X8+752]
	028 Move W1, W21
	029 NotImplemented "Instruction BLR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X8, [X19+64]
	032 Add W21, W21, 1
	033 Compare X8, 0
	034 JumpIfNotEqual {16}
	035 Call 0x1C17F20
	036 Move X0, [X19+64]
	037 Compare X0, 0
	038 JumpIfEqual {62}
	039 Move X8, [X0]
	040 Move X9, [X8+984]
	041 Move X2, [X8+992]
	042 Move W1, W21
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move X21, X31
	045 Move W8, [X31+12]
	046 Compare W8, 0
	047 JumpIfEqual {51}
	048 Move X0, X19
	049 Move X1, X31
	050 Call Monitor.Exit, X0
	051 Compare X21, 0
	052 JumpIfNotEqual {60}
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X30, [X31+16]
	056 Move X21, [X31+24]
	057 Add X31, X31, 48
	058 Return 
	059 Call 0x1C17F20
	060 Move X0, X21
	061 Call 0x1C17F18
	062 Call 0x1C17F20
	063 Move X20, X0
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X0, X20
	066 Call 0x3EB2AD0
	067 Move X21, [X0]
	068 Call 0x3EB2AE0
	069 Move X21, X31
	070 Move X20, X0
	071 Move W8, [X31+12]
	072 Compare W8, 0
	073 JumpIfEqual {77}
	074 Move X0, X19
	075 Move X1, X31
	076 Call Monitor.Exit, X0
	077 Compare X21, 0
	078 JumpIfNotEqual {81}
	079 Move X0, X20
	080 Call 0x1D2D690
	081 Move X0, X21
	082 Call 0x1C17F18
	083 Call 0x1991590

Method: System.Void UpdateState()

Disassembly:
	0x03288D34 CMP X11, X1
	0x03288D38 B.EQ 0x3288D68
	0x03288D3C SUBS X9, X9, 0x1
	0x03288D40 ADD X10, X10, 0x10
	0x03288D44 B.NE 0x3288D30
	0x03288D48 MOVZ W2, 0x2
	0x03288D4C MOV X0, X19
	0x03288D50 BL 0x1C5C788
	0x03288D54 B 0x3288D78
	0x03288D58 LDP X20, X19, [X31 + 0x20]
	0x03288D5C LDP X22, X21, [X31 + 0x10]
	0x03288D60 LDR X30, [X31], #0x30
	0x03288D64 RET
	0x03288D68 LDR W9, [X10]
	0x03288D6C ADD W9, W9, 0x2
	0x03288D70 ADD X8, X8, W9, 0x4, SXTW
	0x03288D74 ADD X0, X8, 0x138
	0x03288D78 LDP X8, X1, [X0]
	0x03288D7C MOV X0, X19
	0x03288D80 BLR X8
	0x03288D84 LDR X8, [X19]
	0x03288D88 LDR X1, [X22]
	0x03288D8C MOV X20, X0
	0x03288D90 LDRH W9, [X8 + 0x12E]
	0x03288D94 CBZ X9, 0x3288DB8
	0x03288D98 LDR X10, [X8 + 0xB0]
	0x03288D9C ADD X10, X10, 0x8
	0x03288DA0 LDUR X11, [X10 - 0x8]
	0x03288DA4 CMP X11, X1
	0x03288DA8 B.EQ 0x3288DC8
	0x03288DAC SUBS X9, X9, 0x1
	0x03288DB0 ADD X10, X10, 0x10
	0x03288DB4 B.NE 0x3288DA0
	0x03288DB8 MOVZ W2, 0x3
	0x03288DBC MOV X0, X19
	0x03288DC0 BL 0x1C5C788
	0x03288DC4 B 0x3288DD8
	0x03288DC8 LDR W9, [X10]
	0x03288DCC ADD W9, W9, 0x3
	0x03288DD0 ADD X8, X8, W9, 0x4, SXTW
	0x03288DD4 ADD X0, X8, 0x138
	0x03288DD8 LDP X3, X2, [X0]
	0x03288DDC MOV X0, X19
	0x03288DE0 MOV X1, X20
	0x03288DE4 LDP X20, X19, [X31 + 0x20]
	0x03288DE8 LDP X22, X21, [X31 + 0x10]
	0x03288DEC LDR X30, [X31], #0x30
	0x03288DF0 BR X3
	0x03288DF4 BL 0x1C171E0
	0x03288DF8 BL 0x1C16F20
	0x03288DFC STR X30, [X31 - 0x30]!
	0x03288E00 STP X22, X21, [X31 + 0x10]
	0x03288E04 STP X20, X19, [X31 + 0x20]
	0x03288E08 ADRP X22, 0x1154000
	0x03288E0C LDRB W8, [X22 + 0x66E]
	0x03288E10 MOV X19, X2
	0x03288E14 MOV X20, X1
	0x03288E18 MOV X21, X0
	0x03288E1C TBNZ X8, 0x0, 0x3288E34
	0x03288E20 ADRP X0, 0xE9C000
	0x03288E24 LDR X0, [X0 + 0x3B8]
	0x03288E28 BL 0x1C16CF4
	0x03288E2C MOVZ W8, 0x1
	0x03288E30 STRB W8, [X22 + 0x66E]
	0x03288E34 MOV X1, X20
	0x03288E38 BL 0x3288B70
	0x03288E3C LDR X21, [X21 + 0x10]
	0x03288E40 CBZ X21, 0x3288EBC
	0x03288E44 ADRP X10, 0xE9C000
	0x03288E48 LDR X8, [X21]
	0x03288E4C LDR X10, [X10 + 0x3B8]
	0x03288E50 LDRH W9, [X8 + 0x12E]
	0x03288E54 LDR X1, [X10]
	0x03288E58 CBZ X9, 0x3288E7C
	0x03288E5C LDR X10, [X8 + 0xB0]
	0x03288E60 ADD X10, X10, 0x8
	0x03288E64 LDUR X11, [X10 - 0x8]
	0x03288E68 CMP X11, X1
	0x03288E6C B.EQ 0x3288E8C
	0x03288E70 SUBS X9, X9, 0x1
	0x03288E74 ADD X10, X10, 0x10
	0x03288E78 B.NE 0x3288E64
	0x03288E7C MOVZ W2, 0x1
	0x03288E80 MOV X0, X21
	0x03288E84 BL 0x1C5C788
	0x03288E88 B 0x3288E9C
	0x03288E8C LDR W9, [X10]
	0x03288E90 ADD W9, W9, 0x1
	0x03288E94 ADD X8, X8, W9, 0x4, SXTW
	0x03288E98 ADD X0, X8, 0x138
	0x03288E9C LDP X4, X3, [X0]
	0x03288EA0 MOV X0, X21
	0x03288EA4 MOV X1, X20
	0x03288EA8 MOV X2, X19
	0x03288EAC LDP X20, X19, [X31 + 0x20]
	0x03288EB0 LDP X22, X21, [X31 + 0x10]
	0x03288EB4 LDR X30, [X31], #0x30
	0x03288EB8 BR X4
	0x03288EBC BL 0x1C16F20
	0x03288EC0 STR X30, [X31 - 0x30]!

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x1155000
	007 Move W8, [X20+1639]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xE9D000
	014 Move X0, [X0+1272]
	015 Call 0x1C17CF4
	016 Move X0, 0xE6E000
	017 Move X0, [X0+1392]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+1639], W8
	021 Move W8, [X19+32]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X21, 0xE6E000
	024 Move X21, [X21+1392]
	025 Move X0, X19
	026 Call Lease.get_CurrentLeaseTime, X0
	027 Move X8, [X21]
	028 Move X20, X0
	029 Move W9, [X8+224]
	030 Compare W9, 0
	031 JumpIfNotEqual {35}
	032 Move X0, X8
	033 Call 0x1C17DFC
	034 Move X8, [X21]
	035 Move X8, [X8+184]
	036 Move X0, X20
	037 Move X2, X31
	038 Move X1, [X8]
	039 Call TimeSpan.op_GreaterThan, X0, X1
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {81}
	044 Move X8, [X19+64]
	045 Compare X8, 0
	046 JumpIfEqual {79}
	047 Move W8, 3
	048 Move [X19+32], W8
	049 Move [X31+12], W31
	050 Add X1, X31, 12
	051 Move X0, X19
	052 Move X2, X31
	053 Call Monitor.Enter, X0, X1
	054 Move X8, 0xE9D000
	055 Move X20, [X19+64]
	056 Move X8, [X8+1272]
	057 Move X0, [X8]
	058 Call 0x1C17F10
	059 Move X21, X0
	060 Move X1, X20
	061 Move X2, X31
	062 Call Queue..ctor, X0, X1
	063 Move X20, X31
	064 Move [X19+72], X21
	065 Move W21, 5
	066 Move W8, [X31+12]
	067 Compare W8, 0
	068 JumpIfEqual {72}
	069 Move X0, X19
	070 Move X1, X31
	071 Call Monitor.Exit, X0
	072 Compare X20, 0
	073 JumpIfNotEqual {87}
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Compare W21, 0
	076 JumpIfNotEqual {81}
	077 Move X0, X19
	078 Call Lease.CheckNextSponsor, X0
	079 Move W8, 4
	080 Move [X19+32], W8
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X30, [X31+16]
	084 Move X21, [X31+24]
	085 Add X31, X31, 48
	086 Return 
	087 Move X0, X20
	088 Call 0x1C17F18
	089 Move X21, X0
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X0, X21
	092 Call 0x3EB2AD0
	093 Move X20, [X0]
	094 Call 0x3EB2AE0
	095 Move W21, W31
	096 Move X20, X31
	097 Move X21, X0
	098 Move W8, [X31+12]
	099 Compare W8, 0
	100 JumpIfEqual {104}
	101 Move X0, X19
	102 Move X1, X31
	103 Call Monitor.Exit, X0
	104 Compare X20, 0
	105 JumpIfNotEqual {108}
	106 Move X0, X21
	107 Call 0x1D2D690
	108 Move X0, X20
	109 Call 0x1C17F18
	110 Call 0x1991590

Method: System.Void CheckNextSponsor()

Disassembly:
	0x03288EC4 STP X22, X21, [X31 + 0x10]
	0x03288EC8 STP X20, X19, [X31 + 0x20]
	0x03288ECC ADRP X19, 0x1154000
	0x03288ED0 ADRP X22, 0xE9C000
	0x03288ED4 ADRP X20, 0xE9C000
	0x03288ED8 ADRP X21, 0xE6D000
	0x03288EDC LDRB W8, [X19 + 0x670]
	0x03288EE0 LDR X22, [X22 + 0x528]
	0x03288EE4 LDR X20, [X20 + 0xE0]
	0x03288EE8 LDR X21, [X21 + 0x570]
	0x03288EEC TBNZ X8, 0x0, 0x3288F1C
	0x03288EF0 ADRP X0, 0xE9C000
	0x03288EF4 LDR X0, [X0 + 0x528]
	0x03288EF8 BL 0x1C16CF4
	0x03288EFC ADRP X0, 0xE9C000
	0x03288F00 LDR X0, [X0 + 0xE0]
	0x03288F04 BL 0x1C16CF4
	0x03288F08 ADRP X0, 0xE6D000
	0x03288F0C LDR X0, [X0 + 0x570]
	0x03288F10 BL 0x1C16CF4
	0x03288F14 MOVZ W8, 0x1
	0x03288F18 STRB W8, [X19 + 0x670]
	0x03288F1C LDR X0, [X22]
	0x03288F20 BL 0x1C16F10
	0x03288F24 MOV X19, X0
	0x03288F28 BL 0x3288A38
	0x03288F2C LDR X8, [X20]
	0x03288F30 LDR X8, [X8 + 0xB8]
	0x03288F34 STR X19, [X8 + 0x20]
	0x03288F38 LDR X0, [X21]
	0x03288F3C LDR W8, [X0 + 0xE0]
	0x03288F40 CBNZ W8, 0x3288F48
	0x03288F44 BL 0x1C16DFC
	0x03288F48 FMOV D0, 8.000000000465661
	0x03288F4C MOV X0, X31
	0x03288F50 BL 0x3394754
	0x03288F54 LDR X8, [X20]
	0x03288F58 FMOV D0, 4.000000000232831
	0x03288F5C LDR X8, [X8 + 0xB8]
	0x03288F60 STR X0, [X8]
	0x03288F64 MOV X0, X31
	0x03288F68 BL 0x3394644
	0x03288F6C LDR X8, [X20]
	0x03288F70 FMOV D0, 2
	0x03288F74 LDR X8, [X8 + 0xB8]
	0x03288F78 STR X0, [X8 + 0x8]
	0x03288F7C MOV X0, X31
	0x03288F80 BL 0x3394644
	0x03288F84 LDR X8, [X20]
	0x03288F88 FMOV D0, 2
	0x03288F8C LDR X8, [X8 + 0xB8]
	0x03288F90 STR X0, [X8 + 0x10]
	0x03288F94 MOV X0, X31
	0x03288F98 BL 0x3394644
	0x03288F9C LDR X8, [X20]
	0x03288FA0 LDP X20, X19, [X31 + 0x20]
	0x03288FA4 LDP X22, X21, [X31 + 0x10]
	0x03288FA8 LDR X8, [X8 + 0xB8]
	0x03288FAC STR X0, [X8 + 0x18]
	0x03288FB0 LDR X30, [X31], #0x30
	0x03288FB4 RET
	0x03288FB8 STR X30, [X31 - 0x20]!
	0x03288FBC STP X20, X19, [X31 + 0x10]
	0x03288FC0 ADRP X20, 0x1154000
	0x03288FC4 ADRP X19, 0xE9C000
	0x03288FC8 LDRB W8, [X20 + 0x671]
	0x03288FCC LDR X19, [X19 + 0xE0]
	0x03288FD0 TBNZ X8, 0x0, 0x3288FE8
	0x03288FD4 ADRP X0, 0xE9C000
	0x03288FD8 LDR X0, [X0 + 0xE0]
	0x03288FDC BL 0x1C16CF4
	0x03288FE0 MOVZ W8, 0x1
	0x03288FE4 STRB W8, [X20 + 0x671]
	0x03288FE8 LDR X0, [X19]
	0x03288FEC LDR W8, [X0 + 0xE0]
	0x03288FF0 CBNZ W8, 0x3288FFC
	0x03288FF4 BL 0x1C16DFC
	0x03288FF8 LDR X0, [X19]
	0x03288FFC LDR X8, [X0 + 0xB8]
	0x03289000 LDP X20, X19, [X31 + 0x10]
	0x03289004 LDR X0, [X8]
	0x03289008 LDR X30, [X31], #0x20
	0x0328900C RET
	0x03289010 STR X30, [X31 - 0x20]!
	0x03289014 STP X20, X19, [X31 + 0x10]
	0x03289018 ADRP X20, 0x1153000
	0x0328901C ADRP X19, 0xE9B000
	0x03289020 LDRB W8, [X20 + 0x673]
	0x03289024 LDR X19, [X19 + 0xE0]
	0x03289028 TBNZ X8, 0x0, 0x3289040
	0x0328902C ADRP X0, 0xE9B000
	0x03289030 LDR X0, [X0 + 0xE0]
	0x03289034 BL 0x1C16CF4
	0x03289038 MOVZ W8, 0x1
	0x0328903C STRB W8, [X20 + 0x673]
	0x03289040 LDR X0, [X19]
	0x03289044 LDR W8, [X0 + 0xE0]
	0x03289048 CBNZ W8, 0x3289054
	0x0328904C BL 0x1C16DFC
	0x03289050 LDR X0, [X19]
	0x03289054 LDR X8, [X0 + 0xB8]
	0x03289058 LDP X20, X19, [X31 + 0x10]
	0x0328905C LDR X0, [X8 + 0x8]
	0x03289060 LDR X30, [X31], #0x20
	0x03289064 RET
	0x03289068 STP X30, X21, [X31 - 0x20]!
	0x0328906C STP X20, X19, [X31 + 0x10]
	0x03289070 ADRP X21, 0x1153000
	0x03289074 ADRP X20, 0xE9B000
	0x03289078 LDRB W8, [X21 + 0x674]
	0x0328907C LDR X20, [X20 + 0xE0]
	0x03289080 MOV X19, X0
	0x03289084 TBNZ X8, 0x0, 0x328909C
	0x03289088 ADRP X0, 0xE9B000
	0x0328908C LDR X0, [X0 + 0xE0]
	0x03289090 BL 0x1C16CF4
	0x03289094 MOVZ W8, 0x1
	0x03289098 STRB W8, [X21 + 0x674]
	0x0328909C LDR X0, [X20]
	0x032890A0 LDR W8, [X0 + 0xE0]
	0x032890A4 CBNZ W8, 0x32890B0
	0x032890A8 BL 0x1C16DFC
	0x032890AC LDR X0, [X20]
	0x032890B0 LDR X8, [X0 + 0xB8]
	0x032890B4 STR X19, [X8 + 0x8]
	0x032890B8 LDP X20, X19, [X31 + 0x10]
	0x032890BC LDP X30, X21, [X31], #0x20
	0x032890C0 RET
	0x032890C4 STR X30, [X31 - 0x20]!
	0x032890C8 STP X20, X19, [X31 + 0x10]
	0x032890CC ADRP X20, 0x1153000
	0x032890D0 ADRP X19, 0xE9B000
	0x032890D4 LDRB W8, [X20 + 0x675]
	0x032890D8 LDR X19, [X19 + 0xE0]
	0x032890DC TBNZ X8, 0x0, 0x32890F4
	0x032890E0 ADRP X0, 0xE9B000
	0x032890E4 LDR X0, [X0 + 0xE0]
	0x032890E8 BL 0x1C16CF4
	0x032890EC MOVZ W8, 0x1
	0x032890F0 STRB W8, [X20 + 0x675]
	0x032890F4 LDR X0, [X19]
	0x032890F8 LDR W8, [X0 + 0xE0]
	0x032890FC CBNZ W8, 0x3289108
	0x03289100 BL 0x1C16DFC

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x1155000
	009 Move W8, [X20+1640]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0xE94000
	016 Move X0, [X0+1816]
	017 Call 0x1C17CF4
	018 Move X0, 0xE9D000
	019 Move X0, [X0+1280]
	020 Call 0x1C17CF4
	021 Move X0, 0xE9D000
	022 Move X0, [X0+1288]
	023 Call 0x1C17CF4
	024 Move X0, 0xE9D000
	025 Move X0, [X0+1296]
	026 Call 0x1C17CF4
	027 Move X0, 0xE9D000
	028 Move X0, [X0+1304]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+1640], W8
	032 Move X0, [X19+72]
	033 Compare X0, 0
	034 JumpIfEqual {159}
	035 Move X8, [X0]
	036 Move X9, [X8+472]
	037 Move X1, [X8+480]
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Compare W0, 0
	040 JumpIfEqual {62}
	041 Move X0, [X19+72]
	042 Compare X0, 0
	043 JumpIfEqual {159}
	044 Move X8, [X0]
	045 Move X23, 0xE9D000
	046 Move X9, [X8+600]
	047 Move X1, [X8+608]
	048 Move X23, [X23+1280]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Compare X0, 0
	051 JumpIfEqual {65}
	052 Move X22, [X23]
	053 Move X21, X0
	054 Move X1, X22
	055 Call 0x1C17E00
	056 Move X20, X0
	057 Compare X0, 0
	058 JumpIfNotEqual {66}
	059 Move X0, X21
	060 Move X1, X22
	061 Call 0x1C181E0
	062 Move W8, 4
	063 Move [X19+32], W8
	064 Move [X19+72], X31
	065 Move X20, X31
	066 Move X8, 0xE9D000
	067 Move X8, [X8+1296]
	068 Move X0, [X8]
	069 Call 0x1C17F10
	070 Compare X20, 0
	071 JumpIfEqual {159}
	072 Move X8, [X20]
	073 Move X1, [X23]
	074 Move X21, X0
	075 NotImplemented "Instruction LDRH not yet implemented."
	076 Compare X9, 0
	077 JumpIfEqual {84}
	078 Move X10, [X8+176]
	079 Add X10, X10, 8
	080 NotImplemented "Instruction LDUR not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Subtract X9, X9, 1
	083 Add X10, X10, 16
	084 Move X0, X20
	085 Move W2, W31
	086 Call 0x1C5D788
	087 NotImplemented "Instruction LDRSW not yet implemented."
	088 Add X8, X8, X9
	089 Add X0, X8, 312
	090 Move X2, [X0+8]
	091 Move X0, X21
	092 Move X1, X20
	093 Call RenewalDelegate..ctor, X0, X1, X2
	094 Move [X19+80], X21
	095 Compare X21, 0
	096 JumpIfEqual {159}
	097 Add X1, X31, 0
	098 Move X0, X21
	099 Move X2, X31
	100 Move X3, X31
	101 Move [X31], X19
	102 Move [X31+8], X31
	103 Call 0x1C17CB0
	104 Compare X0, 0
	105 JumpIfEqual {159}
	106 Move X10, 0xE93000
	107 Move X8, [X0]
	108 Move X10, [X10+1816]
	109 Move X21, 0xE9C000
	110 Move X22, 0xE9C000
	111 NotImplemented "Instruction LDRH not yet implemented."
	112 Move X1, [X10]
	113 Move X21, [X21+1304]
	114 Move X22, [X22+1288]
	115 Move X20, X0
	116 Compare X9, 0
	117 JumpIfEqual {124}
	118 Move X10, [X8+176]
	119 Add X10, X10, 8
	120 NotImplemented "Instruction LDUR not yet implemented."
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Subtract X9, X9, 1
	123 Add X10, X10, 16
	124 Move W2, 1
	125 Move X0, X20
	126 Call 0x1C5D788
	127 Move W9, [X10]
	128 Add W9, W9, 1
	129 Add X8, X8, W9
	130 Add X0, X8, 312
	131 Move X8, [X0]
	132 Move X1, [X0+8]
	133 Move X0, X20
	134 NotImplemented "Instruction BLR not yet implemented."
	135 Move X8, [X21]
	136 Move X21, X0
	137 Move X0, X8
	138 Call 0x1C17F10
	139 Move X2, [X22]
	140 Move X1, X19
	141 Move X3, X31
	142 Move X22, X0
	143 Call WaitOrTimerCallback..ctor, X0, X1, X2
	144 Move X3, [X19+56]
	145 Move W4, 1
	146 Move X0, X21
	147 Move X1, X22
	148 Move X2, X20
	149 Move X5, X31
	150 Call ThreadPool.RegisterWaitForSingleObject, X0, X1, X2, X3, X4
	151 Move X20, [X31+48]
	152 Move X19, [X31+56]
	153 Move X22, [X31+32]
	154 Move X21, [X31+40]
	155 Move X30, [X31+16]
	156 Move X23, [X31+24]
	157 Add X31, X31, 64
	158 Return 
	159 Call 0x1C17F20

Method: System.Void ProcessSponsorResponse(System.Object state, System.Boolean timedOut)

Disassembly:
	0x03289224 LDP X30, X21, [X31], #0x20
	0x03289228 RET
	0x0328922C B 0x1C5FFD4
	0x03289230 B 0x1C5FFEC
	0x03289234 STP X30, X21, [X31 - 0x20]!
	0x03289238 STP X20, X19, [X31 + 0x10]
	0x0328923C ADRP X21, 0x1153000
	0x03289240 ADRP X20, 0xE9A000
	0x03289244 LDRB W8, [X21 + 0x67A]
	0x03289248 LDR X20, [X20 + 0xEB8]
	0x0328924C MOV X19, X0
	0x03289250 TBNZ X8, 0x0, 0x3289268
	0x03289254 ADRP X0, 0xE9A000
	0x03289258 LDR X0, [X0 + 0xEB8]
	0x0328925C BL 0x1C16CF4
	0x03289260 MOVZ W8, 0x1
	0x03289264 STRB W8, [X21 + 0x67A]
	0x03289268 MOV X0, X19
	0x0328926C MOV X1, X31
	0x03289270 BL 0x33BDD8C
	0x03289274 MOV X0, X31
	0x03289278 BL 0x33E6FD8
	0x0328927C STR W0, [X19 + 0x10]
	0x03289280 LDR X0, [X20]
	0x03289284 LDR W8, [X0 + 0xE0]
	0x03289288 CBNZ W8, 0x3289294
	0x0328928C BL 0x1C16DFC
	0x03289290 LDR X0, [X20]
	0x03289294 LDR X8, [X0 + 0xB8]
	0x03289298 MOV X1, X31
	0x0328929C ADD X0, X8, 0x10
	0x032892A0 BL 0x33EB14C
	0x032892A4 STR W0, [X19 + 0x14]
	0x032892A8 MOV X0, X19
	0x032892AC LDP X20, X19, [X31 + 0x10]
	0x032892B0 LDP X30, X21, [X31], #0x20
	0x032892B4 B 0x1C5FFD4
	0x032892B8 STP X30, X21, [X31 - 0x20]!
	0x032892BC STP X20, X19, [X31 + 0x10]
	0x032892C0 ADRP X20, 0x1153000
	0x032892C4 ADRP X21, 0xE9A000
	0x032892C8 LDRB W8, [X20 + 0x67B]
	0x032892CC LDR X21, [X21 + 0xEB8]
	0x032892D0 MOV X19, X0
	0x032892D4 TBNZ X8, 0x0, 0x32892EC
	0x032892D8 ADRP X0, 0xE9A000
	0x032892DC LDR X0, [X0 + 0xEB8]
	0x032892E0 BL 0x1C16CF4
	0x032892E4 MOVZ W8, 0x1
	0x032892E8 STRB W8, [X20 + 0x67B]
	0x032892EC LDR X0, [X21]
	0x032892F0 LDR W8, [X0 + 0xE0]
	0x032892F4 CBNZ W8, 0x32892FC
	0x032892F8 BL 0x1C16DFC
	0x032892FC MOV X0, X19
	0x03289300 BL 0x1C5FFEC
	0x03289304 MOV X0, X19
	0x03289308 LDP X20, X19, [X31 + 0x10]
	0x0328930C MOV X1, X31
	0x03289310 LDP X30, X21, [X31], #0x20
	0x03289314 B 0x33CB4DC
	0x03289318 CMP W1, 0x1
	0x0328931C MOV X21, X0
	0x03289320 B.NE 0x3289350
	0x03289324 MOV X0, X21
	0x03289328 BL 0x3EB1AD0
	0x0328932C LDR X20, [X0]
	0x03289330 BL 0x3EB1AE0
	0x03289334 MOV X0, X19
	0x03289338 MOV X1, X31
	0x0328933C BL 0x33CB4DC
	0x03289340 CBNZ X20, 0x3289358
	0x03289344 LDP X20, X19, [X31 + 0x10]
	0x03289348 LDP X30, X21, [X31], #0x20
	0x0328934C RET
	0x03289350 MOV X20, X31
	0x03289354 B 0x3289364
	0x03289358 MOV X0, X20
	0x0328935C BL 0x1C16F18
	0x03289360 MOV X21, X0
	0x03289364 MOV X0, X19
	0x03289368 MOV X1, X31
	0x0328936C BL 0x33CB4DC
	0x03289370 CBNZ X20, 0x328937C
	0x03289374 MOV X0, X21
	0x03289378 BL 0x1D2C690
	0x0328937C MOV X0, X20
	0x03289380 BL 0x1C16F18
	0x03289384 BL 0x1990590
	0x03289388 LDR W0, [X0 + 0x14]
	0x0328938C RET
	0x03289390 STR X30, [X31 - 0x20]!
	0x03289394 STP X20, X19, [X31 + 0x10]
	0x03289398 ADRP X20, 0x1153000
	0x0328939C LDRB W8, [X20 + 0x67C]
	0x032893A0 MOV X19, X0
	0x032893A4 TBNZ X8, 0x0, 0x32893C8
	0x032893A8 ADRP X0, 0xE9B000
	0x032893AC LDR X0, [X0 + 0x530]
	0x032893B0 BL 0x1C16CF4
	0x032893B4 ADRP X0, 0xE9B000
	0x032893B8 LDR X0, [X0 + 0x538]
	0x032893BC BL 0x1C16CF4
	0x032893C0 MOVZ W8, 0x1
	0x032893C4 STRB W8, [X20 + 0x67C]
	0x032893C8 LDR X0, [X19 + 0x38]
	0x032893CC CBZ X0, 0x32893E8
	0x032893D0 ADRP X8, 0xE9B000
	0x032893D4 LDR X8, [X8 + 0x538]
	0x032893D8 LDP X20, X19, [X31 + 0x10]
	0x032893DC LDR X1, [X8]
	0x032893E0 LDR X30, [X31], #0x20
	0x032893E4 B 0x301DDC4
	0x032893E8 ADRP X8, 0xE9B000
	0x032893EC LDR X8, [X8 + 0x530]
	0x032893F0 LDP X20, X19, [X31 + 0x10]
	0x032893F4 MOV W1, W31
	0x032893F8 LDR X0, [X8]
	0x032893FC LDR X30, [X31], #0x20
	0x03289400 B 0x1C16D6C
	0x03289404 LDR W8, [X0 + 0x14]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1154000
	007 Move W8, [X22+1641]
	008 Move W21, W2
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0xE93000
	016 Move X0, [X0+1816]
	017 Call 0x1C17CF4
	018 Move X0, 0xE9C000
	019 Move X0, [X0+1280]
	020 Call 0x1C17CF4
	021 Move X0, 0xE6D000
	022 Move X0, [X0+1392]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+1641], W8
	026 Move TEMP, X21
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {96}
	030 Compare X20, 0
	031 JumpIfEqual {44}
	032 Move X8, 0xE93000
	033 Move X8, [X8+1816]
	034 Move X21, [X8]
	035 Move X0, X20
	036 Move X1, X21
	037 Call 0x1C17E00
	038 Move X1, X0
	039 Compare X1, 0
	040 JumpIfNotEqual {45}
	041 Move X0, X20
	042 Move X1, X21
	043 Call 0x1C181E0
	044 Move X1, X31
	045 Move X8, [X19+80]
	046 Compare X8, 0
	047 JumpIfEqual {79}
	048 Call RenewalDelegate.EndInvoke, X0, X1
	049 Move X21, 0xE6D000
	050 Move X21, [X21+1392]
	051 Move X20, X0
	052 Move X0, [X21]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {58}
	056 Call 0x1C17DFC
	057 Move X0, [X21]
	058 Move X8, [X0+184]
	059 Move X1, [X8]
	060 Move X0, X20
	061 Move X2, X31
	062 Call TimeSpan.op_Inequality, X0, X1
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {96}
	067 Move X0, X19
	068 Move X1, X20
	069 Call Lease.Renew, X0, X1
	070 Move W8, 2
	071 Move [X19+32], W8
	072 Move [X19+72], X31
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X22, [X31+16]
	076 Move X21, [X31+24]
	077 Move X30, [X31+48]
	078 Return 
	079 Call 0x1C17F20
	080 Move X20, X0
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X0, X20
	083 Call 0x3EB2AD0
	084 Move X20, X0
	085 Move X0, 0xE71000
	086 Move X0, [X0+3264]
	087 Call 0x1C17D08
	088 Move X8, [X20]
	089 Move X1, [X8]
	090 Call 0x1C18270
	091 Move TEMP, X0
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfNotEqual {129}
	095 Call 0x3EB2AE0
	096 Move X0, [X19+72]
	097 Compare X0, 0
	098 JumpIfEqual {128}
	099 Move X8, [X0]
	100 Move X9, [X8+584]
	101 Move X1, [X8+592]
	102 NotImplemented "Instruction BLR not yet implemented."
	103 Compare X0, 0
	104 JumpIfEqual {117}
	105 Move X8, 0xE9C000
	106 Move X8, [X8+1280]
	107 Move X20, X0
	108 Move X21, [X8]
	109 Move X1, X21
	110 Call 0x1C17E00
	111 Move X1, X0
	112 Compare X0, 0
	113 JumpIfNotEqual {118}
	114 Move X0, X20
	115 Move X1, X21
	116 Call 0x1C181E0
	117 Move X1, X31
	118 Move X0, X19
	119 Call Lease.Unregister, X0, X1
	120 Move X0, X19
	121 Move X20, [X31+32]
	122 Move X19, [X31+40]
	123 Move X22, [X31+16]
	124 Move X21, [X31+24]
	125 Move X30, [X31+48]
	126 Call Lease.CheckNextSponsor, X0
	127 Return 
	128 Call 0x1C17F20
	129 Move W0, 8
	130 Call 0x3EB2AF0
	131 Move X8, [X20]
	132 Move [X0], X8
	133 Move X1, 0xC2C000
	134 Add X1, X1, 3672
	135 Move X2, X31
	136 Call 0x3EB2B00
	137 Move X20, X0
	138 Call 0x3EB2AE0
	139 Move X0, X20
	140 Call 0x1D2D690
	141 Call 0x1991590

