Type: System.Runtime.Remoting.Lifetime.LifetimeServices

Method: System.Void .cctor()

Disassembly:
	0x03289EC0 LDR X1, [X22]
	0x03289EC4 LDRH W9, [X8 + 0x12E]
	0x03289EC8 CBZ X9, 0x3289EEC
	0x03289ECC LDR X10, [X8 + 0xB0]
	0x03289ED0 ADD X10, X10, 0x8
	0x03289ED4 LDUR X11, [X10 - 0x8]
	0x03289ED8 CMP X11, X1
	0x03289EDC B.EQ 0x3289EFC
	0x03289EE0 SUBS X9, X9, 0x1
	0x03289EE4 ADD X10, X10, 0x10
	0x03289EE8 B.NE 0x3289ED4
	0x03289EEC MOV X0, X20
	0x03289EF0 MOV W2, W31
	0x03289EF4 BL 0x1C5C788
	0x03289EF8 B 0x3289F08
	0x03289EFC LDRSW X9, [X10]
	0x03289F00 ADD X8, X8, X9, 0x4, LSL
	0x03289F04 ADD X0, X8, 0x138
	0x03289F08 LDP X8, X1, [X0]
	0x03289F0C MOV X0, X20
	0x03289F10 BLR X8
	0x03289F14 MOV X1, X19
	0x03289F18 MOV X2, X31
	0x03289F1C BL 0x321BA08
	0x03289F20 TBZ X0, 0x0, 0x3289EA4
	0x03289F24 ADRP X8, 0xE9B000
	0x03289F28 LDR X8, [X8 + 0x390]
	0x03289F2C ADD X0, X31, 0x20
	0x03289F30 LDR X1, [X8]
	0x03289F34 BL 0x2BC434C
	0x03289F38 B 0x3289F54
	0x03289F3C ADRP X8, 0xE9B000
	0x03289F40 LDR X8, [X8 + 0x390]
	0x03289F44 ADD X0, X31, 0x20
	0x03289F48 LDR X1, [X8]
	0x03289F4C BL 0x2BC434C
	0x03289F50 MOV X20, X31
	0x03289F54 MOV X0, X20
	0x03289F58 LDP X20, X19, [X31 + 0x60]
	0x03289F5C LDP X22, X21, [X31 + 0x50]
	0x03289F60 LDR X30, [X31 + 0x40]
	0x03289F64 ADD X31, X31, 0x70
	0x03289F68 RET
	0x03289F6C BL 0x1C16F20
	0x03289F70 B 0x3289F7C
	0x03289F74 B 0x3289F7C
	0x03289F78 B 0x3289F7C
	0x03289F7C MOV X19, X0
	0x03289F80 CMP W1, 0x1
	0x03289F84 B.NE 0x3289FB8
	0x03289F88 MOV X0, X19
	0x03289F8C BL 0x3EB1AD0
	0x03289F90 LDR X20, [X0]
	0x03289F94 BL 0x3EB1AE0
	0x03289F98 ADRP X8, 0xE9B000
	0x03289F9C LDR X8, [X8 + 0x390]
	0x03289FA0 ADD X0, X31, 0x20
	0x03289FA4 LDR X1, [X8]
	0x03289FA8 BL 0x2BC434C
	0x03289FAC CBZ X20, 0x3289F54
	0x03289FB0 MOV X0, X20
	0x03289FB4 BL 0x1C16F18

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x1154000
	007 Move X22, 0xE9C000
	008 Move X20, 0xE9C000
	009 Move X21, 0xE6D000
	010 Move W8, [X19+1648]
	011 Move X22, [X22+1320]
	012 Move X20, [X20+224]
	013 Move X21, [X21+1392]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xE9C000
	019 Move X0, [X0+1320]
	020 Call 0x1C17CF4
	021 Move X0, 0xE9C000
	022 Move X0, [X0+224]
	023 Call 0x1C17CF4
	024 Move X0, 0xE6D000
	025 Move X0, [X0+1392]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X19+1648], W8
	029 Move X0, [X22]
	030 Call 0x1C17F10
	031 Move X19, X0
	032 Call LeaseManager..ctor, X0
	033 Move X8, [X20]
	034 Move X8, [X8+184]
	035 Move [X8+32], X19
	036 Move X0, [X21]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move D0, 8.000000000465661
	042 Move X0, X31
	043 Call TimeSpan.FromSeconds, V0
	044 Move X8, [X20]
	045 Move D0, 4.000000000232831
	046 Move X8, [X8+184]
	047 Move [X8], X0
	048 Move X0, X31
	049 Call TimeSpan.FromMinutes, V0
	050 Move X8, [X20]
	051 Move D0, 2
	052 Move X8, [X8+184]
	053 Move [X8+8], X0
	054 Move X0, X31
	055 Call TimeSpan.FromMinutes, V0
	056 Move X8, [X20]
	057 Move D0, 2
	058 Move X8, [X8+184]
	059 Move [X8+16], X0
	060 Move X0, X31
	061 Call TimeSpan.FromMinutes, V0
	062 Move X8, [X20]
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X22, [X31+16]
	066 Move X21, [X31+24]
	067 Move X8, [X8+184]
	068 Move [X8+24], X0
	069 Move X30, [X31+48]
	070 Return 

Method: System.TimeSpan get_LeaseManagerPollTime()

Disassembly:
	0x03289FB8 MOV X20, X31
	0x03289FBC B 0x3289FC4
	0x03289FC0 MOV X19, X0
	0x03289FC4 ADRP X8, 0xE9B000
	0x03289FC8 LDR X8, [X8 + 0x390]
	0x03289FCC LDR X1, [X8]
	0x03289FD0 ADD X0, X31, 0x20
	0x03289FD4 BL 0x2BC434C
	0x03289FD8 CBNZ X20, 0x3289FE4
	0x03289FDC MOV X0, X19
	0x03289FE0 BL 0x1D2C690
	0x03289FE4 MOV X0, X20
	0x03289FE8 BL 0x1C16F18
	0x03289FEC BL 0x1990590
	0x03289FF0 STP X30, X21, [X31 - 0x20]!
	0x03289FF4 STP X20, X19, [X31 + 0x10]
	0x03289FF8 ADRP X21, 0x1153000
	0x03289FFC LDRB W8, [X21 + 0x685]
	0x0328A000 MOV X19, X1
	0x0328A004 MOV X20, X0
	0x0328A008 TBNZ X8, 0x0, 0x328A044
	0x0328A00C ADRP X0, 0xE99000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1154000
	005 Move X19, 0xE9C000
	006 Move W8, [X20+1649]
	007 Move X19, [X19+224]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xE9C000
	013 Move X0, [X0+224]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1649], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void set_LeaseManagerPollTime(System.TimeSpan value)

Disassembly:
	0x0327DA40 LDRB W8, [X22 + 0x605]
	0x0327DA44 LDR X19, [X19 + 0xDB8]
	0x0327DA48 LDR X23, [X23 + 0xE68]
	0x0327DA4C LDR X21, [X21 + 0xCC0]
	0x0327DA50 LDR X20, [X20 + 0x238]
	0x0327DA54 LDR X24, [X24 + 0xD0]
	0x0327DA58 TBNZ X8, 0x0, 0x327DAE8
	0x0327DA5C ADRP X0, 0xEA2000
	0x0327DA60 LDR X0, [X0 + 0xD0]
	0x0327DA64 BL 0x1C16CF4
	0x0327DA68 ADRP X0, 0xEA6000
	0x0327DA6C LDR X0, [X0 + 0xDB8]
	0x0327DA70 BL 0x1C16CF4
	0x0327DA74 ADRP X0, 0xEA7000
	0x0327DA78 LDR X0, [X0 + 0x240]
	0x0327DA7C BL 0x1C16CF4
	0x0327DA80 ADRP X0, 0xEA6000
	0x0327DA84 LDR X0, [X0 + 0xE68]
	0x0327DA88 BL 0x1C16CF4
	0x0327DA8C ADRP X0, 0xEA7000
	0x0327DA90 LDR X0, [X0 + 0x238]
	0x0327DA94 BL 0x1C16CF4
	0x0327DA98 ADRP X0, 0xE80000
	0x0327DA9C LDR X0, [X0 + 0x968]
	0x0327DAA0 BL 0x1C16CF4
	0x0327DAA4 ADRP X0, 0xE7C000
	0x0327DAA8 LDR X0, [X0 + 0xCC0]
	0x0327DAAC BL 0x1C16CF4
	0x0327DAB0 ADRP X0, 0xE76000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1160000
	006 Move X20, 0xEA8000
	007 Move W8, [X21+1650]
	008 Move X20, [X20+224]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xEA8000
	015 Move X0, [X0+224]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1650], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move [X8], X19
	027 Move X8, [X20]
	028 Move X8, [X8+184]
	029 Move X0, [X8+32]
	030 Compare X0, 0
	031 JumpIfEqual {39}
	032 Move X1, X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Call LeaseManager.SetPollTime, X0, X1
	038 Return 
	039 Call 0x1C17F20

Method: System.TimeSpan get_LeaseTime()

Disassembly:
	0x0328A010 LDR X0, [X0 + 0xEB8]
	0x0328A014 BL 0x1C16CF4
	0x0328A018 ADRP X0, 0xE9A000
	0x0328A01C LDR X0, [X0 + 0x590]
	0x0328A020 BL 0x1C16CF4
	0x0328A024 ADRP X0, 0xE9A000
	0x0328A028 LDR X0, [X0 + 0x598]
	0x0328A02C BL 0x1C16CF4
	0x0328A030 ADRP X0, 0xE9A000
	0x0328A034 LDR X0, [X0 + 0x5A0]
	0x0328A038 BL 0x1C16CF4
	0x0328A03C MOVZ W8, 0x1
	0x0328A040 STRB W8, [X21 + 0x685]
	0x0328A044 CBZ X19, 0x328A114
	0x0328A048 ADRP X8, 0xE99000
	0x0328A04C LDR X8, [X8 + 0xEB8]
	0x0328A050 LDR X0, [X8]
	0x0328A054 LDR W8, [X0 + 0xE0]
	0x0328A058 CBNZ W8, 0x328A060
	0x0328A05C BL 0x1C16DFC
	0x0328A060 MOV X0, X31
	0x0328A064 BL 0x33C028C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1153000
	005 Move X19, 0xE9B000
	006 Move W8, [X20+1651]
	007 Move X19, [X19+224]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xE9B000
	013 Move X0, [X0+224]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1651], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+8]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void set_LeaseTime(System.TimeSpan value)

Disassembly:
	0x0328A068 CMP X0, X20
	0x0328A06C B.EQ 0x328A148
	0x0328A070 LDR X21, [X20 + 0x38]
	0x0328A074 CBNZ X21, 0x328A0A4
	0x0328A078 ADRP X8, 0xE9A000
	0x0328A07C LDR X8, [X8 + 0x5A0]
	0x0328A080 LDR X0, [X8]
	0x0328A084 BL 0x1C16F10
	0x0328A088 ADRP X8, 0xE9A000
	0x0328A08C LDR X8, [X8 + 0x598]
	0x0328A090 MOV X21, X0
	0x0328A094 LDR X1, [X8]
	0x0328A098 BL 0x301B7C4
	0x0328A09C STR X21, [X20 + 0x38]
	0x0328A0A0 CBZ X21, 0x328A110
	0x0328A0A4 ADRP X9, 0xE9A000
	0x0328A0A8 LDR X9, [X9 + 0x590]
	0x0328A0AC LDR W10, [X21 + 0x1C]
	0x0328A0B0 LDR X8, [X21 + 0x10]
	0x0328A0B4 LDR X9, [X9]
	0x0328A0B8 ADD W10, W10, 0x1
	0x0328A0BC STR W10, [X21 + 0x1C]
	0x0328A0C0 CBZ X8, 0x328A110

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1153000
	006 Move X20, 0xE9B000
	007 Move W8, [X21+1652]
	008 Move X20, [X20+224]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE9B000
	015 Move X0, [X0+224]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1652], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move [X8+8], X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return 

Method: System.TimeSpan get_RenewOnCallTime()

Disassembly:
	0x0328A0C4 LDRSW X10, [X21 + 0x18]
	0x0328A0C8 LDR W11, [X8 + 0x18]
	0x0328A0CC CMP W10, W11
	0x0328A0D0 B.CS 0x328A0F0
	0x0328A0D4 ADD W9, W10, 0x1
	0x0328A0D8 ADD X8, X8, X10, 0x3, LSL
	0x0328A0DC STR W9, [X21 + 0x18]
	0x0328A0E0 STR X19, [X8 + 0x20]
	0x0328A0E4 LDP X20, X19, [X31 + 0x10]
	0x0328A0E8 LDP X30, X21, [X31], #0x20
	0x0328A0EC RET
	0x0328A0F0 LDR X8, [X9 + 0x20]
	0x0328A0F4 MOV X1, X19
	0x0328A0F8 LDP X20, X19, [X31 + 0x10]
	0x0328A0FC MOV X0, X21
	0x0328A100 LDR X8, [X8 + 0xC0]
	0x0328A104 LDR X2, [X8 + 0x70]
	0x0328A108 LDP X30, X21, [X31], #0x20
	0x0328A10C B 0x301BF90
	0x0328A110 BL 0x1C16F20
	0x0328A114 ADRP X0, 0xE6E000
	0x0328A118 LDR X0, [X0 + 0x528]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1153000
	005 Move X19, 0xE9B000
	006 Move W8, [X20+1653]
	007 Move X19, [X19+224]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xE9B000
	013 Move X0, [X0+224]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1653], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+16]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void set_RenewOnCallTime(System.TimeSpan value)

Disassembly:
	0x0328A11C BL 0x1C16D08
	0x0328A120 BL 0x1C16F10
	0x0328A124 MOV X19, X0
	0x0328A128 ADRP X0, 0xE9A000
	0x0328A12C LDR X0, [X0 + 0x5A8]
	0x0328A130 BL 0x1C16D08
	0x0328A134 MOV X1, X0
	0x0328A138 MOV X0, X19
	0x0328A13C MOV X2, X31
	0x0328A140 BL 0x330E100
	0x0328A144 B 0x328A178
	0x0328A148 ADRP X0, 0xE69000
	0x0328A14C LDR X0, [X0 + 0x5B0]
	0x0328A150 BL 0x1C16D08
	0x0328A154 BL 0x1C16F10
	0x0328A158 MOV X19, X0
	0x0328A15C ADRP X0, 0xE9A000
	0x0328A160 LDR X0, [X0 + 0x5B0]
	0x0328A164 BL 0x1C16D08
	0x0328A168 MOV X1, X0
	0x0328A16C MOV X0, X19
	0x0328A170 MOV X2, X31
	0x0328A174 BL 0x337DF1C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1153000
	006 Move X20, 0xE9B000
	007 Move W8, [X21+1654]
	008 Move X20, [X20+224]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE9B000
	015 Move X0, [X0+224]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1654], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move [X8+16], X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return 

Method: System.TimeSpan get_SponsorshipTimeout()

Disassembly:
	0x0328A178 ADRP X0, 0xE9A000
	0x0328A17C LDR X0, [X0 + 0x5B8]
	0x0328A180 BL 0x1C16D08
	0x0328A184 MOV X1, X0
	0x0328A188 MOV X0, X19
	0x0328A18C BL 0x1C16DEC
	0x0328A190 SUB X31, X31, 0x50
	0x0328A194 STP X30, X23, [X31 + 0x20]
	0x0328A198 STP X22, X21, [X31 + 0x30]
	0x0328A19C STP X20, X19, [X31 + 0x40]
	0x0328A1A0 ADRP X20, 0x1152000
	0x0328A1A4 LDRB W8, [X20 + 0x686]
	0x0328A1A8 MOV X19, X0
	0x0328A1AC TBNZ X8, 0x0, 0x328A1F4
	0x0328A1B0 ADRP X0, 0xE9A000
	0x0328A1B4 LDR X0, [X0 + 0x390]
	0x0328A1B8 BL 0x1C16CF4
	0x0328A1BC ADRP X0, 0xE9A000
	0x0328A1C0 LDR X0, [X0 + 0x398]
	0x0328A1C4 BL 0x1C16CF4
	0x0328A1C8 ADRP X0, 0xE9A000
	0x0328A1CC LDR X0, [X0 + 0x3A0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1153000
	005 Move X19, 0xE9B000
	006 Move W8, [X20+1655]
	007 Move X19, [X19+224]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xE9B000
	013 Move X0, [X0+224]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1655], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+24]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void set_SponsorshipTimeout(System.TimeSpan value)

Disassembly:
	0x0328A1D0 BL 0x1C16CF4
	0x0328A1D4 ADRP X0, 0xE9A000
	0x0328A1D8 LDR X0, [X0 + 0x588]
	0x0328A1DC BL 0x1C16CF4
	0x0328A1E0 ADRP X0, 0xE9A000
	0x0328A1E4 LDR X0, [X0 + 0x3B0]
	0x0328A1E8 BL 0x1C16CF4
	0x0328A1EC MOVZ W8, 0x1
	0x0328A1F0 STRB W8, [X20 + 0x686]
	0x0328A1F4 STP X31, X31, [X31 + 0x8]
	0x0328A1F8 STR X31, [X31 + 0x18]
	0x0328A1FC LDR X0, [X19 + 0x38]
	0x0328A200 CBZ X0, 0x328A2B8
	0x0328A204 ADRP X8, 0xE9A000
	0x0328A208 LDR X8, [X8 + 0x3B0]
	0x0328A20C ADRP X22, 0xE9A000
	0x0328A210 ADRP X23, 0xE9A000
	0x0328A214 ADRP X21, 0xE9A000
	0x0328A218 LDR X1, [X8]
	0x0328A21C LDR X22, [X22 + 0x398]
	0x0328A220 LDR X23, [X23 + 0x588]
	0x0328A224 LDR X21, [X21 + 0x390]
	0x0328A228 ADD X8, X31, 0x8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1153000
	006 Move X20, 0xE9B000
	007 Move W8, [X21+1656]
	008 Move X20, [X20+224]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE9B000
	015 Move X0, [X0+224]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1656], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move [X8+24], X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return 

Method: System.Void TrackLifetime(System.Runtime.Remoting.ServerIdentity identity)

Disassembly:
	0x03283C68 ADRP X10, 0xEA1000
	0x03283C6C LDR X8, [X0]
	0x03283C70 LDR X10, [X10 + 0x3B8]
	0x03283C74 ADRP X22, 0xE70000
	0x03283C78 MOV X21, X0
	0x03283C7C LDRH W9, [X8 + 0x12E]
	0x03283C80 LDR X1, [X10]
	0x03283C84 LDR X22, [X22 + 0xE00]
	0x03283C88 CBZ X9, 0x3283CAC
	0x03283C8C LDR X10, [X8 + 0xB0]
	0x03283C90 ADD X10, X10, 0x8
	0x03283C94 LDUR X11, [X10 - 0x8]
	0x03283C98 CMP X11, X1
	0x03283C9C B.EQ 0x3283CBC
	0x03283CA0 SUBS X9, X9, 0x1
	0x03283CA4 ADD X10, X10, 0x10
	0x03283CA8 B.NE 0x3283C94
	0x03283CAC MOV X0, X21
	0x03283CB0 MOV W2, W31
	0x03283CB4 BL 0x1C5C788
	0x03283CB8 B 0x3283CC8
	0x03283CBC LDRSW X9, [X10]
	0x03283CC0 ADD X8, X8, X9, 0x4, LSL
	0x03283CC4 ADD X0, X8, 0x138
	0x03283CC8 LDP X8, X2, [X0]
	0x03283CCC MOV X0, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x115A000
	006 Move X20, 0xEA2000
	007 Move W8, [X21+1657]
	008 Move X20, [X20+224]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xEA2000
	015 Move X0, [X0+224]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1657], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move X0, [X8+32]
	027 Compare X0, 0
	028 JumpIfEqual {36}
	029 Move X1, X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Call LeaseManager.TrackLifetime, X0, X1
	035 Return 
	036 Call 0x1C17F20

