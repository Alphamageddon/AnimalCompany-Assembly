Type: System.Runtime.Remoting.ObjRef

Method: System.Void .ctor()

Disassembly:
	0x032752DC MOVZ W1, 0x1
	0x032752E0 LDP X30, X21, [X31], #0x20
	0x032752E4 B 0x327EBA0
	0x032752E8 STP X30, X21, [X31 - 0x20]!
	0x032752EC STP X20, X19, [X31 + 0x10]
	0x032752F0 ADRP X20, 0x1167000
	0x032752F4 ADRP X21, 0xE7E000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call Object..ctor, X0
	006 Move X0, X19
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]

Method: System.Void .ctor(System.String uri, System.Runtime.Remoting.IChannelInfo cinfo)

Disassembly:
	0x0327534C CBNZ W8, 0x3275354
	0x03275350 BL 0x1C16DFC
	0x03275354 MOV X0, X20
	0x03275358 MOV X1, X31
	0x0327535C MOV X2, X31
	0x03275360 BL 0x3395194
	0x03275364 TBZ X0, 0x0, 0x32753B8
	0x03275368 LDR X20, [X19 + 0x20]
	0x0327536C CBZ X20, 0x3275420
	0x03275370 ADRP X10, 0xEAE000
	0x03275374 LDR X8, [X20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X1
	006 Move X1, X31
	007 Move X19, X2
	008 Move X21, X0
	009 Call Object..ctor, X0
	010 Move [X21+16], X19
	011 Move [X21+24], X20
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Move X21, [X31+40]
	016 Return 

Method: System.Runtime.Remoting.ObjRef DeserializeInTheCurrentDomain(System.Int32 domainId, System.Byte[] tInfo)

Disassembly:
	0x03275378 LDR X10, [X10 + 0xDD8]
	0x0327537C LDRH W9, [X8 + 0x12E]
	0x03275380 LDR X1, [X10]
	0x03275384 CBZ X9, 0x32753A8
	0x03275388 LDR X10, [X8 + 0xB0]
	0x0327538C ADD X10, X10, 0x8
	0x03275390 LDUR X11, [X10 - 0x8]
	0x03275394 CMP X11, X1
	0x03275398 B.EQ 0x32753C0
	0x0327539C SUBS X9, X9, 0x1
	0x032753A0 ADD X10, X10, 0x10
	0x032753A4 B.NE 0x3275390
	0x032753A8 MOV X0, X20
	0x032753AC MOV W2, W31
	0x032753B0 BL 0x1C5C788
	0x032753B4 B 0x32753CC
	0x032753B8 LDR X0, [X19 + 0x38]
	0x032753BC B 0x3275414
	0x032753C0 LDRSW X9, [X10]
	0x032753C4 ADD X8, X8, X9, 0x4, LSL
	0x032753C8 ADD X0, X8, 0x138
	0x032753CC LDP X8, X1, [X0]
	0x032753D0 MOV X0, X20
	0x032753D4 BLR X8
	0x032753D8 LDR X8, [X21]
	0x032753DC MOV X20, X0
	0x032753E0 LDR W9, [X8 + 0xE0]
	0x032753E4 CBNZ W9, 0x32753F0
	0x032753E8 MOV X0, X8
	0x032753EC BL 0x1C16DFC
	0x032753F0 ADRP X8, 0xEA7000
	0x032753F4 ADRP X9, 0xEAE000
	0x032753F8 LDR X8, [X8 + 0x1B0]
	0x032753FC LDR X9, [X9 + 0xE70]
	0x03275400 MOV X0, X20
	0x03275404 LDR X1, [X8]
	0x03275408 LDR X2, [X9]
	0x0327540C BL 0x1C1703C
	0x03275410 STR X0, [X19 + 0x38]
	0x03275414 LDP X20, X19, [X31 + 0x10]
	0x03275418 LDP X30, X21, [X31], #0x20
	0x0327541C RET
	0x03275420 BL 0x1C16F20
	0x03275424 STR X30, [X31 - 0x20]!
	0x03275428 STP X20, X19, [X31 + 0x10]
	0x0327542C ADRP X19, 0x1167000
	0x03275430 ADRP X20, 0xEAE000
	0x03275434 LDRB W8, [X19 + 0x5D8]
	0x03275438 LDR X20, [X20 + 0xDD0]
	0x0327543C TBNZ X8, 0x0, 0x3275454
	0x03275440 ADRP X0, 0xEAE000
	0x03275444 LDR X0, [X0 + 0xDD0]
	0x03275448 BL 0x1C16CF4
	0x0327544C MOVZ W8, 0x1
	0x03275450 STRB W8, [X19 + 0x5D8]
	0x03275454 LDR X8, [X20]
	0x03275458 ADRP X9, 0xFFFFFFFFFD878000
	0x0327545C LDR V0, [X9 + 0x5B8]
	0x03275460 LDP X20, X19, [X31 + 0x10]
	0x03275464 LDR X8, [X8 + 0xB8]
	0x03275468 STR D0, [X8]
	0x0327546C LDR X30, [X31], #0x20
	0x03275470 RET
	0x03275474 STR X30, [X31 - 0x20]!
	0x03275478 STP X20, X19, [X31 + 0x10]
	0x0327547C ADRP X20, 0x1167000
	0x03275480 ADRP X19, 0xEAE000
	0x03275484 LDRB W8, [X20 + 0x5D9]
	0x03275488 LDR X19, [X19 + 0xDE0]
	0x0327548C TBNZ X8, 0x0, 0x32754A4
	0x03275490 ADRP X0, 0xEAE000
	0x03275494 LDR X0, [X0 + 0xDE0]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x1168000
	010 Move X22, 0xEAF000
	011 Move X23, 0xEAF000
	012 Move X24, 0xEAF000
	013 Move W8, [X25+1488]
	014 Move X22, [X22+3528]
	015 Move X23, [X23+3520]
	016 Move X24, [X24+3536]
	017 Move X19, X2
	018 Move W20, W1
	019 Move X21, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0xEAF000
	025 Move X0, [X0+3520]
	026 Call 0x1C17CF4
	027 Move X0, 0xEAF000
	028 Move X0, [X0+3528]
	029 Call 0x1C17CF4
	030 Move X0, 0xEAF000
	031 Move X0, [X0+3544]
	032 Call 0x1C17CF4
	033 Move X0, 0xEAF000
	034 Move X0, [X0+3536]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X25+1488], W8
	038 Move X0, [X21+24]
	039 Move X1, X31
	040 Call String.Copy, X0
	041 Move X8, [X22]
	042 Move X21, X0
	043 Move X0, X8
	044 Call 0x1C17F10
	045 Move W1, W20
	046 Move X22, X0
	047 Call CrossAppDomainData..ctor, X0, X1
	048 Move X0, [X23]
	049 Call 0x1C17F10
	050 Move X1, X22
	051 Move X23, X0
	052 Call ChannelInfo..ctor, X0, X1
	053 Move X0, [X24]
	054 Call 0x1C17F10
	055 Move X1, X31
	056 Move X20, X0
	057 Call Object..ctor, X0
	058 Move X0, X19
	059 Move X1, X31
	060 Move [X20+16], X23
	061 Move [X20+24], X21
	062 Call CADSerializer.DeserializeObjectSafe, X0
	063 Compare X0, 0
	064 JumpIfEqual {73}
	065 Move X8, 0xEAF000
	066 Move X8, [X8+3544]
	067 Move X19, X0
	068 Move X21, [X8]
	069 Move X1, X21
	070 Call 0x1C17E00
	071 Compare X0, 0
	072 JumpIfEqual {84}
	073 Move [X20+32], X0
	074 Move X0, X20
	075 Move X20, [X31+48]
	076 Move X19, [X31+56]
	077 Move X22, [X31+32]
	078 Move X21, [X31+40]
	079 Move X24, [X31+16]
	080 Move X23, [X31+24]
	081 Move X30, [X31+64]
	082 Move X25, [X31+72]
	083 Return X0
	084 Move X0, X19
	085 Move X1, X21
	086 Call 0x1C181E0

Method: System.Byte[] SerializeType()

Disassembly:
	0x0327553C LDR X20, [X20 + 0xDE0]
	0x03275540 TBNZ X8, 0x0, 0x3275558
	0x03275544 ADRP X0, 0xEAE000
	0x03275548 LDR X0, [X0 + 0xDE0]
	0x0327554C BL 0x1C16CF4
	0x03275550 MOVZ W8, 0x1
	0x03275554 STRB W8, [X19 + 0x5DB]
	0x03275558 LDR X8, [X20]
	0x0327555C LDR W9, [X8 + 0xE0]
	0x03275560 CBNZ W9, 0x3275570
	0x03275564 MOV X0, X8
	0x03275568 BL 0x1C16DFC
	0x0327556C LDR X8, [X20]
	0x03275570 LDR X9, [X8 + 0xB8]
	0x03275574 LDR X9, [X9 + 0x10]
	0x03275578 CBNZ X9, 0x32755A8
	0x0327557C MOV X0, X31
	0x03275580 BL 0x33C0424
	0x03275584 LDR X8, [X20]
	0x03275588 MOV X19, X0
	0x0327558C LDR W9, [X8 + 0xE0]
	0x03275590 CBNZ W9, 0x32755A0
	0x03275594 MOV X0, X8
	0x03275598 BL 0x1C16DFC
	0x0327559C LDR X8, [X20]
	0x032755A0 LDR X9, [X8 + 0xB8]
	0x032755A4 STR X19, [X9 + 0x10]
	0x032755A8 LDR W9, [X8 + 0xE0]
	0x032755AC CBNZ W9, 0x32755BC
	0x032755B0 MOV X0, X8

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, [X0+32]
	004 Compare X0, 0
	005 JumpIfEqual {16}
	006 Move X1, X31
	007 Call CADSerializer.SerializeObject, X0
	008 Compare X0, 0
	009 JumpIfEqual {34}
	010 Move X8, [X0]
	011 Move X2, [X8+952]
	012 Move X1, [X8+960]
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 CallNoReturn X2
	016 Move X0, 0xE7F000
	017 Move X0, [X0+2000]
	018 Call 0x1C17D08
	019 Call 0x1C17F10
	020 Move X19, X0
	021 Move X0, 0xEAF000
	022 Move X0, [X0+3560]
	023 Call 0x1C17D08
	024 Move X1, X0
	025 Move X0, X19
	026 Move X2, X31
	027 Call Exception..ctor, X0, X1
	028 Move X0, 0xEAF000
	029 Move X0, [X0+3568]
	030 Call 0x1C17D08
	031 Move X1, X0
	032 Move X0, X19
	033 Call 0x1C17DEC
	034 Call 0x1C17F20

Method: System.Void .ctor(System.Type type, System.String url, System.Object remoteChannelData)

Disassembly:
	0x032755B4 BL 0x1C16DFC
	0x032755B8 LDR X8, [X20]
	0x032755BC LDR X8, [X8 + 0xB8]
	0x032755C0 LDP X20, X19, [X31 + 0x10]
	0x032755C4 LDR X0, [X8 + 0x10]
	0x032755C8 LDR X30, [X31], #0x20
	0x032755CC RET
	0x032755D0 SUB X31, X31, 0x40
	0x032755D4 STP X30, X23, [X31 + 0x10]
	0x032755D8 STP X22, X21, [X31 + 0x20]
	0x032755DC STP X20, X19, [X31 + 0x30]
	0x032755E0 ADRP X19, 0x1167000
	0x032755E4 ADRP X23, 0xEAE000
	0x032755E8 LDRB W8, [X19 + 0x5DC]
	0x032755EC LDR X23, [X23 + 0xDE0]
	0x032755F0 TBNZ X8, 0x0, 0x3275638
	0x032755F4 ADRP X0, 0xEAE000
	0x032755F8 LDR X0, [X0 + 0xE78]
	0x032755FC BL 0x1C16CF4
	0x03275600 ADRP X0, 0xE7E000
	0x03275604 LDR X0, [X0 + 0xE00]
	0x03275608 BL 0x1C16CF4
	0x0327560C ADRP X0, 0xEAE000
	0x03275610 LDR X0, [X0 + 0xDE0]
	0x03275614 BL 0x1C16CF4
	0x03275618 ADRP X0, 0xEAE000
	0x0327561C LDR X0, [X0 + 0xE80]
	0x03275620 BL 0x1C16CF4
	0x03275624 ADRP X0, 0xEAD000
	0x03275628 LDR X0, [X0 + 0xCC8]
	0x0327562C BL 0x1C16CF4
	0x03275630 MOVZ W8, 0x1
	0x03275634 STRB W8, [X19 + 0x5DC]
	0x03275638 LDR X0, [X23]
	0x0327563C LDR W8, [X0 + 0xE0]
	0x03275640 CBNZ W8, 0x327564C
	0x03275644 BL 0x1C16DFC
	0x03275648 LDR X0, [X23]
	0x0327564C LDR X8, [X0 + 0xB8]
	0x03275650 LDR X19, [X8 + 0x40]
	0x03275654 STRB W31, [X31 + 0xC]
	0x03275658 ADD X1, X31, 0xC
	0x0327565C MOV X0, X19
	0x03275660 MOV X2, X31
	0x03275664 BL 0x33DE64C
	0x03275668 LDR X0, [X23]
	0x0327566C LDR W8, [X0 + 0xE0]
	0x03275670 CBNZ W8, 0x327567C
	0x03275674 BL 0x1C16DFC
	0x03275678 LDR X0, [X23]
	0x0327567C LDR X8, [X0 + 0xB8]
	0x03275680 LDRB W9, [X8 + 0x19]
	0x03275684 CBNZ W9, 0x32756A4
	0x03275688 LDR W9, [X0 + 0xE0]
	0x0327568C CBNZ W9, 0x327569C
	0x03275690 BL 0x1C16DFC
	0x03275694 LDR X8, [X23]
	0x03275698 LDR X8, [X8 + 0xB8]
	0x0327569C LDRB W8, [X8 + 0x18]
	0x032756A0 CBZ W8, 0x32756D4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x1168000
	009 Move X24, 0xEAF000
	010 Move W8, [X23+1489]
	011 Move X24, [X24+3576]
	012 Move X20, X3
	013 Move X22, X2
	014 Move X21, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0xEAF000
	021 Move X0, [X0+3520]
	022 Call 0x1C17CF4
	023 Move X0, 0xEAF000
	024 Move X0, [X0+3536]
	025 Call 0x1C17CF4
	026 Move X0, 0xEAF000
	027 Move X0, [X0+3576]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X23+1489], W8
	031 Move X23, 0xEAF000
	032 Move X23, [X23+3536]
	033 Move X0, X19
	034 Move X1, X31
	035 Call Object..ctor, X0
	036 Move [X19+24], X22
	037 Move X0, [X24]
	038 Call 0x1C17F10
	039 Move X1, X21
	040 Move X22, X0
	041 Call TypeInfo..ctor, X0, X1
	042 Move [X19+32], X22
	043 Compare X20, 0
	044 JumpIfEqual {53}
	045 Move X8, 0xEAF000
	046 Move X8, [X8+3520]
	047 Move X0, [X8]
	048 Call 0x1C17F10
	049 Move X1, X20
	050 Move X21, X0
	051 Call ChannelInfo..ctor, X0, X1
	052 Move [X19+16], X21
	053 Move X0, [X23]
	054 Move W20, [X19+48]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {60}
	058 Call 0x1C17DFC
	059 Move X0, [X23]
	060 Move X8, [X0+184]
	061 Move X22, [X31+32]
	062 Move X21, [X31+40]
	063 Move X24, [X31+16]
	064 Move X23, [X31+24]
	065 Move W8, [X8+4]
	066 Or W8, W8, W20
	067 Move [X19+48], W8
	068 Move X20, [X31+48]
	069 Move X19, [X31+56]
	070 Move X30, [X31+64]
	071 Return 

Method: System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x03275A48 BL 0x33DE64C
	0x03275A4C LDR X0, [X21]
	0x03275A50 LDR W8, [X0 + 0xE0]
	0x03275A54 CBNZ W8, 0x3275A60
	0x03275A58 BL 0x1C16DFC
	0x03275A5C LDR X0, [X21]
	0x03275A60 LDR X8, [X0 + 0xB8]
	0x03275A64 LDR X0, [X8 + 0x38]
	0x03275A68 CBZ X0, 0x3275ABC
	0x03275A6C LDR X8, [X0]
	0x03275A70 LDR X9, [X8 + 0x2B8]
	0x03275A74 LDR X2, [X8 + 0x2C0]
	0x03275A78 MOV X1, X20
	0x03275A7C BLR X9
	0x03275A80 MOV W21, W0
	0x03275A84 MOV X20, X31
	0x03275A88 LDRB W8, [X31 + 0xC]
	0x03275A8C CBZ W8, 0x3275A9C
	0x03275A90 MOV X0, X19
	0x03275A94 MOV X1, X31
	0x03275A98 BL 0x33E14E4
	0x03275A9C CBNZ X20, 0x3275AB4
	0x03275AA0 AND W0, W21, 0x1
	0x03275AA4 LDP X20, X19, [X31 + 0x20]
	0x03275AA8 LDP X30, X21, [X31 + 0x10]
	0x03275AAC ADD X31, X31, 0x30
	0x03275AB0 RET
	0x03275AB4 MOV X0, X20
	0x03275AB8 BL 0x1C16F18
	0x03275ABC BL 0x1C16F20
	0x03275AC0 B 0x3275AC8
	0x03275AC4 B 0x3275AC8
	0x03275AC8 MOV X21, X0
	0x03275ACC CMP W1, 0x1
	0x03275AD0 B.NE 0x3275AEC
	0x03275AD4 MOV X0, X21
	0x03275AD8 BL 0x3EB1AD0
	0x03275ADC LDR X20, [X0]
	0x03275AE0 BL 0x3EB1AE0
	0x03275AE4 MOV W21, W31
	0x03275AE8 B 0x3275A88
	0x03275AEC MOV X20, X31
	0x03275AF0 B 0x3275AF8
	0x03275AF4 MOV X21, X0
	0x03275AF8 LDRB W8, [X31 + 0xC]
	0x03275AFC CBZ W8, 0x3275B0C
	0x03275B00 MOV X0, X19
	0x03275B04 MOV X1, X31
	0x03275B08 BL 0x33E14E4
	0x03275B0C CBNZ X20, 0x3275B18
	0x03275B10 MOV X0, X21
	0x03275B14 BL 0x1D2C690
	0x03275B18 MOV X0, X20
	0x03275B1C BL 0x1C16F18
	0x03275B20 BL 0x1990590
	0x03275B24 SUB X31, X31, 0x30
	0x03275B28 STP X30, X21, [X31 + 0x10]
	0x03275B2C STP X20, X19, [X31 + 0x20]
	0x03275B30 ADRP X19, 0x1167000
	0x03275B34 ADRP X21, 0xEAE000
	0x03275B38 LDRB W8, [X19 + 0x5DE]
	0x03275B3C LDR X21, [X21 + 0xDE0]
	0x03275B40 MOV X20, X0
	0x03275B44 TBNZ X8, 0x0, 0x3275B68
	0x03275B48 ADRP X0, 0xEAE000
	0x03275B4C LDR X0, [X0 + 0xE88]
	0x03275B50 BL 0x1C16CF4
	0x03275B54 ADRP X0, 0xEAE000
	0x03275B58 LDR X0, [X0 + 0xDE0]
	0x03275B5C BL 0x1C16CF4
	0x03275B60 MOVZ W8, 0x1
	0x03275B64 STRB W8, [X19 + 0x5DE]
	0x03275B68 LDR X0, [X21]
	0x03275B6C LDR W8, [X0 + 0xE0]
	0x03275B70 CBNZ W8, 0x3275B7C
	0x03275B74 BL 0x1C16DFC
	0x03275B78 LDR X0, [X21]
	0x03275B7C LDR X8, [X0 + 0xB8]
	0x03275B80 LDR X19, [X8 + 0x40]
	0x03275B84 STRB W31, [X31 + 0xC]
	0x03275B88 ADD X1, X31, 0xC
	0x03275B8C MOV X0, X19
	0x03275B90 MOV X2, X31
	0x03275B94 BL 0x33DE64C
	0x03275B98 LDR X0, [X21]
	0x03275B9C LDR W8, [X0 + 0xE0]
	0x03275BA0 CBNZ W8, 0x3275BAC
	0x03275BA4 BL 0x1C16DFC
	0x03275BA8 LDR X0, [X21]
	0x03275BAC LDR X8, [X0 + 0xB8]
	0x03275BB0 LDR X0, [X8 + 0x28]
	0x03275BB4 CBZ X0, 0x3275C48
	0x03275BB8 LDR X8, [X0]
	0x03275BBC LDR X9, [X8 + 0x2D8]
	0x03275BC0 LDR X2, [X8 + 0x2E0]
	0x03275BC4 MOV X1, X20
	0x03275BC8 BLR X9
	0x03275BCC CBZ X0, 0x3275BF0
	0x03275BD0 ADRP X8, 0xEAE000
	0x03275BD4 LDR X8, [X8 + 0xE88]
	0x03275BD8 LDR X9, [X0]
	0x03275BDC LDR X8, [X8]
	0x03275BE0 LDRB W11, [X9 + 0x130]
	0x03275BE4 LDRB W10, [X8 + 0x130]
	0x03275BE8 CMP W11, W10
	0x03275BEC B.CS 0x3275BFC
	0x03275BF0 MOV X20, X31
	0x03275BF4 MOV X21, X31
	0x03275BF8 B 0x3275C14
	0x03275BFC LDR X9, [X9 + 0xC8]
	0x03275C00 MOV X20, X31
	0x03275C04 ADD X9, X9, X10, 0x3, LSL
	0x03275C08 LDUR X9, [X9 - 0x8]
	0x03275C0C CMP X9, X8
	0x03275C10 CSEL X21, X0, X31, EQ
	0x03275C14 LDRB W8, [X31 + 0xC]
	0x03275C18 CBZ W8, 0x3275C28
	0x03275C1C MOV X0, X19
	0x03275C20 MOV X1, X31
	0x03275C24 BL 0x33E14E4
	0x03275C28 CBNZ X20, 0x3275C40
	0x03275C2C MOV X0, X21
	0x03275C30 LDP X20, X19, [X31 + 0x20]
	0x03275C34 LDP X30, X21, [X31 + 0x10]
	0x03275C38 ADD X31, X31, 0x30
	0x03275C3C RET
	0x03275C40 MOV X0, X20
	0x03275C44 BL 0x1C16F18
	0x03275C48 BL 0x1C16F20
	0x03275C4C B 0x3275C54
	0x03275C50 B 0x3275C54
	0x03275C54 MOV X21, X0
	0x03275C58 CMP W1, 0x1
	0x03275C5C B.NE 0x3275C74
	0x03275C60 MOV X0, X21
	0x03275C64 BL 0x3EB1AD0
	0x03275C68 LDR X20, [X0]
	0x03275C6C BL 0x3EB1AE0
	0x03275C70 B 0x3275BF4
	0x03275C74 MOV X20, X31
	0x03275C78 B 0x3275C80
	0x03275C7C MOV X21, X0
	0x03275C80 LDRB W8, [X31 + 0xC]
	0x03275C84 CBZ W8, 0x3275C94
	0x03275C88 MOV X0, X19
	0x03275C8C MOV X1, X31
	0x03275C90 BL 0x33E14E4
	0x03275C94 CBNZ X20, 0x3275CA0
	0x03275C98 MOV X0, X21
	0x03275C9C BL 0x1D2C690
	0x03275CA0 MOV X0, X20
	0x03275CA4 BL 0x1C16F18
	0x03275CA8 BL 0x1990590
	0x03275CAC SUB X31, X31, 0x30
	0x03275CB0 STP X30, X21, [X31 + 0x10]
	0x03275CB4 STP X20, X19, [X31 + 0x20]
	0x03275CB8 ADRP X19, 0x1167000
	0x03275CBC ADRP X21, 0xEAE000
	0x03275CC0 LDRB W8, [X19 + 0x5DF]
	0x03275CC4 LDR X21, [X21 + 0xDE0]
	0x03275CC8 MOV X20, X0
	0x03275CCC TBNZ X8, 0x0, 0x3275CF0
	0x03275CD0 ADRP X0, 0xEAE000
	0x03275CD4 LDR X0, [X0 + 0xDE0]
	0x03275CD8 BL 0x1C16CF4
	0x03275CDC ADRP X0, 0xEAE000
	0x03275CE0 LDR X0, [X0 + 0xE90]
	0x03275CE4 BL 0x1C16CF4
	0x03275CE8 MOVZ W8, 0x1
	0x03275CEC STRB W8, [X19 + 0x5DF]
	0x03275CF0 LDR X0, [X21]
	0x03275CF4 LDR W8, [X0 + 0xE0]
	0x03275CF8 CBNZ W8, 0x3275D04
	0x03275CFC BL 0x1C16DFC
	0x03275D00 LDR X0, [X21]
	0x03275D04 LDR X8, [X0 + 0xB8]
	0x03275D08 LDR X19, [X8 + 0x40]
	0x03275D0C STRB W31, [X31 + 0xC]
	0x03275D10 ADD X1, X31, 0xC
	0x03275D14 MOV X0, X19
	0x03275D18 MOV X2, X31
	0x03275D1C BL 0x33DE64C
	0x03275D20 LDR X0, [X21]
	0x03275D24 LDR W8, [X0 + 0xE0]
	0x03275D28 CBNZ W8, 0x3275D34
	0x03275D2C BL 0x1C16DFC
	0x03275D30 LDR X0, [X21]
	0x03275D34 LDR X8, [X0 + 0xB8]
	0x03275D38 LDR X0, [X8 + 0x20]
	0x03275D3C CBZ X0, 0x3275DD0
	0x03275D40 LDR X8, [X0]
	0x03275D44 LDR X9, [X8 + 0x2D8]
	0x03275D48 LDR X2, [X8 + 0x2E0]
	0x03275D4C MOV X1, X20
	0x03275D50 BLR X9
	0x03275D54 CBZ X0, 0x3275D78
	0x03275D58 ADRP X8, 0xEAE000
	0x03275D5C LDR X8, [X8 + 0xE90]
	0x03275D60 LDR X9, [X0]
	0x03275D64 LDR X8, [X8]
	0x03275D68 LDRB W11, [X9 + 0x130]
	0x03275D6C LDRB W10, [X8 + 0x130]
	0x03275D70 CMP W11, W10
	0x03275D74 B.CS 0x3275D84
	0x03275D78 MOV X20, X31
	0x03275D7C MOV X21, X31
	0x03275D80 B 0x3275D9C
	0x03275D84 LDR X9, [X9 + 0xC8]
	0x03275D88 MOV X20, X31
	0x03275D8C ADD X9, X9, X10, 0x3, LSL
	0x03275D90 LDUR X9, [X9 - 0x8]
	0x03275D94 CMP X9, X8
	0x03275D98 CSEL X21, X0, X31, EQ
	0x03275D9C LDRB W8, [X31 + 0xC]
	0x03275DA0 CBZ W8, 0x3275DB0
	0x03275DA4 MOV X0, X19
	0x03275DA8 MOV X1, X31
	0x03275DAC BL 0x33E14E4
	0x03275DB0 CBNZ X20, 0x3275DC8
	0x03275DB4 MOV X0, X21
	0x03275DB8 LDP X20, X19, [X31 + 0x20]
	0x03275DBC LDP X30, X21, [X31 + 0x10]
	0x03275DC0 ADD X31, X31, 0x30
	0x03275DC4 RET
	0x03275DC8 MOV X0, X20
	0x03275DCC BL 0x1C16F18
	0x03275DD0 BL 0x1C16F20
	0x03275DD4 B 0x3275DDC
	0x03275DD8 B 0x3275DDC
	0x03275DDC MOV X21, X0
	0x03275DE0 CMP W1, 0x1
	0x03275DE4 B.NE 0x3275DFC
	0x03275DE8 MOV X0, X21
	0x03275DEC BL 0x3EB1AD0
	0x03275DF0 LDR X20, [X0]
	0x03275DF4 BL 0x3EB1AE0
	0x03275DF8 B 0x3275D7C
	0x03275DFC MOV X20, X31
	0x03275E00 B 0x3275E08
	0x03275E04 MOV X21, X0
	0x03275E08 LDRB W8, [X31 + 0xC]
	0x03275E0C CBZ W8, 0x3275E1C
	0x03275E10 MOV X0, X19
	0x03275E14 MOV X1, X31
	0x03275E18 BL 0x33E14E4
	0x03275E1C CBNZ X20, 0x3275E28
	0x03275E20 MOV X0, X21
	0x03275E24 BL 0x1D2C690
	0x03275E28 MOV X0, X20
	0x03275E2C BL 0x1C16F18
	0x03275E30 BL 0x1990590
	0x03275E34 SUB X31, X31, 0x30
	0x03275E38 STP X30, X21, [X31 + 0x10]
	0x03275E3C STP X20, X19, [X31 + 0x20]
	0x03275E40 ADRP X19, 0x1167000
	0x03275E44 ADRP X21, 0xEAE000
	0x03275E48 LDRB W8, [X19 + 0x5E0]
	0x03275E4C LDR X21, [X21 + 0xDE0]
	0x03275E50 MOV X20, X0
	0x03275E54 TBNZ X8, 0x0, 0x3275E6C
	0x03275E58 ADRP X0, 0xEAE000
	0x03275E5C LDR X0, [X0 + 0xDE0]
	0x03275E60 BL 0x1C16CF4
	0x03275E64 MOVZ W8, 0x1
	0x03275E68 STRB W8, [X19 + 0x5E0]
	0x03275E6C LDR X0, [X21]
	0x03275E70 LDR W8, [X0 + 0xE0]
	0x03275E74 CBNZ W8, 0x3275E80
	0x03275E78 BL 0x1C16DFC
	0x03275E7C LDR X0, [X21]
	0x03275E80 LDR X8, [X0 + 0xB8]
	0x03275E84 LDR X19, [X8 + 0x40]
	0x03275E88 STRB W31, [X31 + 0xC]
	0x03275E8C ADD X1, X31, 0xC
	0x03275E90 MOV X0, X19
	0x03275E94 MOV X2, X31
	0x03275E98 BL 0x33DE64C
	0x03275E9C LDR X0, [X21]
	0x03275EA0 LDR W8, [X0 + 0xE0]
	0x03275EA4 CBNZ W8, 0x3275EB0
	0x03275EA8 BL 0x1C16DFC
	0x03275EAC LDR X0, [X21]
	0x03275EB0 CBZ X20, 0x3275F98
	0x03275EB4 LDR X8, [X0 + 0xB8]
	0x03275EB8 LDR X0, [X8 + 0x20]
	0x03275EBC CBZ X0, 0x3275F9C
	0x03275EC0 LDR X8, [X0]
	0x03275EC4 LDR X1, [X20 + 0x28]
	0x03275EC8 LDR X9, [X8 + 0x2B8]
	0x03275ECC LDR X2, [X8 + 0x2C0]
	0x03275ED0 BLR X9
	0x03275ED4 TBNZ X0, 0x0, 0x3275F84
	0x03275ED8 LDR X0, [X21]
	0x03275EDC LDR W8, [X0 + 0xE0]
	0x03275EE0 CBNZ W8, 0x3275EEC
	0x03275EE4 BL 0x1C16DFC
	0x03275EE8 LDR X0, [X21]
	0x03275EEC LDR X8, [X0 + 0xB8]
	0x03275EF0 LDR X0, [X8 + 0x28]
	0x03275EF4 CBZ X0, 0x3275FA0
	0x03275EF8 LDR X8, [X0]
	0x03275EFC LDR X1, [X20 + 0x28]
	0x03275F00 LDR X9, [X8 + 0x2B8]
	0x03275F04 LDR X2, [X8 + 0x2C0]
	0x03275F08 BLR X9
	0x03275F0C TBNZ X0, 0x0, 0x3275F84
	0x03275F10 LDR X0, [X21]
	0x03275F14 LDR W8, [X0 + 0xE0]
	0x03275F18 CBNZ W8, 0x3275F24
	0x03275F1C BL 0x1C16DFC
	0x03275F20 LDR X0, [X21]
	0x03275F24 LDR X8, [X0 + 0xB8]
	0x03275F28 LDR X0, [X8 + 0x28]
	0x03275F2C CBZ X0, 0x3276024
	0x03275F30 LDR X8, [X0]
	0x03275F34 LDR X1, [X20 + 0x28]
	0x03275F38 LDR X9, [X8 + 0x2E8]
	0x03275F3C LDR X3, [X8 + 0x2F0]
	0x03275F40 MOV X2, X20
	0x03275F44 BLR X9
	0x03275F48 LDR X0, [X20 + 0x28]
	0x03275F4C MOVZ W1, 0x1
	0x03275F50 MOV X2, X31
	0x03275F54 BL 0x328FCC0
	0x03275F58 MOV X20, X31
	0x03275F5C LDRB W8, [X31 + 0xC]
	0x03275F60 CBZ W8, 0x3275F70
	0x03275F64 MOV X0, X19
	0x03275F68 MOV X1, X31
	0x03275F6C BL 0x33E14E4
	0x03275F70 CBNZ X20, 0x3275F90

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X21, 0x1168000
	015 Move W8, [X21+1490]
	016 Move X20, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {66}
	022 Move X0, 0xE88000
	023 Move X0, [X0+2536]
	024 Call 0x1C17CF4
	025 Move X0, 0xEAF000
	026 Move X0, [X0+3592]
	027 Call 0x1C17CF4
	028 Move X0, 0xEAF000
	029 Move X0, [X0+3600]
	030 Call 0x1C17CF4
	031 Move X0, 0xEAF000
	032 Move X0, [X0+3408]
	033 Call 0x1C17CF4
	034 Move X0, 0xEAF000
	035 Move X0, [X0+3544]
	036 Call 0x1C17CF4
	037 Move X0, 0xE7F000
	038 Move X0, [X0+1880]
	039 Call 0x1C17CF4
	040 Move X0, 0xEAF000
	041 Move X0, [X0+3536]
	042 Call 0x1C17CF4
	043 Move X0, 0xE81000
	044 Move X0, [X0+632]
	045 Call 0x1C17CF4
	046 Move X0, 0xEAF000
	047 Move X0, [X0+3608]
	048 Call 0x1C17CF4
	049 Move X0, 0xEAF000
	050 Move X0, [X0+3616]
	051 Call 0x1C17CF4
	052 Move X0, 0xEAF000
	053 Move X0, [X0+3624]
	054 Call 0x1C17CF4
	055 Move X0, 0xEAF000
	056 Move X0, [X0+3632]
	057 Call 0x1C17CF4
	058 Move X0, 0xEAF000
	059 Move X0, [X0+3640]
	060 Call 0x1C17CF4
	061 Move X0, 0xEAF000
	062 Move X0, [X0+3648]
	063 Call 0x1C17CF4
	064 Move W8, 1
	065 Move [X21+1490], W8
	066 Move X0, X19
	067 Move X1, X31
	068 Call Object..ctor, X0
	069 Compare X20, 0
	070 JumpIfEqual {357}
	071 Move X0, X20
	072 Move X1, X31
	073 Call SerializationInfo.GetEnumerator, X0
	074 Compare X0, 0
	075 JumpIfEqual {357}
	076 Move X1, X31
	077 Move X20, X0
	078 Call SerializationInfoEnumerator.MoveNext, X0
	079 Move TEMP, X0
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfNotEqual {327}
	083 Move W8, 1
	084 Move [X31+12], W8
	085 Move X25, 0xEAF000
	086 Move X26, 0xE81000
	087 Move X27, 0xEAF000
	088 Move X28, 0xEAF000
	089 Move X29, 0xEAF000
	090 Move X23, 0xEAF000
	091 Move X24, 0xEAF000
	092 Move X25, [X25+3608]
	093 Move X26, [X26+632]
	094 Move X27, [X27+3640]
	095 Move X28, [X28+3544]
	096 Move X29, [X29+3648]
	097 Move X23, [X23+3592]
	098 Move X24, [X24+3624]
	099 Move X0, X20
	100 Move X1, X31
	101 Call SerializationInfoEnumerator.get_Name, X0
	102 Move X1, [X25]
	103 Move X2, X31
	104 Move X21, X0
	105 Call String.op_Equality, X0, X1
	106 Move TEMP, X0
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfNotEqual {121}
	110 Move X0, X20
	111 Move X1, X31
	112 Call SerializationInfoEnumerator.get_Value, X0
	113 Compare X0, 0
	114 JumpIfEqual {168}
	115 Move X1, [X26]
	116 Move X8, [X0]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move [X19+24], X0
	119 Move X8, [X0]
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move X1, [X27]
	122 Move X0, X21
	123 Move X2, X31
	124 Call String.op_Equality, X0, X1
	125 Move TEMP, X0
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfNotEqual {142}
	129 Move X0, X20
	130 Move X1, X31
	131 Call SerializationInfoEnumerator.get_Value, X0
	132 Compare X0, 0
	133 JumpIfEqual {211}
	134 Move X22, [X28]
	135 Move X21, X0
	136 Move X1, X22
	137 Call 0x1C17E00
	138 Compare X0, 0
	139 JumpIfEqual {354}
	140 Move [X19+32], X0
	141 Move X22, [X28]
	142 Move X1, [X29]
	143 Move X0, X21
	144 Move X2, X31
	145 Call String.op_Equality, X0, X1
	146 Move TEMP, X0
	147 And TEMP, TEMP, 1
	148 Compare TEMP, 1
	149 JumpIfNotEqual {169}
	150 Move X0, X20
	151 Move X1, X31
	152 Call SerializationInfoEnumerator.get_Value, X0
	153 Compare X0, 0
	154 JumpIfEqual {248}
	155 Move X22, [X23]
	156 Move X21, X0
	157 Move X1, X22
	158 Call 0x1C17E00
	159 Compare X0, 0
	160 JumpIfEqual {354}
	161 Move [X19+16], X0
	162 Move X22, [X23]
	163 Move X0, X21
	164 Move X1, X22
	165 Call 0x1C17E00
	166 Compare X0, 0
	167 JumpIfNotEqual {250}
	168 Move [X19+24], X31
	169 Move X1, [X24]
	170 Move X0, X21
	171 Move X2, X31
	172 Call String.op_Equality, X0, X1
	173 Move TEMP, X0
	174 And TEMP, TEMP, 1
	175 Compare TEMP, 1
	176 JumpIfNotEqual {212}
	177 Move X0, X20
	178 Move X1, X31
	179 Call SerializationInfoEnumerator.get_Value, X0
	180 Compare X0, 0
	181 JumpIfEqual {249}
	182 Move X25, X27
	183 Move X27, X26
	184 Move X26, X28
	185 Move X28, X29
	186 Move X29, X23
	187 Move X23, X24
	188 Move X24, 0xEAF000
	189 Move X24, [X24+3408]
	190 Move X21, X0
	191 Move X22, [X24]
	192 Move X1, X22
	193 Call 0x1C17E00
	194 Compare X0, 0
	195 JumpIfEqual {354}
	196 Move [X19+40], X0
	197 Move X22, [X24]
	198 Move X0, X21
	199 Move X1, X22
	200 Call 0x1C17E00
	201 Move X24, X23
	202 Move X23, X29
	203 Move X29, X28
	204 Move X28, X26
	205 Move X26, X27
	206 Move X27, X25
	207 Move X25, 0xEAF000
	208 Move X25, [X25+3608]
	209 Compare X0, 0
	210 JumpIfNotEqual {250}
	211 Move [X19+32], X31
	212 Move X8, 0xEAF000
	213 Move X8, [X8+3616]
	214 Move X0, X21
	215 Move X2, X31
	216 Move X1, [X8]
	217 Call String.op_Equality, X0, X1
	218 Move TEMP, X0
	219 And TEMP, TEMP, 1
	220 Compare TEMP, 1
	221 JumpIfEqual {257}
	222 Move X8, 0xEAF000
	223 Move X8, [X8+3632]
	224 Move X0, X21
	225 Move X2, X31
	226 Move X1, [X8]
	227 Call String.op_Equality, X0, X1
	228 Move TEMP, X0
	229 And TEMP, TEMP, 1
	230 Compare TEMP, 1
	231 JumpIfNotEqual {358}
	232 Move X0, X20
	233 Move X1, X31
	234 Call SerializationInfoEnumerator.get_Value, X0
	235 Move X8, 0xE88000
	236 Move X8, [X8+2536]
	237 Move X21, X0
	238 Move X8, [X8]
	239 Move W9, [X8+224]
	240 Compare W9, 0
	241 JumpIfNotEqual {244}
	242 Move X0, X8
	243 Call 0x1C17DFC
	244 Move X0, X21
	245 Move X1, X31
	246 Call Convert.ToInt32, X0
	247 Move [X19+48], W0
	248 Move [X19+16], X31
	249 Move [X19+40], X31
	250 Move X0, X20
	251 Move X1, X31
	252 Call SerializationInfoEnumerator.MoveNext, X0
	253 Move TEMP, X0
	254 And TEMP, TEMP, 1
	255 Compare TEMP, 1
	256 JumpIfEqual {99}
	257 Move X0, X20
	258 Move X1, X31
	259 Call SerializationInfoEnumerator.get_Value, X0
	260 Compare X0, 0
	261 JumpIfEqual {357}
	262 Move X9, [X26]
	263 Move X8, [X0]
	264 Move X22, X0
	265 NotImplemented "Instruction CMP not yet implemented."
	266 Move X9, 0xEAF000
	267 Move X9, [X9+3600]
	268 Move X9, 0xE7F000
	269 Move X9, [X9+1880]
	270 Move X8, [X8+64]
	271 Move X0, X22
	272 Move X1, [X9]
	273 Move X9, [X1+64]
	274 NotImplemented "Instruction CMP not yet implemented."
	275 Call 0x1C17E08
	276 Move W0, [X0]
	277 Move X21, [X9]
	278 Move X0, X22
	279 Move X1, X21
	280 Call 0x1C17E00
	281 Compare X0, 0
	282 JumpIfEqual {371}
	283 Move X8, 0xEAF000
	284 Move X8, [X8+3600]
	285 Move X0, X22
	286 Move X21, [X8]
	287 Move X1, X21
	288 Call 0x1C17E00
	289 Compare X0, 0
	290 JumpIfEqual {371}
	291 Move X8, [X0]
	292 Move X12, X0
	293 NotImplemented "Instruction LDRH not yet implemented."
	294 Compare X9, 0
	295 JumpIfEqual {302}
	296 Move X10, [X8+176]
	297 Add X10, X10, 8
	298 NotImplemented "Instruction LDUR not yet implemented."
	299 NotImplemented "Instruction CMP not yet implemented."
	300 Subtract X9, X9, 1
	301 Add X10, X10, 16
	302 Move W2, 7
	303 Move X0, X12
	304 Move X1, X21
	305 Move X21, X12
	306 Call 0x1C5D788
	307 Move X12, X21
	308 Move W9, [X10]
	309 Add W9, W9, 7
	310 Add X8, X8, W9
	311 Add X0, X8, 312
	312 Move X8, [X0]
	313 Move X2, [X0+8]
	314 Move X0, X12
	315 Move X1, X31
	316 NotImplemented "Instruction BLR not yet implemented."
	317 Move W9, [X31+12]
	318 NotImplemented "Instruction CMP not yet implemented."
	319 NotImplemented "Instruction CSET not yet implemented."
	320 And W9, W9, W8
	321 Move [X31+12], W9
	322 Move W8, [X31+12]
	323 Move TEMP, X8
	324 And TEMP, TEMP, 1
	325 Compare TEMP, 1
	326 JumpIfNotEqual {340}
	327 Move X21, 0xEAF000
	328 Move X21, [X21+3536]
	329 Move W20, [X19+48]
	330 Move X0, [X21]
	331 Move W8, [X0+224]
	332 Compare W8, 0
	333 JumpIfNotEqual {336}
	334 Call 0x1C17DFC
	335 Move X0, [X21]
	336 Move X8, [X0+184]
	337 Move W8, [X8]
	338 Or W8, W8, W20
	339 Move [X19+48], W8
	340 Move X20, [X31+96]
	341 Move X19, [X31+104]
	342 Move X22, [X31+80]
	343 Move X21, [X31+88]
	344 Move X24, [X31+64]
	345 Move X23, [X31+72]
	346 Move X26, [X31+48]
	347 Move X25, [X31+56]
	348 Move X28, [X31+32]
	349 Move X27, [X31+40]
	350 Move X29, [X31+16]
	351 Move X30, [X31+24]
	352 Add X31, X31, 112
	353 Return 
	354 Move X0, X21
	355 Move X1, X22
	356 Call 0x1C181E0
	357 Call 0x1C17F20
	358 Move X0, 0xE7F000
	359 Move X0, [X0+2880]
	360 Call 0x1C17D08
	361 Call 0x1C17F10
	362 Move X1, X31
	363 Move X19, X0
	364 Call NotSupportedException..ctor, X0
	365 Move X0, 0xEAF000
	366 Move X0, [X0+3656]
	367 Call 0x1C17D08
	368 Move X1, X0
	369 Move X0, X19
	370 Call 0x1C17DEC
	371 Move X0, X22
	372 Move X1, X21
	373 Call 0x1C181E0

Method: System.Boolean get_IsReferenceToWellKnow()

Disassembly:
	0x03275F74 LDP X20, X19, [X31 + 0x20]
	0x03275F78 LDP X30, X21, [X31 + 0x10]
	0x03275F7C ADD X31, X31, 0x30
	0x03275F80 RET
	0x03275F84 LDR X0, [X20 + 0x28]
	0x03275F88 CBNZ X0, 0x3275FA4
	0x03275F8C BL 0x1C16F20
	0x03275F90 MOV X0, X20
	0x03275F94 BL 0x1C16F18
	0x03275F98 BL 0x1C16F20
	0x03275F9C BL 0x1C16F20
	0x03275FA0 BL 0x1C16F20
	0x03275FA4 LDR X8, [X0]
	0x03275FA8 LDR X1, [X8 + 0x2F0]
	0x03275FAC LDR X9, [X8 + 0x2E8]
	0x03275FB0 BLR X9
	0x03275FB4 MOV X20, X0
	0x03275FB8 ADRP X0, 0xEAE000
	0x03275FBC LDR X0, [X0 + 0xE98]
	0x03275FC0 BL 0x1C16D08
	0x03275FC4 MOV X21, X0
	0x03275FC8 ADRP X0, 0xEAE000
	0x03275FCC LDR X0, [X0 + 0xEA0]
	0x03275FD0 BL 0x1C16D08
	0x03275FD4 MOV X2, X0
	0x03275FD8 MOV X0, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1168000
	006 Move X20, 0xEAF000
	007 Move W8, [X21+1491]
	008 Move X20, [X20+3536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xEAF000
	015 Move X0, [X0+3536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1491], W8
	019 Move X0, [X20]
	020 Move W19, [X19+48]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {26}
	024 Call 0x1C17DFC
	025 Move X0, [X20]
	026 Move X8, [X0+184]
	027 Move W8, [X8+4]
	028 And W31, W8, W19
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 NotImplemented "Instruction CSET not yet implemented."
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return X0

Method: System.Runtime.Remoting.IChannelInfo get_ChannelInfo()

Disassembly:
	0x03275FDC MOV X1, X20
	0x03275FE0 MOV X3, X31

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Runtime.Remoting.IEnvoyInfo get_EnvoyInfo()

Disassembly:
	0x03275FE4 BL 0x32274B8
	0x03275FE8 MOV X20, X0

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_EnvoyInfo(System.Runtime.Remoting.IEnvoyInfo value)

Disassembly:
	0x03275FEC ADRP X0, 0xEAE000
	0x03275FF0 LDR X0, [X0 + 0xD20]

ISIL:
	001 Move [X0+40], X1
	002 Return 

Method: System.Runtime.Remoting.IRemotingTypeInfo get_TypeInfo()

Disassembly:
	0x03275FF4 BL 0x1C16D08
	0x03275FF8 BL 0x1C16F10

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_TypeInfo(System.Runtime.Remoting.IRemotingTypeInfo value)

Disassembly:
	0x03275FFC MOV X21, X0
	0x03276000 MOV X1, X20

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.String get_URI()

Disassembly:
	0x03276004 MOV X2, X31
	0x03276008 BL 0x338C8D8

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_URI(System.String value)

Disassembly:
	0x0327600C ADRP X0, 0xEAD000
	0x03276010 LDR X0, [X0 + 0xEA8]

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.Void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x03276014 BL 0x1C16D08
	0x03276018 MOV X1, X0
	0x0327601C MOV X0, X21
	0x03276020 BL 0x1C16DEC
	0x03276024 BL 0x1C16F20
	0x03276028 B 0x3276058
	0x0327602C B 0x3276058
	0x03276030 B 0x3276058
	0x03276034 B 0x3276058
	0x03276038 B 0x3276058
	0x0327603C B 0x3276058
	0x03276040 B 0x3276058
	0x03276044 B 0x3276058
	0x03276048 B 0x3276058
	0x0327604C B 0x3276058
	0x03276050 B 0x3276058
	0x03276054 B 0x3276058
	0x03276058 MOV X21, X0
	0x0327605C CMP W1, 0x1
	0x03276060 B.NE 0x3276078
	0x03276064 MOV X0, X21
	0x03276068 BL 0x3EB1AD0
	0x0327606C LDR X20, [X0]
	0x03276070 BL 0x3EB1AE0
	0x03276074 B 0x3275F5C
	0x03276078 MOV X20, X31
	0x0327607C B 0x3276084
	0x03276080 MOV X21, X0
	0x03276084 LDRB W8, [X31 + 0xC]
	0x03276088 CBZ W8, 0x3276098
	0x0327608C MOV X0, X19
	0x03276090 MOV X1, X31
	0x03276094 BL 0x33E14E4
	0x03276098 CBNZ X20, 0x32760A4
	0x0327609C MOV X0, X21
	0x032760A0 BL 0x1D2C690
	0x032760A4 MOV X0, X20
	0x032760A8 BL 0x1C16F18
	0x032760AC BL 0x1990590
	0x032760B0 SUB X31, X31, 0x30
	0x032760B4 STP X30, X21, [X31 + 0x10]
	0x032760B8 STP X20, X19, [X31 + 0x20]
	0x032760BC ADRP X19, 0x1166000
	0x032760C0 ADRP X21, 0xEAD000
	0x032760C4 LDRB W8, [X19 + 0x5E1]
	0x032760C8 LDR X21, [X21 + 0xDE0]
	0x032760CC MOV X20, X0
	0x032760D0 TBNZ X8, 0x0, 0x32760E8
	0x032760D4 ADRP X0, 0xEAD000
	0x032760D8 LDR X0, [X0 + 0xDE0]
	0x032760DC BL 0x1C16CF4
	0x032760E0 MOVZ W8, 0x1
	0x032760E4 STRB W8, [X19 + 0x5E1]
	0x032760E8 LDR X0, [X21]
	0x032760EC LDR W8, [X0 + 0xE0]
	0x032760F0 CBNZ W8, 0x32760FC
	0x032760F4 BL 0x1C16DFC
	0x032760F8 LDR X0, [X21]
	0x032760FC LDR X8, [X0 + 0xB8]
	0x03276100 LDR X19, [X8 + 0x40]
	0x03276104 STRB W31, [X31 + 0xC]
	0x03276108 ADD X1, X31, 0xC
	0x0327610C MOV X0, X19
	0x03276110 MOV X2, X31
	0x03276114 BL 0x33DE64C
	0x03276118 LDR X0, [X21]
	0x0327611C LDR W8, [X0 + 0xE0]
	0x03276120 CBNZ W8, 0x327612C
	0x03276124 BL 0x1C16DFC
	0x03276128 LDR X0, [X21]
	0x0327612C CBZ X20, 0x3276188
	0x03276130 LDR X8, [X0 + 0xB8]
	0x03276134 LDR X0, [X8 + 0x38]
	0x03276138 CBZ X0, 0x327618C
	0x0327613C LDR X8, [X0]
	0x03276140 LDR X1, [X20 + 0x20]
	0x03276144 LDR X9, [X8 + 0x278]
	0x03276148 LDR X3, [X8 + 0x280]
	0x0327614C MOV X2, X20
	0x03276150 BLR X9
	0x03276154 MOV X20, X31
	0x03276158 LDRB W8, [X31 + 0xC]
	0x0327615C CBZ W8, 0x327616C
	0x03276160 MOV X0, X19
	0x03276164 MOV X1, X31
	0x03276168 BL 0x33E14E4
	0x0327616C CBNZ X20, 0x3276180
	0x03276170 LDP X20, X19, [X31 + 0x20]
	0x03276174 LDP X30, X21, [X31 + 0x10]
	0x03276178 ADD X31, X31, 0x30
	0x0327617C RET
	0x03276180 MOV X0, X20
	0x03276184 BL 0x1C16F18
	0x03276188 BL 0x1C16F20
	0x0327618C BL 0x1C16F20
	0x03276190 B 0x3276198
	0x03276194 B 0x3276198
	0x03276198 MOV X21, X0
	0x0327619C CMP W1, 0x1
	0x032761A0 B.NE 0x32761B8
	0x032761A4 MOV X0, X21
	0x032761A8 BL 0x3EB1AD0
	0x032761AC LDR X20, [X0]
	0x032761B0 BL 0x3EB1AE0
	0x032761B4 B 0x3276158
	0x032761B8 MOV X20, X31
	0x032761BC B 0x32761C4
	0x032761C0 MOV X21, X0
	0x032761C4 LDRB W8, [X31 + 0xC]
	0x032761C8 CBZ W8, 0x32761D8
	0x032761CC MOV X0, X19
	0x032761D0 MOV X1, X31
	0x032761D4 BL 0x33E14E4
	0x032761D8 CBNZ X20, 0x32761E4
	0x032761DC MOV X0, X21
	0x032761E0 BL 0x1D2C690
	0x032761E4 MOV X0, X20
	0x032761E8 BL 0x1C16F18

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X21, 0x1167000
	014 Move W8, [X21+1492]
	015 Move X19, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {50}
	021 Move X0, 0xEAE000
	022 Move X0, [X0+3664]
	023 Call 0x1C17CF4
	024 Move X0, 0xEAE000
	025 Move X0, [X0+3672]
	026 Call 0x1C17CF4
	027 Move X0, 0xEAE000
	028 Move X0, [X0+3680]
	029 Call 0x1C17CF4
	030 Move X0, 0xE7E000
	031 Move X0, [X0+1728]
	032 Call 0x1C17CF4
	033 Move X0, 0xEAE000
	034 Move X0, [X0+3608]
	035 Call 0x1C17CF4
	036 Move X0, 0xEAE000
	037 Move X0, [X0+3624]
	038 Call 0x1C17CF4
	039 Move X0, 0xEAE000
	040 Move X0, [X0+3632]
	041 Call 0x1C17CF4
	042 Move X0, 0xEAE000
	043 Move X0, [X0+3640]
	044 Call 0x1C17CF4
	045 Move X0, 0xEAE000
	046 Move X0, [X0+3648]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X21+1492], W8
	050 Move X0, X20
	051 Move X1, X31
	052 Call "il2cpp_vm_object_is_inst", X0
	053 Compare X19, 0
	054 JumpIfEqual {136}
	055 Move X21, 0xEAE000
	056 Move X22, 0xEAE000
	057 Move X29, 0xE7E000
	058 Move X28, 0xEAE000
	059 Move X27, 0xEAE000
	060 Move X26, 0xEAE000
	061 Move X25, 0xEAE000
	062 Move X24, 0xEAE000
	063 Move X23, 0xEAE000
	064 Move X21, [X21+3608]
	065 Move X22, [X22+3680]
	066 Move X29, [X29+1728]
	067 Move X28, [X28+3640]
	068 Move X27, [X27+3672]
	069 Move X26, [X26+3624]
	070 Move X25, [X25+3664]
	071 Move X24, [X24+3648]
	072 Move X23, [X23+3632]
	073 Move X1, X0
	074 Move X0, X19
	075 Move X2, X31
	076 Call SerializationInfo.SetType, X0, X1
	077 Move X2, [X20+24]
	078 Move X1, [X21]
	079 Move X0, X19
	080 Move X3, X31
	081 Call SerializationInfo.AddValue, X0, X1, X2
	082 Move X0, [X29]
	083 Move X21, [X20+32]
	084 Move X22, [X22]
	085 Move W8, [X0+224]
	086 Compare W8, 0
	087 JumpIfNotEqual {89}
	088 Call 0x1C17DFC
	089 Move X0, X22
	090 Move X1, X31
	091 Call Type.GetTypeFromHandle, X0
	092 Move X1, [X28]
	093 Move X3, X0
	094 Move X0, X19
	095 Move X2, X21
	096 Move X4, X31
	097 Call SerializationInfo.AddValue, X0, X1, X2, X3
	098 Move X0, [X27]
	099 Move X21, [X20+40]
	100 Move X1, X31
	101 Call Type.GetTypeFromHandle, X0
	102 Move X1, [X26]
	103 Move X3, X0
	104 Move X0, X19
	105 Move X2, X21
	106 Move X4, X31
	107 Call SerializationInfo.AddValue, X0, X1, X2, X3
	108 Move X0, [X25]
	109 Move X21, [X20+16]
	110 Move X1, X31
	111 Call Type.GetTypeFromHandle, X0
	112 Move X1, [X24]
	113 Move X3, X0
	114 Move X0, X19
	115 Move X2, X21
	116 Move X4, X31
	117 Call SerializationInfo.AddValue, X0, X1, X2, X3
	118 Move W2, [X20+48]
	119 Move X1, [X23]
	120 Move X0, X19
	121 Move X20, [X31+80]
	122 Move X19, [X31+88]
	123 Move X22, [X31+64]
	124 Move X21, [X31+72]
	125 Move X24, [X31+48]
	126 Move X23, [X31+56]
	127 Move X26, [X31+32]
	128 Move X25, [X31+40]
	129 Move X28, [X31+16]
	130 Move X27, [X31+24]
	131 Move X3, X31
	132 Move X29, [X31+96]
	133 Move X30, [X31+104]
	134 Call SerializationInfo.AddValue, X0, X1, X2
	135 Return 
	136 Call 0x1C17F20

Method: System.Object GetRealObject(System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x032761EC BL 0x1990590
	0x032761F0 SUB X31, X31, 0x30
	0x032761F4 STP X30, X21, [X31 + 0x10]
	0x032761F8 STP X20, X19, [X31 + 0x20]
	0x032761FC ADRP X19, 0x1166000
	0x03276200 ADRP X21, 0xEAD000
	0x03276204 LDRB W8, [X19 + 0x5E2]
	0x03276208 LDR X21, [X21 + 0xDE0]
	0x0327620C MOV X20, X0
	0x03276210 TBNZ X8, 0x0, 0x3276228
	0x03276214 ADRP X0, 0xEAD000
	0x03276218 LDR X0, [X0 + 0xDE0]
	0x0327621C BL 0x1C16CF4
	0x03276220 MOVZ W8, 0x1
	0x03276224 STRB W8, [X19 + 0x5E2]
	0x03276228 LDR X0, [X21]
	0x0327622C LDR W8, [X0 + 0xE0]
	0x03276230 CBNZ W8, 0x327623C
	0x03276234 BL 0x1C16DFC
	0x03276238 LDR X0, [X21]
	0x0327623C LDR X8, [X0 + 0xB8]
	0x03276240 LDR X19, [X8 + 0x40]
	0x03276244 STRB W31, [X31 + 0xC]
	0x03276248 ADD X1, X31, 0xC
	0x0327624C MOV X0, X19
	0x03276250 MOV X2, X31
	0x03276254 BL 0x33DE64C
	0x03276258 LDR X0, [X21]
	0x0327625C LDR W8, [X0 + 0xE0]
	0x03276260 CBNZ W8, 0x327626C
	0x03276264 BL 0x1C16DFC
	0x03276268 LDR X0, [X21]
	0x0327626C CBZ X20, 0x3276354
	0x03276270 LDR X8, [X0 + 0xB8]
	0x03276274 LDR X0, [X8 + 0x20]
	0x03276278 CBZ X0, 0x3276358
	0x0327627C LDR X8, [X0]
	0x03276280 LDR X1, [X20 + 0x20]
	0x03276284 LDR X9, [X8 + 0x2B8]
	0x03276288 LDR X2, [X8 + 0x2C0]
	0x0327628C BLR X9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1167000
	006 Move X20, 0xEAE000
	007 Move W8, [X21+1493]
	008 Move X20, [X20+3536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xEAE000
	015 Move X0, [X0+3536]
	016 Call 0x1C17CF4
	017 Move X0, 0xEAE000
	018 Move X0, [X0+3688]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1493], W8
	022 Move X0, [X20]
	023 Move W21, [X19+48]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {29}
	027 Call 0x1C17DFC
	028 Move X0, [X20]
	029 Move X8, [X0+184]
	030 Move W8, [X8]
	031 And W8, W8, W21
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X8, 0xEAE000
	034 Move X8, [X8+3688]
	035 Move X0, [X8]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Move X0, X19
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Return X0

Method: System.Void UpdateChannelInfo()

Disassembly:
	0x032752F8 LDRB W8, [X20 + 0x5D7]
	0x032752FC LDR X21, [X21 + 0x6C0]
	0x03275300 MOV X19, X0
	0x03275304 TBNZ X8, 0x0, 0x3275340
	0x03275308 ADRP X0, 0xEAE000
	0x0327530C LDR X0, [X0 + 0xDD8]
	0x03275310 BL 0x1C16CF4
	0x03275314 ADRP X0, 0xEAE000
	0x03275318 LDR X0, [X0 + 0xE70]
	0x0327531C BL 0x1C16CF4
	0x03275320 ADRP X0, 0xEA7000
	0x03275324 LDR X0, [X0 + 0x1B0]
	0x03275328 BL 0x1C16CF4
	0x0327532C ADRP X0, 0xE7E000
	0x03275330 LDR X0, [X0 + 0x6C0]
	0x03275334 BL 0x1C16CF4
	0x03275338 MOVZ W8, 0x1
	0x0327533C STRB W8, [X20 + 0x5D7]
	0x03275340 LDR X0, [X21]
	0x03275344 LDR X20, [X19 + 0x38]
	0x03275348 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1168000
	006 Move X21, 0xEAF000
	007 Move W8, [X20+1494]
	008 Move X21, [X21+3520]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xEAF000
	015 Move X0, [X0+3520]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1494], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X20, X0
	022 Call ChannelInfo..ctor, X0
	023 Move [X19+16], X20
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Move X21, [X31+40]
	028 Return 

Method: System.Type get_ServerType()

Disassembly:
	0x032762E8 CBZ X0, 0x32763E0
	0x032762EC LDR X8, [X0]
	0x032762F0 LDR X1, [X20 + 0x20]
	0x032762F4 LDR X9, [X8 + 0x2E8]
	0x032762F8 LDR X3, [X8 + 0x2F0]
	0x032762FC MOV X2, X20
	0x03276300 BLR X9
	0x03276304 LDR X0, [X20 + 0x20]
	0x03276308 MOVZ W1, 0x1
	0x0327630C MOV X2, X31
	0x03276310 BL 0x328FCC0
	0x03276314 MOV X20, X31
	0x03276318 LDRB W8, [X31 + 0xC]
	0x0327631C CBZ W8, 0x327632C
	0x03276320 MOV X0, X19
	0x03276324 MOV X1, X31
	0x03276328 BL 0x33E14E4
	0x0327632C CBNZ X20, 0x327634C
	0x03276330 LDP X20, X19, [X31 + 0x20]
	0x03276334 LDP X30, X21, [X31 + 0x10]
	0x03276338 ADD X31, X31, 0x30
	0x0327633C RET
	0x03276340 LDR X0, [X20 + 0x20]
	0x03276344 CBNZ X0, 0x3276360
	0x03276348 BL 0x1C16F20
	0x0327634C MOV X0, X20
	0x03276350 BL 0x1C16F18
	0x03276354 BL 0x1C16F20
	0x03276358 BL 0x1C16F20
	0x0327635C BL 0x1C16F20
	0x03276360 LDR X8, [X0]
	0x03276364 LDR X1, [X8 + 0x2F0]
	0x03276368 LDR X9, [X8 + 0x2E8]
	0x0327636C BLR X9
	0x03276370 MOV X20, X0
	0x03276374 ADRP X0, 0xEAD000
	0x03276378 LDR X0, [X0 + 0xE98]
	0x0327637C BL 0x1C16D08
	0x03276380 MOV X21, X0
	0x03276384 ADRP X0, 0xEAD000
	0x03276388 LDR X0, [X0 + 0xEA0]
	0x0327638C BL 0x1C16D08
	0x03276390 MOV X2, X0
	0x03276394 MOV X0, X21
	0x03276398 MOV X1, X20
	0x0327639C MOV X3, X31
	0x032763A0 BL 0x32274B8
	0x032763A4 MOV X20, X0
	0x032763A8 ADRP X0, 0xEAD000
	0x032763AC LDR X0, [X0 + 0xD20]
	0x032763B0 BL 0x1C16D08
	0x032763B4 BL 0x1C16F10
	0x032763B8 MOV X21, X0
	0x032763BC MOV X1, X20
	0x032763C0 MOV X2, X31
	0x032763C4 BL 0x338C8D8
	0x032763C8 ADRP X0, 0xEAD000
	0x032763CC LDR X0, [X0 + 0xEB0]
	0x032763D0 BL 0x1C16D08
	0x032763D4 MOV X1, X0
	0x032763D8 MOV X0, X21
	0x032763DC BL 0x1C16DEC
	0x032763E0 BL 0x1C16F20
	0x032763E4 B 0x3276414
	0x032763E8 B 0x3276414
	0x032763EC B 0x3276414
	0x032763F0 B 0x3276414
	0x032763F4 B 0x3276414
	0x032763F8 B 0x3276414
	0x032763FC B 0x3276414
	0x03276400 B 0x3276414
	0x03276404 B 0x3276414
	0x03276408 B 0x3276414
	0x0327640C B 0x3276414
	0x03276410 B 0x3276414
	0x03276414 MOV X21, X0
	0x03276418 CMP W1, 0x1
	0x0327641C B.NE 0x3276434
	0x03276420 MOV X0, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1167000
	006 Move X21, 0xE7E000
	007 Move W8, [X20+1495]
	008 Move X21, [X21+1728]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0xEAE000
	015 Move X0, [X0+3544]
	016 Call 0x1C17CF4
	017 Move X0, 0xEAE000
	018 Move X0, [X0+3696]
	019 Call 0x1C17CF4
	020 Move X0, 0xEA7000
	021 Move X0, [X0+432]
	022 Call 0x1C17CF4
	023 Move X0, 0xE7E000
	024 Move X0, [X0+1728]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+1495], W8
	028 Move X0, [X21]
	029 Move X20, [X19+56]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X20
	035 Move X1, X31
	036 Move X2, X31
	037 Call Type.op_Equality, X0, X1
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {61}
	042 Move X20, [X19+32]
	043 Compare X20, 0
	044 JumpIfEqual {90}
	045 Move X10, 0xEAE000
	046 Move X8, [X20]
	047 Move X10, [X10+3544]
	048 NotImplemented "Instruction LDRH not yet implemented."
	049 Move X1, [X10]
	050 Compare X9, 0
	051 JumpIfEqual {58}
	052 Move X10, [X8+176]
	053 Add X10, X10, 8
	054 NotImplemented "Instruction LDUR not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Subtract X9, X9, 1
	057 Add X10, X10, 16
	058 Move X0, X20
	059 Move W2, W31
	060 Call 0x1C5D788
	061 Move X0, [X19+56]
	062 NotImplemented "Instruction LDRSW not yet implemented."
	063 Add X8, X8, X9
	064 Add X0, X8, 312
	065 Move X8, [X0]
	066 Move X1, [X0+8]
	067 Move X0, X20
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Move X8, [X21]
	070 Move X20, X0
	071 Move W9, [X8+224]
	072 Compare W9, 0
	073 JumpIfNotEqual {76}
	074 Move X0, X8
	075 Call 0x1C17DFC
	076 Move X8, 0xEA7000
	077 Move X9, 0xEAE000
	078 Move X8, [X8+432]
	079 Move X9, [X9+3696]
	080 Move X0, X20
	081 Move X1, [X8]
	082 Move X2, [X9]
	083 Call 0x1C1803C
	084 Move [X19+56], X0
	085 Move X20, [X31+16]
	086 Move X19, [X31+24]
	087 Move X30, [X31+32]
	088 Move X21, [X31+40]
	089 Return X0
	090 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03276424 BL 0x3EB1AD0
	0x03276428 LDR X20, [X0]
	0x0327642C BL 0x3EB1AE0
	0x03276430 B 0x3276318
	0x03276434 MOV X20, X31
	0x03276438 B 0x3276440
	0x0327643C MOV X21, X0
	0x03276440 LDRB W8, [X31 + 0xC]
	0x03276444 CBZ W8, 0x3276454
	0x03276448 MOV X0, X19
	0x0327644C MOV X1, X31
	0x03276450 BL 0x33E14E4
	0x03276454 CBNZ X20, 0x3276460
	0x03276458 MOV X0, X21
	0x0327645C BL 0x1D2C690
	0x03276460 MOV X0, X20
	0x03276464 BL 0x1C16F18
	0x03276468 BL 0x1990590
	0x0327646C STR X30, [X31 - 0x30]!
	0x03276470 STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x1167000
	005 Move X20, 0xEAE000
	006 Move W8, [X19+1496]
	007 Move X20, [X20+3536]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xEAE000
	013 Move X0, [X0+3536]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1496], W8
	017 Move X8, [X20]
	018 Move X9, -41451520
	019 Move V0, [X9+1464]
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X8, [X8+184]
	023 Move [X8], D0
	024 Move X30, [X31+32]
	025 Return 

