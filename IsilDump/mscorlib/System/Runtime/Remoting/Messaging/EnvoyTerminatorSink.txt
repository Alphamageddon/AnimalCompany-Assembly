Type: System.Runtime.Remoting.Messaging.EnvoyTerminatorSink

Method: System.Runtime.Remoting.Messaging.IMessage SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage msg)

Disassembly:
	0x03299A78 LDR X0, [X20, X23, LSL #3]
	0x03299A7C CBZ X0, 0x3299AFC
	0x03299A80 LDR X8, [X0]
	0x03299A84 LDP X9, X1, [X8 + 0x1D8]
	0x03299A88 BLR X9
	0x03299A8C CBZ X21, 0x3299AFC
	0x03299A90 MOV X22, X0
	0x03299A94 CBZ X0, 0x3299AAC
	0x03299A98 LDR X8, [X21]
	0x03299A9C MOV X0, X22
	0x03299AA0 LDR X1, [X8 + 0x40]
	0x03299AA4 BL 0x1C16E00
	0x03299AA8 CBZ X0, 0x3299B00
	0x03299AAC LDR W8, [X21 + 0x18]
	0x03299AB0 SUB X9, X23, 0x4
	0x03299AB4 CMP W9, W8
	0x03299AB8 B.CS 0x3299AE4
	0x03299ABC STR X22, [X21, X23, LSL #3]
	0x03299AC0 LDR W8, [X20 + 0x18]
	0x03299AC4 SUB W9, W23, 0x3
	0x03299AC8 CMP W9, W8
	0x03299ACC B.GE 0x3299AE8
	0x03299AD0 LDR X21, [X19 + 0x30]
	0x03299AD4 ADD X23, X23, 0x1
	0x03299AD8 SUB W9, W23, 0x4
	0x03299ADC CMP W9, W8
	0x03299AE0 B.CC 0x3299A78
	0x03299AE4 BL 0x1C16F28
	0x03299AE8 LDR X0, [X19 + 0x30]
	0x03299AEC LDP X20, X19, [X31 + 0x20]
	0x03299AF0 LDP X22, X21, [X31 + 0x10]
	0x03299AF4 LDP X30, X23, [X31], #0x30
	0x03299AF8 RET
	0x03299AFC BL 0x1C16F20
	0x03299B00 BL 0x1C16F44
	0x03299B04 MOV X1, X31
	0x03299B08 BL 0x1C16DEC
	0x03299B0C STP X30, X21, [X31 - 0x20]!
	0x03299B10 STP X20, X19, [X31 + 0x10]
	0x03299B14 ADRP X20, 0x1143000
	0x03299B18 ADRP X21, 0xE8B000
	0x03299B1C LDRB W8, [X20 + 0x70D]
	0x03299B20 LDR X21, [X21 + 0x968]
	0x03299B24 MOV X19, X0
	0x03299B28 TBNZ X8, 0x0, 0x3299B40
	0x03299B2C ADRP X0, 0xE8B000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1144000
	005 Move W8, [X20+1793]
	006 Move X19, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE8C000
	012 Move X0, [X0+952]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1793], W8
	016 Move X0, X31
	017 Call Thread.get_CurrentContext
	018 Compare X0, 0
	019 JumpIfEqual {52}
	020 Move X1, X31
	021 Call Context.GetClientContextSinkChain, X0
	022 Compare X0, 0
	023 JumpIfEqual {52}
	024 Move X10, 0xE8C000
	025 Move X8, [X0]
	026 Move X10, [X10+952]
	027 Move X20, X0
	028 NotImplemented "Instruction LDRH not yet implemented."
	029 Move X1, [X10]
	030 Compare X9, 0
	031 JumpIfEqual {38}
	032 Move X10, [X8+176]
	033 Add X10, X10, 8
	034 NotImplemented "Instruction LDUR not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Subtract X9, X9, 1
	037 Add X10, X10, 16
	038 Move X0, X20
	039 Move W2, W31
	040 Call 0x1C5D788
	041 NotImplemented "Instruction LDRSW not yet implemented."
	042 Add X8, X8, X9
	043 Add X0, X8, 312
	044 Move X3, [X0]
	045 Move X2, [X0+8]
	046 Move X0, X20
	047 Move X1, X19
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 CallNoReturn X3
	052 Call 0x1C17F20

Method: System.Runtime.Remoting.Messaging.IMessageCtrl AsyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Messaging.IMessageSink replySink)

Disassembly:
	0x03299B30 LDR X0, [X0 + 0x968]
	0x03299B34 BL 0x1C16CF4
	0x03299B38 MOVZ W8, 0x1
	0x03299B3C STRB W8, [X20 + 0x70D]
	0x03299B40 LDR X0, [X21]
	0x03299B44 BL 0x1C16F10
	0x03299B48 MOV X1, X19
	0x03299B4C MOV X20, X0
	0x03299B50 BL 0x3299B90
	0x03299B54 STR X20, [X19 + 0x58]
	0x03299B58 CBZ X20, 0x3299B8C
	0x03299B5C LDR X0, [X20 + 0x10]
	0x03299B60 CBNZ X0, 0x3299B7C
	0x03299B64 LDR X8, [X20]
	0x03299B68 MOV X0, X20
	0x03299B6C LDR X9, [X8 + 0x248]
	0x03299B70 LDR X1, [X8 + 0x250]
	0x03299B74 BLR X9
	0x03299B78 STR X0, [X20 + 0x10]
	0x03299B7C STR X0, [X19 + 0x60]
	0x03299B80 LDP X20, X19, [X31 + 0x10]
	0x03299B84 LDP X30, X21, [X31], #0x20
	0x03299B88 RET
	0x03299B8C BL 0x1C16F20
	0x03299B90 STR X30, [X31 - 0x30]!
	0x03299B94 STP X22, X21, [X31 + 0x10]
	0x03299B98 STP X20, X19, [X31 + 0x20]
	0x03299B9C ADRP X22, 0x1143000
	0x03299BA0 ADRP X21, 0xE8B000
	0x03299BA4 LDRB W8, [X22 + 0x711]
	0x03299BA8 LDR X21, [X21 + 0x968]
	0x03299BAC MOV X20, X1
	0x03299BB0 MOV X19, X0
	0x03299BB4 TBNZ X8, 0x0, 0x3299BCC
	0x03299BB8 ADRP X0, 0xE8B000
	0x03299BBC LDR X0, [X0 + 0x968]
	0x03299BC0 BL 0x1C16CF4
	0x03299BC4 MOVZ W8, 0x1
	0x03299BC8 STRB W8, [X22 + 0x711]
	0x03299BCC MOV X0, X19
	0x03299BD0 MOV X1, X31
	0x03299BD4 BL 0x33BDD8C
	0x03299BD8 STR X20, [X19 + 0x18]
	0x03299BDC LDR X0, [X21]
	0x03299BE0 LDR W8, [X0 + 0xE0]
	0x03299BE4 CBNZ W8, 0x3299BF0
	0x03299BE8 BL 0x1C16DFC
	0x03299BEC LDR X0, [X21]
	0x03299BF0 LDR X8, [X0 + 0xB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1144000
	006 Move W8, [X21+1794]
	007 Move X19, X2
	008 Move X20, X1
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xE8C000
	014 Move X0, [X0+952]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1794], W8
	018 Move X0, X31
	019 Call Thread.get_CurrentContext
	020 Compare X0, 0
	021 JumpIfEqual {57}
	022 Move X1, X31
	023 Call Context.GetClientContextSinkChain, X0
	024 Compare X0, 0
	025 JumpIfEqual {57}
	026 Move X10, 0xE8C000
	027 Move X8, [X0]
	028 Move X10, [X10+952]
	029 Move X21, X0
	030 NotImplemented "Instruction LDRH not yet implemented."
	031 Move X1, [X10]
	032 Compare X9, 0
	033 JumpIfEqual {40}
	034 Move X10, [X8+176]
	035 Add X10, X10, 8
	036 NotImplemented "Instruction LDUR not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Subtract X9, X9, 1
	039 Add X10, X10, 16
	040 Move W2, 1
	041 Move X0, X21
	042 Call 0x1C5D788
	043 Move W9, [X10]
	044 Add W9, W9, 1
	045 Add X8, X8, W9
	046 Add X0, X8, 312
	047 Move X4, [X0]
	048 Move X3, [X0+8]
	049 Move X1, X20
	050 Move X2, X19
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X0, X21
	054 Move X30, [X31+32]
	055 Move X21, [X31+40]
	056 CallNoReturn X4
	057 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03299BF4 LDP X22, X21, [X31 + 0x10]
	0x03299BF8 LDR X8, [X8]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void .cctor()

Disassembly:
	0x03299BFC STR X8, [X19 + 0x20]
	0x03299C00 LDP X20, X19, [X31 + 0x20]
	0x03299C04 LDR X30, [X31], #0x30
	0x03299C08 RET
	0x03299C0C STP X30, X19, [X31 - 0x10]!
	0x03299C10 MOV X19, X0
	0x03299C14 LDR X0, [X0 + 0x18]
	0x03299C18 CBNZ X0, 0x3299C48
	0x03299C1C LDR X0, [X19 + 0x38]
	0x03299C20 CBZ X0, 0x3299C50
	0x03299C24 LDR X8, [X0]
	0x03299C28 LDP X9, X1, [X8 + 0x1B8]
	0x03299C2C BLR X9
	0x03299C30 CBZ X0, 0x3299C50
	0x03299C34 LDR X8, [X0]
	0x03299C38 LDR X9, [X8 + 0x2D8]
	0x03299C3C LDR X1, [X8 + 0x2E0]
	0x03299C40 BLR X9
	0x03299C44 STR X0, [X19 + 0x18]
	0x03299C48 LDP X30, X19, [X31], #0x10
	0x03299C4C RET
	0x03299C50 BL 0x1C16F20
	0x03299C54 LDR X0, [X0 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x1144000
	005 Move X20, 0xE8C000
	006 Move W8, [X19+1795]
	007 Move X20, [X20+904]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xE8C000
	013 Move X0, [X0+904]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1795], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

