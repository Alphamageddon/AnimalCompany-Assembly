Type: System.Runtime.Remoting.Messaging.MonoMethodMessage

Method: System.Void InitMessage(System.Reflection.RuntimeMethodInfo method, System.Object[] out_args)

Disassembly:
	0x0329DADC ADRP X22, 0xE87000
	0x0329DAE0 ADRP X21, 0xE87000
	0x0329DAE4 LDR W8, [X0 + 0xE0]
	0x0329DAE8 LDR X19, [X19]
	0x0329DAEC LDR X20, [X20 + 0x238]
	0x0329DAF0 LDR X22, [X22 + 0x9F0]
	0x0329DAF4 LDR X21, [X21 + 0x9F8]
	0x0329DAF8 CBNZ W8, 0x329DB00
	0x0329DAFC BL 0x1C16DFC
	0x0329DB00 MOV X0, X19
	0x0329DB04 MOV X1, X31
	0x0329DB08 BL 0x338C698
	0x0329DB0C LDR X8, [X20]
	0x0329DB10 LDR X8, [X8 + 0xB8]
	0x0329DB14 STR X0, [X8]
	0x0329DB18 LDR X0, [X22]
	0x0329DB1C BL 0x1C16F10
	0x0329DB20 MOV X1, X31
	0x0329DB24 MOV X19, X0
	0x0329DB28 BL 0x33BDD8C
	0x0329DB2C LDR X8, [X20]
	0x0329DB30 LDR X8, [X8 + 0xB8]
	0x0329DB34 STR X19, [X8 + 0x8]
	0x0329DB38 LDR X0, [X21]
	0x0329DB3C BL 0x1C16F10
	0x0329DB40 MOV X1, X31
	0x0329DB44 MOV X19, X0
	0x0329DB48 BL 0x33BDD8C
	0x0329DB4C LDR X8, [X20]
	0x0329DB50 LDP X22, X21, [X31 + 0x10]
	0x0329DB54 LDR X8, [X8 + 0xB8]
	0x0329DB58 STR X19, [X8 + 0x10]
	0x0329DB5C LDP X20, X19, [X31 + 0x20]
	0x0329DB60 LDR X30, [X31], #0x30
	0x0329DB64 RET
	0x0329DB68 STP X30, X25, [X31 - 0x40]!
	0x0329DB6C STP X24, X23, [X31 + 0x10]
	0x0329DB70 STP X22, X21, [X31 + 0x20]
	0x0329DB74 STP X20, X19, [X31 + 0x30]
	0x0329DB78 ADRP X25, 0x113F000
	0x0329DB7C LDRB W8, [X25 + 0x743]
	0x0329DB80 MOV X21, X5
	0x0329DB84 MOV X23, X4
	0x0329DB88 MOV W19, W3
	0x0329DB8C MOV X22, X2
	0x0329DB90 MOV X24, X1
	0x0329DB94 MOV X20, X0
	0x0329DB98 TBNZ X8, 0x0, 0x329DBBC
	0x0329DB9C ADRP X0, 0xE87000
	0x0329DBA0 LDR X0, [X0 + 0x270]
	0x0329DBA4 BL 0x1C16CF4
	0x0329DBA8 ADRP X0, 0xE56000
	0x0329DBAC LDR X0, [X0 + 0x9D0]
	0x0329DBB0 BL 0x1C16CF4
	0x0329DBB4 MOVZ W8, 0x1
	0x0329DBB8 STRB W8, [X25 + 0x743]
	0x0329DBBC MOV X0, X20
	0x0329DBC0 MOV X1, X31
	0x0329DBC4 BL 0x33BDD8C
	0x0329DBC8 STP X23, X24, [X20 + 0x20]
	0x0329DBCC STR X22, [X20 + 0x18]
	0x0329DBD0 CBZ X21, 0x329DCA0
	0x0329DBD4 ADRP X22, 0xE87000
	0x0329DBD8 LDR X8, [X21]
	0x0329DBDC LDR X22, [X22 + 0x270]
	0x0329DBE0 LDRH W9, [X8 + 0x12E]
	0x0329DBE4 LDR X1, [X22]
	0x0329DBE8 CBZ X9, 0x329DC0C
	0x0329DBEC LDR X10, [X8 + 0xB0]
	0x0329DBF0 ADD X10, X10, 0x8
	0x0329DBF4 LDUR X11, [X10 - 0x8]
	0x0329DBF8 CMP X11, X1
	0x0329DBFC B.EQ 0x329DC1C
	0x0329DC00 SUBS X9, X9, 0x1
	0x0329DC04 ADD X10, X10, 0x10
	0x0329DC08 B.NE 0x329DBF4
	0x0329DC0C MOVZ W2, 0x7
	0x0329DC10 MOV X0, X21
	0x0329DC14 BL 0x1C5C788
	0x0329DC18 B 0x329DC2C
	0x0329DC1C LDR W9, [X10]
	0x0329DC20 ADD W9, W9, 0x7
	0x0329DC24 ADD X8, X8, W9, 0x4, SXTW
	0x0329DC28 ADD X0, X8, 0x138
	0x0329DC2C LDP X8, X1, [X0]
	0x0329DC30 MOV X0, X21
	0x0329DC34 BLR X8
	0x0329DC38 STR X0, [X20 + 0x30]
	0x0329DC3C LDR X8, [X21]
	0x0329DC40 LDR X1, [X22]
	0x0329DC44 LDRH W9, [X8 + 0x12E]
	0x0329DC48 CBZ X9, 0x329DC6C
	0x0329DC4C LDR X10, [X8 + 0xB0]
	0x0329DC50 ADD X10, X10, 0x8
	0x0329DC54 LDUR X11, [X10 - 0x8]
	0x0329DC58 CMP X11, X1
	0x0329DC5C B.EQ 0x329DC7C
	0x0329DC60 SUBS X9, X9, 0x1
	0x0329DC64 ADD X10, X10, 0x10
	0x0329DC68 B.NE 0x329DC54
	0x0329DC6C MOVZ W2, 0x3
	0x0329DC70 MOV X0, X21
	0x0329DC74 BL 0x1C5C788
	0x0329DC78 B 0x329DC8C
	0x0329DC7C LDR W9, [X10]
	0x0329DC80 ADD W9, W9, 0x3
	0x0329DC84 ADD X8, X8, W9, 0x4, SXTW
	0x0329DC88 ADD X0, X8, 0x138
	0x0329DC8C LDP X8, X1, [X0]
	0x0329DC90 MOV X0, X21
	0x0329DC94 BLR X8
	0x0329DC98 LDR X22, [X20 + 0x18]
	0x0329DC9C STR X0, [X20 + 0x40]
	0x0329DCA0 CBNZ X22, 0x329DCBC
	0x0329DCA4 ADRP X8, 0xE56000
	0x0329DCA8 LDR X8, [X8 + 0x9D0]
	0x0329DCAC MOV W1, W19
	0x0329DCB0 LDR X0, [X8]
	0x0329DCB4 BL 0x1C16D6C
	0x0329DCB8 STR X0, [X20 + 0x18]
	0x0329DCBC LDP X20, X19, [X31 + 0x30]
	0x0329DCC0 LDP X22, X21, [X31 + 0x20]
	0x0329DCC4 LDP X24, X23, [X31 + 0x10]
	0x0329DCC8 LDP X30, X25, [X31], #0x40
	0x0329DCCC RET
	0x0329DCD0 STR X30, [X31 - 0x10]!
	0x0329DCD4 LDR X8, [X0 + 0x18]
	0x0329DCD8 CBZ X8, 0x329DCE8
	0x0329DCDC LDR W0, [X8 + 0x18]
	0x0329DCE0 LDR X30, [X31], #0x10
	0x0329DCE4 RET
	0x0329DCE8 BL 0x1C16F20
	0x0329DCEC LDR X0, [X0 + 0x18]
	0x0329DCF0 RET
	0x0329DCF4 STR X30, [X31 - 0x20]!
	0x0329DCF8 STP X20, X19, [X31 + 0x10]
	0x0329DCFC ADRP X20, 0x113F000
	0x0329DD00 LDRB W8, [X20 + 0x745]
	0x0329DD04 MOV X19, X0
	0x0329DD08 TBNZ X8, 0x0, 0x329DD20
	0x0329DD0C ADRP X0, 0xE87000
	0x0329DD10 LDR X0, [X0 + 0x370]
	0x0329DD14 BL 0x1C16CF4
	0x0329DD18 MOVZ W8, 0x1
	0x0329DD1C STRB W8, [X20 + 0x745]
	0x0329DD20 LDR X20, [X19 + 0x20]
	0x0329DD24 CBNZ X20, 0x329DD48
	0x0329DD28 ADRP X8, 0xE87000
	0x0329DD2C LDR X8, [X8 + 0x370]
	0x0329DD30 LDR X0, [X8]
	0x0329DD34 BL 0x1C16F10
	0x0329DD38 MOV X1, X31
	0x0329DD3C MOV X20, X0
	0x0329DD40 BL 0x33BDD8C
	0x0329DD44 STR X20, [X19 + 0x20]
	0x0329DD48 MOV X0, X20
	0x0329DD4C LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X22, 0x1140000
	014 Move W8, [X22+1846]
	015 Move X19, X2
	016 Move X21, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {33}
	022 Move X0, 0xE57000
	023 Move X0, [X0+1560]
	024 Call 0x1C17CF4
	025 Move X0, 0xE57000
	026 Move X0, [X0+2512]
	027 Call 0x1C17CF4
	028 Move X0, 0xE57000
	029 Move X0, [X0+2760]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X22+1846], W8
	033 Move [X20+16], X21
	034 Compare X21, 0
	035 JumpIfEqual {176}
	036 Move X8, [X21]
	037 Move X0, X21
	038 Move X9, [X8+856]
	039 Move X1, [X8+864]
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Compare X0, 0
	042 JumpIfEqual {176}
	043 Move X8, 0xE57000
	044 Move X8, [X8+2512]
	045 Move W22, [X0+24]
	046 Move X21, X0
	047 Move X23, 0xE57000
	048 Move X0, [X8]
	049 Move X24, 0xE57000
	050 Move X23, [X23+1560]
	051 Move X24, [X24+2760]
	052 Move W1, W22
	053 Call 0x1C17D6C
	054 Move [X20+24], X0
	055 Move X0, [X23]
	056 Move W1, W22
	057 Call 0x1C17D6C
	058 Move [X20+40], X0
	059 Move [X20+72], X31
	060 Move [X20+80], W31
	061 Move X0, [X24]
	062 Move W1, W22
	063 Call 0x1C17D6C
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move [X20+32], X0
	066 Move W8, [X21+24]
	067 Compare W8, 0
	068 JumpIfEqual {94}
	069 Move X23, X0
	070 Move X25, X31
	071 Move W24, 1
	072 Add X8, X21, X25
	073 Move X0, [X8+32]
	074 Compare X0, 0
	075 JumpIfEqual {176}
	076 Move X8, [X0]
	077 Move X9, [X8+456]
	078 Move X1, [X8+464]
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Compare X23, 0
	081 JumpIfEqual {176}
	082 Move W8, [X23+24]
	083 Subtract W9, W24, 1
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Add X8, X23, X25
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move [X8+32], X0
	088 Move W8, [X21+24]
	089 Move X23, [X20+32]
	090 Move X25, W24
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Add W8, W24, 1
	093 Move W24, W8
	094 Call 0x1C17F28
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move W25, W31
	097 Move W9, W31
	098 Move W26, 2
	099 Move W27, 5
	100 Move W8, [X21+24]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X28, W9
	103 Add X24, X21, X28
	104 Add X24, X24, 32
	105 Move X0, [X24]
	106 Compare X0, 0
	107 JumpIfEqual {176}
	108 Move X1, X31
	109 Call ParameterInfo.get_IsOut, X0
	110 Move W8, [X21+24]
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move W23, W0
	113 Move X0, [X24]
	114 Compare X0, 0
	115 JumpIfEqual {176}
	116 Move X8, [X0]
	117 Move X9, [X8+472]
	118 Move X1, [X8+480]
	119 NotImplemented "Instruction BLR not yet implemented."
	120 Compare X0, 0
	121 JumpIfEqual {176}
	122 Move X1, X31
	123 Call Type.get_IsByRef, X0
	124 Move TEMP, X0
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfNotEqual {152}
	128 Compare X19, 0
	129 JumpIfEqual {150}
	130 Move W8, [X19+24]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X29, [X20+24]
	133 Compare X29, 0
	134 JumpIfEqual {176}
	135 Add X8, X19, W25
	136 Move X24, [X8+32]
	137 Compare X24, 0
	138 JumpIfEqual {145}
	139 Move X8, [X29]
	140 Move X0, X24
	141 Move X1, [X8+64]
	142 Call 0x1C17E00
	143 Compare X0, 0
	144 JumpIfEqual {177}
	145 Move W8, [X29+24]
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Add W25, W25, 1
	148 Add X8, X29, X28
	149 Move [X8+32], X24
	150 And W31, W23, 1
	151 NotImplemented "Instruction CINC not yet implemented."
	152 And W31, W23, 1
	153 NotImplemented "Instruction CSINC not yet implemented."
	154 Move X9, [X20+40]
	155 Compare X9, 0
	156 JumpIfEqual {176}
	157 Move W10, [X9+24]
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Add X10, X9, X28
	160 Add W9, W28, 1
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move [X10+32], W8
	163 Move X20, [X31+80]
	164 Move X19, [X31+88]
	165 Move X22, [X31+64]
	166 Move X21, [X31+72]
	167 Move X24, [X31+48]
	168 Move X23, [X31+56]
	169 Move X26, [X31+32]
	170 Move X25, [X31+40]
	171 Move X28, [X31+16]
	172 Move X27, [X31+24]
	173 Move X29, [X31+96]
	174 Move X30, [X31+104]
	175 Return 
	176 Call 0x1C17F20
	177 Call 0x1C17F44
	178 Move X1, X31
	179 Call 0x1C17DEC

Method: System.Void .ctor(System.Reflection.MethodBase method, System.Object[] out_args)

Disassembly:
	0x0329DD50 LDR X30, [X31], #0x20
	0x0329DD54 RET
	0x0329DD58 LDR X0, [X0 + 0x40]
	0x0329DD5C RET
	0x0329DD60 STP X30, X19, [X31 - 0x10]!
	0x0329DD64 MOV X19, X0
	0x0329DD68 LDR X0, [X0 + 0x40]
	0x0329DD6C MOV X1, X31
	0x0329DD70 MOV X2, X31
	0x0329DD74 BL 0x32CE114
	0x0329DD78 LDR X8, [X19 + 0x48]
	0x0329DD7C TBZ X0, 0x0, 0x329DDA0
	0x0329DD80 CBNZ X8, 0x329DDA0
	0x0329DD84 LDR X0, [X19 + 0x40]
	0x0329DD88 CBZ X0, 0x329DDAC
	0x0329DD8C LDR X8, [X0]
	0x0329DD90 LDP X9, X1, [X8 + 0x1A8]
	0x0329DD94 BLR X9
	0x0329DD98 MOV X8, X0
	0x0329DD9C STR X0, [X19 + 0x48]
	0x0329DDA0 MOV X0, X8
	0x0329DDA4 LDP X30, X19, [X31], #0x10
	0x0329DDA8 RET
	0x0329DDAC BL 0x1C16F20
	0x0329DDB0 STP X30, X23, [X31 - 0x30]!
	0x0329DDB4 STP X22, X21, [X31 + 0x10]
	0x0329DDB8 STP X20, X19, [X31 + 0x20]
	0x0329DDBC ADRP X20, 0x113F000
	0x0329DDC0 LDRB W8, [X20 + 0x746]
	0x0329DDC4 MOV X19, X0
	0x0329DDC8 TBNZ X8, 0x0, 0x329DDE0
	0x0329DDCC ADRP X0, 0xE5E000
	0x0329DDD0 LDR X0, [X0 + 0xC60]
	0x0329DDD4 BL 0x1C16CF4
	0x0329DDD8 MOVZ W8, 0x1
	0x0329DDDC STRB W8, [X20 + 0x746]
	0x0329DDE0 LDR X0, [X19 + 0x40]
	0x0329DDE4 MOV X1, X31
	0x0329DDE8 MOV X2, X31
	0x0329DDEC BL 0x32CE114
	0x0329DDF0 TBZ X0, 0x0, 0x329DDFC
	0x0329DDF4 LDR X8, [X19 + 0x50]
	0x0329DDF8 CBZ X8, 0x329DE10
	0x0329DDFC LDR X0, [X19 + 0x50]
	0x0329DE00 LDP X20, X19, [X31 + 0x20]
	0x0329DE04 LDP X22, X21, [X31 + 0x10]
	0x0329DE08 LDP X30, X23, [X31], #0x30
	0x0329DE0C RET
	0x0329DE10 LDR X0, [X19 + 0x40]
	0x0329DE14 CBZ X0, 0x329DECC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1140000
	007 Move W8, [X22+1847]
	008 Move X20, X2
	009 Move X19, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xE88000
	016 Move X0, [X0+2464]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1847], W8
	020 Move X0, X21
	021 Move X1, X31
	022 Call Object..ctor, X0
	023 Move X0, X19
	024 Move X1, X31
	025 Move X2, X31
	026 Call MethodBase.op_Inequality, X0, X1
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {54}
	031 Compare X19, 0
	032 JumpIfEqual {44}
	033 Move X9, 0xE88000
	034 Move X9, [X9+2464]
	035 Move X8, [X19]
	036 Move X1, [X9]
	037 Move W10, [X8+304]
	038 Move W9, [X1+304]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X8, [X8+200]
	041 Add X8, X8, X9
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X0, X21
	045 Move X1, X19
	046 Move X2, X20
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move X30, [X31+48]
	052 Call MonoMethodMessage.InitMessage, X0, X1, X2
	053 Return 
	054 Move [X21+24], X31
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 Move X30, [X31+48]
	060 Return 
	061 Move X0, X19
	062 Call 0x1C181E0

Method: System.Void .ctor(System.Reflection.MethodInfo minfo, System.Object[] in_args, System.Object[] out_args)

Disassembly:
	0x0329DE18 LDR X8, [X0]
	0x0329DE1C LDR X9, [X8 + 0x248]
	0x0329DE20 LDR X1, [X8 + 0x250]
	0x0329DE24 BLR X9
	0x0329DE28 CBZ X0, 0x329DECC
	0x0329DE2C ADRP X8, 0xE5E000
	0x0329DE30 LDR X8, [X8 + 0xC60]
	0x0329DE34 MOV X20, X0
	0x0329DE38 LDR W1, [X20 + 0x18]
	0x0329DE3C LDR X0, [X8]
	0x0329DE40 BL 0x1C16D6C
	0x0329DE44 STR X0, [X19 + 0x50]
	0x0329DE48 LDR W8, [X20 + 0x18]
	0x0329DE4C CMP W8, 0x1
	0x0329DE50 B.LT 0x329DDFC
	0x0329DE54 MOV X21, X0
	0x0329DE58 MOVZ W23, 0x4
	0x0329DE5C LDR X0, [X20, X23, LSL #3]
	0x0329DE60 CBZ X0, 0x329DECC
	0x0329DE64 LDR X8, [X0]
	0x0329DE68 LDP X9, X1, [X8 + 0x1D8]
	0x0329DE6C BLR X9
	0x0329DE70 CBZ X21, 0x329DECC
	0x0329DE74 MOV X22, X0
	0x0329DE78 CBZ X0, 0x329DE90
	0x0329DE7C LDR X8, [X21]
	0x0329DE80 MOV X0, X22
	0x0329DE84 LDR X1, [X8 + 0x40]
	0x0329DE88 BL 0x1C16E00
	0x0329DE8C CBZ X0, 0x329DED0
	0x0329DE90 LDR W8, [X21 + 0x18]
	0x0329DE94 SUB X9, X23, 0x4
	0x0329DE98 CMP W9, W8
	0x0329DE9C B.CS 0x329DEC8
	0x0329DEA0 STR X22, [X21, X23, LSL #3]
	0x0329DEA4 LDR W8, [X20 + 0x18]
	0x0329DEA8 SUB W9, W23, 0x3
	0x0329DEAC CMP W9, W8
	0x0329DEB0 B.GE 0x329DDFC
	0x0329DEB4 LDR X21, [X19 + 0x50]
	0x0329DEB8 ADD X23, X23, 0x1
	0x0329DEBC SUB W9, W23, 0x4
	0x0329DEC0 CMP W9, W8
	0x0329DEC4 B.CC 0x329DE5C
	0x0329DEC8 BL 0x1C16F28
	0x0329DECC BL 0x1C16F20
	0x0329DED0 BL 0x1C16F44
	0x0329DED4 MOV X1, X31
	0x0329DED8 BL 0x1C16DEC
	0x0329DEDC STR X30, [X31 - 0x20]!
	0x0329DEE0 STP X20, X19, [X31 + 0x10]
	0x0329DEE4 ADRP X20, 0x113F000
	0x0329DEE8 LDRB W8, [X20 + 0x747]
	0x0329DEEC MOV X19, X0
	0x0329DEF0 TBNZ X8, 0x0, 0x329DF08
	0x0329DEF4 ADRP X0, 0xE87000
	0x0329DEF8 LDR X0, [X0 + 0x908]
	0x0329DEFC BL 0x1C16CF4
	0x0329DF00 MOVZ W8, 0x1
	0x0329DF04 STRB W8, [X20 + 0x747]
	0x0329DF08 LDR X20, [X19 + 0x60]
	0x0329DF0C CBNZ X20, 0x329DF30
	0x0329DF10 ADRP X8, 0xE87000
	0x0329DF14 LDR X8, [X8 + 0x908]
	0x0329DF18 LDR X0, [X8]
	0x0329DF1C BL 0x1C16F10
	0x0329DF20 MOV X1, X19
	0x0329DF24 MOV X20, X0
	0x0329DF28 BL 0x329C284
	0x0329DF2C STR X20, [X19 + 0x60]
	0x0329DF30 MOV X0, X20
	0x0329DF34 LDP X20, X19, [X31 + 0x10]
	0x0329DF38 LDR X30, [X31], #0x20
	0x0329DF3C RET
	0x0329DF40 STP X30, X19, [X31 - 0x10]!
	0x0329DF44 MOV X19, X0
	0x0329DF48 LDR X0, [X0 + 0x40]
	0x0329DF4C MOV X1, X31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X23, 0x1140000
	010 Move W8, [X23+1848]
	011 Move X21, X3
	012 Move X19, X2
	013 Move X22, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xE88000
	020 Move X0, [X0+2464]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X23+1848], W8
	024 Move X0, X20
	025 Move X1, X31
	026 Call Object..ctor, X0
	027 Compare X22, 0
	028 JumpIfEqual {40}
	029 Move X9, 0xE88000
	030 Move X9, [X9+2464]
	031 Move X8, [X22]
	032 Move X1, [X9]
	033 Move W10, [X8+304]
	034 Move W9, [X1+304]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X8, [X8+200]
	037 Add X8, X8, X9
	038 NotImplemented "Instruction LDUR not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X0, X20
	041 Move X1, X22
	042 Move X2, X21
	043 Call MonoMethodMessage.InitMessage, X0, X1, X2
	044 Compare X19, 0
	045 JumpIfEqual {84}
	046 Move X8, [X19+24]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 And X8, X8, 0
	049 Compare X8, 0
	050 JumpIfEqual {74}
	051 Move X22, X31
	052 Subtract X23, X8, 1
	053 Add X24, X19, 32
	054 Move X25, [X20+24]
	055 Compare X25, 0
	056 JumpIfEqual {84}
	057 Move X21, [X24]
	058 Compare X21, 0
	059 JumpIfEqual {66}
	060 Move X8, [X25]
	061 Move X0, X21
	062 Move X1, [X8+64]
	063 Call 0x1C17E00
	064 Compare X0, 0
	065 JumpIfEqual {85}
	066 Move W8, [X25+24]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Add X8, X25, X22
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move [X8+32], X21
	071 Move W8, [X19+24]
	072 Add X22, X22, 1
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Call 0x1C17F28
	075 Move X20, [X31+48]
	076 Move X19, [X31+56]
	077 Move X22, [X31+32]
	078 Move X21, [X31+40]
	079 Move X24, [X31+16]
	080 Move X23, [X31+24]
	081 Move X30, [X31+64]
	082 Move X25, [X31+72]
	083 Return 
	084 Call 0x1C17F20
	085 Call 0x1C17F44
	086 Move X1, X31
	087 Call 0x1C17DEC
	088 Move X0, X22
	089 Call 0x1C181E0

Method: System.Reflection.MethodInfo GetMethodInfo(System.Type type, System.String methodName)

Disassembly:
	0x0329DF50 MOV X2, X31
	0x0329DF54 BL 0x32CE114
	0x0329DF58 LDR X8, [X19 + 0x58]
	0x0329DF5C TBZ X0, 0x0, 0x329DF94
	0x0329DF60 CBNZ X8, 0x329DF94
	0x0329DF64 LDR X0, [X19 + 0x40]
	0x0329DF68 CBZ X0, 0x329DFA0
	0x0329DF6C LDR X8, [X0]
	0x0329DF70 LDP X9, X1, [X8 + 0x1B8]
	0x0329DF74 BLR X9
	0x0329DF78 CBZ X0, 0x329DFA0
	0x0329DF7C LDR X8, [X0]
	0x0329DF80 LDR X9, [X8 + 0x2D8]
	0x0329DF84 LDR X1, [X8 + 0x2E0]
	0x0329DF88 BLR X9
	0x0329DF8C MOV X8, X0
	0x0329DF90 STR X0, [X19 + 0x58]
	0x0329DF94 MOV X0, X8
	0x0329DF98 LDP X30, X19, [X31], #0x10
	0x0329DF9C RET
	0x0329DFA0 BL 0x1C16F20
	0x0329DFA4 LDR X0, [X0 + 0x30]
	0x0329DFA8 RET
	0x0329DFAC STR X1, [X0 + 0x30]
	0x0329DFB0 RET
	0x0329DFB4 LDR X0, [X0 + 0x30]
	0x0329DFB8 RET
	0x0329DFBC STR X1, [X0 + 0x30]
	0x0329DFC0 RET
	0x0329DFC4 STR X30, [X31 - 0x10]!
	0x0329DFC8 LDR X8, [X0 + 0x18]
	0x0329DFCC CBZ X8, 0x329DFEC
	0x0329DFD0 LDR W9, [X8 + 0x18]
	0x0329DFD4 CMP W9, W1
	0x0329DFD8 B.LS 0x329DFF0
	0x0329DFDC ADD X8, X8, W1, 0x3, SXTW
	0x0329DFE0 LDR X0, [X8 + 0x20]
	0x0329DFE4 LDR X30, [X31], #0x10
	0x0329DFE8 RET
	0x0329DFEC BL 0x1C16F20
	0x0329DFF0 BL 0x1C16F28
	0x0329DFF4 LDR X0, [X0 + 0x38]
	0x0329DFF8 RET
	0x0329DFFC STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X0, 0
	006 JumpIfEqual {25}
	007 Move X2, X31
	008 Move X20, X1
	009 Move X19, X0
	010 Call Type.GetMethod, X0, X1
	011 Move X1, X31
	012 Move X2, X31
	013 Move X21, X0
	014 Call MethodInfo.op_Equality, X0, X1
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {26}
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X0, X21
	022 Move X30, [X31+32]
	023 Move X21, [X31+40]
	024 Return X0
	025 Call 0x1C17F20
	026 Move X0, 0xE88000
	027 Move X0, [X0+2472]
	028 Call 0x1C17D08
	029 Move X1, X20
	030 Move X2, X19
	031 Move X3, X31
	032 Call String.Format, X0, X1, X2
	033 Move X19, X0
	034 Move X0, 0xE5F000
	035 Move X0, [X0+1400]
	036 Call 0x1C17D08
	037 Call 0x1C17F10
	038 Move X20, X0
	039 Move X0, 0xE60000
	040 Move X0, [X0+3632]
	041 Call 0x1C17D08
	042 Move X2, X0
	043 Move X0, X20
	044 Move X1, X19
	045 Move X3, X31
	046 Call ArgumentException..ctor, X0, X1, X2
	047 Move X0, 0xE88000
	048 Move X0, [X0+2480]
	049 Call 0x1C17D08
	050 Move X1, X0
	051 Move X0, X20
	052 Call 0x1C17DEC

Method: System.Void .ctor(System.Type type, System.String methodName, System.Object[] in_args)

Disassembly:
	0x0329E000 STP X20, X19, [X31 + 0x10]
	0x0329E004 ADRP X20, 0x113E000
	0x0329E008 LDRB W8, [X20 + 0x748]
	0x0329E00C MOV X19, X0
	0x0329E010 TBNZ X8, 0x0, 0x329E028
	0x0329E014 ADRP X0, 0xE86000
	0x0329E018 LDR X0, [X0 + 0x998]
	0x0329E01C BL 0x1C16CF4
	0x0329E020 MOVZ W8, 0x1
	0x0329E024 STRB W8, [X20 + 0x748]
	0x0329E028 LDR X0, [X19 + 0x10]
	0x0329E02C CBNZ X0, 0x329E084
	0x0329E030 LDR X8, [X19 + 0x18]
	0x0329E034 CBZ X8, 0x329E080

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X0
	005 Move X0, X1
	006 Move X1, X2
	007 Move X19, X3
	008 Call MonoMethodMessage.GetMethodInfo, X0, X1
	009 Move X1, X0
	010 Move X0, X20
	011 Move X2, X19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X3, X31
	015 Move X30, [X31+32]
	016 Call MonoMethodMessage..ctor, X0, X1, X2, X3
	017 Return 

Method: System.Collections.IDictionary get_Properties()

Disassembly:
	0x0329E038 LDR X20, [X19 + 0x70]
	0x0329E03C CBNZ X20, 0x329E06C
	0x0329E040 ADRP X8, 0xE86000
	0x0329E044 LDR X21, [X19 + 0x40]
	0x0329E048 LDR X8, [X8 + 0x998]
	0x0329E04C LDR X0, [X8]
	0x0329E050 BL 0x1C16F10
	0x0329E054 MOVZ W2, 0x1
	0x0329E058 MOV X1, X21
	0x0329E05C MOV X20, X0
	0x0329E060 BL 0x32929E8
	0x0329E064 STR X20, [X19 + 0x70]
	0x0329E068 CBZ X20, 0x329E090
	0x0329E06C LDR X1, [X19 + 0x18]
	0x0329E070 MOV X0, X20
	0x0329E074 BL 0x3292B9C
	0x0329E078 STR X0, [X19 + 0x10]
	0x0329E07C B 0x329E084
	0x0329E080 MOV X0, X31
	0x0329E084 LDP X20, X19, [X31 + 0x10]
	0x0329E088 LDP X30, X21, [X31], #0x20
	0x0329E08C RET
	0x0329E090 BL 0x1C16F20
	0x0329E094 LDR X0, [X0 + 0x28]
	0x0329E098 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x113F000
	005 Move W8, [X20+1849]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE87000
	012 Move X0, [X0+2408]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1849], W8
	016 Move X20, [X19+96]
	017 Compare X20, 0
	018 JumpIfNotEqual {27}
	019 Move X8, 0xE87000
	020 Move X8, [X8+2408]
	021 Move X0, [X8]
	022 Call 0x1C17F10
	023 Move X1, X19
	024 Move X20, X0
	025 Call MCMDictionary..ctor, X0, X1
	026 Move [X19+96], X20
	027 Move X0, X20
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Return X0

Method: System.Int32 get_ArgCount()

Disassembly:
	0x0329E09C LDR X0, [X0 + 0x68]
	0x0329E0A0 RET
	0x0329E0A4 STR X1, [X0 + 0x68]
	0x0329E0A8 RET
	0x0329E0AC STP X30, X21, [X31 - 0x20]!
	0x0329E0B0 STP X20, X19, [X31 + 0x10]
	0x0329E0B4 ADRP X21, 0x113E000
	0x0329E0B8 ADRP X20, 0xE86000
	0x0329E0BC LDRB W8, [X21 + 0x749]
	0x0329E0C0 LDR X20, [X20 + 0x5D8]
	0x0329E0C4 MOV X19, X1
	0x0329E0C8 TBNZ X8, 0x0, 0x329E0F8
	0x0329E0CC ADRP X0, 0xE86000
	0x0329E0D0 LDR X0, [X0 + 0x5D8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call MonoMethodMessage.get_CallType, X0
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move TEMP, 0
	007 Not TEMP
	008 Move W0, TEMP
	009 Move X8, [X19+24]
	010 Compare X8, 0
	011 JumpIfEqual {13}
	012 Move W0, [X8+24]
	013 Move W0, W31
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Return X0

Method: System.Object[] get_Args()

Disassembly:
	0x0329E150 CBZ X0, 0x329E1B0
	0x0329E154 ADRP X9, 0xE86000

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Runtime.Remoting.Messaging.LogicalCallContext get_LogicalCallContext()

Disassembly:
	0x0329E158 LDR X9, [X9 + 0x298]
	0x0329E15C LDR X8, [X0]

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Void set_LogicalCallContext(System.Runtime.Remoting.Messaging.LogicalCallContext value)

Disassembly:
	0x0329E160 LDR X1, [X9]
	0x0329E164 LDRB W10, [X8 + 0x130]

ISIL:
	001 Move [X0+48], X1
	002 Return 

Method: System.Reflection.MethodBase get_MethodBase()

Disassembly:
	0x0329E168 LDRB W9, [X1 + 0x130]
	0x0329E16C CMP W10, W9

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.String get_MethodName()

Disassembly:
	0x0329E170 B.CC 0x329E1AC
	0x0329E174 LDR X10, [X8 + 0xC8]
	0x0329E178 ADD X9, X10, X9, 0x3, LSL
	0x0329E17C LDUR X9, [X9 - 0x8]
	0x0329E180 CMP X9, X1
	0x0329E184 B.NE 0x329E1AC
	0x0329E188 LDP X3, X2, [X8 + 0x198]
	0x0329E18C MOV X1, X19
	0x0329E190 LDP X20, X19, [X31 + 0x10]
	0x0329E194 LDP X30, X21, [X31], #0x20
	0x0329E198 BR X3
	0x0329E19C MOV X0, X31
	0x0329E1A0 LDP X20, X19, [X31 + 0x10]
	0x0329E1A4 LDP X30, X21, [X31], #0x20
	0x0329E1A8 B 0x328F770
	0x0329E1AC BL 0x1C171E0
	0x0329E1B0 BL 0x1C16F20
	0x0329E1B4 STR X30, [X31 - 0x30]!
	0x0329E1B8 STP X22, X21, [X31 + 0x10]
	0x0329E1BC STP X20, X19, [X31 + 0x20]
	0x0329E1C0 ADRP X21, 0x113E000
	0x0329E1C4 ADRP X22, 0xE85000
	0x0329E1C8 LDRB W8, [X21 + 0x74A]
	0x0329E1CC LDR X22, [X22 + 0xE68]
	0x0329E1D0 MOV X19, X2
	0x0329E1D4 MOV X20, X1
	0x0329E1D8 TBNZ X8, 0x0, 0x329E1FC
	0x0329E1DC ADRP X0, 0xE85000
	0x0329E1E0 LDR X0, [X0 + 0xE68]
	0x0329E1E4 BL 0x1C16CF4
	0x0329E1E8 ADRP X0, 0xE86000
	0x0329E1EC LDR X0, [X0 + 0x298]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x113F000
	005 Move W8, [X20+1850]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE58000
	012 Move X0, [X0+632]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1850], W8
	016 Move X1, [X19+16]
	017 Move X0, X31
	018 Move X2, X31
	019 Call MethodInfo.op_Equality, X0, X1
	020 Move TEMP, X0
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfNotEqual {33}
	024 Move X8, 0xE58000
	025 Move X8, [X8+632]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X8, [X8]
	029 Move X8, [X8+184]
	030 Move X0, [X8]
	031 Move X30, [X31+32]
	032 Return X0
	033 Move X0, [X19+16]
	034 Compare X0, 0
	035 JumpIfEqual {43}
	036 Move X8, [X0]
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X2, [X8+424]
	040 Move X1, [X8+432]
	041 Move X30, [X31+32]
	042 CallNoReturn X2
	043 Call 0x1C17F20

Method: System.Object get_MethodSignature()

Disassembly:
	0x0329E1F0 BL 0x1C16CF4
	0x0329E1F4 MOVZ W8, 0x1
	0x0329E1F8 STRB W8, [X21 + 0x74A]
	0x0329E1FC LDR X0, [X22]
	0x0329E200 LDR W8, [X0 + 0xE0]
	0x0329E204 CBNZ W8, 0x329E20C
	0x0329E208 BL 0x1C16DFC
	0x0329E20C MOV X0, X20
	0x0329E210 MOV X1, X31
	0x0329E214 BL 0x3282518
	0x0329E218 CBZ X0, 0x329E270
	0x0329E21C ADRP X9, 0xE86000
	0x0329E220 LDR X9, [X9 + 0x298]
	0x0329E224 LDR X8, [X0]
	0x0329E228 LDR X1, [X9]
	0x0329E22C LDRB W10, [X8 + 0x130]
	0x0329E230 LDRB W9, [X1 + 0x130]
	0x0329E234 CMP W10, W9
	0x0329E238 B.CC 0x329E26C
	0x0329E23C LDR X10, [X8 + 0xC8]
	0x0329E240 ADD X9, X10, X9, 0x3, LSL
	0x0329E244 LDUR X9, [X9 - 0x8]
	0x0329E248 CMP X9, X1
	0x0329E24C B.NE 0x329E26C
	0x0329E250 LDP X4, X3, [X8 + 0x1A8]
	0x0329E254 MOV X1, X20
	0x0329E258 MOV X2, X19
	0x0329E25C LDP X20, X19, [X31 + 0x20]
	0x0329E260 LDP X22, X21, [X31 + 0x10]
	0x0329E264 LDR X30, [X31], #0x30
	0x0329E268 BR X4
	0x0329E26C BL 0x1C171E0
	0x0329E270 BL 0x1C16F20
	0x0329E274 MOV X1, X31
	0x0329E278 B 0x33BDD8C
	0x0329E27C STR X30, [X31 - 0x20]!
	0x0329E280 STP X20, X19, [X31 + 0x10]
	0x0329E284 MOV X19, X1
	0x0329E288 MOV X1, X31
	0x0329E28C MOV X20, X0
	0x0329E290 BL 0x33BDD8C
	0x0329E294 STR X19, [X20 + 0x10]
	0x0329E298 LDP X20, X19, [X31 + 0x10]
	0x0329E29C LDR X30, [X31], #0x20
	0x0329E2A0 RET
	0x0329E2A4 STR X30, [X31 - 0x30]!
	0x0329E2A8 STP X22, X21, [X31 + 0x10]
	0x0329E2AC STP X20, X19, [X31 + 0x20]
	0x0329E2B0 ADRP X20, 0x113E000
	0x0329E2B4 ADRP X22, 0xE85000
	0x0329E2B8 LDRB W8, [X20 + 0x74B]
	0x0329E2BC LDR X22, [X22 + 0xE68]
	0x0329E2C0 MOV X19, X1
	0x0329E2C4 MOV X21, X0
	0x0329E2C8 TBNZ X8, 0x0, 0x329E2F8
	0x0329E2CC ADRP X0, 0xE86000
	0x0329E2D0 LDR X0, [X0 + 0x3B8]
	0x0329E2D4 BL 0x1C16CF4
	0x0329E2D8 ADRP X0, 0xE85000
	0x0329E2DC LDR X0, [X0 + 0xE68]
	0x0329E2E0 BL 0x1C16CF4
	0x0329E2E4 ADRP X0, 0xE86000
	0x0329E2E8 LDR X0, [X0 + 0x298]
	0x0329E2EC BL 0x1C16CF4
	0x0329E2F0 MOVZ W8, 0x1
	0x0329E2F4 STRB W8, [X20 + 0x74B]
	0x0329E2F8 LDR X0, [X22]
	0x0329E2FC LDR W8, [X0 + 0xE0]
	0x0329E300 CBNZ W8, 0x329E308
	0x0329E304 BL 0x1C16DFC
	0x0329E308 MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x113F000
	008 Move W8, [X20+1851]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE5E000
	015 Move X0, [X0+3168]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1851], W8
	019 Move X21, [X19+112]
	020 Compare X21, 0
	021 JumpIfNotEqual {73}
	022 Move X0, [X19+16]
	023 Compare X0, 0
	024 JumpIfEqual {81}
	025 Move X8, [X0]
	026 Move X9, [X8+584]
	027 Move X1, [X8+592]
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Compare X0, 0
	030 JumpIfEqual {81}
	031 Move X8, 0xE5E000
	032 Move X8, [X8+3168]
	033 Move X20, X0
	034 Move W1, [X20+24]
	035 Move X0, [X8]
	036 Call 0x1C17D6C
	037 Move [X19+112], X0
	038 Move W8, [X20+24]
	039 Move X21, X0
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move W23, 4
	042 Move X0, [X20]
	043 Compare X0, 0
	044 JumpIfEqual {81}
	045 Move X8, [X0]
	046 Move X9, [X8+472]
	047 Move X1, [X8+480]
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Compare X21, 0
	050 JumpIfEqual {81}
	051 Move X22, X0
	052 Compare X0, 0
	053 JumpIfEqual {60}
	054 Move X8, [X21]
	055 Move X0, X22
	056 Move X1, [X8+64]
	057 Call 0x1C17E00
	058 Compare X0, 0
	059 JumpIfEqual {82}
	060 Move W8, [X21+24]
	061 Subtract X9, X23, 4
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move [X21], X22
	064 Move W8, [X20+24]
	065 Subtract W9, W23, 3
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X21, [X19+112]
	068 Add X23, X23, 1
	069 Subtract W9, W23, 4
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Call 0x1C17F28
	072 Move X21, [X19+112]
	073 Move X0, X21
	074 Move X20, [X31+32]
	075 Move X19, [X31+40]
	076 Move X22, [X31+16]
	077 Move X21, [X31+24]
	078 Move X30, [X31+48]
	079 Move X23, [X31+56]
	080 Return X0
	081 Call 0x1C17F20
	082 Call 0x1C17F44
	083 Move X1, X31
	084 Call 0x1C17DEC

Method: System.String get_TypeName()

Disassembly:
	0x0329E30C MOV X1, X31
	0x0329E310 BL 0x3282518
	0x0329E314 CBZ X0, 0x329E40C
	0x0329E318 ADRP X9, 0xE86000
	0x0329E31C LDR X9, [X9 + 0x298]
	0x0329E320 LDR X8, [X0]
	0x0329E324 MOV X20, X0
	0x0329E328 LDR X1, [X9]
	0x0329E32C LDRB W10, [X8 + 0x130]
	0x0329E330 LDRB W9, [X1 + 0x130]
	0x0329E334 CMP W10, W9
	0x0329E338 B.CC 0x329E410
	0x0329E33C LDR X8, [X8 + 0xC8]
	0x0329E340 ADD X8, X8, X9, 0x3, LSL
	0x0329E344 LDUR X8, [X8 - 0x8]
	0x0329E348 CMP X8, X1
	0x0329E34C B.NE 0x329E410
	0x0329E350 MOVZ W1, 0x1
	0x0329E354 MOV X0, X20
	0x0329E358 MOV X2, X19
	0x0329E35C MOV W3, W31
	0x0329E360 MOV W4, W31
	0x0329E364 MOV X5, X31
	0x0329E368 BL 0x3273AB4
	0x0329E36C LDR X21, [X21 + 0x10]
	0x0329E370 CBZ X21, 0x329E40C
	0x0329E374 ADRP X10, 0xE86000
	0x0329E378 LDR X8, [X21]
	0x0329E37C LDR X10, [X10 + 0x3B8]
	0x0329E380 LDRH W9, [X8 + 0x12E]
	0x0329E384 LDR X1, [X10]
	0x0329E388 CBZ X9, 0x329E3AC
	0x0329E38C LDR X10, [X8 + 0xB0]
	0x0329E390 ADD X10, X10, 0x8
	0x0329E394 LDUR X11, [X10 - 0x8]
	0x0329E398 CMP X11, X1
	0x0329E39C B.EQ 0x329E3BC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x113F000
	005 Move W8, [X20+1852]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE58000
	012 Move X0, [X0+632]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1852], W8
	016 Move X1, [X19+16]
	017 Move X0, X31
	018 Move X2, X31
	019 Call MethodInfo.op_Equality, X0, X1
	020 Move TEMP, X0
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfNotEqual {33}
	024 Move X8, 0xE58000
	025 Move X8, [X8+632]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X8, [X8]
	029 Move X8, [X8+184]
	030 Move X0, [X8]
	031 Move X30, [X31+32]
	032 Return X0
	033 Move X0, [X19+16]
	034 Compare X0, 0
	035 JumpIfEqual {49}
	036 Move X8, [X0]
	037 Move X9, [X8+440]
	038 Move X1, [X8+448]
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Compare X0, 0
	041 JumpIfEqual {49}
	042 Move X8, [X0]
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X2, [X8+728]
	046 Move X1, [X8+736]
	047 Move X30, [X31+32]
	048 CallNoReturn X2
	049 Call 0x1C17F20

Method: System.String get_Uri()

Disassembly:
	0x0329E3A0 SUBS X9, X9, 0x1
	0x0329E3A4 ADD X10, X10, 0x10

ISIL:
	001 Move X0, [X0+88]
	002 Return X0

Method: System.Void set_Uri(System.String value)

Disassembly:
	0x0329E3A8 B.NE 0x329E394
	0x0329E3AC MOV X0, X21

ISIL:
	001 Move [X0+88], X1
	002 Return 

Method: System.Object GetArg(System.Int32 arg_num)

Disassembly:
	0x0329E3B0 MOV W2, W31
	0x0329E3B4 BL 0x1C5C788
	0x0329E3B8 B 0x329E3C8
	0x0329E3BC LDRSW X9, [X10]
	0x0329E3C0 ADD X8, X8, X9, 0x4, LSL
	0x0329E3C4 ADD X0, X8, 0x138
	0x0329E3C8 LDP X8, X2, [X0]
	0x0329E3CC MOV X0, X21
	0x0329E3D0 MOV X1, X19
	0x0329E3D4 BLR X8
	0x0329E3D8 MOV X21, X0
	0x0329E3DC MOV X0, X20
	0x0329E3E0 MOV W1, W31

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+24]
	003 Compare X8, 0
	004 JumpIfEqual {9}
	005 Move W9, [X8+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Add X8, X8, W1
	008 Move X0, [X8+32]
	009 Move X0, X31
	010 Move X30, [X31+16]
	011 Return X0
	012 Call 0x1C17F28

Method: System.Exception get_Exception()

Disassembly:
	0x0329E3E4 MOV X2, X19
	0x0329E3E8 MOV W3, W31

ISIL:
	001 Move X0, [X0+64]
	002 Return X0

Method: System.Int32 get_OutArgCount()

Disassembly:
	0x0329E3EC MOV W4, W31
	0x0329E3F0 MOV X5, X31
	0x0329E3F4 BL 0x3273AB4
	0x0329E3F8 MOV X0, X21
	0x0329E3FC LDP X20, X19, [X31 + 0x20]
	0x0329E400 LDP X22, X21, [X31 + 0x10]
	0x0329E404 LDR X30, [X31], #0x30
	0x0329E408 RET
	0x0329E40C BL 0x1C16F20
	0x0329E410 MOV X0, X20
	0x0329E414 BL 0x1C171E0
	0x0329E418 STP X30, X23, [X31 - 0x30]!
	0x0329E41C STP X22, X21, [X31 + 0x10]
	0x0329E420 STP X20, X19, [X31 + 0x20]
	0x0329E424 ADRP X21, 0x113E000
	0x0329E428 ADRP X23, 0xE85000
	0x0329E42C LDRB W8, [X21 + 0x74C]
	0x0329E430 LDR X23, [X23 + 0xE68]
	0x0329E434 MOV X20, X2
	0x0329E438 MOV X19, X1
	0x0329E43C MOV X22, X0
	0x0329E440 TBNZ X8, 0x0, 0x329E47C
	0x0329E444 ADRP X0, 0xE86000
	0x0329E448 LDR X0, [X0 + 0x3B8]
	0x0329E44C BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+24]
	003 Compare X8, 0
	004 JumpIfEqual {27}
	005 Move X10, [X0+40]
	006 Compare X10, 0
	007 JumpIfEqual {31}
	008 Move W8, [X10+24]
	009 Move X9, X8
	010 ShiftRight X9, 32
	011 And X9, X9, 0x7FFFFFFF
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move W0, W31
	014 Move X9, W8
	015 Add X10, X10, 32
	016 Compare X8, 0
	017 JumpIfEqual {30}
	018 Move W11, [X10+1]
	019 Subtract X9, X9, 1
	020 Subtract X8, X8, 1
	021 Move W11, W11
	022 ShiftRight W11, 1
	023 And W11, W11, 1
	024 Add W0, W0, W11
	025 Compare X9, 0
	026 JumpIfNotEqual {16}
	027 Move W0, W31
	028 Move X30, [X31+16]
	029 Return X0
	030 Call 0x1C17F28
	031 Call 0x1C17F20

Method: System.Object[] get_OutArgs()

Disassembly:
	0x0329E450 ADRP X0, 0xE85000
	0x0329E454 LDR X0, [X0 + 0xE68]
	0x0329E458 BL 0x1C16CF4
	0x0329E45C ADRP X0, 0xE86000
	0x0329E460 LDR X0, [X0 + 0x298]
	0x0329E464 BL 0x1C16CF4
	0x0329E468 ADRP X0, 0xE86000
	0x0329E46C LDR X0, [X0 + 0xA00]
	0x0329E470 BL 0x1C16CF4
	0x0329E474 MOVZ W8, 0x1
	0x0329E478 STRB W8, [X21 + 0x74C]
	0x0329E47C LDR X0, [X23]
	0x0329E480 LDR W8, [X0 + 0xE0]
	0x0329E484 CBNZ W8, 0x329E48C
	0x0329E488 BL 0x1C16DFC
	0x0329E48C MOV X0, X19
	0x0329E490 MOV X1, X31
	0x0329E494 BL 0x3282518
	0x0329E498 CBZ X0, 0x329E5D4
	0x0329E49C ADRP X9, 0xE86000
	0x0329E4A0 LDR X9, [X9 + 0x298]
	0x0329E4A4 LDR X8, [X0]
	0x0329E4A8 MOV X21, X0
	0x0329E4AC LDR X1, [X9]
	0x0329E4B0 LDRB W10, [X8 + 0x130]
	0x0329E4B4 LDRB W9, [X1 + 0x130]
	0x0329E4B8 CMP W10, W9
	0x0329E4BC B.CC 0x329E5D8
	0x0329E4C0 LDR X8, [X8 + 0xC8]
	0x0329E4C4 ADD X8, X8, X9, 0x3, LSL
	0x0329E4C8 LDUR X8, [X8 - 0x8]
	0x0329E4CC CMP X8, X1
	0x0329E4D0 B.NE 0x329E5D8
	0x0329E4D4 MOV X0, X21
	0x0329E4D8 MOV X1, X31
	0x0329E4DC BL 0x3273368
	0x0329E4E0 TBZ X0, 0x0, 0x329E528
	0x0329E4E4 MOVZ W1, 0x1
	0x0329E4E8 MOVZ W4, 0x1
	0x0329E4EC MOV X0, X21
	0x0329E4F0 MOV X2, X19
	0x0329E4F4 MOV W3, W31
	0x0329E4F8 MOV X5, X31
	0x0329E4FC BL 0x3273AB4
	0x0329E500 CBZ X20, 0x329E528
	0x0329E504 ADRP X8, 0xE86000
	0x0329E508 LDR X8, [X8 + 0xA00]
	0x0329E50C LDR X0, [X8]
	0x0329E510 BL 0x1C16F10
	0x0329E514 MOV X1, X31
	0x0329E518 MOV X23, X0
	0x0329E51C BL 0x33BDD8C
	0x0329E520 STP X20, X21, [X23 + 0x10]
	0x0329E524 MOV X20, X23
	0x0329E528 LDR X22, [X22 + 0x10]
	0x0329E52C CBZ X22, 0x329E5D4
	0x0329E530 ADRP X10, 0xE86000
	0x0329E534 LDR X8, [X22]
	0x0329E538 LDR X10, [X10 + 0x3B8]
	0x0329E53C LDRH W9, [X8 + 0x12E]
	0x0329E540 LDR X1, [X10]
	0x0329E544 CBZ X9, 0x329E568
	0x0329E548 LDR X10, [X8 + 0xB0]
	0x0329E54C ADD X10, X10, 0x8
	0x0329E550 LDUR X11, [X10 - 0x8]
	0x0329E554 CMP X11, X1
	0x0329E558 B.EQ 0x329E578
	0x0329E55C SUBS X9, X9, 0x1
	0x0329E560 ADD X10, X10, 0x10
	0x0329E564 B.NE 0x329E550
	0x0329E568 MOVZ W2, 0x1
	0x0329E56C MOV X0, X22
	0x0329E570 BL 0x1C5C788
	0x0329E574 B 0x329E588

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x113F000
	010 Move W8, [X20+1853]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xE56000
	017 Move X0, [X0+2512]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+1853], W8
	021 Move X8, [X19+24]
	022 Compare X8, 0
	023 JumpIfEqual {73}
	024 Move X20, 0xE56000
	025 Move X20, [X20+2512]
	026 Move X0, X19
	027 Call MonoMethodMessage.get_OutArgCount, X0
	028 Move X8, [X20]
	029 Move W1, W0
	030 Move X0, X8
	031 Call 0x1C17D6C
	032 Move X22, [X19+40]
	033 Compare X22, 0
	034 JumpIfEqual {85}
	035 Move X8, [X22+24]
	036 Move X20, X0
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move W24, W31
	039 Move X23, X31
	040 And X8, X8, 0
	041 Add X25, X22, 32
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move W8, [X25]
	044 Move TEMP, X8
	045 And TEMP, TEMP, 2
	046 Compare TEMP, 2
	047 JumpIfNotEqual {70}
	048 Move X8, [X19+24]
	049 Compare X8, 0
	050 JumpIfEqual {85}
	051 Move W9, [X8+24]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Compare X20, 0
	054 JumpIfEqual {85}
	055 Add X8, X8, X23
	056 Move X21, [X8+32]
	057 Compare X21, 0
	058 JumpIfEqual {65}
	059 Move X8, [X20]
	060 Move X0, X21
	061 Move X1, [X8+64]
	062 Call 0x1C17E00
	063 Compare X0, 0
	064 JumpIfEqual {86}
	065 Move W8, [X20+24]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Add X8, X20, W24
	068 Add W24, W24, 1
	069 Move [X8+32], X21
	070 Move W8, [X22+24]
	071 Add X23, X23, 1
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X20, X31
	074 Move X0, X20
	075 Move X20, [X31+48]
	076 Move X19, [X31+56]
	077 Move X22, [X31+32]
	078 Move X21, [X31+40]
	079 Move X24, [X31+16]
	080 Move X23, [X31+24]
	081 Move X30, [X31+64]
	082 Move X25, [X31+72]
	083 Return X0
	084 Call 0x1C17F28
	085 Call 0x1C17F20
	086 Call 0x1C17F44
	087 Move X1, X31
	088 Call 0x1C17DEC

Method: System.Object get_ReturnValue()

Disassembly:
	0x0329E578 LDR W9, [X10]
	0x0329E57C ADD W9, W9, 0x1

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Runtime.Remoting.Identity System.Runtime.Remoting.Messaging.IInternalMessage.get_TargetIdentity()

Disassembly:
	0x0329E580 ADD X8, X8, W9, 0x4, SXTW
	0x0329E584 ADD X0, X8, 0x138

ISIL:
	001 Move X0, [X0+104]
	002 Return X0

Method: System.Void System.Runtime.Remoting.Messaging.IInternalMessage.set_TargetIdentity(System.Runtime.Remoting.Identity value)

Disassembly:
	0x0329E588 LDP X8, X3, [X0]
	0x0329E58C MOV X0, X22

ISIL:
	001 Move [X0+104], X1
	002 Return 

Method: System.Runtime.Remoting.Messaging.AsyncResult get_AsyncResult()

Disassembly:
	0x0329E590 MOV X1, X19
	0x0329E594 MOV X2, X20

ISIL:
	001 Move X0, [X0+72]
	002 Return X0

Method: System.Runtime.Remoting.Messaging.CallType get_CallType()

Disassembly:
	0x0329E0D4 BL 0x1C16CF4
	0x0329E0D8 ADRP X0, 0xE85000
	0x0329E0DC LDR X0, [X0 + 0xE68]
	0x0329E0E0 BL 0x1C16CF4
	0x0329E0E4 ADRP X0, 0xE86000
	0x0329E0E8 LDR X0, [X0 + 0x298]
	0x0329E0EC BL 0x1C16CF4
	0x0329E0F0 MOVZ W8, 0x1
	0x0329E0F4 STRB W8, [X21 + 0x749]
	0x0329E0F8 LDR X1, [X20]
	0x0329E0FC MOV X0, X19
	0x0329E100 BL 0x1C16E00
	0x0329E104 CBZ X0, 0x329E12C
	0x0329E108 CBZ X19, 0x329E19C
	0x0329E10C LDR X20, [X20]
	0x0329E110 MOV X0, X19
	0x0329E114 MOV X1, X20
	0x0329E118 BL 0x1C16E00
	0x0329E11C CBNZ X0, 0x329E1A0
	0x0329E120 MOV X0, X19
	0x0329E124 MOV X1, X20
	0x0329E128 BL 0x1C171E0
	0x0329E12C ADRP X8, 0xE85000
	0x0329E130 LDR X8, [X8 + 0xE68]
	0x0329E134 LDR X0, [X8]
	0x0329E138 LDR W8, [X0 + 0xE0]
	0x0329E13C CBNZ W8, 0x329E144
	0x0329E140 BL 0x1C16DFC
	0x0329E144 MOV X0, X19
	0x0329E148 MOV X1, X31
	0x0329E14C BL 0x3282518

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x113F000
	005 Move W8, [X20+1854]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE86000
	012 Move X0, [X0+3688]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1854], W8
	016 Move W0, [X19+80]
	017 Compare W0, 0
	018 JumpIfNotEqual {37}
	019 Move X8, 0xE86000
	020 Move X8, [X8+3688]
	021 Move X20, [X19+16]
	022 Move X0, [X8]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X20
	028 Move X1, X31
	029 Call RemotingServices.IsOneWay, X0
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {36}
	034 Move W0, 3
	035 Move [X19+80], W0
	036 Move W0, [X19+80]
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Return X0

Method: System.Boolean NeedsOutProcessing(out System.Int32 outCount)

Disassembly:
	0x0329E598 BLR X8
	0x0329E59C MOV X22, X0
	0x0329E5A0 CBNZ X20, 0x329E5C0
	0x0329E5A4 MOVZ W3, 0x1
	0x0329E5A8 MOVZ W4, 0x1
	0x0329E5AC MOV X0, X21
	0x0329E5B0 MOV W1, W31
	0x0329E5B4 MOV X2, X19
	0x0329E5B8 MOV X5, X31
	0x0329E5BC BL 0x3273AB4
	0x0329E5C0 MOV X0, X22
	0x0329E5C4 LDP X20, X19, [X31 + 0x20]
	0x0329E5C8 LDP X22, X21, [X31 + 0x10]
	0x0329E5CC LDP X30, X23, [X31], #0x30
	0x0329E5D0 RET
	0x0329E5D4 BL 0x1C16F20
	0x0329E5D8 MOV X0, X21
	0x0329E5DC BL 0x1C171E0
	0x0329E5E0 STP X30, X21, [X31 - 0x20]!
	0x0329E5E4 STP X20, X19, [X31 + 0x10]
	0x0329E5E8 MOV X20, X1
	0x0329E5EC MOV X1, X31
	0x0329E5F0 MOV X19, X2
	0x0329E5F4 MOV X21, X0
	0x0329E5F8 BL 0x33BDD8C
	0x0329E5FC STP X19, X20, [X21 + 0x10]
	0x0329E600 LDP X20, X19, [X31 + 0x10]
	0x0329E604 LDP X30, X21, [X31], #0x20
	0x0329E608 RET
	0x0329E60C STP X30, X21, [X31 - 0x20]!
	0x0329E610 STP X20, X19, [X31 + 0x10]
	0x0329E614 ADRP X21, 0x113E000
	0x0329E618 LDRB W8, [X21 + 0x74D]
	0x0329E61C MOV X19, X1
	0x0329E620 MOV X20, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X1], W31
	003 Move X11, [X0+40]
	004 Compare X11, 0
	005 JumpIfEqual {37}
	006 Move X9, [X11+24]
	007 Move W8, W31
	008 NotImplemented "Instruction CMP not yet implemented."
	009 And X10, X9, 0
	010 Move W9, W8
	011 Compare X10, 0
	012 JumpIfEqual {30}
	013 Move W9, W31
	014 Move W8, W31
	015 Add X11, X11, 32
	016 Compare X10, 0
	017 JumpIfEqual {36}
	018 Move W12, [X11]
	019 Move TEMP, X12
	020 And TEMP, TEMP, 2
	021 Compare TEMP, 2
	022 JumpIfEqual {25}
	023 And W12, W12, 4
	024 Or W9, W9, W12
	025 Add W8, W8, 1
	026 Move [X1], W8
	027 Subtract X10, X10, 1
	028 Add X11, X11, 1
	029 Move W9, W8
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSET not yet implemented."
	032 Or W8, W9, W8
	033 And W0, W8, 1
	034 Move X30, [X31+16]
	035 Return X0
	036 Call 0x1C17F28
	037 Call 0x1C17F20

