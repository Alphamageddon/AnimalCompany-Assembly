Type: System.Runtime.Remoting.Messaging.MethodCall

Method: System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x03297614 ADD X10, X10, 0x10
	0x03297618 B.NE 0x3297604
	0x0329761C MOV X0, X20
	0x03297620 MOV W2, W31
	0x03297624 BL 0x1C5C788
	0x03297628 B 0x3297638
	0x0329762C LDRSW X9, [X10]
	0x03297630 ADD X8, X8, X9, 0x4, LSL
	0x03297634 ADD X0, X8, 0x138
	0x03297638 LDP X8, X1, [X0]
	0x0329763C MOV X0, X20
	0x03297640 BLR X8
	0x03297644 CBNZ X19, 0x3297650
	0x03297648 LDR X0, [X31 + 0x8]
	0x0329764C BL 0x1D2C690
	0x03297650 MOV X0, X19
	0x03297654 BL 0x1C16F18
	0x03297658 BL 0x1990590
	0x0329765C STP X30, X19, [X31 - 0x10]!
	0x03297660 MOV X19, X0
	0x03297664 LDR X0, [X0 + 0x58]
	0x03297668 CBNZ X0, 0x3297684
	0x0329766C LDR X8, [X19]
	0x03297670 MOV X0, X19
	0x03297674 LDR X9, [X8 + 0x298]
	0x03297678 LDR X1, [X8 + 0x2A0]
	0x0329767C BLR X9
	0x03297680 LDR X0, [X19 + 0x58]
	0x03297684 LDP X30, X19, [X31], #0x10
	0x03297688 RET
	0x0329768C STP X30, X19, [X31 - 0x10]!
	0x03297690 MOV X19, X0
	0x03297694 LDR X0, [X0 + 0x58]
	0x03297698 CBNZ X0, 0x32976B4
	0x0329769C LDR X8, [X19]
	0x032976A0 MOV X0, X19
	0x032976A4 LDR X9, [X8 + 0x298]
	0x032976A8 LDR X1, [X8 + 0x2A0]
	0x032976AC BLR X9
	0x032976B0 LDR X0, [X19 + 0x58]
	0x032976B4 LDP X30, X19, [X31], #0x10
	0x032976B8 RET
	0x032976BC LDR X0, [X0 + 0x98]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X20, X1
	007 Move X1, X31
	008 Move X19, X0
	009 Call Object..ctor, X0
	010 Move X8, [X19]
	011 Move X0, X19
	012 Move X9, [X8+680]
	013 Move X1, [X8+688]
	014 NotImplemented "Instruction BLR not yet implemented."
	015 Compare X20, 0
	016 JumpIfEqual {50}
	017 Move X0, X20
	018 Move X1, X31
	019 Call SerializationInfo.GetEnumerator, X0
	020 Compare X0, 0
	021 JumpIfEqual {50}
	022 Move W9, [X0+40]
	023 Move W8, [X0+44]
	024 Move X20, X0
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W21, 1
	027 Add W8, W8, 1
	028 Move [X20+44], W8
	029 Add X8, X31, 8
	030 Move X0, X20
	031 Move [X20+48], W21
	032 Call SerializationInfoEnumerator.get_Current, X0
	033 Move X8, [X19]
	034 Move X1, [X31+8]
	035 Move X2, [X31+16]
	036 Move X0, X19
	037 Move X9, [X8+616]
	038 Move X3, [X8+624]
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move W9, [X20+40]
	041 Move W8, [X20+44]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move [X20+48], W31
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Add X31, X31, 64
	049 Return 
	050 Call 0x1C17F20

Method: System.Void .ctor(System.Runtime.Remoting.Messaging.CADMethodCallMessage msg)

Disassembly:
	0x03299F40 ADRP X20, 0xE5A000
	0x03299F44 LDRB W8, [X19 + 0x712]
	0x03299F48 LDR X20, [X20 + 0xAC8]
	0x03299F4C TBNZ X8, 0x0, 0x3299FB8
	0x03299F50 ADRP X0, 0xE8B000
	0x03299F54 LDR X0, [X0 + 0x968]
	0x03299F58 BL 0x1C16CF4
	0x03299F5C ADRP X0, 0xE5A000
	0x03299F60 LDR X0, [X0 + 0xAC8]
	0x03299F64 BL 0x1C16CF4
	0x03299F68 ADRP X0, 0xE8B000
	0x03299F6C LDR X0, [X0 + 0x8C0]
	0x03299F70 BL 0x1C16CF4
	0x03299F74 ADRP X0, 0xE8B000
	0x03299F78 LDR X0, [X0 + 0x8C8]
	0x03299F7C BL 0x1C16CF4
	0x03299F80 ADRP X0, 0xE8B000
	0x03299F84 LDR X0, [X0 + 0x8D0]
	0x03299F88 BL 0x1C16CF4
	0x03299F8C ADRP X0, 0xE81000
	0x03299F90 LDR X0, [X0 + 0x2E0]
	0x03299F94 BL 0x1C16CF4
	0x03299F98 ADRP X0, 0xE8B000
	0x03299F9C LDR X0, [X0 + 0x8D8]
	0x03299FA0 BL 0x1C16CF4
	0x03299FA4 ADRP X0, 0xE8B000
	0x03299FA8 LDR X0, [X0 + 0x8E0]
	0x03299FAC BL 0x1C16CF4
	0x03299FB0 MOVZ W8, 0x1
	0x03299FB4 STRB W8, [X19 + 0x712]
	0x03299FB8 LDR X0, [X20]
	0x03299FBC MOVZ W1, 0x6
	0x03299FC0 BL 0x1C16D6C
	0x03299FC4 CBZ X0, 0x329A07C
	0x03299FC8 LDR W8, [X0 + 0x18]
	0x03299FCC CBZ W8, 0x329A078
	0x03299FD0 ADRP X9, 0xE8B000
	0x03299FD4 LDR X9, [X9 + 0x8C8]
	0x03299FD8 CMP W8, 0x1
	0x03299FDC LDR X9, [X9]
	0x03299FE0 STR X9, [X0 + 0x20]
	0x03299FE4 B.EQ 0x329A078
	0x03299FE8 ADRP X9, 0xE8B000
	0x03299FEC LDR X9, [X9 + 0x8D8]
	0x03299FF0 CMP W8, 0x2
	0x03299FF4 LDR X9, [X9]
	0x03299FF8 STR X9, [X0 + 0x28]
	0x03299FFC B.LS 0x329A078
	0x0329A000 ADRP X9, 0xE80000
	0x0329A004 LDR X9, [X9 + 0x2E0]
	0x0329A008 CMP W8, 0x3
	0x0329A00C LDR X9, [X9]
	0x0329A010 STR X9, [X0 + 0x30]
	0x0329A014 B.EQ 0x329A078
	0x0329A018 ADRP X9, 0xE8A000
	0x0329A01C LDR X9, [X9 + 0x8D0]
	0x0329A020 CMP W8, 0x4
	0x0329A024 LDR X9, [X9]
	0x0329A028 STR X9, [X0 + 0x38]
	0x0329A02C B.LS 0x329A078
	0x0329A030 ADRP X9, 0xE8A000
	0x0329A034 LDR X9, [X9 + 0x8C0]
	0x0329A038 CMP W8, 0x5
	0x0329A03C LDR X9, [X9]
	0x0329A040 STR X9, [X0 + 0x40]
	0x0329A044 B.EQ 0x329A078
	0x0329A048 ADRP X8, 0xE8A000
	0x0329A04C LDR X8, [X8 + 0x8E0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1144000
	007 Move W8, [X21+1799]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE8C000
	015 Move X0, [X0+880]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1799], W8
	019 Move X0, X20
	020 Move X1, X31
	021 Call Object..ctor, X0
	022 Compare X19, 0
	023 JumpIfEqual {79}
	024 Move X0, [X19+56]
	025 Move X1, X31
	026 Call String.Copy, X0
	027 Move [X20+16], X0
	028 Move X0, X19
	029 Call CADMethodCallMessage.GetArguments, X0
	030 Move X1, [X19+16]
	031 Move X2, X0
	032 Move X21, X0
	033 Call CADMessageBase.UnmarshalArguments, X0, X1, X2
	034 Move [X20+40], X0
	035 Move X0, X19
	036 Move X1, X21
	037 Call CADMessageBase.GetLogicalCallContext, X0, X1
	038 Move [X20+64], X0
	039 Compare X0, 0
	040 JumpIfNotEqual {49}
	041 Move X8, 0xE8C000
	042 Move X8, [X8+880]
	043 Move X0, [X8]
	044 Call 0x1C17F10
	045 Move X1, X31
	046 Move X22, X0
	047 Call Object..ctor, X0
	048 Move [X20+64], X22
	049 Move X0, X19
	050 Call CADMessageBase.GetMethod, X0
	051 Move X8, [X20]
	052 Move [X20+56], X0
	053 Move X0, X20
	054 Move X9, [X8+680]
	055 Move X1, [X8+688]
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Move W8, [X19+32]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X8, [X20]
	060 Move X0, X20
	061 Move X9, [X8+648]
	062 Move X1, [X8+656]
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Move W1, [X19+32]
	065 Move X2, X21
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X22, [X31+16]
	069 Move X21, [X31+24]
	070 Move X30, [X31+48]
	071 Call CADMessageBase.UnmarshalProperties, X0, X1, X2
	072 Return 
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X22, [X31+16]
	076 Move X21, [X31+24]
	077 Move X30, [X31+48]
	078 Return 
	079 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03297608 CMP X11, X1
	0x0329760C B.EQ 0x329762C

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void CopyFrom(System.Runtime.Remoting.Messaging.IMethodMessage call)

Disassembly:
	0x0329A050 ADRP X9, 0xE8A000
	0x0329A054 LDR X8, [X8]
	0x0329A058 LDR X9, [X9 + 0x968]
	0x0329A05C LDP X20, X19, [X31 + 0x10]
	0x0329A060 STR X8, [X0 + 0x48]
	0x0329A064 LDR X8, [X9]
	0x0329A068 LDR X8, [X8 + 0xB8]
	0x0329A06C STR X0, [X8]
	0x0329A070 LDR X30, [X31], #0x20
	0x0329A074 RET
	0x0329A078 BL 0x1C16F28
	0x0329A07C BL 0x1C16F20
	0x0329A080 STR X1, [X0 + 0x20]
	0x0329A084 RET
	0x0329A088 STP X30, X21, [X31 - 0x20]!
	0x0329A08C STP X20, X19, [X31 + 0x10]
	0x0329A090 ADRP X21, 0x1142000
	0x0329A094 ADRP X20, 0xE89000
	0x0329A098 LDRB W8, [X21 + 0x715]
	0x0329A09C LDR X20, [X20 + 0xDB8]
	0x0329A0A0 MOV X19, X0
	0x0329A0A4 TBNZ X8, 0x0, 0x329A0BC
	0x0329A0A8 ADRP X0, 0xE89000
	0x0329A0AC LDR X0, [X0 + 0xDB8]
	0x0329A0B0 BL 0x1C16CF4
	0x0329A0B4 MOVZ W8, 0x1
	0x0329A0B8 STRB W8, [X21 + 0x715]
	0x0329A0BC MOVZ W8, 0x1
	0x0329A0C0 STRB W8, [X19 + 0x28]
	0x0329A0C4 LDR X0, [X20]
	0x0329A0C8 BL 0x1C16F10
	0x0329A0CC MOV X1, X31
	0x0329A0D0 MOV X19, X0
	0x0329A0D4 BL 0x335A0A0
	0x0329A0D8 MOV X0, X19
	0x0329A0DC LDP X20, X19, [X31 + 0x10]
	0x0329A0E0 LDP X30, X21, [X31], #0x20
	0x0329A0E4 RET
	0x0329A0E8 STR X30, [X31 - 0x30]!
	0x0329A0EC STP X22, X21, [X31 + 0x10]
	0x0329A0F0 STP X20, X19, [X31 + 0x20]
	0x0329A0F4 LDRB W8, [X0 + 0x28]
	0x0329A0F8 CBZ W8, 0x329A114
	0x0329A0FC MOV W0, W31
	0x0329A100 LDP X20, X19, [X31 + 0x20]
	0x0329A104 LDP X22, X21, [X31 + 0x10]
	0x0329A108 AND W0, W0, 0x1
	0x0329A10C LDR X30, [X31], #0x30
	0x0329A110 RET
	0x0329A114 LDR X20, [X0 + 0x20]
	0x0329A118 CBZ X20, 0x329A16C
	0x0329A11C LDR X8, [X20 + 0x18]
	0x0329A120 CMP W8, 0x1
	0x0329A124 B.LT 0x329A0FC
	0x0329A128 MOV X19, X1
	0x0329A12C MOV X21, X31
	0x0329A130 AND X8, X8, 0x0
	0x0329A134 ADD X22, X20, 0x20
	0x0329A138 CMP X21, W8, UXTW
	0x0329A13C B.CS 0x329A168
	0x0329A140 LDR X1, [X22, X21, LSL #3]
	0x0329A144 MOV X0, X19
	0x0329A148 MOV X2, X31
	0x0329A14C BL 0x321BA08
	0x0329A150 TBNZ X0, 0x0, 0x329A100
	0x0329A154 LDR W8, [X20 + 0x18]
	0x0329A158 ADD X21, X21, 0x1
	0x0329A15C CMP X21, W8, SXTW
	0x0329A160 B.LT 0x329A138
	0x0329A164 B 0x329A100
	0x0329A168 BL 0x1C16F28
	0x0329A16C BL 0x1C16F20
	0x0329A170 STP X30, X21, [X31 - 0x20]!
	0x0329A174 STP X20, X19, [X31 + 0x10]
	0x0329A178 ADRP X21, 0x1142000
	0x0329A17C LDRB W8, [X21 + 0x716]
	0x0329A180 MOV X19, X1
	0x0329A184 MOV X20, X0
	0x0329A188 TBNZ X8, 0x0, 0x329A1AC
	0x0329A18C ADRP X0, 0xE59000
	0x0329A190 LDR X0, [X0 + 0x818]
	0x0329A194 BL 0x1C16CF4
	0x0329A198 ADRP X0, 0xE5B000
	0x0329A19C LDR X0, [X0 + 0x278]
	0x0329A1A0 BL 0x1C16CF4
	0x0329A1A4 MOVZ W8, 0x1
	0x0329A1A8 STRB W8, [X21 + 0x716]
	0x0329A1AC CBZ X19, 0x329A1C8
	0x0329A1B0 ADRP X8, 0xE5B000
	0x0329A1B4 LDR X8, [X8 + 0x278]
	0x0329A1B8 LDR X1, [X8]
	0x0329A1BC LDR X8, [X19]
	0x0329A1C0 CMP X8, X1
	0x0329A1C4 B.NE 0x329A2A8
	0x0329A1C8 LDR X8, [X20 + 0x20]
	0x0329A1CC CBZ X8, 0x329A20C
	0x0329A1D0 MOV X21, X31
	0x0329A1D4 LDR W9, [X8 + 0x18]
	0x0329A1D8 CMP X21, W9, SXTW
	0x0329A1DC B.GE 0x329A210
	0x0329A1E0 CMP X21, X9
	0x0329A1E4 B.CS 0x329A2A4
	0x0329A1E8 ADD X8, X8, X21, 0x3, LSL
	0x0329A1EC LDR X0, [X8 + 0x20]
	0x0329A1F0 MOV X1, X19
	0x0329A1F4 MOV X2, X31
	0x0329A1F8 BL 0x321BA08
	0x0329A1FC TBNZ X0, 0x0, 0x329A260
	0x0329A200 LDR X8, [X20 + 0x20]
	0x0329A204 ADD X21, X21, 0x1
	0x0329A208 CBNZ X8, 0x329A1D4
	0x0329A20C BL 0x1C16F20
	0x0329A210 LDR X20, [X20 + 0x10]
	0x0329A214 CBZ X20, 0x329A270
	0x0329A218 ADRP X10, 0xE59000
	0x0329A21C LDR X8, [X20]
	0x0329A220 LDR X10, [X10 + 0x818]
	0x0329A224 LDRH W9, [X8 + 0x12E]
	0x0329A228 LDR X1, [X10]
	0x0329A22C CBZ X9, 0x329A250
	0x0329A230 LDR X10, [X8 + 0xB0]
	0x0329A234 ADD X10, X10, 0x8
	0x0329A238 LDUR X11, [X10 - 0x8]
	0x0329A23C CMP X11, X1
	0x0329A240 B.EQ 0x329A280
	0x0329A244 SUBS X9, X9, 0x1
	0x0329A248 ADD X10, X10, 0x10
	0x0329A24C B.NE 0x329A238
	0x0329A250 MOV X0, X20
	0x0329A254 MOV W2, W31
	0x0329A258 BL 0x1C5C788
	0x0329A25C B 0x329A28C
	0x0329A260 LDR X8, [X20]
	0x0329A264 LDR X3, [X8 + 0x258]
	0x0329A268 LDR X2, [X8 + 0x260]
	0x0329A26C B 0x329A290
	0x0329A270 LDP X20, X19, [X31 + 0x10]
	0x0329A274 MOV X0, X31
	0x0329A278 LDP X30, X21, [X31], #0x20
	0x0329A27C RET
	0x0329A280 LDRSW X9, [X10]
	0x0329A284 ADD X8, X8, X9, 0x4, LSL
	0x0329A288 ADD X0, X8, 0x138
	0x0329A28C LDP X3, X2, [X0]
	0x0329A290 MOV X0, X20
	0x0329A294 MOV X1, X19
	0x0329A298 LDP X20, X19, [X31 + 0x10]
	0x0329A29C LDP X30, X21, [X31], #0x20
	0x0329A2A0 BR X3
	0x0329A2A4 BL 0x1C16F28
	0x0329A2A8 MOV X0, X19
	0x0329A2AC BL 0x1C171E0
	0x0329A2B0 B 0x329A2B4
	0x0329A2B4 STP X30, X23, [X31 - 0x30]!
	0x0329A2B8 STP X22, X21, [X31 + 0x10]
	0x0329A2BC STP X20, X19, [X31 + 0x20]
	0x0329A2C0 ADRP X22, 0x1142000
	0x0329A2C4 LDRB W8, [X22 + 0x71B]
	0x0329A2C8 MOV X20, X2
	0x0329A2CC MOV X19, X1
	0x0329A2D0 MOV X21, X0
	0x0329A2D4 TBNZ X8, 0x0, 0x329A2F8
	0x0329A2D8 ADRP X0, 0xE59000
	0x0329A2DC LDR X0, [X0 + 0x818]
	0x0329A2E0 BL 0x1C16CF4
	0x0329A2E4 ADRP X0, 0xE5B000
	0x0329A2E8 LDR X0, [X0 + 0x278]
	0x0329A2EC BL 0x1C16CF4
	0x0329A2F0 MOVZ W8, 0x1
	0x0329A2F4 STRB W8, [X22 + 0x71B]
	0x0329A2F8 CBZ X19, 0x329A314
	0x0329A2FC ADRP X8, 0xE5B000
	0x0329A300 LDR X8, [X8 + 0x278]
	0x0329A304 LDR X1, [X8]
	0x0329A308 LDR X8, [X19]
	0x0329A30C CMP X8, X1
	0x0329A310 B.NE 0x329A414
	0x0329A314 LDR X8, [X21 + 0x20]
	0x0329A318 CBZ X8, 0x329A360
	0x0329A31C ADRP X23, 0xE59000
	0x0329A320 LDR X23, [X23 + 0x818]
	0x0329A324 MOV X22, X31
	0x0329A328 LDR W9, [X8 + 0x18]
	0x0329A32C CMP X22, W9, SXTW
	0x0329A330 B.GE 0x329A364
	0x0329A334 CMP X22, X9
	0x0329A338 B.CS 0x329A410
	0x0329A33C ADD X8, X8, X22, 0x3, LSL
	0x0329A340 LDR X0, [X8 + 0x20]
	0x0329A344 MOV X1, X19
	0x0329A348 MOV X2, X31
	0x0329A34C BL 0x321BA08
	0x0329A350 TBNZ X0, 0x0, 0x329A3CC
	0x0329A354 LDR X8, [X21 + 0x20]
	0x0329A358 ADD X22, X22, 0x1
	0x0329A35C CBNZ X8, 0x329A328
	0x0329A360 BL 0x1C16F20
	0x0329A364 LDR X22, [X21 + 0x10]
	0x0329A368 CBNZ X22, 0x329A38C
	0x0329A36C LDR X8, [X21]
	0x0329A370 MOV X0, X21
	0x0329A374 LDR X9, [X8 + 0x248]
	0x0329A378 LDR X1, [X8 + 0x250]
	0x0329A37C BLR X9
	0x0329A380 MOV X22, X0
	0x0329A384 STR X0, [X21 + 0x10]
	0x0329A388 CBZ X0, 0x329A360
	0x0329A38C LDR X8, [X22]
	0x0329A390 LDR X1, [X23]
	0x0329A394 LDRH W9, [X8 + 0x12E]
	0x0329A398 CBZ X9, 0x329A3BC
	0x0329A39C LDR X10, [X8 + 0xB0]
	0x0329A3A0 ADD X10, X10, 0x8
	0x0329A3A4 LDUR X11, [X10 - 0x8]
	0x0329A3A8 CMP X11, X1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x1143000
	009 Move W8, [X21+1800]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xE8B000
	017 Move X0, [X0+624]
	018 Call 0x1C17CF4
	019 Move X0, 0xE62000
	020 Move X0, [X0+3168]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+1800], W8
	024 Compare X20, 0
	025 JumpIfEqual {221}
	026 Move X23, 0xE8B000
	027 Move X8, [X20]
	028 Move X23, [X23+624]
	029 NotImplemented "Instruction LDRH not yet implemented."
	030 Move X1, [X23]
	031 Compare X9, 0
	032 JumpIfEqual {39}
	033 Move X10, [X8+176]
	034 Add X10, X10, 8
	035 NotImplemented "Instruction LDUR not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Subtract X9, X9, 1
	038 Add X10, X10, 16
	039 Move W2, 7
	040 Move X0, X20
	041 Call 0x1C5D788
	042 Move W9, [X10]
	043 Add W9, W9, 7
	044 Add X8, X8, W9
	045 Add X0, X8, 312
	046 Move X8, [X0]
	047 Move X1, [X0+8]
	048 Move X0, X20
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move [X19+16], X0
	051 Move X8, [X20]
	052 Move X1, [X23]
	053 NotImplemented "Instruction LDRH not yet implemented."
	054 Compare X9, 0
	055 JumpIfEqual {62}
	056 Move X10, [X8+176]
	057 Add X10, X10, 8
	058 NotImplemented "Instruction LDUR not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Subtract X9, X9, 1
	061 Add X10, X10, 16
	062 Move W2, 6
	063 Move X0, X20
	064 Call 0x1C5D788
	065 Move W9, [X10]
	066 Add W9, W9, 6
	067 Add X8, X8, W9
	068 Add X0, X8, 312
	069 Move X8, [X0]
	070 Move X1, [X0+8]
	071 Move X0, X20
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Move [X19+24], X0
	074 Move X8, [X20]
	075 Move X1, [X23]
	076 NotImplemented "Instruction LDRH not yet implemented."
	077 Compare X9, 0
	078 JumpIfEqual {85}
	079 Move X10, [X8+176]
	080 Add X10, X10, 8
	081 NotImplemented "Instruction LDUR not yet implemented."
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Subtract X9, X9, 1
	084 Add X10, X10, 16
	085 Move W2, 4
	086 Move X0, X20
	087 Call 0x1C5D788
	088 Move W9, [X10]
	089 Add W9, W9, 4
	090 Add X8, X8, W9
	091 Add X0, X8, 312
	092 Move X8, [X0]
	093 Move X1, [X0+8]
	094 Move X0, X20
	095 NotImplemented "Instruction BLR not yet implemented."
	096 Move [X19+32], X0
	097 Move X8, [X20]
	098 Move X1, [X23]
	099 NotImplemented "Instruction LDRH not yet implemented."
	100 Compare X9, 0
	101 JumpIfEqual {108}
	102 Move X10, [X8+176]
	103 Add X10, X10, 8
	104 NotImplemented "Instruction LDUR not yet implemented."
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Subtract X9, X9, 1
	107 Add X10, X10, 16
	108 Move W2, 1
	109 Move X0, X20
	110 Call 0x1C5D788
	111 Move W9, [X10]
	112 Add W9, W9, 1
	113 Add X8, X8, W9
	114 Add X0, X8, 312
	115 Move X8, [X0]
	116 Move X1, [X0+8]
	117 Move X0, X20
	118 NotImplemented "Instruction BLR not yet implemented."
	119 Move [X19+40], X0
	120 Move X8, [X20]
	121 Move X1, [X23]
	122 NotImplemented "Instruction LDRH not yet implemented."
	123 Compare X9, 0
	124 JumpIfEqual {131}
	125 Move X10, [X8+176]
	126 Add X10, X10, 8
	127 NotImplemented "Instruction LDUR not yet implemented."
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Subtract X9, X9, 1
	130 Add X10, X10, 16
	131 Move W2, 5
	132 Move X0, X20
	133 Call 0x1C5D788
	134 Move W9, [X10]
	135 Add W9, W9, 5
	136 Add X8, X8, W9
	137 Add X0, X8, 312
	138 Move X8, [X0]
	139 Move X1, [X0+8]
	140 Move X0, X20
	141 NotImplemented "Instruction BLR not yet implemented."
	142 Compare X0, 0
	143 JumpIfEqual {162}
	144 Move X24, 0xE62000
	145 Move X24, [X24+3168]
	146 Move X21, X0
	147 Move X22, [X24]
	148 Move X1, X22
	149 Call 0x1C17E00
	150 Compare X0, 0
	151 JumpIfEqual {159}
	152 Move [X19+48], X0
	153 Move X22, [X24]
	154 Move X0, X21
	155 Move X1, X22
	156 Call 0x1C17E00
	157 Compare X0, 0
	158 JumpIfNotEqual {163}
	159 Move X0, X21
	160 Move X1, X22
	161 Call 0x1C181E0
	162 Move [X19+48], X31
	163 Move X8, [X20]
	164 Move X1, [X23]
	165 NotImplemented "Instruction LDRH not yet implemented."
	166 Compare X9, 0
	167 JumpIfEqual {174}
	168 Move X10, [X8+176]
	169 Add X10, X10, 8
	170 NotImplemented "Instruction LDUR not yet implemented."
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Subtract X9, X9, 1
	173 Add X10, X10, 16
	174 Move W2, 3
	175 Move X0, X20
	176 Call 0x1C5D788
	177 Move W9, [X10]
	178 Add W9, W9, 3
	179 Add X8, X8, W9
	180 Add X0, X8, 312
	181 Move X8, [X0]
	182 Move X1, [X0+8]
	183 Move X0, X20
	184 NotImplemented "Instruction BLR not yet implemented."
	185 Move [X19+56], X0
	186 Move X8, [X20]
	187 Move X1, [X23]
	188 NotImplemented "Instruction LDRH not yet implemented."
	189 Compare X9, 0
	190 JumpIfEqual {197}
	191 Move X10, [X8+176]
	192 Add X10, X10, 8
	193 NotImplemented "Instruction LDUR not yet implemented."
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Subtract X9, X9, 1
	196 Add X10, X10, 16
	197 Move W2, 2
	198 Move X0, X20
	199 Call 0x1C5D788
	200 Move W9, [X10]
	201 Add W9, W9, 2
	202 Add X8, X8, W9
	203 Add X0, X8, 312
	204 Move X8, [X0]
	205 Move X1, [X0+8]
	206 Move X0, X20
	207 NotImplemented "Instruction BLR not yet implemented."
	208 Move X8, [X19]
	209 Move [X19+64], X0
	210 Move X0, X19
	211 Move X20, [X31+48]
	212 Move X19, [X31+56]
	213 Move X2, [X8+680]
	214 Move X1, [X8+688]
	215 Move X22, [X31+32]
	216 Move X21, [X31+40]
	217 Move X24, [X31+16]
	218 Move X23, [X31+24]
	219 Move X30, [X31+64]
	220 CallNoReturn X2
	221 Call 0x1C17F20

Method: System.Void InitMethodProperty(System.String key, System.Object value)

Disassembly:
	0x03297C08 B 0x3297F8C
	0x03297C0C MOVZ W8, 0x5180
	0x03297C10 MOVK W8, 0x77D00000
	0x03297C14 CMP W0, W8
	0x03297C18 B.HI 0x3297D4C
	0x03297C1C MOVZ W8, 0xFD0C
	0x03297C20 MOVK W8, 0x74E10000
	0x03297C24 CMP W0, W8
	0x03297C28 B.EQ 0x3297E34
	0x03297C2C MOVZ W8, 0x5180
	0x03297C30 MOVK W8, 0x77D00000
	0x03297C34 CMP W0, W8
	0x03297C38 B.NE 0x3297F98
	0x03297C3C ADRP X8, 0xE83000
	0x03297C40 LDR X8, [X8 + 0x2E0]
	0x03297C44 MOV X0, X20
	0x03297C48 MOV X2, X31
	0x03297C4C LDR X1, [X8]
	0x03297C50 BL 0x321BA08
	0x03297C54 TBZ X0, 0x0, 0x3297F98
	0x03297C58 LDR X19, [X19 + 0x18]
	0x03297C5C CBZ X19, 0x3298008
	0x03297C60 ADRP X10, 0xE8D000
	0x03297C64 LDR X8, [X19]
	0x03297C68 LDR X10, [X10 + 0x270]
	0x03297C6C LDRH W9, [X8 + 0x12E]
	0x03297C70 LDR X1, [X10]
	0x03297C74 CBZ X9, 0x3297C98
	0x03297C78 LDR X10, [X8 + 0xB0]
	0x03297C7C ADD X10, X10, 0x8
	0x03297C80 LDUR X11, [X10 - 0x8]
	0x03297C84 CMP X11, X1
	0x03297C88 B.EQ 0x3297FC0
	0x03297C8C SUBS X9, X9, 0x1
	0x03297C90 ADD X10, X10, 0x10
	0x03297C94 B.NE 0x3297C80
	0x03297C98 MOVZ W2, 0x6
	0x03297C9C B 0x3297F8C
	0x03297CA0 MOVZ W8, 0x6D56
	0x03297CA4 MOVK W8, 0x60830000
	0x03297CA8 CMP W0, W8
	0x03297CAC B.EQ 0x3297EC8
	0x03297CB0 MOVZ W8, 0x9961
	0x03297CB4 MOVK W8, 0x619E0000
	0x03297CB8 CMP W0, W8
	0x03297CBC B.NE 0x3297F98
	0x03297CC0 ADRP X8, 0xE8D000
	0x03297CC4 LDR X8, [X8 + 0x8F0]
	0x03297CC8 MOV X0, X20
	0x03297CCC MOV X2, X31
	0x03297CD0 LDR X1, [X8]
	0x03297CD4 BL 0x321BA08
	0x03297CD8 TBZ X0, 0x0, 0x3297F98
	0x03297CDC LDR X21, [X19 + 0x18]
	0x03297CE0 CBZ X21, 0x3298008
	0x03297CE4 ADRP X20, 0xE8D000
	0x03297CE8 LDR X20, [X20 + 0x460]
	0x03297CEC MOV X0, X21
	0x03297CF0 LDR X19, [X20]
	0x03297CF4 MOV X1, X19
	0x03297CF8 BL 0x1C16E00
	0x03297CFC CBZ X0, 0x329800C
	0x03297D00 LDR X20, [X20]
	0x03297D04 MOV X0, X21
	0x03297D08 MOV X1, X20
	0x03297D0C BL 0x1C16E00
	0x03297D10 CBZ X0, 0x3298018
	0x03297D14 LDR X8, [X0]
	0x03297D18 MOV X19, X0
	0x03297D1C LDRH W9, [X8 + 0x12E]
	0x03297D20 CBZ X9, 0x3297D44
	0x03297D24 LDR X10, [X8 + 0xB0]
	0x03297D28 ADD X10, X10, 0x8
	0x03297D2C LDUR X11, [X10 - 0x8]
	0x03297D30 CMP X11, X20
	0x03297D34 B.EQ 0x3297FA8
	0x03297D38 SUBS X9, X9, 0x1
	0x03297D3C ADD X10, X10, 0x10
	0x03297D40 B.NE 0x3297D2C
	0x03297D44 MOVZ W2, 0x2
	0x03297D48 B 0x3297EBC
	0x03297D4C MOVZ W8, 0x279
	0x03297D50 MOVK W8, 0xBCB90000
	0x03297D54 CMP W0, W8
	0x03297D58 B.EQ 0x3297F2C
	0x03297D5C MOVZ W8, 0xF38
	0x03297D60 MOVK W8, 0xDB4B0000
	0x03297D64 CMP W0, W8
	0x03297D68 B.NE 0x3297F98
	0x03297D6C ADRP X8, 0xE8D000
	0x03297D70 LDR X8, [X8 + 0x8D0]
	0x03297D74 MOV X0, X20
	0x03297D78 MOV X2, X31
	0x03297D7C LDR X1, [X8]
	0x03297D80 BL 0x321BA08
	0x03297D84 TBZ X0, 0x0, 0x3297F98
	0x03297D88 LDR X19, [X19 + 0x18]
	0x03297D8C CBZ X19, 0x3298008
	0x03297D90 ADRP X10, 0xE8D000
	0x03297D94 LDR X8, [X19]
	0x03297D98 LDR X10, [X10 + 0x270]
	0x03297D9C LDRH W9, [X8 + 0x12E]
	0x03297DA0 LDR X1, [X10]
	0x03297DA4 CBZ X9, 0x3297DC8
	0x03297DA8 LDR X10, [X8 + 0xB0]
	0x03297DAC ADD X10, X10, 0x8
	0x03297DB0 LDUR X11, [X10 - 0x8]
	0x03297DB4 CMP X11, X1
	0x03297DB8 B.EQ 0x3297FCC
	0x03297DBC SUBS X9, X9, 0x1
	0x03297DC0 ADD X10, X10, 0x10
	0x03297DC4 B.NE 0x3297DB0
	0x03297DC8 MOVZ W2, 0x5
	0x03297DCC B 0x3297F8C
	0x03297DD0 ADRP X8, 0xE8D000
	0x03297DD4 LDR X8, [X8 + 0x8C8]
	0x03297DD8 MOV X0, X20
	0x03297DDC MOV X2, X31
	0x03297DE0 LDR X1, [X8]
	0x03297DE4 BL 0x321BA08
	0x03297DE8 TBZ X0, 0x0, 0x3297F98
	0x03297DEC LDR X19, [X19 + 0x18]
	0x03297DF0 CBZ X19, 0x3298008
	0x03297DF4 ADRP X10, 0xE8D000
	0x03297DF8 LDR X8, [X19]
	0x03297DFC LDR X10, [X10 + 0x270]
	0x03297E00 LDRH W9, [X8 + 0x12E]
	0x03297E04 LDR X1, [X10]
	0x03297E08 CBZ X9, 0x3297E2C
	0x03297E0C LDR X10, [X8 + 0xB0]
	0x03297E10 ADD X10, X10, 0x8
	0x03297E14 LDUR X11, [X10 - 0x8]
	0x03297E18 CMP X11, X1
	0x03297E1C B.EQ 0x3297FD8
	0x03297E20 SUBS X9, X9, 0x1
	0x03297E24 ADD X10, X10, 0x10
	0x03297E28 B.NE 0x3297E14
	0x03297E2C MOVZ W2, 0x7
	0x03297E30 B 0x3297F8C
	0x03297E34 ADRP X8, 0xE8D000
	0x03297E38 LDR X8, [X8 + 0x8E8]
	0x03297E3C MOV X0, X20
	0x03297E40 MOV X2, X31
	0x03297E44 LDR X1, [X8]
	0x03297E48 BL 0x321BA08
	0x03297E4C TBZ X0, 0x0, 0x3297F98
	0x03297E50 LDR X21, [X19 + 0x18]
	0x03297E54 CBZ X21, 0x3298008
	0x03297E58 ADRP X20, 0xE8D000
	0x03297E5C LDR X20, [X20 + 0x460]
	0x03297E60 MOV X0, X21
	0x03297E64 LDR X19, [X20]
	0x03297E68 MOV X1, X19
	0x03297E6C BL 0x1C16E00
	0x03297E70 CBZ X0, 0x329800C
	0x03297E74 LDR X20, [X20]
	0x03297E78 MOV X0, X21
	0x03297E7C MOV X1, X20
	0x03297E80 BL 0x1C16E00
	0x03297E84 CBZ X0, 0x3298018
	0x03297E88 LDR X8, [X0]
	0x03297E8C MOV X19, X0
	0x03297E90 LDRH W9, [X8 + 0x12E]
	0x03297E94 CBZ X9, 0x3297EB8
	0x03297E98 LDR X10, [X8 + 0xB0]
	0x03297E9C ADD X10, X10, 0x8
	0x03297EA0 LDUR X11, [X10 - 0x8]
	0x03297EA4 CMP X11, X20
	0x03297EA8 B.EQ 0x3297FB4
	0x03297EAC SUBS X9, X9, 0x1
	0x03297EB0 ADD X10, X10, 0x10
	0x03297EB4 B.NE 0x3297EA0
	0x03297EB8 MOVZ W2, 0x1
	0x03297EBC MOV X0, X19
	0x03297EC0 MOV X1, X20
	0x03297EC4 B 0x3297F90
	0x03297EC8 ADRP X8, 0xE8D000
	0x03297ECC LDR X8, [X8 + 0x8C0]
	0x03297ED0 MOV X0, X20
	0x03297ED4 MOV X2, X31
	0x03297ED8 LDR X1, [X8]
	0x03297EDC BL 0x321BA08
	0x03297EE0 TBZ X0, 0x0, 0x3297F98
	0x03297EE4 LDR X19, [X19 + 0x18]
	0x03297EE8 CBZ X19, 0x3298008
	0x03297EEC ADRP X10, 0xE8D000
	0x03297EF0 LDR X8, [X19]
	0x03297EF4 LDR X10, [X10 + 0x270]
	0x03297EF8 LDRH W9, [X8 + 0x12E]
	0x03297EFC LDR X1, [X10]
	0x03297F00 CBZ X9, 0x3297F24
	0x03297F04 LDR X10, [X8 + 0xB0]
	0x03297F08 ADD X10, X10, 0x8
	0x03297F0C LDUR X11, [X10 - 0x8]
	0x03297F10 CMP X11, X1
	0x03297F14 B.EQ 0x3297FB4
	0x03297F18 SUBS X9, X9, 0x1
	0x03297F1C ADD X10, X10, 0x10
	0x03297F20 B.NE 0x3297F0C
	0x03297F24 MOVZ W2, 0x1
	0x03297F28 B 0x3297F8C
	0x03297F2C ADRP X8, 0xE8D000
	0x03297F30 LDR X8, [X8 + 0x8D8]
	0x03297F34 MOV X0, X20
	0x03297F38 MOV X2, X31
	0x03297F3C LDR X1, [X8]
	0x03297F40 BL 0x321BA08
	0x03297F44 TBZ X0, 0x0, 0x3297F98
	0x03297F48 LDR X19, [X19 + 0x18]
	0x03297F4C CBZ X19, 0x3298008
	0x03297F50 ADRP X10, 0xE8D000
	0x03297F54 LDR X8, [X19]
	0x03297F58 LDR X10, [X10 + 0x270]
	0x03297F5C LDRH W9, [X8 + 0x12E]
	0x03297F60 LDR X1, [X10]
	0x03297F64 CBZ X9, 0x3297F88
	0x03297F68 LDR X10, [X8 + 0xB0]
	0x03297F6C ADD X10, X10, 0x8
	0x03297F70 LDUR X11, [X10 - 0x8]
	0x03297F74 CMP X11, X1
	0x03297F78 B.EQ 0x3297FE4
	0x03297F7C SUBS X9, X9, 0x1
	0x03297F80 ADD X10, X10, 0x10
	0x03297F84 B.NE 0x3297F70
	0x03297F88 MOVZ W2, 0x4
	0x03297F8C MOV X0, X19
	0x03297F90 BL 0x1C5C788
	0x03297F94 B 0x3297FF4
	0x03297F98 LDP X20, X19, [X31 + 0x10]
	0x03297F9C MOV X0, X31
	0x03297FA0 LDP X30, X21, [X31], #0x20
	0x03297FA4 RET
	0x03297FA8 LDR W9, [X10]
	0x03297FAC ADD W9, W9, 0x2
	0x03297FB0 B 0x3297FEC
	0x03297FB4 LDR W9, [X10]
	0x03297FB8 ADD W9, W9, 0x1
	0x03297FBC B 0x3297FEC
	0x03297FC0 LDR W9, [X10]
	0x03297FC4 ADD W9, W9, 0x6
	0x03297FC8 B 0x3297FEC
	0x03297FCC LDR W9, [X10]
	0x03297FD0 ADD W9, W9, 0x5
	0x03297FD4 B 0x3297FEC
	0x03297FD8 LDR W9, [X10]
	0x03297FDC ADD W9, W9, 0x7
	0x03297FE0 B 0x3297FEC
	0x03297FE4 LDR W9, [X10]
	0x03297FE8 ADD W9, W9, 0x4
	0x03297FEC ADD X8, X8, W9, 0x4, SXTW
	0x03297FF0 ADD X0, X8, 0x138
	0x03297FF4 LDP X2, X1, [X0]
	0x03297FF8 MOV X0, X19
	0x03297FFC LDP X20, X19, [X31 + 0x10]
	0x03298000 LDP X30, X21, [X31], #0x20
	0x03298004 BR X2
	0x03298008 BL 0x1C16F20
	0x0329800C MOV X0, X21
	0x03298010 MOV X1, X19
	0x03298014 BL 0x1C171E0
	0x03298018 MOV X0, X21
	0x0329801C MOV X1, X20
	0x03298020 BL 0x1C171E0
	0x03298024 STP X30, X23, [X31 - 0x30]!
	0x03298028 STP X22, X21, [X31 + 0x10]
	0x0329802C STP X20, X19, [X31 + 0x20]
	0x03298030 ADRP X22, 0x1144000
	0x03298034 ADRP X23, 0xE8C000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1146000
	007 Move W8, [X22+1801]
	008 Move X19, X2
	009 Move X21, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {53}
	015 Move X0, 0xE5D000
	016 Move X0, [X0+2072]
	017 Call 0x1C17CF4
	018 Move X0, 0xE8E000
	019 Move X0, [X0+880]
	020 Call 0x1C17CF4
	021 Move X0, 0xE5D000
	022 Move X0, [X0+2512]
	023 Call 0x1C17CF4
	024 Move X0, 0xE5F000
	025 Move X0, [X0+632]
	026 Call 0x1C17CF4
	027 Move X0, 0xE65000
	028 Move X0, [X0+3168]
	029 Call 0x1C17CF4
	030 Move X0, 0xE8E000
	031 Move X0, [X0+2232]
	032 Call 0x1C17CF4
	033 Move X0, 0xE8E000
	034 Move X0, [X0+2240]
	035 Call 0x1C17CF4
	036 Move X0, 0xE8E000
	037 Move X0, [X0+2248]
	038 Call 0x1C17CF4
	039 Move X0, 0xE8E000
	040 Move X0, [X0+2256]
	041 Call 0x1C17CF4
	042 Move X0, 0xE84000
	043 Move X0, [X0+736]
	044 Call 0x1C17CF4
	045 Move X0, 0xE8E000
	046 Move X0, [X0+2264]
	047 Call 0x1C17CF4
	048 Move X0, 0xE8E000
	049 Move X0, [X0+2272]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X22+1801], W8
	053 Move X0, X21
	054 Move X1, X31
	055 Call <PrivateImplementationDetails>.ComputeStringHash, X0
	056 Move W8, 0x6D56
	057 NotImplemented "Instruction MOVK not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move W8, 0xE67B
	060 NotImplemented "Instruction MOVK not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move W8, 0xB61A
	063 NotImplemented "Instruction MOVK not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move W8, 0x6D56
	066 NotImplemented "Instruction MOVK not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X8, 0xE8E000
	069 Move X8, [X8+2240]
	070 Move X0, X21
	071 Move X2, X31
	072 Move X1, [X8]
	073 Call String.op_Equality, X0, X1
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {232}
	078 Compare X19, 0
	079 JumpIfEqual {271}
	080 Move X22, 0xE5D000
	081 Move X22, [X22+2512]
	082 Move X0, X19
	083 Move X21, [X22]
	084 Move X1, X21
	085 Call 0x1C17E00
	086 Compare X0, 0
	087 JumpIfEqual {281}
	088 Move [X20+40], X0
	089 Move W8, 0xE288
	090 NotImplemented "Instruction MOVK not yet implemented."
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move W8, 0x5180
	093 NotImplemented "Instruction MOVK not yet implemented."
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X8, 0xE84000
	096 Move X8, [X8+736]
	097 Move X0, X21
	098 Move X2, X31
	099 Move X1, [X8]
	100 Call String.op_Equality, X0, X1
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfNotEqual {232}
	105 Compare X19, 0
	106 JumpIfEqual {274}
	107 Move X8, 0xE5F000
	108 Move X8, [X8+632]
	109 Move X1, [X8]
	110 Move X8, [X19]
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move [X20+24], X19
	113 Move W8, 633
	114 NotImplemented "Instruction MOVK not yet implemented."
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move W8, 3896
	117 NotImplemented "Instruction MOVK not yet implemented."
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X8, 0xE8E000
	120 Move X8, [X8+2256]
	121 Move X0, X21
	122 Move X2, X31
	123 Move X1, [X8]
	124 Call String.op_Equality, X0, X1
	125 Move TEMP, X0
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfNotEqual {232}
	129 Compare X19, 0
	130 JumpIfEqual {275}
	131 Move X22, 0xE65000
	132 Move X22, [X22+3168]
	133 Move X0, X19
	134 Move X21, [X22]
	135 Move X1, X21
	136 Call 0x1C17E00
	137 Compare X0, 0
	138 JumpIfEqual {281}
	139 Move [X20+48], X0
	140 Move X8, 0xE8E000
	141 Move X8, [X8+2248]
	142 Move X0, X21
	143 Move X2, X31
	144 Move X1, [X8]
	145 Call String.op_Equality, X0, X1
	146 Move TEMP, X0
	147 And TEMP, TEMP, 1
	148 Compare TEMP, 1
	149 JumpIfNotEqual {232}
	150 Compare X19, 0
	151 JumpIfEqual {272}
	152 Move X8, 0xE5F000
	153 Move X8, [X8+632]
	154 Move X1, [X8]
	155 Move X8, [X19]
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Move [X20+16], X19
	158 Move X8, 0xE8E000
	159 Move X8, [X8+2272]
	160 Move X0, X21
	161 Move X2, X31
	162 Move X1, [X8]
	163 Call String.op_Equality, X0, X1
	164 Move TEMP, X0
	165 And TEMP, TEMP, 1
	166 Compare TEMP, 1
	167 JumpIfNotEqual {232}
	168 Compare X19, 0
	169 JumpIfEqual {273}
	170 Move X8, 0xE8E000
	171 Move X8, [X8+880]
	172 Move X1, [X8]
	173 Move X8, [X19]
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Move [X20+64], X19
	176 Move X8, 0xE8E000
	177 Move X8, [X8+2232]
	178 Move X0, X21
	179 Move X2, X31
	180 Move X1, [X8]
	181 Call String.op_Equality, X0, X1
	182 Move TEMP, X0
	183 And TEMP, TEMP, 1
	184 Compare TEMP, 1
	185 JumpIfNotEqual {232}
	186 Compare X19, 0
	187 JumpIfEqual {276}
	188 Move X22, 0xE65000
	189 Move X22, [X22+3168]
	190 Move X0, X19
	191 Move X21, [X22]
	192 Move X1, X21
	193 Call 0x1C17E00
	194 Compare X0, 0
	195 JumpIfEqual {281}
	196 Move [X20+80], X0
	197 Move X20, [X22]
	198 Move X0, X19
	199 Move X1, X20
	200 Call 0x1C17E00
	201 Compare X0, 0
	202 JumpIfNotEqual {226}
	203 Move X0, X19
	204 Move X1, X20
	205 Call 0x1C181E0
	206 Move X8, 0xE8E000
	207 Move X8, [X8+2264]
	208 Move X0, X21
	209 Move X2, X31
	210 Move X1, [X8]
	211 Call String.op_Equality, X0, X1
	212 Move TEMP, X0
	213 And TEMP, TEMP, 1
	214 Compare TEMP, 1
	215 JumpIfNotEqual {232}
	216 Compare X19, 0
	217 JumpIfEqual {277}
	218 Move X8, 0xE5F000
	219 Move X8, [X8+632]
	220 Move X1, [X8]
	221 Move X8, [X19]
	222 NotImplemented "Instruction CMP not yet implemented."
	223 Move [X20+32], X19
	224 Move X8, [X19]
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Move X20, [X31+32]
	227 Move X19, [X31+40]
	228 Move X22, [X31+16]
	229 Move X21, [X31+24]
	230 Move X30, [X31+48]
	231 Return 
	232 Move X8, [X20]
	233 Move X0, X20
	234 Move X9, [X8+648]
	235 Move X1, [X8+656]
	236 NotImplemented "Instruction BLR not yet implemented."
	237 Compare X0, 0
	238 JumpIfEqual {278}
	239 Move X10, 0xE5D000
	240 Move X8, [X0]
	241 Move X10, [X10+2072]
	242 Move X20, X0
	243 NotImplemented "Instruction LDRH not yet implemented."
	244 Move X1, [X10]
	245 Compare X9, 0
	246 JumpIfEqual {253}
	247 Move X10, [X8+176]
	248 Add X10, X10, 8
	249 NotImplemented "Instruction LDUR not yet implemented."
	250 NotImplemented "Instruction CMP not yet implemented."
	251 Subtract X9, X9, 1
	252 Add X10, X10, 16
	253 Move W2, 1
	254 Move X0, X20
	255 Call 0x1C5D788
	256 Move W9, [X10]
	257 Add W9, W9, 1
	258 Add X8, X8, W9
	259 Add X0, X8, 312
	260 Move X4, [X0]
	261 Move X3, [X0+8]
	262 Move X0, X20
	263 Move X1, X21
	264 Move X2, X19
	265 Move X20, [X31+32]
	266 Move X19, [X31+40]
	267 Move X22, [X31+16]
	268 Move X21, [X31+24]
	269 Move X30, [X31+48]
	270 CallNoReturn X4
	271 Move [X20+40], X31
	272 Move [X20+16], X31
	273 Move [X20+64], X31
	274 Move [X20+24], X31
	275 Move [X20+48], X31
	276 Move [X20+80], X31
	277 Move [X20+32], X31
	278 Call 0x1C17F20
	279 Move X0, X19
	280 Call 0x1C181E0
	281 Move X0, X19
	282 Move X1, X21
	283 Call 0x1C181E0

Method: System.Void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x032981D0 LDUR X11, [X10 - 0x8]
	0x032981D4 CMP X11, X21
	0x032981D8 B.EQ 0x32981FC
	0x032981DC SUBS X9, X9, 0x1
	0x032981E0 ADD X10, X10, 0x10
	0x032981E4 B.NE 0x32981D0
	0x032981E8 MOVZ W2, 0x3
	0x032981EC MOV X0, X20
	0x032981F0 MOV X1, X21
	0x032981F4 BL 0x1C5C788
	0x032981F8 B 0x329820C
	0x032981FC LDR W9, [X10]
	0x03298200 ADD W9, W9, 0x3
	0x03298204 ADD X8, X8, W9, 0x4, SXTW
	0x03298208 ADD X0, X8, 0x138
	0x0329820C LDP X3, X2, [X0]
	0x03298210 MOV X0, X20
	0x03298214 MOV X1, X22
	0x03298218 LDP X20, X19, [X31 + 0x20]
	0x0329821C LDP X22, X21, [X31 + 0x10]
	0x03298220 LDP X30, X23, [X31], #0x30
	0x03298224 BR X3
	0x03298228 ADRP X0, 0xE63000
	0x0329822C LDR X0, [X0 + 0x578]
	0x03298230 BL 0x1C16D08
	0x03298234 BL 0x1C16F10
	0x03298238 MOV X19, X0
	0x0329823C ADRP X0, 0xE8C000
	0x03298240 LDR X0, [X0 + 0x8F8]
	0x03298244 BL 0x1C16D08
	0x03298248 MOV X1, X0
	0x0329824C MOV X0, X19
	0x03298250 MOV X2, X31
	0x03298254 BL 0x3314A68
	0x03298258 ADRP X0, 0xE8C000
	0x0329825C LDR X0, [X0 + 0x900]
	0x03298260 BL 0x1C16D08
	0x03298264 MOV X1, X0
	0x03298268 MOV X0, X19
	0x0329826C BL 0x1C16DEC
	0x03298270 BL 0x1C16F20
	0x03298274 MOV X0, X22
	0x03298278 MOV X1, X20
	0x0329827C BL 0x1C171E0
	0x03298280 MOV X0, X22
	0x03298284 MOV X1, X21
	0x03298288 BL 0x1C171E0
	0x0329828C STR X30, [X31 - 0x30]!
	0x03298290 STP X22, X21, [X31 + 0x10]
	0x03298294 STP X20, X19, [X31 + 0x20]
	0x03298298 ADRP X22, 0x1144000
	0x0329829C LDRB W8, [X22 + 0x718]
	0x032982A0 MOV X19, X2
	0x032982A4 MOV X20, X1
	0x032982A8 MOV X21, X0
	0x032982AC TBNZ X8, 0x0, 0x3298330
	0x032982B0 ADRP X0, 0xE8C000
	0x032982B4 LDR X0, [X0 + 0x378]
	0x032982B8 BL 0x1C16CF4
	0x032982BC ADRP X0, 0xE5D000
	0x032982C0 LDR X0, [X0 + 0x278]
	0x032982C4 BL 0x1C16CF4
	0x032982C8 ADRP X0, 0xE8C000
	0x032982CC LDR X0, [X0 + 0x8C0]
	0x032982D0 BL 0x1C16CF4
	0x032982D4 ADRP X0, 0xE8C000
	0x032982D8 LDR X0, [X0 + 0x8C8]
	0x032982DC BL 0x1C16CF4
	0x032982E0 ADRP X0, 0xE8C000
	0x032982E4 LDR X0, [X0 + 0x8D0]
	0x032982E8 BL 0x1C16CF4
	0x032982EC ADRP X0, 0xE82000
	0x032982F0 LDR X0, [X0 + 0x2E0]
	0x032982F4 BL 0x1C16CF4
	0x032982F8 ADRP X0, 0xE8C000
	0x032982FC LDR X0, [X0 + 0x8D8]
	0x03298300 BL 0x1C16CF4
	0x03298304 ADRP X0, 0xE8C000
	0x03298308 LDR X0, [X0 + 0x8E8]
	0x0329830C BL 0x1C16CF4
	0x03298310 ADRP X0, 0xE8C000
	0x03298314 LDR X0, [X0 + 0x8F0]
	0x03298318 BL 0x1C16CF4
	0x0329831C ADRP X0, 0xE8C000
	0x03298320 LDR X0, [X0 + 0x8E0]
	0x03298324 BL 0x1C16CF4
	0x03298328 MOVZ W8, 0x1
	0x0329832C STRB W8, [X22 + 0x718]
	0x03298330 MOV X0, X20
	0x03298334 MOV X1, X31
	0x03298338 BL 0x335C87C
	0x0329833C MOVZ W8, 0x9961
	0x03298340 MOVK W8, 0x619E0000
	0x03298344 CMP W0, W8
	0x03298348 B.HI 0x3298388
	0x0329834C MOVZ W8, 0xB61A
	0x03298350 MOVK W8, 0x47A30000
	0x03298354 CMP W0, W8
	0x03298358 B.HI 0x32983C4
	0x0329835C MOVZ W8, 0xE67B
	0x03298360 MOVK W8, 0x3B0C0000
	0x03298364 CMP W0, W8
	0x03298368 B.EQ 0x329841C
	0x0329836C MOVZ W8, 0xB61A
	0x03298370 MOVK W8, 0x47A30000
	0x03298374 CMP W0, W8
	0x03298378 B.NE 0x32984D0
	0x0329837C ADRP X8, 0xE8C000
	0x03298380 LDR X8, [X8 + 0x8E0]
	0x03298384 B 0x3298500
	0x03298388 MOVZ W8, 0x5180
	0x0329838C MOVK W8, 0x77D00000
	0x03298390 CMP W0, W8
	0x03298394 B.HI 0x32983F0
	0x03298398 MOVZ W8, 0xFD0C
	0x0329839C MOVK W8, 0x74E10000
	0x032983A0 CMP W0, W8
	0x032983A4 B.EQ 0x32984E0
	0x032983A8 MOVZ W8, 0x5180
	0x032983AC MOVK W8, 0x77D00000
	0x032983B0 CMP W0, W8
	0x032983B4 B.NE 0x32984D0
	0x032983B8 ADRP X8, 0xE82000
	0x032983BC LDR X8, [X8 + 0x2E0]
	0x032983C0 B 0x3298500
	0x032983C4 MOVZ W8, 0x6D56
	0x032983C8 MOVK W8, 0x60830000
	0x032983CC CMP W0, W8
	0x032983D0 B.EQ 0x32984EC
	0x032983D4 MOVZ W8, 0x9961
	0x032983D8 MOVK W8, 0x619E0000
	0x032983DC CMP W0, W8
	0x032983E0 B.NE 0x32984D0
	0x032983E4 ADRP X8, 0xE8C000
	0x032983E8 LDR X8, [X8 + 0x8F0]
	0x032983EC B 0x3298500
	0x032983F0 MOVZ W8, 0x279
	0x032983F4 MOVK W8, 0xBCB90000
	0x032983F8 CMP W0, W8
	0x032983FC B.EQ 0x32984F8
	0x03298400 MOVZ W8, 0xF38
	0x03298404 MOVK W8, 0xDB4B0000
	0x03298408 CMP W0, W8
	0x0329840C B.NE 0x32984D0
	0x03298410 ADRP X8, 0xE8C000
	0x03298414 LDR X8, [X8 + 0x8D0]
	0x03298418 B 0x3298500
	0x0329841C ADRP X8, 0xE8C000
	0x03298420 LDR X8, [X8 + 0x8C8]
	0x03298424 MOV X0, X20
	0x03298428 MOV X2, X31
	0x0329842C LDR X1, [X8]
	0x03298430 BL 0x321BA08
	0x03298434 TBZ X0, 0x0, 0x32984D0
	0x03298438 LDR X22, [X21 + 0x18]
	0x0329843C CBZ X22, 0x3298548
	0x03298440 ADRP X21, 0xE8C000
	0x03298444 LDR X21, [X21 + 0x378]
	0x03298448 MOV X0, X22
	0x0329844C LDR X20, [X21]
	0x03298450 MOV X1, X20
	0x03298454 BL 0x1C16E00
	0x03298458 CBZ X0, 0x329854C
	0x0329845C LDR X21, [X21]
	0x03298460 MOV X0, X22
	0x03298464 MOV X1, X21
	0x03298468 BL 0x1C16E00
	0x0329846C CBZ X0, 0x3298558
	0x03298470 MOV X20, X0
	0x03298474 CBZ X19, 0x3298490
	0x03298478 ADRP X8, 0xE5D000
	0x0329847C LDR X8, [X8 + 0x278]
	0x03298480 LDR X1, [X8]
	0x03298484 LDR X8, [X19]
	0x03298488 CMP X8, X1
	0x0329848C B.NE 0x3298564
	0x03298490 LDR X8, [X20]
	0x03298494 LDRH W9, [X8 + 0x12E]
	0x03298498 CBZ X9, 0x32984BC
	0x0329849C LDR X10, [X8 + 0xB0]
	0x032984A0 ADD X10, X10, 0x8
	0x032984A4 LDUR X11, [X10 - 0x8]
	0x032984A8 CMP X11, X21
	0x032984AC B.EQ 0x329851C
	0x032984B0 SUBS X9, X9, 0x1
	0x032984B4 ADD X10, X10, 0x10
	0x032984B8 B.NE 0x32984A4
	0x032984BC MOVZ W2, 0x3
	0x032984C0 MOV X0, X20
	0x032984C4 MOV X1, X21
	0x032984C8 BL 0x1C5C788
	0x032984CC B 0x329852C
	0x032984D0 LDP X20, X19, [X31 + 0x20]
	0x032984D4 LDP X22, X21, [X31 + 0x10]
	0x032984D8 LDR X30, [X31], #0x30
	0x032984DC RET
	0x032984E0 ADRP X8, 0xE8C000
	0x032984E4 LDR X8, [X8 + 0x8E8]
	0x032984E8 B 0x3298500
	0x032984EC ADRP X8, 0xE8C000
	0x032984F0 LDR X8, [X8 + 0x8C0]
	0x032984F4 B 0x3298500
	0x032984F8 ADRP X8, 0xE8C000
	0x032984FC LDR X8, [X8 + 0x8D8]
	0x03298500 LDR X1, [X8]
	0x03298504 MOV X0, X20
	0x03298508 LDP X20, X19, [X31 + 0x20]
	0x0329850C LDP X22, X21, [X31 + 0x10]
	0x03298510 MOV X2, X31
	0x03298514 LDR X30, [X31], #0x30
	0x03298518 B 0x321BA08
	0x0329851C LDR W9, [X10]
	0x03298520 ADD W9, W9, 0x3
	0x03298524 ADD X8, X8, W9, 0x4, SXTW
	0x03298528 ADD X0, X8, 0x138
	0x0329852C LDP X3, X2, [X0]
	0x03298530 MOV X0, X20
	0x03298534 MOV X1, X19
	0x03298538 LDP X20, X19, [X31 + 0x20]
	0x0329853C LDP X22, X21, [X31 + 0x10]
	0x03298540 LDR X30, [X31], #0x30
	0x03298544 BR X3
	0x03298548 BL 0x1C16F20
	0x0329854C MOV X0, X22
	0x03298550 MOV X1, X20
	0x03298554 BL 0x1C171E0
	0x03298558 MOV X0, X22
	0x0329855C MOV X1, X21
	0x03298560 BL 0x1C171E0
	0x03298564 MOV X0, X19
	0x03298568 BL 0x1C171E0
	0x0329856C STR X30, [X31 - 0x20]!
	0x03298570 STP X20, X19, [X31 + 0x10]
	0x03298574 ADRP X19, 0x1144000
	0x03298578 ADRP X20, 0xE5B000
	0x0329857C LDRB W8, [X19 + 0x700]
	0x03298580 LDR X20, [X20 + 0xAC8]
	0x03298584 TBNZ X8, 0x0, 0x329862C
	0x03298588 ADRP X0, 0xE8C000
	0x0329858C LDR X0, [X0 + 0x880]
	0x03298590 BL 0x1C16CF4
	0x03298594 ADRP X0, 0xE5B000
	0x03298598 LDR X0, [X0 + 0xAC8]
	0x0329859C BL 0x1C16CF4
	0x032985A0 ADRP X0, 0xE8C000
	0x032985A4 LDR X0, [X0 + 0x898]
	0x032985A8 BL 0x1C16CF4
	0x032985AC ADRP X0, 0xE8C000
	0x032985B0 LDR X0, [X0 + 0x8C0]
	0x032985B4 BL 0x1C16CF4
	0x032985B8 ADRP X0, 0xE8C000
	0x032985BC LDR X0, [X0 + 0x8C8]
	0x032985C0 BL 0x1C16CF4
	0x032985C4 ADRP X0, 0xE8C000
	0x032985C8 LDR X0, [X0 + 0x8A0]
	0x032985CC BL 0x1C16CF4
	0x032985D0 ADRP X0, 0xE8C000
	0x032985D4 LDR X0, [X0 + 0x890]
	0x032985D8 BL 0x1C16CF4
	0x032985DC ADRP X0, 0xE8C000
	0x032985E0 LDR X0, [X0 + 0x8A8]
	0x032985E4 BL 0x1C16CF4
	0x032985E8 ADRP X0, 0xE8C000
	0x032985EC LDR X0, [X0 + 0x8D0]
	0x032985F0 BL 0x1C16CF4
	0x032985F4 ADRP X0, 0xE82000
	0x032985F8 LDR X0, [X0 + 0x2E0]
	0x032985FC BL 0x1C16CF4
	0x03298600 ADRP X0, 0xE8C000
	0x03298604 LDR X0, [X0 + 0x8B0]
	0x03298608 BL 0x1C16CF4
	0x0329860C ADRP X0, 0xE8C000
	0x03298610 LDR X0, [X0 + 0x8D8]
	0x03298614 BL 0x1C16CF4
	0x03298618 ADRP X0, 0xE8C000
	0x0329861C LDR X0, [X0 + 0x8E0]
	0x03298620 BL 0x1C16CF4
	0x03298624 MOVZ W8, 0x1
	0x03298628 STRB W8, [X19 + 0x700]
	0x0329862C LDR X0, [X20]
	0x03298630 MOVZ W1, 0xB
	0x03298634 BL 0x1C16D6C
	0x03298638 CBZ X0, 0x3298768
	0x0329863C LDR W8, [X0 + 0x18]
	0x03298640 CBZ W8, 0x3298764
	0x03298644 ADRP X9, 0xE8C000
	0x03298648 LDR X9, [X9 + 0x8C8]
	0x0329864C CMP W8, 0x1
	0x03298650 LDR X9, [X9]
	0x03298654 STR X9, [X0 + 0x20]
	0x03298658 B.EQ 0x3298764

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x1145000
	011 Move W8, [X21+1802]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {56}
	018 Move X0, 0xE64000
	019 Move X0, [X0+3856]
	020 Call 0x1C17CF4
	021 Move X0, 0xE5C000
	022 Move X0, [X0+2072]
	023 Call 0x1C17CF4
	024 Move X0, 0xE5C000
	025 Move X0, [X0+3584]
	026 Call 0x1C17CF4
	027 Move X0, 0xE5C000
	028 Move X0, [X0+3608]
	029 Call 0x1C17CF4
	030 Move X0, 0xE5E000
	031 Move X0, [X0+632]
	032 Call 0x1C17CF4
	033 Move X0, 0xE8D000
	034 Move X0, [X0+2232]
	035 Call 0x1C17CF4
	036 Move X0, 0xE8D000
	037 Move X0, [X0+2240]
	038 Call 0x1C17CF4
	039 Move X0, 0xE8D000
	040 Move X0, [X0+2248]
	041 Call 0x1C17CF4
	042 Move X0, 0xE8D000
	043 Move X0, [X0+2256]
	044 Call 0x1C17CF4
	045 Move X0, 0xE83000
	046 Move X0, [X0+736]
	047 Call 0x1C17CF4
	048 Move X0, 0xE8D000
	049 Move X0, [X0+2264]
	050 Call 0x1C17CF4
	051 Move X0, 0xE8D000
	052 Move X0, [X0+2272]
	053 Call 0x1C17CF4
	054 Move W8, 1
	055 Move [X21+1802], W8
	056 Compare X19, 0
	057 JumpIfEqual {255}
	058 Move X8, 0xE83000
	059 Move X8, [X8+736]
	060 Move X21, 0xE8D000
	061 Move X22, 0xE8D000
	062 Move X23, 0xE8D000
	063 Move X21, [X21+2264]
	064 Move X22, [X22+2256]
	065 Move X23, [X23+2240]
	066 Move X2, [X20+24]
	067 Move X1, [X8]
	068 Move X24, 0xE8D000
	069 Move X25, 0xE8D000
	070 Move X26, 0xE8D000
	071 Move X24, [X24+2272]
	072 Move X25, [X25+2248]
	073 Move X26, [X26+2232]
	074 Move X0, X19
	075 Move X3, X31
	076 Call SerializationInfo.AddValue, X0, X1, X2
	077 Move X2, [X20+32]
	078 Move X1, [X21]
	079 Move X0, X19
	080 Move X3, X31
	081 Call SerializationInfo.AddValue, X0, X1, X2
	082 Move X2, [X20+48]
	083 Move X1, [X22]
	084 Move X0, X19
	085 Move X3, X31
	086 Call SerializationInfo.AddValue, X0, X1, X2
	087 Move X2, [X20+40]
	088 Move X1, [X23]
	089 Move X0, X19
	090 Move X3, X31
	091 Call SerializationInfo.AddValue, X0, X1, X2
	092 Move X2, [X20+64]
	093 Move X1, [X24]
	094 Move X0, X19
	095 Move X3, X31
	096 Call SerializationInfo.AddValue, X0, X1, X2
	097 Move X2, [X20+16]
	098 Move X1, [X25]
	099 Move X0, X19
	100 Move X3, X31
	101 Call SerializationInfo.AddValue, X0, X1, X2
	102 Move X2, [X20+80]
	103 Move X1, [X26]
	104 Move X0, X19
	105 Move X3, X31
	106 Call SerializationInfo.AddValue, X0, X1, X2
	107 Move X20, [X20+96]
	108 Compare X20, 0
	109 JumpIfEqual {240}
	110 Move X10, 0xE5C000
	111 Move X8, [X20]
	112 Move X10, [X10+2072]
	113 NotImplemented "Instruction LDRH not yet implemented."
	114 Move X1, [X10]
	115 Compare X9, 0
	116 JumpIfEqual {123}
	117 Move X10, [X8+176]
	118 Add X10, X10, 8
	119 NotImplemented "Instruction LDUR not yet implemented."
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Subtract X9, X9, 1
	122 Add X10, X10, 16
	123 Move W2, 6
	124 Move X0, X20
	125 Call 0x1C5D788
	126 Move W9, [X10]
	127 Add W9, W9, 6
	128 Add X8, X8, W9
	129 Add X0, X8, 312
	130 Move X8, [X0]
	131 Move X1, [X0+8]
	132 Move X21, 0xE5C000
	133 Move X21, [X21+3584]
	134 Move X0, X20
	135 NotImplemented "Instruction BLR not yet implemented."
	136 Move X20, X0
	137 Compare X0, 0
	138 JumpIfEqual {256}
	139 Move X22, 0xE5C000
	140 Move X23, 0xE64000
	141 Move X24, 0xE5E000
	142 Move X22, [X22+3608]
	143 Move X23, [X23+3856]
	144 Move X24, [X24+632]
	145 Move X8, [X20]
	146 Move X1, [X22]
	147 NotImplemented "Instruction LDRH not yet implemented."
	148 Compare X9, 0
	149 JumpIfEqual {156}
	150 Move X10, [X8+176]
	151 Add X10, X10, 8
	152 NotImplemented "Instruction LDUR not yet implemented."
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Subtract X9, X9, 1
	155 Add X10, X10, 16
	156 Move X0, X20
	157 Move W2, W31
	158 Call 0x1C5D788
	159 NotImplemented "Instruction LDRSW not yet implemented."
	160 Add X8, X8, X9
	161 Add X0, X8, 312
	162 Move X8, [X0]
	163 Move X1, [X0+8]
	164 Move X0, X20
	165 NotImplemented "Instruction BLR not yet implemented."
	166 Move TEMP, X0
	167 And TEMP, TEMP, 1
	168 Compare TEMP, 1
	169 JumpIfNotEqual {210}
	170 Move X8, [X20]
	171 Move X1, [X22]
	172 NotImplemented "Instruction LDRH not yet implemented."
	173 Compare X9, 0
	174 JumpIfEqual {181}
	175 Move X10, [X8+176]
	176 Add X10, X10, 8
	177 NotImplemented "Instruction LDUR not yet implemented."
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Subtract X9, X9, 1
	180 Add X10, X10, 16
	181 Move W2, 1
	182 Move X0, X20
	183 Call 0x1C5D788
	184 Move W9, [X10]
	185 Add W9, W9, 1
	186 Add X8, X8, W9
	187 Add X0, X8, 312
	188 Move X8, [X0]
	189 Move X1, [X0+8]
	190 Move X0, X20
	191 NotImplemented "Instruction BLR not yet implemented."
	192 Compare X0, 0
	193 JumpIfEqual {250}
	194 Move X8, [X0]
	195 Move X1, [X23]
	196 Move X8, [X8+64]
	197 Move X9, [X1+64]
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Call 0x1C17E08
	200 Move X1, [X0]
	201 Move X2, [X0+8]
	202 Compare X1, 0
	203 JumpIfEqual {207}
	204 Move X8, [X24]
	205 Move X9, [X1]
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Move X0, X19
	208 Move X3, X31
	209 Call SerializationInfo.AddValue, X0, X1, X2
	210 Move X19, X31
	211 Move X1, [X21]
	212 Move X0, X20
	213 Call 0x1C17E00
	214 Compare X0, 0
	215 JumpIfEqual {238}
	216 Move X8, [X0]
	217 Move X1, [X21]
	218 Move X20, X0
	219 NotImplemented "Instruction LDRH not yet implemented."
	220 Compare X9, 0
	221 JumpIfEqual {228}
	222 Move X10, [X8+176]
	223 Add X10, X10, 8
	224 NotImplemented "Instruction LDUR not yet implemented."
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Subtract X9, X9, 1
	227 Add X10, X10, 16
	228 Move X0, X20
	229 Move W2, W31
	230 Call 0x1C5D788
	231 NotImplemented "Instruction LDRSW not yet implemented."
	232 Add X8, X8, X9
	233 Add X0, X8, 312
	234 Move X8, [X0]
	235 Move X1, [X0+8]
	236 Move X0, X20
	237 NotImplemented "Instruction BLR not yet implemented."
	238 Compare X19, 0
	239 JumpIfNotEqual {257}
	240 Move X20, [X31+64]
	241 Move X19, [X31+72]
	242 Move X22, [X31+48]
	243 Move X21, [X31+56]
	244 Move X24, [X31+32]
	245 Move X23, [X31+40]
	246 Move X26, [X31+16]
	247 Move X25, [X31+24]
	248 Move X30, [X31+80]
	249 Return 
	250 Call 0x1C17F20
	251 Call 0x1C181E0
	252 Move X0, X1
	253 Move X1, X8
	254 Call 0x1C181E0
	255 Call 0x1C17F20
	256 Call 0x1C17F20
	257 Move X0, X19
	258 Call 0x1C17F18
	259 NotImplemented "Instruction CMP not yet implemented."
	260 Call 0x3EB2AD0
	261 Move X19, [X0]
	262 Call 0x3EB2AE0
	263 Move [X31+8], X0
	264 Move X19, X31
	265 Move [X31+8], X0
	266 Move X1, [X21]
	267 Move X0, X20
	268 Call 0x1C17E00
	269 Move X20, X0
	270 Compare X0, 0
	271 JumpIfEqual {293}
	272 Move X8, [X20]
	273 Move X1, [X21]
	274 NotImplemented "Instruction LDRH not yet implemented."
	275 Compare X9, 0
	276 JumpIfEqual {283}
	277 Move X10, [X8+176]
	278 Add X10, X10, 8
	279 NotImplemented "Instruction LDUR not yet implemented."
	280 NotImplemented "Instruction CMP not yet implemented."
	281 Subtract X9, X9, 1
	282 Add X10, X10, 16
	283 Move X0, X20
	284 Move W2, W31
	285 Call 0x1C5D788
	286 NotImplemented "Instruction LDRSW not yet implemented."
	287 Add X8, X8, X9
	288 Add X0, X8, 312
	289 Move X8, [X0]
	290 Move X1, [X0+8]
	291 Move X0, X20
	292 NotImplemented "Instruction BLR not yet implemented."
	293 Compare X19, 0
	294 JumpIfNotEqual {297}
	295 Move X0, [X31+8]
	296 Call 0x1D2D690
	297 Move X0, X19
	298 Call 0x1C17F18
	299 Call 0x1991590

Method: System.Int32 get_ArgCount()

Disassembly:
	0x0329A3AC B.EQ 0x329A3E0
	0x0329A3B0 SUBS X9, X9, 0x1
	0x0329A3B4 ADD X10, X10, 0x10
	0x0329A3B8 B.NE 0x329A3A4
	0x0329A3BC MOVZ W2, 0x1
	0x0329A3C0 MOV X0, X22
	0x0329A3C4 BL 0x1C5C788

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+40]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, [X8+24]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Object[] get_Args()

Disassembly:
	0x0329A3C8 B 0x329A3F0
	0x0329A3CC LDR X8, [X21]

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Runtime.Remoting.Messaging.LogicalCallContext get_LogicalCallContext()

Disassembly:
	0x0329A3D0 MOV X0, X21
	0x0329A3D4 LDR X4, [X8 + 0x268]
	0x0329A3D8 LDR X3, [X8 + 0x270]
	0x0329A3DC B 0x329A3F8
	0x0329A3E0 LDR W9, [X10]
	0x0329A3E4 ADD W9, W9, 0x1
	0x0329A3E8 ADD X8, X8, W9, 0x4, SXTW
	0x0329A3EC ADD X0, X8, 0x138
	0x0329A3F0 LDP X4, X3, [X0]
	0x0329A3F4 MOV X0, X22
	0x0329A3F8 MOV X1, X19
	0x0329A3FC MOV X2, X20
	0x0329A400 LDP X20, X19, [X31 + 0x20]
	0x0329A404 LDP X22, X21, [X31 + 0x10]
	0x0329A408 LDP X30, X23, [X31], #0x30
	0x0329A40C BR X4
	0x0329A410 BL 0x1C16F28
	0x0329A414 MOV X0, X19
	0x0329A418 BL 0x1C171E0
	0x0329A41C STP X30, X25, [X31 - 0x40]!
	0x0329A420 STP X24, X23, [X31 + 0x10]
	0x0329A424 STP X22, X21, [X31 + 0x20]
	0x0329A428 STP X20, X19, [X31 + 0x30]
	0x0329A42C ADRP X19, 0x1142000
	0x0329A430 ADRP X21, 0xE86000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1143000
	005 Move W8, [X20+1803]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE8B000
	012 Move X0, [X0+880]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1803], W8
	016 Move X20, [X19+64]
	017 Compare X20, 0
	018 JumpIfNotEqual {27}
	019 Move X8, 0xE8B000
	020 Move X8, [X8+880]
	021 Move X0, [X8]
	022 Call 0x1C17F10
	023 Move X1, X31
	024 Move X20, X0
	025 Call Object..ctor, X0
	026 Move [X19+64], X20
	027 Move X0, X20
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Return X0

Method: System.Reflection.MethodBase get_MethodBase()

Disassembly:
	0x0329A434 LDRB W8, [X19 + 0x719]
	0x0329A438 LDR X21, [X21 + 0xBA0]
	0x0329A43C MOV X20, X0
	0x0329A440 TBNZ X8, 0x0, 0x329A494
	0x0329A444 ADRP X0, 0xE86000
	0x0329A448 LDR X0, [X0 + 0xBA0]
	0x0329A44C BL 0x1C16CF4
	0x0329A450 ADRP X0, 0xE59000
	0x0329A454 LDR X0, [X0 + 0x818]
	0x0329A458 BL 0x1C16CF4
	0x0329A45C ADRP X0, 0xE59000
	0x0329A460 LDR X0, [X0 + 0xE00]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+56]
	005 Move X1, X31
	006 Move X2, X31
	007 Call MethodBase.op_Equality, X0, X1
	008 Move TEMP, X0
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfNotEqual {14}
	012 Move X0, X19
	013 Call MethodCall.ResolveMethod, X0
	014 Move X0, [X19+56]
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Return X0

Method: System.String get_MethodName()

Disassembly:
	0x0329A9AC LDR W9, [X10]
	0x0329A9B0 ADD W9, W9, 0x6
	0x0329A9B4 ADD X8, X8, W9, 0x4, SXTW
	0x0329A9B8 ADD X0, X8, 0x138
	0x0329A9BC LDP X8, X1, [X0]
	0x0329A9C0 MOV X0, X21
	0x0329A9C4 BLR X8
	0x0329A9C8 MOV X21, X0
	0x0329A9CC CBZ X0, 0x329ABB0
	0x0329A9D0 ADRP X24, 0xE59000
	0x0329A9D4 ADRP X25, 0xE61000
	0x0329A9D8 ADRP X26, 0xE5B000
	0x0329A9DC LDR X24, [X24 + 0xE18]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+32]
	005 Compare X0, 0
	006 JumpIfNotEqual {15}
	007 Move X0, [X19+56]
	008 Compare X0, 0
	009 JumpIfEqual {18}
	010 Move X8, [X0]
	011 Move X9, [X8+424]
	012 Move X1, [X8+432]
	013 NotImplemented "Instruction BLR not yet implemented."
	014 Move [X19+32], X0
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Return X0
	018 Call 0x1C17F20

Method: System.Object get_MethodSignature()

Disassembly:
	0x0329A9E0 LDR X25, [X25 + 0xF10]
	0x0329A9E4 LDR X26, [X26 + 0x278]
	0x0329A9E8 LDR X8, [X21]
	0x0329A9EC LDR X1, [X24]
	0x0329A9F0 LDRH W9, [X8 + 0x12E]
	0x0329A9F4 CBZ X9, 0x329AA18
	0x0329A9F8 LDR X10, [X8 + 0xB0]
	0x0329A9FC ADD X10, X10, 0x8
	0x0329AA00 LDUR X11, [X10 - 0x8]
	0x0329AA04 CMP X11, X1
	0x0329AA08 B.EQ 0x329AA28
	0x0329AA0C SUBS X9, X9, 0x1
	0x0329AA10 ADD X10, X10, 0x10
	0x0329AA14 B.NE 0x329AA00
	0x0329AA18 MOV X0, X21
	0x0329AA1C MOV W2, W31
	0x0329AA20 BL 0x1C5C788
	0x0329AA24 B 0x329AA34
	0x0329AA28 LDRSW X9, [X10]
	0x0329AA2C ADD X8, X8, X9, 0x4, LSL
	0x0329AA30 ADD X0, X8, 0x138
	0x0329AA34 LDP X8, X1, [X0]
	0x0329AA38 MOV X0, X21
	0x0329AA3C BLR X8
	0x0329AA40 TBZ X0, 0x0, 0x329AB04
	0x0329AA44 LDR X8, [X21]
	0x0329AA48 LDR X1, [X24]
	0x0329AA4C LDRH W9, [X8 + 0x12E]
	0x0329AA50 CBZ X9, 0x329AA74
	0x0329AA54 LDR X10, [X8 + 0xB0]
	0x0329AA58 ADD X10, X10, 0x8
	0x0329AA5C LDUR X11, [X10 - 0x8]
	0x0329AA60 CMP X11, X1
	0x0329AA64 B.EQ 0x329AA84
	0x0329AA68 SUBS X9, X9, 0x1
	0x0329AA6C ADD X10, X10, 0x10
	0x0329AA70 B.NE 0x329AA5C
	0x0329AA74 MOVZ W2, 0x1
	0x0329AA78 MOV X0, X21
	0x0329AA7C BL 0x1C5C788
	0x0329AA80 B 0x329AA94
	0x0329AA84 LDR W9, [X10]
	0x0329AA88 ADD W9, W9, 0x1
	0x0329AA8C ADD X8, X8, W9, 0x4, SXTW
	0x0329AA90 ADD X0, X8, 0x138
	0x0329AA94 LDP X8, X1, [X0]
	0x0329AA98 MOV X0, X21
	0x0329AA9C BLR X8
	0x0329AAA0 CBZ X0, 0x329AB9C
	0x0329AAA4 LDR X8, [X0]
	0x0329AAA8 LDR X1, [X25]
	0x0329AAAC LDR X8, [X8 + 0x40]
	0x0329AAB0 LDR X9, [X1 + 0x40]
	0x0329AAB4 CMP X8, X9
	0x0329AAB8 B.NE 0x329AB98
	0x0329AABC BL 0x1C16E08
	0x0329AAC0 LDP X1, X22, [X0]
	0x0329AAC4 CBZ X1, 0x329AAD8
	0x0329AAC8 LDR X8, [X26]
	0x0329AACC LDR X9, [X1]
	0x0329AAD0 CMP X9, X8
	0x0329AAD4 B.NE 0x329ABA0
	0x0329AAD8 MOV X0, X20
	0x0329AADC BL 0x329A0E8
	0x0329AAE0 TBNZ X0, 0x0, 0x329A9E8
	0x0329AAE4 CBZ X19, 0x329ABAC
	0x0329AAE8 LDR X8, [X19]
	0x0329AAEC LDR X9, [X8 + 0x308]
	0x0329AAF0 LDR X2, [X8 + 0x310]
	0x0329AAF4 MOV X0, X19
	0x0329AAF8 MOV X1, X22
	0x0329AAFC BLR X9
	0x0329AB00 B 0x329A9E8
	0x0329AB04 MOV X20, X31
	0x0329AB08 LDR X1, [X23]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x1143000
	008 Move W8, [X20+1804]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE62000
	015 Move X0, [X0+3168]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1804], W8
	019 Move X8, [X19+48]
	020 Compare X8, 0
	021 JumpIfNotEqual {80}
	022 Move X0, [X19+56]
	023 Move X1, X31
	024 Move X2, X31
	025 Call MethodBase.op_Inequality, X0, X1
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {80}
	030 Move X0, [X19+56]
	031 Compare X0, 0
	032 JumpIfEqual {88}
	033 Move X8, [X0]
	034 Move X9, [X8+584]
	035 Move X1, [X8+592]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Compare X0, 0
	038 JumpIfEqual {88}
	039 Move X8, 0xE62000
	040 Move X8, [X8+3168]
	041 Move X20, X0
	042 Move W1, [X20+24]
	043 Move X0, [X8]
	044 Call 0x1C17D6C
	045 Move [X19+48], X0
	046 Move W8, [X20+24]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X21, X0
	049 Move W23, 4
	050 Move X0, [X20]
	051 Compare X0, 0
	052 JumpIfEqual {88}
	053 Move X8, [X0]
	054 Move X9, [X8+472]
	055 Move X1, [X8+480]
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Compare X21, 0
	058 JumpIfEqual {88}
	059 Move X22, X0
	060 Compare X0, 0
	061 JumpIfEqual {68}
	062 Move X8, [X21]
	063 Move X0, X22
	064 Move X1, [X8+64]
	065 Call 0x1C17E00
	066 Compare X0, 0
	067 JumpIfEqual {89}
	068 Move W8, [X21+24]
	069 Subtract X9, X23, 4
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move [X21], X22
	072 Move W8, [X20+24]
	073 Subtract W9, W23, 3
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X21, [X19+48]
	076 Add X23, X23, 1
	077 Subtract W9, W23, 4
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Call 0x1C17F28
	080 Move X0, [X19+48]
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X22, [X31+16]
	084 Move X21, [X31+24]
	085 Move X30, [X31+48]
	086 Move X23, [X31+56]
	087 Return X0
	088 Call 0x1C17F20
	089 Call 0x1C17F44
	090 Move X1, X31
	091 Call 0x1C17DEC

Method: System.Collections.IDictionary get_Properties()

Disassembly:
	0x0329868C ADRP X9, 0xE8C000
	0x03298690 LDR X9, [X9 + 0x8D0]
	0x03298694 CMP W8, 0x4
	0x03298698 LDR X9, [X9]
	0x0329869C STR X9, [X0 + 0x38]
	0x032986A0 B.LS 0x3298764
	0x032986A4 ADRP X9, 0xE8C000
	0x032986A8 LDR X9, [X9 + 0x8C0]
	0x032986AC CMP W8, 0x5
	0x032986B0 LDR X9, [X9]
	0x032986B4 STR X9, [X0 + 0x40]
	0x032986B8 B.EQ 0x3298764

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+88]
	005 Compare X0, 0
	006 JumpIfNotEqual {13}
	007 Move X8, [X19]
	008 Move X0, X19
	009 Move X9, [X8+664]
	010 Move X1, [X8+672]
	011 NotImplemented "Instruction BLR not yet implemented."
	012 Move X0, [X19+88]
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Return X0

Method: System.Void InitDictionary()

Disassembly:
	0x0329AB0C MOV X0, X21
	0x0329AB10 BL 0x1C16E00
	0x0329AB14 CBZ X0, 0x329AB74
	0x0329AB18 LDR X8, [X0]
	0x0329AB1C LDR X1, [X23]
	0x0329AB20 MOV X21, X0
	0x0329AB24 LDRH W9, [X8 + 0x12E]
	0x0329AB28 CBZ X9, 0x329AB4C
	0x0329AB2C LDR X10, [X8 + 0xB0]
	0x0329AB30 ADD X10, X10, 0x8
	0x0329AB34 LDUR X11, [X10 - 0x8]
	0x0329AB38 CMP X11, X1
	0x0329AB3C B.EQ 0x329AB5C
	0x0329AB40 SUBS X9, X9, 0x1
	0x0329AB44 ADD X10, X10, 0x10
	0x0329AB48 B.NE 0x329AB34
	0x0329AB4C MOV X0, X21
	0x0329AB50 MOV W2, W31
	0x0329AB54 BL 0x1C5C788
	0x0329AB58 B 0x329AB68
	0x0329AB5C LDRSW X9, [X10]
	0x0329AB60 ADD X8, X8, X9, 0x4, LSL
	0x0329AB64 ADD X0, X8, 0x138
	0x0329AB68 LDP X8, X1, [X0]
	0x0329AB6C MOV X0, X21
	0x0329AB70 BLR X8
	0x0329AB74 CBNZ X20, 0x329ABB4
	0x0329AB78 MOV X0, X19
	0x0329AB7C LDP X20, X19, [X31 + 0x40]
	0x0329AB80 LDP X22, X21, [X31 + 0x30]
	0x0329AB84 LDP X24, X23, [X31 + 0x20]
	0x0329AB88 LDP X26, X25, [X31 + 0x10]
	0x0329AB8C LDR X30, [X31], #0x50

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1143000
	006 Move X21, 0xE8B000
	007 Move W8, [X20+1805]
	008 Move X21, [X21+2408]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE8B000
	015 Move X0, [X0+2408]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1805], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X19
	022 Move X20, X0
	023 Call MCMDictionary..ctor, X0, X1
	024 Move [X19+88], X20
	025 Compare X20, 0
	026 JumpIfEqual {42}
	027 Move X0, [X20+16]
	028 Compare X0, 0
	029 JumpIfNotEqual {36}
	030 Move X8, [X20]
	031 Move X0, X20
	032 Move X9, [X8+584]
	033 Move X1, [X8+592]
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move [X20+16], X0
	036 Move [X19+96], X0
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return 
	042 Call 0x1C17F20

Method: System.String get_TypeName()

Disassembly:
	0x0329AC0C MOV X21, X0
	0x0329AC10 CBZ X0, 0x329AC6C
	0x0329AC14 LDR X8, [X21]
	0x0329AC18 LDR X1, [X23]
	0x0329AC1C LDRH W9, [X8 + 0x12E]
	0x0329AC20 CBZ X9, 0x329AC44
	0x0329AC24 LDR X10, [X8 + 0xB0]
	0x0329AC28 ADD X10, X10, 0x8
	0x0329AC2C LDUR X11, [X10 - 0x8]
	0x0329AC30 CMP X11, X1
	0x0329AC34 B.EQ 0x329AC54
	0x0329AC38 SUBS X9, X9, 0x1
	0x0329AC3C ADD X10, X10, 0x10
	0x0329AC40 B.NE 0x329AC2C
	0x0329AC44 MOV X0, X21
	0x0329AC48 MOV W2, W31
	0x0329AC4C BL 0x1C5C788
	0x0329AC50 B 0x329AC60

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+24]
	005 Compare X0, 0
	006 JumpIfNotEqual {21}
	007 Move X0, [X19+56]
	008 Compare X0, 0
	009 JumpIfEqual {24}
	010 Move X8, [X0]
	011 Move X9, [X8+440]
	012 Move X1, [X8+448]
	013 NotImplemented "Instruction BLR not yet implemented."
	014 Compare X0, 0
	015 JumpIfEqual {24}
	016 Move X8, [X0]
	017 Move X9, [X8+728]
	018 Move X1, [X8+736]
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move [X19+24], X0
	021 Move X30, [X31+16]
	022 Move X19, [X31+24]
	023 Return X0
	024 Call 0x1C17F20

Method: System.String get_Uri()

Disassembly:
	0x0329AC54 LDRSW X9, [X10]
	0x0329AC58 ADD X8, X8, X9, 0x4, LSL

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_Uri(System.String value)

Disassembly:
	0x0329AC5C ADD X0, X8, 0x138
	0x0329AC60 LDP X8, X1, [X0]

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.String System.Runtime.Remoting.Messaging.IInternalMessage.get_Uri()

Disassembly:
	0x0329AC64 MOV X0, X21
	0x0329AC68 BLR X8

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void System.Runtime.Remoting.Messaging.IInternalMessage.set_Uri(System.String value)

Disassembly:
	0x0329AC6C CBNZ X20, 0x329AC78
	0x0329AC70 MOV X0, X19

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.Object GetArg(System.Int32 argNum)

Disassembly:
	0x0329AC74 BL 0x1D2C690
	0x0329AC78 MOV X0, X20
	0x0329AC7C BL 0x1C16F18
	0x0329AC80 BL 0x1990590
	0x0329AC84 STP X30, X21, [X31 - 0x20]!
	0x0329AC88 STP X20, X19, [X31 + 0x10]
	0x0329AC8C ADRP X21, 0x1142000
	0x0329AC90 LDRB W8, [X21 + 0x71C]
	0x0329AC94 MOV X19, X1
	0x0329AC98 MOV X20, X0
	0x0329AC9C TBNZ X8, 0x0, 0x329ACC0
	0x0329ACA0 ADRP X0, 0xE59000

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+40]
	003 Compare X8, 0
	004 JumpIfEqual {11}
	005 Move W9, [X8+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Add X8, X8, W1
	008 Move X0, [X8+32]
	009 Move X30, [X31+16]
	010 Return X0
	011 Call 0x1C17F20
	012 Call 0x1C17F28

Method: System.Void Init()

Disassembly:
	0x0329ACA4 LDR X0, [X0 + 0x818]

ISIL:
	001 Return 

Method: System.Void ResolveMethod()

Disassembly:
	0x0329A464 BL 0x1C16CF4
	0x0329A468 ADRP X0, 0xE61000
	0x0329A46C LDR X0, [X0 + 0xDB8]
	0x0329A470 BL 0x1C16CF4
	0x0329A474 ADRP X0, 0xE59000
	0x0329A478 LDR X0, [X0 + 0xE18]
	0x0329A47C BL 0x1C16CF4
	0x0329A480 ADRP X0, 0xE5B000
	0x0329A484 LDR X0, [X0 + 0x278]
	0x0329A488 BL 0x1C16CF4
	0x0329A48C MOVZ W8, 0x1
	0x0329A490 STRB W8, [X19 + 0x719]
	0x0329A494 LDR X0, [X21]
	0x0329A498 BL 0x1C16F10
	0x0329A49C MOV X1, X31
	0x0329A4A0 MOV X19, X0
	0x0329A4A4 BL 0x3351F5C
	0x0329A4A8 LDR X8, [X20 + 0x20]
	0x0329A4AC CBZ X8, 0x329A50C
	0x0329A4B0 ADRP X24, 0xE59000
	0x0329A4B4 ADRP X22, 0xE61000
	0x0329A4B8 ADRP X23, 0xE59000
	0x0329A4BC LDR X24, [X24 + 0x818]
	0x0329A4C0 LDR X22, [X22 + 0xDB8]
	0x0329A4C4 LDR X23, [X23 + 0xE00]
	0x0329A4C8 MOV X21, X31
	0x0329A4CC LDR W9, [X8 + 0x18]
	0x0329A4D0 CMP X21, W9, SXTW
	0x0329A4D4 B.GE 0x329A510
	0x0329A4D8 CMP X21, X9
	0x0329A4DC B.CS 0x329A778
	0x0329A4E0 CBZ X19, 0x329A50C
	0x0329A4E4 LDR X9, [X19]
	0x0329A4E8 ADD X8, X8, X21, 0x3, LSL
	0x0329A4EC LDR X1, [X8 + 0x20]
	0x0329A4F0 MOV X0, X19
	0x0329A4F4 LDR X8, [X9 + 0x308]
	0x0329A4F8 LDR X2, [X9 + 0x310]
	0x0329A4FC BLR X8
	0x0329A500 LDR X8, [X20 + 0x20]
	0x0329A504 ADD X21, X21, 0x1
	0x0329A508 CBNZ X8, 0x329A4CC
	0x0329A50C BL 0x1C16F20
	0x0329A510 LDR X21, [X20 + 0x10]
	0x0329A514 CBZ X21, 0x329A760
	0x0329A518 LDR X8, [X21]
	0x0329A51C LDR X1, [X24]
	0x0329A520 LDRH W9, [X8 + 0x12E]
	0x0329A524 CBZ X9, 0x329A548
	0x0329A528 LDR X10, [X8 + 0xB0]
	0x0329A52C ADD X10, X10, 0x8
	0x0329A530 LDUR X11, [X10 - 0x8]
	0x0329A534 CMP X11, X1
	0x0329A538 B.EQ 0x329A558
	0x0329A53C SUBS X9, X9, 0x1
	0x0329A540 ADD X10, X10, 0x10
	0x0329A544 B.NE 0x329A530
	0x0329A548 MOVZ W2, 0x2
	0x0329A54C MOV X0, X21
	0x0329A550 BL 0x1C5C788
	0x0329A554 B 0x329A568
	0x0329A558 LDR W9, [X10]
	0x0329A55C ADD W9, W9, 0x2
	0x0329A560 ADD X8, X8, W9, 0x4, SXTW
	0x0329A564 ADD X0, X8, 0x138
	0x0329A568 LDP X8, X1, [X0]
	0x0329A56C MOV X0, X21
	0x0329A570 BLR X8
	0x0329A574 CBZ X0, 0x329A50C
	0x0329A578 LDR X8, [X0]
	0x0329A57C LDR X1, [X22]
	0x0329A580 MOV X21, X0
	0x0329A584 LDRH W9, [X8 + 0x12E]
	0x0329A588 CBZ X9, 0x329A5AC
	0x0329A58C LDR X10, [X8 + 0xB0]
	0x0329A590 ADD X10, X10, 0x8
	0x0329A594 LDUR X11, [X10 - 0x8]
	0x0329A598 CMP X11, X1
	0x0329A59C B.EQ 0x329A5BC
	0x0329A5A0 SUBS X9, X9, 0x1
	0x0329A5A4 ADD X10, X10, 0x10
	0x0329A5A8 B.NE 0x329A594
	0x0329A5AC MOV X0, X21
	0x0329A5B0 MOV W2, W31
	0x0329A5B4 BL 0x1C5C788
	0x0329A5B8 B 0x329A5C8
	0x0329A5BC LDRSW X9, [X10]
	0x0329A5C0 ADD X8, X8, X9, 0x4, LSL
	0x0329A5C4 ADD X0, X8, 0x138
	0x0329A5C8 LDP X8, X1, [X0]
	0x0329A5CC MOV X0, X21
	0x0329A5D0 BLR X8
	0x0329A5D4 MOV X21, X0
	0x0329A5D8 CBZ X0, 0x329A788
	0x0329A5DC ADRP X24, 0xE59000
	0x0329A5E0 ADRP X25, 0xE5B000
	0x0329A5E4 LDR X24, [X24 + 0xE18]
	0x0329A5E8 LDR X25, [X25 + 0x278]
	0x0329A5EC LDR X8, [X21]
	0x0329A5F0 LDR X1, [X24]
	0x0329A5F4 LDRH W9, [X8 + 0x12E]
	0x0329A5F8 CBZ X9, 0x329A61C
	0x0329A5FC LDR X10, [X8 + 0xB0]
	0x0329A600 ADD X10, X10, 0x8
	0x0329A604 LDUR X11, [X10 - 0x8]
	0x0329A608 CMP X11, X1
	0x0329A60C B.EQ 0x329A62C
	0x0329A610 SUBS X9, X9, 0x1
	0x0329A614 ADD X10, X10, 0x10
	0x0329A618 B.NE 0x329A604
	0x0329A61C MOV X0, X21
	0x0329A620 MOV W2, W31
	0x0329A624 BL 0x1C5C788
	0x0329A628 B 0x329A638
	0x0329A62C LDRSW X9, [X10]
	0x0329A630 ADD X8, X8, X9, 0x4, LSL
	0x0329A634 ADD X0, X8, 0x138
	0x0329A638 LDP X8, X1, [X0]
	0x0329A63C MOV X0, X21
	0x0329A640 BLR X8
	0x0329A644 TBZ X0, 0x0, 0x329A6EC
	0x0329A648 LDR X8, [X21]
	0x0329A64C LDR X1, [X24]
	0x0329A650 LDRH W9, [X8 + 0x12E]
	0x0329A654 CBZ X9, 0x329A678
	0x0329A658 LDR X10, [X8 + 0xB0]
	0x0329A65C ADD X10, X10, 0x8
	0x0329A660 LDUR X11, [X10 - 0x8]
	0x0329A664 CMP X11, X1
	0x0329A668 B.EQ 0x329A688
	0x0329A66C SUBS X9, X9, 0x1
	0x0329A670 ADD X10, X10, 0x10
	0x0329A674 B.NE 0x329A660
	0x0329A678 MOVZ W2, 0x1
	0x0329A67C MOV X0, X21
	0x0329A680 BL 0x1C5C788
	0x0329A684 B 0x329A698
	0x0329A688 LDR W9, [X10]
	0x0329A68C ADD W9, W9, 0x1
	0x0329A690 ADD X8, X8, W9, 0x4, SXTW
	0x0329A694 ADD X0, X8, 0x138
	0x0329A698 LDP X8, X1, [X0]
	0x0329A69C MOV X0, X21
	0x0329A6A0 BLR X8
	0x0329A6A4 MOV X22, X0
	0x0329A6A8 CBZ X0, 0x329A6BC
	0x0329A6AC LDR X1, [X25]
	0x0329A6B0 LDR X8, [X22]
	0x0329A6B4 CMP X8, X1
	0x0329A6B8 B.NE 0x329A77C
	0x0329A6BC MOV X0, X20
	0x0329A6C0 MOV X1, X22
	0x0329A6C4 BL 0x329A0E8
	0x0329A6C8 TBNZ X0, 0x0, 0x329A5EC
	0x0329A6CC CBZ X19, 0x329A784
	0x0329A6D0 LDR X8, [X19]
	0x0329A6D4 LDR X9, [X8 + 0x308]
	0x0329A6D8 LDR X2, [X8 + 0x310]
	0x0329A6DC MOV X0, X19
	0x0329A6E0 MOV X1, X22
	0x0329A6E4 BLR X9
	0x0329A6E8 B 0x329A5EC
	0x0329A6EC MOV X20, X31
	0x0329A6F0 LDR X1, [X23]
	0x0329A6F4 MOV X0, X21
	0x0329A6F8 BL 0x1C16E00
	0x0329A6FC CBZ X0, 0x329A75C
	0x0329A700 LDR X8, [X0]
	0x0329A704 LDR X1, [X23]
	0x0329A708 MOV X21, X0
	0x0329A70C LDRH W9, [X8 + 0x12E]
	0x0329A710 CBZ X9, 0x329A734
	0x0329A714 LDR X10, [X8 + 0xB0]
	0x0329A718 ADD X10, X10, 0x8
	0x0329A71C LDUR X11, [X10 - 0x8]
	0x0329A720 CMP X11, X1
	0x0329A724 B.EQ 0x329A744
	0x0329A728 SUBS X9, X9, 0x1
	0x0329A72C ADD X10, X10, 0x10
	0x0329A730 B.NE 0x329A71C
	0x0329A734 MOV X0, X21
	0x0329A738 MOV W2, W31
	0x0329A73C BL 0x1C5C788
	0x0329A740 B 0x329A750
	0x0329A744 LDRSW X9, [X10]
	0x0329A748 ADD X8, X8, X9, 0x4, LSL
	0x0329A74C ADD X0, X8, 0x138
	0x0329A750 LDP X8, X1, [X0]
	0x0329A754 MOV X0, X21
	0x0329A758 BLR X8
	0x0329A75C CBNZ X20, 0x329A78C
	0x0329A760 MOV X0, X19
	0x0329A764 LDP X20, X19, [X31 + 0x30]
	0x0329A768 LDP X22, X21, [X31 + 0x20]
	0x0329A76C LDP X24, X23, [X31 + 0x10]
	0x0329A770 LDP X30, X25, [X31], #0x40
	0x0329A774 RET
	0x0329A778 BL 0x1C16F28
	0x0329A77C MOV X0, X22
	0x0329A780 BL 0x1C171E0
	0x0329A784 BL 0x1C16F20
	0x0329A788 BL 0x1C16F20
	0x0329A78C MOV X0, X20
	0x0329A790 BL 0x1C16F18
	0x0329A794 B 0x329A7AC
	0x0329A798 B 0x329A7AC
	0x0329A79C B 0x329A7AC
	0x0329A7A0 B 0x329A7AC
	0x0329A7A4 B 0x329A7AC
	0x0329A7A8 B 0x329A7AC
	0x0329A7AC MOV X22, X0
	0x0329A7B0 CMP W1, 0x1
	0x0329A7B4 B.NE 0x329A7CC
	0x0329A7B8 MOV X0, X22
	0x0329A7BC BL 0x3EB1AD0
	0x0329A7C0 LDR X20, [X0]
	0x0329A7C4 BL 0x3EB1AE0
	0x0329A7C8 B 0x329A6F0
	0x0329A7CC MOV X20, X31
	0x0329A7D0 B 0x329A7D8
	0x0329A7D4 MOV X22, X0
	0x0329A7D8 LDR X1, [X23]
	0x0329A7DC MOV X0, X21
	0x0329A7E0 BL 0x1C16E00
	0x0329A7E4 MOV X19, X0
	0x0329A7E8 CBZ X0, 0x329A844
	0x0329A7EC LDR X8, [X19]
	0x0329A7F0 LDR X1, [X23]
	0x0329A7F4 LDRH W9, [X8 + 0x12E]
	0x0329A7F8 CBZ X9, 0x329A81C
	0x0329A7FC LDR X10, [X8 + 0xB0]
	0x0329A800 ADD X10, X10, 0x8
	0x0329A804 LDUR X11, [X10 - 0x8]
	0x0329A808 CMP X11, X1
	0x0329A80C B.EQ 0x329A82C
	0x0329A810 SUBS X9, X9, 0x1
	0x0329A814 ADD X10, X10, 0x10
	0x0329A818 B.NE 0x329A804
	0x0329A81C MOV X0, X19
	0x0329A820 MOV W2, W31
	0x0329A824 BL 0x1C5C788
	0x0329A828 B 0x329A838
	0x0329A82C LDRSW X9, [X10]
	0x0329A830 ADD X8, X8, X9, 0x4, LSL
	0x0329A834 ADD X0, X8, 0x138
	0x0329A838 LDP X8, X1, [X0]
	0x0329A83C MOV X0, X19
	0x0329A840 BLR X8
	0x0329A844 CBNZ X20, 0x329A850
	0x0329A848 MOV X0, X22
	0x0329A84C BL 0x1D2C690
	0x0329A850 MOV X0, X20
	0x0329A854 BL 0x1C16F18
	0x0329A858 BL 0x1990590
	0x0329A85C STR X30, [X31 - 0x50]!
	0x0329A860 STP X26, X25, [X31 + 0x10]
	0x0329A864 STP X24, X23, [X31 + 0x20]
	0x0329A868 STP X22, X21, [X31 + 0x30]
	0x0329A86C STP X20, X19, [X31 + 0x40]
	0x0329A870 ADRP X19, 0x1142000
	0x0329A874 ADRP X21, 0xE86000
	0x0329A878 LDRB W8, [X19 + 0x71A]
	0x0329A87C LDR X21, [X21 + 0xBA0]
	0x0329A880 MOV X20, X0
	0x0329A884 TBNZ X8, 0x0, 0x329A8D8
	0x0329A888 ADRP X0, 0xE86000
	0x0329A88C LDR X0, [X0 + 0xBA0]
	0x0329A890 BL 0x1C16CF4
	0x0329A894 ADRP X0, 0xE61000
	0x0329A898 LDR X0, [X0 + 0xF10]
	0x0329A89C BL 0x1C16CF4
	0x0329A8A0 ADRP X0, 0xE59000
	0x0329A8A4 LDR X0, [X0 + 0x818]
	0x0329A8A8 BL 0x1C16CF4
	0x0329A8AC ADRP X0, 0xE59000
	0x0329A8B0 LDR X0, [X0 + 0xE00]
	0x0329A8B4 BL 0x1C16CF4
	0x0329A8B8 ADRP X0, 0xE59000
	0x0329A8BC LDR X0, [X0 + 0xE18]
	0x0329A8C0 BL 0x1C16CF4
	0x0329A8C4 ADRP X0, 0xE5B000
	0x0329A8C8 LDR X0, [X0 + 0x278]
	0x0329A8CC BL 0x1C16CF4
	0x0329A8D0 MOVZ W8, 0x1
	0x0329A8D4 STRB W8, [X19 + 0x71A]
	0x0329A8D8 LDR X0, [X21]
	0x0329A8DC BL 0x1C16F10
	0x0329A8E0 MOV X1, X31
	0x0329A8E4 MOV X19, X0
	0x0329A8E8 BL 0x3351F5C
	0x0329A8EC LDR X8, [X20 + 0x20]
	0x0329A8F0 CBZ X8, 0x329A960
	0x0329A8F4 ADRP X22, 0xE59000
	0x0329A8F8 ADRP X23, 0xE59000
	0x0329A8FC LDR X22, [X22 + 0x818]
	0x0329A900 LDR X23, [X23 + 0xE00]
	0x0329A904 MOV X21, X31
	0x0329A908 LDR W9, [X8 + 0x18]
	0x0329A90C CMP X21, W9, SXTW
	0x0329A910 B.GE 0x329A964
	0x0329A914 CMP X21, X9
	0x0329A918 B.CS 0x329AB94
	0x0329A91C LDR X9, [X20]
	0x0329A920 ADD X8, X8, X21, 0x3, LSL
	0x0329A924 LDR X1, [X8 + 0x20]
	0x0329A928 MOV X0, X20
	0x0329A92C LDR X8, [X9 + 0x258]
	0x0329A930 LDR X2, [X9 + 0x260]
	0x0329A934 BLR X8
	0x0329A938 CBZ X19, 0x329A960
	0x0329A93C LDR X8, [X19]
	0x0329A940 MOV X1, X0
	0x0329A944 MOV X0, X19
	0x0329A948 LDR X9, [X8 + 0x308]
	0x0329A94C LDR X2, [X8 + 0x310]
	0x0329A950 BLR X9
	0x0329A954 LDR X8, [X20 + 0x20]
	0x0329A958 ADD X21, X21, 0x1
	0x0329A95C CBNZ X8, 0x329A908
	0x0329A960 BL 0x1C16F20
	0x0329A964 LDR X21, [X20 + 0x10]
	0x0329A968 CBZ X21, 0x329AB78
	0x0329A96C LDR X8, [X21]
	0x0329A970 LDR X1, [X22]
	0x0329A974 LDRH W9, [X8 + 0x12E]
	0x0329A978 CBZ X9, 0x329A99C
	0x0329A97C LDR X10, [X8 + 0xB0]
	0x0329A980 ADD X10, X10, 0x8
	0x0329A984 LDUR X11, [X10 - 0x8]
	0x0329A988 CMP X11, X1
	0x0329A98C B.EQ 0x329A9AC
	0x0329A990 SUBS X9, X9, 0x1
	0x0329A994 ADD X10, X10, 0x10
	0x0329A998 B.NE 0x329A984
	0x0329A99C MOVZ W2, 0x6
	0x0329A9A0 MOV X0, X21
	0x0329A9A4 BL 0x1C5C788
	0x0329A9A8 B 0x329A9BC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x1143000
	010 Move X24, 0xE8A000
	011 Move W8, [X20+1806]
	012 Move X24, [X24+3688]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xE8B000
	019 Move X0, [X0+632]
	020 Call 0x1C17CF4
	021 Move X0, 0xE8A000
	022 Move X0, [X0+3688]
	023 Call 0x1C17CF4
	024 Move X0, 0xE5A000
	025 Move X0, [X0+1728]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+1806], W8
	029 Move X0, [X24]
	030 Move X20, [X19+16]
	031 Move W8, [X0+224]
	032 Compare X20, 0
	033 JumpIfEqual {163}
	034 Move X25, 0xE5A000
	035 Move X25, [X25+1728]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, X20
	040 Move X1, X31
	041 Call RemotingServices.GetServerTypeForUri, X0
	042 Move X8, [X25]
	043 Move X20, X0
	044 Move W9, [X8+224]
	045 Compare W9, 0
	046 JumpIfNotEqual {49}
	047 Move X0, X8
	048 Call 0x1C17DFC
	049 Move X0, X20
	050 Move X1, X31
	051 Move X2, X31
	052 Call Type.op_Equality, X0, X1
	053 Move X21, [X19+24]
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {236}
	058 Move X1, X21
	059 Move X2, X20
	060 Call MethodCall.CastTo, X0, X1, X2
	061 Move X8, [X25]
	062 Move X21, X0
	063 Move W9, [X8+224]
	064 Compare W9, 0
	065 JumpIfNotEqual {68}
	066 Move X0, X8
	067 Call 0x1C17DFC
	068 Move X0, X21
	069 Move X1, X31
	070 Move X2, X31
	071 Call Type.op_Equality, X0, X1
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfEqual {241}
	076 Move X0, [X24]
	077 Move X22, [X19+32]
	078 Move X23, [X19+48]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17DFC
	083 Move X0, X21
	084 Move X1, X22
	085 Move X2, X23
	086 Move X3, X31
	087 Call RemotingServices.GetMethodBaseFromName, X0, X1, X2
	088 Move X1, X31
	089 Move X2, X31
	090 Move [X19+56], X0
	091 Call MethodBase.op_Equality, X0, X1
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfEqual {297}
	096 Move X0, [X25]
	097 Move W8, [X0+224]
	098 Compare W8, 0
	099 JumpIfNotEqual {101}
	100 Call 0x1C17DFC
	101 Move X0, X21
	102 Move X1, X20
	103 Move X2, X31
	104 Call Type.op_Inequality, X0, X1
	105 Move TEMP, X0
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfNotEqual {177}
	109 Compare X21, 0
	110 JumpIfEqual {235}
	111 Move X0, X21
	112 Move X1, X31
	113 Call Type.get_IsInterface, X0
	114 Move TEMP, X0
	115 And TEMP, TEMP, 1
	116 Compare TEMP, 1
	117 JumpIfNotEqual {177}
	118 Compare X20, 0
	119 JumpIfEqual {235}
	120 Move X0, X20
	121 Move X1, X31
	122 Call Type.get_IsInterface, X0
	123 Move TEMP, X0
	124 And TEMP, TEMP, 1
	125 Compare TEMP, 1
	126 JumpIfEqual {177}
	127 Move X0, [X24]
	128 Move X21, [X19+56]
	129 Move W8, [X0+224]
	130 Compare W8, 0
	131 JumpIfNotEqual {133}
	132 Call 0x1C17DFC
	133 Move X0, X20
	134 Move X1, X21
	135 Move X2, X31
	136 Call RemotingServices.GetVirtualMethod, X0, X1
	137 Move X1, X31
	138 Move X2, X31
	139 Move [X19+56], X0
	140 Call MethodBase.op_Equality, X0, X1
	141 Move TEMP, X0
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfNotEqual {177}
	145 Move X0, 0xE8B000
	146 Move X19, [X19+32]
	147 Move X0, [X0+2344]
	148 Call 0x1C17D08
	149 Move X21, X0
	150 Move X0, 0xE8B000
	151 Move X0, [X0+2352]
	152 Call 0x1C17D08
	153 Move X8, [X20]
	154 Move X22, X0
	155 Move X0, X20
	156 Move X9, [X8+360]
	157 Move X1, [X8+368]
	158 NotImplemented "Instruction BLR not yet implemented."
	159 Move X3, X0
	160 Move X0, X22
	161 Move X1, X19
	162 Move X2, X21
	163 Compare W8, 0
	164 JumpIfNotEqual {166}
	165 Call 0x1C17DFC
	166 Move X0, X19
	167 Move X1, X31
	168 Call RemotingServices.GetMethodBaseFromMethodMessage, X0
	169 Move X1, X31
	170 Move X2, X31
	171 Move [X19+56], X0
	172 Call MethodBase.op_Equality, X0, X1
	173 Move TEMP, X0
	174 And TEMP, TEMP, 1
	175 Compare TEMP, 1
	176 JumpIfEqual {311}
	177 Move X0, [X19+56]
	178 Compare X0, 0
	179 JumpIfEqual {235}
	180 Move X8, [X0]
	181 Move X9, [X8+728]
	182 Move X1, [X8+736]
	183 NotImplemented "Instruction BLR not yet implemented."
	184 Move TEMP, X0
	185 And TEMP, TEMP, 1
	186 Compare TEMP, 1
	187 JumpIfNotEqual {226}
	188 Move X0, [X19+56]
	189 Compare X0, 0
	190 JumpIfEqual {235}
	191 Move X8, [X0]
	192 Move X9, [X8+776]
	193 Move X1, [X8+784]
	194 NotImplemented "Instruction BLR not yet implemented."
	195 Move TEMP, X0
	196 And TEMP, TEMP, 1
	197 Compare TEMP, 1
	198 JumpIfNotEqual {226}
	199 Move X0, X19
	200 Call MethodCall.get_GenericArguments, X0
	201 Compare X0, 0
	202 JumpIfEqual {372}
	203 Move X20, [X19+56]
	204 Move X0, X19
	205 Call MethodCall.get_GenericArguments, X0
	206 Compare X20, 0
	207 JumpIfEqual {235}
	208 Move X9, 0xE8B000
	209 Move X9, [X9+632]
	210 Move X8, [X20]
	211 Move X1, [X9]
	212 Move W10, [X8+304]
	213 Move W9, [X1+304]
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Move X10, [X8+200]
	216 Add X9, X10, X9
	217 NotImplemented "Instruction LDUR not yet implemented."
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Move X9, [X8+984]
	220 Move X2, [X8+992]
	221 Move X3, X0
	222 Move X0, X20
	223 Move X1, X3
	224 NotImplemented "Instruction BLR not yet implemented."
	225 Move [X19+56], X0
	226 Move X20, [X31+48]
	227 Move X19, [X31+56]
	228 Move X22, [X31+32]
	229 Move X21, [X31+40]
	230 Move X24, [X31+16]
	231 Move X23, [X31+24]
	232 Move X30, [X31+64]
	233 Move X25, [X31+72]
	234 Return 
	235 Call 0x1C17F20
	236 Compare X21, 0
	237 JumpIfNotEqual {321}
	238 Move X0, 0xE5A000
	239 Move X0, [X0+2440]
	240 Call 0x1C17D08
	241 Move X0, 0xE5A000
	242 Move X0, [X0+2760]
	243 Call 0x1C17D08
	244 Move W1, 5
	245 Call 0x1C17D6C
	246 Move X21, X0
	247 Call 0x19913C0
	248 Move X0, 0xE8B000
	249 Move X0, [X0+2360]
	250 Call 0x1C17D08
	251 Move X2, X0
	252 Move X0, X21
	253 Move X1, X31
	254 Call 0x1994444
	255 Move X19, [X19+24]
	256 Move X0, X21
	257 Call 0x19913C0
	258 Move W1, 1
	259 Move X0, X21
	260 Move X2, X19
	261 Call 0x1994444
	262 Move X0, X21
	263 Call 0x19913C0
	264 Move X0, 0xE8B000
	265 Move X0, [X0+2368]
	266 Call 0x1C17D08
	267 Move X2, X0
	268 Move W1, 2
	269 Move X0, X21
	270 Call 0x1994444
	271 Move X0, X20
	272 Call 0x19913C0
	273 Move X8, [X20]
	274 Move X0, X20
	275 Move X9, [X8+744]
	276 Move X1, [X8+752]
	277 NotImplemented "Instruction BLR not yet implemented."
	278 Move X19, X0
	279 Move X0, X21
	280 Call 0x19913C0
	281 Move W1, 3
	282 Move X0, X21
	283 Move X2, X19
	284 Call 0x1994444
	285 Move X0, X21
	286 Call 0x19913C0
	287 Move X0, 0xE62000
	288 Move X0, [X0+2480]
	289 Call 0x1C17D08
	290 Move X2, X0
	291 Move W1, 4
	292 Move X0, X21
	293 Call 0x1994444
	294 Move X0, X21
	295 Move X1, X31
	296 Call String.Concat, X0
	297 Move X0, 0xE8B000
	298 Move X19, [X19+32]
	299 Move X0, [X0+2344]
	300 Call 0x1C17D08
	301 Move X20, X0
	302 Move X0, 0xE8B000
	303 Move X0, [X0+2352]
	304 Call 0x1C17D08
	305 Move X22, X0
	306 Compare X21, 0
	307 JumpIfNotEqual {346}
	308 Move X3, X31
	309 Move X0, X20
	310 Call 0x1C181E0
	311 Move X20, [X19+32]
	312 Move X0, X19
	313 Call MethodCall.get_TypeName, X0
	314 Move X19, X0
	315 Move X0, 0xE8B000
	316 Move X0, [X0+2352]
	317 Call 0x1C17D08
	318 Move X21, X0
	319 Move X0, 0xE8B000
	320 Move X0, [X0+2344]
	321 Move X0, 0xE5B000
	322 Move X0, [X0+1552]
	323 Call 0x1C17D08
	324 Move X20, X0
	325 Move X0, 0xE5B000
	326 Move X0, [X0+1544]
	327 Call 0x1C17D08
	328 Move X2, X0
	329 Move X0, X20
	330 Move X1, X21
	331 Move X3, X31
	332 Call String.Concat, X0, X1, X2
	333 Move X20, X0
	334 Move X0, 0xE8B000
	335 Move X19, [X19+16]
	336 Move X0, [X0+2376]
	337 Call 0x1C17D08
	338 Move X21, X0
	339 Move X0, 0xE8B000
	340 Move X0, [X0+2384]
	341 Call 0x1C17D08
	342 Move X2, X0
	343 Move X0, X21
	344 Move X1, X20
	345 Move X3, X19
	346 Move X8, [X21]
	347 Move X0, X21
	348 Move X9, [X8+360]
	349 Move X1, [X8+368]
	350 NotImplemented "Instruction BLR not yet implemented."
	351 Move X3, X0
	352 Move X0, X22
	353 Move X1, X19
	354 Move X2, X20
	355 Move X4, X31
	356 Call String.Concat, X0, X1, X2, X3
	357 Move X19, X0
	358 Move X0, 0xE8A000
	359 Move X0, [X0+3360]
	360 Call 0x1C17D08
	361 Call 0x1C17F10
	362 Move X1, X19
	363 Move X2, X31
	364 Move X20, X0
	365 Call RemotingException..ctor, X0, X1
	366 Move X0, 0xE8B000
	367 Move X0, [X0+2392]
	368 Call 0x1C17D08
	369 Move X1, X0
	370 Move X0, X20
	371 Call 0x1C17DEC
	372 Move X0, 0xE8A000
	373 Move X0, [X0+3360]
	374 Call 0x1C17D08
	375 Call 0x1C17F10
	376 Move X19, X0
	377 Move X0, 0xE8B000
	378 Move X0, [X0+2400]
	379 Call 0x1C17D08
	380 Move X1, X0
	381 Move X0, X19
	382 Move X2, X31
	383 Call RemotingException..ctor, X0, X1
	384 Move X0, 0xE8B000
	385 Move X0, [X0+2392]
	386 Call 0x1C17D08
	387 Move X1, X0
	388 Move X0, X19
	389 Call 0x1C17DEC

Method: System.Type CastTo(System.String clientType, System.Type serverType)

Disassembly:
	0x0329ACA8 BL 0x1C16CF4
	0x0329ACAC ADRP X0, 0xE5B000
	0x0329ACB0 LDR X0, [X0 + 0x278]
	0x0329ACB4 BL 0x1C16CF4
	0x0329ACB8 MOVZ W8, 0x1
	0x0329ACBC STRB W8, [X21 + 0x71C]
	0x0329ACC0 CBZ X19, 0x329ACDC
	0x0329ACC4 ADRP X8, 0xE5B000
	0x0329ACC8 LDR X8, [X8 + 0x278]
	0x0329ACCC LDR X1, [X8]
	0x0329ACD0 LDR X8, [X19]
	0x0329ACD4 CMP X8, X1
	0x0329ACD8 B.NE 0x329ADB8
	0x0329ACDC LDR X8, [X20 + 0x20]
	0x0329ACE0 CBZ X8, 0x329AD20
	0x0329ACE4 MOV X21, X31
	0x0329ACE8 LDR W9, [X8 + 0x18]
	0x0329ACEC CMP X21, W9, SXTW
	0x0329ACF0 B.GE 0x329AD24
	0x0329ACF4 CMP X21, X9
	0x0329ACF8 B.CS 0x329ADB4
	0x0329ACFC ADD X8, X8, X21, 0x3, LSL
	0x0329AD00 LDR X0, [X8 + 0x20]
	0x0329AD04 MOV X1, X19
	0x0329AD08 MOV X2, X31
	0x0329AD0C BL 0x321BA08
	0x0329AD10 TBNZ X0, 0x0, 0x329AD74
	0x0329AD14 LDR X8, [X20 + 0x20]
	0x0329AD18 ADD X21, X21, 0x1
	0x0329AD1C CBNZ X8, 0x329ACE8
	0x0329AD20 BL 0x1C16F20
	0x0329AD24 LDR X20, [X20 + 0x10]
	0x0329AD28 CBZ X20, 0x329AD7C
	0x0329AD2C ADRP X10, 0xE59000
	0x0329AD30 LDR X8, [X20]
	0x0329AD34 LDR X10, [X10 + 0x818]
	0x0329AD38 LDRH W9, [X8 + 0x12E]
	0x0329AD3C LDR X1, [X10]
	0x0329AD40 CBZ X9, 0x329AD64
	0x0329AD44 LDR X10, [X8 + 0xB0]
	0x0329AD48 ADD X10, X10, 0x8
	0x0329AD4C LDUR X11, [X10 - 0x8]
	0x0329AD50 CMP X11, X1
	0x0329AD54 B.EQ 0x329AD8C
	0x0329AD58 SUBS X9, X9, 0x1
	0x0329AD5C ADD X10, X10, 0x10
	0x0329AD60 B.NE 0x329AD4C
	0x0329AD64 MOVZ W2, 0x4
	0x0329AD68 MOV X0, X20
	0x0329AD6C BL 0x1C5C788
	0x0329AD70 B 0x329AD9C
	0x0329AD74 MOVZ W0, 0x1
	0x0329AD78 B 0x329AD80
	0x0329AD7C MOV W0, W31
	0x0329AD80 LDP X20, X19, [X31 + 0x10]
	0x0329AD84 LDP X30, X21, [X31], #0x20
	0x0329AD88 RET
	0x0329AD8C LDR W9, [X10]
	0x0329AD90 ADD W9, W9, 0x4
	0x0329AD94 ADD X8, X8, W9, 0x4, SXTW
	0x0329AD98 ADD X0, X8, 0x138
	0x0329AD9C LDP X3, X2, [X0]
	0x0329ADA0 MOV X0, X20
	0x0329ADA4 MOV X1, X19
	0x0329ADA8 LDP X20, X19, [X31 + 0x10]
	0x0329ADAC LDP X30, X21, [X31], #0x20
	0x0329ADB0 BR X3
	0x0329ADB4 BL 0x1C16F28
	0x0329ADB8 MOV X0, X19
	0x0329ADBC BL 0x1C171E0
	0x0329ADC0 STR X30, [X31 - 0x30]!
	0x0329ADC4 STP X22, X21, [X31 + 0x10]
	0x0329ADC8 STP X20, X19, [X31 + 0x20]
	0x0329ADCC ADRP X21, 0x1142000
	0x0329ADD0 LDRB W8, [X21 + 0x71D]
	0x0329ADD4 MOV X19, X1
	0x0329ADD8 MOV X20, X0
	0x0329ADDC TBNZ X8, 0x0, 0x329AE00
	0x0329ADE0 ADRP X0, 0xE59000
	0x0329ADE4 LDR X0, [X0 + 0x818]
	0x0329ADE8 BL 0x1C16CF4
	0x0329ADEC ADRP X0, 0xE5B000
	0x0329ADF0 LDR X0, [X0 + 0x278]
	0x0329ADF4 BL 0x1C16CF4
	0x0329ADF8 MOVZ W8, 0x1
	0x0329ADFC STRB W8, [X21 + 0x71D]
	0x0329AE00 CBZ X19, 0x329AE1C
	0x0329AE04 ADRP X8, 0xE5B000
	0x0329AE08 LDR X8, [X8 + 0x278]
	0x0329AE0C LDR X1, [X8]
	0x0329AE10 LDR X8, [X19]
	0x0329AE14 CMP X8, X1
	0x0329AE18 B.NE 0x329AF3C
	0x0329AE1C LDR X8, [X20 + 0x20]
	0x0329AE20 CBZ X8, 0x329AE68
	0x0329AE24 ADRP X21, 0xE59000
	0x0329AE28 LDR X21, [X21 + 0x818]
	0x0329AE2C MOV X22, X31
	0x0329AE30 LDR W9, [X8 + 0x18]
	0x0329AE34 CMP X22, W9, SXTW
	0x0329AE38 B.GE 0x329AE6C
	0x0329AE3C CMP X22, X9

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1143000
	007 Move W8, [X21+1807]
	008 Move X20, X2
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE5A000
	015 Move X0, [X0+1728]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1807], W8
	019 Move X0, X19
	020 Call MethodCall.GetTypeNameFromAssemblyQualifiedName, X0
	021 Compare X20, 0
	022 JumpIfEqual {120}
	023 Move X8, [X20]
	024 Move X19, X0
	025 Move X0, X20
	026 Move X9, [X8+744]
	027 Move X1, [X8+752]
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Move X1, X0
	030 Move X0, X19
	031 Move X2, X31
	032 Call String.op_Equality, X0, X1
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {113}
	037 Move X8, [X20]
	038 Move X0, X20
	039 Move X9, [X8+2072]
	040 Move X1, [X8+2080]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Move X22, 0xE5A000
	043 Move X22, [X22+1728]
	044 Move X21, X0
	045 Move X0, [X22]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, X21
	051 Move X1, X31
	052 Move X2, X31
	053 Call Type.op_Inequality, X0, X1
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {79}
	058 Compare X21, 0
	059 JumpIfEqual {120}
	060 Move X8, [X21]
	061 Move X0, X21
	062 Move X9, [X8+744]
	063 Move X1, [X8+752]
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Move X1, X0
	066 Move X0, X19
	067 Move X2, X31
	068 Call String.op_Equality, X0, X1
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfEqual {112}
	073 Move X8, [X21]
	074 Move X0, X21
	075 Move X9, [X8+2072]
	076 Move X1, [X8+2080]
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Move X21, X0
	079 Move X8, [X20]
	080 Move X0, X20
	081 Move X9, [X8+2136]
	082 Move X1, [X8+2144]
	083 NotImplemented "Instruction BLR not yet implemented."
	084 Compare X0, 0
	085 JumpIfEqual {120}
	086 Move W8, [X0+24]
	087 Move X21, X0
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move W22, W31
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Add X8, X21, W22
	092 Move X20, [X8+32]
	093 Compare X20, 0
	094 JumpIfEqual {120}
	095 Move X8, [X20]
	096 Move X0, X20
	097 Move X9, [X8+744]
	098 Move X1, [X8+752]
	099 NotImplemented "Instruction BLR not yet implemented."
	100 Move X1, X0
	101 Move X0, X19
	102 Move X2, X31
	103 Call String.op_Equality, X0, X1
	104 Move TEMP, X0
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfEqual {113}
	108 Move W8, [X21+24]
	109 Add W22, W22, 1
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move X20, X31
	112 Move X20, X21
	113 Move X0, X20
	114 Move X20, [X31+32]
	115 Move X19, [X31+40]
	116 Move X22, [X31+16]
	117 Move X21, [X31+24]
	118 Move X30, [X31+48]
	119 Return X0
	120 Call 0x1C17F20
	121 Call 0x1C17F28

Method: System.String GetTypeNameFromAssemblyQualifiedName(System.String aqname)

Disassembly:
	0x0329AE7C LDRH W9, [X8 + 0x12E]
	0x0329AE80 CBZ X9, 0x329AEA4
	0x0329AE84 LDR X10, [X8 + 0xB0]
	0x0329AE88 ADD X10, X10, 0x8
	0x0329AE8C LDUR X11, [X10 - 0x8]
	0x0329AE90 CMP X11, X1
	0x0329AE94 B.EQ 0x329AEC4
	0x0329AE98 SUBS X9, X9, 0x1
	0x0329AE9C ADD X10, X10, 0x10
	0x0329AEA0 B.NE 0x329AE8C
	0x0329AEA4 MOVZ W2, 0x7
	0x0329AEA8 MOV X0, X20
	0x0329AEAC BL 0x1C5C788
	0x0329AEB0 B 0x329AED4
	0x0329AEB4 LDP X20, X19, [X31 + 0x20]
	0x0329AEB8 LDP X22, X21, [X31 + 0x10]
	0x0329AEBC LDR X30, [X31], #0x30
	0x0329AEC0 RET
	0x0329AEC4 LDR W9, [X10]
	0x0329AEC8 ADD W9, W9, 0x7
	0x0329AECC ADD X8, X8, W9, 0x4, SXTW
	0x0329AED0 ADD X0, X8, 0x138
	0x0329AED4 LDP X3, X2, [X0]
	0x0329AED8 MOV X0, X20
	0x0329AEDC MOV X1, X19
	0x0329AEE0 LDP X20, X19, [X31 + 0x20]
	0x0329AEE4 LDP X22, X21, [X31 + 0x10]
	0x0329AEE8 LDR X30, [X31], #0x30
	0x0329AEEC BR X3
	0x0329AEF0 BL 0x1C16F28
	0x0329AEF4 ADRP X0, 0xE61000
	0x0329AEF8 LDR X0, [X0 + 0x578]
	0x0329AEFC BL 0x1C16D08
	0x0329AF00 BL 0x1C16F10
	0x0329AF04 MOV X19, X0
	0x0329AF08 ADRP X0, 0xE8A000
	0x0329AF0C LDR X0, [X0 + 0x8F8]
	0x0329AF10 BL 0x1C16D08
	0x0329AF14 MOV X1, X0
	0x0329AF18 MOV X0, X19
	0x0329AF1C MOV X2, X31
	0x0329AF20 BL 0x3314A68

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1143000
	005 Move W8, [X20+1808]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE84000
	012 Move X0, [X0+1072]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1808], W8
	016 Compare X19, 0
	017 JumpIfEqual {50}
	018 Move X8, 0xE84000
	019 Move X8, [X8+1072]
	020 Move X0, X19
	021 Move X2, X31
	022 Move X1, [X8]
	023 Call String.IndexOf, X0, X1
	024 Add W8, W0, 2
	025 Add W31, W0, 1
	026 NotImplemented "Instruction CSEL not yet implemented."
	027 Move W1, 44
	028 Move X0, X19
	029 Move X3, X31
	030 Call String.IndexOf, X0, X1, X2
	031 Add W31, W0, 1
	032 Move W2, W0
	033 Move X0, X19
	034 Move W1, W31
	035 Move X3, X31
	036 Call String.Substring, X0, X1, X2
	037 Compare X0, 0
	038 JumpIfEqual {50}
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X1, X31
	042 Move X30, [X31+32]
	043 Call String.Trim, X0
	044 Return X0
	045 Move X0, X19
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Return X0
	050 Call 0x1C17F20

Method: System.Runtime.Remoting.Identity System.Runtime.Remoting.Messaging.IInternalMessage.get_TargetIdentity()

Disassembly:
	0x0329AF24 ADRP X0, 0xE8A000
	0x0329AF28 LDR X0, [X0 + 0x970]

ISIL:
	001 Move X0, [X0+72]
	002 Return X0

Method: System.Void System.Runtime.Remoting.Messaging.IInternalMessage.set_TargetIdentity(System.Runtime.Remoting.Identity value)

Disassembly:
	0x0329AF2C BL 0x1C16D08
	0x0329AF30 MOV X1, X0

ISIL:
	001 Move [X0+72], X1
	002 Return 

Method: System.Type[] get_GenericArguments()

Disassembly:
	0x0329AE40 B.CS 0x329AEF0
	0x0329AE44 ADD X8, X8, X22, 0x3, LSL
	0x0329AE48 LDR X0, [X8 + 0x20]
	0x0329AE4C MOV X1, X19
	0x0329AE50 MOV X2, X31
	0x0329AE54 BL 0x321BA08
	0x0329AE58 TBNZ X0, 0x0, 0x329AEF4
	0x0329AE5C LDR X8, [X20 + 0x20]
	0x0329AE60 ADD X22, X22, 0x1
	0x0329AE64 CBNZ X8, 0x329AE30
	0x0329AE68 BL 0x1C16F20
	0x0329AE6C LDR X20, [X20 + 0x10]
	0x0329AE70 CBZ X20, 0x329AEB4
	0x0329AE74 LDR X8, [X20]
	0x0329AE78 LDR X1, [X21]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+80]
	005 Compare X0, 0
	006 JumpIfNotEqual {16}
	007 Move X0, X19
	008 Call MethodCall.get_MethodBase, X0
	009 Compare X0, 0
	010 JumpIfEqual {19}
	011 Move X8, [X0]
	012 Move X9, [X8+760]
	013 Move X1, [X8+768]
	014 NotImplemented "Instruction BLR not yet implemented."
	015 Move [X19+80], X0
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]
	018 Return X0
	019 Call 0x1C17F20

