Type: System.Runtime.Remoting.Messaging.MessageDictionary

Method: System.Void .ctor(System.Runtime.Remoting.Messaging.IMethodMessage message)

Disassembly:
	0x032986CC STR X9, [X0 + 0x48]
	0x032986D0 B.LS 0x3298764
	0x032986D4 ADRP X9, 0xE8C000
	0x032986D8 LDR X9, [X9 + 0x8A8]
	0x032986DC CMP W8, 0x7
	0x032986E0 LDR X9, [X9]
	0x032986E4 STR X9, [X0 + 0x50]
	0x032986E8 B.EQ 0x3298764
	0x032986EC ADRP X9, 0xE8C000
	0x032986F0 LDR X9, [X9 + 0x8B0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+24], X19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Boolean HasUserData()

Disassembly:
	0x032953E4 LDR X0, [X0 + 0xBA0]
	0x032953E8 BL 0x1C16CF4
	0x032953EC ADRP X0, 0xE8F000
	0x032953F0 LDR X0, [X0 + 0x818]
	0x032953F4 BL 0x1C16CF4
	0x032953F8 ADRP X0, 0xE8F000
	0x032953FC LDR X0, [X0 + 0x270]
	0x03295400 BL 0x1C16CF4
	0x03295404 MOVZ W8, 0x1
	0x03295408 STRB W8, [X22 + 0x6EC]
	0x0329540C CBZ X19, 0x32955EC
	0x03295410 ADRP X24, 0xE8F000
	0x03295414 LDR X8, [X19]
	0x03295418 LDR X24, [X24 + 0x270]
	0x0329541C LDRH W9, [X8 + 0x12E]
	0x03295420 LDR X1, [X24]
	0x03295424 CBZ X9, 0x3295448
	0x03295428 LDR X10, [X8 + 0xB0]
	0x0329542C ADD X10, X10, 0x8
	0x03295430 LDUR X11, [X10 - 0x8]
	0x03295434 CMP X11, X1
	0x03295438 B.EQ 0x3295458
	0x0329543C SUBS X9, X9, 0x1
	0x03295440 ADD X10, X10, 0x10
	0x03295444 B.NE 0x3295430
	0x03295448 MOVZ W2, 0x2
	0x0329544C MOV X0, X19
	0x03295450 BL 0x1C5C788
	0x03295454 B 0x3295468
	0x03295458 LDR W9, [X10]
	0x0329545C ADD W9, W9, 0x2
	0x03295460 ADD X8, X8, W9, 0x4, SXTW
	0x03295464 ADD X0, X8, 0x138
	0x03295468 LDP X8, X1, [X0]
	0x0329546C MOV X0, X19
	0x03295470 BLR X8
	0x03295474 CBZ X0, 0x3295590
	0x03295478 LDR X8, [X19]
	0x0329547C LDR X1, [X24]
	0x03295480 LDRH W9, [X8 + 0x12E]
	0x03295484 CBZ X9, 0x32954A8
	0x03295488 LDR X10, [X8 + 0xB0]
	0x0329548C ADD X10, X10, 0x8
	0x03295490 LDUR X11, [X10 - 0x8]
	0x03295494 CMP X11, X1
	0x03295498 B.EQ 0x32954B8
	0x0329549C SUBS X9, X9, 0x1
	0x032954A0 ADD X10, X10, 0x10
	0x032954A4 B.NE 0x3295490
	0x032954A8 MOVZ W2, 0x2
	0x032954AC MOV X0, X19
	0x032954B0 BL 0x1C5C788
	0x032954B4 B 0x32954C8
	0x032954B8 LDR W9, [X10]
	0x032954BC ADD W9, W9, 0x2
	0x032954C0 ADD X8, X8, W9, 0x4, SXTW
	0x032954C4 ADD X0, X8, 0x138
	0x032954C8 LDP X8, X1, [X0]
	0x032954CC MOV X0, X19
	0x032954D0 BLR X8
	0x032954D4 CBZ X0, 0x32955EC
	0x032954D8 BL 0x3292828
	0x032954DC TBZ X0, 0x0, 0x3295590

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1148000
	008 Move X21, 0xE90000
	009 Move X20, 0xE66000
	010 Move W8, [X22+1811]
	011 Move X21, [X21+2056]
	012 Move X20, [X20+752]
	013 Move X19, X0
	014 Move W23, 1
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, X20
	020 Call 0x1C17CF4
	021 Move X0, X21
	022 Call 0x1C17CF4
	023 Move [X22+1811], W23
	024 Move X19, [X19+16]
	025 Compare X19, 0
	026 JumpIfEqual {54}
	027 Move X8, [X19]
	028 Move X9, [X21]
	029 Move W11, [X8+304]
	030 Move W10, [X9+304]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X11, [X8+200]
	033 Add X10, X11, X10
	034 NotImplemented "Instruction LDUR not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move W8, 1
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {19}
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Move X1, [X20]
	043 Compare X9, 0
	044 JumpIfEqual {51}
	045 Move X10, [X8+176]
	046 Add X10, X10, 8
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract X9, X9, 1
	050 Add X10, X10, 16
	051 Move W2, 1
	052 Move X0, X19
	053 Call 0x1C5D788
	054 Move W0, W31
	055 Move W9, [X10]
	056 Add W9, W9, 1
	057 Add X8, X8, W9
	058 Add X0, X8, 312
	059 Move X8, [X0]
	060 Move X1, [X0+8]
	061 Move X0, X19
	062 NotImplemented "Instruction BLR not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 NotImplemented "Instruction CSET not yet implemented."
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X22, [X31+16]
	068 Move X21, [X31+24]
	069 Move X30, [X31+48]
	070 Move X23, [X31+56]
	071 Return X0

Method: System.Collections.IDictionary get_InternalDictionary()

Disassembly:
	0x032954E0 LDR X22, [X20]
	0x032954E4 CBNZ X22, 0x329550C
	0x032954E8 ADRP X8, 0xE8B000
	0x032954EC LDR X8, [X8 + 0xBA0]
	0x032954F0 LDR X0, [X8]
	0x032954F4 BL 0x1C16F10
	0x032954F8 MOV X1, X31
	0x032954FC MOV X22, X0
	0x03295500 BL 0x3351F5C
	0x03295504 STR X22, [X20]
	0x03295508 CBZ X22, 0x32955EC
	0x0329550C LDR X8, [X22]
	0x03295510 MOV X0, X22
	0x03295514 LDR X9, [X8 + 0x298]
	0x03295518 LDR X1, [X8 + 0x2A0]
	0x0329551C BLR X9
	0x03295520 ADRP X8, 0xE8F000
	0x03295524 LDR X8, [X8 + 0x818]
	0x03295528 MOV W22, W0
	0x0329552C LDR X8, [X8]
	0x03295530 MOV X0, X8
	0x03295534 BL 0x1C16F10
	0x03295538 MOV X1, X31
	0x0329553C MOV X23, X0
	0x03295540 BL 0x33BDD8C
	0x03295544 STR W22, [X23 + 0x10]
	0x03295548 STR X23, [X21 + 0x28]
	0x0329554C LDR X8, [X19]
	0x03295550 LDR X20, [X20]
	0x03295554 LDR X1, [X24]
	0x03295558 LDRH W9, [X8 + 0x12E]
	0x0329555C CBZ X9, 0x3295580
	0x03295560 LDR X10, [X8 + 0xB0]
	0x03295564 ADD X10, X10, 0x8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1148000
	007 Move X20, 0xE90000
	008 Move W8, [X21+1812]
	009 Move X20, [X20+2056]
	010 Move X19, X0
	011 Move W22, 1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {19}
	016 Move X0, X20
	017 Call 0x1C17CF4
	018 Move [X21+1812], W22
	019 Move X19, [X19+16]
	020 Compare X19, 0
	021 JumpIfEqual {36}
	022 Move X9, [X19]
	023 Move X8, [X20]
	024 Move W11, [X9+304]
	025 Move W10, [X8+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X9, [X9+200]
	028 Add X9, X9, X10
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move W8, 1
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {16}
	036 Move X0, X19
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X30, [X31+48]
	042 Return X0

Method: System.Void set_MethodKeys(System.String[] value)

Disassembly:
	0x0329B080 LDUR X11, [X10 - 0x8]
	0x0329B084 CMP X11, X1

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.Collections.IDictionary AllocInternalProperties()

Disassembly:
	0x0329B088 B.EQ 0x329B0A8
	0x0329B08C SUBS X9, X9, 0x1
	0x0329B090 ADD X10, X10, 0x10
	0x0329B094 B.NE 0x329B080
	0x0329B098 MOV X0, X21
	0x0329B09C MOV W2, W31
	0x0329B0A0 BL 0x1C5C788
	0x0329B0A4 B 0x329B0B4
	0x0329B0A8 LDRSW X9, [X10]
	0x0329B0AC ADD X8, X8, X9, 0x4, LSL
	0x0329B0B0 ADD X0, X8, 0x138
	0x0329B0B4 LDP X4, X3, [X0]
	0x0329B0B8 MOV X0, X21
	0x0329B0BC MOV X1, X20
	0x0329B0C0 MOV W2, W19
	0x0329B0C4 LDP X20, X19, [X31 + 0x20]
	0x0329B0C8 LDP X22, X21, [X31 + 0x10]
	0x0329B0CC LDR X30, [X31], #0x30
	0x0329B0D0 BR X4
	0x0329B0D4 BL 0x1C16F20
	0x0329B0D8 STP X30, X21, [X31 - 0x20]!
	0x0329B0DC STP X20, X19, [X31 + 0x10]
	0x0329B0E0 ADRP X20, 0x1141000
	0x0329B0E4 ADRP X21, 0xE89000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1142000
	006 Move X20, 0xE89000
	007 Move W8, [X21+1813]
	008 Move X20, [X20+3512]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE89000
	015 Move X0, [X0+3512]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1813], W8
	019 Move W8, 1
	020 Move [X19+40], W8
	021 Move X0, [X20]
	022 Call 0x1C17F10
	023 Move X1, X31
	024 Move X19, X0
	025 Call Hashtable..ctor, X0
	026 Move X0, X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0

Method: System.Collections.IDictionary GetInternalProperties()

Disassembly:
	0x032977C0 LDRH W9, [X8 + 0x12E]
	0x032977C4 CBZ X9, 0x32977E8
	0x032977C8 LDR X10, [X8 + 0xB0]
	0x032977CC ADD X10, X10, 0x8
	0x032977D0 LDUR X11, [X10 - 0x8]
	0x032977D4 CMP X11, X20
	0x032977D8 B.EQ 0x329791C
	0x032977DC SUBS X9, X9, 0x1
	0x032977E0 ADD X10, X10, 0x10
	0x032977E4 B.NE 0x32977D0
	0x032977E8 MOVZ W2, 0x2
	0x032977EC B 0x3297878

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+16]
	005 Compare X0, 0
	006 JumpIfNotEqual {13}
	007 Move X8, [X19]
	008 Move X0, X19
	009 Move X9, [X8+584]
	010 Move X1, [X8+592]
	011 NotImplemented "Instruction BLR not yet implemented."
	012 Move [X19+16], X0
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Return X0

Method: System.Boolean IsOverridenKey(System.String key)

Disassembly:
	0x0329B0E8 LDRB W8, [X20 + 0x720]
	0x0329B0EC LDR X21, [X21 + 0x978]
	0x0329B0F0 MOV X19, X0
	0x0329B0F4 TBNZ X8, 0x0, 0x329B10C
	0x0329B0F8 ADRP X0, 0xE89000
	0x0329B0FC LDR X0, [X0 + 0x978]
	0x0329B100 BL 0x1C16CF4
	0x0329B104 MOVZ W8, 0x1
	0x0329B108 STRB W8, [X20 + 0x720]
	0x0329B10C LDR X0, [X21]
	0x0329B110 BL 0x1C16F10
	0x0329B114 MOV X1, X19
	0x0329B118 MOV X20, X0
	0x0329B11C BL 0x329B130
	0x0329B120 MOV X0, X20
	0x0329B124 LDP X20, X19, [X31 + 0x10]
	0x0329B128 LDP X30, X21, [X31], #0x20
	0x0329B12C RET
	0x0329B130 STP X30, X21, [X31 - 0x20]!
	0x0329B134 STP X20, X19, [X31 + 0x10]
	0x0329B138 ADRP X21, 0x1141000
	0x0329B13C LDRB W8, [X21 + 0x722]
	0x0329B140 MOV X20, X1
	0x0329B144 MOV X19, X0
	0x0329B148 TBNZ X8, 0x0, 0x329B160
	0x0329B14C ADRP X0, 0xE58000
	0x0329B150 LDR X0, [X0 + 0x818]
	0x0329B154 BL 0x1C16CF4
	0x0329B158 MOVZ W8, 0x1
	0x0329B15C STRB W8, [X21 + 0x722]
	0x0329B160 MOV X0, X19
	0x0329B164 MOV X1, X31
	0x0329B168 BL 0x33BDD8C
	0x0329B16C STR X20, [X19 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W8, [X0+40]
	007 Compare W8, 0
	008 JumpIfEqual {17}
	009 Move W0, W31
	010 Move X20, [X31+32]
	011 Move X19, [X31+40]
	012 Move X22, [X31+16]
	013 Move X21, [X31+24]
	014 And W0, W0, 1
	015 Move X30, [X31+48]
	016 Return X0
	017 Move X20, [X0+32]
	018 Compare X20, 0
	019 JumpIfEqual {39}
	020 Move X8, [X20+24]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X19, X1
	023 Move X21, X31
	024 And X8, X8, 0
	025 Add X22, X20, 32
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X1, [X22]
	028 Move X0, X19
	029 Move X2, X31
	030 Call String.op_Equality, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {10}
	035 Move W8, [X20+24]
	036 Add X21, X21, 1
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Call 0x1C17F28
	039 Call 0x1C17F20

Method: System.Object get_Item(System.Object key)

Disassembly:
	0x0329B170 CBZ X20, 0x329B210
	0x0329B174 LDR X20, [X20 + 0x10]
	0x0329B178 CMP X20, 0x0
	0x0329B17C CSEL X21, X31, X19, EQ
	0x0329B180 CBZ X20, 0x329B1CC
	0x0329B184 ADRP X10, 0xE58000
	0x0329B188 LDR X8, [X20]
	0x0329B18C LDR X10, [X10 + 0x818]
	0x0329B190 LDRH W9, [X8 + 0x12E]
	0x0329B194 LDR X1, [X10]
	0x0329B198 CBZ X9, 0x329B1BC
	0x0329B19C LDR X10, [X8 + 0xB0]
	0x0329B1A0 ADD X10, X10, 0x8
	0x0329B1A4 LDUR X11, [X10 - 0x8]
	0x0329B1A8 CMP X11, X1
	0x0329B1AC B.EQ 0x329B1D8
	0x0329B1B0 SUBS X9, X9, 0x1
	0x0329B1B4 ADD X10, X10, 0x10
	0x0329B1B8 B.NE 0x329B1A4
	0x0329B1BC MOVZ W2, 0x6
	0x0329B1C0 MOV X0, X20
	0x0329B1C4 BL 0x1C5C788
	0x0329B1C8 B 0x329B1E8
	0x0329B1CC MOV X0, X31
	0x0329B1D0 MOV X21, X19
	0x0329B1D4 B 0x329B1F8
	0x0329B1D8 LDR W9, [X10]
	0x0329B1DC ADD W9, W9, 0x6
	0x0329B1E0 ADD X8, X8, W9, 0x4, SXTW
	0x0329B1E4 ADD X0, X8, 0x138
	0x0329B1E8 LDP X8, X1, [X0]
	0x0329B1EC MOV X0, X20
	0x0329B1F0 BLR X8
	0x0329B1F4 CBZ X21, 0x329B210
	0x0329B1F8 MOVN W8, 0x0
	0x0329B1FC STR X0, [X21 + 0x18]
	0x0329B200 STR W8, [X19 + 0x20]
	0x0329B204 LDP X20, X19, [X31 + 0x10]
	0x0329B208 LDP X30, X21, [X31], #0x20
	0x0329B20C RET
	0x0329B210 BL 0x1C16F20
	0x0329B214 STP X30, X21, [X31 - 0x20]!
	0x0329B218 STP X20, X19, [X31 + 0x10]
	0x0329B21C ADRP X20, 0x1141000
	0x0329B220 ADRP X21, 0xE89000
	0x0329B224 LDRB W8, [X20 + 0x721]
	0x0329B228 LDR X21, [X21 + 0x978]
	0x0329B22C MOV X19, X0
	0x0329B230 TBNZ X8, 0x0, 0x329B248
	0x0329B234 ADRP X0, 0xE89000
	0x0329B238 LDR X0, [X0 + 0x978]
	0x0329B23C BL 0x1C16CF4
	0x0329B240 MOVZ W8, 0x1
	0x0329B244 STRB W8, [X20 + 0x721]
	0x0329B248 LDR X0, [X21]
	0x0329B24C BL 0x1C16F10
	0x0329B250 MOV X1, X19
	0x0329B254 MOV X20, X0
	0x0329B258 BL 0x329B130
	0x0329B25C MOV X0, X20
	0x0329B260 LDP X20, X19, [X31 + 0x10]
	0x0329B264 LDP X30, X21, [X31], #0x20
	0x0329B268 RET
	0x0329B26C SUB X31, X31, 0x30
	0x0329B270 STP X30, X21, [X31 + 0x10]
	0x0329B274 STP X20, X19, [X31 + 0x20]
	0x0329B278 ADRP X21, 0x1141000
	0x0329B27C ADRP X20, 0xE60000
	0x0329B280 LDRB W8, [X21 + 0x723]
	0x0329B284 LDR X20, [X20 + 0xF10]
	0x0329B288 MOV X19, X0
	0x0329B28C TBNZ X8, 0x0, 0x329B2A4
	0x0329B290 ADRP X0, 0xE60000
	0x0329B294 LDR X0, [X0 + 0xF10]
	0x0329B298 BL 0x1C16CF4
	0x0329B29C MOVZ W8, 0x1
	0x0329B2A0 STRB W8, [X21 + 0x723]
	0x0329B2A4 MOV X0, X19
	0x0329B2A8 BL 0x329B2D0
	0x0329B2AC LDR X8, [X20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1142000
	006 Move W8, [X21+1814]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xE59000
	014 Move X0, [X0+2072]
	015 Call 0x1C17CF4
	016 Move X0, 0xE5B000
	017 Move X0, [X0+632]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1814], W8
	021 Compare X19, 0
	022 JumpIfEqual {28}
	023 Move X8, 0xE5B000
	024 Move X8, [X8+632]
	025 Move X1, [X8]
	026 Move X8, [X19]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X8, [X20+32]
	029 Compare X8, 0
	030 JumpIfEqual {48}
	031 Move X21, X31
	032 Move W9, [X8+24]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Add X8, X8, X21
	036 Move X0, [X8+32]
	037 Move X1, X19
	038 Move X2, X31
	039 Call String.op_Equality, X0, X1
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {68}
	044 Move X8, [X20+32]
	045 Add X21, X21, 1
	046 Compare X8, 0
	047 JumpIfNotEqual {32}
	048 Call 0x1C17F20
	049 Move X20, [X20+16]
	050 Compare X20, 0
	051 JumpIfEqual {71}
	052 Move X10, 0xE59000
	053 Move X8, [X20]
	054 Move X10, [X10+2072]
	055 NotImplemented "Instruction LDRH not yet implemented."
	056 Move X1, [X10]
	057 Compare X9, 0
	058 JumpIfEqual {65}
	059 Move X10, [X8+176]
	060 Add X10, X10, 8
	061 NotImplemented "Instruction LDUR not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Subtract X9, X9, 1
	064 Add X10, X10, 16
	065 Move X0, X20
	066 Move W2, W31
	067 Call 0x1C5D788
	068 Move X8, [X20]
	069 Move X3, [X8+600]
	070 Move X2, [X8+608]
	071 Move X20, [X31+16]
	072 Move X19, [X31+24]
	073 Move X0, X31
	074 Move X30, [X31+32]
	075 Move X21, [X31+40]
	076 Return X0
	077 NotImplemented "Instruction LDRSW not yet implemented."
	078 Add X8, X8, X9
	079 Add X0, X8, 312
	080 Move X3, [X0]
	081 Move X2, [X0+8]
	082 Move X0, X20
	083 Move X1, X19
	084 Move X20, [X31+16]
	085 Move X19, [X31+24]
	086 Move X30, [X31+32]
	087 Move X21, [X31+40]
	088 CallNoReturn X3
	089 Call 0x1C17F28
	090 Move X0, X19
	091 Call 0x1C181E0

Method: System.Void set_Item(System.Object key, System.Object value)

Disassembly:
	0x0329B2B0 STP X0, X1, [X31]

ISIL:
No ISIL was generated
Method: System.Object GetMethodProperty(System.String key)

Disassembly:
	0x03298AC0 LDR X8, [X0]
	0x03298AC4 LDR X10, [X10 + 0x3B8]
	0x03298AC8 MOV X20, X0
	0x03298ACC LDRH W9, [X8 + 0x12E]
	0x03298AD0 LDR X1, [X10]
	0x03298AD4 CBZ X9, 0x3298AF8
	0x03298AD8 LDR X10, [X8 + 0xB0]
	0x03298ADC ADD X10, X10, 0x8
	0x03298AE0 LDUR X11, [X10 - 0x8]
	0x03298AE4 CMP X11, X1
	0x03298AE8 B.EQ 0x3298B08
	0x03298AEC SUBS X9, X9, 0x1
	0x03298AF0 ADD X10, X10, 0x10
	0x03298AF4 B.NE 0x3298AE0
	0x03298AF8 MOV X0, X20
	0x03298AFC MOV W2, W31
	0x03298B00 BL 0x1C5C788
	0x03298B04 B 0x3298B14
	0x03298B08 LDRSW X9, [X10]
	0x03298B0C ADD X8, X8, X9, 0x4, LSL
	0x03298B10 ADD X0, X8, 0x138
	0x03298B14 LDP X3, X2, [X0]
	0x03298B18 MOV X0, X20
	0x03298B1C MOV X1, X19
	0x03298B20 LDP X20, X19, [X31 + 0x10]
	0x03298B24 LDR X30, [X31], #0x20
	0x03298B28 BR X3
	0x03298B2C BL 0x1C16F20
	0x03298B30 STP X30, X21, [X31 - 0x20]!
	0x03298B34 STP X20, X19, [X31 + 0x10]
	0x03298B38 ADRP X21, 0x1144000
	0x03298B3C LDRB W8, [X21 + 0x702]
	0x03298B40 MOV X19, X2
	0x03298B44 MOV X20, X1
	0x03298B48 TBNZ X8, 0x0, 0x3298B60
	0x03298B4C ADRP X0, 0xE8C000
	0x03298B50 LDR X0, [X0 + 0x3B8]
	0x03298B54 BL 0x1C16CF4
	0x03298B58 MOVZ W8, 0x1
	0x03298B5C STRB W8, [X21 + 0x702]
	0x03298B60 MOV X0, X31
	0x03298B64 BL 0x33E6FB0
	0x03298B68 CBZ X0, 0x3298BF0
	0x03298B6C MOV X1, X31
	0x03298B70 BL 0x3287154
	0x03298B74 CBZ X0, 0x3298BF0
	0x03298B78 ADRP X10, 0xE8C000
	0x03298B7C LDR X8, [X0]
	0x03298B80 LDR X10, [X10 + 0x3B8]
	0x03298B84 MOV X21, X0
	0x03298B88 LDRH W9, [X8 + 0x12E]
	0x03298B8C LDR X1, [X10]
	0x03298B90 CBZ X9, 0x3298BB4
	0x03298B94 LDR X10, [X8 + 0xB0]
	0x03298B98 ADD X10, X10, 0x8
	0x03298B9C LDUR X11, [X10 - 0x8]
	0x03298BA0 CMP X11, X1
	0x03298BA4 B.EQ 0x3298BC4
	0x03298BA8 SUBS X9, X9, 0x1
	0x03298BAC ADD X10, X10, 0x10
	0x03298BB0 B.NE 0x3298B9C
	0x03298BB4 MOVZ W2, 0x1
	0x03298BB8 MOV X0, X21
	0x03298BBC BL 0x1C5C788
	0x03298BC0 B 0x3298BD4
	0x03298BC4 LDR W9, [X10]
	0x03298BC8 ADD W9, W9, 0x1
	0x03298BCC ADD X8, X8, W9, 0x4, SXTW
	0x03298BD0 ADD X0, X8, 0x138
	0x03298BD4 LDP X4, X3, [X0]
	0x03298BD8 MOV X1, X20
	0x03298BDC MOV X2, X19
	0x03298BE0 LDP X20, X19, [X31 + 0x10]
	0x03298BE4 MOV X0, X21
	0x03298BE8 LDP X30, X21, [X31], #0x20
	0x03298BEC BR X4
	0x03298BF0 BL 0x1C16F20
	0x03298BF4 MOV X1, X31
	0x03298BF8 B 0x33BDD8C
	0x03298BFC STR X30, [X31 - 0x20]!
	0x03298C00 STP X20, X19, [X31 + 0x10]
	0x03298C04 ADRP X19, 0x1144000
	0x03298C08 ADRP X20, 0xE8C000
	0x03298C0C LDRB W8, [X19 + 0x703]
	0x03298C10 LDR X20, [X20 + 0x388]
	0x03298C14 TBNZ X8, 0x0, 0x3298C2C
	0x03298C18 ADRP X0, 0xE8C000
	0x03298C1C LDR X0, [X0 + 0x388]
	0x03298C20 BL 0x1C16CF4
	0x03298C24 MOVZ W8, 0x1
	0x03298C28 STRB W8, [X19 + 0x703]
	0x03298C2C LDR X0, [X20]
	0x03298C30 BL 0x1C16F10
	0x03298C34 MOV X1, X31
	0x03298C38 MOV X19, X0
	0x03298C3C BL 0x33BDD8C
	0x03298C40 LDR X8, [X20]
	0x03298C44 LDR X8, [X8 + 0xB8]
	0x03298C48 STR X19, [X8]
	0x03298C4C LDP X20, X19, [X31 + 0x10]
	0x03298C50 LDR X30, [X31], #0x20
	0x03298C54 RET
	0x03298C58 STP X30, X21, [X31 - 0x20]!
	0x03298C5C STP X20, X19, [X31 + 0x10]
	0x03298C60 ADRP X20, 0x1144000
	0x03298C64 ADRP X21, 0xE8C000
	0x03298C68 LDRB W8, [X20 + 0x704]
	0x03298C6C LDR X21, [X21 + 0x910]
	0x03298C70 MOV X19, X0
	0x03298C74 TBNZ X8, 0x0, 0x3298C8C
	0x03298C78 ADRP X0, 0xE8C000
	0x03298C7C LDR X0, [X0 + 0x910]
	0x03298C80 BL 0x1C16CF4
	0x03298C84 MOVZ W8, 0x1
	0x03298C88 STRB W8, [X20 + 0x704]
	0x03298C8C LDR X8, [X21]
	0x03298C90 MOV X0, X19
	0x03298C94 MOV X1, X31
	0x03298C98 STR X8, [X19 + 0x10]
	0x03298C9C LDP X20, X19, [X31 + 0x10]
	0x03298CA0 LDP X30, X21, [X31], #0x20
	0x03298CA4 B 0x33BDD8C
	0x03298CA8 MOV W0, W31
	0x03298CAC RET
	0x03298CB0 MOV X0, X31
	0x03298CB4 RET
	0x03298CB8 MOV X0, X31
	0x03298CBC RET
	0x03298CC0 STR X30, [X31 - 0x20]!
	0x03298CC4 STP X20, X19, [X31 + 0x10]
	0x03298CC8 ADRP X19, 0x1144000
	0x03298CCC ADRP X20, 0xE8C000
	0x03298CD0 LDRB W8, [X19 + 0x705]
	0x03298CD4 LDR X20, [X20 + 0x918]
	0x03298CD8 TBNZ X8, 0x0, 0x3298CF0
	0x03298CDC ADRP X0, 0xE8C000
	0x03298CE0 LDR X0, [X0 + 0x918]
	0x03298CE4 BL 0x1C16CF4
	0x03298CE8 MOVZ W8, 0x1
	0x03298CEC STRB W8, [X19 + 0x705]
	0x03298CF0 LDR X0, [X20]
	0x03298CF4 LDP X20, X19, [X31 + 0x10]
	0x03298CF8 LDR X30, [X31], #0x20
	0x03298CFC RET
	0x03298D00 MOV X0, X31
	0x03298D04 RET
	0x03298D08 MOV X0, X31
	0x03298D0C RET
	0x03298D10 STR X30, [X31 - 0x20]!
	0x03298D14 STP X20, X19, [X31 + 0x10]
	0x03298D18 ADRP X19, 0x1144000
	0x03298D1C ADRP X20, 0xE8C000
	0x03298D20 LDRB W8, [X19 + 0x706]
	0x03298D24 LDR X20, [X20 + 0x918]
	0x03298D28 TBNZ X8, 0x0, 0x3298D40
	0x03298D2C ADRP X0, 0xE8C000
	0x03298D30 LDR X0, [X0 + 0x918]
	0x03298D34 BL 0x1C16CF4
	0x03298D38 MOVZ W8, 0x1
	0x03298D3C STRB W8, [X19 + 0x706]
	0x03298D40 LDR X0, [X20]
	0x03298D44 LDP X20, X19, [X31 + 0x10]
	0x03298D48 LDR X30, [X31], #0x20
	0x03298D4C RET
	0x03298D50 LDR X0, [X0 + 0x10]
	0x03298D54 RET
	0x03298D58 MOV X0, X31
	0x03298D5C RET
	0x03298D60 MOV X0, X31
	0x03298D64 RET
	0x03298D68 STR X30, [X31 - 0x30]!
	0x03298D6C STP X22, X21, [X31 + 0x10]
	0x03298D70 STP X20, X19, [X31 + 0x20]
	0x03298D74 LDR X8, [X2 + 0x8]
	0x03298D78 STP X1, X2, [X0 + 0x20]
	0x03298D7C MOV X19, X0
	0x03298D80 MOV X20, X2
	0x03298D84 STR X8, [X0 + 0x10]
	0x03298D88 LDRB W22, [X2 + 0x52]
	0x03298D8C STR X0, [X0 + 0x40]
	0x03298D90 MOV X0, X2
	0x03298D94 MOV X21, X1
	0x03298D98 BL 0x1C16D84
	0x03298D9C TBZ X0, 0x0, 0x3298DB4
	0x03298DA0 CMP W22, 0x1
	0x03298DA4 B.NE 0x3298DBC
	0x03298DA8 ADRP X8, 0xFFFFFFFFFE91D000
	0x03298DAC ADD X8, X8, 0x5C8
	0x03298DB0 B 0x3298E30
	0x03298DB4 CBZ W22, 0x3298DD0
	0x03298DB8 CBZ X21, 0x3298E50
	0x03298DBC LDR X8, [X19 + 0x10]
	0x03298DC0 LDR X9, [X19 + 0x20]
	0x03298DC4 STR X8, [X19 + 0x18]
	0x03298DC8 STR X9, [X19 + 0x40]
	0x03298DCC B 0x3298E34
	0x03298DD0 LDRB W8, [X19 + 0x70]
	0x03298DD4 CBZ W8, 0x3298E00
	0x03298DD8 MOV X0, X20
	0x03298DDC BL 0x1C16D7C
	0x03298DE0 MOV W21, W0
	0x03298DE4 MOV X0, X20
	0x03298DE8 BL 0x1C17238
	0x03298DEC TBZ X21, 0x0, 0x3298E0C
	0x03298DF0 TBZ X0, 0x0, 0x3298E1C
	0x03298DF4 ADRP X8, 0xFFFFFFFFFE91D000
	0x03298DF8 ADD X8, X8, 0x6C4
	0x03298DFC B 0x3298E30
	0x03298E00 ADRP X8, 0xFFFFFFFFFE91D000
	0x03298E04 ADD X8, X8, 0x5A8
	0x03298E08 B 0x3298E30
	0x03298E0C TBZ X0, 0x0, 0x3298E28
	0x03298E10 ADRP X8, 0xFFFFFFFFFE91D000
	0x03298E14 ADD X8, X8, 0x604
	0x03298E18 B 0x3298E30
	0x03298E1C ADRP X8, 0xFFFFFFFFFE91D000
	0x03298E20 ADD X8, X8, 0x688
	0x03298E24 B 0x3298E30
	0x03298E28 ADRP X8, 0xFFFFFFFFFE91D000
	0x03298E2C ADD X8, X8, 0x5D8
	0x03298E30 STR X8, [X19 + 0x18]
	0x03298E34 ADRP X8, 0xFFFFFFFFFE91D000
	0x03298E38 ADD X8, X8, 0x558
	0x03298E3C STR X8, [X19 + 0x38]
	0x03298E40 LDP X20, X19, [X31 + 0x20]
	0x03298E44 LDP X22, X21, [X31 + 0x10]
	0x03298E48 LDR X30, [X31], #0x30
	0x03298E4C RET
	0x03298E50 ADRP X1, 0xFFFFFFFFFD883000
	0x03298E54 ADD X1, X1, 0xEE3
	0x03298E58 MOV X0, X31
	0x03298E5C BL 0x1C16F3C
	0x03298E60 MOV X1, X31
	0x03298E64 BL 0x1C16DEC
	0x03298E68 LDR X8, [X0 + 0x40]
	0x03298E6C LDR X3, [X0 + 0x18]
	0x03298E70 LDR X2, [X0 + 0x28]
	0x03298E74 MOV X0, X8
	0x03298E78 BR X3
	0x03298E7C STP X30, X19, [X31 - 0x10]!
	0x03298E80 LDRB W9, [X0 + 0x30]
	0x03298E84 CBZ W9, 0x3298EF8
	0x03298E88 LDR X9, [X0 + 0x10]
	0x03298E8C CBZ X9, 0x3298EF0
	0x03298E90 LDRSW X10, [X0 + 0x2C]
	0x03298E94 LDR W11, [X9 + 0x18]
	0x03298E98 CMP W10, W11
	0x03298E9C B.CS 0x3298EF4
	0x03298EA0 LDR X11, [X0 + 0x18]
	0x03298EA4 CBZ X11, 0x3298EF0
	0x03298EA8 LDR W12, [X11 + 0x18]
	0x03298EAC CMP W10, W12
	0x03298EB0 B.CS 0x3298EF4
	0x03298EB4 LDR X12, [X0 + 0x20]
	0x03298EB8 CBZ X12, 0x3298EF0
	0x03298EBC LDR W13, [X12 + 0x18]
	0x03298EC0 CMP W10, W13
	0x03298EC4 B.CS 0x3298EF4
	0x03298EC8 ADD X9, X9, X10, 0x3, LSL
	0x03298ECC ADD X11, X11, X10, 0x3, LSL
	0x03298ED0 ADD X10, X12, X10, 0x3, LSL
	0x03298ED4 LDR X9, [X9 + 0x20]
	0x03298ED8 LDR X11, [X11 + 0x20]
	0x03298EDC LDR X10, [X10 + 0x20]
	0x03298EE0 STP X9, X11, [X8]
	0x03298EE4 STR X10, [X8 + 0x10]
	0x03298EE8 LDP X30, X19, [X31], #0x10
	0x03298EEC RET
	0x03298EF0 BL 0x1C16F20
	0x03298EF4 BL 0x1C16F28
	0x03298EF8 ADRP X0, 0xE5B000
	0x03298EFC LDR X0, [X0 + 0x5B0]
	0x03298F00 BL 0x1C16D08
	0x03298F04 BL 0x1C16F10
	0x03298F08 MOV X19, X0
	0x03298F0C ADRP X0, 0xE85000
	0x03298F10 LDR X0, [X0 + 0x290]
	0x03298F14 BL 0x1C16D08
	0x03298F18 MOV X1, X0
	0x03298F1C MOV X0, X19
	0x03298F20 MOV X2, X31
	0x03298F24 BL 0x337DF1C
	0x03298F28 ADRP X0, 0xE8C000
	0x03298F2C LDR X0, [X0 + 0x920]
	0x03298F30 BL 0x1C16D08
	0x03298F34 MOV X1, X0
	0x03298F38 MOV X0, X19
	0x03298F3C BL 0x1C16DEC
	0x03298F40 STR X30, [X31 - 0x30]!
	0x03298F44 STP X22, X21, [X31 + 0x10]
	0x03298F48 STP X20, X19, [X31 + 0x20]
	0x03298F4C ADRP X21, 0x1144000
	0x03298F50 LDRB W8, [X21 + 0x707]
	0x03298F54 MOV X19, X1
	0x03298F58 MOV X20, X0
	0x03298F5C TBNZ X8, 0x0, 0x3298F74
	0x03298F60 ADRP X0, 0xE8C000
	0x03298F64 LDR X0, [X0 + 0x370]
	0x03298F68 BL 0x1C16CF4
	0x03298F6C MOVZ W8, 0x1
	0x03298F70 STRB W8, [X21 + 0x707]
	0x03298F74 MOV X0, X20
	0x03298F78 MOV X1, X31
	0x03298F7C BL 0x33BDD8C
	0x03298F80 CBZ X19, 0x329904C
	0x03298F84 LDR X0, [X19 + 0x38]
	0x03298F88 MOV X1, X31
	0x03298F8C BL 0x322D750
	0x03298F90 STR X0, [X20 + 0x10]
	0x03298F94 MOV X0, X19
	0x03298F98 BL 0x32958EC
	0x03298F9C LDR X1, [X19 + 0x10]
	0x03298FA0 MOV X2, X0
	0x03298FA4 MOV X21, X0
	0x03298FA8 BL 0x32952B8
	0x03298FAC STR X0, [X20 + 0x28]
	0x03298FB0 MOV X0, X19
	0x03298FB4 MOV X1, X21
	0x03298FB8 BL 0x32955F0
	0x03298FBC STR X0, [X20 + 0x40]
	0x03298FC0 CBNZ X0, 0x3298FE4
	0x03298FC4 ADRP X8, 0xE8C000
	0x03298FC8 LDR X8, [X8 + 0x370]
	0x03298FCC LDR X0, [X8]
	0x03298FD0 BL 0x1C16F10
	0x03298FD4 MOV X1, X31
	0x03298FD8 MOV X22, X0
	0x03298FDC BL 0x33BDD8C
	0x03298FE0 STR X22, [X20 + 0x40]
	0x03298FE4 MOV X0, X19
	0x03298FE8 BL 0x3293A74
	0x03298FEC LDR X8, [X20]
	0x03298FF0 STR X0, [X20 + 0x38]
	0x03298FF4 MOV X0, X20
	0x03298FF8 LDR X9, [X8 + 0x2A8]
	0x03298FFC LDR X1, [X8 + 0x2B0]
	0x03299000 BLR X9
	0x03299004 LDR W8, [X19 + 0x20]
	0x03299008 CMP W8, 0x1
	0x0329900C B.LT 0x329903C
	0x03299010 LDR X8, [X20]
	0x03299014 MOV X0, X20
	0x03299018 LDR X9, [X8 + 0x288]
	0x0329901C LDR X1, [X8 + 0x290]
	0x03299020 BLR X9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1145000
	006 Move W8, [X21+1815]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {45}
	013 Move X0, 0xE8D000
	014 Move X0, [X0+624]
	015 Call 0x1C17CF4
	016 Move X0, 0xE8D000
	017 Move X0, [X0+1120]
	018 Call 0x1C17CF4
	019 Move X0, 0xE8D000
	020 Move X0, [X0+2240]
	021 Call 0x1C17CF4
	022 Move X0, 0xE8D000
	023 Move X0, [X0+2248]
	024 Call 0x1C17CF4
	025 Move X0, 0xE8D000
	026 Move X0, [X0+2256]
	027 Call 0x1C17CF4
	028 Move X0, 0xE83000
	029 Move X0, [X0+736]
	030 Call 0x1C17CF4
	031 Move X0, 0xE8D000
	032 Move X0, [X0+2264]
	033 Call 0x1C17CF4
	034 Move X0, 0xE8D000
	035 Move X0, [X0+2280]
	036 Call 0x1C17CF4
	037 Move X0, 0xE8D000
	038 Move X0, [X0+2288]
	039 Call 0x1C17CF4
	040 Move X0, 0xE8D000
	041 Move X0, [X0+2272]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X21+1815], W8
	045 Move X0, X20
	046 Move X1, X31
	047 Call <PrivateImplementationDetails>.ComputeStringHash, X0
	048 Move W8, 0x9961
	049 NotImplemented "Instruction MOVK not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move W8, 0xB61A
	052 NotImplemented "Instruction MOVK not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move W8, 0xE67B
	055 NotImplemented "Instruction MOVK not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move W8, 0xB61A
	058 NotImplemented "Instruction MOVK not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X8, 0xE8D000
	061 Move X8, [X8+2272]
	062 Move X0, X20
	063 Move X2, X31
	064 Move X1, [X8]
	065 Call String.op_Equality, X0, X1
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {325}
	070 Move X19, [X19+24]
	071 Compare X19, 0
	072 JumpIfEqual {353}
	073 Move X10, 0xE8D000
	074 Move X8, [X19]
	075 Move X10, [X10+624]
	076 NotImplemented "Instruction LDRH not yet implemented."
	077 Move X1, [X10]
	078 Compare X9, 0
	079 JumpIfEqual {86}
	080 Move X10, [X8+176]
	081 Add X10, X10, 8
	082 NotImplemented "Instruction LDUR not yet implemented."
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Subtract X9, X9, 1
	085 Add X10, X10, 16
	086 Move W2, 2
	087 Move W8, 0x5180
	088 NotImplemented "Instruction MOVK not yet implemented."
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move W8, 0xFD0C
	091 NotImplemented "Instruction MOVK not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move W8, 0x5180
	094 NotImplemented "Instruction MOVK not yet implemented."
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X8, 0xE83000
	097 Move X8, [X8+736]
	098 Move X0, X20
	099 Move X2, X31
	100 Move X1, [X8]
	101 Call String.op_Equality, X0, X1
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfNotEqual {325}
	106 Move X19, [X19+24]
	107 Compare X19, 0
	108 JumpIfEqual {353}
	109 Move X10, 0xE8D000
	110 Move X8, [X19]
	111 Move X10, [X10+624]
	112 NotImplemented "Instruction LDRH not yet implemented."
	113 Move X1, [X10]
	114 Compare X9, 0
	115 JumpIfEqual {122}
	116 Move X10, [X8+176]
	117 Add X10, X10, 8
	118 NotImplemented "Instruction LDUR not yet implemented."
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Subtract X9, X9, 1
	121 Add X10, X10, 16
	122 Move W2, 6
	123 Move W8, 0x6D56
	124 NotImplemented "Instruction MOVK not yet implemented."
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move W8, 0x9961
	127 NotImplemented "Instruction MOVK not yet implemented."
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move X8, 0xE8D000
	130 Move X8, [X8+2288]
	131 Move X0, X20
	132 Move X2, X31
	133 Move X1, [X8]
	134 Call String.op_Equality, X0, X1
	135 Move TEMP, X0
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfNotEqual {325}
	139 Move X21, [X19+24]
	140 Compare X21, 0
	141 JumpIfEqual {353}
	142 Move X20, 0xE8D000
	143 Move X20, [X20+1120]
	144 Move X0, X21
	145 Move X19, [X20]
	146 Move X1, X19
	147 Call 0x1C17E00
	148 Compare X0, 0
	149 JumpIfEqual {354}
	150 Move X20, [X20]
	151 Move X0, X21
	152 Move X1, X20
	153 Call 0x1C17E00
	154 Compare X0, 0
	155 JumpIfEqual {357}
	156 Move X8, [X0]
	157 Move X19, X0
	158 NotImplemented "Instruction LDRH not yet implemented."
	159 Compare X9, 0
	160 JumpIfEqual {167}
	161 Move X10, [X8+176]
	162 Add X10, X10, 8
	163 NotImplemented "Instruction LDUR not yet implemented."
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Subtract X9, X9, 1
	166 Add X10, X10, 16
	167 Move W2, 2
	168 Move W8, 633
	169 NotImplemented "Instruction MOVK not yet implemented."
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Move W8, 3896
	172 NotImplemented "Instruction MOVK not yet implemented."
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Move X8, 0xE8D000
	175 Move X8, [X8+2256]
	176 Move X0, X20
	177 Move X2, X31
	178 Move X1, [X8]
	179 Call String.op_Equality, X0, X1
	180 Move TEMP, X0
	181 And TEMP, TEMP, 1
	182 Compare TEMP, 1
	183 JumpIfNotEqual {325}
	184 Move X19, [X19+24]
	185 Compare X19, 0
	186 JumpIfEqual {353}
	187 Move X10, 0xE8D000
	188 Move X8, [X19]
	189 Move X10, [X10+624]
	190 NotImplemented "Instruction LDRH not yet implemented."
	191 Move X1, [X10]
	192 Compare X9, 0
	193 JumpIfEqual {200}
	194 Move X10, [X8+176]
	195 Add X10, X10, 8
	196 NotImplemented "Instruction LDUR not yet implemented."
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Subtract X9, X9, 1
	199 Add X10, X10, 16
	200 Move W2, 5
	201 Move X8, 0xE8D000
	202 Move X8, [X8+2248]
	203 Move X0, X20
	204 Move X2, X31
	205 Move X1, [X8]
	206 Call String.op_Equality, X0, X1
	207 Move TEMP, X0
	208 And TEMP, TEMP, 1
	209 Compare TEMP, 1
	210 JumpIfNotEqual {325}
	211 Move X19, [X19+24]
	212 Compare X19, 0
	213 JumpIfEqual {353}
	214 Move X10, 0xE8D000
	215 Move X8, [X19]
	216 Move X10, [X10+624]
	217 NotImplemented "Instruction LDRH not yet implemented."
	218 Move X1, [X10]
	219 Compare X9, 0
	220 JumpIfEqual {227}
	221 Move X10, [X8+176]
	222 Add X10, X10, 8
	223 NotImplemented "Instruction LDUR not yet implemented."
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Subtract X9, X9, 1
	226 Add X10, X10, 16
	227 Move W2, 7
	228 Move X8, 0xE8D000
	229 Move X8, [X8+2280]
	230 Move X0, X20
	231 Move X2, X31
	232 Move X1, [X8]
	233 Call String.op_Equality, X0, X1
	234 Move TEMP, X0
	235 And TEMP, TEMP, 1
	236 Compare TEMP, 1
	237 JumpIfNotEqual {325}
	238 Move X21, [X19+24]
	239 Compare X21, 0
	240 JumpIfEqual {353}
	241 Move X20, 0xE8D000
	242 Move X20, [X20+1120]
	243 Move X0, X21
	244 Move X19, [X20]
	245 Move X1, X19
	246 Call 0x1C17E00
	247 Compare X0, 0
	248 JumpIfEqual {354}
	249 Move X20, [X20]
	250 Move X0, X21
	251 Move X1, X20
	252 Call 0x1C17E00
	253 Compare X0, 0
	254 JumpIfEqual {357}
	255 Move X8, [X0]
	256 Move X19, X0
	257 NotImplemented "Instruction LDRH not yet implemented."
	258 Compare X9, 0
	259 JumpIfEqual {266}
	260 Move X10, [X8+176]
	261 Add X10, X10, 8
	262 NotImplemented "Instruction LDUR not yet implemented."
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Subtract X9, X9, 1
	265 Add X10, X10, 16
	266 Move W2, 1
	267 Move X0, X19
	268 Move X1, X20
	269 Move X8, 0xE8D000
	270 Move X8, [X8+2240]
	271 Move X0, X20
	272 Move X2, X31
	273 Move X1, [X8]
	274 Call String.op_Equality, X0, X1
	275 Move TEMP, X0
	276 And TEMP, TEMP, 1
	277 Compare TEMP, 1
	278 JumpIfNotEqual {325}
	279 Move X19, [X19+24]
	280 Compare X19, 0
	281 JumpIfEqual {353}
	282 Move X10, 0xE8D000
	283 Move X8, [X19]
	284 Move X10, [X10+624]
	285 NotImplemented "Instruction LDRH not yet implemented."
	286 Move X1, [X10]
	287 Compare X9, 0
	288 JumpIfEqual {295}
	289 Move X10, [X8+176]
	290 Add X10, X10, 8
	291 NotImplemented "Instruction LDUR not yet implemented."
	292 NotImplemented "Instruction CMP not yet implemented."
	293 Subtract X9, X9, 1
	294 Add X10, X10, 16
	295 Move W2, 1
	296 Move X8, 0xE8D000
	297 Move X8, [X8+2264]
	298 Move X0, X20
	299 Move X2, X31
	300 Move X1, [X8]
	301 Call String.op_Equality, X0, X1
	302 Move TEMP, X0
	303 And TEMP, TEMP, 1
	304 Compare TEMP, 1
	305 JumpIfNotEqual {325}
	306 Move X19, [X19+24]
	307 Compare X19, 0
	308 JumpIfEqual {353}
	309 Move X10, 0xE8D000
	310 Move X8, [X19]
	311 Move X10, [X10+624]
	312 NotImplemented "Instruction LDRH not yet implemented."
	313 Move X1, [X10]
	314 Compare X9, 0
	315 JumpIfEqual {322}
	316 Move X10, [X8+176]
	317 Add X10, X10, 8
	318 NotImplemented "Instruction LDUR not yet implemented."
	319 NotImplemented "Instruction CMP not yet implemented."
	320 Subtract X9, X9, 1
	321 Add X10, X10, 16
	322 Move W2, 4
	323 Move X0, X19
	324 Call 0x1C5D788
	325 Move X20, [X31+16]
	326 Move X19, [X31+24]
	327 Move X0, X31
	328 Move X30, [X31+32]
	329 Move X21, [X31+40]
	330 Return X0
	331 Move W9, [X10]
	332 Add W9, W9, 2
	333 Move W9, [X10]
	334 Add W9, W9, 1
	335 Move W9, [X10]
	336 Add W9, W9, 6
	337 Move W9, [X10]
	338 Add W9, W9, 5
	339 Move W9, [X10]
	340 Add W9, W9, 7
	341 Move W9, [X10]
	342 Add W9, W9, 4
	343 Add X8, X8, W9
	344 Add X0, X8, 312
	345 Move X2, [X0]
	346 Move X1, [X0+8]
	347 Move X0, X19
	348 Move X20, [X31+16]
	349 Move X19, [X31+24]
	350 Move X30, [X31+32]
	351 Move X21, [X31+40]
	352 CallNoReturn X2
	353 Call 0x1C17F20
	354 Move X0, X21
	355 Move X1, X19
	356 Call 0x1C181E0
	357 Move X0, X21
	358 Move X1, X20
	359 Call 0x1C181E0

Method: System.Void SetMethodProperty(System.String key, System.Object value)

Disassembly:
	0x0329928C LDR X22, [X24]
	0x03299290 MOV X1, X22
	0x03299294 BL 0x1C16E00
	0x03299298 CBZ X0, 0x32992B4
	0x0329929C STR X0, [X19 + 0x30]
	0x032992A0 LDR X22, [X24]
	0x032992A4 MOV X0, X21
	0x032992A8 MOV X1, X22
	0x032992AC BL 0x1C16E00
	0x032992B0 CBNZ X0, 0x32992C4
	0x032992B4 MOV X0, X21
	0x032992B8 MOV X1, X22
	0x032992BC BL 0x1C171E0
	0x032992C0 STR X31, [X19 + 0x30]
	0x032992C4 LDR X8, [X20]
	0x032992C8 LDR X1, [X23]
	0x032992CC LDRH W9, [X8 + 0x12E]
	0x032992D0 CBZ X9, 0x32992F4
	0x032992D4 LDR X10, [X8 + 0xB0]
	0x032992D8 ADD X10, X10, 0x8
	0x032992DC LDUR X11, [X10 - 0x8]
	0x032992E0 CMP X11, X1
	0x032992E4 B.EQ 0x3299304
	0x032992E8 SUBS X9, X9, 0x1
	0x032992EC ADD X10, X10, 0x10
	0x032992F0 B.NE 0x32992DC
	0x032992F4 MOVZ W2, 0x3
	0x032992F8 MOV X0, X20
	0x032992FC BL 0x1C5C788
	0x03299300 B 0x3299314
	0x03299304 LDR W9, [X10]
	0x03299308 ADD W9, W9, 0x3
	0x0329930C ADD X8, X8, W9, 0x4, SXTW
	0x03299310 ADD X0, X8, 0x138
	0x03299314 LDP X8, X1, [X0]
	0x03299318 MOV X0, X20
	0x0329931C BLR X8
	0x03299320 STR X0, [X19 + 0x38]
	0x03299324 LDR X8, [X20]
	0x03299328 LDR X1, [X23]
	0x0329932C LDRH W9, [X8 + 0x12E]
	0x03299330 CBZ X9, 0x3299354
	0x03299334 LDR X10, [X8 + 0xB0]
	0x03299338 ADD X10, X10, 0x8
	0x0329933C LDUR X11, [X10 - 0x8]
	0x03299340 CMP X11, X1
	0x03299344 B.EQ 0x3299364
	0x03299348 SUBS X9, X9, 0x1
	0x0329934C ADD X10, X10, 0x10
	0x03299350 B.NE 0x329933C
	0x03299354 MOVZ W2, 0x2
	0x03299358 MOV X0, X20
	0x0329935C BL 0x1C5C788
	0x03299360 B 0x3299374
	0x03299364 LDR W9, [X10]
	0x03299368 ADD W9, W9, 0x2
	0x0329936C ADD X8, X8, W9, 0x4, SXTW
	0x03299370 ADD X0, X8, 0x138
	0x03299374 LDP X8, X1, [X0]
	0x03299378 MOV X0, X20
	0x0329937C BLR X8
	0x03299380 LDR X8, [X19]
	0x03299384 STR X0, [X19 + 0x40]
	0x03299388 MOV X0, X19
	0x0329938C LDP X20, X19, [X31 + 0x30]
	0x03299390 LDR X2, [X8 + 0x2A8]
	0x03299394 LDR X1, [X8 + 0x2B0]
	0x03299398 LDP X22, X21, [X31 + 0x20]
	0x0329939C LDP X24, X23, [X31 + 0x10]
	0x032993A0 LDR X30, [X31], #0x40
	0x032993A4 BR X2
	0x032993A8 BL 0x1C16F20
	0x032993AC STR X30, [X31 - 0x10]!
	0x032993B0 LDR X8, [X0 + 0x28]
	0x032993B4 CBZ X8, 0x32993C4
	0x032993B8 LDR W0, [X8 + 0x18]
	0x032993BC LDR X30, [X31], #0x10
	0x032993C0 RET
	0x032993C4 BL 0x1C16F20
	0x032993C8 LDR X0, [X0 + 0x28]
	0x032993CC RET
	0x032993D0 STR X30, [X31 - 0x20]!
	0x032993D4 STP X20, X19, [X31 + 0x10]
	0x032993D8 ADRP X20, 0x1143000
	0x032993DC LDRB W8, [X20 + 0x70B]
	0x032993E0 MOV X19, X0
	0x032993E4 TBNZ X8, 0x0, 0x32993FC
	0x032993E8 ADRP X0, 0xE8B000
	0x032993EC LDR X0, [X0 + 0x370]
	0x032993F0 BL 0x1C16CF4
	0x032993F4 MOVZ W8, 0x1
	0x032993F8 STRB W8, [X20 + 0x70B]
	0x032993FC LDR X20, [X19 + 0x40]
	0x03299400 CBNZ X20, 0x3299424
	0x03299404 ADRP X8, 0xE8B000
	0x03299408 LDR X8, [X8 + 0x370]
	0x0329940C LDR X0, [X8]
	0x03299410 BL 0x1C16F10
	0x03299414 MOV X1, X31
	0x03299418 MOV X20, X0
	0x0329941C BL 0x33BDD8C
	0x03299420 STR X20, [X19 + 0x40]
	0x03299424 MOV X0, X20
	0x03299428 LDP X20, X19, [X31 + 0x10]
	0x0329942C LDR X30, [X31], #0x20
	0x03299430 RET
	0x03299434 STP X30, X19, [X31 - 0x10]!
	0x03299438 MOV X19, X0
	0x0329943C LDR X0, [X0 + 0x38]
	0x03299440 MOV X1, X31
	0x03299444 MOV X2, X31
	0x03299448 BL 0x32CE12C
	0x0329944C TBZ X0, 0x0, 0x3299458
	0x03299450 MOV X0, X19
	0x03299454 BL 0x3299464
	0x03299458 LDR X0, [X19 + 0x38]
	0x0329945C LDP X30, X19, [X31], #0x10
	0x03299460 RET
	0x03299464 STP X30, X25, [X31 - 0x40]!
	0x03299468 STP X24, X23, [X31 + 0x10]
	0x0329946C STP X22, X21, [X31 + 0x20]
	0x03299470 STP X20, X19, [X31 + 0x30]
	0x03299474 ADRP X20, 0x1143000
	0x03299478 ADRP X24, 0xE8A000
	0x0329947C LDRB W8, [X20 + 0x70E]
	0x03299480 LDR X24, [X24 + 0xE68]
	0x03299484 MOV X19, X0
	0x03299488 TBNZ X8, 0x0, 0x32994B8
	0x0329948C ADRP X0, 0xE8B000
	0x03299490 LDR X0, [X0 + 0x278]
	0x03299494 BL 0x1C16CF4
	0x03299498 ADRP X0, 0xE8A000
	0x0329949C LDR X0, [X0 + 0xE68]
	0x032994A0 BL 0x1C16CF4
	0x032994A4 ADRP X0, 0xE5A000
	0x032994A8 LDR X0, [X0 + 0x6C0]
	0x032994AC BL 0x1C16CF4
	0x032994B0 MOVZ W8, 0x1
	0x032994B4 STRB W8, [X20 + 0x70E]
	0x032994B8 LDR X0, [X24]
	0x032994BC LDR X20, [X19 + 0x10]
	0x032994C0 LDR W8, [X0 + 0xE0]
	0x032994C4 CBZ X20, 0x3299658
	0x032994C8 ADRP X25, 0xE5A000
	0x032994CC LDR X25, [X25 + 0x6C0]
	0x032994D0 CBNZ W8, 0x32994D8
	0x032994D4 BL 0x1C16DFC
	0x032994D8 MOV X0, X20
	0x032994DC MOV X1, X31
	0x032994E0 BL 0x327E8A8
	0x032994E4 LDR X8, [X25]
	0x032994E8 MOV X20, X0
	0x032994EC LDR W9, [X8 + 0xE0]
	0x032994F0 CBNZ W9, 0x32994FC
	0x032994F4 MOV X0, X8
	0x032994F8 BL 0x1C16DFC
	0x032994FC MOV X0, X20
	0x03299500 MOV X1, X31
	0x03299504 MOV X2, X31
	0x03299508 BL 0x3395194
	0x0329950C LDR X21, [X19 + 0x18]
	0x03299510 TBNZ X0, 0x0, 0x329973C
	0x03299514 MOV X1, X21
	0x03299518 MOV X2, X20
	0x0329951C BL 0x3299CA8
	0x03299520 LDR X8, [X25]
	0x03299524 MOV X21, X0
	0x03299528 LDR W9, [X8 + 0xE0]
	0x0329952C CBNZ W9, 0x3299538
	0x03299530 MOV X0, X8
	0x03299534 BL 0x1C16DFC
	0x03299538 MOV X0, X21
	0x0329953C MOV X1, X31
	0x03299540 MOV X2, X31
	0x03299544 BL 0x3395194
	0x03299548 TBNZ X0, 0x0, 0x3299750
	0x0329954C LDR X0, [X24]
	0x03299550 LDR X22, [X19 + 0x20]
	0x03299554 LDR X23, [X19 + 0x30]
	0x03299558 LDR W8, [X0 + 0xE0]
	0x0329955C CBNZ W8, 0x3299564
	0x03299560 BL 0x1C16DFC
	0x03299564 MOV X0, X21
	0x03299568 MOV X1, X22

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1144000
	007 Move W8, [X22+1816]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {47}
	015 Move X0, 0xE8C000
	016 Move X0, [X0+888]
	017 Call 0x1C17CF4
	018 Move X0, 0xE5D000
	019 Move X0, [X0+632]
	020 Call 0x1C17CF4
	021 Move X0, 0xE8C000
	022 Move X0, [X0+2240]
	023 Call 0x1C17CF4
	024 Move X0, 0xE8C000
	025 Move X0, [X0+2248]
	026 Call 0x1C17CF4
	027 Move X0, 0xE8C000
	028 Move X0, [X0+2256]
	029 Call 0x1C17CF4
	030 Move X0, 0xE82000
	031 Move X0, [X0+736]
	032 Call 0x1C17CF4
	033 Move X0, 0xE8C000
	034 Move X0, [X0+2264]
	035 Call 0x1C17CF4
	036 Move X0, 0xE8C000
	037 Move X0, [X0+2280]
	038 Call 0x1C17CF4
	039 Move X0, 0xE8C000
	040 Move X0, [X0+2288]
	041 Call 0x1C17CF4
	042 Move X0, 0xE8C000
	043 Move X0, [X0+2272]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X22+1816], W8
	047 Move X0, X20
	048 Move X1, X31
	049 Call <PrivateImplementationDetails>.ComputeStringHash, X0
	050 Move W8, 0x9961
	051 NotImplemented "Instruction MOVK not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move W8, 0xB61A
	054 NotImplemented "Instruction MOVK not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move W8, 0xE67B
	057 NotImplemented "Instruction MOVK not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move W8, 0xB61A
	060 NotImplemented "Instruction MOVK not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X8, 0xE8C000
	063 Move X8, [X8+2272]
	064 Move W8, 0x5180
	065 NotImplemented "Instruction MOVK not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move W8, 0xFD0C
	068 NotImplemented "Instruction MOVK not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move W8, 0x5180
	071 NotImplemented "Instruction MOVK not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X8, 0xE82000
	074 Move X8, [X8+736]
	075 Move W8, 0x6D56
	076 NotImplemented "Instruction MOVK not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move W8, 0x9961
	079 NotImplemented "Instruction MOVK not yet implemented."
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X8, 0xE8C000
	082 Move X8, [X8+2288]
	083 Move W8, 633
	084 NotImplemented "Instruction MOVK not yet implemented."
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move W8, 3896
	087 NotImplemented "Instruction MOVK not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X8, 0xE8C000
	090 Move X8, [X8+2256]
	091 Move X8, 0xE8C000
	092 Move X8, [X8+2248]
	093 Move X0, X20
	094 Move X2, X31
	095 Move X1, [X8]
	096 Call String.op_Equality, X0, X1
	097 Move TEMP, X0
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfNotEqual {140}
	101 Move X22, [X21+24]
	102 Compare X22, 0
	103 JumpIfEqual {176}
	104 Move X21, 0xE8C000
	105 Move X21, [X21+888]
	106 Move X0, X22
	107 Move X20, [X21]
	108 Move X1, X20
	109 Call 0x1C17E00
	110 Compare X0, 0
	111 JumpIfEqual {177}
	112 Move X21, [X21]
	113 Move X0, X22
	114 Move X1, X21
	115 Call 0x1C17E00
	116 Compare X0, 0
	117 JumpIfEqual {180}
	118 Move X20, X0
	119 Compare X19, 0
	120 JumpIfEqual {126}
	121 Move X8, 0xE5D000
	122 Move X8, [X8+632]
	123 Move X1, [X8]
	124 Move X8, [X19]
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move X8, [X20]
	127 NotImplemented "Instruction LDRH not yet implemented."
	128 Compare X9, 0
	129 JumpIfEqual {136}
	130 Move X10, [X8+176]
	131 Add X10, X10, 8
	132 NotImplemented "Instruction LDUR not yet implemented."
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Subtract X9, X9, 1
	135 Add X10, X10, 16
	136 Move W2, 3
	137 Move X0, X20
	138 Move X1, X21
	139 Call 0x1C5D788
	140 Move X20, [X31+32]
	141 Move X19, [X31+40]
	142 Move X22, [X31+16]
	143 Move X21, [X31+24]
	144 Move X30, [X31+48]
	145 Return 
	146 Move X8, 0xE8C000
	147 Move X8, [X8+2280]
	148 Move X8, 0xE8C000
	149 Move X8, [X8+2240]
	150 Move X8, 0xE8C000
	151 Move X8, [X8+2264]
	152 Move X1, [X8]
	153 Move X0, X20
	154 Move X20, [X31+32]
	155 Move X19, [X31+40]
	156 Move X22, [X31+16]
	157 Move X21, [X31+24]
	158 Move X2, X31
	159 Move X30, [X31+48]
	160 Call String.op_Equality, X0, X1
	161 Return 
	162 Move W9, [X10]
	163 Add W9, W9, 3
	164 Add X8, X8, W9
	165 Add X0, X8, 312
	166 Move X3, [X0]
	167 Move X2, [X0+8]
	168 Move X0, X20
	169 Move X1, X19
	170 Move X20, [X31+32]
	171 Move X19, [X31+40]
	172 Move X22, [X31+16]
	173 Move X21, [X31+24]
	174 Move X30, [X31+48]
	175 CallNoReturn X3
	176 Call 0x1C17F20
	177 Move X0, X22
	178 Move X1, X20
	179 Call 0x1C181E0
	180 Move X0, X22
	181 Move X1, X21
	182 Call 0x1C181E0
	183 Move X0, X19
	184 Call 0x1C181E0

Method: System.Collections.ICollection get_Keys()

Disassembly:
	0x0329B41C ADRP X0, 0xE89000
	0x0329B420 LDR X0, [X0 + 0x988]
	0x0329B424 BL 0x1C16D08
	0x0329B428 MOV X1, X0
	0x0329B42C MOV X0, X19
	0x0329B430 BL 0x1C16DEC
	0x0329B434 BL 0x1C16F28
	0x0329B438 STP X30, X25, [X31 - 0x40]!
	0x0329B43C STP X24, X23, [X31 + 0x10]
	0x0329B440 STP X22, X21, [X31 + 0x20]
	0x0329B444 STP X20, X19, [X31 + 0x30]
	0x0329B448 ADRP X20, 0x1141000
	0x0329B44C LDRB W8, [X20 + 0x724]
	0x0329B450 MOV X19, X0
	0x0329B454 TBNZ X8, 0x0, 0x329B484
	0x0329B458 ADRP X0, 0xE85000
	0x0329B45C LDR X0, [X0 + 0xF80]
	0x0329B460 BL 0x1C16CF4
	0x0329B464 ADRP X0, 0xE58000
	0x0329B468 LDR X0, [X0 + 0xE18]
	0x0329B46C BL 0x1C16CF4
	0x0329B470 ADRP X0, 0xE5A000
	0x0329B474 LDR X0, [X0 + 0x278]
	0x0329B478 BL 0x1C16CF4
	0x0329B47C MOVZ W8, 0x1
	0x0329B480 STRB W8, [X20 + 0x724]
	0x0329B484 LDR W8, [X19 + 0x20]
	0x0329B488 ADDS W31, W8, 0x2
	0x0329B48C B.EQ 0x329B4C4
	0x0329B490 LDR X9, [X19 + 0x10]
	0x0329B494 ADD W8, W8, 0x1
	0x0329B498 STR W8, [X19 + 0x20]
	0x0329B49C CBZ X9, 0x329B5DC
	0x0329B4A0 LDR X9, [X9 + 0x20]
	0x0329B4A4 CBZ X9, 0x329B5DC
	0x0329B4A8 LDR W9, [X9 + 0x18]
	0x0329B4AC CMP W8, W9
	0x0329B4B0 B.GE 0x329B4BC
	0x0329B4B4 MOVZ W20, 0x1
	0x0329B4B8 B 0x329B5E4
	0x0329B4BC MOVN W8, 0x1
	0x0329B4C0 STR W8, [X19 + 0x20]
	0x0329B4C4 LDR X20, [X19 + 0x18]
	0x0329B4C8 CBZ X20, 0x329B5E4
	0x0329B4CC ADRP X23, 0xE58000
	0x0329B4D0 ADRP X24, 0xE85000
	0x0329B4D4 ADRP X25, 0xE5A000
	0x0329B4D8 LDR X23, [X23 + 0xE18]
	0x0329B4DC LDR X24, [X24 + 0xF80]
	0x0329B4E0 LDR X25, [X25 + 0x278]
	0x0329B4E4 LDR X8, [X20]
	0x0329B4E8 LDR X1, [X23]
	0x0329B4EC LDRH W9, [X8 + 0x12E]
	0x0329B4F0 CBZ X9, 0x329B514
	0x0329B4F4 LDR X10, [X8 + 0xB0]
	0x0329B4F8 ADD X10, X10, 0x8
	0x0329B4FC LDUR X11, [X10 - 0x8]
	0x0329B500 CMP X11, X1
	0x0329B504 B.EQ 0x329B524
	0x0329B508 SUBS X9, X9, 0x1
	0x0329B50C ADD X10, X10, 0x10
	0x0329B510 B.NE 0x329B4FC
	0x0329B514 MOV X0, X20
	0x0329B518 MOV W2, W31
	0x0329B51C BL 0x1C5C788
	0x0329B520 B 0x329B530
	0x0329B524 LDRSW X9, [X10]
	0x0329B528 ADD X8, X8, X9, 0x4, LSL
	0x0329B52C ADD X0, X8, 0x138
	0x0329B530 LDP X8, X1, [X0]
	0x0329B534 MOV X0, X20
	0x0329B538 BLR X8
	0x0329B53C TBZ X0, 0x0, 0x329B5E0
	0x0329B540 LDR X22, [X19 + 0x18]
	0x0329B544 MOV W20, W0
	0x0329B548 CBZ X22, 0x329B5DC
	0x0329B54C LDR X8, [X22]
	0x0329B550 LDR X21, [X19 + 0x10]
	0x0329B554 LDR X1, [X24]
	0x0329B558 LDRH W9, [X8 + 0x12E]
	0x0329B55C CBZ X9, 0x329B580
	0x0329B560 LDR X10, [X8 + 0xB0]
	0x0329B564 ADD X10, X10, 0x8
	0x0329B568 LDUR X11, [X10 - 0x8]
	0x0329B56C CMP X11, X1
	0x0329B570 B.EQ 0x329B590
	0x0329B574 SUBS X9, X9, 0x1
	0x0329B578 ADD X10, X10, 0x10
	0x0329B57C B.NE 0x329B568
	0x0329B580 MOV X0, X22
	0x0329B584 MOV W2, W31
	0x0329B588 BL 0x1C5C788
	0x0329B58C B 0x329B59C
	0x0329B590 LDRSW X9, [X10]
	0x0329B594 ADD X8, X8, X9, 0x4, LSL
	0x0329B598 ADD X0, X8, 0x138
	0x0329B59C LDP X8, X1, [X0]
	0x0329B5A0 MOV X0, X22
	0x0329B5A4 BLR X8
	0x0329B5A8 CBZ X21, 0x329B5DC
	0x0329B5AC MOV X8, X0
	0x0329B5B0 CBZ X0, 0x329B5C4
	0x0329B5B4 LDR X1, [X25]
	0x0329B5B8 LDR X9, [X8]
	0x0329B5BC CMP X9, X1
	0x0329B5C0 B.NE 0x329B5FC
	0x0329B5C4 MOV X0, X21
	0x0329B5C8 MOV X1, X8
	0x0329B5CC BL 0x329A0E8
	0x0329B5D0 TBZ X0, 0x0, 0x329B5E4
	0x0329B5D4 LDR X20, [X19 + 0x18]
	0x0329B5D8 CBNZ X20, 0x329B4E4
	0x0329B5DC BL 0x1C16F20
	0x0329B5E0 MOV W20, W31
	0x0329B5E4 AND W0, W20, 0x1
	0x0329B5E8 LDP X20, X19, [X31 + 0x30]
	0x0329B5EC LDP X22, X21, [X31 + 0x20]
	0x0329B5F0 LDP X24, X23, [X31 + 0x10]
	0x0329B5F4 LDP X30, X25, [X31], #0x40
	0x0329B5F8 RET
	0x0329B5FC MOV X0, X8
	0x0329B600 BL 0x1C171E0
	0x0329B604 STR X30, [X31 - 0x20]!
	0x0329B608 STP X20, X19, [X31 + 0x10]
	0x0329B60C ADRP X19, 0x1141000
	0x0329B610 LDRB W8, [X19 + 0x725]
	0x0329B614 MOV X20, X0
	0x0329B618 TBNZ X8, 0x0, 0x329B630
	0x0329B61C ADRP X0, 0xE58000
	0x0329B620 LDR X0, [X0 + 0xE18]
	0x0329B624 BL 0x1C16CF4
	0x0329B628 MOVZ W8, 0x1
	0x0329B62C STRB W8, [X19 + 0x725]
	0x0329B630 LDR X19, [X20 + 0x18]
	0x0329B634 MOVN W8, 0x0
	0x0329B638 STR W8, [X20 + 0x20]
	0x0329B63C CBZ X19, 0x329B6AC
	0x0329B640 ADRP X10, 0xE58000
	0x0329B644 LDR X8, [X19]
	0x0329B648 LDR X10, [X10 + 0xE18]
	0x0329B64C LDRH W9, [X8 + 0x12E]
	0x0329B650 LDR X1, [X10]
	0x0329B654 CBZ X9, 0x329B678
	0x0329B658 LDR X10, [X8 + 0xB0]
	0x0329B65C ADD X10, X10, 0x8
	0x0329B660 LDUR X11, [X10 - 0x8]
	0x0329B664 CMP X11, X1
	0x0329B668 B.EQ 0x329B688
	0x0329B66C SUBS X9, X9, 0x1
	0x0329B670 ADD X10, X10, 0x10
	0x0329B674 B.NE 0x329B660
	0x0329B678 MOVZ W2, 0x2
	0x0329B67C MOV X0, X19
	0x0329B680 BL 0x1C5C788
	0x0329B684 B 0x329B698
	0x0329B688 LDR W9, [X10]
	0x0329B68C ADD W9, W9, 0x2
	0x0329B690 ADD X8, X8, W9, 0x4, SXTW
	0x0329B694 ADD X0, X8, 0x138
	0x0329B698 LDP X2, X1, [X0]
	0x0329B69C MOV X0, X19
	0x0329B6A0 LDP X20, X19, [X31 + 0x10]
	0x0329B6A4 LDR X30, [X31], #0x20
	0x0329B6A8 BR X2
	0x0329B6AC BL 0x1C16F20
	0x0329B6B0 B 0x329B2D0
	0x0329B6B4 STR X30, [X31 - 0x10]!
	0x0329B6B8 BL 0x329B2D0
	0x0329B6BC MOV X0, X1
	0x0329B6C0 LDR X30, [X31], #0x10
	0x0329B6C4 RET
	0x0329B6C8 STR X30, [X31 - 0x30]!
	0x0329B6CC STP X22, X21, [X31 + 0x10]
	0x0329B6D0 STP X20, X19, [X31 + 0x20]
	0x0329B6D4 ADRP X22, 0x1141000
	0x0329B6D8 LDRB W8, [X22 + 0x729]
	0x0329B6DC MOV X19, X2
	0x0329B6E0 MOV X21, X1
	0x0329B6E4 MOV X20, X0
	0x0329B6E8 TBNZ X8, 0x0, 0x329B70C
	0x0329B6EC ADRP X0, 0xE89000
	0x0329B6F0 LDR X0, [X0 + 0x270]
	0x0329B6F4 BL 0x1C16CF4
	0x0329B6F8 ADRP X0, 0xE89000
	0x0329B6FC LDR X0, [X0 + 0x370]
	0x0329B700 BL 0x1C16CF4
	0x0329B704 MOVZ W8, 0x1
	0x0329B708 STRB W8, [X22 + 0x729]
	0x0329B70C MOV X0, X20
	0x0329B710 MOV X1, X31
	0x0329B714 BL 0x33BDD8C
	0x0329B718 STR X21, [X20 + 0x60]
	0x0329B71C CBZ X21, 0x329B904
	0x0329B720 ADRP X22, 0xE89000
	0x0329B724 LDR X8, [X21]
	0x0329B728 LDR X22, [X22 + 0x270]
	0x0329B72C LDRH W9, [X8 + 0x12E]
	0x0329B730 LDR X1, [X22]
	0x0329B734 CBZ X9, 0x329B758
	0x0329B738 LDR X10, [X8 + 0xB0]
	0x0329B73C ADD X10, X10, 0x8
	0x0329B740 LDUR X11, [X10 - 0x8]
	0x0329B744 CMP X11, X1
	0x0329B748 B.EQ 0x329B768
	0x0329B74C SUBS X9, X9, 0x1
	0x0329B750 ADD X10, X10, 0x10
	0x0329B754 B.NE 0x329B740
	0x0329B758 MOVZ W2, 0x3
	0x0329B75C MOV X0, X21
	0x0329B760 BL 0x1C5C788
	0x0329B764 B 0x329B778
	0x0329B768 LDR W9, [X10]
	0x0329B76C ADD W9, W9, 0x3
	0x0329B770 ADD X8, X8, W9, 0x4, SXTW
	0x0329B774 ADD X0, X8, 0x138
	0x0329B778 LDP X8, X1, [X0]
	0x0329B77C MOV X0, X21
	0x0329B780 BLR X8
	0x0329B784 STR X0, [X20 + 0x28]
	0x0329B788 LDR X8, [X21]
	0x0329B78C LDR X1, [X22]
	0x0329B790 LDRH W9, [X8 + 0x12E]
	0x0329B794 CBZ X9, 0x329B7B8
	0x0329B798 LDR X10, [X8 + 0xB0]
	0x0329B79C ADD X10, X10, 0x8
	0x0329B7A0 LDUR X11, [X10 - 0x8]
	0x0329B7A4 CMP X11, X1
	0x0329B7A8 B.EQ 0x329B7C8
	0x0329B7AC SUBS X9, X9, 0x1
	0x0329B7B0 ADD X10, X10, 0x10
	0x0329B7B4 B.NE 0x329B7A0
	0x0329B7B8 MOVZ W2, 0x7
	0x0329B7BC MOV X0, X21
	0x0329B7C0 BL 0x1C5C788
	0x0329B7C4 B 0x329B7D8
	0x0329B7C8 LDR W9, [X10]
	0x0329B7CC ADD W9, W9, 0x7
	0x0329B7D0 ADD X8, X8, W9, 0x4, SXTW
	0x0329B7D4 ADD X0, X8, 0x138
	0x0329B7D8 LDP X8, X1, [X0]
	0x0329B7DC MOV X0, X21
	0x0329B7E0 BLR X8
	0x0329B7E4 STR X0, [X20 + 0x18]
	0x0329B7E8 LDR X8, [X21]
	0x0329B7EC LDR X1, [X22]
	0x0329B7F0 LDRH W9, [X8 + 0x12E]
	0x0329B7F4 CBZ X9, 0x329B818
	0x0329B7F8 LDR X10, [X8 + 0xB0]
	0x0329B7FC ADD X10, X10, 0x8
	0x0329B800 LDUR X11, [X10 - 0x8]
	0x0329B804 CMP X11, X1
	0x0329B808 B.EQ 0x329B828
	0x0329B80C SUBS X9, X9, 0x1
	0x0329B810 ADD X10, X10, 0x10
	0x0329B814 B.NE 0x329B800
	0x0329B818 MOVZ W2, 0x4
	0x0329B81C MOV X0, X21
	0x0329B820 BL 0x1C5C788
	0x0329B824 B 0x329B838
	0x0329B828 LDR W9, [X10]
	0x0329B82C ADD W9, W9, 0x4
	0x0329B830 ADD X8, X8, W9, 0x4, SXTW
	0x0329B834 ADD X0, X8, 0x138
	0x0329B838 LDP X8, X1, [X0]
	0x0329B83C MOV X0, X21
	0x0329B840 BLR X8
	0x0329B844 STR X0, [X20 + 0x10]
	0x0329B848 CBZ X19, 0x329B904
	0x0329B84C MOV X0, X19
	0x0329B850 BL 0x3295E34
	0x0329B854 MOV X21, X0
	0x0329B858 MOV X0, X19

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X19, 0x1142000
	010 Move X21, 0xE86000
	011 Move W8, [X19+1817]
	012 Move X21, [X21+2976]
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {38}
	018 Move X0, 0xE86000
	019 Move X0, [X0+2976]
	020 Call 0x1C17CF4
	021 Move X0, 0xE59000
	022 Move X0, [X0+2072]
	023 Call 0x1C17CF4
	024 Move X0, 0xE59000
	025 Move X0, [X0+3584]
	026 Call 0x1C17CF4
	027 Move X0, 0xE61000
	028 Move X0, [X0+3512]
	029 Call 0x1C17CF4
	030 Move X0, 0xE59000
	031 Move X0, [X0+3608]
	032 Call 0x1C17CF4
	033 Move X0, 0xE5B000
	034 Move X0, [X0+632]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X19+1817], W8
	038 Move X0, [X21]
	039 Call 0x1C17F10
	040 Move X1, X31
	041 Move X19, X0
	042 Call ArrayList..ctor, X0
	043 Move X8, [X20+32]
	044 Compare X8, 0
	045 JumpIfEqual {69}
	046 Move X24, 0xE59000
	047 Move X22, 0xE61000
	048 Move X23, 0xE59000
	049 Move X24, [X24+2072]
	050 Move X22, [X22+3512]
	051 Move X23, [X23+3584]
	052 Move X21, X31
	053 Move W9, [X8+24]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Compare X19, 0
	057 JumpIfEqual {69}
	058 Move X9, [X19]
	059 Add X8, X8, X21
	060 Move X1, [X8+32]
	061 Move X0, X19
	062 Move X8, [X9+776]
	063 Move X2, [X9+784]
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Move X8, [X20+32]
	066 Add X21, X21, 1
	067 Compare X8, 0
	068 JumpIfNotEqual {53}
	069 Call 0x1C17F20
	070 Move X21, [X20+16]
	071 Compare X21, 0
	072 JumpIfEqual {224}
	073 Move X8, [X21]
	074 Move X1, [X24]
	075 NotImplemented "Instruction LDRH not yet implemented."
	076 Compare X9, 0
	077 JumpIfEqual {84}
	078 Move X10, [X8+176]
	079 Add X10, X10, 8
	080 NotImplemented "Instruction LDUR not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Subtract X9, X9, 1
	083 Add X10, X10, 16
	084 Move W2, 2
	085 Move X0, X21
	086 Call 0x1C5D788
	087 Move W9, [X10]
	088 Add W9, W9, 2
	089 Add X8, X8, W9
	090 Add X0, X8, 312
	091 Move X8, [X0]
	092 Move X1, [X0+8]
	093 Move X0, X21
	094 NotImplemented "Instruction BLR not yet implemented."
	095 Compare X0, 0
	096 JumpIfEqual {69}
	097 Move X8, [X0]
	098 Move X1, [X22]
	099 Move X21, X0
	100 NotImplemented "Instruction LDRH not yet implemented."
	101 Compare X9, 0
	102 JumpIfEqual {109}
	103 Move X10, [X8+176]
	104 Add X10, X10, 8
	105 NotImplemented "Instruction LDUR not yet implemented."
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Subtract X9, X9, 1
	108 Add X10, X10, 16
	109 Move X0, X21
	110 Move W2, W31
	111 Call 0x1C5D788
	112 NotImplemented "Instruction LDRSW not yet implemented."
	113 Add X8, X8, X9
	114 Add X0, X8, 312
	115 Move X8, [X0]
	116 Move X1, [X0+8]
	117 Move X0, X21
	118 NotImplemented "Instruction BLR not yet implemented."
	119 Move X21, X0
	120 Compare X0, 0
	121 JumpIfEqual {238}
	122 Move X24, 0xE59000
	123 Move X25, 0xE5B000
	124 Move X24, [X24+3608]
	125 Move X25, [X25+632]
	126 Move X8, [X21]
	127 Move X1, [X24]
	128 NotImplemented "Instruction LDRH not yet implemented."
	129 Compare X9, 0
	130 JumpIfEqual {137}
	131 Move X10, [X8+176]
	132 Add X10, X10, 8
	133 NotImplemented "Instruction LDUR not yet implemented."
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Subtract X9, X9, 1
	136 Add X10, X10, 16
	137 Move X0, X21
	138 Move W2, W31
	139 Call 0x1C5D788
	140 NotImplemented "Instruction LDRSW not yet implemented."
	141 Add X8, X8, X9
	142 Add X0, X8, 312
	143 Move X8, [X0]
	144 Move X1, [X0+8]
	145 Move X0, X21
	146 NotImplemented "Instruction BLR not yet implemented."
	147 Move TEMP, X0
	148 And TEMP, TEMP, 1
	149 Compare TEMP, 1
	150 JumpIfNotEqual {194}
	151 Move X8, [X21]
	152 Move X1, [X24]
	153 NotImplemented "Instruction LDRH not yet implemented."
	154 Compare X9, 0
	155 JumpIfEqual {162}
	156 Move X10, [X8+176]
	157 Add X10, X10, 8
	158 NotImplemented "Instruction LDUR not yet implemented."
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Subtract X9, X9, 1
	161 Add X10, X10, 16
	162 Move W2, 1
	163 Move X0, X21
	164 Call 0x1C5D788
	165 Move W9, [X10]
	166 Add W9, W9, 1
	167 Add X8, X8, W9
	168 Add X0, X8, 312
	169 Move X8, [X0]
	170 Move X1, [X0+8]
	171 Move X0, X21
	172 NotImplemented "Instruction BLR not yet implemented."
	173 Move X22, X0
	174 Compare X0, 0
	175 JumpIfEqual {179}
	176 Move X1, [X25]
	177 Move X8, [X22]
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move X0, X20
	180 Move X1, X22
	181 Call MessageDictionary.IsOverridenKey, X0, X1
	182 Move TEMP, X0
	183 And TEMP, TEMP, 1
	184 Compare TEMP, 1
	185 JumpIfEqual {126}
	186 Compare X19, 0
	187 JumpIfEqual {237}
	188 Move X8, [X19]
	189 Move X9, [X8+776]
	190 Move X2, [X8+784]
	191 Move X0, X19
	192 Move X1, X22
	193 NotImplemented "Instruction BLR not yet implemented."
	194 Move X20, X31
	195 Move X1, [X23]
	196 Move X0, X21
	197 Call 0x1C17E00
	198 Compare X0, 0
	199 JumpIfEqual {222}
	200 Move X8, [X0]
	201 Move X1, [X23]
	202 Move X21, X0
	203 NotImplemented "Instruction LDRH not yet implemented."
	204 Compare X9, 0
	205 JumpIfEqual {212}
	206 Move X10, [X8+176]
	207 Add X10, X10, 8
	208 NotImplemented "Instruction LDUR not yet implemented."
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Subtract X9, X9, 1
	211 Add X10, X10, 16
	212 Move X0, X21
	213 Move W2, W31
	214 Call 0x1C5D788
	215 NotImplemented "Instruction LDRSW not yet implemented."
	216 Add X8, X8, X9
	217 Add X0, X8, 312
	218 Move X8, [X0]
	219 Move X1, [X0+8]
	220 Move X0, X21
	221 NotImplemented "Instruction BLR not yet implemented."
	222 Compare X20, 0
	223 JumpIfNotEqual {239}
	224 Move X0, X19
	225 Move X20, [X31+48]
	226 Move X19, [X31+56]
	227 Move X22, [X31+32]
	228 Move X21, [X31+40]
	229 Move X24, [X31+16]
	230 Move X23, [X31+24]
	231 Move X30, [X31+64]
	232 Move X25, [X31+72]
	233 Return X0
	234 Call 0x1C17F28
	235 Move X0, X22
	236 Call 0x1C181E0
	237 Call 0x1C17F20
	238 Call 0x1C17F20
	239 Move X0, X20
	240 Call 0x1C17F18
	241 Move X22, X0
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Move X0, X22
	244 Call 0x3EB2AD0
	245 Move X20, [X0]
	246 Call 0x3EB2AE0
	247 Move X20, X31
	248 Move X22, X0
	249 Move X1, [X23]
	250 Move X0, X21
	251 Call 0x1C17E00
	252 Move X19, X0
	253 Compare X0, 0
	254 JumpIfEqual {276}
	255 Move X8, [X19]
	256 Move X1, [X23]
	257 NotImplemented "Instruction LDRH not yet implemented."
	258 Compare X9, 0
	259 JumpIfEqual {266}
	260 Move X10, [X8+176]
	261 Add X10, X10, 8
	262 NotImplemented "Instruction LDUR not yet implemented."
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Subtract X9, X9, 1
	265 Add X10, X10, 16
	266 Move X0, X19
	267 Move W2, W31
	268 Call 0x1C5D788
	269 NotImplemented "Instruction LDRSW not yet implemented."
	270 Add X8, X8, X9
	271 Add X0, X8, 312
	272 Move X8, [X0]
	273 Move X1, [X0+8]
	274 Move X0, X19
	275 NotImplemented "Instruction BLR not yet implemented."
	276 Compare X20, 0
	277 JumpIfNotEqual {280}
	278 Move X0, X22
	279 Call 0x1D2D690
	280 Move X0, X20
	281 Call 0x1C17F18
	282 Call 0x1991590

Method: System.Collections.ICollection get_Values()

Disassembly:
	0x0329B85C MOV X1, X21
	0x0329B860 BL 0x3295F8C
	0x0329B864 STR X0, [X20 + 0x38]
	0x0329B868 LDR X1, [X19 + 0x38]
	0x0329B86C MOV X2, X21
	0x0329B870 BL 0x3294A10
	0x0329B874 STR X0, [X20 + 0x30]
	0x0329B878 LDR X1, [X19 + 0x10]
	0x0329B87C MOV X2, X21
	0x0329B880 BL 0x32952B8
	0x0329B884 STR X0, [X20 + 0x50]
	0x0329B888 MOV X0, X19
	0x0329B88C MOV X1, X21
	0x0329B890 BL 0x32955F0
	0x0329B894 STR X0, [X20 + 0x68]
	0x0329B898 CBNZ X0, 0x329B8BC
	0x0329B89C ADRP X8, 0xE89000
	0x0329B8A0 LDR X8, [X8 + 0x370]
	0x0329B8A4 LDR X0, [X8]
	0x0329B8A8 BL 0x1C16F10
	0x0329B8AC MOV X1, X31
	0x0329B8B0 MOV X22, X0
	0x0329B8B4 BL 0x33BDD8C
	0x0329B8B8 STR X22, [X20 + 0x68]
	0x0329B8BC LDR W8, [X19 + 0x20]
	0x0329B8C0 CMP W8, 0x1
	0x0329B8C4 B.LT 0x329B8F4
	0x0329B8C8 LDR X8, [X20]
	0x0329B8CC MOV X0, X20
	0x0329B8D0 LDR X9, [X8 + 0x298]
	0x0329B8D4 LDR X1, [X8 + 0x2A0]
	0x0329B8D8 BLR X9
	0x0329B8DC LDR W1, [X19 + 0x20]
	0x0329B8E0 MOV X2, X21
	0x0329B8E4 LDP X20, X19, [X31 + 0x20]
	0x0329B8E8 LDP X22, X21, [X31 + 0x10]
	0x0329B8EC LDR X30, [X31], #0x30
	0x0329B8F0 B 0x3294568
	0x0329B8F4 LDP X20, X19, [X31 + 0x20]
	0x0329B8F8 LDP X22, X21, [X31 + 0x10]
	0x0329B8FC LDR X30, [X31], #0x30
	0x0329B900 RET
	0x0329B904 BL 0x1C16F20
	0x0329B908 STR X30, [X31 - 0x30]!
	0x0329B90C STP X22, X21, [X31 + 0x10]
	0x0329B910 STP X20, X19, [X31 + 0x20]
	0x0329B914 ADRP X22, 0x1141000
	0x0329B918 LDRB W8, [X22 + 0x72A]
	0x0329B91C MOV X19, X2
	0x0329B920 MOV X21, X1
	0x0329B924 MOV X20, X0
	0x0329B928 TBNZ X8, 0x0, 0x329B9DC
	0x0329B92C ADRP X0, 0xE58000
	0x0329B930 LDR X0, [X0 + 0x7D0]
	0x0329B934 BL 0x1C16CF4
	0x0329B938 ADRP X0, 0xE58000
	0x0329B93C LDR X0, [X0 + 0x818]
	0x0329B940 BL 0x1C16CF4
	0x0329B944 ADRP X0, 0xE89000
	0x0329B948 LDR X0, [X0 + 0x370]
	0x0329B94C BL 0x1C16CF4
	0x0329B950 ADRP X0, 0xE58000
	0x0329B954 LDR X0, [X0 + 0x9D0]
	0x0329B958 BL 0x1C16CF4
	0x0329B95C ADRP X0, 0xE5A000
	0x0329B960 LDR X0, [X0 + 0x278]
	0x0329B964 BL 0x1C16CF4
	0x0329B968 ADRP X0, 0xE60000
	0x0329B96C LDR X0, [X0 + 0xC60]
	0x0329B970 BL 0x1C16CF4
	0x0329B974 ADRP X0, 0xE89000
	0x0329B978 LDR X0, [X0 + 0x990]
	0x0329B97C BL 0x1C16CF4
	0x0329B980 ADRP X0, 0xE89000
	0x0329B984 LDR X0, [X0 + 0x8C8]
	0x0329B988 BL 0x1C16CF4
	0x0329B98C ADRP X0, 0xE89000
	0x0329B990 LDR X0, [X0 + 0x8D0]
	0x0329B994 BL 0x1C16CF4
	0x0329B998 ADRP X0, 0xE7F000
	0x0329B99C LDR X0, [X0 + 0x2E0]
	0x0329B9A0 BL 0x1C16CF4
	0x0329B9A4 ADRP X0, 0xE89000
	0x0329B9A8 LDR X0, [X0 + 0x8D8]
	0x0329B9AC BL 0x1C16CF4
	0x0329B9B0 ADRP X0, 0xE89000
	0x0329B9B4 LDR X0, [X0 + 0x8E8]
	0x0329B9B8 BL 0x1C16CF4
	0x0329B9BC ADRP X0, 0xE89000
	0x0329B9C0 LDR X0, [X0 + 0x8F0]
	0x0329B9C4 BL 0x1C16CF4
	0x0329B9C8 ADRP X0, 0xE89000
	0x0329B9CC LDR X0, [X0 + 0x8E0]
	0x0329B9D0 BL 0x1C16CF4
	0x0329B9D4 MOVZ W8, 0x1
	0x0329B9D8 STRB W8, [X22 + 0x72A]
	0x0329B9DC MOV X0, X21
	0x0329B9E0 MOV X1, X31
	0x0329B9E4 BL 0x335C87C
	0x0329B9E8 MOVZ W8, 0xFD0C
	0x0329B9EC MOVK W8, 0x74E10000
	0x0329B9F0 CMP W0, W8
	0x0329B9F4 B.HI 0x329BA68
	0x0329B9F8 MOVZ W8, 0xB61A
	0x0329B9FC MOVK W8, 0x47A30000
	0x0329BA00 CMP W0, W8
	0x0329BA04 B.HI 0x329BACC
	0x0329BA08 MOVZ W8, 0xE67B
	0x0329BA0C MOVK W8, 0x3B0C0000
	0x0329BA10 CMP W0, W8
	0x0329BA14 B.EQ 0x329BBB0
	0x0329BA18 MOVZ W8, 0xB61A
	0x0329BA1C MOVK W8, 0x47A30000
	0x0329BA20 CMP W0, W8
	0x0329BA24 B.NE 0x329BCD4
	0x0329BA28 ADRP X8, 0xE89000
	0x0329BA2C LDR X8, [X8 + 0x8E0]
	0x0329BA30 MOV X0, X21
	0x0329BA34 MOV X2, X31
	0x0329BA38 LDR X1, [X8]
	0x0329BA3C BL 0x321BA08
	0x0329BA40 TBZ X0, 0x0, 0x329BCD4
	0x0329BA44 CBZ X19, 0x329BD68
	0x0329BA48 ADRP X8, 0xE89000
	0x0329BA4C LDR X8, [X8 + 0x370]
	0x0329BA50 LDR X1, [X8]
	0x0329BA54 LDR X8, [X19]
	0x0329BA58 CMP X8, X1
	0x0329BA5C B.NE 0x329BDB0
	0x0329BA60 STR X19, [X20 + 0x68]
	0x0329BA64 B 0x329BC2C
	0x0329BA68 MOVZ W8, 0x279
	0x0329BA6C MOVK W8, 0xBCB90000
	0x0329BA70 CMP W0, W8
	0x0329BA74 B.HI 0x329BB30
	0x0329BA78 B.EQ 0x329BBF0
	0x0329BA7C MOVZ W8, 0x5180
	0x0329BA80 MOVK W8, 0x77D00000
	0x0329BA84 CMP W0, W8
	0x0329BA88 B.NE 0x329BCD4
	0x0329BA8C ADRP X8, 0xE7F000
	0x0329BA90 LDR X8, [X8 + 0x2E0]
	0x0329BA94 MOV X0, X21
	0x0329BA98 MOV X2, X31
	0x0329BA9C LDR X1, [X8]
	0x0329BAA0 BL 0x321BA08
	0x0329BAA4 TBZ X0, 0x0, 0x329BCD4
	0x0329BAA8 CBZ X19, 0x329BD70
	0x0329BAAC ADRP X8, 0xE5A000
	0x0329BAB0 LDR X8, [X8 + 0x278]
	0x0329BAB4 LDR X1, [X8]
	0x0329BAB8 LDR X8, [X19]
	0x0329BABC CMP X8, X1
	0x0329BAC0 B.NE 0x329BDB0
	0x0329BAC4 STR X19, [X20 + 0x20]
	0x0329BAC8 B 0x329BC2C
	0x0329BACC MOVZ W8, 0x9961
	0x0329BAD0 MOVK W8, 0x619E0000
	0x0329BAD4 CMP W0, W8
	0x0329BAD8 B.EQ 0x329BC3C
	0x0329BADC MOVZ W8, 0xFD0C
	0x0329BAE0 MOVK W8, 0x74E10000
	0x0329BAE4 CMP W0, W8
	0x0329BAE8 B.NE 0x329BCD4
	0x0329BAEC ADRP X8, 0xE89000
	0x0329BAF0 LDR X8, [X8 + 0x8E8]
	0x0329BAF4 MOV X0, X21
	0x0329BAF8 MOV X2, X31
	0x0329BAFC LDR X1, [X8]
	0x0329BB00 BL 0x321BA08
	0x0329BB04 TBZ X0, 0x0, 0x329BCD4
	0x0329BB08 CBZ X19, 0x329BD78
	0x0329BB0C ADRP X22, 0xE58000
	0x0329BB10 LDR X22, [X22 + 0x9D0]
	0x0329BB14 MOV X0, X19
	0x0329BB18 LDR X21, [X22]
	0x0329BB1C MOV X1, X21
	0x0329BB20 BL 0x1C16E00
	0x0329BB24 CBZ X0, 0x329BDB8
	0x0329BB28 STR X0, [X20 + 0x50]
	0x0329BB2C B 0x329BB90
	0x0329BB30 MOVZ W8, 0xE215
	0x0329BB34 MOVK W8, 0xD82E0000
	0x0329BB38 CMP W0, W8
	0x0329BB3C B.EQ 0x329BC60
	0x0329BB40 MOVZ W8, 0xF38
	0x0329BB44 MOVK W8, 0xDB4B0000
	0x0329BB48 CMP W0, W8
	0x0329BB4C B.NE 0x329BCD4
	0x0329BB50 ADRP X8, 0xE89000
	0x0329BB54 LDR X8, [X8 + 0x8D0]
	0x0329BB58 MOV X0, X21
	0x0329BB5C MOV X2, X31
	0x0329BB60 LDR X1, [X8]
	0x0329BB64 BL 0x321BA08
	0x0329BB68 TBZ X0, 0x0, 0x329BCD4
	0x0329BB6C CBZ X19, 0x329BD80
	0x0329BB70 ADRP X22, 0xE60000
	0x0329BB74 LDR X22, [X22 + 0xC60]
	0x0329BB78 MOV X0, X19
	0x0329BB7C LDR X21, [X22]
	0x0329BB80 MOV X1, X21
	0x0329BB84 BL 0x1C16E00
	0x0329BB88 CBZ X0, 0x329BDB8
	0x0329BB8C STR X0, [X20 + 0x40]
	0x0329BB90 LDR X20, [X22]
	0x0329BB94 MOV X0, X19
	0x0329BB98 MOV X1, X20
	0x0329BB9C BL 0x1C16E00
	0x0329BBA0 CBNZ X0, 0x329BD9C
	0x0329BBA4 MOV X0, X19
	0x0329BBA8 MOV X1, X20
	0x0329BBAC BL 0x1C171E0
	0x0329BBB0 ADRP X8, 0xE89000
	0x0329BBB4 LDR X8, [X8 + 0x8C8]
	0x0329BBB8 MOV X0, X21
	0x0329BBBC MOV X2, X31
	0x0329BBC0 LDR X1, [X8]
	0x0329BBC4 BL 0x321BA08
	0x0329BBC8 TBZ X0, 0x0, 0x329BCD4
	0x0329BBCC CBZ X19, 0x329BD88
	0x0329BBD0 ADRP X8, 0xE5A000
	0x0329BBD4 LDR X8, [X8 + 0x278]
	0x0329BBD8 LDR X1, [X8]
	0x0329BBDC LDR X8, [X19]
	0x0329BBE0 CMP X8, X1
	0x0329BBE4 B.NE 0x329BDB0
	0x0329BBE8 STR X19, [X20 + 0x18]
	0x0329BBEC B 0x329BC2C
	0x0329BBF0 ADRP X8, 0xE89000
	0x0329BBF4 LDR X8, [X8 + 0x8D8]
	0x0329BBF8 MOV X0, X21
	0x0329BBFC MOV X2, X31
	0x0329BC00 LDR X1, [X8]
	0x0329BC04 BL 0x321BA08
	0x0329BC08 TBZ X0, 0x0, 0x329BCD4
	0x0329BC0C CBZ X19, 0x329BD90
	0x0329BC10 ADRP X8, 0xE5A000
	0x0329BC14 LDR X8, [X8 + 0x278]
	0x0329BC18 LDR X1, [X8]
	0x0329BC1C LDR X8, [X19]
	0x0329BC20 CMP X8, X1
	0x0329BC24 B.NE 0x329BDB0
	0x0329BC28 STR X19, [X20 + 0x10]
	0x0329BC2C LDR X8, [X19]
	0x0329BC30 CMP X8, X1
	0x0329BC34 B.EQ 0x329BD9C
	0x0329BC38 B 0x329BDB0
	0x0329BC3C ADRP X8, 0xE89000
	0x0329BC40 LDR X8, [X8 + 0x8F0]
	0x0329BC44 MOV X0, X21
	0x0329BC48 MOV X2, X31
	0x0329BC4C LDR X1, [X8]
	0x0329BC50 BL 0x321BA08
	0x0329BC54 TBZ X0, 0x0, 0x329BCD4
	0x0329BC58 STR X19, [X20 + 0x30]
	0x0329BC5C B 0x329BD9C
	0x0329BC60 ADRP X8, 0xE89000
	0x0329BC64 LDR X8, [X8 + 0x990]
	0x0329BC68 MOV X0, X21
	0x0329BC6C MOV X2, X31
	0x0329BC70 LDR X1, [X8]
	0x0329BC74 BL 0x321BA08
	0x0329BC78 TBZ X0, 0x0, 0x329BCD4
	0x0329BC7C CBZ X19, 0x329BD98
	0x0329BC80 ADRP X8, 0xE58000

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X19, 0x1142000
	011 Move X21, 0xE86000
	012 Move W8, [X19+1818]
	013 Move X21, [X21+2976]
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {39}
	019 Move X0, 0xE86000
	020 Move X0, [X0+2976]
	021 Call 0x1C17CF4
	022 Move X0, 0xE61000
	023 Move X0, [X0+3856]
	024 Call 0x1C17CF4
	025 Move X0, 0xE59000
	026 Move X0, [X0+2072]
	027 Call 0x1C17CF4
	028 Move X0, 0xE59000
	029 Move X0, [X0+3584]
	030 Call 0x1C17CF4
	031 Move X0, 0xE59000
	032 Move X0, [X0+3608]
	033 Call 0x1C17CF4
	034 Move X0, 0xE5B000
	035 Move X0, [X0+632]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X19+1818], W8
	039 Move X0, [X21]
	040 Call 0x1C17F10
	041 Move X1, X31
	042 Move X19, X0
	043 Call ArrayList..ctor, X0
	044 Move X8, [X20+32]
	045 Compare X8, 0
	046 JumpIfEqual {74}
	047 Move X22, 0xE59000
	048 Move X23, 0xE59000
	049 Move X22, [X22+2072]
	050 Move X23, [X23+3584]
	051 Move X21, X31
	052 Move W9, [X8+24]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X9, [X20]
	056 Add X8, X8, X21
	057 Move X1, [X8+32]
	058 Move X0, X20
	059 Move X8, [X9+600]
	060 Move X2, [X9+608]
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Compare X19, 0
	063 JumpIfEqual {74}
	064 Move X8, [X19]
	065 Move X1, X0
	066 Move X0, X19
	067 Move X9, [X8+776]
	068 Move X2, [X8+784]
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Move X8, [X20+32]
	071 Add X21, X21, 1
	072 Compare X8, 0
	073 JumpIfNotEqual {52}
	074 Call 0x1C17F20
	075 Move X21, [X20+16]
	076 Compare X21, 0
	077 JumpIfEqual {215}
	078 Move X8, [X21]
	079 Move X1, [X22]
	080 NotImplemented "Instruction LDRH not yet implemented."
	081 Compare X9, 0
	082 JumpIfEqual {89}
	083 Move X10, [X8+176]
	084 Add X10, X10, 8
	085 NotImplemented "Instruction LDUR not yet implemented."
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Subtract X9, X9, 1
	088 Add X10, X10, 16
	089 Move W2, 6
	090 Move X0, X21
	091 Call 0x1C5D788
	092 Move W9, [X10]
	093 Add W9, W9, 6
	094 Add X8, X8, W9
	095 Add X0, X8, 312
	096 Move X8, [X0]
	097 Move X1, [X0+8]
	098 Move X0, X21
	099 NotImplemented "Instruction BLR not yet implemented."
	100 Move X21, X0
	101 Compare X0, 0
	102 JumpIfEqual {233}
	103 Move X24, 0xE59000
	104 Move X25, 0xE61000
	105 Move X26, 0xE5B000
	106 Move X24, [X24+3608]
	107 Move X25, [X25+3856]
	108 Move X26, [X26+632]
	109 Move X8, [X21]
	110 Move X1, [X24]
	111 NotImplemented "Instruction LDRH not yet implemented."
	112 Compare X9, 0
	113 JumpIfEqual {120}
	114 Move X10, [X8+176]
	115 Add X10, X10, 8
	116 NotImplemented "Instruction LDUR not yet implemented."
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Subtract X9, X9, 1
	119 Add X10, X10, 16
	120 Move X0, X21
	121 Move W2, W31
	122 Call 0x1C5D788
	123 NotImplemented "Instruction LDRSW not yet implemented."
	124 Add X8, X8, X9
	125 Add X0, X8, 312
	126 Move X8, [X0]
	127 Move X1, [X0+8]
	128 Move X0, X21
	129 NotImplemented "Instruction BLR not yet implemented."
	130 Move TEMP, X0
	131 And TEMP, TEMP, 1
	132 Compare TEMP, 1
	133 JumpIfNotEqual {185}
	134 Move X8, [X21]
	135 Move X1, [X24]
	136 NotImplemented "Instruction LDRH not yet implemented."
	137 Compare X9, 0
	138 JumpIfEqual {145}
	139 Move X10, [X8+176]
	140 Add X10, X10, 8
	141 NotImplemented "Instruction LDUR not yet implemented."
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Subtract X9, X9, 1
	144 Add X10, X10, 16
	145 Move W2, 1
	146 Move X0, X21
	147 Call 0x1C5D788
	148 Move W9, [X10]
	149 Add W9, W9, 1
	150 Add X8, X8, W9
	151 Add X0, X8, 312
	152 Move X8, [X0]
	153 Move X1, [X0+8]
	154 Move X0, X21
	155 NotImplemented "Instruction BLR not yet implemented."
	156 Compare X0, 0
	157 JumpIfEqual {228}
	158 Move X8, [X0]
	159 Move X1, [X25]
	160 Move X8, [X8+64]
	161 Move X9, [X1+64]
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Call 0x1C17E08
	164 Move X1, [X0]
	165 Move X22, [X0+8]
	166 Compare X1, 0
	167 JumpIfEqual {171}
	168 Move X8, [X26]
	169 Move X9, [X1]
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Move X0, X20
	172 Call MessageDictionary.IsOverridenKey, X0, X1
	173 Move TEMP, X0
	174 And TEMP, TEMP, 1
	175 Compare TEMP, 1
	176 JumpIfEqual {109}
	177 Compare X19, 0
	178 JumpIfEqual {232}
	179 Move X8, [X19]
	180 Move X9, [X8+776]
	181 Move X2, [X8+784]
	182 Move X0, X19
	183 Move X1, X22
	184 NotImplemented "Instruction BLR not yet implemented."
	185 Move X20, X31
	186 Move X1, [X23]
	187 Move X0, X21
	188 Call 0x1C17E00
	189 Compare X0, 0
	190 JumpIfEqual {213}
	191 Move X8, [X0]
	192 Move X1, [X23]
	193 Move X21, X0
	194 NotImplemented "Instruction LDRH not yet implemented."
	195 Compare X9, 0
	196 JumpIfEqual {203}
	197 Move X10, [X8+176]
	198 Add X10, X10, 8
	199 NotImplemented "Instruction LDUR not yet implemented."
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Subtract X9, X9, 1
	202 Add X10, X10, 16
	203 Move X0, X21
	204 Move W2, W31
	205 Call 0x1C5D788
	206 NotImplemented "Instruction LDRSW not yet implemented."
	207 Add X8, X8, X9
	208 Add X0, X8, 312
	209 Move X8, [X0]
	210 Move X1, [X0+8]
	211 Move X0, X21
	212 NotImplemented "Instruction BLR not yet implemented."
	213 Compare X20, 0
	214 JumpIfNotEqual {234}
	215 Move X0, X19
	216 Move X20, [X31+64]
	217 Move X19, [X31+72]
	218 Move X22, [X31+48]
	219 Move X21, [X31+56]
	220 Move X24, [X31+32]
	221 Move X23, [X31+40]
	222 Move X26, [X31+16]
	223 Move X25, [X31+24]
	224 Move X30, [X31+80]
	225 Return X0
	226 Call 0x1C17F28
	227 Call 0x1C181E0
	228 Call 0x1C17F20
	229 Move X0, X1
	230 Move X1, X8
	231 Call 0x1C181E0
	232 Call 0x1C17F20
	233 Call 0x1C17F20
	234 Move X0, X20
	235 Call 0x1C17F18
	236 NotImplemented "Instruction CMP not yet implemented."
	237 Call 0x3EB2AD0
	238 Move X20, [X0]
	239 Call 0x3EB2AE0
	240 Move X19, X0
	241 Move X20, X31
	242 Move X19, X0
	243 Move X1, [X23]
	244 Move X0, X21
	245 Call 0x1C17E00
	246 Move X21, X0
	247 Compare X0, 0
	248 JumpIfEqual {270}
	249 Move X8, [X21]
	250 Move X1, [X23]
	251 NotImplemented "Instruction LDRH not yet implemented."
	252 Compare X9, 0
	253 JumpIfEqual {260}
	254 Move X10, [X8+176]
	255 Add X10, X10, 8
	256 NotImplemented "Instruction LDUR not yet implemented."
	257 NotImplemented "Instruction CMP not yet implemented."
	258 Subtract X9, X9, 1
	259 Add X10, X10, 16
	260 Move X0, X21
	261 Move W2, W31
	262 Call 0x1C5D788
	263 NotImplemented "Instruction LDRSW not yet implemented."
	264 Add X8, X8, X9
	265 Add X0, X8, 312
	266 Move X8, [X0]
	267 Move X1, [X0+8]
	268 Move X0, X21
	269 NotImplemented "Instruction BLR not yet implemented."
	270 Compare X20, 0
	271 JumpIfNotEqual {274}
	272 Move X0, X19
	273 Call 0x1D2D690
	274 Move X0, X20
	275 Call 0x1C17F18
	276 Call 0x1991590

Method: System.Void Add(System.Object key, System.Object value)

Disassembly:
	0x0329B2B4 ADD X1, X31, 0x0
	0x0329B2B8 MOV X0, X8
	0x0329B2BC BL 0x1C16E04
	0x0329B2C0 LDP X20, X19, [X31 + 0x20]
	0x0329B2C4 LDP X30, X21, [X31 + 0x10]
	0x0329B2C8 ADD X31, X31, 0x30
	0x0329B2CC RET
	0x0329B2D0 SUB X31, X31, 0x30
	0x0329B2D4 STR X30, [X31 + 0x10]
	0x0329B2D8 STP X20, X19, [X31 + 0x20]
	0x0329B2DC ADRP X20, 0x1141000
	0x0329B2E0 LDRB W8, [X20 + 0x726]
	0x0329B2E4 MOV X19, X0
	0x0329B2E8 TBNZ X8, 0x0, 0x329B300
	0x0329B2EC ADRP X0, 0xE85000
	0x0329B2F0 LDR X0, [X0 + 0xF80]
	0x0329B2F4 BL 0x1C16CF4
	0x0329B2F8 MOVZ W8, 0x1
	0x0329B2FC STRB W8, [X20 + 0x726]
	0x0329B300 LDR W8, [X19 + 0x20]
	0x0329B304 TBNZ X8, 0x1F, 0x329B360
	0x0329B308 LDR X0, [X19 + 0x10]
	0x0329B30C CBZ X0, 0x329B3E8
	0x0329B310 LDR X9, [X0 + 0x20]
	0x0329B314 CBZ X9, 0x329B3E8
	0x0329B318 LDR W10, [X9 + 0x18]
	0x0329B31C CMP W8, W10
	0x0329B320 B.CS 0x329B434
	0x0329B324 LDR X10, [X0]
	0x0329B328 ADD X8, X9, X8, 0x3, LSL
	0x0329B32C LDR X19, [X8 + 0x20]
	0x0329B330 LDR X8, [X10 + 0x258]
	0x0329B334 LDR X2, [X10 + 0x260]
	0x0329B338 MOV X1, X19
	0x0329B33C BLR X8
	0x0329B340 MOV X2, X0
	0x0329B344 ADD X0, X31, 0x0
	0x0329B348 MOV X1, X19
	0x0329B34C MOV X3, X31
	0x0329B350 STP X31, X31, [X31]
	0x0329B354 BL 0x335035C
	0x0329B358 LDP X0, X1, [X31]
	0x0329B35C B 0x329B3D8
	0x0329B360 ADDS W31, W8, 0x1
	0x0329B364 B.EQ 0x329B3EC
	0x0329B368 LDR X19, [X19 + 0x18]
	0x0329B36C CBZ X19, 0x329B3EC
	0x0329B370 ADRP X10, 0xE85000
	0x0329B374 LDR X8, [X19]
	0x0329B378 LDR X10, [X10 + 0xF80]
	0x0329B37C LDRH W9, [X8 + 0x12E]
	0x0329B380 LDR X1, [X10]
	0x0329B384 CBZ X9, 0x329B3A8
	0x0329B388 LDR X10, [X8 + 0xB0]
	0x0329B38C ADD X10, X10, 0x8
	0x0329B390 LDUR X11, [X10 - 0x8]
	0x0329B394 CMP X11, X1
	0x0329B398 B.EQ 0x329B3B8
	0x0329B39C SUBS X9, X9, 0x1
	0x0329B3A0 ADD X10, X10, 0x10
	0x0329B3A4 B.NE 0x329B390
	0x0329B3A8 MOVZ W2, 0x2
	0x0329B3AC MOV X0, X19
	0x0329B3B0 BL 0x1C5C788
	0x0329B3B4 B 0x329B3C8
	0x0329B3B8 LDR W9, [X10]
	0x0329B3BC ADD W9, W9, 0x2
	0x0329B3C0 ADD X8, X8, W9, 0x4, SXTW
	0x0329B3C4 ADD X0, X8, 0x138
	0x0329B3C8 LDP X8, X1, [X0]
	0x0329B3CC MOV X0, X19
	0x0329B3D0 BLR X8
	0x0329B3D4 STP X0, X1, [X31]
	0x0329B3D8 LDP X20, X19, [X31 + 0x20]
	0x0329B3DC LDR X30, [X31 + 0x10]
	0x0329B3E0 ADD X31, X31, 0x30
	0x0329B3E4 RET
	0x0329B3E8 BL 0x1C16F20
	0x0329B3EC ADRP X0, 0xE58000
	0x0329B3F0 LDR X0, [X0 + 0x5B0]
	0x0329B3F4 BL 0x1C16D08
	0x0329B3F8 BL 0x1C16F10
	0x0329B3FC MOV X19, X0
	0x0329B400 ADRP X0, 0xE89000
	0x0329B404 LDR X0, [X0 + 0x980]
	0x0329B408 BL 0x1C16D08
	0x0329B40C MOV X1, X0
	0x0329B410 MOV X0, X19
	0x0329B414 MOV X2, X31
	0x0329B418 BL 0x337DF1C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1142000
	008 Move W8, [X22+1819]
	009 Move X20, X2
	010 Move X19, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xE59000
	017 Move X0, [X0+2072]
	018 Call 0x1C17CF4
	019 Move X0, 0xE5B000
	020 Move X0, [X0+632]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1819], W8
	024 Compare X19, 0
	025 JumpIfEqual {31}
	026 Move X8, 0xE5B000
	027 Move X8, [X8+632]
	028 Move X1, [X8]
	029 Move X8, [X19]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X8, [X21+32]
	032 Compare X8, 0
	033 JumpIfEqual {53}
	034 Move X23, 0xE59000
	035 Move X23, [X23+2072]
	036 Move X22, X31
	037 Move W9, [X8+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Add X8, X8, X22
	041 Move X0, [X8+32]
	042 Move X1, X19
	043 Move X2, X31
	044 Call String.op_Equality, X0, X1
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {80}
	049 Move X8, [X21+32]
	050 Add X22, X22, 1
	051 Compare X8, 0
	052 JumpIfNotEqual {37}
	053 Call 0x1C17F20
	054 Move X22, [X21+16]
	055 Compare X22, 0
	056 JumpIfNotEqual {66}
	057 Move X8, [X21]
	058 Move X0, X21
	059 Move X9, [X8+584]
	060 Move X1, [X8+592]
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Move X22, X0
	063 Move [X21+16], X0
	064 Compare X0, 0
	065 JumpIfEqual {53}
	066 Move X8, [X22]
	067 Move X1, [X23]
	068 NotImplemented "Instruction LDRH not yet implemented."
	069 Compare X9, 0
	070 JumpIfEqual {77}
	071 Move X10, [X8+176]
	072 Add X10, X10, 8
	073 NotImplemented "Instruction LDUR not yet implemented."
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Subtract X9, X9, 1
	076 Add X10, X10, 16
	077 Move W2, 1
	078 Move X0, X22
	079 Call 0x1C5D788
	080 Move X8, [X21]
	081 Move X0, X21
	082 Move X4, [X8+616]
	083 Move X3, [X8+624]
	084 Move W9, [X10]
	085 Add W9, W9, 1
	086 Add X8, X8, W9
	087 Add X0, X8, 312
	088 Move X4, [X0]
	089 Move X3, [X0+8]
	090 Move X0, X22
	091 Move X1, X19
	092 Move X2, X20
	093 Move X20, [X31+32]
	094 Move X19, [X31+40]
	095 Move X22, [X31+16]
	096 Move X21, [X31+24]
	097 Move X30, [X31+48]
	098 Move X23, [X31+56]
	099 CallNoReturn X4
	100 Call 0x1C17F28
	101 Move X0, X19
	102 Call 0x1C181E0

Method: System.Boolean Contains(System.Object key)

Disassembly:
	0x0329BC84 LDR X8, [X8 + 0x7D0]
	0x0329BC88 LDR X9, [X19]
	0x0329BC8C LDR X1, [X8]
	0x0329BC90 LDRB W10, [X9 + 0x130]
	0x0329BC94 LDRB W8, [X1 + 0x130]
	0x0329BC98 CMP W10, W8
	0x0329BC9C B.CC 0x329BDB0
	0x0329BCA0 LDR X10, [X9 + 0xC8]
	0x0329BCA4 SUB X9, X8, 0x1
	0x0329BCA8 LDR X10, [X10, X9, LSL #3]
	0x0329BCAC CMP X10, X1
	0x0329BCB0 B.NE 0x329BDB0
	0x0329BCB4 STR X19, [X20 + 0x38]
	0x0329BCB8 LDR X10, [X19]
	0x0329BCBC LDRB W11, [X10 + 0x130]
	0x0329BCC0 CMP W11, W8
	0x0329BCC4 B.CC 0x329BDB0
	0x0329BCC8 LDR X8, [X10 + 0xC8]
	0x0329BCCC LDR X8, [X8, X9, LSL #3]
	0x0329BCD0 B 0x329BC30
	0x0329BCD4 LDR X8, [X20]
	0x0329BCD8 MOV X0, X20
	0x0329BCDC LDR X9, [X8 + 0x298]
	0x0329BCE0 LDR X1, [X8 + 0x2A0]
	0x0329BCE4 BLR X9
	0x0329BCE8 CBZ X0, 0x329BDAC
	0x0329BCEC ADRP X10, 0xE58000
	0x0329BCF0 LDR X8, [X0]
	0x0329BCF4 LDR X10, [X10 + 0x818]
	0x0329BCF8 MOV X20, X0
	0x0329BCFC LDRH W9, [X8 + 0x12E]
	0x0329BD00 LDR X1, [X10]
	0x0329BD04 CBZ X9, 0x329BD28
	0x0329BD08 LDR X10, [X8 + 0xB0]
	0x0329BD0C ADD X10, X10, 0x8
	0x0329BD10 LDUR X11, [X10 - 0x8]
	0x0329BD14 CMP X11, X1
	0x0329BD18 B.EQ 0x329BD38
	0x0329BD1C SUBS X9, X9, 0x1
	0x0329BD20 ADD X10, X10, 0x10
	0x0329BD24 B.NE 0x329BD10
	0x0329BD28 MOVZ W2, 0x1
	0x0329BD2C MOV X0, X20
	0x0329BD30 BL 0x1C5C788
	0x0329BD34 B 0x329BD48
	0x0329BD38 LDR W9, [X10]
	0x0329BD3C ADD W9, W9, 0x1
	0x0329BD40 ADD X8, X8, W9, 0x4, SXTW
	0x0329BD44 ADD X0, X8, 0x138
	0x0329BD48 LDP X4, X3, [X0]
	0x0329BD4C MOV X0, X20
	0x0329BD50 MOV X1, X21
	0x0329BD54 MOV X2, X19
	0x0329BD58 LDP X20, X19, [X31 + 0x20]
	0x0329BD5C LDP X22, X21, [X31 + 0x10]
	0x0329BD60 LDR X30, [X31], #0x30
	0x0329BD64 BR X4
	0x0329BD68 STR X31, [X20 + 0x68]
	0x0329BD6C B 0x329BD9C
	0x0329BD70 STR X31, [X20 + 0x20]
	0x0329BD74 B 0x329BD9C
	0x0329BD78 STR X31, [X20 + 0x50]
	0x0329BD7C B 0x329BD9C
	0x0329BD80 STR X31, [X20 + 0x40]
	0x0329BD84 B 0x329BD9C
	0x0329BD88 STR X31, [X20 + 0x18]
	0x0329BD8C B 0x329BD9C
	0x0329BD90 STR X31, [X20 + 0x10]
	0x0329BD94 B 0x329BD9C
	0x0329BD98 STR X31, [X20 + 0x38]
	0x0329BD9C LDP X20, X19, [X31 + 0x20]
	0x0329BDA0 LDP X22, X21, [X31 + 0x10]
	0x0329BDA4 LDR X30, [X31], #0x30
	0x0329BDA8 RET
	0x0329BDAC BL 0x1C16F20
	0x0329BDB0 MOV X0, X19
	0x0329BDB4 BL 0x1C171E0
	0x0329BDB8 MOV X0, X19
	0x0329BDBC MOV X1, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1142000
	006 Move W8, [X21+1820]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xE59000
	014 Move X0, [X0+2072]
	015 Call 0x1C17CF4
	016 Move X0, 0xE5B000
	017 Move X0, [X0+632]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1820], W8
	021 Compare X19, 0
	022 JumpIfEqual {28}
	023 Move X8, 0xE5B000
	024 Move X8, [X8+632]
	025 Move X1, [X8]
	026 Move X8, [X19]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X8, [X20+32]
	029 Compare X8, 0
	030 JumpIfEqual {48}
	031 Move X21, X31
	032 Move W9, [X8+24]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Add X8, X8, X21
	036 Move X0, [X8+32]
	037 Move X1, X19
	038 Move X2, X31
	039 Call String.op_Equality, X0, X1
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {68}
	044 Move X8, [X20+32]
	045 Add X21, X21, 1
	046 Compare X8, 0
	047 JumpIfNotEqual {32}
	048 Call 0x1C17F20
	049 Move X20, [X20+16]
	050 Compare X20, 0
	051 JumpIfEqual {69}
	052 Move X10, 0xE59000
	053 Move X8, [X20]
	054 Move X10, [X10+2072]
	055 NotImplemented "Instruction LDRH not yet implemented."
	056 Move X1, [X10]
	057 Compare X9, 0
	058 JumpIfEqual {65}
	059 Move X10, [X8+176]
	060 Add X10, X10, 8
	061 NotImplemented "Instruction LDUR not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Subtract X9, X9, 1
	064 Add X10, X10, 16
	065 Move W2, 4
	066 Move X0, X20
	067 Call 0x1C5D788
	068 Move W0, 1
	069 Move W0, W31
	070 Move X20, [X31+16]
	071 Move X19, [X31+24]
	072 Move X30, [X31+32]
	073 Move X21, [X31+40]
	074 Return X0
	075 Move W9, [X10]
	076 Add W9, W9, 4
	077 Add X8, X8, W9
	078 Add X0, X8, 312
	079 Move X3, [X0]
	080 Move X2, [X0+8]
	081 Move X0, X20
	082 Move X1, X19
	083 Move X20, [X31+16]
	084 Move X19, [X31+24]
	085 Move X30, [X31+32]
	086 Move X21, [X31+40]
	087 CallNoReturn X3
	088 Call 0x1C17F28
	089 Move X0, X19
	090 Call 0x1C181E0

Method: System.Void Remove(System.Object key)

Disassembly:
	0x0329BDC0 BL 0x1C171E0
	0x0329BDC4 LDR X8, [X0 + 0x50]
	0x0329BDC8 CBZ X8, 0x329BDD4
	0x0329BDCC LDR W0, [X8 + 0x18]
	0x0329BDD0 RET
	0x0329BDD4 MOV W0, W31
	0x0329BDD8 RET
	0x0329BDDC LDR X0, [X0 + 0x50]
	0x0329BDE0 RET
	0x0329BDE4 LDR X0, [X0 + 0x38]
	0x0329BDE8 RET
	0x0329BDEC STR X30, [X31 - 0x20]!
	0x0329BDF0 STP X20, X19, [X31 + 0x10]
	0x0329BDF4 ADRP X20, 0x1141000
	0x0329BDF8 LDRB W8, [X20 + 0x72B]
	0x0329BDFC MOV X19, X0
	0x0329BE00 TBNZ X8, 0x0, 0x329BE18
	0x0329BE04 ADRP X0, 0xE89000
	0x0329BE08 LDR X0, [X0 + 0x370]
	0x0329BE0C BL 0x1C16CF4
	0x0329BE10 MOVZ W8, 0x1
	0x0329BE14 STRB W8, [X20 + 0x72B]
	0x0329BE18 LDR X20, [X19 + 0x68]
	0x0329BE1C CBNZ X20, 0x329BE40
	0x0329BE20 ADRP X8, 0xE89000
	0x0329BE24 LDR X8, [X8 + 0x370]
	0x0329BE28 LDR X0, [X8]
	0x0329BE2C BL 0x1C16F10
	0x0329BE30 MOV X1, X31
	0x0329BE34 MOV X20, X0
	0x0329BE38 BL 0x33BDD8C
	0x0329BE3C STR X20, [X19 + 0x68]
	0x0329BE40 MOV X0, X20
	0x0329BE44 LDP X20, X19, [X31 + 0x10]
	0x0329BE48 LDR X30, [X31], #0x20
	0x0329BE4C RET
	0x0329BE50 STR X30, [X31 - 0x20]!
	0x0329BE54 STP X20, X19, [X31 + 0x10]
	0x0329BE58 ADRP X20, 0x1141000
	0x0329BE5C LDRB W8, [X20 + 0x72C]
	0x0329BE60 MOV X19, X0
	0x0329BE64 TBNZ X8, 0x0, 0x329BE88
	0x0329BE68 ADRP X0, 0xE89000
	0x0329BE6C LDR X0, [X0 + 0x270]
	0x0329BE70 BL 0x1C16CF4
	0x0329BE74 ADRP X0, 0xE88000
	0x0329BE78 LDR X0, [X0 + 0xE68]
	0x0329BE7C BL 0x1C16CF4
	0x0329BE80 MOVZ W8, 0x1
	0x0329BE84 STRB W8, [X20 + 0x72C]
	0x0329BE88 LDR X1, [X19 + 0x28]
	0x0329BE8C MOV X0, X31
	0x0329BE90 MOV X2, X31
	0x0329BE94 BL 0x32CE12C
	0x0329BE98 TBZ X0, 0x0, 0x329BF4C
	0x0329BE9C LDR X20, [X19 + 0x60]
	0x0329BEA0 CBZ X20, 0x329BEEC
	0x0329BEA4 ADRP X10, 0xE89000
	0x0329BEA8 LDR X8, [X20]
	0x0329BEAC LDR X10, [X10 + 0x270]
	0x0329BEB0 LDRH W9, [X8 + 0x12E]
	0x0329BEB4 LDR X1, [X10]
	0x0329BEB8 CBZ X9, 0x329BEDC
	0x0329BEBC LDR X10, [X8 + 0xB0]
	0x0329BEC0 ADD X10, X10, 0x8
	0x0329BEC4 LDUR X11, [X10 - 0x8]
	0x0329BEC8 CMP X11, X1
	0x0329BECC B.EQ 0x329BF2C
	0x0329BED0 SUBS X9, X9, 0x1
	0x0329BED4 ADD X10, X10, 0x10
	0x0329BED8 B.NE 0x329BEC4
	0x0329BEDC MOVZ W2, 0x3
	0x0329BEE0 MOV X0, X20
	0x0329BEE4 BL 0x1C5C788
	0x0329BEE8 B 0x329BF3C
	0x0329BEEC MOV X0, X19
	0x0329BEF0 BL 0x329BF5C
	0x0329BEF4 CBZ X0, 0x329BF4C
	0x0329BEF8 MOV X0, X19
	0x0329BEFC BL 0x329C014
	0x0329BF00 CBZ X0, 0x329BF4C
	0x0329BF04 ADRP X8, 0xE88000
	0x0329BF08 LDR X8, [X8 + 0xE68]
	0x0329BF0C LDR X0, [X8]
	0x0329BF10 LDR W8, [X0 + 0xE0]
	0x0329BF14 CBNZ W8, 0x329BF1C
	0x0329BF18 BL 0x1C16DFC
	0x0329BF1C MOV X0, X19
	0x0329BF20 MOV X1, X31
	0x0329BF24 BL 0x327FE80
	0x0329BF28 B 0x329BF48
	0x0329BF2C LDR W9, [X10]
	0x0329BF30 ADD W9, W9, 0x3
	0x0329BF34 ADD X8, X8, W9, 0x4, SXTW
	0x0329BF38 ADD X0, X8, 0x138
	0x0329BF3C LDP X8, X1, [X0]
	0x0329BF40 MOV X0, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1142000
	007 Move W8, [X21+1821]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xE59000
	015 Move X0, [X0+2072]
	016 Call 0x1C17CF4
	017 Move X0, 0xE5B000
	018 Move X0, [X0+632]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1821], W8
	022 Compare X19, 0
	023 JumpIfEqual {29}
	024 Move X8, 0xE5B000
	025 Move X8, [X8+632]
	026 Move X1, [X8]
	027 Move X8, [X19]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X8, [X20+32]
	030 Compare X8, 0
	031 JumpIfEqual {51}
	032 Move X21, 0xE59000
	033 Move X21, [X21+2072]
	034 Move X22, X31
	035 Move W9, [X8+24]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Add X8, X8, X22
	039 Move X0, [X8+32]
	040 Move X1, X19
	041 Move X2, X31
	042 Call String.op_Equality, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {90}
	047 Move X8, [X20+32]
	048 Add X22, X22, 1
	049 Compare X8, 0
	050 JumpIfNotEqual {35}
	051 Call 0x1C17F20
	052 Move X20, [X20+16]
	053 Compare X20, 0
	054 JumpIfEqual {69}
	055 Move X8, [X20]
	056 Move X1, [X21]
	057 NotImplemented "Instruction LDRH not yet implemented."
	058 Compare X9, 0
	059 JumpIfEqual {66}
	060 Move X10, [X8+176]
	061 Add X10, X10, 8
	062 NotImplemented "Instruction LDUR not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Subtract X9, X9, 1
	065 Add X10, X10, 16
	066 Move W2, 7
	067 Move X0, X20
	068 Call 0x1C5D788
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move X22, [X31+16]
	072 Move X21, [X31+24]
	073 Move X30, [X31+48]
	074 Return 
	075 Move W9, [X10]
	076 Add W9, W9, 7
	077 Add X8, X8, W9
	078 Add X0, X8, 312
	079 Move X3, [X0]
	080 Move X2, [X0+8]
	081 Move X0, X20
	082 Move X1, X19
	083 Move X20, [X31+32]
	084 Move X19, [X31+40]
	085 Move X22, [X31+16]
	086 Move X21, [X31+24]
	087 Move X30, [X31+48]
	088 CallNoReturn X3
	089 Call 0x1C17F28
	090 Move X0, 0xE61000
	091 Move X0, [X0+1400]
	092 Call 0x1C17D08
	093 Call 0x1C17F10
	094 Move X19, X0
	095 Move X0, 0xE8A000
	096 Move X0, [X0+2296]
	097 Call 0x1C17D08
	098 Move X1, X0
	099 Move X0, X19
	100 Move X2, X31
	101 Call ArgumentException..ctor, X0, X1
	102 Move X0, 0xE8A000
	103 Move X0, [X0+2416]
	104 Call 0x1C17D08
	105 Move X1, X0
	106 Move X0, X19
	107 Call 0x1C17DEC
	108 Move X0, X19
	109 Call 0x1C181E0

Method: System.Int32 get_Count()

Disassembly:
	0x0329BF44 BLR X8
	0x0329BF48 STR X0, [X19 + 0x28]
	0x0329BF4C LDR X0, [X19 + 0x28]
	0x0329BF50 LDP X20, X19, [X31 + 0x10]
	0x0329BF54 LDR X30, [X31], #0x20
	0x0329BF58 RET
	0x0329BF5C STR X30, [X31 - 0x20]!
	0x0329BF60 STP X20, X19, [X31 + 0x10]
	0x0329BF64 ADRP X20, 0x1141000
	0x0329BF68 LDRB W8, [X20 + 0x72D]
	0x0329BF6C MOV X19, X0
	0x0329BF70 TBNZ X8, 0x0, 0x329BF88
	0x0329BF74 ADRP X0, 0xE89000
	0x0329BF78 LDR X0, [X0 + 0x270]
	0x0329BF7C BL 0x1C16CF4
	0x0329BF80 MOVZ W8, 0x1
	0x0329BF84 STRB W8, [X20 + 0x72D]
	0x0329BF88 LDR X0, [X19 + 0x10]
	0x0329BF8C CBNZ X0, 0x329C008
	0x0329BF90 LDR X20, [X19 + 0x60]
	0x0329BF94 CBZ X20, 0x329BFE0
	0x0329BF98 ADRP X10, 0xE89000
	0x0329BF9C LDR X8, [X20]
	0x0329BFA0 LDR X10, [X10 + 0x270]
	0x0329BFA4 LDRH W9, [X8 + 0x12E]
	0x0329BFA8 LDR X1, [X10]
	0x0329BFAC CBZ X9, 0x329BFD0
	0x0329BFB0 LDR X10, [X8 + 0xB0]
	0x0329BFB4 ADD X10, X10, 0x8
	0x0329BFB8 LDUR X11, [X10 - 0x8]
	0x0329BFBC CMP X11, X1
	0x0329BFC0 B.EQ 0x329BFE8
	0x0329BFC4 SUBS X9, X9, 0x1
	0x0329BFC8 ADD X10, X10, 0x10
	0x0329BFCC B.NE 0x329BFB8
	0x0329BFD0 MOVZ W2, 0x4
	0x0329BFD4 MOV X0, X20
	0x0329BFD8 BL 0x1C5C788
	0x0329BFDC B 0x329BFF8
	0x0329BFE0 MOV X0, X31
	0x0329BFE4 B 0x329C008
	0x0329BFE8 LDR W9, [X10]
	0x0329BFEC ADD W9, W9, 0x4
	0x0329BFF0 ADD X8, X8, W9, 0x4, SXTW
	0x0329BFF4 ADD X0, X8, 0x138
	0x0329BFF8 LDP X8, X1, [X0]
	0x0329BFFC MOV X0, X20
	0x0329C000 BLR X8
	0x0329C004 STR X0, [X19 + 0x10]
	0x0329C008 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1142000
	005 Move W8, [X20+1822]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE60000
	012 Move X0, [X0+752]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1822], W8
	016 Move X20, [X19+16]
	017 Compare X20, 0
	018 JumpIfEqual {35}
	019 Move X10, 0xE60000
	020 Move X8, [X20]
	021 Move X10, [X10+752]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Move X1, [X10]
	024 Compare X9, 0
	025 JumpIfEqual {32}
	026 Move X10, [X8+176]
	027 Add X10, X10, 8
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Subtract X9, X9, 1
	031 Add X10, X10, 16
	032 Move W2, 1
	033 Move X0, X20
	034 Call 0x1C5D788
	035 Move X8, [X19+32]
	036 Compare X8, 0
	037 JumpIfEqual {56}
	038 Move W0, [X8+24]
	039 Move W9, [X10]
	040 Add W9, W9, 1
	041 Add X8, X8, W9
	042 Add X0, X8, 312
	043 Move X8, [X0]
	044 Move X1, [X0+8]
	045 Move X0, X20
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Move X8, [X19+32]
	048 Compare X8, 0
	049 JumpIfEqual {56}
	050 Move W8, [X8+24]
	051 Add W0, W0, W8
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X30, [X31+32]
	055 Return X0
	056 Call 0x1C17F20

Method: System.Boolean get_IsSynchronized()

Disassembly:
	0x0329C00C LDR X30, [X31], #0x20
	0x0329C010 RET

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Object get_SyncRoot()

Disassembly:
	0x0329C014 STR X30, [X31 - 0x20]!

ISIL:
	001 Return X0

Method: System.Void CopyTo(System.Array array, System.Int32 index)

Disassembly:
	0x0329C018 STP X20, X19, [X31 + 0x10]
	0x0329C01C ADRP X20, 0x1140000
	0x0329C020 LDRB W8, [X20 + 0x731]
	0x0329C024 MOV X19, X0
	0x0329C028 TBNZ X8, 0x0, 0x329C040
	0x0329C02C ADRP X0, 0xE88000
	0x0329C030 LDR X0, [X0 + 0x270]
	0x0329C034 BL 0x1C16CF4
	0x0329C038 MOVZ W8, 0x1
	0x0329C03C STRB W8, [X20 + 0x731]
	0x0329C040 LDR X0, [X19 + 0x20]
	0x0329C044 CBNZ X0, 0x329C0C0
	0x0329C048 LDR X20, [X19 + 0x60]
	0x0329C04C CBZ X20, 0x329C098
	0x0329C050 ADRP X10, 0xE88000
	0x0329C054 LDR X8, [X20]
	0x0329C058 LDR X10, [X10 + 0x270]
	0x0329C05C LDRH W9, [X8 + 0x12E]
	0x0329C060 LDR X1, [X10]
	0x0329C064 CBZ X9, 0x329C088
	0x0329C068 LDR X10, [X8 + 0xB0]
	0x0329C06C ADD X10, X10, 0x8
	0x0329C070 LDUR X11, [X10 - 0x8]
	0x0329C074 CMP X11, X1
	0x0329C078 B.EQ 0x329C0A0
	0x0329C07C SUBS X9, X9, 0x1
	0x0329C080 ADD X10, X10, 0x10
	0x0329C084 B.NE 0x329C070
	0x0329C088 MOVZ W2, 0x6
	0x0329C08C MOV X0, X20
	0x0329C090 BL 0x1C5C788
	0x0329C094 B 0x329C0B0
	0x0329C098 MOV X0, X31
	0x0329C09C B 0x329C0C0
	0x0329C0A0 LDR W9, [X10]
	0x0329C0A4 ADD W9, W9, 0x6
	0x0329C0A8 ADD X8, X8, W9, 0x4, SXTW
	0x0329C0AC ADD X0, X8, 0x138
	0x0329C0B0 LDP X8, X1, [X0]
	0x0329C0B4 MOV X0, X20
	0x0329C0B8 BLR X8
	0x0329C0BC STR X0, [X19 + 0x20]
	0x0329C0C0 LDP X20, X19, [X31 + 0x10]
	0x0329C0C4 LDR X30, [X31], #0x20
	0x0329C0C8 RET
	0x0329C0CC STR X30, [X31 - 0x30]!
	0x0329C0D0 STP X22, X21, [X31 + 0x10]
	0x0329C0D4 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1141000
	007 Move W8, [X22+1823]
	008 Move W19, W2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xE5F000
	016 Move X0, [X0+752]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1823], W8
	020 Move X0, X21
	021 Call MessageDictionary.get_Values, X0
	022 Compare X0, 0
	023 JumpIfEqual {55}
	024 Move X10, 0xE5F000
	025 Move X8, [X0]
	026 Move X10, [X10+752]
	027 Move X21, X0
	028 NotImplemented "Instruction LDRH not yet implemented."
	029 Move X1, [X10]
	030 Compare X9, 0
	031 JumpIfEqual {38}
	032 Move X10, [X8+176]
	033 Add X10, X10, 8
	034 NotImplemented "Instruction LDUR not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Subtract X9, X9, 1
	037 Add X10, X10, 16
	038 Move X0, X21
	039 Move W2, W31
	040 Call 0x1C5D788
	041 NotImplemented "Instruction LDRSW not yet implemented."
	042 Add X8, X8, X9
	043 Add X0, X8, 312
	044 Move X4, [X0]
	045 Move X3, [X0+8]
	046 Move X0, X21
	047 Move X1, X20
	048 Move W2, W19
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X30, [X31+48]
	054 CallNoReturn X4
	055 Call 0x1C17F20

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x0329C0D8 ADRP X20, 0x1140000
	0x0329C0DC LDRB W8, [X20 + 0x72E]
	0x0329C0E0 MOV X19, X0
	0x0329C0E4 TBNZ X8, 0x0, 0x329C108
	0x0329C0E8 ADRP X0, 0xE88000
	0x0329C0EC LDR X0, [X0 + 0x270]
	0x0329C0F0 BL 0x1C16CF4
	0x0329C0F4 ADRP X0, 0xE5F000
	0x0329C0F8 LDR X0, [X0 + 0xC60]
	0x0329C0FC BL 0x1C16CF4
	0x0329C100 MOVZ W8, 0x1
	0x0329C104 STRB W8, [X20 + 0x72E]
	0x0329C108 LDR X0, [X19 + 0x40]
	0x0329C10C CBZ X0, 0x329C120
	0x0329C110 LDP X20, X19, [X31 + 0x20]
	0x0329C114 LDP X22, X21, [X31 + 0x10]
	0x0329C118 LDR X30, [X31], #0x30
	0x0329C11C RET
	0x0329C120 LDR X20, [X19 + 0x60]
	0x0329C124 CBZ X20, 0x329C110
	0x0329C128 ADRP X10, 0xE88000
	0x0329C12C LDR X8, [X20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1141000
	006 Move X21, 0xE89000
	007 Move W8, [X20+1824]
	008 Move X21, [X21+2424]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE89000
	015 Move X0, [X0+2424]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1824], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X19
	022 Move X20, X0
	023 Call DictionaryEnumerator..ctor, X0, X1
	024 Move X0, X20
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return X0

Method: System.Collections.IDictionaryEnumerator GetEnumerator()

Disassembly:
	0x0329C214 LDR X8, [X19 + 0x50]
	0x0329C218 CBZ X8, 0x329C270
	0x0329C21C LDR X20, [X19 + 0x48]
	0x0329C220 CBNZ X20, 0x329C25C
	0x0329C224 MOV X0, X19
	0x0329C228 BL 0x329BE50
	0x0329C22C ADRP X8, 0xE88000
	0x0329C230 LDR X8, [X8 + 0x998]
	0x0329C234 MOV X21, X0
	0x0329C238 LDR X8, [X8]
	0x0329C23C MOV X0, X8
	0x0329C240 BL 0x1C16F10
	0x0329C244 MOVZ W2, 0x1
	0x0329C248 MOV X1, X21
	0x0329C24C MOV X20, X0
	0x0329C250 BL 0x32929E8
	0x0329C254 STR X20, [X19 + 0x48]
	0x0329C258 CBZ X20, 0x329C280
	0x0329C25C LDR X1, [X19 + 0x50]
	0x0329C260 MOV X0, X20
	0x0329C264 BL 0x3292B9C
	0x0329C268 STR X0, [X19 + 0x58]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1141000
	006 Move X21, 0xE89000
	007 Move W8, [X20+1825]
	008 Move X21, [X21+2424]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE89000
	015 Move X0, [X0+2424]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1825], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X19
	022 Move X20, X0
	023 Call DictionaryEnumerator..ctor, X0, X1
	024 Move X0, X20
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return X0

