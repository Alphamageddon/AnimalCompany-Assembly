Type: System.Runtime.Remoting.Messaging.CADMessageBase

Method: System.Void .ctor(System.Runtime.Remoting.Messaging.IMethodMessage msg)

Disassembly:
	0x032949E4 LDR X8, [X8 + 0x820]
	0x032949E8 MOV W21, W0
	0x032949EC LDR X8, [X8]
	0x032949F0 MOV X0, X8
	0x032949F4 BL 0x1C16F10
	0x032949F8 MOV X1, X20
	0x032949FC MOV W2, W21
	0x03294A00 MOV X19, X0
	0x03294A04 BL 0x3293130
	0x03294A08 B 0x32949A8
	0x03294A0C BL 0x1C16F20
	0x03294A10 SUB X31, X31, 0x60
	0x03294A14 STR X30, [X31 + 0x30]
	0x03294A18 STP X22, X21, [X31 + 0x40]
	0x03294A1C STP X20, X19, [X31 + 0x50]
	0x03294A20 MRS X21, 0xC000
	0x03294A24 LDR X8, [X21 + 0x28]
	0x03294A28 ADRP X22, 0x1148000
	0x03294A2C MOV X20, X2
	0x03294A30 MOV X19, X1
	0x03294A34 STR X8, [X31 + 0x28]
	0x03294A38 LDRB W8, [X22 + 0x6E9]
	0x03294A3C TBNZ X8, 0x0, 0x3294BEC
	0x03294A40 ADRP X0, 0xE61000
	0x03294A44 LDR X0, [X0 + 0x9B8]
	0x03294A48 BL 0x1C16CF4
	0x03294A4C ADRP X0, 0xE5F000
	0x03294A50 LDR X0, [X0 + 0xB58]
	0x03294A54 BL 0x1C16CF4
	0x03294A58 ADRP X0, 0xE5F000
	0x03294A5C LDR X0, [X0 + 0x618]
	0x03294A60 BL 0x1C16CF4
	0x03294A64 ADRP X0, 0xE60000
	0x03294A68 LDR X0, [X0 + 0x9D8]
	0x03294A6C BL 0x1C16CF4
	0x03294A70 ADRP X0, 0xE90000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1149000
	007 Move X21, 0xE91000
	008 Move W8, [X22+1762]
	009 Move X21, [X21+2040]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xE91000
	017 Move X0, [X0+2040]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1762], W8
	021 Move X0, X19
	022 Move X1, X31
	023 Call Object..ctor, X0
	024 Move X0, [X21]
	025 Call 0x1C17F10
	026 Move X1, X20
	027 Move X21, X0
	028 Call CADMethodRef..ctor, X0, X1
	029 Move X0, X21
	030 Call CADSerializer.SerializeObject, X0
	031 Compare X0, 0
	032 JumpIfEqual {44}
	033 Move X8, [X0]
	034 Move X9, [X8+952]
	035 Move X1, [X8+960]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move [X19+48], X0
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 Return 
	044 Call 0x1C17F20

Method: System.Reflection.MethodBase GetMethod()

Disassembly:
	0x03294A74 LDR X0, [X0 + 0x818]
	0x03294A78 BL 0x1C16CF4
	0x03294A7C ADRP X0, 0xE90000
	0x03294A80 LDR X0, [X0 + 0x820]
	0x03294A84 BL 0x1C16CF4
	0x03294A88 ADRP X0, 0xE68000
	0x03294A8C LDR X0, [X0 + 0x8D8]
	0x03294A90 BL 0x1C16CF4
	0x03294A94 ADRP X0, 0xE61000
	0x03294A98 LDR X0, [X0 + 0x170]
	0x03294A9C BL 0x1C16CF4
	0x03294AA0 ADRP X0, 0xE60000
	0x03294AA4 LDR X0, [X0 + 0x9F0]
	0x03294AA8 BL 0x1C16CF4
	0x03294AAC ADRP X0, 0xE90000
	0x03294AB0 LDR X0, [X0 + 0x828]
	0x03294AB4 BL 0x1C16CF4
	0x03294AB8 ADRP X0, 0xE87000
	0x03294ABC LDR X0, [X0 + 0x5F0]
	0x03294AC0 BL 0x1C16CF4
	0x03294AC4 ADRP X0, 0xE90000
	0x03294AC8 LDR X0, [X0 + 0x830]
	0x03294ACC BL 0x1C16CF4
	0x03294AD0 ADRP X0, 0xE62000
	0x03294AD4 LDR X0, [X0 + 0x978]
	0x03294AD8 BL 0x1C16CF4
	0x03294ADC ADRP X0, 0xE87000
	0x03294AE0 LDR X0, [X0 + 0x820]
	0x03294AE4 BL 0x1C16CF4
	0x03294AE8 ADRP X0, 0xE63000
	0x03294AEC LDR X0, [X0 + 0x628]
	0x03294AF0 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1149000
	005 Move W8, [X20+1763]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE91000
	012 Move X0, [X0+2040]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1763], W8
	016 Move X0, [X19+48]
	017 Call CADSerializer.DeserializeObjectSafe, X0
	018 Compare X0, 0
	019 JumpIfEqual {37}
	020 Move X9, 0xE91000
	021 Move X9, [X9+2040]
	022 Move X8, [X0]
	023 Move X1, [X9]
	024 Move W10, [X8+304]
	025 Move W9, [X1+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X8, [X8+200]
	028 Add X8, X8, X9
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Call CADMethodRef.Resolve, X0
	035 Return X0
	036 Call 0x1C181E0
	037 Call 0x1C17F20

Method: System.Type[] GetSignature(System.Reflection.MethodBase methodBase, System.Boolean load)

Disassembly:
	0x03294AF4 ADRP X0, 0xE60000
	0x03294AF8 LDR X0, [X0 + 0xE58]
	0x03294AFC BL 0x1C16CF4
	0x03294B00 ADRP X0, 0xE5F000
	0x03294B04 LDR X0, [X0 + 0x758]
	0x03294B08 BL 0x1C16CF4
	0x03294B0C ADRP X0, 0xE90000
	0x03294B10 LDR X0, [X0 + 0x838]
	0x03294B14 BL 0x1C16CF4
	0x03294B18 ADRP X0, 0xE61000
	0x03294B1C LDR X0, [X0 + 0xA60]
	0x03294B20 BL 0x1C16CF4
	0x03294B24 ADRP X0, 0xE88000
	0x03294B28 LDR X0, [X0 + 0xF20]
	0x03294B2C BL 0x1C16CF4
	0x03294B30 ADRP X0, 0xE8F000
	0x03294B34 LDR X0, [X0 + 0xE68]
	0x03294B38 BL 0x1C16CF4
	0x03294B3C ADRP X0, 0xE5F000
	0x03294B40 LDR X0, [X0 + 0xEF0]
	0x03294B44 BL 0x1C16CF4
	0x03294B48 ADRP X0, 0xE8E000
	0x03294B4C LDR X0, [X0 + 0x708]
	0x03294B50 BL 0x1C16CF4
	0x03294B54 ADRP X0, 0xE88000
	0x03294B58 LDR X0, [X0 + 0x6B0]
	0x03294B5C BL 0x1C16CF4
	0x03294B60 ADRP X0, 0xE5F000
	0x03294B64 LDR X0, [X0 + 0x638]
	0x03294B68 BL 0x1C16CF4
	0x03294B6C ADRP X0, 0xE5F000
	0x03294B70 LDR X0, [X0 + 0xA90]
	0x03294B74 BL 0x1C16CF4
	0x03294B78 ADRP X0, 0xE61000
	0x03294B7C LDR X0, [X0 + 0x278]
	0x03294B80 BL 0x1C16CF4
	0x03294B84 ADRP X0, 0xE61000
	0x03294B88 LDR X0, [X0 + 0x570]
	0x03294B8C BL 0x1C16CF4
	0x03294B90 ADRP X0, 0xE5F000
	0x03294B94 LDR X0, [X0 + 0x6C0]
	0x03294B98 BL 0x1C16CF4
	0x03294B9C ADRP X0, 0xE8F000
	0x03294BA0 LDR X0, [X0 + 0x8D0]
	0x03294BA4 BL 0x1C16CF4
	0x03294BA8 ADRP X0, 0xE64000
	0x03294BAC LDR X0, [X0 + 0x658]
	0x03294BB0 BL 0x1C16CF4
	0x03294BB4 ADRP X0, 0xE88000
	0x03294BB8 LDR X0, [X0 + 0xD08]
	0x03294BBC BL 0x1C16CF4
	0x03294BC0 ADRP X0, 0xE67000
	0x03294BC4 LDR X0, [X0 + 0x720]
	0x03294BC8 BL 0x1C16CF4
	0x03294BCC ADRP X0, 0xE67000
	0x03294BD0 LDR X0, [X0 + 0x568]
	0x03294BD4 BL 0x1C16CF4
	0x03294BD8 ADRP X0, 0xE60000
	0x03294BDC LDR X0, [X0 + 0x758]
	0x03294BE0 BL 0x1C16CF4
	0x03294BE4 MOVZ W8, 0x1
	0x03294BE8 STRB W8, [X22 + 0x6E9]
	0x03294BEC STR X31, [X31 + 0x8]
	0x03294BF0 CBZ X19, 0x3294CE8
	0x03294BF4 ADRP X9, 0xE90000
	0x03294BF8 LDR X9, [X9 + 0x818]
	0x03294BFC LDR X8, [X19]
	0x03294C00 LDR X10, [X9]
	0x03294C04 LDRB W9, [X8 + 0x130]
	0x03294C08 LDRB W11, [X10 + 0x130]
	0x03294C0C CMP W9, W11
	0x03294C10 B.CC 0x3294C28
	0x03294C14 LDR X12, [X8 + 0xC8]
	0x03294C18 ADD X11, X12, X11, 0x3, LSL
	0x03294C1C LDUR X11, [X11 - 0x8]
	0x03294C20 CMP X11, X10
	0x03294C24 B.EQ 0x3294CF0
	0x03294C28 ADRP X10, 0xE90000
	0x03294C2C LDR X10, [X10 + 0x820]
	0x03294C30 LDR X10, [X10]
	0x03294C34 LDRB W11, [X10 + 0x130]
	0x03294C38 CMP W9, W11
	0x03294C3C B.CC 0x3294C54
	0x03294C40 LDR X12, [X8 + 0xC8]
	0x03294C44 ADD X11, X12, X11, 0x3, LSL
	0x03294C48 LDUR X11, [X11 - 0x8]
	0x03294C4C CMP X11, X10
	0x03294C50 B.EQ 0x3294D10
	0x03294C54 ADRP X10, 0xE5F000
	0x03294C58 LDR X10, [X10 + 0xEF0]
	0x03294C5C LDR X10, [X10]
	0x03294C60 LDRB W11, [X10 + 0x130]
	0x03294C64 CMP W9, W11
	0x03294C68 B.CC 0x3294C80
	0x03294C6C LDR X8, [X8 + 0xC8]
	0x03294C70 ADD X8, X8, X11, 0x3, LSL
	0x03294C74 LDUR X8, [X8 - 0x8]
	0x03294C78 CMP X8, X10
	0x03294C7C B.EQ 0x3294D58
	0x03294C80 MOV X0, X19
	0x03294C84 MOV X1, X31
	0x03294C88 BL 0x33BE520
	0x03294C8C ADRP X8, 0xE5F000
	0x03294C90 LDR X8, [X8 + 0x6C0]
	0x03294C94 MOV X20, X0
	0x03294C98 LDR X8, [X8]
	0x03294C9C LDR W9, [X8 + 0xE0]
	0x03294CA0 CBNZ W9, 0x3294CAC

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0x1149000
	013 Move W8, [X21+1764]
	014 Move W19, W1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0xE91000
	021 Move X0, [X0+2048]
	022 Call 0x1C17CF4
	023 Move X0, 0xE68000
	024 Move X0, [X0+3168]
	025 Call 0x1C17CF4
	026 Move X0, 0xE68000
	027 Move X0, [X0+1480]
	028 Call 0x1C17CF4
	029 Move X0, 0xE60000
	030 Move X0, [X0+1728]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X21+1764], W8
	034 Compare X20, 0
	035 JumpIfEqual {125}
	036 Move X8, [X20]
	037 Move X0, X20
	038 Move X9, [X8+584]
	039 Move X1, [X8+592]
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Compare X0, 0
	042 JumpIfEqual {125}
	043 Move X8, 0xE68000
	044 Move X8, [X8+3168]
	045 Move X20, X0
	046 Move W1, [X20+24]
	047 Move X0, [X8]
	048 Call 0x1C17D6C
	049 Move W8, [X20+24]
	050 Move X21, X0
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X24, 0xE60000
	053 Move X25, 0xE68000
	054 Move X26, 0xE91000
	055 Move X24, [X24+1728]
	056 Move X25, [X25+1480]
	057 Move X26, [X26+2048]
	058 Move X23, X31
	059 Add X27, X21, 32
	060 Add X28, X20, 32
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X0, [X28]
	063 Compare X0, 0
	064 JumpIfEqual {125}
	065 Move X8, [X0]
	066 Move X9, [X8+472]
	067 Move X1, [X8+480]
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Move X22, X0
	070 Move TEMP, X19
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfNotEqual {96}
	074 Compare X22, 0
	075 JumpIfEqual {125}
	076 Move X8, [X22]
	077 Move X0, X22
	078 Move X9, [X8+728]
	079 Move X1, [X8+736]
	080 NotImplemented "Instruction BLR not yet implemented."
	081 Move X8, [X24]
	082 Move X22, X0
	083 Move W9, [X8+224]
	084 Compare W9, 0
	085 JumpIfNotEqual {88}
	086 Move X0, X8
	087 Call 0x1C17DFC
	088 Move X2, [X25]
	089 Move X3, [X26]
	090 Move W1, 1
	091 Move X0, X22
	092 Call 0x1C180BC
	093 Compare X21, 0
	094 JumpIfEqual {125}
	095 Move X22, X0
	096 Compare X21, 0
	097 JumpIfEqual {125}
	098 Compare X22, 0
	099 JumpIfEqual {106}
	100 Move X8, [X21]
	101 Move X0, X22
	102 Move X1, [X8+64]
	103 Call 0x1C17E00
	104 Compare X0, 0
	105 JumpIfEqual {127}
	106 Move W8, [X21+24]
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move [X27], X22
	109 Move W8, [X20+24]
	110 Add X23, X23, 1
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move X0, X21
	113 Move X20, [X31+80]
	114 Move X19, [X31+88]
	115 Move X22, [X31+64]
	116 Move X21, [X31+72]
	117 Move X24, [X31+48]
	118 Move X23, [X31+56]
	119 Move X26, [X31+32]
	120 Move X25, [X31+40]
	121 Move X28, [X31+16]
	122 Move X27, [X31+24]
	123 Move X30, [X31+96]
	124 Return X0
	125 Call 0x1C17F20
	126 Call 0x1C17F28
	127 Call 0x1C17F44
	128 Move X1, X31
	129 Call 0x1C17DEC

Method: System.Int32 MarshalProperties(System.Collections.IDictionary dict, ref System.Collections.ArrayList args)

Disassembly:
	0x03294CA4 MOV X0, X8
	0x03294CA8 BL 0x1C16DFC
	0x03294CAC MOV X0, X20
	0x03294CB0 MOV X1, X31
	0x03294CB4 BL 0x3397AFC
	0x03294CB8 SUB W8, W0, 0x3
	0x03294CBC CMP W8, 0xF
	0x03294CC0 B.HI 0x3294F78
	0x03294CC4 ADRP X9, 0xFFFFFFFFFD902000
	0x03294CC8 ADD X9, X9, 0x4C0
	0x03294CCC ADR X10, 0x10
	0x03294CD0 LDRH W11, [X9, X8, LSL #1]
	0x03294CD4 ADD X10, X10, X11, 0x2, LSL
	0x03294CD8 BR X10
	0x03294CDC ADRP X20, 0xE5F000
	0x03294CE0 LDR X20, [X20 + 0xB58]
	0x03294CE4 B 0x3295044
	0x03294CE8 MOV X20, X31
	0x03294CEC B 0x32950F8
	0x03294CF0 CBZ X20, 0x329517C
	0x03294CF4 LDR X8, [X20]
	0x03294CF8 LDR W1, [X19 + 0x10]
	0x03294CFC MOV X0, X20
	0x03294D00 LDR X9, [X8 + 0x2E8]
	0x03294D04 LDR X2, [X8 + 0x2F0]
	0x03294D08 BLR X9
	0x03294D0C B 0x32950F4
	0x03294D10 LDR X0, [X19 + 0x10]
	0x03294D14 CBZ X0, 0x329517C
	0x03294D18 LDR X2, [X19 + 0x20]
	0x03294D1C LDR W1, [X19 + 0x18]
	0x03294D20 MOV X3, X31
	0x03294D24 BL 0x3274378
	0x03294D28 ADRP X8, 0xE8F000
	0x03294D2C LDR X8, [X8 + 0xE68]
	0x03294D30 MOV X19, X0
	0x03294D34 LDR X8, [X8]
	0x03294D38 LDR W9, [X8 + 0xE0]
	0x03294D3C CBNZ W9, 0x3294D48
	0x03294D40 MOV X0, X8
	0x03294D44 BL 0x1C16DFC
	0x03294D48 MOV X0, X19
	0x03294D4C MOV X1, X31
	0x03294D50 BL 0x3275290
	0x03294D54 B 0x32950F4
	0x03294D58 MOV X0, X19
	0x03294D5C MOV X1, X31
	0x03294D60 BL 0x33BE520
	0x03294D64 CBZ X0, 0x329517C
	0x03294D68 LDR X8, [X0]
	0x03294D6C LDR X9, [X8 + 0x428]
	0x03294D70 LDR X1, [X8 + 0x430]
	0x03294D74 BLR X9
	0x03294D78 ADRP X8, 0xE5F000
	0x03294D7C LDR X8, [X8 + 0x6C0]
	0x03294D80 MOV X20, X0
	0x03294D84 LDR X8, [X8]
	0x03294D88 LDR W9, [X8 + 0xE0]
	0x03294D8C CBNZ W9, 0x3294D98
	0x03294D90 MOV X0, X8
	0x03294D94 BL 0x1C16DFC
	0x03294D98 MOV X0, X20
	0x03294D9C MOV X1, X31
	0x03294DA0 BL 0x3397AFC
	0x03294DA4 SUB W8, W0, 0x3
	0x03294DA8 CMP W8, 0xD
	0x03294DAC B.CS 0x3295180
	0x03294DB0 ADRP X9, 0xC60000
	0x03294DB4 ADD X9, X9, 0x778
	0x03294DB8 LDR X20, [X9, W8, SXTW]
	0x03294DBC MOV X0, X19
	0x03294DC0 MOV X1, X31
	0x03294DC4 BL 0x3395B7C
	0x03294DC8 LDR X8, [X20]
	0x03294DCC MOV W1, W0
	0x03294DD0 MOV X0, X8
	0x03294DD4 BL 0x1C16D6C
	0x03294DD8 MOV X20, X0
	0x03294DDC MOV X0, X19
	0x03294DE0 MOV X1, X20
	0x03294DE4 MOV W2, W31
	0x03294DE8 MOV X3, X31
	0x03294DEC BL 0x339FC34
	0x03294DF0 B 0x32950F8
	0x03294DF4 ADRP X20, 0xE5F000
	0x03294DF8 LDR X20, [X20 + 0xA90]
	0x03294DFC LDR X8, [X19]
	0x03294E00 LDR X1, [X20]
	0x03294E04 LDR X8, [X8 + 0x40]
	0x03294E08 LDR X9, [X1 + 0x40]
	0x03294E0C CMP X8, X9
	0x03294E10 B.NE 0x3295174
	0x03294E14 MOV X0, X19
	0x03294E18 BL 0x1C16E08
	0x03294E1C LDR V0, [X0]
	0x03294E20 LDR X0, [X20]
	0x03294E24 STR S0, [X31 + 0x10]
	0x03294E28 B 0x32950EC
	0x03294E2C ADRP X20, 0xE60000
	0x03294E30 LDR X20, [X20 + 0x9F0]
	0x03294E34 LDR X8, [X19]
	0x03294E38 LDR X1, [X20]
	0x03294E3C LDR X8, [X8 + 0x40]
	0x03294E40 LDR X9, [X1 + 0x40]
	0x03294E44 CMP X8, X9
	0x03294E48 B.NE 0x3295174
	0x03294E4C MOV X0, X19
	0x03294E50 BL 0x1C16E08
	0x03294E54 LDR X8, [X0]
	0x03294E58 LDR X0, [X20]
	0x03294E5C STR X8, [X31 + 0x8]
	0x03294E60 LDR W8, [X0 + 0xE0]
	0x03294E64 CBNZ W8, 0x3294E6C
	0x03294E68 BL 0x1C16DFC
	0x03294E6C ADD X0, X31, 0x8
	0x03294E70 MOV X1, X31
	0x03294E74 BL 0x3361708
	0x03294E78 MOV X1, X0
	0x03294E7C ADD X0, X31, 0x10
	0x03294E80 MOV X2, X31
	0x03294E84 STR X31, [X31 + 0x10]
	0x03294E88 BL 0x335EEB0
	0x03294E8C LDR X8, [X31 + 0x10]
	0x03294E90 LDR X0, [X20]
	0x03294E94 ADD X1, X31, 0x0
	0x03294E98 STR X8, [X31]
	0x03294E9C B 0x32950F0
	0x03294EA0 ADRP X20, 0xE61000
	0x03294EA4 LDR X20, [X20 + 0x170]
	0x03294EA8 B 0x329507C
	0x03294EAC ADRP X20, 0xE88000
	0x03294EB0 LDR X20, [X20 + 0x6B0]
	0x03294EB4 B 0x3295044
	0x03294EB8 ADRP X20, 0xE64000
	0x03294EBC LDR X20, [X20 + 0x658]
	0x03294EC0 B 0x329507C
	0x03294EC4 ADRP X20, 0xE5F000
	0x03294EC8 LDR X20, [X20 + 0x758]
	0x03294ECC B 0x3294ED8
	0x03294ED0 ADRP X20, 0xE67000
	0x03294ED4 LDR X20, [X20 + 0x720]
	0x03294ED8 LDR X8, [X19]
	0x03294EDC LDR X1, [X20]
	0x03294EE0 LDR X8, [X8 + 0x40]
	0x03294EE4 LDR X9, [X1 + 0x40]
	0x03294EE8 CMP X8, X9
	0x03294EEC B.NE 0x3295174
	0x03294EF0 MOV X0, X19
	0x03294EF4 BL 0x1C16E08
	0x03294EF8 LDR W8, [X0]
	0x03294EFC LDR X0, [X20]
	0x03294F00 STR W8, [X31 + 0x10]
	0x03294F04 B 0x32950EC
	0x03294F08 ADRP X20, 0xE62000
	0x03294F0C LDR X20, [X20 + 0x978]
	0x03294F10 LDR X8, [X19]
	0x03294F14 LDR X1, [X20]
	0x03294F18 LDR X8, [X8 + 0x40]
	0x03294F1C LDR X9, [X1 + 0x40]
	0x03294F20 CMP X8, X9
	0x03294F24 B.NE 0x3295174
	0x03294F28 MOV X0, X19
	0x03294F2C BL 0x1C16E08
	0x03294F30 LDR V0, [X0]
	0x03294F34 LDR X0, [X20]
	0x03294F38 STR D0, [X31 + 0x10]
	0x03294F3C B 0x32950EC
	0x03294F40 ADRP X20, 0xE87000
	0x03294F44 LDR X20, [X20 + 0x5F0]
	0x03294F48 LDR X8, [X19]
	0x03294F4C LDR X1, [X20]
	0x03294F50 LDR X8, [X8 + 0x40]
	0x03294F54 LDR X9, [X1 + 0x40]
	0x03294F58 CMP X8, X9
	0x03294F5C B.NE 0x3295174
	0x03294F60 MOV X0, X19
	0x03294F64 BL 0x1C16E08
	0x03294F68 LDR V0, [X0]
	0x03294F6C LDR X0, [X20]
	0x03294F70 STR V0, [X31 + 0x1]
	0x03294F74 B 0x32950EC
	0x03294F78 ADRP X20, 0xE61000
	0x03294F7C LDR X20, [X20 + 0x570]
	0x03294F80 LDR X8, [X19]
	0x03294F84 LDR X9, [X20]
	0x03294F88 CMP X8, X9
	0x03294F8C B.EQ 0x3295148
	0x03294F90 ADRP X20, 0xE88000
	0x03294F94 LDR X20, [X20 + 0xF20]
	0x03294F98 LDR X9, [X20]
	0x03294F9C CMP X8, X9
	0x03294FA0 B.EQ 0x32950D8
	0x03294FA4 MOV X0, X19
	0x03294FA8 MOV X1, X31
	0x03294FAC BL 0x33BE520
	0x03294FB0 MOV X20, X0
	0x03294FB4 ADRP X0, 0xE90000
	0x03294FB8 LDR X0, [X0 + 0x840]
	0x03294FBC BL 0x1C16D08
	0x03294FC0 MOV X19, X0
	0x03294FC4 MOV X21, X31
	0x03294FC8 CBZ X20, 0x3294FE0
	0x03294FCC LDR X8, [X20]
	0x03294FD0 MOV X0, X20
	0x03294FD4 LDP X9, X1, [X8 + 0x168]
	0x03294FD8 BLR X9
	0x03294FDC MOV X21, X0
	0x03294FE0 ADRP X0, 0xE90000
	0x03294FE4 LDR X0, [X0 + 0x848]
	0x03294FE8 BL 0x1C16D08
	0x03294FEC MOV X2, X0
	0x03294FF0 MOV X0, X19
	0x03294FF4 MOV X1, X21
	0x03294FF8 MOV X3, X31
	0x03294FFC BL 0x32274B8
	0x03295000 MOV X19, X0
	0x03295004 ADRP X0, 0xE5E000
	0x03295008 LDR X0, [X0 + 0xB40]
	0x0329500C BL 0x1C16D08
	0x03295010 BL 0x1C16F10
	0x03295014 MOV X1, X19
	0x03295018 MOV X2, X31
	0x0329501C MOV X20, X0
	0x03295020 BL 0x3379A44
	0x03295024 ADRP X0, 0xE8F000
	0x03295028 LDR X0, [X0 + 0x850]
	0x0329502C BL 0x1C16D08
	0x03295030 MOV X1, X0
	0x03295034 MOV X0, X20
	0x03295038 BL 0x1C16DEC
	0x0329503C ADRP X20, 0xE5F000
	0x03295040 LDR X20, [X20 + 0x9D8]
	0x03295044 LDR X8, [X19]
	0x03295048 LDR X1, [X20]
	0x0329504C LDR X8, [X8 + 0x40]
	0x03295050 LDR X9, [X1 + 0x40]
	0x03295054 CMP X8, X9
	0x03295058 B.NE 0x3295174
	0x0329505C MOV X0, X19
	0x03295060 BL 0x1C16E08
	0x03295064 LDRB W8, [X0]
	0x03295068 LDR X0, [X20]
	0x0329506C STRB W8, [X31 + 0x10]
	0x03295070 B 0x32950EC
	0x03295074 ADRP X20, 0xE62000
	0x03295078 LDR X20, [X20 + 0x628]
	0x0329507C LDR X8, [X19]
	0x03295080 LDR X1, [X20]
	0x03295084 LDR X8, [X8 + 0x40]
	0x03295088 LDR X9, [X1 + 0x40]
	0x0329508C CMP X8, X9
	0x03295090 B.NE 0x3295174
	0x03295094 MOV X0, X19
	0x03295098 BL 0x1C16E08
	0x0329509C LDRH W8, [X0]
	0x032950A0 LDR X0, [X20]
	0x032950A4 STRH W8, [X31 + 0x10]
	0x032950A8 B 0x32950EC
	0x032950AC ADRP X20, 0xE60000
	0x032950B0 LDR X20, [X20 + 0xA60]
	0x032950B4 B 0x32950C0
	0x032950B8 ADRP X20, 0xE5F000
	0x032950BC LDR X20, [X20 + 0x758]
	0x032950C0 LDR X8, [X19]
	0x032950C4 LDR X1, [X20]
	0x032950C8 LDR X8, [X8 + 0x40]
	0x032950CC LDR X9, [X1 + 0x40]
	0x032950D0 CMP X8, X9
	0x032950D4 B.NE 0x3295174
	0x032950D8 MOV X0, X19
	0x032950DC BL 0x1C16E08
	0x032950E0 LDR X8, [X0]
	0x032950E4 LDR X0, [X20]
	0x032950E8 STR X8, [X31 + 0x10]
	0x032950EC ADD X1, X31, 0x10
	0x032950F0 BL 0x1C16E04
	0x032950F4 MOV X20, X0
	0x032950F8 LDR X8, [X21 + 0x28]
	0x032950FC LDR X9, [X31 + 0x28]
	0x03295100 CMP X8, X9
	0x03295104 B.NE 0x32951B4
	0x03295108 MOV X0, X20
	0x0329510C LDP X20, X19, [X31 + 0x50]
	0x03295110 LDP X22, X21, [X31 + 0x40]
	0x03295114 LDR X30, [X31 + 0x30]
	0x03295118 ADD X31, X31, 0x60
	0x0329511C RET
	0x03295120 ADRP X8, 0xE60000
	0x03295124 LDR X8, [X8 + 0x278]
	0x03295128 LDR X1, [X8]
	0x0329512C LDR X8, [X19]
	0x03295130 CMP X8, X1
	0x03295134 B.NE 0x3295174
	0x03295138 MOV X0, X19
	0x0329513C MOV X1, X31
	0x03295140 BL 0x322D750
	0x03295144 B 0x32950F4
	0x03295148 MOV X0, X19
	0x0329514C BL 0x1C16E08
	0x03295150 MOV X8, X0
	0x03295154 LDR X0, [X20]
	0x03295158 LDR X19, [X8]
	0x0329515C LDR W9, [X0 + 0xE0]
	0x03295160 CBNZ W9, 0x329516C
	0x03295164 BL 0x1C16DFC
	0x03295168 LDR X0, [X20]
	0x0329516C STR X19, [X31 + 0x10]
	0x03295170 B 0x32950EC
	0x03295174 MOV X0, X19
	0x03295178 BL 0x1C171E0
	0x0329517C BL 0x1C16F20
	0x03295180 ADRP X0, 0xE5E000
	0x03295184 LDR X0, [X0 + 0xB40]
	0x03295188 BL 0x1C16D08
	0x0329518C BL 0x1C16F10
	0x03295190 MOV X1, X31
	0x03295194 MOV X19, X0
	0x03295198 BL 0x3380310
	0x0329519C ADRP X0, 0xE8F000
	0x032951A0 LDR X0, [X0 + 0x850]
	0x032951A4 BL 0x1C16D08
	0x032951A8 MOV X1, X0
	0x032951AC MOV X0, X19
	0x032951B0 BL 0x1C16DEC
	0x032951B4 BL 0x3EB1B20
	0x032951B8 STR X30, [X31 - 0x50]!
	0x032951BC STP X26, X25, [X31 + 0x10]
	0x032951C0 STP X24, X23, [X31 + 0x20]
	0x032951C4 STP X22, X21, [X31 + 0x30]
	0x032951C8 STP X20, X19, [X31 + 0x40]
	0x032951CC ADRP X21, 0x1147000
	0x032951D0 LDRB W8, [X21 + 0x6EA]
	0x032951D4 MOV X19, X2
	0x032951D8 MOV X20, X1
	0x032951DC TBNZ X8, 0x0, 0x32951F4
	0x032951E0 ADRP X0, 0xE5E000
	0x032951E4 LDR X0, [X0 + 0x9D0]
	0x032951E8 BL 0x1C16CF4
	0x032951EC MOVZ W8, 0x1
	0x032951F0 STRB W8, [X21 + 0x6EA]
	0x032951F4 CBZ X20, 0x32952A8
	0x032951F8 ADRP X8, 0xE5E000
	0x032951FC LDR X8, [X8 + 0x9D0]
	0x03295200 LDR W1, [X20 + 0x18]
	0x03295204 LDR X0, [X8]
	0x03295208 BL 0x1C16D6C
	0x0329520C LDR X8, [X20 + 0x18]
	0x03295210 MOV X21, X0
	0x03295214 CMP W8, 0x1
	0x03295218 B.LT 0x329528C
	0x0329521C AND X8, X8, 0x0
	0x03295220 CBZ X8, 0x3295288
	0x03295224 MOV X23, X31
	0x03295228 SUB X24, X8, 0x1
	0x0329522C ADD X25, X21, 0x20
	0x03295230 ADD X26, X20, 0x20
	0x03295234 LDR X1, [X26, X23, LSL #3]
	0x03295238 MOV X2, X19
	0x0329523C BL 0x3294854
	0x03295240 CBZ X21, 0x32952A8
	0x03295244 MOV X22, X0
	0x03295248 CBZ X0, 0x3295260
	0x0329524C LDR X8, [X21]
	0x03295250 MOV X0, X22
	0x03295254 LDR X1, [X8 + 0x40]
	0x03295258 BL 0x1C16E00
	0x0329525C CBZ X0, 0x32952AC
	0x03295260 LDR W8, [X21 + 0x18]
	0x03295264 CMP X23, X8
	0x03295268 B.CS 0x3295288
	0x0329526C CMP X24, X23
	0x03295270 STR X22, [X25, X23, LSL #3]
	0x03295274 B.EQ 0x329528C
	0x03295278 LDR W8, [X20 + 0x18]
	0x0329527C ADD X23, X23, 0x1
	0x03295280 CMP X23, X8
	0x03295284 B.CC 0x3295234
	0x03295288 BL 0x1C16F28
	0x0329528C MOV X0, X21
	0x03295290 LDP X20, X19, [X31 + 0x40]
	0x03295294 LDP X22, X21, [X31 + 0x30]
	0x03295298 LDP X24, X23, [X31 + 0x20]
	0x0329529C LDP X26, X25, [X31 + 0x10]
	0x032952A0 LDR X30, [X31], #0x50
	0x032952A4 RET
	0x032952A8 BL 0x1C16F20
	0x032952AC BL 0x1C16F44
	0x032952B0 MOV X1, X31
	0x032952B4 BL 0x1C16DEC
	0x032952B8 STR X30, [X31 - 0x50]!
	0x032952BC STP X26, X25, [X31 + 0x10]
	0x032952C0 STP X24, X23, [X31 + 0x20]
	0x032952C4 STP X22, X21, [X31 + 0x30]
	0x032952C8 STP X20, X19, [X31 + 0x40]
	0x032952CC ADRP X21, 0x1147000
	0x032952D0 LDRB W8, [X21 + 0x6EB]
	0x032952D4 MOV X19, X2
	0x032952D8 MOV X20, X1
	0x032952DC TBNZ X8, 0x0, 0x32952F4
	0x032952E0 ADRP X0, 0xE5E000
	0x032952E4 LDR X0, [X0 + 0x9D0]
	0x032952E8 BL 0x1C16CF4
	0x032952EC MOVZ W8, 0x1
	0x032952F0 STRB W8, [X21 + 0x6EB]
	0x032952F4 CBZ X20, 0x32953A8
	0x032952F8 ADRP X8, 0xE5E000
	0x032952FC LDR X8, [X8 + 0x9D0]
	0x03295300 LDR W1, [X20 + 0x18]
	0x03295304 LDR X0, [X8]
	0x03295308 BL 0x1C16D6C
	0x0329530C LDR X8, [X20 + 0x18]
	0x03295310 MOV X21, X0
	0x03295314 CMP W8, 0x1
	0x03295318 B.LT 0x329538C
	0x0329531C AND X8, X8, 0x0
	0x03295320 CBZ X8, 0x3295388
	0x03295324 MOV X23, X31
	0x03295328 SUB X24, X8, 0x1
	0x0329532C ADD X25, X21, 0x20
	0x03295330 ADD X26, X20, 0x20
	0x03295334 LDR X1, [X26, X23, LSL #3]
	0x03295338 MOV X2, X19
	0x0329533C BL 0x3294A10
	0x03295340 CBZ X21, 0x32953A8
	0x03295344 MOV X22, X0
	0x03295348 CBZ X0, 0x3295360
	0x0329534C LDR X8, [X21]
	0x03295350 MOV X0, X22
	0x03295354 LDR X1, [X8 + 0x40]
	0x03295358 BL 0x1C16E00
	0x0329535C CBZ X0, 0x32953AC
	0x03295360 LDR W8, [X21 + 0x18]
	0x03295364 CMP X23, X8
	0x03295368 B.CS 0x3295388
	0x0329536C CMP X24, X23
	0x03295370 STR X22, [X25, X23, LSL #3]
	0x03295374 B.EQ 0x329538C
	0x03295378 LDR W8, [X20 + 0x18]
	0x0329537C ADD X23, X23, 0x1
	0x03295380 CMP X23, X8
	0x03295384 B.CC 0x3295334
	0x03295388 BL 0x1C16F28
	0x0329538C MOV X0, X21
	0x03295390 LDP X20, X19, [X31 + 0x40]
	0x03295394 LDP X22, X21, [X31 + 0x30]
	0x03295398 LDP X24, X23, [X31 + 0x20]
	0x0329539C LDP X26, X25, [X31 + 0x10]
	0x032953A0 LDR X30, [X31], #0x50
	0x032953A4 RET
	0x032953A8 BL 0x1C16F20
	0x032953AC BL 0x1C16F44
	0x032953B0 MOV X1, X31
	0x032953B4 BL 0x1C16DEC
	0x032953B8 STR X30, [X31 - 0x40]!
	0x032953BC STP X24, X23, [X31 + 0x10]
	0x032953C0 STP X22, X21, [X31 + 0x20]
	0x032953C4 STP X20, X19, [X31 + 0x30]
	0x032953C8 ADRP X22, 0x1147000
	0x032953CC LDRB W8, [X22 + 0x6EC]
	0x032953D0 MOV X20, X2
	0x032953D4 MOV X19, X1
	0x032953D8 MOV X21, X0
	0x032953DC TBNZ X8, 0x0, 0x329540C
	0x032953E0 ADRP X0, 0xE8B000

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X30
	003 Move [X31+64], X28
	004 Move [X31+72], X27
	005 Move [X31+80], X26
	006 Move [X31+88], X25
	007 Move [X31+96], X24
	008 Move [X31+104], X23
	009 Move [X31+112], X22
	010 Move [X31+120], X21
	011 Move [X31+128], X20
	012 Move [X31+136], X19
	013 Move X19, 0x1149000
	014 Move W8, [X19+1765]
	015 Move X20, X1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {41}
	021 Move X0, 0xE8D000
	022 Move X0, [X0+2976]
	023 Call 0x1C17CF4
	024 Move X0, 0xE68000
	025 Move X0, [X0+3856]
	026 Call 0x1C17CF4
	027 Move X0, 0xE60000
	028 Move X0, [X0+2072]
	029 Call 0x1C17CF4
	030 Move X0, 0xE60000
	031 Move X0, [X0+3584]
	032 Call 0x1C17CF4
	033 Move X0, 0xE60000
	034 Move X0, [X0+3608]
	035 Call 0x1C17CF4
	036 Move X0, 0xE91000
	037 Move X0, [X0+2056]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X19+1765], W8
	041 Move [X31+32], X31
	042 Move [X31+40], X31
	043 Move [X31+16], X31
	044 Move [X31+24], X31
	045 Compare X21, 0
	046 JumpIfEqual {219}
	047 Move X9, 0xE91000
	048 Move X9, [X9+2056]
	049 Move X8, [X21]
	050 Move X25, 0xE60000
	051 Move X24, 0xE60000
	052 Move X9, [X9]
	053 Move W11, [X8+304]
	054 Move W10, [X9+304]
	055 Move X25, [X25+2072]
	056 Move X24, [X24+3584]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X11, [X8+200]
	059 Add X10, X11, X10
	060 NotImplemented "Instruction LDUR not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move W19, W31
	063 NotImplemented "Instruction LDRH not yet implemented."
	064 Move X1, [X25]
	065 Compare X9, 0
	066 JumpIfEqual {73}
	067 Move X10, [X8+176]
	068 Add X10, X10, 8
	069 NotImplemented "Instruction LDUR not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Subtract X9, X9, 1
	072 Add X10, X10, 16
	073 Move W2, 6
	074 Move X0, X21
	075 Call 0x1C5D788
	076 Move W9, [X10]
	077 Add W9, W9, 6
	078 Add X8, X8, W9
	079 Add X0, X8, 312
	080 Move X8, [X0]
	081 Move X1, [X0+8]
	082 Move X0, X21
	083 NotImplemented "Instruction BLR not yet implemented."
	084 Move X21, X0
	085 Compare X0, 0
	086 JumpIfEqual {381}
	087 Move X23, 0xE60000
	088 Move X25, 0xE68000
	089 Move X26, 0xE8D000
	090 Move X23, [X23+3608]
	091 Move X25, [X25+3856]
	092 Move X26, [X26+2976]
	093 Move X8, [X21]
	094 Move X1, [X23]
	095 NotImplemented "Instruction LDRH not yet implemented."
	096 Compare X9, 0
	097 JumpIfEqual {104}
	098 Move X10, [X8+176]
	099 Add X10, X10, 8
	100 NotImplemented "Instruction LDUR not yet implemented."
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Subtract X9, X9, 1
	103 Add X10, X10, 16
	104 Move X0, X21
	105 Move W2, W31
	106 Call 0x1C5D788
	107 NotImplemented "Instruction LDRSW not yet implemented."
	108 Add X8, X8, X9
	109 Add X0, X8, 312
	110 Move X8, [X0]
	111 Move X1, [X0+8]
	112 Move X0, X21
	113 NotImplemented "Instruction BLR not yet implemented."
	114 Move TEMP, X0
	115 And TEMP, TEMP, 1
	116 Compare TEMP, 1
	117 JumpIfNotEqual {173}
	118 Move X8, [X21]
	119 Move X1, [X23]
	120 NotImplemented "Instruction LDRH not yet implemented."
	121 Compare X9, 0
	122 JumpIfEqual {129}
	123 Move X10, [X8+176]
	124 Add X10, X10, 8
	125 NotImplemented "Instruction LDUR not yet implemented."
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Subtract X9, X9, 1
	128 Add X10, X10, 16
	129 Move W2, 1
	130 Move X0, X21
	131 Call 0x1C5D788
	132 Move W9, [X10]
	133 Add W9, W9, 1
	134 Add X8, X8, W9
	135 Add X0, X8, 312
	136 Move X8, [X0]
	137 Move X1, [X0+8]
	138 Move X0, X21
	139 NotImplemented "Instruction BLR not yet implemented."
	140 Compare X0, 0
	141 JumpIfEqual {376}
	142 Move X8, [X0]
	143 Move X1, [X25]
	144 Move X8, [X8+64]
	145 Move X9, [X1+64]
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Call 0x1C17E08
	148 Move V0, [X0]
	149 Move [X31+1], V0
	150 Move X22, [X20]
	151 Compare X22, 0
	152 JumpIfNotEqual {159}
	153 Move X0, [X26]
	154 Call 0x1C17F10
	155 Move X22, X0
	156 Move X1, X31
	157 Call ArrayList..ctor, X0
	158 Move [X20], X22
	159 Move V0, [X31+1]
	160 Move X0, [X25]
	161 Move [X31], V0
	162 Add X1, X31, 0
	163 Call 0x1C17E04
	164 Move X1, X0
	165 Compare X22, 0
	166 JumpIfEqual {377}
	167 Move X8, [X22]
	168 Move X9, [X8+776]
	169 Move X2, [X8+784]
	170 Move X0, X22
	171 NotImplemented "Instruction BLR not yet implemented."
	172 Add W19, W19, 1
	173 Move X20, X31
	174 Move X1, [X24]
	175 Move X0, X21
	176 Call 0x1C17E00
	177 Compare X0, 0
	178 JumpIfEqual {227}
	179 Move X8, [X0]
	180 Move X1, [X24]
	181 Move X21, X0
	182 NotImplemented "Instruction LDRH not yet implemented."
	183 Compare X9, 0
	184 JumpIfEqual {191}
	185 Move X10, [X8+176]
	186 Add X10, X10, 8
	187 NotImplemented "Instruction LDUR not yet implemented."
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Subtract X9, X9, 1
	190 Add X10, X10, 16
	191 Move X0, X21
	192 Move W2, W31
	193 Call 0x1C5D788
	194 Move X0, X21
	195 Call MessageDictionary.HasUserData, X0
	196 Move TEMP, X0
	197 And TEMP, TEMP, 1
	198 Compare TEMP, 1
	199 JumpIfNotEqual {219}
	200 Move X0, X21
	201 Call MessageDictionary.get_InternalDictionary, X0
	202 Compare X0, 0
	203 JumpIfEqual {219}
	204 Move X8, [X0]
	205 Move X1, [X25]
	206 Move X21, X0
	207 NotImplemented "Instruction LDRH not yet implemented."
	208 Compare X9, 0
	209 JumpIfEqual {216}
	210 Move X10, [X8+176]
	211 Add X10, X10, 8
	212 NotImplemented "Instruction LDUR not yet implemented."
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Subtract X9, X9, 1
	215 Add X10, X10, 16
	216 Move W2, 6
	217 Move X0, X21
	218 Call 0x1C5D788
	219 Move W19, W31
	220 NotImplemented "Instruction LDRSW not yet implemented."
	221 Add X8, X8, X9
	222 Add X0, X8, 312
	223 Move X8, [X0]
	224 Move X1, [X0+8]
	225 Move X0, X21
	226 NotImplemented "Instruction BLR not yet implemented."
	227 Compare X20, 0
	228 JumpIfNotEqual {382}
	229 Move W0, W19
	230 Move X20, [X31+128]
	231 Move X19, [X31+136]
	232 Move X22, [X31+112]
	233 Move X21, [X31+120]
	234 Move X24, [X31+96]
	235 Move X23, [X31+104]
	236 Move X26, [X31+80]
	237 Move X25, [X31+88]
	238 Move X28, [X31+64]
	239 Move X27, [X31+72]
	240 Move X30, [X31+48]
	241 Add X31, X31, 144
	242 Return X0
	243 Move W9, [X10]
	244 Add W9, W9, 6
	245 Add X8, X8, W9
	246 Add X0, X8, 312
	247 Move X8, [X0]
	248 Move X1, [X0+8]
	249 Move X0, X21
	250 NotImplemented "Instruction BLR not yet implemented."
	251 Move X22, X0
	252 Compare X0, 0
	253 JumpIfEqual {384}
	254 Move X26, 0xE5F000
	255 Move X27, 0xE67000
	256 Move X28, 0xE8C000
	257 Move X26, [X26+3608]
	258 Move X27, [X27+3856]
	259 Move X28, [X28+2976]
	260 Move W19, W31
	261 Move X8, [X22]
	262 Move X1, [X26]
	263 NotImplemented "Instruction LDRH not yet implemented."
	264 Compare X9, 0
	265 JumpIfEqual {272}
	266 Move X10, [X8+176]
	267 Add X10, X10, 8
	268 NotImplemented "Instruction LDUR not yet implemented."
	269 NotImplemented "Instruction CMP not yet implemented."
	270 Subtract X9, X9, 1
	271 Add X10, X10, 16
	272 Move X0, X22
	273 Move W2, W31
	274 Call 0x1C5D788
	275 NotImplemented "Instruction LDRSW not yet implemented."
	276 Add X8, X8, X9
	277 Add X0, X8, 312
	278 Move X8, [X0]
	279 Move X1, [X0+8]
	280 Move X0, X22
	281 NotImplemented "Instruction BLR not yet implemented."
	282 Move TEMP, X0
	283 And TEMP, TEMP, 1
	284 Compare TEMP, 1
	285 JumpIfNotEqual {341}
	286 Move X8, [X22]
	287 Move X1, [X26]
	288 NotImplemented "Instruction LDRH not yet implemented."
	289 Compare X9, 0
	290 JumpIfEqual {297}
	291 Move X10, [X8+176]
	292 Add X10, X10, 8
	293 NotImplemented "Instruction LDUR not yet implemented."
	294 NotImplemented "Instruction CMP not yet implemented."
	295 Subtract X9, X9, 1
	296 Add X10, X10, 16
	297 Move W2, 1
	298 Move X0, X22
	299 Call 0x1C5D788
	300 Move W9, [X10]
	301 Add W9, W9, 1
	302 Add X8, X8, W9
	303 Add X0, X8, 312
	304 Move X8, [X0]
	305 Move X1, [X0+8]
	306 Move X0, X22
	307 NotImplemented "Instruction BLR not yet implemented."
	308 Compare X0, 0
	309 JumpIfEqual {379}
	310 Move X8, [X0]
	311 Move X1, [X27]
	312 Move X8, [X8+64]
	313 Move X9, [X1+64]
	314 NotImplemented "Instruction CMP not yet implemented."
	315 Call 0x1C17E08
	316 Move V0, [X0]
	317 Move [X31+2], V0
	318 Move X23, [X20]
	319 Compare X23, 0
	320 JumpIfNotEqual {327}
	321 Move X0, [X28]
	322 Call 0x1C17F10
	323 Move X23, X0
	324 Move X1, X31
	325 Call ArrayList..ctor, X0
	326 Move [X20], X23
	327 Move V0, [X31+2]
	328 Move X0, [X27]
	329 Move [X31], V0
	330 Add X1, X31, 0
	331 Call 0x1C17E04
	332 Move X1, X0
	333 Compare X23, 0
	334 JumpIfEqual {380}
	335 Move X8, [X23]
	336 Move X9, [X8+776]
	337 Move X2, [X8+784]
	338 Move X0, X23
	339 NotImplemented "Instruction BLR not yet implemented."
	340 Add W19, W19, 1
	341 Move X23, X31
	342 Move W26, W31
	343 Move X1, [X24]
	344 Move X0, X22
	345 Call 0x1C17E00
	346 Compare X0, 0
	347 JumpIfEqual {370}
	348 Move X8, [X0]
	349 Move X1, [X24]
	350 Move X22, X0
	351 NotImplemented "Instruction LDRH not yet implemented."
	352 Compare X9, 0
	353 JumpIfEqual {360}
	354 Move X10, [X8+176]
	355 Add X10, X10, 8
	356 NotImplemented "Instruction LDUR not yet implemented."
	357 NotImplemented "Instruction CMP not yet implemented."
	358 Subtract X9, X9, 1
	359 Add X10, X10, 16
	360 Move X0, X22
	361 Move W2, W31
	362 Call 0x1C5D788
	363 NotImplemented "Instruction LDRSW not yet implemented."
	364 Add X8, X8, X9
	365 Add X0, X8, 312
	366 Move X8, [X0]
	367 Move X1, [X0+8]
	368 Move X0, X22
	369 NotImplemented "Instruction BLR not yet implemented."
	370 Compare X23, 0
	371 JumpIfNotEqual {385}
	372 Compare W26, 0
	373 JumpIfEqual {229}
	374 Move X8, [X21]
	375 Call 0x1C181E0
	376 Call 0x1C17F20
	377 Call 0x1C17F20
	378 Call 0x1C181E0
	379 Call 0x1C17F20
	380 Call 0x1C17F20
	381 Call 0x1C17F20
	382 Move X0, X20
	383 Call 0x1C17F18
	384 Call 0x1C17F20
	385 Move X0, X23
	386 Call 0x1C17F18
	387 Move [X31+56], X0
	388 Move W19, W31
	389 Move [X31+56], X0
	390 NotImplemented "Instruction CMP not yet implemented."
	391 Move X0, [X31+56]
	392 Call 0x3EB2AD0
	393 Move X23, [X0]
	394 Call 0x3EB2AE0
	395 Move W26, 1
	396 Move X23, X31
	397 Move [X31+56], X0
	398 Move X1, [X24]
	399 Move X0, X22
	400 Call 0x1C17E00
	401 Move X19, X0
	402 Compare X0, 0
	403 JumpIfEqual {425}
	404 Move X8, [X19]
	405 Move X1, [X24]
	406 NotImplemented "Instruction LDRH not yet implemented."
	407 Compare X9, 0
	408 JumpIfEqual {415}
	409 Move X10, [X8+176]
	410 Add X10, X10, 8
	411 NotImplemented "Instruction LDUR not yet implemented."
	412 NotImplemented "Instruction CMP not yet implemented."
	413 Subtract X9, X9, 1
	414 Add X10, X10, 16
	415 Move X0, X19
	416 Move W2, W31
	417 Call 0x1C5D788
	418 NotImplemented "Instruction LDRSW not yet implemented."
	419 Add X8, X8, X9
	420 Add X0, X8, 312
	421 Move X8, [X0]
	422 Move X1, [X0+8]
	423 Move X0, X19
	424 NotImplemented "Instruction BLR not yet implemented."
	425 Compare X23, 0
	426 JumpIfEqual {465}
	427 Move X0, X23
	428 Call 0x1C17F18
	429 NotImplemented "Instruction CMP not yet implemented."
	430 Call 0x3EB2AD0
	431 Move X20, [X0]
	432 Call 0x3EB2AE0
	433 Move [X31+56], X0
	434 Move X20, X31
	435 Move [X31+56], X0
	436 Move X1, [X24]
	437 Move X0, X21
	438 Call 0x1C17E00
	439 Move X19, X0
	440 Compare X0, 0
	441 JumpIfEqual {463}
	442 Move X8, [X19]
	443 Move X1, [X24]
	444 NotImplemented "Instruction LDRH not yet implemented."
	445 Compare X9, 0
	446 JumpIfEqual {453}
	447 Move X10, [X8+176]
	448 Add X10, X10, 8
	449 NotImplemented "Instruction LDUR not yet implemented."
	450 NotImplemented "Instruction CMP not yet implemented."
	451 Subtract X9, X9, 1
	452 Add X10, X10, 16
	453 Move X0, X19
	454 Move W2, W31
	455 Call 0x1C5D788
	456 NotImplemented "Instruction LDRSW not yet implemented."
	457 Add X8, X8, X9
	458 Add X0, X8, 312
	459 Move X8, [X0]
	460 Move X1, [X0+8]
	461 Move X0, X19
	462 NotImplemented "Instruction BLR not yet implemented."
	463 Compare X20, 0
	464 JumpIfNotEqual {467}
	465 Move X0, [X31+56]
	466 Call 0x1D2D690
	467 Move X0, X20
	468 Call 0x1C17F18
	469 Call 0x1991590

Method: System.Void UnmarshalProperties(System.Collections.IDictionary dict, System.Int32 count, System.Collections.ArrayList args)

Disassembly:
	0x03295568 LDUR X11, [X10 - 0x8]
	0x0329556C CMP X11, X1
	0x03295570 B.EQ 0x32955A4
	0x03295574 SUBS X9, X9, 0x1
	0x03295578 ADD X10, X10, 0x10
	0x0329557C B.NE 0x3295568
	0x03295580 MOVZ W2, 0x2
	0x03295584 MOV X0, X19
	0x03295588 BL 0x1C5C788
	0x0329558C B 0x32955B4
	0x03295590 LDP X20, X19, [X31 + 0x30]
	0x03295594 LDP X22, X21, [X31 + 0x20]
	0x03295598 LDP X24, X23, [X31 + 0x10]
	0x0329559C LDR X30, [X31], #0x40
	0x032955A0 RET
	0x032955A4 LDR W9, [X10]
	0x032955A8 ADD W9, W9, 0x2
	0x032955AC ADD X8, X8, W9, 0x4, SXTW
	0x032955B0 ADD X0, X8, 0x138
	0x032955B4 LDP X8, X1, [X0]
	0x032955B8 MOV X0, X19
	0x032955BC BLR X8
	0x032955C0 CBZ X20, 0x32955EC
	0x032955C4 LDR X8, [X20]
	0x032955C8 MOV X1, X0
	0x032955CC MOV X0, X20
	0x032955D0 LDP X20, X19, [X31 + 0x30]
	0x032955D4 LDR X3, [X8 + 0x308]
	0x032955D8 LDR X2, [X8 + 0x310]
	0x032955DC LDP X22, X21, [X31 + 0x20]
	0x032955E0 LDP X24, X23, [X31 + 0x10]
	0x032955E4 LDR X30, [X31], #0x40
	0x032955E8 BR X3
	0x032955EC BL 0x1C16F20
	0x032955F0 STP X30, X21, [X31 - 0x20]!
	0x032955F4 STP X20, X19, [X31 + 0x10]
	0x032955F8 ADRP X21, 0x1147000
	0x032955FC LDRB W8, [X21 + 0x6ED]
	0x03295600 MOV X19, X1
	0x03295604 MOV X20, X0
	0x03295608 TBNZ X8, 0x0, 0x3295620
	0x0329560C ADRP X0, 0xE8F000
	0x03295610 LDR X0, [X0 + 0x370]
	0x03295614 BL 0x1C16CF4
	0x03295618 MOVZ W8, 0x1
	0x0329561C STRB W8, [X21 + 0x6ED]
	0x03295620 LDR X8, [X20 + 0x28]
	0x03295624 CBZ X8, 0x3295664
	0x03295628 CBZ X19, 0x3295674
	0x0329562C LDR X9, [X19]
	0x03295630 LDR W1, [X8 + 0x10]
	0x03295634 MOV X0, X19
	0x03295638 LDR X8, [X9 + 0x2E8]
	0x0329563C LDR X2, [X9 + 0x2F0]
	0x03295640 BLR X8
	0x03295644 CBZ X0, 0x3295668
	0x03295648 ADRP X8, 0xE8F000
	0x0329564C LDR X8, [X8 + 0x370]
	0x03295650 LDR X1, [X8]
	0x03295654 LDR X8, [X0]
	0x03295658 CMP X8, X1
	0x0329565C B.EQ 0x3295668
	0x03295660 BL 0x1C171E0
	0x03295664 MOV X0, X31
	0x03295668 LDP X20, X19, [X31 + 0x10]
	0x0329566C LDP X30, X21, [X31], #0x20
	0x03295670 RET
	0x03295674 BL 0x1C16F20
	0x03295678 LDR X0, [X0 + 0x38]
	0x0329567C RET
	0x03295680 STP X30, X21, [X31 - 0x20]!
	0x03295684 STP X20, X19, [X31 + 0x10]
	0x03295688 ADRP X20, 0x1147000
	0x0329568C ADRP X21, 0xE8F000
	0x03295690 LDRB W8, [X20 + 0x6EE]
	0x03295694 LDR X21, [X21 + 0x458]
	0x03295698 MOV X19, X0
	0x0329569C TBNZ X8, 0x0, 0x32956C0
	0x032956A0 ADRP X0, 0xE8F000

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x1148000
	011 Move W8, [X22+1766]
	012 Move X19, X2
	013 Move W20, W1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xE67000
	020 Move X0, [X0+3856]
	021 Call 0x1C17CF4
	022 Move X0, 0xE5F000
	023 Move X0, [X0+2072]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+1766], W8
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Compare X19, 0
	029 JumpIfEqual {89}
	030 Move X25, 0xE67000
	031 Move X26, 0xE5F000
	032 Move X25, [X25+3856]
	033 Move X26, [X26+2072]
	034 Move W22, W31
	035 Move X8, [X19]
	036 Move X0, X19
	037 Move W1, W22
	038 Move X9, [X8+744]
	039 Move X2, [X8+752]
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Compare X0, 0
	042 JumpIfEqual {89}
	043 Move X8, [X0]
	044 Move X1, [X25]
	045 Move X8, [X8+64]
	046 Move X9, [X1+64]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Call 0x1C17E08
	049 Compare X21, 0
	050 JumpIfEqual {89}
	051 Move X8, [X21]
	052 Move X24, [X0]
	053 Move X23, [X0+8]
	054 Move X1, [X26]
	055 NotImplemented "Instruction LDRH not yet implemented."
	056 Compare X9, 0
	057 JumpIfEqual {64}
	058 Move X10, [X8+176]
	059 Add X10, X10, 8
	060 NotImplemented "Instruction LDUR not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Subtract X9, X9, 1
	063 Add X10, X10, 16
	064 Move W2, 1
	065 Move X0, X21
	066 Call 0x1C5D788
	067 Move W9, [X10]
	068 Add W9, W9, 1
	069 Add X8, X8, W9
	070 Add X0, X8, 312
	071 Move X8, [X0]
	072 Move X3, [X0+8]
	073 Move X0, X21
	074 Move X1, X24
	075 Move X2, X23
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Add W22, W22, 1
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move X20, [X31+64]
	080 Move X19, [X31+72]
	081 Move X22, [X31+48]
	082 Move X21, [X31+56]
	083 Move X24, [X31+32]
	084 Move X23, [X31+40]
	085 Move X26, [X31+16]
	086 Move X25, [X31+24]
	087 Move X30, [X31+80]
	088 Return 
	089 Call 0x1C17F20
	090 Call 0x1C181E0

Method: System.Boolean IsPossibleToIgnoreMarshal(System.Object obj)

Disassembly:
	0x032956A4 LDR X0, [X0 + 0x858]
	0x032956A8 BL 0x1C16CF4
	0x032956AC ADRP X0, 0xE8F000
	0x032956B0 LDR X0, [X0 + 0x458]
	0x032956B4 BL 0x1C16CF4
	0x032956B8 MOVZ W8, 0x1
	0x032956BC STRB W8, [X20 + 0x6EE]
	0x032956C0 LDR X1, [X21]
	0x032956C4 MOV X0, X19
	0x032956C8 BL 0x1C16E00
	0x032956CC CBZ X0, 0x32956F4
	0x032956D0 ADRP X8, 0xE8F000
	0x032956D4 LDR X8, [X8 + 0x858]
	0x032956D8 MOV X19, X0
	0x032956DC LDR X0, [X8]
	0x032956E0 BL 0x1C16F10
	0x032956E4 MOV X1, X19
	0x032956E8 MOV X20, X0
	0x032956EC BL 0x3295700
	0x032956F0 MOV X0, X20
	0x032956F4 LDP X20, X19, [X31 + 0x10]
	0x032956F8 LDP X30, X21, [X31], #0x20
	0x032956FC RET
	0x03295700 STR X30, [X31 - 0x30]!
	0x03295704 STP X22, X21, [X31 + 0x10]
	0x03295708 STP X20, X19, [X31 + 0x20]
	0x0329570C ADRP X21, 0x1147000
	0x03295710 LDRB W8, [X21 + 0x6EF]
	0x03295714 MOV X20, X1
	0x03295718 MOV X19, X0
	0x0329571C TBNZ X8, 0x0, 0x3295740
	0x03295720 ADRP X0, 0xE8F000
	0x03295724 LDR X0, [X0 + 0x860]
	0x03295728 BL 0x1C16CF4
	0x0329572C ADRP X0, 0xE8F000
	0x03295730 LDR X0, [X0 + 0x270]
	0x03295734 BL 0x1C16CF4
	0x03295738 MOVZ W8, 0x1
	0x0329573C STRB W8, [X21 + 0x6EF]
	0x03295740 MOV X0, X19
	0x03295744 MOV X1, X20
	0x03295748 BL 0x32939E4
	0x0329574C CBZ X20, 0x32958E8
	0x03295750 ADRP X21, 0xE8F000
	0x03295754 LDR X8, [X20]
	0x03295758 LDR X21, [X21 + 0x270]
	0x0329575C ADRP X22, 0xE8F000
	0x03295760 LDRH W9, [X8 + 0x12E]
	0x03295764 LDR X1, [X21]
	0x03295768 LDR X22, [X22 + 0x860]
	0x0329576C CBZ X9, 0x3295790
	0x03295770 LDR X10, [X8 + 0xB0]
	0x03295774 ADD X10, X10, 0x8
	0x03295778 LDUR X11, [X10 - 0x8]
	0x0329577C CMP X11, X1
	0x03295780 B.EQ 0x32957A0
	0x03295784 SUBS X9, X9, 0x1
	0x03295788 ADD X10, X10, 0x10
	0x0329578C B.NE 0x3295778
	0x03295790 MOVZ W2, 0x7
	0x03295794 MOV X0, X20
	0x03295798 BL 0x1C5C788
	0x0329579C B 0x32957B0
	0x032957A0 LDR W9, [X10]
	0x032957A4 ADD W9, W9, 0x7
	0x032957A8 ADD X8, X8, W9, 0x4, SXTW
	0x032957AC ADD X0, X8, 0x138
	0x032957B0 LDP X8, X1, [X0]
	0x032957B4 MOV X0, X20
	0x032957B8 BLR X8
	0x032957BC STR X0, [X19 + 0x38]
	0x032957C0 STR X31, [X31 + 0x8]
	0x032957C4 LDR X8, [X20]
	0x032957C8 LDR X1, [X22]
	0x032957CC LDRH W9, [X8 + 0x12E]
	0x032957D0 CBZ X9, 0x32957F4
	0x032957D4 LDR X10, [X8 + 0xB0]
	0x032957D8 ADD X10, X10, 0x8
	0x032957DC LDUR X11, [X10 - 0x8]
	0x032957E0 CMP X11, X1
	0x032957E4 B.EQ 0x3295804
	0x032957E8 SUBS X9, X9, 0x1
	0x032957EC ADD X10, X10, 0x10
	0x032957F0 B.NE 0x32957DC
	0x032957F4 MOV X0, X20
	0x032957F8 MOV W2, W31
	0x032957FC BL 0x1C5C788
	0x03295800 B 0x3295810
	0x03295804 LDRSW X9, [X10]
	0x03295808 ADD X8, X8, X9, 0x4, LSL
	0x0329580C ADD X0, X8, 0x138
	0x03295810 LDP X8, X1, [X0]
	0x03295814 MOV X0, X20
	0x03295818 BLR X8
	0x0329581C ADD X1, X31, 0x8
	0x03295820 BL 0x3293CA4
	0x03295824 STR W0, [X19 + 0x20]
	0x03295828 LDR X8, [X20]
	0x0329582C LDR X1, [X21]
	0x03295830 LDRH W9, [X8 + 0x12E]
	0x03295834 CBZ X9, 0x3295858
	0x03295838 LDR X10, [X8 + 0xB0]
	0x0329583C ADD X10, X10, 0x8
	0x03295840 LDUR X11, [X10 - 0x8]
	0x03295844 CMP X11, X1
	0x03295848 B.EQ 0x3295868
	0x0329584C SUBS X9, X9, 0x1
	0x03295850 ADD X10, X10, 0x10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1148000
	006 Move W8, [X20+1767]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {32}
	012 Move X0, 0xE60000
	013 Move X0, [X0+2544]
	014 Call 0x1C17CF4
	015 Move X0, 0xE5F000
	016 Move X0, [X0+3824]
	017 Call 0x1C17CF4
	018 Move X0, 0xE61000
	019 Move X0, [X0+632]
	020 Call 0x1C17CF4
	021 Move X0, 0xE61000
	022 Move X0, [X0+1392]
	023 Call 0x1C17CF4
	024 Move X0, 0xE5F000
	025 Move X0, [X0+1728]
	026 Call 0x1C17CF4
	027 Move X0, 0xE90000
	028 Move X0, [X0+2064]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+1767], W8
	032 Compare X19, 0
	033 JumpIfEqual {123}
	034 Move X0, X19
	035 Move X1, X31
	036 Call "il2cpp_vm_object_is_inst", X0
	037 Compare X0, 0
	038 JumpIfEqual {123}
	039 Move X1, X31
	040 Move X20, X0
	041 Call Type.get_IsPrimitive, X0
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {67}
	046 Move X8, 0xE5F000
	047 Move X8, [X8+1728]
	048 Move X0, [X8]
	049 Move X8, 0xE90000
	050 Move X8, [X8+2064]
	051 Move W9, [X0+224]
	052 Move X21, [X8]
	053 Compare W9, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, X21
	057 Move X1, X31
	058 Call Type.GetTypeFromHandle, X0
	059 Move X1, X0
	060 Move X0, X20
	061 Move X2, X31
	062 Call Type.op_Equality, X0, X1
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {73}
	067 Move W0, 1
	068 Move X20, [X31+16]
	069 Move X19, [X31+24]
	070 Move X30, [X31+32]
	071 Move X21, [X31+40]
	072 Return X0
	073 Move X0, X20
	074 Move X1, X31
	075 Call Type.get_IsArray, X0
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {108}
	080 Move X8, [X20]
	081 Move X0, X20
	082 Move X9, [X8+1064]
	083 Move X1, [X8+1072]
	084 NotImplemented "Instruction BLR not yet implemented."
	085 Compare X0, 0
	086 JumpIfEqual {123}
	087 Move X1, X31
	088 Call Type.get_IsPrimitive, X0
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfNotEqual {108}
	093 Move X9, 0xE5F000
	094 Move X9, [X9+3824]
	095 Move X8, [X19]
	096 Move X1, [X9]
	097 Move W10, [X8+304]
	098 Move W9, [X1+304]
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X8, [X8+200]
	101 Add X8, X8, X9
	102 NotImplemented "Instruction LDUR not yet implemented."
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move X0, X19
	105 Move X1, X31
	106 Call Array.get_Rank, X0
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move X8, 0xE61000
	109 Move X8, [X8+632]
	110 Move W0, 1
	111 Move X9, [X8]
	112 Move X8, [X19]
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move X9, 0xE60000
	115 Move X9, [X9+2544]
	116 Move X9, [X9]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move X9, 0xE61000
	119 Move X9, [X9+1392]
	120 Move X9, [X9]
	121 NotImplemented "Instruction CMP not yet implemented."
	122 NotImplemented "Instruction CSET not yet implemented."
	123 Call 0x1C17F20
	124 Move X0, X19
	125 Call 0x1C181E0

Method: System.Object MarshalArgument(System.Object arg, ref System.Collections.ArrayList args)

Disassembly:
	0x03295854 B.NE 0x3295840
	0x03295858 MOVZ W2, 0x1
	0x0329585C MOV X0, X20
	0x03295860 BL 0x1C5C788
	0x03295864 B 0x3295878
	0x03295868 LDR W9, [X10]
	0x0329586C ADD W9, W9, 0x1
	0x03295870 ADD X8, X8, W9, 0x4, SXTW
	0x03295874 ADD X0, X8, 0x138
	0x03295878 LDP X8, X1, [X0]
	0x0329587C MOV X0, X20
	0x03295880 BLR X8
	0x03295884 ADD X2, X31, 0x8
	0x03295888 MOV X1, X0
	0x0329588C BL 0x32951B8
	0x03295890 STR X0, [X19 + 0x10]
	0x03295894 ADD X2, X31, 0x8
	0x03295898 MOV X0, X19
	0x0329589C MOV X1, X20
	0x032958A0 BL 0x32953B8
	0x032958A4 LDR X0, [X31 + 0x8]
	0x032958A8 CBZ X0, 0x32958D8
	0x032958AC LDR X8, [X0]
	0x032958B0 LDR X9, [X8 + 0x3F8]
	0x032958B4 LDR X1, [X8 + 0x400]
	0x032958B8 BLR X9
	0x032958BC BL 0x328E564
	0x032958C0 CBZ X0, 0x32958E8
	0x032958C4 LDR X8, [X0]
	0x032958C8 LDR X9, [X8 + 0x3B8]
	0x032958CC LDR X1, [X8 + 0x3C0]
	0x032958D0 BLR X9
	0x032958D4 STR X0, [X19 + 0x18]
	0x032958D8 LDP X20, X19, [X31 + 0x20]
	0x032958DC LDP X22, X21, [X31 + 0x10]
	0x032958E0 LDR X30, [X31], #0x30
	0x032958E4 RET
	0x032958E8 BL 0x1C16F20
	0x032958EC STR X30, [X31 - 0x30]!
	0x032958F0 STP X22, X21, [X31 + 0x10]
	0x032958F4 STP X20, X19, [X31 + 0x20]
	0x032958F8 ADRP X20, 0x1147000
	0x032958FC LDRB W8, [X20 + 0x6F0]
	0x03295900 MOV X19, X0
	0x03295904 TBNZ X8, 0x0, 0x3295940
	0x03295908 ADRP X0, 0xE8B000
	0x0329590C LDR X0, [X0 + 0xBA0]
	0x03295910 BL 0x1C16CF4
	0x03295914 ADRP X0, 0xE5E000
	0x03295918 LDR X0, [X0 + 0x618]
	0x0329591C BL 0x1C16CF4
	0x03295920 ADRP X0, 0xE66000
	0x03295924 LDR X0, [X0 + 0x558]
	0x03295928 BL 0x1C16CF4
	0x0329592C ADRP X0, 0xE5E000
	0x03295930 LDR X0, [X0 + 0x9D0]
	0x03295934 BL 0x1C16CF4
	0x03295938 MOVZ W8, 0x1
	0x0329593C STRB W8, [X20 + 0x6F0]
	0x03295940 LDR X8, [X19 + 0x18]
	0x03295944 CBZ X8, 0x32959F0
	0x03295948 ADRP X9, 0xE5E000
	0x0329594C LDR X9, [X9 + 0x618]
	0x03295950 LDR W1, [X8 + 0x18]
	0x03295954 LDR X0, [X9]
	0x03295958 BL 0x1C16D6C
	0x0329595C LDR X8, [X19 + 0x18]
	0x03295960 CBZ X8, 0x3295A20
	0x03295964 LDR W2, [X8 + 0x18]
	0x03295968 ADRP X21, 0xE66000
	0x0329596C ADRP X22, 0xE8B000
	0x03295970 LDR X21, [X21 + 0x558]
	0x03295974 LDR X22, [X22 + 0xBA0]
	0x03295978 MOV X20, X0
	0x0329597C MOV X0, X8
	0x03295980 MOV X1, X20
	0x03295984 MOV X3, X31
	0x03295988 BL 0x33A0C7C
	0x0329598C LDR X0, [X21]
	0x03295990 BL 0x1C16F10
	0x03295994 MOV X1, X20
	0x03295998 MOV X2, X31
	0x0329599C MOV X21, X0
	0x032959A0 BL 0x32E2528
	0x032959A4 MOV X0, X21
	0x032959A8 BL 0x328E4DC
	0x032959AC LDR X8, [X22]
	0x032959B0 MOV X21, X0
	0x032959B4 MOV X0, X8
	0x032959B8 BL 0x1C16F10
	0x032959BC MOV X20, X0
	0x032959C0 CBZ X21, 0x32959F8
	0x032959C4 ADRP X8, 0xE5E000
	0x032959C8 LDR X8, [X8 + 0x9D0]
	0x032959CC MOV X0, X21
	0x032959D0 LDR X22, [X8]
	0x032959D4 MOV X1, X22
	0x032959D8 BL 0x1C16E00
	0x032959DC MOV X1, X0
	0x032959E0 CBNZ X0, 0x32959FC
	0x032959E4 MOV X0, X21
	0x032959E8 MOV X1, X22
	0x032959EC BL 0x1C171E0
	0x032959F0 MOV X20, X31
	0x032959F4 B 0x3295A0C
	0x032959F8 MOV X1, X31
	0x032959FC MOV X0, X20
	0x03295A00 MOV X2, X31
	0x03295A04 BL 0x3358360
	0x03295A08 STR X31, [X19 + 0x18]
	0x03295A0C MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1148000
	006 Move W8, [X21+1768]
	007 Move X20, X2
	008 Move X19, X1
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {30}
	013 Move X0, 0xE8C000
	014 Move X0, [X0+2976]
	015 Call 0x1C17CF4
	016 Move X0, 0xE90000
	017 Move X0, [X0+2072]
	018 Call 0x1C17CF4
	019 Move X0, 0xE90000
	020 Move X0, [X0+2080]
	021 Call 0x1C17CF4
	022 Move X0, 0xE8F000
	023 Move X0, [X0+3416]
	024 Call 0x1C17CF4
	025 Move X0, 0xE8F000
	026 Move X0, [X0+3688]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+1768], W8
	030 Compare X19, 0
	031 JumpIfEqual {100}
	032 Move X0, X19
	033 Call CADMessageBase.IsPossibleToIgnoreMarshal, X0
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {100}
	038 Move X8, 0xE8F000
	039 Move X8, [X8+3416]
	040 Move X9, [X19]
	041 Move X8, [X8]
	042 Move W11, [X9+304]
	043 Move W10, [X8+304]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X9, [X9+200]
	046 Add X9, X9, X10
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X21, 0xE8F000
	050 Move X21, [X21+3688]
	051 Move X0, [X21]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, X19
	057 Move X1, X31
	058 Call RemotingServices.IsTransparentProxy, X0
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {106}
	063 Move X21, [X20]
	064 Compare X21, 0
	065 JumpIfNotEqual {76}
	066 Move X8, 0xE8C000
	067 Move X8, [X8+2976]
	068 Move X0, [X8]
	069 Call 0x1C17F10
	070 Move X1, X31
	071 Move X21, X0
	072 Call ArrayList..ctor, X0
	073 Move [X20], X21
	074 Compare X21, 0
	075 JumpIfEqual {127}
	076 Move X8, [X21]
	077 Move X0, X21
	078 Move X1, X19
	079 Move X9, [X8+776]
	080 Move X2, [X8+784]
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Move X0, [X20]
	083 Compare X0, 0
	084 JumpIfEqual {127}
	085 Move X8, [X0]
	086 Move X9, [X8+664]
	087 Move X1, [X8+672]
	088 NotImplemented "Instruction BLR not yet implemented."
	089 Move X8, 0xE90000
	090 Move X8, [X8+2072]
	091 Move W20, W0
	092 Move X8, [X8]
	093 Move X0, X8
	094 Call 0x1C17F10
	095 Move X1, X31
	096 Move X19, X0
	097 Subtract W20, W20, 1
	098 Call Object..ctor, X0
	099 Move [X19+16], W20
	100 Move X0, X19
	101 Move X20, [X31+16]
	102 Move X19, [X31+24]
	103 Move X30, [X31+32]
	104 Move X21, [X31+40]
	105 Return X0
	106 Move X0, [X21]
	107 Move W8, [X0+224]
	108 Compare W8, 0
	109 JumpIfNotEqual {111}
	110 Call 0x1C17DFC
	111 Move X0, X19
	112 Move X1, X31
	113 Call RemotingServices.Marshal, X0
	114 Move X20, X0
	115 Move X0, X31
	116 Call Thread.GetDomainID
	117 Move X8, 0xE90000
	118 Move X8, [X8+2080]
	119 Move W21, W0
	120 Move X8, [X8]
	121 Move X0, X8
	122 Call 0x1C17F10
	123 Move X1, X20
	124 Move W2, W21
	125 Move X19, X0
	126 Call CADObjRef..ctor, X0, X1, X2
	127 Call 0x1C17F20

Method: System.Object UnmarshalArgument(System.Object arg, System.Collections.ArrayList args)

Disassembly:
	0x03295A10 LDP X20, X19, [X31 + 0x20]
	0x03295A14 LDP X22, X21, [X31 + 0x10]
	0x03295A18 LDR X30, [X31], #0x30
	0x03295A1C RET
	0x03295A20 BL 0x1C16F20
	0x03295A24 LDR X8, [X0 + 0x10]
	0x03295A28 MOV X2, X1
	0x03295A2C MOV X1, X8
	0x03295A30 B 0x32952B8
	0x03295A34 LDR W0, [X0 + 0x20]
	0x03295A38 RET
	0x03295A3C STP X30, X21, [X31 - 0x20]!
	0x03295A40 STP X20, X19, [X31 + 0x10]
	0x03295A44 ADRP X20, 0x1147000
	0x03295A48 ADRP X21, 0xE8F000
	0x03295A4C LDRB W8, [X20 + 0x6F1]
	0x03295A50 LDR X21, [X21 + 0x460]
	0x03295A54 MOV X19, X0
	0x03295A58 TBNZ X8, 0x0, 0x3295A7C
	0x03295A5C ADRP X0, 0xE8F000
	0x03295A60 LDR X0, [X0 + 0x868]
	0x03295A64 BL 0x1C16CF4
	0x03295A68 ADRP X0, 0xE8F000
	0x03295A6C LDR X0, [X0 + 0x460]
	0x03295A70 BL 0x1C16CF4
	0x03295A74 MOVZ W8, 0x1
	0x03295A78 STRB W8, [X20 + 0x6F1]
	0x03295A7C LDR X1, [X21]
	0x03295A80 MOV X0, X19
	0x03295A84 BL 0x1C16E00
	0x03295A88 CBZ X0, 0x3295AB0
	0x03295A8C ADRP X8, 0xE8F000
	0x03295A90 LDR X8, [X8 + 0x868]
	0x03295A94 MOV X19, X0
	0x03295A98 LDR X0, [X8]
	0x03295A9C BL 0x1C16F10
	0x03295AA0 MOV X1, X19
	0x03295AA4 MOV X20, X0
	0x03295AA8 BL 0x3295ABC
	0x03295AAC MOV X0, X20
	0x03295AB0 LDP X20, X19, [X31 + 0x10]
	0x03295AB4 LDP X30, X21, [X31], #0x20
	0x03295AB8 RET
	0x03295ABC STR X30, [X31 - 0x40]!
	0x03295AC0 STP X24, X23, [X31 + 0x10]
	0x03295AC4 STP X22, X21, [X31 + 0x20]
	0x03295AC8 STP X20, X19, [X31 + 0x30]
	0x03295ACC ADRP X21, 0x1147000
	0x03295AD0 LDRB W8, [X21 + 0x6F2]
	0x03295AD4 MOV X20, X1
	0x03295AD8 MOV X19, X0
	0x03295ADC TBNZ X8, 0x0, 0x3295B24
	0x03295AE0 ADRP X0, 0xE8B000
	0x03295AE4 LDR X0, [X0 + 0xBA0]
	0x03295AE8 BL 0x1C16CF4
	0x03295AEC ADRP X0, 0xE8F000
	0x03295AF0 LDR X0, [X0 + 0x818]
	0x03295AF4 BL 0x1C16CF4
	0x03295AF8 ADRP X0, 0xE8F000
	0x03295AFC LDR X0, [X0 + 0x860]
	0x03295B00 BL 0x1C16CF4
	0x03295B04 ADRP X0, 0xE8F000
	0x03295B08 LDR X0, [X0 + 0x270]
	0x03295B0C BL 0x1C16CF4
	0x03295B10 ADRP X0, 0xE8F000
	0x03295B14 LDR X0, [X0 + 0x460]
	0x03295B18 BL 0x1C16CF4
	0x03295B1C MOVZ W8, 0x1
	0x03295B20 STRB W8, [X21 + 0x6F2]
	0x03295B24 MOV X0, X19
	0x03295B28 MOV X1, X20
	0x03295B2C BL 0x32939E4
	0x03295B30 STR X31, [X31 + 0x8]
	0x03295B34 CBZ X20, 0x3295E30
	0x03295B38 ADRP X10, 0xE8F000
	0x03295B3C LDR X8, [X20]
	0x03295B40 LDR X10, [X10 + 0x860]
	0x03295B44 ADRP X24, 0xE8F000
	0x03295B48 LDRH W9, [X8 + 0x12E]
	0x03295B4C LDR X1, [X10]
	0x03295B50 LDR X24, [X24 + 0x460]
	0x03295B54 CBZ X9, 0x3295B78
	0x03295B58 LDR X10, [X8 + 0xB0]
	0x03295B5C ADD X10, X10, 0x8
	0x03295B60 LDUR X11, [X10 - 0x8]
	0x03295B64 CMP X11, X1
	0x03295B68 B.EQ 0x3295B88
	0x03295B6C SUBS X9, X9, 0x1
	0x03295B70 ADD X10, X10, 0x10
	0x03295B74 B.NE 0x3295B60
	0x03295B78 MOV X0, X20
	0x03295B7C MOV W2, W31
	0x03295B80 BL 0x1C5C788
	0x03295B84 B 0x3295B94
	0x03295B88 LDRSW X9, [X10]
	0x03295B8C ADD X8, X8, X9, 0x4, LSL
	0x03295B90 ADD X0, X8, 0x138
	0x03295B94 LDP X8, X1, [X0]
	0x03295B98 ADRP X21, 0xE8F000
	0x03295B9C LDR X21, [X21 + 0x270]
	0x03295BA0 MOV X0, X20
	0x03295BA4 BLR X8
	0x03295BA8 ADD X1, X31, 0x8
	0x03295BAC BL 0x3293CA4
	0x03295BB0 STR W0, [X19 + 0x20]
	0x03295BB4 LDR X8, [X20]
	0x03295BB8 LDR X1, [X24]
	0x03295BBC LDRH W9, [X8 + 0x12E]
	0x03295BC0 CBZ X9, 0x3295BE4
	0x03295BC4 LDR X10, [X8 + 0xB0]
	0x03295BC8 ADD X10, X10, 0x8
	0x03295BCC LDUR X11, [X10 - 0x8]
	0x03295BD0 CMP X11, X1
	0x03295BD4 B.EQ 0x3295BF4
	0x03295BD8 SUBS X9, X9, 0x1
	0x03295BDC ADD X10, X10, 0x10
	0x03295BE0 B.NE 0x3295BCC
	0x03295BE4 MOVZ W2, 0x2
	0x03295BE8 MOV X0, X20
	0x03295BEC BL 0x1C5C788
	0x03295BF0 B 0x3295C04
	0x03295BF4 LDR W9, [X10]
	0x03295BF8 ADD W9, W9, 0x2
	0x03295BFC ADD X8, X8, W9, 0x4, SXTW
	0x03295C00 ADD X0, X8, 0x138
	0x03295C04 LDP X8, X1, [X0]
	0x03295C08 MOV X0, X20
	0x03295C0C BLR X8
	0x03295C10 ADD X2, X31, 0x8
	0x03295C14 MOV X1, X0
	0x03295C18 BL 0x3294854
	0x03295C1C STR X0, [X19 + 0x38]
	0x03295C20 LDR X8, [X20]
	0x03295C24 LDR X1, [X21]
	0x03295C28 LDRH W9, [X8 + 0x12E]
	0x03295C2C CBZ X9, 0x3295C50
	0x03295C30 LDR X10, [X8 + 0xB0]
	0x03295C34 ADD X10, X10, 0x8
	0x03295C38 LDUR X11, [X10 - 0x8]
	0x03295C3C CMP X11, X1
	0x03295C40 B.EQ 0x3295C60
	0x03295C44 SUBS X9, X9, 0x1
	0x03295C48 ADD X10, X10, 0x10
	0x03295C4C B.NE 0x3295C38
	0x03295C50 MOVZ W2, 0x1
	0x03295C54 MOV X0, X20
	0x03295C58 BL 0x1C5C788
	0x03295C5C B 0x3295C70
	0x03295C60 LDR W9, [X10]
	0x03295C64 ADD W9, W9, 0x1
	0x03295C68 ADD X8, X8, W9, 0x4, SXTW
	0x03295C6C ADD X0, X8, 0x138
	0x03295C70 LDP X8, X1, [X0]
	0x03295C74 MOV X0, X20
	0x03295C78 BLR X8
	0x03295C7C ADD X2, X31, 0x8
	0x03295C80 MOV X1, X0
	0x03295C84 BL 0x32951B8
	0x03295C88 STR X0, [X19 + 0x10]
	0x03295C8C MOV X0, X19
	0x03295C90 BL 0x3293A74
	0x03295C94 MOVZ W1, 0x1
	0x03295C98 BL 0x3293AF4
	0x03295C9C STR X0, [X19 + 0x48]
	0x03295CA0 LDR X8, [X20]
	0x03295CA4 LDR X1, [X24]
	0x03295CA8 LDRH W9, [X8 + 0x12E]
	0x03295CAC CBZ X9, 0x3295CD0
	0x03295CB0 LDR X10, [X8 + 0xB0]
	0x03295CB4 ADD X10, X10, 0x8
	0x03295CB8 LDUR X11, [X10 - 0x8]
	0x03295CBC CMP X11, X1
	0x03295CC0 B.EQ 0x3295CE0
	0x03295CC4 SUBS X9, X9, 0x1
	0x03295CC8 ADD X10, X10, 0x10
	0x03295CCC B.NE 0x3295CB8
	0x03295CD0 MOV X0, X20
	0x03295CD4 MOV W2, W31
	0x03295CD8 BL 0x1C5C788
	0x03295CDC B 0x3295CEC
	0x03295CE0 LDRSW X9, [X10]
	0x03295CE4 ADD X8, X8, X9, 0x4, LSL
	0x03295CE8 ADD X0, X8, 0x138
	0x03295CEC LDP X8, X1, [X0]
	0x03295CF0 MOV X0, X20
	0x03295CF4 BLR X8
	0x03295CF8 CBZ X0, 0x3295DD8
	0x03295CFC LDR X21, [X31 + 0x8]
	0x03295D00 CBNZ X21, 0x3295D28
	0x03295D04 ADRP X8, 0xE8B000
	0x03295D08 LDR X8, [X8 + 0xBA0]
	0x03295D0C LDR X0, [X8]
	0x03295D10 BL 0x1C16F10
	0x03295D14 MOV X1, X31
	0x03295D18 MOV X21, X0
	0x03295D1C BL 0x3351F5C
	0x03295D20 STR X21, [X31 + 0x8]
	0x03295D24 CBZ X21, 0x3295E30
	0x03295D28 LDR X8, [X21]
	0x03295D2C ADRP X22, 0xE8F000
	0x03295D30 MOV X0, X21
	0x03295D34 LDR X9, [X8 + 0x298]
	0x03295D38 LDR X1, [X8 + 0x2A0]
	0x03295D3C LDR X22, [X22 + 0x818]
	0x03295D40 BLR X9
	0x03295D44 LDR X8, [X22]
	0x03295D48 MOV W22, W0
	0x03295D4C MOV X0, X8
	0x03295D50 BL 0x1C16F10
	0x03295D54 MOV X1, X31
	0x03295D58 MOV X23, X0
	0x03295D5C BL 0x33BDD8C
	0x03295D60 STR W22, [X23 + 0x10]
	0x03295D64 STR X23, [X19 + 0x40]
	0x03295D68 LDR X8, [X20]
	0x03295D6C LDR X1, [X24]
	0x03295D70 LDRH W9, [X8 + 0x12E]
	0x03295D74 CBZ X9, 0x3295D98
	0x03295D78 LDR X10, [X8 + 0xB0]
	0x03295D7C ADD X10, X10, 0x8
	0x03295D80 LDUR X11, [X10 - 0x8]
	0x03295D84 CMP X11, X1
	0x03295D88 B.EQ 0x3295DA8
	0x03295D8C SUBS X9, X9, 0x1
	0x03295D90 ADD X10, X10, 0x10
	0x03295D94 B.NE 0x3295D80
	0x03295D98 MOV X0, X20
	0x03295D9C MOV W2, W31
	0x03295DA0 BL 0x1C5C788
	0x03295DA4 B 0x3295DB4
	0x03295DA8 LDRSW X9, [X10]
	0x03295DAC ADD X8, X8, X9, 0x4, LSL
	0x03295DB0 ADD X0, X8, 0x138
	0x03295DB4 LDP X8, X1, [X0]
	0x03295DB8 MOV X0, X20
	0x03295DBC BLR X8
	0x03295DC0 LDR X8, [X21]
	0x03295DC4 MOV X1, X0
	0x03295DC8 MOV X0, X21
	0x03295DCC LDR X9, [X8 + 0x308]
	0x03295DD0 LDR X2, [X8 + 0x310]
	0x03295DD4 BLR X9
	0x03295DD8 ADD X2, X31, 0x8
	0x03295DDC MOV X0, X19
	0x03295DE0 MOV X1, X20
	0x03295DE4 BL 0x32953B8
	0x03295DE8 LDR X0, [X31 + 0x8]
	0x03295DEC CBZ X0, 0x3295E1C
	0x03295DF0 LDR X8, [X0]
	0x03295DF4 LDR X9, [X8 + 0x3F8]
	0x03295DF8 LDR X1, [X8 + 0x400]
	0x03295DFC BLR X9
	0x03295E00 BL 0x328E564
	0x03295E04 CBZ X0, 0x3295E30
	0x03295E08 LDR X8, [X0]
	0x03295E0C LDR X9, [X8 + 0x3B8]
	0x03295E10 LDR X1, [X8 + 0x3C0]
	0x03295E14 BLR X9
	0x03295E18 STR X0, [X19 + 0x18]
	0x03295E1C LDP X20, X19, [X31 + 0x30]
	0x03295E20 LDP X22, X21, [X31 + 0x20]
	0x03295E24 LDP X24, X23, [X31 + 0x10]
	0x03295E28 LDR X30, [X31], #0x40
	0x03295E2C RET
	0x03295E30 BL 0x1C16F20
	0x03295E34 STR X30, [X31 - 0x30]!
	0x03295E38 STP X22, X21, [X31 + 0x10]
	0x03295E3C STP X20, X19, [X31 + 0x20]
	0x03295E40 ADRP X20, 0x1147000
	0x03295E44 LDRB W8, [X20 + 0x6F3]
	0x03295E48 MOV X19, X0
	0x03295E4C TBNZ X8, 0x0, 0x3295E88
	0x03295E50 ADRP X0, 0xE8B000
	0x03295E54 LDR X0, [X0 + 0xBA0]
	0x03295E58 BL 0x1C16CF4
	0x03295E5C ADRP X0, 0xE5E000
	0x03295E60 LDR X0, [X0 + 0x618]
	0x03295E64 BL 0x1C16CF4
	0x03295E68 ADRP X0, 0xE66000
	0x03295E6C LDR X0, [X0 + 0x558]
	0x03295E70 BL 0x1C16CF4
	0x03295E74 ADRP X0, 0xE5E000
	0x03295E78 LDR X0, [X0 + 0x9D0]
	0x03295E7C BL 0x1C16CF4
	0x03295E80 MOVZ W8, 0x1
	0x03295E84 STRB W8, [X20 + 0x6F3]
	0x03295E88 LDR X8, [X19 + 0x18]
	0x03295E8C CBZ X8, 0x3295F38
	0x03295E90 ADRP X9, 0xE5E000
	0x03295E94 LDR X9, [X9 + 0x618]
	0x03295E98 LDR W1, [X8 + 0x18]
	0x03295E9C LDR X0, [X9]
	0x03295EA0 BL 0x1C16D6C
	0x03295EA4 LDR X8, [X19 + 0x18]
	0x03295EA8 CBZ X8, 0x3295F68
	0x03295EAC LDR W2, [X8 + 0x18]
	0x03295EB0 ADRP X21, 0xE66000
	0x03295EB4 ADRP X22, 0xE8B000
	0x03295EB8 LDR X21, [X21 + 0x558]
	0x03295EBC LDR X22, [X22 + 0xBA0]
	0x03295EC0 MOV X20, X0
	0x03295EC4 MOV X0, X8
	0x03295EC8 MOV X1, X20
	0x03295ECC MOV X3, X31
	0x03295ED0 BL 0x33A0C7C
	0x03295ED4 LDR X0, [X21]
	0x03295ED8 BL 0x1C16F10
	0x03295EDC MOV X1, X20
	0x03295EE0 MOV X2, X31
	0x03295EE4 MOV X21, X0
	0x03295EE8 BL 0x32E2528
	0x03295EEC MOV X0, X21
	0x03295EF0 BL 0x328E4DC
	0x03295EF4 LDR X8, [X22]
	0x03295EF8 MOV X21, X0
	0x03295EFC MOV X0, X8
	0x03295F00 BL 0x1C16F10
	0x03295F04 MOV X20, X0
	0x03295F08 CBZ X21, 0x3295F40
	0x03295F0C ADRP X8, 0xE5E000
	0x03295F10 LDR X8, [X8 + 0x9D0]
	0x03295F14 MOV X0, X21
	0x03295F18 LDR X22, [X8]
	0x03295F1C MOV X1, X22
	0x03295F20 BL 0x1C16E00
	0x03295F24 MOV X1, X0
	0x03295F28 CBNZ X0, 0x3295F44
	0x03295F2C MOV X0, X21
	0x03295F30 MOV X1, X22
	0x03295F34 BL 0x1C171E0
	0x03295F38 MOV X20, X31
	0x03295F3C B 0x3295F54
	0x03295F40 MOV X1, X31
	0x03295F44 MOV X0, X20
	0x03295F48 MOV X2, X31
	0x03295F4C BL 0x3358360
	0x03295F50 STR X31, [X19 + 0x18]
	0x03295F54 MOV X0, X20
	0x03295F58 LDP X20, X19, [X31 + 0x20]
	0x03295F5C LDP X22, X21, [X31 + 0x10]
	0x03295F60 LDR X30, [X31], #0x30
	0x03295F64 RET
	0x03295F68 BL 0x1C16F20
	0x03295F6C LDR X8, [X0 + 0x10]
	0x03295F70 MOV X2, X1
	0x03295F74 MOV X1, X8
	0x03295F78 B 0x32952B8
	0x03295F7C LDR X8, [X0 + 0x38]
	0x03295F80 MOV X2, X1
	0x03295F84 MOV X1, X8
	0x03295F88 B 0x3294A10
	0x03295F8C STP X30, X21, [X31 - 0x20]!
	0x03295F90 STP X20, X19, [X31 + 0x10]
	0x03295F94 ADRP X21, 0x1147000
	0x03295F98 LDRB W8, [X21 + 0x6F4]
	0x03295F9C MOV X19, X1
	0x03295FA0 MOV X20, X0
	0x03295FA4 TBNZ X8, 0x0, 0x3295FBC
	0x03295FA8 ADRP X0, 0xE5E000
	0x03295FAC LDR X0, [X0 + 0x7D0]
	0x03295FB0 BL 0x1C16CF4
	0x03295FB4 MOVZ W8, 0x1
	0x03295FB8 STRB W8, [X21 + 0x6F4]
	0x03295FBC LDR X8, [X20 + 0x40]
	0x03295FC0 CBZ X8, 0x329601C
	0x03295FC4 CBZ X19, 0x329602C
	0x03295FC8 LDR X9, [X19]
	0x03295FCC LDR W1, [X8 + 0x10]
	0x03295FD0 MOV X0, X19
	0x03295FD4 LDR X8, [X9 + 0x2E8]
	0x03295FD8 LDR X2, [X9 + 0x2F0]
	0x03295FDC BLR X8
	0x03295FE0 CBZ X0, 0x3296020
	0x03295FE4 ADRP X9, 0xE5E000
	0x03295FE8 LDR X9, [X9 + 0x7D0]
	0x03295FEC LDR X8, [X0]
	0x03295FF0 LDR X1, [X9]
	0x03295FF4 LDRB W10, [X8 + 0x130]
	0x03295FF8 LDRB W9, [X1 + 0x130]
	0x03295FFC CMP W10, W9
	0x03296000 B.CC 0x3296018
	0x03296004 LDR X8, [X8 + 0xC8]
	0x03296008 ADD X8, X8, X9, 0x3, LSL
	0x0329600C LDUR X8, [X8 - 0x8]
	0x03296010 CMP X8, X1
	0x03296014 B.EQ 0x3296020
	0x03296018 BL 0x1C171E0
	0x0329601C MOV X0, X31
	0x03296020 LDP X20, X19, [X31 + 0x10]
	0x03296024 LDP X30, X21, [X31], #0x20
	0x03296028 RET
	0x0329602C BL 0x1C16F20
	0x03296030 LDR W0, [X0 + 0x20]
	0x03296034 RET
	0x03296038 STR X30, [X31 - 0x20]!
	0x0329603C STP X20, X19, [X31 + 0x10]
	0x03296040 MOV X19, X1
	0x03296044 MOV X1, X31
	0x03296048 MOV X20, X0
	0x0329604C BL 0x33BDD8C
	0x03296050 STR X19, [X20 + 0x10]
	0x03296054 LDP X20, X19, [X31 + 0x10]
	0x03296058 LDR X30, [X31], #0x20
	0x0329605C RET
	0x03296060 STR X30, [X31 - 0x30]!
	0x03296064 STP X22, X21, [X31 + 0x10]
	0x03296068 STP X20, X19, [X31 + 0x20]
	0x0329606C ADRP X21, 0x1146000
	0x03296070 ADRP X22, 0xE8D000
	0x03296074 LDRB W8, [X21 + 0x6F5]
	0x03296078 LDR X22, [X22 + 0xEB8]
	0x0329607C MOV X19, X1
	0x03296080 MOV X20, X0
	0x03296084 TBNZ X8, 0x0, 0x32960C0
	0x03296088 ADRP X0, 0xE8D000
	0x0329608C LDR X0, [X0 + 0xEB8]
	0x03296090 BL 0x1C16CF4
	0x03296094 ADRP X0, 0xE8E000
	0x03296098 LDR X0, [X0 + 0x5D8]
	0x0329609C BL 0x1C16CF4
	0x032960A0 ADRP X0, 0xE8E000
	0x032960A4 LDR X0, [X0 + 0x3B8]
	0x032960A8 BL 0x1C16CF4
	0x032960AC ADRP X0, 0xE8D000
	0x032960B0 LDR X0, [X0 + 0xE68]
	0x032960B4 BL 0x1C16CF4
	0x032960B8 MOVZ W8, 0x1
	0x032960BC STRB W8, [X21 + 0x6F5]
	0x032960C0 LDR X0, [X22]
	0x032960C4 LDR W8, [X0 + 0xE0]
	0x032960C8 CBNZ W8, 0x32960D0
	0x032960CC BL 0x1C16DFC
	0x032960D0 MOVZ W0, 0x1
	0x032960D4 MOVZ W2, 0x1
	0x032960D8 MOV X1, X19
	0x032960DC MOV W3, W31
	0x032960E0 MOV X4, X31
	0x032960E4 BL 0x3289B90
	0x032960E8 LDR X0, [X20 + 0x10]
	0x032960EC CBZ X0, 0x3296244
	0x032960F0 ADRP X21, 0xE8E000
	0x032960F4 LDR X21, [X21 + 0x5D8]
	0x032960F8 MOVZ W1, 0x1
	0x032960FC MOVZ W3, 0x1
	0x03296100 MOV X2, X19
	0x03296104 MOV W4, W31
	0x03296108 MOV X5, X31
	0x0329610C BL 0x3289D34
	0x03296110 LDR X1, [X21]
	0x03296114 MOV X0, X19
	0x03296118 BL 0x1C16E00
	0x0329611C CBZ X0, 0x3296144
	0x03296120 CBZ X19, 0x32961BC
	0x03296124 LDR X21, [X21]
	0x03296128 MOV X0, X19
	0x0329612C MOV X1, X21
	0x03296130 BL 0x1C16E00
	0x03296134 CBNZ X0, 0x32961C0
	0x03296138 MOV X0, X19
	0x0329613C MOV X1, X21
	0x03296140 BL 0x1C171E0
	0x03296144 ADRP X8, 0xE8D000
	0x03296148 LDR X8, [X8 + 0xE68]
	0x0329614C LDR X0, [X8]
	0x03296150 LDR W8, [X0 + 0xE0]
	0x03296154 CBNZ W8, 0x329615C
	0x03296158 BL 0x1C16DFC
	0x0329615C MOV X0, X19
	0x03296160 MOV X1, X31
	0x03296164 BL 0x3282518
	0x03296168 CBZ X0, 0x3296244
	0x0329616C LDR X21, [X0 + 0x18]
	0x03296170 CBZ X21, 0x3296244
	0x03296174 ADRP X10, 0xE8E000
	0x03296178 LDR X8, [X21]
	0x0329617C LDR X10, [X10 + 0x3B8]
	0x03296180 LDRH W9, [X8 + 0x12E]
	0x03296184 LDR X1, [X10]
	0x03296188 CBZ X9, 0x32961AC
	0x0329618C LDR X10, [X8 + 0xB0]
	0x03296190 ADD X10, X10, 0x8
	0x03296194 LDUR X11, [X10 - 0x8]
	0x03296198 CMP X11, X1
	0x0329619C B.EQ 0x32961C8
	0x032961A0 SUBS X9, X9, 0x1
	0x032961A4 ADD X10, X10, 0x10
	0x032961A8 B.NE 0x3296194
	0x032961AC MOV X0, X21
	0x032961B0 MOV W2, W31
	0x032961B4 BL 0x1C5C788

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 NotImplemented "Instruction MRS not yet implemented."
	008 Move X8, [X21+40]
	009 Move X22, 0x1148000
	010 Move X20, X2
	011 Move X19, X1
	012 Move [X31+40], X8
	013 Move W8, [X22+1769]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {125}
	018 Move X0, 0xE61000
	019 Move X0, [X0+2488]
	020 Call 0x1C17CF4
	021 Move X0, 0xE5F000
	022 Move X0, [X0+2904]
	023 Call 0x1C17CF4
	024 Move X0, 0xE5F000
	025 Move X0, [X0+1560]
	026 Call 0x1C17CF4
	027 Move X0, 0xE60000
	028 Move X0, [X0+2520]
	029 Call 0x1C17CF4
	030 Move X0, 0xE90000
	031 Move X0, [X0+2072]
	032 Call 0x1C17CF4
	033 Move X0, 0xE90000
	034 Move X0, [X0+2080]
	035 Call 0x1C17CF4
	036 Move X0, 0xE68000
	037 Move X0, [X0+2264]
	038 Call 0x1C17CF4
	039 Move X0, 0xE61000
	040 Move X0, [X0+368]
	041 Call 0x1C17CF4
	042 Move X0, 0xE60000
	043 Move X0, [X0+2544]
	044 Call 0x1C17CF4
	045 Move X0, 0xE90000
	046 Move X0, [X0+2088]
	047 Call 0x1C17CF4
	048 Move X0, 0xE87000
	049 Move X0, [X0+1520]
	050 Call 0x1C17CF4
	051 Move X0, 0xE90000
	052 Move X0, [X0+2096]
	053 Call 0x1C17CF4
	054 Move X0, 0xE62000
	055 Move X0, [X0+2424]
	056 Call 0x1C17CF4
	057 Move X0, 0xE87000
	058 Move X0, [X0+2080]
	059 Call 0x1C17CF4
	060 Move X0, 0xE63000
	061 Move X0, [X0+1576]
	062 Call 0x1C17CF4
	063 Move X0, 0xE60000
	064 Move X0, [X0+3672]
	065 Call 0x1C17CF4
	066 Move X0, 0xE5F000
	067 Move X0, [X0+1880]
	068 Call 0x1C17CF4
	069 Move X0, 0xE90000
	070 Move X0, [X0+2104]
	071 Call 0x1C17CF4
	072 Move X0, 0xE61000
	073 Move X0, [X0+2656]
	074 Call 0x1C17CF4
	075 Move X0, 0xE88000
	076 Move X0, [X0+3872]
	077 Call 0x1C17CF4
	078 Move X0, 0xE8F000
	079 Move X0, [X0+3688]
	080 Call 0x1C17CF4
	081 Move X0, 0xE5F000
	082 Move X0, [X0+3824]
	083 Call 0x1C17CF4
	084 Move X0, 0xE8E000
	085 Move X0, [X0+1800]
	086 Call 0x1C17CF4
	087 Move X0, 0xE88000
	088 Move X0, [X0+1712]
	089 Call 0x1C17CF4
	090 Move X0, 0xE5F000
	091 Move X0, [X0+1592]
	092 Call 0x1C17CF4
	093 Move X0, 0xE5F000
	094 Move X0, [X0+2704]
	095 Call 0x1C17CF4
	096 Move X0, 0xE61000
	097 Move X0, [X0+632]
	098 Call 0x1C17CF4
	099 Move X0, 0xE61000
	100 Move X0, [X0+1392]
	101 Call 0x1C17CF4
	102 Move X0, 0xE5F000
	103 Move X0, [X0+1728]
	104 Call 0x1C17CF4
	105 Move X0, 0xE8F000
	106 Move X0, [X0+2256]
	107 Call 0x1C17CF4
	108 Move X0, 0xE64000
	109 Move X0, [X0+1624]
	110 Call 0x1C17CF4
	111 Move X0, 0xE88000
	112 Move X0, [X0+3336]
	113 Call 0x1C17CF4
	114 Move X0, 0xE67000
	115 Move X0, [X0+1824]
	116 Call 0x1C17CF4
	117 Move X0, 0xE67000
	118 Move X0, [X0+1384]
	119 Call 0x1C17CF4
	120 Move X0, 0xE60000
	121 Move X0, [X0+1880]
	122 Call 0x1C17CF4
	123 Move W8, 1
	124 Move [X22+1769], W8
	125 Move [X31+8], X31
	126 Compare X19, 0
	127 JumpIfEqual {182}
	128 Move X9, 0xE90000
	129 Move X9, [X9+2072]
	130 Move X8, [X19]
	131 Move X10, [X9]
	132 Move W9, [X8+304]
	133 Move W11, [X10+304]
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move X12, [X8+200]
	136 Add X11, X12, X11
	137 NotImplemented "Instruction LDUR not yet implemented."
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X10, 0xE90000
	140 Move X10, [X10+2080]
	141 Move X10, [X10]
	142 Move W11, [X10+304]
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move X12, [X8+200]
	145 Add X11, X12, X11
	146 NotImplemented "Instruction LDUR not yet implemented."
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move X10, 0xE5F000
	149 Move X10, [X10+3824]
	150 Move X10, [X10]
	151 Move W11, [X10+304]
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move X8, [X8+200]
	154 Add X8, X8, X11
	155 NotImplemented "Instruction LDUR not yet implemented."
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Move X0, X19
	158 Move X1, X31
	159 Call "il2cpp_vm_object_is_inst", X0
	160 Move X8, 0xE5F000
	161 Move X8, [X8+1728]
	162 Move X20, X0
	163 Move X8, [X8]
	164 Move W9, [X8+224]
	165 Compare W9, 0
	166 JumpIfNotEqual {169}
	167 Move X0, X8
	168 Call 0x1C17DFC
	169 Move X0, X20
	170 Move X1, X31
	171 Call Type.GetTypeCode, X0
	172 Subtract W8, W0, 3
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Move X9, -40886272
	175 Add X9, X9, 1216
	176 NotImplemented "Instruction ADR not yet implemented."
	177 NotImplemented "Instruction LDRH not yet implemented."
	178 Add X10, X10, X11
	179 CallNoReturn X10
	180 Move X20, 0xE5F000
	181 Move X20, [X20+2904]
	182 Move X20, X31
	183 Compare X20, 0
	184 JumpIfEqual {455}
	185 Move X8, [X20]
	186 Move W1, [X19+16]
	187 Move X0, X20
	188 Move X9, [X8+744]
	189 Move X2, [X8+752]
	190 NotImplemented "Instruction BLR not yet implemented."
	191 Move X0, [X19+16]
	192 Compare X0, 0
	193 JumpIfEqual {455}
	194 Move X2, [X19+32]
	195 Move W1, [X19+24]
	196 Move X3, X31
	197 Call ObjRef.DeserializeInTheCurrentDomain, X0, X1, X2
	198 Move X8, 0xE8F000
	199 Move X8, [X8+3688]
	200 Move X19, X0
	201 Move X8, [X8]
	202 Move W9, [X8+224]
	203 Compare W9, 0
	204 JumpIfNotEqual {207}
	205 Move X0, X8
	206 Call 0x1C17DFC
	207 Move X0, X19
	208 Move X1, X31
	209 Call RemotingServices.Unmarshal, X0
	210 Move X0, X19
	211 Move X1, X31
	212 Call "il2cpp_vm_object_is_inst", X0
	213 Compare X0, 0
	214 JumpIfEqual {455}
	215 Move X8, [X0]
	216 Move X9, [X8+1064]
	217 Move X1, [X8+1072]
	218 NotImplemented "Instruction BLR not yet implemented."
	219 Move X8, 0xE5F000
	220 Move X8, [X8+1728]
	221 Move X20, X0
	222 Move X8, [X8]
	223 Move W9, [X8+224]
	224 Compare W9, 0
	225 JumpIfNotEqual {228}
	226 Move X0, X8
	227 Call 0x1C17DFC
	228 Move X0, X20
	229 Move X1, X31
	230 Call Type.GetTypeCode, X0
	231 Subtract W8, W0, 3
	232 NotImplemented "Instruction CMP not yet implemented."
	233 Move X9, 0xC60000
	234 Add X9, X9, 1912
	235 Move X20, [X9]
	236 Move X0, X19
	237 Move X1, X31
	238 Call Array.get_Length, X0
	239 Move X8, [X20]
	240 Move W1, W0
	241 Move X0, X8
	242 Call 0x1C17D6C
	243 Move X20, X0
	244 Move X0, X19
	245 Move X1, X20
	246 Move W2, W31
	247 Move X3, X31
	248 Call Array.CopyTo, X0, X1, X2
	249 Move X20, 0xE5F000
	250 Move X20, [X20+2704]
	251 Move X8, [X19]
	252 Move X1, [X20]
	253 Move X8, [X8+64]
	254 Move X9, [X1+64]
	255 NotImplemented "Instruction CMP not yet implemented."
	256 Move X0, X19
	257 Call 0x1C17E08
	258 Move V0, [X0]
	259 Move X0, [X20]
	260 Move [X31+16], S0
	261 Move X20, 0xE60000
	262 Move X20, [X20+2544]
	263 Move X8, [X19]
	264 Move X1, [X20]
	265 Move X8, [X8+64]
	266 Move X9, [X1+64]
	267 NotImplemented "Instruction CMP not yet implemented."
	268 Move X0, X19
	269 Call 0x1C17E08
	270 Move X8, [X0]
	271 Move X0, [X20]
	272 Move [X31+8], X8
	273 Move W8, [X0+224]
	274 Compare W8, 0
	275 JumpIfNotEqual {277}
	276 Call 0x1C17DFC
	277 Add X0, X31, 8
	278 Move X1, X31
	279 Call DateTime.get_Ticks, X0
	280 Move X1, X0
	281 Add X0, X31, 16
	282 Move X2, X31
	283 Move [X31+16], X31
	284 Call DateTime..ctor, X0, X1
	285 Move X8, [X31+16]
	286 Move X0, [X20]
	287 Add X1, X31, 0
	288 Move [X31], X8
	289 Move X20, 0xE61000
	290 Move X20, [X20+368]
	291 Move X20, 0xE88000
	292 Move X20, [X20+1712]
	293 Move X20, 0xE64000
	294 Move X20, [X20+1624]
	295 Move X20, 0xE5F000
	296 Move X20, [X20+1880]
	297 Move X20, 0xE67000
	298 Move X20, [X20+1824]
	299 Move X8, [X19]
	300 Move X1, [X20]
	301 Move X8, [X8+64]
	302 Move X9, [X1+64]
	303 NotImplemented "Instruction CMP not yet implemented."
	304 Move X0, X19
	305 Call 0x1C17E08
	306 Move W8, [X0]
	307 Move X0, [X20]
	308 Move [X31+16], W8
	309 Move X20, 0xE62000
	310 Move X20, [X20+2424]
	311 Move X8, [X19]
	312 Move X1, [X20]
	313 Move X8, [X8+64]
	314 Move X9, [X1+64]
	315 NotImplemented "Instruction CMP not yet implemented."
	316 Move X0, X19
	317 Call 0x1C17E08
	318 Move V0, [X0]
	319 Move X0, [X20]
	320 Move [X31+16], D0
	321 Move X20, 0xE87000
	322 Move X20, [X20+1520]
	323 Move X8, [X19]
	324 Move X1, [X20]
	325 Move X8, [X8+64]
	326 Move X9, [X1+64]
	327 NotImplemented "Instruction CMP not yet implemented."
	328 Move X0, X19
	329 Call 0x1C17E08
	330 Move V0, [X0]
	331 Move X0, [X20]
	332 Move [X31+1], V0
	333 Move X20, 0xE61000
	334 Move X20, [X20+1392]
	335 Move X8, [X19]
	336 Move X9, [X20]
	337 NotImplemented "Instruction CMP not yet implemented."
	338 Move X20, 0xE88000
	339 Move X20, [X20+3872]
	340 Move X9, [X20]
	341 NotImplemented "Instruction CMP not yet implemented."
	342 Move X0, X19
	343 Move X1, X31
	344 Call "il2cpp_vm_object_is_inst", X0
	345 Move X20, X0
	346 Move X0, 0xE90000
	347 Move X0, [X0+2112]
	348 Call 0x1C17D08
	349 Move X19, X0
	350 Move X21, X31
	351 Compare X20, 0
	352 JumpIfEqual {359}
	353 Move X8, [X20]
	354 Move X0, X20
	355 Move X9, [X8+360]
	356 Move X1, [X8+368]
	357 NotImplemented "Instruction BLR not yet implemented."
	358 Move X21, X0
	359 Move X0, 0xE90000
	360 Move X0, [X0+2120]
	361 Call 0x1C17D08
	362 Move X2, X0
	363 Move X0, X19
	364 Move X1, X21
	365 Move X3, X31
	366 Call String.Concat, X0, X1, X2
	367 Move X19, X0
	368 Move X0, 0xE5E000
	369 Move X0, [X0+2880]
	370 Call 0x1C17D08
	371 Call 0x1C17F10
	372 Move X1, X19
	373 Move X2, X31
	374 Move X20, X0
	375 Call NotSupportedException..ctor, X0, X1
	376 Move X0, 0xE8F000
	377 Move X0, [X0+2128]
	378 Call 0x1C17D08
	379 Move X1, X0
	380 Move X0, X20
	381 Call 0x1C17DEC
	382 Move X20, 0xE5F000
	383 Move X20, [X20+2520]
	384 Move X8, [X19]
	385 Move X1, [X20]
	386 Move X8, [X8+64]
	387 Move X9, [X1+64]
	388 NotImplemented "Instruction CMP not yet implemented."
	389 Move X0, X19
	390 Call 0x1C17E08
	391 Move W8, [X0]
	392 Move X0, [X20]
	393 Move [X31+16], W8
	394 Move X20, 0xE62000
	395 Move X20, [X20+1576]
	396 Move X8, [X19]
	397 Move X1, [X20]
	398 Move X8, [X8+64]
	399 Move X9, [X1+64]
	400 NotImplemented "Instruction CMP not yet implemented."
	401 Move X0, X19
	402 Call 0x1C17E08
	403 NotImplemented "Instruction LDRH not yet implemented."
	404 Move X0, [X20]
	405 NotImplemented "Instruction STRH not yet implemented."
	406 Move X20, 0xE60000
	407 Move X20, [X20+2656]
	408 Move X20, 0xE5F000
	409 Move X20, [X20+1880]
	410 Move X8, [X19]
	411 Move X1, [X20]
	412 Move X8, [X8+64]
	413 Move X9, [X1+64]
	414 NotImplemented "Instruction CMP not yet implemented."
	415 Move X0, X19
	416 Call 0x1C17E08
	417 Move X8, [X0]
	418 Move X0, [X20]
	419 Move [X31+16], X8
	420 Add X1, X31, 16
	421 Call 0x1C17E04
	422 Move X20, X0
	423 Move X8, [X21+40]
	424 Move X9, [X31+40]
	425 NotImplemented "Instruction CMP not yet implemented."
	426 Move X0, X20
	427 Move X20, [X31+80]
	428 Move X19, [X31+88]
	429 Move X22, [X31+64]
	430 Move X21, [X31+72]
	431 Move X30, [X31+48]
	432 Add X31, X31, 96
	433 Return X0
	434 Move X8, 0xE60000
	435 Move X8, [X8+632]
	436 Move X1, [X8]
	437 Move X8, [X19]
	438 NotImplemented "Instruction CMP not yet implemented."
	439 Move X0, X19
	440 Move X1, X31
	441 Call String.Copy, X0
	442 Move X0, X19
	443 Call 0x1C17E08
	444 Move X8, X0
	445 Move X0, [X20]
	446 Move X19, [X8]
	447 Move W9, [X0+224]
	448 Compare W9, 0
	449 JumpIfNotEqual {452}
	450 Call 0x1C17DFC
	451 Move X0, [X20]
	452 Move [X31+16], X19
	453 Move X0, X19
	454 Call 0x1C181E0
	455 Call 0x1C17F20
	456 Move X0, 0xE5E000
	457 Move X0, [X0+2880]
	458 Call 0x1C17D08
	459 Call 0x1C17F10
	460 Move X1, X31
	461 Move X19, X0
	462 Call NotSupportedException..ctor, X0
	463 Move X0, 0xE8F000
	464 Move X0, [X0+2128]
	465 Call 0x1C17D08
	466 Move X1, X0
	467 Move X0, X19
	468 Call 0x1C17DEC
	469 Call 0x3EB2B20

Method: System.Object[] MarshalArguments(System.Object[] arguments, ref System.Collections.ArrayList args)

Disassembly:
	0x032961B8 B 0x32961D4
	0x032961BC MOV X0, X31
	0x032961C0 BL 0x328E9F4
	0x032961C4 B 0x32961E4
	0x032961C8 LDRSW X9, [X10]
	0x032961CC ADD X8, X8, X9, 0x4, LSL
	0x032961D0 ADD X0, X8, 0x138
	0x032961D4 LDP X8, X2, [X0]
	0x032961D8 MOV X0, X21
	0x032961DC MOV X1, X19
	0x032961E0 BLR X8
	0x032961E4 MOV X21, X0
	0x032961E8 LDR X0, [X22]
	0x032961EC LDR W8, [X0 + 0xE0]
	0x032961F0 CBNZ W8, 0x32961F8
	0x032961F4 BL 0x1C16DFC
	0x032961F8 MOVZ W2, 0x1
	0x032961FC MOV W0, W31
	0x03296200 MOV X1, X19
	0x03296204 MOV W3, W31
	0x03296208 MOV X4, X31
	0x0329620C BL 0x3289B90
	0x03296210 LDR X0, [X20 + 0x10]
	0x03296214 CBZ X0, 0x3296244
	0x03296218 MOVZ W3, 0x1
	0x0329621C MOV W1, W31
	0x03296220 MOV X2, X19
	0x03296224 MOV W4, W31
	0x03296228 MOV X5, X31
	0x0329622C BL 0x3289D34
	0x03296230 MOV X0, X21
	0x03296234 LDP X20, X19, [X31 + 0x20]
	0x03296238 LDP X22, X21, [X31 + 0x10]
	0x0329623C LDR X30, [X31], #0x30
	0x03296240 RET
	0x03296244 BL 0x1C16F20
	0x03296248 STR X30, [X31 - 0x40]!
	0x0329624C STP X24, X23, [X31 + 0x10]
	0x03296250 STP X22, X21, [X31 + 0x20]
	0x03296254 STP X20, X19, [X31 + 0x30]
	0x03296258 ADRP X22, 0x1146000
	0x0329625C LDRB W8, [X22 + 0x6F6]
	0x03296260 MOV X21, X2
	0x03296264 MOV X19, X1
	0x03296268 MOV X20, X0
	0x0329626C TBNZ X8, 0x0, 0x32962A8
	0x03296270 ADRP X0, 0xE8E000
	0x03296274 LDR X0, [X0 + 0x870]
	0x03296278 BL 0x1C16CF4
	0x0329627C ADRP X0, 0xE8D000
	0x03296280 LDR X0, [X0 + 0xEB8]
	0x03296284 BL 0x1C16CF4
	0x03296288 ADRP X0, 0xE8E000
	0x0329628C LDR X0, [X0 + 0x3B8]
	0x03296290 BL 0x1C16CF4
	0x03296294 ADRP X0, 0xE8D000
	0x03296298 LDR X0, [X0 + 0xE68]
	0x0329629C BL 0x1C16CF4
	0x032962A0 MOVZ W8, 0x1
	0x032962A4 STRB W8, [X22 + 0x6F6]
	0x032962A8 LDR X0, [X20 + 0x10]
	0x032962AC CBZ X0, 0x3296494
	0x032962B0 ADRP X23, 0xE8D000
	0x032962B4 LDR X23, [X23 + 0xEB8]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x1147000
	011 Move W8, [X21+1770]
	012 Move X19, X2
	013 Move X20, X1
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xE5E000
	019 Move X0, [X0+2512]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+1770], W8
	023 Compare X20, 0
	024 JumpIfEqual {73}
	025 Move X8, 0xE5E000
	026 Move X8, [X8+2512]
	027 Move W1, [X20+24]
	028 Move X0, [X8]
	029 Call 0x1C17D6C
	030 Move X8, [X20+24]
	031 Move X21, X0
	032 NotImplemented "Instruction CMP not yet implemented."
	033 And X8, X8, 0
	034 Compare X8, 0
	035 JumpIfEqual {61}
	036 Move X23, X31
	037 Subtract X24, X8, 1
	038 Add X25, X21, 32
	039 Add X26, X20, 32
	040 Move X1, [X26]
	041 Move X2, X19
	042 Call CADMessageBase.MarshalArgument, X0, X1, X2
	043 Compare X21, 0
	044 JumpIfEqual {73}
	045 Move X22, X0
	046 Compare X0, 0
	047 JumpIfEqual {54}
	048 Move X8, [X21]
	049 Move X0, X22
	050 Move X1, [X8+64]
	051 Call 0x1C17E00
	052 Compare X0, 0
	053 JumpIfEqual {74}
	054 Move W8, [X21+24]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move [X25], X22
	058 Move W8, [X20+24]
	059 Add X23, X23, 1
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Call 0x1C17F28
	062 Move X0, X21
	063 Move X20, [X31+64]
	064 Move X19, [X31+72]
	065 Move X22, [X31+48]
	066 Move X21, [X31+56]
	067 Move X24, [X31+32]
	068 Move X23, [X31+40]
	069 Move X26, [X31+16]
	070 Move X25, [X31+24]
	071 Move X30, [X31+80]
	072 Return X0
	073 Call 0x1C17F20
	074 Call 0x1C17F44
	075 Move X1, X31
	076 Call 0x1C17DEC

Method: System.Object[] UnmarshalArguments(System.Object[] arguments, System.Collections.ArrayList args)

Disassembly:
	0x032962B8 MOV X1, X31
	0x032962BC BL 0x3289DB8
	0x032962C0 TBNZ X0, 0x0, 0x32962E0
	0x032962C4 LDR X0, [X23]
	0x032962C8 LDR W8, [X0 + 0xE0]
	0x032962CC CBNZ W8, 0x32962D4
	0x032962D0 BL 0x1C16DFC
	0x032962D4 MOV X0, X31
	0x032962D8 BL 0x3289C90
	0x032962DC TBZ X0, 0x0, 0x3296354
	0x032962E0 LDR X0, [X23]
	0x032962E4 LDR W8, [X0 + 0xE0]
	0x032962E8 CBNZ W8, 0x32962F0
	0x032962EC BL 0x1C16DFC
	0x032962F0 MOVZ W0, 0x1
	0x032962F4 MOVZ W2, 0x1
	0x032962F8 MOVZ W3, 0x1
	0x032962FC MOV X1, X19
	0x03296300 MOV X4, X31
	0x03296304 BL 0x3289B90
	0x03296308 LDR X0, [X20 + 0x10]
	0x0329630C CBZ X0, 0x3296494
	0x03296310 MOVZ W1, 0x1
	0x03296314 MOVZ W3, 0x1
	0x03296318 MOVZ W4, 0x1
	0x0329631C MOV X2, X19
	0x03296320 MOV X5, X31
	0x03296324 BL 0x3289D34
	0x03296328 CBZ X21, 0x3296354
	0x0329632C ADRP X8, 0xE8E000
	0x03296330 LDR X24, [X20 + 0x10]
	0x03296334 LDR X8, [X8 + 0x870]
	0x03296338 LDR X0, [X8]
	0x0329633C BL 0x1C16F10
	0x03296340 MOV X1, X31
	0x03296344 MOV X22, X0
	0x03296348 BL 0x33BDD8C
	0x0329634C STP X21, X24, [X22 + 0x10]
	0x03296350 MOV X21, X22
	0x03296354 ADRP X8, 0xE8D000
	0x03296358 LDR X8, [X8 + 0xE68]
	0x0329635C LDR X0, [X8]
	0x03296360 LDR W8, [X0 + 0xE0]
	0x03296364 CBNZ W8, 0x329636C
	0x03296368 BL 0x1C16DFC
	0x0329636C MOV X0, X19
	0x03296370 MOV X1, X31
	0x03296374 BL 0x3282518
	0x03296378 CBZ X0, 0x3296494
	0x0329637C LDR X22, [X0 + 0x18]
	0x03296380 CBZ X22, 0x3296494
	0x03296384 ADRP X10, 0xE8E000
	0x03296388 LDR X8, [X22]
	0x0329638C LDR X10, [X10 + 0x3B8]
	0x03296390 LDRH W9, [X8 + 0x12E]
	0x03296394 LDR X1, [X10]
	0x03296398 CBZ X9, 0x32963BC
	0x0329639C LDR X10, [X8 + 0xB0]
	0x032963A0 ADD X10, X10, 0x8
	0x032963A4 LDUR X11, [X10 - 0x8]
	0x032963A8 CMP X11, X1
	0x032963AC B.EQ 0x32963CC
	0x032963B0 SUBS X9, X9, 0x1
	0x032963B4 ADD X10, X10, 0x10

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x1147000
	011 Move W8, [X21+1771]
	012 Move X19, X2
	013 Move X20, X1
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xE5E000
	019 Move X0, [X0+2512]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+1771], W8
	023 Compare X20, 0
	024 JumpIfEqual {73}
	025 Move X8, 0xE5E000
	026 Move X8, [X8+2512]
	027 Move W1, [X20+24]
	028 Move X0, [X8]
	029 Call 0x1C17D6C
	030 Move X8, [X20+24]
	031 Move X21, X0
	032 NotImplemented "Instruction CMP not yet implemented."
	033 And X8, X8, 0
	034 Compare X8, 0
	035 JumpIfEqual {61}
	036 Move X23, X31
	037 Subtract X24, X8, 1
	038 Add X25, X21, 32
	039 Add X26, X20, 32
	040 Move X1, [X26]
	041 Move X2, X19
	042 Call CADMessageBase.UnmarshalArgument, X0, X1, X2
	043 Compare X21, 0
	044 JumpIfEqual {73}
	045 Move X22, X0
	046 Compare X0, 0
	047 JumpIfEqual {54}
	048 Move X8, [X21]
	049 Move X0, X22
	050 Move X1, [X8+64]
	051 Call 0x1C17E00
	052 Compare X0, 0
	053 JumpIfEqual {74}
	054 Move W8, [X21+24]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move [X25], X22
	058 Move W8, [X20+24]
	059 Add X23, X23, 1
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Call 0x1C17F28
	062 Move X0, X21
	063 Move X20, [X31+64]
	064 Move X19, [X31+72]
	065 Move X22, [X31+48]
	066 Move X21, [X31+56]
	067 Move X24, [X31+32]
	068 Move X23, [X31+40]
	069 Move X26, [X31+16]
	070 Move X25, [X31+24]
	071 Move X30, [X31+80]
	072 Return X0
	073 Call 0x1C17F20
	074 Call 0x1C17F44
	075 Move X1, X31
	076 Call 0x1C17DEC

Method: System.Void SaveLogicalCallContext(System.Runtime.Remoting.Messaging.IMethodMessage msg, ref System.Collections.ArrayList serializeList)

Disassembly:
	0x032963B8 B.NE 0x32963A4
	0x032963BC MOVZ W2, 0x1
	0x032963C0 MOV X0, X22
	0x032963C4 BL 0x1C5C788
	0x032963C8 B 0x32963DC
	0x032963CC LDR W9, [X10]
	0x032963D0 ADD W9, W9, 0x1
	0x032963D4 ADD X8, X8, W9, 0x4, SXTW
	0x032963D8 ADD X0, X8, 0x138
	0x032963DC LDP X8, X3, [X0]
	0x032963E0 MOV X0, X22
	0x032963E4 MOV X1, X19
	0x032963E8 MOV X2, X21
	0x032963EC BLR X8
	0x032963F0 CMP X21, 0x0
	0x032963F4 MOV X22, X0
	0x032963F8 CSEL X24, X0, X31, EQ
	0x032963FC CBNZ X21, 0x329647C
	0x03296400 LDR X0, [X20 + 0x10]
	0x03296404 CBZ X0, 0x3296494
	0x03296408 MOV X1, X31
	0x0329640C BL 0x3289DB8
	0x03296410 TBNZ X0, 0x0, 0x3296434
	0x03296414 LDR X0, [X23]
	0x03296418 LDR W8, [X0 + 0xE0]
	0x0329641C CBNZ W8, 0x3296424
	0x03296420 BL 0x1C16DFC
	0x03296424 MOV X0, X31
	0x03296428 BL 0x3289C90
	0x0329642C MOV X22, X24
	0x03296430 TBZ X0, 0x0, 0x329647C
	0x03296434 LDR X0, [X23]
	0x03296438 LDR W8, [X0 + 0xE0]
	0x0329643C CBNZ W8, 0x3296444
	0x03296440 BL 0x1C16DFC
	0x03296444 MOVZ W2, 0x1
	0x03296448 MOVZ W3, 0x1
	0x0329644C MOV W0, W31
	0x03296450 MOV X1, X19
	0x03296454 MOV X4, X31
	0x03296458 BL 0x3289B90
	0x0329645C LDR X0, [X20 + 0x10]
	0x03296460 CBZ X0, 0x3296494
	0x03296464 MOVZ W3, 0x1
	0x03296468 MOVZ W4, 0x1
	0x0329646C MOV W1, W31
	0x03296470 MOV X2, X19
	0x03296474 MOV X5, X31
	0x03296478 BL 0x3289D34
	0x0329647C MOV X0, X22
	0x03296480 LDP X20, X19, [X31 + 0x30]
	0x03296484 LDP X22, X21, [X31 + 0x20]
	0x03296488 LDP X24, X23, [X31 + 0x10]
	0x0329648C LDR X30, [X31], #0x40
	0x03296490 RET
	0x03296494 BL 0x1C16F20
	0x03296498 STP X30, X21, [X31 - 0x20]!
	0x0329649C STP X20, X19, [X31 + 0x10]
	0x032964A0 MOV X20, X1
	0x032964A4 MOV X1, X31
	0x032964A8 MOV X19, X2
	0x032964AC MOV X21, X0
	0x032964B0 BL 0x33BDD8C
	0x032964B4 STP X19, X20, [X21 + 0x10]
	0x032964B8 LDP X20, X19, [X31 + 0x10]
	0x032964BC LDP X30, X21, [X31], #0x20
	0x032964C0 RET
	0x032964C4 STR X30, [X31 - 0x30]!
	0x032964C8 STP X22, X21, [X31 + 0x10]
	0x032964CC STP X20, X19, [X31 + 0x20]
	0x032964D0 ADRP X21, 0x1146000
	0x032964D4 ADRP X22, 0xE8D000
	0x032964D8 LDRB W8, [X21 + 0x6F7]
	0x032964DC LDR X22, [X22 + 0xEB8]
	0x032964E0 MOV X19, X1
	0x032964E4 MOV X20, X0
	0x032964E8 TBNZ X8, 0x0, 0x329650C
	0x032964EC ADRP X0, 0xE8D000
	0x032964F0 LDR X0, [X0 + 0xEB8]
	0x032964F4 BL 0x1C16CF4
	0x032964F8 ADRP X0, 0xE8E000
	0x032964FC LDR X0, [X0 + 0x3B8]
	0x03296500 BL 0x1C16CF4
	0x03296504 MOVZ W8, 0x1
	0x03296508 STRB W8, [X21 + 0x6F7]
	0x0329650C LDR X0, [X22]
	0x03296510 LDR W8, [X0 + 0xE0]
	0x03296514 CBNZ W8, 0x329651C
	0x03296518 BL 0x1C16DFC
	0x0329651C MOVZ W2, 0x1
	0x03296520 MOVZ W3, 0x1
	0x03296524 MOV W0, W31
	0x03296528 MOV X1, X19
	0x0329652C MOV X4, X31
	0x03296530 BL 0x3289B90
	0x03296534 LDR X0, [X20 + 0x18]
	0x03296538 CBZ X0, 0x32965CC
	0x0329653C MOVZ W3, 0x1
	0x03296540 MOVZ W4, 0x1
	0x03296544 MOV W1, W31
	0x03296548 MOV X2, X19
	0x0329654C MOV X5, X31
	0x03296550 BL 0x3289D34
	0x03296554 LDR X20, [X20 + 0x10]
	0x03296558 CBZ X20, 0x32965CC
	0x0329655C ADRP X10, 0xE8E000
	0x03296560 LDR X8, [X20]
	0x03296564 LDR X10, [X10 + 0x3B8]
	0x03296568 LDRH W9, [X8 + 0x12E]
	0x0329656C LDR X1, [X10]
	0x03296570 CBZ X9, 0x3296594
	0x03296574 LDR X10, [X8 + 0xB0]
	0x03296578 ADD X10, X10, 0x8
	0x0329657C LDUR X11, [X10 - 0x8]
	0x03296580 CMP X11, X1
	0x03296584 B.EQ 0x32965A4
	0x03296588 SUBS X9, X9, 0x1
	0x0329658C ADD X10, X10, 0x10
	0x03296590 B.NE 0x329657C
	0x03296594 MOV X0, X20
	0x03296598 MOV W2, W31
	0x0329659C BL 0x1C5C788
	0x032965A0 B 0x32965B0
	0x032965A4 LDRSW X9, [X10]
	0x032965A8 ADD X8, X8, X9, 0x4, LSL
	0x032965AC ADD X0, X8, 0x138
	0x032965B0 LDP X3, X2, [X0]
	0x032965B4 MOV X0, X20
	0x032965B8 MOV X1, X19
	0x032965BC LDP X20, X19, [X31 + 0x20]
	0x032965C0 LDP X22, X21, [X31 + 0x10]
	0x032965C4 LDR X30, [X31], #0x30
	0x032965C8 BR X3
	0x032965CC BL 0x1C16F20
	0x032965D0 STP X30, X19, [X31 - 0x10]!
	0x032965D4 ADRP X0, 0xE5D000
	0x032965D8 LDR X0, [X0 + 0xB40]
	0x032965DC BL 0x1C16D08
	0x032965E0 BL 0x1C16F10
	0x032965E4 MOV X1, X31
	0x032965E8 MOV X19, X0
	0x032965EC BL 0x3380310

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x1147000
	009 Move W8, [X22+1772]
	010 Move X20, X2
	011 Move X19, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0xE8B000
	018 Move X0, [X0+2976]
	019 Call 0x1C17CF4
	020 Move X0, 0xE8F000
	021 Move X0, [X0+2072]
	022 Call 0x1C17CF4
	023 Move X0, 0xE8F000
	024 Move X0, [X0+624]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+1772], W8
	028 Compare X19, 0
	029 JumpIfEqual {160}
	030 Move X24, 0xE8F000
	031 Move X8, [X19]
	032 Move X24, [X24+624]
	033 NotImplemented "Instruction LDRH not yet implemented."
	034 Move X1, [X24]
	035 Compare X9, 0
	036 JumpIfEqual {43}
	037 Move X10, [X8+176]
	038 Add X10, X10, 8
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Subtract X9, X9, 1
	042 Add X10, X10, 16
	043 Move W2, 2
	044 Move X0, X19
	045 Call 0x1C5D788
	046 Move W9, [X10]
	047 Add W9, W9, 2
	048 Add X8, X8, W9
	049 Add X0, X8, 312
	050 Move X8, [X0]
	051 Move X1, [X0+8]
	052 Move X0, X19
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Compare X0, 0
	055 JumpIfEqual {129}
	056 Move X8, [X19]
	057 Move X1, [X24]
	058 NotImplemented "Instruction LDRH not yet implemented."
	059 Compare X9, 0
	060 JumpIfEqual {67}
	061 Move X10, [X8+176]
	062 Add X10, X10, 8
	063 NotImplemented "Instruction LDUR not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Subtract X9, X9, 1
	066 Add X10, X10, 16
	067 Move W2, 2
	068 Move X0, X19
	069 Call 0x1C5D788
	070 Move W9, [X10]
	071 Add W9, W9, 2
	072 Add X8, X8, W9
	073 Add X0, X8, 312
	074 Move X8, [X0]
	075 Move X1, [X0+8]
	076 Move X0, X19
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Compare X0, 0
	079 JumpIfEqual {160}
	080 Call LogicalCallContext.get_HasInfo, X0
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfNotEqual {129}
	085 Move X22, [X20]
	086 Compare X22, 0
	087 JumpIfNotEqual {98}
	088 Move X8, 0xE8B000
	089 Move X8, [X8+2976]
	090 Move X0, [X8]
	091 Call 0x1C17F10
	092 Move X1, X31
	093 Move X22, X0
	094 Call ArrayList..ctor, X0
	095 Move [X20], X22
	096 Compare X22, 0
	097 JumpIfEqual {160}
	098 Move X8, [X22]
	099 Move X0, X22
	100 Move X9, [X8+664]
	101 Move X1, [X8+672]
	102 NotImplemented "Instruction BLR not yet implemented."
	103 Move X8, 0xE8F000
	104 Move X8, [X8+2072]
	105 Move W22, W0
	106 Move X8, [X8]
	107 Move X0, X8
	108 Call 0x1C17F10
	109 Move X1, X31
	110 Move X23, X0
	111 Call Object..ctor, X0
	112 Move [X23+16], W22
	113 Move [X21+40], X23
	114 Move X8, [X19]
	115 Move X20, [X20]
	116 Move X1, [X24]
	117 NotImplemented "Instruction LDRH not yet implemented."
	118 Compare X9, 0
	119 JumpIfEqual {126}
	120 Move X10, [X8+176]
	121 Add X10, X10, 8
	122 NotImplemented "Instruction LDUR not yet implemented."
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Subtract X9, X9, 1
	125 Add X10, X10, 16
	126 Move W2, 2
	127 Move X0, X19
	128 Call 0x1C5D788
	129 Move X20, [X31+48]
	130 Move X19, [X31+56]
	131 Move X22, [X31+32]
	132 Move X21, [X31+40]
	133 Move X24, [X31+16]
	134 Move X23, [X31+24]
	135 Move X30, [X31+64]
	136 Return 
	137 Move W9, [X10]
	138 Add W9, W9, 2
	139 Add X8, X8, W9
	140 Add X0, X8, 312
	141 Move X8, [X0]
	142 Move X1, [X0+8]
	143 Move X0, X19
	144 NotImplemented "Instruction BLR not yet implemented."
	145 Compare X20, 0
	146 JumpIfEqual {160}
	147 Move X8, [X20]
	148 Move X1, X0
	149 Move X0, X20
	150 Move X20, [X31+48]
	151 Move X19, [X31+56]
	152 Move X3, [X8+776]
	153 Move X2, [X8+784]
	154 Move X22, [X31+32]
	155 Move X21, [X31+40]
	156 Move X24, [X31+16]
	157 Move X23, [X31+24]
	158 Move X30, [X31+64]
	159 CallNoReturn X3
	160 Call 0x1C17F20

Method: System.Runtime.Remoting.Messaging.LogicalCallContext GetLogicalCallContext(System.Collections.ArrayList args)

Disassembly:
	0x032965F0 ADRP X0, 0xE8E000
	0x032965F4 LDR X0, [X0 + 0x878]
	0x032965F8 BL 0x1C16D08
	0x032965FC MOV X1, X0
	0x03296600 MOV X0, X19
	0x03296604 BL 0x1C16DEC
	0x03296608 MOV X1, X31
	0x0329660C B 0x33BDD8C
	0x03296610 B 0x3296614
	0x03296614 SUB X31, X31, 0x40
	0x03296618 STP X30, X21, [X31 + 0x20]
	0x0329661C STP X20, X19, [X31 + 0x30]
	0x03296620 MOV X20, X1
	0x03296624 MOV X1, X31
	0x03296628 MOV X19, X0
	0x0329662C BL 0x33BDD8C
	0x03296630 LDR X8, [X19]
	0x03296634 MOV X0, X19
	0x03296638 LDR X9, [X8 + 0x2A8]
	0x0329663C LDR X1, [X8 + 0x2B0]
	0x03296640 BLR X9
	0x03296644 CBZ X20, 0x32966BC
	0x03296648 MOV X0, X20
	0x0329664C MOV X1, X31
	0x03296650 BL 0x32A8830
	0x03296654 CBZ X0, 0x32966BC
	0x03296658 LDP W9, W8, [X0 + 0x28]
	0x0329665C MOV X20, X0
	0x03296660 CMP W8, W9
	0x03296664 B.GE 0x32966A8
	0x03296668 MOVZ W21, 0x1
	0x0329666C ADD W8, W8, 0x1
	0x03296670 STR W8, [X20 + 0x2C]
	0x03296674 ADD X8, X31, 0x8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1147000
	006 Move W8, [X21+1773]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xE8F000
	014 Move X0, [X0+880]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1773], W8
	018 Move X8, [X20+40]
	019 Compare X8, 0
	020 JumpIfEqual {37}
	021 Compare X19, 0
	022 JumpIfEqual {43}
	023 Move X9, [X19]
	024 Move W1, [X8+16]
	025 Move X0, X19
	026 Move X8, [X9+744]
	027 Move X2, [X9+752]
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X8, 0xE8F000
	032 Move X8, [X8+880]
	033 Move X1, [X8]
	034 Move X8, [X0]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Call 0x1C181E0
	037 Move X0, X31
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Return X0
	043 Call 0x1C17F20

