Type: System.Runtime.Remoting.Messaging.MethodResponse

Method: System.Void .ctor(System.Exception e, System.Runtime.Remoting.Messaging.IMethodCallMessage msg)

Disassembly:
	0x03299840 BL 0x1C16D08
	0x03299844 MOV X20, X0
	0x03299848 ADRP X0, 0xE8B000
	0x0329984C LDR X0, [X0 + 0x930]
	0x03299850 BL 0x1C16D08
	0x03299854 MOV X22, X0
	0x03299858 CBNZ X21, 0x3299900
	0x0329985C MOV X3, X31
	0x03299860 B 0x3299914
	0x03299864 MOV X0, X20
	0x03299868 BL 0x1C171E0
	0x0329986C LDR X20, [X19 + 0x20]
	0x03299870 MOV X0, X19
	0x03299874 BL 0x3299C0C
	0x03299878 MOV X19, X0
	0x0329987C ADRP X0, 0xE8B000
	0x03299880 LDR X0, [X0 + 0x930]
	0x03299884 BL 0x1C16D08
	0x03299888 MOV X21, X0
	0x0329988C ADRP X0, 0xE8B000
	0x03299890 LDR X0, [X0 + 0x928]
	0x03299894 B 0x32998E8
	0x03299898 ADRP X0, 0xE5B000
	0x0329989C LDR X0, [X0 + 0x610]
	0x032998A0 BL 0x1C16D08
	0x032998A4 MOV X20, X0
	0x032998A8 ADRP X0, 0xE5B000
	0x032998AC LDR X0, [X0 + 0x608]
	0x032998B0 BL 0x1C16D08
	0x032998B4 MOV X2, X0
	0x032998B8 MOV X0, X20
	0x032998BC MOV X1, X21
	0x032998C0 MOV X3, X31
	0x032998C4 BL 0x32274B8
	0x032998C8 MOV X20, X0
	0x032998CC ADRP X0, 0xE8B000
	0x032998D0 LDR X19, [X19 + 0x10]
	0x032998D4 LDR X0, [X0 + 0x948]
	0x032998D8 BL 0x1C16D08
	0x032998DC MOV X21, X0
	0x032998E0 ADRP X0, 0xE8B000
	0x032998E4 LDR X0, [X0 + 0x950]
	0x032998E8 BL 0x1C16D08
	0x032998EC MOV X2, X0
	0x032998F0 MOV X0, X21
	0x032998F4 MOV X1, X20
	0x032998F8 MOV X3, X19
	0x032998FC B 0x3299920
	0x03299900 LDR X8, [X21]
	0x03299904 MOV X0, X21
	0x03299908 LDP X9, X1, [X8 + 0x168]
	0x0329990C BLR X9
	0x03299910 MOV X3, X0
	0x03299914 MOV X0, X22
	0x03299918 MOV X1, X19
	0x0329991C MOV X2, X20
	0x03299920 MOV X4, X31
	0x03299924 BL 0x32277C4
	0x03299928 MOV X19, X0
	0x0329992C ADRP X0, 0xE8A000
	0x03299930 LDR X0, [X0 + 0xD20]
	0x03299934 BL 0x1C16D08
	0x03299938 BL 0x1C16F10
	0x0329993C MOV X1, X19
	0x03299940 MOV X2, X31
	0x03299944 MOV X20, X0
	0x03299948 BL 0x3273098
	0x0329994C ADRP X0, 0xE8B000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1144000
	007 Move W8, [X22+1831]
	008 Move X21, X2
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0xE8C000
	016 Move X0, [X0+624]
	017 Call 0x1C17CF4
	018 Move X0, 0xE5B000
	019 Move X0, [X0+2512]
	020 Call 0x1C17CF4
	021 Move X0, 0xE5D000
	022 Move X0, [X0+632]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+1831], W8
	026 Move X22, 0xE5B000
	027 Move X22, [X22+2512]
	028 Move X0, X19
	029 Move X1, X31
	030 Call Object..ctor, X0
	031 Move [X19+96], X21
	032 Compare X21, 0
	033 JumpIfEqual {50}
	034 Move X10, 0xE8C000
	035 Move X8, [X21]
	036 Move X10, [X10+624]
	037 NotImplemented "Instruction LDRH not yet implemented."
	038 Move X1, [X10]
	039 Compare X9, 0
	040 JumpIfEqual {47}
	041 Move X10, [X8+176]
	042 Add X10, X10, 8
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Subtract X9, X9, 1
	046 Add X10, X10, 16
	047 Move W2, 7
	048 Move X0, X21
	049 Call 0x1C5D788
	050 Move X8, 0xE5D000
	051 Move X8, [X8+632]
	052 Move X8, [X8]
	053 Move X8, [X8+184]
	054 Move X0, [X8]
	055 Move W9, [X10]
	056 Add W9, W9, 7
	057 Add X8, X8, W9
	058 Add X0, X8, 312
	059 Move X8, [X0]
	060 Move X1, [X0+8]
	061 Move X0, X21
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move [X19+24], X0
	064 Move [X19+48], X31
	065 Move [X19+56], X20
	066 Move X0, [X22]
	067 Move W1, W31
	068 Call 0x1C17D6C
	069 Move [X19+88], X0
	070 Move X20, [X31+32]
	071 Move X19, [X31+40]
	072 Move X22, [X31+16]
	073 Move X21, [X31+24]
	074 Move X30, [X31+48]
	075 Return 

Method: System.Void .ctor(System.Object returnValue, System.Object[] outArgs, System.Runtime.Remoting.Messaging.LogicalCallContext callCtx, System.Runtime.Remoting.Messaging.IMethodCallMessage msg)

Disassembly:
	0x0329976C ADRP X0, 0xE8B000
	0x03299770 LDR X0, [X0 + 0x938]
	0x03299774 BL 0x1C16D08
	0x03299778 MOV X2, X0
	0x0329977C MOV X0, X21
	0x03299780 MOV X1, X31
	0x03299784 BL 0x1993444
	0x03299788 LDR X19, [X19 + 0x18]
	0x0329978C MOV X0, X21
	0x03299790 BL 0x19903C0
	0x03299794 MOVZ W1, 0x1
	0x03299798 MOV X0, X21
	0x0329979C MOV X2, X19
	0x032997A0 BL 0x1993444
	0x032997A4 MOV X0, X21
	0x032997A8 BL 0x19903C0
	0x032997AC ADRP X0, 0xE8B000
	0x032997B0 LDR X0, [X0 + 0x940]
	0x032997B4 BL 0x1C16D08
	0x032997B8 MOV X2, X0
	0x032997BC MOVZ W1, 0x2
	0x032997C0 MOV X0, X21
	0x032997C4 BL 0x1993444
	0x032997C8 MOV X0, X20
	0x032997CC BL 0x19903C0
	0x032997D0 LDR X8, [X20]
	0x032997D4 MOV X0, X20
	0x032997D8 LDR X9, [X8 + 0x2E8]
	0x032997DC LDR X1, [X8 + 0x2F0]
	0x032997E0 BLR X9
	0x032997E4 MOV X19, X0
	0x032997E8 MOV X0, X21
	0x032997EC BL 0x19903C0
	0x032997F0 MOVZ W1, 0x3
	0x032997F4 MOV X0, X21
	0x032997F8 MOV X2, X19
	0x032997FC BL 0x1993444
	0x03299800 MOV X0, X21
	0x03299804 BL 0x19903C0
	0x03299808 ADRP X0, 0xE62000
	0x0329980C LDR X0, [X0 + 0x9B0]
	0x03299810 BL 0x1C16D08
	0x03299814 MOV X2, X0
	0x03299818 MOVZ W1, 0x4
	0x0329981C MOV X0, X21
	0x03299820 BL 0x1993444
	0x03299824 MOV X0, X21
	0x03299828 MOV X1, X31
	0x0329982C BL 0x32278CC
	0x03299830 B 0x3299928
	0x03299834 ADRP X0, 0xE8B000
	0x03299838 LDR X19, [X19 + 0x20]
	0x0329983C LDR X0, [X0 + 0x928]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x1144000
	008 Move W8, [X23+1832]
	009 Move X22, X4
	010 Move X19, X2
	011 Move X20, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xE8C000
	018 Move X0, [X0+624]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+1832], W8
	022 Move X0, X21
	023 Move X1, X31
	024 Call Object..ctor, X0
	025 Move [X21+96], X22
	026 Compare X22, 0
	027 JumpIfEqual {63}
	028 Move X10, 0xE8C000
	029 Move X8, [X22]
	030 Move X10, [X10+624]
	031 NotImplemented "Instruction LDRH not yet implemented."
	032 Move X1, [X10]
	033 Compare X9, 0
	034 JumpIfEqual {41}
	035 Move X10, [X8+176]
	036 Add X10, X10, 8
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Subtract X9, X9, 1
	040 Add X10, X10, 16
	041 Move W2, 7
	042 Move X0, X22
	043 Call 0x1C5D788
	044 Move W9, [X10]
	045 Add W9, W9, 7
	046 Add X8, X8, W9
	047 Add X0, X8, 312
	048 Move X8, [X0]
	049 Move X1, [X0+8]
	050 Move X0, X22
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move [X21+24], X0
	053 Move [X21+48], X20
	054 Move [X21+56], X31
	055 Move [X21+80], X19
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X22, [X31+16]
	059 Move X21, [X31+24]
	060 Move X30, [X31+48]
	061 Move X23, [X31+56]
	062 Return 
	063 Call 0x1C17F20

Method: System.Void .ctor(System.Runtime.Remoting.Messaging.IMethodCallMessage msg, System.Runtime.Remoting.Messaging.CADMethodReturnMessage retmsg)

Disassembly:
	0x0329C6C8 LDR X1, [X22]
	0x0329C6CC LDRH W9, [X8 + 0x12E]
	0x0329C6D0 CBZ X9, 0x329C6F4
	0x0329C6D4 LDR X10, [X8 + 0xB0]
	0x0329C6D8 ADD X10, X10, 0x8
	0x0329C6DC LDUR X11, [X10 - 0x8]
	0x0329C6E0 CMP X11, X1
	0x0329C6E4 B.EQ 0x329C704
	0x0329C6E8 SUBS X9, X9, 0x1
	0x0329C6EC ADD X10, X10, 0x10
	0x0329C6F0 B.NE 0x329C6DC
	0x0329C6F4 MOV X0, X20
	0x0329C6F8 MOV W2, W31
	0x0329C6FC BL 0x1C5C788
	0x0329C700 B 0x329C710
	0x0329C704 LDRSW X9, [X10]
	0x0329C708 ADD X8, X8, X9, 0x4, LSL
	0x0329C70C ADD X0, X8, 0x138
	0x0329C710 LDP X8, X1, [X0]
	0x0329C714 MOV X0, X20
	0x0329C718 BLR X8
	0x0329C71C TBZ X0, 0x0, 0x329C7C4
	0x0329C720 LDR X8, [X20]
	0x0329C724 LDR X1, [X22]
	0x0329C728 LDRH W9, [X8 + 0x12E]
	0x0329C72C CBZ X9, 0x329C750
	0x0329C730 LDR X10, [X8 + 0xB0]
	0x0329C734 ADD X10, X10, 0x8
	0x0329C738 LDUR X11, [X10 - 0x8]
	0x0329C73C CMP X11, X1
	0x0329C740 B.EQ 0x329C760
	0x0329C744 SUBS X9, X9, 0x1
	0x0329C748 ADD X10, X10, 0x10
	0x0329C74C B.NE 0x329C738
	0x0329C750 MOVZ W2, 0x1
	0x0329C754 MOV X0, X20
	0x0329C758 BL 0x1C5C788
	0x0329C75C B 0x329C770
	0x0329C760 LDR W9, [X10]
	0x0329C764 ADD W9, W9, 0x1
	0x0329C768 ADD X8, X8, W9, 0x4, SXTW
	0x0329C76C ADD X0, X8, 0x138
	0x0329C770 LDP X8, X1, [X0]
	0x0329C774 MOV X0, X20
	0x0329C778 BLR X8
	0x0329C77C CBZ X0, 0x329C84C
	0x0329C780 LDR X8, [X0]
	0x0329C784 LDR X1, [X23]
	0x0329C788 LDR X8, [X8 + 0x40]
	0x0329C78C LDR X9, [X1 + 0x40]
	0x0329C790 CMP X8, X9
	0x0329C794 B.NE 0x329C850
	0x0329C798 BL 0x1C16E08
	0x0329C79C LDP X1, X2, [X0]
	0x0329C7A0 CBZ X1, 0x329C7B4
	0x0329C7A4 LDR X8, [X24]
	0x0329C7A8 LDR X9, [X1]
	0x0329C7AC CMP X9, X8
	0x0329C7B0 B.NE 0x329C854
	0x0329C7B4 MOV X0, X19
	0x0329C7B8 MOV X3, X31
	0x0329C7BC BL 0x32A8BF0
	0x0329C7C0 B 0x329C6C4
	0x0329C7C4 MOV X19, X31
	0x0329C7C8 LDR X1, [X21]
	0x0329C7CC MOV X0, X20
	0x0329C7D0 BL 0x1C16E00
	0x0329C7D4 CBZ X0, 0x329C834
	0x0329C7D8 LDR X8, [X0]
	0x0329C7DC LDR X1, [X21]
	0x0329C7E0 MOV X20, X0
	0x0329C7E4 LDRH W9, [X8 + 0x12E]
	0x0329C7E8 CBZ X9, 0x329C80C
	0x0329C7EC LDR X10, [X8 + 0xB0]
	0x0329C7F0 ADD X10, X10, 0x8
	0x0329C7F4 LDUR X11, [X10 - 0x8]
	0x0329C7F8 CMP X11, X1
	0x0329C7FC B.EQ 0x329C81C
	0x0329C800 SUBS X9, X9, 0x1
	0x0329C804 ADD X10, X10, 0x10
	0x0329C808 B.NE 0x329C7F4
	0x0329C80C MOV X0, X20
	0x0329C810 MOV W2, W31
	0x0329C814 BL 0x1C5C788
	0x0329C818 B 0x329C828
	0x0329C81C LDRSW X9, [X10]
	0x0329C820 ADD X8, X8, X9, 0x4, LSL
	0x0329C824 ADD X0, X8, 0x138
	0x0329C828 LDP X8, X1, [X0]
	0x0329C82C MOV X0, X20
	0x0329C830 BLR X8
	0x0329C834 CBNZ X19, 0x329C868
	0x0329C838 LDP X20, X19, [X31 + 0x30]
	0x0329C83C LDP X22, X21, [X31 + 0x20]
	0x0329C840 LDP X24, X23, [X31 + 0x10]
	0x0329C844 LDR X30, [X31], #0x40
	0x0329C848 RET
	0x0329C84C BL 0x1C16F20
	0x0329C850 BL 0x1C171E0
	0x0329C854 MOV X0, X1
	0x0329C858 MOV X1, X8
	0x0329C85C BL 0x1C171E0
	0x0329C860 BL 0x1C16F20
	0x0329C864 BL 0x1C16F20
	0x0329C868 MOV X0, X19
	0x0329C86C BL 0x1C16F18
	0x0329C870 B 0x329C884
	0x0329C874 B 0x329C884
	0x0329C878 B 0x329C884
	0x0329C87C B 0x329C884
	0x0329C880 B 0x329C884
	0x0329C884 CMP W1, 0x1
	0x0329C888 B.NE 0x329C89C
	0x0329C88C BL 0x3EB1AD0
	0x0329C890 LDR X19, [X0]
	0x0329C894 BL 0x3EB1AE0
	0x0329C898 B 0x329C7C8
	0x0329C89C STR X0, [X31 + 0x8]
	0x0329C8A0 MOV X19, X31
	0x0329C8A4 B 0x329C8AC
	0x0329C8A8 STR X0, [X31 + 0x8]
	0x0329C8AC LDR X1, [X21]
	0x0329C8B0 MOV X0, X20
	0x0329C8B4 BL 0x1C16E00
	0x0329C8B8 MOV X20, X0
	0x0329C8BC CBZ X0, 0x329C918
	0x0329C8C0 LDR X8, [X20]
	0x0329C8C4 LDR X1, [X21]
	0x0329C8C8 LDRH W9, [X8 + 0x12E]
	0x0329C8CC CBZ X9, 0x329C8F0
	0x0329C8D0 LDR X10, [X8 + 0xB0]
	0x0329C8D4 ADD X10, X10, 0x8
	0x0329C8D8 LDUR X11, [X10 - 0x8]
	0x0329C8DC CMP X11, X1
	0x0329C8E0 B.EQ 0x329C900
	0x0329C8E4 SUBS X9, X9, 0x1
	0x0329C8E8 ADD X10, X10, 0x10
	0x0329C8EC B.NE 0x329C8D8
	0x0329C8F0 MOV X0, X20
	0x0329C8F4 MOV W2, W31
	0x0329C8F8 BL 0x1C5C788
	0x0329C8FC B 0x329C90C
	0x0329C900 LDRSW X9, [X10]
	0x0329C904 ADD X8, X8, X9, 0x4, LSL

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1141000
	007 Move W8, [X22+1833]
	008 Move X19, X2
	009 Move X21, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xE89000
	016 Move X0, [X0+624]
	017 Call 0x1C17CF4
	018 Move X0, 0xE89000
	019 Move X0, [X0+880]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+1833], W8
	023 Move X0, X20
	024 Move X1, X31
	025 Call Object..ctor, X0
	026 Move [X20+96], X21
	027 Compare X21, 0
	028 JumpIfEqual {153}
	029 Move X22, 0xE89000
	030 Move X8, [X21]
	031 Move X22, [X22+624]
	032 NotImplemented "Instruction LDRH not yet implemented."
	033 Move X1, [X22]
	034 Compare X9, 0
	035 JumpIfEqual {42}
	036 Move X10, [X8+176]
	037 Add X10, X10, 8
	038 NotImplemented "Instruction LDUR not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Subtract X9, X9, 1
	041 Add X10, X10, 16
	042 Move W2, 3
	043 Move X0, X21
	044 Call 0x1C5D788
	045 Move W9, [X10]
	046 Add W9, W9, 3
	047 Add X8, X8, W9
	048 Add X0, X8, 312
	049 Move X8, [X0]
	050 Move X1, [X0+8]
	051 Move X0, X21
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move [X20+40], X0
	054 Move X8, [X21]
	055 Move X1, [X22]
	056 NotImplemented "Instruction LDRH not yet implemented."
	057 Compare X9, 0
	058 JumpIfEqual {65}
	059 Move X10, [X8+176]
	060 Add X10, X10, 8
	061 NotImplemented "Instruction LDUR not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Subtract X9, X9, 1
	064 Add X10, X10, 16
	065 Move W2, 7
	066 Move X0, X21
	067 Call 0x1C5D788
	068 Move W9, [X10]
	069 Add W9, W9, 7
	070 Add X8, X8, W9
	071 Add X0, X8, 312
	072 Move X8, [X0]
	073 Move X1, [X0+8]
	074 Move X0, X21
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Move [X20+24], X0
	077 Move X8, [X21]
	078 Move X1, [X22]
	079 NotImplemented "Instruction LDRH not yet implemented."
	080 Compare X9, 0
	081 JumpIfEqual {88}
	082 Move X10, [X8+176]
	083 Add X10, X10, 8
	084 NotImplemented "Instruction LDUR not yet implemented."
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Subtract X9, X9, 1
	087 Add X10, X10, 16
	088 Move W2, 4
	089 Move X0, X21
	090 Call 0x1C5D788
	091 Move W9, [X10]
	092 Add W9, W9, 4
	093 Add X8, X8, W9
	094 Add X0, X8, 312
	095 Move X8, [X0]
	096 Move X1, [X0+8]
	097 Move X0, X21
	098 NotImplemented "Instruction BLR not yet implemented."
	099 Move [X20+16], X0
	100 Compare X19, 0
	101 JumpIfEqual {153}
	102 Move X0, X19
	103 Call CADMethodReturnMessage.GetArguments, X0
	104 Move X21, X0
	105 Move X0, X19
	106 Move X1, X21
	107 Call CADMethodReturnMessage.GetException, X0, X1
	108 Move [X20+56], X0
	109 Move X1, [X19+56]
	110 Move X2, X21
	111 Call CADMessageBase.UnmarshalArgument, X0, X1, X2
	112 Move [X20+48], X0
	113 Move X1, [X19+16]
	114 Move X2, X21
	115 Call CADMessageBase.UnmarshalArguments, X0, X1, X2
	116 Move [X20+80], X0
	117 Move X0, X19
	118 Move X1, X21
	119 Call CADMessageBase.GetLogicalCallContext, X0, X1
	120 Move [X20+104], X0
	121 Compare X0, 0
	122 JumpIfNotEqual {131}
	123 Move X8, 0xE89000
	124 Move X8, [X8+880]
	125 Move X0, [X8]
	126 Call 0x1C17F10
	127 Move X1, X31
	128 Move X22, X0
	129 Call Object..ctor, X0
	130 Move [X20+104], X22
	131 Move W8, [X19+32]
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move X8, [X20]
	134 Move X0, X20
	135 Move X9, [X8+664]
	136 Move X1, [X8+672]
	137 NotImplemented "Instruction BLR not yet implemented."
	138 Move W1, [X19+32]
	139 Move X2, X21
	140 Move X20, [X31+32]
	141 Move X19, [X31+40]
	142 Move X22, [X31+16]
	143 Move X21, [X31+24]
	144 Move X30, [X31+48]
	145 Call CADMessageBase.UnmarshalProperties, X0, X1, X2
	146 Return 
	147 Move X20, [X31+32]
	148 Move X19, [X31+40]
	149 Move X22, [X31+16]
	150 Move X21, [X31+24]
	151 Move X30, [X31+48]
	152 Return 
	153 Call 0x1C17F20

Method: System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x03299954 BL 0x1C16D08
	0x03299958 MOV X1, X0
	0x0329995C MOV X0, X20
	0x03299960 BL 0x1C16DEC
	0x03299964 ADRP X0, 0xE8A000
	0x03299968 LDR X0, [X0 + 0xD20]
	0x0329996C BL 0x1C16D08
	0x03299970 BL 0x1C16F10
	0x03299974 MOV X19, X0
	0x03299978 ADRP X0, 0xE8B000
	0x0329997C LDR X0, [X0 + 0x960]
	0x03299980 BL 0x1C16D08
	0x03299984 MOV X1, X0
	0x03299988 MOV X0, X19
	0x0329998C MOV X2, X31
	0x03299990 BL 0x3273098
	0x03299994 ADRP X0, 0xE8B000
	0x03299998 LDR X0, [X0 + 0x958]
	0x0329999C BL 0x1C16D08
	0x032999A0 MOV X1, X0
	0x032999A4 MOV X0, X19
	0x032999A8 BL 0x1C16DEC
	0x032999AC STP X30, X19, [X31 - 0x10]!
	0x032999B0 MOV X19, X0
	0x032999B4 LDR X0, [X0 + 0x20]
	0x032999B8 CBNZ X0, 0x32999D4
	0x032999BC LDR X0, [X19 + 0x38]
	0x032999C0 CBZ X0, 0x32999DC
	0x032999C4 LDR X8, [X0]
	0x032999C8 LDP X9, X1, [X8 + 0x1A8]
	0x032999CC BLR X9
	0x032999D0 STR X0, [X19 + 0x20]
	0x032999D4 LDP X30, X19, [X31], #0x10
	0x032999D8 RET
	0x032999DC BL 0x1C16F20

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X20, X1
	007 Move X1, X31
	008 Move X19, X0
	009 Call Object..ctor, X0
	010 Compare X20, 0
	011 JumpIfEqual {42}
	012 Move X0, X20
	013 Move X1, X31
	014 Call SerializationInfo.GetEnumerator, X0
	015 Compare X0, 0
	016 JumpIfEqual {42}
	017 Move W9, [X0+40]
	018 Move W8, [X0+44]
	019 Move X20, X0
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move W21, 1
	022 Add W8, W8, 1
	023 Move [X20+44], W8
	024 Add X8, X31, 8
	025 Move X0, X20
	026 Move [X20+48], W21
	027 Call SerializationInfoEnumerator.get_Current, X0
	028 Move X1, [X31+8]
	029 Move X2, [X31+16]
	030 Move X0, X19
	031 Call MethodResponse.InitMethodProperty, X0, X1, X2
	032 Move W9, [X20+40]
	033 Move W8, [X20+44]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move [X20+48], W31
	036 Move X20, [X31+48]
	037 Move X19, [X31+56]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Add X31, X31, 64
	041 Return 
	042 Call 0x1C17F20

Method: System.Void InitMethodProperty(System.String key, System.Object value)

Disassembly:
	0x0329C908 ADD X0, X8, 0x138
	0x0329C90C LDP X8, X1, [X0]
	0x0329C910 MOV X0, X20
	0x0329C914 BLR X8
	0x0329C918 CBNZ X19, 0x329C924
	0x0329C91C LDR X0, [X31 + 0x8]
	0x0329C920 BL 0x1D2C690
	0x0329C924 MOV X0, X19
	0x0329C928 BL 0x1C16F18
	0x0329C92C BL 0x1990590
	0x0329C930 LDR X0, [X0 + 0x70]
	0x0329C934 RET
	0x0329C938 STR X1, [X0 + 0x70]
	0x0329C93C RET
	0x0329C940 STP X30, X21, [X31 - 0x20]!
	0x0329C944 STP X20, X19, [X31 + 0x10]
	0x0329C948 ADRP X20, 0x1140000
	0x0329C94C ADRP X19, 0xE57000
	0x0329C950 LDRB W8, [X20 + 0x735]
	0x0329C954 LDR X19, [X19 + 0xAC8]
	0x0329C958 TBNZ X8, 0x0, 0x329C9D0
	0x0329C95C ADRP X0, 0xE88000
	0x0329C960 LDR X0, [X0 + 0x908]
	0x0329C964 BL 0x1C16CF4
	0x0329C968 ADRP X0, 0xE57000
	0x0329C96C LDR X0, [X0 + 0xAC8]
	0x0329C970 BL 0x1C16CF4
	0x0329C974 ADRP X0, 0xE88000
	0x0329C978 LDR X0, [X0 + 0x8C8]
	0x0329C97C BL 0x1C16CF4
	0x0329C980 ADRP X0, 0xE88000
	0x0329C984 LDR X0, [X0 + 0x8D0]
	0x0329C988 BL 0x1C16CF4
	0x0329C98C ADRP X0, 0xE7E000
	0x0329C990 LDR X0, [X0 + 0x2E0]
	0x0329C994 BL 0x1C16CF4
	0x0329C998 ADRP X0, 0xE88000
	0x0329C99C LDR X0, [X0 + 0x8D8]
	0x0329C9A0 BL 0x1C16CF4
	0x0329C9A4 ADRP X0, 0xE88000
	0x0329C9A8 LDR X0, [X0 + 0x8E8]
	0x0329C9AC BL 0x1C16CF4
	0x0329C9B0 ADRP X0, 0xE88000
	0x0329C9B4 LDR X0, [X0 + 0x8F0]
	0x0329C9B8 BL 0x1C16CF4
	0x0329C9BC ADRP X0, 0xE88000
	0x0329C9C0 LDR X0, [X0 + 0x8E0]
	0x0329C9C4 BL 0x1C16CF4
	0x0329C9C8 MOVZ W8, 0x1
	0x0329C9CC STRB W8, [X20 + 0x735]
	0x0329C9D0 LDR X0, [X19]
	0x0329C9D4 MOVZ W1, 0x7
	0x0329C9D8 BL 0x1C16D6C
	0x0329C9DC CBZ X0, 0x329CAD8
	0x0329C9E0 LDR W8, [X0 + 0x18]
	0x0329C9E4 CBZ W8, 0x329CAD4
	0x0329C9E8 ADRP X9, 0xE88000
	0x0329C9EC LDR X9, [X9 + 0x8C8]
	0x0329C9F0 CMP W8, 0x1
	0x0329C9F4 LDR X9, [X9]
	0x0329C9F8 STR X9, [X0 + 0x20]
	0x0329C9FC B.EQ 0x329CAD4
	0x0329CA00 ADRP X9, 0xE88000
	0x0329CA04 LDR X9, [X9 + 0x8D8]
	0x0329CA08 CMP W8, 0x2
	0x0329CA0C LDR X9, [X9]
	0x0329CA10 STR X9, [X0 + 0x28]
	0x0329CA14 B.LS 0x329CAD4
	0x0329CA18 ADRP X9, 0xE7E000
	0x0329CA1C LDR X9, [X9 + 0x2E0]
	0x0329CA20 CMP W8, 0x3
	0x0329CA24 LDR X9, [X9]
	0x0329CA28 STR X9, [X0 + 0x30]
	0x0329CA2C B.EQ 0x329CAD4
	0x0329CA30 ADRP X9, 0xE88000
	0x0329CA34 LDR X9, [X9 + 0x8D0]
	0x0329CA38 CMP W8, 0x4
	0x0329CA3C LDR X9, [X9]
	0x0329CA40 STR X9, [X0 + 0x38]
	0x0329CA44 B.LS 0x329CAD4
	0x0329CA48 ADRP X9, 0xE88000
	0x0329CA4C LDR X9, [X9 + 0x8E8]
	0x0329CA50 CMP W8, 0x5
	0x0329CA54 LDR X9, [X9]
	0x0329CA58 STR X9, [X0 + 0x40]
	0x0329CA5C B.EQ 0x329CAD4
	0x0329CA60 ADRP X9, 0xE88000
	0x0329CA64 LDR X9, [X9 + 0x8F0]
	0x0329CA68 CMP W8, 0x6
	0x0329CA6C LDR X9, [X9]
	0x0329CA70 STR X9, [X0 + 0x48]
	0x0329CA74 B.LS 0x329CAD4
	0x0329CA78 ADRP X20, 0xE88000
	0x0329CA7C LDR X20, [X20 + 0x8E0]
	0x0329CA80 ADRP X21, 0xE88000
	0x0329CA84 MOVZ W1, 0x1
	0x0329CA88 LDR X8, [X20]
	0x0329CA8C LDR X21, [X21 + 0x908]
	0x0329CA90 STR X8, [X0 + 0x50]
	0x0329CA94 LDR X8, [X21]
	0x0329CA98 LDR X8, [X8 + 0xB8]
	0x0329CA9C STR X0, [X8]
	0x0329CAA0 LDR X0, [X19]
	0x0329CAA4 BL 0x1C16D6C
	0x0329CAA8 CBZ X0, 0x329CAD8
	0x0329CAAC LDR W8, [X0 + 0x18]
	0x0329CAB0 CBZ W8, 0x329CAD4
	0x0329CAB4 LDR X8, [X20]
	0x0329CAB8 LDP X20, X19, [X31 + 0x10]
	0x0329CABC STR X8, [X0 + 0x20]
	0x0329CAC0 LDR X8, [X21]
	0x0329CAC4 LDR X8, [X8 + 0xB8]
	0x0329CAC8 STR X0, [X8 + 0x8]
	0x0329CACC LDP X30, X21, [X31], #0x20
	0x0329CAD0 RET
	0x0329CAD4 BL 0x1C16F28
	0x0329CAD8 BL 0x1C16F20
	0x0329CADC STP X29, X30, [X31 - 0x60]!
	0x0329CAE0 STP X28, X27, [X31 + 0x10]
	0x0329CAE4 STP X26, X25, [X31 + 0x20]
	0x0329CAE8 STP X24, X23, [X31 + 0x30]
	0x0329CAEC STP X22, X21, [X31 + 0x40]
	0x0329CAF0 STP X20, X19, [X31 + 0x50]
	0x0329CAF4 ADRP X22, 0x1140000
	0x0329CAF8 LDRB W8, [X22 + 0x736]
	0x0329CAFC MOV X19, X2
	0x0329CB00 MOV X21, X1
	0x0329CB04 MOV X20, X0
	0x0329CB08 TBNZ X8, 0x0, 0x329CB38
	0x0329CB0C ADRP X0, 0xE57000
	0x0329CB10 LDR X0, [X0 + 0x618]
	0x0329CB14 BL 0x1C16CF4
	0x0329CB18 ADRP X0, 0xE57000
	0x0329CB1C LDR X0, [X0 + 0x9D0]
	0x0329CB20 BL 0x1C16CF4
	0x0329CB24 ADRP X0, 0xE57000
	0x0329CB28 LDR X0, [X0 + 0xAC8]
	0x0329CB2C BL 0x1C16CF4
	0x0329CB30 MOVZ W8, 0x1
	0x0329CB34 STRB W8, [X22 + 0x736]
	0x0329CB38 STR X21, [X20 + 0x10]
	0x0329CB3C CBZ X21, 0x329CD40
	0x0329CB40 LDR X8, [X21]
	0x0329CB44 MOV X0, X21
	0x0329CB48 LDR X9, [X8 + 0x358]
	0x0329CB4C LDR X1, [X8 + 0x360]
	0x0329CB50 BLR X9
	0x0329CB54 CBZ X0, 0x329CD40
	0x0329CB58 ADRP X8, 0xE57000
	0x0329CB5C LDR X8, [X8 + 0x9D0]
	0x0329CB60 LDR W22, [X0 + 0x18]
	0x0329CB64 MOV X21, X0
	0x0329CB68 ADRP X23, 0xE57000
	0x0329CB6C LDR X0, [X8]
	0x0329CB70 ADRP X24, 0xE57000
	0x0329CB74 LDR X23, [X23 + 0x618]
	0x0329CB78 LDR X24, [X24 + 0xAC8]
	0x0329CB7C MOV W1, W22
	0x0329CB80 BL 0x1C16D6C
	0x0329CB84 STR X0, [X20 + 0x18]
	0x0329CB88 LDR X0, [X23]
	0x0329CB8C MOV W1, W22
	0x0329CB90 BL 0x1C16D6C
	0x0329CB94 STR X0, [X20 + 0x28]
	0x0329CB98 STR X31, [X20 + 0x48]
	0x0329CB9C STR W31, [X20 + 0x50]
	0x0329CBA0 LDR X0, [X24]
	0x0329CBA4 MOV W1, W22
	0x0329CBA8 BL 0x1C16D6C
	0x0329CBAC CMP W22, 0x1
	0x0329CBB0 STR X0, [X20 + 0x20]
	0x0329CBB4 B.LT 0x329CD24
	0x0329CBB8 LDR W8, [X21 + 0x18]
	0x0329CBBC CBZ W8, 0x329CC24
	0x0329CBC0 MOV X23, X0
	0x0329CBC4 MOV X25, X31
	0x0329CBC8 MOVZ W24, 0x1
	0x0329CBCC ADD X8, X21, X25, 0x3, LSL
	0x0329CBD0 LDR X0, [X8 + 0x20]
	0x0329CBD4 CBZ X0, 0x329CD40
	0x0329CBD8 LDR X8, [X0]
	0x0329CBDC LDP X9, X1, [X8 + 0x1C8]
	0x0329CBE0 BLR X9
	0x0329CBE4 CBZ X23, 0x329CD40
	0x0329CBE8 LDR W8, [X23 + 0x18]
	0x0329CBEC SUB W9, W24, 0x1
	0x0329CBF0 CMP W9, W8
	0x0329CBF4 B.CS 0x329CC24
	0x0329CBF8 ADD X8, X23, X25, 0x3, LSL
	0x0329CBFC CMP W22, W24
	0x0329CC00 STR X0, [X8 + 0x20]
	0x0329CC04 B.EQ 0x329CC28
	0x0329CC08 LDR W8, [X21 + 0x18]
	0x0329CC0C LDR X23, [X20 + 0x20]
	0x0329CC10 SXTW X25, W24
	0x0329CC14 CMP W24, W8
	0x0329CC18 ADD W8, W24, 0x1
	0x0329CC1C MOV W24, W8
	0x0329CC20 B.CC 0x329CBCC
	0x0329CC24 BL 0x1C16F28
	0x0329CC28 CMP W22, 0x1
	0x0329CC2C B.LT 0x329CD24
	0x0329CC30 MOV W25, W31
	0x0329CC34 MOV W9, W31
	0x0329CC38 MOVZ W26, 0x2
	0x0329CC3C MOVZ W27, 0x5
	0x0329CC40 LDR W8, [X21 + 0x18]
	0x0329CC44 CMP W9, W8
	0x0329CC48 B.CS 0x329CC24
	0x0329CC4C SXTW X28, W9
	0x0329CC50 ADD X24, X21, X28, 0x3, LSL
	0x0329CC54 LDR X0, [X24 + 0x20]!
	0x0329CC58 CBZ X0, 0x329CD40
	0x0329CC5C MOV X1, X31
	0x0329CC60 BL 0x32CF478
	0x0329CC64 LDR W8, [X21 + 0x18]
	0x0329CC68 CMP W28, W8
	0x0329CC6C B.CS 0x329CC24
	0x0329CC70 MOV W23, W0
	0x0329CC74 LDR X0, [X24]
	0x0329CC78 CBZ X0, 0x329CD40
	0x0329CC7C LDR X8, [X0]
	0x0329CC80 LDP X9, X1, [X8 + 0x1D8]
	0x0329CC84 BLR X9
	0x0329CC88 CBZ X0, 0x329CD40
	0x0329CC8C MOV X1, X31
	0x0329CC90 BL 0x3396C08
	0x0329CC94 TBZ X0, 0x0, 0x329CCF4
	0x0329CC98 CBZ X19, 0x329CCE8
	0x0329CC9C LDR W8, [X19 + 0x18]
	0x0329CCA0 CMP W25, W8
	0x0329CCA4 B.CS 0x329CC24
	0x0329CCA8 LDR X29, [X20 + 0x18]
	0x0329CCAC CBZ X29, 0x329CD40
	0x0329CCB0 ADD X8, X19, W25, 0x3, SXTW
	0x0329CCB4 LDR X24, [X8 + 0x20]
	0x0329CCB8 CBZ X24, 0x329CCD0
	0x0329CCBC LDR X8, [X29]
	0x0329CCC0 MOV X0, X24
	0x0329CCC4 LDR X1, [X8 + 0x40]
	0x0329CCC8 BL 0x1C16E00
	0x0329CCCC CBZ X0, 0x329CD44
	0x0329CCD0 LDR W8, [X29 + 0x18]
	0x0329CCD4 CMP W28, W8
	0x0329CCD8 B.CS 0x329CC24
	0x0329CCDC ADD W25, W25, 0x1
	0x0329CCE0 ADD X8, X29, X28, 0x3, LSL
	0x0329CCE4 STR X24, [X8 + 0x20]
	0x0329CCE8 ANDS W31, W23, 0x1
	0x0329CCEC CINC W8, W26, EQ
	0x0329CCF0 B 0x329CCFC
	0x0329CCF4 ANDS W31, W23, 0x1
	0x0329CCF8 CSINC W8, W27, W31, NE
	0x0329CCFC LDR X9, [X20 + 0x28]
	0x0329CD00 CBZ X9, 0x329CD40
	0x0329CD04 LDR W10, [X9 + 0x18]
	0x0329CD08 CMP W28, W10
	0x0329CD0C B.CS 0x329CC24
	0x0329CD10 ADD X10, X9, X28
	0x0329CD14 ADD W9, W28, 0x1
	0x0329CD18 CMP W22, W9
	0x0329CD1C STRB W8, [X10 + 0x20]
	0x0329CD20 B.NE 0x329CC40
	0x0329CD24 LDP X20, X19, [X31 + 0x50]
	0x0329CD28 LDP X22, X21, [X31 + 0x40]
	0x0329CD2C LDP X24, X23, [X31 + 0x30]
	0x0329CD30 LDP X26, X25, [X31 + 0x20]
	0x0329CD34 LDP X28, X27, [X31 + 0x10]
	0x0329CD38 LDP X29, X30, [X31], #0x60
	0x0329CD3C RET
	0x0329CD40 BL 0x1C16F20
	0x0329CD44 BL 0x1C16F44
	0x0329CD48 MOV X1, X31
	0x0329CD4C BL 0x1C16DEC
	0x0329CD50 STR X30, [X31 - 0x30]!
	0x0329CD54 STP X22, X21, [X31 + 0x10]
	0x0329CD58 STP X20, X19, [X31 + 0x20]
	0x0329CD5C ADRP X22, 0x1140000
	0x0329CD60 LDRB W8, [X22 + 0x737]
	0x0329CD64 MOV X20, X2
	0x0329CD68 MOV X19, X1
	0x0329CD6C MOV X21, X0
	0x0329CD70 TBNZ X8, 0x0, 0x329CD88
	0x0329CD74 ADRP X0, 0xE88000
	0x0329CD78 LDR X0, [X0 + 0x9A0]
	0x0329CD7C BL 0x1C16CF4
	0x0329CD80 MOVZ W8, 0x1
	0x0329CD84 STRB W8, [X22 + 0x737]
	0x0329CD88 MOV X0, X21
	0x0329CD8C MOV X1, X31
	0x0329CD90 BL 0x33BDD8C
	0x0329CD94 MOV X0, X19
	0x0329CD98 MOV X1, X31
	0x0329CD9C MOV X2, X31
	0x0329CDA0 BL 0x32CE114
	0x0329CDA4 TBZ X0, 0x0, 0x329CDFC
	0x0329CDA8 CBZ X19, 0x329CDE0
	0x0329CDAC ADRP X9, 0xE88000
	0x0329CDB0 LDR X9, [X9 + 0x9A0]
	0x0329CDB4 LDR X8, [X19]
	0x0329CDB8 LDR X1, [X9]
	0x0329CDBC LDRB W10, [X8 + 0x130]
	0x0329CDC0 LDRB W9, [X1 + 0x130]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1141000
	007 Move W8, [X22+1834]
	008 Move X19, X2
	009 Move X21, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {59}
	015 Move X0, 0xE58000
	016 Move X0, [X0+2000]
	017 Call 0x1C17CF4
	018 Move X0, 0xE58000
	019 Move X0, [X0+2072]
	020 Call 0x1C17CF4
	021 Move X0, 0xE89000
	022 Move X0, [X0+880]
	023 Call 0x1C17CF4
	024 Move X0, 0xE58000
	025 Move X0, [X0+2512]
	026 Call 0x1C17CF4
	027 Move X0, 0xE5A000
	028 Move X0, [X0+632]
	029 Call 0x1C17CF4
	030 Move X0, 0xE60000
	031 Move X0, [X0+3168]
	032 Call 0x1C17CF4
	033 Move X0, 0xE89000
	034 Move X0, [X0+2448]
	035 Call 0x1C17CF4
	036 Move X0, 0xE89000
	037 Move X0, [X0+2248]
	038 Call 0x1C17CF4
	039 Move X0, 0xE89000
	040 Move X0, [X0+2256]
	041 Call 0x1C17CF4
	042 Move X0, 0xE7F000
	043 Move X0, [X0+736]
	044 Call 0x1C17CF4
	045 Move X0, 0xE89000
	046 Move X0, [X0+2264]
	047 Call 0x1C17CF4
	048 Move X0, 0xE89000
	049 Move X0, [X0+2280]
	050 Call 0x1C17CF4
	051 Move X0, 0xE89000
	052 Move X0, [X0+2288]
	053 Call 0x1C17CF4
	054 Move X0, 0xE89000
	055 Move X0, [X0+2272]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X22+1834], W8
	059 Move X0, X21
	060 Move X1, X31
	061 Call <PrivateImplementationDetails>.ComputeStringHash, X0
	062 Move W8, 0xFD0C
	063 NotImplemented "Instruction MOVK not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move W8, 0xB61A
	066 NotImplemented "Instruction MOVK not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move W8, 0xE67B
	069 NotImplemented "Instruction MOVK not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move W8, 0xB61A
	072 NotImplemented "Instruction MOVK not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X8, 0xE89000
	075 Move X8, [X8+2272]
	076 Move X0, X21
	077 Move X2, X31
	078 Move X1, [X8]
	079 Call String.op_Equality, X0, X1
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {257}
	084 Compare X19, 0
	085 JumpIfEqual {296}
	086 Move X8, 0xE89000
	087 Move X8, [X8+880]
	088 Move X1, [X8]
	089 Move X8, [X19]
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move [X20+104], X19
	092 Move W8, 633
	093 NotImplemented "Instruction MOVK not yet implemented."
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move W8, 0x5180
	096 NotImplemented "Instruction MOVK not yet implemented."
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X8, 0xE7F000
	099 Move X8, [X8+736]
	100 Move X0, X21
	101 Move X2, X31
	102 Move X1, [X8]
	103 Call String.op_Equality, X0, X1
	104 Move TEMP, X0
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfNotEqual {257}
	108 Compare X19, 0
	109 JumpIfEqual {297}
	110 Move X8, 0xE5A000
	111 Move X8, [X8+632]
	112 Move X1, [X8]
	113 Move X8, [X19]
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move [X20+32], X19
	116 Move W8, 0x9961
	117 NotImplemented "Instruction MOVK not yet implemented."
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move W8, 0xFD0C
	120 NotImplemented "Instruction MOVK not yet implemented."
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move X8, 0xE89000
	123 Move X8, [X8+2280]
	124 Move X0, X21
	125 Move X2, X31
	126 Move X1, [X8]
	127 Call String.op_Equality, X0, X1
	128 Move TEMP, X0
	129 And TEMP, TEMP, 1
	130 Compare TEMP, 1
	131 JumpIfNotEqual {257}
	132 Compare X19, 0
	133 JumpIfEqual {298}
	134 Move X22, 0xE58000
	135 Move X22, [X22+2512]
	136 Move X0, X19
	137 Move X21, [X22]
	138 Move X1, X21
	139 Call 0x1C17E00
	140 Compare X0, 0
	141 JumpIfEqual {312}
	142 Move [X20+80], X0
	143 Move W8, 0xE215
	144 NotImplemented "Instruction MOVK not yet implemented."
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move W8, 3896
	147 NotImplemented "Instruction MOVK not yet implemented."
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Move X8, 0xE89000
	150 Move X8, [X8+2256]
	151 Move X0, X21
	152 Move X2, X31
	153 Move X1, [X8]
	154 Call String.op_Equality, X0, X1
	155 Move TEMP, X0
	156 And TEMP, TEMP, 1
	157 Compare TEMP, 1
	158 JumpIfNotEqual {257}
	159 Compare X19, 0
	160 JumpIfEqual {299}
	161 Move X22, 0xE60000
	162 Move X22, [X22+3168]
	163 Move X0, X19
	164 Move X21, [X22]
	165 Move X1, X21
	166 Call 0x1C17E00
	167 Compare X0, 0
	168 JumpIfEqual {312}
	169 Move [X20+64], X0
	170 Move X20, [X22]
	171 Move X0, X19
	172 Move X1, X20
	173 Call 0x1C17E00
	174 Compare X0, 0
	175 JumpIfNotEqual {303}
	176 Move X0, X19
	177 Move X1, X20
	178 Call 0x1C181E0
	179 Move X8, 0xE89000
	180 Move X8, [X8+2248]
	181 Move X0, X21
	182 Move X2, X31
	183 Move X1, [X8]
	184 Call String.op_Equality, X0, X1
	185 Move TEMP, X0
	186 And TEMP, TEMP, 1
	187 Compare TEMP, 1
	188 JumpIfNotEqual {257}
	189 Compare X19, 0
	190 JumpIfEqual {300}
	191 Move X8, 0xE5A000
	192 Move X8, [X8+632]
	193 Move X1, [X8]
	194 Move X8, [X19]
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Move [X20+24], X19
	197 Move X8, 0xE89000
	198 Move X8, [X8+2264]
	199 Move X0, X21
	200 Move X2, X31
	201 Move X1, [X8]
	202 Call String.op_Equality, X0, X1
	203 Move TEMP, X0
	204 And TEMP, TEMP, 1
	205 Compare TEMP, 1
	206 JumpIfNotEqual {257}
	207 Compare X19, 0
	208 JumpIfEqual {301}
	209 Move X8, 0xE5A000
	210 Move X8, [X8+632]
	211 Move X1, [X8]
	212 Move X8, [X19]
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Move [X20+16], X19
	215 Move X8, [X19]
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Move X8, 0xE89000
	218 Move X8, [X8+2288]
	219 Move X0, X21
	220 Move X2, X31
	221 Move X1, [X8]
	222 Call String.op_Equality, X0, X1
	223 Move TEMP, X0
	224 And TEMP, TEMP, 1
	225 Compare TEMP, 1
	226 JumpIfNotEqual {257}
	227 Move [X20+48], X19
	228 Move X8, 0xE89000
	229 Move X8, [X8+2448]
	230 Move X0, X21
	231 Move X2, X31
	232 Move X1, [X8]
	233 Call String.op_Equality, X0, X1
	234 Move TEMP, X0
	235 And TEMP, TEMP, 1
	236 Compare TEMP, 1
	237 JumpIfNotEqual {257}
	238 Compare X19, 0
	239 JumpIfEqual {302}
	240 Move X8, 0xE58000
	241 Move X8, [X8+2000]
	242 Move X9, [X19]
	243 Move X1, [X8]
	244 Move W10, [X9+304]
	245 Move W8, [X1+304]
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Move X10, [X9+200]
	248 Subtract X9, X8, 1
	249 Move X10, [X10]
	250 NotImplemented "Instruction CMP not yet implemented."
	251 Move [X20+56], X19
	252 Move X10, [X19]
	253 Move W11, [X10+304]
	254 NotImplemented "Instruction CMP not yet implemented."
	255 Move X8, [X10+200]
	256 Move X8, [X8]
	257 Move X8, [X20]
	258 Move X0, X20
	259 Move X9, [X8+664]
	260 Move X1, [X8+672]
	261 NotImplemented "Instruction BLR not yet implemented."
	262 Compare X0, 0
	263 JumpIfEqual {309}
	264 Move X10, 0xE58000
	265 Move X8, [X0]
	266 Move X10, [X10+2072]
	267 Move X20, X0
	268 NotImplemented "Instruction LDRH not yet implemented."
	269 Move X1, [X10]
	270 Compare X9, 0
	271 JumpIfEqual {278}
	272 Move X10, [X8+176]
	273 Add X10, X10, 8
	274 NotImplemented "Instruction LDUR not yet implemented."
	275 NotImplemented "Instruction CMP not yet implemented."
	276 Subtract X9, X9, 1
	277 Add X10, X10, 16
	278 Move W2, 1
	279 Move X0, X20
	280 Call 0x1C5D788
	281 Move W9, [X10]
	282 Add W9, W9, 1
	283 Add X8, X8, W9
	284 Add X0, X8, 312
	285 Move X4, [X0]
	286 Move X3, [X0+8]
	287 Move X0, X20
	288 Move X1, X21
	289 Move X2, X19
	290 Move X20, [X31+32]
	291 Move X19, [X31+40]
	292 Move X22, [X31+16]
	293 Move X21, [X31+24]
	294 Move X30, [X31+48]
	295 CallNoReturn X4
	296 Move [X20+104], X31
	297 Move [X20+32], X31
	298 Move [X20+80], X31
	299 Move [X20+64], X31
	300 Move [X20+24], X31
	301 Move [X20+16], X31
	302 Move [X20+56], X31
	303 Move X20, [X31+32]
	304 Move X19, [X31+40]
	305 Move X22, [X31+16]
	306 Move X21, [X31+24]
	307 Move X30, [X31+48]
	308 Return 
	309 Call 0x1C17F20
	310 Move X0, X19
	311 Call 0x1C181E0
	312 Move X0, X19
	313 Move X1, X21
	314 Call 0x1C181E0

Method: System.Int32 get_ArgCount()

Disassembly:
	0x0329CDC4 CMP W10, W9
	0x0329CDC8 B.CC 0x329CE10
	0x0329CDCC LDR X8, [X8 + 0xC8]
	0x0329CDD0 ADD X8, X8, X9, 0x3, LSL
	0x0329CDD4 LDUR X8, [X8 - 0x8]
	0x0329CDD8 CMP X8, X1

ISIL:
	001 Move X8, [X0+80]
	002 Compare X8, 0
	003 JumpIfEqual {6}
	004 Move W0, [X8+24]
	005 Return X0
	006 Move W0, W31
	007 Return X0

Method: System.Object[] get_Args()

Disassembly:
	0x0329CDDC B.NE 0x329CE10
	0x0329CDE0 MOV X0, X21

ISIL:
	001 Move X0, [X0+80]
	002 Return X0

Method: System.Exception get_Exception()

Disassembly:
	0x0329CDE4 MOV X1, X19
	0x0329CDE8 MOV X2, X20

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Runtime.Remoting.Messaging.LogicalCallContext get_LogicalCallContext()

Disassembly:
	0x0329CDEC LDP X20, X19, [X31 + 0x20]
	0x0329CDF0 LDP X22, X21, [X31 + 0x10]
	0x0329CDF4 LDR X30, [X31], #0x30
	0x0329CDF8 B 0x329CADC
	0x0329CDFC STR X31, [X21 + 0x18]
	0x0329CE00 LDP X20, X19, [X31 + 0x20]
	0x0329CE04 LDP X22, X21, [X31 + 0x10]
	0x0329CE08 LDR X30, [X31], #0x30
	0x0329CE0C RET
	0x0329CE10 MOV X0, X19
	0x0329CE14 BL 0x1C171E0
	0x0329CE18 STP X30, X25, [X31 - 0x40]!
	0x0329CE1C STP X24, X23, [X31 + 0x10]
	0x0329CE20 STP X22, X21, [X31 + 0x20]
	0x0329CE24 STP X20, X19, [X31 + 0x30]
	0x0329CE28 ADRP X23, 0x1140000
	0x0329CE2C LDRB W8, [X23 + 0x738]
	0x0329CE30 MOV X21, X3
	0x0329CE34 MOV X19, X2
	0x0329CE38 MOV X22, X1
	0x0329CE3C MOV X20, X0
	0x0329CE40 TBNZ X8, 0x0, 0x329CE58
	0x0329CE44 ADRP X0, 0xE88000
	0x0329CE48 LDR X0, [X0 + 0x9A0]
	0x0329CE4C BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1141000
	005 Move W8, [X20+1835]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE89000
	012 Move X0, [X0+880]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1835], W8
	016 Move X20, [X19+104]
	017 Compare X20, 0
	018 JumpIfNotEqual {27}
	019 Move X8, 0xE89000
	020 Move X8, [X8+880]
	021 Move X0, [X8]
	022 Call 0x1C17F10
	023 Move X1, X31
	024 Move X20, X0
	025 Call Object..ctor, X0
	026 Move [X19+104], X20
	027 Move X0, X20
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Return X0

Method: System.Reflection.MethodBase get_MethodBase()

Disassembly:
	0x0329CE50 MOVZ W8, 0x1
	0x0329CE54 STRB W8, [X23 + 0x738]
	0x0329CE58 MOV X0, X20
	0x0329CE5C MOV X1, X31
	0x0329CE60 BL 0x33BDD8C
	0x0329CE64 CBZ X22, 0x329CE9C
	0x0329CE68 ADRP X9, 0xE88000
	0x0329CE6C LDR X9, [X9 + 0x9A0]
	0x0329CE70 LDR X8, [X22]
	0x0329CE74 LDR X1, [X9]
	0x0329CE78 LDRB W10, [X8 + 0x130]
	0x0329CE7C LDRB W9, [X1 + 0x130]
	0x0329CE80 CMP W10, W9
	0x0329CE84 B.CC 0x329CF48
	0x0329CE88 LDR X8, [X8 + 0xC8]
	0x0329CE8C ADD X8, X8, X9, 0x3, LSL
	0x0329CE90 LDUR X8, [X8 - 0x8]
	0x0329CE94 CMP X8, X1
	0x0329CE98 B.NE 0x329CF48
	0x0329CE9C MOV X0, X20
	0x0329CEA0 MOV X1, X22
	0x0329CEA4 MOV X2, X21
	0x0329CEA8 BL 0x329CADC
	0x0329CEAC CBZ X19, 0x329CF38
	0x0329CEB0 LDR X8, [X19 + 0x18]
	0x0329CEB4 CMP W8, 0x1
	0x0329CEB8 B.LT 0x329CF24
	0x0329CEBC AND X8, X8, 0x0
	0x0329CEC0 CBZ X8, 0x329CF20
	0x0329CEC4 MOV X22, X31
	0x0329CEC8 SUB X23, X8, 0x1
	0x0329CECC ADD X24, X19, 0x20
	0x0329CED0 LDR X25, [X20 + 0x18]
	0x0329CED4 CBZ X25, 0x329CF38
	0x0329CED8 LDR X21, [X24, X22, LSL #3]
	0x0329CEDC CBZ X21, 0x329CEF4
	0x0329CEE0 LDR X8, [X25]
	0x0329CEE4 MOV X0, X21
	0x0329CEE8 LDR X1, [X8 + 0x40]
	0x0329CEEC BL 0x1C16E00
	0x0329CEF0 CBZ X0, 0x329CF3C
	0x0329CEF4 LDR W8, [X25 + 0x18]
	0x0329CEF8 CMP X22, X8
	0x0329CEFC B.CS 0x329CF20
	0x0329CF00 ADD X8, X25, X22, 0x3, LSL
	0x0329CF04 CMP X23, X22
	0x0329CF08 STR X21, [X8 + 0x20]
	0x0329CF0C B.EQ 0x329CF24
	0x0329CF10 LDR W8, [X19 + 0x18]
	0x0329CF14 ADD X22, X22, 0x1
	0x0329CF18 CMP X22, X8
	0x0329CF1C B.CC 0x329CED0
	0x0329CF20 BL 0x1C16F28
	0x0329CF24 LDP X20, X19, [X31 + 0x30]
	0x0329CF28 LDP X22, X21, [X31 + 0x20]
	0x0329CF2C LDP X24, X23, [X31 + 0x10]
	0x0329CF30 LDP X30, X25, [X31], #0x40
	0x0329CF34 RET
	0x0329CF38 BL 0x1C16F20
	0x0329CF3C BL 0x1C16F44
	0x0329CF40 MOV X1, X31
	0x0329CF44 BL 0x1C16DEC
	0x0329CF48 MOV X0, X22
	0x0329CF4C BL 0x1C171E0
	0x0329CF50 STP X30, X21, [X31 - 0x20]!
	0x0329CF54 STP X20, X19, [X31 + 0x10]
	0x0329CF58 CBZ X0, 0x329CF90

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1141000
	005 Move W8, [X20+1836]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xE89000
	012 Move X0, [X0+624]
	013 Call 0x1C17CF4
	014 Move X0, 0xE88000
	015 Move X0, [X0+3688]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1836], W8
	019 Move X1, [X19+40]
	020 Move X0, X31
	021 Move X2, X31
	022 Call MethodBase.op_Equality, X0, X1
	023 Move TEMP, X0
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfNotEqual {73}
	027 Move X20, [X19+96]
	028 Compare X20, 0
	029 JumpIfEqual {46}
	030 Move X10, 0xE89000
	031 Move X8, [X20]
	032 Move X10, [X10+624]
	033 NotImplemented "Instruction LDRH not yet implemented."
	034 Move X1, [X10]
	035 Compare X9, 0
	036 JumpIfEqual {43}
	037 Move X10, [X8+176]
	038 Add X10, X10, 8
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Subtract X9, X9, 1
	042 Add X10, X10, 16
	043 Move W2, 3
	044 Move X0, X20
	045 Call 0x1C5D788
	046 Move X0, X19
	047 Call MethodResponse.get_MethodName, X0
	048 Compare X0, 0
	049 JumpIfEqual {73}
	050 Move X0, X19
	051 Call MethodResponse.get_TypeName, X0
	052 Compare X0, 0
	053 JumpIfEqual {73}
	054 Move X8, 0xE88000
	055 Move X8, [X8+3688]
	056 Move X0, [X8]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move X0, X19
	062 Move X1, X31
	063 Call RemotingServices.GetMethodBaseFromMethodMessage, X0
	064 Move W9, [X10]
	065 Add W9, W9, 3
	066 Add X8, X8, W9
	067 Add X0, X8, 312
	068 Move X8, [X0]
	069 Move X1, [X0+8]
	070 Move X0, X20
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move [X19+40], X0
	073 Move X0, [X19+40]
	074 Move X20, [X31+16]
	075 Move X19, [X31+24]
	076 Move X30, [X31+32]
	077 Return X0

Method: System.String get_MethodName()

Disassembly:
	0x0329CF5C MOV X2, X31
	0x0329CF60 MOV X20, X1
	0x0329CF64 MOV X19, X0
	0x0329CF68 BL 0x33975F8
	0x0329CF6C MOV X1, X31
	0x0329CF70 MOV X2, X31
	0x0329CF74 MOV X21, X0
	0x0329CF78 BL 0x32C2354
	0x0329CF7C TBNZ X0, 0x0, 0x329CF94
	0x0329CF80 LDP X20, X19, [X31 + 0x10]
	0x0329CF84 MOV X0, X21
	0x0329CF88 LDP X30, X21, [X31], #0x20
	0x0329CF8C RET
	0x0329CF90 BL 0x1C16F20
	0x0329CF94 ADRP X0, 0xE88000
	0x0329CF98 LDR X0, [X0 + 0x9A8]
	0x0329CF9C BL 0x1C16D08
	0x0329CFA0 MOV X1, X20
	0x0329CFA4 MOV X2, X19
	0x0329CFA8 MOV X3, X31
	0x0329CFAC BL 0x3227BD4
	0x0329CFB0 MOV X19, X0
	0x0329CFB4 ADRP X0, 0xE5F000
	0x0329CFB8 LDR X0, [X0 + 0x578]
	0x0329CFBC BL 0x1C16D08
	0x0329CFC0 BL 0x1C16F10
	0x0329CFC4 MOV X20, X0
	0x0329CFC8 ADRP X0, 0xE60000
	0x0329CFCC LDR X0, [X0 + 0xE30]
	0x0329CFD0 BL 0x1C16D08
	0x0329CFD4 MOV X2, X0
	0x0329CFD8 MOV X0, X20
	0x0329CFDC MOV X1, X19
	0x0329CFE0 MOV X3, X31
	0x0329CFE4 BL 0x330E16C
	0x0329CFE8 ADRP X0, 0xE88000
	0x0329CFEC LDR X0, [X0 + 0x9B0]
	0x0329CFF0 BL 0x1C16D08
	0x0329CFF4 MOV X1, X0
	0x0329CFF8 MOV X0, X20
	0x0329CFFC BL 0x1C16DEC
	0x0329D000 STR X30, [X31 - 0x20]!
	0x0329D004 STP X20, X19, [X31 + 0x10]
	0x0329D008 MOV X20, X0
	0x0329D00C MOV X0, X1
	0x0329D010 MOV X1, X2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1141000
	005 Move W8, [X20+1837]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE89000
	012 Move X0, [X0+624]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1837], W8
	016 Move X0, [X19+16]
	017 Compare X0, 0
	018 JumpIfNotEqual {48}
	019 Move X20, [X19+96]
	020 Compare X20, 0
	021 JumpIfEqual {38}
	022 Move X10, 0xE89000
	023 Move X8, [X20]
	024 Move X10, [X10+624]
	025 NotImplemented "Instruction LDRH not yet implemented."
	026 Move X1, [X10]
	027 Compare X9, 0
	028 JumpIfEqual {35}
	029 Move X10, [X8+176]
	030 Add X10, X10, 8
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Subtract X9, X9, 1
	034 Add X10, X10, 16
	035 Move W2, 4
	036 Move X0, X20
	037 Call 0x1C5D788
	038 Move X0, X31
	039 Move W9, [X10]
	040 Add W9, W9, 4
	041 Add X8, X8, W9
	042 Add X0, X8, 312
	043 Move X8, [X0]
	044 Move X1, [X0+8]
	045 Move X0, X20
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Move [X19+16], X0
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Return X0

Method: System.Object get_MethodSignature()

Disassembly:
	0x0329D0CC LDP X30, X19, [X31], #0x10
	0x0329D0D0 RET
	0x0329D0D4 STR X30, [X31 - 0x20]!
	0x0329D0D8 STP X20, X19, [X31 + 0x10]
	0x0329D0DC ADRP X20, 0x113F000
	0x0329D0E0 LDRB W8, [X20 + 0x73E]
	0x0329D0E4 MOV X19, X0
	0x0329D0E8 TBNZ X8, 0x0, 0x329D100
	0x0329D0EC ADRP X0, 0xE86000
	0x0329D0F0 LDR X0, [X0 + 0xE68]
	0x0329D0F4 BL 0x1C16CF4
	0x0329D0F8 MOVZ W8, 0x1
	0x0329D0FC STRB W8, [X20 + 0x73E]
	0x0329D100 LDR W0, [X19 + 0x50]
	0x0329D104 CBNZ W0, 0x329D144
	0x0329D108 ADRP X8, 0xE86000
	0x0329D10C LDR X8, [X8 + 0xE68]
	0x0329D110 LDR X20, [X19 + 0x10]
	0x0329D114 LDR X0, [X8]
	0x0329D118 LDR W8, [X0 + 0xE0]
	0x0329D11C CBNZ W8, 0x329D124
	0x0329D120 BL 0x1C16DFC
	0x0329D124 MOV X0, X20
	0x0329D128 MOV X1, X31
	0x0329D12C BL 0x328051C
	0x0329D130 TBZ X0, 0x0, 0x329D140
	0x0329D134 MOVZ W0, 0x3
	0x0329D138 STR W0, [X19 + 0x50]
	0x0329D13C B 0x329D144
	0x0329D140 LDR W0, [X19 + 0x50]
	0x0329D144 LDP X20, X19, [X31 + 0x10]
	0x0329D148 LDR X30, [X31], #0x20
	0x0329D14C RET
	0x0329D150 LDR X0, [X0 + 0x18]
	0x0329D154 RET
	0x0329D158 LDR X0, [X0 + 0x30]
	0x0329D15C RET
	0x0329D160 STR X1, [X0 + 0x30]
	0x0329D164 RET
	0x0329D168 LDR X0, [X0 + 0x10]
	0x0329D16C RET
	0x0329D170 STR X30, [X31 - 0x20]!
	0x0329D174 STP X20, X19, [X31 + 0x10]
	0x0329D178 ADRP X20, 0x113F000
	0x0329D17C LDRB W8, [X20 + 0x73A]
	0x0329D180 MOV X19, X0
	0x0329D184 TBNZ X8, 0x0, 0x329D19C
	0x0329D188 ADRP X0, 0xE58000
	0x0329D18C LDR X0, [X0 + 0x278]
	0x0329D190 BL 0x1C16CF4
	0x0329D194 MOVZ W8, 0x1
	0x0329D198 STRB W8, [X20 + 0x73A]
	0x0329D19C LDR X1, [X19 + 0x10]
	0x0329D1A0 MOV X0, X31
	0x0329D1A4 MOV X2, X31
	0x0329D1A8 BL 0x32C2354
	0x0329D1AC TBZ X0, 0x0, 0x329D1D0
	0x0329D1B0 ADRP X8, 0xE58000
	0x0329D1B4 LDR X8, [X8 + 0x278]
	0x0329D1B8 LDP X20, X19, [X31 + 0x10]
	0x0329D1BC LDR X8, [X8]
	0x0329D1C0 LDR X8, [X8 + 0xB8]
	0x0329D1C4 LDR X0, [X8]
	0x0329D1C8 LDR X30, [X31], #0x20
	0x0329D1CC RET
	0x0329D1D0 LDR X0, [X19 + 0x10]
	0x0329D1D4 CBZ X0, 0x329D1EC
	0x0329D1D8 LDR X8, [X0]
	0x0329D1DC LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x1140000
	007 Move W8, [X20+1838]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xE88000
	014 Move X0, [X0+624]
	015 Call 0x1C17CF4
	016 Move X0, 0xE5F000
	017 Move X0, [X0+3168]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+1838], W8
	021 Move X0, [X19+64]
	022 Compare X0, 0
	023 JumpIfEqual {30}
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Return X0
	030 Move X20, [X19+96]
	031 Compare X20, 0
	032 JumpIfEqual {24}
	033 Move X10, 0xE88000
	034 Move X8, [X20]
	035 Move X10, [X10+624]
	036 NotImplemented "Instruction LDRH not yet implemented."
	037 Move X1, [X10]
	038 Compare X9, 0
	039 JumpIfEqual {46}
	040 Move X10, [X8+176]
	041 Add X10, X10, 8
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Subtract X9, X9, 1
	045 Add X10, X10, 16
	046 Move W2, 5
	047 Move X0, X20
	048 Call 0x1C5D788
	049 Move W9, [X10]
	050 Add W9, W9, 5
	051 Add X8, X8, W9
	052 Add X0, X8, 312
	053 Move X8, [X0]
	054 Move X1, [X0+8]
	055 Move X0, X20
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Compare X0, 0
	058 JumpIfEqual {75}
	059 Move X22, 0xE5F000
	060 Move X22, [X22+3168]
	061 Move X20, X0
	062 Move X21, [X22]
	063 Move X1, X21
	064 Call 0x1C17E00
	065 Compare X0, 0
	066 JumpIfEqual {76}
	067 Move [X19+64], X0
	068 Move X21, [X22]
	069 Move X0, X20
	070 Move X1, X21
	071 Call 0x1C17E00
	072 Compare X0, 0
	073 JumpIfEqual {76}
	074 Move X0, [X19+64]
	075 Move [X19+64], X31
	076 Move X0, X20
	077 Move X1, X21
	078 Call 0x1C181E0

Method: System.Object[] get_OutArgs()

Disassembly:
	0x0329D1E0 LDP X2, X1, [X8 + 0x1A8]
	0x0329D1E4 LDR X30, [X31], #0x20
	0x0329D1E8 BR X2
	0x0329D1EC BL 0x1C16F20
	0x0329D1F0 STP X30, X23, [X31 - 0x30]!
	0x0329D1F4 STP X22, X21, [X31 + 0x10]
	0x0329D1F8 STP X20, X19, [X31 + 0x20]
	0x0329D1FC ADRP X20, 0x113F000
	0x0329D200 LDRB W8, [X20 + 0x73B]
	0x0329D204 MOV X19, X0
	0x0329D208 TBNZ X8, 0x0, 0x329D220
	0x0329D20C ADRP X0, 0xE5E000
	0x0329D210 LDR X0, [X0 + 0xC60]
	0x0329D214 BL 0x1C16CF4
	0x0329D218 MOVZ W8, 0x1
	0x0329D21C STRB W8, [X20 + 0x73B]
	0x0329D220 LDR X21, [X19 + 0x70]
	0x0329D224 CBNZ X21, 0x329D2E8
	0x0329D228 LDR X0, [X19 + 0x10]
	0x0329D22C CBZ X0, 0x329D2FC
	0x0329D230 LDR X8, [X0]
	0x0329D234 LDR X9, [X8 + 0x248]
	0x0329D238 LDR X1, [X8 + 0x250]
	0x0329D23C BLR X9
	0x0329D240 CBZ X0, 0x329D2FC
	0x0329D244 ADRP X8, 0xE5E000
	0x0329D248 LDR X8, [X8 + 0xC60]
	0x0329D24C MOV X20, X0
	0x0329D250 LDR W1, [X20 + 0x18]
	0x0329D254 LDR X0, [X8]
	0x0329D258 BL 0x1C16D6C
	0x0329D25C STR X0, [X19 + 0x70]
	0x0329D260 LDR W8, [X20 + 0x18]
	0x0329D264 MOV X21, X0
	0x0329D268 CMP W8, 0x1
	0x0329D26C B.LT 0x329D2E8
	0x0329D270 MOVZ W23, 0x4
	0x0329D274 LDR X0, [X20, X23, LSL #3]
	0x0329D278 CBZ X0, 0x329D2FC
	0x0329D27C LDR X8, [X0]
	0x0329D280 LDP X9, X1, [X8 + 0x1D8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1140000
	006 Move W8, [X20+1839]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xE88000
	013 Move X0, [X0+2456]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1839], W8
	017 Move X0, [X19+88]
	018 Compare X0, 0
	019 JumpIfNotEqual {46}
	020 Move X8, [X19+80]
	021 Compare X8, 0
	022 JumpIfEqual {45}
	023 Move X20, [X19+72]
	024 Compare X20, 0
	025 JumpIfNotEqual {41}
	026 Move X0, X19
	027 Call MethodResponse.get_MethodBase, X0
	028 Move X8, 0xE88000
	029 Move X8, [X8+2456]
	030 Move X21, X0
	031 Move X8, [X8]
	032 Move X0, X8
	033 Call 0x1C17F10
	034 Move W2, 1
	035 Move X1, X21
	036 Move X20, X0
	037 Call ArgInfo..ctor, X0, X1, X2
	038 Move [X19+72], X20
	039 Compare X20, 0
	040 JumpIfEqual {51}
	041 Move X1, [X19+80]
	042 Move X0, X20
	043 Call ArgInfo.GetInOutArgs, X0, X1
	044 Move [X19+88], X0
	045 Move X0, X31
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Return X0
	051 Call 0x1C17F20

Method: System.Collections.IDictionary get_Properties()

Disassembly:
	0x032999E4 STP X22, X21, [X31 + 0x10]
	0x032999E8 STP X20, X19, [X31 + 0x20]
	0x032999EC ADRP X20, 0x1143000
	0x032999F0 LDRB W8, [X20 + 0x70C]
	0x032999F4 MOV X19, X0
	0x032999F8 TBNZ X8, 0x0, 0x3299A10
	0x032999FC ADRP X0, 0xE62000
	0x03299A00 LDR X0, [X0 + 0xC60]
	0x03299A04 BL 0x1C16CF4
	0x03299A08 MOVZ W8, 0x1
	0x03299A0C STRB W8, [X20 + 0x70C]
	0x03299A10 LDR X8, [X19 + 0x30]
	0x03299A14 CBNZ X8, 0x3299AE8
	0x03299A18 LDR X0, [X19 + 0x38]
	0x03299A1C MOV X1, X31
	0x03299A20 MOV X2, X31
	0x03299A24 BL 0x32CE114
	0x03299A28 TBZ X0, 0x0, 0x3299AE8
	0x03299A2C LDR X0, [X19 + 0x38]
	0x03299A30 CBZ X0, 0x3299AFC
	0x03299A34 LDR X8, [X0]
	0x03299A38 LDR X9, [X8 + 0x248]
	0x03299A3C LDR X1, [X8 + 0x250]
	0x03299A40 BLR X9
	0x03299A44 CBZ X0, 0x3299AFC
	0x03299A48 ADRP X8, 0xE62000
	0x03299A4C LDR X8, [X8 + 0xC60]
	0x03299A50 MOV X20, X0
	0x03299A54 LDR W1, [X20 + 0x18]
	0x03299A58 LDR X0, [X8]
	0x03299A5C BL 0x1C16D6C
	0x03299A60 STR X0, [X19 + 0x30]
	0x03299A64 LDR W8, [X20 + 0x18]
	0x03299A68 CMP W8, 0x1
	0x03299A6C B.LT 0x3299AE8
	0x03299A70 MOV X21, X0
	0x03299A74 MOVZ W23, 0x4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1144000
	005 Move W8, [X20+1840]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE8C000
	012 Move X0, [X0+2312]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1840], W8
	016 Move X20, [X19+120]
	017 Compare X20, 0
	018 JumpIfNotEqual {40}
	019 Move X8, 0xE8C000
	020 Move X8, [X8+2312]
	021 Move X0, [X8]
	022 Call 0x1C17F10
	023 Move X1, X19
	024 Move X20, X0
	025 Call MethodReturnDictionary..ctor, X0, X1
	026 Move [X19+120], X20
	027 Compare X20, 0
	028 JumpIfEqual {45}
	029 Move X0, [X20+16]
	030 Compare X0, 0
	031 JumpIfNotEqual {39}
	032 Move X8, [X20]
	033 Move X0, X20
	034 Move X9, [X8+584]
	035 Move X1, [X8+592]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move [X20+16], X0
	038 Move X20, [X19+120]
	039 Move [X19+128], X0
	040 Move X0, X20
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Return X0
	045 Call 0x1C17F20

Method: System.Object get_ReturnValue()

Disassembly:
	0x0329D380 CBZ X0, 0x329D39C
	0x0329D384 LDR X8, [X0]

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.String get_TypeName()

Disassembly:
	0x0329D014 MOV X19, X3
	0x0329D018 BL 0x329CF50
	0x0329D01C MOV X1, X0
	0x0329D020 MOV X0, X20
	0x0329D024 MOV X2, X19
	0x0329D028 LDP X20, X19, [X31 + 0x10]
	0x0329D02C MOV X3, X31
	0x0329D030 LDR X30, [X31], #0x20
	0x0329D034 B 0x329CE18
	0x0329D038 STR X30, [X31 - 0x20]!
	0x0329D03C STP X20, X19, [X31 + 0x10]
	0x0329D040 ADRP X20, 0x113F000
	0x0329D044 LDRB W8, [X20 + 0x739]
	0x0329D048 MOV X19, X0
	0x0329D04C TBNZ X8, 0x0, 0x329D064
	0x0329D050 ADRP X0, 0xE87000
	0x0329D054 LDR X0, [X0 + 0x968]
	0x0329D058 BL 0x1C16CF4
	0x0329D05C MOVZ W8, 0x1
	0x0329D060 STRB W8, [X20 + 0x739]
	0x0329D064 LDR X20, [X19 + 0x60]
	0x0329D068 CBNZ X20, 0x329D08C
	0x0329D06C ADRP X8, 0xE87000
	0x0329D070 LDR X8, [X8 + 0x968]
	0x0329D074 LDR X0, [X8]
	0x0329D078 BL 0x1C16F10
	0x0329D07C MOV X1, X19
	0x0329D080 MOV X20, X0
	0x0329D084 BL 0x3299B90
	0x0329D088 STR X20, [X19 + 0x60]
	0x0329D08C MOV X0, X20
	0x0329D090 LDP X20, X19, [X31 + 0x10]
	0x0329D094 LDR X30, [X31], #0x20
	0x0329D098 RET
	0x0329D09C STP X30, X19, [X31 - 0x10]!
	0x0329D0A0 MOV X19, X0
	0x0329D0A4 BL 0x329D0D4
	0x0329D0A8 CMP W0, 0x2
	0x0329D0AC B.NE 0x329D0B8
	0x0329D0B0 MOVN W0, 0x0
	0x0329D0B4 B 0x329D0CC
	0x0329D0B8 LDR X8, [X19 + 0x18]
	0x0329D0BC CBZ X8, 0x329D0C8
	0x0329D0C0 LDR W0, [X8 + 0x18]
	0x0329D0C4 B 0x329D0CC
	0x0329D0C8 MOV W0, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1140000
	005 Move W8, [X20+1841]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE88000
	012 Move X0, [X0+624]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1841], W8
	016 Move X0, [X19+32]
	017 Compare X0, 0
	018 JumpIfNotEqual {48}
	019 Move X20, [X19+96]
	020 Compare X20, 0
	021 JumpIfEqual {38}
	022 Move X10, 0xE88000
	023 Move X8, [X20]
	024 Move X10, [X10+624]
	025 NotImplemented "Instruction LDRH not yet implemented."
	026 Move X1, [X10]
	027 Compare X9, 0
	028 JumpIfEqual {35}
	029 Move X10, [X8+176]
	030 Add X10, X10, 8
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Subtract X9, X9, 1
	034 Add X10, X10, 16
	035 Move W2, 6
	036 Move X0, X20
	037 Call 0x1C5D788
	038 Move X0, X31
	039 Move W9, [X10]
	040 Add W9, W9, 6
	041 Add X8, X8, W9
	042 Add X0, X8, 312
	043 Move X8, [X0]
	044 Move X1, [X0+8]
	045 Move X0, X20
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Move [X19+32], X0
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Return X0

Method: System.String get_Uri()

Disassembly:
	0x0329D388 LDP X20, X19, [X31 + 0x10]
	0x0329D38C LDR X2, [X8 + 0x2D8]
	0x0329D390 LDR X1, [X8 + 0x2E0]
	0x0329D394 LDR X30, [X31], #0x20
	0x0329D398 BR X2
	0x0329D39C BL 0x1C16F20
	0x0329D3A0 LDR X0, [X0 + 0x58]
	0x0329D3A4 RET
	0x0329D3A8 STR X1, [X0 + 0x58]
	0x0329D3AC RET
	0x0329D3B0 STR X30, [X31 - 0x10]!
	0x0329D3B4 LDR X8, [X0 + 0x18]
	0x0329D3B8 CBZ X8, 0x329D3D4
	0x0329D3BC LDR W9, [X8 + 0x18]
	0x0329D3C0 CMP W9, W1
	0x0329D3C4 B.LS 0x329D3E0
	0x0329D3C8 ADD X8, X8, W1, 0x3, SXTW
	0x0329D3CC LDR X0, [X8 + 0x20]
	0x0329D3D0 B 0x329D3D8
	0x0329D3D4 MOV X0, X31
	0x0329D3D8 LDR X30, [X31], #0x10
	0x0329D3DC RET
	0x0329D3E0 BL 0x1C16F28
	0x0329D3E4 LDR X0, [X0 + 0x40]
	0x0329D3E8 RET
	0x0329D3EC STR X30, [X31 - 0x10]!
	0x0329D3F0 LDR X8, [X0 + 0x18]
	0x0329D3F4 CBZ X8, 0x329D43C
	0x0329D3F8 LDR X10, [X0 + 0x28]
	0x0329D3FC CBZ X10, 0x329D44C
	0x0329D400 LDR W8, [X10 + 0x18]
	0x0329D404 UBFM X9, X8, 0x20, 0x1F
	0x0329D408 CMP X9, 0x1
	0x0329D40C B.LT 0x329D43C
	0x0329D410 MOV W0, W31
	0x0329D414 SXTW X9, W8
	0x0329D418 ADD X10, X10, 0x20
	0x0329D41C CBZ X8, 0x329D448
	0x0329D420 LDRB W11, [X10], #0x1
	0x0329D424 SUB X9, X9, 0x1
	0x0329D428 SUB X8, X8, 0x1
	0x0329D42C UBFM W11, W11, 0x1, 0x1
	0x0329D430 ADD W0, W0, W11
	0x0329D434 CBNZ X9, 0x329D41C
	0x0329D438 B 0x329D440
	0x0329D43C MOV W0, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1140000
	005 Move W8, [X20+1842]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE88000
	012 Move X0, [X0+624]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1842], W8
	016 Move X0, [X19+24]
	017 Compare X0, 0
	018 JumpIfNotEqual {48}
	019 Move X20, [X19+96]
	020 Compare X20, 0
	021 JumpIfEqual {38}
	022 Move X10, 0xE88000
	023 Move X8, [X20]
	024 Move X10, [X10+624]
	025 NotImplemented "Instruction LDRH not yet implemented."
	026 Move X1, [X10]
	027 Compare X9, 0
	028 JumpIfEqual {35}
	029 Move X10, [X8+176]
	030 Add X10, X10, 8
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Subtract X9, X9, 1
	034 Add X10, X10, 16
	035 Move W2, 7
	036 Move X0, X20
	037 Call 0x1C5D788
	038 Move X0, X31
	039 Move W9, [X10]
	040 Add W9, W9, 7
	041 Add X8, X8, W9
	042 Add X0, X8, 312
	043 Move X8, [X0]
	044 Move X1, [X0+8]
	045 Move X0, X20
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Move [X19+24], X0
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Return X0

Method: System.Void set_Uri(System.String value)

Disassembly:
	0x0329D440 LDR X30, [X31], #0x10
	0x0329D444 RET

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.String System.Runtime.Remoting.Messaging.IInternalMessage.get_Uri()

Disassembly:
	0x0329D448 BL 0x1C16F28

ISIL:
	001 Call MethodResponse.get_Uri, X0
	002 Return X0

Method: System.Void System.Runtime.Remoting.Messaging.IInternalMessage.set_Uri(System.String value)

Disassembly:
	0x0329D44C BL 0x1C16F20
	0x0329D450 STP X30, X25, [X31 - 0x40]!

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.Object GetArg(System.Int32 argNum)

Disassembly:
	0x0329D454 STP X24, X23, [X31 + 0x10]
	0x0329D458 STP X22, X21, [X31 + 0x20]
	0x0329D45C STP X20, X19, [X31 + 0x30]
	0x0329D460 ADRP X20, 0x113F000
	0x0329D464 LDRB W8, [X20 + 0x73D]
	0x0329D468 MOV X19, X0
	0x0329D46C TBNZ X8, 0x0, 0x329D484
	0x0329D470 ADRP X0, 0xE56000
	0x0329D474 LDR X0, [X0 + 0x9D0]
	0x0329D478 BL 0x1C16CF4
	0x0329D47C MOVZ W8, 0x1
	0x0329D480 STRB W8, [X20 + 0x73D]
	0x0329D484 LDR X8, [X19 + 0x18]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+80]
	003 Compare X8, 0
	004 JumpIfEqual {9}
	005 Move W9, [X8+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Add X8, X8, W1
	008 Move X0, [X8+32]
	009 Move X0, X31
	010 Move X30, [X31+16]
	011 Return X0
	012 Call 0x1C17F28

Method: System.Void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x0329D488 CBZ X8, 0x329D548
	0x0329D48C ADRP X20, 0xE56000
	0x0329D490 LDR X20, [X20 + 0x9D0]
	0x0329D494 MOV X0, X19
	0x0329D498 BL 0x329D3EC
	0x0329D49C LDR X8, [X20]
	0x0329D4A0 MOV W1, W0
	0x0329D4A4 MOV X0, X8
	0x0329D4A8 BL 0x1C16D6C
	0x0329D4AC LDR X22, [X19 + 0x28]
	0x0329D4B0 CBZ X22, 0x329D568
	0x0329D4B4 LDR X8, [X22 + 0x18]
	0x0329D4B8 MOV X20, X0
	0x0329D4BC CMP W8, 0x1
	0x0329D4C0 B.LT 0x329D54C
	0x0329D4C4 MOV W24, W31
	0x0329D4C8 MOV X23, X31
	0x0329D4CC AND X8, X8, 0x0
	0x0329D4D0 ADD X25, X22, 0x20
	0x0329D4D4 CMP X23, W8, UXTW
	0x0329D4D8 B.CS 0x329D564
	0x0329D4DC LDRB W8, [X25, X23, LSL]
	0x0329D4E0 TBZ X8, 0x1, 0x329D534
	0x0329D4E4 LDR X8, [X19 + 0x18]
	0x0329D4E8 CBZ X8, 0x329D568
	0x0329D4EC LDR W9, [X8 + 0x18]
	0x0329D4F0 CMP X23, X9
	0x0329D4F4 B.CS 0x329D564
	0x0329D4F8 CBZ X20, 0x329D568
	0x0329D4FC ADD X8, X8, X23, 0x3, LSL
	0x0329D500 LDR X21, [X8 + 0x20]
	0x0329D504 CBZ X21, 0x329D51C
	0x0329D508 LDR X8, [X20]
	0x0329D50C MOV X0, X21
	0x0329D510 LDR X1, [X8 + 0x40]
	0x0329D514 BL 0x1C16E00
	0x0329D518 CBZ X0, 0x329D56C
	0x0329D51C LDR W8, [X20 + 0x18]
	0x0329D520 CMP W24, W8
	0x0329D524 B.CS 0x329D564
	0x0329D528 ADD X8, X20, W24, 0x3, SXTW
	0x0329D52C ADD W24, W24, 0x1
	0x0329D530 STR X21, [X8 + 0x20]
	0x0329D534 LDR W8, [X22 + 0x18]
	0x0329D538 ADD X23, X23, 0x1
	0x0329D53C CMP X23, W8, SXTW
	0x0329D540 B.LT 0x329D4D4
	0x0329D544 B 0x329D54C
	0x0329D548 MOV X20, X31
	0x0329D54C MOV X0, X20
	0x0329D550 LDP X20, X19, [X31 + 0x30]
	0x0329D554 LDP X22, X21, [X31 + 0x20]
	0x0329D558 LDP X24, X23, [X31 + 0x10]
	0x0329D55C LDP X30, X25, [X31], #0x40
	0x0329D560 RET
	0x0329D564 BL 0x1C16F28
	0x0329D568 BL 0x1C16F20
	0x0329D56C BL 0x1C16F44
	0x0329D570 MOV X1, X31
	0x0329D574 BL 0x1C16DEC
	0x0329D578 LDR X0, [X0 + 0x38]
	0x0329D57C RET
	0x0329D580 LDR X0, [X0 + 0x68]
	0x0329D584 RET
	0x0329D588 STR X1, [X0 + 0x68]
	0x0329D58C RET
	0x0329D590 LDR X0, [X0 + 0x48]
	0x0329D594 RET
	0x0329D598 STR X30, [X31 - 0x10]!
	0x0329D59C STR W31, [X1]
	0x0329D5A0 LDR X11, [X0 + 0x28]
	0x0329D5A4 CBZ X11, 0x329D620
	0x0329D5A8 LDR X9, [X11 + 0x18]
	0x0329D5AC MOV W8, W31
	0x0329D5B0 CMP W9, 0x1
	0x0329D5B4 B.LT 0x329D600
	0x0329D5B8 AND X10, X9, 0x0
	0x0329D5BC MOV W9, W8
	0x0329D5C0 CBZ X10, 0x329D604
	0x0329D5C4 MOV W9, W31
	0x0329D5C8 MOV W8, W31
	0x0329D5CC ADD X11, X11, 0x20
	0x0329D5D0 CBZ X10, 0x329D61C
	0x0329D5D4 LDRB W12, [X11]
	0x0329D5D8 TBNZ X12, 0x1, 0x329D5E8
	0x0329D5DC AND W12, W12, 0x4
	0x0329D5E0 ORR W9, W9, W12, 0x2
	0x0329D5E4 B 0x329D5F0
	0x0329D5E8 ADD W8, W8, 0x1
	0x0329D5EC STR W8, [X1]
	0x0329D5F0 SUBS X10, X10, 0x1
	0x0329D5F4 ADD X11, X11, 0x1
	0x0329D5F8 B.NE 0x329D5D0
	0x0329D5FC B 0x329D604
	0x0329D600 MOV W9, W8
	0x0329D604 CMP W8, 0x0
	0x0329D608 CSET W8, GT
	0x0329D60C ORR W8, W9, W8, 0x0
	0x0329D610 AND W0, W8, 0x1
	0x0329D614 LDR X30, [X31], #0x10
	0x0329D618 RET
	0x0329D61C BL 0x1C16F28
	0x0329D620 BL 0x1C16F20
	0x0329D624 STP X30, X23, [X31 - 0x30]!
	0x0329D628 STP X22, X21, [X31 + 0x10]
	0x0329D62C STP X20, X19, [X31 + 0x20]
	0x0329D630 ADRP X23, 0x113F000
	0x0329D634 LDRB W8, [X23 + 0x73F]
	0x0329D638 MOV X19, X4
	0x0329D63C MOV X20, X3
	0x0329D640 MOV X21, X2
	0x0329D644 MOV X22, X1
	0x0329D648 TBNZ X8, 0x0, 0x329D660
	0x0329D64C ADRP X0, 0xE86000
	0x0329D650 LDR X0, [X0 + 0xE68]
	0x0329D654 BL 0x1C16CF4
	0x0329D658 MOVZ W8, 0x1
	0x0329D65C STRB W8, [X23 + 0x73F]
	0x0329D660 CBZ X22, 0x329D6FC
	0x0329D664 CBZ X21, 0x329D6FC
	0x0329D668 ADRP X23, 0xE86000
	0x0329D66C LDR X23, [X23 + 0xE68]
	0x0329D670 LDR X0, [X23]
	0x0329D674 LDR W8, [X0 + 0xE0]
	0x0329D678 CBNZ W8, 0x329D680
	0x0329D67C BL 0x1C16DFC
	0x0329D680 MOV X0, X22
	0x0329D684 MOV X1, X31
	0x0329D688 BL 0x327DCFC
	0x0329D68C LDR X8, [X23]
	0x0329D690 MOV W23, W0
	0x0329D694 LDR W9, [X8 + 0xE0]
	0x0329D698 CBNZ W9, 0x329D6A4
	0x0329D69C MOV X0, X8
	0x0329D6A0 BL 0x1C16DFC
	0x0329D6A4 MOV X0, X22
	0x0329D6A8 TBZ X23, 0x0, 0x329D6DC
	0x0329D6AC MOV X1, X31
	0x0329D6B0 BL 0x327F2BC
	0x0329D6B4 CBZ X0, 0x329D730
	0x0329D6B8 LDR X8, [X0]
	0x0329D6BC MOV X1, X21
	0x0329D6C0 MOV X2, X20
	0x0329D6C4 MOV X3, X19
	0x0329D6C8 LDP X5, X4, [X8 + 0x178]
	0x0329D6CC LDP X20, X19, [X31 + 0x20]
	0x0329D6D0 LDP X22, X21, [X31 + 0x10]
	0x0329D6D4 LDP X30, X23, [X31], #0x30
	0x0329D6D8 BR X5
	0x0329D6DC MOV X1, X21
	0x0329D6E0 MOV X2, X20
	0x0329D6E4 MOV X3, X19
	0x0329D6E8 LDP X20, X19, [X31 + 0x20]
	0x0329D6EC LDP X22, X21, [X31 + 0x10]
	0x0329D6F0 MOV X4, X31
	0x0329D6F4 LDP X30, X23, [X31], #0x30
	0x0329D6F8 B 0x3280470
	0x0329D6FC ADRP X0, 0xE5B000
	0x0329D700 LDR X0, [X0 + 0x528]
	0x0329D704 BL 0x1C16D08
	0x0329D708 BL 0x1C16F10
	0x0329D70C MOV X1, X31
	0x0329D710 MOV X19, X0
	0x0329D714 BL 0x3315F20
	0x0329D718 ADRP X0, 0xE87000
	0x0329D71C LDR X0, [X0 + 0x9B8]
	0x0329D720 BL 0x1C16D08
	0x0329D724 MOV X1, X0
	0x0329D728 MOV X0, X19
	0x0329D72C BL 0x1C16DEC
	0x0329D730 BL 0x1C16F20
	0x0329D734 STP X30, X19, [X31 - 0x10]!
	0x0329D738 ADRP X0, 0xE56000
	0x0329D73C LDR X0, [X0 + 0xB40]
	0x0329D740 BL 0x1C16D08
	0x0329D744 BL 0x1C16F10
	0x0329D748 MOV X1, X31
	0x0329D74C MOV X19, X0
	0x0329D750 BL 0x3380310
	0x0329D754 ADRP X0, 0xE87000
	0x0329D758 LDR X0, [X0 + 0x9C0]
	0x0329D75C BL 0x1C16D08
	0x0329D760 MOV X1, X0
	0x0329D764 MOV X0, X19
	0x0329D768 BL 0x1C16DEC
	0x0329D76C MOV X1, X31
	0x0329D770 B 0x33BDD8C
	0x0329D774 STP X30, X23, [X31 - 0x30]!
	0x0329D778 STP X22, X21, [X31 + 0x10]
	0x0329D77C STP X20, X19, [X31 + 0x20]
	0x0329D780 ADRP X23, 0x113F000
	0x0329D784 LDRB W8, [X23 + 0x740]
	0x0329D788 MOV X20, X4
	0x0329D78C MOV X21, X3
	0x0329D790 MOV X19, X2
	0x0329D794 MOV X22, X1
	0x0329D798 TBNZ X8, 0x0, 0x329D7BC
	0x0329D79C ADRP X0, 0xE86000
	0x0329D7A0 LDR X0, [X0 + 0xDD0]
	0x0329D7A4 BL 0x1C16CF4
	0x0329D7A8 ADRP X0, 0xE86000
	0x0329D7AC LDR X0, [X0 + 0xE20]
	0x0329D7B0 BL 0x1C16CF4
	0x0329D7B4 MOVZ W8, 0x1
	0x0329D7B8 STRB W8, [X23 + 0x740]
	0x0329D7BC CBZ X22, 0x329D844
	0x0329D7C0 CBZ X19, 0x329D844
	0x0329D7C4 ADRP X9, 0xE86000
	0x0329D7C8 LDR X9, [X9 + 0xDD0]
	0x0329D7CC LDR X8, [X22]
	0x0329D7D0 LDR X1, [X9]
	0x0329D7D4 LDRB W10, [X8 + 0x130]
	0x0329D7D8 LDRB W9, [X1 + 0x130]
	0x0329D7DC CMP W10, W9
	0x0329D7E0 B.CC 0x329D83C
	0x0329D7E4 LDR X10, [X8 + 0xC8]
	0x0329D7E8 ADD X9, X10, X9, 0x3, LSL
	0x0329D7EC LDUR X9, [X9 - 0x8]
	0x0329D7F0 CMP X9, X1
	0x0329D7F4 B.NE 0x329D83C
	0x0329D7F8 LDR X9, [X8 + 0x208]
	0x0329D7FC LDR X4, [X8 + 0x210]
	0x0329D800 ADRP X23, 0xE86000
	0x0329D804 LDR X23, [X23 + 0xE20]
	0x0329D808 MOV X0, X22
	0x0329D80C MOV X1, X19
	0x0329D810 MOV X2, X21
	0x0329D814 MOV X3, X20
	0x0329D818 BLR X9
	0x0329D81C LDR X1, [X23]
	0x0329D820 MOV X0, X19
	0x0329D824 LDP X20, X19, [X31 + 0x20]
	0x0329D828 LDP X22, X21, [X31 + 0x10]
	0x0329D82C MOV W2, W31
	0x0329D830 MOV X3, X31
	0x0329D834 LDP X30, X23, [X31], #0x30
	0x0329D838 B 0x32A8F28
	0x0329D83C MOV X0, X22
	0x0329D840 BL 0x1C171E0
	0x0329D844 ADRP X0, 0xE5B000
	0x0329D848 LDR X0, [X0 + 0x528]
	0x0329D84C BL 0x1C16D08
	0x0329D850 BL 0x1C16F10
	0x0329D854 MOV X1, X31
	0x0329D858 MOV X19, X0
	0x0329D85C BL 0x3315F20
	0x0329D860 ADRP X0, 0xE87000
	0x0329D864 LDR X0, [X0 + 0x9C8]
	0x0329D868 BL 0x1C16D08
	0x0329D86C MOV X1, X0
	0x0329D870 MOV X0, X19
	0x0329D874 BL 0x1C16DEC
	0x0329D878 STP X30, X19, [X31 - 0x10]!
	0x0329D87C ADRP X0, 0xE56000
	0x0329D880 LDR X0, [X0 + 0xB40]
	0x0329D884 BL 0x1C16D08
	0x0329D888 BL 0x1C16F10
	0x0329D88C MOV X19, X0
	0x0329D890 ADRP X0, 0xE87000
	0x0329D894 LDR X0, [X0 + 0x9D0]
	0x0329D898 BL 0x1C16D08
	0x0329D89C MOV X1, X0
	0x0329D8A0 MOV X0, X19
	0x0329D8A4 MOV X2, X31
	0x0329D8A8 BL 0x3379A44
	0x0329D8AC ADRP X0, 0xE87000
	0x0329D8B0 LDR X0, [X0 + 0x9D8]
	0x0329D8B4 BL 0x1C16D08
	0x0329D8B8 MOV X1, X0
	0x0329D8BC MOV X0, X19
	0x0329D8C0 BL 0x1C16DEC
	0x0329D8C4 MOV X1, X31
	0x0329D8C8 B 0x33BDD8C
	0x0329D8CC STR X30, [X31 - 0x40]!
	0x0329D8D0 STP X24, X23, [X31 + 0x10]
	0x0329D8D4 STP X22, X21, [X31 + 0x20]
	0x0329D8D8 STP X20, X19, [X31 + 0x30]
	0x0329D8DC ADRP X24, 0x113F000
	0x0329D8E0 LDRB W8, [X24 + 0x741]
	0x0329D8E4 MOV X19, X4
	0x0329D8E8 MOV X20, X3
	0x0329D8EC MOV X21, X2
	0x0329D8F0 MOV X22, X1
	0x0329D8F4 MOV X23, X0
	0x0329D8F8 TBNZ X8, 0x0, 0x329D91C
	0x0329D8FC ADRP X0, 0xE87000
	0x0329D900 LDR X0, [X0 + 0x9E0]
	0x0329D904 BL 0x1C16CF4
	0x0329D908 ADRP X0, 0xE87000
	0x0329D90C LDR X0, [X0 + 0x238]
	0x0329D910 BL 0x1C16CF4
	0x0329D914 MOVZ W8, 0x1
	0x0329D918 STRB W8, [X24 + 0x741]
	0x0329D91C CBZ X22, 0x329DA64
	0x0329D920 MOV X0, X22
	0x0329D924 MOV X1, X31
	0x0329D928 BL 0x33972D4
	0x0329D92C TBZ X0, 0x0, 0x329D95C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x1140000
	009 Move W8, [X21+1843]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {57}
	016 Move X0, 0xE5F000
	017 Move X0, [X0+3856]
	018 Call 0x1C17CF4
	019 Move X0, 0xE57000
	020 Move X0, [X0+2072]
	021 Call 0x1C17CF4
	022 Move X0, 0xE57000
	023 Move X0, [X0+3584]
	024 Call 0x1C17CF4
	025 Move X0, 0xE57000
	026 Move X0, [X0+3608]
	027 Call 0x1C17CF4
	028 Move X0, 0xE59000
	029 Move X0, [X0+632]
	030 Call 0x1C17CF4
	031 Move X0, 0xE88000
	032 Move X0, [X0+2448]
	033 Call 0x1C17CF4
	034 Move X0, 0xE88000
	035 Move X0, [X0+2248]
	036 Call 0x1C17CF4
	037 Move X0, 0xE88000
	038 Move X0, [X0+2256]
	039 Call 0x1C17CF4
	040 Move X0, 0xE7E000
	041 Move X0, [X0+736]
	042 Call 0x1C17CF4
	043 Move X0, 0xE88000
	044 Move X0, [X0+2264]
	045 Call 0x1C17CF4
	046 Move X0, 0xE88000
	047 Move X0, [X0+2280]
	048 Call 0x1C17CF4
	049 Move X0, 0xE88000
	050 Move X0, [X0+2288]
	051 Call 0x1C17CF4
	052 Move X0, 0xE88000
	053 Move X0, [X0+2272]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X21+1843], W8
	057 Move X2, [X20+56]
	058 Compare X2, 0
	059 JumpIfEqual {64}
	060 Compare X19, 0
	061 JumpIfEqual {261}
	062 Move X8, 0xE88000
	063 Move X8, [X8+2448]
	064 Compare X19, 0
	065 JumpIfEqual {261}
	066 Move X8, 0xE7E000
	067 Move X2, [X20+32]
	068 Move X8, [X8+736]
	069 Move X0, X19
	070 Move X3, X31
	071 Move X1, [X8]
	072 Call SerializationInfo.AddValue, X0, X1, X2
	073 Move X8, 0xE88000
	074 Move X2, [X20+16]
	075 Move X8, [X8+2264]
	076 Move X0, X19
	077 Move X3, X31
	078 Move X1, [X8]
	079 Call SerializationInfo.AddValue, X0, X1, X2
	080 Move X8, 0xE88000
	081 Move X2, [X20+64]
	082 Move X8, [X8+2256]
	083 Move X0, X19
	084 Move X3, X31
	085 Move X1, [X8]
	086 Call SerializationInfo.AddValue, X0, X1, X2
	087 Move X8, 0xE88000
	088 Move X2, [X20+24]
	089 Move X8, [X8+2248]
	090 Move X0, X19
	091 Move X3, X31
	092 Move X1, [X8]
	093 Call SerializationInfo.AddValue, X0, X1, X2
	094 Move X8, 0xE88000
	095 Move X2, [X20+48]
	096 Move X8, [X8+2288]
	097 Move X0, X19
	098 Move X3, X31
	099 Move X1, [X8]
	100 Call SerializationInfo.AddValue, X0, X1, X2
	101 Move X8, 0xE88000
	102 Move X2, [X20+80]
	103 Move X8, [X8+2280]
	104 Move X1, [X8]
	105 Move X21, 0xE88000
	106 Move X21, [X21+2272]
	107 Move X0, X19
	108 Move X3, X31
	109 Call SerializationInfo.AddValue, X0, X1, X2
	110 Move X2, [X20+104]
	111 Move X1, [X21]
	112 Move X0, X19
	113 Move X3, X31
	114 Call SerializationInfo.AddValue, X0, X1, X2
	115 Move X20, [X20+128]
	116 Compare X20, 0
	117 JumpIfEqual {248}
	118 Move X10, 0xE57000
	119 Move X8, [X20]
	120 Move X10, [X10+2072]
	121 NotImplemented "Instruction LDRH not yet implemented."
	122 Move X1, [X10]
	123 Compare X9, 0
	124 JumpIfEqual {131}
	125 Move X10, [X8+176]
	126 Add X10, X10, 8
	127 NotImplemented "Instruction LDUR not yet implemented."
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Subtract X9, X9, 1
	130 Add X10, X10, 16
	131 Move W2, 6
	132 Move X0, X20
	133 Call 0x1C5D788
	134 Move W9, [X10]
	135 Add W9, W9, 6
	136 Add X8, X8, W9
	137 Add X0, X8, 312
	138 Move X8, [X0]
	139 Move X1, [X0+8]
	140 Move X21, 0xE57000
	141 Move X21, [X21+3584]
	142 Move X0, X20
	143 NotImplemented "Instruction BLR not yet implemented."
	144 Move X20, X0
	145 Compare X0, 0
	146 JumpIfEqual {262}
	147 Move X22, 0xE57000
	148 Move X23, 0xE5F000
	149 Move X24, 0xE59000
	150 Move X22, [X22+3608]
	151 Move X23, [X23+3856]
	152 Move X24, [X24+632]
	153 Move X8, [X20]
	154 Move X1, [X22]
	155 NotImplemented "Instruction LDRH not yet implemented."
	156 Compare X9, 0
	157 JumpIfEqual {164}
	158 Move X10, [X8+176]
	159 Add X10, X10, 8
	160 NotImplemented "Instruction LDUR not yet implemented."
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Subtract X9, X9, 1
	163 Add X10, X10, 16
	164 Move X0, X20
	165 Move W2, W31
	166 Call 0x1C5D788
	167 NotImplemented "Instruction LDRSW not yet implemented."
	168 Add X8, X8, X9
	169 Add X0, X8, 312
	170 Move X8, [X0]
	171 Move X1, [X0+8]
	172 Move X0, X20
	173 NotImplemented "Instruction BLR not yet implemented."
	174 Move TEMP, X0
	175 And TEMP, TEMP, 1
	176 Compare TEMP, 1
	177 JumpIfNotEqual {218}
	178 Move X8, [X20]
	179 Move X1, [X22]
	180 NotImplemented "Instruction LDRH not yet implemented."
	181 Compare X9, 0
	182 JumpIfEqual {189}
	183 Move X10, [X8+176]
	184 Add X10, X10, 8
	185 NotImplemented "Instruction LDUR not yet implemented."
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Subtract X9, X9, 1
	188 Add X10, X10, 16
	189 Move W2, 1
	190 Move X0, X20
	191 Call 0x1C5D788
	192 Move W9, [X10]
	193 Add W9, W9, 1
	194 Add X8, X8, W9
	195 Add X0, X8, 312
	196 Move X8, [X0]
	197 Move X1, [X0+8]
	198 Move X0, X20
	199 NotImplemented "Instruction BLR not yet implemented."
	200 Compare X0, 0
	201 JumpIfEqual {256}
	202 Move X8, [X0]
	203 Move X1, [X23]
	204 Move X8, [X8+64]
	205 Move X9, [X1+64]
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Call 0x1C17E08
	208 Move X1, [X0]
	209 Move X2, [X0+8]
	210 Compare X1, 0
	211 JumpIfEqual {215}
	212 Move X8, [X24]
	213 Move X9, [X1]
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Move X0, X19
	216 Move X3, X31
	217 Call SerializationInfo.AddValue, X0, X1, X2
	218 Move X19, X31
	219 Move X1, [X21]
	220 Move X0, X20
	221 Call 0x1C17E00
	222 Compare X0, 0
	223 JumpIfEqual {246}
	224 Move X8, [X0]
	225 Move X1, [X21]
	226 Move X20, X0
	227 NotImplemented "Instruction LDRH not yet implemented."
	228 Compare X9, 0
	229 JumpIfEqual {236}
	230 Move X10, [X8+176]
	231 Add X10, X10, 8
	232 NotImplemented "Instruction LDUR not yet implemented."
	233 NotImplemented "Instruction CMP not yet implemented."
	234 Subtract X9, X9, 1
	235 Add X10, X10, 16
	236 Move X0, X20
	237 Move W2, W31
	238 Call 0x1C5D788
	239 NotImplemented "Instruction LDRSW not yet implemented."
	240 Add X8, X8, X9
	241 Add X0, X8, 312
	242 Move X8, [X0]
	243 Move X1, [X0+8]
	244 Move X0, X20
	245 NotImplemented "Instruction BLR not yet implemented."
	246 Compare X19, 0
	247 JumpIfNotEqual {263}
	248 Move X20, [X31+48]
	249 Move X19, [X31+56]
	250 Move X22, [X31+32]
	251 Move X21, [X31+40]
	252 Move X24, [X31+16]
	253 Move X23, [X31+24]
	254 Move X30, [X31+64]
	255 Return 
	256 Call 0x1C17F20
	257 Call 0x1C181E0
	258 Move X0, X1
	259 Move X1, X8
	260 Call 0x1C181E0
	261 Call 0x1C17F20
	262 Call 0x1C17F20
	263 Move X0, X19
	264 Call 0x1C17F18
	265 NotImplemented "Instruction CMP not yet implemented."
	266 Call 0x3EB2AD0
	267 Move X19, [X0]
	268 Call 0x3EB2AE0
	269 Move [X31+8], X0
	270 Move X19, X31
	271 Move [X31+8], X0
	272 Move X1, [X21]
	273 Move X0, X20
	274 Call 0x1C17E00
	275 Move X20, X0
	276 Compare X0, 0
	277 JumpIfEqual {299}
	278 Move X8, [X20]
	279 Move X1, [X21]
	280 NotImplemented "Instruction LDRH not yet implemented."
	281 Compare X9, 0
	282 JumpIfEqual {289}
	283 Move X10, [X8+176]
	284 Add X10, X10, 8
	285 NotImplemented "Instruction LDUR not yet implemented."
	286 NotImplemented "Instruction CMP not yet implemented."
	287 Subtract X9, X9, 1
	288 Add X10, X10, 16
	289 Move X0, X20
	290 Move W2, W31
	291 Call 0x1C5D788
	292 NotImplemented "Instruction LDRSW not yet implemented."
	293 Add X8, X8, X9
	294 Add X0, X8, 312
	295 Move X8, [X0]
	296 Move X1, [X0+8]
	297 Move X0, X20
	298 NotImplemented "Instruction BLR not yet implemented."
	299 Compare X19, 0
	300 JumpIfNotEqual {303}
	301 Move X0, [X31+8]
	302 Call 0x1D2D690
	303 Move X0, X19
	304 Call 0x1C17F18
	305 Call 0x1991590

Method: System.Runtime.Remoting.Identity System.Runtime.Remoting.Messaging.IInternalMessage.get_TargetIdentity()

Disassembly:
	0x0329D930 STR X23, [X19]
	0x0329D934 ADRP X19, 0xE87000

ISIL:
	001 Move X0, [X0+112]
	002 Return X0

Method: System.Void System.Runtime.Remoting.Messaging.IInternalMessage.set_TargetIdentity(System.Runtime.Remoting.Identity value)

Disassembly:
	0x0329D938 LDR X19, [X19 + 0x238]
	0x0329D93C LDR X0, [X19]

ISIL:
	001 Move [X0+112], X1
	002 Return 

