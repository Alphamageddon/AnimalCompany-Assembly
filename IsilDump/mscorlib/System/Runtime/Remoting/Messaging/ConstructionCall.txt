Type: System.Runtime.Remoting.Messaging.ConstructionCall

Method: System.Void .ctor(System.Type type)

Disassembly:
	0x032906CC B 0x32906DC
	0x032906D0 LDRSW X9, [X10]
	0x032906D4 ADD X8, X8, X9, 0x4, LSL
	0x032906D8 ADD X0, X8, 0x138
	0x032906DC LDP X8, X1, [X0]
	0x032906E0 ADRP X23, 0xE63000
	0x032906E4 LDR X23, [X23 + 0xE00]
	0x032906E8 MOV X0, X19
	0x032906EC BLR X8
	0x032906F0 MOV X19, X0
	0x032906F4 CBZ X0, 0x329092C
	0x032906F8 ADRP X24, 0xE63000
	0x032906FC ADRP X25, 0xE94000
	0x03290700 ADRP X26, 0xE6A000
	0x03290704 LDR X24, [X24 + 0xE18]
	0x03290708 LDR X25, [X25 + 0x5D8]
	0x0329070C LDR X26, [X26 + 0x2F8]
	0x03290710 LDR X8, [X19]
	0x03290714 LDR X1, [X24]
	0x03290718 LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X1
	005 Move X1, X31
	006 Move X19, X0
	007 Call Object..ctor, X0
	008 Move [X19+128], X20
	009 Compare X20, 0
	010 JumpIfEqual {23}
	011 Move X8, [X20]
	012 Move X0, X20
	013 Move X9, [X8+728]
	014 Move X1, [X8+736]
	015 NotImplemented "Instruction BLR not yet implemented."
	016 Move W8, 1
	017 Move [X19+136], X0
	018 Move [X19+144], W8
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X30, [X31+32]
	022 Return 
	023 Call 0x1C17F20

Method: System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x03297610 SUBS X9, X9, 0x1

ISIL:
No ISIL was generated
Method: System.Void InitDictionary()

Disassembly:
	0x032976C0 RET
	0x032976C4 STR X1, [X0 + 0x98]
	0x032976C8 RET
	0x032976CC STR X30, [X31 - 0x20]!
	0x032976D0 STP X20, X19, [X31 + 0x10]
	0x032976D4 MOV X19, X1
	0x032976D8 MOV X1, X31
	0x032976DC MOV X20, X0
	0x032976E0 BL 0x33BDD8C
	0x032976E4 STR X19, [X20 + 0x18]
	0x032976E8 LDP X20, X19, [X31 + 0x10]
	0x032976EC LDR X30, [X31], #0x20
	0x032976F0 RET
	0x032976F4 STR X30, [X31 - 0x30]!
	0x032976F8 STP X22, X21, [X31 + 0x10]
	0x032976FC STP X20, X19, [X31 + 0x20]
	0x03297700 ADRP X21, 0x1145000
	0x03297704 ADRP X22, 0xE8D000
	0x03297708 LDRB W8, [X21 + 0x6FE]
	0x0329770C LDR X22, [X22 + 0x890]
	0x03297710 MOV X20, X1
	0x03297714 MOV X19, X0
	0x03297718 TBNZ X8, 0x0, 0x329776C
	0x0329771C ADRP X0, 0xE8D000
	0x03297720 LDR X0, [X0 + 0x5D8]
	0x03297724 BL 0x1C16CF4
	0x03297728 ADRP X0, 0xE8D000
	0x0329772C LDR X0, [X0 + 0x898]
	0x03297730 BL 0x1C16CF4
	0x03297734 ADRP X0, 0xE8D000
	0x03297738 LDR X0, [X0 + 0x8A0]
	0x0329773C BL 0x1C16CF4
	0x03297740 ADRP X0, 0xE8D000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1146000
	006 Move X21, 0xE8E000
	007 Move W8, [X20+1784]
	008 Move X21, [X21+2176]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE8E000
	015 Move X0, [X0+2176]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1784], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X19
	022 Move X20, X0
	023 Call ConstructionCallDictionary..ctor, X0, X1
	024 Move [X19+88], X20
	025 Compare X20, 0
	026 JumpIfEqual {42}
	027 Move X0, [X20+16]
	028 Compare X0, 0
	029 JumpIfNotEqual {36}
	030 Move X8, [X20]
	031 Move X0, X20
	032 Move X9, [X8+584]
	033 Move X1, [X8+592]
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move [X20+16], X0
	036 Move [X19+96], X0
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return 
	042 Call 0x1C17F20

Method: System.Boolean get_IsContextOk()

Disassembly:
	0x032977F0 ADRP X8, 0xE8D000
	0x032977F4 LDR X8, [X8 + 0x8A8]

ISIL:
	001 Move W0, [X0+144]
	002 Return X0

Method: System.Void set_IsContextOk(System.Boolean value)

Disassembly:
	0x032977F8 MOV X0, X20
	0x032977FC MOV X2, X31
	0x03297800 LDR X1, [X8]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+144], W8
	003 Return 

Method: System.Type get_ActivationType()

Disassembly:
	0x03297804 BL 0x321BA08
	0x03297808 TBZ X0, 0x0, 0x3297888
	0x0329780C LDR X21, [X19 + 0x18]
	0x03297810 CBZ X21, 0x3297AA4
	0x03297814 ADRP X20, 0xE8D000
	0x03297818 LDR X20, [X20 + 0x5D8]
	0x0329781C MOV X0, X21
	0x03297820 LDR X19, [X20]
	0x03297824 MOV X1, X19
	0x03297828 BL 0x1C16E00
	0x0329782C CBZ X0, 0x3297AA8
	0x03297830 LDR X20, [X20]
	0x03297834 MOV X0, X21
	0x03297838 MOV X1, X20
	0x0329783C BL 0x1C16E00
	0x03297840 CBZ X0, 0x3297AB4
	0x03297844 LDR X8, [X0]
	0x03297848 MOV X19, X0
	0x0329784C LDRH W9, [X8 + 0x12E]
	0x03297850 CBZ X9, 0x3297874
	0x03297854 LDR X10, [X8 + 0xB0]
	0x03297858 ADD X10, X10, 0x8
	0x0329785C LDUR X11, [X10 - 0x8]
	0x03297860 CMP X11, X20
	0x03297864 B.EQ 0x32979B4
	0x03297868 SUBS X9, X9, 0x1
	0x0329786C ADD X10, X10, 0x10
	0x03297870 B.NE 0x329785C
	0x03297874 MOVZ W2, 0x4
	0x03297878 MOV X0, X19
	0x0329787C MOV X1, X20
	0x03297880 BL 0x1C5C788
	0x03297884 B 0x3297A8C
	0x03297888 ADRP X8, 0xE8D000
	0x0329788C LDR X8, [X8 + 0x8B0]
	0x03297890 MOV X0, X20
	0x03297894 MOV X2, X31
	0x03297898 LDR X1, [X8]
	0x0329789C BL 0x321BA08
	0x032978A0 TBZ X0, 0x0, 0x3297928
	0x032978A4 LDR X21, [X19 + 0x18]
	0x032978A8 CBZ X21, 0x3297AA4
	0x032978AC ADRP X20, 0xE8D000
	0x032978B0 LDR X20, [X20 + 0x5D8]
	0x032978B4 MOV X0, X21
	0x032978B8 LDR X19, [X20]
	0x032978BC MOV X1, X19
	0x032978C0 BL 0x1C16E00
	0x032978C4 CBZ X0, 0x3297AA8
	0x032978C8 LDR X20, [X20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x1146000
	007 Move X21, 0xE5D000
	008 Move W8, [X20+1785]
	009 Move X21, [X21+1728]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0xE8E000
	016 Move X0, [X0+2184]
	017 Call 0x1C17CF4
	018 Move X0, 0xE86000
	019 Move X0, [X0+432]
	020 Call 0x1C17CF4
	021 Move X0, 0xE5D000
	022 Move X0, [X0+1728]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+1785], W8
	026 Move X0, [X21]
	027 Move X20, [X19+128]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X20
	033 Move X1, X31
	034 Move X2, X31
	035 Call Type.op_Equality, X0, X1
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {55}
	040 Move X0, [X21]
	041 Move X22, 0xE86000
	042 Move X21, 0xE8E000
	043 Move X20, [X19+136]
	044 Move W8, [X0+224]
	045 Move X22, [X22+432]
	046 Move X21, [X21+2184]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X1, [X22]
	051 Move X2, [X21]
	052 Move X0, X20
	053 Call 0x1C1803C
	054 Move [X19+128], X0
	055 Move X0, [X19+128]
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X22, [X31+16]
	059 Move X21, [X31+24]
	060 Move X30, [X31+48]
	061 Return X0

Method: System.String get_ActivationTypeName()

Disassembly:
	0x032978CC MOV X0, X21
	0x032978D0 MOV X1, X20

ISIL:
	001 Move X0, [X0+136]
	002 Return X0

Method: System.Runtime.Remoting.Activation.IActivator get_Activator()

Disassembly:
	0x032978D4 BL 0x1C16E00
	0x032978D8 CBZ X0, 0x3297AB4

ISIL:
	001 Move X0, [X0+104]
	002 Return X0

Method: System.Void set_Activator(System.Runtime.Remoting.Activation.IActivator value)

Disassembly:
	0x032978DC LDR X8, [X0]
	0x032978E0 MOV X19, X0

ISIL:
	001 Move [X0+104], X1
	002 Return 

Method: System.Object[] get_CallSiteActivationAttributes()

Disassembly:
	0x032978E4 LDRH W9, [X8 + 0x12E]
	0x032978E8 CBZ X9, 0x329790C

ISIL:
	001 Move X0, [X0+112]
	002 Return X0

Method: System.Void SetActivationAttributes(System.Object[] attributes)

Disassembly:
	0x032978EC LDR X10, [X8 + 0xB0]
	0x032978F0 ADD X10, X10, 0x8

ISIL:
	001 Move [X0+112], X1
	002 Return 

Method: System.Collections.IList get_ContextProperties()

Disassembly:
	0x032978F4 LDUR X11, [X10 - 0x8]
	0x032978F8 CMP X11, X20
	0x032978FC B.EQ 0x3297A4C
	0x03297900 SUBS X9, X9, 0x1
	0x03297904 ADD X10, X10, 0x10
	0x03297908 B.NE 0x32978F4
	0x0329790C MOV X0, X19
	0x03297910 MOV X1, X20
	0x03297914 MOV W2, W31
	0x03297918 B 0x3297880
	0x0329791C LDR W9, [X10]
	0x03297920 ADD W9, W9, 0x2
	0x03297924 B 0x3297A84
	0x03297928 ADRP X8, 0xE8D000
	0x0329792C LDR X8, [X8 + 0x8A0]
	0x03297930 MOV X0, X20
	0x03297934 MOV X2, X31
	0x03297938 LDR X1, [X8]
	0x0329793C BL 0x321BA08
	0x03297940 TBZ X0, 0x0, 0x32979C0
	0x03297944 LDR X21, [X19 + 0x18]
	0x03297948 CBZ X21, 0x3297AA4
	0x0329794C ADRP X20, 0xE8D000
	0x03297950 LDR X20, [X20 + 0x5D8]
	0x03297954 MOV X0, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1146000
	005 Move W8, [X20+1786]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE8A000
	012 Move X0, [X0+2976]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1786], W8
	016 Move X20, [X19+120]
	017 Compare X20, 0
	018 JumpIfNotEqual {27}
	019 Move X8, 0xE8A000
	020 Move X8, [X8+2976]
	021 Move X0, [X8]
	022 Call 0x1C17F10
	023 Move X1, X31
	024 Move X20, X0
	025 Call ArrayList..ctor, X0
	026 Move [X19+120], X20
	027 Move X0, X20
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Return X0

Method: System.Void InitMethodProperty(System.String key, System.Object value)

Disassembly:
	0x03297958 LDR X19, [X20]
	0x0329795C MOV X1, X19
	0x03297960 BL 0x1C16E00
	0x03297964 CBZ X0, 0x3297AA8
	0x03297968 LDR X20, [X20]
	0x0329796C MOV X0, X21
	0x03297970 MOV X1, X20
	0x03297974 BL 0x1C16E00
	0x03297978 CBZ X0, 0x3297AB4
	0x0329797C LDR X8, [X0]
	0x03297980 MOV X19, X0
	0x03297984 LDRH W9, [X8 + 0x12E]
	0x03297988 CBZ X9, 0x32979AC
	0x0329798C LDR X10, [X8 + 0xB0]
	0x03297990 ADD X10, X10, 0x8
	0x03297994 LDUR X11, [X10 - 0x8]
	0x03297998 CMP X11, X20
	0x0329799C B.EQ 0x3297A70
	0x032979A0 SUBS X9, X9, 0x1
	0x032979A4 ADD X10, X10, 0x10
	0x032979A8 B.NE 0x3297994
	0x032979AC MOVZ W2, 0x5
	0x032979B0 B 0x3297878
	0x032979B4 LDR W9, [X10]
	0x032979B8 ADD W9, W9, 0x4
	0x032979BC B 0x3297A84
	0x032979C0 ADRP X8, 0xE8D000
	0x032979C4 LDR X8, [X8 + 0x898]
	0x032979C8 MOV X0, X20
	0x032979CC MOV X2, X31
	0x032979D0 LDR X1, [X8]
	0x032979D4 BL 0x321BA08
	0x032979D8 TBZ X0, 0x0, 0x3297A58
	0x032979DC LDR X21, [X19 + 0x18]
	0x032979E0 CBZ X21, 0x3297AA4
	0x032979E4 ADRP X20, 0xE8D000
	0x032979E8 LDR X20, [X20 + 0x5D8]
	0x032979EC MOV X0, X21
	0x032979F0 LDR X19, [X20]
	0x032979F4 MOV X1, X19
	0x032979F8 BL 0x1C16E00
	0x032979FC CBZ X0, 0x3297AA8
	0x03297A00 LDR X20, [X20]
	0x03297A04 MOV X0, X21
	0x03297A08 MOV X1, X20
	0x03297A0C BL 0x1C16E00
	0x03297A10 CBZ X0, 0x3297AB4
	0x03297A14 LDR X8, [X0]
	0x03297A18 MOV X19, X0
	0x03297A1C LDRH W9, [X8 + 0x12E]
	0x03297A20 CBZ X9, 0x3297A44
	0x03297A24 LDR X10, [X8 + 0xB0]
	0x03297A28 ADD X10, X10, 0x8
	0x03297A2C LDUR X11, [X10 - 0x8]
	0x03297A30 CMP X11, X20
	0x03297A34 B.EQ 0x3297A7C
	0x03297A38 SUBS X9, X9, 0x1
	0x03297A3C ADD X10, X10, 0x10
	0x03297A40 B.NE 0x3297A2C
	0x03297A44 MOVZ W2, 0x1
	0x03297A48 B 0x3297878
	0x03297A4C LDRSW X9, [X10]
	0x03297A50 ADD X8, X8, X9, 0x4, LSL
	0x03297A54 B 0x3297A88
	0x03297A58 MOV X0, X19
	0x03297A5C MOV X1, X20
	0x03297A60 LDP X20, X19, [X31 + 0x20]
	0x03297A64 LDP X22, X21, [X31 + 0x10]
	0x03297A68 LDR X30, [X31], #0x30
	0x03297A6C B 0x3297AC0
	0x03297A70 LDR W9, [X10]
	0x03297A74 ADD W9, W9, 0x5
	0x03297A78 B 0x3297A84
	0x03297A7C LDR W9, [X10]
	0x03297A80 ADD W9, W9, 0x1
	0x03297A84 ADD X8, X8, W9, 0x4, SXTW
	0x03297A88 ADD X0, X8, 0x138
	0x03297A8C LDP X2, X1, [X0]
	0x03297A90 MOV X0, X19
	0x03297A94 LDP X20, X19, [X31 + 0x20]
	0x03297A98 LDP X22, X21, [X31 + 0x10]
	0x03297A9C LDR X30, [X31], #0x30
	0x03297AA0 BR X2
	0x03297AA4 BL 0x1C16F20
	0x03297AA8 MOV X0, X21
	0x03297AAC MOV X1, X19
	0x03297AB0 BL 0x1C171E0
	0x03297AB4 MOV X0, X21
	0x03297AB8 MOV X1, X20
	0x03297ABC BL 0x1C171E0
	0x03297AC0 STP X30, X21, [X31 - 0x20]!
	0x03297AC4 STP X20, X19, [X31 + 0x10]
	0x03297AC8 ADRP X21, 0x1145000
	0x03297ACC LDRB W8, [X21 + 0x717]
	0x03297AD0 MOV X20, X1
	0x03297AD4 MOV X19, X0
	0x03297AD8 TBNZ X8, 0x0, 0x3297B5C
	0x03297ADC ADRP X0, 0xE8D000
	0x03297AE0 LDR X0, [X0 + 0x270]
	0x03297AE4 BL 0x1C16CF4
	0x03297AE8 ADRP X0, 0xE8D000
	0x03297AEC LDR X0, [X0 + 0x460]
	0x03297AF0 BL 0x1C16CF4
	0x03297AF4 ADRP X0, 0xE8D000
	0x03297AF8 LDR X0, [X0 + 0x8C0]
	0x03297AFC BL 0x1C16CF4
	0x03297B00 ADRP X0, 0xE8D000
	0x03297B04 LDR X0, [X0 + 0x8C8]
	0x03297B08 BL 0x1C16CF4
	0x03297B0C ADRP X0, 0xE8D000
	0x03297B10 LDR X0, [X0 + 0x8D0]
	0x03297B14 BL 0x1C16CF4
	0x03297B18 ADRP X0, 0xE83000
	0x03297B1C LDR X0, [X0 + 0x2E0]
	0x03297B20 BL 0x1C16CF4
	0x03297B24 ADRP X0, 0xE8D000
	0x03297B28 LDR X0, [X0 + 0x8D8]
	0x03297B2C BL 0x1C16CF4
	0x03297B30 ADRP X0, 0xE8D000
	0x03297B34 LDR X0, [X0 + 0x8E8]
	0x03297B38 BL 0x1C16CF4
	0x03297B3C ADRP X0, 0xE8D000
	0x03297B40 LDR X0, [X0 + 0x8F0]
	0x03297B44 BL 0x1C16CF4
	0x03297B48 ADRP X0, 0xE8D000
	0x03297B4C LDR X0, [X0 + 0x8E0]
	0x03297B50 BL 0x1C16CF4
	0x03297B54 MOVZ W8, 0x1
	0x03297B58 STRB W8, [X21 + 0x717]
	0x03297B5C MOV X0, X20
	0x03297B60 MOV X1, X31
	0x03297B64 BL 0x335C87C
	0x03297B68 MOVZ W8, 0x9961
	0x03297B6C MOVK W8, 0x619E0000
	0x03297B70 CMP W0, W8
	0x03297B74 B.HI 0x3297C0C
	0x03297B78 MOVZ W8, 0xB61A
	0x03297B7C MOVK W8, 0x47A30000
	0x03297B80 CMP W0, W8
	0x03297B84 B.HI 0x3297CA0
	0x03297B88 MOVZ W8, 0xE67B
	0x03297B8C MOVK W8, 0x3B0C0000
	0x03297B90 CMP W0, W8
	0x03297B94 B.EQ 0x3297DD0
	0x03297B98 MOVZ W8, 0xB61A
	0x03297B9C MOVK W8, 0x47A30000
	0x03297BA0 CMP W0, W8
	0x03297BA4 B.NE 0x3297F98
	0x03297BA8 ADRP X8, 0xE8D000
	0x03297BAC LDR X8, [X8 + 0x8E0]
	0x03297BB0 MOV X0, X20
	0x03297BB4 MOV X2, X31
	0x03297BB8 LDR X1, [X8]
	0x03297BBC BL 0x321BA08
	0x03297BC0 TBZ X0, 0x0, 0x3297F98
	0x03297BC4 LDR X19, [X19 + 0x18]
	0x03297BC8 CBZ X19, 0x3298008
	0x03297BCC ADRP X10, 0xE8D000
	0x03297BD0 LDR X8, [X19]
	0x03297BD4 LDR X10, [X10 + 0x270]
	0x03297BD8 LDRH W9, [X8 + 0x12E]
	0x03297BDC LDR X1, [X10]
	0x03297BE0 CBZ X9, 0x3297C04
	0x03297BE4 LDR X10, [X8 + 0xB0]
	0x03297BE8 ADD X10, X10, 0x8
	0x03297BEC LDUR X11, [X10 - 0x8]
	0x03297BF0 CMP X11, X1
	0x03297BF4 B.EQ 0x3297FA8
	0x03297BF8 SUBS X9, X9, 0x1
	0x03297BFC ADD X10, X10, 0x10
	0x03297C00 B.NE 0x3297BEC
	0x03297C04 MOVZ W2, 0x2

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1146000
	008 Move X23, 0xE8E000
	009 Move W8, [X22+1787]
	010 Move X23, [X23+2192]
	011 Move X19, X2
	012 Move X21, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {50}
	018 Move X0, 0xE8E000
	019 Move X0, [X0+1776]
	020 Call 0x1C17CF4
	021 Move X0, 0xE64000
	022 Move X0, [X0+760]
	023 Call 0x1C17CF4
	024 Move X0, 0xE5D000
	025 Move X0, [X0+2512]
	026 Call 0x1C17CF4
	027 Move X0, 0xE5F000
	028 Move X0, [X0+632]
	029 Call 0x1C17CF4
	030 Move X0, 0xE5D000
	031 Move X0, [X0+1728]
	032 Call 0x1C17CF4
	033 Move X0, 0xE8E000
	034 Move X0, [X0+2200]
	035 Call 0x1C17CF4
	036 Move X0, 0xE8E000
	037 Move X0, [X0+2208]
	038 Call 0x1C17CF4
	039 Move X0, 0xE8E000
	040 Move X0, [X0+2192]
	041 Call 0x1C17CF4
	042 Move X0, 0xE8E000
	043 Move X0, [X0+2216]
	044 Call 0x1C17CF4
	045 Move X0, 0xE8E000
	046 Move X0, [X0+2224]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X22+1787], W8
	050 Move X1, [X23]
	051 Move X0, X21
	052 Move X2, X31
	053 Call String.op_Equality, X0, X1
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {69}
	058 Compare X19, 0
	059 JumpIfEqual {119}
	060 Move X22, 0xE8E000
	061 Move X22, [X22+1776]
	062 Move X0, X19
	063 Move X21, [X22]
	064 Move X1, X21
	065 Call 0x1C17E00
	066 Compare X0, 0
	067 JumpIfEqual {189}
	068 Move [X20+104], X0
	069 Move X8, 0xE8E000
	070 Move X8, [X8+2216]
	071 Move X0, X21
	072 Move X2, X31
	073 Move X1, [X8]
	074 Call String.op_Equality, X0, X1
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfNotEqual {90}
	079 Compare X19, 0
	080 JumpIfEqual {154}
	081 Move X22, 0xE5D000
	082 Move X22, [X22+2512]
	083 Move X0, X19
	084 Move X21, [X22]
	085 Move X1, X21
	086 Call 0x1C17E00
	087 Compare X0, 0
	088 JumpIfEqual {189}
	089 Move [X20+112], X0
	090 Move X8, 0xE8E000
	091 Move X8, [X8+2224]
	092 Move X0, X21
	093 Move X2, X31
	094 Move X1, [X8]
	095 Call String.op_Equality, X0, X1
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfNotEqual {120}
	100 Compare X19, 0
	101 JumpIfEqual {177}
	102 Move X8, 0xE5D000
	103 Move X8, [X8+1728]
	104 Move X9, [X19]
	105 Move X1, [X8]
	106 Move W10, [X9+304]
	107 Move W8, [X1+304]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X10, [X9+200]
	110 Subtract X9, X8, 1
	111 Move X10, [X10]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move [X20+128], X19
	114 Move X10, [X19]
	115 Move W11, [X10+304]
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X8, [X10+200]
	118 Move X8, [X8]
	119 Move [X20+104], X31
	120 Move X8, 0xE8E000
	121 Move X8, [X8+2208]
	122 Move X0, X21
	123 Move X2, X31
	124 Move X1, [X8]
	125 Call String.op_Equality, X0, X1
	126 Move TEMP, X0
	127 And TEMP, TEMP, 1
	128 Compare TEMP, 1
	129 JumpIfNotEqual {155}
	130 Compare X19, 0
	131 JumpIfEqual {187}
	132 Move X22, 0xE64000
	133 Move X22, [X22+760]
	134 Move X0, X19
	135 Move X21, [X22]
	136 Move X1, X21
	137 Call 0x1C17E00
	138 Compare X0, 0
	139 JumpIfEqual {189}
	140 Move [X20+120], X0
	141 Move X20, [X22]
	142 Move X0, X19
	143 Move X1, X20
	144 Call 0x1C17E00
	145 Compare X0, 0
	146 JumpIfEqual {192}
	147 Move X20, [X31+32]
	148 Move X19, [X31+40]
	149 Move X22, [X31+16]
	150 Move X21, [X31+24]
	151 Move X30, [X31+48]
	152 Move X23, [X31+56]
	153 Return 
	154 Move [X20+112], X31
	155 Move X8, 0xE8E000
	156 Move X8, [X8+2200]
	157 Move X0, X21
	158 Move X2, X31
	159 Move X1, [X8]
	160 Call String.op_Equality, X0, X1
	161 Move TEMP, X0
	162 And TEMP, TEMP, 1
	163 Compare TEMP, 1
	164 JumpIfNotEqual {178}
	165 Compare X19, 0
	166 JumpIfEqual {188}
	167 Move X8, 0xE5F000
	168 Move X8, [X8+632]
	169 Move X1, [X8]
	170 Move X8, [X19]
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Move [X20+136], X19
	173 Move X8, [X19]
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Move X0, X19
	176 Call 0x1C181E0
	177 Move [X20+128], X31
	178 Move X0, X20
	179 Move X1, X21
	180 Move X2, X19
	181 Move X20, [X31+32]
	182 Move X19, [X31+40]
	183 Move X22, [X31+16]
	184 Move X21, [X31+24]
	185 Move X30, [X31+48]
	186 Move X23, [X31+56]
	187 Move [X20+120], X31
	188 Move [X20+136], X31
	189 Move X0, X19
	190 Move X1, X21
	191 Call 0x1C181E0
	192 Move X0, X19
	193 Move X1, X20
	194 Call 0x1C181E0

Method: System.Void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x03298038 LDRB W8, [X22 + 0x6FF]
	0x0329803C LDR X23, [X23 + 0x890]
	0x03298040 MOV X19, X2
	0x03298044 MOV X20, X1
	0x03298048 MOV X21, X0
	0x0329804C TBNZ X8, 0x0, 0x32980AC
	0x03298050 ADRP X0, 0xE8C000
	0x03298054 LDR X0, [X0 + 0x6F0]
	0x03298058 BL 0x1C16CF4
	0x0329805C ADRP X0, 0xE8C000
	0x03298060 LDR X0, [X0 + 0x5D8]
	0x03298064 BL 0x1C16CF4
	0x03298068 ADRP X0, 0xE8C000
	0x0329806C LDR X0, [X0 + 0x898]
	0x03298070 BL 0x1C16CF4
	0x03298074 ADRP X0, 0xE8C000
	0x03298078 LDR X0, [X0 + 0x8A0]
	0x0329807C BL 0x1C16CF4
	0x03298080 ADRP X0, 0xE8C000
	0x03298084 LDR X0, [X0 + 0x890]
	0x03298088 BL 0x1C16CF4
	0x0329808C ADRP X0, 0xE8C000
	0x03298090 LDR X0, [X0 + 0x8A8]
	0x03298094 BL 0x1C16CF4
	0x03298098 ADRP X0, 0xE8C000
	0x0329809C LDR X0, [X0 + 0x8B0]
	0x032980A0 BL 0x1C16CF4
	0x032980A4 MOVZ W8, 0x1
	0x032980A8 STRB W8, [X22 + 0x6FF]
	0x032980AC LDR X1, [X23]
	0x032980B0 MOV X0, X20
	0x032980B4 MOV X2, X31
	0x032980B8 BL 0x321BA08
	0x032980BC TBZ X0, 0x0, 0x329812C
	0x032980C0 LDR X22, [X21 + 0x18]
	0x032980C4 CBZ X22, 0x3298270
	0x032980C8 ADRP X21, 0xE8C000
	0x032980CC LDR X21, [X21 + 0x5D8]
	0x032980D0 MOV X0, X22
	0x032980D4 LDR X20, [X21]
	0x032980D8 MOV X1, X20
	0x032980DC BL 0x1C16E00
	0x032980E0 CBZ X0, 0x3298274
	0x032980E4 LDR X21, [X21]
	0x032980E8 MOV X0, X22
	0x032980EC MOV X1, X21
	0x032980F0 BL 0x1C16E00
	0x032980F4 CBZ X0, 0x3298280
	0x032980F8 MOV X20, X0
	0x032980FC CBZ X19, 0x32981B8
	0x03298100 ADRP X8, 0xE8C000
	0x03298104 LDR X8, [X8 + 0x6F0]
	0x03298108 MOV X0, X19
	0x0329810C LDR X23, [X8]
	0x03298110 MOV X1, X23
	0x03298114 BL 0x1C16E00
	0x03298118 MOV X22, X0
	0x0329811C CBNZ X0, 0x32981BC
	0x03298120 MOV X0, X19
	0x03298124 MOV X1, X23
	0x03298128 BL 0x1C171E0
	0x0329812C ADRP X8, 0xE8C000
	0x03298130 LDR X8, [X8 + 0x8A8]
	0x03298134 MOV X0, X20
	0x03298138 MOV X2, X31
	0x0329813C LDR X1, [X8]
	0x03298140 BL 0x321BA08
	0x03298144 TBNZ X0, 0x0, 0x3298228
	0x03298148 ADRP X8, 0xE8C000
	0x0329814C LDR X8, [X8 + 0x8B0]
	0x03298150 MOV X0, X20
	0x03298154 MOV X2, X31
	0x03298158 LDR X1, [X8]
	0x0329815C BL 0x321BA08
	0x03298160 TBNZ X0, 0x0, 0x3298228
	0x03298164 ADRP X8, 0xE8C000
	0x03298168 LDR X8, [X8 + 0x8A0]
	0x0329816C MOV X0, X20
	0x03298170 MOV X2, X31
	0x03298174 LDR X1, [X8]
	0x03298178 BL 0x321BA08
	0x0329817C TBNZ X0, 0x0, 0x3298228
	0x03298180 ADRP X8, 0xE8C000
	0x03298184 LDR X8, [X8 + 0x898]
	0x03298188 MOV X0, X20
	0x0329818C MOV X2, X31
	0x03298190 LDR X1, [X8]
	0x03298194 BL 0x321BA08
	0x03298198 TBNZ X0, 0x0, 0x3298228
	0x0329819C MOV X0, X21
	0x032981A0 MOV X1, X20
	0x032981A4 MOV X2, X19
	0x032981A8 LDP X20, X19, [X31 + 0x20]
	0x032981AC LDP X22, X21, [X31 + 0x10]
	0x032981B0 LDP X30, X23, [X31], #0x30
	0x032981B4 B 0x329828C
	0x032981B8 MOV X22, X31
	0x032981BC LDR X8, [X20]
	0x032981C0 LDRH W9, [X8 + 0x12E]
	0x032981C4 CBZ X9, 0x32981E8
	0x032981C8 LDR X10, [X8 + 0xB0]
	0x032981CC ADD X10, X10, 0x8

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x1145000
	010 Move W8, [X21+1788]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {37}
	017 Move X0, 0xE63000
	018 Move X0, [X0+752]
	019 Call 0x1C17CF4
	020 Move X0, 0xE8D000
	021 Move X0, [X0+2200]
	022 Call 0x1C17CF4
	023 Move X0, 0xE8D000
	024 Move X0, [X0+2208]
	025 Call 0x1C17CF4
	026 Move X0, 0xE8D000
	027 Move X0, [X0+2192]
	028 Call 0x1C17CF4
	029 Move X0, 0xE8D000
	030 Move X0, [X0+2216]
	031 Call 0x1C17CF4
	032 Move X0, 0xE8D000
	033 Move X0, [X0+2224]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X21+1788], W8
	037 Move X0, X20
	038 Move X1, X19
	039 Call MethodCall.GetObjectData, X0, X1, X2
	040 Move X21, [X20+120]
	041 Compare X21, 0
	042 JumpIfEqual {69}
	043 Move X10, 0xE63000
	044 Move X8, [X21]
	045 Move X10, [X10+752]
	046 NotImplemented "Instruction LDRH not yet implemented."
	047 Move X1, [X10]
	048 Compare X9, 0
	049 JumpIfEqual {56}
	050 Move X10, [X8+176]
	051 Add X10, X10, 8
	052 NotImplemented "Instruction LDUR not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Subtract X9, X9, 1
	055 Add X10, X10, 16
	056 Move W2, 1
	057 Move X0, X21
	058 Call 0x1C5D788
	059 Move W9, [X10]
	060 Add W9, W9, 1
	061 Add X8, X8, W9
	062 Add X0, X8, 312
	063 Move X8, [X0]
	064 Move X1, [X0+8]
	065 Move X0, X21
	066 NotImplemented "Instruction BLR not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 NotImplemented "Instruction CSEL not yet implemented."
	069 Compare X19, 0
	070 JumpIfEqual {115}
	071 Move X8, 0xE8D000
	072 Move X8, [X8+2192]
	073 Move X22, 0xE8D000
	074 Move X22, [X22+2216]
	075 Move X2, [X20+104]
	076 Move X1, [X8]
	077 Move X23, 0xE8D000
	078 Move X24, 0xE8D000
	079 Move X25, 0xE8D000
	080 Move X23, [X23+2224]
	081 Move X24, [X24+2208]
	082 Move X25, [X25+2200]
	083 Move X0, X19
	084 Move X3, X31
	085 Call SerializationInfo.AddValue, X0, X1, X2
	086 Move X2, [X20+112]
	087 Move X1, [X22]
	088 Move X0, X19
	089 Move X3, X31
	090 Call SerializationInfo.AddValue, X0, X1, X2
	091 Move X1, [X23]
	092 Move X0, X19
	093 Move X2, X31
	094 Move X3, X31
	095 Call SerializationInfo.AddValue, X0, X1, X2
	096 Move X1, [X24]
	097 Move X0, X19
	098 Move X2, X21
	099 Move X3, X31
	100 Call SerializationInfo.AddValue, X0, X1, X2
	101 Move X2, [X20+136]
	102 Move X1, [X25]
	103 Move X0, X19
	104 Move X20, [X31+48]
	105 Move X19, [X31+56]
	106 Move X22, [X31+32]
	107 Move X21, [X31+40]
	108 Move X24, [X31+16]
	109 Move X23, [X31+24]
	110 Move X3, X31
	111 Move X30, [X31+64]
	112 Move X25, [X31+72]
	113 Call SerializationInfo.AddValue, X0, X1, X2
	114 Return 
	115 Call 0x1C17F20

Method: System.Collections.IDictionary get_Properties()

Disassembly:
	0x0329865C ADRP X9, 0xE8C000
	0x03298660 LDR X9, [X9 + 0x8D8]
	0x03298664 CMP W8, 0x2
	0x03298668 LDR X9, [X9]
	0x0329866C STR X9, [X0 + 0x28]
	0x03298670 B.LS 0x3298764
	0x03298674 ADRP X9, 0xE82000
	0x03298678 LDR X9, [X9 + 0x2E0]
	0x0329867C CMP W8, 0x3
	0x03298680 LDR X9, [X9]
	0x03298684 STR X9, [X0 + 0x30]
	0x03298688 B.EQ 0x3298764

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+88]
	005 Compare X0, 0
	006 JumpIfNotEqual {13}
	007 Move X8, [X19]
	008 Move X0, X19
	009 Move X9, [X8+664]
	010 Move X1, [X8+672]
	011 NotImplemented "Instruction BLR not yet implemented."
	012 Move X0, [X19+88]
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Return X0

Method: System.Runtime.Remoting.Proxies.RemotingProxy get_SourceProxy()

Disassembly:
	0x032986BC ADRP X9, 0xE8C000
	0x032986C0 LDR X9, [X9 + 0x8E0]

ISIL:
	001 Move X0, [X0+152]
	002 Return X0

Method: System.Void set_SourceProxy(System.Runtime.Remoting.Proxies.RemotingProxy value)

Disassembly:
	0x032986C4 CMP W8, 0x6
	0x032986C8 LDR X9, [X9]

ISIL:
	001 Move [X0+152], X1
	002 Return 

