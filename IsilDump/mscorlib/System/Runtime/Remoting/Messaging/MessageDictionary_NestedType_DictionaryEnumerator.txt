Type: System.Runtime.Remoting.Messaging.MessageDictionary/DictionaryEnumerator

Method: System.Void .ctor(System.Runtime.Remoting.Messaging.MessageDictionary methodDictionary)

Disassembly:
	0x0329C130 LDR X10, [X10 + 0x270]
	0x0329C134 LDRH W9, [X8 + 0x12E]
	0x0329C138 LDR X1, [X10]
	0x0329C13C CBZ X9, 0x329C160
	0x0329C140 LDR X10, [X8 + 0xB0]
	0x0329C144 ADD X10, X10, 0x8
	0x0329C148 LDUR X11, [X10 - 0x8]
	0x0329C14C CMP X11, X1
	0x0329C150 B.EQ 0x329C170
	0x0329C154 SUBS X9, X9, 0x1
	0x0329C158 ADD X10, X10, 0x10
	0x0329C15C B.NE 0x329C148
	0x0329C160 MOVZ W2, 0x5
	0x0329C164 MOV X0, X20
	0x0329C168 BL 0x1C5C788
	0x0329C16C B 0x329C180
	0x0329C170 LDR W9, [X10]
	0x0329C174 ADD W9, W9, 0x5
	0x0329C178 ADD X8, X8, W9, 0x4, SXTW
	0x0329C17C ADD X0, X8, 0x138
	0x0329C180 LDP X8, X1, [X0]
	0x0329C184 MOV X0, X20
	0x0329C188 BLR X8
	0x0329C18C CBZ X0, 0x329C1CC
	0x0329C190 ADRP X22, 0xE5F000
	0x0329C194 LDR X22, [X22 + 0xC60]
	0x0329C198 MOV X20, X0
	0x0329C19C LDR X21, [X22]
	0x0329C1A0 MOV X1, X21
	0x0329C1A4 BL 0x1C16E00
	0x0329C1A8 CBZ X0, 0x329C1D4
	0x0329C1AC STR X0, [X19 + 0x40]
	0x0329C1B0 LDR X21, [X22]
	0x0329C1B4 MOV X0, X20
	0x0329C1B8 MOV X1, X21
	0x0329C1BC BL 0x1C16E00
	0x0329C1C0 CBZ X0, 0x329C1D4
	0x0329C1C4 LDR X0, [X19 + 0x40]
	0x0329C1C8 B 0x329C110
	0x0329C1CC STR X31, [X19 + 0x40]
	0x0329C1D0 B 0x329C110
	0x0329C1D4 MOV X0, X20
	0x0329C1D8 MOV X1, X21
	0x0329C1DC BL 0x1C171E0
	0x0329C1E0 STP X30, X21, [X31 - 0x20]!
	0x0329C1E4 STP X20, X19, [X31 + 0x10]
	0x0329C1E8 ADRP X20, 0x1140000
	0x0329C1EC LDRB W8, [X20 + 0x72F]
	0x0329C1F0 MOV X19, X0
	0x0329C1F4 TBNZ X8, 0x0, 0x329C20C
	0x0329C1F8 ADRP X0, 0xE88000
	0x0329C1FC LDR X0, [X0 + 0x998]
	0x0329C200 BL 0x1C16CF4
	0x0329C204 MOVZ W8, 0x1
	0x0329C208 STRB W8, [X20 + 0x72F]
	0x0329C20C LDR X0, [X19 + 0x58]
	0x0329C210 CBNZ X0, 0x329C274

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1141000
	006 Move W8, [X21+1826]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xE58000
	014 Move X0, [X0+2072]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1826], W8
	018 Move X0, X19
	019 Move X1, X31
	020 Call Object..ctor, X0
	021 Move [X19+16], X20
	022 Compare X20, 0
	023 JumpIfEqual {67}
	024 Move X20, [X20+16]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 NotImplemented "Instruction CSEL not yet implemented."
	027 Compare X20, 0
	028 JumpIfEqual {45}
	029 Move X10, 0xE58000
	030 Move X8, [X20]
	031 Move X10, [X10+2072]
	032 NotImplemented "Instruction LDRH not yet implemented."
	033 Move X1, [X10]
	034 Compare X9, 0
	035 JumpIfEqual {42}
	036 Move X10, [X8+176]
	037 Add X10, X10, 8
	038 NotImplemented "Instruction LDUR not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Subtract X9, X9, 1
	041 Add X10, X10, 16
	042 Move W2, 6
	043 Move X0, X20
	044 Call 0x1C5D788
	045 Move X0, X31
	046 Move X21, X19
	047 Move W9, [X10]
	048 Add W9, W9, 6
	049 Add X8, X8, W9
	050 Add X0, X8, 312
	051 Move X8, [X0]
	052 Move X1, [X0+8]
	053 Move X0, X20
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Compare X21, 0
	056 JumpIfEqual {67}
	057 Move TEMP, 0
	058 Not TEMP
	059 Move W8, TEMP
	060 Move [X21+24], X0
	061 Move [X19+32], W8
	062 Move X20, [X31+16]
	063 Move X19, [X31+24]
	064 Move X30, [X31+32]
	065 Move X21, [X31+40]
	066 Return 
	067 Call 0x1C17F20

Method: System.Object get_Current()

Disassembly:
	0x0329C26C B 0x329C274
	0x0329C270 MOV X0, X31
	0x0329C274 LDP X20, X19, [X31 + 0x10]
	0x0329C278 LDP X30, X21, [X31], #0x20
	0x0329C27C RET
	0x0329C280 BL 0x1C16F20
	0x0329C284 STP X30, X21, [X31 - 0x20]!
	0x0329C288 STP X20, X19, [X31 + 0x10]
	0x0329C28C ADRP X21, 0x1140000
	0x0329C290 LDRB W8, [X21 + 0x734]
	0x0329C294 MOV X20, X1
	0x0329C298 MOV X19, X0
	0x0329C29C TBNZ X8, 0x0, 0x329C2C0
	0x0329C2A0 ADRP X0, 0xE88000
	0x0329C2A4 LDR X0, [X0 + 0x460]
	0x0329C2A8 BL 0x1C16CF4
	0x0329C2AC ADRP X0, 0xE88000
	0x0329C2B0 LDR X0, [X0 + 0x908]
	0x0329C2B4 BL 0x1C16CF4
	0x0329C2B8 MOVZ W8, 0x1
	0x0329C2BC STRB W8, [X21 + 0x734]
	0x0329C2C0 MOV X0, X19
	0x0329C2C4 MOV X1, X31
	0x0329C2C8 BL 0x33BDD8C
	0x0329C2CC STR X20, [X19 + 0x18]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1141000
	007 Move X20, 0xE60000
	008 Move W8, [X21+1827]
	009 Move X20, [X20+3856]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xE60000
	016 Move X0, [X0+3856]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+1827], W8
	020 Move X0, X19
	021 Call DictionaryEnumerator.get_Entry, X0
	022 Move X8, [X20]
	023 Move [X31], X0
	024 Move [X31+8], X1
	025 Add X1, X31, 0
	026 Move X0, X8
	027 Call 0x1C17E04
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X30, [X31+16]
	031 Move X21, [X31+24]
	032 Add X31, X31, 48
	033 Return X0

Method: System.Boolean MoveNext()

Disassembly:
	0x0329C438 LDR X30, [X31], #0x20
	0x0329C43C RET
	0x0329C440 STR X1, [X0 + 0x18]
	0x0329C444 RET
	0x0329C448 B 0x329C388
	0x0329C44C STR X1, [X0 + 0x18]
	0x0329C450 RET
	0x0329C454 STR X30, [X31 - 0x10]!
	0x0329C458 LDR X8, [X0 + 0x50]
	0x0329C45C CBZ X8, 0x329C478
	0x0329C460 LDR W9, [X8 + 0x18]
	0x0329C464 CMP W9, W1
	0x0329C468 B.LS 0x329C484
	0x0329C46C ADD X8, X8, W1, 0x3, SXTW
	0x0329C470 LDR X0, [X8 + 0x20]
	0x0329C474 B 0x329C47C
	0x0329C478 MOV X0, X31
	0x0329C47C LDR X30, [X31], #0x10
	0x0329C480 RET
	0x0329C484 BL 0x1C16F28
	0x0329C488 STR X30, [X31 - 0x40]!
	0x0329C48C STP X24, X23, [X31 + 0x10]
	0x0329C490 STP X22, X21, [X31 + 0x20]
	0x0329C494 STP X20, X19, [X31 + 0x30]
	0x0329C498 ADRP X21, 0x1140000
	0x0329C49C LDRB W8, [X21 + 0x733]
	0x0329C4A0 MOV X19, X1
	0x0329C4A4 MOV X20, X0
	0x0329C4A8 TBNZ X8, 0x0, 0x329C550
	0x0329C4AC ADRP X0, 0xE5F000
	0x0329C4B0 LDR X0, [X0 + 0xF10]
	0x0329C4B4 BL 0x1C16CF4
	0x0329C4B8 ADRP X0, 0xE57000
	0x0329C4BC LDR X0, [X0 + 0x818]
	0x0329C4C0 BL 0x1C16CF4
	0x0329C4C4 ADRP X0, 0xE57000
	0x0329C4C8 LDR X0, [X0 + 0xE00]
	0x0329C4CC BL 0x1C16CF4
	0x0329C4D0 ADRP X0, 0xE57000
	0x0329C4D4 LDR X0, [X0 + 0xE18]
	0x0329C4D8 BL 0x1C16CF4
	0x0329C4DC ADRP X0, 0xE59000
	0x0329C4E0 LDR X0, [X0 + 0x278]
	0x0329C4E4 BL 0x1C16CF4
	0x0329C4E8 ADRP X0, 0xE88000
	0x0329C4EC LDR X0, [X0 + 0x990]
	0x0329C4F0 BL 0x1C16CF4
	0x0329C4F4 ADRP X0, 0xE88000
	0x0329C4F8 LDR X0, [X0 + 0x8C8]
	0x0329C4FC BL 0x1C16CF4
	0x0329C500 ADRP X0, 0xE88000
	0x0329C504 LDR X0, [X0 + 0x8D0]
	0x0329C508 BL 0x1C16CF4
	0x0329C50C ADRP X0, 0xE7E000
	0x0329C510 LDR X0, [X0 + 0x2E0]
	0x0329C514 BL 0x1C16CF4
	0x0329C518 ADRP X0, 0xE88000
	0x0329C51C LDR X0, [X0 + 0x8D8]
	0x0329C520 BL 0x1C16CF4
	0x0329C524 ADRP X0, 0xE88000
	0x0329C528 LDR X0, [X0 + 0x8E8]
	0x0329C52C BL 0x1C16CF4
	0x0329C530 ADRP X0, 0xE88000
	0x0329C534 LDR X0, [X0 + 0x8F0]
	0x0329C538 BL 0x1C16CF4
	0x0329C53C ADRP X0, 0xE88000
	0x0329C540 LDR X0, [X0 + 0x8E0]
	0x0329C544 BL 0x1C16CF4
	0x0329C548 MOVZ W8, 0x1
	0x0329C54C STRB W8, [X21 + 0x733]
	0x0329C550 LDR X2, [X20 + 0x38]
	0x0329C554 CBZ X2, 0x329C568
	0x0329C558 CBZ X19, 0x329C860
	0x0329C55C ADRP X8, 0xE88000
	0x0329C560 LDR X8, [X8 + 0x990]
	0x0329C564 B 0x329C604
	0x0329C568 CBZ X19, 0x329C860
	0x0329C56C ADRP X8, 0xE7E000
	0x0329C570 LDR X2, [X20 + 0x20]
	0x0329C574 LDR X8, [X8 + 0x2E0]
	0x0329C578 MOV X0, X19
	0x0329C57C MOV X3, X31
	0x0329C580 LDR X1, [X8]
	0x0329C584 BL 0x32A8BF0
	0x0329C588 ADRP X8, 0xE88000
	0x0329C58C LDR X2, [X20 + 0x10]
	0x0329C590 LDR X8, [X8 + 0x8D8]
	0x0329C594 MOV X0, X19
	0x0329C598 MOV X3, X31
	0x0329C59C LDR X1, [X8]
	0x0329C5A0 BL 0x32A8BF0
	0x0329C5A4 ADRP X8, 0xE88000
	0x0329C5A8 LDR X2, [X20 + 0x40]
	0x0329C5AC LDR X8, [X8 + 0x8D0]
	0x0329C5B0 MOV X0, X19
	0x0329C5B4 MOV X3, X31
	0x0329C5B8 LDR X1, [X8]
	0x0329C5BC BL 0x32A8BF0
	0x0329C5C0 ADRP X8, 0xE88000
	0x0329C5C4 LDR X2, [X20 + 0x18]
	0x0329C5C8 LDR X8, [X8 + 0x8C8]
	0x0329C5CC MOV X0, X19
	0x0329C5D0 MOV X3, X31
	0x0329C5D4 LDR X1, [X8]
	0x0329C5D8 BL 0x32A8BF0
	0x0329C5DC ADRP X8, 0xE88000
	0x0329C5E0 LDR X2, [X20 + 0x30]
	0x0329C5E4 LDR X8, [X8 + 0x8F0]
	0x0329C5E8 MOV X0, X19
	0x0329C5EC MOV X3, X31
	0x0329C5F0 LDR X1, [X8]
	0x0329C5F4 BL 0x32A8BF0
	0x0329C5F8 ADRP X8, 0xE88000
	0x0329C5FC LDR X2, [X20 + 0x50]
	0x0329C600 LDR X8, [X8 + 0x8E8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x1141000
	010 Move W8, [X20+1828]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0xE85000
	017 Move X0, [X0+3968]
	018 Call 0x1C17CF4
	019 Move X0, 0xE58000
	020 Move X0, [X0+3608]
	021 Call 0x1C17CF4
	022 Move X0, 0xE5A000
	023 Move X0, [X0+632]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+1828], W8
	027 Move W8, [X19+32]
	028 Add W31, W8, 2
	029 Move X9, [X19+16]
	030 Add W8, W8, 1
	031 Move [X19+32], W8
	032 Compare X9, 0
	033 JumpIfEqual {122}
	034 Move X9, [X9+32]
	035 Compare X9, 0
	036 JumpIfEqual {122}
	037 Move W9, [X9+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move W20, 1
	040 Move TEMP, 1
	041 Not TEMP
	042 Move W8, TEMP
	043 Move [X19+32], W8
	044 Move X20, [X19+24]
	045 Compare X20, 0
	046 JumpIfEqual {124}
	047 Move X23, 0xE58000
	048 Move X24, 0xE85000
	049 Move X25, 0xE5A000
	050 Move X23, [X23+3608]
	051 Move X24, [X24+3968]
	052 Move X25, [X25+632]
	053 Move X8, [X20]
	054 Move X1, [X23]
	055 NotImplemented "Instruction LDRH not yet implemented."
	056 Compare X9, 0
	057 JumpIfEqual {64}
	058 Move X10, [X8+176]
	059 Add X10, X10, 8
	060 NotImplemented "Instruction LDUR not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Subtract X9, X9, 1
	063 Add X10, X10, 16
	064 Move X0, X20
	065 Move W2, W31
	066 Call 0x1C5D788
	067 NotImplemented "Instruction LDRSW not yet implemented."
	068 Add X8, X8, X9
	069 Add X0, X8, 312
	070 Move X8, [X0]
	071 Move X1, [X0+8]
	072 Move X0, X20
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {123}
	078 Move X22, [X19+24]
	079 Move W20, W0
	080 Compare X22, 0
	081 JumpIfEqual {122}
	082 Move X8, [X22]
	083 Move X21, [X19+16]
	084 Move X1, [X24]
	085 NotImplemented "Instruction LDRH not yet implemented."
	086 Compare X9, 0
	087 JumpIfEqual {94}
	088 Move X10, [X8+176]
	089 Add X10, X10, 8
	090 NotImplemented "Instruction LDUR not yet implemented."
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Subtract X9, X9, 1
	093 Add X10, X10, 16
	094 Move X0, X22
	095 Move W2, W31
	096 Call 0x1C5D788
	097 NotImplemented "Instruction LDRSW not yet implemented."
	098 Add X8, X8, X9
	099 Add X0, X8, 312
	100 Move X8, [X0]
	101 Move X1, [X0+8]
	102 Move X0, X22
	103 NotImplemented "Instruction BLR not yet implemented."
	104 Compare X21, 0
	105 JumpIfEqual {122}
	106 Move X8, X0
	107 Compare X0, 0
	108 JumpIfEqual {112}
	109 Move X1, [X25]
	110 Move X9, [X8]
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move X0, X21
	113 Move X1, X8
	114 Call MessageDictionary.IsOverridenKey, X0, X1
	115 Move TEMP, X0
	116 And TEMP, TEMP, 1
	117 Compare TEMP, 1
	118 JumpIfNotEqual {124}
	119 Move X20, [X19+24]
	120 Compare X20, 0
	121 JumpIfNotEqual {53}
	122 Call 0x1C17F20
	123 Move W20, W31
	124 And W0, W20, 1
	125 Move X20, [X31+48]
	126 Move X19, [X31+56]
	127 Move X22, [X31+32]
	128 Move X21, [X31+40]
	129 Move X24, [X31+16]
	130 Move X23, [X31+24]
	131 Move X30, [X31+64]
	132 Move X25, [X31+72]
	133 Return X0
	134 Move X0, X8
	135 Call 0x1C181E0

Method: System.Void Reset()

Disassembly:
	0x0329C604 LDR X1, [X8]
	0x0329C608 ADRP X21, 0xE88000
	0x0329C60C LDR X21, [X21 + 0x8E0]
	0x0329C610 MOV X0, X19
	0x0329C614 MOV X3, X31
	0x0329C618 BL 0x32A8BF0
	0x0329C61C LDR X2, [X20 + 0x68]
	0x0329C620 LDR X1, [X21]
	0x0329C624 MOV X0, X19
	0x0329C628 MOV X3, X31
	0x0329C62C BL 0x32A8BF0
	0x0329C630 LDR X20, [X20 + 0x80]
	0x0329C634 CBZ X20, 0x329C838
	0x0329C638 ADRP X10, 0xE57000
	0x0329C63C LDR X8, [X20]
	0x0329C640 LDR X10, [X10 + 0x818]
	0x0329C644 LDRH W9, [X8 + 0x12E]
	0x0329C648 LDR X1, [X10]
	0x0329C64C CBZ X9, 0x329C670
	0x0329C650 LDR X10, [X8 + 0xB0]
	0x0329C654 ADD X10, X10, 0x8
	0x0329C658 LDUR X11, [X10 - 0x8]
	0x0329C65C CMP X11, X1
	0x0329C660 B.EQ 0x329C680
	0x0329C664 SUBS X9, X9, 0x1
	0x0329C668 ADD X10, X10, 0x10
	0x0329C66C B.NE 0x329C658
	0x0329C670 MOVZ W2, 0x6
	0x0329C674 MOV X0, X20
	0x0329C678 BL 0x1C5C788
	0x0329C67C B 0x329C690
	0x0329C680 LDR W9, [X10]
	0x0329C684 ADD W9, W9, 0x6
	0x0329C688 ADD X8, X8, W9, 0x4, SXTW
	0x0329C68C ADD X0, X8, 0x138
	0x0329C690 LDP X8, X1, [X0]
	0x0329C694 ADRP X21, 0xE57000
	0x0329C698 LDR X21, [X21 + 0xE00]
	0x0329C69C MOV X0, X20
	0x0329C6A0 BLR X8
	0x0329C6A4 MOV X20, X0
	0x0329C6A8 CBZ X0, 0x329C864
	0x0329C6AC ADRP X22, 0xE57000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x1141000
	005 Move W8, [X19+1829]
	006 Move X20, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE58000
	012 Move X0, [X0+3608]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X19+1829], W8
	016 Move X19, [X20+24]
	017 Move TEMP, 0
	018 Not TEMP
	019 Move W8, TEMP
	020 Move [X20+32], W8
	021 Compare X19, 0
	022 JumpIfEqual {50}
	023 Move X10, 0xE58000
	024 Move X8, [X19]
	025 Move X10, [X10+3608]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X1, [X10]
	028 Compare X9, 0
	029 JumpIfEqual {36}
	030 Move X10, [X8+176]
	031 Add X10, X10, 8
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Subtract X9, X9, 1
	035 Add X10, X10, 16
	036 Move W2, 2
	037 Move X0, X19
	038 Call 0x1C5D788
	039 Move W9, [X10]
	040 Add W9, W9, 2
	041 Add X8, X8, W9
	042 Add X0, X8, 312
	043 Move X2, [X0]
	044 Move X1, [X0+8]
	045 Move X0, X19
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 CallNoReturn X2
	050 Call 0x1C17F20

Method: System.Collections.DictionaryEntry get_Entry()

Disassembly:
	0x0329C2D0 CBZ X20, 0x329C37C
	0x0329C2D4 ADRP X10, 0xE88000
	0x0329C2D8 LDR X8, [X20]
	0x0329C2DC LDR X10, [X10 + 0x460]
	0x0329C2E0 ADRP X21, 0xE88000
	0x0329C2E4 LDRH W9, [X8 + 0x12E]
	0x0329C2E8 LDR X1, [X10]
	0x0329C2EC LDR X21, [X21 + 0x908]
	0x0329C2F0 CBZ X9, 0x329C314
	0x0329C2F4 LDR X10, [X8 + 0xB0]
	0x0329C2F8 ADD X10, X10, 0x8
	0x0329C2FC LDUR X11, [X10 - 0x8]
	0x0329C300 CMP X11, X1
	0x0329C304 B.EQ 0x329C324
	0x0329C308 SUBS X9, X9, 0x1
	0x0329C30C ADD X10, X10, 0x10
	0x0329C310 B.NE 0x329C2FC
	0x0329C314 MOV X0, X20
	0x0329C318 MOV W2, W31
	0x0329C31C BL 0x1C5C788
	0x0329C320 B 0x329C330
	0x0329C324 LDRSW X9, [X10]
	0x0329C328 ADD X8, X8, X9, 0x4, LSL
	0x0329C32C ADD X0, X8, 0x138
	0x0329C330 LDP X8, X1, [X0]
	0x0329C334 MOV X0, X20
	0x0329C338 BLR X8
	0x0329C33C LDR X8, [X21]
	0x0329C340 MOV X20, X0
	0x0329C344 LDR W9, [X8 + 0xE0]
	0x0329C348 CBNZ W9, 0x329C358
	0x0329C34C MOV X0, X8
	0x0329C350 BL 0x1C16DFC
	0x0329C354 LDR X8, [X21]
	0x0329C358 LDR X8, [X8 + 0xB8]
	0x0329C35C CMP X20, 0x0
	0x0329C360 ADD X9, X8, 0x8
	0x0329C364 CSEL X8, X8, X9, EQ
	0x0329C368 LDR X8, [X8]
	0x0329C36C STR X8, [X19 + 0x20]
	0x0329C370 LDP X20, X19, [X31 + 0x10]
	0x0329C374 LDP X30, X21, [X31], #0x20
	0x0329C378 RET
	0x0329C37C BL 0x1C16F20
	0x0329C380 LDR X0, [X0 + 0x30]
	0x0329C384 RET
	0x0329C388 STR X30, [X31 - 0x20]!
	0x0329C38C STP X20, X19, [X31 + 0x10]
	0x0329C390 ADRP X20, 0x1140000
	0x0329C394 LDRB W8, [X20 + 0x732]
	0x0329C398 MOV X19, X0
	0x0329C39C TBNZ X8, 0x0, 0x329C3B4
	0x0329C3A0 ADRP X0, 0xE88000
	0x0329C3A4 LDR X0, [X0 + 0x270]
	0x0329C3A8 BL 0x1C16CF4
	0x0329C3AC MOVZ W8, 0x1
	0x0329C3B0 STRB W8, [X20 + 0x732]
	0x0329C3B4 LDR X0, [X19 + 0x18]
	0x0329C3B8 CBNZ X0, 0x329C434
	0x0329C3BC LDR X20, [X19 + 0x60]
	0x0329C3C0 CBZ X20, 0x329C40C
	0x0329C3C4 ADRP X10, 0xE88000
	0x0329C3C8 LDR X8, [X20]
	0x0329C3CC LDR X10, [X10 + 0x270]
	0x0329C3D0 LDRH W9, [X8 + 0x12E]
	0x0329C3D4 LDR X1, [X10]
	0x0329C3D8 CBZ X9, 0x329C3FC
	0x0329C3DC LDR X10, [X8 + 0xB0]
	0x0329C3E0 ADD X10, X10, 0x8
	0x0329C3E4 LDUR X11, [X10 - 0x8]
	0x0329C3E8 CMP X11, X1
	0x0329C3EC B.EQ 0x329C414
	0x0329C3F0 SUBS X9, X9, 0x1
	0x0329C3F4 ADD X10, X10, 0x10
	0x0329C3F8 B.NE 0x329C3E4
	0x0329C3FC MOVZ W2, 0x7
	0x0329C400 MOV X0, X20
	0x0329C404 BL 0x1C5C788
	0x0329C408 B 0x329C424
	0x0329C40C MOV X0, X31
	0x0329C410 B 0x329C434
	0x0329C414 LDR W9, [X10]
	0x0329C418 ADD W9, W9, 0x7
	0x0329C41C ADD X8, X8, W9, 0x4, SXTW
	0x0329C420 ADD X0, X8, 0x138
	0x0329C424 LDP X8, X1, [X0]
	0x0329C428 MOV X0, X20
	0x0329C42C BLR X8
	0x0329C430 STR X0, [X19 + 0x18]
	0x0329C434 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0x1141000
	006 Move W8, [X20+1830]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xE85000
	013 Move X0, [X0+3968]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1830], W8
	017 Move W8, [X19+32]
	018 Move TEMP, X8
	019 And TEMP, TEMP, -2147483648
	020 Compare TEMP, -2147483648
	021 JumpIfEqual {46}
	022 Move X0, [X19+16]
	023 Compare X0, 0
	024 JumpIfEqual {81}
	025 Move X9, [X0+32]
	026 Compare X9, 0
	027 JumpIfEqual {81}
	028 Move W10, [X9+24]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X10, [X0]
	031 Add X8, X9, X8
	032 Move X19, [X8+32]
	033 Move X8, [X10+600]
	034 Move X2, [X10+608]
	035 Move X1, X19
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move X2, X0
	038 Add X0, X31, 0
	039 Move X1, X19
	040 Move X3, X31
	041 Move [X31], X31
	042 Move [X31+8], X31
	043 Call DictionaryEntry..ctor, X0, X1, X2
	044 Move X0, [X31]
	045 Move X1, [X31+8]
	046 Add W31, W8, 1
	047 Move X19, [X19+24]
	048 Compare X19, 0
	049 JumpIfEqual {82}
	050 Move X10, 0xE85000
	051 Move X8, [X19]
	052 Move X10, [X10+3968]
	053 NotImplemented "Instruction LDRH not yet implemented."
	054 Move X1, [X10]
	055 Compare X9, 0
	056 JumpIfEqual {63}
	057 Move X10, [X8+176]
	058 Add X10, X10, 8
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Subtract X9, X9, 1
	062 Add X10, X10, 16
	063 Move W2, 2
	064 Move X0, X19
	065 Call 0x1C5D788
	066 Move W9, [X10]
	067 Add W9, W9, 2
	068 Add X8, X8, W9
	069 Add X0, X8, 312
	070 Move X8, [X0]
	071 Move X1, [X0+8]
	072 Move X0, X19
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Move [X31], X0
	075 Move [X31+8], X1
	076 Move X20, [X31+32]
	077 Move X19, [X31+40]
	078 Move X30, [X31+16]
	079 Add X31, X31, 48
	080 Return X0
	081 Call 0x1C17F20
	082 Move X0, 0xE58000
	083 Move X0, [X0+1456]
	084 Call 0x1C17D08
	085 Call 0x1C17F10
	086 Move X19, X0
	087 Move X0, 0xE89000
	088 Move X0, [X0+2432]
	089 Call 0x1C17D08
	090 Move X1, X0
	091 Move X0, X19
	092 Move X2, X31
	093 Call InvalidOperationException..ctor, X0, X1
	094 Move X0, 0xE89000
	095 Move X0, [X0+2440]
	096 Call 0x1C17D08
	097 Move X1, X0
	098 Move X0, X19
	099 Call 0x1C17DEC
	100 Call 0x1C17F28

Method: System.Object get_Key()

Disassembly:
	0x0329C6B0 ADRP X23, 0xE5F000

ISIL:
	001 Call DictionaryEnumerator.get_Entry, X0
	002 Return X0

Method: System.Object get_Value()

Disassembly:
	0x0329C6B4 ADRP X24, 0xE59000
	0x0329C6B8 LDR X22, [X22 + 0xE18]
	0x0329C6BC LDR X23, [X23 + 0xF10]
	0x0329C6C0 LDR X24, [X24 + 0x278]
	0x0329C6C4 LDR X8, [X20]

ISIL:
	001 Move [X31-16], X30
	002 Call DictionaryEnumerator.get_Entry, X0
	003 Move X0, X1
	004 Move X30, [X31+16]
	005 Return X0

