Type: System.Runtime.CompilerServices.AsyncMethodBuilderCore

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x032C5148 MOV X0, X31
	0x032C514C ADD X10, X10, X11, 0x3, LSL
	0x032C5150 LDUR X10, [X10 - 0x8]
	0x032C5154 CMP X10, X9
	0x032C5158 CSEL X8, X8, X31, EQ
	0x032C515C B.NE 0x32C5138
	0x032C5160 CBZ X8, 0x32C516C
	0x032C5164 LDR X0, [X8 + 0x20]
	0x032C5168 B 0x32C5138
	0x032C516C BL 0x1C16F20
	0x032C5170 STR X30, [X31 - 0x30]!
	0x032C5174 STP X22, X21, [X31 + 0x10]
	0x032C5178 STP X20, X19, [X31 + 0x20]
	0x032C517C ADRP X20, 0x1117000
	0x032C5180 LDRB W8, [X20 + 0x8A9]
	0x032C5184 MOV X19, X0
	0x032C5188 TBNZ X8, 0x0, 0x32C51D0
	0x032C518C ADRP X0, 0xE60000
	0x032C5190 LDR X0, [X0 + 0x948]
	0x032C5194 BL 0x1C16CF4
	0x032C5198 ADRP X0, 0xE56000
	0x032C519C LDR X0, [X0 + 0x580]
	0x032C51A0 BL 0x1C16CF4
	0x032C51A4 ADRP X0, 0xE56000
	0x032C51A8 LDR X0, [X0 + 0x588]
	0x032C51AC BL 0x1C16CF4
	0x032C51B0 ADRP X0, 0xE60000
	0x032C51B4 LDR X0, [X0 + 0x950]
	0x032C51B8 BL 0x1C16CF4
	0x032C51BC ADRP X0, 0xE60000
	0x032C51C0 LDR X0, [X0 + 0x920]
	0x032C51C4 BL 0x1C16CF4
	0x032C51C8 MOVZ W8, 0x1
	0x032C51CC STRB W8, [X20 + 0x8A9]
	0x032C51D0 LDR X21, [X19 + 0x10]
	0x032C51D4 CBZ X21, 0x32C5280
	0x032C51D8 ADRP X22, 0xE60000
	0x032C51DC LDR X22, [X22 + 0x920]
	0x032C51E0 LDR X8, [X22]
	0x032C51E4 LDR X8, [X8 + 0xB8]
	0x032C51E8 LDR X20, [X8]
	0x032C51EC CBNZ X20, 0x32C522C
	0x032C51F0 ADRP X8, 0xE60000
	0x032C51F4 LDR X8, [X8 + 0x948]
	0x032C51F8 LDR X0, [X8]
	0x032C51FC BL 0x1C16F10
	0x032C5200 ADRP X8, 0xE60000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {14}
	006 Move X8, [X0]
	007 Compare X8, 0
	008 JumpIfNotEqual {32}
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move [X0], X1
	012 Move X30, [X31+32]
	013 Return 
	014 Move X0, 0xE34000
	015 Move X0, [X0+1320]
	016 Call 0x1C17D08
	017 Call 0x1C17F10
	018 Move X19, X0
	019 Move X0, 0xE57000
	020 Move X0, [X0+1424]
	021 Call 0x1C17D08
	022 Move X1, X0
	023 Move X0, X19
	024 Move X2, X31
	025 Call ArgumentNullException..ctor, X0, X1
	026 Move X0, 0xE61000
	027 Move X0, [X0+2200]
	028 Call 0x1C17D08
	029 Move X1, X0
	030 Move X0, X19
	031 Call 0x1C17DEC
	032 Move X0, 0xE61000
	033 Move X0, [X0+2208]
	034 Call 0x1C17D08
	035 Move X1, X31
	036 Call Environment.GetResourceString, X0
	037 Move X19, X0
	038 Move X0, 0xE2F000
	039 Move X0, [X0+1456]
	040 Call 0x1C17D08
	041 Call 0x1C17F10
	042 Move X1, X19
	043 Move X2, X31
	044 Move X20, X0
	045 Call InvalidOperationException..ctor, X0, X1
	046 Move X0, 0xE61000
	047 Move X0, [X0+2200]
	048 Call 0x1C17D08
	049 Move X1, X0
	050 Move X0, X20
	051 Call 0x1C17DEC

Method: System.Action GetCompletionAction(System.Threading.Tasks.Task taskForTracing, ref System.Runtime.CompilerServices.AsyncMethodBuilderCore/MoveNextRunner runnerToInitialize)

Disassembly:
	0x032C5B94 BL 0x1C16D08
	0x032C5B98 BL 0x1C16F10
	0x032C5B9C MOV X19, X0
	0x032C5BA0 ADRP X0, 0xE60000
	0x032C5BA4 LDR X0, [X0 + 0x970]
	0x032C5BA8 BL 0x1C16D08
	0x032C5BAC MOV X1, X0
	0x032C5BB0 MOV X0, X19
	0x032C5BB4 MOV X2, X31
	0x032C5BB8 BL 0x330E100
	0x032C5BBC ADRP X0, 0xE60000
	0x032C5BC0 LDR X0, [X0 + 0x978]
	0x032C5BC4 BL 0x1C16D08
	0x032C5BC8 MOV X1, X0
	0x032C5BCC MOV X0, X19
	0x032C5BD0 BL 0x1C16DEC
	0x032C5BD4 B 0x1C4CA10
	0x032C5BD8 STR X30, [X31 - 0x20]!
	0x032C5BDC STP X20, X19, [X31 + 0x10]
	0x032C5BE0 CBZ X0, 0x32C5C14
	0x032C5BE4 MOV X19, X1
	0x032C5BE8 MOV X20, X0
	0x032C5BEC MOV X0, X1
	0x032C5BF0 MOV X1, X31
	0x032C5BF4 MOV X2, X31
	0x032C5BF8 BL 0x33BE5B0
	0x032C5BFC TBNZ X0, 0x0, 0x32C5C14
	0x032C5C00 MOV X0, X20
	0x032C5C04 MOV X1, X19
	0x032C5C08 LDP X20, X19, [X31 + 0x10]
	0x032C5C0C LDR X30, [X31], #0x20
	0x032C5C10 B 0x1C4CA10
	0x032C5C14 ADRP X0, 0xE33000
	0x032C5C18 LDR X0, [X0 + 0x528]
	0x032C5C1C BL 0x1C16D08
	0x032C5C20 BL 0x1C16F10
	0x032C5C24 MOV X1, X31
	0x032C5C28 MOV X19, X0
	0x032C5C2C BL 0x3315F20
	0x032C5C30 ADRP X0, 0xE60000
	0x032C5C34 LDR X0, [X0 + 0x980]
	0x032C5C38 BL 0x1C16D08
	0x032C5C3C MOV X1, X0
	0x032C5C40 MOV X0, X19
	0x032C5C44 BL 0x1C16DEC
	0x032C5C48 MOV X1, X31
	0x032C5C4C B 0x33CB4E4
	0x032C5C50 B 0x1C4CAE4
	0x032C5C54 B 0x1C4CAE4
	0x032C5C58 RET
	0x032C5C5C MOV W2, W2
	0x032C5C60 B 0x3EB1B10
	0x032C5C64 STR X30, [X31 - 0x20]!
	0x032C5C68 STP X20, X19, [X31 + 0x10]
	0x032C5C6C MOV X20, X1
	0x032C5C70 MOV X1, X31
	0x032C5C74 MOV X19, X0
	0x032C5C78 BL 0x33A51F0
	0x032C5C7C CBZ X20, 0x32C5C94
	0x032C5C80 STR X20, [X19 + 0x10]
	0x032C5C84 STR W31, [X19 + 0x18]
	0x032C5C88 LDP X20, X19, [X31 + 0x10]
	0x032C5C8C LDR X30, [X31], #0x20
	0x032C5C90 RET
	0x032C5C94 ADRP X0, 0xE33000
	0x032C5C98 LDR X0, [X0 + 0x528]
	0x032C5C9C BL 0x1C16D08
	0x032C5CA0 BL 0x1C16F10
	0x032C5CA4 MOV X19, X0
	0x032C5CA8 ADRP X0, 0xE60000
	0x032C5CAC LDR X0, [X0 + 0x988]
	0x032C5CB0 BL 0x1C16D08
	0x032C5CB4 MOV X1, X0
	0x032C5CB8 MOV X0, X19
	0x032C5CBC MOV X2, X31
	0x032C5CC0 BL 0x330E100
	0x032C5CC4 ADRP X0, 0xE60000
	0x032C5CC8 LDR X0, [X0 + 0x990]
	0x032C5CCC BL 0x1C16D08
	0x032C5CD0 MOV X1, X0
	0x032C5CD4 MOV X0, X19
	0x032C5CD8 BL 0x1C16DEC
	0x032C5CDC LDR X0, [X0 + 0x10]
	0x032C5CE0 RET
	0x032C5CE4 LDR W0, [X0 + 0x18]
	0x032C5CE8 RET
	0x032C5CEC STP X30, X25, [X31 - 0x40]!
	0x032C5CF0 STP X24, X23, [X31 + 0x10]
	0x032C5CF4 STP X22, X21, [X31 + 0x20]
	0x032C5CF8 STP X20, X19, [X31 + 0x30]
	0x032C5CFC ADRP X22, 0x1117000
	0x032C5D00 ADRP X21, 0xE60000
	0x032C5D04 LDRB W8, [X22 + 0x8B4]
	0x032C5D08 LDR X21, [X21 + 0x998]
	0x032C5D0C MOV X20, X1
	0x032C5D10 MOV X19, X0
	0x032C5D14 TBNZ X8, 0x0, 0x32C5D5C
	0x032C5D18 ADRP X0, 0xE60000
	0x032C5D1C LDR X0, [X0 + 0x9A0]
	0x032C5D20 BL 0x1C16CF4
	0x032C5D24 ADRP X0, 0xE60000
	0x032C5D28 LDR X0, [X0 + 0x9A8]
	0x032C5D2C BL 0x1C16CF4
	0x032C5D30 ADRP X0, 0xE60000
	0x032C5D34 LDR X0, [X0 + 0x998]
	0x032C5D38 BL 0x1C16CF4
	0x032C5D3C ADRP X0, 0xE5C000
	0x032C5D40 LDR X0, [X0 + 0x670]
	0x032C5D44 BL 0x1C16CF4
	0x032C5D48 ADRP X0, 0xE60000

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X23, 0x1118000
	011 Move X22, 0xE61000
	012 Move W8, [X23+2211]
	013 Move X22, [X22+2320]
	014 Move X19, X2
	015 Move X21, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {38}
	021 Move X0, 0xE30000
	022 Move X0, [X0+3696]
	023 Call 0x1C17CF4
	024 Move X0, 0xE61000
	025 Move X0, [X0+2320]
	026 Call 0x1C17CF4
	027 Move X0, 0xE57000
	028 Move X0, [X0+1408]
	029 Call 0x1C17CF4
	030 Move X0, 0xE61000
	031 Move X0, [X0+2328]
	032 Call 0x1C17CF4
	033 Move X0, 0xE61000
	034 Move X0, [X0+2336]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X23+2211], W8
	038 Move X0, [X22]
	039 Move X22, 0xE57000
	040 Move W8, [X0+224]
	041 Move X22, [X22+1408]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X31
	046 Call Debugger.NotifyOfCrossThreadDependency
	047 Move X0, [X22]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X22, 0xE61000
	053 Move X26, 0xE30000
	054 Move X25, 0xE61000
	055 Move X22, [X22+2336]
	056 Move X26, [X26+3696]
	057 Move X25, [X25+2328]
	058 Move X0, X31
	059 Call ExecutionContext.FastCapture
	060 Move X24, X0
	061 Compare X0, 0
	062 JumpIfEqual {95}
	063 Move X0, X24
	064 Move X1, X31
	065 Call ExecutionContext.get_IsPreAllocatedDefault, X0
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {95}
	070 Move X23, [X20+8]
	071 Compare X23, 0
	072 JumpIfNotEqual {120}
	073 Move X0, [X22]
	074 Move X23, [X20]
	075 Call 0x1C17F10
	076 Move X1, X31
	077 Move X22, X0
	078 Call Object..ctor, X0
	079 Move [X22+16], X24
	080 Move [X22+24], X23
	081 Move X0, [X26]
	082 Call 0x1C17F10
	083 Move X2, [X25]
	084 Move X1, X22
	085 Move X3, X31
	086 Move X23, X0
	087 Call Action..ctor, X0, X1, X2
	088 Compare X21, 0
	089 JumpIfEqual {131}
	090 Move X1, X21
	091 Move X2, X23
	092 Call AsyncMethodBuilderCore.OutputAsyncCausalityEvents, X0, X1, X2
	093 Move X23, X0
	094 Move [X20+8], X0
	095 Move X0, [X22]
	096 Move X23, [X20]
	097 Call 0x1C17F10
	098 Move X1, X31
	099 Move X22, X0
	100 Call Object..ctor, X0
	101 Move [X22+16], X24
	102 Move [X22+24], X23
	103 Move X0, [X26]
	104 Call 0x1C17F10
	105 Move X2, [X25]
	106 Move X1, X22
	107 Move X3, X31
	108 Move X23, X0
	109 Call Action..ctor, X0, X1, X2
	110 Compare X21, 0
	111 JumpIfEqual {116}
	112 Move X1, X21
	113 Move X2, X23
	114 Call AsyncMethodBuilderCore.OutputAsyncCausalityEvents, X0, X1, X2
	115 Move X23, X0
	116 Move X8, [X20]
	117 Compare X8, 0
	118 JumpIfNotEqual {120}
	119 Move [X19], X22
	120 Move X0, X23
	121 Move X20, [X31+64]
	122 Move X19, [X31+72]
	123 Move X22, [X31+48]
	124 Move X21, [X31+56]
	125 Move X24, [X31+32]
	126 Move X23, [X31+40]
	127 Move X26, [X31+16]
	128 Move X25, [X31+24]
	129 Move X30, [X31+80]
	130 Return X0
	131 Move [X20+8], X23

Method: System.Action OutputAsyncCausalityEvents(System.Threading.Tasks.Task innerTask, System.Action continuation)

Disassembly:
	0x032C5D78 LDR X23, [X23 + 0x9B0]
	0x032C5D7C MOV X0, X19
	0x032C5D80 MOV X1, X31
	0x032C5D84 BL 0x33BDD8C
	0x032C5D88 LDR X0, [X21]
	0x032C5D8C LDR W8, [X0 + 0xE0]
	0x032C5D90 CBNZ W8, 0x32C5D9C
	0x032C5D94 BL 0x1C16DFC
	0x032C5D98 LDR X0, [X21]
	0x032C5D9C LDR X8, [X0 + 0xB8]
	0x032C5DA0 LDR X0, [X25]
	0x032C5DA4 LDR X21, [X8]
	0x032C5DA8 BL 0x1C16F10
	0x032C5DAC LDR X2, [X22]
	0x032C5DB0 MOV X1, X21
	0x032C5DB4 MOV X22, X0
	0x032C5DB8 BL 0x2AB118C
	0x032C5DBC STR X22, [X19 + 0x28]
	0x032C5DC0 LDR X0, [X24]
	0x032C5DC4 BL 0x1C16F10
	0x032C5DC8 MOVZ W2, 0x3
	0x032C5DCC MOVZ W3, 0x1
	0x032C5DD0 MOVZ W4, 0x1
	0x032C5DD4 MOV X1, X20
	0x032C5DD8 MOV X5, X31
	0x032C5DDC MOV X21, X0
	0x032C5DE0 BL 0x32F82DC
	0x032C5DE4 LDR X0, [X23]
	0x032C5DE8 LDR X20, [X19 + 0x28]
	0x032C5DEC BL 0x1C16F10
	0x032C5DF0 MOV X1, X21
	0x032C5DF4 MOV X2, X20
	0x032C5DF8 MOV X22, X0
	0x032C5DFC BL 0x32C5E24
	0x032C5E00 STR X22, [X19 + 0x30]
	0x032C5E04 STR X22, [X19 + 0x10]
	0x032C5E08 LDP X20, X19, [X31 + 0x30]
	0x032C5E0C LDP X22, X21, [X31 + 0x20]
	0x032C5E10 LDP X24, X23, [X31 + 0x10]
	0x032C5E14 LDP X30, X25, [X31], #0x40
	0x032C5E18 RET
	0x032C5E1C MOV X1, X31
	0x032C5E20 B 0x33BDD8C
	0x032C5E24 STP X30, X23, [X31 - 0x30]!
	0x032C5E28 STP X22, X21, [X31 + 0x10]
	0x032C5E2C STP X20, X19, [X31 + 0x20]
	0x032C5E30 ADRP X23, 0x1117000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1118000
	007 Move X22, 0xE61000
	008 Move W8, [X21+2212]
	009 Move X22, [X22+2344]
	010 Move X19, X2
	011 Move X20, X1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0xE30000
	017 Move X0, [X0+3696]
	018 Call 0x1C17CF4
	019 Move X0, 0xE61000
	020 Move X0, [X0+2352]
	021 Call 0x1C17CF4
	022 Move X0, 0xE61000
	023 Move X0, [X0+2344]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+2212], W8
	027 Move X0, [X22]
	028 Call 0x1C17F10
	029 Move X1, X31
	030 Move X21, X0
	031 Call Object..ctor, X0
	032 Compare X21, 0
	033 JumpIfEqual {57}
	034 Move X8, 0xE30000
	035 Move X8, [X8+3696]
	036 Move [X21+16], X20
	037 Move [X21+24], X19
	038 Move X20, 0xE61000
	039 Move X0, [X8]
	040 Move X20, [X20+2352]
	041 Call 0x1C17F10
	042 Move X2, [X20]
	043 Move X1, X21
	044 Move X3, X31
	045 Move X20, X0
	046 Call Action..ctor, X0, X1, X2
	047 Move X2, [X21+16]
	048 Move X0, X19
	049 Move X1, X20
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X30, [X31+48]
	055 Call AsyncMethodBuilderCore.CreateContinuationWrapper, X0, X1, X2
	056 Return X0
	057 Call 0x1C17F20

Method: System.Void PostBoxInitialization(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine, System.Runtime.CompilerServices.AsyncMethodBuilderCore/MoveNextRunner runner, System.Threading.Tasks.Task builtTask)

Disassembly:
	0x032C5EF8 LDP X20, X19, [X31 + 0x20]
	0x032C5EFC LDP X22, X21, [X31 + 0x10]
	0x032C5F00 LDP X30, X23, [X31], #0x30
	0x032C5F04 B 0x32C88E0
	0x032C5F08 STR X30, [X31 - 0x40]!
	0x032C5F0C STP X24, X23, [X31 + 0x10]
	0x032C5F10 STP X22, X21, [X31 + 0x20]
	0x032C5F14 STP X20, X19, [X31 + 0x30]
	0x032C5F18 ADRP X22, 0x1117000
	0x032C5F1C ADRP X21, 0xE60000
	0x032C5F20 LDRB W8, [X22 + 0x8B5]
	0x032C5F24 LDR X21, [X21 + 0x998]
	0x032C5F28 MOV X20, X1
	0x032C5F2C MOV X19, X0
	0x032C5F30 TBNZ X8, 0x0, 0x32C5F6C
	0x032C5F34 ADRP X0, 0xE60000
	0x032C5F38 LDR X0, [X0 + 0x9A0]
	0x032C5F3C BL 0x1C16CF4
	0x032C5F40 ADRP X0, 0xE60000
	0x032C5F44 LDR X0, [X0 + 0x9A8]
	0x032C5F48 BL 0x1C16CF4
	0x032C5F4C ADRP X0, 0xE60000
	0x032C5F50 LDR X0, [X0 + 0x998]
	0x032C5F54 BL 0x1C16CF4
	0x032C5F58 ADRP X0, 0xE60000
	0x032C5F5C LDR X0, [X0 + 0x9B0]
	0x032C5F60 BL 0x1C16CF4
	0x032C5F64 MOVZ W8, 0x1
	0x032C5F68 STRB W8, [X22 + 0x8B5]
	0x032C5F6C ADRP X24, 0xE60000
	0x032C5F70 ADRP X22, 0xE60000
	0x032C5F74 ADRP X23, 0xE60000
	0x032C5F78 LDR X24, [X24 + 0x9A8]
	0x032C5F7C LDR X22, [X22 + 0x9A0]
	0x032C5F80 LDR X23, [X23 + 0x9B0]
	0x032C5F84 MOV X0, X19
	0x032C5F88 MOV X1, X31
	0x032C5F8C BL 0x33BDD8C
	0x032C5F90 LDR X0, [X21]
	0x032C5F94 LDR W8, [X0 + 0xE0]
	0x032C5F98 CBNZ W8, 0x32C5FA4
	0x032C5F9C BL 0x1C16DFC
	0x032C5FA0 LDR X0, [X21]
	0x032C5FA4 LDR X8, [X0 + 0xB8]
	0x032C5FA8 LDR X0, [X24]
	0x032C5FAC LDR X21, [X8]
	0x032C5FB0 BL 0x1C16F10
	0x032C5FB4 LDR X2, [X22]
	0x032C5FB8 MOV X1, X21
	0x032C5FBC MOV X22, X0
	0x032C5FC0 BL 0x2AB118C
	0x032C5FC4 STR X22, [X19 + 0x28]
	0x032C5FC8 LDR X0, [X23]
	0x032C5FCC BL 0x1C16F10
	0x032C5FD0 MOV X1, X20
	0x032C5FD4 MOV X2, X22
	0x032C5FD8 MOV X21, X0
	0x032C5FDC BL 0x32C5E24
	0x032C5FE0 STR X21, [X19 + 0x30]
	0x032C5FE4 STR X21, [X19 + 0x10]
	0x032C5FE8 LDP X20, X19, [X31 + 0x30]
	0x032C5FEC LDP X22, X21, [X31 + 0x20]
	0x032C5FF0 LDP X24, X23, [X31 + 0x10]
	0x032C5FF4 LDR X30, [X31], #0x40
	0x032C5FF8 RET
	0x032C5FFC SUB X31, X31, 0x40
	0x032C6000 STP X30, X23, [X31 + 0x10]
	0x032C6004 STP X22, X21, [X31 + 0x20]
	0x032C6008 STP X20, X19, [X31 + 0x30]
	0x032C600C STRB W31, [X31 + 0xC]
	0x032C6010 LDR X19, [X0 + 0x10]
	0x032C6014 CBZ X19, 0x32C60BC
	0x032C6018 MOV X20, X0
	0x032C601C MOV W21, W1
	0x032C6020 TBZ X1, 0x0, 0x32C60A8
	0x032C6024 STRB W31, [X31 + 0xC]
	0x032C6028 ADD X1, X31, 0xC
	0x032C602C MOV X0, X19
	0x032C6030 MOV X2, X31
	0x032C6034 BL 0x33DE64C
	0x032C6038 LDR X22, [X20 + 0x30]
	0x032C603C STR X31, [X20 + 0x28]
	0x032C6040 CBZ X22, 0x32C6074
	0x032C6044 MOV X8, X22
	0x032C6048 LDR X0, [X8 + 0x10]!
	0x032C604C CBZ X0, 0x32C6070
	0x032C6050 STP X31, X31, [X8]
	0x032C6054 LDR X8, [X0]
	0x032C6058 LDP X9, X1, [X8 + 0x198]
	0x032C605C BLR X9
	0x032C6060 MOVI V0.2D, 0x0
	0x032C6064 STR X31, [X22 + 0x10]
	0x032C6068 STR X31, [X22 + 0x70]
	0x032C606C STP V0, V0, [X22 + 0x30]
	0x032C6070 STR X31, [X20 + 0x30]
	0x032C6074 STR X31, [X20 + 0x38]
	0x032C6078 MOVZ W1, 0x1
	0x032C607C MOV X0, X20
	0x032C6080 BL 0x32C6178
	0x032C6084 MOV X22, X31
	0x032C6088 MOV W23, W31
	0x032C608C LDRB W8, [X31 + 0xC]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x1118000
	008 Move W8, [X23+2213]
	009 Move X22, X3
	010 Move X19, X2
	011 Move X21, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0xE57000
	018 Move X0, [X0+1416]
	019 Call 0x1C17CF4
	020 Move X0, 0xE30000
	021 Move X0, [X0+1976]
	022 Call 0x1C17CF4
	023 Move X0, 0xE57000
	024 Move X0, [X0+2072]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X23+2213], W8
	028 Compare X22, 0
	029 JumpIfEqual {83}
	030 Move X0, X31
	031 Call AsyncCausalityTracer.get_LoggingOn
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {64}
	036 Move X0, X22
	037 Move X1, X31
	038 Call Task.get_Id, X0
	039 Compare X21, 0
	040 JumpIfEqual {122}
	041 Move W23, W0
	042 Move X0, X21
	043 Move X1, X31
	044 Call "il2cpp_vm_object_is_inst", X0
	045 Compare X0, 0
	046 JumpIfEqual {122}
	047 Move X8, [X0]
	048 Move X9, [X8+424]
	049 Move X1, [X8+432]
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Move X8, 0xE57000
	052 Move X8, [X8+2072]
	053 Move X1, X0
	054 Move X2, X31
	055 Move X8, [X8]
	056 Move X0, X8
	057 Call String.Concat, X0, X1
	058 Move X2, X0
	059 Move W0, W31
	060 Move W1, W23
	061 Move X3, X31
	062 Move X4, X31
	063 Call AsyncCausalityTracer.TraceOperationCreation, X0, X1, X2, X3
	064 Move X23, 0xE30000
	065 Move X23, [X23+1976]
	066 Move X0, [X23]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {72}
	070 Call 0x1C17DFC
	071 Move X0, [X23]
	072 Move X8, [X0+184]
	073 Move W8, [X8+16]
	074 Compare W8, 0
	075 JumpIfEqual {83}
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 Move X0, X22
	081 Move X1, X31
	082 Call Task.AddToActiveTasks, X0
	083 Move [X20], X21
	084 Compare X21, 0
	085 JumpIfEqual {122}
	086 Move X10, 0xE56000
	087 Move X8, [X21]
	088 Move X10, [X10+1416]
	089 NotImplemented "Instruction LDRH not yet implemented."
	090 Move X1, [X10]
	091 Compare X9, 0
	092 JumpIfEqual {99}
	093 Move X10, [X8+176]
	094 Add X10, X10, 8
	095 NotImplemented "Instruction LDUR not yet implemented."
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Subtract X9, X9, 1
	098 Add X10, X10, 16
	099 Move W2, 1
	100 Move X0, X21
	101 Call 0x1C5D788
	102 Move W9, [X10]
	103 Add W9, W9, 1
	104 Add X8, X8, W9
	105 Add X0, X8, 312
	106 Move X8, [X0]
	107 Move X2, [X0+8]
	108 Move X0, X21
	109 Move X1, X21
	110 NotImplemented "Instruction BLR not yet implemented."
	111 Compare X19, 0
	112 JumpIfEqual {122}
	113 Move X8, [X20]
	114 Move X22, [X31+16]
	115 Move X21, [X31+24]
	116 Move [X19+24], X8
	117 Move X20, [X31+32]
	118 Move X19, [X31+40]
	119 Move X30, [X31+48]
	120 Move X23, [X31+56]
	121 Return 
	122 Call 0x1C17F20

Method: System.Void ThrowAsync(System.Exception exception, System.Threading.SynchronizationContext targetContext)

Disassembly:
	0x032C5498 MOV X3, X31
	0x032C549C BL 0x33FAAF0
	0x032C54A0 LDR X8, [X19 + 0x18]
	0x032C54A4 CBZ X8, 0x32C54CC
	0x032C54A8 LDR X9, [X8 + 0x18]
	0x032C54AC LDR X0, [X8 + 0x40]
	0x032C54B0 LDR X1, [X8 + 0x28]
	0x032C54B4 BLR X9
	0x032C54B8 MOVZ W1, 0x2
	0x032C54BC MOV W0, W31
	0x032C54C0 MOV X2, X31
	0x032C54C4 LDP X30, X19, [X31], #0x10
	0x032C54C8 B 0x33F6C78
	0x032C54CC BL 0x1C16F20
	0x032C54D0 STR X30, [X31 - 0x20]!
	0x032C54D4 STP X20, X19, [X31 + 0x10]
	0x032C54D8 ADRP X19, 0x1117000
	0x032C54DC ADRP X20, 0xE60000
	0x032C54E0 LDRB W8, [X19 + 0x8AB]
	0x032C54E4 LDR X20, [X20 + 0x8C0]
	0x032C54E8 TBNZ X8, 0x0, 0x32C5500
	0x032C54EC ADRP X0, 0xE60000
	0x032C54F0 LDR X0, [X0 + 0x8C0]
	0x032C54F4 BL 0x1C16CF4
	0x032C54F8 MOVZ W8, 0x1
	0x032C54FC STRB W8, [X19 + 0x8AB]
	0x032C5500 LDR X0, [X20]
	0x032C5504 BL 0x1C16F10
	0x032C5508 MOV X1, X31
	0x032C550C MOV X19, X0
	0x032C5510 BL 0x33BDD8C
	0x032C5514 LDR X8, [X20]
	0x032C5518 LDR X8, [X8 + 0xB8]
	0x032C551C STR X19, [X8]
	0x032C5520 LDP X20, X19, [X31 + 0x10]
	0x032C5524 LDR X30, [X31], #0x20
	0x032C5528 RET
	0x032C552C MOV X1, X31
	0x032C5530 B 0x33BDD8C
	0x032C5534 STP X30, X21, [X31 - 0x20]!
	0x032C5538 STP X20, X19, [X31 + 0x10]
	0x032C553C ADRP X21, 0x1117000
	0x032C5540 ADRP X20, 0xE36000
	0x032C5544 LDRB W8, [X21 + 0x8AC]
	0x032C5548 LDR X20, [X20 + 0x5B8]
	0x032C554C MOV X19, X1
	0x032C5550 TBNZ X8, 0x0, 0x32C5568
	0x032C5554 ADRP X0, 0xE36000
	0x032C5558 LDR X0, [X0 + 0x5B8]
	0x032C555C BL 0x1C16CF4
	0x032C5560 MOVZ W8, 0x1
	0x032C5564 STRB W8, [X21 + 0x8AC]
	0x032C5568 LDR X1, [X20]
	0x032C556C MOV X0, X19
	0x032C5570 BL 0x1BB5A6C
	0x032C5574 BL 0x19903C0
	0x032C5578 LDR X1, [X20]
	0x032C557C MOV X0, X19
	0x032C5580 BL 0x1BB5A6C
	0x032C5584 BL 0x32C2440
	0x032C5588 STP X30, X21, [X31 - 0x20]!
	0x032C558C STP X20, X19, [X31 + 0x10]
	0x032C5590 ADRP X21, 0x1117000
	0x032C5594 ADRP X20, 0xE36000
	0x032C5598 LDRB W8, [X21 + 0x8AD]
	0x032C559C LDR X20, [X20 + 0x5B8]
	0x032C55A0 MOV X19, X1
	0x032C55A4 TBNZ X8, 0x0, 0x32C55BC
	0x032C55A8 ADRP X0, 0xE36000
	0x032C55AC LDR X0, [X0 + 0x5B8]
	0x032C55B0 BL 0x1C16CF4
	0x032C55B4 MOVZ W8, 0x1
	0x032C55B8 STRB W8, [X21 + 0x8AD]
	0x032C55BC LDR X1, [X20]
	0x032C55C0 MOV X0, X19
	0x032C55C4 BL 0x1BB5A6C
	0x032C55C8 BL 0x19903C0
	0x032C55CC LDR X1, [X20]
	0x032C55D0 MOV X0, X19
	0x032C55D4 BL 0x1BB5A6C
	0x032C55D8 BL 0x32C2440
	0x032C55DC MOV X0, X31
	0x032C55E0 RET
	0x032C55E4 MOV W0, W31
	0x032C55E8 RET
	0x032C55EC STP X30, X21, [X31 - 0x20]!
	0x032C55F0 STP X20, X19, [X31 + 0x10]
	0x032C55F4 ADRP X20, 0x1117000
	0x032C55F8 ADRP X21, 0xE2F000
	0x032C55FC LDRB W8, [X20 + 0x8AE]
	0x032C5600 LDR X21, [X21 + 0x868]
	0x032C5604 MOV X19, X1
	0x032C5608 TBNZ X8, 0x0, 0x32C5620
	0x032C560C ADRP X0, 0xE2F000
	0x032C5610 LDR X0, [X0 + 0x868]
	0x032C5614 BL 0x1C16CF4
	0x032C5618 MOVZ W8, 0x1
	0x032C561C STRB W8, [X20 + 0x8AE]
	0x032C5620 LDR X0, [X21]
	0x032C5624 LDR W8, [X0 + 0xE0]
	0x032C5628 CBNZ W8, 0x32C5630
	0x032C562C BL 0x1C16DFC
	0x032C5630 MOV X0, X19
	0x032C5634 LDP X20, X19, [X31 + 0x10]
	0x032C5638 MOVZ W1, 0x1
	0x032C563C LDP X30, X21, [X31], #0x20
	0x032C5640 B 0x32C5644
	0x032C5644 STP X30, X23, [X31 - 0x30]!
	0x032C5648 STP X22, X21, [X31 + 0x10]
	0x032C564C STP X20, X19, [X31 + 0x20]
	0x032C5650 ADRP X21, 0x1117000
	0x032C5654 LDRB W8, [X21 + 0x8B0]
	0x032C5658 MOV W20, W1
	0x032C565C MOV X19, X0
	0x032C5660 TBNZ X8, 0x0, 0x32C56A8
	0x032C5664 ADRP X0, 0xE60000
	0x032C5668 LDR X0, [X0 + 0x958]
	0x032C566C BL 0x1C16CF4
	0x032C5670 ADRP X0, 0xE36000
	0x032C5674 LDR X0, [X0 + 0x7E8]
	0x032C5678 BL 0x1C16CF4
	0x032C567C ADRP X0, 0xE2F000
	0x032C5680 LDR X0, [X0 + 0x7B8]
	0x032C5684 BL 0x1C16CF4
	0x032C5688 ADRP X0, 0xE2E000
	0x032C568C LDR X0, [X0 + 0x6C0]
	0x032C5690 BL 0x1C16CF4
	0x032C5694 ADRP X0, 0xE2F000
	0x032C5698 LDR X0, [X0 + 0x868]
	0x032C569C BL 0x1C16CF4
	0x032C56A0 MOVZ W8, 0x1
	0x032C56A4 STRB W8, [X21 + 0x8B0]
	0x032C56A8 CBZ X19, 0x32C5888
	0x032C56AC MOV X0, X31
	0x032C56B0 BL 0x33E5C9C
	0x032C56B4 CBZ X0, 0x32C5754
	0x032C56B8 ADRP X22, 0xE60000
	0x032C56BC ADRP X23, 0xE2E000
	0x032C56C0 LDR X22, [X22 + 0x958]
	0x032C56C4 LDR X23, [X23 + 0x6C0]
	0x032C56C8 MOV X1, X31
	0x032C56CC MOV X21, X0
	0x032C56D0 BL 0x33BE520
	0x032C56D4 LDR X8, [X23]
	0x032C56D8 LDR X23, [X22]
	0x032C56DC MOV X22, X0
	0x032C56E0 LDR W9, [X8 + 0xE0]
	0x032C56E4 CBNZ W9, 0x32C56F0
	0x032C56E8 MOV X0, X8
	0x032C56EC BL 0x1C16DFC
	0x032C56F0 MOV X0, X23
	0x032C56F4 MOV X1, X31
	0x032C56F8 BL 0x338C698
	0x032C56FC MOV X1, X0
	0x032C5700 MOV X0, X22
	0x032C5704 MOV X2, X31
	0x032C5708 BL 0x3395F0C
	0x032C570C TBZ X0, 0x0, 0x32C5754
	0x032C5710 ADRP X20, 0xE2F000
	0x032C5714 LDR X20, [X20 + 0x868]
	0x032C5718 LDR X0, [X20]
	0x032C571C LDR W8, [X0 + 0xE0]
	0x032C5720 CBNZ W8, 0x32C572C
	0x032C5724 BL 0x1C16DFC
	0x032C5728 LDR X0, [X20]
	0x032C572C LDR X8, [X0 + 0xB8]
	0x032C5730 LDR X9, [X21]
	0x032C5734 MOV X0, X21
	0x032C5738 MOV X2, X19
	0x032C573C LDR X1, [X8 + 0x8]
	0x032C5740 LDP X4, X3, [X9 + 0x188]
	0x032C5744 LDP X20, X19, [X31 + 0x20]
	0x032C5748 LDP X22, X21, [X31 + 0x10]
	0x032C574C LDP X30, X23, [X31], #0x30
	0x032C5750 BR X4
	0x032C5754 ADRP X22, 0xE36000
	0x032C5758 LDR X22, [X22 + 0x7E8]
	0x032C575C LDR X0, [X22]
	0x032C5760 LDR W8, [X0 + 0xE0]
	0x032C5764 CBNZ W8, 0x32C576C
	0x032C5768 BL 0x1C16DFC
	0x032C576C MOV X0, X31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x1118000
	009 Move W8, [X20+2214]
	010 Move X21, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0xE3B000
	017 Move X0, [X0+1184]
	018 Call 0x1C17CF4
	019 Move X0, 0xE61000
	020 Move X0, [X0+2224]
	021 Call 0x1C17CF4
	022 Move X0, 0xE61000
	023 Move X0, [X0+2232]
	024 Call 0x1C17CF4
	025 Move X0, 0xE61000
	026 Move X0, [X0+2240]
	027 Call 0x1C17CF4
	028 Move X0, 0xE38000
	029 Move X0, [X0+2392]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+2214], W8
	033 Move X24, 0xE61000
	034 Move X24, [X24+2240]
	035 Move X0, X19
	036 Call ExceptionDispatchInfo.Capture, X0
	037 Move X20, X0
	038 Compare X21, 0
	039 JumpIfEqual {147}
	040 Move X8, [X24]
	041 Move W9, [X8+224]
	042 Compare W9, 0
	043 JumpIfNotEqual {47}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move X8, [X24]
	047 Move X9, [X8+184]
	048 Move X22, [X9+8]
	049 Compare X22, 0
	050 JumpIfNotEqual {73}
	051 Move W9, [X8+224]
	052 Compare W9, 0
	053 JumpIfNotEqual {57}
	054 Move X0, X8
	055 Call 0x1C17DFC
	056 Move X8, [X24]
	057 Move X9, 0xE3B000
	058 Move X8, [X8+184]
	059 Move X9, [X9+1184]
	060 Move X23, [X8]
	061 Move X0, [X9]
	062 Call 0x1C17F10
	063 Move X8, 0xE61000
	064 Move X8, [X8+2224]
	065 Move X22, X0
	066 Move X2, [X8]
	067 Move X1, X23
	068 Move X3, X31
	069 Call SendOrPostCallback..ctor, X0, X1, X2
	070 Move X8, [X24]
	071 Move X8, [X8+184]
	072 Move [X8+8], X22
	073 Move X8, [X21]
	074 Move X9, [X8+392]
	075 Move X3, [X8+400]
	076 Move X0, X21
	077 Move X1, X22
	078 Move X2, X20
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Move X20, [X31+48]
	081 Move X19, [X31+56]
	082 Move X22, [X31+32]
	083 Move X21, [X31+40]
	084 Move X24, [X31+16]
	085 Move X23, [X31+24]
	086 Move X30, [X31+64]
	087 Return 
	088 Move X20, X0
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X0, X20
	091 Call 0x3EB2AD0
	092 Move X20, X0
	093 Move X0, 0xE2F000
	094 Move X0, [X0+2000]
	095 Call 0x1C17D08
	096 Move X8, [X20]
	097 Move X1, [X8]
	098 Call 0x1C18270
	099 Move TEMP, X0
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfNotEqual {194}
	103 Move X20, [X20]
	104 Call 0x3EB2AE0
	105 Move X0, 0xE61000
	106 Move X0, [X0+2248]
	107 Call 0x1C17D08
	108 Move W1, 2
	109 Call 0x1C17D6C
	110 Compare X0, 0
	111 JumpIfEqual {202}
	112 Move X21, X0
	113 Compare X19, 0
	114 JumpIfEqual {121}
	115 Move X8, [X21]
	116 Move X0, X19
	117 Move X1, [X8+64]
	118 Call 0x1C17E00
	119 Compare X0, 0
	120 JumpIfEqual {191}
	121 Move W8, [X21+24]
	122 Compare W8, 0
	123 JumpIfEqual {190}
	124 Move [X21+32], X19
	125 Compare X20, 0
	126 JumpIfEqual {134}
	127 Move X8, [X21]
	128 Move X0, X20
	129 Move X1, [X8+64]
	130 Call 0x1C17E00
	131 Compare X0, 0
	132 JumpIfEqual {191}
	133 Move W8, [X21+24]
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move [X21+40], X20
	136 Move X0, 0xE61000
	137 Move X0, [X0+2256]
	138 Call 0x1C17D08
	139 Call 0x1C17F10
	140 Move X1, X21
	141 Move X2, X31
	142 Move X19, X0
	143 Call AggregateException..ctor, X0, X1
	144 Move X0, X19
	145 Call ExceptionDispatchInfo.Capture, X0
	146 Move X20, X0
	147 Move X0, [X24]
	148 Move W8, [X0+224]
	149 Compare W8, 0
	150 JumpIfNotEqual {153}
	151 Call 0x1C17DFC
	152 Move X0, [X24]
	153 Move X8, [X0+184]
	154 Move X19, [X8+16]
	155 Compare X19, 0
	156 JumpIfNotEqual {178}
	157 Move W8, [X0+224]
	158 Compare W8, 0
	159 JumpIfNotEqual {162}
	160 Call 0x1C17DFC
	161 Move X0, [X24]
	162 Move X9, 0xE38000
	163 Move X8, [X0+184]
	164 Move X9, [X9+2392]
	165 Move X21, [X8]
	166 Move X0, [X9]
	167 Call 0x1C17F10
	168 Move X8, 0xE61000
	169 Move X8, [X8+2232]
	170 Move X1, X21
	171 Move X3, X31
	172 Move X19, X0
	173 Move X2, [X8]
	174 Call WaitCallback..ctor, X0, X1, X2
	175 Move X8, [X24]
	176 Move X8, [X8+184]
	177 Move [X8+16], X19
	178 Move X0, X19
	179 Move X1, X20
	180 Move X20, [X31+48]
	181 Move X19, [X31+56]
	182 Move X22, [X31+32]
	183 Move X21, [X31+40]
	184 Move X24, [X31+16]
	185 Move X23, [X31+24]
	186 Move X2, X31
	187 Move X30, [X31+64]
	188 Call ThreadPool.QueueUserWorkItem, X0, X1
	189 Return 
	190 Call 0x1C17F28
	191 Call 0x1C17F44
	192 Move X1, X31
	193 Call 0x1C17DEC
	194 Move W0, 8
	195 Call 0x3EB2AF0
	196 Move X8, [X20]
	197 Move [X0], X8
	198 Move X1, 0xBF0000
	199 Add X1, X1, 3672
	200 Move X2, X31
	201 Call 0x3EB2B00
	202 Call 0x1C17F20
	203 Move X20, X0
	204 Call 0x3EB2AE0
	205 Move X0, X20
	206 Call 0x1D2D690
	207 Call 0x1991590

Method: System.Action CreateContinuationWrapper(System.Action continuation, System.Action invokeAction, System.Threading.Tasks.Task innerTask = null)

Disassembly:
	0x032C5E3C LDR X22, [X22 + 0x208]
	0x032C5E40 MOV X21, X2
	0x032C5E44 MOV X20, X1
	0x032C5E48 MOV X19, X0
	0x032C5E4C TBNZ X8, 0x0, 0x32C5E70
	0x032C5E50 ADRP X0, 0xE60000
	0x032C5E54 LDR X0, [X0 + 0x208]
	0x032C5E58 BL 0x1C16CF4
	0x032C5E5C ADRP X0, 0xE3B000
	0x032C5E60 LDR X0, [X0 + 0xE08]
	0x032C5E64 BL 0x1C16CF4
	0x032C5E68 MOVZ W8, 0x1
	0x032C5E6C STRB W8, [X23 + 0x8CA]
	0x032C5E70 MOV X0, X19
	0x032C5E74 MOV X1, X31
	0x032C5E78 BL 0x33BDD8C
	0x032C5E7C MOV X0, X31
	0x032C5E80 STR X21, [X19 + 0x18]
	0x032C5E84 BL 0x3241948
	0x032C5E88 LDR X8, [X22]
	0x032C5E8C MOV X21, X0
	0x032C5E90 MOV X0, X8
	0x032C5E94 BL 0x1C16F10
	0x032C5E98 MOV X1, X20
	0x032C5E9C MOV X2, X21
	0x032C5EA0 MOV X3, X31
	0x032C5EA4 MOV X22, X0
	0x032C5EA8 BL 0x32F5334
	0x032C5EAC STR X22, [X19 + 0x10]
	0x032C5EB0 CBZ X20, 0x32C5ED4
	0x032C5EB4 ADRP X8, 0xE3B000
	0x032C5EB8 LDR X8, [X8 + 0xE08]
	0x032C5EBC LDR X9, [X20]
	0x032C5EC0 LDR X8, [X8]
	0x032C5EC4 LDRB W11, [X9 + 0x130]
	0x032C5EC8 LDRB W10, [X8 + 0x130]
	0x032C5ECC CMP W11, W10
	0x032C5ED0 B.CS 0x32C5EDC
	0x032C5ED4 MOV X8, X31
	0x032C5ED8 B 0x32C5EF0
	0x032C5EDC LDR X9, [X9 + 0xC8]
	0x032C5EE0 ADD X9, X9, X10, 0x3, LSL
	0x032C5EE4 LDUR X9, [X9 - 0x8]
	0x032C5EE8 CMP X9, X8
	0x032C5EEC CSEL X8, X20, X31, EQ
	0x032C5EF0 STR X8, [X19 + 0x70]
	0x032C5EF4 MOV X0, X19

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0x1118000
	010 Move X25, 0xE61000
	011 Move X24, 0xE30000
	012 Move X23, 0xE61000
	013 Move W8, [X22+2215]
	014 Move X25, [X25+2360]
	015 Move X24, [X24+3696]
	016 Move X23, [X23+2368]
	017 Move X19, X2
	018 Move X20, X1
	019 Move X21, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {35}
	024 Move X0, 0xE30000
	025 Move X0, [X0+3696]
	026 Call 0x1C17CF4
	027 Move X0, 0xE61000
	028 Move X0, [X0+2368]
	029 Call 0x1C17CF4
	030 Move X0, 0xE61000
	031 Move X0, [X0+2360]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+2215], W8
	035 Move X0, [X25]
	036 Call 0x1C17F10
	037 Move X1, X21
	038 Move X2, X20
	039 Move X3, X19
	040 Move X22, X0
	041 Call ContinuationWrapper..ctor, X0, X1, X2, X3
	042 Move X0, [X24]
	043 Call 0x1C17F10
	044 Move X2, [X23]
	045 Move X1, X22
	046 Move X3, X31
	047 Move X19, X0
	048 Call Action..ctor, X0, X1, X2
	049 Move X0, X19
	050 Move X20, [X31+48]
	051 Move X19, [X31+56]
	052 Move X22, [X31+32]
	053 Move X21, [X31+40]
	054 Move X24, [X31+16]
	055 Move X23, [X31+24]
	056 Move X30, [X31+64]
	057 Move X25, [X31+72]
	058 Return X0

Method: System.Threading.Tasks.Task TryGetContinuationTask(System.Action action)

Disassembly:
	0x032C60DC B 0x32C60E0
	0x032C60E0 MOV X23, X0
	0x032C60E4 CMP W1, 0x1
	0x032C60E8 B.NE 0x32C6104
	0x032C60EC MOV X0, X23
	0x032C60F0 BL 0x3EB1AD0
	0x032C60F4 LDR X22, [X0]
	0x032C60F8 BL 0x3EB1AE0
	0x032C60FC MOVZ W23, 0x1
	0x032C6100 B 0x32C608C
	0x032C6104 MOV X22, X31
	0x032C6108 B 0x32C6110
	0x032C610C MOV X23, X0
	0x032C6110 LDRB W8, [X31 + 0xC]
	0x032C6114 CBZ W8, 0x32C6124
	0x032C6118 MOV X0, X19
	0x032C611C MOV X1, X31
	0x032C6120 BL 0x33E14E4
	0x032C6124 CBNZ X22, 0x32C6130
	0x032C6128 MOV X0, X23
	0x032C612C BL 0x1D2C690
	0x032C6130 MOV X0, X22
	0x032C6134 BL 0x1C16F18
	0x032C6138 BL 0x1990590
	0x032C613C STP X30, X19, [X31 - 0x10]!
	0x032C6140 MOV X8, X0
	0x032C6144 MOV X19, X0
	0x032C6148 LDR X0, [X8 + 0x10]!
	0x032C614C CBZ X0, 0x32C6170
	0x032C6150 STP X31, X31, [X8]
	0x032C6154 LDR X8, [X0]
	0x032C6158 LDP X9, X1, [X8 + 0x198]
	0x032C615C BLR X9
	0x032C6160 MOVI V0.2D, 0x0
	0x032C6164 STR X31, [X19 + 0x10]
	0x032C6168 STR X31, [X19 + 0x70]
	0x032C616C STP V0, V0, [X19 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1117000
	005 Move W8, [X20+2216]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE60000
	012 Move X0, [X0+2360]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2216], W8
	016 Compare X19, 0
	017 JumpIfEqual {28}
	018 Move X8, [X19+32]
	019 Compare X8, 0
	020 JumpIfEqual {28}
	021 Move X9, 0xE60000
	022 Move X9, [X9+2360]
	023 Move X10, [X8]
	024 Move X9, [X9]
	025 Move W12, [X10+304]
	026 Move W11, [X9+304]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X0, X31
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Return X0
	033 Move X10, [X10+200]
	034 Move X0, X31
	035 Add X10, X10, X11
	036 NotImplemented "Instruction LDUR not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 NotImplemented "Instruction CSEL not yet implemented."
	039 Compare X8, 0
	040 JumpIfEqual {42}
	041 Move X0, [X8+32]
	042 Call 0x1C17F20

