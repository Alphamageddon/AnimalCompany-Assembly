Type: System.Runtime.CompilerServices.TaskAwaiter/<>c__DisplayClass11_0

Method: System.Void .ctor()

Disassembly:
	0x032C4F24 LDR X0, [X0 + 0x588]
	0x032C4F28 BL 0x1C16CF4

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void <OutputWaitEtwEvents>b__0()

Disassembly:
	0x032C4F2C ADRP X0, 0xE30000
	0x032C4F30 LDR X0, [X0 + 0x7B8]
	0x032C4F34 BL 0x1C16CF4
	0x032C4F38 ADRP X0, 0xE57000
	0x032C4F3C LDR X0, [X0 + 0x818]
	0x032C4F40 BL 0x1C16CF4
	0x032C4F44 MOVZ W8, 0x1
	0x032C4F48 STRB W8, [X23 + 0x8A5]
	0x032C4F4C CBZ X22, 0x32C5000
	0x032C4F50 MOV X0, X31
	0x032C4F54 BL 0x33F6C70
	0x032C4F58 TBZ X0, 0x0, 0x32C4FC0
	0x032C4F5C MOV X0, X22
	0x032C4F60 MOV X1, X31
	0x032C4F64 BL 0x33EE7D4
	0x032C4F68 CBZ X21, 0x32C508C
	0x032C4F6C MOV W23, W0
	0x032C4F70 MOV X0, X21
	0x032C4F74 MOV X1, X31
	0x032C4F78 BL 0x33BE520
	0x032C4F7C CBZ X0, 0x32C508C
	0x032C4F80 LDR X8, [X0]
	0x032C4F84 LDP X9, X1, [X8 + 0x1A8]
	0x032C4F88 BLR X9
	0x032C4F8C ADRP X8, 0xE57000
	0x032C4F90 LDR X8, [X8 + 0x818]
	0x032C4F94 MOV X1, X0
	0x032C4F98 MOV X2, X31
	0x032C4F9C LDR X8, [X8]
	0x032C4FA0 MOV X0, X8
	0x032C4FA4 BL 0x321B938
	0x032C4FA8 MOV X2, X0
	0x032C4FAC MOV W0, W31
	0x032C4FB0 MOV W1, W23
	0x032C4FB4 MOV X3, X31
	0x032C4FB8 MOV X4, X31
	0x032C4FBC BL 0x33FAAE8
	0x032C4FC0 ADRP X23, 0xE30000
	0x032C4FC4 LDR X23, [X23 + 0x7B8]
	0x032C4FC8 LDR X0, [X23]
	0x032C4FCC LDR W8, [X0 + 0xE0]
	0x032C4FD0 CBNZ W8, 0x32C4FDC
	0x032C4FD4 BL 0x1C16DFC
	0x032C4FD8 LDR X0, [X23]
	0x032C4FDC LDR X8, [X0 + 0xB8]
	0x032C4FE0 LDRB W8, [X8 + 0x10]
	0x032C4FE4 CBZ W8, 0x32C5000
	0x032C4FE8 LDR W8, [X0 + 0xE0]
	0x032C4FEC CBNZ W8, 0x32C4FF4
	0x032C4FF0 BL 0x1C16DFC
	0x032C4FF4 MOV X0, X22
	0x032C4FF8 MOV X1, X31
	0x032C4FFC BL 0x33F69CC
	0x032C5000 STR X21, [X20]
	0x032C5004 CBZ X21, 0x32C508C
	0x032C5008 ADRP X10, 0xE56000
	0x032C500C LDR X8, [X21]
	0x032C5010 LDR X10, [X10 + 0x588]
	0x032C5014 LDRH W9, [X8 + 0x12E]
	0x032C5018 LDR X1, [X10]
	0x032C501C CBZ X9, 0x32C5040
	0x032C5020 LDR X10, [X8 + 0xB0]
	0x032C5024 ADD X10, X10, 0x8
	0x032C5028 LDUR X11, [X10 - 0x8]
	0x032C502C CMP X11, X1
	0x032C5030 B.EQ 0x32C5050
	0x032C5034 SUBS X9, X9, 0x1
	0x032C5038 ADD X10, X10, 0x10
	0x032C503C B.NE 0x32C5028
	0x032C5040 MOVZ W2, 0x1
	0x032C5044 MOV X0, X21
	0x032C5048 BL 0x1C5C788
	0x032C504C B 0x32C5060
	0x032C5050 LDR W9, [X10]
	0x032C5054 ADD W9, W9, 0x1
	0x032C5058 ADD X8, X8, W9, 0x4, SXTW
	0x032C505C ADD X0, X8, 0x138
	0x032C5060 LDP X8, X2, [X0]
	0x032C5064 MOV X0, X21
	0x032C5068 MOV X1, X21
	0x032C506C BLR X8
	0x032C5070 CBZ X19, 0x32C508C
	0x032C5074 LDR X8, [X20]
	0x032C5078 LDP X22, X21, [X31 + 0x10]
	0x032C507C STR X8, [X19 + 0x18]
	0x032C5080 LDP X20, X19, [X31 + 0x20]
	0x032C5084 LDP X30, X23, [X31], #0x30
	0x032C5088 RET
	0x032C508C BL 0x1C16F20
	0x032C5090 STR X30, [X31 - 0x30]!
	0x032C5094 STP X22, X21, [X31 + 0x10]
	0x032C5098 STP X20, X19, [X31 + 0x20]
	0x032C509C MOV X20, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1119000
	006 Move W8, [X20+2202]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0xE38000
	013 Move X0, [X0+2024]
	014 Call 0x1C17CF4
	015 Move X0, 0xE31000
	016 Move X0, [X0+1976]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+2202], W8
	020 Move X0, X31
	021 Call TaskTrace.get_Enabled
	022 Move TEMP, X0
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfNotEqual {102}
	026 Move X20, 0xE31000
	027 Move X20, [X20+1976]
	028 Move X0, [X20]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X21, 0x1116000
	034 Move W8, [X21+2190]
	035 Compare W8, 0
	036 JumpIfNotEqual {42}
	037 Move X0, 0xE31000
	038 Move X0, [X0+1976]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X21+2190], W8
	042 Move X0, [X20]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {48}
	046 Call 0x1C17DFC
	047 Move X0, [X20]
	048 Call 0x1C17D0C
	049 Move X21, [X0]
	050 Compare X21, 0
	051 JumpIfEqual {62}
	052 Move X0, [X21+40]
	053 Compare X0, 0
	054 JumpIfEqual {113}
	055 Move X1, X31
	056 Call TaskScheduler.get_Id, X0
	057 Move W20, W0
	058 Move X0, X21
	059 Move X1, X31
	060 Call Task.get_Id, X0
	061 Move W21, W0
	062 Move X20, 0xE38000
	063 Move X20, [X20+2024]
	064 Move X0, [X20]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Move X21, 0x1115000
	070 Move W8, [X21+2189]
	071 Compare W8, 0
	072 JumpIfNotEqual {78}
	073 Move X0, 0xE37000
	074 Move X0, [X0+2024]
	075 Call 0x1C17CF4
	076 Move W8, 1
	077 Move [X21+2189], W8
	078 Move X0, [X20]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {84}
	082 Call 0x1C17DFC
	083 Move X0, [X20]
	084 Move X8, [X0+184]
	085 Move X0, [X8+8]
	086 Compare X0, 0
	087 JumpIfEqual {113}
	088 Move X1, X31
	089 Call TaskScheduler.get_Id, X0
	090 Move W20, W0
	091 Move W21, W31
	092 Move X0, [X19+16]
	093 Compare X0, 0
	094 JumpIfEqual {113}
	095 Move X1, X31
	096 Call Task.get_Id, X0
	097 Move W2, W0
	098 Move W0, W20
	099 Move W1, W21
	100 Move X3, X31
	101 Call TaskTrace.TaskWaitEnd, X0, X1, X2
	102 Move X8, [X19+24]
	103 Compare X8, 0
	104 JumpIfEqual {113}
	105 Move X2, [X8+24]
	106 Move X0, [X8+64]
	107 Move X1, [X8+40]
	108 Move X20, [X31+16]
	109 Move X19, [X31+24]
	110 Move X30, [X31+32]
	111 Move X21, [X31+40]
	112 CallNoReturn X2
	113 Call 0x1C17F20

