Type: System.Runtime.CompilerServices.ValueTaskAwaiter

Method: System.Void .ctor(System.Threading.Tasks.ValueTask value)

Disassembly:
	0x032C44EC ADRP X0, 0xE38000
	0x032C44F0 LDR X0, [X0 + 0x958]

ISIL:
	001 Move [X0], X1
	002 Move [X0+8], X2
	003 Return 

Method: System.Boolean get_IsCompleted()

Disassembly:
	0x032C44F4 BL 0x1C16CF4
	0x032C44F8 MOVZ W8, 0x1
	0x032C44FC STRB W8, [X20 + 0x8A6]
	0x032C4500 ADRP X24, 0xE61000
	0x032C4504 LDR X24, [X24 + 0x8C0]
	0x032C4508 MOV X0, X19
	0x032C450C BL 0x32C2380
	0x032C4510 MOV X20, X0
	0x032C4514 CBZ X21, 0x32C4698
	0x032C4518 LDR X8, [X24]
	0x032C451C LDR W9, [X8 + 0xE0]
	0x032C4520 CBNZ W9, 0x32C4530
	0x032C4524 MOV X0, X8
	0x032C4528 BL 0x1C16DFC
	0x032C452C LDR X8, [X24]
	0x032C4530 LDR X9, [X8 + 0xB8]
	0x032C4534 LDR X22, [X9 + 0x8]
	0x032C4538 CBNZ X22, 0x32C4590
	0x032C453C LDR W9, [X8 + 0xE0]
	0x032C4540 CBNZ W9, 0x32C4550
	0x032C4544 MOV X0, X8
	0x032C4548 BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1119000
	006 Move X21, 0xE5A000
	007 Move W8, [X20+2193]
	008 Move X21, [X21+3648]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE5A000
	015 Move X0, [X0+3648]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2193], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call 0x32D6470
	031 Return X0

Method: System.Void GetResult()

Disassembly:
	0x032C454C LDR X8, [X24]
	0x032C4550 ADRP X9, 0xE3B000
	0x032C4554 LDR X8, [X8 + 0xB8]
	0x032C4558 LDR X9, [X9 + 0x4A0]
	0x032C455C LDR X23, [X8]
	0x032C4560 LDR X0, [X9]
	0x032C4564 BL 0x1C16F10
	0x032C4568 ADRP X8, 0xE61000
	0x032C456C LDR X8, [X8 + 0x8B0]
	0x032C4570 MOV X22, X0
	0x032C4574 LDR X2, [X8]
	0x032C4578 MOV X1, X23
	0x032C457C MOV X3, X31
	0x032C4580 BL 0x33DCEF0
	0x032C4584 LDR X8, [X24]
	0x032C4588 LDR X8, [X8 + 0xB8]
	0x032C458C STR X22, [X8 + 0x8]
	0x032C4590 LDR X8, [X21]
	0x032C4594 LDP X9, X3, [X8 + 0x188]
	0x032C4598 MOV X0, X21
	0x032C459C MOV X1, X22
	0x032C45A0 MOV X2, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1119000
	006 Move X21, 0xE5A000
	007 Move W8, [X20+2194]
	008 Move X21, [X21+3648]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE5A000
	015 Move X0, [X0+3648]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2194], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call 0x32D6578
	031 Return 

Method: System.Void OnCompleted(System.Action continuation)

Disassembly:
	0x032C45A4 BLR X9
	0x032C45A8 LDP X20, X19, [X31 + 0x30]
	0x032C45AC LDP X22, X21, [X31 + 0x20]
	0x032C45B0 LDP X24, X23, [X31 + 0x10]
	0x032C45B4 LDR X30, [X31], #0x40
	0x032C45B8 RET
	0x032C45BC B 0x32C45C8
	0x032C45C0 B 0x32C45C8
	0x032C45C4 B 0x32C45C8
	0x032C45C8 MOV X20, X0
	0x032C45CC CMP W1, 0x1
	0x032C45D0 B.NE 0x32C4764
	0x032C45D4 MOV X0, X20
	0x032C45D8 BL 0x3EB1AD0
	0x032C45DC MOV X20, X0
	0x032C45E0 ADRP X0, 0xE2F000
	0x032C45E4 LDR X0, [X0 + 0x7D0]
	0x032C45E8 BL 0x1C16D08
	0x032C45EC LDR X8, [X20]
	0x032C45F0 LDR X1, [X8]
	0x032C45F4 BL 0x1C17270
	0x032C45F8 TBZ X0, 0x0, 0x32C4738
	0x032C45FC LDR X20, [X20]
	0x032C4600 BL 0x3EB1AE0
	0x032C4604 ADRP X0, 0xE61000
	0x032C4608 LDR X0, [X0 + 0x8C8]
	0x032C460C BL 0x1C16D08
	0x032C4610 MOVZ W1, 0x2
	0x032C4614 BL 0x1C16D6C
	0x032C4618 CBZ X0, 0x32C4758
	0x032C461C MOV X21, X0
	0x032C4620 CBZ X19, 0x32C4638
	0x032C4624 LDR X8, [X21]
	0x032C4628 MOV X0, X19
	0x032C462C LDR X1, [X8 + 0x40]
	0x032C4630 BL 0x1C16E00
	0x032C4634 CBZ X0, 0x32C472C
	0x032C4638 LDR W8, [X21 + 0x18]
	0x032C463C CBZ W8, 0x32C4728
	0x032C4640 STR X19, [X21 + 0x20]
	0x032C4644 CBZ X20, 0x32C4660
	0x032C4648 LDR X8, [X21]
	0x032C464C MOV X0, X20
	0x032C4650 LDR X1, [X8 + 0x40]
	0x032C4654 BL 0x1C16E00
	0x032C4658 CBZ X0, 0x32C472C
	0x032C465C LDR W8, [X21 + 0x18]
	0x032C4660 CMP W8, 0x1
	0x032C4664 B.LS 0x32C4728
	0x032C4668 STR X20, [X21 + 0x28]
	0x032C466C ADRP X0, 0xE61000
	0x032C4670 LDR X0, [X0 + 0x8D0]
	0x032C4674 BL 0x1C16D08
	0x032C4678 BL 0x1C16F10
	0x032C467C MOV X1, X21
	0x032C4680 MOV X2, X31
	0x032C4684 MOV X19, X0
	0x032C4688 BL 0x331463C
	0x032C468C MOV X0, X19
	0x032C4690 BL 0x32C2380
	0x032C4694 MOV X20, X0
	0x032C4698 LDR X0, [X24]
	0x032C469C LDR W8, [X0 + 0xE0]
	0x032C46A0 CBNZ W8, 0x32C46AC
	0x032C46A4 BL 0x1C16DFC
	0x032C46A8 LDR X0, [X24]
	0x032C46AC LDR X8, [X0 + 0xB8]
	0x032C46B0 LDR X19, [X8 + 0x10]
	0x032C46B4 CBNZ X19, 0x32C4708
	0x032C46B8 LDR W8, [X0 + 0xE0]
	0x032C46BC CBNZ W8, 0x32C46C8
	0x032C46C0 BL 0x1C16DFC
	0x032C46C4 LDR X0, [X24]
	0x032C46C8 ADRP X9, 0xE38000
	0x032C46CC LDR X8, [X0 + 0xB8]
	0x032C46D0 LDR X9, [X9 + 0x958]
	0x032C46D4 LDR X21, [X8]
	0x032C46D8 LDR X0, [X9]
	0x032C46DC BL 0x1C16F10
	0x032C46E0 ADRP X8, 0xE61000
	0x032C46E4 LDR X8, [X8 + 0x8B8]
	0x032C46E8 MOV X1, X21
	0x032C46EC MOV X3, X31
	0x032C46F0 MOV X19, X0
	0x032C46F4 LDR X2, [X8]
	0x032C46F8 BL 0x33E7508
	0x032C46FC LDR X8, [X24]
	0x032C4700 LDR X8, [X8 + 0xB8]
	0x032C4704 STR X19, [X8 + 0x10]
	0x032C4708 MOV X0, X19
	0x032C470C MOV X1, X20
	0x032C4710 LDP X20, X19, [X31 + 0x30]
	0x032C4714 LDP X22, X21, [X31 + 0x20]
	0x032C4718 LDP X24, X23, [X31 + 0x10]
	0x032C471C MOV X2, X31
	0x032C4720 LDR X30, [X31], #0x40
	0x032C4724 B 0x33E9B34
	0x032C4728 BL 0x1C16F28
	0x032C472C BL 0x1C16F44

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x1119000
	008 Move W8, [X20+2195]
	009 Move X19, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0xE5F000
	016 Move X0, [X0+3752]
	017 Call 0x1C17CF4
	018 Move X0, 0xE31000
	019 Move X0, [X0+1976]
	020 Call 0x1C17CF4
	021 Move X0, 0xE58000
	022 Move X0, [X0+1656]
	023 Call 0x1C17CF4
	024 Move X0, 0xE5A000
	025 Move X0, [X0+3648]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+2195], W8
	029 Move X20, [X21]
	030 Compare X20, 0
	031 JumpIfEqual {70}
	032 Move X9, 0xE31000
	033 Move X9, [X9+1976]
	034 Move X8, [X20]
	035 Move X9, [X9]
	036 Move W11, [X8+304]
	037 Move W10, [X9+304]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X11, [X8+200]
	040 Add X10, X11, X10
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X22, 0xE58000
	044 Move X22, [X22+1656]
	045 Move X23, 0xE5F000
	046 Move X0, [X22]
	047 Move W9, [X0+224]
	048 Move X23, [X23+3752]
	049 Compare W9, 0
	050 JumpIfNotEqual {54}
	051 Call 0x1C17DFC
	052 Move X0, [X22]
	053 Move X8, [X20]
	054 Move X10, [X0+184]
	055 NotImplemented "Instruction LDRH not yet implemented."
	056 NotImplemented "Instruction LDRH not yet implemented."
	057 Move X1, [X23]
	058 Move X22, [X10]
	059 Compare X9, 0
	060 JumpIfEqual {67}
	061 Move X10, [X8+176]
	062 Add X10, X10, 8
	063 NotImplemented "Instruction LDUR not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Subtract X9, X9, 1
	066 Add X10, X10, 16
	067 Move W2, 1
	068 Move X0, X20
	069 Call 0x1C5D788
	070 Move X8, 0xE5A000
	071 Move X8, [X8+3648]
	072 Move X0, [X8]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Move X0, X31
	078 Call ValueTask.get_CompletedTask
	079 Compare X0, 0
	080 JumpIfNotEqual {101}
	081 Call 0x1C17F20
	082 Move W9, [X10]
	083 Add W9, W9, 1
	084 Add X8, X8, W9
	085 Add X0, X8, 312
	086 Move X6, [X0]
	087 Move X5, [X0+8]
	088 Move X0, X20
	089 Move X1, X22
	090 Move X2, X19
	091 Move W3, W21
	092 Move X20, [X31+32]
	093 Move X19, [X31+40]
	094 Move X22, [X31+16]
	095 Move X21, [X31+24]
	096 Move W4, 3
	097 Move X30, [X31+48]
	098 Move X23, [X31+56]
	099 CallNoReturn X6
	100 Move X0, X20
	101 Move X1, X31
	102 Call Task.GetAwaiter, X0
	103 Move X1, X19
	104 Move X20, [X31+32]
	105 Move X19, [X31+40]
	106 Move X22, [X31+16]
	107 Move X21, [X31+24]
	108 Move W2, 1
	109 Move W3, 1
	110 Move X30, [X31+48]
	111 Move X23, [X31+56]
	112 Call TaskAwaiter.OnCompletedInternal, X0, X1, X2, X3
	113 Return 

Method: System.Void UnsafeOnCompleted(System.Action continuation)

Disassembly:
	0x032C4740 LDR X8, [X20]
	0x032C4744 STR X8, [X0]
	0x032C4748 ADRP X1, 0xBF0000
	0x032C474C ADD X1, X1, 0xE58
	0x032C4750 MOV X2, X31
	0x032C4754 BL 0x3EB1B00
	0x032C4758 BL 0x1C16F20
	0x032C475C MOV X20, X0
	0x032C4760 BL 0x3EB1AE0
	0x032C4764 MOV X0, X20
	0x032C4768 BL 0x1D2C690
	0x032C476C BL 0x1990590
	0x032C4770 STP X31, X31, [X8]
	0x032C4774 STR X31, [X8 + 0x10]
	0x032C4778 RET
	0x032C477C STR X30, [X31 - 0x30]!
	0x032C4780 STP X22, X21, [X31 + 0x10]
	0x032C4784 STP X20, X19, [X31 + 0x20]
	0x032C4788 ADRP X22, 0x1118000
	0x032C478C ADRP X21, 0xE57000
	0x032C4790 LDRB W8, [X22 + 0x89C]
	0x032C4794 LDR X21, [X21 + 0x810]
	0x032C4798 MOV X19, X1
	0x032C479C MOV X20, X0
	0x032C47A0 TBNZ X8, 0x0, 0x32C47C4
	0x032C47A4 ADRP X0, 0xE61000
	0x032C47A8 LDR X0, [X0 + 0x8D8]
	0x032C47AC BL 0x1C16CF4
	0x032C47B0 ADRP X0, 0xE57000
	0x032C47B4 LDR X0, [X0 + 0x810]
	0x032C47B8 BL 0x1C16CF4
	0x032C47BC MOVZ W8, 0x1
	0x032C47C0 STRB W8, [X22 + 0x89C]
	0x032C47C4 LDR X0, [X21]
	0x032C47C8 ADRP X21, 0xE61000
	0x032C47CC LDR W8, [X0 + 0xE0]
	0x032C47D0 LDR X21, [X21 + 0x8D8]
	0x032C47D4 CBNZ W8, 0x32C47DC
	0x032C47D8 BL 0x1C16DFC
	0x032C47DC LDR X2, [X21]
	0x032C47E0 MOV X0, X20
	0x032C47E4 MOV X1, X19
	0x032C47E8 LDP X20, X19, [X31 + 0x20]
	0x032C47EC LDP X22, X21, [X31 + 0x10]
	0x032C47F0 LDR X30, [X31], #0x30
	0x032C47F4 B 0x2635BF0
	0x032C47F8 STP X30, X21, [X31 - 0x20]!
	0x032C47FC STP X20, X19, [X31 + 0x10]
	0x032C4800 ADRP X21, 0x1118000
	0x032C4804 ADRP X20, 0xE57000
	0x032C4808 LDRB W8, [X21 + 0x89D]
	0x032C480C LDR X20, [X20 + 0x810]
	0x032C4810 MOV X19, X0
	0x032C4814 TBNZ X8, 0x0, 0x32C4838
	0x032C4818 ADRP X0, 0xE61000
	0x032C481C LDR X0, [X0 + 0x8E0]
	0x032C4820 BL 0x1C16CF4
	0x032C4824 ADRP X0, 0xE57000
	0x032C4828 LDR X0, [X0 + 0x810]
	0x032C482C BL 0x1C16CF4
	0x032C4830 MOVZ W8, 0x1
	0x032C4834 STRB W8, [X21 + 0x89D]
	0x032C4838 LDR X0, [X20]
	0x032C483C ADRP X20, 0xE61000
	0x032C4840 LDR W8, [X0 + 0xE0]
	0x032C4844 LDR X20, [X20 + 0x8E0]
	0x032C4848 CBNZ W8, 0x32C4850
	0x032C484C BL 0x1C16DFC
	0x032C4850 LDR X1, [X20]
	0x032C4854 MOV X0, X19
	0x032C4858 LDP X20, X19, [X31 + 0x10]
	0x032C485C LDP X30, X21, [X31], #0x20
	0x032C4860 B 0x2635BF8
	0x032C4864 STP X30, X21, [X31 - 0x20]!
	0x032C4868 STP X20, X19, [X31 + 0x10]
	0x032C486C ADRP X21, 0x1118000
	0x032C4870 ADRP X20, 0xE32000
	0x032C4874 LDRB W8, [X21 + 0x89E]
	0x032C4878 LDR X20, [X20 + 0x280]
	0x032C487C MOV X19, X0
	0x032C4880 TBNZ X8, 0x0, 0x32C48B0
	0x032C4884 ADRP X0, 0xE61000
	0x032C4888 LDR X0, [X0 + 0x8E8]
	0x032C488C BL 0x1C16CF4
	0x032C4890 ADRP X0, 0xE57000
	0x032C4894 LDR X0, [X0 + 0x810]
	0x032C4898 BL 0x1C16CF4
	0x032C489C ADRP X0, 0xE32000
	0x032C48A0 LDR X0, [X0 + 0x280]
	0x032C48A4 BL 0x1C16CF4
	0x032C48A8 MOVZ W8, 0x1
	0x032C48AC STRB W8, [X21 + 0x89E]
	0x032C48B0 LDR X0, [X20]
	0x032C48B4 ADRP X21, 0xE57000
	0x032C48B8 LDR W8, [X0 + 0xE0]
	0x032C48BC LDR X21, [X21 + 0x810]
	0x032C48C0 CBNZ W8, 0x32C48CC
	0x032C48C4 BL 0x1C16DFC
	0x032C48C8 LDR X0, [X20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x1119000
	008 Move W8, [X20+2196]
	009 Move X19, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0xE5F000
	016 Move X0, [X0+3752]
	017 Call 0x1C17CF4
	018 Move X0, 0xE31000
	019 Move X0, [X0+1976]
	020 Call 0x1C17CF4
	021 Move X0, 0xE58000
	022 Move X0, [X0+1656]
	023 Call 0x1C17CF4
	024 Move X0, 0xE5A000
	025 Move X0, [X0+3648]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+2196], W8
	029 Move X20, [X21]
	030 Compare X20, 0
	031 JumpIfEqual {70}
	032 Move X9, 0xE31000
	033 Move X9, [X9+1976]
	034 Move X8, [X20]
	035 Move X9, [X9]
	036 Move W11, [X8+304]
	037 Move W10, [X9+304]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X11, [X8+200]
	040 Add X10, X11, X10
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X22, 0xE58000
	044 Move X22, [X22+1656]
	045 Move X23, 0xE5F000
	046 Move X0, [X22]
	047 Move W9, [X0+224]
	048 Move X23, [X23+3752]
	049 Compare W9, 0
	050 JumpIfNotEqual {54}
	051 Call 0x1C17DFC
	052 Move X0, [X22]
	053 Move X8, [X20]
	054 Move X10, [X0+184]
	055 NotImplemented "Instruction LDRH not yet implemented."
	056 NotImplemented "Instruction LDRH not yet implemented."
	057 Move X1, [X23]
	058 Move X22, [X10]
	059 Compare X9, 0
	060 JumpIfEqual {67}
	061 Move X10, [X8+176]
	062 Add X10, X10, 8
	063 NotImplemented "Instruction LDUR not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Subtract X9, X9, 1
	066 Add X10, X10, 16
	067 Move W2, 1
	068 Move X0, X20
	069 Call 0x1C5D788
	070 Move X8, 0xE5A000
	071 Move X8, [X8+3648]
	072 Move X0, [X8]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Move X0, X31
	078 Call ValueTask.get_CompletedTask
	079 Compare X0, 0
	080 JumpIfNotEqual {101}
	081 Call 0x1C17F20
	082 Move W9, [X10]
	083 Add W9, W9, 1
	084 Add X8, X8, W9
	085 Add X0, X8, 312
	086 Move X6, [X0]
	087 Move X5, [X0+8]
	088 Move X0, X20
	089 Move X1, X22
	090 Move X2, X19
	091 Move W3, W21
	092 Move X20, [X31+32]
	093 Move X19, [X31+40]
	094 Move X22, [X31+16]
	095 Move X21, [X31+24]
	096 Move W4, 1
	097 Move X30, [X31+48]
	098 Move X23, [X31+56]
	099 CallNoReturn X6
	100 Move X0, X20
	101 Move X1, X31
	102 Call Task.GetAwaiter, X0
	103 Move X1, X19
	104 Move X20, [X31+32]
	105 Move X19, [X31+40]
	106 Move X22, [X31+16]
	107 Move X21, [X31+24]
	108 Move W2, 1
	109 Move W3, W31
	110 Move X30, [X31+48]
	111 Move X23, [X31+56]
	112 Call TaskAwaiter.OnCompletedInternal, X0, X1, X2, X3
	113 Return 

Method: System.Void .cctor()

Disassembly:
	0x032C48DC LDR X20, [X9]
	0x032C48E0 LDR X21, [X21 + 0x8E8]
	0x032C48E4 CBNZ W10, 0x32C48F0
	0x032C48E8 MOV X0, X8
	0x032C48EC BL 0x1C16DFC
	0x032C48F0 LDR X2, [X21]
	0x032C48F4 MOV X0, X19
	0x032C48F8 MOV X1, X20
	0x032C48FC LDP X20, X19, [X31 + 0x10]
	0x032C4900 LDP X30, X21, [X31], #0x20
	0x032C4904 B 0x2635E0C
	0x032C4908 STR X30, [X31 - 0x30]!
	0x032C490C STP X22, X21, [X31 + 0x10]
	0x032C4910 STP X20, X19, [X31 + 0x20]
	0x032C4914 ADRP X22, 0x1118000
	0x032C4918 ADRP X21, 0xE57000
	0x032C491C LDRB W8, [X22 + 0x89F]
	0x032C4920 LDR X21, [X21 + 0x810]
	0x032C4924 MOV X19, X1
	0x032C4928 MOV X20, X0
	0x032C492C TBNZ X8, 0x0, 0x32C4950
	0x032C4930 ADRP X0, 0xE61000
	0x032C4934 LDR X0, [X0 + 0x8F0]
	0x032C4938 BL 0x1C16CF4
	0x032C493C ADRP X0, 0xE57000
	0x032C4940 LDR X0, [X0 + 0x810]
	0x032C4944 BL 0x1C16CF4
	0x032C4948 MOVZ W8, 0x1
	0x032C494C STRB W8, [X22 + 0x89F]
	0x032C4950 LDR X0, [X21]
	0x032C4954 ADRP X21, 0xE61000
	0x032C4958 LDR W8, [X0 + 0xE0]
	0x032C495C LDR X21, [X21 + 0x8F0]
	0x032C4960 CBNZ W8, 0x32C4968
	0x032C4964 BL 0x1C16DFC
	0x032C4968 LDR X2, [X21]
	0x032C496C MOV X0, X20
	0x032C4970 MOV X1, X19
	0x032C4974 LDP X20, X19, [X31 + 0x20]
	0x032C4978 LDP X22, X21, [X31 + 0x10]
	0x032C497C LDR X30, [X31], #0x30
	0x032C4980 B 0x2635E90
	0x032C4984 STR X30, [X31 - 0x20]!
	0x032C4988 STP X20, X19, [X31 + 0x10]
	0x032C498C ADRP X20, 0x1118000
	0x032C4990 ADRP X19, 0xE57000
	0x032C4994 LDRB W8, [X20 + 0x8A0]
	0x032C4998 LDR X19, [X19 + 0x810]
	0x032C499C TBNZ X8, 0x0, 0x32C49C0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x1119000
	007 Move X19, 0xE62000
	008 Move W8, [X20+2197]
	009 Move X19, [X19+2144]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0xE5A000
	015 Move X0, [X0+3656]
	016 Call 0x1C17CF4
	017 Move X0, 0xE62000
	018 Move X0, [X0+2152]
	019 Call 0x1C17CF4
	020 Move X0, 0xE62000
	021 Move X0, [X0+2144]
	022 Call 0x1C17CF4
	023 Move X0, 0xE58000
	024 Move X0, [X0+1656]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+2197], W8
	028 Move X0, [X19]
	029 Move X22, 0xE5A000
	030 Move X20, 0xE62000
	031 Move X21, 0xE58000
	032 Move W8, [X0+224]
	033 Move X22, [X22+3656]
	034 Move X20, [X20+2152]
	035 Move X21, [X21+1656]
	036 Compare W8, 0
	037 JumpIfNotEqual {40}
	038 Call 0x1C17DFC
	039 Move X0, [X19]
	040 Move X8, [X0+184]
	041 Move X0, [X22]
	042 Move X19, [X8]
	043 Call 0x1C17F10
	044 Move X2, [X20]
	045 Move X1, X19
	046 Move X3, X31
	047 Move X20, X0
	048 Call Action`1<Object>..ctor, X0, X1, X2
	049 Move X8, [X21]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X8, [X8+184]
	053 Move [X8], X20
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X30, [X31+48]
	057 Return 

