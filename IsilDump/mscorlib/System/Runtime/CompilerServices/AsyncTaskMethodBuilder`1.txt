Type: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1

Method: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<TResult> Create()

Disassembly:
	0x024DB964 MOV X1, X31
	0x024DB968 BL 0x338C698
	0x024DB96C ADRP X8, 0x1C3F000

ISIL:
	001 Move [X8], X31
	002 Move [X8+8], X31
	003 Move [X8+16], X31
	004 Return X0

Method: System.Void Start(ref TStateMachine stateMachine)

Disassembly:
	0x01FAA4A8 MOV X1, X0
	0x01FAA4AC B 0x1FAA4B4
	0x01FAA4B0 MOV X1, X31
	0x01FAA4B4 ADD X2, X31, 0x78
	0x01FAA4B8 MOV X0, X21
	0x01FAA4BC MOV X3, X31
	0x01FAA4C0 BL 0x32C4B94
	0x01FAA4C4 LDR X8, [X21]
	0x01FAA4C8 MOV X23, X0
	0x01FAA4CC CBNZ X8, 0x1FAA55C
	0x01FAA4D0 LDR X0, [X20 + 0x20]
	0x01FAA4D4 LDRB W8, [X0 + 0x135]
	0x01FAA4D8 TBNZ X8, 0x0, 0x1FAA4E0
	0x01FAA4DC BL 0x1C5C684
	0x01FAA4E0 LDR X8, [X0 + 0xC0]
	0x01FAA4E4 LDR X0, [X8 + 0x10]
	0x01FAA4E8 LDRB W8, [X0 + 0x135]
	0x01FAA4EC TBNZ X8, 0x0, 0x1FAA4F4
	0x01FAA4F0 BL 0x1C5C684
	0x01FAA4F4 LDR W8, [X0 + 0xE0]
	0x01FAA4F8 CBNZ W8, 0x1FAA500
	0x01FAA4FC BL 0x1C16DFC
	0x01FAA500 LDR X0, [X20 + 0x20]
	0x01FAA504 LDRB W8, [X0 + 0x135]
	0x01FAA508 TBNZ X8, 0x0, 0x1FAA510
	0x01FAA50C BL 0x1C5C684
	0x01FAA510 LDR X8, [X0 + 0xC0]
	0x01FAA514 LDR X1, [X8 + 0x8]
	0x01FAA518 MOV X0, X21
	0x01FAA51C BL 0x262EF84
	0x01FAA520 MOV X24, X0
	0x01FAA524 ADD X0, X31, 0x0
	0x01FAA528 MOVZ W2, 0x70
	0x01FAA52C MOV X1, X22
	0x01FAA530 BL 0x3EB1AC0
	0x01FAA534 LDR X8, [X20 + 0x38]
	0x01FAA538 LDR X0, [X8 + 0x8]
	0x01FAA53C ADD X1, X31, 0x0
	0x01FAA540 BL 0x1C16E04
	0x01FAA544 MOV X1, X0
	0x01FAA548 LDR X2, [X31 + 0x78]
	0x01FAA54C MOV X0, X21
	0x01FAA550 MOV X3, X24
	0x01FAA554 MOV X4, X31
	0x01FAA558 BL 0x32C4EF8
	0x01FAA55C LDR X8, [X20 + 0x38]
	0x01FAA560 LDR X2, [X8 + 0x20]
	0x01FAA564 MOV X0, X19
	0x01FAA568 MOV X1, X23
	0x01FAA56C BL 0x29987BC
	0x01FAA570 LDP X20, X19, [X31 + 0xA0]
	0x01FAA574 LDP X22, X21, [X31 + 0x90]
	0x01FAA578 LDP X24, X23, [X31 + 0x80]
	0x01FAA57C LDR X30, [X31 + 0x70]
	0x01FAA580 ADD X31, X31, 0xB0
	0x01FAA584 RET
	0x01FAA588 B 0x1FAA5A4
	0x01FAA58C B 0x1FAA5A4
	0x01FAA590 B 0x1FAA5A4
	0x01FAA594 B 0x1FAA5A4
	0x01FAA598 B 0x1FAA5A4
	0x01FAA59C B 0x1FAA5A4
	0x01FAA5A0 B 0x1FAA5A4
	0x01FAA5A4 MOV X19, X0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+48], X20
	004 Move [X31+56], X19
	005 Move X8, [X2+56]
	006 Move X20, X2
	007 Move X19, X1
	008 Compare X8, 0
	009 JumpIfNotEqual {18}
	010 Move X0, 0x2172000
	011 Move X0, [X0+1408]
	012 Call 0x1C17CF4
	013 Move X8, [X20+56]
	014 Compare X8, 0
	015 JumpIfNotEqual {18}
	016 Move X0, X20
	017 Call 0x1C5D6E0
	018 NotImplemented "Instruction MOVI not yet implemented."
	019 Move X0, X31
	020 Move [X31], V0
	021 Move [X31+8], V0
	022 Call RuntimeHelpers.PrepareConstrainedRegions
	023 Move X8, 0x2172000
	024 Move X8, [X8+1408]
	025 Move X0, [X8]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Add X0, X31, 0
	031 Move X1, X31
	032 Call ExecutionContext.EstablishCopyOnWriteScope, X0
	033 Move X8, [X20+56]
	034 Move X1, [X8+16]
	035 Move X0, X19
	036 Call <InnerRead>d__25.MoveNext, X0
	037 Add X0, X31, 0
	038 Move X1, X31
	039 Call ExecutionContextSwitcher.Undo, X0
	040 Move X20, [X31+48]
	041 Move X19, [X31+56]
	042 Move X30, [X31+32]
	043 Add X31, X31, 64
	044 Return 
	045 Move X20, X0
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X0, X20
	048 Call 0x3EB2AD0
	049 Move X19, [X0]
	050 Call 0x3EB2AE0
	051 Add X0, X31, 0
	052 Move X1, X31
	053 Call ExecutionContextSwitcher.Undo, X0
	054 Compare X19, 0
	055 JumpIfEqual {40}
	056 Move X0, X19
	057 Call 0x1C17F18
	058 Move X19, X31
	059 Move X20, X0
	060 Add X0, X31, 0
	061 Move X1, X31
	062 Call ExecutionContextSwitcher.Undo, X0
	063 Compare X19, 0
	064 JumpIfNotEqual {67}
	065 Move X0, X20
	066 Call 0x1D2D690
	067 Move X0, X19
	068 Call 0x1C17F18
	069 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x024DB970 LDR X8, [X8 + 0xD68]
	0x024DB974 MOV X22, X0

ISIL:
	001 Move X2, X31
	002 Call AsyncMethodBuilderCore.SetStateMachine, X0, X1
	003 Return 

Method: System.Void AwaitOnCompleted(ref TAwaiter awaiter, ref TStateMachine stateMachine)

Disassembly:
	0x01FD4664 B 0x1FD4680
	0x01FD4668 B 0x1FD4680
	0x01FD466C B 0x1FD4680
	0x01FD4670 B 0x1FD4680
	0x01FD4674 B 0x1FD4680
	0x01FD4678 B 0x1FD4680
	0x01FD467C B 0x1FD4680
	0x01FD4680 MOV X19, X0
	0x01FD4684 CMP W1, 0x1
	0x01FD4688 B.NE 0x1FD46F8
	0x01FD468C MOV X0, X19
	0x01FD4690 BL 0x3EB1AD0
	0x01FD4694 MOV X19, X0
	0x01FD4698 ADRP X0, 0x211F000
	0x01FD469C LDR X0, [X0 + 0x7D0]
	0x01FD46A0 BL 0x1C16D08
	0x01FD46A4 LDR X8, [X19]
	0x01FD46A8 LDR X1, [X8]
	0x01FD46AC BL 0x1C17270
	0x01FD46B0 TBZ X0, 0x0, 0x1FD46D0
	0x01FD46B4 LDR X19, [X19]
	0x01FD46B8 BL 0x3EB1AE0
	0x01FD46BC MOV X0, X19
	0x01FD46C0 MOV X1, X31
	0x01FD46C4 MOV X2, X31
	0x01FD46C8 BL 0x32C4498
	0x01FD46CC B 0x1FD464C
	0x01FD46D0 MOVZ W0, 0x8
	0x01FD46D4 BL 0x3EB1AF0
	0x01FD46D8 LDR X8, [X19]
	0x01FD46DC STR X8, [X0]
	0x01FD46E0 ADRP X1, 0x1EE0000
	0x01FD46E4 ADD X1, X1, 0xE58
	0x01FD46E8 MOV X2, X31
	0x01FD46EC BL 0x3EB1B00
	0x01FD46F0 MOV X19, X0
	0x01FD46F4 BL 0x3EB1AE0
	0x01FD46F8 MOV X0, X19
	0x01FD46FC BL 0x1D2C690
	0x01FD4700 BL 0x1990590
	0x01FD4704 SUB X31, X31, 0xB0
	0x01FD4708 STR X30, [X31 + 0x70]
	0x01FD470C STP X24, X23, [X31 + 0x80]
	0x01FD4710 STP X22, X21, [X31 + 0x90]
	0x01FD4714 STP X20, X19, [X31 + 0xA0]
	0x01FD4718 LDR X8, [X3 + 0x38]
	0x01FD471C MOV X20, X3
	0x01FD4720 MOV X22, X2
	0x01FD4724 MOV X19, X1
	0x01FD4728 MOV X21, X0
	0x01FD472C CBNZ X8, 0x1FD4738
	0x01FD4730 MOV X0, X20
	0x01FD4734 BL 0x1C5C6E0
	0x01FD4738 STR X31, [X31 + 0x78]
	0x01FD473C MOV X0, X31
	0x01FD4740 BL 0x33F6C70
	0x01FD4744 TBZ X0, 0x0, 0x1FD47A0
	0x01FD4748 LDR X0, [X20 + 0x20]
	0x01FD474C LDRB W8, [X0 + 0x135]
	0x01FD4750 TBNZ X8, 0x0, 0x1FD4758
	0x01FD4754 BL 0x1C5C684
	0x01FD4758 LDR X8, [X0 + 0xC0]
	0x01FD475C LDR X0, [X8 + 0x10]
	0x01FD4760 LDRB W8, [X0 + 0x135]
	0x01FD4764 TBNZ X8, 0x0, 0x1FD476C
	0x01FD4768 BL 0x1C5C684
	0x01FD476C LDR W8, [X0 + 0xE0]
	0x01FD4770 CBNZ W8, 0x1FD4778
	0x01FD4774 BL 0x1C16DFC
	0x01FD4778 LDR X0, [X20 + 0x20]
	0x01FD477C LDRB W8, [X0 + 0x135]
	0x01FD4780 TBNZ X8, 0x0, 0x1FD4788
	0x01FD4784 BL 0x1C5C684
	0x01FD4788 LDR X8, [X0 + 0xC0]
	0x01FD478C LDR X1, [X8 + 0x8]
	0x01FD4790 MOV X0, X21
	0x01FD4794 BL 0x2635BF8
	0x01FD4798 MOV X1, X0
	0x01FD479C B 0x1FD47A4
	0x01FD47A0 MOV X1, X31
	0x01FD47A4 ADD X2, X31, 0x78
	0x01FD47A8 MOV X0, X21
	0x01FD47AC MOV X3, X31
	0x01FD47B0 BL 0x32C4B94
	0x01FD47B4 LDR X8, [X21]
	0x01FD47B8 MOV X23, X0
	0x01FD47BC CBNZ X8, 0x1FD484C
	0x01FD47C0 LDR X0, [X20 + 0x20]
	0x01FD47C4 LDRB W8, [X0 + 0x135]
	0x01FD47C8 TBNZ X8, 0x0, 0x1FD47D0
	0x01FD47CC BL 0x1C5C684
	0x01FD47D0 LDR X8, [X0 + 0xC0]
	0x01FD47D4 LDR X0, [X8 + 0x10]
	0x01FD47D8 LDRB W8, [X0 + 0x135]
	0x01FD47DC TBNZ X8, 0x0, 0x1FD47E4
	0x01FD47E0 BL 0x1C5C684
	0x01FD47E4 LDR W8, [X0 + 0xE0]
	0x01FD47E8 CBNZ W8, 0x1FD47F0
	0x01FD47EC BL 0x1C16DFC
	0x01FD47F0 LDR X0, [X20 + 0x20]
	0x01FD47F4 LDRB W8, [X0 + 0x135]
	0x01FD47F8 TBNZ X8, 0x0, 0x1FD4800
	0x01FD47FC BL 0x1C5C684
	0x01FD4800 LDR X8, [X0 + 0xC0]
	0x01FD4804 LDR X1, [X8 + 0x8]
	0x01FD4808 MOV X0, X21
	0x01FD480C BL 0x2635BF8
	0x01FD4810 MOV X24, X0
	0x01FD4814 ADD X0, X31, 0x0
	0x01FD4818 MOVZ W2, 0x70
	0x01FD481C MOV X1, X22
	0x01FD4820 BL 0x3EB1AC0
	0x01FD4824 LDR X8, [X20 + 0x38]
	0x01FD4828 LDR X0, [X8 + 0x8]
	0x01FD482C ADD X1, X31, 0x0
	0x01FD4830 BL 0x1C16E04
	0x01FD4834 MOV X1, X0
	0x01FD4838 LDR X2, [X31 + 0x78]
	0x01FD483C MOV X0, X21
	0x01FD4840 MOV X3, X24
	0x01FD4844 MOV X4, X31
	0x01FD4848 BL 0x32C4EF8
	0x01FD484C LDR X8, [X20 + 0x38]
	0x01FD4850 LDR X2, [X8 + 0x20]
	0x01FD4854 MOV X0, X19
	0x01FD4858 MOV X1, X23
	0x01FD485C BL 0x2998B98
	0x01FD4860 LDP X20, X19, [X31 + 0xA0]
	0x01FD4864 LDP X22, X21, [X31 + 0x90]
	0x01FD4868 LDP X24, X23, [X31 + 0x80]
	0x01FD486C LDR X30, [X31 + 0x70]
	0x01FD4870 ADD X31, X31, 0xB0
	0x01FD4874 RET

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+80], X30
	003 Move [X31+96], X24
	004 Move [X31+104], X23
	005 Move [X31+112], X22
	006 Move [X31+120], X21
	007 Move [X31+128], X20
	008 Move [X31+136], X19
	009 Move X8, [X3+56]
	010 Move X20, X3
	011 Move X22, X2
	012 Move X19, X1
	013 Move X21, X0
	014 Compare X8, 0
	015 JumpIfNotEqual {18}
	016 Move X0, X20
	017 Call 0x1C5D6E0
	018 Move [X31+88], X31
	019 Move X0, X31
	020 Call AsyncCausalityTracer.get_LoggingOn
	021 Move TEMP, X0
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {56}
	025 Move X0, [X20+32]
	026 Move W8, [X0+309]
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {32}
	031 Call 0x1C5D684
	032 Move X8, [X0+192]
	033 Move X0, [X8+16]
	034 Move W8, [X0+309]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {40}
	039 Call 0x1C5D684
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X0, [X20+32]
	045 Move W8, [X0+309]
	046 Move TEMP, X8
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {51}
	050 Call 0x1C5D684
	051 Move X8, [X0+192]
	052 Move X1, [X8+8]
	053 Move X0, X21
	054 Call AsyncTaskMethodBuilder`1<VoidTaskResult>.get_Task, X0
	055 Move X1, X0
	056 Move X1, X31
	057 Add X2, X31, 88
	058 Move X0, X21
	059 Move X3, X31
	060 Call AsyncMethodBuilderCore.GetCompletionAction, X0, X1, X2
	061 Move X8, [X21]
	062 Move X23, X0
	063 Compare X8, 0
	064 JumpIfNotEqual {110}
	065 Move X0, [X20+32]
	066 Move W8, [X0+309]
	067 Move TEMP, X8
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfEqual {72}
	071 Call 0x1C5D684
	072 Move X8, [X0+192]
	073 Move X0, [X8+16]
	074 Move W8, [X0+309]
	075 Move TEMP, X8
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfEqual {80}
	079 Call 0x1C5D684
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Move X0, [X20+32]
	085 Move W8, [X0+309]
	086 Move TEMP, X8
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfEqual {91}
	090 Call 0x1C5D684
	091 Move X8, [X0+192]
	092 Move X1, [X8+8]
	093 Move X0, X21
	094 Call AsyncTaskMethodBuilder`1<VoidTaskResult>.get_Task, X0
	095 Move X24, X0
	096 Add X0, X31, 0
	097 Move W2, 80
	098 Move X1, X22
	099 Call 0x3EB2AC0
	100 Move X8, [X20+56]
	101 Move X0, [X8+8]
	102 Add X1, X31, 0
	103 Call 0x1C17E04
	104 Move X1, X0
	105 Move X2, [X31+88]
	106 Move X0, X21
	107 Move X3, X24
	108 Move X4, X31
	109 Call AsyncMethodBuilderCore.PostBoxInitialization, X0, X1, X2, X3
	110 Move X8, [X20+56]
	111 Move X2, [X8+32]
	112 Move X0, X19
	113 Move X1, X23
	114 Call Awaiter.OnCompleted, X0, X1
	115 Move X20, [X31+128]
	116 Move X19, [X31+136]
	117 Move X22, [X31+112]
	118 Move X21, [X31+120]
	119 Move X24, [X31+96]
	120 Move X23, [X31+104]
	121 Move X30, [X31+80]
	122 Add X31, X31, 144
	123 Return 
	124 Move X19, X0
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move X0, X19
	127 Call 0x3EB2AD0
	128 Move X19, X0
	129 Move X0, 0x2120000
	130 Move X0, [X0+2000]
	131 Call 0x1C17D08
	132 Move X8, [X19]
	133 Move X1, [X8]
	134 Call 0x1C18270
	135 Move TEMP, X0
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfNotEqual {145}
	139 Move X19, [X19]
	140 Call 0x3EB2AE0
	141 Move X0, X19
	142 Move X1, X31
	143 Move X2, X31
	144 Call AsyncMethodBuilderCore.ThrowAsync, X0, X1
	145 Move W0, 8
	146 Call 0x3EB2AF0
	147 Move X8, [X19]
	148 Move [X0], X8
	149 Move X1, 0x1EE1000
	150 Add X1, X1, 3672
	151 Move X2, X31
	152 Call 0x3EB2B00
	153 Move X19, X0
	154 Call 0x3EB2AE0
	155 Move X0, X19
	156 Call 0x1D2D690
	157 Call 0x1991590

Method: System.Void AwaitUnsafeOnCompleted(ref TAwaiter awaiter, ref TStateMachine stateMachine)

Disassembly:
	0x01FAA294 CMP W1, 0x1
	0x01FAA298 B.NE 0x1FAA308
	0x01FAA29C MOV X0, X19
	0x01FAA2A0 BL 0x3EB1AD0
	0x01FAA2A4 MOV X19, X0
	0x01FAA2A8 ADRP X0, 0x2149000
	0x01FAA2AC LDR X0, [X0 + 0x7D0]
	0x01FAA2B0 BL 0x1C16D08
	0x01FAA2B4 LDR X8, [X19]
	0x01FAA2B8 LDR X1, [X8]
	0x01FAA2BC BL 0x1C17270
	0x01FAA2C0 TBZ X0, 0x0, 0x1FAA2E0
	0x01FAA2C4 LDR X19, [X19]
	0x01FAA2C8 BL 0x3EB1AE0
	0x01FAA2CC MOV X0, X19
	0x01FAA2D0 MOV X1, X31
	0x01FAA2D4 MOV X2, X31
	0x01FAA2D8 BL 0x32C4498
	0x01FAA2DC B 0x1FAA25C
	0x01FAA2E0 MOVZ W0, 0x8
	0x01FAA2E4 BL 0x3EB1AF0
	0x01FAA2E8 LDR X8, [X19]
	0x01FAA2EC STR X8, [X0]
	0x01FAA2F0 ADRP X1, 0x1F0A000
	0x01FAA2F4 ADD X1, X1, 0xE58
	0x01FAA2F8 MOV X2, X31
	0x01FAA2FC BL 0x3EB1B00
	0x01FAA300 MOV X19, X0
	0x01FAA304 BL 0x3EB1AE0
	0x01FAA308 MOV X0, X19
	0x01FAA30C BL 0x1D2C690
	0x01FAA310 BL 0x1990590
	0x01FAA314 SUB X31, X31, 0x40
	0x01FAA318 STR X30, [X31 + 0x20]
	0x01FAA31C STP X20, X19, [X31 + 0x30]
	0x01FAA320 LDR X8, [X2 + 0x38]
	0x01FAA324 MOV X20, X2
	0x01FAA328 MOV X19, X1
	0x01FAA32C CBNZ X8, 0x1FAA34C
	0x01FAA330 ADRP X0, 0x2171000
	0x01FAA334 LDR X0, [X0 + 0x580]
	0x01FAA338 BL 0x1C16CF4
	0x01FAA33C LDR X8, [X20 + 0x38]
	0x01FAA340 CBNZ X8, 0x1FAA34C
	0x01FAA344 MOV X0, X20
	0x01FAA348 BL 0x1C5C6E0
	0x01FAA34C MOVI V0.2D, 0x0
	0x01FAA350 MOV X0, X31
	0x01FAA354 STP V0, V0, [X31]
	0x01FAA358 BL 0x32C5C58
	0x01FAA35C ADRP X8, 0x2171000
	0x01FAA360 LDR X8, [X8 + 0x580]
	0x01FAA364 LDR X0, [X8]
	0x01FAA368 LDR W8, [X0 + 0xE0]
	0x01FAA36C CBNZ W8, 0x1FAA374
	0x01FAA370 BL 0x1C16DFC
	0x01FAA374 ADD X0, X31, 0x0
	0x01FAA378 MOV X1, X31
	0x01FAA37C BL 0x33E4F00
	0x01FAA380 LDR X8, [X20 + 0x38]
	0x01FAA384 LDR X1, [X8 + 0x10]
	0x01FAA388 MOV X0, X19
	0x01FAA38C BL 0x1D73500
	0x01FAA390 ADD X0, X31, 0x0
	0x01FAA394 MOV X1, X31
	0x01FAA398 BL 0x33E42EC
	0x01FAA39C LDP X20, X19, [X31 + 0x30]
	0x01FAA3A0 LDR X30, [X31 + 0x20]
	0x01FAA3A4 ADD X31, X31, 0x40
	0x01FAA3A8 RET
	0x01FAA3AC B 0x1FAA3B0
	0x01FAA3B0 MOV X20, X0
	0x01FAA3B4 CMP W1, 0x1
	0x01FAA3B8 B.NE 0x1FAA3E4
	0x01FAA3BC MOV X0, X20
	0x01FAA3C0 BL 0x3EB1AD0
	0x01FAA3C4 LDR X19, [X0]
	0x01FAA3C8 BL 0x3EB1AE0
	0x01FAA3CC ADD X0, X31, 0x0
	0x01FAA3D0 MOV X1, X31
	0x01FAA3D4 BL 0x33E42EC
	0x01FAA3D8 CBZ X19, 0x1FAA39C
	0x01FAA3DC MOV X0, X19
	0x01FAA3E0 BL 0x1C16F18
	0x01FAA3E4 MOV X19, X31
	0x01FAA3E8 B 0x1FAA3F0
	0x01FAA3EC MOV X20, X0
	0x01FAA3F0 ADD X0, X31, 0x0
	0x01FAA3F4 MOV X1, X31
	0x01FAA3F8 BL 0x33E42EC
	0x01FAA3FC CBNZ X19, 0x1FAA408
	0x01FAA400 MOV X0, X20
	0x01FAA404 BL 0x1D2C690
	0x01FAA408 MOV X0, X19
	0x01FAA40C BL 0x1C16F18
	0x01FAA410 BL 0x1990590
	0x01FAA414 SUB X31, X31, 0xB0
	0x01FAA418 STR X30, [X31 + 0x70]
	0x01FAA41C STP X24, X23, [X31 + 0x80]
	0x01FAA420 STP X22, X21, [X31 + 0x90]
	0x01FAA424 STP X20, X19, [X31 + 0xA0]
	0x01FAA428 LDR X8, [X3 + 0x38]
	0x01FAA42C MOV X20, X3
	0x01FAA430 MOV X22, X2
	0x01FAA434 MOV X19, X1
	0x01FAA438 MOV X21, X0
	0x01FAA43C CBNZ X8, 0x1FAA448
	0x01FAA440 MOV X0, X20
	0x01FAA444 BL 0x1C5C6E0
	0x01FAA448 STR X31, [X31 + 0x78]
	0x01FAA44C MOV X0, X31
	0x01FAA450 BL 0x33F6C70
	0x01FAA454 TBZ X0, 0x0, 0x1FAA4B0
	0x01FAA458 LDR X0, [X20 + 0x20]
	0x01FAA45C LDRB W8, [X0 + 0x135]
	0x01FAA460 TBNZ X8, 0x0, 0x1FAA468
	0x01FAA464 BL 0x1C5C684
	0x01FAA468 LDR X8, [X0 + 0xC0]
	0x01FAA46C LDR X0, [X8 + 0x10]
	0x01FAA470 LDRB W8, [X0 + 0x135]
	0x01FAA474 TBNZ X8, 0x0, 0x1FAA47C
	0x01FAA478 BL 0x1C5C684
	0x01FAA47C LDR W8, [X0 + 0xE0]
	0x01FAA480 CBNZ W8, 0x1FAA488
	0x01FAA484 BL 0x1C16DFC
	0x01FAA488 LDR X0, [X20 + 0x20]
	0x01FAA48C LDRB W8, [X0 + 0x135]
	0x01FAA490 TBNZ X8, 0x0, 0x1FAA498
	0x01FAA494 BL 0x1C5C684
	0x01FAA498 LDR X8, [X0 + 0xC0]
	0x01FAA49C LDR X1, [X8 + 0x8]
	0x01FAA4A0 MOV X0, X21
	0x01FAA4A4 BL 0x262EF84

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+80], X30
	003 Move [X31+96], X24
	004 Move [X31+104], X23
	005 Move [X31+112], X22
	006 Move [X31+120], X21
	007 Move [X31+128], X20
	008 Move [X31+136], X19
	009 Move X8, [X3+56]
	010 Move X20, X3
	011 Move X22, X2
	012 Move X19, X1
	013 Move X21, X0
	014 Compare X8, 0
	015 JumpIfNotEqual {18}
	016 Move X0, X20
	017 Call 0x1C5D6E0
	018 Move [X31+88], X31
	019 Move X0, X31
	020 Call AsyncCausalityTracer.get_LoggingOn
	021 Move TEMP, X0
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {56}
	025 Move X0, [X20+32]
	026 Move W8, [X0+309]
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {32}
	031 Call 0x1C5D684
	032 Move X8, [X0+192]
	033 Move X0, [X8+16]
	034 Move W8, [X0+309]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {40}
	039 Call 0x1C5D684
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X0, [X20+32]
	045 Move W8, [X0+309]
	046 Move TEMP, X8
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {51}
	050 Call 0x1C5D684
	051 Move X8, [X0+192]
	052 Move X1, [X8+8]
	053 Move X0, X21
	054 Call 0x24DB978, X0
	055 Move X1, X0
	056 Move X1, X31
	057 Add X2, X31, 88
	058 Move X0, X21
	059 Move X3, X31
	060 Call AsyncMethodBuilderCore.GetCompletionAction, X0, X1, X2
	061 Move X8, [X21]
	062 Move X23, X0
	063 Compare X8, 0
	064 JumpIfNotEqual {110}
	065 Move X0, [X20+32]
	066 Move W8, [X0+309]
	067 Move TEMP, X8
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfEqual {72}
	071 Call 0x1C5D684
	072 Move X8, [X0+192]
	073 Move X0, [X8+16]
	074 Move W8, [X0+309]
	075 Move TEMP, X8
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfEqual {80}
	079 Call 0x1C5D684
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Move X0, [X20+32]
	085 Move W8, [X0+309]
	086 Move TEMP, X8
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfEqual {91}
	090 Call 0x1C5D684
	091 Move X8, [X0+192]
	092 Move X1, [X8+8]
	093 Move X0, X21
	094 Call 0x24DB978, X0
	095 Move X24, X0
	096 Add X0, X31, 0
	097 Move W2, 80
	098 Move X1, X22
	099 Call 0x3EB2AC0
	100 Move X8, [X20+56]
	101 Move X0, [X8+8]
	102 Add X1, X31, 0
	103 Call 0x1C17E04
	104 Move X1, X0
	105 Move X2, [X31+88]
	106 Move X0, X21
	107 Move X3, X24
	108 Move X4, X31
	109 Call AsyncMethodBuilderCore.PostBoxInitialization, X0, X1, X2, X3
	110 Move X8, [X20+56]
	111 Move X2, [X8+32]
	112 Move X0, X19
	113 Move X1, X23
	114 Call ConfiguredTaskAwaiter<Int32>.UnsafeOnCompleted, X0, X1
	115 Move X20, [X31+128]
	116 Move X19, [X31+136]
	117 Move X22, [X31+112]
	118 Move X21, [X31+120]
	119 Move X24, [X31+96]
	120 Move X23, [X31+104]
	121 Move X30, [X31+80]
	122 Add X31, X31, 144
	123 Return 
	124 Move X19, X0
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move X0, X19
	127 Call 0x3EB2AD0
	128 Move X19, X0
	129 Move X0, 0x214A000
	130 Move X0, [X0+2000]
	131 Call 0x1C17D08
	132 Move X8, [X19]
	133 Move X1, [X8]
	134 Call 0x1C18270
	135 Move TEMP, X0
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfNotEqual {145}
	139 Move X19, [X19]
	140 Call 0x3EB2AE0
	141 Move X0, X19
	142 Move X1, X31
	143 Move X2, X31
	144 Call AsyncMethodBuilderCore.ThrowAsync, X0, X1
	145 Move W0, 8
	146 Call 0x3EB2AF0
	147 Move X8, [X19]
	148 Move [X0], X8
	149 Move X1, 0x1F0B000
	150 Add X1, X1, 3672
	151 Move X2, X31
	152 Call 0x3EB2B00
	153 Move X19, X0
	154 Call 0x3EB2AE0
	155 Move X0, X19
	156 Call 0x1D2D690
	157 Call 0x1991590

Method: System.Threading.Tasks.Task`1<TResult> get_Task()

Disassembly:
	0x024DB978 MOV X1, X31
	0x024DB97C LDR X8, [X8]
	0x024DB980 MOV X0, X8
	0x024DB984 BL 0x338C698
	0x024DB988 MOV X1, X0
	0x024DB98C MOV X0, X22
	0x024DB990 MOV X2, X31
	0x024DB994 BL 0x3395194
	0x024DB998 TBZ X0, 0x0, 0x24DB9F0
	0x024DB99C STP X21, X20, [X31]
	0x024DB9A0 LDR X0, [X19]
	0x024DB9A4 LDRB W8, [X0 + 0x135]
	0x024DB9A8 TBNZ X8, 0x0, 0x24DB9B0
	0x024DB9AC BL 0x1C5C684
	0x024DB9B0 LDR X8, [X0 + 0xC0]
	0x024DB9B4 ADD X1, X31, 0x0
	0x024DB9B8 LDR X0, [X8 + 0x28]
	0x024DB9BC BL 0x1C16E04
	0x024DB9C0 CBZ X0, 0x24DC0AC
	0x024DB9C4 ADRP X8, 0x1C19000
	0x024DB9C8 LDR X8, [X8 + 0x9D8]
	0x024DB9CC LDR X9, [X0]
	0x024DB9D0 LDR X1, [X8]
	0x024DB9D4 LDR X8, [X9 + 0x40]
	0x024DB9D8 LDR X9, [X1 + 0x40]
	0x024DB9DC CMP X8, X9
	0x024DB9E0 B.NE 0x24DC0B0
	0x024DB9E4 BL 0x1C16E08
	0x024DB9E8 LDRB W8, [X0]
	0x024DB9EC CBZ W8, 0x24DBFE8
	0x024DB9F0 LDR X0, [X19]
	0x024DB9F4 LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, [X0+16]
	006 Compare X21, 0
	007 JumpIfNotEqual {41}
	008 Move X19, X0
	009 Move X0, [X1+32]
	010 Move X20, X1
	011 Move W8, [X0+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {17}
	016 Call 0x1C5D684
	017 Move X8, [X0+192]
	018 Move X0, [X8+24]
	019 Move W8, [X0+309]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {25}
	024 Call 0x1C5D684
	025 Call 0x1C17F10
	026 Move X8, [X20+32]
	027 Move X21, X0
	028 Move W9, [X8+309]
	029 Move TEMP, X9
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {36}
	033 Move X0, X8
	034 Call 0x1C5D684
	035 Move X8, X0
	036 Move X8, [X8+192]
	037 Move X0, X21
	038 Move X1, [X8+32]
	039 Call 0x2697204, X0
	040 Move [X19+16], X21
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X0, X21
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Return X0

Method: System.Void SetResult(TResult result)

Disassembly:
	0x024DB9F8 TBNZ X8, 0x0, 0x24DBA00
	0x024DB9FC BL 0x1C5C684
	0x024DBA00 LDR X8, [X23]
	0x024DBA04 LDR X9, [X0 + 0xC0]
	0x024DBA08 LDR W10, [X8 + 0xE0]
	0x024DBA0C LDR X22, [X9 + 0x48]
	0x024DBA10 CBNZ W10, 0x24DBA1C
	0x024DBA14 MOV X0, X8
	0x024DBA18 BL 0x1C16DFC
	0x024DBA1C MOV X0, X22
	0x024DBA20 MOV X1, X31
	0x024DBA24 BL 0x338C698
	0x024DBA28 ADRP X8, 0x1C3F000
	0x024DBA2C LDR X8, [X8 + 0xD90]
	0x024DBA30 MOV X22, X0
	0x024DBA34 MOV X1, X31
	0x024DBA38 LDR X8, [X8]
	0x024DBA3C MOV X0, X8
	0x024DBA40 BL 0x338C698
	0x024DBA44 MOV X1, X0
	0x024DBA48 MOV X0, X22
	0x024DBA4C MOV X2, X31
	0x024DBA50 BL 0x3395194
	0x024DBA54 TBZ X0, 0x0, 0x24DBAAC
	0x024DBA58 STP X21, X20, [X31]
	0x024DBA5C LDR X0, [X19]
	0x024DBA60 LDRB W8, [X0 + 0x135]
	0x024DBA64 TBNZ X8, 0x0, 0x24DBA6C
	0x024DBA68 BL 0x1C5C684
	0x024DBA6C LDR X8, [X0 + 0xC0]
	0x024DBA70 ADD X1, X31, 0x0
	0x024DBA74 LDR X0, [X8 + 0x28]
	0x024DBA78 BL 0x1C16E04
	0x024DBA7C CBZ X0, 0x24DC0AC
	0x024DBA80 ADRP X8, 0x1C41000
	0x024DBA84 LDR X8, [X8 + 0x6B0]
	0x024DBA88 LDR X9, [X0]
	0x024DBA8C LDR X1, [X8]
	0x024DBA90 LDR X8, [X9 + 0x40]
	0x024DBA94 LDR X9, [X1 + 0x40]
	0x024DBA98 CMP X8, X9
	0x024DBA9C B.NE 0x24DC0B0
	0x024DBAA0 BL 0x1C16E08
	0x024DBAA4 LDRB W8, [X0]
	0x024DBAA8 CBZ W8, 0x24DBFE8
	0x024DBAAC LDR X0, [X19]
	0x024DBAB0 LDRB W8, [X0 + 0x135]
	0x024DBAB4 TBNZ X8, 0x0, 0x24DBABC
	0x024DBAB8 BL 0x1C5C684
	0x024DBABC LDR X8, [X23]
	0x024DBAC0 LDR X9, [X0 + 0xC0]
	0x024DBAC4 LDR W10, [X8 + 0xE0]
	0x024DBAC8 LDR X22, [X9 + 0x48]
	0x024DBACC CBNZ W10, 0x24DBAD8
	0x024DBAD0 MOV X0, X8
	0x024DBAD4 BL 0x1C16DFC
	0x024DBAD8 MOV X0, X22
	0x024DBADC MOV X1, X31
	0x024DBAE0 BL 0x338C698
	0x024DBAE4 ADRP X8, 0x1C3F000
	0x024DBAE8 LDR X8, [X8 + 0xD70]
	0x024DBAEC MOV X22, X0
	0x024DBAF0 MOV X1, X31
	0x024DBAF4 LDR X8, [X8]
	0x024DBAF8 MOV X0, X8
	0x024DBAFC BL 0x338C698
	0x024DBB00 MOV X1, X0
	0x024DBB04 MOV X0, X22
	0x024DBB08 MOV X2, X31
	0x024DBB0C BL 0x3395194
	0x024DBB10 TBZ X0, 0x0, 0x24DBB68
	0x024DBB14 STP X21, X20, [X31]
	0x024DBB18 LDR X0, [X19]
	0x024DBB1C LDRB W8, [X0 + 0x135]
	0x024DBB20 TBNZ X8, 0x0, 0x24DBB28
	0x024DBB24 BL 0x1C5C684
	0x024DBB28 LDR X8, [X0 + 0xC0]
	0x024DBB2C ADD X1, X31, 0x0
	0x024DBB30 LDR X0, [X8 + 0x28]
	0x024DBB34 BL 0x1C16E04
	0x024DBB38 CBZ X0, 0x24DC0AC
	0x024DBB3C ADRP X8, 0x1C1A000
	0x024DBB40 LDR X8, [X8 + 0x170]
	0x024DBB44 LDR X9, [X0]
	0x024DBB48 LDR X1, [X8]
	0x024DBB4C LDR X8, [X9 + 0x40]
	0x024DBB50 LDR X9, [X1 + 0x40]
	0x024DBB54 CMP X8, X9
	0x024DBB58 B.NE 0x24DC0B0
	0x024DBB5C BL 0x1C16E08
	0x024DBB60 LDRH W8, [X0]
	0x024DBB64 CBZ W8, 0x24DBFE8
	0x024DBB68 LDR X0, [X19]
	0x024DBB6C LDRB W8, [X0 + 0x135]
	0x024DBB70 TBNZ X8, 0x0, 0x24DBB78
	0x024DBB74 BL 0x1C5C684
	0x024DBB78 LDR X8, [X23]
	0x024DBB7C LDR X9, [X0 + 0xC0]
	0x024DBB80 LDR W10, [X8 + 0xE0]
	0x024DBB84 LDR X22, [X9 + 0x48]
	0x024DBB88 CBNZ W10, 0x24DBB94

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1EFF000
	007 Move W8, [X21+3066]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X22, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x1C1A000
	016 Move X0, [X0+1976]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+3066], W8
	020 Move X21, [X22+16]
	021 Compare X21, 0
	022 JumpIfEqual {95}
	023 Move X22, 0x1C1A000
	024 Move X22, [X22+1976]
	025 Move X0, X31
	026 Call AsyncCausalityTracer.get_LoggingOn
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {39}
	031 Move X0, X21
	032 Move X1, X31
	033 Call Task.get_Id, X0
	034 Move W1, W0
	035 Move W2, 1
	036 Move W0, W31
	037 Move X3, X31
	038 Call AsyncCausalityTracer.TraceOperationCompletion, X0, X1, X2
	039 Move X0, [X22]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {45}
	043 Call 0x1C17DFC
	044 Move X0, [X22]
	045 Move X8, [X0+184]
	046 Move W8, [X8+16]
	047 Compare W8, 0
	048 JumpIfEqual {62}
	049 Move X0, X21
	050 Move X1, X31
	051 Call Task.get_Id, X0
	052 Move X8, [X22]
	053 Move W22, W0
	054 Move W9, [X8+224]
	055 Compare W9, 0
	056 JumpIfNotEqual {59}
	057 Move X0, X8
	058 Call 0x1C17DFC
	059 Move W0, W22
	060 Move X1, X31
	061 Call Task.RemoveFromActiveTasks, X0
	062 Move X0, [X19+32]
	063 Move W8, [X0+309]
	064 Move TEMP, X8
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {69}
	068 Call 0x1C5D684
	069 Move X8, [X0+192]
	070 Move X0, X21
	071 Move X1, X20
	072 Move X2, [X8+56]
	073 Call 0x2697840, X0, X1
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfEqual {126}
	078 Move X0, 0x1C42000
	079 Move X0, [X0+3848]
	080 Call 0x1C17D08
	081 Move X1, X31
	082 Call Environment.GetResourceString, X0
	083 Move X20, X0
	084 Move X0, 0x1C19000
	085 Move X0, [X0+1456]
	086 Call 0x1C17D08
	087 Call 0x1C17F10
	088 Move X1, X20
	089 Move X2, X31
	090 Move X21, X0
	091 Call InvalidOperationException..ctor, X0, X1
	092 Move X0, X21
	093 Move X1, X19
	094 Call 0x1C17DEC
	095 Move X0, [X19+32]
	096 Move W8, [X0+309]
	097 Move TEMP, X8
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfEqual {102}
	101 Call 0x1C5D684
	102 Move X8, [X0+192]
	103 Move X0, [X8+16]
	104 Move W8, [X0+309]
	105 Move TEMP, X8
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfEqual {110}
	109 Call 0x1C5D684
	110 Move W8, [X0+224]
	111 Compare W8, 0
	112 JumpIfNotEqual {114}
	113 Call 0x1C17DFC
	114 Move X0, [X19+32]
	115 Move W8, [X0+309]
	116 Move TEMP, X8
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfEqual {121}
	120 Call 0x1C5D684
	121 Move X8, [X0+192]
	122 Move X0, X20
	123 Move X1, [X8+48]
	124 Call 0x24DBD94, X0
	125 Move [X22+16], X0
	126 Move X20, [X31+32]
	127 Move X19, [X31+40]
	128 Move X22, [X31+16]
	129 Move X21, [X31+24]
	130 Move X30, [X31+48]
	131 Return 

Method: System.Void SetResult(System.Threading.Tasks.Task`1<TResult> completedTask)

Disassembly:
	0x024DBB8C MOV X0, X8
	0x024DBB90 BL 0x1C16DFC
	0x024DBB94 MOV X0, X22
	0x024DBB98 MOV X1, X31
	0x024DBB9C BL 0x338C698
	0x024DBBA0 ADRP X8, 0x1C3F000
	0x024DBBA4 LDR X8, [X8 + 0xD88]
	0x024DBBA8 MOV X22, X0
	0x024DBBAC MOV X1, X31
	0x024DBBB0 LDR X8, [X8]
	0x024DBBB4 MOV X0, X8
	0x024DBBB8 BL 0x338C698
	0x024DBBBC MOV X1, X0
	0x024DBBC0 MOV X0, X22
	0x024DBBC4 MOV X2, X31
	0x024DBBC8 BL 0x3395194
	0x024DBBCC TBZ X0, 0x0, 0x24DBC24
	0x024DBBD0 STP X21, X20, [X31]
	0x024DBBD4 LDR X0, [X19]
	0x024DBBD8 LDRB W8, [X0 + 0x135]
	0x024DBBDC TBNZ X8, 0x0, 0x24DBBE4
	0x024DBBE0 BL 0x1C5C684
	0x024DBBE4 LDR X8, [X0 + 0xC0]
	0x024DBBE8 ADD X1, X31, 0x0
	0x024DBBEC LDR X0, [X8 + 0x28]
	0x024DBBF0 BL 0x1C16E04
	0x024DBBF4 CBZ X0, 0x24DC0AC
	0x024DBBF8 ADRP X8, 0x1C1A000
	0x024DBBFC LDR X8, [X8 + 0xA60]
	0x024DBC00 LDR X9, [X0]
	0x024DBC04 LDR X1, [X8]
	0x024DBC08 LDR X8, [X9 + 0x40]
	0x024DBC0C LDR X9, [X1 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+16]
	005 Move X19, X0
	006 Compare X8, 0
	007 JumpIfEqual {44}
	008 Move X0, [X2+32]
	009 Move X20, X2
	010 Move W8, [X0+309]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {16}
	015 Call 0x1C5D684
	016 Move X8, [X0+192]
	017 Move X0, [X8+16]
	018 Move W8, [X0+309]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {24}
	023 Call 0x1C5D684
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, [X20+32]
	029 Move W8, [X0+309]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {35}
	034 Call 0x1C5D684
	035 Move X8, [X0+192]
	036 Move X0, X19
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X1, X31
	040 Move X2, [X8+64]
	041 Move X30, [X31+32]
	042 Call 0x24DB9F8, X0, X1
	043 Return 
	044 Move [X19+16], X1
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X30, [X31+32]
	048 Return 

Method: System.Void SetException(System.Exception exception)

Disassembly:
	0x024DBC10 CMP X8, X9
	0x024DBC14 B.NE 0x24DC0B0
	0x024DBC18 BL 0x1C16E08
	0x024DBC1C LDR X8, [X0]
	0x024DBC20 CBZ X8, 0x24DBFE8
	0x024DBC24 LDR X0, [X19]
	0x024DBC28 LDRB W8, [X0 + 0x135]
	0x024DBC2C TBNZ X8, 0x0, 0x24DBC34
	0x024DBC30 BL 0x1C5C684
	0x024DBC34 LDR X8, [X23]
	0x024DBC38 LDR X9, [X0 + 0xC0]
	0x024DBC3C LDR W10, [X8 + 0xE0]
	0x024DBC40 LDR X22, [X9 + 0x48]
	0x024DBC44 CBNZ W10, 0x24DBC50
	0x024DBC48 MOV X0, X8
	0x024DBC4C BL 0x1C16DFC
	0x024DBC50 MOV X0, X22
	0x024DBC54 MOV X1, X31
	0x024DBC58 BL 0x338C698
	0x024DBC5C ADRP X8, 0x1C3F000
	0x024DBC60 LDR X8, [X8 + 0xDA8]
	0x024DBC64 MOV X22, X0
	0x024DBC68 MOV X1, X31
	0x024DBC6C LDR X8, [X8]
	0x024DBC70 MOV X0, X8
	0x024DBC74 BL 0x338C698
	0x024DBC78 MOV X1, X0
	0x024DBC7C MOV X0, X22
	0x024DBC80 MOV X2, X31
	0x024DBC84 BL 0x3395194
	0x024DBC88 TBZ X0, 0x0, 0x24DBCE0
	0x024DBC8C STP X21, X20, [X31]
	0x024DBC90 LDR X0, [X19]
	0x024DBC94 LDRB W8, [X0 + 0x135]
	0x024DBC98 TBNZ X8, 0x0, 0x24DBCA0
	0x024DBC9C BL 0x1C5C684
	0x024DBCA0 LDR X8, [X0 + 0xC0]
	0x024DBCA4 ADD X1, X31, 0x0
	0x024DBCA8 LDR X0, [X8 + 0x28]
	0x024DBCAC BL 0x1C16E04
	0x024DBCB0 CBZ X0, 0x24DC0AC
	0x024DBCB4 ADRP X8, 0x1C19000
	0x024DBCB8 LDR X8, [X8 + 0x758]
	0x024DBCBC LDR X9, [X0]
	0x024DBCC0 LDR X1, [X8]
	0x024DBCC4 LDR X8, [X9 + 0x40]
	0x024DBCC8 LDR X9, [X1 + 0x40]
	0x024DBCCC CMP X8, X9
	0x024DBCD0 B.NE 0x24DC0B0
	0x024DBCD4 BL 0x1C16E08
	0x024DBCD8 LDR X8, [X0]
	0x024DBCDC CBZ X8, 0x24DBFE8
	0x024DBCE0 LDR X0, [X19]
	0x024DBCE4 LDRB W8, [X0 + 0x135]
	0x024DBCE8 TBNZ X8, 0x0, 0x24DBCF0
	0x024DBCEC BL 0x1C5C684
	0x024DBCF0 LDR X8, [X23]
	0x024DBCF4 LDR X9, [X0 + 0xC0]
	0x024DBCF8 LDR W10, [X8 + 0xE0]
	0x024DBCFC LDR X22, [X9 + 0x48]
	0x024DBD00 CBNZ W10, 0x24DBD0C
	0x024DBD04 MOV X0, X8
	0x024DBD08 BL 0x1C16DFC
	0x024DBD0C MOV X0, X22
	0x024DBD10 MOV X1, X31
	0x024DBD14 BL 0x338C698
	0x024DBD18 ADRP X8, 0x1C3F000
	0x024DBD1C LDR X8, [X8 + 0xD78]
	0x024DBD20 MOV X22, X0
	0x024DBD24 MOV X1, X31
	0x024DBD28 LDR X8, [X8]
	0x024DBD2C MOV X0, X8
	0x024DBD30 BL 0x338C698
	0x024DBD34 MOV X1, X0
	0x024DBD38 MOV X0, X22
	0x024DBD3C MOV X2, X31
	0x024DBD40 BL 0x3395194
	0x024DBD44 TBZ X0, 0x0, 0x24DBD9C
	0x024DBD48 STP X21, X20, [X31]
	0x024DBD4C LDR X0, [X19]
	0x024DBD50 LDRB W8, [X0 + 0x135]
	0x024DBD54 TBNZ X8, 0x0, 0x24DBD5C
	0x024DBD58 BL 0x1C5C684
	0x024DBD5C LDR X8, [X0 + 0xC0]
	0x024DBD60 ADD X1, X31, 0x0
	0x024DBD64 LDR X0, [X8 + 0x28]
	0x024DBD68 BL 0x1C16E04
	0x024DBD6C CBZ X0, 0x24DC0AC
	0x024DBD70 ADRP X8, 0x1C1C000
	0x024DBD74 LDR X8, [X8 + 0x628]
	0x024DBD78 LDR X9, [X0]
	0x024DBD7C LDR X1, [X8]
	0x024DBD80 LDR X8, [X9 + 0x40]
	0x024DBD84 LDR X9, [X1 + 0x40]
	0x024DBD88 CMP X8, X9
	0x024DBD8C B.NE 0x24DC0B0
	0x024DBD90 BL 0x1C16E08

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1EFF000
	007 Move W8, [X22+3067]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x1C21000
	016 Move X0, [X0+2216]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+3067], W8
	020 Compare X20, 0
	021 JumpIfEqual {106}
	022 Move X22, 0x1C21000
	023 Move X0, [X21+16]
	024 Move X22, [X22+2216]
	025 Compare X0, 0
	026 JumpIfNotEqual {57}
	027 Move X0, [X19+32]
	028 Move W8, [X0+309]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {34}
	033 Call 0x1C5D684
	034 Move X8, [X0+192]
	035 Move X0, [X8+16]
	036 Move W8, [X0+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {42}
	041 Call 0x1C5D684
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X0, [X19+32]
	047 Move W8, [X0+309]
	048 Move TEMP, X8
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {53}
	052 Call 0x1C5D684
	053 Move X8, [X0+192]
	054 Move X0, X21
	055 Move X1, [X8+8]
	056 Call 0x24DB978, X0
	057 Move X9, [X20]
	058 Move X8, [X22]
	059 Move W11, [X9+304]
	060 Move W10, [X8+304]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X9, [X9+200]
	063 Add X9, X9, X10
	064 NotImplemented "Instruction LDUR not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Compare X0, 0
	067 JumpIfEqual {121}
	068 Move X1, X20
	069 Move X2, X31
	070 Call Task.TrySetException, X0, X1
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfNotEqual {91}
	075 Move X20, [X31+32]
	076 Move X19, [X31+40]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X30, [X31+48]
	080 Return 
	081 Compare X0, 0
	082 JumpIfEqual {121}
	083 Move X1, [X20+144]
	084 Move X2, X20
	085 Move X3, X31
	086 Call Task.TrySetCanceled, X0, X1, X2
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfEqual {75}
	091 Move X0, 0x1C42000
	092 Move X0, [X0+3848]
	093 Call 0x1C17D08
	094 Move X1, X31
	095 Call Environment.GetResourceString, X0
	096 Move X20, X0
	097 Move X0, 0x1C19000
	098 Move X0, [X0+1456]
	099 Call 0x1C17D08
	100 Call 0x1C17F10
	101 Move X1, X20
	102 Move X2, X31
	103 Move X21, X0
	104 Call InvalidOperationException..ctor, X0, X1
	105 Move X0, X21
	106 Move X0, 0x1C1E000
	107 Move X0, [X0+1320]
	108 Call 0x1C17D08
	109 Call 0x1C17F10
	110 Move X20, X0
	111 Move X0, 0x1C42000
	112 Move X0, [X0+1912]
	113 Call 0x1C17D08
	114 Move X1, X0
	115 Move X0, X20
	116 Move X2, X31
	117 Call ArgumentNullException..ctor, X0, X1
	118 Move X0, X20
	119 Move X1, X19
	120 Call 0x1C17DEC
	121 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<TResult> GetTaskForResult(TResult result)

Disassembly:
	0x024DBD94 LDRH W8, [X0]
	0x024DBD98 CBZ W8, 0x24DBFE8
	0x024DBD9C LDR X0, [X19]
	0x024DBDA0 LDRB W8, [X0 + 0x135]
	0x024DBDA4 TBNZ X8, 0x0, 0x24DBDAC
	0x024DBDA8 BL 0x1C5C684
	0x024DBDAC LDR X8, [X23]
	0x024DBDB0 LDR X9, [X0 + 0xC0]
	0x024DBDB4 LDR W10, [X8 + 0xE0]
	0x024DBDB8 LDR X22, [X9 + 0x48]
	0x024DBDBC CBNZ W10, 0x24DBDC8
	0x024DBDC0 MOV X0, X8
	0x024DBDC4 BL 0x1C16DFC
	0x024DBDC8 MOV X0, X22
	0x024DBDCC MOV X1, X31
	0x024DBDD0 BL 0x338C698
	0x024DBDD4 ADRP X8, 0x1C3F000
	0x024DBDD8 LDR X8, [X8 + 0xD98]
	0x024DBDDC MOV X22, X0
	0x024DBDE0 MOV X1, X31
	0x024DBDE4 LDR X8, [X8]
	0x024DBDE8 MOV X0, X8
	0x024DBDEC BL 0x338C698
	0x024DBDF0 MOV X1, X0
	0x024DBDF4 MOV X0, X22
	0x024DBDF8 MOV X2, X31
	0x024DBDFC BL 0x3395194
	0x024DBE00 TBZ X0, 0x0, 0x24DBE58
	0x024DBE04 STP X21, X20, [X31]
	0x024DBE08 LDR X0, [X19]
	0x024DBE0C LDRB W8, [X0 + 0x135]
	0x024DBE10 TBNZ X8, 0x0, 0x24DBE18
	0x024DBE14 BL 0x1C5C684
	0x024DBE18 LDR X8, [X0 + 0xC0]
	0x024DBE1C ADD X1, X31, 0x0
	0x024DBE20 LDR X0, [X8 + 0x28]
	0x024DBE24 BL 0x1C16E04
	0x024DBE28 CBZ X0, 0x24DC0AC
	0x024DBE2C ADRP X8, 0x1C1D000
	0x024DBE30 LDR X8, [X8 + 0x658]
	0x024DBE34 LDR X9, [X0]
	0x024DBE38 LDR X1, [X8]
	0x024DBE3C LDR X8, [X9 + 0x40]
	0x024DBE40 LDR X9, [X1 + 0x40]
	0x024DBE44 CMP X8, X9
	0x024DBE48 B.NE 0x24DC0B0
	0x024DBE4C BL 0x1C16E08
	0x024DBE50 LDRH W8, [X0]
	0x024DBE54 CBZ W8, 0x24DBFE8
	0x024DBE58 LDR X0, [X19]
	0x024DBE5C LDRB W8, [X0 + 0x135]
	0x024DBE60 TBNZ X8, 0x0, 0x24DBE68
	0x024DBE64 BL 0x1C5C684
	0x024DBE68 LDR X8, [X23]
	0x024DBE6C LDR X9, [X0 + 0xC0]
	0x024DBE70 LDR W10, [X8 + 0xE0]
	0x024DBE74 LDR X22, [X9 + 0x48]
	0x024DBE78 CBNZ W10, 0x24DBE84
	0x024DBE7C MOV X0, X8
	0x024DBE80 BL 0x1C16DFC
	0x024DBE84 MOV X0, X22
	0x024DBE88 MOV X1, X31
	0x024DBE8C BL 0x338C698
	0x024DBE90 ADRP X8, 0x1C41000
	0x024DBE94 LDR X8, [X8 + 0xF18]
	0x024DBE98 MOV X22, X0
	0x024DBE9C MOV X1, X31
	0x024DBEA0 LDR X8, [X8]
	0x024DBEA4 MOV X0, X8
	0x024DBEA8 BL 0x338C698
	0x024DBEAC MOV X1, X0
	0x024DBEB0 MOV X0, X22
	0x024DBEB4 MOV X2, X31
	0x024DBEB8 BL 0x3395194
	0x024DBEBC TBZ X0, 0x0, 0x24DBF20
	0x024DBEC0 STP X21, X20, [X31]
	0x024DBEC4 LDR X0, [X19]
	0x024DBEC8 LDRB W8, [X0 + 0x135]
	0x024DBECC TBNZ X8, 0x0, 0x24DBED4
	0x024DBED0 BL 0x1C5C684
	0x024DBED4 LDR X8, [X0 + 0xC0]
	0x024DBED8 ADD X1, X31, 0x0
	0x024DBEDC LDR X0, [X8 + 0x28]
	0x024DBEE0 BL 0x1C16E04
	0x024DBEE4 CBZ X0, 0x24DC0AC
	0x024DBEE8 ADRP X8, 0x1C41000
	0x024DBEEC LDR X8, [X8 + 0xF20]
	0x024DBEF0 LDR X9, [X0]
	0x024DBEF4 LDR X1, [X8]
	0x024DBEF8 LDR X8, [X9 + 0x40]
	0x024DBEFC LDR X9, [X1 + 0x40]
	0x024DBF00 CMP X8, X9
	0x024DBF04 B.NE 0x24DC0B0
	0x024DBF08 BL 0x1C16E08
	0x024DBF0C LDR X1, [X0]
	0x024DBF10 MOV X0, X31
	0x024DBF14 MOV X2, X31
	0x024DBF18 BL 0x33BE5B0
	0x024DBF1C TBNZ X0, 0x0, 0x24DBFE8
	0x024DBF20 LDR X0, [X19]
	0x024DBF24 LDRB W8, [X0 + 0x135]
	0x024DBF28 TBNZ X8, 0x0, 0x24DBF30
	0x024DBF2C BL 0x1C5C684
	0x024DBF30 LDR X8, [X23]
	0x024DBF34 LDR X9, [X0 + 0xC0]
	0x024DBF38 LDR W10, [X8 + 0xE0]
	0x024DBF3C LDR X22, [X9 + 0x48]
	0x024DBF40 CBNZ W10, 0x24DBF4C
	0x024DBF44 MOV X0, X8
	0x024DBF48 BL 0x1C16DFC
	0x024DBF4C MOV X0, X22
	0x024DBF50 MOV X1, X31
	0x024DBF54 BL 0x338C698
	0x024DBF58 ADRP X8, 0x1C41000
	0x024DBF5C LDR X8, [X8 + 0xF28]
	0x024DBF60 MOV X22, X0
	0x024DBF64 MOV X1, X31
	0x024DBF68 LDR X8, [X8]
	0x024DBF6C MOV X0, X8
	0x024DBF70 BL 0x338C698
	0x024DBF74 MOV X1, X0
	0x024DBF78 MOV X0, X22
	0x024DBF7C MOV X2, X31
	0x024DBF80 BL 0x3395194
	0x024DBF84 TBZ X0, 0x0, 0x24DB818
	0x024DBF88 STP X21, X20, [X31]
	0x024DBF8C LDR X0, [X19]
	0x024DBF90 LDRB W8, [X0 + 0x135]
	0x024DBF94 TBNZ X8, 0x0, 0x24DBF9C
	0x024DBF98 BL 0x1C5C684
	0x024DBF9C LDR X8, [X0 + 0xC0]
	0x024DBFA0 ADD X1, X31, 0x0
	0x024DBFA4 LDR X0, [X8 + 0x28]
	0x024DBFA8 BL 0x1C16E04
	0x024DBFAC CBZ X0, 0x24DC0AC
	0x024DBFB0 ADRP X8, 0x1C41000
	0x024DBFB4 LDR X8, [X8 + 0xF30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1EFF000
	006 Move W8, [X21+3068]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {93}
	013 Move X0, 0x1C42000
	014 Move X0, [X0+3856]
	015 Call 0x1C17CF4
	016 Move X0, 0x1C42000
	017 Move X0, [X0+584]
	018 Call 0x1C17CF4
	019 Move X0, 0x1C19000
	020 Move X0, [X0+2904]
	021 Call 0x1C17CF4
	022 Move X0, 0x1C40000
	023 Move X0, [X0+3432]
	024 Call 0x1C17CF4
	025 Move X0, 0x1C1A000
	026 Move X0, [X0+2520]
	027 Call 0x1C17CF4
	028 Move X0, 0x1C40000
	029 Move X0, [X0+3440]
	030 Call 0x1C17CF4
	031 Move X0, 0x1C1B000
	032 Move X0, [X0+368]
	033 Call 0x1C17CF4
	034 Move X0, 0x1C40000
	035 Move X0, [X0+3448]
	036 Call 0x1C17CF4
	037 Move X0, 0x1C1D000
	038 Move X0, [X0+1576]
	039 Call 0x1C17CF4
	040 Move X0, 0x1C40000
	041 Move X0, [X0+3456]
	042 Call 0x1C17CF4
	043 Move X0, 0x1C19000
	044 Move X0, [X0+1880]
	045 Call 0x1C17CF4
	046 Move X0, 0x1C40000
	047 Move X0, [X0+3464]
	048 Call 0x1C17CF4
	049 Move X0, 0x1C1B000
	050 Move X0, [X0+2656]
	051 Call 0x1C17CF4
	052 Move X0, 0x1C42000
	053 Move X0, [X0+3864]
	054 Call 0x1C17CF4
	055 Move X0, 0x1C42000
	056 Move X0, [X0+3872]
	057 Call 0x1C17CF4
	058 Move X0, 0x1C40000
	059 Move X0, [X0+3472]
	060 Call 0x1C17CF4
	061 Move X0, 0x1C42000
	062 Move X0, [X0+1712]
	063 Call 0x1C17CF4
	064 Move X0, 0x1C19000
	065 Move X0, [X0+1728]
	066 Call 0x1C17CF4
	067 Move X0, 0x1C40000
	068 Move X0, [X0+3480]
	069 Call 0x1C17CF4
	070 Move X0, 0x1C1E000
	071 Move X0, [X0+1624]
	072 Call 0x1C17CF4
	073 Move X0, 0x1C40000
	074 Move X0, [X0+3488]
	075 Call 0x1C17CF4
	076 Move X0, 0x1C21000
	077 Move X0, [X0+1824]
	078 Call 0x1C17CF4
	079 Move X0, 0x1C40000
	080 Move X0, [X0+3496]
	081 Call 0x1C17CF4
	082 Move X0, 0x1C1A000
	083 Move X0, [X0+1880]
	084 Call 0x1C17CF4
	085 Move X0, 0x1C42000
	086 Move X0, [X0+3880]
	087 Call 0x1C17CF4
	088 Move X0, 0x1C42000
	089 Move X0, [X0+3888]
	090 Call 0x1C17CF4
	091 Move W8, 1
	092 Move [X21+3068], W8
	093 Move X0, [X19+32]
	094 Add X8, X0, 309
	095 NotImplemented "Instruction LDRH not yet implemented."
	096 Move TEMP, X20
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfEqual {134}
	100 Move TEMP, X8
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfEqual {105}
	104 Call 0x1C5D684
	105 Move X8, [X0+192]
	106 Move X0, [X8+16]
	107 Move W8, [X0+309]
	108 Move TEMP, X8
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfEqual {113}
	112 Call 0x1C5D684
	113 Move W8, [X0+224]
	114 Compare W8, 0
	115 JumpIfNotEqual {117}
	116 Call 0x1C17DFC
	117 Move X0, [X19+32]
	118 Move W8, [X0+309]
	119 Move TEMP, X8
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfEqual {124}
	123 Call 0x1C5D684
	124 Move X8, [X0+192]
	125 Move X0, [X8+16]
	126 Move W8, [X0+309]
	127 Move TEMP, X8
	128 And TEMP, TEMP, 1
	129 Compare TEMP, 1
	130 JumpIfEqual {132}
	131 Call 0x1C5D684
	132 Move X8, [X0+184]
	133 Move X19, [X8]
	134 Move TEMP, X8
	135 And TEMP, TEMP, 1
	136 Compare TEMP, 1
	137 JumpIfEqual {139}
	138 Call 0x1C5D684
	139 Move X8, [X0+192]
	140 Move X0, [X8+24]
	141 Move W8, [X0+309]
	142 Move TEMP, X8
	143 And TEMP, TEMP, 1
	144 Compare TEMP, 1
	145 JumpIfEqual {147}
	146 Call 0x1C5D684
	147 Call 0x1C17F10
	148 Move X8, [X19+32]
	149 Move X19, X0
	150 Move W9, [X8+309]
	151 Move TEMP, X9
	152 And TEMP, TEMP, 1
	153 Compare TEMP, 1
	154 JumpIfEqual {158}
	155 Move X0, X8
	156 Call 0x1C5D684
	157 Move X8, X0
	158 Move X8, [X8+192]
	159 Move X0, X19
	160 Move X1, X20
	161 Move X2, [X8+88]
	162 Call 0x26972D0, X0, X1
	163 Move X0, X19
	164 Move X20, [X31+16]
	165 Move X19, [X31+24]
	166 Move X30, [X31+32]
	167 Move X21, [X31+40]
	168 Return X0

Method: System.Void .cctor()

Disassembly:
	0x024DBFB8 LDR X9, [X0]
	0x024DBFBC LDR X1, [X8]
	0x024DBFC0 LDR X8, [X9 + 0x40]
	0x024DBFC4 LDR X9, [X1 + 0x40]
	0x024DBFC8 CMP X8, X9
	0x024DBFCC B.NE 0x24DC0B0
	0x024DBFD0 BL 0x1C16E08
	0x024DBFD4 LDR X1, [X0]
	0x024DBFD8 MOV X0, X31
	0x024DBFDC MOV X2, X31
	0x024DBFE0 BL 0x33D5390
	0x024DBFE4 TBZ X0, 0x0, 0x24DB818
	0x024DBFE8 LDR X0, [X19]
	0x024DBFEC LDRB W8, [X0 + 0x135]
	0x024DBFF0 TBNZ X8, 0x0, 0x24DBFF8
	0x024DBFF4 BL 0x1C5C684
	0x024DBFF8 LDR X8, [X0 + 0xC0]
	0x024DBFFC LDR X0, [X8 + 0x10]
	0x024DC000 LDRB W8, [X0 + 0x135]
	0x024DC004 TBNZ X8, 0x0, 0x24DC00C
	0x024DC008 BL 0x1C5C684
	0x024DC00C LDR W8, [X0 + 0xE0]
	0x024DC010 CBNZ W8, 0x24DC018
	0x024DC014 BL 0x1C16DFC
	0x024DC018 LDR X0, [X19]
	0x024DC01C LDRB W8, [X0 + 0x135]
	0x024DC020 TBNZ X8, 0x0, 0x24DC028
	0x024DC024 BL 0x1C5C684
	0x024DC028 LDR X8, [X0 + 0xC0]
	0x024DC02C LDR X0, [X8 + 0x10]
	0x024DC030 LDRB W8, [X0 + 0x135]
	0x024DC034 TBNZ X8, 0x0, 0x24DC03C
	0x024DC038 BL 0x1C5C684
	0x024DC03C LDR X8, [X0 + 0xB8]
	0x024DC040 LDR X19, [X8]
	0x024DC044 MOV X0, X19
	0x024DC048 LDP X20, X19, [X31 + 0x40]
	0x024DC04C LDP X22, X21, [X31 + 0x30]
	0x024DC050 LDP X24, X23, [X31 + 0x20]
	0x024DC054 LDR X30, [X31 + 0x10]
	0x024DC058 ADD X31, X31, 0x50
	0x024DC05C RET
	0x024DC060 ADRP X20, 0x1C40000
	0x024DC064 LDR X20, [X20 + 0xF10]
	0x024DC068 LDR X0, [X20]
	0x024DC06C LDR W8, [X0 + 0xE0]
	0x024DC070 CBNZ W8, 0x24DC07C
	0x024DC074 BL 0x1C16DFC
	0x024DC078 LDR X0, [X20]
	0x024DC07C LDR X8, [X0 + 0xB8]
	0x024DC080 LDR X8, [X8 + 0x10]
	0x024DC084 CBZ X8, 0x24DC0AC
	0x024DC088 LDR W9, [X8 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1EFF000
	006 Move X21, 0x1C42000
	007 Move W8, [X20+3069]
	008 Move X21, [X21+3856]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x1C42000
	015 Move X0, [X0+3856]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3069], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, [X19+32]
	025 Move W8, [X0+309]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {31}
	030 Call 0x1C5D684
	031 Move X8, [X0+192]
	032 Move X0, X31
	033 Move X1, [X8+96]
	034 Call 0x2185B90, X0
	035 Move X8, [X19+32]
	036 Move X20, X0
	037 Move W9, [X8+309]
	038 Move TEMP, X9
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {45}
	042 Move X0, X8
	043 Call 0x1C5D684
	044 Move X8, X0
	045 Move X8, [X8+192]
	046 Move X0, [X8+16]
	047 Move W8, [X0+309]
	048 Move TEMP, X8
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {53}
	052 Call 0x1C5D684
	053 Move X8, [X0+184]
	054 Move [X8], X20
	055 Move X0, [X19+32]
	056 Move W8, [X0+309]
	057 Move TEMP, X8
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfEqual {62}
	061 Call 0x1C5D684
	062 Move X8, [X0+192]
	063 Move X0, [X8+16]
	064 Move W8, [X0+309]
	065 Move TEMP, X8
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfEqual {75}
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move X30, [X31+32]
	072 Move X21, [X31+40]
	073 Call 0x1C5D684
	074 Return 
	075 Move X20, [X31+16]
	076 Move X19, [X31+24]
	077 Move X30, [X31+32]
	078 Move X21, [X31+40]
	079 Return 

