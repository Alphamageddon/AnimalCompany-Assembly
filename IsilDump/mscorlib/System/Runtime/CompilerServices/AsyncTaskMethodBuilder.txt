Type: System.Runtime.CompilerServices.AsyncTaskMethodBuilder

Method: System.Runtime.CompilerServices.AsyncTaskMethodBuilder Create()

Disassembly:
	0x032C5770 BL 0x33F4008
	0x032C5774 ADRP X23, 0x1114000
	0x032C5778 LDRB W8, [X23 + 0x88D]

ISIL:
	001 Move [X8], X31
	002 Move [X8+8], X31
	003 Move [X8+16], X31
	004 Return X0

Method: System.Void Start(ref TStateMachine stateMachine)

Disassembly:
	0x0218D9A8 BL 0x1D2C690
	0x0218D9AC MOV X0, X19
	0x0218D9B0 BL 0x1C16F18
	0x0218D9B4 BL 0x1990590
	0x0218D9B8 SUB X31, X31, 0x40
	0x0218D9BC STR X30, [X31 + 0x20]
	0x0218D9C0 STP X20, X19, [X31 + 0x30]
	0x0218D9C4 LDR X8, [X2 + 0x38]
	0x0218D9C8 MOV X20, X2
	0x0218D9CC MOV X19, X1
	0x0218D9D0 CBNZ X8, 0x218D9F0
	0x0218D9D4 ADRP X0, 0x1F8E000
	0x0218D9D8 LDR X0, [X0 + 0x580]
	0x0218D9DC BL 0x1C16CF4
	0x0218D9E0 LDR X8, [X20 + 0x38]
	0x0218D9E4 CBNZ X8, 0x218D9F0
	0x0218D9E8 MOV X0, X20
	0x0218D9EC BL 0x1C5C6E0
	0x0218D9F0 MOVI V0.2D, 0x0
	0x0218D9F4 MOV X0, X31
	0x0218D9F8 STP V0, V0, [X31]
	0x0218D9FC BL 0x32C5C58
	0x0218DA00 ADRP X8, 0x1F8E000
	0x0218DA04 LDR X8, [X8 + 0x580]
	0x0218DA08 LDR X0, [X8]
	0x0218DA0C LDR W8, [X0 + 0xE0]
	0x0218DA10 CBNZ W8, 0x218DA18
	0x0218DA14 BL 0x1C16DFC
	0x0218DA18 ADD X0, X31, 0x0
	0x0218DA1C MOV X1, X31
	0x0218DA20 BL 0x33E4F00
	0x0218DA24 LDR X8, [X20 + 0x38]
	0x0218DA28 LDR X1, [X8 + 0x10]
	0x0218DA2C MOV X0, X19
	0x0218DA30 BL 0x3424B20
	0x0218DA34 ADD X0, X31, 0x0
	0x0218DA38 MOV X1, X31
	0x0218DA3C BL 0x33E42EC
	0x0218DA40 LDP X20, X19, [X31 + 0x30]
	0x0218DA44 LDR X30, [X31 + 0x20]
	0x0218DA48 ADD X31, X31, 0x40
	0x0218DA4C RET
	0x0218DA50 B 0x218DA54
	0x0218DA54 MOV X20, X0
	0x0218DA58 CMP W1, 0x1
	0x0218DA5C B.NE 0x218DA88
	0x0218DA60 MOV X0, X20
	0x0218DA64 BL 0x3EB1AD0
	0x0218DA68 LDR X19, [X0]
	0x0218DA6C BL 0x3EB1AE0
	0x0218DA70 ADD X0, X31, 0x0
	0x0218DA74 MOV X1, X31
	0x0218DA78 BL 0x33E42EC
	0x0218DA7C CBZ X19, 0x218DA40
	0x0218DA80 MOV X0, X19
	0x0218DA84 BL 0x1C16F18
	0x0218DA88 MOV X19, X31
	0x0218DA8C B 0x218DA94
	0x0218DA90 MOV X20, X0
	0x0218DA94 ADD X0, X31, 0x0
	0x0218DA98 MOV X1, X31
	0x0218DA9C BL 0x33E42EC
	0x0218DAA0 CBNZ X19, 0x218DAAC
	0x0218DAA4 MOV X0, X20
	0x0218DAA8 BL 0x1D2C690
	0x0218DAAC MOV X0, X19
	0x0218DAB0 BL 0x1C16F18
	0x0218DAB4 BL 0x1990590
	0x0218DAB8 SUB X31, X31, 0x40
	0x0218DABC STR X30, [X31 + 0x20]
	0x0218DAC0 STP X20, X19, [X31 + 0x30]
	0x0218DAC4 LDR X8, [X2 + 0x38]
	0x0218DAC8 MOV X20, X2
	0x0218DACC MOV X19, X1
	0x0218DAD0 CBNZ X8, 0x218DAF0
	0x0218DAD4 ADRP X0, 0x1F8E000
	0x0218DAD8 LDR X0, [X0 + 0x580]
	0x0218DADC BL 0x1C16CF4
	0x0218DAE0 LDR X8, [X20 + 0x38]
	0x0218DAE4 CBNZ X8, 0x218DAF0
	0x0218DAE8 MOV X0, X20
	0x0218DAEC BL 0x1C5C6E0
	0x0218DAF0 MOVI V0.2D, 0x0
	0x0218DAF4 MOV X0, X31
	0x0218DAF8 STP V0, V0, [X31]
	0x0218DAFC BL 0x32C5C58
	0x0218DB00 ADRP X8, 0x1F8E000
	0x0218DB04 LDR X8, [X8 + 0x580]
	0x0218DB08 LDR X0, [X8]
	0x0218DB0C LDR W8, [X0 + 0xE0]
	0x0218DB10 CBNZ W8, 0x218DB18
	0x0218DB14 BL 0x1C16DFC
	0x0218DB18 ADD X0, X31, 0x0
	0x0218DB1C MOV X1, X31
	0x0218DB20 BL 0x33E4F00
	0x0218DB24 LDR X8, [X20 + 0x38]
	0x0218DB28 LDR X1, [X8 + 0x10]
	0x0218DB2C MOV X0, X19
	0x0218DB30 BL 0x342518C
	0x0218DB34 ADD X0, X31, 0x0
	0x0218DB38 MOV X1, X31
	0x0218DB3C BL 0x33E42EC
	0x0218DB40 LDP X20, X19, [X31 + 0x30]
	0x0218DB44 LDR X30, [X31 + 0x20]
	0x0218DB48 ADD X31, X31, 0x40
	0x0218DB4C RET
	0x0218DB50 B 0x218DB54
	0x0218DB54 MOV X20, X0
	0x0218DB58 CMP W1, 0x1
	0x0218DB5C B.NE 0x218DB88
	0x0218DB60 MOV X0, X20
	0x0218DB64 BL 0x3EB1AD0
	0x0218DB68 LDR X19, [X0]
	0x0218DB6C BL 0x3EB1AE0
	0x0218DB70 ADD X0, X31, 0x0
	0x0218DB74 MOV X1, X31
	0x0218DB78 BL 0x33E42EC
	0x0218DB7C CBZ X19, 0x218DB40
	0x0218DB80 MOV X0, X19
	0x0218DB84 BL 0x1C16F18
	0x0218DB88 MOV X19, X31
	0x0218DB8C B 0x218DB94
	0x0218DB90 MOV X20, X0
	0x0218DB94 ADD X0, X31, 0x0
	0x0218DB98 MOV X1, X31
	0x0218DB9C BL 0x33E42EC
	0x0218DBA0 CBNZ X19, 0x218DBAC
	0x0218DBA4 MOV X0, X20
	0x0218DBA8 BL 0x1D2C690
	0x0218DBAC MOV X0, X19
	0x0218DBB0 BL 0x1C16F18
	0x0218DBB4 BL 0x1990590

ISIL:
	001 Move [X31-80], X29
	002 Move [X31-72], X30
	003 Move [X31+16], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Add X29, X31, 0
	011 Subtract X31, X31, 48
	012 NotImplemented "Instruction MRS not yet implemented."
	013 Move X8, [X24+40]
	014 Move X19, X2
	015 Move X20, X1
	016 Move [X29-8], X8
	017 Move X25, [X2+56]
	018 Compare X25, 0
	019 JumpIfNotEqual {29}
	020 Move X0, 0x1F8F000
	021 Move X0, [X0+1408]
	022 Call 0x1C17CF4
	023 Move X25, [X19+56]
	024 Compare X25, 0
	025 JumpIfNotEqual {29}
	026 Move X0, X19
	027 Call 0x1C5D6E0
	028 Move X25, [X19+56]
	029 Move X0, [X25+8]
	030 Move W22, [X0+252]
	031 Move W9, [X0+309]
	032 Move W8, W22
	033 Move TEMP, X9
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {40}
	037 Call 0x1C5D684
	038 Move W8, [X0+252]
	039 Move X25, [X19+56]
	040 Add W8, W8, 16
	041 Add X8, X8, 15
	042 Add X9, X31, 0
	043 And X8, X8, 0x1FFFFFFFF
	044 Subtract X21, X9, X8
	045 Add X31, X21, 0
	046 Add X9, X22, 15
	047 Add X8, X31, 0
	048 And X9, X9, 0x1FFFFFFFF
	049 Subtract X23, X8, X9
	050 Add X31, X23, 0
	051 NotImplemented "Instruction MOVI not yet implemented."
	052 Move X0, X23
	053 Move X1, X20
	054 Move X2, X22
	055 Move [X29-48], V0
	056 Move [X29-40], V0
	057 Call 0x3EB2AC0
	058 Move X0, [X25+8]
	059 Move X1, X23
	060 Call 0x1C17ED4
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {112}
	065 NotImplemented "Instruction MOVI not yet implemented."
	066 Move X0, X31
	067 Move [X29-48], V0
	068 Move [X29-40], V0
	069 Call RuntimeHelpers.PrepareConstrainedRegions
	070 Move X8, 0x1F8F000
	071 Move X8, [X8+1408]
	072 Move X0, [X8]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Subtract X0, X29, 48
	078 Move X1, X31
	079 Call ExecutionContext.EstablishCopyOnWriteScope, X0
	080 Move X8, [X19+56]
	081 Move X0, [X8+8]
	082 Move W9, [X0+309]
	083 Move TEMP, X9
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfEqual {89}
	087 Call 0x1C5D684
	088 Move X8, [X19+56]
	089 Move X1, [X8+16]
	090 Move X2, X21
	091 Move X3, X20
	092 Move X4, X31
	093 Move X5, X31
	094 Call 0x1C18728
	095 Subtract X0, X29, 48
	096 Move X1, X31
	097 Call ExecutionContextSwitcher.Undo, X0
	098 Move X8, [X24+40]
	099 NotImplemented "Instruction LDUR not yet implemented."
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Add X31, X29, 0
	102 Move X20, [X31+64]
	103 Move X19, [X31+72]
	104 Move X22, [X31+48]
	105 Move X21, [X31+56]
	106 Move X24, [X31+32]
	107 Move X23, [X31+40]
	108 Move X25, [X31+16]
	109 Move X29, [X31+80]
	110 Move X30, [X31+88]
	111 Return 
	112 Move X0, 0x1F6C000
	113 Move X0, [X0+1320]
	114 Call 0x1C17D08
	115 Call 0x1C17F10
	116 Move X20, X0
	117 Move X0, 0x1F8F000
	118 Move X0, [X0+1424]
	119 Call 0x1C17D08
	120 Move X1, X0
	121 Move X0, X20
	122 Move X2, X31
	123 Call ArgumentNullException..ctor, X0, X1
	124 Move X0, X20
	125 Move X1, X19
	126 Call 0x1C17DEC
	127 Call 0x3EB2B20
	128 Move X20, X0
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move X0, X20
	131 Call 0x3EB2AD0
	132 Move X19, [X0]
	133 Call 0x3EB2AE0
	134 Subtract X0, X29, 48
	135 Move X1, X31
	136 Call ExecutionContextSwitcher.Undo, X0
	137 Compare X19, 0
	138 JumpIfEqual {98}
	139 Move X0, X19
	140 Call 0x1C17F18
	141 Move X19, X31
	142 Move X20, X0
	143 Subtract X0, X29, 48
	144 Move X1, X31
	145 Call ExecutionContextSwitcher.Undo, X0
	146 Compare X19, 0
	147 JumpIfNotEqual {150}
	148 Move X0, X20
	149 Call 0x1D2D690
	150 Move X0, X19
	151 Call 0x1C17F18
	152 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x032C577C MOV X21, X0
	0x032C5780 CBNZ W8, 0x32C5798
	0x032C5784 ADRP X0, 0xE36000
	0x032C5788 LDR X0, [X0 + 0x7E8]
	0x032C578C BL 0x1C16CF4
	0x032C5790 MOVZ W8, 0x1
	0x032C5794 STRB W8, [X23 + 0x88D]
	0x032C5798 LDR X0, [X22]
	0x032C579C LDR W8, [X0 + 0xE0]
	0x032C57A0 CBNZ W8, 0x32C57AC
	0x032C57A4 BL 0x1C16DFC
	0x032C57A8 LDR X0, [X22]
	0x032C57AC LDR X8, [X0 + 0xB8]
	0x032C57B0 LDR X8, [X8 + 0x8]
	0x032C57B4 CMP X21, X8
	0x032C57B8 B.EQ 0x32C5838
	0x032C57BC ADRP X20, 0xE2F000
	0x032C57C0 LDR X20, [X20 + 0x7B8]
	0x032C57C4 LDR X0, [X20]
	0x032C57C8 LDR W8, [X0 + 0xE0]
	0x032C57CC CBNZ W8, 0x32C57D4
	0x032C57D0 BL 0x1C16DFC
	0x032C57D4 ADRP X22, 0x1113000
	0x032C57D8 LDRB W8, [X22 + 0xF1B]
	0x032C57DC CBNZ W8, 0x32C57F4
	0x032C57E0 ADRP X0, 0xE2F000
	0x032C57E4 LDR X0, [X0 + 0x7B8]
	0x032C57E8 BL 0x1C16CF4
	0x032C57EC MOVZ W8, 0x1
	0x032C57F0 STRB W8, [X22 + 0xF1B]
	0x032C57F4 LDR X0, [X20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1118000
	007 Move X21, 0xE57000
	008 Move W8, [X22+2204]
	009 Move X21, [X21+2064]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xE61000
	017 Move X0, [X0+2264]
	018 Call 0x1C17CF4
	019 Move X0, 0xE57000
	020 Move X0, [X0+2064]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2204], W8
	024 Move X0, [X21]
	025 Move X21, 0xE61000
	026 Move W8, [X0+224]
	027 Move X21, [X21+2264]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Move X0, X20
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<VoidTaskResult>.SetStateMachine, X0, X1
	040 Return 

Method: System.Void AwaitOnCompleted(ref TAwaiter awaiter, ref TStateMachine stateMachine)

Disassembly:
	0x02186468 STR X30, [X31 - 0x30]!
	0x0218646C STP X22, X21, [X31 + 0x10]
	0x02186470 STP X20, X19, [X31 + 0x20]
	0x02186474 LDR X8, [X3 + 0x38]
	0x02186478 MOV X21, X3
	0x0218647C MOV X19, X2
	0x02186480 MOV X20, X1
	0x02186484 MOV X22, X0
	0x02186488 CBNZ X8, 0x21864A8
	0x0218648C ADRP X0, 0x1F95000
	0x02186490 LDR X0, [X0 + 0x810]
	0x02186494 BL 0x1C16CF4
	0x02186498 LDR X8, [X21 + 0x38]
	0x0218649C CBNZ X8, 0x21864A8
	0x021864A0 MOV X0, X21
	0x021864A4 BL 0x1C5C6E0
	0x021864A8 ADRP X8, 0x1F95000
	0x021864AC LDR X8, [X8 + 0x810]
	0x021864B0 LDR X0, [X8]
	0x021864B4 LDR W8, [X0 + 0xE0]
	0x021864B8 CBNZ W8, 0x21864C0
	0x021864BC BL 0x1C16DFC
	0x021864C0 LDR X8, [X21 + 0x38]
	0x021864C4 MOV X0, X22
	0x021864C8 MOV X1, X20
	0x021864CC MOV X2, X19
	0x021864D0 LDR X3, [X8 + 0x10]
	0x021864D4 LDP X20, X19, [X31 + 0x20]
	0x021864D8 LDP X22, X21, [X31 + 0x10]
	0x021864DC LDR X30, [X31], #0x30
	0x021864E0 B 0x1FD78EC
	0x021864E4 STR X30, [X31 - 0x30]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X3+56]
	007 Move X21, X3
	008 Move X19, X2
	009 Move X20, X1
	010 Move X22, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {21}
	013 Move X0, 0x1F96000
	014 Move X0, [X0+2064]
	015 Call 0x1C17CF4
	016 Move X8, [X21+56]
	017 Compare X8, 0
	018 JumpIfNotEqual {21}
	019 Move X0, X21
	020 Call 0x1C5D6E0
	021 Move X8, 0x1F96000
	022 Move X8, [X8+2064]
	023 Move X0, [X8]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X8, [X21+56]
	029 Move X0, X22
	030 Move X1, X20
	031 Move X2, X19
	032 Move X3, [X8+16]
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X4, [X3]
	038 Move X30, [X31+48]
	039 CallNoReturn X4

Method: System.Void AwaitUnsafeOnCompleted(ref TAwaiter awaiter, ref TStateMachine stateMachine)

Disassembly:
	0x02186564 STP X22, X21, [X31 + 0x10]
	0x02186568 STP X20, X19, [X31 + 0x20]
	0x0218656C LDR X8, [X3 + 0x38]
	0x02186570 MOV X21, X3
	0x02186574 MOV X19, X2
	0x02186578 MOV X20, X1
	0x0218657C MOV X22, X0
	0x02186580 CBNZ X8, 0x21865A0
	0x02186584 ADRP X0, 0x1F95000
	0x02186588 LDR X0, [X0 + 0x810]
	0x0218658C BL 0x1C16CF4
	0x02186590 LDR X8, [X21 + 0x38]
	0x02186594 CBNZ X8, 0x21865A0
	0x02186598 MOV X0, X21
	0x0218659C BL 0x1C5C6E0
	0x021865A0 ADRP X8, 0x1F95000
	0x021865A4 LDR X8, [X8 + 0x810]
	0x021865A8 LDR X0, [X8]
	0x021865AC LDR W8, [X0 + 0xE0]
	0x021865B0 CBNZ W8, 0x21865B8
	0x021865B4 BL 0x1C16DFC
	0x021865B8 LDR X8, [X21 + 0x38]
	0x021865BC MOV X0, X22
	0x021865C0 MOV X1, X20
	0x021865C4 MOV X2, X19
	0x021865C8 LDR X3, [X8 + 0x10]
	0x021865CC LDP X20, X19, [X31 + 0x20]
	0x021865D0 LDP X22, X21, [X31 + 0x10]
	0x021865D4 LDR X30, [X31], #0x30
	0x021865D8 B 0x1FD7D14
	0x021865DC STR X30, [X31 - 0x30]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X3+56]
	007 Move X21, X3
	008 Move X19, X2
	009 Move X20, X1
	010 Move X22, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {21}
	013 Move X0, 0x1F96000
	014 Move X0, [X0+2064]
	015 Call 0x1C17CF4
	016 Move X8, [X21+56]
	017 Compare X8, 0
	018 JumpIfNotEqual {21}
	019 Move X0, X21
	020 Call 0x1C5D6E0
	021 Move X8, 0x1F96000
	022 Move X8, [X8+2064]
	023 Move X0, [X8]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X8, [X21+56]
	029 Move X0, X22
	030 Move X1, X20
	031 Move X2, X19
	032 Move X3, [X8+16]
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Call AsyncTaskMethodBuilder`1<VoidTaskResult>.AwaitUnsafeOnCompleted, X0, X1, X2
	039 Return 

Method: System.Threading.Tasks.Task get_Task()

Disassembly:
	0x032C57F8 LDR W8, [X0 + 0xE0]
	0x032C57FC CBNZ W8, 0x32C5808
	0x032C5800 BL 0x1C16DFC
	0x032C5804 LDR X0, [X20]
	0x032C5808 LDR X8, [X0 + 0xB8]
	0x032C580C LDR X0, [X8 + 0x28]
	0x032C5810 CBZ X0, 0x32C58D0
	0x032C5814 MOV X1, X19
	0x032C5818 MOV X4, X21
	0x032C581C LDP X20, X19, [X31 + 0x20]
	0x032C5820 LDP X22, X21, [X31 + 0x10]
	0x032C5824 MOVZ W3, 0x1
	0x032C5828 MOV X2, X31
	0x032C582C MOV X5, X31
	0x032C5830 LDP X30, X23, [X31], #0x30
	0x032C5834 B 0x33F9664
	0x032C5838 ADRP X21, 0xE2F000
	0x032C583C LDR X21, [X21 + 0x868]
	0x032C5840 LDR X0, [X21]
	0x032C5844 LDR W8, [X0 + 0xE0]
	0x032C5848 CBNZ W8, 0x32C5854
	0x032C584C BL 0x1C16DFC
	0x032C5850 LDR X0, [X21]
	0x032C5854 LDR X8, [X0 + 0xB8]
	0x032C5858 MOV X1, X19
	0x032C585C MOV X2, X31
	0x032C5860 LDR X0, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1118000
	006 Move X20, 0xE57000
	007 Move W8, [X21+2205]
	008 Move X20, [X20+2064]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xE61000
	015 Move X0, [X0+2272]
	016 Call 0x1C17CF4
	017 Move X0, 0xE57000
	018 Move X0, [X0+2064]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2205], W8
	022 Move X0, [X20]
	023 Move X20, 0xE61000
	024 Move W8, [X0+224]
	025 Move X20, [X20+2272]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X1, [X20]
	030 Move X0, X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Call AsyncTaskMethodBuilder`1<VoidTaskResult>.get_Task, X0
	036 Return X0

Method: System.Void SetResult()

Disassembly:
	0x032C5864 TBZ X20, 0x0, 0x32C5878
	0x032C5868 LDP X20, X19, [X31 + 0x20]
	0x032C586C LDP X22, X21, [X31 + 0x10]
	0x032C5870 LDP X30, X23, [X31], #0x30
	0x032C5874 B 0x33E9B34
	0x032C5878 LDP X20, X19, [X31 + 0x20]
	0x032C587C LDP X22, X21, [X31 + 0x10]
	0x032C5880 LDP X30, X23, [X31], #0x30
	0x032C5884 B 0x33E9B5C
	0x032C5888 ADRP X0, 0xE33000
	0x032C588C LDR X0, [X0 + 0x528]
	0x032C5890 BL 0x1C16D08
	0x032C5894 BL 0x1C16F10
	0x032C5898 MOV X19, X0
	0x032C589C ADRP X0, 0xE60000
	0x032C58A0 LDR X0, [X0 + 0x870]
	0x032C58A4 BL 0x1C16D08
	0x032C58A8 MOV X1, X0
	0x032C58AC MOV X0, X19
	0x032C58B0 MOV X2, X31
	0x032C58B4 BL 0x330E100
	0x032C58B8 ADRP X0, 0xE60000
	0x032C58BC LDR X0, [X0 + 0x960]
	0x032C58C0 BL 0x1C16D08
	0x032C58C4 MOV X1, X0
	0x032C58C8 MOV X0, X19
	0x032C58CC BL 0x1C16DEC
	0x032C58D0 BL 0x1C16F20
	0x032C58D4 STP X30, X21, [X31 - 0x20]!
	0x032C58D8 STP X20, X19, [X31 + 0x10]
	0x032C58DC ADRP X20, 0x1117000
	0x032C58E0 ADRP X21, 0xE2F000
	0x032C58E4 LDRB W8, [X20 + 0x8AF]
	0x032C58E8 LDR X21, [X21 + 0x868]
	0x032C58EC MOV X19, X1
	0x032C58F0 TBNZ X8, 0x0, 0x32C5908
	0x032C58F4 ADRP X0, 0xE2F000
	0x032C58F8 LDR X0, [X0 + 0x868]
	0x032C58FC BL 0x1C16CF4
	0x032C5900 MOVZ W8, 0x1
	0x032C5904 STRB W8, [X20 + 0x8AF]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1118000
	006 Move X20, 0xE32000
	007 Move W8, [X21+2206]
	008 Move X20, [X20+640]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xE61000
	015 Move X0, [X0+2280]
	016 Call 0x1C17CF4
	017 Move X0, 0xE57000
	018 Move X0, [X0+2064]
	019 Call 0x1C17CF4
	020 Move X0, 0xE32000
	021 Move X0, [X0+640]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2206], W8
	025 Move X0, [X20]
	026 Move X21, 0xE57000
	027 Move W8, [X0+224]
	028 Move X21, [X21+2064]
	029 Compare W8, 0
	030 JumpIfNotEqual {33}
	031 Call 0x1C17DFC
	032 Move X0, [X20]
	033 Move X8, [X21]
	034 Move X9, [X0+184]
	035 Move X21, 0xE61000
	036 Move W10, [X8+224]
	037 Move X20, [X9]
	038 Move X21, [X21+2280]
	039 Compare W10, 0
	040 JumpIfNotEqual {43}
	041 Move X0, X8
	042 Call 0x1C17DFC
	043 Move X2, [X21]
	044 Move X0, X19
	045 Move X1, X20
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Call AsyncTaskMethodBuilder`1<VoidTaskResult>.SetResult, X0, X1
	051 Return 

Method: System.Void SetException(System.Exception exception)

Disassembly:
	0x032C5908 LDR X0, [X21]
	0x032C590C LDR W8, [X0 + 0xE0]
	0x032C5910 CBNZ W8, 0x32C5918
	0x032C5914 BL 0x1C16DFC
	0x032C5918 MOV X0, X19
	0x032C591C LDP X20, X19, [X31 + 0x10]
	0x032C5920 MOV W1, W31
	0x032C5924 LDP X30, X21, [X31], #0x20
	0x032C5928 B 0x32C5644
	0x032C592C STR X30, [X31 - 0x20]!
	0x032C5930 STP X20, X19, [X31 + 0x10]
	0x032C5934 ADRP X20, 0x1117000
	0x032C5938 LDRB W8, [X20 + 0x8B1]
	0x032C593C MOV X19, X0
	0x032C5940 TBNZ X8, 0x0, 0x32C5958
	0x032C5944 ADRP X0, 0xE2F000
	0x032C5948 LDR X0, [X0 + 0xE70]
	0x032C594C BL 0x1C16CF4
	0x032C5950 MOVZ W8, 0x1
	0x032C5954 STRB W8, [X20 + 0x8B1]
	0x032C5958 CBZ X19, 0x32C598C
	0x032C595C ADRP X8, 0xE2F000
	0x032C5960 LDR X8, [X8 + 0xE70]
	0x032C5964 LDR X1, [X8]
	0x032C5968 LDR X8, [X19]
	0x032C596C CMP X8, X1
	0x032C5970 B.NE 0x32C5990
	0x032C5974 LDR X2, [X19 + 0x18]
	0x032C5978 LDR X0, [X19 + 0x40]
	0x032C597C LDR X1, [X19 + 0x28]
	0x032C5980 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1118000
	007 Move X21, 0xE57000
	008 Move W8, [X22+2207]
	009 Move X21, [X21+2064]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xE61000
	017 Move X0, [X0+2288]
	018 Call 0x1C17CF4
	019 Move X0, 0xE57000
	020 Move X0, [X0+2064]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2207], W8
	024 Move X0, [X21]
	025 Move X21, 0xE61000
	026 Move W8, [X0+224]
	027 Move X21, [X21+2288]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Move X0, X20
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<VoidTaskResult>.SetException, X0, X1
	040 Return 

Method: System.Void .cctor()

Disassembly:
	0x032C5984 LDR X30, [X31], #0x20
	0x032C5988 BR X2
	0x032C598C BL 0x1C16F20
	0x032C5990 MOV X0, X19
	0x032C5994 BL 0x1C171E0
	0x032C5998 RET
	0x032C599C STP X30, X23, [X31 - 0x30]!
	0x032C59A0 STP X22, X21, [X31 + 0x10]
	0x032C59A4 STP X20, X19, [X31 + 0x20]
	0x032C59A8 ADRP X19, 0x1117000
	0x032C59AC ADRP X23, 0xE37000
	0x032C59B0 ADRP X21, 0xE60000
	0x032C59B4 ADRP X20, 0xE2F000
	0x032C59B8 ADRP X22, 0xE3A000
	0x032C59BC LDRB W8, [X19 + 0x8B2]
	0x032C59C0 LDR X23, [X23 + 0x958]
	0x032C59C4 LDR X21, [X21 + 0x968]
	0x032C59C8 LDR X20, [X20 + 0x868]
	0x032C59CC LDR X22, [X22 + 0x4A0]
	0x032C59D0 TBNZ X8, 0x0, 0x32C5A0C
	0x032C59D4 ADRP X0, 0xE3A000
	0x032C59D8 LDR X0, [X0 + 0x4A0]
	0x032C59DC BL 0x1C16CF4
	0x032C59E0 ADRP X0, 0xE37000
	0x032C59E4 LDR X0, [X0 + 0x958]
	0x032C59E8 BL 0x1C16CF4
	0x032C59EC ADRP X0, 0xE60000
	0x032C59F0 LDR X0, [X0 + 0x968]
	0x032C59F4 BL 0x1C16CF4
	0x032C59F8 ADRP X0, 0xE2F000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1118000
	005 Move X19, 0xE57000
	006 Move W8, [X20+2208]
	007 Move X19, [X19+2064]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0xE57000
	013 Move X0, [X0+2064]
	014 Call 0x1C17CF4
	015 Move X0, 0xE32000
	016 Move X0, [X0+640]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+2208], W8
	020 Move X0, [X19]
	021 Move X20, 0xE32000
	022 Move W8, [X0+224]
	023 Move X20, [X20+640]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X19]
	028 Move X8, [X0+184]
	029 Move X9, [X20]
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X8, [X8]
	033 Move X9, [X9+184]
	034 Move [X9], X8
	035 Move X30, [X31+32]
	036 Return 

