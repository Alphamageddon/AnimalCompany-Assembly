Type: System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable/ConfiguredValueTaskAwaiter

Method: System.Void .ctor(System.Threading.Tasks.ValueTask value)

Disassembly:
	0x032C39DC MOV X19, X0
	0x032C39E0 BL 0x33BDD8C

ISIL:
	001 Move [X0], X1
	002 Move [X0+8], X2
	003 Return 

Method: System.Boolean get_IsCompleted()

Disassembly:
	0x032C39E4 LDR X8, [X20]
	0x032C39E8 LDR X8, [X8 + 0xB8]
	0x032C39EC STR X19, [X8]
	0x032C39F0 LDP X20, X19, [X31 + 0x10]
	0x032C39F4 LDR X30, [X31], #0x20
	0x032C39F8 RET
	0x032C39FC MOV X1, X31
	0x032C3A00 B 0x33BDD8C
	0x032C3A04 STR X30, [X31 - 0x20]!
	0x032C3A08 STP X20, X19, [X31 + 0x10]
	0x032C3A0C ADRP X20, 0x1119000
	0x032C3A10 LDRB W8, [X20 + 0x897]
	0x032C3A14 MOV X19, X1
	0x032C3A18 TBNZ X8, 0x0, 0x32C3A30
	0x032C3A1C ADRP X0, 0xE31000
	0x032C3A20 LDR X0, [X0 + 0xE70]
	0x032C3A24 BL 0x1C16CF4
	0x032C3A28 MOVZ W8, 0x1
	0x032C3A2C STRB W8, [X20 + 0x897]
	0x032C3A30 CBZ X19, 0x32C3A4C
	0x032C3A34 ADRP X8, 0xE31000
	0x032C3A38 LDR X8, [X8 + 0xE70]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x111A000
	006 Move X21, 0xE5B000
	007 Move W8, [X20+2183]
	008 Move X21, [X21+3648]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE5B000
	015 Move X0, [X0+3648]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2183], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call 0x32D6470
	031 Return X0

Method: System.Void GetResult()

Disassembly:
	0x032C3A3C LDR X9, [X19]
	0x032C3A40 LDR X8, [X8]
	0x032C3A44 CMP X9, X8
	0x032C3A48 B.EQ 0x32C3A60
	0x032C3A4C LDP X20, X19, [X31 + 0x10]
	0x032C3A50 MOVZ W0, 0x28
	0x032C3A54 MOV X1, X31
	0x032C3A58 LDR X30, [X31], #0x20
	0x032C3A5C B 0x339D764
	0x032C3A60 LDR X2, [X19 + 0x18]
	0x032C3A64 LDR X0, [X19 + 0x40]
	0x032C3A68 LDR X1, [X19 + 0x28]
	0x032C3A6C LDP X20, X19, [X31 + 0x10]
	0x032C3A70 LDR X30, [X31], #0x20
	0x032C3A74 BR X2
	0x032C3A78 STR X1, [X0]
	0x032C3A7C RET
	0x032C3A80 STR X30, [X31 - 0x10]!
	0x032C3A84 LDR X0, [X0]
	0x032C3A88 CBZ X0, 0x32C3A98
	0x032C3A8C MOV X1, X31
	0x032C3A90 LDR X30, [X31], #0x10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x111A000
	006 Move X21, 0xE5B000
	007 Move W8, [X20+2184]
	008 Move X21, [X21+3648]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE5B000
	015 Move X0, [X0+3648]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2184], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call 0x32D6578
	031 Return 

Method: System.Void OnCompleted(System.Action continuation)

Disassembly:
	0x032C3A94 B 0x33ED11C
	0x032C3A98 BL 0x1C16F20
	0x032C3A9C STR X30, [X31 - 0x30]!
	0x032C3AA0 STP X22, X21, [X31 + 0x10]
	0x032C3AA4 STP X20, X19, [X31 + 0x20]
	0x032C3AA8 CBZ X1, 0x32C3B00
	0x032C3AAC MOV X20, X0
	0x032C3AB0 MOV X0, X31
	0x032C3AB4 MOV W19, W3
	0x032C3AB8 MOV W21, W2
	0x032C3ABC MOV X22, X1
	0x032C3AC0 BL 0x3224FFC
	0x032C3AC4 TBZ X0, 0x0, 0x32C3AD8
	0x032C3AC8 MOV X0, X20
	0x032C3ACC MOV X1, X22
	0x032C3AD0 BL 0x32C3D4C
	0x032C3AD4 MOV X22, X0
	0x032C3AD8 CBZ X20, 0x32C3B48
	0x032C3ADC AND W2, W21, 0x1
	0x032C3AE0 AND W3, W19, 0x1
	0x032C3AE4 MOV X0, X20
	0x032C3AE8 MOV X1, X22
	0x032C3AEC LDP X20, X19, [X31 + 0x20]
	0x032C3AF0 LDP X22, X21, [X31 + 0x10]
	0x032C3AF4 MOV X4, X31
	0x032C3AF8 LDR X30, [X31], #0x30
	0x032C3AFC B 0x33F2AA4
	0x032C3B00 ADRP X0, 0xE35000
	0x032C3B04 LDR X0, [X0 + 0x528]
	0x032C3B08 BL 0x1C16D08
	0x032C3B0C BL 0x1C16F10
	0x032C3B10 MOV X19, X0
	0x032C3B14 ADRP X0, 0xE62000
	0x032C3B18 LDR X0, [X0 + 0x870]
	0x032C3B1C BL 0x1C16D08
	0x032C3B20 MOV X1, X0
	0x032C3B24 MOV X0, X19
	0x032C3B28 MOV X2, X31
	0x032C3B2C BL 0x330E100
	0x032C3B30 ADRP X0, 0xE62000
	0x032C3B34 LDR X0, [X0 + 0x878]
	0x032C3B38 BL 0x1C16D08
	0x032C3B3C MOV X1, X0
	0x032C3B40 MOV X0, X19
	0x032C3B44 BL 0x1C16DEC
	0x032C3B48 BL 0x1C16F20
	0x032C3B4C LDR X0, [X0]
	0x032C3B50 B 0x32C3B54
	0x032C3B54 STR X30, [X31 - 0x20]!
	0x032C3B58 STP X20, X19, [X31 + 0x10]
	0x032C3B5C CBZ X0, 0x32C3B9C
	0x032C3B60 LDR W20, [X0 + 0x38]
	0x032C3B64 MOV X19, X0
	0x032C3B68 BL 0x1C16D44
	0x032C3B6C MOVZ W8, 0x11000000
	0x032C3B70 AND W8, W20, W8, 0x0
	0x032C3B74 MOVZ W9, 0x1000000
	0x032C3B78 CMP W8, W9
	0x032C3B7C B.NE 0x32C3B8C
	0x032C3B80 LDP X20, X19, [X31 + 0x10]
	0x032C3B84 LDR X30, [X31], #0x20
	0x032C3B88 RET
	0x032C3B8C MOV X0, X19
	0x032C3B90 LDP X20, X19, [X31 + 0x10]
	0x032C3B94 LDR X30, [X31], #0x20
	0x032C3B98 B 0x32C3BA0
	0x032C3B9C BL 0x1C16F20
	0x032C3BA0 STP X30, X19, [X31 - 0x10]!
	0x032C3BA4 CBZ X0, 0x32C3BFC
	0x032C3BA8 MOV X1, X31
	0x032C3BAC MOV X19, X0
	0x032C3BB0 BL 0x33ED11C
	0x032C3BB4 TBNZ X0, 0x0, 0x32C3BCC
	0x032C3BB8 MOVN W1, 0x0
	0x032C3BBC MOV X0, X19
	0x032C3BC0 MOV X2, X31
	0x032C3BC4 MOV X3, X31
	0x032C3BC8 BL 0x33F3028
	0x032C3BCC MOV X0, X19
	0x032C3BD0 MOV X1, X31
	0x032C3BD4 BL 0x33EFEA4
	0x032C3BD8 MOV X0, X19
	0x032C3BDC MOV X1, X31
	0x032C3BE0 BL 0x33EDE64
	0x032C3BE4 TBZ X0, 0x0, 0x32C3BF0
	0x032C3BE8 LDP X30, X19, [X31], #0x10
	0x032C3BEC RET
	0x032C3BF0 MOV X0, X19
	0x032C3BF4 LDP X30, X19, [X31], #0x10
	0x032C3BF8 B 0x32C3C00
	0x032C3BFC BL 0x1C16F20
	0x032C3C00 STR X30, [X31 - 0x20]!
	0x032C3C04 STP X20, X19, [X31 + 0x10]
	0x032C3C08 ADRP X20, 0x1119000
	0x032C3C0C LDRB W8, [X20 + 0x898]
	0x032C3C10 MOV X19, X0
	0x032C3C14 TBNZ X8, 0x0, 0x32C3C38
	0x032C3C18 ADRP X0, 0xE5A000
	0x032C3C1C LDR X0, [X0 + 0xAA0]
	0x032C3C20 BL 0x1C16CF4
	0x032C3C24 ADRP X0, 0xE5A000
	0x032C3C28 LDR X0, [X0 + 0xAA8]
	0x032C3C2C BL 0x1C16CF4
	0x032C3C30 MOVZ W8, 0x1
	0x032C3C34 STRB W8, [X20 + 0x898]
	0x032C3C38 CBZ X19, 0x32C3C74
	0x032C3C3C MOV X0, X19
	0x032C3C40 MOV X1, X31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x111A000
	009 Move W8, [X20+2185]
	010 Move X19, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0xE60000
	017 Move X0, [X0+3752]
	018 Call 0x1C17CF4
	019 Move X0, 0xE32000
	020 Move X0, [X0+1976]
	021 Call 0x1C17CF4
	022 Move X0, 0xE59000
	023 Move X0, [X0+1656]
	024 Call 0x1C17CF4
	025 Move X0, 0xE5B000
	026 Move X0, [X0+3648]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+2185], W8
	030 Move X20, [X21]
	031 Compare X20, 0
	032 JumpIfEqual {73}
	033 Move X9, 0xE32000
	034 Move X9, [X9+1976]
	035 Move X8, [X20]
	036 Move X9, [X9]
	037 Move W11, [X8+304]
	038 Move W10, [X9+304]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X11, [X8+200]
	041 Add X10, X11, X10
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X22, 0xE59000
	045 Move X22, [X22+1656]
	046 Move X24, 0xE60000
	047 Move X0, [X22]
	048 Move W9, [X0+224]
	049 Move X24, [X24+3752]
	050 Compare W9, 0
	051 JumpIfNotEqual {55}
	052 Call 0x1C17DFC
	053 Move X0, [X22]
	054 Move X8, [X20]
	055 Move X10, [X0+184]
	056 Move W11, [X21+10]
	057 NotImplemented "Instruction LDRH not yet implemented."
	058 NotImplemented "Instruction LDRH not yet implemented."
	059 Move X23, [X10]
	060 Move X1, [X24]
	061 Or W21, W11, 2
	062 Compare X9, 0
	063 JumpIfEqual {70}
	064 Move X10, [X8+176]
	065 Add X10, X10, 8
	066 NotImplemented "Instruction LDUR not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Subtract X9, X9, 1
	069 Add X10, X10, 16
	070 Move W2, 1
	071 Move X0, X20
	072 Call 0x1C5D788
	073 Move X8, 0xE5B000
	074 Move X8, [X8+3648]
	075 Move X0, [X8]
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 Move X0, X31
	081 Call ValueTask.get_CompletedTask
	082 Compare X0, 0
	083 JumpIfEqual {121}
	084 Move W1, [X21+10]
	085 Move W9, [X10]
	086 Add W9, W9, 1
	087 Add X8, X8, W9
	088 Add X0, X8, 312
	089 Move X6, [X0]
	090 Move X5, [X0+8]
	091 Move X0, X20
	092 Move X1, X23
	093 Move X2, X19
	094 Move W3, W22
	095 Move W4, W21
	096 Move X20, [X31+48]
	097 Move X19, [X31+56]
	098 Move X22, [X31+32]
	099 Move X21, [X31+40]
	100 Move X24, [X31+16]
	101 Move X23, [X31+24]
	102 Move X30, [X31+64]
	103 CallNoReturn X6
	104 Move W1, [X21+10]
	105 Move X0, X20
	106 Move X2, X31
	107 Call Task.ConfigureAwait, X0, X1
	108 And W31, W1, 255
	109 Move X1, X19
	110 Move X20, [X31+48]
	111 Move X19, [X31+56]
	112 Move X22, [X31+32]
	113 Move X21, [X31+40]
	114 Move X24, [X31+16]
	115 Move X23, [X31+24]
	116 NotImplemented "Instruction CSET not yet implemented."
	117 Move W3, 1
	118 Move X30, [X31+64]
	119 Call TaskAwaiter.OnCompletedInternal, X0, X1, X2, X3
	120 Return 
	121 Call 0x1C17F20

Method: System.Void UnsafeOnCompleted(System.Action continuation)

Disassembly:
	0x032C3C58 LDP X20, X19, [X31 + 0x10]
	0x032C3C5C LDR X30, [X31], #0x20
	0x032C3C60 RET
	0x032C3C64 MOV X0, X19
	0x032C3C68 MOV X1, X31
	0x032C3C6C BL 0x33F10E8
	0x032C3C70 CBNZ X0, 0x32C3CC0
	0x032C3C74 BL 0x1C16F20
	0x032C3C78 MOV X0, X19
	0x032C3C7C MOV X1, X31
	0x032C3C80 BL 0x33F128C
	0x032C3C84 CBNZ X0, 0x32C3D0C
	0x032C3C88 ADRP X0, 0xE31000
	0x032C3C8C LDR X0, [X0 + 0x8A0]
	0x032C3C90 BL 0x1C16D08
	0x032C3C94 BL 0x1C16F10
	0x032C3C98 MOV X1, X19
	0x032C3C9C MOV X2, X31
	0x032C3CA0 MOV X20, X0
	0x032C3CA4 BL 0x33ECE0C
	0x032C3CA8 ADRP X0, 0xE62000
	0x032C3CAC LDR X0, [X0 + 0x880]
	0x032C3CB0 BL 0x1C16D08
	0x032C3CB4 MOV X1, X0
	0x032C3CB8 MOV X0, X20
	0x032C3CBC BL 0x1C16DEC
	0x032C3CC0 ADRP X8, 0xE5A000
	0x032C3CC4 LDR X8, [X8 + 0xAA0]
	0x032C3CC8 MOV X20, X0
	0x032C3CCC LDR X1, [X8]
	0x032C3CD0 BL 0x25518BC
	0x032C3CD4 CMP W0, 0x1
	0x032C3CD8 B.GE 0x32C3D1C
	0x032C3CDC MOV X0, X19
	0x032C3CE0 BL 0x19903C0
	0x032C3CE4 MOV X0, X19
	0x032C3CE8 MOV X1, X31
	0x032C3CEC BL 0x33F04D8
	0x032C3CF0 MOV X19, X0
	0x032C3CF4 ADRP X0, 0xE62000
	0x032C3CF8 LDR X0, [X0 + 0x880]
	0x032C3CFC BL 0x1C16D08
	0x032C3D00 MOV X1, X0
	0x032C3D04 MOV X0, X19
	0x032C3D08 BL 0x1C16DEC
	0x032C3D0C MOV X20, X0
	0x032C3D10 BL 0x19903C0
	0x032C3D14 MOV X0, X20
	0x032C3D18 BL 0x32C2440
	0x032C3D1C MOV X0, X20
	0x032C3D20 BL 0x19903C0
	0x032C3D24 ADRP X8, 0xE5A000
	0x032C3D28 LDR X8, [X8 + 0xAA8]
	0x032C3D2C MOV X0, X20
	0x032C3D30 MOV W1, W31
	0x032C3D34 LDR X2, [X8]
	0x032C3D38 BL 0x1BB5F68
	0x032C3D3C MOV X19, X0
	0x032C3D40 BL 0x19903C0
	0x032C3D44 MOV X0, X19
	0x032C3D48 BL 0x32C2440
	0x032C3D4C STP X30, X23, [X31 - 0x30]!
	0x032C3D50 STP X22, X21, [X31 + 0x10]
	0x032C3D54 STP X20, X19, [X31 + 0x20]
	0x032C3D58 ADRP X19, 0x1119000
	0x032C3D5C ADRP X22, 0xE62000
	0x032C3D60 LDRB W8, [X19 + 0x899]
	0x032C3D64 LDR X22, [X22 + 0x888]
	0x032C3D68 MOV X20, X1
	0x032C3D6C MOV X21, X0
	0x032C3D70 TBNZ X8, 0x0, 0x32C3DB8
	0x032C3D74 ADRP X0, 0xE31000
	0x032C3D78 LDR X0, [X0 + 0xE70]
	0x032C3D7C BL 0x1C16CF4
	0x032C3D80 ADRP X0, 0xE38000
	0x032C3D84 LDR X0, [X0 + 0x7E8]
	0x032C3D88 BL 0x1C16CF4
	0x032C3D8C ADRP X0, 0xE31000
	0x032C3D90 LDR X0, [X0 + 0x7B8]
	0x032C3D94 BL 0x1C16CF4
	0x032C3D98 ADRP X0, 0xE62000
	0x032C3D9C LDR X0, [X0 + 0x890]
	0x032C3DA0 BL 0x1C16CF4
	0x032C3DA4 ADRP X0, 0xE62000
	0x032C3DA8 LDR X0, [X0 + 0x888]
	0x032C3DAC BL 0x1C16CF4
	0x032C3DB0 MOVZ W8, 0x1
	0x032C3DB4 STRB W8, [X19 + 0x899]
	0x032C3DB8 LDR X0, [X22]
	0x032C3DBC BL 0x1C16F10
	0x032C3DC0 MOV X1, X31
	0x032C3DC4 MOV X19, X0
	0x032C3DC8 BL 0x33BDD8C
	0x032C3DCC CBZ X19, 0x32C3F20
	0x032C3DD0 ADRP X22, 0xE31000
	0x032C3DD4 LDR X22, [X22 + 0x7B8]
	0x032C3DD8 STP X21, X20, [X19 + 0x10]
	0x032C3DDC LDR X0, [X22]
	0x032C3DE0 LDR W8, [X0 + 0xE0]
	0x032C3DE4 CBNZ W8, 0x32C3DEC
	0x032C3DE8 BL 0x1C16DFC
	0x032C3DEC ADRP X20, 0x1116000
	0x032C3DF0 LDRB W8, [X20 + 0x88E]
	0x032C3DF4 CBNZ W8, 0x32C3E0C
	0x032C3DF8 ADRP X0, 0xE31000
	0x032C3DFC LDR X0, [X0 + 0x7B8]
	0x032C3E00 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x111A000
	009 Move W8, [X20+2186]
	010 Move X19, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0xE60000
	017 Move X0, [X0+3752]
	018 Call 0x1C17CF4
	019 Move X0, 0xE32000
	020 Move X0, [X0+1976]
	021 Call 0x1C17CF4
	022 Move X0, 0xE59000
	023 Move X0, [X0+1656]
	024 Call 0x1C17CF4
	025 Move X0, 0xE5B000
	026 Move X0, [X0+3648]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+2186], W8
	030 Move X20, [X21]
	031 Compare X20, 0
	032 JumpIfEqual {72}
	033 Move X9, 0xE32000
	034 Move X9, [X9+1976]
	035 Move X8, [X20]
	036 Move X9, [X9]
	037 Move W11, [X8+304]
	038 Move W10, [X9+304]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X11, [X8+200]
	041 Add X10, X11, X10
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X22, 0xE59000
	045 Move X22, [X22+1656]
	046 Move X24, 0xE60000
	047 Move X0, [X22]
	048 Move W9, [X0+224]
	049 Move X24, [X24+3752]
	050 Compare W9, 0
	051 JumpIfNotEqual {55}
	052 Call 0x1C17DFC
	053 Move X0, [X22]
	054 Move X8, [X20]
	055 Move X10, [X0+184]
	056 NotImplemented "Instruction LDRH not yet implemented."
	057 Move W21, [X21+10]
	058 NotImplemented "Instruction LDRH not yet implemented."
	059 Move X23, [X10]
	060 Move X1, [X24]
	061 Compare X9, 0
	062 JumpIfEqual {69}
	063 Move X10, [X8+176]
	064 Add X10, X10, 8
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Subtract X9, X9, 1
	068 Add X10, X10, 16
	069 Move W2, 1
	070 Move X0, X20
	071 Call 0x1C5D788
	072 Move X8, 0xE5B000
	073 Move X8, [X8+3648]
	074 Move X0, [X8]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Move X0, X31
	080 Call ValueTask.get_CompletedTask
	081 Compare X0, 0
	082 JumpIfEqual {120}
	083 Move W1, [X21+10]
	084 Move W9, [X10]
	085 Add W9, W9, 1
	086 Add X8, X8, W9
	087 Add X0, X8, 312
	088 Move X6, [X0]
	089 Move X5, [X0+8]
	090 Move X0, X20
	091 Move X1, X23
	092 Move X2, X19
	093 Move W3, W22
	094 Move W4, W21
	095 Move X20, [X31+48]
	096 Move X19, [X31+56]
	097 Move X22, [X31+32]
	098 Move X21, [X31+40]
	099 Move X24, [X31+16]
	100 Move X23, [X31+24]
	101 Move X30, [X31+64]
	102 CallNoReturn X6
	103 Move W1, [X21+10]
	104 Move X0, X20
	105 Move X2, X31
	106 Call Task.ConfigureAwait, X0, X1
	107 And W31, W1, 255
	108 Move X1, X19
	109 Move X20, [X31+48]
	110 Move X19, [X31+56]
	111 Move X22, [X31+32]
	112 Move X21, [X31+40]
	113 Move X24, [X31+16]
	114 Move X23, [X31+24]
	115 NotImplemented "Instruction CSET not yet implemented."
	116 Move W3, W31
	117 Move X30, [X31+64]
	118 Call TaskAwaiter.OnCompletedInternal, X0, X1, X2, X3
	119 Return 
	120 Call 0x1C17F20

