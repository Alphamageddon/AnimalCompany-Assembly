Type: System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1

Method: System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1<TResult> Create()

Disassembly:
	0x0263DFC4 SUB W11, W11, W10
	0x0263DFC8 MUL W10, W10, W21
	0x0263DFCC SMADDL X8, X21, X8, X31

ISIL:
	001 NotImplemented "Instruction MOVI not yet implemented."
	002 Move [X8], V0
	003 Move [X8+8], V0
	004 Return X0

Method: System.Void Start(ref TStateMachine stateMachine)

Disassembly:
	0x0212EA1C LDR X8, [X2 + 0x20]
	0x0212EA20 LDR W10, [X0 + 0x1C]
	0x0212EA24 MOV X20, X2
	0x0212EA28 LDR X9, [X8 + 0xC0]
	0x0212EA2C LDR X8, [X0 + 0x10]
	0x0212EA30 ADD W10, W10, 0x1
	0x0212EA34 LDR X9, [X9 + 0x18]
	0x0212EA38 STR W10, [X0 + 0x1C]
	0x0212EA3C CBZ X8, 0x212EABC
	0x0212EA40 LDRSW X10, [X0 + 0x18]
	0x0212EA44 LDR W11, [X8 + 0x18]
	0x0212EA48 MOV X19, X1
	0x0212EA4C CMP W10, W11
	0x0212EA50 B.CS 0x212EA68
	0x0212EA54 ADD W9, W10, 0x1
	0x0212EA58 ADD X8, X8, X10, 0x3, LSL
	0x0212EA5C STR W9, [X0 + 0x18]
	0x0212EA60 STR X19, [X8 + 0x20]
	0x0212EA64 B 0x212EA7C
	0x0212EA68 LDR X8, [X9 + 0x20]
	0x0212EA6C MOV X1, X19
	0x0212EA70 LDR X8, [X8 + 0xC0]
	0x0212EA74 LDR X2, [X8 + 0x70]
	0x0212EA78 BL 0x301BF90
	0x0212EA7C CBZ X19, 0x212EABC
	0x0212EA80 LDR X8, [X19]
	0x0212EA84 LDR X21, [X21 + 0x20]
	0x0212EA88 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X20, X2
	007 Move X19, X1
	008 Move X21, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {13}
	011 Move X0, X20
	012 Call 0x1C5D6E0
	013 Move X0, [X20+32]
	014 Move W8, [X0+309]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {20}
	019 Call 0x1C5D684
	020 Move X8, [X0+192]
	021 Move X0, [X8+16]
	022 Move W8, [X0+309]
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {28}
	027 Call 0x1C5D684
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X8, [X20+56]
	033 Move X1, X19
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X0, X21
	037 Move X2, [X8+8]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Call AsyncTaskMethodBuilder`1<Int32>.Start, X0, X1
	041 Return 

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0263DFD0 SMADDL X10, X10, X9, X31
	0x0263DFD4 MUL W11, W11, W21
	0x0263DFD8 MUL W12, W12, W21
	0x0263DFDC UBFM X13, X8, 0x20, 0x3F
	0x0263DFE0 UBFM X8, X8, 0x3F, 0x3F
	0x0263DFE4 SMADDL X11, X11, X9, X31
	0x0263DFE8 SMADDL X9, X12, X9, X31
	0x0263DFEC UBFM X12, X10, 0x20, 0x3F
	0x0263DFF0 UBFM X10, X10, 0x3F, 0x3F
	0x0263DFF4 ADD W8, W8, W13, 0x3, ASR
	0x0263DFF8 ADD W10, W10, W12, 0x6, ASR
	0x0263DFFC UBFM X12, X11, 0x20, 0x3F
	0x0263E000 UBFM X11, X11, 0x3F, 0x3F
	0x0263E004 ADD W11, W11, W12, 0x6, ASR
	0x0263E008 CMP W10, W8
	0x0263E00C CSEL W10, W8, W10, LT
	0x0263E010 CMP W11, W8
	0x0263E014 UBFM X12, X9, 0x20, 0x3F
	0x0263E018 UBFM X9, X9, 0x3F, 0x3F
	0x0263E01C CSEL W8, W8, W11, LT
	0x0263E020 ADD W9, W9, W12, 0x6, ASR
	0x0263E024 ADD W8, W8, W10
	0x0263E028 STP W10, W8, [X19 + 0x4C]
	0x0263E02C ADD W8, W8, W9
	0x0263E030 STR W8, [X19 + 0x54]
	0x0263E034 UBFM W8, W8, 0x1E, 0x1D
	0x0263E038 CMP W8, W22
	0x0263E03C LDR X0, [X19 + 0xA0]
	0x0263E040 CSEL W8, W22, W8, LT

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X21, X2
	007 Move X19, X1
	008 Move X20, X0
	009 Move W9, [X8+309]
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X8
	015 Call 0x1C5D684
	016 Move X8, X0
	017 Move X8, [X8+192]
	018 Move X0, [X8+16]
	019 Move W8, [X0+309]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {25}
	024 Call 0x1C5D684
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, [X21+32]
	030 Move W8, [X0+309]
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {36}
	035 Call 0x1C5D684
	036 Move X0, X20
	037 Move X1, X19
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X2, X31
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Call AsyncMethodBuilderCore.SetStateMachine, X0, X1
	044 Return 

Method: System.Void SetResult(TResult result)

Disassembly:
	0x0263E044 CMP W8, 0x0
	0x0263E048 CINC W9, W8, LT
	0x0263E04C MUL W24, W22, W23
	0x0263E050 SBFM W9, W9, 0x1, 0x1F
	0x0263E054 STR W23, [X19 + 0x44]
	0x0263E058 STP W22, W24, [X19 + 0x14]
	0x0263E05C STP W8, W9, [X19 + 0x1C]
	0x0263E060 STP W21, W10, [X19 + 0x24]
	0x0263E064 CBZ X0, 0x263E48C
	0x0263E068 LDR W8, [X0 + 0x14]
	0x0263E06C CMP W8, W24
	0x0263E070 B.EQ 0x263E08C
	0x0263E074 LDR X8, [X20 + 0x20]
	0x0263E078 MOV W1, W24
	0x0263E07C LDR X8, [X8 + 0xC0]
	0x0263E080 LDR X2, [X8 + 0x58]
	0x0263E084 BL 0x2495990
	0x0263E088 LDR W24, [X19 + 0x18]
	0x0263E08C LDR X8, [X20 + 0x20]
	0x0263E090 LDR X8, [X8 + 0xC0]
	0x0263E094 LDR X0, [X8 + 0x60]
	0x0263E098 LDRB W8, [X0 + 0x135]
	0x0263E09C TBNZ X8, 0x0, 0x263E0A4
	0x0263E0A0 BL 0x1C5C684
	0x0263E0A4 MOV W1, W24
	0x0263E0A8 BL 0x1C16D6C
	0x0263E0AC STR X0, [X19 + 0x78]
	0x0263E0B0 LDR X8, [X20 + 0x20]
	0x0263E0B4 LDR W22, [X19 + 0x18]
	0x0263E0B8 LDR X8, [X8 + 0xC0]
	0x0263E0BC LDR X0, [X8 + 0x60]
	0x0263E0C0 LDRB W8, [X0 + 0x135]
	0x0263E0C4 TBNZ X8, 0x0, 0x263E0CC
	0x0263E0C8 BL 0x1C5C684
	0x0263E0CC ADRP X24, 0x1AB5000
	0x0263E0D0 LDR X24, [X24 + 0x9D0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+29]
	006 Move X19, X0
	007 Move W20, W1
	008 Compare W8, 0
	009 JumpIfEqual {47}
	010 Move X0, [X2+32]
	011 Move X21, X2
	012 Move W8, [X0+309]
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {18}
	017 Call 0x1C5D684
	018 Move X8, [X0+192]
	019 Move X0, [X8+16]
	020 Move W8, [X0+309]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {26}
	025 Call 0x1C5D684
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, [X21+32]
	031 Move W8, [X0+309]
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {37}
	036 Call 0x1C5D684
	037 Move X8, [X0+192]
	038 Move X0, X19
	039 Move W1, W20
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X2, [X8+40]
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Call AsyncTaskMethodBuilder`1<Int32>.SetResult, X0, X1
	046 Return 
	047 Move W8, 1
	048 Move [X19+24], W20
	049 Move [X19+28], W8
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X30, [X31+32]
	053 Move X21, [X31+40]
	054 Return 

Method: System.Void SetException(System.Exception exception)

Disassembly:
	0x0263E0D4 MOV W1, W22
	0x0263E0D8 BL 0x1C16D6C
	0x0263E0DC STR X0, [X19 + 0x80]
	0x0263E0E0 STRB W31, [X19 + 0x90]
	0x0263E0E4 LDR X8, [X20 + 0x20]
	0x0263E0E8 LDR X8, [X8 + 0xC0]
	0x0263E0EC LDR X0, [X8 + 0x68]
	0x0263E0F0 LDRB W8, [X0 + 0x135]
	0x0263E0F4 TBNZ X8, 0x0, 0x263E0FC
	0x0263E0F8 BL 0x1C5C684
	0x0263E0FC BL 0x1C16F10
	0x0263E100 LDR X8, [X20 + 0x20]
	0x0263E104 MOV X20, X0
	0x0263E108 LDR X8, [X8 + 0xC0]
	0x0263E10C LDR X1, [X8 + 0x70]
	0x0263E110 BL 0x26B096C
	0x0263E114 LDR X8, [X19]
	0x0263E118 STR X20, [X19 + 0x88]
	0x0263E11C LDR W3, [X19 + 0x1C]
	0x0263E120 MOV X0, X19
	0x0263E124 LDP X9, X4, [X8 + 0x1F8]
	0x0263E128 MOV W1, W21
	0x0263E12C MOV W2, W23
	0x0263E130 BLR X9
	0x0263E134 LDR X8, [X19]
	0x0263E138 MOV X0, X19
	0x0263E13C LDR X9, [X8 + 0x208]
	0x0263E140 LDR X1, [X8 + 0x210]
	0x0263E144 BLR X9
	0x0263E148 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X21, X2
	007 Move X19, X1
	008 Move X20, X0
	009 Move W9, [X8+309]
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X8
	015 Call 0x1C5D684
	016 Move X8, X0
	017 Move X8, [X8+192]
	018 Move X0, [X8+16]
	019 Move W8, [X0+309]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {25}
	024 Call 0x1C5D684
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, [X21+32]
	030 Move W8, [X0+309]
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {36}
	035 Call 0x1C5D684
	036 Move X8, [X0+192]
	037 Move X0, X20
	038 Move X1, X19
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X2, [X8+48]
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Call AsyncTaskMethodBuilder`1<Int32>.SetException, X0, X1
	045 Return 

Method: System.Threading.Tasks.ValueTask`1<TResult> get_Task()

Disassembly:
	0x0263E14C STRB W8, [X19 + 0x48]
	0x0263E150 LDR X0, [X24]
	0x0263E154 LDR X20, [X19 + 0x60]
	0x0263E158 MOVZ W1, 0xA
	0x0263E15C BL 0x1C16D6C
	0x0263E160 CBZ X0, 0x263E48C
	0x0263E164 LDR X24, [X19 + 0x68]
	0x0263E168 MOV X22, X0
	0x0263E16C CBZ X24, 0x263E184
	0x0263E170 LDR X8, [X22]
	0x0263E174 MOV X0, X24
	0x0263E178 LDR X1, [X8 + 0x40]
	0x0263E17C BL 0x1C16E00
	0x0263E180 CBZ X0, 0x263E480
	0x0263E184 LDR W8, [X22 + 0x18]
	0x0263E188 CBZ W8, 0x263E47C
	0x0263E18C STR X24, [X22 + 0x20]
	0x0263E190 LDR W9, [X19 + 0x10]
	0x0263E194 ADRP X10, 0x1ADF000
	0x0263E198 ADRP X11, 0x1ADF000
	0x0263E19C ADRP X12, 0x1ADF000
	0x0263E1A0 LDR X10, [X10 + 0x480]
	0x0263E1A4 LDR X11, [X11 + 0x478]
	0x0263E1A8 LDR X12, [X12 + 0x490]
	0x0263E1AC CMP W9, 0x2
	0x0263E1B0 LDR X24, [X10]
	0x0263E1B4 CSEL X9, X11, X12, EQ
	0x0263E1B8 LDR X25, [X9]
	0x0263E1BC CBZ X25, 0x263E1D8
	0x0263E1C0 LDR X8, [X22]
	0x0263E1C4 MOV X0, X25
	0x0263E1C8 LDR X1, [X8 + 0x40]
	0x0263E1CC BL 0x1C16E00
	0x0263E1D0 CBZ X0, 0x263E480
	0x0263E1D4 LDR W8, [X22 + 0x18]
	0x0263E1D8 CMP W8, 0x1
	0x0263E1DC B.LS 0x263E47C
	0x0263E1E0 ADRP X26, 0x1AB5000
	0x0263E1E4 LDR X26, [X26 + 0x758]
	0x0263E1E8 STR X25, [X22 + 0x28]
	0x0263E1EC LDR W8, [X19 + 0x1C]
	0x0263E1F0 ADD X1, X31, 0x2C
	0x0263E1F4 LDR X0, [X26]
	0x0263E1F8 STR W8, [X31 + 0x2C]
	0x0263E1FC BL 0x1C16E04
	0x0263E200 MOV X25, X0
	0x0263E204 CBZ X0, 0x263E21C
	0x0263E208 LDR X8, [X22]
	0x0263E20C MOV X0, X25
	0x0263E210 LDR X1, [X8 + 0x40]
	0x0263E214 BL 0x1C16E00

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+28]
	005 Move X20, X0
	006 Move X19, X1
	007 Compare W8, 0
	008 JumpIfEqual {19}
	009 Move X0, [X19+32]
	010 Move W20, [X20+24]
	011 Move W8, [X0+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {17}
	016 Call 0x1C5D684
	017 Move X19, X31
	018 Or X1, X20, 0x1FFFFFFFFFFFF
	019 Move W8, 1
	020 Move [X20+29], W8
	021 Move X0, [X19+32]
	022 Move W8, [X0+309]
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {28}
	027 Call 0x1C5D684
	028 Move X8, [X0+192]
	029 Move X0, [X8+16]
	030 Move W8, [X0+309]
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {36}
	035 Call 0x1C5D684
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, [X19+32]
	041 Move W8, [X0+309]
	042 Move TEMP, X8
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {47}
	046 Call 0x1C5D684
	047 Move X8, [X0+192]
	048 Move X0, X20
	049 Move X1, [X8+72]
	050 Call AsyncTaskMethodBuilder`1<Int32>.get_Task, X0
	051 Move X8, [X19+32]
	052 Move X19, X0
	053 Move W9, [X8+309]
	054 Move TEMP, X9
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {60}
	058 Move X0, X8
	059 Call 0x1C5D684
	060 Compare X19, 0
	061 JumpIfNotEqual {65}
	062 Move W0, 38
	063 Move X1, X31
	064 Call ThrowHelper.ThrowArgumentNullException, X0
	065 Move X1, 0x10000
	066 Move X0, X19
	067 Move X20, [X31+16]
	068 Move X19, [X31+24]
	069 Move X30, [X31+32]
	070 Return X0

Method: System.Void AwaitUnsafeOnCompleted(ref TAwaiter awaiter, ref TStateMachine stateMachine)

Disassembly:
	0x0212E994 CMP W10, W11
	0x0212E998 B.CS 0x212E9B0
	0x0212E99C ADD W9, W10, 0x1
	0x0212E9A0 ADD X8, X8, X10, 0x3, LSL
	0x0212E9A4 STR W9, [X0 + 0x18]
	0x0212E9A8 STR X19, [X8 + 0x20]
	0x0212E9AC B 0x212E9C4
	0x0212E9B0 LDR X8, [X9 + 0x20]
	0x0212E9B4 MOV X1, X19
	0x0212E9B8 LDR X8, [X8 + 0xC0]
	0x0212E9BC LDR X2, [X8 + 0x70]
	0x0212E9C0 BL 0x301BF90
	0x0212E9C4 CBZ X19, 0x212EA04
	0x0212E9C8 LDR X8, [X19]
	0x0212E9CC LDR X21, [X21 + 0x20]
	0x0212E9D0 MOV X0, X19
	0x0212E9D4 LDP X9, X1, [X8 + 0x1A8]
	0x0212E9D8 BLR X9
	0x0212E9DC CBZ X21, 0x212EA04
	0x0212E9E0 LDR X8, [X20 + 0x20]
	0x0212E9E4 MOV X2, X19
	0x0212E9E8 LDP X20, X19, [X31 + 0x10]
	0x0212E9EC MOV X1, X0
	0x0212E9F0 LDR X8, [X8 + 0xC0]
	0x0212E9F4 MOV X0, X21
	0x0212E9F8 LDR X3, [X8 + 0x30]
	0x0212E9FC LDP X30, X21, [X31], #0x20
	0x0212EA00 B 0x2AA5098
	0x0212EA04 BL 0x1C16F20
	0x0212EA08 STP X30, X21, [X31 - 0x20]!
	0x0212EA0C STP X20, X19, [X31 + 0x10]
	0x0212EA10 MOV X21, X0
	0x0212EA14 LDR X0, [X0 + 0x18]
	0x0212EA18 CBZ X0, 0x212EABC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X3+56]
	007 Move X21, X3
	008 Move X19, X2
	009 Move X20, X1
	010 Move X22, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {15}
	013 Move X0, X21
	014 Call 0x1C5D6E0
	015 Move W8, 1
	016 Move [X22+29], W8
	017 Move X0, [X21+32]
	018 Move W8, [X0+309]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {24}
	023 Call 0x1C5D684
	024 Move X8, [X0+192]
	025 Move X0, [X8+16]
	026 Move W8, [X0+309]
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {32}
	031 Call 0x1C5D684
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X8, [X21+56]
	037 Move X0, X22
	038 Move X1, X20
	039 Move X2, X19
	040 Move X3, [X8+16]
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Move X30, [X31+48]
	046 Call AsyncTaskMethodBuilder`1<Int32>.AwaitUnsafeOnCompleted, X0, X1, X2
	047 Return 

