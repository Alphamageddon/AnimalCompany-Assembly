Type: System.Runtime.CompilerServices.ValueTaskAwaiter`1

Method: System.Void .ctor(System.Threading.Tasks.ValueTask`1<TResult> value)

Disassembly:
	0x0278FB04 CMP X8, X0
	0x0278FB08 B.EQ 0x278FC84

ISIL:
	001 Move [X0], X1
	002 Move [X0+8], X2
	003 Return 

Method: System.Boolean get_IsCompleted()

Disassembly:
	0x0278FB0C ADRP X23, 0x198C000
	0x0278FB10 LDR X23, [X23 + 0x678]
	0x0278FB14 LDR X0, [X23]
	0x0278FB18 LDR W8, [X0 + 0xE0]
	0x0278FB1C CBNZ W8, 0x278FB28
	0x0278FB20 BL 0x1C16DFC
	0x0278FB24 LDR X0, [X23]
	0x0278FB28 LDR X8, [X20 + 0x20]
	0x0278FB2C LDR X9, [X0 + 0xB8]
	0x0278FB30 LDRB W10, [X8 + 0x135]
	0x0278FB34 LDR X23, [X9]
	0x0278FB38 TBNZ X10, 0x0, 0x278FB48
	0x0278FB3C MOV X0, X8

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X1+32]
	004 Move X19, X0
	005 Move W9, [X8+309]
	006 Move TEMP, X9
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfEqual {13}
	010 Move X0, X8
	011 Call 0x1C5D684
	012 Move X8, X0
	013 Move X8, [X8+192]
	014 Move X0, X19
	015 Move X1, [X8+16]
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]
	018 Call 0x27A3398
	019 Return X0

Method: TResult GetResult()

Disassembly:
	0x0278FB40 BL 0x1C5C684
	0x0278FB44 MOV X8, X0
	0x0278FB48 LDR X8, [X8 + 0xC0]
	0x0278FB4C MOV X0, X22
	0x0278FB50 LDR X8, [X8 + 0x8]
	0x0278FB54 LDR X1, [X8 + 0x80]
	0x0278FB58 BL 0x1C16D18
	0x0278FB5C LDR X8, [X20 + 0x20]
	0x0278FB60 MOV X22, X0
	0x0278FB64 LDRB W9, [X8 + 0x135]
	0x0278FB68 TBNZ X9, 0x0, 0x278FB78
	0x0278FB6C MOV X0, X8
	0x0278FB70 BL 0x1C5C684

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X1+32]
	004 Move X19, X0
	005 Move W9, [X8+309]
	006 Move TEMP, X9
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfEqual {13}
	010 Move X0, X8
	011 Call 0x1C5D684
	012 Move X8, X0
	013 Move X8, [X8+192]
	014 Move X0, X19
	015 Move X1, [X8+32]
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]
	018 Call 0x27A34B4
	019 Return X0

Method: System.Void OnCompleted(System.Action continuation)

Disassembly:
	0x0278FB74 MOV X8, X0
	0x0278FB78 LDR X8, [X8 + 0xC0]
	0x0278FB7C MOV X0, X22
	0x0278FB80 LDR X8, [X8]
	0x0278FB84 LDR X8, [X8 + 0x80]
	0x0278FB88 ADD X1, X8, 0x60
	0x0278FB8C BL 0x1C16D18
	0x0278FB90 MOV X8, X0
	0x0278FB94 LDR X0, [X20 + 0x20]
	0x0278FB98 LDRH W20, [X8]
	0x0278FB9C LDRB W9, [X0 + 0x135]
	0x0278FBA0 TBNZ X9, 0x0, 0x278FBA8
	0x0278FBA4 BL 0x1C5C684
	0x0278FBA8 LDR X8, [X0 + 0xC0]
	0x0278FBAC LDR X1, [X8 + 0x58]
	0x0278FBB0 LDRB W8, [X1 + 0x135]
	0x0278FBB4 TBNZ X8, 0x0, 0x278FBC4
	0x0278FBB8 MOV X0, X1
	0x0278FBBC BL 0x1C5C684
	0x0278FBC0 MOV X1, X0
	0x0278FBC4 LDR X8, [X21]
	0x0278FBC8 LDRH W9, [X8 + 0x12E]
	0x0278FBCC CBZ X9, 0x278FBF0
	0x0278FBD0 LDR X10, [X8 + 0xB0]
	0x0278FBD4 ADD X10, X10, 0x8
	0x0278FBD8 LDUR X11, [X10 - 0x8]
	0x0278FBDC CMP X11, X1
	0x0278FBE0 B.EQ 0x278FC44
	0x0278FBE4 SUBS X9, X9, 0x1
	0x0278FBE8 ADD X10, X10, 0x10
	0x0278FBEC B.NE 0x278FBD8
	0x0278FBF0 MOVZ W2, 0x1
	0x0278FBF4 MOV X0, X21
	0x0278FBF8 BL 0x1C5C788
	0x0278FBFC B 0x278FC54
	0x0278FC00 ADRP X8, 0x198E000
	0x0278FC04 LDR X8, [X8 + 0xE40]
	0x0278FC08 LDR X0, [X8]
	0x0278FC0C LDR W8, [X0 + 0xE0]
	0x0278FC10 CBNZ W8, 0x278FC18
	0x0278FC14 BL 0x1C16DFC
	0x0278FC18 MOV X0, X31
	0x0278FC1C BL 0x33ED4C8
	0x0278FC20 CBZ X0, 0x278FD40
	0x0278FC24 MOV X1, X31
	0x0278FC28 BL 0x33ED394
	0x0278FC2C STR X0, [X31]
	0x0278FC30 ADD X0, X31, 0x0
	0x0278FC34 MOV X1, X19
	0x0278FC38 MOV X2, X31
	0x0278FC3C BL 0x32C38CC
	0x0278FC40 B 0x278FC70
	0x0278FC44 LDR W9, [X10]
	0x0278FC48 ADD W9, W9, 0x1
	0x0278FC4C ADD X8, X8, W9, 0x4, SXTW
	0x0278FC50 ADD X0, X8, 0x138
	0x0278FC54 LDP X8, X5, [X0]
	0x0278FC58 MOVZ W4, 0x1
	0x0278FC5C MOV X0, X21
	0x0278FC60 MOV X1, X23
	0x0278FC64 MOV X2, X19
	0x0278FC68 MOV W3, W20
	0x0278FC6C BLR X8
	0x0278FC70 LDP X20, X19, [X31 + 0x30]
	0x0278FC74 LDP X22, X21, [X31 + 0x20]
	0x0278FC78 LDP X30, X23, [X31 + 0x10]
	0x0278FC7C ADD X31, X31, 0x40
	0x0278FC80 RET
	0x0278FC84 LDR X8, [X20 + 0x20]
	0x0278FC88 ADD X9, X8, 0x135
	0x0278FC8C LDRH W9, [X9]
	0x0278FC90 TBNZ X9, 0x0, 0x278FCAC
	0x0278FC94 MOV X0, X8
	0x0278FC98 BL 0x1C5C684
	0x0278FC9C LDR X8, [X20 + 0x20]
	0x0278FCA0 ADD X9, X8, 0x135
	0x0278FCA4 LDRH W9, [X9]
	0x0278FCA8 B 0x278FCB0
	0x0278FCAC MOV X0, X8
	0x0278FCB0 LDR X10, [X0 + 0xC0]
	0x0278FCB4 LDR X10, [X10 + 0x38]
	0x0278FCB8 LDR X22, [X10]
	0x0278FCBC TBNZ X9, 0x0, 0x278FCCC
	0x0278FCC0 MOV X0, X8
	0x0278FCC4 BL 0x1C5C684
	0x0278FCC8 MOV X8, X0
	0x0278FCCC LDR X8, [X8 + 0xC0]
	0x0278FCD0 MOV X0, X21
	0x0278FCD4 LDR X1, [X8 + 0x38]
	0x0278FCD8 BLR X22
	0x0278FCDC STR X0, [X31 + 0x8]
	0x0278FCE0 LDR X8, [X20 + 0x20]
	0x0278FCE4 ADD X9, X8, 0x135
	0x0278FCE8 LDRH W9, [X9]
	0x0278FCEC TBNZ X9, 0x0, 0x278FD08
	0x0278FCF0 MOV X0, X8
	0x0278FCF4 BL 0x1C5C684
	0x0278FCF8 LDR X8, [X20 + 0x20]
	0x0278FCFC ADD X9, X8, 0x135
	0x0278FD00 LDRH W9, [X9]
	0x0278FD04 B 0x278FD0C
	0x0278FD08 MOV X0, X8
	0x0278FD0C LDR X10, [X0 + 0xC0]
	0x0278FD10 LDR X10, [X10 + 0x68]
	0x0278FD14 LDR X20, [X10]
	0x0278FD18 TBNZ X9, 0x0, 0x278FD28
	0x0278FD1C MOV X0, X8
	0x0278FD20 BL 0x1C5C684
	0x0278FD24 MOV X8, X0
	0x0278FD28 LDR X8, [X8 + 0xC0]
	0x0278FD2C ADD X0, X31, 0x8
	0x0278FD30 MOV X1, X19
	0x0278FD34 LDR X2, [X8 + 0x68]
	0x0278FD38 BLR X20
	0x0278FD3C B 0x278FC70
	0x0278FD40 BL 0x1C16F20
	0x0278FD44 STR X30, [X31 - 0x30]!
	0x0278FD48 STP X22, X21, [X31 + 0x10]
	0x0278FD4C STP X20, X19, [X31 + 0x20]
	0x0278FD50 LDR X8, [X3 + 0x20]
	0x0278FD54 MOV X20, X1
	0x0278FD58 MOV X22, X3
	0x0278FD5C MOV W19, W2
	0x0278FD60 LDR X8, [X8 + 0xC0]
	0x0278FD64 MOV X21, X0
	0x0278FD68 LDR X1, [X8]
	0x0278FD6C BL 0x269CA00
	0x0278FD70 STR X20, [X21 + 0x58]
	0x0278FD74 STRH W19, [X21 + 0x60]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x1C4C000
	009 Move W8, [X20+2133]
	010 Move X21, X2
	011 Move X19, X1
	012 Move X22, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x198D000
	018 Move X0, [X0+1656]
	019 Call 0x1C17CF4
	020 Move X0, 0x198F000
	021 Move X0, [X0+3648]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+2133], W8
	025 Move [X31], X31
	026 Move [X31+8], X31
	027 Move X0, [X21+32]
	028 Move X20, [X22]
	029 Move W8, [X0+309]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {35}
	034 Call 0x1C5D684
	035 Move X8, [X0+192]
	036 Move X0, [X8+48]
	037 Move W8, [X0+309]
	038 Move TEMP, X8
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {43}
	042 Call 0x1C5D684
	043 Compare X20, 0
	044 JumpIfEqual {94}
	045 Move X8, [X20]
	046 Move W9, [X0+304]
	047 Move W10, [X8+304]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X8, [X8+200]
	050 Add X8, X8, X9
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X23, 0x198D000
	054 Move X23, [X23+1656]
	055 Move X0, [X23]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {61}
	059 Call 0x1C17DFC
	060 Move X0, [X23]
	061 Move X8, [X0+184]
	062 Move X0, [X21+32]
	063 NotImplemented "Instruction LDRH not yet implemented."
	064 Move X21, [X8]
	065 Move W8, [X0+309]
	066 Move TEMP, X8
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfEqual {71}
	070 Call 0x1C5D684
	071 Move X8, [X0+192]
	072 Move X1, [X8+88]
	073 Move W8, [X1+309]
	074 Move TEMP, X8
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfEqual {81}
	078 Move X0, X1
	079 Call 0x1C5D684
	080 Move X1, X0
	081 Move X8, [X20]
	082 NotImplemented "Instruction LDRH not yet implemented."
	083 Compare X9, 0
	084 JumpIfEqual {91}
	085 Move X10, [X8+176]
	086 Add X10, X10, 8
	087 NotImplemented "Instruction LDUR not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Subtract X9, X9, 1
	090 Add X10, X10, 16
	091 Move W2, 1
	092 Move X0, X20
	093 Call 0x1C5D788
	094 Move X8, 0x198F000
	095 Move X8, [X8+3648]
	096 Move X0, [X8]
	097 Move W8, [X0+224]
	098 Compare W8, 0
	099 JumpIfNotEqual {101}
	100 Call 0x1C17DFC
	101 Move X0, X31
	102 Call ValueTask.get_CompletedTask
	103 Compare X0, 0
	104 JumpIfEqual {156}
	105 Move X1, X31
	106 Call Task.GetAwaiter, X0
	107 Move [X31], X0
	108 Add X0, X31, 0
	109 Move X1, X19
	110 Move X2, X31
	111 Call TaskAwaiter.OnCompleted, X0, X1
	112 Move W9, [X10]
	113 Add W9, W9, 1
	114 Add X8, X8, W9
	115 Add X0, X8, 312
	116 Move X8, [X0]
	117 Move X5, [X0+8]
	118 Move W4, 3
	119 Move X0, X20
	120 Move X1, X21
	121 Move X2, X19
	122 Move W3, W22
	123 NotImplemented "Instruction BLR not yet implemented."
	124 Move X20, [X31+48]
	125 Move X19, [X31+56]
	126 Move X22, [X31+32]
	127 Move X21, [X31+40]
	128 Move X30, [X31+16]
	129 Move X23, [X31+24]
	130 Add X31, X31, 64
	131 Return 
	132 Move X0, [X21+32]
	133 Move W8, [X0+309]
	134 Move TEMP, X8
	135 And TEMP, TEMP, 1
	136 Compare TEMP, 1
	137 JumpIfEqual {139}
	138 Call 0x1C5D684
	139 Move X8, [X0+192]
	140 Move X0, X20
	141 Move X1, [X8+56]
	142 Call Task`1<Int32>.GetAwaiter, X0
	143 Move [X31+8], X0
	144 Move X0, [X21+32]
	145 Move W8, [X0+309]
	146 Move TEMP, X8
	147 And TEMP, TEMP, 1
	148 Compare TEMP, 1
	149 JumpIfEqual {151}
	150 Call 0x1C5D684
	151 Move X8, [X0+192]
	152 Add X0, X31, 8
	153 Move X1, X19
	154 Move X2, [X8+72]
	155 Call TaskAwaiter`1<Int32>.OnCompleted, X0, X1
	156 Call 0x1C17F20

Method: System.Void UnsafeOnCompleted(System.Action continuation)

Disassembly:
	0x0278FD78 LDR X8, [X22 + 0x20]
	0x0278FD7C LDR X8, [X8 + 0xC0]
	0x0278FD80 LDR X0, [X8 + 0x20]
	0x0278FD84 LDRB W8, [X0 + 0x135]
	0x0278FD88 TBNZ X8, 0x0, 0x278FD90
	0x0278FD8C BL 0x1C5C684
	0x0278FD90 LDR W8, [X0 + 0xE0]
	0x0278FD94 CBNZ W8, 0x278FD9C
	0x0278FD98 BL 0x1C16DFC
	0x0278FD9C LDR X8, [X22 + 0x20]
	0x0278FDA0 LDR X8, [X8 + 0xC0]
	0x0278FDA4 LDR X0, [X8 + 0x20]
	0x0278FDA8 LDRB W8, [X0 + 0x135]
	0x0278FDAC TBNZ X8, 0x0, 0x278FDB4
	0x0278FDB0 BL 0x1C5C684
	0x0278FDB4 CBZ X20, 0x278FE54
	0x0278FDB8 LDR X8, [X22 + 0x20]
	0x0278FDBC LDR X8, [X8 + 0xC0]
	0x0278FDC0 LDR X1, [X8 + 0x10]
	0x0278FDC4 LDR X8, [X0 + 0xB8]
	0x0278FDC8 LDRB W9, [X1 + 0x135]
	0x0278FDCC LDR X22, [X8]
	0x0278FDD0 TBNZ X9, 0x0, 0x278FDE0
	0x0278FDD4 MOV X0, X1
	0x0278FDD8 BL 0x1C5C684
	0x0278FDDC MOV X1, X0
	0x0278FDE0 LDR X8, [X20]
	0x0278FDE4 LDRH W9, [X8 + 0x12E]
	0x0278FDE8 CBZ X9, 0x278FE0C
	0x0278FDEC LDR X10, [X8 + 0xB0]
	0x0278FDF0 ADD X10, X10, 0x8
	0x0278FDF4 LDUR X11, [X10 - 0x8]
	0x0278FDF8 CMP X11, X1
	0x0278FDFC B.EQ 0x278FE1C
	0x0278FE00 SUBS X9, X9, 0x1
	0x0278FE04 ADD X10, X10, 0x10
	0x0278FE08 B.NE 0x278FDF4
	0x0278FE0C MOVZ W2, 0x1
	0x0278FE10 MOV X0, X20
	0x0278FE14 BL 0x1C5C788
	0x0278FE18 B 0x278FE2C
	0x0278FE1C LDR W9, [X10]
	0x0278FE20 ADD W9, W9, 0x1
	0x0278FE24 ADD X8, X8, W9, 0x4, SXTW
	0x0278FE28 ADD X0, X8, 0x138
	0x0278FE2C LDP X6, X5, [X0]
	0x0278FE30 MOV X0, X20
	0x0278FE34 MOV X1, X22
	0x0278FE38 MOV X2, X21
	0x0278FE3C MOV W3, W19
	0x0278FE40 LDP X20, X19, [X31 + 0x20]
	0x0278FE44 LDP X22, X21, [X31 + 0x10]
	0x0278FE48 MOV W4, W31
	0x0278FE4C LDR X30, [X31], #0x30
	0x0278FE50 BR X6
	0x0278FE54 BL 0x1C16F20
	0x0278FE58 STP X30, X21, [X31 - 0x20]!
	0x0278FE5C STP X20, X19, [X31 + 0x10]
	0x0278FE60 ADRP X20, 0x1C4B000
	0x0278FE64 LDRB W8, [X20 + 0x85B]
	0x0278FE68 MOV X19, X0
	0x0278FE6C TBNZ X8, 0x0, 0x278FE84
	0x0278FE70 ADRP X0, 0x198E000
	0x0278FE74 LDR X0, [X0 + 0xE48]
	0x0278FE78 BL 0x1C16CF4
	0x0278FE7C MOVZ W8, 0x1
	0x0278FE80 STRB W8, [X20 + 0x85B]
	0x0278FE84 LDR X0, [X19 + 0x20]
	0x0278FE88 LDRB W8, [X0 + 0x135]
	0x0278FE8C TBNZ X8, 0x0, 0x278FE94
	0x0278FE90 BL 0x1C5C684
	0x0278FE94 LDR X8, [X0 + 0xC0]
	0x0278FE98 LDR X0, [X8 + 0x38]
	0x0278FE9C LDRB W8, [X0 + 0x135]
	0x0278FEA0 TBNZ X8, 0x0, 0x278FEA8
	0x0278FEA4 BL 0x1C5C684
	0x0278FEA8 LDR W8, [X0 + 0xE0]
	0x0278FEAC CBNZ W8, 0x278FEB4
	0x0278FEB0 BL 0x1C16DFC
	0x0278FEB4 LDR X0, [X19 + 0x20]
	0x0278FEB8 LDRB W8, [X0 + 0x135]
	0x0278FEBC TBNZ X8, 0x0, 0x278FEC4
	0x0278FEC0 BL 0x1C5C684
	0x0278FEC4 LDR X8, [X0 + 0xC0]
	0x0278FEC8 ADRP X20, 0x198E000
	0x0278FECC LDR X0, [X8 + 0x38]
	0x0278FED0 LDRB W8, [X0 + 0x135]
	0x0278FED4 LDR X20, [X20 + 0xE48]
	0x0278FED8 TBNZ X8, 0x0, 0x278FEE0
	0x0278FEDC BL 0x1C5C684
	0x0278FEE0 LDR X8, [X0 + 0xB8]
	0x0278FEE4 LDR X0, [X20]
	0x0278FEE8 LDR X21, [X8]
	0x0278FEEC BL 0x1C16F10
	0x0278FEF0 LDR X8, [X19 + 0x20]
	0x0278FEF4 MOV X20, X0
	0x0278FEF8 LDRB W9, [X8 + 0x135]
	0x0278FEFC TBNZ X9, 0x0, 0x278FF0C
	0x0278FF00 MOV X0, X8
	0x0278FF04 BL 0x1C5C684
	0x0278FF08 MOV X8, X0
	0x0278FF0C LDR X8, [X8 + 0xC0]
	0x0278FF10 MOV X0, X20
	0x0278FF14 MOV X1, X21
	0x0278FF18 MOV X3, X31
	0x0278FF1C LDR X2, [X8 + 0x40]
	0x0278FF20 BL 0x2A6B948
	0x0278FF24 LDR X0, [X19 + 0x20]
	0x0278FF28 LDRB W8, [X0 + 0x135]
	0x0278FF2C TBNZ X8, 0x0, 0x278FF34
	0x0278FF30 BL 0x1C5C684
	0x0278FF34 LDR X8, [X0 + 0xC0]
	0x0278FF38 LDR X0, [X8 + 0x20]
	0x0278FF3C LDRB W8, [X0 + 0x135]
	0x0278FF40 TBNZ X8, 0x0, 0x278FF48
	0x0278FF44 BL 0x1C5C684
	0x0278FF48 LDR X8, [X0 + 0xB8]
	0x0278FF4C STR X20, [X8]
	0x0278FF50 LDR X0, [X19 + 0x20]
	0x0278FF54 LDRB W8, [X0 + 0x135]
	0x0278FF58 TBNZ X8, 0x0, 0x278FF60
	0x0278FF5C BL 0x1C5C684
	0x0278FF60 LDR X8, [X0 + 0xC0]
	0x0278FF64 LDR X0, [X8 + 0x20]
	0x0278FF68 LDRB W8, [X0 + 0x135]
	0x0278FF6C TBNZ X8, 0x0, 0x278FF7C
	0x0278FF70 LDP X20, X19, [X31 + 0x10]
	0x0278FF74 LDP X30, X21, [X31], #0x20
	0x0278FF78 B 0x1C5C684

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x1C4C000
	009 Move W8, [X20+2134]
	010 Move X21, X2
	011 Move X19, X1
	012 Move X22, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x198D000
	018 Move X0, [X0+1656]
	019 Call 0x1C17CF4
	020 Move X0, 0x198F000
	021 Move X0, [X0+3648]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+2134], W8
	025 Move [X31], X31
	026 Move [X31+8], X31
	027 Move X0, [X21+32]
	028 Move X20, [X22]
	029 Move W8, [X0+309]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {35}
	034 Call 0x1C5D684
	035 Move X8, [X0+192]
	036 Move X0, [X8+48]
	037 Move W8, [X0+309]
	038 Move TEMP, X8
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {43}
	042 Call 0x1C5D684
	043 Compare X20, 0
	044 JumpIfEqual {94}
	045 Move X8, [X20]
	046 Move W9, [X0+304]
	047 Move W10, [X8+304]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X8, [X8+200]
	050 Add X8, X8, X9
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X23, 0x198D000
	054 Move X23, [X23+1656]
	055 Move X0, [X23]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {61}
	059 Call 0x1C17DFC
	060 Move X0, [X23]
	061 Move X8, [X0+184]
	062 Move X0, [X21+32]
	063 NotImplemented "Instruction LDRH not yet implemented."
	064 Move X21, [X8]
	065 Move W8, [X0+309]
	066 Move TEMP, X8
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfEqual {71}
	070 Call 0x1C5D684
	071 Move X8, [X0+192]
	072 Move X1, [X8+88]
	073 Move W8, [X1+309]
	074 Move TEMP, X8
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfEqual {81}
	078 Move X0, X1
	079 Call 0x1C5D684
	080 Move X1, X0
	081 Move X8, [X20]
	082 NotImplemented "Instruction LDRH not yet implemented."
	083 Compare X9, 0
	084 JumpIfEqual {91}
	085 Move X10, [X8+176]
	086 Add X10, X10, 8
	087 NotImplemented "Instruction LDUR not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Subtract X9, X9, 1
	090 Add X10, X10, 16
	091 Move W2, 1
	092 Move X0, X20
	093 Call 0x1C5D788
	094 Move X8, 0x198F000
	095 Move X8, [X8+3648]
	096 Move X0, [X8]
	097 Move W8, [X0+224]
	098 Compare W8, 0
	099 JumpIfNotEqual {101}
	100 Call 0x1C17DFC
	101 Move X0, X31
	102 Call ValueTask.get_CompletedTask
	103 Compare X0, 0
	104 JumpIfEqual {156}
	105 Move X1, X31
	106 Call Task.GetAwaiter, X0
	107 Move [X31], X0
	108 Add X0, X31, 0
	109 Move X1, X19
	110 Move X2, X31
	111 Call TaskAwaiter.UnsafeOnCompleted, X0, X1
	112 Move W9, [X10]
	113 Add W9, W9, 1
	114 Add X8, X8, W9
	115 Add X0, X8, 312
	116 Move X8, [X0]
	117 Move X5, [X0+8]
	118 Move W4, 1
	119 Move X0, X20
	120 Move X1, X21
	121 Move X2, X19
	122 Move W3, W22
	123 NotImplemented "Instruction BLR not yet implemented."
	124 Move X20, [X31+48]
	125 Move X19, [X31+56]
	126 Move X22, [X31+32]
	127 Move X21, [X31+40]
	128 Move X30, [X31+16]
	129 Move X23, [X31+24]
	130 Add X31, X31, 64
	131 Return 
	132 Move X0, [X21+32]
	133 Move W8, [X0+309]
	134 Move TEMP, X8
	135 And TEMP, TEMP, 1
	136 Compare TEMP, 1
	137 JumpIfEqual {139}
	138 Call 0x1C5D684
	139 Move X8, [X0+192]
	140 Move X0, X20
	141 Move X1, [X8+56]
	142 Call Task`1<Int32>.GetAwaiter, X0
	143 Move [X31+8], X0
	144 Move X0, [X21+32]
	145 Move W8, [X0+309]
	146 Move TEMP, X8
	147 And TEMP, TEMP, 1
	148 Compare TEMP, 1
	149 JumpIfEqual {151}
	150 Call 0x1C5D684
	151 Move X8, [X0+192]
	152 Add X0, X31, 8
	153 Move X1, X19
	154 Move X2, [X8+104]
	155 Call TaskAwaiter`1<Int32>.UnsafeOnCompleted, X0, X1
	156 Call 0x1C17F20

