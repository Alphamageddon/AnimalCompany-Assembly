Type: System.Runtime.CompilerServices.AsyncTaskCache

Method: System.Threading.Tasks.Task`1<System.Int32>[] CreateInt32Tasks()

Disassembly:
	0x032C59FC LDR X0, [X0 + 0x868]
	0x032C5A00 BL 0x1C16CF4
	0x032C5A04 MOVZ W8, 0x1
	0x032C5A08 STRB W8, [X19 + 0x8B2]
	0x032C5A0C LDR X0, [X23]
	0x032C5A10 BL 0x1C16F10
	0x032C5A14 LDR X2, [X21]
	0x032C5A18 MOV X1, X31
	0x032C5A1C MOV X3, X31
	0x032C5A20 MOV X19, X0
	0x032C5A24 BL 0x33E7508
	0x032C5A28 LDR X8, [X20]
	0x032C5A2C LDR X8, [X8 + 0xB8]
	0x032C5A30 STR X19, [X8]
	0x032C5A34 LDR X0, [X22]
	0x032C5A38 BL 0x1C16F10
	0x032C5A3C LDR X2, [X21]
	0x032C5A40 MOV X1, X31
	0x032C5A44 MOV X3, X31
	0x032C5A48 MOV X19, X0
	0x032C5A4C BL 0x33DCEF0
	0x032C5A50 LDR X8, [X20]
	0x032C5A54 LDP X22, X21, [X31 + 0x10]
	0x032C5A58 LDR X8, [X8 + 0xB8]
	0x032C5A5C STR X19, [X8 + 0x8]
	0x032C5A60 LDP X20, X19, [X31 + 0x20]
	0x032C5A64 LDP X30, X23, [X31], #0x30
	0x032C5A68 RET
	0x032C5A6C STR X30, [X31 - 0x20]!
	0x032C5A70 STP X20, X19, [X31 + 0x10]
	0x032C5A74 MOV W19, W1
	0x032C5A78 MOV X1, X31
	0x032C5A7C MOV X20, X0
	0x032C5A80 BL 0x33A51F0
	0x032C5A84 STR W19, [X20 + 0x10]
	0x032C5A88 LDP X20, X19, [X31 + 0x10]
	0x032C5A8C LDR X30, [X31], #0x20
	0x032C5A90 RET
	0x032C5A94 STR X30, [X31 - 0x20]!
	0x032C5A98 STP X20, X19, [X31 + 0x10]
	0x032C5A9C MOV W19, W1
	0x032C5AA0 MOV X1, X31
	0x032C5AA4 MOV X20, X0
	0x032C5AA8 BL 0x33A51F0
	0x032C5AAC STR W19, [X20 + 0x10]
	0x032C5AB0 LDP X20, X19, [X31 + 0x10]
	0x032C5AB4 LDR X30, [X31], #0x20
	0x032C5AB8 RET
	0x032C5ABC STR X30, [X31 - 0x20]!
	0x032C5AC0 STP X20, X19, [X31 + 0x10]
	0x032C5AC4 MOV W19, W1
	0x032C5AC8 MOV X1, X31
	0x032C5ACC MOV X20, X0
	0x032C5AD0 BL 0x33A51F0
	0x032C5AD4 STR W19, [X20 + 0x10]
	0x032C5AD8 LDP X20, X19, [X31 + 0x10]
	0x032C5ADC LDR X30, [X31], #0x20
	0x032C5AE0 RET
	0x032C5AE4 LDR W0, [X0 + 0x10]
	0x032C5AE8 RET
	0x032C5AEC STR X30, [X31 - 0x20]!
	0x032C5AF0 STP X20, X19, [X31 + 0x10]
	0x032C5AF4 MOV X19, X1
	0x032C5AF8 MOVZ W8, 0x1
	0x032C5AFC MOV X1, X31
	0x032C5B00 MOV X20, X0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0x1118000
	009 Move X20, 0xE61000
	010 Move W8, [X19+2209]
	011 Move X20, [X20+2296]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0xE61000
	017 Move X0, [X0+2304]
	018 Call 0x1C17CF4
	019 Move X0, 0xE58000
	020 Move X0, [X0+3856]
	021 Call 0x1C17CF4
	022 Move X0, 0xE61000
	023 Move X0, [X0+2296]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X19+2209], W8
	027 Move X0, [X20]
	028 Move W1, 10
	029 Call 0x1C17D6C
	030 Compare X0, 0
	031 JumpIfEqual {76}
	032 Move W8, [X0+24]
	033 Move X19, X0
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X22, 0xE58000
	036 Move X23, 0xE61000
	037 Move X22, [X22+3856]
	038 Move X23, [X23+2304]
	039 Move X21, X31
	040 Add X24, X19, 32
	041 Move X0, [X22]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X1, [X23]
	047 Subtract W0, W21, 1
	048 Call AsyncTaskCache.CreateCacheableTask, X0
	049 Move X20, X0
	050 Compare X0, 0
	051 JumpIfEqual {58}
	052 Move X8, [X19]
	053 Move X0, X20
	054 Move X1, [X8+64]
	055 Call 0x1C17E00
	056 Compare X0, 0
	057 JumpIfEqual {73}
	058 Move W8, [X19+24]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move [X24], X20
	061 Add X21, X21, 1
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X0, X19
	064 Move X20, [X31+48]
	065 Move X19, [X31+56]
	066 Move X22, [X31+32]
	067 Move X21, [X31+40]
	068 Move X24, [X31+16]
	069 Move X23, [X31+24]
	070 Move X30, [X31+64]
	071 Return X0
	072 Call 0x1C17F28
	073 Call 0x1C17F44
	074 Move X1, X31
	075 Call 0x1C17DEC
	076 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<TResult> CreateCacheableTask(TResult result)

Disassembly:
	0x02185B90 MOV X0, X22
	0x02185B94 MOV X1, X20
	0x02185B98 MOV X2, X19
	0x02185B9C LDR X3, [X8 + 0x10]
	0x02185BA0 LDP X20, X19, [X31 + 0x20]
	0x02185BA4 LDP X22, X21, [X31 + 0x10]
	0x02185BA8 LDR X30, [X31], #0x30
	0x02185BAC B 0x1FD5168
	0x02185BB0 STR X30, [X31 - 0x30]!
	0x02185BB4 STP X22, X21, [X31 + 0x10]
	0x02185BB8 STP X20, X19, [X31 + 0x20]
	0x02185BBC LDR X8, [X3 + 0x38]
	0x02185BC0 MOV X21, X3
	0x02185BC4 MOV X19, X2
	0x02185BC8 MOV X20, X1
	0x02185BCC MOV X22, X0
	0x02185BD0 CBNZ X8, 0x2185BF0
	0x02185BD4 ADRP X0, 0x1F96000
	0x02185BD8 LDR X0, [X0 + 0x810]
	0x02185BDC BL 0x1C16CF4
	0x02185BE0 LDR X8, [X21 + 0x38]
	0x02185BE4 CBNZ X8, 0x2185BF0
	0x02185BE8 MOV X0, X21
	0x02185BEC BL 0x1C5C6E0
	0x02185BF0 ADRP X8, 0x1F96000
	0x02185BF4 LDR X8, [X8 + 0x810]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+56]
	005 Move X20, X1
	006 Move X19, X0
	007 Compare X8, 0
	008 JumpIfNotEqual {12}
	009 Move X0, X20
	010 Call 0x1C5D6E0
	011 Move X8, [X20+56]
	012 Move X0, [X8+8]
	013 Move W8, [X0+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {19}
	018 Call 0x1C5D684
	019 Call 0x1C17F10
	020 Move X8, [X20+56]
	021 Move W3, 0x4000
	022 Move W1, W31
	023 Move X2, X19
	024 Move X5, [X8+16]
	025 Move X4, X31
	026 Move X20, X0
	027 Call 0x2697348, X0, X1, X2, X3, X4
	028 Move X0, X20
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Return X0

Method: System.Void .cctor()

Disassembly:
	0x032C5B04 STRB W8, [X0 + 0x18]
	0x032C5B08 BL 0x33A51F0
	0x032C5B0C STR X19, [X20 + 0x10]
	0x032C5B10 LDP X20, X19, [X31 + 0x10]
	0x032C5B14 LDR X30, [X31], #0x20
	0x032C5B18 RET
	0x032C5B1C AND W8, W1, 0x1
	0x032C5B20 STRB W8, [X0 + 0x18]
	0x032C5B24 RET
	0x032C5B28 MOV X1, X31
	0x032C5B2C B 0x33A51F0
	0x032C5B30 STR X30, [X31 - 0x20]!
	0x032C5B34 STP X20, X19, [X31 + 0x10]
	0x032C5B38 MOV W19, W1
	0x032C5B3C MOV X1, X31
	0x032C5B40 MOV X20, X0
	0x032C5B44 BL 0x33A51F0
	0x032C5B48 STR W19, [X20 + 0x10]
	0x032C5B4C LDP X20, X19, [X31 + 0x10]
	0x032C5B50 LDR X30, [X31], #0x20
	0x032C5B54 RET
	0x032C5B58 MOV X1, X31
	0x032C5B5C B 0x33A51F0
	0x032C5B60 STR X30, [X31 - 0x20]!
	0x032C5B64 STP X20, X19, [X31 + 0x10]
	0x032C5B68 MOV X19, X1
	0x032C5B6C MOV X1, X31
	0x032C5B70 MOV X20, X0
	0x032C5B74 BL 0x33A51F0
	0x032C5B78 CBZ X19, 0x32C5B8C
	0x032C5B7C STR X19, [X20 + 0x10]
	0x032C5B80 LDP X20, X19, [X31 + 0x10]
	0x032C5B84 LDR X30, [X31], #0x20
	0x032C5B88 RET
	0x032C5B8C ADRP X0, 0xE33000
	0x032C5B90 LDR X0, [X0 + 0x528]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1118000
	006 Move X20, 0xE61000
	007 Move X19, 0xE58000
	008 Move W8, [X21+2210]
	009 Move X20, [X20+2312]
	010 Move X19, [X19+3856]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xE61000
	016 Move X0, [X0+2312]
	017 Call 0x1C17CF4
	018 Move X0, 0xE58000
	019 Move X0, [X0+3856]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+2210], W8
	023 Move X1, [X20]
	024 Move W0, 1
	025 Call AsyncTaskCache.CreateCacheableTask, X0
	026 Move X8, [X19]
	027 Move X8, [X8+184]
	028 Move [X8], X0
	029 Move X1, [X20]
	030 Move W0, W31
	031 Call AsyncTaskCache.CreateCacheableTask, X0
	032 Move X8, [X19]
	033 Move X8, [X8+184]
	034 Move [X8+8], X0
	035 Call AsyncTaskCache.CreateInt32Tasks
	036 Move X8, [X19]
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X8, [X8+184]
	040 Move [X8+16], X0
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Return 

