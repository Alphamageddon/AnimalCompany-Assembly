Type: System.Runtime.CompilerServices.YieldAwaitable/YieldAwaiter

Method: System.Boolean get_IsCompleted()

Disassembly:
	0x032C65E4 LDR W8, [X0 + 0xE0]
	0x032C65E8 CBNZ W8, 0x32C65F0

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Void OnCompleted(System.Action continuation)

Disassembly:
	0x032C65EC BL 0x1C16DFC
	0x032C65F0 ADRP X23, 0x1116000
	0x032C65F4 LDRB W8, [X23 + 0x926]
	0x032C65F8 CBNZ W8, 0x32C6610
	0x032C65FC ADRP X0, 0xE3A000
	0x032C6600 LDR X0, [X0 + 0x2F0]
	0x032C6604 BL 0x1C16CF4
	0x032C6608 MOVZ W8, 0x1
	0x032C660C STRB W8, [X23 + 0x926]
	0x032C6610 LDR X0, [X19]
	0x032C6614 LDR W8, [X0 + 0xE0]
	0x032C6618 CBNZ W8, 0x32C6624
	0x032C661C BL 0x1C16DFC
	0x032C6620 LDR X0, [X19]
	0x032C6624 ADRP X9, 0xE5F000
	0x032C6628 LDR X8, [X0 + 0xB8]
	0x032C662C LDR X9, [X9 + 0x9A8]
	0x032C6630 LDR X24, [X8 + 0x18]
	0x032C6634 LDR X0, [X9]
	0x032C6638 BL 0x1C16F10
	0x032C663C ADRP X8, 0xE5F000
	0x032C6640 LDR X8, [X8 + 0x9A0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1117000
	006 Move X21, 0xE2F000
	007 Move W8, [X20+2222]
	008 Move X21, [X21+2152]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE2F000
	015 Move X0, [X0+2152]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2222], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move W1, 1
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]

Method: System.Void UnsafeOnCompleted(System.Action continuation)

Disassembly:
	0x032C68D4 CMP X11, X1
	0x032C68D8 B.EQ 0x32C68F8
	0x032C68DC SUBS X9, X9, 0x1
	0x032C68E0 ADD X10, X10, 0x10
	0x032C68E4 B.NE 0x32C68D0
	0x032C68E8 MOV X0, X23
	0x032C68EC MOV W2, W31
	0x032C68F0 BL 0x1C5C788
	0x032C68F4 B 0x32C6904
	0x032C68F8 LDRSW X9, [X10]
	0x032C68FC ADD X8, X8, X9, 0x4, LSL
	0x032C6900 ADD X0, X8, 0x138
	0x032C6904 LDP X8, X1, [X0]
	0x032C6908 MOV X0, X23
	0x032C690C BLR X8
	0x032C6910 MOVZ W8, 0x1
	0x032C6914 STRB W8, [X21 + 0x40]
	0x032C6918 LDR X8, [X21 + 0x30]
	0x032C691C CBZ X8, 0x32C6960
	0x032C6920 LDR X0, [X21 + 0x28]
	0x032C6924 CBZ X0, 0x32C6AEC
	0x032C6928 LDR X3, [X28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1117000
	006 Move X21, 0xE2F000
	007 Move W8, [X20+2223]
	008 Move X21, [X21+2152]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE2F000
	015 Move X0, [X0+2152]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2223], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move W1, W31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call YieldAwaiter.QueueContinuation, X0, X1
	031 Return 

Method: System.Void QueueContinuation(System.Action continuation, System.Boolean flowContext)

Disassembly:
	0x032C6644 MOV X23, X0
	0x032C6648 LDR X2, [X8]
	0x032C664C MOV X1, X24
	0x032C6650 BL 0x2AB118C
	0x032C6654 STR X23, [X21 + 0x38]
	0x032C6658 LDR X0, [X21 + 0x30]
	0x032C665C CBZ X0, 0x32C66E4
	0x032C6660 BL 0x32C7430
	0x032C6664 MOV X23, X0
	0x032C6668 CBZ X0, 0x32C6B20
	0x032C666C ADRP X19, 0xE2F000
	0x032C6670 ADRP X25, 0xE5F000
	0x032C6674 LDR X19, [X19 + 0x278]
	0x032C6678 LDR X25, [X25 + 0x9D0]
	0x032C667C MOV X24, X31
	0x032C6680 MOV X0, X23
	0x032C6684 BL 0x32C7548
	0x032C6688 TBZ X0, 0x0, 0x32C6910
	0x032C668C MOV X0, X23
	0x032C6690 BL 0x32C7498
	0x032C6694 MOV X8, X0
	0x032C6698 CBZ X0, 0x32C66AC
	0x032C669C LDR X1, [X19]
	0x032C66A0 LDR X9, [X8]
	0x032C66A4 CMP X9, X1
	0x032C66A8 B.NE 0x32C69F0
	0x032C66AC LDR X0, [X21 + 0x38]
	0x032C66B0 CBZ X0, 0x32C69E8
	0x032C66B4 LDR W9, [X23 + 0x20]
	0x032C66B8 LDR X4, [X25]
	0x032C66BC AND X10, X24, 0x0
	0x032C66C0 ORR X24, X10, X9, 0x0
	0x032C66C4 MOV X1, X8
	0x032C66C8 MOV X2, X31
	0x032C66CC MOV X3, X24
	0x032C66D0 BL 0x2AB1A00
	0x032C66D4 B 0x32C6680
	0x032C66D8 MOV X23, X31
	0x032C66DC MOV X25, X31
	0x032C66E0 B 0x32C69AC
	0x032C66E4 LDR X23, [X21 + 0x10]
	0x032C66E8 STR X27, [X31 + 0x8]
	0x032C66EC CBZ X23, 0x32C6B28
	0x032C66F0 ADRP X10, 0xE5F000
	0x032C66F4 LDR X8, [X23]
	0x032C66F8 LDR X10, [X10 + 0x9B8]
	0x032C66FC LDRH W9, [X8 + 0x12E]
	0x032C6700 LDR X1, [X10]
	0x032C6704 CBZ X9, 0x32C6728
	0x032C6708 LDR X10, [X8 + 0xB0]
	0x032C670C ADD X10, X10, 0x8
	0x032C6710 LDUR X11, [X10 - 0x8]
	0x032C6714 CMP X11, X1
	0x032C6718 B.EQ 0x32C6738
	0x032C671C SUBS X9, X9, 0x1
	0x032C6720 ADD X10, X10, 0x10
	0x032C6724 B.NE 0x32C6710
	0x032C6728 MOVZ W2, 0x1
	0x032C672C MOV X0, X23
	0x032C6730 BL 0x1C5C788
	0x032C6734 B 0x32C6748
	0x032C6738 LDR W9, [X10]
	0x032C673C ADD W9, W9, 0x1
	0x032C6740 ADD X8, X8, W9, 0x4, SXTW
	0x032C6744 ADD X0, X8, 0x138
	0x032C6748 LDP X8, X1, [X0]
	0x032C674C MOV X0, X23
	0x032C6750 BLR X8
	0x032C6754 MOV X23, X0
	0x032C6758 CBZ X0, 0x32C6B2C
	0x032C675C ADRP X29, 0xE2D000
	0x032C6760 ADRP X28, 0xE5A000
	0x032C6764 ADRP X27, 0xE2F000
	0x032C6768 ADRP X19, 0xE5F000
	0x032C676C LDR X29, [X29 + 0xE18]
	0x032C6770 LDR X28, [X28 + 0xF80]
	0x032C6774 LDR X27, [X27 + 0x278]
	0x032C6778 LDR X19, [X19 + 0x9D0]
	0x032C677C MOV X24, X31
	0x032C6780 LDR X8, [X23]
	0x032C6784 LDR X1, [X29]
	0x032C6788 LDRH W9, [X8 + 0x12E]
	0x032C678C CBZ X9, 0x32C67B0
	0x032C6790 LDR X10, [X8 + 0xB0]
	0x032C6794 ADD X10, X10, 0x8
	0x032C6798 LDUR X11, [X10 - 0x8]
	0x032C679C CMP X11, X1
	0x032C67A0 B.EQ 0x32C67C0
	0x032C67A4 SUBS X9, X9, 0x1
	0x032C67A8 ADD X10, X10, 0x10
	0x032C67AC B.NE 0x32C6798
	0x032C67B0 MOV X0, X23
	0x032C67B4 MOV W2, W31
	0x032C67B8 BL 0x1C5C788
	0x032C67BC B 0x32C67CC
	0x032C67C0 LDRSW X9, [X10]
	0x032C67C4 ADD X8, X8, X9, 0x4, LSL
	0x032C67C8 ADD X0, X8, 0x138
	0x032C67CC LDP X8, X1, [X0]
	0x032C67D0 MOV X0, X23
	0x032C67D4 BLR X8
	0x032C67D8 TBZ X0, 0x0, 0x32C6898
	0x032C67DC LDR X8, [X23]
	0x032C67E0 LDR X1, [X28]
	0x032C67E4 LDRH W9, [X8 + 0x12E]
	0x032C67E8 CBZ X9, 0x32C680C
	0x032C67EC LDR X10, [X8 + 0xB0]
	0x032C67F0 ADD X10, X10, 0x8
	0x032C67F4 LDUR X11, [X10 - 0x8]
	0x032C67F8 CMP X11, X1
	0x032C67FC B.EQ 0x32C681C
	0x032C6800 SUBS X9, X9, 0x1
	0x032C6804 ADD X10, X10, 0x10
	0x032C6808 B.NE 0x32C67F4
	0x032C680C MOVZ W2, 0x2
	0x032C6810 MOV X0, X23
	0x032C6814 BL 0x1C5C788
	0x032C6818 B 0x32C682C
	0x032C681C LDR W9, [X10]
	0x032C6820 ADD W9, W9, 0x2
	0x032C6824 ADD X8, X8, W9, 0x4, SXTW
	0x032C6828 ADD X0, X8, 0x138
	0x032C682C LDP X8, X1, [X0]
	0x032C6830 MOV X0, X23
	0x032C6834 BLR X8
	0x032C6838 MOV X25, X0
	0x032C683C MOV X26, X1
	0x032C6840 CBZ X0, 0x32C6854
	0x032C6844 LDR X1, [X27]
	0x032C6848 LDR X8, [X25]
	0x032C684C CMP X8, X1
	0x032C6850 B.NE 0x32C6A38
	0x032C6854 LDR X0, [X21 + 0x28]
	0x032C6858 CBZ X0, 0x32C69FC
	0x032C685C LDR X4, [X19]
	0x032C6860 ORR X24, X24, 0x0
	0x032C6864 MOV X1, X25
	0x032C6868 MOV X2, X26
	0x032C686C MOV X3, X24
	0x032C6870 BL 0x2AB1A00
	0x032C6874 TBZ X22, 0x0, 0x32C6780
	0x032C6878 LDR X0, [X21 + 0x38]
	0x032C687C CBZ X0, 0x32C6A40
	0x032C6880 LDR X4, [X19]
	0x032C6884 MOV X1, X25
	0x032C6888 MOV X2, X26
	0x032C688C MOV X3, X24
	0x032C6890 BL 0x2AB1A00
	0x032C6894 B 0x32C6780
	0x032C6898 ADRP X28, 0xE5F000
	0x032C689C LDR X27, [X31 + 0x8]
	0x032C68A0 LDR X28, [X28 + 0x9D8]
	0x032C68A4 TBNZ X22, 0x0, 0x32C6910
	0x032C68A8 LDR X23, [X21 + 0x10]
	0x032C68AC CBZ X23, 0x32C6B30
	0x032C68B0 LDR X8, [X23]
	0x032C68B4 ADRP X10, 0xE5F000
	0x032C68B8 LDRH W9, [X8 + 0x12E]
	0x032C68BC LDR X10, [X10 + 0x9B8]
	0x032C68C0 LDR X1, [X10]
	0x032C68C4 CBZ X9, 0x32C68E8
	0x032C68C8 LDR X10, [X8 + 0xB0]
	0x032C68CC ADD X10, X10, 0x8
	0x032C68D0 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x1117000
	008 Move W8, [X21+2224]
	009 Move W20, W1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0xE60000
	016 Move X0, [X0+2392]
	017 Call 0x1C17CF4
	018 Move X0, 0xE36000
	019 Move X0, [X0+2024]
	020 Call 0x1C17CF4
	021 Move X0, 0xE2F000
	022 Move X0, [X0+1976]
	023 Call 0x1C17CF4
	024 Move X0, 0xE2E000
	025 Move X0, [X0+1728]
	026 Call 0x1C17CF4
	027 Move X0, 0xE2F000
	028 Move X0, [X0+2152]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+2224], W8
	032 Compare X19, 0
	033 JumpIfEqual {185}
	034 Move X0, X31
	035 Call SynchronizationContext.get_CurrentNoFlow
	036 Compare X0, 0
	037 JumpIfEqual {86}
	038 Move X22, 0xE60000
	039 Move X23, 0xE2E000
	040 Move X22, [X22+2392]
	041 Move X23, [X23+1728]
	042 Move X1, X31
	043 Move X21, X0
	044 Call "il2cpp_vm_object_is_inst", X0
	045 Move X8, [X23]
	046 Move X23, [X22]
	047 Move X22, X0
	048 Move W9, [X8+224]
	049 Compare W9, 0
	050 JumpIfNotEqual {53}
	051 Move X0, X8
	052 Call 0x1C17DFC
	053 Move X0, X23
	054 Move X1, X31
	055 Call Type.GetTypeFromHandle, X0
	056 Move X1, X0
	057 Move X0, X22
	058 Move X2, X31
	059 Call Type.op_Inequality, X0, X1
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {86}
	064 Move X20, 0xE2F000
	065 Move X20, [X20+2152]
	066 Move X0, [X20]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {72}
	070 Call 0x1C17DFC
	071 Move X0, [X20]
	072 Move X8, [X0+184]
	073 Move X9, [X21]
	074 Move X0, X21
	075 Move X2, X19
	076 Move X1, [X8+8]
	077 Move X4, [X9+392]
	078 Move X3, [X9+400]
	079 Move X20, [X31+32]
	080 Move X19, [X31+40]
	081 Move X22, [X31+16]
	082 Move X21, [X31+24]
	083 Move X30, [X31+48]
	084 Move X23, [X31+56]
	085 CallNoReturn X4
	086 Move X22, 0xE36000
	087 Move X22, [X22+2024]
	088 Move X0, [X22]
	089 Move W8, [X0+224]
	090 Compare W8, 0
	091 JumpIfNotEqual {93}
	092 Call 0x1C17DFC
	093 Move X0, X31
	094 Call TaskScheduler.get_Current
	095 Move X23, 0x1114000
	096 Move W8, [X23+2189]
	097 Move X21, X0
	098 Compare W8, 0
	099 JumpIfNotEqual {105}
	100 Move X0, 0xE36000
	101 Move X0, [X0+2024]
	102 Call 0x1C17CF4
	103 Move W8, 1
	104 Move [X23+2189], W8
	105 Move X0, [X22]
	106 Move W8, [X0+224]
	107 Compare W8, 0
	108 JumpIfNotEqual {111}
	109 Call 0x1C17DFC
	110 Move X0, [X22]
	111 Move X8, [X0+184]
	112 Move X8, [X8+8]
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move X20, 0xE2F000
	115 Move X20, [X20+1976]
	116 Move X0, [X20]
	117 Move W8, [X0+224]
	118 Compare W8, 0
	119 JumpIfNotEqual {121}
	120 Call 0x1C17DFC
	121 Move X22, 0x1113000
	122 Move W8, [X22+3867]
	123 Compare W8, 0
	124 JumpIfNotEqual {130}
	125 Move X0, 0xE2F000
	126 Move X0, [X0+1976]
	127 Call 0x1C17CF4
	128 Move W8, 1
	129 Move [X22+3867], W8
	130 Move X0, [X20]
	131 Move W8, [X0+224]
	132 Compare W8, 0
	133 JumpIfNotEqual {136}
	134 Call 0x1C17DFC
	135 Move X0, [X20]
	136 Move X8, [X0+184]
	137 Move X0, [X8+40]
	138 Compare X0, 0
	139 JumpIfEqual {203}
	140 Move X1, X19
	141 Move X4, X21
	142 Move X20, [X31+32]
	143 Move X19, [X31+40]
	144 Move X22, [X31+16]
	145 Move X21, [X31+24]
	146 Move W3, 1
	147 Move X2, X31
	148 Move X5, X31
	149 Move X30, [X31+48]
	150 Move X23, [X31+56]
	151 Call TaskFactory.StartNew, X0, X1, X2, X3, X4
	152 Return 
	153 Move X21, 0xE2F000
	154 Move X21, [X21+2152]
	155 Move X0, [X21]
	156 Move W8, [X0+224]
	157 Compare W8, 0
	158 JumpIfNotEqual {161}
	159 Call 0x1C17DFC
	160 Move X0, [X21]
	161 Move X8, [X0+184]
	162 Move X1, X19
	163 Move X2, X31
	164 Move X0, [X8]
	165 Move TEMP, X20
	166 And TEMP, TEMP, 1
	167 Compare TEMP, 1
	168 JumpIfNotEqual {177}
	169 Move X20, [X31+32]
	170 Move X19, [X31+40]
	171 Move X22, [X31+16]
	172 Move X21, [X31+24]
	173 Move X30, [X31+48]
	174 Move X23, [X31+56]
	175 Call ThreadPool.QueueUserWorkItem, X0, X1
	176 Return 
	177 Move X20, [X31+32]
	178 Move X19, [X31+40]
	179 Move X22, [X31+16]
	180 Move X21, [X31+24]
	181 Move X30, [X31+48]
	182 Move X23, [X31+56]
	183 Call ThreadPool.UnsafeQueueUserWorkItem, X0, X1
	184 Return 
	185 Move X0, 0xE33000
	186 Move X0, [X0+1320]
	187 Call 0x1C17D08
	188 Call 0x1C17F10
	189 Move X19, X0
	190 Move X0, 0xE60000
	191 Move X0, [X0+2160]
	192 Call 0x1C17D08
	193 Move X1, X0
	194 Move X0, X19
	195 Move X2, X31
	196 Call ArgumentNullException..ctor, X0, X1
	197 Move X0, 0xE60000
	198 Move X0, [X0+2400]
	199 Call 0x1C17D08
	200 Move X1, X0
	201 Move X0, X19
	202 Call 0x1C17DEC
	203 Call 0x1C17F20

Method: System.Void RunAction(System.Object state)

Disassembly:
	0x032C692C ADD X2, X31, 0x20
	0x032C6930 MOV X1, X20
	0x032C6934 BL 0x2AB3454
	0x032C6938 TBZ X0, 0x0, 0x32C6960
	0x032C693C LDP X1, X2, [X31 + 0x20]
	0x032C6940 LDR X4, [X21 + 0x28]
	0x032C6944 MOV X0, X21
	0x032C6948 MOV X3, X20
	0x032C694C MOV W5, W31
	0x032C6950 BL 0x32C75B8
	0x032C6954 MOV X25, X0
	0x032C6958 MOV W8, W31
	0x032C695C B 0x32C6968
	0x032C6960 MOV X25, X31
	0x032C6964 MOVZ W8, 0x1
	0x032C6968 ANDS W31, W22, W8, 0x0
	0x032C696C B.EQ 0x32C69A8
	0x032C6970 LDR X0, [X21 + 0x38]
	0x032C6974 CBZ X0, 0x32C6AF4
	0x032C6978 LDR X3, [X28]
	0x032C697C ADD X2, X31, 0x20
	0x032C6980 MOV X1, X20
	0x032C6984 BL 0x2AB3454
	0x032C6988 TBZ X0, 0x0, 0x32C69A8
	0x032C698C LDP X1, X2, [X31 + 0x20]
	0x032C6990 LDR X4, [X21 + 0x28]
	0x032C6994 MOVZ W5, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1117000
	005 Move W8, [X20+2225]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE2F000
	012 Move X0, [X0+3696]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2225], W8
	016 Compare X19, 0
	017 JumpIfEqual {30}
	018 Move X8, 0xE2F000
	019 Move X8, [X8+3696]
	020 Move X1, [X8]
	021 Move X8, [X19]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X2, [X19+24]
	024 Move X0, [X19+64]
	025 Move X1, [X19+40]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 CallNoReturn X2
	030 Call 0x1C17F20
	031 Move X0, X19
	032 Call 0x1C181E0

Method: System.Void GetResult()

Disassembly:
	0x032C6998 MOV X0, X21

ISIL:
	001 Return 

Method: System.Void .cctor()

Disassembly:
	0x032C699C MOV X3, X20
	0x032C69A0 BL 0x32C75B8
	0x032C69A4 MOV X25, X0
	0x032C69A8 MOV X23, X31
	0x032C69AC LDRB W8, [X31 + 0x1C]
	0x032C69B0 CBZ W8, 0x32C69C0
	0x032C69B4 MOV X0, X27
	0x032C69B8 MOV X1, X31
	0x032C69BC BL 0x33E14E4
	0x032C69C0 CBNZ X23, 0x32C6A8C
	0x032C69C4 MOV X0, X25
	0x032C69C8 LDP X20, X19, [X31 + 0x80]
	0x032C69CC LDP X22, X21, [X31 + 0x70]
	0x032C69D0 LDP X24, X23, [X31 + 0x60]
	0x032C69D4 LDP X26, X25, [X31 + 0x50]
	0x032C69D8 LDP X28, X27, [X31 + 0x40]
	0x032C69DC LDP X29, X30, [X31 + 0x30]
	0x032C69E0 ADD X31, X31, 0x90
	0x032C69E4 RET
	0x032C69E8 STR X27, [X31 + 0x8]
	0x032C69EC BL 0x1C16F20
	0x032C69F0 MOV X0, X8
	0x032C69F4 STR X27, [X31 + 0x8]
	0x032C69F8 BL 0x1C171E0
	0x032C69FC BL 0x1C16F20
	0x032C6A00 ADRP X0, 0xE56000
	0x032C6A04 LDR X0, [X0 + 0x4B8]
	0x032C6A08 BL 0x1C16D08
	0x032C6A0C BL 0x1C16F10
	0x032C6A10 MOV X19, X0
	0x032C6A14 ADRP X0, 0xE5F000
	0x032C6A18 LDR X0, [X0 + 0x9C0]
	0x032C6A1C BL 0x1C16D08
	0x032C6A20 MOV X2, X0
	0x032C6A24 MOV X0, X19
	0x032C6A28 MOV X1, X31
	0x032C6A2C MOV X3, X31
	0x032C6A30 BL 0x338C410
	0x032C6A34 B 0x32C6A74
	0x032C6A38 MOV X0, X25
	0x032C6A3C BL 0x1C171E0
	0x032C6A40 BL 0x1C16F20
	0x032C6A44 ADRP X0, 0xE32000
	0x032C6A48 LDR X0, [X0 + 0x528]
	0x032C6A4C BL 0x1C16D08
	0x032C6A50 BL 0x1C16F10
	0x032C6A54 MOV X19, X0
	0x032C6A58 ADRP X0, 0xE57000
	0x032C6A5C LDR X0, [X0 + 0x70]
	0x032C6A60 BL 0x1C16D08
	0x032C6A64 MOV X1, X0
	0x032C6A68 MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0x1117000
	008 Move X23, 0xE37000
	009 Move X21, 0xE60000
	010 Move X20, 0xE2F000
	011 Move X22, 0xE3A000
	012 Move W8, [X19+2226]
	013 Move X23, [X23+2392]
	014 Move X21, [X21+2408]
	015 Move X20, [X20+2152]
	016 Move X22, [X22+1184]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {35}
	021 Move X0, 0xE3A000
	022 Move X0, [X0+1184]
	023 Call 0x1C17CF4
	024 Move X0, 0xE37000
	025 Move X0, [X0+2392]
	026 Call 0x1C17CF4
	027 Move X0, 0xE60000
	028 Move X0, [X0+2408]
	029 Call 0x1C17CF4
	030 Move X0, 0xE2F000
	031 Move X0, [X0+2152]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X19+2226], W8
	035 Move X0, [X23]
	036 Call 0x1C17F10
	037 Move X2, [X21]
	038 Move X1, X31
	039 Move X3, X31
	040 Move X19, X0
	041 Call WaitCallback..ctor, X0, X1, X2
	042 Move X8, [X20]
	043 Move X8, [X8+184]
	044 Move [X8], X19
	045 Move X0, [X22]
	046 Call 0x1C17F10
	047 Move X2, [X21]
	048 Move X1, X31
	049 Move X3, X31
	050 Move X19, X0
	051 Call SendOrPostCallback..ctor, X0, X1, X2
	052 Move X8, [X20]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X8, [X8+184]
	056 Move [X8+8], X19
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X30, [X31+48]
	060 Move X23, [X31+56]
	061 Return 

