Type: System.Runtime.CompilerServices.TaskAwaiter

Method: System.Void .ctor(System.Threading.Tasks.Task task)

Disassembly:
	0x032C4A78 LDR X23, [X23 + 0x900]
	0x032C4A7C MOV X21, X31

ISIL:
	001 Move [X0], X1
	002 Return 

Method: System.Boolean get_IsCompleted()

Disassembly:
	0x032C4A80 ADD X24, X19, 0x20
	0x032C4A84 LDR X0, [X22]
	0x032C4A88 LDR W8, [X0 + 0xE0]
	0x032C4A8C CBNZ W8, 0x32C4A94
	0x032C4A90 BL 0x1C16DFC
	0x032C4A94 LDR X1, [X23]
	0x032C4A98 SUB W0, W21, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call Task.get_IsCompleted, X0
	008 Return X0
	009 Call 0x1C17F20

Method: System.Void OnCompleted(System.Action continuation)

Disassembly:
	0x032C4730 MOV X1, X31
	0x032C4734 BL 0x1C16DEC
	0x032C4738 MOVZ W0, 0x8
	0x032C473C BL 0x3EB1AF0

ISIL:
	001 Move X0, [X0]
	002 Move W2, 1
	003 Move W3, 1
	004 Call TaskAwaiter.OnCompletedInternal, X0, X1, X2, X3
	005 Return 

Method: System.Void UnsafeOnCompleted(System.Action continuation)

Disassembly:
	0x032C48CC LDR X8, [X21]
	0x032C48D0 LDR X9, [X0 + 0xB8]
	0x032C48D4 ADRP X21, 0xE61000
	0x032C48D8 LDR W10, [X8 + 0xE0]

ISIL:
	001 Move X0, [X0]
	002 Move W2, 1
	003 Move W3, W31
	004 Call TaskAwaiter.OnCompletedInternal, X0, X1, X2, X3
	005 Return 

Method: System.Void GetResult()

Disassembly:
	0x032C4B4C MOVZ W0, 0x1
	0x032C4B50 BL 0x2184DE0

ISIL:
	001 Move X0, [X0]

Method: System.Void ValidateEnd(System.Threading.Tasks.Task task)

Disassembly:
	0x032C4B54 LDR X8, [X19]
	0x032C4B58 LDR X8, [X8 + 0xB8]
	0x032C4B5C STR X0, [X8]
	0x032C4B60 LDR X1, [X20]
	0x032C4B64 MOV W0, W31
	0x032C4B68 BL 0x2184DE0
	0x032C4B6C LDR X8, [X19]
	0x032C4B70 LDR X8, [X8 + 0xB8]
	0x032C4B74 STR X0, [X8 + 0x8]
	0x032C4B78 BL 0x32C49FC
	0x032C4B7C LDR X8, [X19]
	0x032C4B80 LDP X20, X19, [X31 + 0x10]
	0x032C4B84 LDR X8, [X8 + 0xB8]
	0x032C4B88 STR X0, [X8 + 0x10]
	0x032C4B8C LDP X30, X21, [X31], #0x20
	0x032C4B90 RET
	0x032C4B94 STR X30, [X31 - 0x50]!
	0x032C4B98 STP X26, X25, [X31 + 0x10]
	0x032C4B9C STP X24, X23, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X0, 0
	005 JumpIfEqual {21}
	006 Move W20, [X0+56]
	007 Move X19, X0
	008 Call 0x1C17D44
	009 Move W8, 0x11000000
	010 And W8, W20, W8
	011 Move W9, 0x1000000
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move X30, [X31+32]
	016 Return 
	017 Move X0, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Call 0x1C17F20

Method: System.Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task task)

Disassembly:
	0x032C4BA0 STP X22, X21, [X31 + 0x30]
	0x032C4BA4 STP X20, X19, [X31 + 0x40]
	0x032C4BA8 ADRP X23, 0x1118000
	0x032C4BAC ADRP X22, 0xE61000
	0x032C4BB0 LDRB W8, [X23 + 0x8A3]
	0x032C4BB4 LDR X22, [X22 + 0x910]
	0x032C4BB8 MOV X19, X2
	0x032C4BBC MOV X21, X1
	0x032C4BC0 MOV X20, X0
	0x032C4BC4 TBNZ X8, 0x0, 0x32C4C0C
	0x032C4BC8 ADRP X0, 0xE30000
	0x032C4BCC LDR X0, [X0 + 0xE70]
	0x032C4BD0 BL 0x1C16CF4
	0x032C4BD4 ADRP X0, 0xE61000
	0x032C4BD8 LDR X0, [X0 + 0x910]
	0x032C4BDC BL 0x1C16CF4
	0x032C4BE0 ADRP X0, 0xE57000
	0x032C4BE4 LDR X0, [X0 + 0x580]
	0x032C4BE8 BL 0x1C16CF4
	0x032C4BEC ADRP X0, 0xE61000
	0x032C4BF0 LDR X0, [X0 + 0x918]
	0x032C4BF4 BL 0x1C16CF4
	0x032C4BF8 ADRP X0, 0xE61000
	0x032C4BFC LDR X0, [X0 + 0x920]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X0, 0
	004 JumpIfEqual {35}
	005 Move X1, X31
	006 Move X19, X0
	007 Call Task.get_IsCompleted, X0
	008 Move TEMP, X0
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {19}
	012 Move TEMP, 0
	013 Not TEMP
	014 Move W1, TEMP
	015 Move X0, X19
	016 Move X2, X31
	017 Move X3, X31
	018 Call Task.InternalWait, X0, X1, X2
	019 Move X0, X19
	020 Move X1, X31
	021 Call Task.NotifyDebuggerOfWaitCompletionIfNecessary, X0
	022 Move X0, X19
	023 Move X1, X31
	024 Call Task.get_IsCompletedSuccessfully, X0
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {32}
	029 Move X30, [X31+16]
	030 Move X19, [X31+24]
	031 Return 
	032 Move X0, X19
	033 Move X30, [X31+16]
	034 Move X19, [X31+24]
	035 Call 0x1C17F20

Method: System.Void ThrowForNonSuccess(System.Threading.Tasks.Task task)

Disassembly:
	0x032C4C00 BL 0x1C16CF4
	0x032C4C04 MOVZ W8, 0x1
	0x032C4C08 STRB W8, [X23 + 0x8A3]
	0x032C4C0C LDR X0, [X22]
	0x032C4C10 ADRP X22, 0xE57000
	0x032C4C14 LDR W8, [X0 + 0xE0]
	0x032C4C18 LDR X22, [X22 + 0x580]
	0x032C4C1C CBNZ W8, 0x32C4C24
	0x032C4C20 BL 0x1C16DFC
	0x032C4C24 MOV X0, X31
	0x032C4C28 BL 0x334DDB8
	0x032C4C2C LDR X0, [X22]
	0x032C4C30 LDR W8, [X0 + 0xE0]
	0x032C4C34 CBNZ W8, 0x32C4C3C
	0x032C4C38 BL 0x1C16DFC
	0x032C4C3C ADRP X22, 0xE61000
	0x032C4C40 ADRP X26, 0xE30000
	0x032C4C44 ADRP X25, 0xE61000
	0x032C4C48 LDR X22, [X22 + 0x920]
	0x032C4C4C LDR X26, [X26 + 0xE70]
	0x032C4C50 LDR X25, [X25 + 0x918]
	0x032C4C54 MOV X0, X31
	0x032C4C58 BL 0x33E53DC
	0x032C4C5C MOV X24, X0
	0x032C4C60 CBZ X0, 0x32C4CD0
	0x032C4C64 MOV X0, X24
	0x032C4C68 MOV X1, X31
	0x032C4C6C BL 0x33E4898
	0x032C4C70 TBZ X0, 0x0, 0x32C4CD0
	0x032C4C74 LDR X23, [X20 + 0x8]
	0x032C4C78 CBNZ X23, 0x32C4D28
	0x032C4C7C LDR X0, [X22]
	0x032C4C80 LDR X23, [X20]
	0x032C4C84 BL 0x1C16F10
	0x032C4C88 MOV X1, X31
	0x032C4C8C MOV X22, X0
	0x032C4C90 BL 0x33BDD8C
	0x032C4C94 STP X24, X23, [X22 + 0x10]
	0x032C4C98 LDR X0, [X26]
	0x032C4C9C BL 0x1C16F10
	0x032C4CA0 LDR X2, [X25]
	0x032C4CA4 MOV X1, X22
	0x032C4CA8 MOV X3, X31
	0x032C4CAC MOV X23, X0
	0x032C4CB0 BL 0x3314368
	0x032C4CB4 CBZ X21, 0x32C4D44
	0x032C4CB8 MOV X1, X21
	0x032C4CBC MOV X2, X23
	0x032C4CC0 BL 0x32C4D78
	0x032C4CC4 MOV X23, X0
	0x032C4CC8 STR X0, [X20 + 0x8]
	0x032C4CCC B 0x32C4D1C
	0x032C4CD0 LDR X0, [X22]
	0x032C4CD4 LDR X23, [X20]
	0x032C4CD8 BL 0x1C16F10
	0x032C4CDC MOV X1, X31
	0x032C4CE0 MOV X22, X0
	0x032C4CE4 BL 0x33BDD8C
	0x032C4CE8 STP X24, X23, [X22 + 0x10]
	0x032C4CEC LDR X0, [X26]
	0x032C4CF0 BL 0x1C16F10
	0x032C4CF4 LDR X2, [X25]
	0x032C4CF8 MOV X1, X22
	0x032C4CFC MOV X3, X31
	0x032C4D00 MOV X23, X0
	0x032C4D04 BL 0x3314368
	0x032C4D08 CBZ X21, 0x32C4D1C
	0x032C4D0C MOV X1, X21
	0x032C4D10 MOV X2, X23
	0x032C4D14 BL 0x32C4D78
	0x032C4D18 MOV X23, X0
	0x032C4D1C LDR X8, [X20]
	0x032C4D20 CBNZ X8, 0x32C4D28
	0x032C4D24 STR X22, [X19]
	0x032C4D28 MOV X0, X23
	0x032C4D2C LDP X20, X19, [X31 + 0x40]
	0x032C4D30 LDP X22, X21, [X31 + 0x30]
	0x032C4D34 LDP X24, X23, [X31 + 0x20]
	0x032C4D38 LDP X26, X25, [X31 + 0x10]
	0x032C4D3C LDR X30, [X31], #0x50
	0x032C4D40 RET
	0x032C4D44 STR X23, [X20 + 0x8]
	0x032C4D48 B 0x32C4D1C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1119000
	005 Move W8, [X20+2200]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xE5A000
	012 Move X0, [X0+2720]
	013 Call 0x1C17CF4
	014 Move X0, 0xE5A000
	015 Move X0, [X0+2728]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2200], W8
	019 Compare X19, 0
	020 JumpIfEqual {35}
	021 Move X0, X19
	022 Move X1, X31
	023 Call Task.get_Status, X0
	024 NotImplemented "Instruction CMP not yet implemented."
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return 
	030 Move X0, X19
	031 Move X1, X31
	032 Call Task.GetExceptionDispatchInfos, X0
	033 Compare X0, 0
	034 JumpIfNotEqual {55}
	035 Call 0x1C17F20
	036 Move X0, X19
	037 Move X1, X31
	038 Call Task.GetCancellationExceptionDispatchInfo, X0
	039 Compare X0, 0
	040 JumpIfNotEqual {73}
	041 Move X0, 0xE31000
	042 Move X0, [X0+2208]
	043 Call 0x1C17D08
	044 Call 0x1C17F10
	045 Move X1, X19
	046 Move X2, X31
	047 Move X20, X0
	048 Call TaskCanceledException..ctor, X0, X1
	049 Move X0, 0xE62000
	050 Move X0, [X0+2176]
	051 Call 0x1C17D08
	052 Move X1, X0
	053 Move X0, X20
	054 Call 0x1C17DEC
	055 Move X8, 0xE5A000
	056 Move X8, [X8+2720]
	057 Move X20, X0
	058 Move X1, [X8]
	059 Call ReadOnlyCollection`1<Object>.get_Count, X0
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X0, X19
	062 Call 0x19913C0
	063 Move X0, X19
	064 Move X1, X31
	065 Call Task.get_Exception, X0
	066 Move X19, X0
	067 Move X0, 0xE62000
	068 Move X0, [X0+2176]
	069 Call 0x1C17D08
	070 Move X1, X0
	071 Move X0, X19
	072 Call 0x1C17DEC
	073 Move X20, X0
	074 Call 0x19913C0
	075 Move X0, X20
	076 Call ExceptionDispatchInfo.Throw, X0
	077 Move X0, X20
	078 Call 0x19913C0
	079 Move X8, 0xE5A000
	080 Move X8, [X8+2728]
	081 Move X0, X20
	082 Move W1, W31
	083 Move X2, [X8]
	084 Call 0x1BB6F68
	085 Move X19, X0
	086 Call 0x19913C0
	087 Move X0, X19
	088 Call ExceptionDispatchInfo.Throw, X0

Method: System.Void OnCompletedInternal(System.Threading.Tasks.Task task, System.Action continuation, System.Boolean continueOnCapturedContext, System.Boolean flowExecutionContext)

Disassembly:
	0x032C4A9C BL 0x2184E48
	0x032C4AA0 MOV X20, X0
	0x032C4AA4 CBZ X0, 0x32C4ABC
	0x032C4AA8 LDR X8, [X19]
	0x032C4AAC MOV X0, X20
	0x032C4AB0 LDR X1, [X8 + 0x40]
	0x032C4AB4 BL 0x1C16E00
	0x032C4AB8 CBZ X0, 0x32C4AF4
	0x032C4ABC LDR W8, [X19 + 0x18]
	0x032C4AC0 CMP X21, X8
	0x032C4AC4 B.CS 0x32C4AF0
	0x032C4AC8 STR X20, [X24, X21, LSL #3]
	0x032C4ACC ADD X21, X21, 0x1
	0x032C4AD0 CMP X21, W8, SXTW
	0x032C4AD4 B.LT 0x32C4A84
	0x032C4AD8 MOV X0, X19
	0x032C4ADC LDP X20, X19, [X31 + 0x30]
	0x032C4AE0 LDP X22, X21, [X31 + 0x20]
	0x032C4AE4 LDP X24, X23, [X31 + 0x10]
	0x032C4AE8 LDR X30, [X31], #0x40
	0x032C4AEC RET
	0x032C4AF0 BL 0x1C16F28
	0x032C4AF4 BL 0x1C16F44
	0x032C4AF8 MOV X1, X31
	0x032C4AFC BL 0x1C16DEC
	0x032C4B00 BL 0x1C16F20
	0x032C4B04 STP X30, X21, [X31 - 0x20]!
	0x032C4B08 STP X20, X19, [X31 + 0x10]
	0x032C4B0C ADRP X21, 0x1118000
	0x032C4B10 ADRP X20, 0xE61000
	0x032C4B14 ADRP X19, 0xE58000
	0x032C4B18 LDRB W8, [X21 + 0x8A2]
	0x032C4B1C LDR X20, [X20 + 0x908]
	0x032C4B20 LDR X19, [X19 + 0xF10]
	0x032C4B24 TBNZ X8, 0x0, 0x32C4B48
	0x032C4B28 ADRP X0, 0xE61000
	0x032C4B2C LDR X0, [X0 + 0x908]
	0x032C4B30 BL 0x1C16CF4
	0x032C4B34 ADRP X0, 0xE58000
	0x032C4B38 LDR X0, [X0 + 0xF10]
	0x032C4B3C BL 0x1C16CF4
	0x032C4B40 MOVZ W8, 0x1
	0x032C4B44 STRB W8, [X21 + 0x8A2]
	0x032C4B48 LDR X1, [X20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Compare X1, 0
	007 JumpIfEqual {36}
	008 Move X20, X0
	009 Move X0, X31
	010 Move W19, W3
	011 Move W21, W2
	012 Move X22, X1
	013 Call TaskTrace.get_Enabled
	014 Move TEMP, X0
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {22}
	018 Move X0, X20
	019 Move X1, X22
	020 Call TaskAwaiter.OutputWaitEtwEvents, X0, X1
	021 Move X22, X0
	022 Compare X20, 0
	023 JumpIfEqual {54}
	024 And W2, W21, 1
	025 And W3, W19, 1
	026 Move X0, X20
	027 Move X1, X22
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X4, X31
	033 Move X30, [X31+48]
	034 Call Task.SetContinuationForAwait, X0, X1, X2, X3
	035 Return 
	036 Move X0, 0xE35000
	037 Move X0, [X0+1320]
	038 Call 0x1C17D08
	039 Call 0x1C17F10
	040 Move X19, X0
	041 Move X0, 0xE62000
	042 Move X0, [X0+2160]
	043 Call 0x1C17D08
	044 Move X1, X0
	045 Move X0, X19
	046 Move X2, X31
	047 Call ArgumentNullException..ctor, X0, X1
	048 Move X0, 0xE62000
	049 Move X0, [X0+2168]
	050 Call 0x1C17D08
	051 Move X1, X0
	052 Move X0, X19
	053 Call 0x1C17DEC
	054 Call 0x1C17F20

Method: System.Action OutputWaitEtwEvents(System.Threading.Tasks.Task task, System.Action continuation)

Disassembly:
	0x032C4D4C STP X30, X21, [X31 - 0x20]!
	0x032C4D50 STP X20, X19, [X31 + 0x10]
	0x032C4D54 MOV X20, X1
	0x032C4D58 MOV X1, X31
	0x032C4D5C MOV X19, X2
	0x032C4D60 MOV X21, X0
	0x032C4D64 BL 0x33BDD8C
	0x032C4D68 STP X20, X19, [X21 + 0x10]
	0x032C4D6C LDP X20, X19, [X31 + 0x10]
	0x032C4D70 LDP X30, X21, [X31], #0x20
	0x032C4D74 RET
	0x032C4D78 STR X30, [X31 - 0x30]!
	0x032C4D7C STP X22, X21, [X31 + 0x10]
	0x032C4D80 STP X20, X19, [X31 + 0x20]
	0x032C4D84 ADRP X21, 0x1118000
	0x032C4D88 ADRP X22, 0xE61000
	0x032C4D8C LDRB W8, [X21 + 0x8A4]
	0x032C4D90 LDR X22, [X22 + 0x928]
	0x032C4D94 MOV X19, X2
	0x032C4D98 MOV X20, X1
	0x032C4D9C TBNZ X8, 0x0, 0x32C4DCC
	0x032C4DA0 ADRP X0, 0xE30000
	0x032C4DA4 LDR X0, [X0 + 0xE70]
	0x032C4DA8 BL 0x1C16CF4
	0x032C4DAC ADRP X0, 0xE61000
	0x032C4DB0 LDR X0, [X0 + 0x930]
	0x032C4DB4 BL 0x1C16CF4
	0x032C4DB8 ADRP X0, 0xE61000
	0x032C4DBC LDR X0, [X0 + 0x928]
	0x032C4DC0 BL 0x1C16CF4
	0x032C4DC4 MOVZ W8, 0x1
	0x032C4DC8 STRB W8, [X21 + 0x8A4]
	0x032C4DCC LDR X0, [X22]
	0x032C4DD0 BL 0x1C16F10
	0x032C4DD4 MOV X1, X31
	0x032C4DD8 MOV X21, X0
	0x032C4DDC BL 0x33BDD8C
	0x032C4DE0 CBZ X21, 0x32C4E30
	0x032C4DE4 ADRP X8, 0xE30000
	0x032C4DE8 LDR X8, [X8 + 0xE70]
	0x032C4DEC STP X20, X19, [X21 + 0x10]
	0x032C4DF0 ADRP X20, 0xE61000
	0x032C4DF4 LDR X0, [X8]
	0x032C4DF8 LDR X20, [X20 + 0x930]
	0x032C4DFC BL 0x1C16F10
	0x032C4E00 LDR X2, [X20]
	0x032C4E04 MOV X1, X21
	0x032C4E08 MOV X3, X31
	0x032C4E0C MOV X20, X0
	0x032C4E10 BL 0x3314368
	0x032C4E14 LDR X2, [X21 + 0x10]
	0x032C4E18 MOV X0, X19
	0x032C4E1C MOV X1, X20
	0x032C4E20 LDP X20, X19, [X31 + 0x20]
	0x032C4E24 LDP X22, X21, [X31 + 0x10]
	0x032C4E28 LDR X30, [X31], #0x30
	0x032C4E2C B 0x32C4E3C
	0x032C4E30 BL 0x1C16F20
	0x032C4E34 MOV X1, X31
	0x032C4E38 B 0x33BDD8C
	0x032C4E3C STP X30, X25, [X31 - 0x40]!
	0x032C4E40 STP X24, X23, [X31 + 0x10]
	0x032C4E44 STP X22, X21, [X31 + 0x20]
	0x032C4E48 STP X20, X19, [X31 + 0x30]
	0x032C4E4C ADRP X22, 0x1118000
	0x032C4E50 ADRP X25, 0xE61000
	0x032C4E54 ADRP X24, 0xE30000
	0x032C4E58 ADRP X23, 0xE61000
	0x032C4E5C LDRB W8, [X22 + 0x8A7]
	0x032C4E60 LDR X25, [X25 + 0x938]
	0x032C4E64 LDR X24, [X24 + 0xE70]
	0x032C4E68 LDR X23, [X23 + 0x940]
	0x032C4E6C MOV X19, X2
	0x032C4E70 MOV X20, X1
	0x032C4E74 MOV X21, X0
	0x032C4E78 TBNZ X8, 0x0, 0x32C4EA8
	0x032C4E7C ADRP X0, 0xE30000
	0x032C4E80 LDR X0, [X0 + 0xE70]
	0x032C4E84 BL 0x1C16CF4
	0x032C4E88 ADRP X0, 0xE61000
	0x032C4E8C LDR X0, [X0 + 0x940]
	0x032C4E90 BL 0x1C16CF4
	0x032C4E94 ADRP X0, 0xE61000
	0x032C4E98 LDR X0, [X0 + 0x938]
	0x032C4E9C BL 0x1C16CF4
	0x032C4EA0 MOVZ W8, 0x1
	0x032C4EA4 STRB W8, [X22 + 0x8A7]
	0x032C4EA8 LDR X0, [X25]
	0x032C4EAC BL 0x1C16F10
	0x032C4EB0 MOV X1, X21
	0x032C4EB4 MOV X2, X20
	0x032C4EB8 MOV X3, X19
	0x032C4EBC MOV X22, X0
	0x032C4EC0 BL 0x32C5090
	0x032C4EC4 LDR X0, [X24]
	0x032C4EC8 BL 0x1C16F10
	0x032C4ECC LDR X2, [X23]
	0x032C4ED0 MOV X1, X22
	0x032C4ED4 MOV X3, X31
	0x032C4ED8 MOV X19, X0
	0x032C4EDC BL 0x3314368
	0x032C4EE0 MOV X0, X19
	0x032C4EE4 LDP X20, X19, [X31 + 0x30]
	0x032C4EE8 LDP X22, X21, [X31 + 0x20]
	0x032C4EEC LDP X24, X23, [X31 + 0x10]
	0x032C4EF0 LDP X30, X25, [X31], #0x40
	0x032C4EF4 RET
	0x032C4EF8 STP X30, X23, [X31 - 0x30]!
	0x032C4EFC STP X22, X21, [X31 + 0x10]
	0x032C4F00 STP X20, X19, [X31 + 0x20]
	0x032C4F04 ADRP X23, 0x1118000
	0x032C4F08 LDRB W8, [X23 + 0x8A5]
	0x032C4F0C MOV X22, X3
	0x032C4F10 MOV X19, X2
	0x032C4F14 MOV X21, X1
	0x032C4F18 MOV X20, X0
	0x032C4F1C TBNZ X8, 0x0, 0x32C4F4C
	0x032C4F20 ADRP X0, 0xE57000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0x1119000
	008 Move X22, 0xE62000
	009 Move W8, [X19+2201]
	010 Move X22, [X22+2184]
	011 Move X20, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0xE31000
	018 Move X0, [X0+3696]
	019 Call 0x1C17CF4
	020 Move X0, 0xE38000
	021 Move X0, [X0+2024]
	022 Call 0x1C17CF4
	023 Move X0, 0xE31000
	024 Move X0, [X0+1976]
	025 Call 0x1C17CF4
	026 Move X0, 0xE62000
	027 Move X0, [X0+2192]
	028 Call 0x1C17CF4
	029 Move X0, 0xE62000
	030 Move X0, [X0+2184]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X19+2201], W8
	034 Move X0, [X22]
	035 Call 0x1C17F10
	036 Move X1, X31
	037 Move X19, X0
	038 Call Object..ctor, X0
	039 Compare X19, 0
	040 JumpIfEqual {138}
	041 Move X22, 0xE31000
	042 Move X22, [X22+1976]
	043 Move [X19+16], X21
	044 Move [X19+24], X20
	045 Move X0, [X22]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X20, 0x1116000
	051 Move W8, [X20+2190]
	052 Compare W8, 0
	053 JumpIfNotEqual {59}
	054 Move X0, 0xE31000
	055 Move X0, [X0+1976]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X20+2190], W8
	059 Move X0, [X22]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {65}
	063 Call 0x1C17DFC
	064 Move X0, [X22]
	065 Call 0x1C17D0C
	066 Move X21, [X0]
	067 Compare X21, 0
	068 JumpIfEqual {79}
	069 Move X0, [X21+40]
	070 Compare X0, 0
	071 JumpIfEqual {138}
	072 Move X1, X31
	073 Call TaskScheduler.get_Id, X0
	074 Move W20, W0
	075 Move X0, X21
	076 Move X1, X31
	077 Call Task.get_Id, X0
	078 Move W21, W0
	079 Move X20, 0xE38000
	080 Move X20, [X20+2024]
	081 Move X0, [X20]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {86}
	085 Call 0x1C17DFC
	086 Move X21, 0x1116000
	087 Move W8, [X21+2189]
	088 Compare W8, 0
	089 JumpIfNotEqual {95}
	090 Move X0, 0xE38000
	091 Move X0, [X0+2024]
	092 Call 0x1C17CF4
	093 Move W8, 1
	094 Move [X21+2189], W8
	095 Move X0, [X20]
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {101}
	099 Call 0x1C17DFC
	100 Move X0, [X20]
	101 Move X8, [X0+184]
	102 Move X0, [X8+8]
	103 Compare X0, 0
	104 JumpIfEqual {138}
	105 Move X1, X31
	106 Call TaskScheduler.get_Id, X0
	107 Move W20, W0
	108 Move W21, W31
	109 Move X0, [X19+16]
	110 Compare X0, 0
	111 JumpIfEqual {138}
	112 Move X22, 0xE31000
	113 Move X23, 0xE62000
	114 Move X22, [X22+3696]
	115 Move X23, [X23+2192]
	116 Move X1, X31
	117 Call Task.get_Id, X0
	118 Move W2, W0
	119 Move W0, W20
	120 Move W1, W21
	121 Move X3, X31
	122 Call TaskTrace.TaskWaitBegin_Asynchronous, X0, X1, X2
	123 Move X0, [X22]
	124 Call 0x1C17F10
	125 Move X2, [X23]
	126 Move X1, X19
	127 Move X3, X31
	128 Move X20, X0
	129 Call Action..ctor, X0, X1, X2
	130 Move X0, X20
	131 Move X20, [X31+32]
	132 Move X19, [X31+40]
	133 Move X22, [X31+16]
	134 Move X21, [X31+24]
	135 Move X30, [X31+48]
	136 Move X23, [X31+56]
	137 Return X0
	138 Call 0x1C17F20

