Type: System.Runtime.CompilerServices.AsyncMethodBuilderCore/MoveNextRunner

Method: System.Void .ctor(System.Threading.ExecutionContext context, System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x032C5D4C LDR X0, [X0 + 0x9B0]
	0x032C5D50 BL 0x1C16CF4
	0x032C5D54 MOVZ W8, 0x1
	0x032C5D58 STRB W8, [X22 + 0x8B4]
	0x032C5D5C ADRP X25, 0xE60000
	0x032C5D60 ADRP X22, 0xE60000
	0x032C5D64 ADRP X24, 0xE5C000
	0x032C5D68 ADRP X23, 0xE60000
	0x032C5D6C LDR X25, [X25 + 0x9A8]
	0x032C5D70 LDR X22, [X22 + 0x9A0]
	0x032C5D74 LDR X24, [X24 + 0x670]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X1
	006 Move X1, X31
	007 Move X19, X2
	008 Move X21, X0
	009 Call Object..ctor, X0
	010 Move [X21+16], X20
	011 Move [X21+24], X19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Move X21, [X31+40]
	016 Return 

Method: System.Void Run()

Disassembly:
	0x032C6170 LDP X30, X19, [X31], #0x10
	0x032C6174 RET
	0x032C6178 STP X30, X21, [X31 - 0x20]!
	0x032C617C STP X20, X19, [X31 + 0x10]
	0x032C6180 ADRP X21, 0x1116000
	0x032C6184 LDRB W8, [X21 + 0x8DB]
	0x032C6188 MOV W20, W1
	0x032C618C MOV X19, X0
	0x032C6190 TBNZ X8, 0x0, 0x32C61A8
	0x032C6194 ADRP X0, 0xE5F000
	0x032C6198 LDR X0, [X0 + 0x9B8]
	0x032C619C BL 0x1C16CF4
	0x032C61A0 MOVZ W8, 0x1
	0x032C61A4 STRB W8, [X21 + 0x8DB]
	0x032C61A8 TBZ X20, 0x0, 0x32C6218
	0x032C61AC LDR X20, [X19 + 0x10]
	0x032C61B0 STR X31, [X19 + 0x10]
	0x032C61B4 CBZ X20, 0x32C6218
	0x032C61B8 ADRP X10, 0xE5F000
	0x032C61BC LDR X8, [X20]
	0x032C61C0 LDR X10, [X10 + 0x9B8]
	0x032C61C4 LDRH W9, [X8 + 0x12E]
	0x032C61C8 LDR X1, [X10]
	0x032C61CC CBZ X9, 0x32C61F0
	0x032C61D0 LDR X10, [X8 + 0xB0]
	0x032C61D4 ADD X10, X10, 0x8
	0x032C61D8 LDUR X11, [X10 - 0x8]
	0x032C61DC CMP X11, X1
	0x032C61E0 B.EQ 0x32C6200
	0x032C61E4 SUBS X9, X9, 0x1
	0x032C61E8 ADD X10, X10, 0x10
	0x032C61EC B.NE 0x32C61D8
	0x032C61F0 MOV X0, X20
	0x032C61F4 MOV W2, W31
	0x032C61F8 BL 0x1C5C788
	0x032C61FC B 0x32C620C
	0x032C6200 LDRSW X9, [X10]
	0x032C6204 ADD X8, X8, X9, 0x4, LSL
	0x032C6208 ADD X0, X8, 0x138
	0x032C620C LDP X8, X1, [X0]
	0x032C6210 MOV X0, X20
	0x032C6214 BLR X8
	0x032C6218 STP X31, X31, [X19 + 0x10]
	0x032C621C STR X31, [X19 + 0x20]
	0x032C6220 LDP X20, X19, [X31 + 0x10]
	0x032C6224 LDP X30, X21, [X31], #0x20
	0x032C6228 RET
	0x032C622C B 0x32C6230
	0x032C6230 STR X30, [X31 - 0x20]!
	0x032C6234 STP X20, X19, [X31 + 0x10]
	0x032C6238 ADRP X20, 0x1116000
	0x032C623C LDRB W8, [X20 + 0x8B6]
	0x032C6240 MOV X19, X0
	0x032C6244 TBNZ X8, 0x0, 0x32C625C
	0x032C6248 ADRP X0, 0xE5F000
	0x032C624C LDR X0, [X0 + 0x9B8]
	0x032C6250 BL 0x1C16CF4
	0x032C6254 MOVZ W8, 0x1
	0x032C6258 STRB W8, [X20 + 0x8B6]
	0x032C625C LDR X8, [X19 + 0x10]
	0x032C6260 CBZ X8, 0x32C62E0
	0x032C6264 LDR X9, [X19 + 0x28]
	0x032C6268 CMP X9, 0x0
	0x032C626C CSEL X19, X31, X8, EQ
	0x032C6270 CBZ X9, 0x32C62E0
	0x032C6274 ADRP X10, 0xE5F000
	0x032C6278 LDR X8, [X19]
	0x032C627C LDR X10, [X10 + 0x9B8]
	0x032C6280 LDRH W9, [X8 + 0x12E]
	0x032C6284 LDR X1, [X10]
	0x032C6288 CBZ X9, 0x32C62AC
	0x032C628C LDR X10, [X8 + 0xB0]
	0x032C6290 ADD X10, X10, 0x8
	0x032C6294 LDUR X11, [X10 - 0x8]
	0x032C6298 CMP X11, X1
	0x032C629C B.EQ 0x32C62BC
	0x032C62A0 SUBS X9, X9, 0x1
	0x032C62A4 ADD X10, X10, 0x10
	0x032C62A8 B.NE 0x32C6294
	0x032C62AC MOVZ W2, 0x1
	0x032C62B0 MOV X0, X19
	0x032C62B4 BL 0x1C5C788
	0x032C62B8 B 0x32C62CC
	0x032C62BC LDR W9, [X10]
	0x032C62C0 ADD W9, W9, 0x1
	0x032C62C4 ADD X8, X8, W9, 0x4, SXTW
	0x032C62C8 ADD X0, X8, 0x138
	0x032C62CC LDP X2, X1, [X0]
	0x032C62D0 MOV X0, X19
	0x032C62D4 LDP X20, X19, [X31 + 0x10]
	0x032C62D8 LDR X30, [X31], #0x20
	0x032C62DC BR X2
	0x032C62E0 ADRP X0, 0xE56000
	0x032C62E4 LDR X0, [X0 + 0x4B8]
	0x032C62E8 BL 0x1C16D08
	0x032C62EC BL 0x1C16F10
	0x032C62F0 MOV X19, X0
	0x032C62F4 ADRP X0, 0xE5F000
	0x032C62F8 LDR X0, [X0 + 0x9C0]
	0x032C62FC BL 0x1C16D08
	0x032C6300 MOV X2, X0
	0x032C6304 MOV X0, X19
	0x032C6308 MOV X1, X31
	0x032C630C MOV X3, X31
	0x032C6310 BL 0x338C410
	0x032C6314 ADRP X0, 0xE5F000
	0x032C6318 LDR X0, [X0 + 0x9C8]
	0x032C631C BL 0x1C16D08
	0x032C6320 MOV X1, X0
	0x032C6324 MOV X0, X19
	0x032C6328 BL 0x1C16DEC
	0x032C632C B 0x32C6230
	0x032C6330 STP X30, X21, [X31 - 0x20]!
	0x032C6334 STP X20, X19, [X31 + 0x10]
	0x032C6338 ADRP X21, 0x1116000
	0x032C633C LDRB W8, [X21 + 0x8B7]
	0x032C6340 MOV X19, X1
	0x032C6344 MOV X20, X0
	0x032C6348 TBNZ X8, 0x0, 0x32C6360
	0x032C634C ADRP X0, 0xE2F000
	0x032C6350 LDR X0, [X0 + 0x278]
	0x032C6354 BL 0x1C16CF4
	0x032C6358 MOVZ W8, 0x1
	0x032C635C STRB W8, [X21 + 0x8B7]
	0x032C6360 MOVZ W3, 0x1
	0x032C6364 MOV X0, X20
	0x032C6368 MOV X1, X19
	0x032C636C MOV W2, W31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x1117000
	007 Move W8, [X20+2217]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {30}
	013 Move X0, 0xE60000
	014 Move X0, [X0+2376]
	015 Call 0x1C17CF4
	016 Move X0, 0xE56000
	017 Move X0, [X0+1408]
	018 Call 0x1C17CF4
	019 Move X0, 0xE56000
	020 Move X0, [X0+1416]
	021 Call 0x1C17CF4
	022 Move X0, 0xE60000
	023 Move X0, [X0+2384]
	024 Call 0x1C17CF4
	025 Move X0, 0xE60000
	026 Move X0, [X0+2336]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+2217], W8
	030 Move X21, [X19+16]
	031 Compare X21, 0
	032 JumpIfEqual {80}
	033 Move X22, 0xE60000
	034 Move X22, [X22+2336]
	035 Move X8, [X22]
	036 Move X8, [X8+184]
	037 Move X20, [X8]
	038 Compare X20, 0
	039 JumpIfNotEqual {55}
	040 Move X8, 0xE60000
	041 Move X8, [X8+2376]
	042 Move X0, [X8]
	043 Call 0x1C17F10
	044 Move X8, 0xE60000
	045 Move X8, [X8+2384]
	046 Move X20, X0
	047 Move X2, [X8]
	048 Move X1, X31
	049 Move X3, X31
	050 Call ContextCallback..ctor, X0, X1, X2
	051 Move X8, [X22]
	052 Move X8, [X8+184]
	053 Move [X8], X20
	054 Move X21, [X19+16]
	055 Move X8, 0xE56000
	056 Move X8, [X8+1408]
	057 Move X22, [X19+24]
	058 Move X0, [X8]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move W3, 1
	064 Move X0, X21
	065 Move X1, X20
	066 Move X2, X22
	067 Move X4, X31
	068 Call ExecutionContext.Run, X0, X1, X2, X3
	069 Move X20, X31
	070 Move W21, W31
	071 Move X0, [X19+16]
	072 Compare X0, 0
	073 JumpIfEqual {117}
	074 Move X1, X31
	075 Call ExecutionContext.Dispose, X0
	076 Compare X20, 0
	077 JumpIfNotEqual {118}
	078 Compare W21, 0
	079 JumpIfEqual {99}
	080 Move X19, [X19+24]
	081 Compare X19, 0
	082 JumpIfEqual {117}
	083 Move X10, 0xE56000
	084 Move X8, [X19]
	085 Move X10, [X10+1416]
	086 NotImplemented "Instruction LDRH not yet implemented."
	087 Move X1, [X10]
	088 Compare X9, 0
	089 JumpIfEqual {96}
	090 Move X10, [X8+176]
	091 Add X10, X10, 8
	092 NotImplemented "Instruction LDUR not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Subtract X9, X9, 1
	095 Add X10, X10, 16
	096 Move X0, X19
	097 Move W2, W31
	098 Call 0x1C5D788
	099 Move X20, [X31+32]
	100 Move X19, [X31+40]
	101 Move X22, [X31+16]
	102 Move X21, [X31+24]
	103 Move X30, [X31+48]
	104 Return 
	105 NotImplemented "Instruction LDRSW not yet implemented."
	106 Add X8, X8, X9
	107 Add X0, X8, 312
	108 Move X2, [X0]
	109 Move X1, [X0+8]
	110 Move X0, X19
	111 Move X20, [X31+32]
	112 Move X19, [X31+40]
	113 Move X22, [X31+16]
	114 Move X21, [X31+24]
	115 Move X30, [X31+48]
	116 CallNoReturn X2
	117 Call 0x1C17F20
	118 Move X0, X20
	119 Call 0x1C17F18
	120 Move X21, X0
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move X0, X21
	123 Call 0x3EB2AD0
	124 Move X20, [X0]
	125 Call 0x3EB2AE0
	126 Move W21, 1
	127 Move X20, X31
	128 Move X21, X0
	129 Move X0, [X19+16]
	130 Compare X0, 0
	131 JumpIfNotEqual {133}
	132 Call 0x1C17F20
	133 Move X1, X31
	134 Call ExecutionContext.Dispose, X0
	135 Compare X20, 0
	136 JumpIfNotEqual {139}
	137 Move X0, X21
	138 Call 0x1D2D690
	139 Move X0, X20
	140 Call 0x1C17F18
	141 Call 0x1991590

Method: System.Void InvokeMoveNext(System.Object stateMachine)

Disassembly:
	0x032C6370 BL 0x32C63A0
	0x032C6374 CBZ X0, 0x32C6390
	0x032C6378 ADRP X8, 0xE2F000
	0x032C637C LDR X8, [X8 + 0x278]
	0x032C6380 LDR X1, [X8]
	0x032C6384 LDR X8, [X0]
	0x032C6388 CMP X8, X1
	0x032C638C B.NE 0x32C639C
	0x032C6390 LDP X20, X19, [X31 + 0x10]
	0x032C6394 LDP X30, X21, [X31], #0x20
	0x032C6398 RET
	0x032C639C BL 0x1C171E0
	0x032C63A0 SUB X31, X31, 0x90
	0x032C63A4 STP X29, X30, [X31 + 0x30]
	0x032C63A8 STP X28, X27, [X31 + 0x40]
	0x032C63AC STP X26, X25, [X31 + 0x50]
	0x032C63B0 STP X24, X23, [X31 + 0x60]
	0x032C63B4 STP X22, X21, [X31 + 0x70]
	0x032C63B8 STP X20, X19, [X31 + 0x80]
	0x032C63BC ADRP X19, 0x1116000
	0x032C63C0 LDRB W8, [X19 + 0x8B9]
	0x032C63C4 MOV W23, W3
	0x032C63C8 MOV W22, W2
	0x032C63CC MOV X20, X1
	0x032C63D0 MOV X21, X0
	0x032C63D4 TBNZ X8, 0x0, 0x32C6458
	0x032C63D8 ADRP X0, 0xE5F000
	0x032C63DC LDR X0, [X0 + 0x9D0]
	0x032C63E0 BL 0x1C16CF4
	0x032C63E4 ADRP X0, 0xE5F000
	0x032C63E8 LDR X0, [X0 + 0x9D8]
	0x032C63EC BL 0x1C16CF4
	0x032C63F0 ADRP X0, 0xE5F000
	0x032C63F4 LDR X0, [X0 + 0x9A0]
	0x032C63F8 BL 0x1C16CF4
	0x032C63FC ADRP X0, 0xE5F000
	0x032C6400 LDR X0, [X0 + 0x9E0]
	0x032C6404 BL 0x1C16CF4
	0x032C6408 ADRP X0, 0xE5F000
	0x032C640C LDR X0, [X0 + 0x9A8]
	0x032C6410 BL 0x1C16CF4
	0x032C6414 ADRP X0, 0xE5A000
	0x032C6418 LDR X0, [X0 + 0xF80]
	0x032C641C BL 0x1C16CF4
	0x032C6420 ADRP X0, 0xE2D000
	0x032C6424 LDR X0, [X0 + 0xE18]
	0x032C6428 BL 0x1C16CF4
	0x032C642C ADRP X0, 0xE5F000
	0x032C6430 LDR X0, [X0 + 0x9B8]
	0x032C6434 BL 0x1C16CF4
	0x032C6438 ADRP X0, 0xE3A000
	0x032C643C LDR X0, [X0 + 0x2F0]
	0x032C6440 BL 0x1C16CF4
	0x032C6444 ADRP X0, 0xE2F000
	0x032C6448 LDR X0, [X0 + 0x278]
	0x032C644C BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x1117000
	006 Move W8, [X19+2218]
	007 Move X21, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xE56000
	013 Move X0, [X0+1416]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2218], W8
	017 Compare X21, 0
	018 JumpIfEqual {59}
	019 Move X20, 0xE56000
	020 Move X20, [X20+1416]
	021 Move X0, X21
	022 Move X19, [X20]
	023 Move X1, X19
	024 Call 0x1C17E00
	025 Compare X0, 0
	026 JumpIfEqual {60}
	027 Move X20, [X20]
	028 Move X0, X21
	029 Move X1, X20
	030 Call 0x1C17E00
	031 Compare X0, 0
	032 JumpIfEqual {63}
	033 Move X8, [X0]
	034 Move X19, X0
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 Compare X9, 0
	037 JumpIfEqual {44}
	038 Move X10, [X8+176]
	039 Add X10, X10, 8
	040 NotImplemented "Instruction LDUR not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Subtract X9, X9, 1
	043 Add X10, X10, 16
	044 Move X0, X19
	045 Move X1, X20
	046 Move W2, W31
	047 Call 0x1C5D788
	048 NotImplemented "Instruction LDRSW not yet implemented."
	049 Add X8, X8, X9
	050 Add X0, X8, 312
	051 Move X2, [X0]
	052 Move X1, [X0+8]
	053 Move X0, X19
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move X30, [X31+32]
	057 Move X21, [X31+40]
	058 CallNoReturn X2
	059 Call 0x1C17F20
	060 Move X0, X21
	061 Move X1, X19
	062 Call 0x1C181E0
	063 Move X0, X21
	064 Move X1, X20
	065 Call 0x1C181E0

