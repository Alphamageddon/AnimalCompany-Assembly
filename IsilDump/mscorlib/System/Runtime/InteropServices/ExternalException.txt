Type: System.Runtime.InteropServices.ExternalException

Method: System.Void .ctor()

Disassembly:
	0x032C04F0 CMP W0, W22
	0x032C04F4 B.NE 0x32C0470
	0x032C04F8 CBZ W25, 0x32C045C
	0x032C04FC LDR X8, [X19]
	0x032C0500 MOV X0, X19
	0x032C0504 LDP X20, X19, [X31 + 0x30]
	0x032C0508 LDP X22, X21, [X31 + 0x20]
	0x032C050C LDP X2, X1, [X8 + 0x1A8]
	0x032C0510 LDP X24, X23, [X31 + 0x10]
	0x032C0514 LDP X30, X25, [X31], #0x40
	0x032C0518 BR X2
	0x032C051C ADRP X0, 0xE5C000
	0x032C0520 LDR X0, [X0 + 0x4B8]
	0x032C0524 BL 0x1C16D08
	0x032C0528 BL 0x1C16F10
	0x032C052C MOV X19, X0
	0x032C0530 ADRP X0, 0xE65000
	0x032C0534 LDR X0, [X0 + 0x660]
	0x032C0538 BL 0x1C16D08
	0x032C053C MOV X2, X0
	0x032C0540 MOV X0, X19
	0x032C0544 MOV X1, X31
	0x032C0548 MOV X3, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x111D000
	006 Move X21, 0xE66000
	007 Move W8, [X20+2142]
	008 Move X21, [X21+1568]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE66000
	015 Move X0, [X0+1568]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2142], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Move X2, X31
	022 Call SystemException..ctor, X0, X1
	023 Move W8, 0x4005
	024 NotImplemented "Instruction MOVK not yet implemented."
	025 Move [X19+96], W8
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return 

Method: System.Void .ctor(System.String message)

Disassembly:
	0x032C054C BL 0x338C410
	0x032C0550 B 0x32C0570
	0x032C0554 ADRP X0, 0xE33000
	0x032C0558 LDR X0, [X0 + 0x5B0]
	0x032C055C BL 0x1C16D08
	0x032C0560 BL 0x1C16F10
	0x032C0564 MOV X1, X31
	0x032C0568 MOV X19, X0
	0x032C056C BL 0x337DEC0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X2, X31
	004 Move X19, X0
	005 Call SystemException..ctor, X0, X1
	006 Move W8, 0x4005
	007 NotImplemented "Instruction MOVK not yet implemented."
	008 Move [X19+96], W8
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return 

Method: System.Void .ctor(System.String message, System.Exception inner)

Disassembly:
	0x032C0570 ADRP X0, 0xE65000
	0x032C0574 LDR X0, [X0 + 0x688]
	0x032C0578 BL 0x1C16D08
	0x032C057C MOV X1, X0
	0x032C0580 MOV X0, X19
	0x032C0584 BL 0x1C16DEC
	0x032C0588 STR X1, [X0]
	0x032C058C RET
	0x032C0590 STP X30, X19, [X31 - 0x10]!

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X3, X31
	004 Move X19, X0
	005 Call SystemException..ctor, X0, X1, X2
	006 Move W8, 0x4005
	007 NotImplemented "Instruction MOVK not yet implemented."
	008 Move [X19+96], W8
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return 

Method: System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x032C0594 MOV X19, X0
	0x032C0598 MOVZ W2, 0x2

ISIL:
	001 Move X4, X31
	002 Call SystemException..ctor, X0, X1, X2
	003 Return 

Method: System.Int32 get_ErrorCode()

Disassembly:
	0x032C059C MOV X0, X1
	0x032C05A0 MOV X1, X31

ISIL:
	001 Move W0, [X0+96]
	002 Return X0

Method: System.String ToString()

Disassembly:
	0x032C05A4 BL 0x1C74338
	0x032C05A8 STR X0, [X19]
	0x032C05AC LDP X30, X19, [X31], #0x10
	0x032C05B0 RET
	0x032C05B4 STP X30, X19, [X31 - 0x10]!
	0x032C05B8 CMP W2, 0x4
	0x032C05BC MOVZ W8, 0x2
	0x032C05C0 MOV X19, X0
	0x032C05C4 CSEL W2, W2, W8, CC
	0x032C05C8 MOV X0, X1
	0x032C05CC MOV X1, X31
	0x032C05D0 BL 0x1C74338
	0x032C05D4 STR X0, [X19]
	0x032C05D8 LDP X30, X19, [X31], #0x10
	0x032C05DC RET
	0x032C05E0 B 0x1C74338
	0x032C05E4 LDR X0, [X0]
	0x032C05E8 MOV X1, X31
	0x032C05EC MOV X2, X31
	0x032C05F0 B 0x33C5D2C
	0x032C05F4 STP X30, X19, [X31 - 0x10]!
	0x032C05F8 MOV X19, X0
	0x032C05FC LDR X0, [X0]
	0x032C0600 MOV X1, X31
	0x032C0604 MOV X2, X31
	0x032C0608 BL 0x33C5D2C
	0x032C060C TBZ X0, 0x0, 0x32C061C
	0x032C0610 LDR X0, [X19]
	0x032C0614 LDP X30, X19, [X31], #0x10
	0x032C0618 B 0x1C74334
	0x032C061C ADRP X0, 0xE33000
	0x032C0620 LDR X0, [X0 + 0x5B0]
	0x032C0624 BL 0x1C16D08
	0x032C0628 BL 0x1C16F10
	0x032C062C MOV X19, X0
	0x032C0630 ADRP X0, 0xE65000
	0x032C0634 LDR X0, [X0 + 0x690]
	0x032C0638 BL 0x1C16D08
	0x032C063C MOV X1, X0
	0x032C0640 MOV X0, X19
	0x032C0644 MOV X2, X31
	0x032C0648 BL 0x337DF1C
	0x032C064C ADRP X0, 0xE65000
	0x032C0650 LDR X0, [X0 + 0x698]
	0x032C0654 BL 0x1C16D08
	0x032C0658 MOV X1, X0
	0x032C065C MOV X0, X19
	0x032C0660 BL 0x1C16DEC
	0x032C0664 B 0x1C74334
	0x032C0668 STP X30, X19, [X31 - 0x10]!
	0x032C066C LDR X8, [X0]
	0x032C0670 MOV X19, X0
	0x032C0674 MOV X0, X1
	0x032C0678 MOVN W2, 0x0
	0x032C067C MOV X1, X8
	0x032C0680 BL 0x1C74338
	0x032C0684 STR X0, [X19]
	0x032C0688 LDP X30, X19, [X31], #0x10
	0x032C068C RET
	0x032C0690 STP X30, X19, [X31 - 0x10]!
	0x032C0694 LDR X0, [X0]
	0x032C0698 BL 0x1C742D4
	0x032C069C MOV X19, X0
	0x032C06A0 MOVN W0, 0x0
	0x032C06A4 MOV X1, X31
	0x032C06A8 BL 0x33C6930
	0x032C06AC MOV X1, X0
	0x032C06B0 MOV X0, X19
	0x032C06B4 MOV X2, X31
	0x032C06B8 BL 0x33BE5B0
	0x032C06BC ANDS W31, W0, 0x1
	0x032C06C0 CSEL X19, X31, X19, NE
	0x032C06C4 TBNZ X0, 0x0, 0x32C06F4
	0x032C06C8 MOVN W0, 0x1
	0x032C06CC MOV X1, X31
	0x032C06D0 BL 0x33C6930
	0x032C06D4 MOV X1, X0
	0x032C06D8 MOV X0, X19
	0x032C06DC MOV X2, X31
	0x032C06E0 BL 0x33BE5B0
	0x032C06E4 TBNZ X0, 0x0, 0x32C0728
	0x032C06E8 MOV X0, X19
	0x032C06EC LDP X30, X19, [X31], #0x10
	0x032C06F0 RET
	0x032C06F4 ADRP X0, 0xE3B000
	0x032C06F8 LDR X0, [X0 + 0x578]
	0x032C06FC BL 0x1C16D08
	0x032C0700 BL 0x1C16F10
	0x032C0704 MOV X19, X0
	0x032C0708 ADRP X0, 0xE65000
	0x032C070C LDR X0, [X0 + 0x6A0]
	0x032C0710 BL 0x1C16D08
	0x032C0714 MOV X1, X0
	0x032C0718 MOV X0, X19
	0x032C071C MOV X2, X31
	0x032C0720 BL 0x3314A68
	0x032C0724 B 0x32C0758
	0x032C0728 ADRP X0, 0xE33000
	0x032C072C LDR X0, [X0 + 0x5B0]
	0x032C0730 BL 0x1C16D08
	0x032C0734 BL 0x1C16F10
	0x032C0738 MOV X19, X0
	0x032C073C ADRP X0, 0xE65000
	0x032C0740 LDR X0, [X0 + 0x6A8]
	0x032C0744 BL 0x1C16D08
	0x032C0748 MOV X1, X0
	0x032C074C MOV X0, X19
	0x032C0750 MOV X2, X31
	0x032C0754 BL 0x337DF1C
	0x032C0758 ADRP X0, 0xE65000
	0x032C075C LDR X0, [X0 + 0x6B0]
	0x032C0760 BL 0x1C16D08
	0x032C0764 MOV X1, X0
	0x032C0768 MOV X0, X19
	0x032C076C BL 0x1C16DEC
	0x032C0770 B 0x1C742D4
	0x032C0774 MOVZ W2, 0x2
	0x032C0778 MOV X1, X31
	0x032C077C B 0x1C74338
	0x032C0780 CMP W1, 0x4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x111D000
	009 Move W8, [X20+2143]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {35}
	015 Move X0, 0xE36000
	016 Move X0, [X0+3144]
	017 Call 0x1C17CF4
	018 Move X0, 0xE66000
	019 Move X0, [X0+1576]
	020 Call 0x1C17CF4
	021 Move X0, 0xE38000
	022 Move X0, [X0+2344]
	023 Call 0x1C17CF4
	024 Move X0, 0xE66000
	025 Move X0, [X0+1584]
	026 Call 0x1C17CF4
	027 Move X0, 0xE66000
	028 Move X0, [X0+1592]
	029 Call 0x1C17CF4
	030 Move X0, 0xE35000
	031 Move X0, [X0+1544]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X20+2143], W8
	035 Move X8, [X19]
	036 Move X0, X19
	037 Move X9, [X8+392]
	038 Move X1, [X8+400]
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move X20, X0
	041 Move X0, X19
	042 Move X1, X31
	043 Call Exception.GetType, X0
	044 Compare X0, 0
	045 JumpIfEqual {141}
	046 Move X8, [X0]
	047 Move X21, 0xE36000
	048 Move X21, [X21+3144]
	049 Move X24, 0xE66000
	050 Move X9, [X8+360]
	051 Move X1, [X8+368]
	052 Move X23, 0xE66000
	053 Move X22, 0xE35000
	054 Move X24, [X24+1584]
	055 Move X23, [X23+1592]
	056 Move X22, [X22+1544]
	057 NotImplemented "Instruction BLR not yet implemented."
	058 Move W9, [X19+96]
	059 Move X8, [X21]
	060 Move X21, X0
	061 Move [X31+12], W9
	062 Move W9, [X8+224]
	063 Compare W9, 0
	064 JumpIfNotEqual {67}
	065 Move X0, X8
	066 Call 0x1C17DFC
	067 Move X0, X31
	068 Call CultureInfo.get_InvariantCulture
	069 Move X1, [X24]
	070 Move X2, X0
	071 Add X0, X31, 12
	072 Move X3, X31
	073 Call Int32.ToString, X0, X1, X2
	074 Move X1, [X23]
	075 Move X3, [X22]
	076 Move X2, X0
	077 Move X0, X21
	078 Move X4, X31
	079 Call String.Concat, X0, X1, X2, X3
	080 Move X21, X0
	081 Move X0, X20
	082 Move X1, X31
	083 Call String.IsNullOrEmpty, X0
	084 Move TEMP, X0
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfEqual {96}
	088 Move X8, 0xE38000
	089 Move X8, [X8+2344]
	090 Move X0, X21
	091 Move X2, X20
	092 Move X3, X31
	093 Move X1, [X8]
	094 Call String.Concat, X0, X1, X2
	095 Move X21, X0
	096 Move X0, [X19+40]
	097 Compare X0, 0
	098 JumpIfEqual {111}
	099 Move X8, [X0]
	100 Move X20, 0xE66000
	101 Move X9, [X8+360]
	102 Move X1, [X8+368]
	103 Move X20, [X20+1576]
	104 NotImplemented "Instruction BLR not yet implemented."
	105 Move X1, [X20]
	106 Move X2, X0
	107 Move X0, X21
	108 Move X3, X31
	109 Call String.Concat, X0, X1, X2
	110 Move X21, X0
	111 Move X8, [X19]
	112 Move X0, X19
	113 Move X9, [X8+440]
	114 Move X1, [X8+448]
	115 NotImplemented "Instruction BLR not yet implemented."
	116 Compare X0, 0
	117 JumpIfEqual {132}
	118 Move X0, X31
	119 Call Environment.get_NewLine
	120 Move X8, [X19]
	121 Move X20, X0
	122 Move X0, X19
	123 Move X9, [X8+440]
	124 Move X1, [X8+448]
	125 NotImplemented "Instruction BLR not yet implemented."
	126 Move X2, X0
	127 Move X0, X21
	128 Move X1, X20
	129 Move X3, X31
	130 Call String.Concat, X0, X1, X2
	131 Move X21, X0
	132 Move X0, X21
	133 Move X20, [X31+48]
	134 Move X19, [X31+56]
	135 Move X22, [X31+32]
	136 Move X21, [X31+40]
	137 Move X24, [X31+16]
	138 Move X23, [X31+24]
	139 Move X30, [X31+64]
	140 Return X0
	141 Call 0x1C17F20

