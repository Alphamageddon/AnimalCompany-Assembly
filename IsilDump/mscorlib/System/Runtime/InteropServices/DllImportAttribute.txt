Type: System.Runtime.InteropServices.DllImportAttribute

Method: System.Attribute GetCustomAttribute(System.Reflection.RuntimeMethodInfo method)

Disassembly:
	0x032C0E5C LDP X22, X21, [X31 + 0x20]
	0x032C0E60 LDP X24, X23, [X31 + 0x10]
	0x032C0E64 LDR X30, [X31], #0x40
	0x032C0E68 B 0x1C74E88
	0x032C0E6C BL 0x1C16F20
	0x032C0E70 BL 0x1C16F28
	0x032C0E74 STR X30, [X31 - 0x40]!
	0x032C0E78 STP X24, X23, [X31 + 0x10]
	0x032C0E7C STP X22, X21, [X31 + 0x20]
	0x032C0E80 STP X20, X19, [X31 + 0x30]
	0x032C0E84 ADRP X24, 0x111C000
	0x032C0E88 ADRP X23, 0xE5B000
	0x032C0E8C LDRB W8, [X24 + 0x871]
	0x032C0E90 LDR X23, [X23 + 0x850]
	0x032C0E94 MOV W19, W3
	0x032C0E98 MOV W21, W2
	0x032C0E9C MOV X20, X1
	0x032C0EA0 MOV X22, X0
	0x032C0EA4 TBNZ X8, 0x0, 0x32C0EBC
	0x032C0EA8 ADRP X0, 0xE5B000
	0x032C0EAC LDR X0, [X0 + 0x850]
	0x032C0EB0 BL 0x1C16CF4
	0x032C0EB4 MOVZ W8, 0x1
	0x032C0EB8 STRB W8, [X24 + 0x871]
	0x032C0EBC LDR X0, [X23]
	0x032C0EC0 LDR W8, [X0 + 0xE0]
	0x032C0EC4 CBNZ W8, 0x32C0ECC
	0x032C0EC8 BL 0x1C16DFC
	0x032C0ECC MOV X0, X20
	0x032C0ED0 MOV W1, W21
	0x032C0ED4 BL 0x32C09F8
	0x032C0ED8 TBZ X0, 0x0, 0x32C0F10
	0x032C0EDC LDR X0, [X23]
	0x032C0EE0 LDR W8, [X0 + 0xE0]
	0x032C0EE4 CBNZ W8, 0x32C0EEC
	0x032C0EE8 BL 0x1C16DFC
	0x032C0EEC MOV X0, X22
	0x032C0EF0 MOV W1, W21
	0x032C0EF4 MOV X2, X20
	0x032C0EF8 MOV W3, W19
	0x032C0EFC LDP X20, X19, [X31 + 0x30]
	0x032C0F00 LDP X22, X21, [X31 + 0x20]
	0x032C0F04 LDP X24, X23, [X31 + 0x10]
	0x032C0F08 LDR X30, [X31], #0x40
	0x032C0F0C B 0x32C0C08
	0x032C0F10 CBZ X20, 0x32C0F60
	0x032C0F14 LDR W8, [X20 + 0x18]
	0x032C0F18 CMP W8, W21
	0x032C0F1C B.LS 0x32C0F64
	0x032C0F20 LDR X0, [X23]
	0x032C0F24 ADD X9, X20, W21, 0x1, SXTW
	0x032C0F28 ADD X23, X9, 0x20
	0x032C0F2C LDR W8, [X0 + 0xE0]
	0x032C0F30 CBNZ W8, 0x32C0F38
	0x032C0F34 BL 0x1C16DFC
	0x032C0F38 MOV X0, X22
	0x032C0F3C MOV W1, W21
	0x032C0F40 MOV X2, X20
	0x032C0F44 MOV W3, W19
	0x032C0F48 MOV X4, X23
	0x032C0F4C LDP X20, X19, [X31 + 0x30]
	0x032C0F50 LDP X22, X21, [X31 + 0x20]
	0x032C0F54 LDP X24, X23, [X31 + 0x10]
	0x032C0F58 LDR X30, [X31], #0x40
	0x032C0F5C B 0x1C74E88
	0x032C0F60 BL 0x1C16F20
	0x032C0F64 BL 0x1C16F28
	0x032C0F68 STR X30, [X31 - 0x40]!
	0x032C0F6C STP X24, X23, [X31 + 0x10]
	0x032C0F70 STP X22, X21, [X31 + 0x20]
	0x032C0F74 STP X20, X19, [X31 + 0x30]
	0x032C0F78 ADRP X24, 0x111C000
	0x032C0F7C ADRP X23, 0xE5B000
	0x032C0F80 LDRB W8, [X24 + 0x872]
	0x032C0F84 LDR X23, [X23 + 0x850]
	0x032C0F88 MOV W19, W3
	0x032C0F8C MOV W21, W2
	0x032C0F90 MOV X20, X1
	0x032C0F94 MOV X22, X0
	0x032C0F98 TBNZ X8, 0x0, 0x32C0FB0
	0x032C0F9C ADRP X0, 0xE5B000
	0x032C0FA0 LDR X0, [X0 + 0x850]
	0x032C0FA4 BL 0x1C16CF4
	0x032C0FA8 MOVZ W8, 0x1
	0x032C0FAC STRB W8, [X24 + 0x872]
	0x032C0FB0 LDR X0, [X23]
	0x032C0FB4 LDR W8, [X0 + 0xE0]
	0x032C0FB8 CBNZ W8, 0x32C0FC0
	0x032C0FBC BL 0x1C16DFC
	0x032C0FC0 MOV X0, X20
	0x032C0FC4 MOV W1, W21
	0x032C0FC8 BL 0x32C09F8
	0x032C0FCC TBZ X0, 0x0, 0x32C1004
	0x032C0FD0 LDR X0, [X23]
	0x032C0FD4 LDR W8, [X0 + 0xE0]
	0x032C0FD8 CBNZ W8, 0x32C0FE0
	0x032C0FDC BL 0x1C16DFC
	0x032C0FE0 MOV X0, X22
	0x032C0FE4 MOV W1, W21
	0x032C0FE8 MOV X2, X20
	0x032C0FEC MOV W3, W19
	0x032C0FF0 LDP X20, X19, [X31 + 0x30]
	0x032C0FF4 LDP X22, X21, [X31 + 0x20]
	0x032C0FF8 LDP X24, X23, [X31 + 0x10]
	0x032C0FFC LDR X30, [X31], #0x40
	0x032C1000 B 0x32C0C08
	0x032C1004 CBZ X20, 0x32C1054
	0x032C1008 LDR W8, [X20 + 0x18]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0x111D000
	014 Move W8, [X20+2150]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xE66000
	021 Move X0, [X0+1656]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+2150], W8
	025 Move [X31+24], X31
	026 Move [X31+8], X31
	027 Compare X19, 0
	028 JumpIfEqual {121}
	029 Move X8, [X19]
	030 Move X0, X19
	031 Move X9, [X8+600]
	032 Move X1, [X8+608]
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Move TEMP, X0
	035 And TEMP, TEMP, 0x2000
	036 Compare TEMP, 0x2000
	037 JumpIfEqual {39}
	038 Move X19, X31
	039 Move [X31+8], X31
	040 Move X8, [X19]
	041 Move X0, X19
	042 Move X9, [X8+568]
	043 Move X1, [X8+576]
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Add X1, X31, 4
	046 Add X2, X31, 24
	047 Add X3, X31, 8
	048 Move X0, X19
	049 Move X4, X31
	050 Move [X31+4], W31
	051 Call RuntimeMethodInfo.GetPInvoke, X0, X1, X2, X3
	052 Move W22, [X31+4]
	053 Move X9, -41062400
	054 Add X9, X9, 1544
	055 And X8, X22, 7
	056 Move W21, [X9]
	057 And W8, W22, 1792
	058 NotImplemented "Instruction CMP not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move W23, 5
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move W8, 1
	065 NotImplemented "Instruction CINC not yet implemented."
	066 Move W23, 3
	067 Move W23, 4
	068 Move W23, 2
	069 Move X8, [X19]
	070 And W9, W22, 48
	071 NotImplemented "Instruction CMP not yet implemented."
	072 NotImplemented "Instruction CSET not yet implemented."
	073 Move X9, [X8+616]
	074 Move X1, [X8+624]
	075 And W8, W22, 0x3000
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X0, X19
	078 NotImplemented "Instruction CSET not yet implemented."
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Move X8, 0xE66000
	081 Move X26, [X31+8]
	082 Move X27, [X31+24]
	083 Move X8, [X8+1656]
	084 Move W20, W0
	085 Move X8, [X8]
	086 Move X0, X8
	087 Call 0x1C17F10
	088 Move X1, X31
	089 Move X19, X0
	090 And W28, W22, 1
	091 Move W22, W22
	092 ShiftRight W22, 6
	093 And W22, W22, 63
	094 Move W20, W20
	095 ShiftRight W20, 7
	096 And W20, W20, 127
	097 Call Attribute..ctor, X0
	098 Move [X19+16], X26
	099 Move [X19+24], X27
	100 Move [X19+32], W21
	101 Move [X19+37], W28
	102 Move [X19+36], W22
	103 Move [X19+38], W20
	104 Move [X19+40], W23
	105 Move [X19+44], W24
	106 Move [X19+45], W25
	107 Move X0, X19
	108 Move X20, [X31+96]
	109 Move X19, [X31+104]
	110 Move X22, [X31+80]
	111 Move X21, [X31+88]
	112 Move X24, [X31+64]
	113 Move X23, [X31+72]
	114 Move X26, [X31+48]
	115 Move X25, [X31+56]
	116 Move X28, [X31+32]
	117 Move X27, [X31+40]
	118 Move X30, [X31+16]
	119 Add X31, X31, 112
	120 Return X0
	121 Call 0x1C17F20

Method: System.Boolean IsDefined(System.Reflection.RuntimeMethodInfo method)

Disassembly:
	0x032C1098 LDR X21, [X21 + 0x850]
	0x032C109C MOV W20, W31
	0x032C10A0 LDR X0, [X21]
	0x032C10A4 LDR W8, [X0 + 0xE0]
	0x032C10A8 CBNZ W8, 0x32C10B0
	0x032C10AC BL 0x1C16DFC
	0x032C10B0 MOV X0, X19
	0x032C10B4 MOV X1, X31
	0x032C10B8 BL 0x33C6948
	0x032C10BC LDRB W8, [X0, W20, SXTW]

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {13}
	004 Move X8, [X0]
	005 Move X9, [X8+600]
	006 Move X1, [X8+608]
	007 NotImplemented "Instruction BLR not yet implemented."
	008 Move W0, W0
	009 ShiftRight W0, 13
	010 And W0, W0, 0x1FFF
	011 Move X30, [X31+16]
	012 Return X0
	013 Call 0x1C17F20

Method: System.Void .ctor(System.String dllName, System.String entryPoint, System.Runtime.InteropServices.CharSet charSet, System.Boolean exactSpelling, System.Boolean setLastError, System.Boolean preserveSig, System.Runtime.InteropServices.CallingConvention callingConvention, System.Boolean bestFitMapping, System.Boolean throwOnUnmappableChar)

Disassembly:
	0x032C100C CMP W8, W21
	0x032C1010 B.LS 0x32C1058
	0x032C1014 LDR X0, [X23]
	0x032C1018 ADD X9, X20, W21, 0x2, SXTW
	0x032C101C ADD X23, X9, 0x20
	0x032C1020 LDR W8, [X0 + 0xE0]
	0x032C1024 CBNZ W8, 0x32C102C
	0x032C1028 BL 0x1C16DFC
	0x032C102C MOV X0, X22
	0x032C1030 MOV W1, W21
	0x032C1034 MOV X2, X20
	0x032C1038 MOV W3, W19
	0x032C103C MOV X4, X23
	0x032C1040 LDP X20, X19, [X31 + 0x30]
	0x032C1044 LDP X22, X21, [X31 + 0x20]
	0x032C1048 LDP X24, X23, [X31 + 0x10]
	0x032C104C LDR X30, [X31], #0x40
	0x032C1050 B 0x1C74E88
	0x032C1054 BL 0x1C16F20
	0x032C1058 BL 0x1C16F28
	0x032C105C B 0x1C7443C
	0x032C1060 B 0x1C74440
	0x032C1064 B 0x1C74440
	0x032C1068 STP X30, X21, [X31 - 0x20]!
	0x032C106C STP X20, X19, [X31 + 0x10]
	0x032C1070 ADRP X20, 0x111B000
	0x032C1074 LDRB W8, [X20 + 0x873]
	0x032C1078 MOV X19, X0
	0x032C107C TBNZ X8, 0x0, 0x32C1094
	0x032C1080 ADRP X0, 0xE5A000
	0x032C1084 LDR X0, [X0 + 0x850]
	0x032C1088 BL 0x1C16CF4
	0x032C108C MOVZ W8, 0x1
	0x032C1090 STRB W8, [X20 + 0x873]
	0x032C1094 ADRP X21, 0xE5A000

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move W8, [X31+104]
	013 Move W9, [X31+96]
	014 Move X22, X1
	015 Move X1, X31
	016 Move W19, W7
	017 Move W20, W3
	018 Move X21, X2
	019 Move X23, X0
	020 And W24, W4, 1
	021 And W25, W5, 1
	022 And W26, W6, 1
	023 And W27, W9, 1
	024 And W28, W8, 1
	025 Call Attribute..ctor, X0
	026 Move [X23+16], X22
	027 Move [X23+24], X21
	028 Move [X23+32], W20
	029 Move [X23+37], W24
	030 Move [X23+36], W25
	031 Move [X23+38], W26
	032 Move [X23+40], W19
	033 Move [X23+44], W27
	034 Move [X23+45], W28
	035 Move X20, [X31+80]
	036 Move X19, [X31+88]
	037 Move X22, [X31+64]
	038 Move X21, [X31+72]
	039 Move X24, [X31+48]
	040 Move X23, [X31+56]
	041 Move X26, [X31+32]
	042 Move X25, [X31+40]
	043 Move X28, [X31+16]
	044 Move X27, [X31+24]
	045 Move X30, [X31+96]
	046 Return 

Method: System.Void .ctor(System.String dllName)

Disassembly:
	0x032C10C0 CBZ W8, 0x32C10F8
	0x032C10C4 LDR X0, [X21]
	0x032C10C8 LDR W8, [X0 + 0xE0]
	0x032C10CC CBNZ W8, 0x32C10D4
	0x032C10D0 BL 0x1C16DFC
	0x032C10D4 MOV X0, X19
	0x032C10D8 MOV W1, W20
	0x032C10DC MOV X2, X31
	0x032C10E0 BL 0x33C694C
	0x032C10E4 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Attribute..ctor, X0
	008 Move [X20+16], X19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.String get_Value()

Disassembly:
	0x032C10E8 BL 0x33C6948
	0x032C10EC ADD W20, W20, 0x1

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

