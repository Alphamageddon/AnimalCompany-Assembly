Type: System.Runtime.InteropServices.SafeHandle

Method: System.Void .ctor(System.IntPtr invalidHandleValue, System.Boolean ownsHandle)

Disassembly:
	0x032C1158 TBNZ X8, 0x0, 0x32C1170
	0x032C115C ADRP X0, 0xE5A000
	0x032C1160 LDR X0, [X0 + 0x850]
	0x032C1164 BL 0x1C16CF4
	0x032C1168 MOVZ W8, 0x1
	0x032C116C STRB W8, [X20 + 0x874]
	0x032C1170 ADRP X21, 0xE5A000
	0x032C1174 LDR X21, [X21 + 0x850]
	0x032C1178 MOV W20, W31
	0x032C117C LDR X0, [X21]
	0x032C1180 LDR W8, [X0 + 0xE0]
	0x032C1184 CBNZ W8, 0x32C118C
	0x032C1188 BL 0x1C16DFC
	0x032C118C MOV X0, X19
	0x032C1190 MOV W1, W20
	0x032C1194 BL 0x32C121C
	0x032C1198 ANDS W31, W0, 0xFFFF
	0x032C119C B.EQ 0x32C11C8
	0x032C11A0 LDR X0, [X21]
	0x032C11A4 LDR W8, [X0 + 0xE0]
	0x032C11A8 CBNZ W8, 0x32C11B0
	0x032C11AC BL 0x1C16DFC
	0x032C11B0 MOV X0, X19
	0x032C11B4 MOV W1, W20
	0x032C11B8 MOV W2, W31
	0x032C11BC BL 0x32C11D4
	0x032C11C0 ADD W20, W20, 0x2
	0x032C11C4 B 0x32C117C
	0x032C11C8 LDP X20, X19, [X31 + 0x10]
	0x032C11CC LDP X30, X21, [X31], #0x20
	0x032C11D0 RET
	0x032C11D4 STR X30, [X31 - 0x20]!
	0x032C11D8 STP X20, X19, [X31 + 0x10]
	0x032C11DC MOV W20, W1
	0x032C11E0 MOV X1, X31
	0x032C11E4 MOV W19, W2
	0x032C11E8 STRH W2, [X31 + 0xC]
	0x032C11EC BL 0x33C6948

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x111C000
	008 Move W8, [X23+2151]
	009 Move W20, W2
	010 Move X21, X1
	011 Move X19, X0
	012 And W22, W2, 1
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xE3A000
	018 Move X0, [X0+3088]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+2151], W8
	022 Move X0, X19
	023 Move X1, X31
	024 Call Object..ctor, X0
	025 Move W8, 4
	026 Move [X19+16], X21
	027 Move [X19+24], W8
	028 Move [X19+28], W22
	029 Move TEMP, X20
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {43}
	033 Move X8, 0xE3A000
	034 Move X8, [X8+3088]
	035 Move X0, [X8]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move X1, X31
	042 Call GC.SuppressFinalize, X0
	043 Move W8, 1
	044 Move [X19+29], W8
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X30, [X31+48]
	050 Move X23, [X31+56]
	051 Return 

Method: System.Void Finalize()

Disassembly:
	0x032C11F8 STRH W19, [X0]
	0x032C11FC B 0x32C1210
	0x032C1200 ADD X1, X31, 0xC
	0x032C1204 MOVZ W2, 0x2
	0x032C1208 MOV X3, X31
	0x032C120C BL 0x33A8924
	0x032C1210 LDP X20, X19, [X31 + 0x10]
	0x032C1214 LDR X30, [X31], #0x20
	0x032C1218 RET
	0x032C121C SUB X31, X31, 0x20
	0x032C1220 STP X30, X19, [X31 + 0x10]
	0x032C1224 MOV W19, W1
	0x032C1228 MOV X1, X31
	0x032C122C STRH W31, [X31 + 0xC]
	0x032C1230 BL 0x33C6948
	0x032C1234 ADD X1, X0, W19, SXTW
	0x032C1238 TBZ X1, 0x0, 0x32C1250
	0x032C123C ADD X0, X31, 0xC
	0x032C1240 MOVZ W2, 0x2
	0x032C1244 MOV X3, X31
	0x032C1248 BL 0x33A8924
	0x032C124C ADD X1, X31, 0xC
	0x032C1250 LDRH W0, [X1]
	0x032C1254 LDP X30, X19, [X31 + 0x10]
	0x032C1258 ADD X31, X31, 0x20
	0x032C125C RET
	0x032C1260 STP X30, X21, [X31 - 0x20]!
	0x032C1264 STP X20, X19, [X31 + 0x10]
	0x032C1268 ADRP X20, 0x111B000
	0x032C126C ADRP X21, 0xE5A000
	0x032C1270 LDRB W8, [X20 + 0x875]
	0x032C1274 LDR X21, [X21 + 0x850]
	0x032C1278 MOV X19, X0
	0x032C127C TBNZ X8, 0x0, 0x32C1294
	0x032C1280 ADRP X0, 0xE5A000
	0x032C1284 LDR X0, [X0 + 0x850]
	0x032C1288 BL 0x1C16CF4
	0x032C128C MOVZ W8, 0x1
	0x032C1290 STRB W8, [X20 + 0x875]
	0x032C1294 LDR X0, [X21]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X0]
	006 Move X19, X0
	007 Move X9, [X8+408]
	008 Move X2, [X8+416]
	009 Move W1, W31
	010 NotImplemented "Instruction BLR not yet implemented."
	011 Move X0, X19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X1, X31
	015 Move X30, [X31+32]
	016 Move X21, [X31+40]
	017 Call Object.Finalize, X0
	018 Return 
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X21, X0
	021 Move X0, X21
	022 Call 0x3EB2AD0
	023 Move X20, [X0]
	024 Call 0x3EB2AE0
	025 Move X0, X19
	026 Move X1, X31
	027 Call Object.Finalize, X0
	028 Compare X20, 0
	029 JumpIfNotEqual {36}
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return 
	035 Move X20, X31
	036 Move X0, X20
	037 Call 0x1C17F18
	038 Move X21, X0
	039 Move X0, X19
	040 Move X1, X31
	041 Call Object.Finalize, X0
	042 Compare X20, 0
	043 JumpIfNotEqual {46}
	044 Move X0, X21
	045 Call 0x1D2D690
	046 Move X0, X20
	047 Call 0x1C17F18
	048 Call 0x1991590

Method: System.Void SetHandle(System.IntPtr handle)

Disassembly:
	0x032C1298 LDR W8, [X0 + 0xE0]
	0x032C129C CBNZ W8, 0x32C12A4

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.IntPtr DangerousGetHandle()

Disassembly:
	0x032C12A0 BL 0x1C16DFC
	0x032C12A4 MOV X0, X19

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Boolean get_IsClosed()

Disassembly:
	0x032C12A8 BL 0x32C1068
	0x032C12AC MOV X0, X19
	0x032C12B0 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move W8, [X0+24]
	002 And W0, W8, 1
	003 Return X0

Method: System.Boolean get_IsInvalid()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void Close()

Disassembly:
	0x032C12B4 LDP X30, X21, [X31], #0x20
	0x032C12B8 B 0x1C74440
	0x032C12BC STP X30, X21, [X31 - 0x20]!
	0x032C12C0 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move X8, [X0]
	002 Move W1, 1
	003 Move X3, [X8+408]
	004 Move X2, [X8+416]
	005 CallNoReturn X3

Method: System.Void Dispose()

Disassembly:
	0x032C12C4 ADRP X20, 0x111B000
	0x032C12C8 ADRP X21, 0xE5A000
	0x032C12CC LDRB W8, [X20 + 0x876]
	0x032C12D0 LDR X21, [X21 + 0x850]

ISIL:
	001 Move X8, [X0]
	002 Move W1, 1
	003 Move X3, [X8+408]
	004 Move X2, [X8+416]
	005 CallNoReturn X3

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x032C12D4 MOV X19, X0
	0x032C12D8 TBNZ X8, 0x0, 0x32C12F0
	0x032C12DC ADRP X0, 0xE5A000
	0x032C12E0 LDR X0, [X0 + 0x850]
	0x032C12E4 BL 0x1C16CF4
	0x032C12E8 MOVZ W8, 0x1
	0x032C12EC STRB W8, [X20 + 0x876]

ISIL:
	001 Move TEMP, X1
	002 And TEMP, TEMP, 1
	003 Compare TEMP, 1
	004 JumpIfNotEqual {5}
	005 Move W8, [X0+29]
	006 Compare W8, 0
	007 JumpIfEqual {11}
	008 Move W1, 1
	009 Call SafeHandle.DangerousReleaseInternal, X0, X1
	010 Return 
	011 Return 

Method: System.Boolean ReleaseHandle()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void SetHandleAsInvalid()

Disassembly:
	0x032C13A4 B 0x1C7462C
	0x032C13A8 BL 0x1C16F20
	0x032C13AC B 0x1C7462C
	0x032C13B0 B 0x1C7475C
	0x032C13B4 STP X30, X21, [X31 - 0x20]!
	0x032C13B8 STP X20, X19, [X31 + 0x10]
	0x032C13BC ADRP X20, 0x111B000
	0x032C13C0 LDRB W8, [X20 + 0x878]
	0x032C13C4 MOV X19, X0
	0x032C13C8 TBNZ X8, 0x0, 0x32C13E0
	0x032C13CC ADRP X0, 0xE5A000
	0x032C13D0 LDR X0, [X0 + 0x850]
	0x032C13D4 BL 0x1C16CF4
	0x032C13D8 MOVZ W8, 0x1
	0x032C13DC STRB W8, [X20 + 0x878]
	0x032C13E0 ADRP X21, 0xE5A000
	0x032C13E4 LDR X21, [X21 + 0x850]
	0x032C13E8 CBZ X19, 0x32C13FC
	0x032C13EC BL 0x1C4CA08
	0x032C13F0 LDR W20, [X19 + 0x10]
	0x032C13F4 ADD X19, X19, W0, SXTW
	0x032C13F8 B 0x32C1400
	0x032C13FC MOV W20, W31
	0x032C1400 LDR X0, [X21]
	0x032C1404 LDR W8, [X0 + 0xE0]
	0x032C1408 CBNZ W8, 0x32C1410
	0x032C140C BL 0x1C16DFC
	0x032C1410 MOV X0, X19
	0x032C1414 MOV W1, W20
	0x032C1418 LDP X20, X19, [X31 + 0x10]
	0x032C141C LDP X30, X21, [X31], #0x20
	0x032C1420 B 0x1C7475C
	0x032C1424 B 0x1C4CA08

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x111C000
	007 Move W8, [X20+2152]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xE3A000
	014 Move X0, [X0+3088]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+2152], W8
	018 Move X22, 0xE3A000
	019 Move X22, [X22+3088]
	020 Add X20, X19, 24
	021 Move W21, [X20]
	022 Move X0, X20
	023 Move X3, X31
	024 Or W1, W21, 1
	025 Move W2, W21
	026 Call Interlocked.CompareExchange, X0, X1, X2
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X0, [X22]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X1, X31
	039 Move X30, [X31+48]
	040 Call GC.SuppressFinalize, X0
	041 Return 

Method: System.Void DangerousAddRef(ref System.Boolean success)

Disassembly:
	0x032C0948 LDP X30, X21, [X31], #0x20
	0x032C094C RET
	0x032C0950 LDR X20, [X20]
	0x032C0954 MOV X0, X19
	0x032C0958 BL 0x1C16E08
	0x032C095C LDR X1, [X0]
	0x032C0960 MOV X0, X20
	0x032C0964 LDP X20, X19, [X31 + 0x10]
	0x032C0968 MOV X2, X31
	0x032C096C LDP X30, X21, [X31], #0x20
	0x032C0970 B 0x33BE5B0
	0x032C0974 MOV X1, X31
	0x032C0978 B 0x33C24FC
	0x032C097C B 0x32C083C
	0x032C0980 RET
	0x032C0984 B 0x1C74434
	0x032C0988 B 0x1C16F14
	0x032C098C STP X30, X21, [X31 - 0x20]!
	0x032C0990 STP X20, X19, [X31 + 0x10]
	0x032C0994 ADRP X21, 0x111C000
	0x032C0998 ADRP X20, 0xE5B000
	0x032C099C LDRB W8, [X21 + 0x86B]
	0x032C09A0 LDR X20, [X20 + 0x850]
	0x032C09A4 MOV W19, W0
	0x032C09A8 TBNZ X8, 0x0, 0x32C09C0
	0x032C09AC ADRP X0, 0xE5B000
	0x032C09B0 LDR X0, [X0 + 0x850]
	0x032C09B4 BL 0x1C16CF4
	0x032C09B8 MOVZ W8, 0x1
	0x032C09BC STRB W8, [X21 + 0x86B]
	0x032C09C0 MOV W0, W19
	0x032C09C4 MOV X1, X31
	0x032C09C8 BL 0x33C6930
	0x032C09CC LDR X8, [X20]
	0x032C09D0 MOV X19, X0
	0x032C09D4 LDR W9, [X8 + 0xE0]
	0x032C09D8 CBNZ W9, 0x32C09E4
	0x032C09DC MOV X0, X8
	0x032C09E0 BL 0x1C16DFC
	0x032C09E4 MOV X0, X19
	0x032C09E8 LDP X20, X19, [X31 + 0x10]
	0x032C09EC LDP X30, X21, [X31], #0x20
	0x032C09F0 B 0x1C16F14
	0x032C09F4 B 0x1C74EDC
	0x032C09F8 STP X30, X19, [X31 - 0x10]!
	0x032C09FC TBNZ X1, 0x1F, 0x32C0A1C
	0x032C0A00 CBZ X0, 0x32C0A28
	0x032C0A04 MOV W19, W1
	0x032C0A08 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+29]
	006 Compare W8, 0
	007 JumpIfEqual {53}
	008 Move X20, X0
	009 Add X20, X20, 24
	010 Move W21, [X20]
	011 Move TEMP, X21
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {27}
	015 Move X19, X1
	016 Add W1, W21, 4
	017 Move X0, X20
	018 Move W2, W21
	019 Move X3, X31
	020 Call Interlocked.CompareExchange, X0, X1, X2
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move W21, [X20]
	023 Move TEMP, X21
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfNotEqual {16}
	027 Move X0, 0xE5D000
	028 Move X0, [X0+1208]
	029 Call 0x1C17D08
	030 Call 0x1C17F10
	031 Move X19, X0
	032 Move X0, 0xE66000
	033 Move X0, [X0+1632]
	034 Call 0x1C17D08
	035 Move X2, X0
	036 Move X0, X19
	037 Move X1, X31
	038 Move X3, X31
	039 Call ObjectDisposedException..ctor, X0, X1, X2
	040 Move X0, 0xE66000
	041 Move X0, [X0+1640]
	042 Call 0x1C17D08
	043 Move X1, X0
	044 Move X0, X19
	045 Call 0x1C17DEC
	046 Move W8, 1
	047 Move [X19], W8
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Move X21, [X31+40]
	052 Return 
	053 Move X0, 0xE34000
	054 Move X0, [X0+1456]
	055 Call 0x1C17D08
	056 Call 0x1C17F10
	057 Move X1, X31
	058 Move X19, X0
	059 Call InvalidOperationException..ctor, X0

Method: System.Void DangerousRelease()

Disassembly:
	0x032C0AB4 MOV X4, X31
	0x032C0AB8 B 0x32C0AF8

ISIL:
	001 Move W1, W31
	002 Call SafeHandle.DangerousReleaseInternal, X0, X1
	003 Return 

Method: System.Void InternalDispose()

Disassembly:
	0x032C12F0 LDR X0, [X21]
	0x032C12F4 LDR W8, [X0 + 0xE0]
	0x032C12F8 CBNZ W8, 0x32C1300
	0x032C12FC BL 0x1C16DFC
	0x032C1300 MOV X0, X19
	0x032C1304 BL 0x32C1144
	0x032C1308 MOV X0, X19
	0x032C130C LDP X20, X19, [X31 + 0x10]
	0x032C1310 LDP X30, X21, [X31], #0x20
	0x032C1314 B 0x1C74440
	0x032C1318 CBZ X0, 0x32C1320
	0x032C131C LDR W0, [X0 + 0x60]
	0x032C1320 RET
	0x032C1324 B 0x1C748FC
	0x032C1328 B 0x1C74900
	0x032C132C B 0x1C612E0
	0x032C1330 B 0x1C612EC
	0x032C1334 B 0x1C7446C
	0x032C1338 B 0x1C7448C
	0x032C133C STR X30, [X31 - 0x20]!
	0x032C1340 STP X20, X19, [X31 + 0x10]
	0x032C1344 ADRP X20, 0x111B000
	0x032C1348 LDRB W8, [X20 + 0x877]
	0x032C134C MOV X19, X0
	0x032C1350 TBNZ X8, 0x0, 0x32C1368
	0x032C1354 ADRP X0, 0xE5A000
	0x032C1358 LDR X0, [X0 + 0x850]
	0x032C135C BL 0x1C16CF4
	0x032C1360 MOVZ W8, 0x1
	0x032C1364 STRB W8, [X20 + 0x877]
	0x032C1368 CBZ X19, 0x32C13A8
	0x032C136C ADRP X20, 0xE5A000
	0x032C1370 LDR X20, [X20 + 0x850]
	0x032C1374 MOV X0, X19
	0x032C1378 MOV X1, X31
	0x032C137C BL 0x33BE520
	0x032C1380 LDR X8, [X20]
	0x032C1384 MOV X19, X0
	0x032C1388 LDR W9, [X8 + 0xE0]
	0x032C138C CBNZ W9, 0x32C1398

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x111C000
	005 Move W8, [X20+2153]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE3A000
	012 Move X0, [X0+3088]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2153], W8
	016 Move W8, [X19+29]
	017 Compare W8, 0
	018 JumpIfEqual {36}
	019 Move X20, 0xE3A000
	020 Move X20, [X20+3088]
	021 Move W1, 1
	022 Move X0, X19
	023 Call SafeHandle.DangerousReleaseInternal, X0, X1
	024 Move X0, [X20]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X1, X31
	033 Move X30, [X31+32]
	034 Call GC.SuppressFinalize, X0
	035 Return 
	036 Move X0, 0xE33000
	037 Move X0, [X0+1456]
	038 Call 0x1C17D08
	039 Call 0x1C17F10
	040 Move X1, X31
	041 Move X19, X0
	042 Call InvalidOperationException..ctor, X0
	043 Move X0, 0xE65000
	044 Move X0, [X0+1664]
	045 Call 0x1C17D08
	046 Move X1, X0
	047 Move X0, X19
	048 Call 0x1C17DEC

Method: System.Void InternalFinalize()

Disassembly:
	0x032C1390 MOV X0, X8
	0x032C1394 BL 0x1C16DFC
	0x032C1398 MOV X0, X19
	0x032C139C LDP X20, X19, [X31 + 0x10]
	0x032C13A0 LDR X30, [X31], #0x20

ISIL:
	001 Move W8, [X0+29]
	002 Compare W8, 0
	003 JumpIfEqual {7}
	004 Move W1, 1
	005 Call SafeHandle.DangerousReleaseInternal, X0, X1
	006 Return 
	007 Return 

Method: System.Void DangerousReleaseInternal(System.Boolean dispose)

Disassembly:
	0x032C1428 STP X30, X21, [X31 - 0x20]!
	0x032C142C STP X20, X19, [X31 + 0x10]
	0x032C1430 ADRP X20, 0x111B000
	0x032C1434 ADRP X21, 0xE5A000
	0x032C1438 LDRB W8, [X20 + 0x879]
	0x032C143C LDR X21, [X21 + 0x850]
	0x032C1440 MOV W19, W0
	0x032C1444 TBNZ X8, 0x0, 0x32C145C
	0x032C1448 ADRP X0, 0xE5A000
	0x032C144C LDR X0, [X0 + 0x850]
	0x032C1450 BL 0x1C16CF4
	0x032C1454 MOVZ W8, 0x1
	0x032C1458 STRB W8, [X20 + 0x879]
	0x032C145C LDR X0, [X21]
	0x032C1460 LDR W8, [X0 + 0xE0]
	0x032C1464 CBNZ W8, 0x32C146C
	0x032C1468 BL 0x1C16DFC
	0x032C146C MOV W0, W19
	0x032C1470 LDP X20, X19, [X31 + 0x10]
	0x032C1474 LDP X30, X21, [X31], #0x20
	0x032C1478 B 0x32C098C
	0x032C147C STR X30, [X31 - 0x60]!
	0x032C1480 STP X28, X27, [X31 + 0x10]
	0x032C1484 STP X26, X25, [X31 + 0x20]
	0x032C1488 STP X24, X23, [X31 + 0x30]
	0x032C148C STP X22, X21, [X31 + 0x40]
	0x032C1490 STP X20, X19, [X31 + 0x50]
	0x032C1494 ADRP X21, 0x111B000
	0x032C1498 LDRB W8, [X21 + 0x87A]
	0x032C149C MOV X20, X1
	0x032C14A0 MOV X19, X0
	0x032C14A4 TBNZ X8, 0x0, 0x32C14BC
	0x032C14A8 ADRP X0, 0xE5A000
	0x032C14AC LDR X0, [X0 + 0x850]
	0x032C14B0 BL 0x1C16CF4
	0x032C14B4 MOVZ W8, 0x1
	0x032C14B8 STRB W8, [X21 + 0x87A]
	0x032C14BC CBZ X19, 0x32C15F4
	0x032C14C0 MOV X0, X19
	0x032C14C4 MOV X1, X31
	0x032C14C8 BL 0x3248FBC
	0x032C14CC CBZ X20, 0x32C163C
	0x032C14D0 MOV W22, W0
	0x032C14D4 LDR X8, [X20 + 0x18]
	0x032C14D8 LDR X0, [X20 + 0x40]
	0x032C14DC LDR X2, [X20 + 0x28]
	0x032C14E0 UBFM W9, W22, 0x1F, 0x1E
	0x032C14E4 ADD W1, W9, 0x2
	0x032C14E8 BLR X8
	0x032C14EC MOV X20, X0
	0x032C14F0 MOV X0, X19
	0x032C14F4 MOV X1, X31
	0x032C14F8 BL 0x3249058
	0x032C14FC ADRP X23, 0xE5A000
	0x032C1500 LDR X23, [X23 + 0x850]
	0x032C1504 MOV X19, X0
	0x032C1508 CMP W22, 0x1
	0x032C150C B.LT 0x32C158C
	0x032C1510 CBZ X19, 0x32C1644
	0x032C1514 MOV W8, W22
	0x032C1518 MOV X21, X31
	0x032C151C MOV X24, X31
	0x032C1520 MOVZ X25, 0x1
	0x032C1524 UBFM X26, X8, 0x3F, 0x3E
	0x032C1528 MOVZ X27, 0x2
	0x032C152C LDR W8, [X19 + 0x18]
	0x032C1530 CMP X21, X8
	0x032C1534 B.CS 0x32C15F0
	0x032C1538 ADD X9, X21, 0x1
	0x032C153C CMP X9, X8
	0x032C1540 B.CS 0x32C15EC
	0x032C1544 LDR X0, [X23]
	0x032C1548 ADD X8, X19, X24, 0x20, ASR
	0x032C154C LDRB W28, [X8 + 0x20]
	0x032C1550 ADD X8, X24, X25
	0x032C1554 ADD X8, X19, X8, 0x20, ASR
	0x032C1558 LDR W9, [X0 + 0xE0]
	0x032C155C LDRB W22, [X8 + 0x20]
	0x032C1560 CBNZ W9, 0x32C1568
	0x032C1564 BL 0x1C16DFC
	0x032C1568 BFM W22, W28, 0x18, 0x7
	0x032C156C MOV X0, X20
	0x032C1570 MOV W1, W21
	0x032C1574 MOV W2, W22
	0x032C1578 BL 0x32C11D4
	0x032C157C ADD X21, X21, 0x2
	0x032C1580 CMP X26, X21
	0x032C1584 ADD X24, X24, X27

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move W8, [X0+29]
	010 Compare W8, 0
	011 JumpIfEqual {102}
	012 Move X21, X0
	013 Add X21, X21, 24
	014 Move W22, [X21]
	015 Move X19, X0
	016 Move W20, W1
	017 Xor W23, W1, 1
	018 Move TEMP, X22
	019 And TEMP, TEMP, 2
	020 Compare TEMP, 2
	021 JumpIfNotEqual {43}
	022 Move TEMP, X23
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {43}
	026 Move X20, [X31+48]
	027 Move X19, [X31+56]
	028 Move X22, [X31+32]
	029 Move X21, [X31+40]
	030 Move X24, [X31+16]
	031 Move X23, [X31+24]
	032 Move X30, [X31+64]
	033 Move X25, [X31+72]
	034 Return 
	035 Move W22, [X21]
	036 And W31, W22, 2
	037 NotImplemented "Instruction CSET not yet implemented."
	038 Or W8, W8, W23
	039 Move TEMP, X8
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {26}
	043 And W24, W22, 0x7FFFFFFC
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Compare W24, 0
	046 JumpIfNotEqual {61}
	047 Move TEMP, X22
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {61}
	051 Move W8, [X19+28]
	052 Compare W8, 0
	053 JumpIfEqual {61}
	054 Move X8, [X19]
	055 Move X0, X19
	056 Move X9, [X8+392]
	057 Move X1, [X8+400]
	058 NotImplemented "Instruction BLR not yet implemented."
	059 NotImplemented "Instruction ORN not yet implemented."
	060 And W25, W8, 1
	061 Move W25, W31
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Subtract W8, W22, 4
	064 NotImplemented "Instruction CSET not yet implemented."
	065 Or W8, W8, W9
	066 Or W9, W8, 2
	067 And W31, W20, 1
	068 NotImplemented "Instruction CSEL not yet implemented."
	069 Move X0, X21
	070 Move W2, W22
	071 Move X3, X31
	072 Call Interlocked.CompareExchange, X0, X1, X2
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Compare W25, 0
	075 JumpIfEqual {26}
	076 Move X8, [X19]
	077 Move X0, X19
	078 Move X20, [X31+48]
	079 Move X19, [X31+56]
	080 Move X22, [X31+32]
	081 Move X21, [X31+40]
	082 Move X2, [X8+424]
	083 Move X1, [X8+432]
	084 Move X24, [X31+16]
	085 Move X23, [X31+24]
	086 Move X30, [X31+64]
	087 Move X25, [X31+72]
	088 CallNoReturn X2
	089 Move X0, 0xE5C000
	090 Move X0, [X0+1208]
	091 Call 0x1C17D08
	092 Call 0x1C17F10
	093 Move X19, X0
	094 Move X0, 0xE65000
	095 Move X0, [X0+1632]
	096 Call 0x1C17D08
	097 Move X2, X0
	098 Move X0, X19
	099 Move X1, X31
	100 Move X3, X31
	101 Call ObjectDisposedException..ctor, X0, X1, X2
	102 Move X0, 0xE33000
	103 Move X0, [X0+1456]
	104 Call 0x1C17D08
	105 Call 0x1C17F10
	106 Move X1, X31
	107 Move X19, X0
	108 Call InvalidOperationException..ctor, X0
	109 Move X0, 0xE65000
	110 Move X0, [X0+1672]
	111 Call 0x1C17D08
	112 Move X1, X0
	113 Move X0, X19
	114 Call 0x1C17DEC

