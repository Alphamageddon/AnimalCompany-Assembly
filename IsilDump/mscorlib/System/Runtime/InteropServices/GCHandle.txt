Type: System.Runtime.InteropServices.GCHandle

Method: System.Void .ctor(System.IntPtr h)

Disassembly:
	0x032C1588 B.NE 0x32C152C
	0x032C158C CBZ X19, 0x32C1640

ISIL:
	001 Move [X0], X1
	002 Return 

Method: System.Void .ctor(System.Object obj)

Disassembly:
	0x032C1590 LDR X0, [X23]
	0x032C1594 LDR W8, [X0 + 0xE0]
	0x032C1598 CBNZ W8, 0x32C15A0
	0x032C159C BL 0x1C16DFC
	0x032C15A0 LDR W1, [X19 + 0x18]
	0x032C15A4 MOV X0, X20
	0x032C15A8 MOV W2, W31
	0x032C15AC BL 0x32C11D4
	0x032C15B0 MOV X21, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move W2, 2
	005 Move X0, X1
	006 Move X1, X31
	007 Call 0x1C75338
	008 Move [X19], X0
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return 

Method: System.Void .ctor(System.Object value, System.Runtime.InteropServices.GCHandleType type)

Disassembly:
	0x032C15B4 LDR W8, [X19 + 0x18]
	0x032C15B8 SUBS W9, W8, 0x1
	0x032C15BC B.LT 0x32C1678
	0x032C15C0 ADD X9, X9, X19
	0x032C15C4 ADD X9, X9, 0x20
	0x032C15C8 SUBS W10, W8, 0x2
	0x032C15CC STRB W31, [X9]
	0x032C15D0 B.LT 0x32C1678
	0x032C15D4 LDR W11, [X19 + 0x18]
	0x032C15D8 SUB X9, X9, 0x1
	0x032C15DC SUB W8, W8, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move W8, 2
	005 Move X19, X0
	006 NotImplemented "Instruction CSEL not yet implemented."
	007 Move X0, X1
	008 Move X1, X31
	009 Call 0x1C75338
	010 Move [X19], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 Return 

Method: System.Boolean get_IsAllocated()

Disassembly:
	0x032C15E4 B.CC 0x32C15C8
	0x032C15E8 BL 0x1C16F28
	0x032C15EC BL 0x1C16F28
	0x032C15F0 BL 0x1C16F28

ISIL:
	001 Move X0, [X0]
	002 Move X1, X31
	003 Move X2, X31
	004 Call IntPtr.op_Inequality, X0, X1
	005 Return X0

Method: System.Object get_Target()

Disassembly:
	0x032C15F4 ADRP X0, 0xE37000
	0x032C15F8 LDR X0, [X0 + 0x528]
	0x032C15FC BL 0x1C16D08
	0x032C1600 BL 0x1C16F10
	0x032C1604 MOV X19, X0
	0x032C1608 ADRP X0, 0xE5B000
	0x032C160C LDR X0, [X0 + 0xCC0]
	0x032C1610 BL 0x1C16D08
	0x032C1614 MOV X1, X0
	0x032C1618 MOV X0, X19
	0x032C161C MOV X2, X31
	0x032C1620 BL 0x330E100
	0x032C1624 ADRP X0, 0xE64000
	0x032C1628 LDR X0, [X0 + 0x6E8]
	0x032C162C BL 0x1C16D08
	0x032C1630 MOV X1, X0
	0x032C1634 MOV X0, X19
	0x032C1638 BL 0x1C16DEC
	0x032C163C BL 0x1C16F20
	0x032C1640 BL 0x1C16F20
	0x032C1644 BL 0x1C16F20
	0x032C1648 B 0x32C164C
	0x032C164C MOV X19, X31
	0x032C1650 B 0x32C1660
	0x032C1654 B 0x32C1660
	0x032C1658 B 0x32C1660
	0x032C165C B 0x32C1660
	0x032C1660 CMP W1, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0]
	005 Move X1, X31
	006 Move X2, X31
	007 Call IntPtr.op_Inequality, X0, X1
	008 Move TEMP, X0
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfNotEqual {17}
	012 Move X0, [X19]
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Call 0x1C75334
	016 Return X0
	017 Move X0, 0xE33000
	018 Move X0, [X0+1456]
	019 Call 0x1C17D08
	020 Call 0x1C17F10
	021 Move X19, X0
	022 Move X0, 0xE65000
	023 Move X0, [X0+1680]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X19
	027 Move X2, X31
	028 Call InvalidOperationException..ctor, X0, X1
	029 Move X0, 0xE65000
	030 Move X0, [X0+1688]
	031 Call 0x1C17D08
	032 Move X1, X0
	033 Move X0, X19
	034 Call 0x1C17DEC

Method: System.Void set_Target(System.Object value)

Disassembly:
	0x032C1668 BL 0x3EB1AD0
	0x032C166C LDR X21, [X0]
	0x032C1670 BL 0x3EB1AE0
	0x032C1674 CBNZ X19, 0x32C15B4
	0x032C1678 CBNZ X21, 0x32C169C
	0x032C167C MOV X0, X20
	0x032C1680 LDP X20, X19, [X31 + 0x50]
	0x032C1684 LDP X22, X21, [X31 + 0x40]
	0x032C1688 LDP X24, X23, [X31 + 0x30]
	0x032C168C LDP X26, X25, [X31 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move X19, X0
	005 Move X0, X1
	006 Move TEMP, 0
	007 Not TEMP
	008 Move W2, TEMP
	009 Move X1, X8
	010 Call 0x1C75338
	011 Move [X19], X0
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Return 

Method: System.IntPtr AddrOfPinnedObject()

Disassembly:
	0x032C1690 LDP X28, X27, [X31 + 0x10]
	0x032C1694 LDR X30, [X31], #0x60
	0x032C1698 RET
	0x032C169C MOV X0, X21
	0x032C16A0 BL 0x1C16F18
	0x032C16A4 MOV X21, X31
	0x032C16A8 B 0x32C16AC
	0x032C16AC CBZ X19, 0x32C16E8
	0x032C16B0 LDR W8, [X19 + 0x18]
	0x032C16B4 SUBS W9, W8, 0x1
	0x032C16B8 B.LT 0x32C16E8
	0x032C16BC ADD X9, X9, X19
	0x032C16C0 ADD X9, X9, 0x20
	0x032C16C4 SUBS W10, W8, 0x2
	0x032C16C8 STRB W31, [X9]
	0x032C16CC B.LT 0x32C16E8
	0x032C16D0 LDR W11, [X19 + 0x18]
	0x032C16D4 SUB X9, X9, 0x1
	0x032C16D8 SUB W8, W8, 0x1
	0x032C16DC CMP W10, W11
	0x032C16E0 B.CC 0x32C16C4
	0x032C16E4 BL 0x1C16F28
	0x032C16E8 CBNZ X21, 0x32C16F0
	0x032C16EC BL 0x1D2C690
	0x032C16F0 MOV X0, X21
	0x032C16F4 BL 0x1C16F18
	0x032C16F8 BL 0x1990590
	0x032C16FC STP X30, X21, [X31 - 0x20]!
	0x032C1700 STP X20, X19, [X31 + 0x10]
	0x032C1704 ADRP X20, 0x111B000
	0x032C1708 LDRB W8, [X20 + 0x87B]
	0x032C170C MOV X19, X0
	0x032C1710 TBNZ X8, 0x0, 0x32C1740
	0x032C1714 ADRP X0, 0xE64000
	0x032C1718 LDR X0, [X0 + 0x6F0]
	0x032C171C BL 0x1C16CF4
	0x032C1720 ADRP X0, 0xE5A000
	0x032C1724 LDR X0, [X0 + 0x850]
	0x032C1728 BL 0x1C16CF4
	0x032C172C ADRP X0, 0xE64000
	0x032C1730 LDR X0, [X0 + 0x6F8]
	0x032C1734 BL 0x1C16CF4
	0x032C1738 MOVZ W8, 0x1
	0x032C173C STRB W8, [X20 + 0x87B]
	0x032C1740 CBZ X19, 0x32C1798
	0x032C1744 ADRP X8, 0xE64000
	0x032C1748 LDR X8, [X8 + 0x6F8]
	0x032C174C ADRP X20, 0xE64000
	0x032C1750 ADRP X21, 0xE5A000
	0x032C1754 LDR X0, [X8]
	0x032C1758 LDR X20, [X20 + 0x6F0]
	0x032C175C LDR X21, [X21 + 0x850]
	0x032C1760 BL 0x1C16F10
	0x032C1764 LDR X2, [X20]
	0x032C1768 MOV X1, X31
	0x032C176C MOV X20, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, [X0]
	004 Call 0x1C752D4
	005 Move X19, X0
	006 Move TEMP, 0
	007 Not TEMP
	008 Move W0, TEMP
	009 Move X1, X31
	010 Call IntPtr.op_Explicit, X0
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call IntPtr.op_Equality, X0, X1
	015 And W31, W0, 1
	016 NotImplemented "Instruction CSEL not yet implemented."
	017 Move TEMP, X0
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {38}
	021 Move TEMP, 1
	022 Not TEMP
	023 Move W0, TEMP
	024 Move X1, X31
	025 Call IntPtr.op_Explicit, X0
	026 Move X1, X0
	027 Move X0, X19
	028 Move X2, X31
	029 Call IntPtr.op_Equality, X0, X1
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {50}
	034 Move X0, X19
	035 Move X30, [X31+16]
	036 Move X19, [X31+24]
	037 Return X0
	038 Move X0, 0xE3B000
	039 Move X0, [X0+1400]
	040 Call 0x1C17D08
	041 Call 0x1C17F10
	042 Move X19, X0
	043 Move X0, 0xE65000
	044 Move X0, [X0+1696]
	045 Call 0x1C17D08
	046 Move X1, X0
	047 Move X0, X19
	048 Move X2, X31
	049 Call ArgumentException..ctor, X0, X1
	050 Move X0, 0xE33000
	051 Move X0, [X0+1456]
	052 Call 0x1C17D08
	053 Call 0x1C17F10
	054 Move X19, X0
	055 Move X0, 0xE65000
	056 Move X0, [X0+1704]
	057 Call 0x1C17D08
	058 Move X1, X0
	059 Move X0, X19
	060 Move X2, X31
	061 Call InvalidOperationException..ctor, X0, X1
	062 Move X0, 0xE65000
	063 Move X0, [X0+1712]
	064 Call 0x1C17D08
	065 Move X1, X0
	066 Move X0, X19
	067 Call 0x1C17DEC

Method: System.Runtime.InteropServices.GCHandle Alloc(System.Object value)

Disassembly:
	0x032C1774 LDR X0, [X21]
	0x032C1778 LDR W8, [X0 + 0xE0]
	0x032C177C CBNZ W8, 0x32C1784

ISIL:
	001 Move W2, 2
	002 Move X1, X31
	003 Call 0x1C75338
	004 Return X0

Method: System.Runtime.InteropServices.GCHandle Alloc(System.Object value, System.Runtime.InteropServices.GCHandleType type)

Disassembly:
	0x032C1780 BL 0x1C16DFC
	0x032C1784 MOV X0, X19
	0x032C1788 MOV X1, X20
	0x032C178C LDP X20, X19, [X31 + 0x10]
	0x032C1790 LDP X30, X21, [X31], #0x20

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Move W8, 2
	003 NotImplemented "Instruction CSEL not yet implemented."
	004 Move X1, X31
	005 Call 0x1C75338
	006 Return X0

Method: System.Void Free()

Disassembly:
	0x032C1794 B 0x32C147C
	0x032C1798 ADRP X0, 0xE37000
	0x032C179C LDR X0, [X0 + 0x528]
	0x032C17A0 BL 0x1C16D08
	0x032C17A4 BL 0x1C16F10
	0x032C17A8 MOV X19, X0
	0x032C17AC ADRP X0, 0xE5B000
	0x032C17B0 LDR X0, [X0 + 0xCC0]
	0x032C17B4 BL 0x1C16D08
	0x032C17B8 MOV X1, X0
	0x032C17BC MOV X0, X19
	0x032C17C0 MOV X2, X31
	0x032C17C4 BL 0x330E100
	0x032C17C8 ADRP X0, 0xE64000
	0x032C17CC LDR X0, [X0 + 0x700]
	0x032C17D0 BL 0x1C16D08
	0x032C17D4 MOV X1, X0
	0x032C17D8 MOV X0, X19
	0x032C17DC BL 0x1C16DEC
	0x032C17E0 STP X30, X21, [X31 - 0x20]!
	0x032C17E4 STP X20, X19, [X31 + 0x10]
	0x032C17E8 LDR X8, [X2 + 0x8]
	0x032C17EC STP X1, X2, [X0 + 0x20]
	0x032C17F0 MOV X19, X0
	0x032C17F4 MOV X20, X1
	0x032C17F8 STR X8, [X0 + 0x10]
	0x032C17FC LDRB W21, [X2 + 0x52]
	0x032C1800 STR X0, [X0 + 0x40]
	0x032C1804 MOV X0, X2
	0x032C1808 BL 0x1C16D84
	0x032C180C TBZ X0, 0x0, 0x32C1828
	0x032C1810 CMP W21, 0x1
	0x032C1814 B.NE 0x32C182C
	0x032C1818 ADRP X8, 0xFFFFFFFFFE8F4000
	0x032C181C ADD X8, X8, 0xCF4
	0x032C1820 STR X8, [X19 + 0x18]
	0x032C1824 B 0x32C183C
	0x032C1828 CBZ X20, 0x32C1854
	0x032C182C LDR X8, [X19 + 0x10]
	0x032C1830 LDR X9, [X19 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, [X0]
	005 Move X20, X0
	006 Move X1, X31
	007 Move X2, X31
	008 Move X0, X19
	009 Call IntPtr.op_Inequality, X0, X1
	010 Move TEMP, X0
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfNotEqual {32}
	014 Move X0, X20
	015 Move X1, X31
	016 Move X2, X19
	017 Move X3, X31
	018 Call Interlocked.CompareExchange, X0, X1, X2
	019 Move X1, X19
	020 Move X2, X31
	021 Call IntPtr.op_Equality, X0, X1
	022 Move TEMP, X0
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfNotEqual {32}
	026 Move X0, X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Call 0x1C752D0
	031 Return 
	032 Move X0, 0xE33000
	033 Move X0, [X0+1456]
	034 Call 0x1C17D08
	035 Call 0x1C17F10
	036 Move X19, X0
	037 Move X0, 0xE65000
	038 Move X0, [X0+1720]
	039 Call 0x1C17D08
	040 Move X1, X0
	041 Move X0, X19
	042 Move X2, X31
	043 Call InvalidOperationException..ctor, X0, X1
	044 Move X0, 0xE65000
	045 Move X0, [X0+1728]
	046 Call 0x1C17D08
	047 Move X1, X0
	048 Move X0, X19
	049 Call 0x1C17DEC

Method: System.IntPtr op_Explicit(System.Runtime.InteropServices.GCHandle value)

Disassembly:
	0x032C1838 STR X9, [X19 + 0x40]

ISIL:
	001 Return X0

Method: System.Runtime.InteropServices.GCHandle op_Explicit(System.IntPtr value)

Disassembly:
	0x032C183C ADRP X8, 0xFFFFFFFFFE8F4000
	0x032C1840 ADD X8, X8, 0xCA4
	0x032C1844 STR X8, [X19 + 0x38]
	0x032C1848 LDP X20, X19, [X31 + 0x10]
	0x032C184C LDP X30, X21, [X31], #0x20
	0x032C1850 RET
	0x032C1854 ADRP X1, 0xFFFFFFFFFD85A000
	0x032C1858 ADD X1, X1, 0xEE3
	0x032C185C MOV X0, X31
	0x032C1860 BL 0x1C16F3C
	0x032C1864 MOV X1, X31
	0x032C1868 BL 0x1C16DEC
	0x032C186C AND W2, W2, 0x1
	0x032C1870 B 0x1C747F8
	0x032C1874 B 0x1C74E5C
	0x032C1878 B 0x1C74444
	0x032C187C STP X30, X23, [X31 - 0x30]!
	0x032C1880 STP X22, X21, [X31 + 0x10]
	0x032C1884 STP X20, X19, [X31 + 0x20]
	0x032C1888 ADRP X21, 0x111B000
	0x032C188C ADRP X22, 0xE32000
	0x032C1890 LDRB W8, [X21 + 0x87C]
	0x032C1894 LDR X22, [X22 + 0x6C0]
	0x032C1898 MOV X19, X1
	0x032C189C MOV X20, X0
	0x032C18A0 TBNZ X8, 0x0, 0x32C18D0
	0x032C18A4 ADRP X0, 0xE5A000
	0x032C18A8 LDR X0, [X0 + 0x850]
	0x032C18AC BL 0x1C16CF4
	0x032C18B0 ADRP X0, 0xE64000
	0x032C18B4 LDR X0, [X0 + 0x708]
	0x032C18B8 BL 0x1C16CF4
	0x032C18BC ADRP X0, 0xE32000
	0x032C18C0 LDR X0, [X0 + 0x6C0]
	0x032C18C4 BL 0x1C16CF4
	0x032C18C8 MOVZ W8, 0x1
	0x032C18CC STRB W8, [X21 + 0x87C]
	0x032C18D0 LDR X0, [X22]
	0x032C18D4 LDR W8, [X0 + 0xE0]
	0x032C18D8 CBNZ W8, 0x32C18E0
	0x032C18DC BL 0x1C16DFC
	0x032C18E0 MOV X0, X19
	0x032C18E4 MOV X1, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X2, X31
	005 Move X19, X0
	006 Call IntPtr.op_Equality, X0, X1
	007 Move TEMP, X0
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {21}
	011 Move X0, X19
	012 Call 0x1C4DAE4
	013 Move TEMP, X0
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfNotEqual {33}
	017 Move X0, X19
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 Return X0
	021 Move X0, 0xE33000
	022 Move X0, [X0+1456]
	023 Call 0x1C17D08
	024 Call 0x1C17F10
	025 Move X19, X0
	026 Move X0, 0xE65000
	027 Move X0, [X0+1736]
	028 Call 0x1C17D08
	029 Move X1, X0
	030 Move X0, X19
	031 Move X2, X31
	032 Call InvalidOperationException..ctor, X0, X1
	033 Move X0, 0xE3B000
	034 Move X0, [X0+1400]
	035 Call 0x1C17D08
	036 Call 0x1C17F10
	037 Move X19, X0
	038 Move X0, 0xE65000
	039 Move X0, [X0+1744]
	040 Call 0x1C17D08
	041 Move X1, X0
	042 Move X0, X19
	043 Move X2, X31
	044 Call ArgumentException..ctor, X0, X1
	045 Move X0, 0xE65000
	046 Move X0, [X0+1752]
	047 Call 0x1C17D08
	048 Move X1, X0
	049 Move X0, X19
	050 Call 0x1C17DEC

Method: System.Boolean CheckCurrentDomain(System.IntPtr handle)

Disassembly:
	0x032C18E8 MOV X2, X31

ISIL:
	001 Call 0x1C4DAE4
	002 Return X0

Method: System.Object GetTarget(System.IntPtr handle)

Disassembly:
	0x032C1664 B.NE 0x32C16A4

ISIL:
	001 Call 0x1C75334
	002 Return X0

Method: System.IntPtr GetTargetHandle(System.Object obj, System.IntPtr handle, System.Runtime.InteropServices.GCHandleType type)

Disassembly:
	0x032C15E0 CMP W10, W11

ISIL:
	001 Call 0x1C75338
	002 Return X0

Method: System.Void FreeHandle(System.IntPtr handle)

Disassembly:
	0x032C1834 STR X8, [X19 + 0x18]

ISIL:
	001 Call 0x1C752D0
	002 Return 

Method: System.IntPtr GetAddrOfPinnedObject(System.IntPtr handle)

Disassembly:
	0x032C1770 BL 0x32C17E0

ISIL:
	001 Call 0x1C752D4
	002 Return X0

Method: System.Boolean op_Equality(System.Runtime.InteropServices.GCHandle a, System.Runtime.InteropServices.GCHandle b)

Disassembly:
	0x032C18EC BL 0x3395194
	0x032C18F0 TBNZ X0, 0x0, 0x32C1A14

ISIL:
	001 Move X2, X31
	002 Call IntPtr.op_Equality, X0, X1
	003 Return X0

Method: System.Boolean Equals(System.Object o)

Disassembly:
	0x032C18F4 ADRP X23, 0xE64000
	0x032C18F8 LDR X0, [X22]
	0x032C18FC LDR X23, [X23 + 0x708]
	0x032C1900 LDR W8, [X0 + 0xE0]
	0x032C1904 LDR X21, [X23]
	0x032C1908 CBNZ W8, 0x32C1910
	0x032C190C BL 0x1C16DFC
	0x032C1910 MOV X0, X21
	0x032C1914 MOV X1, X31
	0x032C1918 BL 0x338C698
	0x032C191C CBZ X19, 0x32C1A34
	0x032C1920 LDR X8, [X19]
	0x032C1924 MOV X1, X0
	0x032C1928 MOV X0, X19
	0x032C192C LDR X9, [X8 + 0x298]
	0x032C1930 LDR X2, [X8 + 0x2A0]
	0x032C1934 BLR X9
	0x032C1938 TBZ X0, 0x0, 0x32C19CC
	0x032C193C LDR X0, [X22]
	0x032C1940 LDR X21, [X23]
	0x032C1944 LDR W8, [X0 + 0xE0]
	0x032C1948 CBNZ W8, 0x32C1950
	0x032C194C BL 0x1C16DFC
	0x032C1950 MOV X0, X21
	0x032C1954 MOV X1, X31
	0x032C1958 BL 0x338C698
	0x032C195C MOV X1, X0
	0x032C1960 MOV X0, X19
	0x032C1964 MOV X2, X31
	0x032C1968 BL 0x3395194
	0x032C196C TBNZ X0, 0x0, 0x32C19CC
	0x032C1970 LDR X8, [X19]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x111C000
	006 Move W8, [X21+2154]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xE65000
	014 Move X0, [X0+1760]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2154], W8
	018 Compare X19, 0
	019 JumpIfEqual {25}
	020 Move X8, 0xE65000
	021 Move X8, [X8+1760]
	022 Move X9, [X19]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move W0, W31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0
	031 Move X20, [X20]
	032 Move X0, X19
	033 Call 0x1C17E08
	034 Move X1, [X0]
	035 Move X0, X20
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X2, X31
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Call IntPtr.op_Equality, X0, X1
	042 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x032C1974 MOV X0, X19
	0x032C1978 LDR X9, [X8 + 0x3C8]

ISIL:
	001 Move X1, X31
	002 Call IntPtr.GetHashCode, X0
	003 Return X0

Method: System.Runtime.InteropServices.GCHandle FromIntPtr(System.IntPtr value)

Disassembly:
	0x032C197C LDR X1, [X8 + 0x3D0]

ISIL:
	001 Call GCHandle.op_Explicit, X0
	002 Return X0

Method: System.IntPtr ToIntPtr(System.Runtime.InteropServices.GCHandle value)

Disassembly:
	0x032C1980 BLR X9

ISIL:
	001 Return X0

