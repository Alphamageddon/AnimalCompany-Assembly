Type: System.Runtime.InteropServices.MemoryMarshal

Method: System.Span`1<System.Byte> AsBytes(System.Span`1<T> span)

Disassembly:
	0x02219774 BL 0x1C5C684
	0x02219778 MOV X19, X0
	0x0221977C CBZ X20, 0x22197D4
	0x02219780 MOV X0, X20
	0x02219784 MOV X1, X19
	0x02219788 BL 0x1C16E00
	0x0221978C CBNZ X0, 0x22197D8
	0x02219790 MOV X0, X20
	0x02219794 MOV X1, X19
	0x02219798 BL 0x1C171E0
	0x0221979C MOV X0, X23
	0x022197A0 MOV W1, W20
	0x022197A4 MOV X2, X31
	0x022197A8 BL 0x3C173F0
	0x022197AC LDR X8, [X19 + 0x38]
	0x022197B0 LDR X0, [X8 + 0x8]
	0x022197B4 LDRB W8, [X0 + 0x135]
	0x022197B8 TBNZ X8, 0x0, 0x22197C0
	0x022197BC BL 0x1C5C684
	0x022197C0 LDP X20, X19, [X31 + 0x20]
	0x022197C4 LDP X22, X21, [X31 + 0x10]
	0x022197C8 MOV W1, W31
	0x022197CC LDP X30, X23, [X31], #0x30
	0x022197D0 B 0x1C16D6C
	0x022197D4 MOV X0, X31
	0x022197D8 LDP X20, X19, [X31 + 0x20]
	0x022197DC LDP X22, X21, [X31 + 0x10]
	0x022197E0 LDP X30, X23, [X31], #0x30

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X19, X2
	007 Move X20, X1
	008 Move X21, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {19}
	011 Move X0, 0x1F04000
	012 Move X0, [X0+104]
	013 Call 0x1C17CF4
	014 Move X8, [X19+56]
	015 Compare X8, 0
	016 JumpIfNotEqual {19}
	017 Move X0, X19
	018 Call 0x1C5D6E0
	019 Move X8, 0x40000000
	020 Move X9, INVALID
	021 Add X8, X8, X20
	022 NotImplemented "Instruction MOVK not yet implemented."
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move W1, W20
	025 ShiftRight W1, 31
	026 And W1, W1, 0x3FFFFFFF
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X0, X21
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Return X0
	033 Call 0x1C17F30
	034 Move X1, X19
	035 Call 0x1C17DEC

Method: System.ReadOnlySpan`1<System.Byte> AsBytes(System.ReadOnlySpan`1<T> span)

Disassembly:
	0x022197E4 RET
	0x022197E8 STP X30, X23, [X31 - 0x30]!
	0x022197EC STP X22, X21, [X31 + 0x10]
	0x022197F0 STP X20, X19, [X31 + 0x20]
	0x022197F4 LDR X8, [X4 + 0x38]
	0x022197F8 MOV X19, X4
	0x022197FC MOV W21, W3
	0x02219800 MOV W22, W2
	0x02219804 MOV W20, W1
	0x02219808 MOV X23, X0
	0x0221980C CBNZ X8, 0x2219818
	0x02219810 MOV X0, X19
	0x02219814 BL 0x1C5C6E0
	0x02219818 MOV X0, X23
	0x0221981C MOV X1, X31
	0x02219820 BL 0x3C175DC
	0x02219824 TBZ X0, 0x0, 0x2219894
	0x02219828 MOV X0, X23
	0x0221982C MOV W1, W20
	0x02219830 MOV X2, X31
	0x02219834 BL 0x3C17434
	0x02219838 TBZ X0, 0x0, 0x22198A4
	0x0221983C MOV X0, X23
	0x02219840 MOV W1, W20
	0x02219844 MOV W2, W22
	0x02219848 MOV W3, W21
	0x0221984C MOV X4, X31
	0x02219850 BL 0x3C17514

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X19, X2
	007 Move X20, X1
	008 Move X21, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {19}
	011 Move X0, 0x1F04000
	012 Move X0, [X0+112]
	013 Call 0x1C17CF4
	014 Move X8, [X19+56]
	015 Compare X8, 0
	016 JumpIfNotEqual {19}
	017 Move X0, X19
	018 Call 0x1C5D6E0
	019 Move X8, 0x40000000
	020 Move X9, INVALID
	021 Add X8, X8, X20
	022 NotImplemented "Instruction MOVK not yet implemented."
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move W1, W20
	025 ShiftRight W1, 31
	026 And W1, W1, 0x3FFFFFFF
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X0, X21
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Return X0
	033 Call 0x1C17F30
	034 Move X1, X19
	035 Call 0x1C17DEC

Method: System.Memory`1<T> AsMemory(System.ReadOnlyMemory`1<T> memory)

Disassembly:
	0x02219AE4 MOV X0, X25

ISIL:
	001 Return X0

Method: T GetReference(System.Span`1<T> span)

Disassembly:
	0x02219CF4 CBZ X21, 0x2219D50

ISIL:
	001 Return X0

Method: T GetReference(System.ReadOnlySpan`1<T> span)

Disassembly:
	0x02219CF0 BL 0x1C5C6E0

ISIL:
	001 Return X0

Method: T GetNonNullPinnableReference(System.Span`1<T> span)

Disassembly:
	0x02219BBC STP X20, X19, [X31 + 0x30]
	0x02219BC0 LDR X8, [X4 + 0x38]
	0x02219BC4 MOV X19, X4
	0x02219BC8 MOV W20, W3
	0x02219BCC MOV X21, X2
	0x02219BD0 MOV W23, W1
	0x02219BD4 MOV X22, X0
	0x02219BD8 CBNZ X8, 0x2219BE4
	0x02219BDC MOV X0, X19
	0x02219BE0 BL 0x1C5C6E0
	0x02219BE4 CBZ X21, 0x2219C3C
	0x02219BE8 CMP W23, 0x8
	0x02219BEC B.CS 0x2219C84

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X2+56]
	005 Move X19, X1
	006 Move X20, X0
	007 Compare X8, 0
	008 JumpIfNotEqual {11}
	009 Move X0, X2
	010 Call 0x1C5D6E0
	011 NotImplemented "Instruction CMP not yet implemented."
	012 NotImplemented "Instruction CSINC not yet implemented."
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move X30, [X31+32]
	016 Return X0

Method: T GetNonNullPinnableReference(System.ReadOnlySpan`1<T> span)

Disassembly:
	0x02219B88 LDP X24, X23, [X31 + 0x10]
	0x02219B8C MOV X2, X31
	0x02219B90 LDP X30, X25, [X31], #0x40
	0x02219B94 B 0x3C173F0
	0x02219B98 LDP X20, X19, [X31 + 0x30]
	0x02219B9C LDP X22, X21, [X31 + 0x20]
	0x02219BA0 LDP X24, X23, [X31 + 0x10]
	0x02219BA4 LDP X30, X25, [X31], #0x40
	0x02219BA8 RET
	0x02219BAC BL 0x1C16F20
	0x02219BB0 STR X30, [X31 - 0x40]!
	0x02219BB4 STP X24, X23, [X31 + 0x10]
	0x02219BB8 STP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X2+56]
	005 Move X19, X1
	006 Move X20, X0
	007 Compare X8, 0
	008 JumpIfNotEqual {11}
	009 Move X0, X2
	010 Call 0x1C5D6E0
	011 NotImplemented "Instruction CMP not yet implemented."
	012 NotImplemented "Instruction CSINC not yet implemented."
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move X30, [X31+32]
	016 Return X0

Method: System.ReadOnlySpan`1<T> CreateReadOnlySpan(ref T reference, System.Int32 length)

Disassembly:
	0x02219AEC CBZ X23, 0x2219BAC
	0x02219AF0 LDR X8, [X25 + 0x38]
	0x02219AF4 MOV X0, X23
	0x02219AF8 LDR X1, [X8 + 0x8]
	0x02219AFC LDR X8, [X1]
	0x02219B00 BLR X8
	0x02219B04 MOV X0, X22
	0x02219B08 MOV X1, X31
	0x02219B0C BL 0x3C175DC
	0x02219B10 TBZ X0, 0x0, 0x2219B78
	0x02219B14 MOV X0, X22
	0x02219B18 MOV W1, W19
	0x02219B1C MOV X2, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X2+56]
	005 Move W19, W1
	006 Move X20, X0
	007 Compare X8, 0
	008 JumpIfNotEqual {11}
	009 Move X0, X2
	010 Call 0x1C5D6E0
	011 Move W1, W19
	012 Move X0, X20
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move X30, [X31+32]
	016 Return X0

Method: System.Boolean TryGetArray(System.ReadOnlyMemory`1<T> memory, out System.ArraySegment`1<T> segment)

Disassembly:
	0x02219D10 MOV W0, W23
	0x02219D14 MOV X1, X31
	0x02219D18 BL 0x3C17B18
	0x02219D1C LDR X8, [X19 + 0x38]
	0x02219D20 MOV W3, W0
	0x02219D24 MOV X0, X22
	0x02219D28 MOV X1, X21
	0x02219D2C LDR X5, [X8 + 0x8]
	0x02219D30 MOV W2, W24
	0x02219D34 MOV W4, W20
	0x02219D38 LDP X20, X19, [X31 + 0x30]
	0x02219D3C LDR X6, [X5]
	0x02219D40 LDP X22, X21, [X31 + 0x20]
	0x02219D44 LDP X24, X23, [X31 + 0x10]
	0x02219D48 LDR X30, [X31], #0x40
	0x02219D4C BR X6
	0x02219D50 ADRP X0, 0x1EDF000
	0x02219D54 LDR X0, [X0 + 0x528]
	0x02219D58 BL 0x1C16D08
	0x02219D5C BL 0x1C16F10
	0x02219D60 MOV X20, X0
	0x02219D64 ADRP X0, 0x1F03000
	0x02219D68 LDR X0, [X0 + 0x78]
	0x02219D6C BL 0x1C16D08
	0x02219D70 MOV X21, X0
	0x02219D74 ADRP X0, 0x1F03000
	0x02219D78 LDR X0, [X0 + 0x80]
	0x02219D7C BL 0x1C16D08
	0x02219D80 MOV X2, X0
	0x02219D84 MOV X0, X20
	0x02219D88 MOV X1, X21
	0x02219D8C MOV X3, X31
	0x02219D90 BL 0x3315F7C
	0x02219D94 B 0x2219DC8
	0x02219D98 ADRP X0, 0x1EE4000
	0x02219D9C LDR X0, [X0 + 0xF78]
	0x02219DA0 BL 0x1C16D08
	0x02219DA4 BL 0x1C16F10
	0x02219DA8 MOV X20, X0
	0x02219DAC ADRP X0, 0x1F03000
	0x02219DB0 LDR X0, [X0 + 0x88]
	0x02219DB4 BL 0x1C16D08
	0x02219DB8 MOV X1, X0
	0x02219DBC MOV X0, X20
	0x02219DC0 MOV X2, X31
	0x02219DC4 BL 0x3379B6C
	0x02219DC8 MOV X0, X20
	0x02219DCC MOV X1, X19
	0x02219DD0 BL 0x1C16DEC
	0x02219DD4 SUB X31, X31, 0x40
	0x02219DD8 STP X30, X23, [X31 + 0x10]
	0x02219DDC STP X22, X21, [X31 + 0x20]
	0x02219DE0 STP X20, X19, [X31 + 0x30]
	0x02219DE4 MOV W21, W1
	0x02219DE8 MOV X22, X0
	0x02219DEC MOV X0, X2
	0x02219DF0 MOV X1, X31
	0x02219DF4 MOV W19, W3
	0x02219DF8 MOV X20, X2
	0x02219DFC BL 0x3C36C34
	0x02219E00 MOV W23, W0
	0x02219E04 MOV W0, W21
	0x02219E08 MOV X1, X31
	0x02219E0C BL 0x3C17B8C
	0x02219E10 MOV W3, W0
	0x02219E14 MOV X0, X22
	0x02219E18 MOV W1, W21
	0x02219E1C MOV W2, W31
	0x02219E20 MOV X4, X20
	0x02219E24 MOV W5, W23
	0x02219E28 MOV W6, W31
	0x02219E2C MOV W7, W23
	0x02219E30 STR X31, [X31 + 0x8]
	0x02219E34 STR W19, [X31]
	0x02219E38 BL 0x3C17C28
	0x02219E3C LDP X20, X19, [X31 + 0x30]
	0x02219E40 LDP X22, X21, [X31 + 0x20]
	0x02219E44 LDP X30, X23, [X31 + 0x10]
	0x02219E48 ADD X31, X31, 0x40
	0x02219E4C RET
	0x02219E50 SUB X31, X31, 0x40
	0x02219E54 STP X30, X23, [X31 + 0x10]
	0x02219E58 STP X22, X21, [X31 + 0x20]
	0x02219E5C STP X20, X19, [X31 + 0x30]
	0x02219E60 MOV W21, W1
	0x02219E64 MOV X22, X0
	0x02219E68 MOV X0, X2
	0x02219E6C MOV X1, X31
	0x02219E70 MOV W19, W3
	0x02219E74 MOV X20, X2
	0x02219E78 BL 0x3C36C34
	0x02219E7C MOV W23, W0
	0x02219E80 MOV W0, W21
	0x02219E84 MOV X1, X31
	0x02219E88 BL 0x3C17B8C
	0x02219E8C MOV W3, W0
	0x02219E90 MOV X0, X22
	0x02219E94 MOV W1, W21
	0x02219E98 MOV W2, W31
	0x02219E9C MOV X4, X20
	0x02219EA0 MOV W5, W23
	0x02219EA4 MOV W6, W31
	0x02219EA8 MOV W7, W23
	0x02219EAC STR X31, [X31 + 0x8]
	0x02219EB0 STR W19, [X31]
	0x02219EB4 BL 0x3C17C28
	0x02219EB8 LDP X20, X19, [X31 + 0x30]
	0x02219EBC LDP X22, X21, [X31 + 0x20]
	0x02219EC0 LDP X30, X23, [X31 + 0x10]
	0x02219EC4 ADD X31, X31, 0x40
	0x02219EC8 RET
	0x02219ECC SUB X31, X31, 0x40
	0x02219ED0 STP X30, X23, [X31 + 0x10]
	0x02219ED4 STP X22, X21, [X31 + 0x20]
	0x02219ED8 STP X20, X19, [X31 + 0x30]
	0x02219EDC MOV W21, W1
	0x02219EE0 MOV X22, X0
	0x02219EE4 MOV X0, X2
	0x02219EE8 MOV X1, X31
	0x02219EEC MOV W19, W3
	0x02219EF0 MOV X20, X2
	0x02219EF4 BL 0x3C36C34
	0x02219EF8 MOV W23, W0
	0x02219EFC MOV W0, W21
	0x02219F00 MOV X1, X31
	0x02219F04 BL 0x3C17B8C
	0x02219F08 MOV W3, W0
	0x02219F0C MOV X0, X22
	0x02219F10 MOV W1, W21
	0x02219F14 MOV W2, W31
	0x02219F18 MOV X4, X20
	0x02219F1C MOV W5, W23
	0x02219F20 MOV W6, W31
	0x02219F24 MOV W7, W23
	0x02219F28 STR X31, [X31 + 0x8]
	0x02219F2C STR W19, [X31]
	0x02219F30 BL 0x3C17C28
	0x02219F34 LDP X20, X19, [X31 + 0x30]
	0x02219F38 LDP X22, X21, [X31 + 0x20]
	0x02219F3C LDP X30, X23, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X8, [X3+56]
	009 Move X20, X3
	010 Move X19, X2
	011 Move X21, X1
	012 Move X23, X0
	013 Move X22, X1
	014 ShiftRight X22, 32
	015 And X22, X22, 0x7FFFFFFF
	016 Compare X8, 0
	017 JumpIfNotEqual {21}
	018 Move X0, X20
	019 Call 0x1C5D6E0
	020 Move X8, [X20+56]
	021 Move [X31+16], X31
	022 Move [X31+24], X31
	023 Move TEMP, X21
	024 And TEMP, TEMP, -2147483648
	025 Compare TEMP, -2147483648
	026 JumpIfEqual {48}
	027 Move X1, [X8+64]
	028 Move W8, [X1+309]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {36}
	033 Move X0, X1
	034 Call 0x1C5D684
	035 Move X1, X0
	036 Move X0, X23
	037 Call 0x1C17E00
	038 Compare X0, 0
	039 JumpIfEqual {118}
	040 Move [X31], X31
	041 Move [X31+8], X31
	042 Move X8, [X20+56]
	043 Move X1, X0
	044 And W3, W22, 0x7FFFFFFF
	045 Add X0, X31, 0
	046 Move X4, [X8+88]
	047 Move W2, W21
	048 Move X1, [X8+24]
	049 Move W8, [X1+309]
	050 Move TEMP, X8
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {57}
	054 Move X0, X1
	055 Call 0x1C5D684
	056 Move X1, X0
	057 Compare X23, 0
	058 JumpIfEqual {184}
	059 Move X8, [X23]
	060 Move W9, [X1+304]
	061 Move W10, [X8+304]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X8, [X8+200]
	064 Add X8, X8, X9
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X8, [X20+56]
	068 Move X1, [X8+24]
	069 Move W8, [X1+309]
	070 Move TEMP, X8
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfEqual {77}
	074 Move X0, X1
	075 Call 0x1C5D684
	076 Move X1, X0
	077 Move X8, [X23]
	078 Move W9, [X1+304]
	079 Move W10, [X8+304]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X10, [X8+200]
	082 Add X9, X10, X9
	083 NotImplemented "Instruction LDUR not yet implemented."
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X9, [X8+408]
	086 Move X2, [X8+416]
	087 Add X1, X31, 16
	088 Move X0, X23
	089 NotImplemented "Instruction BLR not yet implemented."
	090 Move TEMP, X0
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfNotEqual {118}
	094 Move X8, [X20+56]
	095 Move X0, [X8+56]
	096 Move W8, [X0+309]
	097 Move TEMP, X8
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfEqual {102}
	101 Call 0x1C5D684
	102 Move W8, [X0+224]
	103 Compare W8, 0
	104 JumpIfNotEqual {106}
	105 Call 0x1C17DFC
	106 Move X8, [X20+56]
	107 Move W9, [X31+24]
	108 Move [X31], X31
	109 Move [X31+8], X31
	110 Move X1, [X31+16]
	111 Move X4, [X8+88]
	112 And W8, W21, 0x7FFFFFFF
	113 Add W2, W9, W8
	114 Add X0, X31, 0
	115 Move W3, W22
	116 Call 0x2B88BB0, X0, X1, X2, X3
	117 Move V0, [X31]
	118 And W31, W22, 0x7FFFFFFF
	119 Move W0, W31
	120 Move [X19], X31
	121 Move [X19+8], X31
	122 Move X8, [X20+56]
	123 Move X0, [X8+56]
	124 Move W8, [X0+309]
	125 Move TEMP, X8
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfEqual {130}
	129 Call 0x1C5D684
	130 Move W8, [X0+224]
	131 Compare W8, 0
	132 JumpIfNotEqual {134}
	133 Call 0x1C17DFC
	134 Move X8, [X20+56]
	135 Move X20, [X8+96]
	136 Move X0, [X20+32]
	137 Move W8, [X0+309]
	138 Move TEMP, X8
	139 And TEMP, TEMP, 1
	140 Compare TEMP, 1
	141 JumpIfEqual {143}
	142 Call 0x1C5D684
	143 Move X8, [X0+192]
	144 Move X0, [X8+8]
	145 Move W8, [X0+309]
	146 Move TEMP, X8
	147 And TEMP, TEMP, 1
	148 Compare TEMP, 1
	149 JumpIfEqual {151}
	150 Call 0x1C5D684
	151 Move W8, [X0+224]
	152 Compare W8, 0
	153 JumpIfNotEqual {155}
	154 Call 0x1C17DFC
	155 Move X0, [X20+32]
	156 Move W8, [X0+309]
	157 Move TEMP, X8
	158 And TEMP, TEMP, 1
	159 Compare TEMP, 1
	160 JumpIfEqual {162}
	161 Call 0x1C5D684
	162 Move X8, [X0+192]
	163 Move X0, [X8+8]
	164 Move W8, [X0+309]
	165 Move TEMP, X8
	166 And TEMP, TEMP, 1
	167 Compare TEMP, 1
	168 JumpIfEqual {170}
	169 Call 0x1C5D684
	170 Move X8, [X0+184]
	171 Move V0, [X8]
	172 Move [X19], V0
	173 Move W0, 1
	174 Move X20, [X31+64]
	175 Move X19, [X31+72]
	176 Move X22, [X31+48]
	177 Move X21, [X31+56]
	178 Move X30, [X31+32]
	179 Move X23, [X31+40]
	180 Add X31, X31, 80
	181 Return X0
	182 Move X0, X23
	183 Call 0x1C181E0
	184 Call 0x1C17F20

