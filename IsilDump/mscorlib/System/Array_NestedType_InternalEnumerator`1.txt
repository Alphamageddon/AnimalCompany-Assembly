Type: System.Array/InternalEnumerator`1

Method: System.Void .ctor(System.Array array)

Disassembly:
	0x02E14264 LDR W21, [X21 + 0x8]
	0x02E14268 MOV W19, W0
	0x02E1426C LDRB W9, [X8 + 0x135]
	0x02E14270 TBNZ X9, 0x0, 0x2E14280

ISIL:
	001 Move TEMP, 1
	002 Not TEMP
	003 Move W8, TEMP
	004 Move [X0], X1
	005 Move [X0+8], W8
	006 Return 

Method: System.Void Dispose()

Disassembly:
	0x02E14274 MOV X0, X8

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x02E14278 BL 0x1C5C684
	0x02E1427C MOV X8, X0
	0x02E14280 LDR X8, [X8 + 0xC0]
	0x02E14284 MOV X0, X20
	0x02E14288 LDR X2, [X8 + 0x8]
	0x02E1428C ORN W8, W31, W21, 0x0
	0x02E14290 ADD W1, W19, W8
	0x02E14294 BL 0x2098800
	0x02E14298 LDP X20, X19, [X31 + 0x10]
	0x02E1429C AND X0, X0, 0xFF
	0x02E142A0 LDP X30, X21, [X31], #0x20
	0x02E142A4 RET
	0x02E142A8 ADRP X0, 0x12DF000
	0x02E142AC LDR X0, [X0 + 0x5B0]
	0x02E142B0 BL 0x1C16D08
	0x02E142B4 BL 0x1C16F10
	0x02E142B8 MOV X20, X0
	0x02E142BC ADRP X0, 0x130B000
	0x02E142C0 LDR X0, [X0 + 0x78]
	0x02E142C4 B 0x2E142E4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move W0, [X0+8]
	005 Add W31, W0, 2
	006 Move X0, [X19]
	007 Compare X0, 0
	008 JumpIfEqual {20}
	009 Move X1, X31
	010 Call Array.get_Length, X0
	011 Move [X19+8], W0
	012 Add W31, W0, 1
	013 Subtract W8, W0, 1
	014 NotImplemented "Instruction CSET not yet implemented."
	015 Move [X19+8], W8
	016 Move W0, W31
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Return X0
	020 Call 0x1C17F20

Method: T get_Current()

Disassembly:
	0x02E142C8 ADRP X0, 0x12DF000
	0x02E142CC LDR X0, [X0 + 0x5B0]
	0x02E142D0 BL 0x1C16D08
	0x02E142D4 BL 0x1C16F10
	0x02E142D8 MOV X20, X0
	0x02E142DC ADRP X0, 0x130A000
	0x02E142E0 LDR X0, [X0 + 0xB58]
	0x02E142E4 BL 0x1C16D08
	0x02E142E8 MOV X1, X0
	0x02E142EC MOV X0, X20
	0x02E142F0 MOV X2, X31
	0x02E142F4 BL 0x337DF1C
	0x02E142F8 MOV X0, X20
	0x02E142FC MOV X1, X19
	0x02E14300 BL 0x1C16DEC
	0x02E14304 BL 0x1C16F20
	0x02E14308 MOVN W8, 0x1
	0x02E1430C STR W8, [X0 + 0x8]
	0x02E14310 RET
	0x02E14314 STR X30, [X31 - 0x20]!
	0x02E14318 STP X20, X19, [X31 + 0x10]
	0x02E1431C LDR X8, [X1 + 0x20]
	0x02E14320 MOV X19, X1
	0x02E14324 MOV X20, X0
	0x02E14328 LDRB W9, [X8 + 0x135]
	0x02E1432C TBNZ X9, 0x0, 0x2E1433C
	0x02E14330 MOV X0, X8
	0x02E14334 BL 0x1C5C684
	0x02E14338 MOV X8, X0
	0x02E1433C LDR X8, [X8 + 0xC0]
	0x02E14340 MOV X0, X20
	0x02E14344 LDR X1, [X8 + 0x18]
	0x02E14348 BL 0x2E14228
	0x02E1434C STRB W0, [X31 + 0x8]
	0x02E14350 LDR X0, [X19 + 0x20]
	0x02E14354 LDRB W8, [X0 + 0x135]
	0x02E14358 TBNZ X8, 0x0, 0x2E14360
	0x02E1435C BL 0x1C5C684
	0x02E14360 LDR X8, [X0 + 0xC0]
	0x02E14364 ADD X1, X31, 0x8
	0x02E14368 LDR X0, [X8 + 0x10]
	0x02E1436C BL 0x1C16E04
	0x02E14370 LDP X20, X19, [X31 + 0x10]
	0x02E14374 LDR X30, [X31], #0x20
	0x02E14378 RET
	0x02E1437C MOVN W8, 0x1
	0x02E14380 STR X1, [X0]
	0x02E14384 STR W8, [X0 + 0x8]
	0x02E14388 RET
	0x02E1438C RET
	0x02E14390 STP X30, X19, [X31 - 0x10]!
	0x02E14394 MOV X19, X0
	0x02E14398 LDR W0, [X0 + 0x8]
	0x02E1439C ADDS W31, W0, 0x2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+8]
	006 Move X19, X1
	007 Add W31, W8, 1
	008 Add W31, W8, 2
	009 Move X20, [X0]
	010 Move X21, X0
	011 Compare X20, 0
	012 JumpIfEqual {60}
	013 Move X0, X20
	014 Move X1, X31
	015 Call Array.get_Length, X0
	016 Move X8, [X19+32]
	017 Move W21, [X21+8]
	018 Move W19, W0
	019 Move W9, [X8+309]
	020 Move TEMP, X9
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {27}
	024 Move X0, X8
	025 Call 0x1C5D684
	026 Move X8, X0
	027 Move X8, [X8+192]
	028 Move X0, X20
	029 Move X2, [X8+8]
	030 NotImplemented "Instruction ORN not yet implemented."
	031 Add W1, W19, W8
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Call 0x20992A8, X0, X1
	037 Return X0
	038 Move X0, 0x12E0000
	039 Move X0, [X0+1456]
	040 Call 0x1C17D08
	041 Call 0x1C17F10
	042 Move X20, X0
	043 Move X0, 0x130C000
	044 Move X0, [X0+120]
	045 Move X0, 0x12E0000
	046 Move X0, [X0+1456]
	047 Call 0x1C17D08
	048 Call 0x1C17F10
	049 Move X20, X0
	050 Move X0, 0x130B000
	051 Move X0, [X0+2904]
	052 Call 0x1C17D08
	053 Move X1, X0
	054 Move X0, X20
	055 Move X2, X31
	056 Call InvalidOperationException..ctor, X0, X1
	057 Move X0, X20
	058 Move X1, X19
	059 Call 0x1C17DEC
	060 Call 0x1C17F20

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x02E143A0 B.NE 0x2E143B8
	0x02E143A4 LDR X0, [X19]
	0x02E143A8 CBZ X0, 0x2E143DC

ISIL:
	001 Move TEMP, 1
	002 Not TEMP
	003 Move W8, TEMP
	004 Move [X0+8], W8
	005 Return 

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x02E143AC MOV X1, X31
	0x02E143B0 BL 0x3395B7C
	0x02E143B4 STR W0, [X19 + 0x8]
	0x02E143B8 ADDS W31, W0, 0x1
	0x02E143BC B.EQ 0x2E143D0
	0x02E143C0 SUBS W8, W0, 0x1
	0x02E143C4 CSET W0, CS
	0x02E143C8 STR W8, [X19 + 0x8]
	0x02E143CC B 0x2E143D4
	0x02E143D0 MOV W0, W31
	0x02E143D4 LDP X30, X19, [X31], #0x10
	0x02E143D8 RET
	0x02E143DC BL 0x1C16F20
	0x02E143E0 STP X30, X21, [X31 - 0x20]!
	0x02E143E4 STP X20, X19, [X31 + 0x10]
	0x02E143E8 LDR W8, [X0 + 0x8]
	0x02E143EC MOV X19, X1
	0x02E143F0 ADDS W31, W8, 0x1
	0x02E143F4 B.EQ 0x2E14460
	0x02E143F8 ADDS W31, W8, 0x2
	0x02E143FC B.EQ 0x2E14480
	0x02E14400 LDR X20, [X0]
	0x02E14404 MOV X21, X0
	0x02E14408 CBZ X20, 0x2E144BC
	0x02E1440C MOV X0, X20
	0x02E14410 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+32]
	005 Move X19, X1
	006 Move X20, X0
	007 Move W9, [X8+309]
	008 Move TEMP, X9
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {15}
	012 Move X0, X8
	013 Call 0x1C5D684
	014 Move X8, X0
	015 Move X8, [X8+192]
	016 Move X0, X20
	017 Move X1, [X8+24]
	018 Call 0x2E142C8, X0
	019 Move [X31+8], X0
	020 Move X0, [X19+32]
	021 Move W8, [X0+309]
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {27}
	026 Call 0x1C5D684
	027 Move X8, [X0+192]
	028 Add X1, X31, 8
	029 Move X0, [X8+16]
	030 Call 0x1C17E04
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Return X0

