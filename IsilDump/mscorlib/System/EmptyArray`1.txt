Type: System.EmptyArray`1

Method: System.Void .cctor()

Disassembly:
	0x02B48EE4 LDRB W9, [X8 + 0x135]
	0x02B48EE8 TBNZ X9, 0x0, 0x2B48EF8
	0x02B48EEC MOV X0, X8
	0x02B48EF0 BL 0x1C5C684
	0x02B48EF4 MOV X8, X0
	0x02B48EF8 LDR X8, [X8 + 0xC0]
	0x02B48EFC LDR X0, [X8 + 0x18]
	0x02B48F00 LDRB W8, [X0 + 0x135]
	0x02B48F04 TBNZ X8, 0x0, 0x2B48F0C
	0x02B48F08 BL 0x1C5C684
	0x02B48F0C LDR X8, [X0 + 0xB8]
	0x02B48F10 STR X20, [X8]
	0x02B48F14 LDR X0, [X19 + 0x20]
	0x02B48F18 LDRB W8, [X0 + 0x135]
	0x02B48F1C TBNZ X8, 0x0, 0x2B48F24
	0x02B48F20 BL 0x1C5C684
	0x02B48F24 LDR X8, [X0 + 0xC0]
	0x02B48F28 LDR X0, [X8 + 0x18]
	0x02B48F2C LDRB W8, [X0 + 0x135]
	0x02B48F30 TBNZ X8, 0x0, 0x2B48F40
	0x02B48F34 LDP X20, X19, [X31 + 0x10]
	0x02B48F38 LDR X30, [X31], #0x20
	0x02B48F3C B 0x1C5C684
	0x02B48F40 LDP X20, X19, [X31 + 0x10]
	0x02B48F44 LDR X30, [X31], #0x20
	0x02B48F48 RET
	0x02B48F4C STR X30, [X31 - 0x20]!
	0x02B48F50 STP X20, X19, [X31 + 0x10]
	0x02B48F54 MOV X19, X0
	0x02B48F58 LDR X0, [X0 + 0x20]
	0x02B48F5C LDRB W8, [X0 + 0x135]
	0x02B48F60 TBNZ X8, 0x0, 0x2B48F68
	0x02B48F64 BL 0x1C5C684
	0x02B48F68 LDR X8, [X0 + 0xC0]
	0x02B48F6C LDR X0, [X8]
	0x02B48F70 LDRB W8, [X0 + 0x135]
	0x02B48F74 TBNZ X8, 0x0, 0x2B48F7C
	0x02B48F78 BL 0x1C5C684
	0x02B48F7C MOV W1, W31
	0x02B48F80 BL 0x1C16D6C
	0x02B48F84 LDR X8, [X19 + 0x20]
	0x02B48F88 MOV X20, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+32]
	006 Move W8, [X0+309]
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {12}
	011 Call 0x1C5D684
	012 Move X8, [X0+192]
	013 Move X0, [X8]
	014 Move W8, [X0+309]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {20}
	019 Call 0x1C5D684
	020 Move W1, W31
	021 Call 0x1C17D6C
	022 Move X8, [X19+32]
	023 Move X20, X0
	024 Move W9, [X8+309]
	025 Move TEMP, X9
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {32}
	029 Move X0, X8
	030 Call 0x1C5D684
	031 Move X8, X0
	032 Move X8, [X8+192]
	033 Move X0, [X8+24]
	034 Move W8, [X0+309]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {40}
	039 Call 0x1C5D684
	040 Move X8, [X0+184]
	041 Move [X8], X20
	042 Move X0, [X19+32]
	043 Move W8, [X0+309]
	044 Move TEMP, X8
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {49}
	048 Call 0x1C5D684
	049 Move X8, [X0+192]
	050 Move X0, [X8+24]
	051 Move W8, [X0+309]
	052 Move TEMP, X8
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {61}
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X30, [X31+32]
	059 Call 0x1C5D684
	060 Return 
	061 Move X20, [X31+16]
	062 Move X19, [X31+24]
	063 Move X30, [X31+32]
	064 Return 

