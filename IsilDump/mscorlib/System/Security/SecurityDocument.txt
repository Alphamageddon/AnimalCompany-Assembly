Type: System.Security.SecurityDocument

Method: System.Void .ctor(System.Int32 numData)

Disassembly:
	0x03248FBC STP X30, X19, [X31 - 0x10]!
	0x03248FC0 LDRB W8, [X0 + 0x14]
	0x03248FC4 CBNZ W8, 0x3248FD4
	0x03248FC8 LDR W0, [X0 + 0x10]
	0x03248FCC LDP X30, X19, [X31], #0x10
	0x03248FD0 RET
	0x03248FD4 ADRP X0, 0xED4000
	0x03248FD8 LDR X0, [X0 + 0x4B8]
	0x03248FDC BL 0x1C16D08
	0x03248FE0 BL 0x1C16F10
	0x03248FE4 MOV X19, X0
	0x03248FE8 ADRP X0, 0xEDA000
	0x03248FEC LDR X0, [X0 + 0xBC0]
	0x03248FF0 BL 0x1C16D08
	0x03248FF4 MOV X1, X0
	0x03248FF8 MOV X0, X19
	0x03248FFC MOV X2, X31
	0x03249000 BL 0x338C448
	0x03249004 ADRP X0, 0xED9000
	0x03249008 LDR X0, [X0 + 0xBC8]
	0x0324900C BL 0x1C16D08
	0x03249010 MOV X1, X0
	0x03249014 MOV X0, X19
	0x03249018 BL 0x1C16DEC
	0x0324901C STP X30, X19, [X31 - 0x10]!
	0x03249020 MOV X19, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1195000
	007 Move X21, 0xEAC000
	008 Move W8, [X22+1139]
	009 Move X21, [X21+1560]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xEAC000
	017 Move X0, [X0+1560]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1139], W8
	021 Move X0, X19
	022 Move X1, X31
	023 Call Object..ctor, X0
	024 Move X0, [X21]
	025 Move W1, W20
	026 Call 0x1C17D6C
	027 Move [X19+16], X0
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return 

Method: System.Void GuaranteeSize(System.Int32 size)

Disassembly:
	0x03249024 LDR X0, [X0 + 0x18]
	0x03249028 MOVZ W8, 0x1
	0x0324902C STRB W8, [X19 + 0x14]
	0x03249030 CBZ X0, 0x3249048
	0x03249034 LDR W2, [X0 + 0x18]
	0x03249038 MOV W1, W31
	0x0324903C MOV X3, X31
	0x03249040 BL 0x339FA34
	0x03249044 STR X31, [X19 + 0x18]
	0x03249048 STR W31, [X19 + 0x10]
	0x0324904C LDP X30, X19, [X31], #0x10
	0x03249050 RET
	0x03249054 RET
	0x03249058 STP X30, X21, [X31 - 0x20]!
	0x0324905C STP X20, X19, [X31 + 0x10]
	0x03249060 ADRP X21, 0x1193000
	0x03249064 ADRP X19, 0xEAA000
	0x03249068 LDRB W8, [X21 + 0x478]
	0x0324906C LDR X19, [X19 + 0x618]
	0x03249070 MOV X20, X0
	0x03249074 TBNZ X8, 0x0, 0x324908C
	0x03249078 ADRP X0, 0xEAA000
	0x0324907C LDR X0, [X0 + 0x618]
	0x03249080 BL 0x1C16CF4
	0x03249084 MOVZ W8, 0x1
	0x03249088 STRB W8, [X21 + 0x478]
	0x0324908C LDR W8, [X20 + 0x10]
	0x03249090 LDR X0, [X19]
	0x03249094 UBFM W1, W8, 0x1F, 0x1E
	0x03249098 BL 0x1C16D6C
	0x0324909C MOV X19, X0
	0x032490A0 CBZ X0, 0x32490D0
	0x032490A4 LDR X0, [X20 + 0x18]
	0x032490A8 LDR W4, [X19 + 0x18]
	0x032490AC MOV W1, W31
	0x032490B0 MOV X2, X19
	0x032490B4 MOV W3, W31
	0x032490B8 MOV X5, X31
	0x032490BC BL 0x33A8A9C
	0x032490C0 MOV X0, X19
	0x032490C4 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1194000
	006 Move W8, [X21+1140]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xEAB000
	014 Move X0, [X0+1560]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1140], W8
	018 Move X8, [X19+16]
	019 Compare X8, 0
	020 JumpIfEqual {49}
	021 Move W8, [X8+24]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X8, 0xEAB000
	024 Move X8, [X8+1560]
	025 Add W9, W20, 31
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X0, [X8]
	028 NotImplemented "Instruction CSEL not yet implemented."
	029 And W8, W8, 0xFFFFFFE0
	030 Add W1, W8, 32
	031 Call 0x1C17D6C
	032 Move X8, [X19+16]
	033 Compare X8, 0
	034 JumpIfEqual {49}
	035 Move W4, [X8+24]
	036 Move X20, X0
	037 Move X0, X8
	038 Move W1, W31
	039 Move X2, X20
	040 Move W3, W31
	041 Move X5, X31
	042 Call Array.Copy, X0, X1, X2, X3, X4
	043 Move [X19+16], X20
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return 
	049 Call 0x1C17F20

Method: System.Void AddString(System.String str, ref System.Int32 position)

Disassembly:
	0x032490C8 LDP X30, X21, [X31], #0x20
	0x032490CC RET
	0x032490D0 BL 0x1C16F20
	0x032490D4 CMP W1, 0x1
	0x032490D8 B.NE 0x32490F8
	0x032490DC BL 0x3EB1AD0
	0x032490E0 LDR X20, [X0]
	0x032490E4 BL 0x3EB1AE0
	0x032490E8 CBZ X20, 0x32490C0
	0x032490EC MOV X0, X20
	0x032490F0 BL 0x1C16F18
	0x032490F4 CBNZ X20, 0x32490FC
	0x032490F8 BL 0x1D2C690
	0x032490FC MOV X0, X20
	0x03249100 BL 0x1C16F18
	0x03249104 BL 0x1990590
	0x03249108 STR X30, [X31 - 0x30]!
	0x0324910C STP X22, X21, [X31 + 0x10]
	0x03249110 STP X20, X19, [X31 + 0x20]
	0x03249114 ADRP X22, 0x1193000
	0x03249118 LDRB W8, [X22 + 0x479]
	0x0324911C MOV X20, X2
	0x03249120 MOV X19, X1
	0x03249124 MOV X21, X0
	0x03249128 TBNZ X8, 0x0, 0x3249140
	0x0324912C ADRP X0, 0xED8000
	0x03249130 LDR X0, [X0 + 0x8F0]
	0x03249134 BL 0x1C16CF4
	0x03249138 MOVZ W8, 0x1
	0x0324913C STRB W8, [X22 + 0x479]
	0x03249140 MOV X0, X21
	0x03249144 MOV X1, X31
	0x03249148 BL 0x33BDD8C
	0x0324914C CBZ X19, 0x3249190
	0x03249150 ADRP X8, 0xED8000
	0x03249154 LDR X8, [X8 + 0x8F0]
	0x03249158 LDR X0, [X8]
	0x0324915C LDR W8, [X0 + 0xE0]
	0x03249160 CBNZ W8, 0x3249168
	0x03249164 BL 0x1C16DFC
	0x03249168 MOV X0, X19
	0x0324916C BL 0x324924C
	0x03249170 TBZ X0, 0x0, 0x32491D8
	0x03249174 STR X19, [X21 + 0x18]
	0x03249178 MOV X0, X21
	0x0324917C MOV X1, X20
	0x03249180 LDP X20, X19, [X31 + 0x20]
	0x03249184 LDP X22, X21, [X31 + 0x10]
	0x03249188 LDR X30, [X31], #0x30
	0x0324918C B 0x32492C8
	0x03249190 ADRP X0, 0xEAF000
	0x03249194 LDR X0, [X0 + 0x528]
	0x03249198 BL 0x1C16D08
	0x0324919C BL 0x1C16F10
	0x032491A0 MOV X19, X0
	0x032491A4 ADRP X0, 0xED9000
	0x032491A8 LDR X0, [X0 + 0xBD0]
	0x032491AC BL 0x1C16D08
	0x032491B0 MOV X1, X0
	0x032491B4 MOV X0, X19
	0x032491B8 MOV X2, X31
	0x032491BC BL 0x330E100
	0x032491C0 ADRP X0, 0xED9000
	0x032491C4 LDR X0, [X0 + 0xBD8]
	0x032491C8 BL 0x1C16D08
	0x032491CC MOV X1, X0
	0x032491D0 MOV X0, X19
	0x032491D4 BL 0x1C16DEC
	0x032491D8 ADRP X0, 0xED9000
	0x032491DC LDR X0, [X0 + 0xBE0]
	0x032491E0 BL 0x1C16D08
	0x032491E4 MOV X1, X31
	0x032491E8 BL 0x320A160
	0x032491EC MOV X20, X0
	0x032491F0 ADRP X0, 0xEAE000
	0x032491F4 LDR X0, [X0 + 0x928]
	0x032491F8 BL 0x1C16D08
	0x032491FC MOV X1, X0
	0x03249200 MOV X0, X20
	0x03249204 MOV X2, X19
	0x03249208 MOV X3, X31
	0x0324920C BL 0x32274B8
	0x03249210 MOV X19, X0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Compare X1, 0
	010 JumpIfEqual {91}
	011 Move W8, [X2]
	012 Move W9, [X1+16]
	013 Move X20, X1
	014 Move X19, X2
	015 Move X21, X0
	016 Add W8, W8, W9
	017 Add W1, W8, 2
	018 Call SecurityDocument.GuaranteeSize, X0, X1
	019 Move W8, [X20+16]
	020 Move X23, [X21+16]
	021 Move W25, [X19]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move W22, W31
	024 Move W24, 1
	025 Move X0, X20
	026 Move W1, W22
	027 Move X2, X31
	028 Call String.get_Chars, X0, X1
	029 Compare X23, 0
	030 JumpIfEqual {91}
	031 Move W9, [X23+24]
	032 Add W8, W25, W24
	033 Subtract W8, W8, 1
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move W9, W0
	036 ShiftRight W9, 8
	037 And W9, W9, 0x7FFFFFFF
	038 Add X8, X23, W8
	039 Move [X8+32], W9
	040 Move X23, [X21+16]
	041 Move W25, [X19]
	042 Move X0, X20
	043 Move W1, W22
	044 Move X2, X31
	045 Call String.get_Chars, X0, X1
	046 Compare X23, 0
	047 JumpIfEqual {91}
	048 Move W9, [X23+24]
	049 Add W8, W24, W25
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Add X8, X23, W8
	052 Move [X8+32], W0
	053 Move W8, [X20+16]
	054 Move X23, [X21+16]
	055 Move W25, [X19]
	056 Add W22, W22, 1
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Add W24, W24, 2
	059 Compare X23, 0
	060 JumpIfEqual {91}
	061 Move W9, [X23+24]
	062 Add W8, W25, W8
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Add X8, X23, W8
	065 Move [X8+32], W31
	066 Move X8, [X21+16]
	067 Compare X8, 0
	068 JumpIfEqual {91}
	069 Move W9, [X20+16]
	070 Move W10, [X19]
	071 Move W11, [X8+24]
	072 Add W9, W10, W9
	073 Add W9, W9, 1
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Add X8, X8, W9
	076 Move [X8+32], W31
	077 Move W8, [X19]
	078 Move W9, [X20+16]
	079 Move X22, [X31+32]
	080 Move X21, [X31+40]
	081 Move X24, [X31+16]
	082 Move X23, [X31+24]
	083 Add W8, W8, W9
	084 Add W8, W8, 2
	085 Move [X19], W8
	086 Move X20, [X31+48]
	087 Move X19, [X31+56]
	088 Move X30, [X31+64]
	089 Move X25, [X31+72]
	090 Return 
	091 Call 0x1C17F20
	092 Call 0x1C17F28

Method: System.Void AppendString(System.String str, ref System.Int32 position)

Disassembly:
	0x03249214 ADRP X0, 0xEB2000
	0x03249218 LDR X0, [X0 + 0x578]
	0x0324921C BL 0x1C16D08
	0x03249220 BL 0x1C16F10
	0x03249224 MOV X1, X19
	0x03249228 MOV X2, X31
	0x0324922C MOV X20, X0
	0x03249230 BL 0x3314A68
	0x03249234 ADRP X0, 0xED9000
	0x03249238 LDR X0, [X0 + 0xBD8]
	0x0324923C BL 0x1C16D08
	0x03249240 MOV X1, X0
	0x03249244 MOV X0, X20
	0x03249248 BL 0x1C16DEC
	0x0324924C STR X30, [X31 - 0x20]!
	0x03249250 STP X20, X19, [X31 + 0x10]
	0x03249254 ADRP X20, 0x1193000
	0x03249258 LDRB W8, [X20 + 0x481]
	0x0324925C MOV X19, X0
	0x03249260 TBNZ X8, 0x0, 0x3249278
	0x03249264 ADRP X0, 0xED8000
	0x03249268 LDR X0, [X0 + 0x8F0]
	0x0324926C BL 0x1C16CF4
	0x03249270 MOVZ W8, 0x1
	0x03249274 STRB W8, [X20 + 0x481]
	0x03249278 CBZ X19, 0x32492B8
	0x0324927C ADRP X20, 0xED8000
	0x03249280 LDR X20, [X20 + 0x8F0]
	0x03249284 LDR X0, [X20]
	0x03249288 LDR W8, [X0 + 0xE0]
	0x0324928C CBNZ W8, 0x3249298
	0x03249290 BL 0x1C16DFC
	0x03249294 LDR X0, [X20]
	0x03249298 LDR X8, [X0 + 0xB8]
	0x0324929C MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W10, [X2]
	004 Subtract W8, W10, 2
	005 Move X9, [X0+16]
	006 Compare X9, 0
	007 JumpIfEqual {38}
	008 Move W11, [X9+24]
	009 Subtract W10, W10, 1
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Add X10, X9, W10
	012 Move W10, [X10+32]
	013 Compare W10, 0
	014 JumpIfNotEqual {25}
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Add X9, X9, W8
	017 Move W9, [X9+32]
	018 Compare W9, 0
	019 JumpIfNotEqual {25}
	020 Move [X2], W8
	021 Move X30, [X31+16]
	022 Move X19, [X31+24]
	023 Call SecurityDocument.AddString, X0, X1, X2
	024 Return 
	025 Move X0, 0xEDA000
	026 Move X0, [X0+2912]
	027 Call 0x1C17D08
	028 Call 0x1C17F10
	029 Move X19, X0
	030 Call XmlSyntaxException..ctor, X0
	031 Move X0, 0xEDA000
	032 Move X0, [X0+2920]
	033 Call 0x1C17D08
	034 Move X1, X0
	035 Move X0, X19
	036 Call 0x1C17DEC
	037 Call 0x1C17F28
	038 Call 0x1C17F20

Method: System.Int32 EncodedStringSize(System.String str)

Disassembly:
	0x032492A0 MOV X2, X31
	0x032492A4 LDR X1, [X8]
	0x032492A8 BL 0x322BE8C
	0x032492AC ADDS W31, W0, 0x1
	0x032492B0 CSET W0, EQ
	0x032492B4 B 0x32492BC
	0x032492B8 MOV W0, W31
	0x032492BC LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {11}
	004 Move W8, [X0+16]
	005 Move W8, W8
	006 ShiftRight W8, 31
	007 And W8, W8, 0x3FFFFFFF
	008 Add W0, W8, 2
	009 Move X30, [X31+16]
	010 Return X0
	011 Call 0x1C17F20

Method: System.String GetString(ref System.Int32 position, System.Boolean bCreate)

Disassembly:
	0x032492C0 LDR X30, [X31], #0x20
	0x032492C4 RET
	0x032492C8 STP X30, X21, [X31 - 0x20]!
	0x032492CC STP X20, X19, [X31 + 0x10]
	0x032492D0 ADRP X21, 0x1193000
	0x032492D4 LDRB W8, [X21 + 0x47A]
	0x032492D8 MOV X19, X1
	0x032492DC MOV X20, X0
	0x032492E0 TBNZ X8, 0x0, 0x32492F8
	0x032492E4 ADRP X0, 0xED8000
	0x032492E8 LDR X0, [X0 + 0x8F0]
	0x032492EC BL 0x1C16CF4
	0x032492F0 MOVZ W8, 0x1
	0x032492F4 STRB W8, [X21 + 0x47A]
	0x032492F8 ADRP X21, 0xED8000
	0x032492FC LDR X21, [X21 + 0x8F0]
	0x03249300 CBZ X19, 0x3249320
	0x03249304 LDR X0, [X21]
	0x03249308 LDR W8, [X0 + 0xE0]
	0x0324930C CBNZ W8, 0x3249314
	0x03249310 BL 0x1C16DFC
	0x03249314 MOV X0, X19
	0x03249318 BL 0x32493CC
	0x0324931C TBZ X0, 0x0, 0x3249348
	0x03249320 LDR X0, [X21]
	0x03249324 LDR W8, [X0 + 0xE0]
	0x03249328 CBNZ W8, 0x3249330
	0x0324932C BL 0x1C16DFC
	0x03249330 MOV X0, X19
	0x03249334 BL 0x3249448
	0x03249338 STR X0, [X20 + 0x10]
	0x0324933C LDP X20, X19, [X31 + 0x10]
	0x03249340 LDP X30, X21, [X31], #0x20
	0x03249344 RET
	0x03249348 ADRP X0, 0xED9000
	0x0324934C LDR X0, [X0 + 0xBE0]
	0x03249350 BL 0x1C16D08
	0x03249354 MOV X1, X31
	0x03249358 BL 0x320A160
	0x0324935C MOV X20, X0
	0x03249360 ADRP X0, 0xEAE000
	0x03249364 LDR X0, [X0 + 0x928]
	0x03249368 BL 0x1C16D08
	0x0324936C MOV X1, X0
	0x03249370 MOV X0, X20
	0x03249374 MOV X2, X19
	0x03249378 MOV X3, X31
	0x0324937C BL 0x32274B8
	0x03249380 MOV X19, X0
	0x03249384 ADRP X0, 0xEB2000
	0x03249388 LDR X0, [X0 + 0x578]
	0x0324938C BL 0x1C16D08
	0x03249390 BL 0x1C16F10
	0x03249394 MOV X1, X19
	0x03249398 MOV X2, X31
	0x0324939C MOV X20, X0
	0x032493A0 BL 0x3314A68
	0x032493A4 ADRP X0, 0xED9000
	0x032493A8 LDR X0, [X0 + 0xBE8]
	0x032493AC BL 0x1C16D08
	0x032493B0 MOV X1, X0
	0x032493B4 MOV X0, X20
	0x032493B8 BL 0x1C16DEC
	0x032493BC LDR X0, [X0 + 0x28]
	0x032493C0 RET
	0x032493C4 LDR X0, [X0 + 0x18]
	0x032493C8 RET
	0x032493CC STR X30, [X31 - 0x20]!
	0x032493D0 STP X20, X19, [X31 + 0x10]
	0x032493D4 ADRP X20, 0x1193000
	0x032493D8 LDRB W8, [X20 + 0x482]
	0x032493DC MOV X19, X0
	0x032493E0 TBNZ X8, 0x0, 0x32493F8
	0x032493E4 ADRP X0, 0xED8000
	0x032493E8 LDR X0, [X0 + 0x8F0]
	0x032493EC BL 0x1C16CF4
	0x032493F0 MOVZ W8, 0x1
	0x032493F4 STRB W8, [X20 + 0x482]
	0x032493F8 CBZ X19, 0x3249438
	0x032493FC ADRP X20, 0xED8000
	0x03249400 LDR X20, [X20 + 0x8F0]
	0x03249404 LDR X0, [X20]
	0x03249408 LDR W8, [X0 + 0xE0]
	0x0324940C CBNZ W8, 0x3249418
	0x03249410 BL 0x1C16DFC
	0x03249414 LDR X0, [X20]
	0x03249418 LDR X8, [X0 + 0xB8]
	0x0324941C MOV X0, X19
	0x03249420 MOV X2, X31
	0x03249424 LDR X1, [X8 + 0x8]
	0x03249428 BL 0x322BE8C
	0x0324942C ADDS W31, W0, 0x1
	0x03249430 CSET W0, EQ
	0x03249434 B 0x324943C
	0x03249438 MOV W0, W31
	0x0324943C LDP X20, X19, [X31 + 0x10]
	0x03249440 LDR X30, [X31], #0x20
	0x03249444 RET
	0x03249448 STP X30, X27, [X31 - 0x50]!
	0x0324944C STP X26, X25, [X31 + 0x10]
	0x03249450 STP X24, X23, [X31 + 0x20]
	0x03249454 STP X22, X21, [X31 + 0x30]
	0x03249458 STP X20, X19, [X31 + 0x40]
	0x0324945C ADRP X20, 0x1193000
	0x03249460 LDRB W8, [X20 + 0x47E]
	0x03249464 MOV X19, X0
	0x03249468 TBNZ X8, 0x0, 0x32494F8
	0x0324946C ADRP X0, 0xEAA000
	0x03249470 LDR X0, [X0 + 0x8F0]
	0x03249474 BL 0x1C16CF4
	0x03249478 ADRP X0, 0xED9000
	0x0324947C LDR X0, [X0 + 0xBF0]
	0x03249480 BL 0x1C16CF4
	0x03249484 ADRP X0, 0xEB2000
	0x03249488 LDR X0, [X0 + 0x9B0]
	0x0324948C BL 0x1C16CF4
	0x03249490 ADRP X0, 0xED3000
	0x03249494 LDR X0, [X0 + 0xA40]
	0x03249498 BL 0x1C16CF4
	0x0324949C ADRP X0, 0xED9000
	0x032494A0 LDR X0, [X0 + 0xBF8]
	0x032494A4 BL 0x1C16CF4
	0x032494A8 ADRP X0, 0xED9000
	0x032494AC LDR X0, [X0 + 0xC00]
	0x032494B0 BL 0x1C16CF4
	0x032494B4 ADRP X0, 0xEB3000
	0x032494B8 LDR X0, [X0 + 0x720]
	0x032494BC BL 0x1C16CF4
	0x032494C0 ADRP X0, 0xEB5000
	0x032494C4 LDR X0, [X0 + 0xCD8]
	0x032494C8 BL 0x1C16CF4
	0x032494CC ADRP X0, 0xED9000
	0x032494D0 LDR X0, [X0 + 0xC08]
	0x032494D4 BL 0x1C16CF4
	0x032494D8 ADRP X0, 0xED9000
	0x032494DC LDR X0, [X0 + 0xC10]
	0x032494E0 BL 0x1C16CF4
	0x032494E4 ADRP X0, 0xEAC000
	0x032494E8 LDR X0, [X0 + 0x260]
	0x032494EC BL 0x1C16CF4
	0x032494F0 MOVZ W8, 0x1
	0x032494F4 STRB W8, [X20 + 0x47E]
	0x032494F8 CBZ X19, 0x32495F8
	0x032494FC ADRP X8, 0xEAA000
	0x03249500 LDR X8, [X8 + 0x8F0]
	0x03249504 LDR X0, [X8]
	0x03249508 BL 0x1C16F10
	0x0324950C MOV X1, X19
	0x03249510 MOV X2, X31
	0x03249514 MOV X20, X0
	0x03249518 BL 0x3231CF8
	0x0324951C CBZ X20, 0x3249614
	0x03249520 ADRP X8, 0xED9000
	0x03249524 ADRP X9, 0xED3000
	0x03249528 LDR X8, [X8 + 0xC10]
	0x0324952C LDR X9, [X9 + 0xA40]
	0x03249530 ADRP X19, 0xED9000
	0x03249534 ADRP X21, 0xEAC000
	0x03249538 ADRP X22, 0xED9000
	0x0324953C ADRP X23, 0xEB3000
	0x03249540 ADRP X24, 0xED9000
	0x03249544 LDR X19, [X19 + 0xBF8]
	0x03249548 LDR X21, [X21 + 0x260]
	0x0324954C LDR X22, [X22 + 0xBF0]
	0x03249550 LDR X23, [X23 + 0x720]
	0x03249554 LDR X24, [X24 + 0xC00]
	0x03249558 LDR X1, [X8]
	0x0324955C LDR X2, [X9]
	0x03249560 ADRP X25, 0xEB5000
	0x03249564 ADRP X26, 0xED9000
	0x03249568 ADRP X27, 0xEB2000
	0x0324956C LDR X25, [X25 + 0xCD8]
	0x03249570 LDR X26, [X26 + 0xC08]
	0x03249574 LDR X27, [X27 + 0x9B0]
	0x03249578 MOV X0, X20
	0x0324957C MOV X3, X31
	0x03249580 BL 0x3234FB0
	0x03249584 LDR X1, [X19]
	0x03249588 LDR X2, [X21]
	0x0324958C MOV X0, X20
	0x03249590 MOV X3, X31
	0x03249594 BL 0x3234FB0
	0x03249598 LDR X1, [X22]
	0x0324959C LDR X2, [X23]
	0x032495A0 MOV X0, X20
	0x032495A4 MOV X3, X31
	0x032495A8 BL 0x3234FB0
	0x032495AC LDR X1, [X24]
	0x032495B0 LDR X2, [X25]
	0x032495B4 MOV X0, X20
	0x032495B8 MOV X3, X31
	0x032495BC BL 0x3234FB0

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0x1194000
	013 Move W8, [X21+1141]
	014 Move W22, W2
	015 Move X19, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xEDA000
	022 Move X0, [X0+2928]
	023 Call 0x1C17CF4
	024 Move X0, 0xEAB000
	025 Move X0, [X0+2288]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+1141], W8
	029 Move [X31+8], X31
	030 Move X8, [X20+16]
	031 Compare X8, 0
	032 JumpIfEqual {172}
	033 Move W9, [X8+24]
	034 Move W24, [X19]
	035 Subtract W10, W9, 1
	036 NotImplemented "Instruction CMP not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Add X11, X8, W24
	039 Move W11, [X11+32]
	040 Compare W11, 0
	041 JumpIfNotEqual {48}
	042 Add W11, W24, 1
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Add X11, X8, W11
	045 Move W11, [X11+32]
	046 Compare W11, 0
	047 JumpIfEqual {49}
	048 Add W24, W24, 2
	049 Move X23, 0xEDA000
	050 Move X23, [X23+2928]
	051 Move X0, [X23]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, X31
	057 Call SharedStatics.GetSharedStringMaker
	058 Move [X31+8], X0
	059 Move TEMP, X22
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {134}
	063 Move X21, X0
	064 Compare X0, 0
	065 JumpIfEqual {175}
	066 Move [X21+32], X31
	067 Move [X21+48], W31
	068 Move W8, [X19]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X25, 0xEAB000
	071 Move X25, [X25+2288]
	072 Move W26, 1
	073 Move X9, [X20+16]
	074 Compare X9, 0
	075 JumpIfEqual {162}
	076 Move W10, [X9+24]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Add W27, W8, 1
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Add X10, X9, 32
	081 NotImplemented "Instruction LDRSW not yet implemented."
	082 Move W28, [X10]
	083 Move W8, [X10]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 NotImplemented "Instruction BFM not yet implemented."
	086 Move X8, [X21+32]
	087 Compare X8, 0
	088 JumpIfNotEqual {98}
	089 Move X0, [X25]
	090 Call 0x1C17F10
	091 Move X22, X0
	092 Move X1, X31
	093 Call StringBuilder..ctor, X0
	094 Move [X21+32], X22
	095 Move X21, [X31+8]
	096 Compare X21, 0
	097 JumpIfEqual {171}
	098 Move X0, [X21+32]
	099 Compare X0, 0
	100 JumpIfEqual {166}
	101 Move X1, [X21+40]
	102 Move W3, 512
	103 Move W2, W31
	104 Move X4, X31
	105 Call StringBuilder.Append, X0, X1, X2, X3
	106 Move X21, [X31+8]
	107 Compare X21, 0
	108 JumpIfEqual {167}
	109 Move X8, [X21+40]
	110 Compare X8, 0
	111 JumpIfEqual {169}
	112 Move W9, [X8+24]
	113 Compare W9, 0
	114 JumpIfEqual {168}
	115 NotImplemented "Instruction STRH not yet implemented."
	116 Move [X21+48], W26
	117 Move X8, [X21+40]
	118 Add W10, W9, 1
	119 Move [X21+48], W10
	120 Compare X8, 0
	121 JumpIfEqual {165}
	122 Move W10, [X8+24]
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Add X8, X8, X9
	125 NotImplemented "Instruction STRH not yet implemented."
	126 Add W8, W27, 1
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Add W8, W24, 2
	129 Move [X19], W8
	130 Move X0, X21
	131 Call StringMaker.MakeString, X0
	132 Move X21, X0
	133 Move X20, X31
	134 Add W8, W24, 2
	135 Move X20, X31
	136 Move X21, X31
	137 Move [X19], W8
	138 Move X0, [X23]
	139 Move W8, [X0+224]
	140 Compare W8, 0
	141 JumpIfNotEqual {143}
	142 Call 0x1C17DFC
	143 Add X0, X31, 8
	144 Move X1, X31
	145 Call SharedStatics.ReleaseSharedStringMaker, X0
	146 Compare X20, 0
	147 JumpIfNotEqual {173}
	148 Move X0, X21
	149 Move X20, [X31+80]
	150 Move X19, [X31+88]
	151 Move X22, [X31+64]
	152 Move X21, [X31+72]
	153 Move X24, [X31+48]
	154 Move X23, [X31+56]
	155 Move X26, [X31+32]
	156 Move X25, [X31+40]
	157 Move X28, [X31+16]
	158 Move X27, [X31+24]
	159 Move X30, [X31+96]
	160 Return X0
	161 Call 0x1C17F28
	162 Call 0x1C17F20
	163 Call 0x1C17F28
	164 Call 0x1C17F28
	165 Call 0x1C17F20
	166 Call 0x1C17F20
	167 Call 0x1C17F20
	168 Call 0x1C17F28
	169 Call 0x1C17F20
	170 Call 0x1C17F28
	171 Call 0x1C17F20
	172 Call 0x1C17F20
	173 Move X0, X20
	174 Call 0x1C17F18
	175 Call 0x1C17F20
	176 Move X19, X0
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move X0, X19
	179 Call 0x3EB2AD0
	180 Move X20, [X0]
	181 Call 0x3EB2AE0
	182 Move X21, X31
	183 Move X20, X31
	184 Move X19, X0
	185 Move X0, [X23]
	186 Move W8, [X0+224]
	187 Compare W8, 0
	188 JumpIfNotEqual {190}
	189 Call 0x1C17DFC
	190 Add X0, X31, 8
	191 Move X1, X31
	192 Call SharedStatics.ReleaseSharedStringMaker, X0
	193 Compare X20, 0
	194 JumpIfNotEqual {197}
	195 Move X0, X19
	196 Call 0x1D2D690
	197 Move X0, X20
	198 Call 0x1C17F18
	199 Call 0x1991590

Method: System.Void AddToken(System.Byte b, ref System.Int32 position)

Disassembly:
	0x032497DC LDR X10, [X8 + 0xB0]
	0x032497E0 ADD X10, X10, 0x8
	0x032497E4 LDUR X11, [X10 - 0x8]
	0x032497E8 CMP X11, X1
	0x032497EC B.EQ 0x324980C
	0x032497F0 SUBS X9, X9, 0x1
	0x032497F4 ADD X10, X10, 0x10
	0x032497F8 B.NE 0x32497E4
	0x032497FC MOV X0, X19
	0x03249800 MOV W2, W31
	0x03249804 BL 0x1C5C788
	0x03249808 B 0x3249818
	0x0324980C LDRSW X9, [X10]
	0x03249810 ADD X8, X8, X9, 0x4, LSL
	0x03249814 ADD X0, X8, 0x138
	0x03249818 LDP X8, X1, [X0]
	0x0324981C MOV X0, X19
	0x03249820 BLR X8
	0x03249824 CBNZ X20, 0x3249850
	0x03249828 MOV X0, X21
	0x0324982C LDP X20, X19, [X31 + 0x30]
	0x03249830 LDP X22, X21, [X31 + 0x20]
	0x03249834 LDP X24, X23, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X2]
	006 Move W19, W1
	007 Move X20, X2
	008 Move X21, X0
	009 Add W1, W8, 1
	010 Call SecurityDocument.GuaranteeSize, X0, X1
	011 NotImplemented "Instruction LDRSW not yet implemented."
	012 Move X9, [X21+16]
	013 Add W10, W8, 1
	014 Move [X20], W10
	015 Compare X9, 0
	016 JumpIfEqual {26}
	017 Move W10, [X9+24]
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Add X8, X9, X8
	020 Move [X8+32], W19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Return 
	026 Call 0x1C17F20
	027 Call 0x1C17F28

Method: System.Security.SecurityElement GetRootElement()

Disassembly:
	0x03249838 LDR X30, [X31], #0x40
	0x0324983C RET
	0x03249840 MOV X0, X21
	0x03249844 BL 0x1C171E0
	0x03249848 BL 0x1C16F20
	0x0324984C BL 0x1C16F20
	0x03249850 MOV X0, X20

ISIL:
	001 Move [X31-16], X30
	002 Add X1, X31, 12
	003 Move W2, 1
	004 Move [X31+12], W31
	005 Call SecurityDocument.InternalGetElement, X0, X1, X2
	006 Move X30, [X31+16]
	007 Return X0

Method: System.Security.SecurityElement GetElement(System.Int32 position, System.Boolean bCreate)

Disassembly:
	0x03249854 BL 0x1C16F18
	0x03249858 B 0x324986C
	0x0324985C B 0x324986C
	0x03249860 B 0x324986C
	0x03249864 B 0x324986C
	0x03249868 B 0x324986C
	0x0324986C MOV X21, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31+12], W1
	003 And W2, W2, 1
	004 Add X1, X31, 12
	005 Call SecurityDocument.InternalGetElement, X0, X1, X2
	006 Move X30, [X31+16]
	007 Return X0

Method: System.Security.SecurityElement InternalGetElement(ref System.Int32 position, System.Boolean bCreate)

Disassembly:
	0x03249870 CMP W1, 0x1
	0x03249874 B.NE 0x324988C
	0x03249878 MOV X0, X21
	0x0324987C BL 0x3EB1AD0
	0x03249880 LDR X20, [X0]
	0x03249884 BL 0x3EB1AE0
	0x03249888 B 0x32497B4
	0x0324988C MOV X20, X31
	0x03249890 B 0x3249898
	0x03249894 MOV X21, X0
	0x03249898 LDR X1, [X22]
	0x0324989C MOV X0, X19
	0x032498A0 BL 0x1C16E00
	0x032498A4 MOV X19, X0
	0x032498A8 CBZ X0, 0x3249904
	0x032498AC LDR X8, [X19]
	0x032498B0 LDR X1, [X22]
	0x032498B4 LDRH W9, [X8 + 0x12E]
	0x032498B8 CBZ X9, 0x32498DC
	0x032498BC LDR X10, [X8 + 0xB0]
	0x032498C0 ADD X10, X10, 0x8
	0x032498C4 LDUR X11, [X10 - 0x8]
	0x032498C8 CMP X11, X1
	0x032498CC B.EQ 0x32498EC
	0x032498D0 SUBS X9, X9, 0x1
	0x032498D4 ADD X10, X10, 0x10
	0x032498D8 B.NE 0x32498C4
	0x032498DC MOV X0, X19
	0x032498E0 MOV W2, W31
	0x032498E4 BL 0x1C5C788
	0x032498E8 B 0x32498F8
	0x032498EC LDRSW X9, [X10]
	0x032498F0 ADD X8, X8, X9, 0x4, LSL
	0x032498F4 ADD X0, X8, 0x138
	0x032498F8 LDP X8, X1, [X0]
	0x032498FC MOV X0, X19
	0x03249900 BLR X8
	0x03249904 CBNZ X20, 0x3249910
	0x03249908 MOV X0, X21
	0x0324990C BL 0x1D2C690
	0x03249910 MOV X0, X20
	0x03249914 BL 0x1C16F18
	0x03249918 BL 0x1990590
	0x0324991C STP X30, X23, [X31 - 0x30]!
	0x03249920 STP X22, X21, [X31 + 0x10]
	0x03249924 STP X20, X19, [X31 + 0x20]
	0x03249928 ADRP X23, 0x1193000
	0x0324992C ADRP X22, 0xED8000
	0x03249930 LDRB W8, [X23 + 0x489]
	0x03249934 LDR X22, [X22 + 0x8F0]
	0x03249938 MOV X19, X2
	0x0324993C MOV X20, X1
	0x03249940 MOV X21, X0
	0x03249944 TBNZ X8, 0x0, 0x324995C
	0x03249948 ADRP X0, 0xED8000
	0x0324994C LDR X0, [X0 + 0x8F0]
	0x03249950 BL 0x1C16CF4
	0x03249954 MOVZ W8, 0x1
	0x03249958 STRB W8, [X23 + 0x489]
	0x0324995C MOV X0, X21
	0x03249960 MOV X1, X31
	0x03249964 BL 0x33BDD8C
	0x03249968 LDR X0, [X22]
	0x0324996C LDR W8, [X0 + 0xE0]
	0x03249970 CBNZ W8, 0x3249978
	0x03249974 BL 0x1C16DFC
	0x03249978 MOV X0, X20
	0x0324997C BL 0x3249C80
	0x03249980 TBZ X0, 0x0, 0x32499D0
	0x03249984 LDR X0, [X22]
	0x03249988 LDR W8, [X0 + 0xE0]
	0x0324998C CBNZ W8, 0x3249994
	0x03249990 BL 0x1C16DFC
	0x03249994 MOV X0, X19
	0x03249998 BL 0x3249CFC
	0x0324999C TBZ X0, 0x0, 0x3249A04
	0x032499A0 STR X20, [X21 + 0x10]
	0x032499A4 LDR X0, [X22]
	0x032499A8 LDR W8, [X0 + 0xE0]
	0x032499AC CBNZ W8, 0x32499B4
	0x032499B0 BL 0x1C16DFC
	0x032499B4 MOV X0, X19
	0x032499B8 BL 0x3249448
	0x032499BC STR X0, [X21 + 0x18]
	0x032499C0 LDP X20, X19, [X31 + 0x20]
	0x032499C4 LDP X22, X21, [X31 + 0x10]
	0x032499C8 LDP X30, X23, [X31], #0x30
	0x032499CC RET
	0x032499D0 ADRP X0, 0xED9000
	0x032499D4 LDR X0, [X0 + 0xC18]
	0x032499D8 BL 0x1C16D08
	0x032499DC MOV X1, X31
	0x032499E0 BL 0x320A160
	0x032499E4 MOV X19, X0
	0x032499E8 ADRP X0, 0xEAE000
	0x032499EC LDR X0, [X0 + 0x928]
	0x032499F0 BL 0x1C16D08
	0x032499F4 MOV X1, X0
	0x032499F8 MOV X0, X19
	0x032499FC MOV X2, X20
	0x03249A00 B 0x3249A34
	0x03249A04 ADRP X0, 0xED9000
	0x03249A08 LDR X0, [X0 + 0xC20]
	0x03249A0C BL 0x1C16D08
	0x03249A10 MOV X1, X31
	0x03249A14 BL 0x320A160
	0x03249A18 MOV X20, X0
	0x03249A1C ADRP X0, 0xEAE000
	0x03249A20 LDR X0, [X0 + 0x928]
	0x03249A24 BL 0x1C16D08
	0x03249A28 MOV X1, X0
	0x03249A2C MOV X0, X20
	0x03249A30 MOV X2, X19
	0x03249A34 MOV X3, X31
	0x03249A38 BL 0x32274B8
	0x03249A3C MOV X19, X0
	0x03249A40 ADRP X0, 0xEB2000
	0x03249A44 LDR X0, [X0 + 0x578]
	0x03249A48 BL 0x1C16D08
	0x03249A4C BL 0x1C16F10
	0x03249A50 MOV X1, X19
	0x03249A54 MOV X2, X31
	0x03249A58 MOV X20, X0
	0x03249A5C BL 0x3314A68
	0x03249A60 ADRP X0, 0xED9000
	0x03249A64 LDR X0, [X0 + 0xC28]
	0x03249A68 BL 0x1C16D08

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x1194000
	009 Move W8, [X22+1142]
	010 Move W20, W2
	011 Move X19, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xED9000
	018 Move X0, [X0+2288]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+1142], W8
	022 Move X8, [X21+16]
	023 Compare X8, 0
	024 JumpIfEqual {130}
	025 NotImplemented "Instruction LDRSW not yet implemented."
	026 Move W10, [X8+24]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Add W11, W9, 1
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move [X19], W11
	031 Add X8, X8, X9
	032 Move W8, [X8+32]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 And W2, W20, 1
	035 Move X0, X21
	036 Move X1, X19
	037 Call SecurityDocument.GetString, X0, X1, X2
	038 Move TEMP, X20
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {51}
	042 Move X8, 0xED9000
	043 Move X8, [X8+2288]
	044 Move X23, X0
	045 Move X0, [X8]
	046 Call 0x1C17F10
	047 Move X1, X23
	048 Move X2, X31
	049 Move X22, X0
	050 Call SecurityElement..ctor, X0, X1, X2
	051 Move X22, X31
	052 And W24, W20, 1
	053 Add W8, W8, 1
	054 Move X0, X21
	055 Move X1, X19
	056 Move W2, W24
	057 Move [X19], W8
	058 Call SecurityDocument.GetString, X0, X1, X2
	059 Move X23, X0
	060 Move X0, X21
	061 Move X1, X19
	062 Move W2, W24
	063 Call SecurityDocument.GetString, X0, X1, X2
	064 Move TEMP, X20
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {74}
	068 Compare X22, 0
	069 JumpIfEqual {130}
	070 Move X2, X0
	071 Move X0, X22
	072 Move X1, X23
	073 Call SecurityElement.AddAttribute, X0, X1, X2
	074 Move X9, [X21+16]
	075 Compare X9, 0
	076 JumpIfEqual {130}
	077 NotImplemented "Instruction LDRSW not yet implemented."
	078 Move W10, [X9+24]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Add X9, X9, X8
	081 Move W9, [X9+32]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Add W8, W8, 1
	085 And W2, W20, 1
	086 Move X0, X21
	087 Move X1, X19
	088 Move [X19], W8
	089 Call SecurityDocument.GetString, X0, X1, X2
	090 Move TEMP, X20
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfNotEqual {110}
	094 Compare X22, 0
	095 JumpIfEqual {130}
	096 Move [X22+16], X0
	097 And W2, W20, 1
	098 Move X0, X21
	099 Move X1, X19
	100 Call SecurityDocument.InternalGetElement, X0, X1, X2
	101 Move TEMP, X20
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfNotEqual {110}
	105 Compare X22, 0
	106 JumpIfEqual {130}
	107 Move X1, X0
	108 Move X0, X22
	109 Call SecurityElement.AddChild, X0, X1
	110 Move X8, [X21+16]
	111 Compare X8, 0
	112 JumpIfEqual {130}
	113 NotImplemented "Instruction LDRSW not yet implemented."
	114 Move W10, [X8+24]
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Add X8, X8, X9
	117 Move W8, [X8+32]
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Add W8, W9, 1
	120 Move [X19], W8
	121 Move X0, X22
	122 Move X20, [X31+48]
	123 Move X19, [X31+56]
	124 Move X22, [X31+32]
	125 Move X21, [X31+40]
	126 Move X24, [X31+16]
	127 Move X23, [X31+24]
	128 Move X30, [X31+64]
	129 Return X0
	130 Call 0x1C17F20
	131 Call 0x1C17F28
	132 Move X0, 0xEDA000
	133 Move X0, [X0+2912]
	134 Call 0x1C17D08
	135 Call 0x1C17F10
	136 Move X19, X0
	137 Call XmlSyntaxException..ctor, X0
	138 Move X0, 0xEDA000
	139 Move X0, [X0+2936]
	140 Call 0x1C17D08
	141 Move X1, X0
	142 Move X0, X19
	143 Call 0x1C17DEC

