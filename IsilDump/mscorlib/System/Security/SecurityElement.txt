Type: System.Security.SecurityElement

Method: System.Void .ctor(System.String tag)

Disassembly:
	0x03249A6C MOV X1, X0
	0x03249A70 MOV X0, X20

ISIL:
	001 Move X2, X31
	002 Call SecurityElement..ctor, X0, X1, X2
	003 Return 

Method: System.Void .ctor(System.String tag, System.String text)

Disassembly:
	0x0324A108 MOV X0, X8
	0x0324A10C BL 0x1C16DFC
	0x0324A110 MOV X0, X24
	0x0324A114 BL 0x3249A78
	0x0324A118 CBZ X23, 0x324A18C
	0x0324A11C MOV X1, X0
	0x0324A120 MOV X0, X23
	0x0324A124 MOV X2, X31
	0x0324A128 BL 0x32333E0
	0x0324A12C CBZ X0, 0x324A18C
	0x0324A130 LDR X1, [X28]
	0x0324A134 MOV X2, X31
	0x0324A138 BL 0x32333E0
	0x0324A13C LDR X0, [X19 + 0x20]
	0x0324A140 CBZ X0, 0x324A18C
	0x0324A144 LDR X8, [X0]
	0x0324A148 LDR X9, [X8 + 0x298]
	0x0324A14C LDR X1, [X8 + 0x2A0]
	0x0324A150 BLR X9
	0x0324A154 SUB W8, W0, 0x1
	0x0324A158 CMP W22, W8
	0x0324A15C B.EQ 0x324A180
	0x0324A160 LDR X23, [X20]
	0x0324A164 MOV X0, X31
	0x0324A168 BL 0x33C1548
	0x0324A16C CBZ X23, 0x324A18C
	0x0324A170 MOV X1, X0
	0x0324A174 MOV X0, X23
	0x0324A178 MOV X2, X31
	0x0324A17C BL 0x32333E0
	0x0324A180 LDR X0, [X19 + 0x20]
	0x0324A184 ADD W22, W22, 0x1
	0x0324A188 CBNZ X0, 0x324A068
	0x0324A18C BL 0x1C16F20
	0x0324A190 LDR X0, [X19 + 0x10]
	0x0324A194 CBZ X0, 0x324A1B8
	0x0324A198 ADRP X8, 0xEAB000
	0x0324A19C LDR X8, [X8 + 0x278]
	0x0324A1A0 MOV X2, X31
	0x0324A1A4 LDR X8, [X8]
	0x0324A1A8 LDR X8, [X8 + 0xB8]
	0x0324A1AC LDR X1, [X8]
	0x0324A1B0 BL 0x321BA08
	0x0324A1B4 TBZ X0, 0x0, 0x324A1D4
	0x0324A1B8 LDR X0, [X19 + 0x28]
	0x0324A1BC CBZ X0, 0x324A358
	0x0324A1C0 LDR X8, [X0]
	0x0324A1C4 LDR X9, [X8 + 0x298]
	0x0324A1C8 LDR X1, [X8 + 0x2A0]
	0x0324A1CC BLR X9
	0x0324A1D0 CBZ W0, 0x324A358
	0x0324A1D4 LDR X0, [X20]
	0x0324A1D8 CBZ X0, 0x324A18C
	0x0324A1DC ADRP X24, 0xEAB000
	0x0324A1E0 LDR X24, [X24 + 0x260]
	0x0324A1E4 MOV X2, X31
	0x0324A1E8 LDR X1, [X24]
	0x0324A1EC BL 0x32333E0
	0x0324A1F0 LDR X8, [X25]
	0x0324A1F4 LDR X23, [X19 + 0x10]
	0x0324A1F8 MOV X22, X0
	0x0324A1FC LDR W9, [X8 + 0xE0]
	0x0324A200 CBNZ W9, 0x324A20C
	0x0324A204 MOV X0, X8
	0x0324A208 BL 0x1C16DFC
	0x0324A20C MOV X0, X23
	0x0324A210 BL 0x3249A78
	0x0324A214 CBZ X22, 0x324A18C
	0x0324A218 MOV X1, X0
	0x0324A21C MOV X0, X22
	0x0324A220 MOV X2, X31
	0x0324A224 BL 0x32333E0
	0x0324A228 LDR X8, [X19 + 0x28]
	0x0324A22C CBZ X8, 0x324A3FC
	0x0324A230 LDR X22, [X20]
	0x0324A234 MOV X0, X31
	0x0324A238 BL 0x33C1548
	0x0324A23C CBZ X22, 0x324A18C
	0x0324A240 MOV X1, X0
	0x0324A244 MOV X0, X22
	0x0324A248 MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1193000
	007 Move W8, [X22+1145]
	008 Move X20, X2
	009 Move X19, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xED8000
	016 Move X0, [X0+2288]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1145], W8
	020 Move X0, X21
	021 Move X1, X31
	022 Call Object..ctor, X0
	023 Compare X19, 0
	024 JumpIfEqual {48}
	025 Move X8, 0xED8000
	026 Move X8, [X8+2288]
	027 Move X0, [X8]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X19
	033 Call SecurityElement.IsValidTag, X0
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {66}
	038 Move [X21+24], X19
	039 Move X0, X21
	040 Move X1, X20
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Move X30, [X31+48]
	046 Call SecurityElement.set_Text, X0, X1
	047 Return 
	048 Move X0, 0xEAF000
	049 Move X0, [X0+1320]
	050 Call 0x1C17D08
	051 Call 0x1C17F10
	052 Move X19, X0
	053 Move X0, 0xED9000
	054 Move X0, [X0+3024]
	055 Call 0x1C17D08
	056 Move X1, X0
	057 Move X0, X19
	058 Move X2, X31
	059 Call ArgumentNullException..ctor, X0, X1
	060 Move X0, 0xED9000
	061 Move X0, [X0+3032]
	062 Call 0x1C17D08
	063 Move X1, X0
	064 Move X0, X19
	065 Call 0x1C17DEC
	066 Move X0, 0xED9000
	067 Move X0, [X0+3040]
	068 Call 0x1C17D08
	069 Move X1, X31
	070 Call Locale.GetText, X0
	071 Move X20, X0
	072 Move X0, 0xEAE000
	073 Move X0, [X0+2344]
	074 Call 0x1C17D08
	075 Move X1, X0
	076 Move X0, X20
	077 Move X2, X19
	078 Move X3, X31
	079 Call String.Concat, X0, X1, X2
	080 Move X19, X0
	081 Move X0, 0xEB2000
	082 Move X0, [X0+1400]
	083 Call 0x1C17D08
	084 Call 0x1C17F10
	085 Move X1, X19
	086 Move X2, X31
	087 Move X20, X0
	088 Call ArgumentException..ctor, X0, X1
	089 Move X0, 0xED9000
	090 Move X0, [X0+3032]
	091 Call 0x1C17D08
	092 Move X1, X0
	093 Move X0, X20
	094 Call 0x1C17DEC

Method: System.Collections.ArrayList get_Children()

Disassembly:
	0x0324A3BC ADD X10, X10, 0x10
	0x0324A3C0 B.NE 0x324A3AC

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.String get_Tag()

Disassembly:
	0x0324A3C4 MOV X0, X22
	0x0324A3C8 MOV W2, W31

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_Text(System.String value)

Disassembly:
	0x0324A2C8 LDP X8, X1, [X0]
	0x0324A2CC MOV X0, X22
	0x0324A2D0 BLR X8
	0x0324A2D4 TBZ X0, 0x0, 0x324A370
	0x0324A2D8 LDR X8, [X22]
	0x0324A2DC LDR X1, [X23]
	0x0324A2E0 LDRH W9, [X8 + 0x12E]
	0x0324A2E4 CBZ X9, 0x324A308
	0x0324A2E8 LDR X10, [X8 + 0xB0]
	0x0324A2EC ADD X10, X10, 0x8
	0x0324A2F0 LDUR X11, [X10 - 0x8]
	0x0324A2F4 CMP X11, X1
	0x0324A2F8 B.EQ 0x324A318
	0x0324A2FC SUBS X9, X9, 0x1
	0x0324A300 ADD X10, X10, 0x10
	0x0324A304 B.NE 0x324A2F0
	0x0324A308 MOVZ W2, 0x1
	0x0324A30C MOV X0, X22
	0x0324A310 BL 0x1C5C788
	0x0324A314 B 0x324A328
	0x0324A318 LDR W9, [X10]
	0x0324A31C ADD W9, W9, 0x1
	0x0324A320 ADD X8, X8, W9, 0x4, SXTW
	0x0324A324 ADD X0, X8, 0x138
	0x0324A328 LDP X8, X1, [X0]
	0x0324A32C MOV X0, X22
	0x0324A330 BLR X8
	0x0324A334 CBZ X0, 0x324A498
	0x0324A338 LDR X1, [X25]
	0x0324A33C LDR X8, [X0]
	0x0324A340 CMP X8, X1
	0x0324A344 B.NE 0x324A494
	0x0324A348 MOV X1, X20
	0x0324A34C MOV W2, W21
	0x0324A350 BL 0x3249F20
	0x0324A354 B 0x324A27C
	0x0324A358 LDR X0, [X20]
	0x0324A35C CBZ X0, 0x324A18C
	0x0324A360 ADRP X8, 0xED8000
	0x0324A364 LDR X8, [X8 + 0xC48]
	0x0324A368 LDR X1, [X8]
	0x0324A36C B 0x324A430
	0x0324A370 MOV X21, X31
	0x0324A374 MOVZ W23, 0x9
	0x0324A378 ADRP X25, 0xEA9000
	0x0324A37C LDR X25, [X25 + 0xE00]
	0x0324A380 MOV X0, X22
	0x0324A384 LDR X1, [X25]
	0x0324A388 BL 0x1C16E00
	0x0324A38C CBZ X0, 0x324A3EC
	0x0324A390 LDR X8, [X0]
	0x0324A394 LDR X1, [X25]
	0x0324A398 MOV X22, X0
	0x0324A39C LDRH W9, [X8 + 0x12E]
	0x0324A3A0 CBZ X9, 0x324A3C4
	0x0324A3A4 LDR X10, [X8 + 0xB0]
	0x0324A3A8 ADD X10, X10, 0x8
	0x0324A3AC LDUR X11, [X10 - 0x8]
	0x0324A3B0 CMP X11, X1
	0x0324A3B4 B.EQ 0x324A3D4
	0x0324A3B8 SUBS X9, X9, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1193000
	006 Move W8, [X21+1146]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xED8000
	014 Move X0, [X0+2288]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1146], W8
	018 Move X21, 0xED8000
	019 Move X21, [X21+2288]
	020 Compare X19, 0
	021 JumpIfEqual {33}
	022 Move X0, [X21]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X19
	028 Call SecurityElement.IsValidText, X0
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {46}
	033 Move X0, [X21]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X0, X19
	039 Call SecurityElement.Unescape, X0
	040 Move [X20+16], X0
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Return 
	046 Move X0, 0xED9000
	047 Move X0, [X0+3040]
	048 Call 0x1C17D08
	049 Move X1, X31
	050 Call Locale.GetText, X0
	051 Move X20, X0
	052 Move X0, 0xEAE000
	053 Move X0, [X0+2344]
	054 Call 0x1C17D08
	055 Move X1, X0
	056 Move X0, X20
	057 Move X2, X19
	058 Move X3, X31
	059 Call String.Concat, X0, X1, X2
	060 Move X19, X0
	061 Move X0, 0xEB2000
	062 Move X0, [X0+1400]
	063 Call 0x1C17D08
	064 Call 0x1C17F10
	065 Move X1, X19
	066 Move X2, X31
	067 Move X20, X0
	068 Call ArgumentException..ctor, X0, X1
	069 Move X0, 0xED9000
	070 Move X0, [X0+3048]
	071 Call 0x1C17D08
	072 Move X1, X0
	073 Move X0, X20
	074 Call 0x1C17DEC

Method: System.Void AddAttribute(System.String name, System.String value)

Disassembly:
	0x03249A74 BL 0x1C16DEC
	0x03249A78 STP X30, X27, [X31 - 0x50]!
	0x03249A7C STP X26, X25, [X31 + 0x10]
	0x03249A80 STP X24, X23, [X31 + 0x20]
	0x03249A84 STP X22, X21, [X31 + 0x30]
	0x03249A88 STP X20, X19, [X31 + 0x40]
	0x03249A8C ADRP X20, 0x1193000
	0x03249A90 LDRB W8, [X20 + 0x47D]
	0x03249A94 MOV X19, X0
	0x03249A98 TBNZ X8, 0x0, 0x3249AF8
	0x03249A9C ADRP X0, 0xED8000
	0x03249AA0 LDR X0, [X0 + 0x8F0]
	0x03249AA4 BL 0x1C16CF4
	0x03249AA8 ADRP X0, 0xEAA000
	0x03249AAC LDR X0, [X0 + 0x8F0]
	0x03249AB0 BL 0x1C16CF4
	0x03249AB4 ADRP X0, 0xED9000
	0x03249AB8 LDR X0, [X0 + 0xBF0]
	0x03249ABC BL 0x1C16CF4
	0x03249AC0 ADRP X0, 0xED9000
	0x03249AC4 LDR X0, [X0 + 0xBF8]
	0x03249AC8 BL 0x1C16CF4
	0x03249ACC ADRP X0, 0xED9000
	0x03249AD0 LDR X0, [X0 + 0xC00]
	0x03249AD4 BL 0x1C16CF4
	0x03249AD8 ADRP X0, 0xED9000
	0x03249ADC LDR X0, [X0 + 0xC08]
	0x03249AE0 BL 0x1C16CF4
	0x03249AE4 ADRP X0, 0xED9000
	0x03249AE8 LDR X0, [X0 + 0xC10]
	0x03249AEC BL 0x1C16CF4
	0x03249AF0 MOVZ W8, 0x1
	0x03249AF4 STRB W8, [X20 + 0x47D]
	0x03249AF8 CBZ X19, 0x3249C38
	0x03249AFC ADRP X20, 0xED8000
	0x03249B00 LDR X20, [X20 + 0x8F0]
	0x03249B04 LDR X0, [X20]
	0x03249B08 LDR W8, [X0 + 0xE0]
	0x03249B0C CBNZ W8, 0x3249B18
	0x03249B10 BL 0x1C16DFC
	0x03249B14 LDR X0, [X20]
	0x03249B18 LDR X8, [X0 + 0xB8]
	0x03249B1C MOV X0, X19
	0x03249B20 MOV X2, X31
	0x03249B24 LDR X1, [X8 + 0x20]
	0x03249B28 BL 0x322BE8C
	0x03249B2C ADDS W31, W0, 0x1
	0x03249B30 B.EQ 0x3249C38
	0x03249B34 ADRP X8, 0xEAA000
	0x03249B38 LDR X8, [X8 + 0x8F0]
	0x03249B3C LDR X0, [X8]
	0x03249B40 BL 0x1C16F10
	0x03249B44 MOV X1, X31
	0x03249B48 MOV X20, X0
	0x03249B4C BL 0x3231AC4
	0x03249B50 LDR W22, [X19 + 0x10]
	0x03249B54 CMP W22, 0x1
	0x03249B58 B.LT 0x3249C54
	0x03249B5C ADRP X23, 0xED9000
	0x03249B60 ADRP X24, 0xED9000
	0x03249B64 ADRP X25, 0xED9000
	0x03249B68 ADRP X26, 0xED9000
	0x03249B6C ADRP X27, 0xED9000
	0x03249B70 LDR X23, [X23 + 0xC00]
	0x03249B74 LDR X24, [X24 + 0xBF0]
	0x03249B78 LDR X25, [X25 + 0xC08]
	0x03249B7C LDR X26, [X26 + 0xBF8]
	0x03249B80 LDR X27, [X27 + 0xC10]
	0x03249B84 MOV W21, W31
	0x03249B88 MOV X0, X19
	0x03249B8C MOV W1, W21
	0x03249B90 MOV X2, X31
	0x03249B94 BL 0x3222A1C
	0x03249B98 AND W8, W0, 0xFFFF
	0x03249B9C MOV W1, W0
	0x03249BA0 CMP W8, 0x26
	0x03249BA4 B.HI 0x3249BC4
	0x03249BA8 CMP W8, 0x22
	0x03249BAC B.EQ 0x3249BFC
	0x03249BB0 CMP W8, 0x26
	0x03249BB4 B.NE 0x3249BE8
	0x03249BB8 CBZ X20, 0x3249C7C
	0x03249BBC LDR X1, [X24]
	0x03249BC0 B 0x3249C1C
	0x03249BC4 CMP W8, 0x27
	0x03249BC8 B.EQ 0x3249C08
	0x03249BCC CMP W8, 0x3E
	0x03249BD0 B.EQ 0x3249C14
	0x03249BD4 CMP W8, 0x3C
	0x03249BD8 B.NE 0x3249BE8
	0x03249BDC CBZ X20, 0x3249C7C
	0x03249BE0 LDR X1, [X27]
	0x03249BE4 B 0x3249C1C
	0x03249BE8 CBZ X20, 0x3249C7C
	0x03249BEC MOV X0, X20
	0x03249BF0 MOV X2, X31
	0x03249BF4 BL 0x3233D30
	0x03249BF8 B 0x3249C28
	0x03249BFC CBZ X20, 0x3249C7C
	0x03249C00 LDR X1, [X23]
	0x03249C04 B 0x3249C1C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1194000
	008 Move W8, [X22+1147]
	009 Move X20, X2
	010 Move X19, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xED8000
	017 Move X0, [X0+2976]
	018 Call 0x1C17CF4
	019 Move X0, 0xEDA000
	020 Move X0, [X0+2944]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1147], W8
	024 Compare X19, 0
	025 JumpIfEqual {66}
	026 Compare X20, 0
	027 JumpIfEqual {73}
	028 Move X0, X21
	029 Move X1, X19
	030 Call SecurityElement.GetAttribute, X0, X1
	031 Compare X0, 0
	032 JumpIfNotEqual {91}
	033 Move X23, 0xEDA000
	034 Move X22, [X21+32]
	035 Move X23, [X23+2944]
	036 Compare X22, 0
	037 JumpIfNotEqual {46}
	038 Move X8, 0xED8000
	039 Move X8, [X8+2976]
	040 Move X0, [X8]
	041 Call 0x1C17F10
	042 Move X1, X31
	043 Move X22, X0
	044 Call ArrayList..ctor, X0
	045 Move [X21+32], X22
	046 Move X0, [X23]
	047 Call 0x1C17F10
	048 Move X1, X19
	049 Move X2, X20
	050 Move X21, X0
	051 Call SecurityAttribute..ctor, X0, X1, X2
	052 Compare X22, 0
	053 JumpIfEqual {114}
	054 Move X8, [X22]
	055 Move X0, X22
	056 Move X1, X21
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X3, [X8+776]
	060 Move X2, [X8+784]
	061 Move X22, [X31+16]
	062 Move X21, [X31+24]
	063 Move X30, [X31+48]
	064 Move X23, [X31+56]
	065 CallNoReturn X3
	066 Move X0, 0xEB0000
	067 Move X0, [X0+1320]
	068 Call 0x1C17D08
	069 Call 0x1C17F10
	070 Move X19, X0
	071 Move X0, 0xEB3000
	072 Move X0, [X0+1416]
	073 Move X0, 0xEB0000
	074 Move X0, [X0+1320]
	075 Call 0x1C17D08
	076 Call 0x1C17F10
	077 Move X19, X0
	078 Move X0, 0xEB5000
	079 Move X0, [X0+3784]
	080 Call 0x1C17D08
	081 Move X1, X0
	082 Move X0, X19
	083 Move X2, X31
	084 Call ArgumentNullException..ctor, X0, X1
	085 Move X0, 0xEDA000
	086 Move X0, [X0+2952]
	087 Call 0x1C17D08
	088 Move X1, X0
	089 Move X0, X19
	090 Call 0x1C17DEC
	091 Move X0, 0xEDA000
	092 Move X0, [X0+2960]
	093 Call 0x1C17D08
	094 Move X1, X19
	095 Move X2, X31
	096 Call String.Concat, X0, X1
	097 Move X1, X31
	098 Call Locale.GetText, X0
	099 Move X19, X0
	100 Move X0, 0xEB3000
	101 Move X0, [X0+1400]
	102 Call 0x1C17D08
	103 Call 0x1C17F10
	104 Move X1, X19
	105 Move X2, X31
	106 Move X20, X0
	107 Call ArgumentException..ctor, X0, X1
	108 Move X0, 0xEDA000
	109 Move X0, [X0+2952]
	110 Call 0x1C17D08
	111 Move X1, X0
	112 Move X0, X20
	113 Call 0x1C17DEC
	114 Call 0x1C17F20

Method: System.Void AddChild(System.Security.SecurityElement child)

Disassembly:
	0x03249C08 CBZ X20, 0x3249C7C
	0x03249C0C LDR X1, [X25]
	0x03249C10 B 0x3249C1C
	0x03249C14 CBZ X20, 0x3249C7C
	0x03249C18 LDR X1, [X26]
	0x03249C1C MOV X0, X20
	0x03249C20 MOV X2, X31
	0x03249C24 BL 0x32333E0
	0x03249C28 ADD W21, W21, 0x1
	0x03249C2C CMP W22, W21
	0x03249C30 B.NE 0x3249B88
	0x03249C34 B 0x3249C58
	0x03249C38 MOV X0, X19
	0x03249C3C LDP X20, X19, [X31 + 0x40]
	0x03249C40 LDP X22, X21, [X31 + 0x30]
	0x03249C44 LDP X24, X23, [X31 + 0x20]
	0x03249C48 LDP X26, X25, [X31 + 0x10]
	0x03249C4C LDP X30, X27, [X31], #0x50
	0x03249C50 RET
	0x03249C54 CBZ X20, 0x3249C7C
	0x03249C58 LDR X8, [X20]
	0x03249C5C MOV X0, X20
	0x03249C60 LDP X20, X19, [X31 + 0x40]
	0x03249C64 LDP X22, X21, [X31 + 0x30]
	0x03249C68 LDP X2, X1, [X8 + 0x168]
	0x03249C6C LDP X24, X23, [X31 + 0x20]
	0x03249C70 LDP X26, X25, [X31 + 0x10]
	0x03249C74 LDP X30, X27, [X31], #0x50
	0x03249C78 BR X2
	0x03249C7C BL 0x1C16F20
	0x03249C80 STR X30, [X31 - 0x20]!
	0x03249C84 STP X20, X19, [X31 + 0x10]
	0x03249C88 ADRP X20, 0x1193000
	0x03249C8C LDRB W8, [X20 + 0x47F]
	0x03249C90 MOV X19, X0
	0x03249C94 TBNZ X8, 0x0, 0x3249CAC
	0x03249C98 ADRP X0, 0xED8000
	0x03249C9C LDR X0, [X0 + 0x8F0]
	0x03249CA0 BL 0x1C16CF4
	0x03249CA4 MOVZ W8, 0x1
	0x03249CA8 STRB W8, [X20 + 0x47F]
	0x03249CAC CBZ X19, 0x3249CEC
	0x03249CB0 ADRP X20, 0xED8000
	0x03249CB4 LDR X20, [X20 + 0x8F0]
	0x03249CB8 LDR X0, [X20]
	0x03249CBC LDR W8, [X0 + 0xE0]
	0x03249CC0 CBNZ W8, 0x3249CCC
	0x03249CC4 BL 0x1C16DFC
	0x03249CC8 LDR X0, [X20]
	0x03249CCC LDR X8, [X0 + 0xB8]
	0x03249CD0 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1194000
	006 Move W8, [X21+1148]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xED8000
	014 Move X0, [X0+2976]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1148], W8
	018 Compare X19, 0
	019 JumpIfEqual {43}
	020 Move X21, [X20+40]
	021 Compare X21, 0
	022 JumpIfNotEqual {33}
	023 Move X8, 0xED8000
	024 Move X8, [X8+2976]
	025 Move X0, [X8]
	026 Call 0x1C17F10
	027 Move X1, X31
	028 Move X21, X0
	029 Call ArrayList..ctor, X0
	030 Move [X20+40], X21
	031 Compare X21, 0
	032 JumpIfEqual {61}
	033 Move X8, [X21]
	034 Move X1, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X0, X21
	038 Move X3, [X8+776]
	039 Move X2, [X8+784]
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 CallNoReturn X3
	043 Move X0, 0xEB0000
	044 Move X0, [X0+1320]
	045 Call 0x1C17D08
	046 Call 0x1C17F10
	047 Move X19, X0
	048 Move X0, 0xEDA000
	049 Move X0, [X0+2968]
	050 Call 0x1C17D08
	051 Move X1, X0
	052 Move X0, X19
	053 Move X2, X31
	054 Call ArgumentNullException..ctor, X0, X1
	055 Move X0, 0xEDA000
	056 Move X0, [X0+2976]
	057 Call 0x1C17D08
	058 Move X1, X0
	059 Move X0, X19
	060 Call 0x1C17DEC
	061 Call 0x1C17F20

Method: System.String Escape(System.String str)

Disassembly:
	0x0324AA78 MOV X1, X31
	0x0324AA7C BL 0x3291A04
	0x0324AA80 LDR X1, [X21]
	0x0324AA84 MOV X2, X31
	0x0324AA88 BL 0x321BA08
	0x0324AA8C TBZ X0, 0x0, 0x324AA64
	0x0324AA90 MOV X0, X20
	0x0324AA94 MOV X1, X31
	0x0324AA98 BL 0x3291A88
	0x0324AA9C CBZ X0, 0x324AACC
	0x0324AAA0 ADRP X8, 0xEAB000
	0x0324AAA4 LDR X8, [X8 + 0x278]
	0x0324AAA8 LDR X1, [X8]
	0x0324AAAC LDR X8, [X0]
	0x0324AAB0 CMP X8, X1
	0x0324AAB4 B.NE 0x324AAC8
	0x0324AAB8 STR X0, [X19 + 0x90]
	0x0324AABC LDR X8, [X0]
	0x0324AAC0 CMP X8, X1
	0x0324AAC4 B.EQ 0x324AAD0
	0x0324AAC8 BL 0x1C171E0
	0x0324AACC STR X31, [X19 + 0x90]
	0x0324AAD0 LDP X20, X19, [X31 + 0x20]
	0x0324AAD4 LDP X22, X21, [X31 + 0x10]
	0x0324AAD8 LDP X30, X23, [X31], #0x30
	0x0324AADC RET
	0x0324AAE0 BL 0x1C16F20
	0x0324AAE4 STP X30, X23, [X31 - 0x30]!
	0x0324AAE8 STP X22, X21, [X31 + 0x10]
	0x0324AAEC STP X20, X19, [X31 + 0x20]
	0x0324AAF0 ADRP X23, 0x1192000
	0x0324AAF4 LDRB W8, [X23 + 0x48C]
	0x0324AAF8 MOV X21, X3
	0x0324AAFC MOV X22, X2
	0x0324AB00 MOV X19, X1
	0x0324AB04 MOV X20, X0
	0x0324AB08 TBNZ X8, 0x0, 0x324AB20
	0x0324AB0C ADRP X0, 0xED8000
	0x0324AB10 LDR X0, [X0 + 0xC80]
	0x0324AB14 BL 0x1C16CF4
	0x0324AB18 MOVZ W8, 0x1
	0x0324AB1C STRB W8, [X23 + 0x48C]
	0x0324AB20 MOV X0, X20
	0x0324AB24 MOV X1, X19
	0x0324AB28 MOV X2, X22
	0x0324AB2C MOV X3, X21
	0x0324AB30 MOV X4, X31
	0x0324AB34 BL 0x33B3620
	0x0324AB38 CBZ X19, 0x324AB68
	0x0324AB3C ADRP X8, 0xED8000
	0x0324AB40 LDR X8, [X8 + 0xC80]
	0x0324AB44 LDR X2, [X20 + 0x90]
	0x0324AB48 LDR X1, [X8]
	0x0324AB4C MOV X0, X19
	0x0324AB50 MOV X3, X31
	0x0324AB54 BL 0x32A8BF0
	0x0324AB58 LDP X20, X19, [X31 + 0x20]
	0x0324AB5C LDP X22, X21, [X31 + 0x10]
	0x0324AB60 LDP X30, X23, [X31], #0x30
	0x0324AB64 RET
	0x0324AB68 BL 0x1C16F20
	0x0324AB6C CMP W1, 0x1
	0x0324AB70 MOV X19, X0
	0x0324AB74 B.NE 0x324ABD8
	0x0324AB78 MOV X0, X19
	0x0324AB7C BL 0x3EB1AD0
	0x0324AB80 MOV X19, X0
	0x0324AB84 ADRP X0, 0xED7000
	0x0324AB88 LDR X0, [X0 + 0x690]
	0x0324AB8C BL 0x1C16D08
	0x0324AB90 LDR X8, [X19]
	0x0324AB94 LDR X1, [X8]
	0x0324AB98 BL 0x1C17270
	0x0324AB9C TBZ X0, 0x0, 0x324ABB0
	0x0324ABA0 LDP X20, X19, [X31 + 0x20]
	0x0324ABA4 LDP X22, X21, [X31 + 0x10]
	0x0324ABA8 LDP X30, X23, [X31], #0x30
	0x0324ABAC B 0x3EB1AE0
	0x0324ABB0 MOVZ W0, 0x8
	0x0324ABB4 BL 0x3EB1AF0
	0x0324ABB8 LDR X8, [X19]
	0x0324ABBC STR X8, [X0]
	0x0324ABC0 ADRP X1, 0xC6A000
	0x0324ABC4 ADD X1, X1, 0xE58
	0x0324ABC8 MOV X2, X31
	0x0324ABCC BL 0x3EB1B00
	0x0324ABD0 MOV X19, X0
	0x0324ABD4 BL 0x3EB1AE0
	0x0324ABD8 MOV X0, X19
	0x0324ABDC BL 0x1D2C690
	0x0324ABE0 BL 0x1990590
	0x0324ABE4 MOV X1, X31
	0x0324ABE8 B 0x33B342C
	0x0324ABEC RET
	0x0324ABF0 STR X30, [X31 - 0x10]!
	0x0324ABF4 LDR X0, [X0 + 0x10]
	0x0324ABF8 CBZ X0, 0x324AC14
	0x0324ABFC ADD X1, X31, 0xC
	0x0324AC00 MOVZ W2, 0x1
	0x0324AC04 STR W31, [X31 + 0xC]
	0x0324AC08 BL 0x3248870
	0x0324AC0C LDR X30, [X31], #0x10
	0x0324AC10 RET
	0x0324AC14 BL 0x1C16F20
	0x0324AC18 SUB X31, X31, 0x70
	0x0324AC1C STP X29, X30, [X31 + 0x10]
	0x0324AC20 STP X28, X27, [X31 + 0x20]
	0x0324AC24 STP X26, X25, [X31 + 0x30]
	0x0324AC28 STP X24, X23, [X31 + 0x40]
	0x0324AC2C STP X22, X21, [X31 + 0x50]
	0x0324AC30 STP X20, X19, [X31 + 0x60]
	0x0324AC34 ADRP X19, 0x1192000
	0x0324AC38 LDRB W8, [X19 + 0x48D]
	0x0324AC3C MOV X20, X2
	0x0324AC40 MOV X21, X1
	0x0324AC44 MOV X26, X0
	0x0324AC48 TBNZ X8, 0x0, 0x324AC60
	0x0324AC4C ADRP X0, 0xEA9000
	0x0324AC50 LDR X0, [X0 + 0xDD8]
	0x0324AC54 BL 0x1C16CF4
	0x0324AC58 MOVZ W8, 0x1
	0x0324AC5C STRB W8, [X19 + 0x48D]
	0x0324AC60 CBZ X21, 0x324B034
	0x0324AC64 ADRP X25, 0xFFFFFFFFFD94C000
	0x0324AC68 MOV W28, W31
	0x0324AC6C MOV W27, W31
	0x0324AC70 MOV X22, X31
	0x0324AC74 MOV W29, W31
	0x0324AC78 MOV W23, W31
	0x0324AC7C MOVZ W24, 0x1

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0x1193000
	012 Move W8, [X20+1149]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {41}
	018 Move X0, 0xED8000
	019 Move X0, [X0+2288]
	020 Call 0x1C17CF4
	021 Move X0, 0xEAA000
	022 Move X0, [X0+2288]
	023 Call 0x1C17CF4
	024 Move X0, 0xED9000
	025 Move X0, [X0+3056]
	026 Call 0x1C17CF4
	027 Move X0, 0xED9000
	028 Move X0, [X0+3064]
	029 Call 0x1C17CF4
	030 Move X0, 0xED9000
	031 Move X0, [X0+3072]
	032 Call 0x1C17CF4
	033 Move X0, 0xED9000
	034 Move X0, [X0+3080]
	035 Call 0x1C17CF4
	036 Move X0, 0xED9000
	037 Move X0, [X0+3088]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X20+1149], W8
	041 Compare X19, 0
	042 JumpIfEqual {114}
	043 Move X20, 0xED8000
	044 Move X20, [X20+2288]
	045 Move X0, [X20]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {51}
	049 Call 0x1C17DFC
	050 Move X0, [X20]
	051 Move X8, [X0+184]
	052 Move X0, X19
	053 Move X2, X31
	054 Move X1, [X8+32]
	055 Call String.IndexOfAny, X0, X1
	056 Add W31, W0, 1
	057 Move X8, 0xEAA000
	058 Move X8, [X8+2288]
	059 Move X0, [X8]
	060 Call 0x1C17F10
	061 Move X1, X31
	062 Move X20, X0
	063 Call StringBuilder..ctor, X0
	064 Move W22, [X19+16]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X23, 0xED9000
	067 Move X24, 0xED9000
	068 Move X25, 0xED9000
	069 Move X26, 0xED9000
	070 Move X27, 0xED9000
	071 Move X23, [X23+3072]
	072 Move X24, [X24+3056]
	073 Move X25, [X25+3080]
	074 Move X26, [X26+3064]
	075 Move X27, [X27+3088]
	076 Move W21, W31
	077 Move X0, X19
	078 Move W1, W21
	079 Move X2, X31
	080 Call String.get_Chars, X0, X1
	081 And W8, W0, 0xFFFF
	082 Move W1, W0
	083 NotImplemented "Instruction CMP not yet implemented."
	084 NotImplemented "Instruction CMP not yet implemented."
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Compare X20, 0
	087 JumpIfEqual {143}
	088 Move X1, [X24]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 NotImplemented "Instruction CMP not yet implemented."
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Compare X20, 0
	093 JumpIfEqual {143}
	094 Move X1, [X27]
	095 Compare X20, 0
	096 JumpIfEqual {143}
	097 Move X0, X20
	098 Move X2, X31
	099 Call StringBuilder.Append, X0, X1
	100 Compare X20, 0
	101 JumpIfEqual {143}
	102 Move X1, [X23]
	103 Compare X20, 0
	104 JumpIfEqual {143}
	105 Move X1, [X25]
	106 Compare X20, 0
	107 JumpIfEqual {143}
	108 Move X1, [X26]
	109 Move X0, X20
	110 Move X2, X31
	111 Call StringBuilder.Append, X0, X1
	112 Add W21, W21, 1
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move X0, X19
	115 Move X20, [X31+64]
	116 Move X19, [X31+72]
	117 Move X22, [X31+48]
	118 Move X21, [X31+56]
	119 Move X24, [X31+32]
	120 Move X23, [X31+40]
	121 Move X26, [X31+16]
	122 Move X25, [X31+24]
	123 Move X30, [X31+80]
	124 Move X27, [X31+88]
	125 Return X0
	126 Compare X20, 0
	127 JumpIfEqual {143}
	128 Move X8, [X20]
	129 Move X0, X20
	130 Move X20, [X31+64]
	131 Move X19, [X31+72]
	132 Move X22, [X31+48]
	133 Move X21, [X31+56]
	134 Move X2, [X8+360]
	135 Move X1, [X8+368]
	136 Move X24, [X31+32]
	137 Move X23, [X31+40]
	138 Move X26, [X31+16]
	139 Move X25, [X31+24]
	140 Move X30, [X31+80]
	141 Move X27, [X31+88]
	142 CallNoReturn X2
	143 Call 0x1C17F20

Method: System.String Unescape(System.String str)

Disassembly:
	0x0324A448 MOV X1, X0
	0x0324A44C MOV X0, X19
	0x0324A450 LDP X20, X19, [X31 + 0x50]
	0x0324A454 LDP X22, X21, [X31 + 0x40]
	0x0324A458 LDP X24, X23, [X31 + 0x30]
	0x0324A45C LDP X26, X25, [X31 + 0x20]
	0x0324A460 LDP X28, X27, [X31 + 0x10]
	0x0324A464 MOV X2, X31
	0x0324A468 LDR X30, [X31], #0x60
	0x0324A46C B 0x32333E0
	0x0324A470 LDP X20, X19, [X31 + 0x50]
	0x0324A474 LDP X22, X21, [X31 + 0x40]
	0x0324A478 LDP X24, X23, [X31 + 0x30]
	0x0324A47C LDP X26, X25, [X31 + 0x20]
	0x0324A480 LDP X28, X27, [X31 + 0x10]
	0x0324A484 LDR X30, [X31], #0x60
	0x0324A488 RET
	0x0324A48C MOV X0, X23
	0x0324A490 BL 0x1C171E0
	0x0324A494 BL 0x1C171E0
	0x0324A498 BL 0x1C16F20
	0x0324A49C BL 0x1C16F20
	0x0324A4A0 MOV X0, X21
	0x0324A4A4 BL 0x1C16F18
	0x0324A4A8 B 0x324A4B8
	0x0324A4AC B 0x324A4B8
	0x0324A4B0 B 0x324A4B8
	0x0324A4B4 B 0x324A4B8
	0x0324A4B8 MOV X23, X0
	0x0324A4BC CMP W1, 0x1
	0x0324A4C0 B.NE 0x324A4DC
	0x0324A4C4 MOV X0, X23
	0x0324A4C8 BL 0x3EB1AD0
	0x0324A4CC LDR X21, [X0]
	0x0324A4D0 BL 0x3EB1AE0
	0x0324A4D4 MOV W23, W31
	0x0324A4D8 B 0x324A378
	0x0324A4DC MOV X21, X31
	0x0324A4E0 B 0x324A4E8
	0x0324A4E4 MOV X23, X0
	0x0324A4E8 ADRP X20, 0xEA9000
	0x0324A4EC LDR X20, [X20 + 0xE00]
	0x0324A4F0 LDR X1, [X20]
	0x0324A4F4 MOV X0, X22
	0x0324A4F8 BL 0x1C16E00
	0x0324A4FC MOV X19, X0
	0x0324A500 CBZ X0, 0x324A55C
	0x0324A504 LDR X8, [X19]
	0x0324A508 LDR X1, [X20]
	0x0324A50C LDRH W9, [X8 + 0x12E]
	0x0324A510 CBZ X9, 0x324A534
	0x0324A514 LDR X10, [X8 + 0xB0]
	0x0324A518 ADD X10, X10, 0x8
	0x0324A51C LDUR X11, [X10 - 0x8]
	0x0324A520 CMP X11, X1
	0x0324A524 B.EQ 0x324A544
	0x0324A528 SUBS X9, X9, 0x1
	0x0324A52C ADD X10, X10, 0x10
	0x0324A530 B.NE 0x324A51C
	0x0324A534 MOV X0, X19
	0x0324A538 MOV W2, W31
	0x0324A53C BL 0x1C5C788
	0x0324A540 B 0x324A550
	0x0324A544 LDRSW X9, [X10]
	0x0324A548 ADD X8, X8, X9, 0x4, LSL
	0x0324A54C ADD X0, X8, 0x138
	0x0324A550 LDP X8, X1, [X0]
	0x0324A554 MOV X0, X19
	0x0324A558 BLR X8
	0x0324A55C CBNZ X21, 0x324A568
	0x0324A560 MOV X0, X23
	0x0324A564 BL 0x1D2C690
	0x0324A568 MOV X0, X21
	0x0324A56C BL 0x1C16F18
	0x0324A570 BL 0x1990590
	0x0324A574 STR X1, [X0 + 0x10]
	0x0324A578 RET
	0x0324A57C STR X30, [X31 - 0x30]!
	0x0324A580 STP X22, X21, [X31 + 0x10]
	0x0324A584 STP X20, X19, [X31 + 0x20]
	0x0324A588 ADRP X21, 0x1192000
	0x0324A58C LDRB W8, [X21 + 0x487]
	0x0324A590 MOV X19, X1
	0x0324A594 MOV X20, X0
	0x0324A598 TBNZ X8, 0x0, 0x324A5C8
	0x0324A59C ADRP X0, 0xEA9000
	0x0324A5A0 LDR X0, [X0 + 0xE18]
	0x0324A5A4 BL 0x1C16CF4
	0x0324A5A8 ADRP X0, 0xED7000
	0x0324A5AC LDR X0, [X0 + 0x8F0]
	0x0324A5B0 BL 0x1C16CF4
	0x0324A5B4 ADRP X0, 0xEB2000
	0x0324A5B8 LDR X0, [X0 + 0x988]
	0x0324A5BC BL 0x1C16CF4
	0x0324A5C0 MOVZ W8, 0x1
	0x0324A5C4 STRB W8, [X21 + 0x487]
	0x0324A5C8 CBZ X19, 0x324A774
	0x0324A5CC LDR X0, [X20 + 0x18]
	0x0324A5D0 CBZ X0, 0x324A75C
	0x0324A5D4 MOV X1, X19
	0x0324A5D8 MOV X2, X31
	0x0324A5DC BL 0x322693C
	0x0324A5E0 TBNZ X0, 0x0, 0x324A61C
	0x0324A5E4 ADRP X8, 0xEB2000
	0x0324A5E8 LDR X21, [X20 + 0x18]
	0x0324A5EC LDR X8, [X8 + 0x988]
	0x0324A5F0 MOV X1, X19
	0x0324A5F4 MOV X2, X31
	0x0324A5F8 LDR X0, [X8]
	0x0324A5FC BL 0x321B938
	0x0324A600 CBZ X21, 0x324A76C
	0x0324A604 MOV X1, X0
	0x0324A608 MOVZ W2, 0x4
	0x0324A60C MOV X0, X21
	0x0324A610 MOV X3, X31
	0x0324A614 BL 0x3226590

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0x1193000
	012 Move W8, [X20+1150]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {53}
	018 Move X0, 0xEAA000
	019 Move X0, [X0+2288]
	020 Call 0x1C17CF4
	021 Move X0, 0xED9000
	022 Move X0, [X0+3056]
	023 Call 0x1C17CF4
	024 Move X0, 0xEB2000
	025 Move X0, [X0+2480]
	026 Call 0x1C17CF4
	027 Move X0, 0xED3000
	028 Move X0, [X0+2624]
	029 Call 0x1C17CF4
	030 Move X0, 0xED9000
	031 Move X0, [X0+3064]
	032 Call 0x1C17CF4
	033 Move X0, 0xED9000
	034 Move X0, [X0+3072]
	035 Call 0x1C17CF4
	036 Move X0, 0xEB3000
	037 Move X0, [X0+1824]
	038 Call 0x1C17CF4
	039 Move X0, 0xEB5000
	040 Move X0, [X0+3288]
	041 Call 0x1C17CF4
	042 Move X0, 0xED9000
	043 Move X0, [X0+3080]
	044 Call 0x1C17CF4
	045 Move X0, 0xED9000
	046 Move X0, [X0+3088]
	047 Call 0x1C17CF4
	048 Move X0, 0xEAC000
	049 Move X0, [X0+608]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X20+1150], W8
	053 Compare X19, 0
	054 JumpIfEqual {125}
	055 Move X8, 0xEAA000
	056 Move X8, [X8+2288]
	057 Move X0, [X8]
	058 Call 0x1C17F10
	059 Move X1, X19
	060 Move X2, X31
	061 Move X20, X0
	062 Call StringBuilder..ctor, X0, X1
	063 Compare X20, 0
	064 JumpIfEqual {137}
	065 Move X8, 0xED9000
	066 Move X9, 0xED3000
	067 Move X8, [X8+3088]
	068 Move X9, [X9+2624]
	069 Move X19, 0xED9000
	070 Move X21, 0xEAC000
	071 Move X22, 0xED9000
	072 Move X23, 0xEB3000
	073 Move X24, 0xED9000
	074 Move X19, [X19+3064]
	075 Move X21, [X21+608]
	076 Move X22, [X22+3056]
	077 Move X23, [X23+1824]
	078 Move X24, [X24+3072]
	079 Move X1, [X8]
	080 Move X2, [X9]
	081 Move X25, 0xEB5000
	082 Move X26, 0xED9000
	083 Move X27, 0xEB2000
	084 Move X25, [X25+3288]
	085 Move X26, [X26+3080]
	086 Move X27, [X27+2480]
	087 Move X0, X20
	088 Move X3, X31
	089 Call StringBuilder.Replace, X0, X1, X2
	090 Move X1, [X19]
	091 Move X2, [X21]
	092 Move X0, X20
	093 Move X3, X31
	094 Call StringBuilder.Replace, X0, X1, X2
	095 Move X1, [X22]
	096 Move X2, [X23]
	097 Move X0, X20
	098 Move X3, X31
	099 Call StringBuilder.Replace, X0, X1, X2
	100 Move X1, [X24]
	101 Move X2, [X25]
	102 Move X0, X20
	103 Move X3, X31
	104 Call StringBuilder.Replace, X0, X1, X2
	105 Move X1, [X26]
	106 Move X2, [X27]
	107 Move X0, X20
	108 Move X3, X31
	109 Call StringBuilder.Replace, X0, X1, X2
	110 Move X8, [X20]
	111 Move X0, X20
	112 Move X20, [X31+64]
	113 Move X19, [X31+72]
	114 Move X22, [X31+48]
	115 Move X21, [X31+56]
	116 Move X2, [X8+360]
	117 Move X1, [X8+368]
	118 Move X24, [X31+32]
	119 Move X23, [X31+40]
	120 Move X26, [X31+16]
	121 Move X25, [X31+24]
	122 Move X30, [X31+80]
	123 Move X27, [X31+88]
	124 CallNoReturn X2
	125 Move X20, [X31+64]
	126 Move X19, [X31+72]
	127 Move X22, [X31+48]
	128 Move X21, [X31+56]
	129 Move X24, [X31+32]
	130 Move X23, [X31+40]
	131 Move X26, [X31+16]
	132 Move X25, [X31+24]
	133 Move X0, X31
	134 Move X30, [X31+80]
	135 Move X27, [X31+88]
	136 Return X0
	137 Call 0x1C17F20

Method: System.Boolean IsValidAttributeName(System.String name)

Disassembly:
	0x0324AC80 ADD X25, X25, 0x489
	0x0324AC84 MOV W19, W31
	0x0324AC88 MOV W8, W23
	0x0324AC8C MOV X0, X21
	0x0324AC90 MOV W23, W8
	0x0324AC94 BL 0x324C0E8
	0x0324AC98 AND W8, W0, 0xFF
	0x0324AC9C CMP W8, 0x1
	0x0324ACA0 B.NE 0x324ACB0
	0x0324ACA4 MOV W8, W31
	0x0324ACA8 TBNZ X23, 0x0, 0x324AC8C
	0x0324ACAC B 0x324AFD0
	0x0324ACB0 CMP W8, 0x5
	0x0324ACB4 B.HI 0x324AFC4
	0x0324ACB8 MOV W8, W8
	0x0324ACBC ADR X9, 0x10
	0x0324ACC0 LDRB W10, [X25, X8, LSL]
	0x0324ACC4 ADD X9, X9, X10, 0x2, LSL
	0x0324ACC8 BR X9
	0x0324ACCC TBZ X23, 0x0, 0x324ACE8
	0x0324ACD0 CBNZ X22, 0x324AD2C
	0x0324ACD4 MOV X0, X21
	0x0324ACD8 BL 0x324B0E4
	0x0324ACDC MOV X22, X0
	0x0324ACE0 MOVZ W8, 0x1
	0x0324ACE4 B 0x324AC8C
	0x0324ACE8 TBZ X19, 0x0, 0x324AD7C
	0x0324ACEC MOVZ W1, 0x6300
	0x0324ACF0 MOV X0, X21
	0x0324ACF4 BL 0x324B070
	0x0324ACF8 LDR W19, [X20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1193000
	005 Move W8, [X20+1151]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xED8000
	012 Move X0, [X0+2288]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1151], W8
	016 Compare X19, 0
	017 JumpIfEqual {33}
	018 Move X20, 0xED8000
	019 Move X20, [X20+2288]
	020 Move X0, [X20]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {26}
	024 Call 0x1C17DFC
	025 Move X0, [X20]
	026 Move X8, [X0+184]
	027 Move X0, X19
	028 Move X2, X31
	029 Move X1, [X8+16]
	030 Call String.IndexOfAny, X0, X1
	031 Add W31, W0, 1
	032 NotImplemented "Instruction CSET not yet implemented."
	033 Move W0, W31
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return X0

Method: System.Boolean IsValidAttributeValue(System.String value)

Disassembly:
	0x0324ACFC MOV X0, X21
	0x0324AD00 BL 0x324B0E4
	0x0324AD04 CBZ X0, 0x324B034
	0x0324AD08 ADRP X8, 0xEA9000
	0x0324AD0C LDR X8, [X8 + 0xDD8]
	0x0324AD10 LDR X8, [X8]
	0x0324AD14 CBZ X8, 0x324B034
	0x0324AD18 LDR W9, [X0 + 0x10]
	0x0324AD1C LDR W8, [X8 + 0x10]
	0x0324AD20 ADD W10, W19, 0x4
	0x0324AD24 ADD W8, W8, W9
	0x0324AD28 B 0x324ADA0
	0x0324AD2C STR X26, [X31 + 0x8]
	0x0324AD30 TBZ X27, 0x0, 0x324B04C
	0x0324AD34 MOVZ W1, 0x4200
	0x0324AD38 MOV X0, X21
	0x0324AD3C BL 0x324B070
	0x0324AD40 LDR W23, [X20]
	0x0324AD44 LDR W26, [X22 + 0x10]
	0x0324AD48 MOV X0, X21
	0x0324AD4C BL 0x324B0E4
	0x0324AD50 CBZ X0, 0x324B034
	0x0324AD54 LDR W8, [X0 + 0x10]
	0x0324AD58 MOV X22, X31
	0x0324AD5C MOV W27, W31
	0x0324AD60 ADD W8, W8, W26
	0x0324AD64 LDR X26, [X31 + 0x8]
	0x0324AD68 ADD W8, W23, W8, 0x1, LSL
	0x0324AD6C ADD W8, W8, 0x5
	0x0324AD70 STR W8, [X20]
	0x0324AD74 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1193000
	005 Move W8, [X20+1152]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xED8000
	012 Move X0, [X0+2288]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1152], W8
	016 Compare X19, 0
	017 JumpIfEqual {33}
	018 Move X20, 0xED8000
	019 Move X20, [X20+2288]
	020 Move X0, [X20]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {26}
	024 Call 0x1C17DFC
	025 Move X0, [X20]
	026 Move X8, [X0+184]
	027 Move X0, X19
	028 Move X2, X31
	029 Move X1, [X8+24]
	030 Call String.IndexOfAny, X0, X1
	031 Add W31, W0, 1
	032 NotImplemented "Instruction CSET not yet implemented."
	033 Move W0, W31
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return X0

Method: System.Boolean IsValidTag(System.String tag)

Disassembly:
	0x0324A24C BL 0x32333E0
	0x0324A250 LDR X0, [X19 + 0x28]
	0x0324A254 CBZ X0, 0x324A18C
	0x0324A258 LDR X8, [X0]
	0x0324A25C LDR X9, [X8 + 0x388]
	0x0324A260 LDR X1, [X8 + 0x390]
	0x0324A264 BLR X9
	0x0324A268 MOV X22, X0
	0x0324A26C CBZ X0, 0x324A49C
	0x0324A270 ADRP X23, 0xEA9000
	0x0324A274 LDR X23, [X23 + 0xE18]
	0x0324A278 ADD W21, W21, 0x1
	0x0324A27C LDR X8, [X22]
	0x0324A280 LDR X1, [X23]
	0x0324A284 LDRH W9, [X8 + 0x12E]
	0x0324A288 CBZ X9, 0x324A2AC
	0x0324A28C LDR X10, [X8 + 0xB0]
	0x0324A290 ADD X10, X10, 0x8
	0x0324A294 LDUR X11, [X10 - 0x8]
	0x0324A298 CMP X11, X1
	0x0324A29C B.EQ 0x324A2BC
	0x0324A2A0 SUBS X9, X9, 0x1
	0x0324A2A4 ADD X10, X10, 0x10
	0x0324A2A8 B.NE 0x324A294
	0x0324A2AC MOV X0, X22
	0x0324A2B0 MOV W2, W31
	0x0324A2B4 BL 0x1C5C788
	0x0324A2B8 B 0x324A2C8
	0x0324A2BC LDRSW X9, [X10]
	0x0324A2C0 ADD X8, X8, X9, 0x4, LSL
	0x0324A2C4 ADD X0, X8, 0x138

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1193000
	005 Move W8, [X20+1153]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xED8000
	012 Move X0, [X0+2288]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1153], W8
	016 Compare X19, 0
	017 JumpIfEqual {33}
	018 Move X20, 0xED8000
	019 Move X20, [X20+2288]
	020 Move X0, [X20]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {26}
	024 Call 0x1C17DFC
	025 Move X0, [X20]
	026 Move X8, [X0+184]
	027 Move X0, X19
	028 Move X2, X31
	029 Move X1, [X8]
	030 Call String.IndexOfAny, X0, X1
	031 Add W31, W0, 1
	032 NotImplemented "Instruction CSET not yet implemented."
	033 Move W0, W31
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return X0

Method: System.Boolean IsValidText(System.String text)

Disassembly:
	0x0324A3CC BL 0x1C5C788
	0x0324A3D0 B 0x324A3E0
	0x0324A3D4 LDRSW X9, [X10]
	0x0324A3D8 ADD X8, X8, X9, 0x4, LSL
	0x0324A3DC ADD X0, X8, 0x138
	0x0324A3E0 LDP X8, X1, [X0]
	0x0324A3E4 MOV X0, X22
	0x0324A3E8 BLR X8
	0x0324A3EC CBNZ X21, 0x324A4A0
	0x0324A3F0 CMP W23, 0x9
	0x0324A3F4 B.EQ 0x324A3FC
	0x0324A3F8 CBNZ W23, 0x324A470
	0x0324A3FC LDR X0, [X20]
	0x0324A400 CBZ X0, 0x324A18C
	0x0324A404 ADRP X8, 0xED8000
	0x0324A408 LDR X8, [X8 + 0xC40]
	0x0324A40C MOV X2, X31
	0x0324A410 LDR X1, [X8]
	0x0324A414 BL 0x32333E0
	0x0324A418 CBZ X0, 0x324A18C
	0x0324A41C LDR X1, [X19 + 0x18]
	0x0324A420 MOV X2, X31
	0x0324A424 BL 0x32333E0
	0x0324A428 CBZ X0, 0x324A18C
	0x0324A42C LDR X1, [X24]
	0x0324A430 MOV X2, X31
	0x0324A434 BL 0x32333E0
	0x0324A438 MOV X19, X0
	0x0324A43C MOV X0, X31
	0x0324A440 BL 0x33C1548
	0x0324A444 CBZ X19, 0x324A18C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1193000
	005 Move W8, [X20+1154]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xED8000
	012 Move X0, [X0+2288]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1154], W8
	016 Compare X19, 0
	017 JumpIfEqual {33}
	018 Move X20, 0xED8000
	019 Move X20, [X20+2288]
	020 Move X0, [X20]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {26}
	024 Call 0x1C17DFC
	025 Move X0, [X20]
	026 Move X8, [X0+184]
	027 Move X0, X19
	028 Move X2, X31
	029 Move X1, [X8+8]
	030 Call String.IndexOfAny, X0, X1
	031 Add W31, W0, 1
	032 NotImplemented "Instruction CSET not yet implemented."
	033 Move W0, W31
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return X0

Method: System.Security.SecurityElement SearchForChildByTag(System.String tag)

Disassembly:
	0x0324AD78 B 0x324AC8C
	0x0324AD7C MOVZ W1, 0x4300
	0x0324AD80 MOV X0, X21
	0x0324AD84 BL 0x324B070
	0x0324AD88 LDR W19, [X20]
	0x0324AD8C MOV X0, X21
	0x0324AD90 BL 0x324B0E4
	0x0324AD94 CBZ X0, 0x324B034
	0x0324AD98 LDR W8, [X0 + 0x10]
	0x0324AD9C ADD W10, W19, 0x3
	0x0324ADA0 UBFM W9, W8, 0x1F, 0x1E
	0x0324ADA4 ADD W9, W10, W9
	0x0324ADA8 MOV W8, W31
	0x0324ADAC STR W9, [X20]
	0x0324ADB0 MOVZ W19, 0x1
	0x0324ADB4 B 0x324AC8C
	0x0324ADB8 MOVZ W27, 0x1
	0x0324ADBC B 0x324AC88
	0x0324ADC0 CMP W29, 0x1
	0x0324ADC4 CSET W8, EQ
	0x0324ADC8 CMP W28, 0x1
	0x0324ADCC B.NE 0x324AFC4
	0x0324ADD0 AND W8, W8, W23, 0x0
	0x0324ADD4 CBZ W8, 0x324AFC4
	0x0324ADD8 MOV X0, X21
	0x0324ADDC BL 0x324C0E8
	0x0324ADE0 AND W8, W0, 0xFF
	0x0324ADE4 CMP W8, 0x1
	0x0324ADE8 B.NE 0x324AFE4
	0x0324ADEC MOVZ W1, 0x4400
	0x0324ADF0 MOV X0, X21
	0x0324ADF4 BL 0x324B070
	0x0324ADF8 LDR W8, [X20]
	0x0324ADFC SUB W24, W24, 0x1
	0x0324AE00 MOVZ W23, 0x1
	0x0324AE04 MOVZ W29, 0x1
	0x0324AE08 ADD W8, W8, 0x1
	0x0324AE0C STR W8, [X20]
	0x0324AE10 MOVZ W28, 0x1
	0x0324AE14 B 0x324AEA8
	0x0324AE18 MOV X0, X21
	0x0324AE1C BL 0x324C0E8
	0x0324AE20 AND W8, W0, 0xFF
	0x0324AE24 SUB W8, W8, 0x2
	0x0324AE28 CMP W8, 0x4
	0x0324AE2C B.HI 0x324B038
	0x0324AE30 ADRP X11, 0xFFFFFFFFFD94C000
	0x0324AE34 ADD X11, X11, 0x48F
	0x0324AE38 ADR X9, 0x10
	0x0324AE3C LDRB W10, [X11, X8, LSL]
	0x0324AE40 ADD X9, X9, X10, 0x2, LSL
	0x0324AE44 BR X9
	0x0324AE48 MOVZ W1, 0x4400
	0x0324AE4C MOV X0, X21
	0x0324AE50 BL 0x324B070
	0x0324AE54 MOV X0, X21
	0x0324AE58 BL 0x324C0E8
	0x0324AE5C AND W8, W0, 0xFF
	0x0324AE60 CMP W8, 0x3
	0x0324AE64 B.NE 0x324AF94
	0x0324AE68 MOV X0, X21
	0x0324AE6C BL 0x324B0E4
	0x0324AE70 MOVZ W1, 0x5000
	0x0324AE74 B 0x324AE4C
	0x0324AE78 MOV X0, X21
	0x0324AE7C BL 0x324C0E8
	0x0324AE80 AND W8, W0, 0xFF
	0x0324AE84 CMP W8, 0x1
	0x0324AE88 B.NE 0x324AFE4
	0x0324AE8C MOVZ W1, 0x4400
	0x0324AE90 MOV X0, X21
	0x0324AE94 BL 0x324B070
	0x0324AE98 LDR W8, [X20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x1193000
	008 Move W8, [X21+1155]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xED8000
	016 Move X0, [X0+2288]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+1155], W8
	020 Compare X19, 0
	021 JumpIfEqual {71}
	022 Move X0, [X20+40]
	023 Compare X0, 0
	024 JumpIfEqual {60}
	025 Move X23, 0xED8000
	026 Move X23, [X23+2288]
	027 Move W21, W31
	028 Move X8, [X0]
	029 Move X9, [X8+664]
	030 Move X1, [X8+672]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, [X20+40]
	034 Compare X0, 0
	035 JumpIfEqual {59}
	036 Move X8, [X0]
	037 Move W1, W21
	038 Move X9, [X8+744]
	039 Move X2, [X8+752]
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Compare X0, 0
	042 JumpIfEqual {59}
	043 Move X1, [X23]
	044 Move X8, [X0]
	045 Move X22, X0
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X0, [X22+24]
	048 Move X1, X19
	049 Move X2, X31
	050 Call String.op_Equality, X0, X1
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfEqual {61}
	055 Move X0, [X20+40]
	056 Add W21, W21, 1
	057 Compare X0, 0
	058 JumpIfNotEqual {28}
	059 Call 0x1C17F20
	060 Move X22, X31
	061 Move X0, X22
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Move X23, [X31+56]
	068 Return X0
	069 Move X0, X22
	070 Call 0x1C181E0
	071 Move X0, 0xEAF000
	072 Move X0, [X0+1320]
	073 Call 0x1C17D08
	074 Call 0x1C17F10
	075 Move X19, X0
	076 Move X0, 0xED9000
	077 Move X0, [X0+3024]
	078 Call 0x1C17D08
	079 Move X1, X0
	080 Move X0, X19
	081 Move X2, X31
	082 Call ArgumentNullException..ctor, X0, X1
	083 Move X0, 0xED9000
	084 Move X0, [X0+3120]
	085 Call 0x1C17D08
	086 Move X1, X0
	087 Move X0, X19
	088 Call 0x1C17DEC

Method: System.String ToString()

Disassembly:
	0x0324AE9C SUB W24, W24, 0x1
	0x0324AEA0 ADD W8, W8, 0x1
	0x0324AEA4 STR W8, [X20]
	0x0324AEA8 CMP W24, 0x1
	0x0324AEAC B.GT 0x324AC84
	0x0324AEB0 B 0x324AFA4
	0x0324AEB4 MOVZ W1, 0x4100
	0x0324AEB8 MOV X0, X21
	0x0324AEBC BL 0x324B070
	0x0324AEC0 LDR W19, [X20]
	0x0324AEC4 MOV X0, X21
	0x0324AEC8 BL 0x324B0E4
	0x0324AECC CBZ X0, 0x324B034
	0x0324AED0 LDR W8, [X0 + 0x10]
	0x0324AED4 ADD W8, W19, W8, 0x1, LSL
	0x0324AED8 ADD W8, W8, 0x3
	0x0324AEDC STR W8, [X20]
	0x0324AEE0 CBNZ W29, 0x324AFC4
	0x0324AEE4 ADD W24, W24, 0x1
	0x0324AEE8 MOVZ W23, 0x1
	0x0324AEEC B 0x324AEA8
	0x0324AEF0 MOV X0, X21
	0x0324AEF4 BL 0x324C0E8
	0x0324AEF8 AND W8, W0, 0xFF
	0x0324AEFC CMP W8, 0x3
	0x0324AF00 B.NE 0x324AFC4
	0x0324AF04 MOVZ W1, 0x4100
	0x0324AF08 MOV X0, X21
	0x0324AF0C BL 0x324B070
	0x0324AF10 LDR W19, [X20]
	0x0324AF14 MOV X0, X21
	0x0324AF18 BL 0x324B0E4
	0x0324AF1C CBZ X0, 0x324B034

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x1193000
	007 Move X21, 0xEAA000
	008 Move W8, [X20+1156]
	009 Move X21, [X21+2288]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xEAA000
	016 Move X0, [X0+2288]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+1156], W8
	020 Move X0, [X21]
	021 Call 0x1C17F10
	022 Move X1, X31
	023 Move X20, X0
	024 Call StringBuilder..ctor, X0
	025 Add X1, X31, 8
	026 Move X0, X19
	027 Move W2, W31
	028 Move [X31+8], X20
	029 Call SecurityElement.ToXml, X0, X1, X2
	030 Compare X20, 0
	031 JumpIfEqual {42}
	032 Move X8, [X20]
	033 Move X0, X20
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X30, [X31+16]
	037 Move X21, [X31+24]
	038 Move X2, [X8+360]
	039 Move X1, [X8+368]
	040 Add X31, X31, 48
	041 CallNoReturn X2
	042 Call 0x1C17F20

Method: System.Void ToXml(ref System.Text.StringBuilder s, System.Int32 level)

Disassembly:
	0x0324AF20 LDR W8, [X0 + 0x10]
	0x0324AF24 ADD W24, W24, 0x1
	0x0324AF28 MOVZ W23, 0x1
	0x0324AF2C MOVZ W29, 0x1
	0x0324AF30 ADD W8, W19, W8, 0x1, LSL
	0x0324AF34 ADD W8, W8, 0x3
	0x0324AF38 B 0x324AE0C
	0x0324AF3C MOVZ W28, 0x1
	0x0324AF40 MOV X0, X21
	0x0324AF44 BL 0x324C0E8
	0x0324AF48 AND W8, W0, 0xFF
	0x0324AF4C CMP W8, 0x3
	0x0324AF50 B.EQ 0x324AF68
	0x0324AF54 CMP W8, 0x1
	0x0324AF58 B.EQ 0x324AF80
	0x0324AF5C CBNZ W8, 0x324AF84
	0x0324AF60 ADD W28, W28, 0x1
	0x0324AF64 B 0x324AF84
	0x0324AF68 MOV X0, X21
	0x0324AF6C BL 0x324B0E4
	0x0324AF70 MOVZ W1, 0x5000
	0x0324AF74 MOV X0, X21
	0x0324AF78 BL 0x324B070
	0x0324AF7C B 0x324AF84
	0x0324AF80 SUB W28, W28, 0x1
	0x0324AF84 CMP W28, 0x0
	0x0324AF88 B.GT 0x324AF40
	0x0324AF8C MOV W23, W31
	0x0324AF90 B 0x324AEA8
	0x0324AF94 CMP W8, 0x1
	0x0324AF98 B.NE 0x324AFE4
	0x0324AF9C MOV W23, W31
	0x0324AFA0 B 0x324AE98
	0x0324AFA4 LDP X20, X19, [X31 + 0x60]
	0x0324AFA8 LDP X22, X21, [X31 + 0x50]
	0x0324AFAC LDP X24, X23, [X31 + 0x40]
	0x0324AFB0 LDP X26, X25, [X31 + 0x30]
	0x0324AFB4 LDP X28, X27, [X31 + 0x20]
	0x0324AFB8 LDP X29, X30, [X31 + 0x10]
	0x0324AFBC ADD X31, X31, 0x70
	0x0324AFC0 RET
	0x0324AFC4 LDR X0, [X26 + 0x18]
	0x0324AFC8 BL 0x19903C0
	0x0324AFCC B 0x324B000
	0x0324AFD0 LDR X0, [X26 + 0x18]
	0x0324AFD4 BL 0x19903C0
	0x0324AFD8 ADRP X0, 0xED8000
	0x0324AFDC LDR X0, [X0 + 0xC88]
	0x0324AFE0 B 0x324AFF4
	0x0324AFE4 LDR X0, [X26 + 0x18]
	0x0324AFE8 BL 0x19903C0
	0x0324AFEC ADRP X0, 0xED8000
	0x0324AFF0 LDR X0, [X0 + 0xC90]
	0x0324AFF4 BL 0x1C16D08
	0x0324AFF8 MOV X1, X31
	0x0324AFFC BL 0x33BDD84
	0x0324B000 ADRP X0, 0xED7000
	0x0324B004 LDR X0, [X0 + 0xB60]
	0x0324B008 BL 0x1C16D08
	0x0324B00C BL 0x1C16F10
	0x0324B010 MOV X1, X31
	0x0324B014 MOV X19, X0
	0x0324B018 BL 0x3393E38
	0x0324B01C ADRP X0, 0xED7000
	0x0324B020 LDR X0, [X0 + 0xC98]
	0x0324B024 BL 0x1C16D08
	0x0324B028 MOV X1, X0
	0x0324B02C MOV X0, X19
	0x0324B030 BL 0x1C16DEC
	0x0324B034 BL 0x1C16F20
	0x0324B038 LDR X0, [X26 + 0x18]
	0x0324B03C BL 0x19903C0
	0x0324B040 ADRP X0, 0xED7000
	0x0324B044 LDR X0, [X0 + 0xCA0]
	0x0324B048 B 0x324AFF4
	0x0324B04C LDR X8, [X31 + 0x8]
	0x0324B050 LDR X0, [X8 + 0x18]
	0x0324B054 B 0x324AFC8
	0x0324B058 STR X30, [X31 - 0x10]!
	0x0324B05C BL 0x324C0E8
	0x0324B060 AND W0, W0, 0xFF
	0x0324B064 LDR X30, [X31], #0x10
	0x0324B068 RET
	0x0324B06C B 0x324B0E4
	0x0324B070 STR X30, [X31 - 0x10]!
	0x0324B074 LDR W8, [X0 + 0x30]
	0x0324B078 CBZ W8, 0x324B0A4
	0x0324B07C LDR X9, [X0 + 0x28]
	0x0324B080 CBZ X9, 0x324B0DC
	0x0324B084 LDR X9, [X9 + 0x10]
	0x0324B088 CBZ X9, 0x324B0DC
	0x0324B08C LDR W10, [X9 + 0x18]
	0x0324B090 SUB W8, W8, 0x1
	0x0324B094 CMP W8, W10
	0x0324B098 B.CS 0x324B0E0
	0x0324B09C ADD X8, X9, W8, 0x1, SXTW
	0x0324B0A0 B 0x324B0C8
	0x0324B0A4 LDR X8, [X0 + 0x20]
	0x0324B0A8 CBZ X8, 0x324B0DC
	0x0324B0AC LDR X8, [X8 + 0x10]
	0x0324B0B0 CBZ X8, 0x324B0DC
	0x0324B0B4 LDR X9, [X8 + 0x18]
	0x0324B0B8 CBZ W9, 0x324B0E0
	0x0324B0BC MOV X10, INVALID
	0x0324B0C0 ADD X9, X10, X9, 0x20, LSL
	0x0324B0C4 ADD X8, X8, X9, 0x1F, ASR
	0x0324B0C8 LDRH W9, [X8 + 0x20]!
	0x0324B0CC ORR W9, W9, W1, 0x0
	0x0324B0D0 STRH W9, [X8]
	0x0324B0D4 LDR X30, [X31], #0x10
	0x0324B0D8 RET
	0x0324B0DC BL 0x1C16F20
	0x0324B0E0 BL 0x1C16F28
	0x0324B0E4 STR X30, [X31 - 0x10]!
	0x0324B0E8 LDR X8, [X0 + 0x40]
	0x0324B0EC CBZ X8, 0x324B148
	0x0324B0F0 LDR X10, [X8 + 0x10]
	0x0324B0F4 CBZ X10, 0x324B148
	0x0324B0F8 LDR W9, [X0 + 0x48]
	0x0324B0FC LDR W10, [X10 + 0x18]
	0x0324B100 CMP W9, W10
	0x0324B104 B.LT 0x324B11C
	0x0324B108 LDR X8, [X8 + 0x18]
	0x0324B10C STR W31, [X0 + 0x48]
	0x0324B110 STR X8, [X0 + 0x40]
	0x0324B114 CBZ X8, 0x324B148
	0x0324B118 MOV W9, W31
	0x0324B11C LDR X8, [X8 + 0x10]
	0x0324B120 ADD W10, W9, 0x1
	0x0324B124 STR W10, [X0 + 0x48]
	0x0324B128 CBZ X8, 0x324B148
	0x0324B12C LDR W10, [X8 + 0x18]
	0x0324B130 CMP W9, W10
	0x0324B134 B.CS 0x324B14C
	0x0324B138 ADD X8, X8, W9, 0x3, SXTW
	0x0324B13C LDR X0, [X8 + 0x20]
	0x0324B140 LDR X30, [X31], #0x10
	0x0324B144 RET
	0x0324B148 BL 0x1C16F20
	0x0324B14C BL 0x1C16F28
	0x0324B150 STP X30, X23, [X31 - 0x30]!
	0x0324B154 STP X22, X21, [X31 + 0x10]
	0x0324B158 STP X20, X19, [X31 + 0x20]
	0x0324B15C ADRP X21, 0x1191000
	0x0324B160 LDRB W8, [X21 + 0x48E]
	0x0324B164 MOV X19, X1
	0x0324B168 MOV X20, X0
	0x0324B16C TBNZ X8, 0x0, 0x324B184
	0x0324B170 ADRP X0, 0xED7000
	0x0324B174 LDR X0, [X0 + 0xB20]
	0x0324B178 BL 0x1C16CF4
	0x0324B17C MOVZ W8, 0x1
	0x0324B180 STRB W8, [X21 + 0x48E]
	0x0324B184 CBZ X19, 0x324B2D8
	0x0324B188 MOV X0, X19
	0x0324B18C BL 0x324C0E8
	0x0324B190 ANDS W31, W0, 0xFF
	0x0324B194 B.NE 0x324B240
	0x0324B198 MOV X0, X19
	0x0324B19C BL 0x324C0E8
	0x0324B1A0 AND W8, W0, 0xFF
	0x0324B1A4 CMP W8, 0x5
	0x0324B1A8 B.NE 0x324B240
	0x0324B1AC LDR X0, [X20 + 0x18]
	0x0324B1B0 CBZ X0, 0x324B2D8
	0x0324B1B4 MOVN W2, 0x0
	0x0324B1B8 MOVZ W3, 0x1
	0x0324B1BC MOV X1, X19
	0x0324B1C0 BL 0x324B2DC
	0x0324B1C4 MOVZ W1, 0x2
	0x0324B1C8 MOV X0, X19
	0x0324B1CC BL 0x324BAB0
	0x0324B1D0 ADRP X21, 0xED7000
	0x0324B1D4 LDR X21, [X21 + 0xB20]
	0x0324B1D8 MOV W8, W31
	0x0324B1DC MOV W9, W31
	0x0324B1E0 MOV W22, W8
	0x0324B1E4 MOV X0, X19
	0x0324B1E8 MOV W23, W9
	0x0324B1EC BL 0x324C0E8
	0x0324B1F0 AND W8, W0, 0xFF
	0x0324B1F4 CMP W8, 0x4
	0x0324B1F8 MOVZ W9, 0x1
	0x0324B1FC B.EQ 0x324B1E4
	0x0324B200 CMP W8, 0x3
	0x0324B204 B.NE 0x324B254
	0x0324B208 AND W8, W22, W23, 0x0
	0x0324B20C TBNZ X8, 0x0, 0x324B264
	0x0324B210 MOV X0, X19
	0x0324B214 BL 0x324B0E4
	0x0324B218 MOV W8, W31
	0x0324B21C TBNZ X23, 0x0, 0x324B1DC
	0x0324B220 LDR X1, [X21]
	0x0324B224 MOVZ W2, 0x4
	0x0324B228 MOV X3, X31
	0x0324B22C BL 0x322590C
	0x0324B230 CMP W0, 0x0
	0x0324B234 CSET W8, EQ
	0x0324B238 ORR W8, W22, W8, 0x0
	0x0324B23C B 0x324B1DC
	0x0324B240 MOVZ W0, 0x2
	0x0324B244 LDP X20, X19, [X31 + 0x20]
	0x0324B248 LDP X22, X21, [X31 + 0x10]
	0x0324B24C LDP X30, X23, [X31], #0x30
	0x0324B250 RET
	0x0324B254 CMP W8, 0x1
	0x0324B258 B.NE 0x324B288
	0x0324B25C MOV W0, W31
	0x0324B260 B 0x324B244
	0x0324B264 LDR X20, [X20 + 0x18]
	0x0324B268 MOV X0, X19
	0x0324B26C BL 0x324B0E4
	0x0324B270 BL 0x3243998
	0x0324B274 CBZ X20, 0x324B2D8
	0x0324B278 MOV X1, X0
	0x0324B27C MOV X0, X20
	0x0324B280 BL 0x324BB10
	0x0324B284 B 0x324B25C
	0x0324B288 LDR X0, [X20 + 0x18]
	0x0324B28C BL 0x19903C0
	0x0324B290 ADRP X0, 0xED7000
	0x0324B294 LDR X0, [X0 + 0xCA8]
	0x0324B298 BL 0x1C16D08
	0x0324B29C MOV X1, X31
	0x0324B2A0 BL 0x33BDD84
	0x0324B2A4 ADRP X0, 0xED7000
	0x0324B2A8 LDR X0, [X0 + 0xB60]
	0x0324B2AC BL 0x1C16D08
	0x0324B2B0 BL 0x1C16F10
	0x0324B2B4 MOV X1, X31
	0x0324B2B8 MOV X19, X0
	0x0324B2BC BL 0x3393E38
	0x0324B2C0 ADRP X0, 0xED7000
	0x0324B2C4 LDR X0, [X0 + 0xCB0]
	0x0324B2C8 BL 0x1C16D08
	0x0324B2CC MOV X1, X0
	0x0324B2D0 MOV X0, X19
	0x0324B2D4 BL 0x1C16DEC
	0x0324B2D8 BL 0x1C16F20
	0x0324B2DC SUB X31, X31, 0x70
	0x0324B2E0 STP X29, X30, [X31 + 0x10]
	0x0324B2E4 STP X28, X27, [X31 + 0x20]
	0x0324B2E8 STP X26, X25, [X31 + 0x30]
	0x0324B2EC STP X24, X23, [X31 + 0x40]
	0x0324B2F0 STP X22, X21, [X31 + 0x50]
	0x0324B2F4 STP X20, X19, [X31 + 0x60]
	0x0324B2F8 STR W3, [X31 + 0x8]
	0x0324B2FC ADRP X20, 0x1191000
	0x0324B300 ADRP X25, 0xED7000
	0x0324B304 ADRP X26, 0xEA8000
	0x0324B308 LDRB W8, [X20 + 0x494]
	0x0324B30C LDR X25, [X25 + 0xCB8]
	0x0324B310 LDR X26, [X26 + 0x8F0]
	0x0324B314 MOV W21, W2
	0x0324B318 MOV X19, X1
	0x0324B31C MOV X22, X0
	0x0324B320 TBNZ X8, 0x0, 0x324B344
	0x0324B324 ADRP X0, 0xED7000
	0x0324B328 LDR X0, [X0 + 0xCB8]
	0x0324B32C BL 0x1C16CF4
	0x0324B330 ADRP X0, 0xEA8000
	0x0324B334 LDR X0, [X0 + 0x8F0]
	0x0324B338 BL 0x1C16CF4
	0x0324B33C MOVZ W8, 0x1
	0x0324B340 STRB W8, [X20 + 0x494]
	0x0324B344 ADDS W31, W21, 0x1
	0x0324B348 B.EQ 0x324B35C
	0x0324B34C CBZ X19, 0x324BA60
	0x0324B350 LDR W8, [X19 + 0x10]
	0x0324B354 CMP W8, W21
	0x0324B358 B.GE 0x324BA40
	0x0324B35C LDR X27, [X22 + 0x48]
	0x0324B360 CBZ X27, 0x324BA60
	0x0324B364 ADRP X20, 0xFFFFFFFFFD94B000
	0x0324B368 ADRP X29, 0xFFFFFFFFFD94B000
	0x0324B36C MOV W28, W31
	0x0324B370 STR W31, [X31 + 0xC]
	0x0324B374 STR X31, [X27 + 0x20]
	0x0324B378 STR W31, [X27 + 0x30]
	0x0324B37C ADD X20, X20, 0x494
	0x0324B380 ADD X29, X29, 0x49A
	0x0324B384 MOV W24, W28
	0x0324B388 LDR W23, [X22 + 0x38]
	0x0324B38C ADDS W31, W23, 0x1
	0x0324B390 B.EQ 0x324B3EC
	0x0324B394 MOVN W8, 0x0
	0x0324B398 STR W8, [X22 + 0x38]
	0x0324B39C CMP W23, 0x22
	0x0324B3A0 TBZ X24, 0x0, 0x324B3C0
	0x0324B3A4 B.LE 0x324B454
	0x0324B3A8 CMP W23, 0x2F
	0x0324B3AC B.EQ 0x324B4E4
	0x0324B3B0 CMP W23, 0x3C
	0x0324B3B4 B.NE 0x324B4EC
	0x0324B3B8 TBNZ X28, 0x0, 0x324B6C8
	0x0324B3BC B 0x324B94C
	0x0324B3C0 B.LE 0x324B47C
	0x0324B3C4 SUB W8, W23, 0x3C
	0x0324B3C8 CMP W8, 0x3
	0x0324B3CC B.LS 0x324B50C
	0x0324B3D0 CMP W23, 0x2D
	0x0324B3D4 B.EQ 0x324B530
	0x0324B3D8 CMP W23, 0x2F
	0x0324B3DC B.NE 0x324B6C8
	0x0324B3E0 LDR W8, [X22 + 0x14]
	0x0324B3E4 CBZ W8, 0x324B6C8
	0x0324B3E8 B 0x324B9DC
	0x0324B3EC LDR W8, [X22 + 0x3C]
	0x0324B3F0 CMP W8, 0x5
	0x0324B3F4 B.HI 0x324B53C
	0x0324B3F8 ADR X9, 0x10
	0x0324B3FC LDRB W10, [X20, X8, LSL]
	0x0324B400 ADD X9, X9, X10, 0x2, LSL
	0x0324B404 BR X9
	0x0324B408 LDP W8, W10, [X22 + 0x30]
	0x0324B40C SXTW X8, W8
	0x0324B410 ADD W9, W8, 0x1
	0x0324B414 CMP W9, W10
	0x0324B418 B.GE 0x324BA14
	0x0324B41C LDR X10, [X22 + 0x18]
	0x0324B420 CBZ X10, 0x324BA60
	0x0324B424 LDR W11, [X10 + 0x18]
	0x0324B428 CMP W9, W11
	0x0324B42C B.CS 0x324BA64
	0x0324B430 CMP W8, W11
	0x0324B434 B.CS 0x324BA64
	0x0324B438 ADD X10, X10, 0x20
	0x0324B43C LDRB W9, [X10, W9, SXTW]
	0x0324B440 LDRB W23, [X10, X8, LSL]
	0x0324B444 ADD W8, W8, 0x2
	0x0324B448 STR W8, [X22 + 0x30]
	0x0324B44C BFM W23, W9, 0x18, 0x7
	0x0324B450 B 0x324B39C
	0x0324B454 CMP W23, 0xC
	0x0324B458 B.LE 0x324B4C0
	0x0324B45C CMP W23, 0xD
	0x0324B460 B.EQ 0x324B4DC
	0x0324B464 CMP W23, 0x20
	0x0324B468 B.EQ 0x324B4DC
	0x0324B46C CMP W23, 0x22
	0x0324B470 B.NE 0x324B6C8
	0x0324B474 TBZ X28, 0x0, 0x324B6C8
	0x0324B478 B 0x324B95C
	0x0324B47C CMP W23, 0x1F
	0x0324B480 MOV W24, W31
	0x0324B484 B.GT 0x324B4A4
	0x0324B488 CMP W23, 0x9
	0x0324B48C B.EQ 0x324B388
	0x0324B490 CMP W23, 0xA
	0x0324B494 B.EQ 0x324B6AC
	0x0324B498 CMP W23, 0xD
	0x0324B49C B.EQ 0x324B388
	0x0324B4A0 B 0x324B6C8
	0x0324B4A4 CMP W23, 0x20
	0x0324B4A8 B.EQ 0x324B388
	0x0324B4AC CMP W23, 0x21
	0x0324B4B0 B.NE 0x324B6C0
	0x0324B4B4 LDR W8, [X22 + 0x14]
	0x0324B4B8 CBZ W8, 0x324B6C8
	0x0324B4BC B 0x324BA00
	0x0324B4C0 CMP W23, 0x9
	0x0324B4C4 B.EQ 0x324B4DC
	0x0324B4C8 CMP W23, 0xA
	0x0324B4CC B.NE 0x324B6C8
	0x0324B4D0 LDR W8, [X22 + 0x10]
	0x0324B4D4 ADD W8, W8, 0x1
	0x0324B4D8 STR W8, [X22 + 0x10]
	0x0324B4DC TBNZ X28, 0x0, 0x324B6C8
	0x0324B4E0 B 0x324B95C
	0x0324B4E4 TBZ X28, 0x0, 0x324B500
	0x0324B4E8 B 0x324B6C8
	0x0324B4EC SUB W8, W23, 0x3D
	0x0324B4F0 CMP W8, 0x1
	0x0324B4F4 CSET W8, HI
	0x0324B4F8 ORR W8, W28, W8, 0x0
	0x0324B4FC TBNZ X8, 0x0, 0x324B6C8
	0x0324B500 LDR W8, [X22 + 0x14]
	0x0324B504 CBZ W8, 0x324B6C8
	0x0324B508 B 0x324B958
	0x0324B50C ADRP X11, 0xFFFFFFFFFD94B000
	0x0324B510 ADD X11, X11, 0x4AA
	0x0324B514 ADR X9, 0x10
	0x0324B518 LDRH W10, [X11, X8, LSL #1]
	0x0324B51C ADD X9, X9, X10, 0x2, LSL
	0x0324B520 BR X9
	0x0324B524 LDR W8, [X22 + 0x14]
	0x0324B528 CBZ W8, 0x324B6C8
	0x0324B52C B 0x324B9E8
	0x0324B530 LDR W8, [X22 + 0x14]
	0x0324B534 CBZ W8, 0x324B6C8
	0x0324B538 B 0x324B9F4
	0x0324B53C LDR X23, [X22 + 0x40]
	0x0324B540 CBZ X23, 0x324BA60
	0x0324B544 LDR X8, [X23]
	0x0324B548 LDR X1, [X25]
	0x0324B54C LDRH W9, [X8 + 0x12E]
	0x0324B550 CBZ X9, 0x324B574
	0x0324B554 LDR X10, [X8 + 0xB0]
	0x0324B558 ADD X10, X10, 0x8
	0x0324B55C LDUR X11, [X10 - 0x8]
	0x0324B560 CMP X11, X1
	0x0324B564 B.EQ 0x324B75C
	0x0324B568 SUBS X9, X9, 0x1
	0x0324B56C ADD X10, X10, 0x10
	0x0324B570 B.NE 0x324B55C

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X22, 0x1193000
	013 Move W8, [X22+1157]
	014 Move W21, W2
	015 Move X20, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {59}
	021 Move X0, 0xEAA000
	022 Move X0, [X0+3584]
	023 Call 0x1C17CF4
	024 Move X0, 0xEAA000
	025 Move X0, [X0+3608]
	026 Call 0x1C17CF4
	027 Move X0, 0xED9000
	028 Move X0, [X0+2944]
	029 Call 0x1C17CF4
	030 Move X0, 0xED8000
	031 Move X0, [X0+2288]
	032 Call 0x1C17CF4
	033 Move X0, 0xEAC000
	034 Move X0, [X0+632]
	035 Call 0x1C17CF4
	036 Move X0, 0xEAA000
	037 Move X0, [X0+3544]
	038 Call 0x1C17CF4
	039 Move X0, 0xED9000
	040 Move X0, [X0+3128]
	041 Call 0x1C17CF4
	042 Move X0, 0xED3000
	043 Move X0, [X0+2624]
	044 Call 0x1C17CF4
	045 Move X0, 0xEB5000
	046 Move X0, [X0+3288]
	047 Call 0x1C17CF4
	048 Move X0, 0xED9000
	049 Move X0, [X0+3136]
	050 Call 0x1C17CF4
	051 Move X0, 0xEAC000
	052 Move X0, [X0+608]
	053 Call 0x1C17CF4
	054 Move X0, 0xED9000
	055 Move X0, [X0+3144]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X22+1157], W8
	059 Move X0, [X20]
	060 Compare X0, 0
	061 JumpIfEqual {175}
	062 Move X8, 0xED3000
	063 Move X8, [X8+2624]
	064 Move X2, X31
	065 Move X1, [X8]
	066 Call StringBuilder.Append, X0, X1
	067 Move X0, [X20]
	068 Compare X0, 0
	069 JumpIfEqual {175}
	070 Move X1, [X19+24]
	071 Move X25, 0xED7000
	072 Move X25, [X25+2288]
	073 Move X2, X31
	074 Call StringBuilder.Append, X0, X1
	075 Move X8, [X19+32]
	076 Compare X8, 0
	077 JumpIfEqual {176}
	078 Move X0, [X20]
	079 Compare X0, 0
	080 JumpIfEqual {175}
	081 Move X8, 0xEA9000
	082 Move X8, [X8+3544]
	083 Move X2, X31
	084 Move X1, [X8]
	085 Call StringBuilder.Append, X0, X1
	086 Move X0, [X19+32]
	087 Compare X0, 0
	088 JumpIfEqual {175}
	089 Move X26, 0xED8000
	090 Move X27, 0xED8000
	091 Move X28, 0xEB4000
	092 Move X26, [X26+2944]
	093 Move X27, [X27+3128]
	094 Move X28, [X28+3288]
	095 Move W22, W31
	096 Move X8, [X0]
	097 Move X9, [X8+664]
	098 Move X1, [X8+672]
	099 NotImplemented "Instruction BLR not yet implemented."
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X0, [X19+32]
	102 Compare X0, 0
	103 JumpIfEqual {175}
	104 Move X8, [X0]
	105 Move W1, W22
	106 Move X9, [X8+744]
	107 Move X2, [X8+752]
	108 NotImplemented "Instruction BLR not yet implemented."
	109 Compare X0, 0
	110 JumpIfEqual {175}
	111 Move X8, [X0]
	112 Move X1, [X26]
	113 Move X23, X0
	114 Move W10, [X8+304]
	115 Move W9, [X1+304]
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X8, [X8+200]
	118 Add X8, X8, X9
	119 NotImplemented "Instruction LDUR not yet implemented."
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move X0, [X20]
	122 Compare X0, 0
	123 JumpIfEqual {175}
	124 Move X1, [X23+16]
	125 Move X2, X31
	126 Call StringBuilder.Append, X0, X1
	127 Compare X0, 0
	128 JumpIfEqual {175}
	129 Move X1, [X27]
	130 Move X2, X31
	131 Call StringBuilder.Append, X0, X1
	132 Move X8, [X25]
	133 Move X24, [X23+24]
	134 Move X23, X0
	135 Move W9, [X8+224]
	136 Compare W9, 0
	137 JumpIfNotEqual {140}
	138 Move X0, X8
	139 Call 0x1C17DFC
	140 Move X0, X24
	141 Call SecurityElement.Escape, X0
	142 Compare X23, 0
	143 JumpIfEqual {175}
	144 Move X1, X0
	145 Move X0, X23
	146 Move X2, X31
	147 Call StringBuilder.Append, X0, X1
	148 Compare X0, 0
	149 JumpIfEqual {175}
	150 Move X1, [X28]
	151 Move X2, X31
	152 Call StringBuilder.Append, X0, X1
	153 Move X0, [X19+32]
	154 Compare X0, 0
	155 JumpIfEqual {175}
	156 Move X8, [X0]
	157 Move X9, [X8+664]
	158 Move X1, [X8+672]
	159 NotImplemented "Instruction BLR not yet implemented."
	160 Subtract W8, W0, 1
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move X23, [X20]
	163 Move X0, X31
	164 Call Environment.get_NewLine
	165 Compare X23, 0
	166 JumpIfEqual {175}
	167 Move X1, X0
	168 Move X0, X23
	169 Move X2, X31
	170 Call StringBuilder.Append, X0, X1
	171 Move X0, [X19+32]
	172 Add W22, W22, 1
	173 Compare X0, 0
	174 JumpIfNotEqual {96}
	175 Call 0x1C17F20
	176 Move X0, [X19+16]
	177 Compare X0, 0
	178 JumpIfEqual {190}
	179 Move X8, 0xEAB000
	180 Move X8, [X8+632]
	181 Move X2, X31
	182 Move X8, [X8]
	183 Move X8, [X8+184]
	184 Move X1, [X8]
	185 Call String.op_Equality, X0, X1
	186 Move TEMP, X0
	187 And TEMP, TEMP, 1
	188 Compare TEMP, 1
	189 JumpIfNotEqual {199}
	190 Move X0, [X19+40]
	191 Compare X0, 0
	192 JumpIfEqual {303}
	193 Move X8, [X0]
	194 Move X9, [X8+664]
	195 Move X1, [X8+672]
	196 NotImplemented "Instruction BLR not yet implemented."
	197 Compare W0, 0
	198 JumpIfEqual {303}
	199 Move X0, [X20]
	200 Compare X0, 0
	201 JumpIfEqual {175}
	202 Move X24, 0xEAB000
	203 Move X24, [X24+608]
	204 Move X2, X31
	205 Move X1, [X24]
	206 Call StringBuilder.Append, X0, X1
	207 Move X8, [X25]
	208 Move X23, [X19+16]
	209 Move X22, X0
	210 Move W9, [X8+224]
	211 Compare W9, 0
	212 JumpIfNotEqual {215}
	213 Move X0, X8
	214 Call 0x1C17DFC
	215 Move X0, X23
	216 Call SecurityElement.Escape, X0
	217 Compare X22, 0
	218 JumpIfEqual {175}
	219 Move X1, X0
	220 Move X0, X22
	221 Move X2, X31
	222 Call StringBuilder.Append, X0, X1
	223 Move X8, [X19+40]
	224 Compare X8, 0
	225 JumpIfEqual {345}
	226 Move X22, [X20]
	227 Move X0, X31
	228 Call Environment.get_NewLine
	229 Compare X22, 0
	230 JumpIfEqual {175}
	231 Move X1, X0
	232 Move X0, X22
	233 Move X2, X31
	234 Call StringBuilder.Append, X0, X1
	235 Move X0, [X19+40]
	236 Compare X0, 0
	237 JumpIfEqual {175}
	238 Move X8, [X0]
	239 Move X9, [X8+904]
	240 Move X1, [X8+912]
	241 NotImplemented "Instruction BLR not yet implemented."
	242 Move X22, X0
	243 Compare X0, 0
	244 JumpIfEqual {400}
	245 Move X23, 0xEA9000
	246 Move X23, [X23+3608]
	247 Add W21, W21, 1
	248 Move X8, [X22]
	249 Move X1, [X23]
	250 NotImplemented "Instruction LDRH not yet implemented."
	251 Compare X9, 0
	252 JumpIfEqual {259}
	253 Move X10, [X8+176]
	254 Add X10, X10, 8
	255 NotImplemented "Instruction LDUR not yet implemented."
	256 NotImplemented "Instruction CMP not yet implemented."
	257 Subtract X9, X9, 1
	258 Add X10, X10, 16
	259 Move X0, X22
	260 Move W2, W31
	261 Call 0x1C5D788
	262 NotImplemented "Instruction LDRSW not yet implemented."
	263 Add X8, X8, X9
	264 Add X0, X8, 312
	265 Move X8, [X0]
	266 Move X1, [X0+8]
	267 Move X0, X22
	268 NotImplemented "Instruction BLR not yet implemented."
	269 Move TEMP, X0
	270 And TEMP, TEMP, 1
	271 Compare TEMP, 1
	272 JumpIfNotEqual {309}
	273 Move X8, [X22]
	274 Move X1, [X23]
	275 NotImplemented "Instruction LDRH not yet implemented."
	276 Compare X9, 0
	277 JumpIfEqual {284}
	278 Move X10, [X8+176]
	279 Add X10, X10, 8
	280 NotImplemented "Instruction LDUR not yet implemented."
	281 NotImplemented "Instruction CMP not yet implemented."
	282 Subtract X9, X9, 1
	283 Add X10, X10, 16
	284 Move W2, 1
	285 Move X0, X22
	286 Call 0x1C5D788
	287 Move W9, [X10]
	288 Add W9, W9, 1
	289 Add X8, X8, W9
	290 Add X0, X8, 312
	291 Move X8, [X0]
	292 Move X1, [X0+8]
	293 Move X0, X22
	294 NotImplemented "Instruction BLR not yet implemented."
	295 Compare X0, 0
	296 JumpIfEqual {399}
	297 Move X1, [X25]
	298 Move X8, [X0]
	299 NotImplemented "Instruction CMP not yet implemented."
	300 Move X1, X20
	301 Move W2, W21
	302 Call SecurityElement.ToXml, X0, X1, X2
	303 Move X0, [X20]
	304 Compare X0, 0
	305 JumpIfEqual {175}
	306 Move X8, 0xED8000
	307 Move X8, [X8+3144]
	308 Move X1, [X8]
	309 Move X21, X31
	310 Move W23, 9
	311 Move X25, 0xEA9000
	312 Move X25, [X25+3584]
	313 Move X0, X22
	314 Move X1, [X25]
	315 Call 0x1C17E00
	316 Compare X0, 0
	317 JumpIfEqual {340}
	318 Move X8, [X0]
	319 Move X1, [X25]
	320 Move X22, X0
	321 NotImplemented "Instruction LDRH not yet implemented."
	322 Compare X9, 0
	323 JumpIfEqual {330}
	324 Move X10, [X8+176]
	325 Add X10, X10, 8
	326 NotImplemented "Instruction LDUR not yet implemented."
	327 NotImplemented "Instruction CMP not yet implemented."
	328 Subtract X9, X9, 1
	329 Add X10, X10, 16
	330 Move X0, X22
	331 Move W2, W31
	332 Call 0x1C5D788
	333 NotImplemented "Instruction LDRSW not yet implemented."
	334 Add X8, X8, X9
	335 Add X0, X8, 312
	336 Move X8, [X0]
	337 Move X1, [X0+8]
	338 Move X0, X22
	339 NotImplemented "Instruction BLR not yet implemented."
	340 Compare X21, 0
	341 JumpIfNotEqual {401}
	342 NotImplemented "Instruction CMP not yet implemented."
	343 Compare W23, 0
	344 JumpIfNotEqual {384}
	345 Move X0, [X20]
	346 Compare X0, 0
	347 JumpIfEqual {175}
	348 Move X8, 0xED8000
	349 Move X8, [X8+3136]
	350 Move X2, X31
	351 Move X1, [X8]
	352 Call StringBuilder.Append, X0, X1
	353 Compare X0, 0
	354 JumpIfEqual {175}
	355 Move X1, [X19+24]
	356 Move X2, X31
	357 Call StringBuilder.Append, X0, X1
	358 Compare X0, 0
	359 JumpIfEqual {175}
	360 Move X1, [X24]
	361 Move X2, X31
	362 Call StringBuilder.Append, X0, X1
	363 Move X19, X0
	364 Move X0, X31
	365 Call Environment.get_NewLine
	366 Compare X19, 0
	367 JumpIfEqual {175}
	368 Move X1, X0
	369 Move X0, X19
	370 Move X20, [X31+80]
	371 Move X19, [X31+88]
	372 Move X22, [X31+64]
	373 Move X21, [X31+72]
	374 Move X24, [X31+48]
	375 Move X23, [X31+56]
	376 Move X26, [X31+32]
	377 Move X25, [X31+40]
	378 Move X28, [X31+16]
	379 Move X27, [X31+24]
	380 Move X2, X31
	381 Move X30, [X31+96]
	382 Call StringBuilder.Append, X0, X1
	383 Return 
	384 Move X20, [X31+80]
	385 Move X19, [X31+88]
	386 Move X22, [X31+64]
	387 Move X21, [X31+72]
	388 Move X24, [X31+48]
	389 Move X23, [X31+56]
	390 Move X26, [X31+32]
	391 Move X25, [X31+40]
	392 Move X28, [X31+16]
	393 Move X27, [X31+24]
	394 Move X30, [X31+96]
	395 Return 
	396 Move X0, X23
	397 Call 0x1C181E0
	398 Call 0x1C181E0
	399 Call 0x1C17F20
	400 Call 0x1C17F20
	401 Move X0, X21
	402 Call 0x1C17F18
	403 Move X23, X0
	404 NotImplemented "Instruction CMP not yet implemented."
	405 Move X0, X23
	406 Call 0x3EB2AD0
	407 Move X21, [X0]
	408 Call 0x3EB2AE0
	409 Move W23, W31
	410 Move X21, X31
	411 Move X23, X0
	412 Move X20, 0xEA9000
	413 Move X20, [X20+3584]
	414 Move X1, [X20]
	415 Move X0, X22
	416 Call 0x1C17E00
	417 Move X19, X0
	418 Compare X0, 0
	419 JumpIfEqual {441}
	420 Move X8, [X19]
	421 Move X1, [X20]
	422 NotImplemented "Instruction LDRH not yet implemented."
	423 Compare X9, 0
	424 JumpIfEqual {431}
	425 Move X10, [X8+176]
	426 Add X10, X10, 8
	427 NotImplemented "Instruction LDUR not yet implemented."
	428 NotImplemented "Instruction CMP not yet implemented."
	429 Subtract X9, X9, 1
	430 Add X10, X10, 16
	431 Move X0, X19
	432 Move W2, W31
	433 Call 0x1C5D788
	434 NotImplemented "Instruction LDRSW not yet implemented."
	435 Add X8, X8, X9
	436 Add X0, X8, 312
	437 Move X8, [X0]
	438 Move X1, [X0+8]
	439 Move X0, X19
	440 NotImplemented "Instruction BLR not yet implemented."
	441 Compare X21, 0
	442 JumpIfNotEqual {445}
	443 Move X0, X23
	444 Call 0x1D2D690
	445 Move X0, X21
	446 Call 0x1C17F18
	447 Call 0x1991590

Method: System.Security.SecurityElement/SecurityAttribute GetAttribute(System.String name)

Disassembly:
	0x0324A618 TBZ X0, 0x0, 0x324A64C
	0x0324A61C ADRP X8, 0xED7000
	0x0324A620 LDR X8, [X8 + 0x8F0]
	0x0324A624 LDR X19, [X20 + 0x10]
	0x0324A628 LDR X0, [X8]
	0x0324A62C LDR W8, [X0 + 0xE0]
	0x0324A630 CBNZ W8, 0x324A638
	0x0324A634 BL 0x1C16DFC
	0x0324A638 MOV X0, X19
	0x0324A63C LDP X20, X19, [X31 + 0x20]
	0x0324A640 LDP X22, X21, [X31 + 0x10]
	0x0324A644 LDR X30, [X31], #0x30
	0x0324A648 B 0x3249448
	0x0324A64C LDR X0, [X20 + 0x28]
	0x0324A650 CBZ X0, 0x324A75C
	0x0324A654 LDR X8, [X0]
	0x0324A658 LDR X9, [X8 + 0x388]
	0x0324A65C LDR X1, [X8 + 0x390]
	0x0324A660 BLR X9
	0x0324A664 CBZ X0, 0x324A76C
	0x0324A668 ADRP X21, 0xEA9000
	0x0324A66C ADRP X22, 0xED7000
	0x0324A670 LDR X21, [X21 + 0xE18]
	0x0324A674 LDR X22, [X22 + 0x8F0]
	0x0324A678 MOV X20, X0
	0x0324A67C LDR X8, [X20]
	0x0324A680 LDR X1, [X21]
	0x0324A684 LDRH W9, [X8 + 0x12E]
	0x0324A688 CBZ X9, 0x324A6AC
	0x0324A68C LDR X10, [X8 + 0xB0]
	0x0324A690 ADD X10, X10, 0x8
	0x0324A694 LDUR X11, [X10 - 0x8]
	0x0324A698 CMP X11, X1
	0x0324A69C B.EQ 0x324A6BC
	0x0324A6A0 SUBS X9, X9, 0x1
	0x0324A6A4 ADD X10, X10, 0x10
	0x0324A6A8 B.NE 0x324A694
	0x0324A6AC MOV X0, X20
	0x0324A6B0 MOV W2, W31
	0x0324A6B4 BL 0x1C5C788
	0x0324A6B8 B 0x324A6C8
	0x0324A6BC LDRSW X9, [X10]
	0x0324A6C0 ADD X8, X8, X9, 0x4, LSL
	0x0324A6C4 ADD X0, X8, 0x138
	0x0324A6C8 LDP X8, X1, [X0]
	0x0324A6CC MOV X0, X20
	0x0324A6D0 BLR X8
	0x0324A6D4 TBZ X0, 0x0, 0x324A758
	0x0324A6D8 LDR X8, [X20]
	0x0324A6DC LDR X1, [X21]
	0x0324A6E0 LDRH W9, [X8 + 0x12E]
	0x0324A6E4 CBZ X9, 0x324A708
	0x0324A6E8 LDR X10, [X8 + 0xB0]
	0x0324A6EC ADD X10, X10, 0x8
	0x0324A6F0 LDUR X11, [X10 - 0x8]
	0x0324A6F4 CMP X11, X1
	0x0324A6F8 B.EQ 0x324A718
	0x0324A6FC SUBS X9, X9, 0x1
	0x0324A700 ADD X10, X10, 0x10
	0x0324A704 B.NE 0x324A6F0
	0x0324A708 MOVZ W2, 0x1
	0x0324A70C MOV X0, X20
	0x0324A710 BL 0x1C5C788
	0x0324A714 B 0x324A728
	0x0324A718 LDR W9, [X10]
	0x0324A71C ADD W9, W9, 0x1
	0x0324A720 ADD X8, X8, W9, 0x4, SXTW
	0x0324A724 ADD X0, X8, 0x138
	0x0324A728 LDP X8, X1, [X0]
	0x0324A72C MOV X0, X20
	0x0324A730 BLR X8
	0x0324A734 CBZ X0, 0x324A76C
	0x0324A738 LDR X1, [X22]
	0x0324A73C LDR X8, [X0]
	0x0324A740 CMP X8, X1
	0x0324A744 B.NE 0x324A770
	0x0324A748 MOV X1, X19
	0x0324A74C BL 0x324A57C
	0x0324A750 CBZ X0, 0x324A67C
	0x0324A754 B 0x324A75C
	0x0324A758 MOV X0, X31
	0x0324A75C LDP X20, X19, [X31 + 0x20]
	0x0324A760 LDP X22, X21, [X31 + 0x10]
	0x0324A764 LDR X30, [X31], #0x30
	0x0324A768 RET
	0x0324A76C BL 0x1C16F20
	0x0324A770 BL 0x1C171E0
	0x0324A774 ADRP X0, 0xEAE000
	0x0324A778 LDR X0, [X0 + 0x528]
	0x0324A77C BL 0x1C16D08
	0x0324A780 BL 0x1C16F10
	0x0324A784 MOV X19, X0
	0x0324A788 ADRP X0, 0xED8000
	0x0324A78C LDR X0, [X0 + 0xC50]
	0x0324A790 BL 0x1C16D08
	0x0324A794 MOV X1, X0
	0x0324A798 MOV X0, X19
	0x0324A79C MOV X2, X31
	0x0324A7A0 BL 0x330E100
	0x0324A7A4 ADRP X0, 0xED8000
	0x0324A7A8 LDR X0, [X0 + 0xC58]
	0x0324A7AC BL 0x1C16D08
	0x0324A7B0 MOV X1, X0
	0x0324A7B4 MOV X0, X19
	0x0324A7B8 BL 0x1C16DEC
	0x0324A7BC STR X30, [X31 - 0x40]!
	0x0324A7C0 STP X24, X23, [X31 + 0x10]
	0x0324A7C4 STP X22, X21, [X31 + 0x20]
	0x0324A7C8 STP X20, X19, [X31 + 0x30]
	0x0324A7CC ADRP X19, 0x1192000
	0x0324A7D0 ADRP X21, 0xEB2000
	0x0324A7D4 ADRP X22, 0xED8000
	0x0324A7D8 ADRP X20, 0xED7000
	0x0324A7DC LDRB W8, [X19 + 0x488]
	0x0324A7E0 LDR X21, [X21 + 0x8D8]
	0x0324A7E4 LDR X22, [X22 + 0xC60]
	0x0324A7E8 LDR X20, [X20 + 0x8F0]
	0x0324A7EC TBNZ X8, 0x0, 0x324A834
	0x0324A7F0 ADRP X0, 0xEB2000
	0x0324A7F4 LDR X0, [X0 + 0x8D8]
	0x0324A7F8 BL 0x1C16CF4
	0x0324A7FC ADRP X0, 0xED7000
	0x0324A800 LDR X0, [X0 + 0x8F0]
	0x0324A804 BL 0x1C16CF4
	0x0324A808 ADRP X0, 0xED8000
	0x0324A80C LDR X0, [X0 + 0xC68]
	0x0324A810 BL 0x1C16CF4
	0x0324A814 ADRP X0, 0xED8000
	0x0324A818 LDR X0, [X0 + 0xC70]
	0x0324A81C BL 0x1C16CF4
	0x0324A820 ADRP X0, 0xED8000
	0x0324A824 LDR X0, [X0 + 0xC60]
	0x0324A828 BL 0x1C16CF4
	0x0324A82C MOVZ W8, 0x1
	0x0324A830 STRB W8, [X19 + 0x488]
	0x0324A834 LDR X0, [X21]
	0x0324A838 MOVZ W1, 0x3
	0x0324A83C BL 0x1C16D6C
	0x0324A840 LDR X1, [X22]
	0x0324A844 MOV X2, X31
	0x0324A848 MOV X19, X0
	0x0324A84C BL 0x32C5BD8
	0x0324A850 LDR X8, [X20]
	0x0324A854 MOVZ W1, 0x2
	0x0324A858 LDR X8, [X8 + 0xB8]
	0x0324A85C STR X19, [X8]
	0x0324A860 LDR X0, [X21]
	0x0324A864 BL 0x1C16D6C
	0x0324A868 CBZ X0, 0x324A938
	0x0324A86C LDR W8, [X0 + 0x18]
	0x0324A870 CBZ W8, 0x324A934
	0x0324A874 MOVZ W9, 0x3C
	0x0324A878 CMP W8, 0x1
	0x0324A87C STRH W9, [X0 + 0x20]
	0x0324A880 B.EQ 0x324A934
	0x0324A884 MOVZ W8, 0x3E
	0x0324A888 STRH W8, [X0 + 0x22]
	0x0324A88C LDR X8, [X20]
	0x0324A890 ADRP X23, 0xED8000
	0x0324A894 ADRP X24, 0xED8000
	0x0324A898 MOVZ W1, 0x3
	0x0324A89C LDR X8, [X8 + 0xB8]
	0x0324A8A0 STR X0, [X8 + 0x8]
	0x0324A8A4 LDR X0, [X21]
	0x0324A8A8 LDR X23, [X23 + 0xC70]
	0x0324A8AC LDR X24, [X24 + 0xC68]
	0x0324A8B0 BL 0x1C16D6C
	0x0324A8B4 LDR X1, [X22]
	0x0324A8B8 MOV X2, X31
	0x0324A8BC MOV X19, X0
	0x0324A8C0 BL 0x32C5BD8
	0x0324A8C4 LDR X8, [X20]
	0x0324A8C8 MOVZ W1, 0x3
	0x0324A8CC LDR X8, [X8 + 0xB8]
	0x0324A8D0 STR X19, [X8 + 0x10]
	0x0324A8D4 LDR X0, [X21]
	0x0324A8D8 BL 0x1C16D6C
	0x0324A8DC LDR X1, [X23]
	0x0324A8E0 MOV X2, X31
	0x0324A8E4 MOV X19, X0
	0x0324A8E8 BL 0x32C5BD8
	0x0324A8EC LDR X8, [X20]
	0x0324A8F0 MOVZ W1, 0x5
	0x0324A8F4 LDR X8, [X8 + 0xB8]
	0x0324A8F8 STR X19, [X8 + 0x18]
	0x0324A8FC LDR X0, [X21]
	0x0324A900 BL 0x1C16D6C
	0x0324A904 LDR X1, [X24]
	0x0324A908 MOV X2, X31
	0x0324A90C MOV X19, X0
	0x0324A910 BL 0x32C5BD8
	0x0324A914 LDR X8, [X20]
	0x0324A918 LDP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x1193000
	009 Move W8, [X21+1158]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0xEAA000
	017 Move X0, [X0+3584]
	018 Call 0x1C17CF4
	019 Move X0, 0xEAA000
	020 Move X0, [X0+3608]
	021 Call 0x1C17CF4
	022 Move X0, 0xED9000
	023 Move X0, [X0+2944]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+1158], W8
	027 Move X0, [X19+32]
	028 Compare X0, 0
	029 JumpIfEqual {111}
	030 Move X8, [X0]
	031 Move X22, 0xEAA000
	032 Move X9, [X8+904]
	033 Move X1, [X8+912]
	034 Move X22, [X22+3584]
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Move X19, X0
	037 Compare X0, 0
	038 JumpIfEqual {155}
	039 Move X23, 0xEAA000
	040 Move X24, 0xED9000
	041 Move X23, [X23+3608]
	042 Move X24, [X24+2944]
	043 Move X8, [X19]
	044 Move X1, [X23]
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 Compare X9, 0
	047 JumpIfEqual {54}
	048 Move X10, [X8+176]
	049 Add X10, X10, 8
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Subtract X9, X9, 1
	053 Add X10, X10, 16
	054 Move X0, X19
	055 Move W2, W31
	056 Call 0x1C5D788
	057 NotImplemented "Instruction LDRSW not yet implemented."
	058 Add X8, X8, X9
	059 Add X0, X8, 312
	060 Move X8, [X0]
	061 Move X1, [X0+8]
	062 Move X0, X19
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {112}
	068 Move X8, [X19]
	069 Move X1, [X23]
	070 NotImplemented "Instruction LDRH not yet implemented."
	071 Compare X9, 0
	072 JumpIfEqual {79}
	073 Move X10, [X8+176]
	074 Add X10, X10, 8
	075 NotImplemented "Instruction LDUR not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Subtract X9, X9, 1
	078 Add X10, X10, 16
	079 Move W2, 1
	080 Move X0, X19
	081 Call 0x1C5D788
	082 Move W9, [X10]
	083 Add W9, W9, 1
	084 Add X8, X8, W9
	085 Add X0, X8, 312
	086 Move X8, [X0]
	087 Move X1, [X0+8]
	088 Move X0, X19
	089 NotImplemented "Instruction BLR not yet implemented."
	090 Move X21, X0
	091 Compare X0, 0
	092 JumpIfEqual {154}
	093 Move X8, [X21]
	094 Move X1, [X24]
	095 Move W10, [X8+304]
	096 Move W9, [X1+304]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X8, [X8+200]
	099 Add X8, X8, X9
	100 NotImplemented "Instruction LDUR not yet implemented."
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X0, [X21+16]
	103 Move X1, X20
	104 Move X2, X31
	105 Call String.op_Equality, X0, X1
	106 Move TEMP, X0
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfNotEqual {43}
	110 Move X20, X31
	111 Move X21, X31
	112 Move X20, X31
	113 Move X21, X31
	114 Move X1, [X22]
	115 Move X0, X19
	116 Call 0x1C17E00
	117 Compare X0, 0
	118 JumpIfEqual {141}
	119 Move X8, [X0]
	120 Move X1, [X22]
	121 Move X19, X0
	122 NotImplemented "Instruction LDRH not yet implemented."
	123 Compare X9, 0
	124 JumpIfEqual {131}
	125 Move X10, [X8+176]
	126 Add X10, X10, 8
	127 NotImplemented "Instruction LDUR not yet implemented."
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Subtract X9, X9, 1
	130 Add X10, X10, 16
	131 Move X0, X19
	132 Move W2, W31
	133 Call 0x1C5D788
	134 NotImplemented "Instruction LDRSW not yet implemented."
	135 Add X8, X8, X9
	136 Add X0, X8, 312
	137 Move X8, [X0]
	138 Move X1, [X0+8]
	139 Move X0, X19
	140 NotImplemented "Instruction BLR not yet implemented."
	141 Compare X20, 0
	142 JumpIfNotEqual {156}
	143 Move X0, X21
	144 Move X20, [X31+48]
	145 Move X19, [X31+56]
	146 Move X22, [X31+32]
	147 Move X21, [X31+40]
	148 Move X24, [X31+16]
	149 Move X23, [X31+24]
	150 Move X30, [X31+64]
	151 Return X0
	152 Move X0, X21
	153 Call 0x1C181E0
	154 Call 0x1C17F20
	155 Call 0x1C17F20
	156 Move X0, X20
	157 Call 0x1C17F18
	158 Move X21, X0
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Move X0, X21
	161 Call 0x3EB2AD0
	162 Move X20, [X0]
	163 Call 0x3EB2AE0
	164 Move X20, X31
	165 Move X21, X0
	166 Move X1, [X22]
	167 Move X0, X19
	168 Call 0x1C17E00
	169 Move X19, X0
	170 Compare X0, 0
	171 JumpIfEqual {193}
	172 Move X8, [X19]
	173 Move X1, [X22]
	174 NotImplemented "Instruction LDRH not yet implemented."
	175 Compare X9, 0
	176 JumpIfEqual {183}
	177 Move X10, [X8+176]
	178 Add X10, X10, 8
	179 NotImplemented "Instruction LDUR not yet implemented."
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Subtract X9, X9, 1
	182 Add X10, X10, 16
	183 Move X0, X19
	184 Move W2, W31
	185 Call 0x1C5D788
	186 NotImplemented "Instruction LDRSW not yet implemented."
	187 Add X8, X8, X9
	188 Add X0, X8, 312
	189 Move X8, [X0]
	190 Move X1, [X0+8]
	191 Move X0, X19
	192 NotImplemented "Instruction BLR not yet implemented."
	193 Compare X20, 0
	194 JumpIfNotEqual {197}
	195 Move X0, X21
	196 Call 0x1D2D690
	197 Move X0, X20
	198 Call 0x1C17F18
	199 Call 0x1991590

Method: System.Void set_m_strText(System.String value)

Disassembly:
	0x0324B574 MOV X0, X23
	0x0324B578 MOV W2, W31

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.String SearchForTextOfLocalName(System.String strLocalName)

Disassembly:
	0x0324B57C BL 0x1C5C788
	0x0324B580 B 0x324B768
	0x0324B584 LDP W8, W10, [X22 + 0x30]
	0x0324B588 SXTW X8, W8
	0x0324B58C CMP W8, W10
	0x0324B590 B.GE 0x324BA14
	0x0324B594 LDR X9, [X22 + 0x18]
	0x0324B598 ADD X12, X8, 0x1
	0x0324B59C STR W12, [X22 + 0x30]
	0x0324B5A0 CBZ X9, 0x324BA60
	0x0324B5A4 LDR W11, [X9 + 0x18]
	0x0324B5A8 CMP W8, W11
	0x0324B5AC B.CS 0x324BA64
	0x0324B5B0 ADD X13, X9, X8
	0x0324B5B4 LDRB W23, [X13 + 0x20]
	0x0324B5B8 TBZ X23, 0x7, 0x324B39C
	0x0324B5BC UBFM W13, W23, 0x4, 0x1F
	0x0324B5C0 SUB W13, W13, 0x8
	0x0324B5C4 CMP W13, 0x7
	0x0324B5C8 B.HI 0x324B8BC
	0x0324B5CC ADR X14, 0x10
	0x0324B5D0 LDRH W15, [X29, X13, LSL #1]
	0x0324B5D4 ADD X14, X14, X15, 0x2, LSL
	0x0324B5D8 BR X14
	0x0324B5DC AND W23, W23, 0x1F
	0x0324B5E0 MOVZ W13, 0x2
	0x0324B5E4 B 0x324B8B8
	0x0324B5E8 LDP W8, W9, [X22 + 0x30]
	0x0324B5EC SXTW X8, W8
	0x0324B5F0 CMP W8, W9
	0x0324B5F4 B.GE 0x324BA14
	0x0324B5F8 LDR X9, [X22 + 0x18]
	0x0324B5FC ADD W10, W8, 0x1
	0x0324B600 STR W10, [X22 + 0x30]
	0x0324B604 CBZ X9, 0x324BA60
	0x0324B608 LDR W10, [X9 + 0x18]
	0x0324B60C CMP W8, W10
	0x0324B610 B.CS 0x324BA64
	0x0324B614 ADD X8, X9, X8
	0x0324B618 LDRB W23, [X8 + 0x20]
	0x0324B61C B 0x324B39C
	0x0324B620 LDP W8, W9, [X22 + 0x30]
	0x0324B624 SXTW X8, W8
	0x0324B628 CMP W8, W9
	0x0324B62C B.GE 0x324BA14
	0x0324B630 LDR X9, [X22 + 0x20]
	0x0324B634 ADD W10, W8, 0x1
	0x0324B638 STR W10, [X22 + 0x30]
	0x0324B63C CBZ X9, 0x324BA60
	0x0324B640 LDR W10, [X9 + 0x18]
	0x0324B644 CMP W8, W10
	0x0324B648 B.CS 0x324BA64
	0x0324B64C ADD X8, X9, X8, 0x1, LSL
	0x0324B650 LDRH W23, [X8 + 0x20]
	0x0324B654 B 0x324B39C
	0x0324B658 LDP W1, W8, [X22 + 0x30]
	0x0324B65C CMP W1, W8
	0x0324B660 B.GE 0x324BA14
	0x0324B664 LDR X0, [X22 + 0x28]
	0x0324B668 ADD W8, W1, 0x1
	0x0324B66C STR W8, [X22 + 0x30]
	0x0324B670 CBNZ X0, 0x324B69C
	0x0324B674 B 0x324BA60
	0x0324B678 LDR W8, [X22 + 0x64]
	0x0324B67C CBZ W8, 0x324B788
	0x0324B680 LDR W1, [X22 + 0x60]
	0x0324B684 CMP W1, W8
	0x0324B688 B.GE 0x324B784
	0x0324B68C LDR X0, [X22 + 0x68]
	0x0324B690 ADD W8, W1, 0x1
	0x0324B694 STR W8, [X22 + 0x60]
	0x0324B698 CBZ X0, 0x324BA60
	0x0324B69C MOV X2, X31
	0x0324B6A0 BL 0x3222A1C
	0x0324B6A4 AND W23, W0, 0xFFFF
	0x0324B6A8 B 0x324B39C
	0x0324B6AC LDR W8, [X22 + 0x10]
	0x0324B6B0 MOV W24, W31
	0x0324B6B4 ADD W8, W8, 0x1
	0x0324B6B8 STR W8, [X22 + 0x10]
	0x0324B6BC B 0x324B388
	0x0324B6C0 CMP W23, 0x22
	0x0324B6C4 B.EQ 0x324B944
	0x0324B6C8 LDRSW X8, [X27 + 0x30]
	0x0324B6CC CMP W8, 0x1FF
	0x0324B6D0 B.LE 0x324B730
	0x0324B6D4 LDR X24, [X27 + 0x20]
	0x0324B6D8 CBNZ X24, 0x324B6F8
	0x0324B6DC LDR X0, [X26]
	0x0324B6E0 BL 0x1C16F10
	0x0324B6E4 MOV X1, X31
	0x0324B6E8 MOV X24, X0
	0x0324B6EC BL 0x3231AC4
	0x0324B6F0 STR X24, [X27 + 0x20]
	0x0324B6F4 CBZ X24, 0x324BA60
	0x0324B6F8 LDR X1, [X27 + 0x28]
	0x0324B6FC MOVZ W3, 0x200
	0x0324B700 MOV X0, X24
	0x0324B704 MOV W2, W31
	0x0324B708 MOV X4, X31
	0x0324B70C BL 0x3233154
	0x0324B710 LDR X8, [X27 + 0x28]
	0x0324B714 CBZ X8, 0x324BA60
	0x0324B718 LDR W9, [X8 + 0x18]
	0x0324B71C CBZ W9, 0x324BA64
	0x0324B720 MOVZ W24, 0x1
	0x0324B724 STRH W23, [X8 + 0x20]
	0x0324B728 STR W24, [X27 + 0x30]
	0x0324B72C B 0x324B388
	0x0324B730 LDR X9, [X27 + 0x28]
	0x0324B734 ADD W10, W8, 0x1
	0x0324B738 STR W10, [X27 + 0x30]
	0x0324B73C CBZ X9, 0x324BA60
	0x0324B740 LDR W10, [X9 + 0x18]
	0x0324B744 CMP W8, W10
	0x0324B748 B.CS 0x324BA64
	0x0324B74C ADD X8, X9, X8, 0x1, LSL
	0x0324B750 STRH W23, [X8 + 0x20]
	0x0324B754 MOVZ W24, 0x1
	0x0324B758 B 0x324B388
	0x0324B75C LDRSW X9, [X10]
	0x0324B760 ADD X8, X8, X9, 0x4, LSL
	0x0324B764 ADD X0, X8, 0x138
	0x0324B768 LDP X8, X1, [X0]
	0x0324B76C MOV X0, X23
	0x0324B770 BLR X8
	0x0324B774 MOV W23, W0
	0x0324B778 ADDS W31, W0, 0x1
	0x0324B77C B.NE 0x324B39C
	0x0324B780 B 0x324BA14
	0x0324B784 STR W31, [X22 + 0x64]
	0x0324B788 LDP W1, W8, [X22 + 0x30]
	0x0324B78C CMP W1, W8
	0x0324B790 B.GE 0x324BA14
	0x0324B794 LDR X0, [X22 + 0x28]
	0x0324B798 ADD W8, W1, 0x1
	0x0324B79C STR W8, [X22 + 0x30]
	0x0324B7A0 CBZ X0, 0x324BA60
	0x0324B7A4 MOV X2, X31
	0x0324B7A8 BL 0x3222A1C
	0x0324B7AC AND W23, W0, 0xFFFF
	0x0324B7B0 CMP W23, 0x7B
	0x0324B7B4 B.NE 0x324B39C
	0x0324B7B8 LDR X8, [X22 + 0x50]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1192000
	007 Move W8, [X21+1159]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xEA9000
	015 Move X0, [X0+3608]
	016 Call 0x1C17CF4
	017 Move X0, 0xED7000
	018 Move X0, [X0+2288]
	019 Call 0x1C17CF4
	020 Move X0, 0xEB2000
	021 Move X0, [X0+2440]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+1159], W8
	025 Compare X19, 0
	026 JumpIfEqual {150}
	027 Move X0, [X20+24]
	028 Compare X0, 0
	029 JumpIfEqual {142}
	030 Move X1, X19
	031 Move X2, X31
	032 Call String.Equals, X0, X1
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {55}
	037 Move X8, 0xEB2000
	038 Move X21, [X20+24]
	039 Move X8, [X8+2440]
	040 Move X1, X19
	041 Move X2, X31
	042 Move X0, [X8]
	043 Call String.Concat, X0, X1
	044 Compare X21, 0
	045 JumpIfEqual {148}
	046 Move X1, X0
	047 Move W2, 4
	048 Move X0, X21
	049 Move X3, X31
	050 Call String.EndsWith, X0, X1, X2
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {71}
	055 Move X8, 0xED7000
	056 Move X8, [X8+2288]
	057 Move X19, [X20+16]
	058 Move X0, [X8]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X0, X19
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X22, [X31+16]
	067 Move X21, [X31+24]
	068 Move X30, [X31+48]
	069 Call SecurityElement.Unescape, X0
	070 Return X0
	071 Move X0, [X20+40]
	072 Compare X0, 0
	073 JumpIfEqual {142}
	074 Move X8, [X0]
	075 Move X9, [X8+904]
	076 Move X1, [X8+912]
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Compare X0, 0
	079 JumpIfEqual {148}
	080 Move X21, 0xEA9000
	081 Move X22, 0xED7000
	082 Move X21, [X21+3608]
	083 Move X22, [X22+2288]
	084 Move X20, X0
	085 Move X8, [X20]
	086 Move X1, [X21]
	087 NotImplemented "Instruction LDRH not yet implemented."
	088 Compare X9, 0
	089 JumpIfEqual {96}
	090 Move X10, [X8+176]
	091 Add X10, X10, 8
	092 NotImplemented "Instruction LDUR not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Subtract X9, X9, 1
	095 Add X10, X10, 16
	096 Move X0, X20
	097 Move W2, W31
	098 Call 0x1C5D788
	099 NotImplemented "Instruction LDRSW not yet implemented."
	100 Add X8, X8, X9
	101 Add X0, X8, 312
	102 Move X8, [X0]
	103 Move X1, [X0+8]
	104 Move X0, X20
	105 NotImplemented "Instruction BLR not yet implemented."
	106 Move TEMP, X0
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfNotEqual {141}
	110 Move X8, [X20]
	111 Move X1, [X21]
	112 NotImplemented "Instruction LDRH not yet implemented."
	113 Compare X9, 0
	114 JumpIfEqual {121}
	115 Move X10, [X8+176]
	116 Add X10, X10, 8
	117 NotImplemented "Instruction LDUR not yet implemented."
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Subtract X9, X9, 1
	120 Add X10, X10, 16
	121 Move W2, 1
	122 Move X0, X20
	123 Call 0x1C5D788
	124 Move W9, [X10]
	125 Add W9, W9, 1
	126 Add X8, X8, W9
	127 Add X0, X8, 312
	128 Move X8, [X0]
	129 Move X1, [X0+8]
	130 Move X0, X20
	131 NotImplemented "Instruction BLR not yet implemented."
	132 Compare X0, 0
	133 JumpIfEqual {148}
	134 Move X1, [X22]
	135 Move X8, [X0]
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move X1, X19
	138 Call SecurityElement.SearchForTextOfLocalName, X0, X1
	139 Compare X0, 0
	140 JumpIfEqual {85}
	141 Move X0, X31
	142 Move X20, [X31+32]
	143 Move X19, [X31+40]
	144 Move X22, [X31+16]
	145 Move X21, [X31+24]
	146 Move X30, [X31+48]
	147 Return X0
	148 Call 0x1C17F20
	149 Call 0x1C181E0
	150 Move X0, 0xEAE000
	151 Move X0, [X0+1320]
	152 Call 0x1C17D08
	153 Call 0x1C17F10
	154 Move X19, X0
	155 Move X0, 0xED8000
	156 Move X0, [X0+3152]
	157 Call 0x1C17D08
	158 Move X1, X0
	159 Move X0, X19
	160 Move X2, X31
	161 Call ArgumentNullException..ctor, X0, X1
	162 Move X0, 0xED8000
	163 Move X0, [X0+3160]
	164 Call 0x1C17D08
	165 Move X1, X0
	166 Move X0, X19
	167 Call 0x1C17DEC

Method: System.Void .cctor()

Disassembly:
	0x0324B7BC CBZ X8, 0x324BA60
	0x0324B7C0 MOV X29, X19
	0x0324B7C4 MOV X19, X25
	0x0324B7C8 MOV W25, W21
	0x0324B7CC MOVZ W21, 0x4
	0x0324B7D0 LDR W9, [X8 + 0x18]
	0x0324B7D4 SUB X26, X21, 0x4
	0x0324B7D8 CMP W26, W9
	0x0324B7DC B.GE 0x324B890
	0x0324B7E0 CMP W26, W9
	0x0324B7E4 B.CS 0x324BA64
	0x0324B7E8 LDR X0, [X8, X21, LSL #3]
	0x0324B7EC CBZ X0, 0x324BA60
	0x0324B7F0 LDR W8, [X22 + 0x30]
	0x0324B7F4 LDR X2, [X22 + 0x28]
	0x0324B7F8 LDR W4, [X0 + 0x10]
	0x0324B7FC MOVZ W5, 0x4
	0x0324B800 SUB W3, W8, 0x1
	0x0324B804 MOV W1, W31
	0x0324B808 MOV X6, X31
	0x0324B80C BL 0x3225DC8
	0x0324B810 CBZ W0, 0x324B824
	0x0324B814 LDR X8, [X22 + 0x50]
	0x0324B818 ADD X21, X21, 0x1
	0x0324B81C CBNZ X8, 0x324B7D0
	0x0324B820 B 0x324BA60
	0x0324B824 LDR X8, [X22 + 0x58]
	0x0324B828 CBZ X8, 0x324BA60
	0x0324B82C LDR W9, [X8 + 0x18]
	0x0324B830 CMP W26, W9
	0x0324B834 B.CS 0x324BA64
	0x0324B838 LDR X0, [X8, X21, LSL #3]
	0x0324B83C STR X0, [X22 + 0x68]
	0x0324B840 CBZ X0, 0x324BA60
	0x0324B844 LDR W8, [X0 + 0x10]
	0x0324B848 MOVZ W9, 0x1
	0x0324B84C MOV W1, W31
	0x0324B850 MOV X2, X31
	0x0324B854 STP W9, W8, [X22 + 0x60]
	0x0324B858 BL 0x3222A1C
	0x0324B85C LDR X8, [X22 + 0x50]
	0x0324B860 CBZ X8, 0x324BA60
	0x0324B864 LDR W9, [X8 + 0x18]
	0x0324B868 CMP W26, W9
	0x0324B86C B.CS 0x324BA64
	0x0324B870 LDR X8, [X8, X21, LSL #3]
	0x0324B874 CBZ X8, 0x324BA60
	0x0324B878 LDR W9, [X22 + 0x30]
	0x0324B87C LDR W8, [X8 + 0x10]
	0x0324B880 AND W23, W0, 0xFFFF
	0x0324B884 ADD W8, W9, W8
	0x0324B888 SUB W8, W8, 0x1
	0x0324B88C STR W8, [X22 + 0x30]
	0x0324B890 ADRP X26, 0xEA8000
	0x0324B894 LDR X26, [X26 + 0x8F0]
	0x0324B898 MOV W21, W25
	0x0324B89C MOV X25, X19
	0x0324B8A0 MOV X19, X29
	0x0324B8A4 ADRP X29, 0xFFFFFFFFFD94B000
	0x0324B8A8 ADD X29, X29, 0x49A
	0x0324B8AC B 0x324B39C
	0x0324B8B0 AND W23, W23, 0xF
	0x0324B8B4 MOVZ W13, 0x3
	0x0324B8B8 STR W13, [X31 + 0xC]
	0x0324B8BC CMP W12, W10
	0x0324B8C0 B.GE 0x324BA68
	0x0324B8C4 ADD X13, X8, 0x2
	0x0324B8C8 CMP W12, W11
	0x0324B8CC STR W13, [X22 + 0x30]
	0x0324B8D0 B.CS 0x324BA64
	0x0324B8D4 ADD X12, X9, X12
	0x0324B8D8 LDRB W12, [X12 + 0x20]
	0x0324B8DC AND W14, W12, 0xC0
	0x0324B8E0 CMP W14, 0x80
	0x0324B8E4 B.NE 0x324BA7C
	0x0324B8E8 LDR W14, [X31 + 0xC]
	0x0324B8EC AND W12, W12, 0x3F
	0x0324B8F0 BFM W12, W23, 0x1A, 0x7
	0x0324B8F4 CMP W14, 0x2
	0x0324B8F8 B.NE 0x324B90C
	0x0324B8FC MOVZ W8, 0x2
	0x0324B900 STR W8, [X31 + 0xC]
	0x0324B904 MOV W23, W12
	0x0324B908 B 0x324B39C
	0x0324B90C CMP W13, W10
	0x0324B910 B.GE 0x324BA68
	0x0324B914 ADD W8, W8, 0x3
	0x0324B918 CMP W13, W11
	0x0324B91C STR W8, [X22 + 0x30]
	0x0324B920 B.CS 0x324BA64
	0x0324B924 ADD X8, X9, X13
	0x0324B928 LDRB W8, [X8 + 0x20]
	0x0324B92C AND W9, W8, 0xC0
	0x0324B930 CMP W9, 0x80
	0x0324B934 B.NE 0x324BA7C
	0x0324B938 AND W23, W8, 0x3F

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0x1192000
	009 Move X21, 0xEB2000
	010 Move X22, 0xED8000
	011 Move X20, 0xED7000
	012 Move W8, [X19+1160]
	013 Move X21, [X21+2264]
	014 Move X22, [X22+3168]
	015 Move X20, [X20+2288]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {37}
	020 Move X0, 0xEB2000
	021 Move X0, [X0+2264]
	022 Call 0x1C17CF4
	023 Move X0, 0xED7000
	024 Move X0, [X0+2288]
	025 Call 0x1C17CF4
	026 Move X0, 0xED8000
	027 Move X0, [X0+3176]
	028 Call 0x1C17CF4
	029 Move X0, 0xED8000
	030 Move X0, [X0+3184]
	031 Call 0x1C17CF4
	032 Move X0, 0xED8000
	033 Move X0, [X0+3168]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X19+1160], W8
	037 Move X0, [X21]
	038 Move W1, 3
	039 Call 0x1C17D6C
	040 Move X1, [X22]
	041 Move X2, X31
	042 Move X19, X0
	043 Call RuntimeHelpers.InitializeArray, X0, X1
	044 Move X8, [X20]
	045 Move W1, 2
	046 Move X8, [X8+184]
	047 Move [X8], X19
	048 Move X0, [X21]
	049 Call 0x1C17D6C
	050 Compare X0, 0
	051 JumpIfEqual {106}
	052 Move W8, [X0+24]
	053 Compare W8, 0
	054 JumpIfEqual {105}
	055 Move W9, 60
	056 NotImplemented "Instruction CMP not yet implemented."
	057 NotImplemented "Instruction STRH not yet implemented."
	058 Move W8, 62
	059 NotImplemented "Instruction STRH not yet implemented."
	060 Move X8, [X20]
	061 Move X23, 0xED8000
	062 Move X24, 0xED8000
	063 Move W1, 3
	064 Move X8, [X8+184]
	065 Move [X8+8], X0
	066 Move X0, [X21]
	067 Move X23, [X23+3184]
	068 Move X24, [X24+3176]
	069 Call 0x1C17D6C
	070 Move X1, [X22]
	071 Move X2, X31
	072 Move X19, X0
	073 Call RuntimeHelpers.InitializeArray, X0, X1
	074 Move X8, [X20]
	075 Move W1, 3
	076 Move X8, [X8+184]
	077 Move [X8+16], X19
	078 Move X0, [X21]
	079 Call 0x1C17D6C
	080 Move X1, [X23]
	081 Move X2, X31
	082 Move X19, X0
	083 Call RuntimeHelpers.InitializeArray, X0, X1
	084 Move X8, [X20]
	085 Move W1, 5
	086 Move X8, [X8+184]
	087 Move [X8+24], X19
	088 Move X0, [X21]
	089 Call 0x1C17D6C
	090 Move X1, [X24]
	091 Move X2, X31
	092 Move X19, X0
	093 Call RuntimeHelpers.InitializeArray, X0, X1
	094 Move X8, [X20]
	095 Move X22, [X31+32]
	096 Move X21, [X31+40]
	097 Move X24, [X31+16]
	098 Move X23, [X31+24]
	099 Move X8, [X8+184]
	100 Move [X8+32], X19
	101 Move X20, [X31+48]
	102 Move X19, [X31+56]
	103 Move X30, [X31+64]
	104 Return 
	105 Call 0x1C17F28
	106 Call 0x1C17F20

