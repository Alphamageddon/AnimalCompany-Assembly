Type: System.Security.Util.Parser

Method: System.Security.SecurityElement GetTopElement()

Disassembly:
	0x0324BBF0 MOV X3, X31
	0x0324BBF4 BL 0x322EAF4
	0x0324BBF8 LDR X8, [X22 + 0x10]
	0x0324BBFC CBZ X8, 0x324BD2C
	0x0324BC00 LDR X9, [X8]
	0x0324BC04 MOV X22, X0
	0x0324BC08 MOV X0, X8
	0x0324BC0C LDR X10, [X9 + 0x208]
	0x0324BC10 LDR X1, [X9 + 0x210]
	0x0324BC14 BLR X10

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {11}
	005 Add X1, X31, 12
	006 Move W2, 1
	007 Move [X31+12], W31
	008 Call SecurityDocument.InternalGetElement, X0, X1, X2
	009 Move X30, [X31+16]
	010 Return X0
	011 Call 0x1C17F20

Method: System.Void GetRequiredSizes(System.Security.Util.TokenizerStream stream, ref System.Int32 index)

Disassembly:
	0x0324BC18 CBZ X0, 0x324BD2C
	0x0324BC1C LDR X8, [X0]
	0x0324BC20 MOV X1, X22
	0x0324BC24 LDP X9, X2, [X8 + 0x1F8]
	0x0324BC28 BLR X9
	0x0324BC2C CBZ X21, 0x324BD2C
	0x0324BC30 LDR X8, [X21]
	0x0324BC34 SXTW X1, W0
	0x0324BC38 MOV X0, X21
	0x0324BC3C LDR X9, [X8 + 0x208]
	0x0324BC40 LDR X2, [X8 + 0x210]
	0x0324BC44 BLR X9
	0x0324BC48 B 0x324BCAC
	0x0324BC4C BL 0x3242C30
	0x0324BC50 CMP X0, X20
	0x0324BC54 B.EQ 0x324BD00
	0x0324BC58 BL 0x3241948
	0x0324BC5C CMP X0, X20
	0x0324BC60 B.EQ 0x324BD08
	0x0324BC64 BL 0x3242EC8
	0x0324BC68 CMP X0, X20
	0x0324BC6C B.EQ 0x324BD10
	0x0324BC70 LDR W8, [X19 + 0x3C]
	0x0324BC74 CMP W8, 0x3
	0x0324BC78 B.CS 0x324BB78
	0x0324BC7C ADRP X8, 0xEB0000
	0x0324BC80 LDR X22, [X19 + 0x18]
	0x0324BC84 LDP W23, W24, [X19 + 0x30]
	0x0324BC88 LDR X8, [X8 + 0x558]
	0x0324BC8C LDR X0, [X8]
	0x0324BC90 BL 0x1C16F10
	0x0324BC94 SUB W3, W24, W23
	0x0324BC98 MOV X1, X22
	0x0324BC9C MOV W2, W23
	0x0324BCA0 MOV X4, X31
	0x0324BCA4 MOV X21, X0
	0x0324BCA8 BL 0x32E261C
	0x0324BCAC ADRP X8, 0xED7000
	0x0324BCB0 LDR X8, [X8 + 0xCC8]
	0x0324BCB4 LDR X0, [X8]
	0x0324BCB8 BL 0x1C16F10
	0x0324BCBC MOV X1, X21
	0x0324BCC0 MOV X2, X20
	0x0324BCC4 MOV X3, X31
	0x0324BCC8 MOV X22, X0
	0x0324BCCC BL 0x32E64DC
	0x0324BCD0 ADRP X8, 0xED7000
	0x0324BCD4 LDR X8, [X8 + 0xCD0]
	0x0324BCD8 LDR X0, [X8]
	0x0324BCDC BL 0x1C16F10
	0x0324BCE0 MOV X1, X31
	0x0324BCE4 MOV X20, X0
	0x0324BCE8 BL 0x33BDD8C
	0x0324BCEC MOVZ W8, 0x6
	0x0324BCF0 STR X22, [X20 + 0x10]
	0x0324BCF4 STR W31, [X20 + 0x18]
	0x0324BCF8 STR X20, [X19 + 0x40]
	0x0324BCFC B 0x324BD14
	0x0324BD00 STR W31, [X19 + 0x3C]
	0x0324BD04 B 0x324BD18
	0x0324BD08 MOVZ W8, 0x1
	0x0324BD0C B 0x324BD14
	0x0324BD10 MOVZ W8, 0x2
	0x0324BD14 STR W8, [X19 + 0x3C]
	0x0324BD18 LDP X20, X19, [X31 + 0x30]
	0x0324BD1C LDP X22, X21, [X31 + 0x20]
	0x0324BD20 LDP X24, X23, [X31 + 0x10]
	0x0324BD24 LDR X30, [X31], #0x40
	0x0324BD28 RET
	0x0324BD2C BL 0x1C16F20
	0x0324BD30 SUB X31, X31, 0x60
	0x0324BD34 STP X30, X27, [X31 + 0x10]
	0x0324BD38 STP X26, X25, [X31 + 0x20]
	0x0324BD3C STP X24, X23, [X31 + 0x30]
	0x0324BD40 STP X22, X21, [X31 + 0x40]
	0x0324BD44 STP X20, X19, [X31 + 0x50]
	0x0324BD48 ADRP X20, 0x1191000
	0x0324BD4C ADRP X21, 0xED7000
	0x0324BD50 LDRB W8, [X20 + 0x48F]
	0x0324BD54 LDR X21, [X21 + 0xCD8]
	0x0324BD58 MOV X19, X0
	0x0324BD5C TBNZ X8, 0x0, 0x324BD8C
	0x0324BD60 ADRP X0, 0xED7000
	0x0324BD64 LDR X0, [X0 + 0xCE0]
	0x0324BD68 BL 0x1C16CF4
	0x0324BD6C ADRP X0, 0xED7000
	0x0324BD70 LDR X0, [X0 + 0xCD8]
	0x0324BD74 BL 0x1C16CF4
	0x0324BD78 ADRP X0, 0xEA8000
	0x0324BD7C LDR X0, [X0 + 0xDD8]
	0x0324BD80 BL 0x1C16CF4
	0x0324BD84 MOVZ W8, 0x1
	0x0324BD88 STRB W8, [X20 + 0x48F]
	0x0324BD8C LDR X0, [X21]
	0x0324BD90 BL 0x1C16F10
	0x0324BD94 MOV X20, X0
	0x0324BD98 BL 0x324C028
	0x0324BD9C LDR X0, [X19 + 0x18]
	0x0324BDA0 CBZ X0, 0x324BFF4
	0x0324BDA4 MOVZ W2, 0x2
	0x0324BDA8 MOV X1, X20
	0x0324BDAC MOV W3, W31
	0x0324BDB0 BL 0x324B2DC
	0x0324BDB4 CBZ X20, 0x324BFF4
	0x0324BDB8 LDR X8, [X20 + 0x18]
	0x0324BDBC LDR X9, [X20 + 0x38]
	0x0324BDC0 MOV X0, X19
	0x0324BDC4 MOV X1, X20
	0x0324BDC8 STR W31, [X20 + 0x30]
	0x0324BDCC STP X31, X8, [X20 + 0x20]
	0x0324BDD0 STR X9, [X20 + 0x40]
	0x0324BDD4 STR W31, [X20 + 0x48]
	0x0324BDD8 BL 0x324B150
	0x0324BDDC MOV W1, W0
	0x0324BDE0 MOV X0, X20
	0x0324BDE4 BL 0x324BAB0
	0x0324BDE8 LDR X0, [X19 + 0x18]
	0x0324BDEC CBZ X0, 0x324BFF4
	0x0324BDF0 ADRP X22, 0xED7000
	0x0324BDF4 LDR X22, [X22 + 0xCE0]
	0x0324BDF8 MOVN W2, 0x0
	0x0324BDFC MOV X1, X20
	0x0324BE00 MOV W3, W31
	0x0324BE04 BL 0x324B2DC
	0x0324BE08 LDR X8, [X20 + 0x18]
	0x0324BE0C LDR X9, [X20 + 0x38]
	0x0324BE10 ADD X2, X31, 0xC
	0x0324BE14 MOV X0, X19
	0x0324BE18 MOV X1, X20
	0x0324BE1C STR W31, [X20 + 0x30]
	0x0324BE20 STR W31, [X20 + 0x48]
	0x0324BE24 STP X31, X8, [X20 + 0x20]
	0x0324BE28 STR X9, [X20 + 0x40]
	0x0324BE2C STR W31, [X31 + 0xC]
	0x0324BE30 BL 0x324AC18
	0x0324BE34 LDR X0, [X22]
	0x0324BE38 LDR W21, [X31 + 0xC]
	0x0324BE3C BL 0x1C16F10
	0x0324BE40 MOV W1, W21
	0x0324BE44 MOV X22, X0
	0x0324BE48 BL 0x3247FBC
	0x0324BE4C STR X22, [X19 + 0x10]
	0x0324BE50 STR W31, [X31 + 0x8]
	0x0324BE54 LDR X8, [X20 + 0x18]
	0x0324BE58 LDR X9, [X20 + 0x38]
	0x0324BE5C MOV X0, X20
	0x0324BE60 STR W31, [X20 + 0x30]
	0x0324BE64 STP X31, X8, [X20 + 0x20]
	0x0324BE68 STR X9, [X20 + 0x40]
	0x0324BE6C STR W31, [X20 + 0x48]
	0x0324BE70 BL 0x324C0E8
	0x0324BE74 ORN W8, W31, W0, 0x0
	0x0324BE78 ANDS W31, W8, 0xFFFF
	0x0324BE7C B.EQ 0x324BFD8
	0x0324BE80 ADRP X22, 0xEA8000
	0x0324BE84 LDR X22, [X22 + 0xDD8]
	0x0324BE88 MOVZ W23, 0x4300
	0x0324BE8C MOVZ W24, 0x4400
	0x0324BE90 MOVZ W25, 0x6300
	0x0324BE94 MOVZ W26, 0x4100
	0x0324BE98 MOVZ W27, 0x4200
	0x0324BE9C TBZ X0, 0xE, 0x324BFC4
	0x0324BEA0 AND W8, W0, 0xFF00
	0x0324BEA4 SXTH W8, W8
	0x0324BEA8 CMP W8, W23
	0x0324BEAC B.LE 0x324BF04
	0x0324BEB0 CMP W8, W24
	0x0324BEB4 B.EQ 0x324BF34
	0x0324BEB8 AND W8, W8, 0xFFFF
	0x0324BEBC CMP W8, 0x5000
	0x0324BEC0 B.EQ 0x324BF4C
	0x0324BEC4 CMP W8, W25
	0x0324BEC8 B.NE 0x324BFF8
	0x0324BECC LDR X0, [X19 + 0x10]
	0x0324BED0 CBZ X0, 0x324BFF4
	0x0324BED4 LDR X1, [X22]
	0x0324BED8 ADD X2, X31, 0x8
	0x0324BEDC BL 0x3248214
	0x0324BEE0 LDR X21, [X19 + 0x10]
	0x0324BEE4 MOV X0, X20
	0x0324BEE8 BL 0x324B0E4
	0x0324BEEC CBZ X21, 0x324BFF4
	0x0324BEF0 MOV X1, X0
	0x0324BEF4 ADD X2, X31, 0x8
	0x0324BEF8 MOV X0, X21
	0x0324BEFC BL 0x3248214
	0x0324BF00 B 0x324BFC4
	0x0324BF04 CMP W8, W26
	0x0324BF08 B.EQ 0x324BF58
	0x0324BF0C AND W8, W8, 0xFFFF
	0x0324BF10 CMP W8, W27
	0x0324BF14 B.EQ 0x324BF70
	0x0324BF18 CMP W8, W23
	0x0324BF1C B.NE 0x324BFF8
	0x0324BF20 LDR X0, [X19 + 0x10]
	0x0324BF24 CBZ X0, 0x324BFF4
	0x0324BF28 ADD X2, X31, 0x8
	0x0324BF2C MOVZ W1, 0x3
	0x0324BF30 B 0x324BF68
	0x0324BF34 LDR X0, [X19 + 0x10]
	0x0324BF38 CBZ X0, 0x324BFF4
	0x0324BF3C ADD X2, X31, 0x8
	0x0324BF40 MOVZ W1, 0x4
	0x0324BF44 BL 0x32487DC
	0x0324BF48 B 0x324BFC4
	0x0324BF4C MOV X0, X20
	0x0324BF50 BL 0x324B0E4
	0x0324BF54 B 0x324BFC4
	0x0324BF58 LDR X0, [X19 + 0x10]
	0x0324BF5C CBZ X0, 0x324BFF4
	0x0324BF60 ADD X2, X31, 0x8
	0x0324BF64 MOVZ W1, 0x1
	0x0324BF68 BL 0x32487DC
	0x0324BF6C B 0x324BFA4
	0x0324BF70 LDR X0, [X19 + 0x10]
	0x0324BF74 CBZ X0, 0x324BFF4
	0x0324BF78 ADD X2, X31, 0x8
	0x0324BF7C MOVZ W1, 0x2
	0x0324BF80 BL 0x32487DC
	0x0324BF84 LDR X21, [X19 + 0x10]
	0x0324BF88 MOV X0, X20
	0x0324BF8C BL 0x324B0E4
	0x0324BF90 CBZ X21, 0x324BFF4
	0x0324BF94 MOV X1, X0
	0x0324BF98 ADD X2, X31, 0x8
	0x0324BF9C MOV X0, X21
	0x0324BFA0 BL 0x32480C8
	0x0324BFA4 LDR X21, [X19 + 0x10]
	0x0324BFA8 MOV X0, X20
	0x0324BFAC BL 0x324B0E4
	0x0324BFB0 CBZ X21, 0x324BFF4
	0x0324BFB4 MOV X1, X0
	0x0324BFB8 ADD X2, X31, 0x8
	0x0324BFBC MOV X0, X21
	0x0324BFC0 BL 0x32480C8
	0x0324BFC4 MOV X0, X20
	0x0324BFC8 BL 0x324C0E8
	0x0324BFCC ORN W8, W31, W0, 0x0
	0x0324BFD0 ANDS W31, W8, 0xFFFF
	0x0324BFD4 B.NE 0x324BE9C
	0x0324BFD8 LDP X20, X19, [X31 + 0x50]
	0x0324BFDC LDP X22, X21, [X31 + 0x40]
	0x0324BFE0 LDP X24, X23, [X31 + 0x30]
	0x0324BFE4 LDP X26, X25, [X31 + 0x20]
	0x0324BFE8 LDP X30, X27, [X31 + 0x10]
	0x0324BFEC ADD X31, X31, 0x60
	0x0324BFF0 RET
	0x0324BFF4 BL 0x1C16F20
	0x0324BFF8 ADRP X0, 0xED7000
	0x0324BFFC LDR X0, [X0 + 0xB60]
	0x0324C000 BL 0x1C16D08
	0x0324C004 BL 0x1C16F10
	0x0324C008 MOV X19, X0
	0x0324C00C BL 0x3247F9C
	0x0324C010 ADRP X0, 0xED6000
	0x0324C014 LDR X0, [X0 + 0xCE8]
	0x0324C018 BL 0x1C16D08
	0x0324C01C MOV X1, X0
	0x0324C020 MOV X0, X19
	0x0324C024 BL 0x1C16DEC
	0x0324C028 STR X30, [X31 - 0x30]!
	0x0324C02C STP X22, X21, [X31 + 0x10]
	0x0324C030 STP X20, X19, [X31 + 0x20]
	0x0324C034 ADRP X22, 0x1190000
	0x0324C038 ADRP X20, 0xED6000
	0x0324C03C ADRP X21, 0xED6000
	0x0324C040 LDRB W8, [X22 + 0x499]
	0x0324C044 LDR X20, [X20 + 0xCF0]
	0x0324C048 LDR X21, [X21 + 0xCF8]
	0x0324C04C MOV X19, X0
	0x0324C050 TBNZ X8, 0x0, 0x324C074
	0x0324C054 ADRP X0, 0xED6000

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X19, 0x1192000
	015 Move W8, [X19+1165]
	016 Move X20, X2
	017 Move X21, X1
	018 Move X26, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0xEA9000
	024 Move X0, [X0+3544]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X19+1165], W8
	028 Compare X21, 0
	029 JumpIfEqual {274}
	030 Move X25, -40583168
	031 Move W28, W31
	032 Move W27, W31
	033 Move X22, X31
	034 Move W29, W31
	035 Move W23, W31
	036 Move W24, 1
	037 Add X25, X25, 1161
	038 Move W19, W31
	039 Move W8, W23
	040 Move X0, X21
	041 Move W23, W8
	042 Call TokenizerStream.GetNextFullToken, X0
	043 And W8, W0, 255
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move W8, W31
	046 Move TEMP, X23
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {40}
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move W8, W8
	052 NotImplemented "Instruction ADR not yet implemented."
	053 Move W10, [X25]
	054 Add X9, X9, X10
	055 CallNoReturn X9
	056 Move TEMP, X23
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {66}
	060 Compare X22, 0
	061 JumpIfNotEqual {87}
	062 Move X0, X21
	063 Call TokenizerStream.GetNextString, X0
	064 Move X22, X0
	065 Move W8, 1
	066 Move TEMP, X19
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {110}
	070 Move W1, 0x6300
	071 Move X0, X21
	072 Call TokenizerStream.TagLastToken, X0, X1
	073 Move W19, [X20]
	074 Move X0, X21
	075 Call TokenizerStream.GetNextString, X0
	076 Compare X0, 0
	077 JumpIfEqual {274}
	078 Move X8, 0xEA9000
	079 Move X8, [X8+3544]
	080 Move X8, [X8]
	081 Compare X8, 0
	082 JumpIfEqual {274}
	083 Move W9, [X0+16]
	084 Move W8, [X8+16]
	085 Add W10, W19, 4
	086 Add W8, W8, W9
	087 Move [X31+8], X26
	088 Move TEMP, X27
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfNotEqual {279}
	092 Move W1, 0x4200
	093 Move X0, X21
	094 Call TokenizerStream.TagLastToken, X0, X1
	095 Move W23, [X20]
	096 Move W26, [X22+16]
	097 Move X0, X21
	098 Call TokenizerStream.GetNextString, X0
	099 Compare X0, 0
	100 JumpIfEqual {274}
	101 Move W8, [X0+16]
	102 Move X22, X31
	103 Move W27, W31
	104 Add W8, W8, W26
	105 Move X26, [X31+8]
	106 Add W8, W23, W8
	107 Add W8, W8, 5
	108 Move [X20], W8
	109 Move W8, 1
	110 Move W1, 0x4300
	111 Move X0, X21
	112 Call TokenizerStream.TagLastToken, X0, X1
	113 Move W19, [X20]
	114 Move X0, X21
	115 Call TokenizerStream.GetNextString, X0
	116 Compare X0, 0
	117 JumpIfEqual {274}
	118 Move W8, [X0+16]
	119 Add W10, W19, 3
	120 Move W9, W8
	121 ShiftRight W9, 31
	122 And W9, W9, 0x3FFFFFFF
	123 Add W9, W10, W9
	124 Move W8, W31
	125 Move [X20], W9
	126 Move W19, 1
	127 Move W27, 1
	128 NotImplemented "Instruction CMP not yet implemented."
	129 NotImplemented "Instruction CSET not yet implemented."
	130 NotImplemented "Instruction CMP not yet implemented."
	131 And W8, W8, W23
	132 Compare W8, 0
	133 JumpIfEqual {248}
	134 Move X0, X21
	135 Call TokenizerStream.GetNextFullToken, X0
	136 And W8, W0, 255
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move W1, 0x4400
	139 Move X0, X21
	140 Call TokenizerStream.TagLastToken, X0, X1
	141 Move W8, [X20]
	142 Subtract W24, W24, 1
	143 Move W23, 1
	144 Move W29, 1
	145 Add W8, W8, 1
	146 Move [X20], W8
	147 Move W28, 1
	148 Move X0, X21
	149 Call TokenizerStream.GetNextFullToken, X0
	150 And W8, W0, 255
	151 Subtract W8, W8, 2
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move X11, -40583168
	154 Add X11, X11, 1167
	155 NotImplemented "Instruction ADR not yet implemented."
	156 Move W10, [X11]
	157 Add X9, X9, X10
	158 CallNoReturn X9
	159 Move W1, 0x4400
	160 Move X0, X21
	161 Call TokenizerStream.TagLastToken, X0, X1
	162 Move X0, X21
	163 Call TokenizerStream.GetNextFullToken, X0
	164 And W8, W0, 255
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Move X0, X21
	167 Call TokenizerStream.GetNextString, X0
	168 Move W1, 0x5000
	169 Move X0, X21
	170 Call TokenizerStream.GetNextFullToken, X0
	171 And W8, W0, 255
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move W1, 0x4400
	174 Move X0, X21
	175 Call TokenizerStream.TagLastToken, X0, X1
	176 Move W8, [X20]
	177 Subtract W24, W24, 1
	178 Add W8, W8, 1
	179 Move [X20], W8
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Move W1, 0x4100
	182 Move X0, X21
	183 Call TokenizerStream.TagLastToken, X0, X1
	184 Move W19, [X20]
	185 Move X0, X21
	186 Call TokenizerStream.GetNextString, X0
	187 Compare X0, 0
	188 JumpIfEqual {274}
	189 Move W8, [X0+16]
	190 Add W8, W19, W8
	191 Add W8, W8, 3
	192 Move [X20], W8
	193 Compare W29, 0
	194 JumpIfNotEqual {248}
	195 Add W24, W24, 1
	196 Move W23, 1
	197 Move X0, X21
	198 Call TokenizerStream.GetNextFullToken, X0
	199 And W8, W0, 255
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Move W1, 0x4100
	202 Move X0, X21
	203 Call TokenizerStream.TagLastToken, X0, X1
	204 Move W19, [X20]
	205 Move X0, X21
	206 Call TokenizerStream.GetNextString, X0
	207 Compare X0, 0
	208 JumpIfEqual {274}
	209 Move W8, [X0+16]
	210 Add W24, W24, 1
	211 Move W23, 1
	212 Move W29, 1
	213 Add W8, W19, W8
	214 Add W8, W8, 3
	215 Move W28, 1
	216 Move X0, X21
	217 Call TokenizerStream.GetNextFullToken, X0
	218 And W8, W0, 255
	219 NotImplemented "Instruction CMP not yet implemented."
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Compare W8, 0
	222 JumpIfNotEqual {230}
	223 Add W28, W28, 1
	224 Move X0, X21
	225 Call TokenizerStream.GetNextString, X0
	226 Move W1, 0x5000
	227 Move X0, X21
	228 Call TokenizerStream.TagLastToken, X0, X1
	229 Subtract W28, W28, 1
	230 NotImplemented "Instruction CMP not yet implemented."
	231 Move W23, W31
	232 NotImplemented "Instruction CMP not yet implemented."
	233 Move W23, W31
	234 Move X20, [X31+96]
	235 Move X19, [X31+104]
	236 Move X22, [X31+80]
	237 Move X21, [X31+88]
	238 Move X24, [X31+64]
	239 Move X23, [X31+72]
	240 Move X26, [X31+48]
	241 Move X25, [X31+56]
	242 Move X28, [X31+32]
	243 Move X27, [X31+40]
	244 Move X29, [X31+16]
	245 Move X30, [X31+24]
	246 Add X31, X31, 112
	247 Return 
	248 Move X0, [X26+24]
	249 Call 0x19913C0
	250 Move X0, [X26+24]
	251 Call 0x19913C0
	252 Move X0, 0xED8000
	253 Move X0, [X0+3208]
	254 Move X0, [X26+24]
	255 Call 0x19913C0
	256 Move X0, 0xED8000
	257 Move X0, [X0+3216]
	258 Call 0x1C17D08
	259 Move X1, X31
	260 Call Environment.GetResourceString, X0
	261 Move X0, 0xED7000
	262 Move X0, [X0+2912]
	263 Call 0x1C17D08
	264 Call 0x1C17F10
	265 Move X1, X31
	266 Move X19, X0
	267 Call SystemException..ctor, X0
	268 Move X0, 0xED7000
	269 Move X0, [X0+3224]
	270 Call 0x1C17D08
	271 Move X1, X0
	272 Move X0, X19
	273 Call 0x1C17DEC
	274 Call 0x1C17F20
	275 Move X0, [X26+24]
	276 Call 0x19913C0
	277 Move X0, 0xED7000
	278 Move X0, [X0+3232]
	279 Move X8, [X31+8]
	280 Move X0, [X8+24]

Method: System.Int32 DetermineFormat(System.Security.Util.TokenizerStream stream)

Disassembly:
	0x0324C150 BL 0x1C16F20
	0x0324C154 BL 0x1C16F28
	0x0324C158 STP X30, X21, [X31 - 0x20]!
	0x0324C15C STP X20, X19, [X31 + 0x10]
	0x0324C160 MOV X20, X1
	0x0324C164 MOV X1, X31
	0x0324C168 MOV X19, X0
	0x0324C16C BL 0x33BDD8C
	0x0324C170 STP X31, X20, [X19 + 0x10]
	0x0324C174 MOV X0, X19
	0x0324C178 BL 0x324BD30
	0x0324C17C MOV X20, X31
	0x0324C180 LDR X0, [X19 + 0x18]
	0x0324C184 CBZ X0, 0x324C19C
	0x0324C188 BL 0x324C324
	0x0324C18C CBNZ X20, 0x324C1A0
	0x0324C190 LDP X20, X19, [X31 + 0x10]
	0x0324C194 LDP X30, X21, [X31], #0x20
	0x0324C198 RET
	0x0324C19C BL 0x1C16F20
	0x0324C1A0 MOV X0, X20
	0x0324C1A4 BL 0x1C16F18
	0x0324C1A8 CMP W1, 0x1
	0x0324C1AC MOV X21, X0
	0x0324C1B0 B.NE 0x324C1C8
	0x0324C1B4 MOV X0, X21
	0x0324C1B8 BL 0x3EB1AD0
	0x0324C1BC LDR X20, [X0]
	0x0324C1C0 BL 0x3EB1AE0
	0x0324C1C4 B 0x324C180
	0x0324C1C8 MOV X20, X31
	0x0324C1CC B 0x324C1D4
	0x0324C1D0 MOV X21, X0
	0x0324C1D4 LDR X0, [X19 + 0x18]
	0x0324C1D8 CBNZ X0, 0x324C1E0
	0x0324C1DC BL 0x1C16F20
	0x0324C1E0 BL 0x324C324
	0x0324C1E4 CBNZ X20, 0x324C1F0
	0x0324C1E8 MOV X0, X21
	0x0324C1EC BL 0x1D2C690
	0x0324C1F0 MOV X0, X20
	0x0324C1F4 BL 0x1C16F18
	0x0324C1F8 BL 0x1990590
	0x0324C1FC STR X30, [X31 - 0x30]!
	0x0324C200 STP X22, X21, [X31 + 0x10]
	0x0324C204 STP X20, X19, [X31 + 0x20]
	0x0324C208 ADRP X21, 0x1190000
	0x0324C20C ADRP X22, 0xED6000
	0x0324C210 LDRB W8, [X21 + 0x490]
	0x0324C214 LDR X22, [X22 + 0xD00]
	0x0324C218 MOV X20, X1
	0x0324C21C MOV X19, X0
	0x0324C220 TBNZ X8, 0x0, 0x324C238
	0x0324C224 ADRP X0, 0xED6000
	0x0324C228 LDR X0, [X0 + 0xD00]
	0x0324C22C BL 0x1C16CF4
	0x0324C230 MOVZ W8, 0x1
	0x0324C234 STRB W8, [X21 + 0x490]
	0x0324C238 LDR X0, [X22]
	0x0324C23C BL 0x1C16F10
	0x0324C240 MOV X1, X20
	0x0324C244 MOV X21, X0
	0x0324C248 BL 0x324C264
	0x0324C24C MOV X0, X19
	0x0324C250 MOV X1, X21
	0x0324C254 LDP X20, X19, [X31 + 0x20]
	0x0324C258 LDP X22, X21, [X31 + 0x10]
	0x0324C25C LDR X30, [X31], #0x30
	0x0324C260 B 0x324C158
	0x0324C264 STR X30, [X31 - 0x20]!
	0x0324C268 STP X20, X19, [X31 + 0x10]
	0x0324C26C MOV X20, X1
	0x0324C270 MOV X1, X31
	0x0324C274 MOV X19, X0
	0x0324C278 BL 0x33BDD8C
	0x0324C27C MOV X0, X19
	0x0324C280 BL 0x324C2AC
	0x0324C284 STR X20, [X19 + 0x28]
	0x0324C288 CBZ X20, 0x324C2A8
	0x0324C28C LDR W8, [X20 + 0x10]
	0x0324C290 MOVZ W9, 0x4
	0x0324C294 STR W9, [X19 + 0x3C]
	0x0324C298 STR W8, [X19 + 0x34]
	0x0324C29C LDP X20, X19, [X31 + 0x10]
	0x0324C2A0 LDR X30, [X31], #0x20
	0x0324C2A4 RET
	0x0324C2A8 BL 0x1C16F20
	0x0324C2AC STP X30, X21, [X31 - 0x20]!
	0x0324C2B0 STP X20, X19, [X31 + 0x10]
	0x0324C2B4 ADRP X21, 0x1190000
	0x0324C2B8 ADRP X20, 0xED6000
	0x0324C2BC LDRB W8, [X21 + 0x491]
	0x0324C2C0 LDR X20, [X20 + 0xB70]
	0x0324C2C4 MOV X19, X0
	0x0324C2C8 TBNZ X8, 0x0, 0x324C2E0
	0x0324C2CC ADRP X0, 0xED6000
	0x0324C2D0 LDR X0, [X0 + 0xB70]
	0x0324C2D4 BL 0x1C16CF4
	0x0324C2D8 MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x1191000
	008 Move W8, [X21+1166]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xED7000
	016 Move X0, [X0+2848]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+1166], W8
	020 Compare X19, 0
	021 JumpIfEqual {111}
	022 Move X0, X19
	023 Call TokenizerStream.GetNextFullToken, X0
	024 And W31, W0, 255
	025 Move X0, X19
	026 Call TokenizerStream.GetNextFullToken, X0
	027 And W8, W0, 255
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X0, [X20+24]
	030 Compare X0, 0
	031 JumpIfEqual {111}
	032 Move TEMP, 0
	033 Not TEMP
	034 Move W2, TEMP
	035 Move W3, 1
	036 Move X1, X19
	037 Call Tokenizer.GetTokens, X0, X1, X2, X3
	038 Move W1, 2
	039 Move X0, X19
	040 Call TokenizerStream.GoToPosition, X0, X1
	041 Move X21, 0xED7000
	042 Move X21, [X21+2848]
	043 Move W8, W31
	044 Move W9, W31
	045 Move W22, W8
	046 Move X0, X19
	047 Move W23, W9
	048 Call TokenizerStream.GetNextFullToken, X0
	049 And W8, W0, 255
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move W9, 1
	052 NotImplemented "Instruction CMP not yet implemented."
	053 And W8, W22, W23
	054 Move TEMP, X8
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {82}
	058 Move X0, X19
	059 Call TokenizerStream.GetNextString, X0
	060 Move W8, W31
	061 Move TEMP, X23
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfEqual {44}
	065 Move X1, [X21]
	066 Move W2, 4
	067 Move X3, X31
	068 Call String.Compare, X0, X1, X2
	069 NotImplemented "Instruction CMP not yet implemented."
	070 NotImplemented "Instruction CSET not yet implemented."
	071 Or W8, W22, W8
	072 Move W0, 2
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X22, [X31+16]
	076 Move X21, [X31+24]
	077 Move X30, [X31+48]
	078 Move X23, [X31+56]
	079 Return X0
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move W0, W31
	082 Move X20, [X20+24]
	083 Move X0, X19
	084 Call TokenizerStream.GetNextString, X0
	085 Call Encoding.GetEncoding, X0
	086 Compare X20, 0
	087 JumpIfEqual {111}
	088 Move X1, X0
	089 Move X0, X20
	090 Call Tokenizer.ChangeFormat, X0, X1
	091 Move X0, [X20+24]
	092 Call 0x19913C0
	093 Move X0, 0xED7000
	094 Move X0, [X0+3240]
	095 Call 0x1C17D08
	096 Move X1, X31
	097 Call Environment.GetResourceString, X0
	098 Move X0, 0xED7000
	099 Move X0, [X0+2912]
	100 Call 0x1C17D08
	101 Call 0x1C17F10
	102 Move X1, X31
	103 Move X19, X0
	104 Call SystemException..ctor, X0
	105 Move X0, 0xED7000
	106 Move X0, [X0+3248]
	107 Call 0x1C17D08
	108 Move X1, X0
	109 Move X0, X19
	110 Call 0x1C17DEC
	111 Call 0x1C17F20

Method: System.Void ParseContents()

Disassembly:
	0x0324CD30 B 0x324CD44
	0x0324CD34 LDR W9, [X10]
	0x0324CD38 ADD W9, W9, 0x1
	0x0324CD3C ADD X8, X8, W9, 0x4, SXTW
	0x0324CD40 ADD X0, X8, 0x138
	0x0324CD44 LDP X2, X1, [X0]
	0x0324CD48 MOV X0, X19
	0x0324CD4C LDP X20, X19, [X31 + 0x10]
	0x0324CD50 LDR X30, [X31], #0x20
	0x0324CD54 BR X2
	0x0324CD58 BL 0x1C16F20
	0x0324CD5C MOV W4, W31
	0x0324CD60 B 0x324CD64
	0x0324CD64 STP X30, X25, [X31 - 0x40]!
	0x0324CD68 STP X24, X23, [X31 + 0x10]
	0x0324CD6C STP X22, X21, [X31 + 0x20]
	0x0324CD70 STP X20, X19, [X31 + 0x30]
	0x0324CD74 ADRP X25, 0x1190000
	0x0324CD78 ADRP X23, 0xED6000
	0x0324CD7C LDRB W8, [X25 + 0x4A0]
	0x0324CD80 LDR X23, [X23 + 0xD10]
	0x0324CD84 MOV W21, W3
	0x0324CD88 MOV X22, X2
	0x0324CD8C MOV X20, X1
	0x0324CD90 MOV X19, X0
	0x0324CD94 AND W24, W4, 0x1
	0x0324CD98 TBNZ X8, 0x0, 0x324CDB0
	0x0324CD9C ADRP X0, 0xED6000
	0x0324CDA0 LDR X0, [X0 + 0xD10]
	0x0324CDA4 BL 0x1C16CF4
	0x0324CDA8 MOVZ W8, 0x1
	0x0324CDAC STRB W8, [X25 + 0x4A0]
	0x0324CDB0 LDR X0, [X23]
	0x0324CDB4 LDR W8, [X0 + 0xE0]
	0x0324CDB8 CBNZ W8, 0x324CDC0
	0x0324CDBC BL 0x1C16DFC
	0x0324CDC0 MOV X0, X19
	0x0324CDC4 MOV X1, X31
	0x0324CDC8 BL 0x32F27B0
	0x0324CDCC CMP W21, 0x1
	0x0324CDD0 STR W21, [X19 + 0x38]
	0x0324CDD4 STP X20, X22, [X19 + 0x28]
	0x0324CDD8 STRB W24, [X19 + 0x70]
	0x0324CDDC B.EQ 0x324CE18
	0x0324CDE0 CBNZ W21, 0x324CE64
	0x0324CDE4 CBZ X20, 0x324CE60
	0x0324CDE8 LDR X0, [X23]
	0x0324CDEC LDR W8, [X0 + 0xE0]
	0x0324CDF0 CBNZ W8, 0x324CDF8
	0x0324CDF4 BL 0x1C16DFC
	0x0324CDF8 LDR X8, [X20]
	0x0324CDFC MOV X0, X20
	0x0324CE00 LDP X9, X1, [X8 + 0x1A8]
	0x0324CE04 BLR X9
	0x0324CE08 TBZ X0, 0x0, 0x324CEAC
	0x0324CE0C MOVZ W8, 0x1
	0x0324CE10 STRB W8, [X19 + 0x60]
	0x0324CE14 B 0x324CE48
	0x0324CE18 CBZ X20, 0x324CE60
	0x0324CE1C LDR X0, [X23]
	0x0324CE20 LDR W8, [X0 + 0xE0]
	0x0324CE24 CBNZ W8, 0x324CE2C
	0x0324CE28 BL 0x1C16DFC
	0x0324CE2C LDR X8, [X20]
	0x0324CE30 MOV X0, X20
	0x0324CE34 LDP X9, X1, [X8 + 0x1D8]
	0x0324CE38 BLR X9
	0x0324CE3C TBZ X0, 0x0, 0x324CEB8
	0x0324CE40 MOVZ W8, 0x1
	0x0324CE44 STRB W8, [X19 + 0x61]
	0x0324CE48 MOV X0, X19
	0x0324CE4C LDP X20, X19, [X31 + 0x30]
	0x0324CE50 LDP X22, X21, [X31 + 0x20]
	0x0324CE54 LDP X24, X23, [X31 + 0x10]
	0x0324CE58 LDP X30, X25, [X31], #0x40
	0x0324CE5C B 0x324CF20
	0x0324CE60 BL 0x1C16F20
	0x0324CE64 ADRP X0, 0xEAF000
	0x0324CE68 LDR X0, [X0 + 0x578]
	0x0324CE6C BL 0x1C16D08
	0x0324CE70 BL 0x1C16F10
	0x0324CE74 MOV X19, X0
	0x0324CE78 ADRP X0, 0xED6000
	0x0324CE7C LDR X0, [X0 + 0xD18]
	0x0324CE80 BL 0x1C16D08
	0x0324CE84 MOV X1, X0
	0x0324CE88 MOV X0, X19
	0x0324CE8C MOV X2, X31
	0x0324CE90 BL 0x3314A68
	0x0324CE94 ADRP X0, 0xED6000
	0x0324CE98 LDR X0, [X0 + 0xD20]
	0x0324CE9C BL 0x1C16D08
	0x0324CEA0 MOV X1, X0
	0x0324CEA4 MOV X0, X19
	0x0324CEA8 BL 0x1C16DEC
	0x0324CEAC ADRP X0, 0xED6000
	0x0324CEB0 LDR X0, [X0 + 0xD28]
	0x0324CEB4 B 0x324CEC0
	0x0324CEB8 ADRP X0, 0xED6000
	0x0324CEBC LDR X0, [X0 + 0xD30]
	0x0324CEC0 BL 0x1C16D08
	0x0324CEC4 MOV X19, X0
	0x0324CEC8 ADRP X0, 0xED6000
	0x0324CECC LDR X0, [X0 + 0xD38]
	0x0324CED0 BL 0x1C16D08
	0x0324CED4 MOV X1, X0
	0x0324CED8 MOV X0, X19
	0x0324CEDC MOV X2, X31
	0x0324CEE0 BL 0x32094D4
	0x0324CEE4 MOV X19, X0
	0x0324CEE8 ADRP X0, 0xEAF000
	0x0324CEEC LDR X0, [X0 + 0x578]
	0x0324CEF0 BL 0x1C16D08
	0x0324CEF4 BL 0x1C16F10
	0x0324CEF8 MOV X1, X19
	0x0324CEFC MOV X2, X31
	0x0324CF00 MOV X20, X0
	0x0324CF04 BL 0x3314A68
	0x0324CF08 ADRP X0, 0xED6000
	0x0324CF0C LDR X0, [X0 + 0xD20]
	0x0324CF10 BL 0x1C16D08
	0x0324CF14 MOV X1, X0
	0x0324CF18 MOV X0, X20
	0x0324CF1C BL 0x1C16DEC
	0x0324CF20 STR X30, [X31 - 0x30]!
	0x0324CF24 STP X22, X21, [X31 + 0x10]
	0x0324CF28 STP X20, X19, [X31 + 0x20]
	0x0324CF2C ADRP X20, 0x1190000
	0x0324CF30 LDRB W8, [X20 + 0x4AB]
	0x0324CF34 MOV X19, X0
	0x0324CF38 TBNZ X8, 0x0, 0x324CF5C
	0x0324CF3C ADRP X0, 0xEA7000
	0x0324CF40 LDR X0, [X0 + 0x618]
	0x0324CF44 BL 0x1C16CF4
	0x0324CF48 ADRP X0, 0xED4000
	0x0324CF4C LDR X0, [X0 + 0xEA0]
	0x0324CF50 BL 0x1C16CF4
	0x0324CF54 MOVZ W8, 0x1
	0x0324CF58 STRB W8, [X20 + 0x4AB]
	0x0324CF5C LDR X20, [X19 + 0x30]
	0x0324CF60 CBZ X20, 0x324D058
	0x0324CF64 ADRP X22, 0xED4000
	0x0324CF68 LDR X8, [X20]
	0x0324CF6C LDR X22, [X22 + 0xEA0]
	0x0324CF70 ADRP X21, 0xEA7000
	0x0324CF74 LDRH W9, [X8 + 0x12E]
	0x0324CF78 LDR X1, [X22]
	0x0324CF7C LDR X21, [X21 + 0x618]
	0x0324CF80 CBZ X9, 0x324CFA4
	0x0324CF84 LDR X10, [X8 + 0xB0]
	0x0324CF88 ADD X10, X10, 0x8
	0x0324CF8C LDUR X11, [X10 - 0x8]
	0x0324CF90 CMP X11, X1
	0x0324CF94 B.EQ 0x324CFB4
	0x0324CF98 SUBS X9, X9, 0x1
	0x0324CF9C ADD X10, X10, 0x10
	0x0324CFA0 B.NE 0x324CF8C
	0x0324CFA4 MOV X0, X20
	0x0324CFA8 MOV W2, W31
	0x0324CFAC BL 0x1C5C788
	0x0324CFB0 B 0x324CFC0
	0x0324CFB4 LDRSW X9, [X10]
	0x0324CFB8 ADD X8, X8, X9, 0x4, LSL
	0x0324CFBC ADD X0, X8, 0x138
	0x0324CFC0 LDP X8, X1, [X0]
	0x0324CFC4 MOV X0, X20
	0x0324CFC8 BLR X8
	0x0324CFCC STR W0, [X19 + 0x4C]
	0x0324CFD0 MOV W1, W0
	0x0324CFD4 LDR X0, [X21]
	0x0324CFD8 BL 0x1C16D6C
	0x0324CFDC LDR X20, [X19 + 0x30]
	0x0324CFE0 STR X0, [X19 + 0x40]
	0x0324CFE4 CBZ X20, 0x324D068
	0x0324CFE8 LDR X8, [X20]
	0x0324CFEC LDR X1, [X22]
	0x0324CFF0 LDRH W9, [X8 + 0x12E]
	0x0324CFF4 CBZ X9, 0x324D018
	0x0324CFF8 LDR X10, [X8 + 0xB0]
	0x0324CFFC ADD X10, X10, 0x8
	0x0324D000 LDUR X11, [X10 - 0x8]
	0x0324D004 CMP X11, X1
	0x0324D008 B.EQ 0x324D028
	0x0324D00C SUBS X9, X9, 0x1
	0x0324D010 ADD X10, X10, 0x10
	0x0324D014 B.NE 0x324D000
	0x0324D018 MOVZ W2, 0x1
	0x0324D01C MOV X0, X20
	0x0324D020 BL 0x1C5C788
	0x0324D024 B 0x324D038

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0x1191000
	013 Move X21, 0xED7000
	014 Move W8, [X20+1167]
	015 Move X21, [X21+3288]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {32}
	021 Move X0, 0xED7000
	022 Move X0, [X0+3296]
	023 Call 0x1C17CF4
	024 Move X0, 0xED7000
	025 Move X0, [X0+3288]
	026 Call 0x1C17CF4
	027 Move X0, 0xEA8000
	028 Move X0, [X0+3544]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+1167], W8
	032 Move X0, [X21]
	033 Call 0x1C17F10
	034 Move X20, X0
	035 Call TokenizerStream..ctor, X0
	036 Move X0, [X19+24]
	037 Compare X0, 0
	038 JumpIfEqual {196}
	039 Move W2, 2
	040 Move X1, X20
	041 Move W3, W31
	042 Call Tokenizer.GetTokens, X0, X1, X2, X3
	043 Compare X20, 0
	044 JumpIfEqual {196}
	045 Move X8, [X20+24]
	046 Move X9, [X20+56]
	047 Move X0, X19
	048 Move X1, X20
	049 Move [X20+48], W31
	050 Move [X20+32], X31
	051 Move [X20+40], X8
	052 Move [X20+64], X9
	053 Move [X20+72], W31
	054 Call Parser.DetermineFormat, X0, X1
	055 Move W1, W0
	056 Move X0, X20
	057 Call TokenizerStream.GoToPosition, X0, X1
	058 Move X0, [X19+24]
	059 Compare X0, 0
	060 JumpIfEqual {196}
	061 Move X22, 0xED7000
	062 Move X22, [X22+3296]
	063 Move TEMP, 0
	064 Not TEMP
	065 Move W2, TEMP
	066 Move X1, X20
	067 Move W3, W31
	068 Call Tokenizer.GetTokens, X0, X1, X2, X3
	069 Move X8, [X20+24]
	070 Move X9, [X20+56]
	071 Add X2, X31, 12
	072 Move X0, X19
	073 Move X1, X20
	074 Move [X20+48], W31
	075 Move [X20+72], W31
	076 Move [X20+32], X31
	077 Move [X20+40], X8
	078 Move [X20+64], X9
	079 Move [X31+12], W31
	080 Call Parser.GetRequiredSizes, X0, X1, X2
	081 Move X0, [X22]
	082 Move W21, [X31+12]
	083 Call 0x1C17F10
	084 Move W1, W21
	085 Move X22, X0
	086 Call SecurityDocument..ctor, X0, X1
	087 Move [X19+16], X22
	088 Move [X31+8], W31
	089 Move X8, [X20+24]
	090 Move X9, [X20+56]
	091 Move X0, X20
	092 Move [X20+48], W31
	093 Move [X20+32], X31
	094 Move [X20+40], X8
	095 Move [X20+64], X9
	096 Move [X20+72], W31
	097 Call TokenizerStream.GetNextFullToken, X0
	098 NotImplemented "Instruction ORN not yet implemented."
	099 And W31, W8, 0xFFFF
	100 Move X22, 0xEA8000
	101 Move X22, [X22+3544]
	102 Move W23, 0x4300
	103 Move W24, 0x4400
	104 Move W25, 0x6300
	105 Move W26, 0x4100
	106 Move W27, 0x4200
	107 Move TEMP, X0
	108 And TEMP, TEMP, 0x4000
	109 Compare TEMP, 0x4000
	110 JumpIfNotEqual {180}
	111 And W8, W0, 0xFF00
	112 NotImplemented "Instruction SXTH not yet implemented."
	113 NotImplemented "Instruction CMP not yet implemented."
	114 NotImplemented "Instruction CMP not yet implemented."
	115 And W8, W8, 0xFFFF
	116 NotImplemented "Instruction CMP not yet implemented."
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move X0, [X19+16]
	119 Compare X0, 0
	120 JumpIfEqual {196}
	121 Move X1, [X22]
	122 Add X2, X31, 8
	123 Call SecurityDocument.AppendString, X0, X1, X2
	124 Move X21, [X19+16]
	125 Move X0, X20
	126 Call TokenizerStream.GetNextString, X0
	127 Compare X21, 0
	128 JumpIfEqual {196}
	129 Move X1, X0
	130 Add X2, X31, 8
	131 Move X0, X21
	132 Call SecurityDocument.AppendString, X0, X1, X2
	133 NotImplemented "Instruction CMP not yet implemented."
	134 And W8, W8, 0xFFFF
	135 NotImplemented "Instruction CMP not yet implemented."
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move X0, [X19+16]
	138 Compare X0, 0
	139 JumpIfEqual {196}
	140 Add X2, X31, 8
	141 Move W1, 3
	142 Move X0, [X19+16]
	143 Compare X0, 0
	144 JumpIfEqual {196}
	145 Add X2, X31, 8
	146 Move W1, 4
	147 Call SecurityDocument.AddToken, X0, X1, X2
	148 Move X0, X20
	149 Call TokenizerStream.GetNextString, X0
	150 Move X0, [X19+16]
	151 Compare X0, 0
	152 JumpIfEqual {196}
	153 Add X2, X31, 8
	154 Move W1, 1
	155 Call SecurityDocument.AddToken, X0, X1, X2
	156 Move X0, [X19+16]
	157 Compare X0, 0
	158 JumpIfEqual {196}
	159 Add X2, X31, 8
	160 Move W1, 2
	161 Call SecurityDocument.AddToken, X0, X1, X2
	162 Move X21, [X19+16]
	163 Move X0, X20
	164 Call TokenizerStream.GetNextString, X0
	165 Compare X21, 0
	166 JumpIfEqual {196}
	167 Move X1, X0
	168 Add X2, X31, 8
	169 Move X0, X21
	170 Call SecurityDocument.AddString, X0, X1, X2
	171 Move X21, [X19+16]
	172 Move X0, X20
	173 Call TokenizerStream.GetNextString, X0
	174 Compare X21, 0
	175 JumpIfEqual {196}
	176 Move X1, X0
	177 Add X2, X31, 8
	178 Move X0, X21
	179 Call SecurityDocument.AddString, X0, X1, X2
	180 Move X0, X20
	181 Call TokenizerStream.GetNextFullToken, X0
	182 NotImplemented "Instruction ORN not yet implemented."
	183 And W31, W8, 0xFFFF
	184 Move X20, [X31+80]
	185 Move X19, [X31+88]
	186 Move X22, [X31+64]
	187 Move X21, [X31+72]
	188 Move X24, [X31+48]
	189 Move X23, [X31+56]
	190 Move X26, [X31+32]
	191 Move X25, [X31+40]
	192 Move X30, [X31+16]
	193 Move X27, [X31+24]
	194 Add X31, X31, 96
	195 Return 
	196 Call 0x1C17F20
	197 Move X0, 0xED7000
	198 Move X0, [X0+2912]
	199 Call 0x1C17D08
	200 Call 0x1C17F10
	201 Move X19, X0
	202 Call XmlSyntaxException..ctor, X0
	203 Move X0, 0xED6000
	204 Move X0, [X0+3304]
	205 Call 0x1C17D08
	206 Move X1, X0
	207 Move X0, X19
	208 Call 0x1C17DEC

Method: System.Void .ctor(System.Security.Util.Tokenizer t)

Disassembly:
	0x0324D158 BL 0x1C16D08
	0x0324D15C MOV X1, X0
	0x0324D160 MOV X0, X19
	0x0324D164 BL 0x1C16DEC
	0x0324D168 LDRB W0, [X0 + 0x62]
	0x0324D16C RET
	0x0324D170 STR X30, [X31 - 0x30]!
	0x0324D174 STP X22, X21, [X31 + 0x10]
	0x0324D178 STP X20, X19, [X31 + 0x20]
	0x0324D17C ADRP X20, 0x118F000
	0x0324D180 LDRB W8, [X20 + 0x4A1]
	0x0324D184 MOV X19, X0
	0x0324D188 TBNZ X8, 0x0, 0x324D1AC
	0x0324D18C ADRP X0, 0xEB3000
	0x0324D190 LDR X0, [X0 + 0xE00]
	0x0324D194 BL 0x1C16CF4
	0x0324D198 ADRP X0, 0xED3000
	0x0324D19C LDR X0, [X0 + 0xEA0]
	0x0324D1A0 BL 0x1C16CF4
	0x0324D1A4 MOVZ W8, 0x1
	0x0324D1A8 STRB W8, [X20 + 0x4A1]
	0x0324D1AC LDRB W8, [X19 + 0x62]
	0x0324D1B0 CBNZ W8, 0x324D354
	0x0324D1B4 LDR X20, [X19 + 0x30]
	0x0324D1B8 CBZ X20, 0x324D350
	0x0324D1BC ADRP X10, 0xED3000
	0x0324D1C0 LDR X8, [X20]
	0x0324D1C4 LDR X10, [X10 + 0xEA0]
	0x0324D1C8 LDR X22, [X19 + 0x40]
	0x0324D1CC LDR W21, [X19 + 0x48]
	0x0324D1D0 LDRH W9, [X8 + 0x12E]
	0x0324D1D4 LDR X1, [X10]
	0x0324D1D8 CBZ X9, 0x324D1FC
	0x0324D1DC LDR X10, [X8 + 0xB0]
	0x0324D1E0 ADD X10, X10, 0x8
	0x0324D1E4 LDUR X11, [X10 - 0x8]
	0x0324D1E8 CMP X11, X1
	0x0324D1EC B.EQ 0x324D20C
	0x0324D1F0 SUBS X9, X9, 0x1
	0x0324D1F4 ADD X10, X10, 0x10
	0x0324D1F8 B.NE 0x324D1E4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X1
	006 Move X1, X31
	007 Move X19, X0
	008 Call Object..ctor, X0
	009 Move [X19+16], X31
	010 Move [X19+24], X20
	011 Move X0, X19
	012 Call Parser.ParseContents, X0
	013 Move X20, X31
	014 Move X0, [X19+24]
	015 Compare X0, 0
	016 JumpIfEqual {25}
	017 Call Tokenizer.Recycle, X0
	018 Compare X20, 0
	019 JumpIfNotEqual {26}
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X30, [X31+32]
	023 Move X21, [X31+40]
	024 Return 
	025 Call 0x1C17F20
	026 Move X0, X20
	027 Call 0x1C17F18
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X21, X0
	030 Move X0, X21
	031 Call 0x3EB2AD0
	032 Move X20, [X0]
	033 Call 0x3EB2AE0
	034 Move X20, X31
	035 Move X21, X0
	036 Move X0, [X19+24]
	037 Compare X0, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17F20
	040 Call Tokenizer.Recycle, X0
	041 Compare X20, 0
	042 JumpIfNotEqual {45}
	043 Move X0, X21
	044 Call 0x1D2D690
	045 Move X0, X20
	046 Call 0x1C17F18
	047 Call 0x1991590

Method: System.Void .ctor(System.String input)

Disassembly:
	0x0324D1FC MOVZ W2, 0x4
	0x0324D200 MOV X0, X20
	0x0324D204 BL 0x1C5C788
	0x0324D208 B 0x324D21C
	0x0324D20C LDR W9, [X10]
	0x0324D210 ADD W9, W9, 0x4
	0x0324D214 ADD X8, X8, W9, 0x4, SXTW
	0x0324D218 ADD X0, X8, 0x138
	0x0324D21C LDP X8, X4, [X0]
	0x0324D220 MOV X0, X20
	0x0324D224 MOV X1, X22
	0x0324D228 MOV W2, W31
	0x0324D22C MOV W3, W21
	0x0324D230 BLR X8
	0x0324D234 LDRB W8, [X19 + 0x61]
	0x0324D238 MOVZ W9, 0x1
	0x0324D23C STRB W9, [X19 + 0x62]
	0x0324D240 CBZ W8, 0x324D2A8
	0x0324D244 LDR W3, [X19 + 0x58]
	0x0324D248 MOV X20, X0
	0x0324D24C CMP W3, 0x1
	0x0324D250 B.LT 0x324D280
	0x0324D254 LDR X0, [X19 + 0x28]
	0x0324D258 CBZ X0, 0x324D350
	0x0324D25C LDR X8, [X0]
	0x0324D260 LDR X1, [X19 + 0x50]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1190000
	007 Move X22, 0xED6000
	008 Move W8, [X21+1168]
	009 Move X22, [X22+3328]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xED6000
	017 Move X0, [X0+3328]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1168], W8
	021 Move X0, [X22]
	022 Call 0x1C17F10
	023 Move X1, X20
	024 Move X21, X0
	025 Call Tokenizer..ctor, X0, X1
	026 Move X0, X19
	027 Move X1, X21
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Call Parser..ctor, X0, X1
	034 Return 

