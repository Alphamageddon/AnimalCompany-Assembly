Type: System.Security.Cryptography.RandomNumberGenerator

Method: System.Void .ctor()

Disassembly:
	0x03257150 BL 0x339FCE8
	0x03257154 LDR W3, [X19 + 0x44]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Security.Cryptography.RandomNumberGenerator Create()

Disassembly:
	0x03257158 LDR X2, [X19 + 0x50]
	0x0325715C MOV X0, X28
	0x03257160 MOV W1, W31
	0x03257164 MOV W4, W3
	0x03257168 MOV X5, X31
	0x0325716C BL 0x339FCE8
	0x03257170 LDR W4, [X19 + 0x44]
	0x03257174 LDR X2, [X19 + 0x50]
	0x03257178 MOV X0, X27
	0x0325717C MOV W1, W31
	0x03257180 UBFM W3, W4, 0x1F, 0x1E
	0x03257184 MOV X5, X31
	0x03257188 BL 0x339FCE8
	0x0325718C LDR W8, [X19 + 0x44]
	0x03257190 LDR X0, [X23]
	0x03257194 ADD W1, W8, W8, 0x1, LSL
	0x03257198 BL 0x1C16D6C
	0x0325719C LDR W4, [X19 + 0x44]
	0x032571A0 MOV X2, X0
	0x032571A4 STR X0, [X19 + 0x58]
	0x032571A8 MOV X0, X26

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x1186000
	005 Move X20, 0xECD000
	006 Move W8, [X19+1270]
	007 Move X20, [X20+320]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xECD000
	013 Move X0, [X0+320]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1270], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call RNGCryptoServiceProvider..ctor, X0
	022 Move X0, X19
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Return X0

Method: System.Void Dispose()

Disassembly:
	0x032571AC MOV W1, W31
	0x032571B0 MOV W3, W31
	0x032571B4 MOV X5, X31
	0x032571B8 BL 0x339FCE8
	0x032571BC LDR W3, [X19 + 0x44]
	0x032571C0 LDR X2, [X19 + 0x58]
	0x032571C4 MOV X0, X25
	0x032571C8 MOV W1, W31
	0x032571CC MOV W4, W3
	0x032571D0 MOV X5, X31
	0x032571D4 BL 0x339FCE8
	0x032571D8 LDR W4, [X19 + 0x44]
	0x032571DC LDR X2, [X19 + 0x58]
	0x032571E0 MOV X0, X24
	0x032571E4 MOV W1, W31
	0x032571E8 UBFM W3, W4, 0x1F, 0x1E
	0x032571EC MOV X5, X31
	0x032571F0 BL 0x339FCE8
	0x032571F4 LDR W8, [X19 + 0x10]
	0x032571F8 SUB W9, W8, 0x1
	0x032571FC CMP W9, 0x2
	0x03257200 B.CC 0x3257228
	0x03257204 LDR W9, [X31 + 0x1C]
	0x03257208 CMP W8, 0x4
	0x0325720C B.NE 0x325745C
	0x03257210 LDR W10, [X31 + 0xC]
	0x03257214 ADD W8, W10, 0x7

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1186000
	006 Move X20, 0xEA4000
	007 Move W8, [X21+1271]
	008 Move X20, [X20+3088]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xEA4000
	015 Move X0, [X0+3088]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1271], W8
	019 Move X8, [X19]
	020 Move W1, 1
	021 Move X0, X19
	022 Move X9, [X8+392]
	023 Move X2, [X8+400]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move X0, [X20]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X1, X31
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Call GC.SuppressFinalize, X0
	037 Return 

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x03257218 CMP W10, 0x0

ISIL:
	001 Return 

Method: System.Void GetBytes(System.Byte[] data)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void GetBytes(System.Byte[] data, System.Int32 offset, System.Int32 count)

Disassembly:
	0x0325721C CSEL W8, W8, W10, LT
	0x03257220 SBFM W8, W8, 0x3, 0x1F
	0x03257224 B 0x3257230
	0x03257228 LDR W8, [X19 + 0x20]
	0x0325722C LDR W9, [X31 + 0x1C]
	0x03257230 CMP W9, 0x4
	0x03257234 STP W8, W8, [X19 + 0x24]
	0x03257238 B.EQ 0x3257244
	0x0325723C CMP W9, 0x1
	0x03257240 B.NE 0x3257314
	0x03257244 CBZ X21, 0x3257408
	0x03257248 LDR W8, [X21 + 0x18]
	0x0325724C LDR W1, [X19 + 0x44]
	0x03257250 ADD W9, W8, 0x3
	0x03257254 CMP W8, 0x0
	0x03257258 CSEL W8, W9, W8, LT
	0x0325725C CMP W1, W8, ASR
	0x03257260 B.NE 0x3257450
	0x03257264 LDR X0, [X23]
	0x03257268 BL 0x1C16D6C
	0x0325726C LDR W8, [X19 + 0x44]
	0x03257270 STR X0, [X19 + 0x60]
	0x03257274 CMP W8, 0x1
	0x03257278 B.LT 0x3257314
	0x0325727C LDR W9, [X21 + 0x18]
	0x03257280 MOV X11, X31
	0x03257284 MOV X8, X31
	0x03257288 ADD X10, X0, 0x20
	0x0325728C CMP W11, W9
	0x03257290 B.CS 0x32573E0
	0x03257294 ADD X13, X11, 0x1
	0x03257298 CMP W13, W9
	0x0325729C B.CS 0x32573E0
	0x032572A0 ADD X12, X13, 0x1
	0x032572A4 CMP W12, W9
	0x032572A8 B.CS 0x32573E0
	0x032572AC ADD X12, X12, 0x1
	0x032572B0 CMP W12, W9
	0x032572B4 B.CS 0x32573E0
	0x032572B8 CBZ X0, 0x32573E4
	0x032572BC LDR W14, [X0 + 0x18]
	0x032572C0 CMP X8, X14
	0x032572C4 B.CS 0x32573E0
	0x032572C8 ADD X14, X21, W11, SXTW
	0x032572CC ADD X15, X11, 0x2
	0x032572D0 ADD X13, X21, W13, SXTW
	0x032572D4 ADD X16, X11, 0x3
	0x032572D8 LDRB W14, [X14 + 0x20]
	0x032572DC LDRB W13, [X13 + 0x20]
	0x032572E0 ADD X15, X21, W15, SXTW
	0x032572E4 LDRB W15, [X15 + 0x20]
	0x032572E8 ADD X16, X21, W16, SXTW
	0x032572EC LDRB W16, [X16 + 0x20]
	0x032572F0 BFM W14, W13, 0x18, 0x7
	0x032572F4 BFM W14, W15, 0x10, 0x7
	0x032572F8 ADD X8, X8, 0x1
	0x032572FC BFM W14, W16, 0x8, 0x7
	0x03257300 STR W14, [X10, X11, LSL]
	0x03257304 LDRSW X11, [X19 + 0x44]
	0x03257308 CMP X8, X11
	0x0325730C ADD X11, X12, 0x1
	0x03257310 B.LT 0x325728C
	0x03257314 LDR X1, [X31 + 0x10]
	0x03257318 MOV X0, X19
	0x0325731C BL 0x32574AC
	0x03257320 LDR W8, [X19 + 0x10]
	0x03257324 CMP W8, 0x1
	0x03257328 B.NE 0x3257360
	0x0325732C LDR W1, [X19 + 0x44]
	0x03257330 LDR X0, [X23]
	0x03257334 BL 0x1C16D6C
	0x03257338 LDR X8, [X19 + 0x60]
	0x0325733C LDR W4, [X19 + 0x20]
	0x03257340 MOV X2, X0
	0x03257344 STR X0, [X19 + 0x68]
	0x03257348 MOV X0, X8
	0x0325734C MOV W1, W31
	0x03257350 MOV W3, W31
	0x03257354 MOV X5, X31
	0x03257358 BL 0x33A8750
	0x0325735C LDR W8, [X19 + 0x10]
	0x03257360 CMP W8, 0x4
	0x03257364 B.NE 0x32573C0
	0x03257368 ADRP X9, 0xE9C000
	0x0325736C LDR W8, [X19 + 0x44]
	0x03257370 LDR X9, [X9 + 0x618]
	0x03257374 UBFM W1, W8, 0x1E, 0x1D
	0x03257378 LDR X0, [X9]
	0x0325737C BL 0x1C16D6C
	0x03257380 MOV X2, X0
	0x03257384 LDR W8, [X19 + 0x44]
	0x03257388 LDR X0, [X19 + 0x60]
	0x0325738C STR X2, [X19 + 0x78]
	0x03257390 LDP X20, X19, [X31 + 0x70]
	0x03257394 LDP X22, X21, [X31 + 0x60]
	0x03257398 LDP X24, X23, [X31 + 0x50]
	0x0325739C LDP X26, X25, [X31 + 0x40]
	0x032573A0 LDP X28, X27, [X31 + 0x30]
	0x032573A4 LDP X29, X30, [X31 + 0x20]
	0x032573A8 UBFM W4, W8, 0x1E, 0x1D
	0x032573AC MOV W1, W31
	0x032573B0 MOV W3, W31
	0x032573B4 MOV X5, X31
	0x032573B8 ADD X31, X31, 0x80
	0x032573BC B 0x33A8750
	0x032573C0 LDP X20, X19, [X31 + 0x70]
	0x032573C4 LDP X22, X21, [X31 + 0x60]
	0x032573C8 LDP X24, X23, [X31 + 0x50]
	0x032573CC LDP X26, X25, [X31 + 0x40]
	0x032573D0 LDP X28, X27, [X31 + 0x30]
	0x032573D4 LDP X29, X30, [X31 + 0x20]
	0x032573D8 ADD X31, X31, 0x80
	0x032573DC RET
	0x032573E0 BL 0x1C16F28
	0x032573E4 BL 0x1C16F20
	0x032573E8 ADRP X0, 0xEA1000
	0x032573EC LDR X0, [X0 + 0x528]
	0x032573F0 BL 0x1C16D08
	0x032573F4 BL 0x1C16F10
	0x032573F8 MOV X19, X0
	0x032573FC ADRP X0, 0xECC000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x1186000
	008 Move W8, [X23+1272]
	009 Move W19, W3
	010 Move W20, W2
	011 Move X21, X1
	012 Move X22, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xE9D000
	018 Move X0, [X0+1560]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+1272], W8
	022 Compare X21, 0
	023 JumpIfEqual {69}
	024 Move TEMP, X20
	025 And TEMP, TEMP, -2147483648
	026 Compare TEMP, -2147483648
	027 JumpIfEqual {87}
	028 Move TEMP, X19
	029 And TEMP, TEMP, -2147483648
	030 Compare TEMP, -2147483648
	031 JumpIfEqual {100}
	032 Move W8, [X21+24]
	033 Add W9, W19, W20
	034 NotImplemented "Instruction CMP not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X8, 0xE9D000
	037 Move X8, [X8+1560]
	038 Move W1, W19
	039 Move X0, [X8]
	040 Call 0x1C17D6C
	041 Move X8, [X22]
	042 Move X23, X0
	043 Move X0, X22
	044 Move X1, X23
	045 Move X9, [X8+408]
	046 Move X2, [X8+416]
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Move X2, X21
	049 Move W3, W20
	050 Move W4, W19
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X0, X23
	056 Move W1, W31
	057 Move X5, X31
	058 Move X30, [X31+48]
	059 Move X23, [X31+56]
	060 Call Array.Copy, X0, X1, X2, X3, X4
	061 Return 
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Move X23, [X31+56]
	068 Return 
	069 Move X0, 0xEA2000
	070 Move X0, [X0+1320]
	071 Call 0x1C17D08
	072 Call 0x1C17F10
	073 Move X19, X0
	074 Move X0, 0xEA9000
	075 Move X0, [X0+1680]
	076 Call 0x1C17D08
	077 Move X1, X0
	078 Move X0, X19
	079 Move X2, X31
	080 Call ArgumentNullException..ctor, X0, X1
	081 Move X0, 0xECD000
	082 Move X0, [X0+328]
	083 Call 0x1C17D08
	084 Move X1, X0
	085 Move X0, X19
	086 Call 0x1C17DEC
	087 Move X0, 0xEC5000
	088 Move X0, [X0+1648]
	089 Call 0x1C17D08
	090 Move X1, X31
	091 Call Environment.GetResourceString, X0
	092 Move X19, X0
	093 Move X0, 0xEA5000
	094 Move X0, [X0+1888]
	095 Call 0x1C17D08
	096 Call 0x1C17F10
	097 Move X20, X0
	098 Move X0, 0xECC000
	099 Move X0, [X0+3472]
	100 Move X0, 0xEC5000
	101 Move X0, [X0+1648]
	102 Call 0x1C17D08
	103 Move X1, X31
	104 Call Environment.GetResourceString, X0
	105 Move X19, X0
	106 Move X0, 0xEA5000
	107 Move X0, [X0+1888]
	108 Call 0x1C17D08
	109 Call 0x1C17F10
	110 Move X20, X0
	111 Move X0, 0xEC5000
	112 Move X0, [X0+1608]
	113 Call 0x1C17D08
	114 Move X1, X0
	115 Move X0, X20
	116 Move X2, X19
	117 Move X3, X31
	118 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	119 Move X0, 0xEC5000
	120 Move X0, [X0+1888]
	121 Call 0x1C17D08
	122 Move X1, X31
	123 Call Environment.GetResourceString, X0
	124 Move X19, X0
	125 Move X0, 0xEA5000
	126 Move X0, [X0+1400]
	127 Call 0x1C17D08
	128 Call 0x1C17F10
	129 Move X1, X19
	130 Move X2, X31
	131 Move X20, X0
	132 Call ArgumentException..ctor, X0, X1
	133 Move X0, 0xECD000
	134 Move X0, [X0+328]
	135 Call 0x1C17D08
	136 Move X1, X0
	137 Move X0, X20
	138 Call 0x1C17DEC

