Type: System.Security.Cryptography.DSASignatureDeformatter

Method: System.Void .ctor()

Disassembly:
	0x03254E84 ADRP X20, 0xECC000
	0x03254E88 LDRB W8, [X21 + 0x51B]
	0x03254E8C LDR X20, [X20 + 0xBD8]
	0x03254E90 MOV X19, X0
	0x03254E94 TBNZ X8, 0x0, 0x3254EC4
	0x03254E98 ADRP X0, 0xE9F000
	0x03254E9C LDR X0, [X0 + 0x618]
	0x03254EA0 BL 0x1C16CF4
	0x03254EA4 ADRP X0, 0xECC000
	0x03254EA8 LDR X0, [X0 + 0xBD8]
	0x03254EAC BL 0x1C16CF4
	0x03254EB0 ADRP X0, 0xEC8000
	0x03254EB4 LDR X0, [X0 + 0xD08]
	0x03254EB8 BL 0x1C16CF4
	0x03254EBC MOVZ W8, 0x1
	0x03254EC0 STRB W8, [X21 + 0x51B]
	0x03254EC4 MOV X0, X19
	0x03254EC8 MOV X1, X31
	0x03254ECC BL 0x3251230
	0x03254ED0 MOVZ W8, 0xA0
	0x03254ED4 STR W8, [X19 + 0x14]
	0x03254ED8 LDR X0, [X20]
	0x03254EDC LDR W8, [X0 + 0xE0]
	0x03254EE0 CBNZ W8, 0x3254EE8
	0x03254EE4 BL 0x1C16DFC
	0x03254EE8 MOV X0, X31
	0x03254EEC BL 0x325F54C
	0x03254EF0 TBNZ X0, 0x0, 0x3254F44
	0x03254EF4 ADRP X20, 0xEC8000
	0x03254EF8 LDR X20, [X20 + 0xD08]
	0x03254EFC ADRP X21, 0xE9F000
	0x03254F00 MOVZ W1, 0x5

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1189000
	006 Move X20, 0xECD000
	007 Move W8, [X21+1238]
	008 Move X20, [X20+3032]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xECD000
	015 Move X0, [X0+3032]
	016 Call 0x1C17CF4
	017 Move X0, 0xECD000
	018 Move X0, [X0+3392]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1238], W8
	022 Move X21, 0xECD000
	023 Move X21, [X21+3392]
	024 Move X0, X19
	025 Move X1, X31
	026 Call Object..ctor, X0
	027 Move X0, [X20]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, [X21]
	033 Move X1, X31
	034 Call CryptoConfig.MapNameToOID, X0
	035 Move [X19+24], X0
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Return 

Method: System.Void .ctor(System.Security.Cryptography.AsymmetricAlgorithm key)

Disassembly:
	0x03254F04 LDR X0, [X20]
	0x03254F08 LDR X21, [X21 + 0x618]
	0x03254F0C BL 0x1C16D6C
	0x03254F10 STR X0, [X19 + 0x38]
	0x03254F14 LDR X0, [X21]
	0x03254F18 MOVZ W1, 0x40
	0x03254F1C BL 0x1C16D6C
	0x03254F20 STR X0, [X19 + 0x28]
	0x03254F24 LDR X0, [X20]
	0x03254F28 MOVZ W1, 0x50
	0x03254F2C BL 0x1C16D6C
	0x03254F30 STR X0, [X19 + 0x40]
	0x03254F34 MOV X0, X19
	0x03254F38 LDP X20, X19, [X31 + 0x10]
	0x03254F3C LDP X30, X21, [X31], #0x20
	0x03254F40 B 0x325D13C
	0x03254F44 ADRP X0, 0xECF000
	0x03254F48 LDR X0, [X0 + 0xA0]
	0x03254F4C BL 0x1C16D08
	0x03254F50 MOV X1, X31
	0x03254F54 BL 0x33BDD84
	0x03254F58 MOV X19, X0
	0x03254F5C ADRP X0, 0xE9F000
	0x03254F60 LDR X0, [X0 + 0x5B0]
	0x03254F64 BL 0x1C16D08
	0x03254F68 BL 0x1C16F10
	0x03254F6C MOV X1, X19
	0x03254F70 MOV X2, X31
	0x03254F74 MOV X20, X0
	0x03254F78 BL 0x337DF1C
	0x03254F7C ADRP X0, 0xECF000
	0x03254F80 LDR X0, [X0 + 0xB8]
	0x03254F84 BL 0x1C16D08
	0x03254F88 MOV X1, X0
	0x03254F8C MOV X0, X20
	0x03254F90 BL 0x1C16DEC
	0x03254F94 STP X30, X19, [X31 - 0x10]!
	0x03254F98 MOV X19, X0
	0x03254F9C MOVZ W0, 0x40
	0x03254FA0 MOV X1, X31
	0x03254FA4 BL 0x3262208
	0x03254FA8 MOV X1, X0
	0x03254FAC MOV X0, X19
	0x03254FB0 LDP X30, X19, [X31], #0x10
	0x03254FB4 B 0x3254FB8
	0x03254FB8 STP X30, X23, [X31 - 0x30]!
	0x03254FBC STP X22, X21, [X31 + 0x10]
	0x03254FC0 STP X20, X19, [X31 + 0x20]
	0x03254FC4 ADRP X23, 0x1188000
	0x03254FC8 ADRP X21, 0xECC000
	0x03254FCC ADRP X22, 0xECF000
	0x03254FD0 LDRB W8, [X23 + 0x4EA]
	0x03254FD4 LDR X21, [X21 + 0xD20]
	0x03254FD8 LDR X22, [X22 + 0xC0]
	0x03254FDC MOV X19, X1
	0x03254FE0 MOV X20, X0
	0x03254FE4 TBNZ X8, 0x0, 0x3255008
	0x03254FE8 ADRP X0, 0xECF000
	0x03254FEC LDR X0, [X0 + 0xC0]
	0x03254FF0 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1189000
	006 Move W8, [X21+1239]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xECE000
	014 Move X0, [X0+344]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1239], W8
	018 Move X0, X20
	019 Call DSASignatureDeformatter..ctor, X0
	020 Compare X19, 0
	021 JumpIfEqual {47}
	022 Move X8, 0xECE000
	023 Move X8, [X8+344]
	024 Move X9, [X19]
	025 Move X1, [X8]
	026 Move W10, [X9+304]
	027 Move W8, [X1+304]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X10, [X9+200]
	030 Subtract X9, X8, 1
	031 Move X10, [X10]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move [X20+16], X19
	034 Move X10, [X19]
	035 Move W11, [X10+304]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X8, [X10+200]
	038 Move X8, [X8]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Return 
	045 Move X0, X19
	046 Call 0x1C181E0
	047 Move X0, 0xEA5000
	048 Move X0, [X0+1320]
	049 Call 0x1C17D08
	050 Call 0x1C17F10
	051 Move X19, X0
	052 Move X0, 0xECA000
	053 Move X0, [X0+112]
	054 Call 0x1C17D08
	055 Move X1, X0
	056 Move X0, X19
	057 Move X2, X31
	058 Call ArgumentNullException..ctor, X0, X1
	059 Move X0, 0xED0000
	060 Move X0, [X0+80]
	061 Call 0x1C17D08
	062 Move X1, X0
	063 Move X0, X19
	064 Call 0x1C17DEC

Method: System.Void SetKey(System.Security.Cryptography.AsymmetricAlgorithm key)

Disassembly:
	0x03254FF4 ADRP X0, 0xECC000
	0x03254FF8 LDR X0, [X0 + 0xD20]
	0x03254FFC BL 0x1C16CF4
	0x03255000 MOVZ W8, 0x1
	0x03255004 STRB W8, [X23 + 0x4EA]
	0x03255008 MOV X0, X20
	0x0325500C MOV X1, X31
	0x03255010 BL 0x32549C4
	0x03255014 LDR X8, [X21]
	0x03255018 STR X8, [X20 + 0x38]
	0x0325501C LDR X0, [X22]
	0x03255020 BL 0x1C16F10
	0x03255024 MOV X21, X0
	0x03255028 BL 0x3255068
	0x0325502C STR X21, [X20 + 0x40]
	0x03255030 LDR X0, [X22]
	0x03255034 BL 0x1C16F10
	0x03255038 MOV X21, X0
	0x0325503C BL 0x3255068
	0x03255040 MOVZ W8, 0x100
	0x03255044 STR X21, [X20 + 0x48]
	0x03255048 STR W8, [X20 + 0x14]
	0x0325504C MOV X0, X20
	0x03255050 MOV X1, X19
	0x03255054 LDP X20, X19, [X31 + 0x20]
	0x03255058 LDP X22, X21, [X31 + 0x10]
	0x0325505C MOV X2, X31
	0x03255060 LDP X30, X23, [X31], #0x30
	0x03255064 B 0x325447C
	0x03255068 STP X30, X21, [X31 - 0x20]!
	0x0325506C STP X20, X19, [X31 + 0x10]
	0x03255070 ADRP X21, 0x1187000
	0x03255074 ADRP X20, 0xECB000
	0x03255078 LDRB W8, [X21 + 0x51E]
	0x0325507C LDR X20, [X20 + 0xBD8]
	0x03255080 MOV X19, X0
	0x03255084 TBNZ X8, 0x0, 0x32550B4
	0x03255088 ADRP X0, 0xE9E000
	0x0325508C LDR X0, [X0 + 0x618]
	0x03255090 BL 0x1C16CF4
	0x03255094 ADRP X0, 0xECB000
	0x03255098 LDR X0, [X0 + 0xBD8]
	0x0325509C BL 0x1C16CF4
	0x032550A0 ADRP X0, 0xEC7000
	0x032550A4 LDR X0, [X0 + 0xD08]
	0x032550A8 BL 0x1C16CF4
	0x032550AC MOVZ W8, 0x1
	0x032550B0 STRB W8, [X21 + 0x51E]
	0x032550B4 MOV X0, X19
	0x032550B8 MOV X1, X31
	0x032550BC BL 0x3251230
	0x032550C0 MOVZ W8, 0x100
	0x032550C4 STR W8, [X19 + 0x14]
	0x032550C8 LDR X0, [X20]
	0x032550CC LDR W8, [X0 + 0xE0]
	0x032550D0 CBNZ W8, 0x32550D8
	0x032550D4 BL 0x1C16DFC
	0x032550D8 MOV X0, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1189000
	006 Move W8, [X21+1240]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xECD000
	014 Move X0, [X0+344]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1240], W8
	018 Compare X19, 0
	019 JumpIfEqual {45}
	020 Move X8, 0xECD000
	021 Move X8, [X8+344]
	022 Move X9, [X19]
	023 Move X1, [X8]
	024 Move W10, [X9+304]
	025 Move W8, [X1+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X10, [X9+200]
	028 Subtract X9, X8, 1
	029 Move X10, [X10]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move [X20+16], X19
	032 Move X10, [X19]
	033 Move W11, [X10+304]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X8, [X10+200]
	036 Move X8, [X8]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Return 
	043 Move X0, X19
	044 Call 0x1C181E0
	045 Move X0, 0xEA4000
	046 Move X0, [X0+1320]
	047 Call 0x1C17D08
	048 Call 0x1C17F10
	049 Move X19, X0
	050 Move X0, 0xEC9000
	051 Move X0, [X0+112]
	052 Call 0x1C17D08
	053 Move X1, X0
	054 Move X0, X19
	055 Move X2, X31
	056 Call ArgumentNullException..ctor, X0, X1
	057 Move X0, 0xECF000
	058 Move X0, [X0+88]
	059 Call 0x1C17D08
	060 Move X1, X0
	061 Move X0, X19
	062 Call 0x1C17DEC

Method: System.Void SetHashAlgorithm(System.String strName)

Disassembly:
	0x032550DC BL 0x325F54C
	0x032550E0 TBNZ X0, 0x0, 0x3255134
	0x032550E4 ADRP X20, 0xEC7000
	0x032550E8 LDR X20, [X20 + 0xD08]
	0x032550EC ADRP X21, 0xE9E000
	0x032550F0 MOVZ W1, 0x8
	0x032550F4 LDR X0, [X20]
	0x032550F8 LDR X21, [X21 + 0x618]
	0x032550FC BL 0x1C16D6C
	0x03255100 STR X0, [X19 + 0x38]
	0x03255104 LDR X0, [X21]
	0x03255108 MOVZ W1, 0x40
	0x0325510C BL 0x1C16D6C
	0x03255110 STR X0, [X19 + 0x28]
	0x03255114 LDR X0, [X20]
	0x03255118 MOVZ W1, 0x40
	0x0325511C BL 0x1C16D6C
	0x03255120 STR X0, [X19 + 0x40]
	0x03255124 MOV X0, X19
	0x03255128 LDP X20, X19, [X31 + 0x10]
	0x0325512C LDP X30, X21, [X31], #0x20
	0x03255130 B 0x325D9D4
	0x03255134 ADRP X0, 0xECE000
	0x03255138 LDR X0, [X0 + 0xA0]
	0x0325513C BL 0x1C16D08
	0x03255140 MOV X1, X31
	0x03255144 BL 0x33BDD84
	0x03255148 MOV X19, X0
	0x0325514C ADRP X0, 0xE9E000
	0x03255150 LDR X0, [X0 + 0x5B0]
	0x03255154 BL 0x1C16D08
	0x03255158 BL 0x1C16F10
	0x0325515C MOV X1, X19
	0x03255160 MOV X2, X31
	0x03255164 MOV X20, X0
	0x03255168 BL 0x337DF1C
	0x0325516C ADRP X0, 0xECE000
	0x03255170 LDR X0, [X0 + 0xC8]
	0x03255174 BL 0x1C16D08
	0x03255178 MOV X1, X0
	0x0325517C MOV X0, X20
	0x03255180 BL 0x1C16DEC
	0x03255184 STP X30, X19, [X31 - 0x10]!
	0x03255188 MOV X19, X0
	0x0325518C MOVZ W0, 0x80
	0x03255190 MOV X1, X31
	0x03255194 BL 0x3262208
	0x03255198 MOV X1, X0
	0x0325519C MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1188000
	007 Move X22, 0xECC000
	008 Move W8, [X21+1241]
	009 Move X22, [X22+3032]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xECC000
	017 Move X0, [X0+3032]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1241], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move X1, X31
	028 Call CryptoConfig.MapNameToOID, X0
	029 Move X1, [X19+24]
	030 Move X2, X31
	031 Call String.op_Inequality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {42}
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X30, [X31+48]
	041 Return 
	042 Move X0, 0xECF000
	043 Move X0, [X0+96]
	044 Call 0x1C17D08
	045 Move X1, X31
	046 Call Environment.GetResourceString, X0
	047 Move X19, X0
	048 Move X0, 0xECE000
	049 Move X0, [X0+3768]
	050 Call 0x1C17D08
	051 Call 0x1C17F10
	052 Move X1, X19
	053 Move X20, X0
	054 Call CryptographicUnexpectedOperationException..ctor, X0, X1
	055 Move X0, 0xECF000
	056 Move X0, [X0+104]
	057 Call 0x1C17D08
	058 Move X1, X0
	059 Move X0, X20
	060 Call 0x1C17DEC

Method: System.Boolean VerifySignature(System.Byte[] rgbHash, System.Byte[] rgbSignature)

Disassembly:
	0x032551A0 LDP X30, X19, [X31], #0x10
	0x032551A4 B 0x32551A8
	0x032551A8 STP X30, X23, [X31 - 0x30]!
	0x032551AC STP X22, X21, [X31 + 0x10]
	0x032551B0 STP X20, X19, [X31 + 0x20]
	0x032551B4 ADRP X23, 0x1187000
	0x032551B8 ADRP X21, 0xECB000
	0x032551BC ADRP X22, 0xECE000
	0x032551C0 LDRB W8, [X23 + 0x4EB]
	0x032551C4 LDR X21, [X21 + 0xD18]
	0x032551C8 LDR X22, [X22 + 0xD0]
	0x032551CC MOV X19, X1
	0x032551D0 MOV X20, X0
	0x032551D4 TBNZ X8, 0x0, 0x32551F8
	0x032551D8 ADRP X0, 0xECE000
	0x032551DC LDR X0, [X0 + 0xD0]
	0x032551E0 BL 0x1C16CF4
	0x032551E4 ADRP X0, 0xECB000
	0x032551E8 LDR X0, [X0 + 0xD18]
	0x032551EC BL 0x1C16CF4
	0x032551F0 MOVZ W8, 0x1
	0x032551F4 STRB W8, [X23 + 0x4EB]
	0x032551F8 MOV X0, X31
	0x032551FC BL 0x3262824
	0x03255200 AND W8, W0, 0x1
	0x03255204 MOV X0, X20
	0x03255208 MOV X1, X31
	0x0325520C STRB W8, [X20 + 0x61]
	0x03255210 BL 0x32549C4
	0x03255214 LDR X8, [X21]
	0x03255218 STR X8, [X20 + 0x38]
	0x0325521C LDR X0, [X22]
	0x03255220 BL 0x1C16F10
	0x03255224 MOV X21, X0
	0x03255228 BL 0x3255280
	0x0325522C STR X21, [X20 + 0x40]
	0x03255230 LDR X0, [X22]
	0x03255234 BL 0x1C16F10
	0x03255238 MOV X21, X0
	0x0325523C BL 0x3255280
	0x03255240 LDRB W8, [X20 + 0x61]
	0x03255244 MOVZ W10, 0x40
	0x03255248 MOVZ W9, 0x180
	0x0325524C STR X21, [X20 + 0x48]
	0x03255250 CMP W8, 0x0
	0x03255254 MOVZ W8, 0x80
	0x03255258 CSEL W8, W8, W10, EQ
	0x0325525C STR W9, [X20 + 0x14]
	0x03255260 STR W8, [X20 + 0x30]
	0x03255264 MOV X0, X20
	0x03255268 MOV X1, X19
	0x0325526C LDP X20, X19, [X31 + 0x20]
	0x03255270 LDP X22, X21, [X31 + 0x10]
	0x03255274 MOV X2, X31
	0x03255278 LDP X30, X23, [X31], #0x30
	0x0325527C B 0x325447C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {18}
	006 Compare X2, 0
	007 JumpIfEqual {25}
	008 Move X0, [X0+16]
	009 Compare X0, 0
	010 JumpIfEqual {43}
	011 Move X8, [X0]
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X4, [X8+472]
	015 Move X3, [X8+480]
	016 Move X30, [X31+32]
	017 CallNoReturn X4
	018 Move X0, 0xEA4000
	019 Move X0, [X0+1320]
	020 Call 0x1C17D08
	021 Call 0x1C17F10
	022 Move X19, X0
	023 Move X0, 0xECD000
	024 Move X0, [X0+3848]
	025 Move X0, 0xEA4000
	026 Move X0, [X0+1320]
	027 Call 0x1C17D08
	028 Call 0x1C17F10
	029 Move X19, X0
	030 Move X0, 0xECD000
	031 Move X0, [X0+3856]
	032 Call 0x1C17D08
	033 Move X1, X0
	034 Move X0, X19
	035 Move X2, X31
	036 Call ArgumentNullException..ctor, X0, X1
	037 Move X0, 0xECF000
	038 Move X0, [X0+112]
	039 Call 0x1C17D08
	040 Move X1, X0
	041 Move X0, X19
	042 Call 0x1C17DEC
	043 Move X0, 0xECF000
	044 Move X0, [X0+120]
	045 Call 0x1C17D08
	046 Move X1, X31
	047 Call Environment.GetResourceString, X0
	048 Move X19, X0
	049 Move X0, 0xECE000
	050 Move X0, [X0+3768]
	051 Call 0x1C17D08
	052 Call 0x1C17F10
	053 Move X1, X19
	054 Move X20, X0
	055 Call CryptographicUnexpectedOperationException..ctor, X0, X1
	056 Move X0, 0xECF000
	057 Move X0, [X0+112]
	058 Call 0x1C17D08
	059 Move X1, X0
	060 Move X0, X20
	061 Call 0x1C17DEC

