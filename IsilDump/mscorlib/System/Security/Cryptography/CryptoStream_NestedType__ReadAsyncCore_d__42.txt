Type: System.Security.Cryptography.CryptoStream/<ReadAsyncCore>d__42

Method: System.Void MoveNext()

Disassembly:
	0x0324F730 STP X20, X19, [X31 + 0x20]
	0x0324F734 ADRP X22, 0x118D000
	0x0324F738 ADRP X21, 0xED3000
	0x0324F73C LDRB W8, [X22 + 0x4B0]
	0x0324F740 LDR X21, [X21 + 0xDA0]
	0x0324F744 MOV X19, X1
	0x0324F748 MOV X20, X0
	0x0324F74C TBNZ X8, 0x0, 0x324F770
	0x0324F750 ADRP X0, 0xED3000
	0x0324F754 LDR X0, [X0 + 0xE48]
	0x0324F758 BL 0x1C16CF4
	0x0324F75C ADRP X0, 0xED3000
	0x0324F760 LDR X0, [X0 + 0xDA0]
	0x0324F764 BL 0x1C16CF4
	0x0324F768 MOVZ W8, 0x1
	0x0324F76C STRB W8, [X22 + 0x4B0]
	0x0324F770 LDR X0, [X21]
	0x0324F774 ADRP X21, 0xED3000
	0x0324F778 LDR W8, [X0 + 0xE0]
	0x0324F77C LDR X21, [X21 + 0xE48]
	0x0324F780 CBNZ W8, 0x324F788
	0x0324F784 BL 0x1C16DFC
	0x0324F788 LDR X2, [X21]
	0x0324F78C ADD X0, X20, 0x8
	0x0324F790 MOV X1, X19
	0x0324F794 LDP X20, X19, [X31 + 0x20]
	0x0324F798 LDP X22, X21, [X31 + 0x10]
	0x0324F79C LDR X30, [X31], #0x30
	0x0324F7A0 B 0x2630068
	0x0324F7A4 SUB X31, X31, 0x50
	0x0324F7A8 STR X30, [X31 + 0x10]
	0x0324F7AC STP X24, X23, [X31 + 0x20]
	0x0324F7B0 STP X22, X21, [X31 + 0x30]
	0x0324F7B4 STP X20, X19, [X31 + 0x40]
	0x0324F7B8 ADRP X20, 0x118D000
	0x0324F7BC LDRB W8, [X20 + 0x4B1]
	0x0324F7C0 MOV X19, X0
	0x0324F7C4 TBNZ X8, 0x0, 0x324F7F4
	0x0324F7C8 ADRP X0, 0xED3000
	0x0324F7CC LDR X0, [X0 + 0xE88]
	0x0324F7D0 BL 0x1C16CF4
	0x0324F7D4 ADRP X0, 0xED3000
	0x0324F7D8 LDR X0, [X0 + 0xE90]
	0x0324F7DC BL 0x1C16CF4
	0x0324F7E0 ADRP X0, 0xEA7000
	0x0324F7E4 LDR X0, [X0 + 0x280]
	0x0324F7E8 BL 0x1C16CF4
	0x0324F7EC MOVZ W8, 0x1
	0x0324F7F0 STRB W8, [X20 + 0x4B1]
	0x0324F7F4 STR X31, [X31 + 0x18]
	0x0324F7F8 STP X31, X31, [X31]
	0x0324F7FC ADRP X23, 0xEA7000
	0x0324F800 LDR W24, [X19]
	0x0324F804 LDR X20, [X19 + 0x20]
	0x0324F808 LDR X23, [X23 + 0x280]
	0x0324F80C CBZ W24, 0x324F830
	0x0324F810 CMP W24, 0x1
	0x0324F814 B.NE 0x324F848
	0x0324F818 LDR X8, [X19 + 0x50]
	0x0324F81C MOVN W24, 0x0
	0x0324F820 STR X8, [X31]
	0x0324F824 STR X31, [X19 + 0x50]
	0x0324F828 STR W24, [X19]
	0x0324F82C B 0x324F8D8
	0x0324F830 LDR X8, [X19 + 0x48]
	0x0324F834 MOVN W24, 0x0
	0x0324F838 STR X8, [X31 + 0x18]
	0x0324F83C STR X31, [X19 + 0x48]
	0x0324F840 STR W24, [X19]
	0x0324F844 B 0x324F890
	0x0324F848 CBZ X20, 0x324F9D0
	0x0324F84C MOV X0, X20
	0x0324F850 BL 0x324E194
	0x0324F854 STR X0, [X19 + 0x40]
	0x0324F858 CBZ X0, 0x324F9D4
	0x0324F85C MOV X1, X31
	0x0324F860 BL 0x33E20D8
	0x0324F864 MOV X1, X31
	0x0324F868 BL 0x33EE4D8
	0x0324F86C STR X0, [X31 + 0x8]
	0x0324F870 ADD X0, X31, 0x8
	0x0324F874 MOV X1, X31
	0x0324F878 BL 0x33EE4E4
	0x0324F87C STR X0, [X31 + 0x18]
	0x0324F880 ADD X0, X31, 0x18
	0x0324F884 MOV X1, X31
	0x0324F888 BL 0x33EE4EC
	0x0324F88C TBZ X0, 0x0, 0x324F970
	0x0324F890 ADD X0, X31, 0x18
	0x0324F894 MOV X1, X31
	0x0324F898 BL 0x33EE4F4
	0x0324F89C CBZ X20, 0x324F9C8
	0x0324F8A0 LDR X1, [X19 + 0x28]
	0x0324F8A4 LDR X4, [X19 + 0x38]
	0x0324F8A8 LDP W2, W3, [X19 + 0x30]
	0x0324F8AC MOVZ W5, 0x1
	0x0324F8B0 MOV X0, X20
	0x0324F8B4 BL 0x324DFC8
	0x0324F8B8 CBZ X0, 0x324F9CC
	0x0324F8BC MOV X1, X31
	0x0324F8C0 BL 0x33ED394
	0x0324F8C4 STR X0, [X31]
	0x0324F8C8 ADD X0, X31, 0x0
	0x0324F8CC MOV X1, X31
	0x0324F8D0 BL 0x32C3A80
	0x0324F8D4 TBZ X0, 0x0, 0x324F930
	0x0324F8D8 MOV X20, X31
	0x0324F8DC ADD X0, X31, 0x0
	0x0324F8E0 MOV X1, X31
	0x0324F8E4 BL 0x32C3B4C
	0x0324F8E8 TBZ X24, 0x1F, 0x324F8FC
	0x0324F8EC LDR X0, [X19 + 0x40]
	0x0324F8F0 CBZ X0, 0x324F9D8
	0x0324F8F4 MOV X1, X31
	0x0324F8F8 BL 0x33E2354
	0x0324F8FC CBNZ X20, 0x324F9C0
	0x0324F900 MOVN W8, 0x1
	0x0324F904 STR W8, [X19]
	0x0324F908 STR X31, [X19 + 0x40]
	0x0324F90C LDR X0, [X23]
	0x0324F910 ADD X19, X19, 0x8
	0x0324F914 LDR W8, [X0 + 0xE0]
	0x0324F918 CBNZ W8, 0x324F920
	0x0324F91C BL 0x1C16DFC
	0x0324F920 MOV X0, X19
	0x0324F924 MOV X1, X31
	0x0324F928 BL 0x32C4864
	0x0324F92C B 0x324F9A8
	0x0324F930 MOVZ W8, 0x1
	0x0324F934 STR W8, [X19]
	0x0324F938 LDR X8, [X31]
	0x0324F93C STR X8, [X19 + 0x50]
	0x0324F940 LDR X0, [X23]
	0x0324F944 LDR W8, [X0 + 0xE0]
	0x0324F948 CBNZ W8, 0x324F950
	0x0324F94C BL 0x1C16DFC
	0x0324F950 ADRP X8, 0xED3000
	0x0324F954 LDR X8, [X8 + 0xE90]
	0x0324F958 ADD X0, X19, 0x8
	0x0324F95C LDR X3, [X8]
	0x0324F960 ADD X1, X31, 0x0
	0x0324F964 MOV X2, X19
	0x0324F968 BL 0x218AC94
	0x0324F96C B 0x324F9A8
	0x0324F970 STR W31, [X19]
	0x0324F974 LDR X8, [X31 + 0x18]
	0x0324F978 STR X8, [X19 + 0x48]
	0x0324F97C LDR X0, [X23]
	0x0324F980 LDR W8, [X0 + 0xE0]
	0x0324F984 CBNZ W8, 0x324F98C
	0x0324F988 BL 0x1C16DFC
	0x0324F98C ADRP X8, 0xED3000
	0x0324F990 LDR X8, [X8 + 0xE88]
	0x0324F994 ADD X0, X19, 0x8
	0x0324F998 LDR X3, [X8]
	0x0324F99C ADD X1, X31, 0x18
	0x0324F9A0 MOV X2, X19
	0x0324F9A4 BL 0x2189554
	0x0324F9A8 LDP X20, X19, [X31 + 0x40]
	0x0324F9AC LDP X22, X21, [X31 + 0x30]
	0x0324F9B0 LDP X24, X23, [X31 + 0x20]
	0x0324F9B4 LDR X30, [X31 + 0x10]
	0x0324F9B8 ADD X31, X31, 0x50
	0x0324F9BC RET
	0x0324F9C0 MOV X0, X20
	0x0324F9C4 BL 0x1C16F18
	0x0324F9C8 BL 0x1C16F20
	0x0324F9CC BL 0x1C16F20
	0x0324F9D0 BL 0x1C16F20
	0x0324F9D4 BL 0x1C16F20
	0x0324F9D8 BL 0x1C16F20
	0x0324F9DC B 0x324FA7C
	0x0324F9E0 B 0x324FA7C
	0x0324F9E4 B 0x324FA7C
	0x0324F9E8 B 0x324FA7C
	0x0324F9EC B 0x324FA7C
	0x0324F9F0 B 0x324FA7C
	0x0324F9F4 B 0x324FA7C
	0x0324F9F8 B 0x324FA7C
	0x0324F9FC MOV X21, X1
	0x0324FA00 MOV X22, X0
	0x0324FA04 MOVZ W24, 0x1
	0x0324FA08 B 0x324FA28
	0x0324FA0C B 0x324FA20
	0x0324FA10 B 0x324FA20
	0x0324FA14 B 0x324FA20
	0x0324FA18 B 0x324FA7C
	0x0324FA1C B 0x324FA20
	0x0324FA20 MOV X21, X1
	0x0324FA24 MOV X22, X0
	0x0324FA28 CMP W21, 0x1
	0x0324FA2C B.NE 0x324FA44
	0x0324FA30 MOV X0, X22
	0x0324FA34 BL 0x3EB1AD0
	0x0324FA38 LDR X20, [X0]
	0x0324FA3C BL 0x3EB1AE0
	0x0324FA40 B 0x324F8E8
	0x0324FA44 MOV X20, X31
	0x0324FA48 TBZ X24, 0x1F, 0x324FA5C
	0x0324FA4C LDR X0, [X19 + 0x40]
	0x0324FA50 CBZ X0, 0x324FA68
	0x0324FA54 MOV X1, X31
	0x0324FA58 BL 0x33E2354
	0x0324FA5C CBZ X20, 0x324FA84
	0x0324FA60 MOV X0, X20
	0x0324FA64 BL 0x1C16F18
	0x0324FA68 BL 0x1C16F20
	0x0324FA6C MOV X21, X1
	0x0324FA70 MOV X22, X0
	0x0324FA74 TBZ X24, 0x1F, 0x324FA5C
	0x0324FA78 B 0x324FA4C
	0x0324FA7C MOV X21, X1
	0x0324FA80 MOV X22, X0
	0x0324FA84 CMP W21, 0x1
	0x0324FA88 B.NE 0x324FB1C
	0x0324FA8C MOV X0, X22
	0x0324FA90 BL 0x3EB1AD0
	0x0324FA94 MOV X20, X0
	0x0324FA98 ADRP X0, 0xEA4000
	0x0324FA9C LDR X0, [X0 + 0x7D0]
	0x0324FAA0 BL 0x1C16D08
	0x0324FAA4 LDR X8, [X20]
	0x0324FAA8 LDR X1, [X8]
	0x0324FAAC BL 0x1C17270
	0x0324FAB0 TBZ X0, 0x0, 0x324FAF4
	0x0324FAB4 LDR X20, [X20]
	0x0324FAB8 BL 0x3EB1AE0
	0x0324FABC MOVN W8, 0x1
	0x0324FAC0 STR X31, [X19 + 0x40]
	0x0324FAC4 STR W8, [X19], #0x8
	0x0324FAC8 ADRP X0, 0xEA7000
	0x0324FACC LDR X0, [X0 + 0x280]
	0x0324FAD0 BL 0x1C16D08
	0x0324FAD4 LDR W8, [X0 + 0xE0]
	0x0324FAD8 CBNZ W8, 0x324FAE0
	0x0324FADC BL 0x1C16DFC
	0x0324FAE0 MOV X0, X19
	0x0324FAE4 MOV X1, X20
	0x0324FAE8 MOV X2, X31
	0x0324FAEC BL 0x32C4908
	0x0324FAF0 B 0x324F9A8
	0x0324FAF4 MOVZ W0, 0x8
	0x0324FAF8 BL 0x3EB1AF0
	0x0324FAFC LDR X8, [X20]
	0x0324FB00 STR X8, [X0]
	0x0324FB04 ADRP X1, 0xC65000
	0x0324FB08 ADD X1, X1, 0xE58
	0x0324FB0C MOV X2, X31
	0x0324FB10 BL 0x3EB1B00
	0x0324FB14 MOV X22, X0
	0x0324FB18 BL 0x3EB1AE0
	0x0324FB1C MOV X0, X22
	0x0324FB20 BL 0x1D2C690
	0x0324FB24 BL 0x1990590
	0x0324FB28 STR X30, [X31 - 0x30]!
	0x0324FB2C STP X22, X21, [X31 + 0x10]
	0x0324FB30 STP X20, X19, [X31 + 0x20]
	0x0324FB34 ADRP X21, 0x118D000
	0x0324FB38 ADRP X22, 0xEA7000
	0x0324FB3C LDRB W8, [X21 + 0x4B2]
	0x0324FB40 LDR X22, [X22 + 0x280]
	0x0324FB44 MOV X19, X1
	0x0324FB48 MOV X20, X0
	0x0324FB4C TBNZ X8, 0x0, 0x324FB64
	0x0324FB50 ADRP X0, 0xEA7000
	0x0324FB54 LDR X0, [X0 + 0x280]
	0x0324FB58 BL 0x1C16CF4
	0x0324FB5C MOVZ W8, 0x1
	0x0324FB60 STRB W8, [X21 + 0x4B2]
	0x0324FB64 LDR X0, [X22]
	0x0324FB68 LDR W8, [X0 + 0xE0]
	0x0324FB6C CBNZ W8, 0x324FB74
	0x0324FB70 BL 0x1C16DFC
	0x0324FB74 ADD X0, X20, 0x8
	0x0324FB78 MOV X1, X19
	0x0324FB7C LDP X20, X19, [X31 + 0x20]
	0x0324FB80 LDP X22, X21, [X31 + 0x10]
	0x0324FB84 MOV X2, X31
	0x0324FB88 LDR X30, [X31], #0x30
	0x0324FB8C B 0x32C477C
	0x0324FB90 SUB X31, X31, 0xB0
	0x0324FB94 STP X29, X30, [X31 + 0x50]
	0x0324FB98 STP X28, X27, [X31 + 0x60]
	0x0324FB9C STP X26, X25, [X31 + 0x70]
	0x0324FBA0 STP X24, X23, [X31 + 0x80]
	0x0324FBA4 STP X22, X21, [X31 + 0x90]
	0x0324FBA8 STP X20, X19, [X31 + 0xA0]
	0x0324FBAC ADRP X20, 0x118D000
	0x0324FBB0 LDRB W8, [X20 + 0x4B3]
	0x0324FBB4 MOV X19, X0
	0x0324FBB8 STR X0, [X31 + 0x48]
	0x0324FBBC TBNZ X8, 0x0, 0x324FC34
	0x0324FBC0 ADRP X0, 0xECF000
	0x0324FBC4 LDR X0, [X0 + 0xD50]
	0x0324FBC8 BL 0x1C16CF4
	0x0324FBCC ADRP X0, 0xECF000
	0x0324FBD0 LDR X0, [X0 + 0xD68]
	0x0324FBD4 BL 0x1C16CF4
	0x0324FBD8 ADRP X0, 0xED3000
	0x0324FBDC LDR X0, [X0 + 0xE98]
	0x0324FBE0 BL 0x1C16CF4
	0x0324FBE4 ADRP X0, 0xEA7000
	0x0324FBE8 LDR X0, [X0 + 0x280]
	0x0324FBEC BL 0x1C16CF4
	0x0324FBF0 ADRP X0, 0xED1000
	0x0324FBF4 LDR X0, [X0 + 0xEA0]
	0x0324FBF8 BL 0x1C16CF4
	0x0324FBFC ADRP X0, 0xED3000
	0x0324FC00 LDR X0, [X0 + 0xEA0]
	0x0324FC04 BL 0x1C16CF4
	0x0324FC08 ADRP X0, 0xED3000
	0x0324FC0C LDR X0, [X0 + 0xE60]
	0x0324FC10 BL 0x1C16CF4
	0x0324FC14 ADRP X0, 0xECC000
	0x0324FC18 LDR X0, [X0 + 0x678]
	0x0324FC1C BL 0x1C16CF4
	0x0324FC20 ADRP X0, 0xECE000
	0x0324FC24 LDR X0, [X0 + 0xE40]
	0x0324FC28 BL 0x1C16CF4
	0x0324FC2C MOVZ W8, 0x1
	0x0324FC30 STRB W8, [X20 + 0x4B3]
	0x0324FC34 ADRP X27, 0xED1000
	0x0324FC38 ADRP X28, 0xECE000
	0x0324FC3C ADRP X29, 0xECC000
	0x0324FC40 LDR X27, [X27 + 0xEA0]
	0x0324FC44 LDR X28, [X28 + 0xE40]
	0x0324FC48 LDR X29, [X29 + 0x678]
	0x0324FC4C STP X31, X31, [X31 + 0x30]
	0x0324FC50 STP X31, X31, [X31 + 0x20]
	0x0324FC54 LDR W8, [X19]
	0x0324FC58 ADRP X24, 0x118D000
	0x0324FC5C ADRP X25, 0x118D000
	0x0324FC60 STR W8, [X31 + 0x44]
	0x0324FC64 LDR X26, [X19 + 0x28]
	0x0324FC68 CMP W8, 0x3
	0x0324FC6C B.HI 0x324FEA4
	0x0324FC70 ADRP X9, 0xFFFFFFFFFD947000
	0x0324FC74 ADD X9, X9, 0x4B2
	0x0324FC78 ADR X10, 0x10
	0x0324FC7C LDRH W11, [X9, X8, LSL #1]
	0x0324FC80 ADD X10, X10, X11, 0x2, LSL
	0x0324FC84 BR X10
	0x0324FC88 LDUR V0, [X19 + 0x58]
	0x0324FC8C MOVN W8, 0x0
	0x0324FC90 STR V0, [X31 + 0x3]
	0x0324FC94 STP X31, X31, [X19 + 0x58]
	0x0324FC98 STR W8, [X31 + 0x44]
	0x0324FC9C STR W8, [X19]
	0x0324FCA0 LDR X0, [X29]
	0x0324FCA4 LDR W8, [X0 + 0xE0]
	0x0324FCA8 CBNZ W8, 0x324FCB0
	0x0324FCAC BL 0x1C16DFC
	0x0324FCB0 LDRB W8, [X24 + 0x4E5]
	0x0324FCB4 CBNZ W8, 0x324FCCC
	0x0324FCB8 ADRP X0, 0xECE000
	0x0324FCBC LDR X0, [X0 + 0xE40]
	0x0324FCC0 BL 0x1C16CF4
	0x0324FCC4 MOVZ W8, 0x1
	0x0324FCC8 STRB W8, [X24 + 0x4E5]
	0x0324FCCC LDR X0, [X28]
	0x0324FCD0 LDR W8, [X0 + 0xE0]
	0x0324FCD4 CBNZ W8, 0x324FCDC
	0x0324FCD8 BL 0x1C16DFC
	0x0324FCDC LDRB W8, [X25 + 0x4E6]
	0x0324FCE0 CBNZ W8, 0x324FD04
	0x0324FCE4 ADRP X0, 0xED3000
	0x0324FCE8 LDR X0, [X0 + 0xEA8]
	0x0324FCEC BL 0x1C16CF4
	0x0324FCF0 ADRP X0, 0xEA5000
	0x0324FCF4 LDR X0, [X0 + 0x7B8]
	0x0324FCF8 BL 0x1C16CF4
	0x0324FCFC MOVZ W8, 0x1
	0x0324FD00 STRB W8, [X25 + 0x4E6]
	0x0324FD04 LDR X19, [X31 + 0x30]
	0x0324FD08 CBZ X19, 0x324FFA0
	0x0324FD0C ADRP X9, 0xEA5000
	0x0324FD10 LDR X8, [X19]
	0x0324FD14 LDR X9, [X9 + 0x7B8]
	0x0324FD18 LDRB W11, [X8 + 0x130]
	0x0324FD1C LDR X9, [X9]
	0x0324FD20 LDRB W10, [X9 + 0x130]
	0x0324FD24 CMP W11, W10
	0x0324FD28 B.CC 0x324FD40
	0x0324FD2C LDR X11, [X8 + 0xC8]
	0x0324FD30 ADD X10, X11, X10, 0x3, LSL
	0x0324FD34 LDUR X10, [X10 - 0x8]
	0x0324FD38 CMP X10, X9
	0x0324FD3C B.EQ 0x3250230
	0x0324FD40 ADRP X10, 0xED3000
	0x0324FD44 LDRH W20, [X31 + 0x38]
	0x0324FD48 LDRH W9, [X8 + 0x12E]
	0x0324FD4C LDR X10, [X10 + 0xEA8]
	0x0324FD50 LDR X1, [X10]
	0x0324FD54 CBZ X9, 0x324FD78
	0x0324FD58 LDR X10, [X8 + 0xB0]
	0x0324FD5C ADD X10, X10, 0x8
	0x0324FD60 LDUR X11, [X10 - 0x8]
	0x0324FD64 CMP X11, X1
	0x0324FD68 B.EQ 0x324FF80
	0x0324FD6C SUBS X9, X9, 0x1
	0x0324FD70 ADD X10, X10, 0x10
	0x0324FD74 B.NE 0x324FD60
	0x0324FD78 MOVZ W2, 0x2
	0x0324FD7C MOV X0, X19
	0x0324FD80 BL 0x1C5C788
	0x0324FD84 B 0x324FF90
	0x0324FD88 LDUR V0, [X19 + 0x58]
	0x0324FD8C MOVN W8, 0x0
	0x0324FD90 STR V0, [X31 + 0x3]
	0x0324FD94 STP X31, X31, [X19 + 0x58]
	0x0324FD98 STR W8, [X31 + 0x44]
	0x0324FD9C STR W8, [X19]
	0x0324FDA0 LDR X0, [X29]
	0x0324FDA4 LDR W8, [X0 + 0xE0]
	0x0324FDA8 CBNZ W8, 0x324FDB0
	0x0324FDAC BL 0x1C16DFC
	0x0324FDB0 LDRB W8, [X24 + 0x4E5]
	0x0324FDB4 CBNZ W8, 0x324FDCC
	0x0324FDB8 ADRP X0, 0xECE000
	0x0324FDBC LDR X0, [X0 + 0xE40]
	0x0324FDC0 BL 0x1C16CF4
	0x0324FDC4 MOVZ W8, 0x1
	0x0324FDC8 STRB W8, [X24 + 0x4E5]
	0x0324FDCC LDR X0, [X28]
	0x0324FDD0 LDR W8, [X0 + 0xE0]
	0x0324FDD4 CBNZ W8, 0x324FDDC
	0x0324FDD8 BL 0x1C16DFC
	0x0324FDDC LDRB W8, [X25 + 0x4E6]
	0x0324FDE0 CBNZ W8, 0x324FE04
	0x0324FDE4 ADRP X0, 0xED3000
	0x0324FDE8 LDR X0, [X0 + 0xEA8]
	0x0324FDEC BL 0x1C16CF4
	0x0324FDF0 ADRP X0, 0xEA5000
	0x0324FDF4 LDR X0, [X0 + 0x7B8]
	0x0324FDF8 BL 0x1C16CF4
	0x0324FDFC MOVZ W8, 0x1
	0x0324FE00 STRB W8, [X25 + 0x4E6]
	0x0324FE04 LDR X19, [X31 + 0x30]
	0x0324FE08 CBZ X19, 0x324FF74
	0x0324FE0C ADRP X9, 0xEA5000
	0x0324FE10 LDR X8, [X19]
	0x0324FE14 LDR X9, [X9 + 0x7B8]
	0x0324FE18 LDRB W11, [X8 + 0x130]
	0x0324FE1C LDR X9, [X9]
	0x0324FE20 LDRB W10, [X9 + 0x130]
	0x0324FE24 CMP W11, W10
	0x0324FE28 B.CC 0x324FE40
	0x0324FE2C LDR X11, [X8 + 0xC8]
	0x0324FE30 ADD X10, X11, X10, 0x3, LSL
	0x0324FE34 LDUR X10, [X10 - 0x8]
	0x0324FE38 CMP X10, X9
	0x0324FE3C B.EQ 0x32501F8
	0x0324FE40 ADRP X10, 0xED3000
	0x0324FE44 LDRH W20, [X31 + 0x38]
	0x0324FE48 LDRH W9, [X8 + 0x12E]
	0x0324FE4C LDR X10, [X10 + 0xEA8]
	0x0324FE50 LDR X1, [X10]
	0x0324FE54 CBZ X9, 0x324FE78
	0x0324FE58 LDR X10, [X8 + 0xB0]
	0x0324FE5C ADD X10, X10, 0x8
	0x0324FE60 LDUR X11, [X10 - 0x8]
	0x0324FE64 CMP X11, X1
	0x0324FE68 B.EQ 0x324FF54
	0x0324FE6C SUBS X9, X9, 0x1
	0x0324FE70 ADD X10, X10, 0x10
	0x0324FE74 B.NE 0x324FE60
	0x0324FE78 MOVZ W2, 0x2
	0x0324FE7C MOV X0, X19
	0x0324FE80 BL 0x1C5C788
	0x0324FE84 B 0x324FF64
	0x0324FE88 LDUR V0, [X19 + 0x58]
	0x0324FE8C MOVN W8, 0x0
	0x0324FE90 STR V0, [X31 + 0x3]
	0x0324FE94 STP X31, X31, [X19 + 0x58]
	0x0324FE98 STR W8, [X31 + 0x44]
	0x0324FE9C STR W8, [X19]
	0x0324FEA0 B 0x3250D3C
	0x0324FEA4 LDP W4, W1, [X19 + 0x20]
	0x0324FEA8 STP W4, W1, [X19 + 0x48]
	0x0324FEAC CBZ X26, 0x32504AC
	0x0324FEB0 MOV X21, X26
	0x0324FEB4 LDR W3, [X21 + 0x48]!
	0x0324FEB8 CMP W3, 0x1
	0x0324FEBC B.LT 0x324FF18
	0x0324FEC0 LDR W8, [X26 + 0x4C]
	0x0324FEC4 LDR X0, [X19 + 0x30]
	0x0324FEC8 LDR X2, [X26 + 0x40]
	0x0324FECC SUB W8, W8, W3
	0x0324FED0 CMP W4, W8
	0x0324FED4 B.GE 0x324FEEC
	0x0324FED8 MOV X5, X31
	0x0324FEDC BL 0x33A8A9C
	0x0324FEE0 LDR X20, [X31 + 0x48]
	0x0324FEE4 ADD X8, X20, 0x20
	0x0324FEE8 B 0x3250524
	0x0324FEEC MOV W4, W8
	0x0324FEF0 MOV X5, X31
	0x0324FEF4 BL 0x33A8A9C
	0x0324FEF8 LDR X19, [X31 + 0x48]
	0x0324FEFC LDP W9, W8, [X26 + 0x48]
	0x0324FF00 LDP W11, W10, [X19 + 0x48]
	0x0324FF04 SUB W9, W8, W9
	0x0324FF08 ADD W10, W9, W10
	0x0324FF0C SUB W9, W11, W9
	0x0324FF10 STP W9, W10, [X19 + 0x48]
	0x0324FF14 STR W8, [X26 + 0x48]
	0x0324FF18 LDR W21, [X26 + 0x58]
	0x0324FF1C CMP W21, 0x1
	0x0324FF20 B.LT 0x324FFA8
	0x0324FF24 LDRB W8, [X19 + 0x38]
	0x0324FF28 LDR X19, [X26 + 0x28]
	0x0324FF2C LDR X20, [X26 + 0x50]
	0x0324FF30 CBZ W8, 0x3250208
	0x0324FF34 CBZ X20, 0x3250240
	0x0324FF38 LDR W8, [X20 + 0x18]
	0x0324FF3C CMP W21, W8
	0x0324FF40 B.LS 0x324FF4C
	0x0324FF44 MOV X0, X31
	0x0324FF48 BL 0x339D6EC
	0x0324FF4C UBFM X2, X21, 0x20, 0x1F
	0x0324FF50 B 0x3250250
	0x0324FF54 LDR W9, [X10]
	0x0324FF58 ADD W9, W9, 0x2
	0x0324FF5C ADD X8, X8, W9, 0x4, SXTW
	0x0324FF60 ADD X0, X8, 0x138
	0x0324FF64 LDP X8, X2, [X0]
	0x0324FF68 MOV X0, X19
	0x0324FF6C MOV W1, W20
	0x0324FF70 BLR X8
	0x0324FF74 CBZ X26, 0x32504A4
	0x0324FF78 STR W31, [X26 + 0x48]
	0x0324FF7C B 0x3250584
	0x0324FF80 LDR W9, [X10]
	0x0324FF84 ADD W9, W9, 0x2
	0x0324FF88 ADD X8, X8, W9, 0x4, SXTW
	0x0324FF8C ADD X0, X8, 0x138
	0x0324FF90 LDP X8, X2, [X0]
	0x0324FF94 MOV X0, X19
	0x0324FF98 MOV W1, W20
	0x0324FF9C BLR X8
	0x0324FFA0 CBZ X26, 0x32504A8
	0x0324FFA4 STR W31, [X26 + 0x58]
	0x0324FFA8 LDP W19, W8, [X26 + 0x48]
	0x0324FFAC CMP W19, W8
	0x0324FFB0 B.NE 0x3250584
	0x0324FFB4 LDR X20, [X26 + 0x30]
	0x0324FFB8 CBZ X20, 0x32504B0
	0x0324FFBC LDR X8, [X20]
	0x0324FFC0 LDR X22, [X26 + 0x40]
	0x0324FFC4 LDR X21, [X26 + 0x50]
	0x0324FFC8 LDR X1, [X27]
	0x0324FFCC LDRH W9, [X8 + 0x12E]
	0x0324FFD0 CBZ X9, 0x324FFF4
	0x0324FFD4 LDR X10, [X8 + 0xB0]
	0x0324FFD8 ADD X10, X10, 0x8
	0x0324FFDC LDUR X11, [X10 - 0x8]
	0x0324FFE0 CMP X11, X1
	0x0324FFE4 B.EQ 0x3250004
	0x0324FFE8 SUBS X9, X9, 0x1
	0x0324FFEC ADD X10, X10, 0x10
	0x0324FFF0 B.NE 0x324FFDC
	0x0324FFF4 MOVZ W2, 0x3
	0x0324FFF8 MOV X0, X20
	0x0324FFFC BL 0x1C5C788
	0x03250000 B 0x3250014
	0x03250004 LDR W9, [X10]
	0x03250008 ADD W9, W9, 0x3
	0x0325000C ADD X8, X8, W9, 0x4, SXTW
	0x03250010 ADD X0, X8, 0x138
	0x03250014 LDP X8, X6, [X0]
	0x03250018 MOV X0, X20
	0x0325001C MOV X1, X22
	0x03250020 MOV W2, W31
	0x03250024 MOV W3, W19
	0x03250028 MOV X4, X21
	0x0325002C MOV W5, W31
	0x03250030 BLR X8
	0x03250034 LDR X8, [X31 + 0x48]
	0x03250038 MOV W21, W0
	0x0325003C STR W0, [X8 + 0x50]
	0x03250040 LDRB W8, [X8 + 0x38]
	0x03250044 LDR X19, [X26 + 0x28]
	0x03250048 LDR X20, [X26 + 0x50]
	0x0325004C CBZ W8, 0x32501B4
	0x03250050 CBZ X20, 0x32501DC
	0x03250054 LDR W8, [X20 + 0x18]
	0x03250058 CMP W21, W8
	0x0325005C B.LS 0x3250068
	0x03250060 MOV X0, X31
	0x03250064 BL 0x339D6EC
	0x03250068 UBFM X2, X21, 0x20, 0x1F
	0x0325006C CBZ X19, 0x32501F4
	0x03250070 LDR X8, [X31 + 0x48]
	0x03250074 LDR X9, [X19]
	0x03250078 LDR X3, [X8 + 0x40]
	0x0325007C LDR X8, [X9 + 0x328]
	0x03250080 LDR X4, [X9 + 0x330]
	0x03250084 MOV X0, X19
	0x03250088 MOV X1, X20
	0x0325008C BLR X8
	0x03250090 LDR X8, [X28]
	0x03250094 STP X0, X1, [X31 + 0x20]
	0x03250098 LDR W9, [X8 + 0xE0]
	0x0325009C CBNZ W9, 0x32500A8
	0x032500A0 MOV X0, X8
	0x032500A4 BL 0x1C16DFC
	0x032500A8 ADD X0, X31, 0x20
	0x032500AC MOV X1, X31
	0x032500B0 BL 0x33EDF90
	0x032500B4 LDR X8, [X29]
	0x032500B8 STP X0, X1, [X31 + 0x30]
	0x032500BC LDR W9, [X8 + 0xE0]
	0x032500C0 CBNZ W9, 0x32500CC
	0x032500C4 MOV X0, X8
	0x032500C8 BL 0x1C16DFC
	0x032500CC ADRP X8, 0x118C000
	0x032500D0 LDRB W8, [X8 + 0x4E3]
	0x032500D4 CBNZ W8, 0x32500F0
	0x032500D8 ADRP X0, 0xECD000
	0x032500DC LDR X0, [X0 + 0xE40]
	0x032500E0 BL 0x1C16CF4
	0x032500E4 MOVZ W8, 0x1
	0x032500E8 ADRP X9, 0x118C000
	0x032500EC STRB W8, [X9 + 0x4E3]
	0x032500F0 LDR X0, [X28]
	0x032500F4 LDR W8, [X0 + 0xE0]
	0x032500F8 CBNZ W8, 0x3250100
	0x032500FC BL 0x1C16DFC
	0x03250100 ADRP X8, 0x118C000
	0x03250104 LDRB W8, [X8 + 0x4E4]
	0x03250108 CBNZ W8, 0x3250130
	0x0325010C ADRP X0, 0xED2000
	0x03250110 LDR X0, [X0 + 0xEA8]
	0x03250114 BL 0x1C16CF4
	0x03250118 ADRP X0, 0xEA4000
	0x0325011C LDR X0, [X0 + 0x7B8]
	0x03250120 BL 0x1C16CF4
	0x03250124 MOVZ W8, 0x1
	0x03250128 ADRP X9, 0x118C000
	0x0325012C STRB W8, [X9 + 0x4E4]
	0x03250130 LDR X19, [X31 + 0x30]
	0x03250134 CBZ X19, 0x324FDA0
	0x03250138 ADRP X9, 0xEA4000
	0x0325013C LDR X8, [X19]
	0x03250140 LDR X9, [X9 + 0x7B8]
	0x03250144 LDRB W11, [X8 + 0x130]
	0x03250148 LDR X9, [X9]
	0x0325014C LDRB W10, [X9 + 0x130]
	0x03250150 CMP W11, W10
	0x03250154 B.CC 0x325016C
	0x03250158 LDR X11, [X8 + 0xC8]
	0x0325015C ADD X10, X11, X10, 0x3, LSL
	0x03250160 LDUR X10, [X10 - 0x8]
	0x03250164 CMP X10, X9
	0x03250168 B.EQ 0x32503BC
	0x0325016C ADRP X10, 0xED2000
	0x03250170 LDRH W20, [X31 + 0x38]
	0x03250174 LDRH W9, [X8 + 0x12E]
	0x03250178 LDR X10, [X10 + 0xEA8]
	0x0325017C LDR X1, [X10]
	0x03250180 CBZ X9, 0x32501A4
	0x03250184 LDR X10, [X8 + 0xB0]
	0x03250188 ADD X10, X10, 0x8
	0x0325018C LDUR X11, [X10 - 0x8]
	0x03250190 CMP X11, X1
	0x03250194 B.EQ 0x3250398
	0x03250198 SUBS X9, X9, 0x1
	0x0325019C ADD X10, X10, 0x10
	0x032501A0 B.NE 0x325018C
	0x032501A4 MOV X0, X19
	0x032501A8 MOV W2, W31
	0x032501AC BL 0x1C5C788
	0x032501B0 B 0x32503A4
	0x032501B4 CBZ X19, 0x32504B4
	0x032501B8 LDR X8, [X19]
	0x032501BC LDR X9, [X8 + 0x388]
	0x032501C0 LDR X4, [X8 + 0x390]
	0x032501C4 MOV X0, X19
	0x032501C8 MOV X1, X20
	0x032501CC MOV W2, W31
	0x032501D0 MOV W3, W21
	0x032501D4 BLR X9
	0x032501D8 B 0x324FF78
	0x032501DC CBZ W21, 0x32501E8
	0x032501E0 MOV X0, X31
	0x032501E4 BL 0x339D6EC
	0x032501E8 MOV X20, X31
	0x032501EC MOV X2, X31
	0x032501F0 CBNZ X19, 0x3250070
	0x032501F4 BL 0x1C16F20
	0x032501F8 MOV X0, X19
	0x032501FC MOV X1, X31
	0x03250200 BL 0x32C3B54
	0x03250204 B 0x324FF74
	0x03250208 CBZ X19, 0x32504BC
	0x0325020C LDR X8, [X19]
	0x03250210 LDR X9, [X8 + 0x388]
	0x03250214 LDR X4, [X8 + 0x390]
	0x03250218 MOV X0, X19
	0x0325021C MOV X1, X20
	0x03250220 MOV W2, W31
	0x03250224 MOV W3, W21
	0x03250228 BLR X9
	0x0325022C B 0x324FFA4
	0x03250230 MOV X0, X19
	0x03250234 MOV X1, X31
	0x03250238 BL 0x32C3B54
	0x0325023C B 0x324FFA0
	0x03250240 MOV X0, X31
	0x03250244 BL 0x339D6EC
	0x03250248 MOV X2, X31
	0x0325024C MOV X20, X31
	0x03250250 CBZ X19, 0x32504B8
	0x03250254 LDR X8, [X31 + 0x48]
	0x03250258 LDR X9, [X19]
	0x0325025C LDR X3, [X8 + 0x40]
	0x03250260 LDR X8, [X9 + 0x328]
	0x03250264 LDR X4, [X9 + 0x330]
	0x03250268 MOV X0, X19
	0x0325026C MOV X1, X20
	0x03250270 BLR X8
	0x03250274 LDR X8, [X28]
	0x03250278 STP X0, X1, [X31 + 0x20]
	0x0325027C LDR W9, [X8 + 0xE0]
	0x03250280 CBNZ W9, 0x325028C
	0x03250284 MOV X0, X8
	0x03250288 BL 0x1C16DFC
	0x0325028C ADD X0, X31, 0x20
	0x03250290 MOV X1, X31
	0x03250294 BL 0x33EDF90
	0x03250298 LDR X8, [X29]
	0x0325029C STP X0, X1, [X31 + 0x30]
	0x032502A0 LDR W9, [X8 + 0xE0]
	0x032502A4 CBNZ W9, 0x32502B0
	0x032502A8 MOV X0, X8
	0x032502AC BL 0x1C16DFC
	0x032502B0 ADRP X8, 0x118C000
	0x032502B4 LDRB W8, [X8 + 0x4E3]
	0x032502B8 CBNZ W8, 0x32502D4
	0x032502BC ADRP X0, 0xECD000
	0x032502C0 LDR X0, [X0 + 0xE40]
	0x032502C4 BL 0x1C16CF4
	0x032502C8 MOVZ W8, 0x1
	0x032502CC ADRP X9, 0x118C000
	0x032502D0 STRB W8, [X9 + 0x4E3]
	0x032502D4 LDR X0, [X28]
	0x032502D8 LDR W8, [X0 + 0xE0]
	0x032502DC CBNZ W8, 0x32502E4
	0x032502E0 BL 0x1C16DFC
	0x032502E4 ADRP X8, 0x118C000
	0x032502E8 LDRB W8, [X8 + 0x4E4]
	0x032502EC CBNZ W8, 0x3250314
	0x032502F0 ADRP X0, 0xED2000
	0x032502F4 LDR X0, [X0 + 0xEA8]
	0x032502F8 BL 0x1C16CF4
	0x032502FC ADRP X0, 0xEA4000
	0x03250300 LDR X0, [X0 + 0x7B8]
	0x03250304 BL 0x1C16CF4
	0x03250308 MOVZ W8, 0x1
	0x0325030C ADRP X9, 0x118C000
	0x03250310 STRB W8, [X9 + 0x4E4]
	0x03250314 LDR X19, [X31 + 0x30]
	0x03250318 CBZ X19, 0x324FCA0
	0x0325031C ADRP X9, 0xEA4000
	0x03250320 LDR X8, [X19]
	0x03250324 LDR X9, [X9 + 0x7B8]
	0x03250328 LDRB W11, [X8 + 0x130]
	0x0325032C LDR X9, [X9]
	0x03250330 LDRB W10, [X9 + 0x130]
	0x03250334 CMP W11, W10
	0x03250338 B.CC 0x3250350
	0x0325033C LDR X11, [X8 + 0xC8]
	0x03250340 ADD X10, X11, X10, 0x3, LSL
	0x03250344 LDUR X10, [X10 - 0x8]
	0x03250348 CMP X10, X9
	0x0325034C B.EQ 0x3250444
	0x03250350 ADRP X10, 0xED2000
	0x03250354 LDRH W20, [X31 + 0x38]
	0x03250358 LDRH W9, [X8 + 0x12E]
	0x0325035C LDR X10, [X10 + 0xEA8]
	0x03250360 LDR X1, [X10]
	0x03250364 CBZ X9, 0x3250388
	0x03250368 LDR X10, [X8 + 0xB0]
	0x0325036C ADD X10, X10, 0x8
	0x03250370 LDUR X11, [X10 - 0x8]
	0x03250374 CMP X11, X1
	0x03250378 B.EQ 0x3250420
	0x0325037C SUBS X9, X9, 0x1
	0x03250380 ADD X10, X10, 0x10
	0x03250384 B.NE 0x3250370
	0x03250388 MOV X0, X19
	0x0325038C MOV W2, W31
	0x03250390 BL 0x1C5C788
	0x03250394 B 0x325042C
	0x03250398 LDRSW X9, [X10]
	0x0325039C ADD X8, X8, X9, 0x4, LSL
	0x032503A0 ADD X0, X8, 0x138
	0x032503A4 LDP X8, X2, [X0]
	0x032503A8 MOV X0, X19
	0x032503AC MOV W1, W20
	0x032503B0 BLR X8
	0x032503B4 CBNZ W0, 0x324FDA0
	0x032503B8 B 0x32503CC
	0x032503BC MOV X0, X19
	0x032503C0 MOV X1, X31
	0x032503C4 BL 0x33ED11C
	0x032503C8 TBNZ X0, 0x0, 0x324FDA0
	0x032503CC LDR X19, [X31 + 0x48]
	0x032503D0 MOVZ W8, 0x1
	0x032503D4 STR W8, [X31 + 0x44]
	0x032503D8 STR W8, [X19]
	0x032503DC LDR V0, [X31 + 0x3]
	0x032503E0 ADRP X8, 0xEA6000
	0x032503E4 MOV X2, X19
	0x032503E8 STUR V0, [X19 + 0x58]
	0x032503EC LDR X8, [X8 + 0x280]
	0x032503F0 LDR X0, [X8]
	0x032503F4 LDR W8, [X0 + 0xE0]
	0x032503F8 CBNZ W8, 0x3250404
	0x032503FC BL 0x1C16DFC
	0x03250400 LDR X2, [X31 + 0x48]
	0x03250404 ADRP X8, 0xED2000
	0x03250408 LDR X8, [X8 + 0xE98]
	0x0325040C ADD X0, X19, 0x8
	0x03250410 LDR X3, [X8]
	0x03250414 ADD X1, X31, 0x30
	0x03250418 BL 0x218B92C
	0x0325041C B 0x3250560
	0x03250420 LDRSW X9, [X10]
	0x03250424 ADD X8, X8, X9, 0x4, LSL
	0x03250428 ADD X0, X8, 0x138
	0x0325042C LDP X8, X2, [X0]
	0x03250430 MOV X0, X19
	0x03250434 MOV W1, W20
	0x03250438 BLR X8
	0x0325043C CBNZ W0, 0x324FCA0
	0x03250440 B 0x3250454
	0x03250444 MOV X0, X19
	0x03250448 MOV X1, X31
	0x0325044C BL 0x33ED11C
	0x03250450 TBNZ X0, 0x0, 0x324FCA0
	0x03250454 LDR X19, [X31 + 0x48]
	0x03250458 STR W31, [X31 + 0x44]
	0x0325045C ADRP X8, 0xEA6000
	0x03250460 STR W31, [X19]
	0x03250464 LDR V0, [X31 + 0x3]
	0x03250468 MOV X2, X19
	0x0325046C STUR V0, [X19 + 0x58]
	0x03250470 LDR X8, [X8 + 0x280]
	0x03250474 LDR X0, [X8]
	0x03250478 LDR W8, [X0 + 0xE0]
	0x0325047C CBNZ W8, 0x3250488
	0x03250480 BL 0x1C16DFC
	0x03250484 LDR X2, [X31 + 0x48]
	0x03250488 ADRP X8, 0xED2000
	0x0325048C LDR X8, [X8 + 0xE98]
	0x03250490 ADD X0, X19, 0x8
	0x03250494 LDR X3, [X8]
	0x03250498 ADD X1, X31, 0x30
	0x0325049C BL 0x218B92C
	0x032504A0 B 0x3250560
	0x032504A4 BL 0x1C16F20
	0x032504A8 BL 0x1C16F20
	0x032504AC BL 0x1C16F20
	0x032504B0 BL 0x1C16F20
	0x032504B4 BL 0x1C16F20
	0x032504B8 BL 0x1C16F20
	0x032504BC BL 0x1C16F20
	0x032504C0 B 0x325101C
	0x032504C4 B 0x325101C
	0x032504C8 B 0x325101C
	0x032504CC B 0x325101C
	0x032504D0 B 0x325101C
	0x032504D4 B 0x325101C
	0x032504D8 B 0x325101C
	0x032504DC B 0x325101C
	0x032504E0 B 0x325101C
	0x032504E4 B 0x325101C
	0x032504E8 B 0x325101C
	0x032504EC B 0x325101C
	0x032504F0 B 0x325101C
	0x032504F4 B 0x325101C
	0x032504F8 B 0x325101C
	0x032504FC B 0x325101C
	0x03250500 B 0x325101C
	0x03250504 B 0x325101C
	0x03250508 B 0x325101C
	0x0325050C B 0x325101C
	0x03250510 B 0x325101C
	0x03250514 B 0x325101C
	0x03250518 B 0x325101C
	0x0325051C B 0x325101C
	0x03250520 B 0x325101C
	0x03250524 LDR W9, [X21]
	0x03250528 LDR W8, [X8]
	0x0325052C ADD W8, W8, W9
	0x03250530 STR W8, [X21]
	0x03250534 MOVN W8, 0x1
	0x03250538 STR W8, [X20], #0x8
	0x0325053C ADRP X8, 0xEA6000
	0x03250540 LDR X8, [X8 + 0x280]
	0x03250544 LDR X0, [X8]
	0x03250548 LDR W8, [X0 + 0xE0]
	0x0325054C CBNZ W8, 0x3250554
	0x03250550 BL 0x1C16DFC
	0x03250554 MOV X0, X20
	0x03250558 MOV X1, X31
	0x0325055C BL 0x32C4864
	0x03250560 LDP X20, X19, [X31 + 0xA0]
	0x03250564 LDP X22, X21, [X31 + 0x90]
	0x03250568 LDP X24, X23, [X31 + 0x80]
	0x0325056C LDP X26, X25, [X31 + 0x70]
	0x03250570 LDP X28, X27, [X31 + 0x60]
	0x03250574 LDP X29, X30, [X31 + 0x50]
	0x03250578 ADD X31, X31, 0xB0
	0x0325057C RET
	0x03250580 B 0x325101C
	0x03250584 LDR X20, [X31 + 0x48]
	0x03250588 LDR W19, [X20 + 0x48]
	0x0325058C CMP W19, 0x0
	0x03250590 B.LE 0x3250534
	0x03250594 CBZ X26, 0x3250F70
	0x03250598 LDR W21, [X26 + 0x4C]
	0x0325059C CMP W19, W21
	0x032505A0 B.LT 0x3250F40
	0x032505A4 LDR X20, [X26 + 0x30]
	0x032505A8 CBZ X20, 0x3250F74
	0x032505AC LDR X8, [X20]
	0x032505B0 LDR X1, [X27]
	0x032505B4 LDRH W9, [X8 + 0x12E]
	0x032505B8 CBZ X9, 0x32505DC
	0x032505BC LDR X10, [X8 + 0xB0]
	0x032505C0 ADD X10, X10, 0x8
	0x032505C4 LDUR X11, [X10 - 0x8]
	0x032505C8 CMP X11, X1
	0x032505CC B.EQ 0x32505EC
	0x032505D0 SUBS X9, X9, 0x1
	0x032505D4 ADD X10, X10, 0x10
	0x032505D8 B.NE 0x32505C4
	0x032505DC MOVZ W2, 0x2
	0x032505E0 MOV X0, X20
	0x032505E4 BL 0x1C5C788
	0x032505E8 B 0x32505FC
	0x032505EC LDR W9, [X10]
	0x032505F0 ADD W9, W9, 0x2
	0x032505F4 ADD X8, X8, W9, 0x4, SXTW
	0x032505F8 ADD X0, X8, 0x138
	0x032505FC LDP X8, X1, [X0]
	0x03250600 MOV X0, X20
	0x03250604 BLR X8
	0x03250608 SDIV W19, W19, W21
	0x0325060C CMP W19, 0x2
	0x03250610 B.LT 0x3250848
	0x03250614 EOR W8, W0, 0x1
	0x03250618 TBNZ X8, 0x0, 0x3250848
	0x0325061C LDR W8, [X26 + 0x4C]
	0x03250620 LDR X9, [X31 + 0x48]
	0x03250624 ADRP X10, 0xECE000
	0x03250628 LDR X10, [X10 + 0xD68]
	0x0325062C MUL W8, W8, W19
	0x03250630 STR W8, [X9 + 0x68]
	0x03250634 LDR X0, [X10]
	0x03250638 LDR W8, [X0 + 0xE0]
	0x0325063C CBNZ W8, 0x3250644
	0x03250640 BL 0x1C16DFC
	0x03250644 ADRP X8, 0xECE000
	0x03250648 LDR X8, [X8 + 0xD50]
	0x0325064C LDR X20, [X8]
	0x03250650 LDR X0, [X20 + 0x20]
	0x03250654 LDRB W8, [X0 + 0x135]
	0x03250658 TBNZ X8, 0x0, 0x3250660
	0x0325065C BL 0x1C5C684
	0x03250660 LDR X8, [X0 + 0xC0]
	0x03250664 LDR X0, [X8 + 0x8]
	0x03250668 LDRB W8, [X0 + 0x135]
	0x0325066C TBNZ X8, 0x0, 0x3250674
	0x03250670 BL 0x1C5C684
	0x03250674 LDR W8, [X0 + 0xE0]
	0x03250678 CBNZ W8, 0x3250680
	0x0325067C BL 0x1C16DFC
	0x03250680 LDR X0, [X20 + 0x20]
	0x03250684 LDRB W8, [X0 + 0x135]
	0x03250688 TBNZ X8, 0x0, 0x3250690
	0x0325068C BL 0x1C5C684
	0x03250690 LDR X8, [X0 + 0xC0]
	0x03250694 LDR X0, [X8 + 0x8]
	0x03250698 LDRB W8, [X0 + 0x135]
	0x0325069C TBNZ X8, 0x0, 0x32506A4
	0x032506A0 BL 0x1C5C684
	0x032506A4 LDR X8, [X0 + 0xB8]
	0x032506A8 LDR X0, [X8]
	0x032506AC CBZ X0, 0x3250F84
	0x032506B0 LDR X8, [X0]
	0x032506B4 LDR W9, [X26 + 0x5C]
	0x032506B8 LDP X10, X2, [X8 + 0x178]
	0x032506BC MUL W1, W9, W19

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X20, 0x118E000
	015 Move W8, [X20+1199]
	016 Move X19, X0
	017 Move [X31+56], X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {60}
	022 Move X0, 0xED0000
	023 Move X0, [X0+3408]
	024 Call 0x1C17CF4
	025 Move X0, 0xED0000
	026 Move X0, [X0+3432]
	027 Call 0x1C17CF4
	028 Move X0, 0xED4000
	029 Move X0, [X0+3664]
	030 Call 0x1C17CF4
	031 Move X0, 0xED4000
	032 Move X0, [X0+3632]
	033 Call 0x1C17CF4
	034 Move X0, 0xED4000
	035 Move X0, [X0+3488]
	036 Call 0x1C17CF4
	037 Move X0, 0xED2000
	038 Move X0, [X0+3744]
	039 Call 0x1C17CF4
	040 Move X0, 0xED4000
	041 Move X0, [X0+3672]
	042 Call 0x1C17CF4
	043 Move X0, 0xED4000
	044 Move X0, [X0+3680]
	045 Call 0x1C17CF4
	046 Move X0, 0xED4000
	047 Move X0, [X0+760]
	048 Call 0x1C17CF4
	049 Move X0, 0xED4000
	050 Move X0, [X0+3688]
	051 Call 0x1C17CF4
	052 Move X0, 0xED4000
	053 Move X0, [X0+3696]
	054 Call 0x1C17CF4
	055 Move X0, 0xED4000
	056 Move X0, [X0+3704]
	057 Call 0x1C17CF4
	058 Move W8, 1
	059 Move [X20+1199], W8
	060 Move [X31+32], X31
	061 Move [X31+40], X31
	062 Move W8, [X19]
	063 Move X26, 0xED4000
	064 Move X23, 0xED4000
	065 Move X26, [X26+3688]
	066 Move X23, [X23+3488]
	067 Move [X31+52], W8
	068 Move X25, 0xED2000
	069 Move X27, 0xED4000
	070 Move X28, 0xED4000
	071 Move X24, [X19+40]
	072 Move X25, [X25+3744]
	073 Move X27, [X27+3704]
	074 Move X28, [X28+3696]
	075 Compare W8, 0
	076 JumpIfEqual {252}
	077 NotImplemented "Instruction CMP not yet implemented."
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 Move TEMP, 0
	080 Not TEMP
	081 Move W8, TEMP
	082 Move [X31+2], V0
	083 Move [X19+104], X31
	084 Move [X19+112], X31
	085 Move [X31+52], W8
	086 Move [X19], W8
	087 Move W4, [X19+32]
	088 Move W3, [X19+36]
	089 Move [X19+72], W4
	090 Move [X19+76], W3
	091 Compare X24, 0
	092 JumpIfEqual {620}
	093 Move W8, [X24+88]
	094 Compare W8, 0
	095 JumpIfEqual {154}
	096 Move X0, [X24+80]
	097 Move X2, [X19+48]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move W1, W31
	100 Move X5, X31
	101 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	102 Move X8, [X31+56]
	103 Move X0, [X24+80]
	104 Move W1, [X8+32]
	105 Move W8, [X24+88]
	106 Subtract W4, W8, W1
	107 Move X2, X0
	108 Move W3, W31
	109 Move X5, X31
	110 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	111 Move X8, [X31+56]
	112 Move W9, [X24+88]
	113 Move X19, [X24+80]
	114 Move W8, [X8+32]
	115 Subtract W20, W9, W8
	116 Move [X24+88], W20
	117 Compare X19, 0
	118 JumpIfEqual {626}
	119 Move W8, [X19+24]
	120 Subtract W21, W8, W20
	121 Move X0, X31
	122 Call ThrowHelper.ThrowArgumentOutOfRangeException
	123 Add X8, X19, W20
	124 Add X0, X8, 32
	125 Move W1, W21
	126 Move X2, X31
	127 Call CryptographicOperations.ZeroMemory, X0
	128 Move W1, W31
	129 Move W4, W8
	130 Move X5, X31
	131 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	132 Move X8, [X31+56]
	133 NotImplemented "Instruction LDRSW not yet implemented."
	134 Move W9, [X8+72]
	135 Move W10, [X8+76]
	136 Subtract W9, W9, W19
	137 Add W10, W10, W19
	138 Move [X8+72], W9
	139 Move [X8+76], W10
	140 Move X20, [X24+80]
	141 Compare X20, 0
	142 JumpIfEqual {625}
	143 Move W8, [X20+24]
	144 Subtract W21, W8, W19
	145 Move X0, X31
	146 Call ThrowHelper.ThrowArgumentOutOfRangeException
	147 Add X8, X20, X19
	148 Add X0, X8, 32
	149 Move W1, W21
	150 Move X2, X31
	151 Call CryptographicOperations.ZeroMemory, X0
	152 Move [X24+88], W31
	153 Move X19, [X31+56]
	154 Move W8, [X24+98]
	155 Compare W8, 0
	156 JumpIfNotEqual {645}
	157 Move W8, [X19+72]
	158 Move W9, [X24+92]
	159 NotImplemented "Instruction SDIV not yet implemented."
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Move X19, [X24+48]
	162 Compare X19, 0
	163 JumpIfEqual {629}
	164 Move X8, [X19]
	165 Move X1, [X25]
	166 NotImplemented "Instruction LDRH not yet implemented."
	167 Compare X9, 0
	168 JumpIfEqual {175}
	169 Move X10, [X8+176]
	170 Add X10, X10, 8
	171 NotImplemented "Instruction LDUR not yet implemented."
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Subtract X9, X9, 1
	174 Add X10, X10, 16
	175 Move W2, 2
	176 Move X0, X19
	177 Call 0x1C5D788
	178 Move W9, [X10]
	179 Add W9, W9, 2
	180 Add X8, X8, W9
	181 Add X0, X8, 312
	182 Move X8, [X0]
	183 Move X1, [X0+8]
	184 Move X0, X19
	185 NotImplemented "Instruction BLR not yet implemented."
	186 Move TEMP, X0
	187 And TEMP, TEMP, 1
	188 Compare TEMP, 1
	189 JumpIfNotEqual {419}
	190 Move W8, [X24+76]
	191 Move X9, [X31+56]
	192 Multiply W8, W8, W20
	193 Move [X9+80], W8
	194 Move X8, 0xED0000
	195 Move X8, [X8+3432]
	196 Move X0, [X8]
	197 Move W8, [X0+224]
	198 Compare W8, 0
	199 JumpIfNotEqual {201}
	200 Call 0x1C17DFC
	201 Move X8, 0xED0000
	202 Move X8, [X8+3408]
	203 Move X19, [X8]
	204 Move X0, [X19+32]
	205 Move W8, [X0+309]
	206 Move TEMP, X8
	207 And TEMP, TEMP, 1
	208 Compare TEMP, 1
	209 JumpIfEqual {211}
	210 Call 0x1C5D684
	211 Move X8, [X0+192]
	212 Move X0, [X8+8]
	213 Move W8, [X0+309]
	214 Move TEMP, X8
	215 And TEMP, TEMP, 1
	216 Compare TEMP, 1
	217 JumpIfEqual {219}
	218 Call 0x1C5D684
	219 Move W8, [X0+224]
	220 Compare W8, 0
	221 JumpIfNotEqual {223}
	222 Call 0x1C17DFC
	223 Move X0, [X19+32]
	224 Move W8, [X0+309]
	225 Move TEMP, X8
	226 And TEMP, TEMP, 1
	227 Compare TEMP, 1
	228 JumpIfEqual {230}
	229 Call 0x1C5D684
	230 Move X8, [X0+192]
	231 Move X0, [X8+8]
	232 Move W8, [X0+309]
	233 Move TEMP, X8
	234 And TEMP, TEMP, 1
	235 Compare TEMP, 1
	236 JumpIfEqual {238}
	237 Call 0x1C5D684
	238 Move X8, [X0+184]
	239 Move X0, [X8]
	240 Compare X0, 0
	241 JumpIfEqual {630}
	242 Move X8, [X31+56]
	243 Move X9, [X0]
	244 Move W1, [X8+80]
	245 Move X8, [X9+376]
	246 Move X2, [X9+384]
	247 NotImplemented "Instruction BLR not yet implemented."
	248 Move X19, [X31+56]
	249 Move [X19+88], X0
	250 Move [X19+96], X31
	251 Move W8, [X31+52]
	252 Add X9, X31, 52
	253 Add X10, X31, 56
	254 Move [X31+8], X31
	255 Move [X31+16], X9
	256 Move [X31+24], X10
	257 Compare W8, 0
	258 JumpIfEqual {335}
	259 Move W8, [X19+56]
	260 Compare W8, 0
	261 JumpIfEqual {360}
	262 Compare X24, 0
	263 JumpIfEqual {624}
	264 Move W20, [X24+72]
	265 Move W8, [X19+80]
	266 Move X21, [X19+88]
	267 Move X19, [X24+40]
	268 Subtract W22, W8, W20
	269 Compare X21, 0
	270 JumpIfEqual {409}
	271 Move W8, [X21+24]
	272 Subtract W8, W8, W20
	273 NotImplemented "Instruction CMP not yet implemented."
	274 Move X0, X31
	275 Call ThrowHelper.ThrowArgumentOutOfRangeException
	276 NotImplemented "Instruction BFM not yet implemented."
	277 Compare X19, 0
	278 JumpIfEqual {418}
	279 Move X8, [X31+56]
	280 Move X9, [X19]
	281 Move X3, [X8+64]
	282 Move X8, [X9+744]
	283 Move X4, [X9+752]
	284 Move X0, X19
	285 Move X1, X21
	286 Move X2, X20
	287 NotImplemented "Instruction BLR not yet implemented."
	288 Move X8, [X27]
	289 Move X19, X0
	290 Move X20, X1
	291 Move X0, [X8+32]
	292 Move W8, [X0+309]
	293 Move TEMP, X8
	294 And TEMP, TEMP, 1
	295 Compare TEMP, 1
	296 JumpIfEqual {298}
	297 Call 0x1C5D684
	298 Move X8, [X28]
	299 Move [X31+32], X19
	300 Move [X31+40], X20
	301 Move X0, [X8+32]
	302 Move W8, [X0+309]
	303 Move TEMP, X8
	304 And TEMP, TEMP, 1
	305 Compare TEMP, 1
	306 JumpIfEqual {308}
	307 Call 0x1C5D684
	308 Move X8, [X0+192]
	309 Move X1, [X8+16]
	310 Add X0, X31, 32
	311 Call 0x27A3398
	312 Move TEMP, X0
	313 And TEMP, TEMP, 1
	314 Compare TEMP, 1
	315 JumpIfEqual {344}
	316 Move X19, [X31+56]
	317 Move [X31+52], W31
	318 Move [X19], W31
	319 Move V0, [X31+2]
	320 Move X2, X19
	321 Move [X19+104], V0
	322 Move X0, [X23]
	323 Move W8, [X0+224]
	324 Compare W8, 0
	325 JumpIfNotEqual {328}
	326 Call 0x1C17DFC
	327 Move X2, [X31+56]
	328 Move X8, 0xED4000
	329 Move X8, [X8+3664]
	330 Add X0, X19, 8
	331 Move X3, [X8]
	332 Add X1, X31, 32
	333 Call AsyncTaskMethodBuilder`1<Int32>.AwaitUnsafeOnCompleted, X0, X1, X2
	334 Move W19, 12
	335 NotImplemented "Instruction LDUR not yet implemented."
	336 Move TEMP, 0
	337 Not TEMP
	338 Move W8, TEMP
	339 Move [X31+2], V0
	340 Move [X19+104], X31
	341 Move [X19+112], X31
	342 Move [X31+52], W8
	343 Move [X19], W8
	344 Move X8, [X26]
	345 Move X0, [X8+32]
	346 Move W8, [X0+309]
	347 Move TEMP, X8
	348 And TEMP, TEMP, 1
	349 Compare TEMP, 1
	350 JumpIfEqual {352}
	351 Call 0x1C5D684
	352 Move X8, [X0+192]
	353 Move X1, [X8+32]
	354 Add X0, X31, 32
	355 Call 0x27A34B4
	356 Move W19, W0
	357 Compare X24, 0
	358 JumpIfNotEqual {374}
	359 Call 0x1C17F20
	360 Compare X24, 0
	361 JumpIfEqual {627}
	362 Move X0, [X24+40]
	363 Compare X0, 0
	364 JumpIfEqual {628}
	365 Move X8, [X0]
	366 Move W2, [X24+72]
	367 Move W9, [X19+80]
	368 Move X1, [X19+88]
	369 Move X10, [X8+856]
	370 Move X4, [X8+864]
	371 Subtract W3, W9, W2
	372 NotImplemented "Instruction BLR not yet implemented."
	373 Move W19, W0
	374 Move W4, [X24+72]
	375 Move W8, [X24+76]
	376 Add W20, W4, W19
	377 NotImplemented "Instruction CMP not yet implemented."
	378 Move X8, [X31+56]
	379 Move X2, [X24+64]
	380 Move X0, [X8+88]
	381 Move W1, W4
	382 Move W3, W4
	383 Move W4, W19
	384 Move X5, X31
	385 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	386 Move [X24+72], W20
	387 Move X8, [X31+56]
	388 Move X0, [X24+64]
	389 Move X2, [X8+88]
	390 Move W1, W31
	391 Move W3, W31
	392 Move X5, X31
	393 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	394 Move X21, [X24+64]
	395 Move W20, [X24+72]
	396 Compare X21, 0
	397 JumpIfEqual {403}
	398 Move W8, [X21+24]
	399 NotImplemented "Instruction CMP not yet implemented."
	400 Move X0, X31
	401 Call ThrowHelper.ThrowArgumentOutOfRangeException
	402 Add X0, X21, 32
	403 Compare W20, 0
	404 JumpIfEqual {420}
	405 Move X0, X31
	406 Call ThrowHelper.ThrowArgumentOutOfRangeException
	407 Move X0, X31
	408 Move X20, X31
	409 Or W8, W22, W20
	410 Compare W8, 0
	411 JumpIfEqual {414}
	412 Move X0, X31
	413 Call ThrowHelper.ThrowArgumentOutOfRangeException
	414 Move X21, X31
	415 Move X20, X31
	416 Compare X19, 0
	417 JumpIfNotEqual {279}
	418 Call 0x1C17F20
	419 Move X19, [X31+56]
	420 Move X0, X31
	421 Move X20, X31
	422 Move X1, X20
	423 Move X2, X31
	424 Call CryptographicOperations.ZeroMemory, X0
	425 Move W8, [X24+72]
	426 Move W9, [X24+76]
	427 Move [X24+72], W31
	428 Add W8, W8, W19
	429 NotImplemented "Instruction SDIV not yet implemented."
	430 Multiply W19, W20, W9
	431 Subtract W4, W8, W19
	432 Move [X24+72], W4
	433 Move X8, [X31+56]
	434 Move X2, [X24+64]
	435 Move X0, [X8+88]
	436 Move W1, W19
	437 Move W3, W31
	438 Move X5, X31
	439 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	440 Move X8, 0xED0000
	441 Move X8, [X8+3432]
	442 Move X0, [X8]
	443 Move W8, [X0+224]
	444 Compare W8, 0
	445 JumpIfNotEqual {447}
	446 Call 0x1C17DFC
	447 Move X29, 0xED0000
	448 Move X29, [X29+3408]
	449 Move X21, [X29]
	450 Move X0, [X21+32]
	451 Move W8, [X0+309]
	452 Move TEMP, X8
	453 And TEMP, TEMP, 1
	454 Compare TEMP, 1
	455 JumpIfEqual {457}
	456 Call 0x1C5D684
	457 Move X8, [X0+192]
	458 Move X0, [X8+8]
	459 Move W8, [X0+309]
	460 Move TEMP, X8
	461 And TEMP, TEMP, 1
	462 Compare TEMP, 1
	463 JumpIfEqual {465}
	464 Call 0x1C5D684
	465 Move W8, [X0+224]
	466 Compare W8, 0
	467 JumpIfNotEqual {469}
	468 Call 0x1C17DFC
	469 Move X0, [X21+32]
	470 Move W8, [X0+309]
	471 Move TEMP, X8
	472 And TEMP, TEMP, 1
	473 Compare TEMP, 1
	474 JumpIfEqual {476}
	475 Call 0x1C5D684
	476 Move X8, [X0+192]
	477 Move X0, [X8+8]
	478 Move W8, [X0+309]
	479 Move TEMP, X8
	480 And TEMP, TEMP, 1
	481 Compare TEMP, 1
	482 JumpIfEqual {484}
	483 Call 0x1C5D684
	484 Move X8, [X0+184]
	485 Move X0, [X8]
	486 Compare X0, 0
	487 JumpIfEqual {621}
	488 Move X8, [X0]
	489 Move W9, [X24+92]
	490 Move X10, [X8+376]
	491 Move X2, [X8+384]
	492 Multiply W1, W9, W20
	493 NotImplemented "Instruction BLR not yet implemented."
	494 Move X9, [X31+56]
	495 Move X20, X0
	496 Move [X9+96], X0
	497 Move X21, [X24+48]
	498 Compare X21, 0
	499 JumpIfEqual {622}
	500 Move X8, [X21]
	501 Move X22, [X9+88]
	502 Move X1, [X25]
	503 NotImplemented "Instruction LDRH not yet implemented."
	504 Compare X9, 0
	505 JumpIfEqual {512}
	506 Move X10, [X8+176]
	507 Add X10, X10, 8
	508 NotImplemented "Instruction LDUR not yet implemented."
	509 NotImplemented "Instruction CMP not yet implemented."
	510 Subtract X9, X9, 1
	511 Add X10, X10, 16
	512 Move W2, 3
	513 Move X0, X21
	514 Call 0x1C5D788
	515 Move W9, [X10]
	516 Add W9, W9, 3
	517 Add X8, X8, W9
	518 Add X0, X8, 312
	519 Move X8, [X0]
	520 Move X6, [X0+8]
	521 Move X0, X21
	522 Move X1, X22
	523 Move W2, W31
	524 Move W3, W19
	525 Move X4, X20
	526 Move W5, W31
	527 NotImplemented "Instruction BLR not yet implemented."
	528 Move X8, [X31+56]
	529 Move W19, W0
	530 Move X0, [X8+96]
	531 Move X2, [X8+48]
	532 Move W3, [X8+76]
	533 Move W1, W31
	534 Move W4, W19
	535 Move X5, X31
	536 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	537 Move X8, [X31+56]
	538 Move X20, [X8+96]
	539 Compare X20, 0
	540 JumpIfEqual {547}
	541 Move W8, [X20+24]
	542 NotImplemented "Instruction CMP not yet implemented."
	543 Move X0, X31
	544 Call ThrowHelper.ThrowArgumentOutOfRangeException
	545 Add X0, X20, 32
	546 Move W1, W19
	547 Compare W19, 0
	548 JumpIfEqual {553}
	549 Move X0, X31
	550 Call ThrowHelper.ThrowArgumentOutOfRangeException
	551 Move X0, X31
	552 Move X1, X31
	553 Move X0, X31
	554 Move X1, X31
	555 Move X2, X31
	556 Call CryptographicOperations.ZeroMemory, X0
	557 Move X20, [X29]
	558 Move X0, [X20+32]
	559 Move W8, [X0+309]
	560 Move TEMP, X8
	561 And TEMP, TEMP, 1
	562 Compare TEMP, 1
	563 JumpIfEqual {565}
	564 Call 0x1C5D684
	565 Move X8, [X0+192]
	566 Move X0, [X8+8]
	567 Move W8, [X0+309]
	568 Move TEMP, X8
	569 And TEMP, TEMP, 1
	570 Compare TEMP, 1
	571 JumpIfEqual {573}
	572 Call 0x1C5D684
	573 Move W8, [X0+224]
	574 Compare W8, 0
	575 JumpIfNotEqual {577}
	576 Call 0x1C17DFC
	577 Move X0, [X20+32]
	578 Move W8, [X0+309]
	579 Move TEMP, X8
	580 And TEMP, TEMP, 1
	581 Compare TEMP, 1
	582 JumpIfEqual {584}
	583 Call 0x1C5D684
	584 Move X8, [X0+192]
	585 Move X0, [X8+8]
	586 Move W8, [X0+309]
	587 Move TEMP, X8
	588 And TEMP, TEMP, 1
	589 Compare TEMP, 1
	590 JumpIfEqual {592}
	591 Call 0x1C5D684
	592 Move X8, [X0+184]
	593 Move X0, [X8]
	594 Compare X0, 0
	595 JumpIfEqual {623}
	596 Move X8, [X31+56]
	597 Move X9, [X0]
	598 Move X1, [X8+96]
	599 Move X8, [X9+392]
	600 Move X3, [X9+400]
	601 Move W2, W31
	602 NotImplemented "Instruction BLR not yet implemented."
	603 Move X8, [X31+56]
	604 Move W9, [X8+72]
	605 Move W10, [X8+76]
	606 Move [X8+96], X31
	607 Subtract W9, W9, W19
	608 Add W10, W10, W19
	609 Move [X8+72], W9
	610 Move [X8+76], W10
	611 Move W19, 17
	612 Add X0, X31, 8
	613 Call 0x1BB5810
	614 NotImplemented "Instruction CMP not yet implemented."
	615 Compare W19, 0
	616 JumpIfNotEqual {663}
	617 Move X19, [X31+56]
	618 Move [X19+88], X31
	619 Move [X19+96], X31
	620 Call 0x1C17F20
	621 Call 0x1C17F20
	622 Call 0x1C17F20
	623 Call 0x1C17F20
	624 Call 0x1C17F20
	625 Call 0x1C17F20
	626 Call 0x1C17F20
	627 Call 0x1C17F20
	628 Call 0x1C17F20
	629 Call 0x1C17F20
	630 Call 0x1C17F20
	631 Move X19, X1
	632 Move X20, X0
	633 NotImplemented "Instruction CMP not yet implemented."
	634 Move X0, X20
	635 Call 0x3EB2AD0
	636 Move X8, [X0]
	637 Move [X31+8], X8
	638 Call 0x3EB2AE0
	639 Move W19, W31
	640 Move X19, X1
	641 Move X20, X0
	642 Add X0, X31, 8
	643 Call 0x1BB5810
	644 Move X19, [X31+56]
	645 Move W8, [X19+32]
	646 Move W9, [X19+72]
	647 Subtract W20, W8, W9
	648 Move TEMP, 1
	649 Not TEMP
	650 Move W8, TEMP
	651 Move [X19+8], W8
	652 Move X0, [X23]
	653 Move X21, 0xED3000
	654 Move W8, [X0+224]
	655 Move X21, [X21+3632]
	656 Compare W8, 0
	657 JumpIfNotEqual {659}
	658 Call 0x1C17DFC
	659 Move X2, [X21]
	660 Move X0, X19
	661 Move W1, W20
	662 Call AsyncTaskMethodBuilder`1<Int32>.SetResult, X0, X1
	663 Move X20, [X31+144]
	664 Move X19, [X31+152]
	665 Move X22, [X31+128]
	666 Move X21, [X31+136]
	667 Move X24, [X31+112]
	668 Move X23, [X31+120]
	669 Move X26, [X31+96]
	670 Move X25, [X31+104]
	671 Move X28, [X31+80]
	672 Move X27, [X31+88]
	673 Move X29, [X31+64]
	674 Move X30, [X31+72]
	675 Add X31, X31, 160
	676 Return 
	677 Move W8, [X19+72]
	678 NotImplemented "Instruction CMP not yet implemented."
	679 Move W20, [X19+32]
	680 Move X8, [X31+56]
	681 Move X20, [X24+40]
	682 Move X22, [X24+64]
	683 Move W8, [X8+56]
	684 Compare W8, 0
	685 JumpIfEqual {778}
	686 Subtract W19, W19, W21
	687 Compare X22, 0
	688 JumpIfEqual {828}
	689 Move W8, [X22+24]
	690 Subtract W8, W8, W21
	691 NotImplemented "Instruction CMP not yet implemented."
	692 Move X0, X31
	693 Call ThrowHelper.ThrowArgumentOutOfRangeException
	694 NotImplemented "Instruction BFM not yet implemented."
	695 Compare X20, 0
	696 JumpIfEqual {837}
	697 Move X8, [X31+56]
	698 Move X9, [X20]
	699 Move X3, [X8+64]
	700 Move X8, [X9+744]
	701 Move X4, [X9+752]
	702 Move X0, X20
	703 Move X1, X22
	704 Move X2, X21
	705 NotImplemented "Instruction BLR not yet implemented."
	706 Move X8, [X27]
	707 Move X19, X0
	708 Move X20, X1
	709 Move X0, [X8+32]
	710 Move W8, [X0+309]
	711 Move TEMP, X8
	712 And TEMP, TEMP, 1
	713 Compare TEMP, 1
	714 JumpIfEqual {716}
	715 Call 0x1C5D684
	716 Move X8, [X28]
	717 Move [X31+32], X19
	718 Move [X31+40], X20
	719 Move X0, [X8+32]
	720 Move W8, [X0+309]
	721 Move TEMP, X8
	722 And TEMP, TEMP, 1
	723 Compare TEMP, 1
	724 JumpIfEqual {726}
	725 Call 0x1C5D684
	726 Move X8, [X0+192]
	727 Move X1, [X8+16]
	728 Add X0, X31, 32
	729 Call 0x27A3398
	730 Move TEMP, X0
	731 And TEMP, TEMP, 1
	732 Compare TEMP, 1
	733 JumpIfNotEqual {965}
	734 Move X8, [X26]
	735 Move X0, [X8+32]
	736 Move W8, [X0+309]
	737 Move TEMP, X8
	738 And TEMP, TEMP, 1
	739 Compare TEMP, 1
	740 JumpIfEqual {742}
	741 Call 0x1C5D684
	742 Move X8, [X0+192]
	743 Move X1, [X8+32]
	744 Add X0, X31, 32
	745 Call 0x27A34B4
	746 Move W8, W0
	747 Compare W0, 0
	748 JumpIfEqual {849}
	749 Compare X24, 0
	750 JumpIfEqual {984}
	751 Move W9, [X24+72]
	752 Add W8, W9, W8
	753 Move [X24+72], W8
	754 Compare X24, 0
	755 JumpIfEqual {985}
	756 Move W21, [X24+72]
	757 Move W19, [X24+76]
	758 NotImplemented "Instruction CMP not yet implemented."
	759 Move X20, [X24+48]
	760 Compare X20, 0
	761 JumpIfEqual {986}
	762 Move X8, [X20]
	763 Move X22, [X24+64]
	764 Move X21, [X24+80]
	765 Move X1, [X25]
	766 NotImplemented "Instruction LDRH not yet implemented."
	767 Compare X9, 0
	768 JumpIfEqual {775}
	769 Move X10, [X8+176]
	770 Add X10, X10, 8
	771 NotImplemented "Instruction LDUR not yet implemented."
	772 NotImplemented "Instruction CMP not yet implemented."
	773 Subtract X9, X9, 1
	774 Add X10, X10, 16
	775 Move W2, 3
	776 Move X0, X20
	777 Call 0x1C5D788
	778 Compare X20, 0
	779 JumpIfEqual {987}
	780 Move X8, [X20]
	781 Subtract W3, W19, W21
	782 Move X9, [X8+856]
	783 Move X4, [X8+864]
	784 Move X0, X20
	785 Move X1, X22
	786 Move W2, W21
	787 NotImplemented "Instruction BLR not yet implemented."
	788 Move W9, [X10]
	789 Add W9, W9, 3
	790 Add X8, X8, W9
	791 Add X0, X8, 312
	792 Move X8, [X0]
	793 Move X6, [X0+8]
	794 Move X0, X20
	795 Move X1, X22
	796 Move W2, W31
	797 Move W3, W19
	798 Move X4, X21
	799 Move W5, W31
	800 NotImplemented "Instruction BLR not yet implemented."
	801 Move [X24+72], W31
	802 Move X8, [X31+56]
	803 Move W20, W0
	804 Move X0, [X24+80]
	805 Move W4, [X8+72]
	806 Move W3, [X8+76]
	807 Move X2, [X8+48]
	808 NotImplemented "Instruction CMP not yet implemented."
	809 Move W1, W31
	810 Move W4, W20
	811 Move X5, X31
	812 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	813 Move X19, [X24+80]
	814 Compare X19, 0
	815 JumpIfEqual {822}
	816 Move W8, [X19+24]
	817 NotImplemented "Instruction CMP not yet implemented."
	818 Move X0, X31
	819 Call ThrowHelper.ThrowArgumentOutOfRangeException
	820 Add X0, X19, 32
	821 Move W1, W20
	822 Compare W20, 0
	823 JumpIfEqual {838}
	824 Move X0, X31
	825 Call ThrowHelper.ThrowArgumentOutOfRangeException
	826 Move X0, X31
	827 Move X1, X31
	828 Or W8, W19, W21
	829 Compare W8, 0
	830 JumpIfEqual {833}
	831 Move X0, X31
	832 Call ThrowHelper.ThrowArgumentOutOfRangeException
	833 Move X22, X31
	834 Move X21, X31
	835 Compare X20, 0
	836 JumpIfNotEqual {697}
	837 Call 0x1C17F20
	838 Move X0, X31
	839 Move X1, X31
	840 Move X2, X31
	841 Call CryptographicOperations.ZeroMemory, X0
	842 Move X19, [X31+56]
	843 Move W9, [X19+72]
	844 Move W8, [X19+76]
	845 Add W8, W8, W20
	846 Subtract W9, W9, W20
	847 Move [X19+72], W9
	848 Move [X19+76], W8
	849 Compare X24, 0
	850 JumpIfEqual {988}
	851 Move X19, [X24+48]
	852 Compare X19, 0
	853 JumpIfEqual {989}
	854 Move X8, [X19]
	855 Move X21, [X24+64]
	856 Move W20, [X24+72]
	857 Move X1, [X25]
	858 NotImplemented "Instruction LDRH not yet implemented."
	859 Compare X9, 0
	860 JumpIfEqual {867}
	861 Move X10, [X8+176]
	862 Add X10, X10, 8
	863 NotImplemented "Instruction LDUR not yet implemented."
	864 NotImplemented "Instruction CMP not yet implemented."
	865 Subtract X9, X9, 1
	866 Add X10, X10, 16
	867 Move W2, 4
	868 Move X0, X19
	869 Call 0x1C5D788
	870 Move W1, W31
	871 Move X5, X31
	872 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	873 Move X8, [X31+56]
	874 Move X0, [X24+80]
	875 Move W1, [X8+72]
	876 Subtract W4, W20, W1
	877 Move [X24+88], W4
	878 Move X2, X0
	879 Move W3, W31
	880 Move X5, X31
	881 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	882 Move X19, [X24+80]
	883 Compare X19, 0
	884 JumpIfEqual {992}
	885 NotImplemented "Instruction LDRSW not yet implemented."
	886 Move W8, [X19+24]
	887 Subtract W21, W8, W20
	888 Move X0, X31
	889 Call ThrowHelper.ThrowArgumentOutOfRangeException
	890 Add X8, X19, X20
	891 Add X0, X8, 32
	892 Move W1, W21
	893 Move X2, X31
	894 Call CryptographicOperations.ZeroMemory, X0
	895 Move W9, [X10]
	896 Add W9, W9, 4
	897 Add X8, X8, W9
	898 Add X0, X8, 312
	899 Move X8, [X0]
	900 Move X4, [X0+8]
	901 Move X0, X19
	902 Move X1, X21
	903 Move W2, W31
	904 Move W3, W20
	905 NotImplemented "Instruction BLR not yet implemented."
	906 Move X8, X0
	907 Move [X24+80], X0
	908 Compare X0, 0
	909 JumpIfEqual {990}
	910 Move W4, [X8+24]
	911 Move W9, 1
	912 Move [X24+98], W9
	913 Move [X24+88], W4
	914 Move X10, [X31+56]
	915 Move W9, [X10+72]
	916 Move W3, [X10+76]
	917 Move X2, [X10+48]
	918 NotImplemented "Instruction CMP not yet implemented."
	919 Move X0, X8
	920 Move W1, W31
	921 Move W4, W9
	922 Move X5, X31
	923 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	924 Move X8, [X31+56]
	925 Move W9, [X24+88]
	926 Move X0, [X24+80]
	927 Move W1, [X8+72]
	928 Subtract W4, W9, W1
	929 Move [X24+88], W4
	930 Move X2, X0
	931 Move W3, W31
	932 Move X5, X31
	933 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	934 Move X19, [X24+80]
	935 Compare X19, 0
	936 JumpIfEqual {991}
	937 NotImplemented "Instruction LDRSW not yet implemented."
	938 Move W8, [X19+24]
	939 Subtract W21, W8, W20
	940 Move X0, X31
	941 Call ThrowHelper.ThrowArgumentOutOfRangeException
	942 Add X8, X19, X20
	943 Add X0, X8, 32
	944 Move W1, W21
	945 Move X2, X31
	946 Call CryptographicOperations.ZeroMemory, X0
	947 Move X0, X8
	948 Move W1, W31
	949 Move X5, X31
	950 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	951 Move X8, [X31+56]
	952 Move W9, [X24+88]
	953 Move X11, 0xED3000
	954 Move W10, [X8+72]
	955 Move X11, [X11+760]
	956 Subtract W9, W10, W9
	957 Move [X8+72], W9
	958 Move [X24+88], W31
	959 Move X0, [X24+80]
	960 Move X1, [X11]
	961 Call 0x25FC4C0, X0
	962 Move X2, X31
	963 Call CryptographicOperations.ZeroMemory, X0
	964 Move X19, [X31+56]
	965 Move X19, [X31+56]
	966 Move W8, 1
	967 Move [X31+52], W8
	968 Move [X19], W8
	969 Move V0, [X31+2]
	970 Move X2, X19
	971 Move [X19+104], V0
	972 Move X0, [X23]
	973 Move W8, [X0+224]
	974 Compare W8, 0
	975 JumpIfNotEqual {978}
	976 Call 0x1C17DFC
	977 Move X2, [X31+56]
	978 Move X8, 0xED3000
	979 Move X8, [X8+3664]
	980 Add X0, X19, 8
	981 Move X3, [X8]
	982 Add X1, X31, 32
	983 Call AsyncTaskMethodBuilder`1<Int32>.AwaitUnsafeOnCompleted, X0, X1, X2
	984 Call 0x1C17F20
	985 Call 0x1C17F20
	986 Call 0x1C17F20
	987 Call 0x1C17F20
	988 Call 0x1C17F20
	989 Call 0x1C17F20
	990 Call 0x1C17F20
	991 Call 0x1C17F20
	992 Call 0x1C17F20
	993 Move X19, X1
	994 Move X20, X0
	995 NotImplemented "Instruction CMP not yet implemented."
	996 Move X0, X20
	997 Call 0x3EB2AD0
	998 Move X19, X0
	999 Move X0, 0xEA4000
	1000 Move X0, [X0+2000]
	1001 Call 0x1C17D08
	1002 Move X8, [X19]
	1003 Move X1, [X8]
	1004 Call 0x1C18270
	1005 Move TEMP, X0
	1006 And TEMP, TEMP, 1
	1007 Compare TEMP, 1
	1008 JumpIfNotEqual {1030}
	1009 Move X19, [X19]
	1010 Call 0x3EB2AE0
	1011 Move X20, [X31+56]
	1012 Move TEMP, 1
	1013 Not TEMP
	1014 Move W8, TEMP
	1015 Move X0, 0xED3000
	1016 Move [X20+8], W8
	1017 Move X0, [X0+3488]
	1018 Call 0x1C17D08
	1019 Move W8, [X0+224]
	1020 Compare W8, 0
	1021 JumpIfNotEqual {1023}
	1022 Call 0x1C17DFC
	1023 Move X0, 0xED3000
	1024 Move X0, [X0+3648]
	1025 Call 0x1C17D08
	1026 Move X2, X0
	1027 Move X0, X20
	1028 Move X1, X19
	1029 Call AsyncTaskMethodBuilder`1<Int32>.SetException, X0, X1
	1030 Move W0, 8
	1031 Call 0x3EB2AF0
	1032 Move X8, [X19]
	1033 Move [X0], X8
	1034 Move X1, 0xC65000
	1035 Add X1, X1, 3672
	1036 Move X2, X31
	1037 Call 0x3EB2B00
	1038 Move X20, X0
	1039 Call 0x3EB2AE0
	1040 Move X0, X20
	1041 Call 0x1D2D690
	1042 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03250728 MOVZ W8, 0x1
	0x0325072C STRB W8, [X24 + 0x4E5]
	0x03250730 LDR X0, [X28]
	0x03250734 LDR W8, [X0 + 0xE0]
	0x03250738 CBNZ W8, 0x3250740
	0x0325073C BL 0x1C16DFC
	0x03250740 LDRB W8, [X25 + 0x4E6]
	0x03250744 CBNZ W8, 0x3250768
	0x03250748 ADRP X0, 0xED2000
	0x0325074C LDR X0, [X0 + 0xEA8]
	0x03250750 BL 0x1C16CF4
	0x03250754 ADRP X0, 0xEA4000
	0x03250758 LDR X0, [X0 + 0x7B8]
	0x0325075C BL 0x1C16CF4
	0x03250760 MOVZ W8, 0x1
	0x03250764 STRB W8, [X25 + 0x4E6]
	0x03250768 LDR X19, [X31 + 0x30]
	0x0325076C CBZ X19, 0x3250C74
	0x03250770 ADRP X9, 0xEA4000
	0x03250774 LDR X8, [X19]
	0x03250778 LDR X9, [X9 + 0x7B8]
	0x0325077C LDRB W11, [X8 + 0x130]
	0x03250780 LDR X9, [X9]
	0x03250784 LDRB W10, [X9 + 0x130]
	0x03250788 CMP W11, W10
	0x0325078C B.CC 0x32507A4
	0x03250790 LDR X11, [X8 + 0xC8]
	0x03250794 ADD X10, X11, X10, 0x3, LSL
	0x03250798 LDUR X10, [X10 - 0x8]
	0x0325079C CMP X10, X9
	0x032507A0 B.EQ 0x3250CE8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x118D000
	007 Move X21, 0xED3000
	008 Move W8, [X22+1200]
	009 Move X21, [X21+3488]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xED3000
	017 Move X0, [X0+3656]
	018 Call 0x1C17CF4
	019 Move X0, 0xED3000
	020 Move X0, [X0+3488]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1200], W8
	024 Move X0, [X21]
	025 Move X21, 0xED3000
	026 Move W8, [X0+224]
	027 Move X21, [X21+3656]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Int32>.SetStateMachine, X0, X1
	040 Return 

