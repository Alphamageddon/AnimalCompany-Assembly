Type: System.Security.Cryptography.HMACSHA256

Method: System.Void .ctor()

Disassembly:
	0x03255F94 MOV X19, X0
	0x03255F98 MOV X21, X1
	0x03255F9C CBZ W8, 0x3255FBC
	0x03255FA0 SUBS W1, W4, W20
	0x03255FA4 B.GE 0x3255FD8
	0x03255FA8 ADD W8, W20, W22
	0x03255FAC SUB W1, W8, W4
	0x03255FB0 MOV X0, X21
	0x03255FB4 MOV W3, W31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move W0, 64
	005 Move X1, X31
	006 Call Utils.GenerateRandom, X0
	007 Move X1, X0
	008 Move X0, X19
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]

Method: System.Void .ctor(System.Byte[] key)

Disassembly:
	0x03255FB8 B 0x3256004
	0x03255FBC SUBS W8, W4, W20
	0x03255FC0 B.GE 0x3256018
	0x03255FC4 ADD W8, W20, W22
	0x03255FC8 SUB W1, W8, W4
	0x03255FCC MOV X0, X21
	0x03255FD0 MOV W3, W31
	0x03255FD4 B 0x3256074
	0x03255FD8 MOV X0, X2
	0x03255FDC MOV W3, W31
	0x03255FE0 MOV W4, W1
	0x03255FE4 MOV X5, X31
	0x03255FE8 BL 0x33A8750
	0x03255FEC LDR W8, [X19 + 0x30]
	0x03255FF0 LDR X2, [X19 + 0x28]
	0x03255FF4 MOV X0, X21
	0x03255FF8 MOV W1, W22
	0x03255FFC SUB W3, W8, W20
	0x03256000 MOV W4, W20
	0x03256004 LDP X20, X19, [X31 + 0x20]
	0x03256008 LDP X22, X21, [X31 + 0x10]
	0x0325600C MOV X5, X31
	0x03256010 LDR X30, [X31], #0x30
	0x03256014 B 0x33A8750
	0x03256018 LDR W3, [X19 + 0x34]
	0x0325601C ADD W9, W3, W20
	0x03256020 SUBS W1, W9, W4
	0x03256024 B.GE 0x325604C
	0x03256028 MOV X0, X21
	0x0325602C MOV W1, W22
	0x03256030 MOV W4, W20
	0x03256034 MOV X5, X31
	0x03256038 BL 0x33A8750
	0x0325603C LDR W8, [X19 + 0x34]
	0x03256040 ADD W8, W8, W20
	0x03256044 STR W8, [X19 + 0x34]
	0x03256048 B 0x3256084
	0x0325604C MOV X0, X2
	0x03256050 MOV W3, W31
	0x03256054 MOV W4, W8
	0x03256058 MOV X5, X31
	0x0325605C BL 0x33A8750
	0x03256060 LDR X2, [X19 + 0x28]
	0x03256064 LDR W3, [X19 + 0x34]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x1188000
	008 Move X21, 0xECC000
	009 Move X22, 0xECF000
	010 Move W8, [X23+1258]
	011 Move X21, [X21+3360]
	012 Move X22, [X22+192]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xECF000
	020 Move X0, [X0+192]
	021 Call 0x1C17CF4
	022 Move X0, 0xECC000
	023 Move X0, [X0+3360]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+1258], W8
	027 Move X0, X20
	028 Move X1, X31
	029 Call HMAC..ctor, X0
	030 Move X8, [X21]
	031 Move [X20+56], X8
	032 Move X0, [X22]
	033 Call 0x1C17F10
	034 Move X21, X0
	035 Call SHA256Managed..ctor, X0
	036 Move [X20+64], X21
	037 Move X0, [X22]
	038 Call 0x1C17F10
	039 Move X21, X0
	040 Call SHA256Managed..ctor, X0
	041 Move W8, 256
	042 Move [X20+72], X21
	043 Move [X20+20], W8
	044 Move X0, X20
	045 Move X1, X19
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X22, [X31+16]
	049 Move X21, [X31+24]
	050 Move X2, X31
	051 Move X30, [X31+48]
	052 Move X23, [X31+56]
	053 Call HMAC.InitializeKey, X0, X1
	054 Return 

