Type: System.Security.Cryptography.DSASignatureFormatter

Method: System.Void .ctor()

Disassembly:
	0x03255280 STP X30, X21, [X31 - 0x20]!
	0x03255284 STP X20, X19, [X31 + 0x10]
	0x03255288 ADRP X21, 0x1187000
	0x0325528C ADRP X20, 0xECB000
	0x03255290 LDRB W8, [X21 + 0x529]
	0x03255294 LDR X20, [X20 + 0xBD8]
	0x03255298 MOV X19, X0
	0x0325529C TBNZ X8, 0x0, 0x32552CC
	0x032552A0 ADRP X0, 0xE9E000
	0x032552A4 LDR X0, [X0 + 0x618]
	0x032552A8 BL 0x1C16CF4
	0x032552AC ADRP X0, 0xECB000
	0x032552B0 LDR X0, [X0 + 0xBD8]
	0x032552B4 BL 0x1C16CF4
	0x032552B8 ADRP X0, 0xEA6000
	0x032552BC LDR X0, [X0 + 0x568]
	0x032552C0 BL 0x1C16CF4
	0x032552C4 MOVZ W8, 0x1
	0x032552C8 STRB W8, [X21 + 0x529]
	0x032552CC MOV X0, X19
	0x032552D0 MOV X1, X31
	0x032552D4 BL 0x3251230
	0x032552D8 MOVZ W8, 0x180
	0x032552DC STR W8, [X19 + 0x14]
	0x032552E0 LDR X0, [X20]
	0x032552E4 LDR W8, [X0 + 0xE0]
	0x032552E8 CBNZ W8, 0x32552F0
	0x032552EC BL 0x1C16DFC
	0x032552F0 MOV X0, X31
	0x032552F4 BL 0x325F54C
	0x032552F8 TBNZ X0, 0x0, 0x325534C
	0x032552FC ADRP X20, 0xEA6000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1188000
	006 Move X20, 0xECC000
	007 Move W8, [X21+1242]
	008 Move X20, [X20+3032]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xECC000
	015 Move X0, [X0+3032]
	016 Call 0x1C17CF4
	017 Move X0, 0xECC000
	018 Move X0, [X0+3392]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1242], W8
	022 Move X21, 0xECC000
	023 Move X21, [X21+3392]
	024 Move X0, X19
	025 Move X1, X31
	026 Call Object..ctor, X0
	027 Move X0, [X20]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, [X21]
	033 Move X1, X31
	034 Call CryptoConfig.MapNameToOID, X0
	035 Move [X19+16], X0
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Return 

