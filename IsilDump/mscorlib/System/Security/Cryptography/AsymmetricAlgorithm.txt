Type: System.Security.Cryptography.AsymmetricAlgorithm

Method: System.Void .ctor()

Disassembly:
	0x03253018 LDR X0, [X22]
	0x0325301C LDR W8, [X0 + 0xE0]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void Dispose()

Disassembly:
	0x03253020 CBNZ W8, 0x3253028

ISIL:
No ISIL was generated
Method: System.Void Clear()

Disassembly:
	0x03253024 BL 0x1C16DFC
	0x03253028 MOV X0, X20
	0x0325302C BL 0x32528CC
	0x03253030 TBNZ X0, 0x0, 0x3253080
	0x03253034 ADRP X8, 0xECF000
	0x03253038 LDR X8, [X8 + 0xF78]
	0x0325303C LDR X0, [X8]
	0x03253040 BL 0x1C16F10
	0x03253044 MOVZ W2, 0x1
	0x03253048 MOV X1, X21
	0x0325304C MOV X3, X20
	0x03253050 MOV X4, X19
	0x03253054 MOV X5, X31
	0x03253058 MOV X22, X0
	0x0325305C BL 0x32655CC
	0x03253060 MOV X0, X22
	0x03253064 LDP X20, X19, [X31 + 0x20]
	0x03253068 LDP X22, X21, [X31 + 0x10]
	0x0325306C LDP X30, X23, [X31], #0x30
	0x03253070 RET
	0x03253074 ADRP X0, 0xECF000
	0x03253078 LDR X0, [X0 + 0xF50]
	0x0325307C B 0x3253088
	0x03253080 ADRP X0, 0xECF000
	0x03253084 LDR X0, [X0 + 0xF58]
	0x03253088 BL 0x1C16D08
	0x0325308C MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x118A000
	006 Move X20, 0xEA8000
	007 Move W8, [X21+1219]
	008 Move X20, [X20+3088]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xEA8000
	015 Move X0, [X0+3088]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1219], W8
	019 Move X8, [X19]
	020 Move W1, 1
	021 Move X0, X19
	022 Move X9, [X8+392]
	023 Move X2, [X8+400]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move X0, [X20]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X1, X31
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Call GC.SuppressFinalize, X0
	037 Return 

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x03253090 BL 0x33BDD84

ISIL:
	001 Return 

Method: System.Int32 get_KeySize()

Disassembly:
	0x03253094 MOV X19, X0
	0x03253098 ADRP X0, 0xECD000

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Void set_KeySize(System.Int32 value)

Disassembly:
	0x0325309C LDR X0, [X0 + 0xCE0]
	0x032530A0 BL 0x1C16D08
	0x032530A4 BL 0x1C16F10
	0x032530A8 MOV X20, X0
	0x032530AC ADRP X0, 0xECD000
	0x032530B0 LDR X0, [X0 + 0xEF8]
	0x032530B4 BL 0x1C16D08
	0x032530B8 MOV X2, X0
	0x032530BC MOV X0, X20
	0x032530C0 MOV X1, X19
	0x032530C4 BL 0x3252374
	0x032530C8 ADRP X0, 0xECF000
	0x032530CC LDR X0, [X0 + 0xF80]
	0x032530D0 BL 0x1C16D08
	0x032530D4 MOV X1, X0
	0x032530D8 MOV X0, X20
	0x032530DC BL 0x1C16DEC
	0x032530E0 STP X30, X23, [X31 - 0x30]!
	0x032530E4 STP X22, X21, [X31 + 0x10]
	0x032530E8 STP X20, X19, [X31 + 0x20]
	0x032530EC ADRP X23, 0x1189000
	0x032530F0 ADRP X22, 0xECE000
	0x032530F4 LDRB W8, [X23 + 0x4CF]
	0x032530F8 LDR X22, [X22 + 0x320]
	0x032530FC MOV X19, X2
	0x03253100 MOV X20, X1
	0x03253104 MOV X21, X0
	0x03253108 TBNZ X8, 0x0, 0x325312C
	0x0325310C ADRP X0, 0xECF000
	0x03253110 LDR X0, [X0 + 0xF78]
	0x03253114 BL 0x1C16CF4
	0x03253118 ADRP X0, 0xECE000
	0x0325311C LDR X0, [X0 + 0x320]
	0x03253120 BL 0x1C16CF4
	0x03253124 MOVZ W8, 0x1
	0x03253128 STRB W8, [X23 + 0x4CF]
	0x0325312C LDR X0, [X22]
	0x03253130 LDR W8, [X0 + 0xE0]
	0x03253134 CBNZ W8, 0x325313C
	0x03253138 BL 0x1C16DFC
	0x0325313C MOV X0, X20
	0x03253140 BL 0x32527AC
	0x03253144 TBNZ X0, 0x0, 0x32531A4
	0x03253148 LDR X0, [X22]
	0x0325314C LDR W8, [X0 + 0xE0]
	0x03253150 CBNZ W8, 0x3253158
	0x03253154 BL 0x1C16DFC
	0x03253158 MOV X0, X20
	0x0325315C BL 0x32528CC
	0x03253160 TBNZ X0, 0x0, 0x32531B0
	0x03253164 ADRP X8, 0xECF000
	0x03253168 LDR X8, [X8 + 0xF78]
	0x0325316C LDR X0, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+24]
	005 Compare X8, 0
	006 JumpIfEqual {50}
	007 Move W9, [X8+24]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move W10, W31
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Add X11, X8, W10
	012 Move X13, [X11+32]
	013 Compare X13, 0
	014 JumpIfEqual {50}
	015 Move W12, [X13+24]
	016 Move W11, [X13+16]
	017 Compare W12, 0
	018 JumpIfEqual {23}
	019 Move W13, [X13+20]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Add W11, W11, W12
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Add W10, W10, 1
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X0, 0xED0000
	027 Move X0, [X0+3848]
	028 Call 0x1C17D08
	029 Move X1, X31
	030 Call Environment.GetResourceString, X0
	031 Move X19, X0
	032 Move X0, 0xECE000
	033 Move X0, [X0+3296]
	034 Call 0x1C17D08
	035 Call 0x1C17F10
	036 Move X1, X19
	037 Move X20, X0
	038 Call CryptographicException..ctor, X0, X1
	039 Move X0, 0xED0000
	040 Move X0, [X0+3856]
	041 Call 0x1C17D08
	042 Move X1, X0
	043 Move X0, X20
	044 Call 0x1C17DEC
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move [X0+16], W1
	048 Move X30, [X31+32]
	049 Return 
	050 Call 0x1C17F20
	051 Call 0x1C17F28

Method: System.Void FromXmlString(System.String xmlString)

Disassembly:
	0x03253198 LDP X22, X21, [X31 + 0x10]
	0x0325319C LDP X30, X23, [X31], #0x30
	0x032531A0 RET
	0x032531A4 ADRP X0, 0xECF000
	0x032531A8 LDR X0, [X0 + 0xF50]
	0x032531AC B 0x32531B8
	0x032531B0 ADRP X0, 0xECF000
	0x032531B4 LDR X0, [X0 + 0xF58]
	0x032531B8 BL 0x1C16D08
	0x032531BC MOV X1, X31
	0x032531C0 BL 0x33BDD84
	0x032531C4 MOV X19, X0
	0x032531C8 ADRP X0, 0xECD000
	0x032531CC LDR X0, [X0 + 0xCE0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xEAA000
	004 Move X0, [X0+1880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotImplementedException..ctor, X0
	010 Move X0, 0xED0000
	011 Move X0, [X0+3864]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.String ToXmlString(System.Boolean includePrivateParameters)

Disassembly:
	0x032531D0 BL 0x1C16D08
	0x032531D4 BL 0x1C16F10
	0x032531D8 MOV X20, X0
	0x032531DC ADRP X0, 0xECD000
	0x032531E0 LDR X0, [X0 + 0xEF8]
	0x032531E4 BL 0x1C16D08
	0x032531E8 MOV X2, X0
	0x032531EC MOV X0, X20
	0x032531F0 MOV X1, X19
	0x032531F4 BL 0x3252374
	0x032531F8 ADRP X0, 0xECF000
	0x032531FC LDR X0, [X0 + 0xF88]
	0x03253200 BL 0x1C16D08
	0x03253204 MOV X1, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xEAA000
	004 Move X0, [X0+1880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotImplementedException..ctor, X0
	010 Move X0, 0xED0000
	011 Move X0, [X0+3872]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

