Type: System.Security.Cryptography.RSA

Method: System.Void .ctor()

Disassembly:
	0x0325C958 ADD X31, X31, 0x70
	0x0325C95C RET

ISIL:
	001 Move X1, X31
	002 Call AsymmetricAlgorithm..ctor, X0
	003 Return 

Method: System.Security.Cryptography.RSA Create()

Disassembly:
	0x0325C960 BL 0x1C16F20
	0x0325C964 ADRP X0, 0xEC4000
	0x0325C968 LDR X0, [X0 + 0xCE0]
	0x0325C96C BL 0x1C16D08
	0x0325C970 BL 0x1C16F10
	0x0325C974 MOV X19, X0
	0x0325C978 ADRP X0, 0xEC7000
	0x0325C97C LDR X0, [X0 + 0x2C0]
	0x0325C980 B 0x325C9D4
	0x0325C984 ADRP X0, 0xE9C000
	0x0325C988 LDR X0, [X0 + 0x528]
	0x0325C98C BL 0x1C16D08
	0x0325C990 BL 0x1C16F10
	0x0325C994 MOV X19, X0
	0x0325C998 ADRP X0, 0xEC7000
	0x0325C99C LDR X0, [X0 + 0x2C8]
	0x0325C9A0 BL 0x1C16D08
	0x0325C9A4 MOV X1, X0
	0x0325C9A8 MOV X0, X19
	0x0325C9AC MOV X2, X31
	0x0325C9B0 BL 0x330E100
	0x0325C9B4 B 0x325C9E8
	0x0325C9B8 ADRP X0, 0xEC4000
	0x0325C9BC LDR X0, [X0 + 0xCE0]
	0x0325C9C0 BL 0x1C16D08
	0x0325C9C4 BL 0x1C16F10
	0x0325C9C8 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x1181000
	005 Move X20, 0xEC6000
	006 Move W8, [X19+1297]
	007 Move X20, [X20+416]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xEC6000
	013 Move X0, [X0+416]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1297], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move W8, 1
	020 Move X1, X31
	021 Move X19, X0
	022 Move [X0+42], W8
	023 Call AsymmetricAlgorithm..ctor, X0
	024 Move W1, 1024
	025 Move X0, X19
	026 Move W2, W31
	027 Call RSACryptoServiceProvider.Common, X0, X1, X2
	028 Move X0, X19
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Return X0

Method: System.Byte[] EncryptValue(System.Byte[] rgb)

Disassembly:
	0x0325C9F8 MOV X0, X19
	0x0325C9FC BL 0x1C16DEC
	0x0325CA00 SUB X31, X31, 0x90
	0x0325CA04 STR X30, [X31 + 0x80]
	0x0325CA08 LDP V0, V1, [X1 + 0x20]
	0x0325CA0C LDP V2, V3, [X1]
	0x0325CA10 LDR X0, [X0 + 0x30]
	0x0325CA14 STP V0, V1, [X31 + 0x20]
	0x0325CA18 STP V2, V3, [X31]
	0x0325CA1C CBZ X0, 0x325CA50
	0x0325CA20 LDR X8, [X0]
	0x0325CA24 LDP V0, V1, [X31]
	0x0325CA28 LDP V2, V3, [X31 + 0x20]
	0x0325CA2C ADD X1, X31, 0x40
	0x0325CA30 LDR X9, [X8 + 0x1F8]
	0x0325CA34 STP V0, V1, [X31 + 0x40]
	0x0325CA38 STP V2, V3, [X31 + 0x60]
	0x0325CA3C LDR X2, [X8 + 0x200]
	0x0325CA40 BLR X9
	0x0325CA44 LDR X30, [X31 + 0x80]
	0x0325CA48 ADD X31, X31, 0x90
	0x0325CA4C RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0xEC8000
	005 Move X0, [X0+600]
	006 Call 0x1C17D08
	007 Move X1, X31
	008 Call Environment.GetResourceString, X0
	009 Move X19, X0
	010 Move X0, 0xE98000
	011 Move X0, [X0+2880]
	012 Call 0x1C17D08
	013 Call 0x1C17F10
	014 Move X1, X19
	015 Move X2, X31
	016 Move X20, X0
	017 Call NotSupportedException..ctor, X0, X1
	018 Move X0, 0xEC8000
	019 Move X0, [X0+608]
	020 Call 0x1C17D08
	021 Move X1, X0
	022 Move X0, X20
	023 Call 0x1C17DEC

Method: System.Void FromXmlString(System.String xmlString)

Disassembly:
	0x0325CA50 BL 0x1C16F20
	0x0325CA54 STP X30, X21, [X31 - 0x20]!
	0x0325CA58 STP X20, X19, [X31 + 0x10]
	0x0325CA5C ADRP X20, 0x1180000
	0x0325CA60 ADRP X21, 0xEC4000
	0x0325CA64 LDRB W8, [X20 + 0x517]
	0x0325CA68 LDR X21, [X21 + 0xD08]
	0x0325CA6C MOV X19, X1
	0x0325CA70 TBNZ X8, 0x0, 0x325CAF4
	0x0325CA74 ADRP X0, 0xEC7000
	0x0325CA78 LDR X0, [X0 + 0x2E0]
	0x0325CA7C BL 0x1C16CF4
	0x0325CA80 ADRP X0, 0xEC4000
	0x0325CA84 LDR X0, [X0 + 0xD18]
	0x0325CA88 BL 0x1C16CF4
	0x0325CA8C ADRP X0, 0xEC4000
	0x0325CA90 LDR X0, [X0 + 0xD20]
	0x0325CA94 BL 0x1C16CF4
	0x0325CA98 ADRP X0, 0xEC4000
	0x0325CA9C LDR X0, [X0 + 0xD30]
	0x0325CAA0 BL 0x1C16CF4
	0x0325CAA4 ADRP X0, 0xEC4000
	0x0325CAA8 LDR X0, [X0 + 0xD40]
	0x0325CAAC BL 0x1C16CF4
	0x0325CAB0 ADRP X0, 0xEC7000
	0x0325CAB4 LDR X0, [X0 + 0x2E8]
	0x0325CAB8 BL 0x1C16CF4
	0x0325CABC ADRP X0, 0xEC4000
	0x0325CAC0 LDR X0, [X0 + 0xD08]
	0x0325CAC4 BL 0x1C16CF4
	0x0325CAC8 ADRP X0, 0xEC4000
	0x0325CACC LDR X0, [X0 + 0xD50]
	0x0325CAD0 BL 0x1C16CF4
	0x0325CAD4 ADRP X0, 0xEC7000
	0x0325CAD8 LDR X0, [X0 + 0x2F0]
	0x0325CADC BL 0x1C16CF4
	0x0325CAE0 ADRP X0, 0xEC4000
	0x0325CAE4 LDR X0, [X0 + 0xD58]
	0x0325CAE8 BL 0x1C16CF4
	0x0325CAEC MOVZ W8, 0x1
	0x0325CAF0 STRB W8, [X20 + 0x517]
	0x0325CAF4 LDR X1, [X21]
	0x0325CAF8 MOV X0, X19
	0x0325CAFC MOV X2, X31
	0x0325CB00 BL 0x321BA08
	0x0325CB04 TBZ X0, 0x0, 0x325CB14
	0x0325CB08 ADRP X8, 0xEC4000
	0x0325CB0C LDR X8, [X8 + 0xD40]
	0x0325CB10 B 0x325CBB0
	0x0325CB14 ADRP X8, 0xEC4000
	0x0325CB18 LDR X8, [X8 + 0xD30]
	0x0325CB1C MOV X0, X19
	0x0325CB20 MOV X2, X31
	0x0325CB24 LDR X1, [X8]
	0x0325CB28 BL 0x321BA08
	0x0325CB2C TBZ X0, 0x0, 0x325CB3C
	0x0325CB30 ADRP X8, 0xEC4000
	0x0325CB34 LDR X8, [X8 + 0xD50]
	0x0325CB38 B 0x325CBB0
	0x0325CB3C ADRP X8, 0xEC7000
	0x0325CB40 LDR X8, [X8 + 0x2E0]
	0x0325CB44 MOV X0, X19
	0x0325CB48 MOV X2, X31
	0x0325CB4C LDR X1, [X8]
	0x0325CB50 BL 0x321BA08
	0x0325CB54 TBZ X0, 0x0, 0x325CB64
	0x0325CB58 ADRP X8, 0xEC4000
	0x0325CB5C LDR X8, [X8 + 0xD20]
	0x0325CB60 B 0x325CBB0
	0x0325CB64 ADRP X8, 0xEC7000
	0x0325CB68 LDR X8, [X8 + 0x2F0]
	0x0325CB6C MOV X0, X19
	0x0325CB70 MOV X2, X31
	0x0325CB74 LDR X1, [X8]
	0x0325CB78 BL 0x321BA08
	0x0325CB7C TBZ X0, 0x0, 0x325CB8C
	0x0325CB80 ADRP X8, 0xEC4000
	0x0325CB84 LDR X8, [X8 + 0xD18]
	0x0325CB88 B 0x325CBB0
	0x0325CB8C ADRP X8, 0xEC7000
	0x0325CB90 LDR X8, [X8 + 0x2E8]
	0x0325CB94 MOV X0, X19
	0x0325CB98 MOV X2, X31
	0x0325CB9C LDR X1, [X8]
	0x0325CBA0 BL 0x321BA08
	0x0325CBA4 TBZ X0, 0x0, 0x325CBC0
	0x0325CBA8 ADRP X8, 0xEC4000
	0x0325CBAC LDR X8, [X8 + 0xD58]
	0x0325CBB0 LDR X0, [X8]
	0x0325CBB4 LDP X20, X19, [X31 + 0x10]
	0x0325CBB8 LDP X30, X21, [X31], #0x20
	0x0325CBBC RET
	0x0325CBC0 ADRP X0, 0xEC7000
	0x0325CBC4 LDR X0, [X0 + 0x2F8]
	0x0325CBC8 BL 0x1C16D08
	0x0325CBCC MOV X1, X0
	0x0325CBD0 MOV X0, X19
	0x0325CBD4 MOV X2, X31
	0x0325CBD8 BL 0x321B938
	0x0325CBDC MOV X19, X0
	0x0325CBE0 ADRP X0, 0xEC4000
	0x0325CBE4 LDR X0, [X0 + 0xCE0]
	0x0325CBE8 BL 0x1C16D08
	0x0325CBEC BL 0x1C16F10
	0x0325CBF0 MOV X1, X19
	0x0325CBF4 MOV X2, X31
	0x0325CBF8 MOV X20, X0
	0x0325CBFC BL 0x3252170
	0x0325CC00 ADRP X0, 0xEC7000
	0x0325CC04 LDR X0, [X0 + 0x300]
	0x0325CC08 BL 0x1C16D08
	0x0325CC0C MOV X1, X0
	0x0325CC10 MOV X0, X20
	0x0325CC14 BL 0x1C16DEC
	0x0325CC18 STP X30, X23, [X31 - 0x30]!
	0x0325CC1C STP X22, X21, [X31 + 0x10]
	0x0325CC20 STP X20, X19, [X31 + 0x20]
	0x0325CC24 ADRP X23, 0x1180000
	0x0325CC28 LDRB W8, [X23 + 0x518]
	0x0325CC2C MOV X19, X3
	0x0325CC30 MOV X22, X2
	0x0325CC34 MOV X20, X1
	0x0325CC38 MOV X21, X0
	0x0325CC3C TBNZ X8, 0x0, 0x325CC60
	0x0325CC40 ADRP X0, 0xEC5000
	0x0325CC44 LDR X0, [X0 + 0xD58]
	0x0325CC48 BL 0x1C16CF4
	0x0325CC4C ADRP X0, 0xEC4000
	0x0325CC50 LDR X0, [X0 + 0xD40]
	0x0325CC54 BL 0x1C16CF4
	0x0325CC58 MOVZ W8, 0x1
	0x0325CC5C STRB W8, [X23 + 0x518]
	0x0325CC60 CBZ X20, 0x325CCD0
	0x0325CC64 CBZ X19, 0x325CCF0
	0x0325CC68 ADRP X23, 0xEC5000
	0x0325CC6C LDR X23, [X23 + 0xD58]
	0x0325CC70 CBZ X22, 0x325CC80
	0x0325CC74 MOV X1, X22
	0x0325CC78 BL 0x325CA54
	0x0325CC7C B 0x325CC8C
	0x0325CC80 ADRP X8, 0xEC4000
	0x0325CC84 LDR X8, [X8 + 0xD40]
	0x0325CC88 LDR X0, [X8]
	0x0325CC8C MOV X1, X31
	0x0325CC90 BL 0x3251238
	0x0325CC94 LDR X8, [X23]
	0x0325CC98 MOV X22, X0
	0x0325CC9C LDR W9, [X8 + 0xE0]
	0x0325CCA0 CBNZ W9, 0x325CCAC
	0x0325CCA4 MOV X0, X8
	0x0325CCA8 BL 0x1C16DFC
	0x0325CCAC MOV X0, X21
	0x0325CCB0 MOV X1, X22
	0x0325CCB4 MOV X2, X20
	0x0325CCB8 MOV X3, X19
	0x0325CCBC LDP X20, X19, [X31 + 0x20]
	0x0325CCC0 LDP X22, X21, [X31 + 0x10]
	0x0325CCC4 MOV X4, X31
	0x0325CCC8 LDP X30, X23, [X31], #0x30
	0x0325CCCC B 0x321ADEC
	0x0325CCD0 ADRP X0, 0xE9C000
	0x0325CCD4 LDR X0, [X0 + 0x528]
	0x0325CCD8 BL 0x1C16D08
	0x0325CCDC BL 0x1C16F10
	0x0325CCE0 MOV X19, X0
	0x0325CCE4 ADRP X0, 0xEC5000
	0x0325CCE8 LDR X0, [X0 + 0xF08]
	0x0325CCEC B 0x325CD0C
	0x0325CCF0 ADRP X0, 0xE9C000
	0x0325CCF4 LDR X0, [X0 + 0x528]
	0x0325CCF8 BL 0x1C16D08
	0x0325CCFC BL 0x1C16F10
	0x0325CD00 MOV X19, X0
	0x0325CD04 ADRP X0, 0xEC5000
	0x0325CD08 LDR X0, [X0 + 0xF10]
	0x0325CD0C BL 0x1C16D08
	0x0325CD10 MOV X1, X0
	0x0325CD14 MOV X0, X19
	0x0325CD18 MOV X2, X31
	0x0325CD1C BL 0x330E100
	0x0325CD20 ADRP X0, 0xEC7000
	0x0325CD24 LDR X0, [X0 + 0x308]
	0x0325CD28 BL 0x1C16D08
	0x0325CD2C MOV X1, X0
	0x0325CD30 MOV X0, X19
	0x0325CD34 BL 0x1C16DEC
	0x0325CD38 STP X30, X19, [X31 - 0x10]!
	0x0325CD3C LDRB W8, [X0 + 0x2B]
	0x0325CD40 CBNZ W8, 0x325CD80
	0x0325CD44 LDRB W8, [X0 + 0x29]
	0x0325CD48 MOV X19, X0
	0x0325CD4C CBZ W8, 0x325CD68
	0x0325CD50 LDRB W8, [X19 + 0x28]
	0x0325CD54 CBNZ W8, 0x325CD68
	0x0325CD58 LDR X0, [X19 + 0x20]
	0x0325CD5C CBZ X0, 0x325CD88
	0x0325CD60 MOV X1, X31
	0x0325CD64 BL 0x3219380
	0x0325CD68 LDR X0, [X19 + 0x30]
	0x0325CD6C CBZ X0, 0x325CD78
	0x0325CD70 MOV X1, X31
	0x0325CD74 BL 0x3252024
	0x0325CD78 MOVZ W8, 0x1
	0x0325CD7C STRB W8, [X19 + 0x2B]
	0x0325CD80 LDP X30, X19, [X31], #0x10
	0x0325CD84 RET
	0x0325CD88 BL 0x1C16F20
	0x0325CD8C STR X30, [X31 - 0x20]!
	0x0325CD90 STP X20, X19, [X31 + 0x10]
	0x0325CD94 LDRB W8, [X0 + 0x28]
	0x0325CD98 CBZ W8, 0x325CE00
	0x0325CD9C LDRB W8, [X0 + 0x29]
	0x0325CDA0 MOV X19, X0
	0x0325CDA4 CBNZ W8, 0x325CE00
	0x0325CDA8 LDR X0, [X19 + 0x30]
	0x0325CDAC CBZ X0, 0x325CE0C
	0x0325CDB0 LDR X20, [X19 + 0x20]
	0x0325CDB4 MOV X1, X31
	0x0325CDB8 BL 0x321C5AC
	0x0325CDBC LDR X8, [X19]
	0x0325CDC0 LDP X9, X2, [X8 + 0x1C8]
	0x0325CDC4 ORN W8, W31, W0, 0x0
	0x0325CDC8 AND W1, W8, 0x1
	0x0325CDCC MOV X0, X19
	0x0325CDD0 BLR X9
	0x0325CDD4 CBZ X20, 0x325CE0C
	0x0325CDD8 MOV X1, X0
	0x0325CDDC MOV X0, X20
	0x0325CDE0 MOV X2, X31
	0x0325CDE4 BL 0x3218B14
	0x0325CDE8 LDR X0, [X19 + 0x20]
	0x0325CDEC CBZ X0, 0x325CE0C
	0x0325CDF0 MOV X1, X31
	0x0325CDF4 BL 0x3218E08
	0x0325CDF8 MOVZ W8, 0x1
	0x0325CDFC STRB W8, [X19 + 0x29]
	0x0325CE00 LDP X20, X19, [X31 + 0x10]
	0x0325CE04 LDR X30, [X31], #0x20
	0x0325CE08 RET
	0x0325CE0C BL 0x1C16F20
	0x0325CE10 SUB X31, X31, 0x170
	0x0325CE14 STP X29, X30, [X31 + 0x140]
	0x0325CE18 STP X22, X21, [X31 + 0x150]
	0x0325CE1C STP X20, X19, [X31 + 0x160]
	0x0325CE20 ADRP X21, 0x1180000
	0x0325CE24 LDRB W8, [X21 + 0x519]
	0x0325CE28 MOV X20, X1
	0x0325CE2C MOV X19, X0
	0x0325CE30 TBNZ X8, 0x0, 0x325CE60
	0x0325CE34 ADRP X0, 0xEC5000
	0x0325CE38 LDR X0, [X0 + 0x4C8]
	0x0325CE3C BL 0x1C16CF4
	0x0325CE40 ADRP X0, 0xEC5000
	0x0325CE44 LDR X0, [X0 + 0xC90]
	0x0325CE48 BL 0x1C16CF4
	0x0325CE4C ADRP X0, 0xEC5000
	0x0325CE50 LDR X0, [X0 + 0x1A0]
	0x0325CE54 BL 0x1C16CF4
	0x0325CE58 MOVZ W8, 0x1
	0x0325CE5C STRB W8, [X21 + 0x519]
	0x0325CE60 CBZ X20, 0x325CFD0
	0x0325CE64 MOV X0, X20
	0x0325CE68 MOV X1, X31
	0x0325CE6C BL 0x3217A90
	0x0325CE70 MOV X21, X0
	0x0325CE74 CBZ X0, 0x325D018
	0x0325CE78 ADRP X8, 0xEC5000
	0x0325CE7C LDR X8, [X8 + 0x1A0]
	0x0325CE80 LDR X9, [X21]
	0x0325CE84 LDR X8, [X8]
	0x0325CE88 CMP X9, X8
	0x0325CE8C B.EQ 0x325CEDC
	0x0325CE90 LDR X8, [X21]
	0x0325CE94 LDP X9, X2, [X8 + 0x1E8]
	0x0325CE98 ADD X8, X31, 0x100
	0x0325CE9C MOVZ W1, 0x1
	0x0325CEA0 MOV X0, X21
	0x0325CEA4 BLR X9
	0x0325CEA8 LDP V0, V1, [X31 + 0x100]
	0x0325CEAC LDP V2, V3, [X31 + 0x120]
	0x0325CEB0 STP V0, V1, [X31 + 0x40]
	0x0325CEB4 STP V2, V3, [X31 + 0x60]
	0x0325CEB8 LDR X8, [X19]
	0x0325CEBC LDR X9, [X8 + 0x1F8]
	0x0325CEC0 STP V0, V1, [X31 + 0xC0]
	0x0325CEC4 STP V2, V3, [X31 + 0xE0]
	0x0325CEC8 LDR X2, [X8 + 0x200]
	0x0325CECC ADD X1, X31, 0xC0
	0x0325CED0 MOV X0, X19
	0x0325CED4 BLR X9
	0x0325CED8 B 0x325CF38
	0x0325CEDC LDR X0, [X21 + 0x30]
	0x0325CEE0 CBZ X0, 0x325D090
	0x0325CEE4 MOV X1, X31
	0x0325CEE8 BL 0x321C5AC
	0x0325CEEC LDR X8, [X21]
	0x0325CEF0 LDP X9, X2, [X8 + 0x1E8]
	0x0325CEF4 ORN W8, W31, W0, 0x0
	0x0325CEF8 AND W1, W8, 0x1
	0x0325CEFC ADD X8, X31, 0x100
	0x0325CF00 MOV X0, X21
	0x0325CF04 BLR X9
	0x0325CF08 LDP V1, V0, [X31 + 0x120]
	0x0325CF0C LDP V3, V2, [X31 + 0x100]
	0x0325CF10 STP V1, V0, [X31 + 0xA0]
	0x0325CF14 STP V3, V2, [X31 + 0x80]
	0x0325CF18 LDR X8, [X19]
	0x0325CF1C ADD X1, X31, 0x100
	0x0325CF20 MOV X0, X19
	0x0325CF24 LDR X9, [X8 + 0x1F8]
	0x0325CF28 STP V3, V2, [X31 + 0x100]
	0x0325CF2C STP V1, V0, [X31 + 0x120]
	0x0325CF30 LDR X2, [X8 + 0x200]
	0x0325CF34 BLR X9
	0x0325CF38 ADRP X8, 0xEC5000
	0x0325CF3C LDR X8, [X8 + 0x4C8]
	0x0325CF40 LDR X0, [X8]
	0x0325CF44 BL 0x1C16F10
	0x0325CF48 MOVZ W1, 0x1
	0x0325CF4C MOV X2, X31
	0x0325CF50 MOV X21, X0
	0x0325CF54 BL 0x32525C4
	0x0325CF58 LDR W8, [X20 + 0x18]
	0x0325CF5C CMP W8, 0x5
	0x0325CF60 B.LS 0x325D01C
	0x0325CF64 CBZ X21, 0x325D090
	0x0325CF68 LDRB W8, [X20 + 0x25]
	0x0325CF6C ADRP X20, 0xEC5000
	0x0325CF70 LDR X20, [X20 + 0xC90]
	0x0325CF74 CMP W8, 0x24
	0x0325CF78 MOVZ W8, 0x1
	0x0325CF7C CINC W8, W8, EQ
	0x0325CF80 STR W8, [X21 + 0x28]
	0x0325CF84 BL 0x325C3CC
	0x0325CF88 TBZ X0, 0x0, 0x325CFA0
	0x0325CF8C LDR W8, [X21 + 0x2C]
	0x0325CF90 MOV X0, X21
	0x0325CF94 MOV X2, X31
	0x0325CF98 ORR W1, W8, 0x1

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X21, 0x1181000
	015 Move W8, [X21+1298]
	016 Move X20, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {54}
	022 Move X0, 0xEA1000
	023 Move X0, [X0+2536]
	024 Call 0x1C17CF4
	025 Move X0, 0xEC7000
	026 Move X0, [X0+3984]
	027 Call 0x1C17CF4
	028 Move X0, 0xEC8000
	029 Move X0, [X0+616]
	030 Call 0x1C17CF4
	031 Move X0, 0xEC8000
	032 Move X0, [X0+624]
	033 Call 0x1C17CF4
	034 Move X0, 0xEC7000
	035 Move X0, [X0+3992]
	036 Call 0x1C17CF4
	037 Move X0, 0xEC8000
	038 Move X0, [X0+632]
	039 Call 0x1C17CF4
	040 Move X0, 0xEC0000
	041 Move X0, [X0+3040]
	042 Call 0x1C17CF4
	043 Move X0, 0xEC8000
	044 Move X0, [X0+640]
	045 Call 0x1C17CF4
	046 Move X0, 0xEC8000
	047 Move X0, [X0+648]
	048 Call 0x1C17CF4
	049 Move X0, 0xEC7000
	050 Move X0, [X0+4016]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X21+1298], W8
	054 Compare X20, 0
	055 JumpIfEqual {274}
	056 Move X8, 0xEC7000
	057 Move X8, [X8+3984]
	058 Move X0, [X8]
	059 Call 0x1C17F10
	060 Move X1, X20
	061 Move X2, X31
	062 Move X21, X0
	063 Call Parser..ctor, X0, X1
	064 Compare X21, 0
	065 JumpIfEqual {273}
	066 Move X0, X21
	067 Move X1, X31
	068 Call Parser.GetTopElement, X0
	069 Compare X0, 0
	070 JumpIfEqual {273}
	071 Move X8, 0xEC8000
	072 Move X8, [X8+648]
	073 Move X2, X31
	074 Move X20, X0
	075 Move X1, [X8]
	076 Call SecurityElement.SearchForTextOfLocalName, X0, X1
	077 Compare X0, 0
	078 JumpIfEqual {292}
	079 Move X28, 0xEA1000
	080 Move X22, 0xEC8000
	081 Move X28, [X28+2536]
	082 Move X22, [X22+616]
	083 Move X1, X31
	084 Call Utils.DiscardWhiteSpaces, X0
	085 Move X8, [X28]
	086 Move X21, X0
	087 Move W9, [X8+224]
	088 Compare W9, 0
	089 JumpIfNotEqual {92}
	090 Move X0, X8
	091 Call 0x1C17DFC
	092 Move X0, X21
	093 Move X1, X31
	094 Call Convert.FromBase64String, X0
	095 Move X1, [X22]
	096 Move X21, X0
	097 Move X0, X20
	098 Move X2, X31
	099 Call SecurityElement.SearchForTextOfLocalName, X0, X1
	100 Compare X0, 0
	101 JumpIfEqual {316}
	102 Move X23, 0xEC7000
	103 Move X23, [X23+4016]
	104 Move X1, X31
	105 Call Utils.DiscardWhiteSpaces, X0
	106 Move X8, [X28]
	107 Move X22, X0
	108 Move W9, [X8+224]
	109 Compare W9, 0
	110 JumpIfNotEqual {113}
	111 Move X0, X8
	112 Call 0x1C17DFC
	113 Move X24, 0xEC7000
	114 Move X24, [X24+3992]
	115 Move X0, X22
	116 Move X1, X31
	117 Call Convert.FromBase64String, X0
	118 Move X1, [X23]
	119 Move X22, X0
	120 Move X0, X20
	121 Move X2, X31
	122 Call SecurityElement.SearchForTextOfLocalName, X0, X1
	123 Compare X0, 0
	124 JumpIfEqual {138}
	125 Move X1, X31
	126 Call Utils.DiscardWhiteSpaces, X0
	127 Move X8, [X28]
	128 Move X23, X0
	129 Move W9, [X8+224]
	130 Compare W9, 0
	131 JumpIfNotEqual {134}
	132 Move X0, X8
	133 Call 0x1C17DFC
	134 Move X0, X23
	135 Move X1, X31
	136 Call Convert.FromBase64String, X0
	137 Move X23, X0
	138 Move X23, X31
	139 Move X1, [X24]
	140 Move X25, 0xEC8000
	141 Move X25, [X25+640]
	142 Move X0, X20
	143 Move X2, X31
	144 Call SecurityElement.SearchForTextOfLocalName, X0, X1
	145 Compare X0, 0
	146 JumpIfEqual {160}
	147 Move X1, X31
	148 Call Utils.DiscardWhiteSpaces, X0
	149 Move X8, [X28]
	150 Move X24, X0
	151 Move W9, [X8+224]
	152 Compare W9, 0
	153 JumpIfNotEqual {156}
	154 Move X0, X8
	155 Call 0x1C17DFC
	156 Move X0, X24
	157 Move X1, X31
	158 Call Convert.FromBase64String, X0
	159 Move X24, X0
	160 Move X24, X31
	161 Move X1, [X25]
	162 Move X26, 0xEC8000
	163 Move X26, [X26+632]
	164 Move X0, X20
	165 Move X2, X31
	166 Call SecurityElement.SearchForTextOfLocalName, X0, X1
	167 Compare X0, 0
	168 JumpIfEqual {182}
	169 Move X1, X31
	170 Call Utils.DiscardWhiteSpaces, X0
	171 Move X8, [X28]
	172 Move X25, X0
	173 Move W9, [X8+224]
	174 Compare W9, 0
	175 JumpIfNotEqual {178}
	176 Move X0, X8
	177 Call 0x1C17DFC
	178 Move X0, X25
	179 Move X1, X31
	180 Call Convert.FromBase64String, X0
	181 Move X25, X0
	182 Move X25, X31
	183 Move X1, [X26]
	184 Move X27, 0xEC8000
	185 Move X27, [X27+624]
	186 Move X0, X20
	187 Move X2, X31
	188 Call SecurityElement.SearchForTextOfLocalName, X0, X1
	189 Compare X0, 0
	190 JumpIfEqual {204}
	191 Move X1, X31
	192 Call Utils.DiscardWhiteSpaces, X0
	193 Move X8, [X28]
	194 Move X26, X0
	195 Move W9, [X8+224]
	196 Compare W9, 0
	197 JumpIfNotEqual {200}
	198 Move X0, X8
	199 Call 0x1C17DFC
	200 Move X0, X26
	201 Move X1, X31
	202 Call Convert.FromBase64String, X0
	203 Move X26, X0
	204 Move X26, X31
	205 Move X1, [X27]
	206 Move X29, 0xEC0000
	207 Move X29, [X29+3040]
	208 Move X0, X20
	209 Move X2, X31
	210 Call SecurityElement.SearchForTextOfLocalName, X0, X1
	211 Compare X0, 0
	212 JumpIfEqual {226}
	213 Move X1, X31
	214 Call Utils.DiscardWhiteSpaces, X0
	215 Move X8, [X28]
	216 Move X27, X0
	217 Move W9, [X8+224]
	218 Compare W9, 0
	219 JumpIfNotEqual {222}
	220 Move X0, X8
	221 Call 0x1C17DFC
	222 Move X0, X27
	223 Move X1, X31
	224 Call Convert.FromBase64String, X0
	225 Move X27, X0
	226 Move X27, X31
	227 Move X1, [X29]
	228 Move X0, X20
	229 Move X2, X31
	230 Call SecurityElement.SearchForTextOfLocalName, X0, X1
	231 Compare X0, 0
	232 JumpIfEqual {245}
	233 Move X1, X31
	234 Call Utils.DiscardWhiteSpaces, X0
	235 Move X8, [X28]
	236 Move X20, X0
	237 Move W9, [X8+224]
	238 Compare W9, 0
	239 JumpIfNotEqual {242}
	240 Move X0, X8
	241 Call 0x1C17DFC
	242 Move X0, X20
	243 Move X1, X31
	244 Call Convert.FromBase64String, X0
	245 Move X8, [X19]
	246 Add X1, X31, 0
	247 Move X9, [X8+504]
	248 Move [X31], X22
	249 Move [X31+8], X21
	250 Move [X31+16], X23
	251 Move [X31+24], X24
	252 Move [X31+32], X25
	253 Move [X31+40], X26
	254 Move [X31+48], X27
	255 Move [X31+56], X0
	256 Move X2, [X8+512]
	257 Move X0, X19
	258 NotImplemented "Instruction BLR not yet implemented."
	259 Move X20, [X31+144]
	260 Move X19, [X31+152]
	261 Move X22, [X31+128]
	262 Move X21, [X31+136]
	263 Move X24, [X31+112]
	264 Move X23, [X31+120]
	265 Move X26, [X31+96]
	266 Move X25, [X31+104]
	267 Move X28, [X31+80]
	268 Move X27, [X31+88]
	269 Move X29, [X31+64]
	270 Move X30, [X31+72]
	271 Add X31, X31, 160
	272 Return 
	273 Call 0x1C17F20
	274 Move X0, 0xE9D000
	275 Move X0, [X0+1320]
	276 Call 0x1C17D08
	277 Call 0x1C17F10
	278 Move X19, X0
	279 Move X0, 0xEC7000
	280 Move X0, [X0+4032]
	281 Call 0x1C17D08
	282 Move X1, X0
	283 Move X0, X19
	284 Move X2, X31
	285 Call ArgumentNullException..ctor, X0, X1
	286 Move X0, 0xEC8000
	287 Move X0, [X0+656]
	288 Call 0x1C17D08
	289 Move X1, X0
	290 Move X0, X19
	291 Call 0x1C17DEC
	292 Move X0, 0xE98000
	293 Move X0, [X0+2512]
	294 Call 0x1C17D08
	295 Move W1, 2
	296 Call 0x1C17D6C
	297 Move X19, X0
	298 Call 0x19913C0
	299 Move X20, 0xEC8000
	300 Move X20, [X20+664]
	301 Move X0, X20
	302 Call 0x1C17D08
	303 Move X1, X0
	304 Move X0, X19
	305 Call 0x19990B4
	306 Move X0, X20
	307 Call 0x1C17D08
	308 Move X2, X0
	309 Move X0, X19
	310 Move X1, X31
	311 Call 0x1994444
	312 Move X0, X19
	313 Call 0x19913C0
	314 Move X20, 0xEC8000
	315 Move X20, [X20+648]
	316 Move X0, 0xE98000
	317 Move X0, [X0+2512]
	318 Call 0x1C17D08
	319 Move W1, 2
	320 Call 0x1C17D6C
	321 Move X19, X0
	322 Call 0x19913C0
	323 Move X20, 0xEC8000
	324 Move X20, [X20+664]
	325 Move X0, X20
	326 Call 0x1C17D08
	327 Move X1, X0
	328 Move X0, X19
	329 Call 0x19990B4
	330 Move X0, X20
	331 Call 0x1C17D08
	332 Move X2, X0
	333 Move X0, X19
	334 Move X1, X31
	335 Call 0x1994444
	336 Move X0, X19
	337 Call 0x19913C0
	338 Move X20, 0xEC8000
	339 Move X20, [X20+616]
	340 Move X0, X20
	341 Call 0x1C17D08
	342 Move X1, X0
	343 Move X0, X19
	344 Call 0x19990B4
	345 Move X0, X20
	346 Call 0x1C17D08
	347 Move X2, X0
	348 Move W1, 1
	349 Move X0, X19
	350 Call 0x1994444
	351 Move X0, 0xEC7000
	352 Move X0, [X0+4056]
	353 Call 0x1C17D08
	354 Move X1, X19
	355 Move X2, X31
	356 Call Environment.GetResourceString, X0, X1
	357 Move X19, X0
	358 Move X0, 0xEC5000
	359 Move X0, [X0+3296]
	360 Call 0x1C17D08
	361 Call 0x1C17F10
	362 Move X1, X19
	363 Move X2, X31
	364 Move X20, X0
	365 Call CryptographicException..ctor, X0, X1
	366 Move X0, 0xEC8000
	367 Move X0, [X0+656]
	368 Call 0x1C17D08
	369 Move X1, X0
	370 Move X0, X20
	371 Call 0x1C17DEC

Method: System.String ToXmlString(System.Boolean includePrivateParameters)

Disassembly:
	0x0325CF9C BL 0x3252470
	0x0325CFA0 LDR X0, [X20]
	0x0325CFA4 BL 0x1C16F10
	0x0325CFA8 MOV X1, X21
	0x0325CFAC MOV X2, X31
	0x0325CFB0 MOV X20, X0
	0x0325CFB4 BL 0x3217CF4
	0x0325CFB8 STR X20, [X19 + 0x20]
	0x0325CFBC LDP X20, X19, [X31 + 0x160]
	0x0325CFC0 LDP X22, X21, [X31 + 0x150]
	0x0325CFC4 LDP X29, X30, [X31 + 0x140]
	0x0325CFC8 ADD X31, X31, 0x170
	0x0325CFCC RET
	0x0325CFD0 ADRP X0, 0xE9C000
	0x0325CFD4 LDR X0, [X0 + 0x528]
	0x0325CFD8 BL 0x1C16D08
	0x0325CFDC BL 0x1C16F10
	0x0325CFE0 MOV X19, X0
	0x0325CFE4 ADRP X0, 0xEC7000
	0x0325CFE8 LDR X0, [X0 + 0x310]
	0x0325CFEC BL 0x1C16D08
	0x0325CFF0 MOV X1, X0
	0x0325CFF4 MOV X0, X19
	0x0325CFF8 MOV X2, X31
	0x0325CFFC BL 0x330E100
	0x0325D000 ADRP X0, 0xEC6000
	0x0325D004 LDR X0, [X0 + 0x318]
	0x0325D008 BL 0x1C16D08
	0x0325D00C MOV X1, X0
	0x0325D010 MOV X0, X19
	0x0325D014 BL 0x1C16DEC
	0x0325D018 BL 0x1C16F20
	0x0325D01C BL 0x1C16F28
	0x0325D020 B 0x325D028
	0x0325D024 B 0x325D028
	0x0325D028 MOV X22, X0
	0x0325D02C CMP W1, 0x1
	0x0325D030 B.NE 0x325D0BC
	0x0325D034 MOV X0, X22
	0x0325D038 BL 0x3EB1AD0
	0x0325D03C MOV X22, X0
	0x0325D040 ADRP X0, 0xE9C000
	0x0325D044 LDR X0, [X0 + 0xCC0]
	0x0325D048 BL 0x1C16D08
	0x0325D04C LDR X8, [X22]
	0x0325D050 LDR X1, [X8]
	0x0325D054 BL 0x1C17270
	0x0325D058 TBZ X0, 0x0, 0x325D094
	0x0325D05C BL 0x3EB1AE0
	0x0325D060 CBZ X21, 0x325D090
	0x0325D064 LDR X8, [X21]
	0x0325D068 MOV X0, X21
	0x0325D06C MOV W1, W31
	0x0325D070 LDP X9, X2, [X8 + 0x1E8]
	0x0325D074 ADD X8, X31, 0x100
	0x0325D078 BLR X9
	0x0325D07C LDP V1, V0, [X31 + 0x120]
	0x0325D080 LDP V3, V2, [X31 + 0x100]
	0x0325D084 STP V1, V0, [X31 + 0x20]
	0x0325D088 STP V3, V2, [X31]
	0x0325D08C B 0x325CF18
	0x0325D090 BL 0x1C16F20
	0x0325D094 MOVZ W0, 0x8
	0x0325D098 BL 0x3EB1AF0
	0x0325D09C LDR X8, [X22]
	0x0325D0A0 STR X8, [X0]
	0x0325D0A4 ADRP X1, 0xC57000
	0x0325D0A8 ADD X1, X1, 0xE58
	0x0325D0AC MOV X2, X31
	0x0325D0B0 BL 0x3EB1B00
	0x0325D0B4 MOV X22, X0
	0x0325D0B8 BL 0x3EB1AE0
	0x0325D0BC MOV X0, X22
	0x0325D0C0 BL 0x1D2C690
	0x0325D0C4 BL 0x1990590
	0x0325D0C8 STP X30, X19, [X31 - 0x10]!
	0x0325D0CC MOV X1, X31
	0x0325D0D0 MOV X19, X0
	0x0325D0D4 BL 0x3251230
	0x0325D0D8 MOVZ W8, 0xA0
	0x0325D0DC STR W8, [X19 + 0x14]
	0x0325D0E0 LDP X30, X19, [X31], #0x10
	0x0325D0E4 RET
	0x0325D0E8 STR X30, [X31 - 0x20]!
	0x0325D0EC STP X20, X19, [X31 + 0x10]
	0x0325D0F0 ADRP X19, 0x117F000
	0x0325D0F4 ADRP X20, 0xEC6000
	0x0325D0F8 LDRB W8, [X19 + 0x51A]
	0x0325D0FC LDR X20, [X20 + 0x320]
	0x0325D100 TBNZ X8, 0x0, 0x325D118
	0x0325D104 ADRP X0, 0xEC6000
	0x0325D108 LDR X0, [X0 + 0x320]
	0x0325D10C BL 0x1C16CF4
	0x0325D110 MOVZ W8, 0x1
	0x0325D114 STRB W8, [X19 + 0x51A]
	0x0325D118 LDR X0, [X20]
	0x0325D11C BL 0x1C16F10
	0x0325D120 MOV X1, X31
	0x0325D124 MOV X19, X0
	0x0325D128 BL 0x32647C0
	0x0325D12C MOV X0, X19
	0x0325D130 LDP X20, X19, [X31 + 0x10]
	0x0325D134 LDR X30, [X31], #0x20
	0x0325D138 RET
	0x0325D13C STR X30, [X31 - 0x10]!
	0x0325D140 LDR X8, [X0 + 0x38]
	0x0325D144 STR X31, [X0 + 0x30]
	0x0325D148 CBZ X8, 0x325D1BC
	0x0325D14C LDR W9, [X8 + 0x18]
	0x0325D150 CBZ W9, 0x325D1B8
	0x0325D154 MOVZ W10, 0x2301
	0x0325D158 MOVK W10, 0x67450000
	0x0325D15C CMP W9, 0x1
	0x0325D160 STR W10, [X8 + 0x20]
	0x0325D164 B.EQ 0x325D1B8
	0x0325D168 MOVZ W10, 0xAB89
	0x0325D16C MOVK W10, 0xEFCD0000
	0x0325D170 CMP W9, 0x2
	0x0325D174 STR W10, [X8 + 0x24]
	0x0325D178 B.LS 0x325D1B8
	0x0325D17C MOVZ W10, 0xDCFE
	0x0325D180 MOVK W10, 0x98BA0000
	0x0325D184 CMP W9, 0x3
	0x0325D188 STR W10, [X8 + 0x28]
	0x0325D18C B.EQ 0x325D1B8
	0x0325D190 MOVZ W10, 0x5476
	0x0325D194 MOVK W10, 0x10320000
	0x0325D198 CMP W9, 0x4
	0x0325D19C STR W10, [X8 + 0x2C]
	0x0325D1A0 B.LS 0x325D1B8
	0x0325D1A4 MOVZ W9, 0xE1F0
	0x0325D1A8 MOVK W9, 0xC3D20000
	0x0325D1AC STR W9, [X8 + 0x30]
	0x0325D1B0 LDR X30, [X31], #0x10
	0x0325D1B4 RET
	0x0325D1B8 BL 0x1C16F28
	0x0325D1BC BL 0x1C16F20
	0x0325D1C0 STP X30, X19, [X31 - 0x10]!
	0x0325D1C4 MOV X19, X0
	0x0325D1C8 BL 0x325D13C
	0x0325D1CC LDR X0, [X19 + 0x28]
	0x0325D1D0 CBZ X0, 0x325D200
	0x0325D1D4 LDR W2, [X0 + 0x18]
	0x0325D1D8 MOV W1, W31
	0x0325D1DC MOV X3, X31
	0x0325D1E0 BL 0x339FA34
	0x0325D1E4 LDR X0, [X19 + 0x40]
	0x0325D1E8 CBZ X0, 0x325D200
	0x0325D1EC LDR W2, [X0 + 0x18]
	0x0325D1F0 MOV W1, W31
	0x0325D1F4 MOV X3, X31
	0x0325D1F8 LDP X30, X19, [X31], #0x10
	0x0325D1FC B 0x339FA34
	0x0325D200 BL 0x1C16F20
	0x0325D204 B 0x325D208
	0x0325D208 STP X30, X27, [X31 - 0x50]!
	0x0325D20C STP X26, X25, [X31 + 0x10]
	0x0325D210 STP X24, X23, [X31 + 0x20]
	0x0325D214 STP X22, X21, [X31 + 0x30]
	0x0325D218 STP X20, X19, [X31 + 0x40]
	0x0325D21C LDP X8, X9, [X0 + 0x30]
	0x0325D220 MOV W22, W3
	0x0325D224 MOV W19, W2
	0x0325D228 MOV X20, X1
	0x0325D22C MOV X21, X0
	0x0325D230 ADD X10, X8, W3, SXTW
	0x0325D234 STR X10, [X0 + 0x30]
	0x0325D238 CBZ X9, 0x325D250
	0x0325D23C LDR W10, [X9 + 0x18]
	0x0325D240 ADD X9, X9, 0x20
	0x0325D244 CMP W10, 0x0
	0x0325D248 CSEL X23, X31, X9, EQ
	0x0325D24C B 0x325D254
	0x0325D250 MOV X23, X31
	0x0325D254 LDR X2, [X21 + 0x28]
	0x0325D258 AND W24, W8, 0x3F
	0x0325D25C CBZ X2, 0x325D274
	0x0325D260 LDR W8, [X2 + 0x18]
	0x0325D264 ADD X9, X2, 0x20
	0x0325D268 CMP W8, 0x0
	0x0325D26C CSEL X25, X31, X9, EQ
	0x0325D270 B 0x325D278
	0x0325D274 MOV X25, X31
	0x0325D278 LDR X8, [X21 + 0x40]
	0x0325D27C CBZ X8, 0x325D298
	0x0325D280 LDR W9, [X8 + 0x18]
	0x0325D284 ADD X8, X8, 0x20
	0x0325D288 CMP W9, 0x0
	0x0325D28C CSEL X26, X31, X8, EQ
	0x0325D290 CBNZ W24, 0x325D2A0
	0x0325D294 B 0x325D2E8
	0x0325D298 MOV X26, X31
	0x0325D29C CBZ W24, 0x325D2E8
	0x0325D2A0 ADD W8, W24, W22
	0x0325D2A4 CMP W8, 0x40
	0x0325D2A8 B.LT 0x325D2E8
	0x0325D2AC MOVZ W8, 0x40
	0x0325D2B0 SUB W27, W8, W24
	0x0325D2B4 MOV X0, X20
	0x0325D2B8 MOV W1, W19
	0x0325D2BC MOV W3, W24
	0x0325D2C0 MOV W4, W27
	0x0325D2C4 MOV X5, X31
	0x0325D2C8 BL 0x33A8750
	0x0325D2CC MOV X0, X26
	0x0325D2D0 MOV X1, X23
	0x0325D2D4 MOV X2, X25
	0x0325D2D8 ADD W19, W27, W19
	0x0325D2DC SUB W22, W22, W27
	0x0325D2E0 BL 0x325D538
	0x0325D2E4 MOV W24, W31
	0x0325D2E8 CMP W22, 0x40
	0x0325D2EC B.LT 0x325D334
	0x0325D2F0 LDR X2, [X21 + 0x28]
	0x0325D2F4 MOVZ W4, 0x40
	0x0325D2F8 MOV X0, X20
	0x0325D2FC MOV W1, W19
	0x0325D300 MOV W3, W31
	0x0325D304 MOV X5, X31
	0x0325D308 BL 0x33A8750
	0x0325D30C MOV X0, X26
	0x0325D310 MOV X1, X23
	0x0325D314 MOV X2, X25
	0x0325D318 ADD W19, W19, 0x40
	0x0325D31C SUB W27, W22, 0x40
	0x0325D320 BL 0x325D538
	0x0325D324 CMP W22, 0x7F
	0x0325D328 MOV W22, W27
	0x0325D32C B.GT 0x325D2F0
	0x0325D330 B 0x325D338
	0x0325D334 MOV W27, W22
	0x0325D338 CMP W27, 0x1
	0x0325D33C B.LT 0x325D370
	0x0325D340 LDR X2, [X21 + 0x28]
	0x0325D344 MOV X0, X20
	0x0325D348 MOV W1, W19
	0x0325D34C MOV W3, W24
	0x0325D350 LDP X20, X19, [X31 + 0x40]
	0x0325D354 LDP X22, X21, [X31 + 0x30]
	0x0325D358 LDP X24, X23, [X31 + 0x20]
	0x0325D35C LDP X26, X25, [X31 + 0x10]
	0x0325D360 MOV W4, W27
	0x0325D364 MOV X5, X31
	0x0325D368 LDP X30, X27, [X31], #0x50
	0x0325D36C B 0x33A8750
	0x0325D370 LDP X20, X19, [X31 + 0x40]
	0x0325D374 LDP X22, X21, [X31 + 0x30]
	0x0325D378 LDP X24, X23, [X31 + 0x20]
	0x0325D37C LDP X26, X25, [X31 + 0x10]
	0x0325D380 LDP X30, X27, [X31], #0x50
	0x0325D384 RET
	0x0325D388 B 0x325D38C
	0x0325D38C STP X30, X21, [X31 - 0x20]!
	0x0325D390 STP X20, X19, [X31 + 0x10]
	0x0325D394 ADRP X20, 0x117F000
	0x0325D398 ADRP X21, 0xE96000
	0x0325D39C LDRB W8, [X20 + 0x51C]
	0x0325D3A0 LDR X21, [X21 + 0x618]
	0x0325D3A4 MOV X19, X0
	0x0325D3A8 TBNZ X8, 0x0, 0x325D3C0
	0x0325D3AC ADRP X0, 0xE96000
	0x0325D3B0 LDR X0, [X0 + 0x618]
	0x0325D3B4 BL 0x1C16CF4
	0x0325D3B8 MOVZ W8, 0x1
	0x0325D3BC STRB W8, [X20 + 0x51C]
	0x0325D3C0 LDR X0, [X21]
	0x0325D3C4 MOVZ W1, 0x14
	0x0325D3C8 BL 0x1C16D6C

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X29
	003 Move [X31+104], X30
	004 Move [X31+112], X28
	005 Move [X31+120], X27
	006 Move [X31+128], X26
	007 Move [X31+136], X25
	008 Move [X31+144], X24
	009 Move [X31+152], X23
	010 Move [X31+160], X22
	011 Move [X31+168], X21
	012 Move [X31+176], X20
	013 Move [X31+184], X19
	014 Move X20, 0x1181000
	015 Move X29, 0xE98000
	016 Move W8, [X20+1299]
	017 Move X29, [X29+2288]
	018 Move W21, W1
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {86}
	024 Move X0, 0xEA1000
	025 Move X0, [X0+2536]
	026 Call 0x1C17CF4
	027 Move X0, 0xE98000
	028 Move X0, [X0+2288]
	029 Call 0x1C17CF4
	030 Move X0, 0xEC6000
	031 Move X0, [X0+1488]
	032 Call 0x1C17CF4
	033 Move X0, 0xEC6000
	034 Move X0, [X0+1496]
	035 Call 0x1C17CF4
	036 Move X0, 0xEC5000
	037 Move X0, [X0+1504]
	038 Call 0x1C17CF4
	039 Move X0, 0xEC5000
	040 Move X0, [X0+1512]
	041 Call 0x1C17CF4
	042 Move X0, 0xEC5000
	043 Move X0, [X0+1520]
	044 Call 0x1C17CF4
	045 Move X0, 0xEC5000
	046 Move X0, [X0+1528]
	047 Call 0x1C17CF4
	048 Move X0, 0xEC5000
	049 Move X0, [X0+1536]
	050 Call 0x1C17CF4
	051 Move X0, 0xEC5000
	052 Move X0, [X0+1544]
	053 Call 0x1C17CF4
	054 Move X0, 0xEC5000
	055 Move X0, [X0+1552]
	056 Call 0x1C17CF4
	057 Move X0, 0xEC5000
	058 Move X0, [X0+1560]
	059 Call 0x1C17CF4
	060 Move X0, 0xEC5000
	061 Move X0, [X0+1568]
	062 Call 0x1C17CF4
	063 Move X0, 0xEC5000
	064 Move X0, [X0+1576]
	065 Call 0x1C17CF4
	066 Move X0, 0xEC5000
	067 Move X0, [X0+1584]
	068 Call 0x1C17CF4
	069 Move X0, 0xEC5000
	070 Move X0, [X0+1592]
	071 Call 0x1C17CF4
	072 Move X0, 0xEC5000
	073 Move X0, [X0+1600]
	074 Call 0x1C17CF4
	075 Move X0, 0xEC5000
	076 Move X0, [X0+1608]
	077 Call 0x1C17CF4
	078 Move X0, 0xEC5000
	079 Move X0, [X0+1616]
	080 Call 0x1C17CF4
	081 Move X0, 0xEC5000
	082 Move X0, [X0+1624]
	083 Call 0x1C17CF4
	084 Move W8, 1
	085 Move [X20+1299], W8
	086 Move X8, [X19]
	087 And W1, W21, 1
	088 Move X0, X19
	089 Move X9, [X8+488]
	090 Move X2, [X8+496]
	091 Add X8, X31, 32
	092 NotImplemented "Instruction BLR not yet implemented."
	093 Move X9, [X31+64]
	094 Move X8, [X31+72]
	095 Move X0, [X29]
	096 Move X27, [X31+32]
	097 Move X28, [X31+40]
	098 Move X26, [X31+48]
	099 Move X25, [X31+56]
	100 Move [X31], X9
	101 Move [X31+8], X8
	102 Move X9, [X31+80]
	103 Move X8, [X31+88]
	104 Move [X31+16], X9
	105 Move [X31+24], X8
	106 Call 0x1C17F10
	107 Move X1, X31
	108 Move X19, X0
	109 Call StringBuilder..ctor, X0
	110 Compare X19, 0
	111 JumpIfEqual {295}
	112 Move X8, 0xEC5000
	113 Move X8, [X8+1584]
	114 Move X29, 0xEA0000
	115 Move X23, 0xEC5000
	116 Move X29, [X29+2536]
	117 Move X23, [X23+1600]
	118 Move X1, [X8]
	119 Move X24, 0xEC5000
	120 Move X22, 0xEC5000
	121 Move X20, 0xEC5000
	122 Move X24, [X24+1616]
	123 Move X22, [X22+1488]
	124 Move X20, [X20+1568]
	125 Move X0, X19
	126 Move X2, X31
	127 Call StringBuilder.Append, X0, X1
	128 Move X0, [X29]
	129 Move W8, [X0+224]
	130 Compare W8, 0
	131 JumpIfNotEqual {133}
	132 Call 0x1C17DFC
	133 Move X0, X28
	134 Move X1, X31
	135 Call Convert.ToBase64String, X0
	136 Move X8, [X23]
	137 Move X2, [X24]
	138 Move X1, X0
	139 Move X3, X31
	140 Move X0, X8
	141 Call String.Concat, X0, X1, X2
	142 Move X1, X0
	143 Move X0, X19
	144 Move X2, X31
	145 Call StringBuilder.Append, X0, X1
	146 Move X0, X27
	147 Move X1, X31
	148 Call Convert.ToBase64String, X0
	149 Move X8, [X22]
	150 Move X2, [X20]
	151 Move X1, X0
	152 Move X3, X31
	153 Move X0, X8
	154 Call String.Concat, X0, X1, X2
	155 Move X1, X0
	156 Move X0, X19
	157 Move X2, X31
	158 Call StringBuilder.Append, X0, X1
	159 Move TEMP, X21
	160 And TEMP, TEMP, 1
	161 Compare TEMP, 1
	162 JumpIfNotEqual {270}
	163 Move X0, [X29]
	164 Move W8, [X0+224]
	165 Compare W8, 0
	166 JumpIfNotEqual {168}
	167 Call 0x1C17DFC
	168 Move X0, X26
	169 Move X1, X31
	170 Call Convert.ToBase64String, X0
	171 Move X8, 0xEC5000
	172 Move X8, [X8+1552]
	173 Move X9, 0xEC5000
	174 Move X9, [X9+1544]
	175 Move X1, X0
	176 Move X8, [X8]
	177 Move X3, X31
	178 Move X2, [X9]
	179 Move X0, X8
	180 Call String.Concat, X0, X1, X2
	181 Move X1, X0
	182 Move X0, X19
	183 Move X2, X31
	184 Call StringBuilder.Append, X0, X1
	185 Move X0, X25
	186 Move X1, X31
	187 Call Convert.ToBase64String, X0
	188 Move X8, 0xEC5000
	189 Move X8, [X8+1608]
	190 Move X9, 0xEC5000
	191 Move X9, [X9+1560]
	192 Move X1, X0
	193 Move X8, [X8]
	194 Move X3, X31
	195 Move X2, [X9]
	196 Move X0, X8
	197 Call String.Concat, X0, X1, X2
	198 Move X1, X0
	199 Move X0, X19
	200 Move X2, X31
	201 Call StringBuilder.Append, X0, X1
	202 Move X0, [X31]
	203 Move X1, X31
	204 Call Convert.ToBase64String, X0
	205 Move X8, 0xEC5000
	206 Move X8, [X8+1592]
	207 Move X9, 0xEC5000
	208 Move X9, [X9+1624]
	209 Move X1, X0
	210 Move X8, [X8]
	211 Move X3, X31
	212 Move X2, [X9]
	213 Move X0, X8
	214 Call String.Concat, X0, X1, X2
	215 Move X1, X0
	216 Move X0, X19
	217 Move X2, X31
	218 Call StringBuilder.Append, X0, X1
	219 Move X0, [X31+8]
	220 Move X1, X31
	221 Call Convert.ToBase64String, X0
	222 Move X8, 0xEC5000
	223 Move X8, [X8+1576]
	224 Move X9, 0xEC5000
	225 Move X9, [X9+1504]
	226 Move X1, X0
	227 Move X8, [X8]
	228 Move X3, X31
	229 Move X2, [X9]
	230 Move X0, X8
	231 Call String.Concat, X0, X1, X2
	232 Move X1, X0
	233 Move X0, X19
	234 Move X2, X31
	235 Call StringBuilder.Append, X0, X1
	236 Move X0, [X31+16]
	237 Move X1, X31
	238 Call Convert.ToBase64String, X0
	239 Move X8, 0xEC5000
	240 Move X8, [X8+1496]
	241 Move X9, 0xEC5000
	242 Move X9, [X9+1528]
	243 Move X1, X0
	244 Move X8, [X8]
	245 Move X3, X31
	246 Move X2, [X9]
	247 Move X0, X8
	248 Call String.Concat, X0, X1, X2
	249 Move X1, X0
	250 Move X0, X19
	251 Move X2, X31
	252 Call StringBuilder.Append, X0, X1
	253 Move X0, [X31+24]
	254 Move X1, X31
	255 Call Convert.ToBase64String, X0
	256 Move X8, 0xEC5000
	257 Move X8, [X8+1536]
	258 Move X9, 0xEC5000
	259 Move X9, [X9+1512]
	260 Move X1, X0
	261 Move X8, [X8]
	262 Move X3, X31
	263 Move X2, [X9]
	264 Move X0, X8
	265 Call String.Concat, X0, X1, X2
	266 Move X1, X0
	267 Move X0, X19
	268 Move X2, X31
	269 Call StringBuilder.Append, X0, X1
	270 Move X8, 0xEC5000
	271 Move X8, [X8+1520]
	272 Move X0, X19
	273 Move X2, X31
	274 Move X1, [X8]
	275 Call StringBuilder.Append, X0, X1
	276 Move X8, [X19]
	277 Move X0, X19
	278 Move X9, [X8+360]
	279 Move X1, [X8+368]
	280 NotImplemented "Instruction BLR not yet implemented."
	281 Move X20, [X31+176]
	282 Move X19, [X31+184]
	283 Move X22, [X31+160]
	284 Move X21, [X31+168]
	285 Move X24, [X31+144]
	286 Move X23, [X31+152]
	287 Move X26, [X31+128]
	288 Move X25, [X31+136]
	289 Move X28, [X31+112]
	290 Move X27, [X31+120]
	291 Move X29, [X31+96]
	292 Move X30, [X31+104]
	293 Add X31, X31, 192
	294 Return X0
	295 Call 0x1C17F20

Method: System.Security.Cryptography.RSAParameters ExportParameters(System.Boolean includePrivateParameters)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void ImportParameters(System.Security.Cryptography.RSAParameters parameters)

Disassembly:
	

ISIL:
No ISIL was generated
