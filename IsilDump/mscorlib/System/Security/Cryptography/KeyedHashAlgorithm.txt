Type: System.Security.Cryptography.KeyedHashAlgorithm

Method: System.Void .ctor()

Disassembly:
	0x032564D0 MOV X1, X31
	0x032564D4 BL 0x33BDD84

ISIL:
	001 Move X1, X31
	002 Call HashAlgorithm..ctor, X0
	003 Return 

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x032564D8 MOV X19, X0
	0x032564DC ADRP X0, 0xECA000
	0x032564E0 LDR X0, [X0 + 0xCE0]
	0x032564E4 BL 0x1C16D08
	0x032564E8 BL 0x1C16F10
	0x032564EC MOV X1, X19
	0x032564F0 MOV X2, X31
	0x032564F4 MOV X20, X0
	0x032564F8 BL 0x3252170
	0x032564FC ADRP X0, 0xECD000
	0x03256500 LDR X0, [X0 + 0x160]
	0x03256504 BL 0x1C16D08
	0x03256508 MOV X1, X0
	0x0325650C MOV X0, X20
	0x03256510 BL 0x1C16DEC
	0x03256514 STP X30, X23, [X31 - 0x30]!
	0x03256518 STP X22, X21, [X31 + 0x10]
	0x0325651C STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W20, W1
	005 Move X19, X0
	006 Move TEMP, X1
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfNotEqual {18}
	010 Move X0, [X19+40]
	011 Compare X0, 0
	012 JumpIfEqual {17}
	013 Move W2, [X0+24]
	014 Move W1, W31
	015 Move X3, X31
	016 Call Array.Clear, X0, X1, X2
	017 Move [X19+40], X31
	018 And W1, W20, 1
	019 Move X0, X19
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X2, X31
	023 Move X30, [X31+32]
	024 Call HashAlgorithm.Dispose, X0, X1
	025 Return 

Method: System.Byte[] get_Key()

Disassembly:
	0x03256520 ADRP X19, 0x1186000
	0x03256524 ADRP X22, 0xECB000
	0x03256528 ADRP X21, 0xECB000
	0x0325652C LDRB W8, [X19 + 0x4FA]
	0x03256530 LDR X22, [X22 + 0x520]
	0x03256534 LDR X21, [X21 + 0x528]
	0x03256538 TBNZ X8, 0x0, 0x3256568
	0x0325653C ADRP X0, 0xECB000
	0x03256540 LDR X0, [X0 + 0x520]
	0x03256544 BL 0x1C16CF4
	0x03256548 ADRP X0, 0xECB000
	0x0325654C LDR X0, [X0 + 0x528]
	0x03256550 BL 0x1C16CF4
	0x03256554 ADRP X0, 0xECD000
	0x03256558 LDR X0, [X0 + 0x150]
	0x0325655C BL 0x1C16CF4
	0x03256560 MOVZ W8, 0x1
	0x03256564 STRB W8, [X19 + 0x4FA]
	0x03256568 LDR X0, [X22]
	0x0325656C MOVZ W1, 0x1
	0x03256570 BL 0x1C16D6C
	0x03256574 LDR X8, [X21]
	0x03256578 MOV X19, X0
	0x0325657C MOV X0, X8
	0x03256580 BL 0x1C16F10
	0x03256584 MOVZ W1, 0x40
	0x03256588 MOVZ W2, 0x40
	0x0325658C MOV W3, W31
	0x03256590 MOV X4, X31
	0x03256594 MOV X20, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1187000
	005 Move W8, [X20+1261]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE9E000
	012 Move X0, [X0+1560]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1261], W8
	016 Move X0, [X19+40]
	017 Compare X0, 0
	018 JumpIfEqual {35}
	019 Move X1, X31
	020 Call Array.Clone, X0
	021 Compare X0, 0
	022 JumpIfEqual {31}
	023 Move X8, 0xE9E000
	024 Move X8, [X8+1560]
	025 Move X19, X0
	026 Move X20, [X8]
	027 Move X1, X20
	028 Call 0x1C17E00
	029 Compare X0, 0
	030 JumpIfEqual {36}
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Return X0
	035 Call 0x1C17F20
	036 Move X0, X19
	037 Move X1, X20
	038 Call 0x1C181E0

Method: System.Void set_Key(System.Byte[] value)

Disassembly:
	0x03256598 BL 0x3251FDC
	0x0325659C CBZ X19, 0x3256620
	0x032565A0 LDR W8, [X19 + 0x18]
	0x032565A4 CBZ W8, 0x3256624
	0x032565A8 ADRP X23, 0xECD000
	0x032565AC LDR X23, [X23 + 0x150]
	0x032565B0 STR X20, [X19 + 0x20]
	0x032565B4 MOVZ W1, 0x1
	0x032565B8 LDR X8, [X23]
	0x032565BC LDR X8, [X8 + 0xB8]
	0x032565C0 STR X19, [X8]
	0x032565C4 LDR X0, [X22]
	0x032565C8 BL 0x1C16D6C
	0x032565CC LDR X8, [X21]
	0x032565D0 MOV X19, X0
	0x032565D4 MOV X0, X8
	0x032565D8 BL 0x1C16F10
	0x032565DC MOVZ W1, 0x28
	0x032565E0 MOVZ W2, 0x400
	0x032565E4 MOVZ W3, 0x8
	0x032565E8 MOV X4, X31
	0x032565EC MOV X20, X0
	0x032565F0 BL 0x3251FDC
	0x032565F4 CBZ X19, 0x3256620
	0x032565F8 LDR W8, [X19 + 0x18]
	0x032565FC CBZ W8, 0x3256624
	0x03256600 STR X20, [X19 + 0x20]
	0x03256604 LDR X8, [X23]
	0x03256608 LDP X22, X21, [X31 + 0x10]
	0x0325660C LDR X8, [X8 + 0xB8]
	0x03256610 STR X19, [X8 + 0x8]
	0x03256614 LDP X20, X19, [X31 + 0x20]
	0x03256618 LDP X30, X23, [X31], #0x30
	0x0325661C RET
	0x03256620 BL 0x1C16F20
	0x03256624 BL 0x1C16F28
	0x03256628 STP X30, X21, [X31 - 0x20]!
	0x0325662C STP X20, X19, [X31 + 0x10]
	0x03256630 ADRP X21, 0x1186000
	0x03256634 ADRP X20, 0xECD000
	0x03256638 LDRB W8, [X21 + 0x4FB]
	0x0325663C LDR X20, [X20 + 0x150]
	0x03256640 MOV X19, X0
	0x03256644 TBNZ X8, 0x0, 0x3256674
	0x03256648 ADRP X0, 0xECA000
	0x0325664C LDR X0, [X0 + 0xBD8]
	0x03256650 BL 0x1C16CF4
	0x03256654 ADRP X0, 0xECD000
	0x03256658 LDR X0, [X0 + 0x168]
	0x0325665C BL 0x1C16CF4
	0x03256660 ADRP X0, 0xECD000
	0x03256664 LDR X0, [X0 + 0x150]
	0x03256668 BL 0x1C16CF4
	0x0325666C MOVZ W8, 0x1
	0x03256670 STRB W8, [X21 + 0x4FB]
	0x03256674 LDR X0, [X20]
	0x03256678 ADRP X20, 0xECA000
	0x0325667C LDR W8, [X0 + 0xE0]
	0x03256680 LDR X20, [X20 + 0xBD8]
	0x03256684 CBNZ W8, 0x325668C
	0x03256688 BL 0x1C16DFC
	0x0325668C MOV X0, X19
	0x03256690 BL 0x3256400
	0x03256694 LDR X0, [X20]
	0x03256698 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1187000
	007 Move W8, [X21+1262]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE9E000
	015 Move X0, [X0+1560]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1262], W8
	019 Move W8, [X19+32]
	020 Compare W8, 0
	021 JumpIfNotEqual {54}
	022 Compare X20, 0
	023 JumpIfEqual {74}
	024 Move X0, X20
	025 Move X1, X31
	026 Call Array.Clone, X0
	027 Compare X0, 0
	028 JumpIfEqual {47}
	029 Move X22, 0xE9E000
	030 Move X22, [X22+1560]
	031 Move X20, X0
	032 Move X21, [X22]
	033 Move X1, X21
	034 Call 0x1C17E00
	035 Compare X0, 0
	036 JumpIfEqual {75}
	037 Move [X19+40], X0
	038 Move X19, [X22]
	039 Move X0, X20
	040 Move X1, X19
	041 Call 0x1C17E00
	042 Compare X0, 0
	043 JumpIfNotEqual {48}
	044 Move X0, X20
	045 Move X1, X19
	046 Call 0x1C181E0
	047 Move [X19+40], X31
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Return 
	054 Move X0, 0xECE000
	055 Move X0, [X0+128]
	056 Call 0x1C17D08
	057 Move X1, X31
	058 Call Environment.GetResourceString, X0
	059 Move X19, X0
	060 Move X0, 0xECB000
	061 Move X0, [X0+3296]
	062 Call 0x1C17D08
	063 Call 0x1C17F10
	064 Move X1, X19
	065 Move X2, X31
	066 Move X20, X0
	067 Call CryptographicException..ctor, X0, X1
	068 Move X0, 0xECE000
	069 Move X0, [X0+232]
	070 Call 0x1C17D08
	071 Move X1, X0
	072 Move X0, X20
	073 Call 0x1C17DEC
	074 Call 0x1C17F20
	075 Move X0, X20
	076 Move X1, X21
	077 Call 0x1C181E0

