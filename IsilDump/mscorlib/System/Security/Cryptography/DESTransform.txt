Type: System.Security.Cryptography.DESTransform

Method: System.Void .ctor(System.Security.Cryptography.SymmetricAlgorithm symmAlgo, System.Boolean encryption, System.Byte[] key, System.Byte[] iv)

Disassembly:
	0x032665CC LDR X0, [X20 + 0x60]
	0x032665D0 MOV X1, X19
	0x032665D4 LDP X20, X19, [X31 + 0x20]
	0x032665D8 LDR X8, [X8 + 0xB8]
	0x032665DC LDP X22, X21, [X31 + 0x10]
	0x032665E0 MOVZ W3, 0x1
	0x032665E4 LDR X2, [X8 + 0x38]
	0x032665E8 LDP X30, X23, [X31], #0x30
	0x032665EC B 0x3265E74
	0x032665F0 STR X30, [X31 - 0x60]!
	0x032665F4 STP X28, X27, [X31 + 0x10]
	0x032665F8 STP X26, X25, [X31 + 0x20]
	0x032665FC STP X24, X23, [X31 + 0x30]
	0x03266600 STP X22, X21, [X31 + 0x40]
	0x03266604 STP X20, X19, [X31 + 0x50]
	0x03266608 ADRP X28, 0x1176000
	0x0326660C ADRP X20, 0xEBC000
	0x03266610 ADRP X21, 0xEB6000
	0x03266614 ADRP X19, 0xEBD000
	0x03266618 ADRP X25, 0xE8D000
	0x0326661C ADRP X27, 0xEBD000
	0x03266620 ADRP X26, 0xEBD000
	0x03266624 ADRP X24, 0xEBD000
	0x03266628 ADRP X23, 0xEBD000
	0x0326662C ADRP X22, 0xEBD000
	0x03266630 LDR X20, [X20 + 0xF78]
	0x03266634 LDR X21, [X21 + 0xD08]
	0x03266638 LDR X19, [X19 + 0x878]
	0x0326663C LDR X25, [X25 + 0x618]
	0x03266640 LDRB W8, [X28 + 0x569]
	0x03266644 LDR X27, [X27 + 0x880]
	0x03266648 LDR X26, [X26 + 0x888]
	0x0326664C LDR X24, [X24 + 0x890]
	0x03266650 LDR X23, [X23 + 0x898]
	0x03266654 LDR X22, [X22 + 0x8A0]
	0x03266658 TBNZ X8, 0x0, 0x32666D0
	0x0326665C ADRP X0, 0xE8D000
	0x03266660 LDR X0, [X0 + 0x618]
	0x03266664 BL 0x1C16CF4
	0x03266668 ADRP X0, 0xEBC000
	0x0326666C LDR X0, [X0 + 0xF78]
	0x03266670 BL 0x1C16CF4
	0x03266674 ADRP X0, 0xEBD000
	0x03266678 LDR X0, [X0 + 0x880]
	0x0326667C BL 0x1C16CF4
	0x03266680 ADRP X0, 0xEBD000
	0x03266684 LDR X0, [X0 + 0x888]
	0x03266688 BL 0x1C16CF4
	0x0326668C ADRP X0, 0xEBD000
	0x03266690 LDR X0, [X0 + 0x878]
	0x03266694 BL 0x1C16CF4
	0x03266698 ADRP X0, 0xEBD000
	0x0326669C LDR X0, [X0 + 0x890]
	0x032666A0 BL 0x1C16CF4
	0x032666A4 ADRP X0, 0xEBD000
	0x032666A8 LDR X0, [X0 + 0x8A0]
	0x032666AC BL 0x1C16CF4
	0x032666B0 ADRP X0, 0xEBD000
	0x032666B4 LDR X0, [X0 + 0x898]
	0x032666B8 BL 0x1C16CF4
	0x032666BC ADRP X0, 0xEB6000
	0x032666C0 LDR X0, [X0 + 0xD08]
	0x032666C4 BL 0x1C16CF4
	0x032666C8 MOVZ W8, 0x1
	0x032666CC STRB W8, [X28 + 0x569]
	0x032666D0 LDR X8, [X20]
	0x032666D4 ADRP X9, 0xFFFFFFFFFD885000
	0x032666D8 LDR V0, [X9 + 0x60]
	0x032666DC MOVZ W1, 0x200
	0x032666E0 LDR X8, [X8 + 0xB8]
	0x032666E4 STR V0, [X8]
	0x032666E8 LDR X0, [X21]
	0x032666EC BL 0x1C16D6C
	0x032666F0 LDR X1, [X19]
	0x032666F4 MOV X2, X31
	0x032666F8 MOV X19, X0
	0x032666FC BL 0x32C5BD8
	0x03266700 LDR X8, [X20]
	0x03266704 MOVZ W1, 0x38
	0x03266708 LDR X8, [X8 + 0xB8]
	0x0326670C STR X19, [X8 + 0x10]
	0x03266710 LDR X0, [X25]
	0x03266714 BL 0x1C16D6C
	0x03266718 LDR X1, [X27]
	0x0326671C MOV X2, X31
	0x03266720 MOV X19, X0
	0x03266724 BL 0x32C5BD8
	0x03266728 LDR X8, [X20]
	0x0326672C MOVZ W1, 0x10
	0x03266730 LDR X8, [X8 + 0xB8]
	0x03266734 STR X19, [X8 + 0x18]
	0x03266738 LDR X0, [X25]
	0x0326673C BL 0x1C16D6C
	0x03266740 LDR X1, [X26]
	0x03266744 MOV X2, X31
	0x03266748 MOV X19, X0
	0x0326674C BL 0x32C5BD8
	0x03266750 LDR X8, [X20]
	0x03266754 MOVZ W1, 0x30
	0x03266758 LDR X8, [X8 + 0xB8]
	0x0326675C STR X19, [X8 + 0x20]
	0x03266760 LDR X0, [X25]
	0x03266764 BL 0x1C16D6C
	0x03266768 LDR X1, [X24]
	0x0326676C MOV X2, X31
	0x03266770 MOV X19, X0
	0x03266774 BL 0x32C5BD8
	0x03266778 LDR X8, [X20]
	0x0326677C MOVZ W1, 0x200
	0x03266780 LDR X8, [X8 + 0xB8]
	0x03266784 STR X19, [X8 + 0x28]
	0x03266788 LDR X0, [X21]
	0x0326678C BL 0x1C16D6C
	0x03266790 LDR X1, [X23]
	0x03266794 MOV X2, X31
	0x03266798 MOV X19, X0
	0x0326679C BL 0x32C5BD8
	0x032667A0 LDR X8, [X20]
	0x032667A4 MOVZ W1, 0x200
	0x032667A8 LDR X8, [X8 + 0xB8]
	0x032667AC STR X19, [X8 + 0x30]
	0x032667B0 LDR X0, [X21]
	0x032667B4 BL 0x1C16D6C
	0x032667B8 LDR X1, [X22]
	0x032667BC MOV X2, X31
	0x032667C0 MOV X19, X0
	0x032667C4 BL 0x32C5BD8
	0x032667C8 LDR X8, [X20]
	0x032667CC LDP X22, X21, [X31 + 0x40]
	0x032667D0 LDP X24, X23, [X31 + 0x30]
	0x032667D4 LDP X26, X25, [X31 + 0x20]
	0x032667D8 LDR X8, [X8 + 0xB8]
	0x032667DC LDP X28, X27, [X31 + 0x10]
	0x032667E0 STR X19, [X8 + 0x38]
	0x032667E4 LDP X20, X19, [X31 + 0x50]
	0x032667E8 LDR X30, [X31], #0x60

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0x1177000
	010 Move W8, [X24+1378]
	011 Move X20, X4
	012 Move X21, X3
	013 Move W23, W2
	014 Move X22, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0xE8E000
	021 Move X0, [X0+1560]
	022 Call 0x1C17CF4
	023 Move X0, 0xEBD000
	024 Move X0, [X0+3960]
	025 Call 0x1C17CF4
	026 Move X0, 0xEBC000
	027 Move X0, [X0+800]
	028 Call 0x1C17CF4
	029 Move X0, 0xEB7000
	030 Move X0, [X0+3336]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X24+1378], W8
	034 Move X25, 0xEBC000
	035 Move X24, 0xEBD000
	036 Move X25, [X25+800]
	037 Move X24, [X24+3960]
	038 And W2, W23, 1
	039 Move X0, X19
	040 Move X1, X22
	041 Move X3, X20
	042 Move X4, X31
	043 Call SymmetricTransform..ctor, X0, X1, X2, X3
	044 Move X20, X31
	045 Compare X21, 0
	046 JumpIfNotEqual {55}
	047 Move X0, [X24]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Call DESTransform.GetStrongKey
	053 Move X20, X0
	054 Move X21, X0
	055 Move X0, [X25]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X0, X21
	061 Move X1, X31
	062 Call DES.IsWeakKey, X0
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfEqual {145}
	067 Move X0, [X25]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move X0, X21
	073 Move X1, X31
	074 Call DES.IsSemiWeakKey, X0
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfEqual {145}
	079 Move X23, 0xE8E000
	080 Move X23, [X23+1560]
	081 Compare X20, 0
	082 JumpIfNotEqual {101}
	083 Compare X21, 0
	084 JumpIfEqual {165}
	085 Move X0, X21
	086 Move X1, X31
	087 Call Array.Clone, X0
	088 Compare X0, 0
	089 JumpIfEqual {100}
	090 Move X22, [X23]
	091 Move X21, X0
	092 Move X1, X22
	093 Call 0x1C17E00
	094 Move X20, X0
	095 Compare X0, 0
	096 JumpIfNotEqual {101}
	097 Move X0, X21
	098 Move X1, X22
	099 Call 0x1C181E0
	100 Move X20, X31
	101 Move X0, [X24]
	102 Move X21, 0xEB7000
	103 Move W8, [X0+224]
	104 Move X21, [X21+3336]
	105 Compare W8, 0
	106 JumpIfNotEqual {109}
	107 Call 0x1C17DFC
	108 Move X0, [X24]
	109 Move X8, [X0+184]
	110 Move X0, [X23]
	111 Move W8, [X8+4]
	112 Move W1, W8
	113 ShiftRight W1, 28
	114 And W1, W1, 0x7FFFFFF
	115 Call 0x1C17D6C
	116 Move [X19+88], X0
	117 Move X8, [X24]
	118 Move X0, [X23]
	119 Move X8, [X8+184]
	120 Move W1, [X8+12]
	121 Call 0x1C17D6C
	122 Move [X19+96], X0
	123 Move X8, [X24]
	124 Move X0, [X21]
	125 Move X8, [X8+184]
	126 Move W8, [X8+12]
	127 Add W9, W8, 3
	128 NotImplemented "Instruction CMP not yet implemented."
	129 NotImplemented "Instruction CSEL not yet implemented."
	130 NotImplemented "Instruction SBFM not yet implemented."
	131 Call 0x1C17D6C
	132 Move [X19+104], X0
	133 Move X0, X19
	134 Move X1, X20
	135 Move X20, [X31+48]
	136 Move X19, [X31+56]
	137 Move X22, [X31+32]
	138 Move X21, [X31+40]
	139 Move X24, [X31+16]
	140 Move X23, [X31+24]
	141 Move X30, [X31+64]
	142 Move X25, [X31+72]
	143 Call DESTransform.SetKey, X0, X1
	144 Return 
	145 Move X0, 0xEBE000
	146 Move X0, [X0+2152]
	147 Call 0x1C17D08
	148 Move X1, X31
	149 Call Locale.GetText, X0
	150 Move X19, X0
	151 Move X0, 0xEBB000
	152 Move X0, [X0+3296]
	153 Call 0x1C17D08
	154 Call 0x1C17F10
	155 Move X1, X19
	156 Move X2, X31
	157 Move X20, X0
	158 Call CryptographicException..ctor, X0, X1
	159 Move X0, 0xEBE000
	160 Move X0, [X0+2160]
	161 Call 0x1C17D08
	162 Move X1, X0
	163 Move X0, X20
	164 Call 0x1C17DEC
	165 Call 0x1C17F20

Method: System.UInt32 CipherFunct(System.UInt32 r, System.Int32 n)

Disassembly:
	0x03266C44 MOV X1, X31
	0x03266C48 BL 0x3219380
	0x03266C4C LDR X0, [X19 + 0x30]
	0x03266C50 CBZ X0, 0x3266C5C
	0x03266C54 MOV X1, X31
	0x03266C58 BL 0x3252024
	0x03266C5C MOVZ W8, 0x1
	0x03266C60 STRB W8, [X19 + 0x2B]
	0x03266C64 LDP X30, X19, [X31], #0x10
	0x03266C68 RET
	0x03266C6C BL 0x1C16F20
	0x03266C70 STR X30, [X31 - 0x20]!
	0x03266C74 STP X20, X19, [X31 + 0x10]
	0x03266C78 LDRB W8, [X0 + 0x28]
	0x03266C7C CBZ W8, 0x3266CE4
	0x03266C80 LDRB W8, [X0 + 0x29]
	0x03266C84 MOV X19, X0
	0x03266C88 CBNZ W8, 0x3266CE4
	0x03266C8C LDR X0, [X19 + 0x30]
	0x03266C90 CBZ X0, 0x3266CF0
	0x03266C94 LDR X20, [X19 + 0x20]
	0x03266C98 MOV X1, X31
	0x03266C9C BL 0x32202D8
	0x03266CA0 LDR X8, [X19]
	0x03266CA4 LDP X9, X2, [X8 + 0x1C8]
	0x03266CA8 ORN W8, W31, W0, 0x0
	0x03266CAC AND W1, W8, 0x1
	0x03266CB0 MOV X0, X19
	0x03266CB4 BLR X9
	0x03266CB8 CBZ X20, 0x3266CF0
	0x03266CBC MOV X1, X0
	0x03266CC0 MOV X0, X20
	0x03266CC4 MOV X2, X31
	0x03266CC8 BL 0x3218B14
	0x03266CCC LDR X0, [X19 + 0x20]
	0x03266CD0 CBZ X0, 0x3266CF0
	0x03266CD4 MOV X1, X31
	0x03266CD8 BL 0x3218E08
	0x03266CDC MOVZ W8, 0x1
	0x03266CE0 STRB W8, [X19 + 0x29]
	0x03266CE4 LDP X20, X19, [X31 + 0x10]
	0x03266CE8 LDR X30, [X31], #0x20
	0x03266CEC RET
	0x03266CF0 BL 0x1C16F20
	0x03266CF4 STP X30, X21, [X31 - 0x20]!
	0x03266CF8 STP X20, X19, [X31 + 0x10]
	0x03266CFC LDR X8, [X0]
	0x03266D00 MOV X19, X0
	0x03266D04 LDP X9, X2, [X8 + 0x1F8]
	0x03266D08 MOV W1, W31
	0x03266D0C BLR X9
	0x03266D10 MOV X0, X19
	0x03266D14 LDP X20, X19, [X31 + 0x10]
	0x03266D18 MOV X1, X31
	0x03266D1C LDP X30, X21, [X31], #0x20
	0x03266D20 B 0x33CB4DC
	0x03266D24 CMP W1, 0x1
	0x03266D28 MOV X21, X0
	0x03266D2C B.NE 0x3266D5C
	0x03266D30 MOV X0, X21
	0x03266D34 BL 0x3EB1AD0
	0x03266D38 LDR X20, [X0]
	0x03266D3C BL 0x3EB1AE0
	0x03266D40 MOV X0, X19
	0x03266D44 MOV X1, X31
	0x03266D48 BL 0x33CB4DC
	0x03266D4C CBNZ X20, 0x3266D64
	0x03266D50 LDP X20, X19, [X31 + 0x10]
	0x03266D54 LDP X30, X21, [X31], #0x20
	0x03266D58 RET
	0x03266D5C MOV X20, X31
	0x03266D60 B 0x3266D70
	0x03266D64 MOV X0, X20
	0x03266D68 BL 0x1C16F18
	0x03266D6C MOV X21, X0
	0x03266D70 MOV X0, X19
	0x03266D74 MOV X1, X31
	0x03266D78 BL 0x33CB4DC
	0x03266D7C CBNZ X20, 0x3266D88
	0x03266D80 MOV X0, X21
	0x03266D84 BL 0x1D2C690
	0x03266D88 MOV X0, X20
	0x03266D8C BL 0x1C16F18
	0x03266D90 BL 0x1990590
	0x03266D94 STR X30, [X31 - 0x20]!
	0x03266D98 STP X20, X19, [X31 + 0x10]
	0x03266D9C MOV X19, X0
	0x03266DA0 LDR X0, [X0 + 0x40]
	0x03266DA4 MOV W20, W1
	0x03266DA8 CBZ X0, 0x3266DBC
	0x03266DAC LDR W2, [X0 + 0x18]
	0x03266DB0 MOV W1, W31
	0x03266DB4 MOV X3, X31
	0x03266DB8 BL 0x339FA34
	0x03266DBC LDR X0, [X19 + 0x28]
	0x03266DC0 CBZ X0, 0x3266DD4
	0x03266DC4 LDR W2, [X0 + 0x18]
	0x03266DC8 MOV W1, W31
	0x03266DCC MOV X3, X31
	0x03266DD0 BL 0x339FA34
	0x03266DD4 LDR X0, [X19 + 0x30]
	0x03266DD8 CBZ X0, 0x3266DEC
	0x03266DDC LDR W2, [X0 + 0x18]
	0x03266DE0 MOV W1, W31
	0x03266DE4 MOV X3, X31
	0x03266DE8 BL 0x339FA34
	0x03266DEC AND W1, W20, 0x1
	0x03266DF0 MOV X0, X19
	0x03266DF4 LDP X20, X19, [X31 + 0x10]
	0x03266DF8 MOV X2, X31
	0x03266DFC LDR X30, [X31], #0x20
	0x03266E00 B 0x32519A8
	0x03266E04 STR X30, [X31 - 0x40]!
	0x03266E08 STP X24, X23, [X31 + 0x10]
	0x03266E0C STP X22, X21, [X31 + 0x20]
	0x03266E10 STP X20, X19, [X31 + 0x30]
	0x03266E14 MOV W22, W3
	0x03266E18 LDR W3, [X0 + 0x48]
	0x03266E1C MOV W20, W2
	0x03266E20 MOV X19, X0
	0x03266E24 MOV X21, X1
	0x03266E28 CBZ W3, 0x3266E90
	0x03266E2C LDR X2, [X19 + 0x40]
	0x03266E30 MOVZ W8, 0x40
	0x03266E34 SUB W23, W8, W3
	0x03266E38 CMP W23, W22
	0x03266E3C B.LE 0x3266E60
	0x03266E40 MOV X0, X21
	0x03266E44 MOV W1, W20
	0x03266E48 MOV W4, W22
	0x03266E4C MOV X5, X31
	0x03266E50 BL 0x33A8A9C
	0x03266E54 LDR W8, [X19 + 0x48]
	0x03266E58 ADD W22, W8, W22
	0x03266E5C B 0x3266EEC
	0x03266E60 MOV X0, X21
	0x03266E64 MOV W1, W20
	0x03266E68 MOV W4, W23
	0x03266E6C MOV X5, X31
	0x03266E70 BL 0x33A8A9C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x1177000
	008 Move X22, 0xEBD000
	009 Move W8, [X23+1379]
	010 Move X22, [X22+3960]
	011 Move W20, W2
	012 Move W19, W1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xEBD000
	019 Move X0, [X0+3960]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+1379], W8
	023 Move X0, [X22]
	024 Move X21, [X21+88]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X22]
	030 Compare X21, 0
	031 JumpIfEqual {138}
	032 Move W9, [X21+24]
	033 Move W10, W20
	034 ShiftRight W10, 29
	035 And W10, W10, 0xFFFFFFF
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X8, [X0+184]
	038 Move X8, [X8+16]
	039 Compare X8, 0
	040 JumpIfEqual {138}
	041 Move X12, W10
	042 Add X10, X21, X12
	043 Move W10, [X10+32]
	044 Move W11, [X8+24]
	045 NotImplemented "Instruction EXTR not yet implemented."
	046 And W10, W10, 63
	047 Xor W10, W10, W14
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Or X15, X12, 1
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Add X13, X21, X15
	052 Move W13, [X13+32]
	053 Xor W16, W13, W14
	054 Move W13, 64
	055 NotImplemented "Instruction BFM not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X15, W15
	058 Add X15, X15, 1
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Add X15, X21, X15
	061 Move W15, [X15+32]
	062 Xor W16, W15, W14
	063 Move W15, 128
	064 NotImplemented "Instruction BFM not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Or X17, X12, 3
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Add X16, X21, X17
	069 Move W16, [X16+32]
	070 Xor W0, W16, W14
	071 Move W16, 192
	072 NotImplemented "Instruction BFM not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X1, W17
	075 Add X17, X1, 1
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Add X17, X21, X17
	078 Move W17, [X17+32]
	079 Xor W0, W17, W14
	080 Move W17, 256
	081 NotImplemented "Instruction BFM not yet implemented."
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Add X0, X1, 2
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Add X0, X21, X0
	086 Move W0, [X0+32]
	087 Xor W2, W0, W14
	088 Move W0, 320
	089 NotImplemented "Instruction BFM not yet implemented."
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Add X1, X1, 3
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Add X1, X21, X1
	094 Move W1, [X1+32]
	095 Xor W1, W1, W14
	096 Move W14, 384
	097 NotImplemented "Instruction BFM not yet implemented."
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Or X12, X12, 7
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Add X9, X21, X12
	102 Move W9, [X9+32]
	103 Xor W12, W9, W19
	104 Move W9, 448
	105 NotImplemented "Instruction BFM not yet implemented."
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Add X10, X8, W10
	108 Add X11, X8, W13
	109 Add X12, X8, W15
	110 Move W10, [X10+32]
	111 Move W11, [X11+32]
	112 Add X13, X8, W16
	113 Move W12, [X12+32]
	114 Add X15, X8, W17
	115 Move W13, [X13+32]
	116 Add X16, X8, W0
	117 Move W15, [X15+32]
	118 Move W16, [X16+32]
	119 Add X14, X8, W14
	120 Add X8, X8, W9
	121 Or W9, W11, W10
	122 Move W14, [X14+32]
	123 Or W9, W9, W12
	124 Move W8, [X8+32]
	125 Or W9, W9, W13
	126 Or W9, W9, W15
	127 Move X20, [X31+32]
	128 Move X19, [X31+40]
	129 Move X22, [X31+16]
	130 Move X21, [X31+24]
	131 Or W9, W9, W16
	132 Or W9, W9, W14
	133 Or W0, W9, W8
	134 Move X30, [X31+48]
	135 Move X23, [X31+56]
	136 Return X0
	137 Call 0x1C17F28
	138 Call 0x1C17F20

Method: System.Void Permutation(System.Byte[] input, System.Byte[] output, System.UInt32[] permTab, System.Boolean preSwap)

Disassembly:
	0x03266E74 LDR X1, [X19 + 0x40]
	0x03266E78 MOV X0, X19
	0x03266E7C MOV W2, W31
	0x03266E80 BL 0x3266F04
	0x03266E84 ADD W20, W23, W20
	0x03266E88 SUB W22, W22, W23
	0x03266E8C STR W31, [X19 + 0x48]
	0x03266E90 ADD W8, W22, 0x3F
	0x03266E94 CMP W22, 0x0
	0x03266E98 CSEL W8, W8, W22, LT
	0x03266E9C AND W23, W8, 0xFFFFFFC0
	0x03266EA0 CMP W23, 0x1
	0x03266EA4 SUB W22, W22, W23
	0x03266EA8 B.LT 0x3266ECC
	0x03266EAC MOV W24, W31
	0x03266EB0 ADD W2, W20, W24
	0x03266EB4 MOV X0, X19
	0x03266EB8 MOV X1, X21
	0x03266EBC BL 0x3266F04
	0x03266EC0 ADD W24, W24, 0x40
	0x03266EC4 CMP W24, W23
	0x03266EC8 B.LT 0x3266EB0
	0x03266ECC CBZ W22, 0x3266EF0
	0x03266ED0 LDR X2, [X19 + 0x40]
	0x03266ED4 ADD W1, W23, W20
	0x03266ED8 MOV X0, X21
	0x03266EDC MOV W3, W31
	0x03266EE0 MOV W4, W22
	0x03266EE4 MOV X5, X31
	0x03266EE8 BL 0x33A8A9C
	0x03266EEC STR W22, [X19 + 0x48]
	0x03266EF0 LDP X20, X19, [X31 + 0x30]
	0x03266EF4 LDP X22, X21, [X31 + 0x20]
	0x03266EF8 LDP X24, X23, [X31 + 0x10]
	0x03266EFC LDR X30, [X31], #0x40
	0x03266F00 RET
	0x03266F04 STR X30, [X31 - 0x60]!
	0x03266F08 STP X28, X27, [X31 + 0x10]
	0x03266F0C STP X26, X25, [X31 + 0x20]
	0x03266F10 STP X24, X23, [X31 + 0x30]
	0x03266F14 STP X22, X21, [X31 + 0x40]
	0x03266F18 STP X20, X19, [X31 + 0x50]
	0x03266F1C ADRP X22, 0x1176000
	0x03266F20 LDRB W8, [X22 + 0x56D]
	0x03266F24 MOV W21, W2
	0x03266F28 MOV X20, X1
	0x03266F2C MOV X19, X0
	0x03266F30 TBNZ X8, 0x0, 0x3266F48
	0x03266F34 ADRP X0, 0xEBD000
	0x03266F38 LDR X0, [X0 + 0x90]
	0x03266F3C BL 0x1C16CF4
	0x03266F40 MOVZ W8, 0x1
	0x03266F44 STRB W8, [X22 + 0x56D]
	0x03266F48 LDR X8, [X19 + 0x38]
	0x03266F4C ADD X8, X8, 0x40
	0x03266F50 STR X8, [X19 + 0x38]
	0x03266F54 CBZ X20, 0x3267B78
	0x03266F58 ADRP X24, 0xEBD000
	0x03266F5C LDR X9, [X19 + 0x30]
	0x03266F60 LDR W10, [X20 + 0x18]
	0x03266F64 LDR X24, [X24 + 0x90]
	0x03266F68 MOV X8, X31
	0x03266F6C MOV W11, W21
	0x03266F70 MOVZ W12, 0x20
	0x03266F74 ADD X14, X11, X12
	0x03266F78 SUB X13, X14, 0x20
	0x03266F7C CMP W13, W10
	0x03266F80 B.CS 0x3267B74
	0x03266F84 SUB X14, X14, 0x1F
	0x03266F88 CMP W14, W10
	0x03266F8C B.CS 0x3267B74
	0x03266F90 ADD X15, X11, X12
	0x03266F94 SUB X16, X15, 0x1E
	0x03266F98 CMP W16, W10
	0x03266F9C B.CS 0x3267B74
	0x03266FA0 SUB X15, X15, 0x1D
	0x03266FA4 CMP W15, W10
	0x03266FA8 B.CS 0x3267B74
	0x03266FAC CBZ X9, 0x3267B78
	0x03266FB0 LDR W17, [X9 + 0x18]
	0x03266FB4 CMP X8, X17
	0x03266FB8 B.CS 0x3267B74
	0x03266FBC ADD X13, X20, W13, SXTW
	0x03266FC0 ADD X14, X20, W14, SXTW
	0x03266FC4 ADD X16, X20, W16, SXTW
	0x03266FC8 LDRB W13, [X13 + 0x20]
	0x03266FCC LDRB W14, [X14 + 0x20]
	0x03266FD0 ADD X15, X20, W15, SXTW
	0x03266FD4 LDRB W16, [X16 + 0x20]
	0x03266FD8 LDRB W15, [X15 + 0x20]
	0x03266FDC BFM W13, W14, 0x18, 0x7
	0x03266FE0 ADD X8, X8, 0x1
	0x03266FE4 BFM W13, W16, 0x10, 0x7
	0x03266FE8 BFM W13, W15, 0x8, 0x7
	0x03266FEC STR W13, [X9, X12, LSL]
	0x03266FF0 ADD X12, X12, 0x4
	0x03266FF4 CMP X12, 0x60
	0x03266FF8 B.NE 0x3266F74
	0x03266FFC LDR X8, [X19 + 0x28]
	0x03267000 CBZ X8, 0x3267B78
	0x03267004 LDR W9, [X8 + 0x18]
	0x03267008 CBZ W9, 0x3267B74
	0x0326700C CMP W9, 0x1
	0x03267010 B.EQ 0x3267B74
	0x03267014 CMP W9, 0x2
	0x03267018 B.LS 0x3267B74
	0x0326701C CMP W9, 0x3
	0x03267020 B.EQ 0x3267B74
	0x03267024 LDR X0, [X24]
	0x03267028 LDP W23, W20, [X8 + 0x20]
	0x0326702C LDP W21, W22, [X8 + 0x28]
	0x03267030 LDR W9, [X0 + 0xE0]
	0x03267034 CBNZ W9, 0x3267040
	0x03267038 BL 0x1C16DFC
	0x0326703C LDR X0, [X24]
	0x03267040 LDR X8, [X0 + 0xB8]
	0x03267044 LDR X8, [X8]
	0x03267048 CBZ X8, 0x3267B78
	0x0326704C LDR W9, [X8 + 0x18]
	0x03267050 CBZ W9, 0x3267B74
	0x03267054 LDR X13, [X19 + 0x30]
	0x03267058 CBZ X13, 0x3267B78
	0x0326705C LDR W10, [X13 + 0x18]
	0x03267060 CBZ W10, 0x3267B74
	0x03267064 CMP W9, 0x1
	0x03267068 B.LS 0x3267B74
	0x0326706C CMP W10, 0x1
	0x03267070 B.LS 0x3267B74
	0x03267074 CMP W9, 0x2
	0x03267078 B.LS 0x3267B74
	0x0326707C CMP W10, 0x2
	0x03267080 B.LS 0x3267B74
	0x03267084 CMP W9, 0x3
	0x03267088 B.LS 0x3267B74
	0x0326708C CMP W10, 0x3
	0x03267090 B.LS 0x3267B74
	0x03267094 CMP W9, 0x4
	0x03267098 B.LS 0x3267B74
	0x0326709C CMP W10, 0x4
	0x032670A0 B.LS 0x3267B74
	0x032670A4 CMP W9, 0x5
	0x032670A8 B.LS 0x3267B74
	0x032670AC CMP W10, 0x5
	0x032670B0 B.LS 0x3267B74
	0x032670B4 CMP W9, 0x6
	0x032670B8 B.LS 0x3267B74
	0x032670BC CMP W10, 0x6
	0x032670C0 B.LS 0x3267B74
	0x032670C4 CMP W9, 0x7
	0x032670C8 B.LS 0x3267B74
	0x032670CC CMP W10, 0x7
	0x032670D0 B.LS 0x3267B74
	0x032670D4 CMP W9, 0x8
	0x032670D8 B.LS 0x3267B74
	0x032670DC CMP W10, 0x8
	0x032670E0 B.LS 0x3267B74
	0x032670E4 CMP W9, 0x9
	0x032670E8 B.LS 0x3267B74
	0x032670EC CMP W10, 0x9
	0x032670F0 B.LS 0x3267B74
	0x032670F4 CMP W9, 0xA
	0x032670F8 B.LS 0x3267B74
	0x032670FC CMP W10, 0xA
	0x03267100 B.LS 0x3267B74
	0x03267104 CMP W9, 0xB
	0x03267108 B.LS 0x3267B74
	0x0326710C CMP W10, 0xB
	0x03267110 B.LS 0x3267B74
	0x03267114 CMP W9, 0xC
	0x03267118 B.LS 0x3267B74
	0x0326711C CMP W10, 0xC
	0x03267120 B.LS 0x3267B74
	0x03267124 CMP W9, 0xD
	0x03267128 B.LS 0x3267B74
	0x0326712C CMP W10, 0xD
	0x03267130 B.LS 0x3267B74
	0x03267134 CMP W9, 0xE
	0x03267138 B.LS 0x3267B74
	0x0326713C CMP W10, 0xE
	0x03267140 B.LS 0x3267B74
	0x03267144 CMP W9, 0xF
	0x03267148 B.LS 0x3267B74

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X23, 0x1177000
	010 Move W8, [X23+1380]
	011 Move W20, W3
	012 Move X21, X2
	013 Move X19, X1
	014 Move X22, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xEBD000
	020 Move X0, [X0+3960]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X23+1380], W8
	024 Move X25, 0xEBD000
	025 Move X25, [X25+3960]
	026 Move TEMP, X20
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {37}
	030 Move X0, [X25]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X22
	036 Call DESTransform.BSwap, X0
	037 Compare X22, 0
	038 JumpIfEqual {218}
	039 Move W8, [X22+24]
	040 Compare W8, 0
	041 JumpIfEqual {217}
	042 Compare X21, 0
	043 JumpIfEqual {218}
	044 Move W9, [X22+32]
	045 Move W11, [X21+24]
	046 Move X10, X9
	047 ShiftRight X10, 3
	048 And X10, X10, 0x7FFFFFFF
	049 And X8, X10, 31
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move W9, W9
	052 ShiftRight W9, 31
	053 And W9, W9, 0x3FFFFFFF
	054 And X9, X9, 31
	055 Or X9, X9, 63
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Or W10, W10, 1
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Or W12, W9, 1
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X0, [X25]
	062 Add X11, X21, 32
	063 Move W8, [X11]
	064 Move W9, [X11]
	065 Add X11, X21, 32
	066 Move W10, [X11]
	067 Move W11, [X11]
	068 Move W12, [X0+224]
	069 Or W24, W9, W8
	070 Or W23, W11, W10
	071 Compare W12, 0
	072 JumpIfNotEqual {75}
	073 Call 0x1C17DFC
	074 Move X0, [X25]
	075 Move X8, [X0+184]
	076 Move W8, [X8+12]
	077 Move W8, W8
	078 ShiftRight W8, 31
	079 And W8, W8, 0x3FFFFFFF
	080 Subtract W9, W8, 3
	081 Move W11, [X22+24]
	082 Move W10, W9
	083 ShiftRight W10, 1
	084 And W10, W10, 0x7FFFFFFF
	085 Move W8, W31
	086 Move W9, 64
	087 NotImplemented "Instruction CMP not yet implemented."
	088 NotImplemented "Instruction CSINC not yet implemented."
	089 Add W10, W10, 1
	090 Subtract W11, W11, 1
	091 Move W12, 33
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Add W13, W8, 1
	094 Add X13, X22, W13
	095 Move W13, [X13+32]
	096 Move W16, [X21+24]
	097 Move W14, W13
	098 ShiftRight W14, 3
	099 And W14, W14, 0x7FFFFFFF
	100 And W14, W14, 30
	101 Or W14, W14, W9
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move W13, W13
	104 ShiftRight W13, 31
	105 And W13, W13, 0x3FFFFFFF
	106 And X13, X13, 31
	107 Move X15, W9
	108 Or X17, X15, X13
	109 Or X13, X17, 63
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move X14, W14
	112 Or X15, X14, 1
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Or X17, X17, X12
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Add X16, X21, 32
	117 Add X0, X21, 32
	118 Move W14, [X16]
	119 Move W15, [X0]
	120 Move W13, [X16]
	121 Move W16, [X0]
	122 Add W8, W8, 1
	123 Or W14, W14, W24
	124 Or W15, W15, W23
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Or W24, W14, W13
	127 Or W23, W15, W16
	128 Add W9, W9, 64
	129 Move TEMP, X20
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfNotEqual {170}
	133 Compare X19, 0
	134 JumpIfEqual {218}
	135 Move W8, [X19+24]
	136 Compare W8, 0
	137 JumpIfEqual {217}
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move [X19+32], W24
	140 Move W9, W24
	141 ShiftRight W9, 8
	142 And W9, W9, 0x7FFFFFFF
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move [X19+33], W9
	145 Move W9, W24
	146 ShiftRight W9, 16
	147 And W9, W9, 0x7FFFFFFF
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Move [X19+34], W9
	150 Move W9, W24
	151 ShiftRight W9, 24
	152 And W9, W9, 0x7FFFFFFF
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move [X19+35], W9
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Move [X19+36], W23
	157 Move W9, W23
	158 ShiftRight W9, 8
	159 And W9, W9, 0x7FFFFFFF
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Move [X19+37], W9
	162 Move W9, W23
	163 ShiftRight W9, 16
	164 And W9, W9, 0x7FFFFFFF
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Move [X19+38], W9
	167 Move W23, W23
	168 ShiftRight W23, 24
	169 And W23, W23, 0x7FFFFFFF
	170 Compare X19, 0
	171 JumpIfEqual {218}
	172 Move W8, [X19+24]
	173 Compare W8, 0
	174 JumpIfEqual {217}
	175 Move W9, W24
	176 ShiftRight W9, 24
	177 And W9, W9, 0x7FFFFFFF
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move [X19+32], W9
	180 Move W9, W24
	181 ShiftRight W9, 16
	182 And W9, W9, 0x7FFFFFFF
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Move [X19+33], W9
	185 Move W9, W24
	186 ShiftRight W9, 8
	187 And W9, W9, 0x7FFFFFFF
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Move [X19+34], W9
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Move [X19+35], W24
	192 Move W9, W23
	193 ShiftRight W9, 24
	194 And W9, W9, 0x7FFFFFFF
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Move [X19+36], W9
	197 Move W9, W23
	198 ShiftRight W9, 16
	199 And W9, W9, 0x7FFFFFFF
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Move [X19+37], W9
	202 Move W9, W23
	203 ShiftRight W9, 8
	204 And W9, W9, 0x7FFFFFFF
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Move [X19+38], W9
	207 Move [X19+39], W23
	208 Move X20, [X31+48]
	209 Move X19, [X31+56]
	210 Move X22, [X31+32]
	211 Move X21, [X31+40]
	212 Move X24, [X31+16]
	213 Move X23, [X31+24]
	214 Move X30, [X31+64]
	215 Move X25, [X31+72]
	216 Return 
	217 Call 0x1C17F28
	218 Call 0x1C17F20

Method: System.Void BSwap(System.Byte[] byteBuff)

Disassembly:
	0x0326714C CMP W10, 0xF
	0x03267150 B.LS 0x3267B74
	0x03267154 CMP W9, 0x10
	0x03267158 B.LS 0x3267B74
	0x0326715C CMP W9, 0x11
	0x03267160 B.EQ 0x3267B74
	0x03267164 CMP W9, 0x12
	0x03267168 B.LS 0x3267B74
	0x0326716C CMP W9, 0x13
	0x03267170 B.EQ 0x3267B74
	0x03267174 CMP W9, 0x14
	0x03267178 B.LS 0x3267B74
	0x0326717C CMP W9, 0x15
	0x03267180 B.EQ 0x3267B74
	0x03267184 CMP W9, 0x16
	0x03267188 B.LS 0x3267B74
	0x0326718C CMP W9, 0x17
	0x03267190 B.EQ 0x3267B74
	0x03267194 CMP W9, 0x18
	0x03267198 B.LS 0x3267B74
	0x0326719C CMP W9, 0x19
	0x032671A0 B.EQ 0x3267B74
	0x032671A4 CMP W9, 0x1A
	0x032671A8 B.LS 0x3267B74
	0x032671AC CMP W9, 0x1B
	0x032671B0 B.EQ 0x3267B74
	0x032671B4 CMP W9, 0x1C
	0x032671B8 B.LS 0x3267B74
	0x032671BC CMP W9, 0x1D
	0x032671C0 B.EQ 0x3267B74

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {29}
	004 Move W8, [X0+24]
	005 Compare W8, 0
	006 JumpIfEqual {28}
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move W9, [X0+32]
	009 Move W10, [X0+35]
	010 Move W11, [X0+33]
	011 Move W12, [X0+34]
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move [X0+32], W10
	014 Move [X0+35], W9
	015 Move [X0+33], W12
	016 Move [X0+34], W11
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move W8, [X0+39]
	019 Move W9, [X0+36]
	020 Move W10, [X0+38]
	021 Move W11, [X0+37]
	022 Move [X0+36], W8
	023 Move [X0+39], W9
	024 Move [X0+37], W10
	025 Move [X0+38], W11
	026 Move X30, [X31+16]
	027 Return 
	028 Call 0x1C17F28
	029 Call 0x1C17F20

Method: System.Void SetKey(System.Byte[] key)

Disassembly:
	0x032668C4 STRB W8, [X22 + 0x56A]
	0x032668C8 LDR X0, [X24]
	0x032668CC MOVZ W1, 0x1
	0x032668D0 BL 0x1C16D6C
	0x032668D4 STR X0, [X19 + 0x18]
	0x032668D8 MOV X22, X0
	0x032668DC LDR X0, [X23]
	0x032668E0 BL 0x1C16F10
	0x032668E4 MOVZ W1, 0x200
	0x032668E8 MOVZ W2, 0x400
	0x032668EC MOVZ W3, 0x40
	0x032668F0 MOV X4, X31
	0x032668F4 MOV X23, X0
	0x032668F8 BL 0x3251FDC
	0x032668FC CBZ X22, 0x3266A18
	0x03266900 LDR W8, [X22 + 0x18]
	0x03266904 CBZ W8, 0x3266A1C
	0x03266908 STR X23, [X22 + 0x20]
	0x0326690C LDR X8, [X19]
	0x03266910 ADRP X22, 0xEBD000
	0x03266914 ADRP X23, 0xEBB000
	0x03266918 ADRP X24, 0xEBD000
	0x0326691C LDP X9, X2, [X8 + 0x1A8]
	0x03266920 LDR X22, [X22 + 0x8B0]
	0x03266924 LDR X23, [X23 + 0xF30]
	0x03266928 LDR X24, [X24 + 0x8A8]
	0x0326692C MOV X0, X19
	0x03266930 MOV W1, W21
	0x03266934 BLR X9
	0x03266938 LDR X0, [X22]
	0x0326693C BL 0x1C16F10
	0x03266940 MOV W1, W21
	0x03266944 MOV X2, X31
	0x03266948 MOV X22, X0
	0x0326694C BL 0x321F5F0
	0x03266950 STR X22, [X19 + 0x30]
	0x03266954 LDR X0, [X23]
	0x03266958 BL 0x1C16F10
	0x0326695C LDR X2, [X24]
	0x03266960 MOV X1, X19
	0x03266964 MOV X3, X31
	0x03266968 MOV X21, X0
	0x0326696C BL 0x32210D8
	0x03266970 CBZ X22, 0x3266A18
	0x03266974 MOV X0, X22
	0x03266978 MOV X1, X21
	0x0326697C MOV X2, X31
	0x03266980 AND W23, W20, 0x1
	0x03266984 BL 0x3220FA0
	0x03266988 STRB W23, [X19 + 0x28]
	0x0326698C TBNZ X20, 0x0, 0x3266A04
	0x03266990 ADRP X8, 0xEBB000
	0x03266994 LDR X8, [X8 + 0x4C8]
	0x03266998 LDR X0, [X8]
	0x0326699C BL 0x1C16F10
	0x032669A0 MOVZ W1, 0xD
	0x032669A4 MOV X2, X31
	0x032669A8 MOV X20, X0
	0x032669AC BL 0x32525C4
	0x032669B0 ADRP X8, 0xEBA000
	0x032669B4 LDR X8, [X8 + 0xF40]
	0x032669B8 LDR X8, [X8]
	0x032669BC LDR X8, [X8 + 0xB8]
	0x032669C0 LDRB W8, [X8]
	0x032669C4 CBZ W8, 0x32669E0
	0x032669C8 CBZ X20, 0x3266A18
	0x032669CC LDR W8, [X20 + 0x2C]
	0x032669D0 MOV X0, X20
	0x032669D4 MOV X2, X31
	0x032669D8 ORR W1, W8, 0x1
	0x032669DC BL 0x3252470
	0x032669E0 ADRP X8, 0xEBB000
	0x032669E4 LDR X8, [X8 + 0xC90]
	0x032669E8 LDR X0, [X8]
	0x032669EC BL 0x1C16F10
	0x032669F0 MOV X1, X20
	0x032669F4 MOV X2, X31
	0x032669F8 MOV X21, X0
	0x032669FC BL 0x3217CF4
	0x03266A00 STR X21, [X19 + 0x20]
	0x03266A04 LDP X20, X19, [X31 + 0x30]
	0x03266A08 LDP X22, X21, [X31 + 0x20]
	0x03266A0C LDP X24, X23, [X31 + 0x10]
	0x03266A10 LDR X30, [X31], #0x40
	0x03266A14 RET
	0x03266A18 BL 0x1C16F20
	0x03266A1C BL 0x1C16F28
	0x03266A20 STP X30, X21, [X31 - 0x20]!
	0x03266A24 STP X20, X19, [X31 + 0x10]
	0x03266A28 LDR X8, [X0]
	0x03266A2C MOV X19, X0
	0x03266A30 LDP X9, X2, [X8 + 0x188]
	0x03266A34 MOV W1, W31
	0x03266A38 BLR X9
	0x03266A3C MOV X0, X19
	0x03266A40 LDP X20, X19, [X31 + 0x10]
	0x03266A44 MOV X1, X31
	0x03266A48 LDP X30, X21, [X31], #0x20
	0x03266A4C B 0x33CB4DC
	0x03266A50 CMP W1, 0x1
	0x03266A54 MOV X21, X0
	0x03266A58 B.NE 0x3266A88
	0x03266A5C MOV X0, X21
	0x03266A60 BL 0x3EB1AD0
	0x03266A64 LDR X20, [X0]
	0x03266A68 BL 0x3EB1AE0
	0x03266A6C MOV X0, X19
	0x03266A70 MOV X1, X31
	0x03266A74 BL 0x33CB4DC
	0x03266A78 CBNZ X20, 0x3266A90
	0x03266A7C LDP X20, X19, [X31 + 0x10]
	0x03266A80 LDP X30, X21, [X31], #0x20
	0x03266A84 RET
	0x03266A88 MOV X20, X31
	0x03266A8C B 0x3266A9C
	0x03266A90 MOV X0, X20
	0x03266A94 BL 0x1C16F18
	0x03266A98 MOV X21, X0
	0x03266A9C MOV X0, X19
	0x03266AA0 MOV X1, X31
	0x03266AA4 BL 0x33CB4DC
	0x03266AA8 CBNZ X20, 0x3266AB4
	0x03266AAC MOV X0, X21
	0x03266AB0 BL 0x1D2C690
	0x03266AB4 MOV X0, X20
	0x03266AB8 BL 0x1C16F18
	0x03266ABC BL 0x1990590
	0x03266AC0 STR X30, [X31 - 0x10]!
	0x03266AC4 LDR X0, [X0 + 0x30]
	0x03266AC8 CBZ X0, 0x3266ADC
	0x03266ACC LDR X8, [X0]
	0x03266AD0 LDP X2, X1, [X8 + 0x198]
	0x03266AD4 LDR X30, [X31], #0x10
	0x03266AD8 BR X2
	0x03266ADC BL 0x1C16F20
	0x03266AE0 STR X30, [X31 - 0x10]!
	0x03266AE4 LDR X0, [X0 + 0x30]
	0x03266AE8 CBZ X0, 0x3266AF8
	0x03266AEC MOV X1, X31
	0x03266AF0 LDR X30, [X31], #0x10
	0x03266AF4 B 0x32202D8
	0x03266AF8 BL 0x1C16F20
	0x03266AFC SUB X31, X31, 0x60
	0x03266B00 STR X30, [X31 + 0x40]
	0x03266B04 STP X20, X19, [X31 + 0x50]
	0x03266B08 MOV X19, X8
	0x03266B0C TBZ X1, 0x0, 0x3266B18
	0x03266B10 LDRB W8, [X0 + 0x2A]
	0x03266B14 CBZ W8, 0x3266B58
	0x03266B18 LDR X0, [X0 + 0x30]
	0x03266B1C CBZ X0, 0x3266B54
	0x03266B20 LDR X8, [X0]
	0x03266B24 AND W1, W1, 0x1
	0x03266B28 LDP X9, X2, [X8 + 0x1E8]
	0x03266B2C ADD X8, X31, 0x0
	0x03266B30 BLR X9
	0x03266B34 LDP V1, V0, [X31 + 0x20]
	0x03266B38 LDP V3, V2, [X31]
	0x03266B3C LDR X30, [X31 + 0x40]
	0x03266B40 STP V1, V0, [X19 + 0x20]
	0x03266B44 STP V3, V2, [X19]
	0x03266B48 LDP X20, X19, [X31 + 0x50]
	0x03266B4C ADD X31, X31, 0x60
	0x03266B50 RET
	0x03266B54 BL 0x1C16F20
	0x03266B58 ADRP X0, 0xEBD000
	0x03266B5C LDR X0, [X0 + 0x8B8]
	0x03266B60 BL 0x1C16D08
	0x03266B64 MOV X1, X31
	0x03266B68 BL 0x320A160
	0x03266B6C MOV X19, X0
	0x03266B70 ADRP X0, 0xEBA000
	0x03266B74 LDR X0, [X0 + 0xCE0]
	0x03266B78 BL 0x1C16D08
	0x03266B7C BL 0x1C16F10
	0x03266B80 MOV X1, X19
	0x03266B84 MOV X2, X31
	0x03266B88 MOV X20, X0
	0x03266B8C BL 0x3252170
	0x03266B90 ADRP X0, 0xEBD000
	0x03266B94 LDR X0, [X0 + 0x8C0]
	0x03266B98 BL 0x1C16D08
	0x03266B9C MOV X1, X0
	0x03266BA0 MOV X0, X20
	0x03266BA4 BL 0x1C16DEC
	0x03266BA8 SUB X31, X31, 0x90
	0x03266BAC STR X30, [X31 + 0x80]
	0x03266BB0 LDP V0, V1, [X1 + 0x20]
	0x03266BB4 LDP V2, V3, [X1]
	0x03266BB8 LDR X0, [X0 + 0x30]
	0x03266BBC STP V0, V1, [X31 + 0x20]
	0x03266BC0 STP V2, V3, [X31]
	0x03266BC4 CBZ X0, 0x3266BF8
	0x03266BC8 LDR X8, [X0]
	0x03266BCC LDP V0, V1, [X31]
	0x03266BD0 LDP V2, V3, [X31 + 0x20]
	0x03266BD4 ADD X1, X31, 0x40
	0x03266BD8 LDR X9, [X8 + 0x1F8]
	0x03266BDC STP V0, V1, [X31 + 0x40]
	0x03266BE0 STP V2, V3, [X31 + 0x60]
	0x03266BE4 LDR X2, [X8 + 0x200]
	0x03266BE8 BLR X9
	0x03266BEC LDR X30, [X31 + 0x80]
	0x03266BF0 ADD X31, X31, 0x90
	0x03266BF4 RET
	0x03266BF8 BL 0x1C16F20
	0x03266BFC STR X30, [X31 - 0x10]!
	0x03266C00 LDR X0, [X0 + 0x30]
	0x03266C04 CBZ X0, 0x3266C18
	0x03266C08 LDR X8, [X0]
	0x03266C0C LDP X4, X3, [X8 + 0x1D8]
	0x03266C10 LDR X30, [X31], #0x10
	0x03266C14 BR X4
	0x03266C18 BL 0x1C16F20
	0x03266C1C STP X30, X19, [X31 - 0x10]!
	0x03266C20 LDRB W8, [X0 + 0x2B]
	0x03266C24 CBNZ W8, 0x3266C64
	0x03266C28 LDRB W8, [X0 + 0x29]
	0x03266C2C MOV X19, X0
	0x03266C30 CBZ W8, 0x3266C4C
	0x03266C34 LDRB W8, [X19 + 0x28]
	0x03266C38 CBNZ W8, 0x3266C4C
	0x03266C3C LDR X0, [X19 + 0x20]
	0x03266C40 CBZ X0, 0x3266C6C

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X20, 0x1177000
	014 Move W8, [X20+1381]
	015 Move X23, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xE8E000
	022 Move X0, [X0+1560]
	023 Call 0x1C17CF4
	024 Move X0, 0xEBD000
	025 Move X0, [X0+3960]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+1381], W8
	029 Move X0, [X19+88]
	030 Compare X0, 0
	031 JumpIfEqual {242}
	032 Move W2, [X0+24]
	033 Move X24, 0xEBD000
	034 Move X24, [X24+3960]
	035 Move W1, W31
	036 Move X3, X31
	037 Call Array.Clear, X0, X1, X2
	038 Move X0, [X24]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X24]
	044 Move X8, [X0+184]
	045 Move X8, [X8+24]
	046 Compare X8, 0
	047 JumpIfEqual {242}
	048 Move X21, 0xE8E000
	049 Move X21, [X21+1560]
	050 Move W20, [X8+24]
	051 Move X0, [X21]
	052 Move W1, W20
	053 Call 0x1C17D6C
	054 Move X8, [X21]
	055 Move X21, X0
	056 Move W1, W20
	057 Move X0, X8
	058 Call 0x1C17D6C
	059 Move X8, [X24]
	060 Move X8, [X8+184]
	061 Move X8, [X8+24]
	062 Compare X8, 0
	063 JumpIfEqual {242}
	064 Move W10, [X8+24]
	065 Move X22, X0
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move W9, W31
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Compare X23, 0
	070 JumpIfEqual {242}
	071 Add X10, X8, W9
	072 Move W10, [X10+32]
	073 Move W12, [X23+24]
	074 Move X11, X10
	075 ShiftRight X11, 3
	076 And X11, X11, 0x7FFFFFFF
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Compare X21, 0
	079 JumpIfEqual {242}
	080 Move W12, [X21+24]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Add X11, X23, X11
	083 Move W11, [X11+32]
	084 NotImplemented "Instruction ORN not yet implemented."
	085 And W10, W10, 7
	086 Move X12, W9
	087 NotImplemented "Instruction LSRV not yet implemented."
	088 And W10, W10, 1
	089 Add X11, X21, X12
	090 Move [X11+32], W10
	091 Move W10, [X8+24]
	092 Add W9, W9, 1
	093 NotImplemented "Instruction CMP not yet implemented."
	094 NotImplemented "Instruction SBFM not yet implemented."
	095 NotImplemented "Instruction CMP not yet implemented."
	096 NotImplemented "Instruction CSINC not yet implemented."
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X23, X31
	099 Add X26, X22, 32
	100 NotImplemented "Instruction CSEL not yet implemented."
	101 Subtract X27, X8, 1
	102 Move X0, [X24]
	103 Move W8, [X0+224]
	104 Compare W8, 0
	105 JumpIfNotEqual {108}
	106 Call 0x1C17DFC
	107 Move X0, [X24]
	108 Move X8, [X0+184]
	109 Move W8, [X8+4]
	110 Move W8, W8
	111 ShiftRight W8, 31
	112 And W8, W8, 0x3FFFFFFF
	113 NotImplemented "Instruction CMP not yet implemented."
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move W28, W25
	116 Move X28, X31
	117 Move W8, [X0+224]
	118 Compare W8, 0
	119 JumpIfNotEqual {122}
	120 Call 0x1C17DFC
	121 Move X0, [X24]
	122 Move X8, [X0+184]
	123 Move X8, [X8+32]
	124 Compare X8, 0
	125 JumpIfEqual {242}
	126 Move W9, [X8+24]
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Add X8, X8, X23
	129 Move W8, [X8+32]
	130 Add W9, W28, W8
	131 NotImplemented "Instruction CMP not yet implemented."
	132 NotImplemented "Instruction CSEL not yet implemented."
	133 Compare X21, 0
	134 JumpIfEqual {242}
	135 Move W10, [X21+24]
	136 Subtract W8, W8, W9
	137 Add X8, X28, X8
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Compare X22, 0
	140 JumpIfEqual {242}
	141 Move W9, [X22+24]
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Add X8, X21, W8
	144 Move W8, [X8+32]
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move [X26], W8
	147 Move X0, [X24]
	148 Add X28, X28, 1
	149 Move W28, W25
	150 Move X8, [X10+32]
	151 Compare X8, 0
	152 JumpIfEqual {242}
	153 Move W9, [X8+24]
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Add X8, X8, X23
	156 Move W8, [X8+32]
	157 Add W9, W28, W8
	158 NotImplemented "Instruction CMP not yet implemented."
	159 NotImplemented "Instruction CSEL not yet implemented."
	160 Compare X21, 0
	161 JumpIfEqual {242}
	162 Move W10, [X21+24]
	163 Subtract W8, W8, W9
	164 Add W8, W28, W8
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Compare X22, 0
	167 JumpIfEqual {242}
	168 Move W9, [X22+24]
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Add X8, X21, W8
	171 Move W8, [X8+32]
	172 Add X9, X22, W28
	173 Add W28, W28, 1
	174 Move [X9+32], W8
	175 Move X0, [X24]
	176 Move W8, [X0+224]
	177 Compare W8, 0
	178 JumpIfNotEqual {181}
	179 Call 0x1C17DFC
	180 Move X0, [X24]
	181 Move X10, [X0+184]
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Move X8, [X10+40]
	184 Compare X8, 0
	185 JumpIfEqual {242}
	186 Move W11, [X8+24]
	187 Move W15, 0xAAAB
	188 NotImplemented "Instruction MOVK not yet implemented."
	189 Move TEMP, 5
	190 Not TEMP
	191 Move W16, TEMP
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Move W17, 32
	194 Move W10, [X10+4]
	195 Move W9, W31
	196 Multiply W10, W10, W23
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Compare X22, 0
	199 JumpIfEqual {242}
	200 Add X11, X8, W9
	201 Move W11, [X11+32]
	202 Move W12, [X22+24]
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Add X11, X22, X11
	205 Move W11, [X11+32]
	206 Compare W11, 0
	207 JumpIfEqual {225}
	208 Move X11, [X19+88]
	209 Compare X11, 0
	210 JumpIfEqual {242}
	211 Move W14, [X11+24]
	212 NotImplemented "Instruction UMADDL not yet implemented."
	213 Move X12, X12
	214 ShiftRight X12, 34
	215 And X12, X12, 0x7FFFFFFF
	216 Add W13, W12, W10
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Add X11, X11, W13
	219 Move W13, [X11+32]
	220 Multiply W12, W12, W16
	221 Add W12, W9, W12
	222 NotImplemented "Instruction LSRV not yet implemented."
	223 Or W12, W13, W12
	224 Move [X11+32], W12
	225 Move W11, [X8+24]
	226 Add W9, W9, 1
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Add X23, X23, 1
	229 Move X20, [X31+80]
	230 Move X19, [X31+88]
	231 Move X22, [X31+64]
	232 Move X21, [X31+72]
	233 Move X24, [X31+48]
	234 Move X23, [X31+56]
	235 Move X26, [X31+32]
	236 Move X25, [X31+40]
	237 Move X28, [X31+16]
	238 Move X27, [X31+24]
	239 Move X29, [X31+96]
	240 Move X30, [X31+104]
	241 Return 
	242 Call 0x1C17F20
	243 Call 0x1C17F28

Method: System.Void ProcessBlock(System.Byte[] input, System.Byte[] output)

Disassembly:
	0x032671C4 CMP W9, 0x1E
	0x032671C8 B.LS 0x3267B74
	0x032671CC CMP W9, 0x1F
	0x032671D0 B.EQ 0x3267B74
	0x032671D4 CMP W9, 0x20
	0x032671D8 B.LS 0x3267B74
	0x032671DC CMP W9, 0x21
	0x032671E0 B.EQ 0x3267B74
	0x032671E4 CMP W9, 0x22
	0x032671E8 B.LS 0x3267B74
	0x032671EC CMP W9, 0x23
	0x032671F0 B.EQ 0x3267B74
	0x032671F4 CMP W9, 0x24
	0x032671F8 B.LS 0x3267B74
	0x032671FC CMP W9, 0x25
	0x03267200 B.EQ 0x3267B74
	0x03267204 CMP W9, 0x26
	0x03267208 B.LS 0x3267B74
	0x0326720C CMP W9, 0x27
	0x03267210 B.EQ 0x3267B74
	0x03267214 CMP W9, 0x28
	0x03267218 B.LS 0x3267B74
	0x0326721C CMP W9, 0x29
	0x03267220 B.EQ 0x3267B74
	0x03267224 CMP W9, 0x2A
	0x03267228 B.LS 0x3267B74
	0x0326722C CMP W9, 0x2B
	0x03267230 B.EQ 0x3267B74
	0x03267234 CMP W9, 0x2C
	0x03267238 B.LS 0x3267B74
	0x0326723C CMP W9, 0x2D
	0x03267240 B.EQ 0x3267B74
	0x03267244 CMP W9, 0x2E
	0x03267248 B.LS 0x3267B74
	0x0326724C CMP W9, 0x2F
	0x03267250 B.EQ 0x3267B74
	0x03267254 CMP W9, 0x30
	0x03267258 B.LS 0x3267B74
	0x0326725C CMP W9, 0x31
	0x03267260 B.EQ 0x3267B74
	0x03267264 CMP W9, 0x32
	0x03267268 B.LS 0x3267B74
	0x0326726C CMP W9, 0x33
	0x03267270 B.EQ 0x3267B74
	0x03267274 CMP W9, 0x34
	0x03267278 B.LS 0x3267B74
	0x0326727C CMP W9, 0x35
	0x03267280 B.EQ 0x3267B74
	0x03267284 CMP W9, 0x36
	0x03267288 B.LS 0x3267B74
	0x0326728C CMP W9, 0x37
	0x03267290 B.EQ 0x3267B74
	0x03267294 CMP W9, 0x38
	0x03267298 B.LS 0x3267B74
	0x0326729C CMP W9, 0x39
	0x032672A0 B.EQ 0x3267B74
	0x032672A4 CMP W9, 0x3A
	0x032672A8 B.LS 0x3267B74
	0x032672AC CMP W9, 0x3B
	0x032672B0 B.EQ 0x3267B74
	0x032672B4 CMP W9, 0x3C
	0x032672B8 B.LS 0x3267B74
	0x032672BC CMP W9, 0x3D
	0x032672C0 B.EQ 0x3267B74
	0x032672C4 CMP W9, 0x3E
	0x032672C8 B.LS 0x3267B74
	0x032672CC CMP W9, 0x3F
	0x032672D0 B.EQ 0x3267B74
	0x032672D4 LDR X9, [X19 + 0x28]
	0x032672D8 CBZ X9, 0x3267B78
	0x032672DC LDR W10, [X9 + 0x18]
	0x032672E0 CBZ W10, 0x3267B74
	0x032672E4 LDP W5, W16, [X8 + 0x20]
	0x032672E8 BIC W1, W22, W20, 0x0
	0x032672EC AND W7, W21, W20, 0x0
	0x032672F0 LDP W3, W12, [X13 + 0x20]
	0x032672F4 ORR W1, W7, W1, 0x0
	0x032672F8 ADD W1, W1, W23
	0x032672FC ADD W1, W1, W5
	0x03267300 ADD W1, W1, W3
	0x03267304 EXTR W1, W1, W1, 0x19
	0x03267308 ADD W5, W1, W20
	0x0326730C BIC W1, W21, W5, 0x0
	0x03267310 AND W7, W20, W5, 0x0
	0x03267314 ORR W1, W7, W1, 0x0
	0x03267318 ADD W1, W1, W22
	0x0326731C ADD W16, W1, W16
	0x03267320 ADD W16, W16, W12
	0x03267324 EXTR W16, W16, W16, 0x14
	0x03267328 LDP W0, W4, [X8 + 0x28]
	0x0326732C ADD W22, W16, W5
	0x03267330 LDP W11, W15, [X13 + 0x28]
	0x03267334 BIC W16, W20, W22, 0x0
	0x03267338 AND W1, W5, W22, 0x0
	0x0326733C ORR W16, W1, W16, 0x0
	0x03267340 ADD W16, W16, W21
	0x03267344 ADD W16, W16, W0
	0x03267348 ADD W16, W16, W11
	0x0326734C EXTR W16, W16, W16, 0xF
	0x03267350 ADD W0, W16, W22
	0x03267354 BIC W16, W5, W0, 0x0
	0x03267358 AND W1, W22, W0, 0x0
	0x0326735C ORR W21, W1, W16, 0x0
	0x03267360 ADD W20, W21, W20
	0x03267364 ADD W4, W20, W4
	0x03267368 ADD W4, W4, W15
	0x0326736C EXTR W4, W4, W4, 0xA
	0x03267370 LDP W24, W19, [X8 + 0x30]
	0x03267374 ADD W20, W4, W0
	0x03267378 LDP W14, W2, [X13 + 0x30]
	0x0326737C BIC W4, W22, W20, 0x0
	0x03267380 AND W21, W0, W20, 0x0
	0x03267384 ORR W4, W21, W4, 0x0
	0x03267388 ADD W4, W4, W5
	0x0326738C ADD W4, W4, W24
	0x03267390 ADD W4, W4, W14
	0x03267394 EXTR W4, W4, W4, 0x19
	0x03267398 ADD W5, W4, W20
	0x0326739C BIC W4, W0, W5, 0x0
	0x032673A0 AND W21, W20, W5, 0x0
	0x032673A4 ORR W4, W21, W4, 0x0
	0x032673A8 ADD W4, W4, W22
	0x032673AC ADD W4, W4, W19
	0x032673B0 ADD W4, W4, W2
	0x032673B4 EXTR W4, W4, W4, 0x14
	0x032673B8 LDP W25, W26, [X8 + 0x38]
	0x032673BC ADD W19, W4, W5
	0x032673C0 LDP W17, W6, [X13 + 0x38]
	0x032673C4 BIC W4, W20, W19, 0x0
	0x032673C8 AND W22, W5, W19, 0x0
	0x032673CC ORR W4, W22, W4, 0x0
	0x032673D0 ADD W0, W4, W0
	0x032673D4 ADD W0, W0, W25
	0x032673D8 ADD W0, W0, W17
	0x032673DC EXTR W0, W0, W0, 0xF
	0x032673E0 ADD W22, W0, W19
	0x032673E4 BIC W0, W5, W22, 0x0
	0x032673E8 AND W4, W19, W22, 0x0
	0x032673EC ORR W25, W4, W0, 0x0
	0x032673F0 ADD W20, W25, W20
	0x032673F4 ADD W20, W20, W26
	0x032673F8 ADD W20, W20, W6
	0x032673FC EXTR W20, W20, W20, 0xA
	0x03267400 LDP W7, W23, [X8 + 0x40]
	0x03267404 ADD W20, W20, W22
	0x03267408 LDP W1, W16, [X13 + 0x40]
	0x0326740C BIC W25, W19, W20, 0x0
	0x03267410 AND W26, W22, W20, 0x0
	0x03267414 ORR W25, W26, W25, 0x0
	0x03267418 ADD W5, W25, W5
	0x0326741C ADD W5, W5, W7
	0x03267420 ADD W5, W5, W1
	0x03267424 EXTR W5, W5, W5, 0x19
	0x03267428 ADD W25, W5, W20
	0x0326742C BIC W5, W22, W25, 0x0
	0x03267430 AND W7, W20, W25, 0x0
	0x03267434 ORR W5, W7, W5, 0x0
	0x03267438 ADD W5, W5, W19
	0x0326743C ADD W5, W5, W23
	0x03267440 ADD W5, W5, W16
	0x03267444 EXTR W5, W5, W5, 0x14
	0x03267448 LDP W21, W24, [X8 + 0x48]
	0x0326744C ADD W19, W5, W25
	0x03267450 LDP W4, W0, [X13 + 0x48]
	0x03267454 BIC W5, W20, W19, 0x0
	0x03267458 AND W7, W25, W19, 0x0
	0x0326745C ORR W5, W7, W5, 0x0
	0x03267460 ADD W5, W5, W22
	0x03267464 ADD W5, W5, W21
	0x03267468 ADD W5, W5, W4
	0x0326746C EXTR W5, W5, W5, 0xF
	0x03267470 ADD W21, W5, W19
	0x03267474 BIC W5, W25, W21, 0x0
	0x03267478 AND W7, W19, W21, 0x0
	0x0326747C ORR W22, W7, W5, 0x0
	0x03267480 ADD W20, W22, W20
	0x03267484 ADD W20, W20, W24
	0x03267488 ADD W20, W20, W0
	0x0326748C EXTR W20, W20, W20, 0xA
	0x03267490 LDP W26, W27, [X8 + 0x50]
	0x03267494 ADD W20, W20, W21
	0x03267498 LDP W7, W5, [X13 + 0x50]
	0x0326749C BIC W22, W19, W20, 0x0
	0x032674A0 AND W23, W21, W20, 0x0
	0x032674A4 ORR W22, W23, W22, 0x0
	0x032674A8 ADD W22, W22, W25
	0x032674AC ADD W22, W22, W26
	0x032674B0 ADD W22, W22, W7
	0x032674B4 EXTR W22, W22, W22, 0x19
	0x032674B8 ADD W22, W22, W20
	0x032674BC BIC W23, W21, W22, 0x0
	0x032674C0 AND W24, W20, W22, 0x0
	0x032674C4 ORR W23, W24, W23, 0x0
	0x032674C8 ADD W19, W23, W19
	0x032674CC ADD W19, W19, W27
	0x032674D0 ADD W19, W19, W5
	0x032674D4 EXTR W19, W19, W19, 0x14
	0x032674D8 ADD W23, W19, W22
	0x032674DC LDP W24, W25, [X8 + 0x58]
	0x032674E0 BIC W19, W20, W23, 0x0
	0x032674E4 AND W26, W22, W23, 0x0
	0x032674E8 ORR W26, W26, W19, 0x0
	0x032674EC LDP W19, W13, [X13 + 0x58]
	0x032674F0 ADD W21, W26, W21
	0x032674F4 ADD W21, W21, W24
	0x032674F8 CMP W10, 0x1
	0x032674FC ADD W21, W21, W19
	0x03267500 EXTR W21, W21, W21, 0xF
	0x03267504 ADD W21, W21, W23
	0x03267508 BIC W24, W22, W21, 0x0
	0x0326750C AND W26, W23, W21, 0x0
	0x03267510 ORR W24, W26, W24, 0x0
	0x03267514 ADD W20, W24, W20
	0x03267518 ADD W20, W20, W25
	0x0326751C ADD W20, W20, W13
	0x03267520 EXTR W20, W20, W20, 0xA
	0x03267524 ADD W20, W20, W21
	0x03267528 BIC W26, W21, W23, 0x0
	0x0326752C AND W24, W20, W23, 0x0
	0x03267530 ORR W24, W24, W26, 0x0
	0x03267534 LDP W25, W26, [X8 + 0x60]
	0x03267538 ADD W22, W22, W12
	0x0326753C ADD W22, W22, W24
	0x03267540 BIC W24, W20, W21, 0x0
	0x03267544 ADD W22, W22, W25
	0x03267548 EXTR W22, W22, W22, 0x1B

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x1176000
	009 Move X24, 0xEBC000
	010 Move W8, [X22+1382]
	011 Move X24, [X24+3960]
	012 Move X19, X2
	013 Move X21, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xEBC000
	020 Move X0, [X0+3960]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1382], W8
	024 Move X0, [X24]
	025 Move X22, [X20+104]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1C17DFC
	030 Move X0, [X24]
	031 Move X8, [X0+184]
	032 Move X0, X21
	033 Move W1, W31
	034 Move X2, X22
	035 Move W4, [X8+12]
	036 Move W3, W31
	037 Move X5, X31
	038 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	039 Move X8, [X20+104]
	040 Compare X8, 0
	041 JumpIfEqual {241}
	042 Move W9, [X8+24]
	043 Compare W9, 0
	044 JumpIfEqual {240}
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move W9, [X20+24]
	047 Move W22, [X8+32]
	048 Move W21, [X8+36]
	049 Compare W9, 0
	050 JumpIfEqual {129}
	051 Move X0, X20
	052 Move W1, W21
	053 Move W2, W31
	054 Call DESTransform.CipherFunct, X0, X1, X2
	055 Xor W22, W0, W22
	056 Move W2, 1
	057 Move X0, X20
	058 Move W1, W22
	059 Call DESTransform.CipherFunct, X0, X1, X2
	060 Xor W21, W0, W21
	061 Move W2, 2
	062 Move X0, X20
	063 Move W1, W21
	064 Call DESTransform.CipherFunct, X0, X1, X2
	065 Xor W22, W0, W22
	066 Move W2, 3
	067 Move X0, X20
	068 Move W1, W22
	069 Call DESTransform.CipherFunct, X0, X1, X2
	070 Xor W21, W0, W21
	071 Move W2, 4
	072 Move X0, X20
	073 Move W1, W21
	074 Call DESTransform.CipherFunct, X0, X1, X2
	075 Xor W22, W0, W22
	076 Move W2, 5
	077 Move X0, X20
	078 Move W1, W22
	079 Call DESTransform.CipherFunct, X0, X1, X2
	080 Xor W21, W0, W21
	081 Move W2, 6
	082 Move X0, X20
	083 Move W1, W21
	084 Call DESTransform.CipherFunct, X0, X1, X2
	085 Xor W22, W0, W22
	086 Move W2, 7
	087 Move X0, X20
	088 Move W1, W22
	089 Call DESTransform.CipherFunct, X0, X1, X2
	090 Xor W21, W0, W21
	091 Move W2, 8
	092 Move X0, X20
	093 Move W1, W21
	094 Call DESTransform.CipherFunct, X0, X1, X2
	095 Xor W22, W0, W22
	096 Move W2, 9
	097 Move X0, X20
	098 Move W1, W22
	099 Call DESTransform.CipherFunct, X0, X1, X2
	100 Xor W21, W0, W21
	101 Move W2, 10
	102 Move X0, X20
	103 Move W1, W21
	104 Call DESTransform.CipherFunct, X0, X1, X2
	105 Xor W22, W0, W22
	106 Move W2, 11
	107 Move X0, X20
	108 Move W1, W22
	109 Call DESTransform.CipherFunct, X0, X1, X2
	110 Xor W21, W0, W21
	111 Move W2, 12
	112 Move X0, X20
	113 Move W1, W21
	114 Call DESTransform.CipherFunct, X0, X1, X2
	115 Xor W23, W0, W22
	116 Move W2, 13
	117 Move X0, X20
	118 Move W1, W23
	119 Call DESTransform.CipherFunct, X0, X1, X2
	120 Xor W22, W0, W21
	121 Move W2, 14
	122 Move X0, X20
	123 Move W1, W22
	124 Call DESTransform.CipherFunct, X0, X1, X2
	125 Xor W21, W0, W23
	126 Move W2, 15
	127 Move X0, X20
	128 Move W1, W21
	129 Move W2, 15
	130 Move X0, X20
	131 Move W1, W21
	132 Call DESTransform.CipherFunct, X0, X1, X2
	133 Xor W22, W0, W22
	134 Move W2, 14
	135 Move X0, X20
	136 Move W1, W22
	137 Call DESTransform.CipherFunct, X0, X1, X2
	138 Xor W21, W0, W21
	139 Move W2, 13
	140 Move X0, X20
	141 Move W1, W21
	142 Call DESTransform.CipherFunct, X0, X1, X2
	143 Xor W22, W0, W22
	144 Move W2, 12
	145 Move X0, X20
	146 Move W1, W22
	147 Call DESTransform.CipherFunct, X0, X1, X2
	148 Xor W21, W0, W21
	149 Move W2, 11
	150 Move X0, X20
	151 Move W1, W21
	152 Call DESTransform.CipherFunct, X0, X1, X2
	153 Xor W22, W0, W22
	154 Move W2, 10
	155 Move X0, X20
	156 Move W1, W22
	157 Call DESTransform.CipherFunct, X0, X1, X2
	158 Xor W21, W0, W21
	159 Move W2, 9
	160 Move X0, X20
	161 Move W1, W21
	162 Call DESTransform.CipherFunct, X0, X1, X2
	163 Xor W22, W0, W22
	164 Move W2, 8
	165 Move X0, X20
	166 Move W1, W22
	167 Call DESTransform.CipherFunct, X0, X1, X2
	168 Xor W21, W0, W21
	169 Move W2, 7
	170 Move X0, X20
	171 Move W1, W21
	172 Call DESTransform.CipherFunct, X0, X1, X2
	173 Xor W22, W0, W22
	174 Move W2, 6
	175 Move X0, X20
	176 Move W1, W22
	177 Call DESTransform.CipherFunct, X0, X1, X2
	178 Xor W21, W0, W21
	179 Move W2, 5
	180 Move X0, X20
	181 Move W1, W21
	182 Call DESTransform.CipherFunct, X0, X1, X2
	183 Xor W22, W0, W22
	184 Move W2, 4
	185 Move X0, X20
	186 Move W1, W22
	187 Call DESTransform.CipherFunct, X0, X1, X2
	188 Xor W21, W0, W21
	189 Move W2, 3
	190 Move X0, X20
	191 Move W1, W21
	192 Call DESTransform.CipherFunct, X0, X1, X2
	193 Xor W23, W0, W22
	194 Move W2, 2
	195 Move X0, X20
	196 Move W1, W23
	197 Call DESTransform.CipherFunct, X0, X1, X2
	198 Xor W22, W0, W21
	199 Move W2, 1
	200 Move X0, X20
	201 Move W1, W22
	202 Call DESTransform.CipherFunct, X0, X1, X2
	203 Xor W21, W0, W23
	204 Move X0, X20
	205 Move W1, W21
	206 Move W2, W31
	207 Call DESTransform.CipherFunct, X0, X1, X2
	208 Move X20, [X20+104]
	209 Compare X20, 0
	210 JumpIfEqual {241}
	211 Move W8, [X20+24]
	212 Compare W8, 0
	213 JumpIfEqual {240}
	214 Xor W9, W0, W22
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Move [X20+32], W9
	217 Move [X20+36], W21
	218 Move X0, [X24]
	219 Move W8, [X0+224]
	220 Compare W8, 0
	221 JumpIfNotEqual {224}
	222 Call 0x1C17DFC
	223 Move X0, [X24]
	224 Move X8, [X0+184]
	225 Move X0, X20
	226 Move X2, X19
	227 Move X20, [X31+48]
	228 Move X19, [X31+56]
	229 Move W4, [X8+12]
	230 Move X22, [X31+32]
	231 Move X21, [X31+40]
	232 Move X24, [X31+16]
	233 Move X23, [X31+24]
	234 Move W1, W31
	235 Move W3, W31
	236 Move X5, X31
	237 Move X30, [X31+64]
	238 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	239 Return 
	240 Call 0x1C17F28
	241 Call 0x1C17F20

Method: System.Void ECB(System.Byte[] input, System.Byte[] output)

Disassembly:
	0x0326754C ADD W22, W22, W20
	0x03267550 AND W25, W22, W21, 0x0
	0x03267554 ADD W23, W23, W17
	0x03267558 ORR W24, W25, W24, 0x0
	0x0326755C ADD W23, W23, W24
	0x03267560 ADD W23, W23, W26
	0x03267564 EXTR W23, W23, W23, 0x17
	0x03267568 ADD W23, W23, W22
	0x0326756C BIC W25, W22, W20, 0x0
	0x03267570 AND W24, W23, W20, 0x0
	0x03267574 ORR W24, W24, W25, 0x0
	0x03267578 LDP W25, W26, [X8 + 0x68]
	0x0326757C ADD W21, W21, W0
	0x03267580 ADD W21, W21, W24
	0x03267584 BIC W24, W23, W22, 0x0
	0x03267588 ADD W21, W21, W25
	0x0326758C EXTR W21, W21, W21, 0x12
	0x03267590 ADD W21, W21, W23
	0x03267594 AND W25, W21, W22, 0x0
	0x03267598 ADD W20, W20, W3
	0x0326759C ORR W24, W25, W24, 0x0
	0x032675A0 ADD W20, W20, W24
	0x032675A4 ADD W20, W20, W26
	0x032675A8 EXTR W20, W20, W20, 0xC
	0x032675AC ADD W20, W20, W21
	0x032675B0 BIC W25, W21, W23, 0x0
	0x032675B4 AND W24, W20, W23, 0x0
	0x032675B8 ORR W24, W24, W25, 0x0
	0x032675BC LDP W25, W26, [X8 + 0x70]
	0x032675C0 ADD W22, W22, W2
	0x032675C4 ADD W22, W22, W24
	0x032675C8 BIC W24, W20, W21, 0x0
	0x032675CC ADD W22, W22, W25
	0x032675D0 EXTR W22, W22, W22, 0x1B
	0x032675D4 ADD W22, W22, W20
	0x032675D8 AND W25, W22, W21, 0x0
	0x032675DC ADD W23, W23, W4
	0x032675E0 ORR W24, W25, W24, 0x0
	0x032675E4 ADD W23, W23, W24
	0x032675E8 ADD W23, W23, W26
	0x032675EC EXTR W23, W23, W23, 0x17

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x1176000
	008 Move X22, 0xEBC000
	009 Move W8, [X23+1383]
	010 Move X22, [X22+3960]
	011 Move X19, X2
	012 Move X21, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xEBC000
	019 Move X0, [X0+3960]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+1383], W8
	023 Move X0, [X22]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {29}
	027 Call 0x1C17DFC
	028 Move X0, [X22]
	029 Move X8, [X0+184]
	030 Move X0, X21
	031 Move X1, X19
	032 Move W3, W31
	033 Move X2, [X8+48]
	034 Call DESTransform.Permutation, X0, X1, X2, X3
	035 Move X2, [X20+96]
	036 Move X0, X20
	037 Move X1, X19
	038 Call DESTransform.ProcessBlock, X0, X1, X2
	039 Move X8, [X22]
	040 Move X0, [X20+96]
	041 Move X1, X19
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X8, [X8+184]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move W3, 1
	048 Move X2, [X8+56]
	049 Move X30, [X31+48]
	050 Move X23, [X31+56]
	051 Call DESTransform.Permutation, X0, X1, X2, X3
	052 Return 

Method: System.Byte[] GetStrongKey()

Disassembly:
	0x032667EC RET
	0x032667F0 STR X30, [X31 - 0x20]!
	0x032667F4 STP X20, X19, [X31 + 0x10]
	0x032667F8 MOV W19, W1
	0x032667FC MOVZ W8, 0x1
	0x03266800 MOV X1, X31
	0x03266804 MOV X20, X0
	0x03266808 STRB W8, [X0 + 0x2A]
	0x0326680C BL 0x325335C
	0x03266810 MOV X0, X20
	0x03266814 MOV W1, W19
	0x03266818 LDP X20, X19, [X31 + 0x10]
	0x0326681C MOV W2, W31
	0x03266820 LDR X30, [X31], #0x20
	0x03266824 B 0x3266828
	0x03266828 STR X30, [X31 - 0x40]!
	0x0326682C STP X24, X23, [X31 + 0x10]
	0x03266830 STP X22, X21, [X31 + 0x20]
	0x03266834 STP X20, X19, [X31 + 0x30]
	0x03266838 ADRP X22, 0x1176000
	0x0326683C ADRP X24, 0xEBB000
	0x03266840 ADRP X23, 0xEBB000
	0x03266844 LDRB W8, [X22 + 0x56A]
	0x03266848 LDR X24, [X24 + 0x520]
	0x0326684C LDR X23, [X23 + 0x528]
	0x03266850 MOV W20, W2
	0x03266854 MOV W21, W1
	0x03266858 MOV X19, X0
	0x0326685C TBNZ X8, 0x0, 0x32668C8
	0x03266860 ADRP X0, 0xEBB000
	0x03266864 LDR X0, [X0 + 0x4C8]
	0x03266868 BL 0x1C16CF4
	0x0326686C ADRP X0, 0xEBD000
	0x03266870 LDR X0, [X0 + 0x8A8]
	0x03266874 BL 0x1C16CF4
	0x03266878 ADRP X0, 0xEBA000
	0x0326687C LDR X0, [X0 + 0xF40]
	0x03266880 BL 0x1C16CF4
	0x03266884 ADRP X0, 0xEBD000
	0x03266888 LDR X0, [X0 + 0x8B0]
	0x0326688C BL 0x1C16CF4
	0x03266890 ADRP X0, 0xEBB000
	0x03266894 LDR X0, [X0 + 0xF30]
	0x03266898 BL 0x1C16CF4
	0x0326689C ADRP X0, 0xEBB000
	0x032668A0 LDR X0, [X0 + 0xC90]
	0x032668A4 BL 0x1C16CF4
	0x032668A8 ADRP X0, 0xEBB000
	0x032668AC LDR X0, [X0 + 0x520]
	0x032668B0 BL 0x1C16CF4
	0x032668B4 ADRP X0, 0xEBB000
	0x032668B8 LDR X0, [X0 + 0x528]
	0x032668BC BL 0x1C16CF4
	0x032668C0 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x1177000
	006 Move X20, 0xEBD000
	007 Move W8, [X19+1384]
	008 Move X20, [X20+3960]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xEBD000
	014 Move X0, [X0+3960]
	015 Call 0x1C17CF4
	016 Move X0, 0xEBC000
	017 Move X0, [X0+800]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X19+1384], W8
	021 Move X0, [X20]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {27}
	025 Call 0x1C17DFC
	026 Move X0, [X20]
	027 Move X21, 0xEBC000
	028 Move X21, [X21+800]
	029 Move X8, [X0+184]
	030 Move X1, X31
	031 Move W0, [X8+4]
	032 Call KeyBuilder.Key, X0
	033 Move X8, [X21]
	034 Move X19, X0
	035 Move W9, [X8+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {40}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move X1, X31
	042 Call DES.IsWeakKey, X0
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {59}
	047 Move X0, [X21]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X0, X19
	053 Move X1, X31
	054 Call DES.IsSemiWeakKey, X0
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {65}
	059 Move X0, [X20]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {29}
	063 Call 0x1C17DFC
	064 Move X0, [X20]
	065 Move X0, X19
	066 Move X20, [X31+16]
	067 Move X19, [X31+24]
	068 Move X30, [X31+32]
	069 Move X21, [X31+40]
	070 Return X0

Method: System.Void .cctor()

Disassembly:
	0x032675F0 ADD W23, W23, W22
	0x032675F4 BIC W25, W22, W20, 0x0
	0x032675F8 AND W24, W23, W20, 0x0
	0x032675FC ORR W24, W24, W25, 0x0
	0x03267600 LDP W25, W26, [X8 + 0x78]
	0x03267604 ADD W21, W21, W13
	0x03267608 ADD W21, W21, W24
	0x0326760C BIC W24, W23, W22, 0x0
	0x03267610 ADD W21, W21, W25
	0x03267614 EXTR W21, W21, W21, 0x12
	0x03267618 ADD W21, W21, W23
	0x0326761C AND W25, W21, W22, 0x0
	0x03267620 ADD W20, W20, W14
	0x03267624 ORR W24, W25, W24, 0x0
	0x03267628 ADD W20, W20, W24
	0x0326762C ADD W20, W20, W26
	0x03267630 EXTR W20, W20, W20, 0xC
	0x03267634 ADD W20, W20, W21
	0x03267638 BIC W25, W21, W23, 0x0
	0x0326763C AND W24, W20, W23, 0x0
	0x03267640 ORR W24, W24, W25, 0x0
	0x03267644 LDP W25, W26, [X8 + 0x80]
	0x03267648 ADD W22, W22, W16
	0x0326764C ADD W22, W22, W24
	0x03267650 BIC W24, W20, W21, 0x0
	0x03267654 ADD W22, W22, W25
	0x03267658 EXTR W22, W22, W22, 0x1B
	0x0326765C ADD W22, W22, W20
	0x03267660 AND W25, W22, W21, 0x0
	0x03267664 ADD W23, W23, W19
	0x03267668 ORR W24, W25, W24, 0x0
	0x0326766C ADD W23, W23, W24
	0x03267670 ADD W23, W23, W26
	0x03267674 EXTR W23, W23, W23, 0x17
	0x03267678 ADD W23, W23, W22
	0x0326767C BIC W25, W22, W20, 0x0
	0x03267680 AND W24, W23, W20, 0x0
	0x03267684 ORR W24, W24, W25, 0x0
	0x03267688 LDP W25, W26, [X8 + 0x88]
	0x0326768C ADD W21, W21, W15
	0x03267690 ADD W21, W21, W24
	0x03267694 BIC W24, W23, W22, 0x0
	0x03267698 ADD W21, W21, W25
	0x0326769C EXTR W21, W21, W21, 0x12
	0x032676A0 ADD W21, W21, W23
	0x032676A4 AND W25, W21, W22, 0x0
	0x032676A8 ADD W20, W20, W1
	0x032676AC ORR W24, W25, W24, 0x0
	0x032676B0 ADD W20, W20, W24
	0x032676B4 ADD W20, W20, W26
	0x032676B8 EXTR W20, W20, W20, 0xC
	0x032676BC ADD W20, W20, W21
	0x032676C0 BIC W25, W21, W23, 0x0
	0x032676C4 AND W24, W20, W23, 0x0
	0x032676C8 ORR W24, W24, W25, 0x0
	0x032676CC LDP W25, W26, [X8 + 0x90]
	0x032676D0 ADD W22, W22, W5
	0x032676D4 ADD W22, W22, W24
	0x032676D8 BIC W24, W20, W21, 0x0
	0x032676DC ADD W22, W22, W25
	0x032676E0 EXTR W22, W22, W22, 0x1B
	0x032676E4 ADD W22, W22, W20
	0x032676E8 AND W25, W22, W21, 0x0
	0x032676EC ADD W23, W23, W11
	0x032676F0 ORR W24, W25, W24, 0x0
	0x032676F4 ADD W23, W23, W24
	0x032676F8 ADD W23, W23, W26
	0x032676FC EXTR W23, W23, W23, 0x17
	0x03267700 ADD W23, W23, W22
	0x03267704 BIC W25, W22, W20, 0x0
	0x03267708 AND W24, W23, W20, 0x0
	0x0326770C ORR W24, W24, W25, 0x0
	0x03267710 LDP W25, W26, [X8 + 0x98]
	0x03267714 ADD W21, W21, W6
	0x03267718 ADD W21, W21, W24
	0x0326771C ADD W20, W20, W7
	0x03267720 ADD W21, W21, W25
	0x03267724 EXTR W21, W21, W21, 0x12
	0x03267728 ADD W21, W21, W23
	0x0326772C EOR W24, W21, W23, 0x0
	0x03267730 AND W25, W24, W22, 0x0
	0x03267734 EOR W25, W25, W23, 0x0
	0x03267738 ADD W20, W20, W25
	0x0326773C ADD W20, W20, W26
	0x03267740 LDP W25, W26, [X8 + 0xA0]
	0x03267744 EXTR W20, W20, W20, 0xC
	0x03267748 ADD W20, W20, W21
	0x0326774C ADD W22, W22, W2
	0x03267750 EOR W24, W24, W20, 0x0
	0x03267754 ADD W22, W22, W24
	0x03267758 ADD W22, W22, W25
	0x0326775C EXTR W22, W22, W22, 0x1C
	0x03267760 EOR W24, W20, W21, 0x0
	0x03267764 ADD W22, W22, W20
	0x03267768 ADD W23, W23, W1
	0x0326776C EOR W24, W24, W22, 0x0
	0x03267770 ADD W23, W23, W24
	0x03267774 ADD W23, W23, W26
	0x03267778 LDP W24, W25, [X8 + 0xA8]
	0x0326777C EXTR W23, W23, W23, 0x15
	0x03267780 ADD W26, W20, W19
	0x03267784 EOR W20, W22, W20, 0x0
	0x03267788 ADD W23, W23, W22
	0x0326778C ADD W21, W21, W0
	0x03267790 EOR W20, W20, W23, 0x0
	0x03267794 ADD W20, W21, W20
	0x03267798 ADD W20, W20, W24
	0x0326779C EXTR W20, W20, W20, 0x10
	0x032677A0 EOR W21, W23, W22, 0x0
	0x032677A4 ADD W20, W20, W23
	0x032677A8 EOR W21, W21, W20, 0x0
	0x032677AC ADD W21, W26, W21
	0x032677B0 ADD W21, W21, W25
	0x032677B4 LDP W24, W26, [X8 + 0xB0]
	0x032677B8 EXTR W21, W21, W21, 0x9
	0x032677BC ADD W25, W23, W14
	0x032677C0 EOR W23, W20, W23, 0x0
	0x032677C4 ADD W21, W21, W20
	0x032677C8 ADD W22, W22, W12
	0x032677CC EOR W23, W23, W21, 0x0
	0x032677D0 ADD W22, W22, W23
	0x032677D4 ADD W22, W22, W24
	0x032677D8 EXTR W22, W22, W22, 0x1C
	0x032677DC EOR W23, W21, W20, 0x0
	0x032677E0 ADD W22, W22, W21
	0x032677E4 EOR W23, W23, W22, 0x0
	0x032677E8 ADD W23, W25, W23
	0x032677EC ADD W23, W23, W26

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X28, 0x1176000
	013 Move X20, 0xEBC000
	014 Move X21, 0xEB6000
	015 Move X19, 0xEBD000
	016 Move X25, 0xE8D000
	017 Move X27, 0xEBD000
	018 Move X26, 0xEBD000
	019 Move X24, 0xEBD000
	020 Move X23, 0xEBD000
	021 Move X22, 0xEBD000
	022 Move X20, [X20+3960]
	023 Move X21, [X21+3336]
	024 Move X19, [X19+2168]
	025 Move X25, [X25+1560]
	026 Move W8, [X28+1385]
	027 Move X27, [X27+2176]
	028 Move X26, [X26+2184]
	029 Move X24, [X24+2192]
	030 Move X23, [X23+2200]
	031 Move X22, [X22+2208]
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {65}
	036 Move X0, 0xE8D000
	037 Move X0, [X0+1560]
	038 Call 0x1C17CF4
	039 Move X0, 0xEBC000
	040 Move X0, [X0+3960]
	041 Call 0x1C17CF4
	042 Move X0, 0xEBD000
	043 Move X0, [X0+2176]
	044 Call 0x1C17CF4
	045 Move X0, 0xEBD000
	046 Move X0, [X0+2184]
	047 Call 0x1C17CF4
	048 Move X0, 0xEBD000
	049 Move X0, [X0+2168]
	050 Call 0x1C17CF4
	051 Move X0, 0xEBD000
	052 Move X0, [X0+2192]
	053 Call 0x1C17CF4
	054 Move X0, 0xEBD000
	055 Move X0, [X0+2208]
	056 Call 0x1C17CF4
	057 Move X0, 0xEBD000
	058 Move X0, [X0+2200]
	059 Call 0x1C17CF4
	060 Move X0, 0xEB6000
	061 Move X0, [X0+3336]
	062 Call 0x1C17CF4
	063 Move W8, 1
	064 Move [X28+1385], W8
	065 Move X8, [X20]
	066 Move X9, -41398272
	067 Move V0, [X9+96]
	068 Move W1, 512
	069 Move X8, [X8+184]
	070 Move [X8], V0
	071 Move X0, [X21]
	072 Call 0x1C17D6C
	073 Move X1, [X19]
	074 Move X2, X31
	075 Move X19, X0
	076 Call RuntimeHelpers.InitializeArray, X0, X1
	077 Move X8, [X20]
	078 Move W1, 56
	079 Move X8, [X8+184]
	080 Move [X8+16], X19
	081 Move X0, [X25]
	082 Call 0x1C17D6C
	083 Move X1, [X27]
	084 Move X2, X31
	085 Move X19, X0
	086 Call RuntimeHelpers.InitializeArray, X0, X1
	087 Move X8, [X20]
	088 Move W1, 16
	089 Move X8, [X8+184]
	090 Move [X8+24], X19
	091 Move X0, [X25]
	092 Call 0x1C17D6C
	093 Move X1, [X26]
	094 Move X2, X31
	095 Move X19, X0
	096 Call RuntimeHelpers.InitializeArray, X0, X1
	097 Move X8, [X20]
	098 Move W1, 48
	099 Move X8, [X8+184]
	100 Move [X8+32], X19
	101 Move X0, [X25]
	102 Call 0x1C17D6C
	103 Move X1, [X24]
	104 Move X2, X31
	105 Move X19, X0
	106 Call RuntimeHelpers.InitializeArray, X0, X1
	107 Move X8, [X20]
	108 Move W1, 512
	109 Move X8, [X8+184]
	110 Move [X8+40], X19
	111 Move X0, [X21]
	112 Call 0x1C17D6C
	113 Move X1, [X23]
	114 Move X2, X31
	115 Move X19, X0
	116 Call RuntimeHelpers.InitializeArray, X0, X1
	117 Move X8, [X20]
	118 Move W1, 512
	119 Move X8, [X8+184]
	120 Move [X8+48], X19
	121 Move X0, [X21]
	122 Call 0x1C17D6C
	123 Move X1, [X22]
	124 Move X2, X31
	125 Move X19, X0
	126 Call RuntimeHelpers.InitializeArray, X0, X1
	127 Move X8, [X20]
	128 Move X22, [X31+64]
	129 Move X21, [X31+72]
	130 Move X24, [X31+48]
	131 Move X23, [X31+56]
	132 Move X26, [X31+32]
	133 Move X25, [X31+40]
	134 Move X8, [X8+184]
	135 Move X28, [X31+16]
	136 Move X27, [X31+24]
	137 Move [X8+56], X19
	138 Move X20, [X31+80]
	139 Move X19, [X31+88]
	140 Move X30, [X31+96]
	141 Return 

