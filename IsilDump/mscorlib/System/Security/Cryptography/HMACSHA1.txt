Type: System.Security.Cryptography.HMACSHA1

Method: System.Void .ctor()

Disassembly:
	0x03255D98 ADRP X0, 0xECE000
	0x03255D9C LDR X0, [X0 + 0x100]
	0x03255DA0 BL 0x1C16D08
	0x03255DA4 MOV X1, X0
	0x03255DA8 MOV X0, X20
	0x03255DAC BL 0x1C16DEC
	0x03255DB0 STR X30, [X31 - 0x20]!
	0x03255DB4 STP X20, X19, [X31 + 0x10]
	0x03255DB8 ADRP X0, 0xECD000
	0x03255DBC LDR X0, [X0 + 0xD40]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move W0, 64
	005 Move X1, X31
	006 Call Utils.GenerateRandom, X0
	007 Move X1, X0
	008 Move X0, X19
	009 Move W2, W31
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Call HMACSHA1..ctor, X0, X1, X2
	013 Return 

Method: System.Void .ctor(System.Byte[] key)

Disassembly:
	0x03255DC0 BL 0x1C16D08
	0x03255DC4 MOV X1, X31

ISIL:
	001 Move W2, W31

Method: System.Void .ctor(System.Byte[] key, System.Boolean useManagedSha1)

Disassembly:
	0x03255DC8 BL 0x33BDD84
	0x03255DCC MOV X19, X0
	0x03255DD0 ADRP X0, 0xE9E000
	0x03255DD4 LDR X0, [X0 + 0xB40]
	0x03255DD8 BL 0x1C16D08
	0x03255DDC BL 0x1C16F10
	0x03255DE0 MOV X1, X19
	0x03255DE4 MOV X2, X31
	0x03255DE8 MOV X20, X0
	0x03255DEC BL 0x3379A44
	0x03255DF0 ADRP X0, 0xECE000
	0x03255DF4 LDR X0, [X0 + 0x108]
	0x03255DF8 BL 0x1C16D08
	0x03255DFC MOV X1, X0
	0x03255E00 MOV X0, X20
	0x03255E04 BL 0x1C16DEC
	0x03255E08 STR X30, [X31 - 0x20]!
	0x03255E0C STP X20, X19, [X31 + 0x10]
	0x03255E10 ADRP X0, 0xECD000
	0x03255E14 LDR X0, [X0 + 0xD40]
	0x03255E18 BL 0x1C16D08
	0x03255E1C MOV X1, X31
	0x03255E20 BL 0x33BDD84
	0x03255E24 MOV X19, X0
	0x03255E28 ADRP X0, 0xE9E000
	0x03255E2C LDR X0, [X0 + 0xB40]
	0x03255E30 BL 0x1C16D08
	0x03255E34 BL 0x1C16F10
	0x03255E38 MOV X1, X19
	0x03255E3C MOV X2, X31
	0x03255E40 MOV X20, X0
	0x03255E44 BL 0x3379A44
	0x03255E48 ADRP X0, 0xECE000
	0x03255E4C LDR X0, [X0 + 0x110]
	0x03255E50 BL 0x1C16D08
	0x03255E54 MOV X1, X0
	0x03255E58 MOV X0, X20
	0x03255E5C BL 0x1C16DEC
	0x03255E60 RET
	0x03255E64 STR X30, [X31 - 0x20]!
	0x03255E68 STP X20, X19, [X31 + 0x10]
	0x03255E6C ADRP X0, 0xECD000
	0x03255E70 LDR X0, [X0 + 0xD40]
	0x03255E74 BL 0x1C16D08

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x1188000
	008 Move X21, 0xECC000
	009 Move X22, 0xECF000
	010 Move W8, [X23+1257]
	011 Move X21, [X21+3392]
	012 Move X22, [X22+176]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xECF000
	020 Move X0, [X0+176]
	021 Call 0x1C17CF4
	022 Move X0, 0xECC000
	023 Move X0, [X0+3392]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+1257], W8
	027 Move X0, X20
	028 Move X1, X31
	029 Call HMAC..ctor, X0
	030 Move X8, [X21]
	031 Move [X20+56], X8
	032 Move X0, [X22]
	033 Call 0x1C17F10
	034 Move X21, X0
	035 Call SHA1Managed..ctor, X0
	036 Move [X20+64], X21
	037 Move X0, [X22]
	038 Call 0x1C17F10
	039 Move X21, X0
	040 Call SHA1Managed..ctor, X0
	041 Move W8, 160
	042 Move [X20+72], X21
	043 Move [X20+20], W8
	044 Move X0, X20
	045 Move X1, X19
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X22, [X31+16]
	049 Move X21, [X31+24]
	050 Move X2, X31
	051 Move X30, [X31+48]
	052 Move X23, [X31+56]
	053 Call HMAC.InitializeKey, X0, X1
	054 Return 

