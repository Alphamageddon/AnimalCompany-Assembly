Type: System.Security.Cryptography.HMACMD5

Method: System.Void .ctor()

Disassembly:
	0x03255ACC MOV X4, X31
	0x03255AD0 MOV X20, X0
	0x03255AD4 BL 0x324CD5C
	0x03255AD8 STR X20, [X19 + 0x38]
	0x03255ADC CBZ X20, 0x3255B04
	0x03255AE0 MOV X0, X20
	0x03255AE4 MOV X1, X31
	0x03255AE8 BL 0x324D170
	0x03255AEC LDR X0, [X19 + 0x40]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move W0, 64
	005 Move X1, X31
	006 Call Utils.GenerateRandom, X0
	007 Move X1, X0
	008 Move X0, X19
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]

Method: System.Void .ctor(System.Byte[] key)

Disassembly:
	0x03255AF0 CBZ X0, 0x3255B04
	0x03255AF4 LDP X20, X19, [X31 + 0x20]
	0x03255AF8 LDP X22, X21, [X31 + 0x10]
	0x03255AFC LDR X30, [X31], #0x30
	0x03255B00 B 0x3255B08
	0x03255B04 BL 0x1C16F20
	0x03255B08 STR X30, [X31 - 0x20]!
	0x03255B0C STP X20, X19, [X31 + 0x10]
	0x03255B10 ADRP X20, 0x1187000
	0x03255B14 LDRB W8, [X20 + 0x4F4]
	0x03255B18 MOV X19, X0
	0x03255B1C TBNZ X8, 0x0, 0x3255B34
	0x03255B20 ADRP X0, 0xE9E000
	0x03255B24 LDR X0, [X0 + 0x618]
	0x03255B28 BL 0x1C16CF4
	0x03255B2C MOVZ W8, 0x1
	0x03255B30 STRB W8, [X20 + 0x4F4]
	0x03255B34 LDR X0, [X19 + 0x28]
	0x03255B38 CBZ X0, 0x3255B70
	0x03255B3C MOV X1, X31
	0x03255B40 BL 0x33A01F0
	0x03255B44 CBZ X0, 0x3255B64
	0x03255B48 ADRP X8, 0xE9E000
	0x03255B4C LDR X8, [X8 + 0x618]
	0x03255B50 MOV X19, X0
	0x03255B54 LDR X20, [X8]
	0x03255B58 MOV X1, X20
	0x03255B5C BL 0x1C16E00
	0x03255B60 CBZ X0, 0x3255B74
	0x03255B64 LDP X20, X19, [X31 + 0x10]
	0x03255B68 LDR X30, [X31], #0x20
	0x03255B6C RET
	0x03255B70 BL 0x1C16F20
	0x03255B74 MOV X0, X19
	0x03255B78 MOV X1, X20
	0x03255B7C BL 0x1C171E0
	0x03255B80 STP X30, X21, [X31 - 0x20]!
	0x03255B84 STP X20, X19, [X31 + 0x10]
	0x03255B88 ADRP X21, 0x1187000
	0x03255B8C LDRB W8, [X21 + 0x4F2]
	0x03255B90 MOV W19, W1
	0x03255B94 MOV X20, X0
	0x03255B98 TBNZ X8, 0x0, 0x3255BB0
	0x03255B9C ADRP X0, 0xE9E000
	0x03255BA0 LDR X0, [X0 + 0xE00]
	0x03255BA4 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x1188000
	008 Move X21, 0xECC000
	009 Move X22, 0xECF000
	010 Move W8, [X23+1255]
	011 Move X21, [X21+3408]
	012 Move X22, [X22+144]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xECF000
	020 Move X0, [X0+144]
	021 Call 0x1C17CF4
	022 Move X0, 0xECC000
	023 Move X0, [X0+3408]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+1255], W8
	027 Move X0, X20
	028 Move X1, X31
	029 Call HMAC..ctor, X0
	030 Move X8, [X21]
	031 Move [X20+56], X8
	032 Move X0, [X22]
	033 Call 0x1C17F10
	034 Move X1, X31
	035 Move X21, X0
	036 Call MD5CryptoServiceProvider..ctor, X0
	037 Move [X20+64], X21
	038 Move X0, [X22]
	039 Call 0x1C17F10
	040 Move X1, X31
	041 Move X21, X0
	042 Call MD5CryptoServiceProvider..ctor, X0
	043 Move W8, 128
	044 Move [X20+72], X21
	045 Move [X20+20], W8
	046 Move X0, X20
	047 Move X1, X19
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X2, X31
	053 Move X30, [X31+48]
	054 Move X23, [X31+56]
	055 Call HMAC.InitializeKey, X0, X1
	056 Return 

