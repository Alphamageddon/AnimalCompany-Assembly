Type: System.Security.Cryptography.CryptoConfig

Method: System.Object CreateFromName(System.String name)

Disassembly:
	0x03262120 MOV X0, X19
	0x03262124 LDP X20, X19, [X31 + 0x10]
	0x03262128 LDR X30, [X31], #0x20
	0x0326212C RET
	0x03262130 STP X30, X21, [X31 - 0x20]!
	0x03262134 STP X20, X19, [X31 + 0x10]
	0x03262138 ADRP X20, 0x117A000
	0x0326213C ADRP X21, 0xE91000
	0x03262140 LDRB W8, [X20 + 0x556]
	0x03262144 LDR X21, [X21 + 0x618]
	0x03262148 MOV X19, X0
	0x0326214C TBNZ X8, 0x0, 0x3262164
	0x03262150 ADRP X0, 0xE91000
	0x03262154 LDR X0, [X0 + 0x618]
	0x03262158 BL 0x1C16CF4
	0x0326215C MOVZ W8, 0x1
	0x03262160 STRB W8, [X20 + 0x556]
	0x03262164 LDR X0, [X21]
	0x03262168 MOVZ W1, 0x8
	0x0326216C BL 0x1C16D6C
	0x03262170 STR X0, [X19 + 0x18]
	0x03262174 BL 0x3262098

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x117B000
	006 Move X21, 0xEBF000
	007 Move W8, [X20+1372]
	008 Move X21, [X21+3032]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xEBF000
	015 Move X0, [X0+3032]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1372], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call CryptoConfig.CreateFromName, X0, X1
	031 Return X0

Method: System.Object CreateFromName(System.String name, System.Object[] args)

Disassembly:
	0x0326382C LDR W8, [X0 + 0xE0]
	0x03263830 CBNZ W8, 0x3263838
	0x03263834 BL 0x1C16DFC
	0x03263838 ADRP X8, 0xEC0000
	0x0326383C LDR X8, [X8 + 0x690]
	0x03263840 B 0x32640DC
	0x03263844 MOVZ W8, 0xC243
	0x03263848 MOVK W8, 0x45A10000
	0x0326384C CMP W0, W8
	0x03263850 B.HI 0x3263960
	0x03263854 MOVZ W8, 0xF59A
	0x03263858 MOVK W8, 0x44630000
	0x0326385C CMP W0, W8
	0x03263860 B.EQ 0x3264260
	0x03263864 MOVZ W8, 0xC243
	0x03263868 MOVK W8, 0x45A10000
	0x0326386C CMP W0, W8
	0x03263870 B.NE 0x3263A10
	0x03263874 ADRP X8, 0xEC0000
	0x03263878 LDR X8, [X8 + 0x4C8]
	0x0326387C B 0x3263DD8
	0x03263880 MOVZ W8, 0x40FC
	0x03263884 MOVK W8, 0xC3040000
	0x03263888 CMP W0, W8
	0x0326388C B.HI 0x326398C
	0x03263890 MOVZ W8, 0x5CB3
	0x03263894 MOVK W8, 0xC0230000
	0x03263898 CMP W0, W8
	0x0326389C B.EQ 0x32642A0
	0x032638A0 MOVZ W8, 0x40FC
	0x032638A4 MOVK W8, 0xC3040000
	0x032638A8 CMP W0, W8
	0x032638AC B.NE 0x3263A10
	0x032638B0 ADRP X8, 0xEC0000
	0x032638B4 LDR X8, [X8 + 0x588]
	0x032638B8 B 0x32641EC
	0x032638BC MOVZ W8, 0xF25E
	0x032638C0 MOVK W8, 0x8EBA0000
	0x032638C4 CMP W0, W8
	0x032638C8 B.HI 0x32639B8
	0x032638CC MOVZ W8, 0xBEF3
	0x032638D0 MOVK W8, 0x8EAA0000
	0x032638D4 CMP W0, W8
	0x032638D8 B.EQ 0x32642F8
	0x032638DC MOVZ W8, 0xF25E
	0x032638E0 MOVK W8, 0x8EBA0000
	0x032638E4 CMP W0, W8
	0x032638E8 B.NE 0x3263A10
	0x032638EC ADRP X8, 0xEC0000
	0x032638F0 LDR X8, [X8 + 0x630]
	0x032638F4 B 0x3264474
	0x032638F8 MOVZ W8, 0xEB42
	0x032638FC MOVK W8, 0xF9350000
	0x03263900 CMP W0, W8
	0x03263904 B.HI 0x32639E4
	0x03263908 MOVZ W8, 0xC90B
	0x0326390C MOVK W8, 0xF5940000
	0x03263910 CMP W0, W8
	0x03263914 B.EQ 0x3264334
	0x03263918 MOVZ W8, 0xEB42
	0x0326391C MOVK W8, 0xF9350000
	0x03263920 CMP W0, W8
	0x03263924 B.NE 0x3263A10
	0x03263928 ADRP X8, 0xEC0000
	0x0326392C LDR X8, [X8 + 0x5A0]
	0x03263930 B 0x3264474
	0x03263934 MOVZ W8, 0xB432
	0x03263938 MOVK W8, 0xE0DC0000
	0x0326393C CMP W0, W8
	0x03263940 B.EQ 0x3264374
	0x03263944 MOVZ W8, 0x2612
	0x03263948 MOVK W8, 0xE4F70000
	0x0326394C CMP W0, W8
	0x03263950 B.NE 0x3263A10
	0x03263954 ADRP X8, 0xEC0000
	0x03263958 LDR X8, [X8 + 0x788]
	0x0326395C B 0x3263DD8
	0x03263960 MOVZ W8, 0x692
	0x03263964 MOVK W8, 0x4C3F0000
	0x03263968 CMP W0, W8
	0x0326396C B.EQ 0x32643B0
	0x03263970 MOVZ W8, 0x7C5E
	0x03263974 MOVK W8, 0x4E9D0000
	0x03263978 CMP W0, W8
	0x0326397C B.NE 0x3263A10
	0x03263980 ADRP X8, 0xEC0000
	0x03263984 LDR X8, [X8 + 0x6C0]
	0x03263988 B 0x3263F98
	0x0326398C MOVZ W8, 0x689F
	0x03263990 MOVK W8, 0xC4710000
	0x03263994 CMP W0, W8
	0x03263998 B.EQ 0x32643EC
	0x0326399C MOVZ W8, 0xDFB5
	0x032639A0 MOVK W8, 0xC7130000
	0x032639A4 CMP W0, W8
	0x032639A8 B.NE 0x3263A10
	0x032639AC ADRP X8, 0xEC0000
	0x032639B0 LDR X8, [X8 + 0x5F0]
	0x032639B4 B 0x3264110
	0x032639B8 MOVZ W8, 0xFD12
	0x032639BC MOVK W8, 0x8FF60000
	0x032639C0 CMP W0, W8
	0x032639C4 B.EQ 0x326442C
	0x032639C8 MOVZ W8, 0x48B2
	0x032639CC MOVK W8, 0x918F0000
	0x032639D0 CMP W0, W8
	0x032639D4 B.NE 0x3263A10
	0x032639D8 ADRP X8, 0xEC0000
	0x032639DC LDR X8, [X8 + 0x678]
	0x032639E0 B 0x32643F4
	0x032639E4 MOVZ W8, 0x9971
	0x032639E8 MOVK W8, 0xFA530000
	0x032639EC CMP W0, W8
	0x032639F0 B.EQ 0x326446C
	0x032639F4 MOVZ W8, 0x944E
	0x032639F8 MOVK W8, 0xFE3B0000
	0x032639FC CMP W0, W8
	0x03263A00 B.NE 0x3263A10
	0x03263A04 ADRP X8, 0xEC0000
	0x03263A08 LDR X8, [X8 + 0x610]
	0x03263A0C B 0x326406C
	0x03263A10 MOV X21, X31
	0x03263A14 LDR X0, [X24]
	0x03263A18 LDR W8, [X0 + 0xE0]
	0x03263A1C CBNZ W8, 0x3263A24
	0x03263A20 BL 0x1C16DFC
	0x03263A24 MOV X0, X21
	0x03263A28 MOV X1, X31
	0x03263A2C MOV X2, X31
	0x03263A30 BL 0x3395194
	0x03263A34 TBZ X0, 0x0, 0x326459C
	0x03263A38 ADRP X21, 0xEBD000
	0x03263A3C LDR X21, [X21 + 0xBD8]
	0x03263A40 LDR X0, [X21]
	0x03263A44 LDR W8, [X0 + 0xE0]
	0x03263A48 CBNZ W8, 0x3263A54
	0x03263A4C BL 0x1C16DFC
	0x03263A50 LDR X0, [X21]
	0x03263A54 LDR X8, [X0 + 0xB8]
	0x03263A58 LDR X22, [X8]
	0x03263A5C STRB W31, [X31 + 0x4]
	0x03263A60 ADD X1, X31, 0x4
	0x03263A64 MOV X0, X22
	0x03263A68 MOV X2, X31
	0x03263A6C BL 0x33DE64C
	0x03263A70 LDR X0, [X21]
	0x03263A74 LDR W8, [X0 + 0xE0]
	0x03263A78 CBNZ W8, 0x3263A84
	0x03263A7C BL 0x1C16DFC
	0x03263A80 LDR X0, [X21]
	0x03263A84 LDR X8, [X0 + 0xB8]
	0x03263A88 LDR X0, [X8 + 0x8]
	0x03263A8C MOVZ W8, 0xB4
	0x03263A90 CMP X0, 0x0
	0x03263A94 CSEL W25, W31, W8, EQ
	0x03263A98 CMP W25, 0xB4
	0x03263A9C B.EQ 0x3263AB0
	0x03263AA0 CBZ W25, 0x3264534
	0x03263AA4 MOV X23, X31
	0x03263AA8 MOV X21, X31
	0x03263AAC B 0x3264540
	0x03263AB0 CBZ X0, 0x32644F4
	0x03263AB4 ADRP X8, 0xEC0000
	0x03263AB8 LDR X8, [X8 + 0x450]
	0x03263ABC LDR X3, [X8]
	0x03263AC0 ADD X2, X31, 0x8
	0x03263AC4 MOV X1, X20
	0x03263AC8 BL 0x2AA6B2C
	0x03263ACC TBZ X0, 0x0, 0x3264534
	0x03263AD0 LDR X0, [X31 + 0x8]
	0x03263AD4 MOV X1, X19
	0x03263AD8 MOV X2, X31
	0x03263ADC BL 0x33A700C
	0x03263AE0 MOV X21, X0
	0x03263AE4 MOV X23, X31
	0x03263AE8 MOVZ W25, 0xB7
	0x03263AEC B 0x3264540
	0x03263AF0 ADRP X8, 0xEC0000
	0x03263AF4 LDR X8, [X8 + 0x700]
	0x03263AF8 B 0x3263FF0
	0x03263AFC ADRP X8, 0xEC0000
	0x03263B00 LDR X8, [X8 + 0x760]
	0x03263B04 B 0x3263EA0
	0x03263B08 ADRP X8, 0xEC0000
	0x03263B0C LDR X8, [X8 + 0x4B8]
	0x03263B10 B 0x3264474
	0x03263B14 ADRP X8, 0xEC0000
	0x03263B18 LDR X8, [X8 + 0x4D8]
	0x03263B1C B 0x3263BAC
	0x03263B20 ADRP X8, 0xEC0000
	0x03263B24 LDR X8, [X8 + 0x738]
	0x03263B28 MOV X0, X21
	0x03263B2C MOV X2, X31
	0x03263B30 LDR X1, [X8]
	0x03263B34 BL 0x321BA08
	0x03263B38 MOV X21, X31
	0x03263B3C TBZ X0, 0x0, 0x3263A14
	0x03263B40 LDR X0, [X24]
	0x03263B44 LDR W8, [X0 + 0xE0]
	0x03263B48 CBNZ W8, 0x3263B50
	0x03263B4C BL 0x1C16DFC
	0x03263B50 ADRP X8, 0xEC0000
	0x03263B54 LDR X8, [X8 + 0x558]
	0x03263B58 B 0x32640DC
	0x03263B5C ADRP X8, 0xEC0000
	0x03263B60 LDR X8, [X8 + 0x618]
	0x03263B64 B 0x3263FF0
	0x03263B68 ADRP X8, 0xEC0000
	0x03263B6C LDR X8, [X8 + 0x728]
	0x03263B70 B 0x3263DD8
	0x03263B74 ADRP X8, 0xEC0000
	0x03263B78 LDR X8, [X8 + 0x740]
	0x03263B7C B 0x3263BEC
	0x03263B80 ADRP X8, 0xEC0000
	0x03263B84 LDR X8, [X8 + 0x7F0]
	0x03263B88 B 0x3263FF0
	0x03263B8C ADRP X8, 0xEC0000
	0x03263B90 LDR X8, [X8 + 0x718]
	0x03263B94 B 0x3264474
	0x03263B98 ADRP X8, 0xEC0000
	0x03263B9C LDR X8, [X8 + 0x7D0]
	0x03263BA0 B 0x326402C
	0x03263BA4 ADRP X8, 0xEC0000
	0x03263BA8 LDR X8, [X8 + 0x7B0]
	0x03263BAC LDR X1, [X8]
	0x03263BB0 MOV X0, X21
	0x03263BB4 MOV X2, X31
	0x03263BB8 BL 0x321BA08
	0x03263BBC MOV X21, X31
	0x03263BC0 TBZ X0, 0x0, 0x3263A14
	0x03263BC4 ADRP X8, 0xEBE000
	0x03263BC8 LDR X8, [X8 + 0x1A0]
	0x03263BCC LDR X0, [X8]
	0x03263BD0 BL 0x1C16F10
	0x03263BD4 MOV X1, X31
	0x03263BD8 MOV X21, X0
	0x03263BDC BL 0x325B9CC
	0x03263BE0 B 0x32645B0
	0x03263BE4 ADRP X8, 0xEC0000
	0x03263BE8 LDR X8, [X8 + 0x658]
	0x03263BEC LDR X1, [X8]
	0x03263BF0 MOV X0, X21
	0x03263BF4 MOV X2, X31
	0x03263BF8 BL 0x321BA08
	0x03263BFC MOV X21, X31
	0x03263C00 TBZ X0, 0x0, 0x3263A14
	0x03263C04 ADRP X8, 0xEC0000
	0x03263C08 LDR X8, [X8 + 0x480]
	0x03263C0C LDR X0, [X8]
	0x03263C10 BL 0x1C16F10
	0x03263C14 MOV X21, X0
	0x03263C18 BL 0x32605C8
	0x03263C1C B 0x32645B0
	0x03263C20 ADRP X8, 0xEC0000
	0x03263C24 LDR X8, [X8 + 0x538]
	0x03263C28 B 0x32643B8
	0x03263C2C ADRP X8, 0xEC0000
	0x03263C30 LDR X8, [X8 + 0x600]
	0x03263C34 B 0x3263F98
	0x03263C38 ADRP X8, 0xEC0000
	0x03263C3C LDR X8, [X8 + 0x6E0]
	0x03263C40 B 0x3263EF8
	0x03263C44 ADRP X8, 0xEC0000
	0x03263C48 LDR X8, [X8 + 0x608]
	0x03263C4C B 0x3263F98
	0x03263C50 ADRP X8, 0xEC0000
	0x03263C54 LDR X8, [X8 + 0x5E8]
	0x03263C58 B 0x326402C
	0x03263C5C ADRP X8, 0xEC0000
	0x03263C60 LDR X8, [X8 + 0x7C8]
	0x03263C64 LDR X1, [X8]
	0x03263C68 MOV X0, X21
	0x03263C6C MOV X2, X31
	0x03263C70 BL 0x321BA08
	0x03263C74 MOV X21, X31
	0x03263C78 TBZ X0, 0x0, 0x3263A14
	0x03263C7C ADRP X8, 0xEC0000
	0x03263C80 LDR X8, [X8 + 0x168]
	0x03263C84 LDR X0, [X8]
	0x03263C88 BL 0x1C16F10
	0x03263C8C MOV X1, X31
	0x03263C90 MOV X21, X0
	0x03263C94 BL 0x3256628
	0x03263C98 B 0x32645B0
	0x03263C9C ADRP X8, 0xEC0000
	0x03263CA0 LDR X8, [X8 + 0x650]
	0x03263CA4 MOV X0, X21
	0x03263CA8 MOV X2, X31
	0x03263CAC LDR X1, [X8]
	0x03263CB0 BL 0x321BA08
	0x03263CB4 MOV X21, X31
	0x03263CB8 TBZ X0, 0x0, 0x3263A14
	0x03263CBC LDR X0, [X24]
	0x03263CC0 LDR W8, [X0 + 0xE0]
	0x03263CC4 CBNZ W8, 0x3263CCC
	0x03263CC8 BL 0x1C16DFC
	0x03263CCC ADRP X8, 0xEC0000
	0x03263CD0 LDR X8, [X8 + 0x710]
	0x03263CD4 B 0x32640DC
	0x03263CD8 ADRP X8, 0xEC0000
	0x03263CDC LDR X8, [X8 + 0x640]
	0x03263CE0 B 0x3263CEC
	0x03263CE4 ADRP X8, 0xEC0000
	0x03263CE8 LDR X8, [X8 + 0x5D0]
	0x03263CEC LDR X1, [X8]
	0x03263CF0 MOV X0, X21
	0x03263CF4 MOV X2, X31
	0x03263CF8 BL 0x321BA08
	0x03263CFC MOV X21, X31
	0x03263D00 TBZ X0, 0x0, 0x3263A14
	0x03263D04 ADRP X8, 0xEC0000
	0x03263D08 LDR X8, [X8 + 0x478]
	0x03263D0C LDR X0, [X8]
	0x03263D10 BL 0x1C16F10
	0x03263D14 MOV X21, X0
	0x03263D18 BL 0x3260560
	0x03263D1C B 0x32645B0
	0x03263D20 ADRP X8, 0xEC0000
	0x03263D24 LDR X8, [X8 + 0x590]
	0x03263D28 MOV X0, X21
	0x03263D2C MOV X2, X31
	0x03263D30 LDR X1, [X8]
	0x03263D34 BL 0x321BA08
	0x03263D38 MOV X21, X31
	0x03263D3C TBZ X0, 0x0, 0x3263A14
	0x03263D40 ADRP X8, 0xEBE000
	0x03263D44 LDR X8, [X8 + 0x138]
	0x03263D48 LDR X0, [X8]
	0x03263D4C BL 0x1C16F10
	0x03263D50 MOV X1, X31
	0x03263D54 MOV X21, X0
	0x03263D58 BL 0x3253E84
	0x03263D5C B 0x32645B0
	0x03263D60 ADRP X8, 0xEC0000
	0x03263D64 LDR X8, [X8 + 0x500]
	0x03263D68 B 0x32642A8
	0x03263D6C ADRP X8, 0xEC0000
	0x03263D70 LDR X8, [X8 + 0x578]
	0x03263D74 MOV X0, X21
	0x03263D78 MOV X2, X31
	0x03263D7C LDR X1, [X8]
	0x03263D80 BL 0x321BA08
	0x03263D84 MOV X21, X31
	0x03263D88 TBZ X0, 0x0, 0x3263A14
	0x03263D8C ADRP X8, 0xEC0000
	0x03263D90 LDR X8, [X8 + 0xB0]
	0x03263D94 LDR X0, [X8]
	0x03263D98 BL 0x1C16F10
	0x03263D9C MOV X1, X31
	0x03263DA0 MOV X21, X0
	0x03263DA4 BL 0x3254E78
	0x03263DA8 B 0x32645B0
	0x03263DAC ADRP X8, 0xEC0000
	0x03263DB0 LDR X8, [X8 + 0x4D0]
	0x03263DB4 B 0x3264170
	0x03263DB8 ADRP X8, 0xEC0000
	0x03263DBC LDR X8, [X8 + 0x7A0]
	0x03263DC0 B 0x3263EA0
	0x03263DC4 ADRP X8, 0xEC0000
	0x03263DC8 LDR X8, [X8 + 0x530]
	0x03263DCC B 0x3264474
	0x03263DD0 ADRP X8, 0xEC0000
	0x03263DD4 LDR X8, [X8 + 0x4E0]
	0x03263DD8 LDR X1, [X8]
	0x03263DDC MOV X0, X21
	0x03263DE0 MOV X2, X31
	0x03263DE4 BL 0x321BA08
	0x03263DE8 MOV X21, X31
	0x03263DEC TBZ X0, 0x0, 0x3263A14
	0x03263DF0 ADRP X8, 0xEC0000
	0x03263DF4 LDR X8, [X8 + 0x98]
	0x03263DF8 LDR X0, [X8]
	0x03263DFC BL 0x1C16F10
	0x03263E00 MOV X1, X31
	0x03263E04 MOV X21, X0
	0x03263E08 BL 0x3254C7C
	0x03263E0C B 0x32645B0
	0x03263E10 ADRP X8, 0xEC0000
	0x03263E14 LDR X8, [X8 + 0x750]
	0x03263E18 B 0x3263E24
	0x03263E1C ADRP X8, 0xEC0000
	0x03263E20 LDR X8, [X8 + 0x620]
	0x03263E24 LDR X1, [X8]
	0x03263E28 MOV X0, X21
	0x03263E2C MOV X2, X31
	0x03263E30 BL 0x321BA08
	0x03263E34 MOV X21, X31
	0x03263E38 TBZ X0, 0x0, 0x3263A14
	0x03263E3C ADRP X8, 0xEBF000
	0x03263E40 LDR X8, [X8 + 0xF60]
	0x03263E44 LDR X0, [X8]
	0x03263E48 BL 0x1C16F10
	0x03263E4C MOV X1, X31
	0x03263E50 MOV X21, X0
	0x03263E54 BL 0x3252D24
	0x03263E58 B 0x32645B0
	0x03263E5C ADRP X8, 0xEC0000
	0x03263E60 LDR X8, [X8 + 0x4F8]
	0x03263E64 LDR X1, [X8]
	0x03263E68 MOV X0, X21
	0x03263E6C MOV X2, X31
	0x03263E70 BL 0x321BA08
	0x03263E74 MOV X21, X31
	0x03263E78 TBZ X0, 0x0, 0x3263A14
	0x03263E7C ADRP X8, 0xEC0000
	0x03263E80 LDR X8, [X8 + 0x440]
	0x03263E84 LDR X0, [X8]
	0x03263E88 BL 0x1C16F10
	0x03263E8C MOV X21, X0
	0x03263E90 BL 0x3260700
	0x03263E94 B 0x32645B0
	0x03263E98 ADRP X8, 0xEC0000
	0x03263E9C LDR X8, [X8 + 0x560]
	0x03263EA0 LDR X1, [X8]
	0x03263EA4 MOV X0, X21
	0x03263EA8 MOV X2, X31
	0x03263EAC BL 0x321BA08
	0x03263EB0 MOV X21, X31
	0x03263EB4 TBZ X0, 0x0, 0x3263A14
	0x03263EB8 ADRP X8, 0xEC0000
	0x03263EBC LDR X8, [X8 + 0x468]
	0x03263EC0 LDR X0, [X8]
	0x03263EC4 BL 0x1C16F10
	0x03263EC8 MOV X1, X31
	0x03263ECC MOV X21, X0
	0x03263ED0 BL 0x32553B4
	0x03263ED4 B 0x32645B0
	0x03263ED8 ADRP X8, 0xEC0000
	0x03263EDC LDR X8, [X8 + 0x5B0]
	0x03263EE0 B 0x3263FF0
	0x03263EE4 ADRP X8, 0xEC0000
	0x03263EE8 LDR X8, [X8 + 0x5C0]
	0x03263EEC B 0x32642A8
	0x03263EF0 ADRP X8, 0xEC0000
	0x03263EF4 LDR X8, [X8 + 0x628]
	0x03263EF8 LDR X1, [X8]
	0x03263EFC MOV X0, X21
	0x03263F00 MOV X2, X31
	0x03263F04 BL 0x321BA08
	0x03263F08 MOV X21, X31
	0x03263F0C TBZ X0, 0x0, 0x3263A14
	0x03263F10 ADRP X8, 0xEC0000
	0x03263F14 LDR X8, [X8 + 0x470]
	0x03263F18 LDR X0, [X8]
	0x03263F1C BL 0x1C16F10
	0x03263F20 MOV X1, X31
	0x03263F24 MOV X21, X0
	0x03263F28 BL 0x325569C
	0x03263F2C B 0x32645B0
	0x03263F30 ADRP X8, 0xEC0000
	0x03263F34 LDR X8, [X8 + 0x748]
	0x03263F38 B 0x326437C
	0x03263F3C ADRP X8, 0xEC0000
	0x03263F40 LDR X8, [X8 + 0x570]
	0x03263F44 B 0x3264300
	0x03263F48 ADRP X8, 0xEC0000
	0x03263F4C LDR X8, [X8 + 0x770]
	0x03263F50 MOV X0, X21
	0x03263F54 MOV X2, X31
	0x03263F58 LDR X1, [X8]
	0x03263F5C BL 0x321BA08
	0x03263F60 MOV X21, X31
	0x03263F64 TBZ X0, 0x0, 0x3263A14
	0x03263F68 LDR X0, [X24]
	0x03263F6C LDR W8, [X0 + 0xE0]
	0x03263F70 CBNZ W8, 0x3263F78
	0x03263F74 BL 0x1C16DFC
	0x03263F78 ADRP X8, 0xEC0000
	0x03263F7C LDR X8, [X8 + 0x680]
	0x03263F80 B 0x32640DC
	0x03263F84 ADRP X8, 0xEC0000
	0x03263F88 LDR X8, [X8 + 0x7E0]
	0x03263F8C B 0x3263FF0
	0x03263F90 ADRP X8, 0xEC0000
	0x03263F94 LDR X8, [X8 + 0x7D8]
	0x03263F98 LDR X1, [X8]
	0x03263F9C MOV X0, X21
	0x03263FA0 MOV X2, X31
	0x03263FA4 BL 0x321BA08
	0x03263FA8 MOV X21, X31
	0x03263FAC TBZ X0, 0x0, 0x3263A14
	0x03263FB0 ADRP X8, 0xEBD000
	0x03263FB4 LDR X8, [X8 + 0xDF0]
	0x03263FB8 LDR X0, [X8]
	0x03263FBC BL 0x1C16F10
	0x03263FC0 MOV X1, X31
	0x03263FC4 MOV X21, X0
	0x03263FC8 BL 0x3254D98
	0x03263FCC B 0x32645B0
	0x03263FD0 ADRP X8, 0xEC0000
	0x03263FD4 LDR X8, [X8 + 0x6B0]
	0x03263FD8 B 0x3264300
	0x03263FDC ADRP X8, 0xEC0000
	0x03263FE0 LDR X8, [X8 + 0x550]
	0x03263FE4 B 0x3264228
	0x03263FE8 ADRP X8, 0xEC0000
	0x03263FEC LDR X8, [X8 + 0x568]
	0x03263FF0 LDR X1, [X8]
	0x03263FF4 MOV X0, X21
	0x03263FF8 MOV X2, X31
	0x03263FFC BL 0x321BA08
	0x03264000 MOV X21, X31
	0x03264004 TBZ X0, 0x0, 0x3263A14
	0x03264008 ADRP X8, 0xEBF000
	0x0326400C LDR X8, [X8 + 0x320]
	0x03264010 LDR X0, [X8]
	0x03264014 BL 0x1C16F10
	0x03264018 MOV X21, X0
	0x0326401C BL 0x32647C0
	0x03264020 B 0x32645B0
	0x03264024 ADRP X8, 0xEBF000
	0x03264028 LDR X8, [X8 + 0x668]
	0x0326402C LDR X1, [X8]
	0x03264030 MOV X0, X21
	0x03264034 MOV X2, X31
	0x03264038 BL 0x321BA08
	0x0326403C MOV X21, X31
	0x03264040 TBZ X0, 0x0, 0x3263A14
	0x03264044 ADRP X8, 0xEBF000
	0x03264048 LDR X8, [X8 + 0xC0]
	0x0326404C LDR X0, [X8]
	0x03264050 BL 0x1C16F10
	0x03264054 MOV X1, X31
	0x03264058 MOV X21, X0
	0x0326405C BL 0x3255068
	0x03264060 B 0x32645B0
	0x03264064 ADRP X8, 0xEBF000
	0x03264068 LDR X8, [X8 + 0x518]
	0x0326406C LDR X1, [X8]
	0x03264070 MOV X0, X21
	0x03264074 MOV X2, X31
	0x03264078 BL 0x321BA08
	0x0326407C MOV X21, X31
	0x03264080 TBZ X0, 0x0, 0x3263A14
	0x03264084 ADRP X8, 0xEBF000
	0x03264088 LDR X8, [X8 + 0x4A0]
	0x0326408C LDR X0, [X8]
	0x03264090 BL 0x1C16F10
	0x03264094 MOV X1, X31
	0x03264098 MOV X21, X0
	0x0326409C BL 0x3256C58
	0x032640A0 B 0x32645B0
	0x032640A4 ADRP X8, 0xEBF000
	0x032640A8 LDR X8, [X8 + 0x5C8]
	0x032640AC MOV X0, X21
	0x032640B0 MOV X2, X31
	0x032640B4 LDR X1, [X8]
	0x032640B8 BL 0x321BA08
	0x032640BC MOV X21, X31
	0x032640C0 TBZ X0, 0x0, 0x3263A14
	0x032640C4 LDR X0, [X24]
	0x032640C8 LDR W8, [X0 + 0xE0]
	0x032640CC CBNZ W8, 0x32640D4
	0x032640D0 BL 0x1C16DFC
	0x032640D4 ADRP X8, 0xEBF000
	0x032640D8 LDR X8, [X8 + 0x4F0]
	0x032640DC ADRP X9, 0xEB8000
	0x032640E0 ADRP X10, 0xEBF000
	0x032640E4 LDR X9, [X9 + 0x1B0]
	0x032640E8 LDR X10, [X10 + 0x438]
	0x032640EC LDR X0, [X8]
	0x032640F0 LDR X1, [X9]
	0x032640F4 LDR X2, [X10]
	0x032640F8 BL 0x1C1703C
	0x032640FC MOV X21, X0
	0x03264100 STR X0, [X31 + 0x8]
	0x03264104 B 0x3263A14
	0x03264108 ADRP X8, 0xEBF000
	0x0326410C LDR X8, [X8 + 0x5D8]
	0x03264110 LDR X1, [X8]
	0x03264114 MOV X0, X21
	0x03264118 MOV X2, X31
	0x0326411C BL 0x321BA08
	0x03264120 MOV X21, X31
	0x03264124 TBZ X0, 0x0, 0x3263A14
	0x03264128 ADRP X8, 0xEBF000
	0x0326412C LDR X8, [X8 + 0x488]
	0x03264130 LDR X0, [X8]
	0x03264134 BL 0x1C16F10
	0x03264138 MOV X21, X0
	0x0326413C BL 0x3260630
	0x03264140 B 0x32645B0
	0x03264144 ADRP X8, 0xEBF000
	0x03264148 LDR X8, [X8 + 0x638]
	0x0326414C B 0x32641B0
	0x03264150 ADRP X8, 0xEBF000
	0x03264154 LDR X8, [X8 + 0x6D0]
	0x03264158 B 0x326437C
	0x0326415C ADRP X8, 0xEBF000
	0x03264160 LDR X8, [X8 + 0x548]
	0x03264164 B 0x326437C
	0x03264168 ADRP X8, 0xEBF000
	0x0326416C LDR X8, [X8 + 0x7E8]
	0x03264170 LDR X1, [X8]
	0x03264174 MOV X0, X21
	0x03264178 MOV X2, X31
	0x0326417C BL 0x321BA08
	0x03264180 MOV X21, X31
	0x03264184 TBZ X0, 0x0, 0x3263A14
	0x03264188 ADRP X8, 0xEBF000
	0x0326418C LDR X8, [X8 + 0x460]
	0x03264190 LDR X0, [X8]
	0x03264194 BL 0x1C16F10
	0x03264198 MOV X1, X31
	0x0326419C MOV X21, X0
	0x032641A0 BL 0x3255184
	0x032641A4 B 0x32645B0
	0x032641A8 ADRP X8, 0xEBF000
	0x032641AC LDR X8, [X8 + 0x7B8]
	0x032641B0 LDR X1, [X8]
	0x032641B4 MOV X0, X21
	0x032641B8 MOV X2, X31
	0x032641BC BL 0x321BA08
	0x032641C0 MOV X21, X31
	0x032641C4 TBZ X0, 0x0, 0x3263A14
	0x032641C8 ADRP X8, 0xEBF000
	0x032641CC LDR X8, [X8 + 0x490]
	0x032641D0 LDR X0, [X8]
	0x032641D4 BL 0x1C16F10
	0x032641D8 MOV X21, X0
	0x032641DC BL 0x3260698
	0x032641E0 B 0x32645B0
	0x032641E4 ADRP X8, 0xEBF000
	0x032641E8 LDR X8, [X8 + 0x5F8]
	0x032641EC LDR X1, [X8]
	0x032641F0 MOV X0, X21
	0x032641F4 MOV X2, X31
	0x032641F8 BL 0x321BA08
	0x032641FC MOV X21, X31
	0x03264200 TBZ X0, 0x0, 0x3263A14
	0x03264204 ADRP X8, 0xEBF000
	0x03264208 LDR X8, [X8 + 0x140]
	0x0326420C LDR X0, [X8]
	0x03264210 BL 0x1C16F10
	0x03264214 MOV X21, X0
	0x03264218 BL 0x3262198
	0x0326421C B 0x32645B0
	0x03264220 ADRP X8, 0xEBF000
	0x03264224 LDR X8, [X8 + 0x6F0]
	0x03264228 LDR X1, [X8]
	0x0326422C MOV X0, X21
	0x03264230 MOV X2, X31
	0x03264234 BL 0x321BA08
	0x03264238 MOV X21, X31
	0x0326423C TBZ X0, 0x0, 0x3263A14
	0x03264240 ADRP X8, 0xEBD000
	0x03264244 LDR X8, [X8 + 0x370]
	0x03264248 LDR X0, [X8]
	0x0326424C BL 0x1C16F10
	0x03264250 MOV X1, X31
	0x03264254 MOV X21, X0
	0x03264258 BL 0x3254ACC
	0x0326425C B 0x32645B0
	0x03264260 ADRP X8, 0xEBF000
	0x03264264 LDR X8, [X8 + 0x778]
	0x03264268 MOV X0, X21
	0x0326426C MOV X2, X31
	0x03264270 LDR X1, [X8]
	0x03264274 BL 0x321BA08
	0x03264278 MOV X21, X31
	0x0326427C TBZ X0, 0x0, 0x3263A14
	0x03264280 ADRP X8, 0xEBF000
	0x03264284 LDR X8, [X8 + 0x498]
	0x03264288 LDR X0, [X8]
	0x0326428C BL 0x1C16F10
	0x03264290 MOV X1, X31
	0x03264294 MOV X21, X0
	0x03264298 BL 0x3252210
	0x0326429C B 0x32645B0
	0x032642A0 ADRP X8, 0xEBF000
	0x032642A4 LDR X8, [X8 + 0x730]
	0x032642A8 LDR X1, [X8]
	0x032642AC MOV X0, X21
	0x032642B0 MOV X2, X31
	0x032642B4 BL 0x321BA08
	0x032642B8 MOV X21, X31
	0x032642BC TBZ X0, 0x0, 0x3263A14
	0x032642C0 ADRP X8, 0xEBC000
	0x032642C4 LDR X8, [X8 + 0xF40]
	0x032642C8 LDR X0, [X8]
	0x032642CC BL 0x1C16F10
	0x032642D0 MOVZ W8, 0x1
	0x032642D4 MOV X1, X31
	0x032642D8 MOV X21, X0
	0x032642DC STRB W8, [X0 + 0x2A]
	0x032642E0 BL 0x325335C
	0x032642E4 MOVZ W1, 0x400
	0x032642E8 MOV X0, X21
	0x032642EC MOV W2, W31
	0x032642F0 BL 0x3266828
	0x032642F4 B 0x32645B0
	0x032642F8 ADRP X8, 0xEBF000
	0x032642FC LDR X8, [X8 + 0x688]
	0x03264300 LDR X1, [X8]
	0x03264304 MOV X0, X21
	0x03264308 MOV X2, X31
	0x0326430C BL 0x321BA08
	0x03264310 MOV X21, X31
	0x03264314 TBZ X0, 0x0, 0x3263A14
	0x03264318 ADRP X8, 0xEBF000
	0x0326431C LDR X8, [X8 + 0x90]
	0x03264320 LDR X0, [X8]
	0x03264324 BL 0x1C16F10
	0x03264328 MOV X21, X0
	0x0326432C BL 0x3264708
	0x03264330 B 0x32645B0
	0x03264334 ADRP X8, 0xEBF000
	0x03264338 LDR X8, [X8 + 0x6F8]
	0x0326433C MOV X0, X21
	0x03264340 MOV X2, X31
	0x03264344 LDR X1, [X8]
	0x03264348 BL 0x321BA08
	0x0326434C MOV X21, X31
	0x03264350 TBZ X0, 0x0, 0x3263A14
	0x03264354 ADRP X8, 0xEBD000
	0x03264358 LDR X8, [X8 + 0x150]
	0x0326435C LDR X0, [X8]
	0x03264360 BL 0x1C16F10
	0x03264364 MOV X1, X31
	0x03264368 MOV X21, X0
	0x0326436C BL 0x3252208
	0x03264370 B 0x32645B0
	0x03264374 ADRP X8, 0xEBF000
	0x03264378 LDR X8, [X8 + 0x780]
	0x0326437C LDR X1, [X8]
	0x03264380 MOV X0, X21
	0x03264384 MOV X2, X31
	0x03264388 BL 0x321BA08
	0x0326438C MOV X21, X31
	0x03264390 TBZ X0, 0x0, 0x3263A14
	0x03264394 ADRP X8, 0xEBF000
	0x03264398 LDR X8, [X8 + 0xE0]
	0x0326439C LDR X0, [X8]
	0x032643A0 BL 0x1C16F10
	0x032643A4 MOV X21, X0
	0x032643A8 BL 0x325F484
	0x032643AC B 0x32645B0
	0x032643B0 ADRP X8, 0xEBF000
	0x032643B4 LDR X8, [X8 + 0x768]
	0x032643B8 LDR X1, [X8]
	0x032643BC MOV X0, X21
	0x032643C0 MOV X2, X31
	0x032643C4 BL 0x321BA08
	0x032643C8 MOV X21, X31
	0x032643CC TBZ X0, 0x0, 0x3263A14
	0x032643D0 ADRP X8, 0xEBF000
	0x032643D4 LDR X8, [X8 + 0x3E8]
	0x032643D8 LDR X0, [X8]
	0x032643DC BL 0x1C16F10
	0x032643E0 MOV X21, X0
	0x032643E4 BL 0x32616C0
	0x032643E8 B 0x32645B0
	0x032643EC ADRP X8, 0xEBF000
	0x032643F0 LDR X8, [X8 + 0x5B8]
	0x032643F4 LDR X1, [X8]
	0x032643F8 MOV X0, X21
	0x032643FC MOV X2, X31
	0x03264400 BL 0x321BA08
	0x03264404 MOV X21, X31
	0x03264408 TBZ X0, 0x0, 0x3263A14
	0x0326440C ADRP X8, 0xEBF000
	0x03264410 LDR X8, [X8 + 0x458]
	0x03264414 LDR X0, [X8]
	0x03264418 BL 0x1C16F10
	0x0326441C MOV X1, X31
	0x03264420 MOV X21, X0
	0x03264424 BL 0x3254BA8
	0x03264428 B 0x32645B0
	0x0326442C ADRP X8, 0xEBF000
	0x03264430 LDR X8, [X8 + 0x6A8]
	0x03264434 LDR X1, [X8]
	0x03264438 MOV X0, X21
	0x0326443C MOV X2, X31
	0x03264440 BL 0x321BA08
	0x03264444 MOV X21, X31
	0x03264448 TBZ X0, 0x0, 0x3263A14
	0x0326444C ADRP X8, 0xE9C000
	0x03264450 LDR X8, [X8 + 0xDF8]
	0x03264454 LDR X0, [X8]
	0x03264458 BL 0x1C16F10
	0x0326445C MOV X1, X31
	0x03264460 MOV X21, X0
	0x03264464 BL 0x3254F94
	0x03264468 B 0x32645B0
	0x0326446C ADRP X8, 0xEBF000
	0x03264470 LDR X8, [X8 + 0x648]
	0x03264474 LDR X1, [X8]
	0x03264478 MOV X0, X21
	0x0326447C MOV X2, X31
	0x03264480 BL 0x321BA08
	0x03264484 MOV X21, X31
	0x03264488 TBZ X0, 0x0, 0x3263A14
	0x0326448C ADRP X8, 0xEBF000
	0x03264490 LDR X8, [X8 + 0xD0]
	0x03264494 LDR X0, [X8]
	0x03264498 BL 0x1C16F10
	0x0326449C MOV X1, X31
	0x032644A0 MOV X21, X0
	0x032644A4 BL 0x3255280
	0x032644A8 B 0x32645B0
	0x032644AC ADRP X0, 0xE94000
	0x032644B0 LDR X0, [X0 + 0x528]
	0x032644B4 BL 0x1C16D08
	0x032644B8 BL 0x1C16F10
	0x032644BC MOV X19, X0
	0x032644C0 ADRP X0, 0xE97000
	0x032644C4 LDR X0, [X0 + 0x588]
	0x032644C8 BL 0x1C16D08
	0x032644CC MOV X1, X0
	0x032644D0 MOV X0, X19
	0x032644D4 MOV X2, X31
	0x032644D8 BL 0x330E100
	0x032644DC ADRP X0, 0xEBF000
	0x032644E0 LDR X0, [X0 + 0x438]
	0x032644E4 BL 0x1C16D08
	0x032644E8 MOV X1, X0
	0x032644EC MOV X0, X19
	0x032644F0 BL 0x1C16DEC
	0x032644F4 BL 0x1C16F20
	0x032644F8 MOV X23, X1
	0x032644FC CMP W23, 0x1
	0x03264500 MOV X21, X0
	0x03264504 B.NE 0x326461C
	0x03264508 MOV X0, X21
	0x0326450C BL 0x3EB1AD0
	0x03264510 MOV X21, X0
	0x03264514 ADRP X0, 0xE95000
	0x03264518 LDR X0, [X0 + 0xCC0]
	0x0326451C BL 0x1C16D08
	0x03264520 LDR X8, [X21]
	0x03264524 LDR X1, [X8]
	0x03264528 BL 0x1C17270
	0x0326452C TBZ X0, 0x0, 0x32645D4
	0x03264530 BL 0x3EB1AE0
	0x03264534 MOV X23, X31
	0x03264538 MOV X21, X31
	0x0326453C MOVZ W25, 0xB9
	0x03264540 LDRB W8, [X31 + 0x4]
	0x03264544 CBZ W8, 0x3264554
	0x03264548 MOV X0, X22
	0x0326454C MOV X1, X31
	0x03264550 BL 0x33E14E4
	0x03264554 CBNZ X23, 0x32645CC
	0x03264558 CMP W25, 0xB9
	0x0326455C B.EQ 0x3264564
	0x03264560 CBNZ W25, 0x32645B0
	0x03264564 LDR X0, [X24]
	0x03264568 LDR W8, [X0 + 0xE0]
	0x0326456C CBNZ W8, 0x3264574
	0x03264570 BL 0x1C16DFC
	0x03264574 ADRP X8, 0xEB8000
	0x03264578 ADRP X9, 0xEBF000
	0x0326457C LDR X8, [X8 + 0x1B0]
	0x03264580 LDR X9, [X9 + 0x438]
	0x03264584 MOV X0, X20
	0x03264588 LDR X1, [X8]
	0x0326458C LDR X2, [X9]
	0x03264590 BL 0x1C1703C
	0x03264594 MOV X21, X0
	0x03264598 STR X0, [X31 + 0x8]
	0x0326459C MOV X0, X21
	0x032645A0 MOV X1, X19
	0x032645A4 MOV X2, X31
	0x032645A8 BL 0x33A700C
	0x032645AC MOV X21, X0
	0x032645B0 MOV X0, X21
	0x032645B4 LDP X20, X19, [X31 + 0x40]
	0x032645B8 LDP X22, X21, [X31 + 0x30]
	0x032645BC LDP X24, X23, [X31 + 0x20]
	0x032645C0 LDP X30, X25, [X31 + 0x10]
	0x032645C4 ADD X31, X31, 0x50
	0x032645C8 RET
	0x032645CC MOV X0, X23
	0x032645D0 BL 0x1C16F18
	0x032645D4 MOVZ W0, 0x8
	0x032645D8 BL 0x3EB1AF0
	0x032645DC LDR X8, [X21]
	0x032645E0 STR X8, [X0]
	0x032645E4 ADRP X1, 0xC50000
	0x032645E8 ADD X1, X1, 0xE58
	0x032645EC MOV X2, X31
	0x032645F0 BL 0x3EB1B00
	0x032645F4 B 0x32646C8
	0x032645F8 B 0x3264614
	0x032645FC MOV X23, X1
	0x03264600 MOV X21, X0
	0x03264604 BL 0x3EB1AE0
	0x03264608 B 0x326461C
	0x0326460C B 0x3264614
	0x03264610 B 0x3264614
	0x03264614 MOV X23, X1
	0x03264618 MOV X21, X0
	0x0326461C CMP W23, 0x1
	0x03264620 B.NE 0x326463C
	0x03264624 MOV X0, X21
	0x03264628 BL 0x3EB1AD0
	0x0326462C LDR X23, [X0]
	0x03264630 BL 0x3EB1AE0
	0x03264634 MOV W25, W31
	0x03264638 B 0x3263AA8
	0x0326463C MOV X23, X31
	0x03264640 B 0x3264648
	0x03264644 MOV X21, X0
	0x03264648 LDRB W8, [X31 + 0x4]
	0x0326464C CBZ W8, 0x326465C
	0x03264650 MOV X0, X22
	0x03264654 MOV X1, X31
	0x03264658 BL 0x33E14E4
	0x0326465C CBZ X23, 0x32646D0
	0x03264660 MOV X0, X23
	0x03264664 BL 0x1C16F18
	0x03264668 CMP W1, 0x1
	0x0326466C MOV X21, X0
	0x03264670 B.NE 0x32646D0
	0x03264674 MOV X0, X21
	0x03264678 BL 0x3EB1AD0
	0x0326467C MOV X19, X0
	0x03264680 ADRP X0, 0xE95000
	0x03264684 LDR X0, [X0 + 0xCC0]
	0x03264688 BL 0x1C16D08
	0x0326468C LDR X8, [X19]
	0x03264690 LDR X1, [X8]
	0x03264694 BL 0x1C17270
	0x03264698 TBZ X0, 0x0, 0x32646A8
	0x0326469C BL 0x3EB1AE0
	0x032646A0 MOV X21, X31
	0x032646A4 B 0x32645B0
	0x032646A8 MOVZ W0, 0x8
	0x032646AC BL 0x3EB1AF0
	0x032646B0 LDR X8, [X19]
	0x032646B4 STR X8, [X0]
	0x032646B8 ADRP X1, 0xC50000
	0x032646BC ADD X1, X1, 0xE58
	0x032646C0 MOV X2, X31
	0x032646C4 BL 0x3EB1B00
	0x032646C8 MOV X21, X0
	0x032646CC BL 0x3EB1AE0
	0x032646D0 MOV X0, X21
	0x032646D4 BL 0x1D2C690
	0x032646D8 BL 0x1990590
	0x032646DC STP X30, X19, [X31 - 0x10]!
	0x032646E0 MOVZ W8, 0x1
	0x032646E4 MOV X1, X31
	0x032646E8 MOV X19, X0
	0x032646EC STRB W8, [X0 + 0x2A]
	0x032646F0 BL 0x325335C
	0x032646F4 MOVZ W1, 0x400
	0x032646F8 MOV X0, X19
	0x032646FC MOV W2, W31
	0x03264700 LDP X30, X19, [X31], #0x10
	0x03264704 B 0x3266828
	0x03264708 STR X30, [X31 - 0x30]!
	0x0326470C STP X22, X21, [X31 + 0x10]
	0x03264710 STP X20, X19, [X31 + 0x20]
	0x03264714 ADRP X22, 0x1178000
	0x03264718 ADRP X21, 0xEB8000
	0x0326471C ADRP X20, 0xE8F000
	0x03264720 LDRB W8, [X22 + 0x56B]
	0x03264724 LDR X21, [X21 + 0xD08]
	0x03264728 LDR X20, [X20 + 0x618]
	0x0326472C MOV X19, X0
	0x03264730 TBNZ X8, 0x0, 0x3264754
	0x03264734 ADRP X0, 0xE8F000
	0x03264738 LDR X0, [X0 + 0x618]
	0x0326473C BL 0x1C16CF4
	0x03264740 ADRP X0, 0xEB8000
	0x03264744 LDR X0, [X0 + 0xD08]
	0x03264748 BL 0x1C16CF4
	0x0326474C MOVZ W8, 0x1
	0x03264750 STRB W8, [X22 + 0x56B]
	0x03264754 MOV X0, X19
	0x03264758 MOV X1, X31
	0x0326475C BL 0x32560DC
	0x03264760 LDR X0, [X21]
	0x03264764 MOVZ W1, 0x4
	0x03264768 BL 0x1C16D6C
	0x0326476C STR X0, [X19 + 0x28]
	0x03264770 LDR X0, [X21]
	0x03264774 MOVZ W1, 0x10
	0x03264778 BL 0x1C16D6C
	0x0326477C STR X0, [X19 + 0x30]
	0x03264780 LDR X0, [X20]
	0x03264784 MOVZ W1, 0x40
	0x03264788 BL 0x1C16D6C
	0x0326478C LDR X8, [X19]
	0x03264790 STR X0, [X19 + 0x40]
	0x03264794 MOV X0, X19
	0x03264798 LDP X20, X19, [X31 + 0x20]
	0x0326479C LDR X2, [X8 + 0x258]
	0x032647A0 LDR X1, [X8 + 0x260]
	0x032647A4 LDP X22, X21, [X31 + 0x10]
	0x032647A8 LDR X30, [X31], #0x30
	0x032647AC BR X2
	0x032647B0 MOV X1, X31
	0x032647B4 B 0x3252208
	0x032647B8 MOV X1, X31
	0x032647BC B 0x3252210
	0x032647C0 STP X30, X21, [X31 - 0x20]!
	0x032647C4 STP X20, X19, [X31 + 0x10]
	0x032647C8 ADRP X21, 0x1178000
	0x032647CC ADRP X20, 0xEBF000
	0x032647D0 LDRB W8, [X21 + 0x57B]
	0x032647D4 LDR X20, [X20 + 0x7F8]
	0x032647D8 MOV X19, X0
	0x032647DC TBNZ X8, 0x0, 0x32647F4
	0x032647E0 ADRP X0, 0xEBF000
	0x032647E4 LDR X0, [X0 + 0x7F8]
	0x032647E8 BL 0x1C16CF4
	0x032647EC MOVZ W8, 0x1
	0x032647F0 STRB W8, [X21 + 0x57B]
	0x032647F4 MOV X0, X19
	0x032647F8 MOV X1, X31
	0x032647FC BL 0x325D0C8
	0x03264800 LDR X0, [X20]
	0x03264804 BL 0x1C16F10
	0x03264808 MOV X20, X0
	0x0326480C BL 0x3269630
	0x03264810 STR X20, [X19 + 0x28]
	0x03264814 LDP X20, X19, [X31 + 0x10]
	0x03264818 LDP X30, X21, [X31], #0x20
	0x0326481C RET
	0x03264820 STR X30, [X31 - 0x20]!
	0x03264824 STP X20, X19, [X31 + 0x10]
	0x03264828 ADRP X20, 0x1178000
	0x0326482C LDRB W8, [X20 + 0x55E]
	0x03264830 MOV X19, X0
	0x03264834 TBNZ X8, 0x0, 0x3264A20
	0x03264838 ADRP X0, 0xEBF000
	0x0326483C LDR X0, [X0 + 0x4A8]
	0x03264840 BL 0x1C16CF4
	0x03264844 ADRP X0, 0xEBF000
	0x03264848 LDR X0, [X0 + 0x4B8]
	0x0326484C BL 0x1C16CF4
	0x03264850 ADRP X0, 0xEBF000
	0x03264854 LDR X0, [X0 + 0x4C8]
	0x03264858 BL 0x1C16CF4
	0x0326485C ADRP X0, 0xEBF000
	0x03264860 LDR X0, [X0 + 0x2E0]
	0x03264864 BL 0x1C16CF4
	0x03264868 ADRP X0, 0xEBF000
	0x0326486C LDR X0, [X0 + 0x800]
	0x03264870 BL 0x1C16CF4
	0x03264874 ADRP X0, 0xEBF000
	0x03264878 LDR X0, [X0 + 0x4E0]
	0x0326487C BL 0x1C16CF4
	0x03264880 ADRP X0, 0xEBF000
	0x03264884 LDR X0, [X0 + 0x4E8]
	0x03264888 BL 0x1C16CF4
	0x0326488C ADRP X0, 0xEBF000
	0x03264890 LDR X0, [X0 + 0x528]
	0x03264894 BL 0x1C16CF4
	0x03264898 ADRP X0, 0xEBF000
	0x0326489C LDR X0, [X0 + 0x548]
	0x032648A0 BL 0x1C16CF4
	0x032648A4 ADRP X0, 0xEBF000
	0x032648A8 LDR X0, [X0 + 0x808]
	0x032648AC BL 0x1C16CF4
	0x032648B0 ADRP X0, 0xEBC000
	0x032648B4 LDR X0, [X0 + 0xD30]
	0x032648B8 BL 0x1C16CF4
	0x032648BC ADRP X0, 0xEBF000
	0x032648C0 LDR X0, [X0 + 0x568]
	0x032648C4 BL 0x1C16CF4
	0x032648C8 ADRP X0, 0xEBF000
	0x032648CC LDR X0, [X0 + 0x570]
	0x032648D0 BL 0x1C16CF4
	0x032648D4 ADRP X0, 0xEBF000
	0x032648D8 LDR X0, [X0 + 0x578]
	0x032648DC BL 0x1C16CF4
	0x032648E0 ADRP X0, 0xEBF000
	0x032648E4 LDR X0, [X0 + 0x5A0]
	0x032648E8 BL 0x1C16CF4
	0x032648EC ADRP X0, 0xEBF000
	0x032648F0 LDR X0, [X0 + 0x5B0]
	0x032648F4 BL 0x1C16CF4
	0x032648F8 ADRP X0, 0xEBF000
	0x032648FC LDR X0, [X0 + 0x5E0]
	0x03264900 BL 0x1C16CF4
	0x03264904 ADRP X0, 0xEBF000
	0x03264908 LDR X0, [X0 + 0x2E8]
	0x0326490C BL 0x1C16CF4
	0x03264910 ADRP X0, 0xEBF000
	0x03264914 LDR X0, [X0 + 0x810]
	0x03264918 BL 0x1C16CF4
	0x0326491C ADRP X0, 0xEBF000
	0x03264920 LDR X0, [X0 + 0x818]
	0x03264924 BL 0x1C16CF4
	0x03264928 ADRP X0, 0xEBF000
	0x0326492C LDR X0, [X0 + 0x618]
	0x03264930 BL 0x1C16CF4
	0x03264934 ADRP X0, 0xEBF000
	0x03264938 LDR X0, [X0 + 0x630]
	0x0326493C BL 0x1C16CF4
	0x03264940 ADRP X0, 0xEBF000
	0x03264944 LDR X0, [X0 + 0x648]
	0x03264948 BL 0x1C16CF4
	0x0326494C ADRP X0, 0xEBF000
	0x03264950 LDR X0, [X0 + 0x668]
	0x03264954 BL 0x1C16CF4
	0x03264958 ADRP X0, 0xEBF000
	0x0326495C LDR X0, [X0 + 0x670]
	0x03264960 BL 0x1C16CF4
	0x03264964 ADRP X0, 0xEBF000
	0x03264968 LDR X0, [X0 + 0x688]
	0x0326496C BL 0x1C16CF4
	0x03264970 ADRP X0, 0xEBF000
	0x03264974 LDR X0, [X0 + 0x820]
	0x03264978 BL 0x1C16CF4
	0x0326497C ADRP X0, 0xEBF000
	0x03264980 LDR X0, [X0 + 0x6B0]
	0x03264984 BL 0x1C16CF4
	0x03264988 ADRP X0, 0xEBF000
	0x0326498C LDR X0, [X0 + 0x6C8]
	0x03264990 BL 0x1C16CF4
	0x03264994 ADRP X0, 0xEBF000
	0x03264998 LDR X0, [X0 + 0x6D0]
	0x0326499C BL 0x1C16CF4
	0x032649A0 ADRP X0, 0xEBC000
	0x032649A4 LDR X0, [X0 + 0xD08]
	0x032649A8 BL 0x1C16CF4
	0x032649AC ADRP X0, 0xEBF000
	0x032649B0 LDR X0, [X0 + 0x700]
	0x032649B4 BL 0x1C16CF4
	0x032649B8 ADRP X0, 0xEBF000
	0x032649BC LDR X0, [X0 + 0x708]
	0x032649C0 BL 0x1C16CF4
	0x032649C4 ADRP X0, 0xEBF000
	0x032649C8 LDR X0, [X0 + 0x718]
	0x032649CC BL 0x1C16CF4
	0x032649D0 ADRP X0, 0xEBF000
	0x032649D4 LDR X0, [X0 + 0x720]
	0x032649D8 BL 0x1C16CF4
	0x032649DC ADRP X0, 0xEBF000
	0x032649E0 LDR X0, [X0 + 0x728]
	0x032649E4 BL 0x1C16CF4
	0x032649E8 ADRP X0, 0xEBF000
	0x032649EC LDR X0, [X0 + 0x748]
	0x032649F0 BL 0x1C16CF4
	0x032649F4 ADRP X0, 0xEBF000
	0x032649F8 LDR X0, [X0 + 0x2F0]
	0x032649FC BL 0x1C16CF4
	0x03264A00 ADRP X0, 0xEBF000
	0x03264A04 LDR X0, [X0 + 0x828]
	0x03264A08 BL 0x1C16CF4
	0x03264A0C ADRP X0, 0xEBF000
	0x03264A10 LDR X0, [X0 + 0x7C0]
	0x03264A14 BL 0x1C16CF4
	0x03264A18 MOVZ W8, 0x1
	0x03264A1C STRB W8, [X20 + 0x55E]
	0x03264A20 CBZ X19, 0x3264FAC
	0x03264A24 MOV X0, X19
	0x03264A28 MOV X1, X31
	0x03264A2C BL 0x322B6E4
	0x03264A30 MOV X1, X31
	0x03264A34 MOV X19, X0
	0x03264A38 BL 0x335C87C
	0x03264A3C MOVZ W8, 0xBEF3
	0x03264A40 MOVK W8, 0x8EAA0000
	0x03264A44 CMP W0, W8
	0x03264A48 B.HI 0x3264AA8
	0x03264A4C MOVZ W8, 0x81BE
	0x03264A50 MOVK W8, 0x648D0000
	0x03264A54 CMP W0, W8
	0x03264A58 B.HI 0x3264B04
	0x03264A5C MOVZ W8, 0x23F4
	0x03264A60 MOVK W8, 0x22E20000
	0x03264A64 CMP W0, W8
	0x03264A68 B.HI 0x3264B9C
	0x03264A6C MOVZ W8, 0xA804
	0x03264A70 MOVK W8, 0x11430000
	0x03264A74 CMP W0, W8
	0x03264A78 B.EQ 0x3264E08
	0x03264A7C MOVZ W8, 0x2CC3
	0x03264A80 MOVK W8, 0x163F0000
	0x03264A84 CMP W0, W8
	0x03264A88 B.EQ 0x3264E14
	0x03264A8C MOVZ W8, 0x23F4
	0x03264A90 MOVK W8, 0x22E20000
	0x03264A94 CMP W0, W8
	0x03264A98 B.NE 0x3264E00
	0x03264A9C ADRP X8, 0xEBF000
	0x03264AA0 LDR X8, [X8 + 0x578]
	0x03264AA4 B 0x3264E1C
	0x03264AA8 MOVZ W8, 0x1C56
	0x03264AAC MOVK W8, 0xA0F80000
	0x03264AB0 CMP W0, W8
	0x03264AB4 B.HI 0x3264B50
	0x03264AB8 MOVZ W8, 0x3112
	0x03264ABC MOVK W8, 0x941C0000
	0x03264AC0 CMP W0, W8
	0x03264AC4 B.HI 0x3264BD8
	0x03264AC8 MOVZ W8, 0xF25E
	0x03264ACC MOVK W8, 0x8EBA0000
	0x03264AD0 CMP W0, W8
	0x03264AD4 B.EQ 0x3264E44
	0x03264AD8 MOVZ W8, 0x7826
	0x03264ADC MOVK W8, 0x921D0000
	0x03264AE0 CMP W0, W8
	0x03264AE4 B.EQ 0x3264E50
	0x03264AE8 MOVZ W8, 0x3112
	0x03264AEC MOVK W8, 0x941C0000
	0x03264AF0 CMP W0, W8
	0x03264AF4 B.NE 0x3264E00
	0x03264AF8 ADRP X8, 0xEBF000
	0x03264AFC LDR X8, [X8 + 0x5E0]
	0x03264B00 B 0x3264F48
	0x03264B04 MOVZ W8, 0x6D33
	0x03264B08 MOVK W8, 0x7F0E0000
	0x03264B0C CMP W0, W8
	0x03264B10 B.HI 0x3264C2C
	0x03264B14 MOVZ W8, 0x2C14
	0x03264B18 MOVK W8, 0x7B6A0000
	0x03264B1C CMP W0, W8
	0x03264B20 B.HI 0x3264CA4
	0x03264B24 MOVZ W8, 0xD3D0
	0x03264B28 MOVK W8, 0x6F030000
	0x03264B2C CMP W0, W8
	0x03264B30 B.EQ 0x3264E5C
	0x03264B34 MOVZ W8, 0x2C14
	0x03264B38 MOVK W8, 0x7B6A0000
	0x03264B3C CMP W0, W8
	0x03264B40 B.NE 0x3264E00
	0x03264B44 ADRP X8, 0xEBF000
	0x03264B48 LDR X8, [X8 + 0x5B0]
	0x03264B4C B 0x3264E1C
	0x03264B50 MOVZ W8, 0x9303
	0x03264B54 MOVK W8, 0xD2590000
	0x03264B58 CMP W0, W8
	0x03264B5C B.HI 0x3264C68
	0x03264B60 MOVZ W8, 0xBB97
	0x03264B64 MOVK W8, 0xAEB00000
	0x03264B68 CMP W0, W8
	0x03264B6C B.HI 0x3264CE8
	0x03264B70 MOVZ W8, 0xC8ED
	0x03264B74 MOVK W8, 0xA7140000
	0x03264B78 CMP W0, W8
	0x03264B7C B.EQ 0x3264E8C
	0x03264B80 MOVZ W8, 0xBB97
	0x03264B84 MOVK W8, 0xAEB00000
	0x03264B88 CMP W0, W8
	0x03264B8C B.NE 0x3264E00
	0x03264B90 ADRP X8, 0xEBF000
	0x03264B94 LDR X8, [X8 + 0x618]
	0x03264B98 B 0x3264E1C
	0x03264B9C MOVZ W8, 0x535D
	0x03264BA0 MOVK W8, 0x5F670000
	0x03264BA4 CMP W0, W8
	0x03264BA8 B.HI 0x3264D2C
	0x03264BAC MOVZ W8, 0xC243
	0x03264BB0 MOVK W8, 0x45A10000
	0x03264BB4 CMP W0, W8
	0x03264BB8 B.EQ 0x3264E98
	0x03264BBC MOVZ W8, 0x535D
	0x03264BC0 MOVK W8, 0x5F670000
	0x03264BC4 CMP W0, W8
	0x03264BC8 B.NE 0x3264E00
	0x03264BCC ADRP X8, 0xEBF000
	0x03264BD0 LDR X8, [X8 + 0x4B8]
	0x03264BD4 B 0x3264F78
	0x03264BD8 MOVZ W8, 0xE8AE
	0x03264BDC MOVK W8, 0x9F430000
	0x03264BE0 CMP W0, W8
	0x03264BE4 B.HI 0x3264D58
	0x03264BE8 MOVZ W8, 0x35FA
	0x03264BEC MOVK W8, 0x9CD40000
	0x03264BF0 CMP W0, W8
	0x03264BF4 B.EQ 0x3264EA4
	0x03264BF8 MOVZ W8, 0xE8AE
	0x03264BFC MOVK W8, 0x9F430000
	0x03264C00 CMP W0, W8
	0x03264C04 B.NE 0x3264E00
	0x03264C08 ADRP X8, 0xEBF000
	0x03264C0C LDR X8, [X8 + 0x810]
	0x03264C10 MOV X0, X19
	0x03264C14 MOV X2, X31
	0x03264C18 LDR X1, [X8]
	0x03264C1C BL 0x321BA08
	0x03264C20 ADRP X8, 0xEBF000
	0x03264C24 LDR X8, [X8 + 0x818]
	0x03264C28 B 0x3264E7C
	0x03264C2C MOVZ W8, 0x798B
	0x03264C30 MOVK W8, 0x874C0000
	0x03264C34 CMP W0, W8
	0x03264C38 B.HI 0x3264D84
	0x03264C3C MOVZ W8, 0x39D1
	0x03264C40 MOVK W8, 0x84000000
	0x03264C44 CMP W0, W8
	0x03264C48 B.EQ 0x3264EB0
	0x03264C4C MOVZ W8, 0x798B
	0x03264C50 MOVK W8, 0x874C0000
	0x03264C54 CMP W0, W8
	0x03264C58 B.NE 0x3264E00
	0x03264C5C ADRP X8, 0xEBF000
	0x03264C60 LDR X8, [X8 + 0x6B0]
	0x03264C64 B 0x3264DAC
	0x03264C68 MOVZ W8, 0xDB74
	0x03264C6C MOVK W8, 0xEDEA0000
	0x03264C70 CMP W0, W8
	0x03264C74 B.HI 0x3264DD4
	0x03264C78 MOVZ W8, 0x45D2
	0x03264C7C MOVK W8, 0xDD070000
	0x03264C80 CMP W0, W8
	0x03264C84 B.EQ 0x3264EBC
	0x03264C88 MOVZ W8, 0xDB74
	0x03264C8C MOVK W8, 0xEDEA0000
	0x03264C90 CMP W0, W8
	0x03264C94 B.NE 0x3264E00
	0x03264C98 ADRP X8, 0xEBF000
	0x03264C9C LDR X8, [X8 + 0x548]
	0x03264CA0 B 0x3264F18
	0x03264CA4 MOVZ W8, 0xE567
	0x03264CA8 MOVK W8, 0x7D520000
	0x03264CAC CMP W0, W8
	0x03264CB0 B.EQ 0x3264EC8
	0x03264CB4 MOVZ W8, 0x6D33
	0x03264CB8 MOVK W8, 0x7F0E0000
	0x03264CBC CMP W0, W8
	0x03264CC0 B.NE 0x3264E00
	0x03264CC4 ADRP X8, 0xEBF000
	0x03264CC8 LDR X8, [X8 + 0x4A8]
	0x03264CCC MOV X0, X19
	0x03264CD0 MOV X2, X31
	0x03264CD4 LDR X1, [X8]
	0x03264CD8 BL 0x321BA08
	0x03264CDC ADRP X8, 0xEBF000
	0x03264CE0 LDR X8, [X8 + 0x800]
	0x03264CE4 B 0x3264E7C
	0x03264CE8 MOVZ W8, 0x60CD
	0x03264CEC MOVK W8, 0xCE0F0000
	0x03264CF0 CMP W0, W8
	0x03264CF4 B.EQ 0x3264EF8
	0x03264CF8 MOVZ W8, 0x9303
	0x03264CFC MOVK W8, 0xD2590000
	0x03264D00 CMP W0, W8
	0x03264D04 B.NE 0x3264E00
	0x03264D08 ADRP X8, 0xEBF000
	0x03264D0C LDR X8, [X8 + 0x4E8]
	0x03264D10 MOV X0, X19
	0x03264D14 MOV X2, X31
	0x03264D18 LDR X1, [X8]
	0x03264D1C BL 0x321BA08
	0x03264D20 ADRP X8, 0xEBF000
	0x03264D24 LDR X8, [X8 + 0x828]
	0x03264D28 B 0x3264E7C
	0x03264D2C MOVZ W8, 0x63CE
	0x03264D30 MOVK W8, 0x633B0000
	0x03264D34 CMP W0, W8
	0x03264D38 B.EQ 0x3264F04
	0x03264D3C MOVZ W8, 0x81BE
	0x03264D40 MOVK W8, 0x648D0000
	0x03264D44 CMP W0, W8
	0x03264D48 B.NE 0x3264E00
	0x03264D4C ADRP X8, 0xEBF000
	0x03264D50 LDR X8, [X8 + 0x570]
	0x03264D54 B 0x3264DAC
	0x03264D58 MOVZ W8, 0xEE6B
	0x03264D5C MOVK W8, 0xA0930000
	0x03264D60 CMP W0, W8
	0x03264D64 B.EQ 0x3264F10
	0x03264D68 MOVZ W8, 0x1C56
	0x03264D6C MOVK W8, 0xA0F80000
	0x03264D70 CMP W0, W8
	0x03264D74 B.NE 0x3264E00
	0x03264D78 ADRP X8, 0xEBF000
	0x03264D7C LDR X8, [X8 + 0x718]
	0x03264D80 B 0x3264F78
	0x03264D84 MOVZ W8, 0xA021
	0x03264D88 MOVK W8, 0x8BDC0000
	0x03264D8C CMP W0, W8
	0x03264D90 B.EQ 0x3264F40
	0x03264D94 MOVZ W8, 0xBEF3
	0x03264D98 MOVK W8, 0x8EAA0000
	0x03264D9C CMP W0, W8
	0x03264DA0 B.NE 0x3264E00
	0x03264DA4 ADRP X8, 0xEBF000
	0x03264DA8 LDR X8, [X8 + 0x688]
	0x03264DAC LDR X1, [X8]
	0x03264DB0 MOV X0, X19
	0x03264DB4 MOV X2, X31
	0x03264DB8 BL 0x321BA08
	0x03264DBC MOV W8, W0
	0x03264DC0 MOV X0, X31
	0x03264DC4 TBZ X8, 0x0, 0x3264FA0
	0x03264DC8 ADRP X8, 0xEBC000
	0x03264DCC LDR X8, [X8 + 0xD30]
	0x03264DD0 B 0x3264F9C
	0x03264DD4 MOVZ W8, 0xEB42
	0x03264DD8 MOVK W8, 0xF9350000
	0x03264DDC CMP W0, W8
	0x03264DE0 B.EQ 0x3264F70
	0x03264DE4 MOVZ W8, 0x9971
	0x03264DE8 MOVK W8, 0xFA530000
	0x03264DEC CMP W0, W8
	0x03264DF0 B.NE 0x3264E00
	0x03264DF4 ADRP X8, 0xEBF000
	0x03264DF8 LDR X8, [X8 + 0x648]
	0x03264DFC B 0x3264F78
	0x03264E00 MOV X0, X31
	0x03264E04 B 0x3264FA0
	0x03264E08 ADRP X8, 0xEBF000
	0x03264E0C LDR X8, [X8 + 0x700]
	0x03264E10 B 0x3264E1C
	0x03264E14 ADRP X8, 0xEBF000
	0x03264E18 LDR X8, [X8 + 0x568]
	0x03264E1C LDR X1, [X8]
	0x03264E20 MOV X0, X19
	0x03264E24 MOV X2, X31
	0x03264E28 BL 0x321BA08
	0x03264E2C MOV W8, W0
	0x03264E30 MOV X0, X31
	0x03264E34 TBZ X8, 0x0, 0x3264FA0
	0x03264E38 ADRP X8, 0xEBC000
	0x03264E3C LDR X8, [X8 + 0xD08]
	0x03264E40 B 0x3264F9C
	0x03264E44 ADRP X8, 0xEBF000
	0x03264E48 LDR X8, [X8 + 0x630]
	0x03264E4C B 0x3264F78
	0x03264E50 ADRP X8, 0xEBF000
	0x03264E54 LDR X8, [X8 + 0x4E0]
	0x03264E58 B 0x3264ED0
	0x03264E5C ADRP X8, 0xEBF000
	0x03264E60 LDR X8, [X8 + 0x7C0]
	0x03264E64 MOV X0, X19
	0x03264E68 MOV X2, X31
	0x03264E6C LDR X1, [X8]
	0x03264E70 BL 0x321BA08
	0x03264E74 ADRP X8, 0xEBF000
	0x03264E78 LDR X8, [X8 + 0x820]
	0x03264E7C LDR X8, [X8]
	0x03264E80 ANDS W31, W0, 0x1
	0x03264E84 CSEL X0, X8, X31, NE
	0x03264E88 B 0x3264FA0
	0x03264E8C ADRP X8, 0xEBF000
	0x03264E90 LDR X8, [X8 + 0x720]
	0x03264E94 B 0x3264F48
	0x03264E98 ADRP X8, 0xEBF000
	0x03264E9C LDR X8, [X8 + 0x4C8]
	0x03264EA0 B 0x3264ED0
	0x03264EA4 ADRP X8, 0xEBF000
	0x03264EA8 LDR X8, [X8 + 0x668]
	0x03264EAC B 0x3264F48
	0x03264EB0 ADRP X8, 0xEBF000
	0x03264EB4 LDR X8, [X8 + 0x6D0]
	0x03264EB8 B 0x3264F18
	0x03264EBC ADRP X8, 0xEBF000
	0x03264EC0 LDR X8, [X8 + 0x670]
	0x03264EC4 B 0x3264F18
	0x03264EC8 ADRP X8, 0xEBF000
	0x03264ECC LDR X8, [X8 + 0x728]
	0x03264ED0 LDR X1, [X8]
	0x03264ED4 MOV X0, X19
	0x03264ED8 MOV X2, X31
	0x03264EDC BL 0x321BA08
	0x03264EE0 MOV W8, W0
	0x03264EE4 MOV X0, X31
	0x03264EE8 TBZ X8, 0x0, 0x3264FA0
	0x03264EEC ADRP X8, 0xEBF000
	0x03264EF0 LDR X8, [X8 + 0x808]
	0x03264EF4 B 0x3264F9C
	0x03264EF8 ADRP X8, 0xEBF000
	0x03264EFC LDR X8, [X8 + 0x6C8]
	0x03264F00 B 0x3264F18
	0x03264F04 ADRP X8, 0xEBF000
	0x03264F08 LDR X8, [X8 + 0x528]
	0x03264F0C B 0x3264F48
	0x03264F10 ADRP X8, 0xEBF000
	0x03264F14 LDR X8, [X8 + 0x748]
	0x03264F18 LDR X1, [X8]
	0x03264F1C MOV X0, X19
	0x03264F20 MOV X2, X31
	0x03264F24 BL 0x321BA08
	0x03264F28 MOV W8, W0
	0x03264F2C MOV X0, X31
	0x03264F30 TBZ X8, 0x0, 0x3264FA0
	0x03264F34 ADRP X8, 0xEBF000
	0x03264F38 LDR X8, [X8 + 0x2E8]
	0x03264F3C B 0x3264F9C
	0x03264F40 ADRP X8, 0xEBF000
	0x03264F44 LDR X8, [X8 + 0x708]
	0x03264F48 LDR X1, [X8]
	0x03264F4C MOV X0, X19
	0x03264F50 MOV X2, X31
	0x03264F54 BL 0x321BA08
	0x03264F58 MOV W8, W0
	0x03264F5C MOV X0, X31
	0x03264F60 TBZ X8, 0x0, 0x3264FA0
	0x03264F64 ADRP X8, 0xEBF000
	0x03264F68 LDR X8, [X8 + 0x2E0]
	0x03264F6C B 0x3264F9C
	0x03264F70 ADRP X8, 0xEBF000
	0x03264F74 LDR X8, [X8 + 0x5A0]
	0x03264F78 LDR X1, [X8]
	0x03264F7C MOV X0, X19
	0x03264F80 MOV X2, X31
	0x03264F84 BL 0x321BA08
	0x03264F88 MOV W8, W0
	0x03264F8C MOV X0, X31
	0x03264F90 TBZ X8, 0x0, 0x3264FA0
	0x03264F94 ADRP X8, 0xEBF000
	0x03264F98 LDR X8, [X8 + 0x2F0]
	0x03264F9C LDR X0, [X8]
	0x03264FA0 LDP X20, X19, [X31 + 0x10]
	0x03264FA4 LDR X30, [X31], #0x20
	0x03264FA8 RET
	0x03264FAC ADRP X0, 0xE94000
	0x03264FB0 LDR X0, [X0 + 0x528]
	0x03264FB4 BL 0x1C16D08
	0x03264FB8 BL 0x1C16F10
	0x03264FBC MOV X19, X0
	0x03264FC0 ADRP X0, 0xE97000
	0x03264FC4 LDR X0, [X0 + 0x588]
	0x03264FC8 BL 0x1C16D08
	0x03264FCC MOV X1, X0
	0x03264FD0 MOV X0, X19
	0x03264FD4 MOV X2, X31
	0x03264FD8 BL 0x330E100
	0x03264FDC ADRP X0, 0xEBF000
	0x03264FE0 LDR X0, [X0 + 0x830]
	0x03264FE4 BL 0x1C16D08
	0x03264FE8 MOV X1, X0
	0x03264FEC MOV X0, X19
	0x03264FF0 BL 0x1C16DEC
	0x03264FF4 STR X30, [X31 - 0x50]!
	0x03264FF8 STP X26, X25, [X31 + 0x10]
	0x03264FFC STP X24, X23, [X31 + 0x20]
	0x03265000 STP X22, X21, [X31 + 0x30]
	0x03265004 STP X20, X19, [X31 + 0x40]
	0x03265008 ADRP X20, 0x1177000
	0x0326500C LDRB W8, [X20 + 0x55F]
	0x03265010 MOV X19, X0
	0x03265014 TBNZ X8, 0x0, 0x3265050
	0x03265018 ADRP X0, 0xE8E000
	0x0326501C LDR X0, [X0 + 0x618]
	0x03265020 BL 0x1C16CF4
	0x03265024 ADRP X0, 0xE97000
	0x03265028 LDR X0, [X0 + 0x8D8]
	0x0326502C BL 0x1C16CF4
	0x03265030 ADRP X0, 0xE97000
	0x03265034 LDR X0, [X0 + 0x9E8]
	0x03265038 BL 0x1C16CF4
	0x0326503C ADRP X0, 0xEBB000
	0x03265040 LDR X0, [X0 + 0xBD8]
	0x03265044 BL 0x1C16CF4
	0x03265048 MOVZ W8, 0x1
	0x0326504C STRB W8, [X20 + 0x55F]
	0x03265050 CBZ X19, 0x32652B8
	0x03265054 ADRP X8, 0xE97000
	0x03265058 LDR X8, [X8 + 0x8D8]
	0x0326505C MOVZ W1, 0x1
	0x03265060 LDR X0, [X8]
	0x03265064 BL 0x1C16D6C
	0x03265068 CBZ X0, 0x32652B4
	0x0326506C LDR W8, [X0 + 0x18]
	0x03265070 MOV X1, X0
	0x03265074 CBZ W8, 0x32652B0
	0x03265078 MOVZ W8, 0x2E
	0x0326507C MOV X0, X19
	0x03265080 MOV X2, X31
	0x03265084 STRH W8, [X1 + 0x20]
	0x03265088 BL 0x3229E68
	0x0326508C CBZ X0, 0x32652B4
	0x03265090 LDR W8, [X0 + 0x18]
	0x03265094 MOV X20, X0
	0x03265098 CMP W8, 0x1
	0x0326509C B.LE 0x3265300
	0x032650A0 ADRP X24, 0xE8E000
	0x032650A4 LDR X24, [X24 + 0x618]
	0x032650A8 LDR W1, [X19 + 0x10]
	0x032650AC LDR X0, [X24]
	0x032650B0 BL 0x1C16D6C
	0x032650B4 LDR W8, [X20 + 0x18]
	0x032650B8 CBZ W8, 0x326530C
	0x032650BC ADRP X23, 0xE97000
	0x032650C0 LDR X23, [X23 + 0x9E8]
	0x032650C4 MOV X19, X0
	0x032650C8 LDR X21, [X20 + 0x20]
	0x032650CC LDR X0, [X23]
	0x032650D0 LDR W8, [X0 + 0xE0]
	0x032650D4 CBNZ W8, 0x32650DC
	0x032650D8 BL 0x1C16DFC
	0x032650DC MOV X0, X21
	0x032650E0 MOV X1, X31
	0x032650E4 BL 0x331F6C4
	0x032650E8 LDR W8, [X20 + 0x18]
	0x032650EC CMP W8, 0x1
	0x032650F0 B.LS 0x3265310
	0x032650F4 MOV W21, W0
	0x032650F8 LDR X0, [X20 + 0x28]
	0x032650FC MOV X1, X31
	0x03265100 BL 0x331F6C4
	0x03265104 AND W8, W21, 0xFF
	0x03265108 MOVZ W9, 0x28
	0x0326510C MUL W8, W8, W9
	0x03265110 ADD W0, W8, W0, UXTB
	0x03265114 MOV X1, X31
	0x03265118 BL 0x331F434
	0x0326511C CBZ X19, 0x3265314
	0x03265120 LDR W8, [X19 + 0x18]
	0x03265124 CMP W8, 0x2
	0x03265128 B.LS 0x3265318
	0x0326512C STRB W0, [X19 + 0x22]
	0x03265130 LDR X8, [X20 + 0x18]
	0x03265134 CMP W8, 0x3
	0x03265138 B.LT 0x3265218
	0x0326513C ADRP X26, 0xEBB000
	0x03265140 LDR X26, [X26 + 0xBD8]
	0x03265144 AND X8, X8, 0x0
	0x03265148 MOVZ W21, 0x3
	0x0326514C MOVZ W25, 0x6
	0x03265150 SUB X9, X25, 0x4
	0x03265154 CMP X9, W8, UXTW
	0x03265158 B.CS 0x32652B0
	0x0326515C LDR X0, [X23]
	0x03265160 LDR X22, [X20, X25, LSL #3]
	0x03265164 LDR W8, [X0 + 0xE0]
	0x03265168 CBNZ W8, 0x3265170
	0x0326516C BL 0x1C16DFC
	0x03265170 MOV X0, X22
	0x03265174 MOV X1, X31
	0x03265178 BL 0x3320F8C
	0x0326517C MOV X22, X0
	0x03265180 CMP X0, 0x80
	0x03265184 B.GE 0x32651C0
	0x03265188 LDR X0, [X23]
	0x0326518C LDR W8, [X0 + 0xE0]
	0x03265190 CBNZ W8, 0x3265198
	0x03265194 BL 0x1C16DFC
	0x03265198 MOV X0, X22
	0x0326519C MOV X1, X31
	0x032651A0 BL 0x331F4E4
	0x032651A4 LDR W8, [X19 + 0x18]
	0x032651A8 CMP W21, W8
	0x032651AC B.CS 0x32652B0
	0x032651B0 ADD X8, X19, W21, SXTW
	0x032651B4 ADD W21, W21, 0x1
	0x032651B8 STRB W0, [X8 + 0x20]
	0x032651BC B 0x3265200
	0x032651C0 LDR X0, [X26]
	0x032651C4 LDR W8, [X0 + 0xE0]
	0x032651C8 CBNZ W8, 0x32651D0
	0x032651CC BL 0x1C16DFC
	0x032651D0 MOV X0, X22
	0x032651D4 BL 0x32653F4
	0x032651D8 CBZ X0, 0x32652B4
	0x032651DC LDR W4, [X0 + 0x18]
	0x032651E0 MOV W1, W31
	0x032651E4 MOV X2, X19
	0x032651E8 MOV W3, W21
	0x032651EC MOV X5, X31
	0x032651F0 MOV X22, X0
	0x032651F4 BL 0x33A8A9C
	0x032651F8 LDR W8, [X22 + 0x18]
	0x032651FC ADD W21, W21, W8
	0x03265200 LDR W8, [X20 + 0x18]
	0x03265204 SUB X9, X25, 0x3
	0x03265208 ADD X25, X25, 0x1
	0x0326520C CMP X9, W8, SXTW
	0x03265210 B.LT 0x3265150
	0x03265214 B 0x326521C
	0x03265218 MOVZ W21, 0x3
	0x0326521C LDR X0, [X24]
	0x03265220 MOV W1, W21
	0x03265224 BL 0x1C16D6C
	0x03265228 CBZ X0, 0x32652B4
	0x0326522C LDR W8, [X0 + 0x18]
	0x03265230 MOV X20, X0
	0x03265234 CBZ W8, 0x32652B0
	0x03265238 MOVZ W8, 0x6
	0x0326523C CMP W21, 0x80
	0x03265240 STRB W8, [X20 + 0x20]
	0x03265244 B.GE 0x326531C
	0x03265248 LDR X0, [X23]
	0x0326524C LDR W8, [X0 + 0xE0]
	0x03265250 CBNZ W8, 0x3265258
	0x03265254 BL 0x1C16DFC
	0x03265258 SUB W21, W21, 0x2
	0x0326525C MOV W0, W21
	0x03265260 MOV X1, X31
	0x03265264 BL 0x331F434
	0x03265268 LDR W8, [X20 + 0x18]
	0x0326526C CMP W8, 0x1
	0x03265270 B.LS 0x32652B0
	0x03265274 STRB W0, [X20 + 0x21]
	0x03265278 MOVZ W1, 0x2
	0x0326527C MOVZ W3, 0x2
	0x03265280 MOV X0, X19
	0x03265284 MOV X2, X20
	0x03265288 MOV W4, W21
	0x0326528C MOV X5, X31
	0x03265290 BL 0x33A8A9C
	0x03265294 MOV X0, X20
	0x03265298 LDP X20, X19, [X31 + 0x40]
	0x0326529C LDP X22, X21, [X31 + 0x30]
	0x032652A0 LDP X24, X23, [X31 + 0x20]
	0x032652A4 LDP X26, X25, [X31 + 0x10]
	0x032652A8 LDR X30, [X31], #0x50
	0x032652AC RET
	0x032652B0 BL 0x1C16F28
	0x032652B4 BL 0x1C16F20
	0x032652B8 ADRP X0, 0xE93000
	0x032652BC LDR X0, [X0 + 0x528]
	0x032652C0 BL 0x1C16D08
	0x032652C4 BL 0x1C16F10
	0x032652C8 MOV X19, X0
	0x032652CC ADRP X0, 0xE90000
	0x032652D0 LDR X0, [X0 + 0xC80]
	0x032652D4 BL 0x1C16D08
	0x032652D8 MOV X1, X0
	0x032652DC MOV X0, X19
	0x032652E0 MOV X2, X31
	0x032652E4 BL 0x330E100
	0x032652E8 ADRP X0, 0xEBE000
	0x032652EC LDR X0, [X0 + 0x838]
	0x032652F0 BL 0x1C16D08
	0x032652F4 MOV X1, X0
	0x032652F8 MOV X0, X19
	0x032652FC BL 0x1C16DEC
	0x03265300 ADRP X0, 0xEBE000
	0x03265304 LDR X0, [X0 + 0x840]
	0x03265308 B 0x3265378
	0x0326530C BL 0x1C16F28
	0x03265310 BL 0x1C16F28
	0x03265314 BL 0x1C16F20
	0x03265318 BL 0x1C16F28
	0x0326531C ADRP X0, 0xEBE000
	0x03265320 LDR X0, [X0 + 0x848]
	0x03265324 B 0x3265378
	0x03265328 B 0x3265338
	0x0326532C B 0x3265338
	0x03265330 B 0x3265338
	0x03265334 B 0x3265338
	0x03265338 MOV X19, X0
	0x0326533C CMP W1, 0x1
	0x03265340 B.NE 0x32653E8
	0x03265344 MOV X0, X19
	0x03265348 BL 0x3EB1AD0
	0x0326534C MOV X19, X0
	0x03265350 ADRP X0, 0xE94000
	0x03265354 LDR X0, [X0 + 0xCC0]
	0x03265358 BL 0x1C16D08
	0x0326535C LDR X8, [X19]
	0x03265360 LDR X1, [X8]
	0x03265364 BL 0x1C17270
	0x03265368 TBZ X0, 0x0, 0x32653C0
	0x0326536C BL 0x3EB1AE0
	0x03265370 ADRP X0, 0xEBE000
	0x03265374 LDR X0, [X0 + 0x850]
	0x03265378 BL 0x1C16D08
	0x0326537C MOV X1, X31
	0x03265380 BL 0x320A160
	0x03265384 MOV X19, X0
	0x03265388 ADRP X0, 0xEBD000
	0x0326538C LDR X0, [X0 + 0xEB8]
	0x03265390 BL 0x1C16D08
	0x03265394 BL 0x1C16F10
	0x03265398 MOV X1, X19
	0x0326539C MOV X2, X31
	0x032653A0 MOV X20, X0
	0x032653A4 BL 0x32513AC
	0x032653A8 ADRP X0, 0xEBE000
	0x032653AC LDR X0, [X0 + 0x838]
	0x032653B0 BL 0x1C16D08
	0x032653B4 MOV X1, X0
	0x032653B8 MOV X0, X20
	0x032653BC BL 0x1C16DEC
	0x032653C0 MOVZ W0, 0x8
	0x032653C4 BL 0x3EB1AF0
	0x032653C8 LDR X8, [X19]
	0x032653CC STR X8, [X0]
	0x032653D0 ADRP X1, 0xC4F000
	0x032653D4 ADD X1, X1, 0xE58
	0x032653D8 MOV X2, X31
	0x032653DC BL 0x3EB1B00
	0x032653E0 MOV X19, X0
	0x032653E4 BL 0x3EB1AE0
	0x032653E8 MOV X0, X19
	0x032653EC BL 0x1D2C690
	0x032653F0 BL 0x1990590
	0x032653F4 STP X30, X25, [X31 - 0x40]!
	0x032653F8 STP X24, X23, [X31 + 0x10]
	0x032653FC STP X22, X21, [X31 + 0x20]
	0x03265400 STP X20, X19, [X31 + 0x30]
	0x03265404 ADRP X20, 0x1177000
	0x03265408 LDRB W8, [X20 + 0x560]
	0x0326540C MOV X19, X0
	0x03265410 TBNZ X8, 0x0, 0x3265434
	0x03265414 ADRP X0, 0xE8E000
	0x03265418 LDR X0, [X0 + 0x618]
	0x0326541C BL 0x1C16CF4
	0x03265420 ADRP X0, 0xE97000
	0x03265424 LDR X0, [X0 + 0x9E8]
	0x03265428 BL 0x1C16CF4
	0x0326542C MOVZ W8, 0x1
	0x03265430 STRB W8, [X20 + 0x560]
	0x03265434 CMP X19, W19, SXTW
	0x03265438 B.NE 0x326550C
	0x0326543C ADRP X8, 0xE8E000
	0x03265440 LDR X8, [X8 + 0x618]
	0x03265444 CMP X19, 0x80
	0x03265448 MOVZ W21, 0x1
	0x0326544C B.LT 0x3265464
	0x03265450 MOV X9, X19
	0x03265454 UBFM X10, X9, 0xE, 0x3F
	0x03265458 UBFM X9, X9, 0x7, 0x3F
	0x0326545C ADD W21, W21, 0x1
	0x03265460 CBNZ X10, 0x3265454
	0x03265464 LDR X0, [X8]
	0x03265468 ADRP X22, 0xE97000
	0x0326546C LDR X22, [X22 + 0x9E8]
	0x03265470 MOV W1, W21
	0x03265474 BL 0x1C16D6C
	0x03265478 MOV W8, W21
	0x0326547C UBFM X8, X8, 0x3D, 0x3C
	0x03265480 MOV X20, X0
	0x03265484 MOV X23, X31
	0x03265488 SUB W24, W21, 0x1
	0x0326548C SUB X25, X8, W21, UXTW
	0x03265490 LDR X0, [X22]
	0x03265494 ASRV X8, X19, X23
	0x03265498 MOVZ W11, 0x80
	0x0326549C AND X9, X8, 0x7F
	0x032654A0 LDR W10, [X0 + 0xE0]
	0x032654A4 BFM X11, X8, 0x0, 0x6
	0x032654A8 CMP X23, 0x0
	0x032654AC CSEL X21, X9, X11, EQ
	0x032654B0 CBNZ W10, 0x32654B8
	0x032654B4 BL 0x1C16DFC
	0x032654B8 MOV X0, X21
	0x032654BC MOV X1, X31
	0x032654C0 BL 0x331F4E4
	0x032654C4 CBZ X20, 0x3265504
	0x032654C8 LDR W8, [X20 + 0x18]
	0x032654CC CMP W24, W8
	0x032654D0 B.CS 0x3265508
	0x032654D4 ADD X23, X23, 0x7
	0x032654D8 ADD X8, X20, W24, SXTW
	0x032654DC CMP X25, X23
	0x032654E0 SUB W24, W24, 0x1
	0x032654E4 STRB W0, [X8 + 0x20]
	0x032654E8 B.NE 0x3265490
	0x032654EC MOV X0, X20
	0x032654F0 LDP X20, X19, [X31 + 0x30]
	0x032654F4 LDP X22, X21, [X31 + 0x20]
	0x032654F8 LDP X24, X23, [X31 + 0x10]
	0x032654FC LDP X30, X25, [X31], #0x40
	0x03265500 RET
	0x03265504 BL 0x1C16F20
	0x03265508 BL 0x1C16F28
	0x0326550C ADRP X0, 0xEBE000
	0x03265510 LDR X0, [X0 + 0x858]
	0x03265514 BL 0x1C16D08
	0x03265518 MOV X1, X31
	0x0326551C BL 0x320A160
	0x03265520 MOV X19, X0
	0x03265524 ADRP X0, 0xE8E000
	0x03265528 LDR X0, [X0 + 0x858]
	0x0326552C BL 0x1C16D08
	0x03265530 BL 0x1C16F10
	0x03265534 MOV X1, X19
	0x03265538 MOV X2, X31
	0x0326553C MOV X20, X0
	0x03265540 BL 0x338CB50
	0x03265544 ADRP X0, 0xEBE000
	0x03265548 LDR X0, [X0 + 0x860]
	0x0326554C BL 0x1C16D08
	0x03265550 MOV X1, X0
	0x03265554 MOV X0, X20
	0x03265558 BL 0x1C16DEC
	0x0326555C STP X30, X21, [X31 - 0x20]!
	0x03265560 STP X20, X19, [X31 + 0x10]
	0x03265564 ADRP X19, 0x1177000
	0x03265568 ADRP X21, 0xE94000
	0x0326556C ADRP X20, 0xEBB000
	0x03265570 LDRB W8, [X19 + 0x561]
	0x03265574 LDR X21, [X21 + 0xCC0]
	0x03265578 LDR X20, [X20 + 0xBD8]
	0x0326557C TBNZ X8, 0x0, 0x32655A0
	0x03265580 ADRP X0, 0xEBB000
	0x03265584 LDR X0, [X0 + 0xBD8]
	0x03265588 BL 0x1C16CF4
	0x0326558C ADRP X0, 0xE94000
	0x03265590 LDR X0, [X0 + 0xCC0]
	0x03265594 BL 0x1C16CF4
	0x03265598 MOVZ W8, 0x1
	0x0326559C STRB W8, [X19 + 0x561]
	0x032655A0 LDR X0, [X21]
	0x032655A4 BL 0x1C16F10
	0x032655A8 MOV X1, X31
	0x032655AC MOV X19, X0
	0x032655B0 BL 0x33BDD8C
	0x032655B4 LDR X8, [X20]
	0x032655B8 LDR X8, [X8 + 0xB8]
	0x032655BC STR X19, [X8]
	0x032655C0 LDP X20, X19, [X31 + 0x10]
	0x032655C4 LDP X30, X21, [X31], #0x20
	0x032655C8 RET
	0x032655CC STP X30, X25, [X31 - 0x40]!
	0x032655D0 STP X24, X23, [X31 + 0x10]
	0x032655D4 STP X22, X21, [X31 + 0x20]
	0x032655D8 STP X20, X19, [X31 + 0x30]
	0x032655DC ADRP X24, 0x1177000
	0x032655E0 LDRB W8, [X24 + 0x562]
	0x032655E4 MOV X20, X4
	0x032655E8 MOV X21, X3
	0x032655EC MOV W23, W2
	0x032655F0 MOV X22, X1
	0x032655F4 MOV X19, X0
	0x032655F8 TBNZ X8, 0x0, 0x3265634
	0x032655FC ADRP X0, 0xE8E000
	0x03265600 LDR X0, [X0 + 0x618]
	0x03265604 BL 0x1C16CF4
	0x03265608 ADRP X0, 0xEBD000
	0x0326560C LDR X0, [X0 + 0xF78]
	0x03265610 BL 0x1C16CF4
	0x03265614 ADRP X0, 0xEBC000
	0x03265618 LDR X0, [X0 + 0x320]
	0x0326561C BL 0x1C16CF4
	0x03265620 ADRP X0, 0xEB7000
	0x03265624 LDR X0, [X0 + 0xD08]
	0x03265628 BL 0x1C16CF4
	0x0326562C MOVZ W8, 0x1
	0x03265630 STRB W8, [X24 + 0x562]
	0x03265634 ADRP X25, 0xEBC000
	0x03265638 ADRP X24, 0xEBD000
	0x0326563C LDR X25, [X25 + 0x320]
	0x03265640 LDR X24, [X24 + 0xF78]
	0x03265644 AND W2, W23, 0x1
	0x03265648 MOV X0, X19
	0x0326564C MOV X1, X22
	0x03265650 MOV X3, X20
	0x03265654 MOV X4, X31
	0x03265658 BL 0x321DF00
	0x0326565C MOV X20, X31
	0x03265660 CBNZ X21, 0x3265680
	0x03265664 LDR X0, [X24]
	0x03265668 LDR W8, [X0 + 0xE0]
	0x0326566C CBNZ W8, 0x3265674
	0x03265670 BL 0x1C16DFC
	0x03265674 BL 0x32657EC
	0x03265678 MOV X20, X0
	0x0326567C MOV X21, X0
	0x03265680 LDR X0, [X25]
	0x03265684 LDR W8, [X0 + 0xE0]
	0x03265688 CBNZ W8, 0x3265690
	0x0326568C BL 0x1C16DFC
	0x03265690 MOV X0, X21
	0x03265694 MOV X1, X31
	0x03265698 BL 0x32527AC
	0x0326569C TBNZ X0, 0x0, 0x3265798
	0x032656A0 LDR X0, [X25]
	0x032656A4 LDR W8, [X0 + 0xE0]
	0x032656A8 CBNZ W8, 0x32656B0
	0x032656AC BL 0x1C16DFC
	0x032656B0 MOV X0, X21
	0x032656B4 MOV X1, X31
	0x032656B8 BL 0x32528CC
	0x032656BC TBNZ X0, 0x0, 0x3265798
	0x032656C0 ADRP X23, 0xE8E000
	0x032656C4 LDR X23, [X23 + 0x618]
	0x032656C8 CBNZ X20, 0x3265708
	0x032656CC CBZ X21, 0x32657E8
	0x032656D0 MOV X0, X21
	0x032656D4 MOV X1, X31
	0x032656D8 BL 0x33A01F0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x117A000
	011 Move W8, [X21+1373]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {446}
	018 Move X0, 0xEC1000
	019 Move X0, [X0+1080]
	020 Call 0x1C17CF4
	021 Move X0, 0xEBE000
	022 Move X0, [X0+3032]
	023 Call 0x1C17CF4
	024 Move X0, 0xEC0000
	025 Move X0, [X0+3936]
	026 Call 0x1C17CF4
	027 Move X0, 0xEBE000
	028 Move X0, [X0+3904]
	029 Call 0x1C17CF4
	030 Move X0, 0xEBF000
	031 Move X0, [X0+312]
	032 Call 0x1C17CF4
	033 Move X0, 0xEC1000
	034 Move X0, [X0+1088]
	035 Call 0x1C17CF4
	036 Move X0, 0xEC1000
	037 Move X0, [X0+1096]
	038 Call 0x1C17CF4
	039 Move X0, 0xEC1000
	040 Move X0, [X0+1104]
	041 Call 0x1C17CF4
	042 Move X0, 0xEBF000
	043 Move X0, [X0+880]
	044 Call 0x1C17CF4
	045 Move X0, 0xEC1000
	046 Move X0, [X0+1112]
	047 Call 0x1C17CF4
	048 Move X0, 0xEBE000
	049 Move X0, [X0+3568]
	050 Call 0x1C17CF4
	051 Move X0, 0xE9E000
	052 Move X0, [X0+3576]
	053 Call 0x1C17CF4
	054 Move X0, 0xEC1000
	055 Move X0, [X0+1120]
	056 Call 0x1C17CF4
	057 Move X0, 0xEC1000
	058 Move X0, [X0+1128]
	059 Call 0x1C17CF4
	060 Move X0, 0xEC1000
	061 Move X0, [X0+1136]
	062 Call 0x1C17CF4
	063 Move X0, 0xEC1000
	064 Move X0, [X0+144]
	065 Call 0x1C17CF4
	066 Move X0, 0xEC1000
	067 Move X0, [X0+360]
	068 Call 0x1C17CF4
	069 Move X0, 0xEC1000
	070 Move X0, [X0+152]
	071 Call 0x1C17CF4
	072 Move X0, 0xEC1000
	073 Move X0, [X0+320]
	074 Call 0x1C17CF4
	075 Move X0, 0xEBF000
	076 Move X0, [X0+416]
	077 Call 0x1C17CF4
	078 Move X0, 0xEC1000
	079 Move X0, [X0+1144]
	080 Call 0x1C17CF4
	081 Move X0, 0xEC1000
	082 Move X0, [X0+1152]
	083 Call 0x1C17CF4
	084 Move X0, 0xEC1000
	085 Move X0, [X0+1160]
	086 Call 0x1C17CF4
	087 Move X0, 0xEC1000
	088 Move X0, [X0+1168]
	089 Call 0x1C17CF4
	090 Move X0, 0xEBF000
	091 Move X0, [X0+336]
	092 Call 0x1C17CF4
	093 Move X0, 0xEC1000
	094 Move X0, [X0+1176]
	095 Call 0x1C17CF4
	096 Move X0, 0xEC1000
	097 Move X0, [X0+1184]
	098 Call 0x1C17CF4
	099 Move X0, 0xEC1000
	100 Move X0, [X0+800]
	101 Call 0x1C17CF4
	102 Move X0, 0xEC1000
	103 Move X0, [X0+176]
	104 Call 0x1C17CF4
	105 Move X0, 0xEC1000
	106 Move X0, [X0+192]
	107 Call 0x1C17CF4
	108 Move X0, 0xEC1000
	109 Move X0, [X0+208]
	110 Call 0x1C17CF4
	111 Move X0, 0xEC1000
	112 Move X0, [X0+224]
	113 Call 0x1C17CF4
	114 Move X0, 0xEC1000
	115 Move X0, [X0+1000]
	116 Call 0x1C17CF4
	117 Move X0, 0xEBA000
	118 Move X0, [X0+432]
	119 Call 0x1C17CF4
	120 Move X0, 0xE91000
	121 Move X0, [X0+1728]
	122 Call 0x1C17CF4
	123 Move X0, 0xEC1000
	124 Move X0, [X0+1192]
	125 Call 0x1C17CF4
	126 Move X0, 0xEC1000
	127 Move X0, [X0+1200]
	128 Call 0x1C17CF4
	129 Move X0, 0xEC1000
	130 Move X0, [X0+1208]
	131 Call 0x1C17CF4
	132 Move X0, 0xEC1000
	133 Move X0, [X0+1216]
	134 Call 0x1C17CF4
	135 Move X0, 0xEC1000
	136 Move X0, [X0+1224]
	137 Call 0x1C17CF4
	138 Move X0, 0xEC1000
	139 Move X0, [X0+1232]
	140 Call 0x1C17CF4
	141 Move X0, 0xEC1000
	142 Move X0, [X0+1240]
	143 Call 0x1C17CF4
	144 Move X0, 0xEC1000
	145 Move X0, [X0+1248]
	146 Call 0x1C17CF4
	147 Move X0, 0xEC1000
	148 Move X0, [X0+1256]
	149 Call 0x1C17CF4
	150 Move X0, 0xEC1000
	151 Move X0, [X0+1264]
	152 Call 0x1C17CF4
	153 Move X0, 0xEC1000
	154 Move X0, [X0+1272]
	155 Call 0x1C17CF4
	156 Move X0, 0xEC1000
	157 Move X0, [X0+1280]
	158 Call 0x1C17CF4
	159 Move X0, 0xEC1000
	160 Move X0, [X0+1288]
	161 Call 0x1C17CF4
	162 Move X0, 0xEC1000
	163 Move X0, [X0+1296]
	164 Call 0x1C17CF4
	165 Move X0, 0xEC1000
	166 Move X0, [X0+1304]
	167 Call 0x1C17CF4
	168 Move X0, 0xEC1000
	169 Move X0, [X0+1312]
	170 Call 0x1C17CF4
	171 Move X0, 0xEC1000
	172 Move X0, [X0+1320]
	173 Call 0x1C17CF4
	174 Move X0, 0xEC1000
	175 Move X0, [X0+1328]
	176 Call 0x1C17CF4
	177 Move X0, 0xEC1000
	178 Move X0, [X0+1336]
	179 Call 0x1C17CF4
	180 Move X0, 0xEC1000
	181 Move X0, [X0+1344]
	182 Call 0x1C17CF4
	183 Move X0, 0xEC1000
	184 Move X0, [X0+1352]
	185 Call 0x1C17CF4
	186 Move X0, 0xEC1000
	187 Move X0, [X0+1360]
	188 Call 0x1C17CF4
	189 Move X0, 0xEC1000
	190 Move X0, [X0+1368]
	191 Call 0x1C17CF4
	192 Move X0, 0xEC1000
	193 Move X0, [X0+1376]
	194 Call 0x1C17CF4
	195 Move X0, 0xEC1000
	196 Move X0, [X0+1384]
	197 Call 0x1C17CF4
	198 Move X0, 0xEC1000
	199 Move X0, [X0+1392]
	200 Call 0x1C17CF4
	201 Move X0, 0xEC1000
	202 Move X0, [X0+1400]
	203 Call 0x1C17CF4
	204 Move X0, 0xEC1000
	205 Move X0, [X0+1408]
	206 Call 0x1C17CF4
	207 Move X0, 0xEC1000
	208 Move X0, [X0+1416]
	209 Call 0x1C17CF4
	210 Move X0, 0xEC1000
	211 Move X0, [X0+1424]
	212 Call 0x1C17CF4
	213 Move X0, 0xEC1000
	214 Move X0, [X0+1432]
	215 Call 0x1C17CF4
	216 Move X0, 0xEC1000
	217 Move X0, [X0+1440]
	218 Call 0x1C17CF4
	219 Move X0, 0xEC1000
	220 Move X0, [X0+1448]
	221 Call 0x1C17CF4
	222 Move X0, 0xEC1000
	223 Move X0, [X0+1456]
	224 Call 0x1C17CF4
	225 Move X0, 0xEC1000
	226 Move X0, [X0+1464]
	227 Call 0x1C17CF4
	228 Move X0, 0xEC1000
	229 Move X0, [X0+1472]
	230 Call 0x1C17CF4
	231 Move X0, 0xEC1000
	232 Move X0, [X0+1480]
	233 Call 0x1C17CF4
	234 Move X0, 0xEC1000
	235 Move X0, [X0+1488]
	236 Call 0x1C17CF4
	237 Move X0, 0xEC1000
	238 Move X0, [X0+1496]
	239 Call 0x1C17CF4
	240 Move X0, 0xEC1000
	241 Move X0, [X0+1504]
	242 Call 0x1C17CF4
	243 Move X0, 0xEC1000
	244 Move X0, [X0+1512]
	245 Call 0x1C17CF4
	246 Move X0, 0xEC1000
	247 Move X0, [X0+1520]
	248 Call 0x1C17CF4
	249 Move X0, 0xEC1000
	250 Move X0, [X0+1528]
	251 Call 0x1C17CF4
	252 Move X0, 0xEC1000
	253 Move X0, [X0+1536]
	254 Call 0x1C17CF4
	255 Move X0, 0xEC1000
	256 Move X0, [X0+1544]
	257 Call 0x1C17CF4
	258 Move X0, 0xEC1000
	259 Move X0, [X0+1552]
	260 Call 0x1C17CF4
	261 Move X0, 0xEC1000
	262 Move X0, [X0+1560]
	263 Call 0x1C17CF4
	264 Move X0, 0xEC1000
	265 Move X0, [X0+1568]
	266 Call 0x1C17CF4
	267 Move X0, 0xEC1000
	268 Move X0, [X0+1576]
	269 Call 0x1C17CF4
	270 Move X0, 0xEC1000
	271 Move X0, [X0+1584]
	272 Call 0x1C17CF4
	273 Move X0, 0xEC1000
	274 Move X0, [X0+1592]
	275 Call 0x1C17CF4
	276 Move X0, 0xEC1000
	277 Move X0, [X0+1600]
	278 Call 0x1C17CF4
	279 Move X0, 0xEC1000
	280 Move X0, [X0+1608]
	281 Call 0x1C17CF4
	282 Move X0, 0xEC1000
	283 Move X0, [X0+1616]
	284 Call 0x1C17CF4
	285 Move X0, 0xEC1000
	286 Move X0, [X0+1624]
	287 Call 0x1C17CF4
	288 Move X0, 0xEC1000
	289 Move X0, [X0+1632]
	290 Call 0x1C17CF4
	291 Move X0, 0xEC1000
	292 Move X0, [X0+1640]
	293 Call 0x1C17CF4
	294 Move X0, 0xEC1000
	295 Move X0, [X0+1648]
	296 Call 0x1C17CF4
	297 Move X0, 0xEC1000
	298 Move X0, [X0+1656]
	299 Call 0x1C17CF4
	300 Move X0, 0xEC1000
	301 Move X0, [X0+1664]
	302 Call 0x1C17CF4
	303 Move X0, 0xEC1000
	304 Move X0, [X0+1672]
	305 Call 0x1C17CF4
	306 Move X0, 0xEC1000
	307 Move X0, [X0+1680]
	308 Call 0x1C17CF4
	309 Move X0, 0xEC1000
	310 Move X0, [X0+1688]
	311 Call 0x1C17CF4
	312 Move X0, 0xEC1000
	313 Move X0, [X0+1696]
	314 Call 0x1C17CF4
	315 Move X0, 0xEC1000
	316 Move X0, [X0+1704]
	317 Call 0x1C17CF4
	318 Move X0, 0xEC1000
	319 Move X0, [X0+1712]
	320 Call 0x1C17CF4
	321 Move X0, 0xEC1000
	322 Move X0, [X0+1720]
	323 Call 0x1C17CF4
	324 Move X0, 0xEC1000
	325 Move X0, [X0+1728]
	326 Call 0x1C17CF4
	327 Move X0, 0xEC1000
	328 Move X0, [X0+1736]
	329 Call 0x1C17CF4
	330 Move X0, 0xEC1000
	331 Move X0, [X0+1744]
	332 Call 0x1C17CF4
	333 Move X0, 0xEC1000
	334 Move X0, [X0+1752]
	335 Call 0x1C17CF4
	336 Move X0, 0xEC1000
	337 Move X0, [X0+1760]
	338 Call 0x1C17CF4
	339 Move X0, 0xEC1000
	340 Move X0, [X0+1768]
	341 Call 0x1C17CF4
	342 Move X0, 0xEC1000
	343 Move X0, [X0+1776]
	344 Call 0x1C17CF4
	345 Move X0, 0xEC1000
	346 Move X0, [X0+1784]
	347 Call 0x1C17CF4
	348 Move X0, 0xEC1000
	349 Move X0, [X0+1792]
	350 Call 0x1C17CF4
	351 Move X0, 0xEC1000
	352 Move X0, [X0+1800]
	353 Call 0x1C17CF4
	354 Move X0, 0xEC1000
	355 Move X0, [X0+1808]
	356 Call 0x1C17CF4
	357 Move X0, 0xEC1000
	358 Move X0, [X0+1816]
	359 Call 0x1C17CF4
	360 Move X0, 0xEC1000
	361 Move X0, [X0+1824]
	362 Call 0x1C17CF4
	363 Move X0, 0xEC1000
	364 Move X0, [X0+1832]
	365 Call 0x1C17CF4
	366 Move X0, 0xEC1000
	367 Move X0, [X0+1840]
	368 Call 0x1C17CF4
	369 Move X0, 0xEC1000
	370 Move X0, [X0+1848]
	371 Call 0x1C17CF4
	372 Move X0, 0xEC1000
	373 Move X0, [X0+1856]
	374 Call 0x1C17CF4
	375 Move X0, 0xEC1000
	376 Move X0, [X0+1864]
	377 Call 0x1C17CF4
	378 Move X0, 0xEC1000
	379 Move X0, [X0+1872]
	380 Call 0x1C17CF4
	381 Move X0, 0xEC1000
	382 Move X0, [X0+1880]
	383 Call 0x1C17CF4
	384 Move X0, 0xEC1000
	385 Move X0, [X0+1888]
	386 Call 0x1C17CF4
	387 Move X0, 0xEC1000
	388 Move X0, [X0+1896]
	389 Call 0x1C17CF4
	390 Move X0, 0xEC1000
	391 Move X0, [X0+1904]
	392 Call 0x1C17CF4
	393 Move X0, 0xEC1000
	394 Move X0, [X0+1912]
	395 Call 0x1C17CF4
	396 Move X0, 0xEC1000
	397 Move X0, [X0+1920]
	398 Call 0x1C17CF4
	399 Move X0, 0xEC1000
	400 Move X0, [X0+1928]
	401 Call 0x1C17CF4
	402 Move X0, 0xEC1000
	403 Move X0, [X0+1936]
	404 Call 0x1C17CF4
	405 Move X0, 0xEC1000
	406 Move X0, [X0+1944]
	407 Call 0x1C17CF4
	408 Move X0, 0xEC1000
	409 Move X0, [X0+1952]
	410 Call 0x1C17CF4
	411 Move X0, 0xEC1000
	412 Move X0, [X0+1960]
	413 Call 0x1C17CF4
	414 Move X0, 0xEC1000
	415 Move X0, [X0+1968]
	416 Call 0x1C17CF4
	417 Move X0, 0xEC1000
	418 Move X0, [X0+1976]
	419 Call 0x1C17CF4
	420 Move X0, 0xEC1000
	421 Move X0, [X0+1984]
	422 Call 0x1C17CF4
	423 Move X0, 0xEBF000
	424 Move X0, [X0+552]
	425 Call 0x1C17CF4
	426 Move X0, 0xEC1000
	427 Move X0, [X0+1992]
	428 Call 0x1C17CF4
	429 Move X0, 0xEC1000
	430 Move X0, [X0+2000]
	431 Call 0x1C17CF4
	432 Move X0, 0xEC1000
	433 Move X0, [X0+2008]
	434 Call 0x1C17CF4
	435 Move X0, 0xEC1000
	436 Move X0, [X0+2016]
	437 Call 0x1C17CF4
	438 Move X0, 0xEC1000
	439 Move X0, [X0+2024]
	440 Call 0x1C17CF4
	441 Move X0, 0xEC1000
	442 Move X0, [X0+2032]
	443 Call 0x1C17CF4
	444 Move W8, 1
	445 Move [X21+1373], W8
	446 Move [X31+4], W31
	447 Compare X20, 0
	448 JumpIfEqual {1717}
	449 Move X24, 0xE91000
	450 Move X24, [X24+1728]
	451 Move X0, X20
	452 Move X1, X31
	453 Move [X31+8], X31
	454 Call String.ToLowerInvariant, X0
	455 Move X1, X31
	456 Move X21, X0
	457 Call <PrivateImplementationDetails>.ComputeStringHash, X0
	458 Move W8, 0x48B2
	459 NotImplemented "Instruction MOVK not yet implemented."
	460 NotImplemented "Instruction CMP not yet implemented."
	461 Move W8, 0x7C5E
	462 NotImplemented "Instruction MOVK not yet implemented."
	463 NotImplemented "Instruction CMP not yet implemented."
	464 Move W8, 0xA30D
	465 NotImplemented "Instruction MOVK not yet implemented."
	466 NotImplemented "Instruction CMP not yet implemented."
	467 Move W8, 0xF67A
	468 NotImplemented "Instruction MOVK not yet implemented."
	469 NotImplemented "Instruction CMP not yet implemented."
	470 Move W8, 402
	471 NotImplemented "Instruction MOVK not yet implemented."
	472 NotImplemented "Instruction CMP not yet implemented."
	473 Move W8, 0xD8A4
	474 NotImplemented "Instruction MOVK not yet implemented."
	475 NotImplemented "Instruction CMP not yet implemented."
	476 Move W8, 0xA804
	477 NotImplemented "Instruction MOVK not yet implemented."
	478 NotImplemented "Instruction CMP not yet implemented."
	479 Move W8, 402
	480 NotImplemented "Instruction MOVK not yet implemented."
	481 NotImplemented "Instruction CMP not yet implemented."
	482 Move X8, 0xEC1000
	483 Move X8, [X8+1688]
	484 Move W8, 0xDFB5
	485 NotImplemented "Instruction MOVK not yet implemented."
	486 NotImplemented "Instruction CMP not yet implemented."
	487 Move W8, 0xE7B2
	488 NotImplemented "Instruction MOVK not yet implemented."
	489 NotImplemented "Instruction CMP not yet implemented."
	490 Move W8, 0x2B1D
	491 NotImplemented "Instruction MOVK not yet implemented."
	492 NotImplemented "Instruction CMP not yet implemented."
	493 Move W8, 0x3112
	494 NotImplemented "Instruction MOVK not yet implemented."
	495 NotImplemented "Instruction CMP not yet implemented."
	496 Move W8, 0x7826
	497 NotImplemented "Instruction MOVK not yet implemented."
	498 NotImplemented "Instruction CMP not yet implemented."
	499 Move W8, 0xB583
	500 NotImplemented "Instruction MOVK not yet implemented."
	501 NotImplemented "Instruction CMP not yet implemented."
	502 Move W8, 0x3112
	503 NotImplemented "Instruction MOVK not yet implemented."
	504 NotImplemented "Instruction CMP not yet implemented."
	505 Move X8, 0xEC0000
	506 Move X8, [X8+1504]
	507 Move W8, 0xD3D0
	508 NotImplemented "Instruction MOVK not yet implemented."
	509 NotImplemented "Instruction CMP not yet implemented."
	510 Move W8, 0x63CE
	511 NotImplemented "Instruction MOVK not yet implemented."
	512 NotImplemented "Instruction CMP not yet implemented."
	513 Move W8, 0xAED8
	514 NotImplemented "Instruction MOVK not yet implemented."
	515 NotImplemented "Instruction CMP not yet implemented."
	516 Move W8, 0x34DB
	517 NotImplemented "Instruction MOVK not yet implemented."
	518 NotImplemented "Instruction CMP not yet implemented."
	519 Move W8, 0x535D
	520 NotImplemented "Instruction MOVK not yet implemented."
	521 NotImplemented "Instruction CMP not yet implemented."
	522 Move W8, 0xAED8
	523 NotImplemented "Instruction MOVK not yet implemented."
	524 NotImplemented "Instruction CMP not yet implemented."
	525 Move X8, 0xEC0000
	526 Move X8, [X8+1344]
	527 Move W8, 0x2612
	528 NotImplemented "Instruction MOVK not yet implemented."
	529 NotImplemented "Instruction CMP not yet implemented."
	530 Move W8, 0x9303
	531 NotImplemented "Instruction MOVK not yet implemented."
	532 NotImplemented "Instruction CMP not yet implemented."
	533 Move W8, 0x60CD
	534 NotImplemented "Instruction MOVK not yet implemented."
	535 NotImplemented "Instruction CMP not yet implemented."
	536 Move W8, 0x150E
	537 NotImplemented "Instruction MOVK not yet implemented."
	538 NotImplemented "Instruction CMP not yet implemented."
	539 Move W8, 0x8164
	540 NotImplemented "Instruction MOVK not yet implemented."
	541 NotImplemented "Instruction CMP not yet implemented."
	542 Move W8, 0x60CD
	543 NotImplemented "Instruction MOVK not yet implemented."
	544 NotImplemented "Instruction CMP not yet implemented."
	545 Move X8, 0xEC0000
	546 Move X8, [X8+1736]
	547 Move W8, 0x69B6
	548 NotImplemented "Instruction MOVK not yet implemented."
	549 NotImplemented "Instruction CMP not yet implemented."
	550 Move W8, 0x62B5
	551 NotImplemented "Instruction MOVK not yet implemented."
	552 NotImplemented "Instruction CMP not yet implemented."
	553 Move W8, 0xA409
	554 NotImplemented "Instruction MOVK not yet implemented."
	555 NotImplemented "Instruction CMP not yet implemented."
	556 Move W8, 0x3648
	557 NotImplemented "Instruction MOVK not yet implemented."
	558 NotImplemented "Instruction CMP not yet implemented."
	559 Move W8, 0x62B5
	560 NotImplemented "Instruction MOVK not yet implemented."
	561 NotImplemented "Instruction CMP not yet implemented."
	562 Move X8, 0xEC0000
	563 Move X8, [X8+1768]
	564 Move W8, 0x3F99
	565 NotImplemented "Instruction MOVK not yet implemented."
	566 NotImplemented "Instruction CMP not yet implemented."
	567 Move W8, 0x253E
	568 NotImplemented "Instruction MOVK not yet implemented."
	569 NotImplemented "Instruction CMP not yet implemented."
	570 Move W8, 0xF8D9
	571 NotImplemented "Instruction MOVK not yet implemented."
	572 NotImplemented "Instruction CMP not yet implemented."
	573 Move W8, 0xBB97
	574 NotImplemented "Instruction MOVK not yet implemented."
	575 NotImplemented "Instruction CMP not yet implemented."
	576 Move W8, 0x253E
	577 NotImplemented "Instruction MOVK not yet implemented."
	578 NotImplemented "Instruction CMP not yet implemented."
	579 Move X8, 0xEC0000
	580 Move X8, [X8+1200]
	581 Move W8, 0xD567
	582 NotImplemented "Instruction MOVK not yet implemented."
	583 NotImplemented "Instruction CMP not yet implemented."
	584 Move W8, 0xC575
	585 NotImplemented "Instruction MOVK not yet implemented."
	586 NotImplemented "Instruction CMP not yet implemented."
	587 Move W8, 0x2C14
	588 NotImplemented "Instruction MOVK not yet implemented."
	589 NotImplemented "Instruction CMP not yet implemented."
	590 Move W8, 0xE567
	591 NotImplemented "Instruction MOVK not yet implemented."
	592 NotImplemented "Instruction CMP not yet implemented."
	593 Move W8, 0xC575
	594 NotImplemented "Instruction MOVK not yet implemented."
	595 NotImplemented "Instruction CMP not yet implemented."
	596 Move X8, 0xEC0000
	597 Move X8, [X8+1936]
	598 Move W8, 0x7E15
	599 NotImplemented "Instruction MOVK not yet implemented."
	600 NotImplemented "Instruction CMP not yet implemented."
	601 Move W8, 45
	602 NotImplemented "Instruction MOVK not yet implemented."
	603 NotImplemented "Instruction CMP not yet implemented."
	604 Move W8, 0x18BA
	605 NotImplemented "Instruction MOVK not yet implemented."
	606 NotImplemented "Instruction CMP not yet implemented."
	607 Move W8, 0x79DD
	608 NotImplemented "Instruction MOVK not yet implemented."
	609 NotImplemented "Instruction CMP not yet implemented."
	610 Move W8, 45
	611 NotImplemented "Instruction MOVK not yet implemented."
	612 NotImplemented "Instruction CMP not yet implemented."
	613 Move X8, 0xEC0000
	614 Move X8, [X8+1632]
	615 Move W8, 0xD514
	616 NotImplemented "Instruction MOVK not yet implemented."
	617 NotImplemented "Instruction CMP not yet implemented."
	618 Move W8, 1783
	619 NotImplemented "Instruction MOVK not yet implemented."
	620 NotImplemented "Instruction CMP not yet implemented."
	621 Move W8, 0x2337
	622 NotImplemented "Instruction MOVK not yet implemented."
	623 NotImplemented "Instruction CMP not yet implemented."
	624 Move W8, 0xD514
	625 NotImplemented "Instruction MOVK not yet implemented."
	626 NotImplemented "Instruction CMP not yet implemented."
	627 Move X8, 0xEC0000
	628 Move X8, [X8+1720]
	629 Move W8, 0xC8ED
	630 NotImplemented "Instruction MOVK not yet implemented."
	631 NotImplemented "Instruction CMP not yet implemented."
	632 Move W8, 0xEE6B
	633 NotImplemented "Instruction MOVK not yet implemented."
	634 NotImplemented "Instruction CMP not yet implemented."
	635 Move W8, 0x1C56
	636 NotImplemented "Instruction MOVK not yet implemented."
	637 NotImplemented "Instruction CMP not yet implemented."
	638 Move W8, 0xC8ED
	639 NotImplemented "Instruction MOVK not yet implemented."
	640 NotImplemented "Instruction CMP not yet implemented."
	641 Move X8, 0xEC0000
	642 Move X8, [X8+1824]
	643 Move W8, 0x5022
	644 NotImplemented "Instruction MOVK not yet implemented."
	645 NotImplemented "Instruction CMP not yet implemented."
	646 Move W8, 0x81BE
	647 NotImplemented "Instruction MOVK not yet implemented."
	648 NotImplemented "Instruction CMP not yet implemented."
	649 Move W8, 0x3623
	650 NotImplemented "Instruction MOVK not yet implemented."
	651 NotImplemented "Instruction CMP not yet implemented."
	652 Move W8, 0x5022
	653 NotImplemented "Instruction MOVK not yet implemented."
	654 NotImplemented "Instruction CMP not yet implemented."
	655 Move X8, 0xEC0000
	656 Move X8, [X8+1408]
	657 Move X0, X21
	658 Move X2, X31
	659 Move X1, [X8]
	660 Call String.op_Equality, X0, X1
	661 Move X21, X31
	662 Move TEMP, X0
	663 And TEMP, TEMP, 1
	664 Compare TEMP, 1
	665 JumpIfNotEqual {992}
	666 Move X0, [X24]
	667 Move W8, [X0+224]
	668 Compare W8, 0
	669 JumpIfNotEqual {671}
	670 Call 0x1C17DFC
	671 Move X8, 0xEC0000
	672 Move X8, [X8+1312]
	673 Move W8, 0x45D2
	674 NotImplemented "Instruction MOVK not yet implemented."
	675 NotImplemented "Instruction CMP not yet implemented."
	676 Move W8, 0x3A29
	677 NotImplemented "Instruction MOVK not yet implemented."
	678 NotImplemented "Instruction CMP not yet implemented."
	679 Move W8, 0xE28D
	680 NotImplemented "Instruction MOVK not yet implemented."
	681 NotImplemented "Instruction CMP not yet implemented."
	682 Move W8, 0x45D2
	683 NotImplemented "Instruction MOVK not yet implemented."
	684 NotImplemented "Instruction CMP not yet implemented."
	685 Move X8, 0xEC0000
	686 Move X8, [X8+1648]
	687 Move W8, 0x7D89
	688 NotImplemented "Instruction MOVK not yet implemented."
	689 NotImplemented "Instruction CMP not yet implemented."
	690 Move W8, 0xD306
	691 NotImplemented "Instruction MOVK not yet implemented."
	692 NotImplemented "Instruction CMP not yet implemented."
	693 Move W8, 0x765D
	694 NotImplemented "Instruction MOVK not yet implemented."
	695 NotImplemented "Instruction CMP not yet implemented."
	696 Move W8, 0x7D89
	697 NotImplemented "Instruction MOVK not yet implemented."
	698 NotImplemented "Instruction CMP not yet implemented."
	699 Move X8, 0xEC0000
	700 Move X8, [X8+1216]
	701 Move W8, 0xA760
	702 NotImplemented "Instruction MOVK not yet implemented."
	703 NotImplemented "Instruction CMP not yet implemented."
	704 Move W8, 0x540C
	705 NotImplemented "Instruction MOVK not yet implemented."
	706 NotImplemented "Instruction CMP not yet implemented."
	707 Move W8, 0x4E1D
	708 NotImplemented "Instruction MOVK not yet implemented."
	709 NotImplemented "Instruction CMP not yet implemented."
	710 Move W8, 0xA760
	711 NotImplemented "Instruction MOVK not yet implemented."
	712 NotImplemented "Instruction CMP not yet implemented."
	713 Move X8, 0xEC0000
	714 Move X8, [X8+1696]
	715 Move W8, 0xA021
	716 NotImplemented "Instruction MOVK not yet implemented."
	717 NotImplemented "Instruction CMP not yet implemented."
	718 Move W8, 0x798B
	719 NotImplemented "Instruction MOVK not yet implemented."
	720 NotImplemented "Instruction CMP not yet implemented."
	721 Move W8, 0xEA21
	722 NotImplemented "Instruction MOVK not yet implemented."
	723 NotImplemented "Instruction CMP not yet implemented."
	724 Move W8, 0xA021
	725 NotImplemented "Instruction MOVK not yet implemented."
	726 NotImplemented "Instruction CMP not yet implemented."
	727 Move X8, 0xEC0000
	728 Move X8, [X8+1800]
	729 Move W8, 0x25BF
	730 NotImplemented "Instruction MOVK not yet implemented."
	731 NotImplemented "Instruction CMP not yet implemented."
	732 Move W8, 0x6442
	733 NotImplemented "Instruction MOVK not yet implemented."
	734 NotImplemented "Instruction CMP not yet implemented."
	735 Move W8, 0xA880
	736 NotImplemented "Instruction MOVK not yet implemented."
	737 NotImplemented "Instruction CMP not yet implemented."
	738 Move W8, 0x25BF
	739 NotImplemented "Instruction MOVK not yet implemented."
	740 NotImplemented "Instruction CMP not yet implemented."
	741 Move X8, 0xEC0000
	742 Move X8, [X8+1960]
	743 Move W8, 0x2CC3
	744 NotImplemented "Instruction MOVK not yet implemented."
	745 NotImplemented "Instruction CMP not yet implemented."
	746 Move W8, 0x50BB
	747 NotImplemented "Instruction MOVK not yet implemented."
	748 NotImplemented "Instruction CMP not yet implemented."
	749 Move W8, 0xF67A
	750 NotImplemented "Instruction MOVK not yet implemented."
	751 NotImplemented "Instruction CMP not yet implemented."
	752 Move X8, 0xEC0000
	753 Move X8, [X8+1432]
	754 Move W8, 0x35FA
	755 NotImplemented "Instruction MOVK not yet implemented."
	756 NotImplemented "Instruction CMP not yet implemented."
	757 Move W8, 0x5F9D
	758 NotImplemented "Instruction MOVK not yet implemented."
	759 NotImplemented "Instruction CMP not yet implemented."
	760 Move W8, 0x2B1D
	761 NotImplemented "Instruction MOVK not yet implemented."
	762 NotImplemented "Instruction CMP not yet implemented."
	763 Move X8, 0xEC0000
	764 Move X8, [X8+1944]
	765 Move W8, 0xC686
	766 NotImplemented "Instruction MOVK not yet implemented."
	767 NotImplemented "Instruction CMP not yet implemented."
	768 Move W8, 0xCA4A
	769 NotImplemented "Instruction MOVK not yet implemented."
	770 NotImplemented "Instruction CMP not yet implemented."
	771 Move W8, 0x63CE
	772 NotImplemented "Instruction MOVK not yet implemented."
	773 NotImplemented "Instruction CMP not yet implemented."
	774 Move X8, 0xEC0000
	775 Move X8, [X8+1320]
	776 Move W8, 0xB9D5
	777 NotImplemented "Instruction MOVK not yet implemented."
	778 NotImplemented "Instruction CMP not yet implemented."
	779 Move W8, 0x3896
	780 NotImplemented "Instruction MOVK not yet implemented."
	781 NotImplemented "Instruction CMP not yet implemented."
	782 Move W8, 0x9303
	783 NotImplemented "Instruction MOVK not yet implemented."
	784 NotImplemented "Instruction CMP not yet implemented."
	785 Move X8, 0xEC0000
	786 Move X8, [X8+1256]
	787 Move W8, 0x2FED
	788 NotImplemented "Instruction MOVK not yet implemented."
	789 NotImplemented "Instruction CMP not yet implemented."
	790 Move W8, 0x9633
	791 NotImplemented "Instruction MOVK not yet implemented."
	792 NotImplemented "Instruction CMP not yet implemented."
	793 Move W8, 0x69B6
	794 NotImplemented "Instruction MOVK not yet implemented."
	795 NotImplemented "Instruction CMP not yet implemented."
	796 Move X8, 0xEC0000
	797 Move X8, [X8+1880]
	798 Move X0, X21
	799 Move X2, X31
	800 Move X1, [X8]
	801 Call String.op_Equality, X0, X1
	802 Move X21, X31
	803 Move TEMP, X0
	804 And TEMP, TEMP, 1
	805 Compare TEMP, 1
	806 JumpIfNotEqual {992}
	807 Move X8, 0xEC0000
	808 Move X8, [X8+1096]
	809 Move X0, [X8]
	810 Call 0x1C17F10
	811 Move X1, X31
	812 Move X21, X0
	813 Call DSASignatureFormatter..ctor, X0
	814 Move W8, 0x1A30
	815 NotImplemented "Instruction MOVK not yet implemented."
	816 NotImplemented "Instruction CMP not yet implemented."
	817 Move W8, 0x42CF
	818 NotImplemented "Instruction MOVK not yet implemented."
	819 NotImplemented "Instruction CMP not yet implemented."
	820 Move W8, 0x3F99
	821 NotImplemented "Instruction MOVK not yet implemented."
	822 NotImplemented "Instruction CMP not yet implemented."
	823 Move X8, 0xEC0000
	824 Move X8, [X8+1752]
	825 Move W8, 0x39D1
	826 NotImplemented "Instruction MOVK not yet implemented."
	827 NotImplemented "Instruction CMP not yet implemented."
	828 Move W8, 0xD567
	829 NotImplemented "Instruction MOVK not yet implemented."
	830 NotImplemented "Instruction CMP not yet implemented."
	831 Move W8, 0x6D33
	832 NotImplemented "Instruction MOVK not yet implemented."
	833 NotImplemented "Instruction CMP not yet implemented."
	834 Move X8, 0xEC0000
	835 Move X8, [X8+1192]
	836 Move W8, 0xDB74
	837 NotImplemented "Instruction MOVK not yet implemented."
	838 NotImplemented "Instruction CMP not yet implemented."
	839 Move W8, 0x1487
	840 NotImplemented "Instruction MOVK not yet implemented."
	841 NotImplemented "Instruction CMP not yet implemented."
	842 Move W8, 0x7E15
	843 NotImplemented "Instruction MOVK not yet implemented."
	844 NotImplemented "Instruction CMP not yet implemented."
	845 Move X8, 0xEC0000
	846 Move X8, [X8+1448]
	847 Move W8, 0x61EC
	848 NotImplemented "Instruction MOVK not yet implemented."
	849 NotImplemented "Instruction CMP not yet implemented."
	850 Move W8, 0x23F4
	851 NotImplemented "Instruction MOVK not yet implemented."
	852 NotImplemented "Instruction CMP not yet implemented."
	853 Move W8, 0xA30D
	854 NotImplemented "Instruction MOVK not yet implemented."
	855 NotImplemented "Instruction CMP not yet implemented."
	856 Move X8, 0xEC0000
	857 Move X8, [X8+1296]
	858 Move W8, 0xC918
	859 NotImplemented "Instruction MOVK not yet implemented."
	860 NotImplemented "Instruction CMP not yet implemented."
	861 Move W8, 0xED7D
	862 NotImplemented "Instruction MOVK not yet implemented."
	863 NotImplemented "Instruction CMP not yet implemented."
	864 Move W8, 0xE7B2
	865 NotImplemented "Instruction MOVK not yet implemented."
	866 NotImplemented "Instruction CMP not yet implemented."
	867 Move X8, 0xEC0000
	868 Move X8, [X8+1288]
	869 Move W8, 0xD0B1
	870 NotImplemented "Instruction MOVK not yet implemented."
	871 NotImplemented "Instruction CMP not yet implemented."
	872 Move W8, 0xC990
	873 NotImplemented "Instruction MOVK not yet implemented."
	874 NotImplemented "Instruction CMP not yet implemented."
	875 Move W8, 0xD3D0
	876 NotImplemented "Instruction MOVK not yet implemented."
	877 NotImplemented "Instruction CMP not yet implemented."
	878 Move X8, 0xEC0000
	879 Move X8, [X8+1984]
	880 Move W8, 0x4D0D
	881 NotImplemented "Instruction MOVK not yet implemented."
	882 NotImplemented "Instruction CMP not yet implemented."
	883 Move W8, 0x7ABB
	884 NotImplemented "Instruction MOVK not yet implemented."
	885 NotImplemented "Instruction CMP not yet implemented."
	886 Move W8, 0x4D0D
	887 NotImplemented "Instruction MOVK not yet implemented."
	888 NotImplemented "Instruction CMP not yet implemented."
	889 Move X8, 0xEBE000
	890 Move X8, [X8+552]
	891 Move X0, X21
	892 Move X2, X31
	893 Move X1, [X8]
	894 Call String.op_Equality, X0, X1
	895 Move X21, X31
	896 Move TEMP, X0
	897 And TEMP, TEMP, 1
	898 Compare TEMP, 1
	899 JumpIfNotEqual {992}
	900 Move X0, [X24]
	901 Move W8, [X0+224]
	902 Compare W8, 0
	903 JumpIfNotEqual {905}
	904 Call 0x1C17DFC
	905 Move X8, 0xEC0000
	906 Move X8, [X8+1680]
	907 Move W8, 0xC243
	908 NotImplemented "Instruction MOVK not yet implemented."
	909 NotImplemented "Instruction CMP not yet implemented."
	910 Move W8, 0xF59A
	911 NotImplemented "Instruction MOVK not yet implemented."
	912 NotImplemented "Instruction CMP not yet implemented."
	913 Move W8, 0xC243
	914 NotImplemented "Instruction MOVK not yet implemented."
	915 NotImplemented "Instruction CMP not yet implemented."
	916 Move X8, 0xEC0000
	917 Move X8, [X8+1224]
	918 Move W8, 0x40FC
	919 NotImplemented "Instruction MOVK not yet implemented."
	920 NotImplemented "Instruction CMP not yet implemented."
	921 Move W8, 0x5CB3
	922 NotImplemented "Instruction MOVK not yet implemented."
	923 NotImplemented "Instruction CMP not yet implemented."
	924 Move W8, 0x40FC
	925 NotImplemented "Instruction MOVK not yet implemented."
	926 NotImplemented "Instruction CMP not yet implemented."
	927 Move X8, 0xEC0000
	928 Move X8, [X8+1416]
	929 Move W8, 0xF25E
	930 NotImplemented "Instruction MOVK not yet implemented."
	931 NotImplemented "Instruction CMP not yet implemented."
	932 Move W8, 0xBEF3
	933 NotImplemented "Instruction MOVK not yet implemented."
	934 NotImplemented "Instruction CMP not yet implemented."
	935 Move W8, 0xF25E
	936 NotImplemented "Instruction MOVK not yet implemented."
	937 NotImplemented "Instruction CMP not yet implemented."
	938 Move X8, 0xEC0000
	939 Move X8, [X8+1584]
	940 Move W8, 0xEB42
	941 NotImplemented "Instruction MOVK not yet implemented."
	942 NotImplemented "Instruction CMP not yet implemented."
	943 Move W8, 0xC90B
	944 NotImplemented "Instruction MOVK not yet implemented."
	945 NotImplemented "Instruction CMP not yet implemented."
	946 Move W8, 0xEB42
	947 NotImplemented "Instruction MOVK not yet implemented."
	948 NotImplemented "Instruction CMP not yet implemented."
	949 Move X8, 0xEC0000
	950 Move X8, [X8+1440]
	951 Move W8, 0xB432
	952 NotImplemented "Instruction MOVK not yet implemented."
	953 NotImplemented "Instruction CMP not yet implemented."
	954 Move W8, 0x2612
	955 NotImplemented "Instruction MOVK not yet implemented."
	956 NotImplemented "Instruction CMP not yet implemented."
	957 Move X8, 0xEC0000
	958 Move X8, [X8+1928]
	959 Move W8, 1682
	960 NotImplemented "Instruction MOVK not yet implemented."
	961 NotImplemented "Instruction CMP not yet implemented."
	962 Move W8, 0x7C5E
	963 NotImplemented "Instruction MOVK not yet implemented."
	964 NotImplemented "Instruction CMP not yet implemented."
	965 Move X8, 0xEC0000
	966 Move X8, [X8+1728]
	967 Move W8, 0x689F
	968 NotImplemented "Instruction MOVK not yet implemented."
	969 NotImplemented "Instruction CMP not yet implemented."
	970 Move W8, 0xDFB5
	971 NotImplemented "Instruction MOVK not yet implemented."
	972 NotImplemented "Instruction CMP not yet implemented."
	973 Move X8, 0xEC0000
	974 Move X8, [X8+1520]
	975 Move W8, 0xFD12
	976 NotImplemented "Instruction MOVK not yet implemented."
	977 NotImplemented "Instruction CMP not yet implemented."
	978 Move W8, 0x48B2
	979 NotImplemented "Instruction MOVK not yet implemented."
	980 NotImplemented "Instruction CMP not yet implemented."
	981 Move X8, 0xEC0000
	982 Move X8, [X8+1656]
	983 Move W8, 0x9971
	984 NotImplemented "Instruction MOVK not yet implemented."
	985 NotImplemented "Instruction CMP not yet implemented."
	986 Move W8, 0x944E
	987 NotImplemented "Instruction MOVK not yet implemented."
	988 NotImplemented "Instruction CMP not yet implemented."
	989 Move X8, 0xEC0000
	990 Move X8, [X8+1552]
	991 Move X21, X31
	992 Move X0, [X24]
	993 Move W8, [X0+224]
	994 Compare W8, 0
	995 JumpIfNotEqual {997}
	996 Call 0x1C17DFC
	997 Move X0, X21
	998 Move X1, X31
	999 Move X2, X31
	1000 Call Type.op_Equality, X0, X1
	1001 Move TEMP, X0
	1002 And TEMP, TEMP, 1
	1003 Compare TEMP, 1
	1004 JumpIfNotEqual {1782}
	1005 Move X21, 0xEBD000
	1006 Move X21, [X21+3032]
	1007 Move X0, [X21]
	1008 Move W8, [X0+224]
	1009 Compare W8, 0
	1010 JumpIfNotEqual {1013}
	1011 Call 0x1C17DFC
	1012 Move X0, [X21]
	1013 Move X8, [X0+184]
	1014 Move X22, [X8]
	1015 Move [X31+4], W31
	1016 Add X1, X31, 4
	1017 Move X0, X22
	1018 Move X2, X31
	1019 Call Monitor.Enter, X0, X1
	1020 Move X0, [X21]
	1021 Move W8, [X0+224]
	1022 Compare W8, 0
	1023 JumpIfNotEqual {1026}
	1024 Call 0x1C17DFC
	1025 Move X0, [X21]
	1026 Move X8, [X0+184]
	1027 Move X0, [X8+8]
	1028 Move W8, 180
	1029 NotImplemented "Instruction CMP not yet implemented."
	1030 NotImplemented "Instruction CSEL not yet implemented."
	1031 NotImplemented "Instruction CMP not yet implemented."
	1032 Compare W25, 0
	1033 JumpIfEqual {1753}
	1034 Move X23, X31
	1035 Move X21, X31
	1036 Compare X0, 0
	1037 JumpIfEqual {1735}
	1038 Move X8, 0xEC0000
	1039 Move X8, [X8+1104]
	1040 Move X3, [X8]
	1041 Add X2, X31, 8
	1042 Move X1, X20
	1043 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	1044 Move TEMP, X0
	1045 And TEMP, TEMP, 1
	1046 Compare TEMP, 1
	1047 JumpIfNotEqual {1753}
	1048 Move X0, [X31+8]
	1049 Move X1, X19
	1050 Move X2, X31
	1051 Call Activator.CreateInstance, X0, X1
	1052 Move X21, X0
	1053 Move X23, X31
	1054 Move W25, 183
	1055 Move X8, 0xEC0000
	1056 Move X8, [X8+1792]
	1057 Move X8, 0xEC0000
	1058 Move X8, [X8+1888]
	1059 Move X8, 0xEC0000
	1060 Move X8, [X8+1208]
	1061 Move X8, 0xEC0000
	1062 Move X8, [X8+1240]
	1063 Move X8, 0xEC0000
	1064 Move X8, [X8+1848]
	1065 Move X0, X21
	1066 Move X2, X31
	1067 Move X1, [X8]
	1068 Call String.op_Equality, X0, X1
	1069 Move X21, X31
	1070 Move TEMP, X0
	1071 And TEMP, TEMP, 1
	1072 Compare TEMP, 1
	1073 JumpIfNotEqual {992}
	1074 Move X0, [X24]
	1075 Move W8, [X0+224]
	1076 Compare W8, 0
	1077 JumpIfNotEqual {1079}
	1078 Call 0x1C17DFC
	1079 Move X8, 0xEC0000
	1080 Move X8, [X8+1368]
	1081 Move X8, 0xEC0000
	1082 Move X8, [X8+1560]
	1083 Move X8, 0xEC0000
	1084 Move X8, [X8+1832]
	1085 Move X8, 0xEC0000
	1086 Move X8, [X8+1856]
	1087 Move X8, 0xEC0000
	1088 Move X8, [X8+2032]
	1089 Move X8, 0xEC0000
	1090 Move X8, [X8+1816]
	1091 Move X8, 0xEC0000
	1092 Move X8, [X8+2000]
	1093 Move X8, 0xEC0000
	1094 Move X8, [X8+1968]
	1095 Move X1, [X8]
	1096 Move X0, X21
	1097 Move X2, X31
	1098 Call String.op_Equality, X0, X1
	1099 Move X21, X31
	1100 Move TEMP, X0
	1101 And TEMP, TEMP, 1
	1102 Compare TEMP, 1
	1103 JumpIfNotEqual {992}
	1104 Move X8, 0xEBE000
	1105 Move X8, [X8+416]
	1106 Move X0, [X8]
	1107 Call 0x1C17F10
	1108 Move X1, X31
	1109 Move X21, X0
	1110 Call RSACryptoServiceProvider..ctor, X0
	1111 Move X8, 0xEC0000
	1112 Move X8, [X8+1624]
	1113 Move X1, [X8]
	1114 Move X0, X21
	1115 Move X2, X31
	1116 Call String.op_Equality, X0, X1
	1117 Move X21, X31
	1118 Move TEMP, X0
	1119 And TEMP, TEMP, 1
	1120 Compare TEMP, 1
	1121 JumpIfNotEqual {992}
	1122 Move X8, 0xEC0000
	1123 Move X8, [X8+1152]
	1124 Move X0, [X8]
	1125 Call 0x1C17F10
	1126 Move X21, X0
	1127 Call RSAPKCS1SHA256SignatureDescription..ctor, X0
	1128 Move X8, 0xEC0000
	1129 Move X8, [X8+1336]
	1130 Move X8, 0xEC0000
	1131 Move X8, [X8+1536]
	1132 Move X8, 0xEC0000
	1133 Move X8, [X8+1760]
	1134 Move X8, 0xEC0000
	1135 Move X8, [X8+1544]
	1136 Move X8, 0xEC0000
	1137 Move X8, [X8+1512]
	1138 Move X8, 0xEC0000
	1139 Move X8, [X8+1992]
	1140 Move X1, [X8]
	1141 Move X0, X21
	1142 Move X2, X31
	1143 Call String.op_Equality, X0, X1
	1144 Move X21, X31
	1145 Move TEMP, X0
	1146 And TEMP, TEMP, 1
	1147 Compare TEMP, 1
	1148 JumpIfNotEqual {992}
	1149 Move X8, 0xEC0000
	1150 Move X8, [X8+360]
	1151 Move X0, [X8]
	1152 Call 0x1C17F10
	1153 Move X1, X31
	1154 Move X21, X0
	1155 Call RC2CryptoServiceProvider..ctor, X0
	1156 Move X8, 0xEC0000
	1157 Move X8, [X8+1616]
	1158 Move X0, X21
	1159 Move X2, X31
	1160 Move X1, [X8]
	1161 Call String.op_Equality, X0, X1
	1162 Move X21, X31
	1163 Move TEMP, X0
	1164 And TEMP, TEMP, 1
	1165 Compare TEMP, 1
	1166 JumpIfNotEqual {992}
	1167 Move X0, [X24]
	1168 Move W8, [X0+224]
	1169 Compare W8, 0
	1170 JumpIfNotEqual {1172}
	1171 Call 0x1C17DFC
	1172 Move X8, 0xEC0000
	1173 Move X8, [X8+1808]
	1174 Move X8, 0xEC0000
	1175 Move X8, [X8+1600]
	1176 Move X8, 0xEC0000
	1177 Move X8, [X8+1488]
	1178 Move X1, [X8]
	1179 Move X0, X21
	1180 Move X2, X31
	1181 Call String.op_Equality, X0, X1
	1182 Move X21, X31
	1183 Move TEMP, X0
	1184 And TEMP, TEMP, 1
	1185 Compare TEMP, 1
	1186 JumpIfNotEqual {992}
	1187 Move X8, 0xEC0000
	1188 Move X8, [X8+1144]
	1189 Move X0, [X8]
	1190 Call 0x1C17F10
	1191 Move X21, X0
	1192 Call RSAPKCS1SHA1SignatureDescription..ctor, X0
	1193 Move X8, 0xEC0000
	1194 Move X8, [X8+1424]
	1195 Move X0, X21
	1196 Move X2, X31
	1197 Move X1, [X8]
	1198 Call String.op_Equality, X0, X1
	1199 Move X21, X31
	1200 Move TEMP, X0
	1201 And TEMP, TEMP, 1
	1202 Compare TEMP, 1
	1203 JumpIfNotEqual {992}
	1204 Move X8, 0xEBE000
	1205 Move X8, [X8+312]
	1206 Move X0, [X8]
	1207 Call 0x1C17F10
	1208 Move X1, X31
	1209 Move X21, X0
	1210 Call DSASignatureDeformatter..ctor, X0
	1211 Move X8, 0xEC0000
	1212 Move X8, [X8+1280]
	1213 Move X8, 0xEC0000
	1214 Move X8, [X8+1400]
	1215 Move X0, X21
	1216 Move X2, X31
	1217 Move X1, [X8]
	1218 Call String.op_Equality, X0, X1
	1219 Move X21, X31
	1220 Move TEMP, X0
	1221 And TEMP, TEMP, 1
	1222 Compare TEMP, 1
	1223 JumpIfNotEqual {992}
	1224 Move X8, 0xEC0000
	1225 Move X8, [X8+176]
	1226 Move X0, [X8]
	1227 Call 0x1C17F10
	1228 Move X1, X31
	1229 Move X21, X0
	1230 Call SHA1Managed..ctor, X0
	1231 Move X8, 0xEC0000
	1232 Move X8, [X8+1232]
	1233 Move X8, 0xEC0000
	1234 Move X8, [X8+1952]
	1235 Move X8, 0xEC0000
	1236 Move X8, [X8+1328]
	1237 Move X8, 0xEC0000
	1238 Move X8, [X8+1248]
	1239 Move X1, [X8]
	1240 Move X0, X21
	1241 Move X2, X31
	1242 Call String.op_Equality, X0, X1
	1243 Move X21, X31
	1244 Move TEMP, X0
	1245 And TEMP, TEMP, 1
	1246 Compare TEMP, 1
	1247 JumpIfNotEqual {992}
	1248 Move X8, 0xEC0000
	1249 Move X8, [X8+152]
	1250 Move X0, [X8]
	1251 Call 0x1C17F10
	1252 Move X1, X31
	1253 Move X21, X0
	1254 Call RIPEMD160Managed..ctor, X0
	1255 Move X8, 0xEC0000
	1256 Move X8, [X8+1872]
	1257 Move X8, 0xEC0000
	1258 Move X8, [X8+1568]
	1259 Move X1, [X8]
	1260 Move X0, X21
	1261 Move X2, X31
	1262 Call String.op_Equality, X0, X1
	1263 Move X21, X31
	1264 Move TEMP, X0
	1265 And TEMP, TEMP, 1
	1266 Compare TEMP, 1
	1267 JumpIfNotEqual {992}
	1268 Move X8, 0xEBF000
	1269 Move X8, [X8+3936]
	1270 Move X0, [X8]
	1271 Call 0x1C17F10
	1272 Move X1, X31
	1273 Move X21, X0
	1274 Call DESCryptoServiceProvider..ctor, X0
	1275 Move X8, 0xEC0000
	1276 Move X8, [X8+1272]
	1277 Move X1, [X8]
	1278 Move X0, X21
	1279 Move X2, X31
	1280 Call String.op_Equality, X0, X1
	1281 Move X21, X31
	1282 Move TEMP, X0
	1283 And TEMP, TEMP, 1
	1284 Compare TEMP, 1
	1285 JumpIfNotEqual {992}
	1286 Move X8, 0xEC0000
	1287 Move X8, [X8+1088]
	1288 Move X0, [X8]
	1289 Call 0x1C17F10
	1290 Move X21, X0
	1291 Call DSASignatureDescription..ctor, X0
	1292 Move X8, 0xEC0000
	1293 Move X8, [X8+1376]
	1294 Move X1, [X8]
	1295 Move X0, X21
	1296 Move X2, X31
	1297 Call String.op_Equality, X0, X1
	1298 Move X21, X31
	1299 Move TEMP, X0
	1300 And TEMP, TEMP, 1
	1301 Compare TEMP, 1
	1302 JumpIfNotEqual {992}
	1303 Move X8, 0xEC0000
	1304 Move X8, [X8+1128]
	1305 Move X0, [X8]
	1306 Call 0x1C17F10
	1307 Move X1, X31
	1308 Move X21, X0
	1309 Call HMACSHA512..ctor, X0
	1310 Move X8, 0xEC0000
	1311 Move X8, [X8+1456]
	1312 Move X8, 0xEC0000
	1313 Move X8, [X8+1472]
	1314 Move X8, 0xEC0000
	1315 Move X8, [X8+1576]
	1316 Move X1, [X8]
	1317 Move X0, X21
	1318 Move X2, X31
	1319 Call String.op_Equality, X0, X1
	1320 Move X21, X31
	1321 Move TEMP, X0
	1322 And TEMP, TEMP, 1
	1323 Compare TEMP, 1
	1324 JumpIfNotEqual {992}
	1325 Move X8, 0xEC0000
	1326 Move X8, [X8+1136]
	1327 Move X0, [X8]
	1328 Call 0x1C17F10
	1329 Move X1, X31
	1330 Move X21, X0
	1331 Call MACTripleDES..ctor, X0
	1332 Move X8, 0xEC0000
	1333 Move X8, [X8+1864]
	1334 Move X8, 0xEC0000
	1335 Move X8, [X8+1392]
	1336 Move X8, 0xEC0000
	1337 Move X8, [X8+1904]
	1338 Move X0, X21
	1339 Move X2, X31
	1340 Move X1, [X8]
	1341 Call String.op_Equality, X0, X1
	1342 Move X21, X31
	1343 Move TEMP, X0
	1344 And TEMP, TEMP, 1
	1345 Compare TEMP, 1
	1346 JumpIfNotEqual {992}
	1347 Move X0, [X24]
	1348 Move W8, [X0+224]
	1349 Compare W8, 0
	1350 JumpIfNotEqual {1352}
	1351 Call 0x1C17DFC
	1352 Move X8, 0xEC0000
	1353 Move X8, [X8+1664]
	1354 Move X8, 0xEC0000
	1355 Move X8, [X8+2016]
	1356 Move X8, 0xEC0000
	1357 Move X8, [X8+2008]
	1358 Move X1, [X8]
	1359 Move X0, X21
	1360 Move X2, X31
	1361 Call String.op_Equality, X0, X1
	1362 Move X21, X31
	1363 Move TEMP, X0
	1364 And TEMP, TEMP, 1
	1365 Compare TEMP, 1
	1366 JumpIfNotEqual {992}
	1367 Move X8, 0xEBD000
	1368 Move X8, [X8+3568]
	1369 Move X0, [X8]
	1370 Call 0x1C17F10
	1371 Move X1, X31
	1372 Move X21, X0
	1373 Call HMACSHA1..ctor, X0
	1374 Move X8, 0xEC0000
	1375 Move X8, [X8+1712]
	1376 Move X8, 0xEC0000
	1377 Move X8, [X8+1360]
	1378 Move X8, 0xEC0000
	1379 Move X8, [X8+1384]
	1380 Move X1, [X8]
	1381 Move X0, X21
	1382 Move X2, X31
	1383 Call String.op_Equality, X0, X1
	1384 Move X21, X31
	1385 Move TEMP, X0
	1386 And TEMP, TEMP, 1
	1387 Compare TEMP, 1
	1388 JumpIfNotEqual {992}
	1389 Move X8, 0xEBF000
	1390 Move X8, [X8+800]
	1391 Move X0, [X8]
	1392 Call 0x1C17F10
	1393 Move X21, X0
	1394 Call SHA1CryptoServiceProvider..ctor, X0
	1395 Move X8, 0xEBF000
	1396 Move X8, [X8+1640]
	1397 Move X1, [X8]
	1398 Move X0, X21
	1399 Move X2, X31
	1400 Call String.op_Equality, X0, X1
	1401 Move X21, X31
	1402 Move TEMP, X0
	1403 And TEMP, TEMP, 1
	1404 Compare TEMP, 1
	1405 JumpIfNotEqual {992}
	1406 Move X8, 0xEBF000
	1407 Move X8, [X8+192]
	1408 Move X0, [X8]
	1409 Call 0x1C17F10
	1410 Move X1, X31
	1411 Move X21, X0
	1412 Call SHA256Managed..ctor, X0
	1413 Move X8, 0xEBF000
	1414 Move X8, [X8+1304]
	1415 Move X1, [X8]
	1416 Move X0, X21
	1417 Move X2, X31
	1418 Call String.op_Equality, X0, X1
	1419 Move X21, X31
	1420 Move TEMP, X0
	1421 And TEMP, TEMP, 1
	1422 Compare TEMP, 1
	1423 JumpIfNotEqual {992}
	1424 Move X8, 0xEBF000
	1425 Move X8, [X8+1184]
	1426 Move X0, [X8]
	1427 Call 0x1C17F10
	1428 Move X1, X31
	1429 Move X21, X0
	1430 Call RijndaelManaged..ctor, X0
	1431 Move X8, 0xEBF000
	1432 Move X8, [X8+1480]
	1433 Move X0, X21
	1434 Move X2, X31
	1435 Move X1, [X8]
	1436 Call String.op_Equality, X0, X1
	1437 Move X21, X31
	1438 Move TEMP, X0
	1439 And TEMP, TEMP, 1
	1440 Compare TEMP, 1
	1441 JumpIfNotEqual {992}
	1442 Move X0, [X24]
	1443 Move W8, [X0+224]
	1444 Compare W8, 0
	1445 JumpIfNotEqual {1447}
	1446 Call 0x1C17DFC
	1447 Move X8, 0xEBF000
	1448 Move X8, [X8+1264]
	1449 Move X9, 0xEB8000
	1450 Move X10, 0xEBF000
	1451 Move X9, [X9+432]
	1452 Move X10, [X10+1080]
	1453 Move X0, [X8]
	1454 Move X1, [X9]
	1455 Move X2, [X10]
	1456 Call 0x1C1803C
	1457 Move X21, X0
	1458 Move [X31+8], X0
	1459 Move X8, 0xEBF000
	1460 Move X8, [X8+1496]
	1461 Move X1, [X8]
	1462 Move X0, X21
	1463 Move X2, X31
	1464 Call String.op_Equality, X0, X1
	1465 Move X21, X31
	1466 Move TEMP, X0
	1467 And TEMP, TEMP, 1
	1468 Compare TEMP, 1
	1469 JumpIfNotEqual {992}
	1470 Move X8, 0xEBF000
	1471 Move X8, [X8+1160]
	1472 Move X0, [X8]
	1473 Call 0x1C17F10
	1474 Move X21, X0
	1475 Call RSAPKCS1SHA384SignatureDescription..ctor, X0
	1476 Move X8, 0xEBF000
	1477 Move X8, [X8+1592]
	1478 Move X8, 0xEBF000
	1479 Move X8, [X8+1744]
	1480 Move X8, 0xEBF000
	1481 Move X8, [X8+1352]
	1482 Move X8, 0xEBF000
	1483 Move X8, [X8+2024]
	1484 Move X1, [X8]
	1485 Move X0, X21
	1486 Move X2, X31
	1487 Call String.op_Equality, X0, X1
	1488 Move X21, X31
	1489 Move TEMP, X0
	1490 And TEMP, TEMP, 1
	1491 Compare TEMP, 1
	1492 JumpIfNotEqual {992}
	1493 Move X8, 0xEBF000
	1494 Move X8, [X8+1120]
	1495 Move X0, [X8]
	1496 Call 0x1C17F10
	1497 Move X1, X31
	1498 Move X21, X0
	1499 Call HMACSHA384..ctor, X0
	1500 Move X8, 0xEBF000
	1501 Move X8, [X8+1976]
	1502 Move X1, [X8]
	1503 Move X0, X21
	1504 Move X2, X31
	1505 Call String.op_Equality, X0, X1
	1506 Move X21, X31
	1507 Move TEMP, X0
	1508 And TEMP, TEMP, 1
	1509 Compare TEMP, 1
	1510 JumpIfNotEqual {992}
	1511 Move X8, 0xEBF000
	1512 Move X8, [X8+1168]
	1513 Move X0, [X8]
	1514 Call 0x1C17F10
	1515 Move X21, X0
	1516 Call RSAPKCS1SHA512SignatureDescription..ctor, X0
	1517 Move X8, 0xEBF000
	1518 Move X8, [X8+1528]
	1519 Move X1, [X8]
	1520 Move X0, X21
	1521 Move X2, X31
	1522 Call String.op_Equality, X0, X1
	1523 Move X21, X31
	1524 Move TEMP, X0
	1525 And TEMP, TEMP, 1
	1526 Compare TEMP, 1
	1527 JumpIfNotEqual {992}
	1528 Move X8, 0xEBF000
	1529 Move X8, [X8+320]
	1530 Move X0, [X8]
	1531 Call 0x1C17F10
	1532 Move X21, X0
	1533 Call RNGCryptoServiceProvider..ctor, X0
	1534 Move X8, 0xEBF000
	1535 Move X8, [X8+1776]
	1536 Move X1, [X8]
	1537 Move X0, X21
	1538 Move X2, X31
	1539 Call String.op_Equality, X0, X1
	1540 Move X21, X31
	1541 Move TEMP, X0
	1542 And TEMP, TEMP, 1
	1543 Compare TEMP, 1
	1544 JumpIfNotEqual {992}
	1545 Move X8, 0xEBD000
	1546 Move X8, [X8+880]
	1547 Move X0, [X8]
	1548 Call 0x1C17F10
	1549 Move X1, X31
	1550 Move X21, X0
	1551 Call HMACMD5..ctor, X0
	1552 Move X8, 0xEBF000
	1553 Move X8, [X8+1912]
	1554 Move X0, X21
	1555 Move X2, X31
	1556 Move X1, [X8]
	1557 Call String.op_Equality, X0, X1
	1558 Move X21, X31
	1559 Move TEMP, X0
	1560 And TEMP, TEMP, 1
	1561 Compare TEMP, 1
	1562 JumpIfNotEqual {992}
	1563 Move X8, 0xEBF000
	1564 Move X8, [X8+1176]
	1565 Move X0, [X8]
	1566 Call 0x1C17F10
	1567 Move X1, X31
	1568 Move X21, X0
	1569 Call AsymmetricSignatureFormatter..ctor, X0
	1570 Move X8, 0xEBF000
	1571 Move X8, [X8+1840]
	1572 Move X1, [X8]
	1573 Move X0, X21
	1574 Move X2, X31
	1575 Call String.op_Equality, X0, X1
	1576 Move X21, X31
	1577 Move TEMP, X0
	1578 And TEMP, TEMP, 1
	1579 Compare TEMP, 1
	1580 JumpIfNotEqual {992}
	1581 Move X8, 0xEBC000
	1582 Move X8, [X8+3904]
	1583 Move X0, [X8]
	1584 Call 0x1C17F10
	1585 Move W8, 1
	1586 Move X1, X31
	1587 Move X21, X0
	1588 Move [X0+42], W8
	1589 Call DSA..ctor, X0
	1590 Move W1, 1024
	1591 Move X0, X21
	1592 Move W2, W31
	1593 Call DSACryptoServiceProvider.Common, X0, X1, X2
	1594 Move X8, 0xEBF000
	1595 Move X8, [X8+1672]
	1596 Move X1, [X8]
	1597 Move X0, X21
	1598 Move X2, X31
	1599 Call String.op_Equality, X0, X1
	1600 Move X21, X31
	1601 Move TEMP, X0
	1602 And TEMP, TEMP, 1
	1603 Compare TEMP, 1
	1604 JumpIfNotEqual {992}
	1605 Move X8, 0xEBF000
	1606 Move X8, [X8+144]
	1607 Move X0, [X8]
	1608 Call 0x1C17F10
	1609 Move X21, X0
	1610 Call MD5CryptoServiceProvider..ctor, X0
	1611 Move X8, 0xEBF000
	1612 Move X8, [X8+1784]
	1613 Move X0, X21
	1614 Move X2, X31
	1615 Move X1, [X8]
	1616 Call String.op_Equality, X0, X1
	1617 Move X21, X31
	1618 Move TEMP, X0
	1619 And TEMP, TEMP, 1
	1620 Compare TEMP, 1
	1621 JumpIfNotEqual {992}
	1622 Move X8, 0xEBD000
	1623 Move X8, [X8+336]
	1624 Move X0, [X8]
	1625 Call 0x1C17F10
	1626 Move X1, X31
	1627 Move X21, X0
	1628 Call AsymmetricSignatureDeformatter..ctor, X0
	1629 Move X8, 0xEBF000
	1630 Move X8, [X8+1920]
	1631 Move X1, [X8]
	1632 Move X0, X21
	1633 Move X2, X31
	1634 Call String.op_Equality, X0, X1
	1635 Move X21, X31
	1636 Move TEMP, X0
	1637 And TEMP, TEMP, 1
	1638 Compare TEMP, 1
	1639 JumpIfNotEqual {992}
	1640 Move X8, 0xEBF000
	1641 Move X8, [X8+224]
	1642 Move X0, [X8]
	1643 Call 0x1C17F10
	1644 Move X21, X0
	1645 Call SHA512Managed..ctor, X0
	1646 Move X8, 0xEBF000
	1647 Move X8, [X8+1896]
	1648 Move X1, [X8]
	1649 Move X0, X21
	1650 Move X2, X31
	1651 Call String.op_Equality, X0, X1
	1652 Move X21, X31
	1653 Move TEMP, X0
	1654 And TEMP, TEMP, 1
	1655 Compare TEMP, 1
	1656 JumpIfNotEqual {992}
	1657 Move X8, 0xEBF000
	1658 Move X8, [X8+1000]
	1659 Move X0, [X8]
	1660 Call 0x1C17F10
	1661 Move X21, X0
	1662 Call TripleDESCryptoServiceProvider..ctor, X0
	1663 Move X8, 0xEBF000
	1664 Move X8, [X8+1464]
	1665 Move X1, [X8]
	1666 Move X0, X21
	1667 Move X2, X31
	1668 Call String.op_Equality, X0, X1
	1669 Move X21, X31
	1670 Move TEMP, X0
	1671 And TEMP, TEMP, 1
	1672 Compare TEMP, 1
	1673 JumpIfNotEqual {992}
	1674 Move X8, 0xEBF000
	1675 Move X8, [X8+1112]
	1676 Move X0, [X8]
	1677 Call 0x1C17F10
	1678 Move X1, X31
	1679 Move X21, X0
	1680 Call HMACRIPEMD160..ctor, X0
	1681 Move X8, 0xEBF000
	1682 Move X8, [X8+1704]
	1683 Move X1, [X8]
	1684 Move X0, X21
	1685 Move X2, X31
	1686 Call String.op_Equality, X0, X1
	1687 Move X21, X31
	1688 Move TEMP, X0
	1689 And TEMP, TEMP, 1
	1690 Compare TEMP, 1
	1691 JumpIfNotEqual {992}
	1692 Move X8, 0xE9C000
	1693 Move X8, [X8+3576]
	1694 Move X0, [X8]
	1695 Call 0x1C17F10
	1696 Move X1, X31
	1697 Move X21, X0
	1698 Call HMACSHA256..ctor, X0
	1699 Move X8, 0xEBF000
	1700 Move X8, [X8+1608]
	1701 Move X1, [X8]
	1702 Move X0, X21
	1703 Move X2, X31
	1704 Call String.op_Equality, X0, X1
	1705 Move X21, X31
	1706 Move TEMP, X0
	1707 And TEMP, TEMP, 1
	1708 Compare TEMP, 1
	1709 JumpIfNotEqual {992}
	1710 Move X8, 0xEBF000
	1711 Move X8, [X8+208]
	1712 Move X0, [X8]
	1713 Call 0x1C17F10
	1714 Move X1, X31
	1715 Move X21, X0
	1716 Call SHA384Managed..ctor, X0
	1717 Move X0, 0xE94000
	1718 Move X0, [X0+1320]
	1719 Call 0x1C17D08
	1720 Call 0x1C17F10
	1721 Move X19, X0
	1722 Move X0, 0xE97000
	1723 Move X0, [X0+1416]
	1724 Call 0x1C17D08
	1725 Move X1, X0
	1726 Move X0, X19
	1727 Move X2, X31
	1728 Call ArgumentNullException..ctor, X0, X1
	1729 Move X0, 0xEBF000
	1730 Move X0, [X0+1080]
	1731 Call 0x1C17D08
	1732 Move X1, X0
	1733 Move X0, X19
	1734 Call 0x1C17DEC
	1735 Call 0x1C17F20
	1736 Move X23, X1
	1737 NotImplemented "Instruction CMP not yet implemented."
	1738 Move X21, X0
	1739 Move X0, X21
	1740 Call 0x3EB2AD0
	1741 Move X21, X0
	1742 Move X0, 0xE95000
	1743 Move X0, [X0+3264]
	1744 Call 0x1C17D08
	1745 Move X8, [X21]
	1746 Move X1, [X8]
	1747 Call 0x1C18270
	1748 Move TEMP, X0
	1749 And TEMP, TEMP, 1
	1750 Compare TEMP, 1
	1751 JumpIfNotEqual {1800}
	1752 Call 0x3EB2AE0
	1753 Move X23, X31
	1754 Move X21, X31
	1755 Move W25, 185
	1756 Move W8, [X31+4]
	1757 Compare W8, 0
	1758 JumpIfEqual {1762}
	1759 Move X0, X22
	1760 Move X1, X31
	1761 Call Monitor.Exit, X0
	1762 Compare X23, 0
	1763 JumpIfNotEqual {1798}
	1764 NotImplemented "Instruction CMP not yet implemented."
	1765 Compare W25, 0
	1766 JumpIfNotEqual {1787}
	1767 Move X0, [X24]
	1768 Move W8, [X0+224]
	1769 Compare W8, 0
	1770 JumpIfNotEqual {1772}
	1771 Call 0x1C17DFC
	1772 Move X8, 0xEB8000
	1773 Move X9, 0xEBF000
	1774 Move X8, [X8+432]
	1775 Move X9, [X9+1080]
	1776 Move X0, X20
	1777 Move X1, [X8]
	1778 Move X2, [X9]
	1779 Call 0x1C1803C
	1780 Move X21, X0
	1781 Move [X31+8], X0
	1782 Move X0, X21
	1783 Move X1, X19
	1784 Move X2, X31
	1785 Call Activator.CreateInstance, X0, X1
	1786 Move X21, X0
	1787 Move X0, X21
	1788 Move X20, [X31+64]
	1789 Move X19, [X31+72]
	1790 Move X22, [X31+48]
	1791 Move X21, [X31+56]
	1792 Move X24, [X31+32]
	1793 Move X23, [X31+40]
	1794 Move X30, [X31+16]
	1795 Move X25, [X31+24]
	1796 Add X31, X31, 80
	1797 Return X0
	1798 Move X0, X23
	1799 Call 0x1C17F18
	1800 Move W0, 8
	1801 Call 0x3EB2AF0
	1802 Move X8, [X21]
	1803 Move [X0], X8
	1804 Move X1, 0xC50000
	1805 Add X1, X1, 3672
	1806 Move X2, X31
	1807 Call 0x3EB2B00
	1808 Move X23, X1
	1809 Move X21, X0
	1810 Call 0x3EB2AE0
	1811 Move X23, X1
	1812 Move X21, X0
	1813 NotImplemented "Instruction CMP not yet implemented."
	1814 Move X0, X21
	1815 Call 0x3EB2AD0
	1816 Move X23, [X0]
	1817 Call 0x3EB2AE0
	1818 Move W25, W31
	1819 Move X23, X31
	1820 Move X21, X0
	1821 Move W8, [X31+4]
	1822 Compare W8, 0
	1823 JumpIfEqual {1827}
	1824 Move X0, X22
	1825 Move X1, X31
	1826 Call Monitor.Exit, X0
	1827 Compare X23, 0
	1828 JumpIfEqual {1858}
	1829 Move X0, X23
	1830 Call 0x1C17F18
	1831 NotImplemented "Instruction CMP not yet implemented."
	1832 Move X21, X0
	1833 Move X0, X21
	1834 Call 0x3EB2AD0
	1835 Move X19, X0
	1836 Move X0, 0xE95000
	1837 Move X0, [X0+3264]
	1838 Call 0x1C17D08
	1839 Move X8, [X19]
	1840 Move X1, [X8]
	1841 Call 0x1C18270
	1842 Move TEMP, X0
	1843 And TEMP, TEMP, 1
	1844 Compare TEMP, 1
	1845 JumpIfNotEqual {1848}
	1846 Call 0x3EB2AE0
	1847 Move X21, X31
	1848 Move W0, 8
	1849 Call 0x3EB2AF0
	1850 Move X8, [X19]
	1851 Move [X0], X8
	1852 Move X1, 0xC50000
	1853 Add X1, X1, 3672
	1854 Move X2, X31
	1855 Call 0x3EB2B00
	1856 Move X21, X0
	1857 Call 0x3EB2AE0
	1858 Move X0, X21
	1859 Call 0x1D2D690
	1860 Call 0x1991590

Method: System.String MapNameToOID(System.String name)

Disassembly:
	0x03265820 MOVZ W8, 0x1
	0x03265824 STRB W8, [X19 + 0x568]
	0x03265828 LDR X0, [X20]
	0x0326582C LDR W8, [X0 + 0xE0]
	0x03265830 CBNZ W8, 0x326583C
	0x03265834 BL 0x1C16DFC
	0x03265838 LDR X0, [X20]
	0x0326583C ADRP X21, 0xEBC000
	0x03265840 LDR X21, [X21 + 0x320]
	0x03265844 LDR X8, [X0 + 0xB8]
	0x03265848 MOV X1, X31
	0x0326584C LDR W0, [X8 + 0x4]
	0x03265850 BL 0x3217C14
	0x03265854 LDR X8, [X21]
	0x03265858 MOV X19, X0
	0x0326585C LDR W9, [X8 + 0xE0]
	0x03265860 CBNZ W9, 0x326586C
	0x03265864 MOV X0, X8
	0x03265868 BL 0x1C16DFC
	0x0326586C MOV X0, X19
	0x03265870 MOV X1, X31
	0x03265874 BL 0x32527AC
	0x03265878 TBNZ X0, 0x0, 0x326589C
	0x0326587C LDR X0, [X21]
	0x03265880 LDR W8, [X0 + 0xE0]
	0x03265884 CBNZ W8, 0x326588C
	0x03265888 BL 0x1C16DFC
	0x0326588C MOV X0, X19
	0x03265890 MOV X1, X31
	0x03265894 BL 0x32528CC
	0x03265898 TBZ X0, 0x0, 0x32658B4
	0x0326589C LDR X0, [X20]
	0x032658A0 LDR W8, [X0 + 0xE0]
	0x032658A4 CBNZ W8, 0x3265844
	0x032658A8 BL 0x1C16DFC
	0x032658AC LDR X0, [X20]
	0x032658B0 B 0x3265844
	0x032658B4 MOV X0, X19
	0x032658B8 LDP X20, X19, [X31 + 0x10]
	0x032658BC LDP X30, X21, [X31], #0x20
	0x032658C0 RET
	0x032658C4 STP X29, X30, [X31 - 0x60]!
	0x032658C8 STP X28, X27, [X31 + 0x10]
	0x032658CC STP X26, X25, [X31 + 0x20]
	0x032658D0 STP X24, X23, [X31 + 0x30]
	0x032658D4 STP X22, X21, [X31 + 0x40]
	0x032658D8 STP X20, X19, [X31 + 0x50]
	0x032658DC ADRP X20, 0x1177000
	0x032658E0 LDRB W8, [X20 + 0x565]
	0x032658E4 MOV X23, X1
	0x032658E8 MOV X19, X0
	0x032658EC TBNZ X8, 0x0, 0x3265910
	0x032658F0 ADRP X0, 0xE8E000
	0x032658F4 LDR X0, [X0 + 0x618]
	0x032658F8 BL 0x1C16CF4
	0x032658FC ADRP X0, 0xEBD000
	0x03265900 LDR X0, [X0 + 0xF78]
	0x03265904 BL 0x1C16CF4
	0x03265908 MOVZ W8, 0x1
	0x0326590C STRB W8, [X20 + 0x565]
	0x03265910 LDR X0, [X19 + 0x58]
	0x03265914 CBZ X0, 0x3265C3C
	0x03265918 LDR W2, [X0 + 0x18]
	0x0326591C ADRP X24, 0xEBD000
	0x03265920 LDR X24, [X24 + 0xF78]
	0x03265924 MOV W1, W31
	0x03265928 MOV X3, X31
	0x0326592C BL 0x339FA34
	0x03265930 LDR X0, [X24]
	0x03265934 LDR W8, [X0 + 0xE0]
	0x03265938 CBNZ W8, 0x3265944
	0x0326593C BL 0x1C16DFC
	0x03265940 LDR X0, [X24]
	0x03265944 LDR X8, [X0 + 0xB8]
	0x03265948 LDR X8, [X8 + 0x18]
	0x0326594C CBZ X8, 0x3265C3C
	0x03265950 ADRP X21, 0xE8E000
	0x03265954 LDR X21, [X21 + 0x618]
	0x03265958 LDR W20, [X8 + 0x18]
	0x0326595C LDR X0, [X21]
	0x03265960 MOV W1, W20
	0x03265964 BL 0x1C16D6C
	0x03265968 LDR X8, [X21]
	0x0326596C MOV X21, X0
	0x03265970 MOV W1, W20
	0x03265974 MOV X0, X8
	0x03265978 BL 0x1C16D6C
	0x0326597C LDR X8, [X24]
	0x03265980 LDR X8, [X8 + 0xB8]
	0x03265984 LDR X8, [X8 + 0x18]
	0x03265988 CBZ X8, 0x3265C3C
	0x0326598C LDR W10, [X8 + 0x18]
	0x03265990 MOV X22, X0
	0x03265994 CMP W10, 0x1
	0x03265998 B.LT 0x3265A08
	0x0326599C MOV W9, W31
	0x032659A0 CMP W9, W10
	0x032659A4 B.CS 0x3265C40
	0x032659A8 CBZ X23, 0x3265C3C
	0x032659AC ADD X10, X8, W9, SXTW
	0x032659B0 LDRB W10, [X10 + 0x20]
	0x032659B4 LDR W12, [X23 + 0x18]
	0x032659B8 UBFM X11, X10, 0x3, 0x3F
	0x032659BC CMP W11, W12
	0x032659C0 B.CS 0x3265C40
	0x032659C4 CBZ X21, 0x3265C3C
	0x032659C8 LDR W12, [X21 + 0x18]
	0x032659CC CMP W9, W12
	0x032659D0 B.CS 0x3265C40
	0x032659D4 ADD X11, X23, X11
	0x032659D8 LDRB W11, [X11 + 0x20]
	0x032659DC ORN W10, W31, W10, 0x0
	0x032659E0 AND W10, W10, 0x7
	0x032659E4 SXTW X12, W9
	0x032659E8 LSRV W10, W11, W10
	0x032659EC AND W10, W10, 0x1
	0x032659F0 ADD X11, X21, X12
	0x032659F4 STRB W10, [X11 + 0x20]
	0x032659F8 LDR W10, [X8 + 0x18]
	0x032659FC ADD W9, W9, 0x1
	0x03265A00 CMP W9, W10
	0x03265A04 B.LT 0x32659A0
	0x03265A08 SBFM W25, W20, 0x1, 0x1F
	0x03265A0C CMP W25, 0x1
	0x03265A10 CSINC W8, W25, W31, GT
	0x03265A14 CMP W25, W20
	0x03265A18 MOV X23, X31
	0x03265A1C ADD X26, X22, 0x20
	0x03265A20 CSEL W29, W25, W20, GT
	0x03265A24 SUB X27, X8, 0x1
	0x03265A28 LDR X0, [X24]
	0x03265A2C LDR W8, [X0 + 0xE0]
	0x03265A30 CBNZ W8, 0x3265A3C
	0x03265A34 BL 0x1C16DFC
	0x03265A38 LDR X0, [X24]
	0x03265A3C LDR X8, [X0 + 0xB8]
	0x03265A40 LDR W8, [X8 + 0x4]
	0x03265A44 UBFM W8, W8, 0x1F, 0x1E
	0x03265A48 CMP X23, W8, SXTW
	0x03265A4C B.GE 0x3265C20
	0x03265A50 CMP W20, 0x2
	0x03265A54 MOV W28, W25
	0x03265A58 B.LT 0x3265B50
	0x03265A5C MOV X28, X31
	0x03265A60 LDR W8, [X0 + 0xE0]
	0x03265A64 CBNZ W8, 0x3265A70
	0x03265A68 BL 0x1C16DFC
	0x03265A6C LDR X0, [X24]
	0x03265A70 LDR X8, [X0 + 0xB8]
	0x03265A74 LDR X8, [X8 + 0x20]
	0x03265A78 CBZ X8, 0x3265C3C
	0x03265A7C LDR W9, [X8 + 0x18]
	0x03265A80 CMP X23, X9
	0x03265A84 B.CS 0x3265C40
	0x03265A88 ADD X8, X8, X23
	0x03265A8C LDRB W8, [X8 + 0x20]
	0x03265A90 ADD W9, W28, W8
	0x03265A94 CMP W9, W25
	0x03265A98 CSEL W9, W31, W25, LT
	0x03265A9C CBZ X21, 0x3265C3C
	0x03265AA0 LDR W10, [X21 + 0x18]
	0x03265AA4 SUB W8, W8, W9
	0x03265AA8 ADD X8, X28, X8
	0x03265AAC CMP W8, W10
	0x03265AB0 B.CS 0x3265C40
	0x03265AB4 CBZ X22, 0x3265C3C
	0x03265AB8 LDR W9, [X22 + 0x18]
	0x03265ABC CMP X28, X9
	0x03265AC0 B.CS 0x3265C40
	0x03265AC4 ADD X8, X21, W8, SXTW
	0x03265AC8 LDRB W8, [X8 + 0x20]
	0x03265ACC CMP X27, X28
	0x03265AD0 STRB W8, [X26, X28, LSL]
	0x03265AD4 B.EQ 0x3265AE4
	0x03265AD8 LDR X0, [X24]
	0x03265ADC ADD X28, X28, 0x1
	0x03265AE0 B 0x3265A60
	0x03265AE4 MOV W28, W25
	0x03265AE8 B 0x3265B50
	0x03265AEC LDR X8, [X10 + 0x20]
	0x03265AF0 CBZ X8, 0x3265C3C
	0x03265AF4 LDR W9, [X8 + 0x18]
	0x03265AF8 CMP X23, X9
	0x03265AFC B.CS 0x3265C40
	0x03265B00 ADD X8, X8, X23
	0x03265B04 LDRB W8, [X8 + 0x20]
	0x03265B08 ADD W9, W28, W8
	0x03265B0C CMP W9, W20
	0x03265B10 CSEL W9, W31, W25, LT
	0x03265B14 CBZ X21, 0x3265C3C
	0x03265B18 LDR W10, [X21 + 0x18]
	0x03265B1C SUB W8, W8, W9
	0x03265B20 ADD W8, W28, W8
	0x03265B24 CMP W8, W10
	0x03265B28 B.CS 0x3265C40
	0x03265B2C CBZ X22, 0x3265C3C
	0x03265B30 LDR W9, [X22 + 0x18]
	0x03265B34 CMP W28, W9
	0x03265B38 B.CS 0x3265C40
	0x03265B3C ADD X8, X21, W8, SXTW
	0x03265B40 LDRB W8, [X8 + 0x20]
	0x03265B44 ADD X9, X22, W28, SXTW
	0x03265B48 ADD W28, W28, 0x1
	0x03265B4C STRB W8, [X9 + 0x20]
	0x03265B50 LDR X0, [X24]
	0x03265B54 LDR W8, [X0 + 0xE0]
	0x03265B58 CBNZ W8, 0x3265B64
	0x03265B5C BL 0x1C16DFC
	0x03265B60 LDR X0, [X24]
	0x03265B64 LDR X10, [X0 + 0xB8]
	0x03265B68 CMP W29, W28
	0x03265B6C B.NE 0x3265AEC
	0x03265B70 LDR X8, [X10 + 0x28]
	0x03265B74 CBZ X8, 0x3265C3C
	0x03265B78 LDR W11, [X8 + 0x18]
	0x03265B7C MOVZ W15, 0xAAAB
	0x03265B80 MOVK W15, 0xAAAA0000
	0x03265B84 MOVN W16, 0x5
	0x03265B88 CMP W11, 0x1
	0x03265B8C MOVZ W17, 0x20
	0x03265B90 B.LT 0x3265C18
	0x03265B94 LDR W10, [X10 + 0x4]
	0x03265B98 MOV W9, W31
	0x03265B9C MUL W10, W10, W23
	0x03265BA0 CMP W9, W11
	0x03265BA4 B.CS 0x3265C40
	0x03265BA8 CBZ X22, 0x3265C3C
	0x03265BAC ADD X11, X8, W9, SXTW
	0x03265BB0 LDRB W11, [X11 + 0x20]
	0x03265BB4 LDR W12, [X22 + 0x18]
	0x03265BB8 CMP W11, W12
	0x03265BBC B.CS 0x3265C40
	0x03265BC0 ADD X11, X22, X11
	0x03265BC4 LDRB W11, [X11 + 0x20]
	0x03265BC8 CBZ W11, 0x3265C08
	0x03265BCC LDR X11, [X19 + 0x58]
	0x03265BD0 CBZ X11, 0x3265C3C
	0x03265BD4 LDR W14, [X11 + 0x18]
	0x03265BD8 UMADDL X12, X9, X15, X31
	0x03265BDC UBFM X12, X12, 0x22, 0x3F
	0x03265BE0 ADD W13, W12, W10
	0x03265BE4 CMP W13, W14
	0x03265BE8 B.CS 0x3265C40
	0x03265BEC ADD X11, X11, W13, SXTW
	0x03265BF0 LDRB W13, [X11 + 0x20]
	0x03265BF4 MUL W12, W12, W16
	0x03265BF8 ADD W12, W9, W12
	0x03265BFC LSRV W12, W17, W12
	0x03265C00 ORR W12, W13, W12, 0x0
	0x03265C04 STRB W12, [X11 + 0x20]
	0x03265C08 LDR W11, [X8 + 0x18]
	0x03265C0C ADD W9, W9, 0x1
	0x03265C10 CMP W9, W11
	0x03265C14 B.LT 0x3265BA0
	0x03265C18 ADD X23, X23, 0x1
	0x03265C1C B 0x3265A28
	0x03265C20 LDP X20, X19, [X31 + 0x50]
	0x03265C24 LDP X22, X21, [X31 + 0x40]
	0x03265C28 LDP X24, X23, [X31 + 0x30]
	0x03265C2C LDP X26, X25, [X31 + 0x20]
	0x03265C30 LDP X28, X27, [X31 + 0x10]
	0x03265C34 LDP X29, X30, [X31], #0x60
	0x03265C38 RET
	0x03265C3C BL 0x1C16F20
	0x03265C40 BL 0x1C16F28
	0x03265C44 STP X30, X23, [X31 - 0x30]!
	0x03265C48 STP X22, X21, [X31 + 0x10]
	0x03265C4C STP X20, X19, [X31 + 0x20]
	0x03265C50 ADRP X23, 0x1177000
	0x03265C54 ADRP X22, 0xEBD000
	0x03265C58 LDRB W8, [X23 + 0x563]
	0x03265C5C LDR X22, [X22 + 0xF78]
	0x03265C60 MOV W20, W2
	0x03265C64 MOV W19, W1
	0x03265C68 MOV X21, X0
	0x03265C6C TBNZ X8, 0x0, 0x3265C84
	0x03265C70 ADRP X0, 0xEBD000
	0x03265C74 LDR X0, [X0 + 0xF78]
	0x03265C78 BL 0x1C16CF4
	0x03265C7C MOVZ W8, 0x1
	0x03265C80 STRB W8, [X23 + 0x563]
	0x03265C84 LDR X0, [X22]
	0x03265C88 LDR X21, [X21 + 0x58]
	0x03265C8C LDR W8, [X0 + 0xE0]
	0x03265C90 CBNZ W8, 0x3265C9C
	0x03265C94 BL 0x1C16DFC
	0x03265C98 LDR X0, [X22]
	0x03265C9C CBZ X21, 0x3265E70
	0x03265CA0 LDR W9, [X21 + 0x18]
	0x03265CA4 UBFM W10, W20, 0x1D, 0x1C
	0x03265CA8 CMP W10, W9
	0x03265CAC B.CS 0x3265E6C
	0x03265CB0 LDR X8, [X0 + 0xB8]
	0x03265CB4 LDR X8, [X8 + 0x10]
	0x03265CB8 CBZ X8, 0x3265E70
	0x03265CBC SXTW X12, W10
	0x03265CC0 ADD X10, X21, X12
	0x03265CC4 LDRB W10, [X10 + 0x20]
	0x03265CC8 LDR W11, [X8 + 0x18]
	0x03265CCC EXTR W14, W19, W19, 0x1
	0x03265CD0 AND W10, W10, 0x3F
	0x03265CD4 EOR W10, W10, W14, 0x1A
	0x03265CD8 CMP W10, W11
	0x03265CDC B.CS 0x3265E6C
	0x03265CE0 ORR X15, X12, 0x1
	0x03265CE4 CMP W15, W9
	0x03265CE8 B.CS 0x3265E6C
	0x03265CEC ADD X13, X21, X15
	0x03265CF0 LDRB W13, [X13 + 0x20]
	0x03265CF4 EOR W16, W13, W14, 0x16
	0x03265CF8 MOVZ W13, 0x40
	0x03265CFC BFM W13, W16, 0x0, 0x5
	0x03265D00 CMP W13, W11
	0x03265D04 B.CS 0x3265E6C
	0x03265D08 SXTW X15, W15
	0x03265D0C ADD X15, X15, 0x1
	0x03265D10 CMP W15, W9
	0x03265D14 B.CS 0x3265E6C
	0x03265D18 ADD X15, X21, X15
	0x03265D1C LDRB W15, [X15 + 0x20]
	0x03265D20 EOR W16, W15, W14, 0x12
	0x03265D24 MOVZ W15, 0x80
	0x03265D28 BFM W15, W16, 0x0, 0x5
	0x03265D2C CMP W15, W11
	0x03265D30 B.CS 0x3265E6C
	0x03265D34 ORR X17, X12, 0x3
	0x03265D38 CMP W17, W9
	0x03265D3C B.CS 0x3265E6C
	0x03265D40 ADD X16, X21, X17
	0x03265D44 LDRB W16, [X16 + 0x20]
	0x03265D48 EOR W0, W16, W14, 0xE
	0x03265D4C MOVZ W16, 0xC0
	0x03265D50 BFM W16, W0, 0x0, 0x5
	0x03265D54 CMP W16, W11
	0x03265D58 B.CS 0x3265E6C
	0x03265D5C SXTW X1, W17
	0x03265D60 ADD X17, X1, 0x1
	0x03265D64 CMP W17, W9
	0x03265D68 B.CS 0x3265E6C
	0x03265D6C ADD X17, X21, X17
	0x03265D70 LDRB W17, [X17 + 0x20]
	0x03265D74 EOR W0, W17, W14, 0xA
	0x03265D78 MOVZ W17, 0x100
	0x03265D7C BFM W17, W0, 0x0, 0x5
	0x03265D80 CMP W17, W11
	0x03265D84 B.CS 0x3265E6C
	0x03265D88 ADD X0, X1, 0x2
	0x03265D8C CMP W0, W9
	0x03265D90 B.CS 0x3265E6C
	0x03265D94 ADD X0, X21, X0
	0x03265D98 LDRB W0, [X0 + 0x20]
	0x03265D9C EOR W2, W0, W14, 0x6
	0x03265DA0 MOVZ W0, 0x140
	0x03265DA4 BFM W0, W2, 0x0, 0x5
	0x03265DA8 CMP W0, W11
	0x03265DAC B.CS 0x3265E6C
	0x03265DB0 ADD X1, X1, 0x3
	0x03265DB4 CMP W1, W9
	0x03265DB8 B.CS 0x3265E6C
	0x03265DBC ADD X1, X21, X1
	0x03265DC0 LDRB W1, [X1 + 0x20]
	0x03265DC4 EOR W1, W1, W14, 0x2
	0x03265DC8 MOVZ W14, 0x180
	0x03265DCC BFM W14, W1, 0x0, 0x5
	0x03265DD0 CMP W14, W11
	0x03265DD4 B.CS 0x3265E6C
	0x03265DD8 ORR X12, X12, 0x7
	0x03265DDC CMP W12, W9
	0x03265DE0 B.CS 0x3265E6C
	0x03265DE4 ADD X9, X21, X12
	0x03265DE8 LDRB W9, [X9 + 0x20]
	0x03265DEC EOR W12, W9, W19, 0x1F
	0x03265DF0 MOVZ W9, 0x1C0
	0x03265DF4 BFM W9, W12, 0x0, 0x5
	0x03265DF8 CMP W9, W11
	0x03265DFC B.CS 0x3265E6C
	0x03265E00 ADD X10, X8, W10, 0x2, UXTW
	0x03265E04 ADD X11, X8, W13, 0x2, UXTW
	0x03265E08 ADD X12, X8, W15, 0x2, UXTW
	0x03265E0C LDR W10, [X10 + 0x20]
	0x03265E10 LDR W11, [X11 + 0x20]
	0x03265E14 ADD X13, X8, W16, 0x2, UXTW
	0x03265E18 LDR W12, [X12 + 0x20]
	0x03265E1C ADD X15, X8, W17, 0x2, UXTW
	0x03265E20 LDR W13, [X13 + 0x20]
	0x03265E24 ADD X16, X8, W0, 0x2, UXTW
	0x03265E28 LDR W15, [X15 + 0x20]
	0x03265E2C LDR W16, [X16 + 0x20]
	0x03265E30 ADD X14, X8, W14, 0x2, UXTW
	0x03265E34 ADD X8, X8, W9, 0x2, UXTW
	0x03265E38 ORR W9, W11, W10, 0x0
	0x03265E3C LDR W14, [X14 + 0x20]
	0x03265E40 ORR W9, W9, W12, 0x0
	0x03265E44 LDR W8, [X8 + 0x20]
	0x03265E48 ORR W9, W9, W13, 0x0
	0x03265E4C ORR W9, W9, W15, 0x0
	0x03265E50 LDP X20, X19, [X31 + 0x20]
	0x03265E54 LDP X22, X21, [X31 + 0x10]
	0x03265E58 ORR W9, W9, W16, 0x0
	0x03265E5C ORR W9, W9, W14, 0x0
	0x03265E60 ORR W0, W9, W8, 0x0
	0x03265E64 LDP X30, X23, [X31], #0x30
	0x03265E68 RET
	0x03265E6C BL 0x1C16F28
	0x03265E70 BL 0x1C16F20
	0x03265E74 STP X30, X25, [X31 - 0x40]!
	0x03265E78 STP X24, X23, [X31 + 0x10]
	0x03265E7C STP X22, X21, [X31 + 0x20]
	0x03265E80 STP X20, X19, [X31 + 0x30]
	0x03265E84 ADRP X23, 0x1177000
	0x03265E88 LDRB W8, [X23 + 0x564]
	0x03265E8C MOV W20, W3
	0x03265E90 MOV X21, X2
	0x03265E94 MOV X19, X1
	0x03265E98 MOV X22, X0
	0x03265E9C TBNZ X8, 0x0, 0x3265EB4
	0x03265EA0 ADRP X0, 0xEBD000
	0x03265EA4 LDR X0, [X0 + 0xF78]
	0x03265EA8 BL 0x1C16CF4
	0x03265EAC MOVZ W8, 0x1
	0x03265EB0 STRB W8, [X23 + 0x564]
	0x03265EB4 ADRP X25, 0xEBD000
	0x03265EB8 LDR X25, [X25 + 0xF78]
	0x03265EBC TBZ X20, 0x0, 0x3265ED8
	0x03265EC0 LDR X0, [X25]
	0x03265EC4 LDR W8, [X0 + 0xE0]
	0x03265EC8 CBNZ W8, 0x3265ED0
	0x03265ECC BL 0x1C16DFC
	0x03265ED0 MOV X0, X22
	0x03265ED4 BL 0x326614C
	0x03265ED8 CBZ X22, 0x3266148
	0x03265EDC LDR W8, [X22 + 0x18]
	0x03265EE0 CBZ W8, 0x3266144
	0x03265EE4 CBZ X21, 0x3266148
	0x03265EE8 LDRB W9, [X22 + 0x20]
	0x03265EEC LDR W11, [X21 + 0x18]
	0x03265EF0 UBFM X10, X9, 0x3, 0x3F
	0x03265EF4 AND X8, X10, 0x1F
	0x03265EF8 CMP W8, W11
	0x03265EFC B.CS 0x3266144
	0x03265F00 UBFM W9, W9, 0x1F, 0x1E
	0x03265F04 AND X9, X9, 0x1F
	0x03265F08 ORR X9, X9, 0x3F
	0x03265F0C CMP W9, W11
	0x03265F10 B.CS 0x3266144
	0x03265F14 ORR W10, W10, 0x1
	0x03265F18 CMP W10, W11
	0x03265F1C B.CS 0x3266144
	0x03265F20 ORR W12, W9, 0x1
	0x03265F24 CMP W12, W11
	0x03265F28 B.CS 0x3266144
	0x03265F2C LDR X0, [X25]
	0x03265F30 ADD X11, X21, 0x20
	0x03265F34 LDR W8, [X11, X8, LSL #2]
	0x03265F38 LDR W9, [X11, X9, LSL #2]
	0x03265F3C ADD X11, X21, 0x20
	0x03265F40 LDR W10, [X11, W10, UXTW]
	0x03265F44 LDR W11, [X11, W12, UXTW]
	0x03265F48 LDR W12, [X0 + 0xE0]
	0x03265F4C ORR W24, W9, W8, 0x0
	0x03265F50 ORR W23, W11, W10, 0x0
	0x03265F54 CBNZ W12, 0x3265F60
	0x03265F58 BL 0x1C16DFC
	0x03265F5C LDR X0, [X25]
	0x03265F60 LDR X8, [X0 + 0xB8]
	0x03265F64 LDR W8, [X8 + 0xC]
	0x03265F68 UBFM W8, W8, 0x1F, 0x1E
	0x03265F6C SUBS W9, W8, 0x3
	0x03265F70 B.LT 0x3266034
	0x03265F74 LDR W11, [X22 + 0x18]
	0x03265F78 UBFM W10, W9, 0x1, 0x1F
	0x03265F7C MOV W8, W31
	0x03265F80 MOVZ W9, 0x40
	0x03265F84 CMP W11, 0x1
	0x03265F88 CSINC W11, W11, W31, HI
	0x03265F8C ADD W10, W10, 0x1
	0x03265F90 SUB W11, W11, 0x1
	0x03265F94 MOVZ W12, 0x21
	0x03265F98 CMP W11, W8
	0x03265F9C B.EQ 0x3266144
	0x03265FA0 ADD W13, W8, 0x1
	0x03265FA4 ADD X13, X22, W13, SXTW
	0x03265FA8 LDRB W13, [X13 + 0x20]
	0x03265FAC LDR W16, [X21 + 0x18]
	0x03265FB0 UBFM W14, W13, 0x3, 0x1F
	0x03265FB4 AND W14, W14, 0x1E
	0x03265FB8 ORR W14, W14, W9, 0x0
	0x03265FBC CMP W14, W16
	0x03265FC0 B.CS 0x3266144
	0x03265FC4 UBFM W13, W13, 0x1F, 0x1E
	0x03265FC8 AND X13, X13, 0x1F
	0x03265FCC SXTW X15, W9
	0x03265FD0 ORR X17, X15, X13, 0x0
	0x03265FD4 ORR X13, X17, 0x3F
	0x03265FD8 CMP W13, W16
	0x03265FDC B.CS 0x3266144
	0x03265FE0 SXTW X14, W14
	0x03265FE4 ORR X15, X14, 0x1
	0x03265FE8 CMP W15, W16
	0x03265FEC B.CS 0x3266144
	0x03265FF0 ORR X17, X17, X12, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1178000
	005 Move W8, [X20+1374]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {133}
	011 Move X0, 0xEBF000
	012 Move X0, [X0+1192]
	013 Call 0x1C17CF4
	014 Move X0, 0xEBF000
	015 Move X0, [X0+1208]
	016 Call 0x1C17CF4
	017 Move X0, 0xEBF000
	018 Move X0, [X0+1224]
	019 Call 0x1C17CF4
	020 Move X0, 0xEBF000
	021 Move X0, [X0+736]
	022 Call 0x1C17CF4
	023 Move X0, 0xEBF000
	024 Move X0, [X0+2048]
	025 Call 0x1C17CF4
	026 Move X0, 0xEBF000
	027 Move X0, [X0+1248]
	028 Call 0x1C17CF4
	029 Move X0, 0xEBF000
	030 Move X0, [X0+1256]
	031 Call 0x1C17CF4
	032 Move X0, 0xEBF000
	033 Move X0, [X0+1320]
	034 Call 0x1C17CF4
	035 Move X0, 0xEBF000
	036 Move X0, [X0+1352]
	037 Call 0x1C17CF4
	038 Move X0, 0xEBF000
	039 Move X0, [X0+2056]
	040 Call 0x1C17CF4
	041 Move X0, 0xEBC000
	042 Move X0, [X0+3376]
	043 Call 0x1C17CF4
	044 Move X0, 0xEBF000
	045 Move X0, [X0+1384]
	046 Call 0x1C17CF4
	047 Move X0, 0xEBF000
	048 Move X0, [X0+1392]
	049 Call 0x1C17CF4
	050 Move X0, 0xEBF000
	051 Move X0, [X0+1400]
	052 Call 0x1C17CF4
	053 Move X0, 0xEBF000
	054 Move X0, [X0+1440]
	055 Call 0x1C17CF4
	056 Move X0, 0xEBF000
	057 Move X0, [X0+1456]
	058 Call 0x1C17CF4
	059 Move X0, 0xEBF000
	060 Move X0, [X0+1504]
	061 Call 0x1C17CF4
	062 Move X0, 0xEBF000
	063 Move X0, [X0+744]
	064 Call 0x1C17CF4
	065 Move X0, 0xEBF000
	066 Move X0, [X0+2064]
	067 Call 0x1C17CF4
	068 Move X0, 0xEBF000
	069 Move X0, [X0+2072]
	070 Call 0x1C17CF4
	071 Move X0, 0xEBF000
	072 Move X0, [X0+1560]
	073 Call 0x1C17CF4
	074 Move X0, 0xEBF000
	075 Move X0, [X0+1584]
	076 Call 0x1C17CF4
	077 Move X0, 0xEBF000
	078 Move X0, [X0+1608]
	079 Call 0x1C17CF4
	080 Move X0, 0xEBF000
	081 Move X0, [X0+1640]
	082 Call 0x1C17CF4
	083 Move X0, 0xEBF000
	084 Move X0, [X0+1648]
	085 Call 0x1C17CF4
	086 Move X0, 0xEBF000
	087 Move X0, [X0+1672]
	088 Call 0x1C17CF4
	089 Move X0, 0xEBF000
	090 Move X0, [X0+2080]
	091 Call 0x1C17CF4
	092 Move X0, 0xEBF000
	093 Move X0, [X0+1712]
	094 Call 0x1C17CF4
	095 Move X0, 0xEBF000
	096 Move X0, [X0+1736]
	097 Call 0x1C17CF4
	098 Move X0, 0xEBF000
	099 Move X0, [X0+1744]
	100 Call 0x1C17CF4
	101 Move X0, 0xEBC000
	102 Move X0, [X0+3336]
	103 Call 0x1C17CF4
	104 Move X0, 0xEBF000
	105 Move X0, [X0+1792]
	106 Call 0x1C17CF4
	107 Move X0, 0xEBF000
	108 Move X0, [X0+1800]
	109 Call 0x1C17CF4
	110 Move X0, 0xEBF000
	111 Move X0, [X0+1816]
	112 Call 0x1C17CF4
	113 Move X0, 0xEBF000
	114 Move X0, [X0+1824]
	115 Call 0x1C17CF4
	116 Move X0, 0xEBF000
	117 Move X0, [X0+1832]
	118 Call 0x1C17CF4
	119 Move X0, 0xEBF000
	120 Move X0, [X0+1864]
	121 Call 0x1C17CF4
	122 Move X0, 0xEBF000
	123 Move X0, [X0+752]
	124 Call 0x1C17CF4
	125 Move X0, 0xEBF000
	126 Move X0, [X0+2088]
	127 Call 0x1C17CF4
	128 Move X0, 0xEBF000
	129 Move X0, [X0+1984]
	130 Call 0x1C17CF4
	131 Move W8, 1
	132 Move [X20+1374], W8
	133 Compare X19, 0
	134 JumpIfEqual {435}
	135 Move X0, X19
	136 Move X1, X31
	137 Call String.ToLowerInvariant, X0
	138 Move X1, X31
	139 Move X19, X0
	140 Call <PrivateImplementationDetails>.ComputeStringHash, X0
	141 Move W8, 0xBEF3
	142 NotImplemented "Instruction MOVK not yet implemented."
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move W8, 0x81BE
	145 NotImplemented "Instruction MOVK not yet implemented."
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Move W8, 0x23F4
	148 NotImplemented "Instruction MOVK not yet implemented."
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Move W8, 0xA804
	151 NotImplemented "Instruction MOVK not yet implemented."
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move W8, 0x2CC3
	154 NotImplemented "Instruction MOVK not yet implemented."
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Move W8, 0x23F4
	157 NotImplemented "Instruction MOVK not yet implemented."
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Move X8, 0xEBF000
	160 Move X8, [X8+1400]
	161 Move W8, 0x1C56
	162 NotImplemented "Instruction MOVK not yet implemented."
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Move W8, 0x3112
	165 NotImplemented "Instruction MOVK not yet implemented."
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Move W8, 0xF25E
	168 NotImplemented "Instruction MOVK not yet implemented."
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Move W8, 0x7826
	171 NotImplemented "Instruction MOVK not yet implemented."
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move W8, 0x3112
	174 NotImplemented "Instruction MOVK not yet implemented."
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Move X8, 0xEBF000
	177 Move X8, [X8+1504]
	178 Move W8, 0x6D33
	179 NotImplemented "Instruction MOVK not yet implemented."
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Move W8, 0x2C14
	182 NotImplemented "Instruction MOVK not yet implemented."
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Move W8, 0xD3D0
	185 NotImplemented "Instruction MOVK not yet implemented."
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Move W8, 0x2C14
	188 NotImplemented "Instruction MOVK not yet implemented."
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move X8, 0xEBF000
	191 Move X8, [X8+1456]
	192 Move W8, 0x9303
	193 NotImplemented "Instruction MOVK not yet implemented."
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Move W8, 0xBB97
	196 NotImplemented "Instruction MOVK not yet implemented."
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Move W8, 0xC8ED
	199 NotImplemented "Instruction MOVK not yet implemented."
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Move W8, 0xBB97
	202 NotImplemented "Instruction MOVK not yet implemented."
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Move X8, 0xEBF000
	205 Move X8, [X8+1560]
	206 Move W8, 0x535D
	207 NotImplemented "Instruction MOVK not yet implemented."
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Move W8, 0xC243
	210 NotImplemented "Instruction MOVK not yet implemented."
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Move W8, 0x535D
	213 NotImplemented "Instruction MOVK not yet implemented."
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Move X8, 0xEBF000
	216 Move X8, [X8+1208]
	217 Move W8, 0xE8AE
	218 NotImplemented "Instruction MOVK not yet implemented."
	219 NotImplemented "Instruction CMP not yet implemented."
	220 Move W8, 0x35FA
	221 NotImplemented "Instruction MOVK not yet implemented."
	222 NotImplemented "Instruction CMP not yet implemented."
	223 Move W8, 0xE8AE
	224 NotImplemented "Instruction MOVK not yet implemented."
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Move X8, 0xEBF000
	227 Move X8, [X8+2064]
	228 Move X0, X19
	229 Move X2, X31
	230 Move X1, [X8]
	231 Call String.op_Equality, X0, X1
	232 Move X8, 0xEBF000
	233 Move X8, [X8+2072]
	234 Move W8, 0x798B
	235 NotImplemented "Instruction MOVK not yet implemented."
	236 NotImplemented "Instruction CMP not yet implemented."
	237 Move W8, 0x39D1
	238 NotImplemented "Instruction MOVK not yet implemented."
	239 NotImplemented "Instruction CMP not yet implemented."
	240 Move W8, 0x798B
	241 NotImplemented "Instruction MOVK not yet implemented."
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Move X8, 0xEBF000
	244 Move X8, [X8+1712]
	245 Move W8, 0xDB74
	246 NotImplemented "Instruction MOVK not yet implemented."
	247 NotImplemented "Instruction CMP not yet implemented."
	248 Move W8, 0x45D2
	249 NotImplemented "Instruction MOVK not yet implemented."
	250 NotImplemented "Instruction CMP not yet implemented."
	251 Move W8, 0xDB74
	252 NotImplemented "Instruction MOVK not yet implemented."
	253 NotImplemented "Instruction CMP not yet implemented."
	254 Move X8, 0xEBF000
	255 Move X8, [X8+1352]
	256 Move W8, 0xE567
	257 NotImplemented "Instruction MOVK not yet implemented."
	258 NotImplemented "Instruction CMP not yet implemented."
	259 Move W8, 0x6D33
	260 NotImplemented "Instruction MOVK not yet implemented."
	261 NotImplemented "Instruction CMP not yet implemented."
	262 Move X8, 0xEBF000
	263 Move X8, [X8+1192]
	264 Move X0, X19
	265 Move X2, X31
	266 Move X1, [X8]
	267 Call String.op_Equality, X0, X1
	268 Move X8, 0xEBF000
	269 Move X8, [X8+2048]
	270 Move W8, 0x60CD
	271 NotImplemented "Instruction MOVK not yet implemented."
	272 NotImplemented "Instruction CMP not yet implemented."
	273 Move W8, 0x9303
	274 NotImplemented "Instruction MOVK not yet implemented."
	275 NotImplemented "Instruction CMP not yet implemented."
	276 Move X8, 0xEBF000
	277 Move X8, [X8+1256]
	278 Move X0, X19
	279 Move X2, X31
	280 Move X1, [X8]
	281 Call String.op_Equality, X0, X1
	282 Move X8, 0xEBF000
	283 Move X8, [X8+2088]
	284 Move W8, 0x63CE
	285 NotImplemented "Instruction MOVK not yet implemented."
	286 NotImplemented "Instruction CMP not yet implemented."
	287 Move W8, 0x81BE
	288 NotImplemented "Instruction MOVK not yet implemented."
	289 NotImplemented "Instruction CMP not yet implemented."
	290 Move X8, 0xEBF000
	291 Move X8, [X8+1392]
	292 Move W8, 0xEE6B
	293 NotImplemented "Instruction MOVK not yet implemented."
	294 NotImplemented "Instruction CMP not yet implemented."
	295 Move W8, 0x1C56
	296 NotImplemented "Instruction MOVK not yet implemented."
	297 NotImplemented "Instruction CMP not yet implemented."
	298 Move X8, 0xEBF000
	299 Move X8, [X8+1816]
	300 Move W8, 0xA021
	301 NotImplemented "Instruction MOVK not yet implemented."
	302 NotImplemented "Instruction CMP not yet implemented."
	303 Move W8, 0xBEF3
	304 NotImplemented "Instruction MOVK not yet implemented."
	305 NotImplemented "Instruction CMP not yet implemented."
	306 Move X8, 0xEBF000
	307 Move X8, [X8+1672]
	308 Move X1, [X8]
	309 Move X0, X19
	310 Move X2, X31
	311 Call String.op_Equality, X0, X1
	312 Move W8, W0
	313 Move X0, X31
	314 Move TEMP, X8
	315 And TEMP, TEMP, 1
	316 Compare TEMP, 1
	317 JumpIfNotEqual {431}
	318 Move X8, 0xEBC000
	319 Move X8, [X8+3376]
	320 Move W8, 0xEB42
	321 NotImplemented "Instruction MOVK not yet implemented."
	322 NotImplemented "Instruction CMP not yet implemented."
	323 Move W8, 0x9971
	324 NotImplemented "Instruction MOVK not yet implemented."
	325 NotImplemented "Instruction CMP not yet implemented."
	326 Move X8, 0xEBF000
	327 Move X8, [X8+1608]
	328 Move X0, X31
	329 Move X8, 0xEBF000
	330 Move X8, [X8+1792]
	331 Move X8, 0xEBF000
	332 Move X8, [X8+1384]
	333 Move X1, [X8]
	334 Move X0, X19
	335 Move X2, X31
	336 Call String.op_Equality, X0, X1
	337 Move W8, W0
	338 Move X0, X31
	339 Move TEMP, X8
	340 And TEMP, TEMP, 1
	341 Compare TEMP, 1
	342 JumpIfNotEqual {431}
	343 Move X8, 0xEBC000
	344 Move X8, [X8+3336]
	345 Move X8, 0xEBF000
	346 Move X8, [X8+1584]
	347 Move X8, 0xEBF000
	348 Move X8, [X8+1248]
	349 Move X8, 0xEBF000
	350 Move X8, [X8+1984]
	351 Move X0, X19
	352 Move X2, X31
	353 Move X1, [X8]
	354 Call String.op_Equality, X0, X1
	355 Move X8, 0xEBF000
	356 Move X8, [X8+2080]
	357 Move X8, [X8]
	358 And W31, W0, 1
	359 NotImplemented "Instruction CSEL not yet implemented."
	360 Move X8, 0xEBF000
	361 Move X8, [X8+1824]
	362 Move X8, 0xEBF000
	363 Move X8, [X8+1224]
	364 Move X8, 0xEBF000
	365 Move X8, [X8+1640]
	366 Move X8, 0xEBF000
	367 Move X8, [X8+1744]
	368 Move X8, 0xEBF000
	369 Move X8, [X8+1648]
	370 Move X8, 0xEBF000
	371 Move X8, [X8+1832]
	372 Move X1, [X8]
	373 Move X0, X19
	374 Move X2, X31
	375 Call String.op_Equality, X0, X1
	376 Move W8, W0
	377 Move X0, X31
	378 Move TEMP, X8
	379 And TEMP, TEMP, 1
	380 Compare TEMP, 1
	381 JumpIfNotEqual {431}
	382 Move X8, 0xEBF000
	383 Move X8, [X8+2056]
	384 Move X8, 0xEBF000
	385 Move X8, [X8+1736]
	386 Move X8, 0xEBF000
	387 Move X8, [X8+1320]
	388 Move X8, 0xEBF000
	389 Move X8, [X8+1864]
	390 Move X1, [X8]
	391 Move X0, X19
	392 Move X2, X31
	393 Call String.op_Equality, X0, X1
	394 Move W8, W0
	395 Move X0, X31
	396 Move TEMP, X8
	397 And TEMP, TEMP, 1
	398 Compare TEMP, 1
	399 JumpIfNotEqual {431}
	400 Move X8, 0xEBF000
	401 Move X8, [X8+744]
	402 Move X8, 0xEBF000
	403 Move X8, [X8+1800]
	404 Move X1, [X8]
	405 Move X0, X19
	406 Move X2, X31
	407 Call String.op_Equality, X0, X1
	408 Move W8, W0
	409 Move X0, X31
	410 Move TEMP, X8
	411 And TEMP, TEMP, 1
	412 Compare TEMP, 1
	413 JumpIfNotEqual {431}
	414 Move X8, 0xEBF000
	415 Move X8, [X8+736]
	416 Move X8, 0xEBF000
	417 Move X8, [X8+1440]
	418 Move X1, [X8]
	419 Move X0, X19
	420 Move X2, X31
	421 Call String.op_Equality, X0, X1
	422 Move W8, W0
	423 Move X0, X31
	424 Move TEMP, X8
	425 And TEMP, TEMP, 1
	426 Compare TEMP, 1
	427 JumpIfNotEqual {431}
	428 Move X8, 0xEBF000
	429 Move X8, [X8+752]
	430 Move X0, [X8]
	431 Move X20, [X31+16]
	432 Move X19, [X31+24]
	433 Move X30, [X31+32]
	434 Return X0
	435 Move X0, 0xE94000
	436 Move X0, [X0+1320]
	437 Call 0x1C17D08
	438 Call 0x1C17F10
	439 Move X19, X0
	440 Move X0, 0xE97000
	441 Move X0, [X0+1416]
	442 Call 0x1C17D08
	443 Move X1, X0
	444 Move X0, X19
	445 Move X2, X31
	446 Call ArgumentNullException..ctor, X0, X1
	447 Move X0, 0xEBF000
	448 Move X0, [X0+2096]
	449 Call 0x1C17D08
	450 Move X1, X0
	451 Move X0, X19
	452 Call 0x1C17DEC

Method: System.Byte[] EncodeOID(System.String str)

Disassembly:
	0x03265FF4 CMP W17, W16
	0x03265FF8 B.CS 0x3266144
	0x03265FFC ADD X16, X21, 0x20
	0x03266000 ADD X0, X21, 0x20
	0x03266004 LDR W14, [X16, X14, LSL #2]
	0x03266008 LDR W15, [X0, X15, LSL #2]
	0x0326600C LDR W13, [X16, X13, LSL #2]
	0x03266010 LDR W16, [X0, X17, LSL #2]
	0x03266014 ADD W8, W8, 0x1
	0x03266018 ORR W14, W14, W24, 0x0
	0x0326601C ORR W15, W15, W23, 0x0
	0x03266020 CMP W10, W8
	0x03266024 ORR W24, W14, W13, 0x0
	0x03266028 ORR W23, W15, W16, 0x0
	0x0326602C ADD W9, W9, 0x40
	0x03266030 B.NE 0x3265F98
	0x03266034 TBZ X20, 0x0, 0x32660B4
	0x03266038 CBZ X19, 0x3266148
	0x0326603C LDR W8, [X19 + 0x18]
	0x03266040 CBZ W8, 0x3266144
	0x03266044 CMP W8, 0x1
	0x03266048 STRB W24, [X19 + 0x20]
	0x0326604C B.EQ 0x3266144
	0x03266050 UBFM W9, W24, 0x8, 0x1F
	0x03266054 CMP W8, 0x2
	0x03266058 STRB W9, [X19 + 0x21]
	0x0326605C B.LS 0x3266144
	0x03266060 UBFM W9, W24, 0x10, 0x1F
	0x03266064 CMP W8, 0x3
	0x03266068 STRB W9, [X19 + 0x22]
	0x0326606C B.EQ 0x3266144
	0x03266070 UBFM W9, W24, 0x18, 0x1F
	0x03266074 CMP W8, 0x4
	0x03266078 STRB W9, [X19 + 0x23]
	0x0326607C B.LS 0x3266144
	0x03266080 CMP W8, 0x5
	0x03266084 STRB W23, [X19 + 0x24]
	0x03266088 B.EQ 0x3266144
	0x0326608C UBFM W9, W23, 0x8, 0x1F
	0x03266090 CMP W8, 0x6
	0x03266094 STRB W9, [X19 + 0x25]
	0x03266098 B.LS 0x3266144
	0x0326609C UBFM W9, W23, 0x10, 0x1F
	0x032660A0 CMP W8, 0x7
	0x032660A4 STRB W9, [X19 + 0x26]
	0x032660A8 B.EQ 0x3266144
	0x032660AC UBFM W23, W23, 0x18, 0x1F
	0x032660B0 B 0x326612C
	0x032660B4 CBZ X19, 0x3266148
	0x032660B8 LDR W8, [X19 + 0x18]
	0x032660BC CBZ W8, 0x3266144
	0x032660C0 UBFM W9, W24, 0x18, 0x1F
	0x032660C4 CMP W8, 0x1
	0x032660C8 STRB W9, [X19 + 0x20]
	0x032660CC B.EQ 0x3266144
	0x032660D0 UBFM W9, W24, 0x10, 0x1F
	0x032660D4 CMP W8, 0x2
	0x032660D8 STRB W9, [X19 + 0x21]
	0x032660DC B.LS 0x3266144
	0x032660E0 UBFM W9, W24, 0x8, 0x1F
	0x032660E4 CMP W8, 0x3
	0x032660E8 STRB W9, [X19 + 0x22]
	0x032660EC B.EQ 0x3266144
	0x032660F0 CMP W8, 0x4
	0x032660F4 STRB W24, [X19 + 0x23]
	0x032660F8 B.LS 0x3266144
	0x032660FC UBFM W9, W23, 0x18, 0x1F
	0x03266100 CMP W8, 0x5
	0x03266104 STRB W9, [X19 + 0x24]
	0x03266108 B.EQ 0x3266144
	0x0326610C UBFM W9, W23, 0x10, 0x1F
	0x03266110 CMP W8, 0x6
	0x03266114 STRB W9, [X19 + 0x25]
	0x03266118 B.LS 0x3266144
	0x0326611C UBFM W9, W23, 0x8, 0x1F
	0x03266120 CMP W8, 0x7
	0x03266124 STRB W9, [X19 + 0x26]
	0x03266128 B.EQ 0x3266144
	0x0326612C STRB W23, [X19 + 0x27]
	0x03266130 LDP X20, X19, [X31 + 0x30]
	0x03266134 LDP X22, X21, [X31 + 0x20]
	0x03266138 LDP X24, X23, [X31 + 0x10]
	0x0326613C LDP X30, X25, [X31], #0x40
	0x03266140 RET
	0x03266144 BL 0x1C16F28
	0x03266148 BL 0x1C16F20
	0x0326614C STR X30, [X31 - 0x10]!
	0x03266150 CBZ X0, 0x32661C0
	0x03266154 LDR W8, [X0 + 0x18]
	0x03266158 CBZ W8, 0x32661BC
	0x0326615C CMP W8, 0x3
	0x03266160 B.LS 0x32661BC
	0x03266164 LDRB W9, [X0 + 0x20]
	0x03266168 LDRB W10, [X0 + 0x23]
	0x0326616C LDRB W11, [X0 + 0x21]
	0x03266170 LDRB W12, [X0 + 0x22]
	0x03266174 CMP W8, 0x4
	0x03266178 STRB W10, [X0 + 0x20]
	0x0326617C STRB W9, [X0 + 0x23]
	0x03266180 STRB W12, [X0 + 0x21]
	0x03266184 STRB W11, [X0 + 0x22]
	0x03266188 B.EQ 0x32661BC
	0x0326618C CMP W8, 0x7
	0x03266190 B.LS 0x32661BC
	0x03266194 LDRB W8, [X0 + 0x27]
	0x03266198 LDRB W9, [X0 + 0x24]
	0x0326619C LDRB W10, [X0 + 0x26]
	0x032661A0 LDRB W11, [X0 + 0x25]
	0x032661A4 STRB W8, [X0 + 0x24]
	0x032661A8 STRB W9, [X0 + 0x27]
	0x032661AC STRB W10, [X0 + 0x25]
	0x032661B0 STRB W11, [X0 + 0x26]
	0x032661B4 LDR X30, [X31], #0x10
	0x032661B8 RET
	0x032661BC BL 0x1C16F28
	0x032661C0 BL 0x1C16F20
	0x032661C4 STR X30, [X31 - 0x40]!
	0x032661C8 STP X24, X23, [X31 + 0x10]
	0x032661CC STP X22, X21, [X31 + 0x20]
	0x032661D0 STP X20, X19, [X31 + 0x30]
	0x032661D4 ADRP X22, 0x1176000
	0x032661D8 ADRP X24, 0xEBC000
	0x032661DC LDRB W8, [X22 + 0x566]
	0x032661E0 LDR X24, [X24 + 0xF78]
	0x032661E4 MOV X19, X2
	0x032661E8 MOV X21, X1
	0x032661EC MOV X20, X0
	0x032661F0 TBNZ X8, 0x0, 0x3266208
	0x032661F4 ADRP X0, 0xEBC000
	0x032661F8 LDR X0, [X0 + 0xF78]
	0x032661FC BL 0x1C16CF4
	0x03266200 MOVZ W8, 0x1
	0x03266204 STRB W8, [X22 + 0x566]
	0x03266208 LDR X0, [X24]
	0x0326620C LDR X22, [X20 + 0x68]
	0x03266210 LDR W8, [X0 + 0xE0]
	0x03266214 CBNZ W8, 0x3266220
	0x03266218 BL 0x1C16DFC
	0x0326621C LDR X0, [X24]
	0x03266220 LDR X8, [X0 + 0xB8]
	0x03266224 MOV X0, X21
	0x03266228 MOV W1, W31
	0x0326622C MOV X2, X22
	0x03266230 LDR W4, [X8 + 0xC]
	0x03266234 MOV W3, W31
	0x03266238 MOV X5, X31
	0x0326623C BL 0x33A8A9C
	0x03266240 LDR X8, [X20 + 0x68]
	0x03266244 CBZ X8, 0x3266548
	0x03266248 LDR W9, [X8 + 0x18]
	0x0326624C CBZ W9, 0x3266544
	0x03266250 CMP W9, 0x1
	0x03266254 B.EQ 0x3266544
	0x03266258 LDRB W9, [X20 + 0x18]
	0x0326625C LDP W22, W21, [X8 + 0x20]
	0x03266260 CBZ W9, 0x32663A0
	0x03266264 MOV X0, X20
	0x03266268 MOV W1, W21
	0x0326626C MOV W2, W31
	0x03266270 BL 0x3265C44
	0x03266274 EOR W22, W0, W22, 0x0
	0x03266278 MOVZ W2, 0x1
	0x0326627C MOV X0, X20
	0x03266280 MOV W1, W22
	0x03266284 BL 0x3265C44
	0x03266288 EOR W21, W0, W21, 0x0
	0x0326628C MOVZ W2, 0x2
	0x03266290 MOV X0, X20
	0x03266294 MOV W1, W21
	0x03266298 BL 0x3265C44
	0x0326629C EOR W22, W0, W22, 0x0
	0x032662A0 MOVZ W2, 0x3
	0x032662A4 MOV X0, X20
	0x032662A8 MOV W1, W22
	0x032662AC BL 0x3265C44
	0x032662B0 EOR W21, W0, W21, 0x0
	0x032662B4 MOVZ W2, 0x4
	0x032662B8 MOV X0, X20
	0x032662BC MOV W1, W21
	0x032662C0 BL 0x3265C44
	0x032662C4 EOR W22, W0, W22, 0x0
	0x032662C8 MOVZ W2, 0x5
	0x032662CC MOV X0, X20
	0x032662D0 MOV W1, W22
	0x032662D4 BL 0x3265C44
	0x032662D8 EOR W21, W0, W21, 0x0
	0x032662DC MOVZ W2, 0x6
	0x032662E0 MOV X0, X20
	0x032662E4 MOV W1, W21
	0x032662E8 BL 0x3265C44
	0x032662EC EOR W22, W0, W22, 0x0
	0x032662F0 MOVZ W2, 0x7
	0x032662F4 MOV X0, X20
	0x032662F8 MOV W1, W22
	0x032662FC BL 0x3265C44
	0x03266300 EOR W21, W0, W21, 0x0
	0x03266304 MOVZ W2, 0x8
	0x03266308 MOV X0, X20
	0x0326630C MOV W1, W21
	0x03266310 BL 0x3265C44
	0x03266314 EOR W22, W0, W22, 0x0
	0x03266318 MOVZ W2, 0x9
	0x0326631C MOV X0, X20
	0x03266320 MOV W1, W22
	0x03266324 BL 0x3265C44
	0x03266328 EOR W21, W0, W21, 0x0
	0x0326632C MOVZ W2, 0xA
	0x03266330 MOV X0, X20
	0x03266334 MOV W1, W21
	0x03266338 BL 0x3265C44
	0x0326633C EOR W22, W0, W22, 0x0
	0x03266340 MOVZ W2, 0xB
	0x03266344 MOV X0, X20
	0x03266348 MOV W1, W22
	0x0326634C BL 0x3265C44
	0x03266350 EOR W21, W0, W21, 0x0
	0x03266354 MOVZ W2, 0xC
	0x03266358 MOV X0, X20
	0x0326635C MOV W1, W21
	0x03266360 BL 0x3265C44
	0x03266364 EOR W23, W0, W22, 0x0
	0x03266368 MOVZ W2, 0xD
	0x0326636C MOV X0, X20
	0x03266370 MOV W1, W23
	0x03266374 BL 0x3265C44
	0x03266378 EOR W22, W0, W21, 0x0
	0x0326637C MOVZ W2, 0xE
	0x03266380 MOV X0, X20
	0x03266384 MOV W1, W22
	0x03266388 BL 0x3265C44
	0x0326638C EOR W21, W0, W23, 0x0
	0x03266390 MOVZ W2, 0xF
	0x03266394 MOV X0, X20
	0x03266398 MOV W1, W21
	0x0326639C B 0x32664D8
	0x032663A0 MOVZ W2, 0xF
	0x032663A4 MOV X0, X20
	0x032663A8 MOV W1, W21
	0x032663AC BL 0x3265C44
	0x032663B0 EOR W22, W0, W22, 0x0
	0x032663B4 MOVZ W2, 0xE
	0x032663B8 MOV X0, X20
	0x032663BC MOV W1, W22
	0x032663C0 BL 0x3265C44
	0x032663C4 EOR W21, W0, W21, 0x0
	0x032663C8 MOVZ W2, 0xD
	0x032663CC MOV X0, X20
	0x032663D0 MOV W1, W21
	0x032663D4 BL 0x3265C44
	0x032663D8 EOR W22, W0, W22, 0x0
	0x032663DC MOVZ W2, 0xC
	0x032663E0 MOV X0, X20
	0x032663E4 MOV W1, W22
	0x032663E8 BL 0x3265C44
	0x032663EC EOR W21, W0, W21, 0x0
	0x032663F0 MOVZ W2, 0xB

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x1177000
	011 Move W8, [X20+1375]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0xE8E000
	018 Move X0, [X0+1560]
	019 Call 0x1C17CF4
	020 Move X0, 0xE97000
	021 Move X0, [X0+2264]
	022 Call 0x1C17CF4
	023 Move X0, 0xE97000
	024 Move X0, [X0+2536]
	025 Call 0x1C17CF4
	026 Move X0, 0xEBB000
	027 Move X0, [X0+3032]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+1375], W8
	031 Compare X19, 0
	032 JumpIfEqual {191}
	033 Move X8, 0xE97000
	034 Move X8, [X8+2264]
	035 Move W1, 1
	036 Move X0, [X8]
	037 Call 0x1C17D6C
	038 Compare X0, 0
	039 JumpIfEqual {190}
	040 Move W8, [X0+24]
	041 Move X1, X0
	042 Compare W8, 0
	043 JumpIfEqual {189}
	044 Move W8, 46
	045 Move X0, X19
	046 Move X2, X31
	047 NotImplemented "Instruction STRH not yet implemented."
	048 Call String.Split, X0, X1
	049 Compare X0, 0
	050 JumpIfEqual {190}
	051 Move W8, [X0+24]
	052 Move X20, X0
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X24, 0xE8E000
	055 Move X24, [X24+1560]
	056 Move W1, [X19+16]
	057 Move X0, [X24]
	058 Call 0x1C17D6C
	059 Move W8, [X20+24]
	060 Compare W8, 0
	061 JumpIfEqual {211}
	062 Move X23, 0xE97000
	063 Move X23, [X23+2536]
	064 Move X19, X0
	065 Move X21, [X20+32]
	066 Move X0, [X23]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 Move X0, X21
	072 Move X1, X31
	073 Call Convert.ToByte, X0
	074 Move W8, [X20+24]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move W21, W0
	077 Move X0, [X20+40]
	078 Move X1, X31
	079 Call Convert.ToByte, X0
	080 And W8, W21, 255
	081 Move W9, 40
	082 Multiply W8, W8, W9
	083 Add W0, W8, W0
	084 Move X1, X31
	085 Call Convert.ToByte, X0
	086 Compare X19, 0
	087 JumpIfEqual {213}
	088 Move W8, [X19+24]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move [X19+34], W0
	091 Move X8, [X20+24]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move X26, 0xEBB000
	094 Move X26, [X26+3032]
	095 And X8, X8, 0
	096 Move W21, 3
	097 Move W25, 6
	098 Subtract X9, X25, 4
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X0, [X23]
	101 Move X22, [X20]
	102 Move W8, [X0+224]
	103 Compare W8, 0
	104 JumpIfNotEqual {106}
	105 Call 0x1C17DFC
	106 Move X0, X22
	107 Move X1, X31
	108 Call Convert.ToInt64, X0
	109 Move X22, X0
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move X0, [X23]
	112 Move W8, [X0+224]
	113 Compare W8, 0
	114 JumpIfNotEqual {116}
	115 Call 0x1C17DFC
	116 Move X0, X22
	117 Move X1, X31
	118 Call Convert.ToByte, X0
	119 Move W8, [X19+24]
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Add X8, X19, W21
	122 Add W21, W21, 1
	123 Move [X8+32], W0
	124 Move X0, [X26]
	125 Move W8, [X0+224]
	126 Compare W8, 0
	127 JumpIfNotEqual {129}
	128 Call 0x1C17DFC
	129 Move X0, X22
	130 Call CryptoConfig.EncodeLongNumber, X0
	131 Compare X0, 0
	132 JumpIfEqual {190}
	133 Move W4, [X0+24]
	134 Move W1, W31
	135 Move X2, X19
	136 Move W3, W21
	137 Move X5, X31
	138 Move X22, X0
	139 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	140 Move W8, [X22+24]
	141 Add W21, W21, W8
	142 Move W8, [X20+24]
	143 Subtract X9, X25, 3
	144 Add X25, X25, 1
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move W21, 3
	147 Move X0, [X24]
	148 Move W1, W21
	149 Call 0x1C17D6C
	150 Compare X0, 0
	151 JumpIfEqual {190}
	152 Move W8, [X0+24]
	153 Move X20, X0
	154 Compare W8, 0
	155 JumpIfEqual {189}
	156 Move W8, 6
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Move [X20+32], W8
	159 Move X0, [X23]
	160 Move W8, [X0+224]
	161 Compare W8, 0
	162 JumpIfNotEqual {164}
	163 Call 0x1C17DFC
	164 Subtract W21, W21, 2
	165 Move W0, W21
	166 Move X1, X31
	167 Call Convert.ToByte, X0
	168 Move W8, [X20+24]
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Move [X20+33], W0
	171 Move W1, 2
	172 Move W3, 2
	173 Move X0, X19
	174 Move X2, X20
	175 Move W4, W21
	176 Move X5, X31
	177 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	178 Move X0, X20
	179 Move X20, [X31+64]
	180 Move X19, [X31+72]
	181 Move X22, [X31+48]
	182 Move X21, [X31+56]
	183 Move X24, [X31+32]
	184 Move X23, [X31+40]
	185 Move X26, [X31+16]
	186 Move X25, [X31+24]
	187 Move X30, [X31+80]
	188 Return X0
	189 Call 0x1C17F28
	190 Call 0x1C17F20
	191 Move X0, 0xE93000
	192 Move X0, [X0+1320]
	193 Call 0x1C17D08
	194 Call 0x1C17F10
	195 Move X19, X0
	196 Move X0, 0xE90000
	197 Move X0, [X0+3200]
	198 Call 0x1C17D08
	199 Move X1, X0
	200 Move X0, X19
	201 Move X2, X31
	202 Call ArgumentNullException..ctor, X0, X1
	203 Move X0, 0xEBE000
	204 Move X0, [X0+2104]
	205 Call 0x1C17D08
	206 Move X1, X0
	207 Move X0, X19
	208 Call 0x1C17DEC
	209 Move X0, 0xEBE000
	210 Move X0, [X0+2112]
	211 Call 0x1C17F28
	212 Call 0x1C17F28
	213 Call 0x1C17F20
	214 Call 0x1C17F28
	215 Move X0, 0xEBE000
	216 Move X0, [X0+2120]
	217 Move X19, X0
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Move X0, X19
	220 Call 0x3EB2AD0
	221 Move X19, X0
	222 Move X0, 0xE94000
	223 Move X0, [X0+3264]
	224 Call 0x1C17D08
	225 Move X8, [X19]
	226 Move X1, [X8]
	227 Call 0x1C18270
	228 Move TEMP, X0
	229 And TEMP, TEMP, 1
	230 Compare TEMP, 1
	231 JumpIfNotEqual {253}
	232 Call 0x3EB2AE0
	233 Move X0, 0xEBE000
	234 Move X0, [X0+2128]
	235 Call 0x1C17D08
	236 Move X1, X31
	237 Call Locale.GetText, X0
	238 Move X19, X0
	239 Move X0, 0xEBD000
	240 Move X0, [X0+3768]
	241 Call 0x1C17D08
	242 Call 0x1C17F10
	243 Move X1, X19
	244 Move X2, X31
	245 Move X20, X0
	246 Call CryptographicUnexpectedOperationException..ctor, X0, X1
	247 Move X0, 0xEBE000
	248 Move X0, [X0+2104]
	249 Call 0x1C17D08
	250 Move X1, X0
	251 Move X0, X20
	252 Call 0x1C17DEC
	253 Move W0, 8
	254 Call 0x3EB2AF0
	255 Move X8, [X19]
	256 Move [X0], X8
	257 Move X1, 0xC4F000
	258 Add X1, X1, 3672
	259 Move X2, X31
	260 Call 0x3EB2B00
	261 Move X19, X0
	262 Call 0x3EB2AE0
	263 Move X0, X19
	264 Call 0x1D2D690
	265 Call 0x1991590

Method: System.Byte[] EncodeLongNumber(System.Int64 x)

Disassembly:
	0x032663F4 MOV X0, X20
	0x032663F8 MOV W1, W21
	0x032663FC BL 0x3265C44
	0x03266400 EOR W22, W0, W22, 0x0
	0x03266404 MOVZ W2, 0xA
	0x03266408 MOV X0, X20
	0x0326640C MOV W1, W22
	0x03266410 BL 0x3265C44
	0x03266414 EOR W21, W0, W21, 0x0
	0x03266418 MOVZ W2, 0x9
	0x0326641C MOV X0, X20
	0x03266420 MOV W1, W21
	0x03266424 BL 0x3265C44
	0x03266428 EOR W22, W0, W22, 0x0
	0x0326642C MOVZ W2, 0x8
	0x03266430 MOV X0, X20
	0x03266434 MOV W1, W22
	0x03266438 BL 0x3265C44
	0x0326643C EOR W21, W0, W21, 0x0
	0x03266440 MOVZ W2, 0x7
	0x03266444 MOV X0, X20
	0x03266448 MOV W1, W21
	0x0326644C BL 0x3265C44
	0x03266450 EOR W22, W0, W22, 0x0
	0x03266454 MOVZ W2, 0x6
	0x03266458 MOV X0, X20
	0x0326645C MOV W1, W22
	0x03266460 BL 0x3265C44
	0x03266464 EOR W21, W0, W21, 0x0
	0x03266468 MOVZ W2, 0x5
	0x0326646C MOV X0, X20
	0x03266470 MOV W1, W21
	0x03266474 BL 0x3265C44
	0x03266478 EOR W22, W0, W22, 0x0
	0x0326647C MOVZ W2, 0x4
	0x03266480 MOV X0, X20
	0x03266484 MOV W1, W22
	0x03266488 BL 0x3265C44
	0x0326648C EOR W21, W0, W21, 0x0
	0x03266490 MOVZ W2, 0x3
	0x03266494 MOV X0, X20
	0x03266498 MOV W1, W21
	0x0326649C BL 0x3265C44
	0x032664A0 EOR W23, W0, W22, 0x0
	0x032664A4 MOVZ W2, 0x2
	0x032664A8 MOV X0, X20
	0x032664AC MOV W1, W23
	0x032664B0 BL 0x3265C44
	0x032664B4 EOR W22, W0, W21, 0x0
	0x032664B8 MOVZ W2, 0x1
	0x032664BC MOV X0, X20
	0x032664C0 MOV W1, W22
	0x032664C4 BL 0x3265C44
	0x032664C8 EOR W21, W0, W23, 0x0
	0x032664CC MOV X0, X20
	0x032664D0 MOV W1, W21
	0x032664D4 MOV W2, W31
	0x032664D8 BL 0x3265C44
	0x032664DC LDR X20, [X20 + 0x68]
	0x032664E0 CBZ X20, 0x3266548
	0x032664E4 LDR W8, [X20 + 0x18]
	0x032664E8 CBZ W8, 0x3266544
	0x032664EC EOR W9, W0, W22, 0x0
	0x032664F0 CMP W8, 0x1
	0x032664F4 STR W9, [X20 + 0x20]
	0x032664F8 B.EQ 0x3266544
	0x032664FC STR W21, [X20 + 0x24]
	0x03266500 LDR X0, [X24]
	0x03266504 LDR W8, [X0 + 0xE0]
	0x03266508 CBNZ W8, 0x3266514
	0x0326650C BL 0x1C16DFC
	0x03266510 LDR X0, [X24]
	0x03266514 LDR X8, [X0 + 0xB8]
	0x03266518 MOV X0, X20
	0x0326651C MOV X2, X19
	0x03266520 LDP X20, X19, [X31 + 0x30]
	0x03266524 LDR W4, [X8 + 0xC]
	0x03266528 LDP X22, X21, [X31 + 0x20]
	0x0326652C LDP X24, X23, [X31 + 0x10]
	0x03266530 MOV W1, W31
	0x03266534 MOV W3, W31
	0x03266538 MOV X5, X31
	0x0326653C LDR X30, [X31], #0x40
	0x03266540 B 0x33A8A9C
	0x03266544 BL 0x1C16F28
	0x03266548 BL 0x1C16F20
	0x0326654C STP X30, X23, [X31 - 0x30]!
	0x03266550 STP X22, X21, [X31 + 0x10]
	0x03266554 STP X20, X19, [X31 + 0x20]
	0x03266558 ADRP X23, 0x1176000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x1177000
	010 Move W8, [X20+1376]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xE8E000
	017 Move X0, [X0+1560]
	018 Call 0x1C17CF4
	019 Move X0, 0xE97000
	020 Move X0, [X0+2536]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+1376], W8
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X8, 0xE8E000
	026 Move X8, [X8+1560]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move W21, 1
	029 Move X9, X19
	030 Move X10, X9
	031 ShiftRight X10, 14
	032 And X10, X10, 0x7FFFFFFF
	033 Move X9, X9
	034 ShiftRight X9, 7
	035 And X9, X9, 0x7FFFFFFF
	036 Add W21, W21, 1
	037 Compare X10, 0
	038 JumpIfNotEqual {30}
	039 Move X0, [X8]
	040 Move X22, 0xE97000
	041 Move X22, [X22+2536]
	042 Move W1, W21
	043 Call 0x1C17D6C
	044 Move W8, W21
	045 Move X8, X8
	046 ShiftRight X8, 61
	047 And X8, X8, 0xFFFFFFF
	048 Move X20, X0
	049 Move X23, X31
	050 Subtract W24, W21, 1
	051 Subtract X25, X8, W21
	052 Move X0, [X22]
	053 NotImplemented "Instruction ASRV not yet implemented."
	054 Move W11, 128
	055 And X9, X8, 127
	056 Move W10, [X0+224]
	057 NotImplemented "Instruction BFM not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 NotImplemented "Instruction CSEL not yet implemented."
	060 Compare W10, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X0, X21
	064 Move X1, X31
	065 Call Convert.ToByte, X0
	066 Compare X20, 0
	067 JumpIfEqual {85}
	068 Move W8, [X20+24]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Add X23, X23, 7
	071 Add X8, X20, W24
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Subtract W24, W24, 1
	074 Move [X8+32], W0
	075 Move X0, X20
	076 Move X20, [X31+48]
	077 Move X19, [X31+56]
	078 Move X22, [X31+32]
	079 Move X21, [X31+40]
	080 Move X24, [X31+16]
	081 Move X23, [X31+24]
	082 Move X30, [X31+64]
	083 Move X25, [X31+72]
	084 Return X0
	085 Call 0x1C17F20
	086 Call 0x1C17F28
	087 Move X0, 0xEBE000
	088 Move X0, [X0+2136]
	089 Call 0x1C17D08
	090 Move X1, X31
	091 Call Locale.GetText, X0
	092 Move X19, X0
	093 Move X0, 0xE8E000
	094 Move X0, [X0+2136]
	095 Call 0x1C17D08
	096 Call 0x1C17F10
	097 Move X1, X19
	098 Move X2, X31
	099 Move X20, X0
	100 Call OverflowException..ctor, X0, X1
	101 Move X0, 0xEBE000
	102 Move X0, [X0+2144]
	103 Call 0x1C17D08
	104 Move X1, X0
	105 Move X0, X20
	106 Call 0x1C17DEC

Method: System.Boolean get_AllowOnlyFipsAlgorithms()

Disassembly:
	0x0326054C LDP X24, X23, [X31 + 0x10]
	0x03260550 STP X9, X8, [X20 + 0x20]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Void .cctor()

Disassembly:
	0x0326655C ADRP X22, 0xEBC000
	0x03266560 LDRB W8, [X23 + 0x567]
	0x03266564 LDR X22, [X22 + 0xF78]
	0x03266568 MOV X19, X2
	0x0326656C MOV X21, X1
	0x03266570 MOV X20, X0
	0x03266574 TBNZ X8, 0x0, 0x326658C
	0x03266578 ADRP X0, 0xEBC000
	0x0326657C LDR X0, [X0 + 0xF78]
	0x03266580 BL 0x1C16CF4
	0x03266584 MOVZ W8, 0x1
	0x03266588 STRB W8, [X23 + 0x567]
	0x0326658C LDR X0, [X22]
	0x03266590 LDR W8, [X0 + 0xE0]
	0x03266594 CBNZ W8, 0x32665A0
	0x03266598 BL 0x1C16DFC
	0x0326659C LDR X0, [X22]
	0x032665A0 LDR X8, [X0 + 0xB8]
	0x032665A4 MOV X0, X21
	0x032665A8 MOV X1, X19
	0x032665AC MOV W3, W31
	0x032665B0 LDR X2, [X8 + 0x30]
	0x032665B4 BL 0x3265E74
	0x032665B8 LDR X2, [X20 + 0x60]
	0x032665BC MOV X0, X20
	0x032665C0 MOV X1, X19
	0x032665C4 BL 0x32661C4
	0x032665C8 LDR X8, [X22]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x1177000
	006 Move X21, 0xE94000
	007 Move X20, 0xEBB000
	008 Move W8, [X19+1377]
	009 Move X21, [X21+3264]
	010 Move X20, [X20+3032]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xEBB000
	016 Move X0, [X0+3032]
	017 Call 0x1C17CF4
	018 Move X0, 0xE94000
	019 Move X0, [X0+3264]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+1377], W8
	023 Move X0, [X21]
	024 Call 0x1C17F10
	025 Move X1, X31
	026 Move X19, X0
	027 Call Object..ctor, X0
	028 Move X8, [X20]
	029 Move X8, [X8+184]
	030 Move [X8], X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 

