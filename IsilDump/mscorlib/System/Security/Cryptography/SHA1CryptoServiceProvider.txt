Type: System.Security.Cryptography.SHA1CryptoServiceProvider

Method: System.Void .ctor()

Disassembly:
	0x032657C0 MOV X1, X19
	0x032657C4 MOV X2, X31
	0x032657C8 MOV X20, X0
	0x032657CC BL 0x3252170
	0x032657D0 ADRP X0, 0xEBE000
	0x032657D4 LDR X0, [X0 + 0x870]
	0x032657D8 BL 0x1C16D08
	0x032657DC MOV X1, X0
	0x032657E0 MOV X0, X20
	0x032657E4 BL 0x1C16DEC
	0x032657E8 BL 0x1C16F20
	0x032657EC STP X30, X21, [X31 - 0x20]!
	0x032657F0 STP X20, X19, [X31 + 0x10]
	0x032657F4 ADRP X19, 0x1177000
	0x032657F8 ADRP X20, 0xEBD000
	0x032657FC LDRB W8, [X19 + 0x568]
	0x03265800 LDR X20, [X20 + 0xF78]
	0x03265804 TBNZ X8, 0x0, 0x3265828
	0x03265808 ADRP X0, 0xEBD000
	0x0326580C LDR X0, [X0 + 0xF78]
	0x03265810 BL 0x1C16CF4
	0x03265814 ADRP X0, 0xEBC000
	0x03265818 LDR X0, [X0 + 0x320]
	0x0326581C BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1178000
	006 Move X20, 0xEBF000
	007 Move W8, [X21+1403]
	008 Move X20, [X20+2040]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xEBF000
	015 Move X0, [X0+2040]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1403], W8
	019 Move X0, X19
	020 Move X1, X31
	021 Call SHA1..ctor, X0
	022 Move X0, [X20]
	023 Call 0x1C17F10
	024 Move X20, X0
	025 Call SHA1Internal..ctor, X0
	026 Move [X19+40], X20
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return 

Method: System.Void Finalize()

Disassembly:
	0x0326B910 STR X30, [X31 - 0x20]!
	0x0326B914 STP X20, X19, [X31 + 0x10]
	0x0326B918 LDR X20, [X0 + 0x18]
	0x0326B91C MOV X19, X0
	0x0326B920 BL 0x1C16D44
	0x0326B924 CBNZ X20, 0x326B948
	0x0326B928 LDR X0, [X19 + 0x10]
	0x0326B92C CBZ X0, 0x326B958
	0x0326B930 LDR X8, [X0]
	0x0326B934 LDP X9, X1, [X8 + 0x1F8]
	0x0326B938 BLR X9
	0x0326B93C MOV X20, X0
	0x0326B940 BL 0x1C16D44
	0x0326B944 STR X20, [X19 + 0x18]
	0x0326B948 MOV X0, X20
	0x0326B94C LDP X20, X19, [X31 + 0x10]
	0x0326B950 LDR X30, [X31], #0x20
	0x0326B954 RET
	0x0326B958 BL 0x1C16F20
	0x0326B95C STP X30, X19, [X31 - 0x10]!
	0x0326B960 MOV X19, X0
	0x0326B964 LDR X0, [X0 + 0x10]
	0x0326B968 BL 0x326C1D8
	0x0326B96C MOV X0, X19
	0x0326B970 BL 0x326B910
	0x0326B974 MOV X1, X31
	0x0326B978 LDP X30, X19, [X31], #0x10
	0x0326B97C B 0x32256C4
	0x0326B980 STP X30, X19, [X31 - 0x10]!
	0x0326B984 MOV X19, X0
	0x0326B988 LDR X0, [X0 + 0x10]
	0x0326B98C BL 0x326C1D8
	0x0326B990 LDR X0, [X19 + 0x10]
	0x0326B994 CBZ X0, 0x326B9B0
	0x0326B998 LDR X8, [X0]
	0x0326B99C LDP X9, X1, [X8 + 0x1C8]
	0x0326B9A0 BLR X9
	0x0326B9A4 MOV X1, X31
	0x0326B9A8 LDP X30, X19, [X31], #0x10
	0x0326B9AC B 0x3225544

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X0]
	006 Move X19, X0
	007 Move X9, [X8+504]
	008 Move X2, [X8+512]
	009 Move W1, W31
	010 NotImplemented "Instruction BLR not yet implemented."
	011 Move X0, X19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X1, X31
	015 Move X30, [X31+32]
	016 Move X21, [X31+40]
	017 Call Object.Finalize, X0
	018 Return 
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X21, X0
	021 Move X0, X21
	022 Call 0x3EB2AD0
	023 Move X20, [X0]
	024 Call 0x3EB2AE0
	025 Move X0, X19
	026 Move X1, X31
	027 Call Object.Finalize, X0
	028 Compare X20, 0
	029 JumpIfNotEqual {36}
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return 
	035 Move X20, X31
	036 Move X0, X20
	037 Call 0x1C17F18
	038 Move X21, X0
	039 Move X0, X19
	040 Move X1, X31
	041 Call Object.Finalize, X0
	042 Compare X20, 0
	043 JumpIfNotEqual {46}
	044 Move X0, X21
	045 Call 0x1D2D690
	046 Move X0, X20
	047 Call 0x1C17F18
	048 Call 0x1991590

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x0326B9B0 BL 0x1C16F20
	0x0326B9B4 STR X30, [X31 - 0x10]!
	0x0326B9B8 LDR X8, [X0 + 0x10]

ISIL:
	001 And W1, W1, 1
	002 Move X2, X31
	003 Call HashAlgorithm.Dispose, X0, X1
	004 Return 

Method: System.Void HashCore(System.Byte[] rgb, System.Int32 ibStart, System.Int32 cbSize)

Disassembly:
	0x0326B9BC CBZ X8, 0x326BA10
	0x0326B9C0 BL 0x326B910
	0x0326B9C4 CBZ X0, 0x326BA20
	0x0326B9C8 LDR W8, [X0 + 0x18]
	0x0326B9CC UBFM X9, X8, 0x20, 0x1F
	0x0326B9D0 SXTW X10, W8
	0x0326B9D4 BIC X9, X10, X9, 0x3F
	0x0326B9D8 CMP X9, 0x4
	0x0326B9DC MOVZ W10, 0x4

ISIL:
	001 Move [X31-16], X30
	002 Move X8, X0
	003 Move X0, [X0+40]
	004 Move W9, 1
	005 Move [X8+32], W9
	006 Compare X0, 0
	007 JumpIfEqual {11}
	008 Move X30, [X31+16]
	009 Call SHA1Internal.HashCore, X0, X1, X2, X3
	010 Return 
	011 Call 0x1C17F20

Method: System.Byte[] HashFinal()

Disassembly:
	0x0326B9E0 CSEL X9, X9, X10, CC
	0x0326B9E4 CBZ X9, 0x326BA10
	0x0326B9E8 MOV W11, W31
	0x0326B9EC ADD X10, X0, 0x20
	0x0326B9F0 CBZ X8, 0x326BA1C
	0x0326B9F4 LDRB W0, [X10], #0x1
	0x0326B9F8 SUB X9, X9, 0x1
	0x0326B9FC SUB X8, X8, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move X8, X0
	003 Move X0, [X0+40]
	004 Move [X8+32], W31
	005 Compare X0, 0
	006 JumpIfEqual {10}
	007 Move X30, [X31+16]
	008 Call SHA1Internal.HashFinal, X0
	009 Return X0
	010 Call 0x1C17F20

Method: System.Void Initialize()

Disassembly:
	0x0326BA00 BFM W0, W11, 0x18, 0x17
	0x0326BA04 MOV W11, W0
	0x0326BA08 CBNZ X9, 0x326B9F0
	0x0326BA0C B 0x326BA14
	0x0326BA10 MOV W0, W31
	0x0326BA14 LDR X30, [X31], #0x10

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+40]
	003 Compare X0, 0
	004 JumpIfEqual {8}
	005 Move X30, [X31+16]
	006 Call SHA1Internal.Initialize, X0
	007 Return 
	008 Call 0x1C17F20

