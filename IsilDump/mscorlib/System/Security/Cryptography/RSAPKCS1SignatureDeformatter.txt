Type: System.Security.Cryptography.RSAPKCS1SignatureDeformatter

Method: System.Void .ctor()

Disassembly:
	0x032657B0 ADRP X0, 0xEBB000
	0x032657B4 LDR X0, [X0 + 0xCE0]

ISIL:
	001 Move X1, X31
	002 Call AsymmetricSignatureDeformatter..ctor, X0
	003 Return 

Method: System.Void .ctor(System.Security.Cryptography.AsymmetricAlgorithm key)

Disassembly:
	0x0326A368 CMP W10, W8
	0x0326A36C B.CS 0x326A694
	0x0326A370 ADD W11, W2, 0x23
	0x0326A374 CMP W11, W8
	0x0326A378 B.CS 0x326A694
	0x0326A37C CMP W9, 0x8
	0x0326A380 B.LS 0x326A694
	0x0326A384 ADD X14, X1, W12, SXTW
	0x0326A388 ADD X13, X1, W13, SXTW
	0x0326A38C LDRB W14, [X14 + 0x20]
	0x0326A390 ADD X15, X1, 0x20
	0x0326A394 LDRB W13, [X13 + 0x20]
	0x0326A398 LDRB W10, [X15, W10, SXTW]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call AsymmetricSignatureDeformatter..ctor, X0
	008 Move X8, [X20]
	009 Move X0, X20
	010 Move X1, X19
	011 Move X20, [X31+16]
	012 Move X19, [X31+24]
	013 Move X3, [X8+376]
	014 Move X2, [X8+384]
	015 Move X30, [X31+32]
	016 CallNoReturn X3

Method: System.Void SetHashAlgorithm(System.String strName)

Disassembly:
	0x0326A39C LDRB W11, [X15, W11, SXTW]
	0x0326A3A0 UBFM W14, W14, 0x8, 0x7
	0x0326A3A4 BFM W14, W13, 0x10, 0x7
	0x0326A3A8 ADD W12, W2, 0x24
	0x0326A3AC BFM W14, W10, 0x18, 0x7
	0x0326A3B0 ORR W10, W14, W11, 0x0
	0x0326A3B4 CMP W12, W8
	0x0326A3B8 STR W10, [X0 + 0x40]
	0x0326A3BC B.CS 0x326A694
	0x0326A3C0 ADD W13, W2, 0x25
	0x0326A3C4 CMP W13, W8
	0x0326A3C8 B.CS 0x326A694
	0x0326A3CC ADD W10, W2, 0x26
	0x0326A3D0 CMP W10, W8
	0x0326A3D4 B.CS 0x326A694
	0x0326A3D8 ADD W11, W2, 0x27
	0x0326A3DC CMP W11, W8
	0x0326A3E0 B.CS 0x326A694
	0x0326A3E4 CMP W9, 0x9
	0x0326A3E8 B.LS 0x326A694
	0x0326A3EC ADD X14, X1, W12, SXTW
	0x0326A3F0 ADD X13, X1, W13, SXTW
	0x0326A3F4 LDRB W14, [X14 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X1, 0
	004 JumpIfEqual {9}
	005 Move [X0+24], X1
	006 Move X30, [X31+16]
	007 Move X19, [X31+24]
	008 Return 
	009 Move X0, 0xE8F000
	010 Move X0, [X0+1320]
	011 Call 0x1C17D08
	012 Call 0x1C17F10
	013 Move X19, X0
	014 Move X0, 0xEBA000
	015 Move X0, [X0+2312]
	016 Call 0x1C17D08
	017 Move X1, X0
	018 Move X0, X19
	019 Move X2, X31
	020 Call ArgumentNullException..ctor, X0, X1
	021 Move X0, 0xEBA000
	022 Move X0, [X0+2320]
	023 Call 0x1C17D08
	024 Move X1, X0
	025 Move X0, X19
	026 Call 0x1C17DEC

Method: System.Void SetKey(System.Security.Cryptography.AsymmetricAlgorithm key)

Disassembly:
	0x0326A3F8 ADD X15, X1, 0x20
	0x0326A3FC LDRB W13, [X13 + 0x20]
	0x0326A400 LDRB W10, [X15, W10, SXTW]
	0x0326A404 LDRB W11, [X15, W11, SXTW]
	0x0326A408 UBFM W14, W14, 0x8, 0x7
	0x0326A40C BFM W14, W13, 0x10, 0x7
	0x0326A410 ADD W12, W2, 0x28
	0x0326A414 BFM W14, W10, 0x18, 0x7
	0x0326A418 ORR W10, W14, W11, 0x0
	0x0326A41C CMP W12, W8
	0x0326A420 STR W10, [X0 + 0x44]
	0x0326A424 B.CS 0x326A694
	0x0326A428 ADD W13, W2, 0x29
	0x0326A42C CMP W13, W8
	0x0326A430 B.CS 0x326A694
	0x0326A434 ADD W10, W2, 0x2A
	0x0326A438 CMP W10, W8
	0x0326A43C B.CS 0x326A694
	0x0326A440 ADD W11, W2, 0x2B
	0x0326A444 CMP W11, W8
	0x0326A448 B.CS 0x326A694
	0x0326A44C CMP W9, 0xA
	0x0326A450 B.LS 0x326A694
	0x0326A454 ADD X14, X1, W12, SXTW
	0x0326A458 ADD X13, X1, W13, SXTW
	0x0326A45C LDRB W14, [X14 + 0x20]
	0x0326A460 ADD X15, X1, 0x20
	0x0326A464 LDRB W13, [X13 + 0x20]
	0x0326A468 LDRB W10, [X15, W10, SXTW]
	0x0326A46C LDRB W11, [X15, W11, SXTW]
	0x0326A470 UBFM W14, W14, 0x8, 0x7
	0x0326A474 BFM W14, W13, 0x10, 0x7
	0x0326A478 ADD W12, W2, 0x2C
	0x0326A47C BFM W14, W10, 0x18, 0x7
	0x0326A480 ORR W10, W14, W11, 0x0
	0x0326A484 CMP W12, W8
	0x0326A488 STR W10, [X0 + 0x48]
	0x0326A48C B.CS 0x326A694
	0x0326A490 ADD W13, W2, 0x2D
	0x0326A494 CMP W13, W8
	0x0326A498 B.CS 0x326A694
	0x0326A49C ADD W10, W2, 0x2E
	0x0326A4A0 CMP W10, W8
	0x0326A4A4 B.CS 0x326A694
	0x0326A4A8 ADD W11, W2, 0x2F
	0x0326A4AC CMP W11, W8
	0x0326A4B0 B.CS 0x326A694
	0x0326A4B4 CMP W9, 0xB
	0x0326A4B8 B.LS 0x326A694
	0x0326A4BC ADD X14, X1, W12, SXTW
	0x0326A4C0 ADD X13, X1, W13, SXTW
	0x0326A4C4 LDRB W14, [X14 + 0x20]
	0x0326A4C8 ADD X15, X1, 0x20
	0x0326A4CC LDRB W13, [X13 + 0x20]
	0x0326A4D0 LDRB W10, [X15, W10, SXTW]
	0x0326A4D4 LDRB W11, [X15, W11, SXTW]
	0x0326A4D8 UBFM W14, W14, 0x8, 0x7
	0x0326A4DC BFM W14, W13, 0x10, 0x7

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1173000
	006 Move W8, [X21+1398]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xEB8000
	014 Move X0, [X0+352]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1398], W8
	018 Compare X19, 0
	019 JumpIfEqual {45}
	020 Move X8, 0xEB8000
	021 Move X8, [X8+352]
	022 Move X9, [X19]
	023 Move X1, [X8]
	024 Move W10, [X9+304]
	025 Move W8, [X1+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X10, [X9+200]
	028 Subtract X9, X8, 1
	029 Move X10, [X10]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move [X20+16], X19
	032 Move X10, [X19]
	033 Move W11, [X10+304]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X8, [X10+200]
	036 Move X8, [X8]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Return 
	043 Move X0, X19
	044 Call 0x1C181E0
	045 Move X0, 0xE8F000
	046 Move X0, [X0+1320]
	047 Call 0x1C17D08
	048 Call 0x1C17F10
	049 Move X19, X0
	050 Move X0, 0xEB4000
	051 Move X0, [X0+112]
	052 Call 0x1C17D08
	053 Move X1, X0
	054 Move X0, X19
	055 Move X2, X31
	056 Call ArgumentNullException..ctor, X0, X1
	057 Move X0, 0xEBA000
	058 Move X0, [X0+2328]
	059 Call 0x1C17D08
	060 Move X1, X0
	061 Move X0, X19
	062 Call 0x1C17DEC

Method: System.Boolean VerifySignature(System.Byte[] rgbHash, System.Byte[] rgbSignature)

Disassembly:
	0x0326A4E0 ADD W12, W2, 0x30
	0x0326A4E4 BFM W14, W10, 0x18, 0x7
	0x0326A4E8 ORR W10, W14, W11, 0x0
	0x0326A4EC CMP W12, W8
	0x0326A4F0 STR W10, [X0 + 0x4C]
	0x0326A4F4 B.CS 0x326A694
	0x0326A4F8 ADD W13, W2, 0x31
	0x0326A4FC CMP W13, W8
	0x0326A500 B.CS 0x326A694
	0x0326A504 ADD W10, W2, 0x32
	0x0326A508 CMP W10, W8
	0x0326A50C B.CS 0x326A694
	0x0326A510 ADD W11, W2, 0x33
	0x0326A514 CMP W11, W8
	0x0326A518 B.CS 0x326A694
	0x0326A51C CMP W9, 0xC
	0x0326A520 B.LS 0x326A694
	0x0326A524 ADD X14, X1, W12, SXTW
	0x0326A528 ADD X13, X1, W13, SXTW
	0x0326A52C LDRB W14, [X14 + 0x20]
	0x0326A530 ADD X15, X1, 0x20
	0x0326A534 LDRB W13, [X13 + 0x20]
	0x0326A538 LDRB W10, [X15, W10, SXTW]
	0x0326A53C LDRB W11, [X15, W11, SXTW]
	0x0326A540 UBFM W14, W14, 0x8, 0x7
	0x0326A544 BFM W14, W13, 0x10, 0x7
	0x0326A548 ADD W12, W2, 0x34
	0x0326A54C BFM W14, W10, 0x18, 0x7
	0x0326A550 ORR W10, W14, W11, 0x0
	0x0326A554 CMP W12, W8
	0x0326A558 STR W10, [X0 + 0x50]
	0x0326A55C B.CS 0x326A694
	0x0326A560 ADD W13, W2, 0x35
	0x0326A564 CMP W13, W8
	0x0326A568 B.CS 0x326A694
	0x0326A56C ADD W10, W2, 0x36
	0x0326A570 CMP W10, W8
	0x0326A574 B.CS 0x326A694
	0x0326A578 ADD W11, W2, 0x37
	0x0326A57C CMP W11, W8
	0x0326A580 B.CS 0x326A694
	0x0326A584 CMP W9, 0xD
	0x0326A588 B.LS 0x326A694
	0x0326A58C ADD X14, X1, W12, SXTW
	0x0326A590 ADD X13, X1, W13, SXTW
	0x0326A594 LDRB W14, [X14 + 0x20]
	0x0326A598 ADD X15, X1, 0x20
	0x0326A59C LDRB W13, [X13 + 0x20]
	0x0326A5A0 LDRB W10, [X15, W10, SXTW]
	0x0326A5A4 LDRB W11, [X15, W11, SXTW]
	0x0326A5A8 UBFM W14, W14, 0x8, 0x7
	0x0326A5AC BFM W14, W13, 0x10, 0x7
	0x0326A5B0 ADD W12, W2, 0x38
	0x0326A5B4 BFM W14, W10, 0x18, 0x7
	0x0326A5B8 ORR W10, W14, W11, 0x0
	0x0326A5BC CMP W12, W8
	0x0326A5C0 STR W10, [X0 + 0x54]
	0x0326A5C4 B.CS 0x326A694
	0x0326A5C8 ADD W13, W2, 0x39
	0x0326A5CC CMP W13, W8
	0x0326A5D0 B.CS 0x326A694
	0x0326A5D4 ADD W10, W2, 0x3A
	0x0326A5D8 CMP W10, W8
	0x0326A5DC B.CS 0x326A694
	0x0326A5E0 ADD W11, W2, 0x3B
	0x0326A5E4 CMP W11, W8
	0x0326A5E8 B.CS 0x326A694
	0x0326A5EC CMP W9, 0xE
	0x0326A5F0 B.LS 0x326A694
	0x0326A5F4 ADD X14, X1, W12, SXTW
	0x0326A5F8 ADD X13, X1, W13, SXTW
	0x0326A5FC LDRB W14, [X14 + 0x20]
	0x0326A600 ADD X15, X1, 0x20
	0x0326A604 LDRB W13, [X13 + 0x20]
	0x0326A608 LDRB W10, [X15, W10, SXTW]
	0x0326A60C LDRB W11, [X15, W11, SXTW]
	0x0326A610 UBFM W14, W14, 0x8, 0x7
	0x0326A614 BFM W14, W13, 0x10, 0x7
	0x0326A618 ADD W12, W2, 0x3C
	0x0326A61C BFM W14, W10, 0x18, 0x7
	0x0326A620 ORR W10, W14, W11, 0x0
	0x0326A624 CMP W12, W8
	0x0326A628 STR W10, [X0 + 0x58]
	0x0326A62C B.CS 0x326A694

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1173000
	007 Move W8, [X21+1399]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X22, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xEB8000
	016 Move X0, [X0+3416]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+1399], W8
	020 Move X21, [X22+16]
	021 Compare X21, 0
	022 JumpIfEqual {49}
	023 Move X22, [X22+24]
	024 Compare X22, 0
	025 JumpIfEqual {51}
	026 Compare X20, 0
	027 JumpIfEqual {71}
	028 Compare X19, 0
	029 JumpIfEqual {78}
	030 Move X8, 0xEB8000
	031 Move X8, [X8+3416]
	032 Move X0, [X8]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X21
	038 Move X1, X22
	039 Move X2, X20
	040 Move X3, X19
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Move X4, X31
	046 Move X30, [X31+48]
	047 Call PKCS1.Verify_v15, X0, X1, X2, X3
	048 Return X0
	049 Move X0, 0xEBA000
	050 Move X0, [X0+2336]
	051 Move X0, 0xEBA000
	052 Move X0, [X0+2344]
	053 Call 0x1C17D08
	054 Move X1, X31
	055 Call Locale.GetText, X0
	056 Move X19, X0
	057 Move X0, 0xEB9000
	058 Move X0, [X0+3768]
	059 Call 0x1C17D08
	060 Call 0x1C17F10
	061 Move X1, X19
	062 Move X2, X31
	063 Move X20, X0
	064 Call CryptographicUnexpectedOperationException..ctor, X0, X1
	065 Move X0, 0xEBA000
	066 Move X0, [X0+2352]
	067 Call 0x1C17D08
	068 Move X1, X0
	069 Move X0, X20
	070 Call 0x1C17DEC
	071 Move X0, 0xE8F000
	072 Move X0, [X0+1320]
	073 Call 0x1C17D08
	074 Call 0x1C17F10
	075 Move X19, X0
	076 Move X0, 0xEB8000
	077 Move X0, [X0+3848]
	078 Move X0, 0xE8F000
	079 Move X0, [X0+1320]
	080 Call 0x1C17D08
	081 Call 0x1C17F10
	082 Move X19, X0
	083 Move X0, 0xEB8000
	084 Move X0, [X0+3856]
	085 Call 0x1C17D08
	086 Move X1, X0
	087 Move X0, X19
	088 Move X2, X31
	089 Call ArgumentNullException..ctor, X0, X1
	090 Move X0, 0xEBA000
	091 Move X0, [X0+2352]
	092 Call 0x1C17D08
	093 Move X1, X0
	094 Move X0, X19
	095 Call 0x1C17DEC

