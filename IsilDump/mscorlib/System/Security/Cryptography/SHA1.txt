Type: System.Security.Cryptography.SHA1

Method: System.Void .ctor()

Disassembly:
	0x0325E0C8 AND W12, W21, W22, 0x0
	0x0325E0CC LDUR W10, [X10 - 0x14]
	0x0325E0D0 ADD W11, W11, W12
	0x0325E0D4 BIC W12, W23, W21, 0x0
	0x0325E0D8 ADD W9, W29, W9
	0x0325E0DC ADD W28, W9, W28
	0x0325E0E0 ADD W9, W11, W12
	0x0325E0E4 ADD W8, W9, W8

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call HashAlgorithm..ctor, X0
	006 Move W8, 160
	007 Move [X19+20], W8
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Return 

Method: System.Security.Cryptography.SHA1 Create()

Disassembly:
	0x0325E0E8 ADD W29, W8, W10
	0x0325E0EC MOV W0, W28
	0x0325E0F0 ADD W24, W29, W25
	0x0325E0F4 BL 0x325E4D8
	0x0325E0F8 MOV W25, W0
	0x0325E0FC MOV W0, W24
	0x0325E100 BL 0x325E46C
	0x0325E104 ADRP X8, 0xEC5000
	0x0325E108 LDR X8, [X8 + 0xC0]
	0x0325E10C LDR X8, [X8]
	0x0325E110 LDR X8, [X8 + 0xB8]
	0x0325E114 LDR X8, [X8]
	0x0325E118 CBZ X8, 0x325E3BC
	0x0325E11C LDR W9, [X8 + 0x18]
	0x0325E120 ADD X20, X20, 0x1
	0x0325E124 CMP X20, X9
	0x0325E128 B.CS 0x325E3C0
	0x0325E12C EOR W9, W26, W27, 0x0
	0x0325E130 AND W10, W26, W27, 0x0
	0x0325E134 AND W9, W28, W9, 0x0
	0x0325E138 EOR W9, W9, W10, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x117F000
	005 Move X20, 0xEC6000
	006 Move W8, [X19+1306]
	007 Move X20, [X20+800]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xEC6000
	013 Move X0, [X0+800]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1306], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call SHA1CryptoServiceProvider..ctor, X0
	022 Move X0, X19
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Return X0

