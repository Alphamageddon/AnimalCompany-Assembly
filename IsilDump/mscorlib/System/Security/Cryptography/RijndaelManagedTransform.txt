Type: System.Security.Cryptography.RijndaelManagedTransform

Method: System.Void .ctor(System.Byte[] rgbKey, System.Security.Cryptography.CipherMode mode, System.Byte[] rgbIV, System.Int32 blockSize, System.Int32 feedbackSize, System.Security.Cryptography.PaddingMode PaddingValue, System.Security.Cryptography.RijndaelManagedTransformMode transformMode)

Disassembly:
	0x03257EAC CMP W23, 0x5
	0x03257EB0 MOV X26, X0
	0x03257EB4 B.EQ 0x3258930
	0x03257EB8 CMP W23, 0x4
	0x03257EBC B.EQ 0x3258954
	0x03257EC0 CMP W23, 0x2
	0x03257EC4 B.NE 0x3257F24
	0x03257EC8 CMP W28, 0x1
	0x03257ECC B.LT 0x3257F24
	0x03257ED0 CBZ X26, 0x3258950
	0x03257ED4 LDR W9, [X26 + 0x18]
	0x03257ED8 MOV X8, X31
	0x03257EDC MOV W10, W28
	0x03257EE0 ADD X11, X26, 0x20
	0x03257EE4 CMP X8, X9
	0x03257EE8 B.CS 0x3258974
	0x03257EEC STRB W28, [X11, X8, LSL]
	0x03257EF0 ADD X8, X8, 0x1
	0x03257EF4 CMP X10, X8
	0x03257EF8 B.NE 0x3257EE4
	0x03257EFC B 0x3257F24
	0x03257F00 MOV X26, X31
	0x03257F04 B 0x3257F24
	0x03257F08 LDUR W9, [X29 - 0x34]
	0x03257F0C CBNZ W9, 0x3257E8C
	0x03257F10 B 0x3257F1C
	0x03257F14 LDUR W8, [X29 - 0x34]
	0x03257F18 CBNZ W8, 0x3258978
	0x03257F1C MOV X26, X31
	0x03257F20 MOV W28, W31
	0x03257F24 LDR X8, [X19]
	0x03257F28 CBZ X8, 0x3257F94
	0x03257F2C LDR W8, [X8 + 0x18]
	0x03257F30 LDUR W9, [X29 - 0xC]
	0x03257F34 SUB W8, W8, W24
	0x03257F38 ADD W9, W28, W9
	0x03257F3C CMP W8, W9
	0x03257F40 B.GE 0x3257FB4
	0x03257F44 ADRP X0, 0xECC000
	0x03257F48 LDR X0, [X0 + 0x1F8]
	0x03257F4C BL 0x1C16D08
	0x03257F50 MOV X1, X31
	0x03257F54 BL 0x33BDD84
	0x03257F58 MOV X19, X0
	0x03257F5C ADRP X0, 0xEC9000
	0x03257F60 LDR X0, [X0 + 0xCE0]
	0x03257F64 BL 0x1C16D08
	0x03257F68 BL 0x1C16F10
	0x03257F6C MOV X1, X19
	0x03257F70 MOV X2, X31
	0x03257F74 MOV X20, X0
	0x03257F78 BL 0x3252170
	0x03257F7C ADRP X0, 0xECC000
	0x03257F80 LDR X0, [X0 + 0x1F0]
	0x03257F84 BL 0x1C16D08
	0x03257F88 MOV X1, X0
	0x03257F8C MOV X0, X20
	0x03257F90 BL 0x1C16DEC
	0x03257F94 ADRP X8, 0xE9C000
	0x03257F98 LDR X8, [X8 + 0x618]
	0x03257F9C LDR X0, [X8]
	0x03257FA0 LDUR W8, [X29 - 0xC]
	0x03257FA4 ADD W1, W28, W8
	0x03257FA8 BL 0x1C16D6C
	0x03257FAC MOV W24, W31
	0x03257FB0 STR X0, [X19]
	0x03257FB4 LDR X8, [X22 + 0x50]
	0x03257FB8 CBZ X8, 0x3257FD0
	0x03257FBC LDR W9, [X8 + 0x18]
	0x03257FC0 ADD X8, X8, 0x20
	0x03257FC4 CMP W9, 0x0
	0x03257FC8 CSEL X25, X31, X8, EQ
	0x03257FCC B 0x3257FD4
	0x03257FD0 MOV X25, X31
	0x03257FD4 ADRP X23, 0xECC000
	0x03257FD8 LDR X8, [X22 + 0x30]
	0x03257FDC LDR X23, [X23 + 0x1A8]
	0x03257FE0 CBZ X8, 0x3257FFC
	0x03257FE4 LDR W9, [X8 + 0x18]
	0x03257FE8 ADD X8, X8, 0x20
	0x03257FEC CMP W9, 0x0
	0x03257FF0 CSEL X8, X31, X8, EQ
	0x03257FF4 STUR X8, [X29 - 0x40]
	0x03257FF8 B 0x3258000
	0x03257FFC STUR X31, [X29 - 0x40]
	0x03258000 LDR X0, [X23]
	0x03258004 LDR W8, [X0 + 0xE0]
	0x03258008 CBNZ W8, 0x3258014
	0x0325800C BL 0x1C16DFC
	0x03258010 LDR X0, [X23]
	0x03258014 LDR X8, [X0 + 0xB8]
	0x03258018 LDR X9, [X8 + 0x10]
	0x0325801C CBZ X9, 0x3258038
	0x03258020 LDR W10, [X9 + 0x18]
	0x03258024 ADD X9, X9, 0x20
	0x03258028 CMP W10, 0x0
	0x0325802C CSEL X9, X31, X9, EQ
	0x03258030 STUR X9, [X29 - 0x20]
	0x03258034 B 0x325803C
	0x03258038 STUR X31, [X29 - 0x20]
	0x0325803C LDR W9, [X0 + 0xE0]
	0x03258040 CBNZ W9, 0x3258050
	0x03258044 BL 0x1C16DFC
	0x03258048 LDR X8, [X23]
	0x0325804C LDR X8, [X8 + 0xB8]
	0x03258050 LDR X8, [X8 + 0x18]
	0x03258054 CBZ X8, 0x3258070
	0x03258058 LDR W9, [X8 + 0x18]
	0x0325805C ADD X8, X8, 0x20
	0x03258060 CMP W9, 0x0
	0x03258064 CSEL X8, X31, X8, EQ
	0x03258068 STUR X8, [X29 - 0x28]
	0x0325806C B 0x3258074
	0x03258070 STUR X31, [X29 - 0x28]
	0x03258074 LDRSW X8, [X22 + 0x44]
	0x03258078 STUR X27, [X29 - 0x50]
	0x0325807C UBFM X27, X8, 0x3E, 0x3D
	0x03258080 CBZ W8, 0x32580B8
	0x03258084 ADD X9, X27, 0xF
	0x03258088 ADD X8, X31, 0x0
	0x0325808C AND X23, X9, 0xFFFFFFFF
	0x03258090 SUB X0, X8, X23
	0x03258094 ADD X31, X0, 0x0
	0x03258098 MOV W1, W31
	0x0325809C MOV X2, X27
	0x032580A0 STUR X0, [X29 - 0x18]
	0x032580A4 BL 0x3EB1B10
	0x032580A8 ADD X8, X31, 0x0
	0x032580AC SUB X23, X8, X23
	0x032580B0 ADD X31, X23, 0x0
	0x032580B4 B 0x32580D0
	0x032580B8 MOV X0, X31
	0x032580BC MOV W1, W31
	0x032580C0 MOV X2, X27
	0x032580C4 BL 0x3EB1B10
	0x032580C8 STUR X31, [X29 - 0x18]
	0x032580CC MOV X23, X31
	0x032580D0 MOV X0, X23
	0x032580D4 MOV W1, W31
	0x032580D8 MOV X2, X27
	0x032580DC BL 0x3EB1B10
	0x032580E0 LDUR W9, [X29 - 0xC]
	0x032580E4 LDR W8, [X22 + 0x24]
	0x032580E8 LDUR X27, [X29 - 0x40]
	0x032580EC ADD W9, W28, W9
	0x032580F0 SDIV W8, W9, W8
	0x032580F4 STUR W8, [X29 - 0x2C]
	0x032580F8 SUBS W8, W8, 0x1
	0x032580FC STUR W9, [X29 - 0x54]
	0x03258100 STUR W8, [X29 - 0x30]
	0x03258104 B.LT 0x32588F8
	0x03258108 MOV W15, W31
	0x0325810C STUR X25, [X29 - 0x48]
	0x03258110 LDR W8, [X22 + 0x10]
	0x03258114 STUR W15, [X29 - 0xC]
	0x03258118 CMP W8, 0x4
	0x0325811C B.NE 0x3258138
	0x03258120 LDR X2, [X22 + 0x78]
	0x03258124 LDR W4, [X22 + 0x20]
	0x03258128 LDUR X0, [X29 - 0x18]
	0x0325812C MOV W1, W31
	0x03258130 MOV W3, W31
	0x03258134 B 0x32582E0
	0x03258138 CBZ W28, 0x32582CC
	0x0325813C LDUR W8, [X29 - 0x30]
	0x03258140 CMP W15, W8
	0x03258144 B.NE 0x32582CC
	0x03258148 LDR W8, [X22 + 0x44]
	0x0325814C CMP W8, 0x1
	0x03258150 B.LT 0x32582E8
	0x03258154 LDUR W9, [X29 - 0x34]
	0x03258158 LDUR X10, [X29 - 0x18]
	0x0325815C MOV X8, X31
	0x03258160 MOV W13, W31
	0x03258164 ADD W9, W20, W9
	0x03258168 MOV W11, W20
	0x0325816C CMP W11, W9
	0x03258170 B.GE 0x32581C4
	0x03258174 LDR W12, [X21 + 0x18]
	0x03258178 CMP W11, W12
	0x0325817C B.CS 0x3258974
	0x03258180 ADD X12, X21, W11, SXTW
	0x03258184 LDRB W12, [X12 + 0x20]
	0x03258188 SXTW X14, W11
	0x0325818C ADD X14, X14, 0x1
	0x03258190 CMP W14, W9
	0x03258194 B.GE 0x32581EC
	0x03258198 LDR W15, [X21 + 0x18]
	0x0325819C CMP W14, W15
	0x032581A0 B.CS 0x3258974
	0x032581A4 ADD X14, X21, X14
	0x032581A8 LDRB W14, [X14 + 0x20]
	0x032581AC ADD W11, W11, 0x2
	0x032581B0 MOV W16, W13
	0x032581B4 CMP W11, W9
	0x032581B8 B.LT 0x3258214
	0x032581BC CBNZ X26, 0x325823C
	0x032581C0 B 0x3258950
	0x032581C4 CBZ X26, 0x3258950
	0x032581C8 LDR W12, [X26 + 0x18]
	0x032581CC CMP W13, W12
	0x032581D0 B.CS 0x3258974
	0x032581D4 ADD X12, X26, W13, SXTW
	0x032581D8 LDRB W12, [X12 + 0x20]
	0x032581DC ADD W14, W13, 0x1
	0x032581E0 ADD W16, W13, 0x2
	0x032581E4 MOV W13, W14
	0x032581E8 B 0x32581F8
	0x032581EC CBZ X26, 0x3258950
	0x032581F0 ADD W16, W13, 0x1
	0x032581F4 MOV W11, W14
	0x032581F8 LDR W14, [X26 + 0x18]
	0x032581FC CMP W13, W14
	0x03258200 B.CS 0x3258974
	0x03258204 ADD X13, X26, W13, SXTW
	0x03258208 LDRB W14, [X13 + 0x20]
	0x0325820C CMP W11, W9
	0x03258210 B.GE 0x325823C
	0x03258214 LDR W13, [X21 + 0x18]
	0x03258218 CMP W11, W13
	0x0325821C B.CS 0x3258974
	0x03258220 ADD X13, X21, W11, SXTW
	0x03258224 LDRB W15, [X13 + 0x20]
	0x03258228 ADD W11, W11, 0x1
	0x0325822C CMP W11, W9
	0x03258230 B.GE 0x325827C
	0x03258234 MOV W13, W16
	0x03258238 B 0x3258260
	0x0325823C LDR W13, [X26 + 0x18]
	0x03258240 CMP W16, W13
	0x03258244 B.CS 0x3258974
	0x03258248 ADD X13, X26, W16, SXTW
	0x0325824C LDRB W15, [X13 + 0x20]
	0x03258250 CMP W11, W9
	0x03258254 ADD W17, W16, 0x1
	0x03258258 B.GE 0x325828C
	0x0325825C MOV W13, W17
	0x03258260 LDR W16, [X21 + 0x18]
	0x03258264 CMP W11, W16
	0x03258268 B.CS 0x3258974
	0x0325826C ADD X16, X21, W11, SXTW
	0x03258270 ADD W11, W11, 0x1
	0x03258274 ADD X16, X16, 0x20
	0x03258278 B 0x32582A4
	0x0325827C CBZ X26, 0x3258950
	0x03258280 ADD W13, W16, 0x1
	0x03258284 MOV W17, W16
	0x03258288 B 0x3258290
	0x0325828C ADD W13, W16, 0x2
	0x03258290 LDR W16, [X26 + 0x18]
	0x03258294 CMP W17, W16
	0x03258298 B.CS 0x3258974
	0x0325829C ADD X16, X26, W17, SXTW
	0x032582A0 ADD X16, X16, 0x20
	0x032582A4 LDRB W16, [X16]
	0x032582A8 BFM W12, W14, 0x18, 0x7
	0x032582AC BFM W12, W15, 0x10, 0x7
	0x032582B0 ADD X8, X8, 0x1
	0x032582B4 BFM W12, W16, 0x8, 0x7
	0x032582B8 STR W12, [X10], #0x4
	0x032582BC LDRSW X12, [X22 + 0x44]
	0x032582C0 CMP X8, X12
	0x032582C4 B.LT 0x325816C
	0x032582C8 B 0x32582E8
	0x032582CC LDR W4, [X22 + 0x20]
	0x032582D0 LDUR X0, [X29 - 0x18]
	0x032582D4 MOV W1, W31
	0x032582D8 MOV X2, X21
	0x032582DC MOV W3, W20
	0x032582E0 MOV X5, X31
	0x032582E4 BL 0x33A88F4
	0x032582E8 LDR W8, [X22 + 0x10]
	0x032582EC CMP W8, 0x1
	0x032582F0 B.NE 0x3258340
	0x032582F4 LDR W8, [X22 + 0x44]
	0x032582F8 CMP W8, 0x1
	0x032582FC B.LT 0x3258340
	0x03258300 LDR X10, [X22 + 0x68]
	0x03258304 CBZ X10, 0x3258950
	0x03258308 LDR W9, [X10 + 0x18]
	0x0325830C LDUR X11, [X29 - 0x18]
	0x03258310 MOV X8, X31
	0x03258314 ADD X10, X10, 0x20
	0x03258318 CMP X8, X9
	0x0325831C B.CS 0x3258974
	0x03258320 LDR W12, [X11]
	0x03258324 LDR W13, [X10, X8, LSL #2]
	0x03258328 ADD X8, X8, 0x1
	0x0325832C EOR W12, W13, W12, 0x0
	0x03258330 STR W12, [X11], #0x4
	0x03258334 LDRSW X12, [X22 + 0x44]
	0x03258338 CMP X8, X12
	0x0325833C B.LT 0x3258318
	0x03258340 LDP X4, X3, [X29 - 0x28]
	0x03258344 LDUR X5, [X29 - 0x18]
	0x03258348 MOV X0, X22
	0x0325834C MOV X1, X25
	0x03258350 MOV X2, X27
	0x03258354 MOV X6, X23
	0x03258358 BL 0x3259744
	0x0325835C LDR W8, [X22 + 0x10]
	0x03258360 CMP W8, 0x4
	0x03258364 B.NE 0x3258550
	0x03258368 LDUR W9, [X29 - 0xC]
	0x0325836C CBZ W28, 0x325864C
	0x03258370 LDUR W8, [X29 - 0x30]
	0x03258374 CMP W9, W8
	0x03258378 B.NE 0x325864C
	0x0325837C ADRP X8, 0xE9B000
	0x03258380 LDR W1, [X22 + 0x24]
	0x03258384 LDR X8, [X8 + 0x618]
	0x03258388 LDR X0, [X8]
	0x0325838C BL 0x1C16D6C
	0x03258390 MOV W25, W28
	0x03258394 LDUR W28, [X29 - 0x34]
	0x03258398 MOV X27, X0
	0x0325839C MOV X0, X21
	0x032583A0 MOV W1, W20
	0x032583A4 MOV X2, X27
	0x032583A8 MOV W3, W31
	0x032583AC MOV W4, W28
	0x032583B0 MOV X5, X31
	0x032583B4 BL 0x33A8750
	0x032583B8 MOV X0, X26
	0x032583BC MOV W1, W31
	0x032583C0 MOV X2, X27
	0x032583C4 MOV W3, W28
	0x032583C8 MOV W4, W25
	0x032583CC MOV X5, X31
	0x032583D0 MOV W28, W25
	0x032583D4 BL 0x33A8750
	0x032583D8 LDR W8, [X22 + 0x44]
	0x032583DC CMP W8, 0x1
	0x032583E0 B.LT 0x32587F8
	0x032583E4 LDUR X25, [X29 - 0x48]
	0x032583E8 MOV X8, X31
	0x032583EC MOV X11, X31
	0x032583F0 MOV W10, W24
	0x032583F4 LDRSW X12, [X22 + 0x24]
	0x032583F8 MOV X9, X11
	0x032583FC CMP X11, X12
	0x03258400 B.GE 0x3258818
	0x03258404 CBZ X27, 0x3258950
	0x03258408 LDR W11, [X27 + 0x18]
	0x0325840C CMP X9, X11
	0x03258410 B.CS 0x3258974
	0x03258414 LDR X12, [X19]
	0x03258418 CBZ X12, 0x3258950
	0x0325841C LDR W13, [X12 + 0x18]
	0x03258420 ADD X11, X10, X9
	0x03258424 CMP W11, W13
	0x03258428 B.CS 0x3258974
	0x0325842C ADD X14, X27, X9
	0x03258430 LDR W13, [X23, X9, LSL]
	0x03258434 LDRB W14, [X14 + 0x20]
	0x03258438 ADD X12, X12, W11, SXTW
	0x0325843C EOR W13, W14, W13, 0x0
	0x03258440 STRB W13, [X12 + 0x20]
	0x03258444 LDRSW X13, [X22 + 0x24]
	0x03258448 ADD X12, X9, 0x1
	0x0325844C CMP X12, X13
	0x03258450 B.GE 0x325882C
	0x03258454 LDR W13, [X27 + 0x18]
	0x03258458 CMP X12, X13
	0x0325845C B.CS 0x3258974
	0x03258460 LDR X13, [X19]
	0x03258464 CBZ X13, 0x3258950
	0x03258468 LDR W14, [X13 + 0x18]
	0x0325846C ADD X11, X11, 0x1
	0x03258470 CMP W11, W14
	0x03258474 B.CS 0x3258974
	0x03258478 ADD X15, X27, X9
	0x0325847C LDR W14, [X23, X9, LSL]
	0x03258480 LDRB W15, [X15 + 0x21]
	0x03258484 ADD X11, X13, W11, SXTW
	0x03258488 EOR W14, W15, W14, 0x8
	0x0325848C STRB W14, [X11 + 0x20]
	0x03258490 LDRSW X13, [X22 + 0x24]
	0x03258494 ADD X11, X12, 0x1
	0x03258498 CMP X11, X13
	0x0325849C B.GE 0x3258844
	0x032584A0 LDR W12, [X27 + 0x18]
	0x032584A4 CMP X11, X12
	0x032584A8 B.CS 0x3258974

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X20, 0x1186000
	015 Move W8, [X20+1285]
	016 Move W25, W7
	017 Move W26, W6
	018 Move W24, W4
	019 Move X21, X3
	020 Move W23, W2
	021 Move X22, X1
	022 Move X19, X0
	023 Move [X31+12], W5
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {36}
	028 Move X0, 0xE9D000
	029 Move X0, [X0+1560]
	030 Call 0x1C17CF4
	031 Move X0, 0xE9E000
	032 Move X0, [X0+3672]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X20+1285], W8
	036 Move X0, X19
	037 Move X1, X31
	038 Call Object..ctor, X0
	039 Compare X22, 0
	040 JumpIfEqual {355}
	041 Add W8, W24, 7
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Add W9, W24, 31
	044 NotImplemented "Instruction CSEL not yet implemented."
	045 NotImplemented "Instruction CSEL not yet implemented."
	046 NotImplemented "Instruction SBFM not yet implemented."
	047 NotImplemented "Instruction SBFM not yet implemented."
	048 Move [X19+16], W23
	049 Move [X19+20], W26
	050 Move [X19+24], W25
	051 Move [X19+28], W24
	052 Move [X19+32], W8
	053 Move [X19+68], W1
	054 Move W8, [X22+24]
	055 Move [X31+28], W23
	056 Move [X31+16], X22
	057 Move X23, 0xE9E000
	058 Move X23, [X23+3672]
	059 Add W9, W8, 3
	060 NotImplemented "Instruction CMP not yet implemented."
	061 NotImplemented "Instruction CSEL not yet implemented."
	062 NotImplemented "Instruction SBFM not yet implemented."
	063 Move [X19+72], W8
	064 Move X0, [X23]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move W8, 2
	067 NotImplemented "Instruction CINC not yet implemented."
	068 Move W8, 3
	069 NotImplemented "Instruction CINC not yet implemented."
	070 Call 0x1C17D6C
	071 Move X8, [X23]
	072 Move W1, [X19+68]
	073 Move X29, X0
	074 Move X0, X8
	075 Call 0x1C17D6C
	076 Move X8, [X23]
	077 Move W1, [X19+68]
	078 Move X28, X0
	079 Move X0, X8
	080 Call 0x1C17D6C
	081 Move X8, [X23]
	082 Move W1, [X19+68]
	083 Move X27, X0
	084 Move X0, X8
	085 Call 0x1C17D6C
	086 Move X8, [X23]
	087 Move W1, [X19+68]
	088 Move X26, X0
	089 Move X0, X8
	090 Call 0x1C17D6C
	091 Move X8, [X23]
	092 Move W1, [X19+68]
	093 Move X25, X0
	094 Move X0, X8
	095 Call 0x1C17D6C
	096 Move W3, [X19+68]
	097 Move X24, X0
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Compare X29, 0
	100 JumpIfEqual {354}
	101 Move W8, [X29+24]
	102 Move X10, X31
	103 Move W9, W22
	104 Move W11, W20
	105 Add X12, X24, 32
	106 Add X13, X25, 32
	107 Add X14, X26, 32
	108 Add X15, X27, 32
	109 Add X16, X28, 32
	110 Add X17, X29, 32
	111 Subtract W0, W31, W22
	112 Subtract W1, W31, W20
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Add X2, X10, 1
	115 NotImplemented "Instruction SDIV not yet implemented."
	116 NotImplemented "Instruction MSUB not yet implemented."
	117 Move [X17], W3
	118 Compare X28, 0
	119 JumpIfEqual {354}
	120 Move W3, [X28+24]
	121 Subtract X2, X2, 1
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move W3, [X19+68]
	124 Add W4, W11, W10
	125 NotImplemented "Instruction SDIV not yet implemented."
	126 NotImplemented "Instruction MSUB not yet implemented."
	127 Move [X16], W3
	128 Compare X27, 0
	129 JumpIfEqual {354}
	130 Move W3, [X27+24]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move W3, [X19+68]
	133 Add W4, W9, W10
	134 NotImplemented "Instruction SDIV not yet implemented."
	135 NotImplemented "Instruction MSUB not yet implemented."
	136 Move [X15], W3
	137 Compare X26, 0
	138 JumpIfEqual {354}
	139 Move W3, [X26+24]
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Move W3, [X19+68]
	142 Add W4, W10, W3
	143 Subtract W4, W4, 1
	144 NotImplemented "Instruction SDIV not yet implemented."
	145 NotImplemented "Instruction MSUB not yet implemented."
	146 Move [X14], W3
	147 Compare X25, 0
	148 JumpIfEqual {354}
	149 Move W3, [X25+24]
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move W3, [X19+68]
	152 Add W4, W1, W10
	153 Add W4, W4, W3
	154 NotImplemented "Instruction SDIV not yet implemented."
	155 NotImplemented "Instruction MSUB not yet implemented."
	156 Move [X13], W3
	157 Compare X24, 0
	158 JumpIfEqual {354}
	159 Move W3, [X24+24]
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Move W3, [X19+68]
	162 Add W4, W0, W10
	163 Add W4, W4, W3
	164 NotImplemented "Instruction SDIV not yet implemented."
	165 NotImplemented "Instruction MSUB not yet implemented."
	166 Move [X12], W3
	167 NotImplemented "Instruction LDRSW not yet implemented."
	168 Add X10, X2, 1
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Move X0, [X23]
	171 Add W1, W3, W3
	172 Call 0x1C17D6C
	173 Move W4, [X19+68]
	174 Move X2, X0
	175 Move [X19+80], X0
	176 Move X0, X29
	177 Move W1, W31
	178 Move W3, W31
	179 Move X5, X31
	180 Call Array.Copy, X0, X1, X2, X3, X4
	181 Move W3, [X19+68]
	182 Move X2, [X19+80]
	183 Move X0, X28
	184 Move W1, W31
	185 Move W4, W3
	186 Move X5, X31
	187 Call Array.Copy, X0, X1, X2, X3, X4
	188 Move W4, [X19+68]
	189 Move X2, [X19+80]
	190 Move X0, X27
	191 Move W1, W31
	192 Move W3, W4
	193 ShiftRight W3, 31
	194 And W3, W3, 0x3FFFFFFF
	195 Move X5, X31
	196 Call Array.Copy, X0, X1, X2, X3, X4
	197 Move W8, [X19+68]
	198 Move X0, [X23]
	199 Add W1, W8, W8
	200 Call 0x1C17D6C
	201 Move W4, [X19+68]
	202 Move X2, X0
	203 Move [X19+88], X0
	204 Move X0, X26
	205 Move W1, W31
	206 Move W3, W31
	207 Move X5, X31
	208 Call Array.Copy, X0, X1, X2, X3, X4
	209 Move W3, [X19+68]
	210 Move X2, [X19+88]
	211 Move X0, X25
	212 Move W1, W31
	213 Move W4, W3
	214 Move X5, X31
	215 Call Array.Copy, X0, X1, X2, X3, X4
	216 Move W4, [X19+68]
	217 Move X2, [X19+88]
	218 Move X0, X24
	219 Move W1, W31
	220 Move W3, W4
	221 ShiftRight W3, 31
	222 And W3, W3, 0x3FFFFFFF
	223 Move X5, X31
	224 Call Array.Copy, X0, X1, X2, X3, X4
	225 Move W8, [X19+16]
	226 Subtract W9, W8, 1
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Move W9, [X31+28]
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Move W10, [X31+12]
	231 Add W8, W10, 7
	232 NotImplemented "Instruction CMP not yet implemented."
	233 NotImplemented "Instruction CSEL not yet implemented."
	234 NotImplemented "Instruction SBFM not yet implemented."
	235 Move W8, [X19+32]
	236 Move W9, [X31+28]
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Move [X19+36], W8
	239 Move [X19+40], W8
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Compare X21, 0
	242 JumpIfEqual {362}
	243 Move W8, [X21+24]
	244 Move W1, [X19+68]
	245 Add W9, W8, 3
	246 NotImplemented "Instruction CMP not yet implemented."
	247 NotImplemented "Instruction CSEL not yet implemented."
	248 NotImplemented "Instruction CMP not yet implemented."
	249 Move X0, [X23]
	250 Call 0x1C17D6C
	251 Move W8, [X19+68]
	252 Move [X19+96], X0
	253 NotImplemented "Instruction CMP not yet implemented."
	254 Move W9, [X21+24]
	255 Move X11, X31
	256 Move X8, X31
	257 Add X10, X0, 32
	258 NotImplemented "Instruction CMP not yet implemented."
	259 Add X13, X11, 1
	260 NotImplemented "Instruction CMP not yet implemented."
	261 Add X12, X13, 1
	262 NotImplemented "Instruction CMP not yet implemented."
	263 Add X12, X12, 1
	264 NotImplemented "Instruction CMP not yet implemented."
	265 Compare X0, 0
	266 JumpIfEqual {354}
	267 Move W14, [X0+24]
	268 NotImplemented "Instruction CMP not yet implemented."
	269 Add X14, X21, W11
	270 Add X15, X11, 2
	271 Add X13, X21, W13
	272 Add X16, X11, 3
	273 Move W14, [X14+32]
	274 Move W13, [X13+32]
	275 Add X15, X21, W15
	276 Move W15, [X15+32]
	277 Add X16, X21, W16
	278 Move W16, [X16+32]
	279 NotImplemented "Instruction BFM not yet implemented."
	280 NotImplemented "Instruction BFM not yet implemented."
	281 Add X8, X8, 1
	282 NotImplemented "Instruction BFM not yet implemented."
	283 Move [X10], W14
	284 NotImplemented "Instruction LDRSW not yet implemented."
	285 NotImplemented "Instruction CMP not yet implemented."
	286 Add X11, X12, 1
	287 Move X1, [X31+16]
	288 Move X0, X19
	289 Call RijndaelManagedTransform.GenerateKeyExpansion, X0, X1
	290 Move W8, [X19+16]
	291 NotImplemented "Instruction CMP not yet implemented."
	292 Move W1, [X19+68]
	293 Move X0, [X23]
	294 Call 0x1C17D6C
	295 Move X8, [X19+96]
	296 Move W4, [X19+32]
	297 Move X2, X0
	298 Move [X19+104], X0
	299 Move X0, X8
	300 Move W1, W31
	301 Move W3, W31
	302 Move X5, X31
	303 Call Buffer.InternalBlockCopy, X0, X1, X2, X3, X4
	304 Move W8, [X19+16]
	305 NotImplemented "Instruction CMP not yet implemented."
	306 Move X9, 0xE9C000
	307 Move W8, [X19+68]
	308 Move X9, [X9+1560]
	309 Move W1, W8
	310 ShiftRight W1, 30
	311 And W1, W1, 0x1FFFFFFF
	312 Move X0, [X9]
	313 Call 0x1C17D6C
	314 Move X2, X0
	315 Move W8, [X19+68]
	316 Move X0, [X19+96]
	317 Move [X19+120], X2
	318 Move X20, [X31+112]
	319 Move X19, [X31+120]
	320 Move X22, [X31+96]
	321 Move X21, [X31+104]
	322 Move X24, [X31+80]
	323 Move X23, [X31+88]
	324 Move X26, [X31+64]
	325 Move X25, [X31+72]
	326 Move X28, [X31+48]
	327 Move X27, [X31+56]
	328 Move X29, [X31+32]
	329 Move X30, [X31+40]
	330 Move W4, W8
	331 ShiftRight W4, 30
	332 And W4, W4, 0x1FFFFFFF
	333 Move W1, W31
	334 Move W3, W31
	335 Move X5, X31
	336 Add X31, X31, 128
	337 Call Buffer.InternalBlockCopy, X0, X1, X2, X3, X4
	338 Return 
	339 Move X20, [X31+112]
	340 Move X19, [X31+120]
	341 Move X22, [X31+96]
	342 Move X21, [X31+104]
	343 Move X24, [X31+80]
	344 Move X23, [X31+88]
	345 Move X26, [X31+64]
	346 Move X25, [X31+72]
	347 Move X28, [X31+48]
	348 Move X27, [X31+56]
	349 Move X29, [X31+32]
	350 Move X30, [X31+40]
	351 Add X31, X31, 128
	352 Return 
	353 Call 0x1C17F28
	354 Call 0x1C17F20
	355 Move X0, 0xEA1000
	356 Move X0, [X0+1320]
	357 Call 0x1C17D08
	358 Call 0x1C17F10
	359 Move X19, X0
	360 Move X0, 0xECC000
	361 Move X0, [X0+432]
	362 Move X0, 0xEA1000
	363 Move X0, [X0+1320]
	364 Call 0x1C17D08
	365 Call 0x1C17F10
	366 Move X19, X0
	367 Move X0, 0xECC000
	368 Move X0, [X0+440]
	369 Call 0x1C17D08
	370 Move X1, X0
	371 Move X0, X19
	372 Move X2, X31
	373 Call ArgumentNullException..ctor, X0, X1
	374 Move X0, 0xECC000
	375 Move X0, [X0+448]
	376 Call 0x1C17D08
	377 Move X1, X0
	378 Move X0, X19
	379 Call 0x1C17DEC
	380 Move X0, 0xECC000
	381 Move X0, [X0+456]
	382 Move X0, 0xECC000
	383 Move X0, [X0+464]
	384 Call 0x1C17D08
	385 Move X1, X31
	386 Call Environment.GetResourceString, X0
	387 Move X19, X0
	388 Move X0, 0xEC9000
	389 Move X0, [X0+3296]
	390 Call 0x1C17D08
	391 Call 0x1C17F10
	392 Move X1, X19
	393 Move X2, X31
	394 Move X20, X0
	395 Call CryptographicException..ctor, X0, X1
	396 Move X0, 0xECC000
	397 Move X0, [X0+448]
	398 Call 0x1C17D08
	399 Move X1, X0
	400 Move X0, X20
	401 Call 0x1C17DEC

Method: System.Void Dispose()

Disassembly:
	0x03258A18 ADD W9, W28, W23
	0x03258A1C CMP W9, W8

ISIL:
	001 Move W1, 1

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x03258A20 B.GT 0x3258A3C
	0x03258A24 LDR X8, [X19]
	0x03258A28 CBZ X8, 0x3258A48
	0x03258A2C LDR W8, [X8 + 0x18]
	0x03258A30 SUB W8, W8, W26
	0x03258A34 CMP W8, W28
	0x03258A38 B.GE 0x3258A64
	0x03258A3C ADRP X0, 0xECB000
	0x03258A40 LDR X0, [X0 + 0x1F8]
	0x03258A44 B 0x32593C0
	0x03258A48 ADRP X8, 0xE9B000
	0x03258A4C LDR X8, [X8 + 0x618]
	0x03258A50 MOV W1, W28
	0x03258A54 LDR X0, [X8]
	0x03258A58 BL 0x1C16D6C
	0x03258A5C MOV W26, W31
	0x03258A60 STR X0, [X19]
	0x03258A64 LDR X8, [X25 + 0x50]
	0x03258A68 CBZ X8, 0x3258A84
	0x03258A6C LDR W9, [X8 + 0x18]
	0x03258A70 ADD X8, X8, 0x20
	0x03258A74 CMP W9, 0x0
	0x03258A78 CSEL X8, X31, X8, EQ
	0x03258A7C STUR X8, [X29 - 0x10]
	0x03258A80 B 0x3258A88
	0x03258A84 STUR X31, [X29 - 0x10]
	0x03258A88 LDR X8, [X25 + 0x30]
	0x03258A8C CBZ X8, 0x3258AA8
	0x03258A90 LDR W9, [X8 + 0x18]
	0x03258A94 ADD X8, X8, 0x20
	0x03258A98 CMP W9, 0x0
	0x03258A9C CSEL X8, X31, X8, EQ
	0x03258AA0 STUR X8, [X29 - 0x18]
	0x03258AA4 B 0x3258AAC
	0x03258AA8 STUR X31, [X29 - 0x18]
	0x03258AAC LDR X8, [X25 + 0x58]
	0x03258AB0 CBZ X8, 0x3258ACC
	0x03258AB4 LDR W9, [X8 + 0x18]
	0x03258AB8 ADD X8, X8, 0x20
	0x03258ABC CMP W9, 0x0
	0x03258AC0 CSEL X8, X31, X8, EQ
	0x03258AC4 STUR X8, [X29 - 0x20]
	0x03258AC8 B 0x3258AD0
	0x03258ACC STUR X31, [X29 - 0x20]
	0x03258AD0 ADRP X20, 0xECB000
	0x03258AD4 LDR X8, [X25 + 0x38]
	0x03258AD8 LDR X20, [X20 + 0x1A8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move TEMP, X1
	004 And TEMP, TEMP, 1
	005 Compare TEMP, 1
	006 JumpIfNotEqual {56}
	007 Move X19, X0
	008 Move X0, [X0+96]
	009 Compare X0, 0
	010 JumpIfEqual {16}
	011 Move W2, [X0+24]
	012 Move W1, W31
	013 Move X3, X31
	014 Call Array.Clear, X0, X1, X2
	015 Move [X19+96], X31
	016 Move X0, [X19+104]
	017 Compare X0, 0
	018 JumpIfEqual {24}
	019 Move W2, [X0+24]
	020 Move W1, W31
	021 Move X3, X31
	022 Call Array.Clear, X0, X1, X2
	023 Move [X19+104], X31
	024 Move X0, [X19+48]
	025 Compare X0, 0
	026 JumpIfEqual {32}
	027 Move W2, [X0+24]
	028 Move W1, W31
	029 Move X3, X31
	030 Call Array.Clear, X0, X1, X2
	031 Move [X19+48], X31
	032 Move X0, [X19+56]
	033 Compare X0, 0
	034 JumpIfEqual {40}
	035 Move W2, [X0+24]
	036 Move W1, W31
	037 Move X3, X31
	038 Call Array.Clear, X0, X1, X2
	039 Move [X19+56], X31
	040 Move X0, [X19+112]
	041 Compare X0, 0
	042 JumpIfEqual {48}
	043 Move W2, [X0+24]
	044 Move W1, W31
	045 Move X3, X31
	046 Call Array.Clear, X0, X1, X2
	047 Move [X19+112], X31
	048 Move X0, [X19+120]
	049 Compare X0, 0
	050 JumpIfEqual {56}
	051 Move W2, [X0+24]
	052 Move W1, W31
	053 Move X3, X31
	054 Call Array.Clear, X0, X1, X2
	055 Move [X19+120], X31
	056 Move X30, [X31+16]
	057 Move X19, [X31+24]
	058 Return 

Method: System.Int32 get_InputBlockSize()

Disassembly:
	0x03258ADC CBZ X8, 0x3258AF8
	0x03258AE0 LDR W9, [X8 + 0x18]

ISIL:
	001 Move W0, [X0+36]
	002 Return X0

Method: System.Int32 get_OutputBlockSize()

Disassembly:
	0x03258AE4 ADD X8, X8, 0x20
	0x03258AE8 CMP W9, 0x0

ISIL:
	001 Move W0, [X0+40]
	002 Return X0

Method: System.Boolean get_CanTransformMultipleBlocks()

Disassembly:
	0x03258AEC CSEL X8, X31, X8, EQ
	0x03258AF0 STUR X8, [X29 - 0x28]

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Int32 TransformBlock(System.Byte[] inputBuffer, System.Int32 inputOffset, System.Int32 inputCount, System.Byte[] outputBuffer, System.Int32 outputOffset)

Disassembly:
	0x03258AF4 B 0x3258AFC
	0x03258AF8 STUR X31, [X29 - 0x28]
	0x03258AFC LDR X0, [X20]
	0x03258B00 LDR W8, [X0 + 0xE0]
	0x03258B04 CBNZ W8, 0x3258B10
	0x03258B08 BL 0x1C16DFC
	0x03258B0C LDR X0, [X20]
	0x03258B10 LDR X8, [X0 + 0xB8]
	0x03258B14 LDR X9, [X8 + 0x10]
	0x03258B18 CBZ X9, 0x3258B34
	0x03258B1C LDR W10, [X9 + 0x18]
	0x03258B20 ADD X9, X9, 0x20
	0x03258B24 CMP W10, 0x0
	0x03258B28 CSEL X9, X31, X9, EQ
	0x03258B2C STUR X9, [X29 - 0x30]
	0x03258B30 B 0x3258B38
	0x03258B34 STUR X31, [X29 - 0x30]
	0x03258B38 LDR W9, [X0 + 0xE0]
	0x03258B3C CBNZ W9, 0x3258B4C
	0x03258B40 BL 0x1C16DFC
	0x03258B44 LDR X0, [X20]
	0x03258B48 LDR X8, [X0 + 0xB8]
	0x03258B4C LDR X9, [X8 + 0x18]
	0x03258B50 CBZ X9, 0x3258B6C
	0x03258B54 LDR W10, [X9 + 0x18]
	0x03258B58 ADD X9, X9, 0x20
	0x03258B5C CMP W10, 0x0
	0x03258B60 CSEL X9, X31, X9, EQ
	0x03258B64 STUR X9, [X29 - 0x38]
	0x03258B68 B 0x3258B70
	0x03258B6C STUR X31, [X29 - 0x38]
	0x03258B70 LDR W9, [X0 + 0xE0]
	0x03258B74 CBNZ W9, 0x3258B84
	0x03258B78 BL 0x1C16DFC
	0x03258B7C LDR X0, [X20]
	0x03258B80 LDR X8, [X0 + 0xB8]
	0x03258B84 LDR X9, [X8 + 0x20]
	0x03258B88 CBZ X9, 0x3258BA4
	0x03258B8C LDR W10, [X9 + 0x18]
	0x03258B90 ADD X9, X9, 0x20
	0x03258B94 CMP W10, 0x0
	0x03258B98 CSEL X9, X31, X9, EQ
	0x03258B9C STUR X9, [X29 - 0x40]
	0x03258BA0 B 0x3258BA8
	0x03258BA4 STUR X31, [X29 - 0x40]
	0x03258BA8 LDR W9, [X0 + 0xE0]
	0x03258BAC CBNZ W9, 0x3258BBC
	0x03258BB0 BL 0x1C16DFC
	0x03258BB4 LDR X8, [X20]
	0x03258BB8 LDR X8, [X8 + 0xB8]
	0x03258BBC LDR X8, [X8 + 0x28]
	0x03258BC0 STUR W22, [X29 - 0x50]
	0x03258BC4 CBZ X8, 0x3258BE0
	0x03258BC8 LDR W9, [X8 + 0x18]
	0x03258BCC ADD X8, X8, 0x20
	0x03258BD0 CMP W9, 0x0
	0x03258BD4 CSEL X8, X31, X8, EQ
	0x03258BD8 STUR X8, [X29 - 0x48]
	0x03258BDC B 0x3258BE4
	0x03258BE0 STUR X31, [X29 - 0x48]
	0x03258BE4 LDR W22, [X25 + 0x44]
	0x03258BE8 STUR W21, [X29 - 0x4C]
	0x03258BEC SBFM X27, X22, 0x3E, 0x1F
	0x03258BF0 CBZ W22, 0x3258C38
	0x03258BF4 SXTW X8, W22
	0x03258BF8 UBFM X8, X8, 0x3E, 0x3D
	0x03258BFC ADD X8, X8, 0xF
	0x03258C00 ADD X9, X31, 0x0
	0x03258C04 AND X8, X8, 0xFFFFFFFF
	0x03258C08 SUB X21, X9, X8
	0x03258C0C ADD X31, X21, 0x0
	0x03258C10 MOV X0, X21
	0x03258C14 MOV W1, W31
	0x03258C18 MOV X2, X27
	0x03258C1C BL 0x3EB1B10
	0x03258C20 ADD X9, X27, 0xF
	0x03258C24 ADD X8, X31, 0x0
	0x03258C28 AND X9, X9, 0xFFFFFFFF
	0x03258C2C SUB X20, X8, X9
	0x03258C30 ADD X31, X20, 0x0
	0x03258C34 B 0x3258C50
	0x03258C38 MOV X0, X31
	0x03258C3C MOV W1, W31
	0x03258C40 MOV X2, X27
	0x03258C44 BL 0x3EB1B10
	0x03258C48 MOV X21, X31
	0x03258C4C MOV X20, X31
	0x03258C50 MOV X0, X20
	0x03258C54 MOV W1, W31
	0x03258C58 MOV X2, X27
	0x03258C5C BL 0x3EB1B10
	0x03258C60 LDR W8, [X25 + 0x24]
	0x03258C64 SDIV W27, W28, W8
	0x03258C68 CMP W27, 0x1
	0x03258C6C B.LT 0x32591E0
	0x03258C70 STUR W28, [X29 - 0x5C]
	0x03258C74 MOV W28, W31
	0x03258C78 LDR W8, [X25 + 0x10]
	0x03258C7C CMP W8, 0x4
	0x03258C80 B.NE 0x3258D18
	0x03258C84 CMP W22, 0x1
	0x03258C88 B.LT 0x3258DB0
	0x03258C8C LDR X8, [X25 + 0x78]
	0x03258C90 CBZ X8, 0x32593B4
	0x03258C94 LDR W9, [X8 + 0x18]
	0x03258C98 MOV X11, X31
	0x03258C9C MOV X10, X31
	0x03258CA0 CMP W11, W9
	0x03258CA4 B.CS 0x32593B0
	0x03258CA8 ADD X13, X11, 0x1
	0x03258CAC CMP W13, W9
	0x03258CB0 B.CS 0x32593B0
	0x03258CB4 ADD X12, X13, 0x1
	0x03258CB8 CMP W12, W9
	0x03258CBC B.CS 0x32593B0
	0x03258CC0 ADD X12, X12, 0x1
	0x03258CC4 CMP W12, W9
	0x03258CC8 B.CS 0x32593B0
	0x03258CCC ADD X14, X8, W11, SXTW
	0x03258CD0 ADD X13, X8, W13, SXTW
	0x03258CD4 ADD X15, X11, 0x2
	0x03258CD8 LDRB W14, [X14 + 0x20]
	0x03258CDC LDRB W13, [X13 + 0x20]
	0x03258CE0 ADD X17, X8, 0x20
	0x03258CE4 ADD X16, X11, 0x3
	0x03258CE8 LDRB W15, [X17, W15, SXTW]
	0x03258CEC LDRB W16, [X17, W16, SXTW]
	0x03258CF0 BFM W14, W13, 0x18, 0x7
	0x03258CF4 ADD X10, X10, 0x1
	0x03258CF8 BFM W14, W15, 0x10, 0x7
	0x03258CFC BFM W14, W16, 0x8, 0x7
	0x03258D00 STR W14, [X21, X11, LSL]
	0x03258D04 LDRSW X11, [X25 + 0x44]
	0x03258D08 CMP X10, X11
	0x03258D0C ADD X11, X12, 0x1
	0x03258D10 B.LT 0x3258CA0
	0x03258D14 B 0x3258DA4
	0x03258D18 CMP W22, 0x1
	0x03258D1C B.LT 0x3258F74
	0x03258D20 LDR W9, [X24 + 0x18]
	0x03258D24 MOV X8, X31
	0x03258D28 MOV X10, X21
	0x03258D2C MOV W11, W23
	0x03258D30 CMP W11, W9
	0x03258D34 B.CS 0x32593B0
	0x03258D38 ADD W13, W11, 0x1
	0x03258D3C CMP W13, W9
	0x03258D40 B.CS 0x32593B0
	0x03258D44 ADD W12, W13, 0x1
	0x03258D48 CMP W12, W9
	0x03258D4C B.CS 0x32593B0
	0x03258D50 ADD W12, W12, 0x1
	0x03258D54 CMP W12, W9
	0x03258D58 B.CS 0x32593B0
	0x03258D5C ADD X14, X24, W11, SXTW
	0x03258D60 ADD X13, X24, W13, SXTW
	0x03258D64 ADD W15, W11, 0x2
	0x03258D68 LDRB W14, [X14 + 0x20]
	0x03258D6C LDRB W13, [X13 + 0x20]
	0x03258D70 ADD X16, X24, 0x20
	0x03258D74 ADD W11, W11, 0x3
	0x03258D78 LDRB W15, [X16, W15, SXTW]
	0x03258D7C LDRB W11, [X16, W11, SXTW]
	0x03258D80 BFM W14, W13, 0x18, 0x7
	0x03258D84 ADD X8, X8, 0x1
	0x03258D88 BFM W14, W15, 0x10, 0x7
	0x03258D8C BFM W14, W11, 0x8, 0x7
	0x03258D90 STR W14, [X10], #0x4
	0x03258D94 LDRSW X11, [X25 + 0x44]
	0x03258D98 CMP X8, X11
	0x03258D9C ADD W11, W12, 0x1
	0x03258DA0 B.LT 0x3258D30
	0x03258DA4 LDR W8, [X25 + 0x10]
	0x03258DA8 CMP W8, 0x4
	0x03258DAC B.NE 0x3258F74
	0x03258DB0 LDP X2, X1, [X29 - 0x18]
	0x03258DB4 LDP X4, X3, [X29 - 0x38]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x1185000
	011 Move W8, [X25+1286]
	012 Move W22, W5
	013 Move X24, X4
	014 Move W23, W3
	015 Move W20, W2
	016 Move X21, X1
	017 Move X19, X0
	018 Move [X31+8], X4
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0xE9C000
	024 Move X0, [X0+1560]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X25+1286], W8
	028 Compare X21, 0
	029 JumpIfEqual {125}
	030 Compare X24, 0
	031 JumpIfEqual {132}
	032 Move TEMP, X20
	033 And TEMP, TEMP, -2147483648
	034 Compare TEMP, -2147483648
	035 JumpIfEqual {150}
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move W1, [X19+36]
	038 NotImplemented "Instruction SDIV not yet implemented."
	039 NotImplemented "Instruction MSUB not yet implemented."
	040 Compare W8, 0
	041 JumpIfNotEqual {123}
	042 Move W8, [X21+24]
	043 Subtract W8, W8, W23
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move W6, [X19+20]
	046 Move W8, [X19+24]
	047 Compare W8, 0
	048 JumpIfEqual {59}
	049 Or W8, W6, 2
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Add X4, X31, 8
	052 Move X0, X19
	053 Move X1, X21
	054 Move W2, W20
	055 Move W3, W23
	056 Move W5, W22
	057 Move W7, W31
	058 Call RijndaelManagedTransform.DecryptData, X0, X1, X2, X3, X4, X5, X6, X7
	059 Add X4, X31, 8
	060 Move X0, X19
	061 Move X1, X21
	062 Move W2, W20
	063 Move W3, W23
	064 Move W5, W22
	065 Move W7, W31
	066 Call RijndaelManagedTransform.EncryptData, X0, X1, X2, X3, X4, X5, X6, X7
	067 Move X8, [X19+112]
	068 Compare X8, 0
	069 JumpIfEqual {109}
	070 Move W3, [X8+24]
	071 Add X4, X31, 8
	072 Move X0, X19
	073 Move X1, X8
	074 Move W2, W31
	075 Move W5, W22
	076 Move W7, W31
	077 Call RijndaelManagedTransform.DecryptData, X0, X1, X2, X3, X4, X5, X6, X7
	078 Move W4, [X19+36]
	079 Move W8, [X19+40]
	080 Move X2, [X19+112]
	081 Move X0, X21
	082 Move W3, W31
	083 Subtract W23, W23, W4
	084 Add W1, W23, W20
	085 Move X5, X31
	086 Add W22, W8, W22
	087 Call Buffer.InternalBlockCopy, X0, X1, X2, X3, X4
	088 Move W6, [X19+20]
	089 Add X4, X31, 8
	090 Move X0, X19
	091 Move X1, X21
	092 Move W2, W20
	093 Move W3, W23
	094 Move W5, W22
	095 Move W7, W31
	096 Call RijndaelManagedTransform.DecryptData, X0, X1, X2, X3, X4, X5, X6, X7
	097 Move W8, [X19+40]
	098 Add W0, W8, W0
	099 Move X20, [X31+64]
	100 Move X19, [X31+72]
	101 Move X22, [X31+48]
	102 Move X21, [X31+56]
	103 Move X24, [X31+32]
	104 Move X23, [X31+40]
	105 Move X30, [X31+16]
	106 Move X25, [X31+24]
	107 Add X31, X31, 80
	108 Return X0
	109 Move X8, 0xE9C000
	110 Move X8, [X8+1560]
	111 Move X0, [X8]
	112 Call 0x1C17D6C
	113 Move W4, [X19+36]
	114 Move X2, X0
	115 Move [X19+112], X0
	116 Move X0, X21
	117 Subtract W23, W23, W4
	118 Add W1, W23, W20
	119 Move W3, W31
	120 Move X5, X31
	121 Call Buffer.InternalBlockCopy, X0, X1, X2, X3, X4
	122 Move W6, [X19+20]
	123 Move X0, 0xECC000
	124 Move X0, [X0+480]
	125 Move X0, 0xEA1000
	126 Move X0, [X0+1320]
	127 Call 0x1C17D08
	128 Call 0x1C17F10
	129 Move X19, X0
	130 Move X0, 0xECA000
	131 Move X0, [X0+3632]
	132 Move X0, 0xEA1000
	133 Move X0, [X0+1320]
	134 Call 0x1C17D08
	135 Call 0x1C17F10
	136 Move X19, X0
	137 Move X0, 0xECA000
	138 Move X0, [X0+3680]
	139 Call 0x1C17D08
	140 Move X1, X0
	141 Move X0, X19
	142 Move X2, X31
	143 Call ArgumentNullException..ctor, X0, X1
	144 Move X0, 0xECC000
	145 Move X0, [X0+488]
	146 Call 0x1C17D08
	147 Move X1, X0
	148 Move X0, X19
	149 Call 0x1C17DEC
	150 Move X0, 0xEC4000
	151 Move X0, [X0+1648]
	152 Call 0x1C17D08
	153 Move X1, X31
	154 Call Environment.GetResourceString, X0
	155 Move X19, X0
	156 Move X0, 0xEA4000
	157 Move X0, [X0+1888]
	158 Call 0x1C17D08
	159 Call 0x1C17F10
	160 Move X20, X0
	161 Move X0, 0xECA000
	162 Move X0, [X0+3640]
	163 Call 0x1C17D08
	164 Move X1, X0
	165 Move X0, X20
	166 Move X2, X19
	167 Move X3, X31
	168 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	169 Move X0, 0xEC4000
	170 Move X0, [X0+1888]
	171 Call 0x1C17D08
	172 Move X1, X31
	173 Call Environment.GetResourceString, X0
	174 Move X19, X0
	175 Move X0, 0xEA4000
	176 Move X0, [X0+1400]
	177 Call 0x1C17D08
	178 Call 0x1C17F10
	179 Move X1, X19
	180 Move X2, X31
	181 Move X20, X0
	182 Call ArgumentException..ctor, X0, X1
	183 Move X0, 0xECC000
	184 Move X0, [X0+488]
	185 Call 0x1C17D08
	186 Move X1, X0
	187 Move X0, X20
	188 Call 0x1C17DEC

Method: System.Byte[] TransformFinalBlock(System.Byte[] inputBuffer, System.Int32 inputOffset, System.Int32 inputCount)

Disassembly:
	0x0325A40C EOR W28, W25, W28, 0x0
	0x0325A410 ADD W28, W30, W28
	0x0325A414 EOR W30, W27, W24, 0x16
	0x0325A418 EOR W30, W30, W26, 0x0
	0x0325A41C ADD W29, W29, W30
	0x0325A420 ADD W28, W28, W20
	0x0325A424 EXTR W23, W23, W23, 0x16
	0x0325A428 EXTR W22, W22, W22, 0x16
	0x0325A42C EXTR W28, W28, W28, 0x11
	0x0325A430 EXTR W29, W29, W29, 0x17
	0x0325A434 ADD W30, W12, W23
	0x0325A438 ADD W23, W28, W23
	0x0325A43C ADD W28, W22, W4
	0x0325A440 ADD W22, W29, W22
	0x0325A444 ORN W29, W25, W7, 0x16
	0x0325A448 EOR W29, W23, W29, 0x0
	0x0325A44C ADD W29, W30, W29
	0x0325A450 EOR W30, W26, W27, 0x16
	0x0325A454 EOR W30, W30, W22, 0x0
	0x0325A458 ADD W28, W28, W30
	0x0325A45C ADD W29, W29, W20
	0x0325A460 EXTR W21, W21, W21, 0x16
	0x0325A464 EXTR W24, W24, W24, 0x16
	0x0325A468 EXTR W28, W28, W28, 0x15
	0x0325A46C EXTR W29, W29, W29, 0x11
	0x0325A470 ADD W30, W3, W21
	0x0325A474 ADD W28, W28, W24
	0x0325A478 ADD W21, W29, W21
	0x0325A47C EOR W29, W22, W26, 0x16
	0x0325A480 ADD W24, W24, W11
	0x0325A484 EOR W29, W29, W28, 0x0
	0x0325A488 ADD W24, W24, W29
	0x0325A48C ORN W29, W23, W25, 0x16
	0x0325A490 STP W16, W2, [X31 + 0x20]
	0x0325A494 EOR W29, W21, W29, 0x0
	0x0325A498 ADD W29, W30, W29
	0x0325A49C LDR W2, [X31 + 0x20]
	0x0325A4A0 ADD W29, W29, W20
	0x0325A4A4 EXTR W7, W7, W7, 0x16
	0x0325A4A8 EXTR W27, W27, W27, 0x16
	0x0325A4AC EXTR W24, W24, W24, 0x13
	0x0325A4B0 EXTR W29, W29, W29, 0x1B
	0x0325A4B4 ADD W30, W5, W7
	0x0325A4B8 ADD W24, W24, W27
	0x0325A4BC ADD W7, W29, W7
	0x0325A4C0 EOR W29, W28, W22, 0x16
	0x0325A4C4 ADD W27, W27, W2
	0x0325A4C8 EOR W29, W29, W24, 0x0
	0x0325A4CC ADD W27, W27, W29
	0x0325A4D0 ORN W29, W21, W23, 0x16
	0x0325A4D4 EXTR W26, W26, W26, 0x16
	0x0325A4D8 EOR W29, W7, W29, 0x0
	0x0325A4DC EXTR W27, W27, W27, 0x12
	0x0325A4E0 ADD W29, W30, W29
	0x0325A4E4 ADD W30, W26, W12
	0x0325A4E8 ADD W26, W27, W26
	0x0325A4EC EOR W27, W24, W28, 0x16
	0x0325A4F0 EOR W27, W27, W26, 0x0
	0x0325A4F4 ADD W27, W30, W27
	0x0325A4F8 ADD W29, W29, W20
	0x0325A4FC EXTR W25, W25, W25, 0x16
	0x0325A500 EXTR W22, W22, W22, 0x16
	0x0325A504 EXTR W29, W29, W29, 0x19
	0x0325A508 EXTR W27, W27, W27, 0x11
	0x0325A50C ADD W30, W13, W25
	0x0325A510 ADD W25, W29, W25
	0x0325A514 ADD W29, W22, W0
	0x0325A518 ADD W22, W27, W22
	0x0325A51C ORN W27, W7, W21, 0x16
	0x0325A520 EOR W27, W25, W27, 0x0
	0x0325A524 MOV W16, W1
	0x0325A528 ADD W27, W30, W27
	0x0325A52C EOR W30, W26, W24, 0x16
	0x0325A530 LDR W1, [X31 + 0x24]
	0x0325A534 EOR W30, W30, W22, 0x0
	0x0325A538 ADD W29, W29, W30
	0x0325A53C ADD W27, W27, W20
	0x0325A540 MOV W17, W8
	0x0325A544 MOV W8, W5
	0x0325A548 EXTR W23, W23, W23, 0x16
	0x0325A54C EXTR W28, W28, W28, 0x16
	0x0325A550 EXTR W27, W27, W27, 0x19
	0x0325A554 EXTR W29, W29, W29, 0x1A
	0x0325A558 ADD W30, W1, W23
	0x0325A55C ADD W23, W27, W23
	0x0325A560 ADD W27, W28, W8
	0x0325A564 ADD W28, W29, W28
	0x0325A568 ORN W29, W25, W7, 0x16
	0x0325A56C EOR W29, W23, W29, 0x0
	0x0325A570 ADD W29, W30, W29
	0x0325A574 EOR W30, W22, W26, 0x16
	0x0325A578 EOR W30, W30, W28, 0x0
	0x0325A57C ADD W27, W27, W30
	0x0325A580 ADD W29, W29, W20
	0x0325A584 EXTR W21, W21, W21, 0x16
	0x0325A588 EXTR W24, W24, W24, 0x16
	0x0325A58C EXTR W27, W27, W27, 0x19
	0x0325A590 EXTR W29, W29, W29, 0x18
	0x0325A594 ADD W30, W4, W21
	0x0325A598 ADD W27, W27, W24
	0x0325A59C ADD W21, W29, W21
	0x0325A5A0 EOR W29, W28, W22, 0x16
	0x0325A5A4 ADD W24, W24, W19
	0x0325A5A8 EOR W29, W29, W27, 0x0
	0x0325A5AC ADD W24, W24, W29
	0x0325A5B0 ORN W29, W23, W25, 0x16
	0x0325A5B4 EOR W29, W21, W29, 0x0
	0x0325A5B8 ADD W29, W30, W29
	0x0325A5BC ADD W29, W29, W20
	0x0325A5C0 EXTR W7, W7, W7, 0x16
	0x0325A5C4 EXTR W26, W26, W26, 0x16
	0x0325A5C8 EXTR W24, W24, W24, 0x17
	0x0325A5CC EXTR W29, W29, W29, 0x15
	0x0325A5D0 ADD W30, W14, W7
	0x0325A5D4 ADD W24, W24, W26
	0x0325A5D8 ADD W7, W29, W7
	0x0325A5DC EOR W29, W27, W28, 0x16
	0x0325A5E0 ADD W26, W26, W1
	0x0325A5E4 EOR W29, W29, W24, 0x0
	0x0325A5E8 ADD W26, W26, W29
	0x0325A5EC ORN W29, W21, W23, 0x16
	0x0325A5F0 EOR W29, W7, W29, 0x0
	0x0325A5F4 EXTR W22, W22, W22, 0x16
	0x0325A5F8 ADD W29, W30, W29
	0x0325A5FC EXTR W26, W26, W26, 0x18
	0x0325A600 ADD W30, W16, W22
	0x0325A604 ADD W22, W26, W22
	0x0325A608 ADD W29, W29, W20
	0x0325A60C EXTR W25, W25, W25, 0x16
	0x0325A610 AND W26, W22, W24, 0x0
	0x0325A614 EXTR W29, W29, W29, 0x12
	0x0325A618 ADD W26, W30, W26
	0x0325A61C ADD W30, W2, W25
	0x0325A620 ADD W25, W29, W25
	0x0325A624 ORN W29, W31, W22, 0x0
	0x0325A628 AND W29, W29, W27, 0x16
	0x0325A62C MOVZ W6, 0x7999
	0x0325A630 ADD W26, W26, W29
	0x0325A634 ORN W29, W7, W21, 0x16
	0x0325A638 MOVK W6, 0x5A820000
	0x0325A63C EOR W29, W25, W29, 0x0
	0x0325A640 ADD W29, W30, W29
	0x0325A644 ADD W26, W26, W6
	0x0325A648 EXTR W28, W28, W28, 0x16
	0x0325A64C EXTR W26, W26, W26, 0x19
	0x0325A650 ADD W29, W29, W20
	0x0325A654 EXTR W23, W23, W23, 0x16
	0x0325A658 ADD W26, W26, W28
	0x0325A65C EXTR W29, W29, W29, 0x12
	0x0325A660 ADD W30, W9, W23
	0x0325A664 ADD W28, W3, W28
	0x0325A668 ADD W23, W29, W23
	0x0325A66C AND W29, W26, W22, 0x0
	0x0325A670 ADD W28, W28, W29
	0x0325A674 ORN W29, W31, W26, 0x0
	0x0325A678 AND W29, W29, W24, 0x16
	0x0325A67C ADD W28, W28, W29
	0x0325A680 ORN W29, W25, W7, 0x16
	0x0325A684 EOR W29, W23, W29, 0x0
	0x0325A688 ADD W29, W30, W29
	0x0325A68C ADD W28, W28, W6
	0x0325A690 EXTR W27, W27, W27, 0x16
	0x0325A694 EXTR W28, W28, W28, 0x1A
	0x0325A698 ADD W29, W29, W20
	0x0325A69C EXTR W21, W21, W21, 0x16
	0x0325A6A0 ADD W30, W8, W27
	0x0325A6A4 ADD W27, W28, W27
	0x0325A6A8 EXTR W29, W29, W29, 0x14
	0x0325A6AC ADD W28, W0, W21
	0x0325A6B0 ADD W21, W29, W21
	0x0325A6B4 AND W29, W27, W26, 0x0
	0x0325A6B8 ADD W29, W30, W29
	0x0325A6BC ORN W30, W23, W25, 0x16
	0x0325A6C0 EXTR W7, W7, W7, 0x16
	0x0325A6C4 EOR W30, W21, W30, 0x0
	0x0325A6C8 STR W10, [X31 + 0x14]
	0x0325A6CC MOV W10, W11
	0x0325A6D0 MOV W11, W9
	0x0325A6D4 MOV W9, W8
	0x0325A6D8 STR W8, [X31 + 0x18]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X23, 0x1183000
	010 Move W8, [X23+1287]
	011 Move W20, W3
	012 Move W21, W2
	013 Move X22, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xE9A000
	020 Move X0, [X0+1560]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X23+1287], W8
	024 Move [X31+40], X31
	025 Move [X31+16], X31
	026 Move [X31+24], X31
	027 Compare X22, 0
	028 JumpIfEqual {126}
	029 Move TEMP, X21
	030 And TEMP, TEMP, -2147483648
	031 Compare TEMP, -2147483648
	032 JumpIfEqual {144}
	033 Move TEMP, X20
	034 And TEMP, TEMP, -2147483648
	035 Compare TEMP, -2147483648
	036 JumpIfEqual {123}
	037 Move W8, [X22+24]
	038 Subtract W8, W8, W20
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move W8, [X19+24]
	041 Compare W8, 0
	042 JumpIfEqual {89}
	043 Move W8, [X19+36]
	044 NotImplemented "Instruction SDIV not yet implemented."
	045 NotImplemented "Instruction MSUB not yet implemented."
	046 Compare W8, 0
	047 JumpIfNotEqual {183}
	048 Move X8, [X19+112]
	049 Compare X8, 0
	050 JumpIfEqual {100}
	051 Move X9, 0xE9A000
	052 Move X9, [X9+1560]
	053 Move W8, [X8+24]
	054 Move X0, [X9]
	055 Add W1, W8, W20
	056 Call 0x1C17D6C
	057 Move X8, [X19+112]
	058 Compare X8, 0
	059 JumpIfEqual {125}
	060 Move W4, [X8+24]
	061 Move X23, X0
	062 Move X0, X8
	063 Move W1, W31
	064 Move X2, X23
	065 Move W3, W31
	066 Move X5, X31
	067 Call Buffer.InternalBlockCopy, X0, X1, X2, X3, X4
	068 Move X8, [X19+112]
	069 Compare X8, 0
	070 JumpIfEqual {125}
	071 Move W3, [X8+24]
	072 Move X0, X22
	073 Move W1, W21
	074 Move X2, X23
	075 Move W4, W20
	076 Move X5, X31
	077 Call Buffer.InternalBlockCopy, X0, X1, X2, X3, X4
	078 Move [X31+16], X31
	079 Compare X23, 0
	080 JumpIfEqual {125}
	081 Move W6, [X19+20]
	082 Move W3, [X23+24]
	083 Add X4, X31, 16
	084 Move W7, 1
	085 Add X24, X31, 16
	086 Move X0, X19
	087 Move X1, X23
	088 Move W2, W31
	089 Move [X31+40], X31
	090 Move W6, [X19+20]
	091 Add X4, X31, 40
	092 Move W7, 1
	093 Move X0, X19
	094 Move X1, X22
	095 Move W2, W21
	096 Move W3, W20
	097 Move W5, W31
	098 Add X24, X31, 40
	099 Call RijndaelManagedTransform.EncryptData, X0, X1, X2, X3, X4, X5, X6, X7
	100 Move [X31+24], X31
	101 Move W6, [X19+20]
	102 Add X4, X31, 24
	103 Move W7, 1
	104 Add X24, X31, 24
	105 Move X0, X19
	106 Move X1, X22
	107 Move W2, W21
	108 Move W3, W20
	109 Move W5, W31
	110 Call RijndaelManagedTransform.DecryptData, X0, X1, X2, X3, X4, X5, X6, X7
	111 Move X0, X19
	112 Call RijndaelManagedTransform.Reset, X0
	113 Move X0, [X24]
	114 Move X20, [X31+80]
	115 Move X19, [X31+88]
	116 Move X22, [X31+64]
	117 Move X21, [X31+72]
	118 Move X24, [X31+48]
	119 Move X23, [X31+56]
	120 Move X30, [X31+32]
	121 Add X31, X31, 96
	122 Return X0
	123 Move X0, 0xECA000
	124 Move X0, [X0+480]
	125 Call 0x1C17F20
	126 Move X0, 0xE9F000
	127 Move X0, [X0+1320]
	128 Call 0x1C17D08
	129 Call 0x1C17F10
	130 Move X19, X0
	131 Move X0, 0xEC8000
	132 Move X0, [X0+3632]
	133 Call 0x1C17D08
	134 Move X1, X0
	135 Move X0, X19
	136 Move X2, X31
	137 Call ArgumentNullException..ctor, X0, X1
	138 Move X0, 0xECA000
	139 Move X0, [X0+536]
	140 Call 0x1C17D08
	141 Move X1, X0
	142 Move X0, X19
	143 Call 0x1C17DEC
	144 Move X0, 0xEC2000
	145 Move X0, [X0+1648]
	146 Call 0x1C17D08
	147 Move X1, X31
	148 Call Environment.GetResourceString, X0
	149 Move X19, X0
	150 Move X0, 0xEA2000
	151 Move X0, [X0+1888]
	152 Call 0x1C17D08
	153 Call 0x1C17F10
	154 Move X20, X0
	155 Move X0, 0xEC8000
	156 Move X0, [X0+3640]
	157 Call 0x1C17D08
	158 Move X1, X0
	159 Move X0, X20
	160 Move X2, X19
	161 Move X3, X31
	162 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	163 Move X0, 0xEC2000
	164 Move X0, [X0+1888]
	165 Call 0x1C17D08
	166 Move X1, X31
	167 Call Environment.GetResourceString, X0
	168 Move X19, X0
	169 Move X0, 0xEA2000
	170 Move X0, [X0+1400]
	171 Call 0x1C17D08
	172 Call 0x1C17F10
	173 Move X1, X19
	174 Move X2, X31
	175 Move X20, X0
	176 Call ArgumentException..ctor, X0, X1
	177 Move X0, 0xECA000
	178 Move X0, [X0+536]
	179 Call 0x1C17D08
	180 Move X1, X0
	181 Move X0, X20
	182 Call 0x1C17DEC
	183 Move X0, 0xECA000
	184 Move X0, [X0+544]
	185 Call 0x1C17D08
	186 Move X1, X31
	187 Call Environment.GetResourceString, X0
	188 Move X19, X0
	189 Move X0, 0xEC7000
	190 Move X0, [X0+3296]
	191 Call 0x1C17D08
	192 Call 0x1C17F10
	193 Move X1, X19
	194 Move X2, X31
	195 Move X20, X0
	196 Call CryptographicException..ctor, X0, X1

Method: System.Void Reset()

Disassembly:
	0x0325A6DC ADD W28, W28, W30
	0x0325A6E0 ADD W30, W13, W7
	0x0325A6E4 BIC W8, W21, W23, 0x16
	0x0325A6E8 ADD W8, W30, W8
	0x0325A6EC ORN W30, W31, W27, 0x0
	0x0325A6F0 AND W30, W30, W22, 0x16
	0x0325A6F4 ADD W29, W29, W30
	0x0325A6F8 ADD W20, W28, W20
	0x0325A6FC EXTR W20, W20, W20, 0x1A
	0x0325A700 ADD W29, W29, W6
	0x0325A704 EXTR W24, W24, W24, 0x16
	0x0325A708 ADD W7, W20, W7
	0x0325A70C EXTR W29, W29, W29, 0x18
	0x0325A710 MOV W5, W12
	0x0325A714 ADD W28, W14, W24
	0x0325A718 EXTR W25, W25, W25, 0x16
	0x0325A71C ADD W24, W29, W24
	0x0325A720 AND W29, W7, W23, 0x16
	0x0325A724 ADD W20, W5, W25
	0x0325A728 ADD W8, W8, W29
	0x0325A72C BIC W29, W7, W21, 0x16
	0x0325A730 ADD W29, W20, W29
	0x0325A734 AND W20, W24, W27, 0x0
	0x0325A738 ADD W20, W28, W20
	0x0325A73C ORN W28, W31, W24, 0x0
	0x0325A740 AND W28, W28, W26, 0x16

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+16]
	004 Move X19, X0
	005 Move [X0+112], X31
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X0, [X19+96]
	008 Move X2, [X19+104]
	009 Move W4, [X19+32]
	010 Move W1, W31
	011 Move W3, W31
	012 Move X5, X31
	013 Call Buffer.InternalBlockCopy, X0, X1, X2, X3, X4
	014 Move W8, [X19+16]
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move W8, [X19+68]
	017 Move X0, [X19+96]
	018 Move X2, [X19+120]
	019 Move W1, W31
	020 Move W4, W8
	021 ShiftRight W4, 30
	022 And W4, W4, 0x1FFFFFFF
	023 Move W3, W31
	024 Move X5, X31
	025 Move X30, [X31+16]
	026 Move X19, [X31+24]
	027 Call Buffer.InternalBlockCopy, X0, X1, X2, X3, X4
	028 Return 
	029 Move X30, [X31+16]
	030 Move X19, [X31+24]
	031 Return 

Method: System.Int32 EncryptData(System.Byte[] inputBuffer, System.Int32 inputOffset, System.Int32 inputCount, ref System.Byte[] outputBuffer, System.Int32 outputOffset, System.Security.Cryptography.PaddingMode paddingMode, System.Boolean fLast)

Disassembly:
	0x03258DB8 MOV X0, X25
	0x03258DBC MOV X5, X21
	0x03258DC0 MOV X6, X20
	0x03258DC4 BL 0x3259744
	0x03258DC8 LDR W8, [X25 + 0x44]
	0x03258DCC CMP W8, 0x1
	0x03258DD0 B.LT 0x3259150
	0x03258DD4 MOV X8, X31
	0x03258DD8 MOV X9, X31
	0x03258DDC SXTW X10, W23
	0x03258DE0 ADD X11, X24, W23, SXTW
	0x03258DE4 MOV W12, W23
	0x03258DE8 MOV W13, W26
	0x03258DEC LDR W14, [X25 + 0x24]
	0x03258DF0 ADD X15, X10, X8
	0x03258DF4 ADD W14, W14, W23
	0x03258DF8 CMP X15, W14, SXTW
	0x03258DFC B.GE 0x3258F6C
	0x03258E00 LDR W14, [X24 + 0x18]
	0x03258E04 ADD W16, W12, W8
	0x03258E08 CMP W16, W14
	0x03258E0C B.CS 0x32593B0
	0x03258E10 LDR X16, [X19]
	0x03258E14 CBZ X16, 0x32593B4
	0x03258E18 LDR W17, [X16 + 0x18]
	0x03258E1C ADD X14, X13, X8
	0x03258E20 CMP W14, W17
	0x03258E24 B.CS 0x32593B0
	0x03258E28 ADD X0, X11, X8
	0x03258E2C LDR W17, [X20, X8, LSL]
	0x03258E30 LDRB W0, [X0 + 0x20]
	0x03258E34 ADD X16, X16, W14, SXTW
	0x03258E38 ADD X15, X15, 0x1
	0x03258E3C EOR W17, W0, W17, 0x0
	0x03258E40 STRB W17, [X16 + 0x20]
	0x03258E44 LDR W16, [X25 + 0x24]
	0x03258E48 ADD W16, W16, W23
	0x03258E4C CMP X15, W16, SXTW
	0x03258E50 B.GE 0x3259130
	0x03258E54 LDR W15, [X24 + 0x18]
	0x03258E58 ADD W16, W12, W8
	0x03258E5C ADD W16, W16, 0x1
	0x03258E60 CMP W16, W15
	0x03258E64 B.CS 0x32593B0
	0x03258E68 LDR X15, [X19]
	0x03258E6C CBZ X15, 0x32593B4
	0x03258E70 LDR W16, [X15 + 0x18]
	0x03258E74 ADD X14, X14, 0x1
	0x03258E78 CMP W14, W16
	0x03258E7C B.CS 0x32593B0
	0x03258E80 ADD X17, X11, X8
	0x03258E84 LDR W16, [X20, X8, LSL]
	0x03258E88 LDRB W17, [X17 + 0x21]
	0x03258E8C ADD X14, X15, W14, SXTW
	0x03258E90 ADD X15, X10, X8
	0x03258E94 ADD X15, X15, 0x2
	0x03258E98 EOR W16, W17, W16, 0x8
	0x03258E9C STRB W16, [X14 + 0x20]
	0x03258EA0 LDR W14, [X25 + 0x24]
	0x03258EA4 ADD W14, W14, W23
	0x03258EA8 CMP X15, W14, SXTW
	0x03258EAC B.GE 0x325913C
	0x03258EB0 LDR W14, [X24 + 0x18]
	0x03258EB4 ADD W15, W12, W8
	0x03258EB8 ADD W15, W15, 0x2
	0x03258EBC CMP W15, W14
	0x03258EC0 B.CS 0x32593B0
	0x03258EC4 LDR X14, [X19]
	0x03258EC8 CBZ X14, 0x32593B4
	0x03258ECC LDR W16, [X14 + 0x18]
	0x03258ED0 ADD X15, X13, X8
	0x03258ED4 ADD X15, X15, 0x2
	0x03258ED8 CMP W15, W16
	0x03258EDC B.CS 0x32593B0
	0x03258EE0 ADD X17, X11, X8
	0x03258EE4 LDR W16, [X20, X8, LSL]
	0x03258EE8 LDRB W17, [X17 + 0x22]
	0x03258EEC ADD X14, X14, W15, SXTW
	0x03258EF0 ADD X15, X10, X8
	0x03258EF4 ADD X15, X15, 0x3
	0x03258EF8 EOR W16, W17, W16, 0x10
	0x03258EFC STRB W16, [X14 + 0x20]
	0x03258F00 LDR W14, [X25 + 0x24]
	0x03258F04 ADD W14, W14, W23
	0x03258F08 CMP X15, W14, SXTW
	0x03258F0C B.GE 0x3259148
	0x03258F10 LDR W14, [X24 + 0x18]
	0x03258F14 ADD W15, W12, W8
	0x03258F18 ADD W15, W15, 0x3
	0x03258F1C CMP W15, W14
	0x03258F20 B.CS 0x32593B0
	0x03258F24 LDR X14, [X19]
	0x03258F28 CBZ X14, 0x32593B4
	0x03258F2C LDR W16, [X14 + 0x18]
	0x03258F30 ADD X15, X13, X8
	0x03258F34 ADD X15, X15, 0x3
	0x03258F38 CMP W15, W16
	0x03258F3C B.CS 0x32593B0
	0x03258F40 ADD X17, X11, X8
	0x03258F44 LDR W16, [X20, X8, LSL]
	0x03258F48 LDRB W17, [X17 + 0x23]
	0x03258F4C ADD X14, X14, W15, SXTW
	0x03258F50 ADD X9, X9, 0x1
	0x03258F54 ADD X8, X8, 0x4
	0x03258F58 EOR W16, W17, W16, 0x18
	0x03258F5C STRB W16, [X14 + 0x20]
	0x03258F60 LDRSW X14, [X25 + 0x44]
	0x03258F64 CMP X9, X14
	0x03258F68 B.LT 0x3258DEC
	0x03258F6C ADD W26, W26, W8
	0x03258F70 B 0x3259150
	0x03258F74 LDP X2, X1, [X29 - 0x28]
	0x03258F78 LDP X4, X3, [X29 - 0x48]
	0x03258F7C MOV X0, X25
	0x03258F80 MOV X5, X21
	0x03258F84 MOV X6, X20
	0x03258F88 BL 0x3259910
	0x03258F8C LDR W8, [X25 + 0x10]
	0x03258F90 LDR W13, [X25 + 0x44]
	0x03258F94 CMP W8, 0x1
	0x03258F98 B.NE 0x3259060
	0x03258F9C CMP W13, 0x1
	0x03258FA0 B.LT 0x32591C0
	0x03258FA4 LDR X8, [X25 + 0x68]
	0x03258FA8 CBZ X8, 0x32593B4
	0x03258FAC LDR W10, [X8 + 0x18]
	0x03258FB0 MOV X9, X31
	0x03258FB4 MOV W11, W23
	0x03258FB8 MOVZ W12, 0x20
	0x03258FBC CMP X9, X10
	0x03258FC0 B.CS 0x32593B0
	0x03258FC4 ADD X13, X20, X12
	0x03258FC8 LDUR W14, [X13 - 0x20]
	0x03258FCC LDR W15, [X8, X12, LSL]
	0x03258FD0 EOR W14, W15, W14, 0x0
	0x03258FD4 STUR W14, [X13 - 0x20]
	0x03258FD8 LDR W15, [X24 + 0x18]
	0x03258FDC ADD X14, X11, X12
	0x03258FE0 SUB X13, X14, 0x20
	0x03258FE4 CMP W13, W15
	0x03258FE8 B.CS 0x32593B0
	0x03258FEC ADD X16, X13, 0x1
	0x03258FF0 CMP W16, W15
	0x03258FF4 B.CS 0x32593B0
	0x03258FF8 ADD X16, X16, 0x1
	0x03258FFC CMP W16, W15
	0x03259000 B.CS 0x32593B0
	0x03259004 ADD W16, W16, 0x1
	0x03259008 CMP W16, W15
	0x0325900C B.CS 0x32593B0
	0x03259010 SUB X14, X14, 0x1F
	0x03259014 ADD X13, X24, W13, SXTW
	0x03259018 ADD X15, X11, X12
	0x0325901C ADD X14, X24, W14, SXTW
	0x03259020 LDRB W13, [X13 + 0x20]
	0x03259024 SUB X16, X15, 0x1E
	0x03259028 LDRB W14, [X14 + 0x20]
	0x0325902C ADD X17, X24, 0x20
	0x03259030 SUB X15, X15, 0x1D
	0x03259034 LDRB W16, [X17, W16, SXTW]
	0x03259038 LDRB W15, [X17, W15, SXTW]
	0x0325903C BFM W13, W14, 0x18, 0x7
	0x03259040 ADD X9, X9, 0x1
	0x03259044 BFM W13, W16, 0x10, 0x7
	0x03259048 BFM W13, W15, 0x8, 0x7
	0x0325904C STR W13, [X8, X12, LSL]
	0x03259050 LDRSW X13, [X25 + 0x44]
	0x03259054 ADD X12, X12, 0x4
	0x03259058 CMP X9, X13
	0x0325905C B.LT 0x3258FBC
	0x03259060 CMP W13, 0x1
	0x03259064 B.LT 0x32591C0
	0x03259068 MOV X8, X31
	0x0325906C MOV X9, X20
	0x03259070 LDR X11, [X19]
	0x03259074 CBZ X11, 0x32593B4
	0x03259078 LDR W12, [X11 + 0x18]
	0x0325907C MOV W10, W26
	0x03259080 CMP W26, W12
	0x03259084 B.CS 0x32593B0
	0x03259088 LDR W12, [X9]
	0x0325908C ADD X11, X11, W10, SXTW
	0x03259090 STRB W12, [X11 + 0x20]
	0x03259094 LDR X12, [X19]
	0x03259098 CBZ X12, 0x32593B4
	0x0325909C LDR W13, [X12 + 0x18]
	0x032590A0 ADD W11, W10, 0x1
	0x032590A4 CMP W11, W13
	0x032590A8 B.CS 0x32593B0
	0x032590AC LDR W13, [X9]
	0x032590B0 ADD W14, W10, 0x1
	0x032590B4 ADD X12, X12, W14, SXTW
	0x032590B8 UBFM W13, W13, 0x8, 0x1F
	0x032590BC STRB W13, [X12 + 0x20]
	0x032590C0 LDR X12, [X19]
	0x032590C4 CBZ X12, 0x32593B4
	0x032590C8 LDR W13, [X12 + 0x18]
	0x032590CC ADD W11, W11, 0x1
	0x032590D0 CMP W11, W13
	0x032590D4 B.CS 0x32593B0
	0x032590D8 LDRH W13, [X9 + 0x2]
	0x032590DC ADD W14, W10, 0x2
	0x032590E0 ADD X12, X12, W14, SXTW
	0x032590E4 STRB W13, [X12 + 0x20]
	0x032590E8 LDR X12, [X19]
	0x032590EC CBZ X12, 0x32593B4
	0x032590F0 LDR W13, [X12 + 0x18]
	0x032590F4 ADD W11, W11, 0x1
	0x032590F8 CMP W11, W13
	0x032590FC B.CS 0x32593B0
	0x03259100 LDRB W13, [X9 + 0x3]
	0x03259104 ADD W14, W10, 0x3
	0x03259108 ADD X12, X12, W14, SXTW
	0x0325910C ADD X8, X8, 0x1
	0x03259110 STRB W13, [X12 + 0x20]
	0x03259114 LDRSW X12, [X25 + 0x44]
	0x03259118 ADD X9, X9, 0x4
	0x0325911C ADD W26, W11, 0x1
	0x03259120 CMP X8, X12
	0x03259124 B.LT 0x3259070
	0x03259128 ADD W26, W10, 0x4
	0x0325912C B 0x32591C0
	0x03259130 ADD W8, W26, W8
	0x03259134 ADD W26, W8, 0x1
	0x03259138 B 0x3259150
	0x0325913C ADD W8, W26, W8
	0x03259140 ADD W26, W8, 0x2
	0x03259144 B 0x3259150
	0x03259148 ADD W8, W26, W8
	0x0325914C ADD W26, W8, 0x3
	0x03259150 LDP W8, W4, [X25 + 0x20]
	0x03259154 SUB W3, W8, W4
	0x03259158 CMP W3, 0x1
	0x0325915C B.LT 0x32591AC
	0x03259160 MOV X8, X31
	0x03259164 LDR X9, [X25 + 0x78]
	0x03259168 CBZ X9, 0x32593B4
	0x0325916C LDR X11, [X9 + 0x18]
	0x03259170 ADD X10, X8, W4, UXTW
	0x03259174 CMP W10, W11
	0x03259178 B.CS 0x32593B0
	0x0325917C AND X11, X11, 0x0
	0x03259180 CMP X8, X11
	0x03259184 B.CS 0x32593B0
	0x03259188 ADD X10, X9, W10, SXTW
	0x0325918C LDRB W10, [X10 + 0x20]
	0x03259190 ADD X9, X9, X8
	0x03259194 ADD X8, X8, 0x1
	0x03259198 STRB W10, [X9 + 0x20]
	0x0325919C LDP W9, W4, [X25 + 0x20]
	0x032591A0 SUB W3, W9, W4
	0x032591A4 CMP X8, W3, SXTW
	0x032591A8 B.LT 0x3259164
	0x032591AC LDR X2, [X25 + 0x78]
	0x032591B0 MOV X0, X24
	0x032591B4 MOV W1, W23
	0x032591B8 MOV X5, X31
	0x032591BC BL 0x33A8750
	0x032591C0 LDR W8, [X25 + 0x24]
	0x032591C4 ADD W28, W28, 0x1
	0x032591C8 CMP W28, W27
	0x032591CC B.EQ 0x32591DC
	0x032591D0 LDR W22, [X25 + 0x44]
	0x032591D4 ADD W23, W8, W23
	0x032591D8 B 0x3258C78
	0x032591DC LDUR W28, [X29 - 0x5C]
	0x032591E0 LDP W10, W9, [X29 - 0x50]
	0x032591E4 TBZ X10, 0x0, 0x3259378
	0x032591E8 LDR X20, [X19]
	0x032591EC CMP W9, 0x5
	0x032591F0 B.EQ 0x32592FC
	0x032591F4 CMP W9, 0x4
	0x032591F8 B.EQ 0x325926C
	0x032591FC CMP W9, 0x2
	0x03259200 B.NE 0x325936C
	0x03259204 CBZ W28, 0x32593B8
	0x03259208 CBZ X20, 0x32593B4
	0x0325920C LDR W9, [X20 + 0x18]
	0x03259210 SUB W10, W28, 0x1
	0x03259214 CMP W10, W9
	0x03259218 B.CS 0x32593B0
	0x0325921C ADD X11, X20, W10, SXTW
	0x03259220 LDRB W21, [X11 + 0x20]
	0x03259224 SUBS W1, W9, W21
	0x03259228 B.LT 0x32593B8
	0x0325922C CBZ W21, 0x32593B8
	0x03259230 CMP W8, W21
	0x03259234 B.LT 0x32593B8
	0x03259238 MOV X8, X31
	0x0325923C MOV W10, W10
	0x03259240 ADD X11, X10, X8
	0x03259244 CMP W11, W9
	0x03259248 B.CS 0x32593B0
	0x0325924C ADD X11, X20, W11, SXTW
	0x03259250 LDRB W11, [X11 + 0x20]
	0x03259254 CMP W11, W21
	0x03259258 B.NE 0x32593B8
	0x0325925C SUB X8, X8, 0x1
	0x03259260 ADDS X31, X21, X8
	0x03259264 B.NE 0x3259240
	0x03259268 B 0x3259330
	0x0325926C CBZ W28, 0x32593B8
	0x03259270 CBZ X20, 0x32593B4
	0x03259274 LDR W9, [X20 + 0x18]
	0x03259278 SUB W10, W28, 0x1
	0x0325927C CMP W10, W9
	0x03259280 B.CS 0x32593B0
	0x03259284 ADD X10, X20, W10, SXTW
	0x03259288 LDRB W21, [X10 + 0x20]
	0x0325928C SUBS W1, W9, W21
	0x03259290 B.LT 0x32593B8
	0x03259294 CBZ W21, 0x32593B8
	0x03259298 CMP W8, W21
	0x0325929C B.LT 0x32593B8
	0x032592A0 CMP W21, 0x2
	0x032592A4 B.CC 0x32592DC
	0x032592A8 CMP W21, 0x2
	0x032592AC MOVZ W8, 0x3
	0x032592B0 CSINC X10, X8, X21, EQ
	0x032592B4 SUB W8, W28, 0x2
	0x032592B8 SUB X10, X10, 0x2
	0x032592BC CMP W8, W9
	0x032592C0 B.CS 0x32593B0
	0x032592C4 ADD X11, X20, W8, SXTW
	0x032592C8 LDRB W11, [X11 + 0x20]
	0x032592CC CBNZ W11, 0x32593B8
	0x032592D0 SUBS X10, X10, 0x1
	0x032592D4 SUB W8, W8, 0x1
	0x032592D8 B.NE 0x32592BC
	0x032592DC ADRP X8, 0xE9A000
	0x032592E0 LDR X8, [X8 + 0x618]
	0x032592E4 LDR X0, [X8]
	0x032592E8 BL 0x1C16D6C
	0x032592EC LDR X8, [X19]
	0x032592F0 CBZ X8, 0x32593B4
	0x032592F4 MOV X20, X0
	0x032592F8 B 0x325934C
	0x032592FC CBZ W28, 0x32593B8
	0x03259300 CBZ X20, 0x32593B4
	0x03259304 LDR W9, [X20 + 0x18]
	0x03259308 SUB W10, W28, 0x1
	0x0325930C CMP W10, W9
	0x03259310 B.CS 0x32593B0
	0x03259314 ADD X10, X20, W10, SXTW
	0x03259318 LDRB W21, [X10 + 0x20]
	0x0325931C SUBS W1, W9, W21
	0x03259320 B.LT 0x32593B8
	0x03259324 CBZ W21, 0x32593B8
	0x03259328 CMP W8, W21
	0x0325932C B.LT 0x32593B8
	0x03259330 ADRP X8, 0xE9A000
	0x03259334 LDR X8, [X8 + 0x618]
	0x03259338 LDR X0, [X8]
	0x0325933C BL 0x1C16D6C
	0x03259340 LDR X8, [X19]
	0x03259344 CBZ X8, 0x32593B4
	0x03259348 MOV X20, X0
	0x0325934C LDR W9, [X8 + 0x18]
	0x03259350 MOV X0, X8
	0x03259354 MOV W1, W31
	0x03259358 MOV X2, X20
	0x0325935C SUB W4, W9, W21
	0x03259360 MOV W3, W31
	0x03259364 MOV X5, X31
	0x03259368 BL 0x33A8750
	0x0325936C STR X20, [X19]
	0x03259370 CBZ X20, 0x32593B4
	0x03259374 LDR W28, [X20 + 0x18]
	0x03259378 LDUR X8, [X29 - 0x58]
	0x0325937C LDR X8, [X8 + 0x28]
	0x03259380 LDUR X9, [X29 - 0x8]
	0x03259384 CMP X8, X9
	0x03259388 B.NE 0x3259408
	0x0325938C MOV W0, W28
	0x03259390 ADD X31, X29, 0x0
	0x03259394 LDP X20, X19, [X31 + 0x50]
	0x03259398 LDP X22, X21, [X31 + 0x40]
	0x0325939C LDP X24, X23, [X31 + 0x30]
	0x032593A0 LDP X26, X25, [X31 + 0x20]
	0x032593A4 LDP X28, X27, [X31 + 0x10]
	0x032593A8 LDP X29, X30, [X31], #0x60
	0x032593AC RET
	0x032593B0 BL 0x1C16F28
	0x032593B4 BL 0x1C16F20
	0x032593B8 ADRP X0, 0xECA000
	0x032593BC LDR X0, [X0 + 0x210]
	0x032593C0 BL 0x1C16D08
	0x032593C4 MOV X1, X31
	0x032593C8 BL 0x33BDD84
	0x032593CC MOV X19, X0
	0x032593D0 ADRP X0, 0xEC7000
	0x032593D4 LDR X0, [X0 + 0xCE0]
	0x032593D8 BL 0x1C16D08
	0x032593DC BL 0x1C16F10
	0x032593E0 MOV X1, X19
	0x032593E4 MOV X2, X31
	0x032593E8 MOV X20, X0
	0x032593EC BL 0x3252170
	0x032593F0 ADRP X0, 0xECA000
	0x032593F4 LDR X0, [X0 + 0x208]
	0x032593F8 BL 0x1C16D08
	0x032593FC MOV X1, X0
	0x03259400 MOV X0, X20
	0x03259404 BL 0x1C16DEC
	0x03259408 BL 0x3EB1B20
	0x0325940C SUB X31, X31, 0x60
	0x03259410 STR X30, [X31 + 0x20]
	0x03259414 STP X24, X23, [X31 + 0x30]
	0x03259418 STP X22, X21, [X31 + 0x40]
	0x0325941C STP X20, X19, [X31 + 0x50]
	0x03259420 ADRP X23, 0x1183000
	0x03259424 LDRB W8, [X23 + 0x507]
	0x03259428 MOV W20, W3
	0x0325942C MOV W21, W2
	0x03259430 MOV X22, X1
	0x03259434 MOV X19, X0
	0x03259438 TBNZ X8, 0x0, 0x3259450
	0x0325943C ADRP X0, 0xE9A000
	0x03259440 LDR X0, [X0 + 0x618]
	0x03259444 BL 0x1C16CF4
	0x03259448 MOVZ W8, 0x1
	0x0325944C STRB W8, [X23 + 0x507]
	0x03259450 STR X31, [X31 + 0x28]
	0x03259454 STP X31, X31, [X31 + 0x10]
	0x03259458 CBZ X22, 0x32595B8
	0x0325945C TBNZ X21, 0x1F, 0x3259600
	0x03259460 TBNZ X20, 0x1F, 0x32595A8
	0x03259464 LDR W8, [X22 + 0x18]
	0x03259468 SUBS W8, W8, W20
	0x0325946C B.LT 0x32595A8
	0x03259470 CMP W8, W21
	0x03259474 B.LT 0x3259650
	0x03259478 LDR W8, [X19 + 0x18]
	0x0325947C CBZ W8, 0x3259528
	0x03259480 LDR W8, [X19 + 0x24]
	0x03259484 SDIV W9, W20, W8
	0x03259488 MSUB W8, W9, W8, W20
	0x0325948C CBNZ W8, 0x32596A0
	0x03259490 LDR X8, [X19 + 0x70]
	0x03259494 CBZ X8, 0x3259558
	0x03259498 ADRP X9, 0xE9A000
	0x0325949C LDR X9, [X9 + 0x618]
	0x032594A0 LDR W8, [X8 + 0x18]
	0x032594A4 LDR X0, [X9]
	0x032594A8 ADD W1, W8, W20
	0x032594AC BL 0x1C16D6C
	0x032594B0 LDR X8, [X19 + 0x70]
	0x032594B4 CBZ X8, 0x32595B4
	0x032594B8 LDR W4, [X8 + 0x18]
	0x032594BC MOV X23, X0
	0x032594C0 MOV X0, X8
	0x032594C4 MOV W1, W31
	0x032594C8 MOV X2, X23
	0x032594CC MOV W3, W31
	0x032594D0 MOV X5, X31
	0x032594D4 BL 0x33A8750
	0x032594D8 LDR X8, [X19 + 0x70]
	0x032594DC CBZ X8, 0x32595B4
	0x032594E0 LDR W3, [X8 + 0x18]
	0x032594E4 MOV X0, X22
	0x032594E8 MOV W1, W21
	0x032594EC MOV X2, X23
	0x032594F0 MOV W4, W20
	0x032594F4 MOV X5, X31
	0x032594F8 BL 0x33A8750
	0x032594FC STR X31, [X31 + 0x10]
	0x03259500 CBZ X23, 0x32595B4
	0x03259504 LDR W6, [X19 + 0x14]
	0x03259508 LDR W3, [X23 + 0x18]
	0x0325950C ADD X4, X31, 0x10
	0x03259510 MOVZ W7, 0x1
	0x03259514 ADD X24, X31, 0x10
	0x03259518 MOV X0, X19
	0x0325951C MOV X1, X23
	0x03259520 MOV W2, W31
	0x03259524 B 0x325957C
	0x03259528 STR X31, [X31 + 0x28]
	0x0325952C LDR W6, [X19 + 0x14]
	0x03259530 ADD X4, X31, 0x28
	0x03259534 MOVZ W7, 0x1
	0x03259538 MOV X0, X19
	0x0325953C MOV X1, X22
	0x03259540 MOV W2, W21
	0x03259544 MOV W3, W20
	0x03259548 MOV W5, W31
	0x0325954C ADD X24, X31, 0x28
	0x03259550 BL 0x3257DB8
	0x03259554 B 0x3259584
	0x03259558 STR X31, [X31 + 0x18]
	0x0325955C LDR W6, [X19 + 0x14]
	0x03259560 ADD X4, X31, 0x18
	0x03259564 MOVZ W7, 0x1
	0x03259568 ADD X24, X31, 0x18
	0x0325956C MOV X0, X19
	0x03259570 MOV X1, X22
	0x03259574 MOV W2, W21
	0x03259578 MOV W3, W20
	0x0325957C MOV W5, W31
	0x03259580 BL 0x3258988
	0x03259584 MOV X0, X19
	0x03259588 BL 0x32596DC
	0x0325958C LDR X0, [X24]
	0x03259590 LDP X20, X19, [X31 + 0x50]
	0x03259594 LDP X22, X21, [X31 + 0x40]
	0x03259598 LDP X24, X23, [X31 + 0x30]
	0x0325959C LDR X30, [X31 + 0x20]
	0x032595A0 ADD X31, X31, 0x60
	0x032595A4 RET
	0x032595A8 ADRP X0, 0xECA000
	0x032595AC LDR X0, [X0 + 0x1E0]
	0x032595B0 B 0x3259658
	0x032595B4 BL 0x1C16F20
	0x032595B8 ADRP X0, 0xE9F000
	0x032595BC LDR X0, [X0 + 0x528]
	0x032595C0 BL 0x1C16D08
	0x032595C4 BL 0x1C16F10
	0x032595C8 MOV X19, X0
	0x032595CC ADRP X0, 0xEC8000
	0x032595D0 LDR X0, [X0 + 0xE30]
	0x032595D4 BL 0x1C16D08
	0x032595D8 MOV X1, X0
	0x032595DC MOV X0, X19
	0x032595E0 MOV X2, X31
	0x032595E4 BL 0x330E100
	0x032595E8 ADRP X0, 0xECA000
	0x032595EC LDR X0, [X0 + 0x218]
	0x032595F0 BL 0x1C16D08
	0x032595F4 MOV X1, X0
	0x032595F8 MOV X0, X19
	0x032595FC BL 0x1C16DEC
	0x03259600 ADRP X0, 0xEC2000
	0x03259604 LDR X0, [X0 + 0x670]
	0x03259608 BL 0x1C16D08
	0x0325960C MOV X1, X31
	0x03259610 BL 0x33BDD84
	0x03259614 MOV X19, X0
	0x03259618 ADRP X0, 0xEA2000
	0x0325961C LDR X0, [X0 + 0x760]
	0x03259620 BL 0x1C16D08
	0x03259624 BL 0x1C16F10
	0x03259628 MOV X20, X0
	0x0325962C ADRP X0, 0xEC8000
	0x03259630 LDR X0, [X0 + 0xE38]
	0x03259634 BL 0x1C16D08
	0x03259638 MOV X1, X0
	0x0325963C MOV X0, X20
	0x03259640 MOV X2, X19
	0x03259644 MOV X3, X31
	0x03259648 BL 0x3311888
	0x0325964C B 0x3259688
	0x03259650 ADRP X0, 0xEC2000
	0x03259654 LDR X0, [X0 + 0x760]
	0x03259658 BL 0x1C16D08
	0x0325965C MOV X1, X31
	0x03259660 BL 0x33BDD84
	0x03259664 MOV X19, X0
	0x03259668 ADRP X0, 0xEA2000
	0x0325966C LDR X0, [X0 + 0x578]
	0x03259670 BL 0x1C16D08
	0x03259674 BL 0x1C16F10
	0x03259678 MOV X1, X19
	0x0325967C MOV X2, X31
	0x03259680 MOV X20, X0
	0x03259684 BL 0x3314A68
	0x03259688 ADRP X0, 0xECA000
	0x0325968C LDR X0, [X0 + 0x218]
	0x03259690 BL 0x1C16D08
	0x03259694 MOV X1, X0
	0x03259698 MOV X0, X20
	0x0325969C BL 0x1C16DEC
	0x032596A0 ADRP X0, 0xECA000
	0x032596A4 LDR X0, [X0 + 0x220]
	0x032596A8 BL 0x1C16D08
	0x032596AC MOV X1, X31
	0x032596B0 BL 0x33BDD84
	0x032596B4 MOV X19, X0
	0x032596B8 ADRP X0, 0xEC7000
	0x032596BC LDR X0, [X0 + 0xCE0]
	0x032596C0 BL 0x1C16D08
	0x032596C4 BL 0x1C16F10
	0x032596C8 MOV X1, X19
	0x032596CC MOV X2, X31
	0x032596D0 MOV X20, X0
	0x032596D4 BL 0x3252170
	0x032596D8 B 0x3259688
	0x032596DC STP X30, X19, [X31 - 0x10]!
	0x032596E0 LDR W8, [X0 + 0x10]
	0x032596E4 MOV X19, X0
	0x032596E8 STR X31, [X0 + 0x70]
	0x032596EC CMP W8, 0x1
	0x032596F0 B.NE 0x3259710
	0x032596F4 LDP X0, X2, [X19 + 0x60]
	0x032596F8 LDR W4, [X19 + 0x20]
	0x032596FC MOV W1, W31
	0x03259700 MOV W3, W31
	0x03259704 MOV X5, X31
	0x03259708 BL 0x33A8750
	0x0325970C LDR W8, [X19 + 0x10]
	0x03259710 CMP W8, 0x4
	0x03259714 B.NE 0x325973C
	0x03259718 LDR W8, [X19 + 0x44]
	0x0325971C LDR X0, [X19 + 0x60]
	0x03259720 LDR X2, [X19 + 0x78]
	0x03259724 MOV W1, W31
	0x03259728 UBFM W4, W8, 0x1E, 0x1D
	0x0325972C MOV W3, W31
	0x03259730 MOV X5, X31
	0x03259734 LDP X30, X19, [X31], #0x10
	0x03259738 B 0x33A8750
	0x0325973C LDP X30, X19, [X31], #0x10
	0x03259740 RET
	0x03259744 LDR W10, [X0 + 0x44]
	0x03259748 CMP W10, 0x0
	0x0325974C B.LE 0x3259780
	0x03259750 MOV X8, X31
	0x03259754 MOV X9, X2
	0x03259758 MOV X10, X5
	0x0325975C LDR W11, [X10]
	0x03259760 LDR W12, [X9], #0x4
	0x03259764 ADD X8, X8, 0x1
	0x03259768 EOR W11, W12, W11, 0x0
	0x0325976C STR W11, [X10], #0x4
	0x03259770 LDRSW X11, [X0 + 0x44]
	0x03259774 CMP X8, X11
	0x03259778 B.LT 0x325975C
	0x0325977C MOV W10, W11
	0x03259780 LDR W8, [X0 + 0x40]
	0x03259784 CMP W8, 0x1
	0x03259788 ADD X8, X2, W10, 0x2, SXTW
	0x0325978C B.LE 0x3259874
	0x03259790 MOVZ W9, 0x1
	0x03259794 CMP W10, 0x1
	0x03259798 B.LT 0x3259864
	0x0325979C MOV X11, X31
	0x032597A0 MOV X12, X6
	0x032597A4 MOV X13, X5
	0x032597A8 MOV X14, X1
	0x032597AC LDR W15, [X13], #0x4
	0x032597B0 LDRSW X16, [X14]
	0x032597B4 LDRSW X17, [X14, W10, SXTW]
	0x032597B8 UBFM W10, W10, 0x1F, 0x1E
	0x032597BC LDRSW X10, [X14, W10, SXTW]
	0x032597C0 LDR W16, [X5, X16, LSL #2]
	0x032597C4 LDR W17, [X5, X17, LSL #2]
	0x032597C8 UBFM W15, W15, 0x1E, 0x1D
	0x032597CC LDR W10, [X5, X10, LSL #2]
	0x032597D0 UBFM X16, X16, 0x6, 0x3F
	0x032597D4 UBFM X17, X17, 0xE, 0x3F
	0x032597D8 AND X16, X16, 0x3FF
	0x032597DC AND X15, X15, 0x3FF
	0x032597E0 AND X17, X17, 0x3FF
	0x032597E4 UBFM X10, X10, 0x16, 0x3F
	0x032597E8 ORR X16, X16, 0x7FF
	0x032597EC LDR W15, [X15, X3, LSL]
	0x032597F0 ORR X17, X17, 0xFFF
	0x032597F4 LDR W16, [X16, X3, LSL]
	0x032597F8 AND X10, X10, 0x3FF
	0x032597FC LDR W17, [X17, X3, LSL]
	0x03259800 ORR X10, X10, 0xFFF
	0x03259804 LDR W10, [X10, X3, LSL]
	0x03259808 LDR W2, [X8], #0x4
	0x0325980C EOR W15, W16, W15, 0x0
	0x03259810 EOR W15, W15, W17, 0x0
	0x03259814 EOR W10, W15, W10, 0x0
	0x03259818 EOR W10, W10, W2, 0x0
	0x0325981C STR W10, [X12], #0x4
	0x03259820 LDRSW X10, [X0 + 0x44]
	0x03259824 ADD X11, X11, 0x1
	0x03259828 ADD X14, X14, 0x4
	0x0325982C CMP X11, X10
	0x03259830 B.LT 0x32597AC
	0x03259834 CMP W10, 0x1
	0x03259838 B.LT 0x3259864
	0x0325983C MOV X10, X31
	0x03259840 MOV X11, X5
	0x03259844 MOV X12, X6
	0x03259848 LDR W13, [X12], #0x4
	0x0325984C ADD X10, X10, 0x1
	0x03259850 STR W13, [X11], #0x4
	0x03259854 LDRSW X13, [X0 + 0x44]
	0x03259858 CMP X10, X13
	0x0325985C B.LT 0x3259848
	0x03259860 MOV W10, W13
	0x03259864 LDR W11, [X0 + 0x40]
	0x03259868 ADD W9, W9, 0x1
	0x0325986C CMP W9, W11
	0x03259870 B.LT 0x3259794
	0x03259874 CMP W10, 0x1
	0x03259878 B.LT 0x325990C
	0x0325987C MOV X9, X31
	0x03259880 MOV X11, X5
	0x03259884 LDR W12, [X11], #0x4
	0x03259888 LDRSW X13, [X1]
	0x0325988C LDRSW X14, [X1, W10, SXTW]
	0x03259890 UBFM W10, W10, 0x1F, 0x1E
	0x03259894 LDRSW X10, [X1, W10, SXTW]
	0x03259898 LDR W13, [X5, X13, LSL #2]
	0x0325989C LDR W14, [X5, X14, LSL #2]
	0x032598A0 UBFM W12, W12, 0x1E, 0x1D
	0x032598A4 LDR W10, [X5, X10, LSL #2]
	0x032598A8 UBFM X13, X13, 0x6, 0x3F
	0x032598AC UBFM X14, X14, 0xE, 0x3F
	0x032598B0 AND X13, X13, 0x3FF
	0x032598B4 AND X12, X12, 0x3FF
	0x032598B8 AND X14, X14, 0x3FF
	0x032598BC UBFM X10, X10, 0x16, 0x3F
	0x032598C0 ORR X13, X13, 0x7FF
	0x032598C4 LDR W12, [X12, X4, LSL]
	0x032598C8 ORR X14, X14, 0xFFF
	0x032598CC LDR W13, [X13, X4, LSL]
	0x032598D0 AND X10, X10, 0x3FF
	0x032598D4 LDR W14, [X14, X4, LSL]
	0x032598D8 ORR X10, X10, 0xFFF
	0x032598DC LDR W10, [X10, X4, LSL]
	0x032598E0 LDR W15, [X8], #0x4
	0x032598E4 EOR W12, W13, W12, 0x0
	0x032598E8 EOR W12, W12, W14, 0x0
	0x032598EC EOR W10, W12, W10, 0x0
	0x032598F0 EOR W10, W10, W15, 0x0
	0x032598F4 STR W10, [X6], #0x4
	0x032598F8 LDRSW X10, [X0 + 0x44]
	0x032598FC ADD X9, X9, 0x1
	0x03259900 ADD X1, X1, 0x4
	0x03259904 CMP X9, X10
	0x03259908 B.LT 0x3259884
	0x0325990C RET
	0x03259910 STR X19, [X31 - 0x10]!
	0x03259914 LDP W11, W10, [X0 + 0x40]
	0x03259918 CMP W10, 0x1
	0x0325991C MUL W8, W11, W10
	0x03259920 B.LT 0x3259960
	0x03259924 MOV X9, X31
	0x03259928 MOV W10, W8
	0x0325992C MOV X11, X5
	0x03259930 ADD W12, W10, W9
	0x03259934 LDR W13, [X11]
	0x03259938 LDR W12, [X2, W12, SXTW]
	0x0325993C ADD X9, X9, 0x1
	0x03259940 EOR W12, W12, W13, 0x0
	0x03259944 STR W12, [X11], #0x4
	0x03259948 LDRSW X12, [X0 + 0x44]
	0x0325994C CMP X9, X12
	0x03259950 B.LT 0x3259930
	0x03259954 LDR W11, [X0 + 0x40]
	0x03259958 ADD W8, W8, W9
	0x0325995C MOV W10, W12
	0x03259960 CMP W11, 0x1
	0x03259964 B.LE 0x3259A58
	0x03259968 MOVZ W9, 0x1
	0x0325996C CMP W10, 0x1
	0x03259970 SUB W8, W8, W10, 0x1, LSL
	0x03259974 B.LT 0x3259A48
	0x03259978 MOV X11, X31
	0x0325997C ADD X12, X2, W8, 0x2, SXTW
	0x03259980 MOV X13, X6
	0x03259984 MOV X14, X5

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 96
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move X8, [X27+40]
	017 Move X26, 0x1185000
	018 Move W25, W7
	019 Move W23, W6
	020 Move [X29-8], X8
	021 Move W8, [X26+1288]
	022 Move W24, W5
	023 Move X19, X4
	024 Move W28, W3
	025 Move W20, W2
	026 Move X21, X1
	027 Move X22, X0
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {43}
	032 Move X0, 0xE9C000
	033 Move X0, [X0+1560]
	034 Call 0x1C17CF4
	035 Move X0, 0xECC000
	036 Move X0, [X0+496]
	037 Call 0x1C17CF4
	038 Move X0, 0xECC000
	039 Move X0, [X0+424]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X26+1288], W8
	043 Compare X21, 0
	044 JumpIfEqual {703}
	045 Move W8, [X21+24]
	046 Add W9, W28, W20
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move W8, [X22+36]
	049 Move [X29-12], W28
	050 NotImplemented "Instruction SDIV not yet implemented."
	051 NotImplemented "Instruction MSUB not yet implemented."
	052 Move [X29-52], W9
	053 Move TEMP, X25
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {94}
	057 Subtract W9, W23, 1
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X10, -40636416
	060 Add X10, X10, 1210
	061 NotImplemented "Instruction ADR not yet implemented."
	062 Move W12, [X10]
	063 Add X11, X11, X12
	064 CallNoReturn X11
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 Subtract W28, W8, W9
	067 Move X8, 0xE9C000
	068 Move X8, [X8+1560]
	069 Move W1, W28
	070 Move X0, [X8]
	071 Call 0x1C17D6C
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X26, X0
	074 NotImplemented "Instruction CMP not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Compare X26, 0
	078 JumpIfEqual {703}
	079 Move W9, [X26+24]
	080 Move X8, X31
	081 Move W10, W28
	082 Add X11, X26, 32
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move [X11], W28
	085 Add X8, X8, 1
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X26, X31
	088 NotImplemented "Instruction LDUR not yet implemented."
	089 Compare W9, 0
	090 JumpIfNotEqual {65}
	091 NotImplemented "Instruction LDUR not yet implemented."
	092 Compare W8, 0
	093 JumpIfNotEqual {712}
	094 Move X26, X31
	095 Move W28, W31
	096 Move X8, [X19]
	097 Compare X8, 0
	098 JumpIfEqual {124}
	099 Move W8, [X8+24]
	100 NotImplemented "Instruction LDUR not yet implemented."
	101 Subtract W8, W8, W24
	102 Add W9, W28, W9
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move X0, 0xECC000
	105 Move X0, [X0+504]
	106 Call 0x1C17D08
	107 Move X1, X31
	108 Call Environment.GetResourceString, X0
	109 Move X19, X0
	110 Move X0, 0xEC9000
	111 Move X0, [X0+3296]
	112 Call 0x1C17D08
	113 Call 0x1C17F10
	114 Move X1, X19
	115 Move X2, X31
	116 Move X20, X0
	117 Call CryptographicException..ctor, X0, X1
	118 Move X0, 0xECC000
	119 Move X0, [X0+496]
	120 Call 0x1C17D08
	121 Move X1, X0
	122 Move X0, X20
	123 Call 0x1C17DEC
	124 Move X8, 0xE9C000
	125 Move X8, [X8+1560]
	126 Move X0, [X8]
	127 NotImplemented "Instruction LDUR not yet implemented."
	128 Add W1, W28, W8
	129 Call 0x1C17D6C
	130 Move W24, W31
	131 Move [X19], X0
	132 Move X8, [X22+80]
	133 Compare X8, 0
	134 JumpIfEqual {139}
	135 Move W9, [X8+24]
	136 Add X8, X8, 32
	137 NotImplemented "Instruction CMP not yet implemented."
	138 NotImplemented "Instruction CSEL not yet implemented."
	139 Move X25, X31
	140 Move X23, 0xECC000
	141 Move X8, [X22+48]
	142 Move X23, [X23+424]
	143 Compare X8, 0
	144 JumpIfEqual {150}
	145 Move W9, [X8+24]
	146 Add X8, X8, 32
	147 NotImplemented "Instruction CMP not yet implemented."
	148 NotImplemented "Instruction CSEL not yet implemented."
	149 Move [X29-64], X8
	150 Move [X29-64], X31
	151 Move X0, [X23]
	152 Move W8, [X0+224]
	153 Compare W8, 0
	154 JumpIfNotEqual {157}
	155 Call 0x1C17DFC
	156 Move X0, [X23]
	157 Move X8, [X0+184]
	158 Move X9, [X8+16]
	159 Compare X9, 0
	160 JumpIfEqual {166}
	161 Move W10, [X9+24]
	162 Add X9, X9, 32
	163 NotImplemented "Instruction CMP not yet implemented."
	164 NotImplemented "Instruction CSEL not yet implemented."
	165 Move [X29-32], X9
	166 Move [X29-32], X31
	167 Move W9, [X0+224]
	168 Compare W9, 0
	169 JumpIfNotEqual {173}
	170 Call 0x1C17DFC
	171 Move X8, [X23]
	172 Move X8, [X8+184]
	173 Move X8, [X8+24]
	174 Compare X8, 0
	175 JumpIfEqual {181}
	176 Move W9, [X8+24]
	177 Add X8, X8, 32
	178 NotImplemented "Instruction CMP not yet implemented."
	179 NotImplemented "Instruction CSEL not yet implemented."
	180 Move [X29-40], X8
	181 Move [X29-40], X31
	182 NotImplemented "Instruction LDRSW not yet implemented."
	183 Move [X29-80], X27
	184 Move X27, X8
	185 ShiftRight X27, 62
	186 And X27, X27, 0x1FFFFFFF
	187 Compare W8, 0
	188 JumpIfEqual {201}
	189 Add X9, X27, 15
	190 Add X8, X31, 0
	191 And X23, X9, 0xFFFFFFFF
	192 Subtract X0, X8, X23
	193 Add X31, X0, 0
	194 Move W1, W31
	195 Move X2, X27
	196 Move [X29-24], X0
	197 Call 0x3EB2B10
	198 Add X8, X31, 0
	199 Subtract X23, X8, X23
	200 Add X31, X23, 0
	201 Move X0, X31
	202 Move W1, W31
	203 Move X2, X27
	204 Call 0x3EB2B10
	205 Move [X29-24], X31
	206 Move X23, X31
	207 Move X0, X23
	208 Move W1, W31
	209 Move X2, X27
	210 Call 0x3EB2B10
	211 NotImplemented "Instruction LDUR not yet implemented."
	212 Move W8, [X22+36]
	213 NotImplemented "Instruction LDUR not yet implemented."
	214 Add W9, W28, W9
	215 NotImplemented "Instruction SDIV not yet implemented."
	216 Move [X29-44], W8
	217 Subtract W8, W8, 1
	218 Move [X29-84], W9
	219 Move [X29-48], W8
	220 Move W15, W31
	221 Move [X29-72], X25
	222 Move W8, [X22+16]
	223 Move [X29-12], W15
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Move X2, [X22+120]
	226 Move W4, [X22+32]
	227 NotImplemented "Instruction LDUR not yet implemented."
	228 Move W1, W31
	229 Move W3, W31
	230 Compare W28, 0
	231 JumpIfEqual {313}
	232 NotImplemented "Instruction LDUR not yet implemented."
	233 NotImplemented "Instruction CMP not yet implemented."
	234 Move W8, [X22+68]
	235 NotImplemented "Instruction CMP not yet implemented."
	236 NotImplemented "Instruction LDUR not yet implemented."
	237 NotImplemented "Instruction LDUR not yet implemented."
	238 Move X8, X31
	239 Move W13, W31
	240 Add W9, W20, W9
	241 Move W11, W20
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Move W12, [X21+24]
	244 NotImplemented "Instruction CMP not yet implemented."
	245 Add X12, X21, W11
	246 Move W12, [X12+32]
	247 Move X14, W11
	248 Add X14, X14, 1
	249 NotImplemented "Instruction CMP not yet implemented."
	250 Move W15, [X21+24]
	251 NotImplemented "Instruction CMP not yet implemented."
	252 Add X14, X21, X14
	253 Move W14, [X14+32]
	254 Add W11, W11, 2
	255 Move W16, W13
	256 NotImplemented "Instruction CMP not yet implemented."
	257 Compare X26, 0
	258 JumpIfNotEqual {284}
	259 Compare X26, 0
	260 JumpIfEqual {703}
	261 Move W12, [X26+24]
	262 NotImplemented "Instruction CMP not yet implemented."
	263 Add X12, X26, W13
	264 Move W12, [X12+32]
	265 Add W14, W13, 1
	266 Add W16, W13, 2
	267 Move W13, W14
	268 Compare X26, 0
	269 JumpIfEqual {703}
	270 Add W16, W13, 1
	271 Move W11, W14
	272 Move W14, [X26+24]
	273 NotImplemented "Instruction CMP not yet implemented."
	274 Add X13, X26, W13
	275 Move W14, [X13+32]
	276 NotImplemented "Instruction CMP not yet implemented."
	277 Move W13, [X21+24]
	278 NotImplemented "Instruction CMP not yet implemented."
	279 Add X13, X21, W11
	280 Move W15, [X13+32]
	281 Add W11, W11, 1
	282 NotImplemented "Instruction CMP not yet implemented."
	283 Move W13, W16
	284 Move W13, [X26+24]
	285 NotImplemented "Instruction CMP not yet implemented."
	286 Add X13, X26, W16
	287 Move W15, [X13+32]
	288 NotImplemented "Instruction CMP not yet implemented."
	289 Add W17, W16, 1
	290 Move W13, W17
	291 Move W16, [X21+24]
	292 NotImplemented "Instruction CMP not yet implemented."
	293 Add X16, X21, W11
	294 Add W11, W11, 1
	295 Add X16, X16, 32
	296 Compare X26, 0
	297 JumpIfEqual {703}
	298 Add W13, W16, 1
	299 Move W17, W16
	300 Add W13, W16, 2
	301 Move W16, [X26+24]
	302 NotImplemented "Instruction CMP not yet implemented."
	303 Add X16, X26, W17
	304 Add X16, X16, 32
	305 Move W16, [X16]
	306 NotImplemented "Instruction BFM not yet implemented."
	307 NotImplemented "Instruction BFM not yet implemented."
	308 Add X8, X8, 1
	309 NotImplemented "Instruction BFM not yet implemented."
	310 Move [X10+4], W12
	311 NotImplemented "Instruction LDRSW not yet implemented."
	312 NotImplemented "Instruction CMP not yet implemented."
	313 Move W4, [X22+32]
	314 NotImplemented "Instruction LDUR not yet implemented."
	315 Move W1, W31
	316 Move X2, X21
	317 Move W3, W20
	318 Move X5, X31
	319 Call Buffer.Memcpy, X0, X1, X2, X3, X4
	320 Move W8, [X22+16]
	321 NotImplemented "Instruction CMP not yet implemented."
	322 Move W8, [X22+68]
	323 NotImplemented "Instruction CMP not yet implemented."
	324 Move X10, [X22+104]
	325 Compare X10, 0
	326 JumpIfEqual {703}
	327 Move W9, [X10+24]
	328 NotImplemented "Instruction LDUR not yet implemented."
	329 Move X8, X31
	330 Add X10, X10, 32
	331 NotImplemented "Instruction CMP not yet implemented."
	332 Move W12, [X11]
	333 Move W13, [X10]
	334 Add X8, X8, 1
	335 Xor W12, W13, W12
	336 Move [X11+4], W12
	337 NotImplemented "Instruction LDRSW not yet implemented."
	338 NotImplemented "Instruction CMP not yet implemented."
	339 Move X4, [X29-40]
	340 Move X3, [X29-32]
	341 NotImplemented "Instruction LDUR not yet implemented."
	342 Move X0, X22
	343 Move X1, X25
	344 Move X2, X27
	345 Move X6, X23
	346 Call RijndaelManagedTransform.Enc, X0, X1, X2, X3, X4, X5, X6
	347 Move W8, [X22+16]
	348 NotImplemented "Instruction CMP not yet implemented."
	349 NotImplemented "Instruction LDUR not yet implemented."
	350 Compare W28, 0
	351 JumpIfEqual {523}
	352 NotImplemented "Instruction LDUR not yet implemented."
	353 NotImplemented "Instruction CMP not yet implemented."
	354 Move X8, 0xE9B000
	355 Move W1, [X22+36]
	356 Move X8, [X8+1560]
	357 Move X0, [X8]
	358 Call 0x1C17D6C
	359 Move W25, W28
	360 NotImplemented "Instruction LDUR not yet implemented."
	361 Move X27, X0
	362 Move X0, X21
	363 Move W1, W20
	364 Move X2, X27
	365 Move W3, W31
	366 Move W4, W28
	367 Move X5, X31
	368 Call Buffer.InternalBlockCopy, X0, X1, X2, X3, X4
	369 Move X0, X26
	370 Move W1, W31
	371 Move X2, X27
	372 Move W3, W28
	373 Move W4, W25
	374 Move X5, X31
	375 Move W28, W25
	376 Call Buffer.InternalBlockCopy, X0, X1, X2, X3, X4
	377 Move W8, [X22+68]
	378 NotImplemented "Instruction CMP not yet implemented."
	379 NotImplemented "Instruction LDUR not yet implemented."
	380 Move X8, X31
	381 Move X11, X31
	382 Move W10, W24
	383 NotImplemented "Instruction LDRSW not yet implemented."
	384 Move X9, X11
	385 NotImplemented "Instruction CMP not yet implemented."
	386 Compare X27, 0
	387 JumpIfEqual {703}
	388 Move W11, [X27+24]
	389 NotImplemented "Instruction CMP not yet implemented."
	390 Move X12, [X19]
	391 Compare X12, 0
	392 JumpIfEqual {703}
	393 Move W13, [X12+24]
	394 Add X11, X10, X9
	395 NotImplemented "Instruction CMP not yet implemented."
	396 Add X14, X27, X9
	397 Move W13, [X23]
	398 Move W14, [X14+32]
	399 Add X12, X12, W11
	400 Xor W13, W14, W13
	401 Move [X12+32], W13
	402 NotImplemented "Instruction LDRSW not yet implemented."
	403 Add X12, X9, 1
	404 NotImplemented "Instruction CMP not yet implemented."
	405 Move W13, [X27+24]
	406 NotImplemented "Instruction CMP not yet implemented."
	407 Move X13, [X19]
	408 Compare X13, 0
	409 JumpIfEqual {703}
	410 Move W14, [X13+24]
	411 Add X11, X11, 1
	412 NotImplemented "Instruction CMP not yet implemented."
	413 Add X15, X27, X9
	414 Move W14, [X23]
	415 Move W15, [X15+33]
	416 Add X11, X13, W11
	417 Xor W14, W15, W14
	418 Move [X11+32], W14
	419 NotImplemented "Instruction LDRSW not yet implemented."
	420 Add X11, X12, 1
	421 NotImplemented "Instruction CMP not yet implemented."
	422 Move W12, [X27+24]
	423 NotImplemented "Instruction CMP not yet implemented."
	424 Move X12, [X19]
	425 Compare X12, 0
	426 JumpIfEqual {703}
	427 Move W14, [X12+24]
	428 Add X13, X10, X9
	429 Add X13, X13, 2
	430 NotImplemented "Instruction CMP not yet implemented."
	431 Add X15, X27, X9
	432 Move W14, [X23]
	433 Move W15, [X15+34]
	434 Add X12, X12, W13
	435 Add X11, X11, 1
	436 Xor W14, W15, W14
	437 Move [X12+32], W14
	438 NotImplemented "Instruction LDRSW not yet implemented."
	439 NotImplemented "Instruction CMP not yet implemented."
	440 Move W12, [X27+24]
	441 NotImplemented "Instruction CMP not yet implemented."
	442 Move X12, [X19]
	443 Compare X12, 0
	444 JumpIfEqual {703}
	445 Move W14, [X12+24]
	446 Add X13, X10, X9
	447 Add X13, X13, 3
	448 NotImplemented "Instruction CMP not yet implemented."
	449 Add X15, X27, X9
	450 Move W14, [X23]
	451 Move W15, [X15+35]
	452 Add X12, X12, W13
	453 Add X8, X8, 1
	454 Add X11, X11, 1
	455 Xor W14, W15, W14
	456 Move [X12+32], W14
	457 NotImplemented "Instruction LDRSW not yet implemented."
	458 NotImplemented "Instruction CMP not yet implemented."
	459 Add X8, X9, 4
	460 Add W24, W24, W8
	461 Move W9, [X22+68]
	462 NotImplemented "Instruction LDUR not yet implemented."
	463 NotImplemented "Instruction CMP not yet implemented."
	464 Move X8, X31
	465 Move X9, X23
	466 Move X11, [X19]
	467 Compare X11, 0
	468 JumpIfEqual {703}
	469 Move W12, [X11+24]
	470 Move W10, W24
	471 NotImplemented "Instruction CMP not yet implemented."
	472 Move W12, [X9]
	473 Add X11, X11, W10
	474 Move [X11+32], W12
	475 Move X12, [X19]
	476 Compare X12, 0
	477 JumpIfEqual {703}
	478 Move W13, [X12+24]
	479 Add W11, W10, 1
	480 NotImplemented "Instruction CMP not yet implemented."
	481 Move W13, [X9]
	482 Add W14, W10, 1
	483 Add X12, X12, W14
	484 Move W13, W13
	485 ShiftRight W13, 8
	486 And W13, W13, 0x7FFFFFFF
	487 Move [X12+32], W13
	488 Move X12, [X19]
	489 Compare X12, 0
	490 JumpIfEqual {703}
	491 Move W13, [X12+24]
	492 Add W11, W11, 1
	493 NotImplemented "Instruction CMP not yet implemented."
	494 NotImplemented "Instruction LDRH not yet implemented."
	495 Add W14, W10, 2
	496 Add X12, X12, W14
	497 Move [X12+32], W13
	498 Move X12, [X19]
	499 Compare X12, 0
	500 JumpIfEqual {703}
	501 Move W13, [X12+24]
	502 Add W11, W11, 1
	503 NotImplemented "Instruction CMP not yet implemented."
	504 Move W13, [X9+3]
	505 Add W14, W10, 3
	506 Add X12, X12, W14
	507 Add X8, X8, 1
	508 Move [X12+32], W13
	509 NotImplemented "Instruction LDRSW not yet implemented."
	510 Add X9, X9, 4
	511 Add W24, W11, 1
	512 NotImplemented "Instruction CMP not yet implemented."
	513 Move W8, [X22+16]
	514 Add W24, W10, 4
	515 NotImplemented "Instruction CMP not yet implemented."
	516 Move X8, [X22+104]
	517 Compare X8, 0
	518 JumpIfEqual {620}
	519 Move W9, [X8+24]
	520 Add X8, X8, 32
	521 NotImplemented "Instruction CMP not yet implemented."
	522 NotImplemented "Instruction CSEL not yet implemented."
	523 Move W8, [X22+68]
	524 NotImplemented "Instruction CMP not yet implemented."
	525 Move X8, X31
	526 Move X9, X31
	527 Move X10, W20
	528 Add X11, X21, W20
	529 Move W12, W20
	530 Move W13, W24
	531 Move W14, [X22+36]
	532 Add X15, X10, X8
	533 Add W14, W14, W20
	534 NotImplemented "Instruction CMP not yet implemented."
	535 Move W14, [X21+24]
	536 Add W16, W12, W8
	537 NotImplemented "Instruction CMP not yet implemented."
	538 Move X16, [X19]
	539 Compare X16, 0
	540 JumpIfEqual {703}
	541 Move W17, [X16+24]
	542 Add X14, X13, X8
	543 NotImplemented "Instruction CMP not yet implemented."
	544 Add X0, X11, X8
	545 Move W17, [X23]
	546 Move W0, [X0+32]
	547 Add X16, X16, W14
	548 Add X15, X15, 1
	549 Xor W17, W0, W17
	550 Move [X16+32], W17
	551 Move W16, [X22+36]
	552 Add W16, W16, W20
	553 NotImplemented "Instruction CMP not yet implemented."
	554 Move W15, [X21+24]
	555 Add W16, W12, W8
	556 Add W16, W16, 1
	557 NotImplemented "Instruction CMP not yet implemented."
	558 Move X15, [X19]
	559 Compare X15, 0
	560 JumpIfEqual {703}
	561 Move W16, [X15+24]
	562 Add X14, X14, 1
	563 NotImplemented "Instruction CMP not yet implemented."
	564 Add X17, X11, X8
	565 Move W16, [X23]
	566 Move W17, [X17+33]
	567 Add X14, X15, W14
	568 Add X15, X10, X8
	569 Add X15, X15, 2
	570 Xor W16, W17, W16
	571 Move [X14+32], W16
	572 Move W14, [X22+36]
	573 Add W14, W14, W20
	574 NotImplemented "Instruction CMP not yet implemented."
	575 Move W14, [X21+24]
	576 Add W15, W12, W8
	577 Add W15, W15, 2
	578 NotImplemented "Instruction CMP not yet implemented."
	579 Move X14, [X19]
	580 Compare X14, 0
	581 JumpIfEqual {703}
	582 Move W16, [X14+24]
	583 Add X15, X13, X8
	584 Add X15, X15, 2
	585 NotImplemented "Instruction CMP not yet implemented."
	586 Add X17, X11, X8
	587 Move W16, [X23]
	588 Move W17, [X17+34]
	589 Add X14, X14, W15
	590 Add X15, X10, X8
	591 Add X15, X15, 3
	592 Xor W16, W17, W16
	593 Move [X14+32], W16
	594 Move W14, [X22+36]
	595 Add W14, W14, W20
	596 NotImplemented "Instruction CMP not yet implemented."
	597 Move W14, [X21+24]
	598 Add W15, W12, W8
	599 Add W15, W15, 3
	600 NotImplemented "Instruction CMP not yet implemented."
	601 Move X14, [X19]
	602 Compare X14, 0
	603 JumpIfEqual {703}
	604 Move W16, [X14+24]
	605 Add X15, X13, X8
	606 Add X15, X15, 3
	607 NotImplemented "Instruction CMP not yet implemented."
	608 Add X17, X11, X8
	609 Move W16, [X23]
	610 Move W17, [X17+35]
	611 Add X14, X14, W15
	612 Add X9, X9, 1
	613 Add X8, X8, 4
	614 Xor W16, W17, W16
	615 Move [X14+32], W16
	616 NotImplemented "Instruction LDRSW not yet implemented."
	617 NotImplemented "Instruction CMP not yet implemented."
	618 Add W24, W24, W8
	619 NotImplemented "Instruction LDUR not yet implemented."
	620 Move X0, X31
	621 Move W2, [X22+32]
	622 Move X1, X23
	623 Move X3, X31
	624 Call Buffer.Memcpy, X0, X1, X2
	625 Add W24, W24, W9
	626 Add W8, W24, W8
	627 Add W24, W8, 1
	628 Add W8, W24, W9
	629 Add W24, W8, 1
	630 Add W8, W24, W8
	631 Add W24, W8, 2
	632 Add W8, W24, W9
	633 Add W24, W8, 2
	634 Add W8, W24, W8
	635 Add W24, W8, 3
	636 Add W8, W24, W9
	637 Add W24, W8, 3
	638 NotImplemented "Instruction LDUR not yet implemented."
	639 Move W8, [X22+32]
	640 Move W4, [X22+36]
	641 Subtract W3, W8, W4
	642 NotImplemented "Instruction CMP not yet implemented."
	643 Move X8, X31
	644 Move X9, [X22+120]
	645 Compare X9, 0
	646 JumpIfEqual {703}
	647 Move X11, [X9+24]
	648 Add X10, X8, W4
	649 NotImplemented "Instruction CMP not yet implemented."
	650 And X11, X11, 0
	651 NotImplemented "Instruction CMP not yet implemented."
	652 Add X10, X9, W10
	653 Move W10, [X10+32]
	654 Add X9, X9, X8
	655 Add X8, X8, 1
	656 Move [X9+32], W10
	657 Move W9, [X22+32]
	658 Move W4, [X22+36]
	659 Subtract W3, W9, W4
	660 NotImplemented "Instruction CMP not yet implemented."
	661 NotImplemented "Instruction LDUR not yet implemented."
	662 Move X0, [X19]
	663 Move X2, [X22+120]
	664 Move X5, X31
	665 Multiply W1, W4, W8
	666 Call Buffer.InternalBlockCopy, X0, X1, X2, X3, X4
	667 NotImplemented "Instruction LDUR not yet implemented."
	668 Move W8, [X22+36]
	669 NotImplemented "Instruction LDUR not yet implemented."
	670 Add W15, W15, 1
	671 Add W20, W8, W20
	672 NotImplemented "Instruction CMP not yet implemented."
	673 NotImplemented "Instruction LDUR not yet implemented."
	674 Move X8, [X8+40]
	675 NotImplemented "Instruction LDUR not yet implemented."
	676 NotImplemented "Instruction CMP not yet implemented."
	677 NotImplemented "Instruction LDUR not yet implemented."
	678 Add X31, X29, 0
	679 Move X20, [X31+80]
	680 Move X19, [X31+88]
	681 Move X22, [X31+64]
	682 Move X21, [X31+72]
	683 Move X24, [X31+48]
	684 Move X23, [X31+56]
	685 Move X26, [X31+32]
	686 Move X25, [X31+40]
	687 Move X28, [X31+16]
	688 Move X27, [X31+24]
	689 Move X29, [X31+96]
	690 Move X30, [X31+104]
	691 Return X0
	692 Move X0, X31
	693 Call Utils.get_StaticRandomNumberGenerator
	694 Compare X0, 0
	695 JumpIfEqual {703}
	696 Move X8, [X0]
	697 Move X1, X26
	698 Move X9, [X8+408]
	699 Move X2, [X8+416]
	700 NotImplemented "Instruction BLR not yet implemented."
	701 Compare X26, 0
	702 JumpIfNotEqual {706}
	703 Call 0x1C17F20
	704 Compare X26, 0
	705 JumpIfEqual {703}
	706 Move W9, [X26+24]
	707 Subtract W8, W28, 1
	708 NotImplemented "Instruction CMP not yet implemented."
	709 Add X8, X26, W8
	710 Move [X8+32], W28
	711 Call 0x1C17F28
	712 Move X0, 0xECB000
	713 Move X0, [X0+512]
	714 Call 0x3EB2B20

Method: System.Int32 DecryptData(System.Byte[] inputBuffer, System.Int32 inputOffset, System.Int32 inputCount, ref System.Byte[] outputBuffer, System.Int32 outputOffset, System.Security.Cryptography.PaddingMode paddingMode, System.Boolean fLast)

Disassembly:
	0x03259988 MOV X15, X1
	0x0325998C LDR W16, [X14], #0x4
	0x03259990 LDRSW X17, [X15]
	0x03259994 LDRSW X7, [X15, W10, SXTW]
	0x03259998 UBFM W10, W10, 0x1F, 0x1E
	0x0325999C LDRSW X10, [X15, W10, SXTW]
	0x032599A0 LDR W17, [X5, X17, LSL #2]
	0x032599A4 LDR W7, [X5, X7, LSL #2]
	0x032599A8 UBFM W16, W16, 0x1E, 0x1D
	0x032599AC LDR W10, [X5, X10, LSL #2]
	0x032599B0 UBFM X17, X17, 0x6, 0x3F
	0x032599B4 UBFM X7, X7, 0xE, 0x3F
	0x032599B8 AND X17, X17, 0x3FF
	0x032599BC AND X16, X16, 0x3FF
	0x032599C0 AND X7, X7, 0x3FF
	0x032599C4 UBFM X10, X10, 0x16, 0x3F
	0x032599C8 ORR X17, X17, 0x7FF
	0x032599CC LDR W16, [X16, X3, LSL]
	0x032599D0 ORR X7, X7, 0xFFF
	0x032599D4 LDR W17, [X17, X3, LSL]
	0x032599D8 AND X10, X10, 0x3FF
	0x032599DC LDR W7, [X7, X3, LSL]
	0x032599E0 ORR X10, X10, 0xFFF
	0x032599E4 LDR W10, [X10, X3, LSL]
	0x032599E8 LDR W19, [X12], #0x4
	0x032599EC EOR W16, W17, W16, 0x0
	0x032599F0 EOR W16, W16, W7, 0x0
	0x032599F4 EOR W10, W16, W10, 0x0
	0x032599F8 EOR W10, W10, W19, 0x0
	0x032599FC STR W10, [X13], #0x4
	0x03259A00 LDRSW X10, [X0 + 0x44]
	0x03259A04 ADD X11, X11, 0x1
	0x03259A08 ADD X15, X15, 0x4
	0x03259A0C CMP X11, X10
	0x03259A10 B.LT 0x325998C
	0x03259A14 CMP W10, 0x0
	0x03259A18 ADD X8, X11, W8, UXTW
	0x03259A1C B.LE 0x3259A48
	0x03259A20 MOV X10, X31
	0x03259A24 MOV X11, X5
	0x03259A28 MOV X12, X6
	0x03259A2C LDR W13, [X12], #0x4
	0x03259A30 ADD X10, X10, 0x1
	0x03259A34 STR W13, [X11], #0x4
	0x03259A38 LDRSW X13, [X0 + 0x44]
	0x03259A3C CMP X10, X13
	0x03259A40 B.LT 0x3259A2C
	0x03259A44 MOV W10, W13
	0x03259A48 LDR W11, [X0 + 0x40]
	0x03259A4C ADD W9, W9, 0x1
	0x03259A50 CMP W9, W11
	0x03259A54 B.LT 0x325996C
	0x03259A58 CMP W10, 0x1
	0x03259A5C B.LT 0x3259AF0
	0x03259A60 MOV X8, X31
	0x03259A64 MOV X9, X5
	0x03259A68 LDR W11, [X9], #0x4
	0x03259A6C LDRSW X12, [X1]
	0x03259A70 LDRSW X13, [X1, W10, SXTW]
	0x03259A74 UBFM W10, W10, 0x1F, 0x1E
	0x03259A78 LDRSW X10, [X1, W10, SXTW]
	0x03259A7C LDR W12, [X5, X12, LSL #2]
	0x03259A80 LDR W13, [X5, X13, LSL #2]
	0x03259A84 UBFM W11, W11, 0x1E, 0x1D
	0x03259A88 LDR W10, [X5, X10, LSL #2]
	0x03259A8C UBFM X12, X12, 0x6, 0x3F
	0x03259A90 UBFM X13, X13, 0xE, 0x3F
	0x03259A94 AND X12, X12, 0x3FF
	0x03259A98 AND X11, X11, 0x3FF
	0x03259A9C AND X13, X13, 0x3FF
	0x03259AA0 UBFM X10, X10, 0x16, 0x3F
	0x03259AA4 ORR X12, X12, 0x7FF
	0x03259AA8 LDR W11, [X11, X4, LSL]
	0x03259AAC ORR X13, X13, 0xFFF
	0x03259AB0 LDR W12, [X12, X4, LSL]
	0x03259AB4 AND X10, X10, 0x3FF
	0x03259AB8 LDR W13, [X13, X4, LSL]
	0x03259ABC ORR X10, X10, 0xFFF
	0x03259AC0 LDR W10, [X10, X4, LSL]
	0x03259AC4 LDR W14, [X2], #0x4
	0x03259AC8 EOR W11, W12, W11, 0x0
	0x03259ACC EOR W11, W11, W13, 0x0
	0x03259AD0 EOR W10, W11, W10, 0x0
	0x03259AD4 EOR W10, W10, W14, 0x0
	0x03259AD8 STR W10, [X6], #0x4
	0x03259ADC LDRSW X10, [X0 + 0x44]
	0x03259AE0 ADD X8, X8, 0x1
	0x03259AE4 ADD X1, X1, 0x4
	0x03259AE8 CMP X8, X10
	0x03259AEC B.LT 0x3259A68
	0x03259AF0 LDR X19, [X31], #0x10
	0x03259AF4 RET
	0x03259AF8 EXTR W0, W0, W0, 0x8
	0x03259AFC RET
	0x03259B00 STP X30, X21, [X31 - 0x20]!
	0x03259B04 STP X20, X19, [X31 + 0x10]
	0x03259B08 ADRP X21, 0x1183000
	0x03259B0C ADRP X20, 0xECA000
	0x03259B10 LDRB W8, [X21 + 0x50B]
	0x03259B14 LDR X20, [X20 + 0x1A8]
	0x03259B18 MOV W19, W0
	0x03259B1C TBNZ X8, 0x0, 0x3259B34
	0x03259B20 ADRP X0, 0xECA000
	0x03259B24 LDR X0, [X0 + 0x1A8]
	0x03259B28 BL 0x1C16CF4
	0x03259B2C MOVZ W8, 0x1
	0x03259B30 STRB W8, [X21 + 0x50B]
	0x03259B34 LDR X0, [X20]
	0x03259B38 LDR W8, [X0 + 0xE0]
	0x03259B3C CBNZ W8, 0x3259B48
	0x03259B40 BL 0x1C16DFC
	0x03259B44 LDR X0, [X20]
	0x03259B48 LDR X8, [X0 + 0xB8]
	0x03259B4C LDR X8, [X8]
	0x03259B50 CBZ X8, 0x3259BC0
	0x03259B54 LDR W13, [X8 + 0x18]
	0x03259B58 AND W9, W19, 0xFF
	0x03259B5C CMP W9, W13
	0x03259B60 B.CS 0x3259BBC
	0x03259B64 UBFM W10, W19, 0x8, 0xF
	0x03259B68 CMP W10, W13
	0x03259B6C B.CS 0x3259BBC
	0x03259B70 UBFM W11, W19, 0x10, 0x17
	0x03259B74 CMP W11, W13
	0x03259B78 B.CS 0x3259BBC
	0x03259B7C UBFM W12, W19, 0x18, 0x1F
	0x03259B80 CMP W12, W13
	0x03259B84 B.CS 0x3259BBC
	0x03259B88 ADD X9, X8, W9, UXTW
	0x03259B8C ADD X10, X8, W10, UXTW
	0x03259B90 LDRB W0, [X9 + 0x20]
	0x03259B94 LDRB W9, [X10 + 0x20]
	0x03259B98 ADD X8, X8, 0x20
	0x03259B9C LDRB W10, [X8, W11, UXTW]
	0x03259BA0 LDRB W8, [X8, W12, UXTW]
	0x03259BA4 LDP X20, X19, [X31 + 0x10]
	0x03259BA8 BFM W0, W9, 0x18, 0x7
	0x03259BAC BFM W0, W10, 0x10, 0x7
	0x03259BB0 BFM W0, W8, 0x8, 0x7
	0x03259BB4 LDP X30, X21, [X31], #0x20
	0x03259BB8 RET
	0x03259BBC BL 0x1C16F28
	0x03259BC0 BL 0x1C16F20
	0x03259BC4 AND W8, W0, 0x80808080
	0x03259BC8 MOVZ W10, 0x1B1B
	0x03259BCC UBFM W9, W0, 0x1F, 0x1E
	0x03259BD0 SUB W8, W8, W8, 0x7, LSR
	0x03259BD4 MOVK W10, 0x1B1B0000
	0x03259BD8 AND W9, W9, 0xFEFEFEFE
	0x03259BDC AND W8, W8, W10, 0x0
	0x03259BE0 EOR W0, W8, W9, 0x0
	0x03259BE4 RET
	0x03259BE8 EXTR W0, W0, W0, 0x10
	0x03259BEC RET
	0x03259BF0 EXTR W0, W0, W0, 0x18
	0x03259BF4 RET
	0x03259BF8 STR X30, [X31 - 0x60]!
	0x03259BFC STP X28, X27, [X31 + 0x10]
	0x03259C00 STP X26, X25, [X31 + 0x20]
	0x03259C04 STP X24, X23, [X31 + 0x30]
	0x03259C08 STP X22, X21, [X31 + 0x40]
	0x03259C0C STP X20, X19, [X31 + 0x50]
	0x03259C10 ADRP X27, 0x1183000
	0x03259C14 ADRP X28, 0xE9A000
	0x03259C18 ADRP X19, 0xECA000
	0x03259C1C ADRP X20, 0xECA000
	0x03259C20 ADRP X22, 0xE9B000
	0x03259C24 ADRP X26, 0xECA000
	0x03259C28 ADRP X25, 0xECA000
	0x03259C2C ADRP X24, 0xECA000
	0x03259C30 ADRP X23, 0xECA000
	0x03259C34 ADRP X21, 0xECA000
	0x03259C38 LDR X28, [X28 + 0x618]
	0x03259C3C LDR X19, [X19 + 0x228]
	0x03259C40 LDR X20, [X20 + 0x1A8]
	0x03259C44 LDR X22, [X22 + 0xE58]
	0x03259C48 LDRB W8, [X27 + 0x50C]
	0x03259C4C LDR X26, [X26 + 0x230]
	0x03259C50 LDR X25, [X25 + 0x238]
	0x03259C54 LDR X24, [X24 + 0x240]
	0x03259C58 LDR X23, [X23 + 0x248]
	0x03259C5C LDR X21, [X21 + 0x250]
	0x03259C60 TBNZ X8, 0x0, 0x3259CD8
	0x03259C64 ADRP X0, 0xE9A000
	0x03259C68 LDR X0, [X0 + 0x618]
	0x03259C6C BL 0x1C16CF4
	0x03259C70 ADRP X0, 0xE9B000
	0x03259C74 LDR X0, [X0 + 0xE58]
	0x03259C78 BL 0x1C16CF4
	0x03259C7C ADRP X0, 0xECA000
	0x03259C80 LDR X0, [X0 + 0x1A8]
	0x03259C84 BL 0x1C16CF4
	0x03259C88 ADRP X0, 0xECA000
	0x03259C8C LDR X0, [X0 + 0x238]
	0x03259C90 BL 0x1C16CF4
	0x03259C94 ADRP X0, 0xECA000
	0x03259C98 LDR X0, [X0 + 0x230]
	0x03259C9C BL 0x1C16CF4
	0x03259CA0 ADRP X0, 0xECA000
	0x03259CA4 LDR X0, [X0 + 0x250]
	0x03259CA8 BL 0x1C16CF4
	0x03259CAC ADRP X0, 0xECA000
	0x03259CB0 LDR X0, [X0 + 0x228]
	0x03259CB4 BL 0x1C16CF4
	0x03259CB8 ADRP X0, 0xECA000
	0x03259CBC LDR X0, [X0 + 0x248]
	0x03259CC0 BL 0x1C16CF4
	0x03259CC4 ADRP X0, 0xECA000
	0x03259CC8 LDR X0, [X0 + 0x240]
	0x03259CCC BL 0x1C16CF4
	0x03259CD0 MOVZ W8, 0x1
	0x03259CD4 STRB W8, [X27 + 0x50C]
	0x03259CD8 LDR X0, [X28]
	0x03259CDC MOVZ W1, 0x100
	0x03259CE0 BL 0x1C16D6C
	0x03259CE4 LDR X1, [X19]
	0x03259CE8 MOV X2, X31
	0x03259CEC MOV X19, X0
	0x03259CF0 BL 0x32C5BD8
	0x03259CF4 LDR X8, [X20]
	0x03259CF8 MOVZ W1, 0x1E
	0x03259CFC LDR X8, [X8 + 0xB8]
	0x03259D00 STR X19, [X8]
	0x03259D04 LDR X0, [X22]
	0x03259D08 BL 0x1C16D6C
	0x03259D0C LDR X1, [X26]
	0x03259D10 MOV X2, X31
	0x03259D14 MOV X19, X0
	0x03259D18 BL 0x32C5BD8
	0x03259D1C LDR X8, [X20]
	0x03259D20 MOVZ W1, 0x400
	0x03259D24 LDR X8, [X8 + 0xB8]
	0x03259D28 STR X19, [X8 + 0x8]
	0x03259D2C LDR X0, [X22]
	0x03259D30 BL 0x1C16D6C
	0x03259D34 LDR X1, [X25]
	0x03259D38 MOV X2, X31
	0x03259D3C MOV X19, X0
	0x03259D40 BL 0x32C5BD8
	0x03259D44 LDR X8, [X20]
	0x03259D48 MOVZ W1, 0x400
	0x03259D4C LDR X8, [X8 + 0xB8]
	0x03259D50 STR X19, [X8 + 0x10]
	0x03259D54 LDR X0, [X22]
	0x03259D58 BL 0x1C16D6C
	0x03259D5C LDR X1, [X24]
	0x03259D60 MOV X2, X31
	0x03259D64 MOV X19, X0
	0x03259D68 BL 0x32C5BD8
	0x03259D6C LDR X8, [X20]
	0x03259D70 MOVZ W1, 0x400
	0x03259D74 LDR X8, [X8 + 0xB8]
	0x03259D78 STR X19, [X8 + 0x18]
	0x03259D7C LDR X0, [X22]
	0x03259D80 BL 0x1C16D6C
	0x03259D84 LDR X1, [X23]
	0x03259D88 MOV X2, X31
	0x03259D8C MOV X19, X0
	0x03259D90 BL 0x32C5BD8
	0x03259D94 LDR X8, [X20]
	0x03259D98 MOVZ W1, 0x400
	0x03259D9C LDR X8, [X8 + 0xB8]
	0x03259DA0 STR X19, [X8 + 0x20]
	0x03259DA4 LDR X0, [X22]
	0x03259DA8 BL 0x1C16D6C
	0x03259DAC LDR X1, [X21]
	0x03259DB0 MOV X2, X31
	0x03259DB4 MOV X19, X0
	0x03259DB8 BL 0x32C5BD8
	0x03259DBC LDR X8, [X20]
	0x03259DC0 LDP X22, X21, [X31 + 0x40]
	0x03259DC4 LDP X24, X23, [X31 + 0x30]
	0x03259DC8 LDP X26, X25, [X31 + 0x20]
	0x03259DCC LDR X8, [X8 + 0xB8]
	0x03259DD0 LDP X28, X27, [X31 + 0x10]
	0x03259DD4 STR X19, [X8 + 0x28]
	0x03259DD8 LDP X20, X19, [X31 + 0x50]
	0x03259DDC LDR X30, [X31], #0x60
	0x03259DE0 RET
	0x03259DE4 STP X30, X19, [X31 - 0x10]!
	0x03259DE8 MOV X1, X31
	0x03259DEC MOV X19, X0
	0x03259DF0 BL 0x3251230
	0x03259DF4 MOVZ W8, 0xA0
	0x03259DF8 STR W8, [X19 + 0x14]
	0x03259DFC LDP X30, X19, [X31], #0x10
	0x03259E00 RET
	0x03259E04 STR X30, [X31 - 0x20]!
	0x03259E08 STP X20, X19, [X31 + 0x10]
	0x03259E0C ADRP X19, 0x1183000
	0x03259E10 ADRP X20, 0xECA000
	0x03259E14 LDRB W8, [X19 + 0x50D]
	0x03259E18 LDR X20, [X20 + 0x98]
	0x03259E1C TBNZ X8, 0x0, 0x3259E34
	0x03259E20 ADRP X0, 0xECA000
	0x03259E24 LDR X0, [X0 + 0x98]
	0x03259E28 BL 0x1C16CF4
	0x03259E2C MOVZ W8, 0x1
	0x03259E30 STRB W8, [X19 + 0x50D]
	0x03259E34 LDR X0, [X20]
	0x03259E38 BL 0x1C16F10
	0x03259E3C MOV X19, X0
	0x03259E40 BL 0x3254C7C
	0x03259E44 MOV X0, X19
	0x03259E48 LDP X20, X19, [X31 + 0x10]
	0x03259E4C LDR X30, [X31], #0x20
	0x03259E50 RET
	0x03259E54 STR X30, [X31 - 0x10]!
	0x03259E58 LDR X8, [X0 + 0x38]
	0x03259E5C STR X31, [X0 + 0x30]
	0x03259E60 CBZ X8, 0x3259ED4
	0x03259E64 LDR W9, [X8 + 0x18]
	0x03259E68 CBZ W9, 0x3259ED0
	0x03259E6C MOVZ W10, 0x2301
	0x03259E70 MOVK W10, 0x67450000
	0x03259E74 CMP W9, 0x1
	0x03259E78 STR W10, [X8 + 0x20]
	0x03259E7C B.EQ 0x3259ED0
	0x03259E80 MOVZ W10, 0xAB89
	0x03259E84 MOVK W10, 0xEFCD0000
	0x03259E88 CMP W9, 0x2
	0x03259E8C STR W10, [X8 + 0x24]
	0x03259E90 B.LS 0x3259ED0
	0x03259E94 MOVZ W10, 0xDCFE
	0x03259E98 MOVK W10, 0x98BA0000
	0x03259E9C CMP W9, 0x3
	0x03259EA0 STR W10, [X8 + 0x28]
	0x03259EA4 B.EQ 0x3259ED0
	0x03259EA8 MOVZ W10, 0x5476
	0x03259EAC MOVK W10, 0x10320000
	0x03259EB0 CMP W9, 0x4
	0x03259EB4 STR W10, [X8 + 0x2C]
	0x03259EB8 B.LS 0x3259ED0
	0x03259EBC MOVZ W9, 0xE1F0
	0x03259EC0 MOVK W9, 0xC3D20000
	0x03259EC4 STR W9, [X8 + 0x30]
	0x03259EC8 LDR X30, [X31], #0x10
	0x03259ECC RET
	0x03259ED0 BL 0x1C16F28
	0x03259ED4 BL 0x1C16F20
	0x03259ED8 STP X30, X19, [X31 - 0x10]!
	0x03259EDC MOV X19, X0
	0x03259EE0 BL 0x3259E54
	0x03259EE4 LDR X0, [X19 + 0x40]
	0x03259EE8 CBZ X0, 0x3259F18
	0x03259EEC LDR W2, [X0 + 0x18]
	0x03259EF0 MOV W1, W31
	0x03259EF4 MOV X3, X31
	0x03259EF8 BL 0x339FA34
	0x03259EFC LDR X0, [X19 + 0x28]
	0x03259F00 CBZ X0, 0x3259F18
	0x03259F04 LDR W2, [X0 + 0x18]
	0x03259F08 MOV W1, W31
	0x03259F0C MOV X3, X31
	0x03259F10 LDP X30, X19, [X31], #0x10
	0x03259F14 B 0x339FA34
	0x03259F18 BL 0x1C16F20
	0x03259F1C B 0x3259F20
	0x03259F20 STP X30, X27, [X31 - 0x50]!
	0x03259F24 STP X26, X25, [X31 + 0x10]
	0x03259F28 STP X24, X23, [X31 + 0x20]
	0x03259F2C STP X22, X21, [X31 + 0x30]
	0x03259F30 STP X20, X19, [X31 + 0x40]
	0x03259F34 LDP X8, X9, [X0 + 0x30]
	0x03259F38 MOV W22, W3
	0x03259F3C MOV W19, W2
	0x03259F40 MOV X20, X1
	0x03259F44 MOV X21, X0
	0x03259F48 ADD X10, X8, W3, SXTW
	0x03259F4C STR X10, [X0 + 0x30]
	0x03259F50 CBZ X9, 0x3259F68
	0x03259F54 LDR W10, [X9 + 0x18]
	0x03259F58 ADD X9, X9, 0x20
	0x03259F5C CMP W10, 0x0
	0x03259F60 CSEL X23, X31, X9, EQ
	0x03259F64 B 0x3259F6C
	0x03259F68 MOV X23, X31
	0x03259F6C LDR X2, [X21 + 0x28]
	0x03259F70 AND W24, W8, 0x3F
	0x03259F74 CBZ X2, 0x3259F8C
	0x03259F78 LDR W8, [X2 + 0x18]
	0x03259F7C ADD X9, X2, 0x20
	0x03259F80 CMP W8, 0x0
	0x03259F84 CSEL X25, X31, X9, EQ
	0x03259F88 B 0x3259F90
	0x03259F8C MOV X25, X31
	0x03259F90 LDR X8, [X21 + 0x40]
	0x03259F94 CBZ X8, 0x3259FB0
	0x03259F98 LDR W9, [X8 + 0x18]
	0x03259F9C ADD X8, X8, 0x20
	0x03259FA0 CMP W9, 0x0
	0x03259FA4 CSEL X26, X31, X8, EQ
	0x03259FA8 CBNZ W24, 0x3259FB8
	0x03259FAC B 0x325A000
	0x03259FB0 MOV X26, X31
	0x03259FB4 CBZ W24, 0x325A000
	0x03259FB8 ADD W8, W24, W22
	0x03259FBC CMP W8, 0x40
	0x03259FC0 B.LT 0x325A000
	0x03259FC4 MOVZ W8, 0x40
	0x03259FC8 SUB W27, W8, W24
	0x03259FCC MOV X0, X20
	0x03259FD0 MOV W1, W19
	0x03259FD4 MOV W3, W24
	0x03259FD8 MOV W4, W27
	0x03259FDC MOV X5, X31
	0x03259FE0 BL 0x33A8750
	0x03259FE4 MOV X0, X26
	0x03259FE8 MOV X1, X23
	0x03259FEC MOV X2, X25
	0x03259FF0 ADD W19, W27, W19
	0x03259FF4 SUB W22, W22, W27
	0x03259FF8 BL 0x325A248
	0x03259FFC MOV W24, W31
	0x0325A000 CMP W22, 0x40
	0x0325A004 B.LT 0x325A04C
	0x0325A008 LDR X2, [X21 + 0x28]
	0x0325A00C MOVZ W4, 0x40
	0x0325A010 MOV X0, X20
	0x0325A014 MOV W1, W19
	0x0325A018 MOV W3, W31
	0x0325A01C MOV X5, X31
	0x0325A020 BL 0x33A8750
	0x0325A024 MOV X0, X26
	0x0325A028 MOV X1, X23
	0x0325A02C MOV X2, X25
	0x0325A030 ADD W19, W19, 0x40
	0x0325A034 SUB W27, W22, 0x40
	0x0325A038 BL 0x325A248
	0x0325A03C CMP W22, 0x7F
	0x0325A040 MOV W22, W27
	0x0325A044 B.GT 0x325A008
	0x0325A048 B 0x325A050
	0x0325A04C MOV W27, W22
	0x0325A050 CMP W27, 0x1
	0x0325A054 B.LT 0x325A088
	0x0325A058 LDR X2, [X21 + 0x28]
	0x0325A05C MOV X0, X20
	0x0325A060 MOV W1, W19
	0x0325A064 MOV W3, W24
	0x0325A068 LDP X20, X19, [X31 + 0x40]
	0x0325A06C LDP X22, X21, [X31 + 0x30]
	0x0325A070 LDP X24, X23, [X31 + 0x20]
	0x0325A074 LDP X26, X25, [X31 + 0x10]
	0x0325A078 MOV W4, W27
	0x0325A07C MOV X5, X31
	0x0325A080 LDP X30, X27, [X31], #0x50
	0x0325A084 B 0x33A8750
	0x0325A088 LDP X20, X19, [X31 + 0x40]
	0x0325A08C LDP X22, X21, [X31 + 0x30]
	0x0325A090 LDP X24, X23, [X31 + 0x20]
	0x0325A094 LDP X26, X25, [X31 + 0x10]
	0x0325A098 LDP X30, X27, [X31], #0x50
	0x0325A09C RET
	0x0325A0A0 B 0x325A0A4
	0x0325A0A4 STP X30, X21, [X31 - 0x20]!
	0x0325A0A8 STP X20, X19, [X31 + 0x10]
	0x0325A0AC ADRP X20, 0x1182000
	0x0325A0B0 ADRP X21, 0xE99000
	0x0325A0B4 LDRB W8, [X20 + 0x50F]
	0x0325A0B8 LDR X21, [X21 + 0x618]
	0x0325A0BC MOV X19, X0
	0x0325A0C0 TBNZ X8, 0x0, 0x325A0D8
	0x0325A0C4 ADRP X0, 0xE99000
	0x0325A0C8 LDR X0, [X0 + 0x618]
	0x0325A0CC BL 0x1C16CF4
	0x0325A0D0 MOVZ W8, 0x1
	0x0325A0D4 STRB W8, [X20 + 0x50F]
	0x0325A0D8 LDR X0, [X21]
	0x0325A0DC MOVZ W1, 0x14
	0x0325A0E0 BL 0x1C16D6C
	0x0325A0E4 LDR W8, [X19 + 0x30]
	0x0325A0E8 MOV X20, X0
	0x0325A0EC MOVZ W9, 0x80
	0x0325A0F0 LDR X0, [X21]
	0x0325A0F4 AND W8, W8, 0x3F
	0x0325A0F8 CMP W8, 0x38
	0x0325A0FC MOVZ W10, 0x40
	0x0325A100 CSEL W9, W10, W9, CC
	0x0325A104 SUB W21, W9, W8
	0x0325A108 MOV W1, W21
	0x0325A10C BL 0x1C16D6C
	0x0325A110 CBZ X0, 0x325A244
	0x0325A114 LDR W8, [X0 + 0x18]
	0x0325A118 MOV X1, X0
	0x0325A11C CBZ W8, 0x325A240
	0x0325A120 SUB W9, W21, 0x1
	0x0325A124 MOVZ W10, 0x80
	0x0325A128 CMP W9, W8
	0x0325A12C STRB W10, [X1 + 0x20]
	0x0325A130 B.CS 0x325A240
	0x0325A134 LDR X8, [X19 + 0x30]
	0x0325A138 ADD X9, X1, W9, UXTW
	0x0325A13C UBFM X10, X8, 0x35, 0x3F
	0x0325A140 STRB W10, [X9 + 0x20]
	0x0325A144 LDR W10, [X1 + 0x18]
	0x0325A148 SUB W9, W21, 0x2
	0x0325A14C CMP W9, W10
	0x0325A150 B.CS 0x325A240
	0x0325A154 UBFM X10, X8, 0x2D, 0x3F
	0x0325A158 ADD X9, X1, W9, UXTW
	0x0325A15C STRB W10, [X9 + 0x20]
	0x0325A160 LDR W10, [X1 + 0x18]
	0x0325A164 SUB W9, W21, 0x3
	0x0325A168 CMP W9, W10
	0x0325A16C B.CS 0x325A240
	0x0325A170 UBFM X10, X8, 0x25, 0x3F
	0x0325A174 ADD X9, X1, W9, UXTW
	0x0325A178 STRB W10, [X9 + 0x20]
	0x0325A17C LDR W10, [X1 + 0x18]
	0x0325A180 SUB W9, W21, 0x4
	0x0325A184 CMP W9, W10
	0x0325A188 B.CS 0x325A240
	0x0325A18C UBFM X10, X8, 0x1D, 0x3F
	0x0325A190 ADD X9, X1, W9, UXTW
	0x0325A194 STRB W10, [X9 + 0x20]
	0x0325A198 LDR W10, [X1 + 0x18]
	0x0325A19C SUB W9, W21, 0x5
	0x0325A1A0 CMP W9, W10
	0x0325A1A4 B.CS 0x325A240
	0x0325A1A8 UBFM X10, X8, 0x15, 0x3F
	0x0325A1AC ADD X9, X1, W9, UXTW
	0x0325A1B0 STRB W10, [X9 + 0x20]
	0x0325A1B4 LDR W10, [X1 + 0x18]
	0x0325A1B8 SUB W9, W21, 0x6
	0x0325A1BC CMP W9, W10
	0x0325A1C0 B.CS 0x325A240
	0x0325A1C4 UBFM X10, X8, 0xD, 0x3F
	0x0325A1C8 ADD X9, X1, W9, UXTW
	0x0325A1CC STRB W10, [X9 + 0x20]
	0x0325A1D0 LDR W10, [X1 + 0x18]
	0x0325A1D4 SUB W9, W21, 0x7
	0x0325A1D8 CMP W9, W10
	0x0325A1DC B.CS 0x325A240
	0x0325A1E0 UBFM X10, X8, 0x5, 0x3F
	0x0325A1E4 ADD X9, X1, W9, UXTW
	0x0325A1E8 STRB W10, [X9 + 0x20]
	0x0325A1EC LDR W10, [X1 + 0x18]
	0x0325A1F0 SUB W9, W21, 0x8
	0x0325A1F4 CMP W9, W10
	0x0325A1F8 B.CS 0x325A240
	0x0325A1FC UBFM W8, W8, 0x1D, 0x1C
	0x0325A200 ADD X9, X1, W9, UXTW
	0x0325A204 STRB W8, [X9 + 0x20]
	0x0325A208 LDR W3, [X1 + 0x18]
	0x0325A20C MOV X0, X19
	0x0325A210 MOV W2, W31
	0x0325A214 BL 0x3259F20
	0x0325A218 LDR X1, [X19 + 0x38]
	0x0325A21C MOVZ W2, 0x5
	0x0325A220 MOV X0, X20
	0x0325A224 MOV X3, X31
	0x0325A228 BL 0x32625E8
	0x0325A22C STR X20, [X19 + 0x18]
	0x0325A230 MOV X0, X20
	0x0325A234 LDP X20, X19, [X31 + 0x10]
	0x0325A238 LDP X30, X21, [X31], #0x20
	0x0325A23C RET
	0x0325A240 BL 0x1C16F28
	0x0325A244 BL 0x1C16F20
	0x0325A248 SUB X31, X31, 0x90
	0x0325A24C STP X29, X30, [X31 + 0x30]
	0x0325A250 STP X28, X27, [X31 + 0x40]
	0x0325A254 STP X26, X25, [X31 + 0x50]
	0x0325A258 STP X24, X23, [X31 + 0x60]
	0x0325A25C STP X22, X21, [X31 + 0x70]
	0x0325A260 STP X20, X19, [X31 + 0x80]
	0x0325A264 LDP W25, W21, [X1]
	0x0325A268 LDP W26, W22, [X1 + 0x8]
	0x0325A26C LDR W23, [X1 + 0x10]
	0x0325A270 STR X1, [X31 + 0x28]
	0x0325A274 MOVZ W1, 0x10
	0x0325A278 MOV X3, X31
	0x0325A27C MOV X20, X0
	0x0325A280 BL 0x3262598
	0x0325A284 LDP W3, W15, [X20 + 0x10]
	0x0325A288 EOR W27, W26, W21, 0x0
	0x0325A28C LDP W8, W14, [X20]
	0x0325A290 ORN W29, W26, W22, 0x0
	0x0325A294 EOR W27, W27, W22, 0x0
	0x0325A298 EOR W29, W29, W21, 0x0
	0x0325A29C LDP W10, W9, [X20 + 0x8]
	0x0325A2A0 LDP W13, W17, [X20 + 0x18]
	0x0325A2A4 LDP W4, W11, [X20 + 0x20]
	0x0325A2A8 LDR W16, [X20 + 0x28]
	0x0325A2AC LDP W12, W0, [X20 + 0x2C]
	0x0325A2B0 LDP W5, W19, [X20 + 0x34]
	0x0325A2B4 LDR W2, [X20 + 0x3C]
	0x0325A2B8 MOVZ W20, 0x8BE6
	0x0325A2BC ADD W27, W27, W25
	0x0325A2C0 ADD W25, W25, W29
	0x0325A2C4 MOVK W20, 0x50A20000
	0x0325A2C8 ADD W25, W25, W15
	0x0325A2CC ADD W27, W27, W8
	0x0325A2D0 ADD W25, W25, W20
	0x0325A2D4 EXTR W27, W27, W27, 0x15
	0x0325A2D8 EXTR W25, W25, W25, 0x18
	0x0325A2DC EXTR W24, W26, W26, 0x16
	0x0325A2E0 EOR W28, W21, W26, 0x16
	0x0325A2E4 ORN W26, W21, W26, 0x16
	0x0325A2E8 ADD W27, W27, W23
	0x0325A2EC ADD W25, W25, W23
	0x0325A2F0 ADD W29, W14, W23
	0x0325A2F4 EOR W28, W28, W27, 0x0
	0x0325A2F8 EOR W26, W25, W26, 0x0
	0x0325A2FC ADD W28, W29, W28
	0x0325A300 ADD W23, W23, W26
	0x0325A304 EXTR W28, W28, W28, 0x12
	0x0325A308 ADD W23, W23, W19
	0x0325A30C EOR W26, W27, W21, 0x16
	0x0325A310 ADD W28, W28, W22
	0x0325A314 ADD W23, W23, W20
	0x0325A318 ADD W30, W10, W22
	0x0325A31C EOR W26, W26, W28, 0x0
	0x0325A320 EXTR W23, W23, W23, 0x17
	0x0325A324 EXTR W7, W21, W21, 0x16
	0x0325A328 ADD W26, W30, W26
	0x0325A32C ADD W23, W23, W22
	0x0325A330 ORN W21, W25, W21, 0x16
	0x0325A334 ADD W22, W22, W17
	0x0325A338 EOR W21, W23, W21, 0x0
	0x0325A33C EXTR W26, W26, W26, 0x11
	0x0325A340 ADD W21, W22, W21
	0x0325A344 EOR W22, W28, W27, 0x16
	0x0325A348 ADD W26, W26, W24
	0x0325A34C ADD W29, W9, W24
	0x0325A350 EOR W22, W22, W26, 0x0
	0x0325A354 ADD W22, W29, W22
	0x0325A358 ADD W21, W21, W20
	0x0325A35C EXTR W21, W21, W21, 0x17
	0x0325A360 EXTR W22, W22, W22, 0x14
	0x0325A364 ADD W29, W24, W8
	0x0325A368 ADD W21, W21, W24
	0x0325A36C EOR W24, W26, W28, 0x16
	0x0325A370 ADD W22, W22, W7
	0x0325A374 ADD W30, W3, W7
	0x0325A378 EOR W24, W24, W22, 0x0
	0x0325A37C ADD W24, W30, W24
	0x0325A380 ORN W30, W23, W25, 0x16
	0x0325A384 EOR W30, W21, W30, 0x0
	0x0325A388 ADD W29, W29, W30
	0x0325A38C ADD W29, W29, W20
	0x0325A390 EXTR W27, W27, W27, 0x16
	0x0325A394 EXTR W24, W24, W24, 0x1B
	0x0325A398 EXTR W29, W29, W29, 0x15
	0x0325A39C ADD W30, W7, W11
	0x0325A3A0 ADD W24, W24, W27
	0x0325A3A4 ADD W7, W29, W7
	0x0325A3A8 EOR W29, W22, W26, 0x16
	0x0325A3AC ADD W27, W27, W15
	0x0325A3B0 EOR W29, W29, W24, 0x0
	0x0325A3B4 ADD W27, W27, W29
	0x0325A3B8 ORN W29, W21, W23, 0x16
	0x0325A3BC EXTR W28, W28, W28, 0x16
	0x0325A3C0 EOR W29, W7, W29, 0x0
	0x0325A3C4 EXTR W27, W27, W27, 0x18
	0x0325A3C8 ADD W29, W30, W29
	0x0325A3CC ADD W30, W28, W13
	0x0325A3D0 ADD W27, W27, W28
	0x0325A3D4 EOR W28, W24, W22, 0x16
	0x0325A3D8 EOR W28, W28, W27, 0x0
	0x0325A3DC ADD W28, W30, W28
	0x0325A3E0 ADD W29, W29, W20
	0x0325A3E4 MOV W1, W17
	0x0325A3E8 EXTR W25, W25, W25, 0x16
	0x0325A3EC EXTR W26, W26, W26, 0x16
	0x0325A3F0 EXTR W29, W29, W29, 0x13
	0x0325A3F4 EXTR W28, W28, W28, 0x19
	0x0325A3F8 ADD W30, W10, W25
	0x0325A3FC ADD W25, W29, W25
	0x0325A400 ADD W29, W26, W1
	0x0325A404 ADD W26, W28, W26
	0x0325A408 ORN W28, W7, W21, 0x16

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 96
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move [X29-88], X8
	017 Move X8, [X8+40]
	018 Move X20, 0x1184000
	019 Move W22, W7
	020 Move W21, W6
	021 Move [X29-8], X8
	022 Move W8, [X20+1289]
	023 Move W26, W5
	024 Move X19, X4
	025 Move W28, W3
	026 Move W23, W2
	027 Move X24, X1
	028 Move X25, X0
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {44}
	033 Move X0, 0xE9B000
	034 Move X0, [X0+1560]
	035 Call 0x1C17CF4
	036 Move X0, 0xECB000
	037 Move X0, [X0+520]
	038 Call 0x1C17CF4
	039 Move X0, 0xECB000
	040 Move X0, [X0+424]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X20+1289], W8
	044 Compare X24, 0
	045 JumpIfEqual {633}
	046 Move W8, [X24+24]
	047 Add W9, W28, W23
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X8, [X19]
	050 Compare X8, 0
	051 JumpIfEqual {57}
	052 Move W8, [X8+24]
	053 Subtract W8, W8, W26
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X0, 0xECB000
	056 Move X0, [X0+504]
	057 Move X8, 0xE9B000
	058 Move X8, [X8+1560]
	059 Move W1, W28
	060 Move X0, [X8]
	061 Call 0x1C17D6C
	062 Move W26, W31
	063 Move [X19], X0
	064 Move X8, [X25+80]
	065 Compare X8, 0
	066 JumpIfEqual {72}
	067 Move W9, [X8+24]
	068 Add X8, X8, 32
	069 NotImplemented "Instruction CMP not yet implemented."
	070 NotImplemented "Instruction CSEL not yet implemented."
	071 Move [X29-16], X8
	072 Move [X29-16], X31
	073 Move X8, [X25+48]
	074 Compare X8, 0
	075 JumpIfEqual {81}
	076 Move W9, [X8+24]
	077 Add X8, X8, 32
	078 NotImplemented "Instruction CMP not yet implemented."
	079 NotImplemented "Instruction CSEL not yet implemented."
	080 Move [X29-24], X8
	081 Move [X29-24], X31
	082 Move X8, [X25+88]
	083 Compare X8, 0
	084 JumpIfEqual {90}
	085 Move W9, [X8+24]
	086 Add X8, X8, 32
	087 NotImplemented "Instruction CMP not yet implemented."
	088 NotImplemented "Instruction CSEL not yet implemented."
	089 Move [X29-32], X8
	090 Move [X29-32], X31
	091 Move X20, 0xECB000
	092 Move X8, [X25+56]
	093 Move X20, [X20+424]
	094 Compare X8, 0
	095 JumpIfEqual {101}
	096 Move W9, [X8+24]
	097 Add X8, X8, 32
	098 NotImplemented "Instruction CMP not yet implemented."
	099 NotImplemented "Instruction CSEL not yet implemented."
	100 Move [X29-40], X8
	101 Move [X29-40], X31
	102 Move X0, [X20]
	103 Move W8, [X0+224]
	104 Compare W8, 0
	105 JumpIfNotEqual {108}
	106 Call 0x1C17DFC
	107 Move X0, [X20]
	108 Move X8, [X0+184]
	109 Move X9, [X8+16]
	110 Compare X9, 0
	111 JumpIfEqual {117}
	112 Move W10, [X9+24]
	113 Add X9, X9, 32
	114 NotImplemented "Instruction CMP not yet implemented."
	115 NotImplemented "Instruction CSEL not yet implemented."
	116 Move [X29-48], X9
	117 Move [X29-48], X31
	118 Move W9, [X0+224]
	119 Compare W9, 0
	120 JumpIfNotEqual {124}
	121 Call 0x1C17DFC
	122 Move X0, [X20]
	123 Move X8, [X0+184]
	124 Move X9, [X8+24]
	125 Compare X9, 0
	126 JumpIfEqual {132}
	127 Move W10, [X9+24]
	128 Add X9, X9, 32
	129 NotImplemented "Instruction CMP not yet implemented."
	130 NotImplemented "Instruction CSEL not yet implemented."
	131 Move [X29-56], X9
	132 Move [X29-56], X31
	133 Move W9, [X0+224]
	134 Compare W9, 0
	135 JumpIfNotEqual {139}
	136 Call 0x1C17DFC
	137 Move X0, [X20]
	138 Move X8, [X0+184]
	139 Move X9, [X8+32]
	140 Compare X9, 0
	141 JumpIfEqual {147}
	142 Move W10, [X9+24]
	143 Add X9, X9, 32
	144 NotImplemented "Instruction CMP not yet implemented."
	145 NotImplemented "Instruction CSEL not yet implemented."
	146 Move [X29-64], X9
	147 Move [X29-64], X31
	148 Move W9, [X0+224]
	149 Compare W9, 0
	150 JumpIfNotEqual {154}
	151 Call 0x1C17DFC
	152 Move X8, [X20]
	153 Move X8, [X8+184]
	154 Move X8, [X8+40]
	155 Move [X29-80], W22
	156 Compare X8, 0
	157 JumpIfEqual {163}
	158 Move W9, [X8+24]
	159 Add X8, X8, 32
	160 NotImplemented "Instruction CMP not yet implemented."
	161 NotImplemented "Instruction CSEL not yet implemented."
	162 Move [X29-72], X8
	163 Move [X29-72], X31
	164 Move W22, [X25+68]
	165 Move [X29-76], W21
	166 NotImplemented "Instruction SBFM not yet implemented."
	167 Compare W22, 0
	168 JumpIfEqual {187}
	169 Move X8, W22
	170 Move X8, X8
	171 ShiftRight X8, 62
	172 And X8, X8, 0x1FFFFFFF
	173 Add X8, X8, 15
	174 Add X9, X31, 0
	175 And X8, X8, 0xFFFFFFFF
	176 Subtract X21, X9, X8
	177 Add X31, X21, 0
	178 Move X0, X21
	179 Move W1, W31
	180 Move X2, X27
	181 Call 0x3EB2B10
	182 Add X9, X27, 15
	183 Add X8, X31, 0
	184 And X9, X9, 0xFFFFFFFF
	185 Subtract X20, X8, X9
	186 Add X31, X20, 0
	187 Move X0, X31
	188 Move W1, W31
	189 Move X2, X27
	190 Call 0x3EB2B10
	191 Move X21, X31
	192 Move X20, X31
	193 Move X0, X20
	194 Move W1, W31
	195 Move X2, X27
	196 Call 0x3EB2B10
	197 Move W8, [X25+36]
	198 NotImplemented "Instruction SDIV not yet implemented."
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Move [X29-92], W28
	201 Move W28, W31
	202 Move W8, [X25+16]
	203 NotImplemented "Instruction CMP not yet implemented."
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Move X8, [X25+120]
	206 Compare X8, 0
	207 JumpIfEqual {633}
	208 Move W9, [X8+24]
	209 Move X11, X31
	210 Move X10, X31
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Add X13, X11, 1
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Add X12, X13, 1
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Add X12, X12, 1
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Add X14, X8, W11
	219 Add X13, X8, W13
	220 Add X15, X11, 2
	221 Move W14, [X14+32]
	222 Move W13, [X13+32]
	223 Add X17, X8, 32
	224 Add X16, X11, 3
	225 Move W15, [X17]
	226 Move W16, [X17]
	227 NotImplemented "Instruction BFM not yet implemented."
	228 Add X10, X10, 1
	229 NotImplemented "Instruction BFM not yet implemented."
	230 NotImplemented "Instruction BFM not yet implemented."
	231 Move [X21], W14
	232 NotImplemented "Instruction LDRSW not yet implemented."
	233 NotImplemented "Instruction CMP not yet implemented."
	234 Add X11, X12, 1
	235 NotImplemented "Instruction CMP not yet implemented."
	236 Move W9, [X24+24]
	237 Move X8, X31
	238 Move X10, X21
	239 Move W11, W23
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Add W13, W11, 1
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Add W12, W13, 1
	244 NotImplemented "Instruction CMP not yet implemented."
	245 Add W12, W12, 1
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Add X14, X24, W11
	248 Add X13, X24, W13
	249 Add W15, W11, 2
	250 Move W14, [X14+32]
	251 Move W13, [X13+32]
	252 Add X16, X24, 32
	253 Add W11, W11, 3
	254 Move W15, [X16]
	255 Move W11, [X16]
	256 NotImplemented "Instruction BFM not yet implemented."
	257 Add X8, X8, 1
	258 NotImplemented "Instruction BFM not yet implemented."
	259 NotImplemented "Instruction BFM not yet implemented."
	260 Move [X10+4], W14
	261 NotImplemented "Instruction LDRSW not yet implemented."
	262 NotImplemented "Instruction CMP not yet implemented."
	263 Add W11, W12, 1
	264 Move W8, [X25+16]
	265 NotImplemented "Instruction CMP not yet implemented."
	266 Move X2, [X29-24]
	267 Move X1, [X29-16]
	268 Move X4, [X29-56]
	269 Move X3, [X29-48]
	270 Move X0, X25
	271 Move X5, X21
	272 Move X6, X20
	273 Call RijndaelManagedTransform.Enc, X0, X1, X2, X3, X4, X5, X6
	274 Move W8, [X25+68]
	275 NotImplemented "Instruction CMP not yet implemented."
	276 Move X8, X31
	277 Move X9, X31
	278 Move X10, W23
	279 Add X11, X24, W23
	280 Move W12, W23
	281 Move W13, W26
	282 Move W14, [X25+36]
	283 Add X15, X10, X8
	284 Add W14, W14, W23
	285 NotImplemented "Instruction CMP not yet implemented."
	286 Move W14, [X24+24]
	287 Add W16, W12, W8
	288 NotImplemented "Instruction CMP not yet implemented."
	289 Move X16, [X19]
	290 Compare X16, 0
	291 JumpIfEqual {633}
	292 Move W17, [X16+24]
	293 Add X14, X13, X8
	294 NotImplemented "Instruction CMP not yet implemented."
	295 Add X0, X11, X8
	296 Move W17, [X20]
	297 Move W0, [X0+32]
	298 Add X16, X16, W14
	299 Add X15, X15, 1
	300 Xor W17, W0, W17
	301 Move [X16+32], W17
	302 Move W16, [X25+36]
	303 Add W16, W16, W23
	304 NotImplemented "Instruction CMP not yet implemented."
	305 Move W15, [X24+24]
	306 Add W16, W12, W8
	307 Add W16, W16, 1
	308 NotImplemented "Instruction CMP not yet implemented."
	309 Move X15, [X19]
	310 Compare X15, 0
	311 JumpIfEqual {633}
	312 Move W16, [X15+24]
	313 Add X14, X14, 1
	314 NotImplemented "Instruction CMP not yet implemented."
	315 Add X17, X11, X8
	316 Move W16, [X20]
	317 Move W17, [X17+33]
	318 Add X14, X15, W14
	319 Add X15, X10, X8
	320 Add X15, X15, 2
	321 Xor W16, W17, W16
	322 Move [X14+32], W16
	323 Move W14, [X25+36]
	324 Add W14, W14, W23
	325 NotImplemented "Instruction CMP not yet implemented."
	326 Move W14, [X24+24]
	327 Add W15, W12, W8
	328 Add W15, W15, 2
	329 NotImplemented "Instruction CMP not yet implemented."
	330 Move X14, [X19]
	331 Compare X14, 0
	332 JumpIfEqual {633}
	333 Move W16, [X14+24]
	334 Add X15, X13, X8
	335 Add X15, X15, 2
	336 NotImplemented "Instruction CMP not yet implemented."
	337 Add X17, X11, X8
	338 Move W16, [X20]
	339 Move W17, [X17+34]
	340 Add X14, X14, W15
	341 Add X15, X10, X8
	342 Add X15, X15, 3
	343 Xor W16, W17, W16
	344 Move [X14+32], W16
	345 Move W14, [X25+36]
	346 Add W14, W14, W23
	347 NotImplemented "Instruction CMP not yet implemented."
	348 Move W14, [X24+24]
	349 Add W15, W12, W8
	350 Add W15, W15, 3
	351 NotImplemented "Instruction CMP not yet implemented."
	352 Move X14, [X19]
	353 Compare X14, 0
	354 JumpIfEqual {633}
	355 Move W16, [X14+24]
	356 Add X15, X13, X8
	357 Add X15, X15, 3
	358 NotImplemented "Instruction CMP not yet implemented."
	359 Add X17, X11, X8
	360 Move W16, [X20]
	361 Move W17, [X17+35]
	362 Add X14, X14, W15
	363 Add X9, X9, 1
	364 Add X8, X8, 4
	365 Xor W16, W17, W16
	366 Move [X14+32], W16
	367 NotImplemented "Instruction LDRSW not yet implemented."
	368 NotImplemented "Instruction CMP not yet implemented."
	369 Add W26, W26, W8
	370 Move X2, [X29-40]
	371 Move X1, [X29-32]
	372 Move X4, [X29-72]
	373 Move X3, [X29-64]
	374 Move X0, X25
	375 Move X5, X21
	376 Move X6, X20
	377 Call RijndaelManagedTransform.Dec, X0, X1, X2, X3, X4, X5, X6
	378 Move W8, [X25+16]
	379 Move W13, [X25+68]
	380 NotImplemented "Instruction CMP not yet implemented."
	381 NotImplemented "Instruction CMP not yet implemented."
	382 Move X8, [X25+104]
	383 Compare X8, 0
	384 JumpIfEqual {633}
	385 Move W10, [X8+24]
	386 Move X9, X31
	387 Move W11, W23
	388 Move W12, 32
	389 NotImplemented "Instruction CMP not yet implemented."
	390 Add X13, X20, X12
	391 NotImplemented "Instruction LDUR not yet implemented."
	392 Move W15, [X8]
	393 Xor W14, W15, W14
	394 Move [X13-32], W14
	395 Move W15, [X24+24]
	396 Add X14, X11, X12
	397 Subtract X13, X14, 32
	398 NotImplemented "Instruction CMP not yet implemented."
	399 Add X16, X13, 1
	400 NotImplemented "Instruction CMP not yet implemented."
	401 Add X16, X16, 1
	402 NotImplemented "Instruction CMP not yet implemented."
	403 Add W16, W16, 1
	404 NotImplemented "Instruction CMP not yet implemented."
	405 Subtract X14, X14, 31
	406 Add X13, X24, W13
	407 Add X15, X11, X12
	408 Add X14, X24, W14
	409 Move W13, [X13+32]
	410 Subtract X16, X15, 30
	411 Move W14, [X14+32]
	412 Add X17, X24, 32
	413 Subtract X15, X15, 29
	414 Move W16, [X17]
	415 Move W15, [X17]
	416 NotImplemented "Instruction BFM not yet implemented."
	417 Add X9, X9, 1
	418 NotImplemented "Instruction BFM not yet implemented."
	419 NotImplemented "Instruction BFM not yet implemented."
	420 Move [X8], W13
	421 NotImplemented "Instruction LDRSW not yet implemented."
	422 Add X12, X12, 4
	423 NotImplemented "Instruction CMP not yet implemented."
	424 NotImplemented "Instruction CMP not yet implemented."
	425 Move X8, X31
	426 Move X9, X20
	427 Move X11, [X19]
	428 Compare X11, 0
	429 JumpIfEqual {633}
	430 Move W12, [X11+24]
	431 Move W10, W26
	432 NotImplemented "Instruction CMP not yet implemented."
	433 Move W12, [X9]
	434 Add X11, X11, W10
	435 Move [X11+32], W12
	436 Move X12, [X19]
	437 Compare X12, 0
	438 JumpIfEqual {633}
	439 Move W13, [X12+24]
	440 Add W11, W10, 1
	441 NotImplemented "Instruction CMP not yet implemented."
	442 Move W13, [X9]
	443 Add W14, W10, 1
	444 Add X12, X12, W14
	445 Move W13, W13
	446 ShiftRight W13, 8
	447 And W13, W13, 0x7FFFFFFF
	448 Move [X12+32], W13
	449 Move X12, [X19]
	450 Compare X12, 0
	451 JumpIfEqual {633}
	452 Move W13, [X12+24]
	453 Add W11, W11, 1
	454 NotImplemented "Instruction CMP not yet implemented."
	455 NotImplemented "Instruction LDRH not yet implemented."
	456 Add W14, W10, 2
	457 Add X12, X12, W14
	458 Move [X12+32], W13
	459 Move X12, [X19]
	460 Compare X12, 0
	461 JumpIfEqual {633}
	462 Move W13, [X12+24]
	463 Add W11, W11, 1
	464 NotImplemented "Instruction CMP not yet implemented."
	465 Move W13, [X9+3]
	466 Add W14, W10, 3
	467 Add X12, X12, W14
	468 Add X8, X8, 1
	469 Move [X12+32], W13
	470 NotImplemented "Instruction LDRSW not yet implemented."
	471 Add X9, X9, 4
	472 Add W26, W11, 1
	473 NotImplemented "Instruction CMP not yet implemented."
	474 Add W26, W10, 4
	475 Add W8, W26, W8
	476 Add W26, W8, 1
	477 Add W8, W26, W8
	478 Add W26, W8, 2
	479 Add W8, W26, W8
	480 Add W26, W8, 3
	481 Move W8, [X25+32]
	482 Move W4, [X25+36]
	483 Subtract W3, W8, W4
	484 NotImplemented "Instruction CMP not yet implemented."
	485 Move X8, X31
	486 Move X9, [X25+120]
	487 Compare X9, 0
	488 JumpIfEqual {633}
	489 Move X11, [X9+24]
	490 Add X10, X8, W4
	491 NotImplemented "Instruction CMP not yet implemented."
	492 And X11, X11, 0
	493 NotImplemented "Instruction CMP not yet implemented."
	494 Add X10, X9, W10
	495 Move W10, [X10+32]
	496 Add X9, X9, X8
	497 Add X8, X8, 1
	498 Move [X9+32], W10
	499 Move W9, [X25+32]
	500 Move W4, [X25+36]
	501 Subtract W3, W9, W4
	502 NotImplemented "Instruction CMP not yet implemented."
	503 Move X2, [X25+120]
	504 Move X0, X24
	505 Move W1, W23
	506 Move X5, X31
	507 Call Buffer.InternalBlockCopy, X0, X1, X2, X3, X4
	508 Move W8, [X25+36]
	509 Add W28, W28, 1
	510 NotImplemented "Instruction CMP not yet implemented."
	511 Move W22, [X25+68]
	512 Add W23, W8, W23
	513 NotImplemented "Instruction LDUR not yet implemented."
	514 Move W10, [X29-80]
	515 Move W9, [X29-76]
	516 Move TEMP, X10
	517 And TEMP, TEMP, 1
	518 Compare TEMP, 1
	519 JumpIfNotEqual {613}
	520 Move X20, [X19]
	521 NotImplemented "Instruction CMP not yet implemented."
	522 NotImplemented "Instruction CMP not yet implemented."
	523 NotImplemented "Instruction CMP not yet implemented."
	524 Compare W28, 0
	525 JumpIfEqual {634}
	526 Compare X20, 0
	527 JumpIfEqual {633}
	528 Move W9, [X20+24]
	529 Subtract W10, W28, 1
	530 NotImplemented "Instruction CMP not yet implemented."
	531 Add X11, X20, W10
	532 Move W21, [X11+32]
	533 Subtract W1, W9, W21
	534 Compare W21, 0
	535 JumpIfEqual {634}
	536 NotImplemented "Instruction CMP not yet implemented."
	537 Move X8, X31
	538 Move W10, W10
	539 Add X11, X10, X8
	540 NotImplemented "Instruction CMP not yet implemented."
	541 Add X11, X20, W11
	542 Move W11, [X11+32]
	543 NotImplemented "Instruction CMP not yet implemented."
	544 Subtract X8, X8, 1
	545 Add X31, X21, X8
	546 Compare W28, 0
	547 JumpIfEqual {634}
	548 Compare X20, 0
	549 JumpIfEqual {633}
	550 Move W9, [X20+24]
	551 Subtract W10, W28, 1
	552 NotImplemented "Instruction CMP not yet implemented."
	553 Add X10, X20, W10
	554 Move W21, [X10+32]
	555 Subtract W1, W9, W21
	556 Compare W21, 0
	557 JumpIfEqual {634}
	558 NotImplemented "Instruction CMP not yet implemented."
	559 NotImplemented "Instruction CMP not yet implemented."
	560 NotImplemented "Instruction CMP not yet implemented."
	561 Move W8, 3
	562 NotImplemented "Instruction CSINC not yet implemented."
	563 Subtract W8, W28, 2
	564 Subtract X10, X10, 2
	565 NotImplemented "Instruction CMP not yet implemented."
	566 Add X11, X20, W8
	567 Move W11, [X11+32]
	568 Compare W11, 0
	569 JumpIfNotEqual {634}
	570 Subtract X10, X10, 1
	571 Subtract W8, W8, 1
	572 Move X8, 0xE9A000
	573 Move X8, [X8+1560]
	574 Move X0, [X8]
	575 Call 0x1C17D6C
	576 Move X8, [X19]
	577 Compare X8, 0
	578 JumpIfEqual {633}
	579 Move X20, X0
	580 Compare W28, 0
	581 JumpIfEqual {634}
	582 Compare X20, 0
	583 JumpIfEqual {633}
	584 Move W9, [X20+24]
	585 Subtract W10, W28, 1
	586 NotImplemented "Instruction CMP not yet implemented."
	587 Add X10, X20, W10
	588 Move W21, [X10+32]
	589 Subtract W1, W9, W21
	590 Compare W21, 0
	591 JumpIfEqual {634}
	592 NotImplemented "Instruction CMP not yet implemented."
	593 Move X8, 0xE9A000
	594 Move X8, [X8+1560]
	595 Move X0, [X8]
	596 Call 0x1C17D6C
	597 Move X8, [X19]
	598 Compare X8, 0
	599 JumpIfEqual {633}
	600 Move X20, X0
	601 Move W9, [X8+24]
	602 Move X0, X8
	603 Move W1, W31
	604 Move X2, X20
	605 Subtract W4, W9, W21
	606 Move W3, W31
	607 Move X5, X31
	608 Call Buffer.InternalBlockCopy, X0, X1, X2, X3, X4
	609 Move [X19], X20
	610 Compare X20, 0
	611 JumpIfEqual {633}
	612 Move W28, [X20+24]
	613 NotImplemented "Instruction LDUR not yet implemented."
	614 Move X8, [X8+40]
	615 NotImplemented "Instruction LDUR not yet implemented."
	616 NotImplemented "Instruction CMP not yet implemented."
	617 Move W0, W28
	618 Add X31, X29, 0
	619 Move X20, [X31+80]
	620 Move X19, [X31+88]
	621 Move X22, [X31+64]
	622 Move X21, [X31+72]
	623 Move X24, [X31+48]
	624 Move X23, [X31+56]
	625 Move X26, [X31+32]
	626 Move X25, [X31+40]
	627 Move X28, [X31+16]
	628 Move X27, [X31+24]
	629 Move X29, [X31+96]
	630 Move X30, [X31+104]
	631 Return X0
	632 Call 0x1C17F28
	633 Call 0x1C17F20
	634 Move X0, 0xECA000
	635 Move X0, [X0+528]
	636 Call 0x1C17D08
	637 Move X1, X31
	638 Call Environment.GetResourceString, X0
	639 Move X19, X0
	640 Move X0, 0xEC7000
	641 Move X0, [X0+3296]
	642 Call 0x1C17D08
	643 Call 0x1C17F10
	644 Move X1, X19
	645 Move X2, X31
	646 Move X20, X0
	647 Call CryptographicException..ctor, X0, X1
	648 Move X0, 0xECA000
	649 Move X0, [X0+520]
	650 Call 0x1C17D08
	651 Move X1, X0
	652 Move X0, X20
	653 Call 0x1C17DEC
	654 Call 0x3EB2B20

Method: System.Void Enc(System.Int32* encryptindex, System.Int32* encryptKeyExpansion, System.Int32* T, System.Int32* TF, System.Int32* work, System.Int32* temp)

Disassembly:
	0x0325A744 ADD W28, W20, W28
	0x0325A748 MOVZ W20, 0xD124
	0x0325A74C MOVK W20, 0x5C4D0000
	0x0325A750 ADD W8, W8, W20
	0x0325A754 EXTR W8, W8, W8, 0x17
	0x0325A758 ADD W8, W8, W25
	0x0325A75C ADD W28, W28, W6
	0x0325A760 EXTR W23, W23, W23, 0x16
	0x0325A764 AND W25, W8, W21, 0x16
	0x0325A768 EXTR W22, W22, W22, 0x16
	0x0325A76C EXTR W28, W28, W28, 0x13
	0x0325A770 ADD W25, W29, W25
	0x0325A774 ADD W29, W11, W23
	0x0325A778 BIC W30, W8, W7, 0x16
	0x0325A77C ADD W28, W28, W22
	0x0325A780 ADD W29, W29, W30
	0x0325A784 ADD W22, W2, W22
	0x0325A788 AND W30, W28, W24, 0x0
	0x0325A78C ADD W25, W25, W20
	0x0325A790 ADD W22, W22, W30
	0x0325A794 ORN W30, W31, W28, 0x0
	0x0325A798 EXTR W25, W25, W25, 0x13
	0x0325A79C AND W30, W30, W27, 0x16
	0x0325A7A0 ADD W23, W25, W23
	0x0325A7A4 ADD W22, W22, W30
	0x0325A7A8 AND W25, W23, W7, 0x16
	0x0325A7AC ADD W25, W29, W25
	0x0325A7B0 ADD W22, W22, W6
	0x0325A7B4 EXTR W21, W21, W21, 0x16
	0x0325A7B8 EXTR W26, W26, W26, 0x16
	0x0325A7BC EXTR W22, W22, W22, 0x15
	0x0325A7C0 ADD W25, W25, W20
	0x0325A7C4 ADD W29, W16, W21
	0x0325A7C8 BIC W30, W23, W8, 0x16
	0x0325A7CC ADD W22, W22, W26
	0x0325A7D0 EXTR W25, W25, W25, 0x11
	0x0325A7D4 ADD W29, W29, W30
	0x0325A7D8 ADD W26, W13, W26
	0x0325A7DC AND W30, W22, W28, 0x0
	0x0325A7E0 ADD W21, W25, W21
	0x0325A7E4 ORN W25, W31, W22, 0x0
	0x0325A7E8 ADD W26, W26, W30
	0x0325A7EC AND W25, W25, W24, 0x16
	0x0325A7F0 ADD W25, W26, W25
	0x0325A7F4 AND W26, W21, W8, 0x16
	0x0325A7F8 ADD W26, W29, W26
	0x0325A7FC ADD W25, W25, W6
	0x0325A800 EXTR W27, W27, W27, 0x16
	0x0325A804 EXTR W25, W25, W25, 0x17
	0x0325A808 ADD W26, W26, W20
	0x0325A80C EXTR W7, W7, W7, 0x16
	0x0325A810 ADD W25, W25, W27
	0x0325A814 EXTR W26, W26, W26, 0x19
	0x0325A818 ADD W29, W17, W7
	0x0325A81C ADD W27, W1, W27
	0x0325A820 ADD W7, W26, W7
	0x0325A824 AND W26, W25, W22, 0x0
	0x0325A828 ADD W26, W27, W26
	0x0325A82C ORN W27, W31, W25, 0x0
	0x0325A830 BIC W30, W21, W23, 0x16
	0x0325A834 AND W27, W27, W28, 0x16
	0x0325A838 ADD W29, W29, W30
	0x0325A83C ADD W26, W26, W27
	0x0325A840 AND W27, W7, W23, 0x16
	0x0325A844 ADD W27, W29, W27
	0x0325A848 ADD W26, W26, W6
	0x0325A84C EXTR W24, W24, W24, 0x16
	0x0325A850 EXTR W26, W26, W26, 0x19
	0x0325A854 ADD W27, W27, W20
	0x0325A858 EXTR W8, W8, W8, 0x16
	0x0325A85C ADD W26, W26, W24
	0x0325A860 EXTR W27, W27, W27, 0x14
	0x0325A864 ADD W29, W9, W8
	0x0325A868 BIC W30, W7, W21, 0x16
	0x0325A86C ADD W24, W11, W24
	0x0325A870 ADD W8, W27, W8
	0x0325A874 AND W27, W26, W25, 0x0
	0x0325A878 ADD W29, W29, W30
	0x0325A87C EXTR W23, W23, W23, 0x16
	0x0325A880 ADD W24, W24, W27
	0x0325A884 AND W27, W8, W21, 0x16
	0x0325A888 ADD W27, W29, W27
	0x0325A88C ADD W29, W15, W23
	0x0325A890 BIC W30, W8, W7, 0x16
	0x0325A894 ADD W29, W29, W30
	0x0325A898 ORN W30, W31, W26, 0x0
	0x0325A89C AND W30, W30, W22, 0x16
	0x0325A8A0 ADD W27, W27, W20
	0x0325A8A4 ADD W24, W24, W30
	0x0325A8A8 EXTR W27, W27, W27, 0x18
	0x0325A8AC ADD W23, W27, W23
	0x0325A8B0 ADD W24, W24, W6
	0x0325A8B4 EXTR W21, W21, W21, 0x16
	0x0325A8B8 AND W27, W23, W7, 0x16
	0x0325A8BC EXTR W28, W28, W28, 0x16
	0x0325A8C0 EXTR W24, W24, W24, 0x11
	0x0325A8C4 ADD W27, W29, W27
	0x0325A8C8 ADD W29, W2, W21
	0x0325A8CC BIC W30, W23, W8, 0x16
	0x0325A8D0 ADD W24, W24, W28
	0x0325A8D4 ADD W29, W29, W30
	0x0325A8D8 ADD W28, W0, W28
	0x0325A8DC AND W30, W24, W26, 0x0
	0x0325A8E0 ADD W28, W28, W30
	0x0325A8E4 ORN W30, W31, W24, 0x0
	0x0325A8E8 AND W30, W30, W25, 0x16
	0x0325A8EC ADD W27, W27, W20
	0x0325A8F0 ADD W28, W28, W30
	0x0325A8F4 EXTR W27, W27, W27, 0x17
	0x0325A8F8 ADD W21, W27, W21
	0x0325A8FC ADD W28, W28, W6
	0x0325A900 EXTR W7, W7, W7, 0x16
	0x0325A904 AND W27, W21, W8, 0x16
	0x0325A908 EXTR W22, W22, W22, 0x16
	0x0325A90C EXTR W28, W28, W28, 0x19

ISIL:
	001 Move W10, [X0+68]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move X8, X31
	004 Move X9, X2
	005 Move X10, X5
	006 Move W11, [X10]
	007 Move W12, [X9+4]
	008 Add X8, X8, 1
	009 Xor W11, W12, W11
	010 Move [X10+4], W11
	011 NotImplemented "Instruction LDRSW not yet implemented."
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move W10, W11
	014 Move W8, [X0+64]
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Add X8, X2, W10
	017 Move W9, 1
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move X11, X31
	020 Move X12, X6
	021 Move X13, X5
	022 Move X14, X1
	023 Move W15, [X13+4]
	024 NotImplemented "Instruction LDRSW not yet implemented."
	025 NotImplemented "Instruction LDRSW not yet implemented."
	026 Move W10, W10
	027 ShiftRight W10, 31
	028 And W10, W10, 0x3FFFFFFF
	029 NotImplemented "Instruction LDRSW not yet implemented."
	030 Move W16, [X5]
	031 Move W17, [X5]
	032 Move W15, W15
	033 ShiftRight W15, 30
	034 And W15, W15, 0x1FFFFFFF
	035 Move W10, [X5]
	036 Move X16, X16
	037 ShiftRight X16, 6
	038 And X16, X16, 0x7FFFFFFF
	039 Move X17, X17
	040 ShiftRight X17, 14
	041 And X17, X17, 0x7FFFFFFF
	042 And X16, X16, 1023
	043 And X15, X15, 1023
	044 And X17, X17, 1023
	045 Move X10, X10
	046 ShiftRight X10, 22
	047 And X10, X10, 0x7FFFFFFF
	048 Or X16, X16, 2047
	049 Move W15, [X15]
	050 Or X17, X17, 4095
	051 Move W16, [X16]
	052 And X10, X10, 1023
	053 Move W17, [X17]
	054 Or X10, X10, 4095
	055 Move W10, [X10]
	056 Move W2, [X8+4]
	057 Xor W15, W16, W15
	058 Xor W15, W15, W17
	059 Xor W10, W15, W10
	060 Xor W10, W10, W2
	061 Move [X12+4], W10
	062 NotImplemented "Instruction LDRSW not yet implemented."
	063 Add X11, X11, 1
	064 Add X14, X14, 4
	065 NotImplemented "Instruction CMP not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X10, X31
	068 Move X11, X5
	069 Move X12, X6
	070 Move W13, [X12+4]
	071 Add X10, X10, 1
	072 Move [X11+4], W13
	073 NotImplemented "Instruction LDRSW not yet implemented."
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move W10, W13
	076 Move W11, [X0+64]
	077 Add W9, W9, 1
	078 NotImplemented "Instruction CMP not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X9, X31
	081 Move X11, X5
	082 Move W12, [X11+4]
	083 NotImplemented "Instruction LDRSW not yet implemented."
	084 NotImplemented "Instruction LDRSW not yet implemented."
	085 Move W10, W10
	086 ShiftRight W10, 31
	087 And W10, W10, 0x3FFFFFFF
	088 NotImplemented "Instruction LDRSW not yet implemented."
	089 Move W13, [X5]
	090 Move W14, [X5]
	091 Move W12, W12
	092 ShiftRight W12, 30
	093 And W12, W12, 0x1FFFFFFF
	094 Move W10, [X5]
	095 Move X13, X13
	096 ShiftRight X13, 6
	097 And X13, X13, 0x7FFFFFFF
	098 Move X14, X14
	099 ShiftRight X14, 14
	100 And X14, X14, 0x7FFFFFFF
	101 And X13, X13, 1023
	102 And X12, X12, 1023
	103 And X14, X14, 1023
	104 Move X10, X10
	105 ShiftRight X10, 22
	106 And X10, X10, 0x7FFFFFFF
	107 Or X13, X13, 2047
	108 Move W12, [X12]
	109 Or X14, X14, 4095
	110 Move W13, [X13]
	111 And X10, X10, 1023
	112 Move W14, [X14]
	113 Or X10, X10, 4095
	114 Move W10, [X10]
	115 Move W15, [X8+4]
	116 Xor W12, W13, W12
	117 Xor W12, W12, W14
	118 Xor W10, W12, W10
	119 Xor W10, W10, W15
	120 Move [X6+4], W10
	121 NotImplemented "Instruction LDRSW not yet implemented."
	122 Add X9, X9, 1
	123 Add X1, X1, 4
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Return 

Method: System.Void Dec(System.Int32* decryptindex, System.Int32* decryptKeyExpansion, System.Int32* iT, System.Int32* iTF, System.Int32* work, System.Int32* temp)

Disassembly:
	0x0325A910 ADD W27, W29, W27
	0x0325A914 ADD W29, W19, W7
	0x0325A918 BIC W30, W21, W23, 0x16
	0x0325A91C ADD W28, W28, W22
	0x0325A920 ADD W29, W29, W30
	0x0325A924 ADD W22, W17, W22
	0x0325A928 AND W30, W28, W24, 0x0
	0x0325A92C ADD W27, W27, W20
	0x0325A930 ADD W22, W22, W30
	0x0325A934 ORN W30, W31, W28, 0x0
	0x0325A938 EXTR W27, W27, W27, 0x15
	0x0325A93C AND W30, W30, W26, 0x16
	0x0325A940 ADD W7, W27, W7
	0x0325A944 ADD W22, W22, W30
	0x0325A948 AND W27, W7, W23, 0x16
	0x0325A94C ADD W27, W29, W27
	0x0325A950 ADD W22, W22, W6
	0x0325A954 EXTR W8, W8, W8, 0x16
	0x0325A958 EXTR W25, W25, W25, 0x16
	0x0325A95C EXTR W22, W22, W22, 0x14
	0x0325A960 ADD W27, W27, W20
	0x0325A964 ADD W29, W1, W8
	0x0325A968 BIC W30, W7, W21, 0x16
	0x0325A96C ADD W22, W22, W25
	0x0325A970 EXTR W27, W27, W27, 0x19
	0x0325A974 ADD W29, W29, W30
	0x0325A978 ADD W25, W10, W25
	0x0325A97C AND W30, W22, W28, 0x0
	0x0325A980 ADD W8, W27, W8
	0x0325A984 ORN W27, W31, W22, 0x0
	0x0325A988 ADD W25, W25, W30
	0x0325A98C AND W27, W27, W24, 0x16
	0x0325A990 ADD W25, W25, W27
	0x0325A994 AND W27, W8, W21, 0x16
	0x0325A998 ADD W27, W29, W27
	0x0325A99C ADD W25, W25, W6
	0x0325A9A0 EXTR W26, W26, W26, 0x16
	0x0325A9A4 EXTR W25, W25, W25, 0x11
	0x0325A9A8 ADD W27, W27, W20
	0x0325A9AC MOV W9, W15
	0x0325A9B0 EXTR W23, W23, W23, 0x16
	0x0325A9B4 ADD W25, W25, W26
	0x0325A9B8 EXTR W27, W27, W27, 0x19
	0x0325A9BC ADD W29, W4, W23
	0x0325A9C0 ADD W26, W9, W26
	0x0325A9C4 ADD W23, W27, W23
	0x0325A9C8 AND W27, W25, W22, 0x0
	0x0325A9CC ADD W26, W26, W27
	0x0325A9D0 ORN W27, W31, W25, 0x0
	0x0325A9D4 BIC W30, W8, W7, 0x16
	0x0325A9D8 AND W27, W27, W28, 0x16
	0x0325A9DC MOV W15, W0
	0x0325A9E0 ADD W29, W29, W30
	0x0325A9E4 EXTR W21, W21, W21, 0x16
	0x0325A9E8 ADD W26, W26, W27
	0x0325A9EC AND W27, W23, W7, 0x16
	0x0325A9F0 MOV W12, W14
	0x0325A9F4 MOV W14, W17
	0x0325A9F8 ADD W27, W29, W27
	0x0325A9FC ADD W29, W15, W21
	0x0325AA00 MOV W17, W15
	0x0325AA04 LDR W15, [X31 + 0x14]
	0x0325AA08 ADD W26, W26, W6
	0x0325AA0C EXTR W24, W24, W24, 0x16
	0x0325AA10 EXTR W26, W26, W26, 0x17
	0x0325AA14 ADD W27, W27, W20
	0x0325AA18 ADD W26, W26, W24
	0x0325AA1C EXTR W27, W27, W27, 0x14
	0x0325AA20 BIC W30, W23, W8, 0x16
	0x0325AA24 ADD W24, W15, W24
	0x0325AA28 ADD W21, W27, W21
	0x0325AA2C AND W27, W26, W25, 0x0
	0x0325AA30 ADD W29, W29, W30
	0x0325AA34 EXTR W7, W7, W7, 0x16
	0x0325AA38 ADD W24, W24, W27
	0x0325AA3C AND W27, W21, W8, 0x16
	0x0325AA40 ADD W27, W29, W27
	0x0325AA44 ADD W29, W3, W7
	0x0325AA48 BIC W30, W21, W23, 0x16
	0x0325AA4C ADD W29, W29, W30
	0x0325AA50 ORN W30, W31, W26, 0x0
	0x0325AA54 AND W30, W30, W22, 0x16
	0x0325AA58 ADD W27, W27, W20
	0x0325AA5C ADD W24, W24, W30
	0x0325AA60 EXTR W27, W27, W27, 0x19
	0x0325AA64 ADD W27, W27, W7
	0x0325AA68 ADD W24, W24, W6
	0x0325AA6C EXTR W8, W8, W8, 0x16
	0x0325AA70 AND W7, W27, W23, 0x16
	0x0325AA74 EXTR W28, W28, W28, 0x16
	0x0325AA78 EXTR W24, W24, W24, 0x15
	0x0325AA7C ADD W7, W29, W7
	0x0325AA80 ADD W29, W10, W8
	0x0325AA84 BIC W30, W27, W21, 0x16
	0x0325AA88 ADD W24, W24, W28
	0x0325AA8C ADD W29, W29, W30
	0x0325AA90 ADD W28, W19, W28
	0x0325AA94 AND W30, W24, W26, 0x0
	0x0325AA98 ADD W28, W28, W30
	0x0325AA9C ORN W30, W31, W24, 0x0
	0x0325AAA0 AND W30, W30, W25, 0x16
	0x0325AAA4 ADD W7, W7, W20
	0x0325AAA8 ADD W28, W28, W30
	0x0325AAAC EXTR W7, W7, W7, 0x1A
	0x0325AAB0 ADD W8, W7, W8
	0x0325AAB4 ADD W28, W28, W6
	0x0325AAB8 EXTR W23, W23, W23, 0x16
	0x0325AABC AND W7, W8, W21, 0x16
	0x0325AAC0 EXTR W22, W22, W22, 0x16
	0x0325AAC4 EXTR W28, W28, W28, 0x19
	0x0325AAC8 ADD W7, W29, W7
	0x0325AACC ADD W29, W12, W23
	0x0325AAD0 BIC W30, W8, W27, 0x16
	0x0325AAD4 ADD W28, W28, W22
	0x0325AAD8 ADD W29, W29, W30
	0x0325AADC ADD W22, W5, W22
	0x0325AAE0 AND W30, W28, W24, 0x0
	0x0325AAE4 ADD W7, W7, W20
	0x0325AAE8 ADD W22, W22, W30
	0x0325AAEC ORN W30, W31, W28, 0x0
	0x0325AAF0 EXTR W7, W7, W7, 0x11
	0x0325AAF4 AND W30, W30, W26, 0x16

ISIL:
	001 Move [X31-16], X19
	002 Move W11, [X0+64]
	003 Move W10, [X0+68]
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Multiply W8, W11, W10
	006 Move X9, X31
	007 Move W10, W8
	008 Move X11, X5
	009 Add W12, W10, W9
	010 Move W13, [X11]
	011 Move W12, [X2]
	012 Add X9, X9, 1
	013 Xor W12, W12, W13
	014 Move [X11+4], W12
	015 NotImplemented "Instruction LDRSW not yet implemented."
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move W11, [X0+64]
	018 Add W8, W8, W9
	019 Move W10, W12
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move W9, 1
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Subtract W8, W8, W10
	024 Move X11, X31
	025 Add X12, X2, W8
	026 Move X13, X6
	027 Move X14, X5
	028 Move X15, X1
	029 Move W16, [X14+4]
	030 NotImplemented "Instruction LDRSW not yet implemented."
	031 NotImplemented "Instruction LDRSW not yet implemented."
	032 Move W10, W10
	033 ShiftRight W10, 31
	034 And W10, W10, 0x3FFFFFFF
	035 NotImplemented "Instruction LDRSW not yet implemented."
	036 Move W17, [X5]
	037 Move W7, [X5]
	038 Move W16, W16
	039 ShiftRight W16, 30
	040 And W16, W16, 0x1FFFFFFF
	041 Move W10, [X5]
	042 Move X17, X17
	043 ShiftRight X17, 6
	044 And X17, X17, 0x7FFFFFFF
	045 Move X7, X7
	046 ShiftRight X7, 14
	047 And X7, X7, 0x7FFFFFFF
	048 And X17, X17, 1023
	049 And X16, X16, 1023
	050 And X7, X7, 1023
	051 Move X10, X10
	052 ShiftRight X10, 22
	053 And X10, X10, 0x7FFFFFFF
	054 Or X17, X17, 2047
	055 Move W16, [X16]
	056 Or X7, X7, 4095
	057 Move W17, [X17]
	058 And X10, X10, 1023
	059 Move W7, [X7]
	060 Or X10, X10, 4095
	061 Move W10, [X10]
	062 Move W19, [X12+4]
	063 Xor W16, W17, W16
	064 Xor W16, W16, W7
	065 Xor W10, W16, W10
	066 Xor W10, W10, W19
	067 Move [X13+4], W10
	068 NotImplemented "Instruction LDRSW not yet implemented."
	069 Add X11, X11, 1
	070 Add X15, X15, 4
	071 NotImplemented "Instruction CMP not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Add X8, X11, W8
	074 Move X10, X31
	075 Move X11, X5
	076 Move X12, X6
	077 Move W13, [X12+4]
	078 Add X10, X10, 1
	079 Move [X11+4], W13
	080 NotImplemented "Instruction LDRSW not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move W10, W13
	083 Move W11, [X0+64]
	084 Add W9, W9, 1
	085 NotImplemented "Instruction CMP not yet implemented."
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X8, X31
	088 Move X9, X5
	089 Move W11, [X9+4]
	090 NotImplemented "Instruction LDRSW not yet implemented."
	091 NotImplemented "Instruction LDRSW not yet implemented."
	092 Move W10, W10
	093 ShiftRight W10, 31
	094 And W10, W10, 0x3FFFFFFF
	095 NotImplemented "Instruction LDRSW not yet implemented."
	096 Move W12, [X5]
	097 Move W13, [X5]
	098 Move W11, W11
	099 ShiftRight W11, 30
	100 And W11, W11, 0x1FFFFFFF
	101 Move W10, [X5]
	102 Move X12, X12
	103 ShiftRight X12, 6
	104 And X12, X12, 0x7FFFFFFF
	105 Move X13, X13
	106 ShiftRight X13, 14
	107 And X13, X13, 0x7FFFFFFF
	108 And X12, X12, 1023
	109 And X11, X11, 1023
	110 And X13, X13, 1023
	111 Move X10, X10
	112 ShiftRight X10, 22
	113 And X10, X10, 0x7FFFFFFF
	114 Or X12, X12, 2047
	115 Move W11, [X11]
	116 Or X13, X13, 4095
	117 Move W12, [X12]
	118 And X10, X10, 1023
	119 Move W13, [X13]
	120 Or X10, X10, 4095
	121 Move W10, [X10]
	122 Move W14, [X2+4]
	123 Xor W11, W12, W11
	124 Xor W11, W11, W13
	125 Xor W10, W11, W10
	126 Xor W10, W10, W14
	127 Move [X6+4], W10
	128 NotImplemented "Instruction LDRSW not yet implemented."
	129 Add X8, X8, 1
	130 Add X1, X1, 4
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X19, [X31+16]
	133 Return 

Method: System.Void GenerateKeyExpansion(System.Byte[] rgbKey)

Disassembly:
	0x032584AC LDR X12, [X19]
	0x032584B0 CBZ X12, 0x3258950
	0x032584B4 LDR W14, [X12 + 0x18]
	0x032584B8 ADD X13, X10, X9
	0x032584BC ADD X13, X13, 0x2
	0x032584C0 CMP W13, W14
	0x032584C4 B.CS 0x3258974
	0x032584C8 ADD X15, X27, X9
	0x032584CC LDR W14, [X23, X9, LSL]
	0x032584D0 LDRB W15, [X15 + 0x22]
	0x032584D4 ADD X12, X12, W13, SXTW
	0x032584D8 ADD X11, X11, 0x1
	0x032584DC EOR W14, W15, W14, 0x10
	0x032584E0 STRB W14, [X12 + 0x20]
	0x032584E4 LDRSW X12, [X22 + 0x24]
	0x032584E8 CMP X11, X12
	0x032584EC B.GE 0x325885C
	0x032584F0 LDR W12, [X27 + 0x18]
	0x032584F4 CMP X11, X12
	0x032584F8 B.CS 0x3258974
	0x032584FC LDR X12, [X19]
	0x03258500 CBZ X12, 0x3258950
	0x03258504 LDR W14, [X12 + 0x18]
	0x03258508 ADD X13, X10, X9
	0x0325850C ADD X13, X13, 0x3
	0x03258510 CMP W13, W14
	0x03258514 B.CS 0x3258974
	0x03258518 ADD X15, X27, X9
	0x0325851C LDR W14, [X23, X9, LSL]
	0x03258520 LDRB W15, [X15 + 0x23]
	0x03258524 ADD X12, X12, W13, SXTW
	0x03258528 ADD X8, X8, 0x1
	0x0325852C ADD X11, X11, 0x1
	0x03258530 EOR W14, W15, W14, 0x18
	0x03258534 STRB W14, [X12 + 0x20]
	0x03258538 LDRSW X12, [X22 + 0x44]
	0x0325853C CMP X8, X12
	0x03258540 B.LT 0x32583F4
	0x03258544 ADD X8, X9, 0x4
	0x03258548 ADD W24, W24, W8
	0x0325854C B 0x3258864
	0x03258550 LDR W9, [X22 + 0x44]
	0x03258554 LDUR W15, [X29 - 0xC]
	0x03258558 CMP W9, 0x1
	0x0325855C B.LT 0x3258628
	0x03258560 MOV X8, X31
	0x03258564 MOV X9, X23
	0x03258568 LDR X11, [X19]
	0x0325856C CBZ X11, 0x3258950
	0x03258570 LDR W12, [X11 + 0x18]
	0x03258574 MOV W10, W24
	0x03258578 CMP W24, W12
	0x0325857C B.CS 0x3258974
	0x03258580 LDR W12, [X9]
	0x03258584 ADD X11, X11, W10, SXTW
	0x03258588 STRB W12, [X11 + 0x20]
	0x0325858C LDR X12, [X19]
	0x03258590 CBZ X12, 0x3258950
	0x03258594 LDR W13, [X12 + 0x18]
	0x03258598 ADD W11, W10, 0x1
	0x0325859C CMP W11, W13
	0x032585A0 B.CS 0x3258974
	0x032585A4 LDR W13, [X9]
	0x032585A8 ADD W14, W10, 0x1
	0x032585AC ADD X12, X12, W14, SXTW
	0x032585B0 UBFM W13, W13, 0x8, 0x1F
	0x032585B4 STRB W13, [X12 + 0x20]
	0x032585B8 LDR X12, [X19]
	0x032585BC CBZ X12, 0x3258950
	0x032585C0 LDR W13, [X12 + 0x18]
	0x032585C4 ADD W11, W11, 0x1
	0x032585C8 CMP W11, W13
	0x032585CC B.CS 0x3258974
	0x032585D0 LDRH W13, [X9 + 0x2]
	0x032585D4 ADD W14, W10, 0x2
	0x032585D8 ADD X12, X12, W14, SXTW
	0x032585DC STRB W13, [X12 + 0x20]
	0x032585E0 LDR X12, [X19]
	0x032585E4 CBZ X12, 0x3258950
	0x032585E8 LDR W13, [X12 + 0x18]
	0x032585EC ADD W11, W11, 0x1
	0x032585F0 CMP W11, W13
	0x032585F4 B.CS 0x3258974
	0x032585F8 LDRB W13, [X9 + 0x3]
	0x032585FC ADD W14, W10, 0x3
	0x03258600 ADD X12, X12, W14, SXTW
	0x03258604 ADD X8, X8, 0x1
	0x03258608 STRB W13, [X12 + 0x20]
	0x0325860C LDRSW X12, [X22 + 0x44]
	0x03258610 ADD X9, X9, 0x4
	0x03258614 ADD W24, W11, 0x1
	0x03258618 CMP X8, X12
	0x0325861C B.LT 0x3258568
	0x03258620 LDR W8, [X22 + 0x10]
	0x03258624 ADD W24, W10, 0x4
	0x03258628 CMP W8, 0x1
	0x0325862C B.NE 0x32588E0
	0x03258630 LDR X8, [X22 + 0x68]
	0x03258634 CBZ X8, 0x3258800
	0x03258638 LDR W9, [X8 + 0x18]
	0x0325863C ADD X8, X8, 0x20
	0x03258640 CMP W9, 0x0
	0x03258644 CSEL X0, X31, X8, EQ
	0x03258648 B 0x3258804
	0x0325864C LDR W8, [X22 + 0x44]
	0x03258650 CMP W8, 0x1
	0x03258654 B.LT 0x3258868
	0x03258658 MOV X8, X31
	0x0325865C MOV X9, X31
	0x03258660 SXTW X10, W20
	0x03258664 ADD X11, X21, W20, SXTW
	0x03258668 MOV W12, W20
	0x0325866C MOV W13, W24
	0x03258670 LDR W14, [X22 + 0x24]
	0x03258674 ADD X15, X10, X8
	0x03258678 ADD W14, W14, W20
	0x0325867C CMP X15, W14, SXTW
	0x03258680 B.GE 0x32587F0
	0x03258684 LDR W14, [X21 + 0x18]
	0x03258688 ADD W16, W12, W8
	0x0325868C CMP W16, W14
	0x03258690 B.CS 0x3258974
	0x03258694 LDR X16, [X19]
	0x03258698 CBZ X16, 0x3258950
	0x0325869C LDR W17, [X16 + 0x18]
	0x032586A0 ADD X14, X13, X8
	0x032586A4 CMP W14, W17
	0x032586A8 B.CS 0x3258974
	0x032586AC ADD X0, X11, X8
	0x032586B0 LDR W17, [X23, X8, LSL]
	0x032586B4 LDRB W0, [X0 + 0x20]
	0x032586B8 ADD X16, X16, W14, SXTW
	0x032586BC ADD X15, X15, 0x1
	0x032586C0 EOR W17, W0, W17, 0x0
	0x032586C4 STRB W17, [X16 + 0x20]
	0x032586C8 LDR W16, [X22 + 0x24]
	0x032586CC ADD W16, W16, W20
	0x032586D0 CMP X15, W16, SXTW
	0x032586D4 B.GE 0x3258820
	0x032586D8 LDR W15, [X21 + 0x18]
	0x032586DC ADD W16, W12, W8
	0x032586E0 ADD W16, W16, 0x1
	0x032586E4 CMP W16, W15
	0x032586E8 B.CS 0x3258974
	0x032586EC LDR X15, [X19]
	0x032586F0 CBZ X15, 0x3258950
	0x032586F4 LDR W16, [X15 + 0x18]
	0x032586F8 ADD X14, X14, 0x1
	0x032586FC CMP W14, W16
	0x03258700 B.CS 0x3258974
	0x03258704 ADD X17, X11, X8
	0x03258708 LDR W16, [X23, X8, LSL]
	0x0325870C LDRB W17, [X17 + 0x21]
	0x03258710 ADD X14, X15, W14, SXTW
	0x03258714 ADD X15, X10, X8
	0x03258718 ADD X15, X15, 0x2
	0x0325871C EOR W16, W17, W16, 0x8
	0x03258720 STRB W16, [X14 + 0x20]
	0x03258724 LDR W14, [X22 + 0x24]
	0x03258728 ADD W14, W14, W20
	0x0325872C CMP X15, W14, SXTW
	0x03258730 B.GE 0x3258838
	0x03258734 LDR W14, [X21 + 0x18]
	0x03258738 ADD W15, W12, W8
	0x0325873C ADD W15, W15, 0x2
	0x03258740 CMP W15, W14
	0x03258744 B.CS 0x3258974
	0x03258748 LDR X14, [X19]
	0x0325874C CBZ X14, 0x3258950
	0x03258750 LDR W16, [X14 + 0x18]
	0x03258754 ADD X15, X13, X8
	0x03258758 ADD X15, X15, 0x2
	0x0325875C CMP W15, W16
	0x03258760 B.CS 0x3258974
	0x03258764 ADD X17, X11, X8
	0x03258768 LDR W16, [X23, X8, LSL]
	0x0325876C LDRB W17, [X17 + 0x22]
	0x03258770 ADD X14, X14, W15, SXTW
	0x03258774 ADD X15, X10, X8
	0x03258778 ADD X15, X15, 0x3
	0x0325877C EOR W16, W17, W16, 0x10
	0x03258780 STRB W16, [X14 + 0x20]
	0x03258784 LDR W14, [X22 + 0x24]
	0x03258788 ADD W14, W14, W20
	0x0325878C CMP X15, W14, SXTW
	0x03258790 B.GE 0x3258850
	0x03258794 LDR W14, [X21 + 0x18]
	0x03258798 ADD W15, W12, W8
	0x0325879C ADD W15, W15, 0x3
	0x032587A0 CMP W15, W14
	0x032587A4 B.CS 0x3258974
	0x032587A8 LDR X14, [X19]
	0x032587AC CBZ X14, 0x3258950
	0x032587B0 LDR W16, [X14 + 0x18]
	0x032587B4 ADD X15, X13, X8
	0x032587B8 ADD X15, X15, 0x3
	0x032587BC CMP W15, W16
	0x032587C0 B.CS 0x3258974
	0x032587C4 ADD X17, X11, X8
	0x032587C8 LDR W16, [X23, X8, LSL]
	0x032587CC LDRB W17, [X17 + 0x23]
	0x032587D0 ADD X14, X14, W15, SXTW
	0x032587D4 ADD X9, X9, 0x1
	0x032587D8 ADD X8, X8, 0x4
	0x032587DC EOR W16, W17, W16, 0x18
	0x032587E0 STRB W16, [X14 + 0x20]
	0x032587E4 LDRSW X14, [X22 + 0x44]
	0x032587E8 CMP X9, X14
	0x032587EC B.LT 0x3258670
	0x032587F0 ADD W24, W24, W8
	0x032587F4 B 0x3258868
	0x032587F8 LDUR X25, [X29 - 0x48]
	0x032587FC B 0x3258864
	0x03258800 MOV X0, X31
	0x03258804 LDR W2, [X22 + 0x20]
	0x03258808 MOV X1, X23
	0x0325880C MOV X3, X31
	0x03258810 BL 0x33A8924
	0x03258814 B 0x32588DC
	0x03258818 ADD W24, W24, W9
	0x0325881C B 0x3258864
	0x03258820 ADD W8, W24, W8
	0x03258824 ADD W24, W8, 0x1
	0x03258828 B 0x3258868
	0x0325882C ADD W8, W24, W9
	0x03258830 ADD W24, W8, 0x1
	0x03258834 B 0x3258864
	0x03258838 ADD W8, W24, W8
	0x0325883C ADD W24, W8, 0x2
	0x03258840 B 0x3258868
	0x03258844 ADD W8, W24, W9
	0x03258848 ADD W24, W8, 0x2
	0x0325884C B 0x3258864
	0x03258850 ADD W8, W24, W8
	0x03258854 ADD W24, W8, 0x3
	0x03258858 B 0x3258868
	0x0325885C ADD W8, W24, W9
	0x03258860 ADD W24, W8, 0x3
	0x03258864 LDUR X27, [X29 - 0x40]
	0x03258868 LDP W8, W4, [X22 + 0x20]
	0x0325886C SUB W3, W8, W4
	0x03258870 CMP W3, 0x1
	0x03258874 B.LT 0x32588C4
	0x03258878 MOV X8, X31
	0x0325887C LDR X9, [X22 + 0x78]
	0x03258880 CBZ X9, 0x3258950
	0x03258884 LDR X11, [X9 + 0x18]
	0x03258888 ADD X10, X8, W4, UXTW
	0x0325888C CMP W10, W11
	0x03258890 B.CS 0x3258974
	0x03258894 AND X11, X11, 0x0
	0x03258898 CMP X8, X11
	0x0325889C B.CS 0x3258974
	0x032588A0 ADD X10, X9, W10, SXTW
	0x032588A4 LDRB W10, [X10 + 0x20]
	0x032588A8 ADD X9, X9, X8
	0x032588AC ADD X8, X8, 0x1
	0x032588B0 STRB W10, [X9 + 0x20]
	0x032588B4 LDP W9, W4, [X22 + 0x20]
	0x032588B8 SUB W3, W9, W4
	0x032588BC CMP X8, W3, SXTW
	0x032588C0 B.LT 0x325887C
	0x032588C4 LDUR W8, [X29 - 0xC]
	0x032588C8 LDR X0, [X19]
	0x032588CC LDR X2, [X22 + 0x78]
	0x032588D0 MOV X5, X31
	0x032588D4 MUL W1, W4, W8
	0x032588D8 BL 0x33A8750
	0x032588DC LDUR W15, [X29 - 0xC]
	0x032588E0 LDR W8, [X22 + 0x24]
	0x032588E4 LDUR W9, [X29 - 0x2C]
	0x032588E8 ADD W15, W15, 0x1
	0x032588EC ADD W20, W8, W20
	0x032588F0 CMP W15, W9
	0x032588F4 B.NE 0x3258110
	0x032588F8 LDUR X8, [X29 - 0x50]
	0x032588FC LDR X8, [X8 + 0x28]
	0x03258900 LDUR X9, [X29 - 0x8]
	0x03258904 CMP X8, X9
	0x03258908 B.NE 0x3258984
	0x0325890C LDUR W0, [X29 - 0x54]
	0x03258910 ADD X31, X29, 0x0
	0x03258914 LDP X20, X19, [X31 + 0x50]
	0x03258918 LDP X22, X21, [X31 + 0x40]
	0x0325891C LDP X24, X23, [X31 + 0x30]
	0x03258920 LDP X26, X25, [X31 + 0x20]
	0x03258924 LDP X28, X27, [X31 + 0x10]
	0x03258928 LDP X29, X30, [X31], #0x60
	0x0325892C RET
	0x03258930 MOV X0, X31
	0x03258934 BL 0x3262098
	0x03258938 CBZ X0, 0x3258950
	0x0325893C LDR X8, [X0]
	0x03258940 MOV X1, X26
	0x03258944 LDP X9, X2, [X8 + 0x198]
	0x03258948 BLR X9
	0x0325894C CBNZ X26, 0x3258958
	0x03258950 BL 0x1C16F20
	0x03258954 CBZ X26, 0x3258950
	0x03258958 LDR W9, [X26 + 0x18]
	0x0325895C SUB W8, W28, 0x1
	0x03258960 CMP W8, W9
	0x03258964 B.CS 0x3258974
	0x03258968 ADD X8, X26, W8, SXTW
	0x0325896C STRB W28, [X8 + 0x20]
	0x03258970 B 0x3257F24
	0x03258974 BL 0x1C16F28
	0x03258978 ADRP X0, 0xECB000
	0x0325897C LDR X0, [X0 + 0x200]
	0x03258980 B 0x3257F4C
	0x03258984 BL 0x3EB1B20
	0x03258988 STP X29, X30, [X31 - 0x60]!
	0x0325898C STP X28, X27, [X31 + 0x10]
	0x03258990 STP X26, X25, [X31 + 0x20]
	0x03258994 STP X24, X23, [X31 + 0x30]
	0x03258998 STP X22, X21, [X31 + 0x40]
	0x0325899C STP X20, X19, [X31 + 0x50]
	0x032589A0 ADD X29, X31, 0x0
	0x032589A4 SUB X31, X31, 0x60
	0x032589A8 MRS X8, 0xC000
	0x032589AC STUR X8, [X29 - 0x58]
	0x032589B0 LDR X8, [X8 + 0x28]
	0x032589B4 ADRP X20, 0x1184000
	0x032589B8 MOV W22, W7
	0x032589BC MOV W21, W6
	0x032589C0 STUR X8, [X29 - 0x8]
	0x032589C4 LDRB W8, [X20 + 0x509]
	0x032589C8 MOV W26, W5
	0x032589CC MOV X19, X4
	0x032589D0 MOV W28, W3
	0x032589D4 MOV W23, W2
	0x032589D8 MOV X24, X1
	0x032589DC MOV X25, X0
	0x032589E0 TBNZ X8, 0x0, 0x3258A10
	0x032589E4 ADRP X0, 0xE9B000
	0x032589E8 LDR X0, [X0 + 0x618]
	0x032589EC BL 0x1C16CF4
	0x032589F0 ADRP X0, 0xECB000
	0x032589F4 LDR X0, [X0 + 0x208]
	0x032589F8 BL 0x1C16CF4
	0x032589FC ADRP X0, 0xECB000
	0x03258A00 LDR X0, [X0 + 0x1A8]
	0x03258A04 BL 0x1C16CF4
	0x03258A08 MOVZ W8, 0x1
	0x03258A0C STRB W8, [X20 + 0x509]
	0x03258A10 CBZ X24, 0x32593B4
	0x03258A14 LDR W8, [X24 + 0x18]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x1185000
	011 Move W8, [X21+1290]
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xE9D000
	019 Move X0, [X0+3672]
	020 Call 0x1C17CF4
	021 Move X0, 0xECC000
	022 Move X0, [X0+424]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+1290], W8
	026 Compare X20, 0
	027 JumpIfEqual {327}
	028 Move W8, [X20+24]
	029 Move W9, [X19+28]
	030 Move W10, W8
	031 ShiftRight W10, 29
	032 And W10, W10, 0xFFFFFFF
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction CSEL not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move W8, 13
	039 Move W9, 12
	040 Move W8, 11
	041 Move W9, 10
	042 Move W8, 15
	043 Move W9, 14
	044 Move X21, 0xE9D000
	045 Move X21, [X21+3672]
	046 Move [X19+64], W9
	047 Move W9, [X19+68]
	048 Move X0, [X21]
	049 Multiply W1, W8, W9
	050 Call 0x1C17D6C
	051 Move W9, [X19+64]
	052 Move W8, [X19+68]
	053 Move [X19+48], X0
	054 Move X0, [X21]
	055 Add W9, W9, 1
	056 Multiply W1, W9, W8
	057 Call 0x1C17D6C
	058 Move W11, [X19+72]
	059 Move [X19+56], X0
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move W9, [X20+24]
	062 Move X8, X31
	063 Move W10, 32
	064 Subtract X11, X10, 32
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Add X12, X11, 1
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Add X12, X12, 1
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Add W12, W12, 1
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X12, [X19+48]
	073 Compare X12, 0
	074 JumpIfEqual {327}
	075 Move W13, [X12+24]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Subtract X13, X10, 31
	078 Add X11, X20, W11
	079 Subtract X14, X10, 30
	080 Add X13, X20, W13
	081 Subtract X15, X10, 29
	082 Move W11, [X11+32]
	083 Add X14, X20, W14
	084 Move W13, [X13+32]
	085 Move W14, [X14+32]
	086 Add X15, X20, W15
	087 Move W15, [X15+32]
	088 NotImplemented "Instruction BFM not yet implemented."
	089 NotImplemented "Instruction BFM not yet implemented."
	090 Add X8, X8, 1
	091 NotImplemented "Instruction BFM not yet implemented."
	092 Move [X12], W11
	093 NotImplemented "Instruction LDRSW not yet implemented."
	094 Add X10, X10, 4
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move W9, [X19+64]
	097 Move W20, [X19+68]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Add W8, W9, 1
	100 Multiply W8, W8, W20
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X22, 0xECC000
	103 Move X8, [X19+48]
	104 Move X22, [X22+424]
	105 And X21, X11, 0
	106 Compare X8, 0
	107 JumpIfEqual {327}
	108 Move W10, [X8+24]
	109 Subtract X9, X21, 1
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move W10, [X19+72]
	112 Add X8, X8, W9
	113 Move W20, [X8+32]
	114 NotImplemented "Instruction SDIV not yet implemented."
	115 NotImplemented "Instruction MSUB not yet implemented."
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Compare W8, 0
	118 JumpIfNotEqual {147}
	119 Move X0, [X22]
	120 Move W8, [X0+224]
	121 Compare W8, 0
	122 JumpIfNotEqual {124}
	123 Call 0x1C17DFC
	124 NotImplemented "Instruction EXTR not yet implemented."
	125 Call RijndaelManagedTransform.SubWord, X0
	126 Move X8, [X22]
	127 Move X8, [X8+184]
	128 Move X8, [X8+8]
	129 Compare X8, 0
	130 JumpIfEqual {327}
	131 Move W9, [X19+72]
	132 Move W10, [X8+24]
	133 NotImplemented "Instruction SDIV not yet implemented."
	134 Subtract W9, W9, 1
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Add X8, X8, W9
	137 Move W8, [X8+32]
	138 Xor W20, W8, W0
	139 Move X0, [X22]
	140 Move W8, [X0+224]
	141 Compare W8, 0
	142 JumpIfNotEqual {144}
	143 Call 0x1C17DFC
	144 Move W0, W20
	145 Call RijndaelManagedTransform.SubWord, X0
	146 Move W20, W0
	147 Move X8, [X19+48]
	148 Compare X8, 0
	149 JumpIfEqual {327}
	150 Move W9, [X19+72]
	151 Move W10, [X8+24]
	152 Subtract W9, W31, W9
	153 Add X9, X21, X9
	154 NotImplemented "Instruction CMP not yet implemented."
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Add X9, X8, W9
	157 Move W9, [X9+32]
	158 Add X10, X8, X21
	159 Add X21, X21, 1
	160 Xor W9, W9, W20
	161 Move [X10+32], W9
	162 Move W9, [X19+64]
	163 Move W20, [X19+68]
	164 Add W10, W9, 1
	165 Multiply W10, W10, W20
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Move W9, [X19+64]
	168 Move W20, [X19+68]
	169 Add W8, W9, 1
	170 Multiply W8, W8, W20
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Move X22, 0xECC000
	173 Move X8, [X19+48]
	174 Move X22, [X22+424]
	175 Move X21, W11
	176 Compare X8, 0
	177 JumpIfEqual {327}
	178 Move W9, [X8+24]
	179 Subtract W10, W21, 1
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Move W9, [X19+72]
	182 Add X10, X8, W10
	183 Move W20, [X10+32]
	184 NotImplemented "Instruction SDIV not yet implemented."
	185 NotImplemented "Instruction MSUB not yet implemented."
	186 Compare W10, 0
	187 JumpIfNotEqual {211}
	188 Move X0, [X22]
	189 Move W8, [X0+224]
	190 Compare W8, 0
	191 JumpIfNotEqual {193}
	192 Call 0x1C17DFC
	193 NotImplemented "Instruction EXTR not yet implemented."
	194 Call RijndaelManagedTransform.SubWord, X0
	195 Move X8, [X22]
	196 Move X8, [X8+184]
	197 Move X10, [X8+8]
	198 Compare X10, 0
	199 JumpIfEqual {327}
	200 Move W9, [X19+72]
	201 Move W8, [X10+24]
	202 NotImplemented "Instruction SDIV not yet implemented."
	203 Subtract W11, W11, 1
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Move X8, [X19+48]
	206 Compare X8, 0
	207 JumpIfEqual {327}
	208 Add X10, X10, W11
	209 Move W10, [X10+32]
	210 Xor W20, W10, W0
	211 Move W10, [X8+24]
	212 Subtract W9, W21, W9
	213 NotImplemented "Instruction CMP not yet implemented."
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Add X9, X8, W9
	216 Move W9, [X9+32]
	217 Add X10, X8, X21
	218 Add X21, X21, 1
	219 Xor W9, W9, W20
	220 Move [X10+32], W9
	221 Move W9, [X19+64]
	222 Move W20, [X19+68]
	223 Add W10, W9, 1
	224 Multiply W10, W10, W20
	225 NotImplemented "Instruction CMP not yet implemented."
	226 NotImplemented "Instruction CMP not yet implemented."
	227 Move X8, [X19+48]
	228 Compare X8, 0
	229 JumpIfEqual {327}
	230 Move X10, [X8+24]
	231 Move X11, [X19+56]
	232 Move X9, X31
	233 Add X14, X8, 32
	234 And X12, X10, 0
	235 Add X13, X11, 32
	236 NotImplemented "Instruction CMP not yet implemented."
	237 Compare X11, 0
	238 JumpIfEqual {327}
	239 Move X15, [X11+24]
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Move W16, [X14]
	242 Move [X13], W16
	243 Move W17, [X19+64]
	244 Move W16, [X19+68]
	245 Multiply W16, W17, W16
	246 Add X16, X9, X16
	247 NotImplemented "Instruction CMP not yet implemented."
	248 NotImplemented "Instruction CMP not yet implemented."
	249 Move X15, W16
	250 Add X16, X8, X15
	251 Move W16, [X16+32]
	252 Add X15, X11, X15
	253 Add X9, X9, 1
	254 Move [X15+32], W16
	255 NotImplemented "Instruction LDRSW not yet implemented."
	256 NotImplemented "Instruction CMP not yet implemented."
	257 Move W9, [X19+64]
	258 Multiply W8, W9, W20
	259 NotImplemented "Instruction CMP not yet implemented."
	260 Move X24, 0xECC000
	261 Move X24, [X24+424]
	262 Move W8, W20
	263 Move W23, 0x1B1B
	264 Move X8, W8
	265 Or W21, W31, 0xFEFEFEFE
	266 Or W22, W31, 0x80808080
	267 NotImplemented "Instruction MOVK not yet implemented."
	268 Add X25, X8, 8
	269 Move X8, [X19+48]
	270 Compare X8, 0
	271 JumpIfEqual {327}
	272 Move W9, [X8+24]
	273 NotImplemented "Instruction CMP not yet implemented."
	274 Move X0, [X24]
	275 Move W26, [X8]
	276 Move W9, [X0+224]
	277 Compare W9, 0
	278 JumpIfNotEqual {280}
	279 Call 0x1C17DFC
	280 Move X8, [X19+56]
	281 Compare X8, 0
	282 JumpIfEqual {327}
	283 Move W9, [X8+24]
	284 NotImplemented "Instruction CMP not yet implemented."
	285 And W9, W26, W22
	286 Subtract W9, W9, W9
	287 And W10, W21, W26
	288 And W11, W22, W26
	289 And W9, W9, W23
	290 Subtract W11, W11, W11
	291 Xor W9, W9, W10
	292 And W11, W11, W23
	293 And W10, W21, W9
	294 And W12, W22, W9
	295 Xor W10, W10, W11
	296 Subtract W11, W12, W12
	297 And W12, W21, W10
	298 And W11, W11, W23
	299 Xor W13, W10, W9
	300 Xor W11, W11, W12
	301 Xor W12, W11, W26
	302 Xor W11, W13, W11
	303 Xor W9, W12, W9
	304 Xor W11, W11, W12
	305 Xor W10, W12, W10
	306 Xor W9, W11, W9
	307 Xor W9, W9, W10
	308 Move [X8], W9
	309 Move W9, [X19+64]
	310 Move W8, [X19+68]
	311 Subtract X10, X25, 7
	312 Add X25, X25, 1
	313 Add W20, W20, 1
	314 Multiply W8, W9, W8
	315 NotImplemented "Instruction CMP not yet implemented."
	316 Move X20, [X31+64]
	317 Move X19, [X31+72]
	318 Move X22, [X31+48]
	319 Move X21, [X31+56]
	320 Move X24, [X31+32]
	321 Move X23, [X31+40]
	322 Move X26, [X31+16]
	323 Move X25, [X31+24]
	324 Move X30, [X31+80]
	325 Return 
	326 Call 0x1C17F28
	327 Call 0x1C17F20
	328 Move X0, 0xECB000
	329 Move X0, [X0+3848]
	330 Call 0x1C17D08
	331 Move X1, X31
	332 Call Environment.GetResourceString, X0
	333 Move X19, X0
	334 Move X0, 0xEC9000
	335 Move X0, [X0+3296]
	336 Call 0x1C17D08
	337 Call 0x1C17F10
	338 Move X1, X19
	339 Move X2, X31
	340 Move X20, X0
	341 Call CryptographicException..ctor, X0, X1
	342 Move X0, 0xECC000
	343 Move X0, [X0+472]
	344 Call 0x1C17D08
	345 Move X1, X0
	346 Move X0, X20
	347 Call 0x1C17DEC

Method: System.Int32 rot1(System.Int32 val)

Disassembly:
	0x0325ABF0 EXTR W28, W28, W28, 0x16
	0x0325ABF4 EXTR W26, W26, W26, 0x13

ISIL:
	001 NotImplemented "Instruction EXTR not yet implemented."
	002 Return X0

Method: System.Int32 rot2(System.Int32 val)

Disassembly:
	0x0325ABE8 ADD W27, W27, W29
	0x0325ABEC ADD W26, W26, W7

ISIL:
	001 NotImplemented "Instruction EXTR not yet implemented."
	002 Return X0

Method: System.Int32 rot3(System.Int32 val)

Disassembly:
	0x0325AAF8 ADD W23, W7, W23
	0x0325AAFC ADD W22, W22, W30

ISIL:
	001 NotImplemented "Instruction EXTR not yet implemented."
	002 Return X0

Method: System.Int32 SubWord(System.Int32 a)

Disassembly:
	0x0325AB00 AND W7, W23, W27, 0x16
	0x0325AB04 ADD W7, W29, W7
	0x0325AB08 ADD W22, W22, W6
	0x0325AB0C EXTR W21, W21, W21, 0x16
	0x0325AB10 EXTR W25, W25, W25, 0x16
	0x0325AB14 EXTR W22, W22, W22, 0x13
	0x0325AB18 ADD W7, W7, W20
	0x0325AB1C MOV W0, W4
	0x0325AB20 ADD W29, W15, W21
	0x0325AB24 BIC W30, W23, W8, 0x16
	0x0325AB28 ADD W22, W22, W25
	0x0325AB2C EXTR W7, W7, W7, 0x13
	0x0325AB30 ADD W29, W29, W30
	0x0325AB34 ADD W25, W0, W25
	0x0325AB38 AND W30, W22, W28, 0x0
	0x0325AB3C ADD W21, W7, W21
	0x0325AB40 ORN W7, W31, W22, 0x0
	0x0325AB44 ADD W25, W25, W30
	0x0325AB48 AND W7, W7, W24, 0x16
	0x0325AB4C ADD W25, W25, W7
	0x0325AB50 ADD W25, W25, W6
	0x0325AB54 AND W6, W21, W8, 0x16
	0x0325AB58 ADD W29, W29, W6
	0x0325AB5C EXTR W26, W26, W26, 0x16
	0x0325AB60 ADD W20, W29, W20
	0x0325AB64 EXTR W25, W25, W25, 0x14
	0x0325AB68 EXTR W27, W27, W27, 0x16
	0x0325AB6C ADD W25, W25, W26
	0x0325AB70 EXTR W20, W20, W20, 0x15
	0x0325AB74 ADD W29, W11, W26
	0x0325AB78 ADD W26, W1, W27
	0x0325AB7C ADD W20, W20, W27
	0x0325AB80 ORN W27, W25, W22, 0x0
	0x0325AB84 EOR W27, W27, W28, 0x16
	0x0325AB88 MOVZ W7, 0xEBA1
	0x0325AB8C ADD W27, W29, W27
	0x0325AB90 ORN W29, W20, W21, 0x0
	0x0325AB94 MOVK W7, 0x6ED90000
	0x0325AB98 MOVZ W6, 0x3EF3
	0x0325AB9C EOR W29, W29, W23, 0x16
	0x0325ABA0 MOVK W6, 0x6D700000
	0x0325ABA4 ADD W26, W26, W29
	0x0325ABA8 ADD W27, W27, W7
	0x0325ABAC EXTR W24, W24, W24, 0x16
	0x0325ABB0 EXTR W27, W27, W27, 0x15
	0x0325ABB4 ADD W26, W26, W6
	0x0325ABB8 MOV W4, W9
	0x0325ABBC ADD W29, W2, W24
	0x0325ABC0 EXTR W8, W8, W8, 0x16

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1183000
	006 Move X20, 0xECA000
	007 Move W8, [X21+1291]
	008 Move X20, [X20+424]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xECA000
	015 Move X0, [X0+424]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1291], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move X8, [X8]
	027 Compare X8, 0
	028 JumpIfEqual {60}
	029 Move W13, [X8+24]
	030 And W9, W19, 255
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move W10, W19
	033 ShiftRight W10, 8
	034 And W10, W10, 0x7FFF
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move W11, W19
	037 ShiftRight W11, 16
	038 And W11, W11, 0x7FFFFF
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move W12, W19
	041 ShiftRight W12, 24
	042 And W12, W12, 0x7FFFFFFF
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Add X9, X8, W9
	045 Add X10, X8, W10
	046 Move W0, [X9+32]
	047 Move W9, [X10+32]
	048 Add X8, X8, 32
	049 Move W10, [X8]
	050 Move W8, [X8]
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 NotImplemented "Instruction BFM not yet implemented."
	054 NotImplemented "Instruction BFM not yet implemented."
	055 NotImplemented "Instruction BFM not yet implemented."
	056 Move X30, [X31+32]
	057 Move X21, [X31+40]
	058 Return X0
	059 Call 0x1C17F28
	060 Call 0x1C17F20

Method: System.Int32 MulX(System.Int32 x)

Disassembly:
	0x0325ABC4 ADD W24, W27, W24
	0x0325ABC8 EXTR W26, W26, W26, 0x17
	0x0325ABCC ADD W27, W4, W8
	0x0325ABD0 ADD W8, W26, W8
	0x0325ABD4 ORN W26, W24, W25, 0x0
	0x0325ABD8 EOR W26, W26, W22, 0x16
	0x0325ABDC ADD W26, W29, W26
	0x0325ABE0 ORN W29, W8, W20, 0x0
	0x0325ABE4 EOR W29, W29, W21, 0x16

ISIL:
	001 And W8, W0, 0x80808080
	002 Move W10, 0x1B1B
	003 Move W9, W0
	004 ShiftRight W9, 31
	005 And W9, W9, 0x3FFFFFFF
	006 Subtract W8, W8, W8
	007 NotImplemented "Instruction MOVK not yet implemented."
	008 And W9, W9, 0xFEFEFEFE
	009 And W8, W8, W10
	010 Xor W0, W8, W9
	011 Return X0

Method: System.Void .cctor()

Disassembly:
	0x0325ABF8 ADD W27, W27, W6
	0x0325ABFC EXTR W23, W23, W23, 0x16
	0x0325AC00 ADD W26, W26, W28
	0x0325AC04 EXTR W27, W27, W27, 0x19
	0x0325AC08 ADD W29, W19, W28
	0x0325AC0C ADD W28, W12, W23
	0x0325AC10 ADD W23, W27, W23
	0x0325AC14 ORN W27, W26, W24, 0x0
	0x0325AC18 EOR W27, W27, W25, 0x16
	0x0325AC1C ADD W27, W29, W27
	0x0325AC20 ORN W29, W23, W8, 0x0
	0x0325AC24 EOR W29, W29, W20, 0x16
	0x0325AC28 ADD W28, W28, W29
	0x0325AC2C ADD W27, W27, W7
	0x0325AC30 EXTR W22, W22, W22, 0x16
	0x0325AC34 EXTR W27, W27, W27, 0x1A
	0x0325AC38 ADD W28, W28, W6
	0x0325AC3C ADD W29, W3, W22
	0x0325AC40 EXTR W21, W21, W21, 0x16
	0x0325AC44 ADD W22, W27, W22
	0x0325AC48 EXTR W28, W28, W28, 0x11
	0x0325AC4C ADD W27, W11, W21
	0x0325AC50 ADD W21, W28, W21
	0x0325AC54 ORN W28, W22, W26, 0x0
	0x0325AC58 EOR W28, W28, W24, 0x16
	0x0325AC5C ADD W28, W29, W28
	0x0325AC60 ORN W29, W21, W23, 0x0
	0x0325AC64 EOR W29, W29, W8, 0x16
	0x0325AC68 ADD W27, W27, W29
	0x0325AC6C ADD W28, W28, W7
	0x0325AC70 EXTR W25, W25, W25, 0x16
	0x0325AC74 EXTR W28, W28, W28, 0x19
	0x0325AC78 ADD W27, W27, W6
	0x0325AC7C ADD W29, W10, W25
	0x0325AC80 EXTR W20, W20, W20, 0x16
	0x0325AC84 ADD W25, W28, W25
	0x0325AC88 EXTR W27, W27, W27, 0x15
	0x0325AC8C ADD W28, W16, W20
	0x0325AC90 ADD W20, W27, W20
	0x0325AC94 ORN W27, W25, W22, 0x0
	0x0325AC98 EOR W27, W27, W26, 0x16
	0x0325AC9C ADD W27, W29, W27
	0x0325ACA0 ORN W29, W20, W21, 0x0
	0x0325ACA4 EOR W29, W29, W23, 0x16
	0x0325ACA8 ADD W28, W28, W29
	0x0325ACAC ADD W27, W27, W7
	0x0325ACB0 EXTR W24, W24, W24, 0x16
	0x0325ACB4 EXTR W27, W27, W27, 0x12
	0x0325ACB8 ADD W28, W28, W6
	0x0325ACBC ADD W29, W1, W24
	0x0325ACC0 EXTR W8, W8, W8, 0x16
	0x0325ACC4 ADD W24, W27, W24
	0x0325ACC8 EXTR W28, W28, W28, 0x18
	0x0325ACCC ADD W27, W19, W8
	0x0325ACD0 ADD W8, W28, W8
	0x0325ACD4 ORN W28, W24, W25, 0x0
	0x0325ACD8 EOR W28, W28, W22, 0x16
	0x0325ACDC STR W13, [X31 + 0xC]
	0x0325ACE0 ADD W28, W29, W28
	0x0325ACE4 ORN W29, W8, W20, 0x0
	0x0325ACE8 MOV W9, W0
	0x0325ACEC MOV W0, W3
	0x0325ACF0 MOV W3, W10
	0x0325ACF4 EOR W29, W29, W21, 0x16
	0x0325ACF8 LDR W10, [X31 + 0xC]
	0x0325ACFC ADD W27, W27, W29
	0x0325AD00 ADD W28, W28, W7
	0x0325AD04 EXTR W26, W26, W26, 0x16
	0x0325AD08 EXTR W28, W28, W28, 0x17
	0x0325AD0C ADD W27, W27, W6
	0x0325AD10 ADD W29, W9, W26
	0x0325AD14 EXTR W23, W23, W23, 0x16
	0x0325AD18 ADD W26, W28, W26
	0x0325AD1C EXTR W27, W27, W27, 0x1A
	0x0325AD20 ADD W28, W10, W23
	0x0325AD24 ADD W23, W27, W23
	0x0325AD28 ORN W27, W26, W24, 0x0
	0x0325AD2C EOR W27, W27, W25, 0x16
	0x0325AD30 ADD W27, W29, W27
	0x0325AD34 ORN W29, W23, W8, 0x0
	0x0325AD38 EOR W29, W29, W20, 0x16
	0x0325AD3C ADD W28, W28, W29
	0x0325AD40 ADD W27, W27, W7
	0x0325AD44 EXTR W22, W22, W22, 0x16
	0x0325AD48 EXTR W27, W27, W27, 0x13
	0x0325AD4C ADD W28, W28, W6
	0x0325AD50 ADD W29, W12, W22
	0x0325AD54 EXTR W21, W21, W21, 0x16
	0x0325AD58 ADD W22, W27, W22
	0x0325AD5C EXTR W28, W28, W28, 0x1A
	0x0325AD60 ADD W27, W3, W21
	0x0325AD64 ADD W21, W28, W21
	0x0325AD68 ORN W28, W22, W26, 0x0
	0x0325AD6C EOR W28, W28, W24, 0x16
	0x0325AD70 ADD W28, W29, W28
	0x0325AD74 ORN W29, W21, W23, 0x0
	0x0325AD78 EOR W29, W29, W8, 0x16
	0x0325AD7C ADD W27, W27, W29
	0x0325AD80 ADD W28, W28, W7
	0x0325AD84 EXTR W25, W25, W25, 0x16
	0x0325AD88 EXTR W28, W28, W28, 0x11
	0x0325AD8C ADD W27, W27, W6
	0x0325AD90 ADD W29, W15, W25
	0x0325AD94 EXTR W20, W20, W20, 0x16
	0x0325AD98 ADD W25, W28, W25
	0x0325AD9C EXTR W27, W27, W27, 0x12
	0x0325ADA0 ADD W28, W5, W20
	0x0325ADA4 ADD W20, W27, W20
	0x0325ADA8 ORN W27, W25, W22, 0x0
	0x0325ADAC EOR W27, W27, W26, 0x16
	0x0325ADB0 ADD W27, W29, W27
	0x0325ADB4 ORN W29, W20, W21, 0x0
	0x0325ADB8 EOR W29, W29, W23, 0x16
	0x0325ADBC ADD W28, W28, W29
	0x0325ADC0 ADD W27, W27, W7
	0x0325ADC4 MOV W13, W11
	0x0325ADC8 MOV W11, W16
	0x0325ADCC EXTR W24, W24, W24, 0x16
	0x0325ADD0 EXTR W27, W27, W27, 0x12
	0x0325ADD4 ADD W28, W28, W6
	0x0325ADD8 ADD W29, W11, W24
	0x0325ADDC EXTR W8, W8, W8, 0x16
	0x0325ADE0 ADD W24, W27, W24

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X27, 0x1183000
	013 Move X28, 0xE9A000
	014 Move X19, 0xECA000
	015 Move X20, 0xECA000
	016 Move X22, 0xE9B000
	017 Move X26, 0xECA000
	018 Move X25, 0xECA000
	019 Move X24, 0xECA000
	020 Move X23, 0xECA000
	021 Move X21, 0xECA000
	022 Move X28, [X28+1560]
	023 Move X19, [X19+552]
	024 Move X20, [X20+424]
	025 Move X22, [X22+3672]
	026 Move W8, [X27+1292]
	027 Move X26, [X26+560]
	028 Move X25, [X25+568]
	029 Move X24, [X24+576]
	030 Move X23, [X23+584]
	031 Move X21, [X21+592]
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {65}
	036 Move X0, 0xE9A000
	037 Move X0, [X0+1560]
	038 Call 0x1C17CF4
	039 Move X0, 0xE9B000
	040 Move X0, [X0+3672]
	041 Call 0x1C17CF4
	042 Move X0, 0xECA000
	043 Move X0, [X0+424]
	044 Call 0x1C17CF4
	045 Move X0, 0xECA000
	046 Move X0, [X0+568]
	047 Call 0x1C17CF4
	048 Move X0, 0xECA000
	049 Move X0, [X0+560]
	050 Call 0x1C17CF4
	051 Move X0, 0xECA000
	052 Move X0, [X0+592]
	053 Call 0x1C17CF4
	054 Move X0, 0xECA000
	055 Move X0, [X0+552]
	056 Call 0x1C17CF4
	057 Move X0, 0xECA000
	058 Move X0, [X0+584]
	059 Call 0x1C17CF4
	060 Move X0, 0xECA000
	061 Move X0, [X0+576]
	062 Call 0x1C17CF4
	063 Move W8, 1
	064 Move [X27+1292], W8
	065 Move X0, [X28]
	066 Move W1, 256
	067 Call 0x1C17D6C
	068 Move X1, [X19]
	069 Move X2, X31
	070 Move X19, X0
	071 Call RuntimeHelpers.InitializeArray, X0, X1
	072 Move X8, [X20]
	073 Move W1, 30
	074 Move X8, [X8+184]
	075 Move [X8], X19
	076 Move X0, [X22]
	077 Call 0x1C17D6C
	078 Move X1, [X26]
	079 Move X2, X31
	080 Move X19, X0
	081 Call RuntimeHelpers.InitializeArray, X0, X1
	082 Move X8, [X20]
	083 Move W1, 1024
	084 Move X8, [X8+184]
	085 Move [X8+8], X19
	086 Move X0, [X22]
	087 Call 0x1C17D6C
	088 Move X1, [X25]
	089 Move X2, X31
	090 Move X19, X0
	091 Call RuntimeHelpers.InitializeArray, X0, X1
	092 Move X8, [X20]
	093 Move W1, 1024
	094 Move X8, [X8+184]
	095 Move [X8+16], X19
	096 Move X0, [X22]
	097 Call 0x1C17D6C
	098 Move X1, [X24]
	099 Move X2, X31
	100 Move X19, X0
	101 Call RuntimeHelpers.InitializeArray, X0, X1
	102 Move X8, [X20]
	103 Move W1, 1024
	104 Move X8, [X8+184]
	105 Move [X8+24], X19
	106 Move X0, [X22]
	107 Call 0x1C17D6C
	108 Move X1, [X23]
	109 Move X2, X31
	110 Move X19, X0
	111 Call RuntimeHelpers.InitializeArray, X0, X1
	112 Move X8, [X20]
	113 Move W1, 1024
	114 Move X8, [X8+184]
	115 Move [X8+32], X19
	116 Move X0, [X22]
	117 Call 0x1C17D6C
	118 Move X1, [X21]
	119 Move X2, X31
	120 Move X19, X0
	121 Call RuntimeHelpers.InitializeArray, X0, X1
	122 Move X8, [X20]
	123 Move X22, [X31+64]
	124 Move X21, [X31+72]
	125 Move X24, [X31+48]
	126 Move X23, [X31+56]
	127 Move X26, [X31+32]
	128 Move X25, [X31+40]
	129 Move X8, [X8+184]
	130 Move X28, [X31+16]
	131 Move X27, [X31+24]
	132 Move [X8+40], X19
	133 Move X20, [X31+80]
	134 Move X19, [X31+88]
	135 Move X30, [X31+96]
	136 Return 

