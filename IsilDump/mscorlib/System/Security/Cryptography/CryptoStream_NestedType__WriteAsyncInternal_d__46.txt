Type: System.Security.Cryptography.CryptoStream/<WriteAsyncInternal>d__46

Method: System.Void MoveNext()

Disassembly:
	0x032507A4 ADRP X10, 0xED2000
	0x032507A8 LDRH W20, [X31 + 0x38]
	0x032507AC LDRH W9, [X8 + 0x12E]
	0x032507B0 LDR X10, [X10 + 0xEA8]
	0x032507B4 LDR X1, [X10]
	0x032507B8 CBZ X9, 0x32507DC
	0x032507BC LDR X10, [X8 + 0xB0]
	0x032507C0 ADD X10, X10, 0x8
	0x032507C4 LDUR X11, [X10 - 0x8]
	0x032507C8 CMP X11, X1
	0x032507CC B.EQ 0x3250C54
	0x032507D0 SUBS X9, X9, 0x1
	0x032507D4 ADD X10, X10, 0x10
	0x032507D8 B.NE 0x32507C4
	0x032507DC MOVZ W2, 0x2
	0x032507E0 MOV X0, X19
	0x032507E4 BL 0x1C5C788
	0x032507E8 B 0x3250C64
	0x032507EC CBZ X26, 0x3250F78
	0x032507F0 LDR X20, [X26 + 0x30]
	0x032507F4 CBZ X20, 0x3250F7C
	0x032507F8 LDR X8, [X20]
	0x032507FC LDR X21, [X19 + 0x30]
	0x03250800 LDR W23, [X19 + 0x4C]
	0x03250804 LDR W22, [X19 + 0x68]
	0x03250808 LDR X19, [X19 + 0x70]
	0x0325080C LDRH W9, [X8 + 0x12E]
	0x03250810 LDR X1, [X27]
	0x03250814 CBZ X9, 0x3250838
	0x03250818 LDR X10, [X8 + 0xB0]
	0x0325081C ADD X10, X10, 0x8
	0x03250820 LDUR X11, [X10 - 0x8]
	0x03250824 CMP X11, X1
	0x03250828 B.EQ 0x32508A4
	0x0325082C SUBS X9, X9, 0x1
	0x03250830 ADD X10, X10, 0x10
	0x03250834 B.NE 0x3250820
	0x03250838 MOVZ W2, 0x3
	0x0325083C MOV X0, X20
	0x03250840 BL 0x1C5C788
	0x03250844 B 0x32508B4
	0x03250848 LDR X19, [X26 + 0x30]
	0x0325084C CBZ X19, 0x3250F80
	0x03250850 LDR X9, [X31 + 0x48]
	0x03250854 LDR X8, [X19]
	0x03250858 LDR W20, [X26 + 0x4C]
	0x0325085C LDR X21, [X26 + 0x50]
	0x03250860 LDR X23, [X9 + 0x30]
	0x03250864 LDR W22, [X9 + 0x4C]
	0x03250868 LDRH W9, [X8 + 0x12E]
	0x0325086C LDR X1, [X27]
	0x03250870 CBZ X9, 0x3250894
	0x03250874 LDR X10, [X8 + 0xB0]
	0x03250878 ADD X10, X10, 0x8
	0x0325087C LDUR X11, [X10 - 0x8]
	0x03250880 CMP X11, X1
	0x03250884 B.EQ 0x3250A7C
	0x03250888 SUBS X9, X9, 0x1
	0x0325088C ADD X10, X10, 0x10
	0x03250890 B.NE 0x325087C
	0x03250894 MOVZ W2, 0x3
	0x03250898 MOV X0, X19
	0x0325089C BL 0x1C5C788
	0x032508A0 B 0x3250A8C
	0x032508A4 LDR W9, [X10]
	0x032508A8 ADD W9, W9, 0x3
	0x032508AC ADD X8, X8, W9, 0x4, SXTW
	0x032508B0 ADD X0, X8, 0x138
	0x032508B4 LDP X8, X6, [X0]
	0x032508B8 MOV X0, X20
	0x032508BC MOV X1, X21
	0x032508C0 MOV W2, W23
	0x032508C4 MOV W3, W22
	0x032508C8 MOV X4, X19
	0x032508CC MOV W5, W31
	0x032508D0 BLR X8
	0x032508D4 LDR X8, [X31 + 0x48]
	0x032508D8 MOV W21, W0
	0x032508DC STR W0, [X8 + 0x50]
	0x032508E0 LDRB W9, [X8 + 0x38]
	0x032508E4 LDR X19, [X26 + 0x28]
	0x032508E8 LDR X20, [X8 + 0x70]
	0x032508EC CBZ W9, 0x3250A54
	0x032508F0 CBZ X20, 0x3250CB0
	0x032508F4 LDR W8, [X20 + 0x18]
	0x032508F8 CMP W21, W8
	0x032508FC B.LS 0x3250908
	0x03250900 MOV X0, X31
	0x03250904 BL 0x339D6EC
	0x03250908 UBFM X2, X21, 0x20, 0x1F
	0x0325090C CBZ X19, 0x3250CC8
	0x03250910 LDR X8, [X31 + 0x48]
	0x03250914 LDR X9, [X19]
	0x03250918 LDR X3, [X8 + 0x40]
	0x0325091C LDR X8, [X9 + 0x328]
	0x03250920 LDR X4, [X9 + 0x330]
	0x03250924 MOV X0, X19
	0x03250928 MOV X1, X20
	0x0325092C BLR X8
	0x03250930 LDR X8, [X28]
	0x03250934 STP X0, X1, [X31 + 0x20]
	0x03250938 LDR W9, [X8 + 0xE0]
	0x0325093C CBNZ W9, 0x3250948
	0x03250940 MOV X0, X8
	0x03250944 BL 0x1C16DFC
	0x03250948 ADD X0, X31, 0x20
	0x0325094C MOV X1, X31
	0x03250950 BL 0x33EDF90
	0x03250954 LDR X8, [X29]
	0x03250958 STP X0, X1, [X31 + 0x30]
	0x0325095C LDR W9, [X8 + 0xE0]
	0x03250960 CBNZ W9, 0x325096C
	0x03250964 MOV X0, X8
	0x03250968 BL 0x1C16DFC
	0x0325096C ADRP X8, 0x118C000
	0x03250970 LDRB W8, [X8 + 0x4E3]
	0x03250974 CBNZ W8, 0x3250990
	0x03250978 ADRP X0, 0xECD000
	0x0325097C LDR X0, [X0 + 0xE40]
	0x03250980 BL 0x1C16CF4
	0x03250984 MOVZ W8, 0x1
	0x03250988 ADRP X9, 0x118C000
	0x0325098C STRB W8, [X9 + 0x4E3]
	0x03250990 LDR X0, [X28]
	0x03250994 LDR W8, [X0 + 0xE0]
	0x03250998 CBNZ W8, 0x32509A0
	0x0325099C BL 0x1C16DFC
	0x032509A0 ADRP X8, 0x118C000
	0x032509A4 LDRB W8, [X8 + 0x4E4]
	0x032509A8 CBNZ W8, 0x32509D0
	0x032509AC ADRP X0, 0xED2000
	0x032509B0 LDR X0, [X0 + 0xEA8]
	0x032509B4 BL 0x1C16CF4
	0x032509B8 ADRP X0, 0xEA4000
	0x032509BC LDR X0, [X0 + 0x7B8]
	0x032509C0 BL 0x1C16CF4
	0x032509C4 MOVZ W8, 0x1
	0x032509C8 ADRP X9, 0x118C000
	0x032509CC STRB W8, [X9 + 0x4E4]
	0x032509D0 LDR X19, [X31 + 0x30]
	0x032509D4 CBZ X19, 0x3250704
	0x032509D8 ADRP X9, 0xEA4000
	0x032509DC LDR X8, [X19]
	0x032509E0 LDR X9, [X9 + 0x7B8]
	0x032509E4 LDRB W11, [X8 + 0x130]
	0x032509E8 LDR X9, [X9]
	0x032509EC LDRB W10, [X9 + 0x130]
	0x032509F0 CMP W11, W10
	0x032509F4 B.CC 0x3250A0C
	0x032509F8 LDR X11, [X8 + 0xC8]
	0x032509FC ADD X10, X11, X10, 0x3, LSL
	0x03250A00 LDUR X10, [X10 - 0x8]
	0x03250A04 CMP X10, X9
	0x03250A08 B.EQ 0x3250E74
	0x03250A0C ADRP X10, 0xED2000
	0x03250A10 LDRH W20, [X31 + 0x38]
	0x03250A14 LDRH W9, [X8 + 0x12E]
	0x03250A18 LDR X10, [X10 + 0xEA8]
	0x03250A1C LDR X1, [X10]
	0x03250A20 CBZ X9, 0x3250A44
	0x03250A24 LDR X10, [X8 + 0xB0]
	0x03250A28 ADD X10, X10, 0x8
	0x03250A2C LDUR X11, [X10 - 0x8]
	0x03250A30 CMP X11, X1
	0x03250A34 B.EQ 0x3250CF8
	0x03250A38 SUBS X9, X9, 0x1
	0x03250A3C ADD X10, X10, 0x10
	0x03250A40 B.NE 0x3250A2C
	0x03250A44 MOV X0, X19
	0x03250A48 MOV W2, W31
	0x03250A4C BL 0x1C5C788
	0x03250A50 B 0x3250D04
	0x03250A54 CBZ X19, 0x3250F88
	0x03250A58 LDR X8, [X19]
	0x03250A5C LDR X9, [X8 + 0x388]
	0x03250A60 LDR X4, [X8 + 0x390]
	0x03250A64 MOV X0, X19
	0x03250A68 MOV X1, X20
	0x03250A6C MOV W2, W31
	0x03250A70 MOV W3, W21
	0x03250A74 BLR X9
	0x03250A78 B 0x3250C74
	0x03250A7C LDR W9, [X10]
	0x03250A80 ADD W9, W9, 0x3
	0x03250A84 ADD X8, X8, W9, 0x4, SXTW
	0x03250A88 ADD X0, X8, 0x138
	0x03250A8C LDP X8, X6, [X0]
	0x03250A90 MOV X0, X19
	0x03250A94 MOV X1, X23
	0x03250A98 MOV W2, W22
	0x03250A9C MOV W3, W20
	0x03250AA0 MOV X4, X21
	0x03250AA4 MOV W5, W31
	0x03250AA8 BLR X8
	0x03250AAC LDR X8, [X31 + 0x48]
	0x03250AB0 MOV W21, W0
	0x03250AB4 STR W0, [X8 + 0x50]
	0x03250AB8 LDRB W8, [X8 + 0x38]
	0x03250ABC LDR X19, [X26 + 0x28]
	0x03250AC0 LDR X20, [X26 + 0x50]
	0x03250AC4 CBZ W8, 0x3250C2C
	0x03250AC8 CBZ X20, 0x3250CCC
	0x03250ACC LDR W8, [X20 + 0x18]
	0x03250AD0 CMP W21, W8
	0x03250AD4 B.LS 0x3250AE0
	0x03250AD8 MOV X0, X31
	0x03250ADC BL 0x339D6EC
	0x03250AE0 UBFM X2, X21, 0x20, 0x1F
	0x03250AE4 CBZ X19, 0x3250CE4
	0x03250AE8 LDR X8, [X31 + 0x48]
	0x03250AEC LDR X9, [X19]
	0x03250AF0 LDR X3, [X8 + 0x40]
	0x03250AF4 LDR X8, [X9 + 0x328]
	0x03250AF8 LDR X4, [X9 + 0x330]
	0x03250AFC MOV X0, X19
	0x03250B00 MOV X1, X20
	0x03250B04 BLR X8
	0x03250B08 LDR X8, [X28]
	0x03250B0C STP X0, X1, [X31 + 0x20]
	0x03250B10 LDR W9, [X8 + 0xE0]
	0x03250B14 CBNZ W9, 0x3250B20
	0x03250B18 MOV X0, X8
	0x03250B1C BL 0x1C16DFC
	0x03250B20 ADD X0, X31, 0x20
	0x03250B24 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X20, 0x118D000
	010 Move W8, [X20+1201]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0xED3000
	017 Move X0, [X0+3720]
	018 Call 0x1C17CF4
	019 Move X0, 0xED3000
	020 Move X0, [X0+3728]
	021 Call 0x1C17CF4
	022 Move X0, 0xEA7000
	023 Move X0, [X0+640]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+1201], W8
	027 Move [X31+24], X31
	028 Move [X31], X31
	029 Move [X31+8], X31
	030 Move X23, 0xEA7000
	031 Move W24, [X19]
	032 Move X20, [X19+32]
	033 Move X23, [X23+640]
	034 Compare W24, 0
	035 JumpIfEqual {44}
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X8, [X19+80]
	038 Move TEMP, 0
	039 Not TEMP
	040 Move W24, TEMP
	041 Move [X31], X8
	042 Move [X19+80], X31
	043 Move [X19], W24
	044 Move X8, [X19+72]
	045 Move TEMP, 0
	046 Not TEMP
	047 Move W24, TEMP
	048 Move [X31+24], X8
	049 Move [X19+72], X31
	050 Move [X19], W24
	051 Compare X20, 0
	052 JumpIfEqual {171}
	053 Move X0, X20
	054 Call CryptoStream.get_AsyncActiveSemaphore, X0
	055 Move [X19+64], X0
	056 Compare X0, 0
	057 JumpIfEqual {172}
	058 Move X1, X31
	059 Call SemaphoreSlim.WaitAsync, X0
	060 Move X1, X31
	061 Call TaskAwaiters.ForceAsync, X0
	062 Move [X31+8], X0
	063 Add X0, X31, 8
	064 Move X1, X31
	065 Call ForceAsyncAwaiter.GetAwaiter, X0
	066 Move [X31+24], X0
	067 Add X0, X31, 24
	068 Move X1, X31
	069 Call ForceAsyncAwaiter.get_IsCompleted, X0
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfNotEqual {143}
	074 Add X0, X31, 24
	075 Move X1, X31
	076 Call ForceAsyncAwaiter.GetResult, X0
	077 Compare X20, 0
	078 JumpIfEqual {169}
	079 Move X1, [X19+40]
	080 Move X4, [X19+56]
	081 Move W2, [X19+48]
	082 Move W3, [X19+52]
	083 Move W5, 1
	084 Move X0, X20
	085 Call CryptoStream.WriteAsyncCore, X0, X1, X2, X3, X4, X5
	086 Compare X0, 0
	087 JumpIfEqual {170}
	088 Move X1, X31
	089 Call Task.GetAwaiter, X0
	090 Move [X31], X0
	091 Add X0, X31, 0
	092 Move X1, X31
	093 Call TaskAwaiter.get_IsCompleted, X0
	094 Move TEMP, X0
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfNotEqual {127}
	098 Move X20, X31
	099 Add X0, X31, 0
	100 Move X1, X31
	101 Call TaskAwaiter.GetResult, X0
	102 Move TEMP, X24
	103 And TEMP, TEMP, -2147483648
	104 Compare TEMP, -2147483648
	105 JumpIfNotEqual {111}
	106 Move X0, [X19+64]
	107 Compare X0, 0
	108 JumpIfEqual {173}
	109 Move X1, X31
	110 Call SemaphoreSlim.Release, X0
	111 Compare X20, 0
	112 JumpIfNotEqual {167}
	113 Move TEMP, 1
	114 Not TEMP
	115 Move W8, TEMP
	116 Move [X19], W8
	117 Move [X19+64], X31
	118 Move X0, [X23]
	119 Add X19, X19, 8
	120 Move W8, [X0+224]
	121 Compare W8, 0
	122 JumpIfNotEqual {124}
	123 Call 0x1C17DFC
	124 Move X0, X19
	125 Move X1, X31
	126 Call AsyncTaskMethodBuilder.SetResult, X0
	127 Move W8, 1
	128 Move [X19], W8
	129 Move X8, [X31]
	130 Move [X19+80], X8
	131 Move X0, [X23]
	132 Move W8, [X0+224]
	133 Compare W8, 0
	134 JumpIfNotEqual {136}
	135 Call 0x1C17DFC
	136 Move X8, 0xED3000
	137 Move X8, [X8+3728]
	138 Add X0, X19, 8
	139 Move X3, [X8]
	140 Add X1, X31, 0
	141 Move X2, X19
	142 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	143 Move [X19], W31
	144 Move X8, [X31+24]
	145 Move [X19+72], X8
	146 Move X0, [X23]
	147 Move W8, [X0+224]
	148 Compare W8, 0
	149 JumpIfNotEqual {151}
	150 Call 0x1C17DFC
	151 Move X8, 0xED3000
	152 Move X8, [X8+3720]
	153 Add X0, X19, 8
	154 Move X3, [X8]
	155 Add X1, X31, 24
	156 Move X2, X19
	157 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	158 Move X20, [X31+64]
	159 Move X19, [X31+72]
	160 Move X22, [X31+48]
	161 Move X21, [X31+56]
	162 Move X24, [X31+32]
	163 Move X23, [X31+40]
	164 Move X30, [X31+16]
	165 Add X31, X31, 80
	166 Return 
	167 Move X0, X20
	168 Call 0x1C17F18
	169 Call 0x1C17F20
	170 Call 0x1C17F20
	171 Call 0x1C17F20
	172 Call 0x1C17F20
	173 Call 0x1C17F20
	174 Move X21, X1
	175 Move X22, X0
	176 Move W24, 1
	177 Move X21, X1
	178 Move X22, X0
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Move X0, X22
	181 Call 0x3EB2AD0
	182 Move X20, [X0]
	183 Call 0x3EB2AE0
	184 Move X20, X31
	185 Move TEMP, X24
	186 And TEMP, TEMP, -2147483648
	187 Compare TEMP, -2147483648
	188 JumpIfNotEqual {194}
	189 Move X0, [X19+64]
	190 Compare X0, 0
	191 JumpIfEqual {198}
	192 Move X1, X31
	193 Call SemaphoreSlim.Release, X0
	194 Compare X20, 0
	195 JumpIfEqual {207}
	196 Move X0, X20
	197 Call 0x1C17F18
	198 Call 0x1C17F20
	199 Move X21, X1
	200 Move X22, X0
	201 Move TEMP, X24
	202 And TEMP, TEMP, -2147483648
	203 Compare TEMP, -2147483648
	204 JumpIfNotEqual {194}
	205 Move X21, X1
	206 Move X22, X0
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Move X0, X22
	209 Call 0x3EB2AD0
	210 Move X20, X0
	211 Move X0, 0xEA4000
	212 Move X0, [X0+2000]
	213 Call 0x1C17D08
	214 Move X8, [X20]
	215 Move X1, [X8]
	216 Call 0x1C18270
	217 Move TEMP, X0
	218 And TEMP, TEMP, 1
	219 Compare TEMP, 1
	220 JumpIfNotEqual {239}
	221 Move X20, [X20]
	222 Call 0x3EB2AE0
	223 Move TEMP, 1
	224 Not TEMP
	225 Move W8, TEMP
	226 Move [X19+64], X31
	227 Move [X19+8], W8
	228 Move X0, 0xEA7000
	229 Move X0, [X0+640]
	230 Call 0x1C17D08
	231 Move W8, [X0+224]
	232 Compare W8, 0
	233 JumpIfNotEqual {235}
	234 Call 0x1C17DFC
	235 Move X0, X19
	236 Move X1, X20
	237 Move X2, X31
	238 Call AsyncTaskMethodBuilder.SetException, X0, X1
	239 Move W0, 8
	240 Call 0x3EB2AF0
	241 Move X8, [X20]
	242 Move [X0], X8
	243 Move X1, 0xC65000
	244 Add X1, X1, 3672
	245 Move X2, X31
	246 Call 0x3EB2B00
	247 Move X22, X0
	248 Call 0x3EB2AE0
	249 Move X0, X22
	250 Call 0x1D2D690
	251 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03250B28 BL 0x33EDF90
	0x03250B2C LDR X8, [X29]
	0x03250B30 STP X0, X1, [X31 + 0x30]
	0x03250B34 LDR W9, [X8 + 0xE0]
	0x03250B38 CBNZ W9, 0x3250B44
	0x03250B3C MOV X0, X8
	0x03250B40 BL 0x1C16DFC
	0x03250B44 ADRP X8, 0x118C000
	0x03250B48 LDRB W8, [X8 + 0x4E3]
	0x03250B4C CBNZ W8, 0x3250B68
	0x03250B50 ADRP X0, 0xECD000
	0x03250B54 LDR X0, [X0 + 0xE40]
	0x03250B58 BL 0x1C16CF4
	0x03250B5C MOVZ W8, 0x1
	0x03250B60 ADRP X9, 0x118C000
	0x03250B64 STRB W8, [X9 + 0x4E3]
	0x03250B68 LDR X0, [X28]
	0x03250B6C LDR W8, [X0 + 0xE0]
	0x03250B70 CBNZ W8, 0x3250B78
	0x03250B74 BL 0x1C16DFC
	0x03250B78 ADRP X8, 0x118C000
	0x03250B7C LDRB W8, [X8 + 0x4E4]
	0x03250B80 CBNZ W8, 0x3250BA8
	0x03250B84 ADRP X0, 0xED2000
	0x03250B88 LDR X0, [X0 + 0xEA8]
	0x03250B8C BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x118D000
	007 Move X22, 0xEA7000
	008 Move W8, [X21+1202]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xEA7000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1202], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

