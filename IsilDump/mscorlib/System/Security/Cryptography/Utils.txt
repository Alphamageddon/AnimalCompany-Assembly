Type: System.Security.Cryptography.Utils

Method: System.Security.Cryptography.RNGCryptoServiceProvider get_StaticRandomNumberGenerator()

Disassembly:
	0x03263098 ADRP X8, 0xEC0000
	0x0326309C LDR X8, [X8 + 0x540]
	0x032630A0 B 0x326437C
	0x032630A4 MOVZ W8, 0x2612
	0x032630A8 MOVK W8, 0xE4F70000
	0x032630AC CMP W0, W8
	0x032630B0 B.HI 0x3263224
	0x032630B4 MOVZ W8, 0x9303
	0x032630B8 MOVK W8, 0xD2590000
	0x032630BC CMP W0, W8
	0x032630C0 B.HI 0x3263394
	0x032630C4 MOVZ W8, 0x60CD
	0x032630C8 MOVK W8, 0xCE0F0000
	0x032630CC CMP W0, W8
	0x032630D0 B.HI 0x32635C4
	0x032630D4 MOVZ W8, 0x150E
	0x032630D8 MOVK W8, 0xCB9E0000
	0x032630DC CMP W0, W8
	0x032630E0 B.EQ 0x3263E1C
	0x032630E4 MOVZ W8, 0x8164
	0x032630E8 MOVK W8, 0xCD350000
	0x032630EC CMP W0, W8
	0x032630F0 B.EQ 0x3263B14
	0x032630F4 MOVZ W8, 0x60CD
	0x032630F8 MOVK W8, 0xCE0F0000
	0x032630FC CMP W0, W8
	0x03263100 B.NE 0x3263A10
	0x03263104 ADRP X8, 0xEC0000
	0x03263108 LDR X8, [X8 + 0x6C8]
	0x0326310C B 0x326437C
	0x03263110 MOVZ W8, 0x69B6
	0x03263114 MOVK W8, 0x35A90000
	0x03263118 CMP W0, W8
	0x0326311C B.HI 0x32633E0
	0x03263120 MOVZ W8, 0x62B5
	0x03263124 MOVK W8, 0x2BCA0000
	0x03263128 CMP W0, W8
	0x0326312C B.HI 0x3263600

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x117A000
	005 Move X20, 0xEC1000
	006 Move W8, [X19+1367]
	007 Move X20, [X20+1072]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0xEC1000
	013 Move X0, [X0+320]
	014 Call 0x1C17CF4
	015 Move X0, 0xEC1000
	016 Move X0, [X0+1072]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+1367], W8
	020 Move X8, [X20]
	021 Move X8, [X8+184]
	022 Move X19, [X8]
	023 Call 0x1C17D44
	024 Compare X19, 0
	025 JumpIfNotEqual {36}
	026 Move X8, 0xEC1000
	027 Move X8, [X8+320]
	028 Move X0, [X8]
	029 Call 0x1C17F10
	030 Move X19, X0
	031 Call RNGCryptoServiceProvider..ctor, X0
	032 Call 0x1C17D44
	033 Move X8, [X20]
	034 Move X8, [X8+184]
	035 Move [X8], X19
	036 Move X8, [X20]
	037 Move X8, [X8+184]
	038 Move X19, [X8]
	039 Call 0x1C17D44
	040 Move X0, X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Return X0

Method: System.Byte[] GenerateRandom(System.Int32 keySize)

Disassembly:
	0x03263208 MOVZ W8, 0xC575
	0x0326320C MOVK W8, 0x7E660000
	0x03263210 CMP W0, W8
	0x03263214 B.NE 0x3263A10
	0x03263218 ADRP X8, 0xEC0000
	0x0326321C LDR X8, [X8 + 0x790]
	0x03263220 B 0x3264474
	0x03263224 MOVZ W8, 0x7E15
	0x03263228 MOVK W8, 0xF29D0000
	0x0326322C CMP W0, W8
	0x03263230 B.HI 0x32634C4
	0x03263234 MOVZ W8, 0x2D
	0x03263238 MOVK W8, 0xED2E0000
	0x0326323C CMP W0, W8
	0x03263240 B.HI 0x32636E8
	0x03263244 MOVZ W8, 0x18BA
	0x03263248 MOVK W8, 0xE57A0000
	0x0326324C CMP W0, W8
	0x03263250 B.EQ 0x3263EE4
	0x03263254 MOVZ W8, 0x79DD
	0x03263258 MOVK W8, 0xE74B0000
	0x0326325C CMP W0, W8
	0x03263260 B.EQ 0x3263B74
	0x03263264 MOVZ W8, 0x2D
	0x03263268 MOVK W8, 0xED2E0000
	0x0326326C CMP W0, W8
	0x03263270 B.NE 0x3263A10
	0x03263274 ADRP X8, 0xEC0000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x117A000
	006 Move X21, 0xE91000
	007 Move W8, [X20+1368]
	008 Move X21, [X21+1560]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE91000
	015 Move X0, [X0+1560]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1368], W8
	019 Move X0, [X21]
	020 Move W1, W19
	021 Call 0x1C17D6C
	022 Move X19, X0
	023 Call Utils.get_StaticRandomNumberGenerator
	024 Compare X0, 0
	025 JumpIfEqual {37}
	026 Move X8, [X0]
	027 Move X1, X19
	028 Move X9, [X8+408]
	029 Move X2, [X8+416]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move X0, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return X0
	037 Call 0x1C17F20

Method: System.Boolean HasAlgorithm(System.Int32 dwCalg, System.Int32 dwKeySize)

Disassembly:
	0x03262AB8 ADRP X0, 0xEC1000
	0x03262ABC LDR X0, [X0 + 0x528]

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.String DiscardWhiteSpaces(System.String inputBuffer)

Disassembly:
	0x03263278 LDR X8, [X8 + 0x660]
	0x0326327C B 0x3263FF0
	0x03263280 MOVZ W8, 0xD514
	0x03263284 MOVK W8, 0x20CB0000
	0x03263288 CMP W0, W8
	0x0326328C B.HI 0x3263724
	0x03263290 MOVZ W8, 0x6F7

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {7}
	004 Move W2, [X0+16]
	005 Move W1, W31
	006 Move X30, [X31+16]
	007 Call 0x1C17F20

Method: System.String DiscardWhiteSpaces(System.String inputBuffer, System.Int32 inputOffset, System.Int32 inputCount)

Disassembly:
	0x03263294 MOVK W8, 0x18F50000
	0x03263298 CMP W0, W8
	0x0326329C B.EQ 0x3263EF0
	0x032632A0 MOVZ W8, 0x2337
	0x032632A4 MOVK W8, 0x1F450000
	0x032632A8 CMP W0, W8
	0x032632AC B.EQ 0x3263B80
	0x032632B0 MOVZ W8, 0xD514
	0x032632B4 MOVK W8, 0x20CB0000
	0x032632B8 CMP W0, W8
	0x032632BC B.NE 0x3263A10
	0x032632C0 ADRP X8, 0xEC0000
	0x032632C4 LDR X8, [X8 + 0x6B8]
	0x032632C8 B 0x3264434
	0x032632CC MOVZ W8, 0xC8ED
	0x032632D0 MOVK W8, 0xA7140000
	0x032632D4 CMP W0, W8
	0x032632D8 B.HI 0x3263760
	0x032632DC MOVZ W8, 0xEE6B
	0x032632E0 MOVK W8, 0xA0930000
	0x032632E4 CMP W0, W8
	0x032632E8 B.EQ 0x3263F30
	0x032632EC MOVZ W8, 0x1C56
	0x032632F0 MOVK W8, 0xA0F80000
	0x032632F4 CMP W0, W8
	0x032632F8 B.EQ 0x3263B8C
	0x032632FC MOVZ W8, 0xC8ED
	0x03263300 MOVK W8, 0xA7140000
	0x03263304 CMP W0, W8
	0x03263308 B.NE 0x3263A10
	0x0326330C ADRP X8, 0xEC0000
	0x03263310 LDR X8, [X8 + 0x720]
	0x03263314 B 0x326402C
	0x03263318 MOVZ W8, 0x5022
	0x0326331C MOVK W8, 0x668B0000
	0x03263320 CMP W0, W8
	0x03263324 B.HI 0x326379C
	0x03263328 MOVZ W8, 0x81BE
	0x0326332C MOVK W8, 0x648D0000
	0x03263330 CMP W0, W8
	0x03263334 B.EQ 0x3263F3C
	0x03263338 MOVZ W8, 0x3623
	0x0326333C MOVK W8, 0x649D0000
	0x03263340 CMP W0, W8
	0x03263344 B.EQ 0x3263B98
	0x03263348 MOVZ W8, 0x5022
	0x0326334C MOVK W8, 0x668B0000
	0x03263350 CMP W0, W8
	0x03263354 B.NE 0x3263A10
	0x03263358 ADRP X8, 0xEC0000
	0x0326335C LDR X8, [X8 + 0x580]
	0x03263360 MOV X0, X21
	0x03263364 MOV X2, X31
	0x03263368 LDR X1, [X8]
	0x0326336C BL 0x321BA08
	0x03263370 MOV X21, X31
	0x03263374 TBZ X0, 0x0, 0x3263A14
	0x03263378 LDR X0, [X24]
	0x0326337C LDR W8, [X0 + 0xE0]
	0x03263380 CBNZ W8, 0x3263388
	0x03263384 BL 0x1C16DFC
	0x03263388 ADRP X8, 0xEC0000
	0x0326338C LDR X8, [X8 + 0x520]
	0x03263390 B 0x32640DC
	0x03263394 MOVZ W8, 0x45D2
	0x03263398 MOVK W8, 0xDD070000
	0x0326339C CMP W0, W8
	0x032633A0 B.HI 0x32637D8
	0x032633A4 MOVZ W8, 0x3A29
	0x032633A8 MOVK W8, 0xD30A0000
	0x032633AC CMP W0, W8
	0x032633B0 B.EQ 0x3263F48
	0x032633B4 MOVZ W8, 0xE28D
	0x032633B8 MOVK W8, 0xD4C60000
	0x032633BC CMP W0, W8
	0x032633C0 B.EQ 0x3263BA4
	0x032633C4 MOVZ W8, 0x45D2
	0x032633C8 MOVK W8, 0xDD070000
	0x032633CC CMP W0, W8
	0x032633D0 B.NE 0x3263A10
	0x032633D4 ADRP X8, 0xEC0000
	0x032633D8 LDR X8, [X8 + 0x670]
	0x032633DC B 0x326437C
	0x032633E0 MOVZ W8, 0x7D89
	0x032633E4 MOVK W8, 0x41DC0000
	0x032633E8 CMP W0, W8
	0x032633EC B.HI 0x3263844
	0x032633F0 MOVZ W8, 0xD306
	0x032633F4 MOVK W8, 0x39920000
	0x032633F8 CMP W0, W8
	0x032633FC B.EQ 0x3263F84
	0x03263400 MOVZ W8, 0x765D
	0x03263404 MOVK W8, 0x3B920000
	0x03263408 CMP W0, W8
	0x0326340C B.EQ 0x3263BE4
	0x03263410 MOVZ W8, 0x7D89
	0x03263414 MOVK W8, 0x41DC0000
	0x03263418 CMP W0, W8

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X22, 0x117A000
	012 Move W8, [X22+1369]
	013 Move W19, W2
	014 Move W20, W1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0xE9A000
	021 Move X0, [X0+2264]
	022 Call 0x1C17CF4
	023 Move X0, 0xE93000
	024 Move X0, [X0+368]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+1369], W8
	028 Move X25, 0xE9A000
	029 Move X25, [X25+2264]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Compare X21, 0
	032 JumpIfEqual {112}
	033 Move X24, 0xE93000
	034 Move X24, [X24+368]
	035 Move W26, W31
	036 Move W27, W19
	037 Move W22, W20
	038 Move X0, X21
	039 Move W1, W22
	040 Move X2, X31
	041 Call String.get_Chars, X0, X1
	042 Move X8, [X24]
	043 Move W23, W0
	044 Move W9, [X8+224]
	045 Compare W9, 0
	046 JumpIfNotEqual {49}
	047 Move X0, X8
	048 Call 0x1C17DFC
	049 Move W0, W23
	050 Move X1, X31
	051 Call Char.IsWhiteSpace, X0
	052 And W8, W0, 1
	053 Subtract W27, W27, 1
	054 Add W26, W26, W8
	055 Add W22, W22, 1
	056 Move X0, [X25]
	057 Subtract W1, W19, W26
	058 Call 0x1C17D6C
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X22, X0
	061 Move W25, W31
	062 Move X0, X21
	063 Move W1, W20
	064 Move X2, X31
	065 Call String.get_Chars, X0, X1
	066 Move X8, [X24]
	067 Move W23, W0
	068 Move W9, [X8+224]
	069 Compare W9, 0
	070 JumpIfNotEqual {73}
	071 Move X0, X8
	072 Call 0x1C17DFC
	073 Move W0, W23
	074 Move X1, X31
	075 Call Char.IsWhiteSpace, X0
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfEqual {91}
	080 Move X0, X21
	081 Move W1, W20
	082 Move X2, X31
	083 Call String.get_Chars, X0, X1
	084 Compare X22, 0
	085 JumpIfEqual {112}
	086 Move W8, [X22+24]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Add X8, X22, W25
	089 Add W25, W25, 1
	090 NotImplemented "Instruction STRH not yet implemented."
	091 Subtract W19, W19, 1
	092 Add W20, W20, 1
	093 Move X0, [X25]
	094 Move W1, W19
	095 Call 0x1C17D6C
	096 Move X22, X0
	097 Move X1, X22
	098 Move X20, [X31+64]
	099 Move X19, [X31+72]
	100 Move X22, [X31+48]
	101 Move X21, [X31+56]
	102 Move X24, [X31+32]
	103 Move X23, [X31+40]
	104 Move X26, [X31+16]
	105 Move X25, [X31+24]
	106 Move X0, X31
	107 Move X2, X31
	108 Move X30, [X31+80]
	109 Move X27, [X31+88]
	110 Call String.CreateString, X0, X1
	111 Return X0
	112 Call 0x1C17F20
	113 Call 0x1C17F28

Method: System.Int32 ConvertByteArrayToInt(System.Byte[] input)

Disassembly:
	0x0326341C B.NE 0x3263A10
	0x03263420 ADRP X8, 0xEC0000
	0x03263424 LDR X8, [X8 + 0x4C0]
	0x03263428 B 0x3263BAC
	0x0326342C MOVZ W8, 0xA760
	0x03263430 MOVK W8, 0xBE550000
	0x03263434 CMP W0, W8
	0x03263438 B.HI 0x3263880
	0x0326343C MOVZ W8, 0x540C
	0x03263440 MOVK W8, 0xBC100000
	0x03263444 CMP W0, W8
	0x03263448 B.EQ 0x3263F90
	0x0326344C MOVZ W8, 0x4E1D
	0x03263450 MOVK W8, 0xBD5D0000
	0x03263454 CMP W0, W8
	0x03263458 B.EQ 0x3263C20
	0x0326345C MOVZ W8, 0xA760
	0x03263460 MOVK W8, 0xBE550000
	0x03263464 CMP W0, W8
	0x03263468 B.NE 0x3263A10
	0x0326346C ADRP X8, 0xEC0000
	0x03263470 LDR X8, [X8 + 0x6A0]

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {25}
	004 Move W8, [X0+24]
	005 Move X9, X8
	006 ShiftRight X9, 32
	007 And X9, X9, 0x7FFFFFFF
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move W11, W31
	010 Move X9, W8
	011 Add X10, X0, 32
	012 Compare X8, 0
	013 JumpIfEqual {24}
	014 Move W0, [X10+1]
	015 Subtract X9, X9, 1
	016 Subtract X8, X8, 1
	017 NotImplemented "Instruction BFM not yet implemented."
	018 Move W11, W0
	019 Compare X9, 0
	020 JumpIfNotEqual {12}
	021 Move W0, W31
	022 Move X30, [X31+16]
	023 Return X0
	024 Call 0x1C17F28
	025 Call 0x1C17F20

Method: System.Byte[] ConvertIntToByteArray(System.Int32 dwInput)

Disassembly:
	0x03263474 B 0x32641EC
	0x03263478 MOVZ W8, 0xA021
	0x0326347C MOVK W8, 0x8BDC0000
	0x03263480 CMP W0, W8
	0x03263484 B.HI 0x32638BC
	0x03263488 MOVZ W8, 0x798B
	0x0326348C MOVK W8, 0x874C0000
	0x03263490 CMP W0, W8
	0x03263494 B.EQ 0x3263FD0
	0x03263498 MOVZ W8, 0xEA21
	0x0326349C MOVK W8, 0x8B810000
	0x032634A0 CMP W0, W8
	0x032634A4 B.EQ 0x3263C2C
	0x032634A8 MOVZ W8, 0xA021
	0x032634AC MOVK W8, 0x8BDC0000
	0x032634B0 CMP W0, W8
	0x032634B4 B.NE 0x3263A10
	0x032634B8 ADRP X8, 0xEC0000
	0x032634BC LDR X8, [X8 + 0x708]
	0x032634C0 B 0x326402C
	0x032634C4 MOVZ W8, 0x25BF
	0x032634C8 MOVK W8, 0xF4F70000
	0x032634CC CMP W0, W8
	0x032634D0 B.HI 0x32638F8
	0x032634D4 MOVZ W8, 0x6442
	0x032634D8 MOVK W8, 0xF3EA0000
	0x032634DC CMP W0, W8
	0x032634E0 B.EQ 0x3263FDC
	0x032634E4 MOVZ W8, 0xA880
	0x032634E8 MOVK W8, 0xF4C00000
	0x032634EC CMP W0, W8
	0x032634F0 B.EQ 0x3263C38
	0x032634F4 MOVZ W8, 0x25BF
	0x032634F8 MOVK W8, 0xF4F70000
	0x032634FC CMP W0, W8
	0x03263500 B.NE 0x3263A10
	0x03263504 ADRP X8, 0xEC0000
	0x03263508 LDR X8, [X8 + 0x7A8]
	0x0326350C B 0x32643B8
	0x03263510 MOVZ W8, 0x2CC3
	0x03263514 MOVK W8, 0x163F0000
	0x03263518 CMP W0, W8
	0x0326351C B.EQ 0x3263FE8
	0x03263520 MOVZ W8, 0x50BB
	0x03263524 MOVK W8, 0x16C40000
	0x03263528 CMP W0, W8
	0x0326352C B.EQ 0x3263C44
	0x03263530 MOVZ W8, 0xF67A
	0x03263534 MOVK W8, 0x17F20000
	0x03263538 CMP W0, W8
	0x0326353C B.NE 0x3263A10
	0x03263540 ADRP X8, 0xEC0000
	0x03263544 LDR X8, [X8 + 0x598]
	0x03263548 B 0x3263E64
	0x0326354C MOVZ W8, 0x35FA
	0x03263550 MOVK W8, 0x9CD40000
	0x03263554 CMP W0, W8
	0x03263558 B.EQ 0x3264024
	0x0326355C MOVZ W8, 0x5F9D
	0x03263560 MOVK W8, 0x9E9E0000
	0x03263564 CMP W0, W8
	0x03263568 B.EQ 0x3263C50
	0x0326356C MOVZ W8, 0x2B1D
	0x03263570 MOVK W8, 0xA00E0000
	0x03263574 CMP W0, W8
	0x03263578 B.NE 0x3263A10
	0x0326357C ADRP X8, 0xEC0000
	0x03263580 LDR X8, [X8 + 0x798]
	0x03263584 B 0x3263C64
	0x03263588 MOVZ W8, 0xC686
	0x0326358C MOVK W8, 0x5FF60000
	0x03263590 CMP W0, W8
	0x03263594 B.EQ 0x3264064

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x117A000
	007 Move X22, 0xE91000
	008 Move W8, [X19+1370]
	009 Move X22, [X22+1560]
	010 Move W20, W0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xE91000
	016 Move X0, [X0+1560]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+1370], W8
	020 Move X0, [X22]
	021 Move W1, 8
	022 Call 0x1C17D6C
	023 Compare W20, 0
	024 JumpIfEqual {66}
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X19, X0
	027 Compare X0, 0
	028 JumpIfEqual {78}
	029 Move W21, W31
	030 Move W8, [X19+24]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Add X8, X19, W21
	033 And W9, W20, 0xFFFFFF00
	034 And W10, W20, 0xFFFFFF00
	035 Move [X8+32], W20
	036 Or W8, W9, 255
	037 NotImplemented "Instruction CSEL not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction SBFM not yet implemented."
	040 Add W21, W21, 1
	041 Move X0, [X22]
	042 Move W1, W21
	043 Call 0x1C17D6C
	044 Subtract W8, W21, 1
	045 Move X9, X31
	046 Add X10, X0, 32
	047 Move W11, W21
	048 Move W12, [X19+24]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Compare X0, 0
	051 JumpIfEqual {78}
	052 Move W12, [X0+24]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Add X12, X19, W8
	055 Move W12, [X12+32]
	056 Subtract W8, W8, 1
	057 Move [X10], W12
	058 Add X9, X9, 1
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X20, [X31+32]
	061 Move X19, [X31+40]
	062 Move X22, [X31+16]
	063 Move X21, [X31+24]
	064 Move X30, [X31+48]
	065 Return X0
	066 Move X0, [X22]
	067 Move W1, 1
	068 Move X0, [X22]
	069 Move W1, W31
	070 Move X20, [X31+32]
	071 Move X19, [X31+40]
	072 Move X22, [X31+16]
	073 Move X21, [X31+24]
	074 Move X30, [X31+48]
	075 Call 0x1C17D6C
	076 Return X0
	077 Call 0x1C17F28
	078 Call 0x1C17F20

Method: System.Byte[] FixupKeyParity(System.Byte[] key)

Disassembly:
	0x03262744 MOV W11, W31
	0x03262748 MOV W9, W2
	0x0326274C ADD X10, X1, 0x20
	0x03262750 LDR W12, [X1 + 0x18]
	0x03262754 CMP X8, X12
	0x03262758 B.CS 0x326281C
	0x0326275C CBZ X0, 0x3262820
	0x03262760 LDR W12, [X0 + 0x18]
	0x03262764 CMP W11, W12
	0x03262768 B.CS 0x326281C
	0x0326276C ADD X12, X10, X8, 0x2, LSL
	0x03262770 LDRB W12, [X12 + 0x3]
	0x03262774 ADD X13, X0, W11, SXTW
	0x03262778 STRB W12, [X13 + 0x20]
	0x0326277C LDR W12, [X1 + 0x18]
	0x03262780 CMP X8, X12
	0x03262784 B.CS 0x326281C
	0x03262788 LDR W13, [X0 + 0x18]
	0x0326278C ADD W12, W11, 0x1
	0x03262790 CMP W12, W13
	0x03262794 B.CS 0x326281C
	0x03262798 ADD X13, X10, X8, 0x2, LSL
	0x0326279C LDRH W13, [X13 + 0x2]
	0x032627A0 ADD X14, X0, W12, SXTW
	0x032627A4 STRB W13, [X14 + 0x20]
	0x032627A8 LDR W13, [X1 + 0x18]
	0x032627AC CMP X8, X13
	0x032627B0 B.CS 0x326281C
	0x032627B4 LDR W13, [X0 + 0x18]
	0x032627B8 ADD W12, W12, 0x1
	0x032627BC CMP W12, W13
	0x032627C0 B.CS 0x326281C
	0x032627C4 LDR W13, [X10, X8, LSL #2]
	0x032627C8 ADD W14, W11, 0x2
	0x032627CC ADD X14, X0, W14, SXTW
	0x032627D0 UBFM W13, W13, 0x8, 0x1F
	0x032627D4 STRB W13, [X14 + 0x20]
	0x032627D8 LDR W13, [X1 + 0x18]
	0x032627DC CMP X8, X13
	0x032627E0 B.CS 0x326281C
	0x032627E4 LDR W13, [X0 + 0x18]
	0x032627E8 ADD W12, W12, 0x1
	0x032627EC CMP W12, W13
	0x032627F0 B.CS 0x326281C
	0x032627F4 LDR W13, [X10, X8, LSL #2]
	0x032627F8 ADD W11, W11, 0x3
	0x032627FC ADD X8, X8, 0x1
	0x03262800 ADD X11, X0, W11, SXTW
	0x03262804 CMP X9, X8
	0x03262808 STRB W13, [X11 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x117B000
	005 Move W8, [X20+1371]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE92000
	012 Move X0, [X0+1560]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1371], W8
	016 Compare X19, 0
	017 JumpIfEqual {53}
	018 Move X8, 0xE92000
	019 Move X8, [X8+1560]
	020 Move W1, [X19+24]
	021 Move X0, [X8]
	022 Call 0x1C17D6C
	023 Move X9, [X19+24]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X8, X31
	026 And X11, X9, 0
	027 Add X9, X19, 32
	028 Add X10, X0, 32
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Compare X0, 0
	031 JumpIfEqual {53}
	032 Move W11, [X0+24]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W11, [X9]
	035 And W13, W11, 14
	036 And W12, W11, 254
	037 Xor W11, W13, W11
	038 And W13, W11, 3
	039 Xor W11, W13, W11
	040 And W13, W11, 1
	041 Xor W11, W13, W11
	042 Or W11, W11, W12
	043 Xor W11, W11, 1
	044 Move [X10], W11
	045 Move W11, [X19+24]
	046 Add X8, X8, 1
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Return X0
	052 Call 0x1C17F28
	053 Call 0x1C17F20

Method: System.Void DWORDFromLittleEndian(System.UInt32* x, System.Int32 digits, System.Byte* block)

Disassembly:
	0x03263598 MOVZ W8, 0xCA4A
	0x0326359C MOVK W8, 0x61230000
	0x032635A0 CMP W0, W8
	0x032635A4 B.EQ 0x3263C5C
	0x032635A8 MOVZ W8, 0x63CE
	0x032635AC MOVK W8, 0x633B0000
	0x032635B0 CMP W0, W8
	0x032635B4 B.NE 0x3263A10
	0x032635B8 ADRP X8, 0xEC0000
	0x032635BC LDR X8, [X8 + 0x528]
	0x032635C0 B 0x326402C
	0x032635C4 MOVZ W8, 0xB9D5
	0x032635C8 MOVK W8, 0xD1050000
	0x032635CC CMP W0, W8
	0x032635D0 B.EQ 0x32640A4
	0x032635D4 MOVZ W8, 0x3896
	0x032635D8 MOVK W8, 0xD20A0000
	0x032635DC CMP W0, W8
	0x032635E0 B.EQ 0x3263C9C
	0x032635E4 MOVZ W8, 0x9303

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Move W9, W1
	003 Move X8, X31
	004 Move X9, X9
	005 ShiftRight X9, 62
	006 And X9, X9, 0x1FFFFFFF
	007 Add W11, W8, 1
	008 Move W10, [X2]
	009 Add W12, W8, 2
	010 Move W11, [X2]
	011 Add W13, W8, 3
	012 Move W12, [X2]
	013 Move W13, [X2]
	014 NotImplemented "Instruction BFM not yet implemented."
	015 NotImplemented "Instruction BFM not yet implemented."
	016 NotImplemented "Instruction BFM not yet implemented."
	017 Move [X0], W10
	018 Add X8, X8, 4
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Return 

Method: System.Void DWORDToLittleEndian(System.Byte[] block, System.UInt32[] x, System.Int32 digits)

Disassembly:
	0x032635E8 MOVK W8, 0xD2590000
	0x032635EC CMP W0, W8
	0x032635F0 B.NE 0x3263A10
	0x032635F4 ADRP X8, 0xEC0000
	0x032635F8 LDR X8, [X8 + 0x4E8]
	0x032635FC B 0x3263E24
	0x03263600 MOVZ W8, 0x2FED
	0x03263604 MOVK W8, 0x32E00000
	0x03263608 CMP W0, W8
	0x0326360C B.EQ 0x3264108
	0x03263610 MOVZ W8, 0x9633
	0x03263614 MOVK W8, 0x344B0000
	0x03263618 CMP W0, W8
	0x0326361C B.EQ 0x3263CD8
	0x03263620 MOVZ W8, 0x69B6
	0x03263624 MOVK W8, 0x35A90000
	0x03263628 CMP W0, W8
	0x0326362C B.NE 0x3263A10
	0x03263630 ADRP X8, 0xEC0000
	0x03263634 LDR X8, [X8 + 0x758]
	0x03263638 MOV X0, X21
	0x0326363C MOV X2, X31
	0x03263640 LDR X1, [X8]
	0x03263644 BL 0x321BA08
	0x03263648 MOV X21, X31
	0x0326364C TBZ X0, 0x0, 0x3263A14
	0x03263650 ADRP X8, 0xEC0000
	0x03263654 LDR X8, [X8 + 0x448]
	0x03263658 LDR X0, [X8]
	0x0326365C BL 0x1C16F10
	0x03263660 MOV X1, X31
	0x03263664 MOV X21, X0
	0x03263668 BL 0x3254280
	0x0326366C B 0x32645B0
	0x03263670 MOVZ W8, 0x1A30
	0x03263674 MOVK W8, 0xB70F0000
	0x03263678 CMP W0, W8
	0x0326367C B.EQ 0x3264144
	0x03263680 MOVZ W8, 0x42CF
	0x03263684 MOVK W8, 0xB8410000
	0x03263688 CMP W0, W8
	0x0326368C B.EQ 0x3263CE4
	0x03263690 MOVZ W8, 0x3F99
	0x03263694 MOVK W8, 0xB92B0000
	0x03263698 CMP W0, W8
	0x0326369C B.NE 0x3263A10
	0x032636A0 ADRP X8, 0xEC0000
	0x032636A4 LDR X8, [X8 + 0x6D8]
	0x032636A8 B 0x32643F4
	0x032636AC MOVZ W8, 0x39D1
	0x032636B0 MOVK W8, 0x84000000
	0x032636B4 CMP W0, W8
	0x032636B8 B.EQ 0x3264150
	0x032636BC MOVZ W8, 0xD567
	0x032636C0 MOVK W8, 0x85EA0000
	0x032636C4 CMP W0, W8
	0x032636C8 B.EQ 0x3263D20
	0x032636CC MOVZ W8, 0x6D33
	0x032636D0 MOVK W8, 0x7F0E0000
	0x032636D4 CMP W0, W8
	0x032636D8 B.NE 0x3263A10

ISIL:
	001 Move [X31-16], X30
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Compare X1, 0
	004 JumpIfEqual {55}
	005 Move X8, X31
	006 Move W11, W31
	007 Move W9, W2
	008 Add X10, X1, 32
	009 Move W12, [X1+24]
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Compare X0, 0
	012 JumpIfEqual {55}
	013 Move W12, [X0+24]
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move W12, [X10]
	016 Add X13, X0, W11
	017 Move [X13+32], W12
	018 Move W12, [X1+24]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move W13, [X0+24]
	021 Add W12, W11, 1
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move W13, [X10]
	024 Add X14, X0, W12
	025 Move W13, W13
	026 ShiftRight W13, 8
	027 And W13, W13, 0x7FFFFFFF
	028 Move [X14+32], W13
	029 Move W13, [X1+24]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move W13, [X0+24]
	032 Add W12, W12, 1
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Add X13, X10, X8
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 Add W14, W11, 2
	037 Add X14, X0, W14
	038 Move [X14+32], W13
	039 Move W13, [X1+24]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move W13, [X0+24]
	042 Add W12, W12, 1
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Add X13, X10, X8
	045 Move W13, [X13+3]
	046 Add W11, W11, 3
	047 Add X8, X8, 1
	048 Add X11, X0, W11
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move [X11+32], W13
	051 Add W11, W12, 1
	052 Move X30, [X31+16]
	053 Return 
	054 Call 0x1C17F28
	055 Call 0x1C17F20

Method: System.Void DWORDFromBigEndian(System.UInt32* x, System.Int32 digits, System.Byte* block)

Disassembly:
	0x032636DC ADRP X8, 0xEC0000
	0x032636E0 LDR X8, [X8 + 0x4A8]
	0x032636E4 B 0x32643B8
	0x032636E8 MOVZ W8, 0xDB74
	0x032636EC MOVK W8, 0xEDEA0000
	0x032636F0 CMP W0, W8
	0x032636F4 B.EQ 0x326415C
	0x032636F8 MOVZ W8, 0x1487
	0x032636FC MOVK W8, 0xEE9E0000
	0x03263700 CMP W0, W8
	0x03263704 B.EQ 0x3263D60
	0x03263708 MOVZ W8, 0x7E15
	0x0326370C MOVK W8, 0xF29D0000
	0x03263710 CMP W0, W8
	0x03263714 B.NE 0x3263A10
	0x03263718 ADRP X8, 0xEC0000
	0x0326371C LDR X8, [X8 + 0x5A8]
	0x03263720 B 0x326406C
	0x03263724 MOVZ W8, 0x61EC
	0x03263728 MOVK W8, 0x22190000
	0x0326372C CMP W0, W8

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Move W9, W1
	003 Move X8, X31
	004 Move X9, X9
	005 ShiftRight X9, 62
	006 And X9, X9, 0x1FFFFFFF
	007 Move W10, [X2]
	008 Add W11, W8, 1
	009 Add W12, W8, 2
	010 Move W11, [X2]
	011 Add W13, W8, 3
	012 Move W12, [X2]
	013 Move W13, [X2]
	014 Move W10, W10
	015 ShiftRight W10, 8
	016 And W10, W10, 127
	017 NotImplemented "Instruction BFM not yet implemented."
	018 NotImplemented "Instruction BFM not yet implemented."
	019 Or W10, W10, W13
	020 Move [X0], W10
	021 Add X8, X8, 4
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Return 

Method: System.Void DWORDToBigEndian(System.Byte[] block, System.UInt32[] x, System.Int32 digits)

Disassembly:
	0x03263730 B.EQ 0x3264168
	0x03263734 MOVZ W8, 0x23F4
	0x03263738 MOVK W8, 0x22E20000
	0x0326373C CMP W0, W8
	0x03263740 B.EQ 0x3263D6C
	0x03263744 MOVZ W8, 0xA30D
	0x03263748 MOVK W8, 0x231C0000
	0x0326374C CMP W0, W8
	0x03263750 B.NE 0x3263A10
	0x03263754 ADRP X8, 0xEC0000
	0x03263758 LDR X8, [X8 + 0x510]
	0x0326375C B 0x3263F98
	0x03263760 MOVZ W8, 0xC918
	0x03263764 MOVK W8, 0xA8530000
	0x03263768 CMP W0, W8
	0x0326376C B.EQ 0x32641A8
	0x03263770 MOVZ W8, 0xED7D
	0x03263774 MOVK W8, 0xAA2D0000
	0x03263778 CMP W0, W8
	0x0326377C B.EQ 0x3263DAC
	0x03263780 MOVZ W8, 0xE7B2
	0x03263784 MOVK W8, 0xAE170000
	0x03263788 CMP W0, W8
	0x0326378C B.NE 0x3263A10
	0x03263790 ADRP X8, 0xEC0000
	0x03263794 LDR X8, [X8 + 0x508]
	0x03263798 B 0x326406C
	0x0326379C MOVZ W8, 0xD0B1
	0x032637A0 MOVK W8, 0x6A010000
	0x032637A4 CMP W0, W8
	0x032637A8 B.EQ 0x32641E4
	0x032637AC MOVZ W8, 0xC990
	0x032637B0 MOVK W8, 0x6C830000
	0x032637B4 CMP W0, W8
	0x032637B8 B.EQ 0x3263DB8
	0x032637BC MOVZ W8, 0xD3D0
	0x032637C0 MOVK W8, 0x6F030000
	0x032637C4 CMP W0, W8
	0x032637C8 B.NE 0x3263A10
	0x032637CC ADRP X8, 0xEC0000
	0x032637D0 LDR X8, [X8 + 0x7C0]
	0x032637D4 B 0x3263C64
	0x032637D8 MOVZ W8, 0x4D0D
	0x032637DC MOVK W8, 0xDF0A0000
	0x032637E0 CMP W0, W8
	0x032637E4 B.HI 0x3263934
	0x032637E8 MOVZ W8, 0x7ABB
	0x032637EC MOVK W8, 0xDD390000
	0x032637F0 CMP W0, W8
	0x032637F4 B.EQ 0x3264220
	0x032637F8 MOVZ W8, 0x4D0D
	0x032637FC MOVK W8, 0xDF0A0000
	0x03263800 CMP W0, W8
	0x03263804 B.NE 0x3263A10
	0x03263808 ADRP X8, 0xEBE000
	0x0326380C LDR X8, [X8 + 0x228]
	0x03263810 MOV X0, X21
	0x03263814 MOV X2, X31
	0x03263818 LDR X1, [X8]
	0x0326381C BL 0x321BA08
	0x03263820 MOV X21, X31

ISIL:
	001 Move [X31-16], X30
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Compare X1, 0
	004 JumpIfEqual {55}
	005 Move X8, X31
	006 Move W11, W31
	007 Move W9, W2
	008 Add X10, X1, 32
	009 Move W12, [X1+24]
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Compare X0, 0
	012 JumpIfEqual {55}
	013 Move W12, [X0+24]
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Add X12, X10, X8
	016 Move W12, [X12+3]
	017 Add X13, X0, W11
	018 Move [X13+32], W12
	019 Move W12, [X1+24]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move W13, [X0+24]
	022 Add W12, W11, 1
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Add X13, X10, X8
	025 NotImplemented "Instruction LDRH not yet implemented."
	026 Add X14, X0, W12
	027 Move [X14+32], W13
	028 Move W13, [X1+24]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W13, [X0+24]
	031 Add W12, W12, 1
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move W13, [X10]
	034 Add W14, W11, 2
	035 Add X14, X0, W14
	036 Move W13, W13
	037 ShiftRight W13, 8
	038 And W13, W13, 0x7FFFFFFF
	039 Move [X14+32], W13
	040 Move W13, [X1+24]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move W13, [X0+24]
	043 Add W12, W12, 1
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move W13, [X10]
	046 Add W11, W11, 3
	047 Add X8, X8, 1
	048 Add X11, X0, W11
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move [X11+32], W13
	051 Add W11, W12, 1
	052 Move X30, [X31+16]
	053 Return 
	054 Call 0x1C17F28
	055 Call 0x1C17F20

Method: System.Void QuadWordFromBigEndian(System.UInt64* x, System.Int32 digits, System.Byte* block)

Disassembly:
	0x03261138 MOV X19, X0
	0x0326113C TBNZ X8, 0x0, 0x3261154
	0x03261140 ADRP X0, 0xEBF000
	0x03261144 LDR X0, [X0 + 0xBD8]
	0x03261148 BL 0x1C16CF4
	0x0326114C MOVZ W8, 0x1
	0x03261150 STRB W8, [X20 + 0x55C]
	0x03261154 LDR X0, [X21]
	0x03261158 LDR W8, [X0 + 0xE0]
	0x0326115C CBNZ W8, 0x3261164
	0x03261160 BL 0x1C16DFC
	0x03261164 MOV X0, X19
	0x03261168 LDP X20, X19, [X31 + 0x10]
	0x0326116C MOV X1, X31
	0x03261170 LDP X30, X21, [X31], #0x20
	0x03261174 B 0x326282C
	0x03261178 STR X30, [X31 - 0x20]!
	0x0326117C STP X20, X19, [X31 + 0x10]
	0x03261180 LDR X8, [X0]
	0x03261184 MOV X19, X0
	0x03261188 LDP X9, X1, [X8 + 0x1E8]
	0x0326118C BLR X9
	0x03261190 LDR X8, [X19]
	0x03261194 MOV X20, X0
	0x03261198 MOV X0, X19
	0x0326119C LDP X9, X1, [X8 + 0x1C8]
	0x032611A0 BLR X9
	0x032611A4 LDR X8, [X19]
	0x032611A8 MOV X2, X0
	0x032611AC MOV X0, X19
	0x032611B0 MOV X1, X20
	0x032611B4 LDR X4, [X8 + 0x288]
	0x032611B8 LDR X3, [X8 + 0x290]

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Move W9, W1
	003 Move X8, X31
	004 Move X9, X9
	005 ShiftRight X9, 61
	006 And X9, X9, 0xFFFFFFF
	007 Add W10, W8, 1
	008 Move W17, [X2]
	009 Add W11, W8, 2
	010 Move W10, [X2]
	011 Add W12, W8, 3
	012 Move W11, [X2]
	013 Add W13, W8, 4
	014 Move W12, [X2]
	015 Add W14, W8, 5
	016 Move W13, [X2]
	017 Move X17, X17
	018 ShiftRight X17, 8
	019 And X17, X17, 127
	020 Add W15, W8, 6
	021 Move W14, [X2]
	022 NotImplemented "Instruction BFM not yet implemented."
	023 Add W16, W8, 7
	024 Move W15, [X2]
	025 NotImplemented "Instruction BFM not yet implemented."
	026 Move W16, [X2]
	027 NotImplemented "Instruction BFM not yet implemented."
	028 NotImplemented "Instruction BFM not yet implemented."
	029 NotImplemented "Instruction BFM not yet implemented."
	030 NotImplemented "Instruction BFM not yet implemented."
	031 Or X10, X17, X16
	032 Move [X0], X10
	033 Add X8, X8, 8
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Return 

Method: System.Void QuadWordToBigEndian(System.Byte[] block, System.UInt64[] x, System.Int32 digits)

Disassembly:
	0x03260F7C MOV X1, X0
	0x03260F80 MOV X0, X20
	0x03260F84 BL 0x1C16DEC
	0x03260F88 LDR W0, [X0 + 0x3C]
	0x03260F8C RET
	0x03260F90 STR X30, [X31 - 0x20]!
	0x03260F94 STP X20, X19, [X31 + 0x10]
	0x03260F98 SUB W8, W1, 0x1
	0x03260F9C CMP W8, 0x4
	0x03260FA0 B.CS 0x3260FB4
	0x03260FA4 LDP X20, X19, [X31 + 0x10]
	0x03260FA8 STR W1, [X0 + 0x3C]
	0x03260FAC LDR X30, [X31], #0x20
	0x03260FB0 RET
	0x03260FB4 ADRP X0, 0xEC3000
	0x03260FB8 LDR X0, [X0 + 0x1D0]
	0x03260FBC BL 0x1C16D08
	0x03260FC0 MOV X1, X31
	0x03260FC4 BL 0x33BDD84
	0x03260FC8 MOV X19, X0
	0x03260FCC ADRP X0, 0xEC0000
	0x03260FD0 LDR X0, [X0 + 0xCE0]
	0x03260FD4 BL 0x1C16D08
	0x03260FD8 BL 0x1C16F10
	0x03260FDC MOV X1, X19
	0x03260FE0 MOV X2, X31
	0x03260FE4 MOV X20, X0
	0x03260FE8 BL 0x3252170
	0x03260FEC ADRP X0, 0xEC3000
	0x03260FF0 LDR X0, [X0 + 0x3B8]
	0x03260FF4 BL 0x1C16D08
	0x03260FF8 MOV X1, X0
	0x03260FFC MOV X0, X20
	0x03261000 BL 0x1C16DEC
	0x03261004 LDR W0, [X0 + 0x40]
	0x03261008 RET
	0x0326100C STR X30, [X31 - 0x20]!
	0x03261010 STP X20, X19, [X31 + 0x10]
	0x03261014 SUB W8, W1, 0x1
	0x03261018 CMP W8, 0x5
	0x0326101C B.CS 0x3261030
	0x03261020 LDP X20, X19, [X31 + 0x10]
	0x03261024 STR W1, [X0 + 0x40]
	0x03261028 LDR X30, [X31], #0x20
	0x0326102C RET
	0x03261030 ADRP X0, 0xEC2000
	0x03261034 LDR X0, [X0 + 0x3C0]
	0x03261038 BL 0x1C16D08
	0x0326103C MOV X1, X31
	0x03261040 BL 0x33BDD84
	0x03261044 MOV X19, X0
	0x03261048 ADRP X0, 0xEBF000
	0x0326104C LDR X0, [X0 + 0xCE0]
	0x03261050 BL 0x1C16D08
	0x03261054 BL 0x1C16F10
	0x03261058 MOV X1, X19
	0x0326105C MOV X2, X31
	0x03261060 MOV X20, X0
	0x03261064 BL 0x3252170
	0x03261068 ADRP X0, 0xEC2000
	0x0326106C LDR X0, [X0 + 0x3C8]
	0x03261070 BL 0x1C16D08
	0x03261074 MOV X1, X0
	0x03261078 MOV X0, X20
	0x0326107C BL 0x1C16DEC
	0x03261080 STP X30, X21, [X31 - 0x20]!
	0x03261084 STP X20, X19, [X31 + 0x10]
	0x03261088 ADRP X20, 0x117B000
	0x0326108C ADRP X21, 0xEBF000
	0x03261090 LDRB W8, [X20 + 0x54B]
	0x03261094 LDR X21, [X21 + 0xBD8]
	0x03261098 MOV X19, X0
	0x0326109C TBNZ X8, 0x0, 0x32610C0
	0x032610A0 ADRP X0, 0xEBF000
	0x032610A4 LDR X0, [X0 + 0xBD8]
	0x032610A8 BL 0x1C16CF4
	0x032610AC ADRP X0, 0xEC2000
	0x032610B0 LDR X0, [X0 + 0x3D0]
	0x032610B4 BL 0x1C16CF4
	0x032610B8 MOVZ W8, 0x1
	0x032610BC STRB W8, [X20 + 0x54B]
	0x032610C0 LDR X0, [X21]
	0x032610C4 LDR W8, [X0 + 0xE0]
	0x032610C8 CBNZ W8, 0x32610D0
	0x032610CC BL 0x1C16DFC
	0x032610D0 MOV X0, X19
	0x032610D4 BL 0x3261120
	0x032610D8 CBZ X0, 0x3261110
	0x032610DC ADRP X9, 0xEC2000
	0x032610E0 LDR X9, [X9 + 0x3D0]
	0x032610E4 LDR X8, [X0]
	0x032610E8 LDR X1, [X9]
	0x032610EC LDRB W10, [X8 + 0x130]
	0x032610F0 LDRB W9, [X1 + 0x130]
	0x032610F4 CMP W10, W9
	0x032610F8 B.CC 0x326111C
	0x032610FC LDR X8, [X8 + 0xC8]
	0x03261100 ADD X8, X8, X9, 0x3, LSL
	0x03261104 LDUR X8, [X8 - 0x8]
	0x03261108 CMP X8, X1
	0x0326110C B.NE 0x326111C
	0x03261110 LDP X20, X19, [X31 + 0x10]
	0x03261114 LDP X30, X21, [X31], #0x20
	0x03261118 RET
	0x0326111C BL 0x1C171E0
	0x03261120 STP X30, X21, [X31 - 0x20]!
	0x03261124 STP X20, X19, [X31 + 0x10]
	0x03261128 ADRP X20, 0x117B000
	0x0326112C ADRP X21, 0xEBF000
	0x03261130 LDRB W8, [X20 + 0x55C]
	0x03261134 LDR X21, [X21 + 0xBD8]

ISIL:
	001 Move [X31-16], X30
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Compare X1, 0
	004 JumpIfEqual {105}
	005 Move W11, W2
	006 Move X10, X31
	007 Move X8, X31
	008 Add X9, X1, 32
	009 Move X11, X11
	010 ShiftRight X11, 61
	011 And X11, X11, 0xFFFFFFF
	012 Move W12, [X1+24]
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Compare X0, 0
	015 JumpIfEqual {105}
	016 Move W12, [X0+24]
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Add X12, X9, X10
	019 Move W12, [X12+7]
	020 Add X13, X0, W10
	021 Move [X13+32], W12
	022 Move W12, [X1+24]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move W13, [X0+24]
	025 Add X12, X10, 1
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Add X13, X9, X10
	028 NotImplemented "Instruction LDRH not yet implemented."
	029 Add X14, X0, W12
	030 Move [X14+32], W13
	031 Move W13, [X1+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move W13, [X0+24]
	034 Add X12, X12, 1
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X13, [X9]
	037 Add X14, X10, 2
	038 Add X14, X0, W14
	039 Move X13, X13
	040 ShiftRight X13, 40
	041 And X13, X13, 0x7FFFFFFF
	042 Move [X14+32], W13
	043 Move W13, [X1+24]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move W13, [X0+24]
	046 Add X12, X12, 1
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Add X13, X9, X10
	049 Move W13, [X13+4]
	050 Add X14, X10, 3
	051 Add X14, X0, W14
	052 Move [X14+32], W13
	053 Move W13, [X1+24]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move W13, [X0+24]
	056 Add X12, X12, 1
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X13, [X9]
	059 Add X14, X10, 4
	060 Add X14, X0, W14
	061 Move X13, X13
	062 ShiftRight X13, 24
	063 And X13, X13, 0x7FFFFFFF
	064 Move [X14+32], W13
	065 Move W13, [X1+24]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move W13, [X0+24]
	068 Add X12, X12, 1
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X13, [X9]
	071 Add X14, X10, 5
	072 Add X14, X0, W14
	073 Move X13, X13
	074 ShiftRight X13, 16
	075 And X13, X13, 0x7FFFFFFF
	076 Move [X14+32], W13
	077 Move W13, [X1+24]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move W13, [X0+24]
	080 Add X12, X12, 1
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X13, [X9]
	083 Add X14, X10, 6
	084 Add X14, X0, W14
	085 Move X13, X13
	086 ShiftRight X13, 8
	087 And X13, X13, 0x7FFFFFFF
	088 Move [X14+32], W13
	089 Move W13, [X1+24]
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move W13, [X0+24]
	092 Add X12, X12, 1
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X14, [X9]
	095 Add X13, X10, 7
	096 Add X10, X10, 8
	097 Add X8, X8, 1
	098 Add X13, X0, W13
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Add X10, X12, 1
	101 Move [X13+32], W14
	102 Move X30, [X31+16]
	103 Return 
	104 Call 0x1C17F28
	105 Call 0x1C17F20

Method: System.Boolean _ProduceLegacyHmacValues()

Disassembly:
	0x03263824 TBZ X0, 0x0, 0x3263A14
	0x03263828 LDR X0, [X24]

ISIL:
	001 Move W0, W31
	002 Return X0

