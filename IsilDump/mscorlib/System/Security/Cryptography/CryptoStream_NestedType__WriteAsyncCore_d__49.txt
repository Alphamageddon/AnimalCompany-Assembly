Type: System.Security.Cryptography.CryptoStream/<WriteAsyncCore>d__49

Method: System.Void MoveNext()

Disassembly:
	0x03250B90 ADRP X0, 0xEA4000
	0x03250B94 LDR X0, [X0 + 0x7B8]
	0x03250B98 BL 0x1C16CF4
	0x03250B9C MOVZ W8, 0x1
	0x03250BA0 ADRP X9, 0x118C000
	0x03250BA4 STRB W8, [X9 + 0x4E4]
	0x03250BA8 LDR X19, [X31 + 0x30]
	0x03250BAC CBZ X19, 0x3250D3C
	0x03250BB0 ADRP X9, 0xEA4000
	0x03250BB4 LDR X8, [X19]
	0x03250BB8 LDR X9, [X9 + 0x7B8]
	0x03250BBC LDRB W11, [X8 + 0x130]
	0x03250BC0 LDR X9, [X9]
	0x03250BC4 LDRB W10, [X9 + 0x130]
	0x03250BC8 CMP W11, W10
	0x03250BCC B.CC 0x3250BE4
	0x03250BD0 LDR X11, [X8 + 0xC8]
	0x03250BD4 ADD X10, X11, X10, 0x3, LSL
	0x03250BD8 LDUR X10, [X10 - 0x8]
	0x03250BDC CMP X10, X9
	0x03250BE0 B.EQ 0x3250EDC
	0x03250BE4 ADRP X10, 0xED2000
	0x03250BE8 LDRH W20, [X31 + 0x38]
	0x03250BEC LDRH W9, [X8 + 0x12E]
	0x03250BF0 LDR X10, [X10 + 0xEA8]
	0x03250BF4 LDR X1, [X10]
	0x03250BF8 CBZ X9, 0x3250C1C
	0x03250BFC LDR X10, [X8 + 0xB0]
	0x03250C00 ADD X10, X10, 0x8
	0x03250C04 LDUR X11, [X10 - 0x8]
	0x03250C08 CMP X11, X1
	0x03250C0C B.EQ 0x3250D1C
	0x03250C10 SUBS X9, X9, 0x1
	0x03250C14 ADD X10, X10, 0x10
	0x03250C18 B.NE 0x3250C04
	0x03250C1C MOV X0, X19
	0x03250C20 MOV W2, W31
	0x03250C24 BL 0x1C5C788
	0x03250C28 B 0x3250D28
	0x03250C2C CBZ X19, 0x3250F8C
	0x03250C30 LDR X8, [X19]
	0x03250C34 LDR X9, [X8 + 0x388]
	0x03250C38 LDR X4, [X8 + 0x390]
	0x03250C3C MOV X0, X19
	0x03250C40 MOV X1, X20
	0x03250C44 MOV W2, W31
	0x03250C48 MOV W3, W21
	0x03250C4C BLR X9
	0x03250C50 B 0x3250E48
	0x03250C54 LDR W9, [X10]
	0x03250C58 ADD W9, W9, 0x2
	0x03250C5C ADD X8, X8, W9, 0x4, SXTW
	0x03250C60 ADD X0, X8, 0x138
	0x03250C64 LDP X8, X2, [X0]
	0x03250C68 MOV X0, X19
	0x03250C6C MOV W1, W20
	0x03250C70 BLR X8
	0x03250C74 LDR X8, [X31 + 0x48]
	0x03250C78 MOVZ W19, 0x1A
	0x03250C7C LDR W9, [X8 + 0x68]
	0x03250C80 LDP W11, W10, [X8 + 0x48]
	0x03250C84 ADD W10, W9, W10
	0x03250C88 SUB W9, W11, W9
	0x03250C8C STP W9, W10, [X8 + 0x48]
	0x03250C90 ADD X0, X31, 0x8
	0x03250C94 BL 0x1BB4A28
	0x03250C98 CMP W19, 0x1A
	0x03250C9C B.EQ 0x3250CA4
	0x03250CA0 CBNZ W19, 0x3250560
	0x03250CA4 LDR X8, [X31 + 0x48]
	0x03250CA8 STR X31, [X8 + 0x70]
	0x03250CAC B 0x3250584
	0x03250CB0 CBZ W21, 0x3250CBC
	0x03250CB4 MOV X0, X31
	0x03250CB8 BL 0x339D6EC
	0x03250CBC MOV X20, X31
	0x03250CC0 MOV X2, X31
	0x03250CC4 CBNZ X19, 0x3250910
	0x03250CC8 BL 0x1C16F20
	0x03250CCC CBZ W21, 0x3250CD8
	0x03250CD0 MOV X0, X31
	0x03250CD4 BL 0x339D6EC
	0x03250CD8 MOV X20, X31
	0x03250CDC MOV X2, X31
	0x03250CE0 CBNZ X19, 0x3250AE8
	0x03250CE4 BL 0x1C16F20
	0x03250CE8 MOV X0, X19
	0x03250CEC MOV X1, X31
	0x03250CF0 BL 0x32C3B54
	0x03250CF4 B 0x3250C74
	0x03250CF8 LDRSW X9, [X10]
	0x03250CFC ADD X8, X8, X9, 0x4, LSL
	0x03250D00 ADD X0, X8, 0x138
	0x03250D04 LDP X8, X2, [X0]
	0x03250D08 MOV X0, X19
	0x03250D0C MOV W1, W20
	0x03250D10 BLR X8
	0x03250D14 CBNZ W0, 0x3250704
	0x03250D18 B 0x3250E84
	0x03250D1C LDRSW X9, [X10]
	0x03250D20 ADD X8, X8, X9, 0x4, LSL
	0x03250D24 ADD X0, X8, 0x138
	0x03250D28 LDP X8, X2, [X0]
	0x03250D2C MOV X0, X19
	0x03250D30 MOV W1, W20
	0x03250D34 BLR X8
	0x03250D38 CBZ W0, 0x3250EEC
	0x03250D3C LDR X0, [X29]
	0x03250D40 LDR W8, [X0 + 0xE0]
	0x03250D44 CBNZ W8, 0x3250D4C
	0x03250D48 BL 0x1C16DFC
	0x03250D4C LDRB W8, [X24 + 0x4E5]
	0x03250D50 CBNZ W8, 0x3250D68
	0x03250D54 ADRP X0, 0xECD000
	0x03250D58 LDR X0, [X0 + 0xE40]
	0x03250D5C BL 0x1C16CF4
	0x03250D60 MOVZ W8, 0x1
	0x03250D64 STRB W8, [X24 + 0x4E5]
	0x03250D68 LDR X0, [X28]
	0x03250D6C LDR W8, [X0 + 0xE0]
	0x03250D70 CBNZ W8, 0x3250D78
	0x03250D74 BL 0x1C16DFC
	0x03250D78 LDRB W8, [X25 + 0x4E6]
	0x03250D7C CBNZ W8, 0x3250DA0
	0x03250D80 ADRP X0, 0xED2000
	0x03250D84 LDR X0, [X0 + 0xEA8]
	0x03250D88 BL 0x1C16CF4
	0x03250D8C ADRP X0, 0xEA4000
	0x03250D90 LDR X0, [X0 + 0x7B8]
	0x03250D94 BL 0x1C16CF4
	0x03250D98 MOVZ W8, 0x1
	0x03250D9C STRB W8, [X25 + 0x4E6]
	0x03250DA0 LDR X19, [X31 + 0x30]
	0x03250DA4 CBZ X19, 0x3250E44
	0x03250DA8 ADRP X9, 0xEA4000
	0x03250DAC LDR X8, [X19]
	0x03250DB0 LDR X9, [X9 + 0x7B8]
	0x03250DB4 LDRB W11, [X8 + 0x130]
	0x03250DB8 LDR X9, [X9]
	0x03250DBC LDRB W10, [X9 + 0x130]
	0x03250DC0 CMP W11, W10
	0x03250DC4 B.CC 0x3250DDC
	0x03250DC8 LDR X11, [X8 + 0xC8]
	0x03250DCC ADD X10, X11, X10, 0x3, LSL
	0x03250DD0 LDUR X10, [X10 - 0x8]
	0x03250DD4 CMP X10, X9
	0x03250DD8 B.EQ 0x3250E64
	0x03250DDC ADRP X10, 0xED2000
	0x03250DE0 LDRH W20, [X31 + 0x38]
	0x03250DE4 LDRH W9, [X8 + 0x12E]
	0x03250DE8 LDR X10, [X10 + 0xEA8]
	0x03250DEC LDR X1, [X10]
	0x03250DF0 CBZ X9, 0x3250E14
	0x03250DF4 LDR X10, [X8 + 0xB0]
	0x03250DF8 ADD X10, X10, 0x8
	0x03250DFC LDUR X11, [X10 - 0x8]
	0x03250E00 CMP X11, X1
	0x03250E04 B.EQ 0x3250E24
	0x03250E08 SUBS X9, X9, 0x1
	0x03250E0C ADD X10, X10, 0x10
	0x03250E10 B.NE 0x3250DFC
	0x03250E14 MOVZ W2, 0x2
	0x03250E18 MOV X0, X19
	0x03250E1C BL 0x1C5C788
	0x03250E20 B 0x3250E34
	0x03250E24 LDR W9, [X10]
	0x03250E28 ADD W9, W9, 0x2
	0x03250E2C ADD X8, X8, W9, 0x4, SXTW
	0x03250E30 ADD X0, X8, 0x138
	0x03250E34 LDP X8, X2, [X0]
	0x03250E38 MOV X0, X19
	0x03250E3C MOV W1, W20
	0x03250E40 BLR X8
	0x03250E44 CBZ X26, 0x3250F6C
	0x03250E48 LDR X8, [X31 + 0x48]
	0x03250E4C LDR W9, [X26 + 0x4C]
	0x03250E50 LDP W11, W10, [X8 + 0x48]
	0x03250E54 ADD W10, W9, W10
	0x03250E58 SUB W9, W11, W9
	0x03250E5C STP W9, W10, [X8 + 0x48]
	0x03250E60 B 0x3250584
	0x03250E64 MOV X0, X19
	0x03250E68 MOV X1, X31
	0x03250E6C BL 0x32C3B54
	0x03250E70 B 0x3250E44
	0x03250E74 MOV X0, X19
	0x03250E78 MOV X1, X31
	0x03250E7C BL 0x33ED11C
	0x03250E80 TBNZ X0, 0x0, 0x3250704
	0x03250E84 LDR X19, [X31 + 0x48]
	0x03250E88 MOVZ W8, 0x2
	0x03250E8C STR W8, [X31 + 0x44]
	0x03250E90 STR W8, [X19]
	0x03250E94 LDR V0, [X31 + 0x3]
	0x03250E98 ADRP X8, 0xEA6000
	0x03250E9C MOV X2, X19
	0x03250EA0 STUR V0, [X19 + 0x58]
	0x03250EA4 LDR X8, [X8 + 0x280]
	0x03250EA8 LDR X0, [X8]
	0x03250EAC LDR W8, [X0 + 0xE0]
	0x03250EB0 CBNZ W8, 0x3250EBC
	0x03250EB4 BL 0x1C16DFC
	0x03250EB8 LDR X2, [X31 + 0x48]
	0x03250EBC ADRP X8, 0xED2000
	0x03250EC0 LDR X8, [X8 + 0xE98]
	0x03250EC4 ADD X0, X19, 0x8
	0x03250EC8 LDR X3, [X8]
	0x03250ECC ADD X1, X31, 0x30
	0x03250ED0 BL 0x218B92C
	0x03250ED4 MOVZ W19, 0xD
	0x03250ED8 B 0x3250C90
	0x03250EDC MOV X0, X19
	0x03250EE0 MOV X1, X31
	0x03250EE4 BL 0x33ED11C
	0x03250EE8 TBNZ X0, 0x0, 0x3250D3C
	0x03250EEC LDR X19, [X31 + 0x48]
	0x03250EF0 MOVZ W8, 0x3
	0x03250EF4 STR W8, [X31 + 0x44]
	0x03250EF8 STR W8, [X19]
	0x03250EFC LDR V0, [X31 + 0x3]
	0x03250F00 ADRP X8, 0xEA6000
	0x03250F04 MOV X2, X19
	0x03250F08 STUR V0, [X19 + 0x58]
	0x03250F0C LDR X8, [X8 + 0x280]
	0x03250F10 LDR X0, [X8]
	0x03250F14 LDR W8, [X0 + 0xE0]
	0x03250F18 CBNZ W8, 0x3250F24
	0x03250F1C BL 0x1C16DFC
	0x03250F20 LDR X2, [X31 + 0x48]
	0x03250F24 ADRP X8, 0xED2000
	0x03250F28 LDR X8, [X8 + 0xE98]
	0x03250F2C ADD X0, X19, 0x8
	0x03250F30 LDR X3, [X8]
	0x03250F34 ADD X1, X31, 0x30
	0x03250F38 BL 0x218B92C
	0x03250F3C B 0x3250560
	0x03250F40 LDR X0, [X20 + 0x30]
	0x03250F44 LDR W1, [X20 + 0x4C]
	0x03250F48 LDR X2, [X26 + 0x40]
	0x03250F4C MOV W3, W31
	0x03250F50 MOV W4, W19
	0x03250F54 MOV X5, X31
	0x03250F58 BL 0x33A8A9C
	0x03250F5C LDR X20, [X31 + 0x48]
	0x03250F60 ADD X21, X26, 0x48
	0x03250F64 ADD X8, X20, 0x48
	0x03250F68 B 0x3250524
	0x03250F6C BL 0x1C16F20
	0x03250F70 BL 0x1C16F20
	0x03250F74 BL 0x1C16F20
	0x03250F78 BL 0x1C16F20
	0x03250F7C BL 0x1C16F20
	0x03250F80 BL 0x1C16F20
	0x03250F84 BL 0x1C16F20
	0x03250F88 BL 0x1C16F20
	0x03250F8C BL 0x1C16F20
	0x03250F90 B 0x325101C
	0x03250F94 B 0x325101C
	0x03250F98 B 0x32510C0
	0x03250F9C B 0x325101C
	0x03250FA0 B 0x325101C
	0x03250FA4 B 0x32510C0
	0x03250FA8 B 0x32510C0
	0x03250FAC B 0x325101C
	0x03250FB0 B 0x32510C0
	0x03250FB4 B 0x325101C
	0x03250FB8 B 0x325101C
	0x03250FBC B 0x325101C
	0x03250FC0 B 0x325101C
	0x03250FC4 B 0x32510C0
	0x03250FC8 B 0x32510C0
	0x03250FCC B 0x32510C0
	0x03250FD0 B 0x325101C
	0x03250FD4 B 0x32510C0
	0x03250FD8 B 0x325101C
	0x03250FDC B 0x325101C
	0x03250FE0 B 0x325101C
	0x03250FE4 B 0x32510C0
	0x03250FE8 B 0x32510C0
	0x03250FEC B 0x325101C
	0x03250FF0 B 0x32510C0
	0x03250FF4 B 0x325101C
	0x03250FF8 B 0x32510C0
	0x03250FFC B 0x325101C
	0x03251000 B 0x325101C
	0x03251004 B 0x325101C
	0x03251008 MOV X20, X1
	0x0325100C MOV X19, X0
	0x03251010 MOV X1, X20
	0x03251014 B 0x3251020
	0x03251018 B 0x325101C
	0x0325101C MOV X19, X0
	0x03251020 CMP W1, 0x1
	0x03251024 B.NE 0x32510B8
	0x03251028 MOV X0, X19
	0x0325102C BL 0x3EB1AD0
	0x03251030 MOV X19, X0
	0x03251034 ADRP X0, 0xEA2000
	0x03251038 LDR X0, [X0 + 0x7D0]
	0x0325103C BL 0x1C16D08
	0x03251040 LDR X8, [X19]
	0x03251044 LDR X1, [X8]
	0x03251048 BL 0x1C17270
	0x0325104C TBZ X0, 0x0, 0x3251090
	0x03251050 LDR X19, [X19]
	0x03251054 BL 0x3EB1AE0
	0x03251058 LDR X20, [X31 + 0x48]
	0x0325105C MOVN W8, 0x1
	0x03251060 ADRP X0, 0xEA5000
	0x03251064 STR W8, [X20], #0x8
	0x03251068 LDR X0, [X0 + 0x280]
	0x0325106C BL 0x1C16D08
	0x03251070 LDR W8, [X0 + 0xE0]
	0x03251074 CBNZ W8, 0x325107C
	0x03251078 BL 0x1C16DFC
	0x0325107C MOV X0, X20
	0x03251080 MOV X1, X19
	0x03251084 MOV X2, X31
	0x03251088 BL 0x32C4908
	0x0325108C B 0x3250560
	0x03251090 MOVZ W0, 0x8
	0x03251094 BL 0x3EB1AF0
	0x03251098 LDR X8, [X19]
	0x0325109C STR X8, [X0]
	0x032510A0 ADRP X1, 0xC63000
	0x032510A4 ADD X1, X1, 0xE58
	0x032510A8 MOV X2, X31
	0x032510AC BL 0x3EB1B00
	0x032510B0 MOV X19, X0
	0x032510B4 BL 0x3EB1AE0
	0x032510B8 MOV X0, X19
	0x032510BC BL 0x1D2C690
	0x032510C0 MOV X19, X0
	0x032510C4 CMP W1, 0x1
	0x032510C8 B.NE 0x32510E8
	0x032510CC MOV X0, X19
	0x032510D0 BL 0x3EB1AD0
	0x032510D4 LDR X8, [X0]
	0x032510D8 STR X8, [X31 + 0x8]
	0x032510DC BL 0x3EB1AE0
	0x032510E0 MOV W19, W31
	0x032510E4 B 0x3250C90
	0x032510E8 MOV X20, X1
	0x032510EC ADD X0, X31, 0x8
	0x032510F0 BL 0x1BB4A28
	0x032510F4 B 0x3251010
	0x032510F8 BL 0x1990590
	0x032510FC MOV X20, X1
	0x03251100 MOV X19, X0
	0x03251104 B 0x32510EC
	0x03251108 STR X30, [X31 - 0x30]!
	0x0325110C STP X22, X21, [X31 + 0x10]
	0x03251110 STP X20, X19, [X31 + 0x20]
	0x03251114 ADRP X21, 0x118B000
	0x03251118 ADRP X22, 0xEA5000
	0x0325111C LDRB W8, [X21 + 0x4B4]
	0x03251120 LDR X22, [X22 + 0x280]
	0x03251124 MOV X19, X1
	0x03251128 MOV X20, X0
	0x0325112C TBNZ X8, 0x0, 0x3251144
	0x03251130 ADRP X0, 0xEA5000
	0x03251134 LDR X0, [X0 + 0x280]
	0x03251138 BL 0x1C16CF4
	0x0325113C MOVZ W8, 0x1
	0x03251140 STRB W8, [X21 + 0x4B4]
	0x03251144 LDR X0, [X22]
	0x03251148 LDR W8, [X0 + 0xE0]
	0x0325114C CBNZ W8, 0x3251154
	0x03251150 BL 0x1C16DFC
	0x03251154 ADD X0, X20, 0x8
	0x03251158 MOV X1, X19
	0x0325115C LDP X20, X19, [X31 + 0x20]
	0x03251160 LDP X22, X21, [X31 + 0x10]
	0x03251164 MOV X2, X31
	0x03251168 LDR X30, [X31], #0x30
	0x0325116C B 0x32C477C
	0x03251170 STR X30, [X31 - 0x20]!
	0x03251174 STP X20, X19, [X31 + 0x10]
	0x03251178 ADRP X19, 0x118B000
	0x0325117C ADRP X20, 0xED1000
	0x03251180 LDRB W8, [X19 + 0x4B5]
	0x03251184 LDR X20, [X20 + 0xE00]
	0x03251188 TBNZ X8, 0x0, 0x32511A0
	0x0325118C ADRP X0, 0xED1000
	0x03251190 LDR X0, [X0 + 0xE00]
	0x03251194 BL 0x1C16CF4
	0x03251198 MOVZ W8, 0x1
	0x0325119C STRB W8, [X19 + 0x4B5]
	0x032511A0 LDR X0, [X20]
	0x032511A4 BL 0x1C16F10
	0x032511A8 MOV X1, X31
	0x032511AC MOV X19, X0
	0x032511B0 BL 0x33BDD8C
	0x032511B4 LDR X8, [X20]
	0x032511B8 LDR X8, [X8 + 0xB8]
	0x032511BC STR X19, [X8]
	0x032511C0 LDP X20, X19, [X31 + 0x10]
	0x032511C4 LDR X30, [X31], #0x20
	0x032511C8 RET
	0x032511CC MOV X1, X31
	0x032511D0 B 0x33BDD8C
	0x032511D4 STR X30, [X31 - 0x20]!
	0x032511D8 STP X20, X19, [X31 + 0x10]
	0x032511DC ADRP X19, 0x118B000
	0x032511E0 ADRP X20, 0xED1000
	0x032511E4 LDRB W8, [X19 + 0x4B6]
	0x032511E8 LDR X20, [X20 + 0xEB0]
	0x032511EC TBNZ X8, 0x0, 0x3251204
	0x032511F0 ADRP X0, 0xED1000
	0x032511F4 LDR X0, [X0 + 0xEB0]
	0x032511F8 BL 0x1C16CF4
	0x032511FC MOVZ W8, 0x1
	0x03251200 STRB W8, [X19 + 0x4B6]
	0x03251204 LDR X0, [X20]
	0x03251208 BL 0x1C16F10
	0x0325120C MOVZ W1, 0x1
	0x03251210 MOVZ W2, 0x1
	0x03251214 MOV X3, X31
	0x03251218 MOV X19, X0
	0x0325121C BL 0x33E1550
	0x03251220 MOV X0, X19
	0x03251224 LDP X20, X19, [X31 + 0x10]
	0x03251228 LDR X30, [X31], #0x20
	0x0325122C RET
	0x03251230 MOV X1, X31
	0x03251234 B 0x33BDD8C
	0x03251238 STR X30, [X31 - 0x20]!
	0x0325123C STP X20, X19, [X31 + 0x10]
	0x03251240 ADRP X20, 0x118B000
	0x03251244 LDRB W8, [X20 + 0x4B8]
	0x03251248 MOV X19, X0
	0x0325124C TBNZ X8, 0x0, 0x3251264
	0x03251250 ADRP X0, 0xED0000
	0x03251254 LDR X0, [X0 + 0x450]
	0x03251258 BL 0x1C16CF4
	0x0325125C MOVZ W8, 0x1
	0x03251260 STRB W8, [X20 + 0x4B8]
	0x03251264 MOV X0, X19
	0x03251268 MOV X1, X31
	0x0325126C BL 0x326ABDC
	0x03251270 CBZ X0, 0x32512A8
	0x03251274 ADRP X9, 0xED0000
	0x03251278 LDR X9, [X9 + 0x450]
	0x0325127C LDR X8, [X0]
	0x03251280 LDR X1, [X9]
	0x03251284 LDRB W10, [X8 + 0x130]
	0x03251288 LDRB W9, [X1 + 0x130]
	0x0325128C CMP W10, W9
	0x03251290 B.CC 0x32512B4
	0x03251294 LDR X8, [X8 + 0xC8]
	0x03251298 ADD X8, X8, X9, 0x3, LSL
	0x0325129C LDUR X8, [X8 - 0x8]
	0x032512A0 CMP X8, X1
	0x032512A4 B.NE 0x32512B4
	0x032512A8 LDP X20, X19, [X31 + 0x10]
	0x032512AC LDR X30, [X31], #0x20
	0x032512B0 RET
	0x032512B4 BL 0x1C171E0
	0x032512B8 LDR W0, [X0 + 0x14]
	0x032512BC RET
	0x032512C0 STR X30, [X31 - 0x20]!
	0x032512C4 STP X20, X19, [X31 + 0x10]
	0x032512C8 ADRP X20, 0x118B000
	0x032512CC LDRB W8, [X20 + 0x4B9]
	0x032512D0 MOV X19, X0
	0x032512D4 TBNZ X8, 0x0, 0x32512EC
	0x032512D8 ADRP X0, 0xEA2000
	0x032512DC LDR X0, [X0 + 0x618]
	0x032512E0 BL 0x1C16CF4
	0x032512E4 MOVZ W8, 0x1
	0x032512E8 STRB W8, [X20 + 0x4B9]
	0x032512EC LDRB W8, [X19 + 0x10]
	0x032512F0 CBNZ W8, 0x3251338
	0x032512F4 LDR W8, [X19 + 0x20]
	0x032512F8 CBNZ W8, 0x325135C
	0x032512FC LDR X0, [X19 + 0x18]
	0x03251300 CBZ X0, 0x325132C
	0x03251304 MOV X1, X31
	0x03251308 BL 0x33A01F0
	0x0325130C CBZ X0, 0x325132C
	0x03251310 ADRP X8, 0xEA2000
	0x03251314 LDR X8, [X8 + 0x618]
	0x03251318 MOV X19, X0
	0x0325131C LDR X20, [X8]
	0x03251320 MOV X1, X20
	0x03251324 BL 0x1C16E00
	0x03251328 CBZ X0, 0x32513A0
	0x0325132C LDP X20, X19, [X31 + 0x10]
	0x03251330 LDR X30, [X31], #0x20
	0x03251334 RET
	0x03251338 ADRP X0, 0xECB000
	0x0325133C LDR X0, [X0 + 0x4B8]
	0x03251340 BL 0x1C16D08
	0x03251344 BL 0x1C16F10
	0x03251348 MOV X1, X31
	0x0325134C MOV X2, X31
	0x03251350 MOV X19, X0
	0x03251354 BL 0x338C448
	0x03251358 B 0x3251388
	0x0325135C ADRP X0, 0xED1000
	0x03251360 LDR X0, [X0 + 0xEB8]
	0x03251364 BL 0x1C16D08
	0x03251368 BL 0x1C16F10
	0x0325136C MOV X19, X0
	0x03251370 ADRP X0, 0xED1000
	0x03251374 LDR X0, [X0 + 0xEC0]
	0x03251378 BL 0x1C16D08
	0x0325137C MOV X1, X0
	0x03251380 MOV X0, X19
	0x03251384 BL 0x32513AC
	0x03251388 ADRP X0, 0xED1000
	0x0325138C LDR X0, [X0 + 0xEC8]
	0x03251390 BL 0x1C16D08
	0x03251394 MOV X1, X0
	0x03251398 MOV X0, X19
	0x0325139C BL 0x1C16DEC
	0x032513A0 MOV X0, X19
	0x032513A4 MOV X1, X20
	0x032513A8 BL 0x1C171E0
	0x032513AC STR X30, [X31 - 0x20]!
	0x032513B0 STP X20, X19, [X31 + 0x10]
	0x032513B4 MOV X2, X31
	0x032513B8 MOV X19, X0
	0x032513BC BL 0x338C8D8
	0x032513C0 MOVZ W1, 0x1430
	0x032513C4 MOVK W1, 0x80130000
	0x032513C8 MOVZ W20, 0x1430
	0x032513CC MOV X0, X19
	0x032513D0 MOV X2, X31
	0x032513D4 MOVK W20, 0x80130000
	0x032513D8 BL 0x33B3318
	0x032513DC ORR W1, W20, 0x1
	0x032513E0 MOV X0, X19
	0x032513E4 LDP X20, X19, [X31 + 0x10]
	0x032513E8 MOV X2, X31
	0x032513EC LDR X30, [X31], #0x20
	0x032513F0 B 0x33B3318
	0x032513F4 STP X30, X19, [X31 - 0x10]!
	0x032513F8 LDRB W8, [X0 + 0x10]
	0x032513FC CBNZ W8, 0x325142C
	0x03251400 CBZ X1, 0x3251450
	0x03251404 LDR X8, [X0]
	0x03251408 LDR W3, [X1 + 0x18]
	0x0325140C MOV W2, W31
	0x03251410 MOV X19, X0
	0x03251414 LDR X9, [X8 + 0x238]
	0x03251418 LDR X4, [X8 + 0x240]
	0x0325141C BLR X9
	0x03251420 MOV X0, X19
	0x03251424 LDP X30, X19, [X31], #0x10
	0x03251428 B 0x3251498
	0x0325142C ADRP X0, 0xECB000
	0x03251430 LDR X0, [X0 + 0x4B8]
	0x03251434 BL 0x1C16D08
	0x03251438 BL 0x1C16F10
	0x0325143C MOV X1, X31
	0x03251440 MOV X2, X31
	0x03251444 MOV X19, X0
	0x03251448 BL 0x338C448
	0x0325144C B 0x3251480
	0x03251450 ADRP X0, 0xEA7000
	0x03251454 LDR X0, [X0 + 0x528]
	0x03251458 BL 0x1C16D08
	0x0325145C BL 0x1C16F10
	0x03251460 MOV X19, X0
	0x03251464 ADRP X0, 0xECD000
	0x03251468 LDR X0, [X0 + 0xF48]
	0x0325146C BL 0x1C16D08
	0x03251470 MOV X1, X0
	0x03251474 MOV X0, X19
	0x03251478 MOV X2, X31
	0x0325147C BL 0x330E100
	0x03251480 ADRP X0, 0xED1000
	0x03251484 LDR X0, [X0 + 0xED0]
	0x03251488 BL 0x1C16D08
	0x0325148C MOV X1, X0
	0x03251490 MOV X0, X19
	0x03251494 BL 0x1C16DEC
	0x03251498 STR X30, [X31 - 0x20]!
	0x0325149C STP X20, X19, [X31 + 0x10]
	0x032514A0 ADRP X20, 0x118B000
	0x032514A4 LDRB W8, [X20 + 0x4BB]
	0x032514A8 MOV X19, X0
	0x032514AC TBNZ X8, 0x0, 0x32514C4
	0x032514B0 ADRP X0, 0xEA2000
	0x032514B4 LDR X0, [X0 + 0x618]
	0x032514B8 BL 0x1C16CF4
	0x032514BC MOVZ W8, 0x1
	0x032514C0 STRB W8, [X20 + 0x4BB]
	0x032514C4 LDR X8, [X19]
	0x032514C8 MOV X0, X19
	0x032514CC LDR X9, [X8 + 0x248]
	0x032514D0 LDR X1, [X8 + 0x250]
	0x032514D4 BLR X9
	0x032514D8 STR X0, [X19 + 0x18]
	0x032514DC CBZ X0, 0x325153C
	0x032514E0 MOV X1, X31
	0x032514E4 BL 0x33A01F0
	0x032514E8 LDR X8, [X19]
	0x032514EC MOV X20, X0
	0x032514F0 MOV X0, X19
	0x032514F4 LDR X9, [X8 + 0x258]
	0x032514F8 LDR X1, [X8 + 0x260]
	0x032514FC BLR X9
	0x03251500 CBZ X20, 0x325152C
	0x03251504 ADRP X8, 0xEA2000
	0x03251508 LDR X8, [X8 + 0x618]
	0x0325150C MOV X0, X20
	0x03251510 LDR X19, [X8]
	0x03251514 MOV X1, X19
	0x03251518 BL 0x1C16E00
	0x0325151C CBNZ X0, 0x3251530
	0x03251520 MOV X0, X20
	0x03251524 MOV X1, X19
	0x03251528 BL 0x1C171E0
	0x0325152C MOV X0, X31
	0x03251530 LDP X20, X19, [X31 + 0x10]
	0x03251534 LDR X30, [X31], #0x20
	0x03251538 RET
	0x0325153C BL 0x1C16F20
	0x03251540 STR X30, [X31 - 0x20]!
	0x03251544 STP X20, X19, [X31 + 0x10]
	0x03251548 CBZ X1, 0x32515B8
	0x0325154C TBNZ X2, 0x1F, 0x32515EC
	0x03251550 TBNZ X3, 0x1F, 0x3251598
	0x03251554 LDR W8, [X1 + 0x18]
	0x03251558 SUBS W8, W8, W3
	0x0325155C B.LT 0x3251598
	0x03251560 CMP W8, W2
	0x03251564 B.LT 0x3251634
	0x03251568 LDRB W8, [X0 + 0x10]
	0x0325156C MOV X19, X0
	0x03251570 CBNZ W8, 0x3251668
	0x03251574 LDR X8, [X19]
	0x03251578 MOV X0, X19
	0x0325157C LDR X9, [X8 + 0x238]
	0x03251580 LDR X4, [X8 + 0x240]
	0x03251584 BLR X9
	0x03251588 MOV X0, X19
	0x0325158C LDP X20, X19, [X31 + 0x10]
	0x03251590 LDR X30, [X31], #0x20
	0x03251594 B 0x3251498
	0x03251598 ADRP X0, 0xEAA000
	0x0325159C LDR X0, [X0 + 0x578]
	0x032515A0 BL 0x1C16D08
	0x032515A4 BL 0x1C16F10
	0x032515A8 MOV X19, X0
	0x032515AC ADRP X0, 0xED1000
	0x032515B0 LDR X0, [X0 + 0xD18]
	0x032515B4 B 0x3251650
	0x032515B8 ADRP X0, 0xEA7000
	0x032515BC LDR X0, [X0 + 0x528]
	0x032515C0 BL 0x1C16D08
	0x032515C4 BL 0x1C16F10
	0x032515C8 MOV X19, X0
	0x032515CC ADRP X0, 0xECD000
	0x032515D0 LDR X0, [X0 + 0xF48]
	0x032515D4 BL 0x1C16D08
	0x032515D8 MOV X1, X0
	0x032515DC MOV X0, X19
	0x032515E0 MOV X2, X31
	0x032515E4 BL 0x330E100
	0x032515E8 B 0x3251688
	0x032515EC ADRP X0, 0xEAA000
	0x032515F0 LDR X0, [X0 + 0x760]
	0x032515F4 BL 0x1C16D08
	0x032515F8 BL 0x1C16F10
	0x032515FC MOV X19, X0
	0x03251600 ADRP X0, 0xED1000
	0x03251604 LDR X0, [X0 + 0xD90]
	0x03251608 BL 0x1C16D08
	0x0325160C MOV X20, X0
	0x03251610 ADRP X0, 0xECA000
	0x03251614 LDR X0, [X0 + 0x670]
	0x03251618 BL 0x1C16D08
	0x0325161C MOV X2, X0
	0x03251620 MOV X0, X19
	0x03251624 MOV X1, X20
	0x03251628 MOV X3, X31
	0x0325162C BL 0x3311888
	0x03251630 B 0x3251688
	0x03251634 ADRP X0, 0xEAA000
	0x03251638 LDR X0, [X0 + 0x578]
	0x0325163C BL 0x1C16D08
	0x03251640 BL 0x1C16F10
	0x03251644 MOV X19, X0
	0x03251648 ADRP X0, 0xECA000
	0x0325164C LDR X0, [X0 + 0x760]
	0x03251650 BL 0x1C16D08
	0x03251654 MOV X1, X0
	0x03251658 MOV X0, X19
	0x0325165C MOV X2, X31
	0x03251660 BL 0x3314A68
	0x03251664 B 0x3251688
	0x03251668 ADRP X0, 0xECB000
	0x0325166C LDR X0, [X0 + 0x4B8]
	0x03251670 BL 0x1C16D08
	0x03251674 BL 0x1C16F10
	0x03251678 MOV X1, X31
	0x0325167C MOV X2, X31
	0x03251680 MOV X19, X0
	0x03251684 BL 0x338C448
	0x03251688 ADRP X0, 0xED1000
	0x0325168C LDR X0, [X0 + 0xED8]
	0x03251690 BL 0x1C16D08
	0x03251694 MOV X1, X0
	0x03251698 MOV X0, X19
	0x0325169C BL 0x1C16DEC
	0x032516A0 SUB X31, X31, 0x40
	0x032516A4 STP X30, X21, [X31 + 0x20]
	0x032516A8 STP X20, X19, [X31 + 0x30]
	0x032516AC ADRP X21, 0x118B000
	0x032516B0 LDRB W8, [X21 + 0x4BA]
	0x032516B4 MOV X19, X1
	0x032516B8 MOV X20, X0
	0x032516BC TBNZ X8, 0x0, 0x32516EC
	0x032516C0 ADRP X0, 0xECD000
	0x032516C4 LDR X0, [X0 + 0xD50]
	0x032516C8 BL 0x1C16CF4
	0x032516CC ADRP X0, 0xECD000
	0x032516D0 LDR X0, [X0 + 0xD68]
	0x032516D4 BL 0x1C16CF4
	0x032516D8 ADRP X0, 0xED1000
	0x032516DC LDR X0, [X0 + 0x2F8]
	0x032516E0 BL 0x1C16CF4
	0x032516E4 MOVZ W8, 0x1
	0x032516E8 STRB W8, [X21 + 0x4BA]
	0x032516EC STR X31, [X31 + 0x18]
	0x032516F0 LDRB W8, [X20 + 0x10]
	0x032516F4 CBNZ W8, 0x3251820
	0x032516F8 ADRP X8, 0xECD000
	0x032516FC LDR X8, [X8 + 0xD68]
	0x03251700 ADRP X21, 0xECD000
	0x03251704 LDR X0, [X8]
	0x03251708 LDR W8, [X0 + 0xE0]
	0x0325170C LDR X21, [X21 + 0xD50]
	0x03251710 CBNZ W8, 0x3251718
	0x03251714 BL 0x1C16DFC
	0x03251718 LDR X21, [X21]
	0x0325171C LDR X0, [X21 + 0x20]
	0x03251720 LDRB W8, [X0 + 0x135]
	0x03251724 TBNZ X8, 0x0, 0x325172C
	0x03251728 BL 0x1C5C684
	0x0325172C LDR X8, [X0 + 0xC0]
	0x03251730 LDR X0, [X8 + 0x8]
	0x03251734 LDRB W8, [X0 + 0x135]
	0x03251738 TBNZ X8, 0x0, 0x3251740
	0x0325173C BL 0x1C5C684
	0x03251740 LDR W8, [X0 + 0xE0]
	0x03251744 CBNZ W8, 0x325174C
	0x03251748 BL 0x1C16DFC
	0x0325174C LDR X0, [X21 + 0x20]
	0x03251750 LDRB W8, [X0 + 0x135]
	0x03251754 TBNZ X8, 0x0, 0x325175C
	0x03251758 BL 0x1C5C684
	0x0325175C LDR X8, [X0 + 0xC0]
	0x03251760 LDR X0, [X8 + 0x8]
	0x03251764 LDRB W8, [X0 + 0x135]
	0x03251768 TBNZ X8, 0x0, 0x3251770
	0x0325176C BL 0x1C5C684
	0x03251770 LDR X8, [X0 + 0xB8]
	0x03251774 LDR X0, [X8]
	0x03251778 CBZ X0, 0x3251858
	0x0325177C LDR X8, [X0]
	0x03251780 MOVZ W1, 0x1000
	0x03251784 LDP X9, X2, [X8 + 0x178]
	0x03251788 BLR X9
	0x0325178C ADD X8, X31, 0x18
	0x03251790 STR X31, [X31 + 0x8]
	0x03251794 STP X8, X0, [X31 + 0x10]
	0x03251798 CBZ X0, 0x32517F0
	0x0325179C MOV X1, X0
	0x032517A0 CBZ X19, 0x325181C
	0x032517A4 LDR X8, [X19]
	0x032517A8 LDR W3, [X1 + 0x18]
	0x032517AC LDR X9, [X8 + 0x358]
	0x032517B0 LDR X4, [X8 + 0x360]
	0x032517B4 MOV X0, X19
	0x032517B8 MOV W2, W31
	0x032517BC BLR X9
	0x032517C0 MOV W3, W0
	0x032517C4 CMP W0, 0x0
	0x032517C8 B.LE 0x32517F4
	0x032517CC LDR X8, [X20]
	0x032517D0 LDR X1, [X31 + 0x18]
	0x032517D4 LDR X9, [X8 + 0x238]
	0x032517D8 LDR X4, [X8 + 0x240]
	0x032517DC MOV X0, X20
	0x032517E0 MOV W2, W31
	0x032517E4 BLR X9
	0x032517E8 LDR X1, [X31 + 0x18]
	0x032517EC CBNZ X1, 0x32517A0
	0x032517F0 BL 0x1C16F20
	0x032517F4 MOV X0, X20
	0x032517F8 BL 0x3251498
	0x032517FC MOV X19, X0
	0x03251800 ADD X0, X31, 0x8
	0x03251804 BL 0x1BB4B7C
	0x03251808 MOV X0, X19
	0x0325180C LDP X20, X19, [X31 + 0x30]
	0x03251810 LDP X30, X21, [X31 + 0x20]
	0x03251814 ADD X31, X31, 0x40
	0x03251818 RET
	0x0325181C BL 0x1C16F20
	0x03251820 ADRP X0, 0xECB000
	0x03251824 LDR X0, [X0 + 0x4B8]
	0x03251828 BL 0x1C16D08
	0x0325182C BL 0x1C16F10
	0x03251830 MOV X1, X31
	0x03251834 MOV X2, X31
	0x03251838 MOV X19, X0
	0x0325183C BL 0x338C448
	0x03251840 ADRP X0, 0xED1000
	0x03251844 LDR X0, [X0 + 0xEE0]
	0x03251848 BL 0x1C16D08
	0x0325184C MOV X1, X0
	0x03251850 MOV X0, X19
	0x03251854 BL 0x1C16DEC
	0x03251858 BL 0x1C16F20
	0x0325185C B 0x3251868
	0x03251860 B 0x3251868
	0x03251864 B 0x3251868
	0x03251868 MOV X19, X0
	0x0325186C CMP W1, 0x1
	0x03251870 B.NE 0x3251894
	0x03251874 MOV X0, X19
	0x03251878 BL 0x3EB1AD0
	0x0325187C LDR X8, [X0]
	0x03251880 STR X8, [X31 + 0x8]
	0x03251884 BL 0x3EB1AE0
	0x03251888 MOV X19, X31
	0x0325188C B 0x3251800
	0x03251890 MOV X19, X0
	0x03251894 ADD X0, X31, 0x8
	0x03251898 BL 0x1BB4B7C
	0x0325189C MOV X0, X19
	0x032518A0 BL 0x1D2C690
	0x032518A4 BL 0x1990590
	0x032518A8 STP X30, X21, [X31 - 0x20]!
	0x032518AC STP X20, X19, [X31 + 0x10]
	0x032518B0 ADRP X21, 0x118B000
	0x032518B4 ADRP X20, 0xEA9000
	0x032518B8 LDRB W8, [X21 + 0x4BC]
	0x032518BC LDR X20, [X20 + 0xC10]
	0x032518C0 MOV X19, X0
	0x032518C4 TBNZ X8, 0x0, 0x32518DC
	0x032518C8 ADRP X0, 0xEA9000
	0x032518CC LDR X0, [X0 + 0xC10]
	0x032518D0 BL 0x1C16CF4
	0x032518D4 MOVZ W8, 0x1
	0x032518D8 STRB W8, [X21 + 0x4BC]
	0x032518DC LDR X8, [X19]
	0x032518E0 MOVZ W1, 0x1
	0x032518E4 MOV X0, X19
	0x032518E8 LDP X9, X2, [X8 + 0x1F8]
	0x032518EC BLR X9
	0x032518F0 LDR X0, [X20]
	0x032518F4 LDR W8, [X0 + 0xE0]
	0x032518F8 CBNZ W8, 0x3251900
	0x032518FC BL 0x1C16DFC
	0x03251900 MOV X0, X19
	0x03251904 LDP X20, X19, [X31 + 0x10]
	0x03251908 MOV X1, X31
	0x0325190C LDP X30, X21, [X31], #0x20
	0x03251910 B 0x33B3E9C
	0x03251914 STP X30, X21, [X31 - 0x20]!
	0x03251918 STP X20, X19, [X31 + 0x10]
	0x0325191C ADRP X21, 0x118B000
	0x03251920 ADRP X20, 0xEA2000
	0x03251924 LDRB W8, [X21 + 0x4BD]
	0x03251928 LDR X20, [X20 + 0xE00]
	0x0325192C MOV X19, X0
	0x03251930 TBNZ X8, 0x0, 0x3251948
	0x03251934 ADRP X0, 0xEA2000
	0x03251938 LDR X0, [X0 + 0xE00]
	0x0325193C BL 0x1C16CF4
	0x03251940 MOVZ W8, 0x1
	0x03251944 STRB W8, [X21 + 0x4BD]
	0x03251948 LDR X8, [X19]
	0x0325194C LDR X1, [X20]
	0x03251950 LDRH W9, [X8 + 0x12E]
	0x03251954 CBZ X9, 0x3251978
	0x03251958 LDR X10, [X8 + 0xB0]
	0x0325195C ADD X10, X10, 0x8
	0x03251960 LDUR X11, [X10 - 0x8]
	0x03251964 CMP X11, X1
	0x03251968 B.EQ 0x3251988
	0x0325196C SUBS X9, X9, 0x1
	0x03251970 ADD X10, X10, 0x10
	0x03251974 B.NE 0x3251960
	0x03251978 MOV X0, X19
	0x0325197C MOV W2, W31
	0x03251980 BL 0x1C5C788
	0x03251984 B 0x3251994
	0x03251988 LDRSW X9, [X10]
	0x0325198C ADD X8, X8, X9, 0x4, LSL
	0x03251990 ADD X0, X8, 0x138
	0x03251994 LDP X2, X1, [X0]
	0x03251998 MOV X0, X19
	0x0325199C LDP X20, X19, [X31 + 0x10]
	0x032519A0 LDP X30, X21, [X31], #0x20
	0x032519A4 BR X2
	0x032519A8 TBZ X1, 0x0, 0x32519B4
	0x032519AC MOVZ W8, 0x1
	0x032519B0 STRB W8, [X0 + 0x10]
	0x032519B4 RET
	0x032519B8 MOVZ W0, 0x1
	0x032519BC RET
	0x032519C0 MOVZ W0, 0x1
	0x032519C4 RET
	0x032519C8 MOVZ W0, 0x1
	0x032519CC RET
	0x032519D0 STR X30, [X31 - 0x40]!
	0x032519D4 STP X24, X23, [X31 + 0x10]
	0x032519D8 STP X22, X21, [X31 + 0x20]
	0x032519DC STP X20, X19, [X31 + 0x30]
	0x032519E0 MOV W20, W5
	0x032519E4 MOV X21, X4
	0x032519E8 MOV W19, W3
	0x032519EC MOV W22, W2
	0x032519F0 MOV X23, X1
	0x032519F4 MOV X24, X0
	0x032519F8 BL 0x3251A6C
	0x032519FC LDR X8, [X24]
	0x03251A00 MOVZ W9, 0x1
	0x03251A04 STR W9, [X24 + 0x20]
	0x03251A08 MOV X0, X24
	0x03251A0C LDR X9, [X8 + 0x238]
	0x03251A10 LDR X4, [X8 + 0x240]
	0x03251A14 MOV X1, X23
	0x03251A18 MOV W2, W22
	0x03251A1C MOV W3, W19
	0x03251A20 BLR X9
	0x03251A24 CBZ X21, 0x3251A54
	0x03251A28 CMP X23, X21
	0x03251A2C B.NE 0x3251A38
	0x03251A30 CMP W22, W20
	0x03251A34 B.EQ 0x3251A54
	0x03251A38 MOV X0, X23
	0x03251A3C MOV W1, W22
	0x03251A40 MOV X2, X21
	0x03251A44 MOV W3, W20
	0x03251A48 MOV W4, W19
	0x03251A4C MOV X5, X31
	0x03251A50 BL 0x33A8A9C
	0x03251A54 MOV W0, W19
	0x03251A58 LDP X20, X19, [X31 + 0x30]
	0x03251A5C LDP X22, X21, [X31 + 0x20]
	0x03251A60 LDP X24, X23, [X31 + 0x10]
	0x03251A64 LDR X30, [X31], #0x40
	0x03251A68 RET
	0x03251A6C STR X30, [X31 - 0x20]!
	0x03251A70 STP X20, X19, [X31 + 0x10]
	0x03251A74 CBZ X1, 0x3251AC8
	0x03251A78 TBNZ X2, 0x1F, 0x3251AFC
	0x03251A7C TBNZ X3, 0x1F, 0x3251AA8
	0x03251A80 LDR W8, [X1 + 0x18]
	0x03251A84 SUBS W8, W8, W3
	0x03251A88 B.LT 0x3251AA8
	0x03251A8C CMP W8, W2
	0x03251A90 B.LT 0x3251B44
	0x03251A94 LDRB W8, [X0 + 0x10]
	0x03251A98 CBNZ W8, 0x3251B78
	0x03251A9C LDP X20, X19, [X31 + 0x10]
	0x03251AA0 LDR X30, [X31], #0x20
	0x03251AA4 RET
	0x03251AA8 ADRP X0, 0xEAA000
	0x03251AAC LDR X0, [X0 + 0x578]
	0x03251AB0 BL 0x1C16D08
	0x03251AB4 BL 0x1C16F10
	0x03251AB8 MOV X19, X0
	0x03251ABC ADRP X0, 0xED1000
	0x03251AC0 LDR X0, [X0 + 0xD18]
	0x03251AC4 B 0x3251B60
	0x03251AC8 ADRP X0, 0xEA7000
	0x03251ACC LDR X0, [X0 + 0x528]
	0x03251AD0 BL 0x1C16D08
	0x03251AD4 BL 0x1C16F10
	0x03251AD8 MOV X19, X0
	0x03251ADC ADRP X0, 0xED0000
	0x03251AE0 LDR X0, [X0 + 0xE30]
	0x03251AE4 BL 0x1C16D08
	0x03251AE8 MOV X1, X0
	0x03251AEC MOV X0, X19
	0x03251AF0 MOV X2, X31
	0x03251AF4 BL 0x330E100
	0x03251AF8 B 0x3251B98
	0x03251AFC ADRP X0, 0xEAA000
	0x03251B00 LDR X0, [X0 + 0x760]
	0x03251B04 BL 0x1C16D08
	0x03251B08 BL 0x1C16F10
	0x03251B0C MOV X19, X0
	0x03251B10 ADRP X0, 0xED0000
	0x03251B14 LDR X0, [X0 + 0xE38]
	0x03251B18 BL 0x1C16D08
	0x03251B1C MOV X20, X0
	0x03251B20 ADRP X0, 0xECA000
	0x03251B24 LDR X0, [X0 + 0x670]
	0x03251B28 BL 0x1C16D08
	0x03251B2C MOV X2, X0
	0x03251B30 MOV X0, X19
	0x03251B34 MOV X1, X20
	0x03251B38 MOV X3, X31
	0x03251B3C BL 0x3311888
	0x03251B40 B 0x3251B98
	0x03251B44 ADRP X0, 0xEAA000
	0x03251B48 LDR X0, [X0 + 0x578]
	0x03251B4C BL 0x1C16D08
	0x03251B50 BL 0x1C16F10
	0x03251B54 MOV X19, X0
	0x03251B58 ADRP X0, 0xECA000
	0x03251B5C LDR X0, [X0 + 0x760]
	0x03251B60 BL 0x1C16D08
	0x03251B64 MOV X1, X0
	0x03251B68 MOV X0, X19
	0x03251B6C MOV X2, X31
	0x03251B70 BL 0x3314A68
	0x03251B74 B 0x3251B98
	0x03251B78 ADRP X0, 0xECB000
	0x03251B7C LDR X0, [X0 + 0x4B8]
	0x03251B80 BL 0x1C16D08
	0x03251B84 BL 0x1C16F10
	0x03251B88 MOV X1, X31
	0x03251B8C MOV X2, X31
	0x03251B90 MOV X19, X0
	0x03251B94 BL 0x338C448
	0x03251B98 ADRP X0, 0xED1000
	0x03251B9C LDR X0, [X0 + 0xEE8]
	0x03251BA0 BL 0x1C16D08
	0x03251BA4 MOV X1, X0
	0x03251BA8 MOV X0, X19
	0x03251BAC BL 0x1C16DEC
	0x03251BB0 STP X30, X23, [X31 - 0x30]!
	0x03251BB4 STP X22, X21, [X31 + 0x10]
	0x03251BB8 STP X20, X19, [X31 + 0x20]
	0x03251BBC ADRP X23, 0x118B000
	0x03251BC0 LDRB W8, [X23 + 0x4BE]
	0x03251BC4 MOV W20, W3
	0x03251BC8 MOV W21, W2
	0x03251BCC MOV X22, X1
	0x03251BD0 MOV X19, X0
	0x03251BD4 TBNZ X8, 0x0, 0x3251BF8
	0x03251BD8 ADRP X0, 0xEAA000
	0x03251BDC LDR X0, [X0 + 0xCC8]
	0x03251BE0 BL 0x1C16CF4
	0x03251BE4 ADRP X0, 0xEA2000
	0x03251BE8 LDR X0, [X0 + 0x618]
	0x03251BEC BL 0x1C16CF4
	0x03251BF0 MOVZ W8, 0x1
	0x03251BF4 STRB W8, [X23 + 0x4BE]
	0x03251BF8 MOV X0, X19
	0x03251BFC MOV X1, X22
	0x03251C00 MOV W2, W21
	0x03251C04 MOV W3, W20
	0x03251C08 BL 0x3251A6C
	0x03251C0C LDR X8, [X19]
	0x03251C10 MOV X0, X19
	0x03251C14 MOV X1, X22
	0x03251C18 MOV W2, W21
	0x03251C1C LDR X9, [X8 + 0x238]
	0x03251C20 LDR X4, [X8 + 0x240]
	0x03251C24 MOV W3, W20
	0x03251C28 BLR X9
	0x03251C2C MOV X0, X19
	0x03251C30 BL 0x3251498
	0x03251C34 STR X0, [X19 + 0x18]
	0x03251C38 CBZ W20, 0x3251C74
	0x03251C3C ADRP X8, 0xEA2000
	0x03251C40 LDR X8, [X8 + 0x618]
	0x03251C44 MOV W1, W20
	0x03251C48 LDR X0, [X8]
	0x03251C4C BL 0x1C16D6C
	0x03251C50 MOV X23, X0
	0x03251C54 MOV X0, X22
	0x03251C58 MOV W1, W21
	0x03251C5C MOV X2, X23
	0x03251C60 MOV W3, W31
	0x03251C64 MOV W4, W20
	0x03251C68 MOV X5, X31
	0x03251C6C BL 0x33A8A9C
	0x03251C70 B 0x3251CCC
	0x03251C74 ADRP X8, 0xEAA000
	0x03251C78 LDR X8, [X8 + 0xCC8]
	0x03251C7C LDR X20, [X8]
	0x03251C80 LDR X8, [X20 + 0x38]
	0x03251C84 CBNZ X8, 0x3251C94
	0x03251C88 MOV X0, X20
	0x03251C8C BL 0x1C5C6E0
	0x03251C90 LDR X8, [X20 + 0x38]
	0x03251C94 LDR X0, [X8 + 0x10]
	0x03251C98 LDRB W8, [X0 + 0x135]
	0x03251C9C TBNZ X8, 0x0, 0x3251CA4
	0x03251CA0 BL 0x1C5C684
	0x03251CA4 LDR W8, [X0 + 0xE0]
	0x03251CA8 CBNZ W8, 0x3251CB0
	0x03251CAC BL 0x1C16DFC
	0x03251CB0 LDR X8, [X20 + 0x38]
	0x03251CB4 LDR X0, [X8 + 0x10]
	0x03251CB8 LDRB W8, [X0 + 0x135]
	0x03251CBC TBNZ X8, 0x0, 0x3251CC4
	0x03251CC0 BL 0x1C5C684
	0x03251CC4 LDR X8, [X0 + 0xB8]
	0x03251CC8 LDR X23, [X8]
	0x03251CCC STR W31, [X19 + 0x20]
	0x03251CD0 LDP X20, X19, [X31 + 0x20]
	0x03251CD4 LDP X22, X21, [X31 + 0x10]
	0x03251CD8 MOV X0, X23
	0x03251CDC LDP X30, X23, [X31], #0x30
	0x03251CE0 RET
	0x03251CE4 STP X30, X21, [X31 - 0x20]!
	0x03251CE8 STP X20, X19, [X31 + 0x10]
	0x03251CEC ADRP X21, 0x118B000
	0x03251CF0 ADRP X20, 0xEAF000
	0x03251CF4 LDRB W8, [X21 + 0x4BF]
	0x03251CF8 LDR X20, [X20 + 0xDF0]
	0x03251CFC MOV X19, X0
	0x03251D00 TBNZ X8, 0x0, 0x3251D18
	0x03251D04 ADRP X0, 0xEAF000
	0x03251D08 LDR X0, [X0 + 0xDF0]
	0x03251D0C BL 0x1C16CF4
	0x03251D10 MOVZ W8, 0x1
	0x03251D14 STRB W8, [X21 + 0x4BF]
	0x03251D18 MOV X0, X19
	0x03251D1C MOV X1, X31
	0x03251D20 BL 0x32607B0
	0x03251D24 LDR X0, [X20]
	0x03251D28 LDR W8, [X0 + 0xE0]
	0x03251D2C CBNZ W8, 0x3251D38
	0x03251D30 BL 0x1C16DFC
	0x03251D34 LDR X0, [X20]
	0x03251D38 LDR X8, [X0 + 0xB8]
	0x03251D3C ADRP X9, 0xFFFFFFFFFD89C000
	0x03251D40 ADRP X10, 0xFFFFFFFFFD89D000
	0x03251D44 LDR V0, [X9 + 0xAB0]
	0x03251D48 LDR V1, [X8]
	0x03251D4C LDR V2, [X10 + 0x480]
	0x03251D50 STR D0, [X19 + 0x10]
	0x03251D54 STUR V1, [X19 + 0x28]
	0x03251D58 STR D2, [X19 + 0x38]
	0x03251D5C LDP X20, X19, [X31 + 0x10]
	0x03251D60 LDP X30, X21, [X31], #0x20
	0x03251D64 RET
	0x03251D68 STR X30, [X31 - 0x20]!
	0x03251D6C STP X20, X19, [X31 + 0x10]
	0x03251D70 ADRP X20, 0x118B000
	0x03251D74 ADRP X19, 0xEAF000
	0x03251D78 LDRB W8, [X20 + 0x4C0]
	0x03251D7C LDR X19, [X19 + 0xDF0]
	0x03251D80 TBNZ X8, 0x0, 0x3251DA4
	0x03251D84 ADRP X0, 0xEAF000
	0x03251D88 LDR X0, [X0 + 0xDF0]
	0x03251D8C BL 0x1C16CF4
	0x03251D90 ADRP X0, 0xED1000
	0x03251D94 LDR X0, [X0 + 0xEF0]
	0x03251D98 BL 0x1C16CF4
	0x03251D9C MOVZ W8, 0x1
	0x03251DA0 STRB W8, [X20 + 0x4C0]
	0x03251DA4 LDR X0, [X19]
	0x03251DA8 ADRP X19, 0xED1000
	0x03251DAC LDR W8, [X0 + 0xE0]
	0x03251DB0 LDR X19, [X19 + 0xEF0]
	0x03251DB4 CBNZ W8, 0x3251DBC
	0x03251DB8 BL 0x1C16DFC
	0x03251DBC LDR X0, [X19]
	0x03251DC0 LDP X20, X19, [X31 + 0x10]
	0x03251DC4 LDR X30, [X31], #0x20
	0x03251DC8 B 0x3251DCC
	0x03251DCC STR X30, [X31 - 0x20]!
	0x03251DD0 STP X20, X19, [X31 + 0x10]
	0x03251DD4 ADRP X20, 0x118B000
	0x03251DD8 LDRB W8, [X20 + 0x4C1]
	0x03251DDC MOV X19, X0
	0x03251DE0 TBNZ X8, 0x0, 0x3251E04
	0x03251DE4 ADRP X0, 0xEAF000
	0x03251DE8 LDR X0, [X0 + 0xDF0]
	0x03251DEC BL 0x1C16CF4
	0x03251DF0 ADRP X0, 0xECF000
	0x03251DF4 LDR X0, [X0 + 0xBD8]
	0x03251DF8 BL 0x1C16CF4
	0x03251DFC MOVZ W8, 0x1
	0x03251E00 STRB W8, [X20 + 0x4C1]
	0x03251E04 CBZ X19, 0x3251E78
	0x03251E08 ADRP X8, 0xECF000
	0x03251E0C LDR X8, [X8 + 0xBD8]
	0x03251E10 LDR X0, [X8]
	0x03251E14 LDR W8, [X0 + 0xE0]
	0x03251E18 CBNZ W8, 0x3251E20
	0x03251E1C BL 0x1C16DFC
	0x03251E20 MOV X0, X19
	0x03251E24 MOV X1, X31
	0x03251E28 BL 0x3261120
	0x03251E2C CBZ X0, 0x3251E6C
	0x03251E30 ADRP X8, 0xEAF000
	0x03251E34 LDR X8, [X8 + 0xDF0]
	0x03251E38 LDR X9, [X0]
	0x03251E3C LDR X8, [X8]
	0x03251E40 LDRB W11, [X9 + 0x130]
	0x03251E44 LDRB W10, [X8 + 0x130]
	0x03251E48 CMP W11, W10
	0x03251E4C B.CS 0x3251E58
	0x03251E50 MOV X0, X31
	0x03251E54 B 0x3251E6C
	0x03251E58 LDR X9, [X9 + 0xC8]
	0x03251E5C ADD X9, X9, X10, 0x3, LSL
	0x03251E60 LDUR X9, [X9 - 0x8]
	0x03251E64 CMP X9, X8
	0x03251E68 CSEL X0, X0, X31, EQ
	0x03251E6C LDP X20, X19, [X31 + 0x10]
	0x03251E70 LDR X30, [X31], #0x20
	0x03251E74 RET
	0x03251E78 ADRP X0, 0xEA7000
	0x03251E7C LDR X0, [X0 + 0x528]
	0x03251E80 BL 0x1C16D08
	0x03251E84 BL 0x1C16F10
	0x03251E88 MOV X19, X0
	0x03251E8C ADRP X0, 0xED1000
	0x03251E90 LDR X0, [X0 + 0xEF8]
	0x03251E94 BL 0x1C16D08
	0x03251E98 MOV X1, X0
	0x03251E9C MOV X0, X19
	0x03251EA0 MOV X2, X31
	0x03251EA4 BL 0x330E100
	0x03251EA8 ADRP X0, 0xED1000
	0x03251EAC LDR X0, [X0 + 0xF00]
	0x03251EB0 BL 0x1C16D08
	0x03251EB4 MOV X1, X0
	0x03251EB8 MOV X0, X19
	0x03251EBC BL 0x1C16DEC
	0x03251EC0 STP X30, X23, [X31 - 0x30]!
	0x03251EC4 STP X22, X21, [X31 + 0x10]
	0x03251EC8 STP X20, X19, [X31 + 0x20]
	0x03251ECC ADRP X19, 0x118B000
	0x03251ED0 ADRP X22, 0xED0000
	0x03251ED4 ADRP X21, 0xED0000
	0x03251ED8 LDRB W8, [X19 + 0x4C2]
	0x03251EDC LDR X22, [X22 + 0x520]
	0x03251EE0 LDR X21, [X21 + 0x528]
	0x03251EE4 TBNZ X8, 0x0, 0x3251F14
	0x03251EE8 ADRP X0, 0xEAF000
	0x03251EEC LDR X0, [X0 + 0xDF0]
	0x03251EF0 BL 0x1C16CF4
	0x03251EF4 ADRP X0, 0xED0000
	0x03251EF8 LDR X0, [X0 + 0x520]
	0x03251EFC BL 0x1C16CF4
	0x03251F00 ADRP X0, 0xED0000
	0x03251F04 LDR X0, [X0 + 0x528]
	0x03251F08 BL 0x1C16CF4
	0x03251F0C MOVZ W8, 0x1
	0x03251F10 STRB W8, [X19 + 0x4C2]
	0x03251F14 LDR X0, [X22]
	0x03251F18 MOVZ W1, 0x1
	0x03251F1C BL 0x1C16D6C
	0x03251F20 LDR X8, [X21]
	0x03251F24 MOV X19, X0
	0x03251F28 MOV X0, X8
	0x03251F2C BL 0x1C16F10
	0x03251F30 MOV X1, X31
	0x03251F34 MOV X20, X0
	0x03251F38 BL 0x33BDD8C
	0x03251F3C MOVI V0.2S, 0x80
	0x03251F40 STR D0, [X20 + 0x10]
	0x03251F44 STR W31, [X20 + 0x18]
	0x03251F48 CBZ X19, 0x3251FD4
	0x03251F4C LDR W8, [X19 + 0x18]
	0x03251F50 CBZ W8, 0x3251FD8
	0x03251F54 ADRP X23, 0xEAF000
	0x03251F58 LDR X23, [X23 + 0xDF0]
	0x03251F5C STR X20, [X19 + 0x20]
	0x03251F60 MOVZ W1, 0x1
	0x03251F64 LDR X8, [X23]
	0x03251F68 LDR X8, [X8 + 0xB8]
	0x03251F6C STR X19, [X8]
	0x03251F70 LDR X0, [X22]
	0x03251F74 BL 0x1C16D6C
	0x03251F78 LDR X8, [X21]
	0x03251F7C MOV X19, X0
	0x03251F80 MOV X0, X8
	0x03251F84 BL 0x1C16F10
	0x03251F88 MOV X1, X31
	0x03251F8C MOV X20, X0
	0x03251F90 BL 0x33BDD8C
	0x03251F94 ADRP X8, 0xFFFFFFFFFD89C000
	0x03251F98 LDR V0, [X8 + 0x4E0]
	0x03251F9C MOVZ W8, 0x40
	0x03251FA0 STR W8, [X20 + 0x18]
	0x03251FA4 STR D0, [X20 + 0x10]
	0x03251FA8 CBZ X19, 0x3251FD4
	0x03251FAC LDR W8, [X19 + 0x18]
	0x03251FB0 CBZ W8, 0x3251FD8
	0x03251FB4 STR X20, [X19 + 0x20]
	0x03251FB8 LDR X8, [X23]
	0x03251FBC LDP X22, X21, [X31 + 0x10]
	0x03251FC0 LDR X8, [X8 + 0xB8]
	0x03251FC4 STR X19, [X8 + 0x8]
	0x03251FC8 LDP X20, X19, [X31 + 0x20]
	0x03251FCC LDP X30, X23, [X31], #0x30
	0x03251FD0 RET
	0x03251FD4 BL 0x1C16F20
	0x03251FD8 BL 0x1C16F28
	0x03251FDC STR X30, [X31 - 0x30]!
	0x03251FE0 STP X22, X21, [X31 + 0x10]
	0x03251FE4 STP X20, X19, [X31 + 0x20]
	0x03251FE8 MOV W21, W1
	0x03251FEC MOV X1, X31
	0x03251FF0 MOV W19, W3
	0x03251FF4 MOV W20, W2
	0x03251FF8 MOV X22, X0
	0x03251FFC BL 0x33BDD8C
	0x03252000 STP W21, W20, [X22 + 0x10]
	0x03252004 STR W19, [X22 + 0x18]
	0x03252008 LDP X20, X19, [X31 + 0x20]
	0x0325200C LDP X22, X21, [X31 + 0x10]
	0x03252010 LDR X30, [X31], #0x30
	0x03252014 RET
	0x03252018 MOV X1, X31
	0x0325201C B 0x33BDD8C
	0x03252020 B 0x3252024
	0x03252024 STP X30, X21, [X31 - 0x20]!
	0x03252028 STP X20, X19, [X31 + 0x10]
	0x0325202C ADRP X21, 0x118A000
	0x03252030 ADRP X20, 0xEA8000
	0x03252034 LDRB W8, [X21 + 0x4C3]
	0x03252038 LDR X20, [X20 + 0xC10]
	0x0325203C MOV X19, X0
	0x03252040 TBNZ X8, 0x0, 0x3252058
	0x03252044 ADRP X0, 0xEA8000
	0x03252048 LDR X0, [X0 + 0xC10]
	0x0325204C BL 0x1C16CF4
	0x03252050 MOVZ W8, 0x1
	0x03252054 STRB W8, [X21 + 0x4C3]
	0x03252058 LDR X8, [X19]
	0x0325205C MOVZ W1, 0x1
	0x03252060 MOV X0, X19
	0x03252064 LDP X9, X2, [X8 + 0x188]
	0x03252068 BLR X9
	0x0325206C LDR X0, [X20]
	0x03252070 LDR W8, [X0 + 0xE0]
	0x03252074 CBNZ W8, 0x325207C
	0x03252078 BL 0x1C16DFC
	0x0325207C MOV X0, X19
	0x03252080 LDP X20, X19, [X31 + 0x10]
	0x03252084 MOV X1, X31
	0x03252088 LDP X30, X21, [X31], #0x20
	0x0325208C B 0x33B3E9C
	0x03252090 RET
	0x03252094 LDR W0, [X0 + 0x10]
	0x03252098 RET
	0x0325209C STR X30, [X31 - 0x20]!
	0x032520A0 STP X20, X19, [X31 + 0x10]
	0x032520A4 LDR X8, [X0 + 0x18]
	0x032520A8 CBZ X8, 0x3252168
	0x032520AC LDR W9, [X8 + 0x18]
	0x032520B0 CMP W9, 0x1
	0x032520B4 B.LT 0x325210C
	0x032520B8 MOV W10, W31
	0x032520BC CMP W10, W9
	0x032520C0 B.CS 0x325216C
	0x032520C4 ADD X11, X8, W10, 0x3, SXTW
	0x032520C8 LDR X13, [X11 + 0x20]
	0x032520CC CBZ X13, 0x3252168
	0x032520D0 LDR W12, [X13 + 0x18]
	0x032520D4 LDR W11, [X13 + 0x10]
	0x032520D8 CBZ W12, 0x32520F8
	0x032520DC LDR W13, [X13 + 0x14]
	0x032520E0 CMP W11, W13
	0x032520E4 B.GT 0x3252100
	0x032520E8 CMP W1, W11
	0x032520EC B.EQ 0x3252158
	0x032520F0 ADD W11, W11, W12
	0x032520F4 B 0x32520E0
	0x032520F8 CMP W11, W1
	0x032520FC B.EQ 0x3252158
	0x03252100 ADD W10, W10, 0x1
	0x03252104 CMP W10, W9

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+80], X29
	003 Move [X31+88], X30
	004 Move [X31+96], X28
	005 Move [X31+104], X27
	006 Move [X31+112], X26
	007 Move [X31+120], X25
	008 Move [X31+128], X24
	009 Move [X31+136], X23
	010 Move [X31+144], X22
	011 Move [X31+152], X21
	012 Move [X31+160], X20
	013 Move [X31+168], X19
	014 Move X20, 0x118D000
	015 Move W8, [X20+1203]
	016 Move X19, X0
	017 Move [X31+72], X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {51}
	022 Move X0, 0xECF000
	023 Move X0, [X0+3408]
	024 Call 0x1C17CF4
	025 Move X0, 0xECF000
	026 Move X0, [X0+3432]
	027 Call 0x1C17CF4
	028 Move X0, 0xED3000
	029 Move X0, [X0+3736]
	030 Call 0x1C17CF4
	031 Move X0, 0xEA7000
	032 Move X0, [X0+640]
	033 Call 0x1C17CF4
	034 Move X0, 0xED1000
	035 Move X0, [X0+3744]
	036 Call 0x1C17CF4
	037 Move X0, 0xED3000
	038 Move X0, [X0+3744]
	039 Call 0x1C17CF4
	040 Move X0, 0xED3000
	041 Move X0, [X0+3680]
	042 Call 0x1C17CF4
	043 Move X0, 0xECC000
	044 Move X0, [X0+1656]
	045 Call 0x1C17CF4
	046 Move X0, 0xECE000
	047 Move X0, [X0+3648]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X20+1203], W8
	051 Move X27, 0xED1000
	052 Move X28, 0xECE000
	053 Move X29, 0xECC000
	054 Move X27, [X27+3744]
	055 Move X28, [X28+3648]
	056 Move X29, [X29+1656]
	057 Move [X31+48], X31
	058 Move [X31+56], X31
	059 Move [X31+32], X31
	060 Move [X31+40], X31
	061 Move W8, [X19]
	062 Move X24, 0x118D000
	063 Move X25, 0x118D000
	064 Move [X31+68], W8
	065 Move X26, [X19+40]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X9, -40603648
	068 Add X9, X9, 1202
	069 NotImplemented "Instruction ADR not yet implemented."
	070 NotImplemented "Instruction LDRH not yet implemented."
	071 Add X10, X10, X11
	072 CallNoReturn X10
	073 NotImplemented "Instruction LDUR not yet implemented."
	074 Move TEMP, 0
	075 Not TEMP
	076 Move W8, TEMP
	077 Move [X31+3], V0
	078 Move [X19+88], X31
	079 Move [X19+96], X31
	080 Move [X31+68], W8
	081 Move [X19], W8
	082 Move X0, [X29]
	083 Move W8, [X0+224]
	084 Compare W8, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1C17DFC
	087 Move W8, [X24+1253]
	088 Compare W8, 0
	089 JumpIfNotEqual {95}
	090 Move X0, 0xECE000
	091 Move X0, [X0+3648]
	092 Call 0x1C17CF4
	093 Move W8, 1
	094 Move [X24+1253], W8
	095 Move X0, [X28]
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {100}
	099 Call 0x1C17DFC
	100 Move W8, [X25+1254]
	101 Compare W8, 0
	102 JumpIfNotEqual {111}
	103 Move X0, 0xED3000
	104 Move X0, [X0+3752]
	105 Call 0x1C17CF4
	106 Move X0, 0xEA5000
	107 Move X0, [X0+1976]
	108 Call 0x1C17CF4
	109 Move W8, 1
	110 Move [X25+1254], W8
	111 Move X19, [X31+48]
	112 Compare X19, 0
	113 JumpIfEqual {288}
	114 Move X9, 0xEA5000
	115 Move X8, [X19]
	116 Move X9, [X9+1976]
	117 Move W11, [X8+304]
	118 Move X9, [X9]
	119 Move W10, [X9+304]
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move X11, [X8+200]
	122 Add X10, X11, X10
	123 NotImplemented "Instruction LDUR not yet implemented."
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move X10, 0xED3000
	126 NotImplemented "Instruction LDRH not yet implemented."
	127 NotImplemented "Instruction LDRH not yet implemented."
	128 Move X10, [X10+3752]
	129 Move X1, [X10]
	130 Compare X9, 0
	131 JumpIfEqual {138}
	132 Move X10, [X8+176]
	133 Add X10, X10, 8
	134 NotImplemented "Instruction LDUR not yet implemented."
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Subtract X9, X9, 1
	137 Add X10, X10, 16
	138 Move W2, 2
	139 Move X0, X19
	140 Call 0x1C5D788
	141 NotImplemented "Instruction LDUR not yet implemented."
	142 Move TEMP, 0
	143 Not TEMP
	144 Move W8, TEMP
	145 Move [X31+3], V0
	146 Move [X19+88], X31
	147 Move [X19+96], X31
	148 Move [X31+68], W8
	149 Move [X19], W8
	150 Move X0, [X29]
	151 Move W8, [X0+224]
	152 Compare W8, 0
	153 JumpIfNotEqual {155}
	154 Call 0x1C17DFC
	155 Move W8, [X24+1253]
	156 Compare W8, 0
	157 JumpIfNotEqual {163}
	158 Move X0, 0xECE000
	159 Move X0, [X0+3648]
	160 Call 0x1C17CF4
	161 Move W8, 1
	162 Move [X24+1253], W8
	163 Move X0, [X28]
	164 Move W8, [X0+224]
	165 Compare W8, 0
	166 JumpIfNotEqual {168}
	167 Call 0x1C17DFC
	168 Move W8, [X25+1254]
	169 Compare W8, 0
	170 JumpIfNotEqual {179}
	171 Move X0, 0xED3000
	172 Move X0, [X0+3752]
	173 Call 0x1C17CF4
	174 Move X0, 0xEA5000
	175 Move X0, [X0+1976]
	176 Call 0x1C17CF4
	177 Move W8, 1
	178 Move [X25+1254], W8
	179 Move X19, [X31+48]
	180 Compare X19, 0
	181 JumpIfEqual {276}
	182 Move X9, 0xEA5000
	183 Move X8, [X19]
	184 Move X9, [X9+1976]
	185 Move W11, [X8+304]
	186 Move X9, [X9]
	187 Move W10, [X9+304]
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Move X11, [X8+200]
	190 Add X10, X11, X10
	191 NotImplemented "Instruction LDUR not yet implemented."
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Move X10, 0xED3000
	194 NotImplemented "Instruction LDRH not yet implemented."
	195 NotImplemented "Instruction LDRH not yet implemented."
	196 Move X10, [X10+3752]
	197 Move X1, [X10]
	198 Compare X9, 0
	199 JumpIfEqual {206}
	200 Move X10, [X8+176]
	201 Add X10, X10, 8
	202 NotImplemented "Instruction LDUR not yet implemented."
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Subtract X9, X9, 1
	205 Add X10, X10, 16
	206 Move W2, 2
	207 Move X0, X19
	208 Call 0x1C5D788
	209 NotImplemented "Instruction LDUR not yet implemented."
	210 Move TEMP, 0
	211 Not TEMP
	212 Move W8, TEMP
	213 Move [X31+3], V0
	214 Move [X19+88], X31
	215 Move [X19+96], X31
	216 Move [X31+68], W8
	217 Move [X19], W8
	218 Move W4, [X19+32]
	219 Move W1, [X19+36]
	220 Move [X19+72], W4
	221 Move [X19+76], W1
	222 Compare X26, 0
	223 JumpIfEqual {633}
	224 Move X21, X26
	225 Add X21, X21, 72
	226 Move W3, [X21]
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Move W8, [X26+76]
	229 Move X0, [X19+48]
	230 Move X2, [X26+64]
	231 Subtract W8, W8, W3
	232 NotImplemented "Instruction CMP not yet implemented."
	233 Move X5, X31
	234 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	235 Move X20, [X31+72]
	236 Add X8, X20, 32
	237 Move W4, W8
	238 Move X5, X31
	239 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	240 Move X19, [X31+72]
	241 Move W9, [X26+72]
	242 Move W8, [X26+76]
	243 Move W11, [X19+72]
	244 Move W10, [X19+76]
	245 Subtract W9, W8, W9
	246 Add W10, W9, W10
	247 Subtract W9, W11, W9
	248 Move [X19+72], W9
	249 Move [X19+76], W10
	250 Move [X26+72], W8
	251 Move W21, [X26+88]
	252 NotImplemented "Instruction CMP not yet implemented."
	253 Move W8, [X19+56]
	254 Move X19, [X26+40]
	255 Move X20, [X26+80]
	256 Compare W8, 0
	257 JumpIfEqual {452}
	258 Compare X20, 0
	259 JumpIfEqual {465}
	260 Move W8, [X20+24]
	261 NotImplemented "Instruction CMP not yet implemented."
	262 Move X0, X31
	263 Call ThrowHelper.ThrowArgumentOutOfRangeException
	264 Move X2, X21
	265 ShiftRight X2, 32
	266 And X2, X2, 0x7FFFFFFF
	267 Move W9, [X10]
	268 Add W9, W9, 2
	269 Add X8, X8, W9
	270 Add X0, X8, 312
	271 Move X8, [X0]
	272 Move X2, [X0+8]
	273 Move X0, X19
	274 Move W1, W20
	275 NotImplemented "Instruction BLR not yet implemented."
	276 Compare X26, 0
	277 JumpIfEqual {631}
	278 Move [X26+72], W31
	279 Move W9, [X10]
	280 Add W9, W9, 2
	281 Add X8, X8, W9
	282 Add X0, X8, 312
	283 Move X8, [X0]
	284 Move X2, [X0+8]
	285 Move X0, X19
	286 Move W1, W20
	287 NotImplemented "Instruction BLR not yet implemented."
	288 Compare X26, 0
	289 JumpIfEqual {632}
	290 Move [X26+88], W31
	291 Move W19, [X26+72]
	292 Move W8, [X26+76]
	293 NotImplemented "Instruction CMP not yet implemented."
	294 Move X20, [X26+48]
	295 Compare X20, 0
	296 JumpIfEqual {634}
	297 Move X8, [X20]
	298 Move X22, [X26+64]
	299 Move X21, [X26+80]
	300 Move X1, [X27]
	301 NotImplemented "Instruction LDRH not yet implemented."
	302 Compare X9, 0
	303 JumpIfEqual {310}
	304 Move X10, [X8+176]
	305 Add X10, X10, 8
	306 NotImplemented "Instruction LDUR not yet implemented."
	307 NotImplemented "Instruction CMP not yet implemented."
	308 Subtract X9, X9, 1
	309 Add X10, X10, 16
	310 Move W2, 3
	311 Move X0, X20
	312 Call 0x1C5D788
	313 Move W9, [X10]
	314 Add W9, W9, 3
	315 Add X8, X8, W9
	316 Add X0, X8, 312
	317 Move X8, [X0]
	318 Move X6, [X0+8]
	319 Move X0, X20
	320 Move X1, X22
	321 Move W2, W31
	322 Move W3, W19
	323 Move X4, X21
	324 Move W5, W31
	325 NotImplemented "Instruction BLR not yet implemented."
	326 Move X8, [X31+72]
	327 Move W21, W0
	328 Move [X8+80], W0
	329 Move W8, [X8+56]
	330 Move X19, [X26+40]
	331 Move X20, [X26+80]
	332 Compare W8, 0
	333 JumpIfEqual {430}
	334 Compare X20, 0
	335 JumpIfEqual {440}
	336 Move W8, [X20+24]
	337 NotImplemented "Instruction CMP not yet implemented."
	338 Move X0, X31
	339 Call ThrowHelper.ThrowArgumentOutOfRangeException
	340 Move X2, X21
	341 ShiftRight X2, 32
	342 And X2, X2, 0x7FFFFFFF
	343 Compare X19, 0
	344 JumpIfEqual {448}
	345 Move X8, [X31+72]
	346 Move X9, [X19]
	347 Move X3, [X8+64]
	348 Move X8, [X9+808]
	349 Move X4, [X9+816]
	350 Move X0, X19
	351 Move X1, X20
	352 NotImplemented "Instruction BLR not yet implemented."
	353 Move X8, [X28]
	354 Move [X31+32], X0
	355 Move [X31+40], X1
	356 Move W9, [X8+224]
	357 Compare W9, 0
	358 JumpIfNotEqual {361}
	359 Move X0, X8
	360 Call 0x1C17DFC
	361 Add X0, X31, 32
	362 Move X1, X31
	363 Call ValueTask.GetAwaiter, X0
	364 Move X8, [X29]
	365 Move [X31+48], X0
	366 Move [X31+56], X1
	367 Move W9, [X8+224]
	368 Compare W9, 0
	369 JumpIfNotEqual {372}
	370 Move X0, X8
	371 Call 0x1C17DFC
	372 Move X8, 0x118C000
	373 Move W8, [X8+1251]
	374 Compare W8, 0
	375 JumpIfNotEqual {382}
	376 Move X0, 0xECD000
	377 Move X0, [X0+3648]
	378 Call 0x1C17CF4
	379 Move W8, 1
	380 Move X9, 0x118C000
	381 Move [X9+1251], W8
	382 Move X0, [X28]
	383 Move W8, [X0+224]
	384 Compare W8, 0
	385 JumpIfNotEqual {387}
	386 Call 0x1C17DFC
	387 Move X8, 0x118C000
	388 Move W8, [X8+1252]
	389 Compare W8, 0
	390 JumpIfNotEqual {400}
	391 Move X0, 0xED2000
	392 Move X0, [X0+3752]
	393 Call 0x1C17CF4
	394 Move X0, 0xEA4000
	395 Move X0, [X0+1976]
	396 Call 0x1C17CF4
	397 Move W8, 1
	398 Move X9, 0x118C000
	399 Move [X9+1252], W8
	400 Move X19, [X31+48]
	401 Compare X19, 0
	402 JumpIfEqual {150}
	403 Move X9, 0xEA4000
	404 Move X8, [X19]
	405 Move X9, [X9+1976]
	406 Move W11, [X8+304]
	407 Move X9, [X9]
	408 Move W10, [X9+304]
	409 NotImplemented "Instruction CMP not yet implemented."
	410 Move X11, [X8+200]
	411 Add X10, X11, X10
	412 NotImplemented "Instruction LDUR not yet implemented."
	413 NotImplemented "Instruction CMP not yet implemented."
	414 Move X10, 0xED2000
	415 NotImplemented "Instruction LDRH not yet implemented."
	416 NotImplemented "Instruction LDRH not yet implemented."
	417 Move X10, [X10+3752]
	418 Move X1, [X10]
	419 Compare X9, 0
	420 JumpIfEqual {427}
	421 Move X10, [X8+176]
	422 Add X10, X10, 8
	423 NotImplemented "Instruction LDUR not yet implemented."
	424 NotImplemented "Instruction CMP not yet implemented."
	425 Subtract X9, X9, 1
	426 Add X10, X10, 16
	427 Move X0, X19
	428 Move W2, W31
	429 Call 0x1C5D788
	430 Compare X19, 0
	431 JumpIfEqual {635}
	432 Move X8, [X19]
	433 Move X9, [X8+904]
	434 Move X4, [X8+912]
	435 Move X0, X19
	436 Move X1, X20
	437 Move W2, W31
	438 Move W3, W21
	439 NotImplemented "Instruction BLR not yet implemented."
	440 Compare W21, 0
	441 JumpIfEqual {444}
	442 Move X0, X31
	443 Call ThrowHelper.ThrowArgumentOutOfRangeException
	444 Move X20, X31
	445 Move X2, X31
	446 Compare X19, 0
	447 JumpIfNotEqual {345}
	448 Call 0x1C17F20
	449 Move X0, X19
	450 Move X1, X31
	451 Call TaskAwaiter.ValidateEnd, X0
	452 Compare X19, 0
	453 JumpIfEqual {637}
	454 Move X8, [X19]
	455 Move X9, [X8+904]
	456 Move X4, [X8+912]
	457 Move X0, X19
	458 Move X1, X20
	459 Move W2, W31
	460 Move W3, W21
	461 NotImplemented "Instruction BLR not yet implemented."
	462 Move X0, X19
	463 Move X1, X31
	464 Call TaskAwaiter.ValidateEnd, X0
	465 Move X0, X31
	466 Call ThrowHelper.ThrowArgumentOutOfRangeException
	467 Move X2, X31
	468 Move X20, X31
	469 Compare X19, 0
	470 JumpIfEqual {636}
	471 Move X8, [X31+72]
	472 Move X9, [X19]
	473 Move X3, [X8+64]
	474 Move X8, [X9+808]
	475 Move X4, [X9+816]
	476 Move X0, X19
	477 Move X1, X20
	478 NotImplemented "Instruction BLR not yet implemented."
	479 Move X8, [X28]
	480 Move [X31+32], X0
	481 Move [X31+40], X1
	482 Move W9, [X8+224]
	483 Compare W9, 0
	484 JumpIfNotEqual {487}
	485 Move X0, X8
	486 Call 0x1C17DFC
	487 Add X0, X31, 32
	488 Move X1, X31
	489 Call ValueTask.GetAwaiter, X0
	490 Move X8, [X29]
	491 Move [X31+48], X0
	492 Move [X31+56], X1
	493 Move W9, [X8+224]
	494 Compare W9, 0
	495 JumpIfNotEqual {498}
	496 Move X0, X8
	497 Call 0x1C17DFC
	498 Move X8, 0x118C000
	499 Move W8, [X8+1251]
	500 Compare W8, 0
	501 JumpIfNotEqual {508}
	502 Move X0, 0xECD000
	503 Move X0, [X0+3648]
	504 Call 0x1C17CF4
	505 Move W8, 1
	506 Move X9, 0x118C000
	507 Move [X9+1251], W8
	508 Move X0, [X28]
	509 Move W8, [X0+224]
	510 Compare W8, 0
	511 JumpIfNotEqual {513}
	512 Call 0x1C17DFC
	513 Move X8, 0x118C000
	514 Move W8, [X8+1252]
	515 Compare W8, 0
	516 JumpIfNotEqual {526}
	517 Move X0, 0xED2000
	518 Move X0, [X0+3752]
	519 Call 0x1C17CF4
	520 Move X0, 0xEA4000
	521 Move X0, [X0+1976]
	522 Call 0x1C17CF4
	523 Move W8, 1
	524 Move X9, 0x118C000
	525 Move [X9+1252], W8
	526 Move X19, [X31+48]
	527 Compare X19, 0
	528 JumpIfEqual {82}
	529 Move X9, 0xEA4000
	530 Move X8, [X19]
	531 Move X9, [X9+1976]
	532 Move W11, [X8+304]
	533 Move X9, [X9]
	534 Move W10, [X9+304]
	535 NotImplemented "Instruction CMP not yet implemented."
	536 Move X11, [X8+200]
	537 Add X10, X11, X10
	538 NotImplemented "Instruction LDUR not yet implemented."
	539 NotImplemented "Instruction CMP not yet implemented."
	540 Move X10, 0xED2000
	541 NotImplemented "Instruction LDRH not yet implemented."
	542 NotImplemented "Instruction LDRH not yet implemented."
	543 Move X10, [X10+3752]
	544 Move X1, [X10]
	545 Compare X9, 0
	546 JumpIfEqual {553}
	547 Move X10, [X8+176]
	548 Add X10, X10, 8
	549 NotImplemented "Instruction LDUR not yet implemented."
	550 NotImplemented "Instruction CMP not yet implemented."
	551 Subtract X9, X9, 1
	552 Add X10, X10, 16
	553 Move X0, X19
	554 Move W2, W31
	555 Call 0x1C5D788
	556 NotImplemented "Instruction LDRSW not yet implemented."
	557 Add X8, X8, X9
	558 Add X0, X8, 312
	559 Move X8, [X0]
	560 Move X2, [X0+8]
	561 Move X0, X19
	562 Move W1, W20
	563 NotImplemented "Instruction BLR not yet implemented."
	564 Compare W0, 0
	565 JumpIfNotEqual {150}
	566 Move X0, X19
	567 Move X1, X31
	568 Call Task.get_IsCompleted, X0
	569 Move TEMP, X0
	570 And TEMP, TEMP, 1
	571 Compare TEMP, 1
	572 JumpIfEqual {150}
	573 Move X19, [X31+72]
	574 Move W8, 1
	575 Move [X31+68], W8
	576 Move [X19], W8
	577 Move V0, [X31+3]
	578 Move X8, 0xEA6000
	579 Move X2, X19
	580 Move [X19+88], V0
	581 Move X8, [X8+640]
	582 Move X0, [X8]
	583 Move W8, [X0+224]
	584 Compare W8, 0
	585 JumpIfNotEqual {588}
	586 Call 0x1C17DFC
	587 Move X2, [X31+72]
	588 Move X8, 0xED2000
	589 Move X8, [X8+3736]
	590 Add X0, X19, 8
	591 Move X3, [X8]
	592 Add X1, X31, 48
	593 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	594 NotImplemented "Instruction LDRSW not yet implemented."
	595 Add X8, X8, X9
	596 Add X0, X8, 312
	597 Move X8, [X0]
	598 Move X2, [X0+8]
	599 Move X0, X19
	600 Move W1, W20
	601 NotImplemented "Instruction BLR not yet implemented."
	602 Compare W0, 0
	603 JumpIfNotEqual {82}
	604 Move X0, X19
	605 Move X1, X31
	606 Call Task.get_IsCompleted, X0
	607 Move TEMP, X0
	608 And TEMP, TEMP, 1
	609 Compare TEMP, 1
	610 JumpIfEqual {82}
	611 Move X19, [X31+72]
	612 Move [X31+68], W31
	613 Move X8, 0xEA6000
	614 Move [X19], W31
	615 Move V0, [X31+3]
	616 Move X2, X19
	617 Move [X19+88], V0
	618 Move X8, [X8+640]
	619 Move X0, [X8]
	620 Move W8, [X0+224]
	621 Compare W8, 0
	622 JumpIfNotEqual {625}
	623 Call 0x1C17DFC
	624 Move X2, [X31+72]
	625 Move X8, 0xED2000
	626 Move X8, [X8+3736]
	627 Add X0, X19, 8
	628 Move X3, [X8]
	629 Add X1, X31, 48
	630 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	631 Call 0x1C17F20
	632 Call 0x1C17F20
	633 Call 0x1C17F20
	634 Call 0x1C17F20
	635 Call 0x1C17F20
	636 Call 0x1C17F20
	637 Call 0x1C17F20
	638 Move W9, [X21]
	639 Move W8, [X8]
	640 Add W8, W8, W9
	641 Move [X21], W8
	642 Move TEMP, 1
	643 Not TEMP
	644 Move W8, TEMP
	645 Move [X20+8], W8
	646 Move X8, 0xEA6000
	647 Move X8, [X8+640]
	648 Move X0, [X8]
	649 Move W8, [X0+224]
	650 Compare W8, 0
	651 JumpIfNotEqual {653}
	652 Call 0x1C17DFC
	653 Move X0, X20
	654 Move X1, X31
	655 Call AsyncTaskMethodBuilder.SetResult, X0
	656 Move X20, [X31+160]
	657 Move X19, [X31+168]
	658 Move X22, [X31+144]
	659 Move X21, [X31+152]
	660 Move X24, [X31+128]
	661 Move X23, [X31+136]
	662 Move X26, [X31+112]
	663 Move X25, [X31+120]
	664 Move X28, [X31+96]
	665 Move X27, [X31+104]
	666 Move X29, [X31+80]
	667 Move X30, [X31+88]
	668 Add X31, X31, 176
	669 Return 
	670 Move X20, [X31+72]
	671 Move W19, [X20+72]
	672 NotImplemented "Instruction CMP not yet implemented."
	673 Compare X26, 0
	674 JumpIfEqual {1359}
	675 Move W21, [X26+76]
	676 NotImplemented "Instruction CMP not yet implemented."
	677 Move X20, [X26+48]
	678 Compare X20, 0
	679 JumpIfEqual {1360}
	680 Move X8, [X20]
	681 Move X1, [X27]
	682 NotImplemented "Instruction LDRH not yet implemented."
	683 Compare X9, 0
	684 JumpIfEqual {691}
	685 Move X10, [X8+176]
	686 Add X10, X10, 8
	687 NotImplemented "Instruction LDUR not yet implemented."
	688 NotImplemented "Instruction CMP not yet implemented."
	689 Subtract X9, X9, 1
	690 Add X10, X10, 16
	691 Move W2, 2
	692 Move X0, X20
	693 Call 0x1C5D788
	694 Move W9, [X10]
	695 Add W9, W9, 2
	696 Add X8, X8, W9
	697 Add X0, X8, 312
	698 Move X8, [X0]
	699 Move X1, [X0+8]
	700 Move X0, X20
	701 NotImplemented "Instruction BLR not yet implemented."
	702 NotImplemented "Instruction SDIV not yet implemented."
	703 NotImplemented "Instruction CMP not yet implemented."
	704 Xor W8, W0, 1
	705 Move TEMP, X8
	706 And TEMP, TEMP, 1
	707 Compare TEMP, 1
	708 JumpIfEqual {868}
	709 Move W8, [X26+76]
	710 Move X9, [X31+72]
	711 Move X10, 0xECE000
	712 Move X10, [X10+3432]
	713 Multiply W8, W8, W19
	714 Move [X9+104], W8
	715 Move X0, [X10]
	716 Move W8, [X0+224]
	717 Compare W8, 0
	718 JumpIfNotEqual {720}
	719 Call 0x1C17DFC
	720 Move X8, 0xECE000
	721 Move X8, [X8+3408]
	722 Move X20, [X8]
	723 Move X0, [X20+32]
	724 Move W8, [X0+309]
	725 Move TEMP, X8
	726 And TEMP, TEMP, 1
	727 Compare TEMP, 1
	728 JumpIfEqual {730}
	729 Call 0x1C5D684
	730 Move X8, [X0+192]
	731 Move X0, [X8+8]
	732 Move W8, [X0+309]
	733 Move TEMP, X8
	734 And TEMP, TEMP, 1
	735 Compare TEMP, 1
	736 JumpIfEqual {738}
	737 Call 0x1C5D684
	738 Move W8, [X0+224]
	739 Compare W8, 0
	740 JumpIfNotEqual {742}
	741 Call 0x1C17DFC
	742 Move X0, [X20+32]
	743 Move W8, [X0+309]
	744 Move TEMP, X8
	745 And TEMP, TEMP, 1
	746 Compare TEMP, 1
	747 JumpIfEqual {749}
	748 Call 0x1C5D684
	749 Move X8, [X0+192]
	750 Move X0, [X8+8]
	751 Move W8, [X0+309]
	752 Move TEMP, X8
	753 And TEMP, TEMP, 1
	754 Compare TEMP, 1
	755 JumpIfEqual {757}
	756 Call 0x1C5D684
	757 Move X8, [X0+184]
	758 Move X0, [X8]
	759 Compare X0, 0
	760 JumpIfEqual {1364}
	761 Move X8, [X0]
	762 Move W9, [X26+92]
	763 Move X10, [X8+376]
	764 Move X2, [X8+384]
	765 Multiply W1, W9, W19
	766 NotImplemented "Instruction BLR not yet implemented."
	767 Move X19, [X31+72]
	768 Move [X19+112], X0
	769 Move [X19+80], W31
	770 Move W8, [X31+68]
	771 Add X9, X31, 68
	772 Add X10, X31, 72
	773 NotImplemented "Instruction CMP not yet implemented."
	774 Move [X31+8], X31
	775 Move [X31+16], X9
	776 Move [X31+24], X10
	777 NotImplemented "Instruction LDUR not yet implemented."
	778 Move TEMP, 0
	779 Not TEMP
	780 Move W8, TEMP
	781 Move [X31+3], V0
	782 Move [X19+88], X31
	783 Move [X19+96], X31
	784 Move [X31+68], W8
	785 Move [X19], W8
	786 Move X0, [X29]
	787 Move W8, [X0+224]
	788 Compare W8, 0
	789 JumpIfNotEqual {791}
	790 Call 0x1C17DFC
	791 Move W8, [X24+1253]
	792 Compare W8, 0
	793 JumpIfNotEqual {799}
	794 Move X0, 0xECD000
	795 Move X0, [X0+3648]
	796 Call 0x1C17CF4
	797 Move W8, 1
	798 Move [X24+1253], W8
	799 Move X0, [X28]
	800 Move W8, [X0+224]
	801 Compare W8, 0
	802 JumpIfNotEqual {804}
	803 Call 0x1C17DFC
	804 Move W8, [X25+1254]
	805 Compare W8, 0
	806 JumpIfNotEqual {815}
	807 Move X0, 0xED2000
	808 Move X0, [X0+3752]
	809 Call 0x1C17CF4
	810 Move X0, 0xEA4000
	811 Move X0, [X0+1976]
	812 Call 0x1C17CF4
	813 Move W8, 1
	814 Move [X25+1254], W8
	815 Move X19, [X31+48]
	816 Compare X19, 0
	817 JumpIfEqual {1153}
	818 Move X9, 0xEA4000
	819 Move X8, [X19]
	820 Move X9, [X9+1976]
	821 Move W11, [X8+304]
	822 Move X9, [X9]
	823 Move W10, [X9+304]
	824 NotImplemented "Instruction CMP not yet implemented."
	825 Move X11, [X8+200]
	826 Add X10, X11, X10
	827 NotImplemented "Instruction LDUR not yet implemented."
	828 NotImplemented "Instruction CMP not yet implemented."
	829 Move X10, 0xED2000
	830 NotImplemented "Instruction LDRH not yet implemented."
	831 NotImplemented "Instruction LDRH not yet implemented."
	832 Move X10, [X10+3752]
	833 Move X1, [X10]
	834 Compare X9, 0
	835 JumpIfEqual {842}
	836 Move X10, [X8+176]
	837 Add X10, X10, 8
	838 NotImplemented "Instruction LDUR not yet implemented."
	839 NotImplemented "Instruction CMP not yet implemented."
	840 Subtract X9, X9, 1
	841 Add X10, X10, 16
	842 Move W2, 2
	843 Move X0, X19
	844 Call 0x1C5D788
	845 Compare X26, 0
	846 JumpIfEqual {1361}
	847 Move X20, [X26+48]
	848 Compare X20, 0
	849 JumpIfEqual {1362}
	850 Move X8, [X20]
	851 Move X21, [X19+48]
	852 Move W23, [X19+76]
	853 Move W22, [X19+104]
	854 Move X19, [X19+112]
	855 NotImplemented "Instruction LDRH not yet implemented."
	856 Move X1, [X27]
	857 Compare X9, 0
	858 JumpIfEqual {865}
	859 Move X10, [X8+176]
	860 Add X10, X10, 8
	861 NotImplemented "Instruction LDUR not yet implemented."
	862 NotImplemented "Instruction CMP not yet implemented."
	863 Subtract X9, X9, 1
	864 Add X10, X10, 16
	865 Move W2, 3
	866 Move X0, X20
	867 Call 0x1C5D788
	868 Move X19, [X26+48]
	869 Compare X19, 0
	870 JumpIfEqual {1363}
	871 Move X9, [X31+72]
	872 Move X8, [X19]
	873 Move W20, [X26+76]
	874 Move X21, [X26+80]
	875 Move X23, [X9+48]
	876 Move W22, [X9+76]
	877 NotImplemented "Instruction LDRH not yet implemented."
	878 Move X1, [X27]
	879 Compare X9, 0
	880 JumpIfEqual {887}
	881 Move X10, [X8+176]
	882 Add X10, X10, 8
	883 NotImplemented "Instruction LDUR not yet implemented."
	884 NotImplemented "Instruction CMP not yet implemented."
	885 Subtract X9, X9, 1
	886 Add X10, X10, 16
	887 Move W2, 3
	888 Move X0, X19
	889 Call 0x1C5D788
	890 Move W9, [X10]
	891 Add W9, W9, 3
	892 Add X8, X8, W9
	893 Add X0, X8, 312
	894 Move X8, [X0]
	895 Move X6, [X0+8]
	896 Move X0, X20
	897 Move X1, X21
	898 Move W2, W23
	899 Move W3, W22
	900 Move X4, X19
	901 Move W5, W31
	902 NotImplemented "Instruction BLR not yet implemented."
	903 Move X8, [X31+72]
	904 Move W21, W0
	905 Move [X8+80], W0
	906 Move W9, [X8+56]
	907 Move X19, [X26+40]
	908 Move X20, [X8+112]
	909 Compare W9, 0
	910 JumpIfEqual {1007}
	911 Compare X20, 0
	912 JumpIfEqual {1169}
	913 Move W8, [X20+24]
	914 NotImplemented "Instruction CMP not yet implemented."
	915 Move X0, X31
	916 Call ThrowHelper.ThrowArgumentOutOfRangeException
	917 Move X2, X21
	918 ShiftRight X2, 32
	919 And X2, X2, 0x7FFFFFFF
	920 Compare X19, 0
	921 JumpIfEqual {1177}
	922 Move X8, [X31+72]
	923 Move X9, [X19]
	924 Move X3, [X8+64]
	925 Move X8, [X9+808]
	926 Move X4, [X9+816]
	927 Move X0, X19
	928 Move X1, X20
	929 NotImplemented "Instruction BLR not yet implemented."
	930 Move X8, [X28]
	931 Move [X31+32], X0
	932 Move [X31+40], X1
	933 Move W9, [X8+224]
	934 Compare W9, 0
	935 JumpIfNotEqual {938}
	936 Move X0, X8
	937 Call 0x1C17DFC
	938 Add X0, X31, 32
	939 Move X1, X31
	940 Call ValueTask.GetAwaiter, X0
	941 Move X8, [X29]
	942 Move [X31+48], X0
	943 Move [X31+56], X1
	944 Move W9, [X8+224]
	945 Compare W9, 0
	946 JumpIfNotEqual {949}
	947 Move X0, X8
	948 Call 0x1C17DFC
	949 Move X8, 0x118C000
	950 Move W8, [X8+1251]
	951 Compare W8, 0
	952 JumpIfNotEqual {959}
	953 Move X0, 0xECD000
	954 Move X0, [X0+3648]
	955 Call 0x1C17CF4
	956 Move W8, 1
	957 Move X9, 0x118C000
	958 Move [X9+1251], W8
	959 Move X0, [X28]
	960 Move W8, [X0+224]
	961 Compare W8, 0
	962 JumpIfNotEqual {964}
	963 Call 0x1C17DFC
	964 Move X8, 0x118C000
	965 Move W8, [X8+1252]
	966 Compare W8, 0
	967 JumpIfNotEqual {977}
	968 Move X0, 0xED2000
	969 Move X0, [X0+3752]
	970 Call 0x1C17CF4
	971 Move X0, 0xEA4000
	972 Move X0, [X0+1976]
	973 Call 0x1C17CF4
	974 Move W8, 1
	975 Move X9, 0x118C000
	976 Move [X9+1252], W8
	977 Move X19, [X31+48]
	978 Compare X19, 0
	979 JumpIfEqual {786}
	980 Move X9, 0xEA4000
	981 Move X8, [X19]
	982 Move X9, [X9+1976]
	983 Move W11, [X8+304]
	984 Move X9, [X9]
	985 Move W10, [X9+304]
	986 NotImplemented "Instruction CMP not yet implemented."
	987 Move X11, [X8+200]
	988 Add X10, X11, X10
	989 NotImplemented "Instruction LDUR not yet implemented."
	990 NotImplemented "Instruction CMP not yet implemented."
	991 Move X10, 0xED2000
	992 NotImplemented "Instruction LDRH not yet implemented."
	993 NotImplemented "Instruction LDRH not yet implemented."
	994 Move X10, [X10+3752]
	995 Move X1, [X10]
	996 Compare X9, 0
	997 JumpIfEqual {1004}
	998 Move X10, [X8+176]
	999 Add X10, X10, 8
	1000 NotImplemented "Instruction LDUR not yet implemented."
	1001 NotImplemented "Instruction CMP not yet implemented."
	1002 Subtract X9, X9, 1
	1003 Add X10, X10, 16
	1004 Move X0, X19
	1005 Move W2, W31
	1006 Call 0x1C5D788
	1007 Compare X19, 0
	1008 JumpIfEqual {1365}
	1009 Move X8, [X19]
	1010 Move X9, [X8+904]
	1011 Move X4, [X8+912]
	1012 Move X0, X19
	1013 Move X1, X20
	1014 Move W2, W31
	1015 Move W3, W21
	1016 NotImplemented "Instruction BLR not yet implemented."
	1017 Move W9, [X10]
	1018 Add W9, W9, 3
	1019 Add X8, X8, W9
	1020 Add X0, X8, 312
	1021 Move X8, [X0]
	1022 Move X6, [X0+8]
	1023 Move X0, X19
	1024 Move X1, X23
	1025 Move W2, W22
	1026 Move W3, W20
	1027 Move X4, X21
	1028 Move W5, W31
	1029 NotImplemented "Instruction BLR not yet implemented."
	1030 Move X8, [X31+72]
	1031 Move W21, W0
	1032 Move [X8+80], W0
	1033 Move W8, [X8+56]
	1034 Move X19, [X26+40]
	1035 Move X20, [X26+80]
	1036 Compare W8, 0
	1037 JumpIfEqual {1134}
	1038 Compare X20, 0
	1039 JumpIfEqual {1178}
	1040 Move W8, [X20+24]
	1041 NotImplemented "Instruction CMP not yet implemented."
	1042 Move X0, X31
	1043 Call ThrowHelper.ThrowArgumentOutOfRangeException
	1044 Move X2, X21
	1045 ShiftRight X2, 32
	1046 And X2, X2, 0x7FFFFFFF
	1047 Compare X19, 0
	1048 JumpIfEqual {1186}
	1049 Move X8, [X31+72]
	1050 Move X9, [X19]
	1051 Move X3, [X8+64]
	1052 Move X8, [X9+808]
	1053 Move X4, [X9+816]
	1054 Move X0, X19
	1055 Move X1, X20
	1056 NotImplemented "Instruction BLR not yet implemented."
	1057 Move X8, [X28]
	1058 Move [X31+32], X0
	1059 Move [X31+40], X1
	1060 Move W9, [X8+224]
	1061 Compare W9, 0
	1062 JumpIfNotEqual {1065}
	1063 Move X0, X8
	1064 Call 0x1C17DFC
	1065 Add X0, X31, 32
	1066 Move X1, X31
	1067 Call ValueTask.GetAwaiter, X0
	1068 Move X8, [X29]
	1069 Move [X31+48], X0
	1070 Move [X31+56], X1
	1071 Move W9, [X8+224]
	1072 Compare W9, 0
	1073 JumpIfNotEqual {1076}
	1074 Move X0, X8
	1075 Call 0x1C17DFC
	1076 Move X8, 0x118C000
	1077 Move W8, [X8+1251]
	1078 Compare W8, 0
	1079 JumpIfNotEqual {1086}
	1080 Move X0, 0xECD000
	1081 Move X0, [X0+3648]
	1082 Call 0x1C17CF4
	1083 Move W8, 1
	1084 Move X9, 0x118C000
	1085 Move [X9+1251], W8
	1086 Move X0, [X28]
	1087 Move W8, [X0+224]
	1088 Compare W8, 0
	1089 JumpIfNotEqual {1091}
	1090 Call 0x1C17DFC
	1091 Move X8, 0x118C000
	1092 Move W8, [X8+1252]
	1093 Compare W8, 0
	1094 JumpIfNotEqual {1104}
	1095 Move X0, 0xED2000
	1096 Move X0, [X0+3752]
	1097 Call 0x1C17CF4
	1098 Move X0, 0xEA4000
	1099 Move X0, [X0+1976]
	1100 Call 0x1C17CF4
	1101 Move W8, 1
	1102 Move X9, 0x118C000
	1103 Move [X9+1252], W8
	1104 Move X19, [X31+48]
	1105 Compare X19, 0
	1106 JumpIfEqual {1210}
	1107 Move X9, 0xEA4000
	1108 Move X8, [X19]
	1109 Move X9, [X9+1976]
	1110 Move W11, [X8+304]
	1111 Move X9, [X9]
	1112 Move W10, [X9+304]
	1113 NotImplemented "Instruction CMP not yet implemented."
	1114 Move X11, [X8+200]
	1115 Add X10, X11, X10
	1116 NotImplemented "Instruction LDUR not yet implemented."
	1117 NotImplemented "Instruction CMP not yet implemented."
	1118 Move X10, 0xED2000
	1119 NotImplemented "Instruction LDRH not yet implemented."
	1120 NotImplemented "Instruction LDRH not yet implemented."
	1121 Move X10, [X10+3752]
	1122 Move X1, [X10]
	1123 Compare X9, 0
	1124 JumpIfEqual {1131}
	1125 Move X10, [X8+176]
	1126 Add X10, X10, 8
	1127 NotImplemented "Instruction LDUR not yet implemented."
	1128 NotImplemented "Instruction CMP not yet implemented."
	1129 Subtract X9, X9, 1
	1130 Add X10, X10, 16
	1131 Move X0, X19
	1132 Move W2, W31
	1133 Call 0x1C5D788
	1134 Compare X19, 0
	1135 JumpIfEqual {1366}
	1136 Move X8, [X19]
	1137 Move X9, [X8+904]
	1138 Move X4, [X8+912]
	1139 Move X0, X19
	1140 Move X1, X20
	1141 Move W2, W31
	1142 Move W3, W21
	1143 NotImplemented "Instruction BLR not yet implemented."
	1144 Move W9, [X10]
	1145 Add W9, W9, 2
	1146 Add X8, X8, W9
	1147 Add X0, X8, 312
	1148 Move X8, [X0]
	1149 Move X2, [X0+8]
	1150 Move X0, X19
	1151 Move W1, W20
	1152 NotImplemented "Instruction BLR not yet implemented."
	1153 Move X8, [X31+72]
	1154 Move W19, 26
	1155 Move W9, [X8+104]
	1156 Move W11, [X8+72]
	1157 Move W10, [X8+76]
	1158 Add W10, W9, W10
	1159 Subtract W9, W11, W9
	1160 Move [X8+72], W9
	1161 Move [X8+76], W10
	1162 Add X0, X31, 8
	1163 Call 0x1BB5A28
	1164 NotImplemented "Instruction CMP not yet implemented."
	1165 Compare W19, 0
	1166 JumpIfNotEqual {656}
	1167 Move X8, [X31+72]
	1168 Move [X8+112], X31
	1169 Compare W21, 0
	1170 JumpIfEqual {1173}
	1171 Move X0, X31
	1172 Call ThrowHelper.ThrowArgumentOutOfRangeException
	1173 Move X20, X31
	1174 Move X2, X31
	1175 Compare X19, 0
	1176 JumpIfNotEqual {922}
	1177 Call 0x1C17F20
	1178 Compare W21, 0
	1179 JumpIfEqual {1182}
	1180 Move X0, X31
	1181 Call ThrowHelper.ThrowArgumentOutOfRangeException
	1182 Move X20, X31
	1183 Move X2, X31
	1184 Compare X19, 0
	1185 JumpIfNotEqual {1049}
	1186 Call 0x1C17F20
	1187 Move X0, X19
	1188 Move X1, X31
	1189 Call TaskAwaiter.ValidateEnd, X0
	1190 NotImplemented "Instruction LDRSW not yet implemented."
	1191 Add X8, X8, X9
	1192 Add X0, X8, 312
	1193 Move X8, [X0]
	1194 Move X2, [X0+8]
	1195 Move X0, X19
	1196 Move W1, W20
	1197 NotImplemented "Instruction BLR not yet implemented."
	1198 Compare W0, 0
	1199 JumpIfNotEqual {786}
	1200 NotImplemented "Instruction LDRSW not yet implemented."
	1201 Add X8, X8, X9
	1202 Add X0, X8, 312
	1203 Move X8, [X0]
	1204 Move X2, [X0+8]
	1205 Move X0, X19
	1206 Move W1, W20
	1207 NotImplemented "Instruction BLR not yet implemented."
	1208 Compare W0, 0
	1209 JumpIfEqual {1327}
	1210 Move X0, [X29]
	1211 Move W8, [X0+224]
	1212 Compare W8, 0
	1213 JumpIfNotEqual {1215}
	1214 Call 0x1C17DFC
	1215 Move W8, [X24+1253]
	1216 Compare W8, 0
	1217 JumpIfNotEqual {1223}
	1218 Move X0, 0xECD000
	1219 Move X0, [X0+3648]
	1220 Call 0x1C17CF4
	1221 Move W8, 1
	1222 Move [X24+1253], W8
	1223 Move X0, [X28]
	1224 Move W8, [X0+224]
	1225 Compare W8, 0
	1226 JumpIfNotEqual {1228}
	1227 Call 0x1C17DFC
	1228 Move W8, [X25+1254]
	1229 Compare W8, 0
	1230 JumpIfNotEqual {1239}
	1231 Move X0, 0xED2000
	1232 Move X0, [X0+3752]
	1233 Call 0x1C17CF4
	1234 Move X0, 0xEA4000
	1235 Move X0, [X0+1976]
	1236 Call 0x1C17CF4
	1237 Move W8, 1
	1238 Move [X25+1254], W8
	1239 Move X19, [X31+48]
	1240 Compare X19, 0
	1241 JumpIfEqual {1278}
	1242 Move X9, 0xEA4000
	1243 Move X8, [X19]
	1244 Move X9, [X9+1976]
	1245 Move W11, [X8+304]
	1246 Move X9, [X9]
	1247 Move W10, [X9+304]
	1248 NotImplemented "Instruction CMP not yet implemented."
	1249 Move X11, [X8+200]
	1250 Add X10, X11, X10
	1251 NotImplemented "Instruction LDUR not yet implemented."
	1252 NotImplemented "Instruction CMP not yet implemented."
	1253 Move X10, 0xED2000
	1254 NotImplemented "Instruction LDRH not yet implemented."
	1255 NotImplemented "Instruction LDRH not yet implemented."
	1256 Move X10, [X10+3752]
	1257 Move X1, [X10]
	1258 Compare X9, 0
	1259 JumpIfEqual {1266}
	1260 Move X10, [X8+176]
	1261 Add X10, X10, 8
	1262 NotImplemented "Instruction LDUR not yet implemented."
	1263 NotImplemented "Instruction CMP not yet implemented."
	1264 Subtract X9, X9, 1
	1265 Add X10, X10, 16
	1266 Move W2, 2
	1267 Move X0, X19
	1268 Call 0x1C5D788
	1269 Move W9, [X10]
	1270 Add W9, W9, 2
	1271 Add X8, X8, W9
	1272 Add X0, X8, 312
	1273 Move X8, [X0]
	1274 Move X2, [X0+8]
	1275 Move X0, X19
	1276 Move W1, W20
	1277 NotImplemented "Instruction BLR not yet implemented."
	1278 Compare X26, 0
	1279 JumpIfEqual {1358}
	1280 Move X8, [X31+72]
	1281 Move W9, [X26+76]
	1282 Move W11, [X8+72]
	1283 Move W10, [X8+76]
	1284 Add W10, W9, W10
	1285 Subtract W9, W11, W9
	1286 Move [X8+72], W9
	1287 Move [X8+76], W10
	1288 Move X0, X19
	1289 Move X1, X31
	1290 Call TaskAwaiter.ValidateEnd, X0
	1291 Move X0, X19
	1292 Move X1, X31
	1293 Call Task.get_IsCompleted, X0
	1294 Move TEMP, X0
	1295 And TEMP, TEMP, 1
	1296 Compare TEMP, 1
	1297 JumpIfEqual {786}
	1298 Move X19, [X31+72]
	1299 Move W8, 2
	1300 Move [X31+68], W8
	1301 Move [X19], W8
	1302 Move V0, [X31+3]
	1303 Move X8, 0xEA6000
	1304 Move X2, X19
	1305 Move [X19+88], V0
	1306 Move X8, [X8+640]
	1307 Move X0, [X8]
	1308 Move W8, [X0+224]
	1309 Compare W8, 0
	1310 JumpIfNotEqual {1313}
	1311 Call 0x1C17DFC
	1312 Move X2, [X31+72]
	1313 Move X8, 0xED2000
	1314 Move X8, [X8+3736]
	1315 Add X0, X19, 8
	1316 Move X3, [X8]
	1317 Add X1, X31, 48
	1318 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	1319 Move W19, 13
	1320 Move X0, X19
	1321 Move X1, X31
	1322 Call Task.get_IsCompleted, X0
	1323 Move TEMP, X0
	1324 And TEMP, TEMP, 1
	1325 Compare TEMP, 1
	1326 JumpIfEqual {1210}
	1327 Move X19, [X31+72]
	1328 Move W8, 3
	1329 Move [X31+68], W8
	1330 Move [X19], W8
	1331 Move V0, [X31+3]
	1332 Move X8, 0xEA6000
	1333 Move X2, X19
	1334 Move [X19+88], V0
	1335 Move X8, [X8+640]
	1336 Move X0, [X8]
	1337 Move W8, [X0+224]
	1338 Compare W8, 0
	1339 JumpIfNotEqual {1342}
	1340 Call 0x1C17DFC
	1341 Move X2, [X31+72]
	1342 Move X8, 0xED2000
	1343 Move X8, [X8+3736]
	1344 Add X0, X19, 8
	1345 Move X3, [X8]
	1346 Add X1, X31, 48
	1347 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	1348 Move X0, [X20+48]
	1349 Move W1, [X20+76]
	1350 Move X2, [X26+64]
	1351 Move W3, W31
	1352 Move W4, W19
	1353 Move X5, X31
	1354 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	1355 Move X20, [X31+72]
	1356 Add X21, X26, 72
	1357 Add X8, X20, 72
	1358 Call 0x1C17F20
	1359 Call 0x1C17F20
	1360 Call 0x1C17F20
	1361 Call 0x1C17F20
	1362 Call 0x1C17F20
	1363 Call 0x1C17F20
	1364 Call 0x1C17F20
	1365 Call 0x1C17F20
	1366 Call 0x1C17F20
	1367 Move X20, X1
	1368 Move X19, X0
	1369 Move X1, X20
	1370 Move X19, X0
	1371 NotImplemented "Instruction CMP not yet implemented."
	1372 Move X0, X19
	1373 Call 0x3EB2AD0
	1374 Move X19, X0
	1375 Move X0, 0xEA2000
	1376 Move X0, [X0+2000]
	1377 Call 0x1C17D08
	1378 Move X8, [X19]
	1379 Move X1, [X8]
	1380 Call 0x1C18270
	1381 Move TEMP, X0
	1382 And TEMP, TEMP, 1
	1383 Compare TEMP, 1
	1384 JumpIfNotEqual {1403}
	1385 Move X19, [X19]
	1386 Call 0x3EB2AE0
	1387 Move X20, [X31+72]
	1388 Move TEMP, 1
	1389 Not TEMP
	1390 Move W8, TEMP
	1391 Move X0, 0xEA5000
	1392 Move [X20+8], W8
	1393 Move X0, [X0+640]
	1394 Call 0x1C17D08
	1395 Move W8, [X0+224]
	1396 Compare W8, 0
	1397 JumpIfNotEqual {1399}
	1398 Call 0x1C17DFC
	1399 Move X0, X20
	1400 Move X1, X19
	1401 Move X2, X31
	1402 Call AsyncTaskMethodBuilder.SetException, X0, X1
	1403 Move W0, 8
	1404 Call 0x3EB2AF0
	1405 Move X8, [X19]
	1406 Move [X0], X8
	1407 Move X1, 0xC63000
	1408 Add X1, X1, 3672
	1409 Move X2, X31
	1410 Call 0x3EB2B00
	1411 Move X19, X0
	1412 Call 0x3EB2AE0
	1413 Move X0, X19
	1414 Call 0x1D2D690
	1415 Move X19, X0
	1416 NotImplemented "Instruction CMP not yet implemented."
	1417 Move X0, X19
	1418 Call 0x3EB2AD0
	1419 Move X8, [X0]
	1420 Move [X31+8], X8
	1421 Call 0x3EB2AE0
	1422 Move W19, W31
	1423 Move X20, X1
	1424 Add X0, X31, 8
	1425 Call 0x1BB5A28
	1426 Call 0x1991590
	1427 Move X20, X1
	1428 Move X19, X0

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03252108 B.LT 0x32520BC
	0x0325210C ADRP X0, 0xED0000
	0x03252110 LDR X0, [X0 + 0xF08]
	0x03252114 BL 0x1C16D08
	0x03252118 MOV X1, X31
	0x0325211C BL 0x33BDD84
	0x03252120 MOV X19, X0
	0x03252124 ADRP X0, 0xECE000
	0x03252128 LDR X0, [X0 + 0xCE0]
	0x0325212C BL 0x1C16D08
	0x03252130 BL 0x1C16F10
	0x03252134 MOV X1, X19
	0x03252138 MOV X20, X0
	0x0325213C BL 0x3252170
	0x03252140 ADRP X0, 0xED0000
	0x03252144 LDR X0, [X0 + 0xF10]
	0x03252148 BL 0x1C16D08
	0x0325214C MOV X1, X0
	0x03252150 MOV X0, X20
	0x03252154 BL 0x1C16DEC
	0x03252158 LDP X20, X19, [X31 + 0x10]
	0x0325215C STR W1, [X0 + 0x10]
	0x03252160 LDR X30, [X31], #0x20
	0x03252164 RET
	0x03252168 BL 0x1C16F20
	0x0325216C BL 0x1C16F28

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x118B000
	007 Move X22, 0xEA5000
	008 Move W8, [X21+1204]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xEA5000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1204], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

