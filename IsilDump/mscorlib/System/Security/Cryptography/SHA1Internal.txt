Type: System.Security.Cryptography.SHA1Internal

Method: System.Void .ctor()

Disassembly:
	0x0326A630 ADD W13, W2, 0x3D
	0x0326A634 CMP W13, W8
	0x0326A638 B.CS 0x326A694
	0x0326A63C ADD W10, W2, 0x3E
	0x0326A640 CMP W10, W8
	0x0326A644 B.CS 0x326A694
	0x0326A648 ADD W11, W2, 0x3F
	0x0326A64C CMP W11, W8
	0x0326A650 B.CS 0x326A694
	0x0326A654 CMP W9, 0xF
	0x0326A658 B.LS 0x326A694
	0x0326A65C ADD X8, X1, W12, SXTW
	0x0326A660 ADD X9, X1, W13, SXTW
	0x0326A664 LDRB W8, [X8 + 0x20]
	0x0326A668 LDRB W9, [X9 + 0x20]
	0x0326A66C ADD X12, X1, 0x20
	0x0326A670 LDRB W10, [X12, W10, SXTW]
	0x0326A674 LDRB W11, [X12, W11, SXTW]
	0x0326A678 UBFM W8, W8, 0x8, 0x7
	0x0326A67C BFM W8, W9, 0x10, 0x7
	0x0326A680 BFM W8, W10, 0x18, 0x7
	0x0326A684 ORR W8, W8, W11, 0x0
	0x0326A688 STR W8, [X0 + 0x5C]
	0x0326A68C LDR X30, [X31], #0x10
	0x0326A690 RET
	0x0326A694 BL 0x1C16F28
	0x0326A698 BL 0x1C16F20
	0x0326A69C STR X30, [X31 - 0x10]!
	0x0326A6A0 CBZ X0, 0x326A81C
	0x0326A6A4 LDR W8, [X0 + 0x18]
	0x0326A6A8 MOV X10, X31
	0x0326A6AC ADD X9, X0, 0x40
	0x0326A6B0 ADD X11, X10, 0xD
	0x0326A6B4 CMP X11, X8
	0x0326A6B8 B.CS 0x326A818
	0x0326A6BC ADD X11, X10, 0x10
	0x0326A6C0 CMP X11, X8
	0x0326A6C4 B.CS 0x326A818
	0x0326A6C8 LDR W13, [X9 + 0x14]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1173000
	007 Move X20, 0xEB3000
	008 Move X21, 0xE8A000
	009 Move W8, [X22+1400]
	010 Move X20, [X20+3336]
	011 Move X21, [X21+1560]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xE8A000
	018 Move X0, [X0+1560]
	019 Call 0x1C17CF4
	020 Move X0, 0xEB3000
	021 Move X0, [X0+3336]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+1400], W8
	025 Move X0, X19
	026 Move X1, X31
	027 Call Object..ctor, X0
	028 Move X0, [X20]
	029 Move W1, 5
	030 Call 0x1C17D6C
	031 Move [X19+16], X0
	032 Move X0, [X21]
	033 Move W1, 64
	034 Call 0x1C17D6C
	035 Move [X19+32], X0
	036 Move X0, [X20]
	037 Move W1, 80
	038 Call 0x1C17D6C
	039 Move [X19+48], X0
	040 Move X0, X19
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Move X30, [X31+48]

Method: System.Void HashCore(System.Byte[] rgb, System.Int32 ibStart, System.Int32 cbSize)

Disassembly:
	0x0326A754 LDR W16, [X9 + 0xC]
	0x0326A758 LDUR W1, [X9 - 0xC]
	0x0326A75C EOR W17, W3, W17, 0x0
	0x0326A760 ADD X3, X10, 0x14
	0x0326A764 EOR W16, W17, W16, 0x0
	0x0326A768 EOR W16, W16, W1, 0x0
	0x0326A76C EXTR W16, W16, W16, 0x1F
	0x0326A770 CMP X3, X8
	0x0326A774 STR W16, [X9 + 0x2C]
	0x0326A778 B.CS 0x326A818
	0x0326A77C LDR W3, [X9 + 0x10]
	0x0326A780 LDUR W17, [X9 - 0x8]
	0x0326A784 EOR W0, W4, W0, 0x0
	0x0326A788 ADD X4, X10, 0x15
	0x0326A78C EOR W0, W0, W3, 0x0
	0x0326A790 EOR W0, W0, W17, 0x0
	0x0326A794 EXTR W3, W0, W0, 0x1F
	0x0326A798 CMP X4, X8
	0x0326A79C STR W3, [X9 + 0x30]
	0x0326A7A0 B.CS 0x326A818
	0x0326A7A4 LDUR W0, [X9 - 0x4]
	0x0326A7A8 EOR W13, W2, W13, 0x0
	0x0326A7AC EOR W13, W13, W1, 0x0
	0x0326A7B0 ADD X2, X10, 0x16
	0x0326A7B4 EOR W13, W13, W0, 0x0
	0x0326A7B8 EXTR W13, W13, W13, 0x1F
	0x0326A7BC CMP X2, X8
	0x0326A7C0 STR W13, [X9 + 0x34]
	0x0326A7C4 B.CS 0x326A818
	0x0326A7C8 EOR W12, W14, W12, 0x0
	0x0326A7CC EOR W12, W12, W16, 0x0
	0x0326A7D0 ADD X13, X10, 0x17
	0x0326A7D4 EOR W12, W12, W17, 0x0
	0x0326A7D8 EXTR W12, W12, W12, 0x1F
	0x0326A7DC CMP X13, X8
	0x0326A7E0 STR W12, [X9 + 0x38]
	0x0326A7E4 B.CS 0x326A818
	0x0326A7E8 EOR W12, W3, W15, 0x0
	0x0326A7EC EOR W12, W12, W0, 0x0
	0x0326A7F0 EOR W11, W12, W11, 0x0
	0x0326A7F4 ADD X13, X10, 0x10
	0x0326A7F8 EXTR W11, W11, W11, 0x1F
	0x0326A7FC ADD X10, X10, 0x8
	0x0326A800 CMP X13, 0x48
	0x0326A804 STR W11, [X9 + 0x3C]
	0x0326A808 ADD X9, X9, 0x20
	0x0326A80C B.CC 0x326A6B0
	0x0326A810 LDR X30, [X31], #0x10
	0x0326A814 RET
	0x0326A818 BL 0x1C16F28
	0x0326A81C BL 0x1C16F20
	0x0326A820 STR X30, [X31 - 0x10]!
	0x0326A824 CBZ X2, 0x326A90C
	0x0326A828 LDR W8, [X2 + 0x18]
	0x0326A82C CMP W8, W3
	0x0326A830 B.LS 0x326A908
	0x0326A834 UBFM X8, X1, 0x38, 0x3F
	0x0326A838 ADD X9, X2, W3, SXTW
	0x0326A83C STRB W8, [X9 + 0x20]
	0x0326A840 LDR W9, [X2 + 0x18]
	0x0326A844 ADD W8, W3, 0x1
	0x0326A848 CMP W8, W9
	0x0326A84C B.CS 0x326A908
	0x0326A850 UBFM X9, X1, 0x30, 0x3F

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move W22, W3
	009 Move W3, [X0+40]
	010 Move W20, W2
	011 Move X19, X0
	012 Move X21, X1
	013 Compare W3, 0
	014 JumpIfEqual {38}
	015 Move X2, [X19+32]
	016 Move W8, 64
	017 Subtract W23, W8, W3
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move X0, X21
	020 Move W1, W20
	021 Move W4, W22
	022 Move X5, X31
	023 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	024 Move W8, [X19+40]
	025 Add W22, W8, W22
	026 Move X0, X21
	027 Move W1, W20
	028 Move W4, W23
	029 Move X5, X31
	030 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	031 Move X1, [X19+32]
	032 Move X0, X19
	033 Move W2, W31
	034 Call SHA1Internal.ProcessBlock, X0, X1, X2
	035 Add W20, W23, W20
	036 Subtract W22, W22, W23
	037 Move [X19+40], W31
	038 Add W8, W22, 63
	039 NotImplemented "Instruction CMP not yet implemented."
	040 NotImplemented "Instruction CSEL not yet implemented."
	041 And W23, W8, 0xFFFFFFC0
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Subtract W22, W22, W23
	044 Move W24, W31
	045 Add W2, W20, W24
	046 Move X0, X19
	047 Move X1, X21
	048 Call SHA1Internal.ProcessBlock, X0, X1, X2
	049 Add W24, W24, 64
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Compare W22, 0
	052 JumpIfEqual {61}
	053 Move X2, [X19+32]
	054 Add W1, W23, W20
	055 Move X0, X21
	056 Move W3, W31
	057 Move W4, W22
	058 Move X5, X31
	059 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	060 Move [X19+40], W22
	061 Move X20, [X31+48]
	062 Move X19, [X31+56]
	063 Move X22, [X31+32]
	064 Move X21, [X31+40]
	065 Move X24, [X31+16]
	066 Move X23, [X31+24]
	067 Move X30, [X31+64]
	068 Return 

Method: System.Byte[] HashFinal()

Disassembly:
	0x0326AD68 LDR X20, [X20 + 0x9F0]
	0x0326AD6C MOV X19, X0
	0x0326AD70 TBNZ X8, 0x0, 0x326AD88
	0x0326AD74 ADRP X0, 0xE8A000
	0x0326AD78 LDR X0, [X0 + 0x9F0]
	0x0326AD7C BL 0x1C16CF4
	0x0326AD80 MOVZ W8, 0x1
	0x0326AD84 STRB W8, [X21 + 0x581]
	0x0326AD88 LDR X0, [X20]
	0x0326AD8C LDR W8, [X0 + 0xE0]
	0x0326AD90 CBNZ W8, 0x326AD9C
	0x0326AD94 BL 0x1C16DFC
	0x0326AD98 LDR X0, [X20]
	0x0326AD9C LDR X8, [X0 + 0xB8]
	0x0326ADA0 MOV X1, X31
	0x0326ADA4 LDR X8, [X8 + 0x10]
	0x0326ADA8 STR X8, [X19 + 0x50]
	0x0326ADAC LDR X8, [X0 + 0xB8]
	0x0326ADB0 MOV X0, X19
	0x0326ADB4 LDR X8, [X8 + 0x10]
	0x0326ADB8 STR X8, [X19 + 0x58]
	0x0326ADBC LDP X20, X19, [X31 + 0x10]
	0x0326ADC0 LDP X30, X21, [X31], #0x20
	0x0326ADC4 B 0x33BDD8C
	0x0326ADC8 STR X30, [X31 - 0x30]!
	0x0326ADCC STP X22, X21, [X31 + 0x10]
	0x0326ADD0 STP X20, X19, [X31 + 0x20]
	0x0326ADD4 ADRP X22, 0x1172000
	0x0326ADD8 ADRP X21, 0xE8A000
	0x0326ADDC LDRB W8, [X22 + 0x582]
	0x0326ADE0 LDR X21, [X21 + 0x9F0]
	0x0326ADE4 MOV X20, X1
	0x0326ADE8 MOV X19, X0
	0x0326ADEC TBNZ X8, 0x0, 0x326AE04
	0x0326ADF0 ADRP X0, 0xE8A000
	0x0326ADF4 LDR X0, [X0 + 0x9F0]
	0x0326ADF8 BL 0x1C16CF4
	0x0326ADFC MOVZ W8, 0x1
	0x0326AE00 STRB W8, [X22 + 0x582]
	0x0326AE04 LDR X0, [X21]
	0x0326AE08 LDR W8, [X0 + 0xE0]
	0x0326AE0C CBNZ W8, 0x326AE18
	0x0326AE10 BL 0x1C16DFC
	0x0326AE14 LDR X0, [X21]
	0x0326AE18 LDR X8, [X0 + 0xB8]
	0x0326AE1C MOV X1, X31
	0x0326AE20 LDR X8, [X8 + 0x10]
	0x0326AE24 STR X8, [X19 + 0x50]
	0x0326AE28 LDR X8, [X0 + 0xB8]
	0x0326AE2C MOV X0, X19
	0x0326AE30 LDR X8, [X8 + 0x10]
	0x0326AE34 STR X8, [X19 + 0x58]
	0x0326AE38 BL 0x33BDD8C
	0x0326AE3C CBZ X20, 0x326AE54

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1173000
	006 Move X21, 0xE8A000
	007 Move W8, [X20+1401]
	008 Move X21, [X21+1560]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE8A000
	015 Move X0, [X0+1560]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1401], W8
	019 Move X0, [X21]
	020 Move W1, 20
	021 Call 0x1C17D6C
	022 Move X1, [X19+32]
	023 Move W3, [X19+40]
	024 Move X20, X0
	025 Move X0, X19
	026 Move W2, W31
	027 Call SHA1Internal.ProcessFinalBlock, X0, X1, X2, X3
	028 Move X8, X31
	029 Move X9, X31
	030 Add X10, X20, 32
	031 Move X11, X8
	032 Move W12, 32
	033 Move X13, [X19+16]
	034 Compare X13, 0
	035 JumpIfEqual {58}
	036 Move W14, [X13+24]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Compare X20, 0
	039 JumpIfEqual {58}
	040 Move W14, [X20+24]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Add X13, X13, X9
	043 Move W13, [X13+32]
	044 Subtract X12, X12, 8
	045 And W14, W12, 24
	046 NotImplemented "Instruction LSRV not yet implemented."
	047 Move [X10], W13
	048 Add X11, X11, 1
	049 Add X9, X9, 1
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Add X8, X8, 4
	052 Move X0, X20
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X30, [X31+32]
	056 Move X21, [X31+40]
	057 Return X0
	058 Call 0x1C17F20
	059 Call 0x1C17F28

Method: System.Void Initialize()

Disassembly:
	0x0326A6CC LDR W12, [X9]
	0x0326A6D0 LDUR W16, [X9 - 0x18]
	0x0326A6D4 LDUR W11, [X9 - 0x20]
	0x0326A6D8 ADD X14, X10, 0x11
	0x0326A6DC EOR W15, W12, W13, 0x0
	0x0326A6E0 EOR W15, W15, W16, 0x0
	0x0326A6E4 EOR W11, W15, W11, 0x0
	0x0326A6E8 EXTR W17, W11, W11, 0x1F
	0x0326A6EC CMP X14, X8
	0x0326A6F0 STR W17, [X9 + 0x20]
	0x0326A6F4 B.CS 0x326A818
	0x0326A6F8 LDR W14, [X9 + 0x18]
	0x0326A6FC LDR W11, [X9 + 0x4]
	0x0326A700 LDUR W3, [X9 - 0x14]
	0x0326A704 LDUR W15, [X9 - 0x1C]
	0x0326A708 ADD X1, X10, 0x12
	0x0326A70C EOR W0, W11, W14, 0x0
	0x0326A710 EOR W0, W0, W3, 0x0
	0x0326A714 EOR W15, W0, W15, 0x0
	0x0326A718 EXTR W0, W15, W15, 0x1F
	0x0326A71C CMP X1, X8
	0x0326A720 STR W0, [X9 + 0x24]
	0x0326A724 B.CS 0x326A818
	0x0326A728 LDR W15, [X9 + 0x1C]
	0x0326A72C LDR W1, [X9 + 0x8]
	0x0326A730 LDUR W4, [X9 - 0x10]
	0x0326A734 ADD X5, X10, 0x13
	0x0326A738 EOR W16, W15, W16, 0x0
	0x0326A73C EOR W16, W16, W1, 0x0
	0x0326A740 EOR W16, W16, W4, 0x0
	0x0326A744 EXTR W2, W16, W16, 0x1F
	0x0326A748 CMP X5, X8
	0x0326A74C STR W2, [X9 + 0x28]
	0x0326A750 B.CS 0x326A818

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Move [X0+24], X31
	004 Move [X0+40], W31
	005 Compare X8, 0
	006 JumpIfEqual {32}
	007 Move W9, [X8+24]
	008 Compare W9, 0
	009 JumpIfEqual {31}
	010 Move W10, 0x2301
	011 NotImplemented "Instruction MOVK not yet implemented."
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move [X8+32], W10
	014 Move W10, 0xAB89
	015 NotImplemented "Instruction MOVK not yet implemented."
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move [X8+36], W10
	018 Move W10, 0xDCFE
	019 NotImplemented "Instruction MOVK not yet implemented."
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move [X8+40], W10
	022 Move W10, 0x5476
	023 NotImplemented "Instruction MOVK not yet implemented."
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move [X8+44], W10
	026 Move W9, 0xE1F0
	027 NotImplemented "Instruction MOVK not yet implemented."
	028 Move [X8+48], W9
	029 Move X30, [X31+16]
	030 Return 
	031 Call 0x1C17F28
	032 Call 0x1C17F20

Method: System.Void ProcessBlock(System.Byte[] inputBuffer, System.UInt32 inputOffset)

Disassembly:
	0x0326A854 ADD X8, X2, W8, SXTW
	0x0326A858 STRB W9, [X8 + 0x20]
	0x0326A85C LDR W9, [X2 + 0x18]
	0x0326A860 ADD W8, W3, 0x2
	0x0326A864 CMP W8, W9
	0x0326A868 B.CS 0x326A908
	0x0326A86C UBFM X9, X1, 0x28, 0x3F
	0x0326A870 ADD X8, X2, W8, SXTW
	0x0326A874 STRB W9, [X8 + 0x20]
	0x0326A878 LDR W9, [X2 + 0x18]
	0x0326A87C ADD W8, W3, 0x3
	0x0326A880 CMP W8, W9
	0x0326A884 B.CS 0x326A908
	0x0326A888 UBFM X9, X1, 0x20, 0x3F
	0x0326A88C ADD X8, X2, W8, SXTW
	0x0326A890 STRB W9, [X8 + 0x20]
	0x0326A894 LDR W9, [X2 + 0x18]
	0x0326A898 ADD W8, W3, 0x4
	0x0326A89C CMP W8, W9
	0x0326A8A0 B.CS 0x326A908
	0x0326A8A4 UBFM X9, X1, 0x18, 0x3F
	0x0326A8A8 ADD X8, X2, W8, SXTW
	0x0326A8AC STRB W9, [X8 + 0x20]
	0x0326A8B0 LDR W9, [X2 + 0x18]
	0x0326A8B4 ADD W8, W3, 0x5
	0x0326A8B8 CMP W8, W9
	0x0326A8BC B.CS 0x326A908
	0x0326A8C0 UBFM X9, X1, 0x10, 0x3F
	0x0326A8C4 ADD X8, X2, W8, SXTW
	0x0326A8C8 STRB W9, [X8 + 0x20]
	0x0326A8CC LDR W9, [X2 + 0x18]
	0x0326A8D0 ADD W8, W3, 0x6
	0x0326A8D4 CMP W8, W9
	0x0326A8D8 B.CS 0x326A908
	0x0326A8DC UBFM X9, X1, 0x8, 0x3F
	0x0326A8E0 ADD X8, X2, W8, SXTW
	0x0326A8E4 STRB W9, [X8 + 0x20]
	0x0326A8E8 LDR W9, [X2 + 0x18]
	0x0326A8EC ADD W8, W3, 0x7
	0x0326A8F0 CMP W8, W9
	0x0326A8F4 B.CS 0x326A908
	0x0326A8F8 ADD X8, X2, W8, SXTW
	0x0326A8FC STRB W1, [X8 + 0x20]
	0x0326A900 LDR X30, [X31], #0x10
	0x0326A904 RET
	0x0326A908 BL 0x1C16F28
	0x0326A90C BL 0x1C16F20
	0x0326A910 STP X30, X21, [X31 - 0x20]!
	0x0326A914 STP X20, X19, [X31 + 0x10]
	0x0326A918 LDR X8, [X0]
	0x0326A91C MOV X19, X0
	0x0326A920 LDP X9, X2, [X8 + 0x1F8]
	0x0326A924 MOV W1, W31
	0x0326A928 BLR X9
	0x0326A92C MOV X0, X19
	0x0326A930 LDP X20, X19, [X31 + 0x10]
	0x0326A934 MOV X1, X31
	0x0326A938 LDP X30, X21, [X31], #0x20
	0x0326A93C B 0x33CB4DC
	0x0326A940 CMP W1, 0x1
	0x0326A944 MOV X21, X0
	0x0326A948 B.NE 0x326A978
	0x0326A94C MOV X0, X21
	0x0326A950 BL 0x3EB1AD0
	0x0326A954 LDR X20, [X0]
	0x0326A958 BL 0x3EB1AE0
	0x0326A95C MOV X0, X19
	0x0326A960 MOV X1, X31
	0x0326A964 BL 0x33CB4DC
	0x0326A968 CBNZ X20, 0x326A980
	0x0326A96C LDP X20, X19, [X31 + 0x10]
	0x0326A970 LDP X30, X21, [X31], #0x20
	0x0326A974 RET
	0x0326A978 MOV X20, X31
	0x0326A97C B 0x326A98C
	0x0326A980 MOV X0, X20
	0x0326A984 BL 0x1C16F18
	0x0326A988 MOV X21, X0
	0x0326A98C MOV X0, X19
	0x0326A990 MOV X1, X31
	0x0326A994 BL 0x33CB4DC
	0x0326A998 CBNZ X20, 0x326A9A4
	0x0326A99C MOV X0, X21
	0x0326A9A0 BL 0x1D2C690
	0x0326A9A4 MOV X0, X20
	0x0326A9A8 BL 0x1C16F18
	0x0326A9AC BL 0x1990590
	0x0326A9B0 AND W1, W1, 0x1
	0x0326A9B4 MOV X2, X31
	0x0326A9B8 B 0x32519A8
	0x0326A9BC STR X30, [X31 - 0x10]!
	0x0326A9C0 MOV X8, X0
	0x0326A9C4 LDR X0, [X0 + 0x28]
	0x0326A9C8 MOVZ W9, 0x1
	0x0326A9CC STR W9, [X8 + 0x20]
	0x0326A9D0 CBZ X0, 0x326A9DC
	0x0326A9D4 LDR X30, [X31], #0x10
	0x0326A9D8 B 0x3269754
	0x0326A9DC BL 0x1C16F20
	0x0326A9E0 STR X30, [X31 - 0x10]!
	0x0326A9E4 MOV X8, X0
	0x0326A9E8 LDR X0, [X0 + 0x28]
	0x0326A9EC STR W31, [X8 + 0x20]
	0x0326A9F0 CBZ X0, 0x326A9FC
	0x0326A9F4 LDR X30, [X31], #0x10
	0x0326A9F8 B 0x3269D68
	0x0326A9FC BL 0x1C16F20
	0x0326AA00 STR X30, [X31 - 0x10]!
	0x0326AA04 LDR X0, [X0 + 0x28]
	0x0326AA08 CBZ X0, 0x326AA14
	0x0326AA0C LDR X30, [X31], #0x10
	0x0326AA10 B 0x32696CC
	0x0326AA14 BL 0x1C16F20
	0x0326AA18 STP X30, X21, [X31 - 0x20]!
	0x0326AA1C STP X20, X19, [X31 + 0x10]
	0x0326AA20 ADRP X20, 0x1172000
	0x0326AA24 ADRP X19, 0xEB8000
	0x0326AA28 LDRB W8, [X20 + 0x57E]
	0x0326AA2C LDR X19, [X19 + 0xF78]
	0x0326AA30 TBNZ X8, 0x0, 0x326AA54
	0x0326AA34 ADRP X0, 0xEB8000
	0x0326AA38 LDR X0, [X0 + 0xF78]
	0x0326AA3C BL 0x1C16CF4
	0x0326AA40 ADRP X0, 0xEB9000
	0x0326AA44 LDR X0, [X0 + 0xF0]
	0x0326AA48 BL 0x1C16CF4
	0x0326AA4C MOVZ W8, 0x1
	0x0326AA50 STRB W8, [X20 + 0x57E]
	0x0326AA54 LDR X0, [X19]
	0x0326AA58 LDR W8, [X0 + 0xE0]
	0x0326AA5C CBNZ W8, 0x326AA68
	0x0326AA60 BL 0x1C16DFC
	0x0326AA64 LDR X0, [X19]
	0x0326AA68 LDR X8, [X0 + 0xB8]
	0x0326AA6C ADRP X21, 0xEB9000
	0x0326AA70 LDR W8, [X8 + 0xC]
	0x0326AA74 LDR X21, [X21 + 0xF0]
	0x0326AA78 ADD W19, W8, W8, 0x1, LSL
	0x0326AA7C MOV W0, W19
	0x0326AA80 MOV X1, X31
	0x0326AA84 BL 0x3217C14
	0x0326AA88 LDR X8, [X21]
	0x0326AA8C MOV X20, X0
	0x0326AA90 LDR W9, [X8 + 0xE0]
	0x0326AA94 CBNZ W9, 0x326AAA0
	0x0326AA98 MOV X0, X8
	0x0326AA9C BL 0x1C16DFC
	0x0326AAA0 MOV X0, X20
	0x0326AAA4 BL 0x3261368
	0x0326AAA8 TBNZ X0, 0x0, 0x326AA7C
	0x0326AAAC MOV X0, X20
	0x0326AAB0 LDP X20, X19, [X31 + 0x10]
	0x0326AAB4 LDP X30, X21, [X31], #0x20
	0x0326AAB8 RET
	0x0326AABC STP X30, X23, [X31 - 0x30]!
	0x0326AAC0 STP X22, X21, [X31 + 0x10]
	0x0326AAC4 STP X20, X19, [X31 + 0x20]
	0x0326AAC8 ADRP X23, 0x1172000
	0x0326AACC ADRP X22, 0xEB8000
	0x0326AAD0 LDRB W8, [X23 + 0x57D]
	0x0326AAD4 LDR X22, [X22 + 0xF78]
	0x0326AAD8 MOV X19, X2
	0x0326AADC MOV X21, X1
	0x0326AAE0 MOV X20, X0
	0x0326AAE4 TBNZ X8, 0x0, 0x326AAFC
	0x0326AAE8 ADRP X0, 0xEB8000
	0x0326AAEC LDR X0, [X0 + 0xF78]
	0x0326AAF0 BL 0x1C16CF4
	0x0326AAF4 MOVZ W8, 0x1
	0x0326AAF8 STRB W8, [X23 + 0x57D]
	0x0326AAFC LDR X0, [X22]
	0x0326AB00 LDR W8, [X0 + 0xE0]
	0x0326AB04 CBNZ W8, 0x326AB10
	0x0326AB08 BL 0x1C16DFC
	0x0326AB0C LDR X0, [X22]
	0x0326AB10 LDR X8, [X0 + 0xB8]
	0x0326AB14 MOV X0, X21
	0x0326AB18 MOV X1, X19
	0x0326AB1C MOV W3, W31
	0x0326AB20 LDR X2, [X8 + 0x30]
	0x0326AB24 BL 0x3265E74
	0x0326AB28 LDRB W8, [X20 + 0x18]
	0x0326AB2C CBZ W8, 0x326AB64
	0x0326AB30 LDR X0, [X20 + 0x58]
	0x0326AB34 CBZ X0, 0x326ABD8
	0x0326AB38 MOV X1, X19
	0x0326AB3C MOV X2, X19
	0x0326AB40 BL 0x32661C4
	0x0326AB44 LDR X0, [X20 + 0x60]
	0x0326AB48 CBZ X0, 0x326ABD8
	0x0326AB4C MOV X1, X19
	0x0326AB50 MOV X2, X19
	0x0326AB54 BL 0x32661C4
	0x0326AB58 LDR X0, [X20 + 0x68]
	0x0326AB5C CBNZ X0, 0x326AB94
	0x0326AB60 B 0x326ABD8
	0x0326AB64 LDR X0, [X20 + 0x70]
	0x0326AB68 CBZ X0, 0x326ABD8
	0x0326AB6C MOV X1, X19
	0x0326AB70 MOV X2, X19
	0x0326AB74 BL 0x32661C4
	0x0326AB78 LDR X0, [X20 + 0x78]
	0x0326AB7C CBZ X0, 0x326ABD8
	0x0326AB80 MOV X1, X19
	0x0326AB84 MOV X2, X19
	0x0326AB88 BL 0x32661C4
	0x0326AB8C LDR X0, [X20 + 0x80]
	0x0326AB90 CBZ X0, 0x326ABD8
	0x0326AB94 MOV X1, X19
	0x0326AB98 MOV X2, X19
	0x0326AB9C BL 0x32661C4
	0x0326ABA0 LDR X0, [X22]
	0x0326ABA4 LDR W8, [X0 + 0xE0]
	0x0326ABA8 CBNZ W8, 0x326ABB4
	0x0326ABAC BL 0x1C16DFC
	0x0326ABB0 LDR X0, [X22]
	0x0326ABB4 LDR X8, [X0 + 0xB8]
	0x0326ABB8 MOV X0, X19
	0x0326ABBC MOV X1, X19
	0x0326ABC0 LDP X20, X19, [X31 + 0x20]
	0x0326ABC4 LDR X2, [X8 + 0x38]
	0x0326ABC8 LDP X22, X21, [X31 + 0x10]
	0x0326ABCC MOVZ W3, 0x1
	0x0326ABD0 LDP X30, X23, [X31], #0x30
	0x0326ABD4 B 0x3265E74
	0x0326ABD8 BL 0x1C16F20
	0x0326ABDC STP X30, X21, [X31 - 0x20]!
	0x0326ABE0 STP X20, X19, [X31 + 0x10]
	0x0326ABE4 ADRP X20, 0x1172000
	0x0326ABE8 ADRP X21, 0xEB6000
	0x0326ABEC LDRB W8, [X20 + 0x57F]
	0x0326ABF0 LDR X21, [X21 + 0xBD8]
	0x0326ABF4 MOV X19, X0
	0x0326ABF8 TBNZ X8, 0x0, 0x326AC10
	0x0326ABFC ADRP X0, 0xEB6000
	0x0326AC00 LDR X0, [X0 + 0xBD8]
	0x0326AC04 BL 0x1C16CF4
	0x0326AC08 MOVZ W8, 0x1
	0x0326AC0C STRB W8, [X20 + 0x57F]
	0x0326AC10 LDR X0, [X21]
	0x0326AC14 LDR W8, [X0 + 0xE0]
	0x0326AC18 CBNZ W8, 0x326AC20
	0x0326AC1C BL 0x1C16DFC
	0x0326AC20 MOV X0, X19
	0x0326AC24 LDP X20, X19, [X31 + 0x10]
	0x0326AC28 LDP X30, X21, [X31], #0x20
	0x0326AC2C B 0x3261120
	0x0326AC30 STR X30, [X31 - 0x20]!
	0x0326AC34 STP X20, X19, [X31 + 0x10]
	0x0326AC38 ADRP X20, 0x1172000
	0x0326AC3C LDRB W8, [X20 + 0x580]
	0x0326AC40 MOV X19, X0
	0x0326AC44 TBNZ X8, 0x0, 0x326AC5C
	0x0326AC48 ADRP X0, 0xE8A000
	0x0326AC4C LDR X0, [X0 + 0x9F0]
	0x0326AC50 BL 0x1C16CF4
	0x0326AC54 MOVZ W8, 0x1
	0x0326AC58 STRB W8, [X20 + 0x580]
	0x0326AC5C ADRP X20, 0xE8A000
	0x0326AC60 LDR X0, [X19 + 0x10]
	0x0326AC64 LDR X20, [X20 + 0x9F0]
	0x0326AC68 CBZ X0, 0x326AC74
	0x0326AC6C BL 0x326ACE4
	0x0326AC70 STR X31, [X19 + 0x10]
	0x0326AC74 BL 0x1C16D44
	0x0326AC78 STR X31, [X19 + 0x18]
	0x0326AC7C BL 0x1C16D44
	0x0326AC80 STR X31, [X19 + 0x28]
	0x0326AC84 BL 0x1C16D44
	0x0326AC88 STR X31, [X19 + 0x30]
	0x0326AC8C BL 0x1C16D44
	0x0326AC90 STR X31, [X19 + 0x20]
	0x0326AC94 BL 0x1C16D44
	0x0326AC98 STR X31, [X19 + 0x38]
	0x0326AC9C BL 0x1C16D44
	0x0326ACA0 STR X31, [X19 + 0x40]
	0x0326ACA4 BL 0x1C16D44
	0x0326ACA8 STR X31, [X19 + 0x48]
	0x0326ACAC LDR X0, [X20]
	0x0326ACB0 LDR W8, [X0 + 0xE0]
	0x0326ACB4 CBNZ W8, 0x326ACC0
	0x0326ACB8 BL 0x1C16DFC
	0x0326ACBC LDR X0, [X20]
	0x0326ACC0 LDR X8, [X0 + 0xB8]
	0x0326ACC4 LDR X8, [X8 + 0x10]
	0x0326ACC8 STR X8, [X19 + 0x50]
	0x0326ACCC LDR X8, [X0 + 0xB8]
	0x0326ACD0 LDR X8, [X8 + 0x10]
	0x0326ACD4 STR X8, [X19 + 0x58]
	0x0326ACD8 LDP X20, X19, [X31 + 0x10]
	0x0326ACDC LDR X30, [X31], #0x20
	0x0326ACE0 RET
	0x0326ACE4 STP X30, X21, [X31 - 0x20]!
	0x0326ACE8 STP X20, X19, [X31 + 0x10]
	0x0326ACEC ADRP X21, 0x1172000
	0x0326ACF0 ADRP X20, 0xE90000
	0x0326ACF4 LDRB W8, [X21 + 0x58D]
	0x0326ACF8 LDR X20, [X20 + 0xC10]
	0x0326ACFC MOV X19, X0
	0x0326AD00 TBNZ X8, 0x0, 0x326AD18
	0x0326AD04 ADRP X0, 0xE90000
	0x0326AD08 LDR X0, [X0 + 0xC10]
	0x0326AD0C BL 0x1C16CF4
	0x0326AD10 MOVZ W8, 0x1
	0x0326AD14 STRB W8, [X21 + 0x58D]
	0x0326AD18 LDR X8, [X19]
	0x0326AD1C MOVZ W1, 0x1
	0x0326AD20 MOV X0, X19
	0x0326AD24 LDR X9, [X8 + 0x278]
	0x0326AD28 LDR X2, [X8 + 0x280]
	0x0326AD2C BLR X9
	0x0326AD30 LDR X0, [X20]
	0x0326AD34 LDR W8, [X0 + 0xE0]
	0x0326AD38 CBNZ W8, 0x326AD40
	0x0326AD3C BL 0x1C16DFC
	0x0326AD40 MOV X0, X19
	0x0326AD44 LDP X20, X19, [X31 + 0x10]
	0x0326AD48 MOV X1, X31
	0x0326AD4C LDP X30, X21, [X31], #0x20
	0x0326AD50 B 0x33B3E9C
	0x0326AD54 STP X30, X21, [X31 - 0x20]!
	0x0326AD58 STP X20, X19, [X31 + 0x10]
	0x0326AD5C ADRP X21, 0x1172000
	0x0326AD60 ADRP X20, 0xE8A000
	0x0326AD64 LDRB W8, [X21 + 0x581]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, [X0+16]
	006 Move X8, [X0+24]
	007 Move X19, [X0+48]
	008 Add X8, X8, 64
	009 Move [X0+24], X8
	010 Move X0, X19
	011 Call SHA1Internal.InitialiseBuff, X0, X1, X2
	012 Move X0, X19
	013 Call SHA1Internal.FillBuff, X0
	014 Compare X20, 0
	015 JumpIfEqual {315}
	016 Move W8, [X20+24]
	017 Compare W8, 0
	018 JumpIfEqual {314}
	019 NotImplemented "Instruction CMP not yet implemented."
	020 NotImplemented "Instruction CMP not yet implemented."
	021 NotImplemented "Instruction CMP not yet implemented."
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Compare X19, 0
	024 JumpIfEqual {315}
	025 Move W8, [X20+32]
	026 Move W9, [X20+36]
	027 Move W10, [X20+40]
	028 Move W11, [X20+44]
	029 Move W12, [X20+48]
	030 Move W13, [X19+24]
	031 Move W0, 0x7999
	032 Move X3, X31
	033 NotImplemented "Instruction MOVK not yet implemented."
	034 Add X2, X19, 48
	035 Move W16, W8
	036 Move W1, W9
	037 Move W15, W10
	038 Move W14, W11
	039 Move W17, W12
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Add X3, X3, 1
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Add X3, X3, 1
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Add X3, X3, 1
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Add X3, X3, 1
	048 NotImplemented "Instruction CMP not yet implemented."
	049 NotImplemented "Instruction BIC not yet implemented."
	050 And W6, W15, W1
	051 NotImplemented "Instruction EXTR not yet implemented."
	052 Add W17, W17, W0
	053 Or W5, W6, W5
	054 Move W6, [X2-16]
	055 Move W7, [X2-12]
	056 NotImplemented "Instruction EXTR not yet implemented."
	057 Add W17, W17, W4
	058 Subtract X4, X3, 4
	059 NotImplemented "Instruction CMP not yet implemented."
	060 NotImplemented "Instruction BIC not yet implemented."
	061 Add W17, W17, W5
	062 NotImplemented "Instruction EXTR not yet implemented."
	063 And W16, W1, W16
	064 Add W14, W14, W0
	065 Or W16, W16, W4
	066 Add W14, W14, W16
	067 Add W16, W17, W6
	068 NotImplemented "Instruction EXTR not yet implemented."
	069 NotImplemented "Instruction BIC not yet implemented."
	070 And W6, W5, W16
	071 Add W14, W14, W17
	072 Or W4, W6, W4
	073 Move W6, [X2-8]
	074 Move W21, [X2-4]
	075 Add W15, W15, W0
	076 Add W14, W14, W7
	077 NotImplemented "Instruction EXTR not yet implemented."
	078 Add W15, W15, W4
	079 NotImplemented "Instruction EXTR not yet implemented."
	080 NotImplemented "Instruction BIC not yet implemented."
	081 Add W15, W15, W16
	082 And W16, W17, W14
	083 Or W16, W16, W4
	084 Add W1, W1, W0
	085 Add W15, W15, W6
	086 NotImplemented "Instruction EXTR not yet implemented."
	087 Add W16, W1, W16
	088 NotImplemented "Instruction EXTR not yet implemented."
	089 Move W4, [X2+20]
	090 NotImplemented "Instruction BIC not yet implemented."
	091 Add W16, W16, W1
	092 And W1, W14, W15
	093 Add W5, W5, W0
	094 Or W6, W1, W6
	095 Add W1, W16, W21
	096 Add W16, W5, W6
	097 NotImplemented "Instruction EXTR not yet implemented."
	098 Add W16, W16, W5
	099 NotImplemented "Instruction EXTR not yet implemented."
	100 Add W16, W16, W4
	101 Add X3, X3, 1
	102 Move W2, 0xEBA1
	103 NotImplemented "Instruction MOVK not yet implemented."
	104 Add X0, X19, 128
	105 Move W4, 20
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move X3, X4
	108 Add X4, X4, 1
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Add X4, X4, 1
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Add X4, X4, 1
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Add X4, X4, 1
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Xor W6, W15, W14
	117 NotImplemented "Instruction EXTR not yet implemented."
	118 Add W17, W17, W2
	119 NotImplemented "Instruction EXTR not yet implemented."
	120 Xor W1, W6, W1
	121 Subtract X6, X4, 4
	122 Add W17, W17, W5
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move W5, [X0-16]
	125 Move W6, [X0-12]
	126 Add W17, W17, W1
	127 Xor W1, W7, W15
	128 Add W14, W14, W2
	129 Xor W1, W1, W16
	130 NotImplemented "Instruction EXTR not yet implemented."
	131 Add W14, W14, W1
	132 Xor W1, W16, W7
	133 Add W17, W17, W5
	134 Add W15, W15, W2
	135 NotImplemented "Instruction EXTR not yet implemented."
	136 Xor W1, W1, W17
	137 Add W14, W14, W5
	138 Add W15, W15, W1
	139 Move W1, [X0-8]
	140 Move W5, [X0-4]
	141 Add W14, W14, W6
	142 NotImplemented "Instruction EXTR not yet implemented."
	143 NotImplemented "Instruction EXTR not yet implemented."
	144 Add W15, W15, W6
	145 Xor W6, W17, W16
	146 Add W7, W7, W2
	147 Xor W6, W6, W14
	148 Add W15, W15, W1
	149 Add W6, W7, W6
	150 NotImplemented "Instruction EXTR not yet implemented."
	151 NotImplemented "Instruction EXTR not yet implemented."
	152 Move W7, [X0+20]
	153 Add W1, W6, W1
	154 Xor W6, W14, W17
	155 Add W16, W16, W2
	156 Xor W6, W6, W15
	157 Add W1, W1, W5
	158 Add W16, W16, W6
	159 NotImplemented "Instruction EXTR not yet implemented."
	160 Add W16, W16, W5
	161 NotImplemented "Instruction EXTR not yet implemented."
	162 Add W16, W16, W7
	163 Add X4, X4, 1
	164 Add X4, X3, 5
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Move W2, 0xBCDC
	167 NotImplemented "Instruction MOVK not yet implemented."
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move X3, X4
	170 Add X4, X4, 1
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Add X4, X4, 1
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Add X4, X4, 1
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Add X4, X4, 1
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Or W7, W15, W14
	179 NotImplemented "Instruction EXTR not yet implemented."
	180 Add W17, W17, W2
	181 NotImplemented "Instruction EXTR not yet implemented."
	182 And W1, W1, W7
	183 Subtract X7, X4, 4
	184 Add W17, W17, W6
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Move W6, [X0-16]
	187 Move W7, [X0-12]
	188 And W21, W15, W14
	189 Or W1, W1, W21
	190 Or W21, W5, W15
	191 And W21, W21, W16
	192 NotImplemented "Instruction EXTR not yet implemented."
	193 Add W17, W17, W1
	194 Add W1, W15, W2
	195 And W15, W5, W15
	196 Add W14, W14, W2
	197 Or W15, W21, W15
	198 Or W21, W16, W5
	199 Add W17, W17, W6
	200 And W6, W16, W5
	201 Add W14, W14, W15
	202 NotImplemented "Instruction EXTR not yet implemented."
	203 And W21, W17, W21
	204 Add W14, W14, W15
	205 Or W15, W21, W6
	206 Move W6, [X0-8]
	207 Move W21, [X0-4]
	208 NotImplemented "Instruction EXTR not yet implemented."
	209 Add W14, W14, W7
	210 Or W7, W17, W16
	211 Add W15, W1, W15
	212 NotImplemented "Instruction EXTR not yet implemented."
	213 Add W15, W15, W1
	214 And W1, W17, W16
	215 And W7, W14, W7
	216 Or W1, W7, W1
	217 Add W5, W5, W2
	218 NotImplemented "Instruction EXTR not yet implemented."
	219 Add W15, W15, W6
	220 Or W6, W14, W17
	221 Add W1, W5, W1
	222 NotImplemented "Instruction EXTR not yet implemented."
	223 Move W7, [X0+20]
	224 Add W1, W1, W5
	225 And W5, W14, W17
	226 And W6, W15, W6
	227 Add W16, W16, W2
	228 Or W5, W6, W5
	229 Add W1, W1, W21
	230 Add W16, W16, W5
	231 NotImplemented "Instruction EXTR not yet implemented."
	232 Add W16, W16, W5
	233 NotImplemented "Instruction EXTR not yet implemented."
	234 Add W16, W16, W7
	235 Add X4, X4, 1
	236 Add X4, X3, 5
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Move W0, 0xC1D6
	239 Add X2, X19, W4
	240 NotImplemented "Instruction MOVK not yet implemented."
	241 Move W3, W4
	242 Add X2, X2, 48
	243 NotImplemented "Instruction CMP not yet implemented."
	244 Add X4, X3, 1
	245 NotImplemented "Instruction CMP not yet implemented."
	246 Add X4, X3, 2
	247 NotImplemented "Instruction CMP not yet implemented."
	248 Add X4, X3, 3
	249 NotImplemented "Instruction CMP not yet implemented."
	250 Add X4, X3, 4
	251 NotImplemented "Instruction CMP not yet implemented."
	252 NotImplemented "Instruction EXTR not yet implemented."
	253 Xor W5, W15, W14
	254 Add W17, W17, W0
	255 NotImplemented "Instruction EXTR not yet implemented."
	256 Xor W1, W5, W1
	257 Add W17, W17, W4
	258 Move W4, [X2-16]
	259 Move W5, [X2-12]
	260 Add W17, W17, W1
	261 Xor W1, W6, W15
	262 Add W14, W14, W0
	263 Xor W1, W1, W16
	264 NotImplemented "Instruction EXTR not yet implemented."
	265 Add W14, W14, W1
	266 Xor W1, W16, W6
	267 Add W17, W17, W4
	268 Add W15, W15, W0
	269 NotImplemented "Instruction EXTR not yet implemented."
	270 Xor W1, W1, W17
	271 Add W14, W14, W4
	272 Add W15, W15, W1
	273 Move W1, [X2-8]
	274 Move W4, [X2-4]
	275 Add W14, W14, W5
	276 NotImplemented "Instruction EXTR not yet implemented."
	277 NotImplemented "Instruction EXTR not yet implemented."
	278 Add W15, W15, W5
	279 Xor W5, W17, W16
	280 Add W6, W6, W0
	281 Xor W5, W5, W14
	282 Add W15, W15, W1
	283 Add W5, W6, W5
	284 NotImplemented "Instruction EXTR not yet implemented."
	285 NotImplemented "Instruction EXTR not yet implemented."
	286 Move W6, [X2+20]
	287 Add W1, W5, W1
	288 Xor W5, W14, W17
	289 Add W16, W16, W0
	290 Xor W5, W5, W15
	291 Add W1, W1, W4
	292 Add W16, W16, W5
	293 NotImplemented "Instruction EXTR not yet implemented."
	294 Add W16, W16, W4
	295 NotImplemented "Instruction CMP not yet implemented."
	296 Add X3, X3, 5
	297 Add W16, W16, W6
	298 NotImplemented "Instruction EXTR not yet implemented."
	299 Add W8, W16, W8
	300 Add W9, W1, W9
	301 Add W10, W15, W10
	302 Add W11, W14, W11
	303 Add W12, W17, W12
	304 Move [X20+32], W8
	305 Move [X20+36], W9
	306 Move [X20+40], W10
	307 Move [X20+44], W11
	308 Move [X20+48], W12
	309 Move X20, [X31+16]
	310 Move X19, [X31+24]
	311 Move X30, [X31+32]
	312 Move X21, [X31+40]
	313 Return 
	314 Call 0x1C17F28
	315 Call 0x1C17F20

Method: System.Void InitialiseBuff(System.UInt32[] buff, System.Byte[] input, System.UInt32 inputOffset)

Disassembly:
	0x0326AFFC MOV X19, X1
	0x0326B000 MOV X21, X0
	0x0326B004 TBNZ X8, 0x0, 0x326B034
	0x0326B008 ADRP X0, 0xE89000
	0x0326B00C LDR X0, [X0 + 0x9F0]
	0x0326B010 BL 0x1C16CF4
	0x0326B014 ADRP X0, 0xE88000
	0x0326B018 LDR X0, [X0 + 0xE00]
	0x0326B01C BL 0x1C16CF4
	0x0326B020 ADRP X0, 0xEB8000
	0x0326B024 LDR X0, [X0 + 0x940]
	0x0326B028 BL 0x1C16CF4
	0x0326B02C MOVZ W8, 0x1
	0x0326B030 STRB W8, [X24 + 0x584]
	0x0326B034 LDR X0, [X23]
	0x0326B038 LDR W8, [X0 + 0xE0]
	0x0326B03C CBNZ W8, 0x326B048
	0x0326B040 BL 0x1C16DFC
	0x0326B044 LDR X0, [X23]
	0x0326B048 LDR X8, [X0 + 0xB8]
	0x0326B04C MOV X1, X31
	0x0326B050 LDR X8, [X8 + 0x10]
	0x0326B054 STR X8, [X21 + 0x50]
	0x0326B058 LDR X8, [X0 + 0xB8]
	0x0326B05C MOV X0, X21
	0x0326B060 LDR X8, [X8 + 0x10]
	0x0326B064 STR X8, [X21 + 0x58]
	0x0326B068 BL 0x33BDD8C
	0x0326B06C CBZ X19, 0x326B140
	0x0326B070 ADRP X23, 0xEB8000
	0x0326B074 ADRP X24, 0xE88000
	0x0326B078 LDR X23, [X23 + 0x940]
	0x0326B07C LDR X24, [X24 + 0xE00]
	0x0326B080 MOV W0, W20
	0x0326B084 BL 0x326B230
	0x0326B088 MOV X0, X19
	0x0326B08C MOV X1, X31
	0x0326B090 BL 0x32ED764
	0x0326B094 LDR X8, [X23]
	0x0326B098 MOV X23, X0
	0x0326B09C MOV X0, X8
	0x0326B0A0 BL 0x1C16F10
	0x0326B0A4 MOV X1, X22
	0x0326B0A8 MOV X2, X31
	0x0326B0AC MOV X19, X0
	0x0326B0B0 BL 0x3224CA0
	0x0326B0B4 MOV X0, X23
	0x0326B0B8 MOV X1, X19
	0x0326B0BC MOV W2, W20
	0x0326B0C0 BL 0x326B33C
	0x0326B0C4 MOV X20, X31
	0x0326B0C8 STR X0, [X21 + 0x10]
	0x0326B0CC CBZ X19, 0x326B128
	0x0326B0D0 LDR X8, [X19]
	0x0326B0D4 LDR X1, [X24]
	0x0326B0D8 LDRH W9, [X8 + 0x12E]
	0x0326B0DC CBZ X9, 0x326B100
	0x0326B0E0 LDR X10, [X8 + 0xB0]
	0x0326B0E4 ADD X10, X10, 0x8
	0x0326B0E8 LDUR X11, [X10 - 0x8]
	0x0326B0EC CMP X11, X1
	0x0326B0F0 B.EQ 0x326B110
	0x0326B0F4 SUBS X9, X9, 0x1
	0x0326B0F8 ADD X10, X10, 0x10
	0x0326B0FC B.NE 0x326B0E8
	0x0326B100 MOV X0, X19
	0x0326B104 MOV W2, W31
	0x0326B108 BL 0x1C5C788
	0x0326B10C B 0x326B11C
	0x0326B110 LDRSW X9, [X10]
	0x0326B114 ADD X8, X8, X9, 0x4, LSL
	0x0326B118 ADD X0, X8, 0x138
	0x0326B11C LDP X8, X1, [X0]
	0x0326B120 MOV X0, X19
	0x0326B124 BLR X8
	0x0326B128 CBNZ X20, 0x326B188
	0x0326B12C LDP X20, X19, [X31 + 0x30]
	0x0326B130 LDP X22, X21, [X31 + 0x20]
	0x0326B134 LDP X24, X23, [X31 + 0x10]
	0x0326B138 LDR X30, [X31], #0x40
	0x0326B13C RET
	0x0326B140 ADRP X0, 0xE8D000
	0x0326B144 LDR X0, [X0 + 0x528]
	0x0326B148 BL 0x1C16D08
	0x0326B14C BL 0x1C16F10
	0x0326B150 MOV X19, X0
	0x0326B154 ADRP X0, 0xEB8000
	0x0326B158 LDR X0, [X0 + 0x948]
	0x0326B15C BL 0x1C16D08
	0x0326B160 MOV X1, X0
	0x0326B164 MOV X0, X19
	0x0326B168 MOV X2, X31
	0x0326B16C BL 0x330E100
	0x0326B170 ADRP X0, 0xEB8000
	0x0326B174 LDR X0, [X0 + 0x950]
	0x0326B178 BL 0x1C16D08
	0x0326B17C MOV X1, X0
	0x0326B180 MOV X0, X19
	0x0326B184 BL 0x1C16DEC
	0x0326B188 MOV X0, X20
	0x0326B18C BL 0x1C16F18
	0x0326B190 CMP W1, 0x1
	0x0326B194 MOV X21, X0
	0x0326B198 B.NE 0x326B1B0
	0x0326B19C MOV X0, X21
	0x0326B1A0 BL 0x3EB1AD0
	0x0326B1A4 LDR X20, [X0]
	0x0326B1A8 BL 0x3EB1AE0
	0x0326B1AC B 0x326B0CC
	0x0326B1B0 MOV X20, X31
	0x0326B1B4 B 0x326B1BC
	0x0326B1B8 MOV X21, X0
	0x0326B1BC CBZ X19, 0x326B218
	0x0326B1C0 LDR X8, [X19]
	0x0326B1C4 LDR X1, [X24]
	0x0326B1C8 LDRH W9, [X8 + 0x12E]
	0x0326B1CC CBZ X9, 0x326B1F0
	0x0326B1D0 LDR X10, [X8 + 0xB0]
	0x0326B1D4 ADD X10, X10, 0x8
	0x0326B1D8 LDUR X11, [X10 - 0x8]
	0x0326B1DC CMP X11, X1
	0x0326B1E0 B.EQ 0x326B200
	0x0326B1E4 SUBS X9, X9, 0x1
	0x0326B1E8 ADD X10, X10, 0x10
	0x0326B1EC B.NE 0x326B1D8
	0x0326B1F0 MOV X0, X19
	0x0326B1F4 MOV W2, W31
	0x0326B1F8 BL 0x1C5C788
	0x0326B1FC B 0x326B20C
	0x0326B200 LDRSW X9, [X10]
	0x0326B204 ADD X8, X8, X9, 0x4, LSL
	0x0326B208 ADD X0, X8, 0x138
	0x0326B20C LDP X8, X1, [X0]
	0x0326B210 MOV X0, X19
	0x0326B214 BLR X8
	0x0326B218 CBNZ X20, 0x326B224
	0x0326B21C MOV X0, X21
	0x0326B220 BL 0x1D2C690
	0x0326B224 MOV X0, X20
	0x0326B228 BL 0x1C16F18
	0x0326B22C BL 0x1990590
	0x0326B230 STR X30, [X31 - 0x20]!
	0x0326B234 STP X20, X19, [X31 + 0x10]
	0x0326B238 CMP W0, 0x40
	0x0326B23C B.CS 0x326B258
	0x0326B240 ORN W8, W31, W0, 0x0
	0x0326B244 ANDS W31, W8, 0x30
	0x0326B248 B.EQ 0x326B2B4
	0x0326B24C LDP X20, X19, [X31 + 0x10]
	0x0326B250 LDR X30, [X31], #0x20
	0x0326B254 RET
	0x0326B258 ADRP X0, 0xE90000
	0x0326B25C LDR X0, [X0 + 0x578]
	0x0326B260 BL 0x1C16D08
	0x0326B264 BL 0x1C16F10
	0x0326B268 MOV X19, X0
	0x0326B26C ADRP X0, 0xEB8000
	0x0326B270 LDR X0, [X0 + 0x958]
	0x0326B274 BL 0x1C16D08
	0x0326B278 MOV X20, X0
	0x0326B27C ADRP X0, 0xEB8000
	0x0326B280 LDR X0, [X0 + 0x960]
	0x0326B284 BL 0x1C16D08
	0x0326B288 MOV X2, X0
	0x0326B28C MOV X0, X19
	0x0326B290 MOV X1, X20
	0x0326B294 MOV X3, X31
	0x0326B298 BL 0x330E16C
	0x0326B29C ADRP X0, 0xEB8000
	0x0326B2A0 LDR X0, [X0 + 0x968]
	0x0326B2A4 BL 0x1C16D08
	0x0326B2A8 MOV X1, X0
	0x0326B2AC MOV X0, X19
	0x0326B2B0 BL 0x1C16DEC
	0x0326B2B4 MOVZ W8, 0x30
	0x0326B2B8 STR W8, [X31 + 0xC]
	0x0326B2BC ADRP X0, 0xEB8000
	0x0326B2C0 LDR X0, [X0 + 0x970]
	0x0326B2C4 BL 0x1C16D08
	0x0326B2C8 ADD X1, X31, 0xC
	0x0326B2CC BL 0x1C16E04
	0x0326B2D0 MOV X19, X0
	0x0326B2D4 ADRP X0, 0xEB8000
	0x0326B2D8 LDR X0, [X0 + 0x978]
	0x0326B2DC BL 0x1C16D08
	0x0326B2E0 MOV X1, X19
	0x0326B2E4 MOV X2, X31
	0x0326B2E8 BL 0x32094D4
	0x0326B2EC MOV X19, X0
	0x0326B2F0 ADRP X0, 0xE90000
	0x0326B2F4 LDR X0, [X0 + 0x578]
	0x0326B2F8 BL 0x1C16D08
	0x0326B2FC BL 0x1C16F10
	0x0326B300 MOV X20, X0
	0x0326B304 ADRP X0, 0xEB8000
	0x0326B308 LDR X0, [X0 + 0x960]
	0x0326B30C BL 0x1C16D08
	0x0326B310 MOV X2, X0
	0x0326B314 MOV X0, X20
	0x0326B318 MOV X1, X19
	0x0326B31C MOV X3, X31
	0x0326B320 BL 0x330E16C
	0x0326B324 ADRP X0, 0xEB8000
	0x0326B328 LDR X0, [X0 + 0x968]
	0x0326B32C BL 0x1C16D08
	0x0326B330 MOV X1, X0
	0x0326B334 MOV X0, X20
	0x0326B338 BL 0x1C16DEC
	0x0326B33C STR X30, [X31 - 0x30]!
	0x0326B340 STP X22, X21, [X31 + 0x10]
	0x0326B344 STP X20, X19, [X31 + 0x20]
	0x0326B348 ADRP X22, 0x1171000
	0x0326B34C LDRB W8, [X22 + 0x592]
	0x0326B350 MOV W19, W2
	0x0326B354 MOV X20, X1
	0x0326B358 MOV X21, X0
	0x0326B35C TBNZ X8, 0x0, 0x326B374
	0x0326B360 ADRP X0, 0xEB8000
	0x0326B364 LDR X0, [X0 + 0x938]
	0x0326B368 BL 0x1C16CF4
	0x0326B36C MOVZ W8, 0x1
	0x0326B370 STRB W8, [X22 + 0x592]
	0x0326B374 BL 0x326C598
	0x0326B378 CBZ X0, 0x326B400
	0x0326B37C ADRP X10, 0xEB8000
	0x0326B380 LDR X8, [X0]
	0x0326B384 LDR X10, [X10 + 0x938]
	0x0326B388 MOV X22, X0
	0x0326B38C LDRH W9, [X8 + 0x12E]
	0x0326B390 LDR X1, [X10]
	0x0326B394 CBZ X9, 0x326B3B8
	0x0326B398 LDR X10, [X8 + 0xB0]
	0x0326B39C ADD X10, X10, 0x8
	0x0326B3A0 LDUR X11, [X10 - 0x8]
	0x0326B3A4 CMP X11, X1
	0x0326B3A8 B.EQ 0x326B3C8
	0x0326B3AC SUBS X9, X9, 0x1
	0x0326B3B0 ADD X10, X10, 0x10
	0x0326B3B4 B.NE 0x326B3A0
	0x0326B3B8 MOVZ W2, 0x1
	0x0326B3BC MOV X0, X22
	0x0326B3C0 BL 0x1C5C788
	0x0326B3C4 B 0x326B3D8
	0x0326B3C8 LDR W9, [X10]
	0x0326B3CC ADD W9, W9, 0x1
	0x0326B3D0 ADD X8, X8, W9, 0x4, SXTW
	0x0326B3D4 ADD X0, X8, 0x138
	0x0326B3D8 LDP X6, X5, [X0]
	0x0326B3DC MOV X0, X22
	0x0326B3E0 MOV X1, X21
	0x0326B3E4 MOV X2, X20
	0x0326B3E8 MOV W3, W19
	0x0326B3EC LDP X20, X19, [X31 + 0x20]
	0x0326B3F0 LDP X22, X21, [X31 + 0x10]
	0x0326B3F4 MOV W4, W31
	0x0326B3F8 LDR X30, [X31], #0x30
	0x0326B3FC BR X6
	0x0326B400 BL 0x1C16F20
	0x0326B404 STR X30, [X31 - 0x30]!
	0x0326B408 STP X22, X21, [X31 + 0x10]
	0x0326B40C STP X20, X19, [X31 + 0x20]
	0x0326B410 ADRP X22, 0x1171000
	0x0326B414 ADRP X21, 0xE89000
	0x0326B418 LDRB W8, [X22 + 0x585]
	0x0326B41C LDR X21, [X21 + 0x9F0]
	0x0326B420 MOV X20, X1
	0x0326B424 MOV X19, X0
	0x0326B428 TBNZ X8, 0x0, 0x326B440
	0x0326B42C ADRP X0, 0xE89000
	0x0326B430 LDR X0, [X0 + 0x9F0]
	0x0326B434 BL 0x1C16CF4
	0x0326B438 MOVZ W8, 0x1
	0x0326B43C STRB W8, [X22 + 0x585]
	0x0326B440 LDR X0, [X21]
	0x0326B444 LDR W8, [X0 + 0xE0]
	0x0326B448 CBNZ W8, 0x326B454
	0x0326B44C BL 0x1C16DFC
	0x0326B450 LDR X0, [X21]
	0x0326B454 LDR X8, [X0 + 0xB8]
	0x0326B458 MOV X1, X31
	0x0326B45C LDR X8, [X8 + 0x10]
	0x0326B460 STR X8, [X19 + 0x50]
	0x0326B464 LDR X8, [X0 + 0xB8]
	0x0326B468 MOV X0, X19
	0x0326B46C LDR X8, [X8 + 0x10]
	0x0326B470 STR X8, [X19 + 0x58]
	0x0326B474 BL 0x33BDD8C
	0x0326B478 CBZ X20, 0x326B498
	0x0326B47C MOV X0, X20
	0x0326B480 BL 0x326B4E0
	0x0326B484 STR X0, [X19 + 0x10]
	0x0326B488 LDP X20, X19, [X31 + 0x20]
	0x0326B48C LDP X22, X21, [X31 + 0x10]
	0x0326B490 LDR X30, [X31], #0x30
	0x0326B494 RET
	0x0326B498 ADRP X0, 0xE8D000
	0x0326B49C LDR X0, [X0 + 0x528]
	0x0326B4A0 BL 0x1C16D08
	0x0326B4A4 BL 0x1C16F10
	0x0326B4A8 MOV X19, X0
	0x0326B4AC ADRP X0, 0xEB8000
	0x0326B4B0 LDR X0, [X0 + 0x980]
	0x0326B4B4 BL 0x1C16D08
	0x0326B4B8 MOV X1, X0
	0x0326B4BC MOV X0, X19
	0x0326B4C0 MOV X2, X31
	0x0326B4C4 BL 0x330E100
	0x0326B4C8 ADRP X0, 0xEB8000
	0x0326B4CC LDR X0, [X0 + 0x988]
	0x0326B4D0 BL 0x1C16D08
	0x0326B4D4 MOV X1, X0
	0x0326B4D8 MOV X0, X19
	0x0326B4DC BL 0x1C16DEC
	0x0326B4E0 STR X30, [X31 - 0x20]!
	0x0326B4E4 STP X20, X19, [X31 + 0x10]
	0x0326B4E8 ADRP X20, 0x1171000
	0x0326B4EC LDRB W8, [X20 + 0x58F]
	0x0326B4F0 MOV X19, X0
	0x0326B4F4 TBNZ X8, 0x0, 0x326B50C
	0x0326B4F8 ADRP X0, 0xEB8000
	0x0326B4FC LDR X0, [X0 + 0x938]
	0x0326B500 BL 0x1C16CF4
	0x0326B504 MOVZ W8, 0x1
	0x0326B508 STRB W8, [X20 + 0x58F]
	0x0326B50C BL 0x326C598
	0x0326B510 CBZ X0, 0x326B58C
	0x0326B514 ADRP X10, 0xEB8000
	0x0326B518 LDR X8, [X0]
	0x0326B51C LDR X10, [X10 + 0x938]
	0x0326B520 MOV X20, X0
	0x0326B524 LDRH W9, [X8 + 0x12E]
	0x0326B528 LDR X1, [X10]
	0x0326B52C CBZ X9, 0x326B550
	0x0326B530 LDR X10, [X8 + 0xB0]
	0x0326B534 ADD X10, X10, 0x8
	0x0326B538 LDUR X11, [X10 - 0x8]
	0x0326B53C CMP X11, X1
	0x0326B540 B.EQ 0x326B560
	0x0326B544 SUBS X9, X9, 0x1
	0x0326B548 ADD X10, X10, 0x10
	0x0326B54C B.NE 0x326B538
	0x0326B550 MOVZ W2, 0x2
	0x0326B554 MOV X0, X20
	0x0326B558 BL 0x1C5C788
	0x0326B55C B 0x326B570
	0x0326B560 LDR W9, [X10]
	0x0326B564 ADD W9, W9, 0x2
	0x0326B568 ADD X8, X8, W9, 0x4, SXTW
	0x0326B56C ADD X0, X8, 0x138
	0x0326B570 LDP X4, X3, [X0]
	0x0326B574 MOV X0, X20
	0x0326B578 MOV X1, X19
	0x0326B57C LDP X20, X19, [X31 + 0x10]
	0x0326B580 MOV W2, W31
	0x0326B584 LDR X30, [X31], #0x20
	0x0326B588 BR X4
	0x0326B58C BL 0x1C16F20
	0x0326B590 STP X30, X19, [X31 - 0x10]!
	0x0326B594 BL 0x326AD54
	0x0326B598 ADRP X0, 0xEB3000
	0x0326B59C LDR X0, [X0 + 0xC50]
	0x0326B5A0 BL 0x1C16D08
	0x0326B5A4 BL 0x1C16F10
	0x0326B5A8 MOV X1, X31
	0x0326B5AC MOV X19, X0
	0x0326B5B0 BL 0x338E344
	0x0326B5B4 ADRP X0, 0xEB8000
	0x0326B5B8 LDR X0, [X0 + 0x990]
	0x0326B5BC BL 0x1C16D08
	0x0326B5C0 MOV X1, X0
	0x0326B5C4 MOV X0, X19
	0x0326B5C8 BL 0x1C16DEC
	0x0326B5CC STP X30, X19, [X31 - 0x10]!
	0x0326B5D0 ADRP X0, 0xEB3000
	0x0326B5D4 LDR X0, [X0 + 0xC50]
	0x0326B5D8 BL 0x1C16D08
	0x0326B5DC BL 0x1C16F10
	0x0326B5E0 MOV X1, X31
	0x0326B5E4 MOV X19, X0
	0x0326B5E8 BL 0x338E344
	0x0326B5EC ADRP X0, 0xEB8000
	0x0326B5F0 LDR X0, [X0 + 0x998]
	0x0326B5F4 BL 0x1C16D08
	0x0326B5F8 MOV X1, X0
	0x0326B5FC MOV X0, X19
	0x0326B600 BL 0x1C16DEC
	0x0326B604 STP X30, X19, [X31 - 0x10]!
	0x0326B608 ADRP X0, 0xEB3000
	0x0326B60C LDR X0, [X0 + 0xC50]
	0x0326B610 BL 0x1C16D08
	0x0326B614 BL 0x1C16F10
	0x0326B618 MOV X1, X31
	0x0326B61C MOV X19, X0
	0x0326B620 BL 0x338E344
	0x0326B624 ADRP X0, 0xEB8000
	0x0326B628 LDR X0, [X0 + 0x9A0]
	0x0326B62C BL 0x1C16D08
	0x0326B630 MOV X1, X0
	0x0326B634 MOV X0, X19
	0x0326B638 BL 0x1C16DEC
	0x0326B63C STR X30, [X31 - 0x20]!
	0x0326B640 STP X20, X19, [X31 + 0x10]
	0x0326B644 MOV X19, X0
	0x0326B648 LDR X0, [X0 + 0x10]
	0x0326B64C BL 0x326C1D8
	0x0326B650 LDR X20, [X19 + 0x28]
	0x0326B654 BL 0x1C16D44
	0x0326B658 CBNZ X20, 0x326B67C
	0x0326B65C LDR X0, [X19 + 0x10]
	0x0326B660 CBZ X0, 0x326B68C
	0x0326B664 LDR X8, [X0]
	0x0326B668 LDP X9, X1, [X8 + 0x1A8]
	0x0326B66C BLR X9
	0x0326B670 MOV X20, X0
	0x0326B674 BL 0x1C16D44
	0x0326B678 STR X20, [X19 + 0x28]
	0x0326B67C MOV X0, X20
	0x0326B680 LDP X20, X19, [X31 + 0x10]
	0x0326B684 LDR X30, [X31], #0x20
	0x0326B688 RET
	0x0326B68C BL 0x1C16F20
	0x0326B690 LDR X0, [X0 + 0x10]
	0x0326B694 B 0x326C1D8
	0x0326B698 STR X30, [X31 - 0x20]!

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {380}
	004 Move W8, [X1+24]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Add W10, W2, 1
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Add W12, W2, 2
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Add W11, W2, 3
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Compare X0, 0
	013 JumpIfEqual {380}
	014 Move W9, [X0+24]
	015 Compare W9, 0
	016 JumpIfEqual {379}
	017 Add X13, X1, W2
	018 Add X10, X1, W10
	019 Move W13, [X13+32]
	020 Add X14, X1, W12
	021 Move W10, [X10+32]
	022 Add X11, X1, W11
	023 Move W14, [X14+32]
	024 Move W11, [X11+32]
	025 Move W13, W13
	026 ShiftRight W13, 8
	027 And W13, W13, 127
	028 NotImplemented "Instruction BFM not yet implemented."
	029 Add W12, W2, 4
	030 NotImplemented "Instruction BFM not yet implemented."
	031 Or W10, W13, W11
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move [X0+32], W10
	034 Add W13, W2, 5
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Add W10, W2, 6
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Add W11, W2, 7
	039 NotImplemented "Instruction CMP not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Add X14, X1, W12
	042 Add X13, X1, W13
	043 Move W14, [X14+32]
	044 Add X15, X1, 32
	045 Move W13, [X13+32]
	046 Move W10, [X15]
	047 Move W11, [X15]
	048 Move W14, W14
	049 ShiftRight W14, 8
	050 And W14, W14, 127
	051 NotImplemented "Instruction BFM not yet implemented."
	052 Add W12, W2, 8
	053 NotImplemented "Instruction BFM not yet implemented."
	054 Or W10, W14, W11
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move [X0+36], W10
	057 Add W13, W2, 9
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Add W10, W2, 10
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Add W11, W2, 11
	062 NotImplemented "Instruction CMP not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Add X14, X1, W12
	065 Add X13, X1, W13
	066 Move W14, [X14+32]
	067 Add X15, X1, 32
	068 Move W13, [X13+32]
	069 Move W10, [X15]
	070 Move W11, [X15]
	071 Move W14, W14
	072 ShiftRight W14, 8
	073 And W14, W14, 127
	074 NotImplemented "Instruction BFM not yet implemented."
	075 Add W12, W2, 12
	076 NotImplemented "Instruction BFM not yet implemented."
	077 Or W10, W14, W11
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move [X0+40], W10
	080 Add W13, W2, 13
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Add W10, W2, 14
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Add W11, W2, 15
	085 NotImplemented "Instruction CMP not yet implemented."
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Add X14, X1, W12
	088 Add X13, X1, W13
	089 Move W14, [X14+32]
	090 Add X15, X1, 32
	091 Move W13, [X13+32]
	092 Move W10, [X15]
	093 Move W11, [X15]
	094 Move W14, W14
	095 ShiftRight W14, 8
	096 And W14, W14, 127
	097 NotImplemented "Instruction BFM not yet implemented."
	098 Add W12, W2, 16
	099 NotImplemented "Instruction BFM not yet implemented."
	100 Or W10, W14, W11
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move [X0+44], W10
	103 Add W13, W2, 17
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Add W10, W2, 18
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Add W11, W2, 19
	108 NotImplemented "Instruction CMP not yet implemented."
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Add X14, X1, W12
	111 Add X13, X1, W13
	112 Move W14, [X14+32]
	113 Add X15, X1, 32
	114 Move W13, [X13+32]
	115 Move W10, [X15]
	116 Move W11, [X15]
	117 Move W14, W14
	118 ShiftRight W14, 8
	119 And W14, W14, 127
	120 NotImplemented "Instruction BFM not yet implemented."
	121 Add W12, W2, 20
	122 NotImplemented "Instruction BFM not yet implemented."
	123 Or W10, W14, W11
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move [X0+48], W10
	126 Add W13, W2, 21
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Add W10, W2, 22
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Add W11, W2, 23
	131 NotImplemented "Instruction CMP not yet implemented."
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Add X14, X1, W12
	134 Add X13, X1, W13
	135 Move W14, [X14+32]
	136 Add X15, X1, 32
	137 Move W13, [X13+32]
	138 Move W10, [X15]
	139 Move W11, [X15]
	140 Move W14, W14
	141 ShiftRight W14, 8
	142 And W14, W14, 127
	143 NotImplemented "Instruction BFM not yet implemented."
	144 Add W12, W2, 24
	145 NotImplemented "Instruction BFM not yet implemented."
	146 Or W10, W14, W11
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move [X0+52], W10
	149 Add W13, W2, 25
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Add W10, W2, 26
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Add W11, W2, 27
	154 NotImplemented "Instruction CMP not yet implemented."
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Add X14, X1, W12
	157 Add X13, X1, W13
	158 Move W14, [X14+32]
	159 Add X15, X1, 32
	160 Move W13, [X13+32]
	161 Move W10, [X15]
	162 Move W11, [X15]
	163 Move W14, W14
	164 ShiftRight W14, 8
	165 And W14, W14, 127
	166 NotImplemented "Instruction BFM not yet implemented."
	167 Add W12, W2, 28
	168 NotImplemented "Instruction BFM not yet implemented."
	169 Or W10, W14, W11
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Move [X0+56], W10
	172 Add W13, W2, 29
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Add W10, W2, 30
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Add W11, W2, 31
	177 NotImplemented "Instruction CMP not yet implemented."
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Add X14, X1, W12
	180 Add X13, X1, W13
	181 Move W14, [X14+32]
	182 Add X15, X1, 32
	183 Move W13, [X13+32]
	184 Move W10, [X15]
	185 Move W11, [X15]
	186 Move W14, W14
	187 ShiftRight W14, 8
	188 And W14, W14, 127
	189 NotImplemented "Instruction BFM not yet implemented."
	190 Add W12, W2, 32
	191 NotImplemented "Instruction BFM not yet implemented."
	192 Or W10, W14, W11
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Move [X0+60], W10
	195 Add W13, W2, 33
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Add W10, W2, 34
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Add W11, W2, 35
	200 NotImplemented "Instruction CMP not yet implemented."
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Add X14, X1, W12
	203 Add X13, X1, W13
	204 Move W14, [X14+32]
	205 Add X15, X1, 32
	206 Move W13, [X13+32]
	207 Move W10, [X15]
	208 Move W11, [X15]
	209 Move W14, W14
	210 ShiftRight W14, 8
	211 And W14, W14, 127
	212 NotImplemented "Instruction BFM not yet implemented."
	213 Add W12, W2, 36
	214 NotImplemented "Instruction BFM not yet implemented."
	215 Or W10, W14, W11
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Move [X0+64], W10
	218 Add W13, W2, 37
	219 NotImplemented "Instruction CMP not yet implemented."
	220 Add W10, W2, 38
	221 NotImplemented "Instruction CMP not yet implemented."
	222 Add W11, W2, 39
	223 NotImplemented "Instruction CMP not yet implemented."
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Add X14, X1, W12
	226 Add X13, X1, W13
	227 Move W14, [X14+32]
	228 Add X15, X1, 32
	229 Move W13, [X13+32]
	230 Move W10, [X15]
	231 Move W11, [X15]
	232 Move W14, W14
	233 ShiftRight W14, 8
	234 And W14, W14, 127
	235 NotImplemented "Instruction BFM not yet implemented."
	236 Add W12, W2, 40
	237 NotImplemented "Instruction BFM not yet implemented."
	238 Or W10, W14, W11
	239 NotImplemented "Instruction CMP not yet implemented."
	240 Move [X0+68], W10
	241 Add W13, W2, 41
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Add W10, W2, 42
	244 NotImplemented "Instruction CMP not yet implemented."
	245 Add W11, W2, 43
	246 NotImplemented "Instruction CMP not yet implemented."
	247 NotImplemented "Instruction CMP not yet implemented."
	248 Add X14, X1, W12
	249 Add X13, X1, W13
	250 Move W14, [X14+32]
	251 Add X15, X1, 32
	252 Move W13, [X13+32]
	253 Move W10, [X15]
	254 Move W11, [X15]
	255 Move W14, W14
	256 ShiftRight W14, 8
	257 And W14, W14, 127
	258 NotImplemented "Instruction BFM not yet implemented."
	259 Add W12, W2, 44
	260 NotImplemented "Instruction BFM not yet implemented."
	261 Or W10, W14, W11
	262 NotImplemented "Instruction CMP not yet implemented."
	263 Move [X0+72], W10
	264 Add W13, W2, 45
	265 NotImplemented "Instruction CMP not yet implemented."
	266 Add W10, W2, 46
	267 NotImplemented "Instruction CMP not yet implemented."
	268 Add W11, W2, 47
	269 NotImplemented "Instruction CMP not yet implemented."
	270 NotImplemented "Instruction CMP not yet implemented."
	271 Add X14, X1, W12
	272 Add X13, X1, W13
	273 Move W14, [X14+32]
	274 Add X15, X1, 32
	275 Move W13, [X13+32]
	276 Move W10, [X15]
	277 Move W11, [X15]
	278 Move W14, W14
	279 ShiftRight W14, 8
	280 And W14, W14, 127
	281 NotImplemented "Instruction BFM not yet implemented."
	282 Add W12, W2, 48
	283 NotImplemented "Instruction BFM not yet implemented."
	284 Or W10, W14, W11
	285 NotImplemented "Instruction CMP not yet implemented."
	286 Move [X0+76], W10
	287 Add W13, W2, 49
	288 NotImplemented "Instruction CMP not yet implemented."
	289 Add W10, W2, 50
	290 NotImplemented "Instruction CMP not yet implemented."
	291 Add W11, W2, 51
	292 NotImplemented "Instruction CMP not yet implemented."
	293 NotImplemented "Instruction CMP not yet implemented."
	294 Add X14, X1, W12
	295 Add X13, X1, W13
	296 Move W14, [X14+32]
	297 Add X15, X1, 32
	298 Move W13, [X13+32]
	299 Move W10, [X15]
	300 Move W11, [X15]
	301 Move W14, W14
	302 ShiftRight W14, 8
	303 And W14, W14, 127
	304 NotImplemented "Instruction BFM not yet implemented."
	305 Add W12, W2, 52
	306 NotImplemented "Instruction BFM not yet implemented."
	307 Or W10, W14, W11
	308 NotImplemented "Instruction CMP not yet implemented."
	309 Move [X0+80], W10
	310 Add W13, W2, 53
	311 NotImplemented "Instruction CMP not yet implemented."
	312 Add W10, W2, 54
	313 NotImplemented "Instruction CMP not yet implemented."
	314 Add W11, W2, 55
	315 NotImplemented "Instruction CMP not yet implemented."
	316 NotImplemented "Instruction CMP not yet implemented."
	317 Add X14, X1, W12
	318 Add X13, X1, W13
	319 Move W14, [X14+32]
	320 Add X15, X1, 32
	321 Move W13, [X13+32]
	322 Move W10, [X15]
	323 Move W11, [X15]
	324 Move W14, W14
	325 ShiftRight W14, 8
	326 And W14, W14, 127
	327 NotImplemented "Instruction BFM not yet implemented."
	328 Add W12, W2, 56
	329 NotImplemented "Instruction BFM not yet implemented."
	330 Or W10, W14, W11
	331 NotImplemented "Instruction CMP not yet implemented."
	332 Move [X0+84], W10
	333 Add W13, W2, 57
	334 NotImplemented "Instruction CMP not yet implemented."
	335 Add W10, W2, 58
	336 NotImplemented "Instruction CMP not yet implemented."
	337 Add W11, W2, 59
	338 NotImplemented "Instruction CMP not yet implemented."
	339 NotImplemented "Instruction CMP not yet implemented."
	340 Add X14, X1, W12
	341 Add X13, X1, W13
	342 Move W14, [X14+32]
	343 Add X15, X1, 32
	344 Move W13, [X13+32]
	345 Move W10, [X15]
	346 Move W11, [X15]
	347 Move W14, W14
	348 ShiftRight W14, 8
	349 And W14, W14, 127
	350 NotImplemented "Instruction BFM not yet implemented."
	351 Add W12, W2, 60
	352 NotImplemented "Instruction BFM not yet implemented."
	353 Or W10, W14, W11
	354 NotImplemented "Instruction CMP not yet implemented."
	355 Move [X0+88], W10
	356 Add W13, W2, 61
	357 NotImplemented "Instruction CMP not yet implemented."
	358 Add W10, W2, 62
	359 NotImplemented "Instruction CMP not yet implemented."
	360 Add W11, W2, 63
	361 NotImplemented "Instruction CMP not yet implemented."
	362 NotImplemented "Instruction CMP not yet implemented."
	363 Add X8, X1, W12
	364 Add X9, X1, W13
	365 Move W8, [X8+32]
	366 Move W9, [X9+32]
	367 Add X12, X1, 32
	368 Move W10, [X12]
	369 Move W11, [X12]
	370 Move W8, W8
	371 ShiftRight W8, 8
	372 And W8, W8, 127
	373 NotImplemented "Instruction BFM not yet implemented."
	374 NotImplemented "Instruction BFM not yet implemented."
	375 Or W8, W8, W11
	376 Move [X0+92], W8
	377 Move X30, [X31+16]
	378 Return 
	379 Call 0x1C17F28
	380 Call 0x1C17F20

Method: System.Void FillBuff(System.UInt32[] buff)

Disassembly:
	0x0326B69C STP X20, X19, [X31 + 0x10]
	0x0326B6A0 MOV X19, X0
	0x0326B6A4 LDR X0, [X0 + 0x10]
	0x0326B6A8 BL 0x326C1D8
	0x0326B6AC LDR X20, [X19 + 0x30]
	0x0326B6B0 BL 0x1C16D44
	0x0326B6B4 CBNZ X20, 0x326B6D8
	0x0326B6B8 LDR X0, [X19 + 0x10]
	0x0326B6BC CBZ X0, 0x326B6E8
	0x0326B6C0 LDR X8, [X0]
	0x0326B6C4 LDP X9, X1, [X8 + 0x1B8]
	0x0326B6C8 BLR X9
	0x0326B6CC MOV X20, X0
	0x0326B6D0 BL 0x1C16D44
	0x0326B6D4 STR X20, [X19 + 0x30]
	0x0326B6D8 MOV X0, X20
	0x0326B6DC LDP X20, X19, [X31 + 0x10]
	0x0326B6E0 LDR X30, [X31], #0x20
	0x0326B6E4 RET
	0x0326B6E8 BL 0x1C16F20
	0x0326B6EC LDR X8, [X0]
	0x0326B6F0 MOVZ W1, 0x1
	0x0326B6F4 LDP X3, X2, [X8 + 0x1B8]
	0x0326B6F8 BR X3
	0x0326B6FC TBZ X1, 0x0, 0x326B70C
	0x0326B700 LDR X8, [X0]
	0x0326B704 LDP X2, X1, [X8 + 0x1A8]
	0x0326B708 BR X2
	0x0326B70C RET
	0x0326B710 STP X30, X21, [X31 - 0x20]!
	0x0326B714 STP X20, X19, [X31 + 0x10]
	0x0326B718 ADRP X21, 0x1171000
	0x0326B71C LDRB W8, [X21 + 0x586]
	0x0326B720 MOV X19, X1
	0x0326B724 MOV X20, X0
	0x0326B728 TBNZ X8, 0x0, 0x326B740
	0x0326B72C ADRP X0, 0xEB8000
	0x0326B730 LDR X0, [X0 + 0x9A8]
	0x0326B734 BL 0x1C16CF4
	0x0326B738 MOVZ W8, 0x1
	0x0326B73C STRB W8, [X21 + 0x586]
	0x0326B740 CBZ X19, 0x326B778
	0x0326B744 ADRP X8, 0xEB8000
	0x0326B748 LDR X8, [X8 + 0x9A8]
	0x0326B74C LDR X9, [X19]
	0x0326B750 LDR X8, [X8]
	0x0326B754 LDRB W11, [X9 + 0x130]
	0x0326B758 LDRB W10, [X8 + 0x130]
	0x0326B75C CMP W11, W10
	0x0326B760 B.CC 0x326B778
	0x0326B764 LDR X9, [X9 + 0xC8]
	0x0326B768 ADD X9, X9, X10, 0x3, LSL
	0x0326B76C LDUR X9, [X9 - 0x8]
	0x0326B770 CMP X9, X8
	0x0326B774 B.EQ 0x326B788
	0x0326B778 LDP X20, X19, [X31 + 0x10]
	0x0326B77C MOV W0, W31
	0x0326B780 LDP X30, X21, [X31], #0x20
	0x0326B784 RET
	0x0326B788 LDR X8, [X20]
	0x0326B78C MOV X0, X20
	0x0326B790 MOV X1, X19
	0x0326B794 LDP X20, X19, [X31 + 0x10]
	0x0326B798 LDP X3, X2, [X8 + 0x1C8]
	0x0326B79C LDP X30, X21, [X31], #0x20
	0x0326B7A0 BR X3
	0x0326B7A4 STP X30, X21, [X31 - 0x20]!
	0x0326B7A8 STP X20, X19, [X31 + 0x10]
	0x0326B7AC CBZ X1, 0x326B868
	0x0326B7B0 LDR X8, [X0 + 0x10]
	0x0326B7B4 MOV X20, X1
	0x0326B7B8 MOV X19, X0
	0x0326B7BC CBZ X8, 0x326B870
	0x0326B7C0 MOV X0, X19
	0x0326B7C4 BL 0x326B63C
	0x0326B7C8 MOV X21, X0
	0x0326B7CC MOV X0, X20
	0x0326B7D0 BL 0x326B63C
	0x0326B7D4 CBZ X21, 0x326B898
	0x0326B7D8 MOV X1, X0
	0x0326B7DC MOV X0, X21
	0x0326B7E0 MOV X2, X31
	0x0326B7E4 BL 0x322693C
	0x0326B7E8 TBZ X0, 0x0, 0x326B868
	0x0326B7EC MOV X0, X19
	0x0326B7F0 BL 0x326B89C
	0x0326B7F4 MOV X19, X0
	0x0326B7F8 MOV X0, X20
	0x0326B7FC BL 0x326B89C
	0x0326B800 CBZ X19, 0x326B898
	0x0326B804 CBZ X0, 0x326B898
	0x0326B808 LDR W8, [X19 + 0x18]
	0x0326B80C LDR W9, [X0 + 0x18]
	0x0326B810 CMP W8, W9
	0x0326B814 B.NE 0x326B868
	0x0326B818 CMP W8, 0x1
	0x0326B81C B.LT 0x326B88C

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {88}
	004 Move W8, [X0+24]
	005 Move X10, X31
	006 Add X9, X0, 64
	007 Add X11, X10, 13
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Add X11, X10, 16
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move W13, [X9+20]
	012 Move W12, [X9]
	013 NotImplemented "Instruction LDUR not yet implemented."
	014 NotImplemented "Instruction LDUR not yet implemented."
	015 Add X14, X10, 17
	016 Xor W15, W12, W13
	017 Xor W15, W15, W16
	018 Xor W11, W15, W11
	019 NotImplemented "Instruction EXTR not yet implemented."
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move [X9+32], W17
	022 Move W14, [X9+24]
	023 Move W11, [X9+4]
	024 NotImplemented "Instruction LDUR not yet implemented."
	025 NotImplemented "Instruction LDUR not yet implemented."
	026 Add X1, X10, 18
	027 Xor W0, W11, W14
	028 Xor W0, W0, W3
	029 Xor W15, W0, W15
	030 NotImplemented "Instruction EXTR not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move [X9+36], W0
	033 Move W15, [X9+28]
	034 Move W1, [X9+8]
	035 NotImplemented "Instruction LDUR not yet implemented."
	036 Add X5, X10, 19
	037 Xor W16, W15, W16
	038 Xor W16, W16, W1
	039 Xor W16, W16, W4
	040 NotImplemented "Instruction EXTR not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move [X9+40], W2
	043 Move W16, [X9+12]
	044 NotImplemented "Instruction LDUR not yet implemented."
	045 Xor W17, W3, W17
	046 Add X3, X10, 20
	047 Xor W16, W17, W16
	048 Xor W16, W16, W1
	049 NotImplemented "Instruction EXTR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move [X9+44], W16
	052 Move W3, [X9+16]
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 Xor W0, W4, W0
	055 Add X4, X10, 21
	056 Xor W0, W0, W3
	057 Xor W0, W0, W17
	058 NotImplemented "Instruction EXTR not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move [X9+48], W3
	061 NotImplemented "Instruction LDUR not yet implemented."
	062 Xor W13, W2, W13
	063 Xor W13, W13, W1
	064 Add X2, X10, 22
	065 Xor W13, W13, W0
	066 NotImplemented "Instruction EXTR not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move [X9+52], W13
	069 Xor W12, W14, W12
	070 Xor W12, W12, W16
	071 Add X13, X10, 23
	072 Xor W12, W12, W17
	073 NotImplemented "Instruction EXTR not yet implemented."
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move [X9+56], W12
	076 Xor W12, W3, W15
	077 Xor W12, W12, W0
	078 Xor W11, W12, W11
	079 Add X13, X10, 16
	080 NotImplemented "Instruction EXTR not yet implemented."
	081 Add X10, X10, 8
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move [X9+60], W11
	084 Add X9, X9, 32
	085 Move X30, [X31+16]
	086 Return 
	087 Call 0x1C17F28
	088 Call 0x1C17F20

Method: System.Void ProcessFinalBlock(System.Byte[] inputBuffer, System.Int32 inputOffset, System.Int32 inputCount)

Disassembly:
	0x0326AE40 LDR X8, [X20 + 0x18]
	0x0326AE44 CBZ X8, 0x326AE54
	0x0326AE48 MOV X0, X20
	0x0326AE4C BL 0x326AE64
	0x0326AE50 STR X0, [X19 + 0x10]
	0x0326AE54 LDP X20, X19, [X31 + 0x20]
	0x0326AE58 LDP X22, X21, [X31 + 0x10]
	0x0326AE5C LDR X30, [X31], #0x30
	0x0326AE60 RET
	0x0326AE64 STR X30, [X31 - 0x20]!
	0x0326AE68 STP X20, X19, [X31 + 0x10]
	0x0326AE6C ADRP X20, 0x1172000
	0x0326AE70 LDRB W8, [X20 + 0x591]
	0x0326AE74 MOV X19, X0
	0x0326AE78 TBNZ X8, 0x0, 0x326AE90
	0x0326AE7C ADRP X0, 0xEB9000
	0x0326AE80 LDR X0, [X0 + 0x938]
	0x0326AE84 BL 0x1C16CF4
	0x0326AE88 MOVZ W8, 0x1
	0x0326AE8C STRB W8, [X20 + 0x591]
	0x0326AE90 BL 0x326C598
	0x0326AE94 CBZ X0, 0x326AF0C
	0x0326AE98 ADRP X10, 0xEB9000
	0x0326AE9C LDR X8, [X0]
	0x0326AEA0 LDR X10, [X10 + 0x938]
	0x0326AEA4 MOV X20, X0
	0x0326AEA8 LDRH W9, [X8 + 0x12E]
	0x0326AEAC LDR X1, [X10]
	0x0326AEB0 CBZ X9, 0x326AED4
	0x0326AEB4 LDR X10, [X8 + 0xB0]
	0x0326AEB8 ADD X10, X10, 0x8
	0x0326AEBC LDUR X11, [X10 - 0x8]
	0x0326AEC0 CMP X11, X1
	0x0326AEC4 B.EQ 0x326AEE4
	0x0326AEC8 SUBS X9, X9, 0x1
	0x0326AECC ADD X10, X10, 0x10
	0x0326AED0 B.NE 0x326AEBC
	0x0326AED4 MOV X0, X20
	0x0326AED8 MOV W2, W31
	0x0326AEDC BL 0x1C5C788
	0x0326AEE0 B 0x326AEF0
	0x0326AEE4 LDRSW X9, [X10]
	0x0326AEE8 ADD X8, X8, X9, 0x4, LSL
	0x0326AEEC ADD X0, X8, 0x138
	0x0326AEF0 LDP X4, X3, [X0]
	0x0326AEF4 MOV X0, X20
	0x0326AEF8 MOV X1, X19
	0x0326AEFC LDP X20, X19, [X31 + 0x10]
	0x0326AF00 MOV W2, W31
	0x0326AF04 LDR X30, [X31], #0x20
	0x0326AF08 BR X4
	0x0326AF0C BL 0x1C16F20
	0x0326AF10 STR X30, [X31 - 0x30]!
	0x0326AF14 STP X22, X21, [X31 + 0x10]
	0x0326AF18 STP X20, X19, [X31 + 0x20]
	0x0326AF1C ADRP X22, 0x1172000
	0x0326AF20 ADRP X21, 0xE8A000
	0x0326AF24 LDRB W8, [X22 + 0x583]
	0x0326AF28 LDR X21, [X21 + 0x9F0]
	0x0326AF2C MOV X20, X1
	0x0326AF30 MOV X19, X0
	0x0326AF34 TBNZ X8, 0x0, 0x326AF4C
	0x0326AF38 ADRP X0, 0xE8A000
	0x0326AF3C LDR X0, [X0 + 0x9F0]
	0x0326AF40 BL 0x1C16CF4
	0x0326AF44 MOVZ W8, 0x1
	0x0326AF48 STRB W8, [X22 + 0x583]
	0x0326AF4C LDR X0, [X21]
	0x0326AF50 LDR W8, [X0 + 0xE0]
	0x0326AF54 CBNZ W8, 0x326AF60
	0x0326AF58 BL 0x1C16DFC
	0x0326AF5C LDR X0, [X21]
	0x0326AF60 LDR X8, [X0 + 0xB8]
	0x0326AF64 MOV X1, X31
	0x0326AF68 LDR X8, [X8 + 0x10]
	0x0326AF6C STR X8, [X19 + 0x50]
	0x0326AF70 LDR X8, [X0 + 0xB8]
	0x0326AF74 MOV X0, X19
	0x0326AF78 LDR X8, [X8 + 0x10]
	0x0326AF7C STR X8, [X19 + 0x58]
	0x0326AF80 BL 0x33BDD8C
	0x0326AF84 CBZ X20, 0x326AF9C
	0x0326AF88 LDR X8, [X20]
	0x0326AF8C MOV X0, X20
	0x0326AF90 LDP X9, X1, [X8 + 0x198]
	0x0326AF94 BLR X9
	0x0326AF98 B 0x326AFA0
	0x0326AF9C MOV X0, X31
	0x0326AFA0 STR X0, [X19 + 0x10]
	0x0326AFA4 LDP X20, X19, [X31 + 0x20]
	0x0326AFA8 LDP X22, X21, [X31 + 0x10]
	0x0326AFAC LDR X30, [X31], #0x30
	0x0326AFB0 RET
	0x0326AFB4 CBZ X0, 0x326AFC4
	0x0326AFB8 LDR X8, [X0]
	0x0326AFBC LDP X2, X1, [X8 + 0x198]
	0x0326AFC0 BR X2
	0x0326AFC4 RET
	0x0326AFC8 MOV X2, X31
	0x0326AFCC MOV W3, W31
	0x0326AFD0 B 0x326AFD4
	0x0326AFD4 STR X30, [X31 - 0x40]!
	0x0326AFD8 STP X24, X23, [X31 + 0x10]
	0x0326AFDC STP X22, X21, [X31 + 0x20]
	0x0326AFE0 STP X20, X19, [X31 + 0x30]
	0x0326AFE4 ADRP X24, 0x1172000
	0x0326AFE8 ADRP X23, 0xE8A000
	0x0326AFEC LDRB W8, [X24 + 0x584]
	0x0326AFF0 LDR X23, [X23 + 0x9F0]
	0x0326AFF4 MOV W20, W3
	0x0326AFF8 MOV X22, X2

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0x1173000
	013 Move W8, [X20+1402]
	014 Move W23, W3
	015 Move W25, W2
	016 Move X24, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0xE8A000
	023 Move X0, [X0+1560]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+1402], W8
	027 Move X8, [X19+24]
	028 Move W9, 120
	029 Add X26, X8, W23
	030 And W27, W26, 63
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move W8, 56
	033 NotImplemented "Instruction CSEL not yet implemented."
	034 Subtract W8, W28, W27
	035 Add W22, W8, W23
	036 Add W20, W22, 8
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X21, [X19+32]
	039 Move X8, 0xE8A000
	040 Move X8, [X8+1560]
	041 Move W1, W20
	042 Move X0, [X8]
	043 Call 0x1C17D6C
	044 Move X21, X0
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Compare X24, 0
	047 JumpIfEqual {123}
	048 Move X8, X31
	049 Move W9, W23
	050 Add X10, X21, 32
	051 Move W11, W25
	052 Move W13, [X24+24]
	053 Add X12, X11, X8
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Compare X21, 0
	056 JumpIfEqual {123}
	057 Move W13, [X21+24]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Add X12, X24, W12
	060 Move W12, [X12+32]
	061 Move [X10], W12
	062 Add X8, X8, 1
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Compare X21, 0
	065 JumpIfEqual {123}
	066 Move W8, [X21+24]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X9, W23
	069 Add W8, W23, 1
	070 Move W10, 128
	071 Add X9, X21, X9
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move [X9+32], W10
	074 Add X9, X21, W8
	075 NotImplemented "Instruction ORN not yet implemented."
	076 Add X9, X9, 32
	077 Add W10, W10, W28
	078 Move W11, [X21+24]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move [X9+1], W31
	081 Subtract W10, W10, 1
	082 Add W8, W8, 1
	083 Move X1, X26
	084 ShiftRight X1, 61
	085 And X1, X1, 0xFFFFFFF
	086 Move X2, X21
	087 Move W3, W22
	088 Call SHA1Internal.AddLength, X0, X1, X2, X3
	089 Move X0, X19
	090 Move X1, X21
	091 Move W2, W31
	092 Call SHA1Internal.ProcessBlock, X0, X1, X2
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X0, X19
	095 Move X1, X21
	096 Move X20, [X31+80]
	097 Move X19, [X31+88]
	098 Move X22, [X31+64]
	099 Move X21, [X31+72]
	100 Move X24, [X31+48]
	101 Move X23, [X31+56]
	102 Move X26, [X31+32]
	103 Move X25, [X31+40]
	104 Move X28, [X31+16]
	105 Move X27, [X31+24]
	106 Move W2, 64
	107 Move X30, [X31+96]
	108 Call SHA1Internal.ProcessBlock, X0, X1, X2
	109 Return 
	110 Move X20, [X31+80]
	111 Move X19, [X31+88]
	112 Move X22, [X31+64]
	113 Move X21, [X31+72]
	114 Move X24, [X31+48]
	115 Move X23, [X31+56]
	116 Move X26, [X31+32]
	117 Move X25, [X31+40]
	118 Move X28, [X31+16]
	119 Move X27, [X31+24]
	120 Move X30, [X31+96]
	121 Return 
	122 Call 0x1C17F28
	123 Call 0x1C17F20

Method: System.Void AddLength(System.UInt64 length, System.Byte[] buffer, System.Int32 position)

Disassembly:
	0x0326B820 MOV W10, W31
	0x0326B824 SUB W9, W31, W8
	0x0326B828 ADDS W31, W9, W10
	0x0326B82C B.EQ 0x326B894
	0x0326B830 SXTW X10, W10
	0x0326B834 ADD X8, X19, X10
	0x0326B838 ADD X12, X0, X10
	0x0326B83C LDRB W11, [X8 + 0x20]
	0x0326B840 LDRB W12, [X12 + 0x20]
	0x0326B844 ADD W13, W9, W10
	0x0326B848 CMP W11, W12
	0x0326B84C CSET W8, EQ
	0x0326B850 ADDS W31, W13, 0x1
	0x0326B854 B.EQ 0x326B87C
	0x0326B858 CMP W11, W12
	0x0326B85C ADD W10, W10, 0x1
	0x0326B860 B.EQ 0x326B828
	0x0326B864 B 0x326B87C
	0x0326B868 MOV W8, W31
	0x0326B86C B 0x326B87C
	0x0326B870 LDR X8, [X20 + 0x10]
	0x0326B874 CMP X8, 0x0
	0x0326B878 CSET W8, EQ
	0x0326B87C LDP X20, X19, [X31 + 0x10]
	0x0326B880 MOV W0, W8
	0x0326B884 LDP X30, X21, [X31], #0x20
	0x0326B888 RET
	0x0326B88C MOVZ W8, 0x1
	0x0326B890 B 0x326B87C
	0x0326B894 BL 0x1C16F28
	0x0326B898 BL 0x1C16F20
	0x0326B89C STR X30, [X31 - 0x20]!
	0x0326B8A0 STP X20, X19, [X31 + 0x10]
	0x0326B8A4 LDR X20, [X0 + 0x20]
	0x0326B8A8 MOV X19, X0
	0x0326B8AC BL 0x1C16D44
	0x0326B8B0 CBNZ X20, 0x326B8D8
	0x0326B8B4 LDR X0, [X19 + 0x10]
	0x0326B8B8 CBZ X0, 0x326B8E8
	0x0326B8BC LDR X8, [X0]
	0x0326B8C0 LDR X9, [X8 + 0x238]
	0x0326B8C4 LDR X1, [X8 + 0x240]
	0x0326B8C8 BLR X9
	0x0326B8CC MOV X20, X0
	0x0326B8D0 BL 0x1C16D44
	0x0326B8D4 STR X20, [X19 + 0x20]
	0x0326B8D8 MOV X0, X20
	0x0326B8DC LDP X20, X19, [X31 + 0x10]
	0x0326B8E0 LDR X30, [X31], #0x20
	0x0326B8E4 RET
	0x0326B8E8 BL 0x1C16F20
	0x0326B8EC STP X30, X19, [X31 - 0x10]!
	0x0326B8F0 MOV X19, X0
	0x0326B8F4 LDR X0, [X0 + 0x10]
	0x0326B8F8 BL 0x326C1D8
	0x0326B8FC MOV X0, X19
	0x0326B900 BL 0x326B910
	0x0326B904 MOV X1, X31
	0x0326B908 LDP X30, X19, [X31], #0x10
	0x0326B90C B 0x3225544

ISIL:
	001 Move [X31-16], X30
	002 Compare X2, 0
	003 JumpIfEqual {67}
	004 Move W8, [X2+24]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move X8, X1
	007 ShiftRight X8, 56
	008 And X8, X8, 0x7FFFFFFF
	009 Add X9, X2, W3
	010 Move [X9+32], W8
	011 Move W9, [X2+24]
	012 Add W8, W3, 1
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move X9, X1
	015 ShiftRight X9, 48
	016 And X9, X9, 0x7FFFFFFF
	017 Add X8, X2, W8
	018 Move [X8+32], W9
	019 Move W9, [X2+24]
	020 Add W8, W3, 2
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X9, X1
	023 ShiftRight X9, 40
	024 And X9, X9, 0x7FFFFFFF
	025 Add X8, X2, W8
	026 Move [X8+32], W9
	027 Move W9, [X2+24]
	028 Add W8, W3, 3
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X9, X1
	031 ShiftRight X9, 32
	032 And X9, X9, 0x7FFFFFFF
	033 Add X8, X2, W8
	034 Move [X8+32], W9
	035 Move W9, [X2+24]
	036 Add W8, W3, 4
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X9, X1
	039 ShiftRight X9, 24
	040 And X9, X9, 0x7FFFFFFF
	041 Add X8, X2, W8
	042 Move [X8+32], W9
	043 Move W9, [X2+24]
	044 Add W8, W3, 5
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X9, X1
	047 ShiftRight X9, 16
	048 And X9, X9, 0x7FFFFFFF
	049 Add X8, X2, W8
	050 Move [X8+32], W9
	051 Move W9, [X2+24]
	052 Add W8, W3, 6
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X9, X1
	055 ShiftRight X9, 8
	056 And X9, X9, 0x7FFFFFFF
	057 Add X8, X2, W8
	058 Move [X8+32], W9
	059 Move W9, [X2+24]
	060 Add W8, W3, 7
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Add X8, X2, W8
	063 Move [X8+32], W1
	064 Move X30, [X31+16]
	065 Return 
	066 Call 0x1C17F28
	067 Call 0x1C17F20

