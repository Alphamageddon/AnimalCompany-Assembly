Type: System.Security.Cryptography.SHA512Managed

Method: System.Void .ctor()

Disassembly:
	0x03260484 STR X19, [X8]
	0x03260488 LDP X20, X19, [X31 + 0x20]
	0x0326048C LDR X30, [X31], #0x30
	0x03260490 RET
	0x03260494 MOV X1, X31
	0x03260498 B 0x33BDD8C
	0x0326049C STR X1, [X0 + 0x10]
	0x032604A0 RET
	0x032604A4 STR X1, [X0 + 0x18]
	0x032604A8 RET
	0x032604AC STR X1, [X0 + 0x20]
	0x032604B0 RET
	0x032604B4 STR X1, [X0 + 0x28]
	0x032604B8 RET
	0x032604BC STP X30, X25, [X31 - 0x40]!
	0x032604C0 STP X24, X23, [X31 + 0x10]
	0x032604C4 STP X22, X21, [X31 + 0x20]
	0x032604C8 STP X20, X19, [X31 + 0x30]
	0x032604CC ADRP X25, 0x117C000
	0x032604D0 ADRP X24, 0xEC3000
	0x032604D4 ADRP X23, 0xEC3000
	0x032604D8 ADRP X22, 0xEC3000
	0x032604DC LDRB W8, [X25 + 0x53E]
	0x032604E0 LDR X24, [X24 + 0x338]
	0x032604E4 LDR X23, [X23 + 0x340]
	0x032604E8 LDR X22, [X22 + 0x348]
	0x032604EC MOV X21, X2
	0x032604F0 MOV X19, X1
	0x032604F4 MOV X20, X0
	0x032604F8 TBNZ X8, 0x0, 0x3260528
	0x032604FC ADRP X0, 0xEC3000
	0x03260500 LDR X0, [X0 + 0x340]
	0x03260504 BL 0x1C16CF4
	0x03260508 ADRP X0, 0xEC3000
	0x0326050C LDR X0, [X0 + 0x348]
	0x03260510 BL 0x1C16CF4
	0x03260514 ADRP X0, 0xEC3000
	0x03260518 LDR X0, [X0 + 0x338]
	0x0326051C BL 0x1C16CF4
	0x03260520 MOVZ W8, 0x1
	0x03260524 STRB W8, [X25 + 0x53E]
	0x03260528 MOV X0, X20
	0x0326052C MOV X1, X31
	0x03260530 BL 0x33BDD8C
	0x03260534 LDR X8, [X24]
	0x03260538 STP X8, X21, [X20 + 0x10]
	0x0326053C LDR X9, [X23]
	0x03260540 LDR X8, [X22]
	0x03260544 STR X19, [X20 + 0x30]
	0x03260548 LDP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x117D000
	007 Move X21, 0xEC1000
	008 Move W8, [X20+1332]
	009 Move X21, [X21+3032]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0xE94000
	016 Move X0, [X0+1560]
	017 Call 0x1C17CF4
	018 Move X0, 0xEC1000
	019 Move X0, [X0+3032]
	020 Call 0x1C17CF4
	021 Move X0, 0xE9C000
	022 Move X0, [X0+1384]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+1332], W8
	026 Move X20, 0xE9C000
	027 Move X22, 0xE94000
	028 Move X20, [X20+1384]
	029 Move X22, [X22+1560]
	030 Move X0, X19
	031 Move X1, X31
	032 Call HashAlgorithm..ctor, X0
	033 Move W8, 512
	034 Move [X19+20], W8
	035 Move X0, [X21]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, [X20]
	041 Move W1, 8
	042 Call 0x1C17D6C
	043 Move [X19+56], X0
	044 Move X0, [X22]
	045 Move W1, 128
	046 Call 0x1C17D6C
	047 Move [X19+40], X0
	048 Move X0, [X20]
	049 Move W1, 80
	050 Call 0x1C17D6C
	051 Move [X19+64], X0
	052 Move X0, X19
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move X30, [X31+48]
	058 Call SHA512Managed.InitializeState, X0
	059 Return 

Method: System.Void Initialize()

Disassembly:
	0x03260654 MOV X19, X0
	0x03260658 TBNZ X8, 0x0, 0x326067C
	0x0326065C ADRP X0, 0xEC0000
	0x03260660 LDR X0, [X0 + 0xD18]
	0x03260664 BL 0x1C16CF4
	0x03260668 ADRP X0, 0xEC3000
	0x0326066C LDR X0, [X0 + 0x360]
	0x03260670 BL 0x1C16CF4
	0x03260674 MOVZ W8, 0x1
	0x03260678 STRB W8, [X20 + 0x541]
	0x0326067C LDR X1, [X21]
	0x03260680 LDR X2, [X22]
	0x03260684 MOV X0, X19
	0x03260688 LDP X20, X19, [X31 + 0x20]
	0x0326068C LDP X22, X21, [X31 + 0x10]
	0x03260690 LDR X30, [X31], #0x30
	0x03260694 B 0x32604BC

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call SHA512Managed.InitializeState, X0
	005 Move X0, [X19+40]
	006 Compare X0, 0
	007 JumpIfEqual {22}
	008 Move W2, [X0+24]
	009 Move W1, W31
	010 Move X3, X31
	011 Call Array.Clear, X0, X1, X2
	012 Move X0, [X19+64]
	013 Compare X0, 0
	014 JumpIfEqual {22}
	015 Move W2, [X0+24]
	016 Move W1, W31
	017 Move X3, X31
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 Call Array.Clear, X0, X1, X2
	021 Return 
	022 Call 0x1C17F20

Method: System.Void HashCore(System.Byte[] rgb, System.Int32 ibStart, System.Int32 cbSize)

Disassembly:
	0x03260698 STR X30, [X31 - 0x30]!

ISIL:
No ISIL was generated
Method: System.Byte[] HashFinal()

Disassembly:
	0x03260864 LDR X0, [X0 + 0xE00]

ISIL:
No ISIL was generated
Method: System.Void InitializeState()

Disassembly:
	0x03260554 LDP X20, X19, [X31 + 0x30]
	0x03260558 LDP X30, X25, [X31], #0x40
	0x0326055C RET
	0x03260560 STR X30, [X31 - 0x30]!
	0x03260564 STP X22, X21, [X31 + 0x10]
	0x03260568 STP X20, X19, [X31 + 0x20]
	0x0326056C ADRP X20, 0x117C000
	0x03260570 ADRP X21, 0xEC0000
	0x03260574 ADRP X22, 0xEC3000
	0x03260578 LDRB W8, [X20 + 0x53F]
	0x0326057C LDR X21, [X21 + 0xD40]
	0x03260580 LDR X22, [X22 + 0x350]
	0x03260584 MOV X19, X0
	0x03260588 TBNZ X8, 0x0, 0x32605AC
	0x0326058C ADRP X0, 0xEC0000
	0x03260590 LDR X0, [X0 + 0xD40]
	0x03260594 BL 0x1C16CF4
	0x03260598 ADRP X0, 0xEC3000
	0x0326059C LDR X0, [X0 + 0x350]
	0x032605A0 BL 0x1C16CF4
	0x032605A4 MOVZ W8, 0x1
	0x032605A8 STRB W8, [X20 + 0x53F]
	0x032605AC LDR X1, [X21]
	0x032605B0 LDR X2, [X22]
	0x032605B4 MOV X0, X19
	0x032605B8 LDP X20, X19, [X31 + 0x20]
	0x032605BC LDP X22, X21, [X31 + 0x10]
	0x032605C0 LDR X30, [X31], #0x30
	0x032605C4 B 0x32604BC
	0x032605C8 STR X30, [X31 - 0x30]!
	0x032605CC STP X22, X21, [X31 + 0x10]
	0x032605D0 STP X20, X19, [X31 + 0x20]
	0x032605D4 ADRP X20, 0x117C000
	0x032605D8 ADRP X21, 0xEC0000
	0x032605DC ADRP X22, 0xEC3000
	0x032605E0 LDRB W8, [X20 + 0x540]
	0x032605E4 LDR X21, [X21 + 0xD20]
	0x032605E8 LDR X22, [X22 + 0x358]
	0x032605EC MOV X19, X0
	0x032605F0 TBNZ X8, 0x0, 0x3260614
	0x032605F4 ADRP X0, 0xEC0000
	0x032605F8 LDR X0, [X0 + 0xD20]
	0x032605FC BL 0x1C16CF4
	0x03260600 ADRP X0, 0xEC3000
	0x03260604 LDR X0, [X0 + 0x358]
	0x03260608 BL 0x1C16CF4
	0x0326060C MOVZ W8, 0x1
	0x03260610 STRB W8, [X20 + 0x540]
	0x03260614 LDR X1, [X21]
	0x03260618 LDR X2, [X22]
	0x0326061C MOV X0, X19
	0x03260620 LDP X20, X19, [X31 + 0x20]
	0x03260624 LDP X22, X21, [X31 + 0x10]
	0x03260628 LDR X30, [X31], #0x30
	0x0326062C B 0x32604BC
	0x03260630 STR X30, [X31 - 0x30]!
	0x03260634 STP X22, X21, [X31 + 0x10]
	0x03260638 STP X20, X19, [X31 + 0x20]
	0x0326063C ADRP X20, 0x117C000
	0x03260640 ADRP X21, 0xEC0000
	0x03260644 ADRP X22, 0xEC3000
	0x03260648 LDRB W8, [X20 + 0x541]
	0x0326064C LDR X21, [X21 + 0xD18]
	0x03260650 LDR X22, [X22 + 0x360]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+56]
	003 Move [X0+48], X31
	004 Compare X8, 0
	005 JumpIfEqual {59}
	006 Move W9, [X8+24]
	007 Compare W9, 0
	008 JumpIfEqual {58}
	009 Move X10, 0xC908
	010 NotImplemented "Instruction MOVK not yet implemented."
	011 NotImplemented "Instruction MOVK not yet implemented."
	012 NotImplemented "Instruction MOVK not yet implemented."
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move [X8+32], X10
	015 Move X10, 0xA73B
	016 NotImplemented "Instruction MOVK not yet implemented."
	017 NotImplemented "Instruction MOVK not yet implemented."
	018 NotImplemented "Instruction MOVK not yet implemented."
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move [X8+40], X10
	021 Move X10, 0xF82B
	022 NotImplemented "Instruction MOVK not yet implemented."
	023 NotImplemented "Instruction MOVK not yet implemented."
	024 NotImplemented "Instruction MOVK not yet implemented."
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move [X8+48], X10
	027 Move X10, 0x36F1
	028 NotImplemented "Instruction MOVK not yet implemented."
	029 NotImplemented "Instruction MOVK not yet implemented."
	030 NotImplemented "Instruction MOVK not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move [X8+56], X10
	033 Move X10, 0x82D1
	034 NotImplemented "Instruction MOVK not yet implemented."
	035 NotImplemented "Instruction MOVK not yet implemented."
	036 NotImplemented "Instruction MOVK not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move [X8+64], X10
	039 Move X10, 0x6C1F
	040 NotImplemented "Instruction MOVK not yet implemented."
	041 NotImplemented "Instruction MOVK not yet implemented."
	042 NotImplemented "Instruction MOVK not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move [X8+72], X10
	045 Move X10, 0xBD6B
	046 NotImplemented "Instruction MOVK not yet implemented."
	047 NotImplemented "Instruction MOVK not yet implemented."
	048 NotImplemented "Instruction MOVK not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move [X8+80], X10
	051 Move X9, 0x2179
	052 NotImplemented "Instruction MOVK not yet implemented."
	053 NotImplemented "Instruction MOVK not yet implemented."
	054 NotImplemented "Instruction MOVK not yet implemented."
	055 Move [X8+88], X9
	056 Move X30, [X31+16]
	057 Return 
	058 Call 0x1C17F28
	059 Call 0x1C17F20

Method: System.Void _HashData(System.Byte[] partIn, System.Int32 ibStart, System.Int32 cbSize)

Disassembly:
	0x0326069C STP X22, X21, [X31 + 0x10]
	0x032606A0 STP X20, X19, [X31 + 0x20]
	0x032606A4 ADRP X20, 0x117C000
	0x032606A8 ADRP X21, 0xEC0000
	0x032606AC ADRP X22, 0xEC3000
	0x032606B0 LDRB W8, [X20 + 0x542]
	0x032606B4 LDR X21, [X21 + 0xD58]
	0x032606B8 LDR X22, [X22 + 0x368]
	0x032606BC MOV X19, X0
	0x032606C0 TBNZ X8, 0x0, 0x32606E4
	0x032606C4 ADRP X0, 0xEC3000
	0x032606C8 LDR X0, [X0 + 0x368]
	0x032606CC BL 0x1C16CF4
	0x032606D0 ADRP X0, 0xEC0000
	0x032606D4 LDR X0, [X0 + 0xD58]
	0x032606D8 BL 0x1C16CF4
	0x032606DC MOVZ W8, 0x1
	0x032606E0 STRB W8, [X20 + 0x542]
	0x032606E4 LDR X1, [X21]
	0x032606E8 LDR X2, [X22]
	0x032606EC MOV X0, X19
	0x032606F0 LDP X20, X19, [X31 + 0x20]
	0x032606F4 LDP X22, X21, [X31 + 0x10]
	0x032606F8 LDR X30, [X31], #0x30
	0x032606FC B 0x32604BC
	0x03260700 STR X30, [X31 - 0x40]!
	0x03260704 STP X24, X23, [X31 + 0x10]
	0x03260708 STP X22, X21, [X31 + 0x20]
	0x0326070C STP X20, X19, [X31 + 0x30]
	0x03260710 ADRP X24, 0x117C000
	0x03260714 ADRP X23, 0xEC3000
	0x03260718 ADRP X22, 0xEC3000
	0x0326071C ADRP X21, 0xEC3000
	0x03260720 ADRP X20, 0xEC3000
	0x03260724 LDRB W8, [X24 + 0x543]
	0x03260728 LDR X23, [X23 + 0x370]
	0x0326072C LDR X22, [X22 + 0x378]
	0x03260730 LDR X21, [X21 + 0x380]
	0x03260734 LDR X20, [X20 + 0x388]
	0x03260738 MOV X19, X0
	0x0326073C TBNZ X8, 0x0, 0x3260778
	0x03260740 ADRP X0, 0xEC3000
	0x03260744 LDR X0, [X0 + 0x380]
	0x03260748 BL 0x1C16CF4
	0x0326074C ADRP X0, 0xEC3000
	0x03260750 LDR X0, [X0 + 0x378]
	0x03260754 BL 0x1C16CF4
	0x03260758 ADRP X0, 0xEC3000
	0x0326075C LDR X0, [X0 + 0x370]
	0x03260760 BL 0x1C16CF4
	0x03260764 ADRP X0, 0xEC3000
	0x03260768 LDR X0, [X0 + 0x388]
	0x0326076C BL 0x1C16CF4
	0x03260770 MOVZ W8, 0x1
	0x03260774 STRB W8, [X24 + 0x543]
	0x03260778 MOV X0, X19
	0x0326077C MOV X1, X31
	0x03260780 BL 0x33BDD8C
	0x03260784 LDR X9, [X23]
	0x03260788 LDR X8, [X22]
	0x0326078C LDP X24, X23, [X31 + 0x10]
	0x03260790 STP X9, X8, [X19 + 0x10]
	0x03260794 LDR X9, [X21]
	0x03260798 LDR X8, [X20]
	0x0326079C LDP X22, X21, [X31 + 0x20]
	0x032607A0 STP X9, X8, [X19 + 0x20]
	0x032607A4 LDP X20, X19, [X31 + 0x30]
	0x032607A8 LDR X30, [X31], #0x40
	0x032607AC RET
	0x032607B0 STP X30, X19, [X31 - 0x10]!
	0x032607B4 MOV X1, X31
	0x032607B8 MOV X19, X0
	0x032607BC BL 0x33BDD8C
	0x032607C0 ADRP X8, 0xFFFFFFFFFD88D000
	0x032607C4 LDR V0, [X8 + 0x5B8]
	0x032607C8 STUR D0, [X19 + 0x3C]
	0x032607CC LDP X30, X19, [X31], #0x10
	0x032607D0 RET
	0x032607D4 STP X30, X21, [X31 - 0x20]!
	0x032607D8 STP X20, X19, [X31 + 0x10]
	0x032607DC ADRP X21, 0x117C000
	0x032607E0 ADRP X20, 0xE9A000
	0x032607E4 LDRB W8, [X21 + 0x544]
	0x032607E8 LDR X20, [X20 + 0xC10]
	0x032607EC MOV X19, X0
	0x032607F0 TBNZ X8, 0x0, 0x3260808
	0x032607F4 ADRP X0, 0xE9A000
	0x032607F8 LDR X0, [X0 + 0xC10]
	0x032607FC BL 0x1C16CF4
	0x03260800 MOVZ W8, 0x1
	0x03260804 STRB W8, [X21 + 0x544]
	0x03260808 LDR X8, [X19]
	0x0326080C MOVZ W1, 0x1
	0x03260810 MOV X0, X19
	0x03260814 LDP X9, X2, [X8 + 0x188]
	0x03260818 BLR X9
	0x0326081C LDR X0, [X20]
	0x03260820 LDR W8, [X0 + 0xE0]
	0x03260824 CBNZ W8, 0x326082C
	0x03260828 BL 0x1C16DFC
	0x0326082C MOV X0, X19
	0x03260830 LDP X20, X19, [X31 + 0x10]
	0x03260834 MOV X1, X31
	0x03260838 LDP X30, X21, [X31], #0x20
	0x0326083C B 0x33B3E9C
	0x03260840 STP X30, X21, [X31 - 0x20]!
	0x03260844 STP X20, X19, [X31 + 0x10]
	0x03260848 ADRP X21, 0x117C000
	0x0326084C ADRP X20, 0xE93000
	0x03260850 LDRB W8, [X21 + 0x545]
	0x03260854 LDR X20, [X20 + 0xE00]
	0x03260858 MOV X19, X0
	0x0326085C TBNZ X8, 0x0, 0x3260874
	0x03260860 ADRP X0, 0xE93000

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X23, 0x117D000
	013 Move W8, [X23+1333]
	014 Move W19, W3
	015 Move W20, W2
	016 Move X21, X1
	017 Move X22, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0xEC4000
	023 Move X0, [X0+224]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+1333], W8
	027 Move X8, [X22+48]
	028 Move X9, [X22+56]
	029 Add X10, X8, W19
	030 Move [X22+48], X10
	031 Compare X9, 0
	032 JumpIfEqual {37}
	033 Move W10, [X9+24]
	034 Add X9, X9, 32
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSEL not yet implemented."
	037 Move X23, X31
	038 Move X2, [X22+40]
	039 And W25, W8, 127
	040 Compare X2, 0
	041 JumpIfEqual {46}
	042 Move W8, [X2+24]
	043 Add X9, X2, 32
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction CSEL not yet implemented."
	046 Move X24, X31
	047 Move X8, [X22+64]
	048 Compare X8, 0
	049 JumpIfEqual {54}
	050 Move W9, [X8+24]
	051 Add X8, X8, 32
	052 NotImplemented "Instruction CMP not yet implemented."
	053 NotImplemented "Instruction CSEL not yet implemented."
	054 Move X26, X31
	055 Move X28, 0xEC4000
	056 Move X28, [X28+224]
	057 Compare W25, 0
	058 JumpIfEqual {81}
	059 Add W8, W25, W19
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move W8, 128
	062 Subtract W27, W8, W25
	063 Move X0, X21
	064 Move W1, W20
	065 Move W3, W25
	066 Move W4, W27
	067 Move X5, X31
	068 Call Buffer.InternalBlockCopy, X0, X1, X2, X3, X4
	069 Move X0, [X28]
	070 Add W20, W27, W20
	071 Subtract W19, W19, W27
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Move X0, X26
	077 Move X1, X23
	078 Move X2, X24
	079 Call SHA512Managed.SHATransform, X0, X1, X2
	080 Move W25, W31
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X2, [X22+40]
	083 Move W4, 128
	084 Move X0, X21
	085 Move W1, W20
	086 Move W3, W31
	087 Move X5, X31
	088 Call Buffer.InternalBlockCopy, X0, X1, X2, X3, X4
	089 Move X0, [X28]
	090 Subtract W19, W19, 128
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Move X0, X26
	096 Move X1, X23
	097 Move X2, X24
	098 Add W20, W20, 128
	099 Call SHA512Managed.SHATransform, X0, X1, X2
	100 Add W8, W19, 128
	101 NotImplemented "Instruction CMP not yet implemented."
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X2, [X22+40]
	104 Move X0, X21
	105 Move W1, W20
	106 Move W3, W25
	107 Move W4, W19
	108 Move X20, [X31+80]
	109 Move X19, [X31+88]
	110 Move X22, [X31+64]
	111 Move X21, [X31+72]
	112 Move X24, [X31+48]
	113 Move X23, [X31+56]
	114 Move X26, [X31+32]
	115 Move X25, [X31+40]
	116 Move X28, [X31+16]
	117 Move X27, [X31+24]
	118 Move X5, X31
	119 Move X30, [X31+96]
	120 Call Buffer.InternalBlockCopy, X0, X1, X2, X3, X4
	121 Return 
	122 Move X20, [X31+80]
	123 Move X19, [X31+88]
	124 Move X22, [X31+64]
	125 Move X21, [X31+72]
	126 Move X24, [X31+48]
	127 Move X23, [X31+56]
	128 Move X26, [X31+32]
	129 Move X25, [X31+40]
	130 Move X28, [X31+16]
	131 Move X27, [X31+24]
	132 Move X30, [X31+96]
	133 Return 

Method: System.Byte[] _EndHash()

Disassembly:
	0x03260868 BL 0x1C16CF4
	0x0326086C MOVZ W8, 0x1
	0x03260870 STRB W8, [X21 + 0x545]
	0x03260874 LDR X8, [X19]
	0x03260878 LDR X1, [X20]
	0x0326087C LDRH W9, [X8 + 0x12E]
	0x03260880 CBZ X9, 0x32608A4
	0x03260884 LDR X10, [X8 + 0xB0]
	0x03260888 ADD X10, X10, 0x8
	0x0326088C LDUR X11, [X10 - 0x8]
	0x03260890 CMP X11, X1
	0x03260894 B.EQ 0x32608B4
	0x03260898 SUBS X9, X9, 0x1
	0x0326089C ADD X10, X10, 0x10
	0x032608A0 B.NE 0x326088C
	0x032608A4 MOV X0, X19
	0x032608A8 MOV W2, W31
	0x032608AC BL 0x1C5C788
	0x032608B0 B 0x32608C0
	0x032608B4 LDRSW X9, [X10]
	0x032608B8 ADD X8, X8, X9, 0x4, LSL
	0x032608BC ADD X0, X8, 0x138
	0x032608C0 LDP X2, X1, [X0]
	0x032608C4 MOV X0, X19
	0x032608C8 LDP X20, X19, [X31 + 0x10]
	0x032608CC LDP X30, X21, [X31], #0x20
	0x032608D0 BR X2
	0x032608D4 STP X30, X19, [X31 - 0x10]!
	0x032608D8 TBZ X1, 0x0, 0x3260918
	0x032608DC MOV X19, X0
	0x032608E0 LDR X0, [X0 + 0x20]
	0x032608E4 CBZ X0, 0x32608FC
	0x032608E8 LDR W2, [X0 + 0x18]
	0x032608EC MOV W1, W31
	0x032608F0 MOV X3, X31
	0x032608F4 BL 0x339FA34
	0x032608F8 STR X31, [X19 + 0x20]
	0x032608FC LDR X0, [X19 + 0x18]
	0x03260900 CBZ X0, 0x3260918
	0x03260904 LDR W2, [X0 + 0x18]
	0x03260908 MOV W1, W31
	0x0326090C MOV X3, X31
	0x03260910 BL 0x339FA34
	0x03260914 STR X31, [X19 + 0x18]
	0x03260918 LDP X30, X19, [X31], #0x10
	0x0326091C RET
	0x03260920 LDR W0, [X0 + 0x10]
	0x03260924 RET
	0x03260928 STR X30, [X31 - 0x20]!
	0x0326092C STP X20, X19, [X31 + 0x10]
	0x03260930 LDR X8, [X0 + 0x28]
	0x03260934 CBZ X8, 0x3260A08
	0x03260938 LDR W9, [X8 + 0x18]
	0x0326093C CMP W9, 0x1
	0x03260940 B.LT 0x3260998
	0x03260944 MOV W10, W31
	0x03260948 CMP W10, W9
	0x0326094C B.CS 0x3260A0C
	0x03260950 ADD X11, X8, W10, 0x3, SXTW
	0x03260954 LDR X13, [X11 + 0x20]
	0x03260958 CBZ X13, 0x3260A08
	0x0326095C LDR W12, [X13 + 0x18]
	0x03260960 LDR W11, [X13 + 0x10]
	0x03260964 CBZ W12, 0x3260984
	0x03260968 LDR W13, [X13 + 0x14]
	0x0326096C CMP W11, W13
	0x03260970 B.GT 0x326098C
	0x03260974 CMP W1, W11
	0x03260978 B.EQ 0x32609E8
	0x0326097C ADD W11, W11, W12
	0x03260980 B 0x326096C
	0x03260984 CMP W11, W1
	0x03260988 B.EQ 0x32609F4
	0x0326098C ADD W10, W10, 0x1
	0x03260990 CMP W10, W9
	0x03260994 B.LT 0x3260948
	0x03260998 ADRP X0, 0xEC3000
	0x0326099C LDR X0, [X0 + 0x390]
	0x032609A0 BL 0x1C16D08
	0x032609A4 MOV X1, X31
	0x032609A8 BL 0x33BDD84
	0x032609AC MOV X19, X0
	0x032609B0 ADRP X0, 0xEC0000
	0x032609B4 LDR X0, [X0 + 0xCE0]
	0x032609B8 BL 0x1C16D08
	0x032609BC BL 0x1C16F10
	0x032609C0 MOV X1, X19
	0x032609C4 MOV X2, X31
	0x032609C8 MOV X20, X0
	0x032609CC BL 0x3252170
	0x032609D0 ADRP X0, 0xEC3000
	0x032609D4 LDR X0, [X0 + 0x398]
	0x032609D8 BL 0x1C16D08
	0x032609DC MOV X1, X0
	0x032609E0 MOV X0, X20
	0x032609E4 BL 0x1C16DEC
	0x032609E8 LDR W8, [X0 + 0x10]
	0x032609EC CMP W8, W1
	0x032609F0 B.EQ 0x32609FC
	0x032609F4 STR W1, [X0 + 0x10]
	0x032609F8 STR X31, [X0 + 0x18]
	0x032609FC LDP X20, X19, [X31 + 0x10]
	0x03260A00 LDR X30, [X31], #0x20
	0x03260A04 RET
	0x03260A08 BL 0x1C16F20
	0x03260A0C BL 0x1C16F28

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x117D000
	006 Move X21, 0xE94000
	007 Move W8, [X20+1334]
	008 Move X21, [X21+1560]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE94000
	015 Move X0, [X0+1560]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1334], W8
	019 Move X0, [X21]
	020 Move W1, 64
	021 Call 0x1C17D6C
	022 Move X8, [X19+48]
	023 Move X20, X0
	024 Move W9, 256
	025 Move X0, [X21]
	026 And X8, X8, 127
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move W10, 128
	029 NotImplemented "Instruction CSEL not yet implemented."
	030 Subtract X21, X9, X8
	031 Move W1, W21
	032 Call 0x1C17D6C
	033 Compare X0, 0
	034 JumpIfEqual {123}
	035 Move W8, [X0+24]
	036 Move X1, X0
	037 Compare W8, 0
	038 JumpIfEqual {122}
	039 Move W9, W21
	040 Move X9, W9
	041 Subtract X10, X9, 8
	042 Move W11, 128
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move [X1+32], W11
	045 Move X8, [X19+48]
	046 Add X10, X1, X10
	047 Move X11, X8
	048 ShiftRight X11, 53
	049 And X11, X11, 0x7FFFFFFF
	050 Move [X10+32], W11
	051 Move W11, [X1+24]
	052 Subtract X10, X21, 7
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X11, X8
	055 ShiftRight X11, 45
	056 And X11, X11, 0x7FFFFFFF
	057 Add X10, X1, X10
	058 Move [X10+32], W11
	059 Move W11, [X1+24]
	060 Subtract X10, X9, 6
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X11, X8
	063 ShiftRight X11, 37
	064 And X11, X11, 0x7FFFFFFF
	065 Add X10, X1, X10
	066 Move [X10+32], W11
	067 Move W11, [X1+24]
	068 Subtract X10, X9, 5
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X11, X8
	071 ShiftRight X11, 29
	072 And X11, X11, 0x7FFFFFFF
	073 Add X10, X1, X10
	074 Move [X10+32], W11
	075 Move W11, [X1+24]
	076 Subtract X10, X9, 4
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X11, X8
	079 ShiftRight X11, 21
	080 And X11, X11, 0x7FFFFFFF
	081 Add X10, X1, X10
	082 Move [X10+32], W11
	083 Move W10, [X1+24]
	084 Subtract X9, X9, 3
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X10, X8
	087 ShiftRight X10, 13
	088 And X10, X10, 0x7FFFFFFF
	089 Add X9, X1, X9
	090 Move [X9+32], W10
	091 Move W10, [X1+24]
	092 Subtract W9, W21, 2
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X10, X8
	095 ShiftRight X10, 5
	096 And X10, X10, 0x7FFFFFFF
	097 Add X9, X1, W9
	098 Move [X9+32], W10
	099 Move W10, [X1+24]
	100 Subtract W9, W21, 1
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move W8, W8
	103 ShiftRight W8, 29
	104 And W8, W8, 0xFFFFFFF
	105 Add X9, X1, W9
	106 Move [X9+32], W8
	107 Move W3, [X1+24]
	108 Move X0, X19
	109 Move W2, W31
	110 Call SHA512Managed._HashData, X0, X1, X2, X3
	111 Move X1, [X19+56]
	112 Move W2, 8
	113 Move X0, X20
	114 Call Utils.QuadWordToBigEndian, X0, X1, X2
	115 Move [X19+24], X20
	116 Move X0, X20
	117 Move X20, [X31+16]
	118 Move X19, [X31+24]
	119 Move X30, [X31+32]
	120 Move X21, [X31+40]
	121 Return X0
	122 Call 0x1C17F28
	123 Call 0x1C17F20

Method: System.Void SHATransform(System.UInt64* expandedBuffer, System.UInt64* state, System.Byte* block)

Disassembly:
	0x03260A10 LDR W0, [X0 + 0x14]
	0x03260A14 RET
	0x03260A18 STR X30, [X31 - 0x20]!
	0x03260A1C STP X20, X19, [X31 + 0x10]
	0x03260A20 ADRP X20, 0x117C000
	0x03260A24 LDRB W8, [X20 + 0x546]
	0x03260A28 MOV X19, X0
	0x03260A2C TBNZ X8, 0x0, 0x3260A44
	0x03260A30 ADRP X0, 0xE93000
	0x03260A34 LDR X0, [X0 + 0x618]
	0x03260A38 BL 0x1C16CF4
	0x03260A3C MOVZ W8, 0x1
	0x03260A40 STRB W8, [X20 + 0x546]
	0x03260A44 LDR X0, [X19 + 0x18]
	0x03260A48 CBNZ X0, 0x3260A64
	0x03260A4C LDR X8, [X19]
	0x03260A50 MOV X0, X19
	0x03260A54 LDR X9, [X8 + 0x2C8]
	0x03260A58 LDR X1, [X8 + 0x2D0]
	0x03260A5C BLR X9
	0x03260A60 LDR X0, [X19 + 0x18]
	0x03260A64 CBZ X0, 0x3260A9C
	0x03260A68 MOV X1, X31
	0x03260A6C BL 0x33A01F0
	0x03260A70 CBZ X0, 0x3260A90
	0x03260A74 ADRP X8, 0xE93000
	0x03260A78 LDR X8, [X8 + 0x618]
	0x03260A7C MOV X19, X0
	0x03260A80 LDR X20, [X8]
	0x03260A84 MOV X1, X20
	0x03260A88 BL 0x1C16E00
	0x03260A8C CBZ X0, 0x3260AA0
	0x03260A90 LDP X20, X19, [X31 + 0x10]
	0x03260A94 LDR X30, [X31], #0x20
	0x03260A98 RET
	0x03260A9C BL 0x1C16F20
	0x03260AA0 MOV X0, X19
	0x03260AA4 MOV X1, X20
	0x03260AA8 BL 0x1C171E0
	0x03260AAC STR X30, [X31 - 0x30]!
	0x03260AB0 STP X22, X21, [X31 + 0x10]
	0x03260AB4 STP X20, X19, [X31 + 0x20]
	0x03260AB8 ADRP X21, 0x117C000
	0x03260ABC LDRB W8, [X21 + 0x547]
	0x03260AC0 MOV X20, X1
	0x03260AC4 MOV X19, X0
	0x03260AC8 TBNZ X8, 0x0, 0x3260AE0
	0x03260ACC ADRP X0, 0xE93000
	0x03260AD0 LDR X0, [X0 + 0x618]
	0x03260AD4 BL 0x1C16CF4
	0x03260AD8 MOVZ W8, 0x1
	0x03260ADC STRB W8, [X21 + 0x547]
	0x03260AE0 CBZ X20, 0x3260B64
	0x03260AE4 LDR W8, [X19 + 0x10]
	0x03260AE8 LDR W9, [X20 + 0x18]
	0x03260AEC ADD W10, W8, 0x7
	0x03260AF0 CMP W8, 0x0
	0x03260AF4 CSEL W8, W10, W8, LT
	0x03260AF8 CMP W9, W8, ASR
	0x03260AFC B.NE 0x3260BAC
	0x03260B00 MOV X0, X20
	0x03260B04 MOV X1, X31
	0x03260B08 BL 0x33A01F0
	0x03260B0C CBZ X0, 0x3260B50
	0x03260B10 ADRP X22, 0xE93000
	0x03260B14 LDR X22, [X22 + 0x618]
	0x03260B18 MOV X20, X0
	0x03260B1C LDR X21, [X22]
	0x03260B20 MOV X1, X21
	0x03260B24 BL 0x1C16E00
	0x03260B28 CBZ X0, 0x3260BFC
	0x03260B2C STR X0, [X19 + 0x18]
	0x03260B30 LDR X19, [X22]
	0x03260B34 MOV X0, X20
	0x03260B38 MOV X1, X19
	0x03260B3C BL 0x1C16E00
	0x03260B40 CBNZ X0, 0x3260B54
	0x03260B44 MOV X0, X20
	0x03260B48 MOV X1, X19
	0x03260B4C BL 0x1C171E0
	0x03260B50 STR X31, [X19 + 0x18]
	0x03260B54 LDP X20, X19, [X31 + 0x20]
	0x03260B58 LDP X22, X21, [X31 + 0x10]
	0x03260B5C LDR X30, [X31], #0x30
	0x03260B60 RET
	0x03260B64 ADRP X0, 0xE98000
	0x03260B68 LDR X0, [X0 + 0x528]
	0x03260B6C BL 0x1C16D08
	0x03260B70 BL 0x1C16F10
	0x03260B74 MOV X19, X0
	0x03260B78 ADRP X0, 0xE9D000
	0x03260B7C LDR X0, [X0 + 0xEC8]
	0x03260B80 BL 0x1C16D08
	0x03260B84 MOV X1, X0
	0x03260B88 MOV X0, X19
	0x03260B8C MOV X2, X31
	0x03260B90 BL 0x330E100
	0x03260B94 ADRP X0, 0xEC3000
	0x03260B98 LDR X0, [X0 + 0x3A0]
	0x03260B9C BL 0x1C16D08
	0x03260BA0 MOV X1, X0
	0x03260BA4 MOV X0, X19
	0x03260BA8 BL 0x1C16DEC
	0x03260BAC ADRP X0, 0xEC3000
	0x03260BB0 LDR X0, [X0 + 0x1C8]
	0x03260BB4 BL 0x1C16D08
	0x03260BB8 MOV X1, X31
	0x03260BBC BL 0x33BDD84
	0x03260BC0 MOV X19, X0
	0x03260BC4 ADRP X0, 0xEC0000
	0x03260BC8 LDR X0, [X0 + 0xCE0]
	0x03260BCC BL 0x1C16D08
	0x03260BD0 BL 0x1C16F10
	0x03260BD4 MOV X1, X19
	0x03260BD8 MOV X2, X31
	0x03260BDC MOV X20, X0
	0x03260BE0 BL 0x3252170
	0x03260BE4 ADRP X0, 0xEC3000
	0x03260BE8 LDR X0, [X0 + 0x3A0]
	0x03260BEC BL 0x1C16D08
	0x03260BF0 MOV X1, X0
	0x03260BF4 MOV X0, X20
	0x03260BF8 BL 0x1C16DEC
	0x03260BFC MOV X0, X20
	0x03260C00 MOV X1, X21
	0x03260C04 BL 0x1C171E0
	0x03260C08 STR X30, [X31 - 0x20]!
	0x03260C0C STP X20, X19, [X31 + 0x10]
	0x03260C10 ADRP X20, 0x117C000
	0x03260C14 LDRB W8, [X20 + 0x548]
	0x03260C18 MOV X19, X0
	0x03260C1C TBNZ X8, 0x0, 0x3260C34
	0x03260C20 ADRP X0, 0xE93000
	0x03260C24 LDR X0, [X0 + 0x618]
	0x03260C28 BL 0x1C16CF4
	0x03260C2C MOVZ W8, 0x1
	0x03260C30 STRB W8, [X20 + 0x548]
	0x03260C34 LDR X0, [X19 + 0x20]
	0x03260C38 CBNZ X0, 0x3260C54
	0x03260C3C LDR X8, [X19]
	0x03260C40 MOV X0, X19
	0x03260C44 LDR X9, [X8 + 0x2B8]
	0x03260C48 LDR X1, [X8 + 0x2C0]
	0x03260C4C BLR X9
	0x03260C50 LDR X0, [X19 + 0x20]
	0x03260C54 CBZ X0, 0x3260C8C
	0x03260C58 MOV X1, X31
	0x03260C5C BL 0x33A01F0
	0x03260C60 CBZ X0, 0x3260C80
	0x03260C64 ADRP X8, 0xE93000
	0x03260C68 LDR X8, [X8 + 0x618]
	0x03260C6C MOV X19, X0
	0x03260C70 LDR X20, [X8]
	0x03260C74 MOV X1, X20
	0x03260C78 BL 0x1C16E00
	0x03260C7C CBZ X0, 0x3260C90
	0x03260C80 LDP X20, X19, [X31 + 0x10]
	0x03260C84 LDR X30, [X31], #0x20
	0x03260C88 RET
	0x03260C8C BL 0x1C16F20
	0x03260C90 MOV X0, X19
	0x03260C94 MOV X1, X20
	0x03260C98 BL 0x1C171E0
	0x03260C9C STP X30, X23, [X31 - 0x30]!
	0x03260CA0 STP X22, X21, [X31 + 0x10]
	0x03260CA4 STP X20, X19, [X31 + 0x20]
	0x03260CA8 ADRP X21, 0x117C000
	0x03260CAC LDRB W8, [X21 + 0x549]
	0x03260CB0 MOV X19, X1
	0x03260CB4 MOV X20, X0
	0x03260CB8 TBNZ X8, 0x0, 0x3260CD0
	0x03260CBC ADRP X0, 0xE93000
	0x03260CC0 LDR X0, [X0 + 0x618]
	0x03260CC4 BL 0x1C16CF4
	0x03260CC8 MOVZ W8, 0x1
	0x03260CCC STRB W8, [X21 + 0x549]
	0x03260CD0 CBZ X19, 0x3260D58
	0x03260CD4 LDR W8, [X19 + 0x18]
	0x03260CD8 MOV X0, X20
	0x03260CDC UBFM W1, W8, 0x1D, 0x1C
	0x03260CE0 BL 0x3260DF0
	0x03260CE4 TBZ X0, 0x0, 0x3260DA0
	0x03260CE8 MOV X0, X19
	0x03260CEC MOV X1, X31
	0x03260CF0 BL 0x33A01F0
	0x03260CF4 CBZ X0, 0x3260D38
	0x03260CF8 ADRP X23, 0xE93000
	0x03260CFC LDR X23, [X23 + 0x618]
	0x03260D00 MOV X21, X0
	0x03260D04 LDR X22, [X23]
	0x03260D08 MOV X1, X22
	0x03260D0C BL 0x1C16E00
	0x03260D10 CBZ X0, 0x3260D2C
	0x03260D14 STR X0, [X20 + 0x20]
	0x03260D18 LDR X22, [X23]
	0x03260D1C MOV X0, X21
	0x03260D20 MOV X1, X22
	0x03260D24 BL 0x1C16E00
	0x03260D28 CBNZ X0, 0x3260D3C
	0x03260D2C MOV X0, X21
	0x03260D30 MOV X1, X22
	0x03260D34 BL 0x1C171E0
	0x03260D38 STR X31, [X20 + 0x20]
	0x03260D3C LDR W8, [X19 + 0x18]
	0x03260D40 LDP X22, X21, [X31 + 0x10]
	0x03260D44 UBFM W8, W8, 0x1D, 0x1C
	0x03260D48 STR W8, [X20 + 0x38]
	0x03260D4C LDP X20, X19, [X31 + 0x20]
	0x03260D50 LDP X30, X23, [X31], #0x30
	0x03260D54 RET
	0x03260D58 ADRP X0, 0xE98000
	0x03260D5C LDR X0, [X0 + 0x528]
	0x03260D60 BL 0x1C16D08
	0x03260D64 BL 0x1C16F10
	0x03260D68 MOV X19, X0
	0x03260D6C ADRP X0, 0xE9D000
	0x03260D70 LDR X0, [X0 + 0xEC8]
	0x03260D74 BL 0x1C16D08
	0x03260D78 MOV X1, X0
	0x03260D7C MOV X0, X19
	0x03260D80 MOV X2, X31
	0x03260D84 BL 0x330E100
	0x03260D88 ADRP X0, 0xEC3000
	0x03260D8C LDR X0, [X0 + 0x3A8]
	0x03260D90 BL 0x1C16D08
	0x03260D94 MOV X1, X0
	0x03260D98 MOV X0, X19
	0x03260D9C BL 0x1C16DEC
	0x03260DA0 ADRP X0, 0xEC2000
	0x03260DA4 LDR X0, [X0 + 0xF08]
	0x03260DA8 BL 0x1C16D08
	0x03260DAC MOV X1, X31
	0x03260DB0 BL 0x33BDD84
	0x03260DB4 MOV X19, X0
	0x03260DB8 ADRP X0, 0xEC0000
	0x03260DBC LDR X0, [X0 + 0xCE0]
	0x03260DC0 BL 0x1C16D08
	0x03260DC4 BL 0x1C16F10
	0x03260DC8 MOV X1, X19
	0x03260DCC MOV X2, X31
	0x03260DD0 MOV X20, X0
	0x03260DD4 BL 0x3252170
	0x03260DD8 ADRP X0, 0xEC3000
	0x03260DDC LDR X0, [X0 + 0x3A8]
	0x03260DE0 BL 0x1C16D08
	0x03260DE4 MOV X1, X0
	0x03260DE8 MOV X0, X20
	0x03260DEC BL 0x1C16DEC
	0x03260DF0 STP X30, X19, [X31 - 0x10]!
	0x03260DF4 LDR X8, [X0]
	0x03260DF8 MOV W19, W1
	0x03260DFC LDR X9, [X8 + 0x208]
	0x03260E00 LDR X8, [X8 + 0x210]
	0x03260E04 MOV X1, X8
	0x03260E08 BLR X9
	0x03260E0C CBZ X0, 0x3260E7C
	0x03260E10 LDR W8, [X0 + 0x18]
	0x03260E14 CMP W8, 0x1
	0x03260E18 B.LT 0x3260E70
	0x03260E1C MOV W9, W31
	0x03260E20 CMP W9, W8
	0x03260E24 B.CS 0x3260E84
	0x03260E28 ADD X10, X0, W9, 0x3, SXTW
	0x03260E2C LDR X12, [X10 + 0x20]
	0x03260E30 CBZ X12, 0x3260E88
	0x03260E34 LDR W11, [X12 + 0x18]
	0x03260E38 LDR W10, [X12 + 0x10]
	0x03260E3C CBZ W11, 0x3260E5C
	0x03260E40 LDR W12, [X12 + 0x14]
	0x03260E44 CMP W10, W12
	0x03260E48 B.GT 0x3260E64
	0x03260E4C CMP W19, W10
	0x03260E50 B.EQ 0x3260E78
	0x03260E54 ADD W10, W10, W11
	0x03260E58 B 0x3260E44
	0x03260E5C CMP W10, W19
	0x03260E60 B.EQ 0x3260E78
	0x03260E64 ADD W9, W9, 0x1
	0x03260E68 CMP W9, W8
	0x03260E6C B.LT 0x3260E20
	0x03260E70 MOV W0, W31
	0x03260E74 B 0x3260E7C
	0x03260E78 MOVZ W0, 0x1
	0x03260E7C LDP X30, X19, [X31], #0x10
	0x03260E80 RET
	0x03260E84 BL 0x1C16F28
	0x03260E88 BL 0x1C16F20
	0x03260E8C STR X30, [X31 - 0x20]!
	0x03260E90 STP X20, X19, [X31 + 0x10]
	0x03260E94 ADRP X20, 0x117C000
	0x03260E98 LDRB W8, [X20 + 0x54A]
	0x03260E9C MOV X19, X0
	0x03260EA0 TBNZ X8, 0x0, 0x3260EB8
	0x03260EA4 ADRP X0, 0xEC1000
	0x03260EA8 LDR X0, [X0 + 0x520]
	0x03260EAC BL 0x1C16CF4
	0x03260EB0 MOVZ W8, 0x1
	0x03260EB4 STRB W8, [X20 + 0x54A]
	0x03260EB8 LDR X0, [X19 + 0x30]
	0x03260EBC CBZ X0, 0x3260EF4
	0x03260EC0 MOV X1, X31
	0x03260EC4 BL 0x33A01F0
	0x03260EC8 CBZ X0, 0x3260EE8
	0x03260ECC ADRP X8, 0xEC1000
	0x03260ED0 LDR X8, [X8 + 0x520]
	0x03260ED4 MOV X19, X0
	0x03260ED8 LDR X20, [X8]
	0x03260EDC MOV X1, X20
	0x03260EE0 BL 0x1C16E00
	0x03260EE4 CBZ X0, 0x3260EF8
	0x03260EE8 LDP X20, X19, [X31 + 0x10]
	0x03260EEC LDR X30, [X31], #0x20
	0x03260EF0 RET
	0x03260EF4 BL 0x1C16F20
	0x03260EF8 MOV X0, X19
	0x03260EFC MOV X1, X20
	0x03260F00 BL 0x1C171E0
	0x03260F04 LDR W0, [X0 + 0x38]
	0x03260F08 RET
	0x03260F0C STR X30, [X31 - 0x20]!
	0x03260F10 STP X20, X19, [X31 + 0x10]
	0x03260F14 MOV W20, W1
	0x03260F18 MOV X19, X0
	0x03260F1C BL 0x3260DF0
	0x03260F20 TBZ X0, 0x0, 0x3260F38
	0x03260F24 STR W20, [X19 + 0x38]
	0x03260F28 STR X31, [X19 + 0x20]
	0x03260F2C LDP X20, X19, [X31 + 0x10]
	0x03260F30 LDR X30, [X31], #0x20
	0x03260F34 RET
	0x03260F38 ADRP X0, 0xEC2000
	0x03260F3C LDR X0, [X0 + 0xF08]
	0x03260F40 BL 0x1C16D08
	0x03260F44 MOV X1, X31
	0x03260F48 BL 0x33BDD84
	0x03260F4C MOV X19, X0
	0x03260F50 ADRP X0, 0xEC0000
	0x03260F54 LDR X0, [X0 + 0xCE0]
	0x03260F58 BL 0x1C16D08
	0x03260F5C BL 0x1C16F10
	0x03260F60 MOV X1, X19
	0x03260F64 MOV X2, X31
	0x03260F68 MOV X20, X0
	0x03260F6C BL 0x3252170
	0x03260F70 ADRP X0, 0xEC3000
	0x03260F74 LDR X0, [X0 + 0x3B0]
	0x03260F78 BL 0x1C16D08

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X19, 0x117D000
	015 Move W8, [X19+1335]
	016 Move X29, X2
	017 Move X20, X1
	018 Move X21, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0xEC4000
	024 Move X0, [X0+224]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X19+1335], W8
	028 Move X22, [X20+32]
	029 Move X8, [X20+40]
	030 Move X25, [X20]
	031 Move X28, [X20+8]
	032 Move X26, [X20+16]
	033 Move X27, [X20+24]
	034 Move X23, [X20+48]
	035 Move X24, [X20+56]
	036 Move W1, 16
	037 Move X0, X21
	038 Move X2, X29
	039 Move [X31+8], X20
	040 Move [X31+16], X8
	041 Call Utils.QuadWordFromBigEndian, X0, X1, X2
	042 Move X20, 0xEC4000
	043 Move X20, [X20+224]
	044 Move X0, [X20]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Move X0, X21
	050 Move [X31+24], X21
	051 Call SHA512Managed.SHA512Expand, X0
	052 Move X29, X31
	053 Move W19, 88
	054 Move X0, [X20]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move X0, X22
	060 Call SHA512Managed.Sigma_1, X0
	061 Move X8, [X20]
	062 Move X21, [X31+24]
	063 Move X8, [X8+184]
	064 Move X8, [X8]
	065 Compare X8, 0
	066 JumpIfEqual {376}
	067 Move W9, [X8+24]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X9, [X31+16]
	070 Add X8, X8, X19
	071 Add X11, X21, X19
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 And X9, X22, X9
	074 NotImplemented "Instruction BIC not yet implemented."
	075 NotImplemented "Instruction LDUR not yet implemented."
	076 Add X9, X9, X24
	077 Add X9, X9, X10
	078 Add X9, X9, X0
	079 Add X8, X9, X8
	080 Add X20, X8, X11
	081 Move X0, X25
	082 Add X24, X20, X27
	083 Call SHA512Managed.Sigma_0, X0
	084 Move X27, X0
	085 Move X0, X24
	086 Call SHA512Managed.Sigma_1, X0
	087 Move X8, 0xEC4000
	088 Move X8, [X8+224]
	089 Move X8, [X8]
	090 Move X8, [X8+184]
	091 Move X8, [X8]
	092 Compare X8, 0
	093 JumpIfEqual {376}
	094 Move W9, [X8+24]
	095 Add X29, X29, 1
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Add X11, X0, X23
	098 And X12, X24, X22
	099 Xor X9, X28, X26
	100 Add X11, X11, X12
	101 Move X12, [X31+16]
	102 And X10, X28, X26
	103 Add X8, X8, X19
	104 And X9, X9, X25
	105 Xor X9, X9, X10
	106 Add X10, X21, X19
	107 NotImplemented "Instruction LDUR not yet implemented."
	108 NotImplemented "Instruction LDUR not yet implemented."
	109 NotImplemented "Instruction BIC not yet implemented."
	110 Add X9, X20, X9
	111 Add X27, X9, X27
	112 Add X9, X11, X12
	113 Add X8, X9, X8
	114 Add X21, X8, X10
	115 Move X0, X27
	116 Add X23, X21, X26
	117 Call SHA512Managed.Sigma_0, X0
	118 Move X26, X0
	119 Move X0, X23
	120 Call SHA512Managed.Sigma_1, X0
	121 Move X8, 0xEC4000
	122 Move X8, [X8+224]
	123 Move X8, [X8]
	124 Move X8, [X8+184]
	125 Move X8, [X8]
	126 Compare X8, 0
	127 JumpIfEqual {376}
	128 Move W9, [X8+24]
	129 Add X20, X29, 1
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Xor X9, X25, X28
	132 And X10, X25, X28
	133 And X9, X27, X9
	134 Xor X9, X9, X10
	135 Move X10, [X31+24]
	136 Move X11, [X31+16]
	137 Add X8, X8, X19
	138 NotImplemented "Instruction LDUR not yet implemented."
	139 Add X10, X10, X19
	140 Add X11, X0, X11
	141 And X12, X23, X24
	142 NotImplemented "Instruction LDUR not yet implemented."
	143 Add X11, X11, X12
	144 NotImplemented "Instruction BIC not yet implemented."
	145 Add X9, X21, X9
	146 Add X26, X9, X26
	147 Add X9, X11, X12
	148 Add X8, X9, X8
	149 Add X29, X8, X10
	150 Move X0, X26
	151 Add X21, X29, X28
	152 Call SHA512Managed.Sigma_0, X0
	153 Move X28, X0
	154 Move X0, X21
	155 Call SHA512Managed.Sigma_1, X0
	156 Move X8, 0xEC4000
	157 Move X8, [X8+224]
	158 Move X8, [X8]
	159 Move X8, [X8+184]
	160 Move X8, [X8]
	161 Compare X8, 0
	162 JumpIfEqual {376}
	163 Move W9, [X8+24]
	164 Add X20, X20, 1
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Xor X9, X27, X25
	167 And X10, X27, X25
	168 And X9, X26, X9
	169 Xor X9, X9, X10
	170 Move X10, [X31+24]
	171 Add X8, X8, X19
	172 NotImplemented "Instruction LDUR not yet implemented."
	173 Add X11, X0, X22
	174 Add X10, X10, X19
	175 And X12, X21, X23
	176 NotImplemented "Instruction LDUR not yet implemented."
	177 Add X11, X11, X12
	178 NotImplemented "Instruction BIC not yet implemented."
	179 Add X9, X29, X9
	180 Add X28, X9, X28
	181 Add X9, X11, X12
	182 Add X8, X9, X8
	183 Add X29, X8, X10
	184 Move X0, X28
	185 Add X22, X29, X25
	186 Call SHA512Managed.Sigma_0, X0
	187 Move X25, X0
	188 Move X0, X22
	189 Call SHA512Managed.Sigma_1, X0
	190 Move X8, 0xEC4000
	191 Move X8, [X8+224]
	192 Move X8, [X8]
	193 Move X8, [X8+184]
	194 Move X8, [X8]
	195 Compare X8, 0
	196 JumpIfEqual {376}
	197 Move W9, [X8+24]
	198 Add X20, X20, 1
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Xor X9, X26, X27
	201 And X10, X26, X27
	202 And X9, X28, X9
	203 Xor X9, X9, X10
	204 Move X10, [X31+24]
	205 Add X8, X8, X19
	206 NotImplemented "Instruction LDUR not yet implemented."
	207 Add X11, X0, X24
	208 Add X10, X10, X19
	209 And X12, X22, X21
	210 NotImplemented "Instruction LDUR not yet implemented."
	211 Add X11, X11, X12
	212 NotImplemented "Instruction BIC not yet implemented."
	213 Add X9, X29, X9
	214 Add X25, X9, X25
	215 Add X9, X11, X12
	216 Add X8, X9, X8
	217 Add X29, X8, X10
	218 Move X0, X25
	219 Add X24, X29, X27
	220 Call SHA512Managed.Sigma_0, X0
	221 Move X27, X0
	222 Move X0, X24
	223 Call SHA512Managed.Sigma_1, X0
	224 Move X8, 0xEC4000
	225 Move X8, [X8+224]
	226 Move X8, [X8]
	227 Move X8, [X8+184]
	228 Move X8, [X8]
	229 Compare X8, 0
	230 JumpIfEqual {376}
	231 Move W9, [X8+24]
	232 Add X20, X20, 1
	233 NotImplemented "Instruction CMP not yet implemented."
	234 Xor X9, X28, X26
	235 And X10, X28, X26
	236 And X9, X25, X9
	237 Xor X9, X9, X10
	238 Move X10, [X31+24]
	239 Add X8, X8, X19
	240 NotImplemented "Instruction LDUR not yet implemented."
	241 Add X11, X0, X23
	242 Add X10, X10, X19
	243 And X12, X24, X22
	244 NotImplemented "Instruction LDUR not yet implemented."
	245 Add X11, X11, X12
	246 NotImplemented "Instruction BIC not yet implemented."
	247 Add X9, X29, X9
	248 Add X27, X9, X27
	249 Add X9, X11, X12
	250 Add X8, X9, X8
	251 Add X29, X8, X10
	252 Move X0, X27
	253 Add X23, X29, X26
	254 Call SHA512Managed.Sigma_0, X0
	255 Move X26, X0
	256 Move X0, X23
	257 Call SHA512Managed.Sigma_1, X0
	258 Move X8, 0xEC4000
	259 Move X8, [X8+224]
	260 Move X8, [X8]
	261 Move X8, [X8+184]
	262 Move X8, [X8]
	263 Compare X8, 0
	264 JumpIfEqual {376}
	265 Move W9, [X8+24]
	266 Add X20, X20, 1
	267 NotImplemented "Instruction CMP not yet implemented."
	268 Xor X9, X25, X28
	269 And X10, X25, X28
	270 And X9, X27, X9
	271 Xor X9, X9, X10
	272 Move X10, [X31+24]
	273 Add X8, X8, X19
	274 NotImplemented "Instruction LDUR not yet implemented."
	275 Add X11, X0, X21
	276 Add X10, X10, X19
	277 And X12, X23, X24
	278 NotImplemented "Instruction LDUR not yet implemented."
	279 Add X11, X11, X12
	280 NotImplemented "Instruction BIC not yet implemented."
	281 Add X9, X29, X9
	282 Add X26, X9, X26
	283 Add X9, X11, X12
	284 Add X8, X9, X8
	285 Add X21, X8, X10
	286 Move X0, X26
	287 Add X29, X21, X28
	288 Call SHA512Managed.Sigma_0, X0
	289 Move X28, X0
	290 Move X0, X29
	291 Move [X31+16], X29
	292 Call SHA512Managed.Sigma_1, X0
	293 Move X8, 0xEC4000
	294 Move X8, [X8+224]
	295 Move X8, [X8]
	296 Move X8, [X8+184]
	297 Move X8, [X8]
	298 Compare X8, 0
	299 JumpIfEqual {376}
	300 Move W9, [X8+24]
	301 Add X29, X20, 1
	302 NotImplemented "Instruction CMP not yet implemented."
	303 Xor X9, X27, X25
	304 And X10, X27, X25
	305 And X9, X26, X9
	306 Xor X9, X9, X10
	307 Move X10, [X31+24]
	308 Move X13, [X31+16]
	309 Move X8, [X8]
	310 Add X11, X0, X22
	311 Add X10, X10, X19
	312 And X12, X13, X23
	313 NotImplemented "Instruction LDUR not yet implemented."
	314 Add X11, X11, X12
	315 NotImplemented "Instruction BIC not yet implemented."
	316 Add X11, X11, X12
	317 Add X9, X21, X9
	318 Add X28, X9, X28
	319 Add X8, X11, X8
	320 Add X20, X8, X10
	321 Move X0, X28
	322 Add X22, X20, X25
	323 Call SHA512Managed.Sigma_0, X0
	324 Xor X8, X26, X27
	325 And X9, X26, X27
	326 And X8, X28, X8
	327 Xor X8, X8, X9
	328 Add X8, X20, X8
	329 Move X20, 0xEC4000
	330 Move X20, [X20+224]
	331 Subtract X10, X29, 7
	332 Add X19, X19, 64
	333 NotImplemented "Instruction CMP not yet implemented."
	334 Add X25, X8, X0
	335 Add X29, X29, 1
	336 Move X16, [X31+8]
	337 Move X17, [X31+16]
	338 Move X20, [X31+112]
	339 Move X19, [X31+120]
	340 Move X29, [X31+32]
	341 Move X30, [X31+40]
	342 Move X8, [X16]
	343 Move X9, [X16+8]
	344 Move X10, [X16+16]
	345 Move X11, [X16+24]
	346 Move X12, [X16+32]
	347 Move X13, [X16+40]
	348 Move X14, [X16+48]
	349 Move X15, [X16+56]
	350 Add X8, X8, X25
	351 Add X9, X9, X28
	352 Add X10, X10, X26
	353 Add X11, X11, X27
	354 Add X12, X12, X22
	355 Add X14, X14, X23
	356 Add X15, X15, X24
	357 Move X22, [X31+96]
	358 Move X21, [X31+104]
	359 Move X24, [X31+80]
	360 Move X23, [X31+88]
	361 Move X26, [X31+64]
	362 Move X25, [X31+72]
	363 Move X28, [X31+48]
	364 Move X27, [X31+56]
	365 Add X13, X13, X17
	366 Move [X16], X8
	367 Move [X16+8], X9
	368 Move [X16+16], X10
	369 Move [X16+24], X11
	370 Move [X16+32], X12
	371 Move [X16+40], X13
	372 Move [X16+48], X14
	373 Move [X16+56], X15
	374 Add X31, X31, 128
	375 Return 
	376 Call 0x1C17F20
	377 Call 0x1C17F28

Method: System.UInt64 RotateRight(System.UInt64 x, System.Int32 n)

Disassembly:
	0x03261340 MOV X1, X20
	0x03261344 BL 0x1C16E00

ISIL:
	001 NotImplemented "Instruction RORV not yet implemented."
	002 Return X0

Method: System.UInt64 Ch(System.UInt64 x, System.UInt64 y, System.UInt64 z)

Disassembly:
	0x032612C0 BL 0x1C16CF4
	0x032612C4 ADRP X0, 0xEC2000
	0x032612C8 LDR X0, [X0 + 0xF0]
	0x032612CC BL 0x1C16CF4

ISIL:
	001 And X8, X1, X0
	002 NotImplemented "Instruction BIC not yet implemented."
	003 Or X0, X9, X8
	004 Return X0

Method: System.UInt64 Maj(System.UInt64 x, System.UInt64 y, System.UInt64 z)

Disassembly:
	0x0326132C CBZ X0, 0x326134C
	0x03261330 ADRP X8, 0xE92000
	0x03261334 LDR X8, [X8 + 0x618]
	0x03261338 MOV X19, X0
	0x0326133C LDR X20, [X8]

ISIL:
	001 Xor X8, X2, X1
	002 And X8, X8, X0
	003 And X9, X2, X1
	004 Xor X0, X8, X9
	005 Return X0

Method: System.UInt64 Sigma_0(System.UInt64 x)

Disassembly:
	0x032612D0 MOVZ W8, 0x1
	0x032612D4 STRB W8, [X20 + 0x54D]
	0x032612D8 LDR X0, [X19 + 0x20]
	0x032612DC CBNZ X0, 0x3261320
	0x032612E0 ADRP X21, 0xEC2000
	0x032612E4 LDR X21, [X21 + 0xF0]
	0x032612E8 LDR X8, [X19]
	0x032612EC MOV X0, X19
	0x032612F0 LDR X9, [X8 + 0x2B8]
	0x032612F4 LDR X1, [X8 + 0x2C0]
	0x032612F8 BLR X9
	0x032612FC LDR X0, [X21]
	0x03261300 LDR X20, [X19 + 0x20]
	0x03261304 LDR W8, [X0 + 0xE0]
	0x03261308 CBNZ W8, 0x3261310
	0x0326130C BL 0x1C16DFC
	0x03261310 MOV X0, X20
	0x03261314 BL 0x3261368
	0x03261318 TBNZ X0, 0x0, 0x32612E8
	0x0326131C LDR X0, [X19 + 0x20]
	0x03261320 CBZ X0, 0x3261358
	0x03261324 MOV X1, X31
	0x03261328 BL 0x33A01F0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x117C000
	006 Move X21, 0xEC3000
	007 Move W8, [X20+1336]
	008 Move X21, [X21+224]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xEC3000
	015 Move X0, [X0+224]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1336], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 NotImplemented "Instruction EXTR not yet implemented."
	025 Xor X8, X8, X19
	026 Xor X0, X8, X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0

Method: System.UInt64 Sigma_1(System.UInt64 x)

Disassembly:
	0x03261264 MOVI V1.2S, 0x40
	0x03261268 STR W8, [X19 + 0x40]
	0x0326126C STR D0, [X19 + 0x38]
	0x03261270 STR D1, [X19 + 0x10]
	0x03261274 LDR X0, [X20]
	0x03261278 LDR W8, [X0 + 0xE0]
	0x0326127C CBNZ W8, 0x3261288
	0x03261280 BL 0x1C16DFC
	0x03261284 LDR X0, [X20]
	0x03261288 LDR X8, [X0 + 0xB8]
	0x0326128C LDR V0, [X8]
	0x03261290 STUR V0, [X19 + 0x28]
	0x03261294 LDP X20, X19, [X31 + 0x10]
	0x03261298 LDP X30, X21, [X31], #0x20
	0x0326129C RET
	0x032612A0 STP X30, X21, [X31 - 0x20]!
	0x032612A4 STP X20, X19, [X31 + 0x10]
	0x032612A8 ADRP X20, 0x117B000
	0x032612AC LDRB W8, [X20 + 0x54D]
	0x032612B0 MOV X19, X0
	0x032612B4 TBNZ X8, 0x0, 0x32612D8
	0x032612B8 ADRP X0, 0xE92000
	0x032612BC LDR X0, [X0 + 0x618]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x117C000
	006 Move X21, 0xEC3000
	007 Move W8, [X20+1337]
	008 Move X21, [X21+224]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xEC3000
	015 Move X0, [X0+224]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1337], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 NotImplemented "Instruction EXTR not yet implemented."
	025 Xor X8, X8, X19
	026 Xor X0, X8, X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0

Method: System.UInt64 sigma_0(System.UInt64 x)

Disassembly:
	0x03261348 CBZ X0, 0x326135C
	0x0326134C LDP X20, X19, [X31 + 0x10]
	0x03261350 LDP X30, X21, [X31], #0x20
	0x03261354 RET
	0x03261358 BL 0x1C16F20
	0x0326135C MOV X0, X19
	0x03261360 MOV X1, X20
	0x03261364 BL 0x1C171E0
	0x03261368 STP X30, X21, [X31 - 0x20]!
	0x0326136C STP X20, X19, [X31 + 0x10]
	0x03261370 ADRP X21, 0x117B000
	0x03261374 ADRP X20, 0xEC2000
	0x03261378 LDRB W8, [X21 + 0x550]
	0x0326137C LDR X20, [X20 + 0xF0]
	0x03261380 MOV X19, X0
	0x03261384 TBNZ X8, 0x0, 0x326139C
	0x03261388 ADRP X0, 0xEC2000
	0x0326138C LDR X0, [X0 + 0xF0]
	0x03261390 BL 0x1C16CF4
	0x03261394 MOVZ W8, 0x1
	0x03261398 STRB W8, [X21 + 0x550]
	0x0326139C LDR X0, [X20]
	0x032613A0 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x117C000
	006 Move X21, 0xEC3000
	007 Move W8, [X20+1338]
	008 Move X21, [X21+224]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xEC3000
	015 Move X0, [X0+224]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1338], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 NotImplemented "Instruction EXTR not yet implemented."
	025 Xor X8, X8, X19
	026 Xor X0, X8, X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0

Method: System.UInt64 sigma_1(System.UInt64 x)

Disassembly:
	0x032613A4 CBNZ W8, 0x32613AC
	0x032613A8 BL 0x1C16DFC
	0x032613AC CBZ X19, 0x3261448
	0x032613B0 LDR W8, [X19 + 0x18]
	0x032613B4 ORR W8, W8, 0x8
	0x032613B8 CMP W8, 0x18
	0x032613BC B.NE 0x3261448
	0x032613C0 MOV X0, X19
	0x032613C4 BL 0x3261744
	0x032613C8 LDR X8, [X20]
	0x032613CC MOV X19, X0
	0x032613D0 LDR W9, [X8 + 0xE0]
	0x032613D4 CBNZ W9, 0x32613E0
	0x032613D8 MOV X0, X8
	0x032613DC BL 0x1C16DFC
	0x032613E0 MOVZ W2, 0x8
	0x032613E4 MOVZ W3, 0x8
	0x032613E8 MOV X0, X19
	0x032613EC MOV W1, W31
	0x032613F0 BL 0x326180C
	0x032613F4 TBZ X0, 0x0, 0x3261400
	0x032613F8 MOVZ W0, 0x1
	0x032613FC B 0x326143C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x117C000
	006 Move X21, 0xEC3000
	007 Move W8, [X20+1339]
	008 Move X21, [X21+224]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xEC3000
	015 Move X0, [X0+224]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1339], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 NotImplemented "Instruction EXTR not yet implemented."
	025 Xor X8, X8, X19
	026 Xor X0, X8, X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0

Method: System.Void SHA512Expand(System.UInt64* x)

Disassembly:
	0x032611BC LDP X20, X19, [X31 + 0x10]
	0x032611C0 LDR X30, [X31], #0x20
	0x032611C4 BR X4
	0x032611C8 STR X30, [X31 - 0x20]!
	0x032611CC STP X20, X19, [X31 + 0x10]
	0x032611D0 LDR X8, [X0]
	0x032611D4 MOV X19, X0
	0x032611D8 LDP X9, X1, [X8 + 0x1E8]
	0x032611DC BLR X9
	0x032611E0 LDR X8, [X19]
	0x032611E4 MOV X20, X0
	0x032611E8 MOV X0, X19
	0x032611EC LDP X9, X1, [X8 + 0x1C8]
	0x032611F0 BLR X9
	0x032611F4 LDR X8, [X19]
	0x032611F8 MOV X2, X0
	0x032611FC MOV X0, X19
	0x03261200 MOV X1, X20
	0x03261204 LDR X4, [X8 + 0x2A8]
	0x03261208 LDR X3, [X8 + 0x2B0]
	0x0326120C LDP X20, X19, [X31 + 0x10]
	0x03261210 LDR X30, [X31], #0x20
	0x03261214 BR X4
	0x03261218 STP X30, X21, [X31 - 0x20]!
	0x0326121C STP X20, X19, [X31 + 0x10]
	0x03261220 ADRP X21, 0x117B000
	0x03261224 ADRP X20, 0xEC2000
	0x03261228 LDRB W8, [X21 + 0x54C]
	0x0326122C LDR X20, [X20 + 0xF0]
	0x03261230 MOV X19, X0
	0x03261234 TBNZ X8, 0x0, 0x326124C
	0x03261238 ADRP X0, 0xEC2000
	0x0326123C LDR X0, [X0 + 0xF0]
	0x03261240 BL 0x1C16CF4
	0x03261244 MOVZ W8, 0x1
	0x03261248 STRB W8, [X21 + 0x54C]
	0x0326124C MOV X0, X19
	0x03261250 MOV X1, X31
	0x03261254 BL 0x33BDD8C
	0x03261258 ADRP X8, 0xFFFFFFFFFD88D000
	0x0326125C LDR V0, [X8 + 0xB0]
	0x03261260 MOVZ W8, 0x2

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x117C000
	009 Move W8, [X20+1340]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xEC3000
	016 Move X0, [X0+224]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+1340], W8
	020 Move X22, 0xEC3000
	021 Move X22, [X22+224]
	022 Move X21, X31
	023 Move X0, [X22]
	024 Add X23, X19, X21
	025 Move X20, [X23+112]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X20
	031 Call SHA512Managed.sigma_1, X0
	032 Move X8, [X23+8]
	033 Move X24, [X23+72]
	034 Move X20, X0
	035 Move X0, X8
	036 Call SHA512Managed.sigma_0, X0
	037 Move X8, [X23]
	038 Add X9, X24, X20
	039 Add X21, X21, 8
	040 Add X9, X9, X0
	041 Add X8, X9, X8
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move [X23+128], X8
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 

Method: System.Void .cctor()

Disassembly:
	0x03261400 CBZ X19, 0x3261498
	0x03261404 LDR W8, [X19 + 0x18]
	0x03261408 CMP W8, 0x18
	0x0326140C B.NE 0x3261438
	0x03261410 LDR X0, [X20]
	0x03261414 LDR W8, [X0 + 0xE0]
	0x03261418 CBNZ W8, 0x3261420
	0x0326141C BL 0x1C16DFC
	0x03261420 MOVZ W1, 0x8
	0x03261424 MOVZ W2, 0x10
	0x03261428 MOVZ W3, 0x8
	0x0326142C MOV X0, X19
	0x03261430 BL 0x326180C
	0x03261434 TBNZ X0, 0x0, 0x32613F8
	0x03261438 MOV W0, W31
	0x0326143C LDP X20, X19, [X31 + 0x10]
	0x03261440 LDP X30, X21, [X31], #0x20
	0x03261444 RET
	0x03261448 ADRP X0, 0xEC1000
	0x0326144C LDR X0, [X0 + 0xF08]
	0x03261450 BL 0x1C16D08
	0x03261454 MOV X1, X31
	0x03261458 BL 0x33BDD84
	0x0326145C MOV X19, X0
	0x03261460 ADRP X0, 0xEBF000
	0x03261464 LDR X0, [X0 + 0xCE0]
	0x03261468 BL 0x1C16D08
	0x0326146C BL 0x1C16F10
	0x03261470 MOV X1, X19
	0x03261474 MOV X2, X31
	0x03261478 MOV X20, X0
	0x0326147C BL 0x3252170
	0x03261480 ADRP X0, 0xEC2000
	0x03261484 LDR X0, [X0 + 0x3D8]
	0x03261488 BL 0x1C16D08
	0x0326148C MOV X1, X0
	0x03261490 MOV X0, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x117C000
	007 Move X22, 0xE9B000
	008 Move X19, 0xEC3000
	009 Move X20, 0xEC3000
	010 Move W8, [X21+1341]
	011 Move X22, [X22+1384]
	012 Move X19, [X19+816]
	013 Move X20, [X20+224]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xEC3000
	019 Move X0, [X0+224]
	020 Call 0x1C17CF4
	021 Move X0, 0xEC3000
	022 Move X0, [X0+816]
	023 Call 0x1C17CF4
	024 Move X0, 0xE9B000
	025 Move X0, [X0+1384]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+1341], W8
	029 Move X0, [X22]
	030 Move W1, 80
	031 Call 0x1C17D6C
	032 Move X1, [X19]
	033 Move X2, X31
	034 Move X19, X0
	035 Call RuntimeHelpers.InitializeArray, X0, X1
	036 Move X8, [X20]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X8, [X8+184]
	040 Move [X8], X19
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X30, [X31+48]
	044 Return 

