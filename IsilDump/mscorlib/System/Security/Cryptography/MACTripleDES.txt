Type: System.Security.Cryptography.MACTripleDES

Method: System.Void .ctor()

Disassembly:
	0x0325669C CBNZ W8, 0x32566A4
	0x032566A0 BL 0x1C16DFC
	0x032566A4 MOV X0, X31
	0x032566A8 BL 0x325F54C
	0x032566AC TBNZ X0, 0x0, 0x3256700
	0x032566B0 MOVZ W0, 0x6602
	0x032566B4 MOV W1, W31
	0x032566B8 MOV X2, X31
	0x032566BC BL 0x3261AB8
	0x032566C0 TBZ X0, 0x0, 0x325673C
	0x032566C4 ADRP X20, 0xECD000
	0x032566C8 LDR X20, [X20 + 0x168]
	0x032566CC LDR X0, [X20]
	0x032566D0 LDR W8, [X0 + 0xE0]
	0x032566D4 CBNZ W8, 0x32566E0
	0x032566D8 BL 0x1C16DFC
	0x032566DC LDR X0, [X20]
	0x032566E0 LDR X8, [X0 + 0xB8]
	0x032566E4 MOVZ W9, 0x8
	0x032566E8 LDR X8, [X8]
	0x032566EC STR W9, [X19 + 0x14]
	0x032566F0 STR X8, [X19 + 0x30]
	0x032566F4 LDP X20, X19, [X31 + 0x10]
	0x032566F8 LDP X30, X21, [X31], #0x20
	0x032566FC RET
	0x03256700 ADRP X0, 0xECD000
	0x03256704 LDR X0, [X0 + 0xA0]
	0x03256708 BL 0x1C16D08
	0x0325670C MOV X1, X31
	0x03256710 BL 0x33BDD84
	0x03256714 MOV X19, X0
	0x03256718 ADRP X0, 0xE9D000
	0x0325671C LDR X0, [X0 + 0x5B0]
	0x03256720 BL 0x1C16D08
	0x03256724 BL 0x1C16F10
	0x03256728 MOV X1, X19
	0x0325672C MOV X2, X31
	0x03256730 MOV X20, X0
	0x03256734 BL 0x337DF1C
	0x03256738 B 0x3256774
	0x0325673C ADRP X0, 0xECC000
	0x03256740 LDR X0, [X0 + 0xF68]
	0x03256744 BL 0x1C16D08
	0x03256748 MOV X1, X31
	0x0325674C BL 0x33BDD84
	0x03256750 MOV X19, X0
	0x03256754 ADRP X0, 0xECA000
	0x03256758 LDR X0, [X0 + 0xCE0]
	0x0325675C BL 0x1C16D08
	0x03256760 BL 0x1C16F10
	0x03256764 MOV X1, X19
	0x03256768 MOV X2, X31
	0x0325676C MOV X20, X0
	0x03256770 BL 0x3252170
	0x03256774 ADRP X0, 0xECD000
	0x03256778 LDR X0, [X0 + 0x170]
	0x0325677C BL 0x1C16D08
	0x03256780 MOV X1, X0
	0x03256784 MOV X0, X20
	0x03256788 BL 0x1C16DEC
	0x0325678C LDR W0, [X0 + 0x38]
	0x03256790 RET
	0x03256794 STR X30, [X31 - 0x30]!
	0x03256798 STP X22, X21, [X31 + 0x10]
	0x0325679C STP X20, X19, [X31 + 0x20]
	0x032567A0 ADRP X22, 0x1186000
	0x032567A4 LDRB W8, [X22 + 0x4FC]
	0x032567A8 MOV X19, X2
	0x032567AC MOV X20, X1
	0x032567B0 MOV X21, X0
	0x032567B4 TBNZ X8, 0x0, 0x32567CC
	0x032567B8 ADRP X0, 0xECD000
	0x032567BC LDR X0, [X0 + 0x178]
	0x032567C0 BL 0x1C16CF4
	0x032567C4 MOVZ W8, 0x1
	0x032567C8 STRB W8, [X22 + 0x4FC]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1187000
	006 Move X21, 0xE9E000
	007 Move W8, [X20+1263]
	008 Move X21, [X21+1560]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xE9E000
	015 Move X0, [X0+1560]
	016 Call 0x1C17CF4
	017 Move X0, 0xECE000
	018 Move X0, [X0+240]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+1263], W8
	022 Move X0, X19
	023 Move X1, X31
	024 Call HashAlgorithm..ctor, X0
	025 Move X0, [X21]
	026 Move W1, 24
	027 Call 0x1C17D6C
	028 Move [X19+40], X0
	029 Move X0, X31
	030 Call Utils.get_StaticRandomNumberGenerator
	031 Compare X0, 0
	032 JumpIfEqual {93}
	033 Move X8, [X0]
	034 Move X1, [X19+40]
	035 Move X20, 0xECE000
	036 Move X9, [X8+408]
	037 Move X2, [X8+416]
	038 Move X20, [X20+240]
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move X0, [X20]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X31
	046 Call TripleDES.Create
	047 Move [X19+80], X0
	048 Compare X0, 0
	049 JumpIfEqual {93}
	050 Move X8, [X0]
	051 Move X9, [X8+408]
	052 Move X1, [X8+416]
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move X8, [X19+80]
	055 Move [X19+20], W0
	056 Compare X8, 0
	057 JumpIfEqual {93}
	058 Move X9, [X8]
	059 Move X0, X8
	060 Move X10, [X9+408]
	061 Move X1, [X9+416]
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Add W8, W0, 7
	064 NotImplemented "Instruction CMP not yet implemented."
	065 NotImplemented "Instruction CSEL not yet implemented."
	066 NotImplemented "Instruction SBFM not yet implemented."
	067 Move [X19+72], W1
	068 Move X0, [X21]
	069 Move X20, [X19+80]
	070 Call 0x1C17D6C
	071 Compare X20, 0
	072 JumpIfEqual {93}
	073 Move X8, [X20]
	074 Move X1, X0
	075 Move X0, X20
	076 Move X9, [X8+472]
	077 Move X2, [X8+480]
	078 NotImplemented "Instruction BLR not yet implemented."
	079 Move X0, [X19+80]
	080 Compare X0, 0
	081 JumpIfEqual {93}
	082 Move X8, [X0]
	083 Move W1, 3
	084 Move X9, [X8+616]
	085 Move X2, [X8+624]
	086 NotImplemented "Instruction BLR not yet implemented."
	087 Move [X19+48], X31
	088 Move X20, [X31+16]
	089 Move X19, [X31+24]
	090 Move X30, [X31+32]
	091 Move X21, [X31+40]
	092 Return 
	093 Call 0x1C17F20

Method: System.Void Initialize()

Disassembly:
	0x032567CC LDRB W8, [X21 + 0x48]
	0x032567D0 CBNZ W8, 0x3256814

ISIL:
	001 Move [X0+48], X31
	002 Return 

Method: System.Void HashCore(System.Byte[] rgbData, System.Int32 ibStart, System.Int32 cbSize)

Disassembly:
	0x032567D4 ADRP X8, 0xECD000
	0x032567D8 LDR X8, [X8 + 0x178]
	0x032567DC LDR X0, [X8]
	0x032567E0 BL 0x1C16F10
	0x032567E4 MOVZ W2, 0x1
	0x032567E8 MOV X1, X21
	0x032567EC MOV X3, X20
	0x032567F0 MOV X4, X19
	0x032567F4 MOV X5, X31
	0x032567F8 MOV X22, X0
	0x032567FC BL 0x3267FF8
	0x03256800 MOV X0, X22
	0x03256804 LDP X20, X19, [X31 + 0x20]
	0x03256808 LDP X22, X21, [X31 + 0x10]
	0x0325680C LDR X30, [X31], #0x30
	0x03256810 RET
	0x03256814 ADRP X0, 0xEA6000
	0x03256818 LDR X0, [X0 + 0x758]
	0x0325681C BL 0x1C16D08
	0x03256820 BL 0x1C16F10
	0x03256824 MOV X19, X0
	0x03256828 ADRP X0, 0xECD000
	0x0325682C LDR X0, [X0 + 0x180]
	0x03256830 BL 0x1C16D08
	0x03256834 MOV X1, X0
	0x03256838 MOV X0, X19
	0x0325683C MOV X2, X31
	0x03256840 BL 0x33802E4
	0x03256844 ADRP X0, 0xECD000
	0x03256848 LDR X0, [X0 + 0x188]
	0x0325684C BL 0x1C16D08
	0x03256850 MOV X1, X0
	0x03256854 MOV X0, X19
	0x03256858 BL 0x1C16DEC
	0x0325685C STR X30, [X31 - 0x30]!
	0x03256860 STP X22, X21, [X31 + 0x10]
	0x03256864 STP X20, X19, [X31 + 0x20]
	0x03256868 ADRP X22, 0x1186000
	0x0325686C LDRB W8, [X22 + 0x4FD]
	0x03256870 MOV X19, X2
	0x03256874 MOV X20, X1
	0x03256878 MOV X21, X0
	0x0325687C TBNZ X8, 0x0, 0x3256894
	0x03256880 ADRP X0, 0xECD000
	0x03256884 LDR X0, [X0 + 0x178]
	0x03256888 BL 0x1C16CF4
	0x0325688C MOVZ W8, 0x1
	0x03256890 STRB W8, [X22 + 0x4FD]
	0x03256894 LDRB W8, [X21 + 0x48]
	0x03256898 CBNZ W8, 0x32568DC
	0x0325689C ADRP X8, 0xECD000
	0x032568A0 LDR X8, [X8 + 0x178]
	0x032568A4 LDR X0, [X8]
	0x032568A8 BL 0x1C16F10
	0x032568AC MOV X1, X21
	0x032568B0 MOV W2, W31
	0x032568B4 MOV X3, X20
	0x032568B8 MOV X4, X19
	0x032568BC MOV X5, X31
	0x032568C0 MOV X22, X0
	0x032568C4 BL 0x3267FF8
	0x032568C8 MOV X0, X22
	0x032568CC LDP X20, X19, [X31 + 0x20]
	0x032568D0 LDP X22, X21, [X31 + 0x10]
	0x032568D4 LDR X30, [X31], #0x30
	0x032568D8 RET
	0x032568DC ADRP X0, 0xEA6000
	0x032568E0 LDR X0, [X0 + 0x758]
	0x032568E4 BL 0x1C16D08
	0x032568E8 BL 0x1C16F10
	0x032568EC MOV X19, X0
	0x032568F0 ADRP X0, 0xECD000
	0x032568F4 LDR X0, [X0 + 0x180]
	0x032568F8 BL 0x1C16D08
	0x032568FC MOV X1, X0
	0x03256900 MOV X0, X19
	0x03256904 MOV X2, X31
	0x03256908 BL 0x33802E4
	0x0325690C ADRP X0, 0xECD000
	0x03256910 LDR X0, [X0 + 0x190]
	0x03256914 BL 0x1C16D08
	0x03256918 MOV X1, X0
	0x0325691C MOV X0, X19
	0x03256920 BL 0x1C16DEC
	0x03256924 STP X30, X21, [X31 - 0x20]!
	0x03256928 STP X20, X19, [X31 + 0x10]
	0x0325692C ADRP X21, 0x1186000
	0x03256930 ADRP X20, 0xE9D000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X23, 0x1187000
	010 Move W8, [X23+1264]
	011 Move W19, W3
	012 Move W20, W2
	013 Move X21, X1
	014 Move X22, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xEAB000
	020 Move X0, [X0+3584]
	021 Call 0x1C17CF4
	022 Move X0, 0xECE000
	023 Move X0, [X0+248]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+1264], W8
	027 Move X8, [X22+48]
	028 Compare X8, 0
	029 JumpIfEqual {33}
	030 Move X23, [X22+56]
	031 Compare X23, 0
	032 JumpIfNotEqual {90}
	033 Move X8, [X22]
	034 Move X23, [X22+80]
	035 Move X0, X22
	036 Move X9, [X8+616]
	037 Move X1, [X8+624]
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Compare X23, 0
	040 JumpIfEqual {106}
	041 Move X8, [X23]
	042 Move X1, X0
	043 Move X0, X23
	044 Move X9, [X8+504]
	045 Move X2, [X8+512]
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Move X0, [X22+80]
	048 Compare X0, 0
	049 JumpIfEqual {106}
	050 Move X8, [X0]
	051 Move X9, [X8+632]
	052 Move X1, [X8+640]
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move X8, [X22+80]
	055 Move [X22+48], X0
	056 Compare X8, 0
	057 JumpIfEqual {106}
	058 Move X9, [X8]
	059 Move X0, X8
	060 Move X10, [X9+408]
	061 Move X1, [X9+416]
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move X8, 0xECE000
	064 Move X8, [X8+248]
	065 Move W23, W0
	066 Move X8, [X8]
	067 Move X0, X8
	068 Call 0x1C17F10
	069 Add W8, W23, 7
	070 NotImplemented "Instruction CMP not yet implemented."
	071 NotImplemented "Instruction CSEL not yet implemented."
	072 NotImplemented "Instruction SBFM not yet implemented."
	073 Move X24, X0
	074 Call TailStream..ctor, X0, X1
	075 Move [X22+64], X24
	076 Move X8, 0xEAB000
	077 Move X25, [X22+48]
	078 Move X8, [X8+3584]
	079 Move X0, [X8]
	080 Call 0x1C17F10
	081 Move W3, 1
	082 Move X1, X24
	083 Move X2, X25
	084 Move X4, X31
	085 Move X23, X0
	086 Call CryptoStream..ctor, X0, X1, X2, X3
	087 Move [X22+56], X23
	088 Compare X23, 0
	089 JumpIfEqual {106}
	090 Move X8, [X23]
	091 Move X0, X23
	092 Move X1, X21
	093 Move W2, W20
	094 Move X5, [X8+904]
	095 Move X4, [X8+912]
	096 Move W3, W19
	097 Move X20, [X31+48]
	098 Move X19, [X31+56]
	099 Move X22, [X31+32]
	100 Move X21, [X31+40]
	101 Move X24, [X31+16]
	102 Move X23, [X31+24]
	103 Move X30, [X31+64]
	104 Move X25, [X31+72]
	105 CallNoReturn X5
	106 Call 0x1C17F20

Method: System.Byte[] HashFinal()

Disassembly:
	0x032569C4 LDR X0, [X0 + 0x618]
	0x032569C8 BL 0x1C16CF4
	0x032569CC MOVZ W8, 0x1
	0x032569D0 STRB W8, [X20 + 0x4FF]
	0x032569D4 LDR X0, [X21]
	0x032569D8 MOVZ W1, 0x8
	0x032569DC BL 0x1C16D6C
	0x032569E0 STR X0, [X19 + 0x18]
	0x032569E4 MOV X0, X31
	0x032569E8 BL 0x3262098
	0x032569EC CBZ X0, 0x3256A08
	0x032569F0 LDR X8, [X0]
	0x032569F4 LDR X1, [X19 + 0x18]
	0x032569F8 LDP X20, X19, [X31 + 0x10]
	0x032569FC LDP X3, X2, [X8 + 0x198]
	0x03256A00 LDP X30, X21, [X31], #0x20
	0x03256A04 BR X3
	0x03256A08 BL 0x1C16F20
	0x03256A0C STP X30, X21, [X31 - 0x20]!
	0x03256A10 STP X20, X19, [X31 + 0x10]
	0x03256A14 ADRP X20, 0x1186000
	0x03256A18 ADRP X21, 0xECB000
	0x03256A1C ADRP X19, 0xECB000
	0x03256A20 LDRB W8, [X20 + 0x500]
	0x03256A24 LDR X21, [X21 + 0x520]
	0x03256A28 LDR X19, [X19 + 0x528]
	0x03256A2C TBNZ X8, 0x0, 0x3256A5C
	0x03256A30 ADRP X0, 0xECB000
	0x03256A34 LDR X0, [X0 + 0x520]
	0x03256A38 BL 0x1C16CF4
	0x03256A3C ADRP X0, 0xECB000
	0x03256A40 LDR X0, [X0 + 0x528]
	0x03256A44 BL 0x1C16CF4
	0x03256A48 ADRP X0, 0xECD000
	0x03256A4C LDR X0, [X0 + 0x168]
	0x03256A50 BL 0x1C16CF4
	0x03256A54 MOVZ W8, 0x1
	0x03256A58 STRB W8, [X20 + 0x500]
	0x03256A5C LDR X0, [X21]
	0x03256A60 MOVZ W1, 0x1
	0x03256A64 BL 0x1C16D6C
	0x03256A68 LDR X8, [X19]
	0x03256A6C MOV X19, X0
	0x03256A70 MOV X0, X8
	0x03256A74 BL 0x1C16F10
	0x03256A78 MOVZ W1, 0x28
	0x03256A7C MOVZ W2, 0x80
	0x03256A80 MOVZ W3, 0x8
	0x03256A84 MOV X4, X31
	0x03256A88 MOV X20, X0
	0x03256A8C BL 0x3251FDC
	0x03256A90 CBZ X19, 0x3256AC0
	0x03256A94 LDR W8, [X19 + 0x18]
	0x03256A98 CBZ W8, 0x3256AC4
	0x03256A9C ADRP X8, 0xECD000
	0x03256AA0 LDR X8, [X8 + 0x168]
	0x03256AA4 STR X20, [X19 + 0x20]
	0x03256AA8 LDR X8, [X8]
	0x03256AAC LDR X8, [X8 + 0xB8]
	0x03256AB0 STR X19, [X8]
	0x03256AB4 LDP X20, X19, [X31 + 0x10]
	0x03256AB8 LDP X30, X21, [X31], #0x20
	0x03256ABC RET
	0x03256AC0 BL 0x1C16F20
	0x03256AC4 BL 0x1C16F28
	0x03256AC8 STP X30, X21, [X31 - 0x20]!
	0x03256ACC STP X20, X19, [X31 + 0x10]
	0x03256AD0 ADRP X21, 0x1186000
	0x03256AD4 ADRP X20, 0xECD000
	0x03256AD8 LDRB W8, [X21 + 0x501]
	0x03256ADC LDR X20, [X20 + 0x198]
	0x03256AE0 MOV X19, X0
	0x03256AE4 TBNZ X8, 0x0, 0x3256AFC
	0x03256AE8 ADRP X0, 0xECD000
	0x03256AEC LDR X0, [X0 + 0x198]
	0x03256AF0 BL 0x1C16CF4
	0x03256AF4 MOVZ W8, 0x1
	0x03256AF8 STRB W8, [X21 + 0x501]
	0x03256AFC MOV X0, X19
	0x03256B00 MOV X1, X31
	0x03256B04 BL 0x32607B0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x1187000
	007 Move W8, [X20+1265]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xEAB000
	014 Move X0, [X0+3584]
	015 Call 0x1C17CF4
	016 Move X0, 0xECE000
	017 Move X0, [X0+248]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+1265], W8
	021 Move X8, [X19+48]
	022 Compare X8, 0
	023 JumpIfEqual {27}
	024 Move X20, [X19+56]
	025 Compare X20, 0
	026 JumpIfNotEqual {84}
	027 Move X8, [X19]
	028 Move X20, [X19+80]
	029 Move X0, X19
	030 Move X9, [X8+616]
	031 Move X1, [X8+624]
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Compare X20, 0
	034 JumpIfEqual {95}
	035 Move X8, [X20]
	036 Move X1, X0
	037 Move X0, X20
	038 Move X9, [X8+504]
	039 Move X2, [X8+512]
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move X0, [X19+80]
	042 Compare X0, 0
	043 JumpIfEqual {95}
	044 Move X8, [X0]
	045 Move X9, [X8+632]
	046 Move X1, [X8+640]
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Move X8, [X19+80]
	049 Move [X19+48], X0
	050 Compare X8, 0
	051 JumpIfEqual {95}
	052 Move X9, [X8]
	053 Move X0, X8
	054 Move X10, [X9+408]
	055 Move X1, [X9+416]
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Move X8, 0xECE000
	058 Move X8, [X8+248]
	059 Move W20, W0
	060 Move X8, [X8]
	061 Move X0, X8
	062 Call 0x1C17F10
	063 Add W8, W20, 7
	064 NotImplemented "Instruction CMP not yet implemented."
	065 NotImplemented "Instruction CSEL not yet implemented."
	066 NotImplemented "Instruction SBFM not yet implemented."
	067 Move X21, X0
	068 Call TailStream..ctor, X0, X1
	069 Move [X19+64], X21
	070 Move X8, 0xEAB000
	071 Move X22, [X19+48]
	072 Move X8, [X8+3584]
	073 Move X0, [X8]
	074 Call 0x1C17F10
	075 Move W3, 1
	076 Move X1, X21
	077 Move X2, X22
	078 Move X4, X31
	079 Move X20, X0
	080 Call CryptoStream..ctor, X0, X1, X2, X3
	081 Move [X19+56], X20
	082 Compare X20, 0
	083 JumpIfEqual {95}
	084 Move X0, X20
	085 Move X1, X31
	086 Call CryptoStream.FlushFinalBlock, X0
	087 Move X0, [X19+64]
	088 Compare X0, 0
	089 JumpIfEqual {95}
	090 Move X20, [X31+32]
	091 Move X19, [X31+40]
	092 Move X22, [X31+16]
	093 Move X21, [X31+24]
	094 Move X30, [X31+48]
	095 Call 0x1C17F20

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x03256B80 BL 0x1C16CF4
	0x03256B84 ADRP X0, 0xECD000
	0x03256B88 LDR X0, [X0 + 0x198]
	0x03256B8C BL 0x1C16CF4
	0x03256B90 MOVZ W8, 0x1
	0x03256B94 STRB W8, [X19 + 0x502]
	0x03256B98 LDR X0, [X22]
	0x03256B9C MOVZ W1, 0x1
	0x03256BA0 BL 0x1C16D6C
	0x03256BA4 LDR X8, [X21]
	0x03256BA8 MOV X19, X0
	0x03256BAC MOV X0, X8
	0x03256BB0 BL 0x1C16F10
	0x03256BB4 MOVZ W1, 0x80
	0x03256BB8 MOVZ W2, 0x100
	0x03256BBC MOVZ W3, 0x40
	0x03256BC0 MOV X4, X31
	0x03256BC4 MOV X20, X0
	0x03256BC8 BL 0x3251FDC
	0x03256BCC CBZ X19, 0x3256C50
	0x03256BD0 LDR W8, [X19 + 0x18]
	0x03256BD4 CBZ W8, 0x3256C54
	0x03256BD8 ADRP X23, 0xECD000
	0x03256BDC LDR X23, [X23 + 0x198]
	0x03256BE0 STR X20, [X19 + 0x20]
	0x03256BE4 MOVZ W1, 0x1
	0x03256BE8 LDR X8, [X23]
	0x03256BEC LDR X8, [X8 + 0xB8]
	0x03256BF0 STR X19, [X8]
	0x03256BF4 LDR X0, [X22]
	0x03256BF8 BL 0x1C16D6C
	0x03256BFC LDR X8, [X21]
	0x03256C00 MOV X19, X0
	0x03256C04 MOV X0, X8
	0x03256C08 BL 0x1C16F10
	0x03256C0C MOVZ W1, 0x80
	0x03256C10 MOVZ W2, 0x100
	0x03256C14 MOVZ W3, 0x40
	0x03256C18 MOV X4, X31
	0x03256C1C MOV X20, X0
	0x03256C20 BL 0x3251FDC
	0x03256C24 CBZ X19, 0x3256C50
	0x03256C28 LDR W8, [X19 + 0x18]
	0x03256C2C CBZ W8, 0x3256C54
	0x03256C30 STR X20, [X19 + 0x20]
	0x03256C34 LDR X8, [X23]
	0x03256C38 LDP X22, X21, [X31 + 0x10]
	0x03256C3C LDR X8, [X8 + 0xB8]
	0x03256C40 STR X19, [X8 + 0x8]
	0x03256C44 LDP X20, X19, [X31 + 0x20]
	0x03256C48 LDP X30, X23, [X31], #0x30
	0x03256C4C RET
	0x03256C50 BL 0x1C16F20
	0x03256C54 BL 0x1C16F28
	0x03256C58 STP X30, X21, [X31 - 0x20]!
	0x03256C5C STP X20, X19, [X31 + 0x10]
	0x03256C60 ADRP X21, 0x1186000
	0x03256C64 ADRP X20, 0xECD000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1187000
	006 Move W8, [X21+1266]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xE9E000
	014 Move X0, [X0+3584]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1266], W8
	018 Move TEMP, X19
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfNotEqual {65}
	022 Move X0, [X20+80]
	023 Compare X0, 0
	024 JumpIfEqual {27}
	025 Move X1, X31
	026 Call SymmetricAlgorithm.Clear, X0
	027 Move X21, [X20+48]
	028 Compare X21, 0
	029 JumpIfEqual {53}
	030 Move X10, 0xE9E000
	031 Move X8, [X21]
	032 Move X10, [X10+3584]
	033 NotImplemented "Instruction LDRH not yet implemented."
	034 Move X1, [X10]
	035 Compare X9, 0
	036 JumpIfEqual {43}
	037 Move X10, [X8+176]
	038 Add X10, X10, 8
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Subtract X9, X9, 1
	042 Add X10, X10, 16
	043 Move X0, X21
	044 Move W2, W31
	045 Call 0x1C5D788
	046 NotImplemented "Instruction LDRSW not yet implemented."
	047 Add X8, X8, X9
	048 Add X0, X8, 312
	049 Move X8, [X0]
	050 Move X1, [X0+8]
	051 Move X0, X21
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move X0, [X20+56]
	054 Compare X0, 0
	055 JumpIfEqual {58}
	056 Move X1, X31
	057 Call CryptoStream.Clear, X0
	058 Move X0, [X20+64]
	059 Compare X0, 0
	060 JumpIfEqual {65}
	061 Move X8, [X0]
	062 Move X9, [X8+632]
	063 Move X1, [X8+640]
	064 NotImplemented "Instruction BLR not yet implemented."
	065 And W1, W19, 1
	066 Move X0, X20
	067 Move X20, [X31+16]
	068 Move X19, [X31+24]
	069 Move X30, [X31+32]
	070 Move X21, [X31+40]
	071 Call KeyedHashAlgorithm.Dispose, X0, X1
	072 Return 

