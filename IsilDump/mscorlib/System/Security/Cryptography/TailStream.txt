Type: System.Security.Cryptography.TailStream

Method: System.Void .ctor(System.Int32 bufferSize)

Disassembly:
	0x03256934 LDRB W8, [X21 + 0x4FE]
	0x03256938 LDR X20, [X20 + 0x618]
	0x0325693C MOV X19, X0
	0x03256940 TBNZ X8, 0x0, 0x3256958
	0x03256944 ADRP X0, 0xE9D000
	0x03256948 LDR X0, [X0 + 0x618]
	0x0325694C BL 0x1C16CF4
	0x03256950 MOVZ W8, 0x1
	0x03256954 STRB W8, [X21 + 0x4FE]
	0x03256958 LDR W8, [X19 + 0x38]
	0x0325695C LDR X0, [X20]
	0x03256960 ADD W9, W8, 0x7
	0x03256964 CMP W8, 0x0
	0x03256968 CSEL W8, W9, W8, LT
	0x0325696C SBFM W1, W8, 0x3, 0x1F
	0x03256970 BL 0x1C16D6C
	0x03256974 STR X0, [X19 + 0x20]
	0x03256978 MOV X0, X31
	0x0325697C BL 0x3262098
	0x03256980 CBZ X0, 0x325699C
	0x03256984 LDR X8, [X0]
	0x03256988 LDR X1, [X19 + 0x20]
	0x0325698C LDP X20, X19, [X31 + 0x10]
	0x03256990 LDP X3, X2, [X8 + 0x198]
	0x03256994 LDP X30, X21, [X31], #0x20
	0x03256998 BR X3
	0x0325699C BL 0x1C16F20
	0x032569A0 STP X30, X21, [X31 - 0x20]!
	0x032569A4 STP X20, X19, [X31 + 0x10]
	0x032569A8 ADRP X20, 0x1186000
	0x032569AC ADRP X21, 0xE9D000
	0x032569B0 LDRB W8, [X20 + 0x4FF]
	0x032569B4 LDR X21, [X21 + 0x618]
	0x032569B8 MOV X19, X0
	0x032569BC TBNZ X8, 0x0, 0x32569D4
	0x032569C0 ADRP X0, 0xE9D000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1187000
	007 Move X21, 0xECD000
	008 Move W8, [X22+1267]
	009 Move X21, [X21+3344]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xE9E000
	017 Move X0, [X0+1560]
	018 Call 0x1C17CF4
	019 Move X0, 0xECD000
	020 Move X0, [X0+3344]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1267], W8
	024 Move X0, [X21]
	025 Move X21, 0xE9E000
	026 Move W8, [X0+224]
	027 Move X21, [X21+1560]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Move X1, X31
	033 Call Stream..ctor, X0
	034 Move X0, [X21]
	035 Move W1, W19
	036 Call 0x1C17D6C
	037 Move [X20+40], X0
	038 Move [X20+48], W19
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return 

Method: System.Void Clear()

Disassembly:
	0x03256C68 LDRB W8, [X21 + 0x503]
	0x03256C6C LDR X20, [X20 + 0x198]
	0x03256C70 MOV X19, X0
	0x03256C74 TBNZ X8, 0x0, 0x3256C98

ISIL:
	001 Move X8, [X0]
	002 Move X2, [X8+632]
	003 Move X1, [X8+640]
	004 CallNoReturn X2

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x03256C78 ADRP X0, 0xECA000
	0x03256C7C LDR X0, [X0 + 0xBD8]
	0x03256C80 BL 0x1C16CF4
	0x03256C84 ADRP X0, 0xECD000
	0x03256C88 LDR X0, [X0 + 0x198]
	0x03256C8C BL 0x1C16CF4
	0x03256C90 MOVZ W8, 0x1
	0x03256C94 STRB W8, [X21 + 0x503]
	0x03256C98 LDR X0, [X20]
	0x03256C9C ADRP X20, 0xECA000
	0x03256CA0 LDR W8, [X0 + 0xE0]
	0x03256CA4 LDR X20, [X20 + 0xBD8]
	0x03256CA8 CBNZ W8, 0x3256CB0
	0x03256CAC BL 0x1C16DFC
	0x03256CB0 MOV X0, X19
	0x03256CB4 BL 0x3256AC8
	0x03256CB8 LDR X0, [X20]
	0x03256CBC LDR W8, [X0 + 0xE0]
	0x03256CC0 CBNZ W8, 0x3256CC8
	0x03256CC4 BL 0x1C16DFC
	0x03256CC8 MOV X0, X31
	0x03256CCC BL 0x325F54C
	0x03256CD0 TBNZ X0, 0x0, 0x3256CE0
	0x03256CD4 LDP X20, X19, [X31 + 0x10]
	0x03256CD8 LDP X30, X21, [X31], #0x20
	0x03256CDC RET
	0x03256CE0 ADRP X0, 0xECD000
	0x03256CE4 LDR X0, [X0 + 0xA0]
	0x03256CE8 BL 0x1C16D08
	0x03256CEC MOV X1, X31
	0x03256CF0 BL 0x33BDD84
	0x03256CF4 MOV X19, X0
	0x03256CF8 ADRP X0, 0xE9D000
	0x03256CFC LDR X0, [X0 + 0x5B0]
	0x03256D00 BL 0x1C16D08
	0x03256D04 BL 0x1C16F10
	0x03256D08 MOV X1, X19
	0x03256D0C MOV X2, X31
	0x03256D10 MOV X20, X0
	0x03256D14 BL 0x337DF1C
	0x03256D18 ADRP X0, 0xECD000
	0x03256D1C LDR X0, [X0 + 0x1A0]
	0x03256D20 BL 0x1C16D08
	0x03256D24 MOV X1, X0
	0x03256D28 MOV X0, X20
	0x03256D2C BL 0x1C16DEC
	0x03256D30 MOV X3, X2
	0x03256D34 LDR W2, [X0 + 0x3C]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W20, W1
	006 Move X19, X0
	007 Move TEMP, X1
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfNotEqual {19}
	011 Move X0, [X19+40]
	012 Compare X0, 0
	013 JumpIfEqual {18}
	014 Move W2, [X0+24]
	015 Move W1, W31
	016 Move X3, X31
	017 Call Array.Clear, X0, X1, X2
	018 Move [X19+40], X31
	019 And W1, W20, 1
	020 Move X0, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X2, X31
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Call Stream.Dispose, X0, X1
	027 Return 
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X21, X0
	030 Move X0, X21
	031 Call 0x3EB2AD0
	032 Move X20, [X0]
	033 Call 0x3EB2AE0
	034 Move W1, 1
	035 Move X0, X19
	036 Move X2, X31
	037 Call Stream.Dispose, X0, X1
	038 Compare X20, 0
	039 JumpIfNotEqual {46}
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Return 
	045 Move X20, X31
	046 Move X0, X20
	047 Call 0x1C17F18
	048 Move X21, X0
	049 Move W1, 1
	050 Move X0, X19
	051 Move X2, X31
	052 Call Stream.Dispose, X0, X1
	053 Compare X20, 0
	054 JumpIfNotEqual {57}
	055 Move X0, X21
	056 Call 0x1D2D690
	057 Move X0, X20
	058 Call 0x1C17F18
	059 Call 0x1991590

Method: System.Byte[] get_Buffer()

Disassembly:
	0x03256B08 MOVZ W8, 0x100
	0x03256B0C MOVI V0.2S, 0x80
	0x03256B10 STR W8, [X19 + 0x38]
	0x03256B14 STR D0, [X19 + 0x10]
	0x03256B18 LDR X0, [X20]
	0x03256B1C LDR W8, [X0 + 0xE0]
	0x03256B20 CBNZ W8, 0x3256B2C
	0x03256B24 BL 0x1C16DFC
	0x03256B28 LDR X0, [X20]
	0x03256B2C LDR X8, [X0 + 0xB8]
	0x03256B30 LDR V0, [X8]
	0x03256B34 STUR V0, [X19 + 0x28]
	0x03256B38 LDP X20, X19, [X31 + 0x10]
	0x03256B3C LDP X30, X21, [X31], #0x20
	0x03256B40 RET
	0x03256B44 STP X30, X23, [X31 - 0x30]!
	0x03256B48 STP X22, X21, [X31 + 0x10]
	0x03256B4C STP X20, X19, [X31 + 0x20]
	0x03256B50 ADRP X19, 0x1186000
	0x03256B54 ADRP X22, 0xECB000
	0x03256B58 ADRP X21, 0xECB000
	0x03256B5C LDRB W8, [X19 + 0x502]
	0x03256B60 LDR X22, [X22 + 0x520]
	0x03256B64 LDR X21, [X21 + 0x528]
	0x03256B68 TBNZ X8, 0x0, 0x3256B98
	0x03256B6C ADRP X0, 0xECB000
	0x03256B70 LDR X0, [X0 + 0x520]
	0x03256B74 BL 0x1C16CF4
	0x03256B78 ADRP X0, 0xECB000
	0x03256B7C LDR X0, [X0 + 0x528]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1187000
	005 Move W8, [X20+1268]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE9E000
	012 Move X0, [X0+1560]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1268], W8
	016 Move X0, [X19+40]
	017 Compare X0, 0
	018 JumpIfEqual {35}
	019 Move X1, X31
	020 Call Array.Clone, X0
	021 Compare X0, 0
	022 JumpIfEqual {31}
	023 Move X8, 0xE9E000
	024 Move X8, [X8+1560]
	025 Move X19, X0
	026 Move X20, [X8]
	027 Move X1, X20
	028 Call 0x1C17E00
	029 Compare X0, 0
	030 JumpIfEqual {36}
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Return X0
	035 Call 0x1C17F20
	036 Move X0, X19
	037 Move X1, X20
	038 Call 0x1C181E0

Method: System.Boolean get_CanRead()

Disassembly:
	0x03256D38 LDR W4, [X0 + 0x14]
	0x03256D3C MOV W5, W31

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean get_CanSeek()

Disassembly:
	0x03256D40 B 0x3256D44
	0x03256D44 SUB X31, X31, 0x60

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean get_CanWrite()

Disassembly:
	0x03256D48 STR X30, [X31 + 0x10]
	0x03256D4C STP X26, X25, [X31 + 0x20]
	0x03256D50 STP X24, X23, [X31 + 0x30]
	0x03256D54 STP X22, X21, [X31 + 0x40]

ISIL:
	001 Move X8, [X0+40]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Int64 get_Length()

Disassembly:
	0x03256D58 STP X20, X19, [X31 + 0x50]
	0x03256D5C ADRP X25, 0x1186000
	0x03256D60 LDRB W8, [X25 + 0x504]
	0x03256D64 MOV W19, W5
	0x03256D68 MOV W20, W4
	0x03256D6C MOV X22, X3
	0x03256D70 MOV W21, W2
	0x03256D74 MOV X23, X1
	0x03256D78 MOV X24, X0
	0x03256D7C TBNZ X8, 0x0, 0x3256D94
	0x03256D80 ADRP X0, 0xECD000
	0x03256D84 LDR X0, [X0 + 0x1A8]
	0x03256D88 BL 0x1C16CF4
	0x03256D8C MOVZ W8, 0x1
	0x03256D90 STRB W8, [X25 + 0x504]
	0x03256D94 CBNZ X23, 0x3256DB8
	0x03256D98 LDR W8, [X24 + 0x38]
	0x03256D9C MOV X1, X31
	0x03256DA0 ADD W9, W8, 0x7
	0x03256DA4 CMP W8, 0x0
	0x03256DA8 CSEL W8, W9, W8, LT
	0x03256DAC SBFM W0, W8, 0x3, 0x1F

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0xECD000
	005 Move X0, [X0+3392]
	006 Call 0x1C17D08
	007 Move X1, X31
	008 Call Environment.GetResourceString, X0
	009 Move X19, X0
	010 Move X0, 0xE9E000
	011 Move X0, [X0+2880]
	012 Call 0x1C17D08
	013 Call 0x1C17F10
	014 Move X1, X19
	015 Move X2, X31
	016 Move X20, X0
	017 Call NotSupportedException..ctor, X0, X1
	018 Move X0, 0xECE000
	019 Move X0, [X0+256]
	020 Call 0x1C17D08
	021 Move X1, X0
	022 Move X0, X20
	023 Call 0x1C17DEC

Method: System.Int64 get_Position()

Disassembly:
	0x03256DB0 BL 0x3262208
	0x03256DB4 MOV X23, X0
	0x03256DB8 ADRP X26, 0xECD000
	0x03256DBC LDR X26, [X26 + 0x1A8]
	0x03256DC0 CBNZ X22, 0x3256DE4
	0x03256DC4 LDR W8, [X24 + 0x10]
	0x03256DC8 MOV X1, X31
	0x03256DCC ADD W9, W8, 0x7
	0x03256DD0 CMP W8, 0x0
	0x03256DD4 CSEL W8, W9, W8, LT
	0x03256DD8 SBFM W0, W8, 0x3, 0x1F
	0x03256DDC BL 0x3262208
	0x03256DE0 MOV X22, X0
	0x03256DE4 LDR X0, [X26]
	0x03256DE8 LDR W25, [X24 + 0x10]
	0x03256DEC LDR W24, [X24 + 0x40]
	0x03256DF0 BL 0x1C16F10
	0x03256DF4 MOV X1, X23
	0x03256DF8 MOV W2, W21
	0x03256DFC MOV X3, X22
	0x03256E00 MOV W4, W25
	0x03256E04 MOV W5, W20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0xECD000
	005 Move X0, [X0+3392]
	006 Call 0x1C17D08
	007 Move X1, X31
	008 Call Environment.GetResourceString, X0
	009 Move X19, X0
	010 Move X0, 0xE9E000
	011 Move X0, [X0+2880]
	012 Call 0x1C17D08
	013 Call 0x1C17F10
	014 Move X1, X19
	015 Move X2, X31
	016 Move X20, X0
	017 Call NotSupportedException..ctor, X0, X1
	018 Move X0, 0xECE000
	019 Move X0, [X0+264]
	020 Call 0x1C17D08
	021 Move X1, X0
	022 Move X0, X20
	023 Call 0x1C17DEC

Method: System.Void set_Position(System.Int64 value)

Disassembly:
	0x03256E08 MOV W6, W24
	0x03256E0C MOV W7, W19
	0x03256E10 MOV X26, X0
	0x03256E14 BL 0x3256EAC
	0x03256E18 MOV X0, X26
	0x03256E1C LDP X20, X19, [X31 + 0x50]
	0x03256E20 LDP X22, X21, [X31 + 0x40]
	0x03256E24 LDP X24, X23, [X31 + 0x30]
	0x03256E28 LDP X26, X25, [X31 + 0x20]
	0x03256E2C LDR X30, [X31 + 0x10]
	0x03256E30 ADD X31, X31, 0x60
	0x03256E34 RET
	0x03256E38 MOV X3, X2
	0x03256E3C LDR W2, [X0 + 0x3C]
	0x03256E40 LDR W4, [X0 + 0x14]
	0x03256E44 MOVZ W5, 0x1
	0x03256E48 B 0x3256D44
	0x03256E4C STP X30, X19, [X31 - 0x10]!
	0x03256E50 LDR W8, [X0 + 0x38]
	0x03256E54 MOV X19, X0
	0x03256E58 MOV X1, X31
	0x03256E5C ADD W9, W8, 0x7

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0xECD000
	005 Move X0, [X0+3392]
	006 Call 0x1C17D08
	007 Move X1, X31
	008 Call Environment.GetResourceString, X0
	009 Move X19, X0
	010 Move X0, 0xE9E000
	011 Move X0, [X0+2880]
	012 Call 0x1C17D08
	013 Call 0x1C17F10
	014 Move X1, X19
	015 Move X2, X31
	016 Move X20, X0
	017 Call NotSupportedException..ctor, X0, X1
	018 Move X0, 0xECE000
	019 Move X0, [X0+272]
	020 Call 0x1C17D08
	021 Move X1, X0
	022 Move X0, X20
	023 Call 0x1C17DEC

Method: System.Void Flush()

Disassembly:
	0x03256E60 CMP W8, 0x0

ISIL:
	001 Return 

Method: System.Int64 Seek(System.Int64 offset, System.IO.SeekOrigin origin)

Disassembly:
	0x03256E64 CSEL W8, W9, W8, LT
	0x03256E68 SBFM W0, W8, 0x3, 0x1F
	0x03256E6C BL 0x3262208
	0x03256E70 STR X0, [X19 + 0x20]
	0x03256E74 LDP X30, X19, [X31], #0x10
	0x03256E78 RET
	0x03256E7C STP X30, X19, [X31 - 0x10]!
	0x03256E80 LDR W8, [X0 + 0x10]
	0x03256E84 MOV X19, X0
	0x03256E88 MOV X1, X31
	0x03256E8C ADD W9, W8, 0x7
	0x03256E90 CMP W8, 0x0
	0x03256E94 CSEL W8, W9, W8, LT
	0x03256E98 SBFM W0, W8, 0x3, 0x1F
	0x03256E9C BL 0x3262208
	0x03256EA0 STR X0, [X19 + 0x18]
	0x03256EA4 LDP X30, X19, [X31], #0x10
	0x03256EA8 RET
	0x03256EAC SUB X31, X31, 0x80
	0x03256EB0 STP X29, X30, [X31 + 0x20]
	0x03256EB4 STP X28, X27, [X31 + 0x30]
	0x03256EB8 STP X26, X25, [X31 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0xECD000
	005 Move X0, [X0+3392]
	006 Call 0x1C17D08
	007 Move X1, X31
	008 Call Environment.GetResourceString, X0
	009 Move X19, X0
	010 Move X0, 0xE9E000
	011 Move X0, [X0+2880]
	012 Call 0x1C17D08
	013 Call 0x1C17F10
	014 Move X1, X19
	015 Move X2, X31
	016 Move X20, X0
	017 Call NotSupportedException..ctor, X0, X1
	018 Move X0, 0xECE000
	019 Move X0, [X0+280]
	020 Call 0x1C17D08
	021 Move X1, X0
	022 Move X0, X20
	023 Call 0x1C17DEC

Method: System.Void SetLength(System.Int64 value)

Disassembly:
	0x03256EBC STP X24, X23, [X31 + 0x50]
	0x03256EC0 STP X22, X21, [X31 + 0x60]
	0x03256EC4 STP X20, X19, [X31 + 0x70]
	0x03256EC8 ADRP X20, 0x1186000
	0x03256ECC LDRB W8, [X20 + 0x505]
	0x03256ED0 MOV W25, W7
	0x03256ED4 MOV W26, W6
	0x03256ED8 MOV W24, W4
	0x03256EDC MOV X21, X3
	0x03256EE0 MOV W23, W2
	0x03256EE4 MOV X22, X1
	0x03256EE8 MOV X19, X0
	0x03256EEC STR W5, [X31 + 0xC]
	0x03256EF0 TBNZ X8, 0x0, 0x3256F14
	0x03256EF4 ADRP X0, 0xE9D000
	0x03256EF8 LDR X0, [X0 + 0x618]
	0x03256EFC BL 0x1C16CF4
	0x03256F00 ADRP X0, 0xE9E000
	0x03256F04 LDR X0, [X0 + 0xE58]
	0x03256F08 BL 0x1C16CF4
	0x03256F0C MOVZ W8, 0x1
	0x03256F10 STRB W8, [X20 + 0x505]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0xECD000
	005 Move X0, [X0+3392]
	006 Call 0x1C17D08
	007 Move X1, X31
	008 Call Environment.GetResourceString, X0
	009 Move X19, X0
	010 Move X0, 0xE9E000
	011 Move X0, [X0+2880]
	012 Call 0x1C17D08
	013 Call 0x1C17F10
	014 Move X1, X19
	015 Move X2, X31
	016 Move X20, X0
	017 Call NotSupportedException..ctor, X0, X1
	018 Move X0, 0xECE000
	019 Move X0, [X0+288]
	020 Call 0x1C17D08
	021 Move X1, X0
	022 Move X0, X20
	023 Call 0x1C17DEC

Method: System.Int32 Read(System.Byte[] buffer, System.Int32 offset, System.Int32 count)

Disassembly:
	0x03256F14 MOV X0, X19
	0x03256F18 MOV X1, X31
	0x03256F1C BL 0x33BDD8C
	0x03256F20 CBZ X22, 0x32573E8
	0x03256F24 ADD W8, W24, 0x7
	0x03256F28 CMP W24, 0x0
	0x03256F2C ADD W9, W24, 0x1F
	0x03256F30 CSEL W8, W8, W24, LT
	0x03256F34 CSEL W9, W9, W24, LT
	0x03256F38 SBFM W8, W8, 0x3, 0x1F
	0x03256F3C SBFM W1, W9, 0x5, 0x1F
	0x03256F40 STP W23, W26, [X19 + 0x10]
	0x03256F44 STP W25, W24, [X19 + 0x18]
	0x03256F48 STR W8, [X19 + 0x20]
	0x03256F4C STR W1, [X19 + 0x44]
	0x03256F50 LDR W8, [X22 + 0x18]
	0x03256F54 STR W23, [X31 + 0x1C]
	0x03256F58 STR X22, [X31 + 0x10]
	0x03256F5C ADRP X23, 0xE9E000
	0x03256F60 LDR X23, [X23 + 0xE58]
	0x03256F64 ADD W9, W8, 0x3
	0x03256F68 CMP W8, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0xECD000
	005 Move X0, [X0+3464]
	006 Call 0x1C17D08
	007 Move X1, X31
	008 Call Environment.GetResourceString, X0
	009 Move X19, X0
	010 Move X0, 0xE9E000
	011 Move X0, [X0+2880]
	012 Call 0x1C17D08
	013 Call 0x1C17F10
	014 Move X1, X19
	015 Move X2, X31
	016 Move X20, X0
	017 Call NotSupportedException..ctor, X0, X1
	018 Move X0, 0xECE000
	019 Move X0, [X0+296]
	020 Call 0x1C17D08
	021 Move X1, X0
	022 Move X0, X20
	023 Call 0x1C17DEC

Method: System.Void Write(System.Byte[] buffer, System.Int32 offset, System.Int32 count)

Disassembly:
	0x03256F6C CSEL W8, W9, W8, LT
	0x03256F70 SBFM W8, W8, 0x2, 0x1F
	0x03256F74 STR W8, [X19 + 0x48]
	0x03256F78 LDR X0, [X23]
	0x03256F7C CMP W24, 0xDF
	0x03256F80 MOVZ W8, 0x2
	0x03256F84 CINC W20, W8, GT
	0x03256F88 MOVZ W8, 0x3
	0x03256F8C CINC W22, W8, GT
	0x03256F90 BL 0x1C16D6C
	0x03256F94 LDR X8, [X23]
	0x03256F98 LDR W1, [X19 + 0x44]
	0x03256F9C MOV X29, X0
	0x03256FA0 MOV X0, X8
	0x03256FA4 BL 0x1C16D6C
	0x03256FA8 LDR X8, [X23]
	0x03256FAC LDR W1, [X19 + 0x44]
	0x03256FB0 MOV X28, X0
	0x03256FB4 MOV X0, X8
	0x03256FB8 BL 0x1C16D6C
	0x03256FBC LDR X8, [X23]
	0x03256FC0 LDR W1, [X19 + 0x44]
	0x03256FC4 MOV X27, X0
	0x03256FC8 MOV X0, X8
	0x03256FCC BL 0x1C16D6C
	0x03256FD0 LDR X8, [X23]
	0x03256FD4 LDR W1, [X19 + 0x44]
	0x03256FD8 MOV X26, X0
	0x03256FDC MOV X0, X8
	0x03256FE0 BL 0x1C16D6C
	0x03256FE4 LDR X8, [X23]
	0x03256FE8 LDR W1, [X19 + 0x44]
	0x03256FEC MOV X25, X0
	0x03256FF0 MOV X0, X8
	0x03256FF4 BL 0x1C16D6C
	0x03256FF8 LDR W3, [X19 + 0x44]
	0x03256FFC MOV X24, X0
	0x03257000 CMP W3, 0x1
	0x03257004 B.LT 0x3257128
	0x03257008 CBZ X29, 0x32573E4
	0x0325700C LDR W8, [X29 + 0x18]
	0x03257010 MOV X10, X31
	0x03257014 MOV W9, W22
	0x03257018 MOV W11, W20
	0x0325701C ADD X12, X24, 0x20
	0x03257020 ADD X13, X25, 0x20
	0x03257024 ADD X14, X26, 0x20
	0x03257028 ADD X15, X27, 0x20
	0x0325702C ADD X16, X28, 0x20
	0x03257030 ADD X17, X29, 0x20
	0x03257034 SUB W0, W31, W22
	0x03257038 SUB W1, W31, W20
	0x0325703C CMP X10, X8
	0x03257040 B.CS 0x32573E0
	0x03257044 ADD X2, X10, 0x1
	0x03257048 SDIV W4, W2, W3
	0x0325704C MSUB W3, W4, W3, W2
	0x03257050 STR W3, [X17, X10, LSL #2]
	0x03257054 CBZ X28, 0x32573E4
	0x03257058 LDR W3, [X28 + 0x18]
	0x0325705C SUB X2, X2, 0x1
	0x03257060 CMP X2, X3
	0x03257064 B.CS 0x32573E0
	0x03257068 LDR W3, [X19 + 0x44]
	0x0325706C ADD W4, W11, W10
	0x03257070 SDIV W5, W4, W3
	0x03257074 MSUB W3, W5, W3, W4
	0x03257078 STR W3, [X16, X10, LSL #2]
	0x0325707C CBZ X27, 0x32573E4
	0x03257080 LDR W3, [X27 + 0x18]
	0x03257084 CMP X2, X3
	0x03257088 B.CS 0x32573E0
	0x0325708C LDR W3, [X19 + 0x44]
	0x03257090 ADD W4, W9, W10
	0x03257094 SDIV W5, W4, W3
	0x03257098 MSUB W3, W5, W3, W4
	0x0325709C STR W3, [X15, X10, LSL #2]
	0x032570A0 CBZ X26, 0x32573E4
	0x032570A4 LDR W3, [X26 + 0x18]
	0x032570A8 CMP X2, X3
	0x032570AC B.CS 0x32573E0
	0x032570B0 LDR W3, [X19 + 0x44]
	0x032570B4 ADD W4, W10, W3
	0x032570B8 SUB W4, W4, 0x1
	0x032570BC SDIV W5, W4, W3
	0x032570C0 MSUB W3, W5, W3, W4
	0x032570C4 STR W3, [X14, X10, LSL #2]
	0x032570C8 CBZ X25, 0x32573E4
	0x032570CC LDR W3, [X25 + 0x18]
	0x032570D0 CMP X2, X3
	0x032570D4 B.CS 0x32573E0
	0x032570D8 LDR W3, [X19 + 0x44]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W22, W2
	007 Move X2, [X0+40]
	008 Compare X2, 0
	009 JumpIfEqual {79}
	010 Move W20, W3
	011 Compare W3, 0
	012 JumpIfEqual {73}
	013 Move W8, [X0+56]
	014 Move W4, [X0+48]
	015 Move X19, X0
	016 Move X21, X1
	017 Compare W8, 0
	018 JumpIfEqual {24}
	019 Subtract W1, W4, W20
	020 Add W8, W20, W22
	021 Subtract W1, W8, W4
	022 Move X0, X21
	023 Move W3, W31
	024 Subtract W8, W4, W20
	025 Add W8, W20, W22
	026 Subtract W1, W8, W4
	027 Move X0, X21
	028 Move W3, W31
	029 Move X0, X2
	030 Move W3, W31
	031 Move W4, W1
	032 Move X5, X31
	033 Call Buffer.InternalBlockCopy, X0, X1, X2, X3, X4
	034 Move W8, [X19+48]
	035 Move X2, [X19+40]
	036 Move X0, X21
	037 Move W1, W22
	038 Subtract W3, W8, W20
	039 Move W4, W20
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X5, X31
	045 Move X30, [X31+48]
	046 Call Buffer.InternalBlockCopy, X0, X1, X2, X3, X4
	047 Return 
	048 Move W3, [X19+52]
	049 Add W9, W3, W20
	050 Subtract W1, W9, W4
	051 Move X0, X21
	052 Move W1, W22
	053 Move W4, W20
	054 Move X5, X31
	055 Call Buffer.InternalBlockCopy, X0, X1, X2, X3, X4
	056 Move W8, [X19+52]
	057 Add W8, W8, W20
	058 Move [X19+52], W8
	059 Move X0, X2
	060 Move W3, W31
	061 Move W4, W8
	062 Move X5, X31
	063 Call Buffer.InternalBlockCopy, X0, X1, X2, X3, X4
	064 Move X2, [X19+40]
	065 Move W3, [X19+52]
	066 Move X0, X21
	067 Move W1, W22
	068 Move W4, W20
	069 Move X5, X31
	070 Call Buffer.InternalBlockCopy, X0, X1, X2, X3, X4
	071 Move W8, 1
	072 Move [X19+56], W8
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X22, [X31+16]
	076 Move X21, [X31+24]
	077 Move X30, [X31+48]
	078 Return 
	079 Move X0, 0xEC6000
	080 Move X0, [X0+1208]
	081 Call 0x1C17D08
	082 Call 0x1C17F10
	083 Move X19, X0
	084 Move X0, 0xECD000
	085 Move X0, [X0+304]
	086 Call 0x1C17D08
	087 Move X1, X0
	088 Move X0, X19
	089 Move X2, X31
	090 Call ObjectDisposedException..ctor, X0, X1
	091 Move X0, 0xECD000
	092 Move X0, [X0+312]
	093 Call 0x1C17D08
	094 Move X1, X0
	095 Move X0, X19
	096 Call 0x1C17DEC

