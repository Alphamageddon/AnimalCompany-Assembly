Type: System.Security.Cryptography.SHA1Managed

Method: System.Void .ctor()

Disassembly:
	0x03255E78 MOV X1, X31
	0x03255E7C BL 0x33BDD84
	0x03255E80 MOV X19, X0
	0x03255E84 ADRP X0, 0xE9E000
	0x03255E88 LDR X0, [X0 + 0xB40]
	0x03255E8C BL 0x1C16D08
	0x03255E90 BL 0x1C16F10
	0x03255E94 MOV X1, X19
	0x03255E98 MOV X2, X31
	0x03255E9C MOV X20, X0
	0x03255EA0 BL 0x3379A44
	0x03255EA4 ADRP X0, 0xECE000
	0x03255EA8 LDR X0, [X0 + 0x118]
	0x03255EAC BL 0x1C16D08
	0x03255EB0 MOV X1, X0
	0x03255EB4 MOV X0, X20
	0x03255EB8 BL 0x1C16DEC
	0x03255EBC STR X30, [X31 - 0x20]!
	0x03255EC0 STP X20, X19, [X31 + 0x10]
	0x03255EC4 ADRP X0, 0xECD000
	0x03255EC8 LDR X0, [X0 + 0xD40]
	0x03255ECC BL 0x1C16D08
	0x03255ED0 MOV X1, X31
	0x03255ED4 BL 0x33BDD84
	0x03255ED8 MOV X19, X0
	0x03255EDC ADRP X0, 0xE9E000
	0x03255EE0 LDR X0, [X0 + 0xB40]
	0x03255EE4 BL 0x1C16D08
	0x03255EE8 BL 0x1C16F10
	0x03255EEC MOV X1, X19
	0x03255EF0 MOV X2, X31
	0x03255EF4 MOV X20, X0
	0x03255EF8 BL 0x3379A44
	0x03255EFC ADRP X0, 0xECE000
	0x03255F00 LDR X0, [X0 + 0x120]
	0x03255F04 BL 0x1C16D08
	0x03255F08 MOV X1, X0
	0x03255F0C MOV X0, X20
	0x03255F10 BL 0x1C16DEC
	0x03255F14 STR X30, [X31 - 0x20]!
	0x03255F18 STP X20, X19, [X31 + 0x10]
	0x03255F1C ADRP X0, 0xECD000
	0x03255F20 LDR X0, [X0 + 0xD88]
	0x03255F24 BL 0x1C16D08
	0x03255F28 MOV X1, X31
	0x03255F2C BL 0x33BDD84
	0x03255F30 MOV X19, X0
	0x03255F34 ADRP X0, 0xE9E000
	0x03255F38 LDR X0, [X0 + 0xB40]
	0x03255F3C BL 0x1C16D08
	0x03255F40 BL 0x1C16F10
	0x03255F44 MOV X1, X19
	0x03255F48 MOV X2, X31
	0x03255F4C MOV X20, X0
	0x03255F50 BL 0x3379A44
	0x03255F54 ADRP X0, 0xECE000
	0x03255F58 LDR X0, [X0 + 0x128]
	0x03255F5C BL 0x1C16D08
	0x03255F60 MOV X1, X0
	0x03255F64 MOV X0, X20
	0x03255F68 BL 0x1C16DEC
	0x03255F6C STR X30, [X31 - 0x30]!
	0x03255F70 STP X22, X21, [X31 + 0x10]
	0x03255F74 STP X20, X19, [X31 + 0x20]
	0x03255F78 MOV W22, W2
	0x03255F7C LDR X2, [X0 + 0x28]
	0x03255F80 CBZ X2, 0x3256094
	0x03255F84 MOV W20, W3
	0x03255F88 CBZ W3, 0x3256084
	0x03255F8C LDRB W8, [X0 + 0x38]
	0x03255F90 LDR W4, [X0 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1188000
	006 Move X20, 0xECC000
	007 Move W8, [X21+1307]
	008 Move X20, [X20+3032]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xE9F000
	015 Move X0, [X0+1560]
	016 Call 0x1C17CF4
	017 Move X0, 0xECC000
	018 Move X0, [X0+3032]
	019 Call 0x1C17CF4
	020 Move X0, 0xEC8000
	021 Move X0, [X0+3336]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+1307], W8
	025 Move X0, X19
	026 Move X1, X31
	027 Call HashAlgorithm..ctor, X0
	028 Move W8, 160
	029 Move [X19+20], W8
	030 Move X0, [X20]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X31
	036 Call CryptoConfig.get_AllowOnlyFipsAlgorithms
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {64}
	041 Move X20, 0xEC8000
	042 Move X20, [X20+3336]
	043 Move X21, 0xE9F000
	044 Move W1, 5
	045 Move X0, [X20]
	046 Move X21, [X21+1560]
	047 Call 0x1C17D6C
	048 Move [X19+56], X0
	049 Move X0, [X21]
	050 Move W1, 64
	051 Call 0x1C17D6C
	052 Move [X19+40], X0
	053 Move X0, [X20]
	054 Move W1, 80
	055 Call 0x1C17D6C
	056 Move [X19+64], X0
	057 Move X0, X19
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move X30, [X31+32]
	061 Move X21, [X31+40]
	062 Call SHA1Managed.InitializeState, X0
	063 Return 
	064 Move X0, 0xECF000
	065 Move X0, [X0+160]
	066 Call 0x1C17D08
	067 Move X1, X31
	068 Call Environment.GetResourceString, X0
	069 Move X19, X0
	070 Move X0, 0xE9F000
	071 Move X0, [X0+1456]
	072 Call 0x1C17D08
	073 Call 0x1C17F10
	074 Move X1, X19
	075 Move X2, X31
	076 Move X20, X0
	077 Call InvalidOperationException..ctor, X0, X1
	078 Move X0, 0xECF000
	079 Move X0, [X0+184]
	080 Call 0x1C17D08
	081 Move X1, X0
	082 Move X0, X20
	083 Call 0x1C17DEC

Method: System.Void Initialize()

Disassembly:
	0x0325E1C0 EOR W9, W9, W10, 0x0
	0x0325E1C4 LDR X10, [X31 + 0x10]
	0x0325E1C8 ADD X8, X8, X19
	0x0325E1CC LDR W8, [X8 + 0x14]
	0x0325E1D0 ADD W11, W0, W22
	0x0325E1D4 ADD X10, X10, X19
	0x0325E1D8 AND W12, W23, W24, 0x0
	0x0325E1DC LDUR W10, [X10 - 0xC]
	0x0325E1E0 ADD W11, W11, W12
	0x0325E1E4 BIC W12, W21, W23, 0x0
	0x0325E1E8 ADD W9, W29, W9
	0x0325E1EC ADD W27, W9, W27
	0x0325E1F0 ADD W9, W11, W12
	0x0325E1F4 ADD W8, W9, W8
	0x0325E1F8 ADD W22, W8, W10
	0x0325E1FC MOV W0, W27
	0x0325E200 ADD W29, W22, W26

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call SHA1Managed.InitializeState, X0
	005 Move X0, [X19+40]
	006 Compare X0, 0
	007 JumpIfEqual {22}
	008 Move W2, [X0+24]
	009 Move W1, W31
	010 Move X3, X31
	011 Call Array.Clear, X0, X1, X2
	012 Move X0, [X19+64]
	013 Compare X0, 0
	014 JumpIfEqual {22}
	015 Move W2, [X0+24]
	016 Move W1, W31
	017 Move X3, X31
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 Call Array.Clear, X0, X1, X2
	021 Return 
	022 Call 0x1C17F20

Method: System.Void HashCore(System.Byte[] rgb, System.Int32 ibStart, System.Int32 cbSize)

Disassembly:
	0x0325E204 BL 0x325E4D8

ISIL:
No ISIL was generated
Method: System.Byte[] HashFinal()

Disassembly:
	0x0325E388 ADD W12, W12, W24

ISIL:
No ISIL was generated
Method: System.Void InitializeState()

Disassembly:
	0x0325E13C LDR X10, [X31 + 0x10]
	0x0325E140 ADD X8, X8, X19
	0x0325E144 LDR W8, [X8 + 0x10]
	0x0325E148 ADD W11, W0, W23
	0x0325E14C ADD X10, X10, X19
	0x0325E150 AND W12, W24, W21, 0x0
	0x0325E154 LDUR W10, [X10 - 0x10]
	0x0325E158 ADD W11, W11, W12
	0x0325E15C BIC W12, W22, W24, 0x0
	0x0325E160 ADD W9, W29, W9
	0x0325E164 ADD W25, W9, W25
	0x0325E168 ADD W9, W11, W12
	0x0325E16C ADD W8, W9, W8
	0x0325E170 ADD W29, W8, W10
	0x0325E174 MOV W0, W25
	0x0325E178 ADD W23, W29, W27
	0x0325E17C BL 0x325E4D8
	0x0325E180 MOV W27, W0
	0x0325E184 MOV W0, W23
	0x0325E188 BL 0x325E46C
	0x0325E18C ADRP X8, 0xEC5000
	0x0325E190 LDR X8, [X8 + 0xC0]
	0x0325E194 LDR X8, [X8]
	0x0325E198 LDR X8, [X8 + 0xB8]
	0x0325E19C LDR X8, [X8]
	0x0325E1A0 CBZ X8, 0x325E3BC
	0x0325E1A4 LDR W9, [X8 + 0x18]
	0x0325E1A8 ADD X20, X20, 0x1
	0x0325E1AC CMP X20, X9
	0x0325E1B0 B.CS 0x325E3C0
	0x0325E1B4 EOR W9, W28, W26, 0x0
	0x0325E1B8 AND W10, W28, W26, 0x0
	0x0325E1BC AND W9, W25, W9, 0x0

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+56]
	003 Move [X0+48], X31
	004 Compare X8, 0
	005 JumpIfEqual {31}
	006 Move W9, [X8+24]
	007 Compare W9, 0
	008 JumpIfEqual {30}
	009 Move W10, 0x2301
	010 NotImplemented "Instruction MOVK not yet implemented."
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move [X8+32], W10
	013 Move W10, 0xAB89
	014 NotImplemented "Instruction MOVK not yet implemented."
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move [X8+36], W10
	017 Move W10, 0xDCFE
	018 NotImplemented "Instruction MOVK not yet implemented."
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move [X8+40], W10
	021 Move W10, 0x5476
	022 NotImplemented "Instruction MOVK not yet implemented."
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move [X8+44], W10
	025 Move W9, 0xE1F0
	026 NotImplemented "Instruction MOVK not yet implemented."
	027 Move [X8+48], W9
	028 Move X30, [X31+16]
	029 Return 
	030 Call 0x1C17F28
	031 Call 0x1C17F20

Method: System.Void _HashData(System.Byte[] partIn, System.Int32 ibStart, System.Int32 cbSize)

Disassembly:
	0x0325E208 MOV W26, W0
	0x0325E20C MOV W0, W29
	0x0325E210 STR W29, [X31 + 0x18]
	0x0325E214 BL 0x325E46C
	0x0325E218 ADRP X8, 0xEC5000
	0x0325E21C LDR X8, [X8 + 0xC0]
	0x0325E220 LDR X8, [X8]
	0x0325E224 LDR X8, [X8 + 0xB8]
	0x0325E228 LDR X8, [X8]
	0x0325E22C CBZ X8, 0x325E3BC
	0x0325E230 LDR W9, [X8 + 0x18]
	0x0325E234 ADD X29, X20, 0x1
	0x0325E238 CMP X29, X9
	0x0325E23C B.CS 0x325E3C0
	0x0325E240 ADD W11, W0, W21
	0x0325E244 LDR X21, [X31 + 0x10]
	0x0325E248 LDR W13, [X31 + 0x18]
	0x0325E24C EOR W9, W25, W28, 0x0
	0x0325E250 AND W10, W25, W28, 0x0
	0x0325E254 ADD X8, X8, X19
	0x0325E258 AND W9, W27, W9, 0x0
	0x0325E25C EOR W9, W9, W10, 0x0
	0x0325E260 ADD X10, X21, X19
	0x0325E264 LDR W8, [X8 + 0x18]
	0x0325E268 AND W12, W13, W23, 0x0
	0x0325E26C LDUR W10, [X10 - 0x8]
	0x0325E270 ADD W11, W11, W12
	0x0325E274 BIC W12, W24, W13, 0x0
	0x0325E278 ADD W9, W22, W9
	0x0325E27C ADD W26, W9, W26
	0x0325E280 ADD W9, W11, W12
	0x0325E284 ADD W8, W9, W8
	0x0325E288 ADD W20, W8, W10
	0x0325E28C MOV W0, W26
	0x0325E290 ADD W22, W20, W28
	0x0325E294 BL 0x325E4D8
	0x0325E298 MOV W28, W0
	0x0325E29C MOV W0, W22
	0x0325E2A0 STR W22, [X31 + 0x1C]
	0x0325E2A4 BL 0x325E46C
	0x0325E2A8 ADRP X22, 0xEC5000
	0x0325E2AC LDR X22, [X22 + 0xC0]
	0x0325E2B0 LDR X8, [X22]
	0x0325E2B4 LDR X8, [X8 + 0xB8]
	0x0325E2B8 LDR X8, [X8]
	0x0325E2BC CBZ X8, 0x325E3BC
	0x0325E2C0 LDR W9, [X8 + 0x18]
	0x0325E2C4 ADD X29, X29, 0x1
	0x0325E2C8 CMP X29, X9
	0x0325E2CC B.CS 0x325E3C0
	0x0325E2D0 LDP W12, W13, [X31 + 0x18]
	0x0325E2D4 EOR W9, W27, W25, 0x0
	0x0325E2D8 AND W10, W27, W25, 0x0
	0x0325E2DC ADD X8, X8, X19
	0x0325E2E0 AND W9, W26, W9, 0x0
	0x0325E2E4 EOR W9, W9, W10, 0x0
	0x0325E2E8 ADD X10, X21, X19
	0x0325E2EC LDR W8, [X8 + 0x1C]
	0x0325E2F0 ADD W11, W0, W24
	0x0325E2F4 AND W12, W13, W12, 0x0
	0x0325E2F8 LDUR W10, [X10 - 0x4]
	0x0325E2FC ADD W11, W11, W12
	0x0325E300 BIC W12, W23, W13, 0x0
	0x0325E304 ADD W9, W20, W9
	0x0325E308 ADD W28, W9, W28
	0x0325E30C ADD W9, W11, W12
	0x0325E310 ADD W8, W9, W8
	0x0325E314 ADD W20, W8, W10
	0x0325E318 MOV W0, W28
	0x0325E31C ADD W24, W20, W25
	0x0325E320 BL 0x325E4D8
	0x0325E324 EOR W8, W26, W27, 0x0
	0x0325E328 AND W9, W26, W27, 0x0
	0x0325E32C AND W8, W28, W8, 0x0
	0x0325E330 EOR W8, W8, W9, 0x0
	0x0325E334 SUB X10, X29, 0x7
	0x0325E338 ADD W8, W20, W8
	0x0325E33C ADD X19, X19, 0x20
	0x0325E340 CMP X10, 0x38
	0x0325E344 ADD W25, W8, W0
	0x0325E348 ADD X29, X29, 0x1
	0x0325E34C B.CC 0x325DEF4
	0x0325E350 LDR X16, [X31 + 0x8]
	0x0325E354 LDR W17, [X31 + 0x1C]
	0x0325E358 LDP X20, X19, [X31 + 0x70]
	0x0325E35C LDP X22, X21, [X31 + 0x60]
	0x0325E360 LDP W12, W13, [X16 + 0x10]
	0x0325E364 LDP W8, W9, [X16]
	0x0325E368 LDP W10, W11, [X16 + 0x8]
	0x0325E36C LDP W14, W15, [X16 + 0x18]
	0x0325E370 ADD W13, W13, W17
	0x0325E374 LDR W17, [X31 + 0x18]
	0x0325E378 ADD W8, W8, W25
	0x0325E37C ADD W9, W9, W28
	0x0325E380 ADD W10, W10, W26
	0x0325E384 ADD W11, W11, W27

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X8, [X0+48]
	012 Move X9, [X0+56]
	013 Move W22, W3
	014 Move W19, W2
	015 Move X20, X1
	016 Move X21, X0
	017 Add X10, X8, W3
	018 Move [X0+48], X10
	019 Compare X9, 0
	020 JumpIfEqual {25}
	021 Move W10, [X9+24]
	022 Add X9, X9, 32
	023 NotImplemented "Instruction CMP not yet implemented."
	024 NotImplemented "Instruction CSEL not yet implemented."
	025 Move X23, X31
	026 Move X2, [X21+40]
	027 And W24, W8, 63
	028 Compare X2, 0
	029 JumpIfEqual {34}
	030 Move W8, [X2+24]
	031 Add X9, X2, 32
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction CSEL not yet implemented."
	034 Move X25, X31
	035 Move X8, [X21+64]
	036 Compare X8, 0
	037 JumpIfEqual {44}
	038 Move W9, [X8+24]
	039 Add X8, X8, 32
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction CSEL not yet implemented."
	042 Compare W24, 0
	043 JumpIfNotEqual {47}
	044 Move X26, X31
	045 Compare W24, 0
	046 JumpIfEqual {64}
	047 Add W8, W24, W22
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move W8, 64
	050 Subtract W27, W8, W24
	051 Move X0, X20
	052 Move W1, W19
	053 Move W3, W24
	054 Move W4, W27
	055 Move X5, X31
	056 Call Buffer.InternalBlockCopy, X0, X1, X2, X3, X4
	057 Move X0, X26
	058 Move X1, X23
	059 Move X2, X25
	060 Add W19, W27, W19
	061 Subtract W22, W22, W27
	062 Call SHA1Managed.SHATransform, X0, X1, X2
	063 Move W24, W31
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X2, [X21+40]
	066 Move W4, 64
	067 Move X0, X20
	068 Move W1, W19
	069 Move W3, W31
	070 Move X5, X31
	071 Call Buffer.InternalBlockCopy, X0, X1, X2, X3, X4
	072 Move X0, X26
	073 Move X1, X23
	074 Move X2, X25
	075 Add W19, W19, 64
	076 Subtract W27, W22, 64
	077 Call SHA1Managed.SHATransform, X0, X1, X2
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move W22, W27
	080 Move W27, W22
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X2, [X21+40]
	083 Move X0, X20
	084 Move W1, W19
	085 Move W3, W24
	086 Move X20, [X31+64]
	087 Move X19, [X31+72]
	088 Move X22, [X31+48]
	089 Move X21, [X31+56]
	090 Move X24, [X31+32]
	091 Move X23, [X31+40]
	092 Move X26, [X31+16]
	093 Move X25, [X31+24]
	094 Move W4, W27
	095 Move X5, X31
	096 Move X30, [X31+80]
	097 Move X27, [X31+88]
	098 Call Buffer.InternalBlockCopy, X0, X1, X2, X3, X4
	099 Return 
	100 Move X20, [X31+64]
	101 Move X19, [X31+72]
	102 Move X22, [X31+48]
	103 Move X21, [X31+56]
	104 Move X24, [X31+32]
	105 Move X23, [X31+40]
	106 Move X26, [X31+16]
	107 Move X25, [X31+24]
	108 Move X30, [X31+80]
	109 Move X27, [X31+88]
	110 Return 

Method: System.Byte[] _EndHash()

Disassembly:
	0x0325E38C ADD W15, W15, W23
	0x0325E390 LDP X24, X23, [X31 + 0x50]
	0x0325E394 LDP X26, X25, [X31 + 0x40]
	0x0325E398 LDP X28, X27, [X31 + 0x30]
	0x0325E39C LDP X29, X30, [X31 + 0x20]
	0x0325E3A0 ADD W14, W14, W17
	0x0325E3A4 STP W8, W9, [X16]
	0x0325E3A8 STP W10, W11, [X16 + 0x8]
	0x0325E3AC STP W12, W13, [X16 + 0x10]
	0x0325E3B0 STP W14, W15, [X16 + 0x18]
	0x0325E3B4 ADD X31, X31, 0x80
	0x0325E3B8 RET
	0x0325E3BC BL 0x1C16F20
	0x0325E3C0 BL 0x1C16F28
	0x0325E3C4 STR X30, [X31 - 0x40]!
	0x0325E3C8 STP X24, X23, [X31 + 0x10]
	0x0325E3CC STP X22, X21, [X31 + 0x20]
	0x0325E3D0 STP X20, X19, [X31 + 0x30]
	0x0325E3D4 ADRP X20, 0x117E000
	0x0325E3D8 LDRB W8, [X20 + 0x526]
	0x0325E3DC MOV X19, X0
	0x0325E3E0 TBNZ X8, 0x0, 0x325E3F8
	0x0325E3E4 ADRP X0, 0xEC5000
	0x0325E3E8 LDR X0, [X0 + 0xC0]
	0x0325E3EC BL 0x1C16CF4
	0x0325E3F0 MOVZ W8, 0x1
	0x0325E3F4 STRB W8, [X20 + 0x526]
	0x0325E3F8 ADRP X22, 0xEC5000
	0x0325E3FC LDR X22, [X22 + 0xC0]
	0x0325E400 MOV X21, X31
	0x0325E404 LDR X0, [X22]
	0x0325E408 ADD X23, X19, X21
	0x0325E40C LDR W20, [X23 + 0x38]
	0x0325E410 LDR W8, [X0 + 0xE0]
	0x0325E414 CBNZ W8, 0x325E41C
	0x0325E418 BL 0x1C16DFC
	0x0325E41C MOV W0, W20
	0x0325E420 BL 0x325E5AC
	0x0325E424 LDR W8, [X23 + 0x4]
	0x0325E428 LDR W24, [X23 + 0x24]
	0x0325E42C MOV W20, W0
	0x0325E430 MOV W0, W8
	0x0325E434 BL 0x325E550
	0x0325E438 LDR W8, [X23]
	0x0325E43C ADD W9, W24, W20
	0x0325E440 ADD X21, X21, 0x4
	0x0325E444 ADD W9, W9, W0
	0x0325E448 ADD W8, W9, W8
	0x0325E44C CMP X21, 0xC0
	0x0325E450 STR W8, [X23 + 0x40]
	0x0325E454 B.NE 0x325E404
	0x0325E458 LDP X20, X19, [X31 + 0x30]
	0x0325E45C LDP X22, X21, [X31 + 0x20]
	0x0325E460 LDP X24, X23, [X31 + 0x10]
	0x0325E464 LDR X30, [X31], #0x40
	0x0325E468 RET
	0x0325E46C STP X30, X21, [X31 - 0x20]!
	0x0325E470 STP X20, X19, [X31 + 0x10]
	0x0325E474 ADRP X20, 0x117E000
	0x0325E478 ADRP X21, 0xEC5000
	0x0325E47C LDRB W8, [X20 + 0x525]
	0x0325E480 LDR X21, [X21 + 0xC0]
	0x0325E484 MOV W19, W0
	0x0325E488 TBNZ X8, 0x0, 0x325E4A0
	0x0325E48C ADRP X0, 0xEC5000
	0x0325E490 LDR X0, [X0 + 0xC0]
	0x0325E494 BL 0x1C16CF4
	0x0325E498 MOVZ W8, 0x1
	0x0325E49C STRB W8, [X20 + 0x525]
	0x0325E4A0 LDR X0, [X21]
	0x0325E4A4 LDR W8, [X0 + 0xE0]
	0x0325E4A8 CBNZ W8, 0x325E4B0
	0x0325E4AC BL 0x1C16DFC
	0x0325E4B0 EXTR W8, W19, W19, 0x6
	0x0325E4B4 EOR W8, W8, W19, 0xB
	0x0325E4B8 EOR W0, W8, W19, 0x19
	0x0325E4BC LDP X20, X19, [X31 + 0x10]
	0x0325E4C0 LDP X30, X21, [X31], #0x20
	0x0325E4C4 RET
	0x0325E4C8 AND W8, W1, W0, 0x0
	0x0325E4CC BIC W9, W2, W0, 0x0
	0x0325E4D0 ORR W0, W9, W8, 0x0
	0x0325E4D4 RET
	0x0325E4D8 STP X30, X21, [X31 - 0x20]!
	0x0325E4DC STP X20, X19, [X31 + 0x10]
	0x0325E4E0 ADRP X20, 0x117E000
	0x0325E4E4 ADRP X21, 0xEC5000
	0x0325E4E8 LDRB W8, [X20 + 0x524]
	0x0325E4EC LDR X21, [X21 + 0xC0]
	0x0325E4F0 MOV W19, W0
	0x0325E4F4 TBNZ X8, 0x0, 0x325E50C
	0x0325E4F8 ADRP X0, 0xEC5000
	0x0325E4FC LDR X0, [X0 + 0xC0]
	0x0325E500 BL 0x1C16CF4
	0x0325E504 MOVZ W8, 0x1
	0x0325E508 STRB W8, [X20 + 0x524]
	0x0325E50C LDR X0, [X21]
	0x0325E510 LDR W8, [X0 + 0xE0]
	0x0325E514 CBNZ W8, 0x325E51C
	0x0325E518 BL 0x1C16DFC
	0x0325E51C EXTR W8, W19, W19, 0x2
	0x0325E520 EOR W8, W8, W19, 0xD
	0x0325E524 EOR W0, W8, W19, 0x16
	0x0325E528 LDP X20, X19, [X31 + 0x10]
	0x0325E52C LDP X30, X21, [X31], #0x20
	0x0325E530 RET
	0x0325E534 EOR W8, W2, W1, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x117F000
	006 Move X21, 0xE96000
	007 Move W8, [X20+1308]
	008 Move X21, [X21+1560]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE96000
	015 Move X0, [X0+1560]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1308], W8
	019 Move X0, [X21]
	020 Move W1, 20
	021 Call 0x1C17D6C
	022 Move X8, [X19+48]
	023 Move X20, X0
	024 Move W9, 128
	025 Move X0, [X21]
	026 And X8, X8, 63
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move W10, 64
	029 NotImplemented "Instruction CSEL not yet implemented."
	030 Subtract X21, X9, X8
	031 Move W1, W21
	032 Call 0x1C17D6C
	033 Compare X0, 0
	034 JumpIfEqual {124}
	035 Move W8, [X0+24]
	036 Move X1, X0
	037 Compare W8, 0
	038 JumpIfEqual {123}
	039 Move W9, W21
	040 Move X9, W9
	041 Subtract X10, X9, 8
	042 Move W11, 128
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move [X1+32], W11
	045 Move X8, [X19+48]
	046 Add X10, X1, X10
	047 Move X11, X8
	048 ShiftRight X11, 53
	049 And X11, X11, 0x7FFFFFFF
	050 Move [X10+32], W11
	051 Move W11, [X1+24]
	052 Subtract X10, X21, 7
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X11, X8
	055 ShiftRight X11, 45
	056 And X11, X11, 0x7FFFFFFF
	057 Add X10, X1, X10
	058 Move [X10+32], W11
	059 Move W11, [X1+24]
	060 Subtract X10, X9, 6
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X11, X8
	063 ShiftRight X11, 37
	064 And X11, X11, 0x7FFFFFFF
	065 Add X10, X1, X10
	066 Move [X10+32], W11
	067 Move W11, [X1+24]
	068 Subtract X10, X9, 5
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X11, X8
	071 ShiftRight X11, 29
	072 And X11, X11, 0x7FFFFFFF
	073 Add X10, X1, X10
	074 Move [X10+32], W11
	075 Move W11, [X1+24]
	076 Subtract X10, X9, 4
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X11, X8
	079 ShiftRight X11, 21
	080 And X11, X11, 0x7FFFFFFF
	081 Add X10, X1, X10
	082 Move [X10+32], W11
	083 Move W10, [X1+24]
	084 Subtract X9, X9, 3
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X10, X8
	087 ShiftRight X10, 13
	088 And X10, X10, 0x7FFFFFFF
	089 Add X9, X1, X9
	090 Move [X9+32], W10
	091 Move W10, [X1+24]
	092 Subtract W9, W21, 2
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X10, X8
	095 ShiftRight X10, 5
	096 And X10, X10, 0x7FFFFFFF
	097 Add X9, X1, W9
	098 Move [X9+32], W10
	099 Move W10, [X1+24]
	100 Subtract W9, W21, 1
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move W8, W8
	103 ShiftRight W8, 29
	104 And W8, W8, 0xFFFFFFF
	105 Add X9, X1, W9
	106 Move [X9+32], W8
	107 Move W3, [X1+24]
	108 Move X0, X19
	109 Move W2, W31
	110 Call SHA1Managed._HashData, X0, X1, X2, X3
	111 Move X1, [X19+56]
	112 Move W2, 5
	113 Move X0, X20
	114 Move X3, X31
	115 Call Utils.DWORDToBigEndian, X0, X1, X2
	116 Move [X19+24], X20
	117 Move X0, X20
	118 Move X20, [X31+16]
	119 Move X19, [X31+24]
	120 Move X30, [X31+32]
	121 Move X21, [X31+40]
	122 Return X0
	123 Call 0x1C17F28
	124 Call 0x1C17F20

Method: System.Void SHATransform(System.UInt32* expandedBuffer, System.UInt32* state, System.Byte* block)

Disassembly:
	0x0325E538 AND W8, W8, W0, 0x0
	0x0325E53C AND W9, W2, W1, 0x0
	0x0325E540 EOR W0, W8, W9, 0x0
	0x0325E544 RET
	0x0325E548 RORV W0, W0, W1
	0x0325E54C RET
	0x0325E550 STP X30, X21, [X31 - 0x20]!
	0x0325E554 STP X20, X19, [X31 + 0x10]
	0x0325E558 ADRP X20, 0x117E000
	0x0325E55C ADRP X21, 0xEC5000
	0x0325E560 LDRB W8, [X20 + 0x522]
	0x0325E564 LDR X21, [X21 + 0xC0]
	0x0325E568 MOV W19, W0
	0x0325E56C TBNZ X8, 0x0, 0x325E584
	0x0325E570 ADRP X0, 0xEC5000
	0x0325E574 LDR X0, [X0 + 0xC0]
	0x0325E578 BL 0x1C16CF4
	0x0325E57C MOVZ W8, 0x1
	0x0325E580 STRB W8, [X20 + 0x522]
	0x0325E584 LDR X0, [X21]
	0x0325E588 LDR W8, [X0 + 0xE0]
	0x0325E58C CBNZ W8, 0x325E594
	0x0325E590 BL 0x1C16DFC
	0x0325E594 EXTR W8, W19, W19, 0x7
	0x0325E598 EOR W8, W8, W19, 0x12
	0x0325E59C EOR W0, W8, W19, 0x3
	0x0325E5A0 LDP X20, X19, [X31 + 0x10]
	0x0325E5A4 LDP X30, X21, [X31], #0x20
	0x0325E5A8 RET
	0x0325E5AC STP X30, X21, [X31 - 0x20]!
	0x0325E5B0 STP X20, X19, [X31 + 0x10]
	0x0325E5B4 ADRP X20, 0x117E000
	0x0325E5B8 ADRP X21, 0xEC5000
	0x0325E5BC LDRB W8, [X20 + 0x523]
	0x0325E5C0 LDR X21, [X21 + 0xC0]
	0x0325E5C4 MOV W19, W0
	0x0325E5C8 TBNZ X8, 0x0, 0x325E5E0
	0x0325E5CC ADRP X0, 0xEC5000
	0x0325E5D0 LDR X0, [X0 + 0xC0]
	0x0325E5D4 BL 0x1C16CF4
	0x0325E5D8 MOVZ W8, 0x1
	0x0325E5DC STRB W8, [X20 + 0x523]
	0x0325E5E0 LDR X0, [X21]
	0x0325E5E4 LDR W8, [X0 + 0xE0]
	0x0325E5E8 CBNZ W8, 0x325E5F0
	0x0325E5EC BL 0x1C16DFC
	0x0325E5F0 EXTR W8, W19, W19, 0x11
	0x0325E5F4 EOR W8, W8, W19, 0x13
	0x0325E5F8 EOR W0, W8, W19, 0xA
	0x0325E5FC LDP X20, X19, [X31 + 0x10]
	0x0325E600 LDP X30, X21, [X31], #0x20
	0x0325E604 RET
	0x0325E608 STR X30, [X31 - 0x30]!
	0x0325E60C STP X22, X21, [X31 + 0x10]
	0x0325E610 STP X20, X19, [X31 + 0x20]
	0x0325E614 ADRP X21, 0x117E000
	0x0325E618 ADRP X22, 0xEBE000
	0x0325E61C ADRP X19, 0xEC5000
	0x0325E620 ADRP X20, 0xEC5000
	0x0325E624 LDRB W8, [X21 + 0x527]
	0x0325E628 LDR X22, [X22 + 0xD08]
	0x0325E62C LDR X19, [X19 + 0x328]
	0x0325E630 LDR X20, [X20 + 0xC0]
	0x0325E634 TBNZ X8, 0x0, 0x325E664
	0x0325E638 ADRP X0, 0xEC5000
	0x0325E63C LDR X0, [X0 + 0xC0]
	0x0325E640 BL 0x1C16CF4
	0x0325E644 ADRP X0, 0xEC5000
	0x0325E648 LDR X0, [X0 + 0x328]
	0x0325E64C BL 0x1C16CF4
	0x0325E650 ADRP X0, 0xEBE000
	0x0325E654 LDR X0, [X0 + 0xD08]
	0x0325E658 BL 0x1C16CF4
	0x0325E65C MOVZ W8, 0x1
	0x0325E660 STRB W8, [X21 + 0x527]
	0x0325E664 LDR X0, [X22]
	0x0325E668 MOVZ W1, 0x40
	0x0325E66C BL 0x1C16D6C
	0x0325E670 LDR X1, [X19]
	0x0325E674 MOV X2, X31
	0x0325E678 MOV X19, X0
	0x0325E67C BL 0x32C5BD8
	0x0325E680 LDR X8, [X20]
	0x0325E684 LDP X22, X21, [X31 + 0x10]
	0x0325E688 LDR X8, [X8 + 0xB8]
	0x0325E68C STR X19, [X8]
	0x0325E690 LDP X20, X19, [X31 + 0x20]
	0x0325E694 LDR X30, [X31], #0x30
	0x0325E698 RET
	0x0325E69C STP X30, X19, [X31 - 0x10]!
	0x0325E6A0 MOV X1, X31
	0x0325E6A4 MOV X19, X0
	0x0325E6A8 BL 0x3251230
	0x0325E6AC MOVZ W8, 0x180
	0x0325E6B0 STR W8, [X19 + 0x14]
	0x0325E6B4 LDP X30, X19, [X31], #0x10
	0x0325E6B8 RET
	0x0325E6BC STR X30, [X31 - 0x20]!
	0x0325E6C0 STP X20, X19, [X31 + 0x10]
	0x0325E6C4 ADRP X19, 0x117E000
	0x0325E6C8 ADRP X20, 0xEC5000
	0x0325E6CC LDRB W8, [X19 + 0x528]
	0x0325E6D0 LDR X20, [X20 + 0xD0]
	0x0325E6D4 TBNZ X8, 0x0, 0x325E6EC
	0x0325E6D8 ADRP X0, 0xEC5000
	0x0325E6DC LDR X0, [X0 + 0xD0]
	0x0325E6E0 BL 0x1C16CF4
	0x0325E6E4 MOVZ W8, 0x1
	0x0325E6E8 STRB W8, [X19 + 0x528]
	0x0325E6EC LDR X0, [X20]
	0x0325E6F0 BL 0x1C16F10
	0x0325E6F4 MOV X19, X0
	0x0325E6F8 BL 0x3255280
	0x0325E6FC MOV X0, X19
	0x0325E700 LDP X20, X19, [X31 + 0x10]
	0x0325E704 LDR X30, [X31], #0x20
	0x0325E708 RET
	0x0325E70C STR X30, [X31 - 0x10]!
	0x0325E710 LDR X8, [X0 + 0x38]
	0x0325E714 STR X31, [X0 + 0x30]
	0x0325E718 CBZ X8, 0x325E808
	0x0325E71C LDR W9, [X8 + 0x18]
	0x0325E720 CBZ W9, 0x325E804
	0x0325E724 MOVZ X10, 0x9ED8
	0x0325E728 MOVK X10, 0xC1050000
	0x0325E72C MOVK X10, 0x9D5D
	0x0325E730 MOVK X10, 0xCBBB0000
	0x0325E734 CMP W9, 0x1
	0x0325E738 STR X10, [X8 + 0x20]
	0x0325E73C B.EQ 0x325E804
	0x0325E740 MOVZ X10, 0xD507
	0x0325E744 MOVK X10, 0x367C0000
	0x0325E748 MOVK X10, 0x292A
	0x0325E74C MOVK X10, 0x629A0000
	0x0325E750 CMP W9, 0x2
	0x0325E754 STR X10, [X8 + 0x28]
	0x0325E758 B.LS 0x325E804
	0x0325E75C MOVZ X10, 0xDD17
	0x0325E760 MOVK X10, 0x30700000
	0x0325E764 MOVK X10, 0x15A
	0x0325E768 MOVK X10, 0x91590000
	0x0325E76C CMP W9, 0x3
	0x0325E770 STR X10, [X8 + 0x30]
	0x0325E774 B.EQ 0x325E804
	0x0325E778 MOVZ X10, 0x5939
	0x0325E77C MOVK X10, 0xF70E0000
	0x0325E780 MOVK X10, 0xECD8
	0x0325E784 MOVK X10, 0x152F0000
	0x0325E788 CMP W9, 0x4
	0x0325E78C STR X10, [X8 + 0x38]
	0x0325E790 B.LS 0x325E804
	0x0325E794 MOVZ X10, 0xB31
	0x0325E798 MOVK X10, 0xFFC00000
	0x0325E79C MOVK X10, 0x2667
	0x0325E7A0 MOVK X10, 0x67330000
	0x0325E7A4 CMP W9, 0x5
	0x0325E7A8 STR X10, [X8 + 0x40]
	0x0325E7AC B.EQ 0x325E804
	0x0325E7B0 MOVZ X10, 0x1511
	0x0325E7B4 MOVK X10, 0x68580000
	0x0325E7B8 MOVK X10, 0x4A87
	0x0325E7BC MOVK X10, 0x8EB40000
	0x0325E7C0 CMP W9, 0x6
	0x0325E7C4 STR X10, [X8 + 0x48]
	0x0325E7C8 B.LS 0x325E804
	0x0325E7CC MOVZ X10, 0x8FA7
	0x0325E7D0 MOVK X10, 0x64F90000
	0x0325E7D4 MOVK X10, 0x2E0D
	0x0325E7D8 MOVK X10, 0xDB0C0000
	0x0325E7DC CMP W9, 0x7
	0x0325E7E0 STR X10, [X8 + 0x50]
	0x0325E7E4 B.EQ 0x325E804
	0x0325E7E8 MOVZ X9, 0x4FA4
	0x0325E7EC MOVK X9, 0xBEFA0000
	0x0325E7F0 MOVK X9, 0x481D
	0x0325E7F4 MOVK X9, 0x47B50000
	0x0325E7F8 STR X9, [X8 + 0x58]
	0x0325E7FC LDR X30, [X31], #0x10
	0x0325E800 RET
	0x0325E804 BL 0x1C16F28
	0x0325E808 BL 0x1C16F20
	0x0325E80C STP X30, X19, [X31 - 0x10]!
	0x0325E810 MOV X19, X0
	0x0325E814 BL 0x325E70C
	0x0325E818 LDR X0, [X19 + 0x28]
	0x0325E81C CBZ X0, 0x325E84C
	0x0325E820 LDR W2, [X0 + 0x18]
	0x0325E824 MOV W1, W31
	0x0325E828 MOV X3, X31
	0x0325E82C BL 0x339FA34
	0x0325E830 LDR X0, [X19 + 0x40]
	0x0325E834 CBZ X0, 0x325E84C
	0x0325E838 LDR W2, [X0 + 0x18]
	0x0325E83C MOV W1, W31
	0x0325E840 MOV X3, X31
	0x0325E844 LDP X30, X19, [X31], #0x10
	0x0325E848 B 0x339FA34
	0x0325E84C BL 0x1C16F20
	0x0325E850 B 0x325E854
	0x0325E854 STR X30, [X31 - 0x60]!
	0x0325E858 STP X28, X27, [X31 + 0x10]
	0x0325E85C STP X26, X25, [X31 + 0x20]
	0x0325E860 STP X24, X23, [X31 + 0x30]
	0x0325E864 STP X22, X21, [X31 + 0x40]
	0x0325E868 STP X20, X19, [X31 + 0x50]
	0x0325E86C ADRP X23, 0x117E000
	0x0325E870 LDRB W8, [X23 + 0x52A]
	0x0325E874 MOV W19, W3
	0x0325E878 MOV W20, W2
	0x0325E87C MOV X21, X1
	0x0325E880 MOV X22, X0
	0x0325E884 TBNZ X8, 0x0, 0x325E89C
	0x0325E888 ADRP X0, 0xEC5000
	0x0325E88C LDR X0, [X0 + 0xD0]
	0x0325E890 BL 0x1C16CF4
	0x0325E894 MOVZ W8, 0x1
	0x0325E898 STRB W8, [X23 + 0x52A]
	0x0325E89C LDP X8, X9, [X22 + 0x30]
	0x0325E8A0 ADD X10, X8, W19, SXTW
	0x0325E8A4 STR X10, [X22 + 0x30]
	0x0325E8A8 CBZ X9, 0x325E8C0
	0x0325E8AC LDR W10, [X9 + 0x18]
	0x0325E8B0 ADD X9, X9, 0x20
	0x0325E8B4 CMP W10, 0x0
	0x0325E8B8 CSEL X23, X31, X9, EQ
	0x0325E8BC B 0x325E8C4
	0x0325E8C0 MOV X23, X31
	0x0325E8C4 LDR X2, [X22 + 0x28]
	0x0325E8C8 AND W25, W8, 0x7F
	0x0325E8CC CBZ X2, 0x325E8E4
	0x0325E8D0 LDR W8, [X2 + 0x18]
	0x0325E8D4 ADD X9, X2, 0x20
	0x0325E8D8 CMP W8, 0x0
	0x0325E8DC CSEL X24, X31, X9, EQ
	0x0325E8E0 B 0x325E8E8
	0x0325E8E4 MOV X24, X31
	0x0325E8E8 LDR X8, [X22 + 0x40]
	0x0325E8EC CBZ X8, 0x325E904
	0x0325E8F0 LDR W9, [X8 + 0x18]
	0x0325E8F4 ADD X8, X8, 0x20
	0x0325E8F8 CMP W9, 0x0
	0x0325E8FC CSEL X26, X31, X8, EQ
	0x0325E900 B 0x325E908
	0x0325E904 MOV X26, X31
	0x0325E908 ADRP X28, 0xEC5000
	0x0325E90C LDR X28, [X28 + 0xD0]
	0x0325E910 CBZ W25, 0x325E96C
	0x0325E914 ADD W8, W25, W19
	0x0325E918 CMP W8, 0x80
	0x0325E91C B.LT 0x325E96C
	0x0325E920 MOVZ W8, 0x80
	0x0325E924 SUB W27, W8, W25

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move W21, [X1]
	011 Move W22, [X1+4]
	012 Move W23, [X1+8]
	013 Move W24, [X1+12]
	014 Move W25, [X1+16]
	015 Move X19, X1
	016 Move W26, 0x7999
	017 Move W1, 16
	018 Move X3, X31
	019 Move X20, X0
	020 NotImplemented "Instruction MOVK not yet implemented."
	021 Call Utils.DWORDFromBigEndian, X0, X1, X2
	022 Move X0, X20
	023 Call SHA1Managed.SHAExpand, X0
	024 Move TEMP, 4
	025 Not TEMP
	026 Move X8, TEMP
	027 Move X9, X20
	028 Move W15, [X9]
	029 Move W16, [X9+4]
	030 NotImplemented "Instruction EXTR not yet implemented."
	031 NotImplemented "Instruction BIC not yet implemented."
	032 And W12, W23, W22
	033 Add W13, W25, W26
	034 Or W11, W12, W11
	035 NotImplemented "Instruction BIC not yet implemented."
	036 Add W10, W13, W10
	037 And W13, W21, W22
	038 Add W17, W24, W26
	039 Or W12, W13, W12
	040 Add W10, W10, W11
	041 Add W11, W17, W12
	042 Move W12, [X9+8]
	043 Move W17, [X9+12]
	044 Add W10, W10, W15
	045 Move W15, [X9+16]
	046 NotImplemented "Instruction EXTR not yet implemented."
	047 NotImplemented "Instruction EXTR not yet implemented."
	048 Add W14, W14, W26
	049 Add W13, W13, W26
	050 Add W11, W11, W16
	051 Add W14, W14, W17
	052 Add W13, W13, W15
	053 NotImplemented "Instruction EXTR not yet implemented."
	054 NotImplemented "Instruction ORN not yet implemented."
	055 Add W0, W23, W26
	056 And W16, W10, W21
	057 Add W11, W11, W15
	058 And W15, W17, W22
	059 Add W12, W0, W12
	060 Or W15, W16, W15
	061 NotImplemented "Instruction ORN not yet implemented."
	062 NotImplemented "Instruction EXTR not yet implemented."
	063 And W16, W11, W10
	064 Add W12, W12, W15
	065 And W15, W0, W21
	066 Add W12, W12, W17
	067 Or W15, W16, W15
	068 Add W14, W14, W15
	069 NotImplemented "Instruction ORN not yet implemented."
	070 NotImplemented "Instruction EXTR not yet implemented."
	071 NotImplemented "Instruction EXTR not yet implemented."
	072 NotImplemented "Instruction EXTR not yet implemented."
	073 And W11, W12, W11
	074 And W10, W15, W10
	075 Add W22, W14, W16
	076 Or W10, W11, W10
	077 Add X8, X8, 5
	078 NotImplemented "Instruction EXTR not yet implemented."
	079 NotImplemented "Instruction EXTR not yet implemented."
	080 Add W10, W13, W10
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Add W21, W10, W12
	083 Add X9, X9, 20
	084 Move W8, 0xEBA1
	085 NotImplemented "Instruction MOVK not yet implemented."
	086 Add X9, X20, 96
	087 Move W10, 15
	088 NotImplemented "Instruction EXTR not yet implemented."
	089 Xor W12, W23, W24
	090 Add W13, W25, W8
	091 Add W11, W13, W11
	092 Move W13, [X9-16]
	093 Move W15, [X9-12]
	094 Xor W12, W12, W22
	095 Add W11, W11, W12
	096 Xor W12, W23, W22
	097 Add W16, W24, W8
	098 Xor W12, W12, W21
	099 Add W12, W16, W12
	100 Add W11, W11, W13
	101 Add W12, W12, W15
	102 Move W13, [X9-8]
	103 Move W15, [X9-4]
	104 Add W17, W23, W8
	105 NotImplemented "Instruction EXTR not yet implemented."
	106 NotImplemented "Instruction EXTR not yet implemented."
	107 Add W13, W17, W13
	108 Move W17, [X9+20]
	109 Xor W0, W16, W22
	110 Add W14, W14, W8
	111 Add W16, W16, W8
	112 Add W14, W14, W15
	113 Add W15, W16, W17
	114 NotImplemented "Instruction EXTR not yet implemented."
	115 Xor W17, W0, W11
	116 NotImplemented "Instruction EXTR not yet implemented."
	117 Add W12, W12, W16
	118 Add W13, W13, W17
	119 Xor W16, W25, W21
	120 NotImplemented "Instruction EXTR not yet implemented."
	121 Xor W16, W16, W12
	122 NotImplemented "Instruction EXTR not yet implemented."
	123 Add W12, W13, W17
	124 Add W13, W14, W16
	125 Xor W11, W24, W11
	126 NotImplemented "Instruction EXTR not yet implemented."
	127 Xor W11, W11, W12
	128 Add W22, W13, W14
	129 Add X10, X10, 5
	130 NotImplemented "Instruction EXTR not yet implemented."
	131 Add W11, W15, W11
	132 NotImplemented "Instruction EXTR not yet implemented."
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Add W21, W11, W12
	135 Move W10, 0xBCDC
	136 NotImplemented "Instruction MOVK not yet implemented."
	137 Add X8, X20, 176
	138 Move W9, 35
	139 Or W13, W22, W23
	140 And W12, W22, W23
	141 Move W16, [X8-16]
	142 Move W17, [X8-12]
	143 And W13, W13, W24
	144 NotImplemented "Instruction EXTR not yet implemented."
	145 Add W14, W25, W10
	146 Or W12, W13, W12
	147 Or W13, W21, W22
	148 Add W11, W14, W11
	149 And W14, W21, W22
	150 And W13, W13, W23
	151 Add W0, W24, W10
	152 Or W13, W13, W14
	153 Add W11, W11, W12
	154 Add W12, W0, W13
	155 Move W13, [X8-8]
	156 Move W0, [X8-4]
	157 Add W11, W11, W16
	158 Move W16, [X8+20]
	159 NotImplemented "Instruction EXTR not yet implemented."
	160 NotImplemented "Instruction EXTR not yet implemented."
	161 Add W15, W15, W10
	162 Add W14, W14, W10
	163 Add W12, W12, W17
	164 Add W15, W15, W0
	165 Add W14, W14, W16
	166 NotImplemented "Instruction EXTR not yet implemented."
	167 Or W0, W11, W21
	168 Add W1, W23, W10
	169 And W17, W11, W21
	170 Add W12, W12, W16
	171 And W16, W0, W22
	172 Add W13, W1, W13
	173 Or W16, W16, W17
	174 Or W1, W12, W11
	175 NotImplemented "Instruction EXTR not yet implemented."
	176 And W17, W12, W11
	177 Add W13, W13, W16
	178 And W16, W1, W21
	179 Add W13, W13, W0
	180 Or W16, W16, W17
	181 NotImplemented "Instruction EXTR not yet implemented."
	182 Add W15, W15, W16
	183 And W16, W13, W12
	184 Or W12, W13, W12
	185 NotImplemented "Instruction EXTR not yet implemented."
	186 NotImplemented "Instruction EXTR not yet implemented."
	187 And W11, W12, W11
	188 Add W22, W15, W17
	189 Or W11, W11, W16
	190 Add X9, X9, 5
	191 NotImplemented "Instruction EXTR not yet implemented."
	192 Add W11, W14, W11
	193 NotImplemented "Instruction CMP not yet implemented."
	194 NotImplemented "Instruction EXTR not yet implemented."
	195 Add W21, W11, W12
	196 Add W10, W9, 5
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Move W10, 0xC1D6
	199 NotImplemented "Instruction MOVK not yet implemented."
	200 NotImplemented "Instruction EXTR not yet implemented."
	201 Xor W12, W23, W24
	202 Add W13, W25, W10
	203 Add W11, W13, W11
	204 Move W13, [X8-16]
	205 Move W15, [X8-12]
	206 Xor W12, W12, W22
	207 Add W11, W11, W12
	208 Xor W12, W23, W22
	209 Add W16, W24, W10
	210 Xor W12, W12, W21
	211 Add W12, W16, W12
	212 Add W11, W11, W13
	213 Add W12, W12, W15
	214 Move W13, [X8-8]
	215 Move W15, [X8-4]
	216 Add W17, W23, W10
	217 NotImplemented "Instruction EXTR not yet implemented."
	218 NotImplemented "Instruction EXTR not yet implemented."
	219 Add W13, W17, W13
	220 Move W17, [X8+20]
	221 Xor W0, W16, W22
	222 Add W14, W14, W10
	223 Add W16, W16, W10
	224 Add W14, W14, W15
	225 Add W15, W16, W17
	226 NotImplemented "Instruction EXTR not yet implemented."
	227 Xor W17, W0, W11
	228 NotImplemented "Instruction EXTR not yet implemented."
	229 Add W12, W12, W16
	230 Add W13, W13, W17
	231 Xor W16, W25, W21
	232 NotImplemented "Instruction EXTR not yet implemented."
	233 Xor W16, W16, W12
	234 NotImplemented "Instruction EXTR not yet implemented."
	235 Add W12, W13, W17
	236 Add W13, W14, W16
	237 Xor W11, W24, W11
	238 NotImplemented "Instruction EXTR not yet implemented."
	239 Xor W11, W11, W12
	240 Add W22, W13, W14
	241 Add X9, X9, 5
	242 NotImplemented "Instruction EXTR not yet implemented."
	243 Add W11, W15, W11
	244 NotImplemented "Instruction EXTR not yet implemented."
	245 NotImplemented "Instruction CMP not yet implemented."
	246 Add W21, W11, W12
	247 Move W8, [X19]
	248 Move W9, [X19+4]
	249 Move W10, [X19+8]
	250 Move W11, [X19+12]
	251 Move W12, [X19+16]
	252 Add W8, W8, W21
	253 Add W9, W9, W22
	254 Add W10, W10, W23
	255 Add W11, W11, W24
	256 Add W12, W12, W25
	257 Move [X19], W8
	258 Move [X19+4], W9
	259 Move [X19+8], W10
	260 Move [X19+12], W11
	261 Move [X19+16], W12
	262 Move X20, [X31+64]
	263 Move X19, [X31+72]
	264 Move X22, [X31+48]
	265 Move X21, [X31+56]
	266 Move X24, [X31+32]
	267 Move X23, [X31+40]
	268 Move X26, [X31+16]
	269 Move X25, [X31+24]
	270 Move X30, [X31+80]
	271 Return 

Method: System.Void SHAExpand(System.UInt32* x)

Disassembly:
	0x0325E928 MOV X0, X21
	0x0325E92C MOV W1, W20
	0x0325E930 MOV W3, W25
	0x0325E934 MOV W4, W27
	0x0325E938 MOV X5, X31
	0x0325E93C BL 0x33A8750
	0x0325E940 LDR X0, [X28]
	0x0325E944 ADD W20, W27, W20
	0x0325E948 SUB W19, W19, W27
	0x0325E94C LDR W8, [X0 + 0xE0]
	0x0325E950 CBNZ W8, 0x325E958
	0x0325E954 BL 0x1C16DFC
	0x0325E958 MOV X0, X26
	0x0325E95C MOV X1, X23
	0x0325E960 MOV X2, X24

ISIL:
	001 Move X8, X31
	002 Add X9, X0, X8
	003 Move W10, [X9+52]
	004 Move W11, [X9+32]
	005 Move W12, [X9+8]
	006 Move W13, [X9]
	007 Add X8, X8, 4
	008 Xor W10, W11, W10
	009 Xor W10, W10, W12
	010 Xor W10, W10, W13
	011 NotImplemented "Instruction EXTR not yet implemented."
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move [X9+64], W10
	014 Return 

