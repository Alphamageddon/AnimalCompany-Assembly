Type: System.Security.Claims.ClaimsIdentity

Method: System.Void .ctor()

Disassembly:
	0x0326EB7C ADRP X0, 0xEB5000
	0x0326EB80 LDR X0, [X0 + 0xBD8]
	0x0326EB84 BL 0x1C16CF4
	0x0326EB88 ADRP X0, 0xEB5000
	0x0326EB8C LDR X0, [X0 + 0xBE0]
	0x0326EB90 BL 0x1C16CF4
	0x0326EB94 ADRP X0, 0xEB5000

ISIL:
	001 Move W6, 1
	002 Move X1, X31
	003 Move X2, X31
	004 Move X3, X31
	005 Move X4, X31
	006 Move X5, X31
	007 Call ClaimsIdentity..ctor, X0, X1, X2, X3, X4, X5, X6
	008 Return 

Method: System.Void .ctor(System.Collections.Generic.IEnumerable`1<System.Security.Claims.Claim> claims)

Disassembly:
	0x0326EB98 LDR X0, [X0 + 0xBE8]
	0x0326EB9C BL 0x1C16CF4
	0x0326EBA0 ADRP X0, 0xEB5000
	0x0326EBA4 LDR X0, [X0 + 0xBF0]
	0x0326EBA8 BL 0x1C16CF4
	0x0326EBAC MOVZ W8, 0x1
	0x0326EBB0 STRB W8, [X21 + 0x5B4]

ISIL:
	001 Move X2, X1
	002 Move W6, 1
	003 Move X1, X31
	004 Move X3, X31
	005 Move X4, X31
	006 Move X5, X31
	007 Call ClaimsIdentity..ctor, X0, X1, X2, X3, X4, X5, X6
	008 Return 

Method: System.Void .ctor(System.Security.Principal.IIdentity identity, System.Collections.Generic.IEnumerable`1<System.Security.Claims.Claim> claims, System.String authenticationType, System.String nameType, System.String roleType)

Disassembly:
	0x0326EBB4 CBZ X19, 0x326F190
	0x0326EBB8 ADRP X8, 0xEB1000

ISIL:
	001 Move W6, 1

Method: System.Void .ctor(System.Security.Principal.IIdentity identity, System.Collections.Generic.IEnumerable`1<System.Security.Claims.Claim> claims, System.String authenticationType, System.String nameType, System.String roleType, System.Boolean checkAuthType)

Disassembly:
	0x0326EBBC LDR X8, [X8 + 0xD0]
	0x0326EBC0 LDR X0, [X8]
	0x0326EBC4 BL 0x1C16F10
	0x0326EBC8 MOV X21, X0
	0x0326EBCC MOV X1, X31
	0x0326EBD0 TBZ X24, 0x0, 0x326EBE8
	0x0326EBD4 MOV X2, X23
	0x0326EBD8 MOV X3, X22
	0x0326EBDC MOV X4, X31
	0x0326EBE0 BL 0x32B095C
	0x0326EBE4 B 0x326EBEC
	0x0326EBE8 BL 0x32B0928
	0x0326EBEC MOV X0, X19
	0x0326EBF0 MOV X1, X31
	0x0326EBF4 BL 0x32A8830
	0x0326EBF8 CBZ X0, 0x326F1D8
	0x0326EBFC MOV X1, X31
	0x0326EC00 MOV X22, X0
	0x0326EC04 BL 0x3291B70
	0x0326EC08 TBZ X0, 0x0, 0x326F16C
	0x0326EC0C MOVZ W27, 0xBE2A
	0x0326EC10 MOVZ W28, 0x5253
	0x0326EC14 MOVZ W24, 0x2EDD
	0x0326EC18 MOVZ W26, 0x969A
	0x0326EC1C MOVZ W25, 0x3F20
	0x0326EC20 MOVK W27, 0x392B0000
	0x0326EC24 MOVK W28, 0x25300000
	0x0326EC28 MOVK W24, 0x16450000
	0x0326EC2C MOVK W26, 0x57FF0000
	0x0326EC30 MOVK W25, 0xDA180000
	0x0326EC34 MOV X0, X22
	0x0326EC38 MOV X1, X31
	0x0326EC3C BL 0x3291A04
	0x0326EC40 MOV X1, X31
	0x0326EC44 MOV X23, X0
	0x0326EC48 BL 0x335C87C
	0x0326EC4C CMP W0, W27
	0x0326EC50 B.HI 0x326ECA8
	0x0326EC54 CMP W0, W28
	0x0326EC58 B.HI 0x326EDD0
	0x0326EC5C CMP W0, W24
	0x0326EC60 B.EQ 0x326EE74
	0x0326EC64 CMP W0, W28
	0x0326EC68 B.NE 0x326F0E0
	0x0326EC6C ADRP X8, 0xEB5000
	0x0326EC70 LDR X8, [X8 + 0xBD8]
	0x0326EC74 MOV X0, X23
	0x0326EC78 MOV X2, X31
	0x0326EC7C LDR X1, [X8]
	0x0326EC80 BL 0x321BA08
	0x0326EC84 TBZ X0, 0x0, 0x326F0E0
	0x0326EC88 ADRP X8, 0xEB5000
	0x0326EC8C LDR X8, [X8 + 0xBD8]
	0x0326EC90 MOV X0, X19
	0x0326EC94 MOV X2, X31
	0x0326EC98 LDR X1, [X8]
	0x0326EC9C BL 0x32A9F64
	0x0326ECA0 STR X0, [X20 + 0x30]
	0x0326ECA4 B 0x326F0E0
	0x0326ECA8 CMP W0, W26
	0x0326ECAC B.HI 0x326EE24
	0x0326ECB0 MOVZ W8, 0xF574
	0x0326ECB4 MOVK W8, 0x56A50000
	0x0326ECB8 CMP W0, W8
	0x0326ECBC B.EQ 0x326EEB0
	0x0326ECC0 CMP W0, W26
	0x0326ECC4 B.NE 0x326F0E0
	0x0326ECC8 ADRP X8, 0xEB5000
	0x0326ECCC LDR X8, [X8 + 0xBE0]
	0x0326ECD0 MOV X0, X23
	0x0326ECD4 MOV X2, X31
	0x0326ECD8 LDR X1, [X8]
	0x0326ECDC BL 0x321BA08
	0x0326ECE0 TBZ X0, 0x0, 0x326F0E0
	0x0326ECE4 ADRP X8, 0xEB5000
	0x0326ECE8 LDR X8, [X8 + 0xBE0]
	0x0326ECEC MOV X0, X19
	0x0326ECF0 MOV X2, X31
	0x0326ECF4 LDR X1, [X8]
	0x0326ECF8 BL 0x32A9F64
	0x0326ECFC ADRP X8, 0xE8E000
	0x0326ED00 LDR X8, [X8 + 0x9E8]
	0x0326ED04 MOV X23, X0
	0x0326ED08 LDR X8, [X8]
	0x0326ED0C LDR W9, [X8 + 0xE0]
	0x0326ED10 CBNZ W9, 0x326ED1C
	0x0326ED14 MOV X0, X8
	0x0326ED18 BL 0x1C16DFC
	0x0326ED1C MOV X0, X23
	0x0326ED20 MOV X1, X31
	0x0326ED24 BL 0x3322D04
	0x0326ED28 ADRP X8, 0xE8D000
	0x0326ED2C LDR X8, [X8 + 0x558]
	0x0326ED30 MOV X24, X0
	0x0326ED34 LDR X8, [X8]
	0x0326ED38 MOV X0, X8
	0x0326ED3C BL 0x1C16F10
	0x0326ED40 MOV X1, X24
	0x0326ED44 MOV X2, X31
	0x0326ED48 MOV X23, X0
	0x0326ED4C BL 0x32E2528
	0x0326ED50 CBZ X21, 0x326F104
	0x0326ED54 MOV X0, X21
	0x0326ED58 MOV X1, X23
	0x0326ED5C MOV X2, X31
	0x0326ED60 MOV W3, W31
	0x0326ED64 MOV X4, X31
	0x0326ED68 BL 0x32B09BC
	0x0326ED6C CBZ X0, 0x326F008
	0x0326ED70 ADRP X8, 0xEB5000
	0x0326ED74 LDR X9, [X0]
	0x0326ED78 LDR X8, [X8 + 0xB68]
	0x0326ED7C LDRB W10, [X9 + 0x130]
	0x0326ED80 LDR X1, [X8]
	0x0326ED84 LDRB W8, [X1 + 0x130]
	0x0326ED88 CMP W10, W8
	0x0326ED8C B.CC 0x326F0F4
	0x0326ED90 LDR X10, [X9 + 0xC8]
	0x0326ED94 SUB X9, X8, 0x1
	0x0326ED98 LDR X10, [X10, X9, LSL #3]
	0x0326ED9C CMP X10, X1
	0x0326EDA0 B.NE 0x326F0F4
	0x0326EDA4 STR X0, [X20 + 0x40]
	0x0326EDA8 LDR X10, [X0]
	0x0326EDAC LDRB W11, [X10 + 0x130]
	0x0326EDB0 CMP W11, W8
	0x0326EDB4 B.CC 0x326F0FC
	0x0326EDB8 LDR X8, [X10 + 0xC8]
	0x0326EDBC LDR X8, [X8, X9, LSL #3]
	0x0326EDC0 CMP X8, X1
	0x0326EDC4 B.NE 0x326F0FC
	0x0326EDC8 MOV X24, X31
	0x0326EDCC B 0x326F010
	0x0326EDD0 MOVZ W8, 0xE529
	0x0326EDD4 MOVK W8, 0x271E0000
	0x0326EDD8 CMP W0, W8
	0x0326EDDC B.EQ 0x326EED0
	0x0326EDE0 CMP W0, W27
	0x0326EDE4 B.NE 0x326F0E0
	0x0326EDE8 ADRP X8, 0xEB5000
	0x0326EDEC LDR X8, [X8 + 0xBD0]
	0x0326EDF0 MOV X0, X23
	0x0326EDF4 MOV X2, X31
	0x0326EDF8 LDR X1, [X8]
	0x0326EDFC BL 0x321BA08
	0x0326EE00 TBZ X0, 0x0, 0x326F0E0
	0x0326EE04 ADRP X8, 0xEB5000
	0x0326EE08 LDR X8, [X8 + 0xBD0]
	0x0326EE0C MOV X0, X19
	0x0326EE10 MOV X2, X31
	0x0326EE14 LDR X1, [X8]
	0x0326EE18 BL 0x32A9F64
	0x0326EE1C STR X0, [X20 + 0x28]
	0x0326EE20 B 0x326F0E0
	0x0326EE24 CMP W0, W25
	0x0326EE28 B.EQ 0x326EF0C
	0x0326EE2C MOVZ W8, 0x2477
	0x0326EE30 MOVK W8, 0x93D60000
	0x0326EE34 CMP W0, W8
	0x0326EE38 B.NE 0x326F0E0
	0x0326EE3C ADRP X8, 0xEB5000
	0x0326EE40 LDR X8, [X8 + 0xBB8]
	0x0326EE44 MOV X0, X23
	0x0326EE48 MOV X2, X31
	0x0326EE4C LDR X1, [X8]
	0x0326EE50 BL 0x321BA08
	0x0326EE54 TBZ X0, 0x0, 0x326F0E0
	0x0326EE58 ADRP X8, 0xEB5000
	0x0326EE5C LDR X8, [X8 + 0xBB8]
	0x0326EE60 MOV X0, X19
	0x0326EE64 MOV X2, X31
	0x0326EE68 LDR X1, [X8]
	0x0326EE6C BL 0x32A9F64
	0x0326EE70 B 0x326F0E0
	0x0326EE74 ADRP X8, 0xEB5000
	0x0326EE78 LDR X8, [X8 + 0xBE8]
	0x0326EE7C MOV X0, X23
	0x0326EE80 MOV X2, X31
	0x0326EE84 LDR X1, [X8]
	0x0326EE88 BL 0x321BA08
	0x0326EE8C TBZ X0, 0x0, 0x326F0E0
	0x0326EE90 ADRP X8, 0xEB5000
	0x0326EE94 LDR X8, [X8 + 0xBE8]
	0x0326EE98 MOV X0, X19
	0x0326EE9C MOV X2, X31
	0x0326EEA0 LDR X1, [X8]
	0x0326EEA4 BL 0x32A9F64
	0x0326EEA8 STR X0, [X20 + 0x58]
	0x0326EEAC B 0x326F0E0
	0x0326EEB0 ADRP X8, 0xEB5000
	0x0326EEB4 LDR X8, [X8 + 0xBC0]
	0x0326EEB8 MOV X0, X23
	0x0326EEBC MOV X2, X31
	0x0326EEC0 LDR X1, [X8]
	0x0326EEC4 BL 0x321BA08
	0x0326EEC8 TBNZ X0, 0x0, 0x326F088
	0x0326EECC B 0x326F0E0
	0x0326EED0 ADRP X8, 0xEB5000
	0x0326EED4 LDR X8, [X8 + 0xBF0]
	0x0326EED8 MOV X0, X23
	0x0326EEDC MOV X2, X31
	0x0326EEE0 LDR X1, [X8]
	0x0326EEE4 BL 0x321BA08
	0x0326EEE8 TBZ X0, 0x0, 0x326F0E0
	0x0326EEEC ADRP X8, 0xEB5000
	0x0326EEF0 LDR X8, [X8 + 0xBF0]
	0x0326EEF4 MOV X0, X19
	0x0326EEF8 MOV X2, X31
	0x0326EEFC LDR X1, [X8]
	0x0326EF00 BL 0x32A9F64
	0x0326EF04 STR X0, [X20 + 0x48]
	0x0326EF08 B 0x326F0E0
	0x0326EF0C ADRP X8, 0xEB5000
	0x0326EF10 LDR X8, [X8 + 0xBC8]
	0x0326EF14 MOV X0, X23
	0x0326EF18 MOV X2, X31
	0x0326EF1C LDR X1, [X8]
	0x0326EF20 BL 0x321BA08
	0x0326EF24 TBZ X0, 0x0, 0x326F0E0
	0x0326EF28 ADRP X8, 0xEB5000
	0x0326EF2C LDR X8, [X8 + 0xBC8]
	0x0326EF30 MOV X0, X19
	0x0326EF34 MOV X2, X31
	0x0326EF38 LDR X1, [X8]
	0x0326EF3C BL 0x32A9F64
	0x0326EF40 ADRP X8, 0xE8E000
	0x0326EF44 LDR X8, [X8 + 0x9E8]
	0x0326EF48 MOV X23, X0
	0x0326EF4C LDR X8, [X8]
	0x0326EF50 LDR W9, [X8 + 0xE0]
	0x0326EF54 CBNZ W9, 0x326EF60
	0x0326EF58 MOV X0, X8
	0x0326EF5C BL 0x1C16DFC
	0x0326EF60 MOV X0, X23
	0x0326EF64 MOV X1, X31
	0x0326EF68 BL 0x3322D04
	0x0326EF6C ADRP X8, 0xE8D000
	0x0326EF70 LDR X8, [X8 + 0x558]
	0x0326EF74 MOV X24, X0
	0x0326EF78 LDR X8, [X8]
	0x0326EF7C MOV X0, X8
	0x0326EF80 BL 0x1C16F10
	0x0326EF84 MOV X1, X24
	0x0326EF88 MOV X2, X31
	0x0326EF8C MOV X23, X0
	0x0326EF90 BL 0x32E2528
	0x0326EF94 CBZ X21, 0x326F10C
	0x0326EF98 MOV X0, X21
	0x0326EF9C MOV X1, X23
	0x0326EFA0 MOV X2, X31
	0x0326EFA4 MOV W3, W31
	0x0326EFA8 MOV X4, X31
	0x0326EFAC BL 0x32B09BC
	0x0326EFB0 MOV X24, X31
	0x0326EFB4 STR X0, [X20 + 0x50]
	0x0326EFB8 MOVZ W29, 0x7
	0x0326EFBC CBZ X23, 0x326F0C8
	0x0326EFC0 LDR X8, [X23]
	0x0326EFC4 ADRP X10, 0xE85000
	0x0326EFC8 LDRH W9, [X8 + 0x12E]
	0x0326EFCC LDR X10, [X10 + 0xE00]
	0x0326EFD0 LDR X1, [X10]
	0x0326EFD4 CBZ X9, 0x326EFF8
	0x0326EFD8 LDR X10, [X8 + 0xB0]
	0x0326EFDC ADD X10, X10, 0x8
	0x0326EFE0 LDUR X11, [X10 - 0x8]
	0x0326EFE4 CMP X11, X1
	0x0326EFE8 B.EQ 0x326F0B0
	0x0326EFEC SUBS X9, X9, 0x1
	0x0326EFF0 ADD X10, X10, 0x10
	0x0326EFF4 B.NE 0x326EFE0
	0x0326EFF8 MOV X0, X23
	0x0326EFFC MOV W2, W31
	0x0326F000 BL 0x1C5C788
	0x0326F004 B 0x326F0BC
	0x0326F008 MOV X24, X31
	0x0326F00C STR X31, [X20 + 0x40]
	0x0326F010 MOVZ W29, 0x7
	0x0326F014 CBZ X23, 0x326F078
	0x0326F018 LDR X8, [X23]
	0x0326F01C ADRP X10, 0xE84000
	0x0326F020 LDRH W9, [X8 + 0x12E]
	0x0326F024 LDR X10, [X10 + 0xE00]
	0x0326F028 LDR X1, [X10]
	0x0326F02C CBZ X9, 0x326F050
	0x0326F030 LDR X10, [X8 + 0xB0]
	0x0326F034 ADD X10, X10, 0x8
	0x0326F038 LDUR X11, [X10 - 0x8]
	0x0326F03C CMP X11, X1
	0x0326F040 B.EQ 0x326F060
	0x0326F044 SUBS X9, X9, 0x1
	0x0326F048 ADD X10, X10, 0x10
	0x0326F04C B.NE 0x326F038
	0x0326F050 MOV X0, X23
	0x0326F054 MOV W2, W31
	0x0326F058 BL 0x1C5C788
	0x0326F05C B 0x326F06C
	0x0326F060 LDRSW X9, [X10]
	0x0326F064 ADD X8, X8, X9, 0x4, LSL
	0x0326F068 ADD X0, X8, 0x138
	0x0326F06C LDP X8, X1, [X0]
	0x0326F070 MOV X0, X23
	0x0326F074 BLR X8
	0x0326F078 CBNZ X24, 0x326F188
	0x0326F07C MOVZ W24, 0x2EDD
	0x0326F080 MOVK W24, 0x16450000
	0x0326F084 CBNZ W29, 0x326F0D8
	0x0326F088 ADRP X8, 0xEB4000
	0x0326F08C LDR X8, [X8 + 0xBC0]
	0x0326F090 MOV X0, X19
	0x0326F094 MOV X2, X31
	0x0326F098 LDR X1, [X8]
	0x0326F09C BL 0x32A9F64
	0x0326F0A0 MOV X1, X0
	0x0326F0A4 MOV X0, X20
	0x0326F0A8 BL 0x326FE1C
	0x0326F0AC B 0x326F0E0
	0x0326F0B0 LDRSW X9, [X10]
	0x0326F0B4 ADD X8, X8, X9, 0x4, LSL
	0x0326F0B8 ADD X0, X8, 0x138
	0x0326F0BC LDP X8, X1, [X0]
	0x0326F0C0 MOV X0, X23
	0x0326F0C4 BLR X8
	0x0326F0C8 CBNZ X24, 0x326F188
	0x0326F0CC MOVZ W24, 0x2EDD
	0x0326F0D0 MOVK W24, 0x16450000
	0x0326F0D4 CBZ W29, 0x326F0E0
	0x0326F0D8 CMP W29, 0x7
	0x0326F0DC B.NE 0x326F16C
	0x0326F0E0 MOV X0, X22
	0x0326F0E4 MOV X1, X31
	0x0326F0E8 BL 0x3291B70
	0x0326F0EC TBNZ X0, 0x0, 0x326EC34
	0x0326F0F0 B 0x326F16C
	0x0326F0F4 BL 0x1C171E0
	0x0326F0F8 B 0x326F1E4
	0x0326F0FC BL 0x1C171E0
	0x0326F100 B 0x326F1E4
	0x0326F104 BL 0x1C16F20
	0x0326F108 B 0x326F1EC
	0x0326F10C BL 0x1C16F20
	0x0326F110 B 0x326F1E4
	0x0326F114 B 0x326F118
	0x0326F118 MOV X29, X0
	0x0326F11C CMP W1, 0x1
	0x0326F120 B.NE 0x326F1DC
	0x0326F124 MOV X0, X29
	0x0326F128 BL 0x3EB1AD0
	0x0326F12C LDR X24, [X0]
	0x0326F130 BL 0x3EB1AE0
	0x0326F134 MOV W29, W31
	0x0326F138 CBNZ X23, 0x326EFC0
	0x0326F13C B 0x326F0C8
	0x0326F140 B 0x326F144
	0x0326F144 MOV X29, X0
	0x0326F148 CMP W1, 0x1
	0x0326F14C B.NE 0x326F1E4
	0x0326F150 MOV X0, X29
	0x0326F154 BL 0x3EB1AD0
	0x0326F158 LDR X24, [X0]
	0x0326F15C BL 0x3EB1AE0
	0x0326F160 MOV W29, W31
	0x0326F164 CBNZ X23, 0x326F018
	0x0326F168 B 0x326F078
	0x0326F16C LDP X20, X19, [X31 + 0x50]
	0x0326F170 LDP X22, X21, [X31 + 0x40]
	0x0326F174 LDP X24, X23, [X31 + 0x30]
	0x0326F178 LDP X26, X25, [X31 + 0x20]
	0x0326F17C LDP X28, X27, [X31 + 0x10]
	0x0326F180 LDP X29, X30, [X31], #0x60
	0x0326F184 RET
	0x0326F188 MOV X0, X24
	0x0326F18C BL 0x1C16F18
	0x0326F190 ADRP X0, 0xE89000
	0x0326F194 LDR X0, [X0 + 0x528]
	0x0326F198 BL 0x1C16D08
	0x0326F19C BL 0x1C16F10
	0x0326F1A0 MOV X19, X0
	0x0326F1A4 ADRP X0, 0xEAE000
	0x0326F1A8 LDR X0, [X0 + 0x2D8]
	0x0326F1AC BL 0x1C16D08
	0x0326F1B0 MOV X1, X0
	0x0326F1B4 MOV X0, X19
	0x0326F1B8 MOV X2, X31
	0x0326F1BC BL 0x330E100
	0x0326F1C0 ADRP X0, 0xEB4000
	0x0326F1C4 LDR X0, [X0 + 0xBF8]
	0x0326F1C8 BL 0x1C16D08
	0x0326F1CC MOV X1, X0
	0x0326F1D0 MOV X0, X19
	0x0326F1D4 BL 0x1C16DEC
	0x0326F1D8 BL 0x1C16F20
	0x0326F1DC MOV X24, X31
	0x0326F1E0 B 0x326F264
	0x0326F1E4 MOV X24, X31
	0x0326F1E8 B 0x326F1F0
	0x0326F1EC MOV X29, X0
	0x0326F1F0 CBZ X23, 0x326F254
	0x0326F1F4 LDR X8, [X23]
	0x0326F1F8 ADRP X10, 0xE84000
	0x0326F1FC LDRH W9, [X8 + 0x12E]
	0x0326F200 LDR X10, [X10 + 0xE00]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move [X31+16], X4
	015 Move [X31+24], X5
	016 Move [X31+8], X2
	017 Move X28, 0x116F000
	018 Move X23, 0xEB6000
	019 Move X26, 0xEB6000
	020 Move X22, 0xEB6000
	021 Move X19, 0xEB6000
	022 Move X27, 0xEB6000
	023 Move X29, 0xEB6000
	024 Move X23, [X23+2864]
	025 Move X26, [X26+2872]
	026 Move W8, [X28+1445]
	027 Move X22, [X22+2880]
	028 Move X19, [X19+2888]
	029 Move X27, [X27+2896]
	030 Move X29, [X29+2904]
	031 Move W25, W6
	032 Move X24, X3
	033 Move X21, X1
	034 Move X20, X0
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {86}
	039 Move X0, 0xEB6000
	040 Move X0, [X0+2912]
	041 Call 0x1C17CF4
	042 Move X0, 0xE86000
	043 Move X0, [X0+1560]
	044 Call 0x1C17CF4
	045 Move X0, 0xEB6000
	046 Move X0, [X0+2568]
	047 Call 0x1C17CF4
	048 Move X0, 0xEB6000
	049 Move X0, [X0+2920]
	050 Call 0x1C17CF4
	051 Move X0, 0xEB6000
	052 Move X0, [X0+2888]
	053 Call 0x1C17CF4
	054 Move X0, 0xEB6000
	055 Move X0, [X0+2880]
	056 Call 0x1C17CF4
	057 Move X0, 0xEB6000
	058 Move X0, [X0+2928]
	059 Call 0x1C17CF4
	060 Move X0, 0xEB6000
	061 Move X0, [X0+2872]
	062 Call 0x1C17CF4
	063 Move X0, 0xEB6000
	064 Move X0, [X0+2864]
	065 Call 0x1C17CF4
	066 Move X0, 0xEB6000
	067 Move X0, [X0+2624]
	068 Call 0x1C17CF4
	069 Move X0, 0xEB6000
	070 Move X0, [X0+2936]
	071 Call 0x1C17CF4
	072 Move X0, 0xEB6000
	073 Move X0, [X0+2576]
	074 Call 0x1C17CF4
	075 Move X0, 0xEB6000
	076 Move X0, [X0+2584]
	077 Call 0x1C17CF4
	078 Move X0, 0xEB6000
	079 Move X0, [X0+2904]
	080 Call 0x1C17CF4
	081 Move X0, 0xEB6000
	082 Move X0, [X0+2896]
	083 Call 0x1C17CF4
	084 Move W8, 1
	085 Move [X28+1445], W8
	086 Move X0, [X23]
	087 Move X23, 0xEB6000
	088 Move X23, [X23+2928]
	089 Call 0x1C17F10
	090 Move X1, [X26]
	091 Move X26, X0
	092 Call List`1<Object>..ctor, X0
	093 Move [X20+24], X26
	094 Move X0, [X22]
	095 Call 0x1C17F10
	096 Move X1, [X19]
	097 Move X26, X0
	098 Call 0x28FC8A8, X0
	099 Move X8, [X27]
	100 Move X0, X20
	101 Move X1, X31
	102 Move [X20+32], X26
	103 Move [X20+40], X8
	104 Move X8, [X29]
	105 Move [X20+48], X8
	106 Move X8, 0xEB6000
	107 Move X8, [X8+2936]
	108 Move X8, [X8]
	109 Move [X20+56], X8
	110 Call Object..ctor, X0
	111 Compare X21, 0
	112 JumpIfEqual {197}
	113 Move X22, [X31+16]
	114 Move X19, [X31+24]
	115 Move TEMP, X25
	116 And TEMP, TEMP, 1
	117 Compare TEMP, 1
	118 JumpIfNotEqual {199}
	119 Move X0, X24
	120 Move X1, X31
	121 Call String.IsNullOrEmpty, X0
	122 Move TEMP, X0
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfNotEqual {199}
	126 Move X9, 0xEB6000
	127 Move X9, [X9+2624]
	128 Move X8, [X21]
	129 Move X9, [X9]
	130 Move W11, [X8+304]
	131 Move W10, [X9+304]
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move X11, [X8+200]
	134 Add X10, X11, X10
	135 NotImplemented "Instruction LDUR not yet implemented."
	136 NotImplemented "Instruction CMP not yet implemented."
	137 NotImplemented "Instruction LDRH not yet implemented."
	138 Move X1, [X23]
	139 Compare X9, 0
	140 JumpIfEqual {147}
	141 Move X10, [X8+176]
	142 Add X10, X10, 8
	143 NotImplemented "Instruction LDUR not yet implemented."
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Subtract X9, X9, 1
	146 Add X10, X10, 16
	147 Move W2, 1
	148 Move X0, X21
	149 Call 0x1C5D788
	150 Move W9, [X10]
	151 Add W9, W9, 1
	152 Add X8, X8, W9
	153 Add X0, X8, 312
	154 Move X8, [X0]
	155 Move X1, [X0+8]
	156 Move X0, X21
	157 NotImplemented "Instruction BLR not yet implemented."
	158 Move X24, X0
	159 NotImplemented "Instruction LDRH not yet implemented."
	160 Move X1, [X23]
	161 Compare X9, 0
	162 JumpIfEqual {169}
	163 Move X10, [X8+176]
	164 Add X10, X10, 8
	165 NotImplemented "Instruction LDUR not yet implemented."
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Subtract X9, X9, 1
	168 Add X10, X10, 16
	169 Move W2, 1
	170 Move X0, X21
	171 Call 0x1C5D788
	172 Move W9, [X10]
	173 Add W9, W9, 1
	174 Add X8, X8, W9
	175 Add X0, X8, 312
	176 Move X8, [X0]
	177 Move X1, [X0+8]
	178 Move X0, X21
	179 NotImplemented "Instruction BLR not yet implemented."
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Move X24, X0
	182 Move X0, X24
	183 Call 0x3EB2AD0
	184 Move X24, X0
	185 Move X0, 0xEB4000
	186 Move X0, [X0+1976]
	187 Call 0x1C17D08
	188 Move X8, [X24]
	189 Move X1, [X8]
	190 Call 0x1C18270
	191 Move TEMP, X0
	192 And TEMP, TEMP, 1
	193 Compare TEMP, 1
	194 JumpIfNotEqual {431}
	195 Call 0x3EB2AE0
	196 Move X24, X31
	197 Move X22, [X31+16]
	198 Move X19, [X31+24]
	199 Move X0, X22
	200 Move X1, X31
	201 Move [X20+72], X24
	202 Call String.IsNullOrEmpty, X0
	203 Move W24, W0
	204 Move TEMP, X0
	205 And TEMP, TEMP, 1
	206 Compare TEMP, 1
	207 JumpIfEqual {209}
	208 Move [X20+40], X22
	209 Move X0, X19
	210 Move X1, X31
	211 Call String.IsNullOrEmpty, X0
	212 Move TEMP, X0
	213 And TEMP, TEMP, 1
	214 Compare TEMP, 1
	215 JumpIfEqual {217}
	216 Move [X20+48], X19
	217 Compare X21, 0
	218 JumpIfEqual {367}
	219 Move X9, 0xEB6000
	220 Move X9, [X9+2920]
	221 Move X8, [X21]
	222 Move X9, [X9]
	223 Move W11, [X8+304]
	224 Move W10, [X9+304]
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Move X11, [X8+200]
	227 Add X10, X11, X10
	228 NotImplemented "Instruction LDUR not yet implemented."
	229 NotImplemented "Instruction CMP not yet implemented."
	230 NotImplemented "Instruction LDRH not yet implemented."
	231 Move X1, [X23]
	232 Compare X9, 0
	233 JumpIfEqual {240}
	234 Move X10, [X8+176]
	235 Add X10, X10, 8
	236 NotImplemented "Instruction LDUR not yet implemented."
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Subtract X9, X9, 1
	239 Add X10, X10, 16
	240 Move X0, X21
	241 Move W2, W31
	242 Call 0x1C5D788
	243 NotImplemented "Instruction LDRSW not yet implemented."
	244 Add X8, X8, X9
	245 Add X0, X8, 312
	246 Move X8, [X0]
	247 Move X1, [X0+8]
	248 Move X0, X21
	249 NotImplemented "Instruction BLR not yet implemented."
	250 Move X1, X31
	251 Call String.IsNullOrEmpty, X0
	252 Move TEMP, X0
	253 And TEMP, TEMP, 1
	254 Compare TEMP, 1
	255 JumpIfEqual {367}
	256 Move X8, [X21]
	257 Move X22, [X20+40]
	258 Move X1, [X23]
	259 NotImplemented "Instruction LDRH not yet implemented."
	260 Compare X9, 0
	261 JumpIfEqual {268}
	262 Move X10, [X8+176]
	263 Add X10, X10, 8
	264 NotImplemented "Instruction LDUR not yet implemented."
	265 NotImplemented "Instruction CMP not yet implemented."
	266 Subtract X9, X9, 1
	267 Add X10, X10, 16
	268 Move X0, X21
	269 Move W2, W31
	270 Call 0x1C5D788
	271 Move X8, [X21+88]
	272 Move [X20+88], X8
	273 Move TEMP, X24
	274 And TEMP, TEMP, 1
	275 Compare TEMP, 1
	276 JumpIfNotEqual {279}
	277 Move X8, [X21+40]
	278 Move [X20+40], X8
	279 Move TEMP, X0
	280 And TEMP, TEMP, 1
	281 Compare TEMP, 1
	282 JumpIfNotEqual {285}
	283 Move X8, [X21+48]
	284 Move [X20+48], X8
	285 Move X8, [X21+80]
	286 Move [X20+80], X8
	287 Move X0, [X21+64]
	288 Compare X0, 0
	289 JumpIfEqual {310}
	290 NotImplemented "Instruction CMP not yet implemented."
	291 Move X8, X0
	292 Move X8, [X8+64]
	293 Compare X8, 0
	294 JumpIfEqual {296}
	295 NotImplemented "Instruction CMP not yet implemented."
	296 Compare X8, 0
	297 JumpIfNotEqual {411}
	298 Move X8, 0xEB6000
	299 Move X8, [X8+2912]
	300 Move X8, [X8]
	301 Move X8, [X8+184]
	302 Move W8, [X8]
	303 Compare W8, 0
	304 JumpIfNotEqual {309}
	305 Move X8, [X0]
	306 Move X9, [X8+488]
	307 Move X1, [X8+496]
	308 NotImplemented "Instruction BLR not yet implemented."
	309 Move [X20+64], X0
	310 Move X9, 0xEB5000
	311 Move X9, [X9+2624]
	312 Move X8, [X21]
	313 Move X9, [X9]
	314 Move W11, [X8+304]
	315 Move W10, [X9+304]
	316 NotImplemented "Instruction CMP not yet implemented."
	317 Move X12, [X8+200]
	318 Subtract X11, X10, 1
	319 Move X12, [X12]
	320 NotImplemented "Instruction CMP not yet implemented."
	321 Move X1, [X21+24]
	322 Move X0, X20
	323 Call ClaimsIdentity.SafeAddClaims, X0, X1
	324 Move X0, [X21+16]
	325 Compare X0, 0
	326 JumpIfEqual {367}
	327 Move X1, X31
	328 Call Array.Clone, X0
	329 Move X19, 0xE85000
	330 Move X19, [X19+1560]
	331 Move X21, X0
	332 Move X1, [X19]
	333 Call 0x1C17E00
	334 Move [X20+16], X0
	335 Move X1, [X19]
	336 Move X0, X21
	337 Call 0x1C17E00
	338 NotImplemented "Instruction LDRSW not yet implemented."
	339 Add X8, X8, X9
	340 Add X0, X8, 312
	341 Move X8, [X0]
	342 Move X1, [X0+8]
	343 Move X0, X21
	344 NotImplemented "Instruction BLR not yet implemented."
	345 Move X8, 0xEB5000
	346 Move X8, [X8+2568]
	347 Move X21, X0
	348 Move X8, [X8]
	349 Move X0, X8
	350 Call 0x1C17F10
	351 Move X8, 0xEB5000
	352 Move X9, 0xEB5000
	353 Move X8, [X8+2584]
	354 Move X9, [X9+2576]
	355 Move X1, X22
	356 Move X2, X21
	357 Move X3, [X8]
	358 Move X4, [X9]
	359 Move X6, X20
	360 Move X7, X31
	361 Move X23, X0
	362 Move X5, X4
	363 Call Claim..ctor, X0, X1, X2, X3, X4, X5, X6
	364 Move X0, X20
	365 Move X1, X23
	366 Call ClaimsIdentity.SafeAddClaim, X0, X1
	367 Move X1, [X31+8]
	368 Compare X1, 0
	369 JumpIfEqual {386}
	370 Move X0, X20
	371 Move X20, [X31+112]
	372 Move X19, [X31+120]
	373 Move X22, [X31+96]
	374 Move X21, [X31+104]
	375 Move X24, [X31+80]
	376 Move X23, [X31+88]
	377 Move X26, [X31+64]
	378 Move X25, [X31+72]
	379 Move X28, [X31+48]
	380 Move X27, [X31+56]
	381 Move X29, [X31+32]
	382 Move X30, [X31+40]
	383 Add X31, X31, 128
	384 Call ClaimsIdentity.SafeAddClaims, X0, X1
	385 Return 
	386 Move X20, [X31+112]
	387 Move X19, [X31+120]
	388 Move X22, [X31+96]
	389 Move X21, [X31+104]
	390 Move X24, [X31+80]
	391 Move X23, [X31+88]
	392 Move X26, [X31+64]
	393 Move X25, [X31+72]
	394 Move X28, [X31+48]
	395 Move X27, [X31+56]
	396 Move X29, [X31+32]
	397 Move X30, [X31+40]
	398 Add X31, X31, 128
	399 Return 
	400 Move X12, [X20]
	401 Move W13, [X12+304]
	402 NotImplemented "Instruction CMP not yet implemented."
	403 Move X10, [X12+200]
	404 Move X10, [X10]
	405 NotImplemented "Instruction CMP not yet implemented."
	406 Move X9, [X8+456]
	407 Move X1, [X8+464]
	408 Move X0, X21
	409 NotImplemented "Instruction BLR not yet implemented."
	410 Move X1, X0
	411 Move X0, 0xEB5000
	412 Move X0, [X0+2944]
	413 Call 0x1C17D08
	414 Move X1, X31
	415 Call Environment.GetResourceString, X0
	416 Move X19, X0
	417 Move X0, 0xE85000
	418 Move X0, [X0+1456]
	419 Call 0x1C17D08
	420 Call 0x1C17F10
	421 Move X1, X19
	422 Move X2, X31
	423 Move X20, X0
	424 Call InvalidOperationException..ctor, X0, X1
	425 Move X0, 0xEB5000
	426 Move X0, [X0+2952]
	427 Call 0x1C17D08
	428 Move X1, X0
	429 Move X0, X20
	430 Call 0x1C17DEC
	431 Move W0, 8
	432 Call 0x3EB2AF0
	433 Move X8, [X24]
	434 Move [X0], X8
	435 Move X1, 0xC46000
	436 Add X1, X1, 3672
	437 Move X2, X31
	438 Call 0x3EB2B00
	439 Move X24, X0
	440 Call 0x3EB2AE0
	441 Move X0, X24
	442 Call 0x1D2D690
	443 Call 0x1991590

Method: System.Void .ctor(System.Security.Claims.ClaimsIdentity other)

Disassembly:
	0x0326F750 MOV X19, X0
	0x0326F754 TBNZ X8, 0x0, 0x326F790
	0x0326F758 ADRP X0, 0xE84000
	0x0326F75C LDR X0, [X0 + 0xE00]
	0x0326F760 BL 0x1C16CF4
	0x0326F764 ADRP X0, 0xEB4000
	0x0326F768 LDR X0, [X0 + 0xB90]
	0x0326F76C BL 0x1C16CF4
	0x0326F770 ADRP X0, 0xEB4000
	0x0326F774 LDR X0, [X0 + 0xB98]
	0x0326F778 BL 0x1C16CF4
	0x0326F77C ADRP X0, 0xE84000
	0x0326F780 LDR X0, [X0 + 0xE18]
	0x0326F784 BL 0x1C16CF4
	0x0326F788 MOVZ W8, 0x1
	0x0326F78C STRB W8, [X21 + 0x5AD]
	0x0326F790 CBZ X20, 0x326F98C
	0x0326F794 LDR X8, [X19]
	0x0326F798 MOV X0, X19
	0x0326F79C LDP X9, X1, [X8 + 0x1C8]
	0x0326F7A0 BLR X9
	0x0326F7A4 CBZ X0, 0x326F9D4
	0x0326F7A8 ADRP X10, 0xEB4000
	0x0326F7AC LDR X8, [X0]
	0x0326F7B0 LDR X10, [X10 + 0xB90]
	0x0326F7B4 MOV X19, X0
	0x0326F7B8 LDRH W9, [X8 + 0x12E]
	0x0326F7BC LDR X1, [X10]
	0x0326F7C0 CBZ X9, 0x326F7E4
	0x0326F7C4 LDR X10, [X8 + 0xB0]
	0x0326F7C8 ADD X10, X10, 0x8
	0x0326F7CC LDUR X11, [X10 - 0x8]
	0x0326F7D0 CMP X11, X1
	0x0326F7D4 B.EQ 0x326F7F4
	0x0326F7D8 SUBS X9, X9, 0x1
	0x0326F7DC ADD X10, X10, 0x10
	0x0326F7E0 B.NE 0x326F7CC
	0x0326F7E4 MOV X0, X19
	0x0326F7E8 MOV W2, W31
	0x0326F7EC BL 0x1C5C788
	0x0326F7F0 B 0x326F800
	0x0326F7F4 LDRSW X9, [X10]
	0x0326F7F8 ADD X8, X8, X9, 0x4, LSL
	0x0326F7FC ADD X0, X8, 0x138
	0x0326F800 LDP X8, X1, [X0]
	0x0326F804 ADRP X22, 0xE84000
	0x0326F808 LDR X22, [X22 + 0xE00]
	0x0326F80C MOV X0, X19
	0x0326F810 BLR X8
	0x0326F814 MOV X19, X0
	0x0326F818 CBZ X0, 0x326F9D8
	0x0326F81C ADRP X23, 0xE84000
	0x0326F820 ADRP X24, 0xEB4000
	0x0326F824 LDR X23, [X23 + 0xE18]
	0x0326F828 LDR X24, [X24 + 0xB98]
	0x0326F82C LDR X8, [X19]
	0x0326F830 LDR X1, [X23]
	0x0326F834 LDRH W9, [X8 + 0x12E]
	0x0326F838 CBZ X9, 0x326F85C
	0x0326F83C LDR X10, [X8 + 0xB0]
	0x0326F840 ADD X10, X10, 0x8
	0x0326F844 LDUR X11, [X10 - 0x8]
	0x0326F848 CMP X11, X1
	0x0326F84C B.EQ 0x326F86C
	0x0326F850 SUBS X9, X9, 0x1
	0x0326F854 ADD X10, X10, 0x10
	0x0326F858 B.NE 0x326F844
	0x0326F85C MOV X0, X19
	0x0326F860 MOV W2, W31
	0x0326F864 BL 0x1C5C788
	0x0326F868 B 0x326F878
	0x0326F86C LDRSW X9, [X10]
	0x0326F870 ADD X8, X8, X9, 0x4, LSL
	0x0326F874 ADD X0, X8, 0x138
	0x0326F878 LDP X8, X1, [X0]
	0x0326F87C MOV X0, X19
	0x0326F880 BLR X8
	0x0326F884 TBZ X0, 0x0, 0x326F90C
	0x0326F888 LDR X8, [X19]
	0x0326F88C LDR X1, [X24]
	0x0326F890 LDRH W9, [X8 + 0x12E]
	0x0326F894 CBZ X9, 0x326F8B8
	0x0326F898 LDR X10, [X8 + 0xB0]
	0x0326F89C ADD X10, X10, 0x8
	0x0326F8A0 LDUR X11, [X10 - 0x8]
	0x0326F8A4 CMP X11, X1
	0x0326F8A8 B.EQ 0x326F8C8
	0x0326F8AC SUBS X9, X9, 0x1
	0x0326F8B0 ADD X10, X10, 0x10
	0x0326F8B4 B.NE 0x326F8A0
	0x0326F8B8 MOV X0, X19
	0x0326F8BC MOV W2, W31
	0x0326F8C0 BL 0x1C5C788
	0x0326F8C4 B 0x326F8D4
	0x0326F8C8 LDRSW X9, [X10]
	0x0326F8CC ADD X8, X8, X9, 0x4, LSL
	0x0326F8D0 ADD X0, X8, 0x138
	0x0326F8D4 LDP X8, X1, [X0]
	0x0326F8D8 MOV X0, X19
	0x0326F8DC BLR X8
	0x0326F8E0 MOV X21, X0
	0x0326F8E4 CBZ X0, 0x326F82C
	0x0326F8E8 LDR X0, [X21 + 0x20]
	0x0326F8EC MOVZ W2, 0x5
	0x0326F8F0 MOV X1, X20
	0x0326F8F4 MOV X3, X31
	0x0326F8F8 BL 0x3226C60
	0x0326F8FC TBZ X0, 0x0, 0x326F82C
	0x0326F900 MOV X20, X31
	0x0326F904 CBNZ X19, 0x326F918
	0x0326F908 B 0x326F970
	0x0326F90C MOV X20, X31
	0x0326F910 MOV X21, X31
	0x0326F914 CBZ X19, 0x326F970
	0x0326F918 LDR X8, [X19]
	0x0326F91C LDR X1, [X22]
	0x0326F920 LDRH W9, [X8 + 0x12E]
	0x0326F924 CBZ X9, 0x326F948
	0x0326F928 LDR X10, [X8 + 0xB0]
	0x0326F92C ADD X10, X10, 0x8
	0x0326F930 LDUR X11, [X10 - 0x8]
	0x0326F934 CMP X11, X1
	0x0326F938 B.EQ 0x326F958
	0x0326F93C SUBS X9, X9, 0x1
	0x0326F940 ADD X10, X10, 0x10

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X27, 0x116E000
	013 Move X28, 0xEB5000
	014 Move X21, 0xEB5000
	015 Move X26, 0xEB5000
	016 Move X25, 0xEB5000
	017 Move X24, 0xEB5000
	018 Move X23, 0xEB5000
	019 Move X22, 0xEB5000
	020 Move X28, [X28+2864]
	021 Move X21, [X21+2872]
	022 Move W8, [X27+1446]
	023 Move X26, [X26+2880]
	024 Move X25, [X25+2888]
	025 Move X24, [X24+2896]
	026 Move X23, [X23+2904]
	027 Move X22, [X22+2936]
	028 Move X20, X1
	029 Move X19, X0
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {60}
	034 Move X0, 0xE85000
	035 Move X0, [X0+1560]
	036 Call 0x1C17CF4
	037 Move X0, 0xEB5000
	038 Move X0, [X0+2888]
	039 Call 0x1C17CF4
	040 Move X0, 0xEB5000
	041 Move X0, [X0+2880]
	042 Call 0x1C17CF4
	043 Move X0, 0xEB5000
	044 Move X0, [X0+2872]
	045 Call 0x1C17CF4
	046 Move X0, 0xEB5000
	047 Move X0, [X0+2864]
	048 Call 0x1C17CF4
	049 Move X0, 0xEB5000
	050 Move X0, [X0+2936]
	051 Call 0x1C17CF4
	052 Move X0, 0xEB5000
	053 Move X0, [X0+2904]
	054 Call 0x1C17CF4
	055 Move X0, 0xEB5000
	056 Move X0, [X0+2896]
	057 Call 0x1C17CF4
	058 Move W8, 1
	059 Move [X27+1446], W8
	060 Move X0, [X28]
	061 Call 0x1C17F10
	062 Move X1, [X21]
	063 Move X21, X0
	064 Call List`1<Object>..ctor, X0
	065 Move [X19+24], X21
	066 Move X0, [X26]
	067 Call 0x1C17F10
	068 Move X1, [X25]
	069 Move X21, X0
	070 Call 0x28FC8A8, X0
	071 Move X8, [X24]
	072 Move X0, X19
	073 Move X1, X31
	074 Move [X19+32], X21
	075 Move [X19+40], X8
	076 Move X9, [X23]
	077 Move X8, [X22]
	078 Move [X19+48], X9
	079 Move [X19+56], X8
	080 Call Object..ctor, X0
	081 Compare X20, 0
	082 JumpIfEqual {128}
	083 Move X0, [X20+64]
	084 Compare X0, 0
	085 JumpIfEqual {91}
	086 Move X8, [X0]
	087 Move X9, [X8+488]
	088 Move X1, [X8+496]
	089 NotImplemented "Instruction BLR not yet implemented."
	090 Move [X19+64], X0
	091 Move X8, [X20+72]
	092 Move [X19+72], X8
	093 Move X8, [X20+80]
	094 Move [X19+80], X8
	095 Move X8, [X20+88]
	096 Move [X19+88], X8
	097 NotImplemented "Instruction LDUR not yet implemented."
	098 Move [X19+40], V0
	099 Move X0, [X20+16]
	100 Compare X0, 0
	101 JumpIfEqual {113}
	102 Move X22, 0xE85000
	103 Move X22, [X22+1560]
	104 Move X1, X31
	105 Call Array.Clone, X0
	106 Move X1, [X22]
	107 Move X21, X0
	108 Call 0x1C17E00
	109 Move [X19+16], X0
	110 Move X1, [X22]
	111 Move X0, X21
	112 Call 0x1C17E00
	113 Move X1, [X20+24]
	114 Move X0, X19
	115 Move X20, [X31+80]
	116 Move X19, [X31+88]
	117 Move X22, [X31+64]
	118 Move X21, [X31+72]
	119 Move X24, [X31+48]
	120 Move X23, [X31+56]
	121 Move X26, [X31+32]
	122 Move X25, [X31+40]
	123 Move X28, [X31+16]
	124 Move X27, [X31+24]
	125 Move X30, [X31+96]
	126 Call ClaimsIdentity.SafeAddClaims, X0, X1
	127 Return 
	128 Move X0, 0xE8A000
	129 Move X0, [X0+1320]
	130 Call 0x1C17D08
	131 Call 0x1C17F10
	132 Move X19, X0
	133 Move X0, 0xEAF000
	134 Move X0, [X0+2344]
	135 Call 0x1C17D08
	136 Move X1, X0
	137 Move X0, X19
	138 Move X2, X31
	139 Call ArgumentNullException..ctor, X0, X1
	140 Move X0, 0xEB5000
	141 Move X0, [X0+2984]
	142 Call 0x1C17D08
	143 Move X1, X0
	144 Move X0, X19
	145 Call 0x1C17DEC

Method: System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x0326F944 B.NE 0x326F930
	0x0326F948 MOV X0, X19
	0x0326F94C MOV W2, W31
	0x0326F950 BL 0x1C5C788
	0x0326F954 B 0x326F964
	0x0326F958 LDRSW X9, [X10]
	0x0326F95C ADD X8, X8, X9, 0x4, LSL
	0x0326F960 ADD X0, X8, 0x138
	0x0326F964 LDP X8, X1, [X0]
	0x0326F968 MOV X0, X19
	0x0326F96C BLR X8
	0x0326F970 CBNZ X20, 0x326F9DC
	0x0326F974 MOV X0, X21
	0x0326F978 LDP X20, X19, [X31 + 0x30]
	0x0326F97C LDP X22, X21, [X31 + 0x20]
	0x0326F980 LDP X24, X23, [X31 + 0x10]
	0x0326F984 LDR X30, [X31], #0x40
	0x0326F988 RET
	0x0326F98C ADRP X0, 0xE89000
	0x0326F990 LDR X0, [X0 + 0x528]
	0x0326F994 BL 0x1C16D08
	0x0326F998 BL 0x1C16F10
	0x0326F99C MOV X19, X0
	0x0326F9A0 ADRP X0, 0xE8C000
	0x0326F9A4 LDR X0, [X0 + 0x5E8]
	0x0326F9A8 BL 0x1C16D08
	0x0326F9AC MOV X1, X0
	0x0326F9B0 MOV X0, X19
	0x0326F9B4 MOV X2, X31
	0x0326F9B8 BL 0x330E100
	0x0326F9BC ADRP X0, 0xEB4000
	0x0326F9C0 LDR X0, [X0 + 0xC28]
	0x0326F9C4 BL 0x1C16D08
	0x0326F9C8 MOV X1, X0
	0x0326F9CC MOV X0, X19
	0x0326F9D0 BL 0x1C16DEC
	0x0326F9D4 BL 0x1C16F20
	0x0326F9D8 BL 0x1C16F20
	0x0326F9DC MOV X0, X20
	0x0326F9E0 BL 0x1C16F18
	0x0326F9E4 B 0x326F9F0
	0x0326F9E8 B 0x326F9F0
	0x0326F9EC B 0x326F9F0
	0x0326F9F0 MOV X21, X0
	0x0326F9F4 CMP W1, 0x1
	0x0326F9F8 B.NE 0x326FA10
	0x0326F9FC MOV X0, X21
	0x0326FA00 BL 0x3EB1AD0
	0x0326FA04 LDR X20, [X0]
	0x0326FA08 BL 0x3EB1AE0
	0x0326FA0C B 0x326F910
	0x0326FA10 MOV X20, X31
	0x0326FA14 B 0x326FA1C
	0x0326FA18 MOV X21, X0
	0x0326FA1C CBZ X19, 0x326FA78
	0x0326FA20 LDR X8, [X19]
	0x0326FA24 LDR X1, [X22]
	0x0326FA28 LDRH W9, [X8 + 0x12E]
	0x0326FA2C CBZ X9, 0x326FA50
	0x0326FA30 LDR X10, [X8 + 0xB0]
	0x0326FA34 ADD X10, X10, 0x8
	0x0326FA38 LDUR X11, [X10 - 0x8]
	0x0326FA3C CMP X11, X1
	0x0326FA40 B.EQ 0x326FA60
	0x0326FA44 SUBS X9, X9, 0x1
	0x0326FA48 ADD X10, X10, 0x10
	0x0326FA4C B.NE 0x326FA38
	0x0326FA50 MOV X0, X19
	0x0326FA54 MOV W2, W31
	0x0326FA58 BL 0x1C5C788
	0x0326FA5C B 0x326FA6C
	0x0326FA60 LDRSW X9, [X10]
	0x0326FA64 ADD X8, X8, X9, 0x4, LSL
	0x0326FA68 ADD X0, X8, 0x138
	0x0326FA6C LDP X8, X1, [X0]
	0x0326FA70 MOV X0, X19
	0x0326FA74 BLR X8
	0x0326FA78 CBNZ X20, 0x326FA84
	0x0326FA7C MOV X0, X21
	0x0326FA80 BL 0x1D2C690
	0x0326FA84 MOV X0, X20
	0x0326FA88 BL 0x1C16F18
	0x0326FA8C BL 0x1990590
	0x0326FA90 STP X30, X21, [X31 - 0x20]!
	0x0326FA94 STP X20, X19, [X31 + 0x10]
	0x0326FA98 ADRP X20, 0x116D000
	0x0326FA9C ADRP X21, 0xEB4000
	0x0326FAA0 LDRB W8, [X20 + 0x5AE]
	0x0326FAA4 LDR X21, [X21 + 0xC30]
	0x0326FAA8 MOV X19, X0
	0x0326FAAC TBNZ X8, 0x0, 0x326FAC4
	0x0326FAB0 ADRP X0, 0xEB4000
	0x0326FAB4 LDR X0, [X0 + 0xC30]
	0x0326FAB8 BL 0x1C16CF4
	0x0326FABC MOVZ W8, 0x1
	0x0326FAC0 STRB W8, [X20 + 0x5AE]
	0x0326FAC4 LDR X1, [X21]
	0x0326FAC8 MOV X0, X19
	0x0326FACC BL 0x1C16E00
	0x0326FAD0 CBNZ X0, 0x326FAE8
	0x0326FAD4 MOV X0, X19

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X29, 0x116E000
	014 Move X24, 0xEB5000
	015 Move X23, 0xEB5000
	016 Move X28, 0xEB5000
	017 Move X27, 0xEB5000
	018 Move X26, 0xEB5000
	019 Move X25, 0xEB5000
	020 Move X24, [X24+2864]
	021 Move X23, [X23+2872]
	022 Move W8, [X29+1447]
	023 Move X28, [X28+2880]
	024 Move X27, [X27+2888]
	025 Move X26, [X26+2896]
	026 Move X25, [X25+2904]
	027 Move X19, X3
	028 Move X20, X2
	029 Move X21, X1
	030 Move X22, X0
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {58}
	035 Move X0, 0xEB5000
	036 Move X0, [X0+2888]
	037 Call 0x1C17CF4
	038 Move X0, 0xEB5000
	039 Move X0, [X0+2880]
	040 Call 0x1C17CF4
	041 Move X0, 0xEB5000
	042 Move X0, [X0+2872]
	043 Call 0x1C17CF4
	044 Move X0, 0xEB5000
	045 Move X0, [X0+2864]
	046 Call 0x1C17CF4
	047 Move X0, 0xEB5000
	048 Move X0, [X0+2936]
	049 Call 0x1C17CF4
	050 Move X0, 0xEB5000
	051 Move X0, [X0+2904]
	052 Call 0x1C17CF4
	053 Move X0, 0xEB5000
	054 Move X0, [X0+2896]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X29+1447], W8
	058 Move X0, [X24]
	059 Call 0x1C17F10
	060 Move X1, [X23]
	061 Move X23, X0
	062 Call List`1<Object>..ctor, X0
	063 Move [X22+24], X23
	064 Move X0, [X28]
	065 Call 0x1C17F10
	066 Move X1, [X27]
	067 Move X23, X0
	068 Call 0x28FC8A8, X0
	069 Move X8, [X26]
	070 Move X0, X22
	071 Move X1, X31
	072 Move [X22+32], X23
	073 Move [X22+40], X8
	074 Move X8, [X25]
	075 Move [X22+48], X8
	076 Move X8, 0xEB5000
	077 Move X8, [X8+2936]
	078 Move X8, [X8]
	079 Move [X22+56], X8
	080 Call Object..ctor, X0
	081 Compare X21, 0
	082 JumpIfEqual {100}
	083 Move X0, X22
	084 Move X1, X21
	085 Move X2, X20
	086 Move X3, X19
	087 Move X20, [X31+80]
	088 Move X19, [X31+88]
	089 Move X22, [X31+64]
	090 Move X21, [X31+72]
	091 Move X24, [X31+48]
	092 Move X23, [X31+56]
	093 Move X26, [X31+32]
	094 Move X25, [X31+40]
	095 Move X28, [X31+16]
	096 Move X27, [X31+24]
	097 Move W4, 1
	098 Move X29, [X31+96]
	099 Move X30, [X31+104]
	100 Move X0, 0xE8A000
	101 Move X0, [X0+1320]
	102 Call 0x1C17D08
	103 Call 0x1C17F10
	104 Move X19, X0
	105 Move X0, 0xEAF000
	106 Move X0, [X0+728]
	107 Call 0x1C17D08
	108 Move X1, X0
	109 Move X0, X19
	110 Move X2, X31
	111 Call ArgumentNullException..ctor, X0, X1
	112 Move X0, 0xEB5000
	113 Move X0, [X0+2992]
	114 Call 0x1C17D08
	115 Move X1, X0
	116 Move X0, X19
	117 Call 0x1C17DEC

Method: System.String get_AuthenticationType()

Disassembly:
	0x032702E0 MOVZ W8, 0x1
	0x032702E4 STRB W8, [X21 + 0x5B1]

ISIL:
	001 Move X0, [X0+72]
	002 Return X0

Method: System.Boolean get_IsAuthenticated()

Disassembly:
	0x032702E8 CBZ X19, 0x3270630
	0x032702EC ADRP X8, 0xEAF000
	0x032702F0 LDR X8, [X8 + 0xD0]
	0x032702F4 ADRP X24, 0xEB3000
	0x032702F8 ADRP X23, 0xEB3000
	0x032702FC ADRP X22, 0xEB3000
	0x03270300 LDR X0, [X8]
	0x03270304 LDR X24, [X24 + 0xBB8]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+72]
	003 Move X1, X31
	004 Call String.IsNullOrEmpty, X0
	005 NotImplemented "Instruction ORN not yet implemented."
	006 And W0, W8, 1
	007 Move X30, [X31+16]
	008 Return X0

Method: System.Security.Claims.ClaimsIdentity get_Actor()

Disassembly:
	0x03270308 LDR X23, [X23 + 0xBD0]
	0x0327030C LDR X22, [X22 + 0xBD8]

ISIL:
	001 Move X0, [X0+64]
	002 Return X0

Method: System.Void set_Actor(System.Security.Claims.ClaimsIdentity value)

Disassembly:
	0x03270310 BL 0x1C16F10
	0x03270314 MOV X1, X31
	0x03270318 MOV X21, X0
	0x0327031C BL 0x32B0928
	0x03270320 LDR X2, [X20 + 0x38]
	0x03270324 LDR X1, [X24]
	0x03270328 MOV X0, X19
	0x0327032C MOV X3, X31
	0x03270330 BL 0x32A8BF0
	0x03270334 LDR X0, [X20 + 0x48]
	0x03270338 MOV X1, X31
	0x0327033C BL 0x32277A8
	0x03270340 TBNZ X0, 0x0, 0x3270360
	0x03270344 ADRP X8, 0xEB3000
	0x03270348 LDR X2, [X20 + 0x48]
	0x0327034C LDR X8, [X8 + 0xBF0]
	0x03270350 MOV X0, X19
	0x03270354 MOV X3, X31
	0x03270358 LDR X1, [X8]
	0x0327035C BL 0x32A8BF0
	0x03270360 LDR X2, [X20 + 0x28]
	0x03270364 LDR X1, [X23]
	0x03270368 MOV X0, X19
	0x0327036C MOV X3, X31
	0x03270370 BL 0x32A8BF0
	0x03270374 LDR X2, [X20 + 0x30]
	0x03270378 LDR X1, [X22]
	0x0327037C MOV X0, X19
	0x03270380 MOV X3, X31
	0x03270384 BL 0x32A8BF0
	0x03270388 LDR X0, [X20 + 0x58]
	0x0327038C MOV X1, X31
	0x03270390 BL 0x32277A8
	0x03270394 TBNZ X0, 0x0, 0x32703B4
	0x03270398 ADRP X8, 0xEB3000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {14}
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X8, X1
	008 Move X8, [X8+64]
	009 Compare X8, 0
	010 JumpIfEqual {12}
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Compare X8, 0
	013 JumpIfNotEqual {19}
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move [X0+64], X1
	017 Move X30, [X31+32]
	018 Return 
	019 Move X0, 0xEB4000
	020 Move X0, [X0+2944]
	021 Call 0x1C17D08
	022 Move X1, X31
	023 Call Environment.GetResourceString, X0
	024 Move X19, X0
	025 Move X0, 0xE84000
	026 Move X0, [X0+1456]
	027 Call 0x1C17D08
	028 Call 0x1C17F10
	029 Move X1, X19
	030 Move X2, X31
	031 Move X20, X0
	032 Call InvalidOperationException..ctor, X0, X1
	033 Move X0, 0xEB4000
	034 Move X0, [X0+3072]
	035 Call 0x1C17D08
	036 Move X1, X0
	037 Move X0, X20
	038 Call 0x1C17DEC

Method: System.Collections.Generic.IEnumerable`1<System.Security.Claims.Claim> get_Claims()

Disassembly:
	0x0327039C LDR X2, [X20 + 0x58]
	0x032703A0 LDR X8, [X8 + 0xBE8]
	0x032703A4 MOV X0, X19
	0x032703A8 MOV X3, X31
	0x032703AC LDR X1, [X8]
	0x032703B0 BL 0x32A8BF0
	0x032703B4 ADRP X27, 0xE8B000
	0x032703B8 ADRP X26, 0xE8C000
	0x032703BC ADRP X25, 0xE83000
	0x032703C0 LDR X8, [X20 + 0x40]
	0x032703C4 LDR X27, [X27 + 0x558]
	0x032703C8 LDR X26, [X26 + 0x9E8]
	0x032703CC LDR X25, [X25 + 0xE00]
	0x032703D0 CBZ X8, 0x32704E8
	0x032703D4 LDR X0, [X27]
	0x032703D8 BL 0x1C16F10
	0x032703DC MOV X1, X31
	0x032703E0 MOV X22, X0
	0x032703E4 BL 0x32E23B4
	0x032703E8 CBZ X21, 0x3270678
	0x032703EC LDR X2, [X20 + 0x40]
	0x032703F0 MOV X0, X21
	0x032703F4 MOV X1, X22
	0x032703F8 MOV X3, X31
	0x032703FC MOV W4, W31
	0x03270400 MOV X5, X31
	0x03270404 BL 0x32B1108
	0x03270408 CBZ X22, 0x3270684

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x116D000
	006 Move X21, 0xEB4000
	007 Move W8, [X20+1448]
	008 Move X21, [X21+3080]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xEB4000
	015 Move X0, [X0+3080]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1448], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call Object..ctor, X0
	024 Move TEMP, 1
	025 Not TEMP
	026 Move W8, TEMP
	027 Move X0, X31
	028 Move [X20+16], W8
	029 Call Environment.get_CurrentManagedThreadId
	030 Move [X20+32], W0
	031 Move [X20+40], X19
	032 Move X0, X20
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Return X0

Method: System.String get_Name()

Disassembly:
	0x03270440 CBNZ W8, 0x3270448
	0x03270444 BL 0x1C16DFC
	0x03270448 MOV X0, X23
	0x0327044C MOV W1, W31
	0x03270450 MOV W2, W24
	0x03270454 MOV X3, X31
	0x03270458 BL 0x3322804
	0x0327045C ADRP X8, 0xEB3000
	0x03270460 LDR X8, [X8 + 0xBE0]
	0x03270464 MOV X2, X0

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Move X1, [X0+40]
	004 Move X9, [X8+520]
	005 Move X2, [X8+528]
	006 NotImplemented "Instruction BLR not yet implemented."
	007 Compare X0, 0
	008 JumpIfEqual {10}
	009 Move X0, [X0+40]
	010 Move X30, [X31+16]
	011 Return X0

Method: System.String get_NameClaimType()

Disassembly:
	0x03270468 LDR X1, [X8]
	0x0327046C MOV X0, X19

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Security.Claims.ClaimsIdentity Clone()

Disassembly:
	0x03270470 MOV X3, X31
	0x03270474 BL 0x32A8BF0
	0x03270478 MOV X23, X31
	0x0327047C MOVZ W24, 0x7
	0x03270480 LDR X8, [X22]
	0x03270484 LDR X1, [X25]
	0x03270488 LDRH W9, [X8 + 0x12E]
	0x0327048C CBZ X9, 0x32704B0
	0x03270490 LDR X10, [X8 + 0xB0]
	0x03270494 ADD X10, X10, 0x8
	0x03270498 LDUR X11, [X10 - 0x8]
	0x0327049C CMP X11, X1
	0x032704A0 B.EQ 0x32704C0
	0x032704A4 SUBS X9, X9, 0x1
	0x032704A8 ADD X10, X10, 0x10
	0x032704AC B.NE 0x3270498
	0x032704B0 MOV X0, X22
	0x032704B4 MOV W2, W31
	0x032704B8 BL 0x1C5C788
	0x032704BC B 0x32704CC
	0x032704C0 LDRSW X9, [X10]
	0x032704C4 ADD X8, X8, X9, 0x4, LSL
	0x032704C8 ADD X0, X8, 0x138
	0x032704CC LDP X8, X1, [X0]
	0x032704D0 MOV X0, X22
	0x032704D4 BLR X8
	0x032704D8 CBNZ X23, 0x327067C
	0x032704DC CMP W24, 0x7
	0x032704E0 B.EQ 0x32704E8
	0x032704E4 CBNZ W24, 0x3270618
	0x032704E8 ADRP X22, 0xEB3000
	0x032704EC LDR X22, [X22 + 0xBC0]
	0x032704F0 MOV X0, X20
	0x032704F4 BL 0x326FAF4
	0x032704F8 LDR X1, [X22]
	0x032704FC MOV X2, X0
	0x03270500 MOV X0, X19
	0x03270504 MOV X3, X31
	0x03270508 BL 0x32A8BF0
	0x0327050C LDR X8, [X20 + 0x50]
	0x03270510 CBZ X8, 0x3270618
	0x03270514 LDR X0, [X27]
	0x03270518 BL 0x1C16F10
	0x0327051C MOV X1, X31
	0x03270520 MOV X22, X0
	0x03270524 BL 0x32E23B4
	0x03270528 CBZ X21, 0x3270688
	0x0327052C LDR X2, [X20 + 0x50]
	0x03270530 MOV X0, X21
	0x03270534 MOV X1, X22
	0x03270538 MOV X3, X31
	0x0327053C MOV W4, W31
	0x03270540 MOV X5, X31
	0x03270544 BL 0x32B1108
	0x03270548 CBZ X22, 0x3270694
	0x0327054C LDR X8, [X22]
	0x03270550 LDR X1, [X8 + 0x3C0]
	0x03270554 LDR X9, [X8 + 0x3B8]
	0x03270558 MOV X0, X22
	0x0327055C BLR X9
	0x03270560 LDR X8, [X22]
	0x03270564 MOV X20, X0
	0x03270568 LDP X9, X1, [X8 + 0x1E8]
	0x0327056C MOV X0, X22
	0x03270570 BLR X9
	0x03270574 MOV X21, X0
	0x03270578 LDR X0, [X26]
	0x0327057C LDR W8, [X0 + 0xE0]
	0x03270580 CBNZ W8, 0x3270588
	0x03270584 BL 0x1C16DFC
	0x03270588 MOV X0, X20
	0x0327058C MOV W1, W31
	0x03270590 MOV W2, W21
	0x03270594 MOV X3, X31
	0x03270598 BL 0x3322804
	0x0327059C ADRP X8, 0xEB3000
	0x032705A0 LDR X8, [X8 + 0xBC8]
	0x032705A4 MOV X2, X0
	0x032705A8 LDR X1, [X8]
	0x032705AC MOV X0, X19
	0x032705B0 MOV X3, X31
	0x032705B4 BL 0x32A8BF0
	0x032705B8 MOV X19, X31
	0x032705BC LDR X8, [X22]
	0x032705C0 LDR X1, [X25]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x116D000
	006 Move X19, 0xEB4000
	007 Move W8, [X21+1449]
	008 Move X19, [X19+2920]
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xEB4000
	015 Move X0, [X0+2912]
	016 Call 0x1C17CF4
	017 Move X0, 0xEB4000
	018 Move X0, [X0+2920]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1449], W8
	022 Move X0, [X19]
	023 Move X21, [X20+24]
	024 Call 0x1C17F10
	025 Move W6, 1
	026 Move X1, X31
	027 Move X2, X21
	028 Move X3, X31
	029 Move X4, X31
	030 Move X5, X31
	031 Move X19, X0
	032 Call ClaimsIdentity..ctor, X0, X1, X2, X3, X4, X5, X6
	033 Compare X19, 0
	034 JumpIfEqual {96}
	035 Move X8, [X20+72]
	036 Move [X19+72], X8
	037 Move X8, [X20+80]
	038 Move [X19+80], X8
	039 Move X8, [X20+88]
	040 Move [X19+88], X8
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 Move [X19+40], V0
	043 Move X1, [X20+64]
	044 Compare X1, 0
	045 JumpIfEqual {70}
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X8, 0xEB4000
	048 Move X8, [X8+2912]
	049 Move X9, X1
	050 Move X9, [X9+64]
	051 Compare X9, 0
	052 JumpIfEqual {54}
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Compare X9, 0
	055 JumpIfNotEqual {76}
	056 Move X8, [X8]
	057 Move X8, [X8+184]
	058 Move W8, [X8]
	059 Compare W8, 0
	060 JumpIfNotEqual {68}
	061 Move X8, [X1]
	062 Move X0, X1
	063 Move X9, [X8+488]
	064 Move X8, [X8+496]
	065 Move X1, X8
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Move X1, X0
	068 Move X0, X19
	069 Call ClaimsIdentity.set_Actor, X0, X1
	070 Move X0, X19
	071 Move X20, [X31+16]
	072 Move X19, [X31+24]
	073 Move X30, [X31+32]
	074 Move X21, [X31+40]
	075 Return X0
	076 Move X0, 0xEB4000
	077 Move X0, [X0+2944]
	078 Call 0x1C17D08
	079 Move X1, X31
	080 Call Environment.GetResourceString, X0
	081 Move X19, X0
	082 Move X0, 0xE84000
	083 Move X0, [X0+1456]
	084 Call 0x1C17D08
	085 Call 0x1C17F10
	086 Move X1, X19
	087 Move X2, X31
	088 Move X20, X0
	089 Call InvalidOperationException..ctor, X0, X1
	090 Move X0, 0xEB4000
	091 Move X0, [X0+3088]
	092 Call 0x1C17D08
	093 Move X1, X0
	094 Move X0, X20
	095 Call 0x1C17DEC
	096 Call 0x1C17F20

Method: System.Void AddClaim(System.Security.Claims.Claim claim)

Disassembly:
	0x032705C4 LDRH W9, [X8 + 0x12E]
	0x032705C8 CBZ X9, 0x32705EC
	0x032705CC LDR X10, [X8 + 0xB0]
	0x032705D0 ADD X10, X10, 0x8
	0x032705D4 LDUR X11, [X10 - 0x8]
	0x032705D8 CMP X11, X1
	0x032705DC B.EQ 0x32705FC
	0x032705E0 SUBS X9, X9, 0x1
	0x032705E4 ADD X10, X10, 0x10
	0x032705E8 B.NE 0x32705D4
	0x032705EC MOV X0, X22
	0x032705F0 MOV W2, W31
	0x032705F4 BL 0x1C5C788
	0x032705F8 B 0x3270608
	0x032705FC LDRSW X9, [X10]
	0x03270600 ADD X8, X8, X9, 0x4, LSL
	0x03270604 ADD X0, X8, 0x138
	0x03270608 LDP X8, X1, [X0]
	0x0327060C MOV X0, X22
	0x03270610 BLR X8
	0x03270614 CBNZ X19, 0x327068C
	0x03270618 LDP X20, X19, [X31 + 0x40]
	0x0327061C LDP X22, X21, [X31 + 0x30]
	0x03270620 LDP X24, X23, [X31 + 0x20]
	0x03270624 LDP X26, X25, [X31 + 0x10]
	0x03270628 LDP X30, X27, [X31], #0x50
	0x0327062C RET
	0x03270630 ADRP X0, 0xE88000
	0x03270634 LDR X0, [X0 + 0x528]
	0x03270638 BL 0x1C16D08
	0x0327063C BL 0x1C16F10
	0x03270640 MOV X19, X0
	0x03270644 ADRP X0, 0xEAD000
	0x03270648 LDR X0, [X0 + 0x2D8]
	0x0327064C BL 0x1C16D08
	0x03270650 MOV X1, X0
	0x03270654 MOV X0, X19
	0x03270658 MOV X2, X31
	0x0327065C BL 0x330E100
	0x03270660 ADRP X0, 0xEB3000
	0x03270664 LDR X0, [X0 + 0xC48]
	0x03270668 BL 0x1C16D08
	0x0327066C MOV X1, X0
	0x03270670 MOV X0, X19
	0x03270674 BL 0x1C16DEC
	0x03270678 BL 0x1C16F20
	0x0327067C MOV X0, X23
	0x03270680 BL 0x1C16F18
	0x03270684 BL 0x1C16F20
	0x03270688 BL 0x1C16F20
	0x0327068C MOV X0, X19
	0x03270690 BL 0x1C16F18
	0x03270694 BL 0x1C16F20
	0x03270698 B 0x32706B4
	0x0327069C B 0x32706B4
	0x032706A0 B 0x3270750
	0x032706A4 B 0x3270750
	0x032706A8 B 0x32706B4
	0x032706AC B 0x3270750
	0x032706B0 B 0x32706B4
	0x032706B4 MOV X24, X0
	0x032706B8 CMP W1, 0x1
	0x032706BC B.NE 0x32706D8
	0x032706C0 MOV X0, X24
	0x032706C4 BL 0x3EB1AD0
	0x032706C8 LDR X19, [X0]
	0x032706CC BL 0x3EB1AE0
	0x032706D0 CBNZ X22, 0x32705BC
	0x032706D4 B 0x3270614
	0x032706D8 MOV X19, X31
	0x032706DC B 0x32706E4
	0x032706E0 MOV X24, X0
	0x032706E4 CBZ X22, 0x3270740
	0x032706E8 LDR X8, [X22]
	0x032706EC LDR X1, [X25]
	0x032706F0 LDRH W9, [X8 + 0x12E]
	0x032706F4 CBZ X9, 0x3270718
	0x032706F8 LDR X10, [X8 + 0xB0]
	0x032706FC ADD X10, X10, 0x8
	0x03270700 LDUR X11, [X10 - 0x8]
	0x03270704 CMP X11, X1
	0x03270708 B.EQ 0x3270728
	0x0327070C SUBS X9, X9, 0x1
	0x03270710 ADD X10, X10, 0x10
	0x03270714 B.NE 0x3270700
	0x03270718 MOV X0, X22
	0x0327071C MOV W2, W31
	0x03270720 BL 0x1C5C788
	0x03270724 B 0x3270734
	0x03270728 LDRSW X9, [X10]
	0x0327072C ADD X8, X8, X9, 0x4, LSL
	0x03270730 ADD X0, X8, 0x138

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x116D000
	007 Move W8, [X19+1450]
	008 Move X20, X1
	009 Move X21, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xEB4000
	015 Move X0, [X0+2976]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X19+1450], W8
	019 Compare X20, 0
	020 JumpIfEqual {86}
	021 Move X8, [X20+80]
	022 Move X22, 0xEB4000
	023 Move X19, [X21+24]
	024 Move X22, [X22+2976]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X8, [X20]
	027 Move X0, X20
	028 Move X1, X21
	029 Move X9, [X8+376]
	030 Move X2, [X8+384]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Compare X19, 0
	033 JumpIfEqual {85}
	034 Move W10, [X19+28]
	035 Move X8, [X19+16]
	036 Move X9, [X22]
	037 Add W10, W10, 1
	038 Move [X19+28], W10
	039 Compare X8, 0
	040 JumpIfEqual {85}
	041 NotImplemented "Instruction LDRSW not yet implemented."
	042 Move W11, [X8+24]
	043 Move X1, X0
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Add W9, W10, 1
	046 Add X8, X8, X10
	047 Move [X19+24], W9
	048 Move [X8+32], X1
	049 Compare X19, 0
	050 JumpIfEqual {85}
	051 Move W10, [X19+28]
	052 Move X8, [X19+16]
	053 Move X9, [X22]
	054 Add W10, W10, 1
	055 Move [X19+28], W10
	056 Compare X8, 0
	057 JumpIfEqual {85}
	058 NotImplemented "Instruction LDRSW not yet implemented."
	059 Move W11, [X8+24]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Add W9, W10, 1
	062 Add X8, X8, X10
	063 Move [X19+24], W9
	064 Move [X8+32], X20
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X22, [X31+16]
	068 Move X21, [X31+24]
	069 Move X30, [X31+48]
	070 Return 
	071 Move X8, [X9+32]
	072 Move X0, X19
	073 Move X8, [X9+32]
	074 Move X0, X19
	075 Move X1, X20
	076 Move X8, [X8+192]
	077 Move X2, [X8+112]
	078 Move X20, [X31+32]
	079 Move X19, [X31+40]
	080 Move X22, [X31+16]
	081 Move X21, [X31+24]
	082 Move X30, [X31+48]
	083 Call List`1<Object>.AddWithResize, X0, X1
	084 Return 
	085 Call 0x1C17F20
	086 Move X0, 0xE89000
	087 Move X0, [X0+1320]
	088 Call 0x1C17D08
	089 Call 0x1C17F10
	090 Move X19, X0
	091 Move X0, 0xEB4000
	092 Move X0, [X0+3096]
	093 Call 0x1C17D08
	094 Move X1, X0
	095 Move X0, X19
	096 Move X2, X31
	097 Call ArgumentNullException..ctor, X0, X1
	098 Move X0, 0xEB4000
	099 Move X0, [X0+3104]
	100 Call 0x1C17D08
	101 Move X1, X0
	102 Move X0, X19
	103 Call 0x1C17DEC

Method: System.Void SafeAddClaims(System.Collections.Generic.IEnumerable`1<System.Security.Claims.Claim> claims)

Disassembly:
	0x0326F240 ADD X8, X8, X9, 0x4, LSL
	0x0326F244 ADD X0, X8, 0x138
	0x0326F248 LDP X8, X1, [X0]
	0x0326F24C MOV X0, X23
	0x0326F250 BLR X8
	0x0326F254 CBZ X24, 0x326F2CC
	0x0326F258 MOV X0, X24
	0x0326F25C BL 0x1C16F18
	0x0326F260 MOV X29, X0
	0x0326F264 CBZ X23, 0x326F2C8
	0x0326F268 LDR X8, [X23]
	0x0326F26C ADRP X10, 0xE84000
	0x0326F270 LDRH W9, [X8 + 0x12E]
	0x0326F274 LDR X10, [X10 + 0xE00]
	0x0326F278 LDR X1, [X10]
	0x0326F27C CBZ X9, 0x326F2A0
	0x0326F280 LDR X10, [X8 + 0xB0]
	0x0326F284 ADD X10, X10, 0x8
	0x0326F288 LDUR X11, [X10 - 0x8]
	0x0326F28C CMP X11, X1
	0x0326F290 B.EQ 0x326F2B0
	0x0326F294 SUBS X9, X9, 0x1
	0x0326F298 ADD X10, X10, 0x10
	0x0326F29C B.NE 0x326F288
	0x0326F2A0 MOV X0, X23
	0x0326F2A4 MOV W2, W31
	0x0326F2A8 BL 0x1C5C788
	0x0326F2AC B 0x326F2BC
	0x0326F2B0 LDRSW X9, [X10]
	0x0326F2B4 ADD X8, X8, X9, 0x4, LSL
	0x0326F2B8 ADD X0, X8, 0x138
	0x0326F2BC LDP X8, X1, [X0]
	0x0326F2C0 MOV X0, X23
	0x0326F2C4 BLR X8
	0x0326F2C8 CBNZ X24, 0x326F2D4
	0x0326F2CC MOV X0, X29
	0x0326F2D0 BL 0x1D2C690
	0x0326F2D4 MOV X0, X24
	0x0326F2D8 BL 0x1C16F18
	0x0326F2DC BL 0x1990590
	0x0326F2E0 LDR X0, [X0 + 0x48]
	0x0326F2E4 RET
	0x0326F2E8 STR X30, [X31 - 0x10]!
	0x0326F2EC LDR X0, [X0 + 0x48]
	0x0326F2F0 MOV X1, X31
	0x0326F2F4 BL 0x32277A8
	0x0326F2F8 ORN W8, W31, W0, 0x0
	0x0326F2FC AND W0, W8, 0x1
	0x0326F300 LDR X30, [X31], #0x10
	0x0326F304 RET
	0x0326F308 LDR X0, [X0 + 0x40]
	0x0326F30C RET
	0x0326F310 STR X30, [X31 - 0x20]!
	0x0326F314 STP X20, X19, [X31 + 0x10]
	0x0326F318 CBZ X1, 0x326F33C
	0x0326F31C CMP X0, X1
	0x0326F320 B.EQ 0x326F34C
	0x0326F324 MOV X8, X1
	0x0326F328 LDR X8, [X8 + 0x40]
	0x0326F32C CBZ X8, 0x326F338
	0x0326F330 CMP X8, X0
	0x0326F334 B.NE 0x326F328
	0x0326F338 CBNZ X8, 0x326F34C
	0x0326F33C LDP X20, X19, [X31 + 0x10]
	0x0326F340 STR X1, [X0 + 0x40]
	0x0326F344 LDR X30, [X31], #0x20
	0x0326F348 RET
	0x0326F34C ADRP X0, 0xEB4000
	0x0326F350 LDR X0, [X0 + 0xB80]
	0x0326F354 BL 0x1C16D08
	0x0326F358 MOV X1, X31
	0x0326F35C BL 0x33BDD84
	0x0326F360 MOV X19, X0
	0x0326F364 ADRP X0, 0xE84000
	0x0326F368 LDR X0, [X0 + 0x5B0]
	0x0326F36C BL 0x1C16D08
	0x0326F370 BL 0x1C16F10
	0x0326F374 MOV X1, X19
	0x0326F378 MOV X2, X31
	0x0326F37C MOV X20, X0
	0x0326F380 BL 0x337DF1C
	0x0326F384 ADRP X0, 0xEB4000
	0x0326F388 LDR X0, [X0 + 0xC00]
	0x0326F38C BL 0x1C16D08
	0x0326F390 MOV X1, X0
	0x0326F394 MOV X0, X20
	0x0326F398 BL 0x1C16DEC
	0x0326F39C STP X30, X21, [X31 - 0x20]!
	0x0326F3A0 STP X20, X19, [X31 + 0x10]
	0x0326F3A4 ADRP X20, 0x116D000
	0x0326F3A8 ADRP X21, 0xEB4000
	0x0326F3AC LDRB W8, [X20 + 0x5A8]
	0x0326F3B0 LDR X21, [X21 + 0xC08]
	0x0326F3B4 MOV X19, X0
	0x0326F3B8 TBNZ X8, 0x0, 0x326F3D0
	0x0326F3BC ADRP X0, 0xEB4000
	0x0326F3C0 LDR X0, [X0 + 0xC08]
	0x0326F3C4 BL 0x1C16CF4
	0x0326F3C8 MOVZ W8, 0x1
	0x0326F3CC STRB W8, [X20 + 0x5A8]
	0x0326F3D0 LDR X0, [X21]
	0x0326F3D4 BL 0x1C16F10
	0x0326F3D8 MOV X1, X31
	0x0326F3DC MOV X20, X0
	0x0326F3E0 BL 0x33BDD8C
	0x0326F3E4 MOVN W8, 0x1
	0x0326F3E8 MOV X0, X31
	0x0326F3EC STR W8, [X20 + 0x10]
	0x0326F3F0 BL 0x33C151C
	0x0326F3F4 STR W0, [X20 + 0x20]
	0x0326F3F8 STR X19, [X20 + 0x28]
	0x0326F3FC MOV X0, X20
	0x0326F400 LDP X20, X19, [X31 + 0x10]
	0x0326F404 LDP X30, X21, [X31], #0x20
	0x0326F408 RET
	0x0326F40C STR X30, [X31 - 0x20]!
	0x0326F410 STP X20, X19, [X31 + 0x10]
	0x0326F414 MOV W19, W1
	0x0326F418 MOV X1, X31
	0x0326F41C MOV X20, X0
	0x0326F420 BL 0x33BDD8C
	0x0326F424 MOV X0, X31
	0x0326F428 STR W19, [X20 + 0x10]
	0x0326F42C BL 0x33C151C
	0x0326F430 STR W0, [X20 + 0x20]
	0x0326F434 LDP X20, X19, [X31 + 0x10]
	0x0326F438 LDR X30, [X31], #0x20
	0x0326F43C RET
	0x0326F440 STR X30, [X31 - 0x10]!
	0x0326F444 LDR X8, [X0]
	0x0326F448 LDR X1, [X0 + 0x28]
	0x0326F44C LDR X9, [X8 + 0x208]
	0x0326F450 LDR X2, [X8 + 0x210]
	0x0326F454 BLR X9
	0x0326F458 CBZ X0, 0x326F460
	0x0326F45C LDR X0, [X0 + 0x28]
	0x0326F460 LDR X30, [X31], #0x10
	0x0326F464 RET
	0x0326F468 LDR X0, [X0 + 0x28]
	0x0326F46C RET
	0x0326F470 STP X30, X21, [X31 - 0x20]!
	0x0326F474 STP X20, X19, [X31 + 0x10]
	0x0326F478 ADRP X21, 0x116D000
	0x0326F47C ADRP X19, 0xEB4000
	0x0326F480 LDRB W8, [X21 + 0x5A9]
	0x0326F484 LDR X19, [X19 + 0xB68]
	0x0326F488 MOV X20, X0
	0x0326F48C TBNZ X8, 0x0, 0x326F4B0
	0x0326F490 ADRP X0, 0xEB4000
	0x0326F494 LDR X0, [X0 + 0xB60]
	0x0326F498 BL 0x1C16CF4
	0x0326F49C ADRP X0, 0xEB4000
	0x0326F4A0 LDR X0, [X0 + 0xB68]
	0x0326F4A4 BL 0x1C16CF4
	0x0326F4A8 MOVZ W8, 0x1
	0x0326F4AC STRB W8, [X21 + 0x5A9]
	0x0326F4B0 LDR X0, [X19]
	0x0326F4B4 LDR X21, [X20 + 0x18]
	0x0326F4B8 BL 0x1C16F10
	0x0326F4BC MOVZ W6, 0x1
	0x0326F4C0 MOV X1, X31
	0x0326F4C4 MOV X2, X21
	0x0326F4C8 MOV X3, X31
	0x0326F4CC MOV X4, X31
	0x0326F4D0 MOV X5, X31
	0x0326F4D4 MOV X19, X0
	0x0326F4D8 BL 0x326DBBC
	0x0326F4DC CBZ X19, 0x326F5C0
	0x0326F4E0 LDR X8, [X20 + 0x48]
	0x0326F4E4 STR X8, [X19 + 0x48]
	0x0326F4E8 LDR X8, [X20 + 0x50]
	0x0326F4EC STR X8, [X19 + 0x50]
	0x0326F4F0 LDR X8, [X20 + 0x58]
	0x0326F4F4 STR X8, [X19 + 0x58]
	0x0326F4F8 LDUR V0, [X20 + 0x28]
	0x0326F4FC STUR V0, [X19 + 0x28]
	0x0326F500 LDR X1, [X20 + 0x40]
	0x0326F504 CBZ X1, 0x326F560
	0x0326F508 CMP X1, X20
	0x0326F50C B.EQ 0x326F570
	0x0326F510 ADRP X8, 0xEB4000
	0x0326F514 LDR X8, [X8 + 0xB60]
	0x0326F518 MOV X9, X1
	0x0326F51C LDR X9, [X9 + 0x40]
	0x0326F520 CBZ X9, 0x326F52C
	0x0326F524 CMP X9, X20
	0x0326F528 B.NE 0x326F51C
	0x0326F52C CBNZ X9, 0x326F570
	0x0326F530 LDR X8, [X8]
	0x0326F534 LDR X8, [X8 + 0xB8]
	0x0326F538 LDRB W8, [X8]
	0x0326F53C CBNZ W8, 0x326F558
	0x0326F540 LDR X8, [X1]
	0x0326F544 MOV X0, X1
	0x0326F548 LDP X9, X8, [X8 + 0x1E8]
	0x0326F54C MOV X1, X8
	0x0326F550 BLR X9
	0x0326F554 MOV X1, X0
	0x0326F558 MOV X0, X19
	0x0326F55C BL 0x326F310
	0x0326F560 MOV X0, X19
	0x0326F564 LDP X20, X19, [X31 + 0x10]
	0x0326F568 LDP X30, X21, [X31], #0x20
	0x0326F56C RET
	0x0326F570 ADRP X0, 0xEB4000
	0x0326F574 LDR X0, [X0 + 0xB80]
	0x0326F578 BL 0x1C16D08
	0x0326F57C MOV X1, X31
	0x0326F580 BL 0x33BDD84
	0x0326F584 MOV X19, X0
	0x0326F588 ADRP X0, 0xE84000
	0x0326F58C LDR X0, [X0 + 0x5B0]
	0x0326F590 BL 0x1C16D08
	0x0326F594 BL 0x1C16F10
	0x0326F598 MOV X1, X19
	0x0326F59C MOV X2, X31
	0x0326F5A0 MOV X20, X0
	0x0326F5A4 BL 0x337DF1C
	0x0326F5A8 ADRP X0, 0xEB4000
	0x0326F5AC LDR X0, [X0 + 0xC10]
	0x0326F5B0 BL 0x1C16D08
	0x0326F5B4 MOV X1, X0
	0x0326F5B8 MOV X0, X20
	0x0326F5BC BL 0x1C16DEC
	0x0326F5C0 BL 0x1C16F20
	0x0326F5C4 STR X30, [X31 - 0x30]!
	0x0326F5C8 STP X22, X21, [X31 + 0x10]
	0x0326F5CC STP X20, X19, [X31 + 0x20]
	0x0326F5D0 ADRP X19, 0x116D000
	0x0326F5D4 LDRB W8, [X19 + 0x5AA]
	0x0326F5D8 MOV X20, X1
	0x0326F5DC MOV X21, X0
	0x0326F5E0 TBNZ X8, 0x0, 0x326F5F8
	0x0326F5E4 ADRP X0, 0xEB4000
	0x0326F5E8 LDR X0, [X0 + 0xBA0]
	0x0326F5EC BL 0x1C16CF4
	0x0326F5F0 MOVZ W8, 0x1
	0x0326F5F4 STRB W8, [X19 + 0x5AA]
	0x0326F5F8 CBZ X20, 0x326F6EC
	0x0326F5FC LDR X8, [X20 + 0x50]
	0x0326F600 ADRP X22, 0xEB4000
	0x0326F604 LDR X19, [X21 + 0x18]
	0x0326F608 LDR X22, [X22 + 0xBA0]
	0x0326F60C CMP X8, X21
	0x0326F610 B.EQ 0x326F66C
	0x0326F614 LDR X8, [X20]
	0x0326F618 MOV X0, X20
	0x0326F61C MOV X1, X21
	0x0326F620 LDP X9, X2, [X8 + 0x178]
	0x0326F624 BLR X9

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x116E000
	011 Move W8, [X21+1451]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {35}
	018 Move X0, 0xE85000
	019 Move X0, [X0+3584]
	020 Call 0x1C17CF4
	021 Move X0, 0xEB5000
	022 Move X0, [X0+2960]
	023 Call 0x1C17CF4
	024 Move X0, 0xEB5000
	025 Move X0, [X0+2968]
	026 Call 0x1C17CF4
	027 Move X0, 0xE85000
	028 Move X0, [X0+3608]
	029 Call 0x1C17CF4
	030 Move X0, 0xEB5000
	031 Move X0, [X0+2976]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X21+1451], W8
	035 Compare X19, 0
	036 JumpIfEqual {214}
	037 Move X10, 0xEB5000
	038 Move X8, [X19]
	039 Move X10, [X10+2960]
	040 NotImplemented "Instruction LDRH not yet implemented."
	041 Move X1, [X10]
	042 Compare X9, 0
	043 JumpIfEqual {50}
	044 Move X10, [X8+176]
	045 Add X10, X10, 8
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Subtract X9, X9, 1
	049 Add X10, X10, 16
	050 Move X0, X19
	051 Move W2, W31
	052 Call 0x1C5D788
	053 NotImplemented "Instruction LDRSW not yet implemented."
	054 Add X8, X8, X9
	055 Add X0, X8, 312
	056 Move X8, [X0]
	057 Move X1, [X0+8]
	058 Move X22, 0xE85000
	059 Move X22, [X22+3584]
	060 Move X0, X19
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Move X19, X0
	063 Compare X0, 0
	064 JumpIfEqual {215}
	065 Move X23, 0xE85000
	066 Move X24, 0xEB5000
	067 Move X25, 0xEB5000
	068 Move X23, [X23+3608]
	069 Move X24, [X24+2968]
	070 Move X25, [X25+2976]
	071 Move X8, [X19]
	072 Move X1, [X23]
	073 NotImplemented "Instruction LDRH not yet implemented."
	074 Compare X9, 0
	075 JumpIfEqual {82}
	076 Move X10, [X8+176]
	077 Add X10, X10, 8
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Subtract X9, X9, 1
	081 Add X10, X10, 16
	082 Move X0, X19
	083 Move W2, W31
	084 Call 0x1C5D788
	085 NotImplemented "Instruction LDRSW not yet implemented."
	086 Add X8, X8, X9
	087 Add X0, X8, 312
	088 Move X8, [X0]
	089 Move X1, [X0+8]
	090 Move X0, X19
	091 NotImplemented "Instruction BLR not yet implemented."
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfNotEqual {173}
	096 Move X8, [X19]
	097 Move X1, [X24]
	098 NotImplemented "Instruction LDRH not yet implemented."
	099 Compare X9, 0
	100 JumpIfEqual {107}
	101 Move X10, [X8+176]
	102 Add X10, X10, 8
	103 NotImplemented "Instruction LDUR not yet implemented."
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Subtract X9, X9, 1
	106 Add X10, X10, 16
	107 Move X0, X19
	108 Move W2, W31
	109 Call 0x1C5D788
	110 NotImplemented "Instruction LDRSW not yet implemented."
	111 Add X8, X8, X9
	112 Add X0, X8, 312
	113 Move X8, [X0]
	114 Move X1, [X0+8]
	115 Move X0, X19
	116 NotImplemented "Instruction BLR not yet implemented."
	117 Move X8, X0
	118 Compare X0, 0
	119 JumpIfEqual {209}
	120 Move X9, [X8+80]
	121 Move X21, [X20+24]
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move X9, [X8]
	124 Move X10, [X9+376]
	125 Move X2, [X9+384]
	126 Move X0, X8
	127 Move X1, X20
	128 NotImplemented "Instruction BLR not yet implemented."
	129 Move X1, X0
	130 Compare X21, 0
	131 JumpIfEqual {210}
	132 Move W10, [X21+28]
	133 Move X8, [X21+16]
	134 Move X9, [X25]
	135 Add W10, W10, 1
	136 Move [X21+28], W10
	137 Compare X8, 0
	138 JumpIfEqual {211}
	139 NotImplemented "Instruction LDRSW not yet implemented."
	140 Move W11, [X8+24]
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Add W9, W10, 1
	143 Add X8, X8, X10
	144 Move [X21+24], W9
	145 Move [X8+32], X1
	146 Compare X21, 0
	147 JumpIfEqual {212}
	148 Move W11, [X21+28]
	149 Move X9, [X21+16]
	150 Move X10, [X25]
	151 Add W11, W11, 1
	152 Move [X21+28], W11
	153 Compare X9, 0
	154 JumpIfEqual {213}
	155 NotImplemented "Instruction LDRSW not yet implemented."
	156 Move W12, [X9+24]
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Add W10, W11, 1
	159 Add X9, X9, X11
	160 Move [X21+24], W10
	161 Move [X9+32], X8
	162 Move X8, [X9+32]
	163 Move X8, [X8+192]
	164 Move X2, [X8+112]
	165 Move X0, X21
	166 Call List`1<Object>.AddWithResize, X0, X1
	167 Move X9, [X10+32]
	168 Move X9, [X9+192]
	169 Move X2, [X9+112]
	170 Move X0, X21
	171 Move X1, X8
	172 Call List`1<Object>.AddWithResize, X0, X1
	173 Move X20, X31
	174 Compare X19, 0
	175 JumpIfEqual {197}
	176 Move X8, [X19]
	177 Move X1, [X22]
	178 NotImplemented "Instruction LDRH not yet implemented."
	179 Compare X9, 0
	180 JumpIfEqual {187}
	181 Move X10, [X8+176]
	182 Add X10, X10, 8
	183 NotImplemented "Instruction LDUR not yet implemented."
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Subtract X9, X9, 1
	186 Add X10, X10, 16
	187 Move X0, X19
	188 Move W2, W31
	189 Call 0x1C5D788
	190 NotImplemented "Instruction LDRSW not yet implemented."
	191 Add X8, X8, X9
	192 Add X0, X8, 312
	193 Move X8, [X0]
	194 Move X1, [X0+8]
	195 Move X0, X19
	196 NotImplemented "Instruction BLR not yet implemented."
	197 Compare X20, 0
	198 JumpIfNotEqual {216}
	199 Move X20, [X31+64]
	200 Move X19, [X31+72]
	201 Move X22, [X31+48]
	202 Move X21, [X31+56]
	203 Move X24, [X31+32]
	204 Move X23, [X31+40]
	205 Move X30, [X31+16]
	206 Move X25, [X31+24]
	207 Add X31, X31, 80
	208 Return 
	209 Call 0x1C17F20
	210 Call 0x1C17F20
	211 Call 0x1C17F20
	212 Call 0x1C17F20
	213 Call 0x1C17F20
	214 Call 0x1C17F20
	215 Call 0x1C17F20
	216 Move X0, X20
	217 Call 0x1C17F18
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Call 0x3EB2AD0
	220 Move X20, [X0]
	221 Call 0x3EB2AE0
	222 Move [X31+8], X0
	223 Move X20, X31
	224 Move [X31+8], X0
	225 Compare X19, 0
	226 JumpIfEqual {248}
	227 Move X8, [X19]
	228 Move X1, [X22]
	229 NotImplemented "Instruction LDRH not yet implemented."
	230 Compare X9, 0
	231 JumpIfEqual {238}
	232 Move X10, [X8+176]
	233 Add X10, X10, 8
	234 NotImplemented "Instruction LDUR not yet implemented."
	235 NotImplemented "Instruction CMP not yet implemented."
	236 Subtract X9, X9, 1
	237 Add X10, X10, 16
	238 Move X0, X19
	239 Move W2, W31
	240 Call 0x1C5D788
	241 NotImplemented "Instruction LDRSW not yet implemented."
	242 Add X8, X8, X9
	243 Add X0, X8, 312
	244 Move X8, [X0]
	245 Move X1, [X0+8]
	246 Move X0, X19
	247 NotImplemented "Instruction BLR not yet implemented."
	248 Compare X20, 0
	249 JumpIfNotEqual {252}
	250 Move X0, [X31+8]
	251 Call 0x1D2D690
	252 Move X0, X20
	253 Call 0x1C17F18
	254 Call 0x1991590

Method: System.Void SafeAddClaim(System.Security.Claims.Claim claim)

Disassembly:
	0x0326F628 CBZ X19, 0x326F6E8
	0x0326F62C LDR W10, [X19 + 0x1C]
	0x0326F630 LDR X8, [X19 + 0x10]
	0x0326F634 LDR X9, [X22]
	0x0326F638 ADD W10, W10, 0x1
	0x0326F63C STR W10, [X19 + 0x1C]
	0x0326F640 CBZ X8, 0x326F6E8
	0x0326F644 LDRSW X10, [X19 + 0x18]
	0x0326F648 LDR W11, [X8 + 0x18]
	0x0326F64C MOV X1, X0
	0x0326F650 CMP W10, W11
	0x0326F654 B.CS 0x326F6B8
	0x0326F658 ADD W9, W10, 0x1
	0x0326F65C ADD X8, X8, X10, 0x3, LSL
	0x0326F660 STR W9, [X19 + 0x18]
	0x0326F664 STR X1, [X8 + 0x20]
	0x0326F668 B 0x326F6A8
	0x0326F66C CBZ X19, 0x326F6E8
	0x0326F670 LDR W10, [X19 + 0x1C]
	0x0326F674 LDR X8, [X19 + 0x10]
	0x0326F678 LDR X9, [X22]
	0x0326F67C ADD W10, W10, 0x1
	0x0326F680 STR W10, [X19 + 0x1C]
	0x0326F684 CBZ X8, 0x326F6E8
	0x0326F688 LDRSW X10, [X19 + 0x18]
	0x0326F68C LDR W11, [X8 + 0x18]
	0x0326F690 CMP W10, W11
	0x0326F694 B.CS 0x326F6C4
	0x0326F698 ADD W9, W10, 0x1
	0x0326F69C ADD X8, X8, X10, 0x3, LSL
	0x0326F6A0 STR W9, [X19 + 0x18]
	0x0326F6A4 STR X20, [X8 + 0x20]
	0x0326F6A8 LDP X20, X19, [X31 + 0x20]
	0x0326F6AC LDP X22, X21, [X31 + 0x10]
	0x0326F6B0 LDR X30, [X31], #0x30
	0x0326F6B4 RET
	0x0326F6B8 LDR X8, [X9 + 0x20]
	0x0326F6BC MOV X0, X19
	0x0326F6C0 B 0x326F6D0
	0x0326F6C4 LDR X8, [X9 + 0x20]
	0x0326F6C8 MOV X0, X19
	0x0326F6CC MOV X1, X20
	0x0326F6D0 LDR X8, [X8 + 0xC0]
	0x0326F6D4 LDR X2, [X8 + 0x70]
	0x0326F6D8 LDP X20, X19, [X31 + 0x20]
	0x0326F6DC LDP X22, X21, [X31 + 0x10]
	0x0326F6E0 LDR X30, [X31], #0x30
	0x0326F6E4 B 0x301BF90
	0x0326F6E8 BL 0x1C16F20
	0x0326F6EC ADRP X0, 0xE89000
	0x0326F6F0 LDR X0, [X0 + 0x528]
	0x0326F6F4 BL 0x1C16D08
	0x0326F6F8 BL 0x1C16F10
	0x0326F6FC MOV X19, X0
	0x0326F700 ADRP X0, 0xEB4000
	0x0326F704 LDR X0, [X0 + 0xC18]
	0x0326F708 BL 0x1C16D08
	0x0326F70C MOV X1, X0
	0x0326F710 MOV X0, X19
	0x0326F714 MOV X2, X31
	0x0326F718 BL 0x330E100
	0x0326F71C ADRP X0, 0xEB4000
	0x0326F720 LDR X0, [X0 + 0xC20]
	0x0326F724 BL 0x1C16D08
	0x0326F728 MOV X1, X0
	0x0326F72C MOV X0, X19
	0x0326F730 BL 0x1C16DEC
	0x0326F734 STR X30, [X31 - 0x40]!
	0x0326F738 STP X24, X23, [X31 + 0x10]
	0x0326F73C STP X22, X21, [X31 + 0x20]
	0x0326F740 STP X20, X19, [X31 + 0x30]
	0x0326F744 ADRP X21, 0x116D000
	0x0326F748 LDRB W8, [X21 + 0x5AD]
	0x0326F74C MOV X20, X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x116E000
	007 Move W8, [X19+1452]
	008 Move X20, X1
	009 Move X21, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xEB5000
	015 Move X0, [X0+2976]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X19+1452], W8
	019 Compare X20, 0
	020 JumpIfEqual {85}
	021 Move X8, [X20+80]
	022 Move X22, 0xEB5000
	023 Move X19, [X21+24]
	024 Move X22, [X22+2976]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X8, [X20]
	027 Move X0, X20
	028 Move X1, X21
	029 Move X9, [X8+376]
	030 Move X2, [X8+384]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Compare X19, 0
	033 JumpIfEqual {85}
	034 Move W10, [X19+28]
	035 Move X8, [X19+16]
	036 Move X9, [X22]
	037 Add W10, W10, 1
	038 Move [X19+28], W10
	039 Compare X8, 0
	040 JumpIfEqual {85}
	041 NotImplemented "Instruction LDRSW not yet implemented."
	042 Move W11, [X8+24]
	043 Move X1, X0
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Add W9, W10, 1
	046 Add X8, X8, X10
	047 Move [X19+24], W9
	048 Move [X8+32], X1
	049 Compare X19, 0
	050 JumpIfEqual {85}
	051 Move W10, [X19+28]
	052 Move X8, [X19+16]
	053 Move X9, [X22]
	054 Add W10, W10, 1
	055 Move [X19+28], W10
	056 Compare X8, 0
	057 JumpIfEqual {85}
	058 NotImplemented "Instruction LDRSW not yet implemented."
	059 Move W11, [X8+24]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Add W9, W10, 1
	062 Add X8, X8, X10
	063 Move [X19+24], W9
	064 Move [X8+32], X20
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X22, [X31+16]
	068 Move X21, [X31+24]
	069 Move X30, [X31+48]
	070 Return 
	071 Move X8, [X9+32]
	072 Move X0, X19
	073 Move X8, [X9+32]
	074 Move X0, X19
	075 Move X1, X20
	076 Move X8, [X8+192]
	077 Move X2, [X8+112]
	078 Move X20, [X31+32]
	079 Move X19, [X31+40]
	080 Move X22, [X31+16]
	081 Move X21, [X31+24]
	082 Move X30, [X31+48]
	083 Call List`1<Object>.AddWithResize, X0, X1
	084 Return 
	085 Call 0x1C17F20

Method: System.Security.Claims.Claim FindFirst(System.String type)

Disassembly:
	0x03270734 LDP X8, X1, [X0]
	0x03270738 MOV X0, X22
	0x0327073C BLR X8
	0x03270740 CBZ X19, 0x32707E4
	0x03270744 MOV X0, X19
	0x03270748 BL 0x1C16F18
	0x0327074C B 0x3270750
	0x03270750 MOV X24, X0
	0x03270754 CMP W1, 0x1
	0x03270758 B.NE 0x3270778
	0x0327075C MOV X0, X24
	0x03270760 BL 0x3EB1AD0
	0x03270764 LDR X23, [X0]
	0x03270768 BL 0x3EB1AE0
	0x0327076C MOV W24, W31
	0x03270770 CBNZ X22, 0x3270480
	0x03270774 B 0x32704D8
	0x03270778 MOV X23, X31
	0x0327077C B 0x3270784
	0x03270780 MOV X24, X0
	0x03270784 CBZ X22, 0x32707E0
	0x03270788 LDR X8, [X22]
	0x0327078C LDR X1, [X25]
	0x03270790 LDRH W9, [X8 + 0x12E]
	0x03270794 CBZ X9, 0x32707B8
	0x03270798 LDR X10, [X8 + 0xB0]
	0x0327079C ADD X10, X10, 0x8
	0x032707A0 LDUR X11, [X10 - 0x8]
	0x032707A4 CMP X11, X1
	0x032707A8 B.EQ 0x32707C8
	0x032707AC SUBS X9, X9, 0x1
	0x032707B0 ADD X10, X10, 0x10
	0x032707B4 B.NE 0x32707A0
	0x032707B8 MOV X0, X22
	0x032707BC MOV W2, W31
	0x032707C0 BL 0x1C5C788
	0x032707C4 B 0x32707D4
	0x032707C8 LDRSW X9, [X10]
	0x032707CC ADD X8, X8, X9, 0x4, LSL
	0x032707D0 ADD X0, X8, 0x138
	0x032707D4 LDP X8, X1, [X0]
	0x032707D8 MOV X0, X22
	0x032707DC BLR X8
	0x032707E0 CBNZ X23, 0x32707EC
	0x032707E4 MOV X0, X24
	0x032707E8 BL 0x1D2C690
	0x032707EC MOV X0, X23
	0x032707F0 BL 0x1C16F18
	0x032707F4 BL 0x1990590
	0x032707F8 LDR W8, [X0 + 0x10]
	0x032707FC CMP W8, 0x2
	0x03270800 B.EQ 0x327080C
	0x03270804 ADDS W31, W8, 0x3
	0x03270808 B.NE 0x3270810
	0x0327080C B 0x3270C08
	0x03270810 RET
	0x03270814 SUB X31, X31, 0x40
	0x03270818 STP X30, X21, [X31 + 0x20]
	0x0327081C STP X20, X19, [X31 + 0x30]
	0x03270820 ADRP X20, 0x116C000
	0x03270824 LDRB W8, [X20 + 0x5B5]
	0x03270828 MOV X19, X0
	0x0327082C STR X0, [X31 + 0x18]
	0x03270830 TBNZ X8, 0x0, 0x3270890
	0x03270834 ADRP X0, 0xEB3000
	0x03270838 LDR X0, [X0 + 0xC50]
	0x0327083C BL 0x1C16CF4
	0x03270840 ADRP X0, 0xEB3000
	0x03270844 LDR X0, [X0 + 0xC58]
	0x03270848 BL 0x1C16CF4
	0x0327084C ADRP X0, 0xEB3000
	0x03270850 LDR X0, [X0 + 0xB90]
	0x03270854 BL 0x1C16CF4
	0x03270858 ADRP X0, 0xEB3000
	0x0327085C LDR X0, [X0 + 0xB98]
	0x03270860 BL 0x1C16CF4
	0x03270864 ADRP X0, 0xE83000
	0x03270868 LDR X0, [X0 + 0xE18]
	0x0327086C BL 0x1C16CF4
	0x03270870 ADRP X0, 0xEB3000
	0x03270874 LDR X0, [X0 + 0xC38]
	0x03270878 BL 0x1C16CF4
	0x0327087C ADRP X0, 0xEB3000
	0x03270880 LDR X0, [X0 + 0xC40]
	0x03270884 BL 0x1C16CF4
	0x03270888 MOVZ W8, 0x1
	0x0327088C STRB W8, [X20 + 0x5B5]
	0x03270890 ADD X8, X31, 0x18
	0x03270894 STP X31, X8, [X31 + 0x8]
	0x03270898 LDR W8, [X19 + 0x10]
	0x0327089C LDR X21, [X19 + 0x28]
	0x032708A0 CMP W8, 0x2
	0x032708A4 B.EQ 0x3270920
	0x032708A8 CMP W8, 0x1
	0x032708AC B.EQ 0x32708C4
	0x032708B0 CBNZ W8, 0x3270968
	0x032708B4 MOVN W9, 0x0
	0x032708B8 STR W9, [X19 + 0x10]
	0x032708BC STR W31, [X19 + 0x30]
	0x032708C0 B 0x32708D8
	0x032708C4 LDR W8, [X19 + 0x30]
	0x032708C8 MOVN W9, 0x0
	0x032708CC STR W9, [X19 + 0x10]
	0x032708D0 ADD W8, W8, 0x1
	0x032708D4 STR W8, [X19 + 0x30]
	0x032708D8 CBZ X21, 0x327094C
	0x032708DC LDR X9, [X21 + 0x18]
	0x032708E0 CBZ X9, 0x3270950
	0x032708E4 LDR W10, [X9 + 0x18]
	0x032708E8 CMP W8, W10
	0x032708EC B.GE 0x3270934
	0x032708F0 ADRP X10, 0xEB3000
	0x032708F4 LDR X10, [X10 + 0xC40]
	0x032708F8 LDR X2, [X10]
	0x032708FC MOV X0, X9
	0x03270900 MOV W1, W8
	0x03270904 BL 0x301BCCC
	0x03270908 LDR X9, [X31 + 0x18]
	0x0327090C MOV X8, X0
	0x03270910 MOVZ W0, 0x1
	0x03270914 STR X8, [X9 + 0x18]
	0x03270918 STR W0, [X9 + 0x10]
	0x0327091C B 0x3270B5C
	0x03270920 LDR X20, [X19 + 0x38]
	0x03270924 MOVN W8, 0x2
	0x03270928 STR W8, [X19 + 0x10]
	0x0327092C CBNZ X20, 0x3270A34
	0x03270930 BL 0x1C16F20
	0x03270934 LDR X8, [X21 + 0x20]
	0x03270938 CBZ X8, 0x3270968
	0x0327093C MOV W20, W31
	0x03270940 STR W31, [X19 + 0x30]
	0x03270944 CBNZ X21, 0x3270ABC
	0x03270948 BL 0x1C16F20
	0x0327094C BL 0x1C16F20
	0x03270950 BL 0x1C16F20
	0x03270954 B 0x3270BA8
	0x03270958 B 0x3270BA8
	0x0327095C B 0x3270BA8
	0x03270960 B 0x3270BA8
	0x03270964 B 0x3270BA8
	0x03270968 MOV W0, W31
	0x0327096C B 0x3270B5C
	0x03270970 LDR X0, [X21 + 0x20]
	0x03270974 CBZ X0, 0x3270B70
	0x03270978 LDR X8, [X31 + 0x18]
	0x0327097C ADRP X19, 0xEB3000
	0x03270980 LDR X19, [X19 + 0xC58]
	0x03270984 LDR W1, [X8 + 0x30]
	0x03270988 LDR X2, [X19]
	0x0327098C BL 0x28FB988
	0x03270990 CBZ X0, 0x32709FC
	0x03270994 LDR X0, [X21 + 0x20]
	0x03270998 CBZ X0, 0x3270B78
	0x0327099C LDR X8, [X31 + 0x18]
	0x032709A0 LDR X2, [X19]
	0x032709A4 LDR W1, [X8 + 0x30]
	0x032709A8 BL 0x28FB988
	0x032709AC MOV X19, X0
	0x032709B0 CBZ X0, 0x3270B74
	0x032709B4 ADRP X10, 0xEB3000
	0x032709B8 LDR X8, [X19]
	0x032709BC LDR X10, [X10 + 0xB90]
	0x032709C0 LDRH W9, [X8 + 0x12E]
	0x032709C4 LDR X1, [X10]
	0x032709C8 CBZ X9, 0x32709EC
	0x032709CC LDR X10, [X8 + 0xB0]
	0x032709D0 ADD X10, X10, 0x8
	0x032709D4 LDUR X11, [X10 - 0x8]
	0x032709D8 CMP X11, X1
	0x032709DC B.EQ 0x3270A04
	0x032709E0 SUBS X9, X9, 0x1
	0x032709E4 ADD X10, X10, 0x10
	0x032709E8 B.NE 0x32709D4
	0x032709EC MOV X0, X19
	0x032709F0 MOV W2, W31
	0x032709F4 BL 0x1C5C788
	0x032709F8 B 0x3270A10
	0x032709FC LDR X8, [X31 + 0x18]
	0x03270A00 B 0x3270AAC
	0x03270A04 LDRSW X9, [X10]
	0x03270A08 ADD X8, X8, X9, 0x4, LSL
	0x03270A0C ADD X0, X8, 0x138
	0x03270A10 LDP X8, X1, [X0]
	0x03270A14 MOV X0, X19
	0x03270A18 BLR X8
	0x03270A1C LDR X8, [X31 + 0x18]
	0x03270A20 MOVN W9, 0x2
	0x03270A24 MOV X20, X0
	0x03270A28 STR X0, [X8 + 0x38]
	0x03270A2C STR W9, [X8 + 0x10]
	0x03270A30 CBZ X20, 0x3270930
	0x03270A34 ADRP X10, 0xE83000
	0x03270A38 LDR X8, [X20]
	0x03270A3C LDR X10, [X10 + 0xE18]
	0x03270A40 LDRH W9, [X8 + 0x12E]
	0x03270A44 LDR X1, [X10]
	0x03270A48 CBZ X9, 0x3270A6C
	0x03270A4C LDR X10, [X8 + 0xB0]
	0x03270A50 ADD X10, X10, 0x8
	0x03270A54 LDUR X11, [X10 - 0x8]
	0x03270A58 CMP X11, X1
	0x03270A5C B.EQ 0x3270A7C
	0x03270A60 SUBS X9, X9, 0x1
	0x03270A64 ADD X10, X10, 0x10
	0x03270A68 B.NE 0x3270A54
	0x03270A6C MOV X0, X20
	0x03270A70 MOV W2, W31
	0x03270A74 BL 0x1C5C788
	0x03270A78 B 0x3270A88
	0x03270A7C LDRSW X9, [X10]
	0x03270A80 ADD X8, X8, X9, 0x4, LSL
	0x03270A84 ADD X0, X8, 0x138
	0x03270A88 LDP X8, X1, [X0]
	0x03270A8C MOV X0, X20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x116D000
	009 Move W8, [X21+1453]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0xE84000
	017 Move X0, [X0+3584]
	018 Call 0x1C17CF4
	019 Move X0, 0xEB4000
	020 Move X0, [X0+2960]
	021 Call 0x1C17CF4
	022 Move X0, 0xEB4000
	023 Move X0, [X0+2968]
	024 Call 0x1C17CF4
	025 Move X0, 0xE84000
	026 Move X0, [X0+3608]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+1453], W8
	030 Compare X20, 0
	031 JumpIfEqual {169}
	032 Move X8, [X19]
	033 Move X0, X19
	034 Move X9, [X8+456]
	035 Move X1, [X8+464]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Compare X0, 0
	038 JumpIfEqual {187}
	039 Move X10, 0xEB4000
	040 Move X8, [X0]
	041 Move X10, [X10+2960]
	042 Move X19, X0
	043 NotImplemented "Instruction LDRH not yet implemented."
	044 Move X1, [X10]
	045 Compare X9, 0
	046 JumpIfEqual {53}
	047 Move X10, [X8+176]
	048 Add X10, X10, 8
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Subtract X9, X9, 1
	052 Add X10, X10, 16
	053 Move X0, X19
	054 Move W2, W31
	055 Call 0x1C5D788
	056 NotImplemented "Instruction LDRSW not yet implemented."
	057 Add X8, X8, X9
	058 Add X0, X8, 312
	059 Move X8, [X0]
	060 Move X1, [X0+8]
	061 Move X22, 0xE84000
	062 Move X22, [X22+3584]
	063 Move X0, X19
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Move X19, X0
	066 Compare X0, 0
	067 JumpIfEqual {188}
	068 Move X23, 0xE84000
	069 Move X24, 0xEB4000
	070 Move X23, [X23+3608]
	071 Move X24, [X24+2968]
	072 Move X8, [X19]
	073 Move X1, [X23]
	074 NotImplemented "Instruction LDRH not yet implemented."
	075 Compare X9, 0
	076 JumpIfEqual {83}
	077 Move X10, [X8+176]
	078 Add X10, X10, 8
	079 NotImplemented "Instruction LDUR not yet implemented."
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Subtract X9, X9, 1
	082 Add X10, X10, 16
	083 Move X0, X19
	084 Move W2, W31
	085 Call 0x1C5D788
	086 NotImplemented "Instruction LDRSW not yet implemented."
	087 Add X8, X8, X9
	088 Add X0, X8, 312
	089 Move X8, [X0]
	090 Move X1, [X0+8]
	091 Move X0, X19
	092 NotImplemented "Instruction BLR not yet implemented."
	093 Move TEMP, X0
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfNotEqual {133}
	097 Move X8, [X19]
	098 Move X1, [X24]
	099 NotImplemented "Instruction LDRH not yet implemented."
	100 Compare X9, 0
	101 JumpIfEqual {108}
	102 Move X10, [X8+176]
	103 Add X10, X10, 8
	104 NotImplemented "Instruction LDUR not yet implemented."
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Subtract X9, X9, 1
	107 Add X10, X10, 16
	108 Move X0, X19
	109 Move W2, W31
	110 Call 0x1C5D788
	111 NotImplemented "Instruction LDRSW not yet implemented."
	112 Add X8, X8, X9
	113 Add X0, X8, 312
	114 Move X8, [X0]
	115 Move X1, [X0+8]
	116 Move X0, X19
	117 NotImplemented "Instruction BLR not yet implemented."
	118 Move X21, X0
	119 Compare X0, 0
	120 JumpIfEqual {72}
	121 Move X0, [X21+32]
	122 Move W2, 5
	123 Move X1, X20
	124 Move X3, X31
	125 Call String.Equals, X0, X1, X2
	126 Move TEMP, X0
	127 And TEMP, TEMP, 1
	128 Compare TEMP, 1
	129 JumpIfNotEqual {72}
	130 Move X20, X31
	131 Compare X19, 0
	132 JumpIfNotEqual {137}
	133 Move X20, X31
	134 Move X21, X31
	135 Compare X19, 0
	136 JumpIfEqual {158}
	137 Move X8, [X19]
	138 Move X1, [X22]
	139 NotImplemented "Instruction LDRH not yet implemented."
	140 Compare X9, 0
	141 JumpIfEqual {148}
	142 Move X10, [X8+176]
	143 Add X10, X10, 8
	144 NotImplemented "Instruction LDUR not yet implemented."
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Subtract X9, X9, 1
	147 Add X10, X10, 16
	148 Move X0, X19
	149 Move W2, W31
	150 Call 0x1C5D788
	151 NotImplemented "Instruction LDRSW not yet implemented."
	152 Add X8, X8, X9
	153 Add X0, X8, 312
	154 Move X8, [X0]
	155 Move X1, [X0+8]
	156 Move X0, X19
	157 NotImplemented "Instruction BLR not yet implemented."
	158 Compare X20, 0
	159 JumpIfNotEqual {189}
	160 Move X0, X21
	161 Move X20, [X31+48]
	162 Move X19, [X31+56]
	163 Move X22, [X31+32]
	164 Move X21, [X31+40]
	165 Move X24, [X31+16]
	166 Move X23, [X31+24]
	167 Move X30, [X31+64]
	168 Return X0
	169 Move X0, 0xE89000
	170 Move X0, [X0+1320]
	171 Call 0x1C17D08
	172 Call 0x1C17F10
	173 Move X19, X0
	174 Move X0, 0xE8C000
	175 Move X0, [X0+1512]
	176 Call 0x1C17D08
	177 Move X1, X0
	178 Move X0, X19
	179 Move X2, X31
	180 Call ArgumentNullException..ctor, X0, X1
	181 Move X0, 0xEB4000
	182 Move X0, [X0+3112]
	183 Call 0x1C17D08
	184 Move X1, X0
	185 Move X0, X19
	186 Call 0x1C17DEC
	187 Call 0x1C17F20
	188 Call 0x1C17F20
	189 Move X0, X20
	190 Call 0x1C17F18
	191 Move X21, X0
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Move X0, X21
	194 Call 0x3EB2AD0
	195 Move X20, [X0]
	196 Call 0x3EB2AE0
	197 Move X20, X31
	198 Move X21, X0
	199 Compare X19, 0
	200 JumpIfEqual {222}
	201 Move X8, [X19]
	202 Move X1, [X22]
	203 NotImplemented "Instruction LDRH not yet implemented."
	204 Compare X9, 0
	205 JumpIfEqual {212}
	206 Move X10, [X8+176]
	207 Add X10, X10, 8
	208 NotImplemented "Instruction LDUR not yet implemented."
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Subtract X9, X9, 1
	211 Add X10, X10, 16
	212 Move X0, X19
	213 Move W2, W31
	214 Call 0x1C5D788
	215 NotImplemented "Instruction LDRSW not yet implemented."
	216 Add X8, X8, X9
	217 Add X0, X8, 312
	218 Move X8, [X0]
	219 Move X1, [X0+8]
	220 Move X0, X19
	221 NotImplemented "Instruction BLR not yet implemented."
	222 Compare X20, 0
	223 JumpIfNotEqual {226}
	224 Move X0, X21
	225 Call 0x1D2D690
	226 Move X0, X20
	227 Call 0x1C17F18
	228 Call 0x1991590

Method: System.Void OnSerializingMethod(System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x03270A90 BLR X8
	0x03270A94 MOV W8, W0
	0x03270A98 LDR X0, [X31 + 0x18]
	0x03270A9C TBNZ X8, 0x0, 0x3270AE0
	0x03270AA0 BL 0x3270C08
	0x03270AA4 LDR X8, [X31 + 0x18]
	0x03270AA8 STR X31, [X8 + 0x38]
	0x03270AAC LDR W9, [X8 + 0x30]
	0x03270AB0 ADD W20, W9, 0x1
	0x03270AB4 STR W20, [X8 + 0x30]
	0x03270AB8 CBZ X21, 0x3270948
	0x03270ABC LDR X0, [X21 + 0x20]
	0x03270AC0 CBZ X0, 0x3270B6C
	0x03270AC4 ADRP X8, 0xEB3000
	0x03270AC8 LDR X8, [X8 + 0xC50]
	0x03270ACC LDR X1, [X8]
	0x03270AD0 BL 0x28FB900
	0x03270AD4 CMP W20, W0
	0x03270AD8 B.LT 0x3270970
	0x03270ADC B 0x3270968
	0x03270AE0 LDR X19, [X0 + 0x38]
	0x03270AE4 CBZ X19, 0x3270B7C
	0x03270AE8 ADRP X10, 0xEB3000
	0x03270AEC LDR X8, [X19]
	0x03270AF0 LDR X10, [X10 + 0xB98]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x116D000
	006 Move X21, 0xEB4000
	007 Move W8, [X20+1454]
	008 Move X21, [X21+3120]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xEB4000
	015 Move X0, [X0+3120]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1454], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Call 0x1C17E00
	022 Compare X0, 0
	023 JumpIfNotEqual {29}
	024 Move X0, X19
	025 Call ClaimsIdentity.SerializeClaims, X0
	026 NotImplemented "Instruction LDUR not yet implemented."
	027 Move [X19+112], X0
	028 Move [X19+6], V0
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return 

Method: System.Void OnDeserializedMethod(System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x03270D48 B.NE 0x3270D54
	0x03270D4C STR W31, [X19 + 0x10]
	0x03270D50 B 0x3270D8C
	0x03270D54 ADRP X8, 0xEB3000
	0x03270D58 LDR X8, [X8 + 0xC08]
	0x03270D5C LDR X0, [X8]
	0x03270D60 BL 0x1C16F10
	0x03270D64 MOV X1, X31
	0x03270D68 MOV X20, X0
	0x03270D6C BL 0x33BDD8C
	0x03270D70 MOV X0, X31
	0x03270D74 STR W31, [X20 + 0x10]
	0x03270D78 BL 0x33C151C
	0x03270D7C STR W0, [X20 + 0x20]
	0x03270D80 LDR X8, [X19 + 0x28]
	0x03270D84 MOV X19, X20
	0x03270D88 STR X8, [X20 + 0x28]
	0x03270D8C MOV X0, X19
	0x03270D90 LDP X20, X19, [X31 + 0x10]
	0x03270D94 LDR X30, [X31], #0x20
	0x03270D98 RET
	0x03270D9C B 0x3270D00
	0x03270DA0 STP X30, X25, [X31 - 0x40]!
	0x03270DA4 STP X24, X23, [X31 + 0x10]
	0x03270DA8 STP X22, X21, [X31 + 0x20]
	0x03270DAC STP X20, X19, [X31 + 0x30]
	0x03270DB0 ADRP X20, 0x116C000
	0x03270DB4 LDRB W8, [X20 + 0x5B8]
	0x03270DB8 MOV X19, X0
	0x03270DBC TBNZ X8, 0x0, 0x3270E04
	0x03270DC0 ADRP X0, 0xE83000
	0x03270DC4 LDR X0, [X0 + 0xE00]
	0x03270DC8 BL 0x1C16CF4
	0x03270DCC ADRP X0, 0xEB3000
	0x03270DD0 LDR X0, [X0 + 0xC68]
	0x03270DD4 BL 0x1C16CF4
	0x03270DD8 ADRP X0, 0xEB3000
	0x03270DDC LDR X0, [X0 + 0xC70]
	0x03270DE0 BL 0x1C16CF4
	0x03270DE4 ADRP X0, 0xE83000
	0x03270DE8 LDR X0, [X0 + 0xE18]
	0x03270DEC BL 0x1C16CF4
	0x03270DF0 ADRP X0, 0xEB3000
	0x03270DF4 LDR X0, [X0 + 0xA40]
	0x03270DF8 BL 0x1C16CF4
	0x03270DFC MOVZ W8, 0x1
	0x03270E00 STRB W8, [X20 + 0x5B8]
	0x03270E04 CBZ X19, 0x3271014
	0x03270E08 ADRP X10, 0xEB3000
	0x03270E0C LDR X8, [X19]
	0x03270E10 LDR X10, [X10 + 0xC68]
	0x03270E14 LDRH W9, [X8 + 0x12E]
	0x03270E18 LDR X1, [X10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x116D000
	006 Move X21, 0xEB4000
	007 Move W8, [X20+1455]
	008 Move X21, [X21+3120]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xEB4000
	015 Move X0, [X0+3120]
	016 Call 0x1C17CF4
	017 Move X0, 0xEB4000
	018 Move X0, [X0+2904]
	019 Call 0x1C17CF4
	020 Move X0, 0xEB4000
	021 Move X0, [X0+2896]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+1455], W8
	025 Move X1, [X21]
	026 Move X0, X19
	027 Call 0x1C17E00
	028 Compare X0, 0
	029 JumpIfNotEqual {62}
	030 Move X0, [X19+112]
	031 Move X1, X31
	032 Call String.IsNullOrEmpty, X0
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {41}
	037 Move X1, [X19+112]
	038 Move X0, X19
	039 Call ClaimsIdentity.DeserializeClaims, X0, X1
	040 Move [X19+112], X31
	041 Move X20, X19
	042 Add X20, X20, 96
	043 Move X0, [X20]
	044 Move X1, X31
	045 Call String.IsNullOrEmpty, X0
	046 Move X8, 0xEB4000
	047 Move X8, [X8+2896]
	048 And W31, W0, 1
	049 Move X1, X31
	050 NotImplemented "Instruction CSEL not yet implemented."
	051 Move X8, [X8]
	052 Add X19, X19, 104
	053 Move X0, [X19]
	054 Move [X19-64], X8
	055 Call String.IsNullOrEmpty, X0
	056 Move X8, 0xEB4000
	057 Move X8, [X8+2904]
	058 And W31, W0, 1
	059 NotImplemented "Instruction CSEL not yet implemented."
	060 Move X8, [X8]
	061 Move [X19-56], X8
	062 Move X20, [X31+16]
	063 Move X19, [X31+24]
	064 Move X30, [X31+32]
	065 Move X21, [X31+40]
	066 Return 

Method: System.Void OnDeserializingMethod(System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x03271158 LDR X0, [X19]
	0x0327115C LDR X8, [X0 + 0xB8]
	0x03271160 LDP X20, X19, [X31 + 0x10]
	0x03271164 LDR X0, [X8 + 0x8]
	0x03271168 LDR X30, [X31], #0x20
	0x0327116C RET
	0x03271170 STP X30, X23, [X31 - 0x30]!
	0x03271174 STP X22, X21, [X31 + 0x10]
	0x03271178 STP X20, X19, [X31 + 0x20]
	0x0327117C ADRP X22, 0x116B000
	0x03271180 ADRP X23, 0xEB2000
	0x03271184 ADRP X21, 0xEB2000
	0x03271188 ADRP X20, 0xEB2000
	0x0327118C LDRB W8, [X22 + 0x5BA]
	0x03271190 LDR X23, [X23 + 0xB78]
	0x03271194 LDR X21, [X21 + 0xC88]
	0x03271198 LDR X20, [X20 + 0xC90]
	0x0327119C MOV X19, X0
	0x032711A0 TBNZ X8, 0x0, 0x32711D0
	0x032711A4 ADRP X0, 0xEB2000
	0x032711A8 LDR X0, [X0 + 0xC90]
	0x032711AC BL 0x1C16CF4
	0x032711B0 ADRP X0, 0xEB2000
	0x032711B4 LDR X0, [X0 + 0xC88]
	0x032711B8 BL 0x1C16CF4
	0x032711BC ADRP X0, 0xEB2000
	0x032711C0 LDR X0, [X0 + 0xB78]
	0x032711C4 BL 0x1C16CF4
	0x032711C8 MOVZ W8, 0x1
	0x032711CC STRB W8, [X22 + 0x5BA]
	0x032711D0 LDR X8, [X23]
	0x032711D4 STR X8, [X19 + 0x10]
	0x032711D8 LDR X0, [X21]
	0x032711DC BL 0x1C16F10
	0x032711E0 LDR X1, [X20]
	0x032711E4 MOV X20, X0
	0x032711E8 BL 0x301B7C4
	0x032711EC STR X20, [X19 + 0x20]
	0x032711F0 MOV X0, X19
	0x032711F4 LDP X20, X19, [X31 + 0x20]
	0x032711F8 LDP X22, X21, [X31 + 0x10]
	0x032711FC MOV X1, X31
	0x03271200 LDP X30, X23, [X31], #0x30
	0x03271204 B 0x33BDD8C
	0x03271208 STR X30, [X31 - 0x40]!
	0x0327120C STP X24, X23, [X31 + 0x10]
	0x03271210 STP X22, X21, [X31 + 0x20]
	0x03271214 STP X20, X19, [X31 + 0x30]
	0x03271218 ADRP X23, 0x116B000
	0x0327121C ADRP X24, 0xEB2000
	0x03271220 ADRP X22, 0xEB2000
	0x03271224 ADRP X21, 0xEB2000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x116C000
	006 Move X21, 0xEB3000
	007 Move W8, [X20+1456]
	008 Move X21, [X21+3120]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0xEB3000
	015 Move X0, [X0+2888]
	016 Call 0x1C17CF4
	017 Move X0, 0xEB3000
	018 Move X0, [X0+2880]
	019 Call 0x1C17CF4
	020 Move X0, 0xEB3000
	021 Move X0, [X0+3120]
	022 Call 0x1C17CF4
	023 Move X0, 0xEB3000
	024 Move X0, [X0+2872]
	025 Call 0x1C17CF4
	026 Move X0, 0xEB3000
	027 Move X0, [X0+2864]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+1456], W8
	031 Move X1, [X21]
	032 Move X0, X19
	033 Call 0x1C17E00
	034 Compare X0, 0
	035 JumpIfNotEqual {56}
	036 Move X8, 0xEB3000
	037 Move X8, [X8+2864]
	038 Move X0, [X8]
	039 Call 0x1C17F10
	040 Move X8, 0xEB3000
	041 Move X8, [X8+2872]
	042 Move X20, X0
	043 Move X1, [X8]
	044 Call List`1<Object>..ctor, X0
	045 Move [X19+24], X20
	046 Move X8, 0xEB3000
	047 Move X8, [X8+2880]
	048 Move X0, [X8]
	049 Call 0x1C17F10
	050 Move X8, 0xEB3000
	051 Move X8, [X8+2888]
	052 Move X20, X0
	053 Move X1, [X8]
	054 Call 0x28FC8A8, X0
	055 Move [X19+32], X20
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X30, [X31+32]
	059 Move X21, [X31+40]
	060 Return 

Method: System.Void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x03271228 LDRB W8, [X23 + 0x5BB]
	0x0327122C LDR X24, [X24 + 0xB78]
	0x03271230 LDR X22, [X22 + 0xC88]
	0x03271234 LDR X21, [X21 + 0xC90]
	0x03271238 MOV X19, X1
	0x0327123C MOV X20, X0
	0x03271240 TBNZ X8, 0x0, 0x3271270
	0x03271244 ADRP X0, 0xEB2000
	0x03271248 LDR X0, [X0 + 0xC90]
	0x0327124C BL 0x1C16CF4
	0x03271250 ADRP X0, 0xEB2000
	0x03271254 LDR X0, [X0 + 0xC88]
	0x03271258 BL 0x1C16CF4
	0x0327125C ADRP X0, 0xEB2000
	0x03271260 LDR X0, [X0 + 0xB78]
	0x03271264 BL 0x1C16CF4
	0x03271268 MOVZ W8, 0x1
	0x0327126C STRB W8, [X23 + 0x5BB]
	0x03271270 LDR X8, [X24]
	0x03271274 STR X8, [X20 + 0x10]
	0x03271278 LDR X0, [X22]
	0x0327127C BL 0x1C16F10
	0x03271280 LDR X1, [X21]
	0x03271284 MOV X21, X0
	0x03271288 BL 0x301B7C4
	0x0327128C MOV X0, X20
	0x03271290 MOV X1, X31
	0x03271294 STR X21, [X20 + 0x20]
	0x03271298 BL 0x33BDD8C
	0x0327129C CBZ X19, 0x32712BC
	0x032712A0 MOV X0, X20
	0x032712A4 MOV X1, X19
	0x032712A8 LDP X20, X19, [X31 + 0x30]
	0x032712AC LDP X22, X21, [X31 + 0x20]
	0x032712B0 LDP X24, X23, [X31 + 0x10]
	0x032712B4 LDR X30, [X31], #0x40
	0x032712B8 B 0x3271304
	0x032712BC ADRP X0, 0xE87000
	0x032712C0 LDR X0, [X0 + 0x528]
	0x032712C4 BL 0x1C16D08
	0x032712C8 BL 0x1C16F10
	0x032712CC MOV X19, X0
	0x032712D0 ADRP X0, 0xEAC000
	0x032712D4 LDR X0, [X0 + 0x2D8]
	0x032712D8 BL 0x1C16D08
	0x032712DC MOV X1, X0
	0x032712E0 MOV X0, X19
	0x032712E4 MOV X2, X31
	0x032712E8 BL 0x330E100
	0x032712EC ADRP X0, 0xEB2000
	0x032712F0 LDR X0, [X0 + 0xC98]
	0x032712F4 BL 0x1C16D08
	0x032712F8 MOV X1, X0
	0x032712FC MOV X0, X19
	0x03271300 BL 0x1C16DEC
	0x03271304 STR X30, [X31 - 0x40]!
	0x03271308 STP X24, X23, [X31 + 0x10]
	0x0327130C STP X22, X21, [X31 + 0x20]
	0x03271310 STP X20, X19, [X31 + 0x30]
	0x03271314 ADRP X21, 0x116B000
	0x03271318 LDRB W8, [X21 + 0x5BE]
	0x0327131C MOV X19, X1
	0x03271320 MOV X20, X0
	0x03271324 TBNZ X8, 0x0, 0x3271348
	0x03271328 ADRP X0, 0xEB2000
	0x0327132C LDR X0, [X0 + 0xCA0]
	0x03271330 BL 0x1C16CF4
	0x03271334 ADRP X0, 0xEB2000
	0x03271338 LDR X0, [X0 + 0xCA8]
	0x0327133C BL 0x1C16CF4
	0x03271340 MOVZ W8, 0x1
	0x03271344 STRB W8, [X21 + 0x5BE]
	0x03271348 CBZ X19, 0x3271408
	0x0327134C MOV X0, X19
	0x03271350 MOV X1, X31
	0x03271354 BL 0x32A8830
	0x03271358 CBZ X0, 0x3271450
	0x0327135C MOV X1, X31
	0x03271360 MOV X21, X0
	0x03271364 BL 0x3291B70
	0x03271368 TBZ X0, 0x0, 0x32713F4
	0x0327136C ADRP X23, 0xEB2000
	0x03271370 ADRP X24, 0xEB2000
	0x03271374 LDR X23, [X23 + 0xCA0]
	0x03271378 LDR X24, [X24 + 0xCA8]
	0x0327137C MOV X0, X21
	0x03271380 MOV X1, X31
	0x03271384 BL 0x3291A04
	0x03271388 LDR X1, [X23]
	0x0327138C MOV X2, X31
	0x03271390 MOV X22, X0
	0x03271394 BL 0x321BA08
	0x03271398 TBZ X0, 0x0, 0x32713BC
	0x0327139C LDR X1, [X23]
	0x032713A0 MOV X0, X19
	0x032713A4 MOV X2, X31
	0x032713A8 BL 0x32A9F64
	0x032713AC MOV X1, X0
	0x032713B0 MOV X0, X20
	0x032713B4 BL 0x3271F60
	0x032713B8 B 0x32713E4
	0x032713BC LDR X1, [X24]
	0x032713C0 MOV X0, X22
	0x032713C4 MOV X2, X31
	0x032713C8 BL 0x321BA08
	0x032713CC TBZ X0, 0x0, 0x32713E4
	0x032713D0 LDR X1, [X24]
	0x032713D4 MOV X0, X19
	0x032713D8 MOV X2, X31
	0x032713DC BL 0x32A9F64
	0x032713E0 STR X0, [X20 + 0x10]
	0x032713E4 MOV X0, X21
	0x032713E8 MOV X1, X31
	0x032713EC BL 0x3291B70
	0x032713F0 TBNZ X0, 0x0, 0x327137C
	0x032713F4 LDP X20, X19, [X31 + 0x30]
	0x032713F8 LDP X22, X21, [X31 + 0x20]
	0x032713FC LDP X24, X23, [X31 + 0x10]
	0x03271400 LDR X30, [X31], #0x40
	0x03271404 RET
	0x03271408 ADRP X0, 0xE87000
	0x0327140C LDR X0, [X0 + 0x528]
	0x03271410 BL 0x1C16D08
	0x03271414 BL 0x1C16F10
	0x03271418 MOV X19, X0
	0x0327141C ADRP X0, 0xEAC000
	0x03271420 LDR X0, [X0 + 0x2D8]
	0x03271424 BL 0x1C16D08
	0x03271428 MOV X1, X0
	0x0327142C MOV X0, X19
	0x03271430 MOV X2, X31
	0x03271434 BL 0x330E100
	0x03271438 ADRP X0, 0xEB2000
	0x0327143C LDR X0, [X0 + 0xCB0]
	0x03271440 BL 0x1C16D08
	0x03271444 MOV X1, X0
	0x03271448 MOV X0, X19
	0x0327144C BL 0x1C16DEC
	0x03271450 BL 0x1C16F20
	0x03271454 STP X30, X21, [X31 - 0x20]!
	0x03271458 STP X20, X19, [X31 + 0x10]
	0x0327145C ADRP X20, 0x116B000
	0x03271460 ADRP X21, 0xEB2000
	0x03271464 LDRB W8, [X20 + 0x5BC]
	0x03271468 LDR X21, [X21 + 0xC30]
	0x0327146C MOV X19, X0
	0x03271470 TBNZ X8, 0x0, 0x3271488
	0x03271474 ADRP X0, 0xEB2000
	0x03271478 LDR X0, [X0 + 0xC30]
	0x0327147C BL 0x1C16CF4
	0x03271480 MOVZ W8, 0x1
	0x03271484 STRB W8, [X20 + 0x5BC]
	0x03271488 LDR X1, [X21]
	0x0327148C MOV X0, X19
	0x03271490 BL 0x1C16E00
	0x03271494 CBNZ X0, 0x32714A4
	0x03271498 MOV X0, X19
	0x0327149C BL 0x32714B0
	0x032714A0 STR X0, [X19 + 0x18]
	0x032714A4 LDP X20, X19, [X31 + 0x10]
	0x032714A8 LDP X30, X21, [X31], #0x20
	0x032714AC RET
	0x032714B0 SUB X31, X31, 0xB0
	0x032714B4 STP X29, X30, [X31 + 0x50]
	0x032714B8 STP X28, X27, [X31 + 0x60]
	0x032714BC STP X26, X25, [X31 + 0x70]
	0x032714C0 STP X24, X23, [X31 + 0x80]
	0x032714C4 STP X22, X21, [X31 + 0x90]
	0x032714C8 STP X20, X19, [X31 + 0xA0]
	0x032714CC ADRP X23, 0x116B000
	0x032714D0 ADRP X22, 0xE83000
	0x032714D4 ADRP X19, 0xE83000
	0x032714D8 ADRP X20, 0xEAE000
	0x032714DC LDRB W8, [X23 + 0x5C0]
	0x032714E0 LDR X22, [X22 + 0x1D0]
	0x032714E4 LDR X19, [X19 + 0x1C0]
	0x032714E8 LDR X20, [X20 + 0xD0]
	0x032714EC MOV X21, X0
	0x032714F0 TBNZ X8, 0x0, 0x32715B0
	0x032714F4 ADRP X0, 0xEAE000
	0x032714F8 LDR X0, [X0 + 0xD0]
	0x032714FC BL 0x1C16CF4
	0x03271500 ADRP X0, 0xE8B000
	0x03271504 LDR X0, [X0 + 0x9E8]
	0x03271508 BL 0x1C16CF4
	0x0327150C ADRP X0, 0xEB2000
	0x03271510 LDR X0, [X0 + 0xCB8]
	0x03271514 BL 0x1C16CF4
	0x03271518 ADRP X0, 0xEB2000
	0x0327151C LDR X0, [X0 + 0xCC0]
	0x03271520 BL 0x1C16CF4
	0x03271524 ADRP X0, 0xEB2000
	0x03271528 LDR X0, [X0 + 0xCC8]
	0x0327152C BL 0x1C16CF4
	0x03271530 ADRP X0, 0xE82000
	0x03271534 LDR X0, [X0 + 0xE00]
	0x03271538 BL 0x1C16CF4
	0x0327153C ADRP X0, 0xE83000
	0x03271540 LDR X0, [X0 + 0x1B8]
	0x03271544 BL 0x1C16CF4
	0x03271548 ADRP X0, 0xEB2000
	0x0327154C LDR X0, [X0 + 0xCD0]
	0x03271550 BL 0x1C16CF4
	0x03271554 ADRP X0, 0xE83000
	0x03271558 LDR X0, [X0 + 0x1C0]
	0x0327155C BL 0x1C16CF4
	0x03271560 ADRP X0, 0xE83000
	0x03271564 LDR X0, [X0 + 0x1D0]
	0x03271568 BL 0x1C16CF4
	0x0327156C ADRP X0, 0xE8A000
	0x03271570 LDR X0, [X0 + 0x558]
	0x03271574 BL 0x1C16CF4
	0x03271578 ADRP X0, 0xE82000
	0x0327157C LDR X0, [X0 + 0x6C0]
	0x03271580 BL 0x1C16CF4
	0x03271584 ADRP X0, 0xEB2000
	0x03271588 LDR X0, [X0 + 0xCD8]
	0x0327158C BL 0x1C16CF4
	0x03271590 ADRP X0, 0xEB2000
	0x03271594 LDR X0, [X0 + 0xA40]
	0x03271598 BL 0x1C16CF4
	0x0327159C ADRP X0, 0xE82000
	0x032715A0 LDR X0, [X0 + 0x988]
	0x032715A4 BL 0x1C16CF4
	0x032715A8 MOVZ W8, 0x1
	0x032715AC STRB W8, [X23 + 0x5C0]
	0x032715B0 LDR X0, [X22]
	0x032715B4 STP X31, X31, [X31 + 0x30]
	0x032715B8 STR X31, [X31 + 0x40]
	0x032715BC STP X31, X31, [X31 + 0x20]
	0x032715C0 BL 0x1C16F10
	0x032715C4 LDR X1, [X19]
	0x032715C8 MOV X19, X0
	0x032715CC BL 0x301B7C4
	0x032715D0 LDR X0, [X20]
	0x032715D4 BL 0x1C16F10
	0x032715D8 MOV X1, X31
	0x032715DC MOV X20, X0
	0x032715E0 BL 0x32B0928
	0x032715E4 LDR X0, [X21 + 0x20]
	0x032715E8 CBZ X0, 0x3271D3C
	0x032715EC ADRP X8, 0xEB2000
	0x032715F0 LDR X8, [X8 + 0xCD0]
	0x032715F4 ADRP X29, 0xEB2000
	0x032715F8 ADRP X28, 0xEB2000
	0x032715FC ADRP X25, 0xE82000
	0x03271600 ADRP X26, 0xE83000
	0x03271604 ADRP X27, 0xE8A000
	0x03271608 LDR X29, [X29 + 0xCC0]
	0x0327160C LDR X28, [X28 + 0xCD8]
	0x03271610 LDR X25, [X25 + 0x6C0]
	0x03271614 LDR X26, [X26 + 0x1B8]
	0x03271618 LDR X27, [X27 + 0x558]
	0x0327161C LDR X1, [X8]
	0x03271620 ADD X8, X31, 0x8
	0x03271624 BL 0x301CB58
	0x03271628 LDUR V0, [X31 + 0x8]
	0x0327162C LDR X8, [X31 + 0x18]
	0x03271630 STR V0, [X31 + 0x3]
	0x03271634 STR X8, [X31 + 0x40]
	0x03271638 LDR X1, [X29]
	0x0327163C ADD X0, X31, 0x30
	0x03271640 BL 0x2BC4350
	0x03271644 TBZ X0, 0x0, 0x3271B0C
	0x03271648 LDR X21, [X31 + 0x40]
	0x0327164C CBZ X21, 0x3271C40
	0x03271650 MOV X0, X21
	0x03271654 MOV X1, X31
	0x03271658 BL 0x33BE520
	0x0327165C MOV X22, X0
	0x03271660 LDR X0, [X25]
	0x03271664 LDR X23, [X28]
	0x03271668 LDR W8, [X0 + 0xE0]
	0x0327166C CBNZ W8, 0x3271674
	0x03271670 BL 0x1C16DFC
	0x03271674 MOV X0, X23
	0x03271678 MOV X1, X31
	0x0327167C BL 0x338C698
	0x03271680 MOV X1, X0
	0x03271684 MOV X0, X22
	0x03271688 MOV X2, X31
	0x0327168C BL 0x3395194
	0x03271690 TBZ X0, 0x0, 0x32718B8
	0x03271694 ADRP X8, 0xEB2000
	0x03271698 LDR X9, [X21]
	0x0327169C LDR X8, [X8 + 0xA40]
	0x032716A0 LDRB W11, [X9 + 0x130]
	0x032716A4 LDR X8, [X8]
	0x032716A8 LDRB W10, [X8 + 0x130]
	0x032716AC CMP W11, W10
	0x032716B0 B.CC 0x3271C44
	0x032716B4 LDR X9, [X9 + 0xC8]
	0x032716B8 ADD X9, X9, X10, 0x3, LSL
	0x032716BC LDUR X9, [X9 - 0x8]
	0x032716C0 CMP X9, X8
	0x032716C4 B.NE 0x3271C44
	0x032716C8 LDR X8, [X21 + 0x78]
	0x032716CC STR X8, [X31 + 0x28]
	0x032716D0 ADD X0, X31, 0x28
	0x032716D4 MOV X1, X31
	0x032716D8 BL 0x33C6854
	0x032716DC STR X0, [X31 + 0x20]
	0x032716E0 MOV X0, X31
	0x032716E4 BL 0x333AB78
	0x032716E8 MOV X1, X0
	0x032716EC ADD X0, X31, 0x20
	0x032716F0 MOV X2, X31
	0x032716F4 BL 0x337CC98
	0x032716F8 MOV X1, X0
	0x032716FC CBZ X19, 0x3271C58
	0x03271700 LDR W10, [X19 + 0x1C]
	0x03271704 LDR X8, [X19 + 0x10]
	0x03271708 LDR X9, [X26]
	0x0327170C ADD W10, W10, 0x1
	0x03271710 STR W10, [X19 + 0x1C]
	0x03271714 CBZ X8, 0x3271C5C
	0x03271718 LDRSW X10, [X19 + 0x18]
	0x0327171C LDR W11, [X8 + 0x18]
	0x03271720 CMP W10, W11
	0x03271724 B.CS 0x327173C
	0x03271728 ADD W9, W10, 0x1
	0x0327172C ADD X8, X8, X10, 0x3, LSL
	0x03271730 STR W9, [X19 + 0x18]
	0x03271734 STR X1, [X8 + 0x20]
	0x03271738 B 0x3271750
	0x0327173C LDR X8, [X9 + 0x20]
	0x03271740 LDR X8, [X8 + 0xC0]
	0x03271744 LDR X2, [X8 + 0x70]
	0x03271748 MOV X0, X19
	0x0327174C BL 0x301BF90
	0x03271750 LDR X0, [X27]
	0x03271754 BL 0x1C16F10
	0x03271758 MOV X22, X0
	0x0327175C MOV X1, X31
	0x03271760 BL 0x32E23B4
	0x03271764 MOV X0, X21
	0x03271768 MOV X1, X31
	0x0327176C BL 0x326D290
	0x03271770 CBZ X20, 0x3271A94
	0x03271774 MOV X2, X0
	0x03271778 MOV X0, X20
	0x0327177C MOV X1, X22
	0x03271780 MOV X3, X31
	0x03271784 MOV W4, W31
	0x03271788 MOV X5, X31
	0x0327178C BL 0x32B1108
	0x03271790 CBZ X22, 0x3271A9C
	0x03271794 LDR X8, [X22]
	0x03271798 LDR X1, [X8 + 0x3C0]
	0x0327179C LDR X9, [X8 + 0x3B8]
	0x032717A0 MOV X0, X22
	0x032717A4 BLR X9
	0x032717A8 LDR X8, [X22]
	0x032717AC MOV X23, X0
	0x032717B0 LDP X9, X1, [X8 + 0x1E8]
	0x032717B4 MOV X0, X22
	0x032717B8 BLR X9
	0x032717BC ADRP X8, 0xE8B000
	0x032717C0 LDR X8, [X8 + 0x9E8]
	0x032717C4 MOV X24, X0
	0x032717C8 LDR X0, [X8]
	0x032717CC LDR W8, [X0 + 0xE0]
	0x032717D0 CBNZ W8, 0x32717D8
	0x032717D4 BL 0x1C16DFC
	0x032717D8 MOV X0, X23
	0x032717DC MOV W1, W31
	0x032717E0 MOV W2, W24
	0x032717E4 MOV X3, X31
	0x032717E8 BL 0x3322804
	0x032717EC MOV X1, X0
	0x032717F0 LDR W10, [X19 + 0x1C]
	0x032717F4 LDR X8, [X19 + 0x10]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X21, 0x116C000
	012 Move W8, [X21+1457]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {57}
	019 Move X0, 0xEAF000
	020 Move X0, [X0+208]
	021 Call 0x1C17CF4
	022 Move X0, 0xE8C000
	023 Move X0, [X0+2536]
	024 Call 0x1C17CF4
	025 Move X0, 0xE83000
	026 Move X0, [X0+3584]
	027 Call 0x1C17CF4
	028 Move X0, 0xE8B000
	029 Move X0, [X0+1368]
	030 Call 0x1C17CF4
	031 Move X0, 0xEB3000
	032 Move X0, [X0+3000]
	033 Call 0x1C17CF4
	034 Move X0, 0xEB3000
	035 Move X0, [X0+3008]
	036 Call 0x1C17CF4
	037 Move X0, 0xEB3000
	038 Move X0, [X0+3016]
	039 Call 0x1C17CF4
	040 Move X0, 0xEB3000
	041 Move X0, [X0+3024]
	042 Call 0x1C17CF4
	043 Move X0, 0xEB3000
	044 Move X0, [X0+3032]
	045 Call 0x1C17CF4
	046 Move X0, 0xEB3000
	047 Move X0, [X0+3040]
	048 Call 0x1C17CF4
	049 Move X0, 0xEB3000
	050 Move X0, [X0+3048]
	051 Call 0x1C17CF4
	052 Move X0, 0xEB3000
	053 Move X0, [X0+3056]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X21+1457], W8
	057 Compare X19, 0
	058 JumpIfEqual {289}
	059 Move X8, 0xEAF000
	060 Move X8, [X8+208]
	061 Move X24, 0xEB3000
	062 Move X23, 0xEB3000
	063 Move X22, 0xEB3000
	064 Move X0, [X8]
	065 Move X24, [X24+3000]
	066 Move X23, [X23+3024]
	067 Move X22, [X22+3032]
	068 Call 0x1C17F10
	069 Move X1, X31
	070 Move X21, X0
	071 Call BinaryFormatter..ctor, X0
	072 Move X2, [X20+56]
	073 Move X1, [X24]
	074 Move X0, X19
	075 Move X3, X31
	076 Call SerializationInfo.AddValue, X0, X1, X2
	077 Move X0, [X20+72]
	078 Move X1, X31
	079 Call String.IsNullOrEmpty, X0
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfEqual {91}
	084 Move X8, 0xEB3000
	085 Move X2, [X20+72]
	086 Move X8, [X8+3056]
	087 Move X0, X19
	088 Move X3, X31
	089 Move X1, [X8]
	090 Call SerializationInfo.AddValue, X0, X1, X2
	091 Move X2, [X20+40]
	092 Move X1, [X23]
	093 Move X0, X19
	094 Move X3, X31
	095 Call SerializationInfo.AddValue, X0, X1, X2
	096 Move X2, [X20+48]
	097 Move X1, [X22]
	098 Move X0, X19
	099 Move X3, X31
	100 Call SerializationInfo.AddValue, X0, X1, X2
	101 Move X0, [X20+88]
	102 Move X1, X31
	103 Call String.IsNullOrEmpty, X0
	104 Move TEMP, X0
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfEqual {115}
	108 Move X8, 0xEB3000
	109 Move X2, [X20+88]
	110 Move X8, [X8+3048]
	111 Move X0, X19
	112 Move X3, X31
	113 Move X1, [X8]
	114 Call SerializationInfo.AddValue, X0, X1, X2
	115 Move X27, 0xE8B000
	116 Move X26, 0xE8C000
	117 Move X25, 0xE83000
	118 Move X8, [X20+64]
	119 Move X27, [X27+1368]
	120 Move X26, [X26+2536]
	121 Move X25, [X25+3584]
	122 Compare X8, 0
	123 JumpIfEqual {197}
	124 Move X0, [X27]
	125 Call 0x1C17F10
	126 Move X1, X31
	127 Move X22, X0
	128 Call MemoryStream..ctor, X0
	129 Compare X21, 0
	130 JumpIfEqual {307}
	131 Move X2, [X20+64]
	132 Move X0, X21
	133 Move X1, X22
	134 Move X3, X31
	135 Move W4, W31
	136 Move X5, X31
	137 Call BinaryFormatter.Serialize, X0, X1, X2, X3, X4
	138 Compare X22, 0
	139 JumpIfEqual {310}
	140 Move X8, [X22]
	141 Move X1, [X8+960]
	142 Move X9, [X8+952]
	143 Move X0, X22
	144 NotImplemented "Instruction BLR not yet implemented."
	145 Move X8, [X22]
	146 Move X23, X0
	147 Move X9, [X8+488]
	148 Move X1, [X8+496]
	149 Move X0, X22
	150 NotImplemented "Instruction BLR not yet implemented."
	151 Move X24, X0
	152 Move X0, [X26]
	153 Move W8, [X0+224]
	154 Compare W8, 0
	155 JumpIfNotEqual {157}
	156 Call 0x1C17DFC
	157 Move X0, X23
	158 Move W1, W31
	159 Move W2, W24
	160 Move X3, X31
	161 Call Convert.ToBase64String, X0, X1, X2
	162 Move X8, 0xEB3000
	163 Move X8, [X8+3040]
	164 Move X2, X0
	165 Move X1, [X8]
	166 Move X0, X19
	167 Move X3, X31
	168 Call SerializationInfo.AddValue, X0, X1, X2
	169 Move X23, X31
	170 Move W24, 7
	171 Move X8, [X22]
	172 Move X1, [X25]
	173 NotImplemented "Instruction LDRH not yet implemented."
	174 Compare X9, 0
	175 JumpIfEqual {182}
	176 Move X10, [X8+176]
	177 Add X10, X10, 8
	178 NotImplemented "Instruction LDUR not yet implemented."
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Subtract X9, X9, 1
	181 Add X10, X10, 16
	182 Move X0, X22
	183 Move W2, W31
	184 Call 0x1C5D788
	185 NotImplemented "Instruction LDRSW not yet implemented."
	186 Add X8, X8, X9
	187 Add X0, X8, 312
	188 Move X8, [X0]
	189 Move X1, [X0+8]
	190 Move X0, X22
	191 NotImplemented "Instruction BLR not yet implemented."
	192 Compare X23, 0
	193 JumpIfNotEqual {308}
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Compare W24, 0
	196 JumpIfNotEqual {278}
	197 Move X22, 0xEB3000
	198 Move X22, [X22+3008]
	199 Move X0, X20
	200 Call ClaimsIdentity.SerializeClaims, X0
	201 Move X1, [X22]
	202 Move X2, X0
	203 Move X0, X19
	204 Move X3, X31
	205 Call SerializationInfo.AddValue, X0, X1, X2
	206 Move X8, [X20+80]
	207 Compare X8, 0
	208 JumpIfEqual {278}
	209 Move X0, [X27]
	210 Call 0x1C17F10
	211 Move X1, X31
	212 Move X22, X0
	213 Call MemoryStream..ctor, X0
	214 Compare X21, 0
	215 JumpIfEqual {311}
	216 Move X2, [X20+80]
	217 Move X0, X21
	218 Move X1, X22
	219 Move X3, X31
	220 Move W4, W31
	221 Move X5, X31
	222 Call BinaryFormatter.Serialize, X0, X1, X2, X3, X4
	223 Compare X22, 0
	224 JumpIfEqual {314}
	225 Move X8, [X22]
	226 Move X1, [X8+960]
	227 Move X9, [X8+952]
	228 Move X0, X22
	229 NotImplemented "Instruction BLR not yet implemented."
	230 Move X8, [X22]
	231 Move X20, X0
	232 Move X9, [X8+488]
	233 Move X1, [X8+496]
	234 Move X0, X22
	235 NotImplemented "Instruction BLR not yet implemented."
	236 Move X21, X0
	237 Move X0, [X26]
	238 Move W8, [X0+224]
	239 Compare W8, 0
	240 JumpIfNotEqual {242}
	241 Call 0x1C17DFC
	242 Move X0, X20
	243 Move W1, W31
	244 Move W2, W21
	245 Move X3, X31
	246 Call Convert.ToBase64String, X0, X1, X2
	247 Move X8, 0xEB3000
	248 Move X8, [X8+3016]
	249 Move X2, X0
	250 Move X1, [X8]
	251 Move X0, X19
	252 Move X3, X31
	253 Call SerializationInfo.AddValue, X0, X1, X2
	254 Move X19, X31
	255 Move X8, [X22]
	256 Move X1, [X25]
	257 NotImplemented "Instruction LDRH not yet implemented."
	258 Compare X9, 0
	259 JumpIfEqual {266}
	260 Move X10, [X8+176]
	261 Add X10, X10, 8
	262 NotImplemented "Instruction LDUR not yet implemented."
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Subtract X9, X9, 1
	265 Add X10, X10, 16
	266 Move X0, X22
	267 Move W2, W31
	268 Call 0x1C5D788
	269 NotImplemented "Instruction LDRSW not yet implemented."
	270 Add X8, X8, X9
	271 Add X0, X8, 312
	272 Move X8, [X0]
	273 Move X1, [X0+8]
	274 Move X0, X22
	275 NotImplemented "Instruction BLR not yet implemented."
	276 Compare X19, 0
	277 JumpIfNotEqual {312}
	278 Move X20, [X31+64]
	279 Move X19, [X31+72]
	280 Move X22, [X31+48]
	281 Move X21, [X31+56]
	282 Move X24, [X31+32]
	283 Move X23, [X31+40]
	284 Move X26, [X31+16]
	285 Move X25, [X31+24]
	286 Move X30, [X31+80]
	287 Move X27, [X31+88]
	288 Return 
	289 Move X0, 0xE88000
	290 Move X0, [X0+1320]
	291 Call 0x1C17D08
	292 Call 0x1C17F10
	293 Move X19, X0
	294 Move X0, 0xEAD000
	295 Move X0, [X0+728]
	296 Call 0x1C17D08
	297 Move X1, X0
	298 Move X0, X19
	299 Move X2, X31
	300 Call ArgumentNullException..ctor, X0, X1
	301 Move X0, 0xEB3000
	302 Move X0, [X0+3144]
	303 Call 0x1C17D08
	304 Move X1, X0
	305 Move X0, X19
	306 Call 0x1C17DEC
	307 Call 0x1C17F20
	308 Move X0, X23
	309 Call 0x1C17F18
	310 Call 0x1C17F20
	311 Call 0x1C17F20
	312 Move X0, X19
	313 Call 0x1C17F18
	314 Call 0x1C17F20
	315 Move X24, X0
	316 NotImplemented "Instruction CMP not yet implemented."
	317 Move X0, X24
	318 Call 0x3EB2AD0
	319 Move X19, [X0]
	320 Call 0x3EB2AE0
	321 Compare X22, 0
	322 JumpIfNotEqual {255}
	323 Move X19, X31
	324 Move X24, X0
	325 Compare X22, 0
	326 JumpIfEqual {348}
	327 Move X8, [X22]
	328 Move X1, [X25]
	329 NotImplemented "Instruction LDRH not yet implemented."
	330 Compare X9, 0
	331 JumpIfEqual {338}
	332 Move X10, [X8+176]
	333 Add X10, X10, 8
	334 NotImplemented "Instruction LDUR not yet implemented."
	335 NotImplemented "Instruction CMP not yet implemented."
	336 Subtract X9, X9, 1
	337 Add X10, X10, 16
	338 Move X0, X22
	339 Move W2, W31
	340 Call 0x1C5D788
	341 NotImplemented "Instruction LDRSW not yet implemented."
	342 Add X8, X8, X9
	343 Add X0, X8, 312
	344 Move X8, [X0]
	345 Move X1, [X0+8]
	346 Move X0, X22
	347 NotImplemented "Instruction BLR not yet implemented."
	348 Compare X19, 0
	349 JumpIfEqual {388}
	350 Move X0, X19
	351 Call 0x1C17F18
	352 Move X24, X0
	353 NotImplemented "Instruction CMP not yet implemented."
	354 Move X0, X24
	355 Call 0x3EB2AD0
	356 Move X23, [X0]
	357 Call 0x3EB2AE0
	358 Move W24, W31
	359 Compare X22, 0
	360 JumpIfNotEqual {171}
	361 Move X23, X31
	362 Move X24, X0
	363 Compare X22, 0
	364 JumpIfEqual {386}
	365 Move X8, [X22]
	366 Move X1, [X25]
	367 NotImplemented "Instruction LDRH not yet implemented."
	368 Compare X9, 0
	369 JumpIfEqual {376}
	370 Move X10, [X8+176]
	371 Add X10, X10, 8
	372 NotImplemented "Instruction LDUR not yet implemented."
	373 NotImplemented "Instruction CMP not yet implemented."
	374 Subtract X9, X9, 1
	375 Add X10, X10, 16
	376 Move X0, X22
	377 Move W2, W31
	378 Call 0x1C5D788
	379 NotImplemented "Instruction LDRSW not yet implemented."
	380 Add X8, X8, X9
	381 Add X0, X8, 312
	382 Move X8, [X0]
	383 Move X1, [X0+8]
	384 Move X0, X22
	385 NotImplemented "Instruction BLR not yet implemented."
	386 Compare X23, 0
	387 JumpIfNotEqual {390}
	388 Move X0, X24
	389 Call 0x1D2D690
	390 Move X0, X23
	391 Call 0x1C17F18
	392 Call 0x1991590

Method: System.Void DeserializeClaims(System.String serializedClaims)

Disassembly:
	0x03270E1C CBZ X9, 0x3270E40
	0x03270E20 LDR X10, [X8 + 0xB0]
	0x03270E24 ADD X10, X10, 0x8
	0x03270E28 LDUR X11, [X10 - 0x8]
	0x03270E2C CMP X11, X1
	0x03270E30 B.EQ 0x3270E50
	0x03270E34 SUBS X9, X9, 0x1
	0x03270E38 ADD X10, X10, 0x10
	0x03270E3C B.NE 0x3270E28
	0x03270E40 MOV X0, X19
	0x03270E44 MOV W2, W31
	0x03270E48 BL 0x1C5C788
	0x03270E4C B 0x3270E5C
	0x03270E50 LDRSW X9, [X10]
	0x03270E54 ADD X8, X8, X9, 0x4, LSL
	0x03270E58 ADD X0, X8, 0x138
	0x03270E5C LDP X8, X1, [X0]
	0x03270E60 ADRP X22, 0xE83000
	0x03270E64 LDR X22, [X22 + 0xE00]
	0x03270E68 MOV X0, X19
	0x03270E6C BLR X8
	0x03270E70 MOV X19, X0
	0x03270E74 CBZ X0, 0x327105C
	0x03270E78 ADRP X20, 0xE83000
	0x03270E7C ADRP X24, 0xEB3000
	0x03270E80 ADRP X25, 0xEB3000
	0x03270E84 LDR X20, [X20 + 0xE18]
	0x03270E88 LDR X24, [X24 + 0xC70]
	0x03270E8C LDR X25, [X25 + 0xA40]
	0x03270E90 MOV X23, X31
	0x03270E94 LDR X8, [X19]
	0x03270E98 LDR X1, [X20]
	0x03270E9C LDRH W9, [X8 + 0x12E]
	0x03270EA0 CBZ X9, 0x3270EC4
	0x03270EA4 LDR X10, [X8 + 0xB0]
	0x03270EA8 ADD X10, X10, 0x8
	0x03270EAC LDUR X11, [X10 - 0x8]
	0x03270EB0 CMP X11, X1
	0x03270EB4 B.EQ 0x3270ED4
	0x03270EB8 SUBS X9, X9, 0x1
	0x03270EBC ADD X10, X10, 0x10
	0x03270EC0 B.NE 0x3270EAC
	0x03270EC4 MOV X0, X19
	0x03270EC8 MOV W2, W31
	0x03270ECC BL 0x1C5C788
	0x03270ED0 B 0x3270EE0
	0x03270ED4 LDRSW X9, [X10]
	0x03270ED8 ADD X8, X8, X9, 0x4, LSL
	0x03270EDC ADD X0, X8, 0x138
	0x03270EE0 LDP X8, X1, [X0]
	0x03270EE4 MOV X0, X19
	0x03270EE8 BLR X8
	0x03270EEC TBZ X0, 0x0, 0x3270F88
	0x03270EF0 LDR X8, [X19]
	0x03270EF4 LDR X1, [X24]
	0x03270EF8 LDRH W9, [X8 + 0x12E]
	0x03270EFC CBZ X9, 0x3270F20
	0x03270F00 LDR X10, [X8 + 0xB0]
	0x03270F04 ADD X10, X10, 0x8
	0x03270F08 LDUR X11, [X10 - 0x8]
	0x03270F0C CMP X11, X1
	0x03270F10 B.EQ 0x3270F30
	0x03270F14 SUBS X9, X9, 0x1
	0x03270F18 ADD X10, X10, 0x10
	0x03270F1C B.NE 0x3270F08
	0x03270F20 MOV X0, X19
	0x03270F24 MOV W2, W31
	0x03270F28 BL 0x1C5C788
	0x03270F2C B 0x3270F3C
	0x03270F30 LDRSW X9, [X10]
	0x03270F34 ADD X8, X8, X9, 0x4, LSL
	0x03270F38 ADD X0, X8, 0x138
	0x03270F3C LDP X8, X1, [X0]
	0x03270F40 MOV X0, X19
	0x03270F44 BLR X8
	0x03270F48 MOV X21, X0
	0x03270F4C CBZ X0, 0x3270F7C
	0x03270F50 LDR X9, [X21]
	0x03270F54 LDR X8, [X25]
	0x03270F58 LDRB W11, [X9 + 0x130]
	0x03270F5C LDRB W10, [X8 + 0x130]
	0x03270F60 CMP W11, W10
	0x03270F64 B.CC 0x3270F7C
	0x03270F68 LDR X9, [X9 + 0xC8]
	0x03270F6C ADD X9, X9, X10, 0x3, LSL
	0x03270F70 LDUR X9, [X9 - 0x8]
	0x03270F74 CMP X9, X8
	0x03270F78 B.EQ 0x3270F98
	0x03270F7C CMP X23, 0x0
	0x03270F80 CSEL X23, X21, X23, EQ
	0x03270F84 B 0x3270E94
	0x03270F88 MOV X20, X31
	0x03270F8C MOV X21, X23
	0x03270F90 CBNZ X19, 0x3270FA0
	0x03270F94 B 0x3270FF8
	0x03270F98 MOV X20, X31
	0x03270F9C CBZ X19, 0x3270FF8
	0x03270FA0 LDR X8, [X19]
	0x03270FA4 LDR X1, [X22]
	0x03270FA8 LDRH W9, [X8 + 0x12E]
	0x03270FAC CBZ X9, 0x3270FD0
	0x03270FB0 LDR X10, [X8 + 0xB0]
	0x03270FB4 ADD X10, X10, 0x8
	0x03270FB8 LDUR X11, [X10 - 0x8]
	0x03270FBC CMP X11, X1
	0x03270FC0 B.EQ 0x3270FE0
	0x03270FC4 SUBS X9, X9, 0x1
	0x03270FC8 ADD X10, X10, 0x10
	0x03270FCC B.NE 0x3270FB8
	0x03270FD0 MOV X0, X19
	0x03270FD4 MOV W2, W31
	0x03270FD8 BL 0x1C5C788
	0x03270FDC B 0x3270FEC
	0x03270FE0 LDRSW X9, [X10]
	0x03270FE4 ADD X8, X8, X9, 0x4, LSL
	0x03270FE8 ADD X0, X8, 0x138
	0x03270FEC LDP X8, X1, [X0]
	0x03270FF0 MOV X0, X19
	0x03270FF4 BLR X8
	0x03270FF8 CBNZ X20, 0x3271060
	0x03270FFC MOV X0, X21
	0x03271000 LDP X20, X19, [X31 + 0x30]
	0x03271004 LDP X22, X21, [X31 + 0x20]
	0x03271008 LDP X24, X23, [X31 + 0x10]
	0x0327100C LDP X30, X25, [X31], #0x40
	0x03271010 RET
	0x03271014 ADRP X0, 0xE87000
	0x03271018 LDR X0, [X0 + 0x528]
	0x0327101C BL 0x1C16D08
	0x03271020 BL 0x1C16F10
	0x03271024 MOV X19, X0
	0x03271028 ADRP X0, 0xEB2000
	0x0327102C LDR X0, [X0 + 0xC78]
	0x03271030 BL 0x1C16D08
	0x03271034 MOV X1, X0
	0x03271038 MOV X0, X19
	0x0327103C MOV X2, X31
	0x03271040 BL 0x330E100
	0x03271044 ADRP X0, 0xEB2000
	0x03271048 LDR X0, [X0 + 0xC80]
	0x0327104C BL 0x1C16D08
	0x03271050 MOV X1, X0
	0x03271054 MOV X0, X19
	0x03271058 BL 0x1C16DEC
	0x0327105C BL 0x1C16F20
	0x03271060 MOV X0, X20
	0x03271064 BL 0x1C16F18
	0x03271068 MOV X21, X0
	0x0327106C MOV X23, X31
	0x03271070 B 0x327107C
	0x03271074 B 0x3271078
	0x03271078 MOV X21, X0
	0x0327107C CMP W1, 0x1
	0x03271080 B.NE 0x3271098
	0x03271084 MOV X0, X21
	0x03271088 BL 0x3EB1AD0
	0x0327108C LDR X20, [X0]
	0x03271090 BL 0x3EB1AE0
	0x03271094 B 0x3270F8C
	0x03271098 MOV X20, X31
	0x0327109C B 0x32710A4
	0x032710A0 MOV X21, X0
	0x032710A4 CBZ X19, 0x3271100
	0x032710A8 LDR X8, [X19]
	0x032710AC LDR X1, [X22]
	0x032710B0 LDRH W9, [X8 + 0x12E]
	0x032710B4 CBZ X9, 0x32710D8
	0x032710B8 LDR X10, [X8 + 0xB0]
	0x032710BC ADD X10, X10, 0x8
	0x032710C0 LDUR X11, [X10 - 0x8]
	0x032710C4 CMP X11, X1
	0x032710C8 B.EQ 0x32710E8
	0x032710CC SUBS X9, X9, 0x1
	0x032710D0 ADD X10, X10, 0x10
	0x032710D4 B.NE 0x32710C0
	0x032710D8 MOV X0, X19
	0x032710DC MOV W2, W31
	0x032710E0 BL 0x1C5C788
	0x032710E4 B 0x32710F4
	0x032710E8 LDRSW X9, [X10]
	0x032710EC ADD X8, X8, X9, 0x4, LSL
	0x032710F0 ADD X0, X8, 0x138
	0x032710F4 LDP X8, X1, [X0]
	0x032710F8 MOV X0, X19
	0x032710FC BLR X8
	0x03271100 CBNZ X20, 0x327110C
	0x03271104 MOV X0, X21
	0x03271108 BL 0x1D2C690
	0x0327110C MOV X0, X20
	0x03271110 BL 0x1C16F18
	0x03271114 BL 0x1990590
	0x03271118 STR X30, [X31 - 0x20]!
	0x0327111C STP X20, X19, [X31 + 0x10]
	0x03271120 ADRP X20, 0x116B000
	0x03271124 ADRP X19, 0xEB2000
	0x03271128 LDRB W8, [X20 + 0x5B9]
	0x0327112C LDR X19, [X19 + 0xA28]
	0x03271130 TBNZ X8, 0x0, 0x3271148
	0x03271134 ADRP X0, 0xEB2000
	0x03271138 LDR X0, [X0 + 0xA28]
	0x0327113C BL 0x1C16CF4
	0x03271140 MOVZ W8, 0x1
	0x03271144 STRB W8, [X20 + 0x5B9]
	0x03271148 LDR X0, [X19]
	0x0327114C LDR W8, [X0 + 0xE0]
	0x03271150 CBNZ W8, 0x327115C
	0x03271154 BL 0x1C16DFC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x116D000
	007 Move W8, [X21+1458]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {40}
	014 Move X0, 0xEB0000
	015 Move X0, [X0+208]
	016 Call 0x1C17CF4
	017 Move X0, 0xE8D000
	018 Move X0, [X0+2536]
	019 Call 0x1C17CF4
	020 Move X0, 0xE84000
	021 Move X0, [X0+3584]
	022 Call 0x1C17CF4
	023 Move X0, 0xEB4000
	024 Move X0, [X0+2872]
	025 Call 0x1C17CF4
	026 Move X0, 0xEB4000
	027 Move X0, [X0+3128]
	028 Call 0x1C17CF4
	029 Move X0, 0xEB4000
	030 Move X0, [X0+3136]
	031 Call 0x1C17CF4
	032 Move X0, 0xEB4000
	033 Move X0, [X0+2864]
	034 Call 0x1C17CF4
	035 Move X0, 0xE8C000
	036 Move X0, [X0+1368]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X21+1458], W8
	040 Move X0, X20
	041 Move X1, X31
	042 Call String.IsNullOrEmpty, X0
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {146}
	047 Move X8, 0xE8D000
	048 Move X8, [X8+2536]
	049 Move X21, 0xE8C000
	050 Move X22, 0xEB0000
	051 Move X0, [X8]
	052 Move W8, [X0+224]
	053 Move X21, [X21+1368]
	054 Move X22, [X22+208]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X0, X20
	059 Move X1, X31
	060 Call Convert.FromBase64String, X0
	061 Move X8, [X21]
	062 Move X21, X0
	063 Move X0, X8
	064 Call 0x1C17F10
	065 Move X1, X21
	066 Move X2, X31
	067 Move X20, X0
	068 Call MemoryStream..ctor, X0, X1
	069 Move X0, [X22]
	070 Call 0x1C17F10
	071 Move X21, X0
	072 Move X1, X31
	073 Call BinaryFormatter..ctor, X0
	074 Compare X21, 0
	075 JumpIfEqual {170}
	076 Move X0, X21
	077 Move X1, X20
	078 Move X2, X31
	079 Move W3, W31
	080 Move X4, X31
	081 Call BinaryFormatter.Deserialize, X0, X1, X2, X3
	082 Compare X0, 0
	083 JumpIfEqual {171}
	084 Move X8, 0xEB4000
	085 Move X8, [X8+2864]
	086 Move X9, [X0]
	087 Move X1, [X8]
	088 Move W10, [X9+304]
	089 Move W8, [X1+304]
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X10, [X9+200]
	092 Subtract X9, X8, 1
	093 Move X10, [X10]
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move [X19+24], X0
	096 Move X10, [X0]
	097 Move W11, [X10+304]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X8, [X10+200]
	100 Move X8, [X8]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X22, 0xEB4000
	103 Move X22, [X22+3136]
	104 Move W21, W31
	105 Move W8, [X0+24]
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move X2, [X22]
	108 Move W1, W21
	109 Call List`1<Object>.get_Item, X0, X1
	110 Compare X0, 0
	111 JumpIfEqual {165}
	112 Move [X0+80], X19
	113 Move X0, [X19+24]
	114 Add W21, W21, 1
	115 Compare X0, 0
	116 JumpIfNotEqual {105}
	117 Call 0x1C17F20
	118 Move X21, X31
	119 Compare X20, 0
	120 JumpIfEqual {144}
	121 Move X10, 0xE84000
	122 Move X8, [X20]
	123 Move X10, [X10+3584]
	124 NotImplemented "Instruction LDRH not yet implemented."
	125 Move X1, [X10]
	126 Compare X9, 0
	127 JumpIfEqual {134}
	128 Move X10, [X8+176]
	129 Add X10, X10, 8
	130 NotImplemented "Instruction LDUR not yet implemented."
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Subtract X9, X9, 1
	133 Add X10, X10, 16
	134 Move X0, X20
	135 Move W2, W31
	136 Call 0x1C5D788
	137 NotImplemented "Instruction LDRSW not yet implemented."
	138 Add X8, X8, X9
	139 Add X0, X8, 312
	140 Move X8, [X0]
	141 Move X1, [X0+8]
	142 Move X0, X20
	143 NotImplemented "Instruction BLR not yet implemented."
	144 Compare X21, 0
	145 JumpIfNotEqual {168}
	146 Move X8, [X19+24]
	147 Compare X8, 0
	148 JumpIfNotEqual {159}
	149 Move X8, 0xEB3000
	150 Move X8, [X8+2864]
	151 Move X0, [X8]
	152 Call 0x1C17F10
	153 Move X8, 0xEB3000
	154 Move X8, [X8+2872]
	155 Move X20, X0
	156 Move X1, [X8]
	157 Call List`1<Object>..ctor, X0
	158 Move [X19+24], X20
	159 Move X20, [X31+32]
	160 Move X19, [X31+40]
	161 Move X22, [X31+16]
	162 Move X21, [X31+24]
	163 Move X30, [X31+48]
	164 Return 
	165 Call 0x1C17F20
	166 Call 0x1C181E0
	167 Call 0x1C181E0
	168 Move X0, X21
	169 Call 0x1C17F18
	170 Call 0x1C17F20
	171 Move [X19+24], X31
	172 Move X22, X0
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Move X0, X22
	175 Call 0x3EB2AD0
	176 Move X21, [X0]
	177 Call 0x3EB2AE0
	178 Move X21, X31
	179 Move X22, X0
	180 Compare X20, 0
	181 JumpIfEqual {205}
	182 Move X10, 0xE83000
	183 Move X8, [X20]
	184 Move X10, [X10+3584]
	185 NotImplemented "Instruction LDRH not yet implemented."
	186 Move X1, [X10]
	187 Compare X9, 0
	188 JumpIfEqual {195}
	189 Move X10, [X8+176]
	190 Add X10, X10, 8
	191 NotImplemented "Instruction LDUR not yet implemented."
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Subtract X9, X9, 1
	194 Add X10, X10, 16
	195 Move X0, X20
	196 Move W2, W31
	197 Call 0x1C5D788
	198 NotImplemented "Instruction LDRSW not yet implemented."
	199 Add X8, X8, X9
	200 Add X0, X8, 312
	201 Move X8, [X0]
	202 Move X1, [X0+8]
	203 Move X0, X20
	204 NotImplemented "Instruction BLR not yet implemented."
	205 Compare X21, 0
	206 JumpIfNotEqual {209}
	207 Move X0, X22
	208 Call 0x1D2D690
	209 Move X0, X21
	210 Call 0x1C17F18
	211 Call 0x1991590

Method: System.String SerializeClaims()

Disassembly:
	0x03270AF4 LDRH W9, [X8 + 0x12E]
	0x03270AF8 LDR X1, [X10]
	0x03270AFC CBZ X9, 0x3270B20
	0x03270B00 LDR X10, [X8 + 0xB0]
	0x03270B04 ADD X10, X10, 0x8
	0x03270B08 LDUR X11, [X10 - 0x8]
	0x03270B0C CMP X11, X1
	0x03270B10 B.EQ 0x3270B30
	0x03270B14 SUBS X9, X9, 0x1
	0x03270B18 ADD X10, X10, 0x10
	0x03270B1C B.NE 0x3270B08
	0x03270B20 MOV X0, X19
	0x03270B24 MOV W2, W31
	0x03270B28 BL 0x1C5C788
	0x03270B2C B 0x3270B3C
	0x03270B30 LDRSW X9, [X10]
	0x03270B34 ADD X8, X8, X9, 0x4, LSL
	0x03270B38 ADD X0, X8, 0x138
	0x03270B3C LDP X8, X1, [X0]
	0x03270B40 MOV X0, X19
	0x03270B44 BLR X8
	0x03270B48 LDR X8, [X31 + 0x18]
	0x03270B4C MOVZ W9, 0x2
	0x03270B50 STR X0, [X8 + 0x18]
	0x03270B54 MOVZ W0, 0x1
	0x03270B58 STR W9, [X8 + 0x10]
	0x03270B5C LDP X20, X19, [X31 + 0x30]
	0x03270B60 LDP X30, X21, [X31 + 0x20]
	0x03270B64 ADD X31, X31, 0x40
	0x03270B68 RET
	0x03270B6C BL 0x1C16F20
	0x03270B70 BL 0x1C16F20
	0x03270B74 BL 0x1C16F20
	0x03270B78 BL 0x1C16F20
	0x03270B7C BL 0x1C16F20
	0x03270B80 B 0x3270BA8
	0x03270B84 B 0x3270BA8
	0x03270B88 B 0x3270BA8
	0x03270B8C B 0x3270BA8
	0x03270B90 B 0x3270BA8
	0x03270B94 B 0x3270BA8
	0x03270B98 B 0x3270BA8
	0x03270B9C B 0x3270BA8
	0x03270BA0 B 0x3270BA8
	0x03270BA4 B 0x3270BA8
	0x03270BA8 CMP W1, 0x1
	0x03270BAC B.NE 0x3270BDC
	0x03270BB0 BL 0x3EB1AD0
	0x03270BB4 LDR X19, [X0]
	0x03270BB8 STR X19, [X31 + 0x8]
	0x03270BBC BL 0x3EB1AE0
	0x03270BC0 CBZ X19, 0x3270968
	0x03270BC4 ADD X8, X31, 0x8
	0x03270BC8 ADD X0, X8, 0x8
	0x03270BCC BL 0x1BB546C
	0x03270BD0 MOV X0, X19
	0x03270BD4 BL 0x1C16F18
	0x03270BD8 CBNZ X19, 0x3270BE0
	0x03270BDC BL 0x1D2C690
	0x03270BE0 LDR X0, [X31 + 0x18]
	0x03270BE4 LDR W8, [X0 + 0x10]
	0x03270BE8 CMP W8, 0x2
	0x03270BEC B.EQ 0x3270BF8
	0x03270BF0 ADDS W31, W8, 0x3
	0x03270BF4 B.NE 0x3270BFC
	0x03270BF8 BL 0x3270C08
	0x03270BFC MOV X0, X19
	0x03270C00 BL 0x1C16F18
	0x03270C04 BL 0x1990590
	0x03270C08 STR X30, [X31 - 0x20]!
	0x03270C0C STP X20, X19, [X31 + 0x10]
	0x03270C10 ADRP X19, 0x116C000
	0x03270C14 LDRB W8, [X19 + 0x5B6]
	0x03270C18 MOV X20, X0
	0x03270C1C TBNZ X8, 0x0, 0x3270C34
	0x03270C20 ADRP X0, 0xE83000
	0x03270C24 LDR X0, [X0 + 0xE00]
	0x03270C28 BL 0x1C16CF4
	0x03270C2C MOVZ W8, 0x1
	0x03270C30 STRB W8, [X19 + 0x5B6]
	0x03270C34 LDR X19, [X20 + 0x38]
	0x03270C38 MOVN W8, 0x0
	0x03270C3C STR W8, [X20 + 0x10]
	0x03270C40 CBZ X19, 0x3270C8C
	0x03270C44 ADRP X10, 0xE83000
	0x03270C48 LDR X8, [X19]
	0x03270C4C LDR X10, [X10 + 0xE00]
	0x03270C50 LDRH W9, [X8 + 0x12E]
	0x03270C54 LDR X1, [X10]
	0x03270C58 CBZ X9, 0x3270C7C
	0x03270C5C LDR X10, [X8 + 0xB0]
	0x03270C60 ADD X10, X10, 0x8
	0x03270C64 LDUR X11, [X10 - 0x8]
	0x03270C68 CMP X11, X1
	0x03270C6C B.EQ 0x3270C98
	0x03270C70 SUBS X9, X9, 0x1
	0x03270C74 ADD X10, X10, 0x10
	0x03270C78 B.NE 0x3270C64
	0x03270C7C MOV X0, X19
	0x03270C80 MOV W2, W31
	0x03270C84 BL 0x1C5C788
	0x03270C88 B 0x3270CA4
	0x03270C8C LDP X20, X19, [X31 + 0x10]
	0x03270C90 LDR X30, [X31], #0x20
	0x03270C94 RET
	0x03270C98 LDRSW X9, [X10]
	0x03270C9C ADD X8, X8, X9, 0x4, LSL
	0x03270CA0 ADD X0, X8, 0x138
	0x03270CA4 LDP X2, X1, [X0]
	0x03270CA8 MOV X0, X19
	0x03270CAC LDP X20, X19, [X31 + 0x10]
	0x03270CB0 LDR X30, [X31], #0x20
	0x03270CB4 BR X2
	0x03270CB8 LDR X0, [X0 + 0x18]
	0x03270CBC RET
	0x03270CC0 STP X30, X19, [X31 - 0x10]!
	0x03270CC4 ADRP X0, 0xE83000
	0x03270CC8 LDR X0, [X0 + 0xB40]
	0x03270CCC BL 0x1C16D08
	0x03270CD0 BL 0x1C16F10
	0x03270CD4 MOV X1, X31
	0x03270CD8 MOV X19, X0
	0x03270CDC BL 0x3380310
	0x03270CE0 ADRP X0, 0xEB3000
	0x03270CE4 LDR X0, [X0 + 0xC60]
	0x03270CE8 BL 0x1C16D08
	0x03270CEC MOV X1, X0
	0x03270CF0 MOV X0, X19
	0x03270CF4 BL 0x1C16DEC
	0x03270CF8 LDR X0, [X0 + 0x18]
	0x03270CFC RET
	0x03270D00 STR X30, [X31 - 0x20]!
	0x03270D04 STP X20, X19, [X31 + 0x10]
	0x03270D08 ADRP X20, 0x116C000
	0x03270D0C LDRB W8, [X20 + 0x5B7]
	0x03270D10 MOV X19, X0
	0x03270D14 TBNZ X8, 0x0, 0x3270D2C
	0x03270D18 ADRP X0, 0xEB3000
	0x03270D1C LDR X0, [X0 + 0xC08]
	0x03270D20 BL 0x1C16CF4
	0x03270D24 MOVZ W8, 0x1
	0x03270D28 STRB W8, [X20 + 0x5B7]
	0x03270D2C LDR W8, [X19 + 0x10]
	0x03270D30 ADDS W31, W8, 0x2
	0x03270D34 B.NE 0x3270D54
	0x03270D38 LDR W20, [X19 + 0x20]
	0x03270D3C MOV X0, X31
	0x03270D40 BL 0x33C151C
	0x03270D44 CMP W20, W0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x116D000
	007 Move X19, 0xE8C000
	008 Move X21, 0xEB0000
	009 Move W8, [X22+1459]
	010 Move X19, [X19+1368]
	011 Move X21, [X21+208]
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0xEB0000
	018 Move X0, [X0+208]
	019 Call 0x1C17CF4
	020 Move X0, 0xE8D000
	021 Move X0, [X0+2536]
	022 Call 0x1C17CF4
	023 Move X0, 0xE84000
	024 Move X0, [X0+3584]
	025 Call 0x1C17CF4
	026 Move X0, 0xE8C000
	027 Move X0, [X0+1368]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+1459], W8
	031 Move X0, [X19]
	032 Move X22, 0xE84000
	033 Move X22, [X22+3584]
	034 Call 0x1C17F10
	035 Move X1, X31
	036 Move X19, X0
	037 Call MemoryStream..ctor, X0
	038 Move X0, [X21]
	039 Call 0x1C17F10
	040 Move X21, X0
	041 Move X1, X31
	042 Call BinaryFormatter..ctor, X0
	043 Compare X21, 0
	044 JumpIfEqual {112}
	045 Move X2, [X20+24]
	046 Move X0, X21
	047 Move X1, X19
	048 Move X3, X31
	049 Move W4, W31
	050 Move X5, X31
	051 Call BinaryFormatter.Serialize, X0, X1, X2, X3, X4
	052 Compare X19, 0
	053 JumpIfEqual {113}
	054 Move X8, [X19]
	055 Move X1, [X8+960]
	056 Move X9, [X8+952]
	057 Move X0, X19
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move X8, [X19]
	060 Move X20, X0
	061 Move X9, [X8+488]
	062 Move X1, [X8+496]
	063 Move X0, X19
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Move X8, 0xE8D000
	066 Move X8, [X8+2536]
	067 Move X21, X0
	068 Move X0, [X8]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move X0, X20
	074 Move W1, W31
	075 Move W2, W21
	076 Move X3, X31
	077 Call Convert.ToBase64String, X0, X1, X2
	078 Move X21, X0
	079 Move X20, X31
	080 Move X8, [X19]
	081 Move X1, [X22]
	082 NotImplemented "Instruction LDRH not yet implemented."
	083 Compare X9, 0
	084 JumpIfEqual {91}
	085 Move X10, [X8+176]
	086 Add X10, X10, 8
	087 NotImplemented "Instruction LDUR not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Subtract X9, X9, 1
	090 Add X10, X10, 16
	091 Move X0, X19
	092 Move W2, W31
	093 Call 0x1C5D788
	094 NotImplemented "Instruction LDRSW not yet implemented."
	095 Add X8, X8, X9
	096 Add X0, X8, 312
	097 Move X8, [X0]
	098 Move X1, [X0+8]
	099 Move X0, X19
	100 NotImplemented "Instruction BLR not yet implemented."
	101 Compare X20, 0
	102 JumpIfNotEqual {110}
	103 Move X0, X21
	104 Move X20, [X31+32]
	105 Move X19, [X31+40]
	106 Move X22, [X31+16]
	107 Move X21, [X31+24]
	108 Move X30, [X31+48]
	109 Return X0
	110 Move X0, X20
	111 Call 0x1C17F18
	112 Call 0x1C17F20
	113 Call 0x1C17F20
	114 Move X21, X0
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X0, X21
	117 Call 0x3EB2AD0
	118 Move X20, [X0]
	119 Call 0x3EB2AE0
	120 Move X21, X31
	121 Compare X19, 0
	122 JumpIfNotEqual {80}
	123 Move X20, X31
	124 Move X21, X0
	125 Compare X19, 0
	126 JumpIfEqual {148}
	127 Move X8, [X19]
	128 Move X1, [X22]
	129 NotImplemented "Instruction LDRH not yet implemented."
	130 Compare X9, 0
	131 JumpIfEqual {138}
	132 Move X10, [X8+176]
	133 Add X10, X10, 8
	134 NotImplemented "Instruction LDUR not yet implemented."
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Subtract X9, X9, 1
	137 Add X10, X10, 16
	138 Move X0, X19
	139 Move W2, W31
	140 Call 0x1C5D788
	141 NotImplemented "Instruction LDRSW not yet implemented."
	142 Add X8, X8, X9
	143 Add X0, X8, 312
	144 Move X8, [X0]
	145 Move X1, [X0+8]
	146 Move X0, X19
	147 NotImplemented "Instruction BLR not yet implemented."
	148 Compare X20, 0
	149 JumpIfNotEqual {152}
	150 Move X0, X21
	151 Call 0x1D2D690
	152 Move X0, X20
	153 Call 0x1C17F18
	154 Call 0x1991590

Method: System.Boolean IsCircular(System.Security.Claims.ClaimsIdentity subject)

Disassembly:
	0x0326F204 LDR X1, [X10]
	0x0326F208 CBZ X9, 0x326F22C
	0x0326F20C LDR X10, [X8 + 0xB0]
	0x0326F210 ADD X10, X10, 0x8
	0x0326F214 LDUR X11, [X10 - 0x8]
	0x0326F218 CMP X11, X1
	0x0326F21C B.EQ 0x326F23C
	0x0326F220 SUBS X9, X9, 0x1
	0x0326F224 ADD X10, X10, 0x10
	0x0326F228 B.NE 0x326F214
	0x0326F22C MOV X0, X23
	0x0326F230 MOV W2, W31
	0x0326F234 BL 0x1C5C788
	0x0326F238 B 0x326F248
	0x0326F23C LDRSW X9, [X10]

ISIL:
	001 Move [X31-16], X30
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Compare X1, 0
	004 JumpIfEqual {14}
	005 Move X1, [X1+64]
	006 Compare X1, 0
	007 JumpIfEqual {9}
	008 NotImplemented "Instruction CMP not yet implemented."
	009 NotImplemented "Instruction CMP not yet implemented."
	010 NotImplemented "Instruction CSET not yet implemented."
	011 Move W0, 1
	012 Move X30, [X31+16]
	013 Return X0
	014 Call 0x1C17F20

Method: System.Void Deserialize(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context, System.Boolean useContext)

Disassembly:
	0x0326FAD8 BL 0x326FAF4
	0x0326FADC LDUR V0, [X19 + 0x28]
	0x0326FAE0 STR X0, [X19 + 0x70]
	0x0326FAE4 STR V0, [X19 + 0x6]
	0x0326FAE8 LDP X20, X19, [X31 + 0x10]
	0x0326FAEC LDP X30, X21, [X31], #0x20
	0x0326FAF0 RET
	0x0326FAF4 STR X30, [X31 - 0x30]!
	0x0326FAF8 STP X22, X21, [X31 + 0x10]
	0x0326FAFC STP X20, X19, [X31 + 0x20]
	0x0326FB00 ADRP X22, 0x116D000
	0x0326FB04 ADRP X19, 0xE8C000
	0x0326FB08 ADRP X21, 0xEB0000
	0x0326FB0C LDRB W8, [X22 + 0x5B3]
	0x0326FB10 LDR X19, [X19 + 0x558]
	0x0326FB14 LDR X21, [X21 + 0xD0]
	0x0326FB18 MOV X20, X0
	0x0326FB1C TBNZ X8, 0x0, 0x326FB58
	0x0326FB20 ADRP X0, 0xEB0000
	0x0326FB24 LDR X0, [X0 + 0xD0]
	0x0326FB28 BL 0x1C16CF4
	0x0326FB2C ADRP X0, 0xE8D000
	0x0326FB30 LDR X0, [X0 + 0x9E8]
	0x0326FB34 BL 0x1C16CF4
	0x0326FB38 ADRP X0, 0xE84000
	0x0326FB3C LDR X0, [X0 + 0xE00]
	0x0326FB40 BL 0x1C16CF4
	0x0326FB44 ADRP X0, 0xE8C000
	0x0326FB48 LDR X0, [X0 + 0x558]
	0x0326FB4C BL 0x1C16CF4
	0x0326FB50 MOVZ W8, 0x1
	0x0326FB54 STRB W8, [X22 + 0x5B3]
	0x0326FB58 LDR X0, [X19]
	0x0326FB5C ADRP X22, 0xE84000
	0x0326FB60 LDR X22, [X22 + 0xE00]
	0x0326FB64 BL 0x1C16F10
	0x0326FB68 MOV X1, X31
	0x0326FB6C MOV X19, X0
	0x0326FB70 BL 0x32E23B4
	0x0326FB74 LDR X0, [X21]
	0x0326FB78 BL 0x1C16F10
	0x0326FB7C MOV X21, X0
	0x0326FB80 MOV X1, X31
	0x0326FB84 BL 0x32B0928
	0x0326FB88 CBZ X21, 0x326FC84
	0x0326FB8C LDR X2, [X20 + 0x18]
	0x0326FB90 MOV X0, X21
	0x0326FB94 MOV X1, X19
	0x0326FB98 MOV X3, X31
	0x0326FB9C MOV W4, W31
	0x0326FBA0 MOV X5, X31
	0x0326FBA4 BL 0x32B1108
	0x0326FBA8 CBZ X19, 0x326FC88
	0x0326FBAC LDR X8, [X19]
	0x0326FBB0 LDR X1, [X8 + 0x3C0]
	0x0326FBB4 LDR X9, [X8 + 0x3B8]
	0x0326FBB8 MOV X0, X19
	0x0326FBBC BLR X9
	0x0326FBC0 LDR X8, [X19]
	0x0326FBC4 MOV X20, X0
	0x0326FBC8 LDP X9, X1, [X8 + 0x1E8]
	0x0326FBCC MOV X0, X19
	0x0326FBD0 BLR X9
	0x0326FBD4 ADRP X8, 0xE8D000
	0x0326FBD8 LDR X8, [X8 + 0x9E8]
	0x0326FBDC MOV X21, X0
	0x0326FBE0 LDR X0, [X8]
	0x0326FBE4 LDR W8, [X0 + 0xE0]
	0x0326FBE8 CBNZ W8, 0x326FBF0
	0x0326FBEC BL 0x1C16DFC
	0x0326FBF0 MOV X0, X20
	0x0326FBF4 MOV W1, W31
	0x0326FBF8 MOV W2, W21
	0x0326FBFC MOV X3, X31
	0x0326FC00 BL 0x3322804
	0x0326FC04 MOV X21, X0
	0x0326FC08 MOV X20, X31
	0x0326FC0C LDR X8, [X19]
	0x0326FC10 LDR X1, [X22]
	0x0326FC14 LDRH W9, [X8 + 0x12E]
	0x0326FC18 CBZ X9, 0x326FC3C
	0x0326FC1C LDR X10, [X8 + 0xB0]
	0x0326FC20 ADD X10, X10, 0x8
	0x0326FC24 LDUR X11, [X10 - 0x8]
	0x0326FC28 CMP X11, X1
	0x0326FC2C B.EQ 0x326FC4C
	0x0326FC30 SUBS X9, X9, 0x1
	0x0326FC34 ADD X10, X10, 0x10
	0x0326FC38 B.NE 0x326FC24
	0x0326FC3C MOV X0, X19
	0x0326FC40 MOV W2, W31
	0x0326FC44 BL 0x1C5C788
	0x0326FC48 B 0x326FC58
	0x0326FC4C LDRSW X9, [X10]
	0x0326FC50 ADD X8, X8, X9, 0x4, LSL
	0x0326FC54 ADD X0, X8, 0x138
	0x0326FC58 LDP X8, X1, [X0]
	0x0326FC5C MOV X0, X19
	0x0326FC60 BLR X8
	0x0326FC64 CBNZ X20, 0x326FC7C
	0x0326FC68 MOV X0, X21
	0x0326FC6C LDP X20, X19, [X31 + 0x20]
	0x0326FC70 LDP X22, X21, [X31 + 0x10]
	0x0326FC74 LDR X30, [X31], #0x30
	0x0326FC78 RET
	0x0326FC7C MOV X0, X20
	0x0326FC80 BL 0x1C16F18
	0x0326FC84 BL 0x1C16F20
	0x0326FC88 BL 0x1C16F20
	0x0326FC8C B 0x326FCA0
	0x0326FC90 B 0x326FCA0
	0x0326FC94 B 0x326FCA0
	0x0326FC98 B 0x326FCA0
	0x0326FC9C B 0x326FCA0
	0x0326FCA0 MOV X21, X0
	0x0326FCA4 CMP W1, 0x1
	0x0326FCA8 B.NE 0x326FCC8
	0x0326FCAC MOV X0, X21
	0x0326FCB0 BL 0x3EB1AD0
	0x0326FCB4 LDR X20, [X0]
	0x0326FCB8 BL 0x3EB1AE0
	0x0326FCBC MOV X21, X31
	0x0326FCC0 CBNZ X19, 0x326FC0C
	0x0326FCC4 B 0x326FC64
	0x0326FCC8 MOV X20, X31
	0x0326FCCC B 0x326FCD4
	0x0326FCD0 MOV X21, X0
	0x0326FCD4 CBZ X19, 0x326FD30
	0x0326FCD8 LDR X8, [X19]
	0x0326FCDC LDR X1, [X22]
	0x0326FCE0 LDRH W9, [X8 + 0x12E]
	0x0326FCE4 CBZ X9, 0x326FD08
	0x0326FCE8 LDR X10, [X8 + 0xB0]
	0x0326FCEC ADD X10, X10, 0x8
	0x0326FCF0 LDUR X11, [X10 - 0x8]
	0x0326FCF4 CMP X11, X1
	0x0326FCF8 B.EQ 0x326FD18
	0x0326FCFC SUBS X9, X9, 0x1
	0x0326FD00 ADD X10, X10, 0x10
	0x0326FD04 B.NE 0x326FCF0
	0x0326FD08 MOV X0, X19
	0x0326FD0C MOV W2, W31
	0x0326FD10 BL 0x1C5C788
	0x0326FD14 B 0x326FD24
	0x0326FD18 LDRSW X9, [X10]
	0x0326FD1C ADD X8, X8, X9, 0x4, LSL
	0x0326FD20 ADD X0, X8, 0x138
	0x0326FD24 LDP X8, X1, [X0]
	0x0326FD28 MOV X0, X19
	0x0326FD2C BLR X8
	0x0326FD30 CBNZ X20, 0x326FD3C
	0x0326FD34 MOV X0, X21
	0x0326FD38 BL 0x1D2C690
	0x0326FD3C MOV X0, X20
	0x0326FD40 BL 0x1C16F18
	0x0326FD44 BL 0x1990590
	0x0326FD48 STP X30, X21, [X31 - 0x20]!
	0x0326FD4C STP X20, X19, [X31 + 0x10]
	0x0326FD50 ADRP X20, 0x116D000
	0x0326FD54 ADRP X21, 0xEB4000
	0x0326FD58 LDRB W8, [X20 + 0x5AF]
	0x0326FD5C LDR X21, [X21 + 0xC30]
	0x0326FD60 MOV X19, X0
	0x0326FD64 TBNZ X8, 0x0, 0x326FD94
	0x0326FD68 ADRP X0, 0xEB4000
	0x0326FD6C LDR X0, [X0 + 0xC30]
	0x0326FD70 BL 0x1C16CF4
	0x0326FD74 ADRP X0, 0xEB4000
	0x0326FD78 LDR X0, [X0 + 0xB58]
	0x0326FD7C BL 0x1C16CF4
	0x0326FD80 ADRP X0, 0xEB4000
	0x0326FD84 LDR X0, [X0 + 0xB50]
	0x0326FD88 BL 0x1C16CF4
	0x0326FD8C MOVZ W8, 0x1
	0x0326FD90 STRB W8, [X20 + 0x5AF]
	0x0326FD94 LDR X1, [X21]
	0x0326FD98 MOV X0, X19
	0x0326FD9C BL 0x1C16E00
	0x0326FDA0 CBNZ X0, 0x326FE10
	0x0326FDA4 LDR X0, [X19 + 0x70]
	0x0326FDA8 MOV X1, X31
	0x0326FDAC BL 0x32277A8
	0x0326FDB0 TBNZ X0, 0x0, 0x326FDC4
	0x0326FDB4 LDR X1, [X19 + 0x70]
	0x0326FDB8 MOV X0, X19
	0x0326FDBC BL 0x326FE1C
	0x0326FDC0 STR X31, [X19 + 0x70]
	0x0326FDC4 MOV X20, X19
	0x0326FDC8 LDR X0, [X20 + 0x60]!
	0x0326FDCC MOV X1, X31
	0x0326FDD0 BL 0x32277A8
	0x0326FDD4 ADRP X8, 0xEB4000
	0x0326FDD8 LDR X8, [X8 + 0xB50]
	0x0326FDDC ANDS W31, W0, 0x1
	0x0326FDE0 MOV X1, X31
	0x0326FDE4 CSEL X8, X8, X20, NE
	0x0326FDE8 LDR X8, [X8]
	0x0326FDEC LDR X0, [X19 + 0x68]!
	0x0326FDF0 STUR X8, [X19 - 0x40]
	0x0326FDF4 BL 0x32277A8
	0x0326FDF8 ADRP X8, 0xEB4000
	0x0326FDFC LDR X8, [X8 + 0xB58]
	0x0326FE00 ANDS W31, W0, 0x1
	0x0326FE04 CSEL X8, X8, X19, NE
	0x0326FE08 LDR X8, [X8]
	0x0326FE0C STUR X8, [X19 - 0x38]
	0x0326FE10 LDP X20, X19, [X31 + 0x10]
	0x0326FE14 LDP X30, X21, [X31], #0x20
	0x0326FE18 RET
	0x0326FE1C STR X30, [X31 - 0x30]!
	0x0326FE20 STP X22, X21, [X31 + 0x10]
	0x0326FE24 STP X20, X19, [X31 + 0x20]
	0x0326FE28 ADRP X21, 0x116D000
	0x0326FE2C LDRB W8, [X21 + 0x5B2]
	0x0326FE30 MOV X20, X1
	0x0326FE34 MOV X19, X0
	0x0326FE38 TBNZ X8, 0x0, 0x326FEA4
	0x0326FE3C ADRP X0, 0xEB0000
	0x0326FE40 LDR X0, [X0 + 0xD0]
	0x0326FE44 BL 0x1C16CF4
	0x0326FE48 ADRP X0, 0xE8D000
	0x0326FE4C LDR X0, [X0 + 0x9E8]
	0x0326FE50 BL 0x1C16CF4
	0x0326FE54 ADRP X0, 0xE84000
	0x0326FE58 LDR X0, [X0 + 0xE00]
	0x0326FE5C BL 0x1C16CF4
	0x0326FE60 ADRP X0, 0xEB4000
	0x0326FE64 LDR X0, [X0 + 0xB38]
	0x0326FE68 BL 0x1C16CF4
	0x0326FE6C ADRP X0, 0xEB4000
	0x0326FE70 LDR X0, [X0 + 0xC38]
	0x0326FE74 BL 0x1C16CF4
	0x0326FE78 ADRP X0, 0xEB4000
	0x0326FE7C LDR X0, [X0 + 0xC40]
	0x0326FE80 BL 0x1C16CF4
	0x0326FE84 ADRP X0, 0xEB4000
	0x0326FE88 LDR X0, [X0 + 0xB30]
	0x0326FE8C BL 0x1C16CF4
	0x0326FE90 ADRP X0, 0xE8C000
	0x0326FE94 LDR X0, [X0 + 0x558]
	0x0326FE98 BL 0x1C16CF4
	0x0326FE9C MOVZ W8, 0x1
	0x0326FEA0 STRB W8, [X21 + 0x5B2]
	0x0326FEA4 MOV X0, X20
	0x0326FEA8 MOV X1, X31
	0x0326FEAC BL 0x32277A8
	0x0326FEB0 TBNZ X0, 0x0, 0x327003C
	0x0326FEB4 ADRP X8, 0xE8D000
	0x0326FEB8 LDR X8, [X8 + 0x9E8]
	0x0326FEBC ADRP X21, 0xE8C000
	0x0326FEC0 ADRP X22, 0xEB0000
	0x0326FEC4 LDR X0, [X8]
	0x0326FEC8 LDR W8, [X0 + 0xE0]
	0x0326FECC LDR X21, [X21 + 0x558]
	0x0326FED0 LDR X22, [X22 + 0xD0]
	0x0326FED4 CBNZ W8, 0x326FEDC
	0x0326FED8 BL 0x1C16DFC
	0x0326FEDC MOV X0, X20
	0x0326FEE0 MOV X1, X31
	0x0326FEE4 BL 0x3322D04
	0x0326FEE8 LDR X8, [X21]
	0x0326FEEC MOV X21, X0
	0x0326FEF0 MOV X0, X8
	0x0326FEF4 BL 0x1C16F10
	0x0326FEF8 MOV X1, X21
	0x0326FEFC MOV X2, X31
	0x0326FF00 MOV X20, X0
	0x0326FF04 BL 0x32E2528
	0x0326FF08 LDR X0, [X22]
	0x0326FF0C BL 0x1C16F10
	0x0326FF10 MOV X21, X0
	0x0326FF14 MOV X1, X31
	0x0326FF18 BL 0x32B0928
	0x0326FF1C CBZ X21, 0x3270090
	0x0326FF20 MOV X0, X21
	0x0326FF24 MOV X1, X20
	0x0326FF28 MOV X2, X31
	0x0326FF2C MOV W3, W31
	0x0326FF30 MOV X4, X31
	0x0326FF34 BL 0x32B09BC
	0x0326FF38 CBZ X0, 0x3270094
	0x0326FF3C ADRP X8, 0xEB4000
	0x0326FF40 LDR X8, [X8 + 0xB30]
	0x0326FF44 LDR X9, [X0]
	0x0326FF48 LDR X1, [X8]
	0x0326FF4C LDRB W10, [X9 + 0x130]
	0x0326FF50 LDRB W8, [X1 + 0x130]
	0x0326FF54 CMP W10, W8
	0x0326FF58 B.CC 0x3270080
	0x0326FF5C LDR X10, [X9 + 0xC8]
	0x0326FF60 SUB X9, X8, 0x1
	0x0326FF64 LDR X10, [X10, X9, LSL #3]
	0x0326FF68 CMP X10, X1
	0x0326FF6C B.NE 0x3270080
	0x0326FF70 STR X0, [X19 + 0x18]
	0x0326FF74 LDR X10, [X0]
	0x0326FF78 LDRB W11, [X10 + 0x130]
	0x0326FF7C CMP W11, W8
	0x0326FF80 B.CC 0x3270084
	0x0326FF84 LDR X8, [X10 + 0xC8]
	0x0326FF88 LDR X8, [X8, X9, LSL #3]
	0x0326FF8C CMP X8, X1
	0x0326FF90 B.NE 0x3270084
	0x0326FF94 ADRP X22, 0xEB4000
	0x0326FF98 LDR X22, [X22 + 0xC40]
	0x0326FF9C MOV W21, W31
	0x0326FFA0 LDR W8, [X0 + 0x18]
	0x0326FFA4 CMP W21, W8
	0x0326FFA8 B.GE 0x326FFD0
	0x0326FFAC LDR X2, [X22]
	0x0326FFB0 MOV W1, W21
	0x0326FFB4 BL 0x301BCCC
	0x0326FFB8 CBZ X0, 0x327007C
	0x0326FFBC STR X19, [X0 + 0x50]
	0x0326FFC0 LDR X0, [X19 + 0x18]
	0x0326FFC4 ADD W21, W21, 0x1
	0x0326FFC8 CBNZ X0, 0x326FFA0
	0x0326FFCC BL 0x1C16F20
	0x0326FFD0 MOV X21, X31
	0x0326FFD4 CBZ X20, 0x3270038
	0x0326FFD8 ADRP X10, 0xE84000
	0x0326FFDC LDR X8, [X20]
	0x0326FFE0 LDR X10, [X10 + 0xE00]
	0x0326FFE4 LDRH W9, [X8 + 0x12E]
	0x0326FFE8 LDR X1, [X10]
	0x0326FFEC CBZ X9, 0x3270010
	0x0326FFF0 LDR X10, [X8 + 0xB0]
	0x0326FFF4 ADD X10, X10, 0x8
	0x0326FFF8 LDUR X11, [X10 - 0x8]
	0x0326FFFC CMP X11, X1
	0x03270000 B.EQ 0x3270020
	0x03270004 SUBS X9, X9, 0x1
	0x03270008 ADD X10, X10, 0x10
	0x0327000C B.NE 0x326FFF8
	0x03270010 MOV X0, X20
	0x03270014 MOV W2, W31
	0x03270018 BL 0x1C5C788
	0x0327001C B 0x327002C
	0x03270020 LDRSW X9, [X10]
	0x03270024 ADD X8, X8, X9, 0x4, LSL
	0x03270028 ADD X0, X8, 0x138
	0x0327002C LDP X8, X1, [X0]
	0x03270030 MOV X0, X20
	0x03270034 BLR X8
	0x03270038 CBNZ X21, 0x3270088
	0x0327003C LDR X8, [X19 + 0x18]
	0x03270040 CBNZ X8, 0x327006C
	0x03270044 ADRP X8, 0xEB3000
	0x03270048 LDR X8, [X8 + 0xB30]
	0x0327004C LDR X0, [X8]
	0x03270050 BL 0x1C16F10
	0x03270054 ADRP X8, 0xEB3000
	0x03270058 LDR X8, [X8 + 0xB38]
	0x0327005C MOV X20, X0
	0x03270060 LDR X1, [X8]
	0x03270064 BL 0x301B7C4
	0x03270068 STR X20, [X19 + 0x18]
	0x0327006C LDP X20, X19, [X31 + 0x20]
	0x03270070 LDP X22, X21, [X31 + 0x10]
	0x03270074 LDR X30, [X31], #0x30
	0x03270078 RET
	0x0327007C BL 0x1C16F20
	0x03270080 BL 0x1C171E0
	0x03270084 BL 0x1C171E0
	0x03270088 MOV X0, X21
	0x0327008C BL 0x1C16F18
	0x03270090 BL 0x1C16F20
	0x03270094 STR X31, [X19 + 0x18]
	0x03270098 B 0x326FFCC
	0x0327009C B 0x32700B0
	0x032700A0 B 0x32700B0
	0x032700A4 B 0x32700B0
	0x032700A8 B 0x32700B0
	0x032700AC B 0x32700B0
	0x032700B0 MOV X22, X0
	0x032700B4 CMP W1, 0x1
	0x032700B8 B.NE 0x32700D0
	0x032700BC MOV X0, X22
	0x032700C0 BL 0x3EB1AD0
	0x032700C4 LDR X21, [X0]
	0x032700C8 BL 0x3EB1AE0
	0x032700CC B 0x326FFD4
	0x032700D0 MOV X21, X31
	0x032700D4 B 0x32700DC
	0x032700D8 MOV X22, X0
	0x032700DC CBZ X20, 0x3270140
	0x032700E0 ADRP X10, 0xE83000
	0x032700E4 LDR X8, [X20]
	0x032700E8 LDR X10, [X10 + 0xE00]
	0x032700EC LDRH W9, [X8 + 0x12E]
	0x032700F0 LDR X1, [X10]
	0x032700F4 CBZ X9, 0x3270118
	0x032700F8 LDR X10, [X8 + 0xB0]
	0x032700FC ADD X10, X10, 0x8
	0x03270100 LDUR X11, [X10 - 0x8]
	0x03270104 CMP X11, X1
	0x03270108 B.EQ 0x3270128
	0x0327010C SUBS X9, X9, 0x1
	0x03270110 ADD X10, X10, 0x10
	0x03270114 B.NE 0x3270100
	0x03270118 MOV X0, X20
	0x0327011C MOV W2, W31
	0x03270120 BL 0x1C5C788
	0x03270124 B 0x3270134
	0x03270128 LDRSW X9, [X10]
	0x0327012C ADD X8, X8, X9, 0x4, LSL
	0x03270130 ADD X0, X8, 0x138
	0x03270134 LDP X8, X1, [X0]
	0x03270138 MOV X0, X20
	0x0327013C BLR X8
	0x03270140 CBNZ X21, 0x327014C
	0x03270144 MOV X0, X22
	0x03270148 BL 0x1D2C690
	0x0327014C MOV X0, X21
	0x03270150 BL 0x1C16F18
	0x03270154 BL 0x1990590
	0x03270158 STP X30, X21, [X31 - 0x20]!
	0x0327015C STP X20, X19, [X31 + 0x10]
	0x03270160 ADRP X20, 0x116C000
	0x03270164 ADRP X21, 0xEB3000
	0x03270168 LDRB W8, [X20 + 0x5B0]
	0x0327016C LDR X21, [X21 + 0xC30]
	0x03270170 MOV X19, X0
	0x03270174 TBNZ X8, 0x0, 0x32701BC
	0x03270178 ADRP X0, 0xEB3000
	0x0327017C LDR X0, [X0 + 0xB48]
	0x03270180 BL 0x1C16CF4
	0x03270184 ADRP X0, 0xEB3000
	0x03270188 LDR X0, [X0 + 0xB40]
	0x0327018C BL 0x1C16CF4
	0x03270190 ADRP X0, 0xEB3000
	0x03270194 LDR X0, [X0 + 0xC30]
	0x03270198 BL 0x1C16CF4
	0x0327019C ADRP X0, 0xEB3000
	0x032701A0 LDR X0, [X0 + 0xB38]
	0x032701A4 BL 0x1C16CF4
	0x032701A8 ADRP X0, 0xEB3000
	0x032701AC LDR X0, [X0 + 0xB30]
	0x032701B0 BL 0x1C16CF4
	0x032701B4 MOVZ W8, 0x1
	0x032701B8 STRB W8, [X20 + 0x5B0]
	0x032701BC LDR X1, [X21]
	0x032701C0 MOV X0, X19
	0x032701C4 BL 0x1C16E00
	0x032701C8 CBNZ X0, 0x327021C
	0x032701CC ADRP X8, 0xEB3000
	0x032701D0 LDR X8, [X8 + 0xB30]
	0x032701D4 LDR X0, [X8]
	0x032701D8 BL 0x1C16F10
	0x032701DC ADRP X8, 0xEB3000
	0x032701E0 LDR X8, [X8 + 0xB38]
	0x032701E4 MOV X20, X0
	0x032701E8 LDR X1, [X8]
	0x032701EC BL 0x301B7C4
	0x032701F0 STR X20, [X19 + 0x18]
	0x032701F4 ADRP X8, 0xEB3000
	0x032701F8 LDR X8, [X8 + 0xB40]
	0x032701FC LDR X0, [X8]
	0x03270200 BL 0x1C16F10
	0x03270204 ADRP X8, 0xEB3000
	0x03270208 LDR X8, [X8 + 0xB48]
	0x0327020C MOV X20, X0
	0x03270210 LDR X1, [X8]
	0x03270214 BL 0x28FB8A8
	0x03270218 STR X20, [X19 + 0x20]
	0x0327021C LDP X20, X19, [X31 + 0x10]
	0x03270220 LDP X30, X21, [X31], #0x20
	0x03270224 RET
	0x03270228 STP X30, X27, [X31 - 0x50]!
	0x0327022C STP X26, X25, [X31 + 0x10]
	0x03270230 STP X24, X23, [X31 + 0x20]
	0x03270234 STP X22, X21, [X31 + 0x30]
	0x03270238 STP X20, X19, [X31 + 0x40]
	0x0327023C ADRP X21, 0x116C000
	0x03270240 LDRB W8, [X21 + 0x5B1]
	0x03270244 MOV X19, X1
	0x03270248 MOV X20, X0
	0x0327024C TBNZ X8, 0x0, 0x32702E8
	0x03270250 ADRP X0, 0xEAF000
	0x03270254 LDR X0, [X0 + 0xD0]
	0x03270258 BL 0x1C16CF4
	0x0327025C ADRP X0, 0xE8C000
	0x03270260 LDR X0, [X0 + 0x9E8]
	0x03270264 BL 0x1C16CF4
	0x03270268 ADRP X0, 0xE83000
	0x0327026C LDR X0, [X0 + 0xE00]
	0x03270270 BL 0x1C16CF4
	0x03270274 ADRP X0, 0xE8B000
	0x03270278 LDR X0, [X0 + 0x558]
	0x0327027C BL 0x1C16CF4
	0x03270280 ADRP X0, 0xEB3000
	0x03270284 LDR X0, [X0 + 0xBB8]
	0x03270288 BL 0x1C16CF4
	0x0327028C ADRP X0, 0xEB3000
	0x03270290 LDR X0, [X0 + 0xBC0]
	0x03270294 BL 0x1C16CF4
	0x03270298 ADRP X0, 0xEB3000
	0x0327029C LDR X0, [X0 + 0xBC8]
	0x032702A0 BL 0x1C16CF4
	0x032702A4 ADRP X0, 0xEB3000
	0x032702A8 LDR X0, [X0 + 0xBD0]
	0x032702AC BL 0x1C16CF4
	0x032702B0 ADRP X0, 0xEB3000
	0x032702B4 LDR X0, [X0 + 0xBD8]
	0x032702B8 BL 0x1C16CF4
	0x032702BC ADRP X0, 0xEB3000
	0x032702C0 LDR X0, [X0 + 0xBE0]
	0x032702C4 BL 0x1C16CF4
	0x032702C8 ADRP X0, 0xEB3000
	0x032702CC LDR X0, [X0 + 0xBE8]
	0x032702D0 BL 0x1C16CF4
	0x032702D4 ADRP X0, 0xEB3000
	0x032702D8 LDR X0, [X0 + 0xBF0]
	0x032702DC BL 0x1C16CF4

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X21, 0x116E000
	014 Move W8, [X21+1460]
	015 Move W24, W4
	016 Move X22, X3
	017 Move X23, X2
	018 Move X19, X1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {65}
	024 Move X0, 0xEB1000
	025 Move X0, [X0+208]
	026 Call 0x1C17CF4
	027 Move X0, 0xEB5000
	028 Move X0, [X0+2920]
	029 Call 0x1C17CF4
	030 Move X0, 0xE8E000
	031 Move X0, [X0+2536]
	032 Call 0x1C17CF4
	033 Move X0, 0xE85000
	034 Move X0, [X0+3584]
	035 Call 0x1C17CF4
	036 Move X0, 0xE8D000
	037 Move X0, [X0+1368]
	038 Call 0x1C17CF4
	039 Move X0, 0xEB5000
	040 Move X0, [X0+3000]
	041 Call 0x1C17CF4
	042 Move X0, 0xEB5000
	043 Move X0, [X0+3008]
	044 Call 0x1C17CF4
	045 Move X0, 0xEB5000
	046 Move X0, [X0+3016]
	047 Call 0x1C17CF4
	048 Move X0, 0xEB5000
	049 Move X0, [X0+3024]
	050 Call 0x1C17CF4
	051 Move X0, 0xEB5000
	052 Move X0, [X0+3032]
	053 Call 0x1C17CF4
	054 Move X0, 0xEB5000
	055 Move X0, [X0+3040]
	056 Call 0x1C17CF4
	057 Move X0, 0xEB5000
	058 Move X0, [X0+3048]
	059 Call 0x1C17CF4
	060 Move X0, 0xEB5000
	061 Move X0, [X0+3056]
	062 Call 0x1C17CF4
	063 Move W8, 1
	064 Move [X21+1460], W8
	065 Compare X19, 0
	066 JumpIfEqual {456}
	067 Move X8, 0xEB1000
	068 Move X8, [X8+208]
	069 Move X0, [X8]
	070 Call 0x1C17F10
	071 Move X21, X0
	072 Move X1, X31
	073 Move TEMP, X24
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {81}
	077 Move X2, X23
	078 Move X3, X22
	079 Move X4, X31
	080 Call BinaryFormatter..ctor, X0, X1, X2
	081 Call BinaryFormatter..ctor, X0
	082 Move X0, X19
	083 Move X1, X31
	084 Call SerializationInfo.GetEnumerator, X0
	085 Compare X0, 0
	086 JumpIfEqual {474}
	087 Move X1, X31
	088 Move X22, X0
	089 Call SerializationInfoEnumerator.MoveNext, X0
	090 Move TEMP, X0
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfNotEqual {441}
	094 Move W27, 0xBE2A
	095 Move W28, 0x5253
	096 Move W24, 0x2EDD
	097 Move W26, 0x969A
	098 Move W25, 0x3F20
	099 NotImplemented "Instruction MOVK not yet implemented."
	100 NotImplemented "Instruction MOVK not yet implemented."
	101 NotImplemented "Instruction MOVK not yet implemented."
	102 NotImplemented "Instruction MOVK not yet implemented."
	103 NotImplemented "Instruction MOVK not yet implemented."
	104 Move X0, X22
	105 Move X1, X31
	106 Call SerializationInfoEnumerator.get_Name, X0
	107 Move X1, X31
	108 Move X23, X0
	109 Call <PrivateImplementationDetails>.ComputeStringHash, X0
	110 NotImplemented "Instruction CMP not yet implemented."
	111 NotImplemented "Instruction CMP not yet implemented."
	112 NotImplemented "Instruction CMP not yet implemented."
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move X8, 0xEB5000
	115 Move X8, [X8+3032]
	116 Move X0, X23
	117 Move X2, X31
	118 Move X1, [X8]
	119 Call String.op_Equality, X0, X1
	120 Move TEMP, X0
	121 And TEMP, TEMP, 1
	122 Compare TEMP, 1
	123 JumpIfNotEqual {412}
	124 Move X8, 0xEB5000
	125 Move X8, [X8+3032]
	126 Move X0, X19
	127 Move X2, X31
	128 Move X1, [X8]
	129 Call SerializationInfo.GetString, X0, X1
	130 Move [X20+48], X0
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move W8, 0xF574
	133 NotImplemented "Instruction MOVK not yet implemented."
	134 NotImplemented "Instruction CMP not yet implemented."
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move X8, 0xEB5000
	137 Move X8, [X8+3040]
	138 Move X0, X23
	139 Move X2, X31
	140 Move X1, [X8]
	141 Call String.op_Equality, X0, X1
	142 Move TEMP, X0
	143 And TEMP, TEMP, 1
	144 Compare TEMP, 1
	145 JumpIfNotEqual {412}
	146 Move X8, 0xEB5000
	147 Move X8, [X8+3040]
	148 Move X0, X19
	149 Move X2, X31
	150 Move X1, [X8]
	151 Call SerializationInfo.GetString, X0, X1
	152 Move X8, 0xE8E000
	153 Move X8, [X8+2536]
	154 Move X23, X0
	155 Move X8, [X8]
	156 Move W9, [X8+224]
	157 Compare W9, 0
	158 JumpIfNotEqual {161}
	159 Move X0, X8
	160 Call 0x1C17DFC
	161 Move X0, X23
	162 Move X1, X31
	163 Call Convert.FromBase64String, X0
	164 Move X8, 0xE8D000
	165 Move X8, [X8+1368]
	166 Move X24, X0
	167 Move X8, [X8]
	168 Move X0, X8
	169 Call 0x1C17F10
	170 Move X1, X24
	171 Move X2, X31
	172 Move X23, X0
	173 Call MemoryStream..ctor, X0, X1
	174 Compare X21, 0
	175 JumpIfEqual {421}
	176 Move X0, X21
	177 Move X1, X23
	178 Move X2, X31
	179 Move W3, W31
	180 Move X4, X31
	181 Call BinaryFormatter.Deserialize, X0, X1, X2, X3
	182 Compare X0, 0
	183 JumpIfEqual {355}
	184 Move X8, 0xEB5000
	185 Move X9, [X0]
	186 Move X8, [X8+2920]
	187 Move W10, [X9+304]
	188 Move X1, [X8]
	189 Move W8, [X1+304]
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Move X10, [X9+200]
	192 Subtract X9, X8, 1
	193 Move X10, [X10]
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Move [X20+64], X0
	196 Move X10, [X0]
	197 Move W11, [X10+304]
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Move X8, [X10+200]
	200 Move X8, [X8]
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Move X24, X31
	203 Move W8, 0xE529
	204 NotImplemented "Instruction MOVK not yet implemented."
	205 NotImplemented "Instruction CMP not yet implemented."
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Move X8, 0xEB5000
	208 Move X8, [X8+3024]
	209 Move X0, X23
	210 Move X2, X31
	211 Move X1, [X8]
	212 Call String.op_Equality, X0, X1
	213 Move TEMP, X0
	214 And TEMP, TEMP, 1
	215 Compare TEMP, 1
	216 JumpIfNotEqual {412}
	217 Move X8, 0xEB5000
	218 Move X8, [X8+3024]
	219 Move X0, X19
	220 Move X2, X31
	221 Move X1, [X8]
	222 Call SerializationInfo.GetString, X0, X1
	223 Move [X20+40], X0
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Move W8, 0x2477
	226 NotImplemented "Instruction MOVK not yet implemented."
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Move X8, 0xEB5000
	229 Move X8, [X8+3000]
	230 Move X0, X23
	231 Move X2, X31
	232 Move X1, [X8]
	233 Call String.op_Equality, X0, X1
	234 Move TEMP, X0
	235 And TEMP, TEMP, 1
	236 Compare TEMP, 1
	237 JumpIfNotEqual {412}
	238 Move X8, 0xEB5000
	239 Move X8, [X8+3000]
	240 Move X0, X19
	241 Move X2, X31
	242 Move X1, [X8]
	243 Call SerializationInfo.GetString, X0, X1
	244 Move X8, 0xEB5000
	245 Move X8, [X8+3048]
	246 Move X0, X23
	247 Move X2, X31
	248 Move X1, [X8]
	249 Call String.op_Equality, X0, X1
	250 Move TEMP, X0
	251 And TEMP, TEMP, 1
	252 Compare TEMP, 1
	253 JumpIfNotEqual {412}
	254 Move X8, 0xEB5000
	255 Move X8, [X8+3048]
	256 Move X0, X19
	257 Move X2, X31
	258 Move X1, [X8]
	259 Call SerializationInfo.GetString, X0, X1
	260 Move [X20+88], X0
	261 Move X8, 0xEB5000
	262 Move X8, [X8+3008]
	263 Move X0, X23
	264 Move X2, X31
	265 Move X1, [X8]
	266 Call String.op_Equality, X0, X1
	267 Move TEMP, X0
	268 And TEMP, TEMP, 1
	269 Compare TEMP, 1
	270 JumpIfEqual {389}
	271 Move X8, 0xEB5000
	272 Move X8, [X8+3056]
	273 Move X0, X23
	274 Move X2, X31
	275 Move X1, [X8]
	276 Call String.op_Equality, X0, X1
	277 Move TEMP, X0
	278 And TEMP, TEMP, 1
	279 Compare TEMP, 1
	280 JumpIfNotEqual {412}
	281 Move X8, 0xEB5000
	282 Move X8, [X8+3056]
	283 Move X0, X19
	284 Move X2, X31
	285 Move X1, [X8]
	286 Call SerializationInfo.GetString, X0, X1
	287 Move [X20+72], X0
	288 Move X8, 0xEB5000
	289 Move X8, [X8+3016]
	290 Move X0, X23
	291 Move X2, X31
	292 Move X1, [X8]
	293 Call String.op_Equality, X0, X1
	294 Move TEMP, X0
	295 And TEMP, TEMP, 1
	296 Compare TEMP, 1
	297 JumpIfNotEqual {412}
	298 Move X8, 0xEB5000
	299 Move X8, [X8+3016]
	300 Move X0, X19
	301 Move X2, X31
	302 Move X1, [X8]
	303 Call SerializationInfo.GetString, X0, X1
	304 Move X8, 0xE8E000
	305 Move X8, [X8+2536]
	306 Move X23, X0
	307 Move X8, [X8]
	308 Move W9, [X8+224]
	309 Compare W9, 0
	310 JumpIfNotEqual {313}
	311 Move X0, X8
	312 Call 0x1C17DFC
	313 Move X0, X23
	314 Move X1, X31
	315 Call Convert.FromBase64String, X0
	316 Move X8, 0xE8D000
	317 Move X8, [X8+1368]
	318 Move X24, X0
	319 Move X8, [X8]
	320 Move X0, X8
	321 Call 0x1C17F10
	322 Move X1, X24
	323 Move X2, X31
	324 Move X23, X0
	325 Call MemoryStream..ctor, X0, X1
	326 Compare X21, 0
	327 JumpIfEqual {422}
	328 Move X0, X21
	329 Move X1, X23
	330 Move X2, X31
	331 Move W3, W31
	332 Move X4, X31
	333 Call BinaryFormatter.Deserialize, X0, X1, X2, X3
	334 Move X24, X31
	335 Move [X20+80], X0
	336 Move W29, 7
	337 Compare X23, 0
	338 JumpIfEqual {405}
	339 Move X8, [X23]
	340 Move X10, 0xE85000
	341 NotImplemented "Instruction LDRH not yet implemented."
	342 Move X10, [X10+3584]
	343 Move X1, [X10]
	344 Compare X9, 0
	345 JumpIfEqual {352}
	346 Move X10, [X8+176]
	347 Add X10, X10, 8
	348 NotImplemented "Instruction LDUR not yet implemented."
	349 NotImplemented "Instruction CMP not yet implemented."
	350 Subtract X9, X9, 1
	351 Add X10, X10, 16
	352 Move X0, X23
	353 Move W2, W31
	354 Call 0x1C5D788
	355 Move X24, X31
	356 Move [X20+64], X31
	357 Move W29, 7
	358 Compare X23, 0
	359 JumpIfEqual {383}
	360 Move X8, [X23]
	361 Move X10, 0xE84000
	362 NotImplemented "Instruction LDRH not yet implemented."
	363 Move X10, [X10+3584]
	364 Move X1, [X10]
	365 Compare X9, 0
	366 JumpIfEqual {373}
	367 Move X10, [X8+176]
	368 Add X10, X10, 8
	369 NotImplemented "Instruction LDUR not yet implemented."
	370 NotImplemented "Instruction CMP not yet implemented."
	371 Subtract X9, X9, 1
	372 Add X10, X10, 16
	373 Move X0, X23
	374 Move W2, W31
	375 Call 0x1C5D788
	376 NotImplemented "Instruction LDRSW not yet implemented."
	377 Add X8, X8, X9
	378 Add X0, X8, 312
	379 Move X8, [X0]
	380 Move X1, [X0+8]
	381 Move X0, X23
	382 NotImplemented "Instruction BLR not yet implemented."
	383 Compare X24, 0
	384 JumpIfNotEqual {454}
	385 Move W24, 0x2EDD
	386 NotImplemented "Instruction MOVK not yet implemented."
	387 Compare W29, 0
	388 JumpIfNotEqual {411}
	389 Move X8, 0xEB4000
	390 Move X8, [X8+3008]
	391 Move X0, X19
	392 Move X2, X31
	393 Move X1, [X8]
	394 Call SerializationInfo.GetString, X0, X1
	395 Move X1, X0
	396 Move X0, X20
	397 Call ClaimsIdentity.DeserializeClaims, X0, X1
	398 NotImplemented "Instruction LDRSW not yet implemented."
	399 Add X8, X8, X9
	400 Add X0, X8, 312
	401 Move X8, [X0]
	402 Move X1, [X0+8]
	403 Move X0, X23
	404 NotImplemented "Instruction BLR not yet implemented."
	405 Compare X24, 0
	406 JumpIfNotEqual {454}
	407 Move W24, 0x2EDD
	408 NotImplemented "Instruction MOVK not yet implemented."
	409 Compare W29, 0
	410 JumpIfEqual {412}
	411 NotImplemented "Instruction CMP not yet implemented."
	412 Move X0, X22
	413 Move X1, X31
	414 Call SerializationInfoEnumerator.MoveNext, X0
	415 Move TEMP, X0
	416 And TEMP, TEMP, 1
	417 Compare TEMP, 1
	418 JumpIfEqual {104}
	419 Call 0x1C181E0
	420 Call 0x1C181E0
	421 Call 0x1C17F20
	422 Call 0x1C17F20
	423 Move X29, X0
	424 NotImplemented "Instruction CMP not yet implemented."
	425 Move X0, X29
	426 Call 0x3EB2AD0
	427 Move X24, [X0]
	428 Call 0x3EB2AE0
	429 Move W29, W31
	430 Compare X23, 0
	431 JumpIfNotEqual {339}
	432 Move X29, X0
	433 NotImplemented "Instruction CMP not yet implemented."
	434 Move X0, X29
	435 Call 0x3EB2AD0
	436 Move X24, [X0]
	437 Call 0x3EB2AE0
	438 Move W29, W31
	439 Compare X23, 0
	440 JumpIfNotEqual {360}
	441 Move X20, [X31+80]
	442 Move X19, [X31+88]
	443 Move X22, [X31+64]
	444 Move X21, [X31+72]
	445 Move X24, [X31+48]
	446 Move X23, [X31+56]
	447 Move X26, [X31+32]
	448 Move X25, [X31+40]
	449 Move X28, [X31+16]
	450 Move X27, [X31+24]
	451 Move X29, [X31+96]
	452 Move X30, [X31+104]
	453 Return 
	454 Move X0, X24
	455 Call 0x1C17F18
	456 Move X0, 0xE89000
	457 Move X0, [X0+1320]
	458 Call 0x1C17D08
	459 Call 0x1C17F10
	460 Move X19, X0
	461 Move X0, 0xEAE000
	462 Move X0, [X0+728]
	463 Call 0x1C17D08
	464 Move X1, X0
	465 Move X0, X19
	466 Move X2, X31
	467 Call ArgumentNullException..ctor, X0, X1
	468 Move X0, 0xEB4000
	469 Move X0, [X0+3064]
	470 Call 0x1C17D08
	471 Move X1, X0
	472 Move X0, X19
	473 Call 0x1C17DEC
	474 Call 0x1C17F20
	475 Move X24, X31
	476 Move X24, X31
	477 Move X29, X0
	478 Compare X23, 0
	479 JumpIfEqual {503}
	480 Move X8, [X23]
	481 Move X10, 0xE84000
	482 NotImplemented "Instruction LDRH not yet implemented."
	483 Move X10, [X10+3584]
	484 Move X1, [X10]
	485 Compare X9, 0
	486 JumpIfEqual {493}
	487 Move X10, [X8+176]
	488 Add X10, X10, 8
	489 NotImplemented "Instruction LDUR not yet implemented."
	490 NotImplemented "Instruction CMP not yet implemented."
	491 Subtract X9, X9, 1
	492 Add X10, X10, 16
	493 Move X0, X23
	494 Move W2, W31
	495 Call 0x1C5D788
	496 NotImplemented "Instruction LDRSW not yet implemented."
	497 Add X8, X8, X9
	498 Add X0, X8, 312
	499 Move X8, [X0]
	500 Move X1, [X0+8]
	501 Move X0, X23
	502 NotImplemented "Instruction BLR not yet implemented."
	503 Compare X24, 0
	504 JumpIfEqual {535}
	505 Move X0, X24
	506 Call 0x1C17F18
	507 Move X29, X0
	508 Compare X23, 0
	509 JumpIfEqual {533}
	510 Move X8, [X23]
	511 Move X10, 0xE84000
	512 NotImplemented "Instruction LDRH not yet implemented."
	513 Move X10, [X10+3584]
	514 Move X1, [X10]
	515 Compare X9, 0
	516 JumpIfEqual {523}
	517 Move X10, [X8+176]
	518 Add X10, X10, 8
	519 NotImplemented "Instruction LDUR not yet implemented."
	520 NotImplemented "Instruction CMP not yet implemented."
	521 Subtract X9, X9, 1
	522 Add X10, X10, 16
	523 Move X0, X23
	524 Move W2, W31
	525 Call 0x1C5D788
	526 NotImplemented "Instruction LDRSW not yet implemented."
	527 Add X8, X8, X9
	528 Add X0, X8, 312
	529 Move X8, [X0]
	530 Move X1, [X0+8]
	531 Move X0, X23
	532 NotImplemented "Instruction BLR not yet implemented."
	533 Compare X24, 0
	534 JumpIfNotEqual {537}
	535 Move X0, X29
	536 Call 0x1D2D690
	537 Move X0, X24
	538 Call 0x1C17F18
	539 Call 0x1991590

