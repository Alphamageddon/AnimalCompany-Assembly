Type: System.Security.Claims.Claim

Method: System.Void .ctor(System.String type, System.String value, System.String valueType, System.String issuer, System.String originalIssuer, System.Security.Claims.ClaimsIdentity subject)

Disassembly:
	0x0326D8E0 MOV X1, X22
	0x0326D8E4 BL 0x2AA5018
	0x0326D8E8 CBZ X21, 0x326D964
	0x0326D8EC LDR X3, [X26]
	0x0326D8F0 MOV X2, X0
	0x0326D8F4 MOV X0, X21
	0x0326D8F8 MOV X1, X22
	0x0326D8FC BL 0x2AA5098

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move X7, X31
	004 Move [X31], X31
	005 Call Claim..ctor, X0, X1, X2, X3, X4, X5, X6, X7, X8
	006 Move X30, [X31+16]
	007 Add X31, X31, 32
	008 Return 

Method: System.Void .ctor(System.String type, System.String value, System.String valueType, System.String issuer, System.String originalIssuer, System.Security.Claims.ClaimsIdentity subject, System.String propertyKey, System.String propertyValue)

Disassembly:
	0x0326E3C8 MOV W2, W31
	0x0326E3CC BL 0x1C5C788
	0x0326E3D0 B 0x326E3E0
	0x0326E3D4 LDRSW X9, [X10]
	0x0326E3D8 ADD X8, X8, X9, 0x4, LSL
	0x0326E3DC ADD X0, X8, 0x138
	0x0326E3E0 LDP X8, X1, [X0]
	0x0326E3E4 MOV X0, X19
	0x0326E3E8 BLR X8
	0x0326E3EC MOV X8, X0
	0x0326E3F0 CBZ X0, 0x326E54C
	0x0326E3F4 LDR X9, [X8 + 0x50]
	0x0326E3F8 LDR X21, [X20 + 0x18]
	0x0326E3FC CMP X9, X20
	0x0326E400 B.EQ 0x326E45C
	0x0326E404 LDR X9, [X8]
	0x0326E408 LDP X10, X2, [X9 + 0x178]
	0x0326E40C MOV X0, X8
	0x0326E410 MOV X1, X20
	0x0326E414 BLR X10
	0x0326E418 MOV X1, X0
	0x0326E41C CBZ X21, 0x326E550
	0x0326E420 LDR W10, [X21 + 0x1C]
	0x0326E424 LDR X8, [X21 + 0x10]
	0x0326E428 LDR X9, [X25]
	0x0326E42C ADD W10, W10, 0x1
	0x0326E430 STR W10, [X21 + 0x1C]
	0x0326E434 CBZ X8, 0x326E554
	0x0326E438 LDRSW X10, [X21 + 0x18]
	0x0326E43C LDR W11, [X8 + 0x18]
	0x0326E440 CMP W10, W11
	0x0326E444 B.CS 0x326E49C
	0x0326E448 ADD W9, W10, 0x1
	0x0326E44C ADD X8, X8, X10, 0x3, LSL
	0x0326E450 STR W9, [X21 + 0x18]
	0x0326E454 STR X1, [X8 + 0x20]
	0x0326E458 B 0x326E338
	0x0326E45C CBZ X21, 0x326E558
	0x0326E460 LDR W11, [X21 + 0x1C]
	0x0326E464 LDR X9, [X21 + 0x10]
	0x0326E468 LDR X10, [X25]
	0x0326E46C ADD W11, W11, 0x1
	0x0326E470 STR W11, [X21 + 0x1C]
	0x0326E474 CBZ X9, 0x326E55C
	0x0326E478 LDRSW X11, [X21 + 0x18]
	0x0326E47C LDR W12, [X9 + 0x18]
	0x0326E480 CMP W11, W12
	0x0326E484 B.CS 0x326E4B4
	0x0326E488 ADD W10, W11, 0x1
	0x0326E48C ADD X9, X9, X11, 0x3, LSL
	0x0326E490 STR W10, [X21 + 0x18]
	0x0326E494 STR X8, [X9 + 0x20]
	0x0326E498 B 0x326E338
	0x0326E49C LDR X8, [X9 + 0x20]
	0x0326E4A0 LDR X8, [X8 + 0xC0]
	0x0326E4A4 LDR X2, [X8 + 0x70]
	0x0326E4A8 MOV X0, X21
	0x0326E4AC BL 0x301BF90
	0x0326E4B0 B 0x326E338
	0x0326E4B4 LDR X9, [X10 + 0x20]
	0x0326E4B8 LDR X9, [X9 + 0xC0]
	0x0326E4BC LDR X2, [X9 + 0x70]
	0x0326E4C0 MOV X0, X21
	0x0326E4C4 MOV X1, X8
	0x0326E4C8 BL 0x301BF90
	0x0326E4CC B 0x326E338
	0x0326E4D0 MOV X20, X31
	0x0326E4D4 CBZ X19, 0x326E530
	0x0326E4D8 LDR X8, [X19]
	0x0326E4DC LDR X1, [X22]
	0x0326E4E0 LDRH W9, [X8 + 0x12E]
	0x0326E4E4 CBZ X9, 0x326E508
	0x0326E4E8 LDR X10, [X8 + 0xB0]
	0x0326E4EC ADD X10, X10, 0x8
	0x0326E4F0 LDUR X11, [X10 - 0x8]
	0x0326E4F4 CMP X11, X1
	0x0326E4F8 B.EQ 0x326E518
	0x0326E4FC SUBS X9, X9, 0x1
	0x0326E500 ADD X10, X10, 0x10
	0x0326E504 B.NE 0x326E4F0
	0x0326E508 MOV X0, X19
	0x0326E50C MOV W2, W31
	0x0326E510 BL 0x1C5C788
	0x0326E514 B 0x326E524
	0x0326E518 LDRSW X9, [X10]
	0x0326E51C ADD X8, X8, X9, 0x4, LSL
	0x0326E520 ADD X0, X8, 0x138
	0x0326E524 LDP X8, X1, [X0]
	0x0326E528 MOV X0, X19
	0x0326E52C BLR X8
	0x0326E530 CBNZ X20, 0x326E568
	0x0326E534 LDP X20, X19, [X31 + 0x40]
	0x0326E538 LDP X22, X21, [X31 + 0x30]
	0x0326E53C LDP X24, X23, [X31 + 0x20]
	0x0326E540 LDP X30, X25, [X31 + 0x10]
	0x0326E544 ADD X31, X31, 0x50
	0x0326E548 RET
	0x0326E54C BL 0x1C16F20
	0x0326E550 BL 0x1C16F20
	0x0326E554 BL 0x1C16F20
	0x0326E558 BL 0x1C16F20
	0x0326E55C BL 0x1C16F20
	0x0326E560 BL 0x1C16F20
	0x0326E564 BL 0x1C16F20
	0x0326E568 MOV X0, X20
	0x0326E56C BL 0x1C16F18
	0x0326E570 B 0x326E58C
	0x0326E574 B 0x326E58C
	0x0326E578 B 0x326E58C
	0x0326E57C B 0x326E58C
	0x0326E580 B 0x326E58C
	0x0326E584 B 0x326E58C
	0x0326E588 B 0x326E58C
	0x0326E58C CMP W1, 0x1
	0x0326E590 B.NE 0x326E5A4
	0x0326E594 BL 0x3EB1AD0
	0x0326E598 LDR X20, [X0]
	0x0326E59C BL 0x3EB1AE0
	0x0326E5A0 B 0x326E4D4
	0x0326E5A4 STR X0, [X31 + 0x8]
	0x0326E5A8 MOV X20, X31
	0x0326E5AC B 0x326E5B4
	0x0326E5B0 STR X0, [X31 + 0x8]
	0x0326E5B4 CBZ X19, 0x326E610
	0x0326E5B8 LDR X8, [X19]
	0x0326E5BC LDR X1, [X22]
	0x0326E5C0 LDRH W9, [X8 + 0x12E]
	0x0326E5C4 CBZ X9, 0x326E5E8
	0x0326E5C8 LDR X10, [X8 + 0xB0]
	0x0326E5CC ADD X10, X10, 0x8
	0x0326E5D0 LDUR X11, [X10 - 0x8]
	0x0326E5D4 CMP X11, X1
	0x0326E5D8 B.EQ 0x326E5F8
	0x0326E5DC SUBS X9, X9, 0x1
	0x0326E5E0 ADD X10, X10, 0x10
	0x0326E5E4 B.NE 0x326E5D0
	0x0326E5E8 MOV X0, X19
	0x0326E5EC MOV W2, W31
	0x0326E5F0 BL 0x1C5C788
	0x0326E5F4 B 0x326E604
	0x0326E5F8 LDRSW X9, [X10]
	0x0326E5FC ADD X8, X8, X9, 0x4, LSL
	0x0326E600 ADD X0, X8, 0x138

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X28, 0x116F000
	014 Move X29, 0xE8C000
	015 Move W8, [X28+1439]
	016 Move X20, [X31+96]
	017 Move X29, [X29+3264]
	018 Move X19, X7
	019 Move X21, X6
	020 Move X23, X5
	021 Move X24, X4
	022 Move X25, X3
	023 Move X26, X2
	024 Move X27, X1
	025 Move X22, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {44}
	030 Move X0, 0xEB6000
	031 Move X0, [X0+2784]
	032 Call 0x1C17CF4
	033 Move X0, 0xE8C000
	034 Move X0, [X0+3264]
	035 Call 0x1C17CF4
	036 Move X0, 0xEB6000
	037 Move X0, [X0+2576]
	038 Call 0x1C17CF4
	039 Move X0, 0xEB6000
	040 Move X0, [X0+2584]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X28+1439], W8
	044 Move X0, [X29]
	045 Call 0x1C17F10
	046 Move X1, X31
	047 Move X28, X0
	048 Call Object..ctor, X0
	049 Move X0, X22
	050 Move X1, X31
	051 Move [X22+72], X28
	052 Call Object..ctor, X0
	053 Compare X27, 0
	054 JumpIfEqual {145}
	055 Compare X26, 0
	056 JumpIfEqual {152}
	057 Move X28, 0xEB6000
	058 Move X29, 0xEB6000
	059 Move X28, [X28+2584]
	060 Move X29, [X29+2576]
	061 Move X0, X25
	062 Move X1, X31
	063 Move [X22+32], X27
	064 Move [X22+40], X26
	065 Call String.IsNullOrEmpty, X0
	066 Move X8, [X28]
	067 And W31, W0, 1
	068 Move X0, X24
	069 Move X1, X31
	070 NotImplemented "Instruction CSEL not yet implemented."
	071 Move [X22+48], X8
	072 Call String.IsNullOrEmpty, X0
	073 Move X8, [X29]
	074 And W31, W0, 1
	075 Move X0, X23
	076 Move X1, X31
	077 NotImplemented "Instruction CSEL not yet implemented."
	078 Move [X22+16], X8
	079 Call String.IsNullOrEmpty, X0
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {85}
	084 Move X23, [X22+16]
	085 Move [X22+24], X23
	086 Move [X22+80], X21
	087 Compare X19, 0
	088 JumpIfEqual {110}
	089 Move X0, X22
	090 Call Claim.get_Properties, X0
	091 Compare X0, 0
	092 JumpIfEqual {170}
	093 Move X10, 0xEB6000
	094 Move X8, [X0]
	095 Move X10, [X10+2784]
	096 Move X21, X0
	097 NotImplemented "Instruction LDRH not yet implemented."
	098 Move X1, [X10]
	099 Compare X9, 0
	100 JumpIfEqual {107}
	101 Move X10, [X8+176]
	102 Add X10, X10, 8
	103 NotImplemented "Instruction LDUR not yet implemented."
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Subtract X9, X9, 1
	106 Add X10, X10, 16
	107 Move W2, 5
	108 Move X0, X21
	109 Call 0x1C5D788
	110 Move X20, [X31+80]
	111 Move X19, [X31+88]
	112 Move X22, [X31+64]
	113 Move X21, [X31+72]
	114 Move X24, [X31+48]
	115 Move X23, [X31+56]
	116 Move X26, [X31+32]
	117 Move X25, [X31+40]
	118 Move X28, [X31+16]
	119 Move X27, [X31+24]
	120 Move X29, [X31+96]
	121 Move X30, [X31+104]
	122 Return 
	123 Move W9, [X10]
	124 Add W9, W9, 5
	125 Add X8, X8, W9
	126 Add X0, X8, 312
	127 Move X4, [X0]
	128 Move X3, [X0+8]
	129 Move X0, X21
	130 Move X1, X19
	131 Move X2, X20
	132 Move X20, [X31+80]
	133 Move X19, [X31+88]
	134 Move X22, [X31+64]
	135 Move X21, [X31+72]
	136 Move X24, [X31+48]
	137 Move X23, [X31+56]
	138 Move X26, [X31+32]
	139 Move X25, [X31+40]
	140 Move X28, [X31+16]
	141 Move X27, [X31+24]
	142 Move X29, [X31+96]
	143 Move X30, [X31+104]
	144 CallNoReturn X4
	145 Move X0, 0xE8B000
	146 Move X0, [X0+1320]
	147 Call 0x1C17D08
	148 Call 0x1C17F10
	149 Move X19, X0
	150 Move X0, 0xE8E000
	151 Move X0, [X0+1512]
	152 Move X0, 0xE8B000
	153 Move X0, [X0+1320]
	154 Call 0x1C17D08
	155 Call 0x1C17F10
	156 Move X19, X0
	157 Move X0, 0xE90000
	158 Move X0, [X0+3784]
	159 Call 0x1C17D08
	160 Move X1, X0
	161 Move X0, X19
	162 Move X2, X31
	163 Call ArgumentNullException..ctor, X0, X1
	164 Move X0, 0xEB6000
	165 Move X0, [X0+2792]
	166 Call 0x1C17D08
	167 Move X1, X0
	168 Move X0, X19
	169 Call 0x1C17DEC
	170 Call 0x1C17F20

Method: System.Void .ctor(System.Security.Claims.Claim other, System.Security.Claims.ClaimsIdentity subject)

Disassembly:
	0x0326E72C MOV X0, X19
	0x0326E730 MOV X1, X20
	0x0326E734 LDR X8, [X8 + 0xC0]
	0x0326E738 LDR X2, [X8 + 0x70]
	0x0326E73C LDP X20, X19, [X31 + 0x20]
	0x0326E740 LDP X22, X21, [X31 + 0x10]
	0x0326E744 LDR X30, [X31], #0x30
	0x0326E748 B 0x301BF90
	0x0326E74C BL 0x1C16F20
	0x0326E750 STR X30, [X31 - 0x60]!
	0x0326E754 STP X28, X27, [X31 + 0x10]
	0x0326E758 STP X26, X25, [X31 + 0x20]
	0x0326E75C STP X24, X23, [X31 + 0x30]
	0x0326E760 STP X22, X21, [X31 + 0x40]
	0x0326E764 STP X20, X19, [X31 + 0x50]
	0x0326E768 ADRP X27, 0x116E000
	0x0326E76C ADRP X28, 0xEB5000
	0x0326E770 ADRP X21, 0xEB5000
	0x0326E774 ADRP X26, 0xEB5000
	0x0326E778 ADRP X25, 0xEB5000
	0x0326E77C ADRP X24, 0xEB5000
	0x0326E780 ADRP X23, 0xEB5000
	0x0326E784 ADRP X22, 0xEB5000
	0x0326E788 LDR X28, [X28 + 0xB30]
	0x0326E78C LDR X21, [X21 + 0xB38]
	0x0326E790 LDRB W8, [X27 + 0x5A6]
	0x0326E794 LDR X26, [X26 + 0xB40]
	0x0326E798 LDR X25, [X25 + 0xB48]
	0x0326E79C LDR X24, [X24 + 0xB50]
	0x0326E7A0 LDR X23, [X23 + 0xB58]
	0x0326E7A4 LDR X22, [X22 + 0xB78]
	0x0326E7A8 MOV X20, X1
	0x0326E7AC MOV X19, X0
	0x0326E7B0 TBNZ X8, 0x0, 0x326E81C
	0x0326E7B4 ADRP X0, 0xE85000
	0x0326E7B8 LDR X0, [X0 + 0x618]
	0x0326E7BC BL 0x1C16CF4
	0x0326E7C0 ADRP X0, 0xEB5000
	0x0326E7C4 LDR X0, [X0 + 0xB48]
	0x0326E7C8 BL 0x1C16CF4
	0x0326E7CC ADRP X0, 0xEB5000
	0x0326E7D0 LDR X0, [X0 + 0xB40]
	0x0326E7D4 BL 0x1C16CF4
	0x0326E7D8 ADRP X0, 0xEB5000
	0x0326E7DC LDR X0, [X0 + 0xB38]
	0x0326E7E0 BL 0x1C16CF4
	0x0326E7E4 ADRP X0, 0xEB5000
	0x0326E7E8 LDR X0, [X0 + 0xB30]
	0x0326E7EC BL 0x1C16CF4
	0x0326E7F0 ADRP X0, 0xEB5000
	0x0326E7F4 LDR X0, [X0 + 0xB78]
	0x0326E7F8 BL 0x1C16CF4
	0x0326E7FC ADRP X0, 0xEB5000
	0x0326E800 LDR X0, [X0 + 0xB58]
	0x0326E804 BL 0x1C16CF4
	0x0326E808 ADRP X0, 0xEB5000
	0x0326E80C LDR X0, [X0 + 0xB50]
	0x0326E810 BL 0x1C16CF4
	0x0326E814 MOVZ W8, 0x1
	0x0326E818 STRB W8, [X27 + 0x5A6]
	0x0326E81C LDR X0, [X28]
	0x0326E820 BL 0x1C16F10
	0x0326E824 LDR X1, [X21]
	0x0326E828 MOV X21, X0
	0x0326E82C BL 0x301B7C4
	0x0326E830 STR X21, [X19 + 0x18]
	0x0326E834 LDR X0, [X26]
	0x0326E838 BL 0x1C16F10
	0x0326E83C LDR X1, [X25]
	0x0326E840 MOV X21, X0
	0x0326E844 BL 0x28FB8A8
	0x0326E848 LDR X8, [X24]
	0x0326E84C MOV X0, X19
	0x0326E850 MOV X1, X31
	0x0326E854 STP X21, X8, [X19 + 0x20]
	0x0326E858 LDR X9, [X23]
	0x0326E85C LDR X8, [X22]
	0x0326E860 STP X9, X8, [X19 + 0x30]
	0x0326E864 BL 0x33BDD8C
	0x0326E868 CBZ X20, 0x326E8FC
	0x0326E86C LDR X0, [X20 + 0x40]
	0x0326E870 CBZ X0, 0x326E884
	0x0326E874 LDR X8, [X0]
	0x0326E878 LDP X9, X1, [X8 + 0x1E8]
	0x0326E87C BLR X9
	0x0326E880 STR X0, [X19 + 0x40]
	0x0326E884 LDR X8, [X20 + 0x48]
	0x0326E888 STR X8, [X19 + 0x48]
	0x0326E88C LDR X8, [X20 + 0x50]
	0x0326E890 STR X8, [X19 + 0x50]
	0x0326E894 LDR X8, [X20 + 0x58]
	0x0326E898 STR X8, [X19 + 0x58]
	0x0326E89C LDUR V0, [X20 + 0x28]
	0x0326E8A0 STUR V0, [X19 + 0x28]
	0x0326E8A4 LDR X0, [X20 + 0x10]
	0x0326E8A8 CBZ X0, 0x326E8D8
	0x0326E8AC ADRP X22, 0xE85000
	0x0326E8B0 LDR X22, [X22 + 0x618]
	0x0326E8B4 MOV X1, X31
	0x0326E8B8 BL 0x33A01F0
	0x0326E8BC LDR X1, [X22]
	0x0326E8C0 MOV X21, X0
	0x0326E8C4 BL 0x1C16E00
	0x0326E8C8 STR X0, [X19 + 0x10]
	0x0326E8CC LDR X1, [X22]
	0x0326E8D0 MOV X0, X21
	0x0326E8D4 BL 0x1C16E00
	0x0326E8D8 LDR X1, [X20 + 0x18]
	0x0326E8DC MOV X0, X19
	0x0326E8E0 LDP X20, X19, [X31 + 0x50]
	0x0326E8E4 LDP X22, X21, [X31 + 0x40]
	0x0326E8E8 LDP X24, X23, [X31 + 0x30]
	0x0326E8EC LDP X26, X25, [X31 + 0x20]
	0x0326E8F0 LDP X28, X27, [X31 + 0x10]
	0x0326E8F4 LDR X30, [X31], #0x60
	0x0326E8F8 B 0x326E240
	0x0326E8FC ADRP X0, 0xE8A000
	0x0326E900 LDR X0, [X0 + 0x528]
	0x0326E904 BL 0x1C16D08
	0x0326E908 BL 0x1C16F10
	0x0326E90C MOV X19, X0
	0x0326E910 ADRP X0, 0xEAF000
	0x0326E914 LDR X0, [X0 + 0x928]
	0x0326E918 BL 0x1C16D08
	0x0326E91C MOV X1, X0
	0x0326E920 MOV X0, X19
	0x0326E924 MOV X2, X31
	0x0326E928 BL 0x330E100
	0x0326E92C ADRP X0, 0xEB5000
	0x0326E930 LDR X0, [X0 + 0xBA8]
	0x0326E934 BL 0x1C16D08
	0x0326E938 MOV X1, X0
	0x0326E93C MOV X0, X19
	0x0326E940 BL 0x1C16DEC
	0x0326E944 STP X29, X30, [X31 - 0x60]!
	0x0326E948 STP X28, X27, [X31 + 0x10]
	0x0326E94C STP X26, X25, [X31 + 0x20]
	0x0326E950 STP X24, X23, [X31 + 0x30]
	0x0326E954 STP X22, X21, [X31 + 0x40]
	0x0326E958 STP X20, X19, [X31 + 0x50]
	0x0326E95C ADRP X29, 0x116E000
	0x0326E960 ADRP X24, 0xEB5000
	0x0326E964 ADRP X23, 0xEB5000
	0x0326E968 ADRP X28, 0xEB5000
	0x0326E96C ADRP X27, 0xEB5000
	0x0326E970 ADRP X26, 0xEB5000
	0x0326E974 ADRP X25, 0xEB5000
	0x0326E978 LDR X24, [X24 + 0xB30]
	0x0326E97C LDR X23, [X23 + 0xB38]
	0x0326E980 LDRB W8, [X29 + 0x5A7]
	0x0326E984 LDR X28, [X28 + 0xB40]
	0x0326E988 LDR X27, [X27 + 0xB48]
	0x0326E98C LDR X26, [X26 + 0xB50]
	0x0326E990 LDR X25, [X25 + 0xB58]
	0x0326E994 MOV X19, X3
	0x0326E998 MOV X20, X2
	0x0326E99C MOV X21, X1
	0x0326E9A0 MOV X22, X0
	0x0326E9A4 TBNZ X8, 0x0, 0x326EA04
	0x0326E9A8 ADRP X0, 0xEB5000
	0x0326E9AC LDR X0, [X0 + 0xB48]
	0x0326E9B0 BL 0x1C16CF4
	0x0326E9B4 ADRP X0, 0xEB5000
	0x0326E9B8 LDR X0, [X0 + 0xB40]
	0x0326E9BC BL 0x1C16CF4
	0x0326E9C0 ADRP X0, 0xEB5000
	0x0326E9C4 LDR X0, [X0 + 0xB38]
	0x0326E9C8 BL 0x1C16CF4
	0x0326E9CC ADRP X0, 0xEB5000
	0x0326E9D0 LDR X0, [X0 + 0xB30]
	0x0326E9D4 BL 0x1C16CF4
	0x0326E9D8 ADRP X0, 0xEB5000
	0x0326E9DC LDR X0, [X0 + 0xB78]
	0x0326E9E0 BL 0x1C16CF4
	0x0326E9E4 ADRP X0, 0xEB5000
	0x0326E9E8 LDR X0, [X0 + 0xB58]
	0x0326E9EC BL 0x1C16CF4
	0x0326E9F0 ADRP X0, 0xEB5000
	0x0326E9F4 LDR X0, [X0 + 0xB50]
	0x0326E9F8 BL 0x1C16CF4
	0x0326E9FC MOVZ W8, 0x1
	0x0326EA00 STRB W8, [X29 + 0x5A7]
	0x0326EA04 LDR X0, [X24]
	0x0326EA08 BL 0x1C16F10
	0x0326EA0C LDR X1, [X23]
	0x0326EA10 MOV X23, X0
	0x0326EA14 BL 0x301B7C4
	0x0326EA18 STR X23, [X22 + 0x18]
	0x0326EA1C LDR X0, [X28]
	0x0326EA20 BL 0x1C16F10

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+48], X26
	004 Move [X31+56], X25
	005 Move [X31+64], X24
	006 Move [X31+72], X23
	007 Move [X31+80], X22
	008 Move [X31+88], X21
	009 Move [X31+96], X20
	010 Move [X31+104], X19
	011 Move X23, 0x116F000
	012 Move X22, 0xE8C000
	013 Move W8, [X23+1440]
	014 Move X22, [X22+3264]
	015 Move X21, X2
	016 Move X20, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {57}
	022 Move X0, 0xE86000
	023 Move X0, [X0+1560]
	024 Call 0x1C17CF4
	025 Move X0, 0xE87000
	026 Move X0, [X0+2064]
	027 Call 0x1C17CF4
	028 Move X0, 0xE87000
	029 Move X0, [X0+1728]
	030 Call 0x1C17CF4
	031 Move X0, 0xEB6000
	032 Move X0, [X0+2800]
	033 Call 0x1C17CF4
	034 Move X0, 0xEB6000
	035 Move X0, [X0+2808]
	036 Call 0x1C17CF4
	037 Move X0, 0xE87000
	038 Move X0, [X0+1744]
	039 Call 0x1C17CF4
	040 Move X0, 0xEB6000
	041 Move X0, [X0+2816]
	042 Call 0x1C17CF4
	043 Move X0, 0xEB6000
	044 Move X0, [X0+2824]
	045 Call 0x1C17CF4
	046 Move X0, 0xEB6000
	047 Move X0, [X0+2832]
	048 Call 0x1C17CF4
	049 Move X0, 0xEB6000
	050 Move X0, [X0+2840]
	051 Call 0x1C17CF4
	052 Move X0, 0xE8C000
	053 Move X0, [X0+3264]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X23+1440], W8
	057 Move X0, [X22]
	058 Move [X31+8], X31
	059 Move [X31+16], X31
	060 Move [X31+24], X31
	061 Call 0x1C17F10
	062 Move X1, X31
	063 Move X22, X0
	064 Call Object..ctor, X0
	065 Move X0, X19
	066 Move X1, X31
	067 Move [X19+72], X22
	068 Call Object..ctor, X0
	069 Compare X20, 0
	070 JumpIfEqual {166}
	071 Move V0, [X20+1]
	072 Move [X19+80], X21
	073 Move [X19+1], V0
	074 Move V0, [X20+2]
	075 Move [X19+2], V0
	076 Move X8, [X20+48]
	077 Move [X19+48], X8
	078 Move X8, [X20+64]
	079 Compare X8, 0
	080 JumpIfEqual {138}
	081 Move X8, 0xE87000
	082 Move X8, [X8+1744]
	083 Move X21, 0xE87000
	084 Move X0, [X8]
	085 Move X21, [X21+1728]
	086 Call 0x1C17F10
	087 Move X1, [X21]
	088 Move X21, X0
	089 Call Dictionary`2<Object, Object>..ctor, X0
	090 Move [X19+64], X21
	091 Move X0, [X20+64]
	092 Compare X0, 0
	093 JumpIfEqual {165}
	094 Move X8, 0xEB6000
	095 Move X8, [X8+2808]
	096 Move X1, [X8]
	097 Call Dictionary`2<Object, Object>.get_Keys, X0
	098 Compare X0, 0
	099 JumpIfEqual {165}
	100 Move X8, 0xEB6000
	101 Move X8, [X8+2840]
	102 Move X24, 0xEB6000
	103 Move X24, [X24+2824]
	104 Move X25, 0xEB6000
	105 Move X1, [X8]
	106 Move X26, 0xE87000
	107 Move X23, 0xEB6000
	108 Move X25, [X25+2800]
	109 Move X26, [X26+2064]
	110 Move X23, [X23+2816]
	111 Add X8, X31, 8
	112 Call KeyCollection<Object, Object>.GetEnumerator, X0
	113 Move X1, [X24]
	114 Add X0, X31, 8
	115 Call Enumerator<Object, Object>.MoveNext, X0
	116 Move TEMP, X0
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfNotEqual {135}
	120 Move X0, [X20+64]
	121 Compare X0, 0
	122 JumpIfEqual {163}
	123 Move X21, [X19+64]
	124 Move X22, [X31+24]
	125 Move X2, [X25]
	126 Move X1, X22
	127 Call Dictionary`2<Object, Object>.get_Item, X0, X1
	128 Compare X21, 0
	129 JumpIfEqual {164}
	130 Move X3, [X26]
	131 Move X2, X0
	132 Move X0, X21
	133 Move X1, X22
	134 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	135 Move X1, [X23]
	136 Add X0, X31, 8
	137 Call Enumerator<Object, Object>.Dispose, X0
	138 Move X0, [X20+56]
	139 Compare X0, 0
	140 JumpIfEqual {152}
	141 Move X21, 0xE86000
	142 Move X21, [X21+1560]
	143 Move X1, X31
	144 Call Array.Clone, X0
	145 Move X1, [X21]
	146 Move X20, X0
	147 Call 0x1C17E00
	148 Move [X19+56], X0
	149 Move X1, [X21]
	150 Move X0, X20
	151 Call 0x1C17E00
	152 Move X20, [X31+96]
	153 Move X19, [X31+104]
	154 Move X22, [X31+80]
	155 Move X21, [X31+88]
	156 Move X24, [X31+64]
	157 Move X23, [X31+72]
	158 Move X26, [X31+48]
	159 Move X25, [X31+56]
	160 Move X30, [X31+32]
	161 Add X31, X31, 112
	162 Return 
	163 Call 0x1C17F20
	164 Call 0x1C17F20
	165 Call 0x1C17F20
	166 Move X0, 0xE8B000
	167 Move X0, [X0+1320]
	168 Call 0x1C17D08
	169 Call 0x1C17F10
	170 Move X19, X0
	171 Move X0, 0xEB0000
	172 Move X0, [X0+2344]
	173 Call 0x1C17D08
	174 Move X1, X0
	175 Move X0, X19
	176 Move X2, X31
	177 Call ArgumentNullException..ctor, X0, X1
	178 Move X0, 0xEB6000
	179 Move X0, [X0+2848]
	180 Call 0x1C17D08
	181 Move X1, X0
	182 Move X0, X19
	183 Call 0x1C17DEC
	184 Move X21, X0
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Move X0, X21
	187 Call 0x3EB2AD0
	188 Move X22, [X0]
	189 Call 0x3EB2AE0
	190 Move X1, [X23]
	191 Add X0, X31, 8
	192 Call Enumerator<Object, Object>.Dispose, X0
	193 Compare X22, 0
	194 JumpIfEqual {138}
	195 Move X0, X22
	196 Call 0x1C17F18
	197 Move X22, X31
	198 Move X21, X0
	199 Move X1, [X23]
	200 Add X0, X31, 8
	201 Call Enumerator<Object, Object>.Dispose, X0
	202 Compare X22, 0
	203 JumpIfNotEqual {206}
	204 Move X0, X21
	205 Call 0x1D2D690
	206 Move X0, X22
	207 Call 0x1C17F18
	208 Call 0x1991590

Method: System.Void OnDeserializedMethod(System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x0326EA24 LDR X1, [X27]
	0x0326EA28 MOV X23, X0
	0x0326EA2C BL 0x28FB8A8
	0x0326EA30 LDR X8, [X26]
	0x0326EA34 MOV X0, X22
	0x0326EA38 MOV X1, X31
	0x0326EA3C STP X23, X8, [X22 + 0x20]
	0x0326EA40 LDR X8, [X25]
	0x0326EA44 STR X8, [X22 + 0x30]
	0x0326EA48 ADRP X8, 0xEB5000
	0x0326EA4C LDR X8, [X8 + 0xB78]
	0x0326EA50 LDR X8, [X8]
	0x0326EA54 STR X8, [X22 + 0x38]
	0x0326EA58 BL 0x33BDD8C
	0x0326EA5C CBZ X21, 0x326EA90
	0x0326EA60 MOV X0, X22
	0x0326EA64 MOV X1, X21
	0x0326EA68 MOV X2, X20
	0x0326EA6C MOV X3, X19
	0x0326EA70 LDP X20, X19, [X31 + 0x50]
	0x0326EA74 LDP X22, X21, [X31 + 0x40]
	0x0326EA78 LDP X24, X23, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x116F000
	006 Move X21, 0xE8C000
	007 Move W8, [X20+1441]
	008 Move X21, [X21+3264]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE8C000
	015 Move X0, [X0+3264]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1441], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call Object..ctor, X0
	024 Move [X19+72], X20
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return 

Method: System.Collections.Generic.IDictionary`2<System.String, System.String> get_Properties()

Disassembly:
	0x0326E604 LDP X8, X1, [X0]
	0x0326E608 MOV X0, X19
	0x0326E60C BLR X8
	0x0326E610 CBNZ X20, 0x326E61C
	0x0326E614 LDR X0, [X31 + 0x8]
	0x0326E618 BL 0x1D2C690
	0x0326E61C MOV X0, X20
	0x0326E620 BL 0x1C16F18
	0x0326E624 BL 0x1990590
	0x0326E628 STR X30, [X31 - 0x30]!
	0x0326E62C STP X22, X21, [X31 + 0x10]
	0x0326E630 STP X20, X19, [X31 + 0x20]
	0x0326E634 ADRP X19, 0x116E000
	0x0326E638 LDRB W8, [X19 + 0x5AC]
	0x0326E63C MOV X20, X1
	0x0326E640 MOV X21, X0
	0x0326E644 TBNZ X8, 0x0, 0x326E65C
	0x0326E648 ADRP X0, 0xEB5000
	0x0326E64C LDR X0, [X0 + 0xBA0]
	0x0326E650 BL 0x1C16CF4
	0x0326E654 MOVZ W8, 0x1
	0x0326E658 STRB W8, [X19 + 0x5AC]
	0x0326E65C CBZ X20, 0x326E74C
	0x0326E660 LDR X8, [X20 + 0x50]
	0x0326E664 ADRP X22, 0xEB5000
	0x0326E668 LDR X19, [X21 + 0x18]
	0x0326E66C LDR X22, [X22 + 0xBA0]
	0x0326E670 CMP X8, X21
	0x0326E674 B.EQ 0x326E6D0
	0x0326E678 LDR X8, [X20]
	0x0326E67C MOV X0, X20
	0x0326E680 MOV X1, X21
	0x0326E684 LDP X9, X2, [X8 + 0x178]
	0x0326E688 BLR X9
	0x0326E68C CBZ X19, 0x326E74C
	0x0326E690 LDR W10, [X19 + 0x1C]
	0x0326E694 LDR X8, [X19 + 0x10]
	0x0326E698 LDR X9, [X22]
	0x0326E69C ADD W10, W10, 0x1
	0x0326E6A0 STR W10, [X19 + 0x1C]
	0x0326E6A4 CBZ X8, 0x326E74C
	0x0326E6A8 LDRSW X10, [X19 + 0x18]
	0x0326E6AC LDR W11, [X8 + 0x18]
	0x0326E6B0 MOV X1, X0
	0x0326E6B4 CMP W10, W11
	0x0326E6B8 B.CS 0x326E71C
	0x0326E6BC ADD W9, W10, 0x1
	0x0326E6C0 ADD X8, X8, X10, 0x3, LSL
	0x0326E6C4 STR W9, [X19 + 0x18]
	0x0326E6C8 STR X1, [X8 + 0x20]
	0x0326E6CC B 0x326E70C
	0x0326E6D0 CBZ X19, 0x326E74C
	0x0326E6D4 LDR W10, [X19 + 0x1C]
	0x0326E6D8 LDR X8, [X19 + 0x10]
	0x0326E6DC LDR X9, [X22]
	0x0326E6E0 ADD W10, W10, 0x1
	0x0326E6E4 STR W10, [X19 + 0x1C]
	0x0326E6E8 CBZ X8, 0x326E74C
	0x0326E6EC LDRSW X10, [X19 + 0x18]
	0x0326E6F0 LDR W11, [X8 + 0x18]
	0x0326E6F4 CMP W10, W11
	0x0326E6F8 B.CS 0x326E728
	0x0326E6FC ADD W9, W10, 0x1
	0x0326E700 ADD X8, X8, X10, 0x3, LSL
	0x0326E704 STR W9, [X19 + 0x18]
	0x0326E708 STR X20, [X8 + 0x20]
	0x0326E70C LDP X20, X19, [X31 + 0x20]
	0x0326E710 LDP X22, X21, [X31 + 0x10]
	0x0326E714 LDR X30, [X31], #0x30
	0x0326E718 RET
	0x0326E71C LDR X8, [X9 + 0x20]
	0x0326E720 MOV X0, X19
	0x0326E724 B 0x326E734
	0x0326E728 LDR X8, [X9 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x116F000
	007 Move W8, [X20+1442]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xE87000
	014 Move X0, [X0+1728]
	015 Call 0x1C17CF4
	016 Move X0, 0xE87000
	017 Move X0, [X0+1744]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+1442], W8
	021 Move X0, [X19+64]
	022 Compare X0, 0
	023 JumpIfNotEqual {54}
	024 Move X20, [X19+72]
	025 Move [X31+12], W31
	026 Add X1, X31, 12
	027 Move X0, X20
	028 Move X2, X31
	029 Call Monitor.Enter, X0, X1
	030 Move X8, [X19+64]
	031 Compare X8, 0
	032 JumpIfEqual {34}
	033 Move X21, X31
	034 Move X8, 0xE87000
	035 Move X8, [X8+1744]
	036 Move X0, [X8]
	037 Call 0x1C17F10
	038 Move X8, 0xE87000
	039 Move X8, [X8+1728]
	040 Move X22, X0
	041 Move X1, [X8]
	042 Call Dictionary`2<Object, Object>..ctor, X0
	043 Move X21, X31
	044 Move [X19+64], X22
	045 Move W8, [X31+12]
	046 Compare W8, 0
	047 JumpIfEqual {51}
	048 Move X0, X20
	049 Move X1, X31
	050 Call Monitor.Exit, X0
	051 Compare X21, 0
	052 JumpIfNotEqual {60}
	053 Move X0, [X19+64]
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X30, [X31+48]
	059 Return X0
	060 Move X0, X21
	061 Call 0x1C17F18
	062 Move X22, X0
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X0, X22
	065 Call 0x3EB2AD0
	066 Move X21, [X0]
	067 Call 0x3EB2AE0
	068 Move X21, X31
	069 Move X22, X0
	070 Move W8, [X31+12]
	071 Compare W8, 0
	072 JumpIfEqual {76}
	073 Move X0, X20
	074 Move X1, X31
	075 Call Monitor.Exit, X0
	076 Compare X21, 0
	077 JumpIfNotEqual {80}
	078 Move X0, X22
	079 Call 0x1D2D690
	080 Move X0, X21
	081 Call 0x1C17F18
	082 Call 0x1991590

Method: System.Security.Claims.ClaimsIdentity get_Subject()

Disassembly:
	0x0326EA7C LDP X26, X25, [X31 + 0x20]
	0x0326EA80 LDP X28, X27, [X31 + 0x10]

ISIL:
	001 Move X0, [X0+80]
	002 Return X0

Method: System.Void set_Subject(System.Security.Claims.ClaimsIdentity value)

Disassembly:
	0x0326EA84 MOVZ W4, 0x1
	0x0326EA88 LDP X29, X30, [X31], #0x60

ISIL:
	001 Move [X0+80], X1
	002 Return 

Method: System.String get_Type()

Disassembly:
	0x0326EA8C B 0x326EAD8
	0x0326EA90 ADRP X0, 0xE8A000

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.String get_Value()

Disassembly:
	0x0326EA94 LDR X0, [X0 + 0x528]
	0x0326EA98 BL 0x1C16D08

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Security.Claims.Claim Clone(System.Security.Claims.ClaimsIdentity identity)

Disassembly:
	0x0326EA9C BL 0x1C16F10
	0x0326EAA0 MOV X19, X0
	0x0326EAA4 ADRP X0, 0xEAF000
	0x0326EAA8 LDR X0, [X0 + 0x2D8]
	0x0326EAAC BL 0x1C16D08
	0x0326EAB0 MOV X1, X0
	0x0326EAB4 MOV X0, X19
	0x0326EAB8 MOV X2, X31
	0x0326EABC BL 0x330E100
	0x0326EAC0 ADRP X0, 0xEB5000
	0x0326EAC4 LDR X0, [X0 + 0xBB0]
	0x0326EAC8 BL 0x1C16D08
	0x0326EACC MOV X1, X0
	0x0326EAD0 MOV X0, X19
	0x0326EAD4 BL 0x1C16DEC
	0x0326EAD8 STP X29, X30, [X31 - 0x60]!
	0x0326EADC STP X28, X27, [X31 + 0x10]
	0x0326EAE0 STP X26, X25, [X31 + 0x20]
	0x0326EAE4 STP X24, X23, [X31 + 0x30]
	0x0326EAE8 STP X22, X21, [X31 + 0x40]
	0x0326EAEC STP X20, X19, [X31 + 0x50]
	0x0326EAF0 ADRP X21, 0x116E000
	0x0326EAF4 LDRB W8, [X21 + 0x5B4]
	0x0326EAF8 MOV W24, W4
	0x0326EAFC MOV X22, X3
	0x0326EB00 MOV X23, X2

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x116F000
	007 Move X22, 0xEB6000
	008 Move W8, [X21+1443]
	009 Move X22, [X22+2568]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xEB6000
	017 Move X0, [X0+2568]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1443], W8
	021 Move X0, [X22]
	022 Call 0x1C17F10
	023 Move X1, X20
	024 Move X2, X19
	025 Move X21, X0
	026 Call Claim..ctor, X0, X1, X2
	027 Move X0, X21
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: System.String ToString()

Disassembly:
	0x0326EB04 MOV X19, X1
	0x0326EB08 MOV X20, X0
	0x0326EB0C TBNZ X8, 0x0, 0x326EBB4
	0x0326EB10 ADRP X0, 0xEB1000
	0x0326EB14 LDR X0, [X0 + 0xD0]
	0x0326EB18 BL 0x1C16CF4
	0x0326EB1C ADRP X0, 0xEB5000
	0x0326EB20 LDR X0, [X0 + 0xB68]
	0x0326EB24 BL 0x1C16CF4
	0x0326EB28 ADRP X0, 0xE8E000
	0x0326EB2C LDR X0, [X0 + 0x9E8]
	0x0326EB30 BL 0x1C16CF4
	0x0326EB34 ADRP X0, 0xE85000
	0x0326EB38 LDR X0, [X0 + 0xE00]
	0x0326EB3C BL 0x1C16CF4
	0x0326EB40 ADRP X0, 0xE8D000
	0x0326EB44 LDR X0, [X0 + 0x558]
	0x0326EB48 BL 0x1C16CF4
	0x0326EB4C ADRP X0, 0xEB5000
	0x0326EB50 LDR X0, [X0 + 0xBB8]
	0x0326EB54 BL 0x1C16CF4
	0x0326EB58 ADRP X0, 0xEB5000
	0x0326EB5C LDR X0, [X0 + 0xBC0]
	0x0326EB60 BL 0x1C16CF4
	0x0326EB64 ADRP X0, 0xEB5000
	0x0326EB68 LDR X0, [X0 + 0xBC8]
	0x0326EB6C BL 0x1C16CF4
	0x0326EB70 ADRP X0, 0xEB5000
	0x0326EB74 LDR X0, [X0 + 0xBD0]
	0x0326EB78 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x116F000
	006 Move X20, 0xE88000
	007 Move W8, [X21+1444]
	008 Move X20, [X20+3144]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xE88000
	015 Move X0, [X0+3144]
	016 Call 0x1C17CF4
	017 Move X0, 0xEB6000
	018 Move X0, [X0+2856]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1444], W8
	022 Move X0, [X20]
	023 Move X20, 0xEB6000
	024 Move W8, [X0+224]
	025 Move X20, [X20+2856]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X31
	030 Call CultureInfo.get_InvariantCulture
	031 Move X2, [X19+32]
	032 Move X3, [X19+40]
	033 Move X1, [X20]
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X4, X31
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Call String.Format, X0, X1, X2, X3
	040 Return X0

