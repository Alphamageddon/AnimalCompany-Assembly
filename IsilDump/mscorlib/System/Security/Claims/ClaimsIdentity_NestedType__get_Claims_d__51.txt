Type: System.Security.Claims.ClaimsIdentity/<get_Claims>d__51

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x0327040C LDR X8, [X22]
	0x03270410 LDR X1, [X8 + 0x3C0]
	0x03270414 LDR X9, [X8 + 0x3B8]
	0x03270418 MOV X0, X22
	0x0327041C BLR X9
	0x03270420 LDR X8, [X22]
	0x03270424 MOV X23, X0
	0x03270428 LDP X9, X1, [X8 + 0x1E8]
	0x0327042C MOV X0, X22
	0x03270430 BLR X9
	0x03270434 MOV X24, X0
	0x03270438 LDR X0, [X26]
	0x0327043C LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move X0, X31
	009 Move [X20+16], W19
	010 Call Environment.get_CurrentManagedThreadId
	011 Move [X20+32], W0
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x032717F8 LDR X9, [X26]
	0x032717FC ADD W10, W10, 0x1
	0x03271800 STR W10, [X19 + 0x1C]
	0x03271804 CBZ X8, 0x3271AA4
	0x03271808 LDRSW X10, [X19 + 0x18]
	0x0327180C LDR W11, [X8 + 0x18]
	0x03271810 CMP W10, W11

ISIL:
	001 Move W8, [X0+16]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Add W31, W8, 3
	004 Call <get_Claims>d__51.<>m__Finally1, X0
	005 Return 
	006 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x03271814 B.CS 0x3271834
	0x03271818 ADD W9, W10, 0x1
	0x0327181C ADD X8, X8, X10, 0x3, LSL
	0x03271820 MOV W24, W31
	0x03271824 MOV X23, X31
	0x03271828 STR W9, [X19 + 0x18]
	0x0327182C STR X1, [X8 + 0x20]
	0x03271830 B 0x3271850
	0x03271834 LDR X8, [X9 + 0x20]
	0x03271838 LDR X8, [X8 + 0xC0]
	0x0327183C LDR X2, [X8 + 0x70]
	0x03271840 MOV X0, X19
	0x03271844 BL 0x301BF90
	0x03271848 MOV W24, W31
	0x0327184C MOV X23, X31
	0x03271850 LDR X8, [X22]
	0x03271854 ADRP X10, 0xE82000
	0x03271858 LDRH W9, [X8 + 0x12E]
	0x0327185C LDR X10, [X10 + 0xE00]
	0x03271860 LDR X1, [X10]
	0x03271864 CBZ X9, 0x3271888
	0x03271868 LDR X10, [X8 + 0xB0]
	0x0327186C ADD X10, X10, 0x8
	0x03271870 LDUR X11, [X10 - 0x8]
	0x03271874 CMP X11, X1
	0x03271878 B.EQ 0x3271898
	0x0327187C SUBS X9, X9, 0x1
	0x03271880 ADD X10, X10, 0x10
	0x03271884 B.NE 0x3271870
	0x03271888 MOV X0, X22
	0x0327188C MOV W2, W31
	0x03271890 BL 0x1C5C788
	0x03271894 B 0x32718A4
	0x03271898 LDRSW X9, [X10]
	0x0327189C ADD X8, X8, X9, 0x4, LSL
	0x032718A0 ADD X0, X8, 0x138
	0x032718A4 LDP X8, X1, [X0]
	0x032718A8 MOV X0, X22
	0x032718AC BLR X8
	0x032718B0 CBNZ X23, 0x3271C50
	0x032718B4 CBZ W24, 0x3271638
	0x032718B8 LDR X0, [X27]
	0x032718BC BL 0x1C16F10
	0x032718C0 MOV X22, X0
	0x032718C4 MOV X1, X31
	0x032718C8 BL 0x32E23B4
	0x032718CC CBZ X19, 0x3271A6C
	0x032718D0 ADRP X8, 0xE82000
	0x032718D4 LDR X8, [X8 + 0x988]
	0x032718D8 LDR W10, [X19 + 0x1C]
	0x032718DC LDR X9, [X26]
	0x032718E0 LDR X1, [X8]
	0x032718E4 LDR X8, [X19 + 0x10]
	0x032718E8 ADD W10, W10, 0x1
	0x032718EC STR W10, [X19 + 0x1C]
	0x032718F0 CBZ X8, 0x3271A74
	0x032718F4 LDRSW X10, [X19 + 0x18]
	0x032718F8 LDR W11, [X8 + 0x18]
	0x032718FC CMP W10, W11
	0x03271900 B.CS 0x3271918
	0x03271904 ADD W9, W10, 0x1
	0x03271908 ADD X8, X8, X10, 0x3, LSL
	0x0327190C STR W9, [X19 + 0x18]
	0x03271910 STR X1, [X8 + 0x20]
	0x03271914 B 0x327192C
	0x03271918 LDR X8, [X9 + 0x20]
	0x0327191C LDR X8, [X8 + 0xC0]
	0x03271920 LDR X2, [X8 + 0x70]
	0x03271924 MOV X0, X19
	0x03271928 BL 0x301BF90
	0x0327192C CBZ X20, 0x3271A7C
	0x03271930 MOV X0, X20
	0x03271934 MOV X1, X22
	0x03271938 MOV X2, X21
	0x0327193C MOV X3, X31
	0x03271940 MOV W4, W31
	0x03271944 MOV X5, X31
	0x03271948 BL 0x32B1108
	0x0327194C CBZ X22, 0x3271A84
	0x03271950 LDR X8, [X22]
	0x03271954 LDR X1, [X8 + 0x3C0]
	0x03271958 LDR X9, [X8 + 0x3B8]
	0x0327195C MOV X0, X22
	0x03271960 BLR X9
	0x03271964 LDR X8, [X22]
	0x03271968 MOV X21, X0
	0x0327196C LDP X9, X1, [X8 + 0x1E8]
	0x03271970 MOV X0, X22
	0x03271974 BLR X9
	0x03271978 ADRP X8, 0xE8B000
	0x0327197C LDR X8, [X8 + 0x9E8]
	0x03271980 MOV X23, X0
	0x03271984 LDR X0, [X8]
	0x03271988 LDR W8, [X0 + 0xE0]
	0x0327198C CBNZ W8, 0x3271994
	0x03271990 BL 0x1C16DFC
	0x03271994 MOV X0, X21
	0x03271998 MOV W1, W31
	0x0327199C MOV W2, W23
	0x032719A0 MOV X3, X31
	0x032719A4 BL 0x3322804
	0x032719A8 MOV X1, X0
	0x032719AC LDR W10, [X19 + 0x1C]
	0x032719B0 LDR X8, [X19 + 0x10]
	0x032719B4 LDR X9, [X26]
	0x032719B8 ADD W10, W10, 0x1
	0x032719BC STR W10, [X19 + 0x1C]
	0x032719C0 CBZ X8, 0x3271A8C
	0x032719C4 LDRSW X10, [X19 + 0x18]
	0x032719C8 LDR W11, [X8 + 0x18]
	0x032719CC CMP W10, W11
	0x032719D0 B.CS 0x32719EC
	0x032719D4 ADD W9, W10, 0x1
	0x032719D8 ADD X8, X8, X10, 0x3, LSL
	0x032719DC MOV X21, X31
	0x032719E0 STR W9, [X19 + 0x18]
	0x032719E4 STR X1, [X8 + 0x20]
	0x032719E8 B 0x3271A04
	0x032719EC LDR X8, [X9 + 0x20]
	0x032719F0 LDR X8, [X8 + 0xC0]
	0x032719F4 LDR X2, [X8 + 0x70]
	0x032719F8 MOV X0, X19
	0x032719FC BL 0x301BF90
	0x03271A00 MOV X21, X31
	0x03271A04 LDR X8, [X22]
	0x03271A08 ADRP X10, 0xE82000
	0x03271A0C LDRH W9, [X8 + 0x12E]
	0x03271A10 LDR X10, [X10 + 0xE00]
	0x03271A14 LDR X1, [X10]
	0x03271A18 CBZ X9, 0x3271A3C
	0x03271A1C LDR X10, [X8 + 0xB0]
	0x03271A20 ADD X10, X10, 0x8
	0x03271A24 LDUR X11, [X10 - 0x8]
	0x03271A28 CMP X11, X1
	0x03271A2C B.EQ 0x3271A4C
	0x03271A30 SUBS X9, X9, 0x1
	0x03271A34 ADD X10, X10, 0x10
	0x03271A38 B.NE 0x3271A24
	0x03271A3C MOV X0, X22
	0x03271A40 MOV W2, W31
	0x03271A44 BL 0x1C5C788
	0x03271A48 B 0x3271A58
	0x03271A4C LDRSW X9, [X10]
	0x03271A50 ADD X8, X8, X9, 0x4, LSL
	0x03271A54 ADD X0, X8, 0x138
	0x03271A58 LDP X8, X1, [X0]
	0x03271A5C MOV X0, X22
	0x03271A60 BLR X8
	0x03271A64 CBZ X21, 0x3271638
	0x03271A68 B 0x3271C48
	0x03271A6C BL 0x1C16F20
	0x03271A70 B 0x3271D7C
	0x03271A74 BL 0x1C16F20
	0x03271A78 B 0x3271D7C
	0x03271A7C BL 0x1C16F20
	0x03271A80 B 0x3271D7C
	0x03271A84 BL 0x1C16F20
	0x03271A88 B 0x3271D7C
	0x03271A8C BL 0x1C16F20
	0x03271A90 B 0x3271D7C
	0x03271A94 BL 0x1C16F20
	0x03271A98 B 0x3271D7C
	0x03271A9C BL 0x1C16F20
	0x03271AA0 B 0x3271D7C
	0x03271AA4 BL 0x1C16F20
	0x03271AA8 B 0x3271D7C
	0x03271AAC B 0x3271AC8
	0x03271AB0 B 0x3271AC8
	0x03271AB4 B 0x3271AC8
	0x03271AB8 B 0x3271AF0
	0x03271ABC B 0x3271AF0
	0x03271AC0 B 0x3271AF0
	0x03271AC4 B 0x3271AC8
	0x03271AC8 CMP W1, 0x1
	0x03271ACC B.NE 0x3271CB8
	0x03271AD0 BL 0x3EB1AD0
	0x03271AD4 LDR X23, [X0]
	0x03271AD8 BL 0x3EB1AE0
	0x03271ADC MOVZ W24, 0x1
	0x03271AE0 CBNZ X22, 0x3271850
	0x03271AE4 B 0x32718B0
	0x03271AE8 B 0x3271AF0
	0x03271AEC B 0x3271AF0
	0x03271AF0 CMP W1, 0x1
	0x03271AF4 B.NE 0x3271C60
	0x03271AF8 BL 0x3EB1AD0
	0x03271AFC LDR X21, [X0]
	0x03271B00 BL 0x3EB1AE0
	0x03271B04 CBNZ X22, 0x3271A04
	0x03271B08 B 0x3271A64
	0x03271B0C ADRP X8, 0xEB2000
	0x03271B10 LDR X8, [X8 + 0xCB8]
	0x03271B14 ADD X0, X31, 0x30
	0x03271B18 LDR X1, [X8]
	0x03271B1C BL 0x2BC434C
	0x03271B20 LDR X0, [X27]
	0x03271B24 BL 0x1C16F10
	0x03271B28 MOV X1, X31
	0x03271B2C MOV X21, X0
	0x03271B30 BL 0x32E23B4
	0x03271B34 CBZ X20, 0x3271D40
	0x03271B38 MOV X0, X20
	0x03271B3C MOV X1, X21
	0x03271B40 MOV X2, X19
	0x03271B44 MOV X3, X31
	0x03271B48 MOV W4, W31
	0x03271B4C MOV X5, X31
	0x03271B50 BL 0x32B1108
	0x03271B54 CBZ X21, 0x3271D4C
	0x03271B58 LDR X8, [X21]
	0x03271B5C LDR X1, [X8 + 0x3C0]
	0x03271B60 LDR X9, [X8 + 0x3B8]
	0x03271B64 MOV X0, X21
	0x03271B68 BLR X9
	0x03271B6C LDR X8, [X21]
	0x03271B70 MOV X19, X0
	0x03271B74 LDP X9, X1, [X8 + 0x1E8]
	0x03271B78 MOV X0, X21
	0x03271B7C BLR X9
	0x03271B80 ADRP X8, 0xE8B000
	0x03271B84 LDR X8, [X8 + 0x9E8]
	0x03271B88 MOV X20, X0
	0x03271B8C LDR X0, [X8]
	0x03271B90 LDR W8, [X0 + 0xE0]
	0x03271B94 CBNZ W8, 0x3271B9C
	0x03271B98 BL 0x1C16DFC
	0x03271B9C MOV X0, X19
	0x03271BA0 MOV W1, W31
	0x03271BA4 MOV W2, W20
	0x03271BA8 MOV X3, X31
	0x03271BAC BL 0x3322804
	0x03271BB0 MOV X20, X0
	0x03271BB4 MOV X19, X31
	0x03271BB8 LDR X8, [X21]
	0x03271BBC ADRP X10, 0xE82000
	0x03271BC0 LDRH W9, [X8 + 0x12E]
	0x03271BC4 LDR X10, [X10 + 0xE00]
	0x03271BC8 LDR X1, [X10]
	0x03271BCC CBZ X9, 0x3271BF0
	0x03271BD0 LDR X10, [X8 + 0xB0]
	0x03271BD4 ADD X10, X10, 0x8
	0x03271BD8 LDUR X11, [X10 - 0x8]
	0x03271BDC CMP X11, X1
	0x03271BE0 B.EQ 0x3271C00
	0x03271BE4 SUBS X9, X9, 0x1
	0x03271BE8 ADD X10, X10, 0x10
	0x03271BEC B.NE 0x3271BD8
	0x03271BF0 MOV X0, X21
	0x03271BF4 MOV W2, W31
	0x03271BF8 BL 0x1C5C788
	0x03271BFC B 0x3271C0C
	0x03271C00 LDRSW X9, [X10]
	0x03271C04 ADD X8, X8, X9, 0x4, LSL

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X20, 0x116C000
	007 Move W8, [X20+1461]
	008 Move X19, X0
	009 Move [X31+24], X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {37}
	014 Move X0, 0xEB3000
	015 Move X0, [X0+3152]
	016 Call 0x1C17CF4
	017 Move X0, 0xEB3000
	018 Move X0, [X0+3160]
	019 Call 0x1C17CF4
	020 Move X0, 0xEB3000
	021 Move X0, [X0+2960]
	022 Call 0x1C17CF4
	023 Move X0, 0xEB3000
	024 Move X0, [X0+2968]
	025 Call 0x1C17CF4
	026 Move X0, 0xE83000
	027 Move X0, [X0+3608]
	028 Call 0x1C17CF4
	029 Move X0, 0xEB3000
	030 Move X0, [X0+3128]
	031 Call 0x1C17CF4
	032 Move X0, 0xEB3000
	033 Move X0, [X0+3136]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X20+1461], W8
	037 Add X8, X31, 24
	038 Move [X31+8], X31
	039 Move [X31+16], X8
	040 Move W8, [X19+16]
	041 Move X21, [X19+40]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Compare W8, 0
	045 JumpIfNotEqual {94}
	046 Move TEMP, 0
	047 Not TEMP
	048 Move W9, TEMP
	049 Move [X19+16], W9
	050 Move [X19+48], W31
	051 Move W8, [X19+48]
	052 Move TEMP, 0
	053 Not TEMP
	054 Move W9, TEMP
	055 Move [X19+16], W9
	056 Add W8, W8, 1
	057 Move [X19+48], W8
	058 Compare X21, 0
	059 JumpIfEqual {92}
	060 Move X9, [X21+24]
	061 Compare X9, 0
	062 JumpIfEqual {93}
	063 Move W10, [X9+24]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X10, 0xEB3000
	066 Move X10, [X10+3136]
	067 Move X2, [X10]
	068 Move X0, X9
	069 Move W1, W8
	070 Call List`1<Object>.get_Item, X0, X1
	071 Move X9, [X31+24]
	072 Move X8, X0
	073 Move W0, 1
	074 Move [X9+24], X8
	075 Move [X9+16], W0
	076 Move X20, [X19+56]
	077 Move TEMP, 2
	078 Not TEMP
	079 Move W8, TEMP
	080 Move [X19+16], W8
	081 Compare X20, 0
	082 JumpIfNotEqual {149}
	083 Call 0x1C17F20
	084 Move X8, [X21+32]
	085 Compare X8, 0
	086 JumpIfEqual {94}
	087 Move W20, W31
	088 Move [X19+48], W31
	089 Compare X21, 0
	090 JumpIfNotEqual {186}
	091 Call 0x1C17F20
	092 Call 0x1C17F20
	093 Call 0x1C17F20
	094 Move W0, W31
	095 Move X0, [X21+32]
	096 Compare X0, 0
	097 JumpIfEqual {232}
	098 Move X8, [X31+24]
	099 Move X19, 0xEB3000
	100 Move X19, [X19+3160]
	101 Move W1, [X8+48]
	102 Move X2, [X19]
	103 Call 0x28FC988, X0, X1
	104 Compare X0, 0
	105 JumpIfEqual {132}
	106 Move X0, [X21+32]
	107 Compare X0, 0
	108 JumpIfEqual {234}
	109 Move X8, [X31+24]
	110 Move X2, [X19]
	111 Move W1, [X8+48]
	112 Call 0x28FC988, X0, X1
	113 Move X19, X0
	114 Compare X0, 0
	115 JumpIfEqual {233}
	116 Move X10, 0xEB3000
	117 Move X8, [X19]
	118 Move X10, [X10+2960]
	119 NotImplemented "Instruction LDRH not yet implemented."
	120 Move X1, [X10]
	121 Compare X9, 0
	122 JumpIfEqual {129}
	123 Move X10, [X8+176]
	124 Add X10, X10, 8
	125 NotImplemented "Instruction LDUR not yet implemented."
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Subtract X9, X9, 1
	128 Add X10, X10, 16
	129 Move X0, X19
	130 Move W2, W31
	131 Call 0x1C5D788
	132 Move X8, [X31+24]
	133 NotImplemented "Instruction LDRSW not yet implemented."
	134 Add X8, X8, X9
	135 Add X0, X8, 312
	136 Move X8, [X0]
	137 Move X1, [X0+8]
	138 Move X0, X19
	139 NotImplemented "Instruction BLR not yet implemented."
	140 Move X8, [X31+24]
	141 Move TEMP, 2
	142 Not TEMP
	143 Move W9, TEMP
	144 Move X20, X0
	145 Move [X8+56], X0
	146 Move [X8+16], W9
	147 Compare X20, 0
	148 JumpIfEqual {83}
	149 Move X10, 0xE83000
	150 Move X8, [X20]
	151 Move X10, [X10+3608]
	152 NotImplemented "Instruction LDRH not yet implemented."
	153 Move X1, [X10]
	154 Compare X9, 0
	155 JumpIfEqual {162}
	156 Move X10, [X8+176]
	157 Add X10, X10, 8
	158 NotImplemented "Instruction LDUR not yet implemented."
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Subtract X9, X9, 1
	161 Add X10, X10, 16
	162 Move X0, X20
	163 Move W2, W31
	164 Call 0x1C5D788
	165 NotImplemented "Instruction LDRSW not yet implemented."
	166 Add X8, X8, X9
	167 Add X0, X8, 312
	168 Move X8, [X0]
	169 Move X1, [X0+8]
	170 Move X0, X20
	171 NotImplemented "Instruction BLR not yet implemented."
	172 Move W8, W0
	173 Move X0, [X31+24]
	174 Move TEMP, X8
	175 And TEMP, TEMP, 1
	176 Compare TEMP, 1
	177 JumpIfEqual {194}
	178 Call <get_Claims>d__51.<>m__Finally1, X0
	179 Move X8, [X31+24]
	180 Move [X8+56], X31
	181 Move W9, [X8+48]
	182 Add W20, W9, 1
	183 Move [X8+48], W20
	184 Compare X21, 0
	185 JumpIfEqual {91}
	186 Move X0, [X21+32]
	187 Compare X0, 0
	188 JumpIfEqual {231}
	189 Move X8, 0xEB3000
	190 Move X8, [X8+3152]
	191 Move X1, [X8]
	192 Call 0x28FC900, X0
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Move X19, [X0+56]
	195 Compare X19, 0
	196 JumpIfEqual {235}
	197 Move X10, 0xEB3000
	198 Move X8, [X19]
	199 Move X10, [X10+2968]
	200 NotImplemented "Instruction LDRH not yet implemented."
	201 Move X1, [X10]
	202 Compare X9, 0
	203 JumpIfEqual {210}
	204 Move X10, [X8+176]
	205 Add X10, X10, 8
	206 NotImplemented "Instruction LDUR not yet implemented."
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Subtract X9, X9, 1
	209 Add X10, X10, 16
	210 Move X0, X19
	211 Move W2, W31
	212 Call 0x1C5D788
	213 NotImplemented "Instruction LDRSW not yet implemented."
	214 Add X8, X8, X9
	215 Add X0, X8, 312
	216 Move X8, [X0]
	217 Move X1, [X0+8]
	218 Move X0, X19
	219 NotImplemented "Instruction BLR not yet implemented."
	220 Move X8, [X31+24]
	221 Move W9, 2
	222 Move [X8+24], X0
	223 Move W0, 1
	224 Move [X8+16], W9
	225 Move X20, [X31+48]
	226 Move X19, [X31+56]
	227 Move X30, [X31+32]
	228 Move X21, [X31+40]
	229 Add X31, X31, 64
	230 Return X0
	231 Call 0x1C17F20
	232 Call 0x1C17F20
	233 Call 0x1C17F20
	234 Call 0x1C17F20
	235 Call 0x1C17F20
	236 NotImplemented "Instruction CMP not yet implemented."
	237 Call 0x3EB2AD0
	238 Move X19, [X0]
	239 Move [X31+8], X19
	240 Call 0x3EB2AE0
	241 Compare X19, 0
	242 JumpIfEqual {94}
	243 Add X8, X31, 8
	244 Add X0, X8, 8
	245 Call 0x1BB646C
	246 Move X0, X19
	247 Call 0x1C17F18
	248 Compare X19, 0
	249 JumpIfNotEqual {251}
	250 Call 0x1D2D690
	251 Move X0, [X31+24]
	252 Move W8, [X0+16]
	253 NotImplemented "Instruction CMP not yet implemented."
	254 Add W31, W8, 3
	255 Call <get_Claims>d__51.<>m__Finally1, X0
	256 Move X0, X19
	257 Call 0x1C17F18
	258 Call 0x1991590

Method: System.Void <>m__Finally1()

Disassembly:
	0x03271C08 ADD X0, X8, 0x138
	0x03271C0C LDP X8, X1, [X0]
	0x03271C10 MOV X0, X21
	0x03271C14 BLR X8
	0x03271C18 CBNZ X19, 0x3271D44
	0x03271C1C MOV X0, X20
	0x03271C20 LDP X20, X19, [X31 + 0xA0]
	0x03271C24 LDP X22, X21, [X31 + 0x90]
	0x03271C28 LDP X24, X23, [X31 + 0x80]
	0x03271C2C LDP X26, X25, [X31 + 0x70]
	0x03271C30 LDP X28, X27, [X31 + 0x60]
	0x03271C34 LDP X29, X30, [X31 + 0x50]
	0x03271C38 ADD X31, X31, 0xB0
	0x03271C3C RET
	0x03271C40 BL 0x1C16F20
	0x03271C44 BL 0x1C16F20
	0x03271C48 MOV X0, X21
	0x03271C4C BL 0x1C16F18
	0x03271C50 MOV X0, X23
	0x03271C54 BL 0x1C16F18
	0x03271C58 BL 0x1C16F20
	0x03271C5C BL 0x1C16F20
	0x03271C60 STR X1, [X31]
	0x03271C64 MOV X23, X0
	0x03271C68 MOV X21, X31
	0x03271C6C CBZ X22, 0x3271D28
	0x03271C70 LDR X8, [X22]
	0x03271C74 ADRP X10, 0xE82000
	0x03271C78 LDRH W9, [X8 + 0x12E]
	0x03271C7C LDR X10, [X10 + 0xE00]
	0x03271C80 LDR X1, [X10]
	0x03271C84 CBZ X9, 0x3271CA8
	0x03271C88 LDR X10, [X8 + 0xB0]
	0x03271C8C ADD X10, X10, 0x8
	0x03271C90 LDUR X11, [X10 - 0x8]
	0x03271C94 CMP X11, X1
	0x03271C98 B.EQ 0x3271D10
	0x03271C9C SUBS X9, X9, 0x1
	0x03271CA0 ADD X10, X10, 0x10
	0x03271CA4 B.NE 0x3271C90
	0x03271CA8 MOV X0, X22
	0x03271CAC MOV W2, W31
	0x03271CB0 BL 0x1C5C788
	0x03271CB4 B 0x3271D1C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x116C000
	005 Move W8, [X19+1462]
	006 Move X20, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE83000
	012 Move X0, [X0+3584]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X19+1462], W8
	016 Move X19, [X20+56]
	017 Move TEMP, 0
	018 Not TEMP
	019 Move W8, TEMP
	020 Move [X20+16], W8
	021 Compare X19, 0
	022 JumpIfEqual {39}
	023 Move X10, 0xE83000
	024 Move X8, [X19]
	025 Move X10, [X10+3584]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X1, [X10]
	028 Compare X9, 0
	029 JumpIfEqual {36}
	030 Move X10, [X8+176]
	031 Add X10, X10, 8
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Subtract X9, X9, 1
	035 Add X10, X10, 16
	036 Move X0, X19
	037 Move W2, W31
	038 Call 0x1C5D788
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Return 
	043 NotImplemented "Instruction LDRSW not yet implemented."
	044 Add X8, X8, X9
	045 Add X0, X8, 312
	046 Move X2, [X0]
	047 Move X1, [X0+8]
	048 Move X0, X19
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 CallNoReturn X2

Method: System.Security.Claims.Claim System.Collections.Generic.IEnumerator<System.Security.Claims.Claim>.get_Current()

Disassembly:
	0x03271CB8 STR X1, [X31]
	0x03271CBC MOV X21, X0

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x03271CC0 MOV X23, X31
	0x03271CC4 CBZ X22, 0x3271D68
	0x03271CC8 LDR X8, [X22]
	0x03271CCC ADRP X10, 0xE82000
	0x03271CD0 LDRH W9, [X8 + 0x12E]
	0x03271CD4 LDR X10, [X10 + 0xE00]
	0x03271CD8 LDR X1, [X10]
	0x03271CDC CBZ X9, 0x3271D00
	0x03271CE0 LDR X10, [X8 + 0xB0]
	0x03271CE4 ADD X10, X10, 0x8
	0x03271CE8 LDUR X11, [X10 - 0x8]
	0x03271CEC CMP X11, X1
	0x03271CF0 B.EQ 0x3271D50
	0x03271CF4 SUBS X9, X9, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xE83000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0xEB3000
	011 Move X0, [X0+3168]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x03271CF8 ADD X10, X10, 0x10
	0x03271CFC B.NE 0x3271CE8

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Collections.Generic.IEnumerator`1<System.Security.Claims.Claim> System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>.GetEnumerator()

Disassembly:
	0x03271D00 MOV X0, X22
	0x03271D04 MOV W2, W31
	0x03271D08 BL 0x1C5C788
	0x03271D0C B 0x3271D5C
	0x03271D10 LDRSW X9, [X10]
	0x03271D14 ADD X8, X8, X9, 0x4, LSL
	0x03271D18 ADD X0, X8, 0x138
	0x03271D1C LDP X8, X1, [X0]
	0x03271D20 MOV X0, X22
	0x03271D24 BLR X8
	0x03271D28 LDR X1, [X31]
	0x03271D2C MOV X0, X23
	0x03271D30 CBZ X21, 0x3271E90
	0x03271D34 MOV X0, X21
	0x03271D38 BL 0x1C16F18
	0x03271D3C BL 0x1C16F20
	0x03271D40 BL 0x1C16F20
	0x03271D44 MOV X0, X19
	0x03271D48 BL 0x1C16F18
	0x03271D4C BL 0x1C16F20
	0x03271D50 LDRSW X9, [X10]
	0x03271D54 ADD X8, X8, X9, 0x4, LSL
	0x03271D58 ADD X0, X8, 0x138
	0x03271D5C LDP X8, X1, [X0]
	0x03271D60 MOV X0, X22
	0x03271D64 BLR X8
	0x03271D68 LDR X1, [X31]
	0x03271D6C MOV X0, X21
	0x03271D70 CBZ X23, 0x3271E90
	0x03271D74 MOV X0, X23
	0x03271D78 BL 0x1C16F18
	0x03271D7C MOV X21, X0
	0x03271D80 STR X1, [X31]
	0x03271D84 CBNZ X22, 0x3271CC8
	0x03271D88 B 0x3271D68
	0x03271D8C MOV X23, X0
	0x03271D90 STR X1, [X31]
	0x03271D94 CBNZ X22, 0x3271C70
	0x03271D98 B 0x3271D28

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x116C000
	005 Move W8, [X20+1463]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xEB3000
	012 Move X0, [X0+3080]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1463], W8
	016 Move W8, [X19+16]
	017 Add W31, W8, 2
	018 Move W20, [X19+32]
	019 Move X0, X31
	020 Call Environment.get_CurrentManagedThreadId
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move [X19+16], W31
	023 Move X8, 0xEB3000
	024 Move X8, [X8+3080]
	025 Move X0, [X8]
	026 Call 0x1C17F10
	027 Move X1, X31
	028 Move X20, X0
	029 Call Object..ctor, X0
	030 Move X0, X31
	031 Move [X20+16], W31
	032 Call Environment.get_CurrentManagedThreadId
	033 Move [X20+32], W0
	034 Move X8, [X19+40]
	035 Move X19, X20
	036 Move [X20+40], X8
	037 Move X0, X19
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x03271D9C B 0x3271DAC

ISIL:
	001 Call <get_Claims>d__51.System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>.GetEnumerator, X0
	002 Return X0

