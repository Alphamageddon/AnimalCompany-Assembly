Type: System.Security.Claims.ClaimsPrincipal

Method: System.Security.Claims.ClaimsIdentity SelectPrimaryIdentity(System.Collections.Generic.IEnumerable`1<System.Security.Claims.ClaimsIdentity> identities)

Disassembly:
	0x03271DA0 B 0x3271DAC
	0x03271DA4 B 0x3271DAC
	0x03271DA8 B 0x3271DAC
	0x03271DAC MOV X20, X0
	0x03271DB0 CMP W1, 0x1
	0x03271DB4 B.NE 0x3271DD4
	0x03271DB8 MOV X0, X20
	0x03271DBC BL 0x3EB1AD0
	0x03271DC0 LDR X19, [X0]
	0x03271DC4 BL 0x3EB1AE0
	0x03271DC8 MOV X20, X31
	0x03271DCC CBNZ X21, 0x3271BB8
	0x03271DD0 B 0x3271C18
	0x03271DD4 MOV X19, X31
	0x03271DD8 B 0x3271DE0
	0x03271DDC MOV X20, X0
	0x03271DE0 CBZ X21, 0x3271E44
	0x03271DE4 LDR X8, [X21]
	0x03271DE8 ADRP X10, 0xE82000
	0x03271DEC LDRH W9, [X8 + 0x12E]
	0x03271DF0 LDR X10, [X10 + 0xE00]
	0x03271DF4 LDR X1, [X10]
	0x03271DF8 CBZ X9, 0x3271E1C
	0x03271DFC LDR X10, [X8 + 0xB0]
	0x03271E00 ADD X10, X10, 0x8
	0x03271E04 LDUR X11, [X10 - 0x8]
	0x03271E08 CMP X11, X1
	0x03271E0C B.EQ 0x3271E2C
	0x03271E10 SUBS X9, X9, 0x1
	0x03271E14 ADD X10, X10, 0x10
	0x03271E18 B.NE 0x3271E04
	0x03271E1C MOV X0, X21
	0x03271E20 MOV W2, W31
	0x03271E24 BL 0x1C5C788
	0x03271E28 B 0x3271E38
	0x03271E2C LDRSW X9, [X10]
	0x03271E30 ADD X8, X8, X9, 0x4, LSL
	0x03271E34 ADD X0, X8, 0x138
	0x03271E38 LDP X8, X1, [X0]
	0x03271E3C MOV X0, X21
	0x03271E40 BLR X8
	0x03271E44 CBZ X19, 0x3271EEC
	0x03271E48 MOV X0, X19
	0x03271E4C BL 0x1C16F18
	0x03271E50 B 0x3271E90
	0x03271E54 B 0x3271E90
	0x03271E58 B 0x3271E90
	0x03271E5C B 0x3271E90
	0x03271E60 B 0x3271E90
	0x03271E64 B 0x3271E90
	0x03271E68 B 0x3271E90
	0x03271E6C B 0x3271E90
	0x03271E70 B 0x3271E90
	0x03271E74 B 0x3271E90
	0x03271E78 B 0x3271E90
	0x03271E7C B 0x3271E90
	0x03271E80 B 0x3271E90
	0x03271E84 B 0x3271E90
	0x03271E88 B 0x3271E90
	0x03271E8C B 0x3271E90
	0x03271E90 CMP W1, 0x1
	0x03271E94 B.NE 0x3271EC4
	0x03271E98 BL 0x3EB1AD0
	0x03271E9C LDR X21, [X0]
	0x03271EA0 BL 0x3EB1AE0
	0x03271EA4 ADRP X8, 0xEB2000
	0x03271EA8 LDR X8, [X8 + 0xCB8]
	0x03271EAC ADD X0, X31, 0x30
	0x03271EB0 LDR X1, [X8]
	0x03271EB4 BL 0x2BC434C
	0x03271EB8 CBZ X21, 0x3271B20
	0x03271EBC MOV X0, X21
	0x03271EC0 BL 0x1C16F18
	0x03271EC4 MOV X20, X0
	0x03271EC8 MOV X21, X31
	0x03271ECC B 0x3271ED4
	0x03271ED0 MOV X20, X0
	0x03271ED4 ADRP X8, 0xEB2000
	0x03271ED8 LDR X8, [X8 + 0xCB8]
	0x03271EDC LDR X1, [X8]
	0x03271EE0 ADD X0, X31, 0x30
	0x03271EE4 BL 0x2BC434C
	0x03271EE8 CBNZ X21, 0x3271EF4
	0x03271EEC MOV X0, X20
	0x03271EF0 BL 0x1D2C690
	0x03271EF4 MOV X0, X21
	0x03271EF8 BL 0x1C16F18
	0x03271EFC BL 0x1990590
	0x03271F00 STP X30, X21, [X31 - 0x20]!
	0x03271F04 STP X20, X19, [X31 + 0x10]
	0x03271F08 ADRP X20, 0x116B000
	0x03271F0C ADRP X21, 0xEB2000
	0x03271F10 LDRB W8, [X20 + 0x5BD]
	0x03271F14 LDR X21, [X21 + 0xC30]
	0x03271F18 MOV X19, X0
	0x03271F1C TBNZ X8, 0x0, 0x3271F34
	0x03271F20 ADRP X0, 0xEB2000
	0x03271F24 LDR X0, [X0 + 0xC30]
	0x03271F28 BL 0x1C16CF4
	0x03271F2C MOVZ W8, 0x1
	0x03271F30 STRB W8, [X20 + 0x5BD]
	0x03271F34 LDR X1, [X21]
	0x03271F38 MOV X0, X19
	0x03271F3C BL 0x1C16E00
	0x03271F40 CBNZ X0, 0x3271F54
	0x03271F44 LDR X1, [X19 + 0x18]
	0x03271F48 MOV X0, X19
	0x03271F4C BL 0x3271F60
	0x03271F50 STR X31, [X19 + 0x18]
	0x03271F54 LDP X20, X19, [X31 + 0x10]
	0x03271F58 LDP X30, X21, [X31], #0x20
	0x03271F5C RET
	0x03271F60 SUB X31, X31, 0x80
	0x03271F64 STP X29, X30, [X31 + 0x20]
	0x03271F68 STP X28, X27, [X31 + 0x30]
	0x03271F6C STP X26, X25, [X31 + 0x40]
	0x03271F70 STP X24, X23, [X31 + 0x50]
	0x03271F74 STP X22, X21, [X31 + 0x60]
	0x03271F78 STP X20, X19, [X31 + 0x70]
	0x03271F7C ADRP X23, 0x116B000
	0x03271F80 ADRP X22, 0xEB2000
	0x03271F84 ADRP X21, 0xEB2000
	0x03271F88 LDRB W8, [X23 + 0x5BF]
	0x03271F8C LDR X22, [X22 + 0xC88]
	0x03271F90 LDR X21, [X21 + 0xC90]
	0x03271F94 MOV X19, X1
	0x03271F98 MOV X20, X0
	0x03271F9C TBNZ X8, 0x0, 0x3272038
	0x03271FA0 ADRP X0, 0xEAE000
	0x03271FA4 LDR X0, [X0 + 0xD0]
	0x03271FA8 BL 0x1C16CF4
	0x03271FAC ADRP X0, 0xEB2000
	0x03271FB0 LDR X0, [X0 + 0xB68]
	0x03271FB4 BL 0x1C16CF4
	0x03271FB8 ADRP X0, 0xE8B000
	0x03271FBC LDR X0, [X0 + 0x9E8]
	0x03271FC0 BL 0x1C16CF4
	0x03271FC4 ADRP X0, 0xE82000
	0x03271FC8 LDR X0, [X0 + 0xE00]
	0x03271FCC BL 0x1C16CF4
	0x03271FD0 ADRP X0, 0xEB2000
	0x03271FD4 LDR X0, [X0 + 0xCE0]
	0x03271FD8 BL 0x1C16CF4
	0x03271FDC ADRP X0, 0xEB2000
	0x03271FE0 LDR X0, [X0 + 0xC90]
	0x03271FE4 BL 0x1C16CF4
	0x03271FE8 ADRP X0, 0xE83000
	0x03271FEC LDR X0, [X0 + 0x1C8]
	0x03271FF0 BL 0x1C16CF4
	0x03271FF4 ADRP X0, 0xEAA000
	0x03271FF8 LDR X0, [X0 + 0xB58]
	0x03271FFC BL 0x1C16CF4
	0x03272000 ADRP X0, 0xEB1000
	0x03272004 LDR X0, [X0 + 0xC88]
	0x03272008 BL 0x1C16CF4
	0x0327200C ADRP X0, 0xE82000
	0x03272010 LDR X0, [X0 + 0x1D0]
	0x03272014 BL 0x1C16CF4
	0x03272018 ADRP X0, 0xE89000
	0x0327201C LDR X0, [X0 + 0x558]
	0x03272020 BL 0x1C16CF4
	0x03272024 ADRP X0, 0xEB1000
	0x03272028 LDR X0, [X0 + 0xA40]
	0x0327202C BL 0x1C16CF4
	0x03272030 MOVZ W8, 0x1
	0x03272034 STRB W8, [X23 + 0x5BF]
	0x03272038 LDR X0, [X22]
	0x0327203C STR X31, [X31 + 0x18]
	0x03272040 BL 0x1C16F10
	0x03272044 LDR X1, [X21]
	0x03272048 MOV X21, X0
	0x0327204C BL 0x301B7C4
	0x03272050 MOV X0, X19
	0x03272054 MOV X1, X31
	0x03272058 STR X21, [X20 + 0x20]
	0x0327205C BL 0x32277A8
	0x03272060 TBNZ X0, 0x0, 0x3272420
	0x03272064 ADRP X8, 0xEAD000
	0x03272068 LDR X8, [X8 + 0xD0]
	0x0327206C ADRP X22, 0xE8A000
	0x03272070 ADRP X28, 0xE89000
	0x03272074 LDR X0, [X8]
	0x03272078 LDR X22, [X22 + 0x9E8]
	0x0327207C LDR X28, [X28 + 0x558]
	0x03272080 BL 0x1C16F10
	0x03272084 MOV X1, X31
	0x03272088 MOV X21, X0
	0x0327208C BL 0x32B0928
	0x03272090 LDR X0, [X22]
	0x03272094 LDR W8, [X0 + 0xE0]
	0x03272098 CBNZ W8, 0x32720A0
	0x0327209C BL 0x1C16DFC
	0x032720A0 MOV X0, X19
	0x032720A4 MOV X1, X31
	0x032720A8 BL 0x3322D04
	0x032720AC LDR X8, [X28]
	0x032720B0 MOV X22, X0
	0x032720B4 MOV X0, X8
	0x032720B8 BL 0x1C16F10
	0x032720BC MOV X1, X22
	0x032720C0 MOV X2, X31
	0x032720C4 MOV X19, X0
	0x032720C8 BL 0x32E2528
	0x032720CC CBZ X21, 0x32724A8
	0x032720D0 MOV X0, X21
	0x032720D4 MOV X1, X19
	0x032720D8 MOV X2, X31
	0x032720DC MOV W3, W31
	0x032720E0 MOV X4, X31
	0x032720E4 BL 0x32B09BC
	0x032720E8 MOV X22, X0
	0x032720EC CBZ X0, 0x32724B8
	0x032720F0 ADRP X9, 0xE82000
	0x032720F4 LDR X9, [X9 + 0x1D0]
	0x032720F8 LDR X8, [X22]
	0x032720FC LDR X1, [X9]
	0x03272100 LDRB W10, [X8 + 0x130]
	0x03272104 LDRB W9, [X1 + 0x130]
	0x03272108 CMP W10, W9
	0x0327210C B.CC 0x32724A0
	0x03272110 LDR X8, [X8 + 0xC8]
	0x03272114 ADD X8, X8, X9, 0x3, LSL

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x116C000
	010 Move W8, [X20+1464]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0xE83000
	017 Move X0, [X0+3584]
	018 Call 0x1C17CF4
	019 Move X0, 0xEB3000
	020 Move X0, [X0+3176]
	021 Call 0x1C17CF4
	022 Move X0, 0xEB3000
	023 Move X0, [X0+3184]
	024 Call 0x1C17CF4
	025 Move X0, 0xE83000
	026 Move X0, [X0+3608]
	027 Call 0x1C17CF4
	028 Move X0, 0xEB3000
	029 Move X0, [X0+2624]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+1464], W8
	033 Compare X19, 0
	034 JumpIfEqual {170}
	035 Move X10, 0xEB3000
	036 Move X8, [X19]
	037 Move X10, [X10+3176]
	038 NotImplemented "Instruction LDRH not yet implemented."
	039 Move X1, [X10]
	040 Compare X9, 0
	041 JumpIfEqual {48}
	042 Move X10, [X8+176]
	043 Add X10, X10, 8
	044 NotImplemented "Instruction LDUR not yet implemented."
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Subtract X9, X9, 1
	047 Add X10, X10, 16
	048 Move X0, X19
	049 Move W2, W31
	050 Call 0x1C5D788
	051 NotImplemented "Instruction LDRSW not yet implemented."
	052 Add X8, X8, X9
	053 Add X0, X8, 312
	054 Move X8, [X0]
	055 Move X1, [X0+8]
	056 Move X22, 0xE83000
	057 Move X22, [X22+3584]
	058 Move X0, X19
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move X19, X0
	061 Compare X0, 0
	062 JumpIfEqual {188}
	063 Move X20, 0xE83000
	064 Move X24, 0xEB3000
	065 Move X25, 0xEB3000
	066 Move X20, [X20+3608]
	067 Move X24, [X24+3184]
	068 Move X25, [X25+2624]
	069 Move X23, X31
	070 Move X8, [X19]
	071 Move X1, [X20]
	072 NotImplemented "Instruction LDRH not yet implemented."
	073 Compare X9, 0
	074 JumpIfEqual {81}
	075 Move X10, [X8+176]
	076 Add X10, X10, 8
	077 NotImplemented "Instruction LDUR not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Subtract X9, X9, 1
	080 Add X10, X10, 16
	081 Move X0, X19
	082 Move W2, W31
	083 Call 0x1C5D788
	084 NotImplemented "Instruction LDRSW not yet implemented."
	085 Add X8, X8, X9
	086 Add X0, X8, 312
	087 Move X8, [X0]
	088 Move X1, [X0+8]
	089 Move X0, X19
	090 NotImplemented "Instruction BLR not yet implemented."
	091 Move TEMP, X0
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfNotEqual {130}
	095 Move X8, [X19]
	096 Move X1, [X24]
	097 NotImplemented "Instruction LDRH not yet implemented."
	098 Compare X9, 0
	099 JumpIfEqual {106}
	100 Move X10, [X8+176]
	101 Add X10, X10, 8
	102 NotImplemented "Instruction LDUR not yet implemented."
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Subtract X9, X9, 1
	105 Add X10, X10, 16
	106 Move X0, X19
	107 Move W2, W31
	108 Call 0x1C5D788
	109 NotImplemented "Instruction LDRSW not yet implemented."
	110 Add X8, X8, X9
	111 Add X0, X8, 312
	112 Move X8, [X0]
	113 Move X1, [X0+8]
	114 Move X0, X19
	115 NotImplemented "Instruction BLR not yet implemented."
	116 Move X21, X0
	117 Compare X0, 0
	118 JumpIfEqual {128}
	119 Move X9, [X21]
	120 Move X8, [X25]
	121 Move W11, [X9+304]
	122 Move W10, [X8+304]
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move X9, [X9+200]
	125 Add X9, X9, X10
	126 NotImplemented "Instruction LDUR not yet implemented."
	127 NotImplemented "Instruction CMP not yet implemented."
	128 NotImplemented "Instruction CMP not yet implemented."
	129 NotImplemented "Instruction CSEL not yet implemented."
	130 Move X20, X31
	131 Move X21, X23
	132 Compare X19, 0
	133 JumpIfNotEqual {137}
	134 Move X20, X31
	135 Compare X19, 0
	136 JumpIfEqual {158}
	137 Move X8, [X19]
	138 Move X1, [X22]
	139 NotImplemented "Instruction LDRH not yet implemented."
	140 Compare X9, 0
	141 JumpIfEqual {148}
	142 Move X10, [X8+176]
	143 Add X10, X10, 8
	144 NotImplemented "Instruction LDUR not yet implemented."
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Subtract X9, X9, 1
	147 Add X10, X10, 16
	148 Move X0, X19
	149 Move W2, W31
	150 Call 0x1C5D788
	151 NotImplemented "Instruction LDRSW not yet implemented."
	152 Add X8, X8, X9
	153 Add X0, X8, 312
	154 Move X8, [X0]
	155 Move X1, [X0+8]
	156 Move X0, X19
	157 NotImplemented "Instruction BLR not yet implemented."
	158 Compare X20, 0
	159 JumpIfNotEqual {189}
	160 Move X0, X21
	161 Move X20, [X31+48]
	162 Move X19, [X31+56]
	163 Move X22, [X31+32]
	164 Move X21, [X31+40]
	165 Move X24, [X31+16]
	166 Move X23, [X31+24]
	167 Move X30, [X31+64]
	168 Move X25, [X31+72]
	169 Return X0
	170 Move X0, 0xE87000
	171 Move X0, [X0+1320]
	172 Call 0x1C17D08
	173 Call 0x1C17F10
	174 Move X19, X0
	175 Move X0, 0xEB2000
	176 Move X0, [X0+3192]
	177 Call 0x1C17D08
	178 Move X1, X0
	179 Move X0, X19
	180 Move X2, X31
	181 Call ArgumentNullException..ctor, X0, X1
	182 Move X0, 0xEB2000
	183 Move X0, [X0+3200]
	184 Call 0x1C17D08
	185 Move X1, X0
	186 Move X0, X19
	187 Call 0x1C17DEC
	188 Call 0x1C17F20
	189 Move X0, X20
	190 Call 0x1C17F18
	191 Move X21, X0
	192 Move X23, X31
	193 Move X21, X0
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Move X0, X21
	196 Call 0x3EB2AD0
	197 Move X20, [X0]
	198 Call 0x3EB2AE0
	199 Move X20, X31
	200 Move X21, X0
	201 Compare X19, 0
	202 JumpIfEqual {224}
	203 Move X8, [X19]
	204 Move X1, [X22]
	205 NotImplemented "Instruction LDRH not yet implemented."
	206 Compare X9, 0
	207 JumpIfEqual {214}
	208 Move X10, [X8+176]
	209 Add X10, X10, 8
	210 NotImplemented "Instruction LDUR not yet implemented."
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Subtract X9, X9, 1
	213 Add X10, X10, 16
	214 Move X0, X19
	215 Move W2, W31
	216 Call 0x1C5D788
	217 NotImplemented "Instruction LDRSW not yet implemented."
	218 Add X8, X8, X9
	219 Add X0, X8, 312
	220 Move X8, [X0]
	221 Move X1, [X0+8]
	222 Move X0, X19
	223 NotImplemented "Instruction BLR not yet implemented."
	224 Compare X20, 0
	225 JumpIfNotEqual {228}
	226 Move X0, X21
	227 Call 0x1D2D690
	228 Move X0, X20
	229 Call 0x1C17F18
	230 Call 0x1991590

Method: System.Func`1<System.Security.Claims.ClaimsPrincipal> get_ClaimsPrincipalSelector()

Disassembly:
	0x03272118 LDUR X8, [X8 - 0x8]
	0x0327211C CMP X8, X1
	0x03272120 B.NE 0x32724A0
	0x03272124 LDR W8, [X22 + 0x18]
	0x03272128 CMP W8, 0x1
	0x0327212C B.LT 0x32723B4
	0x03272130 STR X19, [X31 + 0x8]
	0x03272134 ADRP X19, 0xEA9000
	0x03272138 ADRP X29, 0xEB1000
	0x0327213C LDR X19, [X19 + 0xB58]
	0x03272140 LDR X29, [X29 + 0xCE0]
	0x03272144 MOV W23, W31
	0x03272148 LDR X2, [X19]
	0x0327214C ORR W1, W23, 0x1
	0x03272150 MOV X0, X22
	0x03272154 BL 0x301BCCC
	0x03272158 ADRP X8, 0xE8A000
	0x0327215C LDR X8, [X8 + 0x9E8]
	0x03272160 MOV X24, X0
	0x03272164 LDR X0, [X8]
	0x03272168 LDR W8, [X0 + 0xE0]
	0x0327216C CBNZ W8, 0x3272174

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x116B000
	005 Move X19, 0xEB2000
	006 Move W8, [X20+1465]
	007 Move X19, [X19+2600]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xEB2000
	013 Move X0, [X0+2600]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1465], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+8]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03272170 BL 0x1C16DFC
	0x03272174 MOV X0, X24
	0x03272178 MOV X1, X31
	0x0327217C BL 0x3322D04
	0x03272180 MOV X24, X0
	0x03272184 LDR X0, [X28]
	0x03272188 BL 0x1C16F10
	0x0327218C MOV X25, X0
	0x03272190 MOV X1, X24
	0x03272194 MOV X2, X31
	0x03272198 BL 0x32E2528
	0x0327219C MOV X0, X21
	0x032721A0 MOV X1, X25
	0x032721A4 MOV X2, X31
	0x032721A8 MOV W3, W31
	0x032721AC MOV X4, X31
	0x032721B0 BL 0x32B09BC
	0x032721B4 MOV X24, X0
	0x032721B8 CBZ X0, 0x32721F0
	0x032721BC ADRP X9, 0xEB1000
	0x032721C0 LDR X8, [X24]
	0x032721C4 LDR X9, [X9 + 0xB68]
	0x032721C8 LDRB W10, [X8 + 0x130]
	0x032721CC LDR X1, [X9]
	0x032721D0 LDRB W9, [X1 + 0x130]
	0x032721D4 CMP W10, W9
	0x032721D8 B.CC 0x3272368
	0x032721DC LDR X8, [X8 + 0xC8]
	0x032721E0 ADD X8, X8, X9, 0x3, LSL
	0x032721E4 LDUR X8, [X8 - 0x8]
	0x032721E8 CMP X8, X1
	0x032721EC B.NE 0x3272368
	0x032721F0 MOV X26, X31
	0x032721F4 MOVZ W27, 0x5
	0x032721F8 CBZ X25, 0x327225C
	0x032721FC LDR X8, [X25]
	0x03272200 ADRP X10, 0xE81000
	0x03272204 LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x116B000
	008 Move X23, 0xEB2000
	009 Move X21, 0xEB2000
	010 Move X20, 0xEB2000
	011 Move W8, [X22+1466]
	012 Move X23, [X23+2936]
	013 Move X21, [X21+3208]
	014 Move X20, [X20+3216]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0xEB2000
	021 Move X0, [X0+3216]
	022 Call 0x1C17CF4
	023 Move X0, 0xEB2000
	024 Move X0, [X0+3208]
	025 Call 0x1C17CF4
	026 Move X0, 0xEB2000
	027 Move X0, [X0+2936]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+1466], W8
	031 Move X8, [X23]
	032 Move [X19+16], X8
	033 Move X0, [X21]
	034 Call 0x1C17F10
	035 Move X1, [X20]
	036 Move X20, X0
	037 Call List`1<Object>..ctor, X0
	038 Move [X19+32], X20
	039 Move X0, X19
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X1, X31
	045 Move X30, [X31+48]
	046 Move X23, [X31+56]
	047 Call Object..ctor, X0
	048 Return 

Method: System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x03272208 LDR X10, [X10 + 0xE00]
	0x0327220C LDR X1, [X10]
	0x03272210 CBZ X9, 0x3272234
	0x03272214 LDR X10, [X8 + 0xB0]
	0x03272218 ADD X10, X10, 0x8
	0x0327221C LDUR X11, [X10 - 0x8]
	0x03272220 CMP X11, X1
	0x03272224 B.EQ 0x3272244
	0x03272228 SUBS X9, X9, 0x1
	0x0327222C ADD X10, X10, 0x10
	0x03272230 B.NE 0x327221C
	0x03272234 MOV X0, X25
	0x03272238 MOV W2, W31
	0x0327223C BL 0x1C5C788
	0x03272240 B 0x3272250
	0x03272244 LDRSW X9, [X10]
	0x03272248 ADD X8, X8, X9, 0x4, LSL
	0x0327224C ADD X0, X8, 0x138
	0x03272250 LDP X8, X1, [X0]
	0x03272254 MOV X0, X25
	0x03272258 BLR X8
	0x0327225C CBNZ X26, 0x3272440
	0x03272260 CMP W27, 0x5
	0x03272264 B.EQ 0x327226C
	0x03272268 CBNZ W27, 0x32723A4
	0x0327226C LDR X2, [X19]
	0x03272270 MOV X0, X22
	0x03272274 MOV W1, W23
	0x03272278 BL 0x301BCCC
	0x0327227C MOV X1, X31
	0x03272280 BL 0x32277A8
	0x03272284 TBNZ X0, 0x0, 0x32722FC
	0x03272288 LDR X2, [X19]
	0x0327228C MOV X0, X22
	0x03272290 MOV W1, W23
	0x03272294 BL 0x301BCCC
	0x03272298 MOV X25, X0
	0x0327229C MOV X0, X31
	0x032722A0 BL 0x333AB78
	0x032722A4 MOV X2, X0
	0x032722A8 ADD X3, X31, 0x18
	0x032722AC MOVZ W1, 0x7
	0x032722B0 MOV X0, X25
	0x032722B4 MOV X4, X31
	0x032722B8 BL 0x337D7DC
	0x032722BC TBZ X0, 0x0, 0x3272450
	0x032722C0 LDR X1, [X31 + 0x18]
	0x032722C4 STR X31, [X31 + 0x10]
	0x032722C8 ADD X0, X31, 0x10
	0x032722CC MOV X2, X31
	0x032722D0 BL 0x33C673C
	0x032722D4 ADRP X8, 0xEB1000
	0x032722D8 LDR X8, [X8 + 0xA40]
	0x032722DC LDR X0, [X8]
	0x032722E0 BL 0x1C16F10
	0x032722E4 LDR X2, [X31 + 0x10]
	0x032722E8 MOV X25, X0
	0x032722EC MOV X1, X24
	0x032722F0 MOV X3, X31
	0x032722F4 BL 0x326CC00
	0x032722F8 MOV X24, X25
	0x032722FC LDR X0, [X20 + 0x20]
	0x03272300 CBZ X0, 0x3272448

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x116B000
	009 Move X24, 0xEB2000
	010 Move X22, 0xEB2000
	011 Move X21, 0xEB2000
	012 Move W8, [X23+1467]
	013 Move X24, [X24+2936]
	014 Move X22, [X22+3208]
	015 Move X21, [X21+3216]
	016 Move X19, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {33}
	022 Move X0, 0xEB2000
	023 Move X0, [X0+3216]
	024 Call 0x1C17CF4
	025 Move X0, 0xEB2000
	026 Move X0, [X0+3208]
	027 Call 0x1C17CF4
	028 Move X0, 0xEB2000
	029 Move X0, [X0+2936]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X23+1467], W8
	033 Move X8, [X24]
	034 Move [X20+16], X8
	035 Move X0, [X22]
	036 Call 0x1C17F10
	037 Move X1, [X21]
	038 Move X21, X0
	039 Call List`1<Object>..ctor, X0
	040 Move X0, X20
	041 Move X1, X31
	042 Move [X20+32], X21
	043 Call Object..ctor, X0
	044 Compare X19, 0
	045 JumpIfEqual {55}
	046 Move X0, X20
	047 Move X1, X19
	048 Move X20, [X31+48]
	049 Move X19, [X31+56]
	050 Move X22, [X31+32]
	051 Move X21, [X31+40]
	052 Move X24, [X31+16]
	053 Move X23, [X31+24]
	054 Move X30, [X31+64]
	055 Move X0, 0xE87000
	056 Move X0, [X0+1320]
	057 Call 0x1C17D08
	058 Call 0x1C17F10
	059 Move X19, X0
	060 Move X0, 0xEAC000
	061 Move X0, [X0+728]
	062 Call 0x1C17D08
	063 Move X1, X0
	064 Move X0, X19
	065 Move X2, X31
	066 Call ArgumentNullException..ctor, X0, X1
	067 Move X0, 0xEB2000
	068 Move X0, [X0+3224]
	069 Call 0x1C17D08
	070 Move X1, X0
	071 Move X0, X19
	072 Call 0x1C17DEC

Method: System.Void OnSerializingMethod(System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x03272454 LDR X0, [X0 + 0xCE8]
	0x03272458 BL 0x1C16D08
	0x0327245C MOV X1, X31
	0x03272460 BL 0x33BDD84
	0x03272464 MOV X20, X0
	0x03272468 ADRP X0, 0xEAB000
	0x0327246C LDR X0, [X0 + 0x2E0]
	0x03272470 BL 0x1C16D08
	0x03272474 BL 0x1C16F10
	0x03272478 MOV X21, X0
	0x0327247C MOV X1, X20
	0x03272480 MOV X2, X31
	0x03272484 BL 0x329F100
	0x03272488 ADRP X0, 0xEB1000
	0x0327248C LDR X0, [X0 + 0xCF0]
	0x03272490 BL 0x1C16D08
	0x03272494 MOV X1, X0
	0x03272498 MOV X0, X21
	0x0327249C BL 0x1C16DEC
	0x032724A0 MOV X0, X22
	0x032724A4 BL 0x1C171E0
	0x032724A8 STR X19, [X31 + 0x8]
	0x032724AC BL 0x1C16F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x116B000
	006 Move X21, 0xEB2000
	007 Move W8, [X20+1468]
	008 Move X21, [X21+3120]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xEB2000
	015 Move X0, [X0+3120]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1468], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Call 0x1C17E00
	022 Compare X0, 0
	023 JumpIfNotEqual {27}
	024 Move X0, X19
	025 Call ClaimsPrincipal.SerializeIdentities, X0
	026 Move [X19+24], X0
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return 

Method: System.Void OnDeserializedMethod(System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x03272F00 LDR X0, [X21]
	0x03272F04 MOVZ W1, 0x1
	0x03272F08 BL 0x1C16D6C
	0x03272F0C CBZ X0, 0x3272F4C
	0x03272F10 MOV X21, X0
	0x03272F14 CBZ X20, 0x3272F2C
	0x03272F18 LDR X8, [X21]
	0x03272F1C MOV X0, X20
	0x03272F20 LDR X1, [X8 + 0x40]
	0x03272F24 BL 0x1C16E00
	0x03272F28 CBZ X0, 0x3272F54
	0x03272F2C LDR W8, [X21 + 0x18]
	0x03272F30 CBZ W8, 0x3272F50
	0x03272F34 STR X20, [X21 + 0x20]
	0x03272F38 STR X21, [X19 + 0x10]
	0x03272F3C LDP X20, X19, [X31 + 0x20]
	0x03272F40 LDP X22, X21, [X31 + 0x10]
	0x03272F44 LDR X30, [X31], #0x30
	0x03272F48 RET
	0x03272F4C BL 0x1C16F20
	0x03272F50 BL 0x1C16F28
	0x03272F54 BL 0x1C16F44
	0x03272F58 MOV X1, X31
	0x03272F5C BL 0x1C16DEC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x116B000
	006 Move X21, 0xEB2000
	007 Move W8, [X20+1469]
	008 Move X21, [X21+3120]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xEB2000
	015 Move X0, [X0+3120]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1469], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Call 0x1C17E00
	022 Compare X0, 0
	023 JumpIfNotEqual {28}
	024 Move X1, [X19+24]
	025 Move X0, X19
	026 Call ClaimsPrincipal.DeserializeIdentities, X0, X1
	027 Move [X19+24], X31
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Return 

Method: System.Void Deserialize(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x03272304 LDR W10, [X0 + 0x1C]
	0x03272308 LDR X8, [X0 + 0x10]
	0x0327230C LDR X9, [X29]
	0x03272310 ADD W10, W10, 0x1
	0x03272314 STR W10, [X0 + 0x1C]
	0x03272318 CBZ X8, 0x327244C
	0x0327231C LDRSW X10, [X0 + 0x18]
	0x03272320 LDR W11, [X8 + 0x18]
	0x03272324 CMP W10, W11
	0x03272328 B.CS 0x3272340
	0x0327232C ADD W9, W10, 0x1
	0x03272330 ADD X8, X8, X10, 0x3, LSL
	0x03272334 STR W9, [X0 + 0x18]
	0x03272338 STR X24, [X8 + 0x20]
	0x0327233C B 0x3272354
	0x03272340 LDR X8, [X9 + 0x20]
	0x03272344 LDR X8, [X8 + 0xC0]
	0x03272348 LDR X2, [X8 + 0x70]
	0x0327234C MOV X1, X24
	0x03272350 BL 0x301BF90
	0x03272354 LDR W8, [X22 + 0x18]
	0x03272358 ADD W23, W23, 0x2
	0x0327235C CMP W23, W8
	0x03272360 B.LT 0x3272148
	0x03272364 B 0x32723A4
	0x03272368 MOV X0, X24
	0x0327236C BL 0x1C171E0
	0x03272370 B 0x3272538
	0x03272374 CMP W1, 0x1
	0x03272378 MOV X24, X0
	0x0327237C STR X1, [X31]
	0x03272380 B.NE 0x32724C0
	0x03272384 MOV X0, X24
	0x03272388 BL 0x3EB1AD0
	0x0327238C LDR X26, [X0]
	0x03272390 BL 0x3EB1AE0
	0x03272394 MOV W27, W31
	0x03272398 MOV X24, X31
	0x0327239C CBNZ X25, 0x32721FC
	0x032723A0 B 0x327225C
	0x032723A4 MOV X20, X31
	0x032723A8 LDR X19, [X31 + 0x8]
	0x032723AC CBNZ X19, 0x32723BC
	0x032723B0 B 0x327241C
	0x032723B4 MOV X20, X31
	0x032723B8 CBZ X19, 0x327241C
	0x032723BC ADRP X10, 0xE81000
	0x032723C0 LDR X8, [X19]
	0x032723C4 LDR X10, [X10 + 0xE00]
	0x032723C8 LDRH W9, [X8 + 0x12E]
	0x032723CC LDR X1, [X10]
	0x032723D0 CBZ X9, 0x32723F4
	0x032723D4 LDR X10, [X8 + 0xB0]
	0x032723D8 ADD X10, X10, 0x8
	0x032723DC LDUR X11, [X10 - 0x8]
	0x032723E0 CMP X11, X1
	0x032723E4 B.EQ 0x3272404
	0x032723E8 SUBS X9, X9, 0x1
	0x032723EC ADD X10, X10, 0x10
	0x032723F0 B.NE 0x32723DC
	0x032723F4 MOV X0, X19
	0x032723F8 MOV W2, W31
	0x032723FC BL 0x1C5C788
	0x03272400 B 0x3272410
	0x03272404 LDRSW X9, [X10]
	0x03272408 ADD X8, X8, X9, 0x4, LSL
	0x0327240C ADD X0, X8, 0x138
	0x03272410 LDP X8, X1, [X0]
	0x03272414 MOV X0, X19
	0x03272418 BLR X8
	0x0327241C CBNZ X20, 0x32724B0
	0x03272420 LDP X20, X19, [X31 + 0x70]
	0x03272424 LDP X22, X21, [X31 + 0x60]
	0x03272428 LDP X24, X23, [X31 + 0x50]
	0x0327242C LDP X26, X25, [X31 + 0x40]
	0x03272430 LDP X28, X27, [X31 + 0x30]
	0x03272434 LDP X29, X30, [X31 + 0x20]
	0x03272438 ADD X31, X31, 0x80
	0x0327243C RET
	0x03272440 MOV X0, X26
	0x03272444 BL 0x1C16F18
	0x03272448 BL 0x1C16F20
	0x0327244C BL 0x1C16F20
	0x03272450 ADRP X0, 0xEB1000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x116B000
	009 Move W8, [X21+1470]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xEB2000
	017 Move X0, [X0+3232]
	018 Call 0x1C17CF4
	019 Move X0, 0xEB2000
	020 Move X0, [X0+3240]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+1470], W8
	024 Compare X19, 0
	025 JumpIfEqual {88}
	026 Move X0, X19
	027 Move X1, X31
	028 Call SerializationInfo.GetEnumerator, X0
	029 Compare X0, 0
	030 JumpIfEqual {106}
	031 Move X1, X31
	032 Move X21, X0
	033 Call SerializationInfoEnumerator.MoveNext, X0
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {80}
	038 Move X23, 0xEB2000
	039 Move X24, 0xEB2000
	040 Move X23, [X23+3232]
	041 Move X24, [X24+3240]
	042 Move X0, X21
	043 Move X1, X31
	044 Call SerializationInfoEnumerator.get_Name, X0
	045 Move X1, [X23]
	046 Move X2, X31
	047 Move X22, X0
	048 Call String.op_Equality, X0, X1
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {60}
	053 Move X1, [X23]
	054 Move X0, X19
	055 Move X2, X31
	056 Call SerializationInfo.GetString, X0, X1
	057 Move X1, X0
	058 Move X0, X20
	059 Call ClaimsPrincipal.DeserializeIdentities, X0, X1
	060 Move X1, [X24]
	061 Move X0, X22
	062 Move X2, X31
	063 Call String.op_Equality, X0, X1
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {73}
	068 Move X1, [X24]
	069 Move X0, X19
	070 Move X2, X31
	071 Call SerializationInfo.GetString, X0, X1
	072 Move [X20+16], X0
	073 Move X0, X21
	074 Move X1, X31
	075 Call SerializationInfoEnumerator.MoveNext, X0
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfEqual {42}
	080 Move X20, [X31+48]
	081 Move X19, [X31+56]
	082 Move X22, [X31+32]
	083 Move X21, [X31+40]
	084 Move X24, [X31+16]
	085 Move X23, [X31+24]
	086 Move X30, [X31+64]
	087 Return 
	088 Move X0, 0xE87000
	089 Move X0, [X0+1320]
	090 Call 0x1C17D08
	091 Call 0x1C17F10
	092 Move X19, X0
	093 Move X0, 0xEAC000
	094 Move X0, [X0+728]
	095 Call 0x1C17D08
	096 Move X1, X0
	097 Move X0, X19
	098 Move X2, X31
	099 Call ArgumentNullException..ctor, X0, X1
	100 Move X0, 0xEB2000
	101 Move X0, [X0+3248]
	102 Call 0x1C17D08
	103 Move X1, X0
	104 Move X0, X19
	105 Call 0x1C17DEC
	106 Call 0x1C17F20

Method: System.Void DeserializeIdentities(System.String identities)

Disassembly:
	0x03272F60 LDR X0, [X0 + 0x10]
	0x03272F64 RET
	0x03272F68 STP X30, X23, [X31 - 0x30]!
	0x03272F6C STP X22, X21, [X31 + 0x10]
	0x03272F70 STP X20, X19, [X31 + 0x20]
	0x03272F74 ADRP X23, 0x116A000
	0x03272F78 LDRB W8, [X23 + 0x5C8]
	0x03272F7C MOV X22, X3
	0x03272F80 MOV X19, X2
	0x03272F84 MOV X20, X1
	0x03272F88 MOV X21, X0
	0x03272F8C TBNZ X8, 0x0, 0x3272FA4
	0x03272F90 ADRP X0, 0xE81000
	0x03272F94 LDR X0, [X0 + 0x6C0]
	0x03272F98 BL 0x1C16CF4
	0x03272F9C MOVZ W8, 0x1
	0x03272FA0 STRB W8, [X23 + 0x5C8]
	0x03272FA4 MOV X0, X21
	0x03272FA8 MOV X1, X31
	0x03272FAC BL 0x33BDD8C
	0x03272FB0 MOV X0, X19
	0x03272FB4 MOV X1, X31
	0x03272FB8 STP X19, X20, [X21 + 0x10]
	0x03272FBC STR X22, [X21 + 0x20]
	0x03272FC0 BL 0x32D59A8
	0x03272FC4 CBZ X0, 0x3273020
	0x03272FC8 LDR X8, [X0]
	0x03272FCC ADRP X23, 0xE81000
	0x03272FD0 MOV X1, X20
	0x03272FD4 LDR X9, [X8 + 0x238]
	0x03272FD8 LDR X2, [X8 + 0x240]
	0x03272FDC LDR X23, [X23 + 0x6C0]
	0x03272FE0 BLR X9
	0x03272FE4 STR X0, [X21 + 0x28]
	0x03272FE8 MOV X22, X0
	0x03272FEC LDR X0, [X23]
	0x03272FF0 LDR W8, [X0 + 0xE0]
	0x03272FF4 CBNZ W8, 0x3272FFC
	0x03272FF8 BL 0x1C16DFC
	0x03272FFC MOV X0, X22
	0x03273000 MOV X1, X31
	0x03273004 MOV X2, X31
	0x03273008 BL 0x3395194
	0x0327300C TBNZ X0, 0x0, 0x3273024
	0x03273010 LDP X20, X19, [X31 + 0x20]
	0x03273014 LDP X22, X21, [X31 + 0x10]
	0x03273018 LDP X30, X23, [X31], #0x30
	0x0327301C RET
	0x03273020 BL 0x1C16F20
	0x03273024 ADRP X0, 0xEB0000
	0x03273028 LDR X0, [X0 + 0xD18]
	0x0327302C BL 0x1C16D08
	0x03273030 MOV X21, X0
	0x03273034 ADRP X0, 0xE80000
	0x03273038 LDR X0, [X0 + 0x838]
	0x0327303C BL 0x1C16D08
	0x03273040 MOV X2, X0
	0x03273044 MOV X0, X21
	0x03273048 MOV X1, X20
	0x0327304C MOV X3, X19
	0x03273050 MOV X4, X31
	0x03273054 BL 0x32277C4
	0x03273058 MOV X19, X0
	0x0327305C ADRP X0, 0xEB0000
	0x03273060 LDR X0, [X0 + 0xD20]
	0x03273064 BL 0x1C16D08
	0x03273068 BL 0x1C16F10
	0x0327306C MOV X1, X19
	0x03273070 MOV X20, X0
	0x03273074 BL 0x3273098
	0x03273078 ADRP X0, 0xEB0000
	0x0327307C LDR X0, [X0 + 0xD28]
	0x03273080 BL 0x1C16D08
	0x03273084 MOV X1, X0
	0x03273088 MOV X0, X20
	0x0327308C BL 0x1C16DEC
	0x03273090 MOV X1, X31
	0x03273094 B 0x33BDD8C
	0x03273098 MOV X2, X31
	0x0327309C B 0x338C8D8
	0x032730A0 LDR X0, [X0 + 0x20]
	0x032730A4 RET
	0x032730A8 MOV X0, X31
	0x032730AC RET
	0x032730B0 LDR X0, [X0 + 0x28]
	0x032730B4 RET
	0x032730B8 LDP X1, X8, [X0 + 0x10]
	0x032730BC LDR X2, [X0 + 0x20]
	0x032730C0 MOV X3, X31
	0x032730C4 MOV X0, X8
	0x032730C8 B 0x32274B8
	0x032730CC STP X30, X23, [X31 - 0x30]!
	0x032730D0 STP X22, X21, [X31 + 0x10]
	0x032730D4 STP X20, X19, [X31 + 0x20]
	0x032730D8 ADRP X22, 0x1169000
	0x032730DC LDRB W8, [X22 + 0x5C9]
	0x032730E0 MOV X19, X2
	0x032730E4 MOV X20, X1
	0x032730E8 MOV X21, X0
	0x032730EC TBNZ X8, 0x0, 0x3273104
	0x032730F0 ADRP X0, 0xE80000
	0x032730F4 LDR X0, [X0 + 0x6C0]
	0x032730F8 BL 0x1C16CF4
	0x032730FC MOVZ W8, 0x1
	0x03273100 STRB W8, [X22 + 0x5C9]
	0x03273104 MOV X0, X21
	0x03273108 MOV X1, X31
	0x0327310C BL 0x33BDD8C
	0x03273110 MOV X0, X19
	0x03273114 MOV X1, X31
	0x03273118 STP X19, X20, [X21 + 0x10]
	0x0327311C BL 0x32D59A8
	0x03273120 CBZ X0, 0x327317C
	0x03273124 LDR X8, [X0]
	0x03273128 ADRP X23, 0xE80000
	0x0327312C MOV X1, X20
	0x03273130 LDR X9, [X8 + 0x238]
	0x03273134 LDR X2, [X8 + 0x240]
	0x03273138 LDR X23, [X23 + 0x6C0]
	0x0327313C BLR X9
	0x03273140 STR X0, [X21 + 0x20]
	0x03273144 MOV X22, X0
	0x03273148 LDR X0, [X23]
	0x0327314C LDR W8, [X0 + 0xE0]
	0x03273150 CBNZ W8, 0x3273158
	0x03273154 BL 0x1C16DFC
	0x03273158 MOV X0, X22
	0x0327315C MOV X1, X31
	0x03273160 MOV X2, X31
	0x03273164 BL 0x3395194
	0x03273168 TBNZ X0, 0x0, 0x3273180
	0x0327316C LDP X20, X19, [X31 + 0x20]
	0x03273170 LDP X22, X21, [X31 + 0x10]
	0x03273174 LDP X30, X23, [X31], #0x30
	0x03273178 RET
	0x0327317C BL 0x1C16F20
	0x03273180 ADRP X0, 0xEB0000
	0x03273184 LDR X0, [X0 + 0xD18]
	0x03273188 BL 0x1C16D08
	0x0327318C MOV X21, X0
	0x03273190 ADRP X0, 0xE80000
	0x03273194 LDR X0, [X0 + 0x838]
	0x03273198 BL 0x1C16D08
	0x0327319C MOV X2, X0
	0x032731A0 MOV X0, X21
	0x032731A4 MOV X1, X20
	0x032731A8 MOV X3, X19
	0x032731AC MOV X4, X31
	0x032731B0 BL 0x32277C4
	0x032731B4 MOV X19, X0
	0x032731B8 ADRP X0, 0xEB0000
	0x032731BC LDR X0, [X0 + 0xD20]
	0x032731C0 BL 0x1C16D08
	0x032731C4 BL 0x1C16F10
	0x032731C8 MOV X1, X19
	0x032731CC MOV X20, X0
	0x032731D0 BL 0x3273098
	0x032731D4 ADRP X0, 0xEB0000
	0x032731D8 LDR X0, [X0 + 0xD30]
	0x032731DC BL 0x1C16D08
	0x032731E0 MOV X1, X0
	0x032731E4 MOV X0, X20
	0x032731E8 BL 0x1C16DEC
	0x032731EC LDR X0, [X0 + 0x20]
	0x032731F0 RET
	0x032731F4 LDP X8, X1, [X0 + 0x10]
	0x032731F8 MOV X2, X31
	0x032731FC MOV X0, X8
	0x03273200 B 0x321B938
	0x03273204 STR X30, [X31 - 0x20]!
	0x03273208 STP X20, X19, [X31 + 0x10]
	0x0327320C MOV X19, X1
	0x03273210 MOV X1, X31
	0x03273214 MOV X20, X0
	0x03273218 BL 0x33BDD8C
	0x0327321C STR X19, [X20 + 0x10]
	0x03273220 LDP X20, X19, [X31 + 0x10]
	0x03273224 LDR X30, [X31], #0x20
	0x03273228 RET
	0x0327322C LDR X0, [X0 + 0x10]
	0x03273230 RET
	0x03273234 STR X30, [X31 - 0x20]!
	0x03273238 STP X20, X19, [X31 + 0x10]
	0x0327323C MOV X19, X1
	0x03273240 MOV X1, X31
	0x03273244 MOV X20, X0
	0x03273248 BL 0x33BDD8C
	0x0327324C STR X19, [X20 + 0x10]
	0x03273250 LDP X20, X19, [X31 + 0x10]
	0x03273254 LDR X30, [X31], #0x20
	0x03273258 RET
	0x0327325C LDR X0, [X0 + 0x18]
	0x03273260 RET
	0x03273264 STR X1, [X0 + 0x18]
	0x03273268 RET
	0x0327326C LDR X0, [X0 + 0x20]
	0x03273270 RET
	0x03273274 LDR X0, [X0 + 0x10]
	0x03273278 RET
	0x0327327C STR X1, [X0 + 0x10]
	0x03273280 RET
	0x03273284 LDR X8, [X0 + 0x10]
	0x03273288 CMP X8, 0x0
	0x0327328C CSET W0, NE
	0x03273290 RET
	0x03273294 LDRB W0, [X0 + 0x40]
	0x03273298 RET
	0x0327329C AND W8, W1, 0x1
	0x032732A0 STRB W8, [X0 + 0x40]
	0x032732A4 RET
	0x032732A8 STR X30, [X31 - 0x20]!
	0x032732AC STP X20, X19, [X31 + 0x10]
	0x032732B0 ADRP X20, 0x1169000
	0x032732B4 LDRB W8, [X20 + 0x5CA]
	0x032732B8 MOV X19, X0
	0x032732BC TBNZ X8, 0x0, 0x32732D4
	0x032732C0 ADRP X0, 0xEB0000
	0x032732C4 LDR X0, [X0 + 0xD38]
	0x032732C8 BL 0x1C16CF4
	0x032732CC MOVZ W8, 0x1
	0x032732D0 STRB W8, [X20 + 0x5CA]
	0x032732D4 LDR X20, [X19 + 0x28]
	0x032732D8 CBNZ X20, 0x32732F8
	0x032732DC ADRP X8, 0xEB0000
	0x032732E0 LDR X8, [X8 + 0xD38]
	0x032732E4 LDR X0, [X8]
	0x032732E8 BL 0x1C16F10
	0x032732EC MOV X20, X0
	0x032732F0 BL 0x3273308
	0x032732F4 STR X20, [X19 + 0x28]
	0x032732F8 MOV X0, X20
	0x032732FC LDP X20, X19, [X31 + 0x10]
	0x03273300 LDR X30, [X31], #0x20
	0x03273304 RET
	0x03273308 STP X30, X21, [X31 - 0x20]!
	0x0327330C STP X20, X19, [X31 + 0x10]
	0x03273310 ADRP X20, 0x1169000
	0x03273314 ADRP X21, 0xEAD000
	0x03273318 LDRB W8, [X20 + 0x697]
	0x0327331C LDR X21, [X21 + 0xBA0]
	0x03273320 MOV X19, X0
	0x03273324 TBNZ X8, 0x0, 0x327333C
	0x03273328 ADRP X0, 0xEAD000
	0x0327332C LDR X0, [X0 + 0xBA0]
	0x03273330 BL 0x1C16CF4
	0x03273334 MOVZ W8, 0x1
	0x03273338 STRB W8, [X20 + 0x697]
	0x0327333C LDR X0, [X21]
	0x03273340 BL 0x1C16F10
	0x03273344 MOV X1, X31
	0x03273348 MOV X20, X0
	0x0327334C BL 0x3351F5C
	0x03273350 STR X20, [X19 + 0x10]
	0x03273354 MOV X0, X19
	0x03273358 LDP X20, X19, [X31 + 0x10]
	0x0327335C MOV X1, X31
	0x03273360 LDP X30, X21, [X31], #0x20
	0x03273364 B 0x33BDD8C
	0x03273368 STR X30, [X31 - 0x10]!
	0x0327336C LDR X8, [X0 + 0x30]
	0x03273370 CBZ X8, 0x3273398
	0x03273374 LDR X0, [X8 + 0x10]
	0x03273378 CBZ X0, 0x32733A4
	0x0327337C LDR X8, [X0]
	0x03273380 LDR X9, [X8 + 0x298]
	0x03273384 LDR X1, [X8 + 0x2A0]
	0x03273388 BLR X9
	0x0327338C CMP W0, 0x0
	0x03273390 CSET W0, GT
	0x03273394 B 0x327339C
	0x03273398 MOV W0, W31
	0x0327339C LDR X30, [X31], #0x10
	0x032733A0 RET
	0x032733A4 BL 0x1C16F20
	0x032733A8 STR X30, [X31 - 0x10]!
	0x032733AC LDR X0, [X0 + 0x10]
	0x032733B0 CBZ X0, 0x32733D4
	0x032733B4 LDR X8, [X0]
	0x032733B8 LDR X9, [X8 + 0x298]
	0x032733BC LDR X1, [X8 + 0x2A0]
	0x032733C0 BLR X9
	0x032733C4 CMP W0, 0x0
	0x032733C8 CSET W0, GT
	0x032733CC LDR X30, [X31], #0x10
	0x032733D0 RET
	0x032733D4 BL 0x1C16F20
	0x032733D8 STP X30, X23, [X31 - 0x30]!
	0x032733DC STP X22, X21, [X31 + 0x10]
	0x032733E0 STP X20, X19, [X31 + 0x20]
	0x032733E4 LDR X8, [X0 + 0x28]
	0x032733E8 CBZ X8, 0x3273448
	0x032733EC MOV X23, X0
	0x032733F0 LDR X0, [X8 + 0x10]
	0x032733F4 CBZ X0, 0x3273458
	0x032733F8 LDR X8, [X0]
	0x032733FC MOV W22, W1
	0x03273400 MOV W20, W4
	0x03273404 MOV W21, W3
	0x03273408 LDR X9, [X8 + 0x298]
	0x0327340C LDR X1, [X8 + 0x2A0]
	0x03273410 MOV X19, X2
	0x03273414 BLR X9
	0x03273418 CMP W0, 0x1
	0x0327341C B.LT 0x3273448
	0x03273420 LDR X0, [X23 + 0x28]
	0x03273424 CBZ X0, 0x3273458
	0x03273428 AND W1, W22, 0x1
	0x0327342C AND W3, W21, 0x1
	0x03273430 AND W4, W20, 0x1
	0x03273434 MOV X2, X19
	0x03273438 LDP X20, X19, [X31 + 0x20]
	0x0327343C LDP X22, X21, [X31 + 0x10]
	0x03273440 LDP X30, X23, [X31], #0x30
	0x03273444 B 0x327345C
	0x03273448 LDP X20, X19, [X31 + 0x20]
	0x0327344C LDP X22, X21, [X31 + 0x10]
	0x03273450 LDP X30, X23, [X31], #0x30
	0x03273454 RET
	0x03273458 BL 0x1C16F20
	0x0327345C STR X30, [X31 - 0x60]!
	0x03273460 STP X28, X27, [X31 + 0x10]
	0x03273464 STP X26, X25, [X31 + 0x20]
	0x03273468 STP X24, X23, [X31 + 0x30]
	0x0327346C STP X22, X21, [X31 + 0x40]
	0x03273470 STP X20, X19, [X31 + 0x50]
	0x03273474 ADRP X24, 0x1169000
	0x03273478 LDRB W8, [X24 + 0x695]
	0x0327347C MOV W19, W4
	0x03273480 MOV W20, W3
	0x03273484 MOV X21, X2
	0x03273488 MOV W23, W1
	0x0327348C MOV X22, X0
	0x03273490 TBNZ X8, 0x0, 0x32734CC
	0x03273494 ADRP X0, 0xEB0000
	0x03273498 LDR X0, [X0 + 0xD40]
	0x0327349C BL 0x1C16CF4
	0x032734A0 ADRP X0, 0xE80000
	0x032734A4 LDR X0, [X0 + 0xE00]
	0x032734A8 BL 0x1C16CF4
	0x032734AC ADRP X0, 0xEB0000
	0x032734B0 LDR X0, [X0 + 0xD48]
	0x032734B4 BL 0x1C16CF4
	0x032734B8 ADRP X0, 0xE80000
	0x032734BC LDR X0, [X0 + 0xE18]
	0x032734C0 BL 0x1C16CF4
	0x032734C4 MOVZ W8, 0x1
	0x032734C8 STRB W8, [X24 + 0x695]
	0x032734CC ADRP X25, 0xE80000
	0x032734D0 LDR X22, [X22 + 0x10]
	0x032734D4 LDR X25, [X25 + 0xE00]
	0x032734D8 TBZ X23, 0x0, 0x32736EC
	0x032734DC CBZ X22, 0x327391C
	0x032734E0 LDR X8, [X22]
	0x032734E4 MOV X0, X22
	0x032734E8 LDR X9, [X8 + 0x388]
	0x032734EC LDR X1, [X8 + 0x390]
	0x032734F0 BLR X9
	0x032734F4 MOV X23, X0
	0x032734F8 CBZ X0, 0x327392C
	0x032734FC ADRP X26, 0xE80000
	0x03273500 ADRP X27, 0xEB0000
	0x03273504 ADRP X28, 0xEB0000
	0x03273508 LDR X26, [X26 + 0xE18]
	0x0327350C LDR X27, [X27 + 0xD40]
	0x03273510 LDR X28, [X28 + 0xD48]
	0x03273514 LDR X8, [X23]
	0x03273518 LDR X1, [X26]
	0x0327351C LDRH W9, [X8 + 0x12E]
	0x03273520 CBZ X9, 0x3273544
	0x03273524 LDR X10, [X8 + 0xB0]
	0x03273528 ADD X10, X10, 0x8
	0x0327352C LDUR X11, [X10 - 0x8]
	0x03273530 CMP X11, X1
	0x03273534 B.EQ 0x3273554
	0x03273538 SUBS X9, X9, 0x1
	0x0327353C ADD X10, X10, 0x10
	0x03273540 B.NE 0x327352C
	0x03273544 MOV X0, X23
	0x03273548 MOV W2, W31
	0x0327354C BL 0x1C5C788
	0x03273550 B 0x3273560
	0x03273554 LDRSW X9, [X10]
	0x03273558 ADD X8, X8, X9, 0x4, LSL
	0x0327355C ADD X0, X8, 0x138
	0x03273560 LDP X8, X1, [X0]
	0x03273564 MOV X0, X23
	0x03273568 BLR X8
	0x0327356C TBZ X0, 0x0, 0x3273670
	0x03273570 LDR X8, [X23]
	0x03273574 LDR X1, [X26]
	0x03273578 LDRH W9, [X8 + 0x12E]
	0x0327357C CBZ X9, 0x32735A0
	0x03273580 LDR X10, [X8 + 0xB0]
	0x03273584 ADD X10, X10, 0x8
	0x03273588 LDUR X11, [X10 - 0x8]
	0x0327358C CMP X11, X1
	0x03273590 B.EQ 0x32735B0
	0x03273594 SUBS X9, X9, 0x1
	0x03273598 ADD X10, X10, 0x10
	0x0327359C B.NE 0x3273588
	0x032735A0 MOVZ W2, 0x1
	0x032735A4 MOV X0, X23
	0x032735A8 BL 0x1C5C788
	0x032735AC B 0x32735C0
	0x032735B0 LDR W9, [X10]
	0x032735B4 ADD W9, W9, 0x1
	0x032735B8 ADD X8, X8, W9, 0x4, SXTW
	0x032735BC ADD X0, X8, 0x138
	0x032735C0 LDP X8, X1, [X0]
	0x032735C4 MOV X0, X23
	0x032735C8 BLR X8
	0x032735CC CBZ X0, 0x3273918
	0x032735D0 LDR X8, [X0]
	0x032735D4 LDR X1, [X27]
	0x032735D8 LDRB W10, [X8 + 0x130]
	0x032735DC LDRB W9, [X1 + 0x130]
	0x032735E0 CMP W10, W9
	0x032735E4 B.CC 0x3273910
	0x032735E8 LDR X8, [X8 + 0xC8]
	0x032735EC ADD X8, X8, X9, 0x3, LSL
	0x032735F0 LDUR X8, [X8 - 0x8]
	0x032735F4 CMP X8, X1
	0x032735F8 B.NE 0x3273910
	0x032735FC LDR X24, [X0 + 0x18]
	0x03273600 CBZ X24, 0x3273514
	0x03273604 LDR X8, [X24]
	0x03273608 LDR X1, [X28]
	0x0327360C LDRH W9, [X8 + 0x12E]
	0x03273610 CBZ X9, 0x3273634
	0x03273614 LDR X10, [X8 + 0xB0]
	0x03273618 ADD X10, X10, 0x8
	0x0327361C LDUR X11, [X10 - 0x8]
	0x03273620 CMP X11, X1
	0x03273624 B.EQ 0x3273644
	0x03273628 SUBS X9, X9, 0x1
	0x0327362C ADD X10, X10, 0x10
	0x03273630 B.NE 0x327361C
	0x03273634 MOVZ W2, 0x1
	0x03273638 MOV X0, X24
	0x0327363C BL 0x1C5C788
	0x03273640 B 0x3273654

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X23, 0x116B000
	015 Move X22, 0xEB2000
	016 Move X21, 0xEB2000
	017 Move W8, [X23+1471]
	018 Move X22, [X22+3208]
	019 Move X21, [X21+3216]
	020 Move X19, X1
	021 Move X20, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {64}
	026 Move X0, 0xEAE000
	027 Move X0, [X0+208]
	028 Call 0x1C17CF4
	029 Move X0, 0xEB2000
	030 Move X0, [X0+2920]
	031 Call 0x1C17CF4
	032 Move X0, 0xE8B000
	033 Move X0, [X0+2536]
	034 Call 0x1C17CF4
	035 Move X0, 0xE82000
	036 Move X0, [X0+3584]
	037 Call 0x1C17CF4
	038 Move X0, 0xEB2000
	039 Move X0, [X0+3296]
	040 Call 0x1C17CF4
	041 Move X0, 0xEB2000
	042 Move X0, [X0+3216]
	043 Call 0x1C17CF4
	044 Move X0, 0xE83000
	045 Move X0, [X0+456]
	046 Call 0x1C17CF4
	047 Move X0, 0xEAA000
	048 Move X0, [X0+2904]
	049 Call 0x1C17CF4
	050 Move X0, 0xEB1000
	051 Move X0, [X0+3208]
	052 Call 0x1C17CF4
	053 Move X0, 0xE82000
	054 Move X0, [X0+464]
	055 Call 0x1C17CF4
	056 Move X0, 0xE89000
	057 Move X0, [X0+1368]
	058 Call 0x1C17CF4
	059 Move X0, 0xEB1000
	060 Move X0, [X0+2624]
	061 Call 0x1C17CF4
	062 Move W8, 1
	063 Move [X23+1471], W8
	064 Move X0, [X22]
	065 Move [X31+24], X31
	066 Call 0x1C17F10
	067 Move X1, [X21]
	068 Move X21, X0
	069 Call List`1<Object>..ctor, X0
	070 Move X0, X19
	071 Move X1, X31
	072 Move [X20+32], X21
	073 Call String.IsNullOrEmpty, X0
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfEqual {321}
	078 Move X8, 0xEAD000
	079 Move X8, [X8+208]
	080 Move X22, 0xE8A000
	081 Move X28, 0xE89000
	082 Move X0, [X8]
	083 Move X22, [X22+2536]
	084 Move X28, [X28+1368]
	085 Call 0x1C17F10
	086 Move X1, X31
	087 Move X21, X0
	088 Call BinaryFormatter..ctor, X0
	089 Move X0, [X22]
	090 Move W8, [X0+224]
	091 Compare W8, 0
	092 JumpIfNotEqual {94}
	093 Call 0x1C17DFC
	094 Move X0, X19
	095 Move X1, X31
	096 Call Convert.FromBase64String, X0
	097 Move X8, [X28]
	098 Move X22, X0
	099 Move X0, X8
	100 Call 0x1C17F10
	101 Move X1, X22
	102 Move X2, X31
	103 Move X19, X0
	104 Call MemoryStream..ctor, X0, X1
	105 Compare X21, 0
	106 JumpIfEqual {361}
	107 Move X0, X21
	108 Move X1, X19
	109 Move X2, X31
	110 Move W3, W31
	111 Move X4, X31
	112 Call BinaryFormatter.Deserialize, X0, X1, X2, X3
	113 Move X22, X0
	114 Compare X0, 0
	115 JumpIfEqual {365}
	116 Move X9, 0xE82000
	117 Move X9, [X9+464]
	118 Move X8, [X22]
	119 Move X1, [X9]
	120 Move W10, [X8+304]
	121 Move W9, [X1+304]
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move X8, [X8+200]
	124 Add X8, X8, X9
	125 NotImplemented "Instruction LDUR not yet implemented."
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move W8, [X22+24]
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move [X31+8], X19
	130 Move X19, 0xEA9000
	131 Move X29, 0xEB1000
	132 Move X19, [X19+2904]
	133 Move X29, [X29+3296]
	134 Move W23, W31
	135 Move X2, [X19]
	136 Or W1, W23, 1
	137 Move X0, X22
	138 Call List`1<Object>.get_Item, X0, X1
	139 Move X8, 0xE8A000
	140 Move X8, [X8+2536]
	141 Move X24, X0
	142 Move X0, [X8]
	143 Move W8, [X0+224]
	144 Compare W8, 0
	145 JumpIfNotEqual {147}
	146 Call 0x1C17DFC
	147 Move X0, X24
	148 Move X1, X31
	149 Call Convert.FromBase64String, X0
	150 Move X24, X0
	151 Move X0, [X28]
	152 Call 0x1C17F10
	153 Move X25, X0
	154 Move X1, X24
	155 Move X2, X31
	156 Call MemoryStream..ctor, X0, X1
	157 Move X0, X21
	158 Move X1, X25
	159 Move X2, X31
	160 Move W3, W31
	161 Move X4, X31
	162 Call BinaryFormatter.Deserialize, X0, X1, X2, X3
	163 Move X24, X0
	164 Compare X0, 0
	165 JumpIfEqual {177}
	166 Move X9, 0xEB1000
	167 Move X8, [X24]
	168 Move X9, [X9+2920]
	169 Move W10, [X8+304]
	170 Move X1, [X9]
	171 Move W9, [X1+304]
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move X8, [X8+200]
	174 Add X8, X8, X9
	175 NotImplemented "Instruction LDUR not yet implemented."
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Move X26, X31
	178 Move W27, 5
	179 Compare X25, 0
	180 JumpIfEqual {204}
	181 Move X8, [X25]
	182 Move X10, 0xE81000
	183 NotImplemented "Instruction LDRH not yet implemented."
	184 Move X10, [X10+3584]
	185 Move X1, [X10]
	186 Compare X9, 0
	187 JumpIfEqual {194}
	188 Move X10, [X8+176]
	189 Add X10, X10, 8
	190 NotImplemented "Instruction LDUR not yet implemented."
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Subtract X9, X9, 1
	193 Add X10, X10, 16
	194 Move X0, X25
	195 Move W2, W31
	196 Call 0x1C5D788
	197 NotImplemented "Instruction LDRSW not yet implemented."
	198 Add X8, X8, X9
	199 Add X0, X8, 312
	200 Move X8, [X0]
	201 Move X1, [X0+8]
	202 Move X0, X25
	203 NotImplemented "Instruction BLR not yet implemented."
	204 Compare X26, 0
	205 JumpIfNotEqual {335}
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Compare W27, 0
	208 JumpIfNotEqual {289}
	209 Move X2, [X19]
	210 Move X0, X22
	211 Move W1, W23
	212 Call List`1<Object>.get_Item, X0, X1
	213 Move X1, X31
	214 Call String.IsNullOrEmpty, X0
	215 Move TEMP, X0
	216 And TEMP, TEMP, 1
	217 Compare TEMP, 1
	218 JumpIfEqual {251}
	219 Move X2, [X19]
	220 Move X0, X22
	221 Move W1, W23
	222 Call List`1<Object>.get_Item, X0, X1
	223 Move X25, X0
	224 Move X0, X31
	225 Call NumberFormatInfo.get_InvariantInfo
	226 Move X2, X0
	227 Add X3, X31, 24
	228 Move W1, 7
	229 Move X0, X25
	230 Move X4, X31
	231 Call Int64.TryParse, X0, X1, X2, X3
	232 Move TEMP, X0
	233 And TEMP, TEMP, 1
	234 Compare TEMP, 1
	235 JumpIfNotEqual {339}
	236 Move X1, [X31+24]
	237 Move [X31+16], X31
	238 Add X0, X31, 16
	239 Move X2, X31
	240 Call IntPtr..ctor, X0, X1
	241 Move X8, 0xEB1000
	242 Move X8, [X8+2624]
	243 Move X0, [X8]
	244 Call 0x1C17F10
	245 Move X2, [X31+16]
	246 Move X25, X0
	247 Move X1, X24
	248 Move X3, X31
	249 Call WindowsIdentity..ctor, X0, X1, X2
	250 Move X24, X25
	251 Move X0, [X20+32]
	252 Compare X0, 0
	253 JumpIfEqual {337}
	254 Move W10, [X0+28]
	255 Move X8, [X0+16]
	256 Move X9, [X29]
	257 Add W10, W10, 1
	258 Move [X0+28], W10
	259 Compare X8, 0
	260 JumpIfEqual {338}
	261 NotImplemented "Instruction LDRSW not yet implemented."
	262 Move W11, [X8+24]
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Add W9, W10, 1
	265 Add X8, X8, X10
	266 Move [X0+24], W9
	267 Move [X8+32], X24
	268 Move X8, [X9+32]
	269 Move X8, [X8+192]
	270 Move X2, [X8+112]
	271 Move X1, X24
	272 Call List`1<Object>.AddWithResize, X0, X1
	273 Move W8, [X22+24]
	274 Add W23, W23, 2
	275 NotImplemented "Instruction CMP not yet implemented."
	276 Move X0, X24
	277 Call 0x1C181E0
	278 NotImplemented "Instruction CMP not yet implemented."
	279 Move X24, X0
	280 Move [X31], X1
	281 Move X0, X24
	282 Call 0x3EB2AD0
	283 Move X26, [X0]
	284 Call 0x3EB2AE0
	285 Move W27, W31
	286 Move X24, X31
	287 Compare X25, 0
	288 JumpIfNotEqual {181}
	289 Move X20, X31
	290 Move X19, [X31+8]
	291 Compare X19, 0
	292 JumpIfNotEqual {296}
	293 Move X20, X31
	294 Compare X19, 0
	295 JumpIfEqual {319}
	296 Move X10, 0xE81000
	297 Move X8, [X19]
	298 Move X10, [X10+3584]
	299 NotImplemented "Instruction LDRH not yet implemented."
	300 Move X1, [X10]
	301 Compare X9, 0
	302 JumpIfEqual {309}
	303 Move X10, [X8+176]
	304 Add X10, X10, 8
	305 NotImplemented "Instruction LDUR not yet implemented."
	306 NotImplemented "Instruction CMP not yet implemented."
	307 Subtract X9, X9, 1
	308 Add X10, X10, 16
	309 Move X0, X19
	310 Move W2, W31
	311 Call 0x1C5D788
	312 NotImplemented "Instruction LDRSW not yet implemented."
	313 Add X8, X8, X9
	314 Add X0, X8, 312
	315 Move X8, [X0]
	316 Move X1, [X0+8]
	317 Move X0, X19
	318 NotImplemented "Instruction BLR not yet implemented."
	319 Compare X20, 0
	320 JumpIfNotEqual {363}
	321 Move X20, [X31+112]
	322 Move X19, [X31+120]
	323 Move X22, [X31+96]
	324 Move X21, [X31+104]
	325 Move X24, [X31+80]
	326 Move X23, [X31+88]
	327 Move X26, [X31+64]
	328 Move X25, [X31+72]
	329 Move X28, [X31+48]
	330 Move X27, [X31+56]
	331 Move X29, [X31+32]
	332 Move X30, [X31+40]
	333 Add X31, X31, 128
	334 Return 
	335 Move X0, X26
	336 Call 0x1C17F18
	337 Call 0x1C17F20
	338 Call 0x1C17F20
	339 Move X0, 0xEB1000
	340 Move X0, [X0+3304]
	341 Call 0x1C17D08
	342 Move X1, X31
	343 Call Environment.GetResourceString, X0
	344 Move X20, X0
	345 Move X0, 0xEAB000
	346 Move X0, [X0+736]
	347 Call 0x1C17D08
	348 Call 0x1C17F10
	349 Move X21, X0
	350 Move X1, X20
	351 Move X2, X31
	352 Call SerializationException..ctor, X0, X1
	353 Move X0, 0xEB1000
	354 Move X0, [X0+3312]
	355 Call 0x1C17D08
	356 Move X1, X0
	357 Move X0, X21
	358 Call 0x1C17DEC
	359 Move X0, X22
	360 Call 0x1C181E0
	361 Move [X31+8], X19
	362 Call 0x1C17F20
	363 Move X0, X20
	364 Call 0x1C17F18
	365 Move [X31+8], X19
	366 Call 0x1C17F20
	367 Move X26, X31
	368 Compare X25, 0
	369 JumpIfEqual {393}
	370 Move X8, [X25]
	371 Move X10, 0xE81000
	372 NotImplemented "Instruction LDRH not yet implemented."
	373 Move X10, [X10+3584]
	374 Move X1, [X10]
	375 Compare X9, 0
	376 JumpIfEqual {383}
	377 Move X10, [X8+176]
	378 Add X10, X10, 8
	379 NotImplemented "Instruction LDUR not yet implemented."
	380 NotImplemented "Instruction CMP not yet implemented."
	381 Subtract X9, X9, 1
	382 Add X10, X10, 16
	383 Move X0, X25
	384 Move W2, W31
	385 Call 0x1C5D788
	386 NotImplemented "Instruction LDRSW not yet implemented."
	387 Add X8, X8, X9
	388 Add X0, X8, 312
	389 Move X8, [X0]
	390 Move X1, [X0+8]
	391 Move X0, X25
	392 NotImplemented "Instruction BLR not yet implemented."
	393 Move X1, [X31]
	394 Compare X26, 0
	395 JumpIfEqual {404}
	396 Move X0, X26
	397 Call 0x1C17F18
	398 Move X24, X0
	399 Move [X31], X1
	400 Compare X25, 0
	401 JumpIfNotEqual {370}
	402 Move [X31+8], X19
	403 Move X24, X0
	404 NotImplemented "Instruction CMP not yet implemented."
	405 Move X0, X24
	406 Call 0x3EB2AD0
	407 Move X20, [X0]
	408 Call 0x3EB2AE0
	409 Move X20, X31
	410 Move X24, X0
	411 Move X8, [X31+8]
	412 Compare X8, 0
	413 JumpIfEqual {438}
	414 Move X8, [X31+8]
	415 Move X10, 0xE81000
	416 Move X8, [X8]
	417 Move X10, [X10+3584]
	418 NotImplemented "Instruction LDRH not yet implemented."
	419 Move X1, [X10]
	420 Compare X9, 0
	421 JumpIfEqual {428}
	422 Move X10, [X8+176]
	423 Add X10, X10, 8
	424 NotImplemented "Instruction LDUR not yet implemented."
	425 NotImplemented "Instruction CMP not yet implemented."
	426 Subtract X9, X9, 1
	427 Add X10, X10, 16
	428 Move X0, [X31+8]
	429 Move W2, W31
	430 Call 0x1C5D788
	431 NotImplemented "Instruction LDRSW not yet implemented."
	432 Add X8, X8, X9
	433 Add X0, X8, 312
	434 Move X8, [X0]
	435 Move X1, [X0+8]
	436 Move X0, [X31+8]
	437 NotImplemented "Instruction BLR not yet implemented."
	438 Compare X20, 0
	439 JumpIfNotEqual {442}
	440 Move X0, X24
	441 Call 0x1D2D690
	442 Move X0, X20
	443 Call 0x1C17F18
	444 Call 0x1991590

Method: System.String SerializeIdentities()

Disassembly:
	0x032724B0 MOV X0, X20
	0x032724B4 BL 0x1C16F18
	0x032724B8 STR X19, [X31 + 0x8]
	0x032724BC BL 0x1C16F20
	0x032724C0 MOV X26, X31
	0x032724C4 CBZ X25, 0x3272528
	0x032724C8 LDR X8, [X25]
	0x032724CC ADRP X10, 0xE81000
	0x032724D0 LDRH W9, [X8 + 0x12E]
	0x032724D4 LDR X10, [X10 + 0xE00]
	0x032724D8 LDR X1, [X10]
	0x032724DC CBZ X9, 0x3272500
	0x032724E0 LDR X10, [X8 + 0xB0]
	0x032724E4 ADD X10, X10, 0x8
	0x032724E8 LDUR X11, [X10 - 0x8]
	0x032724EC CMP X11, X1
	0x032724F0 B.EQ 0x3272510
	0x032724F4 SUBS X9, X9, 0x1
	0x032724F8 ADD X10, X10, 0x10
	0x032724FC B.NE 0x32724E8
	0x03272500 MOV X0, X25
	0x03272504 MOV W2, W31
	0x03272508 BL 0x1C5C788
	0x0327250C B 0x327251C
	0x03272510 LDRSW X9, [X10]
	0x03272514 ADD X8, X8, X9, 0x4, LSL
	0x03272518 ADD X0, X8, 0x138
	0x0327251C LDP X8, X1, [X0]
	0x03272520 MOV X0, X25
	0x03272524 BLR X8
	0x03272528 LDR X1, [X31]
	0x0327252C CBZ X26, 0x3272598
	0x03272530 MOV X0, X26
	0x03272534 BL 0x1C16F18
	0x03272538 MOV X24, X0
	0x0327253C STR X1, [X31]
	0x03272540 CBNZ X25, 0x32724C8
	0x03272544 B 0x3272528
	0x03272548 B 0x3272594
	0x0327254C B 0x3272594
	0x03272550 B 0x3272594
	0x03272554 STR X19, [X31 + 0x8]
	0x03272558 B 0x3272594
	0x0327255C B 0x3272594
	0x03272560 B 0x3272594
	0x03272564 B 0x3272594
	0x03272568 B 0x3272594
	0x0327256C B 0x3272594
	0x03272570 B 0x3272594
	0x03272574 B 0x3272594
	0x03272578 B 0x3272594
	0x0327257C B 0x3272594
	0x03272580 B 0x3272594
	0x03272584 B 0x3272594
	0x03272588 B 0x3272594
	0x0327258C B 0x3272594
	0x03272590 B 0x3272594
	0x03272594 MOV X24, X0
	0x03272598 CMP W1, 0x1
	0x0327259C B.NE 0x32725B4
	0x032725A0 MOV X0, X24
	0x032725A4 BL 0x3EB1AD0
	0x032725A8 LDR X20, [X0]
	0x032725AC BL 0x3EB1AE0
	0x032725B0 B 0x32723A8
	0x032725B4 MOV X20, X31
	0x032725B8 B 0x32725C0
	0x032725BC MOV X24, X0
	0x032725C0 LDR X8, [X31 + 0x8]
	0x032725C4 CBZ X8, 0x327262C
	0x032725C8 LDR X8, [X31 + 0x8]
	0x032725CC ADRP X10, 0xE81000
	0x032725D0 LDR X8, [X8]
	0x032725D4 LDR X10, [X10 + 0xE00]
	0x032725D8 LDRH W9, [X8 + 0x12E]
	0x032725DC LDR X1, [X10]
	0x032725E0 CBZ X9, 0x3272604
	0x032725E4 LDR X10, [X8 + 0xB0]
	0x032725E8 ADD X10, X10, 0x8
	0x032725EC LDUR X11, [X10 - 0x8]
	0x032725F0 CMP X11, X1
	0x032725F4 B.EQ 0x3272614
	0x032725F8 SUBS X9, X9, 0x1
	0x032725FC ADD X10, X10, 0x10
	0x03272600 B.NE 0x32725EC
	0x03272604 LDR X0, [X31 + 0x8]
	0x03272608 MOV W2, W31
	0x0327260C BL 0x1C5C788
	0x03272610 B 0x3272620
	0x03272614 LDRSW X9, [X10]
	0x03272618 ADD X8, X8, X9, 0x4, LSL
	0x0327261C ADD X0, X8, 0x138
	0x03272620 LDP X8, X1, [X0]
	0x03272624 LDR X0, [X31 + 0x8]
	0x03272628 BLR X8
	0x0327262C CBNZ X20, 0x3272638
	0x03272630 MOV X0, X24
	0x03272634 BL 0x1D2C690
	0x03272638 MOV X0, X20
	0x0327263C BL 0x1C16F18
	0x03272640 BL 0x1990590
	0x03272644 STP X30, X21, [X31 - 0x20]!
	0x03272648 STP X20, X19, [X31 + 0x10]
	0x0327264C ADRP X21, 0x116A000
	0x03272650 ADRP X20, 0xEB1000
	0x03272654 LDRB W8, [X21 + 0x5C1]
	0x03272658 LDR X20, [X20 + 0xA28]
	0x0327265C MOV X19, X0
	0x03272660 TBNZ X8, 0x0, 0x3272678
	0x03272664 ADRP X0, 0xEB1000
	0x03272668 LDR X0, [X0 + 0xA28]
	0x0327266C BL 0x1C16CF4
	0x03272670 MOVZ W8, 0x1
	0x03272674 STRB W8, [X21 + 0x5C1]
	0x03272678 LDR X0, [X20]
	0x0327267C LDR W8, [X0 + 0xE0]
	0x03272680 CBNZ W8, 0x327268C
	0x03272684 BL 0x1C16DFC
	0x03272688 LDR X0, [X20]
	0x0327268C LDR X8, [X0 + 0xB8]
	0x03272690 LDR X8, [X8]
	0x03272694 CBZ X8, 0x32726D0
	0x03272698 LDR W9, [X0 + 0xE0]
	0x0327269C CBNZ W9, 0x32726B4
	0x032726A0 BL 0x1C16DFC
	0x032726A4 LDR X8, [X20]
	0x032726A8 LDR X8, [X8 + 0xB8]
	0x032726AC LDR X8, [X8]
	0x032726B0 CBZ X8, 0x32726F0
	0x032726B4 LDR X1, [X19 + 0x20]
	0x032726B8 LDR X3, [X8 + 0x18]
	0x032726BC LDR X0, [X8 + 0x40]
	0x032726C0 LDR X2, [X8 + 0x28]
	0x032726C4 LDP X20, X19, [X31 + 0x10]
	0x032726C8 LDP X30, X21, [X31], #0x20
	0x032726CC BR X3
	0x032726D0 LDR W8, [X0 + 0xE0]
	0x032726D4 LDR X19, [X19 + 0x20]
	0x032726D8 CBNZ W8, 0x32726E0
	0x032726DC BL 0x1C16DFC
	0x032726E0 MOV X0, X19
	0x032726E4 LDP X20, X19, [X31 + 0x10]
	0x032726E8 LDP X30, X21, [X31], #0x20
	0x032726EC B 0x3270DA0
	0x032726F0 BL 0x1C16F20
	0x032726F4 STR X30, [X31 - 0x30]!
	0x032726F8 STP X22, X21, [X31 + 0x10]
	0x032726FC STP X20, X19, [X31 + 0x20]
	0x03272700 ADRP X21, 0x116A000
	0x03272704 ADRP X22, 0xEB1000
	0x03272708 ADRP X19, 0xEB1000
	0x0327270C ADRP X20, 0xEB1000
	0x03272710 LDRB W8, [X21 + 0x5C2]
	0x03272714 LDR X22, [X22 + 0xCF8]
	0x03272718 LDR X19, [X19 + 0xC80]
	0x0327271C LDR X20, [X20 + 0xA28]
	0x03272720 TBNZ X8, 0x0, 0x3272750
	0x03272724 ADRP X0, 0xEB1000
	0x03272728 LDR X0, [X0 + 0xC80]
	0x0327272C BL 0x1C16CF4
	0x03272730 ADRP X0, 0xEB1000
	0x03272734 LDR X0, [X0 + 0xA28]
	0x03272738 BL 0x1C16CF4
	0x0327273C ADRP X0, 0xEB1000
	0x03272740 LDR X0, [X0 + 0xCF8]
	0x03272744 BL 0x1C16CF4
	0x03272748 MOVZ W8, 0x1
	0x0327274C STRB W8, [X21 + 0x5C2]
	0x03272750 LDR X0, [X22]
	0x03272754 BL 0x1C16F10
	0x03272758 LDR X2, [X19]
	0x0327275C MOV X1, X31
	0x03272760 MOV X3, X31
	0x03272764 MOV X19, X0
	0x03272768 BL 0x2D30578
	0x0327276C LDR X8, [X20]
	0x03272770 LDR X8, [X8 + 0xB8]
	0x03272774 STR X19, [X8]
	0x03272778 ADRP X19, 0x116A000
	0x0327277C LDRB W8, [X19 + 0x6B2]
	0x03272780 CBNZ W8, 0x3272798
	0x03272784 ADRP X0, 0xEB1000
	0x03272788 LDR X0, [X0 + 0xA28]
	0x0327278C BL 0x1C16CF4
	0x03272790 MOVZ W8, 0x1
	0x03272794 STRB W8, [X19 + 0x6B2]
	0x03272798 LDR X0, [X20]
	0x0327279C LDR W8, [X0 + 0xE0]
	0x032727A0 CBZ W8, 0x32727B4
	0x032727A4 LDP X20, X19, [X31 + 0x20]
	0x032727A8 LDP X22, X21, [X31 + 0x10]
	0x032727AC LDR X30, [X31], #0x30
	0x032727B0 RET
	0x032727B4 LDP X20, X19, [X31 + 0x20]
	0x032727B8 LDP X22, X21, [X31 + 0x10]
	0x032727BC LDR X30, [X31], #0x30
	0x032727C0 B 0x1C16DFC
	0x032727C4 STP X30, X21, [X31 - 0x20]!
	0x032727C8 STP X20, X19, [X31 + 0x10]
	0x032727CC ADRP X21, 0x116A000
	0x032727D0 ADRP X20, 0xE81000
	0x032727D4 LDRB W8, [X21 + 0x5C3]
	0x032727D8 LDR X20, [X20 + 0x7D0]
	0x032727DC MOV X19, X0
	0x032727E0 TBNZ X8, 0x0, 0x3272804
	0x032727E4 ADRP X0, 0xE81000
	0x032727E8 LDR X0, [X0 + 0x7D0]
	0x032727EC BL 0x1C16CF4
	0x032727F0 ADRP X0, 0xEB1000
	0x032727F4 LDR X0, [X0 + 0xD00]
	0x032727F8 BL 0x1C16CF4
	0x032727FC MOVZ W8, 0x1
	0x03272800 STRB W8, [X21 + 0x5C3]
	0x03272804 LDR X0, [X20]
	0x03272808 ADRP X20, 0xEB1000
	0x0327280C LDR W8, [X0 + 0xE0]
	0x03272810 LDR X20, [X20 + 0xD00]
	0x03272814 CBNZ W8, 0x327281C
	0x03272818 BL 0x1C16DFC
	0x0327281C LDR X1, [X20]
	0x03272820 MOV X0, X19
	0x03272824 MOV X2, X31
	0x03272828 BL 0x33B2C70
	0x0327282C MOVZ W8, 0x106A
	0x03272830 MOVK W8, 0x80130000
	0x03272834 STR W8, [X19 + 0x60]
	0x03272838 LDP X20, X19, [X31 + 0x10]
	0x0327283C LDP X30, X21, [X31], #0x20
	0x03272840 RET
	0x03272844 STR X30, [X31 - 0x30]!
	0x03272848 STP X22, X21, [X31 + 0x10]
	0x0327284C STP X20, X19, [X31 + 0x20]
	0x03272850 ADRP X21, 0x116A000
	0x03272854 ADRP X22, 0xE81000
	0x03272858 LDRB W8, [X21 + 0x5C4]
	0x0327285C LDR X22, [X22 + 0x7D0]
	0x03272860 MOV X20, X1
	0x03272864 MOV X19, X0
	0x03272868 TBNZ X8, 0x0, 0x3272880
	0x0327286C ADRP X0, 0xE81000
	0x03272870 LDR X0, [X0 + 0x7D0]
	0x03272874 BL 0x1C16CF4
	0x03272878 MOVZ W8, 0x1
	0x0327287C STRB W8, [X21 + 0x5C4]
	0x03272880 LDR X0, [X22]
	0x03272884 LDR W8, [X0 + 0xE0]
	0x03272888 CBNZ W8, 0x3272890
	0x0327288C BL 0x1C16DFC
	0x03272890 MOV X0, X19
	0x03272894 MOV X1, X20
	0x03272898 MOV X2, X31
	0x0327289C BL 0x33B2C70
	0x032728A0 MOVZ W8, 0x106A
	0x032728A4 MOVK W8, 0x80130000
	0x032728A8 STR W8, [X19 + 0x60]
	0x032728AC LDP X20, X19, [X31 + 0x20]
	0x032728B0 LDP X22, X21, [X31 + 0x10]
	0x032728B4 LDR X30, [X31], #0x30
	0x032728B8 RET
	0x032728BC STR X30, [X31 - 0x40]!
	0x032728C0 STP X24, X23, [X31 + 0x10]
	0x032728C4 STP X22, X21, [X31 + 0x20]
	0x032728C8 STP X20, X19, [X31 + 0x30]
	0x032728CC ADRP X24, 0x116A000
	0x032728D0 ADRP X23, 0xE81000
	0x032728D4 LDRB W8, [X24 + 0x5C5]
	0x032728D8 LDR X23, [X23 + 0x7D0]
	0x032728DC MOV X19, X3
	0x032728E0 MOV X20, X2
	0x032728E4 MOV X21, X1
	0x032728E8 MOV X22, X0
	0x032728EC TBNZ X8, 0x0, 0x3272904
	0x032728F0 ADRP X0, 0xE81000
	0x032728F4 LDR X0, [X0 + 0x7D0]
	0x032728F8 BL 0x1C16CF4
	0x032728FC MOVZ W8, 0x1
	0x03272900 STRB W8, [X24 + 0x5C5]
	0x03272904 LDR X0, [X23]
	0x03272908 LDR W8, [X0 + 0xE0]
	0x0327290C CBNZ W8, 0x3272914
	0x03272910 BL 0x1C16DFC
	0x03272914 MOV X0, X22
	0x03272918 MOV X1, X21
	0x0327291C MOV X2, X20
	0x03272920 MOV X3, X19
	0x03272924 LDP X20, X19, [X31 + 0x30]
	0x03272928 LDP X22, X21, [X31 + 0x20]
	0x0327292C LDP X24, X23, [X31 + 0x10]
	0x03272930 MOV X4, X31
	0x03272934 LDR X30, [X31], #0x40
	0x03272938 B 0x33B2CD8
	0x0327293C B 0x1CB7274
	0x03272940 B 0x1CB7274
	0x03272944 B 0x1CB7208
	0x03272948 B 0x1CB7210
	0x0327294C STP X30, X21, [X31 - 0x20]!
	0x03272950 STP X20, X19, [X31 + 0x10]
	0x03272954 ADRP X21, 0x116A000
	0x03272958 ADRP X20, 0xEB1000
	0x0327295C LDRB W8, [X21 + 0x5C6]
	0x03272960 LDR X20, [X20 + 0xD08]
	0x03272964 MOV X19, X0
	0x03272968 TBNZ X8, 0x0, 0x3272980
	0x0327296C ADRP X0, 0xEB1000
	0x03272970 LDR X0, [X0 + 0xD08]
	0x03272974 BL 0x1C16CF4
	0x03272978 MOVZ W8, 0x1
	0x0327297C STRB W8, [X21 + 0x5C6]
	0x03272980 MOV X0, X19
	0x03272984 MOV X1, X31
	0x03272988 BL 0x33BDD8C
	0x0327298C LDR X0, [X20]
	0x03272990 LDR W8, [X0 + 0xE0]
	0x03272994 CBNZ W8, 0x327299C
	0x03272998 BL 0x1C16DFC
	0x0327299C BL 0x32729B0
	0x032729A0 STR X0, [X19 + 0x10]
	0x032729A4 LDP X20, X19, [X31 + 0x10]
	0x032729A8 LDP X30, X21, [X31], #0x20
	0x032729AC RET
	0x032729B0 SUB X31, X31, 0x60
	0x032729B4 STR X30, [X31 + 0x10]
	0x032729B8 STP X26, X25, [X31 + 0x20]
	0x032729BC STP X24, X23, [X31 + 0x30]
	0x032729C0 STP X22, X21, [X31 + 0x40]
	0x032729C4 STP X20, X19, [X31 + 0x50]
	0x032729C8 ADRP X20, 0x116A000
	0x032729CC ADRP X22, 0xE86000
	0x032729D0 ADRP X19, 0xE89000
	0x032729D4 ADRP X21, 0xEB1000
	0x032729D8 LDRB W8, [X20 + 0x6A5]
	0x032729DC LDR X22, [X22 + 0x740]
	0x032729E0 LDR X19, [X19 + 0xF30]
	0x032729E4 LDR X21, [X21 + 0xD08]
	0x032729E8 TBNZ X8, 0x0, 0x3272A54
	0x032729EC ADRP X0, 0xEB1000
	0x032729F0 LDR X0, [X0 + 0xD08]
	0x032729F4 BL 0x1C16CF4
	0x032729F8 ADRP X0, 0xEB1000
	0x032729FC LDR X0, [X0 + 0xD10]
	0x03272A00 BL 0x1C16CF4
	0x03272A04 ADRP X0, 0xE81000
	0x03272A08 LDR X0, [X0 + 0xE00]
	0x03272A0C BL 0x1C16CF4
	0x03272A10 ADRP X0, 0xE81000
	0x03272A14 LDR X0, [X0 + 0xE18]
	0x03272A18 BL 0x1C16CF4
	0x03272A1C ADRP X0, 0xE89000
	0x03272A20 LDR X0, [X0 + 0xF18]
	0x03272A24 BL 0x1C16CF4
	0x03272A28 ADRP X0, 0xEA8000
	0x03272A2C LDR X0, [X0 + 0x298]
	0x03272A30 BL 0x1C16CF4
	0x03272A34 ADRP X0, 0xE89000
	0x03272A38 LDR X0, [X0 + 0xF30]
	0x03272A3C BL 0x1C16CF4
	0x03272A40 ADRP X0, 0xE86000
	0x03272A44 LDR X0, [X0 + 0x740]
	0x03272A48 BL 0x1C16CF4
	0x03272A4C MOVZ W8, 0x1
	0x03272A50 STRB W8, [X20 + 0x6A5]
	0x03272A54 LDR X0, [X22]
	0x03272A58 BL 0x1C16F10
	0x03272A5C LDR X1, [X19]
	0x03272A60 MOV X19, X0
	0x03272A64 BL 0x301B7C4
	0x03272A68 LDR X0, [X21]
	0x03272A6C LDR W8, [X0 + 0xE0]
	0x03272A70 CBNZ W8, 0x3272A7C
	0x03272A74 BL 0x1C16DFC
	0x03272A78 LDR X0, [X21]
	0x03272A7C LDR X8, [X0 + 0xB8]
	0x03272A80 LDR X0, [X8]
	0x03272A84 CBZ X0, 0x3272D74
	0x03272A88 LDR X8, [X0]
	0x03272A8C LDR X9, [X8 + 0x2D8]
	0x03272A90 LDR X1, [X8 + 0x2E0]
	0x03272A94 BLR X9
	0x03272A98 MOV X20, X0
	0x03272A9C STRB W31, [X31 + 0x1C]
	0x03272AA0 ADD X1, X31, 0x1C
	0x03272AA4 MOV X2, X31
	0x03272AA8 BL 0x33DE64C
	0x03272AAC LDR X0, [X21]
	0x03272AB0 LDR W8, [X0 + 0xE0]
	0x03272AB4 CBNZ W8, 0x3272AC0
	0x03272AB8 BL 0x1C16DFC
	0x03272ABC LDR X0, [X21]
	0x03272AC0 LDR X8, [X0 + 0xB8]
	0x03272AC4 LDR X0, [X8]
	0x03272AC8 CBZ X0, 0x3272D80
	0x03272ACC LDR X8, [X0]
	0x03272AD0 LDR X1, [X8 + 0x390]
	0x03272AD4 LDR X9, [X8 + 0x388]
	0x03272AD8 BLR X9
	0x03272ADC ADRP X23, 0xE81000
	0x03272AE0 LDR X23, [X23 + 0xE00]
	0x03272AE4 MOV X21, X0
	0x03272AE8 CBZ X0, 0x3272D84
	0x03272AEC ADRP X24, 0xE81000
	0x03272AF0 ADRP X25, 0xEB1000
	0x03272AF4 ADRP X26, 0xE89000
	0x03272AF8 LDR X24, [X24 + 0xE18]
	0x03272AFC LDR X25, [X25 + 0xD10]
	0x03272B00 LDR X26, [X26 + 0xF18]
	0x03272B04 LDR X8, [X21]
	0x03272B08 LDR X1, [X24]
	0x03272B0C LDRH W9, [X8 + 0x12E]
	0x03272B10 CBZ X9, 0x3272B34
	0x03272B14 LDR X10, [X8 + 0xB0]
	0x03272B18 ADD X10, X10, 0x8
	0x03272B1C LDUR X11, [X10 - 0x8]
	0x03272B20 CMP X11, X1
	0x03272B24 B.EQ 0x3272B44
	0x03272B28 SUBS X9, X9, 0x1
	0x03272B2C ADD X10, X10, 0x10
	0x03272B30 B.NE 0x3272B1C
	0x03272B34 MOV X0, X21
	0x03272B38 MOV W2, W31
	0x03272B3C BL 0x1C5C788
	0x03272B40 B 0x3272B50
	0x03272B44 LDRSW X9, [X10]
	0x03272B48 ADD X8, X8, X9, 0x4, LSL
	0x03272B4C ADD X0, X8, 0x138
	0x03272B50 LDP X8, X1, [X0]
	0x03272B54 MOV X0, X21
	0x03272B58 BLR X8
	0x03272B5C TBZ X0, 0x0, 0x3272C84
	0x03272B60 LDR X8, [X21]
	0x03272B64 LDR X1, [X24]
	0x03272B68 LDRH W9, [X8 + 0x12E]
	0x03272B6C CBZ X9, 0x3272B90
	0x03272B70 LDR X10, [X8 + 0xB0]
	0x03272B74 ADD X10, X10, 0x8
	0x03272B78 LDUR X11, [X10 - 0x8]
	0x03272B7C CMP X11, X1
	0x03272B80 B.EQ 0x3272BA0
	0x03272B84 SUBS X9, X9, 0x1
	0x03272B88 ADD X10, X10, 0x10
	0x03272B8C B.NE 0x3272B78
	0x03272B90 MOVZ W2, 0x1
	0x03272B94 MOV X0, X21
	0x03272B98 BL 0x1C5C788
	0x03272B9C B 0x3272BB0
	0x03272BA0 LDR W9, [X10]
	0x03272BA4 ADD W9, W9, 0x1
	0x03272BA8 ADD X8, X8, W9, 0x4, SXTW
	0x03272BAC ADD X0, X8, 0x138
	0x03272BB0 LDP X8, X1, [X0]
	0x03272BB4 MOV X0, X21
	0x03272BB8 BLR X8
	0x03272BBC LDR X1, [X25]
	0x03272BC0 BL 0x1C16E00
	0x03272BC4 MOV X22, X0
	0x03272BC8 CBZ X0, 0x3272B04
	0x03272BCC LDR X8, [X22]
	0x03272BD0 LDR X1, [X25]
	0x03272BD4 LDRH W9, [X8 + 0x12E]
	0x03272BD8 CBZ X9, 0x3272BFC
	0x03272BDC LDR X10, [X8 + 0xB0]
	0x03272BE0 ADD X10, X10, 0x8
	0x03272BE4 LDUR X11, [X10 - 0x8]
	0x03272BE8 CMP X11, X1
	0x03272BEC B.EQ 0x3272C0C
	0x03272BF0 SUBS X9, X9, 0x1
	0x03272BF4 ADD X10, X10, 0x10
	0x03272BF8 B.NE 0x3272BE4
	0x03272BFC MOV X0, X22
	0x03272C00 MOV W2, W31
	0x03272C04 BL 0x1C5C788
	0x03272C08 B 0x3272C18
	0x03272C0C LDRSW X9, [X10]
	0x03272C10 ADD X8, X8, X9, 0x4, LSL
	0x03272C14 ADD X0, X8, 0x138
	0x03272C18 LDP X8, X1, [X0]
	0x03272C1C MOV X0, X22
	0x03272C20 BLR X8
	0x03272C24 MOV X1, X0
	0x03272C28 CBZ X1, 0x3272B04
	0x03272C2C CBZ X19, 0x3272D6C
	0x03272C30 LDR W10, [X19 + 0x1C]
	0x03272C34 LDR X8, [X19 + 0x10]
	0x03272C38 LDR X9, [X26]
	0x03272C3C ADD W10, W10, 0x1
	0x03272C40 STR W10, [X19 + 0x1C]
	0x03272C44 CBZ X8, 0x3272D70
	0x03272C48 LDRSW X10, [X19 + 0x18]
	0x03272C4C LDR W11, [X8 + 0x18]
	0x03272C50 CMP W10, W11
	0x03272C54 B.CS 0x3272C6C
	0x03272C58 ADD W9, W10, 0x1
	0x03272C5C ADD X8, X8, X10, 0x3, LSL
	0x03272C60 STR W9, [X19 + 0x18]
	0x03272C64 STR X1, [X8 + 0x20]
	0x03272C68 B 0x3272B04
	0x03272C6C LDR X8, [X9 + 0x20]
	0x03272C70 LDR X8, [X8 + 0xC0]
	0x03272C74 LDR X2, [X8 + 0x70]
	0x03272C78 MOV X0, X19
	0x03272C7C BL 0x301BF90
	0x03272C80 B 0x3272B04
	0x03272C84 MOV X22, X31
	0x03272C88 MOV W25, W31
	0x03272C8C MOVZ W24, 0x4
	0x03272C90 LDR X1, [X23]
	0x03272C94 MOV X0, X21
	0x03272C98 BL 0x1C16E00
	0x03272C9C MOV X21, X0
	0x03272CA0 CBZ X0, 0x3272CFC
	0x03272CA4 LDR X8, [X21]
	0x03272CA8 LDR X1, [X23]
	0x03272CAC LDRH W9, [X8 + 0x12E]
	0x03272CB0 CBZ X9, 0x3272CD4
	0x03272CB4 LDR X10, [X8 + 0xB0]
	0x03272CB8 ADD X10, X10, 0x8
	0x03272CBC LDUR X11, [X10 - 0x8]
	0x03272CC0 CMP X11, X1
	0x03272CC4 B.EQ 0x3272CE4
	0x03272CC8 SUBS X9, X9, 0x1
	0x03272CCC ADD X10, X10, 0x10
	0x03272CD0 B.NE 0x3272CBC
	0x03272CD4 MOV X0, X21
	0x03272CD8 MOV W2, W31
	0x03272CDC BL 0x1C5C788
	0x03272CE0 B 0x3272CF0
	0x03272CE4 LDRSW X9, [X10]
	0x03272CE8 ADD X8, X8, X9, 0x4, LSL
	0x03272CEC ADD X0, X8, 0x138
	0x03272CF0 LDP X8, X1, [X0]
	0x03272CF4 MOV X0, X21
	0x03272CF8 BLR X8
	0x03272CFC CBNZ X22, 0x3272D88
	0x03272D00 MOV X21, X31
	0x03272D04 TBZ X25, 0x0, 0x3272D10
	0x03272D08 MOV W24, W31
	0x03272D0C MOV X22, X21
	0x03272D10 LDRB W8, [X31 + 0x1C]
	0x03272D14 CBZ W8, 0x3272D24
	0x03272D18 MOV X0, X20
	0x03272D1C MOV X1, X31
	0x03272D20 BL 0x33E14E4
	0x03272D24 CBNZ X22, 0x3272D78
	0x03272D28 ORR W8, W24, 0x4
	0x03272D2C CMP W8, 0x4
	0x03272D30 B.NE 0x3272D50
	0x03272D34 CBZ X19, 0x3272D74
	0x03272D38 ADRP X8, 0xEA8000
	0x03272D3C LDR X8, [X8 + 0x298]
	0x03272D40 MOV X0, X19
	0x03272D44 LDR X1, [X8]
	0x03272D48 BL 0x301DDC4
	0x03272D4C B 0x3272D50
	0x03272D50 LDP X20, X19, [X31 + 0x50]
	0x03272D54 LDP X22, X21, [X31 + 0x40]
	0x03272D58 LDP X24, X23, [X31 + 0x30]
	0x03272D5C LDP X26, X25, [X31 + 0x20]
	0x03272D60 LDR X30, [X31 + 0x10]
	0x03272D64 ADD X31, X31, 0x60
	0x03272D68 RET
	0x03272D6C BL 0x1C16F20
	0x03272D70 BL 0x1C16F20
	0x03272D74 BL 0x1C16F20
	0x03272D78 MOV X0, X22
	0x03272D7C BL 0x1C16F18
	0x03272D80 BL 0x1C16F20
	0x03272D84 BL 0x1C16F20
	0x03272D88 MOV X0, X22
	0x03272D8C BL 0x1C16F18
	0x03272D90 B 0x3272DB8
	0x03272D94 B 0x3272DA0
	0x03272D98 B 0x3272DA0
	0x03272D9C B 0x3272DA0
	0x03272DA0 STP X1, X0, [X31]
	0x03272DA4 B 0x3272E50
	0x03272DA8 B 0x3272DB8
	0x03272DAC B 0x3272DB8
	0x03272DB0 B 0x3272DB8
	0x03272DB4 B 0x3272DB8
	0x03272DB8 CMP W1, 0x1
	0x03272DBC B.NE 0x3272DD8
	0x03272DC0 BL 0x3EB1AD0
	0x03272DC4 LDR X22, [X0]
	0x03272DC8 BL 0x3EB1AE0
	0x03272DCC MOV W24, W31
	0x03272DD0 MOVZ W25, 0x1
	0x03272DD4 B 0x3272C90
	0x03272DD8 STP X1, X0, [X31]
	0x03272DDC MOV X22, X31
	0x03272DE0 LDR X1, [X23]
	0x03272DE4 MOV X0, X21
	0x03272DE8 BL 0x1C16E00
	0x03272DEC MOV X21, X0
	0x03272DF0 CBZ X0, 0x3272E4C
	0x03272DF4 LDR X8, [X21]
	0x03272DF8 LDR X1, [X23]
	0x03272DFC LDRH W9, [X8 + 0x12E]
	0x03272E00 CBZ X9, 0x3272E24
	0x03272E04 LDR X10, [X8 + 0xB0]
	0x03272E08 ADD X10, X10, 0x8
	0x03272E0C LDUR X11, [X10 - 0x8]
	0x03272E10 CMP X11, X1
	0x03272E14 B.EQ 0x3272E34
	0x03272E18 SUBS X9, X9, 0x1
	0x03272E1C ADD X10, X10, 0x10
	0x03272E20 B.NE 0x3272E0C
	0x03272E24 MOV X0, X21
	0x03272E28 MOV W2, W31
	0x03272E2C BL 0x1C5C788
	0x03272E30 B 0x3272E40
	0x03272E34 LDRSW X9, [X10]
	0x03272E38 ADD X8, X8, X9, 0x4, LSL
	0x03272E3C ADD X0, X8, 0x138
	0x03272E40 LDP X8, X1, [X0]
	0x03272E44 MOV X0, X21
	0x03272E48 BLR X8
	0x03272E4C CBNZ X22, 0x3272E78
	0x03272E50 LDR X8, [X31]
	0x03272E54 CMP W8, 0x1
	0x03272E58 B.NE 0x3272E70
	0x03272E5C LDR X0, [X31 + 0x8]
	0x03272E60 BL 0x3EB1AD0
	0x03272E64 LDR X21, [X0]
	0x03272E68 BL 0x3EB1AE0
	0x03272E6C B 0x3272D08
	0x03272E70 MOV X21, X31
	0x03272E74 B 0x3272E8C
	0x03272E78 MOV X0, X22
	0x03272E7C BL 0x1C16F18
	0x03272E80 STP X1, X0, [X31]
	0x03272E84 B 0x3272DE0
	0x03272E88 STR X0, [X31 + 0x8]
	0x03272E8C LDRB W8, [X31 + 0x1C]
	0x03272E90 CBZ W8, 0x3272EA0
	0x03272E94 MOV X0, X20
	0x03272E98 MOV X1, X31
	0x03272E9C BL 0x33E14E4
	0x03272EA0 CBNZ X21, 0x3272EAC
	0x03272EA4 LDR X0, [X31 + 0x8]
	0x03272EA8 BL 0x1D2C690
	0x03272EAC MOV X0, X21
	0x03272EB0 BL 0x1C16F18
	0x03272EB4 BL 0x1990590
	0x03272EB8 STR X30, [X31 - 0x30]!
	0x03272EBC STP X22, X21, [X31 + 0x10]
	0x03272EC0 STP X20, X19, [X31 + 0x20]
	0x03272EC4 ADRP X22, 0x116A000
	0x03272EC8 ADRP X21, 0xE81000
	0x03272ECC LDRB W8, [X22 + 0x5C7]
	0x03272ED0 LDR X21, [X21 + 0x9D0]
	0x03272ED4 MOV X20, X1
	0x03272ED8 MOV X19, X0
	0x03272EDC TBNZ X8, 0x0, 0x3272EF4
	0x03272EE0 ADRP X0, 0xE81000
	0x03272EE4 LDR X0, [X0 + 0x9D0]
	0x03272EE8 BL 0x1C16CF4
	0x03272EEC MOVZ W8, 0x1
	0x03272EF0 STRB W8, [X22 + 0x5C7]
	0x03272EF4 MOV X0, X19
	0x03272EF8 MOV X1, X31
	0x03272EFC BL 0x33BDD8C

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+80], X29
	003 Move [X31+88], X30
	004 Move [X31+96], X28
	005 Move [X31+104], X27
	006 Move [X31+112], X26
	007 Move [X31+120], X25
	008 Move [X31+128], X24
	009 Move [X31+136], X23
	010 Move [X31+144], X22
	011 Move [X31+152], X21
	012 Move [X31+160], X20
	013 Move [X31+168], X19
	014 Move X23, 0x116B000
	015 Move X22, 0xE83000
	016 Move X19, 0xE83000
	017 Move X20, 0xEAE000
	018 Move W8, [X23+1472]
	019 Move X22, [X22+464]
	020 Move X19, [X19+448]
	021 Move X20, [X20+208]
	022 Move X21, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {74}
	027 Move X0, 0xEAE000
	028 Move X0, [X0+208]
	029 Call 0x1C17CF4
	030 Move X0, 0xE8B000
	031 Move X0, [X0+2536]
	032 Call 0x1C17CF4
	033 Move X0, 0xEB2000
	034 Move X0, [X0+3256]
	035 Call 0x1C17CF4
	036 Move X0, 0xEB2000
	037 Move X0, [X0+3264]
	038 Call 0x1C17CF4
	039 Move X0, 0xEB2000
	040 Move X0, [X0+3272]
	041 Call 0x1C17CF4
	042 Move X0, 0xE82000
	043 Move X0, [X0+3584]
	044 Call 0x1C17CF4
	045 Move X0, 0xE83000
	046 Move X0, [X0+440]
	047 Call 0x1C17CF4
	048 Move X0, 0xEB2000
	049 Move X0, [X0+3280]
	050 Call 0x1C17CF4
	051 Move X0, 0xE83000
	052 Move X0, [X0+448]
	053 Call 0x1C17CF4
	054 Move X0, 0xE83000
	055 Move X0, [X0+464]
	056 Call 0x1C17CF4
	057 Move X0, 0xE8A000
	058 Move X0, [X0+1368]
	059 Call 0x1C17CF4
	060 Move X0, 0xE82000
	061 Move X0, [X0+1728]
	062 Call 0x1C17CF4
	063 Move X0, 0xEB2000
	064 Move X0, [X0+3288]
	065 Call 0x1C17CF4
	066 Move X0, 0xEB2000
	067 Move X0, [X0+2624]
	068 Call 0x1C17CF4
	069 Move X0, 0xE82000
	070 Move X0, [X0+2440]
	071 Call 0x1C17CF4
	072 Move W8, 1
	073 Move [X23+1472], W8
	074 Move X0, [X22]
	075 Move [X31+48], X31
	076 Move [X31+56], X31
	077 Move [X31+64], X31
	078 Move [X31+32], X31
	079 Move [X31+40], X31
	080 Call 0x1C17F10
	081 Move X1, [X19]
	082 Move X19, X0
	083 Call List`1<Object>..ctor, X0
	084 Move X0, [X20]
	085 Call 0x1C17F10
	086 Move X1, X31
	087 Move X20, X0
	088 Call BinaryFormatter..ctor, X0
	089 Move X0, [X21+32]
	090 Compare X0, 0
	091 JumpIfEqual {563}
	092 Move X8, 0xEB2000
	093 Move X8, [X8+3280]
	094 Move X29, 0xEB2000
	095 Move X28, 0xEB2000
	096 Move X25, 0xE82000
	097 Move X26, 0xE83000
	098 Move X27, 0xE8A000
	099 Move X29, [X29+3264]
	100 Move X28, [X28+3288]
	101 Move X25, [X25+1728]
	102 Move X26, [X26+440]
	103 Move X27, [X27+1368]
	104 Move X1, [X8]
	105 Add X8, X31, 8
	106 Call List`1<Object>.GetEnumerator, X0
	107 NotImplemented "Instruction LDUR not yet implemented."
	108 Move X8, [X31+24]
	109 Move [X31+3], V0
	110 Move [X31+64], X8
	111 Move X1, [X29]
	112 Add X0, X31, 48
	113 Call Enumerator<Object>.MoveNext, X0
	114 Move TEMP, X0
	115 And TEMP, TEMP, 1
	116 Compare TEMP, 1
	117 JumpIfNotEqual {413}
	118 Move X21, [X31+64]
	119 Compare X21, 0
	120 JumpIfEqual {500}
	121 Move X0, X21
	122 Move X1, X31
	123 Call "il2cpp_vm_object_is_inst", X0
	124 Move X22, X0
	125 Move X0, [X25]
	126 Move X23, [X28]
	127 Move W8, [X0+224]
	128 Compare W8, 0
	129 JumpIfNotEqual {131}
	130 Call 0x1C17DFC
	131 Move X0, X23
	132 Move X1, X31
	133 Call Type.GetTypeFromHandle, X0
	134 Move X1, X0
	135 Move X0, X22
	136 Move X2, X31
	137 Call Type.op_Equality, X0, X1
	138 Move TEMP, X0
	139 And TEMP, TEMP, 1
	140 Compare TEMP, 1
	141 JumpIfNotEqual {281}
	142 Move X8, 0xEB2000
	143 Move X9, [X21]
	144 Move X8, [X8+2624]
	145 Move W11, [X9+304]
	146 Move X8, [X8]
	147 Move W10, [X8+304]
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Move X9, [X9+200]
	150 Add X9, X9, X10
	151 NotImplemented "Instruction LDUR not yet implemented."
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move X8, [X21+120]
	154 Move [X31+40], X8
	155 Add X0, X31, 40
	156 Move X1, X31
	157 Call IntPtr.ToInt64, X0
	158 Move [X31+32], X0
	159 Move X0, X31
	160 Call NumberFormatInfo.get_InvariantInfo
	161 Move X1, X0
	162 Add X0, X31, 32
	163 Move X2, X31
	164 Call Int64.ToString, X0, X1
	165 Move X1, X0
	166 Compare X19, 0
	167 JumpIfEqual {506}
	168 Move W10, [X19+28]
	169 Move X8, [X19+16]
	170 Move X9, [X26]
	171 Add W10, W10, 1
	172 Move [X19+28], W10
	173 Compare X8, 0
	174 JumpIfEqual {507}
	175 NotImplemented "Instruction LDRSW not yet implemented."
	176 Move W11, [X8+24]
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Add W9, W10, 1
	179 Add X8, X8, X10
	180 Move [X19+24], W9
	181 Move [X8+32], X1
	182 Move X8, [X9+32]
	183 Move X8, [X8+192]
	184 Move X2, [X8+112]
	185 Move X0, X19
	186 Call List`1<Object>.AddWithResize, X0, X1
	187 Move X0, [X27]
	188 Call 0x1C17F10
	189 Move X22, X0
	190 Move X1, X31
	191 Call MemoryStream..ctor, X0
	192 Move X0, X21
	193 Move X1, X31
	194 Call WindowsIdentity.CloneAsBase, X0
	195 Compare X20, 0
	196 JumpIfEqual {397}
	197 Move X2, X0
	198 Move X0, X20
	199 Move X1, X22
	200 Move X3, X31
	201 Move W4, W31
	202 Move X5, X31
	203 Call BinaryFormatter.Serialize, X0, X1, X2, X3, X4
	204 Compare X22, 0
	205 JumpIfEqual {398}
	206 Move X8, [X22]
	207 Move X1, [X8+960]
	208 Move X9, [X8+952]
	209 Move X0, X22
	210 NotImplemented "Instruction BLR not yet implemented."
	211 Move X8, [X22]
	212 Move X23, X0
	213 Move X9, [X8+488]
	214 Move X1, [X8+496]
	215 Move X0, X22
	216 NotImplemented "Instruction BLR not yet implemented."
	217 Move X8, 0xE8B000
	218 Move X8, [X8+2536]
	219 Move X24, X0
	220 Move X0, [X8]
	221 Move W8, [X0+224]
	222 Compare W8, 0
	223 JumpIfNotEqual {225}
	224 Call 0x1C17DFC
	225 Move X0, X23
	226 Move W1, W31
	227 Move W2, W24
	228 Move X3, X31
	229 Call Convert.ToBase64String, X0, X1, X2
	230 Move X1, X0
	231 Move W10, [X19+28]
	232 Move X8, [X19+16]
	233 Move X9, [X26]
	234 Add W10, W10, 1
	235 Move [X19+28], W10
	236 Compare X8, 0
	237 JumpIfEqual {399}
	238 NotImplemented "Instruction LDRSW not yet implemented."
	239 Move W11, [X8+24]
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Add W9, W10, 1
	242 Add X8, X8, X10
	243 Move W24, W31
	244 Move X23, X31
	245 Move [X19+24], W9
	246 Move [X8+32], X1
	247 Move X8, [X9+32]
	248 Move X8, [X8+192]
	249 Move X2, [X8+112]
	250 Move X0, X19
	251 Call List`1<Object>.AddWithResize, X0, X1
	252 Move W24, W31
	253 Move X23, X31
	254 Move X8, [X22]
	255 Move X10, 0xE82000
	256 NotImplemented "Instruction LDRH not yet implemented."
	257 Move X10, [X10+3584]
	258 Move X1, [X10]
	259 Compare X9, 0
	260 JumpIfEqual {267}
	261 Move X10, [X8+176]
	262 Add X10, X10, 8
	263 NotImplemented "Instruction LDUR not yet implemented."
	264 NotImplemented "Instruction CMP not yet implemented."
	265 Subtract X9, X9, 1
	266 Add X10, X10, 16
	267 Move X0, X22
	268 Move W2, W31
	269 Call 0x1C5D788
	270 NotImplemented "Instruction LDRSW not yet implemented."
	271 Add X8, X8, X9
	272 Add X0, X8, 312
	273 Move X8, [X0]
	274 Move X1, [X0+8]
	275 Move X0, X22
	276 NotImplemented "Instruction BLR not yet implemented."
	277 Compare X23, 0
	278 JumpIfNotEqual {504}
	279 Compare W24, 0
	280 JumpIfEqual {111}
	281 Move X0, [X27]
	282 Call 0x1C17F10
	283 Move X22, X0
	284 Move X1, X31
	285 Call MemoryStream..ctor, X0
	286 Compare X19, 0
	287 JumpIfEqual {392}
	288 Move X8, 0xE82000
	289 Move X8, [X8+2440]
	290 Move W10, [X19+28]
	291 Move X9, [X26]
	292 Move X1, [X8]
	293 Move X8, [X19+16]
	294 Add W10, W10, 1
	295 Move [X19+28], W10
	296 Compare X8, 0
	297 JumpIfEqual {393}
	298 NotImplemented "Instruction LDRSW not yet implemented."
	299 Move W11, [X8+24]
	300 NotImplemented "Instruction CMP not yet implemented."
	301 Add W9, W10, 1
	302 Add X8, X8, X10
	303 Move [X19+24], W9
	304 Move [X8+32], X1
	305 Move X8, [X9+32]
	306 Move X8, [X8+192]
	307 Move X2, [X8+112]
	308 Move X0, X19
	309 Call List`1<Object>.AddWithResize, X0, X1
	310 Compare X20, 0
	311 JumpIfEqual {394}
	312 Move X0, X20
	313 Move X1, X22
	314 Move X2, X21
	315 Move X3, X31
	316 Move W4, W31
	317 Move X5, X31
	318 Call BinaryFormatter.Serialize, X0, X1, X2, X3, X4
	319 Compare X22, 0
	320 JumpIfEqual {395}
	321 Move X8, [X22]
	322 Move X1, [X8+960]
	323 Move X9, [X8+952]
	324 Move X0, X22
	325 NotImplemented "Instruction BLR not yet implemented."
	326 Move X8, [X22]
	327 Move X21, X0
	328 Move X9, [X8+488]
	329 Move X1, [X8+496]
	330 Move X0, X22
	331 NotImplemented "Instruction BLR not yet implemented."
	332 Move X8, 0xE8B000
	333 Move X8, [X8+2536]
	334 Move X23, X0
	335 Move X0, [X8]
	336 Move W8, [X0+224]
	337 Compare W8, 0
	338 JumpIfNotEqual {340}
	339 Call 0x1C17DFC
	340 Move X0, X21
	341 Move W1, W31
	342 Move W2, W23
	343 Move X3, X31
	344 Call Convert.ToBase64String, X0, X1, X2
	345 Move X1, X0
	346 Move W10, [X19+28]
	347 Move X8, [X19+16]
	348 Move X9, [X26]
	349 Add W10, W10, 1
	350 Move [X19+28], W10
	351 Compare X8, 0
	352 JumpIfEqual {396}
	353 NotImplemented "Instruction LDRSW not yet implemented."
	354 Move W11, [X8+24]
	355 NotImplemented "Instruction CMP not yet implemented."
	356 Add W9, W10, 1
	357 Add X8, X8, X10
	358 Move X21, X31
	359 Move [X19+24], W9
	360 Move [X8+32], X1
	361 Move X8, [X9+32]
	362 Move X8, [X8+192]
	363 Move X2, [X8+112]
	364 Move X0, X19
	365 Call List`1<Object>.AddWithResize, X0, X1
	366 Move X21, X31
	367 Move X8, [X22]
	368 Move X10, 0xE82000
	369 NotImplemented "Instruction LDRH not yet implemented."
	370 Move X10, [X10+3584]
	371 Move X1, [X10]
	372 Compare X9, 0
	373 JumpIfEqual {380}
	374 Move X10, [X8+176]
	375 Add X10, X10, 8
	376 NotImplemented "Instruction LDUR not yet implemented."
	377 NotImplemented "Instruction CMP not yet implemented."
	378 Subtract X9, X9, 1
	379 Add X10, X10, 16
	380 Move X0, X22
	381 Move W2, W31
	382 Call 0x1C5D788
	383 NotImplemented "Instruction LDRSW not yet implemented."
	384 Add X8, X8, X9
	385 Add X0, X8, 312
	386 Move X8, [X0]
	387 Move X1, [X0+8]
	388 Move X0, X22
	389 NotImplemented "Instruction BLR not yet implemented."
	390 Compare X21, 0
	391 JumpIfEqual {111}
	392 Call 0x1C17F20
	393 Call 0x1C17F20
	394 Call 0x1C17F20
	395 Call 0x1C17F20
	396 Call 0x1C17F20
	397 Call 0x1C17F20
	398 Call 0x1C17F20
	399 Call 0x1C17F20
	400 NotImplemented "Instruction CMP not yet implemented."
	401 Call 0x3EB2AD0
	402 Move X23, [X0]
	403 Call 0x3EB2AE0
	404 Move W24, 1
	405 Compare X22, 0
	406 JumpIfNotEqual {254}
	407 NotImplemented "Instruction CMP not yet implemented."
	408 Call 0x3EB2AD0
	409 Move X21, [X0]
	410 Call 0x3EB2AE0
	411 Compare X22, 0
	412 JumpIfNotEqual {367}
	413 Move X8, 0xEB2000
	414 Move X8, [X8+3256]
	415 Add X0, X31, 48
	416 Move X1, [X8]
	417 Call Enumerator<Object>.Dispose, X0
	418 Move X0, [X27]
	419 Call 0x1C17F10
	420 Move X1, X31
	421 Move X21, X0
	422 Call MemoryStream..ctor, X0
	423 Compare X20, 0
	424 JumpIfEqual {564}
	425 Move X0, X20
	426 Move X1, X21
	427 Move X2, X19
	428 Move X3, X31
	429 Move W4, W31
	430 Move X5, X31
	431 Call BinaryFormatter.Serialize, X0, X1, X2, X3, X4
	432 Compare X21, 0
	433 JumpIfEqual {567}
	434 Move X8, [X21]
	435 Move X1, [X8+960]
	436 Move X9, [X8+952]
	437 Move X0, X21
	438 NotImplemented "Instruction BLR not yet implemented."
	439 Move X8, [X21]
	440 Move X19, X0
	441 Move X9, [X8+488]
	442 Move X1, [X8+496]
	443 Move X0, X21
	444 NotImplemented "Instruction BLR not yet implemented."
	445 Move X8, 0xE8B000
	446 Move X8, [X8+2536]
	447 Move X20, X0
	448 Move X0, [X8]
	449 Move W8, [X0+224]
	450 Compare W8, 0
	451 JumpIfNotEqual {453}
	452 Call 0x1C17DFC
	453 Move X0, X19
	454 Move W1, W31
	455 Move W2, W20
	456 Move X3, X31
	457 Call Convert.ToBase64String, X0, X1, X2
	458 Move X20, X0
	459 Move X19, X31
	460 Move X8, [X21]
	461 Move X10, 0xE82000
	462 NotImplemented "Instruction LDRH not yet implemented."
	463 Move X10, [X10+3584]
	464 Move X1, [X10]
	465 Compare X9, 0
	466 JumpIfEqual {473}
	467 Move X10, [X8+176]
	468 Add X10, X10, 8
	469 NotImplemented "Instruction LDUR not yet implemented."
	470 NotImplemented "Instruction CMP not yet implemented."
	471 Subtract X9, X9, 1
	472 Add X10, X10, 16
	473 Move X0, X21
	474 Move W2, W31
	475 Call 0x1C5D788
	476 NotImplemented "Instruction LDRSW not yet implemented."
	477 Add X8, X8, X9
	478 Add X0, X8, 312
	479 Move X8, [X0]
	480 Move X1, [X0+8]
	481 Move X0, X21
	482 NotImplemented "Instruction BLR not yet implemented."
	483 Compare X19, 0
	484 JumpIfNotEqual {565}
	485 Move X0, X20
	486 Move X20, [X31+160]
	487 Move X19, [X31+168]
	488 Move X22, [X31+144]
	489 Move X21, [X31+152]
	490 Move X24, [X31+128]
	491 Move X23, [X31+136]
	492 Move X26, [X31+112]
	493 Move X25, [X31+120]
	494 Move X28, [X31+96]
	495 Move X27, [X31+104]
	496 Move X29, [X31+80]
	497 Move X30, [X31+88]
	498 Add X31, X31, 176
	499 Return X0
	500 Call 0x1C17F20
	501 Call 0x1C17F20
	502 Move X0, X21
	503 Call 0x1C17F18
	504 Move X0, X23
	505 Call 0x1C17F18
	506 Call 0x1C17F20
	507 Call 0x1C17F20
	508 Move [X31], X1
	509 Move X23, X0
	510 Move X21, X31
	511 Compare X22, 0
	512 JumpIfEqual {557}
	513 Move X8, [X22]
	514 Move X10, 0xE82000
	515 NotImplemented "Instruction LDRH not yet implemented."
	516 Move X10, [X10+3584]
	517 Move X1, [X10]
	518 Compare X9, 0
	519 JumpIfEqual {526}
	520 Move X10, [X8+176]
	521 Add X10, X10, 8
	522 NotImplemented "Instruction LDUR not yet implemented."
	523 NotImplemented "Instruction CMP not yet implemented."
	524 Subtract X9, X9, 1
	525 Add X10, X10, 16
	526 Move X0, X22
	527 Move W2, W31
	528 Call 0x1C5D788
	529 Move [X31], X1
	530 Move X21, X0
	531 Move X23, X31
	532 Compare X22, 0
	533 JumpIfEqual {575}
	534 Move X8, [X22]
	535 Move X10, 0xE82000
	536 NotImplemented "Instruction LDRH not yet implemented."
	537 Move X10, [X10+3584]
	538 Move X1, [X10]
	539 Compare X9, 0
	540 JumpIfEqual {547}
	541 Move X10, [X8+176]
	542 Add X10, X10, 8
	543 NotImplemented "Instruction LDUR not yet implemented."
	544 NotImplemented "Instruction CMP not yet implemented."
	545 Subtract X9, X9, 1
	546 Add X10, X10, 16
	547 Move X0, X22
	548 Move W2, W31
	549 Call 0x1C5D788
	550 NotImplemented "Instruction LDRSW not yet implemented."
	551 Add X8, X8, X9
	552 Add X0, X8, 312
	553 Move X8, [X0]
	554 Move X1, [X0+8]
	555 Move X0, X22
	556 NotImplemented "Instruction BLR not yet implemented."
	557 Move X1, [X31]
	558 Move X0, X23
	559 Compare X21, 0
	560 JumpIfEqual {629}
	561 Move X0, X21
	562 Call 0x1C17F18
	563 Call 0x1C17F20
	564 Call 0x1C17F20
	565 Move X0, X19
	566 Call 0x1C17F18
	567 Call 0x1C17F20
	568 NotImplemented "Instruction LDRSW not yet implemented."
	569 Add X8, X8, X9
	570 Add X0, X8, 312
	571 Move X8, [X0]
	572 Move X1, [X0+8]
	573 Move X0, X22
	574 NotImplemented "Instruction BLR not yet implemented."
	575 Move X1, [X31]
	576 Move X0, X21
	577 Compare X23, 0
	578 JumpIfEqual {629}
	579 Move X0, X23
	580 Call 0x1C17F18
	581 Move X21, X0
	582 Move [X31], X1
	583 Compare X22, 0
	584 JumpIfNotEqual {534}
	585 Move X23, X0
	586 Move [X31], X1
	587 Compare X22, 0
	588 JumpIfNotEqual {513}
	589 Move X20, X0
	590 NotImplemented "Instruction CMP not yet implemented."
	591 Move X0, X20
	592 Call 0x3EB2AD0
	593 Move X19, [X0]
	594 Call 0x3EB2AE0
	595 Move X20, X31
	596 Compare X21, 0
	597 JumpIfNotEqual {460}
	598 Move X19, X31
	599 Move X20, X0
	600 Compare X21, 0
	601 JumpIfEqual {625}
	602 Move X8, [X21]
	603 Move X10, 0xE82000
	604 NotImplemented "Instruction LDRH not yet implemented."
	605 Move X10, [X10+3584]
	606 Move X1, [X10]
	607 Compare X9, 0
	608 JumpIfEqual {615}
	609 Move X10, [X8+176]
	610 Add X10, X10, 8
	611 NotImplemented "Instruction LDUR not yet implemented."
	612 NotImplemented "Instruction CMP not yet implemented."
	613 Subtract X9, X9, 1
	614 Add X10, X10, 16
	615 Move X0, X21
	616 Move W2, W31
	617 Call 0x1C5D788
	618 NotImplemented "Instruction LDRSW not yet implemented."
	619 Add X8, X8, X9
	620 Add X0, X8, 312
	621 Move X8, [X0]
	622 Move X1, [X0+8]
	623 Move X0, X21
	624 NotImplemented "Instruction BLR not yet implemented."
	625 Compare X19, 0
	626 JumpIfEqual {652}
	627 Move X0, X19
	628 Call 0x1C17F18
	629 NotImplemented "Instruction CMP not yet implemented."
	630 Call 0x3EB2AD0
	631 Move X21, [X0]
	632 Call 0x3EB2AE0
	633 Move X8, 0xEB2000
	634 Move X8, [X8+3256]
	635 Add X0, X31, 48
	636 Move X1, [X8]
	637 Call Enumerator<Object>.Dispose, X0
	638 Compare X21, 0
	639 JumpIfEqual {418}
	640 Move X0, X21
	641 Call 0x1C17F18
	642 Move X20, X0
	643 Move X21, X31
	644 Move X20, X0
	645 Move X8, 0xEB2000
	646 Move X8, [X8+3256]
	647 Move X1, [X8]
	648 Add X0, X31, 48
	649 Call Enumerator<Object>.Dispose, X0
	650 Compare X21, 0
	651 JumpIfNotEqual {654}
	652 Move X0, X20
	653 Call 0x1D2D690
	654 Move X0, X21
	655 Call 0x1C17F18
	656 Call 0x1991590

Method: System.Security.Principal.IIdentity get_Identity()

Disassembly:
	0x03273644 LDR W9, [X10]
	0x03273648 ADD W9, W9, 0x1
	0x0327364C ADD X8, X8, W9, 0x4, SXTW
	0x03273650 ADD X0, X8, 0x138
	0x03273654 LDP X8, X4, [X0]
	0x03273658 AND W2, W20, 0x1
	0x0327365C AND W3, W19, 0x1
	0x03273660 MOV X0, X24
	0x03273664 MOV X1, X21
	0x03273668 BLR X8
	0x0327366C B 0x3273514
	0x03273670 MOV X24, X31
	0x03273674 MOV W26, W31
	0x03273678 LDR X1, [X25]
	0x0327367C MOV X0, X23
	0x03273680 BL 0x1C16E00
	0x03273684 CBZ X0, 0x32736E4
	0x03273688 LDR X8, [X0]
	0x0327368C LDR X1, [X25]
	0x03273690 MOV X23, X0
	0x03273694 LDRH W9, [X8 + 0x12E]
	0x03273698 CBZ X9, 0x32736BC
	0x0327369C LDR X10, [X8 + 0xB0]
	0x032736A0 ADD X10, X10, 0x8
	0x032736A4 LDUR X11, [X10 - 0x8]
	0x032736A8 CMP X11, X1
	0x032736AC B.EQ 0x32736CC
	0x032736B0 SUBS X9, X9, 0x1
	0x032736B4 ADD X10, X10, 0x10
	0x032736B8 B.NE 0x32736A4
	0x032736BC MOV X0, X23
	0x032736C0 MOV W2, W31
	0x032736C4 BL 0x1C5C788
	0x032736C8 B 0x32736D8
	0x032736CC LDRSW X9, [X10]
	0x032736D0 ADD X8, X8, X9, 0x4, LSL
	0x032736D4 ADD X0, X8, 0x138
	0x032736D8 LDP X8, X1, [X0]
	0x032736DC MOV X0, X23
	0x032736E0 BLR X8
	0x032736E4 CBNZ X24, 0x3273930
	0x032736E8 CBZ W26, 0x32738F0
	0x032736EC CBZ X22, 0x327391C
	0x032736F0 LDR X8, [X22]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x116A000
	006 Move X20, 0xEB1000
	007 Move W8, [X21+1473]
	008 Move X20, [X20+2600]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xEB1000
	015 Move X0, [X0+2600]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1473], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move X8, [X8]
	027 Compare X8, 0
	028 JumpIfEqual {47}
	029 Move W9, [X0+224]
	030 Compare W9, 0
	031 JumpIfNotEqual {38}
	032 Call 0x1C17DFC
	033 Move X8, [X20]
	034 Move X8, [X8+184]
	035 Move X8, [X8]
	036 Compare X8, 0
	037 JumpIfEqual {59}
	038 Move X1, [X19+32]
	039 Move X3, [X8+24]
	040 Move X0, [X8+64]
	041 Move X2, [X8+40]
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 CallNoReturn X3
	047 Move W8, [X0+224]
	048 Move X19, [X19+32]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X0, X19
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X30, [X31+32]
	056 Move X21, [X31+40]
	057 Call ClaimsPrincipal.SelectPrimaryIdentity, X0
	058 Return X0
	059 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x032736F4 MOV X0, X22
	0x032736F8 LDR X9, [X8 + 0x388]
	0x032736FC LDR X1, [X8 + 0x390]
	0x03273700 BLR X9
	0x03273704 MOV X22, X0
	0x03273708 CBZ X0, 0x3273920
	0x0327370C ADRP X24, 0xE80000
	0x03273710 ADRP X26, 0xEB0000
	0x03273714 ADRP X27, 0xEB0000
	0x03273718 LDR X24, [X24 + 0xE18]
	0x0327371C LDR X26, [X26 + 0xD40]
	0x03273720 LDR X27, [X27 + 0xD48]
	0x03273724 LDR X8, [X22]
	0x03273728 LDR X1, [X24]
	0x0327372C LDRH W9, [X8 + 0x12E]
	0x03273730 CBZ X9, 0x3273754
	0x03273734 LDR X10, [X8 + 0xB0]
	0x03273738 ADD X10, X10, 0x8
	0x0327373C LDUR X11, [X10 - 0x8]
	0x03273740 CMP X11, X1
	0x03273744 B.EQ 0x3273764
	0x03273748 SUBS X9, X9, 0x1
	0x0327374C ADD X10, X10, 0x10
	0x03273750 B.NE 0x327373C
	0x03273754 MOV X0, X22
	0x03273758 MOV W2, W31
	0x0327375C BL 0x1C5C788
	0x03273760 B 0x3273770
	0x03273764 LDRSW X9, [X10]
	0x03273768 ADD X8, X8, X9, 0x4, LSL
	0x0327376C ADD X0, X8, 0x138
	0x03273770 LDP X8, X1, [X0]
	0x03273774 MOV X0, X22
	0x03273778 BLR X8
	0x0327377C TBZ X0, 0x0, 0x327387C
	0x03273780 LDR X8, [X22]
	0x03273784 LDR X1, [X24]
	0x03273788 LDRH W9, [X8 + 0x12E]
	0x0327378C CBZ X9, 0x32737B0
	0x03273790 LDR X10, [X8 + 0xB0]
	0x03273794 ADD X10, X10, 0x8
	0x03273798 LDUR X11, [X10 - 0x8]
	0x0327379C CMP X11, X1
	0x032737A0 B.EQ 0x32737C0
	0x032737A4 SUBS X9, X9, 0x1
	0x032737A8 ADD X10, X10, 0x10
	0x032737AC B.NE 0x3273798
	0x032737B0 MOVZ W2, 0x1
	0x032737B4 MOV X0, X22
	0x032737B8 BL 0x1C5C788
	0x032737BC B 0x32737D0
	0x032737C0 LDR W9, [X10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x116A000
	007 Move X22, 0xEB1000
	008 Move X19, 0xEB1000
	009 Move X20, 0xEB1000
	010 Move W8, [X21+1474]
	011 Move X22, [X22+3320]
	012 Move X19, [X19+3200]
	013 Move X20, [X20+2600]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xEB1000
	019 Move X0, [X0+3200]
	020 Call 0x1C17CF4
	021 Move X0, 0xEB1000
	022 Move X0, [X0+2600]
	023 Call 0x1C17CF4
	024 Move X0, 0xEB1000
	025 Move X0, [X0+3320]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+1474], W8
	029 Move X0, [X22]
	030 Call 0x1C17F10
	031 Move X2, [X19]
	032 Move X1, X31
	033 Move X3, X31
	034 Move X19, X0
	035 Call Func`2<Object, Object>..ctor, X0, X1, X2
	036 Move X8, [X20]
	037 Move X8, [X8+184]
	038 Move [X8], X19
	039 Move X19, 0x116A000
	040 Move W8, [X19+1714]
	041 Compare W8, 0
	042 JumpIfNotEqual {48}
	043 Move X0, 0xEB1000
	044 Move X0, [X0+2600]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X19+1714], W8
	048 Move X0, [X20]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfEqual {58}
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X22, [X31+16]
	055 Move X21, [X31+24]
	056 Move X30, [X31+48]
	057 Return 
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X22, [X31+16]
	061 Move X21, [X31+24]
	062 Move X30, [X31+48]
	063 Call 0x1C17DFC
	064 Return 

