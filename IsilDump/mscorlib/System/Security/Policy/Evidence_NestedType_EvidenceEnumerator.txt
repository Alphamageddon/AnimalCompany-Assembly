Type: System.Security.Policy.Evidence/EvidenceEnumerator

Method: System.Void .ctor(System.Collections.IEnumerator hostenum, System.Collections.IEnumerator assemblyenum)

Disassembly:
	0x0324DA40 STP X20, X19, [X31 + 0x30]
	0x0324DA44 ADRP X23, 0x118F000
	0x0324DA48 LDRB W8, [X23 + 0x4A6]
	0x0324DA4C MOV W19, W3
	0x0324DA50 MOV W20, W2
	0x0324DA54 MOV X21, X1
	0x0324DA58 MOV X22, X0
	0x0324DA5C TBNZ X8, 0x0, 0x324DA80
	0x0324DA60 ADRP X0, 0xED5000
	0x0324DA64 LDR X0, [X0 + 0xDC8]
	0x0324DA68 BL 0x1C16CF4
	0x0324DA6C ADRP X0, 0xED5000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X1
	006 Move X1, X31
	007 Move X19, X2
	008 Move X21, X0
	009 Call Object..ctor, X0
	010 Move [X21+24], X20
	011 Move [X21+32], X19
	012 Move [X21+16], X20
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move X30, [X31+32]
	016 Move X21, [X31+40]
	017 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x0324DA70 LDR X0, [X0 + 0xDD0]
	0x0324DA74 BL 0x1C16CF4
	0x0324DA78 MOVZ W8, 0x1
	0x0324DA7C STRB W8, [X23 + 0x4A6]
	0x0324DA80 MOV X0, X22
	0x0324DA84 MOV X1, X21
	0x0324DA88 MOV W2, W20
	0x0324DA8C MOV W3, W19
	0x0324DA90 BL 0x324D614
	0x0324DA94 MOV X0, X22
	0x0324DA98 MOV X1, X21
	0x0324DA9C MOV W2, W20
	0x0324DAA0 MOV W3, W19
	0x0324DAA4 MOV X4, X31
	0x0324DAA8 MOV W5, W31
	0x0324DAAC BL 0x324DAF4
	0x0324DAB0 CBZ X0, 0x324DAF0
	0x0324DAB4 ADRP X8, 0xED5000
	0x0324DAB8 LDR X8, [X8 + 0xDD0]
	0x0324DABC ADRP X19, 0xED5000
	0x0324DAC0 LDR X1, [X8]
	0x0324DAC4 LDR X19, [X19 + 0xDC8]
	0x0324DAC8 BL 0x269D3A4
	0x0324DACC LDR X1, [X19]
	0x0324DAD0 STR X0, [X31 + 0x8]
	0x0324DAD4 ADD X0, X31, 0x8
	0x0324DAD8 BL 0x26772B8
	0x0324DADC LDP X20, X19, [X31 + 0x30]
	0x0324DAE0 LDP X22, X21, [X31 + 0x20]
	0x0324DAE4 LDP X30, X23, [X31 + 0x10]
	0x0324DAE8 ADD X31, X31, 0x40
	0x0324DAEC RET
	0x0324DAF0 BL 0x1C16F20
	0x0324DAF4 SUB X31, X31, 0xF0
	0x0324DAF8 STR X30, [X31 + 0xA0]
	0x0324DAFC STP X26, X25, [X31 + 0xB0]
	0x0324DB00 STP X24, X23, [X31 + 0xC0]
	0x0324DB04 STP X22, X21, [X31 + 0xD0]
	0x0324DB08 STP X20, X19, [X31 + 0xE0]
	0x0324DB0C ADRP X26, 0x118F000
	0x0324DB10 ADRP X25, 0xED5000
	0x0324DB14 LDRB W8, [X26 + 0x4A7]
	0x0324DB18 LDR X25, [X25 + 0xDA0]
	0x0324DB1C MOV W24, W5
	0x0324DB20 MOV X19, X4
	0x0324DB24 MOV W20, W3
	0x0324DB28 MOV W21, W2
	0x0324DB2C MOV X22, X1
	0x0324DB30 MOV X23, X0
	0x0324DB34 TBNZ X8, 0x0, 0x324DB70
	0x0324DB38 ADRP X0, 0xED5000
	0x0324DB3C LDR X0, [X0 + 0xDA8]
	0x0324DB40 BL 0x1C16CF4
	0x0324DB44 ADRP X0, 0xED5000
	0x0324DB48 LDR X0, [X0 + 0xDD8]
	0x0324DB4C BL 0x1C16CF4
	0x0324DB50 ADRP X0, 0xED5000
	0x0324DB54 LDR X0, [X0 + 0xDB8]
	0x0324DB58 BL 0x1C16CF4
	0x0324DB5C ADRP X0, 0xED5000
	0x0324DB60 LDR X0, [X0 + 0xDA0]
	0x0324DB64 BL 0x1C16CF4
	0x0324DB68 MOVZ W8, 0x1
	0x0324DB6C STRB W8, [X26 + 0x4A7]
	0x0324DB70 LDR X0, [X25]
	0x0324DB74 AND W8, W24, 0x1
	0x0324DB78 MOVI V0.2D, 0x0
	0x0324DB7C STR X31, [X31 + 0x90]
	0x0324DB80 STP V0, V0, [X31 + 0x40]
	0x0324DB84 STP V0, V0, [X31 + 0x70]
	0x0324DB88 STR V0, [X31 + 0x6]
	0x0324DB8C STP V0, V0, [X31 + 0x20]
	0x0324DB90 STP X23, X22, [X31 + 0x48]
	0x0324DB94 STP W20, W21, [X31 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1190000
	006 Move W8, [X20+1181]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xEA7000
	013 Move X0, [X0+3608]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1181], W8
	017 Move X20, [X19+16]
	018 Compare X20, 0
	019 JumpIfEqual {51}
	020 Move X21, 0xEA7000
	021 Move X8, [X20]
	022 Move X21, [X21+3608]
	023 NotImplemented "Instruction LDRH not yet implemented."
	024 Move X1, [X21]
	025 Compare X9, 0
	026 JumpIfEqual {33}
	027 Move X10, [X8+176]
	028 Add X10, X10, 8
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Subtract X9, X9, 1
	032 Add X10, X10, 16
	033 Move X0, X20
	034 Move W2, W31
	035 Call 0x1C5D788
	036 NotImplemented "Instruction LDRSW not yet implemented."
	037 Add X8, X8, X9
	038 Add X0, X8, 312
	039 Move X8, [X0]
	040 Move X1, [X0+8]
	041 Move X0, X20
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {48}
	047 Move W0, 1
	048 Move X9, [X19+16]
	049 Move X8, [X19+24]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move W0, W31
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X30, [X31+32]
	055 Move X21, [X31+40]
	056 Return X0
	057 Move X20, [X19+32]
	058 Compare X20, 0
	059 JumpIfEqual {51}
	060 Move [X19+16], X20
	061 Move X8, [X20]
	062 Move X1, [X21]
	063 NotImplemented "Instruction LDRH not yet implemented."
	064 Compare X9, 0
	065 JumpIfEqual {72}
	066 Move X10, [X8+176]
	067 Add X10, X10, 8
	068 NotImplemented "Instruction LDUR not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Subtract X9, X9, 1
	071 Add X10, X10, 16
	072 Move X0, X20
	073 Move W2, W31
	074 Call 0x1C5D788
	075 NotImplemented "Instruction LDRSW not yet implemented."
	076 Add X8, X8, X9
	077 Add X0, X8, 312
	078 Move X2, [X0]
	079 Move X1, [X0+8]
	080 Move X0, X20
	081 Move X20, [X31+16]
	082 Move X19, [X31+24]
	083 Move X30, [X31+32]
	084 Move X21, [X31+40]
	085 CallNoReturn X2

Method: System.Void Reset()

Disassembly:
	0x0324DB98 STR X19, [X31 + 0x60]
	0x0324DB9C STRB W8, [X31 + 0x58]
	0x0324DBA0 ADRP X21, 0xED5000
	0x0324DBA4 ADRP X19, 0xED5000
	0x0324DBA8 ADRP X20, 0xED5000
	0x0324DBAC LDR W8, [X0 + 0xE0]
	0x0324DBB0 LDR X21, [X21 + 0xDA8]
	0x0324DBB4 LDR X19, [X19 + 0xDD8]
	0x0324DBB8 LDR X20, [X20 + 0xDB8]
	0x0324DBBC CBNZ W8, 0x324DBC4
	0x0324DBC0 BL 0x1C16DFC
	0x0324DBC4 LDR X0, [X21]
	0x0324DBC8 ADD X8, X31, 0x8
	0x0324DBCC BL 0x263005C
	0x0324DBD0 LDUR V0, [X31 + 0x8]
	0x0324DBD4 LDR X9, [X31 + 0x18]
	0x0324DBD8 LDR X2, [X19]
	0x0324DBDC ADD X8, X31, 0x20
	0x0324DBE0 ORR X19, X8, 0xF
	0x0324DBE4 MOVN W10, 0x0
	0x0324DBE8 ADD X1, X31, 0x20
	0x0324DBEC MOV X0, X19
	0x0324DBF0 STUR V0, [X31 + 0x28]
	0x0324DBF4 STR X9, [X31 + 0x38]
	0x0324DBF8 STR W10, [X31 + 0x20]
	0x0324DBFC BL 0x1FAD9D4
	0x0324DC00 LDR X1, [X20]
	0x0324DC04 MOV X0, X19
	0x0324DC08 BL 0x2630070
	0x0324DC0C LDP X20, X19, [X31 + 0xE0]
	0x0324DC10 LDP X22, X21, [X31 + 0xD0]
	0x0324DC14 LDP X24, X23, [X31 + 0xC0]
	0x0324DC18 LDP X26, X25, [X31 + 0xB0]
	0x0324DC1C LDR X30, [X31 + 0xA0]
	0x0324DC20 ADD X31, X31, 0xF0
	0x0324DC24 RET
	0x0324DC28 STP X30, X23, [X31 - 0x30]!
	0x0324DC2C STP X22, X21, [X31 + 0x10]
	0x0324DC30 STP X20, X19, [X31 + 0x20]
	0x0324DC34 MOV X19, X4
	0x0324DC38 MOV W20, W3
	0x0324DC3C MOV W21, W2
	0x0324DC40 MOV X22, X1
	0x0324DC44 MOV X23, X0
	0x0324DC48 BL 0x324DC70
	0x0324DC4C MOV X1, X22
	0x0324DC50 MOV W2, W21
	0x0324DC54 MOV W3, W20
	0x0324DC58 MOV X4, X19
	0x0324DC5C LDP X20, X19, [X31 + 0x20]
	0x0324DC60 LDP X22, X21, [X31 + 0x10]
	0x0324DC64 MOV X0, X23
	0x0324DC68 LDP X30, X23, [X31], #0x30
	0x0324DC6C B 0x324DDA8
	0x0324DC70 STP X30, X21, [X31 - 0x20]!
	0x0324DC74 STP X20, X19, [X31 + 0x10]
	0x0324DC78 LDR X8, [X0]
	0x0324DC7C MOV X21, X1
	0x0324DC80 MOV W19, W3
	0x0324DC84 MOV W20, W2
	0x0324DC88 LDP X9, X8, [X8 + 0x1D8]
	0x0324DC8C MOV X1, X8
	0x0324DC90 BLR X9
	0x0324DC94 TBZ X0, 0x0, 0x324DCC0
	0x0324DC98 TBNZ X20, 0x1F, 0x324DCF4
	0x0324DC9C TBNZ X19, 0x1F, 0x324DD14
	0x0324DCA0 CBZ X21, 0x324DD5C
	0x0324DCA4 LDR W8, [X21 + 0x18]
	0x0324DCA8 SUB W8, W8, W20
	0x0324DCAC CMP W8, W19
	0x0324DCB0 B.LT 0x324DD60
	0x0324DCB4 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1190000
	006 Move W8, [X20+1182]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xEA7000
	013 Move X0, [X0+3608]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1182], W8
	017 Move X21, 0xEA7000
	018 Move X20, [X19+24]
	019 Move X21, [X21+3608]
	020 Compare X20, 0
	021 JumpIfEqual {36}
	022 Move X8, [X20]
	023 Move X1, [X21]
	024 NotImplemented "Instruction LDRH not yet implemented."
	025 Compare X9, 0
	026 JumpIfEqual {33}
	027 Move X10, [X8+176]
	028 Add X10, X10, 8
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Subtract X9, X9, 1
	032 Add X10, X10, 16
	033 Move W2, 2
	034 Move X0, X20
	035 Call 0x1C5D788
	036 Move X20, [X19+32]
	037 Move [X19+16], X20
	038 Compare X20, 0
	039 JumpIfNotEqual {58}
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Return 
	045 Move W9, [X10]
	046 Add W9, W9, 2
	047 Add X8, X8, W9
	048 Add X0, X8, 312
	049 Move X8, [X0]
	050 Move X1, [X0+8]
	051 Move X0, X20
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move X8, [X19+24]
	054 Move X20, [X19+32]
	055 Move [X19+16], X8
	056 Compare X20, 0
	057 JumpIfEqual {40}
	058 Move X8, [X20]
	059 Move X1, [X21]
	060 NotImplemented "Instruction LDRH not yet implemented."
	061 Compare X9, 0
	062 JumpIfEqual {69}
	063 Move X10, [X8+176]
	064 Add X10, X10, 8
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Subtract X9, X9, 1
	068 Add X10, X10, 16
	069 Move W2, 2
	070 Move X0, X20
	071 Call 0x1C5D788
	072 Move W9, [X10]
	073 Add W9, W9, 2
	074 Add X8, X8, W9
	075 Add X0, X8, 312
	076 Move X2, [X0]
	077 Move X1, [X0+8]
	078 Move X0, X20
	079 Move X20, [X31+16]
	080 Move X19, [X31+24]
	081 Move X30, [X31+32]
	082 Move X21, [X31+40]
	083 CallNoReturn X2

Method: System.Object get_Current()

Disassembly:
	0x0324DCB8 LDP X30, X21, [X31], #0x20
	0x0324DCBC RET
	0x0324DCC0 ADRP X0, 0xEA6000
	0x0324DCC4 LDR X0, [X0 + 0xB40]
	0x0324DCC8 BL 0x1C16D08
	0x0324DCCC BL 0x1C16F10
	0x0324DCD0 MOV X19, X0
	0x0324DCD4 ADRP X0, 0xED5000
	0x0324DCD8 LDR X0, [X0 + 0xDE0]
	0x0324DCDC BL 0x1C16D08
	0x0324DCE0 MOV X1, X0
	0x0324DCE4 MOV X0, X19
	0x0324DCE8 MOV X2, X31
	0x0324DCEC BL 0x3379A44
	0x0324DCF0 B 0x324DD90
	0x0324DCF4 ADRP X0, 0xEAE000
	0x0324DCF8 LDR X0, [X0 + 0x760]
	0x0324DCFC BL 0x1C16D08
	0x0324DD00 BL 0x1C16F10
	0x0324DD04 MOV X19, X0
	0x0324DD08 ADRP X0, 0xED5000
	0x0324DD0C LDR X0, [X0 + 0xD90]
	0x0324DD10 B 0x324DD30
	0x0324DD14 ADRP X0, 0xEAE000
	0x0324DD18 LDR X0, [X0 + 0x760]
	0x0324DD1C BL 0x1C16D08
	0x0324DD20 BL 0x1C16F10
	0x0324DD24 MOV X19, X0
	0x0324DD28 ADRP X0, 0xECE000
	0x0324DD2C LDR X0, [X0 + 0x648]
	0x0324DD30 BL 0x1C16D08
	0x0324DD34 MOV X20, X0
	0x0324DD38 ADRP X0, 0xECE000
	0x0324DD3C LDR X0, [X0 + 0x670]
	0x0324DD40 BL 0x1C16D08
	0x0324DD44 MOV X2, X0
	0x0324DD48 MOV X0, X19
	0x0324DD4C MOV X1, X20
	0x0324DD50 MOV X3, X31
	0x0324DD54 BL 0x3311888
	0x0324DD58 B 0x324DD90

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1190000
	005 Move W8, [X20+1183]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xEA7000
	012 Move X0, [X0+3608]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1183], W8
	016 Move X19, [X19+16]
	017 Compare X19, 0
	018 JumpIfEqual {46}
	019 Move X10, 0xEA7000
	020 Move X8, [X19]
	021 Move X10, [X10+3608]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Move X1, [X10]
	024 Compare X9, 0
	025 JumpIfEqual {32}
	026 Move X10, [X8+176]
	027 Add X10, X10, 8
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Subtract X9, X9, 1
	031 Add X10, X10, 16
	032 Move W2, 1
	033 Move X0, X19
	034 Call 0x1C5D788
	035 Move W9, [X10]
	036 Add W9, W9, 1
	037 Add X8, X8, W9
	038 Add X0, X8, 312
	039 Move X2, [X0]
	040 Move X1, [X0+8]
	041 Move X0, X19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 CallNoReturn X2
	046 Call 0x1C17F20

