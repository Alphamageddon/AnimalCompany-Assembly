Type: System.Security.Principal.WindowsIdentity

Method: System.Void .ctor(System.IntPtr userToken, System.String type, System.Security.Principal.WindowsAccountType acctType, System.Boolean isAuthenticated)

Disassembly:
	0x0326DA48 LDR X0, [X0 + 0xCC0]
	0x0326DA4C BL 0x1C16CF4
	0x0326DA50 MOVZ W8, 0x1
	0x0326DA54 STRB W8, [X20 + 0x5A1]
	0x0326DA58 LDR X0, [X21]
	0x0326DA5C BL 0x1C16F10
	0x0326DA60 MOV X1, X31
	0x0326DA64 MOV X20, X0
	0x0326DA68 BL 0x33BDD8C
	0x0326DA6C STR X20, [X19 + 0x48]
	0x0326DA70 LDP X20, X19, [X31 + 0x10]
	0x0326DA74 LDP X30, X21, [X31], #0x20
	0x0326DA78 RET
	0x0326DA7C LDR X0, [X0 + 0x50]
	0x0326DA80 RET
	0x0326DA84 STR X1, [X0 + 0x50]
	0x0326DA88 RET
	0x0326DA8C LDR X0, [X0 + 0x20]
	0x0326DA90 RET
	0x0326DA94 LDR X0, [X0 + 0x28]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, X1
	008 Move X1, X31
	009 Move W19, W3
	010 Move X20, X2
	011 Move X22, X0
	012 And W23, W4, 1
	013 Call ClaimsIdentity..ctor, X0
	014 Move [X22+128], X20
	015 Move [X22+136], W19
	016 Move [X22+140], W23
	017 Move [X22+144], X31
	018 Move X0, X22
	019 Move X1, X21
	020 Move X20, [X31+32]
	021 Move X19, [X31+40]
	022 Move X22, [X31+16]
	023 Move X21, [X31+24]
	024 Move X30, [X31+48]
	025 Move X23, [X31+56]

Method: System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x0326DBD8 STP X4, X5, [X31 + 0x10]
	0x0326DBDC STR X2, [X31 + 0x8]
	0x0326DBE0 ADRP X28, 0x116F000
	0x0326DBE4 ADRP X23, 0xEB6000
	0x0326DBE8 ADRP X26, 0xEB6000
	0x0326DBEC ADRP X22, 0xEB6000
	0x0326DBF0 ADRP X19, 0xEB6000
	0x0326DBF4 ADRP X27, 0xEB6000
	0x0326DBF8 ADRP X29, 0xEB6000
	0x0326DBFC LDR X23, [X23 + 0xB30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call ClaimsIdentity..ctor, X0
	008 Move [X20+152], X19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void .ctor(System.Security.Claims.ClaimsIdentity claimsIdentity, System.IntPtr userToken)

Disassembly:
	0x0326DC00 LDR X26, [X26 + 0xB38]
	0x0326DC04 LDRB W8, [X28 + 0x5A5]
	0x0326DC08 LDR X22, [X22 + 0xB40]
	0x0326DC0C LDR X19, [X19 + 0xB48]
	0x0326DC10 LDR X27, [X27 + 0xB50]
	0x0326DC14 LDR X29, [X29 + 0xB58]
	0x0326DC18 MOV W25, W6
	0x0326DC1C MOV X24, X3
	0x0326DC20 MOV X21, X1
	0x0326DC24 MOV X20, X0
	0x0326DC28 TBNZ X8, 0x0, 0x326DCE8
	0x0326DC2C ADRP X0, 0xEB6000
	0x0326DC30 LDR X0, [X0 + 0xB60]
	0x0326DC34 BL 0x1C16CF4
	0x0326DC38 ADRP X0, 0xE86000
	0x0326DC3C LDR X0, [X0 + 0x618]
	0x0326DC40 BL 0x1C16CF4
	0x0326DC44 ADRP X0, 0xEB6000
	0x0326DC48 LDR X0, [X0 + 0xA08]
	0x0326DC4C BL 0x1C16CF4
	0x0326DC50 ADRP X0, 0xEB6000
	0x0326DC54 LDR X0, [X0 + 0xB68]
	0x0326DC58 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X2
	005 Move [X31+8], X2
	006 Move X2, X31
	007 Move X19, X0
	008 Call ClaimsIdentity..ctor, X0, X1
	009 Move X0, X20
	010 Move X1, X31
	011 Move X2, X31
	012 Call IntPtr.op_Inequality, X0, X1
	013 Move TEMP, X0
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfNotEqual {24}
	017 Add X0, X31, 8
	018 Move X1, X31
	019 Call IntPtr.ToInt64, X0
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X1, [X31+8]
	022 Move X0, X19
	023 Call WindowsIdentity.SetToken, X0, X1
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Return 

Method: System.Void Dispose()

Disassembly:
	0x0326DC5C ADRP X0, 0xEB6000
	0x0326DC60 LDR X0, [X0 + 0xB48]

ISIL:
	001 Move [X0+120], X31
	002 Return 

Method: System.Security.Principal.WindowsIdentity GetCurrent()

Disassembly:
	0x0326DC64 BL 0x1C16CF4
	0x0326DC68 ADRP X0, 0xEB6000
	0x0326DC6C LDR X0, [X0 + 0xB40]
	0x0326DC70 BL 0x1C16CF4
	0x0326DC74 ADRP X0, 0xEB6000
	0x0326DC78 LDR X0, [X0 + 0xB70]
	0x0326DC7C BL 0x1C16CF4
	0x0326DC80 ADRP X0, 0xEB6000
	0x0326DC84 LDR X0, [X0 + 0xB38]
	0x0326DC88 BL 0x1C16CF4
	0x0326DC8C ADRP X0, 0xEB6000
	0x0326DC90 LDR X0, [X0 + 0xB30]
	0x0326DC94 BL 0x1C16CF4
	0x0326DC98 ADRP X0, 0xEB6000
	0x0326DC9C LDR X0, [X0 + 0xA40]
	0x0326DCA0 BL 0x1C16CF4
	0x0326DCA4 ADRP X0, 0xEB6000
	0x0326DCA8 LDR X0, [X0 + 0xB78]
	0x0326DCAC BL 0x1C16CF4
	0x0326DCB0 ADRP X0, 0xEB6000
	0x0326DCB4 LDR X0, [X0 + 0xA10]
	0x0326DCB8 BL 0x1C16CF4
	0x0326DCBC ADRP X0, 0xEB6000
	0x0326DCC0 LDR X0, [X0 + 0xA18]
	0x0326DCC4 BL 0x1C16CF4
	0x0326DCC8 ADRP X0, 0xEB6000
	0x0326DCCC LDR X0, [X0 + 0xB58]
	0x0326DCD0 BL 0x1C16CF4
	0x0326DCD4 ADRP X0, 0xEB6000
	0x0326DCD8 LDR X0, [X0 + 0xB50]
	0x0326DCDC BL 0x1C16CF4
	0x0326DCE0 MOVZ W8, 0x1
	0x0326DCE4 STRB W8, [X28 + 0x5A5]
	0x0326DCE8 LDR X0, [X23]
	0x0326DCEC ADRP X23, 0xEB6000
	0x0326DCF0 LDR X23, [X23 + 0xB70]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1170000
	005 Move X19, 0xEB7000
	006 Move W8, [X20+1431]
	007 Move X19, [X19+2624]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xEB7000
	013 Move X0, [X0+2624]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1431], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Call 0x1C4D018
	023 Move X8, [X19]
	024 Move X19, X0
	025 Move X0, X8
	026 Call 0x1C17F10
	027 Move X1, X31
	028 Move X20, X0
	029 Call ClaimsIdentity..ctor, X0
	030 Move W8, 1
	031 Move X0, X20
	032 Move X1, X19
	033 Move [X20+128], X31
	034 Move [X20+136], W31
	035 Move [X20+140], W8
	036 Move [X20+144], X31
	037 Call WindowsIdentity.SetToken, X0, X1
	038 Move X0, X20
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Return X0

Method: System.Security.Principal.WindowsImpersonationContext Impersonate()

Disassembly:
	0x0326DCF8 LDR X1, [X26]
	0x0326DCFC MOV X26, X0
	0x0326DD00 BL 0x301B7C4
	0x0326DD04 STR X26, [X20 + 0x18]
	0x0326DD08 LDR X0, [X22]
	0x0326DD0C BL 0x1C16F10
	0x0326DD10 LDR X1, [X19]
	0x0326DD14 MOV X26, X0
	0x0326DD18 BL 0x28FB8A8
	0x0326DD1C LDR X8, [X27]
	0x0326DD20 MOV X0, X20
	0x0326DD24 MOV X1, X31
	0x0326DD28 STP X26, X8, [X20 + 0x20]
	0x0326DD2C LDR X8, [X29]
	0x0326DD30 STR X8, [X20 + 0x30]
	0x0326DD34 ADRP X8, 0xEB6000
	0x0326DD38 LDR X8, [X8 + 0xB78]
	0x0326DD3C LDR X8, [X8]
	0x0326DD40 STR X8, [X20 + 0x38]
	0x0326DD44 BL 0x33BDD8C
	0x0326DD48 CBZ X21, 0x326DE90
	0x0326DD4C LDP X22, X19, [X31 + 0x10]
	0x0326DD50 TBZ X25, 0x0, 0x326DE94

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1170000
	006 Move X20, 0xEB7000
	007 Move W8, [X21+1432]
	008 Move X20, [X20+2664]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xEB7000
	015 Move X0, [X0+2664]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1432], W8
	019 Move X0, [X20]
	020 Move X19, [X19+120]
	021 Call 0x1C17F10
	022 Move X1, X19
	023 Move X20, X0
	024 Call WindowsImpersonationContext..ctor, X0, X1
	025 Move X0, X20
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0

Method: System.String get_AuthenticationType()

Disassembly:
	0x0326DDDC ADD X8, X8, W9, 0x4, SXTW
	0x0326DDE0 ADD X0, X8, 0x138

ISIL:
	001 Move X0, [X0+128]
	002 Return X0

Method: System.Boolean get_IsAuthenticated()

Disassembly:
	0x0326DDE4 LDP X8, X1, [X0]
	0x0326DDE8 MOV X0, X21

ISIL:
	001 Move W0, [X0+140]
	002 Return X0

Method: System.String get_Name()

Disassembly:
	0x0326DDEC BLR X8
	0x0326DDF0 MOV X24, X0
	0x0326DDF4 B 0x326DE94
	0x0326DDF8 LDRH W9, [X8 + 0x12E]
	0x0326DDFC LDR X1, [X23]
	0x0326DE00 CBZ X9, 0x326DE24
	0x0326DE04 LDR X10, [X8 + 0xB0]
	0x0326DE08 ADD X10, X10, 0x8
	0x0326DE0C LDUR X11, [X10 - 0x8]
	0x0326DE10 CMP X11, X1
	0x0326DE14 B.EQ 0x326DE34
	0x0326DE18 SUBS X9, X9, 0x1
	0x0326DE1C ADD X10, X10, 0x10
	0x0326DE20 B.NE 0x326DE0C
	0x0326DE24 MOVZ W2, 0x1
	0x0326DE28 MOV X0, X21
	0x0326DE2C BL 0x1C5C788
	0x0326DE30 B 0x326DE44
	0x0326DE34 LDR W9, [X10]
	0x0326DE38 ADD W9, W9, 0x1
	0x0326DE3C ADD X8, X8, W9, 0x4, SXTW
	0x0326DE40 ADD X0, X8, 0x138
	0x0326DE44 LDP X8, X1, [X0]
	0x0326DE48 MOV X0, X21
	0x0326DE4C BLR X8
	0x0326DE50 B 0x326DDF0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1170000
	005 Move W8, [X20+1433]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xEB7000
	012 Move X0, [X0+2624]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1433], W8
	016 Move X0, [X19+144]
	017 Compare X0, 0
	018 JumpIfNotEqual {30}
	019 Move X8, 0xEB7000
	020 Move X8, [X8+2624]
	021 Move X20, [X19+120]
	022 Move X0, [X8]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X20
	028 Call 0x1C4E130
	029 Move [X19+144], X0
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Return X0

Method: System.Void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object sender)

Disassembly:
	0x0326DE58 MOV X24, X0
	0x0326DE5C B.NE 0x326E1F8
	0x0326DE60 MOV X0, X24
	0x0326DE64 BL 0x3EB1AD0
	0x0326DE68 MOV X24, X0
	0x0326DE6C ADRP X0, 0xEB4000
	0x0326DE70 LDR X0, [X0 + 0x7B8]
	0x0326DE74 BL 0x1C16D08
	0x0326DE78 LDR X8, [X24]
	0x0326DE7C LDR X1, [X8]
	0x0326DE80 BL 0x1C17270
	0x0326DE84 TBZ X0, 0x0, 0x326E1D0
	0x0326DE88 BL 0x3EB1AE0
	0x0326DE8C MOV X24, X31
	0x0326DE90 LDP X22, X19, [X31 + 0x10]
	0x0326DE94 MOV X0, X22
	0x0326DE98 MOV X1, X31
	0x0326DE9C STR X24, [X20 + 0x48]
	0x0326DEA0 BL 0x32277A8
	0x0326DEA4 MOV W24, W0
	0x0326DEA8 TBNZ X0, 0x0, 0x326DEB0
	0x0326DEAC STR X22, [X20 + 0x28]
	0x0326DEB0 MOV X0, X19
	0x0326DEB4 MOV X1, X31
	0x0326DEB8 BL 0x32277A8
	0x0326DEBC TBNZ X0, 0x0, 0x326DEC4
	0x0326DEC0 STR X19, [X20 + 0x30]
	0x0326DEC4 CBZ X21, 0x326E100
	0x0326DEC8 ADRP X9, 0xEB6000
	0x0326DECC LDR X9, [X9 + 0xB68]
	0x0326DED0 LDR X8, [X21]
	0x0326DED4 LDR X9, [X9]
	0x0326DED8 LDRB W11, [X8 + 0x130]
	0x0326DEDC LDRB W10, [X9 + 0x130]
	0x0326DEE0 CMP W11, W10
	0x0326DEE4 B.CC 0x326DEFC
	0x0326DEE8 LDR X11, [X8 + 0xC8]
	0x0326DEEC ADD X10, X11, X10, 0x3, LSL
	0x0326DEF0 LDUR X10, [X10 - 0x8]
	0x0326DEF4 CMP X10, X9
	0x0326DEF8 B.EQ 0x326DFA0
	0x0326DEFC LDRH W9, [X8 + 0x12E]
	0x0326DF00 LDR X1, [X23]
	0x0326DF04 CBZ X9, 0x326DF28
	0x0326DF08 LDR X10, [X8 + 0xB0]
	0x0326DF0C ADD X10, X10, 0x8
	0x0326DF10 LDUR X11, [X10 - 0x8]
	0x0326DF14 CMP X11, X1
	0x0326DF18 B.EQ 0x326DF38
	0x0326DF1C SUBS X9, X9, 0x1
	0x0326DF20 ADD X10, X10, 0x10
	0x0326DF24 B.NE 0x326DF10
	0x0326DF28 MOV X0, X21
	0x0326DF2C MOV W2, W31
	0x0326DF30 BL 0x1C5C788
	0x0326DF34 B 0x326DF44
	0x0326DF38 LDRSW X9, [X10]
	0x0326DF3C ADD X8, X8, X9, 0x4, LSL
	0x0326DF40 ADD X0, X8, 0x138
	0x0326DF44 LDP X8, X1, [X0]
	0x0326DF48 MOV X0, X21
	0x0326DF4C BLR X8
	0x0326DF50 MOV X1, X31
	0x0326DF54 BL 0x32277A8
	0x0326DF58 TBNZ X0, 0x0, 0x326E100
	0x0326DF5C LDR X8, [X21]
	0x0326DF60 LDR X22, [X20 + 0x28]
	0x0326DF64 LDR X1, [X23]
	0x0326DF68 LDRH W9, [X8 + 0x12E]
	0x0326DF6C CBZ X9, 0x326DF90
	0x0326DF70 LDR X10, [X8 + 0xB0]
	0x0326DF74 ADD X10, X10, 0x8
	0x0326DF78 LDUR X11, [X10 - 0x8]
	0x0326DF7C CMP X11, X1
	0x0326DF80 B.EQ 0x326E090
	0x0326DF84 SUBS X9, X9, 0x1
	0x0326DF88 ADD X10, X10, 0x10
	0x0326DF8C B.NE 0x326DF78
	0x0326DF90 MOV X0, X21
	0x0326DF94 MOV W2, W31
	0x0326DF98 BL 0x1C5C788
	0x0326DF9C B 0x326E09C
	0x0326DFA0 LDR X8, [X21 + 0x58]
	0x0326DFA4 STR X8, [X20 + 0x58]
	0x0326DFA8 TBZ X24, 0x0, 0x326DFB4
	0x0326DFAC LDR X8, [X21 + 0x28]
	0x0326DFB0 STR X8, [X20 + 0x28]
	0x0326DFB4 TBZ X0, 0x0, 0x326DFC0
	0x0326DFB8 LDR X8, [X21 + 0x30]
	0x0326DFBC STR X8, [X20 + 0x30]
	0x0326DFC0 LDR X8, [X21 + 0x50]
	0x0326DFC4 STR X8, [X20 + 0x50]
	0x0326DFC8 LDR X0, [X21 + 0x40]
	0x0326DFCC CBZ X0, 0x326E018
	0x0326DFD0 CMP X0, X20
	0x0326DFD4 B.EQ 0x326E180
	0x0326DFD8 MOV X8, X0
	0x0326DFDC LDR X8, [X8 + 0x40]
	0x0326DFE0 CBZ X8, 0x326DFEC
	0x0326DFE4 CMP X8, X20
	0x0326DFE8 B.NE 0x326DFDC
	0x0326DFEC CBNZ X8, 0x326E180
	0x0326DFF0 ADRP X8, 0xEB6000
	0x0326DFF4 LDR X8, [X8 + 0xB60]
	0x0326DFF8 LDR X8, [X8]
	0x0326DFFC LDR X8, [X8 + 0xB8]
	0x0326E000 LDRB W8, [X8]
	0x0326E004 CBNZ W8, 0x326E014
	0x0326E008 LDR X8, [X0]
	0x0326E00C LDP X9, X1, [X8 + 0x1E8]
	0x0326E010 BLR X9
	0x0326E014 STR X0, [X20 + 0x40]
	0x0326E018 ADRP X9, 0xEB5000
	0x0326E01C LDR X9, [X9 + 0xA40]
	0x0326E020 LDR X8, [X21]
	0x0326E024 LDR X9, [X9]
	0x0326E028 LDRB W11, [X8 + 0x130]
	0x0326E02C LDRB W10, [X9 + 0x130]
	0x0326E030 CMP W11, W10
	0x0326E034 B.CC 0x326E04C
	0x0326E038 LDR X12, [X8 + 0xC8]
	0x0326E03C SUB X11, X10, 0x1
	0x0326E040 LDR X12, [X12, X11, LSL #3]
	0x0326E044 CMP X12, X9
	0x0326E048 B.EQ 0x326E14C
	0x0326E04C LDR X1, [X21 + 0x18]
	0x0326E050 MOV X0, X20
	0x0326E054 BL 0x326E240
	0x0326E058 LDR X0, [X21 + 0x10]
	0x0326E05C CBZ X0, 0x326E100
	0x0326E060 MOV X1, X31
	0x0326E064 BL 0x33A01F0
	0x0326E068 ADRP X19, 0xE85000
	0x0326E06C LDR X19, [X19 + 0x618]
	0x0326E070 MOV X21, X0
	0x0326E074 LDR X1, [X19]
	0x0326E078 BL 0x1C16E00
	0x0326E07C STR X0, [X20 + 0x10]
	0x0326E080 LDR X1, [X19]
	0x0326E084 MOV X0, X21
	0x0326E088 BL 0x1C16E00
	0x0326E08C B 0x326E100
	0x0326E090 LDRSW X9, [X10]
	0x0326E094 ADD X8, X8, X9, 0x4, LSL
	0x0326E098 ADD X0, X8, 0x138
	0x0326E09C LDP X8, X1, [X0]
	0x0326E0A0 MOV X0, X21
	0x0326E0A4 BLR X8
	0x0326E0A8 ADRP X8, 0xEB5000
	0x0326E0AC LDR X8, [X8 + 0xA08]
	0x0326E0B0 MOV X21, X0
	0x0326E0B4 LDR X8, [X8]
	0x0326E0B8 MOV X0, X8
	0x0326E0BC BL 0x1C16F10
	0x0326E0C0 ADRP X8, 0xEB5000
	0x0326E0C4 ADRP X9, 0xEB5000
	0x0326E0C8 LDR X8, [X8 + 0xA18]
	0x0326E0CC LDR X9, [X9 + 0xA10]
	0x0326E0D0 MOV X1, X22
	0x0326E0D4 MOV X2, X21
	0x0326E0D8 LDR X3, [X8]
	0x0326E0DC LDR X4, [X9]
	0x0326E0E0 MOV X6, X20
	0x0326E0E4 MOV X7, X31
	0x0326E0E8 MOV X23, X0
	0x0326E0EC MOV X5, X4
	0x0326E0F0 BL 0x326C8E0
	0x0326E0F4 MOV X0, X20
	0x0326E0F8 MOV X1, X23
	0x0326E0FC BL 0x326E628
	0x0326E100 LDR X1, [X31 + 0x8]
	0x0326E104 CBZ X1, 0x326E12C
	0x0326E108 MOV X0, X20
	0x0326E10C LDP X20, X19, [X31 + 0x70]
	0x0326E110 LDP X22, X21, [X31 + 0x60]
	0x0326E114 LDP X24, X23, [X31 + 0x50]
	0x0326E118 LDP X26, X25, [X31 + 0x40]
	0x0326E11C LDP X28, X27, [X31 + 0x30]
	0x0326E120 LDP X29, X30, [X31 + 0x20]
	0x0326E124 ADD X31, X31, 0x80

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x1170000
	007 Move X21, 0xEB0000
	008 Move X22, 0xE87000
	009 Move W8, [X20+1434]
	010 Move X21, [X21+3864]
	011 Move X22, [X22+1728]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {52}
	017 Move X0, 0xEB0000
	018 Move X0, [X0+3864]
	019 Call 0x1C17CF4
	020 Move X0, 0xEB0000
	021 Move X0, [X0+3872]
	022 Call 0x1C17CF4
	023 Move X0, 0xE87000
	024 Move X0, [X0+1728]
	025 Call 0x1C17CF4
	026 Move X0, 0xEB7000
	027 Move X0, [X0+2688]
	028 Call 0x1C17CF4
	029 Move X0, 0xEB7000
	030 Move X0, [X0+2696]
	031 Call 0x1C17CF4
	032 Move X0, 0xEB7000
	033 Move X0, [X0+2624]
	034 Call 0x1C17CF4
	035 Move X0, 0xEB7000
	036 Move X0, [X0+2704]
	037 Call 0x1C17CF4
	038 Move X0, 0xEB7000
	039 Move X0, [X0+2712]
	040 Call 0x1C17CF4
	041 Move X0, 0xEB7000
	042 Move X0, [X0+2720]
	043 Call 0x1C17CF4
	044 Move X0, 0xEB7000
	045 Move X0, [X0+2728]
	046 Call 0x1C17CF4
	047 Move X0, 0xEB7000
	048 Move X0, [X0+2736]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X20+1434], W8
	052 Move X0, [X22]
	053 Move X20, [X19+152]
	054 Move X21, [X21]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move X0, X21
	060 Move X1, X31
	061 Call Type.GetTypeFromHandle, X0
	062 Compare X20, 0
	063 JumpIfEqual {180}
	064 Move X8, 0xEB7000
	065 Move X8, [X8+2704]
	066 Move X2, X0
	067 Move X0, X20
	068 Move X3, X31
	069 Move X1, [X8]
	070 Call SerializationInfo.GetValue, X0, X1, X2
	071 Compare X0, 0
	072 JumpIfEqual {180}
	073 Move X8, 0xEB0000
	074 Move X8, [X8+3872]
	075 Move X9, [X0]
	076 Move X1, [X8]
	077 Move X8, [X9+64]
	078 Move X9, [X1+64]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Call 0x1C17E08
	081 Move X8, [X0]
	082 Move X0, [X19+152]
	083 Move [X19+120], X8
	084 Compare X0, 0
	085 JumpIfEqual {180}
	086 Move X8, 0xEB7000
	087 Move X8, [X8+2712]
	088 Move X21, 0xEB7000
	089 Move X2, X31
	090 Move X1, [X8]
	091 Move X21, [X21+2624]
	092 Call SerializationInfo.GetString, X0, X1
	093 Move [X19+144], X0
	094 Move X20, X0
	095 Move X0, [X21]
	096 Move X21, [X19+120]
	097 Move W8, [X0+224]
	098 Compare W8, 0
	099 JumpIfNotEqual {101}
	100 Call 0x1C17DFC
	101 Move X0, X21
	102 Call 0x1C4E130
	103 Compare X20, 0
	104 JumpIfEqual {119}
	105 Move X1, [X19+144]
	106 Move X2, X31
	107 Call String.op_Inequality, X0, X1
	108 Move TEMP, X0
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfNotEqual {122}
	112 Move X0, 0xEB1000
	113 Move X0, [X0+736]
	114 Call 0x1C17D08
	115 Call 0x1C17F10
	116 Move X19, X0
	117 Move X0, 0xEB7000
	118 Move X0, [X0+2744]
	119 Move [X19+144], X0
	120 Compare X0, 0
	121 JumpIfEqual {182}
	122 Move X0, [X19+152]
	123 Compare X0, 0
	124 JumpIfEqual {180}
	125 Move X8, 0xEB6000
	126 Move X8, [X8+2728]
	127 Move X21, 0xEB6000
	128 Move X2, X31
	129 Move X1, [X8]
	130 Move X21, [X21+2688]
	131 Call SerializationInfo.GetString, X0, X1
	132 Move [X19+128], X0
	133 Move X0, [X22]
	134 Move X20, [X19+152]
	135 Move X21, [X21]
	136 Move W8, [X0+224]
	137 Compare W8, 0
	138 JumpIfNotEqual {140}
	139 Call 0x1C17DFC
	140 Move X0, X21
	141 Move X1, X31
	142 Call Type.GetTypeFromHandle, X0
	143 Compare X20, 0
	144 JumpIfEqual {180}
	145 Move X8, 0xEB6000
	146 Move X8, [X8+2720]
	147 Move X2, X0
	148 Move X0, X20
	149 Move X3, X31
	150 Move X1, [X8]
	151 Call SerializationInfo.GetValue, X0, X1, X2
	152 Compare X0, 0
	153 JumpIfEqual {180}
	154 Move X8, 0xEB6000
	155 Move X8, [X8+2696]
	156 Move X9, [X0]
	157 Move X1, [X8]
	158 Move X8, [X9+64]
	159 Move X9, [X1+64]
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Call 0x1C17E08
	162 Move W8, [X0]
	163 Move X0, [X19+152]
	164 Move [X19+136], W8
	165 Compare X0, 0
	166 JumpIfEqual {180}
	167 Move X8, 0xEB6000
	168 Move X8, [X8+2736]
	169 Move X2, X31
	170 Move X1, [X8]
	171 Call SerializationInfo.GetBoolean, X0, X1
	172 And W8, W0, 1
	173 Move [X19+140], W8
	174 Move X20, [X31+32]
	175 Move X19, [X31+40]
	176 Move X22, [X31+16]
	177 Move X21, [X31+24]
	178 Move X30, [X31+48]
	179 Return 
	180 Call 0x1C17F20
	181 Call 0x1C181E0
	182 Move X0, 0xEB0000
	183 Move X0, [X0+736]
	184 Call 0x1C17D08
	185 Call 0x1C17F10
	186 Move X19, X0
	187 Move X0, 0xEB6000
	188 Move X0, [X0+2752]
	189 Call 0x1C17D08
	190 Move X1, X0
	191 Move X0, X19
	192 Move X2, X31
	193 Call SerializationException..ctor, X0, X1
	194 Move X0, 0xEB6000
	195 Move X0, [X0+2760]
	196 Call 0x1C17D08
	197 Move X1, X0
	198 Move X0, X19
	199 Call 0x1C17DEC

Method: System.Void System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x0326E128 B 0x326E240
	0x0326E12C LDP X20, X19, [X31 + 0x70]
	0x0326E130 LDP X22, X21, [X31 + 0x60]
	0x0326E134 LDP X24, X23, [X31 + 0x50]
	0x0326E138 LDP X26, X25, [X31 + 0x40]
	0x0326E13C LDP X28, X27, [X31 + 0x30]
	0x0326E140 LDP X29, X30, [X31 + 0x20]
	0x0326E144 ADD X31, X31, 0x80
	0x0326E148 RET
	0x0326E14C LDR X12, [X20]
	0x0326E150 LDRB W13, [X12 + 0x130]
	0x0326E154 CMP W13, W10
	0x0326E158 B.CC 0x326E16C
	0x0326E15C LDR X10, [X12 + 0xC8]
	0x0326E160 LDR X10, [X10, X11, LSL #3]
	0x0326E164 CMP X10, X9
	0x0326E168 B.EQ 0x326E04C
	0x0326E16C LDP X9, X1, [X8 + 0x1C8]
	0x0326E170 MOV X0, X21
	0x0326E174 BLR X9
	0x0326E178 MOV X1, X0
	0x0326E17C B 0x326E050
	0x0326E180 ADRP X0, 0xEB5000
	0x0326E184 LDR X0, [X0 + 0xB80]
	0x0326E188 BL 0x1C16D08
	0x0326E18C MOV X1, X31
	0x0326E190 BL 0x33BDD84
	0x0326E194 MOV X19, X0
	0x0326E198 ADRP X0, 0xE85000
	0x0326E19C LDR X0, [X0 + 0x5B0]
	0x0326E1A0 BL 0x1C16D08
	0x0326E1A4 BL 0x1C16F10
	0x0326E1A8 MOV X1, X19
	0x0326E1AC MOV X2, X31
	0x0326E1B0 MOV X20, X0
	0x0326E1B4 BL 0x337DF1C
	0x0326E1B8 ADRP X0, 0xEB5000
	0x0326E1BC LDR X0, [X0 + 0xB88]
	0x0326E1C0 BL 0x1C16D08
	0x0326E1C4 MOV X1, X0
	0x0326E1C8 MOV X0, X20
	0x0326E1CC BL 0x1C16DEC
	0x0326E1D0 MOVZ W0, 0x8
	0x0326E1D4 BL 0x3EB1AF0
	0x0326E1D8 LDR X8, [X24]
	0x0326E1DC STR X8, [X0]
	0x0326E1E0 ADRP X1, 0xC46000
	0x0326E1E4 ADD X1, X1, 0xE58
	0x0326E1E8 MOV X2, X31
	0x0326E1EC BL 0x3EB1B00
	0x0326E1F0 MOV X24, X0
	0x0326E1F4 BL 0x3EB1AE0
	0x0326E1F8 MOV X0, X24
	0x0326E1FC BL 0x1D2C690
	0x0326E200 BL 0x1990590
	0x0326E204 STR X30, [X31 - 0x10]!
	0x0326E208 CMP X0, X1
	0x0326E20C B.EQ 0x326E230
	0x0326E210 CBZ X1, 0x326E23C
	0x0326E214 LDR X1, [X1 + 0x40]
	0x0326E218 CBZ X1, 0x326E224
	0x0326E21C CMP X1, X0
	0x0326E220 B.NE 0x326E210
	0x0326E224 CMP X1, 0x0
	0x0326E228 CSET W0, NE
	0x0326E22C B 0x326E234
	0x0326E230 MOVZ W0, 0x1
	0x0326E234 LDR X30, [X31], #0x10
	0x0326E238 RET
	0x0326E23C BL 0x1C16F20
	0x0326E240 SUB X31, X31, 0x50
	0x0326E244 STP X30, X25, [X31 + 0x10]
	0x0326E248 STP X24, X23, [X31 + 0x20]
	0x0326E24C STP X22, X21, [X31 + 0x30]
	0x0326E250 STP X20, X19, [X31 + 0x40]
	0x0326E254 ADRP X21, 0x116E000
	0x0326E258 LDRB W8, [X21 + 0x5AB]
	0x0326E25C MOV X19, X1
	0x0326E260 MOV X20, X0
	0x0326E264 TBNZ X8, 0x0, 0x326E2AC
	0x0326E268 ADRP X0, 0xE85000
	0x0326E26C LDR X0, [X0 + 0xE00]
	0x0326E270 BL 0x1C16CF4
	0x0326E274 ADRP X0, 0xEB5000
	0x0326E278 LDR X0, [X0 + 0xB90]
	0x0326E27C BL 0x1C16CF4
	0x0326E280 ADRP X0, 0xEB5000
	0x0326E284 LDR X0, [X0 + 0xB98]
	0x0326E288 BL 0x1C16CF4
	0x0326E28C ADRP X0, 0xE85000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x116F000
	011 Move X21, 0xEAF000
	012 Move W8, [X22+1435]
	013 Move X21, [X21+3872]
	014 Move X19, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {43}
	020 Move X0, 0xEAF000
	021 Move X0, [X0+3872]
	022 Call 0x1C17CF4
	023 Move X0, 0xEB6000
	024 Move X0, [X0+2696]
	025 Call 0x1C17CF4
	026 Move X0, 0xEB6000
	027 Move X0, [X0+2704]
	028 Call 0x1C17CF4
	029 Move X0, 0xEB6000
	030 Move X0, [X0+2712]
	031 Call 0x1C17CF4
	032 Move X0, 0xEB6000
	033 Move X0, [X0+2720]
	034 Call 0x1C17CF4
	035 Move X0, 0xEB6000
	036 Move X0, [X0+2728]
	037 Call 0x1C17CF4
	038 Move X0, 0xEB6000
	039 Move X0, [X0+2736]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X22+1435], W8
	043 Move X8, [X20+120]
	044 Move X0, [X21]
	045 Add X1, X31, 8
	046 Move [X31+8], X8
	047 Call 0x1C17E04
	048 Compare X19, 0
	049 JumpIfEqual {102}
	050 Move X8, 0xEB6000
	051 Move X8, [X8+2704]
	052 Move X21, 0xEB6000
	053 Move X22, 0xEB6000
	054 Move X21, [X21+2712]
	055 Move X22, [X22+2728]
	056 Move X1, [X8]
	057 Move X23, 0xEB6000
	058 Move X24, 0xEB6000
	059 Move X25, 0xEB6000
	060 Move X23, [X23+2696]
	061 Move X24, [X24+2720]
	062 Move X25, [X25+2736]
	063 Move X2, X0
	064 Move X0, X19
	065 Move X3, X31
	066 Call SerializationInfo.AddValue, X0, X1, X2
	067 Move X2, [X20+144]
	068 Move X1, [X21]
	069 Move X0, X19
	070 Move X3, X31
	071 Call SerializationInfo.AddValue, X0, X1, X2
	072 Move X2, [X20+128]
	073 Move X1, [X22]
	074 Move X0, X19
	075 Move X3, X31
	076 Call SerializationInfo.AddValue, X0, X1, X2
	077 Move W8, [X20+136]
	078 Move X0, [X23]
	079 Add X1, X31, 4
	080 Move [X31+4], W8
	081 Call 0x1C17E04
	082 Move X1, [X24]
	083 Move X2, X0
	084 Move X0, X19
	085 Move X3, X31
	086 Call SerializationInfo.AddValue, X0, X1, X2
	087 Move W2, [X20+140]
	088 Move X1, [X25]
	089 Move X0, X19
	090 Move X3, X31
	091 Call SerializationInfo.AddValue, X0, X1, X2
	092 Move X20, [X31+64]
	093 Move X19, [X31+72]
	094 Move X22, [X31+48]
	095 Move X21, [X31+56]
	096 Move X24, [X31+32]
	097 Move X23, [X31+40]
	098 Move X30, [X31+16]
	099 Move X25, [X31+24]
	100 Add X31, X31, 80
	101 Return 
	102 Call 0x1C17F20

Method: System.Security.Claims.ClaimsIdentity CloneAsBase()

Disassembly:
	0x0326E290 LDR X0, [X0 + 0xE18]
	0x0326E294 BL 0x1C16CF4

ISIL:
	001 Move X1, X31
	002 Call ClaimsIdentity.Clone, X0
	003 Return X0

Method: System.IntPtr GetTokenInternal()

Disassembly:
	0x0326E298 ADRP X0, 0xEB5000
	0x0326E29C LDR X0, [X0 + 0xBA0]

ISIL:
	001 Move X0, [X0+120]
	002 Return X0

Method: System.Void SetToken(System.IntPtr token)

Disassembly:
	0x0326DA98 RET
	0x0326DA9C STR X30, [X31 - 0x30]!
	0x0326DAA0 STP X22, X21, [X31 + 0x10]
	0x0326DAA4 STP X20, X19, [X31 + 0x20]
	0x0326DAA8 ADRP X21, 0x116F000
	0x0326DAAC ADRP X22, 0xEB6000
	0x0326DAB0 LDRB W8, [X21 + 0x5A3]
	0x0326DAB4 LDR X22, [X22 + 0xA08]
	0x0326DAB8 MOV X19, X1
	0x0326DABC MOV X20, X0
	0x0326DAC0 TBNZ X8, 0x0, 0x326DAD8
	0x0326DAC4 ADRP X0, 0xEB6000
	0x0326DAC8 LDR X0, [X0 + 0xA08]
	0x0326DACC BL 0x1C16CF4
	0x0326DAD0 MOVZ W8, 0x1
	0x0326DAD4 STRB W8, [X21 + 0x5A3]
	0x0326DAD8 LDR X0, [X22]
	0x0326DADC BL 0x1C16F10
	0x0326DAE0 MOV X1, X20
	0x0326DAE4 MOV X2, X19
	0x0326DAE8 MOV X21, X0
	0x0326DAEC BL 0x326D72C
	0x0326DAF0 MOV X0, X21
	0x0326DAF4 LDP X20, X19, [X31 + 0x20]
	0x0326DAF8 LDP X22, X21, [X31 + 0x10]
	0x0326DAFC LDR X30, [X31], #0x30
	0x0326DB00 RET
	0x0326DB04 STP X30, X21, [X31 - 0x20]!
	0x0326DB08 STP X20, X19, [X31 + 0x10]
	0x0326DB0C ADRP X21, 0x116F000
	0x0326DB10 ADRP X20, 0xE88000
	0x0326DB14 LDRB W8, [X21 + 0x5A4]
	0x0326DB18 LDR X20, [X20 + 0xC48]
	0x0326DB1C MOV X19, X0
	0x0326DB20 TBNZ X8, 0x0, 0x326DB44
	0x0326DB24 ADRP X0, 0xE88000
	0x0326DB28 LDR X0, [X0 + 0xC48]
	0x0326DB2C BL 0x1C16CF4
	0x0326DB30 ADRP X0, 0xEB6000
	0x0326DB34 LDR X0, [X0 + 0xB28]
	0x0326DB38 BL 0x1C16CF4
	0x0326DB3C MOVZ W8, 0x1
	0x0326DB40 STRB W8, [X21 + 0x5A4]
	0x0326DB44 LDR X0, [X20]
	0x0326DB48 ADRP X20, 0xEB6000
	0x0326DB4C LDR W8, [X0 + 0xE0]
	0x0326DB50 LDR X20, [X20 + 0xB28]
	0x0326DB54 CBNZ W8, 0x326DB5C
	0x0326DB58 BL 0x1C16DFC
	0x0326DB5C MOV X0, X31
	0x0326DB60 BL 0x3338524
	0x0326DB64 LDP X2, X3, [X19 + 0x20]
	0x0326DB68 LDR X1, [X20]
	0x0326DB6C LDP X20, X19, [X31 + 0x10]
	0x0326DB70 MOV X4, X31
	0x0326DB74 LDP X30, X21, [X31], #0x20
	0x0326DB78 B 0x3227D58
	0x0326DB7C MOVZ W6, 0x1
	0x0326DB80 MOV X1, X31
	0x0326DB84 MOV X2, X31
	0x0326DB88 MOV X3, X31
	0x0326DB8C MOV X4, X31
	0x0326DB90 MOV X5, X31
	0x0326DB94 B 0x326DBBC
	0x0326DB98 MOV X2, X1
	0x0326DB9C MOVZ W6, 0x1
	0x0326DBA0 MOV X1, X31
	0x0326DBA4 MOV X3, X31
	0x0326DBA8 MOV X4, X31
	0x0326DBAC MOV X5, X31
	0x0326DBB0 B 0x326DBBC
	0x0326DBB4 MOVZ W6, 0x1
	0x0326DBB8 B 0x326DBBC
	0x0326DBBC SUB X31, X31, 0x80
	0x0326DBC0 STP X29, X30, [X31 + 0x20]
	0x0326DBC4 STP X28, X27, [X31 + 0x30]
	0x0326DBC8 STP X26, X25, [X31 + 0x40]
	0x0326DBCC STP X24, X23, [X31 + 0x50]
	0x0326DBD0 STP X22, X21, [X31 + 0x60]
	0x0326DBD4 STP X20, X19, [X31 + 0x70]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1170000
	006 Move W8, [X21+1436]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0xEB7000
	014 Move X0, [X0+2624]
	015 Call 0x1C17CF4
	016 Move X0, 0xEB7000
	017 Move X0, [X0+2632]
	018 Call 0x1C17CF4
	019 Move X0, 0xEB7000
	020 Move X0, [X0+2640]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+1436], W8
	024 Move X0, X31
	025 Call Environment.get_IsUnix
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {48}
	030 Move X8, [X19+128]
	031 Move [X19+120], X20
	032 Compare X8, 0
	033 JumpIfNotEqual {38}
	034 Move X8, 0xEB7000
	035 Move X8, [X8+2632]
	036 Move X8, [X8]
	037 Move [X19+128], X8
	038 Move X0, X20
	039 Move X1, X31
	040 Move X2, X31
	041 Call IntPtr.op_Equality, X0, X1
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {75}
	046 Move W8, 2
	047 Move [X19+136], W8
	048 Move X21, 0xEB7000
	049 Move X21, [X21+2624]
	050 Move X0, [X21]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {56}
	054 Call 0x1C17DFC
	055 Move X0, [X21]
	056 Move X8, [X0+184]
	057 Move X0, X20
	058 Move X2, X31
	059 Move X1, [X8]
	060 Call IntPtr.op_Equality, X0, X1
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {67}
	065 Move W8, [X19+136]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X8, [X19+128]
	068 Move [X19+120], X20
	069 Compare X8, 0
	070 JumpIfNotEqual {75}
	071 Move X8, 0xEB7000
	072 Move X8, [X8+2640]
	073 Move X8, [X8]
	074 Move [X19+128], X8
	075 Move X20, [X31+16]
	076 Move X19, [X31+24]
	077 Move X30, [X31+32]
	078 Move X21, [X31+40]
	079 Return 
	080 Move X0, 0xE8F000
	081 Move X0, [X0+1400]
	082 Call 0x1C17D08
	083 Call 0x1C17F10
	084 Move X19, X0
	085 Move X0, 0xEB7000
	086 Move X0, [X0+2648]
	087 Call 0x1C17D08
	088 Move X1, X0
	089 Move X0, X19
	090 Move X2, X31
	091 Call ArgumentException..ctor, X0, X1
	092 Move X0, 0xEB7000
	093 Move X0, [X0+2656]
	094 Call 0x1C17D08
	095 Move X1, X0
	096 Move X0, X19
	097 Call 0x1C17DEC

Method: System.IntPtr GetCurrentToken()

Disassembly:
	0x0326DCF4 BL 0x1C16F10

ISIL:
	001 Call 0x1C4D018
	002 Return X0

Method: System.String GetTokenName(System.IntPtr token)

Disassembly:
	0x0326DE54 CMP W1, 0x1

ISIL:
	001 Call 0x1C4E130
	002 Return X0

Method: System.Void .cctor()

Disassembly:
	0x0326E2A0 BL 0x1C16CF4
	0x0326E2A4 MOVZ W8, 0x1
	0x0326E2A8 STRB W8, [X21 + 0x5AB]
	0x0326E2AC CBZ X19, 0x326E560
	0x0326E2B0 ADRP X10, 0xEB5000
	0x0326E2B4 LDR X8, [X19]
	0x0326E2B8 LDR X10, [X10 + 0xB90]
	0x0326E2BC LDRH W9, [X8 + 0x12E]
	0x0326E2C0 LDR X1, [X10]
	0x0326E2C4 CBZ X9, 0x326E2E8
	0x0326E2C8 LDR X10, [X8 + 0xB0]
	0x0326E2CC ADD X10, X10, 0x8
	0x0326E2D0 LDUR X11, [X10 - 0x8]
	0x0326E2D4 CMP X11, X1
	0x0326E2D8 B.EQ 0x326E2F8
	0x0326E2DC SUBS X9, X9, 0x1
	0x0326E2E0 ADD X10, X10, 0x10
	0x0326E2E4 B.NE 0x326E2D0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x116F000
	005 Move X20, 0xEB6000
	006 Move W8, [X19+1437]
	007 Move X20, [X20+2624]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xEB6000
	013 Move X0, [X0+2624]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1437], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move [X8], X31
	022 Move X30, [X31+32]
	023 Return 

