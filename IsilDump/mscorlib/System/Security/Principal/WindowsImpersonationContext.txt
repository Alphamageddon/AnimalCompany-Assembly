Type: System.Security.Principal.WindowsImpersonationContext

Method: System.Void .ctor(System.IntPtr token)

Disassembly:
	0x0326DD54 MOV X0, X24
	0x0326DD58 MOV X1, X31
	0x0326DD5C BL 0x32277A8
	0x0326DD60 TBZ X0, 0x0, 0x326DE94
	0x0326DD64 ADRP X9, 0xEB6000
	0x0326DD68 LDR X9, [X9 + 0xA40]
	0x0326DD6C LDR X8, [X21]
	0x0326DD70 LDR X9, [X9]
	0x0326DD74 LDRB W11, [X8 + 0x130]
	0x0326DD78 LDRB W10, [X9 + 0x130]
	0x0326DD7C CMP W11, W10
	0x0326DD80 B.CC 0x326DD98
	0x0326DD84 LDR X11, [X8 + 0xC8]
	0x0326DD88 ADD X10, X11, X10, 0x3, LSL
	0x0326DD8C LDUR X10, [X10 - 0x8]
	0x0326DD90 CMP X10, X9
	0x0326DD94 B.EQ 0x326DDF8
	0x0326DD98 LDRH W9, [X8 + 0x12E]
	0x0326DD9C LDR X1, [X23]
	0x0326DDA0 CBZ X9, 0x326DDC4
	0x0326DDA4 LDR X10, [X8 + 0xB0]
	0x0326DDA8 ADD X10, X10, 0x8
	0x0326DDAC LDUR X11, [X10 - 0x8]
	0x0326DDB0 CMP X11, X1
	0x0326DDB4 B.EQ 0x326DDD4
	0x0326DDB8 SUBS X9, X9, 0x1
	0x0326DDBC ADD X10, X10, 0x10
	0x0326DDC0 B.NE 0x326DDAC
	0x0326DDC4 MOVZ W2, 0x1
	0x0326DDC8 MOV X0, X21
	0x0326DDCC BL 0x1C5C788
	0x0326DDD0 B 0x326DDE4
	0x0326DDD4 LDR W9, [X10]
	0x0326DDD8 ADD W9, W9, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X1
	005 Move X1, X31
	006 Move X19, X0
	007 Call Object..ctor, X0
	008 Move X0, X20
	009 Call 0x1C4E17C
	010 Move [X19+16], X0
	011 Move X0, X20
	012 Call 0x1C4E164
	013 Move TEMP, X0
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfNotEqual {22}
	017 Move [X19+24], W31
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Return 
	022 Move X0, 0xEB5000
	023 Move X0, [X0+1680]
	024 Call 0x1C17D08
	025 Call 0x1C17F10
	026 Move X19, X0
	027 Move X0, 0xEB7000
	028 Move X0, [X0+2672]
	029 Call 0x1C17D08
	030 Move X1, X0
	031 Move X0, X19
	032 Move X2, X31
	033 Call SecurityException..ctor, X0, X1
	034 Move X0, 0xEB7000
	035 Move X0, [X0+2680]
	036 Call 0x1C17D08
	037 Move X1, X0
	038 Move X0, X19
	039 Call 0x1C17DEC

Method: System.Void Dispose()

Disassembly:
	0x0326E2F0 BL 0x1C5C788
	0x0326E2F4 B 0x326E304
	0x0326E2F8 LDRSW X9, [X10]
	0x0326E2FC ADD X8, X8, X9, 0x4, LSL

ISIL:
	001 Move W8, [X0+24]
	002 Compare W8, 0
	003 Invalid "Jump target not found in method."
	004 Return 

Method: System.Void Undo()

Disassembly:
	0x0326E300 ADD X0, X8, 0x138
	0x0326E304 LDP X8, X1, [X0]
	0x0326E308 ADRP X22, 0xE85000
	0x0326E30C LDR X22, [X22 + 0xE00]
	0x0326E310 MOV X0, X19
	0x0326E314 BLR X8
	0x0326E318 MOV X19, X0
	0x0326E31C CBZ X0, 0x326E564
	0x0326E320 ADRP X23, 0xE85000
	0x0326E324 ADRP X24, 0xEB5000
	0x0326E328 ADRP X25, 0xEB5000
	0x0326E32C LDR X23, [X23 + 0xE18]
	0x0326E330 LDR X24, [X24 + 0xB98]
	0x0326E334 LDR X25, [X25 + 0xBA0]
	0x0326E338 LDR X8, [X19]
	0x0326E33C LDR X1, [X23]
	0x0326E340 LDRH W9, [X8 + 0x12E]
	0x0326E344 CBZ X9, 0x326E368
	0x0326E348 LDR X10, [X8 + 0xB0]
	0x0326E34C ADD X10, X10, 0x8
	0x0326E350 LDUR X11, [X10 - 0x8]
	0x0326E354 CMP X11, X1
	0x0326E358 B.EQ 0x326E378
	0x0326E35C SUBS X9, X9, 0x1
	0x0326E360 ADD X10, X10, 0x10
	0x0326E364 B.NE 0x326E350
	0x0326E368 MOV X0, X19
	0x0326E36C MOV W2, W31
	0x0326E370 BL 0x1C5C788
	0x0326E374 B 0x326E384
	0x0326E378 LDRSW X9, [X10]
	0x0326E37C ADD X8, X8, X9, 0x4, LSL
	0x0326E380 ADD X0, X8, 0x138
	0x0326E384 LDP X8, X1, [X0]
	0x0326E388 MOV X0, X19
	0x0326E38C BLR X8
	0x0326E390 TBZ X0, 0x0, 0x326E4D0
	0x0326E394 LDR X8, [X19]
	0x0326E398 LDR X1, [X24]
	0x0326E39C LDRH W9, [X8 + 0x12E]
	0x0326E3A0 CBZ X9, 0x326E3C4
	0x0326E3A4 LDR X10, [X8 + 0xB0]
	0x0326E3A8 ADD X10, X10, 0x8
	0x0326E3AC LDUR X11, [X10 - 0x8]
	0x0326E3B0 CMP X11, X1
	0x0326E3B4 B.EQ 0x326E3D4
	0x0326E3B8 SUBS X9, X9, 0x1
	0x0326E3BC ADD X10, X10, 0x10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x116F000
	005 Move W8, [X20+1438]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE8D000
	012 Move X0, [X0+3088]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1438], W8
	016 Call 0x1C4E14C
	017 Move X8, [X19+16]
	018 Move W20, W0
	019 Move X0, X8
	020 Call 0x1C4E134
	021 Move TEMP, X20
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {41}
	025 Move X8, 0xE8D000
	026 Move X8, [X8+3088]
	027 Move W9, 1
	028 Move [X19+24], W9
	029 Move X0, [X8]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X1, X31
	038 Move X30, [X31+32]
	039 Call GC.SuppressFinalize, X0
	040 Return 
	041 Move X0, 0xEB4000
	042 Move X0, [X0+1680]
	043 Call 0x1C17D08
	044 Call 0x1C17F10
	045 Move X19, X0
	046 Move X0, 0xEB6000
	047 Move X0, [X0+2768]
	048 Call 0x1C17D08
	049 Move X1, X0
	050 Move X0, X19
	051 Move X2, X31
	052 Call SecurityException..ctor, X0, X1
	053 Move X0, 0xEB6000
	054 Move X0, [X0+2776]
	055 Call 0x1C17D08
	056 Move X1, X0
	057 Move X0, X19
	058 Call 0x1C17DEC

Method: System.Boolean CloseToken(System.IntPtr token)

Disassembly:
	0x0326E3C4 MOV X0, X19

ISIL:
	001 Call 0x1C4E134
	002 Return X0

Method: System.IntPtr DuplicateToken(System.IntPtr token)

Disassembly:
	0x0326E2E8 MOV X0, X19

ISIL:
	001 Call 0x1C4E17C
	002 Return X0

Method: System.Boolean SetCurrentToken(System.IntPtr token)

Disassembly:
	0x0326E2EC MOV W2, W31

ISIL:
	001 Call 0x1C4E164
	002 Return X0

Method: System.Boolean RevertToSelf()

Disassembly:
	0x0326E3C0 B.NE 0x326E3AC

ISIL:
	001 Call 0x1C4E14C
	002 Return X0

