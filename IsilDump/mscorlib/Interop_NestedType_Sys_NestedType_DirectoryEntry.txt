Type: Interop/Sys/DirectoryEntry

Method: System.ReadOnlySpan`1<System.Char> GetName(System.Span`1<System.Char> buffer)

Disassembly:
	0x0320B034 RET
	0x0320B038 STR X30, [X31 - 0x20]!
	0x0320B03C STP X20, X19, [X31 + 0x10]
	0x0320B040 MOV X19, X1
	0x0320B044 MOV X1, X31
	0x0320B048 BL 0x33C6948
	0x0320B04C LDRB W20, [X0]
	0x0320B050 TBNZ X20, 0x7, 0x320B05C
	0x0320B054 ADD X0, X0, 0x1
	0x0320B058 B 0x320B098
	0x0320B05C LDRB W8, [X0 + 0x1]
	0x0320B060 TBNZ X20, 0x6, 0x320B078
	0x0320B064 AND W9, W20, 0x3F
	0x0320B068 BFM W8, W9, 0x18, 0x5
	0x0320B06C ADD X0, X0, 0x2
	0x0320B070 MOV W20, W8
	0x0320B074 B 0x320B098
	0x0320B078 LDRB W9, [X0 + 0x2]
	0x0320B07C LDRB W10, [X0 + 0x3]
	0x0320B080 AND W11, W20, 0x1F
	0x0320B084 UBFM W11, W11, 0x8, 0x7
	0x0320B088 BFM W11, W8, 0x10, 0x7
	0x0320B08C BFM W11, W9, 0x18, 0x7
	0x0320B090 ORR W20, W11, W10, 0x0
	0x0320B094 ADD X0, X0, 0x4
	0x0320B098 MOV X1, X31
	0x0320B09C BL 0x33C693C
	0x0320B0A0 STR X0, [X19]
	0x0320B0A4 MOV W0, W20
	0x0320B0A8 LDP X20, X19, [X31 + 0x10]
	0x0320B0AC LDR X30, [X31], #0x20
	0x0320B0B0 RET
	0x0320B0B4 STR X30, [X31 - 0x30]!
	0x0320B0B8 STP X22, X21, [X31 + 0x10]
	0x0320B0BC STP X20, X19, [X31 + 0x20]
	0x0320B0C0 ADRP X22, 0x11D1000
	0x0320B0C4 ADRP X21, 0xEE8000
	0x0320B0C8 ADRP X20, 0xF10000
	0x0320B0CC LDRB W8, [X22 + 0x285]
	0x0320B0D0 LDR X21, [X21 + 0x618]
	0x0320B0D4 LDR X20, [X20 + 0x850]
	0x0320B0D8 MOV X19, X0
	0x0320B0DC TBNZ X8, 0x0, 0x320B100
	0x0320B0E0 ADRP X0, 0xEE8000
	0x0320B0E4 LDR X0, [X0 + 0x618]
	0x0320B0E8 BL 0x1C16CF4
	0x0320B0EC ADRP X0, 0xF10000
	0x0320B0F0 LDR X0, [X0 + 0x850]
	0x0320B0F4 BL 0x1C16CF4
	0x0320B0F8 MOVZ W8, 0x1
	0x0320B0FC STRB W8, [X22 + 0x285]
	0x0320B100 ADD X1, X31, 0x8
	0x0320B104 MOV X0, X19
	0x0320B108 STR X31, [X31 + 0x8]
	0x0320B10C BL 0x320B038
	0x0320B110 LDR X8, [X21]
	0x0320B114 MOV W19, W0
	0x0320B118 MOV W1, W19
	0x0320B11C MOV X0, X8
	0x0320B120 BL 0x1C16D6C
	0x0320B124 LDR X8, [X20]
	0x0320B128 LDR X21, [X31 + 0x8]
	0x0320B12C MOV X20, X0
	0x0320B130 LDR W9, [X8 + 0xE0]
	0x0320B134 CBNZ W9, 0x320B140
	0x0320B138 MOV X0, X8
	0x0320B13C BL 0x1C16DFC
	0x0320B140 MOV X0, X21
	0x0320B144 MOV X1, X20
	0x0320B148 MOV W2, W31
	0x0320B14C MOV W3, W19
	0x0320B150 MOV X4, X31
	0x0320B154 BL 0x32C0C8C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x11D2000
	008 Move W8, [X22+629]
	009 Move X20, X2
	010 Move X19, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0xF17000
	017 Move X0, [X0+2112]
	018 Call 0x1C17CF4
	019 Move X0, 0xF17000
	020 Move X0, [X0+2120]
	021 Call 0x1C17CF4
	022 Move X0, 0xF17000
	023 Move X0, [X0+2128]
	024 Call 0x1C17CF4
	025 Move X0, 0xF17000
	026 Move X0, [X0+2136]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+629], W8
	030 Move W22, [X21+8]
	031 Move X21, [X21]
	032 Add W31, W22, 1
	033 Move TEMP, X22
	034 And TEMP, TEMP, -2147483648
	035 Compare TEMP, -2147483648
	036 JumpIfNotEqual {39}
	037 Move X0, X31
	038 Call ThrowHelper.ThrowArgumentOutOfRangeException
	039 Move X0, X31
	040 Call Encoding.get_UTF8
	041 Compare X0, 0
	042 JumpIfEqual {90}
	043 Move X8, [X0]
	044 Move X23, 0xF17000
	045 Move W2, W22
	046 Move X1, X21
	047 Move X9, [X8+792]
	048 Move X5, [X8+800]
	049 Move X23, [X23+2128]
	050 Move X3, X19
	051 Move X4, X20
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move X22, [X23]
	054 Move W21, W0
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X0, X31
	057 Call ThrowHelper.ThrowArgumentOutOfRangeException
	058 Move X0, [X22+32]
	059 Move X20, 0xF17000
	060 Move W8, [X0+309]
	061 Move X20, [X20+2136]
	062 Move TEMP, X8
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {67}
	066 Call 0x1C5D684
	067 Move X2, [X20]
	068 Move W1, W21
	069 Move X0, X19
	070 Move X20, [X31+32]
	071 Move X19, [X31+40]
	072 Move X22, [X31+16]
	073 Move X21, [X31+24]
	074 Move X30, [X31+48]
	075 Move X23, [X31+56]
	076 Call Span`1<Char>.op_Implicit, X0
	077 Return X0
	078 Move X8, 0xF17000
	079 Move X8, [X8+2112]
	080 Move W1, 256
	081 Move X0, X21
	082 Move W2, W31
	083 Move X3, [X8]
	084 Call 0x321BA5C
	085 Move W22, W0
	086 Move TEMP, X0
	087 And TEMP, TEMP, -2147483648
	088 Compare TEMP, -2147483648
	089 JumpIfNotEqual {39}
	090 Call 0x1C17F20

