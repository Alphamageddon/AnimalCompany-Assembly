Type: SR

Method: System.String GetString(System.String name, System.Object[] args)

Disassembly:
	0x0320B16C MOV W8, W0
	0x0320B170 SUB W0, W0, 0x30
	0x0320B174 CMP W0, 0xA
	0x0320B178 B.CC 0x320B18C
	0x0320B17C SUB W9, W8, 0x61
	0x0320B180 CMP W9, 0x5
	0x0320B184 B.LS 0x320B190
	0x0320B188 SUB W0, W8, 0x37
	0x0320B18C RET
	0x0320B190 SUB W0, W8, 0x57
	0x0320B194 RET
	0x0320B198 AND W1, W1, 0x1
	0x0320B19C B 0x1C16894
	0x0320B1A0 STP X30, X19, [X31 - 0x10]!
	0x0320B1A4 MOV X19, X0
	0x0320B1A8 MOV X0, X1
	0x0320B1AC MOV X1, X31
	0x0320B1B0 BL 0x33C6948
	0x0320B1B4 STR X0, [X19]
	0x0320B1B8 LDP X30, X19, [X31], #0x10
	0x0320B1BC RET
	0x0320B1C0 STP X30, X19, [X31 - 0x10]!
	0x0320B1C4 MOV X19, X0
	0x0320B1C8 LDR X0, [X0]
	0x0320B1CC BL 0x1C16890
	0x0320B1D0 STR X31, [X19]
	0x0320B1D4 LDP X30, X19, [X31], #0x10
	0x0320B1D8 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x11D2000
	007 Move X22, 0xEEB000
	008 Move W8, [X21+630]
	009 Move X22, [X22+3144]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xEEB000
	017 Move X0, [X0+3144]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+630], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X31
	027 Call CultureInfo.get_InvariantCulture
	028 Move X1, X20
	029 Move X2, X19
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X3, X31
	035 Move X30, [X31+48]
	036 Call String.Format, X0, X1, X2
	037 Return X0

Method: System.String GetString(System.Globalization.CultureInfo culture, System.String name, System.Object[] args)

Disassembly:
	0x0320B1DC STR X30, [X31 - 0x10]!
	0x0320B1E0 LDR X8, [X0]

ISIL:
	001 Move X3, X31
	002 Call String.Format, X0, X1, X2
	003 Return X0

Method: System.String GetString(System.String name)

Disassembly:
	0x0320B1E4 CBZ X8, 0x320B1F4

ISIL:
	001 Return X0

Method: System.String Format(System.String resourceFormat, System.Object[] args)

Disassembly:
	0x0320B1E8 LDR W0, [X8 + 0x8]
	0x0320B1EC LDR X30, [X31], #0x10
	0x0320B1F0 RET
	0x0320B1F4 BL 0x1C16F20
	0x0320B1F8 B 0x320AEDC
	0x0320B1FC B 0x1C168D4
	0x0320B200 STR X30, [X31 - 0x10]!
	0x0320B204 STR X0, [X31 + 0x8]
	0x0320B208 ADD X0, X31, 0x8
	0x0320B20C BL 0x1C168D4
	0x0320B210 LDR X30, [X31], #0x10
	0x0320B214 RET
	0x0320B218 B 0x1C16950
	0x0320B21C SUB X31, X31, 0x20
	0x0320B220 STP X30, X19, [X31 + 0x10]
	0x0320B224 MOV X19, X0
	0x0320B228 LDR X0, [X0 + 0x8]
	0x0320B22C MOV X1, X31
	0x0320B230 MOV X2, X31
	0x0320B234 BL 0x33BE5B0
	0x0320B238 TBZ X0, 0x0, 0x320B254
	0x0320B23C LDR X8, [X19]
	0x0320B240 CBZ X8, 0x320B254
	0x0320B244 ADD X0, X31, 0x8
	0x0320B248 STR X8, [X31 + 0x8]
	0x0320B24C BL 0x1C168D4
	0x0320B250 STR X0, [X19 + 0x8]
	0x0320B254 LDR X0, [X19 + 0x8]
	0x0320B258 LDP X30, X19, [X31 + 0x10]
	0x0320B25C ADD X31, X31, 0x20
	0x0320B260 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x11D2000
	006 Move W8, [X21+631]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xEEB000
	014 Move X0, [X0+3144]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+631], W8
	018 Compare X19, 0
	019 JumpIfEqual {38}
	020 Move X8, 0xEEB000
	021 Move X8, [X8+3144]
	022 Move X0, [X8]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X31
	028 Call CultureInfo.get_InvariantCulture
	029 Move X1, X20
	030 Move X2, X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X3, X31
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Call String.Format, X0, X1, X2
	037 Return X0
	038 Move X0, X20
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Return X0

Method: System.String Format(System.String resourceFormat, System.Object p1)

Disassembly:
	0x0320A4D4 MOV X0, X20
	0x0320A4D8 MOV X2, X31
	0x0320A4DC BL 0x338E3A0
	0x0320A4E0 ADRP X0, 0xF17000
	0x0320A4E4 LDR X0, [X0 + 0x870]
	0x0320A4E8 BL 0x1C16D08
	0x0320A4EC MOV X1, X0
	0x0320A4F0 MOV X0, X20
	0x0320A4F4 BL 0x1C16DEC
	0x0320A4F8 B 0x320A504
	0x0320A4FC B 0x320A504
	0x0320A500 B 0x320A504
	0x0320A504 MOV X21, X0
	0x0320A508 CMP W1, 0x1
	0x0320A50C B.NE 0x320A528
	0x0320A510 MOV X0, X21
	0x0320A514 BL 0x3EB1AD0
	0x0320A518 LDR X20, [X0]
	0x0320A51C BL 0x3EB1AE0
	0x0320A520 MOV X21, X31
	0x0320A524 B 0x320A47C
	0x0320A528 MOV X20, X31
	0x0320A52C B 0x320A534
	0x0320A530 MOV X21, X0
	0x0320A534 LDRB W8, [X31 + 0xC]
	0x0320A538 CBZ W8, 0x320A548
	0x0320A53C MOV X0, X19
	0x0320A540 MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x11D3000
	007 Move X22, 0xEEC000
	008 Move W8, [X21+632]
	009 Move X22, [X22+3144]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xEEC000
	017 Move X0, [X0+3144]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+632], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X31
	027 Call CultureInfo.get_InvariantCulture
	028 Move X1, X20
	029 Move X2, X19
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X3, X31
	035 Move X30, [X31+48]
	036 Call String.Format, X0, X1, X2
	037 Return X0

Method: System.String Format(System.String resourceFormat, System.Object p1, System.Object p2)

Disassembly:
	0x0320B264 STP X30, X19, [X31 - 0x10]!
	0x0320B268 MOV X19, X0
	0x0320B26C LDR X0, [X0 + 0x8]
	0x0320B270 MOV X1, X31
	0x0320B274 MOV X2, X31
	0x0320B278 BL 0x33C5D2C
	0x0320B27C TBZ X0, 0x0, 0x320B28C
	0x0320B280 LDR X0, [X19 + 0x8]
	0x0320B284 BL 0x1C16950
	0x0320B288 STR X31, [X19 + 0x8]
	0x0320B28C LDP X30, X19, [X31], #0x10
	0x0320B290 RET
	0x0320B294 STP X30, X21, [X31 - 0x20]!
	0x0320B298 STP X20, X19, [X31 + 0x10]
	0x0320B29C ADRP X21, 0x11D1000
	0x0320B2A0 ADRP X20, 0xF16000
	0x0320B2A4 LDRB W8, [X21 + 0x286]
	0x0320B2A8 LDR X20, [X20 + 0x8C8]
	0x0320B2AC MOV X19, X0
	0x0320B2B0 TBNZ X8, 0x0, 0x320B2C8
	0x0320B2B4 ADRP X0, 0xF16000
	0x0320B2B8 LDR X0, [X0 + 0x8C8]
	0x0320B2BC BL 0x1C16CF4
	0x0320B2C0 MOVZ W8, 0x1
	0x0320B2C4 STRB W8, [X21 + 0x286]
	0x0320B2C8 MOV X0, X19
	0x0320B2CC BL 0x320B2F4
	0x0320B2D0 LDR X0, [X20]
	0x0320B2D4 BL 0x1C16F10
	0x0320B2D8 MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x11D2000
	008 Move X23, 0xEEB000
	009 Move W8, [X22+633]
	010 Move X23, [X23+3144]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xEEB000
	019 Move X0, [X0+3144]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+633], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X31
	029 Call CultureInfo.get_InvariantCulture
	030 Move X1, X21
	031 Move X2, X20
	032 Move X3, X19
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X4, X31
	038 Move X30, [X31+48]
	039 Move X23, [X31+56]
	040 Call String.Format, X0, X1, X2, X3
	041 Return X0

Method: System.String Format(System.String resourceFormat, System.Object p1, System.Object p2, System.Object p3)

Disassembly:
	0x0320B2DC MOV X20, X0
	0x0320B2E0 BL 0x3356984
	0x0320B2E4 STR X20, [X19 + 0x78]
	0x0320B2E8 LDP X20, X19, [X31 + 0x10]
	0x0320B2EC LDP X30, X21, [X31], #0x20
	0x0320B2F0 RET
	0x0320B2F4 STR X30, [X31 - 0x40]!
	0x0320B2F8 STP X24, X23, [X31 + 0x10]
	0x0320B2FC STP X22, X21, [X31 + 0x20]
	0x0320B300 STP X20, X19, [X31 + 0x30]
	0x0320B304 ADRP X20, 0x11D1000
	0x0320B308 ADRP X24, 0xF16000
	0x0320B30C ADRP X23, 0xEE8000
	0x0320B310 ADRP X22, 0xEF1000
	0x0320B314 ADRP X21, 0xF16000
	0x0320B318 LDRB W8, [X20 + 0x28B]
	0x0320B31C LDR X24, [X24 + 0x8C8]
	0x0320B320 LDR X23, [X23 + 0x8F0]
	0x0320B324 LDR X22, [X22 + 0x8D8]
	0x0320B328 LDR X21, [X21 + 0x8D0]
	0x0320B32C MOV X19, X0
	0x0320B330 TBNZ X8, 0x0, 0x320B36C
	0x0320B334 ADRP X0, 0xF16000
	0x0320B338 LDR X0, [X0 + 0x8D0]
	0x0320B33C BL 0x1C16CF4
	0x0320B340 ADRP X0, 0xEF1000
	0x0320B344 LDR X0, [X0 + 0x8D8]
	0x0320B348 BL 0x1C16CF4
	0x0320B34C ADRP X0, 0xF16000
	0x0320B350 LDR X0, [X0 + 0x8C8]
	0x0320B354 BL 0x1C16CF4
	0x0320B358 ADRP X0, 0xEE8000
	0x0320B35C LDR X0, [X0 + 0x8F0]
	0x0320B360 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x11D2000
	009 Move X24, 0xEEB000
	010 Move W8, [X23+634]
	011 Move X24, [X24+3144]
	012 Move X19, X3
	013 Move X20, X2
	014 Move X21, X1
	015 Move X22, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xEEB000
	021 Move X0, [X0+3144]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+634], W8
	025 Move X0, [X24]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X31
	031 Call CultureInfo.get_InvariantCulture
	032 Move X1, X22
	033 Move X2, X21
	034 Move X3, X20
	035 Move X4, X19
	036 Move X20, [X31+48]
	037 Move X19, [X31+56]
	038 Move X22, [X31+32]
	039 Move X21, [X31+40]
	040 Move X24, [X31+16]
	041 Move X23, [X31+24]
	042 Move X5, X31
	043 Move X30, [X31+64]
	044 Call String.Format, X0, X1, X2, X3, X4
	045 Return X0

Method: System.String GetResourceString(System.String str)

Disassembly:
	0x0320B364 MOVZ W8, 0x1

ISIL:
	001 Return X0

