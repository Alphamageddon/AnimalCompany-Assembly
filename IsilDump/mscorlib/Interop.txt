Type: Interop

Method: System.Exception GetExceptionForIoErrno(Interop/ErrorInfo errorInfo, System.String path = null, System.Boolean isDirectory = False)

Disassembly:
	0x03209FE8 ADRP X20, 0x11D3000
	0x03209FEC ADRP X19, 0xF15000
	0x03209FF0 LDRB W8, [X20 + 0x274]
	0x03209FF4 LDR X19, [X19 + 0xD78]
	0x03209FF8 TBNZ X8, 0x0, 0x320A010
	0x03209FFC ADRP X0, 0xF15000
	0x0320A000 LDR X0, [X0 + 0xD78]
	0x0320A004 BL 0x1C16CF4
	0x0320A008 MOVZ W8, 0x1
	0x0320A00C STRB W8, [X20 + 0x274]
	0x0320A010 BL 0x3EB1D20
	0x0320A014 LDR X8, [X19]
	0x0320A018 LDP X20, X19, [X31 + 0x10]
	0x0320A01C CMP W0, 0x0
	0x0320A020 CSET W9, NE
	0x0320A024 LDR X8, [X8 + 0xB8]
	0x0320A028 STRB W9, [X8]
	0x0320A02C LDR X30, [X31], #0x20
	0x0320A030 RET
	0x0320A034 STP X30, X23, [X31 - 0x30]!
	0x0320A038 STP X22, X21, [X31 + 0x10]
	0x0320A03C STP X20, X19, [X31 + 0x20]
	0x0320A040 ADRP X22, 0x11D2000
	0x0320A044 LDRB W8, [X22 + 0x275]
	0x0320A048 MOV X20, X2
	0x0320A04C MOV X19, X1
	0x0320A050 MOV X21, X0
	0x0320A054 TBNZ X8, 0x0, 0x320A090
	0x0320A058 ADRP X0, 0xF17000
	0x0320A05C LDR X0, [X0 + 0x840]
	0x0320A060 BL 0x1C16CF4
	0x0320A064 ADRP X0, 0xF17000
	0x0320A068 LDR X0, [X0 + 0x848]
	0x0320A06C BL 0x1C16CF4
	0x0320A070 ADRP X0, 0xF17000
	0x0320A074 LDR X0, [X0 + 0x850]
	0x0320A078 BL 0x1C16CF4
	0x0320A07C ADRP X0, 0xF17000
	0x0320A080 LDR X0, [X0 + 0x858]
	0x0320A084 BL 0x1C16CF4
	0x0320A088 MOVZ W8, 0x1
	0x0320A08C STRB W8, [X22 + 0x275]
	0x0320A090 LDR W22, [X21 + 0x8]
	0x0320A094 LDR X21, [X21]
	0x0320A098 ADDS W31, W22, 0x1
	0x0320A09C B.EQ 0x320A12C
	0x0320A0A0 TBZ X22, 0x1F, 0x320A0AC
	0x0320A0A4 MOV X0, X31
	0x0320A0A8 BL 0x339D6EC
	0x0320A0AC MOV X0, X31
	0x0320A0B0 BL 0x3241948
	0x0320A0B4 CBZ X0, 0x320A154
	0x0320A0B8 LDR X8, [X0]
	0x0320A0BC ADRP X23, 0xF17000
	0x0320A0C0 MOV W2, W22
	0x0320A0C4 MOV X1, X21
	0x0320A0C8 LDR X9, [X8 + 0x318]
	0x0320A0CC LDR X5, [X8 + 0x320]
	0x0320A0D0 LDR X23, [X23 + 0x850]
	0x0320A0D4 MOV X3, X19
	0x0320A0D8 MOV X4, X20
	0x0320A0DC BLR X9
	0x0320A0E0 LDR X22, [X23]
	0x0320A0E4 MOV W21, W0
	0x0320A0E8 CMP W0, W20
	0x0320A0EC B.LS 0x320A0F8
	0x0320A0F0 MOV X0, X31
	0x0320A0F4 BL 0x339D6EC
	0x0320A0F8 LDR X0, [X22 + 0x20]
	0x0320A0FC ADRP X20, 0xF17000
	0x0320A100 LDRB W8, [X0 + 0x135]
	0x0320A104 LDR X20, [X20 + 0x858]
	0x0320A108 TBNZ X8, 0x0, 0x320A110
	0x0320A10C BL 0x1C5C684
	0x0320A110 LDR X2, [X20]
	0x0320A114 MOV W1, W21
	0x0320A118 MOV X0, X19
	0x0320A11C LDP X20, X19, [X31 + 0x20]
	0x0320A120 LDP X22, X21, [X31 + 0x10]
	0x0320A124 LDP X30, X23, [X31], #0x30
	0x0320A128 B 0x25FB81C
	0x0320A12C ADRP X8, 0xF17000
	0x0320A130 LDR X8, [X8 + 0x840]
	0x0320A134 MOVZ W1, 0x100
	0x0320A138 MOV X0, X21
	0x0320A13C MOV W2, W31
	0x0320A140 LDR X3, [X8]
	0x0320A144 BL 0x321AA5C
	0x0320A148 MOV W22, W0
	0x0320A14C TBZ X0, 0x1F, 0x320A0AC
	0x0320A150 B 0x320A0A4
	0x0320A154 BL 0x1C16F20
	0x0320A158 ORR X0, X0, 0x0
	0x0320A15C RET
	0x0320A160 RET
	0x0320A164 MOV X2, X31
	0x0320A168 B 0x3227C5C
	0x0320A16C STR X30, [X31 - 0x30]!
	0x0320A170 STP X22, X21, [X31 + 0x10]
	0x0320A174 STP X20, X19, [X31 + 0x20]
	0x0320A178 ADRP X21, 0x11D2000
	0x0320A17C ADRP X22, 0xEEB000
	0x0320A180 LDRB W8, [X21 + 0x276]
	0x0320A184 LDR X22, [X22 + 0xC48]
	0x0320A188 MOV X19, X1
	0x0320A18C MOV X20, X0
	0x0320A190 TBNZ X8, 0x0, 0x320A1A8
	0x0320A194 ADRP X0, 0xEEB000
	0x0320A198 LDR X0, [X0 + 0xC48]
	0x0320A19C BL 0x1C16CF4
	0x0320A1A0 MOVZ W8, 0x1
	0x0320A1A4 STRB W8, [X21 + 0x276]
	0x0320A1A8 LDR X0, [X22]
	0x0320A1AC LDR W8, [X0 + 0xE0]
	0x0320A1B0 CBNZ W8, 0x320A1B8
	0x0320A1B4 BL 0x1C16DFC
	0x0320A1B8 MOV X0, X31
	0x0320A1BC BL 0x3338524
	0x0320A1C0 MOV X1, X20
	0x0320A1C4 MOV X2, X19
	0x0320A1C8 LDP X20, X19, [X31 + 0x20]
	0x0320A1CC LDP X22, X21, [X31 + 0x10]
	0x0320A1D0 MOV X3, X31
	0x0320A1D4 LDR X30, [X31], #0x30
	0x0320A1D8 B 0x3227E0C
	0x0320A1DC MOV X3, X31
	0x0320A1E0 B 0x3227E0C
	0x0320A1E4 RET
	0x0320A1E8 STP X30, X21, [X31 - 0x20]!
	0x0320A1EC STP X20, X19, [X31 + 0x10]
	0x0320A1F0 ADRP X21, 0x11D2000
	0x0320A1F4 LDRB W8, [X21 + 0x277]
	0x0320A1F8 MOV X19, X1
	0x0320A1FC MOV X20, X0
	0x0320A200 TBNZ X8, 0x0, 0x320A218
	0x0320A204 ADRP X0, 0xEEB000
	0x0320A208 LDR X0, [X0 + 0xC48]
	0x0320A20C BL 0x1C16CF4
	0x0320A210 MOVZ W8, 0x1
	0x0320A214 STRB W8, [X21 + 0x277]
	0x0320A218 CBZ X19, 0x320A254
	0x0320A21C ADRP X8, 0xEEB000
	0x0320A220 LDR X8, [X8 + 0xC48]
	0x0320A224 LDR X0, [X8]
	0x0320A228 LDR W8, [X0 + 0xE0]
	0x0320A22C CBNZ W8, 0x320A234
	0x0320A230 BL 0x1C16DFC
	0x0320A234 MOV X0, X31
	0x0320A238 BL 0x3338524
	0x0320A23C MOV X1, X20
	0x0320A240 MOV X2, X19
	0x0320A244 LDP X20, X19, [X31 + 0x10]
	0x0320A248 MOV X3, X31
	0x0320A24C LDP X30, X21, [X31], #0x20
	0x0320A250 B 0x3227E0C
	0x0320A254 MOV X0, X20
	0x0320A258 LDP X20, X19, [X31 + 0x10]
	0x0320A25C LDP X30, X21, [X31], #0x20
	0x0320A260 RET
	0x0320A264 STP X30, X23, [X31 - 0x30]!
	0x0320A268 STP X22, X21, [X31 + 0x10]
	0x0320A26C STP X20, X19, [X31 + 0x20]
	0x0320A270 ADRP X22, 0x11D2000
	0x0320A274 ADRP X23, 0xEEB000
	0x0320A278 LDRB W8, [X22 + 0x279]
	0x0320A27C LDR X23, [X23 + 0xC48]
	0x0320A280 MOV X19, X2
	0x0320A284 MOV X20, X1
	0x0320A288 MOV X21, X0
	0x0320A28C TBNZ X8, 0x0, 0x320A2A4
	0x0320A290 ADRP X0, 0xEEB000
	0x0320A294 LDR X0, [X0 + 0xC48]
	0x0320A298 BL 0x1C16CF4
	0x0320A29C MOVZ W8, 0x1
	0x0320A2A0 STRB W8, [X22 + 0x279]
	0x0320A2A4 LDR X0, [X23]
	0x0320A2A8 LDR W8, [X0 + 0xE0]
	0x0320A2AC CBNZ W8, 0x320A2B4
	0x0320A2B0 BL 0x1C16DFC
	0x0320A2B4 MOV X0, X31
	0x0320A2B8 BL 0x3338524
	0x0320A2BC MOV X1, X21
	0x0320A2C0 MOV X2, X20
	0x0320A2C4 MOV X3, X19
	0x0320A2C8 LDP X20, X19, [X31 + 0x20]
	0x0320A2CC LDP X22, X21, [X31 + 0x10]
	0x0320A2D0 MOV X4, X31
	0x0320A2D4 LDP X30, X23, [X31], #0x30
	0x0320A2D8 B 0x3227D58
	0x0320A2DC STR X30, [X31 - 0x40]!
	0x0320A2E0 STP X24, X23, [X31 + 0x10]
	0x0320A2E4 STP X22, X21, [X31 + 0x20]
	0x0320A2E8 STP X20, X19, [X31 + 0x30]
	0x0320A2EC ADRP X23, 0x11D2000
	0x0320A2F0 ADRP X24, 0xEEB000
	0x0320A2F4 LDRB W8, [X23 + 0x27A]
	0x0320A2F8 LDR X24, [X24 + 0xC48]
	0x0320A2FC MOV X19, X3
	0x0320A300 MOV X20, X2
	0x0320A304 MOV X21, X1
	0x0320A308 MOV X22, X0
	0x0320A30C TBNZ X8, 0x0, 0x320A324
	0x0320A310 ADRP X0, 0xEEB000
	0x0320A314 LDR X0, [X0 + 0xC48]
	0x0320A318 BL 0x1C16CF4
	0x0320A31C MOVZ W8, 0x1
	0x0320A320 STRB W8, [X23 + 0x27A]
	0x0320A324 LDR X0, [X24]
	0x0320A328 LDR W8, [X0 + 0xE0]
	0x0320A32C CBNZ W8, 0x320A334
	0x0320A330 BL 0x1C16DFC
	0x0320A334 MOV X0, X31
	0x0320A338 BL 0x3338524
	0x0320A33C MOV X1, X22
	0x0320A340 MOV X2, X21
	0x0320A344 MOV X3, X20
	0x0320A348 MOV X4, X19
	0x0320A34C LDP X20, X19, [X31 + 0x30]
	0x0320A350 LDP X22, X21, [X31 + 0x20]
	0x0320A354 LDP X24, X23, [X31 + 0x10]
	0x0320A358 MOV X5, X31
	0x0320A35C LDR X30, [X31], #0x40
	0x0320A360 B 0x3227DB0
	0x0320A364 RET
	0x0320A368 SUB X31, X31, 0x30
	0x0320A36C STP X30, X21, [X31 + 0x10]
	0x0320A370 STP X20, X19, [X31 + 0x20]
	0x0320A374 ADRP X19, 0x11D2000
	0x0320A378 ADRP X20, 0xF17000
	0x0320A37C LDRB W8, [X19 + 0x27B]
	0x0320A380 LDR X20, [X20 + 0x860]
	0x0320A384 TBNZ X8, 0x0, 0x320A39C
	0x0320A388 ADRP X0, 0xF17000
	0x0320A38C LDR X0, [X0 + 0x860]
	0x0320A390 BL 0x1C16CF4
	0x0320A394 MOVZ W8, 0x1
	0x0320A398 STRB W8, [X19 + 0x27B]
	0x0320A39C LDR X0, [X20]
	0x0320A3A0 LDR W8, [X0 + 0xE0]
	0x0320A3A4 CBZ W8, 0x320A3BC
	0x0320A3A8 LDR X8, [X0 + 0xB8]
	0x0320A3AC LDR X9, [X8 + 0x8]
	0x0320A3B0 CBZ X9, 0x320A3D8
	0x0320A3B4 LDR X21, [X8 + 0x8]
	0x0320A3B8 B 0x320A494
	0x0320A3BC BL 0x1C16DFC
	0x0320A3C0 LDR X0, [X20]
	0x0320A3C4 LDR X8, [X0 + 0xB8]
	0x0320A3C8 LDR W9, [X0 + 0xE0]
	0x0320A3CC LDR X19, [X8 + 0x8]
	0x0320A3D0 CBZ W9, 0x320A428
	0x0320A3D4 CBNZ X19, 0x320A3B4
	0x0320A3D8 LDR X19, [X8]
	0x0320A3DC STRB W31, [X31 + 0xC]
	0x0320A3E0 ADD X1, X31, 0xC
	0x0320A3E4 MOV X0, X19
	0x0320A3E8 MOV X2, X31
	0x0320A3EC BL 0x33DE64C
	0x0320A3F0 LDR X8, [X20]
	0x0320A3F4 LDR W9, [X8 + 0xE0]
	0x0320A3F8 CBNZ W9, 0x320A40C
	0x0320A3FC MOV X0, X8
	0x0320A400 BL 0x1C16DFC
	0x0320A404 LDR X8, [X20]
	0x0320A408 LDR W9, [X8 + 0xE0]
	0x0320A40C LDR X10, [X8 + 0xB8]
	0x0320A410 LDR X21, [X10 + 0x8]
	0x0320A414 CBZ X21, 0x320A43C
	0x0320A418 CBNZ W9, 0x320A478
	0x0320A41C MOV X0, X8
	0x0320A420 BL 0x1C16DFC
	0x0320A424 B 0x320A46C
	0x0320A428 BL 0x1C16DFC
	0x0320A42C LDR X8, [X20]
	0x0320A430 LDR X8, [X8 + 0xB8]
	0x0320A434 CBNZ X19, 0x320A3B4
	0x0320A438 B 0x320A3D8
	0x0320A43C CBNZ W9, 0x320A448
	0x0320A440 MOV X0, X8
	0x0320A444 BL 0x1C16DFC
	0x0320A448 BL 0x320A560
	0x0320A44C MOV X21, X0
	0x0320A450 LDR X0, [X20]
	0x0320A454 LDR X8, [X0 + 0xB8]
	0x0320A458 STR X21, [X8 + 0x8]
	0x0320A45C CBZ X21, 0x320A4B0
	0x0320A460 LDR W8, [X0 + 0xE0]
	0x0320A464 CBNZ W8, 0x320A478
	0x0320A468 BL 0x1C16DFC
	0x0320A46C LDR X8, [X20]
	0x0320A470 LDR X8, [X8 + 0xB8]
	0x0320A474 LDR X21, [X8 + 0x8]
	0x0320A478 MOV X20, X31
	0x0320A47C LDRB W8, [X31 + 0xC]
	0x0320A480 CBZ W8, 0x320A490
	0x0320A484 MOV X0, X19
	0x0320A488 MOV X1, X31
	0x0320A48C BL 0x33E14E4
	0x0320A490 CBNZ X20, 0x320A4A8
	0x0320A494 MOV X0, X21
	0x0320A498 LDP X20, X19, [X31 + 0x20]
	0x0320A49C LDP X30, X21, [X31 + 0x10]
	0x0320A4A0 ADD X31, X31, 0x30
	0x0320A4A4 RET
	0x0320A4A8 MOV X0, X20
	0x0320A4AC BL 0x1C16F18
	0x0320A4B0 ADRP X0, 0xF14000
	0x0320A4B4 LDR X0, [X0 + 0xC50]
	0x0320A4B8 BL 0x1C16D08
	0x0320A4BC BL 0x1C16F10
	0x0320A4C0 MOV X20, X0
	0x0320A4C4 ADRP X0, 0xF17000
	0x0320A4C8 LDR X0, [X0 + 0x868]
	0x0320A4CC BL 0x1C16D08
	0x0320A4D0 MOV X1, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x11D4000
	007 Move W8, [X22+616]
	008 Move W21, W2
	009 Move X19, X1
	010 Move X20, X0
	011 Move [X31+8], X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {78}
	016 Move X0, 0xEF2000
	017 Move X0, [X0+1888]
	018 Call 0x1C17CF4
	019 Move X0, 0xF18000
	020 Move X0, [X0+1944]
	021 Call 0x1C17CF4
	022 Move X0, 0xF18000
	023 Move X0, [X0+1952]
	024 Call 0x1C17CF4
	025 Move X0, 0xF18000
	026 Move X0, [X0+1960]
	027 Call 0x1C17CF4
	028 Move X0, 0xEF2000
	029 Move X0, [X0+2216]
	030 Call 0x1C17CF4
	031 Move X0, 0xF18000
	032 Move X0, [X0+1968]
	033 Call 0x1C17CF4
	034 Move X0, 0xF18000
	035 Move X0, [X0+1976]
	036 Call 0x1C17CF4
	037 Move X0, 0xF18000
	038 Move X0, [X0+1984]
	039 Call 0x1C17CF4
	040 Move X0, 0xEF4000
	041 Move X0, [X0+3784]
	042 Call 0x1C17CF4
	043 Move X0, 0xF18000
	044 Move X0, [X0+1992]
	045 Call 0x1C17CF4
	046 Move X0, 0xF18000
	047 Move X0, [X0+2000]
	048 Call 0x1C17CF4
	049 Move X0, 0xF18000
	050 Move X0, [X0+2008]
	051 Call 0x1C17CF4
	052 Move X0, 0xF18000
	053 Move X0, [X0+2016]
	054 Call 0x1C17CF4
	055 Move X0, 0xF18000
	056 Move X0, [X0+2024]
	057 Call 0x1C17CF4
	058 Move X0, 0xF18000
	059 Move X0, [X0+2032]
	060 Call 0x1C17CF4
	061 Move X0, 0xF18000
	062 Move X0, [X0+2040]
	063 Call 0x1C17CF4
	064 Move X0, 0xF18000
	065 Move X0, [X0+2048]
	066 Call 0x1C17CF4
	067 Move X0, 0xF18000
	068 Move X0, [X0+2056]
	069 Call 0x1C17CF4
	070 Move X0, 0xF18000
	071 Move X0, [X0+2064]
	072 Call 0x1C17CF4
	073 Move X0, 0xF18000
	074 Move X0, [X0+2072]
	075 Call 0x1C17CF4
	076 Move W8, 1
	077 Move [X22+616], W8
	078 Move W8, 6
	079 NotImplemented "Instruction MOVK not yet implemented."
	080 Add W9, W8, 5
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Add W8, W8, 16
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move W8, 37
	085 NotImplemented "Instruction MOVK not yet implemented."
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move W8, 66
	088 NotImplemented "Instruction MOVK not yet implemented."
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move W8, 45
	091 NotImplemented "Instruction MOVK not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move X0, X19
	094 Move X1, X31
	095 Call String.IsNullOrEmpty, X0
	096 Move TEMP, X21
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfNotEqual {271}
	100 Move TEMP, X0
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfNotEqual {285}
	104 Move X8, 0xF18000
	105 Move X8, [X8+1944]
	106 Move X0, [X8]
	107 Call 0x1C17F10
	108 Move X8, 0xF18000
	109 Move X8, [X8+2008]
	110 Move X20, X0
	111 Move X1, [X8]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move W8, 8
	114 NotImplemented "Instruction MOVK not yet implemented."
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move W8, 11
	117 NotImplemented "Instruction MOVK not yet implemented."
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X8, 0xEF2000
	120 Move X8, [X8+2216]
	121 Move X0, [X8]
	122 Call 0x1C17F10
	123 Move X1, X31
	124 Move X20, X0
	125 Call OperationCanceledException..ctor, X0
	126 Move W8, 20
	127 NotImplemented "Instruction MOVK not yet implemented."
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move W8, 22
	130 NotImplemented "Instruction MOVK not yet implemented."
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X8, 0xEF2000
	133 Move X8, [X8+1888]
	134 Move X0, [X8]
	135 Call 0x1C17F10
	136 Move X8, 0xEF4000
	137 Move X9, 0xF18000
	138 Move X8, [X8+3784]
	139 Move X9, [X9+2040]
	140 Move X3, X31
	141 Move X20, X0
	142 Move X1, [X8]
	143 Move X2, [X9]
	144 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	145 Move W8, 2
	146 NotImplemented "Instruction MOVK not yet implemented."
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move W8, 6
	149 NotImplemented "Instruction MOVK not yet implemented."
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move X0, X19
	152 Move X1, X31
	153 Call String.IsNullOrEmpty, X0
	154 Move TEMP, X0
	155 And TEMP, TEMP, 1
	156 Compare TEMP, 1
	157 JumpIfNotEqual {235}
	158 Add X0, X31, 8
	159 Call ErrorInfo.get_RawErrno, X0
	160 Move X8, 0xF18000
	161 Move X8, [X8+1960]
	162 Move W19, W0
	163 Move X8, [X8]
	164 Move X0, X8
	165 Call 0x1C17F10
	166 Move X8, 0xF18000
	167 Move X8, [X8+2000]
	168 Move X20, X0
	169 Move W2, W19
	170 Move X1, [X8]
	171 Move X0, X20
	172 Call Interop.GetIOException, X0
	173 Move X21, X0
	174 Move X0, X19
	175 Move X1, X31
	176 Call String.IsNullOrEmpty, X0
	177 Move TEMP, X0
	178 And TEMP, TEMP, 1
	179 Compare TEMP, 1
	180 JumpIfNotEqual {189}
	181 Move X8, 0xF18000
	182 Move X8, [X8+1976]
	183 Move X0, [X8]
	184 Call 0x1C17F10
	185 Move X8, 0xF18000
	186 Move X8, [X8+2016]
	187 Move X20, X0
	188 Move X1, [X8]
	189 Move X8, 0xF18000
	190 Move X8, [X8+2048]
	191 Move X1, X19
	192 Move X0, [X8]
	193 Call SR.Format, X0, X1
	194 Move X8, 0xF18000
	195 Move X8, [X8+1976]
	196 Move X19, X0
	197 Move X8, [X8]
	198 Move X0, X8
	199 Call 0x1C17F10
	200 Move X20, X0
	201 Move X1, X19
	202 Move X2, X21
	203 Move X3, X31
	204 Call UnauthorizedAccessException..ctor, X0, X1, X2
	205 Move X0, X19
	206 Move X1, X31
	207 Call String.IsNullOrEmpty, X0
	208 Move TEMP, X0
	209 And TEMP, TEMP, 1
	210 Compare TEMP, 1
	211 JumpIfNotEqual {237}
	212 Move X0, X20
	213 Move X20, [X31+32]
	214 Move X19, [X31+40]
	215 Move X22, [X31+16]
	216 Move X21, [X31+24]
	217 Move X30, [X31+48]
	218 Call Interop.GetIOException, X0
	219 Return X0
	220 Move X0, X19
	221 Move X1, X31
	222 Call String.IsNullOrEmpty, X0
	223 Move TEMP, X0
	224 And TEMP, TEMP, 1
	225 Compare TEMP, 1
	226 JumpIfNotEqual {256}
	227 Move X8, 0xF18000
	228 Move X8, [X8+1968]
	229 Move X0, [X8]
	230 Call 0x1C17F10
	231 Move X8, 0xF18000
	232 Move X8, [X8+2032]
	233 Move X20, X0
	234 Move X1, [X8]
	235 Move X8, 0xF18000
	236 Move X8, [X8+1992]
	237 Move X8, 0xF18000
	238 Move X8, [X8+2072]
	239 Move X0, [X8]
	240 Move X1, X19
	241 Call SR.Format, X0, X1
	242 Move X19, X0
	243 Add X0, X31, 8
	244 Call ErrorInfo.get_RawErrno, X0
	245 Move X8, 0xF18000
	246 Move X8, [X8+1960]
	247 Move W21, W0
	248 Move X8, [X8]
	249 Move X0, X8
	250 Call 0x1C17F10
	251 Move X20, X0
	252 Move X1, X19
	253 Move W2, W21
	254 Move X3, X31
	255 Call IOException..ctor, X0, X1, X2
	256 Move X8, 0xF18000
	257 Move X8, [X8+2056]
	258 Move X1, X19
	259 Move X0, [X8]
	260 Call SR.Format, X0, X1
	261 Move X8, 0xF18000
	262 Move X8, [X8+1968]
	263 Move X19, X0
	264 Move X8, [X8]
	265 Move X0, X8
	266 Call 0x1C17F10
	267 Move X20, X0
	268 Move X1, X19
	269 Move X2, X31
	270 Call PathTooLongException..ctor, X0, X1
	271 Move TEMP, X0
	272 And TEMP, TEMP, 1
	273 Compare TEMP, 1
	274 JumpIfNotEqual {300}
	275 Move X8, 0xF18000
	276 Move X8, [X8+1952]
	277 Move X0, [X8]
	278 Call 0x1C17F10
	279 Move X8, 0xF18000
	280 Move X8, [X8+2024]
	281 Move X2, X31
	282 Move X20, X0
	283 Move X1, [X8]
	284 Call FileNotFoundException..ctor, X0, X1
	285 Move X8, 0xF18000
	286 Move X8, [X8+2064]
	287 Move X1, X19
	288 Move X0, [X8]
	289 Call SR.Format, X0, X1
	290 Move X8, 0xF18000
	291 Move X8, [X8+1944]
	292 Move X19, X0
	293 Move X8, [X8]
	294 Move X0, X8
	295 Call 0x1C17F10
	296 Move X20, X0
	297 Move X1, X19
	298 Move X2, X31
	299 Call DirectoryNotFoundException..ctor, X0, X1
	300 Move X8, 0xF18000
	301 Move X8, [X8+1984]
	302 Move X1, X19
	303 Move X0, [X8]
	304 Call SR.Format, X0, X1
	305 Move X8, 0xF18000
	306 Move X8, [X8+1952]
	307 Move X21, X0
	308 Move X8, [X8]
	309 Move X0, X8
	310 Call 0x1C17F10
	311 Move X1, X21
	312 Move X2, X19
	313 Move X3, X31
	314 Move X20, X0
	315 Call FileNotFoundException..ctor, X0, X1, X2
	316 Move X0, X20
	317 Move X20, [X31+32]
	318 Move X19, [X31+40]
	319 Move X22, [X31+16]
	320 Move X21, [X31+24]
	321 Move X30, [X31+48]
	322 Return X0

Method: System.Exception GetIOException(Interop/ErrorInfo errorInfo)

Disassembly:
	0x0320A544 BL 0x33E14E4
	0x0320A548 CBNZ X20, 0x320A554
	0x0320A54C MOV X0, X21
	0x0320A550 BL 0x1D2C690
	0x0320A554 MOV X0, X20
	0x0320A558 BL 0x1C16F18
	0x0320A55C BL 0x1990590
	0x0320A560 STP X30, X21, [X31 - 0x20]!
	0x0320A564 STP X20, X19, [X31 + 0x10]
	0x0320A568 ADRP X20, 0x11D2000
	0x0320A56C ADRP X19, 0xEE9000
	0x0320A570 LDRB W8, [X20 + 0x27D]
	0x0320A574 LDR X19, [X19 + 0x6C0]
	0x0320A578 TBNZ X8, 0x0, 0x320A5CC
	0x0320A57C ADRP X0, 0xF17000
	0x0320A580 LDR X0, [X0 + 0x878]
	0x0320A584 BL 0x1C16CF4
	0x0320A588 ADRP X0, 0xF17000
	0x0320A58C LDR X0, [X0 + 0x880]
	0x0320A590 BL 0x1C16CF4
	0x0320A594 ADRP X0, 0xF12000
	0x0320A598 LDR X0, [X0 + 0x1B0]
	0x0320A59C BL 0x1C16CF4
	0x0320A5A0 ADRP X0, 0xEE9000
	0x0320A5A4 LDR X0, [X0 + 0x6C0]
	0x0320A5A8 BL 0x1C16CF4
	0x0320A5AC ADRP X0, 0xF17000
	0x0320A5B0 LDR X0, [X0 + 0x888]
	0x0320A5B4 BL 0x1C16CF4
	0x0320A5B8 ADRP X0, 0xF17000
	0x0320A5BC LDR X0, [X0 + 0x890]
	0x0320A5C0 BL 0x1C16CF4
	0x0320A5C4 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x11D3000
	007 Move [X31+8], X0
	008 Move X20, 0xF18000
	009 Move W8, [X19+617]
	010 Move X20, [X20+1960]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xF18000
	016 Move X0, [X0+1960]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+617], W8
	020 Add X0, X31, 8
	021 Call ErrorInfo.GetErrorMessage, X0
	022 Move X19, X0
	023 Add X0, X31, 8
	024 Call ErrorInfo.get_RawErrno, X0
	025 Move X8, [X20]
	026 Move W20, W0
	027 Move X0, X8
	028 Call 0x1C17F10
	029 Move X1, X19
	030 Move W2, W20
	031 Move X3, X31
	032 Move X21, X0
	033 Call IOException..ctor, X0, X1, X2
	034 Move X0, X21
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X30, [X31+16]
	038 Move X21, [X31+24]
	039 Add X31, X31, 48
	040 Return X0

Method: System.Void GetRandomBytes(System.Byte* buffer, System.Int32 length)

Disassembly:
	0x0320A698 RET
	0x0320A69C BL 0x1C16F20
	0x0320A6A0 MOV X0, X19
	0x0320A6A4 MOV X1, X20
	0x0320A6A8 BL 0x1C171E0
	0x0320A6AC SUB X31, X31, 0x30
	0x0320A6B0 STP X30, X21, [X31 + 0x10]
	0x0320A6B4 STP X20, X19, [X31 + 0x20]
	0x0320A6B8 ADRP X19, 0x11D2000
	0x0320A6BC ADRP X21, 0xF17000
	0x0320A6C0 LDRB W8, [X19 + 0x27C]
	0x0320A6C4 LDR X21, [X21 + 0x860]
	0x0320A6C8 MOV X20, X0
	0x0320A6CC TBNZ X8, 0x0, 0x320A6E4
	0x0320A6D0 ADRP X0, 0xF17000
	0x0320A6D4 LDR X0, [X0 + 0x860]
	0x0320A6D8 BL 0x1C16CF4
	0x0320A6DC MOVZ W8, 0x1
	0x0320A6E0 STRB W8, [X19 + 0x27C]
	0x0320A6E4 LDR X0, [X21]
	0x0320A6E8 LDR W8, [X0 + 0xE0]
	0x0320A6EC CBNZ W8, 0x320A6F8
	0x0320A6F0 BL 0x1C16DFC
	0x0320A6F4 LDR X0, [X21]
	0x0320A6F8 LDR X8, [X0 + 0xB8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x11D3000
	007 Move X22, 0xF15000
	008 Move W8, [X21+618]
	009 Move X22, [X22+3448]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xF15000
	017 Move X0, [X0+3448]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+618], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move W1, W19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Call 0x3EB2C70
	034 Return 

