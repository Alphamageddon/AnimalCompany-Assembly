Type: Mono.RuntimePropertyHandle

Method: System.Void .ctor(System.IntPtr v)

Disassembly:
	0x0320BD78 AND W8, W8, 0xFFFF
	0x0320BD7C CMP W8, 0x7

ISIL:
	001 Move [X0], X1
	002 Return 

Method: System.IntPtr get_Value()

Disassembly:
	0x0320BD80 B.CS 0x320BD14
	0x0320BD84 MOVZ W8, 0x1

ISIL:
	001 Move X0, [X0]
	002 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x0320BD88 LDP X20, X19, [X31 + 0x10]
	0x0320BD8C AND W0, W8, 0x1
	0x0320BD90 LDP X30, X21, [X31], #0x20
	0x0320BD94 RET
	0x0320BD98 MOV W8, W31
	0x0320BD9C B 0x320BD88
	0x0320BDA0 SUB W8, W1, 0x9
	0x0320BDA4 CMP W8, 0x2
	0x0320BDA8 CSET W8, CC
	0x0320BDAC CMP W1, 0xD
	0x0320BDB0 CSET W9, EQ
	0x0320BDB4 CMP W1, 0x20
	0x0320BDB8 ORR W8, W9, W8, 0x0
	0x0320BDBC CSET W9, EQ
	0x0320BDC0 ORR W0, W9, W8, 0x0
	0x0320BDC4 RET
	0x0320BDC8 MOV W1, W31
	0x0320BDCC B 0x320BDD0
	0x0320BDD0 STR X30, [X31 - 0x30]!
	0x0320BDD4 STP X22, X21, [X31 + 0x10]
	0x0320BDD8 STP X20, X19, [X31 + 0x20]
	0x0320BDDC MOV X19, X0
	0x0320BDE0 LDR X0, [X0 + 0x18]
	0x0320BDE4 CBZ X0, 0x320BE30
	0x0320BDE8 MOVZ X22, 0x2600
	0x0320BDEC MOV W20, W1
	0x0320BDF0 MOVZ W21, 0x1
	0x0320BDF4 MOVK X22, 0x1
	0x0320BDF8 LDR X8, [X0]
	0x0320BDFC LDP X9, X1, [X8 + 0x1B8]
	0x0320BE00 BLR X9
	0x0320BE04 CMP W0, 0x20
	0x0320BE08 B.HI 0x320BE34
	0x0320BE0C MOV W8, W0
	0x0320BE10 LSLV X8, X21, X8
	0x0320BE14 ANDS X31, X8, X22, 0x0
	0x0320BE18 B.EQ 0x320BE34
	0x0320BE1C MOV X0, X19
	0x0320BE20 BL 0x320BF3C
	0x0320BE24 LDR X0, [X19 + 0x18]
	0x0320BE28 MOV W20, W31
	0x0320BE2C CBNZ X0, 0x320BDF8
	0x0320BE30 BL 0x1C16F20
	0x0320BE34 TBNZ X20, 0x0, 0x320BE48
	0x0320BE38 LDP X20, X19, [X31 + 0x20]
	0x0320BE3C LDP X22, X21, [X31 + 0x10]
	0x0320BE40 LDR X30, [X31], #0x30
	0x0320BE44 RET
	0x0320BE48 ADRP X0, 0xF16000
	0x0320BE4C LDR X0, [X0 + 0x918]
	0x0320BE50 BL 0x1C16D08
	0x0320BE54 MOV X1, X0
	0x0320BE58 MOV X0, X19
	0x0320BE5C BL 0x320BA7C
	0x0320BE60 MOV X19, X0
	0x0320BE64 ADRP X0, 0xF16000
	0x0320BE68 LDR X0, [X0 + 0x920]
	0x0320BE6C BL 0x1C16D08
	0x0320BE70 MOV X1, X0
	0x0320BE74 MOV X0, X19
	0x0320BE78 BL 0x1C16DEC
	0x0320BE7C STR X30, [X31 - 0x30]!
	0x0320BE80 STP X22, X21, [X31 + 0x10]
	0x0320BE84 STP X20, X19, [X31 + 0x20]
	0x0320BE88 MOV X19, X0
	0x0320BE8C LDR X0, [X0 + 0x18]
	0x0320BE90 CBZ X0, 0x320BF38

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x11D2000
	009 Move W8, [X21+643]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xF17000
	017 Move X0, [X0+2232]
	018 Call 0x1C17CF4
	019 Move X0, 0xEE9000
	020 Move X0, [X0+1728]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+643], W8
	024 Compare X19, 0
	025 JumpIfEqual {56}
	026 Move X23, 0xF17000
	027 Move X23, [X23+2232]
	028 Move X8, [X20]
	029 Move X22, 0xEE9000
	030 Add X1, X31, 8
	031 Move X0, [X23]
	032 Move X22, [X22+1728]
	033 Move [X31+8], X8
	034 Call 0x1C17E04
	035 Move X1, X31
	036 Call "il2cpp_vm_object_is_inst", X0
	037 Move X21, X0
	038 Move X0, X19
	039 Move X1, X31
	040 Call "il2cpp_vm_object_is_inst", X0
	041 Move X8, [X22]
	042 Move X22, X0
	043 Move W9, [X8+224]
	044 Compare W9, 0
	045 JumpIfNotEqual {48}
	046 Move X0, X8
	047 Call 0x1C17DFC
	048 Move X0, X21
	049 Move X1, X22
	050 Move X2, X31
	051 Call Type.op_Inequality, X0, X1
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {57}
	056 Move W0, W31
	057 Move X8, [X19]
	058 Move X1, [X23]
	059 Move X8, [X8+64]
	060 Move X9, [X1+64]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X20, [X20]
	063 Move X0, X19
	064 Call 0x1C17E08
	065 Move X1, [X0]
	066 Move X0, X20
	067 Move X2, X31
	068 Call IntPtr.op_Equality, X0, X1
	069 Move X20, [X31+48]
	070 Move X19, [X31+56]
	071 Move X22, [X31+32]
	072 Move X21, [X31+40]
	073 Move X30, [X31+16]
	074 Move X23, [X31+24]
	075 And W0, W0, 1
	076 Add X31, X31, 64
	077 Return X0
	078 Move X0, X19
	079 Call 0x1C181E0

Method: System.Int32 GetHashCode()

Disassembly:
	0x0320BE94 MOVZ X22, 0x2600
	0x0320BE98 MOVZ W21, 0x1

ISIL:
	001 Move X1, X31
	002 Call IntPtr.GetHashCode, X0
	003 Return X0

