Type: Mono.Security.BitConverterLE

Method: System.Byte[] GetUIntBytes(System.Byte* bytes)

Disassembly:
	0x03217B2C B 0x3217B94
	0x03217B30 ADRP X0, 0xEE4000
	0x03217B34 LDR X0, [X0 + 0x578]
	0x03217B38 BL 0x1C16D08
	0x03217B3C BL 0x1C16F10
	0x03217B40 MOV X19, X0
	0x03217B44 ADRP X0, 0xF0A000
	0x03217B48 LDR X0, [X0 + 0xC48]
	0x03217B4C BL 0x1C16D08
	0x03217B50 MOV X1, X0
	0x03217B54 MOV X0, X19
	0x03217B58 MOV X2, X31
	0x03217B5C BL 0x3314A68
	0x03217B60 B 0x3217B94
	0x03217B64 ADRP X0, 0xF09000
	0x03217B68 LDR X0, [X0 + 0xCE0]
	0x03217B6C BL 0x1C16D08
	0x03217B70 BL 0x1C16F10
	0x03217B74 MOV X19, X0
	0x03217B78 ADRP X0, 0xF0A000
	0x03217B7C LDR X0, [X0 + 0xC68]
	0x03217B80 BL 0x1C16D08
	0x03217B84 MOV X1, X0
	0x03217B88 MOV X0, X19
	0x03217B8C MOV X2, X31
	0x03217B90 BL 0x3252170
	0x03217B94 ADRP X0, 0xF0A000
	0x03217B98 LDR X0, [X0 + 0xC70]
	0x03217B9C BL 0x1C16D08
	0x03217BA0 MOV X1, X0
	0x03217BA4 MOV X0, X19
	0x03217BA8 BL 0x1C16DEC
	0x03217BAC STR X30, [X31 - 0x20]!
	0x03217BB0 STP X20, X19, [X31 + 0x10]
	0x03217BB4 ADRP X20, 0x11C5000
	0x03217BB8 ADRP X19, 0xF0A000
	0x03217BBC LDRB W8, [X20 + 0x2D8]
	0x03217BC0 LDR X19, [X19 + 0xC78]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x11C6000
	006 Move X21, 0xEDD000
	007 Move W8, [X20+723]
	008 Move X21, [X21+1560]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xEDD000
	015 Move X0, [X0+1560]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+723], W8
	019 Move X0, [X21]
	020 Move W1, 4
	021 Call 0x1C17D6C
	022 Compare X0, 0
	023 JumpIfEqual {44}
	024 Move W8, [X0+24]
	025 Compare W8, 0
	026 JumpIfEqual {43}
	027 Move W9, [X19]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move [X0+32], W9
	030 Move W9, [X19+1]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move [X0+33], W9
	033 Move W9, [X19+2]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move [X0+34], W9
	036 Move W8, [X19+3]
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move [X0+35], W8
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Return X0
	043 Call 0x1C17F28
	044 Call 0x1C17F20

Method: System.Byte[] GetULongBytes(System.Byte* bytes)

Disassembly:
	0x03217BC4 TBNZ X8, 0x0, 0x3217BDC
	0x03217BC8 ADRP X0, 0xF0A000
	0x03217BCC LDR X0, [X0 + 0xC78]
	0x03217BD0 BL 0x1C16CF4
	0x03217BD4 MOVZ W8, 0x1
	0x03217BD8 STRB W8, [X20 + 0x2D8]
	0x03217BDC LDR X8, [X19]
	0x03217BE0 LDR X8, [X8 + 0xB8]
	0x03217BE4 LDR X0, [X8]
	0x03217BE8 CBNZ X0, 0x3217C08
	0x03217BEC BL 0x3256158
	0x03217BF0 LDR X8, [X19]
	0x03217BF4 LDR X8, [X8 + 0xB8]
	0x03217BF8 STR X0, [X8]
	0x03217BFC LDR X8, [X19]
	0x03217C00 LDR X8, [X8 + 0xB8]
	0x03217C04 LDR X0, [X8]
	0x03217C08 LDP X20, X19, [X31 + 0x10]
	0x03217C0C LDR X30, [X31], #0x20
	0x03217C10 RET
	0x03217C14 STP X30, X21, [X31 - 0x20]!
	0x03217C18 STP X20, X19, [X31 + 0x10]
	0x03217C1C ADRP X20, 0x11C5000
	0x03217C20 ADRP X21, 0xEDC000
	0x03217C24 LDRB W8, [X20 + 0x2D9]
	0x03217C28 LDR X21, [X21 + 0x618]
	0x03217C2C MOV W19, W0
	0x03217C30 TBNZ X8, 0x0, 0x3217C48
	0x03217C34 ADRP X0, 0xEDC000
	0x03217C38 LDR X0, [X0 + 0x618]
	0x03217C3C BL 0x1C16CF4
	0x03217C40 MOVZ W8, 0x1
	0x03217C44 STRB W8, [X20 + 0x2D9]
	0x03217C48 LDR X0, [X21]
	0x03217C4C MOV W1, W19
	0x03217C50 BL 0x1C16D6C
	0x03217C54 MOV X19, X0
	0x03217C58 BL 0x3217BAC
	0x03217C5C CBZ X0, 0x3217C80
	0x03217C60 LDR X8, [X0]
	0x03217C64 MOV X1, X19
	0x03217C68 LDP X9, X2, [X8 + 0x198]
	0x03217C6C BLR X9
	0x03217C70 MOV X0, X19
	0x03217C74 LDP X20, X19, [X31 + 0x10]
	0x03217C78 LDP X30, X21, [X31], #0x20
	0x03217C7C RET
	0x03217C80 BL 0x1C16F20
	0x03217C84 STP X30, X21, [X31 - 0x20]!
	0x03217C88 STP X20, X19, [X31 + 0x10]
	0x03217C8C ADRP X20, 0x11C5000
	0x03217C90 ADRP X21, 0xEDC000
	0x03217C94 LDRB W8, [X20 + 0x2DA]
	0x03217C98 LDR X21, [X21 + 0x618]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x11C6000
	006 Move X21, 0xEDD000
	007 Move W8, [X20+724]
	008 Move X21, [X21+1560]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xEDD000
	015 Move X0, [X0+1560]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+724], W8
	019 Move X0, [X21]
	020 Move W1, 8
	021 Call 0x1C17D6C
	022 Compare X0, 0
	023 JumpIfEqual {56}
	024 Move W8, [X0+24]
	025 Compare W8, 0
	026 JumpIfEqual {55}
	027 Move W9, [X19]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move [X0+32], W9
	030 Move W9, [X19+1]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move [X0+33], W9
	033 Move W9, [X19+2]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move [X0+34], W9
	036 Move W9, [X19+3]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move [X0+35], W9
	039 Move W9, [X19+4]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move [X0+36], W9
	042 Move W9, [X19+5]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move [X0+37], W9
	045 Move W9, [X19+6]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move [X0+38], W9
	048 Move W8, [X19+7]
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move [X0+39], W8
	052 Move X30, [X31+32]
	053 Move X21, [X31+40]
	054 Return X0
	055 Call 0x1C17F28
	056 Call 0x1C17F20

Method: System.Byte[] GetBytes(System.Single value)

Disassembly:
	0x03217C9C MOV W19, W0
	0x03217CA0 TBNZ X8, 0x0, 0x3217CB8
	0x03217CA4 ADRP X0, 0xEDC000
	0x03217CA8 LDR X0, [X0 + 0x618]
	0x03217CAC BL 0x1C16CF4
	0x03217CB0 MOVZ W8, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Add X0, X31, 12
	003 Move [X31+12], S0
	004 Call BitConverterLE.GetUIntBytes, X0
	005 Move X30, [X31+16]
	006 Return X0

Method: System.Byte[] GetBytes(System.Double value)

Disassembly:
	0x03217CB4 STRB W8, [X20 + 0x2DA]
	0x03217CB8 LDR X0, [X21]
	0x03217CBC MOV W1, W19
	0x03217CC0 BL 0x1C16D6C
	0x03217CC4 MOV X19, X0
	0x03217CC8 BL 0x3217BAC

ISIL:
	001 Move [X31-16], X30
	002 Add X0, X31, 8
	003 Move [X31+8], D0
	004 Call BitConverterLE.GetULongBytes, X0
	005 Move X30, [X31+16]
	006 Return X0

Method: System.Void UIntFromBytes(System.Byte* dst, System.Byte[] src, System.Int32 startIndex)

Disassembly:
	0x03217CCC CBZ X0, 0x3217CF0
	0x03217CD0 LDR X8, [X0]
	0x03217CD4 MOV X1, X19
	0x03217CD8 LDP X9, X2, [X8 + 0x198]
	0x03217CDC BLR X9
	0x03217CE0 MOV X0, X19
	0x03217CE4 LDP X20, X19, [X31 + 0x10]
	0x03217CE8 LDP X30, X21, [X31], #0x20
	0x03217CEC RET
	0x03217CF0 BL 0x1C16F20
	0x03217CF4 MOV X2, X31
	0x03217CF8 B 0x3217CFC
	0x03217CFC STP X30, X21, [X31 - 0x20]!
	0x03217D00 STP X20, X19, [X31 + 0x10]
	0x03217D04 MOV X21, X1
	0x03217D08 MOV X1, X31
	0x03217D0C MOV X19, X2
	0x03217D10 MOV X20, X0
	0x03217D14 BL 0x33BDD8C
	0x03217D18 CBZ X21, 0x3217D34
	0x03217D1C MOV X1, X21
	0x03217D20 BL 0x3217D7C
	0x03217D24 STP X0, X19, [X20 + 0x10]
	0x03217D28 LDP X20, X19, [X31 + 0x10]
	0x03217D2C LDP X30, X21, [X31], #0x20
	0x03217D30 RET
	0x03217D34 ADRP X0, 0xEE1000
	0x03217D38 LDR X0, [X0 + 0x528]
	0x03217D3C BL 0x1C16D08
	0x03217D40 BL 0x1C16F10
	0x03217D44 MOV X19, X0
	0x03217D48 ADRP X0, 0xF0A000
	0x03217D4C LDR X0, [X0 + 0xC80]

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {30}
	004 Move W8, [X1+24]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Add X8, X1, W2
	007 Move W8, [X8+32]
	008 Move [X0], W8
	009 Move W9, [X1+24]
	010 Add W8, W2, 1
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Add X8, X1, W8
	013 Move W8, [X8+32]
	014 Move [X0+1], W8
	015 Move W9, [X1+24]
	016 Add W8, W2, 2
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Add X8, X1, W8
	019 Move W8, [X8+32]
	020 Move [X0+2], W8
	021 Move W9, [X1+24]
	022 Add W8, W2, 3
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Add X8, X1, W8
	025 Move W8, [X8+32]
	026 Move [X0+3], W8
	027 Move X30, [X31+16]
	028 Return 
	029 Call 0x1C17F28
	030 Call 0x1C17F20

Method: System.Void ULongFromBytes(System.Byte* dst, System.Byte[] src, System.Int32 startIndex)

Disassembly:
	0x03217D50 BL 0x1C16D08
	0x03217D54 MOV X1, X0
	0x03217D58 MOV X0, X19
	0x03217D5C MOV X2, X31
	0x03217D60 BL 0x330E100
	0x03217D64 ADRP X0, 0xF0A000
	0x03217D68 LDR X0, [X0 + 0xC88]
	0x03217D6C BL 0x1C16D08
	0x03217D70 MOV X1, X0
	0x03217D74 MOV X0, X19
	0x03217D78 BL 0x1C16DEC
	0x03217D7C STP X30, X23, [X31 - 0x30]!
	0x03217D80 STP X22, X21, [X31 + 0x10]
	0x03217D84 STP X20, X19, [X31 + 0x20]
	0x03217D88 ADRP X20, 0x11C5000
	0x03217D8C LDRB W8, [X20 + 0x2E6]
	0x03217D90 MOV X19, X1
	0x03217D94 TBNZ X8, 0x0, 0x3217DAC
	0x03217D98 ADRP X0, 0xF0A000
	0x03217D9C LDR X0, [X0 + 0x4C8]
	0x03217DA0 BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {22}
	004 Move W9, W2
	005 Move X8, X31
	006 Move X10, X9
	007 ShiftRight X10, 32
	008 And X10, X10, 0x7FFFFFFF
	009 Move X11, 1
	010 Move W12, [X1+24]
	011 Add X13, X9, X8
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Add X12, X1, X10
	014 Move W12, [X12+32]
	015 Add X10, X10, X11
	016 Move [X0], W12
	017 Add X8, X8, 1
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move X30, [X31+16]
	020 Return 
	021 Call 0x1C17F28
	022 Call 0x1C17F20

Method: System.Single ToSingle(System.Byte[] value, System.Int32 startIndex)

Disassembly:
	0x03217DA4 MOVZ W8, 0x1
	0x03217DA8 STRB W8, [X20 + 0x2E6]
	0x03217DAC CBZ X19, 0x3217E10
	0x03217DB0 ADRP X8, 0xF0A000
	0x03217DB4 LDR X8, [X8 + 0x4C8]
	0x03217DB8 LDR W21, [X19 + 0x10]
	0x03217DBC LDP X22, X23, [X19 + 0x18]
	0x03217DC0 LDR X0, [X8]
	0x03217DC4 BL 0x1C16F10

ISIL:
	001 Move [X31-16], X30
	002 Move W2, W1
	003 Move X1, X0
	004 Add X0, X31, 12
	005 Move [X31+12], W31
	006 Call BitConverterLE.UIntFromBytes, X0, X1, X2
	007 Move V0, [X31+12]
	008 Move X30, [X31+16]
	009 Return V0

Method: System.Double ToDouble(System.Byte[] value, System.Int32 startIndex)

Disassembly:
	0x03217DC8 MOV W1, W21
	0x03217DCC MOV X2, X22
	0x03217DD0 MOV X3, X23
	0x03217DD4 MOV X4, X31
	0x03217DD8 MOV X20, X0
	0x03217DDC BL 0x3252580
	0x03217DE0 CBZ X20, 0x3217E10
	0x03217DE4 LDR W8, [X19 + 0x28]
	0x03217DE8 MOV X0, X20

ISIL:
	001 Move [X31-16], X30
	002 Move W2, W1
	003 Move X1, X0
	004 Add X0, X31, 8
	005 Move [X31+8], X31
	006 Call BitConverterLE.ULongFromBytes, X0, X1, X2
	007 Move V0, [X31+8]
	008 Move X30, [X31+16]
	009 Return V0

