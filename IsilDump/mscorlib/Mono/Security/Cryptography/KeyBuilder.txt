Type: Mono.Security.Cryptography.KeyBuilder

Method: System.Security.Cryptography.RandomNumberGenerator get_Rng()

Disassembly:
	0x03218BAC MOV X0, X20
	0x03218BB0 BL 0x3218CEC
	0x03218BB4 MOV X20, X31
	0x03218BB8 ADRP X10, 0xEDB000
	0x03218BBC LDR X8, [X19]
	0x03218BC0 LDR X10, [X10 + 0xE00]
	0x03218BC4 LDRH W9, [X8 + 0x12E]
	0x03218BC8 LDR X1, [X10]
	0x03218BCC CBZ X9, 0x3218BF0
	0x03218BD0 LDR X10, [X8 + 0xB0]
	0x03218BD4 ADD X10, X10, 0x8
	0x03218BD8 LDUR X11, [X10 - 0x8]
	0x03218BDC CMP X11, X1
	0x03218BE0 B.EQ 0x3218C00
	0x03218BE4 SUBS X9, X9, 0x1
	0x03218BE8 ADD X10, X10, 0x10
	0x03218BEC B.NE 0x3218BD8
	0x03218BF0 MOV X0, X19
	0x03218BF4 MOV W2, W31
	0x03218BF8 BL 0x1C5C788
	0x03218BFC B 0x3218C0C
	0x03218C00 LDRSW X9, [X10]
	0x03218C04 ADD X8, X8, X9, 0x4, LSL
	0x03218C08 ADD X0, X8, 0x138
	0x03218C0C LDP X8, X1, [X0]
	0x03218C10 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x11C5000
	005 Move X19, 0xF0A000
	006 Move W8, [X20+728]
	007 Move X19, [X19+3192]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xF0A000
	013 Move X0, [X0+3192]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+728], W8
	017 Move X8, [X19]
	018 Move X8, [X8+184]
	019 Move X0, [X8]
	020 Compare X0, 0
	021 JumpIfNotEqual {29}
	022 Call RandomNumberGenerator.Create
	023 Move X8, [X19]
	024 Move X8, [X8+184]
	025 Move [X8], X0
	026 Move X8, [X19]
	027 Move X8, [X8+184]
	028 Move X0, [X8]
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Return X0

Method: System.Byte[] Key(System.Int32 size)

Disassembly:
	0x03218C14 BLR X8
	0x03218C18 CBNZ X20, 0x3218C34
	0x03218C1C AND W0, W21, 0x1
	0x03218C20 LDP X20, X19, [X31 + 0x20]
	0x03218C24 LDP X22, X21, [X31 + 0x10]
	0x03218C28 LDR X30, [X31], #0x30
	0x03218C2C RET
	0x03218C30 BL 0x1C16F20
	0x03218C34 MOV X0, X20
	0x03218C38 BL 0x1C16F18
	0x03218C3C B 0x3218C40
	0x03218C40 MOV X22, X0
	0x03218C44 CMP W1, 0x1
	0x03218C48 B.NE 0x3218C64
	0x03218C4C MOV X0, X22
	0x03218C50 BL 0x3EB1AD0
	0x03218C54 LDR X20, [X0]
	0x03218C58 BL 0x3EB1AE0
	0x03218C5C CBNZ X19, 0x3218BB8
	0x03218C60 B 0x3218C18
	0x03218C64 MOV X20, X31
	0x03218C68 B 0x3218C70
	0x03218C6C MOV X22, X0
	0x03218C70 CBZ X19, 0x3218CD4
	0x03218C74 ADRP X10, 0xEDB000
	0x03218C78 LDR X8, [X19]
	0x03218C7C LDR X10, [X10 + 0xE00]
	0x03218C80 LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x11C5000
	006 Move X21, 0xEDC000
	007 Move W8, [X20+729]
	008 Move X21, [X21+1560]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xEDC000
	015 Move X0, [X0+1560]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+729], W8
	019 Move X0, [X21]
	020 Move W1, W19
	021 Call 0x1C17D6C
	022 Move X19, X0
	023 Call KeyBuilder.get_Rng
	024 Compare X0, 0
	025 JumpIfEqual {37}
	026 Move X8, [X0]
	027 Move X1, X19
	028 Move X9, [X8+408]
	029 Move X2, [X8+416]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move X0, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return X0
	037 Call 0x1C17F20

Method: System.Byte[] IV(System.Int32 size)

Disassembly:
	0x03218C84 LDR X1, [X10]
	0x03218C88 CBZ X9, 0x3218CAC
	0x03218C8C LDR X10, [X8 + 0xB0]
	0x03218C90 ADD X10, X10, 0x8
	0x03218C94 LDUR X11, [X10 - 0x8]
	0x03218C98 CMP X11, X1
	0x03218C9C B.EQ 0x3218CBC
	0x03218CA0 SUBS X9, X9, 0x1
	0x03218CA4 ADD X10, X10, 0x10
	0x03218CA8 B.NE 0x3218C94
	0x03218CAC MOV X0, X19
	0x03218CB0 MOV W2, W31
	0x03218CB4 BL 0x1C5C788
	0x03218CB8 B 0x3218CC8
	0x03218CBC LDRSW X9, [X10]
	0x03218CC0 ADD X8, X8, X9, 0x4, LSL
	0x03218CC4 ADD X0, X8, 0x138
	0x03218CC8 LDP X8, X1, [X0]
	0x03218CCC MOV X0, X19
	0x03218CD0 BLR X8
	0x03218CD4 CBNZ X20, 0x3218CE0
	0x03218CD8 MOV X0, X22
	0x03218CDC BL 0x1D2C690
	0x03218CE0 MOV X0, X20
	0x03218CE4 BL 0x1C16F18
	0x03218CE8 BL 0x1990590
	0x03218CEC STR X30, [X31 - 0x30]!
	0x03218CF0 STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x11C5000
	006 Move X21, 0xEDC000
	007 Move W8, [X20+730]
	008 Move X21, [X21+1560]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xEDC000
	015 Move X0, [X0+1560]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+730], W8
	019 Move X0, [X21]
	020 Move W1, W19
	021 Call 0x1C17D6C
	022 Move X19, X0
	023 Call KeyBuilder.get_Rng
	024 Compare X0, 0
	025 JumpIfEqual {37}
	026 Move X8, [X0]
	027 Move X1, X19
	028 Move X9, [X8+408]
	029 Move X2, [X8+416]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move X0, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return X0
	037 Call 0x1C17F20

