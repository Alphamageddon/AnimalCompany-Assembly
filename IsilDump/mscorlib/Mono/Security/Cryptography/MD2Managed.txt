Type: Mono.Security.Cryptography.MD2Managed

Method: System.Byte[] Padding(System.Int32 nLength)

Disassembly:
	0x0321A70C MOV X1, X20
	0x0321A710 LDR X9, [X8 + 0x238]
	0x0321A714 LDR X4, [X8 + 0x240]
	0x0321A718 MOV W2, W31
	0x0321A71C BLR X9
	0x0321A720 LDR X1, [X19 + 0x48]
	0x0321A724 LDR X2, [X19 + 0x28]
	0x0321A728 BL 0x321A758
	0x0321A72C LDR X8, [X19]
	0x0321A730 MOV X0, X19
	0x0321A734 LDR X9, [X8 + 0x258]
	0x0321A738 LDR X1, [X8 + 0x260]
	0x0321A73C BLR X9
	0x0321A740 LDR X0, [X19 + 0x48]
	0x0321A744 LDP X20, X19, [X31 + 0x10]
	0x0321A748 LDP X30, X21, [X31], #0x20
	0x0321A74C RET
	0x0321A750 BL 0x1C16F20
	0x0321A754 BL 0x1C16F28
	0x0321A758 STR X30, [X31 - 0x10]!
	0x0321A75C CBZ X1, 0x321A84C
	0x0321A760 LDR W10, [X1 + 0x18]
	0x0321A764 CMP W10, 0x1
	0x0321A768 B.LT 0x321A840
	0x0321A76C MOVZ W9, 0x3
	0x0321A770 MOVN W8, 0x0
	0x0321A774 CBZ X2, 0x321A84C
	0x0321A778 LDR W12, [X2 + 0x18]
	0x0321A77C ADD W11, W8, 0x1
	0x0321A780 CMP W11, W12
	0x0321A784 B.CS 0x321A848
	0x0321A788 SUB W12, W9, 0x3
	0x0321A78C CMP W12, W10
	0x0321A790 B.CS 0x321A848
	0x0321A794 ADD X10, X2, W11, 0x2, SXTW
	0x0321A798 LDR W13, [X10 + 0x20]!
	0x0321A79C ADD X14, X1, W12, SXTW
	0x0321A7A0 STRB W13, [X14 + 0x20]
	0x0321A7A4 LDR W13, [X2 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x11C3000
	005 Move W8, [X20+747]
	006 Move W19, W1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xEDA000
	012 Move X0, [X0+1560]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+747], W8
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move X8, 0xEDA000
	018 Move X8, [X8+1560]
	019 Move W1, W19
	020 Move X0, [X8]
	021 Call 0x1C17D6C
	022 Compare X0, 0
	023 JumpIfEqual {42}
	024 Move W8, [X0+24]
	025 Move X9, X8
	026 ShiftRight X9, 32
	027 And X9, X9, 0x7FFFFFFF
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X9, X31
	030 Move X10, W8
	031 Add X11, X0, 32
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move [X11], W19
	034 Add X9, X9, 1
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X0, X31
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Return X0
	041 Call 0x1C17F28
	042 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x0321A668 ADRP X21, 0xED9000
	0x0321A66C LDRB W8, [X20 + 0x2F2]
	0x0321A670 LDR X21, [X21 + 0x618]
	0x0321A674 MOV X19, X0
	0x0321A678 TBNZ X8, 0x0, 0x321A690
	0x0321A67C ADRP X0, 0xED9000
	0x0321A680 LDR X0, [X0 + 0x618]
	0x0321A684 BL 0x1C16CF4
	0x0321A688 MOVZ W8, 0x1
	0x0321A68C STRB W8, [X20 + 0x2F2]
	0x0321A690 LDR X0, [X21]
	0x0321A694 MOVZ W1, 0x8
	0x0321A698 BL 0x1C16D6C
	0x0321A69C LDR X2, [X19 + 0x38]
	0x0321A6A0 MOV X1, X0
	0x0321A6A4 MOV X20, X0
	0x0321A6A8 BL 0x321A758
	0x0321A6AC LDR X8, [X19 + 0x38]
	0x0321A6B0 CBZ X8, 0x321A750
	0x0321A6B4 LDR W9, [X8 + 0x18]
	0x0321A6B8 CBZ W9, 0x321A754
	0x0321A6BC LDR W8, [X8 + 0x20]
	0x0321A6C0 MOVZ W9, 0x78
	0x0321A6C4 MOVZ W10, 0x38
	0x0321A6C8 UBFM W8, W8, 0x3, 0x8
	0x0321A6CC CMP W8, 0x38
	0x0321A6D0 CSEL W9, W10, W9, CC
	0x0321A6D4 SUB W21, W9, W8
	0x0321A6D8 MOV W1, W21
	0x0321A6DC BL 0x321A850
	0x0321A6E0 LDR X8, [X19]
	0x0321A6E4 MOV X1, X0
	0x0321A6E8 MOV X0, X19
	0x0321A6EC MOV W2, W31
	0x0321A6F0 LDR X9, [X8 + 0x238]
	0x0321A6F4 LDR X4, [X8 + 0x240]
	0x0321A6F8 MOV W3, W21
	0x0321A6FC BLR X9
	0x0321A700 LDR X8, [X19]
	0x0321A704 MOVZ W3, 0x8
	0x0321A708 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x11C3000
	006 Move X20, 0xEDA000
	007 Move W8, [X21+748]
	008 Move X20, [X20+1560]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xEDA000
	015 Move X0, [X0+1560]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+748], W8
	019 Move X0, X19
	020 Move X1, X31
	021 Call HashAlgorithm..ctor, X0
	022 Move W8, 128
	023 Move [X19+20], W8
	024 Move X0, [X20]
	025 Move W1, 16
	026 Call 0x1C17D6C
	027 Move [X19+40], X0
	028 Move X0, [X20]
	029 Move W1, 16
	030 Call 0x1C17D6C
	031 Move [X19+48], X0
	032 Move X0, [X20]
	033 Move W1, 16
	034 Call 0x1C17D6C
	035 Move [X19+56], X0
	036 Move X0, [X20]
	037 Move W1, 48
	038 Call 0x1C17D6C
	039 Move X8, [X19]
	040 Move [X19+72], X0
	041 Move X0, X19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X2, [X8+600]
	045 Move X1, [X8+608]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 CallNoReturn X2

Method: System.Void Initialize()

Disassembly:
	0x0321A7A8 CMP W11, W13
	0x0321A7AC B.CS 0x321A848
	0x0321A7B0 LDR W13, [X1 + 0x18]
	0x0321A7B4 ADD W12, W12, 0x1
	0x0321A7B8 CMP W12, W13
	0x0321A7BC B.CS 0x321A848
	0x0321A7C0 LDR W13, [X10]
	0x0321A7C4 SUB W14, W9, 0x2
	0x0321A7C8 ADD X14, X1, W14, SXTW
	0x0321A7CC UBFM W13, W13, 0x8, 0x1F
	0x0321A7D0 STRB W13, [X14 + 0x20]
	0x0321A7D4 LDR W13, [X2 + 0x18]
	0x0321A7D8 CMP W11, W13
	0x0321A7DC B.CS 0x321A848
	0x0321A7E0 LDR W13, [X1 + 0x18]
	0x0321A7E4 ADD W11, W12, 0x1
	0x0321A7E8 CMP W11, W13
	0x0321A7EC B.CS 0x321A848
	0x0321A7F0 LDRH W12, [X10 + 0x2]
	0x0321A7F4 SUB W13, W9, 0x1
	0x0321A7F8 ADD X13, X1, W13, SXTW
	0x0321A7FC ADD W8, W8, 0x1
	0x0321A800 STRB W12, [X13 + 0x20]
	0x0321A804 LDR W12, [X2 + 0x18]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+40]
	005 Move W2, 16
	006 Move W1, W31
	007 Move X3, X31
	008 Move [X19+64], W31
	009 Call Array.Clear, X0, X1, X2
	010 Move X0, [X19+48]
	011 Move W2, 16
	012 Move W1, W31
	013 Move X3, X31
	014 Call Array.Clear, X0, X1, X2
	015 Move X0, [X19+56]
	016 Move W2, 16
	017 Move W1, W31
	018 Move X3, X31
	019 Call Array.Clear, X0, X1, X2
	020 Move X0, [X19+72]
	021 Move W2, 48
	022 Move W1, W31
	023 Move X3, X31
	024 Move X30, [X31+16]
	025 Move X19, [X31+24]
	026 Call Array.Clear, X0, X1, X2
	027 Return 

Method: System.Void HashCore(System.Byte[] array, System.Int32 ibStart, System.Int32 cbSize)

Disassembly:
	0x0321A808 CMP W8, W12
	0x0321A80C B.CS 0x321A848
	0x0321A810 LDR W12, [X1 + 0x18]
	0x0321A814 ADD W11, W11, 0x1
	0x0321A818 CMP W11, W12
	0x0321A81C B.CS 0x321A848
	0x0321A820 LDRB W10, [X10 + 0x3]
	0x0321A824 ADD X12, X1, W9, SXTW
	0x0321A828 ADD W11, W11, 0x1
	0x0321A82C ADD W9, W9, 0x4
	0x0321A830 STRB W10, [X12 + 0x20]
	0x0321A834 LDR W10, [X1 + 0x18]
	0x0321A838 CMP W11, W10
	0x0321A83C B.LT 0x321A774
	0x0321A840 LDR X30, [X31], #0x10
	0x0321A844 RET
	0x0321A848 BL 0x1C16F28
	0x0321A84C BL 0x1C16F20
	0x0321A850 STR X30, [X31 - 0x20]!
	0x0321A854 STP X20, X19, [X31 + 0x10]
	0x0321A858 ADRP X20, 0x11C2000
	0x0321A85C LDRB W8, [X20 + 0x2F3]
	0x0321A860 MOV W19, W1
	0x0321A864 TBNZ X8, 0x0, 0x321A87C
	0x0321A868 ADRP X0, 0xED9000
	0x0321A86C LDR X0, [X0 + 0x618]
	0x0321A870 BL 0x1C16CF4
	0x0321A874 MOVZ W8, 0x1
	0x0321A878 STRB W8, [X20 + 0x2F3]
	0x0321A87C CMP W19, 0x1
	0x0321A880 B.LT 0x321A8B0
	0x0321A884 ADRP X8, 0xED9000
	0x0321A888 LDR X8, [X8 + 0x618]
	0x0321A88C MOV W1, W19
	0x0321A890 LDR X0, [X8]
	0x0321A894 BL 0x1C16D6C
	0x0321A898 CBZ X0, 0x321A8C0
	0x0321A89C LDR W8, [X0 + 0x18]
	0x0321A8A0 CBZ W8, 0x321A8C4
	0x0321A8A4 MOVZ W8, 0x80
	0x0321A8A8 STRB W8, [X0 + 0x20]
	0x0321A8AC B 0x321A8B4
	0x0321A8B0 MOV X0, X31
	0x0321A8B4 LDP X20, X19, [X31 + 0x10]
	0x0321A8B8 LDR X30, [X31], #0x20
	0x0321A8BC RET
	0x0321A8C0 BL 0x1C16F20
	0x0321A8C4 BL 0x1C16F28
	0x0321A8C8 AND W8, W2, W1, 0x0
	0x0321A8CC BIC W9, W3, W1, 0x0
	0x0321A8D0 ORR W0, W9, W8, 0x0
	0x0321A8D4 RET
	0x0321A8D8 ORR W8, W3, W2, 0x0
	0x0321A8DC AND W8, W8, W1, 0x0
	0x0321A8E0 AND W9, W3, W2, 0x0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move W23, [X0+64]
	009 Move W8, 16
	010 Move W20, W3
	011 Move W21, W2
	012 Add W9, W23, W3
	013 Subtract W24, W8, W23
	014 Move X19, X1
	015 Move X22, X0
	016 And W8, W9, 15
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move [X0+64], W8
	019 Move W24, W31
	020 Move X2, [X22+56]
	021 Move X0, X19
	022 Move W1, W21
	023 Move W3, W23
	024 Move W4, W24
	025 Move X5, X31
	026 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	027 Move X1, [X22+40]
	028 Move X2, [X22+48]
	029 Move X3, [X22+56]
	030 Move X0, X22
	031 Move W4, W31
	032 Call MD2Managed.MD2Transform, X0, X1, X2, X3, X4
	033 Move W8, 31
	034 Subtract W8, W8, W23
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X1, [X22+40]
	037 Move X2, [X22+48]
	038 Add W4, W21, W24
	039 Move X0, X22
	040 Move X3, X19
	041 Call MD2Managed.MD2Transform, X0, X1, X2, X3, X4
	042 Add W8, W24, 31
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Add W24, W24, 16
	045 Move W23, W31
	046 Move X2, [X22+56]
	047 Add W1, W24, W21
	048 Subtract W4, W20, W24
	049 Move X0, X19
	050 Move W3, W23
	051 Move X20, [X31+48]
	052 Move X19, [X31+56]
	053 Move X22, [X31+32]
	054 Move X21, [X31+40]
	055 Move X24, [X31+16]
	056 Move X23, [X31+24]
	057 Move X5, X31
	058 Move X30, [X31+64]
	059 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	060 Return 

Method: System.Byte[] HashFinal()

Disassembly:
	0x0321AB48 LDR X0, [X24]
	0x0321AB4C LDR X8, [X21 + 0x38]
	0x0321AB50 LDR W9, [X0 + 0xE0]
	0x0321AB54 LDR X23, [X8]
	0x0321AB58 CBNZ W9, 0x321AB60
	0x0321AB5C BL 0x1C16DFC
	0x0321AB60 MOV X0, X23
	0x0321AB64 MOV X1, X31
	0x0321AB68 BL 0x338C698
	0x0321AB6C ADRP X8, 0xF00000
	0x0321AB70 LDR X8, [X8 + 0xD70]
	0x0321AB74 MOV X23, X0
	0x0321AB78 MOV X1, X31
	0x0321AB7C LDR X8, [X8]
	0x0321AB80 MOV X0, X8
	0x0321AB84 BL 0x338C698
	0x0321AB88 MOV X1, X0
	0x0321AB8C MOV X0, X23
	0x0321AB90 MOV X2, X31
	0x0321AB94 BL 0x3395194
	0x0321AB98 LDR X8, [X21 + 0x38]
	0x0321AB9C MOV W23, W0
	0x0321ABA0 MOV X0, X22
	0x0321ABA4 MOV X1, X19
	0x0321ABA8 LDR X2, [X8 + 0x10]
	0x0321ABAC BL 0x2218CF0
	0x0321ABB0 TBZ X23, 0x0, 0x321ABD4
	0x0321ABB4 AND W1, W20, 0xFF
	0x0321ABB8 MOV W2, W19
	0x0321ABBC LDP X20, X19, [X31 + 0x30]
	0x0321ABC0 LDP X22, X21, [X31 + 0x20]
	0x0321ABC4 LDP X24, X23, [X31 + 0x10]
	0x0321ABC8 MOV X3, X31
	0x0321ABCC LDR X30, [X31], #0x40
	0x0321ABD0 B 0x3391718
	0x0321ABD4 LDR X8, [X21 + 0x38]
	0x0321ABD8 MOV W1, W20
	0x0321ABDC MOV W2, W19
	0x0321ABE0 LDP X20, X19, [X31 + 0x30]
	0x0321ABE4 LDR X3, [X8 + 0x38]
	0x0321ABE8 LDP X22, X21, [X31 + 0x20]
	0x0321ABEC LDP X24, X23, [X31 + 0x10]
	0x0321ABF0 LDR X30, [X31], #0x40
	0x0321ABF4 B 0x22570F8
	0x0321ABF8 STR X30, [X31 - 0x10]!
	0x0321ABFC CBZ X0, 0x321AC80
	0x0321AC00 CBZ X1, 0x321AC80
	0x0321AC04 LDR W8, [X0 + 0x18]
	0x0321AC08 LDR W9, [X1 + 0x18]
	0x0321AC0C CMP W8, W9
	0x0321AC10 B.NE 0x321AC64
	0x0321AC14 CMP W8, 0x1
	0x0321AC18 B.LT 0x321AC6C
	0x0321AC1C MOV W10, W31
	0x0321AC20 SUB W9, W31, W8
	0x0321AC24 ADDS W31, W9, W10
	0x0321AC28 B.EQ 0x321AC7C
	0x0321AC2C SXTW X10, W10
	0x0321AC30 ADD X8, X0, X10
	0x0321AC34 ADD X12, X1, X10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x11C3000
	005 Move W8, [X20+749]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xEDA000
	012 Move X0, [X0+1560]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+749], W8
	016 Move W8, [X19+64]
	017 Move W9, 16
	018 Subtract W20, W9, W8
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move W1, W20
	021 Call MD2Managed.Padding, X0, X1
	022 Move X8, [X19]
	023 Move X1, X0
	024 Move X0, X19
	025 Move W2, W31
	026 Move X9, [X8+568]
	027 Move X4, [X8+576]
	028 Move W3, W20
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Move X8, [X19]
	031 Move X1, [X19+48]
	032 Move W3, 16
	033 Move X0, X19
	034 Move X9, [X8+568]
	035 Move X4, [X8+576]
	036 Move W2, W31
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move X0, [X19+40]
	039 Compare X0, 0
	040 JumpIfEqual {67}
	041 Move X1, X31
	042 Call Array.Clone, X0
	043 Move X8, [X19]
	044 Move X20, X0
	045 Move X0, X19
	046 Move X9, [X8+600]
	047 Move X1, [X8+608]
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Compare X20, 0
	050 JumpIfEqual {62}
	051 Move X8, 0xEDA000
	052 Move X8, [X8+1560]
	053 Move X0, X20
	054 Move X19, [X8]
	055 Move X1, X19
	056 Call 0x1C17E00
	057 Compare X0, 0
	058 JumpIfNotEqual {63}
	059 Move X0, X20
	060 Move X1, X19
	061 Call 0x1C181E0
	062 Move X0, X31
	063 Move X20, [X31+16]
	064 Move X19, [X31+24]
	065 Move X30, [X31+32]
	066 Return X0
	067 Call 0x1C17F20

Method: System.Void MD2Transform(System.Byte[] state, System.Byte[] checksum, System.Byte[] block, System.Int32 index)

Disassembly:
	0x0321A8E4 ORR W0, W8, W9, 0x0
	0x0321A8E8 RET
	0x0321A8EC EOR W8, W2, W1, 0x0
	0x0321A8F0 EOR W0, W8, W3, 0x0
	0x0321A8F4 RET
	0x0321A8F8 SUB W8, W31, W2
	0x0321A8FC RORV W0, W1, W8
	0x0321A900 RET
	0x0321A904 LDR W8, [X1]
	0x0321A908 AND W9, W3, W2, 0x0
	0x0321A90C BIC W10, W4, W2, 0x0
	0x0321A910 ORR W9, W10, W9, 0x0
	0x0321A914 ADD W9, W9, W5
	0x0321A918 ADD W8, W9, W8
	0x0321A91C SUB W9, W31, W6
	0x0321A920 RORV W8, W8, W9
	0x0321A924 STR W8, [X1]
	0x0321A928 RET
	0x0321A92C LDR W8, [X1]
	0x0321A930 ORR W9, W4, W3, 0x0
	0x0321A934 AND W10, W4, W3, 0x0
	0x0321A938 AND W9, W9, W2, 0x0
	0x0321A93C ORR W9, W9, W10, 0x0
	0x0321A940 MOVZ W11, 0x7999
	0x0321A944 ADD W9, W5, W9
	0x0321A948 MOVK W11, 0x5A820000
	0x0321A94C ADD W8, W9, W8
	0x0321A950 ADD W8, W8, W11
	0x0321A954 SUB W9, W31, W6
	0x0321A958 RORV W8, W8, W9
	0x0321A95C STR W8, [X1]
	0x0321A960 RET
	0x0321A964 LDR W8, [X1]
	0x0321A968 EOR W9, W3, W2, 0x0
	0x0321A96C EOR W9, W9, W4, 0x0
	0x0321A970 MOVZ W10, 0xEBA1
	0x0321A974 ADD W9, W5, W9
	0x0321A978 MOVK W10, 0x6ED90000
	0x0321A97C ADD W8, W9, W8
	0x0321A980 ADD W8, W8, W10
	0x0321A984 SUB W9, W31, W6
	0x0321A988 RORV W8, W8, W9
	0x0321A98C STR W8, [X1]
	0x0321A990 RET
	0x0321A994 STR X30, [X31 - 0x10]!
	0x0321A998 CBZ X1, 0x321AA58
	0x0321A99C LDR W12, [X1 + 0x18]
	0x0321A9A0 UBFM X8, X12, 0x20, 0x1F
	0x0321A9A4 CMP X8, 0x1
	0x0321A9A8 B.LT 0x321AA4C
	0x0321A9AC MOV X8, X31
	0x0321A9B0 MOV W9, W3
	0x0321A9B4 SXTW X10, W12
	0x0321A9B8 ADD X11, X1, 0x20
	0x0321A9BC UBFM X12, X12, 0x3E, 0x3D
	0x0321A9C0 CBZ X2, 0x321AA58
	0x0321A9C4 LDR W14, [X2 + 0x18]
	0x0321A9C8 ADD X13, X9, X8
	0x0321A9CC CMP W13, W14
	0x0321A9D0 B.CS 0x321AA54
	0x0321A9D4 ADD X15, X13, 0x1
	0x0321A9D8 CMP W15, W14
	0x0321A9DC B.CS 0x321AA54
	0x0321A9E0 ADD X15, X15, 0x1
	0x0321A9E4 CMP W15, W14
	0x0321A9E8 B.CS 0x321AA54
	0x0321A9EC ADD W15, W15, 0x1
	0x0321A9F0 CMP W15, W14
	0x0321A9F4 B.CS 0x321AA54
	0x0321A9F8 CMP X12, X8
	0x0321A9FC B.EQ 0x321AA54
	0x0321AA00 ADD X14, X9, X8
	0x0321AA04 ADD X17, X14, 0x1
	0x0321AA08 ADD X13, X2, W13, SXTW
	0x0321AA0C ADD X17, X2, W17, SXTW
	0x0321AA10 ADD X15, X9, X8
	0x0321AA14 ADD X16, X2, 0x20
	0x0321AA18 LDRB W13, [X13 + 0x20]
	0x0321AA1C ADD X14, X14, 0x2
	0x0321AA20 LDRB W17, [X17 + 0x20]
	0x0321AA24 ADD X15, X15, 0x3
	0x0321AA28 LDRB W14, [X16, W14, SXTW]
	0x0321AA2C LDRB W15, [X16, W15, SXTW]
	0x0321AA30 BFM W13, W17, 0x18, 0x7
	0x0321AA34 SUBS X10, X10, 0x1
	0x0321AA38 BFM W13, W14, 0x10, 0x7
	0x0321AA3C BFM W13, W15, 0x8, 0x7
	0x0321AA40 STR W13, [X11, X8, LSL]
	0x0321AA44 ADD X8, X8, 0x4
	0x0321AA48 B.NE 0x321A9C0
	0x0321AA4C LDR X30, [X31], #0x10
	0x0321AA50 RET
	0x0321AA54 BL 0x1C16F28
	0x0321AA58 BL 0x1C16F20
	0x0321AA5C STR X30, [X31 - 0x40]!
	0x0321AA60 STP X24, X23, [X31 + 0x10]
	0x0321AA64 STP X22, X21, [X31 + 0x20]
	0x0321AA68 STP X20, X19, [X31 + 0x30]
	0x0321AA6C LDR X8, [X3 + 0x38]
	0x0321AA70 MOV X21, X3
	0x0321AA74 MOV W20, W2
	0x0321AA78 MOV X19, X1
	0x0321AA7C MOV X22, X0
	0x0321AA80 CBNZ X8, 0x321AABC
	0x0321AA84 ADRP X0, 0xF00000
	0x0321AA88 LDR X0, [X0 + 0xD68]
	0x0321AA8C BL 0x1C16CF4
	0x0321AA90 ADRP X0, 0xF00000
	0x0321AA94 LDR X0, [X0 + 0xD70]
	0x0321AA98 BL 0x1C16CF4
	0x0321AA9C ADRP X0, 0xED9000
	0x0321AAA0 LDR X0, [X0 + 0x6C0]
	0x0321AAA4 BL 0x1C16CF4
	0x0321AAA8 LDR X8, [X21 + 0x38]
	0x0321AAAC CBNZ X8, 0x321AABC
	0x0321AAB0 MOV X0, X21
	0x0321AAB4 BL 0x1C5C6E0
	0x0321AAB8 LDR X8, [X21 + 0x38]
	0x0321AABC ADRP X24, 0xED9000
	0x0321AAC0 LDR X24, [X24 + 0x6C0]
	0x0321AAC4 LDR X23, [X8]
	0x0321AAC8 LDR X0, [X24]
	0x0321AACC LDR W9, [X0 + 0xE0]
	0x0321AAD0 CBNZ W9, 0x321AAD8
	0x0321AAD4 BL 0x1C16DFC
	0x0321AAD8 MOV X0, X23
	0x0321AADC MOV X1, X31
	0x0321AAE0 BL 0x338C698
	0x0321AAE4 ADRP X8, 0xF00000
	0x0321AAE8 LDR X8, [X8 + 0xD68]
	0x0321AAEC MOV X23, X0
	0x0321AAF0 MOV X1, X31
	0x0321AAF4 LDR X8, [X8]
	0x0321AAF8 MOV X0, X8
	0x0321AAFC BL 0x338C698
	0x0321AB00 MOV X1, X0
	0x0321AB04 MOV X0, X23
	0x0321AB08 MOV X2, X31
	0x0321AB0C BL 0x3395194
	0x0321AB10 TBZ X0, 0x0, 0x321AB48
	0x0321AB14 LDR X8, [X21 + 0x38]
	0x0321AB18 MOV X0, X22
	0x0321AB1C MOV X1, X19
	0x0321AB20 LDR X2, [X8 + 0x10]
	0x0321AB24 BL 0x2218CF0
	0x0321AB28 MOV W1, W20
	0x0321AB2C MOV W2, W19
	0x0321AB30 LDP X20, X19, [X31 + 0x30]
	0x0321AB34 LDP X22, X21, [X31 + 0x20]
	0x0321AB38 LDP X24, X23, [X31 + 0x10]
	0x0321AB3C MOV X3, X31
	0x0321AB40 LDR X30, [X31], #0x40
	0x0321AB44 B 0x3390DC0

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X24, 0x11C3000
	014 Move W8, [X24+750]
	015 Move W23, W4
	016 Move X19, X3
	017 Move X20, X2
	018 Move X21, X1
	019 Move X22, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0xF08000
	025 Move X0, [X0+3392]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X24+750], W8
	029 Move X2, [X22+72]
	030 Move W4, 16
	031 Move X0, X21
	032 Move W1, W31
	033 Move W3, W31
	034 Move X5, X31
	035 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	036 Move X2, [X22+72]
	037 Move W3, 16
	038 Move W4, 16
	039 Move X0, X19
	040 Move W1, W23
	041 Move X5, X31
	042 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	043 Compare X21, 0
	044 JumpIfEqual {167}
	045 Move X24, 0xF08000
	046 Move X24, [X24+3392]
	047 Move X8, X31
	048 Move W23, W23
	049 Add X9, X21, 32
	050 Move W10, [X21+24]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Compare X19, 0
	053 JumpIfEqual {167}
	054 Move W11, [X19+24]
	055 Add X10, X23, X8
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X11, [X22+72]
	058 Compare X11, 0
	059 JumpIfEqual {167}
	060 Move W13, [X11+24]
	061 Add X12, X8, 32
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Add X10, X19, W10
	064 Move W13, [X9]
	065 Move W10, [X10+32]
	066 Add X11, X11, X8
	067 Subtract X8, X12, 31
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Xor W10, W10, W13
	070 Move [X11+64], W10
	071 Move W26, W31
	072 Move W25, W31
	073 Move X27, X31
	074 Move X8, [X22+72]
	075 Compare X8, 0
	076 JumpIfEqual {167}
	077 Move W9, [X8+24]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move X0, [X24]
	080 Add X28, X8, X27
	081 Move W29, [X28+32]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {87}
	085 Call 0x1C17DFC
	086 Move X0, [X24]
	087 Move X8, [X0+184]
	088 Move X8, [X8]
	089 Compare X8, 0
	090 JumpIfEqual {167}
	091 Move W9, [X8+24]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Add X8, X8, W26
	094 Move W8, [X8+32]
	095 Add X27, X27, 1
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Xor W8, W8, W29
	098 And W26, W8, 255
	099 Move [X28+32], W8
	100 Add W8, W25, W26
	101 Add W25, W25, 1
	102 NotImplemented "Instruction CMP not yet implemented."
	103 And W26, W8, 255
	104 Move X0, [X22+72]
	105 Move W4, 16
	106 Move W1, W31
	107 Move X2, X21
	108 Move W3, W31
	109 Move X5, X31
	110 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	111 Compare X20, 0
	112 JumpIfEqual {167}
	113 Move X8, [X20+24]
	114 NotImplemented "Instruction CMP not yet implemented."
	115 And X8, X8, 0
	116 Compare X8, 0
	117 JumpIfEqual {153}
	118 Move W27, [X20+47]
	119 Move X21, X31
	120 Add X22, X20, 32
	121 Move X25, X23
	122 ShiftRight X25, 32
	123 And X25, X25, 0x7FFFFFFF
	124 Move X26, 1
	125 Move X0, [X24]
	126 Move W28, [X22]
	127 Move W8, [X0+224]
	128 Compare W8, 0
	129 JumpIfNotEqual {132}
	130 Call 0x1C17DFC
	131 Move X0, [X24]
	132 Move W8, [X19+24]
	133 Add X9, X23, X21
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move X8, [X0+184]
	136 Move X8, [X8]
	137 Compare X8, 0
	138 JumpIfEqual {167}
	139 Add X9, X19, X25
	140 Move W9, [X9+32]
	141 Move W10, [X8+24]
	142 Xor W9, W9, W27
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Add X8, X8, W9
	145 Move W8, [X8+32]
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Xor W27, W8, W28
	148 Move [X22], W27
	149 Move W8, [X20+24]
	150 Add X21, X21, 1
	151 Add X25, X25, X26
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Call 0x1C17F28
	154 Move X20, [X31+80]
	155 Move X19, [X31+88]
	156 Move X22, [X31+64]
	157 Move X21, [X31+72]
	158 Move X24, [X31+48]
	159 Move X23, [X31+56]
	160 Move X26, [X31+32]
	161 Move X25, [X31+40]
	162 Move X28, [X31+16]
	163 Move X27, [X31+24]
	164 Move X29, [X31+96]
	165 Move X30, [X31+104]
	166 Return 
	167 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x0321AC38 LDRB W11, [X8 + 0x20]
	0x0321AC3C LDRB W12, [X12 + 0x20]
	0x0321AC40 ADD W13, W9, W10
	0x0321AC44 CMP W11, W12
	0x0321AC48 CSET W8, EQ
	0x0321AC4C ADDS W31, W13, 0x1
	0x0321AC50 B.EQ 0x321AC70
	0x0321AC54 CMP W11, W12
	0x0321AC58 ADD W10, W10, 0x1
	0x0321AC5C B.EQ 0x321AC24
	0x0321AC60 B 0x321AC70
	0x0321AC64 MOV W8, W31
	0x0321AC68 B 0x321AC70
	0x0321AC6C MOVZ W8, 0x1
	0x0321AC70 MOV W0, W8
	0x0321AC74 LDR X30, [X31], #0x10
	0x0321AC78 RET
	0x0321AC7C BL 0x1C16F28
	0x0321AC80 BL 0x1C16F20
	0x0321AC84 STR X30, [X31 - 0x30]!
	0x0321AC88 STP X22, X21, [X31 + 0x10]
	0x0321AC8C STP X20, X19, [X31 + 0x20]
	0x0321AC90 ADRP X21, 0x11C2000
	0x0321AC94 ADRP X22, 0xED9000
	0x0321AC98 LDRB W8, [X21 + 0x2F5]
	0x0321AC9C LDR X22, [X22 + 0x618]
	0x0321ACA0 MOV W20, W1
	0x0321ACA4 MOV X19, X0
	0x0321ACA8 TBNZ X8, 0x0, 0x321ACC0
	0x0321ACAC ADRP X0, 0xED9000
	0x0321ACB0 LDR X0, [X0 + 0x618]
	0x0321ACB4 BL 0x1C16CF4
	0x0321ACB8 MOVZ W8, 0x1
	0x0321ACBC STRB W8, [X21 + 0x2F5]
	0x0321ACC0 LDR X0, [X22]
	0x0321ACC4 MOV W1, W20
	0x0321ACC8 BL 0x1C16D6C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x11C3000
	007 Move X22, 0xEDA000
	008 Move X19, 0xF08000
	009 Move X20, 0xF08000
	010 Move W8, [X21+751]
	011 Move X22, [X22+1560]
	012 Move X19, [X19+3400]
	013 Move X20, [X20+3392]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xEDA000
	019 Move X0, [X0+1560]
	020 Call 0x1C17CF4
	021 Move X0, 0xF08000
	022 Move X0, [X0+3392]
	023 Call 0x1C17CF4
	024 Move X0, 0xF08000
	025 Move X0, [X0+3400]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+751], W8
	029 Move X0, [X22]
	030 Move W1, 256
	031 Call 0x1C17D6C
	032 Move X1, [X19]
	033 Move X2, X31
	034 Move X19, X0
	035 Call RuntimeHelpers.InitializeArray, X0, X1
	036 Move X8, [X20]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X8, [X8+184]
	040 Move [X8], X19
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X30, [X31+48]
	044 Return 

