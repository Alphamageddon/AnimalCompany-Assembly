Type: Mono.Security.Cryptography.MD4

Method: System.Void .ctor()

Disassembly:
	0x0321ACCC CBZ X0, 0x321AD0C
	0x0321ACD0 CBZ X19, 0x321AD0C
	0x0321ACD4 LDR W8, [X0 + 0x18]
	0x0321ACD8 LDR W4, [X19 + 0x18]
	0x0321ACDC MOV X20, X0
	0x0321ACE0 MOV X0, X19
	0x0321ACE4 MOV W1, W31
	0x0321ACE8 SUB W3, W8, W4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call HashAlgorithm..ctor, X0
	006 Move W8, 128
	007 Move [X19+20], W8
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Return 

Method: Mono.Security.Cryptography.MD4 Create()

Disassembly:
	0x0321ACEC MOV X2, X20
	0x0321ACF0 MOV X5, X31
	0x0321ACF4 BL 0x33A8A9C
	0x0321ACF8 MOV X0, X20
	0x0321ACFC LDP X20, X19, [X31 + 0x20]
	0x0321AD00 LDP X22, X21, [X31 + 0x10]
	0x0321AD04 LDR X30, [X31], #0x30
	0x0321AD08 RET
	0x0321AD0C BL 0x1C16F20
	0x0321AD10 STP X30, X21, [X31 - 0x20]!
	0x0321AD14 STP X20, X19, [X31 + 0x10]
	0x0321AD18 ADRP X20, 0x11C2000
	0x0321AD1C LDRB W8, [X20 + 0x2F6]
	0x0321AD20 MOV X19, X0
	0x0321AD24 TBNZ X8, 0x0, 0x321AD3C
	0x0321AD28 ADRP X0, 0xED9000
	0x0321AD2C LDR X0, [X0 + 0x618]
	0x0321AD30 BL 0x1C16CF4
	0x0321AD34 MOVZ W8, 0x1
	0x0321AD38 STRB W8, [X20 + 0x2F6]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x11C3000
	005 Move X20, 0xF08000
	006 Move W8, [X19+752]
	007 Move X20, [X20+3408]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xF08000
	013 Move X0, [X0+3408]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+752], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X19, X0
	020 Call MD4Managed..ctor, X0
	021 Move X0, X19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Return X0

