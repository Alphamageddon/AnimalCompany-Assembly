Type: Mono.Security.Cryptography.CryptoConvert

Method: System.Int32 ToInt32LE(System.Byte[] bytes, System.Int32 offset)

Disassembly:
	0x03217DEC MOV X2, X31
	0x03217DF0 STR W8, [X20 + 0x28]
	0x03217DF4 LDR W1, [X19 + 0x2C]
	0x03217DF8 BL 0x3252470
	0x03217DFC MOV X0, X20
	0x03217E00 LDP X20, X19, [X31 + 0x20]
	0x03217E04 LDP X22, X21, [X31 + 0x10]
	0x03217E08 LDP X30, X23, [X31], #0x30
	0x03217E0C RET
	0x03217E10 BL 0x1C16F20
	0x03217E14 SUB X31, X31, 0x40
	0x03217E18 STP X30, X23, [X31 + 0x10]
	0x03217E1C STP X22, X21, [X31 + 0x20]
	0x03217E20 STP X20, X19, [X31 + 0x30]
	0x03217E24 ADRP X20, 0x11C5000
	0x03217E28 LDRB W8, [X20 + 0x2DB]
	0x03217E2C MOV X19, X0
	0x03217E30 TBNZ X8, 0x0, 0x3217E78
	0x03217E34 ADRP X0, 0xEDE000
	0x03217E38 LDR X0, [X0 + 0xC48]
	0x03217E3C BL 0x1C16CF4
	0x03217E40 ADRP X0, 0xEDC000
	0x03217E44 LDR X0, [X0 + 0x758]
	0x03217E48 BL 0x1C16CF4
	0x03217E4C ADRP X0, 0xF0A000
	0x03217E50 LDR X0, [X0 + 0xC90]
	0x03217E54 BL 0x1C16CF4
	0x03217E58 ADRP X0, 0xF03000
	0x03217E5C LDR X0, [X0 + 0x1D0]

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {28}
	004 Move W10, [X0+24]
	005 Add W8, W1, 3
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Add W9, W1, 2
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Add W11, W1, 1
	010 NotImplemented "Instruction CMP not yet implemented."
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Add X8, X0, W8
	013 Add X9, X0, W9
	014 Move W8, [X8+32]
	015 Move W9, [X9+32]
	016 Add X10, X0, 32
	017 Move W11, [X10]
	018 Move W10, [X10]
	019 Move W8, W8
	020 ShiftRight W8, 8
	021 And W8, W8, 127
	022 NotImplemented "Instruction BFM not yet implemented."
	023 NotImplemented "Instruction BFM not yet implemented."
	024 Or W0, W8, W10
	025 Move X30, [X31+16]
	026 Return X0
	027 Call 0x1C17F28
	028 Call 0x1C17F20

Method: System.UInt32 ToUInt32LE(System.Byte[] bytes, System.Int32 offset)

Disassembly:
	0x03217E60 BL 0x1C16CF4
	0x03217E64 ADRP X0, 0xF0A000
	0x03217E68 LDR X0, [X0 + 0xC98]
	0x03217E6C BL 0x1C16CF4
	0x03217E70 MOVZ W8, 0x1
	0x03217E74 STRB W8, [X20 + 0x2DB]
	0x03217E78 LDR X0, [X19 + 0x20]
	0x03217E7C CBNZ X0, 0x3217F8C
	0x03217E80 ADRP X8, 0xEDE000
	0x03217E84 LDR X8, [X8 + 0xC48]
	0x03217E88 LDR X0, [X8]
	0x03217E8C LDR W8, [X0 + 0xE0]
	0x03217E90 CBNZ W8, 0x3217E98
	0x03217E94 BL 0x1C16DFC
	0x03217E98 MOV X0, X31
	0x03217E9C BL 0x3338524
	0x03217EA0 LDR X8, [X19 + 0x10]
	0x03217EA4 CBZ X8, 0x3217FA0
	0x03217EA8 ADRP X23, 0xEDC000
	0x03217EAC LDR W8, [X8 + 0x10]
	0x03217EB0 LDR X23, [X23 + 0x758]
	0x03217EB4 MOV X20, X0
	0x03217EB8 ADD X1, X31, 0xC
	0x03217EBC STR W8, [X31 + 0xC]
	0x03217EC0 LDR X0, [X23]
	0x03217EC4 BL 0x1C16E04
	0x03217EC8 MOV X21, X0
	0x03217ECC MOV X0, X19
	0x03217ED0 BL 0x3217FA4

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {28}
	004 Move W10, [X0+24]
	005 Add W8, W1, 3
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Add W9, W1, 2
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Add W11, W1, 1
	010 NotImplemented "Instruction CMP not yet implemented."
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Add X8, X0, W8
	013 Add X9, X0, W9
	014 Move W8, [X8+32]
	015 Move W9, [X9+32]
	016 Add X10, X0, 32
	017 Move W11, [X10]
	018 Move W10, [X10]
	019 Move W8, W8
	020 ShiftRight W8, 8
	021 And W8, W8, 127
	022 NotImplemented "Instruction BFM not yet implemented."
	023 NotImplemented "Instruction BFM not yet implemented."
	024 Or W0, W8, W10
	025 Move X30, [X31+16]
	026 Return X0
	027 Call 0x1C17F28
	028 Call 0x1C17F20

Method: System.Byte[] Trim(System.Byte[] array)

Disassembly:
	0x03217ED4 LDR X8, [X19 + 0x10]
	0x03217ED8 CBZ X8, 0x3217FA0
	0x03217EDC MOV X22, X0
	0x03217EE0 LDR W8, [X8 + 0x28]
	0x03217EE4 LDR X0, [X23]
	0x03217EE8 ADD X1, X31, 0x8
	0x03217EEC STR W8, [X31 + 0x8]
	0x03217EF0 BL 0x1C16E04
	0x03217EF4 ADRP X8, 0xF0A000
	0x03217EF8 LDR X8, [X8 + 0xC98]
	0x03217EFC MOV X4, X0
	0x03217F00 MOV X0, X20
	0x03217F04 MOV X2, X21
	0x03217F08 LDR X1, [X8]
	0x03217F0C MOV X3, X22
	0x03217F10 MOV X5, X31
	0x03217F14 BL 0x3227DB0
	0x03217F18 LDR X8, [X19 + 0x10]
	0x03217F1C STR X0, [X19 + 0x20]
	0x03217F20 CBZ X8, 0x3217FA0
	0x03217F24 ADRP X9, 0xF0A000
	0x03217F28 LDR X9, [X9 + 0xC90]
	0x03217F2C LDR W20, [X8 + 0x2C]
	0x03217F30 LDR X0, [X9]
	0x03217F34 LDR W9, [X0 + 0xE0]
	0x03217F38 CBZ W9, 0x3217F48
	0x03217F3C TBNZ X20, 0x0, 0x3217F50
	0x03217F40 BL 0x32185E8
	0x03217F44 B 0x3217F54
	0x03217F48 BL 0x1C16DFC
	0x03217F4C TBZ X20, 0x0, 0x3217F40
	0x03217F50 BL 0x32180C4
	0x03217F54 ADRP X8, 0xF03000
	0x03217F58 LDR X8, [X8 + 0x1D0]
	0x03217F5C LDR X20, [X19 + 0x20]
	0x03217F60 MOV X21, X0
	0x03217F64 LDR X8, [X8]
	0x03217F68 LDR W9, [X8 + 0xE0]
	0x03217F6C CBNZ W9, 0x3217F78
	0x03217F70 MOV X0, X8
	0x03217F74 BL 0x1C16DFC
	0x03217F78 MOV X0, X21
	0x03217F7C MOV X1, X20
	0x03217F80 MOV X2, X31
	0x03217F84 BL 0x32FCE04

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x11C6000
	006 Move W8, [X20+725]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xEDD000
	013 Move X0, [X0+1560]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+725], W8
	017 Compare X19, 0
	018 JumpIfEqual {51}
	019 Move W8, [X19+24]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move W20, W31
	022 Subtract W1, W8, W20
	023 Add X9, X19, W20
	024 Move W9, [X9+32]
	025 Compare W9, 0
	026 JumpIfNotEqual {30}
	027 Add W20, W20, 1
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X21, X31
	030 Move X8, 0xEDD000
	031 Move X8, [X8+1560]
	032 Move X0, [X8]
	033 Call 0x1C17D6C
	034 Compare X0, 0
	035 JumpIfEqual {51}
	036 Move W4, [X0+24]
	037 Move X21, X0
	038 Move X0, X19
	039 Move W1, W20
	040 Move X2, X21
	041 Move W3, W31
	042 Move X5, X31
	043 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X0, X21
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Return X0
	050 Call 0x1C17F28
	051 Call 0x1C17F20

Method: System.Security.Cryptography.RSA FromCapiPrivateKeyBlob(System.Byte[] blob, System.Int32 offset)

Disassembly:
	0x03217F88 STR X0, [X19 + 0x20]
	0x03217F8C LDP X20, X19, [X31 + 0x30]
	0x03217F90 LDP X22, X21, [X31 + 0x20]
	0x03217F94 LDP X30, X23, [X31 + 0x10]
	0x03217F98 ADD X31, X31, 0x40
	0x03217F9C RET
	0x03217FA0 BL 0x1C16F20
	0x03217FA4 SUB X31, X31, 0x40
	0x03217FA8 STR X30, [X31 + 0x20]
	0x03217FAC STP X20, X19, [X31 + 0x30]
	0x03217FB0 ADRP X20, 0x11C5000
	0x03217FB4 LDRB W8, [X20 + 0x2E5]
	0x03217FB8 MOV X19, X0
	0x03217FBC TBNZ X8, 0x0, 0x3217FD4
	0x03217FC0 ADRP X0, 0xF0A000
	0x03217FC4 LDR X0, [X0 + 0xCA0]
	0x03217FC8 BL 0x1C16CF4
	0x03217FCC MOVZ W8, 0x1
	0x03217FD0 STRB W8, [X20 + 0x2E5]
	0x03217FD4 STP X31, X31, [X31 + 0x10]
	0x03217FD8 LDR X0, [X19 + 0x28]
	0x03217FDC CBNZ X0, 0x3218090
	0x03217FE0 LDR X8, [X19 + 0x10]
	0x03217FE4 CBZ X8, 0x32180A0
	0x03217FE8 LDRB W9, [X8 + 0x2C]
	0x03217FEC TBNZ X9, 0x1, 0x3218064
	0x03217FF0 LDR X8, [X8 + 0x20]
	0x03217FF4 CBZ X8, 0x3218074
	0x03217FF8 LDR W8, [X8 + 0x10]

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+192], X30
	003 Move [X31+200], X19
	004 NotImplemented "Instruction MOVI not yet implemented."
	005 Add X8, X31, 64
	006 Move [X31+96], V0
	007 Move [X31+104], V0
	008 Move [X31+64], V0
	009 Move [X31+72], V0
	010 Call CryptoConvert.GetParametersFromCapiPrivateKeyBlob, X0, X1
	011 Move X0, X31
	012 Call RSA.Create
	013 Move V0, [X31+64]
	014 Move V1, [X31+80]
	015 Move V2, [X31+96]
	016 Move V3, [X31+112]
	017 Move [X31], V0
	018 Move [X31+8], V1
	019 Move [X31+32], V2
	020 Move [X31+40], V3
	021 Compare X0, 0
	022 JumpIfEqual {42}
	023 Move X8, [X0]
	024 Move V0, [X31]
	025 Move V1, [X31+16]
	026 Move V2, [X31+32]
	027 Move V3, [X31+48]
	028 Add X1, X31, 128
	029 Move X9, [X8+504]
	030 Move [X31+128], V0
	031 Move [X31+136], V1
	032 Move [X31+160], V2
	033 Move [X31+168], V3
	034 Move X2, [X8+512]
	035 Move X19, X0
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move X0, X19
	038 Move X30, [X31+192]
	039 Move X19, [X31+200]
	040 Add X31, X31, 208
	041 Return X0
	042 Call 0x1C17F20

Method: System.Security.Cryptography.RSAParameters GetParametersFromCapiPrivateKeyBlob(System.Byte[] blob, System.Int32 offset)

Disassembly:
	0x03217FFC CBZ W8, 0x3218074
	0x03218000 MOV X0, X31
	0x03218004 BL 0x3241948
	0x03218008 LDR X8, [X19 + 0x10]
	0x0321800C CBZ X8, 0x32180A0
	0x03218010 CBZ X0, 0x32180A0
	0x03218014 LDR X9, [X0]
	0x03218018 LDR X1, [X8 + 0x20]
	0x0321801C LDR X8, [X9 + 0x268]
	0x03218020 LDR X2, [X9 + 0x270]
	0x03218024 BLR X8
	0x03218028 MOV X20, X0
	0x0321802C MOV X0, X31
	0x03218030 BL 0x32560FC
	0x03218034 CBZ X0, 0x32180A0
	0x03218038 MOV X1, X20
	0x0321803C MOV X2, X31
	0x03218040 BL 0x32513F4
	0x03218044 MOV X1, X0
	0x03218048 ADD X0, X31, 0x0
	0x0321804C MOV X2, X31
	0x03218050 STP X31, X31, [X31]
	0x03218054 BL 0x3376898
	0x03218058 LDR V0, [X31]
	0x0321805C STR V0, [X31 + 0x1]
	0x03218060 B 0x3218080
	0x03218064 ADRP X8, 0xF09000
	0x03218068 LDR X8, [X8 + 0xCA0]
	0x0321806C LDR X0, [X8]
	0x03218070 B 0x321808C
	0x03218074 MOV X0, X31
	0x03218078 BL 0x337684C
	0x0321807C STP X0, X1, [X31 + 0x10]
	0x03218080 ADD X0, X31, 0x10
	0x03218084 MOV X1, X31
	0x03218088 BL 0x337866C
	0x0321808C STR X0, [X19 + 0x28]
	0x03218090 LDP X20, X19, [X31 + 0x30]
	0x03218094 LDR X30, [X31 + 0x20]
	0x03218098 ADD X31, X31, 0x40
	0x0321809C RET
	0x032180A0 BL 0x1C16F20
	0x032180A4 STR X30, [X31 - 0x10]!
	0x032180A8 LDR X8, [X0 + 0x10]
	0x032180AC CBZ X8, 0x32180C0
	0x032180B0 LDR W8, [X8 + 0x2C]
	0x032180B4 AND W0, W8, 0x1
	0x032180B8 LDR X30, [X31], #0x10
	0x032180BC RET
	0x032180C0 BL 0x1C16F20
	0x032180C4 SUB X31, X31, 0x40
	0x032180C8 STP X30, X23, [X31 + 0x10]
	0x032180CC STP X22, X21, [X31 + 0x20]
	0x032180D0 STP X20, X19, [X31 + 0x30]
	0x032180D4 ADRP X19, 0x11C4000
	0x032180D8 ADRP X22, 0xF09000
	0x032180DC LDRB W8, [X19 + 0x2DF]
	0x032180E0 LDR X22, [X22 + 0xC90]
	0x032180E4 TBNZ X8, 0x0, 0x3218120
	0x032180E8 ADRP X0, 0xF09000
	0x032180EC LDR X0, [X0 + 0xC90]
	0x032180F0 BL 0x1C16CF4
	0x032180F4 ADRP X0, 0xF02000
	0x032180F8 LDR X0, [X0 + 0x1D0]
	0x032180FC BL 0x1C16CF4
	0x03218100 ADRP X0, 0xF09000
	0x03218104 LDR X0, [X0 + 0x298]
	0x03218108 BL 0x1C16CF4
	0x0321810C ADRP X0, 0xF09000
	0x03218110 LDR X0, [X0 + 0xCA8]
	0x03218114 BL 0x1C16CF4
	0x03218118 MOVZ W8, 0x1
	0x0321811C STRB W8, [X19 + 0x2DF]
	0x03218120 LDR X0, [X22]
	0x03218124 LDR W8, [X0 + 0xE0]
	0x03218128 CBNZ W8, 0x3218134
	0x0321812C BL 0x1C16DFC
	0x03218130 LDR X0, [X22]
	0x03218134 LDR X8, [X0 + 0xB8]
	0x03218138 LDR X19, [X8 + 0x20]
	0x0321813C STRB W31, [X31 + 0xC]
	0x03218140 ADD X1, X31, 0xC
	0x03218144 MOV X0, X19
	0x03218148 MOV X2, X31
	0x0321814C BL 0x33DE64C
	0x03218150 LDR X8, [X22]
	0x03218154 LDR W9, [X8 + 0xE0]
	0x03218158 CBNZ W9, 0x3218168
	0x0321815C MOV X0, X8
	0x03218160 BL 0x1C16DFC
	0x03218164 LDR X8, [X22]
	0x03218168 LDR X9, [X8 + 0xB8]
	0x0321816C LDR X10, [X9 + 0x18]
	0x03218170 CBZ X10, 0x3218194
	0x03218174 LDR W10, [X8 + 0xE0]
	0x03218178 CBNZ W10, 0x321818C
	0x0321817C MOV X0, X8
	0x03218180 BL 0x1C16DFC
	0x03218184 LDR X8, [X22]
	0x03218188 LDR X9, [X8 + 0xB8]
	0x0321818C LDRB W9, [X9 + 0x10]
	0x03218190 CBNZ W9, 0x321827C
	0x03218194 MOVZ W0, 0x23
	0x03218198 MOV X1, X31
	0x0321819C BL 0x33C19D4
	0x032181A0 ADRP X8, 0xF02000
	0x032181A4 LDR X8, [X8 + 0x1D0]
	0x032181A8 MOV X20, X0
	0x032181AC LDR X0, [X8]
	0x032181B0 LDR W8, [X0 + 0xE0]
	0x032181B4 CBNZ W8, 0x32181BC
	0x032181B8 BL 0x1C16DFC
	0x032181BC ADRP X8, 0xF09000
	0x032181C0 LDR X8, [X8 + 0x298]
	0x032181C4 LDR X1, [X8]
	0x032181C8 MOV X0, X20
	0x032181CC MOV X2, X31
	0x032181D0 BL 0x32FCE04
	0x032181D4 MOV X20, X0
	0x032181D8 LDR X0, [X22]
	0x032181DC LDR W8, [X0 + 0xE0]
	0x032181E0 CBNZ W8, 0x32181EC
	0x032181E4 BL 0x1C16DFC
	0x032181E8 LDR X0, [X22]
	0x032181EC LDR X8, [X0 + 0xB8]
	0x032181F0 ADRP X9, 0xF09000
	0x032181F4 LDR X9, [X9 + 0xCA8]
	0x032181F8 STR X20, [X8 + 0x18]
	0x032181FC LDR X1, [X9]
	0x03218200 MOV X0, X20
	0x03218204 MOV X2, X31
	0x03218208 BL 0x32FCE04
	0x0321820C LDR X8, [X22]
	0x03218210 LDR X8, [X8 + 0xB8]
	0x03218214 STR X0, [X8 + 0x18]
	0x03218218 MOV X1, X31
	0x0321821C BL 0x32EC360
	0x03218220 LDR X8, [X22]
	0x03218224 AND W10, W0, 0x1
	0x03218228 LDR X9, [X8 + 0xB8]
	0x0321822C STRB W10, [X9 + 0x10]
	0x03218230 TBNZ X0, 0x0, 0x321827C
	0x03218234 LDR W10, [X8 + 0xE0]
	0x03218238 CBNZ W10, 0x321824C
	0x0321823C MOV X0, X8
	0x03218240 BL 0x1C16DFC
	0x03218244 LDR X8, [X22]
	0x03218248 LDR X9, [X8 + 0xB8]
	0x0321824C LDR X0, [X9 + 0x18]
	0x03218250 MOV X1, X31
	0x03218254 BL 0x32EC1CC
	0x03218258 LDR X8, [X22]
	0x0321825C LDR W9, [X8 + 0xE0]
	0x03218260 CBNZ W9, 0x3218270
	0x03218264 MOV X0, X8
	0x03218268 BL 0x1C16DFC
	0x0321826C LDR X8, [X22]
	0x03218270 LDR X9, [X8 + 0xB8]
	0x03218274 MOVZ W10, 0x1
	0x03218278 STRB W10, [X9 + 0x10]
	0x0321827C LDR W9, [X8 + 0xE0]
	0x03218280 CBNZ W9, 0x3218290
	0x03218284 MOV X0, X8
	0x03218288 BL 0x1C16DFC
	0x0321828C LDR X8, [X22]
	0x03218290 LDR X8, [X8 + 0xB8]
	0x03218294 LDR X0, [X8 + 0x18]
	0x03218298 BL 0x3219424
	0x0321829C TBNZ X0, 0x0, 0x32182C4
	0x032182A0 LDR X0, [X22]
	0x032182A4 LDR W8, [X0 + 0xE0]
	0x032182A8 CBNZ W8, 0x32182B4
	0x032182AC BL 0x1C16DFC
	0x032182B0 LDR X0, [X22]
	0x032182B4 LDR X8, [X0 + 0xB8]
	0x032182B8 LDR X0, [X8 + 0x18]
	0x032182BC BL 0x3219260
	0x032182C0 TBZ X0, 0x0, 0x32183C8
	0x032182C4 MOV X21, X31
	0x032182C8 MOVZ W20, 0xB
	0x032182CC LDRB W8, [X31 + 0xC]
	0x032182D0 CBZ W8, 0x32182E0
	0x032182D4 MOV X0, X19
	0x032182D8 MOV X1, X31
	0x032182DC BL 0x33E14E4
	0x032182E0 CBNZ X21, 0x3218344
	0x032182E4 CMP W20, 0xB
	0x032182E8 B.EQ 0x32182F0
	0x032182EC CBNZ W20, 0x3218330
	0x032182F0 LDR X0, [X22]
	0x032182F4 LDR W8, [X0 + 0xE0]
	0x032182F8 CBNZ W8, 0x3218304
	0x032182FC BL 0x1C16DFC
	0x03218300 LDR X0, [X22]
	0x03218304 LDR X8, [X0 + 0xB8]
	0x03218308 LDR X0, [X8 + 0x18]
	0x0321830C BL 0x3219424
	0x03218310 TBZ X0, 0x0, 0x321834C
	0x03218314 LDR X0, [X22]
	0x03218318 LDR W8, [X0 + 0xE0]
	0x0321831C CBNZ W8, 0x3218328
	0x03218320 BL 0x1C16DFC
	0x03218324 LDR X0, [X22]
	0x03218328 LDR X8, [X0 + 0xB8]
	0x0321832C LDR X0, [X8 + 0x18]
	0x03218330 LDP X20, X19, [X31 + 0x30]
	0x03218334 LDP X22, X21, [X31 + 0x20]
	0x03218338 LDP X30, X23, [X31 + 0x10]
	0x0321833C ADD X31, X31, 0x40
	0x03218340 RET
	0x03218344 MOV X0, X21
	0x03218348 BL 0x1C16F18
	0x0321834C ADRP X0, 0xF09000
	0x03218350 LDR X0, [X0 + 0xCB0]
	0x03218354 BL 0x1C16D08
	0x03218358 ADRP X20, 0xF09000
	0x0321835C LDR X20, [X20 + 0xC90]
	0x03218360 MOV X19, X0
	0x03218364 MOV X0, X20
	0x03218368 BL 0x1C16D08
	0x0321836C BL 0x19903D0
	0x03218370 MOV X0, X20
	0x03218374 BL 0x1C16D08
	0x03218378 LDR X8, [X0 + 0xB8]
	0x0321837C MOV X0, X19
	0x03218380 MOV X2, X31
	0x03218384 LDR X1, [X8 + 0x18]
	0x03218388 BL 0x321EFD0
	0x0321838C MOV X19, X0
	0x03218390 ADRP X0, 0xF08000
	0x03218394 LDR X0, [X0 + 0xCE0]
	0x03218398 BL 0x1C16D08
	0x0321839C BL 0x1C16F10
	0x032183A0 MOV X1, X19
	0x032183A4 MOV X2, X31
	0x032183A8 MOV X20, X0
	0x032183AC BL 0x3252170
	0x032183B0 ADRP X0, 0xF09000
	0x032183B4 LDR X0, [X0 + 0xCB8]
	0x032183B8 BL 0x1C16D08
	0x032183BC MOV X1, X0
	0x032183C0 MOV X0, X20
	0x032183C4 BL 0x1C16DEC
	0x032183C8 ADRP X0, 0xF09000
	0x032183CC LDR X0, [X0 + 0xCC0]
	0x032183D0 BL 0x1C16D08
	0x032183D4 MOV X20, X0
	0x032183D8 ADRP X0, 0xF09000
	0x032183DC LDR X0, [X0 + 0xC90]
	0x032183E0 BL 0x1C16D08
	0x032183E4 LDR W8, [X0 + 0xE0]
	0x032183E8 CBNZ W8, 0x32183F0
	0x032183EC BL 0x1C16DFC
	0x032183F0 ADRP X0, 0xF09000
	0x032183F4 LDR X0, [X0 + 0xC90]
	0x032183F8 BL 0x1C16D08
	0x032183FC LDR X8, [X0 + 0xB8]
	0x03218400 LDR X1, [X8 + 0x18]
	0x03218404 MOV X0, X20
	0x03218408 MOV X2, X31
	0x0321840C BL 0x321EFD0
	0x03218410 MOV X20, X0
	0x03218414 ADRP X0, 0xF09000
	0x03218418 LDR X0, [X0 + 0x7A8]
	0x0321841C BL 0x1C16D08
	0x03218420 BL 0x1C16F10
	0x03218424 MOV X21, X0
	0x03218428 MOV X1, X20
	0x0321842C MOV X2, X31
	0x03218430 BL 0x32E16BC
	0x03218434 ADRP X0, 0xF09000
	0x03218438 LDR X0, [X0 + 0xCB8]
	0x0321843C BL 0x1C16D08
	0x03218440 MOV X1, X0
	0x03218444 MOV X0, X21
	0x03218448 BL 0x1C16DEC
	0x0321844C B 0x3218588
	0x03218450 B 0x3218588
	0x03218454 B 0x3218588
	0x03218458 B 0x321845C
	0x0321845C MOV X21, X1
	0x03218460 MOV X20, X0
	0x03218464 CMP W21, 0x1
	0x03218468 B.NE 0x3218590
	0x0321846C MOV X0, X20
	0x03218470 BL 0x3EB1AD0
	0x03218474 MOV X20, X0
	0x03218478 ADRP X0, 0xEDB000
	0x0321847C LDR X0, [X0 + 0x7D0]
	0x03218480 BL 0x1C16D08
	0x03218484 LDR X8, [X20]
	0x03218488 LDR X1, [X8]
	0x0321848C BL 0x1C17270
	0x03218490 TBZ X0, 0x0, 0x3218524
	0x03218494 LDR X20, [X20]
	0x03218498 BL 0x3EB1AE0
	0x0321849C ADRP X0, 0xF09000
	0x032184A0 LDR X0, [X0 + 0xCC8]
	0x032184A4 BL 0x1C16D08
	0x032184A8 MOV X21, X0
	0x032184AC ADRP X0, 0xF09000
	0x032184B0 LDR X0, [X0 + 0xC90]
	0x032184B4 BL 0x1C16D08
	0x032184B8 LDR W8, [X0 + 0xE0]
	0x032184BC CBNZ W8, 0x32184C4
	0x032184C0 BL 0x1C16DFC
	0x032184C4 ADRP X0, 0xF09000
	0x032184C8 LDR X0, [X0 + 0xC90]
	0x032184CC BL 0x1C16D08
	0x032184D0 LDR X8, [X0 + 0xB8]
	0x032184D4 LDR X1, [X8 + 0x18]
	0x032184D8 MOV X0, X21
	0x032184DC MOV X2, X31
	0x032184E0 BL 0x321EFD0
	0x032184E4 MOV X23, X0
	0x032184E8 ADRP X0, 0xF08000
	0x032184EC LDR X0, [X0 + 0xCE0]
	0x032184F0 BL 0x1C16D08
	0x032184F4 BL 0x1C16F10
	0x032184F8 MOV X21, X0
	0x032184FC MOV X1, X23
	0x03218500 MOV X2, X20
	0x03218504 MOV X3, X31
	0x03218508 BL 0x325240C
	0x0321850C ADRP X0, 0xF09000
	0x03218510 LDR X0, [X0 + 0xCB8]
	0x03218514 BL 0x1C16D08
	0x03218518 MOV X1, X0
	0x0321851C MOV X0, X21
	0x03218520 BL 0x1C16DEC
	0x03218524 MOVZ W0, 0x8
	0x03218528 BL 0x3EB1AF0
	0x0321852C LDR X8, [X20]
	0x03218530 STR X8, [X0]
	0x03218534 ADRP X1, 0xC9C000
	0x03218538 ADD X1, X1, 0xE58
	0x0321853C MOV X2, X31
	0x03218540 BL 0x3EB1B00
	0x03218544 B 0x3218588
	0x03218548 B 0x3218588
	0x0321854C B 0x3218588
	0x03218550 B 0x3218588
	0x03218554 B 0x3218588
	0x03218558 MOV X21, X1
	0x0321855C MOV X20, X0
	0x03218560 BL 0x3EB1AE0
	0x03218564 B 0x3218590
	0x03218568 B 0x3218588
	0x0321856C B 0x3218588
	0x03218570 B 0x3218588
	0x03218574 B 0x3218588
	0x03218578 B 0x3218588
	0x0321857C B 0x3218588
	0x03218580 B 0x3218588

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X22, 0x11C5000
	015 Move W9, [X22+726]
	016 Move W21, W1
	017 Move X20, X0
	018 Move X19, X8
	019 Move TEMP, X9
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xF09000
	024 Move X0, [X0+3024]
	025 Call 0x1C17CF4
	026 Move X0, 0xEDC000
	027 Move X0, [X0+1560]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+726], W8
	031 Compare X20, 0
	032 JumpIfEqual {255}
	033 Move W8, [X20+24]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Add X9, X20, W21
	036 Move W9, [X9+32]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Add W9, W21, 1
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Add X9, X20, W9
	041 Move W9, [X9+32]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Add W9, W21, 2
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Add X9, X20, W9
	046 Move W9, [X9+32]
	047 Compare W9, 0
	048 JumpIfNotEqual {237}
	049 Add W9, W21, 3
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Add X8, X20, W9
	052 Move W8, [X8+32]
	053 Compare W8, 0
	054 JumpIfNotEqual {237}
	055 Add W1, W21, 8
	056 Move X0, X20
	057 Call CryptoConvert.ToUInt32LE, X0, X1
	058 Move W8, 0x5352
	059 NotImplemented "Instruction MOVK not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Add W1, W21, 12
	062 Move X0, X20
	063 Call CryptoConvert.ToInt32LE, X0, X1
	064 Move X28, 0xEDC000
	065 Move X28, [X28+1560]
	066 Move W25, W0
	067 Move X0, [X28]
	068 Move W1, 4
	069 Call 0x1C17D6C
	070 Move X22, X0
	071 Add W1, W21, 16
	072 Move W4, 4
	073 Move X0, X20
	074 Move X2, X22
	075 Move W3, W31
	076 Move X5, X31
	077 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	078 Move X23, 0xF09000
	079 Move X23, [X23+3024]
	080 Move X1, [X23]
	081 Move X0, X22
	082 Call 0x21475E8, X0
	083 Move X0, X22
	084 Call CryptoConvert.Trim, X0
	085 Move X29, X0
	086 Move X0, [X28]
	087 NotImplemented "Instruction SBFM not yet implemented."
	088 Move W1, W24
	089 Call 0x1C17D6C
	090 Move X27, X0
	091 Add W22, W21, 20
	092 Move X0, X20
	093 Move W1, W22
	094 Move X2, X27
	095 Move W3, W31
	096 Move W4, W24
	097 Move X5, X31
	098 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	099 Move X1, [X23]
	100 Move X0, X27
	101 Call 0x21475E8, X0
	102 Move X0, [X28]
	103 NotImplemented "Instruction SBFM not yet implemented."
	104 Move W1, W26
	105 Call 0x1C17D6C
	106 Move X25, X0
	107 Add W22, W24, W22
	108 Move X0, X20
	109 Move W1, W22
	110 Move X2, X25
	111 Move W3, W31
	112 Move W4, W26
	113 Move X5, X31
	114 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	115 Move X1, [X23]
	116 Move [X31+24], X27
	117 Move X0, X25
	118 Call 0x21475E8, X0
	119 Move X0, [X28]
	120 Move W1, W26
	121 Call 0x1C17D6C
	122 Move X27, X0
	123 Add W22, W22, W26
	124 Move X0, X20
	125 Move W1, W22
	126 Move X2, X27
	127 Move W3, W31
	128 Move W4, W26
	129 Move X5, X31
	130 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	131 Move X1, [X23]
	132 Move X0, X27
	133 Call 0x21475E8, X0
	134 Move X0, [X28]
	135 Move W1, W26
	136 Call 0x1C17D6C
	137 Move X28, X0
	138 Add W22, W22, W26
	139 Move X0, X20
	140 Move W1, W22
	141 Move X2, X28
	142 Move W3, W31
	143 Move W4, W26
	144 Move X5, X31
	145 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	146 Move X1, [X23]
	147 Move [X31+16], X29
	148 Move X0, X28
	149 Call 0x21475E8, X0
	150 Move X8, 0xEDC000
	151 Move X8, [X8+1560]
	152 Move X0, [X8]
	153 Move W1, W26
	154 Call 0x1C17D6C
	155 Move X29, X0
	156 Add W23, W22, W26
	157 Move X0, X20
	158 Move W1, W23
	159 Move X2, X29
	160 Move W3, W31
	161 Move W4, W26
	162 Move X5, X31
	163 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	164 Move [X31+8], X27
	165 Move X8, 0xF09000
	166 Move X8, [X8+3024]
	167 Move X1, [X8]
	168 Move X0, X29
	169 Call 0x21475E8, X0
	170 Move X8, 0xEDC000
	171 Move X8, [X8+1560]
	172 Move X27, X25
	173 Move X0, [X8]
	174 Move W1, W26
	175 Call 0x1C17D6C
	176 Move X22, X0
	177 Add W25, W23, W26
	178 Move X0, X20
	179 Move W1, W25
	180 Move X2, X22
	181 Move W3, W31
	182 Move W4, W26
	183 Move X5, X31
	184 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	185 Move X8, 0xF09000
	186 Move X8, [X8+3024]
	187 Move X1, [X8]
	188 Move X0, X22
	189 Call 0x21475E8, X0
	190 Move X8, 0xEDC000
	191 Move X8, [X8+1560]
	192 Move X0, [X8]
	193 Move W1, W24
	194 Call 0x1C17D6C
	195 Move W8, [X20+24]
	196 Add W1, W25, W26
	197 Add W9, W24, W21
	198 Add W9, W9, W1
	199 Move X23, X0
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Move X0, X20
	202 Move X2, X23
	203 Move W3, W31
	204 Move W4, W24
	205 Move X5, X31
	206 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	207 Move X8, 0xF09000
	208 Move X8, [X8+3024]
	209 Move X1, [X8]
	210 Move X0, X23
	211 Call 0x21475E8, X0
	212 Move X9, [X31+16]
	213 Move X8, [X31+24]
	214 Move [X19+32], X28
	215 Move [X19+40], X29
	216 Move [X19+48], X22
	217 Move [X19+56], X23
	218 Move X22, [X31+96]
	219 Move X21, [X31+104]
	220 Move [X19], X9
	221 Move [X19+8], X8
	222 Move X8, [X31+8]
	223 Move X24, [X31+80]
	224 Move X23, [X31+88]
	225 Move X26, [X31+64]
	226 Move X25, [X31+72]
	227 Move X29, [X31+32]
	228 Move X30, [X31+40]
	229 Move [X19+16], X27
	230 Move [X19+24], X8
	231 Move X20, [X31+112]
	232 Move X19, [X31+120]
	233 Move X28, [X31+48]
	234 Move X27, [X31+56]
	235 Add X31, X31, 128
	236 Return X0
	237 Move X0, 0xF09000
	238 Move X0, [X0+3296]
	239 Call 0x1C17D08
	240 Call 0x1C17F10
	241 Move X19, X0
	242 Move X0, 0xF0A000
	243 Move X0, [X0+3120]
	244 Call 0x1C17D08
	245 Move X1, X0
	246 Move X0, X19
	247 Move X2, X31
	248 Call CryptographicException..ctor, X0, X1
	249 Move X0, 0xF0A000
	250 Move X0, [X0+3128]
	251 Call 0x1C17D08
	252 Move X1, X0
	253 Move X0, X19
	254 Call 0x1C17DEC
	255 Move X0, 0xEE1000
	256 Move X0, [X0+1320]
	257 Call 0x1C17D08
	258 Call 0x1C17F10
	259 Move X19, X0
	260 Move X0, 0xF0A000
	261 Move X0, [X0+3136]
	262 Call 0x1C17D08
	263 Move X1, X0
	264 Move X0, X19
	265 Move X2, X31
	266 Call ArgumentNullException..ctor, X0, X1
	267 Move X0, 0xEE4000
	268 Move X0, [X0+1400]
	269 Call 0x1C17D08
	270 Call 0x1C17F10
	271 Move X19, X0
	272 Move X0, 0xF0A000
	273 Move X0, [X0+3144]
	274 Call 0x1C17D08
	275 Move X1, X0
	276 Move X0, X19
	277 Move X2, X31
	278 Call ArgumentException..ctor, X0, X1
	279 Move X0, 0xF0A000
	280 Move X0, [X0+3128]
	281 Call 0x1C17D08
	282 Move X1, X0
	283 Move X0, X19
	284 Call 0x1C17DEC
	285 Call 0x1C17F28
	286 Call 0x1C17F28
	287 Call 0x1C17F28
	288 Call 0x1C17F28
	289 Move X19, X0
	290 NotImplemented "Instruction CMP not yet implemented."
	291 Move X0, X19
	292 Call 0x3EB2AD0
	293 Move X19, X0
	294 Move X0, 0xEDC000
	295 Move X0, [X0+2000]
	296 Call 0x1C17D08
	297 Move X8, [X19]
	298 Move X1, [X8]
	299 Call 0x1C18270
	300 Move TEMP, X0
	301 And TEMP, TEMP, 1
	302 Compare TEMP, 1
	303 JumpIfNotEqual {325}
	304 Move X19, [X19]
	305 Call 0x3EB2AE0
	306 Move X0, 0xF09000
	307 Move X0, [X0+3296]
	308 Call 0x1C17D08
	309 Call 0x1C17F10
	310 Move X20, X0
	311 Move X0, 0xF0A000
	312 Move X0, [X0+3152]
	313 Call 0x1C17D08
	314 Move X1, X0
	315 Move X0, X20
	316 Move X2, X19
	317 Move X3, X31
	318 Call CryptographicException..ctor, X0, X1, X2
	319 Move X0, 0xF0A000
	320 Move X0, [X0+3128]
	321 Call 0x1C17D08
	322 Move X1, X0
	323 Move X0, X20
	324 Call 0x1C17DEC
	325 Move W0, 8
	326 Call 0x3EB2AF0
	327 Move X8, [X19]
	328 Move [X0], X8
	329 Move X1, 0xC9D000
	330 Add X1, X1, 3672
	331 Move X2, X31
	332 Call 0x3EB2B00
	333 Move X19, X0
	334 Call 0x3EB2AE0
	335 Move X0, X19
	336 Call 0x1D2D690
	337 Call 0x1991590

Method: System.Security.Cryptography.RSA FromCapiPublicKeyBlob(System.Byte[] blob, System.Int32 offset)

Disassembly:
	0x03218584 B 0x3218588
	0x03218588 MOV X21, X1
	0x0321858C MOV X20, X0
	0x03218590 CMP W21, 0x1
	0x03218594 B.NE 0x32185B0
	0x03218598 MOV X0, X20
	0x0321859C BL 0x3EB1AD0
	0x032185A0 LDR X21, [X0]
	0x032185A4 BL 0x3EB1AE0
	0x032185A8 MOV W20, W31
	0x032185AC B 0x32182CC
	0x032185B0 MOV X21, X31
	0x032185B4 B 0x32185BC
	0x032185B8 MOV X20, X0
	0x032185BC LDRB W8, [X31 + 0xC]
	0x032185C0 CBZ W8, 0x32185D0
	0x032185C4 MOV X0, X19
	0x032185C8 MOV X1, X31
	0x032185CC BL 0x33E14E4
	0x032185D0 CBNZ X21, 0x32185DC
	0x032185D4 MOV X0, X20
	0x032185D8 BL 0x1D2C690
	0x032185DC MOV X0, X21
	0x032185E0 BL 0x1C16F18
	0x032185E4 BL 0x1990590
	0x032185E8 SUB X31, X31, 0x40
	0x032185EC STP X30, X23, [X31 + 0x10]
	0x032185F0 STP X22, X21, [X31 + 0x20]
	0x032185F4 STP X20, X19, [X31 + 0x30]
	0x032185F8 ADRP X19, 0x11C4000
	0x032185FC ADRP X22, 0xF09000
	0x03218600 LDRB W8, [X19 + 0x2DE]
	0x03218604 LDR X22, [X22 + 0xC90]
	0x03218608 TBNZ X8, 0x0, 0x3218644
	0x0321860C ADRP X0, 0xF09000
	0x03218610 LDR X0, [X0 + 0xC90]
	0x03218614 BL 0x1C16CF4
	0x03218618 ADRP X0, 0xF02000
	0x0321861C LDR X0, [X0 + 0x1D0]
	0x03218620 BL 0x1C16CF4
	0x03218624 ADRP X0, 0xF09000
	0x03218628 LDR X0, [X0 + 0x298]
	0x0321862C BL 0x1C16CF4
	0x03218630 ADRP X0, 0xF09000
	0x03218634 LDR X0, [X0 + 0xCA8]
	0x03218638 BL 0x1C16CF4
	0x0321863C MOVZ W8, 0x1
	0x03218640 STRB W8, [X19 + 0x2DE]
	0x03218644 LDR X0, [X22]
	0x03218648 LDR W8, [X0 + 0xE0]
	0x0321864C CBNZ W8, 0x3218658
	0x03218650 BL 0x1C16DFC
	0x03218654 LDR X0, [X22]
	0x03218658 LDR X8, [X0 + 0xB8]
	0x0321865C LDR X19, [X8 + 0x20]
	0x03218660 STRB W31, [X31 + 0xC]
	0x03218664 ADD X1, X31, 0xC
	0x03218668 MOV X0, X19
	0x0321866C MOV X2, X31
	0x03218670 BL 0x33DE64C
	0x03218674 LDR X8, [X22]
	0x03218678 LDR W9, [X8 + 0xE0]
	0x0321867C CBNZ W9, 0x321868C
	0x03218680 MOV X0, X8
	0x03218684 BL 0x1C16DFC
	0x03218688 LDR X8, [X22]
	0x0321868C LDR X9, [X8 + 0xB8]
	0x03218690 LDR X10, [X9 + 0x8]
	0x03218694 CBZ X10, 0x32186B8
	0x03218698 LDR W10, [X8 + 0xE0]
	0x0321869C CBNZ W10, 0x32186B0
	0x032186A0 MOV X0, X8
	0x032186A4 BL 0x1C16DFC
	0x032186A8 LDR X8, [X22]
	0x032186AC LDR X9, [X8 + 0xB8]
	0x032186B0 LDRB W9, [X9]
	0x032186B4 CBNZ W9, 0x32187A0
	0x032186B8 MOVZ W0, 0x1A
	0x032186BC MOV X1, X31
	0x032186C0 BL 0x33C19D4

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+192], X30
	003 Move [X31+208], X20
	004 Move [X31+216], X19
	005 NotImplemented "Instruction MOVI not yet implemented."
	006 Add X8, X31, 64
	007 Move [X31+96], V0
	008 Move [X31+104], V0
	009 Move [X31+64], V0
	010 Move [X31+72], V0
	011 Call CryptoConvert.GetParametersFromCapiPublicKeyBlob, X0, X1
	012 Move X0, X31
	013 Call RSA.Create
	014 Move V0, [X31+64]
	015 Move V1, [X31+80]
	016 Move V2, [X31+96]
	017 Move V3, [X31+112]
	018 Move X19, X0
	019 Move [X31], V0
	020 Move [X31+8], V1
	021 Move [X31+32], V2
	022 Move [X31+40], V3
	023 Compare X0, 0
	024 JumpIfEqual {45}
	025 Move X8, [X19]
	026 Move V0, [X31]
	027 Move V1, [X31+16]
	028 Move V2, [X31+32]
	029 Move V3, [X31+48]
	030 Move X9, [X8+504]
	031 Move [X31+128], V0
	032 Move [X31+136], V1
	033 Move [X31+160], V2
	034 Move [X31+168], V3
	035 Move X2, [X8+512]
	036 Add X1, X31, 128
	037 Move X0, X19
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Move X0, X19
	040 Move X20, [X31+208]
	041 Move X19, [X31+216]
	042 Move X30, [X31+192]
	043 Add X31, X31, 224
	044 Return X0
	045 Call 0x1C17F20
	046 Move X19, X0
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X0, X19
	049 Call 0x3EB2AD0
	050 Move X19, X0
	051 Move X0, 0xEDC000
	052 Move X0, [X0+2000]
	053 Call 0x1C17D08
	054 Move X8, [X19]
	055 Move X1, [X8]
	056 Call 0x1C18270
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {82}
	061 Move X19, [X19]
	062 Call 0x3EB2AE0
	063 Move X0, 0xF09000
	064 Move X0, [X0+3296]
	065 Call 0x1C17D08
	066 Call 0x1C17F10
	067 Move X20, X0
	068 Move X0, 0xF0A000
	069 Move X0, [X0+3152]
	070 Call 0x1C17D08
	071 Move X1, X0
	072 Move X0, X20
	073 Move X2, X19
	074 Move X3, X31
	075 Call CryptographicException..ctor, X0, X1, X2
	076 Move X0, 0xF0A000
	077 Move X0, [X0+3160]
	078 Call 0x1C17D08
	079 Move X1, X0
	080 Move X0, X20
	081 Call 0x1C17DEC
	082 Move W0, 8
	083 Call 0x3EB2AF0
	084 Move X8, [X19]
	085 Move [X0], X8
	086 Move X1, 0xC9D000
	087 Add X1, X1, 3672
	088 Move X2, X31
	089 Call 0x3EB2B00
	090 Move X19, X0
	091 Call 0x3EB2AE0
	092 Move X0, X19
	093 Call 0x1D2D690
	094 Call 0x1991590

Method: System.Security.Cryptography.RSAParameters GetParametersFromCapiPublicKeyBlob(System.Byte[] blob, System.Int32 offset)

Disassembly:
	0x032186C4 ADRP X8, 0xF02000
	0x032186C8 LDR X8, [X8 + 0x1D0]
	0x032186CC MOV X20, X0
	0x032186D0 LDR X0, [X8]
	0x032186D4 LDR W8, [X0 + 0xE0]
	0x032186D8 CBNZ W8, 0x32186E0
	0x032186DC BL 0x1C16DFC
	0x032186E0 ADRP X8, 0xF09000
	0x032186E4 LDR X8, [X8 + 0x298]
	0x032186E8 LDR X1, [X8]
	0x032186EC MOV X0, X20
	0x032186F0 MOV X2, X31
	0x032186F4 BL 0x32FCE04
	0x032186F8 MOV X20, X0
	0x032186FC LDR X0, [X22]
	0x03218700 LDR W8, [X0 + 0xE0]
	0x03218704 CBNZ W8, 0x3218710
	0x03218708 BL 0x1C16DFC
	0x0321870C LDR X0, [X22]
	0x03218710 LDR X8, [X0 + 0xB8]
	0x03218714 ADRP X9, 0xF09000
	0x03218718 LDR X9, [X9 + 0xCA8]
	0x0321871C STR X20, [X8 + 0x8]
	0x03218720 LDR X1, [X9]
	0x03218724 MOV X0, X20
	0x03218728 MOV X2, X31
	0x0321872C BL 0x32FCE04
	0x03218730 LDR X8, [X22]
	0x03218734 LDR X8, [X8 + 0xB8]
	0x03218738 STR X0, [X8 + 0x8]
	0x0321873C MOV X1, X31
	0x03218740 BL 0x32EC360
	0x03218744 LDR X8, [X22]
	0x03218748 AND W10, W0, 0x1
	0x0321874C LDR X9, [X8 + 0xB8]
	0x03218750 STRB W10, [X9]
	0x03218754 TBNZ X0, 0x0, 0x32187A0
	0x03218758 LDR W10, [X8 + 0xE0]
	0x0321875C CBNZ W10, 0x3218770
	0x03218760 MOV X0, X8
	0x03218764 BL 0x1C16DFC
	0x03218768 LDR X8, [X22]
	0x0321876C LDR X9, [X8 + 0xB8]
	0x03218770 LDR X0, [X9 + 0x8]
	0x03218774 MOV X1, X31
	0x03218778 BL 0x32EC1CC
	0x0321877C LDR X8, [X22]
	0x03218780 LDR W9, [X8 + 0xE0]
	0x03218784 CBNZ W9, 0x3218794
	0x03218788 MOV X0, X8
	0x0321878C BL 0x1C16DFC
	0x03218790 LDR X8, [X22]
	0x03218794 LDR X9, [X8 + 0xB8]
	0x03218798 MOVZ W10, 0x1
	0x0321879C STRB W10, [X9]
	0x032187A0 LDR W9, [X8 + 0xE0]
	0x032187A4 CBNZ W9, 0x32187B4
	0x032187A8 MOV X0, X8
	0x032187AC BL 0x1C16DFC
	0x032187B0 LDR X8, [X22]
	0x032187B4 LDR X8, [X8 + 0xB8]
	0x032187B8 LDR X0, [X8 + 0x8]
	0x032187BC BL 0x3219394
	0x032187C0 TBNZ X0, 0x0, 0x32187E8
	0x032187C4 LDR X0, [X22]
	0x032187C8 LDR W8, [X0 + 0xE0]
	0x032187CC CBNZ W8, 0x32187D8
	0x032187D0 BL 0x1C16DFC
	0x032187D4 LDR X0, [X22]
	0x032187D8 LDR X8, [X0 + 0xB8]
	0x032187DC LDR X0, [X8 + 0x8]
	0x032187E0 BL 0x32192F0
	0x032187E4 TBZ X0, 0x0, 0x32188EC
	0x032187E8 MOV X21, X31
	0x032187EC MOVZ W20, 0xB
	0x032187F0 LDRB W8, [X31 + 0xC]
	0x032187F4 CBZ W8, 0x3218804
	0x032187F8 MOV X0, X19
	0x032187FC MOV X1, X31
	0x03218800 BL 0x33E14E4
	0x03218804 CBNZ X21, 0x3218868
	0x03218808 CMP W20, 0xB
	0x0321880C B.EQ 0x3218814
	0x03218810 CBNZ W20, 0x3218854
	0x03218814 LDR X0, [X22]
	0x03218818 LDR W8, [X0 + 0xE0]
	0x0321881C CBNZ W8, 0x3218828
	0x03218820 BL 0x1C16DFC
	0x03218824 LDR X0, [X22]
	0x03218828 LDR X8, [X0 + 0xB8]
	0x0321882C LDR X0, [X8 + 0x8]
	0x03218830 BL 0x3219394
	0x03218834 TBZ X0, 0x0, 0x3218870
	0x03218838 LDR X0, [X22]
	0x0321883C LDR W8, [X0 + 0xE0]
	0x03218840 CBNZ W8, 0x321884C
	0x03218844 BL 0x1C16DFC
	0x03218848 LDR X0, [X22]
	0x0321884C LDR X8, [X0 + 0xB8]
	0x03218850 LDR X0, [X8 + 0x8]
	0x03218854 LDP X20, X19, [X31 + 0x30]
	0x03218858 LDP X22, X21, [X31 + 0x20]
	0x0321885C LDP X30, X23, [X31 + 0x10]
	0x03218860 ADD X31, X31, 0x40
	0x03218864 RET
	0x03218868 MOV X0, X21
	0x0321886C BL 0x1C16F18
	0x03218870 ADRP X0, 0xF09000
	0x03218874 LDR X0, [X0 + 0xCD0]
	0x03218878 BL 0x1C16D08
	0x0321887C ADRP X20, 0xF09000
	0x03218880 LDR X20, [X20 + 0xC90]
	0x03218884 MOV X19, X0
	0x03218888 MOV X0, X20
	0x0321888C BL 0x1C16D08
	0x03218890 BL 0x19903D0
	0x03218894 MOV X0, X20
	0x03218898 BL 0x1C16D08
	0x0321889C LDR X8, [X0 + 0xB8]
	0x032188A0 MOV X0, X19
	0x032188A4 MOV X2, X31
	0x032188A8 LDR X1, [X8 + 0x8]
	0x032188AC BL 0x321EFD0
	0x032188B0 MOV X19, X0
	0x032188B4 ADRP X0, 0xF08000
	0x032188B8 LDR X0, [X0 + 0xCE0]
	0x032188BC BL 0x1C16D08
	0x032188C0 BL 0x1C16F10
	0x032188C4 MOV X1, X19
	0x032188C8 MOV X2, X31
	0x032188CC MOV X20, X0
	0x032188D0 BL 0x3252170
	0x032188D4 ADRP X0, 0xF09000
	0x032188D8 LDR X0, [X0 + 0xCD8]
	0x032188DC BL 0x1C16D08
	0x032188E0 MOV X1, X0
	0x032188E4 MOV X0, X20
	0x032188E8 BL 0x1C16DEC
	0x032188EC ADRP X0, 0xF09000
	0x032188F0 LDR X0, [X0 + 0xCE0]
	0x032188F4 BL 0x1C16D08
	0x032188F8 MOV X20, X0
	0x032188FC ADRP X0, 0xF09000
	0x03218900 LDR X0, [X0 + 0xC90]
	0x03218904 BL 0x1C16D08
	0x03218908 LDR W8, [X0 + 0xE0]
	0x0321890C CBNZ W8, 0x3218914
	0x03218910 BL 0x1C16DFC
	0x03218914 ADRP X0, 0xF09000
	0x03218918 LDR X0, [X0 + 0xC90]
	0x0321891C BL 0x1C16D08
	0x03218920 LDR X8, [X0 + 0xB8]
	0x03218924 LDR X1, [X8 + 0x8]
	0x03218928 MOV X0, X20
	0x0321892C MOV X2, X31
	0x03218930 BL 0x321EFD0
	0x03218934 MOV X20, X0
	0x03218938 ADRP X0, 0xF09000
	0x0321893C LDR X0, [X0 + 0x7A8]
	0x03218940 BL 0x1C16D08
	0x03218944 BL 0x1C16F10
	0x03218948 MOV X21, X0
	0x0321894C MOV X1, X20
	0x03218950 MOV X2, X31
	0x03218954 BL 0x32E16BC
	0x03218958 ADRP X0, 0xF09000
	0x0321895C LDR X0, [X0 + 0xCD8]
	0x03218960 BL 0x1C16D08
	0x03218964 MOV X1, X0
	0x03218968 MOV X0, X21
	0x0321896C BL 0x1C16DEC
	0x03218970 B 0x3218AAC
	0x03218974 B 0x3218AAC
	0x03218978 B 0x3218AAC
	0x0321897C B 0x3218980
	0x03218980 MOV X21, X1
	0x03218984 MOV X20, X0
	0x03218988 CMP W21, 0x1
	0x0321898C B.NE 0x3218AB4
	0x03218990 MOV X0, X20
	0x03218994 BL 0x3EB1AD0
	0x03218998 MOV X20, X0
	0x0321899C ADRP X0, 0xEDB000
	0x032189A0 LDR X0, [X0 + 0x7D0]
	0x032189A4 BL 0x1C16D08
	0x032189A8 LDR X8, [X20]
	0x032189AC LDR X1, [X8]
	0x032189B0 BL 0x1C17270
	0x032189B4 TBZ X0, 0x0, 0x3218A48
	0x032189B8 LDR X20, [X20]
	0x032189BC BL 0x3EB1AE0
	0x032189C0 ADRP X0, 0xF09000
	0x032189C4 LDR X0, [X0 + 0xCE8]
	0x032189C8 BL 0x1C16D08
	0x032189CC MOV X21, X0
	0x032189D0 ADRP X0, 0xF09000
	0x032189D4 LDR X0, [X0 + 0xC90]
	0x032189D8 BL 0x1C16D08
	0x032189DC LDR W8, [X0 + 0xE0]
	0x032189E0 CBNZ W8, 0x32189E8
	0x032189E4 BL 0x1C16DFC
	0x032189E8 ADRP X0, 0xF09000
	0x032189EC LDR X0, [X0 + 0xC90]
	0x032189F0 BL 0x1C16D08
	0x032189F4 LDR X8, [X0 + 0xB8]
	0x032189F8 LDR X1, [X8 + 0x8]
	0x032189FC MOV X0, X21
	0x03218A00 MOV X2, X31
	0x03218A04 BL 0x321EFD0
	0x03218A08 MOV X23, X0
	0x03218A0C ADRP X0, 0xF08000
	0x03218A10 LDR X0, [X0 + 0xCE0]
	0x03218A14 BL 0x1C16D08
	0x03218A18 BL 0x1C16F10
	0x03218A1C MOV X21, X0
	0x03218A20 MOV X1, X23
	0x03218A24 MOV X2, X20
	0x03218A28 MOV X3, X31
	0x03218A2C BL 0x325240C
	0x03218A30 ADRP X0, 0xF09000
	0x03218A34 LDR X0, [X0 + 0xCD8]
	0x03218A38 BL 0x1C16D08
	0x03218A3C MOV X1, X0
	0x03218A40 MOV X0, X21
	0x03218A44 BL 0x1C16DEC
	0x03218A48 MOVZ W0, 0x8
	0x03218A4C BL 0x3EB1AF0
	0x03218A50 LDR X8, [X20]
	0x03218A54 STR X8, [X0]
	0x03218A58 ADRP X1, 0xC9C000
	0x03218A5C ADD X1, X1, 0xE58
	0x03218A60 MOV X2, X31
	0x03218A64 BL 0x3EB1B00
	0x03218A68 B 0x3218AAC
	0x03218A6C B 0x3218AAC
	0x03218A70 B 0x3218AAC
	0x03218A74 B 0x3218AAC
	0x03218A78 B 0x3218AAC
	0x03218A7C MOV X21, X1
	0x03218A80 MOV X20, X0
	0x03218A84 BL 0x3EB1AE0
	0x03218A88 B 0x3218AB4
	0x03218A8C B 0x3218AAC

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+64], X24
	004 Move [X31+72], X23
	005 Move [X31+80], X22
	006 Move [X31+88], X21
	007 Move [X31+96], X20
	008 Move [X31+104], X19
	009 Move X22, 0x11C5000
	010 Move W9, [X22+727]
	011 Move W21, W1
	012 Move X20, X0
	013 Move X19, X8
	014 Move TEMP, X9
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xF09000
	019 Move X0, [X0+3024]
	020 Call 0x1C17CF4
	021 Move X0, 0xEDC000
	022 Move X0, [X0+1560]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+727], W8
	026 Compare X20, 0
	027 JumpIfEqual {147}
	028 Move W8, [X20+24]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Add X9, X20, W21
	031 Move W9, [X9+32]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Add W9, W21, 1
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Add X9, X20, W9
	036 Move W9, [X9+32]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Add W9, W21, 2
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Add X9, X20, W9
	041 Move W9, [X9+32]
	042 Compare W9, 0
	043 JumpIfNotEqual {129}
	044 Add W9, W21, 3
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Add X8, X20, W9
	047 Move W8, [X8+32]
	048 Compare W8, 0
	049 JumpIfNotEqual {129}
	050 Add W1, W21, 8
	051 Move X0, X20
	052 Call CryptoConvert.ToUInt32LE, X0, X1
	053 Move W8, 0x5352
	054 NotImplemented "Instruction MOVK not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Add W1, W21, 12
	057 Move X0, X20
	058 Call CryptoConvert.ToInt32LE, X0, X1
	059 Move X24, 0xEDC000
	060 Move X24, [X24+1560]
	061 Move W23, W0
	062 NotImplemented "Instruction MOVI not yet implemented."
	063 Move [X31+16], V0
	064 Move [X31+24], V0
	065 Move X0, [X24]
	066 Move [X31], V0
	067 Move W1, 3
	068 Call 0x1C17D6C
	069 Move W8, [X20+24]
	070 Add W9, W21, 18
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X22, X0
	073 Compare X0, 0
	074 JumpIfEqual {182}
	075 Move W8, [X22+24]
	076 Compare W8, 0
	077 JumpIfEqual {183}
	078 Add X9, X20, W9
	079 Move W9, [X9+32]
	080 Move [X22+32], W9
	081 Move W10, [X20+24]
	082 Add W9, W21, 17
	083 NotImplemented "Instruction CMP not yet implemented."
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Add X9, X20, W9
	086 Move W9, [X9+32]
	087 Move [X22+33], W9
	088 Move W10, [X20+24]
	089 Add W9, W21, 16
	090 NotImplemented "Instruction CMP not yet implemented."
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Add X8, X20, W9
	093 Move W8, [X8+32]
	094 Move [X22+34], W8
	095 Move X0, [X24]
	096 NotImplemented "Instruction SBFM not yet implemented."
	097 Move W1, W24
	098 Call 0x1C17D6C
	099 Move X23, X0
	100 Add W1, W21, 20
	101 Move X0, X20
	102 Move X2, X23
	103 Move W3, W31
	104 Move W4, W24
	105 Move X5, X31
	106 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	107 Move X8, 0xF09000
	108 Move X8, [X8+3024]
	109 Move X1, [X8]
	110 Move X0, X23
	111 Call 0x21475E8, X0
	112 Move V2, [X31+16]
	113 Move V0, [X31+32]
	114 Move V1, [X31]
	115 Move [X19], X22
	116 Move [X19+8], X23
	117 Move X22, [X31+80]
	118 Move X21, [X31+88]
	119 Move [X19+32], V2
	120 Move [X19+40], V0
	121 Move [X19+1], V1
	122 Move X20, [X31+96]
	123 Move X19, [X31+104]
	124 Move X24, [X31+64]
	125 Move X23, [X31+72]
	126 Move X30, [X31+48]
	127 Add X31, X31, 112
	128 Return X0
	129 Move X0, 0xF09000
	130 Move X0, [X0+3296]
	131 Call 0x1C17D08
	132 Call 0x1C17F10
	133 Move X19, X0
	134 Move X0, 0xF0A000
	135 Move X0, [X0+3120]
	136 Call 0x1C17D08
	137 Move X1, X0
	138 Move X0, X19
	139 Move X2, X31
	140 Call CryptographicException..ctor, X0, X1
	141 Move X0, 0xF0A000
	142 Move X0, [X0+3168]
	143 Call 0x1C17D08
	144 Move X1, X0
	145 Move X0, X19
	146 Call 0x1C17DEC
	147 Move X0, 0xEE1000
	148 Move X0, [X0+1320]
	149 Call 0x1C17D08
	150 Call 0x1C17F10
	151 Move X19, X0
	152 Move X0, 0xF0A000
	153 Move X0, [X0+3136]
	154 Call 0x1C17D08
	155 Move X1, X0
	156 Move X0, X19
	157 Move X2, X31
	158 Call ArgumentNullException..ctor, X0, X1
	159 Move X0, 0xEE4000
	160 Move X0, [X0+1400]
	161 Call 0x1C17D08
	162 Call 0x1C17F10
	163 Move X19, X0
	164 Move X0, 0xF0A000
	165 Move X0, [X0+3144]
	166 Call 0x1C17D08
	167 Move X1, X0
	168 Move X0, X19
	169 Move X2, X31
	170 Call ArgumentException..ctor, X0, X1
	171 Move X0, 0xF0A000
	172 Move X0, [X0+3168]
	173 Call 0x1C17D08
	174 Move X1, X0
	175 Move X0, X19
	176 Call 0x1C17DEC
	177 Call 0x1C17F28
	178 Call 0x1C17F28
	179 Call 0x1C17F28
	180 Call 0x1C17F28
	181 Call 0x1C17F28
	182 Call 0x1C17F20
	183 Call 0x1C17F28
	184 Call 0x1C17F28
	185 Call 0x1C17F28
	186 Call 0x1C17F28
	187 Call 0x1C17F28
	188 Move X19, X0
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move X0, X19
	191 Call 0x3EB2AD0
	192 Move X19, X0
	193 Move X0, 0xEDC000
	194 Move X0, [X0+2000]
	195 Call 0x1C17D08
	196 Move X8, [X19]
	197 Move X1, [X8]
	198 Call 0x1C18270
	199 Move TEMP, X0
	200 And TEMP, TEMP, 1
	201 Compare TEMP, 1
	202 JumpIfNotEqual {224}
	203 Move X19, [X19]
	204 Call 0x3EB2AE0
	205 Move X0, 0xF09000
	206 Move X0, [X0+3296]
	207 Call 0x1C17D08
	208 Call 0x1C17F10
	209 Move X20, X0
	210 Move X0, 0xF0A000
	211 Move X0, [X0+3152]
	212 Call 0x1C17D08
	213 Move X1, X0
	214 Move X0, X20
	215 Move X2, X19
	216 Move X3, X31
	217 Call CryptographicException..ctor, X0, X1, X2
	218 Move X0, 0xF0A000
	219 Move X0, [X0+3168]
	220 Call 0x1C17D08
	221 Move X1, X0
	222 Move X0, X20
	223 Call 0x1C17DEC
	224 Move W0, 8
	225 Call 0x3EB2AF0
	226 Move X8, [X19]
	227 Move [X0], X8
	228 Move X1, 0xC9D000
	229 Add X1, X1, 3672
	230 Move X2, X31
	231 Call 0x3EB2B00
	232 Move X19, X0
	233 Call 0x3EB2AE0
	234 Move X0, X19
	235 Call 0x1D2D690
	236 Call 0x1991590

Method: System.Security.Cryptography.RSA FromCapiKeyBlob(System.Byte[] blob)

Disassembly:
	0x03218A90 B 0x3218AAC
	0x03218A94 B 0x3218AAC

ISIL:
	001 Move W1, W31

Method: System.Security.Cryptography.RSA FromCapiKeyBlob(System.Byte[] blob, System.Int32 offset)

Disassembly:
	0x03218A98 B 0x3218AAC
	0x03218A9C B 0x3218AAC
	0x03218AA0 B 0x3218AAC
	0x03218AA4 B 0x3218AAC
	0x03218AA8 B 0x3218AAC
	0x03218AAC MOV X21, X1
	0x03218AB0 MOV X20, X0
	0x03218AB4 CMP W21, 0x1
	0x03218AB8 B.NE 0x3218AD4
	0x03218ABC MOV X0, X20
	0x03218AC0 BL 0x3EB1AD0
	0x03218AC4 LDR X21, [X0]
	0x03218AC8 BL 0x3EB1AE0
	0x03218ACC MOV W20, W31
	0x03218AD0 B 0x32187F0
	0x03218AD4 MOV X21, X31
	0x03218AD8 B 0x3218AE0
	0x03218ADC MOV X20, X0
	0x03218AE0 LDRB W8, [X31 + 0xC]
	0x03218AE4 CBZ W8, 0x3218AF4
	0x03218AE8 MOV X0, X19
	0x03218AEC MOV X1, X31
	0x03218AF0 BL 0x33E14E4
	0x03218AF4 CBNZ X21, 0x3218B00
	0x03218AF8 MOV X0, X20
	0x03218AFC BL 0x1D2C690
	0x03218B00 MOV X0, X21
	0x03218B04 BL 0x1C16F18
	0x03218B08 BL 0x1990590
	0x03218B0C LDR X0, [X0 + 0x18]
	0x03218B10 RET
	0x03218B14 LDR X8, [X0 + 0x18]
	0x03218B18 CBZ X8, 0x3218B20
	0x03218B1C RET
	0x03218B20 STR X1, [X0 + 0x18]
	0x03218B24 RET
	0x03218B28 LDR X8, [X0 + 0x18]
	0x03218B2C CMP X8, 0x0
	0x03218B30 CSET W0, EQ
	0x03218B34 RET
	0x03218B38 STR X30, [X31 - 0x30]!
	0x03218B3C STP X22, X21, [X31 + 0x10]
	0x03218B40 STP X20, X19, [X31 + 0x20]
	0x03218B44 ADRP X19, 0x11C4000
	0x03218B48 LDRB W8, [X19 + 0x2DC]
	0x03218B4C MOV X20, X0
	0x03218B50 TBNZ X8, 0x0, 0x3218B68
	0x03218B54 ADRP X0, 0xEDB000
	0x03218B58 LDR X0, [X0 + 0xE00]
	0x03218B5C BL 0x1C16CF4
	0x03218B60 MOVZ W8, 0x1
	0x03218B64 STRB W8, [X19 + 0x2DC]
	0x03218B68 MOV X0, X20
	0x03218B6C BL 0x3217E14
	0x03218B70 MOV X1, X31
	0x03218B74 BL 0x32E57A8
	0x03218B78 MOV W21, W0
	0x03218B7C TBZ X0, 0x0, 0x3218C1C
	0x03218B80 MOV X0, X20
	0x03218B84 BL 0x3217E14
	0x03218B88 MOV X1, X31
	0x03218B8C BL 0x32ECE10
	0x03218B90 MOV X19, X0
	0x03218B94 CBZ X0, 0x3218C30
	0x03218B98 LDR X8, [X19]
	0x03218B9C LDP X9, X1, [X8 + 0x1E8]
	0x03218BA0 MOV X0, X19
	0x03218BA4 BLR X9
	0x03218BA8 MOV X1, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X0, 0
	004 JumpIfEqual {27}
	005 Move W8, [X0+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Add X9, X0, W1
	008 Move W9, [X9+32]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Compare W9, 0
	012 JumpIfNotEqual {51}
	013 Add W1, W1, 12
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Add X8, X0, W1
	016 Move W8, [X8+32]
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 Call CryptoConvert.FromCapiPublicKeyBlob, X0, X1
	021 Return X0
	022 Move X30, [X31+16]
	023 Move X19, [X31+24]
	024 Call CryptoConvert.FromCapiPrivateKeyBlob, X0, X1
	025 Return X0
	026 Call 0x1C17F28
	027 Move X0, 0xEE1000
	028 Move X0, [X0+1320]
	029 Call 0x1C17D08
	030 Call 0x1C17F10
	031 Move X19, X0
	032 Move X0, 0xF0A000
	033 Move X0, [X0+3136]
	034 Call 0x1C17D08
	035 Move X1, X0
	036 Move X0, X19
	037 Move X2, X31
	038 Call ArgumentNullException..ctor, X0, X1
	039 Move X0, 0xEE4000
	040 Move X0, [X0+1400]
	041 Call 0x1C17D08
	042 Call 0x1C17F10
	043 Move X19, X0
	044 Move X0, 0xF0A000
	045 Move X0, [X0+3144]
	046 Call 0x1C17D08
	047 Move X1, X0
	048 Move X0, X19
	049 Move X2, X31
	050 Call ArgumentException..ctor, X0, X1
	051 Move X0, 0xF09000
	052 Move X0, [X0+3296]
	053 Call 0x1C17D08
	054 Call 0x1C17F10
	055 Move X19, X0
	056 Move X0, 0xF0A000
	057 Move X0, [X0+3176]
	058 Call 0x1C17D08
	059 Move X1, X0
	060 Move X0, X19
	061 Move X2, X31
	062 Call CryptographicException..ctor, X0, X1
	063 Move X0, 0xF0A000
	064 Move X0, [X0+3184]
	065 Call 0x1C17D08
	066 Move X1, X0
	067 Move X0, X19
	068 Call 0x1C17DEC

